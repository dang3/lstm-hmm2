or
add
sub
add
push
xchg
add
pusha
xchg
add
outsl
xchg
add
test
add
mov
xchg
add
lret
add
xchg
add
icebp
xchg
add
add
add
ss
add
inc
xchg
add
push
xchg
add
addr16
add
jbe
add
mov
add
mov
add
lds
add
out
add
icebp
xchg
add
push
xchg
add
sbb
add
xor
xchg
add
push
xchg
add
fs
add
jb
add
xchg
add
mov
add
rcll
add
xchg
add
stc
xchg
add
sete
es
add
ds
add
push
xchg
add
bound
add
xchg
add
mov
add
lret
add
xchg
add
sti
xchg
add
adc
add
cs
add
inc
xchg
add
dec
xchg
add
pop
xchg
add
jno
add
mov
add
mov
xchg
add
call
xchg
add
adc
add
sub
add
pop
xchg
add
addr16
add
jne
add
test
add
test
add
mov
xchg
add
out
add
stc
xchg
add
adc
add
xor
add
push
xchg
add
fs
add
jbe
add
xchg
xchg
add
test
xchg
add
rclb
add
add
add
fstl
add
add
add
icebp
xchg
add
or
add
es
add
cmp
add
push
cwtl
add
cbtw
add
jb
add
test
add
lods
cwtl
add
mov
cwtl
add
loopne
add
std
cwtl
add
setns
es
add
cmp
add
pop
cltd
add
outsl
cltd
add
jl
add
mov
add
mov
add
ret
add
cltd
add
out
add
hlt
cltd
add
push
lcall
xor
add
dec
lcall
push
add
sbbl
add
mov
add
ret
lcall
in
add
add
add
and
add
xor
add
fs
add
jg
add
xchg
fwait
add
movsl
fwait
add
mov
fwait
add
out
add
fwait
add
or
add
sbb
add
pushf
add
push
pushf
add
gs
add
jb
add
sbbb
sahf
pushf
add
mov
add
mov
pushf
add
repnz
add
add
popf
add
and
add
dec
popf
add
insb
popf
add
sbbl
add
mov
add
lret
popf
add
ficomps
add
or
add
das
sahf
add
imul
pop
insl
jne
add
call
int
addl
lcall
rolb
ret
mov
add
pop
js
push
pop
jae
movsb
dec
into
gs
out
jmp
arpl
sub
arpl
push
adc
lods
cltd
dec
scas
push
aam
mov
fidivl
dec
cmp
mov
cmp
xchg
imul
ljmp
scas
addr16
adc
icebp
and
jp
popa
mov
xchg
pop
pusha
shrb
cmp
xlat
push
scas
mov
out
lods
push
pop
xchg
add
jmp
lds
pop
stos
ljmp
add
mov
pusha
dec
stc
stos
jno
int
lea
jg
adc
insl
or
rcrb
and
mov
jne
test
inc
popa
mov
mov
lcall
adc
add
dec
stc
adc
inc
repz
xor
cli
std
dec
push
cltd
push
outsb
xor
icebp
fcoml
push
into
lea
rcrl
ljmp
std
inc
add
cltd
test
aam
bound
mov
xrelease
jmp
popf
dec
gs
push
popa
fldl
xlat
testb
mov
icebp
movl
jb
and
iret
mov
lods
pop
fistpl
pop
fcomp
mov
mov
dec
in
ss
shll
jno
mov
inc
out
push
enter
call
pusha
pop
test
ret
mov
in
inc
jns
gs
lods
xor
repnz
enter
jge
jge
jle
sbb
push
sub
scas
add
fnstenv
xor
cmp
es
repnz
or
popf
xor
dec
fidivs
loop
xchg
ja
ficompl
out
loopne
pop
pop
lret
dec
popf
inc
add
rcrl
dec
push
gs
loope
cmp
mov
sub
add
push
arpl
push
call
adc
insl
std
pushf
pop
adc
cmc
fcoms
inc
or
cmp
loop
test
into
rcrb
rorl
sub
or
mov
cltd
jl
sahf
js
dec
repnz
out
loope
pop
cld
imul
fcoms
and
pop
shlb
push
insl
cmp
cmp
decb
cmc
in
xchg
xchg
and
xchg
std
pop
out
or
jl
jg
movsb
adc
pusha
imul
shlb
cli
push
jmp
sub
xchg
and
outsl
ds
and
bound
test
decb
jp
fisubrs
pop
out
and
inc
jl
or
out
addr16
sbb
movsb
jmp
jmp
gs
ljmp
cmp
xor
or
arpl
rorb
add
mov
ss
stos
and
push
out
xchg
inc
dec
mov
inc
gs
leave
xchg
ds
xchg
mov
ret
push
cld
sub
cmp
cmp
fstps
and
pop
addr16
gs
xchg
jmp
test
mov
or
dec
es
mov
mov
and
inc
xchg
fwait
pop
ss
cmp
cltd
xchg
enter
pop
lahf
incb
mov
push
sub
dec
pushl
call
cmp
and
js
pusha
outsb
push
out
inc
mov
test
fldt
das
ds
inc
pop
dec
pop
gs
and
test
decl
jb
lock
in
push
andb
ret
in
fldt
pushf
stos
int3
pushf
jmp
xchg
adc
dec
les
pop
inc
stos
adc
in
dec
jns
xchg
andb
cltd
fiadds
pop
mov
push
mov
add
dec
sub
rcll
pop
adc
jle
rorl
std
ss
fsubl
xchg
scas
xor
cmp
sbb
sbb
scas
sti
add
mov
pop
ss
insb
sbbl
mov
sahf
mov
and
movsl
pop
push
mov
dec
push
inc
test
mov
cli
xor
inc
and
add
or
adc
add
lods
repnz
or
or
adc
xor
jnp
ds
test
jae
or
push
scas
dec
fcoml
add
cmp
pop
lahf
sbb
xchg
pop
aad
stos
sti
out
bound
jge
push
test
mov
inc
jle
mov
test
aam
push
push
xchg
inc
push
mov
mov
xchg
jle
loope
and
nop
jno
dec
jbe
jecxz
dec
aas
bound
add
js
ja
pop
push
xlat
ds
dec
aas
dec
leave
test
xchg
les
lods
dec
stc
xor
xchg
fnsave
out
push
xchg
mov
xchg
jle
xchg
add
adc
push
pop
adc
sbb
addr16
mov
mov
dec
test
xor
mov
pop
clc
addr16
sub
shlb
push
or
ret
cmpsb
xor
jb
jp
xor
cmp
and
je
mov
addb
or
mov
mov
or
aas
scas
mov
cld
or
lods
das
testl
push
mov
push
push
xchg
mov
mov
mov
roll
daa
push
in
int3
pop
outsb
addl
jmp
or
jbe
push
or
cld
pop
and
xor
movsl
lock
addr16
xlat
dec
jbe
add
test
repnz
or
mov
jle
or
sbb
jno
hlt
sbb
push
push
sbb
sbb
lea
add
lods
xor
call
fistpl
sub
and
mov
addr16
sti
outsb
lock
fcoml
push
dec
int
push
pop
daa
xadd
push
mov
lcall
or
repz
pop
insl
clc
mov
fadds
jl
push
in
jl
xchg
adc
add
mov
mov
add
inc
pop
cwtl
in
jne
add
dec
stc
fwait
nop
pop
lods
mov
or
movsb
or
xor
das
sub
stos
pop
xor
insl
mov
sarl
lret
and
sub
and
jecxz,pt
mov
sub
add
push
stc
lods
push
outsb
arpl
sti
inc
mov
neg
imul
mov
in
lcall
xchg
pop
dec
xchg
fisttps
pop
xchg
clc
xchg
js
arpl
sub
jecxz
mov
cmp
sub
int
rcrl
inc
inc
les
mov
pusha
xchg
sbb
fwait
andl
in
pusha
inc
ss
and
dec
jo
cs
idivb
ss
hlt
mov
or
jno,pn
repz
mov
gs
insl
pop
jno
xchg
jo
or
adc
data16
and
xor
dec
push
mov
int3
inc
mov
gs
jl
jns
enter
jge
test
enter
cmp
call
dec
ja
movsb
push
dec
or
jecxz
loop
lret
lods
mov
scas
jle
std
sbb
das
sbb
cld
xor
jbe
inc
lahf
bound
jge
add
pushf
das
daa
jl
and
xchg
pop
and
cmp
push
mov
sub
sub
loop
jecxz
ja
mov
stos
aam
ss
cmpsb
xchg
push
pop
inc
jmp
fwait
inc
imul
popf
dec
pop
inc
and
scas
fldcw
add
cld
aas
mov
lahf
jecxz
jl
movsl
xchg
dec
mov
out
bound
scas
xor
jb
mov
repnz
mov
mov
inc
dec
xchg
mov
adc
popfw
xor
fimuls
loopne
jp
test
test
aaa
into
mov
sbb
jae
mov
cmp
fcomps
notb
push
call
in
xor
repz
fldcw
xlat
lds
mov
test
daa
push
leave
mov
roll
dec
hlt
rcrb
xor
testl
divl
sbb
push
xor
or
cmpsb
pop
test
sbb
push
push
sbb
stos
das
jb
push
dec
lret
ret
cmp
dec
lahf
xor
outsl
test
cmp
icebp
js
xchg
jp
adc
jae
nop
idivl
imull
xor
das
pushf
sub
insl
in
sahf
pushf
push
pop
fwait
test
testl
int3
dec
mov
push
and
movsl
rclb
pop
mov
mov
jne
pop
into
jae
insl
dec
js
lcall
ss
cmp
aad
xor
dec
test
mov
mov
lea
dec
mov
mov
add
lods
sahf
std
mov
enter
and
pop
xorb
pop
lcall
imul
pop
lret
adc
jne
lret
ds
add
cmp
push
std
add
pop
scas
data16
xchg
hlt
fadd
outsb
adc
mov
pop
jg
lods
inc
insb
or
mov
sbb
scas
sub
pop
mov
sbb
outsl
leave
fcoml
enter
mov
pusha
dec
fiadds
out
in
aaa
or
pop
and
inc
xchg
sbb
xchg
cmp
arpl
shl
ud0
shll
lahf
adc
shrb
int3
out
mov
jg
sahf
cld
xchg
mov
out
popf
movsl
pop
jbe
cmpsb
jne
jge
mov
icebp
and
cmp
pushf
lahf
pushf
or
cmp
stos
pop
cli
mov
movsl
add
ss
cmpsl
out
nop
inc
out
mov
scas
in
roll
mov
mov
xor
test
sbb
jle
pop
faddl
push
inc
push
mov
xlat
loope
cwtl
adc
dec
cltd
push
add
mov
xchg
pushf
rcr
mov
jae
loop
subb
rdtsc
into
sbbl
test
jge
pop
push
test
movsl
sbb
jb
push
repz
dec
xor
inc
in
adc
je
jb
pop
ret
xchg
jge
dec
mov
pop
jne
jne
jge
test
cmc
mov
roll
pop
loopne
aam
iret
sbb
setnp
test
cli
les
or
push
and
clc
popl
fisttps
xor
cmpb
cld
dec
push
push
fsubl
popf
pusha
lret
insb
sub
xchg
sbb
mov
inc
stc
rcrb
in
or
jge
or
lahf
jnp
sbb
jmp
push
mov
inc
and
aas
negb
and
push
mov
mov
mov
cmp
inc
in
ret
inc
scas
testl
cmp
fcoms
rorb
and
add
xchg
repnz
cld
aas
xorl
jno
pop
rorb
sub
jl
scas
sahf
adc
jle
push
aaa
cmp
in
dec
lret
lret
cmpsb
pop
movsl
push
jmp
adc
test
mov
cs
aas
cltd
add
daa
mov
sahf
fsubs
test
loop
xor
int
sbbl
pop
ror
ret
mov
add
push
mov
adc
les
xchg
jae
sub
jne
mov
rcll
and
cmp
xchg
jb
cwtl
xchg
push
cmp
popf
sub
fistl
mov
xchg
push
js
sarl
es
push
mov
test
aas
or
dec
or
pop
gs
or
outsl
inc
roll
mov
js,pn
in
loop
jnp
add
fdivs
mov
and
data16
mov
lea
mov
sbb
aaa
lods
hlt
push
mov
adc
lods
sub
xchg
cs
lret
mov
push
stos
sub
inc
cli
mov
icebp
add
adc
add
pop
clc
adc
cwtl
out
sbb
jo
and
imul
xchg
aam
test
lcall
push
mov
scas
jle
mov
lods
jmp
aaa
mov
cmp
pop
test
repnz
xchg
ror
add
icebp
inc
imul
cli
mov
gs
lret
mov
fidivrs
pop
pop
pop
or
pop
pop
sbb
mov
push
lahf
int3
push
mov
popf
mov
adc
test
pop
es
pop
or
aad
cmp
testb
mov
lods
cmp
imul
mov
add
imul
ss
adc
scas
outsb
scas
cmp
sub
xchg
jns
dec
outsl
aam
imul
and
adc
mov
int3
xorl
clc
cmpsb
popa
jecxz
adc
out
sub
and
xchg
cmpsb
mov
push
mov
or
bound
fidivl
leave
xchg
fcomps
jmp
ds
fisttps
in
aad
dec
lret
cli
cmc
cs
rclb
xorb
lods
xchg
cmp
ror
mov
push
mov
shrb
es
mov
ret
sbb
pop
lea
inc
xchg
daa
imul
aas
xor
pop
mov
shll
insb
adc
lcall
daa
mov
ficomps
sub
cmp
push
sbb
jmp
pusha
push
leave
cmpsl
les
movsb
mov
ljmp
mov
out
fnstsw
ljmp
cmp
xor
lock
ss
cmc
dec
int
test
pushf
mov
jmp
in
mov
xor
adc
mov
sub
cmp
lahf
inc
mov
pop
adc
icebp
inc
ja
fdivrl
push
adcb
sub
jnp
cmpb
cltd
push
out
ds
shlb
out
fwait
mov
adc
fnstcw
adcl
mov
sub
xchg
pushl
fdivrl
pop
mov
mov
test
push
dec
shl
jne
cmc
push
mov
and
loopne
adc
and
jp
sahf
lret
mov
mov
pusha
sbb
sub
mov
add
stos
lcall
rol
out
jo
dec
enter
cmp
int
cmp
cmpsl
or
imul
inc
daa
arpl
mov
push
out
jecxz
aad
jns
roll
add
ret
sub
add
mov
xchg
pop
inc
stos
or
bound
rorb
outsb
mov
clc
xchg
int
xchg
mov
scas
clc
adc
adc
adc
lea
loope
add
jge
mov
fcmovu
adc
sahf
int3
xchg
xchg
xchg
insb
outsl
push
mov
js
add
push
cmpsl
repz
fiaddl
add
inc
ja
push
and
mov
andl
jnp
loopne
cld
mov
lea
sbb
sti
dec
push
xor
or
jb
js
xchg
sbb
mov
pop
push
es
lods
inc
sub
fldcw
mov
sbb
cmp
out
add
gs
ret
mov
leave
outsl
adc
addr16
mov
mov
rolb
lods
aaa
push
add
pop
push
cmp
sub
pop
mov
xor
ret
jae
cmp
jge
ja
fs
pop
and
cmp
adc
jg
clc
xchg
dec
xor
mov
push
inc
sub
paddsb
gs
or
lods
push
daa
adc
shlb
xchg
inc
icebp
push
mov
movsl
mov
push
loop
imul
jb
or
sub
mov
and
sbb
sbb
dec
jbe
in
xchg
or
mov
aaa
adc
into
sbb
sub
push
outsb
sub
mov
jb
ja
sub
mov
out
jb
pushf
sarb
loopne
fstps
adc
lds
out
ss
mov
scas
cli
insl
hlt
in
imul
sub
insl
adc
out
fisttps
rorl
movsl
lods
xchg
ss
loopne
adc
and
aaa
shlb
jb
movsl
jecxz
pop
mov
jne
jge
adc
push
dec
incb
loope
mov
sub
gs
lcall
push
adc
inc
jbe
fwait
test
push
in
int3
sbb
pop
adc
sub
das
cmp
add
cmp
insb
xchg
ljmp
mov
int3
jo
mov
jge
fbstp
xor
js
adc
mov
cmpsl
dec
inc
sbb
std
add
out
add
scas
inc
xlat
pop
call
stc
pop
nop
out
mov
jmp
dec
int3
add
mov
ljmp
clc
and
gs
xor
cmc
mov
jo
and
pop
cmp
dec
pop
sub
pop
lea
cmp
in
call
faddl
cs
and
cmpb
cmpsb
in
jbe
xchg
dec
pop
fmuls
and
imul
filds
pop
xchg
lock
ffreep
std
cltd
leave
clc
aaa
push
and
lea
xchg
cmpsb
xchg
sub
jl
fnclex
jnp
cmc
in
and
mov
lea
jne
inc
lret
arpl
stos
mov
lret
add
pop
dec
sarb
lds
jnp
stos
sbb
pop
imul
shlb
add
sbb
pop
mov
rcrl
add
xlat
xor
jbe
mov
inc
jl
pusha
es
xchg
inc
les
sbb
dec
jle
mov
xchg
scas
inc
sbb
jmp
bound
int
sbb
jns
imull
or
cmp
pusha
je
push
lcall
add
into
pop
adc
push
sub
pop
jmp
adc
lret
inc
sbb
dec
shufps
jnp
dec
sbb
pop
cmpsb
andl
loop
xchg
mov
imul
xchg
imul
std
lret
jne
iret
cmp
or
sub
pop
push
inc
mov
lods
sbb
out
in
scas
jg
fnstcw
push
fdivrl
pop
adc
cld
lock
push
roll
xor
outsl
incb
jmp
pop
add
shl
rolb
fstp
mov
dec
out
xchg
fiadds
pop
je
aaa
cmpsl
daa
sub
lret
xchg
pop
push
mov
imul
imul
ljmp
int3
jmp
into
jae
or
mov
pop
scas
push
xlat
in
mov
cmp
lods
mov
adc
push
es
lahf
add
in
dec
push
loop
daa
push
sub
or
cmp
xor
in
lcall
test
dec
ljmp
pop
and
jo
aad
aam
cmpsb
popa
in
cmc
lret
inc
jne
jmp
cld
test
push
adc
jmp
fldcw
aas
push
or
lret
mov
in
cmp
push
xor
mov
dec
push
mov
daa
push
xchg
or
test
cmpsb
cld
mov
mov
ljmp
cld
jbe
in
jae
jnp
ret
inc
mov
arpl
xchg
mov
xor
test
ret
pop
jp
mov
mov
sbb
mov
push
jmp
inc
mov
insl
addl
test
jbe
in
jns
std
mov
jl
cmp
popf
dec
jbe
pop
cltd
fsubl
xchg
addb
mov
sub
jno
add
jg
cmp
inc
orl
sbb
and
ret
sub
and
dec
mov
dec
adc
inc
jle
cmp
jo
aaa
aas
stos
add
xor
dec
push
scas
sbb
les
jmp
pushf
repz
mov
out
in
idivl
inc
movsl
das
jnp
mov
sarb
outsl
cwtl
mov
or
jae
orl
roll
addr16
decb
xor
outsl
leave
jmp
cmp
dec
mov
das
xor
sub
aam
into
pushf
fs
mov
cmpsl
cmpsl
outsb
lcall
pop
call
fwait
scas
push
pop
iret
scas
or
rorb
and
xchg
enter
xchg
imul
and
push
test
and
mov
sbb
inc
and
xor
js
xchg
outsl
popa
sets
xchg
jmp
mov
pop
nop
das
pop
xor
sbb
sbb
sbb
add
or
jge
sub
lods
push
and
or
xchg
xor
push
sahf
xchg
jnp
mov
fimull
mov
hlt
mov
in
xor
orl
mov
mov
cmp
mov
lcall
cmp
add
pushf
dec
cmp
cmp
adc
loopne
fstp
cmp
push
les
scas
mov
ret
and
or
sbb
pop
fst
sbb
xlat
addr16
push
lods
pusha
fs
daa
fwait
mov
hlt
cmp
bound
sahf
mov
testl
jo
movsb
mov
dec
mov
shll
xchg
or
adc
int3
ret
jge
ret
cmp
xchg
mov
inc
dec
sbb
insl
mov
outsl
idivl
jl
sti
ljmp
jae
je
jg
and
test
lods
pop
xor
cmp
sbb
jmp
mov
ret
mov
cmp
loopne
lea
popf
imull
repz
aaa
and
imul
iret
mov
test
lret
jns
jns
popa
imul
xchg
mov
push
fwait
jnp
cmp
and
push
fistl
inc
jle
sub
cmpsb
icebp
les
lcall
push
pop
cmp
cmc
imul
fisttpl
jmp
ljmp
leave
cmpsb
es
lds
scas
push
int3
mov
sub
cmpsl
sbb
mov
fdivrl
mov
je
sbb
cwtl
mov
outsl
test
pop
or
adc
and
or
xchg
xchg
dec
jecxz
push
mov
push
sarl
ja
insl
add
xchg
cmp
sarb
add
xor
nop
scas
enter
adc
pusha
cmc
dec
or
cmpsb
jnp
lcall
lcall
dec
jge
add
pop
cmpsb
sti
inc
outsb
test
and
insb
sti
push
adc
ret
adc
mov
lahf
cltd
out
addl
shll
enter
orb
lret
mov
fptan
dec
daa
movhlps
mov
cmp
enter
jbe
rorl
ds
bound
out
addr16
stc
push
dec
cld
pop
push
jmp
les
mov
pop
sbb
and
test
mov
out
sbb
shlb
mov
movsb
inc
aam
xchg
and
xor
ja
je
inc
push
xchg
xor
inc
pop
mov
push
aam
mov
test
push
mov
push
inc
and
cmp
in
lahf
jb
or
mov
xor
dec
cltd
out
and
sarb
loopne
sbb
sbb
dec
jmp
lods
or
mov
sbb
push
mov
and
cmpsl
dec
dec
gs
mov
pop
lret
sub
adc
sete
stc
mov
sbb
cmp
loope
push
mov
cmp
mov
mov
clc
inc
jns
fiaddl
sbb
bound
inc
cmpsb
out
cmp
rclb
das
inc
sub
and
sbb
jecxz
fidivl
bound
xor
jmp
imul
cmp
push
or
add
sahf
sub
out
mov
sbb
nop
xor
push
lret
enter
pop
ret
xchg
push
adc
mov
scas
cmc
ljmp
out
dec
lcall
clc
add
popf
rorl
icebp
mov
pop
add
cmp
out
or
add
lcall
sbb
mov
xor
out
test
in
out
orb
out
mov
filds
aas
in
icebp
test
or
jae
adc
in
pop
fdivrs
mov
add
fstpt
mov
push
lret
add
cs
mov
and
jp
jl
into
in
lea
xchg
in
rorb
nop
int3
stos
xor
sbb
dec
icebp
push
adcb
push
jg
enter
popf
jne
or
push
cmpl
fisubrs
mov
dec
add
shrb
imul
inc
adc
rcll
sub
pop
and
mov
js
cmc
inc
cmp
xchg
lcall
cmpb
leave
in
stos
bound
mov
lret
mov
xchg
dec
clc
xor
ficompl
pusha
xor
fucomip
xchg
fdivrl
gs
ds
icebp
cs
sarb
push
fcomps
sub
leave
scas
xchg
mov
push
jl
fistpll
mov
cld
insl
in
sar
sbb
test
mov
ss
cmpsl
mov
pop
scas
mov
sub
mov
ret
lods
inc
xchg
and
jmp
fdivl
sub
fwait
lods
test
roll
xchg
imul
jl
add
ds
stos
adc
mov
ss
xchg
andl
test
cld
fdivrl
test
js
jae
aaa
ss
ret
mov
adc
mov
ja
and
pop
fucomip
add
push
test
int3
mov
scas
or
mov
pop
sbb
lds
cmp
dec
hlt
mov
cmp
push
sahf
idivl
add
fisubl
movsl
xor
popa
jae
sub
fisttps
stos
jne
test
aaa
adc
test
call
mov
popa
addl
outsb
cmp
adc
bound
in
push
dec
fcomps
dec
loopne
jmp
cmp
mov
out
mov
inc
jnp
sbb
fcmovbe
xchg
inc
out
lods
js
gs
push
and
push
ds
mov
arpl
scas
sbb
fdivrl
and
pop
and
mov
fnstenv
mov
lock
out
sbb
lret
mov
dec
gs
mov
pop
push
loopne
dec
pop
inc
sub
in
stos
lahf
add
xchg
mulb
int3
std
jne
push
stc
subb
jp
dec
sub
cs
and
cmp
cmp
dec
add
sarl
test
outsb
pop
pop
dec
scas
pop
jno
gs
cli
rorb
add
xor
fidivl
inc
push
out
rol
mov
aam
fdivrs
mov
sub
movsl
push
out
lcall
fs
ja
loope
xor
in
faddl
shlb
nop
sti
lcall
jecxz
cmc
sbb
cmc
and
sub
and
push
ja
pop
adc
jno
in
pop
cmp
scas
test
push
lea
lea
mov
mov
shrl
out
mov
and
scas
mov
mov
aam
jns
mov
imul
jge
cmpsl
mov
add
and
stc
scas
scas
lahf
mov
cmp
xor
cmp
jne
push
ficomps
fistl
addr16
je
xacquire
add
sub
mov
subb
pop
inc
pop
stc
and
in
pop
test
subl
out
gs
call
adc
cmpsl
je
fists
cltd
inc
lock
push
add
cli
fmull
mov
mov
jne
inc
loop
and
icebp
aad
jl
fdivrs
mov
mov
sub
adc
imul
xor
sub
and
xlat
inc
xor
imul
bound
cltd
and
fstpl
lahf
push
lock
imul
jbe
test
mov
adc
push
sbb
scas
call
out
movsl
and
push
daa
rorl
sub
sahf
xchg
nop
mov
repnz
xchg
mov
int3
mov
cld
push
mov
es
pop
in
pop
xchg
jne
or
dec
js
and
loopne
clc
stc
sub
cmp
leave
data16
lods
pop
cmpsb
stos
pop
add
push
pop
pushf
loopne
mov
stos
jno
pop
dec
mov
jae
pop
push
sbb
shlb
call
out
sti
aaa
jge
add
push
mov
jecxz
push
fwait
outsl
sahf
mov
pusha
call
pop
dec
push
cli
test
movsl
aaa
xchg
jns
sub
push
sbb
xor
jne
js
jae
inc
lds
gs
insb
jmp
add
shl
push
inc
add
stos
popw
or
xor
in
lcall
pop
enter
jp
mov
xchg
rorl
push
pushf
popf
jb
pop
fildll
mov
inc
aad
das
es
andl
data16
jp
add
lahf
dec
adc
jp
sbb
xor
mov
cmp
test
mov
popa
and
ja
nop
stos
aas
and
sub
les
dec
ds
sbb
loope
adc
in
mov
and
fs
mov
int3
mov
add
xor
mov
hlt
jo
gs
sub
js
in
adc
setp
and
ljmp
adc
idivl
push
push
inc
or
sub
js
scas
dec
or
sub
hlt
or
mov
rorb
sbb
cmp
sub
mov
rclb
aad
sbb
mov
cmc
push
xchg
sbb
jbe
cmp
leave
inc
icebp
mov
inc
mov
and
mov
idivl
mov
xchg
mov
imul
xchg
test
jge
jmp
shlb
cld
loope
jle
insb
out
jb
cmp
fs
and
fadd
les
push
fidivs
ds
xchg
leave
arpl
lea
iret
roll
sub
mov
jge
dec
fldt
or
mov
xchg
sar
xor
ss
and
aas
or
dec
cmpb
test
inc
aas
or
sti
shrl
xchg
mov
shl
fs
insl
bound
adc
lcall
imul
adc
sbb
cmpsl
clc
adc
or
dec
cmp
mov
pushf
ret
sub
cmp
mov
inc
and
dec
enter
fldt
xchg
gs
jmp
loopne
jbe
jo
fninit
js
dec
cld
sub
fmuls
out
mov
push
fwait
sbb
repz
push
dec
dec
or
jg
les
pusha
fstpt
xchg
leave
icebp
fstpt
test
pop
xor
xchg
or
adc
push
sbb
sub
pop
push
push
sub
lret
rep
out
sbb
inc
mov
rcrl
push
fs
pop
ja
insl
dec
scas
inc
bound
sbb
inc
push
lds
idivb
mov
mov
mov
add
add
ds
aas
js
add
stc
xor
aas
xchg
sbb
adc
int
and
sbb
add
je
addb
bound
push
push
decl
rcr
add
xchg
push
sub
inc
xlat
jne
mov
out
or
sahf
xor
mov
inc
xor
push
ljmp
popf
aaa
mov
cltd
cli
xor
out
cmp
in
sbb
ret
test
mov
or
iret
pop
dec
xlat
sub
push
jle
xchg
inc
push
daa
mov
loope
push
inc
xchg
dec
mov
addb
dec
into
int3
std
jo
dec
mov
cmp
out
nop
gs
shl
mov
nop
or
imul
call
sub
mov
add
out
adc
out
mov
nop
and
xchg
jmp
mov
jmp
fiadds
jg
xchg
pop
sbb
push
pop
std
sub
scas
enter
andb
int3
pop
inc
iret
sar
jbe
jnp
and
lods
sbb
rorl
scas
cs
and
mov
pop
arpl
rcll
jne
xchg
xor
arpl
out
sbb
std
push
or
nop
mov
mov
je
xchg
mov
loopne
ljmp
cs
insb
xchg
or
mov
xchg
scas
cltd
and
cmp
lods
inc
mov
and
test
out
xor
fimuls
mov
dec
and
sbb
mov
jmp
jecxz
sbb
lret
in
adc
jnp
xor
add
cmpsl
adc
faddp
xchg
jo
nop
jns
shrb
es
icebp
mov
inc
scas
xchg
dec
jp
sub
jg
lods
sub
aad
aaa
mov
pop
in
pop
data16
jp
sti
scas
lods
fwait
lds
mov
push
xchg
jge
es
jmp
mov
incl
and
fisubs
repz
int3
mov
divb
lcall
xor
xchg
inc
push
add
cmp
in
mov
cmp
mov
push
add
dec
add
out
int
std
inc
lods
pop
add
sti
xor
daa
lock
cmp
in
xor
mov
lods
in
dec
or
jne
daa
xor
adc
jl
fadd
sub
jo
dec
shlb
fadds
shlb
sbbb
arpl
call
inc
mov
sar
mov
xchg
insb
inc
cmp
xor
ja
jl
jb
jbe
in
xor
pop
aam
or
popf
outsl
push
movsb
inc
sbb
mov
cwtl
in
push
shll
insl
inc
js
pusha
out
in
shll
ds
in
ljmp
repz
xlat
pop
out
pop
or
gs
mov
adc
pop
fsubrl
push
dec
adc
mov
sbb
push
jge
fists
wbinvd
cmpsl
loope
repz
stc
stc
xchg
mov
sti
repz
xchg
push
mov
mov
fcmove
pusha
inc
scas
rcl
sysenter
ljmp
xor
or
pusha
loop
cmp
inc
lret
jle
mov
adc
cmp
cmp
inc
xor
xchg
aas
mov
lods
leave
xchg
imul
adc
add
test
pusha
daa
lods
fisubs
test
sahf
mov
and
aaa
jle
inc
sti
xchg
fwait
out
outsb
mov
pop
mov
jbe
daa
jno
pop
add
inc
aas
xchg
cwtl
xor
sub
jmp
fs
pop
add
imul
out
ror
inc
insl
das
pop
shrb
sbb
mov
outsb
xor
stos
adc
shll
ja
inc
jmp
dec
out
mov
mov
cmpsb
dec
in
sub
xchg
pop
aam
pop
or
mov
push
add
sub
mov
fildll
ja
add
jge
push
stc
cmpsl
inc
cwtl
xor
jbe
fwait
dec
mull
test
xchg
jnp
jnp
lahf
dec
jge
test
aaa
bound
mov
popf
es
in
and
xor
movsl
mov
adc
push
in
callw
add
pop
icebp
call
dec
leave
in
dec
scas
jae
out
cmc
xchg
inc
push
jle
movsl
rol
fs
jge
and
sbb
outsl
fisttps
ficompl
mov
sbb
mov
add
inc
daa
xor
shlb
leave
aad
push
sbb
mov
mov
test
cmp
and
xor
or
insb
cmp
sbb
pushf
or
or
mov
in
xchg
iret
aaa
aaa
outsl
push
push
push
xor
push
enter
test
sub
pop
mov
shrl
cmpps
cmp
jmp
cmp
icebp
hlt
jne
push
cld
jnp
xor
fcomp
ljmp
ret
mov
sub
sub
rcrl
lcall
inc
push
xchg
and
inc
rol
lret
cmpsl
cltd
hlt
sbb
cwtl
test
cmp
test
adc
push
mov
movsl
mov
adc
pop
cmp
adc
fs
insl
out
into
out
icebp
int
xlat
testb
dec
in
jg
test
mov
add
push
mov
outsl
lods
pop
xor
xor
repnz
inc
xchg
inc
insb
mov
pop
loopne
pop
cs
dec
inc
xor
test
xchg
adc
mov
rorb
mov
repz
cld
or
mov
push
pop
xchg
cltd
addr16
jge
sbb
adc
jb
add
inc
cmp
sbb
iret
jmp
add
mov
sub
sub
mov
fwait
scas
jo
dec
in
xchg
test
jle
and
mov
testb
or
push
adc
and
add
sti
movsb
je
ret
sahf
jle
idiv
mov
leave
loop
add
add
adc
pop
stos
sarb
pusha
fcmovnb
mov
and
ds
lock
out
sub
cmc
xor
imul
fs
pop
xchg
or
stos
mov
and
push
dec
scas
or
jns
loop
or
loop
adc
fstpt
inc
aas
mov
jns
push
push
add
or
ror
push
shlb
dec
inc
jmp
add
jb
dec
sbb
cmp
shll
pusha
xor
or
mov
rorl
repnz
lods
xchg
loop
popa
imul
aam
sub
push
sub
ficomps
movb
inc
lret
je
test
pop
or
sub
inc
imul
push
lods
clc
ds
fnstsw
mov
call
imul
adc
repnz
data16
mov
pop
xor
jle
int
outsl
lcall
jmp
push
test
cwtl
or
dec
in
lds
and
cli
jo
cwtl
dec
jae
push
fdivr
mov
lds
bnd
mov
xchg
das
sbb
outsl
pop
rcr
enter
add
mov
das
rcrl
push
out
pop
shlb
jns
lods
mov
xlat
xlat
sbb
mov
popf
sbb
insl
rcrb
jge
dec
push
loopne
fldcw
sbb
insb
ljmp
fistps
test
cmp
pop
jecxz
jmp
cmp
sub
ljmp
lahf
inc
dec
fwait
xchg
and
xor
mov
add
mull
push
push
add
xchg
aam
ret
sti
sarb
adcb
inc
jg
rclb
addr16
add
pop
repz
sbb
push
jb
pop
jge
xchg
ds
jo
inc
pop
test
xor
dec
shrb
fists
popl
mov
jo
xor
fsubrs
enter
out
jnp
jp
stc
jmp
iret
xlat
loope
cs
ret
aam
test
mov
jnp
sbb
push
lcall
in
cmpsb
xor
scas
hlt
sbb
ja
or
xchg
cmc
adc
pop
push
imul
push
cwtd
mov
cmp
por
popa
loopne
aam
mov
xor
cs
sar
pop
loope
sub
pop
mov
ret
rcrb
cmp
or
sbb
stc
shll
sub
andb
cmp
fsts
das
mov
mov
pop
imulb
lds
jnp
dec
enter
ret
icebp
sbb
loopne
imul
push
push
addr16
push
lea
rclb
dec
jo
neg
cmpsb
xor
fld1
xlat
pushf
jae
jecxz
pop
sahf
ja
xchg
lret
cs
test
adc
frstor
popa
xchg
insl
push
and
jle
iret
or
dec
or
xor
mov
adc
aaa
xchg
mov
inc
mov
int
mov
push
scas
add
mov
dec
ret
sbb
stc
add
sarb
fsubs
pop
jl
in
repnz
xchg
push
sahf
outsl
dec
jmp
jp
std
and
ja
bound
and
cmp
pop
call
out
in
in
add
sub
adc
popa
ret
add
repnz
les
push
mov
test
in
testl
push
andb
or
pop
jg
mov
movsl
scas
rcrl
lcall
add
xchg
pop
movsl
mov
mov
lock
jb
jns
in
mov
add
pop
sbb
fcompp
jns
test
sti
lcall
pushf
sub
ds
outsb
ja
movsl
add
xchg
mov
sahf
lods
cmc
jb
mov
dec
lock
mov
mov
insb
jb
outsb
or
fwait
push
mov
xchg
gs
out
out
and
and
aaa
fsub
xor
mov
insl
sub
les
push
xor
push
xor
push
mov
clc
fucomi
int
cmp
mov
aam
jne
sub
sub
out
bound
fnstcw
outsb
les
jo
and
push
adc
mov
pop
adc
aas
jmp
and
dec
or
sbb
mov
lret
mov
dec
pop
push
cmpsb
xchg
dec
fiaddl
xchg
aad
push
mov
xchg
cmp
sub
push
es
add
test
test
leave
pop
fmuls
sub
movsb
mov
daa
idivl
mov
jge
jecxz
cmp
dec
shrb
mov
push
imul
inc
les
or
lret
cmpb
fmull
jle
push
shll
ret
mov
lds
adcl
mov
out
loope
fnstenv
jecxz
rcr
inc
out
xchg
jecxz
ret
stc
adc
cs
test
lods
imul
push
test
imul
mov
push
sbb
in
repnz
mov
cmp
jo
pop
lret
push
jb
fnstenv
jnp
in
and
test
add
xor
pop
fsubrs
sbb
jg
insb
pop
jp
popa
aad
jecxz
sub
pushf
add
mov
lret
test
call
sti
cltd
repz
mov
mov
pop
dec
xchg
in
xor
insl
sub
test
mov
sub
mov
gs
clc
dec
push
lock
sub
loopne
cmp
cmp
daa
cmp
xchg
aaa
xchg
idivb
cmp
lods
insb
jne
pop
mov
xchg
out
xchg
rolb
xor
ret
fistpl
adc
jmp
cmp
jge
sub
xor
pop
adc
aas
push
repz
clc
aas
loopne
daa
lds
mov
arpl
jmp
mov
jno
inc
sbb
pop
pop
adc
icebp
lcall
mov
and
mov
repnz
lcall
divb
test
arpl
das
sub
mov
decb
sub
sub
add
movsb
cli
in
cltd
cmpsl
int3
inc
inc
test
lahf
subb
orb
dec
pop
and
or
lret
mov
lcall
mov
dec
cltd
push
in
xchg
lods
xchg
push
adc
jbe
push
in
jns
fistl
mov
mov
stos
int
test
and
test
sub
out
dec
mov
loop
int
ret
adcb
add
outsl
jmp
and
jns
idivl
xchg
mul
fstl
nop
jae
rcrb
jg
cmpsl
in
imulb
xchg
cmp
rcr
scas
scas
xchg
cli
xor
stos
enter
mov
mov
cmp
daa
jge
adc
mov
push
or
mov
cli
dec
pop
pop
lods
sub
mov
les
repnz
fcmovb
push
jne
ja
pushl
orb
ret
push
mov
aas
mov
dec
daa
insl
cli
hlt
and
pop
or
test
mov
cmp
ja
sahf
in
adc
xor
lret
out
int
add
icebp
jl
mov
or
sbb
imulb
jnp
and
mov
mov
aas
mov
xor
je
test
std
shll
aad
jne
jle
xchg
mov
adc
fnstcw
or
sbb
dec
push
fildll
mov
push
mov
sahf
vmovddup
mov
and
imul
cmp
mov
mov
mov
into
mov
push
sbb
addr16
cmp
lods
mov
add
mov
and
cli
ja
insb
rcrl
sbb
mov
int3
fisubs
clc
fnsave
fwait
pop
push
sti
fdiv
repz
jne
jmp
repnz
daa
cmpl
adc
sahf
scas
fsubrl
or
stos
std
out
xchg
jl
sub
xchg
std
push
imul
ja
inc
jb
and
movsb
adc
dec
dec
xlat
pop
inc
and
dec
data16
or
push
sbb
movsl
hlt
cmp
mov
ja
mov
repnz
cmp
push
enter
adc
sbb
sub
loopne
jp
imul
xor
mov
or
aaa
jle
push
insl
push
arpl
cmc
loope
or
inc
pop
fadd
mov
lods
xlat
mov
inc
imul
sbb
and
push
cli
pop
mov
pushf
aam
lods
adc
jmp
jbe
jae
int
ret
out
pushf
movsl
push
fimull
jno
jmp
cli
sub
adc
xchg
inc
and
pop
pusha
std
sti
push
sahf
mov
popw
pop
andl
mov
and
mov
mov
mov
roll
sbb
add
pop
adc
push
add
pop
negl
adc
adc
jnp
test
jbe
cwtl
call
outsb
in
aaa
pop
sbb
adc
jnp
loope
xchg
std
clc
xor
ret
sub
ja
cli
imul
inc
iret
out
call
scas
push
test
test
dec
push
ret
fisubrl
das
loope
jne
mov
ror
inc
add
gs
mov
clc
mov
inc
sbb
push
inc
and
and
and
mov
sbb
cmpsb
jno
lret
adc
data16
sbb
xchg
ljmp
xor
xchg
mov
ret
inc
xchg
orl
and
lods
mov
repz
out
mulb
out
or
mov
xchg
dec
test
stc
xchg
mov
and
jb
and
xor
les
mov
inc
aad
push
sahf
add
ds
and
aas
data16
mov
loope
add
xor
adc
cli
or
mov
int3
ja
stos
dec
or
aam
cltd
bound
outsl
sbb
call
dec
xchg
leave
inc
jns
int3
sbb
xor
pop
xor
popa
sti
out
iret
pusha
mov
pop
or
sub
push
cmpsl
adc
and
mov
lods
fwait
fs
xor
and
adc
loopne
sub
mov
or
aaa
cmp
je
sub
xor
xor
sahf
pop
or
mov
pop
adc
dec
push
insb
xchg
sbb
pop
or
bound
outsl
in
mov
fnsave
pop
out
pop
sbb
hlt
pop
nop
aaa
loopne
sub
addb
mov
insb
xchg
cmp
adc
clc
mov
and
das
inc
and
stos
addr16
popf
enter
push
push
aaa
xchg
pop
jo
xchg
mov
mov
xor
jmp
sub
imul
xlat
lock
leave
xchg
movsl
dec
xor
aad
xchg
loop
negb
mov
inc
lods
push
and
inc
addl
and
mov
les
insl
loop
inc
ja
xlat
int
addb
mov
add
pop
dec
insb
push
pop
movsb
sarl
mov
mov
sub
mov
inc
loope,pn
ds
push
je
ds
lahf
cli
push
push
scas
pop
jle
xchg
jmp
inc
dec
and
sub
cwtl
ss
mov
add
jb
cmpsb
flds
jns
inc
enter
pop
pop
shll
jo
or
sub
or
jle
fidivl
ret
iret
cmpsb
sahf
dec
pushf
int3
repz
clc
or
fsts
inc
push
push
cwtl
in
sarb
xor
sub
sub
dec
jle
or
and
test
mov
std
movl
or
mov
mov
sub
scas
add
in
add
xor
icebp
cmp
mov
xchg
cmp
mov
aad
add
xchg
and
inc
rcr
xor
je
jns
roll
mov
and
ret
fisttpll
push
shlb
xor
sbbl
or
data16
xchg
sbb
ss
popa
fdivrl
push
or
xor
pushf
push
xchg
stos
and
aam
sub
shll
fnstcw
xor
xor
test
inc
iret
out
movswl
int3
dec
xor
pop
or
push
jae
adc
call
subl
bound
fsubp
ret
xchg
clc
mov
fwait
dec
xchg
jno
imul
enter
jmp
aaa
addl
setnp
inc
dec
mov
or
push
xchg
push
shl
ljmp
mov
ret
jp
popa
sbb
sahf
pop
popf
and
mov
xchg
jno
push
lret
lcall
jg
adc
loopne
mov
es
sbb
aaa
xor
push
mov
cld
into
cmc
or
and
push
ret
inc
mov
add
fcmovnbe
sub
push
and
hlt
mov
or
sbb
lcall
jg
les
sbb
jns
daa
imul
sub
clc
ljmp
jns
icebp
clc
push
cmp
jbe
pop
dec
jge
in
or
cmp
sbb
xchg
xchg
xor
xchg
lret
push
rorb
and
subb
ret
movb
mull
outsl
add
mov
das
cmp
insb
mov
xor
sbb
inc
test
xor
sbb
add
add
xor
push
or
or
cli
jns
ja
jns
inc
push
into
iret
roll
pop
sub
cmpsb
dec
lret
and
aad
and
sub
sub
sbb
cmp
mov
hlt
or
lahf
lea
pop
mov
dec
repz
fdivs
mov
cld
out
cli
dec
and
push
movsb
divl
inc
test
lock
mov
adc
fmul
insl
cmpl
lock
rcll
mov
int
mov
cmpsb
out
mov
in
repnz
or
daa
in
xorb
xor
dec
in
inc
inc
xor
mov
loop
add
push
adc
jp
leave
inc
mov
out
incb
mov
inc
je
cmp
mov
sub
hlt
cmp
mov
cmpsl
cli
and
dec
mov
rorl
xchg
inc
and
mov
push
xor
add
mov
roll
sub
insl
in
push
js
mov
mov
cwtl
sbb
in
imul
xchg
xor
sub
dec
dec
cmp
dec
inc
pushf
inc
int3
push
clc
push
sub
cmp
ds
jae
xor
xchg
lock
fs
xchg
mov
jle
jnp
emms
fisubs
bound
jle
call
xlat
lods
hlt
jecxz
push
dec
cmp
ljmp
xchg
sub
push
rcrl
xchg
inc
ret
sbb
pop
pop
fdivl
stc
jge
sub
jmp
es
notb
std
add
cli
imul
sbb
pop
cmp
lods
mov
adc
sbb
sub
adc
cs
and
notb
mov
cmpsl
sbbb
insl
lret
nop
pop
mov
mov
sub
ret
rol
jo
outsl
pop
cmp
and
jb
or
push
xor
and
stos
out
inc
stos
aaa
or
fcom
jmp
dec
hlt
jmp
adc
cmpsl
fcompl
stos
inc
in
inc
or
ret
aam
dec
jne
and
xchg
and
adc
dec
std
insl
and
or
and
xchg
ret
cltd
ja
mov
push
xor
adc
xchg
nop
pop
rcrl
out
icebp
sbb
sbbl
rclb
lods
test
cmpsl
inc
lret
xor
push
mov
inc
jnp
cmp
scas
mov
std
xor
into
pusha
mov
enter
or
sub
jg
ret
ja
mov
ja
call
pusha
fdivp
sar
pop
enter
into
loope
in
inc
mov
out
data16
pop
jge
lods
inc
mov
mul
inc
dec
add
clc
mov
mov
loop
aam
shr
mov
loop
loope
fs
out
and
and
xor
cwtl
stos
and
mov
aam
push
pop
xor
inc
inc
xor
repnz
insb
adc
pusha
jne
add
add
jae
mov
jl
mov
pop
pushf
pushf
pop
roll
lods
mov
mov
outsb
mov
sbb
lea
rcll
loopnew
mov
push
add
pushf
inc
xchg
lahf
xchg
mov
pop
push
frstor
testb
popa
aam
jge
xorb
lahf
dec
cmp
dec
mov
outsl
push
into
in
mov
sbb
mov
leave
leave
mov
popf
sub
adc
cmp
mov
popf
jo
mov
negb
enter
ss
jno
jmp
push
push
cmp
mov
ficoms
aad
test
les
nop
sub
and
and
lcall
mov
cmp
or
sbb
aad
scas
and
popf
add
pusha
popa
jno
pop
aas
jp
repz
aad
xchg
int
push
mov
movsb
loop
xchg
movsb
imul
enter
push
cmpsb
push
dec
inc
test
adc
mov
adc
xchg
mov
xchg
push
fidivl
cmp
inc
xor
add
outsb
xchg
das
pop
call
fidivl
call
inc
xor
mov
shll
aas
fidivl
jbe
push
test
dec
xchg
insb
push
mov
jg
sbb
lahf
add
or
fstpl
jge
cmc
push
iret
push
push
nop
push
mov
rol
shlb
jnp
lock
iret
xor
or
cmp
sub
je
jno
arpl
lock
ficompl
push
jl
test
dec
pop
or
mov
inc
xor
push
pop
mov
adc
aam
mov
pop
jge
xchg
inc
mov
inc
sub
xor
cmpsl
and
loope
icebp
fcomip
mov
movsl
cmpsl
lods
push
bound
cmp
mov
or
fnsave
xchg
cld
push
inc
cmc
dec
mov
push
mov
jne
fstpl
adc
pop
dec
pop
sub
xor
push
lds
jge
ret
dec
lock
inc
push
xor
add
adc
out
cltd
push
mov
aas
xor
mov
and
dec
xchg
daa
xor
enter
lds
lcall
push
test
pusha
jge
leave
out
out
loopne
mov
push
outsl
add
rcll
into
and
xchg
imul
pop
shrl
cli
insb
fistpll
xchg
lcall
add
in
jp
pop
out
sbb
ffreep
movups
jl
movsl
inc
and
dec
mov
adc
push
and
call
dec
mov
or
rcrl
stos
add
scas
imul
mov
push
shll
addb
in
fiaddl
out
arpl
push
cmp
dec
movsl
lods
lock
mov
repz
imul
lcall
pop
xor
icebp
test
and
and
notl
cmpsb
iret
mov
push
into
or
cmp
mov
ds
loope
les
repnz
or
pop
enter
lea
jae
rol
sub
xchg
xchg
jne
inc
das
rorl
rcll
push
xlat
pusha
fbld
test
jp
and
in
in
or
lret
dec
mov
mov
lcall
xchg
push
pop
fdivrp
pop
xchg
pop
cmc
xchg
daa
and
pop
jae
mov
testb
arpl
xor
and
sbb
mov
cld
sub
enter
ljmp
pop
inc
aas
jg
dec
push
lods
movsl
fsts
lret
iret
mov
push
pop
jo
inc
shlb
stos
adc
sti
xchg
pop
test
inc
mov
cwtl
arpl
jl
and
jbe
mov
or
xor
pop
or
push
rolb
xchg
sbbl
mov
test
sub
pop
das
repnz
or
jne
xchg
and
les
add
jbe
stc
sub
jp
lds
lahf
unpckhps
fcomps
mov
xor
jnp
outsb
cwtl
call
lds
dec
inc
js
push
jne
in
lahf
pop
test
je
fistps
popf
clc
mov
das
and
insl
sbbl
aas
xorb
rcr
dec
jae,pn
jg
and
jmp
mov
cltd
je
inc
pop
mov
jmp
aas
mov
add
je
aas
iret
pop
push
icebp
daa
inc
in
test
mov
or
jmp
jecxz
push
xor
out
in
cli
adc
es
mov
dec
icebp
movb
mov
xor
jo
ffree
cmpsb
mov
sbb
push
ljmp
xor
push
aam
arpl
add
add
mov
insl
icebp
xor
cmp
sub
push
pushf
jg
dec
scas
and
lret
pop
dec
jmp
jg
push
in
int
jbe
inc
adc
jmp
push
add
xor
inc
dec
lret
adc
lock
inc
and
stc
mov
aaa
pop
push
outsl
std
jle
cli
push
mov
gs
int3
jl
lcall
dec
popa
cmp
pushf
and
sbb
jmp
std
adcb
push
cmp
clc
adc
testl
dec
inc
push
lret
add
add
xchg
mov
mov
mov
outsb
push
fimuls
ja
add
sbb
out
mov
and
fisubrl
push
and
xchg
lret
dec
add
aad
cmp
or
jb
jne
or
cmpl
subl
aad
push
fidivrs
pop
outsb
jae
add
loope
adc
imul
push
push
cmp
sub
stc
jno
imul
cmpsl
faddl
mov
enter
dec
movsl
and
icebp
dec
dec
dec
int
loop
nop
mov
dec
bound
push
hlt
js
mov
sub
pushf
mov
js
int3
sub
jbe
xchg
mov
pop
pop
in
sbb
sbb
addl
and
ret
ds
pop
pop
filds
xchg
xchg
ret
aam
xor
loope
jge
mov
sub
lods
mov
pop
ljmp
ds
movsl
jb
sbb
mov
xchg
and
sbb
xor
int
adc
or
push
xchg
mov
sub
lods
test
dec
shl
or
mov
push
orl
and
push
pop
es
jbe
dec
lods
test
pushf
outsb
or
adc
std
scas
out
or
mov
adc
xchg
jo
mov
lea
dec
stos
aaa
mov
cmpl
cmp
sbb
or
shlb
scas
adc
xchg
or
nop
pop
push
cwtl
es
pop
and
jecxz
xor
add
shlb
lret
jg
aas
test
test
mov
push
or
cmp
pop
pushw
xor
dec
popa
jp
mov
shll
test
xchg
mov
lods
aam
rclb
adc
into
and
aas
call
xor
imul
lret
xor
jae
cmp
outsb
test
fstpt
out
insb
push
sbb
add
adc
or
push
and
or
popf
jecxz
and
movl
cwtl
cmpsb
in
cmp
xor
aam
roll
jmp
inc
sub
mov
leave
sub
std
inc
mov
sbb
addr16
push
push
fistps
fcomp
mov
mov
nop
push
dec
bound
rcrb
jbe
mov
inc
push
dec
xchg
add
repnz
shlb
add
lret
jmp
insl
sbb
cmove
sub
mov
push
push
js
pushf
je
insl
mov
dec
data16
stos
or
push
push
cwtl
pop
mov
data16
dec
and
sahf
or
test
lea
inc
or
sbb
and
mov
add
loope
jnp
mov
fistl
imul
testb
dec
es
push
xor
imul
mov
push
test
or
xor
xchg
fcmovbe
fcmovnu
jp
int3
in
cmpb
rcl
loopne
mov
movsb
jg
mov
mov
ficomps
lcall
jo
fsubrs
stc
mov
es
lods
cltd
dec
lahf
mov
inc
jns
pop
xchg
mov
iret
pushf
jl
in
fsubrl
mov
dec
mov
arpl
jge
or
test
in
cli
inc
mov
or
test
jle
jmp
es
jg
mov
or
pop
rcl
fistpl
outsl
repnz
ljmp
insl
movsl
mov
in
enter
push
fbld
and
clc
xchg
movhps
icebp
mov
mov
leave
mov
mov
xor
ja
inc
jmp
add
dec
ja
or
jge
xchg
adc
out
sub
cli
mov
daa
pop
push
fidivs
dec
in
insb
mov
jns
inc
inc
jo
dec
ds
pop
rorb
push
dec
aad
ret
ljmp
cmpsl
push
test
pusha
pop
je
dec
lret
sub
cld
stos
pushf
lret
decl
addr16
stos
cmc
push
in
shrb
pop
jge
xchg
fstpl
mov
jnp
std
mov
aam
sub
mov
cmp
aad
and
mov
pushf
js
das
jge
out
inc
or
push
mov
inc
testl
les
daa
xchg
mov
insl
push
mov
test
sbb
mov
sbb
mov
cmp
xchg
mov
ficompl
sub
or
jmp
mov
or
decb
jb
loopne
cmp
push
or
push
mov
fst
call
pop
lahf
add
lods
test
das
dec
cmp
pop
in
mov
jo
xchg
imul
lret
sbb
mov
ret
dec
stc
es
and
test
sub
and
test
dec
push
rcll
sub
scas
mov
lret
sti
adc
sub
dec
scas
dec
push
stc
loop
mov
mov
data16
push
neg
clc
mov
pop
mov
loop
or
fidivl
push
pop
pop
or
sbb
idivb
adc
popa
xor
push
arpl
add
push
pop
imul
out
add
out
fiadds
inc
inc
sub
std
loopne
cmp
int3
dec
rcrb
cmc
mov
xlat
mov
xor
ss
and
add
sub
or
shrb
test
mov
sbb
adc
loope
or
jns
je
add
jbe
enter
jl
cltd
lods
cld
mov
inc
lods
leave
push
scas
nop
xchg
adc
cmp
pop
js
aas
ljmp
mov
enter
loopne
mov
imul
test
icebp
mov
lcall
sbb
push
and
mov
les
sbb
add
cmp
ret
inc
nop
push
movsl
jo
movsl
sbb
xchg
repz
scas
pop
xchg
imul
stc
mov
sub
adc
mov
aad
jg
out
orb
hlt
sub
shl
in
xchg
add
jae
and
ss
fnsave
sbbl
add
jns
mov
sbb
pop
add
in
test
mov
jmp
push
mov
inc
ror
mov
xor
add
mov
mov
sbb
inc
in
and
addr16
inc
int
out
popf
in
pop
jo
aad
cmc
jecxz
aas
es
sub
aam
sbb
enter
jne
inc
enter
in
loopne
xchg
mov
push
xor
aam
cmp
pop
xchg
lds
mov
lahf
xor
loop
xchg
xchg
inc
int3
insb
mov
adc
addr16
sbb
std
pop
push
fs
sahf
ljmp
dec
ss
mov
aas
aad
pop
jp
mov
inc
or
pushf
stos
fnsave
cld
and
cmp
aad
inc
ds
xor
mov
test
ret
pop
mov
cltd
std
int3
add
xchg
xor
sbb
mov
mov
ds
rcrb
adc
dec
inc
and
jp
or
js
cmp
bound
insb
mov
mov
xchg
fmull
sbb
inc
mov
mov
fsts
add
xchg
data16
jb
adc
sub
push
inc
into
int3
mov
aad
enter
lods
inc
lret
std
pop
jmp
xchg
and
jecxz
bound
ret
xchg
nop
inc
outsl
stos
pop
xchg
js
xor
dec
test
sarl
lret
clc
pusha
mov
aad
xchg
push
int
inc
lds
push
mov
ficoms
add
mov
out
adc
jnp
jp
sub
xchg
adc
nop
pop
in
fstpl
addr16
inc
sbb
xor
push
loopne
and
mov
dec
adc
sbb
popl
or
cmp
push
pop
xchg
mov
aas
outsb
lahf
enter
add
adc
push
sub
loop
push
iret
xor
scas
lds
pop
fs
cmp
jo
mov
adc
adc
or
rcrb
in
sub
imul
mov
mov
push
push
mov
adc
push
mov
jmp
push
loope
sub
aaa
push
dec
and
pusha
aaa
jo
test
call
hlt
subl
jmp
add
push
dec
sub
pop
gs
daa
outsl
sbb
in
lret
sarl
fisubrs
dec
push
push
jle
cs
inc
sti
mov
mov
cld
push
in
dec
xchg
adc
rcr
inc
leave
or
dec
mov
jge
in
sub
fists
push
rcrb
adc
or
sub
fwait
out
mov
sbb
mov
xor
or
repz
cmp
pop
outsb
mov
mov
dec
fildl
sbb
mov
lret
inc
into
push
in
mov
add
dec
mov
xchg
fstps
jnp
mov
andl
rcl
unpckhps
sub
js
mov
out
mov
xchg
daa
pop
jmp
jae
sbbl
fs
xchg
and
fldt
das
add
and
sub
test
leave
sahf
xor
mov
fs
fcompp
sub
mov
xlat
fxch
adc
xchg
stos
dec
push
mov
adc
cld
xchg
sub
mov
das
sub
mov
cltd
mov
add
jns
incb
sub
mov
scas
xchg
xchg
cmp
pop
aad
cwtl
mov
push
or
push
push
adc
xchg
daa
xorb
mov
sbb
int
sbb
push
clc
popa
cmpb
cmpb
inc
jne
int
and
arpl
xor
jb
xchg
adc
mov
push
addl
in
push
jno
jg
jbe
add
lds
cmp
adc
sbb
mov
into
pop
mov
and
and
pop
repz
notl
inc
inc
outsb
xchg
or
in
fwait
out
inc
movsl
pop
sahf
pop
fwait
int3
in
inc
out
es
cmp
xchg
cli
mov
dec
inc
sbb
sub
mov
in
cltd
xchg
outsb
aas
pushf
or
and
decb
rcl
ja
or
inc
push
out
lods
lret
xor
shl
scas
ret
mov
dec
out
inc
adc
adc
int3
lods
and
push
inc
pushf
jae
nop
and
xchg
iret
cwtl
testb
pop
movsl
shlb
sub
inc
imul
movsb
inc
sbb
lahf
addr16
cmc
stc
ficoml
fcomps
jno
push
mov
adc
pop
sub
xchg
push
and
sbb
hlt
divb
fisubrs
notl
mov
fisubl
cmp
mov
xchg
adc
jmp
dec
int3
mov
lock
inc
lds
test
icebp
mov
inc
or
mov
aas
cwtl
popf
cli
jge
mov
rorl
je
divl
and
jno
pop
aaa
add
rorl
ss
adc
xchg
push
adc
or
add
repz
incl
sahf
sub
aas
clc
in
xchg
mov
aam
outsl
dec
cmpl
hlt
push
pusha
fisubs
mov
mov
mov
dec
xor
push
inc
adc
pop
mov
push
xorb
push
in
add
jbe
dec
adc
mov
mov
cmp
cwtl
mov
arpl
ret
loope
xchg
cli
dec
xchg
push
int3
pop
push
mov
stos
jg
mov
ljmp
stos
outsl
aad
mov
jg
cmp
loope
jmp
pop
push
lahf
das
inc
mov
outsb
push
jge
mov
cs
repnz
stc
cmp
inc
mov
clc
pop
test
cld
add
mov
xchg
mov
mov
jae
ds
dec
mov
dec
int3
cmp
jg
jecxz
test
in
pop
test
pop
mov
fxch
jmp
mov
lods
mov
orb
sbb
xchg
mov
xchg
add
cmpsb
adc
mov
stos
mov
test
xchg
int3
outsb
cs
fistps
loope
dec
xor
pop
test
ss
jecxz
jecxz
xor
aas
mov
pop
out
shll
cmp
out
cmp
sub
pop
and
push
pop
lret
pop
test
sqrtps
xor
push
cs
popf
mov
pop
xchg
add
mov
ss
sub
test
gs
mov
mov
jno
inc
outsl
adc
loope
in
push
xchg
cmp
loopne
cmp
add
inc
jg
aam
xchg
and
push
das
adc
aad
and
shll
mov
jmp
cmpsl
nop
data16
jbe
sti
jo
lock
pushfw
sub
mov
in
cmp
fs
mov
jb
jle
xchg
sbb
int
jmp
bnd
sbb
cmc
push
repnz
das
inc
movsb
jno
sub
push
cli
ljmp
sub
ss
test
loopne
das
aas
or
ret
xchg
xchg
stc
or
sbb
cmp
sahf
mov
nop
lods
mov
cli
jnp
sti
cmp
sbb
mov
pushf
rcl
in
shll
leave
mov
push
fsub
insl
das
push
lret
mov
ret
sub
xchg
test
loop
sub
repnz
mov
imul
or
jl
jge
lea
fucomi
sahf
pop
movsl
aad
ds
ret
sahf
shlb
arpl
mov
mov
test
add
sarb
cmp
scas
xor
fsubs
insb
cld
and
add
sbb
filds
and
popf
and
jo
xor
mov
xlat
sub
mov
pop
inc
push
int
rorl
iret
jnp
mov
imul
xor
insb
mov
inc
add
wbinvd
outsb
ljmp
sti
or
leave
and
sub
mov
out
icebp
add
fs
push
adc
push
inc
fcomps
inc
xchg
adc
cs
push
and
loop
mov
cmp
mov
int
add
jmp
sub
push
xlat
hlt
shrl
xor
adc
stos
jne
jle
daa
adc
ror
mov
iret
add
jbe
dec
or
jge
cmpsl
adc
into
in
enter
sub
jg
enter
lahf
and
cmp
sbb
loope
push
lock
pop
push
pop
cmp
out
or
push
xchg
mov
fcomps
jno
arpl
imul
int3
push
es
sub
cmp
je
out
xchg
xchg
jle
jno
sub
addr16
mov
aam
jl
sahf
mov
lds
sub
cmp
fmull
sub
cmp
push
dec
xchg
xchg
pusha
and
pop
std
push
insl
mov
inc
inc
repz
fldl
cs
jg
inc
sbb
hlt
adc
in
popa
fsubrl
mov
push
jb
push
out
out
add
sbb
notb
add
inc
mov
mov
add
aaa
hlt
out
xchg
loope
jmp
inc
sbb
arpl
insb
sbb
arpl
ds
fwait
sbb
inc
into
test
jae
add
pop
shll
andl
xor
fdivrs
sub
pop
inc
xchg
stos
dec
lock
and
mov
push
loop
inc
dec
xor
adc
pop
outsb
xchg
jne
rclb
ret
call
lock
int3
insb
outsl
jmp
loope
outsl
push
jecxz
push
pop
push
popa
out
cmpsl
les
cmp
sbb
sub
push
insb
adc
cwtl
push
jo
push
jecxz
mov
shlb
pop
jmp
movsb
pop
jno
test
cwtl
xor
pop
push
mov
testl
and
and
dec
xor
adc
imul
pop
mov
sub
gs
inc
stc
addl
dec
mov
fnsave
inc
cwtl
push
lds
xchg
data16
fwait
or
or
fildll
mov
sbb
mov
lahf
and
stc
outsb
pop
fistl
jno
push
jle
ds
jge
out
test
int
mov
repz
scas
adc
lods
add
jge
in
fidivrl
lcall
cmc
in
and
stos
stos
push
mov
mov
aas
push
loope
jne
cmpsl
xor
dec
bt
mov
sbb
sahf
in
dec
or
pop
std
or
insb
out
cwtl
les
mov
es
mov
cmpsl
adc
pop
dec
add
add
loop
push
adc
pop
stos
pop
rep
pushl
shlb
push
and
lods
sbb
xor
or
sub
scas
test
int
jge
mov
xchg
push
in
push
jnp
inc
dec
xchg
fs
jo
iret
and
aas
or
push
push
sbb
push
rolb
and
test
stos
popl
xchg
mov
mov
mov
push
das
ljmp
dec
pop
imul
mov
mov
mov
sub
in
adc
mov
sbbl
imul
sbb
xchg
xor
ss
xacquire
dec
out
sub
stos
hlt
or
mov
inc
xchg
adc
daa
sbb
push
in
dec
xor
daa
mov
out
in
cmp
inc
insl
dec
push
xchg
je
mov
test
imull
xchg
xor
mov
in
lahf
mov
and
pop
mov
aad
dec
xor
cmp
leave
push
lcall
popf
cmpsb
mov
xchg
pop
cld
push
shll
sub
fidivl
sbbb
sbb
inc
jp
hlt
out
dec
std
push
inc
je
inc
cld
cmp
push
adc
out
mov
sbbl
movsb
repnz
in
push
repnz
movsl
insb
movb
es
clc
push
pusha
sub
mov
xor
xchg
jbe
hlt
cld
mov
fcomp
mov
je
dec
add
lahf
in
mov
xor
adc
daa
loopne
xchg
repz
clc
addl
popa
push
shlb
shrb
rcpps
lret
and
inc
sub
in
cmp
in
and
insl
or
fldt
mov
lcall
pop
clc
pop
mov
pop
jno
cli
mov
repnz
ja
inc
or
fstpt
and
fistps
add
pop
cmp
dec
ret
mov
sub
sub
cmc
mov
pop
cmp
adc
dec
mov
xchg
mov
cli
and
xchg
ljmp
ds
push
jle
mov
sbb
mov
nop
xchg
inc
jne
or
into
push
cmpl
mov
xchg
fsubrp
aaa
xor
jp
lock
jl
gs
ss
scas
jl
jns
xchg
mov
jg
add
sbb
mov
ds
aam
imul
sub
mov
iret
test
leave
outsl
shr
push
jno
rorb
cmp
sbb
pop
lret
imulb
mov
test
xchg
test
mov
sbb
or
jno
sbb
pop
sahf
rclb
int
out
cmp
push
iret
andl
jge
popa
mov
daa
sbb
in
and
es
pusha
ja
jg
adcl
dec
inc
xor
repz
push
jns
push
shll
push
aad
jle
jg
fs
lds
aas
inc
inc
jbe
sbb
jb
add
and
fsubrs
push
adc
mov
arpl
and
pop
mov
pop
psubsw
adc
cli
lock
and
stos
rolb
cmp
xor
jns
mov
in
adc
xchg
sahf
js
lock
fldl
ss
push
and
mov
sbb
and
push
sbb
int3
movsb
sbb
or
pop
shll
rorb
adc
mov
mov
cmpsl
cmp
test
jae
movsb
mov
lret
cs
movsb
rorb
jge
push
movsb
les
jecxz
cmp
lds
push
int3
in
js
add
pop
push
xorb
xor
add
loop
xchg
push
inc
mov
inc
cmpsl
mov
ret
mov
std
and
dec
xchg
xchg
fs
fs
pop
fst
inc
or
push
sbb
xor
call
and
mov
xchg
ret
lahf
mov
call
out
sub
dec
leave
sbb
rcll
clc
shl
push
pop
jmp
shrb
mov
popf
mov
mov
mov
fimuls
clc
dec
add
mov
sub
xchg
dec
xchg
adc
in
adc
std
ret
jbe
mov
xor
xchg
xor
lret
pop
insl
sarl
fwait
lods
ja
bound
sub
jp
enter
pop
cmp
int
aad
adcl
mov
mov
dec
cmp
adc
imulb
in
adc
adc
add
or
imul
pop
aam
pop
sahf
cld
insl
mov
aad
push
popf
das
pusha
mov
je
je
arpl
inc
xchg
lods
call
adc
or
paddb
or
and
xor
push
iret
sbb
jnp
les
inc
call
add
jnp
loopne
int
push
and
mov
loop
stos
mov
push
cmpsl
call
adc
fwait
out
pop
aaa
dec
jp,pn
jo
xor
fstpt
adc
ss
sbb
sub
das
fcoms
add
das
cmpb
xlat
scas
adc
add
in
inc
rorb
inc
hlt
movsl
dec
push
lret
xor
sbb
adc
in
xor
and
push
push
adc
hlt
or
xor
push
pop
aas
jmp
or
push
mov
push
inc
sbb
mov
push
mov
dec
iret
loopne
mov
xchg
ljmp
dec
xchg
mov
mov
jno
dec
outsb
fbstp
mov
sub
mov
pusha
inc
test
inc
inc
jle
jl
or
add
xlat
cmpsb
icebp
stos
or
mov
push
sbbl
aas
pop
lods
jp
icebp
jo
mov
stc
cmp
push
xchg
lcall
imul
mov
cld
in
cmp
pop
in
mov
pop
out
imul
sub
cmpsb
cmp
xor
adc
xor
insb
imul
fsub
and
cmp
hlt
in
imul
in
icebp
jo
iret
roll
jae
test
pop
rcl
bound
out
loope
cmp
addr16
bound
stos
cmp
push
shlb
inc
jge
pop
movsl
or
repnz
lods
fimuls
mov
call
xchg
push
xorl
jle
rcrb
adc
mov
loopne
xor
pop
insw
lret
mov
cmpsb
test
pusha
sbb
inc
push
adc
dec
push
loopne
push
mov
push
mov
mov
loope
or
repz
cmp
or
push
and
mov
fstl
ja
jne
sub
sbb
cmpsb
iret
jmp
xchg
sbb
dec
aam
stos
scas
or
jmp
lea
fdiv
push
repz
mov
pop
inc
and
xchg
mov
inc
mov
add
dec
jg
stc
xchg
add
rol
daa
inc
pop
pop
pop
loope
sub
stc
cwtl
mov
push
pusha
int3
in
sbb
fnsave
int3
or
lds
jnp
pop
adc
pusha
add
pushf
lcall
fdivr
movsb
inc
outsb
mov
sbb
adc
lahf
imul
xchg
cwtl
xor
xchg
or
sbb
sti
push
ret
bound
cmp
pop
jg
cmc
mov
sar
adc
scas
andl
cli
cwtl
out
lock
or
xor
or
inc
sbb
addb
rcrl
not
or
mov
mov
xchg
out
sub
sub
cmpsb
in
mov
cmc
add
xchg
test
rol
lds
mov
lcall
cwtl
and
xor
aad
shr
dec
mov
iret
adc
or
xchg
dec
frstor
mov
js
aaa
cmp
sub
jecxz
xchg
outsb
mov
pop
sub
fdivrp
dec
lcall
insb
mov
jo
push
inc
imul
push
imul
mov
testb
insb
js
add
pusha
fcomi
fldl
or
lret
adc
pop
lods
hlt
adc
inc
adc
fisubs
or
mov
push
cmp
push
dec
movd
fbstp
jp
mov
aaa
sbb
inc
cmp
add
sarb
popf
daa
xor
daa
xor
xlat
mov
int3
push
lds
jg
cmp
insb
add
out
loopne
xchg
addr16
loop
cli
mov
fs
imul
xchg
mov
rol
repnz
add
mov
push
xor
xlat
cmp
arpl
fs
or
add
and
mov
lcall
sbb
push
out
sbbl
js
imull
loop
notl
jno
or
xor
xchg
les
mov
xchg
lds
cmpsw
and
stos
dec
mov
std
jp
pop
pushf
pop
idivl
daa
testl
test
fwait
adc
test
mull
icebp
push
sbb
push
and
aam
and
pop
or
test
mov
jecxz
pop
pop
pavgw
mov
jge
pop
enter
ja
cs
shll
mov
mov
or
insb
enter
cld
mov
and
lret
inc
jae
lahf
addr16
cmp
mov
jo
int3
cmp
insb
and
mov
test
inc
sbb
rcr
loope
pop
cmp
push
lds
into
and
jo
dec
std
fists
sbb
mov
push
add
add
aad
movsb
push
cmp
mov
fdivrs
les
jno
inc
cmp
push
xchg
and
mov
push
repz
iret
add
xor
cmp
addr16
cmpb
in
xor
xchg
inc
inc
dec
fnsave
and
push
xchg
and
test
dec
inc
loope
jecxz
out
xchg
imul
aas
mov
test
loope
ja
jp
test
bound
hlt
stos
cwtl
cmp
ljmp
shr
cmp
clc
push
in
stos
scas
cmp
and
dec
mov
es
fsubl
sbb
adc
pop
sub
fs
inc
xchg
cltd
adc
or
repnz
test
loope
jl
mov
mov
add
mov
in
insb
in
rcrb
cmpb
jecxz
push
icebp
scas
les
push
pop
mov
push
fiadds
dec
in
loop
xor
popf
xchg
outsb
insb
xorb
insl
push
cmp
aaa
test
pop
lods
push
pop
fwait
add
sub
adc
inc
fwait
pushf
mov
xchg
mov
dec
and
into
lret
xlat
cmp
xorl
lds
call
and
in
xacquire
mov
ds
ret
xchg
shr
add
es
mov
or
inc
push
pop
scas
mov
xor
pop
mov
icebp
jno
inc
sbbb
adc
loopne
add
rcll
lahf
test
popf
pop
imul
sbb
sbb
and
and
js
pop
dec
into
mov
push
add
loopne
insl
dec
mov
repz
shll
push
mov
movsl
movsb
in
les
movsl
out
sbb
aas
sbb
mov
imul
fstl
push
loope
push
cmp
jo
hlt
rorl
ss
cwtl
aam
and
xchg
adc
and
bound
lods
loop
jb
and
jecxz
xchg
cs
adcb
lret
xrelease
xchg
cmp
call
fiadds
xor
pop
rcr
cli
jle
push
sub
mov
cmp
pop
divl
arpl
into
sar
jnp
testb
sub
jl
pop
cmp
jbe
mov
js
xchg
adc
jns
sbb
stos
enter
fadds
and
jl
ss
sahf
cmp
aas
fucomip
loope
fiadds
imul
or
mov
aas
pop
imul
mov
fcmovnb
and
hlt
sub
push
fstpt
call
push
jp
sub
insl
pop
and
fs
clc
cwtl
andb
pop
jnp
mov
test
jl
into
cli
add
add
mov
lahf
dec
clc
adc
mov
mov
push
fs
fadd
fisttpl
sarl
sub
call
mov
outsl
add
mov
xorl
sbb
test
loopne
in
mov
inc
es
test
ljmp
jmp
daa
push
clc
mov
mov
sbb
arpl
loopne
add
int3
ret
lds
or
mov
add
jne
or
leave
jl
out
bnd
mov
mov
push
add
lock
and
stc
bound
call
xchg
movl
ljmp
sub
leave
pop
jmp
mov
xchg
out
mov
call
push
out
or
adc
call
push
stos
pop
cld
mov
divb
jl
pop
add
sub
add
rorb
mov
mov
mov
stos
inc
fmulp
lds
cmpsb
xchg
xchg
xchg
shlb
jmp
and
mov
xor
or
pop
add
push
xor
add
lock
jmp
pusha
lock
jns
mov
mov
cmp
and
jb
pop
mov
dec
pop
cmpsl
lcall
inc
mov
movsb
cwtl
inc
push
aam
push
jno
adc
xchg
in
jecxz
push
add
ret
subl
mov
push
bound
sbb
js
pop
addr16
imul
xchg
insl
mov
aas
mulb
fsubrp
sub
imul
push
push
lahf
insb
loopne
sub
call
jnp
rolb
sbb
popa
popf
fidivrs
sub
out
test
sbb
dec
filds
add
or
out
adc
call
dec
andb
test
xor
adc
jle
popa
mov
mov
std
addb
inc
mov
data16
dec
jl
cmp
xchg
adc
or
lock
cmpsl
jecxz
add
dec
rcl
cld
insb
inc
jns
sti
sahf
in
xchg
xor
mov
es
mov
andl
cmp
out
roll
scas
push
imul
filds
and
or
jno
lcall
mov
jg
xchg
dec
pop
pop
pop
data16
mov
shlb
adc
dec
cmp
lcall
cmp
pushf
cmpsb
cs
aas
jmp
ret
decl
insb
xor
and
dec
pushf
push
lock
jg
loopne
mov
jecxz
lea
insb
adc
jbe
scas
lods
ret
ds
push
call
jge
fs
fisttps
cwtl
adc
cmpsl
outsl
jo
sbb
and
lcall
movsl
insb
out
movsl
xchg
adcl
stc
sti
dec
js
pop
cmp
jns
and
aad
mov
cmp
into
in
scas
xor
jbe,pt
movsb
sub
dec
popa
mov
adc
sub
push
jno
push
mov
rclb
jbe
jle
cmp
scas
sbb
adc
iret
lds
outsb
pop
pop
cs
movsl
sub
or
pop
popa
pop
sbbb
jg
xchg
dec
dec
out
xchg
cmpxchg
leave
sub
sbb
push
fcomi
outsl
adc
dec
lcall
inc
imul
mov
jno
jae
sbb
adc
scas
push
inc
in
ss
mov
dec
cld
cwtl
jne
fists
mov
lods
mov
adc
cli
imul
add
popa
idivl
sbb
add
scas
mov
adc
cmp
mov
jne
movsbl
jge
jecxz
movsl
pushl
cltd
outsb
cli
shll
adc
pop
mov
sbb
mov
sub
dec
daa
jb
or
add
sbb
fdiv
ds
push
ret
out
or
mov
cli
xor
add
stos
ja
aaa
scas
mov
add
fsubrs
cld
mov
mov
rcll
sub
dec
xchg
xchg
adc
xor
jb
dec
xchg
adc
negb
iret
iret
stos
and
pop
pushf
out
pop
fildl
dec
daa
push
daa
or
sti
jnp
ss
loopne
push
jb
mov
add
into
mov
xlat
cmpb
dec
repnz
sar
or
dec
shl
nop
sub
jp
inc
dec
cld
add
pop
test
int3
pushf
mov
arpl
sub
sbb
aam
jg
in
pop
and
and
leave
shll
ljmp
xchg
mov
lock
out
push
dec
je
aam
mov
imul
inc
fdivs
notb
mov
dec
jecxz
aam
cwtl
fldpi
xor
cwtl
out
lods
pop
jne
xchg
dec
and
pop
sub
pusha
inc
outsl
mov
add
mov
push
sarl
xor
fistpl
lret
sbb
insl
push
std
pushf
imul
and
add
mov
pop
and
jo
shlb
popa
arpl
jp
aaa
adc
pop
dec
fisubrs
and
sbb
pop
nop
iret
movsl
stos
imul
rcll
xor
arpl
int3
jns
mov
dec
mov
jecxz
sbb
jge
xor
xchg
insl
gs
push
bound
imul
cltd
popa
sbb
movb
jb
out
jge
lret
movsl
pop
les
loopne
addr16
call
and
scas
das
push
sbb
bound
add
xor
popf
inc
daa
fcompl
adc
mov
rorl
inc
je
mov
iret
dec
sbb
popa
cltd
jl
cmpsb
xor
aaa
push
dec
test
lods
es
fldenv
pop
push
lret
test
pop
sbb
aas
pop
imul
into
pushf
xchg
add
mov
decl
push
sub
dec
push
cs
test
iret
mov
lock
out
and
jne
xor
das
push
mov
pop
xor
pop
and
popa
rcl
btr
mov
sbb
or
shrb
adc
mov
xor
out
sub
into
aaa
loopne
lret
sbb
lahf
jnp
lret
cli
ret
addr16
xchg
mov
cmp
jge
lock
adc
lods
testb
dec
xchg
outsl
ljmp
fbld
or
jbe
out
xchg
pop
mov
mov
dec
popf
add
pusha
test
das
cmp
shl
dec
movb
inc
xor
movsb
add
or
mov
push
xor
lret
out
mov
leave
add
xlat
andl
pop
pop
loop
in
aaa
mov
or
test
emms
inc
jo
xor
and
ret
xchg
ja
xchg
add
xchg
pushf
jg
push
pop
mov
stc
mov
inc
mov
mov
adc
xor
dec
cmpsb
mov
and
pop
inc
imul
xchg
mov
lods
inc
lret
loopne
inc
push
cmp
push
mov
xchg
mov
add
mov
test
imul
fimuls
aaa
ja
aas
push
gs
jecxz
push
or
sbb
shr
jecxz
pop
and
stc
inc
xchg
lcall
pop
cli
add
xlat
repnz
push
lcall
dec
iret
hlt
cwtl
xchg
movsl
fistl
mov
or
pop
pop
lret
aas
lods
pushf
aam
cmp
adc
test
hlt
pop
in
mov
mov
inc
outsl
loop
aas
xor
mov
pop
push
inc
push
cmp
in
xchg
ret
flds
mov
lods
cltd
andl
adc
xchg
jecxz
stos
fwait
pushf
or
cmpsl
lods
mov
jae
push
push
add
and
add
icebp
movsb
dec
movsb
enter
sar
decb
pusha
or
js
ja
cmpsb
mov
xorb
inc
test
cmp
cwtl
pusha
push
fsubrl
jle
xchg
xchg
rep
push
inc
das
mov
cmp
cmpsl
push
loop
out
fstps
sti
daa
mov
sbb
std
pop
in
mulb
or
shll
pop
sub
or
mov
not
fidivrs
loopne
mov
dec
mov
rcrl
fbld
jle
jno
or
dec
sbb
or
daa
or
add
xchg
test
push
sar
sbb
pop
in
outsl
mov
das
cmp
jo
and
mov
int3
fs
test
mov
sbb
mov
stos
shrb
xor
cmp
lods
sub
add
pop
and
mov
and
adc
pop
subb
clc
nop
sub
or
out
mov
aam
leave
in
xlat
cli
adc
daa
out
les
mov
pusha
leave
push
push
pop
pop
aaa
lret
test
xchg
test
adc
fisubrs
dec
lahf
sete
adc
xor
scas
adc
xor
mov
pop
and
stos
loopne
shl
or
sub
dec
push
loope
sbb
mov
ss
pop
nop
and
mov
dec
insl
sbb
lea
cmp
mov
dec
lods
fdiv
sbb
sub
prefetch
or
push
xor
clc
nop
mov
fstpt
push
fidivl
dec
or
cmp
pop
or
into
and
loop
leave
daa
fstpt
repz
xchg
sbb
les
mov
aad
cltd
popa
cmp
out
xchg
jae
xchg
xor
xchg
or
mov
pop
xor
push
or
dec
jo
shrb
and
repz
dec
mov
add
aad
orl
addl
mov
xlat
push
lock
enter
outsb
mov
sahf
inc
mov
mov
mov
out
js
cmp
inc
xor
jns
mov
mov
fsubrs
push
jge
inc
call
mov
fistpll
and
sbb
imul
in
into
dec
enter
and
inc
xchg
xlat
xchg
popa
jg
lods
stc
je
in
fdivs
xchg
stos
out
push
lods
stc
into
and
in
jle
and
dec
dec
aad
pop
jecxz
subb
xchg
dec
add
dec
cmp
push
pushf
loope
sub
jp
cmp
mov
lods
xor
mov
mov
lds
mov
jbe
mov
dec
lret
lahf
mov
stos
call
sbb
jl
loopne
ds
out
inc
sahf
sub
jno
aas
dec
xchg
push
je
jnp
push
and
in
lret
fwait
sub
out
loop
mov
shll
mov
fs
ret
or
cmpsb
sub
pop
hlt
les
jne
test
sub
or
stos
add
ret
js
in
or
popf
sbb
xchg
and
les
mov
outsl
adc
push
test
xchg
sbb
jns
adc
idiv
mov
pop
cli
cmp
jbe
loop
jns
sub
dec
shlb
decb
out
sahf
or
mov
add
std
insb
shrb
cmp
je
dec
jle
aad
lods
push
mov
out
in
aam
dec
sub
xchg
jne
jno
loopne
mov
lahf
ljmp
mov
leave
mov
push
push
mov
adc
mov
and
and
test
pop
cltd
push
mov
add
lret
add
jl
std
xor
push
call
iret
andl
pop
call
mov
mov
push
aam
and
rol
sti
aam
repz
and
inc
mov
je
and
xor
les
out
hlt
jns
cmp
adc
enterw
sub
insl
pop
add
movsb
cmc
enter
lock
cmp
adc
cli
inc
aad
sub
rcrl
adc
push
out
in
or
push
xor
loopne
shll
dec
ret
repnz
jge
stos
ds
and
in
jb
cmp
stc
mov
data16
mov
lcall
sbbb
int3
aad
faddl
mov
and
lods
lods
mov
leave
fnstsw
and
test
jno
dec
xchg
stos
inc
or
sbb
xor
loopne
cmp
mov
loope
clc
aam
inc
jnp
mov
aaa
push
push
mov
mov
mov
jp
cld
xor
fistpl
cmp
mov
adc
add
mov
subl
cld
jle
cmc
push
jl
mov
loop
out
lods
sbb
xor
push
mov
xor
xchg
pop
dec
jmp
cld
in
pop
add
xor
add
dec
xchg
pop
xchg
notb
pop
loop
add
pusha
cmp
push
loop
out
clc
pusha
fs
dec
outsb
loope
mov
in
test
std
aad
js
ds
cmp
xchg
rol
aad
push
loope
jno
decl
pop
inc
outsl
push
dec
fcomps
mov
xchg
fsubs
stos
sahf
stos
dec
fs
push
jl
mov
lea
addr16
lock
inc
sub
sub
imul
pushf
enter
push
mov
mov
das
aaa
fcmovu
mov
mov
addr16
inc
push
inc
lods
insl
pop
sbb
stos
push
movsl
push
pop
out
push
add
imul
inc
mov
xor
sub
adc
loopne
scas
mov
sbb
jle
mov
mov
add
ljmp
enter
ljmp
iret
or
es
inc
in
addr16
pop
pop
mov
pop
call
lret
pop
std
pop
ljmp
nop
pushf
inc
mov
pop
xor
inc
sbb
adcl
and
clc
mov
sub
call
pop
movsl
daa
test
cmp
fisubrl
mov
mov
inc
in
xchg
into
insb
addr16
or
js
pop
push
mov
daa
adc
mov
mov
inc
jl
add
ja
push
or
hlt
pushl
sti
jp
jle
ljmp
fsubrl
repz
jecxz
and
inc
addr16
std
cmp
push
movsl
mov
sub
push
xchg
movsb
xor
push
leave
std
mov
and
popf
aam
pop
jbe
adc
lock
outsb
addr16
jmp
xor
iret
loop
inc
into
pop
sub
push
pushl
inc
sub
ret
and
in
cmc
jae
in
fstpt
and
pop
mov
pushf
cmp
lods
mov
out
inc
in
repz
cmpsl
lret
fisttps
mov
jns
mov
int3
sbb
xor
pushf
adc
fimuls
xchg
shr
mov
insb
jmp
inc
inc
out
loopne
imul
enter
mov
push
fistpl
cld
sub
dec
push
mov
hlt
jne
sub
mov
mov
or
orb
and
loopne
in
add
mov
leave
lahf
mov
in
jno
out
cmp
cmp
mov
lret
push
fmulp
sbb
inc
scas
adc
fs
xor
xor
jnp
call
mov
mov
cmp
insl
jmp
inc
ds
loopne
bound
mov
ret
jb
insl
add
mov
jo
pop
dec
pop
in
mov
or
sub
inc
jo
loopne
cmp
hlt
jge
mov
insl
jge
jecxz
data16
sub
fistpl
jge
push
jnp
lret
out
cwtl
out
cmp
and
mov
daa
adc
pop
cwtl
dec
out
xchg
stos
loop
js
sbb
and
sbb
jns
cwtl
movsb
inc
clc
xor
adc
xor
adc
mov
mov
mov
mov
popa
add
pop
int
jecxz
cmp
std
add
inc
fbld
cmpsl
or
jns
or
cld
orl
loope
push
loop
mov
in
andl
je
xchg
pusha
sbb
mov
and
test
insl
enter
push
mov
scas
mov
pop
fisubrl
call
mov
xor
sbb
fstl
out
xchg
mov
push
inc
push
cmp
imul
les
jo
fisttps
fcompl
gs
pop
cmc
cmp
inc
popf
inc
leave
pmaxub
xor
out
add
push
pop
leave
enter
dec
mov
adc
sbbb
fidivs
cwtl
adc
adc
dec
sub
rol
mov
jne
fdivl
add
loopne
cmp
inc
jle
add
insl
int3
call
push
mov
add
scas
and
data16
xchg
cltd
test
mov
jg
cmp
out
paddd
in
mov
jae
pop
push
mov
add
gs
loope
cmpsl
test
cmp
jmp
adc
jg
out
jnp
sbb
sti
push
jl
mov
jmp
jl
mov
add
mov
addb
ret
mov
and
outsb
add
dec
in
push
push
cmpsl
and
sbb
pop
add
xchg
mov
push
mov
and
leave
int3
movsb
gs
mov
mov
xchg
mov
scas
xchg
xchg
add
in
iret
dec
lret
cmc
or
push
push
and
gs
fs
sti
out
cmp
les
rcrl
sbb
sbb
pop
add
mov
fistps
pop
push
call
lea
inc
inc
leave
push
cmp
push
addr16
or
or
out
and
test
xchg
sub
push
hlt
xchg
movsb
lods
clc
pop
mov
loopne
out
mov
push
jmp
lods
adc
push
and
adc
push
or
mov
jne
mov
icebp
cmpsb
popa
clc
std
push
fwait
test
stc
mov
aam
sub
inc
popf
dec
hlt
or
lahf
mov
jle
mov
ret
shlb
movsl
mov
xchg
imul
dec
and
repz
js
test
ss
xlat
in
cltd
xor
call
push
or
outsl
push
adc
jae
and
cmp
or
push
icebp
jnp
pop
adc
sub
sub
xchg
cmp
sbb
in
sbb
clc
ret
jecxz
outsb
xor
add
scas
repz
push
ljmp
push
add
bound
stc
mov
mull
cltd
lea
or
push
mov
or
repnz
mov
lock
lret
je
mov
shrb
test
daa
add
lcall
pop
mov
stc
cli
or
push
mov
pop
clc
mov
push
xchg
sarb
adc
pop
inc
xchg
insl
adc
sub
push
cmp
xchg
jecxz
ret
mov
popa
dec
xchg
mov
inc
cwtl
in
lea
push
mov
lods
jp
xchg
repz
aad
les
mov
mov
xor
jne
or
fnstenv
subl
push
shlb
cmpb
sub
adc
stc
mov
fisubrs
in
ja
push
xchg
mov
inc
sbb
stos
test
dec
iret
jp
sub
popa
and
sub
idivl
sub
arpl
outsb
call
fwait
pop
lcall
jbe
mov
mov
cmpsl
or
loopne
out
test
hlt
push
mulb
pop
dec
and
fstpl
jge
loope
jb
xchg
or
mov
adc
ljmp
dec
adc
cmp
inc
adc
rcll
mov
add
pop
inc
jne
sub
mov
fadds
lds
ss
pop
and
mov
lcall
sbb
or
loop
cmp
push
add
dec
dec
xchg
dec
hlt
mov
cmpsl
and
jno
push
and
ja
push
mov
push
shll
leave
sbb
sbbb
testl
dec
ficomps
cmp
and
mov
ret
imul
enter
push
pop
jo
pop
dec
mov
rcrb
insl
repnz
sub
std
test
pop
adc
xor
out
in
mov
inc
dec
insl
adc
call
mov
repnz
cltd
add
outsl
add
mov
mov
out
jl
inc
stos
xchg
ror
mov
f2xm1
push
mov
lahf
leave
xchg
out
xor
mov
lock
xchg
inc
or
push
mov
jmp
repnz
cmp
adc
lds
cmp
sbb
xchg
sarb
dec
lcall
mov
jb
sti
push
cmpsb
int3
mov
nop
xchg
and
mov
jle
stos
mov
rolb
popf
sub
or
sub
push
push
jo
jae
sti
cmpb
push
pop
je
outsb
add
add
or
jp
ffree
jno
xchg
loop
sahf
xor
pop
jns
out
shrb
hlt
cmp
cltd
daa
fists
or
outsl
std
out
adc
cs
cmp
xchg
and
lret
in
out
mov
and
sub
inc
shl
adc
movsl
clc
fsubs
loope
jb
insl
jecxz
das
xor
in
subl
cmp
cmp
ljmp
mov
lock
lods
jbe
jp
pop
mov
test
test
out
cmp
push
sbb
sub
inc
and
lret
mov
sbb
pop
sbbl
insb
jle
inc
push
hlt
js
jge
icebp
mov
xlat
xor
add
push
sbb
inc
jo
into
clc
mov
rorb
icebp
js
and
jns
add
out
mov
xchg
inc
jecxz
xchg
cmpsl
xchg
or
ret
add
push
inc
jmp
arpl
cmc
je
mov
and
out
sbb
fdivs
xchg
or
in
cltd
jl
hlt
sarb
adc
rorl
cltd
mov
mov
jle
je
stos
sub
shll
add
das
ret
add
mov
push
dec
mov
repnz
jnp
and
das
das
fdiv
les
sbbb
xchg
or
xlat
mov
mov
add
inc
lds
mov
dec
sbb
out
outsb
xchg
add
jecxz
out
pop
pop
and
lea
fs
rorb
call
daa
add
cmp
aad
pop
hlt
dec
sahf
or
adc
daa
pushf
dec
pop
pop
pop
out
shrb
jge
aad
sahf
nop
stos
jbe
das
imul
inc
out
mov
mov
jne
add
jp
push
js
dec
xor
addb
mov
pop
cld
bound
cltd
jp
add
mov
mov
xchg
gs
shll
fisttpl
lods
fsubrp
popf
mov
push
fnstcw
push
stc
jecxz
insl
movsb
push
enter
cmc
inc
xchg
cmc
and
xor
jmp
rclb
jns
mov
or
sti
mov
test
lds
imul
jb
or
addr16
out
in
popa
sbb
fists
adc
sub
loope
and
fs
pop
cmp
adc
xor
aam
cmpsb
movsb
xchg
test
fisubs
fisubs
dec
jl
shlb
aas
adc
add
and
pop
out
hlt
xor
shrd
out
out
sbbb
cmpb
xor
dec
jle
cmp
fildll
insl
adc
adc
inc
jecxz
loop
aas
dec
call
inc
fwait
jle
inc
mov
int
jmp
add
dec
stos
rcrl
movsl
push
es
bsr
dec
mov
xchg
iret
in
mov
rorl
push
in
jo
sub
jb
sbb
das
cmp
inc
inc
inc
and
cmpsw
mov
mov
inc
aaa
add
mov
mov
cmpsl
push
int
lea
clc
sarb
mov
test
icebp
inc
lret
ja
add
rcrb
lret
adc
sub
pop
faddp
psubd
notb
aad
popf
mov
leave
movsl
aaa
stos
and
add
enter
pop
dec
imul
push
ret
xchg
sub
mov
cltd
sub
inc
sub
icebp
adc
rcll
sub
push
imul
aas
inc
xchg
std
push
cwtl
loop
inc
jmp
pop
mov
cltd
xchg
icebp
and
test
jg
sbb
or
push
rolb
mov
inc
inc
sbb
dec
mov
add
into
mov
and
sbb
insb
sbb
sbbb
or
lcall
inc
call
lods
aam
mov
lods
pop
dec
loope
push
data16
jecxz
aaa
xor
fsubs
pop
rcll
movsl
add
aam
sub
jnp
inc
add
insb
cmp
in
jp
push
in
int3
mov
xchg
xchg
cmc
push
add
test
xchg
lods
je
xchg
incl
dec
xchg
inc
stc
insl
gs
out
jbe
aas
xor
outsl
aaa
xor
and
or
mov
lcall
jnp
pop
xchg
push
cmp
aam
fstpt
add
push
add
sub
jns
ja
sbb
insl
pop
shlb
aam
jo
repnz
push
in
mov
call
add
int3
jno
xchg
lock
sahf
sub
xchg
rcrb
add
or
add
pop
insb
xchg
dec
xor
inc
out
repz
xor
cmpsb
cmpl
push
movsl
push
and
test
xor
inc
mov
jg
imul
jmp
jmp
loopne
es
and
leave
inc
pop
out
leave
xchg
sub
jo
imul
call
insb
and
sub
mov
pop
aaa
sub
mov
and
sbb
cmp
lds
lret
mov
pop
push
js
aam
outsb
fstpl
mov
jne
pusha
push
lds
xchg
cwtl
push
xchg
pop
push
leave
rcll
imull
pop
xchg
and
sbb
outsb
xchg
dec
or
negl
pushf
sti
xchg
push
or
ret
xor
xchg
in
bound
pop
xor
mov
aaa
test
pop
mov
hlt
ja
or
cs
mov
mov
fadd
addr16
ret
sbb
cmp
xchg
js
push
pop
xor
jge
xor
xchg
clc
push
push
arpl
js
cs
imull
dec
mov
pop
es
pop
into
sbb
test
scas
sub
adc
repz
mov
xor
sahf
ret
in
adc
lock
xchg
arpl
ficoml
pop
pusha
push
jns
sbb
call
repnz
ja
insl
insw
push
inc
out
pop
insb
sbb
jg
arpl
lahf
mov
std
rclb
xchg
stos
mov
repz
adc
ja
test
stc
cmp
sbb
mov
inc
insb
rcrl
jo
nop
out
add
xchg
test
add
lcall
mov
sub
icebp
jp
xchg
jmp
int
rol
iret
out
pop
adc
ja
popf
mov
sub
repnz
rorb
dec
lahf
imul
fwait
ret
sub
xchg
sbb
roll
xor
mov
stos
xor
sti
mov
fdivrl
dec
orw
xchg
xchg
popa
adc
jno
loope
xor
insb
test
pop
cli
sbb
pop
jno
cli
push
popa
cwtl
fisubs
arpl
push
dec
cmp
cmp
pushf
jnp
out
enter
mov
inc
in
and
lods
xor
cmp
mov
mov
test
dec
and
add
and
and
cmp
shlb
fstp
scas
jb
adc
mov
mov
imul
or
repz
cmpl
ljmp
jmp
cmp
push
shlb
scas
cmc
in
cmc
int3
std
test
mulb
add
cmp
pop
lcall
or
enter
xchg
loop
pop
sarb
or
cmpsl
xor
stc
xchg
sbb
mov
in
fwait
fs
ljmp
es
and
int
inc
fcomp
inc
mov
jle
popa
cld
mov
into
adc
fcomi
ret
in
test
out
push
in
or
mov
decb
cmpsl
dec
and
ss
cmp
pop
lods
lcall
jb
pop
jnp
adc
inc
leave
lock
jp
xor
int
iret
adc
dec
cmp
out
pop
lea
add
lock
mov
sbb
inc
or
js
in
pop
jg
lcall
jle
mov
stc
insb
dec
lods
bound
dec
cld
xchg
mov
mov
movsl
mov
scas
mov
shll
mov
mov
pop
and
sbb
iret
add
adc
mov
dec
ljmp
stc
mov
fdiv
push
lahf
sub
or
push
pop
rcr
repz
aam
adc
imul
xor
leave
xchg
jp
jnp
pop
sbb
add
add
gs
or
sub
and
xor
mov
push
mov
sub
mov
in
popa
test
pusha
fnsave
mov
mov
cmp
pop
call
imul
ljmp
arpl
mov
push
and
sub
lds
ret
xor
fbld
dec
xorl
lods
adc
lds
pop
test
movsb
sbb
aam
xchg
lret
or
sub
int3
leave
gs
mov
pop
out
in
rcrb
aad
push
mov
adc
and
sbb
lahf
pop
add
mov
lds
pop
les
jns
push
sbb
inc
nop
jle
mov
aad
cmp
add
iret
adc
ss
push
jecxz
lret
sti
test
add
cmp
orl
call
inc
dec
sub
fstl
cmpsb
add
and
mov
ret
in
xor
sub
cld
mov
adcl
dec
mov
dec
mov
sbb
rorb
adc
jnp
scas
and
movsb
jg
and
pusha
ret
jb
sub
mov
leave
cmp
lret
aam
mov
popf
inc
add
dec
xor
cmp
std
dec
xchg
adc
jne
or
gs
mov
ljmp
push
xlat
and
sub
sub
xor
jno
subl
mov
bound
out
xchg
xchg
aam
sbb
andl
sbb
dec
inc
sahf
cmp
dec
adc
pop
les
cmc
mov
sbb
fwait
adc
pop
sti
mov
es
fsubp
adc
les
cmp
push
or
xor
ss
out
sub
push
pop
mov
xchg
mov
lods
push
sbb
repnz
cmp
adc
xchg
push
mov
jbe
sbb
sbb
push
int
or
sub
outsl
and
pop
xchg
repz
push
mov
movsb
mov
and
cmp
imul
aas
stos
or
nop
fidivrl
add
dec
add
or
jmp
subl
cmc
jo
add
push
sub
and
and
pop
ss
push
and
dec
xor
je
add
nop
and
dec
jmp
test
mov
cwtl
dec
popa
ret
rcll
pop
int
shlb
xchg
cmp
mov
call
or
push
mov
cmp
rorb
imul
hlt
movsl
push
jb
add
xlat
movsb
mov
mov
mov
mov
inc
fmuls
or
xchg
js
cmpsb
pop
jno
fisttpl
stos
mov
dec
xchg
adc
xor
xor
jp
mov
mov
lret
inc
dec
cmpsb
mov
jbe
jecxz
mov
lret
mov
jle
js
test
xor
out
imul
jmp
push
scas
cltd
and
cld
mov
dec
xchg
push
rolb
je
in
or
out
push
mov
sub
pop
mov
mov
sbb
xchg
out
sbb
dec
mov
daa
fxch
fisubl
lds
jae
lock
mov
mov
pop
jmp
dec
jg
shll
mov
cltd
inc
stos
xchg
push
cld
and
push
sub
les
push
and
test
push
jmp
movsb
xlat
jmp
mov
inc
dec
adc
jb
fsubp
int
sub
test
ror
mov
xchg
in
les
clc
or
cwtl
adc
mov
adc
pusha
test
enter
pop
xchg
fldl
push
pop
xchg
pop
pop
xor
in
inc
inc
cltd
out
or
es
aas
inc
jno
punpckhbw
jl
cmpl
insb
and
pushf
outsl
xor
movsb
ret
mov
or
aam
insl
and
add
mov
mov
add
imul
mov
jl
mov
mov
rol
xor
push
pop
cmp
xchg
mov
mov
dec
push
sbb
aad
sbb
in
and
or
push
jne
shr
inc
fldcw
pusha
shr
out
outsb
or
and
std
ret
imul
jle
cs
xor
sarl
imul
or
insb
jbe
hlt
repnz
dec
into
lock
sub
rcll
mov
mov
insl
mov
enter
rclb
imul
or
icebp
mov
outsb
insl
jp
outsb
loopne
repz
popa
jmp
push
mov
movsb
sbb
rorl
jae
dec
fcomps
mov
sbb
outsb
jmp
call
icebp
jmp
ja
and
loop
xor
jmp
sahf
xchg
cmpsl
repnz
mov
jp
insb
test
cmp
out
jo
lods
je
inc
inc
ss
cli
or
dec
mulb
pop
inc
sbb
jno
sahf
mov
xchg
nop
mov
ds
loopne
out
mov
push
pop
or
fbld
mov
xchg
inc
aam
fdivs
sbb
movsl
popf
repnz
inc
fistl
sub
mulb
dec
into
jp
or
sbb
add
aam
fildll
rol
inc
fsub
push
mov
xchg
mov
sub
add
mov
add
dec
jl
xchg
inc
mov
adc
gs
pop
test
mov
scas
addr16
mov
add
out
jle
inc
sub
jge
push
in
bound
lcall
xchg
and
sub
inc
cmp
push
or
dec
insb
jae
je
mov
mov
lods
adc
mov
inc
cltd
loope
mov
ss
decl
lea
add
cmp
movsb
pop
gs
push
ss
add
pusha
mov
iret
fistpll
inc
xor
in
outsb
out
je
es
mov
outsl
aad
xor
stos
mov
pop
data16
adc
fsubr
ficoml
push
lea
or
adc
pop
push
mov
mov
icebp
sub
cmc
lret
loope
pop
mov
ljmp
loopne
pop
push
jo
dec
mov
and
sbb
push
enter
and
jp
icebp
mov
push
js
add
rorb
inc
inc
js
out
clc
xor
stos
dec
jg
cmp
stos
or
imul
xlat
shr
add
leave
aad
xor
sbb
mov
jb
sub
and
out
sbb
icebp
fisttps
shr
ret
xor
fwait
mov
sub
mov
outsl
push
dec
jecxz
xchg
mov
enter
icebp
push
shll
xorl
xor
jmp
mov
xchg
lods
mov
mov
jle
sbbb
je
jecxz
andl
rclb
or
into
dec
pusha
in
loopne
add
pop
cltd
call
mov
and
or
cmp
loopne
popa
insb
int
xchg
test
cmp
xor
orl
adc
leave
jle
jb
push
pushf
cmp
dec
push
or
cmp
int3
daa
add
lock
jns
clc
cmp
jne
in
out
mov
and
dec
pusha
add
pop
ja
mov
cmp
adc
test
rolb
xor
aam
or
mov
stos
push
mov
or
ror
sub
insl
mov
fistl
sbb
jbe
or
jge
and
mov
jns
leave
dec
adc
sbb
aad
jge
mov
adc
jb
sbb
imul
adc
cmp
jg
pop
mov
aam
das
add
test
sbb
loopne
test
xor
ss
clc
lret
and
mov
mov
cmp
mov
inc
aam
icebp
jecxz
mov
mull
jb
icebp
data16
hlt
mov
and
push
orl
inc
fdivr
or
icebp
fsubp
shlb
mov
fxch
mov
cvtps2pd
scas
add
fimuls
bound
add
cmp
lahf
sti
sbb
arpl
xchg
hlt
insb
xor
pop
xchg
jmp
pop
inc
nop
in
sub
ja
into
das
add
in
in
mov
xchg
fdivs
icebp
out
xchg
int
xchg
pop
pop
int3
push
pop
das
sbbl
xlat
setge
je
adcl
xchg
ret
xor
fcomp
mov
subb
pop
mov
test
icebp
hlt
and
sub
xor
inc
dec
gs
cmpsb
add
fwait
scas
fdivl
lods
pop
out
jbe
lds
jno
jmp
pusha
or
push
mov
xchg
push
push
xchg
cmp
xchg
in
mov
sub
push
dec
or
pop
shlb
leave
add
sub
xchg
jae
stos
sub
xor
jl
loopne
dec
dec
stos
sub
mov
adc
push
mov
jnp
pop
gs
mov
jnp
sahf
int
cmp
lret
mov
mov
mov
loope
call
jns
mov
sbb
xchg
loopne
stos
cld
fldenv
pop
hlt
mov
push
ljmp
loop
mov
scas
insb
test
mov
xor
aas
push
or
dec
add
jnp
dec
sbb
cs
add
pop
push
ss
cmp
fyl2x
imul
xchg
mov
dec
mov
gs
and
push
das
add
push
dec
mov
xor
cwtl
cs
dec
and
lahf
jle
add
pop
xor
popf
xchg
out
clc
or
jb
ljmp
ret
nop
cmc
xor
pop
mov
subl
mov
daa
sub
mov
push
fnstsw
mov
adc
pop
jns
cmp
xchg
shll
cmp
or
popa
test
movsl
mov
out
mov
stos
aaa
lret
shll
mov
daa
aaa
mov
and
lds
in
cmp
dec
push
popa
sub
popa
test
and
sbb
jne
test
mov
in
lcall
jb
subl
stos
das
sbb
and
pop
push
outsb
cmp
jbe
inc
out
xchg
rcr
ret
rcrb
rclb
test
sbb
enter
ljmp
shrb
jne,pt
and
pop
popf
fmul
jne
shrb
out
jmp
insl
xor
push
js
mov
pusha
inc
subl
aad
xchg
push
rorb
fiaddl
or
push
sub
pop
lods
or
pop
lret
pop
pushf
cmp
rep
int3
cmpb
test
repz
stos
cmc
sahf
sbb
je
cmpsl
push
jns
jmp
mov
sti
and
cmp
arpl
cld
inc
movsl
mov
mov
int3
jecxz
push
or
inc
inc
push
cli
jb
out
sbb
int3
mov
clc
ja
xchg
mov
xchg
sti
xchg
mov
pop
jne
movsb
mov
cmp
int3
jae
jecxz
mov
lds
push
sti
test
jmp
cwtl
cmpb
loopne
push
add
dec
mov
xchg
movsw
setle
cmp
je
clc
lcall
movntq
xchg
gs
movsb
mov
xchg
daa
inc
repz
sub
dec
xchg
loopne
pop
adc
jo
idivb
push
add
btsl
pmullw
fnstsw
mov
cmpsl
add
jne
ljmp
cmp
arpl
dec
ret
mov
mov
add
lods
inc
andl
mov
ja
mov
addr16
out
imul
loopne
jnp
mov
daa
fld
push
loop
push
jae
fs
push
bound
sbb
mov
subb
fcomps
int3
push
push
cmp
xchg
in
cli
cmpsl
ljmp
ja
jg
xchg
lcall
pop
sarb
jg
or
or
scas
sub
dec
mov
in
sub
mov
xor
mov
in
rcl
mov
and
loop
mov
jecxz
leave
aaa
lea
xchg
ds
mulb
and
test
cmc
jmp
cmpl
mov
faddp
lods
out
push
jno
sub
fwait
cmp
mov
jg
sub
cmpsb
push
lret
push
and
rorb
jne
mov
adc
stc
scas
cltd
jns
fistpll
pop
push
mov
cmpsl
sbb
mov
mov
out
mov
mov
pop
jo
jl
fiadds
jecxz
adc
mov
popf
jb
aas
jnp
rcll
shll
mov
mov
xchg
mov
leave
fcmove
mov
mov
cmp
inc
sbb
movsl
addb
jge
scas
mov
jb
aam
loope
mov
sbb
dec
pop
inc
push
lahf
outsl
xor
cli
mov
push
sub
loop
ficomps
pop
mov
lods
adc
xchg
inc
cmp
xor
sub
jno
sarb
sbb
out
xlat
stc
icebp
mov
xor
adc
stos
or
push
lock
jg
icebp
dec
adc
adc
cmp
jbe
sbb
mov
cmp
scas
js
shl
testl
fcomps
cmpsl
push
lds
fadd
fwait
cmp
lret
nop
out
inc
dec
movsb
shrl
into
cmpsw
mov
cs
leave
or
pushf
mov
fdivl
pop
push
jnp
xor
bound
loop
fstpl
ret
pop
jg
std
lret
insb
je
jns
rorb
jo
fs
or
js
imulb
inc
aam
inc
ret
fmul
sub
fisttpll
repz
mov
je
orb
cltd
sub
xchg
xchg
insb
push
jns
pusha
lcall
sbb
sbb
shr
add
push
adc
and
adc
mov
in
adc
je
add
sti
gs
adc
pop
jbe
adc
xor
adc
mov
push
orl
sarb
addr16
sub
or
cwtd
hlt
add
xor
int3
jb
push
and
mov
sbb
xchg
je
xchg
pop
xchg
or
stos
xchg
sub
sbb
xchg
jp
lods
xchg
add
test
aaa
pop
mov
and
pop
xchg
imul
outsb
jnp
les
push
into
or
in
adc
push
xlat
inc
outsb
sbbl
mov
jecxz
xor
es
dec
daa
mov
mov
dec
leave
mov
pop
mov
stos
fs
lods
fistpl
sbb
xchg
lock
pop
ret
inc
mov
loope
out
test
or
popa
pop
mov
ss
lods
adc
inc
add
lret
inc
inc
sti
push
adc
jae
cltd
jae
dec
mov
pop
imul
add
xchg
pop
enter
mov
push
add
jl
mov
cli
mov
hlt
nop
mov
mov
xrelease
push
mov
insb
mov
adc
dec
lock
in
lahf
dec
mov
sub
loopne
inc
loop
hlt
mov
or
arpl
out
fiaddl
fdivs
daa
cmpsb
push
out
push
mov
mov
js
mov
push
out
mov
movsl
sub
inc
int
pop
addr16
mov
lds
jmp
js
negw
xchg
pop
lahf
dec
lret
add
xor
shrl
push
cwtl
fstpt
sub
call
xchg
push
cmpb
lods
push
xchg
mov
mov
mov
out
lret
cwtl
fnsave
sbb
sbb
add
cwtl
mov
mov
add
sub
dec
dec
jnp
cmpsl
mov
xchg
mov
xor
adc
scas
test
pop
cltd
clc
dec
sub
mov
popf
adc
jmp
call
loopne
lods
or
cmp
or
and
jp
jae
inc
mov
lock
mov
mov
rol
cltd
push
jl
jno
imul
xchg
sub
sar
das
dec
jo
mov
out
mov
pmulhuw
daa
jmp
sti
push
test
mov
pop
cmpsb
adc
sahf
rcr
add
out
sbb
xlat
cmp
dec
jae
mov
jmp
int3
push
xor
pop
adc
dec
mov
push
mov
rcrb
sbb
pop
xor
in
mov
fisubs
dec
mov
cmp
cmp
xor
in
pop
jmp
lods
pop
mov
adc
test
movsl
cwtl
test
in
dec
lock
lret
fwait
cmp
aad
sbb
sahf
hlt
sbb
xor
mov
mov
push
cs
xchg
mov
mov
outsb
sbb
hlt
pop
xchg
mov
pop
es
xor
shlb
sar
inc
xor
push
and
ljmp
out
imul
movl
cmpsl
cmc
jbe
clc
inc
mov
gs
adc
in
mov
sahf
cwtl
jnp
cld
int3
lock
data16
rorl
sarb
loope
dec
mov
scas
addl
pop
ret
fbstp
mov
pop
loopne
cmp
or
testb
hlt
test
movsb
or
ja
clc
outsl
fwait
xchg
imull
mov
enter
lret
jmp
sbb
rorl
frstor
adc
jmp
icebp
cli
rcll
and
push
mov
bound
push
add
mov
lret
mov
xchg
sahf
mov
mov
jg
or
bound
mov
in
pop
xor
movsb
sub
shlb
push
xor
scas
push
add
fisubrl
es
gs
js
xor
jle
jl
pusha
push
pop
scas
dec
inc
shlb
imul
daa
stos
js
lahf
cld
shll
leave
hlt
mov
ret
loopne
xor
cmp
mov
push
movsb
lahf
mov
mov
mov
mov
in
into
mov
jb
cmpsl
cmc
dec
mov
call
pop
aaa
imul
loopne
push
insl
bound
in
jnp
sbb
nop
cmp
push
fstp
mov
arpl
push
movsb
sbb
mov
push
adc
ja
add
lcall
or
or
inc
hlt
sbb
stos
and
or
es
push
jle
aam
jmp
ret
push
jbe
inc
pop
inc
mov
fchs
sahf
or
aam
mov
ja
sti
ret
pop
or
and
sbb
or
and
ret
rcrb
aaa
dec
not
sub
popf
or
insb
fwait
clc
ret
and
inc
xchg
ja
rclb
pop
jno
push
aaa
stos
mov
push
jns
sbb
adcb
pusha
push
mov
jae
aam
cmp
mov
sub
cmp
push
repnz
into
ss
sub
mov
inc
adc
cmc
shrl
cltd
scas
xchg
loopne
mov
mov
ret
adc
dec
adcl
in
rcl
jnp
pop
jp
jecxz
hlt
movsb
leave
loopne
push
jb
mov
add
xor
fildl
jecxz
push
das
sub
mov
and
test
sbb
test
scas
sub
stc
push
fmuls
xor
sub
mov
dec
xor
cmp
inc
fsubs
xor
mov
or
in
mov
fwait
push
je
xor
ja
xor
out
lea
jns
test
in
sub
xchg
adc
mov
adc
cld
fstl
aaa
jns
push
insl
into
lahf
add
jne
gs
mov
stos
push
int
lea
push
outsl
or
fwait
lret
inc
popf
lcall
mov
sbb
inc
sub
push
sub
call
in
das
jp
fcoml
iret
mov
loope
mov
inc
pop
into
fistpll
pop
bnd
fidivrl
mov
jo
cmp
pusha
add
push
and
ja
daa
jle
fisttpll
pop
mov
cmp
ret
mov
rclb
and
adc
cmpsb
mov
mov
xchg
or
cmp
pop
xchg
pop
out
dec
mov
pop
imul
insl
out
imul
xor
jns
jg
push
imul
test
xor
pop
sbb
pop
imul
and
stos
popa
sub
mov
repnz
or
xor
leave
push
xor
in
mov
repz
sti
outsb
into
cld
or
test
jecxz
mov
shrb
stos
loopne
sahf
and
je
ret
out
jmp
out
popf
mov
aas
mov
mov
push
add
xchg
xor
pusha
icebp
sub
jge
int3
jecxz
sub
lea
pop
loop
adc
cli
js
outsb
nop
and
xorb
test
pushf
jle
pop
sbb
add
and
sahf
mov
lret
fistpl
shlb
repnz
iret
sti
aaa
loope
mov
es
cmp
dec
cs
push
loopne
imul
ret
adc
int3
std
in
aaa
or
out
mov
jecxz
jle
or
scas
insl
andb
or
lds
aad
push
insl
adc
push
call
ja
out
sbb
pop
add
mov
dec
jl
popa
out
fsub
dec
mov
inc
fstpl
sub
mov
push
mov
or
mov
push
jg
pop
or
popa
jmp
mov
xor
scas
test
imul
lods
lds
fbld
outsl
xlat
sbb
mov
stos
aas
std
xchg
jnp
arpl
lods
mov
imul
rcll
push
xor
push
jb
loopne
push
xchg
inc
out
pop
ret
xor
jmp
sub
dec
and
cmp
out
xchg
popa
dec
pop
rcll
push
aas
lods
mov
cmp
sub
mov
and
push
jno
test
jae
out
shrb
and
sbb
dec
stos
dec
jg
std
popf
adc
pop
and
out
outsl
enter
pop
xor
pop
js
dec
pop
bound
or
dec
cmp
cs
xor
bound
test
adc
jns
aad
sub
cmc
mov
ds
add
or
adc
push
cmp
or
je
sti
and
mov
out
aaa
push
lods
dec
inc
adc
inc
arpl
pop
xor
je
xchg
push
jl
jno
sub
call
cmp
push
cmpsb
je
es
and
scas
fbld
jmp
cmpsb
jb
scas
xchg
or
sub
es
out
mov
rcrb
mov
fxch
xor
shll
cmp
into
mov
adc
and
inc
jmp
jb
arpl
or
cmpsb
aaa
into
cltd
cmp
dec
or
pop
xchg
int
pop
stc
lcall
jbe
adc
mov
sub
in
mov
cli
aas
sub
jo
mov
or
lahf
fdivr
punpckldq
xor
aam
sbb
xor
jge
push
divl
loopne
adc
rcrb
insl
xor
adc
loop
arpl
jno
stos
fdivp
decl
pop
mov
sarb
pop
std
mov
sbb
flds
movsl
adc
lea
loopne
ja
orl
mov
sbb
int
mov
xor
mov
ret
cli
dec
cmp
les
divb
imull
xor
mov
sub
fisttps
aas
sbb
and
dec
popf
sahf
insl
and
adc
mov
jo
sbb
push
sub
das
push
dec
mov
jb
xor
add
push
mov
add
imul
pop
jno
loopne
sbb
xchg
cmp
shll
iret
mov
iret
fidivrl
push
mov
cld
inc
repnz
and
inc
movsb
sbb
in
or
sbb
cld
mov
mov
jne
ret
inc
and
out
push
pop
pushf
mov
dec
int
test
push
fnstenv
jle
adc
nop
jns
xor
popf
arpl
orl
in
mov
ret
stc
pop
push
push
adc
arpl
ljmp
mov
scas
cmpsl
xlat
sbb
rcll
add
movsl
push
ror
pop
pusha
adc
fstl
pminub
movsl
add
sbb
ljmp
cmpsb
hlt
sbb
push
repnz
bound
daa
icebp
in
rol
lahf
inc
inc
mov
rcrl
mov
jbe
js
int
test
cmpsl
xchg
dec
fstp
inc
lock
jl
jecxz
outsb
sbb
rcrl
pusha
pavgb
sbb
jno
push
rcl
jne
sub
jb
insb
inc
add
in
stc
mov
out
in
mov
mov
ljmp
clc
push
pop
cld
lahf
adc
xor
inc
ljmp
jmp
push
fdivl
xchg
dec
dec
arpl
mov
adc
les
movsl
jnp
ds
mov
test
mov
mov
aas
loope
jno
push
ds
es
adc
or
pop
inc
xor
out
int
pusha
sbb
ljmp
pop
jae
inc
add
xchg
lods
icebp
sahf
mov
les
rcl
and
xchg
pop
ljmp
movsl
ljmp
pop
inc
adc
xchg
lods
aam
int3
lret
sar
loope
cmpsl
loopne
dec
pop
and
scas
jge
ds
lods
cmpl
xlat
xchg
fistpll
push
mov
das
xchg
and
mov
push
pop
mov
mov
std
in
xchg
or
mov
das
mov
ss
std
test
jmp
mov
loop
xchg
add
sahf
mov
jle
roll
inc
xor
xlat
movsb
repnz
sti
mov
jmp
or
shlb
xchg
pop
and
xchg
jecxz
jae
push
in
aad
mov
scas
scas
cmc
dec
jp
inc
pop
mov
dec
sbb
cld
mov
add
or
inc
mov
sbb
cld
jno
mov
hlt
js
sub
cmp
push
xor
add
adc
cmc
inc
mov
pop
imul
cmc
add
out
out
imul
inc
or
jbe
arpl
lahf
jns
scas
lds
cwtl
jno
jp
popa
and
adc
adc
lods
and
ljmp
push
hlt
xor
sbb
mov
inc
fdivrs
adc
mov
and
cmp
mov
dec
xchg
add
xchg
sub
rep
cmpsl
add
and
scas
lods
jl
out
push
lods
sahf
dec
out
sbbl
xchg
adc
into
add
or
stos
arpl
notb
addl
mov
pop
mov
push
cmp
mov
pusha
arpl
mov
add
mov
popl
mov
add
push
push
push
movsl
test
add
mov
push
cmp
mov
fsub
lret
js
add
mov
xchg
dec
dec
or
mov
stos
lea
in
xchg
popf
add
and
dec
inc
and
fcoml
fldcw
rcrl
dec
daa
imul
movsb
loop
std
jnp
cmp
cmp
jb
inc
cmp
out
mov
fdivrl
cld
dec
add
or
and
imul
or
cmp
lret
pop
mov
cmp
fcomps
into
sub
dec
jl
push
pop
sbb
or
out
test
adc
cmp
add
xchg
iret
xor
sub
mov
mov
adc
sarb
dec
test
push
mov
test
stc
inc
push
pop
sub
fdivs
cmp
adcb
jb
leave
inc
dec
mov
xorl
andl
xor
ljmp
inc
stos
adc
mov
mov
push
outsb
pop
cmp
test
movsl
in
sub
jecxz
cmp
xlat
mov
xchg
out
movsl
hlt
movsl
lret
shrb
lock
sub
fdiv
or
out
in
das
sti
mov
add
psrad
push
cmp
and
cmp
pop
xchg
nop
in
cmp
inc
pop
jg
outsb
repz
sahf
test
pop
movsb
test
sub
xor
inc
and
lods
xchg
sbbl
pop
mov
outsl
loopne
mov
cmpsl
mov
fbld
out
out
xor
andb
lret
icebp
inc
and
in
pushf
push
mov
inc
pop
and
aad
dec
fbstp
sbb
xor
dec
jns
xor
and
negb
jmp
stc
xor
dec
jns
loope
push
sti
pop
in
jno
fstps
les
add
xchg
shr
sbb
outsl
insb
xchg
mov
das
in
push
mov
pop
rcrl
iret
inc
lcall
fistpll
cmp
icebp
shrb
push
mov
aas
sbb
mov
adc
sbb
gs
clc
cmp
in
jecxz
adc
cmp
cmp
cld
cmp
out
wrmsr
fcom
sbb
pushl
ds
arpl
mov
push
push
or
inc
adc
arpl
push
inc
push
push
jmp
sub
xlat
loopne
mov
cs
xchg
cs
mov
mov
and
out
mov
aaa
jg
jb
sarb
push
call
sbb
xor
popa
rcl
fimuls
push
jnp
push
scas
std
pushf
sbbb
les
xor
xchg
stc
mov
out
ss
loopne
mov
fcoms
or
jle
lret
pusha
in
xchg
and
dec
jne
pushf
pop
jae
pop
sbb
jmp
mov
mov
ds
scas
test
or
jmp
cltd
fsubr
loope
dec
push
pop
fdivrs
xchg
mov
inc
adc
push
pop
mov
lods
cmp
mull
or
icebp
aad
pop
ret
push
push
pop
push
fadd
xlat
fcoms
icebp
jecxz
outsl
leave
xor
ja
aaa
cmpsl
cli
repz
in
mov
sarb
xor
jbe
mov
jne
loope
in
inc
jae
subb
cmovne
lods
clc
jb
ss
xor
push
iret
inc
xchg
sub
ja
pop
pop
cmpsl
jne
adc
pop
clc
push
loopne
lds
jbe
shrb
lahf
test
ljmp
fisttpll
sub
push
int
push
bound
or
icebp
dec
dec
cmpsb
sub
or
sti
push
sbb
add
xchg
ds
add
pop
hlt
mov
sub
repz
xchg
add
sub
jl
xchg
mov
xchg
in
mov
loope
mov
or
cmp
mov
popf
fwait
ljmp
mov
jo
loopne
xor
lock
jo
add
fsubrs
test
faddl
rorl
out
add
pop
inc
lret
mov
adc
xlat
inc
dec
mov
push
xor
iret
cmp
sbbl
or
sahf
jno
cmpsb
scas
loope
add
pop
jp
ds
dec
cld
mov
push
or
push
and
data16
fsubp
xlat
mov
mov
stos
adc
and
push
dec
test
jle
sub
lahf
aas
push
fnstenv
inc
xlat
pop
setnp
loope
add
dec
in
sbbl
jmp
insb
xor
das
push
jecxz
lock
mov
and
jbe
jmp
mov
adc
dec
add
ficoms
inc
int
push
inc
dec
inc
push
jge
jg
pop
jo
push
dec
lcall
cmp
xchg
subb
inc
pushl
cli
dec
mov
pop
jle
xchg
xchg
push
add
jae
pop
cmp
clc
jo
mov
loop
sbb
sti
lcall
jle
mov
mov
sub
fstpt
inc
je
and
cwtl
sub
test
es
das
lahf
fldl
add
mov
fsubp
add
fs
mov
cmp
cmp
adcl
ror
xor
and
pop
aas
sub
popf
jecxz
xchg
push
shrl
push
push
xor
int3
test
jge
mov
jp
ret
mov
jge
jle
out
or
addl
mov
add
out
jle
inc
push
mov
dec
add
lcall
add
cmc
or
mov
mov
ficoms
jno
jno
cmc
xor
nop
fninit
les
lret
mov
call
xchg
std
repz
xchg
lret
lock
cmc
dec
std
hlt
mov
int
enter
or
sub
or
xor
sahf
mov
and
jno
cmp
mov
push
sti
stos
out
dec
jg
push
jnp
in
fldl
loopne
decb
les
mov
shll
mov
or
adc
or
jmp
js
paddsb
cmpsb
xchg
mov
add
les
jp
push
mov
es
sub
loopne
push
mov
icebp
cmp
inc
repnz
ljmp
sbb
sub
jb
mov
mov
je
inc
xchg
xchg
mov
mov
mov
cmp
and
and
inc
addr16
outsl
pop
mov
testb
icebp
js
mov
outsl
in
dec
sbb
sub
addr16
mov
cli
add
jle
sbb
xor
and
shlb
imul
add
sub
aam
pop
mov
ret
test
jo
xchg
xor
adcb
inc
mov
fabs
scas
cld
loop
and
mov
jg
loopne
inc
cmp
test
pop
cmp
imul
jge
stos
ljmp
sbb
xchg
bound
mov
sahf
jp
testb
add
fcmovb
sub
or
adc
shl
in
inc
mov
push
sub
subl
ja
ds
test
incb
inc
push
adc
pop
sbb
shr
mov
sub
in
shll
inc
test
out
sti
xchg
add
xor
sub
nop
push
in
movsb
rcl
fcomps
or
xchg
lret
outsb
loope
cmpsl
outsl
rcll
xchg
aad
mov
std
out
xchg
fnstsw
das
outsb
mov
pop
push
ficoml
cmp
sbb
out
in
and
aas
pop
aas
negb
jne
sub
les
mov
xor
icebp
mov
sarb
das
or
inc
dec
mov
hlt
mov
push
xorb
push
mov
dec
loop
xchg
sbb
add
dec
xchg
pushf
into
push
orb
inc
gs
mov
mov
sbb
inc
or
jns
cmp
sbb
push
pop
mov
cld
sbb
negb
fsubs
dec
ljmp
or
lcall
fs
std
imul
movsl
shlb
mov
scas
cmpsl
repnz
mov
cs
pop
lock
hlt
rorl
lods
sahf
adc
test
fisubl
fdivp
push
push
or
push
es
add
pop
jbe
pop
and
add
aas
dec
out
pop
jp
repz
sbb
mov
data16
sub
pop
lret
sub
mov
test
cmp
aam
pop
rsqrtps
pop
insb
je
cmc
stos
inc
into
js
lahf
cwtl
popa
pop
pop
aad
xchg
mov
mov
test
cmp
xchg
lea
xchg
out
jecxz
loope
pop
pop
in
mov
ljmp
mov
pusha
mov
sbbl
mov
pushf
push
sbb
mov
sbb
addr16
movsl
pop
push
sub
mov
insb
rorl
cli
test
xchg
cwtl
sbb
mov
mov
insb
mov
sbb
jbe
fidivrs
fcmove
cltd
jmp
inc
xor
cmp
repnz
add
add
inc
cmpb
sbb
sarb
pop
ss
cmc
mov
jno
xlat
sbb
fldenvs
mov
insb
mov
mov
lea
or
mov
adc
repz
fstpt
mov
jl
xor
adc
scas
mov
hlt
push
insb
into
sarl
testb
cmc
mov
push
or
and
or
es
adc
push
lods
adcl
mov
and
dec
lods
cmp
pop
add
imul
hlt
sub
pop
jmp
fs
jnp
data16
cmp
mov
mov
fldcw
adc
xchg
mov
sbb
mov
sub
push
push
nop
xor
adc
dec
divps
pop
cmpsl
lahf
lea
aam
hlt
movsb
jo
aaa
add
aas
out
cli
scas
inc
xor
push
ds
mov
jo
mov
sub
inc
in
je
icebp
scas
dec
andb
pop
int
dec
movsb
jae
xchg
clc
cld
std
xor
xorb
je
ret
ror
loop
push
mov
sti
sbb
fildl
pop
jno
xchg
and
mov
mov
dec
aam
push
mov
in
sub
idivl
jle
mov
sbb
lock
lock
push
das
lock
iret
jmp
jmp
cltd
lods
xor
mov
xor
sub
lock
mov
fmull
std
push
int3
inc
jns
mov
dec
ja
adc
mov
and
add
ficomps
xchg
adcl
sub
mov
lock
xchg
cli
mov
sbb
inc
dec
mov
mov
mov
pop
das
pop
cld
jne
sub
movsb
inc
adc
and
push
dec
insl
les
jno
jmp
xchg
add
or
stc
xor
cmp
popf
push
shrl
jns
or
leave
ret
sahf
cmp
cmpsb
jmp
repnz
cmp
std
aas
addr16
les
sub
jmp
pop
mov
jl
jnp
add
loope
mov
push
push
sbb
pop
bound
mov
cmp
vandps
aad
and
out
fcomps
inc
dec
add
jle
xor
or
pop
test
aad
mov
pop
cmp
or
xchg
cmp
pushf
xor
iret
out
adc
arpl
bound
out
inc
shlb
out
ret
cmc
ss
sbb
sub
aaa
jae
cmpsl
mov
or
mov
inc
mov
sub
xchg
dec
push
mov
cmp
ja
push
and
and
dec
negb
adc
lret
dec
jne
dec
loopne
xchg
mov
aaa
cmc
or
cli
insl
cmp
mov
and
aas
xchg
mov
xor
jne
and
push
adc
out
inc
xchg
inc
sbb
or
popf
cs
cmp
jne
cmp
xlat
out
lcall
cmp
pop
mov
push
push
inc
xor
inc
movsb
cmp
inc
in
and
loop
ficoml
dec
push
jno
lods
push
fistpll
popa
jbe
in
mov
jno
insb
scas
fs
mov
sub
test
mov
rcl
pop
enter
ret
sub
rolb
jmp
adc
pushf
lods
into
dec
adc
shrb
cmp
clc
or
mov
inc
xchg
dec
ja
xchg
sbb
mov
outsl
push
jmp
lcall
mov
sarl
divl
cmp
add
stc
sbb
mov
lods
dec
mov
sbb
cmc
pop
xchg
fptan
cli
sub
jecxz
loope
dec
out
jp
xchg
lds
je
and
cmp
je
enter
lcall
adc
push
and
push
add
xlat
in
in
test
sahf
test
mov
inc
call
push
push
sbb
adc
outsb
jmp
leave
lock
add
jnp
pop
mov
shl
jge
xchg
scas
repnz
mov
cmpsl
je
sbb
dec
in
sahf
fwait
lret
nop
jecxz
jae
shrb
rclb
push
mov
and
inc
mov
pop
xchg
sbb
ds
leave
test
shl
mov
push
mov
ljmp
pop
out
test
scas
ret
stos
cmp
out
repz
pop
outsl
in
dec
aad
xchg
test
or
sub
popa
add
lea
mov
test
orb
xchg
dec
adc
cmp
xor
bswap
fwait
pop
fs
push
aad
cld
nop
es
jno
mov
jle
bound
cmp
sub
repnz
sar
mov
incl
xor
gs
sbb
push
mov
cwtl
mov
pusha
std
add
icebp
or
xchg
mov
push
int3
sbb
sbb
insb
xor
movsl
in
push
inc
fbld
loop
filds
dec
and
push
in
data16
cmc
clc
or
jl
jno
dec
mov
xchg
cmp
enter
inc
push
pop
and
out
inc
cmc
ficoml
je
lcall
sub
xchg
cmp
sahf
jle
arpl
cs
and
test
push
inc
jo
pop
adc
xchg
dec
pop
ds
fdivrl
add
stos
mov
out
and
pusha
pop
add
in
xchg
outsl
clc
mov
sub
test
pushl
cmp
imul
mov
mov
lods
lret
push
fldln2
mov
inc
pop
lods
mov
mov
movsb
sbb
adc
enter
out
roll
sub
add
fmuls
xchg
mov
xor
xor
ds
std
push
mov
inc
rcll
jae
clc
icebp
rcll
push
dec
pop
imul
lea
adc
inc
idivb
push
int
dec
divps
cmc
cmpsl
mov
lds
insl
lock
mov
enter
loop
imul
sbb
cld
idivl
shll
fnstsw
mov
rorb
add
mov
leave
repnz
cmp
inc
sahf
fsub
push
js
or
pop
mov
add
stos
xchg
or
repz
mov
out
or
out
movsb
das
lahf
out
sub
mov
btc
gs
cmp
test
inc
popa
ror
enter
or
repnz
scas
mov
outsl
in
push
lret
xor
and
stc
fnstsw
imulb
jle
leave
cmp
retw
iret
jg
aas
sti
test
or
addps
movups
lret
mov
call
xchg
jb
pop
negb
adc
mov
xchg
xchg
mov
and
les
mov
ja
xchg
sti
cmovno
sbb
in
cwtl
mov
xchg
cmc
mov
aam
pop
and
imul
mov
loop
test
jae
and
xchg
xor
push
sbb
icebp
sbb
mov
mov
push
fildll
adc
int
lcall
xorl
pop
nopl
pushf
xor
addr16
push
pop
lahf
loopne
mull
in
clc
ja
outsl
insb
mov
test
sbb
aas
adcl
adc
sbb
cmovg
test
filds
inc
xchg
pop
paddb
jo
inc
int3
popa
scas
add
addb
outsl
xlat
cmp
ret
les
adc
xor
stos
and
mov
out
and
jo
pop
fcompl
sub
lahf
cwtl
les
int
mov
xor
and
push
dec
aas
mov
xlat
inc
mov
jo
lahf
dec
je
xchg
mov
xchg
sarb
loopne
cmp
int3
cmove
fisubrl
jne
cmp
mov
mov
dec
or
push
sub
cmp
int
inc
add
cmp
iret
ds
repnz
jecxz
push
inc
xlat
sub
pop
leave
stos
mov
mov
and
add
ljmp
scas
fildll
cltd
out
shll
int
xchg
loope
xchg
sbb
pop
jnp
inc
popl
out
dec
xchg
dec
and
repz
or
movsb
jge
pop
xchg
jmp
or
push
cli
lods
adc
fs
iret
push
mov
mov
js
fbld
jl
cmp
xchg
enter
cltd
mov
xchg
outsl
lds
lea
sahf
cltd
pushf
push
mov
fucomp
scas
jp
adc
out
call
sub
mov
aaa
les
push
outsl
jle
inc
sbb
int3
sbb
in
lcall
scas
dec
xor
mov
inc
sub
movsl
fs
dec
add
addb
fstps
insw
insl
out
lret
rcrl
mov
dec
js
inc
outsl
inc
adc
popf
cld
adc
test
push
inc
or
je
inc
cmpl
xchg
xchg
nop
ja
rolb
ljmp
cltd
xchg
es
in
cwtl
mov
mov
dec
addr16
popa
imul
jbe
mov
pop
loopne
pop
ja
or
lret
sarl
in
pop
cld
add
pop
rcrb
sub
ds
fdivrl
jae
dec
inc
add
and
xchg
xchg
mov
inc
xor
out
popf
shl
adc
adc
ss
lock
stos
enter
insl
mov
or
das
scas
aas
inc
enter
and
push
mov
sbb
outsb
icebp
mov
pop
dec
in
rcrb
test
cmpsb
popf
outsb
fs
jbe
jo
inc
lahf
add
push
mov
scas
and
inc
aas
ja
adc
fmuls
pop
ds
mov
pop
add
mov
in
push
dec
repz
test
fisttps
cmp
sbb
loop
sbb
loopnew
jb
xchg
adc
inc
pop
out
leave
lea
js
mov
jae
js
stos
ret
jbe
add
clc
loopne
pusha
into
adc
das
rcl
sbb
lds
fwait
addr16
mov
mov
cmp
sarl
loop
add
cmpsb
mov
mov
fucomi
sub
sub
pop
xchg
repz
fsubrp
ss
or
mull
ret
push
mov
ja
push
pushl
mov
xchg
shlb
ds
adc
xchg
push
mov
mov
lret
mov
inc
push
cmp
lret
enter
call
jno
mov
jae
mov
fisubrs
pop
dec
lret
mov
mov
daa
mov
jecxz
push
lcall
movsb
jno
aaa
rcr
xor
ret
pushf
jle
mov
dec
cld
in
cmc
hlt
int3
pop
scas
ljmp
mov
out
jae
jno
or
adc
or
push
inc
lods
xlat
cmpsb
mov
jg
pop
ret
call
mov
in
push
pop
adc
add
mov
jecxz
arpl
inc
je
xchg
dec
loopne
testl
cmp
repz
mov
pusha
and
cltd
jg
call
lods
mov
pop
popf
js
lret
call
cmc
xchg
inc
movsb
jae
fisubrl
or
addb
sbb
pop
stc
jbe
not
mov
jecxz
lret
inc
adc
clc
add
jns
imull
jo
mov
das
mov
sub
mov
pop
jl
pop
pop
adcb
ret
sub
daa
imul
int3
ljmp
pushf
mov
out
stc
imulb
cld
cs
and
inc
add
pop
pop
mov
sti
push
mov
sub
xchg
dec
es
mov
aam
cmpl
xchg
xlat
pushw
fimuls
mov
push
std
xor
dec
lahf
insl
push
mov
mov
push
decb
cmp
xor
lds
and
enter
and
cmp
adc
in
mov
dec
sti
lock
add
call
cmp
jo
or
sub
out
inc
lds
sbbb
sbb
cmp
ja
test
and
ret
mov
pop
daa
roll
cmp
adc
inc
int3
adc
push
popf
fcompl
push
pop
cmc
dec
pop
idiv
into
cwtl
cli
rcll
addl
push
fildl
in
and
pop
test
icebp
lods
push
lcall
call
adc
cmpsl
test
movsb
inc
lds
fsubl
cmp
push
pop
cld
xchg
out
mov
push
cmc
push
jecxz
or
in
mov
cs
jne
loopne
mov
cli
test
adc
cmp
movsb
jns
cwtl
loope
out
decb
out
arpl
dec
cmp
push
lret
dec
dec
js
test
pop
inc
sbb
mov
cmp
dec
cmp
adcl
mov
mov
fldcw
fdiv
mov
imul
jb
pop
cmp
std
data16
loope
out
mov
inc
rorb
andb
push
push
mov
idivl
aam
or
or
xlat
dec
mov
cwtl
clc
fwait
xchg
xchg
pop
fstl
inc
jmp
jg
pusha
add
mov
push
fists
lret
inc
xchg
cs
and
adc
stos
xchg
adc
add
inc
fstp
adc
xchg
jg
push
dec
cmp
sbb
adc
cmp
test
and
sbb
fnsave
lea
mov
lock
ljmp
cmc
mov
arpl
and
adc
dec
inc
pop
into
lcall
adc
sub
lods
add
leave
andl
out
mov
lcall
mov
clc
inc
popa
sahf
in
movsl
je
aad
xchg
ljmp
cmp
mov
arpl
jno
std
mov
mov
xchg
shrb
aaa
add
add
lcall
and
mov
xor
mov
xor
faddp
add
fsubs
xchg
or
jb
push
sbb
xchg
cmpsl
cmp
push
repz
icebp
push
jle
mov
incb
push
xor
test
xchg
loop
sub
and
push
in
mov
insb
jne
mov
lret
pop
in
cmp
lcall
std
add
lahf
movsb
push
push
inc
ret
dec
jmp
outsb
pop
test
or
insb
adc
and
movsb
je
mov
add
pop
fcoml
push
add
add
mov
xor
push
inc
fsubrs
push
xchg
mov
rcr
data16
or
xchg
clc
mov
add
push
inc
mov
call
cmpsb
decl
jg
dec
fisubrs
mov
or
dec
cmp
rep
icebp
mov
jnp
push
xor
into
jmp
jns
xchg
dec
inc
or
inc
or
je
js
pop
aas
dec
xchg
jp
jl
clc
jae
xchg
nop
popf
dec
lds
dec
mull
je
stos
insl
out
sbb
loope
fisttps
xchg
or
dec
mov
cltd
cmp
sbb
jl
push
mov
lcall
adc
and
aad
out
bnd
and
mov
pop
jne
adc
jo
sbb
jbe
xchg
pop
cmc
mov
push
test
xchg
int3
aam
pop
cwtl
jg
iret
jne
stos
push
lods
pop
mov
xor
dec
sti
adc
in
in
mov
mov
mov
mov
cmp
into
cltd
inc
addl
fst
mov
pop
sbb
jp
test
cmp
inc
fsubs
daa
sub
lods
push
pop
or
xchg
stos
ja
xor
add
test
not
mov
mov
fnsave
mov
jae
xchg
xor
ret
inc
cmpsl
cwtl
sub
mov
mov
movsl
xor
jge
sbb
mov
dec
inc
ror
and
jns
cmpsl
loop
push
mov
nop
movsl
sub
jmp
add
lret
imul
pop
dec
testl
inc
jns
mov
pop
mov
popa
xchg
jae
rcr
xor
xlat
adc
out
xchg
or
fdivrl
pop
xchg
mov
add
mov
es
scas
jl
mov
pusha
int3
lods
pop
push
mov
adc
ljmp
fs
fcoms
add
lds
and
inc
stos
dec
gs
mov
in
sahf
mov
inc
jnp
jnp
mov
mov
mov
mov
sbb
xlat
rcrb
test
and
aaa
and
lds
inc
cmp
inc
or
data16
mov
and
adc
mov
fisttpl
int
bound
xor
xlat
mov
add
dec
cmp
push
sbb
shrl
sub
lret
addb
aas
push
pop
divb
jmp
movsb
movsb
out
sub
insb
xor
jns
inc
pop
or
jnp
add
or
outsb
icebp
pop
adc
mov
sub
mov
adc
sbb
xor
orl
pop
and
push
lock
adc
push
sub
js
cmp
jmp
jbe,pn
adc
cwtl
clc
mov
sub
stos
inc
inc
hlt
lods
sub
sbb
popf
inc
sub
and
mull
jle
pop
and
arpl
push
pop
and
arpl
inc
pop
jl
into
jns
add
xchg
pop
fists
loop
movsb
xor
pushf
xlat
popf
aad
add
movsb
mov
in
add
les
cmpsb
cmp
or
push
jb
das
loop
xor
aaa
movsb
xorb
rcr
lret
xchg
adc
repnz
testb
lds
jmp
push
xor
popl
dec
lds
fwait
mov
jl
sub
cmp
pop
jo
clc
lcall
out
enter
xlat
mov
push
push
loop
popa
shll
and
movsl
or
dec
mov
addr16
aas
pop
fs
ret
sbb
test
jnp
fsubs
xchg
xor
orb
test
xchg
pop
jl
repnz
hlt
sti
stc
add
repz
cmp
inc
shlb
pushaw
sbb
sbb
jae
add
test
ds
xchg
inc
loope
imul
mov
test
subb
fnstenv
stc
mov
jae
arpl
mov
movsb
insl
stos
mov
adc
cli
test
pop
insl
inc
cmpsb
mov
pop
jae
cmp
inc
cli
jle
mov
push
jmp
ss
jg
aaa
adc
add
lret
mov
popw
cmp
push
gs
aaa
ret
dec
mov
cmc
nop
hlt
fwait
xchg
jbe
out
icebp
xor
in
lods
repz
stos
lea
pop
or
shlb
ljmp
aad
push
push
lock
orb
mov
mov
jl
outsl
xchg
cmp
cmp
out
pop
popa
sahf
mov
jp
into
ja
jp
pop
inc
insl
scas
lahf
dec
cmpsl
test
jne
mov
adc
lret
shl
or
sarl
loop
rcrb
pop
pop
mov
pop
arpl
fildll
push
shrl
stos
lret
aaa
cmp
or
sub
push
lds
call
inc
sbb
test
aas
add
out
js
mov
xchg
lahf
xchg
jne
push
nop
adc
xchg
dec
out
pop
jle
sahf
in
jmp
or
xor
test
ss
imul
and
js
popf
data16
cmpsl
jae
push
fisubrs
mov
adc
adc
xor
int3
add
jb
and
pop
adc
cli
sub
fistpll
flds
mov
repnz
outsl
fcmovnu
clc
insb
movl
cwtl
dec
dec
clc
cli
sbb
pop
out
add
jnp
mov
movhps
adc
fadds
and
pop
mov
cmc
mov
js
cwtl
stc
add
pop
add
sbb
out
cmp
sub
mov
add
gs
mov
sub
out
negb
pop
cmpl
dec
mov
adc
push
dec
sbb
xchg
cli
xchg
lret
mov
sub
test
fs
jns
mov
gs
mov
out
aam
out
adcb
sub
into
mov
jns
or
sarl
jle
xchg
cli
imul
pop
xchg
lret
mov
test
popf
out
sub
ds
aas
sahf
cmp
pop
mov
xchg
lret
sub
sbb
call
pushf
cmp
xor
mov
sub
out
xchg
gs
xor
into
pop
push
fistl
adc
daa
test
mov
das
pop
divb
fadds
pop
ret
in
or
xor
jge
lret
mov
cmp
push
lods
cmp
shrl
ret
lret
mov
and
int3
dec
lea
insb
jno
or
arpl
or
ds
jo
orl
cmp
rcr
cmpb
or
jge
or
outsl
or
andb
and
xor
fmull
jo
inc
cwtl
cmp
jbe
aam
cli
outsl
loop
call
out
mov
icebp
shlb
jg
ret
cmp
fstps
jbe
adc
inc
pop
pop
cltd
dec
dec
ljmp
xor
dec
push
jno
popa
jp
push
leave
xor
cmpsb
lret
lret
xlat
lock
jle
mov
gs
cmp
sbb
push
js
xlat
fdivrl
add
test
mov
lcall
push
mov
aas
popf
jne
cmp
sub
add
pop
pop
dec
xchg
xor
sub
rcrl
sub
mov
test
cmpsl
enter
cmpsb
test
cmp
xchg
sbb
pushf
jg
call
enter
push
into
idiv
bound
data16
xchg
mov
or
and
insw
pop
fisubrs
clc
and
lahf
dec
dec
in
cmpsl
fiaddl
mov
fldl
outsb
xchg
jmp
mov
mov
mov
or
lret
pop
ret
in
scas
pop
notb
lahf
sbb
gs
mov
lock
sbb
xor
stos
pop
pop
xchg
imul
xor
mov
dec
push
addb
inc
add
xorb
scas
lods
call
cs
cld
out
xor
mov
jecxz
jnp
jo
testb
lcall
ffree
fistpll
inc
cmpsl
ret
xchg
leave
xchg
out
xor
and
enter
pushf
call
cmc
sub
cmpsl
mov
lahf
mov
nop
test
push
cld
or
pop
into
mov
cltd
std
pop
sub
push
cmp
mov
arpl
inc
dec
mov
or
cmp
mov
iret
ss
clc
les
push
sbb
mov
pop
sub
cmpsl
repnz
or
fs
inc
sbb
mov
hlt
adc
inc
adc
mov
rorb
shll
shlb
test
rolb
inc
fisubrl
repz
or
xchg
add
jno
cltd
jecxz
ss
cmp
mov
mov
data16
jnp
push
cmp
mov
pop
icebp
adcb
and
aad
pop
nop
pop
fisubrl
test
jecxz
inc
mov
jae
cs
int
add
adcl
cmpsl
aaa
sbb
cmp
jb
pop
sbb
cmp
add
mov
in
xchg
fcomi
pop
dec
lea
cld
movsl
pop
inc
or
cmpsb
mov
sub
mov
mov
inc
pusha
xchg
dec
sbb
cmp
dec
jp
out
jbe
je
jo
test
lock
mov
sahf
cmpsb
pop
xor
bt
pop
add
insb
cwtl
jge
cltd
mov
test
movsb
lock
push
and
xchg
clc
faddl
jns
cmpsl
jnp
adc
push
sub
in
aam
xchg
mov
daa
add
sub
sub
scas
cmp
cld
cmp
cmpsb
out
jno
lcall
pushf
lret
movsb
mov
bound
mov
sub
push
mov
jp
push
fiaddl
mov
adc
or
fadds
add
jle
cli
inc
sbb
cmpsl
push
gs
fidivrs
nop
adc
add
jnp
icebp
push
in
jecxz
adc
mov
shlb
xchg
pop
clc
xchg
and
and
mov
movsb
fsub
mov
out
in
dec
mov
out
mov
jbe
jge
in
cmp
push
or
outsl
into
fs
inc
icebp
addr16
xor
insl
bnd
fwait
mov
mov
test
ljmp
repz
push
dec
xchg
call
or
aas
jp
loope
inc
sbb
cmpb
testl
sub
cmp
aas
dec
mov
or
mov
or
mov
mov
pop
divb
clc
rorl
lds
jl
cld
lods
negl
add
test
push
jno
add
pop
cmp
mov
add
push
movntps
pushf
sub
add
les
jecxz
test
dec
mov
clc
rorl
sub
mov
mov
aaa
jnp
pop
adc
mov
stos
paddsb
adc
sbb
lods
jp
test
lcall
test
xchg
add
cmpl
minps
cmp
cmp
in
mov
mov
push
daa
cmc
and
ret
sbb
stos
iret
push
inc
lret
hlt
insl
mov
ret
pop
lods
dec
push
out
out
mov
inc
xchg
xor
mov
andb
lds
push
fdivrl
enter
aam
push
xchg
sub
sbb
jae
outsl
dec
xor
jns
adc
int3
subps
rolb
pop
add
mov
push
nop
std
lcall
dec
stos
outsb
movsl
push
jp
jecxz
jbe
adc
sbb
mov
cmp
pop
pop
js
dec
inc
loop
cmp
clc
les
rorb
mov
or
push
push
push
pop
js
add
dec
hlt
xchg
sub
js
and
cld
loope
inc
xor
jl
jno
cmpsl
and
imul
mov
cli
ljmp
xchg
cltd
pop
mov
mov
xchg
shl
pop
into
adc
xchg
add
sbb
jge
fdivl
pop
sub
inc
or
movsl
aas
pushf
pop
mov
roll
inc
jae
inc
and
fdivrl
das
xorl
mov
push
mov
xor
push
xlat
adcl
into
nop
insb
xchg
lods
push
push
xchg
adc
xchg
push
psrlw
lods
movsb
cmpsl
leave
jne
jp
adc
jmp
and
pop
or
mov
jmp
test
mov
lcall
and
dec
xchg
lretw
or
rcrl
mov
fbstp
mov
xor
les
iret
mov
push
cmp
and
xchg
push
inc
cmc
mov
mov
xchg
mov
hlt
ljmp
ret
pop
test
jl
int
xor
xor
rcrb
inc
push
aas
pusha
or
stos
mov
arpl
dec
xchg
arpl
xchg
outsb
mov
imul
addb
scas
pop
out
and
lahf
xor
xchg
int3
nop
repnz
popf
popa
aam
sub
insb
push
and
rclb
adc
movsl
es
adc
aas
mov
push
ja
and
jae
push
cmpsb
or
cmp
mov
push
lea
movsl
cld
jne
mov
jp
and
repnz
jp
pushf
add
lahf
mull
jns
nop
adc
or
mov
dec
popf
push
xor
or
xchg
hlt
movsl
repnz
cmpsl
js
out
faddl
lcall
add
jno
cltd
xor
mov
or
cli
pop
rorb
adcb
pop
jge
iret
inc
mov
mov
enter
cmp
loop
xor
sub
fnsave
sahf
out
push
leave
sahf
dec
jbe
lods
adc
push
out
insl
cmovno
sbb
push
inc
bnd
shlb
cmp
stc
push
push
pop
sarl
sub
mov
hlt
daa
sub
push
xchg
sarb
lock
push
mov
push
mov
xchg
xor
mov
sbb
and
or
mov
fsubrl
mov
sub
pop
lret
add
mov
hlt
fwait
daa
adc
xor
rcl
int
arpl
sub
jne
sahf
sbb
ret
mov
jns
int
loope
mov
dec
dec
popf
xor
push
aaa
outsb
mov
imul
shrb
sahf
scas
shrl
mov
lcall
cli
arpl
mov
clc
scas
mov
stos
into
pop
fildll
enter
lret
mov
xor
jne
inc
mov
mov
out
test
xor
repnz
insl
je
xchg
in
inc
adc
or
inc
sbb
cld
aas
add
mov
mov
jge
data16
jmp
leave
push
pop
sbb
dec
dec
dec
xchg
andl
std
ja
pop
sahf
mov
xlat
bound
or
sub
movsl
lret
popa
mov
add
jl
xchg
popf
xchg
or
add
inc
loop
arpl
stos
mov
pop
aam
and
fbld
jo
mov
call
jl
lea
lahf
lock
out
add
imulb
push
push
bnd
sahf
add
sbb
lock
pop
sti
dec
outsb
pop
pop
aas
xchg
call
shl
insb
cmp
mov
jne
rol
jnp
insb
push
mov
mov
mov
scas
leave
lock
push
push
push
fs
fs
aaa
mov
adcb
shlb
test
aas
insl
cltd
jns,pt
jecxz
pop
cmp
cmp
daa
sarl
outsb
das
push
sahf
test
sahf
rolb
jge
jo
clc
fs
xor
test
movsb
xor
data16
pop
lods
pushf
or
jge
dec
stos
add
scas
pop
push
sub
xlat
jae
mov
repnz
nop
push
lcall
insb
test
pop
push
rcl
rcrl
rsqrtps
icebp
jl
punpckhwd
fldenv
cmp
add
lret
shll
sub
push
cwtl
ljmp
cwtl
inc
inc
inc
repz
jmp
mov
lods
loope
loop
xorb
fdivrs
mov
call
xorb
sub
cmpsb
bound
sub
fmulp
push
dec
test
push
xor
push
cmpsl
xor
daa
add
int3
aas
lods
cmp
pushf
repz
add
fmuls
iret
repz
mov
ljmp
stos
fiadds
dec
sahf
xchg
inc
or
jae
push
inc
in
push
xlat
and
push
ljmp
inc
in
loope
mov
loop
adc
data16
mov
imul
inc
mov
mov
outsl
cld
and
sub
sub
cmp
out
and
movsl
in
jb
xchg
lds
out
dec
add
xchg
stos
rorl
cmp
xor
jo
cwtl
imul
scas
or
cmp
ror
ror
andb
test
mov
ja
adc
mov
lcall
sbb
andl
inc
jb
les
leave
add
stos
das
inc
lcall
sub
dec
pusha
test
fisttpl
fs
sub
ja
sahf
in
orl
dec
mov
mov
xorb
ficompl
pusha
fimull
std
movsb
push
addr16
sbb
lock
push
lods
mov
adc
out
cltd
stc
xchg
jmp
fisttpl
out
fs
jle
test
les
mov
iret
mov
dec
mov
pop
pop
test
dec
outsl
dec
dec
addr16
mov
adc
mov
inc
imul
aam
mov
mov
push
xchg
test
addr16
xchg
bound
push
jo
xchg
jmp
out
sub
out
loop
sub
insl
repz
imul
dec
lcall
push
pop
mov
lret
jne
daa
jmp
jmp
sbb
inc
jo
push
bound
push
push
mov
add
pop
dec
lds
pusha
push
adc
cmpsl
xchg
mov
inc
mov
cmpsb
mov
cwtl
enter
add
cli
out
inc
mov
shr
fidivl
push
add
mov
mov
xchg
dec
ds
in
mov
and
pop
push
xor
jg
push
mov
mov
fimull
incl
xchg
mov
popf
pop
jne
mov
movsl
test
push
mov
adc
dec
imul
fs
adc
test
call
add
xchg
xor
stos
in
clc
mov
cld
addr16
or
xor
xchg
and
push
std
hlt
mov
or
and
repnz
out
dec
pop
ja
dec
jmp
jae
ja
cmp
xorb
push
mov
sub
mov
sub
daa
sbb
sub
ja
in
shll
ljmp
push
push
bound
cmp
rolb
stc
cmp
pop
jno
jmp
repnz
in
enter
sub
sub
xchg
mov
loope
push
jae
aam
stos
pop
inc
out
push
xor
enter
dec
aam
mov
cmp
push
cmp
cltd
dec
adc
es
jle
mov
aas
data16
push
jnp
cmp
jnp
insb
lea
cmpsl
adc
bound
sahf
int3
sub
testl
adc
pop
dec
sbb
mov
les
pop
lret
xchg
clc
bound
je
jg
in
xchg
rorl
mov
in
addb
ja
adc
aaa
fistpll
pause
xor
lea
inc
cmp
lcall
stos
xchg
and
call
lds
leave
and
insl
inc
lret
jle
inc
cmp
jbe
leave
les
push
cmp
sub
dec
pop
add
add
pushf
jp
push
xchg
dec
sub
push
fs
scas
outsl
popf
pop
daa
mov
inc
mov
in
aam
lds
repnz
roll
jecxz
repz
and
mov
jle
jmp
jnp
lds
int
jno
repnz
hlt
mov
arpl
jl
test
push
cwtl
scas
cmp
cmp
push
xchg
push
jo
insb
or
mov
mov
inc
or
dec
push
in
sub
or
mov
jl
add
aaa
mov
adc
aam
adc
rolb
popf
mov
and
lret
or
mov
mov
ds
pop
adc
dec
or
int
push
aaa
mov
in
int
mov
repnz
push
loop
xor
insl
sbb
bound
dec
sbb
shrb
es
outsl
adc
add
mov
movsb
inc
inc
mov
shrb
cs
das
add
dec
pop
mov
pusha
jg
and
pushf
imul
xor
dec
cmp
fptan
ljmpw
mov
icebp
push
dec
ja
and
sar
add
mov
mov
cltd
cs
sar
pop
lods
std
pop
adc
adc
dec
mov
sub
stos
push
cmpl
mov
jns
loop
xor
arpl
and
imul
cltd
jmp
and
gs
push
jge
xchg
cltd
lds
adc
lahf
mov
or
and
push
dec
mov
imul
orl
sub
lock
bound
cmp
insl
push
cs
sbb
push
add
jbe
sbb
out
shl
neg
aaa
sub
pop
dec
xor
add
xor
jae
es
out
lds
unpckhps
xor
pop
insb
out
std
mov
loop
int3
test
or
cs
add
inc
movsl
mov
in
std
pop
std
daa
xor
faddl
mov
xchg
addb
adc
inc
ficoml
dec
mov
mov
xor
mov
stc
loopne
pop
push
std
adc
jp
ja
jg,pn
lcall
or
sbb
and
cmp
sbb
sbb
push
idivl
sub
fisttpll
outsl
mov
jae
fnstcw
sahf
xor
repz
lret
xor
arpl
loopne
mov
xor
add
push
lds
loop
sbb
icebp
popf
xchg
cltd
and
adc
mov
in
loop
repnz
popa
outsl
mov
clc
jge
fisubs
test
pop
lahf
push
mov
stos
sbb
jne
pop
sbbb
sti
sarb
btr
jbe
dec
or
cmp
insb
adc
adc
je
cmp
xchg
fsubrl
std
adc
je
add
aam
adc
xchg
imul
dec
xor
packsswb
add
adc
std
xchg
clc
xchg
std
push
mov
push
push
cmp
xor
ja
inc
cltd
out
pop
xchg
mov
add
dec
repnz
es
popf
out
jb
ja
sub
data16
jns
int3
push
xchg
or
outsb
gs
push
in
sub
movsl
fdivrs
popa
mov
xchg
in
xchg
push
mov
push
sarl
popa
out
cmpsb
dec
jnp
sub
add
mov
adcl
dec
sbb
mov
pop
ret
mov
enter
or
mov
nop
adc
xchg
jae
inc
inc
outsl
mov
aaa
mov
pop
les
stos
jge
push
testb
movsl
pop
fidivl
loop
push
hlt
fisubs
mov
insl
aas
jne
pop
pusha
xchg
pop
ret
mov
mov
dec
into
sahf
or
xchg
jb
and
clc
add
fildl
cmp
sbbl
mov
in
xchg
out
push
mov
arpl
dec
or
rcl
cmp
sbb
sbb
aam
jmp
xchg
and
inc
pushf
push
dec
mov
sahf
or
jb
mov
inc
mov
popf
fidivrl
in
hlt
inc
sub
xor
push
xchg
adcb
mov
pop
aaa
loop
adcl
mov
out
push
js
mov
xchg
outsb
std
imul
mov
mov
push
jg
sahf
loope
das
movntq
jp
std
stos
roll
jmp
out
pop
jecxz
xor
bound
xor
fisubrs
push
sahf
xchg
cmp
xlat
sbb
subl
push
pushf
ds
cmpsl
mov
insl
pop
dec
vmptrld
or
pop
jno
lret
cmp
inc
enter
bound
out
popa
cmp
std
push
out
lock
movsl
jl
fsts
call
adc
aaa
sbb
mov
dec
paddsb
lea
fstpt
mov
stos
int3
cmp
ficompl
push
or
loope
jns
fdiv
sbb
push
add
push
jmp
or
xchg
ja
mov
jne
daa
lea
pusha
mov
in
or
cmpsb
xor
in
scas
dec
mov
pop
sub
loope
loop
add
pushf
xor
adc
push
dec
daa
orl
jo
mov
sub
das
adc
addr16
icebp
mov
fistps
lahf
repz
sbb
sbbl
fisttpl
sub
mov
dec
and
or
pusha
cld
ficomps
jne
in
cmpsl
or
shrl
push
mov
inc
xchg
sbb
inc
push
xor
jo
push
movsb
iret
push
lods
add
mov
cmp
adc
aaa
sbb
and
stos
fmuls
xlat
and
sahf
xchg
call
leave
in
jl
cmp
addr16
xchg
cltd
add
sub
outsl
mov
and
shll
setge
sbb
stos
fisubl
js
add
iret
das
dec
data16
push
fcom
fisttps
sbb
outsb
test
mov
xchg
jmp
hlt
int3
incb
mov
clc
push
mov
call
xor
sub
lahf
xchg
jecxz
sbb
ja
dec
dec
sbb
inc
pop
movsb
xor
cmp
lcall
push
mov
lcall
xchg
out
movsb
shll
dec
sub
outsb
jge
subb
xor
cmp
setle
jp
mov
mov
andb
out
jl
outsb
mov
shlb
mov
sbb
imul
xchg
stos
shll
lods
pop
test
push
mov
outsb
add
cmp
mov
dec
cli
xor
xchg
inc
andl
and
orl
js
sub
jns
or
es
arpl
ss
sbb
push
sahf
rcll
lahf
outsb
cmpsb
sti
fmull
mov
lret
rclb
sbb
decb
adc
pop
pop
or
test
xchg
xor
and
mov
movsb
mov
xchg
xchg
inc
repnz
pop
xchg
cmp
dec
pop
into
aad
adc
sahf
mov
jmp
aad
insb
or
jg
dec
aaa
out
addr16
int3
jbe
push
and
lea
stos
push
movsl
xor
pop
int3
ds
adc
xor
scas
das
sar
jnp
jno
aam
push
xor
sub
aaa
xor
dec
rorb
pop
mov
fisubrs
dec
negb
dec
add
insl
jge
pushf
mov
xchg
add
testb
xchg
add
xchg
int
mov
call
xchg
inc
adc
jbe
dec
mov
add
std
lea
and
mov
mov
or
lret
sahf
sub
xlat
push
shl
loopne
scas
sub
lds
insl
mov
loopne
imul
xchg
jb
movsl
das
dec
fcoml
outsl
jno
jmp
sbb
dec
mov
mov
movsl
into
das
shll
pop
mov
jl
sub
jp
in
jns
cld
jp
popa
or
mov
sti
cmp
dec
div
and
ja
cmp
pop
mov
mov
ret
cmpsl
fcmovbe
rolb
mov
push
dec
lcall
lods
movsb
mov
dec
jbe
dec
loope
mov
mov
fnstenv
push
stos
js
pop
pop
cmp
movsb
filds
adc
fldl
push
sbb
test
out
popf
or
jmp
pop
adc
jl
mov
xchg
sar
mov
mov
xor
xor
clc
add
iret
cmp
ret
mov
test
jmp
mov
mov
add
and
dec
xchg
xor
pop
push
mov
xchg
push
cld
popf
sbb
pushf
dec
push
or
lock
ficoms
pop
cltd
push
fld1
out
testl
cli
les
mov
jmp
cmp
sarl
lds
pop
mov
shr
mov
into
jg
leave
clc
mov
sti
xchg
sahf
push
insb
pop
mov
pop
push
adc
mov
xchg
mov
roll
adc
imul
add
dec
addr16
xor
call
in
inc
or
fwait
sub
roll
sbb
loope
mov
pop
arpl
imul
rcrl
test
sub
inc
inc
cltd
mov
push
stos
xor
lret
xchg
push
into
setg
aaa
sub
inc
push
xor
add
es
int
loopne
mov
dec
test
and
fsts
push
inc
cld
loope
mov
fwait
dec
sub
inc
pushf
jmp
sbb
xor
bound
and
cli
in
and
test
js
dec
mov
push
popf
jmp
pop
pop
dec
sbbl
xor
out
les
dec
rcrb
sti
add
xchg
mov
xor
mov
mov
cmp
and
fcmovnb
je
repnz
gs
std
sub
pop
in
cmp
cmpxchg8b
push
cmc
outsl
sbb
lret
jl
insb
aas
dec
cmpl
cmp
push
pop
xor
cmpsl
pop
inc
xor
addb
les
pop
cltd
jp
sbb
rorb
jmp
sub
sub
or
pop
stos
rorb
ss
rorb
sub
sti
mov
repz
mov
fadds
loop
inc
rcrl
clc
and
mov
sbbb
jmp
sub
xchg
js
or
test
pusha
jno
in
subl
ret
add
adc
mov
mov
sub
pop
jae
lods
nop
imul
lahf
sbb
aas
adc
pusha
add
out
sub
jne
dec
pop
sbb
sub
mov
mov
lds
into
shlb
sahf
pop
jno
push
int
adc
adc
mov
das
insl
cltd
inc
inc
std
sbb
adc
sub
sub
mov
mov
pop
out
fiaddl
dec
push
fdivrl
adc
push
stos
push
xchg
repnz
adc
adcb
cmp
fs
mov
lea
daa
ret
fcmovbe
in
xor
call
or
xor
nop
sub
out
lcall
lods
jns
cmpsl
push
cwtl
sbb
and
jmp
push
inc
push
mov
lret
addr16
dec
les
addb
jns
xor
scas
sub
pusha
mov
mov
and
pop
in
jae
fstps
out
add
mov
pushf
loop
pusha
out
nop
cwtl
movsl
mov
cli
cmp
gs
dec
push
sub
imul
add
nop
test
jl
pop
nop
pop
mov
sar
xor
lods
dec
push
and
jmp
or
mov
inc
frstor
jae
lret
fs
hlt
push
dec
out
pop
jb
fsubrs
cmc
orl
mov
xchg
push
mov
push
test
je
jne
jge
mov
pushf
cmpsb
jb
adcb
stos
sub
sbb
pop
icebp
inc
loopne
sub
and
jbe
stc
cmp
fsubl
adc
pop
sub
or
addr16
fwait
push
cwtl
cli
sbb
hlt
pop
mov
jle
fistpl
sub
jge
out
mov
xchg
in
push
ds
push
pop
pop
sub
mov
cmc
and
ret
mov
shr
jne
jecxz
insb
call
push
sbb
add
fwait
jbe
sub
or
cmp
lods
std
or
outsl
hlt
movsb
repz
popf
pop
es
mov
stos
test
sbb
rcll
jg
push
cli
mov
xchg
cwtl
adc
out
hlt
fildll
gs
jae
push
hlt
scas
mov
ret
pop
stc
pushf
cmp
ficomps
pop
inc
cmp
shlb
sub
dec
mov
xor
cmp
outsb
jecxz
fisubl
negb
sub
or
flds
push
mov
inc
push
icebp
xorb
mov
call
xor
int3
movsl
mov
gs
dec
imul
scas
je
scas
subl
or
push
and
cmp
mov
enter
sub
adc
scas
push
loop
loope
cmp
fwait
xchg
orl
and
std
lods
int
imul
psubw
cmp
dec
cld
aaa
pminub
or
lea
arpl
out
rcll
pop
std
sub
dec
cmp
lcall
out
and
jae
daa
lcall
cli
mov
adc
add
adc
xor
mov
or
pushf
cmp
movsb
rcll
imulb
mov
cmp
push
push
aad
les
dec
jmp
cmp
cld
sub
push
adc
lret
mov
mov
ds
das
jg
jne
push
cmp
cmp
cmp
jmp
jne
mov
pop
dec
push
pop
pop
xchg
xorb
xor
push
lods
and
shrl
inc
sbb
cmp
dec
inc
popf
jo
incl
aam
in
cmpsl
jg
bound
push
lods
inc
shlb
and
mov
fcomps
inc
fists
pop
or
push
iret
dec
mov
andb
cmp
js
sti
test
arpl
cmp
inc
inc
insb
inc
lcall
mov
adc
aad
dec
in
sbb
sbb
dec
mov
mov
test
push
or
iret
jge
cltd
cwtl
xchg
mov
pop
pop
pop
rcrl
mov
adc
and
jp
cmpsl
orb
daa
lea
mov
rol
sbb
push
cmpsl
ds
test
mov
hlt
mov
cmp
inc
dec
popa
add
cli
cmp
icebp
iret
loope
sub
shlb
dec
cmp
test
mov
jle
addr16
gs
push
and
sub
or
xlat
scas
stc
inc
push
cmp
or
int
in
sti
cmp
in
fistpll
inc
data16
pop
rolb
dec
sti
shll
filds
push
jecxz
or
out
int
xor
mov
les
clc
sub
les
xor
aas
cwtl
jae
fcmovbe
outsb
mov
inc
xchg
fnstenv
jle
into
mov
ss
nop
aad
inc
stos
or
inc
mov
cmc
dec
les
imul
or
adc
mov
mov
lds
scas
pop
cmp
adc
sub
mov
pusha
roll
mov
mov
cmpb
in
adc
inc
push
add
xchg
popf
cmp
xchg
shlb
jecxz
movsb
jg
cmpsb
or
fs
cli
fisubrs
or
push
cltd
push
inc
sub
dec
mov
popl
or
xchg
fwait
and
pop
iret
mov
pop
inc
pushf
cmp
test
nopl
sti
add
push
jbe
loop
js
popf
xlat
xchg
pop
cmc
or
pop
popa
lods
nop
in
pop
cwtl
inc
mov
pop
arpl
insl
sub
jle
mov
fists
cld
or
fistl
outsl
shrb
cwtl
stos
dec
fs
cmp
gs
scas
lock
xchg
orb
add
roll
arpl
adc
sub
fisttpll
xchg
arpl
dec
mov
inc
mov
shll
loop
add
cmp
js
adcb
sbb
push
xor
aad
mov
test
test
inc
dec
fldcw
mov
shll
loope
ljmp
arpl
shl
int
adc
movb
lods
cld
sub
xchg
sub
aam
push
fildl
push
xor
loop
mov
xor
cld
int
out
inc
add
in
sbb
push
cltd
jbe
and
mov
cld
lea
inc
mov
cmpb
stc
in
or
sbb
pop
jae
push
jns
imul
int3
pop
mov
jl
data16
ja
rcl
bound
movsb
push
cli
shl
test
cmp
roll
push
xor
jb
in
xchg
jge
lahf
pop
xor
pushf
cmpsb
mov
sbb
pop
push
cwtl
xchg
enter
ret
or
dec
and
push
jne
mov
dec
fldt
cmp
and
or
sbb
push
out
loopne
in
ja
sub
push
ja
push
push
jl
xchg
sbbb
pop
mov
dec
inc
adc
test
or
sub
ret
or
int
shr
mov
sbb
pop
dec
sub
scas
fwait
mov
mov
shrb
dec
mov
fsubl
cmc
adc
add
push
mov
fadds
adc
sar
int3
js
xor
es
cs
fcmovnb
popa
mov
push
out
test
xor
or
int3
mov
add
outsl
or
repz
mov
push
cmpl
cmp
cli
stos
dec
popa
repz
mov
push
and
outsb
lcall
adc
ret
iret
or
dec
cld
and
inc
fwait
xchg
push
inc
pop
adc
test
testl
and
dec
pop
cs
cmpsb
pop
icebp
clc
mov
dec
movsl
xor
insb
mov
xchg
pop
dec
test
xor
test
in
iret
idivb
push
add
cmp
dec
push
mull
ficomps
mov
mov
mov
push
and
mov
dec
or
lret
sbb
mov
out
sub
sbb
sarb
rcr
int3
pop
shlb
repnz
and
lods
out
shlb
fs
data16
inc
shll
pop
sti
cs
xlat
xor
insb
dec
loope
mov
mov
adc
pop
shlb
inc
rol
imul
cs
sub
mov
sub
sbb
lret
js
mov
andl
ds
sar
inc
das
add
pop
xchg
sbb
sub
imul
push
ljmp
jg
xor
push
in
adc
add
out
add
and
cli
shll
out
divb
lret
fxch
ja
fwait
adc
ljmp
rolb
std
push
loopne
icebp
jno
aaa
inc
mov
mov
sbb
int
leave
rcll
cmpsl
rcrl
lcall
add
je
stos
cld
push
addl
push
jecxz
es
js
out
xchg
mov
cmp
dec
iret
aad
push
xor
jb
jnp
xchg
sub
dec
jp
xchg
jne
sbb
cs
js
inc
in
lods
mov
push
push
mov
cmc
enter
scas
dec
mov
add
push
jb
fildl
dec
clc
jmp
add
iret
shll
addl
and
and
jns
and
pop
xor
jg
push
sar
test
in
inc
jae
leave
pop
mov
test
mov
lret
and
push
loope
xorb
mov
test
push
mov
push
jl
int3
or
cmp
jp
iret
dec
cmp
sub
std
scas
stos
sub
popa
lahf
pop
sub
lds
sub
lods
inc
adc
inc
shl
inc
clc
shll
int3
jo
dec
xchg
inc
popf
fnstenv
cmpl
and
pop
hlt
loope
repz
mov
mov
cmpsb
mov
push
into
xchg
hlt
aas
int3
mov
dec
or
addl
imul
lahf
dec
aam
push
movsb
scas
jmp
fistpl
arpl
cmpb
fucomip
jns
sbb
pop
sbbb
sub
push
pop
arpl
sbb
push
sbb
pushf
mov
and
or
and
aas
cmp
add
stos
jne
sub
mov
inc
pop
int3
in
pop
rclb
shl
sub
test
or
push
sbb
fidivl
jne
aaa
int
bound
iret
je
aaa
inc
cmpl
xor
aaa
addr16
data16
adc
sub
stc
jae
mov
sub
xchg
and
shlb
les
xchg
lods
icebp
sarb
repnz
sbb
jnp
lret
dec
or
mov
je
das
orb
cmp
add
and
pop
fnstsw
cmp
mov
pushf
dec
js
out
es
adc
xchg
fadd
shl
xchg
gs
mov
test
and
les
gs
test
insl
gs
and
in
mov
hlt
js
jmp
outsb
push
add
enter
mov
loop
xchg
test
lahf
icebp
add
dec
dec
mov
cmp
or
fsubrs
in
and
mov
leave
xchg
jo
pop
cs
inc
daa
adc
and
mov
xchg
mul
cmp
sbb
arpl
dec
jg
std
test
ret
outsb
movl
shrb
fwait
add
popa
sub
fadd
icebp
lahf
xchg
pop
jmp
jmp
sub
add
fnsave
pop
jo
sarl
shrb
sbb
mov
std
push
mov
push
xor
or
adc
cmpsb
and
scas
in
xor
mov
jbe
xor
pushf
cmp
inc
mov
fldenv
insl
nop
or
addr16
repz
pop
mov
cli
rorl
jae
fsubl
xchg
add
push
cld
mov
adc
aaa
rcr
je
fldl
mov
sub
lds
inc
sarl
nop
push
adc
or
call
add
mov
lods
or
sarb
push
sub
lret
mov
push
loope
fyl2x
jecxz
and
out
jae
xor
inc
mov
mov
pusha
jno
add
cmp
fwait
scas
imul
inc
int3
dec
dec
test
adc
fs
push
arpl
adc
pop
popa
dec
pop
test
cwtl
fldenv
mov
loop
into
mov
je
lock
xchg
test
inc
fsubrl
jne
inc
fxch
inc
nop
sbb
das
xor
adcb
inc
mov
inc
xchg
int
xchg
jo
jb
pop
xchg
inc
fcmovbe
xchg
call
loop
jp
addb
push
xchg
adc
daa
lock
fidivrs
aam
jo
les
jbe
and
lahf
xchg
outsl
or
cmp
push
mov
push
mov
cmp
scas
lcall
addr16
jns
and
add
adc
imul
popf
cli
mov
adc
and
pop
enter
cmpsl
sbb
jb
adc
push
movsb
fsubrl
pop
pop
push
mov
sbb
xchg
sub
xchg
in
add
incl
push
push
fcmovnb
gs
aam
push
cmpsl
xchg
js
cmp
cli
pop
rcll
ja
adc
dec
adc
adc
jmp
dec
and
int
and
gs
test
dec
les
mov
add
test
or
xchg
test
arpl
dec
fsubs
cmpsb
push
adc
push
jle
adc
mov
je
test
loope
mov
mov
mov
push
xor
test
fistl
xlat
inc
mov
dec
sub
push
xchg
sbb
add
jge
adc
repnz
jb
sbb
test
repnz
xchg
mov
sub
icebp
std
out
pusha
iret
shrb
xor
cmp
push
adc
add
inc
mov
cwtl
movsl
lret
sub
int3
mov
push
movsb
out
and
push
mov
sbb
sub
jnp
mov
ffreep
cld
mov
xchg
dec
cmpsl
xor
mov
or
std
dec
loop
mov
cmc
push
ss
mulb
lea
insl
push
mov
push
cmp
sub
addb
cmp
or
jns
test
or
movsl
jecxz
aam
push
lea
ret
xor
in
nop
mov
test
jne
rorl
in
insl
jae
pop
mov
stos
sbb
ret
mov
xor
pop
notl
push
sbb
rclb
shlb
mov
adcb
cmpsb
es
mov
push
rcrl
data16
shll
and
ret
test
test
rep
ljmp
test
cmp
sub
cltd
inc
arpl
mov
cmp
lods
loop
dec
out
jmp
lret
stos
lods
loopne
sub
aas
pop
lahf
xor
stos
popa
lods
mov
mov
jmp
repz
cmpl
adc
into
push
ds
sahf
iret
mov
pop
int3
push
cli
or
les
mov
mov
lods
jg
popa
or
call
lahf
pop
cld
popf
sub
add
int
daa
push
std
jnp
mov
mov
xchg
aaa
aad
cmp
daa
mov
mov
dec
jno
adc
adc
js
es
fcompl
fs
addb
ljmp
repz
iret
out
shrb
jecxz
xchg
aam
cmp
pminsw
inc
push
imul
imul
lds
push
in
push
ret
mov
or
xlat
xchg
xchg
adc
mov
inc
loope
and
mov
pop
pop
jl
outsb
roll
es
rcrl
mov
mov
lret
push
mov
out
pop
test
add
sbb
mov
sbb
xor
fisttpll
cmpl
ss
repnz
into
adc
or
mov
adc
addb
cmc
popf
subl
xlat
or
and
int3
data16
orb
jecxz
mov
mov
dec
sahf
mov
icebp
dec
sarl
mov
roll
iret
inc
cs
push
add
push
jecxz
mov
inc
repz
xchg
mov
pop
fnstenv
xor
lds
out
loopne
mov
sbb
imul
adc
movsb
lret
xor
fs
andb
out
and
push
lea
push
mov
push
addr16
or
sahf
dec
pop
dec
ficompl
aam
xchg
shl
pop
neg
jae
call
mov
xabort
jbe
repz
cltd
push
jne
das
mov
xor
je
push
push
test
imul
xchg
xor
cmc
ret
mov
cmp
adc
pop
lods
mov
adc
lods
nop
js
ret
jns
cli
and
push
jl
call
xchg
jmp
sbb
nop
int
inc
sahf
hlt
mov
out
cmc
mov
data16
and
in
push
dec
pop
in
xchg
pop
dec
test
mov
les
jb
int
mov
mov
mov
adc
shufps
ss
dec
cmp
push
jns
shl
cli
mov
in
data16
sub
inc
sub
out
xchg
cmp
testb
popf
jmp
mov
repz
into
jnp
out
hlt
inc
jle
mov
leave
cltd
movsb
scas
cmp
aas
lret
mov
in
mov
mov
cmovge
cmp
or
das
pop
iret
pop
test
xor
out
jmp
lods
jecxz
pop
inc
xor
mov
test
dec
jo
inc
cmp
pop
je
bound
or
add
fimuls
pusha
out
jle
outsl
dec
adc
push
pop
leave
rclb
or
sahf
dec
mov
sub
or
ss
ja
lret
nop
or
lret
mov
push
cmp
mov
test
or
pop
pop
shrl
mov
cmpsl
xorb
repz
pop
xor
sub
stos
jne
gs
pop
cmp
or
popf
lea
cmp
jg
and
xor
pop
gs
cmp
pusha
push
into
repnz
mov
mov
test
cld
imul
and
dec
xchg
cltd
sbb
sbb
insb
dec
cmp
and
ret
jg
shrl
inc
push
fimuls
sbb
sbb
fdivrl
sbb
inc
dec
push
out
sti
dec
sbb
leave
or
repz
and
mov
aaa
push
inc
mov
hlt
sbb
inc
dec
adc
fwait
pusha
mov
popa
adc
mov
push
xlat
mov
fimull
cmpsb
pushf
fadds
lcall
in
xor
into
xor
xor
and
rolb
xor
pop
inc
sub
xor
xchg
mov
inc
sub
pop
fwait
and
sti
mov
adc
add
out
adc
adc
or
or
add
xchg
inc
mov
mov
adc
mov
popa
pop
jmp
fstpt
dec
shrb
lret
mov
aad
mov
outsl
ss
pop
insl
xchg
push
clc
out
ja
shlb
dec
cmp
mov
leave
enter
movsl
ljmp
mov
movsl
xchg
mov
jbe
jl
addb
push
sti
jmp
inc
mov
jle
call
dec
imull
cmp
iret
test
mov
aam
dec
push
icebp
mov
ds
or
ret
cmp
inc
fisubl
test
inc
out
out
sbb
in
push
mov
jb
ja
or
imul
data16
pusha
test
push
jg
jecxz
push
or
cltd
out
pop
inc
out
cmp
cmp
loop
rorl
sub
sub
lahf
pusha
mov
sbb
aas
sti
fcomp
sub
dec
lret
mov
jl
repz
movsb
cld
push
imulb
dec
aas
mov
push
rorl
nop
aad
push
adc
shrl
pushf
jb
push
push
jp
sub
add
cmpsb
ret
jbe
and
xor
lods
roll
into
es
es
or
mov
mov
pop
insl
sti
fcom
repz
cmp
push
lret
add
add
pop
fwait
cmp
sub
sarb
adc
add
push
mov
call
mov
negb
arpl
repz
mov
and
fld
js
mov
out
mov
imul
sbbl
xor
lret
sbb
test
pop
inc
cmp
movsl
addr16
enter
sbb
push
jae
popa
lahf
or
daa
std
xor
mov
movsl
dec
inc
add
jae
cmp
mov
insb
inc
nop
mov
por
pusha
lods
popa
test
dec
scas
dec
cli
aas
dec
iret
cli
dec
sbb
fdivs
aas
xchg
inc
pop
test
mov
cmp
cltd
insb
fmuls
js
jecxz
repz
jb
xchg
lods
imul
xor
push
jae
adc
sub
in
sbb
leave
xchg
movsb
xchg
sub
adc
gs
pop
push
in
pusha
fs
and
repz
test
mov
test
cmp
or
cli
jb
loopne
mov
enter
popl
cmp
outsb
inc
pop
xchg
push
xchg
js
lds
enter
xor
and
test
pop
sub
push
cwtl
lea
add
cmp
push
lods
push
jg
jne
fs
in
popa
into
lods
sub
push
xor
fcoms
inc
mov
iret
es
mov
lret
or
jge
jno
jl
lock
adc
ret
enter
inc
mov
mov
mov
jmp
mov
ret
mov
loope
mov
adc
negb
mov
jge
add
leave
adc
lods
daa
lds
xchg
in
jle
inc
fcomps
pushf
sub
and
sub
pop
pop
push
and
sbb
cmc
gs
adcb
pop
jp
push
push
jl
jg
je
xchg
jg
adc
push
adc
xchg
add
xchg
sahf
sbb
mov
lahf
or
pop
push
and
push
ret
jmp
xor
mov
hlt
mov
pop
iret
rcr
mov
mov
push
rclb
and
add
jl
dec
lret
xor
inc
mov
outsl
mov
and
push
in
jae
cmpsl
stos
mov
hlt
sub
arpl
xor
push
lds
hlt
pop
mov
push
xor
and
inc
lock
fst
stos
int3
test
dec
cld
dec
inc
sbb
repnz
mov
mov
les
sbb
push
daa
scas
enter
add
jno
les
sub
xchg
xor
sbb
mov
pop
or
lea
cs
aad
scas
jle
cld
nop
cld
xchg
in
sub
inc
push
dec
lock
sub
ds
push
fdivrs
jns
jmp
cmpsb
in
aad
sub
or
hlt
cltd
lods
scas
rorl
fwait
adc
jl
lods
mov
mov
dec
outsb
inc
xor
and
rolb
mov
dec
test
xlat
lret
test
testl
mov
ds
lret
mov
insb
fs
push
mov
inc
loopne
jmp
add
cwtl
sahf
incb
push
inc
mov
les
movswl
fs
or
mov
mov
sbb
jmp
mov
pop
js
cmpsb
decl
jmp
jne
repnz
aam
xor
notl
stos
sub
mov
or
clc
loop
or
mov
xchg
jl
loopne
sahf
cld
mov
xlat
out
sbb
into
popf
fs
ret
data16
das
imul
xor
xor
and
sbb
call
sbbl
xor
xchg
mov
mov
dec
rorl
sub
sbb
cmp
cli
loopne
and
sbb
sub
bnd
dec
mov
xchg
xor
clc
lea
ss
repnz
aaa
lods
fst
in
adc
push
test
rorb
sbb
mov
cmp
rcll
pop
cmp
mov
lret
xor
aas
adc
out
push
sbb
mov
mov
xlat
leave
clc
sbb
dec
test
lods
dec
xor
jb
or
add
lcall
or
out
inc
aad
add
add
movsb
push
fcmovne
push
js
lret
and
jnp
loopne
push
mov
cmp
dec
cmpsb
cld
lods
pop
mov
and
dec
mov
stos
inc
jae
dec
and
out
dec
sub
movsl
or
pushf
push
je
push
fwait
xorl
aad
aas
pop
sbb
push
cli
mov
fdivrl
sbb
into
xchg
repz
lahf
out
mov
out
sar
adc
pop
test
push
xchg
and
hlt
ljmp
shl
lods
test
cmp
sub
sub
arpl
andl
inc
lock
ja
xor
das
xchg
mulb
divb
mov
shlb
sarl
pop
push
jl
pop
add
stos
out
cmp
push
dec
int3
add
das
rolb
movsb
push
sbb
addr16
mov
fincstp
adc
and
ja
xchg
xor
js
add
and
mov
jle
push
js
adc
mov
inc
lds
adc
push
push
imul
jp
jmp
push
dec
and
out
scas
insl
fisubs
and
mov
sbb
lds
sbb
sti
das
pushf
fnsetpm(287
sbb
inc
sbb
std
popa
int
and
rclb
xchg
pop
inc
lahf
push
out
sbb
rolb
mov
adc
bound
gs
mov
cltd
xchg
inc
push
sub
sub
adc
dec
lods
outsl
lahf
pop
es
je
fidivs
mov
fcomps
clc
xchg
cmp
int
imul
test
add
jne
and
or
fsts
dec
shll
inc
int3
sbb
sub
iret
sbb
addr16
jge
mov
push
enter
xorl
jmp
lret
xchg
add
push
sub
mov
pop
lret
shll
dec
cmpsl
rorb
aad
iret
jnp
push
in
rorl
int3
popl
je
push
adc
iret
cmp
xchg
std
mov
loopne
or
fcmovne
push
dec
lods
xor
adcl
cmp
jp
out
dec
call
mov
dec
das
jns
and
cli
lock
sbb
push
fwait
sbb
sub
in
jbe
xor
fsubrl
lret
sbb
into
fwait
in
xchg
lock
mov
adc
es
jge
push
pusha
mov
into
push
jns
dec
mov
sarb
sbb
movsb
or
and
push
hlt
ss
and
outsl
add
and
out
sub
cld
mov
dec
mov
fiadds
popa
ss
xor
insb
xor
add
es
add
sub
inc
pmulhw
call
adc
inc
mov
into
sbb
inc
cwtl
clc
out
jae
and
cmp
sti
lds
xchg
int3
sub
push
rcrb
mov
mov
fldcw
out
adc
jb
mov
and
stc
outsl
stc
cmpsl
imul
jp
dec
and
add
add
mov
es
repz
les
mov
mov
push
mov
sbbl
sbb
jmp
fistps
mov
addl
push
frstor
mov
stos
or
sub
movsl
mov
mov
loopne
xor
adc
mov
mov
mov
jle
xchg
daa
pop
dec
into
inc
xchg
mov
jae
jbe
cld
pop
int
pop
push
xchg
and
xchg
fnstcw
stos
inc
out
sbb
or
int3
pop
fucomp
sbb
and
dec
out
mov
rcll
aaa
fadd
adc
xor
mov
popa
aam
data16
jb
lods
iret
std
int
sbb
inc
aad
std
fs
dec
loopne
inc
or
or
mov
pop
fcomp
notl
addb
xor
and
pop
mov
pop
out
inc
add
inc
ds
or
cmp
in
lret
movsl
cli
cmp
loopne
xor
pop
mov
lods
jecxz
mov
arpl
rcrb
lock
loopne
push
sar
outsb
in
dec
jo
mov
push
hlt
adc
xlat
lret
mov
push
jae
cmp
ljmp
mov
ret
xchg
xlat
jae
or
pop
xor
imul
pushf
xorb
loope
nop
jmp
mov
test
ss
subl
scas
xchg
push
cmpl
and
mov
pop
xor
dec
mov
shrl
cmp
pop
push
adc
dec
leave
testl
xchg
adc
cld
inc
jbe
xchg
jo
mov
push
adc
sub
xchg
leave
cmp
sub
sbb
or
sahf
jb
jbe
push
push
mov
pop
lahf
clc
sti
cmc
adc
push
pop
push
cld
fistpll
jecxz
in
jl
sahf
push
and
cmpsb
sbb
add
cmpsl
jb
mov
sub
jg
fcmovb
jle
jmp
inc
ficoms
int
jo
daa
lods
pushf
scas
cmp
insl
into
fxch
sub
push
pop
mov
cwtl
in
in
rcrl
pop
mov
xor
lea
xorl
rorl
cmpsb
int3
rclb
xchg
cmc
dec
popa
mov
mov
push
pop
mov
pop
loopne
lcall
jnp
popa
in
subb
adc
nop
jne
mov
or
or
test
not
addr16
mov
push
inc
rol
mov
and
push
pop
dec
jnp
jmp
push
or
push
xchg
ret
xchg
or
xchg
xchg
int
dec
dec
dec
cmpsb
or
in
mov
fs
rcrb
outsl
and
push
outsl
cmp
sbb
sub
mov
xchg
inc
or
xor
mov
dec
in
pushf
lret
pop
in
sbb
clc
lahf
push
shl
cwtl
ret
jb
mov
mov
out
xchg
inc
mov
les
sub
cmpsb
call
jbe
mov
push
out
popf
icebp
jecxz
mov
aam
fldcw
sbb
mov
ret
lea
pusha
aas
daa
jg
adc
popa
clc
popf
or
dec
jne
mov
mov
aad
sbb
push
test
sti
push
fwait
insl
lock
arpl
call
pop
mov
ds
mov
inc
jp
xchg
cmp
sub
rorl
aad
nop
sbbl
and
adc
imul
xchg
repz
xor
lahf
cltd
cwtl
xchg
dec
lea
push
jge
repz
js
bound
jbe
adc
rorl
sar
xlat
daa
jge
xchg
fisttps
inc
shrl
loopne
loop
push
aaa
push
jge
mov
call
les
and
xchg
test
adc
xchg
jp
pop
xor
mov
push
pop
lods
dec
in
sbb
mov
jno
jne
sub
rcll
out
or
stos
cltd
pop
dec
popf
lret
sbb
cmp
jne
sbb
loop
dec
xor
shll
inc
mov
negb
addr16
int
fbstp
into
pop
mov
stc
cli
sbb
xchg
mov
cmc
test
sbb
rcrb
cmp
jmp
mov
fcomps
test
cwtl
lret
mov
push
mov
mov
fadd
popa
fdivrs
mov
fsubs
sub
or
scas
mov
xor
mov
jge
into
jp
rcrl
mov
push
pop
dec
sbb
push
mov
mov
icebp
cld
push
push
dec
arpl
mov
add
int
push
fcoml
pop
lods
mulb
aaa
push
sarb
mov
nop
sbb
add
xor
insl
ss
mov
inc
pop
dec
and
add
mov
stos
hlt
xor
lock
or
push
fwait
dec
push
daa
mov
or
popa
xchg
dec
test
clc
fs
ficoml
xchg
dec
lea
mov
imul
mov
fwait
lea
cwtl
pop
jmp
insl
shr
xchg
mov
insb
into
cwtl
push
jmp
outsb
push
fistl
out
movsl
aam
repnz
fidivs
and
xchg
arpl
mov
lds
adc
test
and
mov
inc
out
sub
xor
shrl
push
inc
dec
lds
dec
addr16
int3
jl
cmpsl
mov
jp
test
shl
rcl
xlat
xor
dec
popa
dec
pop
or
xor
imul
mov
dec
push
pushf
add
xor
mov
cmc
arpl
sub
repz
imul
std
fistpll
out
aam
int
adc
imul
push
xchg
push
mov
add
add
fwait
mov
sbb
out
mov
inc
mov
cmp
jl
or
aad
adc
call
out
in
mov
sbb
jmp
clc
out
jno
loope
loop
ficomps
mov
loop
orl
sti
xor
movsb
fwait
and
sub
lahf
iret
push
xchg
and
jmp
data16
ret
push
xchg
bnd
jno
jns
xchg
mov
inc
lret
push
jb
fisubrl
das
sub
ficompl
fwait
pop
sarl
out
dec
dec
push
fcomps
xorl
jl
lods
pop
fiadds
jp
pop
outsl
mov
call
cmp
mov
cmp
pop
pushf
sbb
enter
or
xor
stos
or
jmp
jno
stos
ss
sbb
ljmp
mov
jle
mov
std
repnz
dec
jnp
and
dec
dec
sbb
and
in
jl
incb
sbb
dec
leave
cli
add
addr16
mov
pop
iret
push
add
xchg
mov
inc
std
mov
test
call
ljmp
andl
sarl
adc
fwait
and
insb
pop
or
jnp
bound
fucomp
orb
orl
mov
cmp
xchg
or
jp
dec
inc
xor
push
dec
repz
daa
lea
in
and
decb
int3
xchg
js
in
and
pop
dec
xchg
push
and
dec
rcrb
or
lds
lods
lahf
inc
fdivrs
stc
cs
in
fisttps
test
inc
lret
push
std
adc
testl
mov
add
mov
mov
dec
jp
dec
sub
cmp
inc
lahf
clc
sub
pop
inc
test
adc
add
or
dec
mov
inc
dec
pop
loope
data16
inc
lods
movsl
push
cwtl
sub
es
in
loope
jae
lock
pop
das
stos
jecxz
sbb
jecxz
mov
pop
cs
addr16
sbb
xchg
and
push
mov
mov
dec
or
mov
jbe
push
inc
xchg
cmp
mov
push
push
xchg
cmpsb
inc
mov
push
and
nop
loope
xor
mov
xchg
mov
cmp
test
pop
cld
test
push
xor
dec
pushf
outsl
popl
negb
fcomi
or
and
std
testl
cmp
call
mov
dec
push
stos
dec
hlt
in
sub
sbb
fiadds
aad
push
imul
insl
lds
add
notb
inc
add
dec
cltd
fdivp
lds
lcall
test
in
or
mov
pusha
int3
pop
mov
repnz
lods
icebp
rolb
cmpsl
popf
inc
stos
push
loope
xchg
cmpb
push
call
loop
cltd
dec
pop
lea
fwait
sub
int
notl
lcall
push
inc
push
incl
test
ja
mov
cmp
push
sub
mov
cld
ret
xor
aam
nop
int
fdivl
push
iret
lods
sbb
mov
lahf
mov
xchg
mov
loopne
mov
sbb
sub
sub
cltd
loopne
mov
mov
jg
cmpsb
jnp
sub
inc
cmp
pop
aaa
add
push
cmp
pushf
xchg
shll
push
daa
or
mov
add
loop
popf
cld
enter
sub
repz
pop
add
pop
push
inc
xchg
sar
pop
shll
pop
into
mov
int3
dec
add
fnstcw
lods
sbb
fisubs
sbb
je
test
xchg
mov
mov
clc
mov
js
sbb
or
or
sbb
fidivrs
shl
in
xchg
mov
push
and
sbb
mov
adc
adc
jne
xor
nop
pop
sbb
jns
mov
pop
cs
dec
mov
cmp
into
test
loope
rol
lods
aad
out
inc
into
jne
jb
and
push
jbe
pop
mov
adc
push
leave
aam
push
dec
into
cmpsl
jns
imulb
mov
in
loop
pop
loope
sbb
inc
jo
pop
jle
jmp
mov
lea
mov
test
dec
aad
out
push
movsb
sbb
cmpsb
ror
mov
cmp
xor
jl
or
adc
jne
in
repnz
imul
mov
leave
outsl
xor
push
pop
cwtl
leave
cs
sti
push
out
shrb
or
lahf
in
cmpsl
idivl
and
inc
jecxz
pop
es
cld
cmovns
mov
inc
adc
stos
les
ja
je
imul
adc
and
add
mov
movsb
and
add
ds
loope
cmp
inc
mov
xor
call
fsubl
inc
dec
inc
into
int3
in
les
xor
loopne
cmp
push
roll
sbb
insl
lock
pop
dec
sbb
mov
cltd
xor
sub
mov
mov
push
inc
xor
enter
jecxz
mov
in
popa
add
adc
stos
jecxz
or
or
mov
fisubrs
adc
leave
ret
call
sub
std
inc
movsl
in
and
movsl
jmp
cmpsl
lock
clc
fwait
mov
push
lahf
add
jae
leave
fstpl
jl
cmp
mov
js
sbb
or
fcmovnbe
movsb
sbb
mov
dec
test
dec
cmpsl
mov
push
push
push
das
mov
std
rcrl
mov
icebp
mov
pop
push
xor
orb
adc
mov
mov
pushf
in
pusha
and
stos
add
lods
jbe
sti
xlat
out
into
stos
insl
xor
sarb
push
sub
aaa
test
xchg
mov
cld
xor
jp
pusha
pop
fiaddl
iret
or
jge
mov
das
into
shll
sbb
in
and
dec
xor
inc
ret
push
pushf
xchg
ret
jl
and
pop
imul
mov
pop
sub
incb
sbb
notb
adc
mov
xchg
aas
mov
sbb
xchg
push
out
jno
vpermi2w
rcrb
pop
pop
pop
stos
inc
pop
nop
pop
cmp
cld
jo
add
fwait
push
pop
call
packuswb
adc
in
std
dec
inc
cmpsb
jmp
pop
cmp
aaa
fisubs
xchg
scas
rol
cmp
icebp
pop
add
shlb
daa
lods
pushf
lods
xor
and
hlt
mov
push
adc
es
pop
inc
xor
mov
sub
icebp
hlt
or
hlt
lods
outsb
cmp
inc
xchg
mov
jno
mov
popa
ret
mov
cs
leave
jle
add
xchg
test
test
pushf
xor
fucomp
xchg
ret
repnz
jns
push
clc
pop
cmp
gs
push
jns
aam
inc
jmp
in
add
inc
jae
or
sub
nop
or
sub
call
ja
mov
inc
cmp
pusha
or
je
push
jmp
leave
xor
lods
enter
xor
clc
adc
mov
lret
dec
rcrb
cmc
int
mov
jns
js
adc
jge
pop
sbb
faddl
cmp
sub
sti
frstor
int
loopne
xchg
das
leave
out
repnz
ljmp
fisttps
sbbl
std
cmpsb
inc
cwtl
test
mov
cmp
pop
mov
es
cmp
push
in
es
mov
outsl
jle
mov
scas
xchg
lret
jp
adc
and
sti
pop
sbb
push
rorl
test
scas
xchg
jo
push
jmp
sarl
inc
pop
push
imul
sahf
xchg
mov
jno
mov
or
mov
sarl
mov
push
cs
and
xchg
mov
lea
int3
call
pusha
out
pop
shlb
xchg
fcmovu
nop
or
dec
sbb
vpacksswb
pushf
inc
cmp
xor
js
popf
inc
xor
pop
xchg
clc
movsb
filds
mov
jp
leave
loop
addr16
rcrb
push
pop
outsl
push
or
sbb
sub
mov
pop
out
sbb
mov
mov
arpl
mov
mov
xor
mov
push
pop
rorb
pop
push
push
pushf
rcr
fldenv
xchg
mov
cld
dec
outsl
mov
or
lods
mov
mov
out
icebp
lcall
in
xor
subb
mov
add
mov
and
sub
adc
stc
cmc
js
add
xor
dec
out
adc
mov
pop
mov
inc
dec
int3
lods
jecxz
adc
mov
sub
int3
dec
mov
imul
add
dec
pop
add
ds
xor
pushf
shlb
push
push
daa
mov
mov
cmp
lret
jmp
pop
add
mov
jp
mov
ja,pn
sub
stos
ud2
lcall
push
ds
pop
pushf
mov
push
inc
dec
jge
rclb
lcall
out
outsl
je
nop
ret
sbb
orl
dec
mov
pop
jo
xor
jne
nop
dec
sar
cmp
or
lock
push
push
andb
stc
fildl
push
loopne
jno
inc
adc
jo
sbb
mov
mov
loope
jg
icebp
cmp
leave
lahf
test
dec
loop
cmpb
loopne
inc
arpl
push
mov
ret
lahf
fldenv
jmp
mov
push
icebp
repz
mov
mov
pop
out
orl
xor
push
mov
xor
xchg
xor
mov
adc
and
mov
loope
sbb
xor
aad
imul
dec
sbb
xchg
shlb
int
add
inc
cltd
pop
xchg
cmpsb
repnz
xor
push
xchg
movsb
or
movsb
xchg
inc
inc
fmuls
cmp
sbb
aam
mov
jne
fsts
xchg
outsb
dec
gs
xchg
leave
out
jmp
sbb
mov
pushf
sbb
sbb
negb
xlat
xchg
sub
fidivs
jbe
push
mov
js
lods
xchg
xchg
jmp
fbstp
fnstenv
dec
xchg
testb
fidivrs
mov
sub
fwait
test
or
dec
rcrl
pop
out
rcll
stos
out
in
mov
push
lret
daa
mov
ljmp
movsl
and
dec
pop
hlt
or
loopne
or
xchg
insb
mov
add
popf
in
out
xor
in
adc
fldt
pop
std
pop
push
push
aaa
ja
push
cmp
daa
sub
and
mov
adc
or
pop
adc
mov
jmp
mov
sub
cmpl
push
push
xchg
loopne
into
mov
and
test
jle
mov
sub
inc
pop
pop
xchg
mov
jne
xchg
sbb
int
mov
repnz
pop
sarb
cmp
sub
xor
xchg
shll
bound
xchg
jb
or
xor
cmp
enter
jns
push
pop
mov
push
pop
jnp
push
mov
lock
sbb
sub
sub
push
mov
xchg
cltd
leave
jne
fimuls
sti
adcl
lret
push
test
lret
lret
dec
aad
xchg
xchg
mov
cli
pop
test
js
je
push
adc
sahf
bound
fidivs
fs
or
nop
pop
sbb
addr16
fnstenv
push
jmp
lea
or
stos
insb
repz
adc
stc
push
iret
shlb
sub
lahf
pop
pop
push
inc
adc
pop
sub
adc
aam
mov
test
or
mov
outsl
fimuls
cmc
rcrl
adc
pop
cmp
clc
int3
or
movsb
test
aas
outsb
mov
hlt
in
mov
sub
mov
or
xchg
movsl
sub
mov
dec
xchg
cmpsb
and
lods
pop
fst
sete
les
movsl
sbb
pop
addb
push
xor
or
loop
gs
shlb
pop
xchg
outsl
mov
aad
iret
mov
sub
cmovnp
push
aas
cmp
push
or
jno
pop
stc
xchg
stc
sbb
cmp
jecxz
in
stos
rcr
or
mov
popf
cmp
test
mov
rcrl
fnstenv
pop
mov
lret
repz
cmpsl
mov
int
and
repnz
or
jb
push
bound
insl
mov
mov
push
fwait
push
data16
dec
jnp
push
add
adc
ret
lods
xor
adc
out
or
sbb
jb
mov
adc
xlat
mov
mov
jle
hlt
xor
lock
jg
in
jbe
mov
lock
ror
mov
fsubs
shlb
jno
mov
rcr
sbb
push
xchg
out
adc
or
sti
mov
shrb
sub
testl
pop
jmp
jecxz
xchg
fadd
cmpsl
fistpll
fisttps
xor
push
or
xlat
xchg
loop
movsl
jne,pt
or
jae
cmp
dec
imul
outsb
adc
mov
mov
sub
pmullw
sub
enter
push
andb
xor
pop
adc
push
mov
cmp
hlt
push
mov
mul
mov
xor
xor
pop
imul
and
sbb
out
sub
icebp
add
movsb
divl
cmpsb
jge
ja
push
sbb
aam
push
mov
mov
pop
cmc
mov
mov
out
xchg
inc
dec
jl
addb
into
sbb
aaa
in
and
sbb
push
lods
cmpsl
jecxz
cltd
jge
ljmp
add
jle
iret
jae
xchg
fisubl
stos
or
dec
and
jmp
mov
dec
imul
dec
addl
jnp
popf
fiaddl
sub
jo
divl
jns
pop
out
test
cmp
outsb
idivb
pusha
mov
repnz
jb
and
inc
cmc
stos
add
cmpsb
pop
loopne
dec
xchg
mov
insl
push
nop
mov
and
lea
mov
into
mov
xchg
pop
jns
xor
imul
mov
xchg
lcall
mov
pop
test
pusha
popa
enter
add
out
bound
dec
cmp
addb
cmpb
dec
lods
cmp
jmp
xchg
dec
pop
xchg
jb
cmp
sbb
add
es
dec
cmp
push
pop
sbbl
xchg
cmp
push
movsb
divb
pop
sbb
jle
push
cwtl
mov
sbb
jg
xchg
add
push
cmpsb
inc
and
jo
adc
xor
test
mov
push
pop
add
mov
pop
in
movsb
adc
je
ficompl
mov
fisttps
fs
repz
and
cmp
sub
lea
cld
insl
mov
cmpsl
outsb
jns
mov
and
adcb
mov
int3
jle
imul
loopne
mov
cmp
cwtl
sbb
mov
sbb
inc
es
insl
jecxz
mov
xor
std
jg
dec
xor
inc
add
lret
popa
out
in
movsb
mov
popa
and
adc
test
scas
jae
adc
push
mov
xor
ficompl
outsl
push
cmc
mov
add
rorl
das
xchg
ss
cmpsl
lds
add
xor
rorb
dec
daa
mov
jle
lock
popa
pop
mov
or
sar
mov
cli
cwtl
movsl
push
push
fmul
int
cs
push
mov
pop
in
xchg
push
dec
xchg
and
into
xchg
inc
mov
popl
into
adc
add
push
xchg
das
scas
rcl
paddw
jg
push
in
adc
push
cmp
mov
sub
test
dec
inc
fdivs
fsubl
jnp
or
in
mov
dec
bound
pop
mov
xor
int3
rorb
aam
xor
lea
and
xchg
stc
test
loope
mov
outsb
shr
pop
inc
mov
popf
xchg
rolb
je
fadd
push
pushf
cmp
cltd
cld
ja
inc
and
ja
or
bound
das
adc
jg
insl
fwait
or
repnz
imul
or
clc
jp
data16
xchg
sub
das
clc
xchg
push
into
add
mov
mov
mov
mov
in
arpl
rorl
jno
sub
ljmp
lods
popf
iret
mov
pop
mov
lret
fidivl
mov
adc
or
jp
loope
psrad
mov
aas
pop
aam
and
popf
sub
lds
jnp
ficoms
icebp
loope
in
xchg
iret
dec
pop
push
jne
jg
mov
dec
jp
hlt
push
out
paddsw
cmpsb
jmp
lret
addb
or
xor
outsb
mov
ss
inc
in
xor
dec
cmp
mov
cld
cmp
imul
js
jae
shrl
repnz
shll
cmpsb
mov
pop
dec
push
mov
dec
sub
and
nop
xchg
pushf
ds
cmp
sub
xchg
add
lahf
or
fnop
mov
pop
popf
add
dec
movsl
mov
xchg
aad
xchg
jne
inc
adc
jae
push
rcrb
push
jge
jnp
fbld
sbb
push
mov
test
add
fisttpll
push
or
adc
loope
daa
cmp
jne
or
fldenv
push
adc
ret
and
xchg
fisubrs
jmp
fisttpl
sbb
xchg
call
ss
push
and
scas
je
test
jg
sub
and
decl
imul
xchg
mov
in
fcomi
les
dec
test
insl
xor
dec
push
lock
or
pushf
jne
xor
pop
push
in
cmc
fimull
or
xchg
fsubrs
cmp
push
sub
divb
and
test
fcmovne
mov
out
and
jno
in
inc
xlat
ret
push
sbb
and
or
aad
mov
push
sbb
mov
push
and
in
in
adc
pop
xor
icebp
cmp
dec
mov
mov
push
sub
fcompl
pusha
cmc
test
mov
adc
pusha
aad
out
je
push
loop
lods
mov
mov
mov
adc
add
shlb
fcmovne
add
mov
lret
add
les
sbb
mov
dec
pop
push
js
rcl
pop
cmpl
pop
pop
mov
imul
lock
int
and
jnp
xchg
cmp
pop
ror
loopne
bound
das
or
xor
jg
test
aam
xor
xor
js
cmpsb
lahf
iret
add
roll
movsl
cmp
mov
mov
mov
ljmp
jmp
loope
sbb
push
push
add
mov
fstl
inc
ds
fistpll
pushl
mov
ja
mov
into
push
pusha
jle
je,pn
lods
jo
jp
inc
inc
ds
nop
jl
inc
mov
dec
scas
imull
shrb
inc
xchg
jns
pop
inc
out
push
fmulp
inc
scas
mov
or
pop
add
sub
or
cmp
xlat
push
adc
gs
mov
push
shrl
stc
or
mov
das
gs
cmp
cmp
ss
inc
pop
shll
idivb
and
frstor
pop
movsb
aam
lahf
mov
out
jl
and
shrl
adc
xor
xchg
dec
sub
add
xor
out
xlat
cmpsl
fwait
dec
pop
push
repz
xor
xchg
es
clc
es
out
in
out
jno
xor
jmp
loope
mov
push
pusha
ss
cmpsl
orl
dec
loopne
jno
adc
pusha
movsb
insb
and
leave
mov
cli
xchg
inc
xchg
in
jmp
daa
cmp
nop
and
sti
icebp
pop
push
push
insb
inc
xchg
cld
ds
xchg
sbb
sbb
pusha
fisttps
popa
in
xchg
and
lret
adc
pop
jp
cli
aaa
cmp
hlt
push
popa
push
xchg
cs
ret
mov
mov
xchg
outsl
pop
fwait
push
mov
je
mov
daa
out
sub
cmp
mov
fsubrl
addr16
stc
or
pop
andb
ds
lcall
addr16
inc
jge
in
imul
push
test
lods
push
sbb
js
adc
jnp
sbb
jmp
xor
xchg
push
inc
std
cmpsl
lock
arpl
dec
adc
dec
mov
test
inc
jno
orb
jnp
out
pushf
dec
mov
pop
sarl
call
in
lret
stc
out
cmp
mov
enter
into
cli
cmp
pop
jp
sbb
insb
dec
dec
pop
test
in
inc
pusha
movsb
or
mov
cmova
jns
pop
jno
jae
inc
pop
jmp
add
dec
ja
mov
in
mov
cmpsb
div
test
mov
out
add
and
scas
and
insl
lcall
or
out
adc
xchg
mov
sub
imul
js
movsl
dec
pop
add
lahf
pop
loop
xlat
mov
sub
out
loopne
aas
ss
xor
call
aaa
dec
cld
jge
jne
inc
add
push
rcr
aam
fucom
in
add
adc
add
pop
dec
test
aam
in
popf
xchg
fldenv
in
movb
mov
cmpl
lods
xchg
into
in
pop
out
fcompl
loope
loop
inc
movsb
jae
iret
lretw
dec
out
scas
lcall
lods
sub
sub
jg
add
lcall
ja
test
cmpsb
jne
fidivrl
push
and
mov
mov
jl
dec
mov
add
jmp
jmp
mov
out
loope
or
mov
lahf
popf
jg
push
movl
push
int3
sub
scas
shl
into
jns
loop
mov
cmpsb
jbe
or
push
or
add
nop
call
test
loope
scas
pop
mov
xor
jge
dec
sbb
movsb
je
pop
cmp
int3
pop
gs
subl
jns
sbb
xor
imul
inc
xor
adc
lock
aam
xchg
add
cmp
jne
jns
lock
dec
addr16
inc
lret
sbbl
sbb
sub
add
inc
push
or
fmuls
adc
dec
xor
cli
mov
lret
add
int3
mov
fisttpll
or
in
in
add
inc
je
mov
popa
mov
add
stc
scas
mov
pop
jecxz
jecxz
or
ljmp
add
mov
les
xlat
xchg
inc
mov
push
and
mov
je
pop
xchg
sub
pop
add
jge
push
and
stos
loopne
lods
movsl
mov
pop
scas
fs
shlb
pushf
mov
testb
test
andl
pop
aaa
or
test
cmp
pop
push
sahf
cld
outsb
rolb
mov
repz
sub
test
lock
cli
cmp
imul
pop
cli
inc
push
mov
sbb
ss
mov
adc
mov
xchg
ret
add
pop
cwtl
pop
sub
xchg
cmpl
mov
cltd
pusha
xor
stc
mov
add
mov
lret
rcrl
test
stc
jo
out
hlt
pusha
xchg
push
push
jmp
fidivs
iret
inc
pop
pop
pusha
mov
inc
dec
int
cmp
lret
inc
push
mov
repz
push
sub
std
mov
enter
andb
hlt
push
mov
jae
mov
or
sarb
jmp
lock
sub
pop
fstpt
fcmovne
inc
aam
sbb
fstpl
xchg
mov
loopne
cmp
leave
xor
sbb
aam
loop
mov
clc
xchg
mov
ret
lds
dec
xchg
test
inc
out
xlat
ja
fwait
fs
xor
cmp
sahf
icebp
aad
xor
movsl
mov
xchg
clc
ss
fwait
or
xchg
das
cltd
gs
pop
cmp
cmp
pop
jg
jl
nop
nop
xor
fmuls
fadds
and
xchg
out
jp
mov
and
cmp
subl
std
mov
jo
into
or
lahf
inc
jns
testl
lcall
xor
mov
mov
cmp
ficompl
into
lret
mov
fcomps
push
cmp
into
xor
bound
je
lock
xchg
jl
lea
or
xor
sbb
mov
pop
pusha
mov
iret
enter
jg
dec
xor
inc
cltd
test
fiaddl
out
pop
pushf
mov
dec
push
mov
out
lds
dec
pop
sub
inc
mov
add
call
aam
push
sti
and
add
push
lea
jl
iret
mov
pop
mov
int3
xor
add
jecxz
orb
or
and
mov
test
and
push
sbb
dec
mov
mov
pop
sti
cmp
ss
sahf
mov
jle
sbb
adc
insb
out
and
inc
popf
test
push
xor
cmp
mov
popl
out
fwait
jnp
outsl
adc
add
unpckhps
popa
cs
cld
adc
jp
and
xor
or
imul
das
push
fnstsw
hlt
sbb
jno
jo
pop
mov
sarl
adc
call
pop
mov
mov
and
cld
movsb
jnp
inc
je
push
xor
aaa
mov
fcmovnu
xor
pop
sub
jg
idivb
xchg
call
inc
jle
xor
sbb
xor
dec
das
not
adc
fildll
ja
cli
daa
imul
js
inc
pop
loop
dec
lds
out
leave
or
rolb
mov
fistl
aad
or
push
addr16
cmp
jge
scas
mov
mov
ljmp
mov
jp
dec
inc
rorl
loopne
sahf
in
out
push
mov
xchg
inc
nop
fsubrl
pop
out
jbe
adc
cmp
aad
div
mov
jle
addb
xchg
sbb
or
lcall
pop
jns
lock
imul
rcr
mov
in
loopne
mov
pusha
pop
mov
push
mov
ret
and
lds
hlt
insl
sbbl
leave
lcall
sbb
out
xor
xor
pop
sbb
adc
xchg
test
inc
or
mov
data16
stos
scas
push
push
out
mov
xor
mov
jle
repnz
lret
jns
mov
andl
mov
fidivrl
pop
push
es
das
insl
mov
lods
mov
and
mov
shll
rcrb
sub
repz
je
mov
push
fs
cltd
jg
jg
cs
jl
lock
pop
gs
push
jl
sub
and
std
sub
into
in
test
fmulp
or
cld
cmpsl
pushf
in
inc
out
shld
ds
shl
popa
jbe
rorl
lret
rcrb
push
jg
xchg
xor
and
and
dec
lock
add
aaa
mov
pop
mov
rclb
movsb
or
adc
dec
nop
push
mov
test
test
and
jg
sbb
ds
testl
xchg
mov
mov
jns
and
mov
mov
cmpsb
aas
imul
cmpsl
or
xchg
xchg
mov
out
xchg
or
mov
adc
push
jb
lcall
dec
push
jnp
and
seto
ds
push
or
push
add
mov
sub
xchg
mov
cmpsb
jo
cmp
es
repz
bound
lods
sub
jbe
add
mov
scas
or
fcom
sub
leave
in
in
xchg
pop
add
adcb
adc
popa
test
adc
test
add
and
es
clts
sbb
mov
cmp
gs
add
jbe
push
and
jmp
sbb
ds
in
test
test
cmp
dec
addr16
mov
jl
ret
sbb
pop
pop
jo
push
adc
mov
jnp
or
inc
insl
aad
lea
cmpsl
inc
mov
xchg
mov
test
bound
jecxz
aas
cmpsl
enter
sbb
jge
push
gs
gs
aam
sbb
xor
cmp
cmp
xchg
shl
jmp
adc
xchg
scas
push
mov
mov
or
bound
ss
mov
jae
jns
pop
add
push
aad
nop
out
dec
subb
adc
pusha
in
sbb
nop
inc
nop
and
pop
aam
or
pop
xchg
fildll
fnstenv
jle
mov
and
mov
dec
mov
jnp
xor
lret
inc
xor
popa
sbb
push
jne
xchg
addr16
mov
dec
mov
sbb
enter
movl
test
add
in
out
jmp
jle
push
or
nop
dec
pop
cli
leave
and
movsl
jno
fwait
fs
mov
sub
aad
add
mov
into
enter
data16
insl
cs
in
pop
jle
mov
nop
mov
pop
push
push
mov
faddl
jb
call
outsl
and
leave
push
pop
push
jnp
mov
pop
fisubs
lea
inc
aad
cmp
dec
inc
aam
pop
sahf
out
adcb
hlt
popa
or
lcall
iret
inc
sbbb
mov
sub
les
xor
movsb
inc
pop
sub
inc
xchg
and
push
jb
mov
ret
mov
in
je
xor
sbb
push
loopne
mov
and
xor
cmp
xor
dec
ffreep
xchg
roll
xchg
jmp
leave
outsl
mov
mov
leave
insl
inc
fnstsw
rcll
jmp
jge
cmpsl
insb
xlat
aam
test
add
mov
jecxz
inc
sti
scas
mov
sahf
mov
xlat
insl
inc
movsb
call
ss
hlt
mov
mov
adc
cli
aaa
and
mov
clc
lret
push
in
push
cmp
cmp
movsl
aaa
jnp
xchg
bound
fldl
inc
or
add
leave
xor
or
sti
daa
sbb
sub
dec
negl
mov
push
cli
adc
jmp
clc
das
adc
pushf
in
pop
les
cmpl
mov
in
mov
int
iret
das
jbe
add
cmp
push
test
xchg
imul
sub
mov
lock
mov
push
and
in
pop
lods
aam
mov
mov
cmpsl
ret
xor
clc
loope
fmuls
cmp
out
mov
mov
addr16
pop
inc
sbb
flds
fmull
cmpsl
iret
inc
push
imul
add
and
mov
add
subb
out
lods
les
pop
cld
jl
add
jge
inc
imul
mov
xor
xchg
mov
jecxz
sbb
pop
jg
sbb
pop
jbe
std
pop
ss
sbb
shll
or
mov
and
sub
dec
pop
mov
call
xchg
lods
imul
xchg
adc
fists
cmp
cltd
mov
stos
push
int3
pop
es
xchg
xlat
ret
mov
sbb
mov
cmp
repz
in
mov
pop
out
ret
lods
addr16
outsb
mov
loop
dec
mov
mov
dec
or
stos
xchg
mov
adcl
pusha
and
test
jns
in
jle
mov
movsb
jl
push
inc
test
loopne
dec
push
add
divl
pop
cs
roll
mov
lret
fcoml
arpl
pop
shl
loopne
inc
jns
addr16
cmpsl
mov
jp
mov
pop
out
adc
sub
out
pop
mov
test
aas
mov
pop
lcall
test
add
cmpsb
sbb
aam
push
les
cmpsb
cmp
scas
pop
pop
adc
fisubl
push
dec
shl
loope
or
and
pop
and
pop
ljmp
mov
inc
fcoms
call
mov
int
and
mov
push
popa
je
in
mov
xchg
das
outsb
subb
test
hlt
je
fbstp
push
or
jmp
and
xchg
dec
scas
mov
in
jbe
pop
cmpsb
and
mov
xor
sbb
and
and
and
out
hlt
mov
ja
rcrb
mov
nop
scas
xor
dec
andb
ss
push
pusha
xchg
mov
push
movsb
dec
mov
out
out
xchg
cmpl
mov
sbb
inc
scas
enter
cmp
push
add
add
rolb
push
dec
jl
sub
lock
fistpl
pop
mov
test
ss
addr16
sbb
mov
xchg
sub
and
shll
out
nop
push
lea
xor
xchg
neg
icebp
in
rcll
testl
mov
add
mov
stc
cli
pop
inc
loopne
cwtl
aas
cs
fnstcw
xor
xor
out
mov
inc
mov
sub
dec
stc
sbb
or
cmp
sub
mov
lds
idivl
jp
mov
stos
or
fnstenv
les
stc
mov
popa
inc
jle
pop
test
out
jnp
in
pop
add
jle
mov
loope
pusha
sbb
loopne
dec
notl
xor
idivl
movsl
negl
jne
and
lcall
sbb
xchg
xlat
xlat
fcmovnb
fst
dec
pop
push
subl
dec
adc
loop
pop
test
repz
lahf
cmovge
sarl
js
sub
dec
inc
jo
or
pop
cmp
jb
jbe
std
enter
ret
daa
shlb
fnstsw
mov
sbb
icebp
addb
les
xchg
jmp
or
aaa
scas
push
in
mov
pusha
sub
loopne
or
add
adc
das
jne
xchg
out
ja
outsb
or
xor
dec
rcll
sub
push
xor
jae
imul
stos
adc
xor
movsb
jle
mov
xor
lret
dec
dec
lea
test
cmp
and
repz
loope
inc
mov
jne
lods
add
sti
push
mov
lea
imul
xor
pop
cmp
sbb
xchg
push
mov
lods
movb
dec
sbb
lds
sub
adc
popa
in
sbb
pushf
sbb
into
mov
dec
mov
ja
je
sub
cwtl
mov
clc
aam
rcr
jecxz
out
pop
sbb
lret
lock
push
stos
and
fadds
jb
inc
fildll
xor
loopne
push
and
adc
mov
in
aas
mov
insl
sub
stos
popf
pop
int
loope
or
push
mov
sbb
lcall
inc
popl
lods
les
adc
shl
sub
movl
pushf
nop
xor
mov
fbld
jno
push
aad
adc
adc
mov
mov
mov
pop
pop
lds
bound
fsubp
js
push
jo
sbb
xor
iret
mov
jge,pt
or
xchg
outsb
outsb
aam
inc
insb
mov
add
adc
cmp
dec
sahf
hlt
cmpsl
icebp
aaa
arpl
push
sbb
mov
mov
test
adc
push
adc
push
shr
test
cmp
xchg
mov
call
push
jle
fisubs
imul
rclb
icebp
pop
rcl
nop
or
pop
cmp
test
inc
ss
xorl
imul
pop
pop
lods
testl
ret
jo
adc
insl
pop
sub
sub
or
inc
test
addr16
sub
push
dec
ficompl
test
xchg
xlat
out
repz
cmc
push
adc
xchg
push
pop
sub
daa
and
mov
daa
adc
ret
imul
ror
mov
cmpsl
outsl
or
xlat
jno
in
mov
notl
fdivrl
mov
nop
stos
inc
sub
push
pop
fisubs
inc
xchg
mov
inc
push
inc
in
inc
xchg
test
cmpsb
popa
mov
or
rcl
subl
xlat
aam
pusha
in
sahf
sbb
mov
jge
push
outsb
mov
or
out
jnp
andb
dec
out
jbe
push
mov
mov
shlb
xor
push
jne
lods
jne
mov
movsb
shrl
xchg
aad
out
call
xor
jle
adc
jbe
std
rorb
loope
sub
xor
jl
mov
insl
sti
das
loop
cld
inc
loopne
push
movsb
or
test
adc
mov
cmpsb
lea
xchg
xor
push
jmp
inc
mov
cs
and
lcall
adc
sub
sbb
inc
mov
or
mov
pop
popa
xchg
out
sbb
jns
sub
mov
bound
add
lds
sbb
cli
hlt
movsb
ss
lds
and
insb
stos
clc
mov
dec
sarb
mov
add
xor
andl
inc
pop
dec
aas
je
jge
xor
push
in
arpl
add
in
mov
scas
push
std
mov
cli
xchg
push
xchg
mov
mov
pop
loop
add
js
push
add
aaa
sbbl
ljmp
cmp
lcall
js
pop
jp
ss
fdivrs
add
sbb
xchg
int
jg
test
fidivrs
sbb
xor
shll
mov
nop
jbe
imul
add
movsb
xor
cmp
mov
stos
jle
pop
or
mov
sub
and
insb
mov
cmp
imul
out
shlb
pminub
inc
lock
xor
adc
xchg
rclb
pop
rorl
pop
scas
and
xchg
add
push
or
push
push
cmp
lahf
inc
hlt
addr16
into
insl
adc
orb
xor
mov
or
int
fldcw
pop
mov
mov
negb
lock
adc
int3
int3
das
dec
add
mov
inc
mov
cmp
lea
clc
sub
lea
gs
push
xchg
stos
inc
lahf
mov
inc
and
imul
sbb
cld
stc
jno
rol
in
mov
scas
aaa
sub
and
mov
push
jg
ds
sub
rclb
xor
pop
popf
add
lret
fsubrs
cmpl
sbb
inc
in
and
cmp
nop
cmp
mov
cmc
xchg
popa
andb
xchg
popa
enter
cmp
pop
add
push
sbb
cmp
mov
mov
jo
jp
insb
xchg
cmc
std
outsb
inc
repnz
mov
cmp
xchg
push
jns,pn
push
leave
or
xor
js
es
mov
mov
cltd
jg
add
cmp
andl
mov
xchg
mov
mov
and
mov
jg
sub
cmp
or
or
and
jp
push
into
push
js
or
enter
jg
xlat
and
aas
and
movsl
inc
inc
cld
ficoms
divb
mov
ror
cmc
sahf
int3
adc
leave
jo
mov
popf
movsl
pop
rolb
sarl
xor
fistps
mov
iret
pop
sbbb
or
or
cmp
imul
adc
outsl
xchg
xchg
popf
and
mov
mov
out
xor
les
mov
subl
push
pop
jbe
aad
mov
mov
sub
pop
ja
sub
jg
cmp
pop
int3
dec
daa
lods
into
adc
cwtl
cmp
cmc
xor
int
insb
inc
es
sbb
imul
pop
push
cmp
rolb
roll
xchg
scas
aaa
adc
jle
mov
and
lea
int
aas
mov
fld1
mov
pop
pop
mov
fisttpl
fwait
lret
out
lea
lds
es
shl
sbb
push
sbb
sub
stc
mov
lods
fucom
cltd
bound
mov
mov
xchg
test
ljmp
jne
xchg
fwait
inc
lock
insl
jnp
dec
sbb
dec
xor
push
pop
test
int3
scas
int
adc
out
pop
jge
mov
push
imul
or
or
or
mov
xchg
cld
pop
cmp
adcb
mov
sub
aas
lods
push
imull
dec
sub
inc
out
mov
pop
popa
mov
popl
movsb
push
ds
subb
lcall
stos
scas
jo
jno
pop
mov
pop
mov
mov
xor
icebp
cmp
pop
arpl
clc
pop
loopne
fs
push
add
out
push
test
mov
fisttpll
inc
movsl
mov
sub
add
sbb
dec
jg
and
sbb
add
arpl
ret
adc
clc
jno
outsl
scas
add
sarb
mov
iret
rorl
push
test
jbe
imul
xchg
xlat
sbb
mov
std
xchg
cli
sbb
pop
sub
outsl
fnsave
xchg
insl
repz
and
mov
inc
xor
dec
lea
inc
push
jo
xchg
scas
pop
push
mov
sbb
mov
mov
jnp
jae
add
jno
add
ja
xchg
call
lret
in
ss
sbb
cmpsb
cli
pushf
cs
push
pop
ds
pop
addr16
stos
cmc
mov
dec
pusha
and
add
dec
bound
repnz
pop
cmc
pushl
repz
in
push
xlat
cmp
mov
inc
xchg
mov
inc
pop
pusha
out
ss
sub
ljmp
push
daa
std
jp
inc
loop
xchg
roll
lret
xchg
xchg
lahf
mov
dec
popf
mov
adc
loopne
cmpsl
fcoml
repnz
add
or
push
mov
icebp
and
jnp
inc
mov
int3
mov
dec
mov
fwait
outsl
lds
sbb
jl
adc
inc
ss
mov
faddp
sbb
push
sbb
add
add
inc
jb
dec
scas
dec
sbb
xchg
jae
lods
push
lods
sub
lock
mov
das
xchg
in
call
rcr
and
idiv
jmp
xor
jle
cs
cmp
ss
dec
adcl
test
xor
dec
xor
pop
mov
mov
aam
and
sbb
push
pop
test
adc
and
dec
inc
pop
punpckldq
pop
mov
sti
lods
movsb
jle
mov
pop
mov
scas
mov
mov
xor
jno
and
inc
aas
mov
pop
adc
mov
add
incb
sahf
repnz
mov
inc
fwait
mov
sub
aaa
xchg
shlb
pop
pop
cmp
into
mov
jecxz
insl
das
mov
mov
pushf
jle
enter
inc
insl
cmp
lock
sbb
xchg
sbb
sbb
or
cmp
scas
jecxz
dec
jl
or
lahf
popf
rorb
add
pop
cmc
and
lret
lods
mov
loop
les
ljmp
test
push
xor
out
aas
adc
es
sbb
loopne
lcall
xchg
lea
dec
or
dec
add
addr16
push
cmp
xchg
mov
lods
es
add
xor
mov
jbe
sub
jge
ret
pop
mov
push
xor
lds
loop
xor
xor
repnz
cwtl
dec
shr
insb
xchg
xor
inc
dec
ret
cmp
push
mov
cmc
add
push
mov
inc
aad
push
push
mov
in
addr16
inc
in
les
jg
mov
mov
mov
dec
mov
xchg
add
les
movsl
cmp
xor
inc
in
cmp
sbb
cli
sbb
jg
icebp
iret
sti
fiaddl
pop
loope
inc
ja
out
in
mov
orb
fbstp
adc
push
jp
enter
push
adc
pop
xor
repnz
mov
out
imul
pop
pusha
mov
pop
pusha
test
aam
popf
pop
push
repz
cwtl
lock
sarb
and
out
jmp
sbb
data16
or
push
call
add
mov
ss
sbb
je
push
and
or
mov
sbb
daa
das
push
jecxz
in
aam
inc
rcll
sbbb
xchg
das
sbb
pop
das
add
ret
enter
mov
jbe
out
dec
popf
rcl
pop
insb
or
loopne
fstpt
ljmp
lods
xchg
loop
movsl
cmpxchg
int3
mov
jmp
mov
jmp
mov
adc
out
mov
adcl
xor
sub
stc
lods
jno
cli
dec
adc
pop
repz
dec
inc
imul
pop
sti
imul
mov
xchg
mov
dec
lret
inc
mov
cld
lcall
mull
aaa
shl
adc
mov
rcll
nop
or
pop
add
sti
pop
mov
adc
sbb
xchg
dec
hlt
in
icebp
xchg
dec
cltd
das
push
lret
cmpsl
pop
mov
xchg
inc
lods
sbb
daa
jmp
std
mov
fildll
mov
inc
fucomip
test
mov
sub
daa
push
add
incb
scas
pop
hlt
movsl
push
icebp
stos
addl
insb
imul
rcrb
xor
pop
cmc
or
lds
mov
mov
pop
out
inc
ret
mov
xchg
sbb
lods
jae
rcll
fsubrs
aad
scas
out
dec
and
dec
sar
mov
push
data16
pop
jecxz
jmp
int
mov
lods
dec
test
mov
fiadds
popa
idiv
sbb
je
sarb
xor
pop
jmp
shrl
dec
sub
nop
aaa
add
pusha
lea
shrl
jae
out
loopne
test
xchg
pop
shlb
xlat
mov
xor
mov
pushf
pop
or
push
mov
add
popf
pop
sbb
jo
push
sbb
mov
inc
mov
das
sub
cmp
lods
sbb
inc
mov
mov
adc
adc
mov
rorl
lock
movsl
and
rorb
xchg
xchg
sbbb
dec
cmpsl
movsb
addr16
pop
aad
mov
imul
aaa
es
mov
cmp
cmp
aam
push
inc
pop
movsl
mov
add
and
push
pusha
fwait
insl
test
orl
pop
stc
imulb
sub
and
cmp
dec
adc
movsb
push
inc
dec
outsb
cmp
dec
sub
push
push
repnz
adc
repz
js
cli
sub
push
imul
scas
testb
jbe
lock
push
sbb
addb
and
or
mov
fs
mov
mov
jle
mov
int3
mov
es
fmull
xor
jo
sahf
shrb
cmpsl
lahf
jns
or
or
out
add
xor
pop
lahf
shrb
dec
and
push
sub
mov
adc
sar
roll
stc
cmc
enter
loop
lret
jnp
adc
sub
shrb
adcl
nop
xor
mov
je
mov
and
push
mov
dec
jbe
lcall
lret
push
xor
xor
mov
xchg
popa
les
popa
jmp
pop
mov
xor
addr16
adc
cmp
cwtl
leave
imul
xchg
daa
out
ret
inc
sbb
lret
dec
and
out
ret
gs
fisubl
es
xchg
ja
pop
pop
insl
mov
sub
or
lcall
mov
aad
cmp
in
mov
pushf
je
pop
dec
jns
jl
mov
in
movsl
pop
pop
dec
push
adcb
negb
test
data16
mov
fsub
popa
sbb
cmp
int3
test
jno
adc
xor
xor
cmp
pop
dec
int
mov
and
push
cmpsb
inc
jb
insl
loope
push
cmpsl
and
pushf
pop
inc
push
mov
mov
pusha
mov
dec
cmp
test
std
mov
inc
ds
cmp
inc
inc
mov
dec
test
inc
dec
icebp
lret
lret
or
and
xlat
dec
js
or
aas
loopne
or
inc
push
push
add
fldt
adc
out
mov
hlt
or
xor
or
push
cmc
sbb
sahf
mov
int3
or
push
mov
int
sbb
rcrl
mov
js
scas
lds
mov
mov
mov
adc
xor
cmp
outsb
sysenter
and
aaa
adc
or
mov
pop
stc
aaa
add
fsubrp
in
lods
ds
inc
inc
xchg
lea
or
fsubs
mov
lock
sarl
clc
pop
jmp
popa
inc
mov
in
rorb
push
je
insl
ret
leave
dec
hlt
rolb
pop
daa
out
inc
add
out
aas
inc
mov
sbb
cmp
jle
mov
out
cmp
in
sbb
pop
fidivrl
lods
insl
push
push
stc
icebp
dec
xchg
sar
and
imul
push
hlt
jp
jbe
repz
adc
or
in
ds
lahf
push
xor
popf
cmp
push
jne
or
aas
push
ret
mov
pop
out
aam
daa
xchg
jb
outsl
int
cltd
fdivrl
cli
push
out
push
push
popf
pop
jb
imul
mov
outsl
cltd
cltd
jmp
sbb
aaa
test
mov
lods
jae
shlb
mov
mov
dec
inc
sti
mov
lods
mov
mov
or
inc
mov
jno
loope
push
es
sub
fcmovnu
out
nop
inc
xchg
aaa
jmp
fcoms
push
lret
add
mov
and
adc
aaa
lea
insb
pushf
shlb
pushf
push
add
lahf
sub
xchg
stc
and
dec
fisubrs
xchg
push
lea
pop
mov
mov
xchg
jns
jnp
pop
cs
mov
incb
cmpsb
mov
daa
popa
jmp
xor
insl
or
mov
lea
xor
in
sbb
jbe
lds
andb
fildl
jb
lahf
lret
add
xor
sub
scas
and
mov
iret
or
push
mov
mov
push
imul
inc
aaa
fcmove
leave
shll
inc
cmpsl
fisubs
arpl
xchg
outsb
aas
pop
sti
inc
sub
leave
pusha
in
test
sbb
and
inc
fcoms
fstl
jle,pn
xchg
adc
and
add
arpl
lcall
frndint
adc
push
mulb
int3
imul
loopne
jns
cltd
out
andb
fiadds
into
cmp
test
les
rclb
pop
sub
jne
loop
and
imull
enter
push
jp
fwait
cmpsl
ret
stos
cmp
cwtl
lret
invd
inc
dec
imul
lcall
inc
cli
sbb
loope
bswap
in
shrb
xor
dec
jo
sub
or
push
sbb
ja
add
sbb
jmp
push
nop
aam
and
add
mov
repz
cmc
or
mov
jne
loopne
sub
mov
imul
add
lret
and
mov
cmp
jl
push
scas
mov
mov
imul
pushf
sbb
mov
sub
mov
mov
ljmp
fcoml
pop
outsb
fwait
adc
test
or
in
std
ss
cmp
sbb
inc
mov
push
pop
xchg
shrl
sub
dec
inc
ja
subb
daa
dec
mov
add
lods
and
lcall
imul
pop
dec
ficompl
cli
xlat
icebp
mov
sbb
cmp
xchg
fdivrl
jl
sub
repnz
mov
ljmp
dec
mov
scas
mov
test
mov
out
mov
xor
call
jo
mov
bound
int3
pop
xchg
push
sub
pop
push
sbb
mov
inc
ret
cmpsl
inc
in
jae
jae
arpl
mov
jb
mov
insb
xchg
stos
fidivl
notl
mov
sub
mov
or
mov
fimull
aad
dec
test
arpl
cwtl
push
pop
ficomps
xor
pop
stc
pop
insb
je
pop
call
push
sbb
ret
jbe
cmp
mov
aad
sub
add
mov
mov
out
jns
out
sbb
and
addr16
sub
push
mov
jbe
fsubr
add
xor
jmp
imul
daa
sarl
cltd
test
xor
bound
fcoml
repnz
icebp
xchg
lret
je
std
xor
add
daa
lds
ss
or
mov
int3
add
popa
ret
lcall
cmp
shl
cltd
pop
call
xor
xchg
mov
bound
lods
sub
lret
in
cltd
arpl
scas
and
or
cmpb
js
jmp
les
jb
xor
mov
inc
mov
int3
imul
cmpsb
dec
stos
and
lock
mov
je
or
mov
stos
and
jle
test
push
or
outsl
aam
inc
bound
scas
adc
xor
xchg
pop
pop
cmpsl
jb
imul
pop
cmp
icebp
fwait
enter
xchg
mov
xor
lret
mov
faddp
mov
pop
int3
fidivs
and
shrl
stos
push
and
jo
cld
test
fidivrl
lea
inc
add
loopne
mov
loopne
jecxz
out
cmp
xchg
xchg
lea
sub
or
pop
cmp
adc
adc
xor
pextrw
ja
es
and
daa
es
loopne
sbb
shlb
daa
ret
sub
mov
arpl
jmp
mov
dec
xlat
out
cmpsb
out
les
sbb
jbe
cmp
jge
pop
in
adc
lahf
and
sub
out
cmc
pop
sbb
arpl
aas
lods
mov
pop
out
adc
dec
mov
sbb
dec
sub
jb
mov
dec
and
jp
or
sub
loope
and
jno
xchg
mov
pop
push
jnp
xlat
lret
mov
insl
xchg
arpl
lds
stos
mov
mov
sbb
pop
loop
test
hlt
add
mov
cmp
bound
outsb
xchg
repz
and
mov
dec
ja
mov
int3
jecxz
ret
pushf
outsl
int3
inc
adc
cmpsl
fs
fisubs
lods
scas
and
mov
cs
mov
sbb
scas
stc
inc
stos
jmp
fs
inc
clc
xchg
sbb
adc
inc
mov
sbb
subb
sbb
xchg
cmp
push
in
sbb
shrb
or
frstor
mov
dec
outsb
push
sbb
jl
mov
mov
mov
xchg
pop
or
idivb
stos
rcrl
push
mov
shrb
enter
test
inc
pop
aaa
iret
adc
inc
cwtl
jge
mov
mov
inc
pop
sub
loop
cli
fwait
sub
or
loop
popa
int
push
mov
pop
cmp
or
push
cmp
xchg
push
push
in
cmpsl
imul
std
jle
mov
and
ljmp
inc
hlt
or
dec
jnp
push
je
and
dec
mov
add
mov
test
jb
shrl
xchg
dec
inc
push
sbb
sbb
adc
aas
lcall
adc
jno
or
mov
mov
in
mov
gs
mov
pop
push
fwait
shlb
sub
and
lea
mov
movzbl
mov
dec
xor
mov
lea
inc
mov
dec
mov
mov
inc
sub
mov
lea
dec
jne
mov
mov
mov
add
dec
inc
pop
dec
xor
pop
lea
mov
pop
inc
dec
inc
sub
dec
movswl
and
lea
imul
add
ret
push
or
dec
dec
and
or
xor
xor
dec
push
push
push
push
mov
lea
mov
push
add
lea
imul
add
sub
sub
sub
mov
lea
mov
mov
push
dec
dec
xor
xor
movswl
push
inc
imul
push
dec
mov
pushl
movzwl
call
mov
add
movzwl
add
and
dec
imul
dec
sub
pop
ret
dec
inc
inc
dec
inc
add
mov
mov
sub
movzbl
cmp
jb
inc
xor
movzbl
and
lea
dec
inc
dec
mov
inc
imul
dec
lea
and
xor
add
movswl
xor
dec
mov
pop
dec
lea
test
jbe
dec
mov
dec
imul
lea
inc
mov
dec
add
lea
lea
add
lea
inc
dec
inc
sub
inc
add
lea
lea
lea
sub
and
dec
xor
mov
add
inc
movzbl
add
add
add
inc
and
inc
movswl
mov
lea
mov
mov
imul
xor
mov
or
or
mov
mov
dec
dec
inc
mov
mov
dec
jne
add
mov
add
inc
inc
movsbl
dec
dec
mov
sub
and
lea
mov
or
lea
dec
mov
or
sub
and
mov
mov
sub
dec
test
jbe
and
and
mov
inc
and
mov
inc
mov
mov
inc
imul
mov
inc
inc
and
inc
mov
add
imul
add
inc
dec
and
xor
add
mov
lea
add
movzbl
lea
imul
add
dec
mov
and
mov
mov
mov
add
or
movzbl
lea
lea
mov
sub
xor
mov
mov
dec
movzbl
inc
inc
add
lea
jmp
mov
push
mov
inc
push
and
call
pop
ret
push
dec
dec
xor
lea
mov
add
mov
sub
lea
inc
mov
lea
inc
dec
inc
dec
lea
mov
dec
mov
lea
inc
mov
add
add
cmp
je
call
call
call
call
lea
mov
add
dec
dec
mov
mov
lea
dec
and
lea
mov
lea
dec
add
inc
add
inc
mov
add
sub
lea
and
pop
inc
ret
push
mov
push
add
sub
push
mov
push
mov
push
or
lea
push
inc
call
xor
push
inc
inc
xor
lea
lea
movswl
mov
imul
mov
mov
mov
dec
test
je
inc
mov
lea
inc
or
or
inc
add
dec
mov
xor
inc
sub
imul
or
imul
mov
lea
repnz
mov
or
add
sub
jmp
push
pop
inc
push
sub
or
mov
lea
mov
dec
sub
dec
add
sub
dec
sub
call
sub
lea
dec
mov
mov
movzbl
lea
mov
mov
lea
mov
dec
lea
xor
lea
dec
dec
mov
call
add
dec
call
mov
lea
inc
dec
mov
add
lea
add
call
mov
push
lea
xor
inc
lea
mov
mov
inc
dec
lea
movswl
lea
sub
mov
mov
call
inc
imul
imul
sub
dec
sub
movzbl
movsbl
inc
pop
add
mov
inc
add
add
pop
xor
inc
pop
mov
lea
imul
mov
pop
mov
sub
add
dec
inc
inc
inc
or
pop
mov
dec
pop
mov
add
mov
dec
inc
call
mov
xor
inc
mov
ret
dec
mov
push
inc
lea
push
mov
imul
push
and
and
push
lea
push
mov
add
mov
movzwl
push
mov
ret
push
dec
inc
inc
jmp
jmp
inc
mov
inc
mov
imul
mov
and
inc
or
inc
add
mov
pop
pop
ret
push
inc
xor
dec
sub
push
dec
sub
push
lea
sub
push
mov
mov
push
dec
call
pop
ret
sub
dec
mov
lea
mov
mov
mov
add
mov
sub
add
mov
mov
dec
xor
mov
mov
mov
dec
inc
inc
mov
lea
xor
movswl
add
inc
cmp
jb
imul
push
add
mov
mov
xor
mov
push
mov
add
push
and
imul
xor
mov
add
xor
mov
mov
xor
dec
dec
push
mov
dec
xor
lea
lea
mov
inc
mov
mov
inc
movsbl
movzbl
or
lea
sub
inc
add
and
add
mov
mov
movzbl
movswl
and
inc
add
imul
or
sub
inc
mov
mov
mov
xor
mov
xor
imul
add
dec
cmp
jb
sub
xor
mov
mov
dec
sub
mov
dec
jmp
cld
mov
stos
jbe
call
mov
daa
sbb
add
dec
cmp
adc
loope
mov
addr16
ret
jo
lods
in
insb
shlb
pop
jae
hlt
stos
jge
in
inc
jmp
fs
sbb
pop
addr16
jp
leave
data16
jns
fdivs
imul
sub
fs
imul
std
mov
xor
sub
das
mov
and
cmpsb
addl
in
gs
test
jmp
push
or
xlat
pusha
imul
std
aam
loope
adc
adc
lret
in
pop
mov
or
cmc
inc
movsb
xor
xchg
mov
cltd
ss
pop
std
and
cmp
imul
cli
dec
faddl
xchg
adc
ja
xchg
xor
ret
sbb
mov
cmpsl
dec
insl
scas
andl
push
fcoml
pop
fst
dec
in
adc
adc
icebp
xchg
mov
cld
xchg
loope
jns
test
push
inc
fildll
mov
mov
lcall
inc
and
test
scas
fs
push
fstps
mov
and
pop
jae
insb
cmp
adcb
mov
test
enter
and
ljmp
xchg
push
sbb
cmp
inc
fwait
pop
add
dec
out
test
repnz
xchg
cmp
outsl
dec
mov
out
xor
ret
pop
es
shll
addr16
dec
and
enter
add
inc
ror
jg
push
aam
hlt
inc
fnsave
fwait
or
or
cmp
repz
mov
pop
test
jmp
pop
lret
sbb
push
scas
out
or
test
aas
lea
mov
sub
push
mov
pushf
pop
push
inc
xchg
loope
pop
push
fnstcw
mov
sbb
adc
mov
sub
adc
jae
fisubrs
sbb
rsqrtps
sub
adc
mov
and
add
pop
or
xlat
insb
pop
in
and
push
loope
sub
cmc
mov
sbb
gs
push
xor
stc
enter
mov
mov
pop
sbb
rcrb
xchg
sub
test
outsl
sub
jmp
in
movsb
add
jge
pushf
xor
add
int
xor
adc
sub
and
pop
inc
cmp
mov
fdivrl
lcall
xorb
push
lea
aaa
mov
sti
outsb
push
test
dec
stc
jne
icebp
je
lods
cltd
lds
mov
loop
das
cld
mov
add
mov
ljmp
orl
adc
cmc
inc
xchg
sarb
and
xorb
insb
pcmpeqd
jg
inc
pop
shlb
inc
cmp
pop
sub
cwtl
sbb
cs
pop
cmc
sub
jns
test
xchg
aam
dec
cli
jae
and
inc
cwtl
aad
xor
sbb
aaa
xor
add
rolb
and
jb
mov
test
mov
push
adc
popa
jge
mov
push
imul
out
gs
push
cmp
and
adc
sarb
add
inc
adc
xchg
lock
dec
or
insl
mov
pop
lcall
jb
sub
jo
fsts
sub
lret
pusha
pop
rcrb
popf
je
mov
ficoms
js
lods
arpl
lret
sub
cmc
sub
ljmp
pop
cltd
inc
mov
faddp
jecxz
cli
dec
push
fldl
add
cmp
fs
fstl
shl
cltd
loopne
sub
xchg
pop
out
dec
or
inc
xchg
sbb
hlt
out
rol
mov
cmp
bound
sub
loop
in
sbb
xchg
push
hlt
mov
sub
hlt
das
es
jg
sbb
std
fcomp
pop
sub
or
imul
mov
pusha
jnp
add
xchg
stos
push
jb
sbbl
sub
push
mov
cs
push
mov
mov
cmp
mov
rorl
lods
fstl
dec
fldl
mov
xor
fisubrl
pop
aad
negl
bnd
cmovge
pushf
or
shrb
push
mov
clc
jb
in
lret
pop
cmc
loope
pop
sub
mov
xchg
dec
ret
sbb
sub
hlt
jmp
push
inc
xor
adc
or
inc
shll
mov
fistps
inc
and
hlt
test
mov
cmc
arpl
pop
fwait
adc
sbb
nop
insl
fsubrl
out
push
addb
mov
aam
mov
dec
adc
push
or
jno
hlt
cmp
jecxz
or
or
xchg
mov
xchg
jns
push
mov
movsb
sar
cltd
dec
push
rclb
sub
movsb
fisubrs
sbb
jp
dec
jbe
roll
dec
sbb
push
xchg
aam
xchg
aad
into
dec
xchg
testb
cmp
sbb
jo
pop
xchg
xor
arpl
mov
add
inc
test
push
cli
mov
push
bound
jae
cld
xor
stc
mov
inc
enter
fwait
mov
push
ret
jbe
addl
out
and
mov
xor
xchg
addl
sbb
inc
add
adc
xchg
aad
lahf
cwtl
sbb
push
sbb
je
call
xchg
packsswb
out
stos
popl
test
addr16
add
sub
iret
cld
ljmp
mov
sti
cmpsl
adc
into
jno
lret
rcr
sub
lock
shlb
lods
xchg
loopne
pop
dec
repz
dec
sub
jno
sub
pop
shll
inc
push
and
fidivl
movsb
imul
push
mov
lcall
lods
js
pusha
push
jle
and
or
fnstsw
jne
and
shll
std
add
xor
inc
sub
ret
mov
arpl
mov
push
push
scas
jb
jbe
dec
pop
test
outsl
mov
or
mov
jne
aaa
jle
xchg
inc
or
out
daa
adc
mov
mov
lods
jo
lret
loopne
jne
sbb
mov
ret
inc
push
movsl
adc
mov
pop
out
sub
jbe
mov
sub
adc
add
shlb
inc
ja
aas
repz
xchg
sbb
adc
js
out
jo
jns
lods
int
sbb
inc
outsb
data16
out
jg
dec
inc
mov
jne
in
xchg
cmp
mov
pop
cmp
cld
xchg
pusha
xchg
pop
loope
pop
xor
addb
sbb
inc
jle
pop
mov
push
iret
push
sbb
imul
adc
mov
and
dec
xor
inc
mov
int3
stos
xchg
call
cmp
ss
shll
sub
add
push
adc
hlt
xor
mov
popa
lods
inc
cmp
fsubs
cli
cs
roll
in
in
imul
popf
xor
pop
cmp
sahf
sub
out
addb
call
xchg
stos
inc
lea
push
push
xchg
into
lods
lret
aaa
mov
xchg
mov
cs
push
loope
scas
dec
mov
sti
dec
decb
outsl
xchg
sub
ret
sub
xor
xchg
sbb
hlt
inc
xchg
inc
imul
cli
jecxz
cwtl
loopne
aam
fsubl
add
inc
add
ja
leave
mov
xchg
pop
jmp
push
subb
xchg
xor
sub
sub
testl
xorl
push
test
clc
sbb
popf
mov
pop
sub
adc
xchg
mov
or
xchg
enter
faddl
sub
and
or
mov
push
enter
jns
xchg
scas
dec
in
cmp
das
jno
inc
pop
or
cld
std
in
dec
roll
sbb
lods
sub
push
mov
out
aaa
and
mov
inc
bound
xor
lock
cmp
call
or
jo
sub
jne
adc
xor
gs
fcmovnb
shrl
push
cmp
std
cmpsl
into
push
or
out
mov
mov
sarb
out
cmp
ljmp
mov
jae
filds
test
js
pop
es
stos
xchg
xchg
call
xchg
sub
popa
mov
fdivs
pop
jnp
iret
adc
shrb
dec
testl
nopl
aam
push
push
in
xor
es
pusha
xor
mov
movsl
cmp
das
test
jp
aad
jl
ret
data16
mov
int
mov
jmp
into
shl
fidivrl
in
insl
mov
gs
mov
jno
scas
hlt
pop
fidivs
cmpsl
imul
iret
and
pop
cmpl
mov
aam
mov
out
add
ja
and
jmp
inc
jbe
add
xchg
inc
jmp
insl
mov
adc
mov
dec
scas
and
mov
cmp
xchg
sub
out
orl
jle
out
stos
add
pop
into
cmpsb
push
je
sbb
aad
cld
icebp
cltd
mov
jecxz
xchg
pop
jp
xchg
cwtl
rorb
xor
push
sahf
mov
inc
in
push
flds
sbb
inc
cmp
gs
push
cld
dec
pop
inc
ja
sub
movsb
cmp
xor
cmp
push
iret
dec
adc
nop
xchg
jl
inc
ja
mov
add
mov
ror
adc
xchg
daa
sub
sbb
xorl
enter
adc
mov
jb
ficomps
jle
mov
cmp
adc
jns
repz
lock
and
stos
repnz
cmpsb
je
xor
xchg
jae
out
sysret
inc
sub
and
js
add
popa
jne
lcall
int
pop
add
xor
je
push
cmp
add
mov
orl
ja
xchg
lea
xchg
jo
cmp
stc
aad
leave
outsb
jns
or
mov
bound
add
mov
or
jae
jnp
cmc
stos
mov
xor
inc
push
sub
push
push
and
shrl
lods
push
outsb
bnd
cmp
rcl
decb
inc
jl,pt
int
cwtl
arpl
mov
jecxz
lds
and
test
lds
fsubs
sbb
sbb
leave
fidivrl
and
pop
jecxz
jns
inc
mov
lods
jmp
xor
add
or
notl
cmpsb
and
pop
xchg
stos
dec
lea
fiadds
aaa
mov
adc
mov
jmp
js
lock
into
inc
imul
loope
jg
popf
cmp
mov
or
push
mov
fnstenv
popa
rorb
sbb
scas
add
push
pop
hlt
adcl
push
push
int3
insb
and
push
xor
imul
xchg
negb
xor
cmp
push
insl
insl
sti
jge
mov
data16
aad
js
aaa
pushf
inc
and
and
mov
loopne
lods
jge
xchg
pop
repz
mov
aad
sbbl
scas
ficompl
cmp
les
push
loop
jae
jge
mov
or
sahf
aas
dec
shl
decl
add
push
mov
ret
cli
movsb
jo
dec
loop
shlb
fsubrs
int
mov
adc
or
daa
int
test
pop
aas
scas
int3
mov
sahf
jno
pop
nop
popa
add
mov
into
in
dec
and
fldt
pop
xchg
outsl
pusha
dec
cmpsl
push
je
and
mov
mov
push
lahf
ss
movsb
scas
sbb
fnstcw
leave
add
out
dec
daa
bound
sbb
clc
add
cmc
movsb
sahf
sub
inc
inc
dec
hlt
dec
push
out
faddl
xor
xchg
or
jbe
mov
push
dec
or
dec
jo
push
fimull
mov
in
in
and
xchg
iret
ds
jmp
add
mov
fwait
roll
les
lea
shrb
mov
cmc
ss
sub
sub
fstl
jbe
jo
icebp
pop
xchg
arpl
gs
aas
stc
adcb
xchg
mov
and
es
push
je
jmp
es
js
jp
movsl
and
movsb
aas
push
fs
repz
int
jg
mov
test
test
mov
mov
and
pop
andl
in
nop
nop
fisubl
push
int
faddl
sub
pop
xor
lock
xchg
mov
xor
and
sub
clc
rcll
pop
jle
pushf
data16
pusha
mov
jecxz
js
iret
adc
cmp
stos
xlat
add
push
notl
nop
inc
mov
push
daa
cmp
mov
jns
lcall
cmp
fidivrl
daa
push
iret
pushf
xor
jo
sysenter
outsb
rclb
movsl
ljmp
lock
scas
push
cmovae
bound
shl
shll
stc
mov
adc
xchg
fsubl
dec
scas
rcrb
sbb
fwait
pop
cmp
lods
insb
loop
push
lea
shrl
sbb
push
ss
out
pop
pop
gs
orb
popa
outsl
je
and
insb
xchg
push
divl
mov
xor
or
std
mulb
mov
mov
lret
xor
sbb
or
adc
sbb
mov
sub
pop
lcall
mov
jnp
jmp
cmp
mov
mov
inc
pop
addr16
inc
jns
cmpsb
fwait
int3
dec
add
loop
pop
stc
fucom
movsl
or
lock
adc
cmp
xchg
mov
pop
or
in
jge
mov
xchg
cli
mov
fcoms
loopne
mov
fcoms
rolb
xorl
mov
les
xor
loop
push
test
fcmovb
out
pop
mov
mov
leave
push
mov
inc
popa
in
pop
lds
cli
mov
repnz
dec
sti
aam
push
js
fstl
pop
repz
std
icebp
or
fdivrp
leave
stos
and
insb
lods
cmc
sub
lods
mov
or
inc
shlb
inc
mov
stc
stos
inc
xchg
sub
or
rorb
sub
inc
movsb
lcall
add
push
ljmp
scas
xor
push
mov
insb
mov
xchg
sub
aam
ss
int3
arpl
mov
inc
rcll
nop
subb
dec
push
fwait
cld
call
xchg
cmpsl
aad
shlb
sbb
push
inc
loope
cmp
mov
or
jno
iret
fcoms
sub
nop
test
daa
jg
cmp
repz
das
mov
and
lods
mov
mov
add
inc
sbb
xor
and
lock
pop
test
xor
adc
ljmp
sbb
aaa
lods
xor
push
daa
fs
fisubrl
push
cmp
push
loopne
les
push
or
jbe
aaa
and
cmp
mov
arpl
into
sti
orl
int3
cli
out
sub
fs
pop
lods
loopne
std
popa
mov
xchg
xor
and
cmc
adc
xor
out
mov
mov
inc
adc
dec
pop
pop
mov
push
push
lret
mov
mov
nop
inc
jnp
mov
dec
jb
lods
mov
sti
adc
fidivrs
dec
xchg
shl
fs
or
mov
adc
in
push
pushf
pushf
sbb
sub
jo
add
test
mov
ss
xchg
jne
mov
imul
iret
adc
test
jne
adcb
mov
mov
mov
xchg
adc
ret
outsl
idivb
sub
jecxz
sbb
or
lret
jle
xchg
push
fcoms
xor
mov
clc
adc
sbb
jle
rcrl
sbb
sbb
or
mov
mov
out
cli
lods
mov
inc
mov
sub
roll
xchg
jne
mov
ds
and
cwtl
xor
icebp
jbe
push
mov
test
subb
cmpsl
xlat
sbb
lcall
pop
sbb
je
mov
popa
clc
pop
inc
adcl
jne
iret
sbb
cmc
decl
xchg
mov
daa
pop
jge
xchg
int3
inc
inc
cld
ds
fwait
mov
cltd
lea
adc
jno
push
push
sub
dec
inc
outsl
pop
testl
and
and
lods
pop
std
insl
dec
inc
arpl
fstl
imul
cltd
mov
pop
mull
push
xchg
push
int
aas
lock
nop
pop
mov
mov
add
fadds
mov
mov
sbb
clc
or
in
mov
leave
mov
pop
dec
call
jns
xchg
pop
fmulp
es
push
sub
dec
imul
push
mov
inc
xchg
hlt
push
jmp
lods
or
movsb
bound
cs
cltd
popa
jecxz
lds
jge
jp
pop
mov
test
push
mov
lret
sub
sbb
mov
sub
sub
jmp
push
aam
imul
insl
bound
sbb
daa
mov
push
or
lods
dec
cmp
sbb
sub
sbbl
insb
iret
cs
push
subl
mov
xchg
mov
jnp
fs
xor
addr16
icebp
mov
pop
or
mov
lret
sbb
cltd
in
push
adc
addl
stc
mov
mov
inc
cmp
jae
loope
mov
cmp
imul
push
jae
pop
add
mov
fidivrl
xchg
pop
leave
dec
inc
push
and
in
loope
sbb
push
push
add
nop
int3
sbb
loope
lret
insb
fisubrl
xor
or
pop
test
push
inc
mov
lods
das
pusha
and
mov
push
sub
aam
jg
xchg
lds
mov
test
in
cwtl
gs
xor
push
in
loope
nop
ret
dec
push
and
lret
push
jns
xchg
xchg
arpl
imul
inc
add
aaa
xchg
push
mov
gs
jp
jl
pushf
add
mov
mov
scas
adc
into
fadd
ret
movsl
pop
lret
sub
clc
sbb
daa
xor
and
adc
push
pop
imul
mov
mov
js
push
out
out
push
sub
bound
stos
push
xor
adc
pop
add
push
inc
dec
adc
lods
pop
dec
mov
lcall
outsl
mov
xor
jge
jbe
daa
ds
sub
pushf
pop
data16
int
mov
nop
adc
rol
call
je
push
ljmp
xchg
sub
mov
int3
inc
xor
js
xchg
add
aad
test
adc
in
adc
pop
or
pop
ss
enter
scas
fwait
pop
leavew
subb
scas
lcall
pop
leave
jmp
pop
or
popf
ja
sbb
ret
pop
xchg
add
insl
pop
imul
imul
jecxz
popf
jge
and
cmc
pushf
cli
cmp
adc
mov
xchg
mov
cmp
sbb
pop
add
in
cld
jo
out
mov
fsubs
xchg
fyl2x
call
loope
jmp
outsl
rclb
in
popf
xor
adc
adcb
pusha
test
test
adc
lret
in
mov
fnstenv
cmp
push
dec
jge
jle
add
cmp
outsb
insl
mov
clc
push
jbe
fldcw
and
cmpsb
mov
add
jo
cmpsl
cmpsl
cmp
lret
jb
fistl
data16
ljmp
or
inc
xlat
mov
lea
cmpsb
fwait
xor
outsl
imul
push
mov
popf
and
add
fldl
pop
nop
popf
add
repz
in
and
das
in
xor
pushf
fisttpll
mov
adc
fldcw
jmp
sub
pop
add
cmp
bound
arpl
shrl
mov
int
jae
jns
popf
push
lahf
pop
jg
sar
insl
aaa
xlat
gs
sbb
lock
pop
out
in
add
lock
stos
mov
mov
clc
iret
jle
xchg
stos
std
dec
scas
lods
rorb
push
jle
jl
sub
loop
lea
leave
outsb
or
scas
xor
jne
cmp
in
cwtl
inc
jge
xor
jns
push
sarb
popf
and
adc
icebp
inc
fldt
loop
int3
push
mov
mov
mov
jo
add
or
loope
cmpsl
dec
in
lods
add
cmc
scas
cmp
loop
call
sbb
fstpl
sbb
testl
movsl
mov
repnz
or
lcall
add
push
jge
adc
out
inc
and
lea
push
shlb
adc
mov
pop
lcall
aam
insb
repz
in
mov
push
test
and
fiaddl
push
jae
mov
mov
jle
xor
cmp
mov
xor
movsb
adc
mov
in
xchg
pushf
test
adc
jmp
cld
mov
cmp
mov
inc
iret
sbb
cmpsl
sbb
push
and
pusha
lods
frstor
addr16
xor
pop
xchg
push
jmp
xor
icebp
cli
fcoms
insb
test
ret
in
cli
clc
movsl
xchg
repz
jp
mov
dec
rol
jb
lcall
cmpsl
enter
mov
cltd
out
push
sti
out
mov
push
fidivrs
or
je
mov
shl
leave
cmpsb
fld
mov
sub
sahf
sub
roll
lahf
xchg
fdiv
imul
mov
rcrl
fs
loop
cmp
call
outsb
or
jb
shl
jne
mov
scas
les
mov
xor
pop
adc
loop
push
ss
xor
cmp
push
xchg
les
adc
lods
lods
mov
sub
ds
and
ret
les
pushf
adc
pop
enter
push
sub
out
pop
mov
add
fistpl
lcall
addb
mov
lock
pop
inc
xor
pop
adc
xchg
add
lret
lret
dec
mov
test
fcoms
sub
add
pushl
or
jle
adc
xchg
in
jmp
ret
ret
lcall
mov
dec
iret
iret
mov
decb
in
vunpcklps
fldenv
sbb
fsubrs
push
inc
adc
add
jne
sbb
mov
jge
xor
mov
push
cld
xchg
stc
lock
inc
mov
push
or
dec
scas
in
jo
mov
xlat
add
std
movsb
xor
test
add
xor
cmp
sbb
shrb
push
push
push
insl
lret
std
hlt
cltd
sub
int3
pop
nop
dec
pop
push
iret
ficompl
ret
movsb
jbe
jg
into
jo
pop
pusha
mov
fs
aad
push
and
pop
add
daa
repz
daa
or
xor
ds
inc
jne
out
arpl
pop
sarl
jb
mov
test
addb
imul
xchg
mov
inc
sbb
pushf
inc
mov
addr16
ds
push
mov
lret
fwait
enter
adc
cli
je
or
mov
test
cmp
and
jp
inc
xchg
cltd
jns
sub
mov
addr16
in
jp
aad
inc
nop
fimuls
scas
add
push
lcall
out
in
stos
mov
subl
nop
sub
push
imul
or
inc
loope
sarl
sbb
mov
pop
mov
fwait
pop
rcr
jg
cmpsl
aaa
lea
xchg
hlt
rcl
ret
xchg
popaw
cli
mov
stos
add
push
nop
dec
enter
popa
not
adc
cmpsl
fdivp
fwait
mov
jecxz
push
lock
fs
cmp
rolb
jnp
daa
adc
mov
faddp
cltd
dec
cmp
cmp
mov
repz
fwait
dec
ja
sub
fisubl
mov
add
xchg
dec
inc
dec
jbe
adc
inc
jns
mov
lcall
pop
mov
push
cmp
mov
sti
adc
mov
push
fistpll
mov
clc
push
and
mov
mov
aad
or
frstor
lods
jb
add
or
inc
stos
aas
cmc
in
fnstcw
das
mov
sbb
popa
jp
push
addr16
loope
or
add
or
rcrl
sbbl
adc
mov
jnp
push
lea
push
mov
mov
mull
lods
dec
mov
decl
stc
pop
jl
dec
fdivrs
mov
and
stos
cmpsl
test
ror
push
loopne
loopne
jbe
flds
adc
cli
ret
dec
pop
daa
ja
iret
mov
xor
xlat
scas
jnp
dec
mov
xchg
sahf
loop
test
mov
and
lods
in
fmul
scas
xlat
mov
hlt
or
sahf
cltd
aam
and
xchg
or
dec
mov
dec
in
scas
enter
add
and
test
add
pop
adc
or
mov
add
mov
jno
sub
cmpsl
cld
add
push
adc
sbb
les
mov
cltd
jecxz
unpckhps
or
jbe
sub
cmp
divl
and
cwtl
cmpsb
lods
das
cmpsb
inc
lahf
cmpsl
or
cmp
ds
adcl
inc
sub
loop
and
inc
sbbb
jg
insl
repnz
aad
cld
jmp
adc
xor
mov
gs
testb
popa
je
sbb
mov
lods
mov
cltd
inc
cli
sub
dec
lcall
loop
pop
mov
sub
fimull
mov
mov
ror
sti
mov
fldcw
loope
or
cmp
stc
add
mov
jmp
add
fsubrp
rcrb
imul
insb
adc
int
imul
out
xor
mov
adc
mov
aad
std
roll
js
lret
sahf
add
mov
jae
je
and
add
push
lcall
dec
les
jmp
insl
xor
and
and
data16
cmpsl
aam
push
push
and
adc
inc
add
cli
cmp
mov
xchg
frstor
les
push
sub
mov
or
std
shl
insb
inc
cmp
xor
mov
mov
xlat
jnp
push
xor
adc
lods
jbe
push
idiv
clc
loop
call
lock
lods
pop
test
xchg
movsl
mov
push
cmp
test
in
dec
and
add
xor
push
fwait
movsl
mov
jl
xchg
scas
int3
jecxz
fs
les
sahf
jb
mov
dec
dec
loopne
outsl
aas
jl,pt
pushf
lods
jmp
adc
pop
insb
mov
xor
loop
out
pop
sub
shl
lods
sbb
mov
jnp
mov
leave
push
and
xlat
pop
inc
or
je
mov
mov
mov
add
or
scas
bound
xor
add
jo
push
push
fimull
xlat
cmc
cmp
call
mov
fnstcw
jae
xchg
outsl
jle
fisttpll
imul
xchg
scas
rcrl
sub
imul
in
sub
filds
lds
jae
cltd
inc
sti
jb
outsb
cmp
dec
sbb
imul
mov
out
dec
iret
rcl
inc
bnd
shl
add
xchg
push
add
inc
lods
mov
out
sub
adc
lods
sub
jp
jg
and
insb
mov
ja
imull
cmp
pop
cmp
sbb
cwtl
leave
pop
mov
xchg
movsl
inc
fimuls
mov
cmc
mov
pop
mov
mov
out
aad
int3
ret
out
ss
push
lods
in
inc
pop
fdivr
sahf
add
inc
call
jle
mov
xchg
fisttpll
and
sbb
dec
int
jae
jecxz
dec
jb
int3
inc
inc
mov
pop
pop
aas
push
jp
and
scas
imul
test
ss
xchg
std
inc
sbb
out
ja
ret
int3
mov
pusha
ja
or
push
fadds
xor
popf
mov
stos
dec
inc
xor
lcall
lret
inc
sub
xchg
arpl
shlb
std
daa
pop
daa
imul
data16
lahf
and
je
mov
in
fdivrl
mov
xor
sbb
out
mov
mov
and
dec
pop
nop
sbb
jle
push
mov
and
xchg
jnp
mov
mov
stc
inc
adc
pop
mov
adc
loop
cltd
in
add
mov
ja
jns
mov
xor
dec
inc
cld
add
adc
std
inc
mov
jl
inc
lods
aam
insl
lock
adc
cmp
and
loopne
mov
dec
popf
insl
enter
stos
push
pop
sbb
sahf
jns
and
jecxz
shll
rol
mov
leave
decl
fistps
push
loope
push
push
pushf
push
dec
lahf
call
maxps
adc
mov
int3
call
jmp
or
fs
bound
addr16
sahf
sub
inc
jmp
mov
pop
or
push
jge
nop
in
imul
xchg
pop
or
cmp
cmc
pop
in
fs
or
mov
orl
test
sub
cld
scas
xchg
mov
inc
pop
out
adc
xor
or
jge
mov
mov
mov
rcl
cmp
and
les
or
int
sub
test
lods
xor
adc
in
out
sbb
popf
fistl
or
shll
enter
xor
mov
mov
out
inc
bound
orb
or
sub
std
xor
cmpsb
shll
mov
dec
jl
dec
add
jmp
repz
movsl
movsb
xchg
and
data16
and
xchg
dec
shlb
adc
pop
fisttpl
or
push
pop
pop
dec
xlat
cmc
out
addr16
jl
outsl
insl
fdivrl
and
add
jmp
lahf
loop
and
les
push
add
mov
sbb
dec
sbb
sti
outsb
inc
or
mov
mov
leave
mov
lods
mov
jns
out
push
add
and
sti
int
fldln2
les
sub
jnp
or
rcrl
pop
inc
jns
cltd
or
mov
sub
imul
bound
cmp
sub
in
inc
xchg
sub
adc
cltd
out
mov
call
jp
and
or
mov
popa
pop
and
dec
jle
orb
fs
sub
not
adc
cltd
xchg
push
fcmovnb
je
loopne
add
mov
cltd
rorl
xchg
fisubl
add
push
imul
out
iret
mov
jno
push
jecxz
sbb
mov
sarb
lret
or
lahf
pop
loop
sub
leave
iret
or
ljmp
sti
inc
sbb
rcrb
adc
aaa
test
xchg
and
or
and
not
jge
sbbl
xor
dec
insl
test
inc
jge
push
popa
outsw
dec
mov
adc
and
or
repnz
call
pop
xchg
adc
and
mov
fists
dec
or
sub
and
jle
mov
arpl
iret
pop
mov
adc
push
icebp
cwtl
or
into
jbe
addr16
je
js
push
dec
bound
aam
dec
xchg
dec
ss
popf
mov
fndisi(8087
sub
xor
call
and
mov
mov
lds
lcall
flds
aas
les
jo
jne
push
icebp
inc
pop
jge
inc
jmp
idivl
test
outsb
enter
cli
out
test
js
in
lcall
pop
mov
mov
insb
pop
imul
cmpsb
inc
test
add
cmp
je
or
mov
push
pop
jo
fcoms
mov
pop
aas
arpl
popa
add
mov
pop
lret
inc
inc
repz
jb
adc
xchg
pop
sbb
les
sti
xor
aad
push
sarb
jns
mov
xchg
or
push
sbb
mov
dec
xchg
in
lahf
ss
mov
pop
movsb
out
jecxz
sbb
add
call
imul
ja
jmp
int
mov
cmp
adc
fstps
add
cmpb
in
lea
sub
lcall
rcll
lret
paddsw
inc
or
repz
cmp
divb
scas
cmpsb
fistpll
mov
inc
pop
shll
je
jmp
pop
adc
xchg
cmc
mov
dec
insb
mov
xchg
imul
inc
cmp
dec
xchg
popf
scas
push
mov
icebp
aad
xchg
movsb
int
xchg
aad
mov
mov
shl
in
jne
test
outsl
mov
pop
loopne
scas
mul
sbb
push
adc
dec
cli
cltd
mov
arpl
add
cmc
jns
and
mov
pop
or
push
out
push
js
mov
push
ficomps
sub
sub
cmpl
sti
xchg
mov
out
add
dec
cmpsb
cmpsl
push
push
les
mov
sub
rorb
lock
inc
add
sub
repnz
mov
mov
sub
or
sbb
imul
dec
mov
cmp
stc
std
imul
mov
pushf
sti
jno
insb
in
in
and
pusha
inc
jge
andb
xchg
xchg
xlat
shll
adc
das
arpl
in
shl
scas
aas
dec
popa
shlb
jp
ds
push
sarb
inc
adc
imul
cmp
xchg
xchg
decl
pop
jo
ret
xor
mov
adc
rclb
push
sbb
movl
pusha
xchg
imul
sahf
inc
mov
fimuls
mov
push
lods
jbe
sub
pop
imul
dec
insb
jecxz
xor
bound
outsb
dec
mov
repz
cltd
fcmovbe
pop
or
test
mov
clc
jl
push
das
js
sub
xor
fwait
out
repz
pop
fists
pushf
sub
xchg
daa
arpl
imul
mov
mov
enter
lea
lahf
push
xchg
xor
mov
xlat
mov
push
das
jne
popf
subl
pop
jl
push
push
bound
jne
inc
jne
addr16
mov
inc
out
mov
add
dec
or
loopne
add
cmpsb
out
push
movsl
adc
sub
fcmovnbe
out
mov
int
lock
aam
pop
test
sarb
xchg
fnstenv
ds
pop
cltd
xor
mov
fdivp
sub
lahf
js
in
xor
fs
inc
cmpsl
xchg
imul
sub
int
movsb
out
test
dec
int3
shrb
imul
nop
mov
lods
xor
fwait
push
imul
repnz
cmp
or
inc
adc
push
pop
ficoms
push
jmp
mov
cmp
dec
std
xor
pop
or
arpl
sbb
outsb
aad
dec
cwtl
jns
mov
xchg
cmpsl
fyl2xp1
jns
mov
mov
out
pop
fmuls
xlat
cltd
cmp
lret
dec
ret
add
out
lds
and
push
cmp
pusha
inc
xor
mov
sbb
test
ret
adc
fstpt
mov
cmp
or
mov
mov
fldenv
sub
mov
jmp
push
xchg
fildll
in
sahf
push
inc
mov
mov
test
and
not
cmp
ds
gs
or
inc
pop
xchg
push
pop
jbe
push
in
add
push
xchg
mov
sbb
call
sub
je
cmp
and
adc
call
mov
sub
imul
or
adc
adc
push
jmp
xchg
add
mov
fldl
popf
cld
push
fucomi
icebp
xor
xchg
and
pop
dec
pop
fists
data16
cmp
jbe
push
inc
andl
out
or
cmc
mov
pushf
rclb
scas
jno
sub
sbb
dec
add
call
sub
pusha
int3
test
out
idivl
scas
add
jbe
outsl
inc
jmp
add
cli
aad
jb
and
pop
jmp
mov
add
and
pop
cmp
test
js
outsb
inc
cs
arpl
cltd
mov
punpckhbw
rcl
inc
dec
adc
inc
test
pop
flds
leave
jmp
adc
dec
and
les
ja
and
test
sahf
and
mov
mov
jne
add
cmpsl
loop
xor
mov
aad
call
mov
mov
out
lods
sub
movsb
call
adcb
loopne
imul
mov
in
dec
cmp
idivl
xor
sahf
lods
je
jge
pop
mov
in
ror
sahf
mov
dec
and
orb
insb
jns
sub
test
pushw
jbe
lods
stos
in
mov
shll
or
xor
mov
jne
push
incl
je
mov
test
loope
adc
test
lds
pop
jg
xchg
xlat
fwait
dec
fnstsw
inc
das
inc
mov
jl
cmpsb
ljmp
pop
xor
cmp
imul
outsl
adc
xchg
loop,pt
or
sbb
sbb
rcrb
jnp
mov
mov
cwtl
push
test
add
insl
loope
add
ja
and
pop
push
cltd
dec
dec
cmp
add
lock
fcmovb
pusha
add
sub
enter
sbb
and
push
inc
xchg
imul
daa
lret
xor
cmp
ret
outsb
jge
pop
cmp
dec
xchg
mull
mov
into
xchg
shrb
mov
insl
add
jecxz
notb
push
ret
mov
mov
pop
lahf
stc
call
sub
mov
pop
lcall
scas
je
idivl
into
out
xor
mov
jbe
enter
xchg
jle
iret
cmc
out
xor
mov
bound
fdiv
mov
jl
in
sar
jno
scas
xchg
jge
ja
ljmp
aam
das
fcmove
lret
pushf
jbe
jle
jecxz
mov
mov
addb
out
pusha
add
sub
and
divb
jo
movl
xchg
xlat
aad
andb
adc
scas
stos
cmp
std
aam
pop
aad
adcb
mov
pushf
jne
mov
or
sti
cmpsl
rcl
arpl
mov
dec
jmp
arpl
jne
int
rorl
pushf
pop
int3
in
and
int
or
insb
ss
aad
out
clc
in
sbb
out
mov
or
adc
mov
stos
cmp
pushf
fsubr
inc
dec
mov
pop
xchg
bnd
and
mov
and
sub
sahf
scas
repz
xchg
aad
push
dec
leave
in
stc
adc
lret
dec
mov
test
popa
in
xor
shll
sahf
fsubrl
icebp
pop
inc
jl
xchg
jge
sarl
mov
aad
inc
pop
mov
xchg
mov
aaa
cmp
mov
and
mov
leave
mov
push
adc
orl
daa
and
jge
je
pop
jae
addr16
mov
or
divl
xor
sbb
mov
js
ror
dec
repnz
mov
push
aam
mov
aas
mov
mov
outsb
cmp
or
mov
es
pop
je
out
xlat
call
fs
xor
out
push
mov
aad
sbbl
adc
dec
insb
pop
pop
fisttps
sahf
leave
or
xchg
fstl
repnz
mov
xor
push
in
out
insl
sub
cmp
sub
scas
insb
cmp
or
pop
hlt
or
mov
and
movsb
inc
decl
xchg
sub
sub
cs
cmp
mov
dec
inc
adc
and
imul
cwtl
jb
test
enter
sub
arpl
mov
aaa
and
inc
clc
jb
cmpsl
sub
or
gs
push
adc
in
loope
loop
dec
sbb
xchg
mov
push
inc
es
sbb
ret
aam
mov
das
sub
xor
xor
out
int3
sar
adc
mov
outsb
js
jecxz
pushf
int3
cmp
adc
jno
cmpsl
pop
arpl
mov
and
aaa
xor
cmp
cwtl
adc
and
cmp
repz
and
nop
xchg
jbe
inc
fbld
jge
lahf
out
mov
daa
fsub
xor
out
fnstcw
stos
dec
sub
bound
mov
in
popa
movnti
add
fxch
out
mov
xor
xchg
and
lods
fimull
mov
push
pop
loope
pop
jns
push
jno
aaa
hlt
sbb
addr16
jg
add
aad
sbb
fistpll
mov
add
mov
mov
jg
mov
jge
xchg
leave
jmp
fdivr
or
loop
xchg
push
inc
out
inc
jmp
xor
xchg
xor
sbb
dec
xchg
daa
shll
arpl
in
xor
jnp
stos
xor
mov
leave
sub
aad
push
scas
in
adc
out
outsb
fiaddl
xchg
pop
push
cli
aaa
xchg
adc
jo
test
lfs
cmp
adc
notw
jno
aam
pop
jmp
sbb
xchg
cli
popf
xchg
lock
ss
leave
in
pop
mov
push
aaa
inc
xchg
cmp
pop
lcall
or
pushf
inc
aad
and
sbb
jle
xchg
push
dec
movsb
fildll
or
push
das
negl
ret
aas
mov
ja
xchg
imul
out
add
xchg
ret
in
xchg
jp
inc
jne
lcall
aam
push
dec
stos
jl
push
add
out
cmp
cmp
pop
outsb
mov
add
push
gs
or
sahf
enter
insl
call
loopne
push
sarb
xor
sbb
mov
lock
out
movsb
and
mov
add
xor
xchg
dec
ljmp
push
pop
push
mov
rsm
add
jo
jmp
loope
aad
jl
ljmp
inc
and
ja
push
pop
jnp
mov
sbb
jae
jle
push
sbb
ja
dec
ljmp
outsb
add
clc
jo
jge
repnz
int3
or
repnz
imul
or
push
loope
int
fcoms
mov
and
xor
pop
stos
bswap
aam
pop
mov
loope
jne
jmp
xchg
insl
jbe
dec
lea
rorl
cli
mov
adc
pop
xor
int
pushf
outsl
outsl
xchg
stc
push
or
add
xlat
jecxz
enter
out
cmp
in
mov
cld
or
mov
test
push
cs
out
sahf
pop
mov
lahf
in
movsl
notl
add
pop
fwait
cwtl
js
inc
outsl
cwtl
jle
mov
andb
lahf
adc
popa
test
pop
sub
xchg
inc
cmp
mov
mov
icebp
and
ss
enter
jg
aam
sub
sub
in
push
testl
push
xor
xor
dec
mov
insb
fdivrs
pop
xor
fists
lret
mov
jle
mov
das
adc
lock
cltd
testb
lods
jge
stc
es
cli
push
je
cmc
xor
ljmp
xchg
test
sahf
fstpl
jl
cmc
xchg
notb
dec
pop
ja
mov
mov
js
sub
sub
mov
mov
pop
xchg
xor
test
mov
add
add
fisubrl
rcrl
mov
out
adc
inc
lock
inc
in
jecxz
loop
inc
pop
dec
or
adc
aas
or
inc
cmp
test
xchg
mov
jp
sub
sbb
xor
in
dec
shrl
mov
push
cmp
push
jb
stc
mov
cmp
fstps
out
imul
arpl
inc
push
loop
xor
in
sbb
jne
pop
mov
je
outsb
or
sbb
stos
leave
pop
mov
inc
es
or
clc
or
mov
loopne
fimull
fs
mov
lcall
xchg
xor
sbb
mov
mov
loopne
fistpll
fsubrl
dec
jne
iret
fst
and
dec
inc
sbb
xchg
sub
sbb
cmp
int3
xchg
push
gs
les
pusha
add
xchg
les
xor
jecxz
or
mov
add
mov
out
ror
mov
sub
and
icebp
or
jae
in
adc
mov
in
cmp
mov
adc
and
lahf
cmp
xor
addr16
push
mov
pop
jl
add
stc
pop
jp
inc
in
enter
imul
adc
repnz
cwtl
dec
cltd
pop
mov
jmp
loope
and
scas
insb
mov
and
fldcw
test
cli
lret
mov
outsl
shlb
enter
out
xor
xchg
imul
test
push
and
scas
cmp
paddusb
insl
scas
sbb
lahf
push
inc
sub
push
rcll
fnstsw
ret
sub
shl
xchg
aas
jne
sbb
leave
xor
xchg
in
dec
insl
jg
shll
out
shl
sti
test
fbld
push
inc
mov
cmp
imul
push
jecxz
inc
iret
or
arpl
popf
dec
loope
cmp
push
ljmp
rorl
pop
mov
push
ja
mov
mov
gs
pop
mov
pop
cli
mov
jae
lock
lock
and
pop
adc
pop
pop
lock
push
cmc
fidivl
aam
jmp
scas
mov
bound
leave
sub
inc
mov
and
mov
fstl
lods
mov
popf
cmp
incb
pop
aam
fwait
xor
sub
fstpt
push
std
lock
test
das
ficoms
sar
add
push
push
repz
pushf
iret
cmp
aad
cmpsl
pop
and
daa
xchg
sub
mov
hlt
or
cli
mov
sbb
insl
mov
leave
stos
orb
in
adc
cmp
leave
or
adc
cmpsl
sub
sbb
sub
cs
push
push
sarl
xchg
jno
xor
adc
xor
leave
cmp
test
mov
sbb
mov
repz
pop
gs
xchg
and
xchg
shr
mov
out
cld
adc
mov
nop
out
andb
dec
arpl
sbb
fiadds
mov
dec
jge
shl
sbb
push
inc
mov
stos
jno
in
fisubs
aam
int3
or
in
mov
cmp
pcmpeqd
vpandn
in
cs
pop
cmp
mov
mov
int3
sbb
and
testb
out
cmp
stmxcsr
insl
mov
ret
inc
xchg
cmp
jp
mov
mov
test
jg
pop
push
lcall
push
decl
jp
jmp
mov
out
push
gs
fsubp
inc
in
dec
ljmp
outsl
xor
push
cmp
outsb
mov
xor
neg
test
insb
cmp
les
icebp
inc
aam
xor
ret
pop
xor
ret
xchg
popf
mov
add
sbb
rcrl
xchg
aas
jg
pop
xor
inc
cmp
scas
mov
xchg
dec
lcall
jecxz
in
jae
push
mov
andl
sub
or
push
int
lahf
xor
rol
cmp
inc
and
scas
inc
int3
testl
or
mov
dec
inc
xor
push
jne
shr
orb
push
in
mov
xorl
jp
pop
fs
test
push
push
mov
sahf
and
lret
xor
or
add
test
push
jge
mov
std
mov
test
pop
cmp
cmp
cmc
mov
push
push
add
sbb
and
mov
adc
xlat
pop
not
mov
ja
pop
dec
fistpl
xchg
cmp
dec
out
xor
repz
fwait
fs
sbb
push
or
outsb
xor
loopne
xchg
dec
adc
mov
mov
xor
frstor
add
push
sub
cli
push
stos
mov
dec
inc
xchg
out
adc
int3
pop
xchg
mov
mov
xor
sub
or
out
daa
cmpsb
mov
movsl
icebp
scas
aad
adc
xor
xorl
adcl
adc
lods
xor
cmpsl
cmc
outsl
push
cmp
mov
repnz
sub
je
and
ds
push
add
mov
pop
imul
xor
and
inc
inc
mov
sbb
aad
testl
cmpsb
mov
mov
adc
mov
push
mov
aaa
and
push
inc
cmp
popf
ret
inc
xor
push
jmp
inc
mov
jg
push
pop
jmp
jmp
cmp
repnz
mulb
or
in
sbb
mov
out
in
xor
xchg
pushf
js
adc
leave
add
out
sub
pop
in
push
cmp
push
xlat
mov
loopne
test
cmpsb
jmp
cmp
push
mov
mov
call
aas
loope
loopne
out
cli
push
add
cmc
xor
dec
xor
adc
push
inc
fs
pop
imul
into
stc
lods
ds
les
sbb
add
sarb
push
andb
sbb
rolb
aas
dec
pop
add
pop
or
ljmp
xchg
jecxz
mov
test
sarl
pop
gs
add
dec
push
mov
mov
lea
cmp
cwtd
pop
xor
pop
test
jg
cmp
mov
and
push
sbb
into
mov
push
push
fiaddl
lods
mov
xchg
mov
jp
cmpsl
stos
jp
pop
cmp
pop
xor
jmp
pop
test
bound
jo
sbb
and
rorb
loope
push
cmp
hlt
jle
mov
push
rcrb
call
iret
insb
add
mov
mov
push
addr16
pop
or
sub
or
fsts
out
push
ret
pusha
add
iret
sub
jb
dec
fcmovnu
inc
sbb
add
xor
cmpsl
xor
jbe
sub
sbb
jns
fildll
loope
adc
xlat
imul
ljmp
lods
jmp
mov
enter
out
mov
jo
cmp
fs
je
pop
stos
mov
loope,pt
dec
and
sub
sbb
dec
loope
in
pop
cmp
repnz
or
push
jae
add
lret
test
push
ja
xor
subb
pusha
cld
cmc
xor
into
lea
scas
adc
imul
inc
mov
mov
or
fistps
sbb
add
rcl
ret
pop
ret
lods
or
add
or
dec
jmp
or
aas
xchg
in
sub
repnz
pusha
scas
xchg
stos
pop
pop
scas
jb
cmp
loope
out
das
add
or
push
inc
sahf
les
mov
icebp
mov
js
inc
mov
jmp
outsl
cmpsl
jb
and
wrmsr
aas
or
int3
daa
fwait
dec
pop
stc
jno
push
movsb
sbb
mov
add
ss
cld
outsl
aam
jb
leave
stos
fsts
popf
leave
clc
jle
mov
xchg
dec
inc
loop
mov
adc
pop
and
xchg
fwait
sub
mov
les
inc
shl
cmc
add
int3
aam
mov
inc
jne
and
sarb
aas
stos
jp
adc
orl
fcmovb
pushf
into
dec
das
pinsrw
cltd
fnstenv
mov
inc
pop
jmp
mov
int
rcrb
xchg
insl
int3
push
dec
sbb
and
fdivl
push
scas
in
fcomps
and
sub
cmpsl
mov
js
das
pop
ljmp
cld
pop
cmp
jns
jmp
imul
adc
arpl
inc
inc
imul
cmp
mov
loopne
mov
or
sub
jg
rcll
insb
mov
jge
mov
pop
pop
xor
cmp
pop
enter
outsb
lock
jb
add
icebp
addl
lea
je
mov
leave
push
hlt
xor
cmp
or
push
imul
rcrb
xchg
pop
daa
int
inc
enter
adc
xorl
or
push
adc
into
fs
mov
mov
loop
enter
imul
xchg
int
mov
jg
xchg
jmp
lock
cmp
mov
ljmp
inc
jle
andl
mov
leave
sub
fimull
test
in
lcall
cld
and
stos
out
add
dec
popa
lea
daa
jbe
cwtl
xchg
adc
xor
inc
xchg
mov
fsubl
jl
xchg
inc
jnp,pn
loopne
lods
adc
gs
insb
dec
lock
scas
or
out
or
cmp
scas
sub
cmp
xorl
dec
mov
rorb
xchg
push
jmp
dec
mov
loop
adc
add
cmpsl
movl
push
inc
jl
push
or
ds
fwait
jp
mov
push
push
push
mov
fmuls
fdivl
je
or
jg
ret
in
call
pop
int
out
repnz
cmpb
cmp
ja
clc
cmpl
in
adc
and
daa
out
ss
push
loopne
and
or
push
inc
popa
cld
inc
sub
das
mov
mov
cli
nop
sbb
sti
test
stos
rclb
push
dec
xchg
xchg
mov
xchg
mov
inc
push
test
test
adc
add
into
enter
sbb
or
scas
jns
inc
ja
push
pop
lcall
call
or
push
lahf
test
pop
dec
cmp
add
gs
lret
jp
pop
pop
pop
xchg
hlt
out
xor
insb
or
enter
sub
testb
lcall
inc
xor
mov
movsl
xor
es
jnp
fs
mov
pop
daa
shll
sarb
sub
cmp
fwait
mov
mov
jle
mov
mov
mov
cmp
mov
fadds
pop
nop
jb
std
xchg
shll
lds
pop
in
and
dec
and
lock
jmp
mov
sub
loope
pop
in
inc
mov
mov
faddl
movsl
mov
mov
rcl
xchg
loope
sar
mov
lcall
out
scas
xorl
pop
call
call
aaa
add
fidivl
mov
scas
pop
jmp
aad
sbb
aad
popf
add
notl
mov
add
fdiv
mov
cmp
sbb
stc
inc
mov
testb
dec
cmp
pop
mov
inc
mov
loopne
jl
xlat
rcl
popa
daa
mov
xor
sub
inc
cmp
xor
push
stc
dec
enter
push
lcall
sub
adcl
test
out
nop
pop
lahf
mov
dec
ja
mov
pop
jae
stos
xor
push
adc
es
stos
out
pushf
mov
mov
mov
lock
ss
jl
mov
mov
push
imull
pop
push
dec
ret
mov
push
push
aad
enter
stos
add
js
sub
mov
xchg
ja
jnp
daa
jge
aad
xor
sbb
inc
int3
mov
test
or
mov
testb
jno
aas
dec
jae
and
mov
mov
mov
gs
stc
lahf
cltd
fstl
fwait
mov
lods
loope
cmp
sbb
mov
dec
dec
shl
push
fnstsw
pop
insl
pusha
or
lock
int
pop
in
mov
or
test
add
and
jecxz
shrl
insb
jecxz
lea
sub
xchg
idivb
dec
jmp
lods
push
jp
shlb
clc
pop
mov
rcr
sub
xor
je
fwait
hlt
popa
icebp
bound
lock
jg
cmp
push
push
push
cli
aam
fldenv
jge
cs
pmulhw
imul
cld
ljmp
jecxz
inc
adc
mov
les
push
lret
mov
popf
dec
sbb
jge
outsl
popf
mov
in
dec
cmp
fldcw
jo
cmp
das
mov
jnp
mov
test
cmp
in
cmp
iret
movsb
and
leave
ja
pop
mov
and
sub
sub
mov
push
out
add
mov
mov
imul
cmp
mov
xchg
push
inc
adc
adc
pop
outsl
movsl
pop
add
fstpl
fildll
pop
mov
fisubrl
test
lods
mov
out
stos
sub
lea
sti
jl
ds
ret
outsl
push
sbb
pop
ljmp
xchg
insl
xor
fiaddl
bound
fndisi(8087
inc
pop
pop
mov
or
lahf
adc
sbb
jno
jb
pop
or
shll
mov
pop
mov
jge
or
and
lods
push
add
pop
jle
mov
push
dec
mov
loopne
pop
jno
mov
fnsave
inc
xchg
sbb
push
imul
inc
cmpsl
test
inc
lcall
pop
loopne
push
rol
inc
pop
and
bound
jecxz
lahf
sub
shll
in
xor
xchg
mov
shll
xchg
sub
lret
call
inc
orb
pusha
and
daa
dec
data16
xchg
mov
xor
ss
imul
dec
cli
aam
popf
cld
mov
jmp
mov
mov
cmp
sbb
rorl
jg
insl
and
inc
hlt
xor
mov
mov
cmpsb
or
mov
xchg
xor
cmp
xlat
adc
clc
mov
sarl
clc
jg
pop
into
es
paddusw
daa
mov
cs
int3
jle
icebp
test
das
pop
xchg
mov
or
es
into
mov
cmp
push
mov
add
push
mov
cwtl
mov
pop
sahf
mov
lahf
adc
dec
cmpsl
ja
leave
data16
sub
mov
int
inc
and
outsl
jp
lock
jno
mov
sar
mov
cmc
inc
decl
fsubp
mov
inc
mov
fwait
lds
lret
cmp
and
fidivrs
jne
lcall
mov
or
mov
lods
xchg
mov
in
mov
fbld
sub
pop
push
adc
push
xchg
dec
xchg
sub
ja
cmp
addr16
xchg
push
outsl
mov
scas
lea
in
mov
jbe
pop
xor
out
cltd
xchg
aad
sbb
sti
push
add
cs
shrl
into
cmp
or
xor
xor
and
dec
adcl
jns
sbb
stc
mov
out
repz
ja
insl
mov
in
push
loopne
repnz
sub
adc
mov
push
mov
xor
mov
push
xor
jp
push
jae
jns
loope
add
or
ds
pop
mov
jno
jbe
cmpsl
push
icebp
inc
sub
cmpsb
pop
push
jl
inc
call
pusha
mov
mov
rol
push
xchg
rorl
cli
cli
aad
mov
test
sahf
pop
inc
flds
data16
sub
imul
iret
gs
dec
push
mov
xchg
xchg
nopl
pop
jl
xchg
xlat
fnstsw
xchg
rorl
daa
dec
push
push
jg
wbinvd
loop
or
jo
icebp
xchg
into
sbb
adc
adc
xor
push
inc
mov
cmp
outsb
fwait
mov
cmp
dec
sbb
mov
jecxz
dec
xlat
xchg
pop
cmc
adc
push
sub
or
and
cmp
stc
and
in
cwtl
out
add
arpl
aam
leave
bound
cltd
adc
loopne
rclb
pop
push
scas
movsl
out
shrl
mov
sub
sbb
mov
dec
mov
cmp
js
add
mov
mov
test
push
sbb
mov
mov
adc
sarl
jne
mov
pop
insb
push
mov
es
pop
in
sti
jg
je
in
rcl
push
stos
sbb
pop
and
fisttpl
mov
or
inc
cmp
test
mov
out
ret
mov
mov
pushf
cwtl
xchg
mov
dec
addr16
inc
jb
test
jo
push
cmovg
in
cs
ret
lds
mov
divl
sbb
dec
inc
mov
xlat
rorb
in
mov
or
jns
stos
divl
push
movsl
mov
data16
out
xchg
or
xchg
pop
les
aam
xor
test
out
inc
jl
jno
bound
leave
scas
cwtl
push
mov
sbb
mov
push
mov
push
roll
or
idivl
cmpsb
fs
es
mov
push
cld
mov
jae
ror
das
xor
adcb
fcomps
mov
fs
clc
xchg
and
call
mov
mov
xchg
ret
stc
sbb
pop
ljmp
addr16
push
mov
test
cmp
add
cmp
lods
lret
ret
fprem1
data16
test
cmp
pop
pusha
sbb
bound
and
insb
loope
jne
inc
xchg
adc
sbb
xchg
aaa
popf
sbb
into
push
add
movsb
push
push
enter
push
and
pop
xor
dec
push
aam
jbe
sub
add
jmp
push
daa
or
xchg
push
xchg
subl
test
in
lcall
mov
les
sbb
mov
into
jle
jl
xor
bound
inc
filds
pusha
mov
adc
gs
xchg
insb
in
adc
sarl
pusha
jnp
call
mov
mov
in
mov
push
ret
test
fidivrl
add
jae
test
std
sub
or
jle
cmp
mov
push
cmp
xchg
je
mov
or
push
lea
ret
xchg
fists
xchg
mov
sub
ficomps
ss
enter
pop
sub
ret
xor
adc
int3
imul
sbb
fsubrl
dec
adc
fs
in
es
xchg
movsl
sbb
movsb
aas
lods
sub
mov
push
jno
dec
in
push
jecxz
or
fldt
shrb
xchg
push
in
inc
push
outsb
adc
daa
sub
pop
je
xor
sub
or
xlat
add
push
lret
inc
lret
lods
shl
pop
jp
inc
cmp
pop
rep
int3
pop
int3
mov
stos
jne
and
es
dec
fdivp
push
or
lahf
mov
not
add
sbb
lcall
arpl
int
dec
xlat
cmp
inc
jmp
in
mov
fildll
ss
add
jmp
inc
hlt
out
add
mov
xorb
cmp
adc
mov
cltd
idiv
stos
icebp
ret
mov
xor
cmpsl
int3
xchg
or
fmulp
xor
faddl
das
xchg
mov
fs
imul
xchg
out
pop
loope
bound
xor
lds
fstl
js
cmp
fld
xchg
xchg
dec
adc
shlb
nop
ja
push
dec
sbb
mov
cs
cmp
add
in
cld
popf
jle,pn
pop
push
cwtl
call
cmc
xchg
add
sti
lahf
jg
cmp
fidivs
aam
push
ljmp
hlt
cltd
mov
ja
sbb
jb
push
js
shlb
arpl
ljmp
popf
pop
ljmp
xor
and
pop
mov
test
cmp
fs
cmp
fnstsw
and
mov
mov
lock
add
xor
dec
adc
ret
idivb
sarb
outsl
ja
out
jbe
push
not
cmpsl
pop
stc
pop
arpl
add
mov
lods
inc
fisttps
gs
ror
addr16
daa
and
inc
mov
bnd
cltd
jmp
sbb
scas
xchg
scas
cli
movsl
mov
or
cmp
mov
shll
or
xorl
push
lcall
das
cmc
jnp
xor
push
mov
push
mov
push
fisubrl
push
cwtl
or
push
data16
movsb
pop
jmp
xor
pop
jmp
xchg
test
xor
cmp
loopne
inc
mov
xchg
jmp
xor
inc
std
jne
mov
sbb
repz
loopne
addl
inc
jne
xchg
mov
and
cltd
sbb
repz
mov
movsb
mov
gs
xchg
in
inc
cmp
inc
testl
arpl
or
mov
mov
inc
mov
addb
xchg
and
aam
jbe
mov
adcl
mov
mov
xor
sbb
insb
push
ret
jnp
ss
movsb
arpl
fstl
push
mov
dec
jae
pusha
xchg
je
jg
mov
int3
or
mov
shll
test
loope
mov
fistpll
push
das
jge
pop
mov
pop
xor
lock
pop
ret
cmp
cmp
jnp
mov
jecxz
pop
jp
andb
stos
mov
cltd
pop
xchg
cmp
les
lahf
stos
lds
push
push
lds
fistpll
jne
sti
popa
insl
dec
fidivrl
add
cmpl
and
add
movsl
fwait
mov
gs
push
sbb
jge
xor
or
mov
pop
movsb
les
sbb
cmp
sarl
jbe
clc
push
lods
xorb
jl
lcall
sub
pop
adc
into
xchg
and
lahf
push
mov
out
int3
jge
or
inc
fs
and
cmpb
xchg
aaa
insl
clc
shlb
lret
cmp
or
sbb
xor
in
cmp
andl
loopne
jnp
cmp
fildl
popf
cs
stos
adc
hlt
inc
push
sub
popl
out
or
fdivrs
dec
dec
daa
gs
jp
jmp
sub
mov
test
cwtl
popf
jl
inc
fcos
mov
jns
and
cltd
lcall
aad
or
out
addb
into
xchg
mov
aam
inc
leave
hlt
or
arpl
jbe
cltd
cmpsl
mov
and
ret
jge
mov
pop
push
sbb
fwait
push
cltd
sbb
aas
pop
xor
jge
sbb
and
scas
scas
mov
xchg
inc
arpl
jecxz,pn
inc
pop
xchg
jo
and
nop
repz
outsl
cmp
shld
pop
invd
rorl
add
mov
cld
aas
incb
arpl
push
mov
xchg
xchg
xor
aad
mov
lds
mov
cmpsl
dec
cltd
outsb
sbb
jne
enter
shrl
sbb
aad
iret
test
enter
adc
inc
jp
jle
push
fnstcw
mul
movhlps
xor
lods
dec
cmp
push
imulb
test
adc
movsl
mov
divb
repnz
or
andl
jns
aas
xchg
cs
jmp
jl
movsb
xor
jl
sub
imul
sti
xorl
or
rcll
imulb
push
enter
out
pop
hlt
shlb
out
ret
loope
inc
push
inc
enter
inc
dec
sbb
inc
lods
outsl
imul
sub
pop
sub
movsb
orl
cmc
and
dec
jb
aaa
pop
aaa
popa
adc
push
aam
inc
arpl
movsl
add
icebp
push
inc
jne
add
inc
and
jg
shrb
mov
push
ljmp
cmp
ljmp
int
sbb
mov
xlat
dec
and
fadd
in
add
pushf
popf
xor
clc
pop
mov
adc
sbb
inc
data16
pop
mov
inc
push
xorl
ss
cmpsb
inc
dec
rolb
out
ret
or
jecxz
xchg
je
ss
loope
cli
or
add
cli
jecxz
jnp
jne
sub
int3
sar
pushf
lea
push
add
xchg
sar
push
pop
xor
adc
pusha
dec
sub
ljmp
pop
sbb
jae
jbe
test
push
and
aaa
push
std
push
jecxz
test
xchg
sub
addl
sbb
dec
cmp
mov
mov
pop
scas
mov
xor
aam
inc
imul
ret
xchg
int3
test
mov
stos
pop
add
push
clc
dec
lock
mov
shrb
mov
das
xor
cwtl
sub
int3
icebp
insl
push
xchg
cmpsl
jno
movsb
dec
mov
push
push
arpl
aaa
cs
xor
sub
jae
popa
add
leave
mov
rcrl
push
mov
fidivs
fnsave
mov
cmpsb
sub
lods
aaa
mov
sub
cmp
xor
dec
or
andb
mov
sub
scas
hlt
cltd
pop
cmc
jo
sbb
nop
stc
invd
push
das
or
jl
lcall
lret
ljmp
dec
and
mov
pop
out
sti
cmpsb
addr16
insl
mov
or
xchg
test
cs
mov
mov
xor
pop
jl
inc
enter
daa
add
mov
mov
xor
repz
push
leave
mov
es
pushf
mov
lds
cmp
out
popa
inc
in
insl
and
dec
sbb
xor
ljmp
mov
pop
dec
js
loope
cmp
sub
ljmp
lds
mov
and
mov
daa
xchg
test
xchg
lahf
mov
lret
lret
icebp
inc
stos
adc
jle
push
xor
insl
mov
cmp
dec
sub
loopne
in
imul
inc
test
jecxz
aad
out
pop
add
sbb
xchg
push
dec
and
pop
mov
jecxz
cmp
dec
iret
imul
and
fstps
mov
stc
dec
mov
fidivrl
movsl
jecxz
stos
jb
popf
in
jb
movsb
and
lods
test
lahf
and
xchg
cmp
jp
ror
xor
cmp
in
es
cmpsb
outsb
movsl
cli
cmc
add
add
xchg
mov
loope
mov
test
in
repz
push
sub
cmp
xchg
push
rcrl
sbb
mov
popf
xchg
mov
addr16
orl
ret
fidivrs
jae
mov
imull
into
cmp
inc
cli
pushf
jne
lret
insb
lds
or
cmp
mov
add
xchg
fsubrp
bound
fdivrs
stos
xor
adc
mov
lock
mov
push
out
clc
inc
xor
fsin
mov
push
fisubrs
gs
fucomip
movsl
std
popa
add
push
sbb
cli
jae
jmp
ss
and
sub
movsb
mov
pop
les
sub
data16
in
push
movsb
add
xchg
sbb
adc
test
jnp
repnz
sbb
push
outsl
and
subl
dec
push
jnp
cmpsl
adc
jle
cmp
jns
aaa
jbe
push
aad
pop
cmp
arpl
inc
add
push
adc
fdivp
ret
mov
inc
push
aaa
ret
bound
pop
and
xchg
mov
push
jae
inc
xlat
sbb
sarl
push
cs
test
fdiv
pop
xchg
cmpsb
sub
jmp
daa
syscall
pop
fcmove
into
insl
cmpsl
lret
mov
xor
in
add
jmp
clc
in
cmp
adc
xchg
iret
inc
or
ret
and
cmp
jmp
cwtl
inc
outsb
dec
fsubrl
mov
jge
xor
sbb
pop
rcl
out
mov
mov
es
test
cli
test
lds
mov
jno
imul
push
addb
call
jns
xlat
scas
imul
loope
leave
xchg
mov
jle
push
sbb
aad
cmp
shlb
push
fnsave
mov
inc
addr16
mov
dec
pop
fadd
fildll
mov
ja
daa
in
push
cli
and
cmp
cmp
outsl
repz
sahf
mov
fdivr
call
dec
pop
xchg
mov
shlb
cmp
mov
push
je
cmc
cmp
adc
adc
inc
nop
data16
lret
push
cld
push
sub
fs
xor
lahf
mov
fwait
dec
loope
fwait
pop
adc
ljmp
ret
fdivl
push
mov
and
fcompl
sbb
in
push
sbb
shll
sahf
cltd
popa
lcall
lret
cwtl
sub
ss
popf
mov
xor
mov
add
jnp
inc
jg
lret
or
sarb
sbb
arpl
and
enter
clc
stc
sahf
addr16
movsb
testl
dec
and
sbb
add
ret
adc
insl
lcall
or
inc
or
and
scas
push
inc
jne
fs
sbb
mov
or
outsl
outsl
lahf
sub
pop
aad
mov
add
les
mov
jp
jns
add
leave
xor
dec
shrb
leave
lcall
sub
pop
ficoms
loopne
in
sub
sbb
xor
adc
pop
push
sub
movsb
test
out
or
loope
divb
mov
xchg
fs
jle
xorb
scas
mov
mov
lods
sbb
adc
in
push
ja
inc
fsubrl
lret
scas
pop
cwtl
pusha
mov
out
imul
ljmp
gs
mov
jbe
or
mov
and
in
shll
mov
dec
dec
cmp
cmc
xor
adc
xor
dec
insb
fistpl
fnstcw
cli
mov
cmpsl
jae
sbb
popa
jge
cmp
mov
mov
xchg
insl
scas
mov
xchg
mov
jno
sti
mov
dec
dec
inc
movsb
push
mov
insb
jecxz
xor
dec
jecxz
jg
inc
invd
add
in
or
movsl
fs
outsl
or
or
sub
faddp
jo
lds
pop
pop
stc
xor
mov
add
ficompl
lret
push
pop
sti
adc
mulb
jo
ja
inc
out
loopne
xor
sub
adc
ljmp
dec
sbb
sarb
or
sub
in
sbb
fs
ret
sub
xchg
mov
sub
pop
lods
xchg
fstpt
push
mov
lock
xchg
je
in
inc
xchg
dec
lods
jmp
outsb
push
xchg
cmpsb
outsb
test
rol
or
xchg
cmp
loopne
out
push
or
cmp
xchg
ret
dec
sub
jmp
enter
ds
pop
mov
or
add
daa
lods
mov
push
nop
mov
and
pop
enter
pop
call
dec
jb
dec
jl
cmp
clc
cmpsl
adc
add
jge
pop
data16
add
pop
xor
pop
fldcw
and
cmc
sbb
fcoml
jb
in
or
std
sarl
or
pusha
and
int3
stos
sub
lcall
sub
out
int
adc
iretw
xor
xlat
xchg
push
inc
and
mov
sahf
pop
aas
jae
add
cld
pop
cli
adc
adc
or
divb
lods
fisubl
mov
mov
mov
repnz
mov
push
push
loopne
pop
shlb
insl
xchg
xchg
popf
adc
loope
and
inc
outsb
in
or
aad
xor
push
lcall
sub
and
ds
cmpsb
cmc
sub
inc
lds
mov
mov
sarb
loope
sti
outsl
push
jo
shrb
ja
jnp
xchg
xchg
stc
cli
out
sub
fs
sbb
in
xchg
in
out
lock
inc
sahf
mov
dec
inc
incl
imul
orl
xchg
mov
inc
movsl
dec
cs
dec
xchg
out
add
cmpsl
cli
push
jge
mov
mov
push
out
push
nop
jo
les
push
loop
xor
in
push
jmp
out
ds
sbb
add
jb
mov
lods
roll
xchg
stos
xchg
fs
pusha
les
jae
adc
mov
dec
or
arpl
mov
mov
mov
test
dec
adc
pop
outsl
adc
adc
xor
jne
int
loop
scas
adc
push
pop
mov
push
pop
add
cmp
push
andl
aas
stos
clc
sbb
mov
xor
movsb
stos
fst
lock
push
les
shll
stc
fidivrs
push
enter
stc
imul
mov
insb
sub
push
mov
pop
sub
lcall
movsl
mov
push
xor
inc
inc
outsb
sbb
mov
movsl
mov
sub
xchg
test
pop
adc
lahf
call
mov
lock
dec
mov
mov
push
cmovns
mov
pushf
pop
mov
cmpsl
mov
test
mov
fists
pusha
cltd
call
sti
pop
imul
and
inc
mov
test
icebp
fisttpll
std
stc
xchg
aaa
sti
xchg
bound
leave
loope
cwtl
sbb
ds
outsl
mov
fistps
pop
xchg
adc
xor
shl
xchg
xor
xchg
test
cmp
daa
inc
mov
adc
mov
rorl
shrl
cmpsl
inc
mov
test
in
stos
fcoms
pop
pop
ret
and
hlt
adc
gs
test
ret
jnp
fwait
push
shll
pop
push
jb
cmp
pushaw
jmp
sub
jne
lret
cmp
sbb
int
pop
adc
inc
xor
and
out
sbb
out
icebp
cs
mov
and
dec
mov
aad
pop
jne
das
sbb
pop
aaa
aaa
mov
pop
add
ja
addr16
cld
mov
loop
jle
inc
adc
push
xchg
loope
push
adc
sub
pop
xchg
mov
cld
mov
iret
int
add
scas
or
xor
je
push
lods
test
sarl
xchg
fisubrs
mov
mov
call
mov
insb
adc
rcrb
loopne
add
gs
cmpb
popa
xor
add
adc
jp
imul
sbb
pop
mov
ja
addr16
rcr
dec
outsl
and
sbb
mov
cmpsl
lock
xor
scas
cmc
sub
mov
xchg
sbb
push
iret
aam
jg
int
push
or
out
adc
pop
sti
inc
xchg
insl
shl
and
push
cli
push
imul
sbbb
adc
dec
jp
pop
push
loop
shlb
shll
les
jns
cmc
mov
and
push
jae
add
fstl
inc
mov
mov
mov
lahf
xlat
addr16
push
pop
fistl
stos
mov
movsbl
popf
loop
or
add
sub
pop
pusha
and
pop
inc
icebp
cmp
pop
cmpb
xor
or
insl
push
xor
push
push
in
int3
and
addb
in
fnstenv
or
pop
sbb
mov
pop
insb
fstpt
movsl
mov
cmp
fs
mov
subb
aas
enter
xchg
mov
leave
sub
push
sbbl
dec
stos
pop
or
pop
sub
mov
adcb
adc
int
outsl
fnsave
out
pop
mov
sahf
adc
popf
out
cmp
loop
and
ret
mov
push
lret
add
dec
mov
fsubs
sbb
jmp
adc
xchg
sbb
clc
andl
push
jo
xchg
jp
jge
sti
and
bound
sbb
clc
sti
cmpsb
push
test
xchg
stos
or
mov
movsl
jo
mov
add
inc
lahf
aas
outsb
xchg
sahf
aaa
jmp
jo
adc
dec
jmp
icebp
leave
outsl
adc
std
sub
and
outsb
sub
mov
inc
push
scas
add
or
jbe
adc
dec
xchg
outsl
lods
push
xchg
icebp
push
out
xor
cs
pop
loopne
mov
adc
push
mov
daa
js
xor
repz
lcall
daa
out
stos
xlat
xchg
es
fldl
stc
or
clc
fldl
addb
or
dec
shlb
sub
lods
ret
push
subb
lea
mov
fstl
dec
stos
add
int
repz
gs
outsl
insl
xchg
jp,pt
push
subb
add
inc
inc
jns
scas
or
fidivs
sbb
sti
shll
daa
jae
lret
faddl
cwtl
insl
enter
repz
mov
aad
xor
in
sti
xchg
mov
fldt
mov
adc
ret
call
je
insl
fiaddl
pop
pop
sbb
lret
fwait
sbb
hlt
lret
into
push
inc
fsts
cwtl
dec
inc
push
xor
js
pop
fwait
out
mov
adc
out
jne
ja
sub
fcoms
adc
pop
mov
jae
stos
hlt
sub
sbb
call
ljmp
ret
movsl
cmc
and
jg
test
mov
out
imul
dec
or
mov
int3
pop
cmp
pop
cwtl
dec
add
fdivrl
dec
lcall
sbb
daa
rcr
std
imul
loopne
push
test
cmpsl
fs
aam
jo
or
popa
shl
mov
xor
inc
movsb
loope
ds
outsb
cmpsb
inc
std
orb
mov
cmp
sahf
jne
aad
push
iret
pop
test
pop
into
insl
sbb
aaa
adc
pop
push
inc
les
adc
jp
or
lock
rclb
xchg
and
push
sbb
ljmp
push
leave
sbbb
js
xor
dec
cltd
or
cmp
test
mov
mov
popf
cmp
imul
jnp
leave
or
inc
inc
pop
add
and
lahf
repnz
in
sub
shll
jmp
cmp
cmp
sub
mov
addr16
cmp
inc
int3
inc
cmpsb
shlb
popf
xlat
popa
leave
insl
adc
sahf
xchg
dec
loop
int3
cltd
dec
popa
mov
inc
out
out
sub
cmp
and
daa
adc
jae
inc
sbb
gs
fcmovnu
dec
jmp
stos
xchg
test
mov
testb
faddl
int3
pop
in
test
mov
xor
xor
add
pop
lret
xlat
cwtl
test
jg
add
ja
pop
dec
in
into
fnstcw
cltd
mov
adc
rclb
jl
out
mov
pop
stos
push
dec
adc
sahf
fcoms
and
ds
pop
sti
mull
mov
cwtl
mov
sub
int3
sbb
jecxz
out
je
mull
stc
sub
pusha
into
sbb
lret
int3
xchg
xchg
jnp
and
xchg
and
jo
mov
bound
lret
cmpsl
inc
loope
inc
cmp
mov
out
xchg
sub
sti
sbb
cmpsl
push
test
mov
idiv
imul
int
pop
jb
dec
cmp
in
pushf
mov
and
smsw
enter
shll
mov
sti
aad
aas
xchg
pop
sub
fadd
or
movsl
arpl
cmp
loop
popf
cmpsb
imul
popa
push
pusha
stc
fs
adc
sbb
pop
lea
sub
outsl
mov
scas
sub
aad
xchg
std
scas
mov
test
ss
das
sbb
sbb
push
jnp
sub
in
push
cmc
mov
push
dec
mov
into
mov
cmp
bound
outsl
shr
and
sbb
mov
push
sbb
ffree
divb
push
out
js
cmc
jmp
mov
mov
mov
dec
cmp
out
push
inc
pusha
push
mov
jmp
data16
xchg
dec
jp
adcl
out
add
stc
sbb
orb
add
xchg
les
mov
pop
dec
stos
mov
sub
sbb
pop
dec
xor
inc
adc
pop
std
sbbb
lahf
mov
mov
clc
lret
jb
dec
xor
lods
mov
enter
imulb
stos
sarb
call
or
mov
stos
gs
dec
idiv
scas
and
xchg
mov
mov
hlt
xor
xchg
bound
icebp
test
aad
outsl
push
stos
out
fs
loope
rcll
subb
xor
jnp
cmpsb
int
shll
or
or
scas
push
es
inc
daa
ror
mov
mov
xchg
popf
xor
xchg
mov
ret
push
dec
gs
mov
add
pop
xchg
ret
movsl
js
mov
push
movsb
ss
push
mov
or
nop
cmp
sahf
jg
lea
scas
adc
inc
dec
fnstcw
mov
repnz
jecxz
mov
adc
bnd
imul
loope
sbb
cmpsl
cwtl
push
scas
testl
and
sub
imul
mov
mov
int3
pop
xor
xor
cli
cmpsb
sub
insb
dec
pusha
push
jb
add
into
add
dec
jg
xchg
loopne
ja
shrl
cwtl
jp
pushl
mov
sub
push
mov
mov
fwait
jnp
ds
mov
in
aaa
cmp
test
faddp
cli
add
ret
add
push
jns
cwtl
xor
std
push
scas
fisubs
jbe
sbb
sti
ret
cli
jns
sarl
lock
icebp
js
cmc
cmp
cmp
jp
xor
inc
mov
stos
dec
push
or
idivl
sarl
xchg
loopne
mov
test
inc
xor
sub
fdivs
or
pop
mov
cltd
das
add
mov
add
mov
into
or
fdivrl
jae
les
daa
lret
xchg
fisubl
insb
pushf
jg
and
dec
sti
and
dec
inc
int
lea
and
jle
jno
nop
mov
stos
adc
sbbb
addb
ret
push
jge
popa
sub
mov
jp
add
push
inc
ret
add
sbb
loop
mov
and
dec
aam
lods
aam
cmpsb
dec
add
stos
xchg
out
movsb
pushw
movsl
push
addr16
dec
aas
mov
jno
mov
sub
mul
call
movsl
pop
push
scas
ds
pop
push
sarl
ss
scas
mov
mov
dec
jmp
dec
pusha
xlat
outsb
mov
aaa
aaa
or
hlt
mov
mov
movsb
in
push
cmp
iret
int
inc
ret
iret
inc
test
add
add
xchg
cmpb
jns
mov
in
jnp
dec
push
or
xchg
mov
mov
mov
vphaddbq
push
out
addr16
mov
daa
mov
loop
mov
repnz
cmp
cmpsl
popa
mov
test
int
xor
in
loop
leave
aas
mov
rcll
pushf
ret
sahf
enter
and
cltd
and
outsl
leave
cwtl
pop
xchg
mov
dec
mov
pop
sti
fistpl
or
adc
or
mov
jnp
popa
jo
xchg
mov
push
into
xor
ljmp
repz
jmp
pop
std
and
sub
xor
jnp
pop
jg
dec
jl
aad
xchg
dec
icebp
xorb
mov
push
out
mov
incb
push
push
mov
mov
cwtl
dec
inc
ss
subl
cmp
cmp
xchg
scas
mov
into
push
cs
xchg
shl
and
popa
inc
pop
jmp
inc
in
cmp
fdivs
sarb
mov
push
cmpsb
sub
loope
loop
push
filds
movsb
push
and
mov
xchg
xor
xor
scas
lods
adc
xchg
out
mov
cs
adc
sbb
xor
or
xor
insl
rcrl
test
jecxz
and
inc
sti
jecxz
enter
dec
and
jo
mov
insl
mov
js
fisttps
fisubl
and
push
dec
data16
std
fwait
cmp
xchg
shll
mov
xchg
jg
jecxz
dec
lock
orb
mov
test
imul
cmp
cmc
xchg
adc
mov
xchg
loope
add
das
cmpsl
add
cmpsl
pop
cmpl
adc
dec
xorl
and
addl
mov
push
push
cmpl
jne
out
xor
cmpsb
push
mov
mov
push
std
sub
sub
jnp
scas
xchg
push
cwtl
loope
les
add
jae
inc
dec
lret
mov
dec
pshufw
aad
icebp
test
subl
cmp
int3
push
cmpsl
frstor
in
xor
sbb
adc
loop
or
in
out
mov
mov
clc
out
outsl
xor
push
pop
icebp
adc
mov
pop
cmp
loopne,pt
nop
inc
fidivs
mov
inc
rcll
sbb
dec
lret
mov
fcmovnu
jg
lods
fldt
and
aas
mov
jle
cmp
pop
bnd
arpl
adc
stos
aam
jns
int
clc
mov
in
mov
lret
mov
jg
je
das
lds
jo
imul
xor
or
or
aas
je
aaa
data16
fisubs
fisubrl
add
std
das
nop
out
cltd
xchg
std
loop
pusha
imul
loop
mov
lods
rcrb
es
add
rcrl
shlb
xor
jg
push
hlt
inc
dec
test
and
ljmp
add
jnp
cmpsl
mov
mov
jp
push
xchg
imul
lock
dec
mov
or
scas
pop
aam
mov
inc
xchg
push
fwait
and
call
je
cs
jl
jg
loopne
jbe
cmp
stos
add
xchg
mov
pop
inc
adc
pushf
pushf
cmpb
imul
xlat
mov
mov
sbb
fimull
mov
xlat
fwait
dec
in
dec
cmp
cmp
sti
and
xchg
push
iret
fs
fisubl
and
and
ja
mov
ja
xor
cmp
add
les
lahf
add
loopne
sub
pushf
loope
les
in
cmpsl
dec
ljmp
push
popa
sub
dec
jg
push
jle
mov
adcb
cmp
call
fmuls
jp
sbb
dec
outsl
jg
jae
push
fadd
jb
add
clc
fisubrs
mov
lods
and
in
jno
loope
frstor
cmp
xlat
mov
out
xchg
stos
aam
loope
mov
mov
and
stc
pusha
add
adc
aad
subb
test
add
enter
adc
inc
lahf
sub
sub
cmp
jcxz
leave
loopne
inc
xor
cmp
mov
sbb
outsb
pusha
sub
xchg
push
push
movl
dec
push
pop
mov
cmp
rcll
pop
arpl
add
cmp
or
add
push
cmp
jo
cmpsl
xor
push
mov
and
data16
push
and
dec
dec
pusha
sub
add
mov
adc
and
lret
adc
cmc
fwait
mov
jp
dec
mov
aas
xchg
cltd
in
call
js
test
jmp
testl
es
sbb
lcall
cmp
inc
dec
xlat
insl
sbb
aas
and
fs
dec
dec
cli
orl
jns
cmpsb
rcll
xor
cmp
mov
mov
sbb
mov
cmp
and
xor
gs
aad
or
mov
ds
notb
cmc
add
xor
pop
in
mov
and
jo
pop
xor
negb
js
out
push
lods
aaa
scas
jle
sbb
es
rol
aam
inc
add
jg
mov
rcr
outsl
aam
pop
lret
test
mov
popa
jbe
imulb
lock
out
out
inc
inc
cmovb
test
xchg
jo
rcl
xchg
inc
incl
xlat
movb
xlat
add
cmpl
or
dec
scas
push
int3
lods
adc
fildll
aad
mov
nop
pop
mov
adc
cmpsl
enter
ja
push
adc
mov
xlat
push
inc
hlt
mov
sahf
mov
imul
inc
add
stos
ljmp
ja,pn
push
in
dec
aam
sbb
or
decb
aaa
leave
int
icebp
fidivl
push
cltd
rclb
mov
cmp
mov
mov
sub
xlat
test
out
fisubl
inc
mov
daa
jmp
ja
ds
xchg
mov
cmp
aad
aam
or
pushf
lret
jnp
pop
and
repnz
adc
out
dec
and
sbb
divl
in
cmp
push
js
cmp
mov
or
sbb
sbb
sub
jae
push
ljmp
nop
pop
pop
xor
test
pop
mov
insb
fmull
mov
dec
and
jae
test
push
sbb
hlt
popf
enter
pusha
push
pop
jg
shl
pop
pushl
jnp
repnz
sub
in
cmpsb
jno
sub
add
lods
cmp
xchg
inc
subb
xlat
jl
lret
xchg
add
jbe
scas
mov
add
xchg
jecxz
jns
enter
cs
sbb
jnp
aas
xor
mov
adc
iret
lcall
scas
add
imul
push
cwtl
out
jmp
lahf
sub
and
test
addr16
insl
mov
test
jl
in
sbb
shll
ds
sub
jge
stos
sbb
dec
xor
xor
mov
sti
ret
lods
mov
aaa
mov
mov
lods
mov
push
addr16
pop
mov
cmp
icebp
fs
and
lcall
stos
xchg
das
shrb
in
dec
mov
clc
ss
mov
cli
mov
aam
int
shl
add
leave
lahf
jb
cmp
and
push
cmpsl
push
sub
aaa
cmp
xor
pop
enter
popa
jb
dec
ret
ljmp
adc
insb
shll
nop/reserved
fadd
lods
dec
loop
fmul
xor
aam
insb
push
repnz
aad
xchg
xor
mov
xor
push
mov
in
pop
jecxz
fstps
adc
stos
and
push
repnz
rcll
pop
or
pop
les
fistpl
adc
ja
ficomps
testb
movsb
mov
outsb
sbb
daa
push
pop
adc
pop
iret
mov
dec
adc
or
out
push
mov
inc
leave
inc
or
jge
mov
push
fdivrs
repz
jb
loop
xchg
push
les
std
andl
cmp
sub
xor
add
lret
out
mov
dec
inc
push
in
jmp
pop
aas
popf
mov
in
mov
movsl
dec
stos
inc
out
shlb
cmpsl
ret
xchg
pop
pop
movsl
outsl
push
mov
cli
dec
jo
and
leave
aas
fsubrs
gs
jbe
fistpl
dec
ret
sub
repz
int3
cmpsb
push
out
pop
xor
mov
and
lahf
add
cmp
add
jne
mov
xchg
sbb
or
pop
pop
or
pusha
push
push
pop
xlat
jb
pop
cmp
mov
aas
or
pop
jnp
fdivrs
mov
pop
loope
add
mov
iret
insb
stc
mov
addr16
sbb
outsl
in
mov
aas
jb
jl
add
jne
jl
fisttps
dec
cmp
es
add
out
inc
inc
icebp
scas
jnp
lods
push
les
movsb
sub
rcrb
add
loopne
repz
and
push
stc
pusha
repz
enter
into
test
push
add
in
scas
enter
mov
addb
mov
xchg
jmp
mov
mov
and
mov
ds
subb
mov
dec
and
cmpsl
mov
push
cmpl
jo
inc
dec
mov
js
arpl
adc
sbb
repnz
lea
mov
xor
dec
jge
clc
and
push
scas
lods
fwait
adc
sti
sbb
mov
mov
mov
stos
mov
mov
jmp
push
or
mov
pop
iret
mov
dec
sub
loop
add
push
pop
mov
inc
mov
adc
test
jns
lds
push
movsl
out
jg
rcll
fs
sti
adc
or
std
or
push
popa
lock
dec
addr16
mov
adc
enter
mov
fld
loopne
in
sbb
jns
or
arpl
xlat
movsl
and
in
inc
mov
or
mov
push
outsb
sbb
mov
out
inc
sbb
add
lods
addr16
mov
mov
xor
int3
test
aaa
push
sarl
leave
stos
test
stc
xchg
setbe
repz
mov
xchg
push
pop
call
cli
lods
push
mov
les
mov
leave
pushf
mov
lods
repz
push
mov
bound
pusha
fwait
pop
mov
xor
int3
into
xchg
ret
jge
les
mov
jg
xchg
icebp
out
lock
dec
scas
clc
hlt
or
fdivl
clc
sbb
push
mov
int
imul
push
lea
mov
dec
push
xchg
pop
loope
mov
xlat
orb
fnsave
sub
mov
and
sub
add
cwtl
in
add
enter
outsb
hlt
push
xchg
push
mov
push
outsl
dec
inc
and
xor
inc
stc
outsb
xchg
xor
test
pushf
xor
adc
fisttpll
jns
dec
sahf
jne
popf
inc
lods
or
stos
ja
arpl
pop
orb
dec
notl
sbb
test
cmp
lcall
push
adc
daa
cli
int
inc
sbb
xchg
dec
clc
mov
scas
sub
jg
xor
cmp
scas
aaa
inc
sbb
pop
or
pop
mov
lret
scas
inc
or
ret
daa
xchg
adc
push
push
jb
std
fsubl
popf
add
cli
pop
inc
shlb
mov
cmp
shll
aas
sbb
push
in
cmp
push
xchg
dec
and
mov
mov
ret
xchg
dec
jecxz
inc
cwtl
pop
aaa
and
lret
add
addr16
icebp
mov
mov
fiadds
pop
lcall
and
add
mov
push
jle
into
outsl
fs
adc
sbb
jmp
scas
lret
jne
loop
divl
sbb
sub
ret
and
lea
mov
cltd
cld
xchg
or
mov
push
adc
add
xchg
jnp
push
cmp
sbb
cmp
cmp
cmc
insl
sub
inc
add
sbb
mov
cli
jbe
movsl
dec
pop
mov
jecxz
mov
mov
or
mov
xchg
mov
sahf
daa
insl
inc
cltd
inc
xor
adc
and
dec
xchg
push
cmpsb
push
fwait
lods
lret
jns
mov
sarl
ss
xchg
xor
inc
adc
xchg
cmpsb
or
jnp
enter
mov
test
mov
jne
aam
js
or
add
shr
sahf
lods
gs
lret
insb
loop
inc
movsl
mov
mov
mov
test
pop
rcrb
fisttps
cmp
and
push
inc
jo
sbb
rclb
jb
pop
insl
and
inc
mov
xchg
pop
cmpb
xchg
pop
xchg
bound
mov
mov
pop
icebp
ret
stos
sub
mov
mov
mov
pop
or
or
fstpt
push
scas
mov
mov
pop
sub
inc
xchg
push
add
push
mov
or
je
test
mov
xchg
pop
sbb
or
lcall
cmp
sub
stos
enter
pusha
push
imul
push
pop
or
mov
add
ljmp
arpl
rorl
jecxz
lock
sbb
lret
shll
jb
or
jo
pop
dec
shrb
inc
dec
inc
xchg
dec
sbb
ret
mov
in
cltd
push
hlt
pop
pop
and
cmp
cmc
adc
xchg
sbb
sbb
jge
jl
cld
sbb
dec
adc
xchg
jle
mov
sahf
iret
hlt
xor
jo
mov
add
popa
ds
mov
xchg
fmull
dec
cmp
shlb
fnstsw
jmp
sbbb
data16
stos
inc
dec
js
jp
movsb
dec
cmc
xchg
xchg
cmp
enter
push
sub
cltd
rdmsr
add
loopne
inc
dec
loope
test
pop
mov
stos
mov
mov
adcb
in
mov
inc
push
adc
push
mov
sub
and
cmp
orb
mov
std
hlt
push
dec
mov
push
adc
out
sbb
jnp
lods
sub
pusha
test
or
jp
xchg
push
push
leave
fcoml
jns,pn
in
pusha
pop
adc
in
cmpsb
mov
add
cltd
mov
fsub
js
and
pop
sbb
movsb
test
xchg
mov
lds
ret
aas
fcmovnbe
out
dec
adc
lods
pop
mov
pop
cmp
mov
adc
dec
lds
sub
jg
imul
jge
out
and
dec
imul
ret
push
call
push
mov
shl
lock
into
sbb
outsb
or
xchg
or
inc
les
sbb
or
test
ret
cmpsb
dec
outsb
mov
movsl
fmulp
out
jae
xchg
int
movsb
add
pop
and
pop
jno
cmp
jl
jp
call
daa
ja
adc
mov
mov
scas
aas
mov
mov
rorl
test
lcall
sub
cli
xor
lret
testl
sub
adc
stc
cld
cli
pop
lret
ss
add
and
stos
inc
mov
inc
jbe
inc
dec
sbb
push
test
iret
sub
jl
mov
mov
sti
sub
push
das
xor
fdiv
jl
lds
lea
sti
dec
cmp
jbe
stos
jnp
mov
push
addr16
mov
jle
adc
in
xor
add
or
cmp
shlb
jp
je
adc
adc
lock
int
sbb
sub
into
scas
mov
add
les
test
pop
adc
jae
test
sbb
sub
ficoms
dec
es
call
scas
int
into
ror
sbb
adc
sbb
cltd
xchg
push
mov
add
dec
in
mov
sub
push
cmp
inc
icebp
cmp
clc
aad
in
mov
out
inc
sub
mov
shl
jecxz
xorl
inc
push
sbb
into
adc
dec
add
xchg
adc
mov
daa
fs
sbb
xchg
out
int
cmp
enter
mov
ror
pop
xchg
popa
push
daa
mov
test
adc
mull
gs
cmp
mov
out
ljmp
add
dec
sbb
xchg
je
xor
fdivp
xchg
push
add
or
cmp
pop
or
icebp
jle
repnz
fcoms
jecxz
nop
mov
cmpsl
pop
mov
xchg
andb
xchg
sbb
push
inc
jp
fcompl
sahf
lods
xchg
adc
ror
out
push
scas
jg
ret
test
loopne
int
cmc
add
cmp
jnp
xchg
outsl
inc
adc
out
rclb
shlb
mov
xchg
cmc
mov
bound
pop
pop
add
add
stos
xorb
popf
inc
stos
or
aam
aaa
cmpsb
mov
and
sarl
aad
or
andb
lods
mov
sbbb
loop
push
pushf
jo
jecxz
or
xchg
clc
cmp
mov
cli
mov
xchg
test
cli
lret
add
push
or
xchg
xchg
pop
fnstcw
shrl
mov
mov
jmp
push
xchg
mov
out
scas
in
lret
mov
push
das
inc
jo
inc
mov
sub
xor
add
jl
sarl
icebp
xor
movsl
out
lods
lahf
push
pop
repz
push
cwtl
fimull
testl
push
insl
popf
jmp
test
scas
mov
mov
sbb
shrb
jg
push
and
lret
lea
nop
sub
std
and
jp
mov
sbb
jae
pop
repnz
data16
fwait
and
mov
push
dec
cmpsb
testl
decb
pop
mov
or
xor
jl
jmp
xor
push
xor
or
test
mov
iret
jp
in
cmpsb
inc
sbb
hlt
aam
jmp
in
sub
jmp
mov
push
add
fmul
repz
cwtl
push
stos
add
dec
out
sub
cmp
and
adc
sbb
pop
mov
adc
lock
les
outsb
shl
adc
aaa
mov
fldt
loopne
jnp
push
mov
sbbl
pop
loopne
scas
mov
cs
inc
jecxz
ret
mov
dec
movsl
mov
cmc
cli
in
xchg
fcmovne
mov
pop
popa
xor
mov
lahf
into
lock
fisttpl
popa
push
add
mov
xchg
jno
push
dec
outsl
ss
cmp
xor
cmc
push
nop
push
call
addr16
sbb
adc
pushf
mov
cmp
lods
inc
iret
and
scas
jo
xor
mov
call
aas
sti
push
popl
cmp
movsb
popa
or
and
cmp
cld
and
dec
ja
test
or
pop
cmp
pop
fstps
and
out
shrl
sbb
movq
popf
cmpsl
mov
xchg
lret
sub
out
cmp
xor
in
push
pop
pop
mov
mov
mov
jge
and
test
and
add
xchg
notl
stc
dec
lahf
cmp
dec
lods
add
dec
fstl
adc
ret
mull
jl
push
ljmp
mov
cmp
in
fsubrl
adc
addr16
inc
les
sbb
xor
dec
mov
aam
mov
insl
in
inc
cmp
stc
sbb
xchg
shll
lea
push
add
sbb
inc
add
out
dec
clc
out
test
add
int
mov
push
and
fisubs
cli
lds
xor
inc
sbb
insl
jo
sbb
lods
lds
jmp
cli
jmp
inc
sub
or
adc
mov
roll
sbbl
mov
jmp
mov
rclb
shlb
je
lea
push
mov
cmp
insl
pop
mov
mov
out
sub
cmpsb
jle
sub
stos
sti
insl
lret
mov
xor
cli
bound
sbb
xor
sbb
adc
mov
lret
frstor
xchg
push
or
sub
xchg
adc
jns
dec
call
cwtl
sti
sbb
into
in
push
aad
movsb
cmp
insb
push
out
xor
or
imul
mov
mov
push
mov
sahf
mov
jnp
dec
cs
in
imul
jns
ret
in
call
cld
mov
xchg
pop
or
cs
dec
push
sub
jg
mov
lods
std
popa
or
pop
dec
sarl
hlt
orb
scas
lret
repz
popl
jmp
aad
jmp
fs
push
jbe
jecxz
adcb
rcll
cmc
fdivs
cs
clc
cmpsb
out
out
or
lret
bound
scas
mov
hlt
cmpsb
adc
push
mov
sbb
fucomip
pop
hlt
jne
scas
push
in
leave
popa
loope
mov
inc
xchg
aad
insb
cmp
inc
lds
outsb
dec
mov
add
cs
dec
cmpsb
push
mov
clc
mov
popa
dec
push
fstpl
lcall
fsubrs
jle
jle
add
xor
fldl
rcr
fldt
sub
cli
mov
sub
test
lods
mov
test
mov
iret
test
lret
lcall
push
jns
arpl
mov
add
mov
call
or
out
jge
fwait
repz
notl
dec
aas
add
push
push
icebp
testl
mov
mov
in
subl
cli
mov
mov
mull
add
push
mov
or
inc
sahf
ds
push
jno
add
ds
push
rcrb
jle
push
inc
std
int
mov
jnp
test
cmc
cld
pop
cmp
popa
mov
dec
lcall
dec
add
add
ret
mov
test
filds
pop
pop
dec
inc
repnz
xchg
inc
aaa
and
lret
xlat
mov
push
hlt
mov
cld
sub
adc
inc
imul
adc
adc
cld
repnz
jb
adc
lea
dec
pushf
pop
or
push
notl
add
push
push
xchg
pop
fiadds
mov
sub
jnp
subb
cmpb
sub
cmp
js
cmp
sub
test
rol
js
jg
sub
inc
dec
add
pushf
iret
lods
cld
pop
cltd
mov
add
cmp
xchg
cmp
jle
jmp
dec
adc
push
ret
sub
les
stc
and
andb
inc
jae
or
sub
ja
shlb
xlat
aaa
push
xchg
cmp
call
lahf
nop
fcmovbe
cmpsl
bound
pop
fisttps
popa
movsb
shl
xor
fneni(8087
loope
nop
xchg
pop
push
icebp
sub
pop
orb
fidivrl
lahf
jmp
xchg
js
hlt
negl
inc
aam
lret
lret
dec
xchg
in
out
mov
cmc
cmpsb
xor
movb
fcomi
mov
sbb
aaa
bound
loope
adc
sub
mov
ret
add
jg
icebp
std
sbb
sub
fwait
test
sbb
movsb
xor
pop
dec
lcall
sbb
push
inc
ret
inc
or
lds
fwait
jae
xchg
push
dec
sub
pop
sar
and
es
cmp
mov
cltd
and
fildll
lea
cmp
daa
mov
add
and
roll
out
cs
sarl
mov
addr16
testb
sbb
add
pop
test
iret
cmc
lds
aas
jno
mov
sahf
cs
hlt
cmc
aas
aaa
mov
shl
or
push
icebp
shll
or
mov
jg
mov
mov
ret
loop
jno
shll
movsl
clc
sub
sbb
add
push
xor
xor
sbb
addb
in
leave
push
shrl
mov
cs
push
sbb
ret
jb
lds
lahf
int3
or
nop
in
pop
mov
xor
add
lea
push
stos
lods
push
cmpsl
adc
mov
jbe
inc
stos
scas
cmpl
inc
popa
fildll
sbb
testl
cmp
sbb
pop
nop
xlat
stos
mov
shll
icebp
int
ds
outsb
pop
ret
push
pop
dec
inc
icebp
or
cltd
in
aaa
dec
rcrl
and
mov
lcall
ret
add
ss
xchg
xchg
mov
out
push
mov
fwait
dec
mov
dec
jp
scas
push
addr16
in
fisubrl
mov
subb
xchg
bswap
and
in
enter
gs
adcb
cmc
jmp
nop
ret
xchg
out
mov
clc
insl
add
push
cmc
mov
outsb
dec
das
ljmp
cli
scas
bnd
mov
out
xchg
pop
test
or
out
mov
int
adc
cmp
and
movsb
cmpsl
add
mov
sub
sbb
add
ret
cmpsl
inc
roll
cmp
xchg
incb
pusha
inc
sbb
add
testb
mov
xchg
shlb
into
aam
fwait
and
add
push
enter
pop
jbe
mov
int
dec
outsb
jno
or
ret
sbb
imul
lret
ljmp
loopne
mov
xchg
rorb
rolb
jecxz
sub
les
mov
aad
push
jo
es
mov
loop
push
cmpl
cmc
jmp
pusha
mov
aad
xchg
mov
cmp
fldt
hlt
xchg
incl
scas
cmp
bnd
cld
xchg
sbb
mov
je
mov
push
inc
fnstenv
rcrl
popa
mov
out
pushf
fbstp
jne
inc
pop
jnp
mov
inc
cmc
or
or
aaa
mov
mov
ss
stos
sbb
movsb
or
xor
cltd
icebp
inc
and
inc
and
scas
xchg
stos
mov
add
dec
lret
cmp
dec
sub
es
into
daa
loop
out
add
out
movsl
dec
xchg
mov
pop
mov
adc
sbb
std
stos
mov
in
lret
cltd
dec
data16
jp
jno
jo
pop
inc
call
dec
lcall
sahf
mov
sbb
int3
fmull
sbb
scas
push
cmpl
cltd
sub
in
leave
in
and
xor
mov
in
aam
cmpsb
into
cmp
and
clc
inc
xchg
inc
and
popf
outsb
sbb
ljmp
mov
rolb
and
or
mov
mov
mov
rcrl
movsl
out
mov
adc
outsl
xorb
mov
xor
xchg
mov
cmp
inc
enter
les
jl
xchg
sub
test
pop
fwait
push
sub
mov
sbb
fdivrp
into
or
call
xchg
xchg
pushf
les
in
sub
dec
fwait
in
mov
sahf
jbe
pop
xlat
mov
pop
cwtl
jbe
lods
inc
pop
pop
int3
mov
bound
jmp
cmp
cltd
call
xor
inc
mulb
cld
fwait
gs
lds
add
jp
icebp
jle
loopne
andl
aam
and
hlt
mov
call
jg
mov
sti
into
jnp
sub
xchg
fsubrp
ret
jae
insl
mov
rclb
lea
jb
je
mov
stos
inc
mov
fidivs
pop
idivb
jnp
add
cmp
xor
lret
outsl
int
fstpt
jo
popl
push
cmp
pusha
imulb
xchg
inc
inc
xor
dec
pop
pop
lods
or
mov
rorl
jns
roll
in
and
out
jmp
ja
ret
xor
adc
rorb
xchg
jbe
mov
cld
pushf
jmp
lea
push
dec
pop
out
dec
inc
in
fdivs
test
push
inc
xchg
xor
sbb
es
jno
mov
mov
loop
lods
repz
fstl
xor
xchg
mov
cmp
daa
aaa
lret
adc
into
out
xchg
adc
repnz
loope
cs
ja
dec
in
inc
popa
or
or
cmp
dec
push
fsts
inc
add
callw
push
xor
adc
or
push
xchg
rcrb
mov
push
xchg
nop
sbbl
adc
mov
and
in
inc
dec
dec
stos
enter
test
mov
fists
loopne
jmp
repnz
jecxz
or
mov
or
leave
xorl
mov
scas
lcall
aas
popf
dec
push
mov
adc
mov
ja
hlt
scas
add
mull
push
rclb
adc
mov
adc
out
or
pop
popf
dec
adc
pushf
sub
xlat
xchg
pop
mov
std
test
mov
xchg
aas
je
or
scas
push
or
cmp
rorb
push
mov
mov
shll
lret
mov
dec
mov
outsl
inc
pop
or
add
aaa
rorl
clc
adc
hlt
arpl
inc
testb
inc
cmp
adc
gs
dec
leave
or
jb
sbb
sbbb
loopne,pt
outsl
fs
inc
test
and
xchg
sbb
or
sub
xchg
mov
std
sub
out
mov
and
lret
lea
imul
test
out
xchg
mov
movq
cmc
insw
arpl
xchg
cmpl
jg
lret
int
outsl
xchg
loopne
cmp
shr
and
push
fxch
xacquire
out
push
mov
or
jnp
sti
hlt
pop
mov
int3
out
enter
push
xor
das
push
fbstp
test
stos
outsl
mov
movsl
sub
sub
sbb
and
push
movsl
adc
stos
add
jl
testl
out
add
lods
out
test
fldenv
add
fwait
inc
into
xchg
mov
push
jg
sti
jp
pop
or
fisttpl
xchg
mov
ss
jmp
fcmovu
lds
daa
int3
aad
dec
pop
xchg
or
dec
xor
push
out
movsb
jge
and
lret
fnsave
xchg
sbb
test
xchg
out
icebp
addr16
jo
pop
test
outsl
mov
das
pop
jg
std
pop
fsubrl
cmp
sarl
cmp
mov
push
or
push
mov
pop
sarb
shlb
or
fistps
mov
cld
es
ss
rolb
stc
stc
xor
sub
lds
cmp
fsts
mov
sbb
push
sahf
in
adc
mov
mov
es
jecxz
aas
shlb
xorb
mov
fdivrs
jle
dec
pop
in
repz
add
xor
sar
sbb
mov
cmp
jbe
and
sub
arpl
sub
movsl
and
ret
rorb
and
subb
mov
mov
out
into
mov
pop
jle
dec
xchg
add
popf
cli
sub
inc
std
xor
ljmp
aaa
or
iret
bnd
js
mov
pop
cmp
mov
xor
mov
xlat
mov
mov
ljmp
daa
xorl
or
xchg
dec
xor
scas
mov
inc
xlat
push
test
sbb
mov
call
cmpl
cmp
mov
paddsw
push
fldcw
clc
or
popa
clc
repz
xchg
mov
and
sub
inc
pop
movsb
insl
rcrb
jp
cwtl
daa
push
sbb
or
or
bnd
in
sbb
leave
or
cmp
jle
movsl
outsb
sub
and
in
sahf
fisttpl
pop
les
mov
xchg
jle
outsl
je
bound
sub
je
push
pop
jbe
pop
sbb
fsubp
out
mov
sbb
adc
sub
mov
sbb
filds
shll
sub
jae
data16
in
pop
out
xor
pop
repz
inc
stos
pop
inc
pop
dec
adc
xor
mov
inc
dec
inc
mov
mov
repnz
in
imul
enter
jo
testb
adc
ss
push
rclb
es
aad
scas
mov
pop
clc
popf
aaa
stos
inc
ljmp
xor
test
lods
test
lods
stos
hlt
rcll
shlb
sub
js
pushf
jecxz
leave
cmpl
add
mov
mov
ret
shrb
addr16
cmp
push
loope
or
inc
repz
sbb
adc
scas
and
loopne
xor
nop
test
mov
lds
fbstp
sti
das
aam
aas
lea
mov
dec
cmp
inc
push
ja
push
jge
fdivp
sub
mov
mov
lods
loopne
sub
mov
mov
and
in
mov
loopne
xchg
jmp
pushf
das
adc
lds
xchg
std
in
pusha
fs
dec
in
mov
push
jns
push
jb
out
fs
push
repnz
popa
or
in
dec
and
add
test
xchg
sbb
mov
mov
in
add
shll
jae
test
or
add
lahf
jle
jge
test
or
pop
jnp
outsl
cmp
dec
or
arpl
push
mov
inc
jle
mov
xor
pop
aad
rorb
scas
jne
inc
movsb
ljmp
xchg
and
sbb
sbb
xchg
popa
divl
mov
xor
jae
cmp
push
mov
shr
push
add
sbb
and
jbe
cld
lahf
sahf
js
mov
lahf
adc
cmp
in
mov
out
fstpl
mov
xor
push
cmp
jns
pop
pop
jns
test
notl
and
jmp
addr16
daa
lret
arpl
cmpsl
mov
dec
cmpsb
push
icebp
jg
int3
out
push
xchg
xchg
dec
imul
ljmp
jno
lea
mov
test
cwtl
jle
lea
adc
bound
rcr
mov
iret
ljmp
fldcw
inc
lahf
push
stos
psadbw
push
cld
sub
push
mov
add
mov
flds
fwait
rsqrtps
add
ds
adc
subl
cmpsb
sbb
mov
sahf
mov
and
push
cmpsb
aam
inc
stos
cmc
add
mov
scas
mov
sbb
leave
jo
stc
sarl
pop
push
fldcw
popf
daa
cmp
and
add
pusha
out
in
decl
dec
popf
push
lcall
movsl
xorl
inc
leave
gs
jno
jno
cltd
mov
shlb
push
mov
je
dec
mov
repz
dec
xchg
push
or
insl
jp
lret
repnz
jae
les
rolb
lcall
pop
jnp
cmc
jne
xchg
add
sub
negb
adc
jmp
mov
mov
xchg
bound
fidivrl
cmc
sub
fsubr
mov
push
cmp
push
popf
scas
loop
dec
fwait
pop
loopne
cwtl
or
cmp
mov
mov
into
cwtl
ret
and
or
jecxz
out
add
cmc
subl
mov
dec
fs
aad
notb
stc
mov
cltd
ljmp
inc
scas
cmp
or
mov
test
sbb
addr16
pop
hlt
or
std
ja
or
ljmp
sti
in
pop
jp
add
jmp
imul
leave
push
je
mov
or
idivb
push
mov
test
jmp
out
mov
and
mov
enter
add
pusha
mov
mov
inc
mov
ja
inc
divl
hlt
or
ss
pop
or
popa
and
mov
in
outsb
cli
adc
xchg
adc
inc
repz
in
popa
pop
fmul
pop
jecxz
pop
shrl
lahf
sub
adc
jecxz
sahf
imulb
dec
lods
inc
js
mov
pop
xchg
hlt
mov
jg
jle
xchg
add
scas
sbb
push
ds
dec
jo
add
jne
sub
add
sub
mov
jl
mov
rorb
ret
movb
scas
fstl
jecxz
icebp
loopne
jb
int3
sub
or
addr16
push
loopne
js
cltd
mov
mov
sub
push
into
pop
pop
xor
sahf
aad
inc
outsl
cmp
inc
ret
jge
mov
xor
xchg
aas
mov
loopne
cltd
movb
push
mov
popa
cli
test
out
cmc
xor
jnp
repz
xchg
xchg
or
in
push
clc
sbb
imulb
sahf
mov
sbb
in
rcl
xlat
cmp
pop
inc
cwtl
and
mov
clc
es
inc
je
cs
lea
pop
add
movl
int
clc
into
xchg
mov
sbb
fimull
mov
aad
inc
sub
lds
jno
push
int3
insl
adc
sub
sub
out
sub
ret
sbb
xchg
inc
clts
sbb
dec
iret
dec
dec
jb
les
inc
sbb
xchg
push
mov
clc
adc
aad
xchg
ret
mov
pusha
dec
jle
xchg
jmp
cli
es
jecxz
inc
dec
pop
xchg
ret
outsl
push
pop
cmp
fstp
mov
jle
imull
stos
jno
adc
inc
cmp
mov
cltd
jecxz
inc
jns
jne
and
imul
add
hlt
xor
xor
adc
inc
sbb
xor
orb
mov
push
add
outsl
daa
popa
in
mov
fcmovb
fs
pusha
mov
mov
jecxz
cwtl
jo
divb
mov
aam
mov
cmp
mov
ljmp
mov
inc
mov
or
jg
xchg
addr16
inc
sub
add
jae
xchg
add
push
fstl
push
out
in
push
jg
mov
ja
iret
xor
fcoml
add
sbb
pop
and
shll
gs
pop
adc
and
add
fucomip
std
outsl
icebp
out
jo
leave
push
not
and
jp
inc
clc
je
nop
fisttps
orl
xchg
cmc
jo
pushf
ret
rcll
xchg
cli
or
repz
cmp
and
pushf
push
cmp
mov
int
jb
repz
pop
arpl
inc
ss
adc
insb
inc
or
andb
inc
add
dec
add
pushf
add
cli
cmpsl
or
pop
out
mov
popa
jae
and
addr16
std
jl
aad
in
mov
cs
jnp
jns
in
jnp
sub
loopne
mov
lret
add
jl
pushf
jnp
out
mov
ret
sub
pop
shrb
fldt
sub
std
mov
cmp
xor
xchg
jae
test
xchg
imul
pop
out
xchg
mov
mov
jo
or
lea
push
ficomps
jge
sbb
scas
outsb
jg
add
ja
pop
mov
add
stos
repnz
loopne
rorb
mov
or
cmp
jnp
enter
es
sub
fldz
dec
movsl
enter
mov
ja
xchg
dec
popf
pop
cmc
jp
push
cmp
or
cmpsb
cmc
loopne
ljmp
jp
int3
clc
les
push
or
cltd
xchg
gs
inc
or
data16
ljmp
cmp
sub
jle
jb
stos
xor
aam
popa
insl
jns
or
test
in
cmovae
ficoml
addr16
shll
sbb
mov
into
sub
mov
out
movsb
jmp
cs
jae
xchg
jl
shlb
or
shll
xchg
inc
ret
pop
out
test
mov
add
push
dec
or
lcall
fildll
out
sti
ret
pop
std
mov
rclb
shl
xchg
mov
lods
nop
test
sahf
and
sbb
mov
sub
and
pop
inc
xor
lret
dec
jmp
adc
je
icebp
jb
testb
movl
sti
ds
pop
hlt
mov
es
jmp
lcall
dec
iret
and
and
bnd
xchg
sarl
push
scas
test
int3
fdivrl
mov
int
lret
push
inc
sbb
inc
cmp
add
ret
xor
xchg
push
fs
dec
mov
je
and
push
push
jb
scas
cmpsb
fistl
stos
outsl
es
test
scas
mov
sbb
mov
int3
jmp
jo
xlat
sub
mov
sub
or
mov
xchg
mov
lret
stos
cwtl
xorb
shl
pusha
stos
nop
and
add
fs
inc
mov
scas
cmc
and
or
and
test
cs
add
adc
mov
adc
subb
call
jg
add
ja
jmp
ret
inc
mov
push
lea
out
mov
movsl
mov
pop
leave
xchg
lods
lcall
adc
into
xor
pop
out
fisttpll
xchg
adc
shrb
pop
mov
xchg
jns
push
push
adc
mov
push
xchg
fnstsw
add
mov
jbe
scas
cltd
leave
xor
mov
insb
inc
mov
mov
std
scas
xchg
cmp
in
pushf
pop
inc
sbb
das
add
jno
jge
or
dec
out
jnp
sbb
aam
aad
into
aad
and
in
out
aad
jnp
and
xor
out
jo
and
rcrb
sub
pop
mov
inc
xlat
lret
loopne
sub
push
cmp
bound
cmp
mov
insb
xchg
adc
dec
lds
inc
rorb
mov
lea
cmp
sahf
jbe
mov
xchg
or
cmp
mov
inc
mov
in
xchg
pop
jb
out
or
ljmp
popf
add
xchg
mov
inc
notl
in
shl
jle
sub
ficoml
loop
add
pop
imul
adc
mov
test
out
fistpl
dec
sub
sarl
xor
cld
add
cmc
jge
jle
aas
pop
notl
enter
ja
inc
inc
xchg
ficoms
mov
pop
sbb
pushf
dec
lcall
in
in
lea
jmp
popa
lock
sbb
fidivrs
jmp
aaa
pop
push
mov
add
xchg
mov
shll
inc
addr16
sbb
scas
testl
lwpins
sti
push
mov
push
test
or
popa
fiaddl
mov
cmp
mov
shrl
fistpl
out
cwtl
pop
jp
and
mov
std
sbb
std
int3
loopne
in
stc
push
pop
xchg
dec
xchg
fs
push
in
out
loopne
or
js
popf
dec
nop
cmp
jne
inc
xchg
rclb
cmpsl
test
mov
pop
sbb
pop
popf
lret
cmp
pop
insb
repz
mov
mov
lock
int3
std
enter
lret
dec
mov
pop
jne
inc
lcall
mov
les
sub
lods
mov
divb
fistpll
loopne
aaa
or
nop
jae
mov
push
mov
loop
inc
mov
xor
xchg
xchg
push
adc
popa
adcl
in
jb
adc
mov
shlb
repnz
xchg
movsb
addr16
inc
mov
out
mov
out
and
mov
fs
jmp
jg
insl
mov
lahf
gs
lcall
dec
negl
data16
je
pusha
push
xor
ds
in
scas
loope
cltd
mov
mov
or
sahf
and
repnz
add
pop
outsl
adc
push
inc
cmp
sbb
cmp
inc
das
lods
cmp
mov
jo
inc
dec
xchg
imul
ret
pop
sti
sbb
leave
cmc
fistps
lea
into
mov
decb
and
xchg
cmpsb
cmpsb
fistps
cmc
sbb
xchg
pop
cwtl
lds
out
lea
xor
popf
xchg
push
btr
pop
adc
imul
stos
int
sahf
fs
aam
jl
dec
adc
in
mull
pop
std
mov
outsl
and
add
pop
loopne
lods
test
sub
jl
cmpsl
repz
mov
push
push
add
jbe
pusha
icebp
sub
in
adc
int3
cmp
and
jbe
fadds
int3
lret
push
add
add
stos
inc
push
mov
ret
je
std
adcl
loope
cmp
push
sbb
out
fsubp
and
cs
pop
fwait
sahf
xchg
fistpll
hlt
ficoms
insb
sbb
jl
jno
jecxz
jbe
or
mov
pop
fcoms
les
pop
popa
inc
sbbl
testb
mov
fildl
adc
push
test
sub
mov
xlat
dec
dec
mull
pusha
mov
rolb
les
jnp
sub
jbe
pop
push
sub
sbb
jo
mov
push
adc
sub
repnz
fidivrs
xchg
imul
cwtl
pushf
mov
test
push
inc
mov
add
aas
mov
mov
dec
jae
and
lods
dec
adc
in
testl
mov
cld
aas
dec
cmpsb
xor
mov
add
or
test
jbe
out
add
xchg
adc
mov
jnp
leave
fwait
add
out
jmp
and
jg
jae
mov
sarl
nop
jnp
dec
fld1
loope
mov
cwtl
mov
pop
adc
fadd
inc
scas
fdivl
popf
in
push
dec
shl
and
jg
jle
bound
xlat
push
jns
jmp
std
jbe
iret
push
mov
xchg
les
pop
push
or
call
inc
sbb
jge
jbe
sbb
in
fistl
fucom
jmp
and
fcomps
out
cltd
aaa
pop
adcl
jmp
insb
movsb
mov
arpl
mov
jge
mov
pop
and
adc
clc
jae
insb
sub
push
std
xor
je
xlat
dec
mov
jae
lahf
outsl
insb
cmc
pop
adc
sub
mov
pop
cmp
dec
push
xor
lds
sub
jg
pop
fwait
dec
push
ss
pop
mov
cltd
dec
bound
aas
mov
mov
pop
popl
lret
and
fcomip
test
loopne
inc
dec
xchg
sub
cmp
vmovups
in
repnz
fsubrl
jp
cld
add
cmpsl
jnp
je
mov
xlat
imul
add
fs
mov
cmpsb
shl
jo
inc
mov
arpl
jl
pop
dec
fimull
pop
inc
sbbb
lahf
dec
dec
cli
mov
lret
das
mov
pop
orl
scas
add
ljmp
ret
loopne
nop
or
mov
roll
fs
outsl
dec
loope
dec
mov
cs
mov
push
cmp
mov
dec
fbld
scas
cld
or
adc
imull
cwtl
stos
int
push
xchg
pop
arpl
test
test
nop
dec
push
fcomps
adc
mov
push
cmpsb
jmp
and
push
in
test
aas
xlat
push
nop
xchg
fs
arpl
test
out
pop
xlat
push
xchg
or
dec
gs
or
sbb
push
outsl
jp
pushf
pop
push
mov
fmull
push
adc
inc
or
ret
sub
insb
adcb
dec
test
shl
adc
or
rcrl
jne
xchg
call
popa
in
xchg
dec
js
dec
pop
pop
cltd
dec
xchg
fnstenv
or
stc
add
and
enter
sti
cmp
lahf
bound
xchg
jecxz
cld
sbb
jecxz
sarl
lock
push
mov
negb
fistps
ret
sub
test
mov
push
or
fidivl
push
mov
shl
imull
pop
filds
aaa
xor
mov
fwait
fwait
mov
xchg
fsqrt
leave
xor
pushf
inc
into
sub
push
xchg
push
and
mov
mov
xchg
leave
ljmp
jbe
insb
faddl
add
lcall
jb
xor
ljmp
pop
xor
enter
ds
fsubl
inc
dec
push
rcl
ja
orl
push
push
int
jne
cmp
pop
pop
adc
and
mov
jmp
mov
test
test
push
mov
dec
call
or
icebp
xchg
mov
xchg
inc
dec
xchg
rcrb
mov
sbb
mov
adc
add
nop
outsb
stos
or
mov
movsb
cld
lock
scas
in
insl
stos
pop
jnp
inc
popa
mov
and
inc
imulb
test
sub
mov
xchg
cld
inc
popa
dec
aad
stos
inc
push
and
sub
push
push
push
repnz
mov
or
aam
mov
into
push
push
sbb
adc
lcall
pop
pusha
push
dec
xor
mov
out
sub
sub
sar
xchg
inc
and
push
dec
dec
scas
mov
enter
mov
cmp
and
scas
popa
mov
leave
push
pop
jge
jb
jg
lret
int
pop
cs
jb
cli
insl
cli
dec
cmp
mov
cmp
movsb
stos
mov
mov
or
lea
jo
inc
out
cmp
mov
sbb
pop
mov
lods
push
or
add
jne
ljmp
mov
push
cmp
sub
cmp
mulb
xchg
ds
jno
dec
jnp
push
stc
fcomi
iret
int3
lock
fnsave
addr16
fdivrl
into
fisubrl
stc
in
push
xchg
inc
cmp
add
mov
jp
pusha
lods
push
mov
ror
and
inc
into
lahf
pop
dec
jl
les
aad
mov
fisubrs
fildl
push
in
sbb
inc
cli
mov
sbb
jp
mov
pop
mov
cli
push
xchg
and
imul
inc
push
pop
or
movsl
out
data16
ljmp
add
mov
aam
or
loope
mov
aas
jl,pt
out
jle
dec
aam
pop
sub
out
pop
or
xchg
add
iret
add
sub
jne
enter
cwtl
mov
push
aaa
pop
pop
test
and
nop
push
repnz
pop
pop
add
cmpsl
dec
outsl
fcoms
fadds
pop
push
mov
call
lock
xor
xchg
test
test
imul
sbb
mov
dec
xor
add
mov
test
push
fisubl
lcall
mov
adc
dec
pop
sbb
les
insb
jns
and
icebp
sbb
sbb
lds
repz
fsubrl
xor
push
adc
inc
dec
mov
pop
ja
sbb
ljmp
fisubs
mov
int3
lods
stc
fs
int3
mov
push
adc
pop
cwtl
inc
cs
dec
sub
jo
mov
lret
adc
lret
mov
sbbl
dec
push
dec
jg
pop
mov
mov
inc
dec
pop
loop
xorl
inc
ljmp
fildl
dec
jge
inc
inc
cmp
cmpb
xlat
xchg
inc
wbinvd
pop
mov
or
sbb
clc
inc
dec
ljmp
icebp
hlt
fstpl
les
call
xorl
imul
push
mov
jnp
loop
pop
fiadds
cmp
cmpsl
xchg
and
adcl
sub
push
test
xchg
popf
dec
and
rorb
add
push
imul
cmp
mov
addl
in
fwait
adc
pop
dec
inc
xor
pop
enter
push
push
or
dec
scas
push
call
js
mov
jl
dec
and
cmp
call
jl
rorl
mov
bound
std
mov
cmp
sahf
adc
xchg
pop
sbb
fisubrs
hlt
xchg
mov
inc
fadds
adc
adc
pop
xchg
push
jge
add
sbb
push
mov
dec
pop
xor
or
push
pop
and
sahf
pop
outsl
cs
iret
sub
push
leave
cmp
cmpsl
outsl
sub
stos
inc
jge
mov
jge
inc
sahf
xor
imul
pusha
mov
das
aam
jecxz
repnz
mov
test
xor
adc
ja
xor
push
push
into
std
mov
cmp
ss
xchg
mov
or
sbb
hlt
jne
pop
cmp
pop
popf
xor
jmp
fmulp
mov
ret
repz
std
dec
std
enter
in
dec
inc
js
add
pop
outsb
xchg
add
sbb
into
scas
mov
out
ret
xchg
jle
mov
in
mov
xchg
in
jmp
es
push
xchg
stc
or
test
out
je
xchg
jns
inc
mov
ror
imul
mov
fdivl
dec
std
rcl
dec
jl
paddsw
pop
jl
out
inc
out
pusha
mov
imul
repz
lret
xchg
sahf
adc
mov
jecxz
cmp
jo
and
adc
or
test
incl
adc
pop
cmc
xchg
movq
pusha
mov
insb
cmp
jecxz
mov
mov
inc
mov
xor
sbb
loope
mov
loope
pop
pop
iret
repnz
mov
or
loope
pop
pop
xor
mov
xor
jno
fwait
cmp
lea
xor
sarl
das
xchg
jne
jp
clc
cmp
mov
lret
dec
jb
mulb
jne
js
in
jmp
iret
push
mov
lds
mov
sub
xchg
loopne
mov
pop
mov
fisubs
lock
in
or
cmp
xor
mov
loop
cs
cld
into
sub
pop
pop
cmp
inc
pop
call
cmpsl
xor
push
rcr
sub
pop
shld
push
iret
popa
sbb
sub
pop
ja
xchg
jno
jl
push
out
cwtl
pop
ds
dec
cli
cld
jae
xlat
push
test
cld
cmp
mov
mov
add
pop
add
mov
xchg
mov
pop
mov
test
addr16
ret
push
inc
mov
pop
push
repnz
sub
std
mov
xchg
pop
add
loopne
mov
ljmp
sub
pop
mov
lret
and
adc
fstps
xchg
js
andb
fildll
add
outsb
or
inc
xor
divl
and
test
sub
mov
mov
sub
fists
lahf
push
cld
adc
sbb
in
jg
or
test
jb
out
push
cmp
sbb
adc
sub
and
sbb
sbb
adc
pop
ret
or
push
push
addb
mov
and
ret
orb
push
mov
std
jg
call
pop
mov
mov
stos
jmp
shlb
dec
lret
in
mov
and
outsl
aam
jl
divb
test
mov
xor
xchg
test
out
ret
xor
cmp
xchg
add
fldlg2
mov
loop
sub
adc
int3
aam
push
sbb
dec
insl
jns
pop
jbe
mov
sbb
fisttps
mov
xorb
popa
in
cld
sbb
pop
xchg
shll
sahf
xor
add
mov
in
jne
mov
lahf
ret
pop
and
insl
jne
xchg
lods
in
fs
mov
dec
inc
mov
aad
inc
push
pop
mov
pop
in
mov
mov
and
out
js
cli
addr16
adc
jae
scas
xchg
movsl
lods
out
loope
pop
xlat
cmc
lock
jb
xchg
dec
push
test
pop
sub
push
cmc
mov
movsb
cmpsl
xor
outsb
aad
fwait
int
jg
das
lock
pusha
jnp
dec
std
add
xchg
jecxz
jl
jae
arpl
push
js
push
push
jp
cli
mov
popa
push
pop
push
pop
sub
inc
test
dec
mov
inc
jnp
inc
ret
add
and
rol
sahf
cmc
push
xor
cmpl
fnstcw
incl
jo
lret
mov
insb
unpcklps
xor
call
fadds
jecxz
cmpsl
xor
xor
xchg
pop
adc
adc
iret
xor
repnz
lret
adc
incb
fiadds
push
xchg
xchg
add
repnz
mov
inc
or
in
out
loope
jne
sub
inc
test
jp
mov
rcl
iret
outsl
inc
push
outsl
fs
add
adc
clc
cltd
jno
lock
mov
rcr
xchg
int
bound
lret
decl
mov
xchg
dec
mov
and
inc
fistpl
pop
punpcklwd
stos
sarl
jnp
add
jns
mov
jg
xchg
push
inc
push
ds
scas
repnz
test
out
adc
jmp
inc
inc
jmp
lds
into
jae
ficompl
iret
lods
in
test
fwait
cmp
cmpsl
fdivrs
add
inc
xor
ljmp
add
cs
xchg
or
inc
push
stc
lret
push
inc
cli
movsb
inc
inc
stos
shlb
imull
lcall
dec
insb
add
adc
mov
test
xchg
imul
loopne
addl
lret
dec
lret
sub
jno
adc
gs
ret
push
xchg
in
neg
dec
adc
daa
xchg
dec
push
cmpl
fdivrs
mov
in
inc
mov
sbb
add
push
outsb
pop
xor
stos
or
xlat
cli
insl
es
dec
jno
mov
inc
xchg
mov
add
stos
mov
fildl
mov
push
push
push
sahf
mov
int
mov
push
dec
cmpsl
xchg
movsl
adc
fidivrl
and
lret
insb
dec
subl
mov
jnp
mov
stos
dec
jecxz
cmpsb
cld
addr16
rorl
cld
inc
pop
outsb
push
push
mov
mov
nop
aas
test
out
sarb
mov
addr16
lcall
imul
imul
pop
xchg
lock
pop
shl
xchg
mov
icebp
xchg
adc
jle
mov
into
cmp
call
xchg
nop
outsl
inc
cli
jae
clc
mov
xchg
repnz
imul
mov
cmc
inc
lds
dec
push
clc
insl
mov
mov
hlt
add
mov
std
xlat
mov
jo
adc
js
rcr
push
iret
push
stos
aad
lock
in
cli
out
cmpl
push
fstpl
imul
stos
pusha
jb
inc
mov
sbb
and
mov
jl
js
push
push
outsl
dec
jbe,pt
xchg
jg
cs
gs
pop
stc
es
inc
fwait
and
lods
push
xchg
fdecstp
mov
dec
push
xor
negb
cmpsl
roll
mov
push
inc
jle
cld
dec
test
sbb
outsb
mov
inc
gs
shrl
push
flds
fcomps
and
push
or
xchg
test
daa
ret
lea
mov
out
mov
shll
pushf
jg
mov
pop
popa
push
push
rorl
ss
xadd
insl
outsb
pop
int
ja
or
jg
jl
into
cltd
sbb
cs
es
sbbl
dec
adc
push
mov
ja
push
test
pop
and
sbb
or
loope
aad
cli
mov
outsl
adc
lahf
xchg
enter
test
in
xchg
cmp
push
stos
mov
outsb
push
stos
cmp
inc
mov
ss
inc
adc
xchg
repnz
sti
pop
jecxz
jge
cld
sub
mov
out
test
pop
lock
xchg
pop
shrb
jg
mov
cmp
xchg
movsl
je
lahf
pop
icebp
add
dec
xchg
xor
jo
mov
sub
or
dec
and
imul
sub
cmp
or
out
cmp
adc
dec
call
pop
pop
lret
jno
lea
push
fwait
and
stos
orl
xchg
sti
pop
into
mov
clc
sub
pusha
jb
fwait
dec
fs
push
fimull
jmp
fcomi
lods
pusha
lret
ja
mov
sbb
mov
loopne
repnz
mov
fsubrl
loop
cltd
stos
xor
pushf
or
bound
insb
sahf
ja
test
ret
test
cmp
xchg
lret
adc
sbb
ljmp
push
pop
test
jbe
push
adc
push
mov
repz
jne
xchg
xlat
or
dec
cmpsl
sbb
xchg
adc
mov
stos
dec
aad
inc
push
addb
scas
outsb
test
lret
add
sbbl
mov
xchg
xor
mov
dec
xor
js
mov
insl
scas
orb
xchg
cmc
push
imul
fdivs
mov
fldz
jl
mov
xchg
jb
mov
adc
pusha
roll
call
push
inc
pop
shlb
inc
add
mov
jnp
shll
movsl
stc
in
lret
leave
mov
jle
add
imul
iret
pop
dec
pop
cmp
insb
push
push
or
scas
cld
pop
cmp
sub
sbb
dec
faddl
mov
lds
cmp
loop
sub
push
jl
cld
jmp
sahf
push
outsb
sbb
sbb
mov
test
adc
sbb
adc
shll
push
sub
clc
int
popf
loop
xor
jecxz
popf
mov
adc
jbe
or
or
dec
inc
loopne
mov
dec
mov
inc
lods
adcl
test
hlt
int
lret
dec
andl
xchg
or
dec
push
push
insb
mov
xor
lds
inc
hlt
add
movsl
xchg
pop
les
mov
xchg
je
movsl
push
scas
xor
lods
fistpl
iret
cmp
scas
lock
sbb
or
pop
dec
dec
movsl
nop
mov
rolb
adc
push
jnp
push
add
mov
dec
and
enter
int
push
enter
inc
outsb
hlt
mov
push
ljmp
sti
jo
aaa
fsubrs
lcall
mov
cmp
inc
mov
faddl
mov
aad
daa
gs
je
lret
xchg
lahf
push
or
popa
fldt
aaa
mov
and
cmc
ss
mov
ficoms
sub
sub
into
js
repz
sahf
xor
mov
movsb
mov
jns
insl
mov
ds
ret
mov
or
mov
neg
xsha1
cmpsb
lret
loop
ret
aam
cld
out
or
add
rclb
mov
fistl
fmull
das
push
sub
inc
sub
inc
cmc
rorb
test
ret
lds
fidivrs
add
daa
sub
gs
stc
shr
es
popa
ss
xor
xor
push
sub
pop
and
loope
sbb
loopne
shlb
xchg
pop
scas
lret
hlt
std
pusha
xor
aad
sub
xor
fisttpl
mov
inc
fidivrl
mov
stos
inc
dec
mov
shll
shll
jb
or
push
xor
pop
aas
pop
mov
add
mov
adc
push
test
dec
and
sub
sub
rcrl
and
xchg
into
add
xchg
bnd
mov
xchg
xor
outsb
inc
repnz
std
xor
and
and
outsb
movsl
xor
loopne
icebp
and
mov
jl
mov
cmpl
xchg
inc
sub
cli
sub
clc
add
xchg
pusha
or
bound
pop
and
int
push
sbb
scas
mov
shll
in
or
stc
pop
repz
sub
mov
sbb
sahf
jno
dec
nop
push
nop
int
push
jl
mov
inc
mov
sub
mov
je
inc
xchg
jl
adc
sbb
add
pop
or
and
jmp
icebp
stos
mov
sbb
cli
pop
sbb
test
dec
aas
mov
fcomi
push
ja
adc
pop
idivl
stos
inc
das
xchg
pushf
xchg
aaa
fnstcw
loopne
mov
lods
xor
popa
add
insl
push
inc
not
push
push
mov
cmp
icebp
in
mov
jae
and
push
scas
pusha
push
movb
add
call
arpl
pop
mov
push
inc
push
iret
sahf
xor
mov
sahf
add
sbb
xchg
repnz
test
mov
outsb
gs
dec
mov
or
test
cmc
push
sbb
mov
pusha
mov
sub
subl
rorl
and
xor
sbb
inc
ja
push
repz
inc
mov
mov
jbe
cs
mov
mov
jno
xor
aas
inc
jp
jnp
mov
and
push
mov
push
push
mov
pop
loopne
mov
cmp
icebp
pop
je
mov
daa
pushf
imul
adc
das
fisubl
mov
fldl
mov
jg
test
insl
lret
add
addr16
push
cmpsl
xorb
das
dec
xchg
jns
mov
xlat
and
jb
or
js
cmp
repz
test
sbb
imul
xchg
shr
add
mov
stos
insb
or
mov
movl
cmp
popf
in
and
xor
mov
fsts
rclb
mull
cli
xor
push
cmp
cmc
jp
xchg
es
xor
in
int
into
lret
testb
mov
cmpsl
jno
mov
cmp
mov
ja
cmpsl
push
je
mov
fsubr
daa
sub
call
mov
in
mov
fiaddl
mov
pop
add
fsubs
xchg
fiaddl
fcmovnbe
ja
outsl
and
mov
jne
mov
insl
sahf
arpl
movl
or
lret
mov
cmp
aaa
pop
fdivp
and
push
sti
sbbb
stos
jmp
xor
cmp
gs
jbe
and
add
add
fisubl
xor
movsl
xor
sub
dec
leave
movsl
lahf
insl
pop
mov
pop
mov
bnd
pushf
cmp
insb
ljmp
xchg
xchg
sbb
cmpsl
enter
xchg
add
jo
fdivl
add
in
cmp
in
dec
movsb
jns
mov
fwait
ds
push
pop
push
and
jge
dec
lret
test
fdivrl
mov
add
negb
mov
pop
pushf
cmp
lods
mov
dec
mov
sbb
pop
sub
xchg
movl
mov
out
jmp
pop
mov
decb
xchg
clc
jecxz
pusha
bound
adc
fsubp
sub
push
pop
aam
call
pop
jno
lret
imul
add
rcll
jg
pop
add
xor
xchg
ficoms
pop
push
pop
enter
jmp
mov
xchg
rorl
or
iret
in
or
mov
stos
enter
cmp
and
hlt
icebp
roll
xchg
rcr
pusha
adc
pop
push
sub
inc
test
lea
int3
shlb
pop
aaa
sbb
das
stos
pop
mov
icebp
pusha
sbb
mov
divl
xor
insl
jecxz
mov
imul
push
daa
fcmovne
aam
lds
and
add
pop
xchg
shr
xchg
test
or
cmp
inc
mov
lret
add
cmp
or
xor
ljmp
outsb
cmp
or
and
pop
cmpsb
dec
mov
test
dec
inc
pop
mov
adc
sti
movhps
adc
xor
ss
inc
sub
mov
or
inc
fwait
rcll
daa
and
lods
mov
insl
mov
xor
sub
jnp
mov
push
jmp
popa
mov
bound
xchg
cmp
lret
cmpsb
insl
and
adc
jecxz
sub
xor
stos
adc
outsb
or
prefetchw
mov
lret
xor
mov
and
mov
daa
das
mov
and
ficoms
jmp
icebp
push
mov
cmp
aaa
nop
mov
jbe
jno
lcall
addb
aad
sar
fs
push
mov
or
mov
cld
cli
lds
into
negb
mov
pop
jge
jp
dec
movsl
nop
or
pop
loop
popf
inc
repnz
and
push
shr
jg
adc
sub
add
xchg
sub
inc
cmp
fisttpl
push
mov
sti
addb
mov
loopne
nop
sti
out
sahf
clc
loop
xchg
shr
pop
jb
ds
fdivp
push
in
push
dec
mov
adc
cmc
nop
pop
cld
pop
xchg
hlt
xlat
lret
cmp
cmp
jecxz
aaa
pop
ret
sub
jg
dec
fnstenv
clc
lcall
fld
dec
insl
addb
cmp
roll
add
loope
push
lahf
punpckhdq
andb
mov
jne
inc
or
cltd
sub
arpl
xor
cmpl
mov
daa
xor
mov
movsb
fistpl
sbb
lret
insl
cmp
in
adc
push
inc
imul
jmp
scas
aad
ror
ja
stc
shlb
ret
xchg
adc
jns
jmp
ds
mov
xor
push
cmp
adc
orb
add
lcall
subb
inc
cmp
movsl
pop
sbb
push
xor
sub
insb
push
int3
data16
aam
or
adc
mov
test
sub
stc
cli
gs
mov
dec
push
fninit
insb
cmp
or
sahf
lcall
movb
loope
jle
mov
xor
lock
insl
fmull
and
mov
cld
lods
hlt
dec
push
loope
inc
sarb
push
mov
les
cmp
fsubl
jg
stos
inc
out
add
mov
xchg
cmpsb
pop
lret
xlat
shrl
adc
int
pop
jb
popa
sub
inc
test
jg
test
add
data16
movsl
std
cmp
push
mov
out
lods
inc
popf
bound
ja
mov
and
adc
cmp
mov
push
push
mov
sbb
pop
push
testb
flds
out
test
in
call
pop
cltd
pop
cmp
mov
mov
lahf
popf
sahf
push
fistps
out
scas
inc
hlt
movsl
and
lock
jmp
fwait
lret
or
add
mov
mov
stc
rcrl
pop
int
fwait
int3
xchg
iret
scas
add
fildl
cmp
jbe
dec
jmp
je
mov
jne
mov
jne
push
or
mov
rcr
pop
fs
out
inc
stos
jae
add
scas
sbb
cld
jmp
xchg
jne
xchg
inc
xor
scas
orb
mov
stos
insb
xchg
pusha
jg
xor
or
jp
jb
pop
jmp
xor
notl
into
fnsave
pop
mov
xchg
xor
movsl
inc
sbb
daa
scas
pop
mov
movsb
enter
xchg
xor
or
mov
addr16
adc
add
bound
dec
mov
cwtl
loope
xchg
push
push
xor
pop
in
ret
add
test
pop
xchg
aad
fdivp
pop
loop
or
jl
scas
std
cmp
loopne
daa
cmp
dec
lods
lahf
mov
fnsave
and
sahf
icebp
pop
add
xchg
incl
fnsave
mov
mov
adc
jnp
add
pop
aas
iret
in
push
das
in
out
sbb
xor
xor
add
and
das
bound
pop
lcall
in
fcompl
add
nop
popa
and
ret
xor
dec
adc
pushf
add
pop
pop
dec
dec
imul
jg
stos
lret
mov
jp
xchg
xchg
enter
jnp
lods
clc
or
or
mov
pop
add
hlt
xchg
cmp
or
shrl
xor
adc
out
mov
shufps
inc
loope
iret
or
sub
shlb
pop
inc
bound
pop
jecxz
xor
cmp
loope
pop
sar
fdivs
test
hlt
test
dec
sbb
test
stos
or
cmovs
nop
mov
test
loope
sbb
push
dec
pop
push
sub
mov
aaa
in
movsl
movsb
cmp
and
movl
scas
inc
pushf
dec
xlat
and
data16
adc
bound
dec
aaa
gs
int
inc
xor
pop
push
sbb
pushf
daa
add
fisubrs
insb
lock
lret
inc
adc
sti
or
orb
fbstp
fdivrp
test
adc
mov
lcall
mov
or
add
addr16
mov
mov
push
nop
jb
adc
inc
pushf
sub
mov
ret
cli
mov
push
push
sub
mov
push
or
sbb
cmpsb
subl
xchg
jo
push
lcall
mov
jp
or
rcll
movsb
xor
cmp
sub
lds
adc
out
mov
aaa
data16
mov
push
and
mov
test
dec
mov
pushf
mov
jns
fcmovbe
sahf
fdivl
pop
ret
pop
rolb
add
ftst
sub
lds
push
imul
or
xchg
mov
mov
adc
xor
jno
add
push
dec
jno
mov
cld
pop
sbb
push
add
adc
leave
repnz
add
loop
cmp
popa
repz
push
movsl
ljmp
xchg
hlt
mov
mov
sbb
or
push
jns
dec
aam
stc
push
mov
mov
test
xchg
inc
jl
xor
scas
ret
mov
pusha
xchg
xor
cmpsb
mov
sahf
add
inc
sbb
cmpsb
arpl
dec
pop
push
leave
loopne
mov
mov
xlat
ret
cmpsl
or
cmpsb
sbb
rclb
aaa
or
and
push
cwtl
add
pop
orl
sbb
adc
leave
dec
shr
out
mov
and
add
cmpsl
lods
in
movsl
mov
stc
out
xchg
push
es
pop
divb
and
xor
outsl
data16
dec
inc
sub
test
xor
jp
pop
xor
inc
adc
dec
mov
xorl
pop
andb
xchg
cmpsb
push
ja
cld
jae
arpl
filds
loopne
data16
xorl
aad
jmp
adc
lea
mov
pop
and
lcall
pop
cld
testb
sbb
pop
inc
mov
pop
dec
mov
mov
add
jne
inc
xor
push
cwtl
addr16
dec
inc
push
cmp
ret
loope
leave
add
dec
pop
inc
repnz
jmp
jl
inc
jmp
inc
and
sbb
add
cmp
fistps
lcall
js,pn
adcl
mov
and
andnps
ror
adc
lea
es
pop
ret
or
imul
sbb
mov
js
scas
incb
shr
hlt
dec
mov
daa
lods
pop
lahf
add
std
loopne
add
or
scas
sub
das
push
out
inc
loopne
and
rcl
insl
popa
push
xor
andnps
pushl
or
rorb
mov
mov
imul
clc
cmp
sbb
add
push
mov
pop
pop
push
sbb
pushf
call
rcrl
mov
ja
xchg
cmp
in
xor
rol
jne
pop
dec
mov
out
sbb
mov
outsb
dec
xchg
push
ss
sub
push
or
xor
or
std
movsb
mov
fsubrl
in
pop
cmp
xor
mov
mov
popf
xchg
mov
icebp
add
ja
mov
fistps
inc
aam
fidivrl
nop
ljmp
lret
push
ret
clc
add
push
sub
push
scas
out
fwait
cld
out
pop
sub
inc
ljmp
xorb
sarl
lret
pop
push
addl
inc
cmp
jecxz
fistps
sub
dec
jle
adc
dec
and
jl
lret
mulb
push
mov
addb
divb
ret
dec
arpl
int
ljmp
je
mov
mov
mov
dec
aaa
sbb
test
inc
or
icebp
or
inc
imul
out
lret
add
mov
ret
nop
mov
add
rol
inc
push
in
les
ljmp
mov
icebp
push
dec
inc
cmpsb
fsub
sub
mov
cmc
outsb
out
cmp
lods
mov
adc
lods
cmpsb
es
pop
das
xor
inc
fwait
cwtl
pop
popa
inc
bound
cltd
ds
push
stos
bound
insl
loope
cli
mov
cmp
pop
inc
rcl
push
fildll
les
sub
or
mov
loopew
test
push
movsl
adc
decb
add
mov
and
jl
push
out
ret
push
iret
hlt
icebp
outsb
outsb
testb
cmp
stos
xchg
cmp
filds
jbe
cmpsl
faddl
imul
pusha
pop
inc
scas
mov
push
pop
adc
pop
ljmp
das
dec
jbe
lcall
outsl
push
gs
int3
jp
xor
or
ret
mov
sub
in
mov
rorb
mov
xchg
or
mov
repz
mov
dec
cmp
or
add
inc
pushf
pop
pop
dec
sub
adc
test
mov
cmp
testl
sti
push
test
xlat
xorb
and
into
sbb
or
pop
or
xchg
dec
push
cmp
lahf
dec
in
pop
aam
mov
add
adc
add
cmc
mov
leave
adc
jae
outsl
scas
shl
ret
sahf
mov
xchg
and
sbb
xor
xor
loopne
adc
insb
mov
and
xchg
clc
mov
lods
pop
push
loopne
push
movsl
pop
add
scas
test
sub
add
xchg
adcb
mov
cmp
mov
out
mov
mov
mov
mov
and
stos
mov
push
imul
iret
add
stos
sysenter
in
pop
jmp
or
jecxz
inc
jne
xchg
fnstenv
pop
push
add
pop
add
cwtl
clc
scas
leave
cmc
shll
sbb
ljmp
aam
fisttps
mov
xor
mov
jbe
push
test
mov
ret
insb
aaa
out
fs
out
sub
out
leave
or
mov
sbb
repnz
into
mov
or
add
mov
and
pusha
pop
into
pop
jbe
jmp
scas
pop
out
add
fwait
jp
or
mov
lock
jl
lods
cli
adc
call
rorb
xchg
inc
mov
loope
mov
mov
xor
mov
cmp
cmpb
sub
sbb
pop
hlt
sbb
popf
jns
mov
test
and
fnstenv
sahf
scas
inc
pop
mov
bnd
fsubrl
mov
imul
push
dec
icebp
mov
rol
cmp
mov
je
dec
loopne
sub
pop
push
iret
dec
inc
sbb
dec
insb
iret
mov
pop
mov
lret
pop
cmp
mov
xrelease
pop
fisttpll
nop
and
dec
sub
mov
inc
dec
dec
fnstenv
cmp
std
jo
mov
rolb
cmp
clc
rclb
movsl
outsl
std
cmpsb
sub
push
mov
mov
pop
jnp
adc
xlat
adc
sbb
push
jae
movsl
gs
mov
inc
test
xchg
mov
dec
cmc
xor
cmp
inc
jbe
inc
pushf
push
stos
mov
ljmp
or
ss
mov
push
jl
cltd
mov
jae
inc
sbb
inc
inc
loop
sub
add
push
out
hlt
cmpsb
pop
lods
in
jl
out
decb
out
repz
jo
pop
les
inc
mov
or
or
push
scas
dec
xor
iret
nop
push
push
jno
dec
sub
fdivs
shlb
stos
dec
inc
sbb
callw
sbb
xor
add
imul
nop
xor
inc
addr16
fstpt
push
mov
dec
in
icebp
lock
jle
movsl
cli
std
ficomps
pop
pop
popa
fcoms
out
into
lahf
into
daa
add
push
outsb
inc
lea
incb
fstl
xor
xor
loope
cli
xchg
jecxz
dec
lahf
xor
addr16
jmp
lods
xchg
xchg
out
jbe
rcll
lahf
sbb
cmpsl
jmp
dec
push
jmp
cvtps2pi
popl
cs
mov
lea
pop
js
sahf
and
xchg
mov
repz
shr
iret
mov
cmp
clc
pusha
mov
xor
out
popf
mov
dec
call
mov
xchg
repnz
mov
loop
subb
sbb
je
dec
push
cwtl
xchg
loope
loopne
adc
jge
je
push
aam
aaa
stc
mov
shr
int
roll
cmp
push
dec
imul
sub
pop
cmc
scas
cmpsl
xchg
mov
shll
pop
in
sahf
subb
add
xor
add
mov
and
ljmp
arpl
inc
push
in
jl
mov
or
inc
inc
rcrb
push
ret
mov
outsl
mov
adc
cmp
lock
sbb
cmp
rorl
dec
push
mov
clc
pop
lcall
repnz
sarl
pop
stos
mov
daa
push
outsl
xlat
and
loope
add
xchg
stos
dec
movsb
mov
sbb
jb
movsl
fsubs
inc
jecxz
add
std
push
mov
add
pop
xor
mov
mov
test
jle
cltd
aas
dec
shrb
push
sub
movsb
mov
push
je
fidivrs
outsl
jmp
decl
aas
and
jb
and
mov
inc
cwtl
add
ret
push
jp
arpl
or
test
mov
jb
shll
stos
ljmp
mov
aam
lret
jg
stos
int
sbb
int3
mov
add
cmp
imul
icebp
add
jne
repnz
ljmp
mov
dec
out
mov
lret
mov
ret
sbbl
pop
pusha
sbb
inc
sbb
mov
mov
aas
loopne
sub
add
mov
jae
dec
cwtl
out
or
loope
or
adc
push
out
fcmovbe
inc
cmp
jae
or
sar
sub
xchg
shll
out
jge
dec
mov
pop
push
bound
jmp
rorb
mov
sbb
not
xor
push
les
mov
ja
inc
sbb
adc
fsubrl
jbe
int
sahf
movsb
and
in
mov
enter
and
test
push
jne
xlat
call
out
jnp
mov
in
fs
popf
loop
jnp
fsubrl
dec
or
pushf
stos
cli
enter
ja
fs
lret
inc
cmp
xlat
mov
push
push
mov
sti
lea
insl
outsl
int3
and
inc
adc
pop
mov
mov
test
mov
push
ljmp
sbb
or
aam
insb
in
aad
pop
test
or
es
divb
sbb
mov
sarb
dec
lcall
in
subl
mov
jle
dec
jg
enter
std
sbb
testb
out
or
std
das
mov
add
out
pop
jg
or
bound
and
fmuls
mov
mov
sbbb
nop
test
mov
push
mov
and
imul
xorl
into
pop
inc
push
adcb
xchg
xchg
scas
jle
dec
push
out
pop
jp
jne
andb
push
cmp
lahf
js
xor
fisubl
test
xchg
mov
mov
push
mov
shrl
es
and
cmp
inc
jns
in
mov
push
jmp
out
lcall
in
imul
es
and
stc
repz
lret
xlat
in
xorl
fidivrs
lock
std
gs
cmp
xor
out
nop
repnz
fcmovnbe
dec
loopne
rol
pop
xlat
add
mov
pop
jb
jecxz
scas
je
pop
insb
xor
inc
mov
lods
lea
jns
mov
add
mov
jge
jne
dec
sbb
aaa
les
inc
push
push
bound
int3
stc
sub
jg
pop
jg
mov
fisubs
mov
add
cmp
out
dec
rcl
cmpsl
jecxz
aaa
mov
cmpsl
call
sub
lret
ret
cltd
inc
jno
jmp
inc
dec
dec
outsb
jl
stc
lcall
xchg
test
das
mov
loop
sbb
xchg
arpl
nop
sub
daa
push
call
sti
test
push
sbb
xor
icebp
mov
and
xchg
fistps
xchg
int
idivb
xchg
mov
hlt
inc
decb
dec
insb
cmp
xor
add
mov
jg
push
mov
push
pushf
and
jae
and
sub
lea
jge
jmp
jg
push
xchg
xchg
insl
add
xchg
pop
popa
sub
inc
cmp
jmp
add
add
popf
rol
jle
push
inc
fistl
pop
xchg
cli
iret
pop
mov
push
xchg
pop
xchg
pusha
sbb
fstpl
nop
pop
imul
stc
pop
addr16
add
in
adcb
mov
push
out
inc
mov
or
mov
in
xor
or
mov
xchg
outsl
cmp
scas
dec
sbb
fmuls
sub
cli
das
sbb
mov
popf
jns
sarl
mov
or
jne
jl
gs
outsl
jmp
out
push
ljmp
mov
jl
shll
push
mov
adc
mov
ja
inc
popf
cmp
popa
dec
sbb
insl
cmp
les
daa
cli
and
xchg
sub
ss
loope
jecxz
mov
arpl
or
cltd
fucomp
dec
stc
add
jle
cli
push
jb
sbb
cmpsb
or
mov
mov
mov
mov
inc
lods
cmp
push
iret
test
push
ja
cmp
fsubs
es
dec
xchg
push
cmpsb
adc
in
sub
adc
cmp
jmp
lea
decb
shll
ret
in
dec
out
add
je
cmp
inc
mov
pop
dec
xlat
jae
jo
arpl
ret
fisttpl
add
or
adc
lcall
mov
ljmp
outsb
add
push
xchg
std
inc
outsb
mov
outsl
pop
out
fisttps
dec
out
pop
push
xchg
sbb
push
sub
jp
or
xchg
clc
loope
stos
shlb
sahf
or
add
mov
gs
and
sub
out
stc
xchg
into
xchg
adc
mov
cld
and
xchg
jge
in
in
push
add
dec
fcomp
add
inc
jle
addr16
frstor
jnp
gs
js
lahf
imul
mov
imul
xchg
loopne
push
lods
add
das
sub
scas
mov
dec
jno
dec
insl
jae
xor
sub
pushw
addb
sub
sub
or
and
iret
loope
fimull
mov
lods
lcall
xor
movb
cmpsb
jne
mov
sub
leave
xorl
adc
mov
lods
mov
imul
jge
movsb
push
mov
push
pop
sub
adc
push
adcb
addr16
hlt
xor
jae
dec
loope
cmp
or
in
xor
in
pop
and
and
aam
es
fcomip
or
mov
jae
clc
leave
inc
push
pop
xchg
mov
idivl
mov
mov
jo
xchg
inc
inc
gs
lret
pop
jmp
sbb
and
pop
mov
sub
addr16
repz
cmpsb
jb
sub
pop
pop
push
dec
in
movsl
stos
and
repz
mov
and
insb
sub
adc
sub
inc
mov
xchg
loop
sti
cmp
fdivrs
push
sbb
hlt
push
xor
and
jge
xchg
mov
mov
test
test
xchg
add
jecxz
stc
mov
icebp
dec
inc
shl
rcrl
int3
push
out
and
inc
dec
iret
pushl
adcl
xchg
sub
sbb
shl
lgs
cli
sub
xor
mov
ret
inc
pop
pusha
push
mov
and
jnp
rolb
je
fucomp
enter
gs
mov
pop
pop
ljmp
enter
inc
incl
cmp
pop
and
loop
fdivrp
je
or
push
mov
mov
pop
pop
ds
sbb
inc
leave
sti
sahf
add
stc
push
in
test
pop
cmp
add
mov
push
lret
arpl
lods
xchg
inc
icebp
adc
or
test
test
xchg
dec
xchg
push
pop
lahf
test
lds
cmp
push
jno
pusha
sub
jge
jbe
sub
repnz
lods
cmc
or
out
int3
mov
hlt
mov
pop
aam
shl
cltd
lods
add
xchg
addr16
les
cwtl
add
xchg
in
jns
negb
inc
outsl
jg
mov
inc
repnz
jmp
insb
rclb
loop
inc
ror
cli
scas
mov
jg
mov
in
or
movsb
dec
in
mov
cld
inc
push
xor
or
pusha
mov
inc
dec
jl
rolb
mov
dec
inc
daa
mov
mov
or
mov
std
inc
add
push
sbb
pop
fptan
sbb
es
in
test
test
shrb
inc
dec
sub
ja
sti
in
addr16
imul
ds
and
add
add
push
adc
sbbl
int
ficoms
dec
in
es
cmp
pop
aas
leave
pop
and
adc
mov
push
das
jecxz
pop
cmp
adc
jne
jg
int
aas
jmp
xchg
aad
or
js
lcall
xor
pop
shll
inc
pushf
loopne
mov
sti
mov
shlb
shll
mov
sub
push
sti
fildll
mov
jnp
sub
mov
jle
outsl
rclb
jbe
pop
addr16
pop
clc
out
into
sub
pop
and
and
sahf
addr16
sahf
inc
push
or
mov
rclb
int
rcrb
pop
or
jbe
dec
repz
sbbb
lods
testb
adc
cmp
mov
add
ror
clc
adc
jae
inc
push
in
ljmp
rcll
out
push
in
jg
jl
imul
mov
pop
test
push
jle
fdivrs
adc
xor
jmp
xchg
rcll
bound
lcall
mov
leave
bound
test
daa
pop
adc
mov
adc
push
int3
clc
mov
aas
inc
mov
push
xor
leave
adc
addr16
data16
sbb
lds
popf
push
fwait
mov
sub
push
andb
lahf
sub
xchg
int
inc
jp
push
repnz
push
hlt
fsincos
filds
add
clc
push
lock
xchg
lret
sahf
fmull
cmpsl
movsb
jge
jecxz
dec
mov
idivl
fdivp
mov
imul
add
dec
out
ljmp
mov
mov
push
or
outsb
insl
sbb
mov
cmp
dec
xchg
dec
vmovdqu
ljmp
cmp
mov
dec
out
inc
sbb
push
scas
cmc
cmp
and
cwtl
xchg
or
jns
testl
into
sbb
out
gs
test
into
xorb
mov
outsb
or
jge
mov
rorb
fbstp
pop
push
add
out
je
cmp
imul
nop
jae
cmp
out
js
loop
mov
popa
bswap
and
hlt
dec
mul
pop
jnp
outsl
pop
jecxz
stos
sbb
call
mov
inc
cmpsl
xchg
enter
jb
rcrl
mov
push
mov
mov
es
sbb
mov
and
pusha
pusha
push
mov
jno
pusha
push
add
mov
clc
cwtl
addb
test
out
lahf
sub
packsswb
sbbb
loop
jmp
adc
jmp
pop
inc
jmp
mov
mov
xorb
int
jne
fstps
out
lock
pop
pop
fsubrs
cmpsb
aas
xchg
pop
mov
mov
push
andl
daa
in
or
in
dec
jb
cmp
gs
negb
dec
mov
add
cwtl
or
popa
mov
mov
les
lea
add
fnstsw
aam
ficoms
sub
mov
fwait
pop
enter
mov
inc
test
jne
mov
sahf
mov
repz
xchg
ljmp
pop
and
pop
faddl
aam
je
push
rolb
rorl
push
pushf
push
scas
add
addr16
loope
outsl
imul
bound
ror
rorl
in
lods
mov
cmpsl
shr
testl
out
scas
lret
and
dec
adc
dec
adc
mov
mov
push
sbb
push
or
adc
nop
xlat
fsts
push
iret
arpl
rcrl
dec
dec
out
pop
xchg
mov
fnstsw
adc
mov
dec
fisubs
sbb
lahf
test
xchg
scas
loopne
mov
xchg
lea
das
push
inc
add
cltd
inc
filds
mov
jmp
pop
sbb
lahf
pusha
push
nop
enter
je
pop
add
jne
cmc
inc
cmpsl
jecxz
ljmp
inc
aaa
cmp
mov
jbe
inc
test
cli
loope
xchg
cmp
leave
faddl
das
push
mov
test
jo
movsb
or
add
fs
or
cmp
data16
push
pop
jle
insl
jle
sti
jg
pushf
notb
test
lea
cmpsb
xchg
je
xor
lods
repnz
or
mov
cmp
xor
push
gs
mov
cld
jns
xor
inc
dec
outsl
test
inc
dec
in
xor
pop
push
cmp
ret
stos
js
add
dec
mov
bound
inc
inc
inc
jae
pop
mov
dec
jb
loopne,pt
leave
stc
jg
mov
incb
in
mov
xchg
dec
cmp
mov
mov
cmp
cmp
jl
mov
outsb
and
xchg
mov
jmp
jns
bound
je
lahf
push
inc
mov
cs
int
add
sub
popf
iret
and
fisubl
mov
int
scas
movsl
pusha
lds
push
mov
or
inc
xor
mov
jle
sbb
push
push
lcall
cltd
sbb
xchg
lods
sub
ret
jle
dec
test
xchg
push
pop
pushf
cpuid
add
jecxz
pop
xor
dec
leave
rcrl
cmp
inc
neg
jo
stos
cmpsb
jmp
inc
std
outsb
inc
loop
and
ja
lods
fwait
adc
out
adc
sub
add
push
add
out
or
cmp
mov
xchg
movsl
gs
in
mov
sbb
je
sbb
fistpl
mov
orb
push
loopne
push
add
jae
mov
dec
ret
pop
xchg
dec
sbb
and
movsb
or
pusha
in
sub
pushf
cwtl
scas
dec
pusha
mov
out
mov
push
cmp
ret
sbb
push
iret
mov
fldenv
jle
xchg
add
sarb
vminpd
sub
mov
pushf
movb
adc
xchg
lret
adc
jns
pop
sub
aaa
daa
mov
mov
cmp
jne
cmp
xchg
cmpsb
stos
jge
push
loope
add
mov
insb
ss
inc
cmp
fistl
sub
add
jecxz
xchg
or
sbb
adc
or
ja
jle
xor
push
aas
or
and
daa
rcrl
inc
mov
sub
jb
imul
add
aam
cmp
pusha
outsl
decl
adc
inc
fwait
cmp
and
cmc
push
lock
lea
push
in
pushf
cmc
mov
scas
imul
fidivrs
out
push
stc
xchg
out
pop
sti
jg
cltd
ja
in
adc
mov
inc
cs
lret
inc
add
sti
mov
inc
sbb
jge
lds
jl
or
xor
stc
decb
addl
pusha
ret
mov
nop
mov
test
mov
or
adc
imul
pop
pop
lds
push
and
dec
jne
arpl
ss
pop
or
or
push
repz
mov
xlat
jl
addr16
in
stos
xlat
call
mov
pop
cmpsb
mov
aad
addb
mov
in
test
aad
mov
add
sahf
pop
les
dec
popa
add
mov
pusha
arpl
xchg
inc
cmc
cltd
add
xor
popf
or
push
push
aaa
stos
mov
mov
call
inc
inc
ret
fnstenv
mov
and
fdivs
mov
sbb
loop
pop
cmp
sarb
ror
sbb
movsl
aas
xchg
lret
sbb
fidivs
mov
in
stos
ret
mov
sub
xor
inc
scas
mov
add
arpl
ss
into
jno
cmp
in
aaa
or
sub
jmp
cs
icebp
xchg
mov
mov
leave
je
iret
or
xchg
jecxz
cmc
in
outsl
nop
cmp
adc
mov
mov
or
sarl
mull
pop
pop
popf
outsl
fdiv
ja
subb
clc
cmc
aas
xlat
out
movsb
jb
arpl
iret
scas
cli
mov
rorl
mov
fnstcw
xor
jo
icebp
dec
cmp
sub
sub
pop
sub
xchg
or
fcomps
aad
int
mov
out
inc
fdecstp
daa
test
xor
in
sarw
test
ss
add
stos
dec
jl
push
xor
pop
inc
xchg
ss
add
test
xor
nop
repz
mov
mov
mov
ret
fiaddl
je
lret
dec
jl
mov
jle
rclb
xchg
cmp
subl
jmp
das
adc
dec
jnp
loop
fmuls
jp
cmp
mov
add
je
lcall
adc
xchg
bound
sbb
add
push
imul
sahf
sub
cmc
xchg
subb
shlb
mov
cmpsb
out
xchg
stos
fdivr
orb
xor
xor
push
push
inc
mov
xchg
adc
pop
jno
cmp
rorb
mov
mov
sub
xchg
out
jmp
pusha
sbbb
addr16
cld
lods
push
xor
les
ret
adcb
or
faddp
xor
mov
lods
popf
mov
jl
repz
in
fs
test
dec
nop
push
and
mov
outsl
push
or
xor
sti
lret
sub
add
addr16
cli
mov
cmpsb
ds
fsubp
or
pop
sbb
sahf
test
bound
cli
mov
mov
xor
test
adc
divb
hlt
xchg
cmpsl
fisttps
xchg
push
call
daa
pop
stc
fsubrs
push
out
ficompl
jb
mov
adcl
mov
ret
inc
stos
cmpsl
sbb
fisubl
xchg
iret
pop
inc
jbe
mov
pop
jp
jns
leave
and
adc
push
mov
cwtl
int
push
xchg
sbb
jno
shr
push
shrb
mov
arpl
sbb
repz
data16
xchg
iret
nop
aas
lea
pushf
push
pop
aaa
int3
sahf
pop
sub
scas
out
lahf
add
call
pop
and
inc
nop
clc
and
xor
push
xlat
gs
mov
repnz
fmull
movsb
ds
xchg
add
int
dec
jecxz
cmp
lret
sti
or
testb
aad
cmpsl
xchg
or
dec
inc
fwait
jbe
pop
rclb
dec
and
jmp
xchg
inc
lock
jbe
mov
in
push
sub
ljmp
ret
fists
imul
mov
fildl
ljmp
mov
cld
fiaddl
xor
pop
fldcw
mov
stos
test
inc
cwtl
in
jno
push
addr16
andl
mov
ljmp
insl
lahf
aaa
fimuls
scas
mov
add
scas
dec
aad
mov
add
jbe
inc
xor
aas
xlat
test
in
popf
xchg
dec
inc
add
loopne
aaa
cmp
xchg
insb
or
inc
ss
xchg
pusha
mov
jae
out
mov
fs
stc
rcll
xchg
lods
jecxz
movsl
ljmp
mov
scas
xchg
cli
xchg
shld
push
aaa
scas
and
xor
aam
cmp
in
and
divl
je
ds
mov
jge
pop
and
cs
mov
repnz
and
mov
nop
adc
cmpsb
pop
test
test
cmp
xchg
xchg
inc
data16
idivl
loope
cmp
repnz
inc
out
pop
xchg
pop
inc
dec
movlps
jg
mov
xor
mov
sbb
mov
inc
mov
sbb
cli
sub
hlt
mov
and
sar
test
mov
adc
pop
cmp
dec
sub
ljmp
scas
inc
sub
cmp
mov
mov
pop
push
cwtl
jmp
xor
repz
cmp
aam
add
subb
add
mov
xchg
push
in
cmp
fmuls
xchg
ret
loopne
pop
sbb
dec
or
fwait
outsl
out
popa
hlt
cs
mov
add
lcall
cmp
inc
cmp
xchg
pop
fildll
divl
xor
push
outsb
dec
pop
mov
dec
ljmp
inc
enter
int3
xchg
mov
dec
pop
ja
jb
mov
cmpsb
xchg
fbstp
mov
add
mov
dec
stos
push
mov
js
nop
pop
repnz
sub
out
daa
fidivs
cmp
inc
mov
cwtl
shl
leave
xor
pop
test
bound
roll
cmp
and
adc
dec
pushf
fmull
pop
mov
idivl
push
addr16
mov
sub
xlat
jmp
push
sbb
xchg
adc
scas
test
or
xchg
jne
xlat
sub
enter
cmp
pop
xchg
inc
dec
dec
mov
and
orb
aad
push
adcl
and
sarl
insl
xor
das
pop
push
lods
movsb
out
dec
xor
jb
mov
jmp
lcall
dec
sarl
sarl
sahf
ret
lret
gs
das
sbb
aas
iret
fs
aaa
or
lods
xchg
push
and
xchg
xchg
or
cmp
insl
cltd
adc
imul
sbb
pop
dec
rcrl
add
mov
xchg
mov
inc
repnz
int3
jg
lds
nop
inc
dec
mov
xor
xor
ficomps
fiadds
jbe
stos
loop
xchg
push
outsb
adc
js
xchg
in
shrb
fidivs
les
fs
out
incl
push
lea
cld
mov
inc
sub
inc
jnp
std
push
fsubs
dec
or
push
mov
out
cmp
ret
in
mov
dec
sahf
xchg
add
add
push
inc
or
mov
lcall
or
mov
pushf
mov
inc
data16
and
sbb
jae
jns
pop
jno
push
sub
xor
aad
inc
pop
jge
sbb
mov
test
sbb
jns
jp
int3
xor
pop
sub
andl
imul
mov
pop
jle
xor
cltd
stos
sarl
and
dec
push
cmpsb
jno
or
adc
mov
sbb
test
inc
or
sbb
mov
mov
cmpsl
inc
jae
jb
aas
aas
sbb
test
ds
ret
shr
movsb
sbb
sub
jg
add
aas
add
divb
xchg
lret
cmp
mov
fildl
aas
andb
lret
mov
xor
scas
cmpsb
mov
jg
or
sti
stc
mov
hlt
or
jmp
pop
out
out
std
mov
pushf
mull
jg
add
fadd
mov
fldt
clc
xor
cltd
or
lock
enter
sbb
mov
rolb
push
dec
push
jb
stos
rep
xchg
aas
add
xor
xchg
sahf
icebp
mov
lret
sbb
adc
in
lahf
mov
dec
and
inc
movsl
sbb
add
xor
xlat
je
stc
out
clc
sbb
shll
into
mov
sub
bnd
and
push
ss
and
mov
sbb
lods
jecxz
jae
mov
js
push
and
jb,pt
pop
sti
nop
lock
or
add
cmp
mov
xchg
inc
mov
and
sub
sbb
addr16
lret
and
mulb
lods
cltd
sti
xchg
adc
int
xchg
fldl
mov
gs
rolb
push
insb
orl
stos
dec
pop
mov
clc
dec
data16
rorl
dec
pop
bound
pop
aas
lds
das
cmp
mov
mov
rcll
repz
je
jmp
mov
pop
stos
addl
inc
sub
cli
dec
icebp
jb
push
loopne
inc
mov
popf
in
pop
push
andl
pop
jp
mov
adc
fs
dec
fistpll
mov
dec
cmp
jno
mov
inc
loop
movsb
and
outsl
xlat
sbb
push
cli
fadds
jp
xlat
jno
movsb
icebp
xor
jl
inc
jge
jo
xchg
repz
repz
mov
jg
out
repnz
clc
in
icebp
xchg
jp
pop
push
push
repz
jns
loop
mov
mov
lret
xor
inc
pmulhw
arpl
ret
and
notb
mov
or
mov
pop
loopne
movsb
jle
sub
xlat
inc
in
inc
shl
ljmp
push
jne
outsl
sub
test
and
addr16
xor
mov
enter
jb
fisubrl
push
cmc
in
imul
or
mov
inc
and
sbb
sbb
imul
sub
push
dec
pop
xchg
call
xchg
or
sarb
mov
sub
push
int
hlt
ret
mov
clc
and
pusha
mov
mov
push
add
js
mov
ret
jmp
lahf
int
mov
stos
push
and
fucomip
popa
scas
test
push
sarl
popa
dec
inc
push
sbb
lcall
int3
add
ds
adc
pop
sbb
xchg
repnz
push
push
dec
xchg
or
insb
and
inc
fdivr
mov
add
push
jecxz
push
mov
xchg
ucomiss
mov
jge
ret
leave
pop
inc
data16
shl
scas
cmpsb
stos
push
scas
stc
jmp
xor
and
das
cmpsb
cmp
sub
sbb
roll
and
std
daa
leave
ret
add
jecxz
xor
js
les
or
pushf
bound
and
dec
std
sbb
sub
mov
imul
mov
add
rcll
fiadds
mov
sti
cmp
sbb
or
lret
stos
stos
jo
xor
fcomps
or
jecxz
stos
pop
sub
fldl
les
jne
sahf
adc
xchg
stc
inc
in
sbb
cmpsl
mov
decb
popa
sbb
stos
push
jae
and
jl
pop
sbbl
add
insl
mov
and
iret
pop
push
inc
xor
fildll
inc
push
cmp
insl
ffree
ficoml
in
cltd
lods
insl
add
stc
ljmp
mov
jno
push
cmpsb
in
nop
sub
mov
es
notl
lcall
pop
lock
inc
or
fstpt
mov
das
movsl
cld
pop
dec
adc
push
xor
shl
stc
xchg
inc
shrb
and
mov
cmpsl
ret
mov
ret
fs
int3
imul
push
jl
fcomp
sti
xchg
dec
ret
mov
rol
data16
fildl
mov
lret
adc
fcoms
dec
aad
sbbb
dec
test
adc
sbb
jnp
add
cmp
jl
clc
xchg
pop
in
mov
in
xchg
cmpsl
cmpl
in
pop
lahf
sbb
imul
adc
jne
je
out
push
mov
mov
imul
mov
sub
scas
inc
sti
xchg
xchg
pop
push
in
out
aad
cmp
or
js
cmp
xchg
push
stos
cmpsl
push
sbb
fwait
xor
bound
mov
imul
in
testb
insb
xchg
xchg
ljmp
inc
add
fsubs
mov
or
shlb
or
fwait
js
sbb
jecxz
das
xchg
jge
jge
xchg
or
or
or
cmp
or
and
ja
data16
out
jg
lcall
push
fxtract
pusha
xlat
push
dec
sub
xor
xor
dec
iret
cltd
sarl
stc
ljmp
jmp
xor
pop
lcall
sub
lcall
out
mov
sahf
mov
jle
loopne
adc
mov
inc
jae
cli
cmp
inc
xchg
xor
lcall
cld
das
dec
push
dec
and
mov
jae
das
mov
outsl
mov
xchg
or
lock
dec
mov
sub
mov
cli
mov
lods
into
lea
je
or
into
fwait
daa
iret
lret
test
sbb
dec
outsb
movsb
add
outsl
icebp
jbe
xchg
sbb
and
hlt
les
rcrb
adc
adc
into
mov
sub
nop
bound
and
setg
sahf
cli
sub
inc
pop
cmpl
ficomps
hlt
inc
pop
das
notl
adc
dec
out
inc
es
aad
adc
cmp
xor
pop
sub
mov
dec
sub
je
loopne
and
xor
loop
pop
lahf
subl
out
mov
mov
cmc
xor
mov
imul
aad
xchg
out
scas
inc
icebp
dec
add
ffreep
cmp
mov
fsub
xor
int
dec
repnz
inc
and
push
lcall
and
xchg
sub
movsb
in
jmp
mov
mov
fs
imul
mov
adc
xchg
stc
lret
dec
lret
jnp
jno
int3
lock
inc
add
pop
lret
sub
cmp
lahf
cmp
iret
fnstenv
lock
jb
fsubr
cltd
fcompl
leave
popf
test
icebp
subb
sub
roll
push
jnp
push
mov
aaa
add
incb
stos
stc
mov
cmp
fisttpl
in
fbstp
mov
push
jae
inc
dec
inc
cmp
sbb
pop
insl
outsb
iret
cmp
pop
stos
jnp
add
cmpsb
mov
cmp
push
popa
jp
sahf
daa
loop
pop
push
cli
xchg
jnp
das
sbb
loopne
push
mov
sbb
or
jns
sbb
andl
sarb
rorl
adc
xchg
or
pusha
mov
mov
mov
andb
push
push
int
cmc
push
lods
jle
cmp
sbb
pop
call
rolb
test
scas
cmp
cmp
adc
dec
repnz
in
sti
cmc
icebp
out
arpl
push
xchg
or
dec
xchg
or
pop
add
insb
into
inc
int
aam
test
lret
fldt
dec
or
lods
xor
jo
sub
push
mov
cltd
imul
push
lods
clc
add
gs
pusha
push
mov
sahf
ret
pop
jno
stc
aaa
push
mov
dec
ds
je
cli
test
lods
test
daa
fcompl
xchg
cmc
fwait
out
sahf
mov
push
xor
pushl
pop
push
lods
sarb
fdivs
out
sbbl
or
loope
ljmp
mov
pop
rcll
xchg
adc
xor
xchg
mov
xor
jne
lea
push
cmp
pop
mov
gs
arpl
jmp
rorb
adc
jle
lds
leave
pop
pusha
dec
cmp
loope
es
jmp
xchg
or
xor
push
inc
test
ds
ret
jo
or
jb
hlt
aam
adc
shlb
test
shll
cmp
mov
jle
jl
cwtl
mov
pop
aas
xor
aaa
movsb
mov
push
sbb
arpl
dec
pusha
sti
mov
vmaxss
pop
sbb
mov
jo
sbb
mov
stos
xchg
cld
scas
pushf
push
test
in
outsl
cwtl
push
ss
adc
cmp
enter
scas
and
stos
push
sub
data16
ds
in
pop
sbb
xor
bound
nop
sbb
dec
mov
cmp
adc
and
mov
add
es
jp
mov
mov
je
add
cmp
mov
movsl
ret
test
imul
and
pusha
dec
lods
clc
pop
mov
mov
xchg
imul
or
movsb
fcomi
insb
jecxz
int3
xor
data16
das
sub
int3
xchg
mov
decl
test
xchg
push
jne
push
loope
and
sub
pushf
scas
out
sbbb
add
sub
test
stos
aaa
inc
test
inc
andl
add
out
adc
pop
fistpll
movsl
fistl
iret
jae
xor
mov
sbbl
lods
fisubrl
and
pop
lea
cli
mov
fwait
pop
mov
aas
es
fisubrs
push
pushf
mov
js
and
lds
pop
mov
sub
fs
jb
outsl
push
mov
aas
mov
iret
mov
icebp
xor
dec
popf
inc
sbb
adc
jnp
or
jge
add
std
jmp
inc
out
mov
cmp
addr16
ljmp
fists
mov
scas
into
adc
pop
clc
in
out
inc
jg
adc
sbb
cltd
popf
dec
mov
xor
add
ficompl
add
jecxz
mov
and
sahf
mov
mov
jl
pop
jg
lret
fdivl
jb
aad
jecxz
add
loope,pn
insl
enter
pop
pusha
ljmp
gs
sbb
pop
jge
cmp
cmpl
pop
popf
insb
cmp
push
jns
inc
movsb
jg
loop
push
add
pusha
dec
and
jge
push
pop
dec
jle
add
stos
sbb
mov
lcall
push
cmp
pop
cmp
cs
int3
stos
shrb
add
lods
mov
arpl
clc
add
cmp
add
ljmp
push
in
in
ficomps
jl
daa
lock
push
mov
outsl
or
scas
or
scas
es
mov
pop
xchg
ds
lea
push
sub
inc
adc
lods
pop
call
mov
mov
xchg
pop
xchg
das
cld
push
jl
jbe
inc
cwtl
cwtd
test
ror
adc
mov
mov
push
add
add
ret
cmc
imul
je
and
pop
xchg
mov
jle
stos
add
faddp
addr16
jne
cwtl
lcall
enter
lret
mov
in
ss
repnz
lret
adc
mov
popa
out
addl
mov
xchg
lret
fisubrs
and
xor
or
xor
shlb
fnsave
pop
adc
xor
dec
push
inc
pop
repz
cs
lea
inc
das
movb
dec
xor
push
ror
scas
std
inc
cmp
iret
fstp
enter
sbb
mov
mov
mov
xor
stos
cli
mov
mov
lds
fsubr
aas
daa
out
cmp
fwait
jecxz
sub
mov
cmp
xchg
pop
out
push
aas
pop
pop
and
sbb
scas
xchg
out
cwtl
fwait
cmp
pop
jo
scas
mov
xorb
aas
cltd
in
mov
outsb
out
std
sub
mov
js
pop
xchg
jge
mov
in
jmp
jno
stc
and
test
popf
lods
sub
jmp
out
ljmp
adc
sub
cld
cmp
cld
dec
mov
cmpsl
lds
cmpsb
fdivrl
pop
sub
pop
addb
movsl
imul
inc
mov
push
add
scas
mov
mov
sbb
mov
idivl
fwait
cwtl
add
inc
pop
push
stos
into
xlat
xor
sti
arpl
or
icebp
fcompl
push
mov
mov
or
addr16
imul
and
idiv
add
push
push
mov
popf
inc
lods
jg
mov
mov
imul
sbb
test
push
and
jmp
sub
jnp
pop
out
xchg
add
jne
or
cmp
lcall
test
sahf
push
inc
ss
adc
jp
inc
pop
lret
stos
dec
cltd
sub
inc
mov
mov
jecxz
xor
cmp
es
cmpb
mov
mov
js
or
mov
imul
cmp
testb
inc
pop
faddl
push
lcall
push
aam
cmp
add
ljmp
ss
in
push
pop
popl
test
imul
lcall
cmp
push
ljmp
shlb
or
lea
dec
jl
fldenv
shll
jns
sbb
cmp
sbbl
jmp
add
pop
aad
inc
mov
inc
pop
mov
mov
mov
scas
or
or
mov
push
repz
pop
mov
outsl
test
int3
jecxz
loope
add
dec
jne
inc
std
test
add
push
or
addl
lods
pop
adc
mov
xchg
notl
xor
sub
ret
lods
mov
int3
or
insb
pop
sub
mov
mov
rcrl
xor
pop
dec
in
imul
add
mov
into
jnp
mov
pop
testl
sahf
push
setnp
jb
pop
mov
cmpsl
jnp
popf
cmp
push
int3
sbbl
add
test
outsl
rclb
cmc
jnp
jno
sub
or
cmp
adc
movsl
xor
cmp
push
sbb
mov
dec
adc
jmp
lret
enter
es
enter
in
nop
push
xor
pusha
mov
aam
shlb
aaa
pusha
push
adc
xor
mov
sahf
jbe
or
mov
xchg
ret
or
pop
mov
aas
cmp
cmp
pop
pop
insb
mov
pop
mov
mov
and
ss
pusha
jecxz
inc
dec
add
adc
popl
aad
repnz
mov
mov
andl
outsb
mov
jl
aaa
push
adc
test
sbb
test
lahf
rorb
call
lret
repnz
jne
push
mov
shl
idivb
mov
cmp
leave
roll
rcl
cltd
out
ss
sbb
ss
stos
in
rcrl
sub
cmc
pop
in
mov
dec
lods
adc
xchg
mov
nop
dec
je
inc
lret
mov
pop
add
mulb
test
inc
test
dec
push
fwait
add
es
hlt
les
sub
jo
in
mov
mov
iret
lods
inc
or
adc
out
sbb
cwtl
and
sub
stos
push
leave
ficoml
daa
cmp
lahf
and
lea
roll
xor
aaa
in
jns
push
cmp
cmpl
sub
or
inc
push
shl
lods
xchg
or
jp
or
sub
mov
or
pop
jo
jbe
inc
dec
out
test
shl
mov
out
cmpsb
in
int
mov
sbb
hlt
gs
fstl
xlat
insb
jl
into
cmp
movsb
push
and
jbe
cwtl
sahf
lcall
test
mov
lods
fldcw
mov
pop
dec
sbb
adc
mov
fcomps
mov
or
inc
push
push
jbe
mov
in
mov
repz
or
inc
sbb
push
jnp
mov
pop
jp
xchg
fcompl
cld
dec
shll
sbb
movsl
jl
inc
mov
push
addl
push
dec
add
xchg
cmc
jbe
sub
test
sbb
mov
pop
xor
rcr
ljmp
sbb
leave
add
xchg
fs
jmp
or
ja
out
lods
enter
loopne
mov
sbb
mov
mov
loope
mov
subb
add
pop
lahf
out
jbe
repz
xchg
icebp
repnz
js
xor
popf
ja
shrb
repz
movsb
cmp
adc
add
jle
out
bound
loope
pusha
aaa
fs
push
mov
loop
inc
loop
push
fdivrp
fbstp
test
test
decl
fdivrp
popf
mov
mov
testl
add
mov
jno
icebp
adc
sub
in
jnp
stos
pusha
adc
mov
sub
cmp
dec
push
inc
arpl
aaa
sti
jne
iret
add
outsl
stc
push
and
mov
inc
in
sbb
imul
loope
pop
stos
push
adc
leave
addb
call
mov
mov
jb
xchg
inc
mov
or
aad
daa
xor
pop
push
js
sbb
outsb
and
mov
xchg
jo
shll
dec
jl
push
add
or
mov
sbb
sub
xorb
jo
fmul
mov
lods
xor
xor
ret
andl
push
sbb
orl
adc
ret
adc
inc
or
filds
movb
pop
outsb
xchg
or
push
mov
cltd
dec
pcmpeqw
add
lds
popf
clc
mov
popa
pop
xchg
dec
push
adc
test
xor
loope
or
and
cwtl
sub
add
cltd
in
loop
mov
adc
pop
cmp
addb
sahf
cmpsl
push
push
je
insb
or
rcrb
cmp
pop
adc
inc
pop
xchg
dec
orb
out
pop
adc
or
or
pop
sub
or
mov
nop
adc
loop
orl
jno
mov
clc
int
shl
sbb
inc
jp
pop
sbb
sbb
mov
jae
leave
push
out
repnz
stos
pop
das
cwtl
jecxz
int
pop
cmp
cld
dec
std
mov
push
push
lahf
mov
movsl
push
mov
lcall
pop
orb
xor
cltd
cmp
push
test
ret
mov
add
add
jmp
lret
pop
testb
iret
fisubrs
push
mov
inc
cmp
xchg
ret
movsb
mov
xorl
mov
mov
lahf
cmpsb
and
nop
xchg
mov
push
mov
mov
lret
repnz
ficoms
or
and
or
sub
xlat
cs
shll
mov
inc
loop
cmp
jno
inc
sub
or
jg
ds
mov
push
xor
jp
inc
xchg
xor
pop
and
andb
mov
jo
aad
loope
push
and
mov
cmp
xor
sti
lods
sbb
popf
movsl
notb
outsb
dec
test
xchg
adc
xchg
inc
pop
rcrl
test
mov
cli
cld
out
je
inc
inc
dec
adc
in
push
stc
aad
cmp
jmp
or
movb
in
push
inc
add
std
xchg
xor
arpl
adc
loope
lock
mov
out
cmpsb
subb
out
imul
xchg
cli
mov
into
out
dec
ret
xchg
adc
testb
fs
mov
adc
push
dec
cmpsl
pop
in
std
sti
jl
jbe
xchg
movsb
jp
fdivrs
xlat
mov
or
das
jge
mov
repnz
andb
aam
pop
and
fldenv
scas
push
lds
loope
xor
out
adc
push
test
push
and
fwait
xchg
out
lret
jbe
push
mov
cmp
test
inc
push
dec
jno
fistl
cs
int3
adcb
shrb
jae
mov
xor
mov
push
jmp
dec
popa
add
inc
push
jne
idiv
xchg
addr16
icebp
cmp
clc
fidivl
je
push
mov
std
dec
loope
sub
notb
leave
popf
cwtl
out
xchg
inc
sbb
mov
or
gs
das
div
gs
push
or
xorl
lods
rclb
xor
sub
pop
fsubrl
leave
push
fmulp
add
xchg
dec
in
sub
cmp
fwait
xchg
pop
pop
or
pop
popa
jmp
jns
mov
mov
and
xor
mov
inc
inc
add
pop
sahf
rclb
sub
pop
xor
repz
andl
repz
pop
rcrb
dec
mov
dec
push
mov
inc
ss
inc
add
jecxz
jle
mov
xor
lock
jmp
pop
mov
push
xor
cwtl
idiv
jo
pop
out
adc
decb
mov
pop
or
dec
lea
sub
cmpsb
loopne
stc
fstp
sub
cltd
xor
push
mov
rorl
icebp
mov
mov
sbb
mov
fiaddl
push
outsl
leave
xchg
test
in
loop
fisubrl
lret
gs
mov
int3
rolb
subl
ficoml
and
or
popf
sbb
mov
cmp
lcall
jns
enter
and
mov
push
sbb
add
mov
sub
loope
mov
mov
adc
push
pop
lds
xor
cs
sbb
inc
push
fsubl
aad
xor
dec
out
xchg
xchg
nop
and
jb
or
push
mov
sahf
insl
adc
ja
mov
dec
popa
popa
or
or
xchg
push
inc
fadds
aaa
xchg
add
jp
and
sti
push
addr16
add
xor
adc
mov
dec
clc
stos
xor
push
cli
mov
scas
mov
dec
xchg
sbb
hlt
outsb
stos
adc
ret
std
repz
or
adc
out
add
cmp
movsb
sahf
sahf
jne
inc
js
imul
icebp
cmp
popa
mov
aas
push
pop
pop
jne
divl
mov
xor
dec
pop
jp
fsubs
out
ja
daa
jecxz
cmp
arpl
xchg
xchg
popa
rclb
test
push
in
push
lret
filds
mov
and
mov
les
cmp
cwtl
inc
mov
cmp
dec
xchg
aas
imul
ret
and
ret
scas
add
add
arpl
mov
push
mov
lea
lret
dec
push
popaw
mov
arpl
mov
inc
ret
or
insl
add
cltd
cwtl
inc
scas
sbb
and
or
inc
push
mov
and
scas
pop
rorb
push
test
dec
sub
enterw
les
mov
call
push
sub
xchg
idiv
aam
enter
sub
push
lahf
sub
adc
nop
leave
imul
out
adc
mov
add
inc
mov
dec
push
leave
pusha
subl
sub
out
lahf
aad
inc
pop
xor
mov
sbb
mov
and
sbb
inc
ret
adc
shrl
out
xchg
mov
xchg
les
push
repz
mov
pusha
cmpsb
fld
adc
adc
xchg
aaa
test
adc
pop
sbb
ss
push
cmp
sahf
adc
adc
or
rcrl
mov
inc
dec
mov
fildll
lea
inc
out
or
xchg
loopne
and
mov
sub
inc
imul
jbe
mov
cmc
dec
fiaddl
jbe
adc
int3
aaa
loope
xchg
mov
xchg
mov
dec
testl
mov
xchg
mov
cmp
pop
mov
out
dec
cmpb
lcall
and
jecxz
fistps
loop
mov
out
imul
sbb
sub
jbe
push
out
mov
mov
call
sub
addl
jp
outsb
loope
iret
push
je
arpl
sbb
movsl
sbb
das
pop
clc
stos
xor
mov
jns
scas
dec
std
mov
sbb
insb
pop
push
add
ret
adc
test
ret
sbb
lea
hlt
lret
push
imul
stos
enter
or
xorps
pop
out
push
xlat
mov
data16
sub
inc
lahf
stos
jp
adc
scas
scas
rorb
mov
cld
push
mov
sub
jns
push
lock
mov
xchg
mov
mov
out
xor
cld
dec
lret
and
ret
cwtl
push
add
jae
negb
lods
fdivr
cmc
lcall
hlt
fdivrs
pop
cmp
mov
shll
pop
dec
sbb
mov
adc
rorb
cmpsl
adc
cmpsb
cli
jno
mov
or
cmp
fadds
adc
mov
push
lcall
js
sahf
subl
adc
cmp
jge
shlb
and
rcll
mov
cwtl
test
adc
mov
pop
es
mov
insb
dec
fs
inc
cmpsb
in
insl
mov
xchg
mov
or
add
hlt
pop
sbb
mov
aaa
ret
xchg
call
pop
and
sbb
mov
lret
sbb
popf
mov
loopne
cltd
call
dec
push
outsb
fsubrl
adc
xchg
nop
lods
mov
rclb
dec
shlb
in
vrcpps
mov
mov
sarl
out
sbb
add
lcall
lods
pop
hlt
test
cmpb
test
sbb
dec
sub
sti
jb
pop
fwait
mov
adc
cmpsl
fistpl
push
pop
push
mov
cmp
cmp
add
sbb
popf
xor
mov
pushf
clc
sub
inc
lea
push
mov
push
shrl
push
mov
cmpsb
mov
fs
std
mov
popa
inc
pop
jle
lock
and
test
inc
pop
nop
jg
add
fwait
xchg
pop
lods
jae
dec
out
adc
mov
xchg
and
les
ret
cmp
xchg
outsl
jb
dec
or
xor
sbbb
lcall
push
ficompl
pop
dec
out
mov
lret
pop
fs
arpl
mov
rcrb
inc
adc
adc
and
daa
lock
dec
push
sarb
les
jno
fwait
mov
inc
into
inc
popa
notl
addr16
adc
sub
adc
xor
jp
popf
cmp
into
loop
je
inc
sub
cmp
pop
sub
aam
inc
outsb
fnstsw
lds
out
in
lret
dec
push
pushf
mul
mov
cld
lock
inc
mov
cmp
je
xchg
repz
les
das
or
loope
daa
mov
jnp
or
xor
fdivl
fstpl
sbb
imul
rclb
jecxz
and
mov
leave
adc
pusha
lea
cmpsb
cmc
pushf
and
adc
mov
shl
add
add
mov
icebp
dec
jl
cmpb
int
into
loope
push
or
out
lcall
mov
sbb
popa
movsl
mov
adc
repnz
push
insl
out
jae
icebp
call
fcom
and
lret
push
mov
je
jno
add
xor
clc
mov
es
scas
aam
enter
lcall
pop
and
out
add
into
sbb
adc
lods
shll
test
pusha
shrb
cmpsl
lret
mov
mov
popa
push
inc
add
lock
cld
xchg
push
push
dec
sbb
sub
push
adc
sbb
xor
movsb
sub
pop
mov
sbb
icebp
add
imul
jo
cmpsl
lds
lds
or
xor
adc
sarb
dec
pop
stc
fs
adc
push
test
mov
sub
inc
sahf
lods
rclb
dec
incl
mov
cs
in
fnclex
or
mov
fcmovb
push
stc
mov
xor
shrb
stos
and
mov
mov
or
fucomip
mov
or
hlt
fxch
adc
inc
lods
mov
imul
insb
loopne
inc
roll
stc
push
dec
xchg
in
cli
inc
jl
aam
jmp
sub
int3
jmp
addl
push
and
shr
mov
cmp
mov
repnz
sub
mov
lods
jns
push
inc
pop
leave
jae
push
mov
int3
popa
xor
nop
inc
push
cmp
add
enter
sub
lds
xor
mov
mov
adc
out
es
jp
dec
cmpb
pop
fsubr
cs
and
cmp
mov
js
call
mov
add
js
mov
pusha
mov
push
rcl
jbe
pop
add
mov
mov
fsubs
push
mov
push
xchg
andl
fsubr
jmp
shlb
adc
add
xlat
push
jmp
stc
aaa
push
mov
mov
mov
jle
ret
sub
arpl
pop
test
jge
mov
mov
xchg
ss
pusha
pushf
movsl
push
leave
clc
scas
mov
mov
dec
dec
out
sub
mov
push
movsl
lret
loopne
mov
in
sbb
cmp
push
js
aaa
push
or
out
jnp
mov
dec
pop
lea
cmp
and
nop
ss
mov
and
fsubl
addr16
clc
in
xchg
adc
dec
mov
xchg
shlb
mov
ret
xor
cmpsb
nop
sub
rcl
shlb
or
mov
sbb
gs
add
cmp
dec
add
and
sbb
and
movsb
or
test
xor
aas
data16
jb
mov
int3
pop
in
cmp
push
sbb
gs
mov
mov
inc
inc
dec
ss
incb
loop
lahf
jmp
xor
outsb
jbe
lahf
cmp
and
lods
popa
movsb
fnstenv
inc
jnp
mov
mov
mov
mov
lock
jl
cmpsl
add
jmp
sub
xchg
daa
mov
rcrl
outsl
in
sbb
add
out
das
dec
rolb
jle
out
xorps
dec
sub
ret
ljmp
lds
xor
jo
pop
shlb
or
push
out
aam
sbb
clc
xchg
adc
stos
les
jo
cmpsb
jmp
adc
sub
sbb
sbb
pushf
push
into
or
ds
std
imul
dec
mull
in
iret
cmp
add
lahf
pop
dec
shrl
test
inc
xchg
idivb
lods
mov
jno
jbe
dec
push
pop
pushf
cli
jle
das
cmc
out
adc
jle
cmp
ljmp
cld
inc
mov
push
dec
inc
xchg
in
xchg
xor
ss
xor
cmpsl
pop
jae
ss
cli
out
jo
or
jge
rorl
mov
pusha
mov
push
std
xor
push
imul
add
mov
les
xor
out
cwtl
scas
bound
sbb
out
dec
pop
insb
xor
popa
das
outsl
inc
sub
ret
pop
jo
pop
stos
loopne
ret
pop
lea
pop
add
pushl
xor
mov
jecxz
jbe
mov
test
xor
xchg
inc
push
arpl
push
xor
in
sub
push
icebp
data16
insb
out
fistpl
subl
mov
xor
lods
sub
icebp
outsb
aaa
pop
sub
das
scas
push
cmc
cmpsl
mov
mov
mov
add
dec
mov
push
mov
mov
mov
mov
imul
stos
fxch
adc
push
jmp
arpl
pop
or
popf
scas
hlt
mov
xlat
mov
shlb
movsl
mov
popa
mov
xor
pusha
jle
test
shll
into
js
pop
icebp
stos
stos
or
in
or
mov
lea
adc
sar
mov
fsubrs
xchg
shl
pop
cli
inc
inc
xchg
xchg
jno
jb
add
push
scas
sub
shll
aaa
xor
sti
enter
cwtl
xchg
adc
or
jecxz
xchg
cmc
mov
jg
popa
or
cld
mov
loopne
jb
adc
mov
jnp
cs
xchg
fidivl
or
pop
mov
mov
sub
arpl
mov
dec
cmpsb
test
push
and
mov
lds
sbb
cmp
mov
or
movsl
leave
cmpsl
pop
jne
adc
sahf
daa
insb
push
jecxz
push
adc
shll
inc
out
sbb
orl
cmp
mov
rorl
test
jne
sbb
jno
incl
pop
mov
stos
inc
push
or
test
sub
les
add
faddl
cld
sub
mov
ret
xlat
mov
mov
je
adc
xor
jo
iret
dec
mov
add
sbbb
icebp
sub
scas
ds
scas
push
in
fistpll
js
pop
jle
push
sbb
xchg
mov
into
ret
mov
outsl
test
adc
lods
push
rclb
das
outsb
push
fidivs
lcall
out
mov
or
xchg
out
mov
aam
and
jle
add
ror
mov
addr16
add
add
rcr
lock
cmpsl
pop
xchg
sbb
adc
ret
pop
jno
jmpw
sbb
js
cmpb
xchg
push
fwait
adc
push
and
xor
fs
add
mov
mov
js
fs
pop
rcr
jbe
xchg
or
popf
add
xchg
leave
mov
data16
mov
bound
out
jne
lock
sahf
mov
shll
mov
call
mov
mov
bound
movsl
push
and
pop
stc
mov
or
rolb
xchg
int
sub
leave
dec
fs
mov
loope
icebp
sbbl
addr16
ljmp
jge
aam
add
dec
push
arpl
xchg
inc
and
jp
mov
popa
push
daa
xor
sub
push
lods
sarl
lods
out
scas
aas
push
sub
aas
push
push
push
add
fwait
imull
xchg
xchg
jo
ret
push
pop
pushf
pop
lret
fbld
mov
or
pop
mov
imul
ja
or
imul
sbb
and
dec
inc
pop
cmpsb
paddsw
jmp
push
scas
push
sti
or
lods
or
xchg
dec
adc
sub
sbb
pop
enter
dec
mov
mov
pop
xchg
mov
test
fstp
sbb
or
les
and
sbb
sub
fwait
or
push
jmp
popa
cs
arpl
sub
loopne
pop
mov
push
pop
add
mov
or
xchg
and
das
push
adc
test
aad
push
or
or
or
in
push
dec
xchg
nop
add
mov
leave
mov
mov
pop
les
lods
out
cmp
push
shr
in
cmpsb
rcr
enter
and
pushf
adc
inc
jnp
push
jno
clc
je
cmp
cmp
mov
inc
sub
xchg
in
push
adc
and
dec
shrl
es
stos
ffree
lret
pusha
loop
cmc
and
fildl
xor
push
mov
cld
out
mov
mov
inc
jae
add
adc
push
orl
insl
stos
sbb
and
test
push
arpl
cld
sub
jmp
xor
repz
rclb
fwait
stc
or
push
sbb
mov
mov
add
dec
sbb
into
loope
cmpsb
mov
mov
mov
cmp
dec
and
inc
or
jle
jno
push
add
mov
push
pushf
in
xorb
cwtl
pop
or
inc
pop
push
cmp
and
xor
rcll
arpl
je
int3
insb
test
jne
jo
stos
daa
mov
mov
daa
pop
push
pop
mov
jmp
aad
xor
std
stos
push
cmp
inc
sbb
inc
jbe
xor
lret
addb
pop
or
mov
test
movsb
leave
inc
scas
and
lret
xchg
xor
pushf
cmpsl
push
shl
loope
push
cli
mov
jl
jo
jns
jmp
mov
pushf
fnstenv
xchg
mov
mov
pushf
ja
push
cmp
test
ljmp
push
cmp
das
loope
mov
clc
mov
out
insb
pop
lcall
adc
sbb
adc
pushl
inc
sub
out
mov
inc
lods
dec
xchg
jg
cmpsb
in
mov
mov
ja
mov
call
push
or
mov
pop
outsl
lea
jecxz
out
icebp
adc
arpl
xchg
and
push
aaa
push
mov
lock
and
jp
sbb
test
push
les
dec
xchg
mov
push
mov
add
mov
hlt
flds
ss
mov
insl
int3
fistpll
xchg
lods
sub
cmp
adc
mov
int
mov
aam
dec
dec
xchg
xchg
lahf
inc
jge
jb
pop
xchg
cmp
imul
mov
test
sbb
push
int
dec
in
push
pop
idivl
repnz
add
sub
adc
pop
sub
and
jns
inc
adc
jb
adc
pop
xor
insl
int3
arpl
lret
add
roll
jo
push
add
mov
add
in
popf
aas
std
add
ret
hlt
dec
int
jbe
icebp
mov
adc
jl
call
fcoms
mov
and
ja
mov
cmp
adc
push
jb
xor
scas
mov
xchg
sbb
repz
xchg
icebp
jo
push
push
adc
or
decl
xor
xchg
inc
xor
jle
adc
jg
in
in
inc
addr16
jge
mov
outsl
fdivl
xchg
sarb
leave
sbb
adc
adc
lea
mov
inc
cmpsl
or
negl
loop
or
cmp
mov
out
outsl
psubusb
cmp
pop
pop
inc
ret
enter
sbb
ret
in
hlt
xor
cmp
jg
lahf
mov
add
and
fsub
jo
imul
xor
sbbb
fwait
ljmp
outsl
mov
daa
scas
add
out
cmp
test
int
fldcw
cmp
and
les
es
test
fisttpll
pop
push
fstpl
xchg
movsl
shll
jp
in
xor
xchg
xor
stc
aad
xor
fists
dec
mov
rcrl
lock
cmp
stos
cld
ds
inc
into
mov
popf
cmpsb
push
sbb
add
movsb
loope
popf
jne
pop
xlat
pop
dec
out
fwait
insb
data16
arpl
fisttps
ucomiss
lea
das
mov
repnz
cmpsl
insb
dec
jno
aad
pop
mov
xor
jbe
es
pop
imul
push
fmuls
outsb
imul
aaa
shll
fiaddl
xor
push
mov
ret
ljmp
pusha
xchg
out
cwtl
rcr
arpl
imul
rcrl
std
int3
int
roll
jmp
or
repz
jle
imul
cmp
inc
test
mov
xor
repz
fcomps
cmp
ljmp
xlat
push
arpl
push
and
or
push
aas
cmp
pop
adc
sbb
std
sub
out
or
popf
and
out
adc
push
push
fldl
nop
lods
dec
jo
daa
ljmp
lods
mov
adc
aad
push
mov
repnz
fdivl
sub
dec
adc
push
movsl
mov
xchg
or
mov
es
inc
push
mov
stc
outsl
neg
lods
mov
les
leave
dec
sbbb
ret
and
jl
mov
iret
cmpsb
lcall
shl
shlb
fwait
lcall
movsb
in
inc
xor
out
iret
imul
push
ret
ret
jmp
into
xchg
mov
sbb
ret
movsl
sar
aad
ds
in
xor
xor
sub
pop
outsl
inc
clc
mov
lock
jae
mov
inc
mov
sub
cwtl
mov
cmp
lret
ja
aaa
adc
les
mov
push
sub
or
pop
sub
fs
and
lods
mov
or
insl
mov
inc
inc
lods
movsb
inc
mov
or
xchg
push
and
xchg
fsubl
rcl
add
cmc
dec
pop
loopne
stos
xlat
push
xchg
in
mov
ss
xor
or
sbb
imulb
std
xor
mov
fwait
std
add
cmp
rorl
in
es
push
daa
sahf
sbbl
sbb
movsb
jl
std
shl
fisttpl
mov
pop
bound
out
pop
rol
loope
dec
mov
cli
cmp
aad
xchg
aad
inc
push
lds
dec
repz
or
ret
test
adc
sub
push
js
xor
out
push
pop
out
sbb
jo
sbb
lods
aaa
inc
insb
sbb
inc
jecxz
mov
testb
mov
dec
ffree
xor
mov
mov
aad
in
add
scas
rclb
sti
jecxz
add
imul
jnp
xchg
loope
push
outsl
mov
imul
fs
jmp
sub
hlt
mov
ja
dec
lods
push
or
gs
nop
mov
adc
or
xor
and
cld
mov
inc
mov
insb
sahf
ljmp
cld
sbb
dec
sbb
inc
cmpsl
push
jg
jbe
fcoms
repz
xor
mov
std
cmp
push
mov
ficoml
mov
pop
out
xchg
lock
aad
imul
in
ret
mov
js
jl
testb
sub
mov
mov
jmp
inc
dec
test
sub
mov
mov
pushf
notl
out
es
sbb
push
jno
sbb
fadd
dec
fimull
add
mov
sub
mov
outsb
xchg
and
jns
add
adc
mov
sti
jle
xchg
xchg
and
aas
mov
or
lods
pop
stc
xor
xlat
out
in
inc
dec
out
cmp
jae
iret
dec
pop
push
xchg
lret
lret
push
ffreep
hlt
sbb
xor
cmpsb
jle
push
xor
or
inc
push
pop
cmpsb
mov
adc
lds
lock
sub
pop
inc
pop
sub
sbbb
mov
shll
or
leave
dec
cmp
jmp
adc
int3
es
lret
jg
sarb
or
jl
aam
idivl
clc
jg
out
xor
popf
sub
dec
adc
add
inc
rorb
sbb
je
adc
popf
dec
inc
leave
push
adc
inc
mov
sbb
xchg
in
pop
add
add
mov
sarb
mov
mov
jnp
hlt
scas
inc
sti
leave
or
aam
stos
push
and
jp
or
inc
mov
jb
inc
inc
pop
sub
and
out
fs
test
fsubl
popf
push
insb
jo
test
ret
xor
leave
loopne
or
in
lret
jbe
mov
sti
ljmp
mov
stc
lret
mov
bound
pop
gs
dec
push
push
stos
or
adc
cs
idivb
mov
jmp
pop
pop
adc
mov
and
mov
mov
pop
sbb
xor
lahf
cltd
inc
daa
fwait
dec
mov
leave
or
fmulp
movsl
test
sub
outsl
push
cmp
xchg
lahf
ss
adc
cli
loop
fcoms
and
int
leave
mov
xchg
fldenv
xchg
cmc
xchg
add
js
sbb
mov
sub
fwait
mov
int
cmp
push
scas
call
outsl
jmp
insl
inc
cltd
lods
mov
fimuls
cmp
mov
in
jns
add
repz
lcall
fidivl
or
sub
xorl
lret
sbb
sub
outsl
shl
and
mov
movsw
popf
jp
lods
pop
int3
adc
xor
ss
cli
push
mov
cli
cld
dec
fcompl
nop
arpl
mov
mov
push
insb
cmp
sub
aaa
dec
cs
sub
push
xchg
pusha
mov
js
mov
out
stos
or
sbb
adc
jecxz
jne
inc
add
push
xchg
push
cmp
xor
mov
scas
loop
jp
mov
mov
shll
subl
add
cli
jns
jns
fisttps
les
fcoms
adc
push
adc
cs
int3
mov
jmp
test
push
xor
std
mov
dec
mov
xchg
xchg
cmp
outsl
adc
rorb
shl
sbb
fcmovnb
adc
ficoms
fnstenv
xlat
in
int
popf
insb
add
bndldx
das
dec
or
mov
icebp
mov
pop
frstor
lock
xchg
popa
jle
xchg
arpl
jmp
push
mov
push
in
pop
mov
mov
cmp
pop
cmpsb
adc
imul
push
pop
loopne
enter
adc
push
lock
mov
rcll
popf
mov
xor
jecxz
sub
sbb
mov
adc
add
pusha
arpl
mov
ret
cld
sub
out
idivb
jne
push
lods
xor
test
dec
ss
xchg
mov
cmpsl
cmc
je
hlt
xchg
sbb
es
ss
das
or
ljmp
jmp
ss
jae
jecxz
iret
mov
mov
or
adc
or
and
xchg
cmp
dec
lcall
addr16
mov
and
lods
jmp
out
or
sbb
fnstenv
inc
xchg
arpl
jmp
mov
xor
mov
arpl
jns
and
push
jl
pop
idiv
popf
jmp
xchg
or
and
fwait
cmp
jecxz
sahf
pop
xor
pushf
stos
popf
mov
int
push
xchg
add
andl
mov
int
leave
mov
lret
mov
dec
cltd
push
push
pushf
testl
sarb
mov
inc
es
pop
cmpsl
popf
mov
push
fcomps
mov
sub
inc
xor
in
push
in
inc
cmpsl
lret
adc
mull
cmpsl
cmp
cltd
fwait
je
mov
dec
and
add
inc
stos
les
gs
adc
loop
pop
push
sarb
divl
dec
enter
adc
sbb
daa
and
sbb
pop
and
int3
jb
ljmp
xchg
or
xchg
dec
push
out
or
push
stc
and
mov
repz
in
in
inc
sbb
sbb
hlt
dec
in
xchg
fstps
sti
or
jb
inc
lods
push
loopne
mov
jge
adc
lock
scas
dec
xchg
gs
push
fcom
mov
push
scas
int3
xlat
or
les
mov
mov
clc
jne
std
jecxz
fdivrl
push
mov
or
push
cld
bnd
iret
fnstenv
fldt
mov
lods
mov
adc
inc
dec
loopne
scas
xor
or
test
push
cmp
pop
dec
imul
repnz
out
push
jno
stos
in
adc
mov
and
cltd
mov
mov
aam
fcmove
stos
rcr
loope
sub
loop
and
xchg
mov
xor
push
and
jl
xchg
and
mov
icebp
mov
clc
fsubl
add
mov
in
bnd
cwtl
arpl
std
dec
std
loopne
xor
idiv
inc
xchg
mov
sahf
adc
mov
in
cmovs
dec
jg
ja
cmp
cltd
push
sub
fsubrs
xchg
icebp
cwtl
cmp
sti
inc
jp
mov
dec
mov
push
fdivrs
push
sbb
mov
add
fwait
xchg
mov
pop
leave
jne
and
adc
into
xchg
mov
and
ffree
mov
inc
mov
xor
ss
jecxz
jnp
mov
inc
cmp
dec
sub
mov
inc
add
jmp
jl
sbb
cli
dec
mov
mov
or
hlt
incl
xor
lret
insb
ror
loopne
jmp
leave
out
test
cli
push
insl
je
cmpl
out
and
sbb
dec
and
rorb
sbbl
js
sub
mov
clc
fs
jns
xchg
lcall
call
divb
xor
lods
xchg
ret
jecxz
add
imul
sbbb
in
in
inc
pusha
mov
inc
push
insb
ret
int3
aam
fcomps
mov
pop
pop
aad
in
push
xchg
test
repnz
xchg
loop
xchg
cmpb
femms
dec
stos
xchg
sub
xchg
xchg
mov
sti
pop
mov
add
movsb
pop
mov
mov
mov
and
fcmove
pop
mov
std
mov
aas
sbb
push
mov
popf
xor
inc
sub
xorl
mov
mulb
jne
outsl
out
mov
push
loopne
popa
mov
inc
into
sbb
xorb
lret
ljmp
pop
clc
jae
fisubs
and
adc
or
sarl
jae
xchg
inc
mov
xchg
mov
pushf
sti
vandps
imul
xchg
inc
cwtl
lock
jbe
adc
fists
iret
les
lods
stos
sbb
push
inc
push
jmp
lcall
xchg
or
arpl
addr16
int
push
call
scas
das
pop
sub
cmpsb
mov
out
pop
fdiv
jnp
fmuls
ss
loop
out
inc
gs
add
int
fstpt
cmc
cli
mov
inc
push
push
mov
scas
stos
push
popl
sarl
lds
add
mov
xchg
add
add
les
pop
lock
test
xchg
inc
test
cltd
mov
mov
in
sbb
mov
cmp
aas
jne
addr16
cli
jb
clc
adcl
fsubrl
push
ds
jnp
adc
hlt
push
and
push
mov
cltd
push
xor
imul
test
mov
mov
mov
push
imul
lods
rcl
jne
mov
mov
sub
mov
jb
mov
xor
mov
or
out
pop
loope
aas
outsb
lods
mov
push
xchg
dec
jno
stc
ret
movsl
push
push
xlat
orl
in
les
shll
xor
push
and
pop
in
std
cmp
call
stos
jl
jecxz
ljmp
sub
out
andb
xor
rcrb
js
rdtsc
int3
dec
xchg
aas
jle
push
mov
and
jne
push
ds
add
cmp
push
es
insl
jmp
fistl
jo
cmp
stc
cmpb
push
adc
inc
adc
movsb
jnp
sbb
dec
imul
xlat
out
mov
in
adc
mov
fisubrs
sub
in
push
shl
jg
bound
fcoml
leave
push
or
mov
aaa
inc
ficompl
insl
idiv
shlb
or
jne
jae
jo
add
pop
pushf
xor
mov
xor
mov
fidivs
std
imul
sub
hlt
les
pusha
pop
mov
mov
das
sub
adc
and
pop
hlt
inc
mov
fistps
mov
jge
cmpsb
inc
jmp
mov
js
jg
mov
pop
cmp
icebp
adc
pop
inc
jno
xchg
cmp
add
pushw
cmp
leave
cmp
add
sbb
mov
je
dec
hlt
test
cmp
push
push
dec
nop
lcall
lods
call
stos
xor
adc
loop
gs
mov
scas
sbb
jge
cwtl
jnp
jl
jne
shll
xchg
sbb
jl
add
stos
push
push
imul
adc
cld
xor
add
mov
aas
loop
cmp
dec
test
mov
sbb
rolb
cmp
stos
ljmp
push
adc
adc
xor
mov
lds
xchg
addl
cmp
outsb
sbbb
inc
daa
push
ss
or
mov
insl
pushf
popf
inc
decl
mov
jp
or
icebp
aaa
dec
pop
cli
pop
cld
add
push
push
rolb
mov
es
add
inc
fidivrs
cmpsb
lahf
jp
inc
outsb
add
jp
push
movsl
mov
mov
std
xor
ud1
push
inc
jae
in
jb
jbe
psubb
frstor
xchg
loope
and
aad
and
sahf
loope
mov
push
inc
rcrb
jmp
cld
jb
shlb
test
jl
divl
and
dec
cwtl
push
add
sub
xchg
mov
dec
xchg
mov
cmp
les
mov
jp
outsb
cmp
xor
test
shl
int
pop
in
negl
jg
jne
sbbb
mov
cmp
clc
push
pop
mov
adc
mov
inc
int
jecxz
mov
pop
lods
dec
sbb
insl
movsb
add
pop
mov
adc
cmp
adc
xchg
pop
repnz
nop
dec
out
inc
mov
testb
repz
shlb
shlb
fisubrl
not
fldenv
sbb
sub
push
mov
xor
hlt
sub
loopne
jbe
nop
cmp
insl
sbb
xchg
and
sub
mov
out
or
inc
mov
mov
mov
cmp
xchg
add
and
leave
out
fisttps
adc
sbb
loope
xor
push
dec
sti
cld
lea
inc
test
xchg
jb
mov
pop
test
push
aaa
jecxz
jo
push
hlt
out
shrl
mov
loop
jmp
xor
out
stc
add
popl
sbb
mov
push
fnstcw
enter
mov
adcl
xchg
mov
or
fisubl
adc
sti
adc
pop
adc
dec
loop
push
sbb
adc
lret
fisttpll
jbe
scas
jns
push
push
xlat
enter
loop
test
bound
xchg
or
cmp
cmp
addr16
or
fwait
cltd
lods
sbb
ret
jge
filds
adc
mov
xor
cmp
outsb
xor
ja
mov
popf
lods
lock
cli
test
jo
sbb
arpl
cmp
or
outsl
mov
enter
adc
push
mov
gs
sti
jp
ret
lock
sub
pop
in
mov
adc
sbb
sbb
pop
dec
mov
inc
inc
fldcw
pop
fildll
ret
mov
ss
and
mov
jmp
insl
jmp
decb
lcall
subl
mov
mov
inc
mov
leave
lahf
inc
test
add
loopne
mov
cwtl
test
scas
mov
lds
push
fmul
mov
push
jle
pop
aad
add
popa
fmull
sub
sub
fdivs
aaa
pop
xor
xchg
cmp
and
add
xchg
bound
into
icebp
movsl
xchg
js
arpl
jp
or
push
sahf
sub
or
clc
ja
sub
sarb
cltd
and
fdivs
dec
cmpsl
mov
stos
je
ljmp
lret
and
lds
ror
or
fwait
hlt
int3
hlt
inc
out
inc
mov
pop
insl
mov
ljmp
in
pop
push
inc
jno
sub
or
adcb
mov
cmp
icebp
push
mov
mov
xor
out
and
dec
cmpb
js
lahf
imul
shll
add
popf
push
jb
cltd
iret
insl
jmp
jns
jmp
mov
jecxz
fwait
pop
adc
inc
mov
push
jo
xchg
aam
popa
adc
mov
sub
dec
lods
ljmp
ljmp
mov
loope
mov
adc
cmp
push
test
mov
lods
jno
or
les
jno
dec
mov
xchg
xor
scas
adc
inc
lcall
ja
pop
and
push
in
test
mov
js
sbb
ror
lahf
cld
mov
in
add
lods
and
nop
jge
adc
cmp
movsb
dec
add
and
ret
dec
sub
dec
ret
adc
lret
in
leave
mov
inc
sti
jbe
fs
mov
push
push
stos
cmp
jle
xchg
xor
mov
jae
ss
loopne
lods
pop
pusha
repnz
cs
mov
sti
or
adc
sub
in
xchg
out
xor
sub
jmp
jo
lahf
pop
push
cs
mov
dec
stc
xchg
stos
jae
fmuls
fimull
push
pop
lret
sbb
pop
or
sbb
lahf
out
xchg
and
or
bound
push
and
insb
mov
fwait
sbb
and
jns
ss
movsl
push
mov
rclb
inc
fst
xchg
mov
negb
xor
sbb
and
pop
adc
inc
mov
in
cltd
ljmp
mov
dec
xor
lret
push
fists
push
or
popf
add
insb
mov
mov
pushf
mov
inc
and
and
lods
fidivs
outsb
imul
or
cli
arpl
or
push
pop
fucomp
repz
jb
mov
lods
push
add
sub
std
add
push
mov
cmp
xlat
loop
push
loopne
push
out
cmp
movsb
jo
mov
sub
add
inc
icebp
dec
shrd
hlt
jp
mov
mov
lock
das
pop
jecxz
add
sarl
jl
arpl
lock
fwait
pushf
xor
mov
mov
fbld
mov
in
int
jno
es
inc
inc
shr
nop
test
adc
sbb
leave
sub
aaa
in
arpl
in
push
xor
cmp
cmp
mov
jle
es
repnz
cltd
dec
dec
mov
pop
rcrb
in
out
sti
out
stc
jg
lret
shrb
mov
hlt
xor
loop
rcrb
enter
push
jge
loopne
pop
push
jno
bound
mov
xchg
mov
mov
adc
fdivl
inc
ret
inc
ret
mov
jae
loope
and
or
jp
test
rcll
sti
dec
and
adc
jge
jecxz
insb
adc
push
pop
adc
mov
and
jns
aaa
jne
outsb
jl
andl
cmpsb
sub
dec
xchg
jo
movsb
dec
xchg
push
cmpsb
pop
cmp
faddl
orl
xor
sbbb
xchg
sti
jbe
lods
cld
xchg
dec
ret
popf
addr16
mov
mov
push
gs
push
xor
push
cmp
pop
cmp
push
test
int3
xchg
cld
jge
mov
sbb
int
out
lods
pop
and
inc
cs
xchg
or
pop
mov
jo
pushf
insl
scas
or
sbb
cmp
jmp
nop
cmp
mov
bound
test
xchg
out
inc
cmpsb
push
into
das
lea
imul
jg
mov
push
sub
inc
mov
xor
in
jge
adc
pop
cmp
and
mov
and
ret
mov
mov
add
xor
xchg
push
cmp
sub
out
jnp
scas
loopne
push
sbb
and
adc
push
in
pop
pop
xchg
in
nop
dec
adc
jbe
aaa
ret
imul
cltd
or
jecxz
jb
pop
cmp
jp
xlat
xchg
lods
dec
rorl
sbb
push
push
sub
or
inc
loope
orb
leave
cmp
pop
mov
mov
cmp
scas
iret
lret
cmc
jae
mov
mov
cs
inc
data16
cmpsb
push
pop
sbb
mov
or
out
add
dec
hlt
xor
aad
xchg
out
cmpsb
ja
lcall
jb
and
cmc
insl
fwait
inc
jns
lcall
out
add
and
dec
cmpsb
ds
arpl
mov
and
sbb
lods
aaa
int
sbb
mov
mov
pmulhuw
cli
dec
clc
js
inc
lea
add
push
fadd
setns
mov
inc
sahf
jnp
push
mov
cli
and
aam
sarb
ror
pushf
lods
and
inc
xchg
mov
sbb
lahf
sahf
push
movsl
nop
and
or
add
icebp
push
dec
mov
cmc
xor
mov
lret
outsl
or
xchg
dec
inc
ficompl
call
push
mov
repz
notb
and
push
sbb
lods
popa
or
dec
push
repnz
imul
lock
sbb
xchg
setb
in
xchg
jno
adc
out
pop
cmp
hlt
mov
popf
ret
pushf
ljmp
add
push
mov
in
cmpsl
sbb
sub
inc
xor
push
add
loope
sti
out
js
testb
mov
mov
insl
scas
popa
movsl
cmp
pop
lock
ret
cs
sub
mov
push
outsl
inc
dec
jne
add
loope
out
mov
bound
and
jecxz
add
push
mov
jge
adc
lods
add
mov
jo
cld
aam
enter
cmpsl
mov
inc
jmp
sub
ss
mov
cltd
loopne
sti
add
jle
adcl
sarb
dec
test
mov
inc
sub
sbb
and
in
push
adc
dec
adc
mov
movups
add
adc
mov
shlb
mov
xor
dec
adc
xor
pop
xchg
jbe
xor
test
movsl
xchg
fldenv
jno
mov
pop
test
ja
stos
or
mov
sbb
out
push
repz
cmpb
adc
sub
in
rolb
mov
xchg
sub
rolb
aaa
mov
xor
jp
es
xchg
enter
dec
mov
and
add
sbb
mov
mov
shll
std
dec
push
sbb
mov
jge
bound
fistpll
icebp
ja
mov
pop
jg
pop
sbb
std
xor
mov
aaa
hlt
je
adc
inc
sar
xchg
cmp
pop
test
enter
shl
add
mov
xor
nop
ss
iret
xchg
sub
push
pusha
scas
push
in
ds
int
sbb
faddl
cmp
inc
rcll
movsb
std
xchg
dec
rcr
dec
imul
or
les
sbb
mov
scas
sbb
mov
sub
xchg
loope
adc
inc
xlat
jno
test
xor
sti
dec
data16
mov
push
and
or
and
loop
xchg
pop
pop
sbb
add
mov
jmp
lea
movsl
ljmp
and
pop
ljmp
sahf
sahf
xchg
sbb
cld
inc
xor
hlt
jb
xor
push
pop
addr16
mov
jmp
je
or
push
pop
rcrl
or
imul
jno
leave
jne
push
shl
fdivrl
popa
mov
inc
cmpb
jbe
mov
lds
call
xchg
stos
icebp
mov
jns,pn
mov
and
popw
loope
push
sub
pusha
pop
stos
icebp
stc
stos
push
adc
mov
mov
lcall
ja
push
lahf
pop
subl
dec
cmp
adc
cmp
je
jp
rclb
jno
xor
push
xchg
sbb
stc
hlt
pop
out
jnp
in
push
ror
sbb
cwtl
push
ja
dec
in
jb
and
cmp
jmp
mov
xchg
sti
dec
adc
inc
in
jg
sub
mov
jp
xor
inc
lock
orb
test
sbb
sub
cmp
mov
inc
push
test
rclb
inc
mov
imul
notl
adcb
jae
cli
mov
mov
dec
leave
inc
jno
xor
and
ss
sbb
inc
ljmp
inc
sarb
lea
sub
testb
xchg
or
sahf
fmulp
outsl
mov
jo
and
cmp
andb
mov
lea
adc
scas
mov
xor
scas
sub
mov
cmp
push
testl
cltd
lods
inc
sub
inc
adc
loopne
mov
mov
iret
mov
add
ljmp
push
and
aad
jecxz
mov
loop
shl
or
cld
shll
and
or
push
push
jecxz
rcll
jle
cmp
push
add
push
or
mov
pop
cltd
ror
cmp
xor
dec
sub
and
and
cmp
rcrl
push
hlt
outsl
push
lahf
sbbl
outsl
add
and
ffree
mov
addr16
jne
sub
dec
and
leave
push
test
inc
sti
push
sbbl
aas
xor
movsl
dec
jno
clc
fstpt
int3
jp
pop
mov
aaa
jp
adc
nop
leave
cli
mov
lods
mov
add
rolb
insl
sub
nop
andb
cltd
cmc
sbb
loop
and
mov
push
imul
sub
ret
mov
mov
sub
push
dec
test
pop
adc
push
fdivrl
jno
pmovmskb
inc
outsl
or
dec
lods
loopne
and
insb
loopew
mov
add
roll
rcrl
jne
push
mov
dec
mov
out
adc
sbbl
jmp
mul
and
mov
adc
test
repnz
or
test
adc
shl
stos
xchg
jmp
cmp
in
fstps
in
or
jne
xlat
adc
cld
ja
popa
sbb
pop
xor
das
mov
js
jae
adc
lahf
popa
addl
int
push
das
add
and
leave
sarl
sti
or
and
nop
mov
sub
cmc
cltd
and
pop
sub
cmpsl
call
cs
jg
into
test
lods
inc
fwait
scas
fmuls
outsl
andl
scas
sub
adc
sub
dec
notl
pop
add
mov
test
pop
aam
je
ss
mov
xor
pop
mov
incb
imull
push
sar
xor
sbb
mov
std
js
mov
push
sbb
in
add
jl
pop
loopne
std
xor
mov
adc
call
insb
ljmp
ret
inc
in
lddqu
inc
mov
add
and
test
or
xor
sub
jmp
mov
add
pop
movsb
ret
fiadds
outsb
les
sbb
dec
or
jb
sbb
sti
sbb
jmp
outsl
xchg
pop
add
fidivrs
cwtl
hlt
mov
jnp
inc
out
sbb
dec
xchg
stos
push
test
or
jmp
std
or
cmp
cwtl
sbb
dec
inc
push
clc
int
int3
dec
scas
into
jnp
mov
fucomip
inc
cld
xchg
or
add
stos
jns
add
fwait
outsb
imul
sbb
xchg
mov
out
xchg
dec
icebp
into
mov
shlb
outsb
mull
mov
push
lods
aaa
fs
in
movsb
ror
mull
pop
jnp
cmp
xchg
mov
mov
je
mov
in
loopne
ds
test
lret
mov
mov
add
push
xor
sbbl
add
test
lods
cmp
aam
clc
pop
xor
inc
shrl
jae
sbb
push
ss
dec
cld
fisttps
arpl
push
cmpsb
adc
fcoml
out
mov
sti
pop
cmc
into
and
cwtl
mov
shlb
in
pop
cwtl
inc
mov
mov
mov
arpl
sbb
int
das
push
pop
int
pop
pop
sub
popa
cmp
out
xlat
lret
arpl
push
dec
inc
out
lret
mov
inc
push
aam
xor
jns
push
push
cmp
mov
sbb
push
mov
movsb
inc
sub
inc
dec
sub
es
aad
mov
iret
gs
lahf
iret
imul
sub
and
xor
mov
push
or
in
cmp
fwait
xchg
and
icebp
aas
xor
mov
mov
push
sbb
cmp
sti
inc
xchg
fldl
loope
fbld
xor
or
jo
sbb
jns
es
test
push
test
insb
repz
shlb
mov
in
in
lcall
cmp
jnp
jb
sbb
test
sbb
sub
jns
fndisi(8087
int
push
mov
xor
iret
mov
add
jb
arpl
aad
pop
mov
leave
sub
movsl
sbb
xchg
sub
out
test
iret
shlb
ss
pop
cmp
and
pushf
pusha
add
sbb
mov
std
lahf
shl
outsl
cld
mov
xchg
and
shr
mov
add
or
jb
cli
mov
push
lds
loope
or
adc
int3
and
mov
fistpll
ds
scas
popa
fsubl
mov
mov
int
adc
fs
stos
push
push
test
lret
xor
pop
cmc
mov
dec
cmp
inc
adc
hlt
xchg
aas
xor
xchg
mov
addb
cmp
call
push
pop
fstpt
aaa
lea
inc
jmp
fstp
dec
ja
std
sbb
call
in
test
int3
or
xor
adc
pop
sti
mov
sbb
ja,pt
data16
xchg
mov
pop
jo
xchg
lahf
repnz
and
mov
sub
inc
push
sbb
mov
jmp
adc
xor
and
push
cmp
nop
mov
dec
pop
jns
cmp
daa
nop
loope
and
int3
mov
loopne
repz
test
das
push
or
mov
lret
ja
mov
es
repz
mov
ds
push
fwait
pop
xorb
clc
mov
int3
and
icebp
jno
inc
test
cmpsb
inc
andb
adc
mov
jo
mov
push
or
enter
sbb
cmpsl
or
inc
rorb
clc
pushf
out
repz
lods
scas
mov
mov
sub
cmpl
cmp
jmp
es
lds
dec
pop
negl
dec
jae
push
mov
ds
fnsave
push
and
inc
or
sbb
orl
mov
jns
mov
xor
xchg
dec
jge
inc
xor
stos
jge
dec
sbb
mov
fbld
mov
jle
mov
int3
loopne
xchg
lret
aad
rcrb
fcoms
dec
imul
gs
mov
fnstcw
add
adc
sbb
xchg
cmpsb
lock
push
push
or
xchg
or
xchg
jns
leave
pop
repnz
sbb
aaa
stos
and
in
in
jmp
andl
dec
mov
cmp
xor
pop
bound
out
andl
fists
jo
lahf
lcall
push
adc
imul
dec
dec
xor
addr16
and
sahf
hlt
pop
jcxz
xchg
jno
or
out
notl
adc
fiaddl
mov
nop
jmp
out
call
cmp
jecxz
add
ljmp
cmc
mov
es
xchg
inc
add
lret
outsb
adc
sub
sub
xor
ret
data16
stc
clts
enter
add
cmp
sbb
or
jae
sbb
xchg
pop
sbb
out
test
js
lahf
push
out
sub
pop
dec
push
jbe
in
xchg
repz
pop
push
ds
ror
mov
pop
fucomip
roll
mov
jmp
stc
push
jb
mov
iret
push
adc
or
sub
add
es
int3
jp
dec
cmp
out
push
test
loop
push
aam
fcoms
or
inc
xchg
lcall
rol
ret
je
clc
mov
mov
mov
loop
ljmp
in
lds
call
push
xchg
sub
rcrl
adc
adc
out
daa
cmp
mov
adcl
mov
call
stos
mov
pop
mov
test
negb
je
sub
pop
mov
xlat
jl
xor
in
sahf
fwait
and
flds
mov
imul
ds
insl
popa
mov
pop
adc
sbb
mov
clc
mov
out
sbb
rcl
pop
das
pop
pusha
and
mov
lods
cltd
sbb
into
jge
lret
add
mov
dec
outsl
lods
pop
movsl
cld
xchg
jb
fsub
imul
jns
fcomps
cmc
cli
mov
aad
mov
jl
cli
stc
int
push
test
roll
pop
outsb
andl
fbstp
pushf
adc
dec
cmp
and
and
sti
jecxz
aam
pop
mov
stc
movsl
xchg
cmp
cmpsl
sub
out
adc
cld
daa
movsl
and
mov
pop
add
cmpsb
inc
inc
xlat
mov
bound
cld
lock
incl
movsl
mov
pushf
insb
sub
js
inc
or
out
rcll
mov
mov
xchg
pushf
sub
push
xor
popa
in
mov
aas
and
dec
adc
pushf
jmp
cltd
insb
jbe
bound
inc
xchg
jge
cmc
cmp
enter
pop
arpl
xlat
and
jns
sbb
pop
push
mov
push
int
pop
jmp
cmpb
push
dec
je
andb
scas
lret
adc
mov
rclb
jge
mov
in
jne
sub
mov
aaa
dec
adc
inc
sarb
inc
pop
cmp
lds
jecxz
dec
pcmpgtb
inc
imul
fdivr
jo
mov
or
fidivl
jg
jnp
bound
notb
inc
sahf
cwtl
pop
ja
push
xchg
jge
andb
loop
decb
xor
subl
out
test
enter
lods
pop
cmp
fidivl
or
out
filds
jp
mov
repnz
stos
iret
adc
xor
mov
xchg
push
les
add
sbb
cmp
dec
sbb
test
out
adc
sub
xchg
in
repnz
mov
je
enter
fs
outsb
cmp
sbbl
and
shr
pop
lods
hlt
shlb
mov
adc
cltd
out
jecxz
test
xor
push
mov
lods
jne
stos
sbb
jmp
dec
cmp
addl
sti
mov
lock
pop
add
mov
in
int3
cld
js
lahf
por
add
je
mov
cmp
adc
call
mov
sub
xor
scas
lods
psubw
adcb
loopne
aad
pop
int
fsts
sbb
push
rcrl
fwait
add
mov
inc
push
mov
fimuls
add
outsl
daa
pop
mov
mov
push
mov
adc
cmp
push
mov
jns
xchg
push
inc
mov
xchg
xchg
push
dec
outsl
shl
mov
xchg
and
add
pop
inc
std
sarb
sub
dec
xor
or
cwtl
rcr
out
icebp
jge
loop
and
out
iret
jle
aad
cmp
mov
cmp
jmp
mov
aad
cmpb
hlt
shl
aad
mov
leave
jno
test
push
sbb
pop
decl
jmp
xchg
ss
repnz
add
adc
ret
mov
jno
in
dec
jp
pop
and
cmp
sti
mov
dec
xchg
hlt
lret
jmp
xor
out
mov
jo
lds
sbb
or
mov
sbbl
pop
out
loopne
pop
jg
inc
xchg
lods
and
subl
adc
sbb
int3
sti
mov
xchg
out
lds
inc
sbb
mov
and
imul
pop
fiadds
and
lret
scas
jbe
or
enter
pop
cmovno
fwait
lods
cs
push
aad
mov
adc
imul
or
imul
adc
xchg
out
int3
mov
mov
push
es
popa
jle
xor
fs
jbe
xchg
pop
pop
iret
mov
and
aas
pushf
mov
push
jg
fucomp
dec
dec
clc
add
rcr
push
popf
mov
add
cs
inc
rorb
fstpl
fistl
or
inc
xchg
jp
dec
pop
mov
add
insb
clc
push
mov
jl
movsl
mov
in
andb
jae
sub
cld
or
jne
add
push
in
jle
jbe
test
xchg
push
sarb
jmp
jb
push
or
popa
test
add
mov
xlat
test
dec
out
inc
cmp
push
fs
xchg
add
pop
pop
repnz
mov
repnz
shll
es
testl
testb
out
stos
inc
ja
and
popa
mov
dec
jl
inc
in
or
lea
add
and
andb
or
cmp
insl
mov
iret
mov
sti
adc
mov
mov
jbe
sbb
cli
adc
cmc
mov
int
mov
add
call
or
fwait
mov
jp
push
mov
loopne
insl
jbe
push
mov
mov
lret
bound
mov
push
fs
clc
gs
push
sbb
add
je
clc
shll
fdivs
in
imul
js
jbe
mov
cmp
cmp
sbb
in
mov
ds
push
rorb
daa
insl
or
sahf
xchg
fdivs
cmp
dec
stos
push
daa
push
imul
shll
aaa
mov
xchg
add
into
sar
daa
in
xlat
adc
aas
loop
inc
std
leave
push
add
imul
xchg
xchg
popl
xchg
sub
mov
xor
pusha
inc
subb
cmc
je
mov
mov
jno
mov
xor
in
sahf
das
rorb
pop
xchg
in
stc
fdivrl
dec
inc
cmp
pusha
add
fwait
push
popa
movsl
loopne
arpl
hlt
rolb
imul
lahf
fucom
fcomps
in
sbb
loopne
cli
add
and
pushf
insl
shl
inc
rol
stos
xchg
aas
push
pop
or
push
push
xchg
jne
or
xor
dec
xchg
mov
sbbb
sarl
push
out
daa
cmp
inc
push
aam
aaa
cltd
mov
js
jl
sbb
jmp
and
negb
mov
xchg
test
int
mov
mov
loope
std
je
shl
nop
push
pop
push
ss
mov
or
pop
lcall
xor
rcrb
arpl
fcompl
stos
jb
cmpsl
inc
repz
mov
push
sarl
mov
or
cld
mov
mov
add
push
leave
cmp
ljmp
mov
mov
movsl
dec
int3
mulb
lret
jmp
push
inc
sub
jle
lea
dec
mov
xor
into
sbb
push
ja
push
xor
notb
sbb
xlat
adc
cmp
fisttpl
addr16
mov
mov
mov
sbb
mov
loopne
jmp
xchg
cld
shll
and
adc
cmc
movsl
push
lods
popa
fwait
scas
outsl
add
fwait
loope
cmpl
xlat
mov
pop
pop
icebp
mov
les
mov
js
inc
in
and
xor
pop
lock
int3
out
lods
and
adc
push
out
dec
or
add
lods
xor
scas
scas
jb
lret
daa
and
and
call
inc
push
ds
rclb
cmc
and
dec
mov
lret
push
mov
adc
pop
push
pop
lcall
adc
rclb
mulb
test
push
jp
inc
lea
dec
mov
das
jp
dec
inc
mov
add
int3
sub
pop
inc
mov
push
divb
jno
mov
jns
subb
mov
lahf
cmp
push
jp
xchg
jp
push
adc
jae
movsb
popa
xor
sub
fcmove
fisttps
stos
clc
pop
inc
sahf
inc
call
pop
outsl
scas
mov
sub
data16
stc
add
fldcw
insl
mov
xor
dec
dec
incb
je
je
jp
cltd
out
movsb
mov
add
adc
lret
add
les
cld
jl
push
sub
sub
xor
cmp
outsb
sahf
fsubrs
test
cmp
inc
mov
dec
xchg
mov
push
sbb
in
mov
xor
pop
dec
mov
adc
les
shrl
pop
movsl
out
push
push
aad
xchg
mov
test
mov
movsb
cmp
adc
dec
push
jecxz
gs
dec
mov
mov
cmp
stc
sbb
pusha
mov
mov
xchg
ret
jmp
push
aam
aad
lret
ret
jns
push
dec
add
or
out
dec
push
xor
test
mov
push
enter
ss
mov
pusha
lahf
cmpl
dec
adc
add
xchg
out
push
aas
push
insb
adc
fdivrs
leave
aam
mov
scas
pop
mov
inc
adc
loop
int3
or
pop
out
xor
push
adc
cmc
lahf
push
shlb
cmc
xlat
ret
dec
rolb
cmc
xor
test
sub
pop
aad
and
jmp
fdivrl
loope
cmpsb
test
xchg
mov
mov
add
outsl
cmp
insb
stos
push
sbb
icebp
je
sbb
es
pop
cmpsb
lret
adc
pop
mov
push
inc
fbld
in
fisubl
cli
notb
inc
repz
xchg
test
movlps
sbb
jb
shl
push
and
mov
mov
rcll
nop
repz
xchg
push
pusha
mov
rol
testb
mov
sbb
xor
stos
into
mov
xchg
jecxz
push
stos
xor
mov
push
repnz
xor
xchg
test
cli
or
xor
inc
dec
ss
pop
in
enter
mov
outsl
pop
inc
inc
scas
push
lcall
sbb
lret
nop
xor
les
in
int3
ss
add
mov
outsb
inc
add
enter
push
pusha
pop
aam
clc
filds
pop
ja
jb
or
xlat
notb
outsl
mov
hlt
shll
mov
push
sti
sbb
mov
pop
dec
mov
jle
daa
and
mov
push
popa
in
inc
adc
sub
lods
sbb
jbe
mov
cwtl
popl
inc
lock
mov
jle
xor
push
xchg
push
or
jge
and
das
adc
loop
orb
mov
les
ss
rcll
dec
adc
cmpsb
mov
xor
dec
mov
mov
pop
xor
imul
enter
mov
or
mov
loop
or
inc
xor
jmp
cmp
dec
sbbl
jmp
adcl
mov
xchg
jecxz
mov
mov
jbe
push
inc
rorb
push
out
imul
jo
add
mov
call
sub
pop
mov
sbb
mov
xchg
xchg
cmp
mov
or
loope
insb
jecxz
imul
popf
push
and
stc
iret
shll
push
dec
fldcw
out
stc
imul
insl
popf
cld
inc
push
aaa
int
jle
pushl
les
dec
xor
lahf
or
cmpb
jnp
and
xchg
dec
dec
sub
jo
dec
out
sub
add
cld
fisttps
add
out
xor
jecxz
sbbl
shlb
pop
loop
push
rolb
pop
and
mov
mov
add
adc
fsubl
lds
scas
mov
and
pushf
xorb
dec
rorb
xchg
out
ret
mov
push
xor
adc
ret
enter
pmaddwd
je
mov
insl
pop
test
loop
mov
icebp
dec
ret
ja
jno
daa
sub
pop
pop
push
dec
stos
jp
sub
lahf
outsl
sub
mov
ja
in
xchg
mov
fisubl
mov
inc
popa
or
hlt
or
ja
mov
test
sub
cltd
xchg
in
pop
sbb
mov
xor
data16
inc
dec
fimull
xor
inc
lret
js
push
icebp
lea
pop
sbb
notb
lret
das
lret
add
adc
lds
lcall
pop
inc
jle
sahf
push
stc
scas
sub
cli
pop
jecxz
stos
mov
lret
bound
or
stos
dec
arpl
fucom
lcall
adc
pop
inc
xchg
nop
push
push
rcrb
scas
nop
sbb
fldt
sbb
xor
fisubrl
mov
stos
loope
xor
jae
stos
jno
aam
and
movsb
or
cli
add
cmp
sbb
mov
push
imul
icebp
fldl
pop
xlat
jno
cmp
rcr
mov
inc
js
add
inc
pop
sub
xor
jns
repnz
xchg
outsl
cmp
and
sbb
add
mov
adc
mov
aam
frstor
div
out
or
xchg
repnz
cwtl
or
pop
mov
and
sbb
xchg
and
pop
gs
pop
mov
and
cmc
cmp
imul
pop
adc
leave
pop
repnz
and
mov
mov
mov
sahf
test
jp
jle
or
incb
inc
mov
xchg
dec
jb
mov
icebp
mov
mov
icebp
dec
xor
jmp
jmp
test
sbb
jnp
inc
fisubl
sub
pop
jbe
ret
cmp
adc
cmp
fistpll
add
pop
int
int3
mov
out
jp
adc
push
in
call
mov
out
aam
xchg
inc
pop
and
push
adc
js
mov
push
dec
sbb
add
stc
jnp
xchg
mov
mov
pushf
adc
adc
or
push
pop
mov
inc
mov
lods
jae
jne
lret
popf
lods
jge
or
dec
dec
add
loopne
xor
pop
and
aam
xchg
xchg
adc
repnz
xchg
iret
pop
jmp
push
xchg
xchg
into
pop
jmp
and
fnstenv
cmp
inc
les
mov
push
daa
test
lods
mov
inc
lea
fsubrl
imul
mov
rolb
push
int
popf
inc
stc
fdivrl
ret
js
dec
and
jb
lahf
hlt
ror
mov
mov
std
sbb
cmp
push
xor
pop
pop
addr16
call
je
dec
rorb
lea
push
scas
cmp
stc
pop
and
and
or
movsl
into
clc
nop
push
ljmp
ret
test
sarb
pop
rep
icebp
mov
dec
lahf
sahf
sbb
sahf
repz
icebp
rclb
fists
mov
push
aad
mov
addl
ficomps
loop
ljmp
nop
push
ds
popa
scas
and
xor
enter
shlb
call
pop
scas
xor
or
lahf
and
movsl
adc
imul
xor
adc
mov
insl
push
mov
scas
aam
mov
loope
arpl
mov
jnp
rcll
pusha
int
call
pop
inc
in
and
pop
fsubs
pop
fs
test
call
orb
in
mov
dec
and
cmp
outsl
loope
cmp
frstor
movsb
movsl
arpl
pop
inc
xchg
fdivrl
and
aad
and
sub
frstor
fcmovbe
and
pop
push
mulb
adc
stos
hlt
cs
outsb
fsubs
pop
jno
inc
mov
ficoml
push
jns
in
adc
ja
loope
mov
cmc
mov
mov
daa
pop
push
mov
lds
insb
inc
lret
in
or
sub
lahf
pop
insb
push
xor
outsb
or
xchg
test
cmpsb
je
cltd
sub
rcrl
add
dec
push
adc
cmp
aas
imul
jnp
pushf
rolb
mov
mov
outsl
bound
lds
stc
pushf
das
sub
shlb
mov
xor
cmc
push
push
int
push
cmpsb
inc
lea
ja
ljmp
js
push
adc
jns
fs
jl
adc
ljmp
fstps
je
sti
sbb
xchg
cli
jbe
adc
outsb
jmp
fdivrl
jg
popf
cmp
addr16
sub
cmpsl
pushf
loopne
loopne
jne
je
inc
test
jnp
gs
gs
std
mov
data16
jb
das
mov
xor
call
xchg
mov
inc
push
or
loope
mov
pop
ss
cmpsl
pop
out
xor
in
sahf
fwait
mov
and
cmpsb
ja
push
sbb
jle
divb
ds
and
push
inc
pop
sbb
push
cmp
or
or
xor
adc
pop
xchg
inc
faddl
insb
popa
fs
mov
dec
pop
dec
fisubrl
aas
mov
je
sub
pop
mov
xchg
scas
push
push
jle
add
int3
iret
xchg
sbb
cmp
in
cmp
out
insb
rolb
int
and
xor
add
fwait
sbb
xchg
imul
out
mov
inc
jle
ss
mov
in
test
lods
adc
test
push
rol
fdivrs
push
cmc
push
es
add
dec
lahf
ds
fwait
mov
in
ret
ds
jp
add
dec
add
add
inc
lods
pop
imul
jecxz
lods
jnp
mov
push
pop
cmp
xchg
cmp
daa
sahf
xchg
cmp
push
das
inc
repz
lods
out
into
dec
xor
and
sub
jg
mov
les
adc
cmp
jp
dec
and
das
mov
push
movb
push
dec
fs
jne
dec
fucomip
fists
jo
stos
decl
dec
inc
inc
mov
in
sub
mov
mov
js
fsts
test
shll
mov
lahf
fadds
fistpll
lock
enter
lods
mov
inc
jne
push
fcompl
push
js
sub
fsubrp
and
cmp
add
jle
and
rcr
test
or
xlat
repz
je
mov
data16
and
xor
cmpsl
xlat
and
lods
jbe
cmpsl
fisubs
ss
xor
cmp
mov
sbb
imul
leave
repnz
pop
loopne
mov
aam
push
adc
mov
jns
xchg
mov
mov
lahf
dec
jmp
fcmovne
insb
or
fstpt
sub
push
ljmp
jge
lahf
enter
addb
mov
pushf
push
pop
cmpsl
mov
outsb
into
mov
jbe
jmp
mov
ret
push
fcoms
aad
mul
mov
int3
je
cmp
loope
lahf
cmp
mov
cld
mov
dec
aas
mov
imul
sbb
fdiv
fldl
imul
jmp
and
dec
inc
imul
mov
mov
jnp
hlt
lds
sub
mov
mov
out
ss
pmovmskb
insl
jns
cmp
xchg
inc
fistpl
ret
insb
aam
xchg
pop
mov
sub
pop
lret
push
aas
mov
call
xchg
mov
adc
add
imul
outsl
push
mov
pop
inc
jp
cmp
inc
mov
pop
nop
loope
xor
notl
lea
sub
movsl
jle
adcb
jae
scas
push
mov
movsl
and
dec
data16
ds
mov
cmp
int
shr
adc
movsb
adc
or
testl
lock
out
out
pusha
mov
inc
popa
inc
out
imul
repz
loopne
jo
add
ret
mov
stos
and
test
sbb
test
mov
je
jae
sti
lods
subl
nop
pop
movsb
xchg
sbb
jbe
pop
in
xchg
or
sbb
ret
add
mov
cwtl
and
rorl
mov
sbb
and
and
lret
arpl
pop
add
or
js
lock
xchg
adc
pop
clc
adc
adc
fcmovnu
fidivs
movsb
adc
sub
paddsb
ret
insb
xchg
xchg
sbb
insb
cli
cltd
mov
int
pop
pop
test
scas
arpl
push
cmc
inc
push
dec
cmovl
add
sti
push
outsb
pop
scas
sbb
push
lods
enter
sbb
cmc
sub
ficomps
adc
mov
fldenv
mov
icebp
lret
mov
movsl
insl
xlat
xchg
outsl
and
jl
and
mov
xchg
scas
jl
aam
sub
pop
fildl
dec
orl
sub
inc
mov
cmp
mov
jne
imull
daa
or
adc
push
xchg
dec
adc
add
mov
inc
insl
and
pushf
or
lahf
sub
add
jp
or
xchg
loopne
or
ja
pop
roll
cmp
jno
popf
or
sub
jmp
fiadds
out
sbb
pushl
stos
lods
int3
sbb
pop
pop
rcr
add
jge
lea
fs
out
mov
jle
xor
xlat
add
sbb
lock
jo
testl
jl
push
test
movsb
inc
xchg
or
addr16
xchg
lahf
inc
ret
jb
lret
mov
jle
je
sub
dec
dec
adc
adcl
fs
retw
or
and
jge
out
jg
adc
jecxz
sarb
mov
cltd
test
adc
cmpsb
and
push
je
push
ficomps
lret
xor
imul
mov
outsb
daa
adc
in
mul
jp
out
int3
arpl
divl
pop
mov
pop
loop
ss
push
ds
cmpsl
ljmp
xchg
fnstenv
add
iret
dec
ja
mov
xchg
iret
data16
arpl
pop
cltd
adc
pop
jmp
mov
roll
addr16
mov
mov
lea
xchg
rol
stos
xchg
pop
fcoml
mov
or
sub
mov
hlt
test
xor
outsl
stc
or
into
loope
sub
jbe
mov
pop
loope
xchg
mov
inc
in
sub
sbb
das
std
in
push
ret
push
inc
xor
mov
jbe
popf
rolb
jecxz
es
push
int
vpunpckldq
sbb
movups
mov
mov
stos
jb
ss
not
mov
gs
adc
inc
lret
outsl
lods
and
icebp
pop
cmpsl
loope
in
iret
dec
rorb
sbb
shr
fincstp
lcall
lcall
outsl
cmp
enter
lret
push
xchg
xor
xchg
jmp
fcmove
jmp
or
mov
xchg
xor
aam
shll
dec
push
jecxz
mov
shlb
xor
ja
adc
dec
cmovo
xchg
inc
jecxz
pushf
adc
or
add
mov
push
xchg
jp
aaa
dec
mov
sub
dec
mov
pop
sub
loopne
lahf
xchg
adc
outsb
sbb
dec
or
cmp
loop
push
leave
adc
push
add
popa
mov
push
push
dec
adc
aaa
sub
mov
pop
jp
mov
enter
dec
out
movsl
mov
mov
lock
mov
jne
out
add
add
leave
push
jmp
pop
push
adc
std
push
xor
pop
cltd
stos
iret
pop
mov
arpl
andb
xchg
in
cmpb
repz
sbb
icebp
lock
imul
mov
roll
mov
xchg
xchg
pop
add
inc
dec
jp
lods
imul
sbb
sbb
mov
xchg
jmp
rcl
test
jnp
dec
adc
or
inc
shlb
fadds
out
negb
push
scas
sbb
stos
cmp
xchg
cwtl
hlt
mov
jl
mov
and
out
hlt
loopne
aad
jne
mov
test
imull
pop
inc
andb
mov
pop
push
aam
in
repnz
lret
adc
jno
cmp
mov
jg
cmpsl
inc
hlt
adc
rcr
ret
cmpsb
pop
out
fistpl
dec
xchg
adc
xchg
inc
clc
mov
cs
sub
aas
jb
and
ficomps
cmp
sarl
sub
mov
aas
cld
mov
rclb
mov
and
cmc
lods
add
xchg
and
mov
pop
xchg
pop
lret
add
gs
not
adc
fildl
test
cli
pop
ss
add
inc
testb
and
jns
push
test
cmpsl
cmc
inc
mov
push
data16
jo
rep
dec
xchg
xor
or
outsl
dec
xchg
arpl
rcll
dec
int3
andb
xchg
sub
nop
stos
pop
test
dec
scas
add
cmp
jne
push
icebp
push
cmc
sbb
shrb
jbe
pop
jb
in
mov
fsub
js
icebp
lret
nop
jbe
std
ret
fsubrs
fmull
sub
pop
or
push
movsb
fwait
xlat
int3
inc
xchg
jno
sbb
les
push
cltd
inc
mov
pop
cltd
fisttps
xchg
nop
pop
push
in
mov
das
test
pop
push
in
sub
pop
fidivs
inc
xchg
or
dec
dec
adc
adc
dec
push
lods
rclb
inc
pop
movb
adcl
jae
cmp
and
loopne
add
adc
adc
mov
ljmp
pop
add
add
ds
test
lods
outsb
and
aam
lahf
sub
mov
sbb
cmp
dec
mov
jl
pop
pop
sbb
add
jp
xor
cmp
mov
mull
rclb
xchg
and
data16
stc
call
mov
mov
push
dec
sub
cs
push
mov
push
push
pop
inc
test
xor
xchg
mov
lret
shll
repz
in
shll
push
push
das
mov
daa
jbe
push
es
add
push
icebp
notl
fisubs
jb
lods
outsl
cmpsl
jne
push
mov
imulb
aas
mov
jmp
jmp
hlt
ja
addr16
test
arpl
cmpsb
outsl
leave
or
sub
subl
jle
push
dec
jecxz
mov
xor
adc
dec
inc
addr16
pop
cmp
mov
inc
das
fwait
notl
pop
clc
mov
push
xlat
fimull
incb
mov
jb
xchg
or
stc
int3
add
pop
sub
mov
fcmovne
cmpsl
xchg
mov
ljmp
and
or
mov
ret
bnd
inc
pop
mov
mov
rol
xchg
dec
andl
xchg
cmpsb
push
dec
jge
and
mov
out
add
jecxz
jno
ja
sahf
fiadds
mov
int3
je
inc
loopne
fildll
mov
ljmp
aam
dec
lods
push
jmp
mov
mov
cmp
insb
adc
add
ret
bound
lods
cmp
hlt
mov
ds
cwtl
orl
movsbl
sbb
mov
stos
mov
jbe
pop
dec
rorb
fbstp
sub
mov
sbb
lods
add
int3
sahf
int
xchg
mov
jl
and
dec
sahf
test
xor
ljmp
dec
stc
pop
dec
iret
pop
sub
loope
stc
movsb
in
push
sbb
jae
in
cmpb
cmp
lods
negl
sub
inc
push
inc
data16
jl
xchg
imul
cs
cmp
jo
mov
cld
mov
jnp
and
mov
sarb
inc
lds
or
test
inc
lods
sub
jne
mov
test
jne
pop
mov
cmp
pop
push
test
insl
bound
add
in
mov
imul
xchg
adc
sub
inc
xor
das
sub
jge
jmp
inc
and
xchg
add
mov
dec
mov
cmpsl
imul
leave
cmpsl
adc
scas
mov
push
ret
aam
pop
test
jle
add
andb
push
test
push
fdivl
and
cld
pop
sti
jle
scas
xor
aam
jge
call
xlat
push
jp
mov
mov
sub
xchg
mov
push
test
xchg
push
inc
lahf
xor
test
mov
dec
aas
sbb
int
cwtl
out
jnp
cmp
cmpsl
push
adc
mov
adc
lahf
shrb
mov
lahf
mov
dec
dec
andl
lret
push
mov
pop
dec
dec
sar
cmp
ss
cs
sub
jp
jp
mov
dec
push
lret
int
inc
sub
icebp
cmp
sbb
or
pop
clc
or
rcrb
test
and
adc
ss
pop
sub
pop
decl
fwait
les
mov
or
cmp
xor
fdivrl
sbb
and
inc
mov
ret
lea
scas
enter
dec
loop
cli
pop
adcl
out
daa
pop
or
icebp
add
cwtl
pop
repz
fistpll
pop
push
cmc
lds
aaa
mov
jmp
add
jo
and
out
add
nop
fisubs
jp
push
ja
sub
jns
push
pop
pop
pop
das
mov
aaa
sub
addr16
mov
addl
or
in
push
mov
pop
and
fstpt
and
mov
js
jg
xor
test
pop
sahf
test
sbb
and
jp
inc
and
xor
gs
jle
addb
inc
sub
sub
or
unpckhps
pop
imul
adc
rol
cs
or
rol
xorb
cmp
data16
ja
je
jle
xchg
jg
jo
je
sti
pop
lret
jg
push
sbb
fsubr
outsb
fisubrl
jae
popf
stos
std
sub
push
notl
add
loop
popa
ds
std
dec
or
jge
pop
test
fists
add
xor
leave
push
cli
scas
fnstsw
sbb
pop
movsb
pop
xor
adc
adc
adc
mov
ret
addb
sub
daa
pop
out
inc
shll
or
cld
adc
scas
fs
jno
inc
mov
cmp
dec
jbe
mov
fisubrl
arpl
out
xorb
stc
or
rorl
jmp
adc
add
and
loope
imul
cli
stc
cmp
imul
or
ljmp
enter
cmp
ja
xchg
repz
aas
adc
stc
sbb
and
push
test
adc
fistpl
xlat
adc
sbb
push
xchg
scas
sbb
les
stc
aam
mov
andl
sbb
xor
mov
mov
rolb
xchg
or
mov
xchg
fadds
mov
mov
jae
aas
mov
test
jo
mov
test
inc
sti
jnp
shl
out
dec
and
mov
pop
mov
jns
pop
cmpb
sbb
fs
sbb
pop
cld
stos
in
cltd
cmp
mov
lods
push
pop
jge
cltd
mov
lcall
push
xchg
insb
popa
gs
xchg
dec
in
mov
lds
dec
sub
jnp
xchg
mov
shll
or
loope
movsl
cs
jbe
int3
ret
fs
mov
test
es
mov
fs
fcmovb
jl
mov
mov
das
lret
or
sub
add
inc
stc
mov
pushf
mov
mov
cs
inc
add
xor
xchg
xor
inc
and
cmpsb
inc
sub
sbb
adc
mov
mov
mov
scas
incb
out
subb
inc
jmp
cld
filds
fsts
mov
pop
mov
mov
out
cmp
aas
cmc
fistl
stos
inc
mov
movsl
rcrb
int3
jo
xor
out
ljmp
fcomi
hlt
shlb
xchg
sbb
stos
hlt
push
popf
mov
pop
push
inc
xchg
xor
sbb
jnp
cltd
leave
dec
imul
in
flds
les
adc
push
testb
xchg
adc
jl
pop
in
mov
stos
mov
lret
dec
adc
arpl
xor
andl
sbb
push
ja
lea
cmpsb
insl
push
aad
test
push
bnd
jle
int3
pop
mov
xchg
imull
fwait
and
xor
pop
popf
sti
rcl
xchg
sbb
incb
xchg
xlat
daa
dec
ficomps
addr16
es
inc
cmc
lods
cli
insb
or
push
mov
jge
loopne
dec
loopne
aaa
in
pop
sbbb
lock
les
pop
ja
xor
arpl
push
push
xor
add
mov
out
jb
mov
insb
out
mov
sub
loopne
pop
ss
inc
je
popa
mov
int
mov
stc
mov
movsb
mov
mov
mov
in
xor
and
daa
rorb
into
push
mov
je
xchg
mov
nop
jae
in
sub
cli
mov
xor
pop
xor
nop
cmp
inc
jb
cltd
add
outsb
mov
test
push
inc
push
fdivl
fidivrs
lcall
or
push
mov
inc
dec
mov
das
dec
cltd
xchg
rcrb
add
bound
dec
aam
mov
fistpl
dec
std
dec
gs
js
xor
push
or
nop
cmc
dec
shll
clc
and
mov
mov
add
out
fcoms
repz
mov
pusha
mov
movsl
mov
inc
fildll
mov
jle
push
sub
cs
call
fbstp
test
or
xchg
and
xchg
sbb
push
addb
in
dec
sub
jae
loope
mov
out
add
iret
pop
cld
push
sbb
clc
add
mov
test
ja
or
js
xchg
pop
cs
or
mov
mov
cld
mov
outsb
mov
gs
je
rcrb
mov
pop
jg
jmp
cwtl
int3
jno
fcmove
jae
xor
mov
daa
add
lods
inc
test
scas
in
adc
out
pop
dec
xchg
sub
push
jl
les
xchg
in
mov
dec
cs
hlt
mov
dec
or
inc
dec
pop
push
fbld
mov
xchg
outsb
fs
mov
mov
pop
lods
xor
adc
cli
stos
mov
xor
mov
sbbl
lds
std
shlb
scas
bound
sbbb
mov
push
pop
cli
fstl
cld
movsb
dec
aad
bsf
test
gs
popa
in
push
xorl
cld
or
ficomps
xor
movsb
jl
aas
les
push
add
xchg
add
dec
add
je
out
xchg
jae
fnstsw
je
shlb
lds
xchg
popf
loopne
xor
cmp
lods
cltd
insl
rclb
jo
inc
aad
push
pop
mov
fiadds
xchg
push
rcr
mov
mov
mov
mov
pop
jge
insl
lcall
gs
and
and
gs
jnp
add
movsl
cmp
lods
mov
xor
pop
ficompl
mov
scas
mov
int3
iret
and
pushf
imul
add
jb
movsb
jnp
in
sarb
mov
cmp
test
ret
lcall
inc
out
jnp
test
shlb
jmp
out
jl
sahf
loope,pt
test
add
nop
or
clc
push
repz
xor
xchg
test
repnz
jo
cmp
fdivrl
inc
push
lret
xor
inc
mul
sti
push
cmpsb
or
mov
inc
mov
in
cmc
jle
insb
inc
mov
pop
sub
cmc
jb
inc
ljmp
ss
push
jae
jnp
mov
mov
loopne
dec
fabs
sbb
fcomps
std
mov
mov
scas
cmp
in
inc
sbb
xchg
flds
inc
sbb
js
push
push
jg
pop
stos
dec
popa
inc
in
sub
sub
sub
add
fs
imul
and
xchg
or
mov
xchg
dec
pop
stc
rorb
pop
jl
push
cld
mov
jnp
mov
clc
lahf
dec
jne
push
add
fs
out
nop
and
dec
and
add
pushl
negl
pop
in
orb
mov
fnstsw
sahf
adc
mov
outsl
cmp
jbe
jo
jmp
mov
in
outsb
stc
cmpsb
add
pop
mov
pop
rcrb
pop
jnp
movsb
jp
or
pop
sbb
xor
mov
sub
fnsave
and
daa
loope
in
leave
pop
jl
ss
jle
mov
repnz
jp
jmp
push
sub
xchg
lcall
subl
xlat
cmp
jge
push
push
dec
sti
adc
pop
lret
fcmovbe
test
dec
in
and
mov
dec
sbb
adc
movsb
sub
push
dec
fsubrs
lahf
iret
sahf
addr16
cmp
dec
xchg
loopne
mov
adc
mov
push
pop
dec
enter
inc
jo
sub
incl
cmp
jbe
lret
lds
int3
mov
xorb
cli
mov
roll
mov
push
fwait
jo
mov
outsb
lods
repz
aam
pop
push
flds
xor
icebp
push
xchg
mov
jns
daa
add
add
sets
scas
pop
mov
pop
jecxz
divl
clc
pop
iret
pop
and
sar
and
push
cmp
leave
push
mov
inc
scas
jno
mov
adc
pop
jmp
scas
ds
pop
pop
xchg
mov
mov
aaa
jno
sbb
mull
dec
push
mov
add
js
sbb
cmp
add
xchg
lods
dec
popa
pop
sbb
inc
mov
enter
js
fs
ss
clc
push
pushf
lods
in
push
leave
push
pop
sbb
loop
int
popa
and
movsl
dec
pop
dec
stos
and
in
mov
test
push
int
jecxz
cli
je
inc
loop
adc
xor
cltd
outsl
sub
sub
fwait
gs
lea
in
fbstp
stc
mov
pop
adc
adc
push
or
adc
movsb
and
mov
lods
out
pusha
jns
popa
cmpsb
mov
sbbl
outsb
enter
mov
or
jnp
jo
addl
mov
cmp
sbb
stc
mov
ret
and
mov
xor
lds
pop
mov
cmc
sub
aas
subl
es
stc
hlt
jno
mov
sbb
push
dec
jae
xchg
dec
xchg
mov
popa
sub
std
cmc
test
and
lahf
fmuls
mov
xchg
out
and
push
push
popf
xor
xor
dec
out
dec
and
dec
xchg
imul
dec
xlat
pop
push
shll
cmpsb
shld
repnz
int3
cmp
push
mov
sti
jg
add
jmp
pop
jae
pop
stos
inc
rcrb
mov
movsb
jle
xchg
insb
and
or
mov
imul
pop
in
sbb
leave
popf
ss
inc
into
mov
xchg
adc
inc
cmp
push
call
and
pextrw
inc
mov
imull
sub
sbb
cmp
inc
push
push
fistps
jbe
push
adc
aad
add
insb
sbb
pop
mov
cmp
imul
lret
pop
pop
jo
xor
cmp
scas
shll
mov
xorl
insl
push
mov
cltd
loop
adc
cmp
jae
xor
jle
nop
xchg
adc
js
xor
cmp
call
dec
sub
push
insb
hlt
dec
sub
clc
repz
mov
inc
adc
push
jne
test
fildl
pop
or
xor
mov
adc
mov
aam
andl
inc
dec
aad
jb
push
push
aad
inc
ss
sbb
or
ljmp
fs
mov
mov
jle
bound
stos
int3
loope
push
and
loop
leave
jns
call
cld
or
pop
add
push
xchg
test
aad
add
jno
fldl
test
out
ret
dec
int
jp
jl
inc
pop
xchg
mov
mov
ss
fcos
bound
xchg
or
and
jae
xchg
out
mov
pop
sbb
jbe
pop
inc
sbb
pushf
aam
data16
xor
xchg
cmp
es
cmp
xchg
out
and
xor
movsb
dec
and
cmpsl
lahf
imull
push
gs
mov
push
fistps
insl
mov
sub
sub
mov
adc
test
sbb
adc
inc
add
mov
lods
fcoms
fs
sub
aam
mov
mov
lods
mov
xchg
xor
mov
shrb
inc
xor
pop
cltd
inc
sti
add
mov
rcr
jecxz
sar
xlat
xchg
call
or
and
daa
fisubrl
pop
jg
xor
stos
add
outsl
xor
lahf
cmp
stc
mov
pop
push
test
scas
lahf
scas
iret
xor
adc
mov
sbb
mov
jbe
notb
sub
aaa
nop
mov
lock
inc
fistpl
pusha
into
rorb
jnp
mov
hlt
jl
aas
out
int
inc
repnz
shrb
into
fs
sbb
mov
cmp
repz
sub
cmp
adc
mov
loope
pop
fcomp
lret
subl
push
cmp
rolb
inc
jnp
call
xlat
ss
push
xlat
dec
bound
pop
cmp
xchg
stc
aas
sbb
jb
bound
inc
pop
sub
hlt
rorl
arpl
sbb
mov
addr16
lret
loope
inc
push
sbbb
sub
jecxz
fldlg2
adc
stos
je
add
nop
ja
jg
mov
mov
and
test
inc
xor
outsb
cmp
xchg
adc
jmp
or
mov
test
aad
testb
lea
or
or
outsl
jo
imul
movsl
mov
dec
pop
pusha
aad
mov
leave
pushf
mov
pop
pop
in
clc
inc
roll
xlat
dec
cmp
xor
ss
mov
outsb
mov
lahf
push
push
test
and
movsb
cmc
xchg
orl
ds
dec
xrstors
in
mov
mov
lcall
imul
mov
ret
sub
out
outsl
pop
mov
into
lret
jno
loop
mov
insw
cmp
mov
push
mov
adc
sub
or
mov
dec
ja
inc
push
call
and
sti
inc
adc
mov
scas
aaa
cmp
mov
jg
pop
lcall
jo
cmp
stc
das
popa
fmuls
notl
les
add
inc
jb
sbb
lret
inc
push
loope
sub
dec
aas
cmpsl
inc
mov
fdivrp
out
ss
repz
pop
cmp
push
push
movsl
xlat
lock
stos
cmc
or
outsb
dec
mov
jmp
xor
pop
lea
xor
sub
pop
vmovapd
out
insl
shlb
xor
cmp
inc
hlt
std
fimuls
mov
es
mov
adc
sbb
xlat
add
add
stos
ljmp
add
adc
loope
mov
hlt
ror
loope
ljmp
outsl
lea
push
imul
mov
ljmp
flds
adc
xchg
mov
ljmp
inc
inc
xchg
push
jno
cmp
pop
push
cmp
bound
fadd
and
xor
pop
pop
sub
and
outsb
add
lock
add
popa
push
mov
mov
fldl
int3
mov
xchg
mov
enter
mov
xor
dec
lds
mov
sbb
sti
sub
push
pop
imul
addl
popa
popf
and
push
push
repz
fldenv
in
mov
out
scas
outsb
push
cmp
shr
push
mov
aaa
cmpsb
fs
aaa
mov
stos
lcall
mov
pop
mov
jo
jl
loope
sarb
and
and
mov
jmp
mov
mov
cmp
dec
sub
or
sub
mov
ds
stc
in
fmul
and
push
push
cmc
jbe
ja
aas
pop
test
dec
cmpsl
xchg
das
xchg
cmc
or
idivl
jne
and
insb
mov
inc
jecxz
stos
cmpsb
pop
loop
cltd
ficompl
outsb
ficompl
testl
adc
push
xlat
xchg
add
sub
daa
dec
stos
cs
aaa
outsl
popf
pop
popf
aad
pop
movsb
mov
and
das
test
hlt
shrb
icebp
fnstenv
rorl
loope
les
inc
add
not
aas
mov
push
cli
gs
ret
outsl
lock
iret
push
dec
in
mov
push
xchg
or
adc
gs
sub
push
mov
adc
loop
add
mov
dec
sbb
add
incb
pushf
sub
out
cltd
sbb
cmp
mov
and
in
xor
xchg
xlat
frstor
cmp
push
jle
adc
push
shlb
jb
iret
stc
decl
sbb
adc
fs
gs
sbb
insl
xchg
shll
add
jmp
rorl
int
loop
pop
mov
xlat
xchg
mov
xor
idivl
push
xchg
sbbl
sub
ljmp
xchg
bnd
lods
lahf
decl
in
inc
jle
add
rolb
xor
push
cs
xchg
jae
es
push
cli
and
add
bound
jp
pop
cltd
bound
xchg
imul
insb
adc
adc
fadds
push
stos
sub
xchg
out
xlat
mov
mov
mov
das
aam
ss
push
aad
jns
mov
cmp
push
lock
sub
jne
cmp
shrb
dec
jp
push
pop
arpl
push
jmp
out
add
jne
or
add
outsb
lea
xchg
outsb
mov
shlb
adc
and
sbb
dec
mov
add
xor
aam
outsl
cmp
dec
dec
mov
inc
pop
xor
loop
sbb
incb
sub
xor
lahf
out
xchg
insl
or
dec
push
push
jmp
sbb
pop
xchg
sahf
mov
add
or
out
mov
ficompl
pop
jge
push
mov
mov
or
pop
cmp
cwtl
std
fdivp
clc
cmp
inc
push
pusha
push
movsb
insb
and
mov
push
cmpsl
fstps
sarb
sbb
sub
lret
cli
xchg
pop
adc
insb
mov
pop
mov
pushf
add
cltd
das
inc
js
push
inc
leave
mov
cmc
cmp
mov
jo
lods
insb
sub
je
xsavec
test
xchg
adc
fisubl
mov
into
imull
std
ljmp
sub
daa
mov
cmpsb
mov
rol
push
into
out
aaa
mov
mov
sbb
jle
fisubrs
scas
daa
negb
pop
bound
or
sbb
int3
sub
sbb
pusha
pop
mov
pop
pop
jge
ds
mov
out
mov
cli
add
sbb
jl
add
sub
testb
or
and
ror
adc
and
lock
jbe
int
adc
jno
cmc
inc
nop
sbb
outsl
or
dec
stc
fisttpl
mov
leave
lds
mov
adc
insl
mov
ja
sbb
test
xchg
push
push
pushf
jmp
cmp
mov
push
frstor
mov
or
sbb
pop
push
movb
aaa
es
jl
add
outsb
nop
fstl
outsl
arpl
ret
out
popaw
push
mov
cmp
mov
clc
jmp
outsl
sbb
imul
or
popa
add
xor
sahf
test
sub
into
mov
mov
rorl
rcl
pusha
call
inc
jmp
mov
test
sub
das
out
mov
jp
and
cmp
sti
shrb
inc
dec
cwtl
mov
mov
loop
inc
xlat
nop
stc
push
push
insb
testl
push
leave
mov
push
mov
jg
scas
and
int
cli
xor
shlb
jecxz
xchg
sbb
dec
add
push
or
sub
aad
dec
inc
test
lahf
jl
mov
lds
stc
in
xchg
leave
fadd
push
sbb
dec
in
inc
cli
mov
pop
adcb
cli
jle
push
in
jo
ficompl
add
data16
sti
mov
inc
mov
add
inc
add
xchg
test
in
test
pop
jecxz
jg
out
jmp
or
mov
push
les
add
stos
sub
push
int
fsubr
imul
inc
notb
cmp
xor
pop
pop
out
mov
loopne
repz
cltd
nop
in
inc
in
or
xchg
jl
and
lret
and
ljmp
push
xchg
adc
mov
jb
les
jmp
adc
adc
scas
dec
ficompl
mov
pop
out
mov
adc
mov
insl
pop
in
sbb
rcl
fprem1
dec
xchg
jp
inc
inc
aaa
ficomps
jp
jbe
fstl
xchg
pop
sbb
in
xor
cs
jecxz
out
aaa
mov
std
xchg
enter
mov
data16
xchg
cltd
sbb
ljmp
mov
pop
xchg
enter
lahf
rorl
push
sub
pusha
inc
ror
fsubr
in
xlat
cld
gs
push
pop
jnp
inc
pop
jnp
mov
inc
dec
es
fnsave
dec
xlat
xchg
subl
mov
arpl
dec
add
f2xm1
push
hlt
popf
cmp
inc
or
jne
gs
sub
adc
pop
outsb
inc
testb
ljmp
push
les
fsub
out
add
aaa
mov
jno
xor
mov
mull
xchg
scas
nop
into
in
fwait
mov
negb
test
inc
scas
xor
dec
mov
repz
xchg
mov
mov
mov
clc
clc
scas
cmp
shl
adc
or
inc
js
push
adc
mov
incb
out
ret
rolb
pop
fld
mov
pop
fcompl
lock
outsb
sbb
pop
ja
into
cmp
out
xorl
pop
bound
loop
clc
inc
xor
in
aas
notl
pop
lods
insl
icebp
sbb
ja
lock
pop
test
mov
lds
popf
jmp
data16
lods
scas
cmp
enter
out
xchg
fsts
fadds
push
mov
adc
push
inc
aam
sub
stc
adc
or
push
sti
imul
mov
into
frstor
mov
inc
cmp
fs
push
adc
in
out
cmpsb
cmpsb
and
aad
xchg
dec
repz
mov
mov
lret
scas
push
mov
mov
mov
pop
nop
mov
cmc
inc
lea
lret
clc
loope
mov
dec
xor
nop
inc
cmc
xchg
gs
js
imul
das
nop
cmpb
dec
fildll
mov
decb
rcll
pushf
ds
xchg
sarl
loopne
xchg
jg
and
xlat
lock
jbe
cltd
sub
pushf
cmp
dec
mov
dec
push
fcmovnbe
mov
jnp
inc
popf
sahf
or
pop
jo
leave
adc
cli
mov
inc
arpl
fmulp
adc
popa
add
pop
gs
mov
mov
andb
fldt
cltd
or
xchg
test
jle
shll
in
xor
or
mov
subl
rcrl
and
push
scas
mov
mov
cmp
sub
cs
pop
push
mov
test
adc
adc
pop
scas
sti
iret
add
inc
mov
les
xor
pop
mov
sub
sub
pop
inc
xor
sub
sub
mov
push
push
ds
push
mov
xchg
getsec
aad
add
rorb
jnp
mov
xor
inc
mov
mov
ja
sti
jo
lret
sarl
pop
clc
leave
mov
lods
lea
movsl
imul
lods
inc
outsl
lods
pop
and
jo
pop
mov
xchg
xchg
mov
scas
loope
jl
jnp
dec
sub
out
xchg
les
mov
inc
movsl
jo
sub
mov
pop
sahf
adc
leave
lea
adc
inc
add
imul
jno
add
outsl
add
loopne
add
sub
cmpsb
inc
add
inc
and
push
testb
shl
loopne
sub
inc
fnstcw
arpl
and
sbb
xchg
pusha
dec
shlb
mov
inc
dec
scas
jecxz
imul
dec
adcl
call
mov
mov
pusha
mov
adc
dec
mov
adc
sbb
inc
stos
mulb
adc
fcomps
add
inc
cmpl
mov
mov
lods
psrlq
jne
jno
stos
sbb
or
xchg
sub
push
cmpsb
mov
scas
scas
rol
mov
mov
lret
ja
out
fimuls
xor
nop
repnz
rcll
dec
cmp
and
cmp
inc
or
dec
stos
gs
shrb
mov
notb
pop
and
cmp
inc
inc
jb
mov
cmp
cmp
push
mov
inc
xor
shrl
mov
adc
dec
cli
mov
scas
jno
dec
dec
ds
leave
jge
shrl
sbb
arpl
idivb
mov
xchg
push
in
sub
or
hlt
fisttps
lret
cmovl
fwait
push
js
add
cmp
inc
je
pop
scas
sub
xchg
cwtl
and
jp
sarl
popa
cmp
push
sub
mov
aad
sub
or
nop
je
loope
cmp
je
or
jo
test
or
and
mov
fistps
outsb
cmp
dec
test
mov
mov
xchg
or
push
ret
and
lahf
fs
movntps
into
sub
sahf
scas
mov
arpl
out
int3
shlb
add
cmc
cmp
mov
push
push
mov
int
adc
push
mov
or
adcb
movsl
xor
outsb
add
int
xchg
lea
push
clc
outsl
repz
cmpsl
bound
scas
cmova
lret
cmp
adc
ss
std
imulb
or
jmp
inc
loop
enter
scas
jbe
jmp
arpl
pusha
outsl
shlb
mov
mov
add
push
mov
jae
rcrl
scas
sub
mov
ds
gs
jne
mov
push
cmpsb
aam
inc
xor
adc
jg
inc
sbb
jl
test
jg
adc
jb
ljmp
mov
jl
push
xchg
fs
fmulp
adc
jmp
jnp
mov
inc
and
cltd
lcall
inc
jo
negl
lea
dec
sbb
mov
pop
jo
jo
or
mov
cmpsl
adc
xor
fildll
stc
mov
mov
lock
das
fwait
sub
jmp
mov
push
cltd
xchg
adc
push
scas
add
inc
sub
push
sarl
or
popf
push
and
sub
mov
xor
daa
xchg
cmp
add
adc
in
test
xchg
mov
cmp
mov
dec
mov
push
ljmp
lds
push
and
int3
push
pusha
mov
into
mov
cmpsb
dec
ret
jns
cmpl
shl
stc
cwtl
sub
int
imul
repnz
push
and
mov
andl
mov
inc
divb
je
dec
aaa
cmpsl
mov
mov
and
xchg
mov
fistpll
out
dec
flds
push
jo
pop
pop
iret
mov
cmpsb
jmp
sub
and
add
test
push
fmull
pop
and
and
mov
in
popa
pop
jns
sar
pop
mov
jge
lea
stos
mov
in
pop
add
rolb
and
cmp
dec
jo
sbb
inc
push
sahf
inc
out
mov
dec
rol
mov
das
adc
jbe
lret
stos
add
scas
push
sub
sub
dec
shll
outsl
nop
movsb
xchg
xchg
aaa
in
pushf
inc
arpl
arpl
sub
pop
inc
add
mov
sbb
repz
outsb
or
adc
adc
pop
and
dec
xor
sub
xor
scas
daa
xor
pop
fs
scas
js,pn
sub
rorb
imul
xchg
imul
xchg
or
icebp
mov
ret
sub
cmp
and
add
subb
lods
push
andb
call
adc
sbb
mov
fistl
and
inc
xchg
push
inc
inc
insb
mov
push
call
push
xchg
jnp
popa
add
in
or
add
sbb
jae
enter
sub
repz
call
shll
fst
mov
mov
sub
sub
stc
test
jmp
bnd
xlat
fs
stos
int
rclb
sbb
xor
lds
push
cld
fnstenv
adc
ret
lcall
fistps
mov
sub
push
inc
jne
stc
fadd
mov
mov
inc
cltd
add
popa
and
adc
push
lods
mov
push
outsl
inc
scas
xchg
filds
imul
jmp
xorl
mov
mov
push
jns
out
jnp
mov
push
leave
pop
adc
rcrl
cmpsl
push
cmpsb
lock
clc
aad
add
jecxz
cs
and
clc
pushf
push
call
pop
xor
push
repz
ret
popf
cmp
pop
push
xor
cwtl
sbb
fsts
ret
mov
xor
in
jle
daa
xchg
mov
in
loop
mov
adc
ficoms
sarl
mov
adc
xor
pushw
addr16
rorl
and
jns
add
shlb
jp
jne
dec
xchg
cwtl
add
add
push
sti
pop
aas
cwtl
mov
xchg
in
mov
std
mov
fistpll
xlat
dec
xchg
mov
shrl
or
mov
mov
movsb
xchg
fxch
xor
adc
outsb
pmulhw
push
sub
pop
iret
lret
push
leave
call
pop
adc
sbbb
pushf
xchg
imul
pop
adc
popa
fistpll
dec
jae
xchg
repnz
mov
sbb
stc
ficoms
dec
sbb
loope
into
in
test
fsubrp
int3
xchg
aaa
into
mov
rclb
push
adc
xor
leave
cmp
icebp
jp,pt
call
mov
rcrl
stos
ds
jne
je
mov
js
aaa
repz
sub
pusha
mov
sbb
jno
sub
pop
stos
adcl
gs
sub
sub
add
xor
pushf
sahf
xor
xor
sbb
fadd
ljmp
push
outsl
aam
jl
push
scas
imulb
lahf
cmpsb
adc
popw
cmpsb
rcrb
cmp
hlt
mov
inc
mov
outsl
fists
lods
js
push
mov
mov
jmp
push
jo
imul
xor
or
jg
in
inc
inc
sbb
fnstenv
pusha
adc
ljmp
add
adc
ds
dec
push
inc
sub
ss
mov
es
mov
push
add
dec
aad
mov
sbb
fwait
popf
pop
mov
inc
clc
pop
lahf
ret
mov
pop
dec
icebp
seta
adc
mov
jmp
mov
pop
inc
cli
iret
insl
add
mov
sbb
pop
or
out
sub
and
ljmp
aam
and
add
xchg
jl
xchg
jae
dec
ret
lock
pushf
lret
sbb
jge
xor
mov
jns
sub
popa
fsubs
push
adc
mov
js
xor
js
pop
sbb
movsb
fwait
push
xor
push
mov
push
dec
add
jae
pop
addb
dec
imul
jmp
stos
neg
mov
mov
loop
fistps
add
xlat
ficompl
fs
ds
and
sub
xor
mov
dec
mov
jp
cltd
jne
lea
or
into
jmp
inc
fisubrl
or
pop
xor
fiadds
decb
pop
pop
enter
std
xor
icebp
lret
bnd
xchg
inc
jb
dec
jmp
adc
incb
jecxz
mov
cmp
mov
arpl
fwait
inc
mov
xlat
iret
movsl
je
push
dec
fimuls
mov
fmul
push
imulb
xchg
fstpt
mov
jmp
lahf
inc
lret
test
mov
les
and
sarl
fs
push
and
int3
dec
cli
lods
call
addr16
imul
mov
mov
cmp
adc
or
ror
ret
xchg
cmpsb
inc
cmp
cmp
mov
or
insb
int
aaa
jg
inc
mov
aam
hlt
popa
xchg
int3
add
xor
jmp
ja
mov
push
jne
pop
lret
mov
xor
pop
lcall
sub
adc
mov
jae
push
inc
push
push
mov
fdiv
mov
out
mov
fisubl
cwtl
shlb
insl
sbb
dec
int
dec
pop
jmp
test
in
jle
jecxz
mov
gs
loope
add
rcrl
inc
loopne
cmp
push
int3
cli
xchg
dec
or
mov
pop
ret
mov
aad
fnstenv
mov
sub
ja
push
xchg
inc
test
addl
xchg
loop
imul
sahf
movsb
mov
xor
cs
cmp
mov
inc
dec
jg
dec
repz
mov
and
jae
push
xchg
push
mov
data16
push
dec
movsl
ja
or
iret
cmp
mov
cmpsl
mov
cs
cld
lods
shlb
or
int
andb
enterw
jno
clc
sub
add
sbb
icebp
jne
ss
mov
fdivp
mov
dec
jp
enter
xor
roll
sbb
addb
pushf
stos
inc
xor
stos
pop
aad
pop
xorb
es
mov
pop
jle
stc
pop
test
pop
in
rcr
mov
pop
mov
fsubl
cli
mov
in
mov
dec
pop
loope
mov
and
popa
mov
sub
fldl
outsb
out
xorl
loopne
inc
popa
leave
sbb
stos
hlt
subb
loopne
cld
or
inc
and
lds
push
pop
mov
xor
dec
mov
mov
jns
inc
push
sub
shlb
and
call
jp
dec
adc
xor
cmp
pop
int
aaa
and
sbb
loopne
mov
xchg
push
addl
sti
inc
fsubrl
pusha
aad
rorb
cld
mov
sbb
mov
jo
enter
dec
gs
cltd
stos
mov
jns
hlt
mov
cmp
sbb
loop
mov
or
es
mov
int3
out
stos
push
ror
cmpsl
loop
adc
repnz
mov
je
push
aad
lret
mov
roll
push
and
jp
scas
arpl
pop
sarb
lret
xchg
js
pop
out
dec
scas
mov
mov
pop
cmpsb
into
or
pop
cmpsl
cwtl
mov
int
scas
or
xchg
push
faddl
in
mov
sbb
into
aam
shl
int3
jo
mov
loopne,pt
in
lcall
jne
mov
pop
das
push
rolb
daa
or
or
jno
mov
xchg
cmp
outsb
add
push
jb
add
xchg
sub
mov
andl
in
xchg
les
idivb
push
es
xchg
clc
aam
mov
xlat
jp
jno
mov
push
pop
xchg
or
nop
xor
adc
das
mov
sbb
adc
mov
push
notl
and
pushf
push
push
sub
jo
in
and
das
iret
fstps
mov
fwait
pop
push
jns
addr16
in
das
fs
dec
stos
pop
mov
test
fwait
movsb
mov
fdivl
popa
ja
mov
or
sbb
std
je
cmp
sbb
xchg
arpl
jecxz
mov
sub
daa
addr16
xor
xor
call
dec
lods
inc
jns
jecxz
in
xor
xor
push
jns
int
pop
push
xor
add
xor
shl
imul
fldt
or
xor
xlat
rcll
dec
mov
testb
cmpsb
jne
xor
jne
push
div
pop
inc
fbstp
pop
lods
dec
pop
out
insl
add
setle
shl
push
mov
fcoml
sbb
push
inc
insb
int
mov
or
hlt
jmp
inc
fmuls
jns
mov
cmp
sbb
scas
sti
gs
loopne
fadds
fs
lcall
cmp
jb
jge
je
aaa
cmc
cmpl
or
dec
lds
inc
aaa
push
cwtl
notb
inc
or
adc
mov
or
push
mov
jecxz
out
les
pushf
dec
repz
mov
fdivl
inc
test
insb
push
xor
xchg
jne
xor
inc
js
mov
movsl
and
add
mov
jle
in
add
sbb
xchg
mov
out
jmp
aam
ljmp
leave
insb
pusha
ret
aam
add
add
mov
ja
in
iret
ss
xchg
xchg
jbe
movsl
dec
aad
cltd
jle
dec
push
fildl
xor
sbb
lods
jbe
out
push
push
jmp
bound
fwait
das
and
jmp
pushf
push
mov
ds
sbb
adc
push
shlb
out
lret
aam
pop
loope
fcompl
loop
add
mov
mov
in
jnp
xor
cmp
inc
repz
test
shll
in
sub
xchg
adc
xchg
adc
push
shl
cmp
sub
movsl
push
pop
add
xchg
mov
xor
mov
and
xorb
scas
arpl
out
cmp
pushl
mov
fwait
add
aas
pop
lahf
cld
jg
ja
jge
mov
test
icebp
int3
fucomip
or
pushl
adc
push
lds
addb
stos
xchg
lret
xor
jg
adc
dec
push
scas
imul
mov
jg
ret
nop
call
out
mov
sarl
sbb
cmp
cmp
cmovg
into
in
icebp
movsl
call
xor
xor
insl
mov
add
xlat
mov
sub
fists
add
aad
push
fstps
jnp
sub
push
or
fldl
neg
jb
clc
repz
dec
aas
xor
out
stos
movsb
inc
in
and
fisubrs
xor
cltd
add
ljmp
mov
and
in
icebp
aad
in
fadd
inc
inc
jl
test
inc
daa
jb
dec
fcoml
inc
arpl
insb
fcoms
sbb
aam
mov
mov
and
rcrl
cmp
andb
add
popa
fdivs
movb
adc
sub
rorl
sub
cli
sti
push
insl
loop
fsubr
subb
sub
pop
outsb
cmp
pop
or
sbb
jge
or
push
clc
inc
mov
mov
mov
dec
sub
pop
insl
call
jb
adc
sbb
add
fmuls
cmp
outsb
push
pop
cltd
mov
les
ljmp
cs
fstpl
fisttpll
mov
cltd
sbb
movsb
fs
pushf
dec
inc
lahf
loop
mov
push
inc
sbb
out
sub
cmp
sub
filds
cld
andl
aad
adc
ljmp
xlat
int3
mov
cmp
sbbb
jnp
in
sbb
sbb
clc
jp
jno
lods
addb
popf
mov
daa
cltd
imul
call
xor
out
imul
lret
aas
fisubs
and
lahf
add
mov
fmull
stc
test
xlat
cmp
rolb
lret
dec
je
movsl
sahf
cmpsl
dec
inc
and
push
mov
jg
out
pop
fnstenv
mov
in
mov
mov
in
scas
movsb
push
jmp
sub
fistpll
jnp
pop
add
adc
mov
in
mov
out
cld
pop
cmc
mov
out
loopne
jle
xchg
mov
stos
or
int3
pop
scas
insb
or
add
jg
popa
out
xor
jge
and
insb
lods
mov
icebp
inc
xor
mov
clc
inc
inc
mov
push
je
cmpsl
aam
movsb
fstpt
jg
cmpsb
mov
scas
adc
scas
xor
repnz
or
push
loope
out
aaa
lret
int
data16
jecxz
shll
leave
jmp
dec
lcall
xchg
pop
sub
das
aam
dec
incb
cmpsl
or
mov
test
js
fsts
mov
je
in
imulb
push
xchg
jmp
xor
mov
movsb
push
aad
dec
popa
addr16
dec
sub
ss
testb
inc
mov
imul
nop
add
lcall
mov
in
and
push
dec
lcall
jbe
xchg
xchg
insl
cli
cltd
lods
loop
jno
nop
jg
xchg
popa
sbb
and
imul
lret
negl
jno
xchg
leave
mov
lods
outsb
mov
mov
addr16
sbb
pop
pusha
call
or
sub
fwait
cmpsb
je
mulb
push
dec
pop
inc
shlb
mov
stc
out
or
ljmp
sbb
mov
cmp
and
lcall
faddl
shll
popa
xchg
mov
sub
push
push
ret
lahf
mov
lahf
test
jae
mov
sbb
push
das
repz
push
repnz
push
insl
cmpb
cwtl
mov
dec
lods
ss
cld
or
jecxz
scas
cmc
notb
xor
jge
cltd
mov
dec
mov
cli
mov
ret
xchg
mov
out
pop
into
pop
fsub
test
mov
or
inc
sbb
out
jmp
rclb
jg
adc
dec
sub
mov
fsubrs
idivl
jns
jo
data16
push
push
xchg
adc
jae
jmp
xchg
push
xchg
mov
push
cmp
lods
jbe
sub
clc
mov
enter
pop
subl
xor
pop
sahf
in
mov
les
in
dec
mov
aam
mov
pushf
aam
or
jbe
shrl
inc
insl
lea
adc
or
rclb
push
ds
int3
iret
imul
dec
sub
jecxz
pop
or
out
test
into
lea
lret
mov
arpl
mov
xchg
mov
mov
int
fsubrs
jo
lahf
movsl
and
aaa
mov
push
data16
outsb
and
add
idivl
in
mov
aam
sbb
xchg
inc
push
mov
mov
mov
stos
cmpsb
int3
sbbb
pop
sbb
mov
neg
cltd
jp
ret
repz
push
add
jo
cmpsb
inc
sbb
bound
movsl
adc
sti
inc
lret
loope
js
xor
add
ds
hlt
inc
aad
jne
adc
and
lret
jl
mov
aam
int3
outsl
xor
test
pop
out
cmp
cmp
icebp
out
out
sbb
es
or
ret
test
jecxz
cmp
out
cltd
loopne
and
jmp
or
das
add
mov
dec
je
in
push
movsb
fs
push
and
popf
pop
jecxz
cmp
inc
jnp
sbb
sahf
ds
lret
sub
inc
sub
xlat
adc
push
xchg
xor
jb
adc
mov
or
in
mov
loope
stc
scas
xchg
ss
fiadds
sub
mov
test
pop
aam
stc
adc
adc
xorb
mov
push
cwtl
stos
lahf
iret
ss
cmp
pop
test
jg
icebp
jle
pop
repnz
les
lcall
adc
ss
sub
mov
pop
push
popa
out
fldcw
rorl
xor
stos
sub
jg
dec
jg
pop
lea
jle
push
lahf
pop
test
out
sbb
fdivrl
xor
jnp
xchg
rorb
or
stc
cmp
out
aad
in
test
imul
fdivr
cmp
and
pop
xchg
addr16
divl
mov
orl
lock
push
in
mov
adc
dec
arpl
outsb
xchg
jecxz
loop
imul
test
jge
pop
rolb
sub
repnz
jo
sbb
mov
lret
and
fsubrl
or
and
push
pop
popf
data16
es
xchg
aam
mov
jb
jns
lods
pop
push
notb
mov
xor
shrl
outsl
out
push
dec
sub
test
ret
lret
decl
pop
addb
add
jb
and
daa
mov
or
insb
insl
repz
leave
icebp
inc
leave
repz
repnz
in
notl
adc
shrb
dec
push
add
pop
repz
adc
adc
mov
mov
stc
push
sub
push
xlat
mov
and
addr16
test
daa
add
mov
xor
lcall
cmp
sti
cmp
jns
lcall
mov
idivb
icebp
out
jmp
rcl
mov
lcall
clc
fs
imulb
sti
xor
push
ja
xchg
sub
or
xchg
mov
test
fs
shlb
rorl
lea
fs
lods
fcompl
icebp
lea
adc
into
push
sub
orb
into
xchg
mov
pop
cmp
cmp
movsl
int
stos
sub
adc
pop
cmc
mov
stos
pop
sub
aas
jbe
outsb
xor
cltd
and
cmp
aam
jmp
andb
or
loopne
sbb
mov
outsl
mov
and
addl
cmp
pop
scas
cmp
imul
push
es
sar
xchg
out
push
hlt
out
mov
bound
clc
icebp
mov
adc
sub
add
xor
or
sub
xor
sub
xor
je
cli
shlb
mov
nopl
add
test
mulb
in
xchg
out
stos
push
stos
pop
add
push
xchg
mov
xchg
pop
jg
stc
lahf
scas
mov
in
push
ds
jne
xchg
mull
or
sbbb
push
cmp
loop
or
test
dec
cltd
cmp
insb
out
stos
jae
mov
push
inc
inc
mov
dec
push
cmpl
lods
pop
sub
scas
cld
mov
push
xchg
mov
out
push
shrb
sub
xor
loope
xorb
inc
int3
inc
mov
in
add
aad
pop
aam
lret
repnz
aas
rcrl
push
test
push
scas
mov
aas
lahf
lea
xor
shl
mov
lods
mov
cmpsl
or
div
test
ss
add
decl
aaa
jge
add
adcl
or
paddd
xchg
xchg
inc
push
xor
test
mov
fisubs
insb
adc
jbe
mov
dec
jg
pushf
ja
std
xchg
movsl
clc
insb
dec
inc
into
mov
jmp
push
jmp
pop
cltd
scas
or
scas
sahf
pop
or
imul
outsb
push
inc
mov
ret
add
fwait
testb
je
xchg
and
pop
dec
cmp
fbstp
scas
cmc
repnz
lods
lea
or
rolb
push
inc
mov
ss
loopw
mov
fmulp
xchg
jno
movsb
cld
cwtl
inc
xchg
ds
pop
jns
jmp
push
jl
test
aas
xchg
adc
fists
test
sbb
dec
add
iret
outsl
rorb
mov
mov
outsl
inc
cli
inc
mov
fdivr
pusha
xor
push
ss
xor
lret
mov
adc
pushf
push
push
jge
sub
pop
add
xchg
fnstsw
pop
addr16
inc
dec
add
addl
shll
pop
cmp
insb
jmp
repnz
pushf
push
sub
sahf
gs
push
es
test
cmp
imul
xchg
xchg
sub
out
iret
xchg
stos
test
xchg
push
ret
push
idiv
insb
pop
xchg
or
fs
insb
and
enter
adc
scas
pop
xor
and
adc
popf
mov
push
mov
adc
lods
push
daa
xlat
sub
sbb
jb
mov
scas
cltd
pop
test
mov
stos
les
mov
cmpsl
or
fsub
fld
fistpl
sar
imul
sbb
mov
xchg
scas
fnsave
inc
mov
and
dec
loope
adc
inc
sbb
test
push
data16
mov
cld
xor
rcll
xchg
clc
mov
arpl
jno
out
testl
adc
addb
add
hlt
std
andl
mov
or
mov
subl
pop
push
mov
ds
xchg
orl
xor
fists
decb
outsb
adc
insb
inc
je
int
pop
pop
lahf
lahf
mov
mov
loope
test
xor
ret
and
jbe
jge
mov
test
xlat
jns
ret
jmp
idivb
dec
xlat
fistps
scas
sahf
jmp
inc
addl
stc
xchg
outsb
fwait
sub
inc
pusha
ja
xchg
pop
out
cwtl
cmp
push
jno
test
push
sub
fdivs
es
rcll
mov
push
adc
add
cmp
push
cld
loop
mov
mov
int
xchg
ljmp
negl
lret
push
sub
mov
cwtl
pop
daa
call
outsb
xchg
pop
mov
pop
movsl
and
add
popf
pop
je
sub
dec
jmp
lret
mov
mov
cltd
push
mov
cltd
push
push
std
ja
loopne
xchg
mov
pop
cmp
jns
xchg
xor
loopne
mov
test
inc
jb
fistl
mov
sbb
jl
scas
push
xchg
sti
es
lahf
lret
and
mov
iret
test
xchg
mov
shr
and
pushf
inc
cmp
inc
mov
imul
cmp
aas
pusha
movsb
mov
nop
adc
imul
inc
rorb
fwait
in
push
mov
jne
fs
lret
jbe
ret
rorb
sbbl
cmp
sbb
loopw
push
dec
rol
outsb
test
push
add
mov
dec
scas
lods
jmp
or
xor
fstl
mov
arpl
das
mov
sbb
xchg
dec
std
and
scas
and
inc
xchg
out
stc
popa
sbb
mov
cmp
add
mov
add
sub
mov
repnz
outsl
pop
es
pop
pcmpgtd
iret
insb
enter
adc
jno
test
or
jecxz
fsub
leave
adc
and
filds
aaa
adc
jl
xchg
jbe
jg
cmp
pop
shlb
lcall
out
mov
fdivr
out
shrl
sub
fldcw
push
test
adc
loope
jl
in
loopne
test
fsubrl
inc
negb
mov
inc
pop
divl
mov
mov
push
push
jp
ficoml
cwtl
xchg
js
cmpsl
push
mov
adcb
pop
cmpsl
jge
shrb
xor
and
or
iret
imul
jae
cmpb
and
push
mov
xor
xchg
cmp
xor
in
cmp
xchg
inc
xchg
xchg
push
dec
pop
mov
push
fadds
push
inc
inc
jnp
inc
mov
fcoml
inc
cltd
aas
stc
mov
testb
idivl
int3
idivl
arpl
stc
jne
test
jle
arpl
and
rcr
pusha
pop
loope
cmp
cmp
mov
out
cmp
js
aam
lds
push
cli
or
pop
sbb
scas
in
addr16
sub
mov
repnz
push
xlat
cmp
data16
xchg
lret
popf
xor
sbb
cmp
add
sbb
imul
push
adc
and
cmpsb
mov
test
rcl
mov
jbe
imul
adc
mov
dec
lods
jne
dec
fidivs
dec
lahf
jno
sub
lret
les
inc
and
movsl
out
cld
pop
out
insl
ret
inc
lcall
in
and
mov
and
jg
push
das
lods
sbb
xchg
mov
pop
push
push
dec
outsl
imul
rcr
jbe
mov
pop
jp
mov
idiv
lret
je
imul
sub
hlt
into
and
jbe
sbb
cmp
lret
xchg
lret
mov
loop
mov
cmp
js
cmpsl
sub
jp
push
loopne
loop
or
xchg
lret
lds
mov
cmp
rcrb
or
repnz
inc
mov
loope
sti
mov
push
push
add
sbb
dec
fs
inc
push
push
jns
movsb
orb
inc
mov
loop
xlat
push
call
sahf
push
stos
xchg
and
mov
lcall
mov
cmc
push
pop
jno
iret
pop
push
and
fcoml
push
das
addl
out
lds
cmp
pop
lock
ss
pop
imul
fldcw
jb
adc
and
std
or
cmpsl
ljmp
mov
insb
fiaddl
and
pop
dec
aaa
xchg
or
adc
jns
icebp
dec
adc
inc
sbb
lret
lods
mov
cmp
int
or
jne
cmp
cmp
lret
dec
mov
mov
adc
cmp
push
inc
insb
mov
stos
xchg
out
sub
mov
ljmp
fucomi
out
mov
push
dec
push
adc
ds
subl
cmp
lock
shrl
sahf
jle
outsl
imull
mov
jp
add
dec
push
fisttps
cmc
mov
fdivrl
or
lret
inc
loope
dec
jge
cmp
jbe
fstps
or
lahf
imull
divl
inc
xor
fwait
lcall
push
inc
xchg
in
aam
flds
aam
ljmp
cltd
jecxz
jno
pop
and
xchg
mov
add
inc
jp
lock
jae
cwtl
jp
out
or
xchg
adc
fidivl
out
push
stos
imul
clc
mov
sub
mulb
jo
dec
or
in
mov
rcrl
cmc
push
rolb
cmpsl
sbb
out
push
push
popf
gs
out
xchg
adc
cmp
jg
mov
or
push
mov
mov
sbb
sub
mov
push
sub
test
daa
cmp
std
clc
faddl
dec
push
out
push
gs
hlt
in
mov
ficoml
cmp
cs
sbb
xor
in
mov
jnp
in
inc
dec
and
int3
push
mov
xor
pop
and
int
popf
add
aaa
cmpl
test
into
movsl
jge
je
in
aam
push
icebp
lahf
cmpsl
xlat
icebp
push
xor
inc
mov
in
xor
movsb
in
daa
popa
add
imul
movsl
rorl
dec
adc
mov
lock
push
mov
out
and
aaa
into
out
sbb
cmp
mov
loope
inc
clc
xor
scas
jns
pop
call
jecxz
cwtl
orb
aaa
xor
ret
push
jecxz
pop
js
cmc
push
mov
pop
fwait
pop
jnp
pop
lahf
or
lea
dec
push
mov
addb
add
inc
jae
jne
jecxz
pop
out
push
pop
hlt
and
fldenv
popa
dec
mov
rcrb
sbb
addr16
fwait
cmpl
mov
sub
fsubs
mov
pop
out
mov
inc
nop
repnz
repnz
imul
lcall
mov
sub
jmp
xor
xor
pop
ret
push
stos
aaa
cmp
jae
cmp
or
in
mov
fnstcw
icebp
sbb
pop
jne
loop
test
and
std
arpl
jne
mov
in
xchg
dec
cmpsb
mov
mov
into
in
es
xchg
cmp
jmp
jo
add
out
mov
and
inc
mov
mov
ret
push
jb
push
cwtl
test
push
cmp
inc
sbb
push
xor
int3
fildl
fisttps
cli
pop
inc
pusha
and
and
xor
cmpsl
mov
or
mov
pop
in
sub
adc
dec
adc
pop
pop
test
inc
addl
pop
fisttps
sbb
rep
fnstcw
mov
outsb
nop
in
aas
jge
sub
xchg
shll
popa
dec
cwtl
mov
testl
ljmp
dec
xchg
xor
ss
push
outsl
or
scas
mov
lret
shlb
jmp
loope
mov
icebp
sbb
push
dec
es
mov
mov
jg
dec
cmp
mov
adc
rcr
jo
stos
pop
lods
pusha
negl
mov
pop
jmp
mov
rorb
cmc
imul
cltd
xchg
and
push
jb
sahf
mov
sub
push
and
pop
jb,pn
mov
cli
push
cmp
test
push
mov
lcall
adcl
cltd
bound
test
push
dec
adc
pop
sbb
adc
and
pop
mov
pop
mov
sar
pusha
mov
sbbl
mov
call
mov
mov
lock
cmp
mov
loope
sbb
inc
leave
in
mov
mov
dec
cmpsl
lods
xchg
fs
gs
stos
push
mov
push
inc
aaa
lahf
cmp
loope
or
pop
in
cs
cmp
jp
cmp
fildll
pop
test
fimull
jge
roll
outsb
flds
repnz
jle
mov
xor
jg
xchg
mov
xchg
push
negl
dec
nop
cs
std
shrb
aam
aaa
aas
std
test
ja
mov
sahf
xorl
or
je
push
andb
push
gs
lcall
in
shll
sub
lcall
cmc
hlt
jno
in
or
out
ljmp
dec
adc
hlt
jle
push
jl
js
cmp
or
rorb
mov
sbb
ljmp
or
xor
cmpsl
hlt
lahf
sub
in
fistl
inc
push
push
push
pop
pop
faddp
sub
call
xor
ret
pop
lcall
xchg
ljmp
inc
out
stos
pop
pop
in
xchg
jecxz
dec
mov
jl
push
inc
sub
xor
jle
cmpsb
xchg
stos
xor
andb
outsl
addb
out
xchg
adc
cmp
sub
jo
mov
int
xor
paddb
stos
jp
jae
cwtl
sti
cld
inc
test
sub
cmpsb
mov
test
pop
std
cmp
das
mov
outsl
push
rdtsc
imul
roll
mov
sub
pop
inc
outsb
push
xchg
pop
shrl
sbb
scas
pop
push
fcomps
mov
mov
in
jecxz
pop
add
cli
add
repnz
daa
or
jmp
scas
push
iret
sub
shr
jp
mov
out
jp
xchg
mov
lcall
andb
in
pop
xchg
imul
cli
nop
jg
pop
jmp
repnz
outsb
mov
adc
dec
icebp
cmpsb
mov
seta
sbb
fsubr
rorl
sbb
fidivrl
jns
push
or
shl
add
xor
test
lods
test
sub
lods
div
lret
lds
popa
sub
mov
mov
cmp
sub
push
jbe
inc
jmp
dec
push
push
lea
vaddsubps
push
push
xchg
push
ret
shrl
ss
cmp
es
ja
popf
cmp
pop
or
push
je
mov
addb
cld
arpl
popf
cwtl
adc
or
pop
mov
fsubrs
jge
dec
mov
int3
sbb
mov
sub
int
cmp
dec
cmp
ss
adc
std
mov
das
loope
insl
pop
in
or
in
inc
ss
outsb
pop
mov
mov
das
fiadds
xchg
dec
push
inc
dec
jmp
in
xchg
sbb
cmp
xchg
clc
sbb
jl
xor
movd
mov
in
fstpl
mov
xchg
jg
sub
xchg
push
cld
or
int3
addr16
add
loop
ret
jnp
cmp
push
cmpsb
or
xchg
repnz
daa
push
inc
lods
dec
ret
sub
add
sbb
pop
movsb
shrl
fiadds
loopne
or
jo
int3
adc
aaa
adc
mov
mov
jo
aaa
xlat
cmpsb
sub
stos
cmp
cmp
mov
or
xor
out
xor
jb
ja
xor
push
add
jae
cmp
outsl
xor
jns
shr
xchg
fldcw
mov
imull
popa
push
stos
mov
jecxz
jno
iret
jns
addl
shl
loop
mov
pushf
movsl
sub
stc
cmp
pusha
cmp
aaa
testl
jb
or
fnsave
js
call
inc
loope
out
inc
adc
or
ds
iret
adc
add
mov
sub
add
push
js
cmp
pop
pop
jns
dec
fisttps
aaa
xor
lds
test
mov
les
xchg
or
fisubrs
lods
mov
push
aas
jne
aas
jmp
fldenv
loop
scas
jae
xor
rclb
dec
sub
popa
and
jg
ja
add
or
add
sahf
mov
cmp
cltd
data16
mov
add
push
pop
sub
int3
fwait
outsb
mov
fiadds
xchg
mov
jp
clc
sahf
shrb
fidivs
ljmp
jl
das
loop
add
popa
pop
pop
sub
xorl
mov
adc
dec
jge
sub
aaa
sbb
testl
movsb
ds
jo
xor
pop
in
ds
add
rcr
dec
xor
sbb
mov
enter
sbb
fsubr
mov
inc
fnstsw
dec
cltd
mov
fucomp
test
scas
stos
in
hlt
icebp
and
pushf
inc
add
cmp
sbb
push
in
cmp
jp
xchg
push
cmp
sbb
dec
icebp
lods
imul
cmc
jns
outsl
dec
lods
into
icebp
hlt
fisubrs
sahf
xorb
jle
cmp
in
shr
mov
out
adc
xor
pop
pusha
mov
enter
mov
lods
cmc
inc
repnz
loopne
stc
sahf
inc
hlt
xor
jl
add
push
cmp
negb
fimuls
loop
inc
sbb
loope
add
dec
js
leave
clc
out
jb
aad
aam
popa
jmp
and
out
push
xchg
ljmp
inc
test
ljmp
int3
xchg
adc
dec
cwtl
leave
add
or
push
scas
ret
gs
pop
popf
jg
or
add
int
mov
scas
pushf
inc
and
jp
mov
into
pop
jmp
dec
test
mov
add
mov
sbb
dec
int3
xor
push
adc
and
dec
lods
nop
dec
add
ret
loope
add
or
fwait
push
mov
fimull
stos
sub
shr
xchg
mov
bound
xor
test
xchg
subl
scas
cld
imul
iret
xor
aaa
rcrl
xor
orl
jg
arpl
orb
jp
pop
or
cld
push
arpl
repnz
les
mov
pop
data16
pop
sub
pop
loop
mov
std
int
lahf
insb
and
mov
enter
xchg
lret
inc
mov
sub
notb
push
inc
jne
xchg
mov
pop
sti
arpl
mov
test
enter
sbb
sti
pop
mov
es
mov
and
pop
cmc
in
pop
out
in
push
int
cwtl
pusha
lret
mov
ret
out
xchg
into
cmp
mov
xchg
cmp
cmpsb
stc
mov
push
mov
or
mul
outsb
dec
mov
leave
sub
into
pop
jnp
xlat
inc
jbe
pop
sahf
jmp
imul
inc
sbb
or
lret
dec
jbe
lcall
sub
std
mov
push
dec
xchg
js
loop
cmpsb
fwait
or
in
je
sahf
cmp
push
stos
mov
mov
bound
xchg
mov
push
mov
dec
data16
roll
cmc
aad
or
mov
push
push
adc
in
leave
sub
loope
jge
mov
and
mov
out
inc
mov
sub
mov
inc
xor
loop,pn
lcall
cmp
dec
pop
sarl
sub
fisubrl
pop
mov
mov
out
push
data16
inc
lret
hlt
hlt
push
out
mov
hlt
nop
iret
std
lret
or
cltd
mov
push
mov
stos
mov
and
inc
add
push
imul
fstpt
push
xor
nop
adc
imul
ret
cwtl
out
pop
out
jle
sbb
fisttpl
pop
ficompl
push
push
das
or
jae
fcomip
sub
les
repz
mov
cld
imul
mov
outsb
jne
lock
popf
or
push
mov
xor
repz
inc
jg
int
or
cs
shl
loopne
sbb
cmp
shll
xchg
loop
and
in
outsl
inc
jns
inc
aas
test
push
leave
jge
rolb
mov
mov
fidivrl
jne
mov
bound
pop
dec
div
push
lods
cmp
in
mov
mov
lods
sub
clc
subb
and
and
pop
jg
je
in
sub
xchg
jb
xchg
push
mov
cmp
mov
idivl
mov
iret
aas
mov
sbb
stos
and
clc
jge
cmpsl
aad
addr16
call
shl
adc
test
loopne
pop
sbb
imul
andl
pop
sahf
popf
mov
jne
mov
iret
lret
movl
cmp
mov
add
movsb
mov
inc
xor
enter
lock
mov
push
dec
addps
add
pop
mov
js
dec
sub
push
mov
stos
adc
arpl
sarl
xchg
das
cmpsb
in
cwtl
ret
clc
pop
pop
jnp
inc
ja
cmp
sub
scas
mov
add
aad
lahf
and
xchg
add
in
jmp
stos
add
inc
pop
test
outsl
into
ret
jp
push
test
cmp
xor
dec
mov
jne
leave
mov
in
hlt
xchg
push
cld
or
jbe
gs
popf
test
fnstenv
or
xchg
imul
stos
and
in
fcoms
mov
mov
rclb
xchg
mov
push
out
xchg
imulb
inc
in
iret
cwtl
dec
sub
add
pop
cwtl
fmull
add
cmp
xchg
out
pmullw
or
inc
or
mov
xchg
xor
repz
das
adcl
daa
iret
lret
lock
outsb
paddw
xchg
out
xor
adc
cs
sti
loop
decl
sub
pop
ss
add
mov
test
in
push
jae
lock
pop
lods
jmp
xchg
adc
sbb
sub
mov
daa
lcall
imull
popa
mov
scas
dec
dec
push
mov
test
adc
aam
aaa
sub
push
lret
test
inc
mov
mov
pop
xchg
xchg
jno
stos
lahf
int3
out
movsb
xchg
test
test
sar
push
ds
dec
fisttpl
jmp
sub
andl
loopne
inc
cmp
adc
or
ret
pusha
mov
xchg
mov
mov
mov
inc
push
add
mov
or
xchg
rorb
jns
mov
jae
aam
xlat
push
pusha
inc
aaa
addl
lea
stc
xorb
ss
cmp
push
adc
pop
pop
jmp
push
cli
mov
sub
pop
mov
addl
negb
jge
inc
mov
fisubl
in
push
jns
sub
je
incl
pop
aaa
lock
sarl
mov
imul
cmpb
mov
cmp
mov
mov
jecxz
test
insb
in
leave
daa
aad
mov
xorl
sbb
mov
xor
aas
ljmp
out
push
jmp
loopne
sbb
stos
lods
aam
mov
lret
aam
outsl
fcom
xbegin
aas
inc
into
push
outsb
push
mov
sub
xchg
ret
pop
push
inc
daa
insb
inc
jl
inc
or
mov
dec
and
mov
rep
fildll
add
sbb
xchg
cld
jno
xchg
push
sub
push
inc
and
jbe
mov
notb
sti
test
push
mov
popa
testb
leave
dec
sbb
inc
jb
jnp
adc
test
mov
xchg
mov
sbb
mov
cltd
mov
int3
stc
mov
fisubrs
mov
outsl
cmp
mov
inc
dec
pusha
cmpsl
mov
enter
add
je
pop
dec
fcomp
subl
mov
mov
iret
pop
cmp
and
ss
and
pop
lock
or
pop
cwtl
sub
pop
and
xlat
fcoms
mov
or
rcrl
xor
jno
lock
shl
loopne
movsb
aaa
mov
pop
shrb
out
jle
or
ds
fstpt
repz
jae
xor
repz
insl
push
xor
push
imul
xorw
add
fldcw
mov
xor
dec
into
aam
shrl
data16
pop
mov
outsb
sub
mov
aaa
sbb
faddl
test
xchg
in
pop
push
movups
adc
into
jne
mov
andb
add
and
mov
adcl
pop
mov
cmpsl
add
xchg
addb
xlat
xchg
mov
or
aam
ds
ret
jle
adc
ljmp
cmp
fs
ds
in
and
aaa
lds
hlt
pop
hlt
pop
and
add
call
in
add
stos
inc
imul
and
out
pop
mov
fwait
cmpsl
arpl
jo
popf
cmp
mov
fwait
sub
adc
inc
pop
aam
add
in
sub
in
cmp
nop
cli
jo
mov
test
dec
jb
mov
inc
aad
mov
xchg
inc
outsb
push
shrl
popa
sbb
imul
lret
jnp
pop
mov
nop
add
pop
dec
mov
xor
sub
sub
xor
ds
adc
pop
sbb
cmc
test
xor
enter
out
sti
rcl
dec
loopne
adc
mov
inc
out
in
jb
test
and
out
push
inc
adc
mov
hlt
insl
lods
pusha
mov
pop
imul
add
inc
enter
es
and
xchg
out
mov
fdivrl
and
push
pop
rolb
jo
out
aaa
lods
and
inc
outsl
push
scas
dec
dec
pop
sbb
mov
and
arpl
xor
cmc
add
lods
adc
fcoml
xlat
je
xchg
dec
aam
jns
out
sbb
addr16
out
cmpsl
push
inc
mov
loop
test
scas
xor
jl
push
dec
sub
addb
das
push
arpl
gs
inc
and
and
lret
fiadds
cli
loope
pop
xor
push
sbb
adc
sub
dec
nop
jnp
xchg
lods
je
inc
push
mov
gs
mov
into
mov
jle
lods
fsub
ret
rolb
in
call
movsl
mov
popf
test
iret
insb
xchg
out
xchg
daa
inc
push
sub
pushw
je
out
jp
stos
fiadds
dec
jns
das
call
mov
hlt
sub
es
xor
and
sub
test
xor
and
pushf
jl
mov
jo
dec
shlb
movsl
int3
inc
jmp
jge
dec
mov
jge
insl
jp
imul
push
stos
enter
shll
jns
mov
into
or
sbb
pusha
movl
scas
je
outsl
outsb
ss
es
or
fs
enter
mov
dec
mov
mov
insl
pop
push
sub
lods
out
push
inc
pusha
dec
repz
imul
fcomps
pop
cmp
cmp
fnclex
sbb
scas
leave
inc
push
pop
cmp
aas
mov
pop
inc
lds
xchg
xor
incb
add
lock
repz
dec
add
adc
test
loope
mov
cltd
pop
xchg
xchg
adc
lahf
loope
push
ret
dec
mov
rcrl
push
cs
je
mov
ror
cmp
pusha
push
ljmp
mov
popa
sbb
ss
ss
ficompl
ret
mov
push
xor
xchg
add
cmpl
jo
lods
sbb
mov
sbb
dec
and
sub
call
lods
jle
dec
pop
mov
mulps
adc
scas
cwtl
mov
hlt
mov
leave
and
sbb
rorl
lods
rol
inc
lods
mov
pop
or
and
lret
jp
imul
push
rolb
aad
mov
out
inc
lret
mov
pop
sub
es
insb
add
fst
jg
pop
icebp
jns
std
mov
into
jg
sub
jo
enter
daa
nop
xchg
push
shll
pop
idivb
push
or
insb
cmp
cwtl
adc
cli
xchg
ljmp
fdivl
movsl
mov
out
lds
mov
stc
scas
xchg
fwait
jge
xor
data16
jns
adcl
daa
adc
jae
adc
or
sti
or
shrl
shr
xchg
xacquire
mov
rcrl
inc
dec
aam
push
or
out
stc
sbb
ret
hlt
cmp
fistpll
lock
pop
mov
adc
inc
comiss
xor
push
loopne
xor
int
dec
push
add
test
inc
cmp
iret
outsb
out
cmpsb
enter
push
addr16
lcall
aaa
scas
insb
ds
bound
adc
add
xchg
loope
je
cmp
mov
sub
ret
push
jae
jb
or
lcall
jb
lock
sub
adc
scas
jae
fmull
or
outsb
nop
mov
adc
pop
pop
add
adc
mov
mov
repz
xlat
adc
mov
xchg
xchg
arpl
into
int3
cmpsb
adc
int3
movsb
in
fstl
inc
jns
popf
testl
dec
or
lret
stos
js
sahf
dec
popf
daa
mov
inc
push
and
rorl
es
int3
stos
mov
push
mov
mov
cmpl
or
cmp
pop
xchg
sbbb
sbb
jecxz
in
jae
push
mov
jle
shll
sbb
pop
pop
xchg
lcall
gs
popf
push
insb
rorl
out
jbe
push
dec
out
add
mov
mov
jl
jae
sub
push
pusha
and
loopne
pop
into
ss
mov
dec
and
mov
scas
pop
jbe
mov
fcmovnb
jmp
into
jb
pop
imul
dec
cmc
adc
mov
stos
negl
jno
adc
test
in
test
jp
push
fisttpl
jle
push
icebp
sbb
sub
inc
pop
sub
fs
out
cltd
lahf
lahf
lds
fdivs
roll
fs
sub
movsb
or
xlat
roll
xchg
sub
fwait
popa
sti
subl
push
adc
mov
clc
pop
out
pop
and
mov
fcoms
cld
lock
dec
pop
sub
in
lahf
pop
xchg
jmp
jns
das
lcall
xor
in
cmpsb
imul
cmpsl
sbb
pop
fs
inc
mul
fstpl
adc
movsl
movsl
add
test
lcall
add
inc
into
push
mov
stos
stc
jnp
mov
in
pop
jg
jp
out
arpl
mov
jecxz
sahf
stos
cmp
mov
fsubrs
mov
mov
leave
cmp
adc
mov
fbld
das
dec
sbb
les
mov
lret
leave
lea
sub
push
es
lds
sbb
xor
int3
mov
jg
cmp
movsb
pop
jl
movsl
jae
mov
loope
inc
jl
shlb
sub
and
jg
mov
test
out
push
aas
mov
out
shll
push
push
xchg
popa
add
sbb
lret
adc
xchg
xchg
loope
mov
loope
stos
and
subl
inc
lock
sub
mov
aam
jnp
push
dec
and
fcoms
mov
cmp
jbe
std
test
and
mov
cld
jae
addr16
stos
inc
popf
jl
adc
adc
xor
scas
lcall
fldcw
sub
xchg
mov
popf
push
sub
rcrl
inc
sbb
mov
repnz
js
testl
or
ret
mov
les
stos
mov
adc
notb
imul
pusha
pop
push
pushf
daa
xor
shr
inc
std
cs
sub
pop
dec
jo
pop
and
mov
xor
mov
movsl
outsl
shll
repnz
test
call
ficomps
shr
pop
and
stos
ret
dec
aas
pop
dec
and
imul
pop
mov
loop
mov
jmp
xlat
adc
pusha
add
rcll
add
cmp
outsl
mov
mov
subb
stos
mov
inc
test
push
push
jns
movsb
frstor
std
aam
lds
jg
mov
mov
mov
push
in
add
scas
inc
push
mov
les
and
movhps
jb
add
xor
xchg
and
mulps
dec
sub
inc
popa
in
stos
adc
mov
sub
leave
cmp
mov
sahf
rorl
xchg
push
mov
jp
mov
mov
shll
jo
aad
sub
sahf
add
inc
add
sub
outsb
sbb
call
aam
cmp
cmpsb
cld
xor
mov
dec
and
andl
dec
jl
pop
cmp
adc
dec
jmp
mov
mov
dec
push
jl
pop
inc
hlt
pushf
mov
imul
xchg
mov
dec
leave
pop
adc
fidivrl
jne
pusha
in
add
popf
in
outsl
pusha
push
mov
pop
adc
pop
addl
and
test
xor
stos
iret
bound
cmc
adc
pushf
mov
pop
adc
sarl
or
jbe
test
scas
and
cmp
or
mov
push
push
inc
ret
je
ret
pop
push
sub
cld
xchg
jae
outsl
xor
das
in
pop
icebp
ds
and
mov
repnz
and
rorl
mov
nop
call
out
lcall
fnstsw
push
push
mov
int3
pop
mov
pop
mov
jge
jmp
cld
sub
lcall
jl
es
sub
xor
mov
in
and
and
int
xchg
orl
mov
fidivrl
int3
lea
ret
lods
in
jecxz
sub
pop
or
jl
xchg
iret
pop
inc
adc
or
and
js
inc
push
js
cmp
aam
add
push
mov
lock
mov
aam
lcall
or
rcrb
insl
lcall
les
xor
lock
scas
jns
sub
push
inc
das
lret
arpl
lds
dec
jp
int
pop
cltd
cld
sub
dec
mov
stc
push
js
xchg
sahf
and
jecxz
ja
mov
pusha
ret
pushf
mov
mov
mov
xor
ret
mov
mov
fs
or
mov
pusha
jmp
sbb
stc
sub
lock
push
cmp
cs
and
xchg
sahf
inc
mov
adc
mov
push
or
inc
push
sbb
mov
jle
sub
xor
adcl
cmpsb
adc
xchg
nop
jmp
roll
xchg
js
sbb
jne
repz
mov
arpl
daa
push
arpl
xchg
gs
stos
dec
pop
outsb
ljmp
aad
mov
in
sbb
mov
pop
ret
mov
scas
stos
sbb
repnz
mov
stos
inc
or
sahf
in
pop
cwtl
xor
cli
or
int3
movsb
stos
jns
in
or
dec
fsubs
pusha
xlat
sbb
push
adc
adc
cmp
inc
add
jg
inc
outsl
negl
adc
cltd
add
cltd
divl
pop
pop
mov
ja
adc
in
dec
fsubrs
lods
loope
push
add
movl
imul
push
sub
rclb
repnz
aad
add
jae
jnp
subb
xor
outsb
mov
add
fnsave
int3
sahf
loop
lret
lcall
mov
fmuls
mov
mov
xor
cmp
cmc
push
fidivs
sbb
and
mov
aam
pop
ror
nop
pop
mov
nop
mov
loop
lds
hlt
push
cmp
jg
xchg
mov
frstor
cmp
popw
adc
xchg
mov
daa
sbb
add
adc
je
xchg
jecxz
jbe
test
stc
jle
mov
scas
inc
movsl
cld
not
sti
into
lahf
sbb
mov
adc
jae
std
ljmp
xor
jo
insb
notb
mov
nop
ds
push
shrl
add
inc
sarb
loopne
ja
in
inc
xchg
rolb
pop
insb
mov
cmc
in
and
add
sbb
aad
cmc
dec
aaa
cmp
xchg
adc
mov
inc
jmp
loop
loopne
push
out
in
or
adc
mov
mov
dec
xor
cmp
ja
les
mul
rorb
hlt
mov
push
decl
mov
mov
sti
stos
or
loopne
adc
mov
jmp
inc
sub
in
ret
negl
js
or
data16
jnp
and
mov
xchg
out
jae
xor
adc
xor
sub
cmc
rorl
xchg
cwtl
outsl
aas
push
jp
and
outsl
add
and
testl
arpl
pop
jns
cmpb
jg
repnz
pop
fs
sarl
jle
adc
dec
xchg
sub
stos
or
push
xor
add
lret
imul
loope
xchg
scas
cmp
sbb
dec
dec
fisubs
ds
lret
sub
sarl
jmp
pop
in
cmp
cli
push
mov
lret
xchg
in
mov
lods
push
xchg
push
movsb
xchg
loop
movsl
mov
push
inc
pushf
sub
movb
cmp
adc
adc
jo
cmpsl
cs
mov
fsubl
shll
icebp
cmpsb
and
mov
mull
xchg
push
jne
jo
xchg
insb
sbb
and
mov
dec
or
mov
cld
in
xchg
in
or
xor
repz
jmp
lret
sbb
push
test
test
adcl
andnps
pop
call
xor
std
stc
dec
adc
jno
leave
mov
jp
lds
inc
mov
mov
into
sti
arpl
jge
mov
inc
mov
pop
pop
push
fsubrl
pusha
out
mov
jns
xor
out
cmp
sahf
sub
and
or
xchg
nop
or
jl
outsl
mov
pusha
cmp
add
add
pop
sub
lea
leave
or
imul
leave
imul
dec
jl
adc
push
mov
inc
popa
or
pushf
lock
push
push
xchg
dec
andb
mov
jae
pop
scas
outsl
stos
movsl
lahf
scas
dec
sbb
cmp
addl
call
xor
xchg
adc
sub
sarl
mov
inc
lcall
mov
mov
mov
pop
fisttps
pushf
sub
add
mov
loopne
or
jg
dec
enter
iret
int3
sbb
stos
fldl
jbe
xchg
and
or
test
adc
xchg
sub
cmp
inc
notl
mov
mov
mov
and
inc
fnstsw
xor
inc
insl
int3
popa
mov
pop
addr16
mov
add
jnp
popf
push
sbb
mov
test
mov
xchg
js
sub
pusha
cwtl
popa
std
xchg
mov
out
add
ljmp
loopne
pop
loope
adc
es
adc
sbb
jecxz
inc
inc
rorb
movsb
ja
jno
sbb
jne
test
xchg
add
cmpsb
xchg
test
ret
add
aas
pop
mov
dec
dec
mov
mov
sti
push
je
add
lock
or
and
cmpsl
jecxz
fistl
insb
push
loopne
stos
xchg
call
xor
adc
js
fidivl
mov
dec
inc
into
jmp
sub
dec
movsb
in
insb
add
icebp
fwait
sub
idiv
pushf
jnp
les
es
sub
bound
push
jbe
cmp
jnp
test
add
and
loope
jg
daa
inc
cmp
repnz
sbb
fisttps
mov
push
cmpsb
dec
adc
inc
loope
xchg
stos
pop
add
sub
out
sub
sub
and
adc
filds
fnsave
test
or
clc
stos
scas
push
pop
fcmovnbe
xor
inc
jne
cs
cmpsb
jmp
pusha
cmpsl
int3
mov
sub
mov
adc
add
dec
outsl
ss
in
xchg
adc
lds
jp
mov
adc
push
repz
push
lea
loop
jno
mov
lret
das
push
test
mov
lods
xor
sbb
jb
insb
xchg
mov
or
lock
mov
or
cmp
mov
dec
lea
cmpsl
inc
repz
pop
mov
roll
mov
cmp
sbb
jnp
push
clc
and
lret
imul
call
or
sti
or
xlat
rorb
ja
push
pop
push
mov
xchg
or
sbb
test
adcl
cmp
jae
xlat
pop
push
dec
dec
in
out
bound
call
xchg
jnp
sti
lea
inc
mov
and
pop
fs
dec
out
adc
out
out
xor
pop
stc
and
cmp
inc
mov
mov
cwtl
sub
jne
cmpsb
mov
inc
nop
mov
lea
cld
imul
jmp
mov
mov
out
movsl
hlt
stc
in
add
cmp
ds
mov
inc
loop
scas
xchg
adc
mov
cld
pop
jo
rclb
sahf
mov
push
add
test
lods
pop
testl
push
mov
pushf
arpl
jae
mov
mov
lret
leave
sahf
test
aad
in
or
push
movsb
push
adc
mov
addr16
cmp
loope
xchg
fwait
in
rcll
mov
xor
xchg
adc
cmpsl
test
icebp
scas
dec
cmp
repnz
ficompl
mov
push
shr
sub
push
xchg
add
lods
mov
cmpsl
aad
nop
mov
push
fidivrs
fidivl
flds
sbb
push
aaa
cmp
lea
movb
and
push
cli
mov
inc
mov
or
pop
rol
out
insb
shrb
frstor
mov
mov
dec
daa
int
jg
ds
mov
pop
xchg
fdivrl
cmpsb
or
or
arpl
inc
xchg
mov
je
leave
jecxz
insl
insb
lret
stos
stos
aam
sub
xor
in
fstpt
or
dec
loopne
xorl
push
sub
sbb
cmpsb
add
shll
adc
cs
mov
mov
mov
ds
mov
test
xchg
dec
dec
pop
jmp
mov
xor
mov
xchg
outsl
dec
pop
inc
and
fsubs
lret
movnti
inc
dec
out
stos
insb
jnp
lds
call
xor
and
mov
sbb
sub
aad
jb
add
dec
push
ss
sbb
addl
neg
fmull
mov
sbb
dec
rorb
fs
rorb
jne
ds
adc
jle
and
or
adc
xor
mov
pusha
int
idiv
mov
and
xchg
push
and
mov
ficoml
pop
xchg
loop
xchg
xchg
adc
fwait
addr16
fildll
sbb
xchg
xor
sbb
jae
mov
xor
pop
mov
jo
ficompl
inc
lea
mov
dec
mov
jl
add
scas
push
push
add
in
sub
fldt
mov
jp
mov
mov
out
pop
outsb
movsb
xchg
fimull
sbb
jge
mov
rcrb
adc
mov
in
lods
call
push
ds
xchg
ret
inc
push
jno
loop
cmc
mov
arpl
pop
fldcw
mov
and
aam
sbb
pusha
in
xor
in
adc
icebp
dec
or
dec
pop
scas
arpl
sbb
inc
push
add
loopne
mov
jno
mov
inc
int
dec
or
std
lds
shll
cmc
adc
jo
aad
pop
loope
and
mov
test
sbb
mov
dec
cwtl
or
add
jae
cmp
and
out
popf
enter
add
lods
ljmp
push
xchg
cmp
or
mov
call
cmp
xorl
add
inc
loopew
xor
dec
lock
cld
xor
mov
in
out
xchg
mov
insl
pop
add
faddp
repz
test
lods
jg
aaa
sarb
push
sbb
cmp
ds
mov
pop
sahf
mov
ljmp
stos
jb
lods
inc
andl
daa
incl
cld
add
pop
shlb
testb
push
push
rcrl
inc
or
fs
subb
inc
ret
and
lods
popf
addr16
mov
int
test
adc
fisubl
and
adcb
and
fs
mov
or
mov
outsb
pop
cmp
mov
xorl
cli
pop
jo
mov
ljmp
xchg
push
outsb
inc
imulb
lahf
nop
lcall
pop
repz
outsl
stos
jne
xor
incl
and
rorb
push
loop
test
shl
sbb
iret
not
into
sub
pop
cmp
inc
inc
mov
mov
jmp
stos
xchg
notl
inc
or
loop
adc
pop
cmpl
in
adc
mov
inc
dec
mov
sbb
inc
or
dec
jnp
fldenv
out
push
std
inc
mov
pop
jbe
lods
xor
cmp
ja
inc
pop
jns
jne
cmc
xchg
in
push
test
mov
xor
pop
mov
rolb
jns
adc
dec
ss
add
aaa
call
and
cmp
mov
std
ja
js
nop
xor
sub
arpl
out
arpl
je
pop
mov
stc
fisubrs
in
dec
lret
push
inc
test
xchg
mov
js
jmp
dec
scas
add
ja
cmpl
sbb
sbb
push
fs
js
fnstsw
stos
jo
mov
push
sbb
mov
add
sub
stos
mov
fwait
or
lahf
cmp
xchg
mov
sub
fwait
dec
jo
leave
mov
mov
mov
lret
es
cli
pop
mov
stos
jl,pt
jo
ljmp
das
lds
std
stos
ss
jmp
int3
ja
mov
sub
lret
outsl
pushf
leave
scas
xor
cmp
dec
mov
cwtl
mov
into
lods
hlt
rcrb
adc
lods
sahf
mov
inc
sub
push
or
ljmp
or
icebp
rcr
fisttps
test
push
jbe
adc
jae
mov
ret
inc
js
loop
insb
movsb
in
incb
mov
cwtl
add
sub
gs
adc
mov
xchg
out
test
mov
push
cli
dec
notb
ja
imul
lea
and
loope
lods
and
pop
pop
push
aam
nop
movsb
lods
clc
cmp
adc
lret
je
bound
inc
movsb
dec
lds
or
sahf
push
out
mov
xchg
rcrb
fisttpl
jmp
test
jb
out
lret
push
or
adc
push
adc
clc
push
nop
xor
out
mov
rcrb
in
rcr
ret
dec
cmpsl
or
rorb
andb
cmpsl
or
dec
lahf
add
pop
mov
inc
push
jge
jno
push
jae
les
gs
push
sbb
pop
jmp
movsl
imul
aam
js
push
mov
mov
mov
push
int3
or
incb
push
jl
pop
xor
jge
outsb
jmp
pop
xchg
insb
insl
gs
jl
adc
adc
and
jb
movsl
cmp
in
lock
loop
mov
adc
pushf
push
ret
aas
rcl
nop
popf
fdivrs
jl
ret
nop
add
cmp
xchg
xchg
imul
mov
sub
ds
mov
sbb
push
nop
xchg
or
test
fucomip
dec
roll
ds
cmpsl
push
in
sub
xchg
xor
mov
cmp
xchg
mov
push
movsl
addr16
lahf
aam
push
imul
mov
dec
shrl
inc
xchg
loopne
xchg
pop
idivb
aaa
sbb
push
add
das
ja
mov
icebp
outsb
rorl
out
fstps
lret
or
pop
fdivrs
aaa
rorl
fstpl
adcb
adc
into
cmpsl
mov
daa
fdivl
xor
iret
or
fnsave
fstp
mov
mov
addb
jecxz
gs
repnz
test
mov
mov
enter
mov
pusha
jnp
clc
mov
add
js
into
ja
inc
or
xor
mov
cwtl
in
adcl
jbe
cmp
xor
pop
adcl
out
ss
idivb
repz
lea
fdivrl
push
stos
jmp
sbb
pop
stos
mov
cmp
mov
je
adc
pop
pop
pop
sarl
nop
dec
js
add
xchg
mov
int
inc
jae
xchg
stos
push
test
push
nop
cmp
shrl
xchg
pop
inc
push
ljmp
imul
mov
pop
push
out
add
sub
xor
in
mov
int
jle
xor
adc
inc
cmc
fildll
loop
cwtl
inc
stos
shl
les
adc
dec
xchg
fdivr
add
add
pop
sub
xchg
fiaddl
push
push
mov
cmp
movb
bound
push
add
cmpsb
cmpsb
sti
subl
sub
jle
adc
inc
lds
cwtl
push
aad
dec
push
mov
sbb
mov
lods
lahf
push
movsb
jge
mov
dec
subl
test
mov
dec
dec
je
fwait
sub
push
fs
jae
inc
mull
cmp
xchg
aam
xor
pop
push
ret
mov
out
jbe
cmp
cmp
or
out
cmp
dec
sbb
mov
jo
xchg
push
pop
cltd
rorl
xor
stos
cmp
enter
std
add
adc
add
lods
xor
fwait
outsl
mov
data16
dec
xchg
xchg
shlb
jle
pop
mov
call
rol
adc
xchg
int
fwait
popf
outsl
dec
loope
or
cld
leave
sbb
or
add
out
clc
data16
aas
jle
insl
sar
sbb
push
cwtd
rolb
pop
push
pandn
lock
mov
adc
fwait
int
xchg
data16
push
add
xchg
fs
xchg
lcall
xchg
jecxz
out
push
sahf
adc
xchg
inc
pop
pop
mov
aad
sarb
pop
enter
jmp
mov
or
filds
xchg
sbb
cs
es
xchg
add
or
std
ret
sahf
pop
pop
js
pop
sahf
and
fs
std
dec
hlt
xchg
pushf
shl
cmp
push
pop
dec
sbb
xlat
test
fs
jo
sub
pop
xchg
les
imul
jae
pushf
xor
dec
addr16
sbb
stos
xchg
shrl
jno
or
inc
push
push
fisttpl
fldt
lds
lods
shll
ss
add
or
les
fcomps
iret
inc
jb
movsb
xor
aad
push
mov
rol
xor
adc
pop
mov
adc
ja
mov
shlb
sbb
inc
mov
dec
mov
or
fsubrs
push
xchg
mov
mov
sahf
pop
and
cs
in
xor
inc
orl
push
or
inc
ss
sbb
sbb
aas
inc
mov
pop
and
pop
jle
scas
push
mov
push
dec
dec
push
jmp
mov
dec
cmp
push
pop
daa
pop
pop
xchg
iret
xchg
jecxz
test
mov
pop
jbe
out
mov
sbb
outsl
mov
mov
xchg
imul
popa
inc
push
mov
lods
loopne
and
in
popa
push
test
mov
jecxz
es
dec
subb
stos
or
outsl
fcmovnb
sub
dec
test
add
fwait
dec
pop
inc
cmp
js
mov
and
popf
notb
imul
sahf
std
xchg
mov
enter
arpl
ljmp
mov
lahf
dec
or
ret
adc
lahf
cmc
loope
lds
daa
xchg
mov
xchg
and
ljmp
cmp
les
rcl
std
aam
inc
repnz
mov
jnp
xchg
adc
add
faddl
jne
cmp
adc
jne
dec
push
sub
cmc
into
fs
test
dec
orb
outsl
cltd
jge
pop
push
enter
xchg
leave
icebp
mov
cltd
push
mov
fadds
stos
loope
inc
repnz
inc
enter
push
es
mov
shrb
nop
fucomp
les
fmul
xor
mov
popf
sub
xor
jl
aas
in
data16
add
adc
loope
gs
sbb
int3
mov
movsb
push
cmpsl
pushf
mov
sahf
cmp
pop
aaa
push
or
data16
sub
fsubrp
outsb
sub
adcl
sub
jecxz
pop
sbb
pusha
shll
dec
and
push
cmp
gs
movsb
int3
test
sbb
fwait
xchg
loope
jl
mov
ds
scas
pusha
mov
inc
lret
xchg
sbb
out
ja
imul
js
test
add
push
mov
js
inc
inc
adc
and
pop
mov
cmp
inc
mov
sbb
cmp
pop
shll
mov
int3
and
movsl
dec
int3
sbb
mov
inc
dec
jl
dec
sub
and
mov
into
dec
sbb
mov
in
cli
stos
cmp
sub
and
outsb
dec
xchg
outsb
popa
or
iret
push
mov
cmp
push
cmc
adc
nop
xor
in
cmp
enter
add
sub
pop
push
mov
cmc
je
cmpsl
lock
or
enter
xor
arpl
inc
cmp
adc
cmp
cwtl
and
xchg
adc
int3
icebp
subb
sub
or
shr
jb
out
push
inc
sub
into
popa
xor
scas
mov
or
loopne
inc
cmp
dec
mov
cli
cmpsl
dec
xor
pop
fsubp
pop
and
xchg
mov
xor
xchg
in
push
mov
add
fnsave
add
loop
mov
loope
call
js,pn
inc
in
mov
mov
and
sub
mov
dec
adc
mov
xchg
jno
mov
pop
test
and
andb
sbb
jno
pushf
rcrb
adc
inc
cmpsb
mov
ficoml
repnz
pop
dec
imul
fdivrl
hlt
aam
mov
jmp
fstps
inc
dec
jp
xchg
sbb
push
xor
pop
push
jne
mov
out
idivl
dec
mov
adc
sub
packuswb
xor
adc
adc
mov
stos
jno
push
sub
xchg
cwtl
icebp
sub
sbb
enter
mov
out
mov
retw
loop
cs
lods
mov
pusha
lock
pop
jns
sbb
mov
out
jb
movsb
addr16
mov
scas
dec
xor
inc
lcall
fdivl
into
push
add
int3
xchg
mov
ret
mov
push
push
sub
add
sbb
or
mov
inc
or
jge
jge
mov
mov
dec
or
adc
mov
repz
pop
out
mov
jmp
pushf
imul
aaa
and
dec
out
lock
pop
je
rcll
dec
hlt
sahf
cmp
cmpl
daa
mov
ficoml
inc
mov
dec
shll
push
out
cmc
inc
rorb
mov
in
xor
adc
iret
xchg
mov
and
rclb
or
ss
cmp
movsb
loopne
fldl
decb
mov
dec
and
dec
adc
mov
or
das
xchg
push
cmp
lea
ja
add
inc
xlat
movsl
icebp
loop
lods
fdiv
popa
or
pop
jb
fsubs
outsb
xchg
out
icebp
nop
xor
in
xor
fidivs
mov
add
jnp
cmp
sub
aaa
xrelease
mov
das
jl
mov
lret
aas
bound
dec
cmp
stc
xorb
pushf
sub
sahf
lods
fsubs
inc
xlat
pusha
fsubr
fdivrl
sbb
ret
in
jecxz
in
pop
cmp
mov
sbb
cmpsb
push
jl
cmp
in
sbb
mov
out
inc
rol
mov
mov
mov
outsl
idivb
dec
push
cmp
push
sub
insl
ljmp
cmp
js
stc
je
add
loopne
test
add
adc
or
loopne
adc
push
popa
xor
pop
ja
stc
inc
aaa
cmp
fidivs
aam
fdivl
jns
add
cmpsl
sbb
and
pushf
popa
jne
mov
fistl
orl
pusha
push
inc
jae
add
mov
mov
stos
cmp
pusha
jbe
xor
push
push
cli
fadd
jmp
mov
cmp
mov
daa
mov
cld
sahf
push
mov
inc
sar
cltd
push
stos
lea
mov
lahf
mov
shlb
adc
into
add
xor
sub
es
adc
push
cmp
clc
push
leave
jnp
cs
jae
push
jo
sub
int
sub
addr16
cmp
repz
in
fists
in
xchg
adc
loope
into
sub
aam
in
jp
cmpsb
fimuls
ja
je
mov
mov
sbb
mov
and
subl
xor
mov
shlb
adc
scas
mov
inc
add
push
fldenv
shrb
jae
adc
popa
dec
lret
lret
sub
mov
cmp
xchg
jmp
sub
loopnew
lods
adc
sbb
mov
fsubrl
lcall
cltd
add
push
push
int3
mov
mov
hlt
in
xlat
mov
movsl
or
cmc
mov
add
mov
nop
rcrl
dec
lea
negl
adc
push
or
dec
test
sbb
push
fistpl
int3
inc
mov
sahf
inc
cmp
cmp
pop
jo
rcll
std
pusha
sbb
mov
adc
jp
pop
sub
mov
mov
addl
pop
test
into
xchg
ficomps
fdivr
sub
cmpsl
mov
popa
sahf
pop
sbb
lret
xor
movl
call
lds
or
xchg
jmp
into
cmp
hlt
xchg
rorl
js
jmp
or
div
push
mov
outsl
in
jb
inc
call
inc
subl
push
lret
xchg
cmp
popf
mov
dec
jmp
adc
xchg
ret
popl
stos
mov
or
arpl
mov
cmp
sub
insl
mov
filds
sub
mov
lods
cmp
cmp
xchg
es
jno
call
cmp
cmp
in
les
insl
and
cmovno
mov
pop
insl
mov
mov
xchg
cmp
sbb
inc
loope
pop
je
sbb
jle
ja
sub
sbb
es
fs
negl
pusha
xchg
pop
ficompl
jo
sbb
outsl
sbb
mov
or
das
aaa
or
dec
cmpsl
cmpsb
mov
sti
pop
dec
inc
fistl
push
pop
sbb
outsl
insl
ljmp
shl
in
cwtl
add
not
jae
mov
data16
inc
repnz
lock
lret
enter
xchg
dec
mov
ret
xor
dec
fwait
in
or
jb
add
test
cmp
add
xchg
fists
sub
mov
inc
aas
xchg
adc
adc
mov
or
popa
pusha
dec
inc
sbb
jbe
inc
repnz
pop
in
jo
dec
mov
xchg
mov
lds
add
pop
sbb
mov
cmp
mov
shll
outsb
int3
fiadds
test
dec
popf
push
repnz
sub
or
or
outsl
nop
outsb
sti
xchg
stos
orl
or
stos
push
add
loop
cmc
xor
add
in
aam
mov
mov
dec
push
add
rorb
adcb
out
add
cwtl
xor
lcall
xor
ja
les
mov
gs
xchg
mov
dec
leave
jb
xor
mov
mov
imul
cwtl
insb
je
call
mov
lds
xchg
enter
popw
xchg
pop
mov
fisttpl
xor
test
pop
shrb
daa
mov
in
mov
add
inc
push
xchg
mov
push
clc
pushl
hlt
leave
dec
pop
mov
mov
lret
ret
jl
enter
sub
test
in
dec
mov
xor
pop
xor
sub
pop
jl
pop
loop
cltd
dec
lret
push
fisttpll
xchg
pop
mov
insl
popa
xor
or
fucom
adcb
and
test
test
imul
fucomi
inc
lds
inc
jmp
jle
test
sbb
sbb
jge
or
js
fnstenv
pop
orb
jle
cmpsl
pop
inc
mov
adc
mov
jns
sbb
addps
mov
hlt
pop
and
repnz
adc
outsb
dec
xchg
mov
pop
jecxz
pop
andl
out
pop
pop
jns
outsb
and
mov
cmp
xlat
incl
dec
xchg
lea
jbe
jmp
lret
and
and
xor
mov
lock
pushf
add
mov
es
xchg
lods
dec
xor
out
test
mov
xchg
push
push
mov
pusha
sar
fbld
fwait
sbb
addr16
mov
xchg
lret
mov
mov
or
mov
xor
into
mov
mov
rcll
mov
adc
test
pop
jo
lcall
dec
pop
cmp
sbb
add
cmp
movnti
lcall
out
lds
iret
pop
je
out
cmpsb
mov
sbb
movsb
sub
dec
jns
push
dec
aam
shlb
jp
pop
std
test
mov
gs
xchg
and
xor
std
mov
stos
mov
std
jne
inc
sub
ret
and
repnz
xchg
daa
dec
cld
add
xchg
lret
pusha
fldcw
int
popa
jb
scas
sub
movsl
xor
pop
add
shl
push
mov
sub
int3
push
mov
sbb
lds
lods
das
xor
shrl
jp
mov
notl
arpl
ja
cmpsb
out
sbb
fimuls
mov
inc
out
jnp
incl
cmc
lods
or
int
dec
adc
in
add
ror
lods
scas
popa
andb
stc
stc
xlat
fcoms
les
leave
mov
adc
fisubl
mov
sbb
loope
mov
movb
add
xor
data16
or
sbb
pop
and
xor
xor
push
out
add
inc
sarl
stc
insl
ja
jo
testb
movsl
jo
stos
and
jmp
cmp
mov
mov
das
fsubrl
in
push
leave
test
outsb
jp
pop
fildl
lret
add
sbb
mov
je
sub
pop
pop
cmp
xor
out
mov
hlt
add
and
out
daa
sbb
ds
lods
sbb
rol
add
rorb
cmp
mov
cmc
hlt
mov
imul
addb
mov
repnz
cmc
pop
sub
arpl
push
push
pushf
adcb
mov
mov
mov
and
cmc
neg
into
pop
or
mov
sti
mov
cmpsl
lret
xchg
inc
push
jns
jbe
or
add
xchg
push
inc
push
sub
ds
mov
mov
sti
hlt
sbbb
pop
and
loope
push
mov
cmp
push
daa
sub
out
test
mov
imulb
cmp
fisubrl
mov
outsb
cmpsb
shl
fsubr
push
jns
lea
jnp
xorb
loope
int3
pop
fwait
jnp
sub
ja
cmp
ljmp
xor
sbb
xchg
imul
mov
iret
aaa
xor
movsb
and
jle
push
mov
out
push
adc
shr
pop
das
sub
insb
jb
add
arpl
pop
loope
leave
xor
sti
std
cmp
jmp
inc
push
iret
mov
mov
cmp
push
mov
ljmp
and
mov
aad
lret
ret
dec
mov
jns
pusha
pop
mov
test
jb
sub
data16
es
inc
xor
loope
sti
push
xchg
jp
sbb
mov
sbb
mov
fisttps
adc
inc
cmp
jecxz
fstenv
mov
leave
pop
xchg
adc
jecxz
jp
ret
jns
sub
mov
sub
mov
mov
jle
int3
hlt
xchg
pop
inc
out
jl
jne
jae
insb
adc
mov
ljmp
push
lret
mov
sub
fstps
jne
inc
sbb
sbb
inc
subl
add
sub
adc
xlat
jp
data16
call
cmpsl
dec
mov
ja
xor
xchg
push
jmp
dec
lea
inc
mov
sbb
pop
sub
and
jg
int
sahf
mov
ds
out
adc
and
dec
xor
sub
stos
or
push
and
cmpsl
push
lret
ret
out
fisubrs
mov
jl
iret
sahf
push
sub
aas
inc
adc
add
pushf
or
xchg
mov
adc
pop
icebp
cs
and
push
mov
les
push
std
lahf
es
push
mov
sbbl
stos
dec
jb
mov
push
dec
pop
xor
sub
insl
pop
pop
out
fiaddl
xor
push
faddl
ja
testb
fsubr
mov
ja
lcall
cwtl
repz
xlat
lods
push
nop
xor
insb
test
pop
inc
mov
call
cmc
xchg
pushf
scas
and
adc
cwtl
gs
mov
inc
inc
mov
int
push
push
mov
loope
jnp
add
or
mov
sub
dec
and
jbe
pop
inc
push
inc
jecxz
xor
pop
fsubp
in
cld
call
cmp
xchg
pop
sbb
setl
mov
ficoms
inc
vrcpps
pop
out
inc
xor
cmp
xlat
imul
rcrl
xchg
out
jl
rorl
sub
daa
imul
and
andb
and
inc
jbe
pusha
jmp
rcrl
loop
adc
mov
das
or
movsl
cmpsb
jl
xchg
aaa
xor
mov
movb
jl
gs
add
push
inc
pop
xchg
dec
testl
dec
aaa
xchg
add
fs
out
out
insb
pop
loop
adc
jae
std
movb
xchg
xor
add
or
sbb
mov
scas
scas
cmp
cs
subb
or
xor
cwtl
jp
je
mov
jb
mov
jnp
push
jge
fisubrs
jne
pop
es
stos
mov
mov
into
mov
mov
mov
mov
sbb
stos
xchg
loope
addl
out
pop
mov
sahf
andb
mov
inc
dec
repnz
sti
inc
shlb
xlat
mov
jbe
mov
push
xlat
xlat
cmpl
std
xor
mov
sbb
fucom
outsb
cli
adc
mov
pop
push
dec
fdiv
jmp
insb
xor
dec
in
cwtl
push
loop
jb
cmp
clc
xchg
or
cli
call
in
inc
mov
lods
std
das
pop
pushaw
addb
mov
add
cltd
fidivl
push
das
lret
cmp
inc
int
or
lods
dec
jmp
rol
cmc
push
stc
adc
daa
and
xor
pop
cmpsl
dec
sahf
outsb
test
add
scas
or
xchg
sub
outsb
mov
in
stc
xor
fistpll
sub
fs
lcall
cmp
movsb
out
dec
movb
xor
leave
dec
aas
call
mov
xchg
sbb
fisttpl
filds
inc
insb
and
pop
mov
in
adc
jb
movsl
imul
mov
or
inc
mov
cmp
rclb
cmpsb
pop
fwait
icebp
loop
aad
je
sbb
lahf
rcl
xor
sar
aam
std
jp
int3
jle
and
push
aam
fs
push
xchg
inc
gs
sub
jmp
iret
lahf
sub
scas
pop
pop
push
and
xor
inc
insb
mov
inc
mov
fs
cs
add
xor
int3
xchg
scas
mov
sub
cmp
inc
into
dec
lock
inc
in
add
es
paddsw
popf
sub
std
test
jge
jbe
xchg
mov
ljmp
outsb
dec
lret
arpl
and
ljmp
and
inc
adc
xor
sub
inc
addr16
outsb
jl
popf
add
sar
adc
imul
dec
imul
lds
jp
jbe
ljmp
imul
ret
inc
push
xchg
mov
inc
sub
outsw
cmp
in
outsb
fbld
dec
xchg
pminsw
imull
dec
sarl
fincstp
fsubl
fists
or
es
js
ss
testl
xchg
mov
jle
mov
add
and
les
sahf
push
push
xor
movsl
sahf
cmp
mov
das
and
rcrb
mov
adc
and
lods
rorb
mov
pop
mov
aam
sahf
cmp
rcl
or
jb
enter
dec
fbstp
and
xor
insb
in
pop
rcll
popa
fs
sub
gs
popf
gs
sbb
aaa
and
xor
sbb
outsb
jae
cmp
xchg
fnstcw
dec
idivb
std
in
xchg
sub
lods
cmc
aad
in
popf
filds
dec
adc
sbb
pop
dec
pop
jmp
ja
xlat
adc
shrb
out
push
stos
adc
ret
sub
js
movsb
pop
loopne
outsb
xchg
dec
mov
test
push
mov
or
in
lock
out
or
pop
mov
sub
sub
and
out
push
lret
inc
push
outsl
subl
sbb
and
popf
mov
xchg
into
js
lock
inc
stc
dec
xor
dec
pop
loopne
pop
jmp
mov
sbb
push
adc
xchg
scas
jns
sbb
aam
xacquire
add
jno
push
int3
mov
xchg
fwait
xchg
js
stos
cmpsb
sub
xor
xor
ret
jae
xchg
pop
roll
fsubs
sub
or
xchg
push
insl
add
xchg
and
cmpsb
or
clc
and
rcll
sub
jae
adcb
pop
xchg
adc
mov
outsl
lea
mov
aas
fnstsw
mov
dec
add
arpl
lea
inc
and
xchg
and
push
movsl
jl
push
js
outsb
pop
or
call
dec
jmp
insl
inc
addl
mov
testb
jl
xor
push
xchg
xchg
scas
insb
fsubrp
inc
mov
adc
cmp
cld
xor
xchg
stos
push
or
inc
add
push
lret
or
dec
push
mov
je
xchg
jne
shr
fiadds
test
sub
movsl
pop
and
cmp
push
jecxz
cli
insl
mov
jge
xchg
mov
divl
icebp
inc
mov
mov
cmp
stc
adc
lds
or
arpl
cs
in
sub
dec
xor
arpl
cmp
push
rclb
mov
sbb
mov
in
jb
test
dec
frstor
ret
dec
imul
cmp
cmp
fxam
or
int3
add
jg
jecxz
jne
stos
push
in
stos
sbb
out
inc
inc
outsl
in
fnstsw
lods
bnd
mov
rcrb
loop
push
pop
or
insl
and
mov
das
aad
fwait
iret
cmpsb
das
aam
and
adc
sbb
xchg
imul
and
mov
test
jbe
insb
cld
mov
into
loop
lock
cmp
fstpt
xorl
adc
xchg
movsb
dec
inc
ret
xlat
pop
es
and
add
mov
dec
jns
pop
leave
inc
push
imul
sub
dec
in
rcr
das
xchg
push
cmp
ljmp
xchg
xchg
out
pusha
roll
and
mov
outsl
hlt
xor
adc
insl
inc
and
shll
fsqrt
push
push
mov
mov
mov
jle
cs
inc
repz
shll
mov
add
jg
add
jnp
movsl
inc
xor
inc
xor
sub
into
mov
jb
xchg
in
mov
jg
mov
cmpsb
adc
mov
movsl
or
inc
jl
jne
outsb
and
mov
or
and
xchg
mov
xchg
inc
imul
jb
daa
movsl
xor
repz
loopne
in
pop
ret
mov
fistpl
dec
cmp
xor
mov
xchg
cwtl
jne
enter
pop
mov
mov
inc
mov
addr16
cmpsl
lret
subl
outsb
lahf
shl
daa
xchg
jl
mov
ret
ja,pt
repz
movsl
jb
popf
addr16
jg
jle
or
leave
inc
mov
add
mov
int3
xor
sub
push
push
mov
cmp
and
cld
or
lods
inc
in
xor
in
push
mov
and
mov
outsl
push
popf
mov
and
push
das
cmp
sbb
lcall
frstor
lock
std
mov
mov
xchg
mov
loope
lahf
js
and
lods
sub
add
aas
scas
mov
or
js
pop
ja
rorl
cmc
loop
leave
dec
sub
adc
mov
dec
popa
stos
xchg
sub
jnp
mov
mov
mov
fiadds
add
out
lods
or
lcall
sbb
jge
je
popa
insb
cmp
sub
xchg
cmp
xchg
dec
test
inc
cwtl
lds
pop
mov
cmp
mov
adc
testb
mov
inc
sub
jb
dec
in
push
mov
pop
fidivrs
mov
outsl
push
dec
mov
adc
daa
popa
out
je
out
fcmovnu
sub
push
in
mov
cmp
das
mov
or
fnstcw
xchg
jb
loopne
scas
inc
aad
pop
inc
mov
movsb
inc
fdivrl
or
mov
loop
adc
xchg
cmc
mov
js
rolb
fisttpl
push
push
pop
jl
je
jo
sahf
lret
sbb
inc
mov
pop
jmp
pop
shll
mov
sub
das
jne
cld
in
test
leave
loopne
out
mov
xor
push
dec
pop
xchg
out
cmpb
jp
add
jl
aam
nop
idivb
xor
mov
lcall
pop
mov
fwait
push
sub
fiadds
js
dec
into
rcll
in
mov
pop
loope
mov
sbb
fnstsw
inc
jmp
or
gs
sub
das
pushf
mov
in
dec
clc
xor
lahf
push
movsb
cli
fwait
gs
cltd
loop
sub
loope
and
push
out
daa
scas
les
or
mov
xchg
jg
in
dec
std
scas
fldcw
jge
xchg
jecxz
ja
loop
push
outsl
or
inc
and
push
notb
sbb
mov
adc
dec
in
and
jle
sub
add
outsl
subb
mov
jo
mov
mov
prefetchw
xor
fisttps
xor
inc
out
rcr
jle
pminub
cs
cmp
test
negb
push
mov
pop
sub
push
pop
mov
sub
xchg
int
iret
shlb
mov
flds
rol
add
xor
testb
jg
mov
sub
jne
negl
test
inc
jb
aas
aam
lods
cmpsb
jmp
and
mov
movsl
push
or
jb
mov
rolb
cmp
cmp
sti
jae
jns
mov
aad
repnz
mov
outsl
mov
inc
loope
or
push
lock
sbb
fdivl
cs
fidivl
imul
mov
push
jg
jno
mov
lds
bound
mov
dec
and
or
sbbb
inc
cmp
leave
out
rol
aad
push
gs
or
mov
repnz
push
int
cvtps2pd
pop
inc
cmp
sbb
inc
popa
jnp
mov
les
or
and
xor
inc
add
test
test
xor
pop
stos
mov
push
mov
sbb
sbb
icebp
in
sbb
push
cltd
loopne
dec
and
cli
pop
and
dec
mov
jbe
sahf
stos
cltd
inc
ljmp
ds
jmp
jnp
and
xchg
mov
xchg
bound
xchg
push
push
push
and
ds
mov
fadd
sbb
sub
je
or
jne
dec
push
fcomip
mov
pop
mov
sbb
inc
aam
push
sub
sbb
mov
test
push
push
cmp
inc
xchg
adc
push
xlat
xor
mull
scas
or
pushf
outsb
xchg
mov
jno
mov
pop
jbe
cltd
je,pn
mov
mov
call
ds
test
rcl
pop
fsubrs
mov
sarl
aad
add
leave
int3
jge
jge
pusha
test
outsb
cld
push
dec
dec
test
xchg
pop
jnp
js
fs
les
add
mov
cmp
mov
ficoml
jmp
in
push
mov
aad
nop
mov
movntq
jmp
ret
push
inc
imul
jne
push
lock
outsb
dec
test
push
push
js
test
adc
mov
test
xchg
jmp
mov
and
xor
lods
xchg
outsl
inc
scas
lcall
or
dec
faddl
cmp
fidivs
test
test
cmc
js
push
lret
jp
or
fmuls
and
mov
cmp
xchg
repz
jns
aas
cmpsw
pop
mov
inc
or
jp
cld
imul
xchg
pop
minps
gs
cmp
inc
push
mov
or
xchg
or
test
jl
ret
pop
les
lret
sti
in
test
or
mov
bound
inc
add
inc
cld
mov
enter
push
jmp
mov
inc
inc
pusha
jecxz
lock
pop
repz
pop
xlat
movsl
and
aam
mov
lea
jp
sbb
xor
adc
stos
xor
sbb
leave
xor
adc
sub
aas
enter
aad
into
jmp
leave
and
fadd
mov
je
jge
loop
or
add
nop
inc
mov
andl
sbb
out
insb
js
xor
mov
int
fdivp
mov
xor
adc
mov
add
mov
xchg
aas
imul
inc
push
pop
sbb
lahf
mov
jno
inc
leave
lock
movsl
daa
cwtl
addr16
add
std
dec
ss
dec
dec
mov
sti
imul
cli
mov
jge
je
arpl
sbb
fcmovne
test
push
fnstenv
dec
sub
add
or
pop
insb
cmp
xlat
popa
aad
pop
cmp
sub
mov
inc
and
push
push
insb
push
fistps
cld
push
iret
inc
in
cmp
push
fidivl
lcall
imul
jle
xchg
sahf
jnp
mov
mov
lock
mov
push
frstor
sub
xor
fs
pop
inc
mov
stos
insb
loopne
and
sbb
lods
adc
sahf
icebp
rcrb
xchg
mov
andl
nop
adc
add
aam
fidivrs
es
arpl
sub
pop
sar
lret
rcr
clc
jns
sahf
div
push
mov
sub
das
ret
adc
jno
jns
adc
shrb
cmp
mov
pop
jnp
sbb
cmpsl
aas
stos
aad
fimuls
lcall
sarl
js
in
mov
jmp
test
loopne
inc
adc
pop
adc
push
jl
jae
stos
jp
scas
lcall
test
mov
or
roll
aas
imul
jne
rorl
into
pop
push
mov
int
dec
cmc
das
push
add
add
xchg
xchg
js
jno
fwait
sub
jmp
ljmp
xchg
mov
stc
jp
aad
cmp
repz
pushf
push
xor
cmc
and
cmp
int
outsb
pushf
jo
ds
mov
fcmove
in
adc
pop
or
xchg
mov
jge
add
test
cs
and
cmp
or
ret
xor
fisubrl
add
jns
vaddps
mov
ds
cmpsl
xor
lret
fidivrl
sub
shr
sbb
gs
pop
jns
je
nop
xor
clc
je
add
in
add
cs
add
mov
xchg
sbb
xchg
cmc
jno
push
mov
dec
dec
sub
xchg
dec
mov
ja
sub
adc
inc
jne
or
scas
lods
adc
cli
sbb
and
lods
sahf
cs
mov
dec
and
outsb
jle
in
dec
gs
xchg
adc
xchg
inc
int3
sub
push
adc
and
out
ja
adcl
rolb
test
cwtl
ljmp
adc
push
inc
inc
lret
fs
aaa
push
inc
xchg
adc
mov
push
xor
packuswb
jg
cmpsb
and
adc
mov
pop
cmpsb
and
lahf
loopne
push
test
push
lods
inc
push
outsl
mov
arpl
aad
mov
lock
dec
pushf
or
roll
and
mov
cmp
lret
sub
inc
loopnew
test
jmp
ret
dec
daa
fbld
icebp
push
pop
add
push
cmp
insl
push
call
xchg
shlb
movsl
mov
cmc
push
and
push
daa
adc
sub
enter
out
xchg
cmc
cs
jnp
pop
dec
adc
xor
fisubrl
dec
mulb
sahf
adc
out
call
mov
mov
pop
and
sub
mov
loope
roll
pop
loopne
jge
ret
push
xchg
leave
pop
xchg
std
mov
sbb
mov
jne
xchg
push
jbe
arpl
jl
les
pushf
and
dec
je
leave
mov
outsl
sbb
push
inc
mov
or
push
and
xchg
clc
cltd
ds
push
pop
in
or
into
inc
fstps
mov
js
sub
xchg
adc
or
dec
push
mov
pop
sbb
mov
fwait
repz
sar
adc
sbb
inc
shrl
das
cmpsb
fs
jns
push
push
cmp
push
lea
sbb
ficomps
push
mov
leave
pop
jg
mov
jl
dec
xlat
es
inc
fnop
mov
loopne
push
je
sbb
adc
movsl
sub
sub
fstps
fistpll
aas
mov
out
mov
lcall
inc
mov
mov
push
and
scas
sub
mov
or
mov
xor
fwait
jle
pop
rorb
xchg
cld
adc
fildll
add
xor
pop
lret
adc
mov
xchg
ljmp
fbstp
repnz
adc
jo
cli
pop
insl
xlat
push
pop
movsl
dec
call
rorl
rcll
in
outsb
xchg
fsubrp
call
stc
xor
or
adc
sub
data16
sbb
in
jle
in
jle
out
xchg
cmp
or
inc
mov
push
out
mov
sti
mov
push
mov
jb
out
xchg
push
jbe
push
shll
cwtl
pop
cld
pop
cmpsb
and
or
sbb
mov
arpl
ss
mov
mov
and
sub
xchg
loopne
loop
dec
push
mov
sbb
push
push
out
cmpsb
mov
dec
cmc
inc
iret
leave
and
jl
jbe
mov
adc
push
sub
adc
loope
aad
pushf
lods
mov
arpl
pop
push
cltd
mov
fs
ret
clc
fdivrs
insb
pop
adc
mov
xor
out
xor
inc
push
inc
and
push
stc
and
loopne
ja
bound
imul
inc
lret
sub
test
push
push
test
loop
lods
dec
mov
lret
loopne
cmp
and
repz
dec
in
or
test
ficomps
ja
test
cli
mov
sbb
loopne
push
inc
in
inc
pop
dec
push
dec
xor
fldenv
dec
arpl
clc
push
in
xor
xchg
aaa
jne
bound
xlat
mov
sbb
sbb
mov
jno
inc
push
test
xchg
inc
test
fidivrl
mov
pop
std
cltd
fldenv
loope
xchg
rorl
adc
mov
lock
imul
mov
and
adc
lods
jae
jbe
incl
mov
push
inc
xchg
xchg
sub
sbb
cli
pop
mov
ljmp
cmpsb
lahf
or
nop
mov
dec
orb
mov
popf
pop
sub
jne
das
rclb
cmp
inc
or
xor
daa
mov
sub
jae
pop
add
movsb
pop
sar
jne
test
inc
nop
loope
jb
jno
das
aad
cmovge
out
into
rclb
mov
fdiv
mov
cmpb
in
jle
sbb
shrb
imul
lods
shl
mov
xor
jp
add
mov
pop
adcb
adc
std
xor
or
inc
jmp
fcmovnbe
dec
insl
fildl
ljmp
mov
ret
push
repnz
mov
add
sti
sarb
lcall
psubd
movswl
inc
jae
loope
fisubrl
cltd
xchg
and
loope
cmpsb
data16
push
cwtl
push
mov
dec
movsb
mov
mov
lcall
dec
sbb
popa
insb
jg
pop
or
sbb
pushl
mov
pop
add
cmp
adc
fistpl
incb
iret
pop
out
mov
test
adc
mov
or
pop
aad
xchg
arpl
add
cs
xor
add
sub
jno
and
lock
outsb
cmc
pop
jae
in
dec
aas
int
sub
outsl
test
fistpll
fnsave
nop
insl
lcall
xchg
call
gs
jns
cmpsl
push
pop
adc
mov
add
sbb
mov
cmc
into
and
sub
movsl
outsb
lods
mov
cltd
xchg
setge
pop
mov
inc
xor
jl
xchg
dec
pop
mov
cmc
shlb
mov
inc
in
mov
fdivrp
push
or
out
add
ss
mov
scas
xor
enter
imul
jb
dec
je
neg
sub
pop
sub
mov
lock
mov
and
imull
mov
mov
xchg
mov
adc
cmc
lcall
sub
jle
pop
outsb
ret
daa
or
push
sbb
dec
inc
iret
push
mov
pop
in
jb
xor
push
push
ficomps
inc
lret
push
sbb
push
mov
inc
mov
xchg
int3
loopne
out
rcrl
mov
lahf
sbb
int3
push
dec
clc
cmp
out
hlt
inc
sub
lds
loopne
loop
fmuls
rorb
cs
cmpsl
fidivrl
rcrl
pop
jne
cmp
lret
pop
xchg
cli
and
aad
cmpsb
lock
rcrl
sarl
pop
rcll
sete
rcr
xor
dec
dec
sub
cwtl
mov
mov
cmp
iret
sti
cld
mov
mov
in
scas
jge
jg
bound
scas
mov
add
add
mov
push
jo
in
into
std
sarl
mov
outsb
pop
xchg
icebp
fwait
mov
mov
mov
inc
fdivl
sbb
sub
fadds
ljmp
jbe
pushf
nop
cli
sbb
mov
lds
ja
shlb
lods
call
vpunpckhwd
daa
sbb
mov
cmp
jle
repz
cmpsb
lret
lea
sub
adc
into
orl
je
push
adc
hlt
jge
dec
orb
subl
sbb
popf
jo
and
ret
fmuls
mov
adc
sbb
push
sub
mov
mov
xchg
cmpb
jns
inc
ds
sbb
lret
xchg
lcall
imul
dec
mov
mov
xchg
mov
cmpsb
stc
add
xor
out
outsl
push
addr16
xor
and
mov
call
aam
sub
sub
xchg
je
scas
xor
jmp
push
imul
loope
pop
dec
outsl
stc
jno
aam
jbe
lcall
cmpsl
mov
adc
pop
mov
and
loope
jmp
lods
and
mov
jge
icebp
sahf
add
sbb
inc
dec
inc
mov
arpl
js
push
mov
cmp
mov
lret
push
sbb
cmpsb
fistl
xor
add
addr16
mov
fstpt
jmp
enter
fstp
push
int3
cmp
leave
cli
push
sbb
inc
mov
add
inc
or
add
jns
push
shlb
lods
in
push
aaa
pop
jl
scas
mov
fs
mov
dec
jecxz
xor
popf
outsb
daa
lods
gs
popf
jae
test
jb
mov
das
fildll
sbb
dec
pop
arpl
and
jge
or
stos
fisubs
das
cmp
sbb
js
subps
test
daa
mov
xlat
cmp
sub
push
push
jo
dec
mov
adcb
jl
es
mov
aam
add
mov
jg
jle
inc
sub
rcrb
shrb
mov
cmp
inc
iret
frstor
or
xlat
scas
jmp
dec
out
bound
xchg
cmp
adc
movsb
sub
add
daa
test
mov
sar
flds
data16
out
mov
adc
mov
fsubs
arpl
mov
jmp
mov
rcl
scas
xor
es
adc
bound
lret
dec
imul
inc
push
stos
pop
test
jmp
adc
mov
sbbb
jp
popa
dec
inc
xor
out
or
sti
popa
add
mov
cmp
and
outsb
out
das
sti
and
pop
out
pop
faddl
iret
mov
aam
sub
cs
f2xm1
mov
pop
push
call
pop
inc
test
xor
inc
xchg
dec
or
test
sub
jg
stos
dec
or
sbb
mov
fsubl
mov
mov
insb
and
xchg
ds
push
insl
sub
sahf
pop
rcl
jnp
cmp
fs
shl
cmpsb
dec
pop
cmp
and
out
into
dec
lret
adc
ret
adc
mov
and
lods
test
add
fstl
cmp
jnp
add
adc
and
stc
add
mov
cltd
cmpsb
jge
incl
dec
pop
shll
stos
xchg
xor
inc
imul
adc
and
pop
mov
test
cmp
pop
sbb
call
nop
out
dec
mov
jae
lds
iret
push
fcom
xchg
ljmp
mov
xchg
imul
imul
push
adc
arpl
nop
ds
icebp
add
scas
add
cli
xlat
push
push
jno
aas
rcll
imul
arpl
inc
lahf
stc
adc
shlb
add
mov
fcoms
dec
shr
pop
push
test
movb
and
outsb
inc
inc
inc
sub
add
shrl
mov
repz
mov
xlat
jb
xchg
pushf
or
jno
or
out
push
scas
add
out
cmp
xor
inc
sbb
gs
pop
daa
jmp
jo
fdivrl
push
pop
nop
fwait
stos
aad
enter
pop
xorl
shrl
cmp
inc
lcall
scas
sbb
xor
shlb
and
xlat
lahf
jb
addr16
hlt
lret
jb
cmp
add
or
lods
movsb
gs
mov
mov
sbb
decb
sub
inc
es
rorl
rclb
sbb
cmp
mov
mov
repz
pop
sub
mov
inc
cmpsl
mov
shll
in
push
cmp
repz
clc
out
cmc
add
mov
mov
iret
repnz
mov
mov
fidivrs
lahf
les
cmp
mov
cmp
cwtl
inc
push
pusha
push
inc
dec
out
push
sub
stc
xchg
cld
cltd
outsl
rcrl
mov
or
cmp
cwtl
ret
mov
ljmp
or
add
or
inc
pushf
loop
pop
pop
jp,pt
inc
jl
mul
sbb
xchg
jge
fstpt
ss
lcall
or
or
push
bound
icebp
xor
pop
adc
inc
or
xchg
pop
mov
lea
pop
jmp
push
xchg
ret
imul
into
cwtl
aam
pop
and
xor
mov
decl
movsl
inc
mov
mov
and
fs
push
xor
movsb
sub
xrelease
out
and
aam
xor
popf
es
pop
adc
sarb
mov
icebp
sbb
cmp
lock
jle
mov
add
sbb
or
inc
pop
sbb
xchg
push
push
out
dec
push
fdivrs
popa
ds
nop
mov
pushf
inc
lea
movl
adc
xchg
in
les
lahf
push
mov
mov
test
adc
ja
sub
mov
loope
push
repz
das
mov
xor
lret
mov
jo
sbb
movsl
in
outsl
hlt
addr16
push
pop
cmp
or
ds
pop
or
in
mov
scas
subl
jno
push
repnz
ds
subb
loopne
pusha
bound
mov
xchg
mov
notl
loope
sarb
pop
ljmp
jne
test
sub
loop
into
int
xchg
arpl
xor
lcall
fcomps
jp
sbb
push
sti
bound
ret
fwait
test
js
jno
aas
mov
out
xchg
js
cmc
pop
or
jle
es
inc
and
arpl
cs
inc
pop
mov
dec
daa
roll
ds
cmp
repz
testl
add
mov
sbb
imull
ss
fwait
mov
sbb
outsb
mov
jo
sub
sub
sub
jae
mov
sbb
lea
mov
aam
enter
xor
mov
stos
rorl
negb
iret
mov
lcall
dec
daa
sbb
add
aaa
stos
outsl
mov
movl
es
cltd
jl
push
mulb
cmp
outsb
cmp
imul
shlb
stc
mov
add
jae
incl
lea
ja
pop
fldt
and
arpl
popa
adc
testb
das
stos
mov
xchg
mov
add
mov
add
stc
cmp
jge
inc
shrb
or
mov
xchg
out
jmp
dec
xlat
lret
inc
cmpb
insb
inc
loopne
and
test
stos
pusha
jg
out
jnp
mov
and
mov
sub
jbe
xchg
loope
adc
test
xchg
scas
jg
jns
aam
or
xchg
mov
mov
shufps
cwtl
jb
loopne
lds
nop
lret
aad
mov
les
mov
cmpsb
pushf
xlat
fdivr
sysret
sbb
sub
pop
stos
arpl
das
sahf
add
inc
jecxz
repnz
pop
sub
adc
icebp
adc
xchg
sahf
inc
divb
xor
add
dec
xchg
push
into
aam
shll
and
mov
aas
mov
sti
ret
add
pop
xor
mov
shll
add
lret
pusha
sbb
psubb
sub
pop
adc
pop
push
repz
in
rol
cs
push
push
loop
je
jno
dec
sbb
pop
sahf
lcall
adc
stc
sub
xchg
push
xor
mov
cltd
cmpsb
or
pusha
adc
mov
loop
fstpt
mov
sar
int
lods
sbb
pop
in
ret
xchg
stc
in
dec
movsl
push
mov
push
sub
aam
test
sub
add
inc
and
dec
jle
push
sbb
sub
mov
rcl
push
cld
cwtl
hlt
adc
xchg
mov
xchg
bound
adc
repz
shll
cmpsl
loope
jmp
jmp
push
sub
fwait
jns
or
loope
cwtl
in
fdivr
loop
das
test
scas
in
rorl
push
sti
xor
mov
out
mov
xorb
mov
vcvtss2si
or
sbbb
and
into
stc
bound
push
push
fnstsw
ss
inc
pop
ret
mov
and
mov
sub
bnd
inc
cwtl
test
sti
jno
test
aaa
xchg
cmp
sbb
cmpsl
push
jno
add
frstor
popa
mov
inc
mov
add
jle
andb
dec
lds
dec
jl
loopne
sti
rcll
gs
outsb
movsl
mov
outsb
cmp
je
jg
jge
test
add
bound
sub
lods
inc
lahf
inc
jg
sarl
dec
xchg
fnstenv
xchg
cmp
cmp
dec
or
lret
push
hlt
push
push
xor
int
inc
fidivrl
cmp
stos
inc
sub
pop
push
inc
lcall
les
sbb
push
iret
sbb
ret
cmpb
movsb
xchg
outsb
fisubl
cld
or
stos
lock
inc
sahf
fcomps
ljmp
into
xchg
or
decb
inc
psadbw
inc
or
cs
mov
hlt
ret
scas
lcall
xor
pushf
testb
sbb
ret
outsl
jb
aaa
lret
xor
shrw
shll
loopne
js
mov
ss
xlat
add
and
sub
iret
faddp
jle
ljmp
sbb
sbb
fs
mov
insb
pop
push
mov
xor
jb
into
pop
add
cld
mov
cmpsb
ja
and
dec
xor
inc
mov
cmc
cmpsb
lock
sub
loop
lcall
repz
ret
mov
int
in
andb
rorb
ret
sbb
outsb
or
out
mov
inc
mov
xchg
cmp
icebp
popf
movsl
mov
div
fs
aaa
push
mov
or
leave
sub
mov
or
mov
js
icebp
add
sbb
ss
shrb
push
stos
xchg
mov
pop
xchg
js
cmp
movsb
sub
test
mov
and
jg
jecxz
mov
test
xchg
into
mov
aaa
ja
add
sbb
testb
and
jp
mov
jecxz
pop
cmpsb
pop
aas
out
movsb
subb
xchg
or
scas
out
xor
mov
lret
or
push
sarl
pop
xor
jo
shlb
jge
bound
in
sbb
jns
cmp
out
mov
insb
or
and
sub
pop
cmpsl
insl
out
stc
cld
cmp
xchg
dec
outsl
xchg
push
ficoms
ds
outsb
cs
scas
leave
fisubrs
insl
pop
jo
scas
movsl
test
xchg
movsl
mov
int
and
add
inc
dec
jb,pt
and
sbb
jg
push
shrb
mov
scas
add
add
sub
iret
enter
dec
fwait
pop
pop
cltd
mov
push
leave
adc
mov
cmpsl
lods
iret
jo
xchg
and
fsubrl
cmp
cmc
mov
sti
xlat
fldl
int3
rcrl
pop
xor
loop
sbb
xchg
add
shl
mov
mov
adc
xchg
sub
ja
mov
mov
pop
outsl
hlt
nop
lret
mov
cwtl
sbb
mov
mov
jge
jne
cli
orl
je
jl
cmp
psubd
or
sbb
clc
jge
adc
xor
hlt
cld
ss
push
cmp
je
sub
push
out
or
jle
xchg
lcall
xchg
int
xchg
mov
sub
dec
popf
out
bound
insl
lock
or
ret
push
leave
or
in
popa
int3
dec
adc
xor
jl
xor
push
push
xor
inc
add
sti
jl
int
fdivp
cmp
mov
add
or
fwait
mov
cmp
pop
xlat
push
mov
push
mov
mov
fistpll
iret
aaa
pop
jnp
jmp
sbb
push
imul
mov
daa
adc
jmp
jmp
nop
and
push
add
dec
ja
dec
adc
adc
bound
stos
pop
xor
cmpsb
inc
in
xor
add
sub
sahf
cld
jo
fsubp
push
imul
ljmp
or
mov
and
pop
mov
popf
push
out
xchg
cmp
rsqrtps
cmp
mov
pushf
mov
mov
pop
lahf
cmpsb
scas
cli
sub
sbb
cld
adc
out
aam
add
cld
sub
push
jg
hlt
sbb
pop
dec
mov
and
cmp
mov
xchg
dec
mov
xchg
cmp
cld
outsb
sbbb
enter
sub
sahf
pop
ret
push
adc
jge
cld
scas
rcrb
into
cltd
ss
mov
mov
sahf
enter
cmc
repnz
push
lea
sbb
insb
mov
jmp
inc
gs
test
lret
es
repz
cmpsl
out
cmp
fsubrl
adc
adc
add
rorb
jae
cli
or
and
jmp
iret
pop
pusha
pop
adcl
fwait
dec
xor
jo
pop
aas
and
fs
jnp
js
inc
xchg
lahf
inc
sbb
xchg
rcrb
push
jmp
push
push
fwait
pop
insb
lea
push
sar
fwait
adc
jmp
mov
ret
jl
mov
in
and
dec
dec
or
stc
add
test
jg
mov
test
out
inc
mov
mov
mov
out
xor
mov
pop
dec
sahf
repz
xor
xchg
test
test
addr16
outsb
jne
sub
pop
shlb
dec
push
std
sub
addr16
ja
cmc
and
mov
fucomip
popf
add
bnd
xor
pop
scas
xor
pop
jle
push
mov
fsts
scas
push
dec
rcrb
out
inc
in
ja
rorb
ds
sub
in
cmpsl
jbe
dec
inc
fisubl
pusha
dec
xor
jo
mov
aas
cltd
test
pop
push
inc
dec
push
ljmp
push
outsl
dec
xchg
pop
add
xor
je
jae
cmp
stos
xchg
lds
push
and
scas
fucom
pushf
lea
sbbl
mov
xor
push
lcall
pop
mov
mov
pop
add
mov
lds
test
inc
sbb
dec
xchg
das
je
or
std
jle
shlb
mov
or
pop
inc
leave
sub
push
movsl
mov
in
sbb
pop
pop
leave
lahf
xorl
and
mov
repnz
lods
fistps
sbb
fnstenv
xchg
jg
cmp
filds
fisttpll
cmpsb
sbb
sbb
sbb
push
pop
cwtl
pop
pop
loope
jb
dec
sub
jne
jp
ljmp
mov
aam
stos
sub
clc
ss
add
xor
lea
mov
or
mov
push
leave
xchg
leave
mov
ja
pushl
lock
ss
cmp
test
out
cli
jl
sbb
out
mov
lcall
cmp
xorb
je
sti
and
jg
mov
push
add
lods
test
add
xor
sarb
test
cmc
cmc
cmp
inc
add
pushf
sub
enter
adc
xor
or
test
adc
or
cmp
fidivl
mov
pop
repnz
mov
outsb
fsubr
inc
xor
xor
pop
ret
cmp
inc
sub
std
imul
push
jo
jne
adc
adcl
mov
lods
cmp
sub
lcall
pop
jp
add
xchg
pop
leave
push
jne
jns
nop
cmp
test
mov
sbb
jne
bound
inc
mov
aam
sbbl
pop
lds
dec
lret
mov
dec
pop
jge
aas
jge
and
movsl
pop
jge
mov
mov
push
xor
fbstp
and
xchg
popa
mov
enter
mov
sbb
mov
push
jo
lret
mov
and
stos
ss
fbstp
sbb
mov
push
and
pop
dec
or
sub
mov
mov
jge
mov
xchg
out
or
sub
xlat
add
int3
std
push
cmp
lods
inc
xor
xlat
xor
out
idivl
push
mov
mov
inc
push
cli
pushl
cmp
dec
cmp
fwait
imul
dec
dec
aam
lcall
xor
cs
test
loopne
cs
mov
stos
in
dec
subb
test
mov
xchg
jb
aad
ret
cli
mov
jb
es
iret
xchg
xor
xor
stos
nop
pop
push
fcoms
sbb
cltd
mov
imul
cmp
mov
xchg
cwtl
imul
jmp
cmpsl
adc
mov
mov
pusha
cmp
fmull
inc
cmpsl
mov
outsl
lods
mov
scas
fisttpl
push
mov
iret
sti
cmp
pop
scas
inc
push
cmp
clc
or
inc
jb
fstpl
lret
push
std
dec
pop
in
mov
push
imul
xor
mov
popf
enter
fs
fwait
xchg
and
leave
iret
inc
insb
cltd
mov
push
and
in
inc
cld
or
push
xor
cmp
and
xchg
inc
in
or
xor
stos
stos
adc
push
ficoms
inc
nop
or
das
xchg
sbb
push
sub
dec
xor
push
xor
fisubrl
lret
shlb
xor
add
pop
jge
sub
je
mov
sahf
fwait
or
test
sbb
inc
sbb
mov
push
adc
insl
xchg
pop
pop
inc
mov
ret
leave
arpl
dec
pop
scas
iret
iret
ja
lock
divb
jne
int3
repz
repz
mov
test
pop
pcmpeqb
mov
or
aas
push
stos
sub
sbb
test
adc
cmp
adc
insb
jbe
inc
insb
mov
nop
das
sub
hlt
sbb
data16
lock
xlat
inc
sub
xor
push
inc
in
into
cs
dec
pop
xchg
test
mov
sbb
lahf
arpl
mov
sti
inc
xchg
xchg
pop
loop
push
int3
mov
dec
rcll
add
pop
add
fimull
dec
xchg
inc
xchg
mov
add
call
sti
pop
out
or
mov
push
or
or
add
test
fucomi
xor
xchg
or
hlt
jle
loop
jb
mov
in
xchg
popf
mov
mov
pushf
fldcw
push
xchg
pop
sub
mov
aam
cltd
dec
shl
mov
out
mov
or
xchg
xchg
dec
add
xor
push
mov
sbb
inc
sub
negl
ljmp
lds
jecxz
or
push
je
add
inc
dec
sti
or
sbb
stos
loopne
jmp
adc
mov
test
dec
rcll
push
sub
movsl
movsb
adc
movsb
cmc
cmp
inc
or
dec
notb
ljmp
xlat
bnd
stos
mov
cmp
ret
push
sub
cmpsb
mov
std
sub
and
or
pop
or
test
imul
sahf
xchg
pop
add
mov
xor
test
cmpsl
mov
cmpsb
call
mov
lds
push
adc
sar
adc
sahf
pop
mov
push
push
mov
ds
test
cmpsb
aaa
gs
xor
xor
sub
ror
inc
imul
mov
stos
cvttps2pi
cmpsb
push
push
xor
xchg
ljmp
inc
jae
lret
fidivl
mov
add
out
jge
sbb
pop
lea
leave
mov
int
lods
adc
ret
stc
out
mov
mov
sti
mov
lods
push
out
mov
inc
mov
mov
scas
jo
jo
int3
xlat
incl
jl
stc
push
mov
fildll
pushf
in
dec
cmp
xchg
sub
mov
mov
inc
mov
pop
adc
aad
notl
push
mov
ss
xchg
cld
cld
push
cmpsl
jecxz
mov
fsubl
cmp
and
dec
addr16
xlat
decb
sub
mov
cmc
les
leave
outsb
mov
dec
pop
jl
fcomip
popl
lock
mov
cli
js
cmp
mov
mov
adc
xchg
mov
dec
pop
push
mov
vunpcklps
mov
or
xchg
sub
xchg
push
les
cmp
testl
ficoml
orb
sbb
sbb
sbb
sbb
fwait
push
mov
sub
imul
sbb
movsl
cli
sub
inc
enter
insb
mov
mov
mov
xchg
sub
cwtl
std
out
je
mov
jle
jb
mov
jle
out
mov
sbb
add
push
cmp
add
leave
imul
dec
lods
jecxz
inc
jp
mov
lahf
outsl
lods
mov
jae
std
xchg
mov
sbb
lods
jle
inc
aam
xor
jecxz
xchg
xor
ss
cli
loope
subl
int
sbb
pop
or
test
mov
add
xchg
and
or
pop
movsl
fistl
ja
fmuls
js
jno
rclb
bound
inc
jns
int3
arpl
mov
push
nop
fcomps
lods
mov
or
xchg
or
ret
jmp
or
and
xchg
push
jmp
fimull
ss
lcall
sbb
adc
lock
repnz
lret
enter
and
int
push
rcrb
cmp
sbb
mov
cmpsl
xor
push
lds
incl
in
jg
dec
adc
xor
fwait
push
push
adc
pop
push
sahf
subl
loop
es
xchg
push
std
sbb
dec
inc
and
jmp
jbe
ret
stos
in
pop
cmp
pop
cmpsl
or
out
rclb
daa
rcrl
outsl
cs
lahf
xor
clc
mov
cmc
arpl
add
pop
loop
jne
xor
leave
jp
sub
in
mov
test
enter
mov
es
sub
dec
push
les
push
cld
fsubrl
js
js
cmp
mov
pop
dec
push
sub
xchg
adc
sub
sbb
pusha
or
xchg
xchg
xor
sbb
nop
int3
sarl
add
pop
addr16
and
sbb
jb
dec
shlb
sub
imul
faddl
sbb
dec
pop
xor
mov
jo
xchg
cmpsl
mov
xor
and
pop
jbe
cmp
xor
sahf
leave
add
in
arpl
pop
jo
cmp
jne
jle
inc
pop
jp
xor
cmp
decl
ret
in
shlb
call
add
mov
rep
rcll
push
push
xor
pushf
cmp
loopne
pushf
ds
fsubp
or
js
jmp
call
loopne
pop
jg
loop
test
sbb
loop
outsb
and
sub
dec
cmc
push
jmp
xchg
mov
fldenv
xchg
mov
imul
scas
sahf
sbb
and
ror
fstpt
lods
or
in
jl
xchg
mov
sahf
cwtl
cmpsl
addl
and
cmp
ficoml
bound
sbb
xchg
repnz
mov
into
aaa
testl
shl
push
push
orb
jnp
sbb
jp
push
in
call
outsb
inc
push
dec
test
push
adc
addr16
mov
sbbb
fisttpll
xchg
push
mov
call
push
pop
insl
stc
mov
push
ja,pt
test
fnstenv
xchg
mov
lods
dec
rcl
dec
dec
mov
orb
ljmp
mov
dec
aad
icebp
xlat
mov
test
mov
mov
andl
pop
xchg
cmp
pop
mov
sbb
xchg
es
rcr
imul
test
cli
and
mov
cmp
sbb
push
push
aas
mov
jg
jb
push
add
stos
mov
lahf
sti
mov
or
push
jae
sub
decb
sarl
dec
adc
sbb
mov
je
cmp
dec
cwtl
lock
sbb
leave
and
jae
mov
xchg
push
inc
jecxz
nop
nop
lcall
in
add
push
lcall
addr16
push
out
fxam
sbb
movsl
xlat
cmp
dec
lock
scas
add
adc
cmp
inc
pop
push
push
adc
push
and
push
and
xor
dec
icebp
push
jnp
jmp
lea
mov
add
mov
sub
adc
inc
jne
setl
pop
bound
push
add
movsb
clc
fbld
mov
inc
cmc
fwait
es
leave
mov
mov
sub
xchg
stc
push
gs
xchg
inc
adc
pop
out
in
scas
mov
jecxz
sbb
popf
xchg
clc
adc
mov
ret
xor
add
lods
lret
sbb
int3
movb
xor
dec
mov
jmp
bound
stos
mov
divl
aaa
or
jecxz
scas
icebp
cmp
incl
les
push
ja
push
jae
lret
push
jmp
sbb
jmp
lods
std
ret
fcmovnb
dec
enter
inc
in
mov
shlb
icebp
dec
lcall
add
fwait
cs
mov
mov
mov
test
test
test
pop
xchg
nop
pop
imul
cmp
fs
xchg
cwtl
push
and
aam
and
add
push
out
ficompl
mov
jmp
mov
xchg
push
lahf
ret
leave
mov
pop
addr16
mov
outsl
cmp
imul
shrb
inc
pop
pop
lss
ret
insb
rcrl
lods
shlb
mov
jo
ljmp
dec
mov
xor
jecxz
cmp
xchg
aam
sbb
in
arpl
pushf
and
fdivs
mov
and
scas
imul
dec
pop
sarl
ljmp
jp
leave
shrl
sub
scas
pusha
mov
es
rcrl
popf
pop
cmpsl
fldt
nop
ret
dec
movsl
popl
sarl
idivb
icebp
inc
fnstenv
leave
sub
jno
out
push
pop
int3
mov
push
mov
scas
rcr
popa
jns
or
data16
xchg
add
addr16
lret
xor
sbb
adc
push
add
inc
mov
andb
mov
lods
sub
mov
movsl
ja
sbb
movsl
cwtl
sbb
sub
and
jecxz
enter
in
in
shrl
fidivl
int
inc
mov
push
dec
xor
loopne
sbb
add
fists
enter
and
dec
mov
xchg
jmp
add
mov
dec
iret
vpsrld
test
jmp
or
rorb
iret
pushf
pop
sub
popf
shrl
jg
insb
stc
jbe
ja
hlt
repnz
push
addr16
int3
xor
lods
and
xor
popf
pusha
movsb
cmp
cli
ret
adc
cmc
sbb
inc
add
sahf
popa
cmp
in
ret
push
mov
outsb
mull
sarb
in
testb
popf
adc
xlat
or
lods
cmc
or
iret
data16
and
test
and
cmpsb
sbb
iret
and
mov
dec
mov
test
push
mov
xchg
mov
dec
mov
leave
inc
jo
repz
push
das
cmp
repz
cli
jo
and
adc
inc
xor
mov
jge
and
and
jne
movsb
or
scas
das
xchg
cwtl
movb
shll
mov
lock
icebp
mov
sbb
lods
fcomps
push
push
je
cmp
mov
movsb
inc
lods
dec
daa
push
adc
gs
mov
jp
das
ja
lds
jnp
jb
xchg
push
pop
inc
xor
addr16
cmp
dec
dec
and
lcall
adc
cmp
or
outsl
stc
push
pop
daa
movsl
daa
xchg
push
jne
cli
mov
aad
dec
sbb
test
movsb
xchg
loope
mov
mov
insl
xchg
and
xchg
jl
pop
aas
or
mov
inc
mov
aad
mov
push
sub
outsb
cmp
pop
mov
mov
fdiv
ficoms
mov
mov
ds
pop
fsts
xchg
sbb
mov
and
sub
cmp
test
rorl
jp
add
jecxz
push
cmp
dec
ljmp
push
dec
inc
imul
ds
inc
fwait
sbb
not
add
adcb
js
out
lods
cltd
mov
ds
jge
push
cmc
inc
and
fcompl
sub
push
icebp
dec
test
scas
outsl
jb
add
or
jle
iret
in
sbb
pop
hlt
orl
das
sbb
fistpl
adc
insb
push
mov
inc
loop
jns
mov
dec
scas
into
pop
das
or
and
jg
adc
or
mov
aam
in
ljmp
jecxz
out
xchg
rclb
pop
test
push
arpl
aad
bound
sub
ja
mov
mov
in
sbb
adc
sti
cltd
jbe
add
pop
in
xchg
or
loopne
lods
mov
and
js
lods
cmpsl
iret
fwait
lcall
cmpsl
cmp
add
cs
shl
jl
insl
js
movsbl
xor
idivb
xchg
inc
push
mov
and
and
jmp
xchg
clc
aam
or
imul
sbb
test
xchg
mov
inc
lock
mull
scas
or
fbstp
xor
pop
in
adc
mov
add
leave
and
clc
pop
leave
xchg
push
jae
fidivrl
in
enter
add
int3
pop
push
add
cmpsb
mov
pushf
and
push
mov
mov
outsb
mov
aad
xor
cmc
aas
movsl
jno
ror
xor
mov
and
push
leave
mul
bound
dec
outsw
and
xchg
push
cld
xchg
outsl
test
outsb
js
lods
pop
dec
cmc
outsb
cmp
inc
xor
imul
mov
cmp
stos
icebp
loope
xchg
sbb
jle
in
xchg
pop
or
loope
push
mov
dec
aad
mov
push
scas
jnp
and
sub
scas
dec
push
adc
adc
inc
insb
ret
fisttpll
jns
dec
movsb
lahf
mov
or
mov
mov
je
cmp
pusha
jnp
dec
in
rorb
jno
or
pop
xor
iret
add
fisubrl
in
in
ja
call
ret
movsl
lods
sub
cld
jae
xchg
xor
in
sbb
jcxz
pop
push
pusha
adc
lcall
cmp
imul
mov
pop
popa
inc
mov
mov
sbb
loop
push
data16
and
add
lods
xor
addr16
imul
or
cld
inc
inc
push
inc
add
loope
std
ds
cmp
and
add
rolb
cmp
je
rcl
mov
mov
pop
movsb
jne
mov
ljmp
jmp
xor
pop
xchg
stc
aad
pop
test
or
xor
sub
cld
insb
xchg
ret
fucom
cmp
xor
push
in
cmpsb
pop
add
pop
or
fisubrs
adc
sbb
cmpsl
shrd
repz
push
mov
mov
sbb
stc
mov
jae
fwait
sub
jno
inc
push
pop
jbe
outsb
sbb
cmpb
pop
rolw
in
cmc
inc
lcall
out
jmp
mov
add
or
iret
scas
mov
dec
adc
call
adc
and
jo
insl
add
and
stos
popf
sbb
lcall
push
cmp
shrl
sbb
mov
xchg
fs
cmp
ss
sti
and
jbe
xchg
dec
mov
call
mov
mov
dec
push
cmp
mov
cmp
adc
fs
xor
xor
leave
imul
into
mov
bound
or
into
fcmovnu
xchg
mov
scas
add
cmp
inc
inc
mov
js
nop
xchg
dec
mov
jbe
add
pushf
rol
mov
cli
jns
mov
dec
out
add
shrb
pop
ret
out
rcrb
pushf
inc
lea
test
xlat
xchg
clc
sbb
sahf
inc
jne
cmp
loop
pop
rolb
movsb
dec
cmc
ret
insb
lds
andl
mov
stos
dec
sbb
imul
mov
add
adc
mov
lret
add
les
jge
cmc
jae
mov
jle
adc
enter
ss
out
setne
xor
mov
fdiv
clc
dec
mov
fisttpll
dec
popa
mov
out
pop
lcall
ss
jbe
sbb
cmpsl
xlat
mov
in
fdiv
les
and
fs
sbb
les
cmpl
cltd
xchg
jo
fiaddl
popa
scas
mov
in
add
leave
xchg
outsl
inc
mov
sti
mov
jp
lea
pop
xor
inc
push
outsl
adc
jbe
jecxz
jno
xor
jl
xchg
sbb
mov
ficoml
daa
jmp
test
sub
mov
mov
popa
std
sub
xchg
mov
pop
and
loopne
inc
push
cmovne
dec
mov
lret
cmp
mov
fs
xchg
jl
mov
cwtl
mov
aaa
xor
fwait
sbb
xchg
and
sub
rcll
xchg
addr16
int
data16
lcall
mov
hlt
lea
inc
jle
push
cld
outsl
scas
dec
and
mov
in
mov
jbe
push
in
inc
mov
cld
push
imul
cmp
fsubr
int
pushf
or
cltd
aaa
mov
add
adc
ja
adc
fcomps
inc
adcl
fisubrl
outsb
fistpl
aad
or
mov
in
loope
add
lcall
adc
dec
mov
shll
fsub
xor
mov
mov
pop
adc
xchg
lahf
aas
sbb
lds
cmp
mov
dec
dec
inc
mov
clc
fsubr
icebp
add
mov
add
in
mov
std
pusha
or
add
fprem
iret
cs
mov
pusha
xor
movsl
jne
ds
negl
test
mov
xchg
mov
hlt
test
and
icebp
dec
aaa
ljmp
ficoms
mov
jns
jp
or
push
pop
fcmovbe
mov
pop
les
aas
inc
add
jbe
mov
jg
or
outsl
ja
pop
movsb
fdivrs
push
push
dec
and
mov
inc
lods
lret
bound
addl
push
jae
xor
jae
addl
test
sbb
lds
push
inc
pop
orl
mov
ljmp
inc
mov
and
loop
cmp
push
or
test
cmpsl
das
inc
inc
test
push
xchg
xchg
jae
inc
mov
push
imul
test
mov
inc
fcomip
mov
nop
jecxz
aaa
mov
js
js
je
icebp
sbb
dec
in
adc
add
leave
hlt
or
or
enter
pop
fwait
mov
xchg
movl
popl
das
arpl
pop
push
test
mov
pop
sti
jne
jge
loop
ja
mov
es
push
push
stos
outsl
fisubrl
jnp
push
jl
xchg
stos
cmpsb
cmc
dec
lret
jne
cmc
or
insl
int
jl
dec
pop
fcmove
mov
sbb
aad
sarb
push
lock
lds
jl
das
ficomps
inc
pop
js
push
out
jle
or
in
dec
sub
fsubs
xchg
mov
aaa
loop
mov
push
push
jmp
pusha
push
mov
je
mov
cmpsb
stc
jle
mov
fcmovnu
stc
rcr
push
repz
jle
or
mov
fnstsw
fsts
xchg
aas
push
pop
adc
scas
sub
sti
cmc
shlb
push
lea
mov
xlat
dec
xchg
xchg
insb
hlt
test
aaa
sbb
push
dec
rol
movsl
aad
lods
and
sbb
movsl
faddl
jmp
add
sub
test
push
pop
dec
pop
test
stc
mov
dec
lods
mov
inc
sub
aad
std
mov
loopne
cli
xor
pop
sarb
out
mov
xchg
inc
movsl
not
xacquire
int3
jns
cwtl
pop
ror
sub
jg,pn
test
xor
cs
fimull
scas
xor
std
or
adc
in
out
cmp
inc
push
inc
cmc
xor
push
adc
outsb
sub
push
and
repz
shll
repnz
movsb
mov
popa
js
je
add
or
or
aam
cmc
mov
outsb
jle
add
scas
hlt
fwait
or
jl
jg
loope
js
jp
add
dec
bound
mov
cmp
jns
stos
sbbl
scas
int3
mov
nop
and
xchg
and
shll
lahf
cs
mov
jmp
push
movsl
int3
stos
inc
pop
scas
sub
pop
in
jb
sub
outsb
sbb
or
test
mov
movl
ret
cmp
or
ljmp
jge
lea
push
ja,pt
push
dec
sub
rcrl
jo
mov
xor
pop
jns
xchg
ja
push
jle
mov
dec
cli
fcmovne
adc
xor
mov
inc
loopne
out
pop
fbld
sub
dec
add
jae
xlat
sub
rolb
jbe
pop
sbb
test
xlat
xor
lods
inc
adc
ret
xor
xor
incl
call
mov
cld
xor
jle
mov
les
inc
dec
xchg
mov
out
shll
jmp
mov
imul
je
mov
jbe
and
incb
push
addl
sbb
js
or
xchg
and
cmp
ficoml
cmp
or
mov
and
stos
repz
sbb
cmpsl
and
scas
test
mov
sub
shll
cmpsl
mov
jae
into
and
ffree
loopne
je
in
adc
push
sub
imul
or
push
inc
movl
aam
and
push
xlat
dec
rcl
cmp
std
jns
jae
and
push
push
or
pop
movsl
push
pop
ss
push
jecxz
das
mov
dec
out
sbbl
mov
add
insl
or
lods
sbbl
aaa
push
pop
call
std
ficompl
push
cmp
add
mov
iret
iret
xorl
pop
add
aas
adc
sub
sbb
mov
jp
aad
or
lock
mov
das
or
adc
mov
or
mov
push
dec
ret
das
lods
sti
mov
lea
rcrb
in
inc
paddw
loopne
sbb
lret
pushf
popf
lea
and
mov
push
js
pop
je
jno
or
ljmp
movsb
cmpsl
rolb
stos
mov
fisttpl
push
add
insb
lds
int3
les
sbb
cmpsb
test
xchg
lods
out
or
xchg
pop
adc
adc
pushf
fcmovu
and
xchg
mov
outsl
jb
inc
arpl
xor
push
mov
and
cli
out
xor
inc
mov
testl
js
les
jne
test
inc
push
rolb
pop
pop
push
mov
jbe
push
push
cmc
mov
inc
jns
mov
sub
rcr
mov
arpl
in
movsl
imul
hlt
jmp
mov
pop
jo
mov
or
push
push
repz
adc
mov
ljmp
inc
gs
and
movsb
ds
cmc
jmp
test
jno
rcll
in
mov
fistpl
imul
jns
add
mov
loope
adc
mov
je
lock
shll
pop
pop
sub
sub
pop
xchg
adc
sbb
xchg
int
mov
or
pop
jmp
ja
or
cltd
cli
inc
mov
ds
pop
inc
das
mov
scas
fdivr
and
xlat
xlat
in
outsl
pop
enter
and
stos
ja
push
fidivs
mov
ja
das
jno
xchg
je
dec
sub
mov
aam
pop
xchg
pop
cmp
sbb
inc
inc
sti
adc
jb
lret
std
js
ljmp
pushf
cwtl
cld
mov
xchg
not
mov
aaa
lods
add
movsb
out
push
mov
out
sub
add
or
testb
jo
mov
pop
mov
inc
sbb
push
fsub
mov
and
test
fsubrl
sub
lds
dec
repnz
or
popa
lock
das
mov
movsb
adc
xor
ds
pop
mov
jne
dec
push
ret
icebp
gs
xchg
pop
mov
stc
mov
push
sub
cmc
test
loop
mov
shl
fs
xchg
cmp
cmpsl
push
sbb
cmp
mov
jo
xor
and
pushf
dec
add
roll
or
mov
jge
test
mov
adc
sub
aam
mov
push
jl
in
and
sub
mov
push
repz
jg
notb
jne
std
pop
sub
shrb
je
in
mov
outsb
insb
adc
js
rcr
lret
fsubrl
dec
xchg
push
insb
adc
aaa
lret
xchg
dec
mov
inc
repnz
scas
lret
mov
fildl
mov
lock
lcall
and
std
js
ja
xor
lahf
mov
repz
push
out
scas
and
inc
pop
outsb
cld
and
leave
fistps
xchg
rorl
sar
or
arpl
adc
mov
in
mov
pop
xchg
add
dec
mov
insl
push
fdivrl
pop
mov
pop
das
cwtl
shll
outsb
dec
mov
shl
fimuls
lods
data16
shlb
in
or
xchg
xorb
mov
call
loop
enter
cmp
js
cmpsl
cmc
pop
push
xor
and
mov
xlat
fisubs
add
push
pop
jle
add
imul
xor
jmp
pop
sub
dec
lods
cmp
cmp
sub
mov
andl
popa
push
xchg
pusha
aaa
or
lret
dec
incb
adc
xchg
add
scas
xchg
sbb
pop
jo
bound
cmc
mov
rclb
inc
jbe
pop
sbb
test
lret
test
adc
push
into
sub
stc
mov
inc
movsb
stos
add
mov
fwait
pop
daa
sub
das
or
xchg
out
bound
leave
aad
mov
cltd
cmc
and
dec
dec
fidivl
dec
sub
es
xor
push
jbe
fwait
stos
pop
dec
dec
sbb
scas
sahf
adc
inc
mov
test
enter
dec
scas
push
add
lcall
sbb
cmpsl
xchg
sub
insb
xchg
outsb
xchg
shr
mov
cmp
adcb
test
sub
mov
mov
inc
push
dec
jno
arpl
dec
imul
inc
cmpsl
js
push
insl
dec
dec
mov
insb
loop
pop
dec
lahf
enter
sarb
je
in
cmp
aad
push
lds
shrb
adc
and
mov
xchg
push
lock
pop
xchg
jno,pt
aaa
cvtdq2ps
dec
loope
sub
sbb
daa
push
mov
fsub
outsl
xchg
dec
or
nop
inc
cmp
lcall
lods
dec
xor
ret
jecxz
test
xchg
xchg
inc
cmpsl
and
cmpsb
mov
adcb
cltd
mov
cmp
or
int
jle
add
mov
jg
sbb
sub
imul
cmpsb
dec
inc
stc
mov
xchg
ss
mov
jbe
sub
add
scas
repnz
lahf
adc
sbb
dec
adc
popf
aam
lods
inc
int
fdiv
sbbl
vmovhpd
stc
xor
inc
mov
mov
cmpsb
in
xchg
xchg
pop
mov
add
pop
cld
pop
icebp
jecxz
mov
sbb
in
dec
xor
cmp
stos
mov
cmp
sbb
jb
out
mov
ret
ret
sub
mov
jl
fidivrs
jmp
enter
aaa
push
or
add
sub
out
jno
fdivs
fwait
mov
fincstp
js
and
std
pop
mov
inc
aas
push
stc
inc
cmp
lds
or
sub
lcall
sub
inc
mov
push
sub
test
fwait
sarb
sub
bound
pop
loope
test
mov
outsb
adc
icebp
cwtl
adc
hlt
mov
mov
cmp
sub
lea
popf
xchg
mov
push
sbb
rol
es
xchg
call
push
dec
clc
test
or
jne
pop
push
movsb
sub
xchg
leave
movsl
fwait
sub
and
je
push
scas
rcrb
nop
das
jecxz
adc
pop
rorb
ret
sub
inc
sub
stc
enter
xchg
fidivrl
add
lea
mov
pop
xlat
push
movsl
jae
xchg
iret
je
pop
lcall
jb
inc
gs
std
xchg
mov
mov
add
das
lret
movsb
jns
inc
cmp
test
movsb
loopne
mov
add
pusha
lock
in
xchg
add
dec
jne
mov
call
aad
lret
mov
repz
insl
xchg
jo
aaa
int
js
xor
lds
loope
mov
jae
pop
or
mov
jae
jl
mov
jno
pop
jo
insl
jno
jno
jo
notl
xchg
loopne
jge
shlb
in
inc
jg
pmaddwd
mov
add
inc
mov
lods
sub
scas
movsb
dec
add
inc
push
aaa
pushf
pop
xlat
aas
pop
out
in
jmp
push
xorb
pop
mov
ss
rcl
repnz
or
andl
scas
ret
loopne
xor
shlb
sub
push
push
out
jmp
mov
xchg
out
xorb
cmp
push
idivb
push
not
and
hlt
xor
jge
sbb
push
sbb
cs
pop
jmp
jle
dec
cmp
mov
push
add
sbb
xlat
xor
std
adc
ds
adc
mov
cwtl
jp
xchg
sbb
insb
xchg
inc
das
lds
imul
push
sbb
icebp
movsb
out
fistps
es
add
call
add
jns
cmpsl
xor
pop
mov
cmp
mov
mov
aaa
ja
gs
push
subl
out
addr16
ds
imul
fs
sbb
les
jl
lret
jns
xchg
aad
inc
shr
test
adcl
mov
mov
int3
xor
fyl2x
sbb
mov
mov
sub
lahf
mov
ljmp
xchg
sub
ljmp
loope
test
pop
jbe
xchg
jle
cvttps2pi
mov
roll
or
addr16
mov
jb
test
jp
bnd
ret
sub
xchg
scas
mov
mov
cmc
fmuls
push
insl
mov
mov
lea
mov
je
mov
mov
repz
out
jecxz
push
and
dec
mov
and
leave
jecxz
sbb
cmpsb
stos
stos
aaa
lock
adc
jne
imul
cmp
xchg
loope
in
sub
or
dec
push
in
aam
shrl
and
lahf
lea
xchg
mov
les
dec
pop
pop
and
pop
hlt
xchg
or
fs
movsb
test
data16
dec
mov
xchg
popf
jb
mov
bound
call
sbb
arpl
sbb
es
push
mov
pop
xlat
cwtl
sti
sahf
jno
insb
mov
movsl
scas
push
sub
out
or
mov
jae
ljmp
inc
push
inc
les
cwtl
mov
push
out
les
jns
push
js
loop
inc
mov
xchg
jno
cmp
imul
aad
mov
push
and
lcall
cmp
dec
shlb
mov
mov
mov
or
sbb
rcrl
and
stc
and
xor
jp
imul
leave
fwait
call
mov
scas
out
iret
sbb
or
shl
mov
mov
ja
add
xor
xor
les
cmp
push
mov
add
imul
sbb
mov
jle
or
add
inc
call
aam
xor
fists
cmp
pop
cmp
pop
push
sbb
mov
mov
js
push
repz
enter
jbe
sub
inc
sbb
pop
lods
pop
nop
xchg
cs
jns
cmp
lahf
xorb
in
push
pop
pop
and
ret
pop
sbb
fdivr
cmp
aaa
mov
adc
pop
jnp
inc
mov
fsubl
out
icebp
mov
les
mov
rcl
mov
xchg
dec
mov
iret
sub
test
mov
dec
and
insb
pushf
lea
jb
fcompl
nop
ljmp
pop
sbb
lods
cwtl
or
pop
lahf
aad
lods
mov
sub
mov
jnp
or
call
ljmp
push
lcall
pop
fisubs
sarb
stos
cmpsb
add
dec
fdivl
add
in
inc
popf
pop
xor
scas
add
decb
mov
imulb
test
out
sbb
or
sbb
mov
movhps
xlat
bound
mov
out
adc
push
int3
fwait
insl
cli
adc
nop
test
inc
scas
ret
sbb
mov
mov
cmc
xchg
push
pop
dec
pusha
inc
stos
xchg
cmpsb
sub
xor
fptan
mov
ljmp
cmp
and
pop
orl
subl
adc
cmp
push
mov
xchg
lock
es
call
push
pushf
pop
loopne
adc
adc
mov
js
and
add
rolb
mov
pop
jp
fsubl
push
xchg
push
sbb
adc
in
cmpsl
mov
xor
stc
xchg
push
mov
pop
mov
mov
mov
xchg
inc
outsl
pushf
loopne
push
repnz
and
pop
dec
repnz
mov
or
xchg
xor
dec
and
jge
adc
outsb
out
arpl
hlt
pop
lods
das
pusha
push
jl
ss
jb
jle
mov
insb
xchg
inc
push
sti
sub
ljmp
mov
icebp
push
js
jmp
and
int
mov
inc
rorl
out
or
dec
out
int3
inc
scas
in
int
mov
in
pop
leave
icebp
in
scas
add
pop
pop
cmp
push
push
imul
and
and
lock
mov
pop
out
xchg
cli
xchg
inc
lds
and
cmpsb
fwait
xchg
dec
insl
rorl
lea
push
xor
xor
cmpsl
es
push
jge
addl
inc
popa
lock
movsb
aas
adc
pop
cmp
lods
push
fmul
in
call
inc
adc
push
mov
in
ljmp
bound
xor
movsl
sbb
push
push
cmpsb
jmp
outsb
cmpsl
sbb
mov
dec
push
inc
pop
pop
outsb
in
mov
push
gs
call
out
or
ss
push
repnz
pusha
psllq
repz
andl
sti
jo
adc
sbb
mov
in
inc
inc
cli
mov
or
jl
lahf
sbb
or
std
test
shr
mov
fldcw
dec
jno
pop
mov
mov
test
dec
mov
cmp
push
jnp
in
xor
faddl
adc
and
push
inc
ret
sbb
clc
jne
add
idiv
clc
cmp
push
inc
push
repz
int3
out
lods
icebp
add
outsb
loop
scas
mov
push
xor
idiv
mov
jg
lcall
rorl
loop
cmpsl
cmp
jg
mov
jns
pusha
stc
gs
xchg
scas
push
jae
xlat
out
mov
lock
int3
inc
inc
sbb
outsl
fsubrp
enter
mov
rorl
xor
xor
ror
pop
dec
cmpsb
sti
out
fsub
fldenv
or
bound
test
add
movsb
mov
inc
add
fldt
pop
gs
insl
mov
add
adc
cld
pop
mov
jl
push
or
stos
mov
mov
mov
and
mov
ja
mov
lds
and
fistpl
ret
mov
leave
mov
sub
xchg
mov
cmp
dec
repnz
loope
add
push
pop
cmpsl
sub
call
call
xchg
sarl
cmc
add
cld
sub
ret
jmp
cmp
dec
sbb
js
enter
inc
or
hlt
sub
insb
mov
sbb
clc
cmp
cmp
nop
xchg
lret
mov
sbb
ret
je
mov
mov
mov
jp
push
and
jmp
outsl
mov
xchg
aas
mov
jne
fnsave
lods
mov
sub
sub
fsubs
mov
xchg
cmp
out
sbb
adc
out
movsb
shrl
sbb
inc
sbb
stos
sbb
push
push
stc
xlat
vcvttss2si
push
lret
cmp
add
les
inc
pop
outsl
or
push
popa
ds
sahf
pop
mov
xchg
sbbl
cmp
dec
xor
rclb
dec
adc
sbb
push
mov
push
call
push
hlt
fildl
sbb
or
int3
movsb
sub
mov
ret
add
push
cld
aam
mov
push
pushf
jno
xor
pop
lahf
movl
add
mov
lea
jmp
inc
lds
pop
nop
sbb
cmp
das
push
test
jp
nop
sub
xor
jmp
cmp
mov
sub
xchg
inc
out
jns
jg
mov
xchg
and
cld
push
mov
xchg
in
push
dec
gs
jmp
cmpsl
enter
xchg
inc
xchg
loopne
mov
adcl
push
cmp
push
dec
std
mov
inc
push
jge
sbb
inc
lret
inc
mov
sarb
gs
cli
fldenv
or
xor
mov
push
clc
xchg
dec
mov
aad
test
inc
in
adc
push
sbb
popl
jle
mulb
jg
das
jecxz
push
inc
xor
cmp
repnz
xor
aas
lret
push
sbb
pop
insl
mov
xor
bound
cmp
dec
daa
jnp
or
cmp
test
and
lret
xchg
subb
and
dec
scas
das
icebp
or
inc
add
arpl
leave
cs
imul
xor
dec
fmuls
in
jne
or
sbb
idivl
xchg
mov
sub
shl
mov
das
jns
movsb
sbbb
je
add
mov
cmp
push
cmovno
or
jae
test
inc
adc
bound
shl
xor
pusha
dec
adcb
inc
mov
andl
adcl
iret
insb
iret
push
test
scas
arpl
cmp
or
jbe
clc
adc
mov
stos
in
push
sbb
mov
ret
pop
lret
int
add
shll
bound
les
or
adc
rclb
pop
sub
mov
add
lock
sbb
lahf
xor
xor
pop
xchg
daa
xchg
pop
loop
pop
xor
inc
jp
mov
pusha
xchg
jecxz
aaa
mov
mov
or
aam
jle
cmp
jecxz
dec
cli
ds
lds
and
je
frstor
pop
test
shr
test
xlat
shll
inc
dec
enter
push
pop
inc
or
adc
mov
or
mov
xchg
mov
iret
or
mov
inc
int
lods
and
adc
cmpb
and
lea
jle
mov
inc
fs
jbe
dec
jg
daa
sbbb
cmp
idivb
pop
jne
rcrb
and
xchg
ret
into
adc
ret
jae
shrl
push
push
adc
xor
adc
add
daa
insl
les
inc
xor
je
and
xchg
adc
data16
es
iret
ss
stos
jns
mov
into
repz
lods
or
mov
push
ja
push
addr16
in
or
imul
inc
scas
jae
fucomi
dec
outsl
cwtl
mov
inc
aam
mov
test
cwtl
clc
lret
or
mov
push
push
movntps
aad
fsts
cmpsl
add
mov
cmpsl
jo
sub
pop
ret
or
push
mov
pushf
outsl
push
sub
inc
gs
rcrb
push
xor
push
into
xchg
push
pushf
and
lret
mov
jno
fwait
mov
mov
das
jp
mov
mov
mov
fs
movsb
divb
xor
xor
push
popa
fildl
iret
hlt
sbb
out
add
and
add
pop
xchg
mov
dec
sbb
xchg
mov
sub
cmp
insl
sbb
into
leave
adc
dec
test
xor
pusha
rcrl
jmp
xchg
xor
add
push
insl
pop
test
mov
mov
fdiv
jecxz
xorl
daa
mov
mov
int3
mov
xchg
cmpsl
add
mov
lcallw
sub
aaa
popf
cs
mov
call
xchg
fsubs
cltd
sub
jmp
add
addr16
add
ss
fistl
jle
sub
add
add
es
cmp
mov
mov
jle
rorl
lods
push
insb
sub
jle
arpl
mov
icebp
bnd
or
iret
jge
jnp
aad
mov
ja
fs
push
popa
std
mov
and
loop
lret
mov
adc
jnp
inc
sbb
xchg
lcall
out
imul
fldl
jge
cmc
mov
jo
data16
into
sbb
popf
or
pop
test
sub
scas
les
test
shrl
pop
daa
xor
pop
lret
push
jnp
loop
sub
int
inc
or
adcb
xchg
es
pop
insl
inc
jecxz
mov
sbb
push
sbb
jo
icebp
or
jge
lods
mov
sbbl
sbb
jecxz
xor
sub
inc
mov
or
xchg
ljmp
add
mov
je
cld
lock
push
push
jbe
push
xor
andl
incb
stc
add
pop
inc
mov
sbb
xchg
jecxz
sub
jnp
add
jnp
aas
or
jae
mov
xor
add
mov
lods
pop
mull
push
mov
lret
push
cmpsb
xchg
inc
mov
pop
in
in
out
mov
addr16
out
push
dec
push
shrl
test
mov
fidivrs
pusha
adc
sbb
xchg
gs
aad
mov
inc
lods
rcll
dec
fnstenv
jnp
hlt
pop
inc
aad
jp
sub
cmp
cmpl
or
sbb
rcl
mov
data16
jle
add
and
dec
lahf
addl
shll
hlt
pop
imul
push
gs
xchg
ds
movsb
mov
outsb
movsb
fisttpll
call
daa
mov
test
sub
push
mov
icebp
std
or
xchg
jns
mov
and
xor
gs
push
mov
ror
cmp
gs
leave
jle
jle
adc
push
cmpsl
jnp
pop
cli
sbb
out
lock
lcall
sbb
nop
lds
out
scas
aas
pop
enter
add
scas
cmc
out
ret
bound
inc
xor
shll
sbb
aas
ja
sub
xchg
mov
call
push
xlat
cmp
push
add
push
outsb
fildll
mov
mov
inc
lahf
pop
insb
adc
enter
dec
jmp
pop
enter
sub
shrl
or
int3
jp
cmpsl
iret
or
lea
cmp
in
xchg
popa
and
repz
lods
and
enter
call
dec
leave
addr16
pop
or
add
jae
test
xor
out
cmp
and
dec
out
es
and
xlat
sbb
mov
inc
mov
cmpsl
in
pusha
ret
or
insb
imul
or
in
mov
aam
stc
scas
jb
add
out
inc
mov
push
and
ret
mov
add
cli
mov
cmp
jbe
je
adc
fisubrl
sahf
sub
insb
test
jb
lock
mov
xchg
jle
add
pushl
xchg
bound
in
fdivrs
sub
xorl
jp
sti
paddsb
mov
aad
cmp
mov
nop
sub
lea
mov
popa
jne
into
scas
xchg
popl
mov
mov
in
dec
ljmp
popf
stos
or
jp
mov
sub
fsubl
fbld
push
mov
mov
dec
int
xchg
mov
nop
sbb
push
or
or
out
in
rclb
xor
sub
mov
xor
cmc
inc
or
dec
xor
xchg
mov
inc
inc
fistpll
xor
xchg
in
leave
out
xchg
xor
pop
enter
jecxz
mov
dec
out
fnstenv
push
adc
out
movsb
mov
jbe
jmp
sub
imul
cmp
sar
xchg
lret
fisubrl
shlb
push
subb
sahf
push
hlt
sub
mov
cmp
mov
nop
in
pop
ret
push
xlat
mov
scas
adc
mov
mov
das
mov
aad
add
loop
mov
lea
gs
sub
or
xchg
imull
mov
ss
pop
push
mov
test
dec
xchg
mulb
popf
cmpsl
pop
adc
push
jmp
movsl
add
add
es
jge
clc
cmc
push
lods
cmc
or
movsb
aas
lods
lahf
mov
cmp
and
int3
add
aas
push
js
xchg
cwtl
push
mov
int3
xor
pop
out
rorb
clc
inc
and
ret
pushf
fildll
fwait
mov
sbb
sbb
test
jecxz
dec
popa
push
popa
insb
fistps
fmul
js
or
and
push
mov
out
add
jne
pop
xor
subb
cwtl
punpcklbw
pop
ljmp
shll
shrb
sbb
addr16
pop
pop
sbb
fwait
inc
popa
xchg
push
sub
cmc
mov
add
cwtl
movsl
jnp
and
stos
mov
inc
sub
lods
dec
and
adc
xchg
mov
sbb
or
sbb
pusha
stos
sarl
push
lods
cmp
cltd
cmp
xor
sbb
mov
cli
xchg
leave
xchg
sbb
mov
es
push
inc
sbb
dec
push
leave
pop
shr
mov
sub
mov
mov
out
fisubrl
add
mulb
cli
jmp
cmp
sbb
xor
imul
xchg
cld
mov
movsl
adc
inc
add
pop
outsb
lods
dec
insb
pusha
fmull
sti
cmpsb
imul
xor
test
xchg
js
lods
addl
scas
stc
jns
in
pop
dec
pop
rcrb
pop
stc
leave
cmpsb
xchg
push
xor
je
xchg
push
inc
fdivrs
mov
mov
ds
jae
pop
add
fnstcw
inc
push
pop
sbb
cmp
cli
pop
test
inc
iret
sub
sti
in
aam
lods
push
cmpsb
dec
ret
loope
jo
or
xlat
mov
adc
test
imul
sub
adcl
cmp
mov
fsubp
stos
xor
test
or
add
scas
notl
jns
cmpsb
xor
into
pop
mov
push
mov
shr
xor
add
test
inc
int3
ret
jl
shll
add
mov
push
adc
dec
xchg
inc
test
and
mov
cmp
test
push
add
jno
or
es
push
push
in
mov
stos
lahf
cmpsl
lods
outsl
bsf
mov
pop
fdivrp
adc
xchg
stos
cs
cmp
mov
mov
mov
jg
xor
adc
mov
daa
inc
cmp
pop
xor
scas
push
lock
adcb
mov
mov
or
push
dec
ret
out
inc
pop
hlt
out
pop
add
mov
sti
orl
jb
mov
fs
ffree
pop
add
push
cmp
popf
and
or
mov
jns
xchg
jne
mov
jmp
jge
inc
test
repnz
jne
jl
int3
mov
jge
xchg
inc
mov
add
cmpl
adc
cmp
je
mov
movsl
xor
cmp
xor
sub
jmp
out
cmp
inc
insb
popf
aam
stos
and
adc
lret
iret
jle
or
pop
loope
xchg
outsl
xor
lahf
ss
mov
jg
inc
mov
lret
fisubrl
push
xchg
shll
fcomp
mov
add
mov
push
cmp
aad
ljmp
adc
pop
sub
inc
fucom
dec
sbb
or
lcall
or
inc
cmp
xchg
insl
rorb
repnz
lret
dec
cmp
jge
mov
push
xchg
mul
sub
lret
sbb
pushf
cmp
sub
ss
es
xchg
stos
pop
and
je
mov
mov
cmp
pushf
or
mov
cli
xchg
mov
sub
or
into
nop
lahf
fcompl
pop
jl
pop
xchg
push
js
aam
mov
push
lock
insl
hlt
or
dec
stos
ss
adcl
ret
scas
dec
or
add
add
out
add
mov
cmpsl
lcall
lret
arpl
jb
loop
or
jge
pop
mov
cmp
movsl
adc
in
aam
out
mov
adcl
mov
sub
dec
pop
inc
in
or
xchg
pop
lods
popa
add
scas
sahf
aaa
jl
ficoml
daa
lahf
les
divl
and
mov
mov
addr16
lods
xor
fucomi
repz
leave
jl
cs
pop
push
and
sarl
gs
adc
pop
std
out
lods
jp
pushf
in
arpl
lret
adc
mov
bound
xchg
sbb
stos
fimuls
xchg
mov
js
lock
shrb
mov
cmc
imul
push
jne
sbb
dec
adc
xchg
pushf
negb
mov
pop
or
mov
xchg
bound
push
popa
pushf
lret
push
sbb
imul
push
mov
mov
mov
aam
icebp
inc
push
pop
aam
jp
lret
pop
pop
mov
pop
sbb
fiaddl
adc
jl
cmpsb
and
ljmp
inc
jmp
and
mov
int3
jg
mov
lahf
rol
les
pop
fstl
add
test
and
mov
js
test
mov
loope
adc
inc
or
mov
scas
into
dec
movsl
and
fadds
cs
mov
jae
xor
jb
ror
xchg
add
jno
loop
jbe
mov
xor
xchg
out
testb
xchg
arpl
out
pusha
pop
ljmp
test
jbe
mov
and
cmp
rorb
mov
outsl
cmova
jne
test
inc
call
sub
jno
imul
pop
adc
sti
xchg
pusha
out
cmp
vpunpcklqdq
dec
sub
test
cmpsb
or
sub
dec
loope
mov
popf
pop
xchg
xchg
js
mov
mov
repz
cmp
cmp
xor
jp
call
xlat
pop
std
add
mov
iret
shrl
movsl
cmp
sub
xchg
jb
ljmp
cmp
add
test
out
cmp
rorl
call
jl
scas
mov
ret
push
sbb
std
fucomi
jmp
add
adc
cmp
jne
mov
nop
mov
sub
add
fmul
fnstcw
mov
add
add
stos
ja
repz
xchg
fisttpl
scas
jle
and
sahf
inc
lret
rclb
cmp
cmpsl
xor
stos
out
mov
cmp
push
cmpl
aam
mov
aas
push
test
mov
leave
out
rolb
jle
jmp
das
in
mov
add
decb
in
dec
rcr
imul
xchg
jl
adc
sti
sub
sub
mov
pop
xor
testl
xchg
data16
in
jnp
rcr
cmpsb
rorl
inc
mov
andb
add
sbb
mov
mov
sub
xchg
test
ljmp
cwtl
fisttpl
push
movsl
jnp
inc
repnz
ret
jns
jno
mov
add
sub
scas
nop
xor
loopne
mov
pop
xchg
hlt
mov
or
dec
rcr
jmp
rorl
mov
arpl
and
adc
popf
cmp
scas
mov
pop
mov
shr
mov
sub
fstl
das
dec
push
lods
cmp
dec
fcoms
mov
or
sbb
mov
and
sbb
mov
out
popl
dec
xchg
xor
arpl
and
mov
push
mov
jno
aas
adc
daa
jno
int3
out
cltd
xchg
mov
aaa
mov
pusha
daa
lahf
fcomps
adc
cmp
xor
adc
mov
jmp
sub
or
inc
inc
in
insb
jge
mov
mov
call
mov
in
push
ljmp
jle
cmp
sub
mov
sub
sbb
ljmp
arpl
jbe
mov
in
dec
xchg
jbe
enter
add
lods
movsb
inc
aas
inc
imul
jns
push
jg
cmp
into
mov
jne
call
jns
stos
jae
jns
addr16
adc
in
loopne
pop
sbb
cmp
leave
adc
push
lods
test
and
or
jecxz
jns
mov
mov
adc
xchg
incb
in
cmp
pop
sub
shlb
mov
mov
xor
ja
add
mov
push
call
in
test
add
pushf
pop
xlat
daa
cmpsl
fisubl
aad
aas
scas
xchg
addr16
mov
jmp
xor
jecxz
inc
cmpsb
pop
cmpsb
inc
jno
xor
sarl
and
push
scas
and
clc
call
gs
lods
push
pop
std
fadds
es
push
sbb
sub
adc
divb
add
push
mov
ret
mov
call
adc
inc
add
mov
adcb
push
adc
rcrl
cmp
stos
mov
sub
push
pop
dec
inc
lock
xcrypt-ctr
cmpsl
sahf
leave
icebp
mov
lcall
xchg
icebp
jge
or
lahf
jno
mov
lahf
orl
lock
insb
or
push
mov
and
movsb
push
aaa
mov
xor
ljmp
inc
jle
dec
ret
hlt
scas
lret
aas
jne
sub
jmp
ss
out
pop
ss
mov
ljmp
andl
sbb
iret
rorl
dec
and
jmp
jp
lds
cli
lea
add
enter
clc
iret
push
jge
sti
pusha
or
cli
mov
roll
push
pop
testb
lods
xchg
outsb
jp
stc
xlat
add
daa
pop
sbb
push
sbbl
stc
pop
sti
xorl
dec
push
adc
je
movsb
xor
imul
sti
jmp
roll
xor
gs
mov
lock
imul
into
jg
mov
xor
mov
mov
adc
mov
inc
ret
and
adcb
jle
inc
test
mov
ret
mov
push
leave
jb
pop
mov
loopne
loopne
pop
sbb
jb
test
dec
push
ljmp
or
imul
push
and
sahf
jg
xor
in
daa
outsl
push
lret
push
pop
mov
cmp
inc
in
mov
or
cs
mov
push
mov
ljmp
std
movsb
jnp
or
das
fsubl
mov
in
insl
jecxz
and
xchg
mov
or
add
retw
adc
add
imul
lods
sbbb
push
xor
dec
stos
xchg
or
or
sub
xchg
fwait
add
stos
insl
mov
stos
out
inc
ss
call
aam
cltd
jecxz
jecxz
imul
out
mov
jle
xor
xor
jne
in
scas
test
lds
loopne
and
pop
aaa
sbb
xchg
mov
add
cmc
fcoml
xchg
test
jbe
icebp
ss
cmp
push
adc
sub
dec
imul
jecxz
cld
bound
mov
mov
addl
fadds
jmp
leave
sti
mov
dec
push
fistpl
insb
leave
pop
lock
adc
imul
push
ja
test
mov
add
jp
sub
clc
jns
adc
cmpsl
xchg
ljmp
in
out
adc
out
test
std
cmpsl
stos
ljmp
push
inc
pop
dec
cld
sub
mov
repnz
lcall
outsl
adc
aaa
sbb
inc
xor
push
gs
hlt
mov
in
mov
xor
mov
jmp
mov
pop
shl
and
dec
aas
mov
and
sub
pop
idivb
mov
popf
gs
xlat
add
push
fs
hlt
cmp
mov
outsb
lea
test
push
test
mov
rcll
and
sub
es
push
leavew
stc
push
enter
jg
xor
stc
dec
xchg
mov
or
in
std
addl
cltd
push
fcoms
push
push
bound
xchg
mov
cmpsb
sbb
fstpl
jbe
ljmp
mov
sbb
sub
mov
fwait
jns
in
in
scas
sbb
gs
test
lea
lcall
pop
xor
mov
lahf
ja
ret
adc
mov
sarb
pop
add
insb
push
test
pop
sbb
inc
and
or
aas
sbb
dec
xchg
imul
xchg
ds
sbb
imull
sbb
push
lock
xor
fprem1
imul
pusha
inc
xor
and
fidivrs
mov
mov
lods
scas
and
or
inc
jbe
pop
ret
decl
leave
mov
jb
add
jns
push
ret
push
pop
psrlw
into
xchg
and
mov
and
jo
and
dec
gs
andb
into
cmp
stos
mov
mov
pushf
dec
into
in
lock
dec
test
mov
inc
fbstp
and
push
in
xorl
bnd
test
mov
jle
pop
pop
pushf
shr
xchg
mov
stc
in
ret
jns
loopne
xchg
push
or
or
adc
pop
xchg
lahf
test
mov
bswap
in
cld
sbb
outsl
lret
shr
cld
aad
cmp
jmp
test
enter
mov
jbe
xor
cmp
push
jne
add
push
adc
cmpsl
mov
movsb
arpl
mov
pop
shll
xor
movsl
cmp
mov
mov
fsub
nop
push
out
mov
frstor
xchg
jp
ja
push
sbbb
andb
inc
aad
call
shll
mov
sbbb
movsb
push
mov
fs
cmp
dec
jg
out
xchg
sbb
fsubs
out
xor
push
pop
loopne
into
sahf
std
inc
push
mov
in
dec
icebp
xlat
sbb
outsl
mov
rcll
imul
fs
sub
ds
ss
aam
adc
mov
sub
outsb
ljmp
icebp
and
dec
dec
gs
xchg
int
cmpsl
cmp
mov
pop
arpl
movsl
xchg
rclb
mov
mov
scas
sbb
bound
jo
jnp
push
loopne
lahf
mov
add
fimuls
pop
mov
cmp
dec
loope
cmpsb
fdivs
inc
inc
sub
mov
xor
mov
add
push
mov
leave
dec
popf
sub
lea
mov
sub
test
mov
mov
adc
cli
ljmp
push
sbb
jmp
rcll
mov
mov
imul
push
pop
add
in
lcall
int3
mov
cmp
in
das
movsb
mov
shrb
movsl
sub
lret
test
jae
ljmp
lea
mov
sub
fsubrs
leave
out
inc
in
mov
push
xor
ror
mov
mov
mov
mov
popf
mov
clc
ficoms
adc
imul
repz
push
pop
cmp
int3
aas
popa
cld
es
nop
adcb
mov
lret
daa
push
jae
ret
mov
clc
and
or
xorl
and
push
inc
cwtl
pop
adc
pop
inc
inc
adc
addb
mov
sub
jl
add
jecxz
hlt
sbb
cmp
jmp
pop
jmp
int3
hlt
out
push
mov
dec
and
mov
cli
aas
pop
or
or
push
push
push
in
push
js
cmpsb
pop
cmp
lods
jp
testb
xchg
pop
cld
pop
das
push
or
in
cmpsl
cwtl
pop
or
jp
cmpsb
hlt
mov
jo
lea
ret
add
dec
ret
mov
dec
std
inc
push
adc
or
cmpsl
jl
jp
popl
mov
enter
add
xchg
inc
sbb
mov
push
push
xchg
push
mov
cld
lock
cmp
sti
pop
xor
roll
adcl
pop
into
out
aad
adc
sub
pop
into
xchg
js
cmp
cmp
dec
ret
iret
and
adc
sahf
jmp
sahf
jne
out
jb
and
mov
jo
mov
sub
sub
aas
shrb
pop
fsubs
insl
fisubs
push
sbb
icebp
xor
iret
sub
pop
pusha
pop
cs
aad
gs
cmp
xor
or
adc
lods
mov
jle
insl
cmp
pop
xchg
rol
dec
add
mov
shll
push
add
mov
xor
movsl
jp
mov
popa
jmp
dec
inc
hlt
sbb
insb
add
push
popf
pushf
mov
je
jno
push
adc
or
outsl
in
mov
push
out
cmp
fldcw
xchg
adc
and
leave
xchg
pop
test
add
pusha
adcb
mov
jg
and
cld
and
hlt
or
mov
bound
test
popa
ds
aad
lcall
sbb
xchg
cli
pop
aam
lret
jne
and
out
inc
mov
push
fbstp
jl
lret
sbb
add
dec
bound
cli
push
sbb
mov
cmp
mov
movsb
push
and
ljmp
xchg
xchg
lahf
sub
and
xchg
and
fisubrs
or
imul
aas
push
popa
pop
mov
lods
and
in
xchg
jns
imul
jnp
pushf
add
je
dec
movsl
in
sbb
mov
pusha
push
ja
into
lret
ljmp
popf
sub
shrb
cmp
xchg
dec
insl
sbb
and
pop
sahf
sahf
int3
sub
popf
arpl
pushf
das
and
int
pop
cwtl
ret
gs
leave
outsb
mov
fildll
incb
in
fwait
pop
sahf
daa
adc
mov
sbb
out
jnp
jnp
add
dec
dec
push
fisttps
rolb
push
stos
jbe
push
inc
frstor
adc
and
sub
js
jns
nop
jae
cmp
mov
fcoms
addr16
mov
mov
arpl
xchg
aaa
loopne
std
inc
jmp
test
lds
inc
adc
cmp
imull
sbb
imul
add
mov
cmpsl
aam
pop
add
cmp
xor
leave
mov
fwait
inc
cld
pop
dec
xor
mov
or
pushf
mov
pop
mov
std
ret
aaa
mov
ljmp
jecxz
fldenv
sbb
addr16
and
push
test
jg
cmp
in
out
push
add
arpl
jnp
loope
and
mov
clc
lret
das
dec
dec
cmc
xor
addb
test
mov
add
test
push
in
jp
loop
fisubs
mov
imul
sub
dec
xchg
mov
fistps
int3
jbe
push
or
xchg
loop
pop
mov
push
xchg
movsl
push
popf
scas
out
out
loop
xchg
lcall
scas
popf
aas
jge
fstp
xlat
shr
fimull
fs
aas
push
fstps
cld
into
push
mov
les
add
nop
hlt
ja
mov
out
in
push
dec
mov
cmp
cmpsb
bswap
pop
add
or
loop
stos
xor
ret
ss
sub
jle
sub
mov
xchg
sub
shrb
mov
mov
push
xor
imul
cmp
jo
repnz
aas
sbb
mov
mov
in
add
movsl
mov
jns
outsl
and
mov
je
mov
adc
mov
xchg
adc
fldl
mov
pop
test
popa
popf
movsb
rcrb
bswap
test
enter
test
sti
jge
jecxz
popf
xchg
shll
pop
pop
mov
adc
cli
xchg
and
cltd
out
sub
movsb
rcrb
adc
pop
fwait
sbb
jmp
dec
fldcw
jns
daa
movsb
jae
mov
subl
int3
dec
sbb
aad
mov
gs
imul
imul
dec
das
pop
mov
mov
in
xchg
rol
stos
mov
pop
lods
das
repnz
jge
inc
and
test
xchg
fistl
call
loope
jbe
add
insl
stc
dec
pusha
xchg
sbb
push
mov
and
sbb
aad
hlt
fisttpl
aaa
inc
mov
push
mov
sbb
lods
dec
inc
mov
or
xor
imul
ja
sbbl
mov
loopne
and
mov
cs
fsubrl
ret
xorl
xor
push
adc
cmp
xlat
mov
xchg
pop
stos
xor
test
repnz
sahf
pop
shll
je
notl
or
das
mov
cmpsl
lods
push
dec
cmp
cmp
dec
mov
adc
jp
les
daa
test
nop
test
in
add
and
loope
push
dec
inc
and
outsb
aaa
and
sbb
out
xchg
lods
push
fs
xor
dec
shll
add
cmp
jnp
xor
jp
xlat
ds
dec
test
and
and
adc
icebp
scas
aam
out
sub
sbbb
push
out
lcall
pusha
lds
push
push
push
pop
mov
iret
dec
xchg
mov
dec
fwait
negl
shlb
mov
cwtl
movsb
scas
mov
cwtl
jg
push
addl
shlb
roll
stos
jno
pushf
mov
mov
pop
cmp
xchg
mov
lcall
shlb
dec
jno
scas
enter
incl
lods
jns
insl
imul
ficoml
mov
pop
das
mov
cli
inc
shl
cmc
gs
or
int
inc
mov
inc
and
shrb
mov
inc
cmp
and
jbe
jo
les
push
add
cmp
movsb
stc
fildl
ja
ja
add
cmp
sub
test
inc
je
stos
xchg
lcall
call
sbb
adc
sahf
das
dec
add
and
lahf
mov
ret
mov
jecxz
stos
test
or
xlat
add
daa
and
lret
xor
fdecstp
das
stos
mov
movsl
nop
jne
mov
mov
int3
mov
fnstcw
sub
dec
xchg
dec
cpuid
adc
pop
xchg
mov
or
stos
iret
inc
mulb
sub
xlat
aas
sahf
pop
cmp
and
mov
imul
sbb
adc
bound
js
adc
ret
aad
pop
or
insb
push
jns
push
lcall
out
pop
or
mov
mov
js
push
jp
and
pop
inc
jno
cmp
test
sub
mov
xor
xchg
inc
add
cmp
pop
jns
dec
dec
in
dec
hlt
mov
mov
xorb
jbe
jne
xchg
jmp
mov
test
inc
xor
dec
push
call
lock
push
outsl
xor
jns
jecxz
lods
fs
inc
dec
inc
pop
push
add
lock
dec
sub
xchg
cmp
xchg
lods
rorb
aam
inc
xchg
push
inc
arpl
pop
xor
lods
rcr
sbb
clc
sahf
cmp
repnz
mov
mov
xor
jb
loope
je
inc
das
add
jno
sbb
movsl
leave
testl
scas
cmc
aad
push
aaa
sbb
or
mov
cs
adc
insl
jge
add
fsts
loopne
fisubrl
in
jo
movsl
mov
xor
test
mov
aam
mov
push
aam
negl
pop
push
adc
dec
jne
in
push
movsl
movsl
lock
xchg
int3
inc
and
orl
adc
xlat
enter
mov
loopne
pop
pop
and
xchg
mov
mov
xlat
fimuls
push
repnz
sub
fldt
sbb
sub
pop
mov
addb
lock
or
shll
dec
pop
push
cmp
xor
add
dec
mov
and
mov
call
xor
rol
sub
push
hlt
popf
add
ret
xor
dec
xchg
mov
cmpsb
mov
sub
aas
jb
js
or
addr16
stc
insl
es
and
and
pop
sti
push
clc
inc
jmp
int3
xor
push
sub
ja
sub
sbb
and
inc
pop
call
int
adc
outsb
xor
pop
push
out
fldcw
jno
jecxz
mov
push
mov
rorl
in
out
push
inc
jno
sbb
push
gs
push
lahf
xchg
loopne
mov
insb
pop
stos
stos
jmp
and
mov
mov
iret
test
sub
mov
cmpsl
js
test
cli
push
imul
mov
int3
inc
notl
inc
or
popf
xlat
sbb
mov
ljmp
xchg
adc
loope
mov
jno
lods
sub
movsb
sub
iret
scas
test
cwtl
push
fwait
pop
and
nop
cmp
cmpsl
js
inc
dec
sbb
test
das
inc
mov
adc
and
push
sub
xchg
adc
mov
je
jl
sub
adc
mov
xor
add
pop
ja
dec
inc
xor
inc
orl
mov
ljmp
mov
pop
sbb
push
pop
aad
sbb
pop
sub
mov
dec
sub
ja
dec
inc
jge
addl
pop
out
sbb
or
sbb
pop
xchg
jo
mov
cwtl
xor
ljmp
mov
fistl
mov
jecxz
or
mov
pop
lahf
fimull
ds
dec
jmp
stc
into
mov
pop
es
pop
daa
daa
jle
mov
cmc
hlt
dec
pop
rsm
insb
dec
test
test
mov
in
loope
pop
mov
mov
pop
ja
in
pop
pop
inc
lea
nop
sub
testb
push
les
ret
mov
and
pushf
imulb
vdivpd
jle
out
pop
jae
pop
sub
movsl
mov
xchg
and
jle
mov
stos
cmp
cli
or
mov
nop
dec
xchg
push
dec
stos
pop
dec
mov
lods
popa
xchg
mov
into
or
test
in
inc
or
dec
cltd
stc
popa
xchg
aad
arpl
mov
dec
sbb
add
pop
mov
test
mov
fnsave
xor
sub
jne
in
xor
dec
sahf
lock
shl
push
sbb
xchg
test
push
adc
iret
fstps
jbe
fnstsw
jle
repz
jle
sub
repnz
loop
add
lcall
mov
int3
mov
mov
pop
or
mov
out
jno
inc
mov
mov
mov
lcall
lods
mov
into
adc
sbb
dec
stc
push
push
and
lahf
mov
push
pop
inc
sub
mov
sub
jno
cmpsb
pop
jmp
mov
jp
push
push
mov
fists
inc
outsl
xor
xor
mov
test
jns
mulb
xor
mov
jbe
push
mul
out
movsl
dec
inc
lods
mov
cmpsb
mov
cwtl
sarb
pop
in
gs
push
aas
jp
push
lds
pusha
jle
mov
mov
dec
or
mov
push
test
stos
sti
dec
cmp
dec
pusha
or
divb
pop
sbb
mov
fisubs
lcall
gs
mov
cmp
adc
and
mov
mov
icebp
add
insl
mov
mov
shlb
popa
jp
and
inc
out
out
sbb
push
mov
xchg
shrb
sub
out
inc
jmp
jl
outsb
mov
inc
sbb
rcll
jo
popa
leave
mov
scas
outsl
mov
je
xchg
addr16
movsl
jb
inc
nop
jecxz
imul
les
sbb
jns
movsb
fnstsw
mov
insb
cmc
or
sub
mov
fimull
outsb
in
jmp
rcl
lods
jne
test
inc
mov
imul
lods
mov
cmp
idivl
pop
mulb
dec
xchg
aam
fidivl
pop
xchg
and
inc
insl
pop
pop
or
inc
shl
mov
jnp
sbb
fldenv
mov
popa
les
adc
roll
mov
cmp
mov
ja
xchg
or
bound
test
cld
pusha
hlt
mov
orb
jge
push
sbb
inc
pop
pop
ret
xor
jecxz
outsb
inc
push
sbb
mov
pop
adc
dec
and
dec
jnp
push
and
shl
fwait
sub
push
cwtl
mov
xchg
xlat
es
jmp
fcmove
jbe
arpl
dec
sub
daa
inc
lcall
jp
dec
sub
jmp
mov
hlt
addr16
stos
xchg
push
mov
lods
inc
cmpsb
stos
inc
sbb
clc
fists
arpl
jbe
test
fiadds
rcl
push
pop
pop
adc
fistps
cld
xchg
or
cmc
jge
loop
xchg
xchg
fisubrs
cmp
in
sub
jg
jno
and
aaa
add
iret
xor
fdivrl
mov
imul
popf
shlb
ret
lock
cs
push
and
std
lods
fnstsw
sbb
std
push
adc
scas
cmp
or
or
cmp
push
ds
push
sbb
xchg
stos
inc
sbb
test
icebp
shlb
iret
aad
aad
and
dec
repnz
cltd
mov
xor
rcrb
inc
fidivrl
inc
loop
xchg
das
xchg
out
addr16
jo
push
pop
in
push
in
sbb
enter
and
enter
add
cmpsb
mov
mov
pop
rclb
sub
hlt
inc
cmp
jno
mov
lock
dec
cmpb
dec
pushw
mov
xchg
adc
sbb
jae
pop
push
jns
fwait
cltd
jno
shll
fbld
jmp
hlt
out
mov
addr16
mov
push
cmc
inc
push
xchg
ret
repz
adc
xchg
mov
push
inc
loopne
inc
mov
repz
jecxz
xor
test
cmp
xchg
ret
mov
cwtl
sub
sbb
pop
add
mov
and
sub
add
lds
pop
pop
jo
test
cmpsb
in
or
inc
ljmp
dec
mov
out
std
inc
ret
add
jp
jno
cmc
sbb
mov
or
es
jb
orb
cli
and
fildll
mov
popf
in
mov
cmp
push
insl
mov
mov
insl
inc
jle
push
pop
mov
xchg
std
push
inc
pop
clc
mov
cmpsl
cmp
adc
jnp
stos
jg
sti
sub
aaa
mov
mov
and
push
mov
or
sub
scas
mov
mov
mov
add
push
mov
sub
mov
mov
sti
or
repz
or
out
xchg
pop
popf
push
xchg
lock
ret
loop
into
es
aam
sub
lds
push
test
pop
push
pop
pop
cld
fwait
mov
ret
mov
into
fsubl
cmp
pop
add
xor
adc
and
sti
push
mov
jle
sbb
imul
addl
mov
loope
loop
xchg
je
icebp
pop
scas
add
sbb
mov
mov
cmp
sar
test
cmc
cltd
loopne
repz
jmp
scas
mov
inc
pop
ds
pop
or
insl
mov
sahf
add
xor
jbe
rcrb
adc
jle
lcall
dec
shrl
jo
xor
mov
lods
sbb
out
int
or
cmp
mov
pop
add
xchg
fstpl
or
cmp
loopne
add
scas
ds
add
cwtl
pop
add
add
xchg
ljmp
scas
rcrl
sahf
ss
sub
mov
mov
mov
fwait
dec
mov
sti
mov
scas
jno
loope
dec
outsb
mov
xchg
in
out
mov
cs
les
enter
nop
iret
mov
lcall
dec
inc
pop
lcall
fisubs
mov
mov
out
aad
sbb
sahf
mov
jbe
jbe
daa
sub
jle
aas
push
xor
jb
rolb
lret
jmp
arpl
lahf
icebp
and
iret
imul
lcall
cmc
pop
jg
mov
leave
incb
std
rcrl
inc
inc
sbb
jo
push
pop
adc
fldl
in
sub
push
inc
dec
iret
add
push
xorl
jnp
sbb
jmp
rol
jmp
and
enter
scas
xor
pop
push
sahf
loop
mov
addr16
inc
inc
lods
push
out
sti
fmull
jg
jnp
xlat
ds
mov
dec
sub
mov
fnstcw
enter
hlt
dec
push
xchg
inc
xchg
dec
push
cwtl
xor
cmc
inc
xchg
inc
aas
addr16
xchg
sbb
ja
roll
imul
or
cwtl
imul
rcll
and
dec
popa
cmpsb
push
xor
xchg
pop
mov
and
pop
xchg
les
out
adc
enter
mov
cmp
fdivrs
mov
addr16
shll
pop
ret
sbb
xchg
adc
fdivs
cbtw
push
mov
xor
cld
cmp
adc
or
sti
aad
xchg
sub
rcrb
sub
dec
mov
mov
test
aad
dec
mov
gs
mov
sub
push
jb
sahf
dec
fiadds
mov
mov
mov
inc
push
pop
popf
jecxz
push
jg
push
cmp
es
popfw
mov
ja
pop
cmp
dec
ss
pusha
test
jno
inc
and
rcrl
push
sub
shl
mov
ficoms
xor
jae
lcall
pop
sbb
repnz
repnz
push
sub
js
rorl
pop
lea
pop
out
jae,pn
xor
rorb
or
lret
out
sbb
xor
xchg
int
jl
sub
fdivp
test
jl
or
aad
or
inc
addb
sub
xchg
inc
addb
sbb
into
test
adc
add
ficoml
std
pop
adc
ss
jno
rcr
push
ljmp
idivb
add
stc
ss
xchg
adc
jecxz
pop
xlat
ljmp
inc
int3
cmp
std
mov
dec
jl
xchg
mov
sub
cli
mov
pop
xor
out
imul
add
cmp
inc
ja
xor
fwait
mov
dec
push
pusha
or
and
sbb
or
int3
dec
xchg
mov
mov
mov
dec
xor
add
ljmp
enter
add
movl
aam
and
pop
xorb
dec
xlat
adc
jnp
stos
jbe
xchg
mov
mov
xchg
xor
sub
xlat
scas
mov
xor
outsl
cmc
inc
adc
sbb
sbb
inc
jb
adc
xor
add
sbb
push
daa
test
push
cmpsl
push
das
pop
mov
pop
ljmp
out
pop
jecxz
add
lods
jecxz
dec
aas
add
push
mov
or
sti
add
out
mov
mov
sub
dec
cwtl
dec
jmp
xlat
pop
cmp
push
inc
and
stc
jae
sub
mov
test
adc
movsb
inc
cmp
inc
sti
adc
and
dec
mov
mov
in
cwtl
ja
add
loope
in
hlt
pusha
pop
pop
clc
push
cltd
xchg
rorb
ja
xor
dec
cmpsb
jbe
dec
movsl
adc
pop
jp
mov
jmp
test
adc
sub
mov
bound
lret
push
das
pop
mov
lret
sar
in
inc
adc
daa
fisubrs
pop
cmp
dec
xor
aaa
push
movsb
clc
aam
jne
sub
testb
push
in
mov
faddl
cs
cwtl
dec
cmpsl
add
xchg
add
mov
es
pop
sub
out
push
je
or
xchg
cmp
ja
lret
inc
fsubrl
js
sahf
imul
leave
test
movl
lret
mov
lcall
mov
dec
imul
in
in
mov
fs
test
mov
pop
faddl
test
sbb
mov
pop
jbe
sbb
ds
push
pusha
or
xor
xchg
adc
dec
lods
je
out
or
xchg
mov
fwait
xlat
mov
dec
push
notl
jg
cmp
movsb
mov
repnz
sbb
aad
imul
lret
scas
mov
scas
mov
out
aaa
adc
mov
aaa
cmpsl
pop
repnz
xchg
shrl
or
mov
cmp
pushf
jne
dec
mov
xor
aam
sbb
daa
pop
in
dec
js
scas
sub
jbe
xor
clc
inc
mov
mov
fwait
adc
cld
add
ret
imul
add
mov
icebp
cmp
cmp
cmc
dec
lret
jne
orb
outsb
xchg
sahf
scas
ja
ja
or
ds
and
inc
into
cmpsl
push
or
xchg
adc
cmp
ja
rorb
aas
ret
mov
shrb
repz
jnp
xor
sarb
inc
orl
inc
int
jo
in
hlt
pop
shl
out
push
push
pop
jb
popf
imul
xchg
pop
movsb
or
sarb
mov
and
xchg
mov
cltd
sbb
imul
or
inc
fs
lret
icebp
loopne
addl
cli
pop
adcl
sti
es
mov
push
mov
push
aaa
mov
sub
jg
jne
xlat
mov
sbb
bound
leave
pop
push
pextrw
xchg
mov
dec
test
mov
enter
sbb
cltd
xchg
inc
push
fcoml
stos
stc
cltd
in
into
sqrtps
out
fwait
loope
dec
stc
int
test
pop
inc
dec
scas
or
xchg
lahf
outsb
inc
adc
iret
pop
push
pusha
bound
ss
das
pop
pop
dec
or
xchg
cwtl
hlt
or
push
jae
adc
adc
out
out
push
loope
fisttpll
sbb
daa
jne
lcall
jmp
stos
data16
shll
shlb
movsl
push
jp
rcll
in
int3
xor
mov
je
adc
dec
mov
insl
xor
aas
sbb
sbb
aas
adc
push
call
rorb
mov
andl
and
or
aad
fcoms
adc
and
inc
mov
lea
push
test
and
inc
lret
add
lcall
xchg
stc
sbbl
lods
mov
cwtl
jge
inc
pop
adc
sub
xchg
jnp
cmpsl
loopne
and
popf
std
adc
inc
into
int3
cmp
jns
test
and
and
push
cmpsl
aaa
mov
jecxz
ffreep
xchg
in
mov
stc
divl
rorb
xor
push
adc
cmpsb
push
scas
sbb
inc
jge
clc
iret
push
jb
and
xchg
fistpl
fcmovb
mov
sub
push
fwait
mov
out
push
add
push
push
mov
pop
call
stc
push
test
adc
out
push
xchg
cmp
dec
lret
gs
push
out
push
ljmp
ret
mov
dec
cmpsb
pop
xor
push
mov
add
test
cmc
nop
hlt
int3
inc
pop
push
xor
cld
sahf
and
xor
sti
rclb
test
das
shrb
pop
ljmp
adc
sub
stos
mov
scas
into
ljmp
cmpsl
cltd
int
mov
icebp
push
lret
mov
daa
xchg
popa
cld
push
adc
les
mov
xor
mov
bound
icebp
cltd
or
sti
adc
push
xchg
xor
int
sbb
fmuls
pop
mov
cmc
sub
iret
aaa
imul
sahf
pop
sbb
int3
push
and
sbb
mov
lret
cmp
dec
stc
inc
cmpsl
ror
mov
addr16
jns
add
mov
add
cmp
incl
dec
decb
addr16
es
in
mov
cmp
inc
fwait
or
pop
jb
repnz
addr16
lcall
es
fisubrs
adc
inc
add
xor
repz
push
jbe
pop
scas
mov
data16
mov
mov
add
mov
loop
push
add
sti
adc
aam
cld
mov
inc
cmp
cwtl
scas
cmpsl
cmc
cmc
cmp
lds
xor
iret
mov
push
jns
adc
fbld
inc
bound
popa
push
push
fs
stos
mov
dec
fistl
cwtl
fisttps
cmpsb
rcr
stos
clc
mov
data16
sub
sub
mov
pop
insl
xchg
adc
scas
hlt
mov
add
mov
test
xchg
xor
fs
xchg
mov
iret
lret
rcrl
cmp
pop
pop
adc
mov
loope
xchg
jmp
jge
sbb
mov
mul
call
cmc
and
daa
jp
dec
pushf
mov
push
adc
in
inc
lods
insl
cltd
xor
mov
xor
jle
sub
ds
lock
pushf
xchg
jns
mov
jle
ss
cmp
or
push
mov
insl
in
ret
jne
add
mov
push
arpl
jle
adc
sub
jbe
mov
sbb
gs
sbb
and
dec
sbb
sub
and
ror
int
js
scas
jno
push
cmp
mov
notl
xor
add
push
cld
push
int3
mov
add
les
add
rorl
ret
xchg
sbb
inc
in
mov
jge
or
jae
std
aad
out
mov
mov
push
sti
jecxz
std
inc
movsb
adcb
stos
jne
mov
popf
jmp
lret
xchg
call
pop
and
les
aam
jmp
ja
sti
or
gs
sub
iret
dec
add
pop
jbe
sti
add
in
psubsw
dec
and
mov
repnz
negb
adc
mov
cmp
pop
jns
lret
mov
mov
push
mov
jle
adc
lock
adc
repz
adc
in
es
lret
mov
movsl
iret
sbb
xor
cmpsb
xor
fs
push
enter
test
insb
fdivrs
and
cwtl
jmp
fxtract
push
jbe
jle
jl
sbb
int
or
inc
mov
scas
push
pushf
pushf
sbb
subb
pushf
cld
imul
add
adc
cmp
or
clc
push
inc
push
mov
or
jnp
sarb
pop
ljmp
das
adcl
inc
fnstsw
in
mov
mov
mov
sbb
sub
stos
mov
daa
push
test
in
int
pop
mov
fldenv
xor
adc
in
aas
cwtl
into
testl
ret
mov
xor
repz
in
mov
add
jbe
or
ret
mov
pushf
xlat
add
les
sbb
pop
mov
sbb
fsubrs
push
xchg
idivb
adc
mov
cmpsb
push
mov
add
aam
inc
lret
fistpl
out
sbb
cmp
xor
mov
sbb
cmp
outsl
pop
xchg
gs
lea
scas
jns
std
sub
dec
pop
imul
xchg
xor
ljmp
xor
ds
mov
dec
fcompl
jns
out
xchg
stos
pushf
mov
lahf
inc
sub
jmp
in
cmpsb
mov
pop
pop
push
jle
jb
ds
jns
lea
movsl
and
xor
or
out
incl
subl
sub
add
pop
movsl
add
fldl
xor
push
mov
pop
in
cmp
icebp
push
mov
pop
sahf
xor
or
je
addr16
fisubl
ss
flds
jno
lret
or
sub
sbb
loope
dec
cltd
sub
xor
push
lahf
ret
gs
adc
js
jns
aad
cmp
lds
push
pop
rcl
pop
push
nop
xor
sub
mov
cmp
or
orb
fcmovu
xchg
xchg
enter
dec
jmp
cwtl
pop
gs
repnz
xor
lds
xor
int3
jmp
test
mov
mov
pop
outsl
mov
loop
lea
xor
push
mov
xor
stc
add
popa
mov
mov
rcrl
je
inc
lds
sbb
aaa
shll
arpl
inc
and
xrelease
cltd
adc
sahf
pusha
inc
les
xor
dec
in
or
or
pop
js
push
sti
push
rcrb
pop
loopne
dec
cmp
loop
ds
leave
and
rorl
dec
push
repnz
fsubl
push
pop
push
psubw
and
mov
aas
cmpsb
inc
mov
subb
fs
sub
fcomi
test
fwait
lahf
cmp
sub
movsl
cld
cmp
mov
test
sub
js
test
data16
jnp
sbbb
aam
stos
xchg
jle
mov
or
sub
sbb
xor
loopne
testb
icebp
xchg
outsl
stos
push
les
mov
adc
mov
in
test
jle
inc
mov
fnstenv
push
dec
mov
imul
dec
in
mov
stc
jne
mov
fdivs
or
adc
rorb
jmp
shll
mov
or
lods
dec
imul
aas
les
test
sti
add
stos
lods
fnstsw
mov
roll
ja
xchg
nop
inc
pushf
mov
lret
in
mov
mov
push
mov
test
adc
lret
sbb
je
dec
bound
fildll
xchg
mov
add
icebp
dec
mov
pop
lcall
shlb
sbb
or
add
mov
jp
add
popf
mov
adcl
sahf
and
arpl
push
cmp
hlt
jns
lds
cmp
push
repz
jecxz
push
icebp
jge
or
fmull
test
sub
fcoml
mov
jg
sbb
ja
nop
out
pop
or
fbld
inc
lahf
hlt
add
iret
dec
lds
pop
das
mov
aaa
aas
fdivs
nop
dec
int
jb
jle
pop
mov
or
fwait
push
cmp
push
xor
cmp
aaa
flds
repnz
popf
pop
sub
jmp
js
test
dec
mov
imul
pop
dec
mov
sbb
in
inc
int3
push
out
jmp
sahf
push
repnz
das
add
add
inc
add
mov
es
push
call
inc
or
ret
data16
adc
addr16
jge
pushf
and
inc
or
mov
jg
add
ja
fsubrs
arpl
add
jecxz
mov
insb
and
sti
jns
pop
loope
pushf
jb
icebp
sub
or
jne
mov
mov
adc
cwtl
xor
sbb
call
xchg
xchg
das
xchg
movsb
mov
inc
xchg
dec
les
std
push
and
adc
neg
icebp
mov
xchg
jl
adc
in
cmpsb
sbbl
ret
outsl
sbb
mov
in
negl
sbb
add
add
cmp
fwait
push
mov
push
arpl
stos
and
ljmp
inc
test
lret
inc
das
ss
add
pop
jnp
jbe
push
sub
fs
enter
jb
sub
aas
mov
mov
ficompl
cmp
mov
movsb
add
out
xchg
ds
cmc
and
insl
movsl
xchg
aad
sbb
pushf
xchg
sbb
insl
lods
xor
inc
popf
push
loop
jb
xchg
sahf
inc
mov
in
xchg
jne
test
lret
sbb
aad
arpl
out
pop
sbb
mov
test
cmp
cld
push
and
lea
pop
xchg
iret
loopne
shlb
add
mov
xor
lahf
and
in
lcall
movsl
jnp
aad
cs
fldl
stc
aaa
jecxz
sahf
push
adc
sbb
not
cmp
dec
mov
sub
les
jns
fstpt
scas
negb
mov
ret
xchg
cmpsl
xchg
fdivr
dec
pop
iret
rcrl
jae
xchg
sub
sub
jmp
rorl
xchg
inc
push
mov
pop
fisttpll
inc
aad
mov
out
div
or
mov
fcmovnbe
lods
sbbb
shl
movsb
cmc
mov
mov
adc
mov
ds
push
add
xor
scas
jb
xchg
hlt
xor
ror
hlt
cmp
dec
int
ds
xchg
call
adc
scas
punpckhbw
xchg
jbe
xor
sub
xchg
or
in
cmp
iret
enter
dec
mov
xor
inc
xchg
in
pushf
loope
mov
in
int3
ret
dec
fdiv
fbstp
repnz
push
mov
or
fnstenv
cmp
xor
int
dec
mov
inc
mov
push
out
lret
mov
nop
and
pusha
mov
fs
lock
jmp
mov
outsb
xor
popa
jb
fcomps
adc
push
in
lds
call
push
and
adc
std
mov
sub
and
stos
inc
jno
xchg
inc
pop
icebp
in
mov
dec
xchg
inc
movsl
inc
arpl
push
shll
and
negl
or
inc
mov
sub
inc
sub
xchg
les
test
cmpsl
dec
lret
adc
scas
xor
xchg
dec
fcomi
inc
ret
pop
push
dec
jle
cld
pushf
lock
inc
pop
mov
rclb
xchg
add
sub
dec
xchg
lea
add
jecxz
sbb
lods
lret
rorl
cmpb
xchg
sub
subb
gs
fldt
mov
xchg
mull
out
and
shl
test
cwtl
sub
std
lock
mov
in
jns
cmp
inc
jge
outsb
inc
orb
out
popa
int
enter
xor
and
dec
aam
lods
mov
cmc
jae
fstp
xor
xchg
popf
dec
xchg
pop
jp
insb
sahf
adc
xor
push
divl
dec
fisttpll
ja
test
fcompl
jmp
int
int3
xor
jge
test
inc
int
push
scas
jge
cmc
cmpsl
sub
stc
pusha
popf
insb
test
xor
leave
xchg
cltd
dec
push
test
push
scas
dec
xor
jl
aas
xchg
ja
shll
adc
sbbb
push
add
jnp
movsl
mov
fwait
roll
or
push
jl
movsb
pushf
out
clc
fwait
cmp
jp
fmul
mov
gs
lods
adc
stc
xor
jo
rcll
stos
or
sahf
scas
jp
test
insb
in
lahf
cmp
pop
jg
in
out
or
xchg
or
mov
mov
mov
test
gs
mov
lock
pop
mov
dec
int3
push
icebp
dec
in
cli
jecxz
push
pcmpgtd
mov
int
call
xchg
or
lds
mov
mov
push
push
or
mov
sub
shr
jo
movsl
mov
leave
mov
jle
pusha
scas
popa
ss
insl
lcall
stos
pop
cmp
lret
fsubl
lea
inc
ficoml
xor
mov
fwait
nop
in
ljmp
cmc
repnz
push
pop
lcall
xchg
das
lret
or
cmp
push
cld
sbb
add
pop
int3
xchg
bound
inc
mov
gs
jmp
inc
incl
movsl
and
dec
add
imul
cmp
cmp
inc
or
lahf
push
jmp
pop
movl
pop
xchg
push
int3
jbe
insb
mov
sub
jae
iret
mov
mov
shll
push
mov
pop
ljmp
les
pop
and
popa
shll
xchg
mov
jb
ret
inc
daa
fidivrl
dec
jbe
call
cltd
pop
add
mov
addr16
sbb
arpl
mov
or
xor
mov
data16
cmp
mov
push
push
adc
mov
pop
test
mov
push
mov
push
xchg
je
aaa
sti
xor
lea
or
pop
or
lcall
jmp
cmp
in
loop
pop
outsb
inc
push
cmp
loop
and
dec
pop
mov
push
es
add
jp
jp
lahf
xlat
mov
jl
icebp
fwait
or
sbb
jl
jge
mov
scas
and
mov
jg
ss
ret
inc
pop
je
add
pushl
jb
mov
cvtps2pi
cmpsl
sub
lds
push
xor
lods
clc
mov
loopne
pop
add
data16
test
test
mov
xchg
pop
dec
into
xor
out
movsl
xchg
call
mov
test
loopne
jmp
jmp
cmp
xchg
out
mov
xchg
lods
sti
xchg
mov
imul
andl
repz
cmp
faddl
push
rcll
xchg
ret
cmp
xchg
dec
imul
push
xchg
mov
xor
loopne
mov
inc
cmp
cld
data16
inc
pushf
jno
mov
mov
mov
ds
js
loop
xchg
push
mov
fiaddl
movsl
cltd
ret
scas
mov
ret
mov
push
push
popa
mov
inc
inc
pusha
mov
mov
leave
orb
pop
cwtl
in
jne
xchg
pop
addr16
sbb
sbb
jg
or
xor
test
sti
int
clc
arpl
cltd
aad
incl
mov
incb
push
mov
outsb
cmpsl
mov
mov
sbb
popa
and
push
dec
test
pop
leave
sub
or
stos
imul
pop
stc
and
aad
addl
mov
jnp
stos
subb
data16
push
or
dec
out
dec
lahf
mov
mov
mov
movsl
push
mov
jnp
scas
ucomiss
out
pop
les
iret
or
add
addr16
out
xchg
mov
sub
test
dec
leave
scas
push
push
pop
mov
pop
sub
cltd
outsl
jne
hlt
pop
das
outsl
jo
and
into
mov
mov
pop
nop
in
mov
out
mov
inc
test
mov
cmpsb
jmp
bound
repz
pop
xchg
int3
subb
pop
push
push
push
xchg
ret
or
rcrl
and
insb
mov
or
adc
and
pop
lcall
jcxz
in
jg
cmpsb
sti
in
xchg
pusha
xchg
dec
je
daa
daa
cmp
pop
mov
mov
add
mov
lea
sbb
aam
xor
mov
pusha
mov
fs
mov
adc
scas
lcall
cltd
cld
vfmsubadd231ps
mov
sub
arpl
aam
cmp
push
mov
mov
xor
push
xchg
adc
adc
pop
popa
lea
out
cld
notb
xor
mov
sbb
xlat
jno
outsl
xchg
out
inc
dec
addr16
sbb
dec
call
push
jae
fistl
mov
dec
jmp
push
sbbb
lock
adc
sub
cwtl
cmp
into
mov
icebp
dec
mov
sbb
cltd
sub
cmp
push
loop
arpl
and
ret
gs
das
push
mov
mov
ds
and
nop
pusha
pop
mov
jg
pop
xchg
fdivrl
inc
pop
pop
dec
push
adc
dec
scas
in
bsf
xchg
jmp
int
sbb
call
cmp
push
xchg
cs
mov
movsb
xchg
jmp
inc
mov
xchg
cmpsl
add
inc
and
jecxz
jae
jle
loope
adc
inc
jbe
std
xchg
or
or
pop
mov
mull
ja
es
imul
cmp
ret
cltd
pop
repnz
sub
lea
test
xchg
jb,pn
xchg
ja
in
sub
in
dec
in
xchg
xor
js
cmp
insb
test
cmp
xor
mov
cs
out
mov
stos
pop
shrl
es
movsl
repz
iret
pushl
aam
lods
enter
loope
xor
and
xchg
jg
mov
pop
clc
sbb
mov
push
out
adcl
loop
push
fwait
pushf
push
ss
jb
push
and
pop
nop
scas
movsb
shrl
scas
inc
loop
mov
inc
cwtl
lock
std
insl
mov
lret
test
mov
sarb
shll
je
pop
sbb
mov
jo
sbb
mov
call
clc
data16
mov
mov
imul
xchg
repnz
sub
in
outsl
popf
out
imul
lods
sahf
fidivl
stc
fucomp
and
test
add
push
pop
stc
jmp
xchg
dec
rorl
lret
fstpt
pop
shl
sahf
mov
arpl
jg
sti
mov
stc
dec
adc
fildll
sbb
enter
pop
adc
add
dec
jns
mov
leave
or
pop
repnz
mov
add
loopne
sarb
adc
sbbb
nop
cmp
adc
pop
xor
push
insl
or
cs
repz
loop
mov
gs
inc
xchg
icebp
daa
incl
lahf
add
mov
mov
icebp
loope
jne
std
fstl
fwait
add
xor
mov
cmp
aas
mov
lcall
rorb
adc
jg
mov
inc
ss
ret
sbb
mov
sti
adc
sub
mov
or
pop
sti
sbb
push
jae
mov
lcall
adc
mov
sub
xor
jl
repz
cmp
adc
push
xchg
les
add
lahf
loopne
stos
and
pop
inc
test
clc
push
jmp
pop
shlb
ret
sub
int3
mov
in
dec
imul
adc
sub
and
sub
push
mov
pop
enter
lock
pop
nop
pushf
mov
sbb
pusha
xchg
mov
xchg
lahf
ret
mov
push
ljmp
push
ljmp
xor
or
mov
sbb
xor
or
adc
aad
loopne
xchg
xor
dec
pop
or
test
dec
imulb
xor
shl
lods
sub
ret
dec
loop
xor
fildll
insl
xchg
mov
fidivrs
mov
cli
cmc
push
push
popl
push
xchg
add
mov
in
popa
push
xor
push
push
push
movsbl
sti
shrb
xor
jl
stc
ss
xchg
gs
ja
shr
cmp
and
clc
xchg
test
add
sub
pop
andb
into
fsubrs
int
cmp
js
xchg
mov
xchg
mov
and
filds
out
adc
mov
cld
and
cli
mov
into
pop
sti
xor
roll
sbb
and
out
das
add
mov
ss
outsb
or
sbb
icebp
mov
jns
sbb
sub
mov
xchg
adc
mov
inc
cmp
pop
imul
outsl
cmp
adc
pop
xor
cmpsb
iret
dec
rolb
xorb
nop
pop
jge
insl
push
sbb
add
insb
emms
pusha
mov
mov
arpl
adc
dec
mov
bound
dec
mov
aam
sbb
xchg
cli
sub
jae
add
push
rclb
fwait
push
xchg
enter
rorb
push
mov
movsb
xchg
add
push
pop
ja
pop
adc
jnp
sahf
adc
mov
jne
dec
xor
rorl
sbb
nop
out
mov
dec
mov
xchg
loop
cmpsl
pushf
push
into
je,pt
mov
popa
insl
push
ret
repz
mov
add
xchg
xor
add
or
stos
cmp
lret
and
pushf
xchg
mov
mov
fcmove
push
dec
nop
pushf
adc
movsl
xchg
icebp
pusha
movsb
lea
bnd
lods
adc
dec
out
xor
dec
fists
cmpsl
inc
or
sbb
sbb
enter
mov
out
dec
push
out
lock
ja
xor
sarl
sub
pop
cmp
xrstors
iret
pop
sub
es
cmpsl
cmp
add
sbb
sbb
xor
mov
mov
sti
cli
stc
cmp
mov
pushf
jae
mov
mov
fsubrl
aad
sti
mov
and
popf
adc
mov
xlat
outsl
je
jmp
mov
pop
ds
testb
negb
imul
pop
dec
xor
pop
sbb
sub
nop
in
jbe
lds
push
cs
outsb
jne
xchg
xchg
push
and
ds
mov
add
inc
sub
iret
loopne
int3
fists
repnz
mov
fstpl
xchg
hlt
inc
jb
xchg
lods
jbe
mov
mov
inc
insb
js
adc
addl
int3
push
cmc
scas
test
sahf
mov
leave
push
sbb
sub
les
and
lcall
fmuls
xor
xchg
shrl
dec
in
enter
fcmovbe
push
xchg
adc
imul
fnstenv
test
insb
inc
cwtl
std
mov
cmp
pop
scas
test
jb
movsl
test
pcmpeqb
sub
push
pop
int3
int3
sbb
subb
add
add
sub
imul
cs
aad
dec
cmp
add
call
xchg
movsl
pushl
add
call
daa
jne
sbb
in
scas
jae
jp
lret
imulb
ret
sub
or
icebp
push
cmp
cmp
dec
es
mov
pop
into
lcall
cmp
jmp
fdivrs
or
pop
xchg
ss
jp
pop
mov
or
pop
sbb
adc
decl
inc
data16
push
fdiv
xor
and
insl
and
dec
pop
jno
subb
lods
or
fcoms
inc
imul
mov
imul
dec
out
xchg
das
jg
mov
xchg
aad
ljmp
addr16
mov
sbb
dec
jb
xchg
aaa
mov
nop
push
loop
lock
outsl
push
or
aam
scas
cmpsb
leave
xor
and
inc
ljmp
mov
ja
sub
mov
jle
shll
ja
nop
notb
jb
ret
xchg
or
push
or
out
mov
lods
cmp
clc
mov
cmp
inc
std
out
outsl
imul
dec
test
mov
test
idiv
cltd
and
movsl
lods
cmp
mov
push
and
push
push
inc
and
repz
aam
lds
ret
dec
dec
shlb
mov
mov
push
sbb
adc
into
lds
enter
mov
dec
imul
inc
imul
test
xchg
movsl
sub
cmp
cmp
sub
sub
xor
cmp
popa
ja
or
ret
push
xchg
mov
stc
or
cld
fnstcw
xchg
sbb
bound
les
pop
jne
push
mov
gs
sbb
or
addr16
cmc
clc
sbb
rcrb
push
xchg
shl
inc
ja
sub
lret
jb
pop
stc
mov
xchg
stc
fsts
mov
fs
push
rcll
or
push
mov
lahf
or
clc
aam
dec
xchg
out
sub
pusha
lret
pop
in
push
jp
xchg
mov
sub
sub
lret
xor
adc
stos
scas
inc
and
xchg
mov
pop
mov
pusha
mov
cmp
pop
aaa
in
mov
stos
add
sti
cmp
gs
enter
cmp
icebp
fistps
fwait
pop
jne
mov
aam
in
inc
xor
ror
pop
outsl
imul
stos
imul
cmpl
sbb
jnp
in
insb
push
mov
mov
jne
mov
pushl
push
gs
jo
aaa
icebp
out
sub
pop
rorl
stc
xchg
in
lock
movsb
or
in
jns
pushf
xor
stc
pop
mov
sbb
jae
lret
mov
idivb
adc
sub
daa
aam
aam
push
jge
cmp
outsl
jo
dec
rcr
cltd
nop
outsl
jns
pop
ret
jne
mov
ss
stos
loope
sub
fildl
int3
in
arpl
add
std
hlt
mov
data16
arpl
mov
das
dec
aad
xchg
adc
dec
dec
or
mov
cmp
sarb
xchg
int
adcl
or
jno
xchg
int
ror
xchg
popa
jecxz
cltd
adc
shlb
dec
pop
lods
fwait
mov
jl
mov
mov
out
adc
and
loope
pop
fwait
cmp
sub
sbb
fildll
xor
mov
pop
pushf
jb
nop
jo
scas
inc
movsl
mov
lahf
addr16
push
std
lds
leave
cs
icebp
insb
add
clc
push
scas
cmc
subl
inc
or
push
subb
shlb
mov
lret
xchg
xor
inc
lret
imulb
stc
sbb
test
outsl
push
push
insb
das
cmp
popa
divb
jmp
push
adc
loop
push
jecxz
sar
bnd
jne
mov
cmc
dec
shll
out
mov
stc
stos
fcomi
popf
pushf
stos
mov
xchg
pop
dec
psubsw
fldt
in
mov
nop
enter
xor
inc
dec
xor
and
xchg
inc
add
out
lea
lock
jns
adc
inc
xchg
push
fisubrs
lahf
push
jmp
call
loop
mov
out
dec
dec
push
cwtl
test
outsl
or
mov
cltd
sbb
inc
in
xchg
xor
xchg
inc
mov
aam
cmpsb
adc
in
jbe
cmpsl
add
sbb
insl
mov
popf
test
lods
xor
stc
mov
call
sarb
clc
pop
cs
les
dec
cwtl
cmp
adc
xchg
and
notb
dec
adc
and
aaa
iret
pusha
clc
xor
test
or
cmp
sbbl
push
movsl
icebp
pushl
in
test
in
in
xchg
cmp
mov
pop
sub
mov
addr16
ffreep
xchg
push
test
je
movsb
pop
loope
ds
arpl
daa
shlb
das
lock
and
aam
pop
addb
mov
arpl
data16
lcall
push
adcl
ss
ja
pop
out
push
sti
mov
jmp
adc
pop
ret
adc
mov
ret
jl
jmp
cmc
xchg
dec
mov
xchg
stos
ds
mov
push
fcmovnbe
sbb
pop
leave
movsl
mov
lock
push
sub
push
cmc
mov
cli
and
bound
or
aam
xchg
ja
enter
adc
xchg
jmp
lret
or
inc
adc
cmc
out
or
fldl
cli
sti
aad
dec
jge
pop
pop
popa
pop
pop
fisubrl
mov
sbb
movsb
push
sbb
push
adc
sub
int3
jge
imul
ss
mov
mov
das
adc
mov
mov
insb
inc
lods
push
jg
ss
pop
jmp
lret
pushf
ja
movsb
nop
xor
lahf
jmp
mov
inc
jb
stos
std
hlt
je
bound
lock
fsubs
jg
scas
add
loopne
ret
pop
cmc
cmpsl
jae
stos
mov
test
lret
dec
cmp
rcrl
cltd
insl
adc
inc
push
out
lods
dec
sbb
pop
daa
push
sbb
and
inc
mov
out
mov
hlt
mov
sbb
pop
popa
dec
xlat
xchg
xor
push
adc
pop
movsb
mov
lret
mov
rcrl
je
subl
push
dec
xor
sub
loop
lahf
sbb
cld
push
adc
jle
push
insb
js
movsb
outsb
sbb
cmpsb
test
mov
aas
loop
xchg
into
adc
repz
mov
mov
cmc
mov
stos
dec
jns
pop
jbe
jbe
out
stos
lahf
pop
and
into
test
jo
aaa
int
insb
cmp
cli
imul
mov
push
pop
pop
movsl
movsl
dec
jl
fdivs
pusha
andb
adc
dec
cli
push
inc
repnz
testl
cwtl
loope
xchg
jo
push
or
and
mov
cmpsb
jnp
fisubrs
mov
pop
pushf
icebp
je
popa
movsl
push
lahf
imul
cmp
mov
int3
fisubrl
ss
lods
imul
inc
cltd
lock
icebp
xchg
or
lret
mov
xchg
das
or
adc
cmc
and
mov
cmp
cli
adc
push
inc
adc
sbb
jmp
pop
stos
les
jl
inc
jge
cli
pusha
mov
loopne
out
xor
or
aas
xor
and
jle
add
mov
mov
fldl
sbb
xchg
xchg
enter
lds
scas
inc
or
test
pop
andb
push
push
int3
jbe
sbb
mov
pusha
fisttps
cmp
inc
jmp
add
mov
rclb
repnz
mov
imul
inc
insb
cmp
cmp
adc
mov
lcall
dec
pop
push
int3
subb
aad
sub
mov
lock
mov
jmp
sbb
stos
pop
inc
adc
fstp
fisubs
ret
lcall
das
imul
int
xchg
mov
mov
dec
xor
movsb
cmp
stc
and
sbb
adc
mov
icebp
sarb
adc
push
mov
mov
fsubrs
das
ljmp
dec
xchg
in
notb
ja
cmc
out
sbb
cmpsl
rolb
into
leave
sbb
aad
lds
mov
test
pop
add
inc
outsl
sbb
imul
cmpsb
adc
test
dec
ss
addr16
mov
setb
mov
cmc
out
mov
call
and
in
xchg
xchg
xchg
lods
sub
jecxz
fwait
test
mov
push
repz
sbbl
stc
pop
xchg
mov
xor
adc
je
and
and
mov
int3
add
clc
or
xchg
fdivs
mov
jg
xchg
popf
push
inc
sbb
shlb
cltd
pop
mov
pop
dec
pop
pop
push
add
push
add
out
jecxz
shrb
movb
fcoml
pop
inc
dec
leave
movsl
je
mov
mov
pinsrw
inc
cs
insb
lea
daa
mov
cmc
cltd
push
jge
loop
inc
pop
insl
cmpsl
dec
pop
fisubl
arpl
jl
mov
fcomi
sub
pop
mov
icebp
push
imul
jo
test
adc
imul
mov
cmp
dec
sub
loop
std
daa
sub
lcall
mov
mov
test
shll
or
mov
inc
mov
int
sti
insb
sub
xchg
insl
testl
je
jecxz
mov
movsb
xor
stos
cli
stos
mov
add
mov
push
and
cmp
ret
fs
clc
rorl
scas
les
dec
and
das
mov
ljmp
lret
sub
dec
mov
dec
imul
push
push
adc
icebp
add
int3
dec
popa
sbb
test
loop
pop
jmp
jl
clc
jmp
xchg
sbb
ljmp
lock
pop
loope
mov
sbb
in
and
loopne
out
dec
shll
jge
jge
add
cmp
dec
sbb
mov
adc
je
mov
xchg
cli
or
mov
lcall
shlb
jbe
and
insb
lea
fnstcw
add
inc
imul
idivb
aad
push
imul
sbb
xchg
loopne
cmp
add
ret
inc
cmp
enter
flds
cmp
lock
insl
push
pusha
push
sbb
cltd
cli
dec
jge
mov
ljmp
and
mov
es
movsl
std
shl
mov
es
cmp
in
pop
xchg
lock
sti
xchg
push
stc
fsubp
jbe
jmp
and
fabs
imul
or
pop
mov
or
xchg
jb
lock
sahf
pop
cwtl
sbb
fsubrl
inc
ret
cld
cmp
pop
insl
mov
cmp
bound
add
push
dec
mov
or
rorl
mov
or
pop
das
shl
in
je
sbb
mov
inc
lcall
outsl
fwait
xchg
into
into
add
sub
or
push
shrl
jp
push
cmc
loope
push
fcoms
int
loop
out
iret
and
das
testl
bound
shrl
lret
outsb
add
pop
push
dec
sti
pop
dec
sti
je
push
or
les
sub
call
test
push
mov
pop
cmp
add
dec
js
aad
cmp
imul
mov
sti
push
fisttps
sub
icebp
testl
popa
ljmp
xchg
insl
out
ljmp
call
push
ret
cs
mov
test
push
inc
jg
push
pop
imul
pop
mov
mov
push
bound
popf
imul
les
movsl
mov
ret
and
dec
jne
mov
lret
sub
push
in
roll
sub
dec
mov
mov
lds
daa
imul
dec
push
in
cltd
push
inc
loop
lods
in
inc
jo
lret
sti
aas
dec
or
cmp
pop
fimull
orb
fs
mov
mov
mov
cmp
lock
xchg
and
xchg
ffree
sub
xchg
and
jae
cmp
fmull
aam
mov
xchg
sbb
aad
pop
pop
bound
pop
hlt
out
notl
fsts
dec
inc
stos
push
dec
pop
out
loopne
jle
and
pop
and
repz
shll
and
lcall
fsubrs
xchg
subb
mov
or
inc
or
xchg
xchg
loopne
mov
out
ret
push
movsb
lret
pop
insl
repz
cmp
mov
or
pop
push
aas
or
out
mov
jmp
push
sub
insl
mov
pop
lods
iret
jns
les
inc
push
loope
or
sub
cmovp
pop
fiadds
sub
and
pop
daa
adc
push
push
jno
fwait
mov
fsubl
and
or
inc
xchg
cmp
push
add
cmc
cs
xchg
fs
add
mov
push
imul
arpl
subl
xor
jns
test
jl
jg
pop
sub
leave
das
popa
int3
inc
sbb
enter
in
sub
in
hlt
cmp
test
push
jg
movsl
mov
sbbb
cmp
loope
stc
xchg
clc
pop
sti
mov
adc
jnp
aam
mov
cli
cmpsl
sbb
aaa
or
ds
mov
ds
and
divl
xor
jl
xchg
cmp
ljmp
insb
push
stos
mov
xchg
lock
negl
or
int3
cltd
bound
das
mov
add
cmp
mov
mov
int
fnstsw
adc
and
in
pop
ret
and
data16
push
jns
in
jl
hlt
iret
lods
inc
add
nop
sti
into
pop
loope
xor
mov
mov
and
mov
mov
xchg
push
jno
sub
out
lret
mov
lock
mov
pop
daa
sbb
gs
push
add
push
gs
pop
push
frstor
shrl
repz
lods
or
cld
inc
jg
dec
ud1
mov
push
sbb
push
in
ss
frstor
in
mov
movsb
inc
or
rcrb
mov
and
cmpb
cmpsl
test
sub
mov
sbb
inc
and
adc
push
leave
cmc
out
lcall
sub
add
mov
xchg
mov
dec
and
repz
dec
popa
mov
sbb
mov
xchg
and
das
sti
repnz
cmp
add
push
test
adc
sbb
mov
jge
push
and
ss
lcall
shrb
movsl
les
in
test
add
lds
addr16
scas
mov
out
pusha
lock
je
xchg
nop
lds
movsl
cmp
ds
xchg
lock
icebp
mov
and
sbb
xchg
loopne
jb
jne
aad
clc
std
pop
clc
rorl
and
pop
mov
std
jns
sbb
les
jecxz
mov
inc
les
rclb
inc
idiv
or
stos
out
decb
cli
cmp
filds
add
fxtract
sub
cmp
inc
enter
jecxz
jle
sahf
stos
xchg
stc
adc
lods
add
jl
faddl
sub
ds
and
lods
xor
jae
in
cli
call
push
jnp
dec
push
or
inc
fstps
enter
clc
pop
or
data16
fcmovnu
sbb
cs
into
aam
adc
outsl
lods
nopl
jae
orb
jnp
sub
sahf
push
jne
cmp
shlb
sbbl
in
lock
out
dec
ss
jge
sub
mov
cmpsl
push
sbb
jg
arpl
mov
xor
inc
mov
jmp
lcall
add
push
sbb
and
inc
es
push
int3
shrb
or
pop
cmp
jae
imul
sarb
arpl
pop
cltd
xchg
pop
jno
movsb
push
mov
jecxz
filds
insl
mov
out
xlat
subb
nop
push
fildll
dec
outsl
pop
push
lahf
push
scas
scas
and
les
cmp
in
cmp
pusha
fs
mov
sub
xor
dec
ss
loopne
loopne
mov
cmpsb
fwait
or
adc
mov
cmpsl
cs
mov
lods
dec
sub
das
or
lods
jns
cmpsb
cmp
and
xor
pop
int
ret
fmuls
inc
pushf
scas
lcall
arpl
jle
xor
pop
mov
mov
std
push
mov
add
scas
lods
scas
mov
pop
jp
mov
fimull
insb
inc
xchg
sbb
sti
repnz
lods
lods
push
ret
shrl
pop
xchg
sub
mov
mov
cmp
mov
xchg
mov
adc
adc
fdivl
inc
shlb
stc
in
addr16
ja
into
adc
jb
lcall
sbb
outsl
ficoml
pop
rorb
cwtl
filds
fstps
adc
mov
ret
out
mov
lods
inc
aad
adc
imul
inc
mov
iret
sub
stos
xchg
jns
mov
test
gs
fisttpl
jno
push
fisubrs
das
gs
inc
das
test
arpl
test
jb
es
inc
je
mov
xor
cmp
aaa
in
jb
scas
dec
pop
out
test
mov
test
or
stos
stos
xor
pusha
jge
iret
push
lret
mov
aam
mov
shl
sub
popa
nop
add
popa
scas
pop
add
cmpl
mov
mov
mov
sub
rcl
sub
fxch
mov
cmp
sbb
js
std
sub
test
popa
jno
iret
out
xor
fdivs
scas
aaa
jne
cmp
inc
ja
adc
push
dec
popf
dec
dec
lret
es
mov
leave
xchg
push
sub
add
fisubrs
dec
decl
sbb
xchg
test
jnp
int3
inc
fnstsw
xlat
icebp
lcall
add
xchg
sub
and
stos
mov
movsb
adc
in
stos
push
pusha
inc
jo
xchg
xchg
xlat
lods
js
push
std
or
arpl
inc
lahf
iret
mov
cmp
lock
icebp
sub
in
lea
ret
push
sbb
dec
jmp
hlt
repnz
loop
lds
jnp
or
dec
mov
push
xor
jne
jmp
mov
xchg
lods
int3
fwait
or
adc
jle
cmpsl
jb
mov
xchg
mov
arpl
mov
sbb
arpl
inc
mov
sub
les
pmuludq
cmc
out
dec
out
lds
mov
add
mov
lret
outsl
shld
xchg
inc
in
push
push
cmp
pop
in
dec
xor
mov
pop
push
lods
enter
sub
iret
imul
pop
fidivl
aam
jmp
push
test
jl
loope
cmp
inc
jge
mov
push
jg
lods
fwait
inc
frndint
pop
int
aas
stos
xchg
icebp
and
jmp
clc
add
sbb
aas
add
xchg
sub
sbb
mov
adc
push
jns
and
adc
ja
movsb
xchg
push
dec
xchg
outsl
jl
pop
mov
inc
add
dec
mov
mov
push
pop
sbbb
push
popa
inc
fs
mov
adc
and
pop
mov
stos
into
push
mov
mov
push
lcall
imul
inc
sub
sti
lret
jne
jecxz
in
adc
cmp
xchg
fwait
sub
xor
mov
ljmp
pop
pop
into
dec
inc
loop
and
cli
lcall
negl
sti
xchg
fucomip
jmp
add
sti
repnz
mov
subl
mov
arpl
push
inc
test
fwait
dec
lds
dec
mov
sub
lcall
into
sahf
outsb
ficomps
shlb
test
inc
push
xor
daa
or
jle
pushf
rorb
push
lret
stos
lods
ja
outsb
std
lods
call
or
addb
out
lock
fsubrs
clc
adc
pop
movb
jle
pop
sub
inc
jne
sbb
inc
cltd
xor
dec
fyl2x
scas
sbb
int3
or
sbb
ds
out
xchg
adc
imul
les
in
popl
inc
insl
daa
mov
mov
fwait
mov
mov
scas
inc
movsl
pop
lds
sub
push
cmp
cmp
orb
push
mov
icebp
dec
push
pop
test
sbb
insl
push
cmp
mov
pop
push
push
mov
data16
lahf
rcll
sbb
xchg
pop
aaa
mov
jmp
adc
push
mov
lock
xchg
inc
data16
inc
idivl
dec
imul
mov
mov
movsb
push
cmp
scas
scas
sti
gs
stc
ljmp
push
pop
lods
es
out
pop
dec
jae
std
repz
mov
fistpl
sbb
push
jns
sub
xor
push
shll
sub
sub
adc
jmp
jbe
daa
add
sarb
cmp
pcmpgtd
stos
xchg
pop
test
xchg
cmp
add
add
add
xchg
loop
imul
inc
dec
out
andb
iret
pushf
xor
xor
push
cmpsl
jne
lods
cmp
cwtl
test
gs
mov
addr16
add
cld
decl
push
fbstp
in
pop
je
fdivl
adc
pop
fdivr
nop
std
out
aam
push
stos
in
mov
aaa
lret
jo
sbb
sti
mov
xor
push
cld
jmp
push
xor
aam
test
pop
pop
fcoml
push
repnz
sbb
jle
test
mov
ja
pop
sbb
dec
mov
mov
adc
pusha
mov
push
pop
jmp
mov
outsl
jecxz
mov
aas
push
pop
bound
or
dec
pushl
mov
dec
or
cmpsl
xchg
xor
ljmp
xchg
push
fisubs
out
adc
jae
mov
xlat
sub
insl
push
aaa
pop
push
or
in
mov
jno
test
adc
es
call
add
pop
ja
cmp
testb
inc
mov
arpl
jecxz
xchg
cmc
stos
jnp
push
and
pop
xor
sub
jb
clc
int
popa
sub
stos
sub
xor
popf
jmp
mov
and
sahf
lock
xchg
mov
ret
daa
cmpsb
fisubrl
fsubs
les
or
fists
outsb
mov
sub
lcall
cmc
inc
and
ret
mov
bound
mov
ds
mov
pop
mov
xchg
lds
dec
dec
jo
data16
and
ficoml
stos
inc
xchg
aas
out
into
test
test
ljmp
rorb
out
dec
sbb
adc
mov
and
imul
shl
adc
jl
imul
in
mov
fs
mov
lahf
or
mov
cmc
fldenv
and
inc
scas
push
cmp
bound
bound
xchg
mov
jne
inc
jb
sub
jle
and
jns
addr16
aaa
lahf
lods
movb
pop
enter
popa
inc
xchg
sbb
push
movsl
arpl
inc
pop
push
pop
aad
mov
pop
int3
inc
subl
adc
dec
add
jbe
xorl
mov
mov
imul
adc
mov
sub
adc
jge
and
mulb
add
pop
stos
popa
sub
and
pop
jnp
push
sti
ss
repz
cmc
inc
cmp
mov
inc
xor
jge
adc
sbb
xchg
cs
xchg
xchg
jne
pop
adc
xor
sti
je
sub
incl
fiaddl
faddl
jecxz
xlat
mov
xlat
or
dec
addb
lret
pop
push
ja
cmp
pop
add
rep
aaa
adc
mov
inc
mov
fcomip
jp
popf
scas
sbb
movd
repnz
pop
dec
insb
imul
ret
lock
and
ja
rol
or
insb
cmp
jle
lcall
fs
pop
pcmpgtw
addr16
or
dec
and
or
in
nop
cmpb
ja
mov
insb
int3
jp
cli
mov
out
push
les
xchg
arpl
or
mov
aaa
sub
mov
inc
xor
sahf
xchg
xchg
add
xchg
pop
dec
push
dec
mov
pusha
xchg
leave
pop
xchg
push
adcb
pop
xlat
scas
cwtl
outsb
test
adcl
ja
jg
mov
shll
mov
jo
sub
scas
sub
mov
lock
lods
pop
jae
shrl
fsubrl
and
pop
dec
rcrb
xchg
mov
jns
outsl
jns
les
mov
imul
out
cltd
cltd
cmc
mov
mov
mov
fcmovnb
jp
arpl
test
sbb
or
test
xor
dec
sub
dec
push
subb
mov
mov
repnz
and
iret
dec
adc
fs
in
inc
leave
sub
ss
pop
inc
imul
fs
lahf
outsb
jl
cld
push
pop
fcomps
cld
aas
dec
and
ficoms
dec
lods
mov
xchg
ficoml
fadds
jecxz
jno
inc
sbb
and
loope
add
jg
mov
jle
mov
push
cmp
sub
ja
dec
repnz
outsl
jecxz
gs
popa
push
mov
ljmp
clc
lret
adc
xchg
xor
mov
mov
gs
aas
addr16
push
fucomi
ficoml
movsl
and
mov
or
jo
xor
ficomps
std
mov
lret
mov
inc
int3
imul
sbb
test
mov
inc
or
rcrb
pop
scas
adc
in
dec
cltd
mov
cmp
mov
jbe
jb
push
stc
xor
sbb
jae
stc
inc
jle
mov
add
add
xchg
add
daa
sbb
sbb
and
xor
loopne
push
int3
mov
cltd
outsl
jle
xchg
jns
xchg
ds
scas
mov
pop
or
loope
jno
jno
adcl
in
fisubl
gs
cmp
out
outsb
xchg
mov
xchg
mov
aam
lods
mov
arpl
arpl
std
fisubrs
dec
iret
dec
test
jge
jecxz
fcmovb
aad
ret
int3
cmc
shrl
mov
mov
hlt
in
fists
rclb
and
and
cwtl
push
mov
add
inc
inc
out
insl
clc
loope
pop
cmp
cltd
shl
sub
filds
cmpsl
cmp
sahf
sub
lret
adc
xor
imul
call
fst
movsl
adc
add
daa
sub
mov
imul
jl
pop
icebp
out
loope
rorb
and
cwtl
cwtl
add
ljmp
sbb
rorb
aam
jge
add
pop
fcoms
jns
mov
pop
sbb
add
jns
add
xorb
std
push
popf
idiv
mov
jae
lods
sbb
jae
adcb
repnz
scas
push
xchg
outsb
in
mov
iret
push
xchg
cmc
dec
inc
cmovae
sub
inc
jmp
xor
mov
or
xchg
mov
sbb
lret
inc
cld
scas
movsl
push
ds
orl
jp
test
jne
or
pop
movsb
aas
aam
xchg
and
cld
xchg
cs
js
mov
iret
pop
mov
das
xchg
scas
sbb
fcoms
fcomip
and
imul
sub
int3
sbb
jg
arpl
subl
or
stos
mov
push
mov
pop
ds
lds
test
sub
dec
push
sti
mov
fcompl
add
sub
xchg
push
cli
inc
jl
xor
idivb
mov
std
cmpsb
stos
push
fidivrl
imulb
das
cmc
pop
div
in
pop
pop
into
subl
sub
test
std
in
push
daa
fsts
mov
sub
sti
mov
sub
mov
nop
test
call
adc
outsl
lahf
or
inc
mov
nop
mov
push
push
inc
mov
cmp
test
mov
out
outsb
mov
push
sub
add
dec
adc
push
jae
cmp
pop
or
jmp
inc
xchg
insl
cmp
in
add
sbb
test
js
lcall
fsubp
cmp
test
add
fs
icebp
sbb
ja
packuswb
sub
mov
gs
mov
pushf
pop
mov
stos
ss
lods
pop
addr16
xor
jns
pop
mov
imul
fldenv
and
rolb
lock
fbld
sub
xchg
in
stos
shr
cltd
push
gs
sub
push
jne
inc
fs
and
xor
jge
add
cltd
incl
aam
adc
push
xchg
add
sahf
jns
mov
fmull
push
pop
pop
popf
jp
sub
out
push
jge
push
push
addr16
pop
movsl
daa
jecxz
std
mov
out
outsl
or
mov
or
out
stos
pop
addr16
pop
xor
mov
enter
mov
push
js
in
lahf
sub
aaa
sbb
add
addb
jbe
test
out
sbb
arpl
hlt
shrb
cld
jg
lds
pop
push
adc
mov
shrl
repz
imul
outsl
std
or
in
add
mov
bound
icebp
not
inc
pop
pop
jmp
xchg
mov
jmp
mov
or
daa
in
sub
insb
cmp
test
dec
pop
mov
stc
unpcklps
mov
imulb
push
movsb
outsl
mov
jl
test
mov
xlat
xor
add
push
xor
mov
sbb
loop
scas
xlat
mov
mov
lahf
movsb
lock
pop
outsb
push
add
int
movsl
or
xor
rcrl
inc
sbb
or
push
and
out
sub
loopne
dec
inc
adc
out
jno
lds
cmp
dec
insl
hlt
packuswb
pop
push
cltd
or
popf
mov
pop
push
or
rcll
cmp
sbbl
dec
aas
or
loope
xchg
cmpb
mov
outsb
imul
cmp
jl
lods
mov
test
mov
mov
and
cmp
je
inc
inc
inc
scas
pusha
cmc
fs
std
cmp
iret
outsb
mov
pop
jecxz
dec
dec
ret
es
ror
or
neg
sub
pop
jnp
and
test
jp
lds
scas
shll
cmc
fadds
out
or
mov
add
xor
aas
clc
cmp
int
imul
lret
insb
xor
roll
cwtl
scas
lcall
or
pop
push
cmp
arpl
or
jecxz
pop
xchg
add
jnp
sub
xor
dec
or
mov
sbb
jmp
and
cli
mul
pop
mov
mov
loopne
pop
cs
mov
sub
cmp
mov
dec
xchg
jns
push
xchg
mov
push
push
les
cmp
shlb
cld
iret
jecxz
mov
push
mov
mov
pop
mov
ds
ja
int3
int
and
jp
adc
pop
inc
mov
movsb
mov
fcoms
push
clc
sub
push
dec
add
faddp
cs
cwtl
pop
fsubs
rorl
cmpsl
sub
cmpsl
adc
xchg
push
xchg
imul
insl
gs
mov
dec
push
jo
nop
ret
outsb
out
add
push
push
and
pop
lods
dec
into
sbb
ss
push
push
lods
inc
es
mulb
fisubrl
sub
push
mov
and
mov
mov
mov
mov
enter
lret
fwait
and
add
sub
fimull
mov
push
cs
mov
mov
loopne
inc
add
scas
ja
adcb
repnz
lds
jae
test
mov
xchg
adc
repz
mov
out
test
inc
sar
add
or
mov
sar
pop
mov
dec
mov
push
adc
es
jle
pop
icebp
rolb
ret
pop
or
test
jge
mov
jne
jbe
imul
dec
or
popl
mov
dec
dec
jo
add
js
sbb
dec
or
lret
mov
jnp
repnz
jnp
les
push
fsubrl
dec
mov
jl
out
fwait
push
pushf
or
push
das
repz
test
stos
adc
push
jge
fstpt
sahf
xor
ds
cltd
or
add
call
mov
sahf
xor
addb
shll
sbb
mov
cwtl
fdivrs
mov
xchg
adc
pushf
inc
fdivrs
dec
mov
subb
add
pop
psllq
pop
sub
cmp
pusha
in
inc
icebp
data16
dec
fs
hlt
add
nop
outsl
dec
les
fisttpl
dec
push
mov
cmp
sbb
sbb
out
movsb
mov
push
inc
xchg
insl
gs
ss
mov
add
fsave
mov
iret
sahf
jmp
pop
mov
sub
push
incb
dec
push
sbb
bound
inc
cmp
in
mov
mov
mov
cmpb
test
adc
mov
fsubr
daa
popa
scas
pop
std
movsb
test
jbe
sbb
lret
adc
ljmp
fisubs
cmp
pusha
dec
jne
sti
cmp
xor
xchg
jp
outsl
loopne
mov
out
pop
out
leave
xor
cmc
scas
cmp
inc
out
pop
sbb
das
xchg
lahf
stos
daa
sub
ja
or
jecxz
jno
mov
sub
lahf
mov
add
stos
iret
xchg
cmp
loop
cwtl
out
popa
out
daa
add
js
xlat
push
dec
bound
enter
dec
jle
push
out
jae
popf
mov
mov
stos
rolb
or
xchg
inc
loop
mov
xchg
scas
pop
pop
movsb
pushf
in
insb
frstor
fcmovbe
enter
lcall
or
mov
dec
in
outsb
lods
jge
mov
scas
cmp
je
je
inc
stc
add
and
outsb
inc
mov
popf
subb
outsl
shl
mov
bound
ja
add
xor
xor
test
repnz
sbb
xor
aas
stc
cmp
enter
pop
mov
add
or
sub
dec
sub
inc
mov
mov
inc
mov
mov
or
xor
xchg
jne
dec
mov
mov
sbb
mov
call
mov
popl
es
sbb
adc
rcll
aaa
clc
fsts
cmp
or
mov
les
ret
popf
dec
adc
roll
xor
xchg
push
cmp
scas
push
jbe
lods
dec
or
jo
out
fisubs
xchg
and
and
cmpsb
fisubrl
push
and
leave
jg
aad
int3
jecxz
cmp
jle
insl
cmp
mov
dec
jmp
cmp
hlt
xchg
call
mov
push
and
je
mov
mov
sahf
jmp
in
out
xlat
ficompl
les
movsb
pop
in
xor
push
dec
push
lret
aad
mov
push
mov
mov
rol
jp
mov
and
adc
mov
xchg
inc
mov
push
loope
hlt
sub
mov
mov
push
push
std
int
mov
mov
iret
dec
cmpsb
aas
inc
call
popa
adc
hlt
dec
es
shl
xchg
in
js
imul
push
loope
jno
test
mov
es
xor
in
sbb
insl
mov
repz
test
mov
popl
mov
lret
shl
je
mov
dec
lea
leave
repnz
imul
mov
cmpsl
jecxz
sub
rorl
loopne
nop
shrl
aad
xchg
adc
ret
mov
push
fsubs
xchg
mov
hlt
daa
das
loope
mov
sti
cli
jp
idivb
in
mov
xchg
enter
push
bound
mov
adc
imul
arpl
jl
out
push
in
subl
push
daa
mov
pop
mov
fbld
xchg
fwait
inc
lods
lret
fsubrl
inc
testb
jecxz
lret
cmc
cmp
shlb
pop
jae
lea
mov
or
mov
std
cwtl
hlt
dec
roll
mov
bound
sbb
jecxz
inc
movsb
hlt
rcrb
pop
xchg
mov
push
lock
nop
call
je
insb
xchg
pop
jbe
sub
cmp
aad
lret
adc
loopw
ret
out
xchg
ds
cmp
fsubl
and
jae
popa
mov
xor
xchg
mov
int3
es
in
xchg
inc
lahf
dec
int
repz
jl
icebp
jle
jecxz
test
or
cld
inc
jl
mov
stos
adc
fldl
in
js
xchg
mov
mov
push
xrelease
pop
cs
jne
loopw
inc
out
scas
push
add
js
cmp
arpl
test
push
fldcw
adc
or
mov
jne
in
sbb
or
adc
cmp
mov
cmpl
jmp
xchg
add
sub
lret
stos
jle
lea
fbstp
pushf
sub
xor
add
dec
out
nop
insb
xor
push
jne
cwtl
stc
mov
cmp
test
in
add
sub
xchg
data16
jnp
pop
mov
pop
or
mov
xor
shr
addr16
into
cli
xchg
fcompl
or
mov
and
neg
pusha
pushf
out
jle
mov
imulb
pop
adc
cwtl
cmp
adc
xchg
nop
jb
jno
stos
mov
xchg
push
addb
hlt
dec
mov
test
add
ret
fistl
outsb
jne
push
push
loope
aad
mov
std
jecxz
loope
xchg
std
pusha
daa
jl
sub
lock
inc
not
cmp
mov
je
movsl
js
sti
cmp
ss
mov
mov
mov
dec
mov
mov
ret
ficoml
jae
or
jno
sbbl
sbb
cmpsl
add
insb
pusha
xchg
jmp
les
ret
bound
push
mov
mov
lcall
xor
jecxz
iret
lods
fistl
and
scas
pop
pop
mov
jmp
mov
cmp
jo
xchg
arpl
xor
xor
pop
pop
jge
sbb
jmp
and
mov
pop
pop
mov
std
rcl
cmpsl
ret
dec
cmp
xchg
and
dec
jno
inc
popa
add
pop
movsb
pop
outsl
fstps
add
call
cltd
dec
and
gs
xchg
fisubl
out
lret
dec
mov
xchg
mov
pusha
les
lock
loope
adc
dec
enter
movsb
sbb
enter
xchg
call
push
or
or
sbb
cld
push
cmp
jg
stc
mov
jae
inc
es
aad
pop
mov
lret
imul
adc
mov
xor
imul
dec
out
inc
mov
adc
cmp
testb
frstor
jae
cwtl
out
jno
add
jl
insb
jne
lods
mov
cmpb
inc
mov
inc
push
test
dec
loope
into
dec
mov
adc
imul
dec
sbbl
jl
lock
sbb
nop
cld
mov
fdivs
cli
jg
or
ds
scas
mov
popf
rcr
pop
mov
shrl
mov
out
cmp
lret
aad
push
mov
jp
inc
out
or
push
fwait
aam
mov
cltd
adc
dec
and
inc
adc
imul
xchg
sbb
pusha
test
das
ljmp
dec
dec
or
add
xor
pop
test
leave
push
pushf
roll
sub
enter
sub
jecxz
int
or
fstsw
xlat
pop
inc
inc
sub
std
mov
sbb
scas
push
rolb
or
leave
ret
mov
inc
aam
dec
in
jle
insb
adc
mov
imul
mov
mov
cmpsb
aas
inc
cmpsb
mov
xorb
mov
stos
stos
lds
dec
and
mov
pushf
inc
aas
or
ja
xor
imul
movsb
jp
scas
lock
mov
mov
or
lret
lahf
sbb
repnz
xchg
out
jnp
sahf
cmpsb
mov
jb
nop
and
mov
push
push
xchg
cli
and
cmp
pusha
or
fnstenv
mov
or
jb
shl
rcrl
add
or
aaa
ds
inc
dec
xchg
imul
sbbl
xchg
xchg
frstor
mov
nop
mov
ret
or
and
pop
mov
ljmp
sti
sbb
les
fildll
sbb
inc
fimuls
daa
scas
jno
movsb
inc
dec
mov
mov
add
mov
cmp
or
mov
je
mov
data16
pop
adc
dec
lret
xorb
stc
pop
adc
and
push
jnp
pop
jae
or
inc
sbb
loopne
mov
dec
into
test
js
addb
add
cmp
in
xor
gs
add
push
xchg
mov
xchg
mov
dec
inc
mov
ja
int
adc
out
add
sub
mov
mov
sbb
arpl
sub
out
push
repnz
xchg
icebp
pop
add
add
scas
lcall
dec
jne
cmp
mov
mov
push
add
nop
hlt
push
push
adc
sbb
aam
in
in
addr16
push
insb
inc
das
std
add
push
xor
add
xchg
mov
sahf
fcomi
fwait
pop
dec
pop
std
sti
xchg
sahf
lock
stc
divb
or
cltd
ljmp
test
leave
sbb
subb
sti
test
aaa
ds
xchg
inc
sub
fistl
push
movsb
push
jmp
mov
and
arpl
jne
mov
imul
stos
cwtl
loope
insl
xchg
add
push
pushf
inc
push
sti
ja
repz
ret
js
cld
leave
sub
int3
pop
imul
dec
push
push
dec
mov
scas
hlt
push
cmp
push
shl
dec
addb
add
mov
jbe
rol
cmp
mov
dec
xchg
jne
pop
mov
pop
je
out
in
jno
lods
fnsave
cmp
xchg
mov
jle
and
xor
add
hlt
push
mov
sub
lods
filds
push
mov
jmp
push
push
sub
dec
mov
sbb
dec
std
mov
fidivl
and
or
shl
sub
into
mov
and
inc
jno
mov
mov
leave
mov
test
add
push
call
dec
mov
sub
outsb
out
aam
sbb
adc
in
out
push
es
xchg
mov
jno
mov
out
adc
inc
jg
xchg
subb
cld
fsubrs
jge
inc
dec
in
sub
popf
sub
fimull
shrl
mov
int3
jo
stos
pop
mov
sahf
xchg
sbb
sti
xchg
scas
xorl
loope
push
out
inc
mov
mov
jp
mov
jno
dec
scas
add
mov
test
ss
or
mov
cmp
mov
loop
or
lock
es
and
insl
icebp
int
loop
and
call
or
sub
mov
jne
lret
pop
in
xor
sahf
sub
and
movsl
clc
popf
pop
clc
cwtl
pop
push
and
mull
outsl
aas
stc
scas
pop
or
std
mov
lret
xor
inc
pop
lods
scas
fdivl
int3
push
mov
mov
mov
orb
cltd
sbb
xor
loop
mov
inc
sbb
loop
sub
mov
popa
xor
and
in
pop
inc
lret
mov
adc
insb
lret
daa
stc
loopne
clc
lock
stos
lcall
jbe
add
cltd
cli
out
pop
jmp
mov
dec
mov
mov
iret
pusha
jl
pop
stc
or
shrl
mov
mov
mov
inc
add
xchg
push
xor
das
ljmp
pop
mov
mov
insl
filds
cmp
push
pop
out
xor
or
jnp
pop
mov
dec
cltd
add
addr16
in
movsl
ss
mov
jnp
mov
xlat
dec
lock
mov
testl
xor
cmp
mov
out
sub
pop
movsl
inc
or
jno
fucom
inc
sbb
shlb
jbe
arpl
movsb
pop
inc
xor
pusha
enter
ds
or
dec
in
xor
sahf
xchg
cmp
fstl
in
fs
mov
pop
sarb
loopne
out
int3
loopne
mov
inc
lahf
shll
popf
dec
jns
xchg
sahf
dec
nop
mov
popf
aad
and
jmp
add
dec
rep
in
outsl
or
mov
mov
xor
sbb
pop
fs
lock
rcr
mov
insb
cmp
imulb
imul
mov
xchg
aas
dec
mov
pop
or
push
test
cltd
add
jle
outsl
clc
dec
repz
cmp
scas
lahf
mov
mov
adc
arpl
pop
sbb
mulb
xchg
testb
in
pop
insl
bound
pop
dec
sub
xor
repnz
mov
lcall
xor
sarb
mov
sub
iret
andb
sbb
nop
xlat
shrb
xorb
cmp
mov
mov
and
ror
imul
cld
xlat
dec
mov
sbb
aad
leave
stc
jns
sbb
push
or
jns
js
add
test
dec
lahf
lods
out
cld
jge
xor
sarb
mov
popf
or
pop
mov
mov
clc
mov
dec
jmp
in
ja
out
inc
int
sbb
lea
jb
mov
mov
or
into
add
scas
mov
push
dec
fdivrp
sbb
loop
push
gs
mov
or
loop
mov
ret
pop
gs
add
cs
stos
stc
push
out
inc
hlt
jbe
cli
sbb
dec
lods
pushf
mov
mov
push
mov
or
jns
cld
mov
xchg
xor
push
xchg
inc
push
jle
cmpsb
push
mov
fdivrl
cmc
jmp
rcrl
dec
sub
or
int3
cli
xchg
and
mov
pop
xchg
sbb
cmp
cld
popf
sbb
pop
xor
mov
mov
test
dec
inc
add
fcoml
in
xchg
cmp
and
xor
out
enter
imul
sub
xor
push
add
mov
sub
pop
pop
jge
mov
add
loopne
mov
mov
push
sub
jge
xor
mov
insb
dec
jo
mov
xchg
dec
outsb
rcr
sbb
pop
mov
mov
push
and
push
mov
jecxz
mov
clc
mov
mov
mov
notl
mov
cltd
mov
rol
stc
test
into
cwtl
xor
mov
xorl
in
mov
pop
ljmp
pop
ret
xor
divl
sbbb
enter
sbb
stos
mov
stc
cmp
dec
mov
lahf
icebp
clc
xor
mov
lea
rcrl
stc
repz
and
out
inc
push
mov
test
ss
subl
push
cmp
jle
stc
push
retw
addb
jae
fs
js
cmpsb
mov
ljmp
cmp
ret
jge
mul
sahf
xchg
lock
cwtl
cmpsb
js
add
insb
cmpsb
in
outsl
jne
lock
fwait
push
testl
or
add
movsl
mov
orb
jge
mov
shlb
xchg
mov
adc
cmp
out
xchg
jge
jecxz
movsb
xchg
push
js
ret
sbb
lods
push
loope
inc
add
jmp
push
or
enter
push
loop
int3
or
int3
inc
jns
jo
jge
mov
inc
cwtl
push
dec
xor
mov
dec
lds
mov
push
inc
sbb
xor
dec
sub
popf
push
cmp
inc
jge
lahf
adc
fisubs
addb
mov
or
js
mov
in
cli
fcmovu
lods
enter
xor
test
mov
es
xor
out
std
sahf
popf
add
push
add
aam
outsb
xchg
push
cmp
mov
std
dec
xor
adc
repz
pop
jbe
in
mov
addr16
icebp
int
sub
lret
cmpsl
sub
push
cmp
ret
mov
adc
cmp
jmp
push
pop
ret
scas
or
popf
out
lods
sbb
lcall
adc
pop
insl
xchg
lret
out
push
addr16
sbb
aas
movsl
dec
ja
mov
xor
mov
shll
lahf
cltd
fidivs
gs
jbe
inc
push
dec
pop
push
notl
push
pop
imul
inc
add
adcl
lret
insl
adc
lock
stos
fs
mov
scas
sbb
stos
pop
jmp
or
add
or
push
pop
and
and
sbb
call
ss
out
popf
sub
movsl
dec
idiv
pop
sub
push
push
sbbb
movsl
xchg
mov
cld
mov
aad
lock
pop
sbb
fiaddl
mov
cmpb
loop
sbb
lea
mov
popf
inc
and
push
out
pop
push
pop
fistps
lods
test
jne
xor
mov
lret
ret
in
push
mov
ja
or
jg
leave
bound
mov
loope
call
xor
sub
inc
nop
push
and
imul
fdivrs
xchg
xor
inc
mov
into
sub
shl
and
sbb
pop
push
sbb
scas
or
dec
lret
sbb
adc
jnp
pushf
and
loopne
mov
mov
insl
aam
sub
jecxz
fisubs
mov
mov
aas
jmp
push
sub
call
sahf
fwait
aam
adc
addr16
scas
lds
loopne
jns
pop
jecxz
mov
mov
or
xchg
ljmp
sub
rcr
ret
jnp
xchg
mov
lods
mov
int3
mov
vcvttsd2si
mov
in
lock
add
cmp
dec
ret
lea
bound
inc
add
xor
jmpw
xor
cld
sub
stc
shrb
and
cmpsl
popa
jnp
push
xor
decl
int
scas
dec
mov
pop
cmp
mov
iret
cmp
aam
mov
push
stc
iret
xorl
xor
fwait
xchg
mov
pop
pop
ret
dec
loop
jmp
roll
or
mov
hlt
pop
cmpsl
cmp
fcmove
mov
pushf
cmp
dec
push
sub
sbb
das
nop
push
cmp
cmp
insb
outsb
cmp
adc
dec
lret
push
sbb
mov
and
pop
add
lahf
inc
or
cld
lahf
ret
jg
clc
test
movsb
aam
jbe
arpl
xchg
mov
dec
arpl
fnsave
in
call
cmp
and
pop
fs
inc
out
int
mov
and
cwtl
dec
cmp
dec
fisubl
shrb
addl
mov
pushf
mov
or
pop
inc
lods
and
popa
mov
xor
loopne
mov
icebp
pop
or
or
sbb
cwtl
nop
popa
stos
mov
pavgb
xchg
add
xchg
push
pop
mov
clc
and
into
or
out
notb
ret
cwtl
sti
fwait
sarl
jmp
pop
in
jecxz
adc
lcall
jb
xchg
and
lods
adcb
fimull
push
mov
push
add
sub
jle
cmp
inc
push
repz
mov
shll
mov
push
insl
pop
cmc
inc
imul
fsubp
mov
and
mov
mov
mov
push
gs
fidivrl
aaa
mov
inc
insb
add
out
insl
test
icebp
call
pushf
and
bound
xor
inc
xchg
loopne
aad
push
mov
mov
mov
add
pop
ficomps
push
jae
push
hlt
je
adc
fwait
repz
cmp
fstps
out
sahf
pop
and
mov
cli
push
and
dec
stos
inc
mov
add
mov
sub
push
adc
jb
sti
jno
xlat
mov
ret
stos
xlat
aad
mov
push
sti
xchg
xchg
push
stc
jge
adc
test
or
dec
push
rcl
adc
data16
or
add
les
aad
xor
js
adc
insb
loope
or
mov
not
ror
sbb
mov
mov
call
dec
xchg
fistps
iret
aam
mov
mov
push
popf
push
inc
je
cmc
pop
mov
add
fs
or
pop
nop
cli
sub
or
das
pop
push
add
sbb
pop
lret
inc
pushf
lods
mov
and
fdivs
mov
pop
nop
lods
loopne
push
out
add
mov
mov
arpl
stos
mov
jle
and
test
repz
mov
outsb
lods
fcomp
bound
and
sbb
movsb
out
cmc
fdivrl
fisttpl
lret
mov
push
inc
ljmp
jno
xor
mov
fistps
roll
sbb
stc
stos
jae
test
push
sbb
xchg
call
mov
movsb
loopne
jl
stos
fidivrs
sub
scas
pusha
cld
gs
xchg
sub
psubb
push
popf
jecxz
and
pushf
mov
outsl
rcr
xchg
inc
jle
dec
mov
cmp
hlt
jecxz
ret
push
pop
into
lods
cmpsb
vpmadcsswd
xor
fidivrl
loopne
xchg
jo
arpl
jecxz
lods
pusha
adc
insl
insl
mov
loopne
dec
pop
call
and
xor
scas
pop
movsb
cs
jge
mov
shrb
xor
lds
and
push
xchg
movsl
les
push
nop
push
inc
inc
sbb
dec
cmc
stos
fildll
xor
xor
mov
dec
mov
sbb
xchg
dec
mov
sub
add
cmp
or
pop
mov
cmp
inc
mov
fcoml
or
outsl
jo
cld
dec
in
stos
jp
inc
cmpsl
pop
inc
sbb
ds
cmp
daa
dec
jne
clc
push
mov
sub
push
push
jmp
arpl
fstl
mov
pop
fisubrs
mov
das
xor
xlat
push
dec
and
clc
and
pop
mov
int3
jb
jge
mov
mov
mov
inc
dec
lods
dec
leave
fnstsw
lock
adc
cmpsb
pop
out
fmuls
pop
lret
leave
xor
fsubl
outsl
pop
sarl
stos
stc
cmp
add
fcmovb
int3
pop
lahf
jns
mov
lods
lea
sbb
stos
fwait
push
out
mov
sub
mov
test
jp
add
and
push
subl
pop
stos
and
and
add
mov
jg
dec
ret
shr
sti
repz
rclb
orl
pop
adc
pop
data16
loopne
add
cmpsl
jae
pop
or
mov
xchg
fs
aad
sarb
sub
test
mov
mov
loop
cmc
jnp
push
stos
dec
sub
sti
pop
sub
fwait
out
outsb
add
and
data16
movsl
es
in
add
and
dec
testb
mov
cmp
or
add
decb
popa
lahf
ds
mov
jg
cmpsl
lret
jmp
add
movsl
pop
outsl
or
jp
xchg
push
in
or
ret
cmp
rcl
fiaddl
gs
pop
ljmp
cmp
dec
mov
sub
test
shlb
inc
icebp
sbb
adc
dec
fadds
cmp
lods
add
psrlq
dec
sub
bnd
add
xor
std
lcall
in
or
and
jae
stos
fcomps
out
cmpsb
fstpt
leave
jmp
pop
xchg
popa
mov
jl
push
xlat
dec
out
add
push
data16
lods
sti
fbld
ja
shlb
mov
pop
popa
out
xorl
movsb
stc
mov
data16
xchg
xchg
inc
sbb
movsb
pushf
sub
fwait
pushf
sub
mov
push
ja
std
loop
in
adc
sub
sbb
es
sbb
int3
test
fs
pop
sbb
pop
aas
push
add
fidivrl
insl
xchg
xlat
adc
icebp
xchg
mov
repz
lock
vunpcklpd
in
shrd
ficoms
inc
aad
xor
loope
mov
stos
mov
fcomps
push
cwtl
jecxz
out
mov
test
test
lret
imul
mov
rclb
rclb
pop
jmp
jmp
push
out
rcll
sbb
mov
jmp
dec
pop
dec
int
stc
loopne
xor
int
xchg
movsl
or
xchg
sbb
dec
addb
jg
and
and
cmp
push
inc
das
add
inc
rcll
dec
jp
and
scas
push
sbb
xchg
inc
insl
notl
idivl
movsl
std
lea
lds
mov
jne
sti
rcrl
sub
mov
lahf
sbb
adc
add
repnz
aaa
std
jae
and
test
jmp
js
dec
ret
mov
pusha
aas
mov
push
add
pop
test
es
jge
mov
cmpsb
sbb
pop
sbb
or
mov
and
and
js
jbe
sbb
rclb
arpl
and
icebp
or
jg
or
pop
jmp
push
cmpsb
xchg
shl
mov
cmp
pop
xor
in
or
sub
inc
cmpsl
jle
ret
push
mov
sub
sbb
inc
lcall
jmp
mov
lods
jmp
sbb
mov
or
adc
jle
sub
push
and
pop
cwtl
aaa
leave
int3
lcall
das
into
fxch
sub
jmp
pop
repz
sub
lcall
jp
sub
cmp
fisubrs
xlat
cmpsl
mov
rorl
inc
dec
mov
imul
out
nop
loop
fdiv
sti
mov
push
popa
dec
dec
and
jae
sar
fmuls
xor
enter
cld
stc
lahf
inc
insb
pop
mov
mov
push
jle
sbb
fwait
pushf
mov
shl
mov
enter
dec
sbb
mov
imul
or
mov
jb
sub
xorl
xchg
mov
pop
xchg
jg
jp
cwtl
int
js
lds
dec
aas
mov
outsl
mov
lcall
mov
jp
mov
mov
inc
push
fcompl
in
inc
loop
mov
jmp
sar
inc
xor
int
int3
inc
ror
inc
push
inc
jmp
lahf
push
repz
ror
push
dec
out
loopne
fwait
mov
push
cmp
add
sbb
icebp
ja
loope
dec
add
rcr
xor
dec
add
pop
test
add
xchg
add
jp
loope
dec
pop
into
fmull
out
dec
jbe
lret
mov
cld
pushf
popf
rcrl
shrb
out
and
mov
lods
jae
sub
out
sub
into
pop
fwait
sub
loopne
or
xlat
dec
and
aaa
ljmp
sbb
loopne
pop
xchg
adc
fs
scas
imul
and
int3
xor
call
rclb
lods
fisubl
mov
mov
aad
add
ljmp
or
inc
into
shr
push
data16
mov
out
insb
sbb
xor
loope
sar
and
push
dec
lods
fnstcw
dec
mov
fidivl
lea
xchg
cmc
inc
jns
sub
cmp
mov
dec
aad
cmp
pushf
inc
pop
lret
loope
sub
adc
lods
hlt
shlb
pop
jge
gs
out
cmc
pop
inc
xor
mov
inc
adc
testb
jne
mov
and
inc
dec
cmp
add
shll
fucom
mov
ss
push
arpl
pop
pop
dec
into
jg
jo
xor
mov
sti
lock
push
mov
arpl
mov
mov
jns
icebp
fidivrs
mov
in
shll
out
scas
je
cmpb
stc
mov
clc
out
mov
jb
xor
int3
inc
call
aaa
out
or
xchg
pop
cmp
dec
fs
dec
xor
sbb
cmp
pop
mov
push
jp
clc
adc
adcl
jb
scas
inc
adc
sbb
iret
movsb
xchg
cmpsl
call
sub
stos
push
stc
test
lea
ds
ljmp
andl
sbb
mov
sti
cmpsl
lret
icebp
enter
lds
pop
std
and
imul
int3
icebp
js
pop
cs
cmp
div
sub
mov
aam
or
sbb
stc
inc
dec
repz
jb
inc
jge
shrb
xor
out
xchg
jge
imul
movsb
cmp
push
jecxz
pop
and
outsl
stos
leavew
adc
out
sbbl
daa
mov
rcrb
icebp
dec
xchg
cmp
pop
stc
enter
or
pop
scas
inc
pop
and
pop
mov
jnp
and
outsb
iret
icebp
mov
mov
daa
add
cmp
fcompl
lcall
jns
clc
adc
or
test
les
push
jae
pop
inc
adc
cmpb
out
fs
fistl
addr16
data16
ljmp
inc
lods
xor
pop
sbb
add
sbb
ljmp
adc
mov
jbe
dec
je
jmp
rcl
movsb
dec
xchg
jecxz
sub
dec
icebp
dec
inc
pop
pop
jbe
test
mov
cli
sbb
sti
mov
mov
xor
xchg
pop
dec
xor
loope
push
rclb
fidivrl
rorl
mov
sub
lea
stos
shl
xchg
cmp
pop
test
and
mov
psraw
int
ret
dec
enter
roll
sub
pop
ljmp
sub
xchg
mov
jae
adc
adc
insl
fildl
mov
test
mov
fiaddl
movsb
subb
out
lret
mov
ret
insb
ds
pop
imulb
xchg
pop
cld
jp
cmp
dec
lods
ja
dec
pop
fisubs
movsb
bound
mov
aas
adc
cltd
icebp
mov
loop
idivb
int3
bound
push
inc
movsb
jp
fidivrl
cld
data16
popa
sbb
xlat
sub
cltd
xchg
in
mov
mov
inc
sarl
jb
cmp
leave
jb
mov
outsb
cs
jmp
adc
xor
scas
sahf
not
test
les
scas
sub
jns
dec
cmp
mov
or
inc
or
jo
mov
jbe
inc
xchg
mov
es
jge
ljmp
xchg
cmp
arpl
xchg
push
movsl
jge
cmp
fldt
fisubs
push
xchg
cli
add
sbb
cwtl
xchg
dec
mov
pop
mov
and
and
mov
inc
mulb
sub
adc
jb
push
push
jo
aad
dec
cmp
pop
mov
mov
insl
aam
jmp
push
inc
aaa
and
or
call
jns
les
lods
fdivp
negl
and
xlat
add
sbb
std
cmp
aas
inc
sbbl
jno
push
sub
scas
push
int3
ret
cmp
aad
gs
push
fadd
andl
lock
inc
outsl
mov
jo
decb
paddd
mov
push
roll
adc
cmc
jl
jp
test
jge
lcall
mov
mov
sahf
das
sahf
in
xor
int
lret
or
cmp
sbb
xchg
ret
cmc
sbb
mov
push
xor
popf
jnp
sbb
jo
inc
sub
sub
imul
lret
mov
ljmp
das
jle
fucomi
aas
idivb
hlt
jo
cmovnp
pushf
in
xchg
fisubs
push
test
pusha
sub
ds
into
xorb
mov
jecxz
orb
mov
dec
cmp
cs
mov
data16
fisttpl
pop
inc
es
add
add
xchg
fildll
sbb
in
sarl
lahf
xchg
pop
push
jne
aas
push
das
cmp
fsubl
push
cmp
bound
in
movsl
aam
pop
adc
out
dec
test
fdivrs
pop
ss
ror
or
pop
pop
hlt
out
data16
into
cmovo
movsl
inc
push
xor
mov
dec
ss
mov
xchg
cmp
push
xchg
ss
ljmp
cmp
imul
pop
dec
pop
and
stos
push
pusha
lahf
sub
repnz
mov
sarb
cmp
cmpsl
scas
jae
insl
out
out
inc
push
iret
pop
lea
fnstsw
mov
mov
add
out
sbb
ret
test
sbb
and
loopne
in
lds
popa
sub
icebp
pop
dec
fsub
jmp
push
or
pop
iret
test
outsb
cmp
sbb
loope
test
push
inc
movsl
adc
xchg
or
mov
dec
mov
or
pop
ret
stos
incb
mov
cltd
in
inc
leave
fsubl
cmovle
or
mov
ds
ret
jge
mov
xchg
xchg
and
rorl
add
inc
fnstsw
push
xor
mov
aam
ltr
dec
push
dec
push
push
xor
sub
imul
xadd
pop
pushf
pop
inc
pop
aam
leave
lahf
nop
pcmpgtd
pop
sahf
push
aam
je
push
ja
jne
rcr
push
shlb
leave
in
mov
jmp
lds
mov
push
inc
mov
lock
call
mov
hlt
jmp
mov
jo
lods
insb
fs
cld
mov
xchg
test
inc
jae
andl
hlt
pop
sbb
es
gs
stc
loope
mov
ja
ret
dec
pop
mov
cwtl
fcomps
ds
adc
out
stc
lods
mov
mov
sbb
jb
jnp
mov
sarb
fdivs
sbb
imul
dec
dec
call
sbb
test
mov
xchg
xchg
mov
test
fucom
cld
call
movsb
pop
pop
pop
dec
mov
js
cmp
sbb
ljmp
xchg
mov
xchg
aas
cli
pop
lods
adc
iret
mov
les
dec
xlat
push
hlt
test
cmp
ljmp
fldl
imul
notb
ljmp
xchg
into
ss
pusha
mov
jl
ljmp
dec
push
mov
test
jecxz
out
mov
mov
stos
call
dec
jbe
imul
mov
fildll
sub
mov
xor
sbbl
testl
or
shll
dec
adc
lods
inc
xchg
jge
rol
ds
repnz
adc
xor
xor
adc
mov
cmp
icebp
mov
xlat
mov
sbb
pop
mov
cld
xor
mov
movsl
lods
xor
iret
movsb
fwait
cmp
jnp
mov
cld
mov
arpl
pop
lock
dec
xlat
sahf
testl
arpl
mov
jecxz
lahf
jge
test
xchg
lods
repz
decb
mov
test
stc
clc
cmp
sbb
dec
or
cmc
imul
neg
add
mov
xchg
push
cs
test
mov
fdivrl
frstpm(287
sub
loope
inc
sbb
or
popf
ja
out
stos
xchg
xchg
adc
test
mov
cmp
ljmp
xchg
lahf
adc
inc
popa
pusha
inc
ss
pop
shlb
sarb
or
mov
pop
push
sarl
xchg
cwtl
enter
push
inc
inc
sbbl
mov
cmp
cmp
mov
and
clc
mov
subb
aas
popf
xchg
mov
jp
xor
xchg
cli
rcrb
mov
xchg
out
cmpsb
movsl
cltd
ja
pushf
mov
cmp
mov
fisubl
xor
xchg
mov
dec
xchg
push
xchg
xlat
fwait
dec
jne
mov
jo
fwait
icebp
jnp
bound
xchg
adc
pop
pusha
push
add
popf
sub
lock
hlt
inc
push
daa
mov
lods
pop
jg
aam
mov
push
jl
shlb
insl
dec
dec
mov
scas
jle
or
cmpsl
aas
pop
lea
outsb
dec
dec
sbb
cmp
push
fldt
lock
cld
mov
and
or
and
daa
in
in
jl
xor
icebp
in
xor
sub
cmpsb
push
dec
mov
sbb
fimuls
mov
and
push
or
nopl
lret
or
inc
dec
shlb
cmp
lods
scas
ret
and
cmp
sbb
push
or
leave
ror
fdivs
or
xchg
jecxz
mov
xor
lods
push
lahf
inc
jecxz
jp
sub
lea
fstl
sub
adc
repz
sbb
mov
inc
or
mov
mov
fldcw
mov
jb
fadd
sub
add
or
push
mov
daa
sbb
add
test
popa
inc
hlt
inc
js
cmp
lds
cwtl
mov
push
lcall
xchg
jl
ret
cmp
push
or
adc
lret
call
sub
xor
stc
test
iret
adc
mov
inc
loop
andb
dec
stos
lds
lahf
test
fists
mov
pop
vmovdqu
mov
or
jmp
jmp
or
and
cmp
mov
shll
loope
test
lret
mov
xor
nop
das
xchg
cmp
cld
mov
mov
es
and
or
mov
test
lret
js
mov
subl
fistpll
push
mov
or
call
jmp
lahf
or
lahf
cmp
rcll
stos
mov
mov
enter
jno
je
push
mov
fiaddl
sahf
loop
inc
dec
call
jp
xor
adc
cmpsl
out
dec
pop
ja
clc
xchg
add
cmp
push
loop
xchg
addr16
pop
dec
xchg
aas
divb
mov
push
push
xchg
cli
sub
stos
adc
adc
pusha
insl
mov
push
jp
sbb
in
out
push
mov
add
jl
enter
adc
jecxz
sbb
jecxz
sbb
dec
out
inc
ret
mov
sub
push
sbb
xchg
testb
pusha
and
mov
and
sbb
dec
jae
icebp
mov
or
daa
and
cltd
les
lock
inc
ds
mov
imul
inc
test
dec
cmc
inc
add
jge
mov
cli
in
push
jp
or
inc
sarl
cmpsl
xchg
daa
jge,pn
jp
stos
adc
popl
test
fsubp
inc
cmp
mov
notl
in
ds
mov
xlat
add
das
into
dec
sub
inc
subl
add
roll
js
adc
or
loope
add
enter
mov
js
sbb
test
rorl
iret
push
push
movsb
or
jle
push
xor
cmpsb
rcrl
aad
mull
popa
sarb
rcl
gs
aam
pop
cld
int3
cltd
xchg
inc
rcrb
daa
lock
fsts
mov
jno
andb
nop
adc
xor
adc
in
mov
mov
int
pop
mov
sub
add
push
mov
imul
dec
outsb
mov
mov
mov
xchg
lods
outsl
call
scas
loope
pop
xor
pop
sbb
inc
je
inc
mov
in
dec
xchg
into
or
jle
mov
mov
lret
hlt
mov
int3
jno
mov
or
push
in
mov
ja
mov
inc
repz
daa
nop
ret
ds
sbb
mov
mov
pop
mov
pop
fwait
imul
push
imul
jne
cmpb
dec
add
stc
sti
pop
int3
lcall
cld
sbb
jno
test
fs
or
es
mov
arpl
icebp
xchg
dec
mov
lahf
outsl
sbb
sbb
hlt
mov
es
adc
cld
jbe
insb
push
sbb
jle
scas
xlat
js
pop
mov
lock
es
sbb
je
ss
dec
xlat
and
rcrl
bound
leave
jo
in
xchg
adc
stos
fmulp
pop
aaa
or
add
or
add
or
adc
in
and
loop
loopne
js
mov
or
mov
stos
adc
jbe
aad
pop
cmp
add
jne
jae
dec
mov
dec
or
loope
arpl
in
add
push
xor
rcrb
lcall
js
xlat
iret
pop
add
fists
pop
test
testl
lods
dec
pusha
xchg
xchg
cmp
mov
xchg
aas
or
add
lods
mov
lea
jge
mov
add
cmc
add
test
push
lahf
or
je
pop
lret
add
out
dec
sar
cli
xchg
mov
xor
jb
int
daa
jge
jno
push
imul
pop
int3
dec
cmpsl
sahf
or
cmp
popf
mov
lds
loopne
inc
mov
adc
xchg
dec
mov
out
dec
js
sbb
sub
repnz
xchg
outsb
adc
imul
cmc
mov
imul
fucomip
cmpl
into
and
jl
test
popf
in
jb
movsb
sbb
stos
fabs
cmp
mov
xchg
dec
xor
adc
out
pop
xor
jp
or
ss
push
pop
in
xor
in
add
movsb
xor
movsb
outsl
andb
lds
scas
push
xor
mov
cmp
adc
push
int3
push
xorl
cld
pop
or
xor
xchg
pop
inc
pop
test
in
testb
es
dec
mov
push
std
dec
inc
pop
xor
test
fstl
aam
push
lea
mov
sti
mov
mov
fninit
test
repnz
test
dec
fildll
imul
nop
fcompl
jl
repz
outsb
shlb
inc
gs
loope
les
xchg
xchg
and
aas
les
repz
adc
add
out
xchg
cmp
jmp
leave
push
dec
inc
stc
fistps
mov
sti
mov
in
in
rorb
sub
or
nop
mov
and
and
cmp
cmp
cmp
ret
leave
jle
stos
mov
stos
cmpl
or
outsl
or
dec
push
mov
in
enter
scas
lea
std
jnp
ja
mov
ffree
ss
pop
sbb
lcall
mov
stos
xchg
push
out
outsb
and
jns
ss
leave
pop
scas
push
xor
jle
pop
inc
ret
or
out
push
mov
enter
in
loope
inc
mov
mov
mov
es
cwtl
xor
pop
les
outsl
jecxz
les
shl
pusha
shlb
insb
ljmp
imul
cltd
insl
jecxz
pusha
cmp
lods
stc
repnz
sub
jmp
ja
pop
movsl
imul
xchg
push
cltd
cmp
pusha
adc
mov
rolb
ficoml
movsl
jb
sub
adc
out
lret
or
ror
es
fsubrs
pushf
outsb
jns
push
leave
adcl
icebp
outsl
pop
sbbb
scas
imul
or
test
mov
push
or
fldt
jmp
adc
std
fisttpll
push
jecxz
mov
fiaddl
adc
add
das
jne
sbb
pop
rorb
in
in
arpl
lret
clc
lahf
out
imul
cli
and
nop
movsb
jmp
mov
and
loopne
daa
inc
push
pop
sbb
dec
or
pop
sbb
roll
mov
jg
mov
fildl
shl
add
in
push
adcl
addb
insb
jg
lods
xchg
xor
xchg
std
data16
stos
xor
xchg
scas
cmp
or
jno
je
dec
pop
add
xchg
arpl
push
cmp
lcall
or
in
jl
mov
xchg
mov
mov
icebp
sub
aas
xor
and
incl
and
add
jle
imul
arpl
movsb
adc
inc
out
cmpsl
scas
pusha
cmpsl
fildl
pop
cmp
lahf
pop
push
cld
dec
sub
fidivs
xor
jge
cmc
cmc
push
js
sahf
testl
adc
xor
cmp
push
gs
sbb
or
push
add
cmp
and
xlat
and
movsl
sub
les
lea
sbb
insb
xor
dec
imull
pop
mov
aas
lock
pop
cld
ljmp
jnp
cmp
sub
adc
cmp
xchg
loope
inc
or
mov
xchg
add
mov
movsb
cmpsb
sbb
call
or
push
inc
xchg
mov
or
xchg
cmp
lahf
cmp
and
repnz
in
lcall
pop
fnsave
xor
fmul
cmpsl
xchg
xchg
shufps
test
sub
in
jne
push
push
and
in
lds
shrb
or
xor
sahf
std
test
sti
sub
and
sti
arpl
das
inc
cmp
mov
mov
in
mov
sbb
sub
adc
lds
dec
into
cmp
adc
pop
pop
int3
sti
jbe
dec
ljmp
sbb
lds
ljmp
adc
es
push
add
cmc
popa
fwait
mov
jle
test
hlt
rcr
into
imul
cmp
jo
cltd
mov
test
xor
sub
std
jbe
xchg
or
icebp
adc
jle
in
cmc
popf
dec
push
test
out
pop
jle
xchg
pop
xchg
dec
fwait
mul
jl
or
out
xor
and
jmp
jb
scas
gs
dec
push
jbe
movsl
push
jno
dec
xchg
or
dec
js
add
and
test
push
aad
xlat
mov
inc
imul
cmpl
pop
fmuls
loop
push
nop
mov
outsb
sub
jp
sub
xor
mov
mov
inc
enter
shr
lcall
fsubrl
mov
pop
sub
and
pusha
mov
jo
mov
lret
inc
xchg
mov
ret
into
testb
int3
xchg
sub
and
sbb
ret
or
or
push
jmp
lret
mov
add
mov
xor
inc
cs
call
push
ret
xchg
stos
dec
mov
sub
dec
shlb
imul
mov
jae
mov
adc
jbe
sub
movsl
lea
add
outsl
mov
jmp
sbb
bound
and
out
cmp
sahf
jno
enter
xchg
add
fldenv
push
inc
loopne
out
fdivrs
stc
cld
cmp
push
loope
insl
adc
sub
in
xor
sbb
out
sti
jp
imul
pop
lret
pop
test
add
test
fldl
scas
jo
rorb
lret
sub
nop
dec
mov
mov
dec
mov
iret
fwait
pop
and
ja
jmp
enter
xor
add
push
lods
xor
int3
sbb
ret
lahf
cmpl
notl
sarb
cmc
xchg
inc
dec
in
and
inc
cmpsb
scas
pusha
or
nop
notl
sub
jmp
mov
out
jo
pop
decl
inc
xchg
inc
jbe
out
mov
iret
std
popf
pushf
bound
jp
int3
mov
push
inc
arpl
fldcw
test
sub
sbb
mov
pop
jl
mov
dec
ret
ds
pop
push
inc
sbb
dec
insl
pop
lahf
sub
leave
ja
cld
dec
aad
fistl
or
test
test
aaa
lea
push
cld
add
add
mov
jmp
mov
rclb
fbstp
mov
fsubrs
cmpsb
mov
xchg
mov
or
jge
gs
inc
test
std
rorb
cwtl
adc
jne
lds
xchg
pop
push
mov
xchg
jnp
mov
fcoml
sbb
insl
ss
inc
int3
out
jge
call
shrb
mov
lods
add
or
mov
mov
in
mov
cmp
mov
sahf
jo
pop
lret
movsl
fstpt
adc
dec
sbb
ja
xchg
out
test
fcoms
ror
dec
pop
xchg
hlt
or
movsl
push
ljmp
push
cld
push
enter
fsin
and
lahf
pusha
mov
xor
jb
pushf
jp
cmp
cld
xor
out
xchg
or
sbb
xchg
xchg
popa
pop
add
repnz
inc
sub
rcll
add
icebp
jne
out
fistpll
es
cld
add
cmp
push
lret
mov
jno
jno
adc
or
enter
mov
cs
xchg
mov
iret
add
sbb
mov
or
cwtl
ret
mov
fstpl
popa
nop
sub
fstp
adc
aas
arpl
pop
and
pop
mov
cltd
popa
imul
stos
add
dec
jmp
xor
inc
stc
xchg
xorl
int3
add
jmp
scas
jno
incl
insl
shll
jno
sub
out
jmp
or
nopl
fs
neg
jecxz
divb
fmull
arpl
adc
mov
adc
xchg
cmc
push
push
cmpsb
or
aas
dec
xor
xchg
push
shrb
jnp
sub
icebp
dec
add
mov
add
cmpsb
xor
jbe
push
sbb
repnz
stos
mov
pop
out
cmp
xchg
hlt
sbb
in
adc
mov
lock
push
repnz
or
cltd
mov
push
jmp
sub
jecxz
push
mov
je
repnz
xchg
mov
push
js
lods
mov
xchg
jge
enter
mov
icebp
jmp
and
filds
jmp
lahf
xchg
cmp
inc
stc
jg
ja
test
stc
loopne
xor
sub
pop
push
movsb
xchg
cmp
iret
pop
adc
add
cltd
andb
enter
sbb
add
or
jbe
aad
cmp
xor
cmp
arpl
xlat
xor
fs
pushf
mov
inc
jecxz
les
cmp
repnz
or
in
xchg
test
rcrb
insb
es
and
jge
repz
iret
stos
push
sub
gs
jp
sub
lock
cwtl
jae
pop
mov
adc
adc
push
js
jmp
fstpt
arpl
xchg
jle
loopne
mov
enter
loopne
sbb
dec
jmp
and
pop
dec
insb
jg
orl
or
mov
push
cmp
movsb
dec
push
inc
mull
add
xchg
setae
rcrl
inc
daa
xchg
int
fiadds
aaa
mov
adc
ljmp
jmp
sbb
mov
stos
cmpsb
sbb
imul
pop
inc
loope
push
push
mov
and
test
adc
jb
pop
clc
sub
xor
nop
fildl
mov
adc
je
push
addl
sbb
lret
push
cmp
in
insb
cmp
push
testb
imul
jae
sub
cltd
mov
pop
xchg
nop
add
fnsave
xchg
pop
in
jmp
mov
nop
or
shrl
pushf
daa
ljmp
cmp
rcrb
xchg
mov
outsb
xor
sbbb
cmp
mov
dec
xchg
cwtl
or
mov
mov
movsl
enter
inc
in
pushf
dec
sar
ret
test
adc
xchg
pushf
xor
subb
inc
or
cld
dec
jge
dec
sarl
add
ja
scas
adc
popf
cmpsl
fdivrs
mov
push
lea
sbb
pop
js
xor
rorb
dec
test
add
add
gs
repz
sbb
push
fdivrp
sti
mov
jecxz
cmp
adc
or
and
adc
imul
pop
sub
cmp
loopne
adc
fdivrs
xchg
lea
mov
add
jle
sub
es
xchg
shr
shl
adc
mov
sbb
sub
dec
fwait
js
push
inc
shlb
mov
mov
add
loop
sub
cmp
inc
or
fs
lahf
es
std
cmpl
js
cli
mov
push
pop
mov
in
cmp
jo
add
repz
outsb
in
push
or
inc
testb
lcall
pop
data16
sbb
nop
scas
shll
test
jmp
push
aam
push
pusha
push
push
aaa
add
push
xchg
mov
lahf
movsb
mov
mov
popf
mov
rolb
or
sbb
adc
pop
xchg
dec
cmpsb
mov
add
add
and
aas
adc
and
xor
mov
outsl
test
test
fimull
int
xchg
lea
cltd
test
dec
mov
jle
in
out
add
dec
mov
jmp
mov
imul
call
pop
push
test
out
aaa
and
dec
and
cwtl
out
cmp
jae
add
clc
push
sub
test
dec
cmc
cmp
pop
pop
dec
cli
jo
cmp
and
loop
push
cld
js
stos
and
or
fcoml
jl
int3
pop
sub
in
sar
jnp
and
add
rcrb
enter
dec
fnstcw
sbb
push
sbb
rolb
mov
add
and
popf
dec
js
sub
add
sbb
pop
out
push
ja
int3
movsb
add
and
scas
arpl
pop
mov
jmp
imul
insb
dec
xchg
jmp
sub
mov
mov
sbb
mov
inc
mov
lock
je
xor
sbb
in
mov
adc
stos
out
mov
and
pusha
in
movsb
xor
and
testl
jge
mov
xor
push
gs
addr16
fucom
inc
call
inc
out
push
pop
jbe
pop
and
in
jmp
xor
mov
mov
pop
movntps
mov
lock
dec
adc
xchg
push
popf
inc
push
insb
gs
dec
jg
fsubrs
mov
dec
lcall
mov
adc
jb
stos
sarl
mov
sub
adc
hlt
gs
or
xor
test
adc
sub
add
mov
rclb
sub
in
and
push
inc
je
cld
and
dec
insb
sbb
inc
xchg
dec
xor
test
lods
dec
int
insl
or
test
xor
add
xchg
outsb
sub
jg
push
nop
int
gs
shlb
scas
jae
std
xlat
mov
adc
outsl
push
jae
pop
dec
jge
xor
sub
pop
enter
dec
stos
les
out
sbb
adc
mov
test
shlb
shrb
xchg
or
cmp
jnp
pop
dec
sbb
add
in
jo
mov
in
xchg
lahf
sub
sub
js
popa
jnp
sbb
sbb
in
aad
adc
fsub
loop
mov
repnz
pop
repnz
fcoml
ret
test
cmp
xor
shlb
cmp
xor
add
mov
push
push
jmp
in
xchg
sbb
add
cmpb
leave
pusha
sbb
xor
mov
fstl
clc
and
sbb
sbb
pop
mov
sub
jbe
sbb
jb
push
jbe
call
iret
insb
mov
imul
pop
sub
outsl
pop
jo
mov
adcb
jl
jo
mov
or
and
cmp
xchg
call
stos
sub
insl
push
jbe
imul
fcompl
jmp
adc
ss
sbb
das
xchg
xchg
jge
shll
fcom
push
cmp
dec
movsb
mov
adc
adc
mov
cmp
rcll
imul
mov
stos
ljmp
mov
dec
fistpll
popf
pop
lret
nop
or
jnp
cmp
push
add
sahf
rolb
int3
fcomi
test
dec
inc
ret
cmp
dec
mov
inc
loopne
xor
lret
fimuls
mov
push
ret
mov
add
push
test
mov
scas
lahf
sbb
imul
sar
pop
leave
nop
shl
frstor
pop
sbb
ret
test
loopne
mov
jge
xchg
lods
imul
mov
out
push
mov
or
in
pop
mov
repnz
rcrb
xchg
cmp
jle
push
pop
loope
test
test
jne
push
add
out
push
push
bound
xlat
mov
jle
in
mov
leave
fwait
push
xlat
and
bound
mov
or
sbbb
sub
mov
pushf
testb
push
and
ret
outsb
ljmp
pop
or
or
push
jle
lods
mov
leave
lahf
or
push
jg
xlat
inc
mov
lods
mov
ret
jae
lods
or
and
jnp
push
xchg
cmpl
jp
push
aad
mov
mov
cli
mov
sub
ficoml
jmp
jo
insb
fs
xchg
add
arpl
lods
loope
xchg
cmp
adc
test
jle
ret
pop
sbb
inc
jbe
add
lret
movsl
imul
add
loope
pop
mov
js
pop
add
sub
movd
xchg
jp
push
lods
jle
sbb
cli
incl
sbb
imul
out
xor
stos
jle
mov
jns,pt
outsl
or
mov
pop
out
sub
pop
or
jnp
mov
dec
movsb
adc
push
cld
cmp
cwtl
mov
push
mov
fidivrl
jg
aam
mov
cld
and
cmc
mov
int
mov
cmc
fstpl
nop
jbe
cmp
outsb
out
test
adc
in
xor
mov
rcr
loope
cwtl
mov
add
repnz
jne
add
add
dec
stc
scas
mov
icebp
and
pusha
mov
fisttpl
dec
subl
cmp
mov
xchg
jmp
scas
out
stos
jnp
jle
cmp
cwtl
push
fidivrl
dec
jae
out
in
or
rolb
scas
fcmovne
repnz
jnp
dec
xchg
pop
test
add
push
cltd
jg
fldcw
int3
cmp
push
mov
pop
cs
es
mov
pop
outsl
test
jg
pop
and
pop
push
jecxz
jno
jae
lods
fsubl
mov
mov
dec
ja
xorb
push
ja
rcrb
push
icebp
sbb
adc
repnz
in
inc
push
aas
pop
adc
imul
sub
int3
int
xor
loope
sub
sub
mov
xor
ds
and
adc
scas
out
push
lea
jbe
cs
inc
pop
add
xchg
jae
daa
aad
outsb
cmp
arpl
loopne
int
into
hlt
mov
nop
mov
mov
je
mov
sbb
sbb
add
dec
loop
jle
mov
sbb
ret
xor
popa
pop
in
lret
mov
cmc
sarl
addb
push
cmp
xorl
scas
cmp
out
lock
inc
orb
gs
js
es
fisubrl
xchg
jmp
add
dec
outsl
insl
xchg
hlt
fs
pushl
loopne
or
jecxz
xor
ss
lcall
pop
xor
pop
cld
inc
mov
push
mov
sub
or
add
movsb
gs
movsb
fwait
inc
pop
mov
mov
pop
gs
pushf
popf
das
jge
xor
das
inc
fcompl
mov
rcrl
or
mov
and
jo
cli
push
repz
idiv
jo
imul
dec
lea
jg
xor
xor
iret
pop
cmp
iret
mov
js
push
cwtl
dec
dec
jae
rcll
test
cmp
or
cmp
mov
ljmp
loope
adc
nop
xor
enter
or
test
popa
mov
push
xchg
rcrb
cltd
fdivr
jno
subb
neg
pop
arpl
addr16
dec
loopne
test
negb
outsb
cmp
lahf
mov
adc
sub
push
iret
int3
xor
enter
dec
pop
jns
leave
xchg
push
vshufpd
sti
notb
ss
ljmp
scas
cmp
jae
jne
setae
js
xchg
insb
adc
cmovns
add
ficoml
push
shll
repnz
mov
pop
jge
inc
je
jge
outsb
iret
mov
xchg
inc
inc
push
or
rclb
sub
daa
or
ds
popa
pop
aaa
sbb
clc
jnp
mov
pcmpeqd
cmpsl
leave
fisubrs
jns
xor
sub
movsl
sbb
mov
das
sbb
test
jmp
dec
push
xchg
jb
fwait
cmpsl
iret
adc
scas
frstor
sti
add
in
cltd
bnd
loope
addr16
int
xchg
andb
inc
mov
jbe
push
cmp
test
mov
das
das
jl
dec
jmp
inc
imul
pop
add
dec
push
jge
mov
iret
std
loop
mov
stos
rcll
mov
cmp
cmpsl
mov
loope
cmpsl
addr16
popf
notb
aaa
cld
dec
adc
test
nop
sbb
ds
and
jne
lea
or
sub
adc
loop
jecxz
sbb
mov
mov
popa
fstpl
jnp
push
cmpsb
dec
in
jne
sbb
mov
push
mov
scas
pop
lret
inc
inc
mov
pop
and
leave
rorl
in
and
leave
cmpsl
dec
mov
jae
stc
icebp
sbb
incl
ljmp
and
push
jl
pop
imul
clc
jb
cmpsl
jbe
int
jo
add
sti
in
mov
cmpsb
movd
add
je
mov
cltd
sub
cwtl
xorb
jl
xor
ret
lret
mov
cmp
or
adc
icebp
sbb
pop
ret
cmpsl
push
mov
adc
or
xchg
ficoms
sbb
mov
and
call
sub
leave
push
push
in
xchg
mov
iret
out
test
test
movlps
rcll
lea
lods
push
xor
mov
stos
sti
fstl
std
mov
popf
inc
in
inc
xor
push
js
sbb
test
add
repnz
decl
lods
push
int
mov
test
mov
fs
or
fcmovne
and
popa
push
subb
mov
pop
fadds
lcall
test
leave
bound
imul
cmpsb
mov
push
lods
sbb
cmp
imul
jbe
dec
scas
call
leave
movsl
lea
icebp
ja
sbb
xlat
mov
mov
cmpsl
pop
cmp
sbb
cmpsb
scas
push
ja
xchg
jb
dec
add
fidivl
mov
iret
mov
xchg
mov
jp
jb
scas
sub
cmp
lds
dec
ds
fwait
mov
pop
mov
adc
aad
add
xchg
pushf
aaa
scas
pop
inc
das
xchg
xchg
mov
xor
out
lret
jg
add
push
addr16
jae
pop
lods
test
lret
loope,pn
mov
insl
cmc
ljmp
mov
lds
out
mov
push
fsubs
sahf
adc
loopne
cmc
lods
cmp
mov
adc
movsl
popf
xorb
stc
or
movsl
into
mov
filds
jecxz
cmp
shll
in
fbstp
popa
insb
stos
repz
movsl
dec
push
add
stos
and
mov
jge
jp
push
aas
lret
cmp
fcoml
add
jnp
mov
push
fidivrs
sti
mov
jmp
sahf
idiv
mov
jbe
mov
int3
hlt
jecxz
repz
jmp
push
mov
pop
lods
iret
loope
push
jl
sbb
mov
ljmp
jle
lods
aad
sbb
je
push
pop
cmp
lahf
sbb
jnp
dec
push
lods
stc
dec
out
fisubrs
adc
mov
add
jne
and
fwait
cmp
jg
lds
cmp
jo
mov
jmp
sbb
lds
je
dec
pop
clc
bound
mulb
leave
xor
cmpsl
adc
dec
mov
xor
xor
int3
ja
push
in
or
mov
idivl
dec
lahf
mov
inc
stc
test
xchg
jmp
mov
push
mov
pop
cmc
pop
push
sub
add
jge
jg
cs
arpl
pmulhuw
mov
cmpsb
mov
movb
jl
outsl
popa
and
pop
push
js
mov
inc
pop
push
xlat
cmp
cmp
xlat
mov
test
xchg
sbb
xor
imul
or
lods
std
mov
mov
cmp
dec
jbe
sbb
jbe
cmp
loop
xor
clc
or
sbb
or
fabs
lahf
inc
sbb
out
addr16
jb
xchg
out
mov
neg
test
cmp
dec
push
arpl
addl
cmp
andb
mov
lahf
mov
sbb
jns
cmp
mov
and
cmp
stos
movl
adc
and
or
mov
xchg
jae
fwait
mov
pop
lret
hlt
pop
and
cmp
sbb
adcb
inc
scas
xchg
ljmp
scas
xlat
and
sar
adcl
shl
pop
xchg
xchg
pop
lea
push
adc
mov
add
mov
cmp
addb
inc
jne
stc
jbe
rcrb
sbb
les
repnz
jbe
jo
nop
call
push
aad
add
ja
mov
adc
adc
rolb
lret
lcall
push
mov
lret
js
mov
sub
insl
stos
icebp
rcll
arpl
rorl
lds
adc
inc
scas
mov
std
loop
jl
xor
mov
fwait
movsl
jg
fiadds
mov
mov
fwait
cli
xchg
insl
push
xchg
roll
fnstenv
aam
lcall
mov
out
rcll
outsl
adc
scas
pushf
mov
stos
mov
sub
sub
dec
dec
por
testl
aam
jno
sti
jge
aas
test
xchg
les
fmull
out
dec
fldcw
inc
pop
adcb
adc
into
aaa
popf
mov
or
pop
xor
out
push
add
adc
out
xchg
push
inc
mov
pop
jmp
fmulp
mov
rcll
fisttpll
sbb
push
jl
jno
xor
outsb
dec
and
or
sbb
rorl
and
mov
dec
push
in
shlb
sub
fcomps
xor
cmp
sub
ret
dec
leave
adc
mov
xor
lods
pusha
fcoml
imul
sub
bswap
mov
jne
and
cltd
mov
decb
outsb
out
push
test
into
adc
and
cmp
mov
mov
jp
mov
cmp
mov
and
stos
add
ficompl
mov
and
fbstp
lcall
push
jp
ljmp
psrlq
jns
out
cmp
push
cmp
cmc
xchg
cmp
sub
push
add
mov
loop
jle
std
stos
aaa
adc
adc
out
test
add
gs
jno
and
xor
mov
dec
loope
push
popf
loopne
stos
subl
xchg
negb
in
aaa
xchg
fiaddl
mov
and
loop
mov
icebp
inc
mov
xchg
dec
inc
mov
jmp
push
sbb
push
mov
mov
out
arpl
stos
fwait
jbe
mov
cmp
movsl
lcall
mov
fcoml
adc
imul
test
outsl
cmp
xchg
sub
xorb
stos
test
subb
push
jl
loop
cmp
aam
dec
testb
rcrb
sub
jecxz
jnp
jecxz
cmp
ret
sbb
loope
pop
lcall
mov
push
shlb
shll
ret
ret
jecxz
fdivrp
sbb
fadds
in
fwait
lcall
push
outsb
out
or
xchg
mov
jb
xor
add
leave
not
les
stos
xchg
cmp
sub
leave
stc
sub
subl
xor
push
fsubl
stc
lock
inc
pop
adc
pop
cmp
aas
fcom
popf
and
and
or
enter
gs
sahf
sub
jmp
loopne
or
mov
mov
cltd
xchg
add
mov
cmp
xchg
popa
xor
mov
call
ret
xor
sarb
pmaxsw
daa
mov
rcrb
iret
outsl
push
out
idivl
stc
mov
ss
mov
lret
jp
test
pusha
loope
jle
mov
in
dec
xchg
shrl
imul
mov
imul
jae
push
mov
int
stc
int3
fistps
xor
call
push
fidivl
lcall
pop
xchg
sub
adc
loopne
push
out
insb
mov
push
dec
inc
rcrb
inc
subl
adcl
dec
dec
dec
push
or
and
loop
dec
das
or
inc
sub
in
jl
mov
jl
sub
repz
sub
cld
jmp
js
adc
idiv
push
push
test
jge
or
mov
fdivr
cmp
inc
dec
scas
push
sbb
out
adc
mov
sub
test
jbe
fisttps
addl
inc
or
pop
scas
cmp
in
sbb
push
pop
fisubs
fs
imulb
dec
out
jecxz
and
fs
pushf
jae
adc
push
push
add
gs
push
or
lock
call
inc
mov
inc
and
mov
mov
divl
in
rol
aad
lea
iret
xor
ljmp
and
pop
adc
dec
cmp
ljmp
pop
aam
cmp
aam
roll
jmp
js
dec
stos
aas
add
insb
dec
in
mov
int
inc
inc
add
sbb
in
push
je
or
sub
pop
dec
cmc
lcall
das
daa
in
push
dec
mov
sbb
xor
jne
sub
pop
xchg
jne
dec
mov
jmp
out
arpl
xchg
daa
or
les
add
fs
test
negl
cld
test
sahf
sbb
mov
add
mov
outsb
lea
jne
insl
cwtl
in
sub
dec
sub
out
dec
iret
push
shll
jle
pop
in
sub
xor
push
inc
cld
xor
adc
or
insb
add
and
jo
lret
mov
sbb
sbb
dec
ss
push
dec
sbb
testb
adc
rol
cltd
xor
xchg
dec
cmp
fwait
lret
cmc
ds
in
push
sbb
mov
loopne
push
scas
cmp
inc
jne
and
mov
loop
sub
mov
push
scas
testb
pop
jno
lock
cmp
sub
enter
sbb
pop
cmp
and
cwtl
lret
cmpsb
push
push
xlat
das
clc
pop
loope
ret
xchg
jb
es
lock
jns
inc
or
jg
nop
or
loopne
in
test
jb
xchg
lds
sub
jg
pop
sub
adc
dec
aaa
rcrl
adc
sub
xchg
add
out
adc
inc
fdivrs
out
mov
inc
andps
push
cmp
mov
movsb
mov
jnp
mov
jne
add
push
mov
or
adc
mov
das
xor
cmp
fcoml
fdivrs
aaa
std
ss
inc
lret
and
out
aad
lds
pop
xchg
lret
das
sbb
iret
jae
inc
cld
add
push
jae
idivl
repnz
loope
hlt
enter
hlt
or
in
insl
lock
stc
xor
imul
jmp
xor
dec
mov
mov
imul
cmp
push
xor
mov
xor
movsb
icebp
push
dec
inc
std
stc
imul
insb
jg
jbe
dec
push
push
push
xchg
inc
add
lcall
and
cmpsl
test
mov
jecxz
mov
pop
in
jmp
add
cmpl
mov
cmp
mov
stc
sub
imul
mov
or
lahf
sub
sbb
loop
adc
mov
mov
dec
adc
jge
cmp
fsubr
pop
mov
mov
sahf
sarl
sub
add
mov
mov
xor
xor
mov
stos
lahf
addr16
out
cmp
inc
mov
pop
lret
addr16
ds
js
and
aam
xchg
test
in
push
jp
mov
ds
ljmp
cld
pop
sub
ret
lcall
out
mov
das
das
orb
out
and
sahf
jo
mov
sbb
mov
mov
roll
out
test
imul
pop
nop
jo
mov
imul
movsl
inc
adc
adc
icebp
scas
test
jns
jge
scas
add
or
fs
mov
xor
cs
dec
mov
in
jmp
and
xchg
fisubl
out
fst
push
int3
cs
mov
inc
shll
push
inc
fsubrl
push
jge
sub
movsb
sbb
mov
xorb
ficompl
push
sub
xchg
stos
divb
jbe
or
or
cmp
dec
cwtl
add
aaa
out
jns
rcrb
jp
pop
out
xchg
xchg
push
add
lock
lods
add
xchg
orl
call
lods
jns
pop
imul
jno
push
push
rcr
mov
jne
leave
jmp
add
inc
lods
stos
ret
or
dec
cmp
pushf
pop
pop
mov
les
pop
or
scas
lret
fidivs
stos
inc
jne
lcall
pusha
add
incl
xor
int
ret
pop
xchg
std
adc
insl
cmp
dec
mov
je
pushf
iret
mov
in
jbe
dec
movsl
jle
ret
imul
xchg
sbb
aam
mov
sub
cmp
or
xchg
mov
sysenter
inc
les
dec
jb
jecxz
popa
cltd
inc
mov
icebp
sub
sbb
in
jmp
sub
mov
sbb
in
sbb
ss
add
sub
adc
mov
jns
and
pop
rcrb
pop
xchg
ja
ret
adc
bnd
mov
cs
lcall
xchg
mov
cmp
ret
push
stos
movsl
xchg
and
std
add
push
fistl
xchg
adc
cmc
mov
push
cmp
xchg
push
cld
sbb
fstl
mov
shrb
or
inc
mov
xor
fnstcw
pop
std
sub
cmp
mov
mov
enter
add
mov
and
xor
rcrl
xchg
pop
in
sti
pop
lret
jns
ret
flds
leave
mov
insl
std
imul
out
stos
push
int3
lahf
mov
inc
push
jnp
fldenv
pop
ja
or
sbb
fstps
mov
sbb
mov
sbb
cmp
mov
sub
and
loop
add
pop
and
cmc
xlat
xor
pop
cmp
notl
cmp
cmpsl
movsb
ret
outsb
cmc
into
cmpsb
aaa
call
jmp
cmp
loopne
dec
movsb
add
jg
fwait
push
jg
imul
ljmp
pusha
rcrb
pop
mov
push
mov
leave
je
aaa
pop
orl
push
aam
mov
repz
or
lods
jo
push
es
scas
out
stc
cmp
dec
shll
enter
adc
lret
cmp
movsb
fldt
fsubr
and
pushf
cmp
in
push
ljmp
ret
push
add
scas
xchg
and
cmc
sub
ss
push
push
aas
add
lret
es
xacquire
ds
push
pop
cmp
shrl
push
daa
aas
sbb
pop
jo
in
or
cmpsb
pop
lahf
mov
lret
or
xchg
ret
mov
cltd
out
mov
mov
push
sub
mov
loopne
pushf
mov
sti
push
lret
jnp
out
jge
dec
sbb
pop
outsb
mov
push
ds
test
mov
into
or
add
cmp
jbe
test
adc
sahf
loop
ljmp
pop
mov
push
xor
sub
adcl
cli
lret
pushl
aad
loope
sbb
cmpsl
in
jle
repz
rcrl
and
xchg
cmpsb
cltd
push
jecxz
sub
call
out
lahf
xor
test
ljmp
xor
push
mov
mov
inc
std
test
sbb
mov
cmp
mov
je
sbb
pop
sub
dec
mov
push
enter
imul
fldt
mov
pop
fsts
fidivs
rclb
repz
inc
pushf
lds
stos
repnz
xchg
add
lret
xchg
sub
jo
lret
loopne
sti
cmpsb
pop
imul
dec
mov
jb
sbbb
not
push
nop
push
mov
push
jg
lods
jmp
mov
mov
jnp
fstl
mov
mov
sbbl
sbb
fisubrl
dec
lcall
and
repnz
aad
dec
xchg
inc
scas
adc
and
jmp
sub
int3
inc
faddl
icebp
push
adc
adc
aad
arpl
jmp
incl
rorl
pop
pop
scas
les
jl
adc
add
pop
stos
aaa
dec
add
sti
and
push
es
lcall
mov
stos
add
inc
or
pop
inc
std
dec
mov
mov
cmp
icebp
xchg
adc
xor
aam
pop
mov
sub
or
mov
enter
js
pop
stos
into
sbb
fs
das
neg
movsb
data16
shrb
jbe
or
cmpsl
jp
scas
ja
aaa
in
sbb
mov
xor
roll
xorl
xorl
shl
cltd
cmp
cli
pop
push
fs
cmpsl
int
pop
data16
dec
add
gs
and
dec
or
xchg
outsl
ds
call
aam
lret
pop
jp
or
sub
insl
test
mov
cmc
and
xchg
or
cli
cwtl
shll
movsl
adc
mov
mov
fyl2x
mov
cmp
sbb
jle
fs
mov
call
xchg
xchg
cwtl
ficoml
loop
pop
out
stos
sbb
adc
cs
lea
pop
cmp
inc
adc
sbb
pusha
fwait
or
xchg
or
es
arpl
adc
in
addr16
sti
adc
cmpsl
sbb
mov
into
mov
add
in
lock
mov
leave
or
das
jle
nop
leave
mov
cvtdq2ps
sbb
jg
cli
mov
int3
inc
pop
jmp
pop
xchg
sub
jmp
push
pop
loop
gs
push
sahf
cmp
mov
test
mov
mov
sbb
push
into
mov
mov
mov
test
adc
inc
or
sbb
mov
shll
add
ror
lds
fwait
in
ljmp
inc
push
pop
ja
repnz
inc
out
jno
mov
cmp
ficoms
mov
inc
push
sub
sbb
or
sbb
outsb
dec
das
inc
addl
ficomps
push
xlat
mov
out
pop
orb
call
mov
mov
ror
fstpl
pusha
mov
stc
inc
aaa
outsb
xor
cmp
inc
mov
pop
jnp
cmp
xchg
xchg
notl
sub
sbb
xchg
add
push
jp
mov
mov
icebp
arpl
cwtl
xchg
push
xor
add
xchg
inc
dec
cli
rorb
hlt
mov
sar
push
xchg
in
mov
test
outsb
icebp
or
fdivp
pop
push
push
jle
add
outsb
dec
and
in
loopne
aam
das
imul
fiaddl
or
je
sbb
pop
ljmp
dec
jmp
ficompl
je
mov
orl
and
shll
push
jecxz
gs
jge
call
ja
and
outsl
lds
lock
pop
adcb
testb
adc
sub
rolb
lcall
cmc
mov
mov
adc
cwtl
das
jb
cmp
pop
fcmovnu
xlat
mov
stos
out
mov
test
jmp
std
in
cmp
inc
lock
loopne
shll
mov
fsubp
jo
pusha
shrl
and
orb
scas
mov
mov
cmp
add
pop
jbe
stos
sbb
xorb
cmp
mov
adc
incb
out
xchg
ss
dec
cld
adc
arpl
pop
imul
push
push
out
dec
incl
test
jg
imul
adc
sub
dec
mov
js
mov
gs
dec
xchg
cld
icebp
xor
adc
mov
mov
movsb
xor
mov
adc
xchg
inc
xchg
ret
push
in
sbb
mov
out
daa
psadbw
adcl
push
jno
aam
add
stos
enter
je
mov
test
lea
xchg
mov
test
xor
js
fmull
hlt
jnp
pop
popa
mov
popa
jno
nop
bound
jle
pop
fiadds
leave
movsl
pop
mov
jmp
mov
xchg
inc
addr16
ja
data16
test
add
or
mov
xchg
clc
pop
xchg
adc
fcoml
push
int3
jge
ss
and
xchg
enter
mov
cli
jns
sbb
dec
sbb
into
and
stc
int3
cld
int3
scas
nop
jle
lret
push
hlt
and
fldenv
inc
ret
sbb
mov
inc
imul
mov
push
roll
lds
cmp
iret
add
fwait
cwtd
and
shrw
and
int3
movsb
ljmp
mov
dec
iret
jb
dec
fists
aaa
mov
add
mov
loop
pop
ljmp
in
jnp
clc
cli
push
xchg
jl
cmovle
sbb
dec
mov
add
cmp
sub
into
xchg
sbb
mov
or
jecxz
adc
or
xchg
mov
insb
mov
jno
xchg
cmp
push
mov
pop
cltd
mov
jne
out
rcll
mov
inc
jns
cmp
add
fstpl
in
sbb
outsb
push
sub
xchg
jnp
pop
sbb
mov
jb
out
addr16
jo
loopne
mov
cmpsb
push
fcoml
int3
negb
testb
push
inc
push
adc
les
add
mov
pop
jae
leave
clc
add
scas
lods
inc
lahf
jbe
inc
fwait
pop
dec
or
fldenv
dec
cmp
test
ret
aad
leave
aam
push
stos
shr
mov
out
jmp
inc
frstor
jle
dec
imul
cmp
or
xchg
sbb
subb
pop
jge
jge
