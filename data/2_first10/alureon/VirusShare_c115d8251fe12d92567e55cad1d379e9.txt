push
mov
sub
sub
push
push
push
xor
push
mov
call
push
call
pushl
call
mov
cmp
movzwl
lea
mov
jbe
sub
cmp
add
mov
mov
xor
test
je
mov
and
neg
sbb
and
sub
add
jmp
test
jns
push
jmp
test
je
push
pop
test
je
or
test
je
mov
mov
add
push
mov
call
push
call
lea
push
push
pushl
push
call
test
je
mov
movzwl
incl
add
add
cmp
mov
jb
xor
add
pop
pop
pop
leave
ret
xor
jmp
push
push
pushf
rdtsc
imul
pop
add
mov
and
rol
xor
pop
pop
ret
mov
push
cld
mov
mov
lods
mov
pop
ret
push
mov
sub
sub
push
push
xor
mov
push
call
push
call
push
push
pushl
push
call
test
mov
je
sub
cmp
jb
push
push
call
test
mov
je
cmp
je
push
push
pushl
mov
call
push
add
pop
jne
push
call
push
call
mov
push
push
pushl
push
call
test
jne
jmp
xor
jmp
mov
mov
mov
mov
rep
mov
pop
pop
pop
leave
ret
push
mov
sub
add
push
lea
push
mov
mov
mov
mov
rep
push
push
pushl
xor
push
mov
call
cmp
mov
jne
xor
jmp
push
call
mov
movzbl
lea
cmp
jne
movb
mov
mov
mov
rep
mov
mov
mov
mov
mov
mov
lods
mov
sub
sub
xor
sub
add
stos
cmp
add
mov
sub
test
add
rol
push
add
pop
jne
xor
mov
mov
mov
movzbl
imul
xor
push
add
pop
lea
test
jne
cmp
jne
mov
mov
mov
rep
push
push
push
push
mov
call
push
push
pushl
mov
call
xor
push
add
pop
pop
pop
pop
leave
ret
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
add
movzwl
movzwl
incl
subl
addl
add
cmp
jb
pop
pop
pop
leave
ret
push
mov
push
push
andl
push
call
mov
jmp
mov
movzwl
imul
add
mov
lea
test
cmpb
jne
testl
je
push
push
mov
mov
xor
xor
mov
and
mov
pop
pop
mov
leave
ret
cmpl
jne
xor
jmp
call
xor
divl
mov
ret
push
mov
sub
add
mov
andl
mov
mov
add
mov
add
add
mov
push
lea
push
mov
mov
mov
mov
rep
mov
sub
add
mov
imul
add
mov
mov
neg
imul
add
add
add
mov
push
lea
push
push
push
mov
call
mov
mov
movl
mov
mov
mov
lea
mov
mov
mov
mov
rep
mov
add
add
decl
mov
mov
jne
addl
subl
pop
pop
leave
ret
push
mov
sub
sub
push
push
xor
cmp
push
je
mov
jmp
push
mov
call
push
mov
push
mov
call
mov
push
mov
call
push
push
mov
push
mov
call
push
mov
call
push
push
mov
call
push
mov
call
push
push
mov
call
push
push
mov
call
push
mov
call
push
push
push
mov
call
push
mov
call
push
push
mov
call
push
mov
call
push
push
mov
call
push
push
mov
call
push
call
push
push
push
call
cmp
je
cmpl
jne
lea
call
mov
xor
cmp
push
setne
push
push
push
mov
mov
call
mov
cmp
mov
jne
xor
jmp
mov
mov
mov
rep
pushl
pushl
pushl
push
call
mov
sub
mov
add
cmpl
je
push
pushl
push
call
mov
jmp
mov
mov
test
je
mov
add
mov
push
mov
call
push
call
push
call
mov
mov
push
mov
call
push
call
push
call
mov
movzwl
lea
mov
movzwl
lea
push
mov
call
push
call
lea
push
push
push
push
call
pushl
pushl
call
mov
mov
sub
xor
cmp
mov
je
mov
cmp
je
add
mov
jmp
mov
mov
mov
cmp
je
add
lea
mov
mov
mov
mov
add
push
push
push
call
or
sub
mov
mov
mov
sub
cmp
mov
jbe
add
add
mov
mov
mov
add
addl
subl
add
incl
mov
mov
cmp
jb
pushl
call
test
je
pushl
pushl
call
test
je
cmpl
je
mov
call
mov
mov
mov
add
mov
movzwl
xor
test
mov
jbe
mov
mov
mov
addl
sub
addl
push
pop
rep
mov
add
sub
add
mov
movzwl
lea
test
cmp
jb
push
push
pushl
mov
call
mov
push
call
push
call
push
call
pushl
mov
pushl
add
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
add
sub
push
push
mov
mov
push
xor
push
add
mov
call
push
call
lea
push
push
push
push
call
mov
cmp
mov
je
lea
cmp
mov
je
mov
mov
add
push
call
push
call
push
call
test
mov
je
mov
add
andl
cmpl
je
mov
pushl
pushl
call
test
je
incl
mov
mov
lea
cmpl
jne
incl
mov
mov
imul
lea
lea
cmpl
jne
xor
mov
mov
xor
push
add
pop
pop
pop
pop
leave
ret
xor
jmp
push
mov
push
push
xor
mov
mov
scas
je
inc
jmp
mov
mov
pop
leave
ret
push
mov
mov
mov
sub
sub
add
push
mov
test
jne
xor
jmp
mov
mov
push
add
mov
push
mov
mov
mov
add
add
add
test
mov
jns
and
sub
cmp
jae
mov
jmp
xor
cmp
mov
jae
jmp
mov
mov
mov
add
call
cmp
je
incl
mov
cmp
jb
mov
mov
mov
cmp
je
movzwl
mov
mov
add
add
cmp
jae
cmp
jb
xor
cmpb
je
lea
test
cmpb
jne
push
lea
push
push
mov
call
add
add
push
movb
call
push
call
lea
push
call
mov
test
jne
xor
jmp
lea
call
push
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
pushl
mov
push
call
mov
push
pushl
call
cmp
je
cmp
jne
push
push
pushl
mov
call
mov
jmp
push
mov
push
push
push
mov
mov
call
push
push
pushl
call
xor
pop
pop
pop
ret
mov
mov
mov
mov
ret
push
mov
push
andl
push
call
push
call
lea
push
push
push
push
call
test
je
add
mov
add
add
add
lea
xor
cmp
jbe
add
sub
cmp
jb
mov
xor
add
cmp
jbe
add
push
add
pop
cmp
jb
xor
add
leave
ret
push
mov
and
sub
add
push
push
lea
push
push
xor
mov
movb
movb
movb
mov
call
pop
push
mov
call
cmp
pop
je
push
pop
jmp
push
xor
pop
movl
lea
rep
lea
push
mov
call
test
je
push
mov
call
cmp
jne
cmpl
jae
mov
call
mov
test
jne
push
push
push
mov
call
mov
push
mov
call
push
push
pushl
push
call
jmp
push
push
push
mov
call
push
push
push
lea
push
mov
call
push
call
push
mov
call
mov
pop
pop
pop
mov
pop
ret
pop
addl
add
push
add
add
shll
cmp
aaa
shr
fmul
je
pop
push
cmpsb
inc
ss
lds
jmp
stos
add
push
lcall
dec
jnp
push
add
inc
xchg
fldl
xor
lret
xchg
ficomps
test
testb
xor
or
pop
inc
cmp
fistpll
movsb
je
mov
fld
hlt
test
dec
adc
xchg
inc
into
in
inc
lods
repz
ficoms
mov
push
mov
ret
xchg
lds
loopne
in
shlb
pop
inc
lods
sub
je
insb
dec
adc
xlat
test
add
pand
cmp
push
arpl
js
or
xor
sub
jno
pop
inc
sub
add
jnp
xchg
cmpsb
cli
sbb
add
pop
and
fs
je
repnz
mov
in
or
pop
sbb
fwait
xrelease
js
xchg
mov
sti
shlb
sbb
sbb
out
je
dec
int3
fs
xchg
insl
bound
loopne
push
mov
jmp
mov
jecxz
dec
dec
xor
inc
imul
sub
cmpsl
mov
mov
fwait
inc
addr16
mov
mov
aad
mov
ret
pop
sub
into
jecxz
or
ja
sub
in
xor
jno
cs
dec
mov
xchg
cmp
xor
bound
inc
es
sub
xchg
dec
sarb
cmc
inc
jp
cld
sbb
mov
dec
jo
repnz
test
lea
jne
sub
sti
dec
fisubs
add
stos
fstpl
cmc
lret
sub
data16
leave
outsb
rcll
sbb
pop
adc
push
xor
xchg
lret
lea
sti
xor
xchg
mov
cltd
cbtw
sar
jns
sub
fldcw
scas
pop
xchg
pop
inc
inc
sub
pop
push
add
adc
mov
cwtl
push
orb
lock
pop
fcoms
rcr
into
sub
inc
hlt
jne
pop
and
pop
inc
pop
add
jl
int3
lea
and
clc
nop
stc
repz
out
lds
and
mov
cmp
mov
inc
pop
mov
rolb
insb
arpl
pushf
aaa
sbb
add
pop
adc
inc
push
leave
adc
pop
jb
mov
rclb
push
sbb
jae
sbb
sub
mov
ret
in
push
sarl
pop
jmp
sub
fs
out
fsub
dec
lods
ret
int3
cmp
jle
xor
movsb
cmp
test
xchg
add
xchg
jecxz
hlt
jae
and
adc
cli
imulb
adc
or
pop
mov
daa
outsb
xlat
out
xchg
sbb
ljmp
adc
or
xor
cld
sbb
dec
xchg
fcoms
out
cmp
lcall
jle
arpl
xor
or
sbb
or
imul
repz
shl
movsl
fwait
adc
les
fidivl
in
stc
test
in
jae
orl
and
cli
rorb
mov
mov
dec
dec
test
scas
fisttps
jae
xchg
dec
and
in
ja
mov
adc
inc
sbb
in
push
fldcw
and
test
jle
jmp
bound
cmp
push
inc
xor
mov
and
and
mov
jbe
dec
mov
or
repz
and
outsl
loope
mov
ljmp
in
movsl
jle
dec
out
push
lods
je
jl
adc
push
mov
test
cmp
push
icebp
and
stos
pop
cmp
jbe
mov
push
sbb
idivl
mov
mov
sahf
cmp
pop
adc
mov
fcoml
cmp
addb
dec
shl
decb
lret
jp
fiadds
lea
dec
gs
sbbb
push
lret
repz
pop
rol
mov
fcoml
xchg
outsb
sub
sbb
je
shl
out
sbb
dec
pusha
sbb
daa
mov
out
jb
mov
jo
loope
mov
push
mov
in
cmp
pop
add
call
ret
mov
and
popa
lret
mov
mov
pushf
call
faddl
int
add
not
push
mov
or
xchg
daa
fmulp
andb
xor
cmp
mov
test
dec
and
mov
inc
imul
lahf
movsl
jp
adc
fs
mov
dec
icebp
ja
jb
das
push
shlb
pandn
push
sti
jne
rol
cwtl
jb
pop
inc
jmp
test
push
enter
daa
mov
scas
dec
push
je
out
pushf
loopne
or
lret
cli
or
mov
into
in
sub
fisttps
cli
fmul
mov
out
push
pop
fcmovu
stos
inc
out
fisubl
pop
xor
loopne
and
cmpsl
cmpsb
add
sub
sub
or
inc
sub
push
shll
xlat
mov
mov
inc
out
ss
pop
mov
int
adc
and
cmc
jbe,pn
sub
or
mov
lods
fistl
gs
stc
push
mov
popf
mov
xchg
xchg
push
rorl
push
scas
push
sahf
dec
mov
lret
sbb
cltd
pop
test
cwtl
ret
fisttpl
push
fidivl
popa
repz
add
jnp
daa
cmp
lods
ret
push
pop
pusha
call
nop
push
add
lret
aaa
mov
outsb
mov
sbbb
insl
lods
insb
adc
aad
insl
rcr
cmp
stos
jmp
shll
sub
sbb
dec
and
leave
and
jb
add
push
in
mov
sbb
lahf
data16
mov
ss
push
jb
adc
imul
push
adc
inc
pushf
addr16
jmp
icebp
mov
imul
outsb
sbb
and
lds
push
sub
jl
xchg
ljmp
icebp
loop
jo
int
add
lret
cmp
icebp
sub
popa
repz
and
sbb
daa
jle
aad
mov
cmp
jne
pop
mov
loop
pop
sub
shrl
sarb
in
and
lret
stc
aam
movsb
sub
push
sub
rdmsr
sahf
test
sub
imul
std
cwtl
mov
in
mov
fldcw
nop
in
sbb
adc
lret
push
ror
movsl
dec
jg
sbb
lods
cmp
jecxz
cmp
xor
ret
jo
stos
popa
pusha
jp
imul
xor
sub
mov
push
pushw
fwait
jge
dec
mov
or
fistpl
dec
cmp
xchg
pop
sbb
popf
mov
mov
lods
push
add
loopne
shrb
lahf
rcrl
jp
out
sbb
push
btc
mov
cmp
andl
aaa
push
adc
js
fs
sbb
loope
ja
outsl
rolb
inc
mov
dec
push
add
repnz
cltd
sub
lods
movsl
push
imull
out
shlb
cmc
and
pop
dec
jecxz
mov
shlb
add
mov
jp
lea
sub
test
scas
jae
jp
xor
push
cmp
mov
pop
sbb
hlt
fwait
test
inc
mov
pusha
pop
add
out
stos
sti
fisttps
pop
ret
insl
stos
mov
sbbl
fildl
sbb
into
lods
repz
and
mov
sub
packuswb
and
jns
mov
pop
pushf
dec
cmc
push
iret
adc
add
sahf
ds
sarb
fst
dec
in
les
loope
sub
pop
pop
sub
jnp
repz
andb
lea
xchg
ljmp
jle
subl
mov
cmp
popf
mov
sub
sbbl
hlt
xchg
in
lahf
adc
jnp
mov
push
js
jbe
inc
std
mov
stos
jbe
adcb
inc
sub
setae
sarl
inc
sbb
rcrl
mov
cs
push
mov
aaa
lret
jnp
mov
and
push
xchg
fbstp
mov
in
addb
movsl
outsl
dec
push
cmc
ret
lret
xchg
fwait
out
stos
sbb
imul
sub
push
lahf
jb
adc
sti
in
ljmp
pop
fs
cmp
in
jo
sub
add
leave
movsl
sbb
lea
and
mull
movsl
add
or
mov
int3
shlb
mov
add
imul
pop
adc
or
cwtl
popa
xor
mov
sbb
adc
sbb
fldl
test
shll
inc
xchg
fs
cmc
or
es
shrl
out
mov
push
addl
or
enter
ljmp
inc
call
sbb
jo
sbb
pop
mov
rcr
push
pop
pop
cmpb
dec
xlat
aaa
aad
repz
fbld
das
mov
pop
or
xchg
xor
mov
int3
jg
mov
clc
mov
adc
ja
xchg
or
shlb
jp
fcoml
xchg
sub
push
xor
popa
or
ja
sbb
in
incw
push
in
popf
out
add
mov
lods
sub
jl
divb
lcall
pop
sarb
nop
ss
inc
inc
and
pop
mov
ret
jecxz
mov
cmp
mov
out
add
xor
hlt
loop
in
jb
adc
xor
aas
push
cltd
dec
xchg
lods
leave
bound
inc
out
push
pop
add
xchg
mov
xchg
sub
adc
or
adc
xchg
in
sarb
mov
xchg
ds
adc
mov
inc
jno
jae
loopne
rcll
dec
pop
lcall
sarl
cli
sub
imul
aam
call
and
cs
jnp
negb
sti
mov
pop
test
int
stos
jp
out
movsb
xchg
movsl
lock
sbb
scas
pusha
jnp
jnp
bound
pop
dec
xchg
sub
mov
call
xchg
xor
das
pop
or
imul
xor
stos
push
or
dec
sub
jb
cmp
push
pop
fsubrl
add
sahf
imul
fimull
cmpsl
pop
xlat
inc
dec
jbe
inc
js
and
sub
sbb
out
lret
mov
mov
mov
pop
sub
dec
jecxz
mov
mov
loope
test
dec
xchg
jp
cmp
pop
dec
cmpsl
inc
push
cwtl
mov
sbb
mov
fs
xor
push
dec
sahf
dec
stos
mov
dec
loopne
testl
mov
shll
ret
into
fidivs
dec
push
push
mov
mov
pop
fst
insb
mov
mov
push
xor
jmp
test
fimuls
aaa
in
cmp
adc
je
pop
mov
dec
mov
mov
aad
sub
sub
fists
lock
cmp
push
push
int
lcall
in
mov
xor
stos
cltd
rorl
cmpsl
mov
jne
stos
inc
mov
mov
lahf
mov
add
arpl
add
fwait
pop
aas
std
test
mov
push
dec
mov
sbb
jns
or
and
das
fsubp
addb
sbb
mov
sbb
jo
jmp
xor
stos
or
xchg
xor
and
pop
adc
stos
sbb
stos
or
mov
push
jmp
pop
aam
jo
mov
xchg
jno
push
and
dec
xchg
sbb
inc
or
sub
adc
cmp
xchg
out
repnz
push
and
out
push
xchg
out
cli
shll
loop
pop
test
ja
insb
cmp
xor
pop
cwtl
xor
into
lret
sbb
or
xor
add
sbb
out
into
in
mov
mov
adc
push
in
mov
pusha
mov
cwtl
clc
pop
sbb
sub
inc
or
inc
dec
xor
mov
inc
fisubrl
shrw
push
xchg
push
mov
cltd
xlat
adc
les
cmc
push
add
addl
stc
mov
loope
add
popf
andl
shl
popf
leave
mov
test
addb
fistl
fstp
push
rcl
mov
dec
push
arpl
push
dec
loope
push
cwtl
inc
sbbl
rolb
imul
out
adc
jnp
jns
xor
mov
sbb
shll
fists
fnsave
test
mov
leave
in
mov
xor
mov
out
sub
and
jbe
mov
mov
andb
adc
fstp
lock
out
lret
int
stos
out
test
mov
push
sub
mov
mov
mov
pusha
shll
push
inc
mov
ljmp
add
jb
addr16
mov
mov
jp
inc
mov
cli
lods
or
pop
and
in
jns
xor
out
arpl
cli
xor
lret
sbb
stos
imul
or
add
pop
enter
xchg
test
and
mov
xor
mov
push
add
and
out
xchg
xchg
das
inc
xor
cmp
popa
pop
fs
ret
or
adc
and
pushf
pop
push
ret
and
stos
or
push
mov
loop
sub
mov
mov
sub
cmpsb
outsl
insb
mov
mov
lea
adc
push
dec
mov
js
rclb
int
testb
aas
xchg
xchg
imulb
icebp
or
push
pcmpgtw
sbb
inc
lahf
inc
jnp
jno
or
in
lret
out
repnz
mov
jno
shl
fwait
sbbl
pop
cmp
adc
xor
aaa
sahf
xor
mov
xchg
js
enter
jnp
mov
or
xor
mov
lds
mov
push
insl
mov
loop
hlt
sub
scas
cmp
pop
pop
dec
pop
fwait
push
fs
jae
or
rcll
dec
test
mov
sub
lods
and
aad
xchg
arpl
aaa
mov
sbb
and
xchg
xchg
xchg
addb
pusha
pop
fldt
dec
jb
out
mov
pop
sub
loope
cwtl
xor
xchg
mov
das
push
clc
mov
xchg
xor
mov
adc
mov
jmp
repz
stc
cli
lcall
jbe
mov
push
pushf
stos
std
scas
hlt
int3
dec
cmp
add
popf
pop
fistl
jmp
incl
hlt
cmpsl
or
add
int
jno
ret
lahf
adc
nop
neg
mov
sub
push
adc
xor
push
std
push
sti
adc
cmpsb
sbb
aad
jo
add
jecxz
xchg
sahf
sub
neg
lret
inc
mov
js
pxor
inc
dec
jmp
inc
sub
pop
test
popl
add
lahf
mov
subb
out
movsb
inc
cwtl
sarb
std
mov
fiaddl
push
psrld
hlt
mov
test
ja
leave
sbb
push
outsb
repz
pop
push
xchg
test
mov
sbbb
ret
fldenv
cltd
pop
movsl
xor
jle
imul
push
orb
sbb
sbb
mov
testl
inc
clc
test
out
dec
lcall
popf
cwtl
mov
xor
xor
xchg
push
adc
stos
and
jns
leave
push
mov
xchg
stos
shrl
jg
sbbl
test
mov
xchg
mov
mov
fiadds
jl
aas
push
add
add
js
sub
icebp
cli
xchg
lock
inc
pop
in
arpl
setl
add
cld
pop
std
leave
jl
mov
xchg
popf
push
dec
hlt
push
cmp
pop
or
push
arpl
pop
testb
inc
lods
test
pushf
stos
movl
rcll
push
call
movsl
jb
pushf
lea
outsb
loope
sub
jo
dec
sub
inc
imul
sbb
dec
mov
mov
mov
out
xchg
mov
cmp
test
cmp
pop
and
mov
jecxz
mov
and
xor
add
add
adc
jecxz
sbb
popf
daa
jle
mov
fwait
adc
rcll
push
jae
pushf
sub
add
mov
pop
int
mov
mov
xchg
adc
add
inc
pop
test
je
sahf
mov
dec
cld
mov
jnp
mov
movsb
add
sbb
in
es
lds
int
mov
inc
outsl
and
loop
pusha
dec
push
or
fwait
inc
ja
insb
pop
jno
mov
subl
fwait
jo
push
fstpt
cmpsl
inc
mov
pop
mov
jmp
add
xor
daa
les
push
cli
andb
xchg
ljmp
sbb
aad
cwtl
xor
data16
mov
jg
lods
subl
adc
mov
cmp
iret
movsl
adc
insb
jg
xchg
and
sahf
jge
mov
in
pushf
mov
mov
and
enter
push
xchg
rorl
loope
movsl
dec
sub
repnz
shrl
aas
sbbb
or
inc
xchg
xor
hlt
mov
nop
leave
icebp
in
jae
cld
aaa
test
mov
mov
dec
sub
js
divl
test
cli
adc
mov
or
add
add
xchg
mov
fnstenv
movsl
repz
std
je
out
xchg
push
push
aam
push
pop
xor
cmp
out
insb
inc
in
ffree
pop
mov
inc
jbe
stos
sub
jmp
fnstsw
std
sub
loopne
adc
mov
and
mov
inc
add
cmp
push
adc
xchg
add
jnp
add
mov
push
dec
test
add
push
pop
add
xor
xchg
aad
out
push
push
xchg
jne
daa
loop
mov
sbb
repnz
sub
fsubs
or
sub
jl
stc
xchg
fisttpll
add
cwtl
or
ret
add
lea
test
dec
lret
push
inc
xchg
sbbl
pop
fcompl
lret
and
in
inc
xor
stos
std
xchg
xchg
sti
sub
push
das
test
ficomps
and
mov
outsl
repnz
mov
idivb
add
dec
cmp
pop
push
lret
hlt
mov
sbbb
lods
xchg
idiv
inc
bnd
icebp
jg
adc
scas
push
sti
add
jnp
mov
inc
incb
aas
or
cmpsl
out
iret
xorb
mov
jnp
add
cmc
rep
mov
adc
cwtl
push
out
fmull
out
mov
cmp
out
inc
mov
in
mov
sbb
bound
add
inc
mov
pop
dec
les
push
cmp
lret
inc
ljmp
mov
adc
cmp
arpl
or
jecxz
jecxz
or
mov
and
mov
pop
cmc
cli
popf
xchg
mov
rcrb
imul
popf
adc
daa
and
iret
xor
mov
jns
sbb
cmp
cmp
or
jne
es
sbbb
ljmp
and
outsl
jns
and
mov
sbb
push
bound
dec
in
out
out
fdiv
sbb
stos
cmp
mov
xor
pushf
out
test
test
push
pop
push
jne
inc
mov
xlat
mov
xchg
xor
cmp
add
fisubs
scas
xor
mov
push
repnz
lea
mov
sub
cwtl
std
mov
push
aaa
sub
jg
fs
lret
and
test
xchg
sahf
dec
inc
sarb
add
pop
pushf
test
inc
push
into
stc
jns
mov
into
sub
aam
in
mov
sub
pop
and
mov
icebp
test
push
cmp
cmp
das
and
sti
loop
jg
scas
add
push
imull
sbb
cmp
push
sbb
out
repnz
dec
mov
cmp
adc
or
jle
inc
imul
mov
ret
insl
pop
xor
lret
cmp
loop
or
fs
aam
mov
push
cmp
push
lods
dec
lcall
mov
and
lock
pop
mov
jns
and
jo
outsb
addr16
les
test
cmp
pop
out
dec
mov
xchg
outsl
dec
dec
add
push
dec
dec
ret
outsl
mov
inc
scas
mov
int
subl
xchg
gs
mov
cltd
push
add
or
icebp
lds
mov
push
scas
dec
cmp
fidivrs
pop
mov
test
pushf
pop
push
shl
sbbl
xor
push
das
sahf
mov
in
xorb
fwait
mov
les
mov
push
js
aaa
adcl
cltd
aad
or
popf
pop
adc
mov
shlb
inc
movsb
out
dec
push
js
mov
xor
int3
std
dec
add
push
sbb
cmp
xchg
jae
pop
push
imul
in
jno
mov
xor
add
int
pop
loope
repz
sub
push
xlat
dec
mov
inc
jns
fsts
dec
out
jne
fiaddl
movsl
lds
and
imul
roll
repz
mov
out
ret
sahf
sbb
loope
pop
cltd
aaa
cmp
sub
dec
push
xchg
orl
jo
sub
xchg
rcrl
push
sahf
inc
popf
dec
scas
int
or
lret
fldl
sbb
sbb
inc
xor
orl
dec
ret
dec
dec
lods
cltd
push
repz
jne
sbb
leave
or
jo
xchg
add
aad
sbb
pop
and
cmp
in
pusha
psubb
inc
enter
shr
lds
in
adcb
dec
mov
testb
out
cli
mov
cmp
mov
cmp
cmpsb
xchg
call
push
in
add
push
push
mov
repz
rcll
enter
in
dec
ss
call
cmpsb
sbb
adc
fsubp
sub
std
push
cs
cmpsl
sbb
orl
mov
cld
xchg
xor
enter
sub
lcall
ljmp
orl
js
insb
sbb
jecxz
in
sarb
mov
dec
push
mov
adc
in
aam
cmp
cmp
sbb
mov
mov
lods
dec
sbb
cld
xchg
jae
sbb
pop
fnsave
mov
adc
inc
pushf
sub
lods
adcl
aaa
mov
push
and
pusha
dec
daa
sub
int3
rcll
sbb
xor
jge
test
outsb
int
rcrb
outsb
jbe
push
iret
lods
inc
xlat
push
cmp
cld
pop
das
and
inc
loopne
in
sarb
jge
xor
lea
jp
xlat
mov
or
cmp
arpl
nop
cmp
or
aaa
add
das
hlt
cmp
jbe
pop
dec
xchg
mov
dec
jge
dec
out
sbb
in
sbb
rol
jae
and
pop
xchg
push
int3
les
mov
xchg
insb
shll
mov
jno
dec
pop
mov
adc
adc
pop
push
inc
mov
repnz
stos
adc
push
inc
pop
xchg
sbb
leave
sub
lret
sbb
dec
ret
inc
dec
insl
pop
js
lret
sbb
call
cmpsl
sbbl
sub
stos
mov
push
xorb
cmpsb
push
mov
add
ss
test
xchg
sub
jns
push
mov
enter
fidivs
hlt
sub
mov
js
loope
popf
or
in
push
sub
pop
pop
dec
imul
repz
leave
push
leave
outsl
loopne
arpl
jp
loopne
bound
jno
in
testl
out
iret
out
cmpsb
push
or
jnp
loop
jnp
test
into
or
mov
popa
inc
int
push
cmp
dec
out
negb
mov
xchg
cmp
repz
cmp
orl
ljmp
pop
jnp
dec
cmp
inc
pop
xchg
ss
andl
in
movsl
push
adc
outsb
mov
rolb
dec
dec
push
sbb
leave
and
mov
lret
jge
cwtl
loope
adc
insl
cmp
or
lcall
add
jbe
fists
mov
jno
test
clc
add
into
test
pushl
pop
pop
ds
dec
jecxz
aas
decb
push
icebp
bound
cli
sbb
ds
fisttps
repnz
push
jo
ret
outsl
cmp
fidivl
dec
popl
or
clc
push
inc
xchg
shlb
sbb
out
es
int
mov
in
lods
loopne
insl
testb
xchg
add
int
jo
or
or
mov
cmc
push
push
frstor
imull
or
sbb
arpl
sub
lock
push
and
jne
cli
push
push
shll
pop
add
and
or
adc
sub
xor
arpl
jle
dec
mov
pop
nopl
sarb
mov
in
repnz
rorb
jo
insl
iret
push
loopne
fadds
cli
stos
mov
cmp
jge
push
push
xor
sub
push
or
xchg
mov
ds
out
add
jg
ret
imul
dec
scas
mov
inc
inc
mov
sub
subb
add
sahf
int
fiadds
lret
test
in
and
inc
mov
or
pop
daa
iret
xorb
push
jge
mov
cmp
push
inc
mov
cmp
outsb
push
mov
xor
mov
push
sbb
or
cmp
cmp
sub
push
testb
cmp
jmp
cltd
mov
pop
outsb
add
ja
sub
popa
cld
mov
cs
incb
js
jecxz
and
mov
andl
adcl
inc
mov
cmpsb
adc
add
ja
js
in
dec
js
outsb
push
push
leave
cmpsb
mov
add
in
jl
sahf
sbb
in
rcrl
sarl
sti
sti
loop
shlb
jmp
movsb
jmp
inc
out
into
xchg
fwait
xchg
fldcw
xchg
ret
xchg
pop
adc
pop
daa
pop
mov
push
pusha
sti
pushf
cmp
ljmp
dec
cmp
sarb
xor
je
fwait
dec
push
push
sti
push
push
cmpsl
push
lcall
lods
ja
push
sbb
push
sub
push
out
fidivs
fildl
jl
mov
js
mov
pop
loopnew
stc
inc
or
xchg
jl
add
add
xlat
pusha
lret
addr16
pop
inc
xchg
je
ds
jge
pop
adc
sbb
fnsave
adc
out
adc
ror
insb
mov
add
pop
jnp
rcr
ret
inc
cwtl
cs
mov
push
test
aaa
cmp
cmc
out
jae
mov
outsl
jge
jbe
fdivrl
ja
cmp
std
insb
push
fsub
test
popa
cld
push
adc
cwtl
add
sbb
xchg
jmp
lret
dec
in
hlt
aaa
into
adc
sub
leave
sahf
shlb
sbb
rolb
fwait
and
mov
test
mov
push
enter
or
js
cmpsl
push
gs
les
in
sub
cwtl
xchg
rol
xor
repz
out
int
pop
xchg
out
data16
mov
in
pop
mov
jge
xor
sub
andb
pusha
pop
cmpsb
mov
in
add
push
mulb
inc
rol
es
xor
pushf
fabs
dec
adc
shld
jbe
jle
add
jg
fiaddl
and
push
mov
ja
das
nop
jne
cld
jp
jne
jne
nop
bound
hlt
aas
add
mov
jbe
xchg
das
and
jg
push
ja
and
push
pop
jmp
jl
lock
pushf
cmp
pop
mov
jae
rolb
mov
add
sub
jg
je
push
in
lods
jg
sbb
repnz
iret
aaa
std
in
pusha
mov
movsb
sub
cwtl
sbb
adc
mov
les
outsl
gs
pop
add
push
scas
addr16
jno
cmpsb
cmp
ficoml
in
pop
push
adc
xchg
dec
shll
lret
jle
or
flds
movsb
sub
movsb
cmpsb
notb
sahf
xor
xor
mov
add
sub
sbb
or
push
mov
les
scas
shrl
push
subl
je
test
leave
lock
imul
roll
insb
stos
mov
lock
imull
insb
lea
lods
ss
jge
mov
test
fnstenv
ret
mov
insb
xchg
or
je
dec
test
jmp
xchg
cmp
cmpsb
jmp
xor
push
cmp
mov
ds
dec
mov
dec
enter
shlb
sub
mov
aas
dec
out
call
xor
jle
shl
orb
lods
pop
jle
xchg
adc
fnstsw
xchg
inc
clc
jge
dec
std
inc
cs
or
daa
outsl
stc
out
pop
and
dec
lea
movsl
cmp
imul
into
test
sbb
fwait
inc
dec
rcll
lods
add
mov
jo,pn
inc
adc
stos
fisubl
int
orb
pushf
orl
adc
ss
test
call
test
adc
test
mov
lea
or
sbb
popf
lea
jl,pn
mov
and
push
and
sub
clc
jg
daa
cmp
pop
sub
push
out
cmpsb
fwait
cld
cmp
out
movsl
repnz
mov
mov
imul
loopne
adc
mov
nop
push
in
and
jno
mov
and
mov
cmpsl
clc
push
dec
mov
push
jo
gs
jle
add
inc
rorb
out
sbb
fldl
mov
repz
stc
add
scas
pusha
mov
or
dec
ljmp
sbb
popa
mov
dec
in
ja
jne
sbb
std
xor
xor
loopne
pop
xor
cmpsb
mov
cmp
cmp
pop
mov
add
sub
ret
mov
mov
les
jnp
rorl
mov
in
in
mov
out
sub
jl
pop
pop
pop
xor
out
jecxz
loope
cmpsb
mov
push
cmp
xchg
jae
adcb
lods
sbb
xchg
fists
sbbb
cld
fdivl
daa
lods
cmp
decl
int
jge
cmc
jae
hlt
dec
dec
sub
dec
sbb
mov
dec
jg
mov
popf
cli
fcmovnu
pop
pop
pop
ficoms
popa
fldt
adc
pop
pop
or
add
cmpsb
xchg
add
fldt
icebp
lock
popf
test
mov
mov
cli
xor
sub
jge
dec
and
adc
adc
jnp
or
push
pop
fimull
jecxz
and
psrld
xchg
nop
sub
shr
cmp
cs
push
pop
shll
or
xor
subl
repnz
push
lret
sub
das
loopne
xor
in
add
int3
mov
fdivl
pop
popf
stos
fistpl
js
xor
scas
stos
and
adc
inc
push
add
arpl
imul
xor
aaa
mov
and
iret
adc
dec
mov
fidivl
add
push
cld
fstpl
sbb
mov
inc
imul
xchg
sub
xchg
push
dec
es
cltd
outsl
pushf
test
mov
mov
or
aam
dec
aad
and
or
jmp
xchg
js
aaa
mov
pop
fcomps
fwait
iret
push
xor
xchg
pop
pop
lcall
pusha
fbstp
xor
int
and
push
lods
xchg
mov
movsl
push
leave
fistpl
sbb
nop
ljmp
sbb
add
pop
xchg
test
jl
jl
repnz
inc
fs
and
movsb
push
fsts
sbb
mov
mov
clc
adc
mov
rcl
mov
movl
cld
mov
subb
inc
cwtl
and
lods
lods
jmp
fbstp
out
jmp
xor
out
fldt
mov
push
shll
fildl
sub
adc
sti
pushf
insl
and
leave
mov
rclb
iret
movsl
adcl
stc
jnp
mov
inc
in
loop
loopne
data16
ret
cld
xlat
push
xchg
cmp
sbbb
push
out
into
pushf
enter
lsl
ds
xchg
loop
mov
and
dec
sub
bound
lock
clc
imul
mov
das
xchg
mov
data16
in
mov
push
je
jno
nop
cmp
ljmp
dec
ljmp
cmp
loopne
insl
out
pop
iret
xchg
in
out
inc
push
jbe
push
inc
sub
adc
mov
mov
repnz
sub
icebp
icebp
dec
sbb
mov
cmp
mov
and
lahf
popa
mov
add
mov
int
test
adc
adc
sahf
adc
push
push
mov
testb
dec
xchg
ret
cmp
jb
daa
fcomip
fistl
loopne
inc
cld
lods
cmp
outsb
std
lret
pop
or
stos
pop
xorl
jnp
loopne
sub
lcall
test
in
sbb
pmuludq
jg
xor
outsb
mov
add
xchg
xchg
aam
jl
and
jg
daa
cmpsb
pop
shlb
movaps
mov
outsb
out
imul
outsl
je
jno
dec
ret
sti
mov
inc
or
ja
aaa
mov
sub
jp
inc
cmpsl
xor
repz
je
lahf
popa
sub
jb
add
or
dec
xor
fisttps
mov
inc
inc
or
jl
data16
xor
dec
xchg
cmp
ljmp
scas
lds
ds
addr16
add
push
loope
xor
or
leave
xor
stos
inc
ja
mov
add
cwtl
repz
pop
or
mov
inc
popf
shrl
push
addr16
lock
sub
xchg
push
mov
lahf
scas
out
iret
push
ljmp
mov
loopne
pushf
int
push
xchg
gs
inc
xor
cld
into
mov
mov
inc
lods
shlb
aad
popf
cld
dec
mov
aas
mov
jno
mov
lret
stos
pop
nop
xchg
mov
fimuls
cmp
pop
dec
xchg
cmpsb
jl
test
cmp
cltd
jno
cmp
sub
adc
pusha
inc
cmp
lods
xchg
mov
popf
push
nop
mov
je
loop
cli
add
push
or
icebp
shr
decb
leave
in
clc
pop
outsl
jecxz
cmpl
xor
and
cmpsb
xchg
xchg
hlt
fcomp
lret
test
es
je
mov
cwtl
lock
idiv
xchg
test
int3
stc
mov
setae
or
adc
mov
cmp
inc
mov
sti
clc
cmp
sub
inc
movsb
push
into
andb
lahf
fidivrl
sbb
das
test
lret
loope
push
mov
lea
push
ror
sti
cwtl
push
pop
xchg
test
testb
xor
jnp
push
cmpsb
ret
repnz
jp
imul
and
aas
insb
xchg
add
ret
cmp
aam
in
js
push
daa
inc
cmp
lahf
push
dec
icebp
push
je
dec
jnp
iret
out
mov
fxch
mov
aad
std
mov
stc
add
faddl
ljmp
les
pop
mov
mov
xor
pop
mov
pop
mov
xor
sub
in
shll
add
add
xchg
mov
jb
in
cltd
adc
mov
mov
xchg
pavgw
xchg
cmpsl
push
and
in
test
mov
call
mov
push
out
add
es
jno
call
cli
jne
push
fstpt
cmpsl
dec
and
mov
out
and
scas
loope
and
je
sub
mov
ja
leave
xorb
push
sbb
outsl
pop
jbe
out
lods
into
cli
in
sub
leave
sahf
loop
xor
pop
sbb
jbe
jmp
movsl
pop
inc
and
and
sarb
cmpsl
hlt
and
lock
cwtl
or
add
dec
xchg
mov
sar
xchg
jmp
dec
xchg
xchg
jge
cmp
cld
jbe
push
jo
mov
stc
pop
dec
xchg
mov
inc
gs
fmulp
mov
add
stc
mov
xchg
xchg
cli
sbb
cmp
pop
ds
je
xor
jbe
shl
data16
jns
int
dec
sti
ds
test
mov
clc
push
sbb
aam
push
fcomps
aam
xchg
jmp
fidivrs
movsl
pusha
mov
stc
loope
rclb
js
jno
mov
int
pop
inc
fists
jbe
sbb
or
pop
lock
lds
cmc
jle
mov
jmp
mov
cmp
fcompl
pop
dec
addr16
lret
pushf
mov
jecxz
fisubrs
pop
test
repnz
pop
pop
pop
fcom
paddw
outsl
aaa
cltd
js
sbb
mov
cs
std
dec
subl
test
sbb
inc
jbe
push
mov
push
add
stc
mov
add
inc
xchg
ret
adcb
push
add
daa
das
mov
inc
sbb
add
arpl
sahf
sbb
mov
shl
adc
sahf
mov
loop
sub
daa
add
jae,pt
cmp
sahf
in
and
push
movsb
lods
lds
mov
imul
xlat
in
hlt
ljmp
dec
lret
icebp
cmp
lods
xor
mov
or
sarb
pop
mov
cmp
and
push
adc
xor
push
mov
cmp
inc
test
mov
inc
dec
xor
dec
sub
ljmp
out
cwtl
cmpsl
into
insb
sahf
xchg
jl
std
test
out
inc
cmp
testl
inc
cmp
pushf
adc
xchg
add
xor
addr16
out
popf
inc
mov
add
cld
outsb
and
mov
xchg
push
jp
stos
fs
push
jl
push
sub
aaa
inc
mov
ja
jmp
in
lret
xchg
xchg
stos
sbb
lds
repz
repnz
insb
xchg
pop
xor
push
clc
sub
ss
leave
sbb
xor
adc
xor
hlt
mov
mov
cli
inc
cmpsb
sarl
xchg
repz
pushf
lods
scas
pop
fimull
adcb
das
xor
mov
testl
fwait
xchg
stos
or
in
dec
out
jmp
pushf
bound
lcall
sub
sub
dec
jo
mov
cmp
xchg
xchg
sbb
fbld
popa
mov
rcrb
cmc
out
shrl
mov
pop
sbb
mov
or
fsubrs
stc
xchg
inc
add
into
sub
xor
xchg
aas
int3
int
cmp
dec
jle
sub
inc
cmp
fisubrs
stc
fmull
jne
mov
xchg
test
and
scas
leave
rorb
cmc
cmp
data16
pop
push
dec
xchg
inc
jecxz
roll
sti
test
ror
repz
into
sub
test
out
int
leave
flds
ljmp
lret
jae
dec
stc
pop
sub
push
test
cmp
rclb
xor
inc
nop
cmp
inc
push
aas
push
sub
add
pusha
out
xchg
inc
rolb
imul
fwait
or
fdivl
les
shlb
dec
jo
mov
shl
cmp
adc
into
fdivrl
loope
fiaddl
mov
pushf
pop
mov
pop
js
movsb
cmp
ja
mov
mov
test
pop
inc
xor
mov
stc
adc
popf
enter
inc
xor
adc
ret
or
cld
mov
das
out
ficoms
add
loopne
clc
push
add
bound
mov
push
xlat
jg
mov
movb
pause
dec
jnp
addl
lcall
push
movsb
data16
scas
mov
ret
in
xor
mov
mov
inc
xchg
lea
cli
mov
fdivl
pop
sub
imul
jae
out
inc
jp
adc
sbb
jge
push
cmp
sub
cmp
mov
xchg
aad
les
rcl
dec
adc
out
insl
jb
sub
daa
adc
push
lock
sub
pusha
hlt
mov
jno
mov
push
or
push
mov
or
test
nop
push
icebp
mov
inc
mov
jle
nop
inc
xlat
mov
adc
shlb
mov
add
xchg
xchg
mov
into
and
xor
andb
dec
and
mov
inc
or
pop
push
adc
adc
fildl
xorl
out
xlat
pop
int3
lods
shrl
xchg
jns
xchg
mov
cld
jae
sbb
inc
cmp
in
hlt
dec
adcl
and
lock
mov
dec
test
sub
push
or
sub
push
daa
jl
cmp
repnz
jl
gs
ljmp
test
gs
cli
dec
sbb
jno
inc
push
jbe
repz
sbb
pop
shl
sar
adc
sarl
and
ds
mov
cmpsb
dec
push
mov
fucom
push
sbb
idivb
mov
sbb
pop
xor
sbb
push
push
dec
inc
repz
xchg
inc
je
add
and
shlb
addb
xor
push
add
outsb
sub
cmp
sbb
fsubl
je
loop
lea
or
xor
js
mov
sbb
les
clc
repz
adc
imul
ret
cmpsb
dec
mov
xchg
mov
dec
cmp
shlb
in
fnstcw
mov
adc
enter
pop
mov
es
repz
and
test
jge
cmpsl
mov
pop
cwtl
xchg
popf
fucomp
lcall
cmpsl
xchg
or
insb
imul
pushf
mov
sub
ret
push
push
add
jns
ret
sti
dec
push
scas
fmul
push
test
outsb
pusha
sub
xor
xchg
call
cmp
cmp
push
int3
ret
testl
into
ret
cmc
xchg
jg
stos
cmp
lret
insl
and
push
ret
lcall
rcll
mov
imul
xor
mov
sarl
mov
dec
xchg
xchg
aaa
in
jmp
adc
jmp
aas
add
cltd
jmp
xchg
lea
int3
mov
pop
or
out
pop
dec
xchg
mov
outsb
inc
mov
inc
clc
out
lods
std
mov
mov
test
sti
das
push
int3
mov
or
repnz
fstp
ss
cmp
out
roll
test
ss
mov
scas
dec
jnp
out
adc
push
mov
sbb
mov
hlt
test
imul
repz
xor
jle
xlat
enter
sbb
sbb
out
jmp
out
popa
xor
bound
xor
add
mov
push
xor
mov
sub
sbb
and
adc
ss
inc
cmc
dec
lcall
and
pop
into
cmc
das
insb
negb
add
fimuls
add
clc
mov
mov
jnp
adc
movsl
jmp
adc
testb
cmp
xor
inc
stc
dec
sub
and
add
pop
sub
xchg
lcall
lret
outsl
sub
cmpsl
xchg
jmp
leave
xchg
xchg
or
inc
add
and
jnp
es
hlt
adc
dec
dec
sarl
ds
les
pop
int
in
mov
ds
data16
sbb
int
std
xchg
daa
mov
adc
xchg
cmp
ss
jo
lds
xor
stos
inc
insl
push
into
sbb
lret
popf
addb
add
int3
lret
fldenv
add
jbe
add
test
cmp
das
loopne
add
fs
rcrb
adc
inc
lock
add
jmp
or
call
mov
adc
aaa
adc
in
pop
cmp
daa
mov
scas
inc
mov
lcall
and
lahf
xchg
rclb
aas
mov
xchg
movsb
jle
ss
call
sub
lret
pop
sub
dec
bound
mov
mov
xor
into
pop
out
pop
jle
mov
adc
cld
iret
adc
mov
jle
call
push
cmpl
sbb
mov
sarl
xchg
repnz
push
mov
daa
mov
sub
test
outsl
aam
mov
mov
stos
scas
loopne
fnstcw
or
into
xchg
scas
lcall
dec
imull
insb
test
and
test
and
jo
test
add
jecxz
outsl
cmc
adc
xchg
adc
push
inc
outsb
jbe
ds
aaa
popf
mov
movb
jo
inc
sub
js
pop
jo
cli
es
cld
add
popa
jae
xlat
clc
xchg
jle
jge
imul
jo
testb
addr16
stos
leave
jb
cltd
andl
cmp
mov
ljmp
clc
inc
stos
xor
ret
std
pop
lret
fiadds
mov
sbb
xchg
xchg
rorl
out
or
clc
mov
popf
cli
pop
fnsave
aaa
or
ja
xchg
stc
xor
add
pop
pusha
loopne
jl
leave
jno
or
aaa
pop
sub
jmp
or
les
stc
pop
fmul
pusha
push
jno
jbe
fisubl
inc
push
jl
cmp
push
in
call
jno
mov
push
sbb
xor
sub
fmuls
push
mov
xchg
mov
mov
jne
out
repz
jp
mov
xchg
dec
lret
pop
std
jl
or
inc
mov
aaa
push
aad
addr16
push
push
pop
mov
jne
dec
js
dec
pop
jae
js
mov
sub
jae
push
inc
mov
movsb
pop
jmp
dec
es
mov
add
jmp
lods
mov
ja
xchg
je
sarb
das
ret
or
call
std
sub
call
jno
sbb
adc
int3
out
jno
push
hlt
aam
mov
push
xchg
testb
js
loopne
sub
mov
inc
ja
add
xchg
stos
and
mov
ficoml
iret
mov
lods
int3
int3
pop
cld
add
in
jecxz
jne
stc
and
mov
jg
sar
fld
pop
push
stos
xchg
in
cs
shl
lret
imul
outsb
push
fidivrl
push
and
xchg
push
or
insb
mov
or
les
cli
cmp
xor
lcall
call
cmpsb
bound
push
push
lock
aam
mov
jecxz
out
enter
scas
das
cs
sbb
outsl
stos
notb
test
outsb
sbb
lds
popa
divb
fimull
stos
xchg
xor
pop
mov
or
popa
and
notb
lret
outsb
sbb
lods
push
push
out
mov
cmpb
xchg
cmc
movsl
stc
fidivs
pop
xor
jnp
xchg
jnp
xchg
jno
mov
push
lock
loopne
out
jp
push
int
push
pusha
inc
jae
pop
adc
xor
test
clc
popa
loop
inc
push
mov
js
xchg
pop
mov
jo
sub
xor
cwtl
mov
jnp
push
xchg
mov
pop
popa
movsl
mov
adc
lcall
fs
jmp
jae
sub
lods
inc
push
cmp
fdivl
mov
rcll
adc
lods
xchg
sub
jle
hlt
in
lahf
push
cmpb
enter
stc
shr
ljmp
dec
and
ficomps
pop
mov
mov
vpshld
test
imul
or
cmp
les
cmpsl
mov
inc
xor
push
cwtl
mulb
orl
repz
mov
sbb
and
lock
dec
fildl
and
stc
insb
mov
cmpl
mov
gs
push
push
popa
or
mov
andb
scas
sub
dec
aad
insl
mov
stos
cmp
testb
js
iret
pop
in
jecxz
inc
or
mov
loop
dec
js
test
test
mov
shl
inc
loop
out
mov
sbb
xor
dec
cs
xchg
dec
push
fimull
stos
into
repz
cmp
icebp
and
dec
test
js
mov
xor
cmp
enter
scas
pop
inc
divb
mov
test
add
cmp
sub
push
inc
sbb
and
and
jns
add
inc
or
jecxz
jge
mov
xor
inc
mov
in
inc
dec
jns
les
or
rcl
mov
fwait
mov
jb
xor
pop
cmp
test
orl
aaa
adc
mov
loopne
adc
hlt
test
xlat
pop
push
loope
xchg
inc
xor
cmp
mov
mov
or
mov
dec
dec
lret
addl
xchg
enter
mov
lcall
jl
fisttps
mov
jo
popa
push
and
push
jl
mov
adc
popa
add
xorl
fwait
jb
repz
rclb
pusha
sbb
popf
or
jle
pop
mov
sub
pop
push
dec
sub
int
push
sub
or
stos
and
fdivrs
icebp
insb
ret
rolb
insl
mov
xchg
loopne
push
push
add
aam
pop
adc
pushf
pusha
pop
push
push
xchg
jo
ficoml
push
lea
lahf
sub
mov
lret
cmp
dec
addr16
lods
repnz
dec
clc
dec
sub
pop
repz
or
sub
cmp
in
push
mov
aam
push
jno
xchg
push
aaa
push
sub
xor
mov
cmpsb
ret
imul
stos
movsl
lret
mov
loop,pn
and
cmpsl
xchg
push
fcoms
push
jb
lahf
adc
idivb
xchg
test
xlat
mov
repz
ss
dec
jns
inc
out
pop
arpl
cmp
into
sbb
fstl
rcll
cmpb
push
or
andb
call
xchg
pop
sar
sbb
inc
ja
mov
lea
fadd
add
movsb
inc
dec
adc
adc
adc
imul
dec
negb
jmp
mov
pop
pop
or
cltd
imul
sbb
rclb
cld
gs
dec
out
mov
and
dec
jae
dec
sarl
add
test
daa
mov
inc
push
int3
leave
jbe
mov
add
mov
gs
mov
in
leave
fistps
or
sbb
pusha
or
mov
gs
xor
push
mov
xor
mov
push
iret
push
mov
and
and
pusha
cltd
xrelease
or
xor
fldt
xchg
shr
clc
iret
fistps
sub
xor
arpl
push
in
mov
mov
mov
and
fs
mov
mov
jl
and
mov
aaa
fdivrl
and
mov
insl
jmp
mov
movsb
dec
sub
push
dec
outsl
aam
data16
xchg
xchg
add
push
sti
sbb
pop
mov
pop
mov
sarl
int
ja
sub
pushf
jnp
adc
popf
int
frstor
std
xlat
idivb
imul
rol
mov
out
pusha
inc
aad
push
imul
pop
pop
sahf
icebp
adc
push
inc
sbb
outsl
in
mov
stos
loop
arpl
pop
test
push
mov
shlb
jg
mov
mov
or
mov
lret
test
mov
nop
push
inc
or
pop
pop
xchg
xor
adc
repz
iret
ficomps
pop
pop
mov
add
or
dec
fdivl
gs
iret
mov
cmc
inc
call
jge
scas
lock
mov
out
xchg
sbbb
dec
mov
cmp
repz
cli
mov
dec
sar
sbb
xor
xchg
sub
jnp
or
push
notl
inc
jnp
shl
dec
mov
inc
cmp
lret
das
dec
jns
jmp
cmp
mov
cld
jne
mov
adc
mov
adcb
push
push
pop
inc
movsb
outsl
mov
imulb
push
out
sahf
dec
mov
push
data16
mov
dec
mov
sahf
jmp
mov
cmp
mov
ficoms
dec
xor
ret
push
adc
jecxz
sub
outsl
dec
dec
aaa
lock
loopne
pop
aas
mov
jbe
push
inc
lcall
rorl
stc
cmp
sub
xor
scas
push
and
imul
sbb
das
dec
fcoms
mov
movsb
pop
movsb
xchg
cltd
imul
mov
sub
add
ret
repz
cli
divb
mov
pusha
inc
dec
imul
cltd
lea
sub
imul
call
and
outsb
xor
into
jnp
loop
jge
mov
sar
push
test
dec
ss
aam
test
sahf
add
jnp
cmp
sub
test
or
sub
inc
sbb
push
lock
sbb
sub
pop
mov
sahf
mov
mov
cmp
daa
popf
ds
repz
les
dec
mov
outsl
imul
popf
out
pop
adc
dec
stos
pop
mov
shl
fs
mov
inc
out
jle
cmp
subb
sub
jno
push
pop
inc
mov
dec
cmp
xlat
ds
adc
sub
pop
add
sub
lret
movsb
cmp
loopne
das
and
push
sub
pop
xchg
bound
pusha
shrl
jae
leave
dec
inc
jo
and
int
gs
mov
cld
lret
nop
lods
notl
lret
cmp
push
inc
pusha
jl
mov
sbb
fnstenv
dec
or
testb
movsl
test
cs
pop
jae
movsl
mov
inc
dec
out
inc
mov
mov
cmp
cvtpi2ps
push
inc
gs
scas
sbb
and
movsb
cmp
dec
push
push
fs
ret
lret
int3
into
sub
add
inc
sbb
fstpl
push
iret
scas
xchg
bound
push
and
push
or
sbbb
out
push
add
or
mov
pop
stc
or
xchg
xchg
iret
jecxz
cmc
fdivrl
idiv
mov
xor
outsb
mov
repnz
lret
sbb
enter
lds
sub
out
fwait
insl
sub
loopne
fwait
push
out
stos
sub
xor
mov
fidivrs
test
dec
cmp
mov
xor
and
outsl
and
lahf
push
dec
xor
lea
insl
xlat
scas
ds
sti
test
mov
inc
fs
push
shr
ret
dec
cli
loope
leave
iret
xor
ltr
aas
std
mov
and
stc
stos
imul
mov
int
adc
repz
data16
fld
add
mov
push
mov
fidivrl
xchg
dec
fisubs
shlb
add
dec
lret
imul
sub
cmp
cwtl
sub
jmp
sbb
sbb
mov
adc
lcall
xchg
xchg
inc
cmpsl
popf
mov
lods
stc
jle
fmull
lret
cli
test
cmp
mov
inc
cli
cwtl
pop
adc
out
hlt
nop
cmp
xor
sbb
xchg
aaa
xchg
jge
frstor
pusha
mov
lcall
sbb
mov
clc
sar
mov
mov
in
push
icebp
out
icebp
sub
or
punpckhdq
add
xorl
mull
mov
cmp
pusha
xor
and
clc
adc
lcall
popa
ret
imul
ja
mov
push
lods
loope
hlt
ja
cli
adc
adcl
pop
push
in
sahf
push
adc
pop
cmp
jg
inc
adc
stos
pushf
les
sarb
cmp
rcrb
loop
xor
ret
pop
insb
add
sub
mov
cmp
adcb
in
pop
mov
push
push
rorb
daa
ljmp
jno
jae
and
gs
aaa
movsb
rcl
and
xchg
fidivs
mov
bound
mov
add
inc
and
js
mov
pop
inc
mov
and
push
daa
fst
ljmp
mov
xor
sub
push
adc
lds
cmp
mov
sub
xor
insl
xlat
or
faddl
mov
enter
lds
mov
add
dec
mov
pop
loop
cmpsl
xchg
pusha
mov
pop
out
loope
cmpsl
das
xchg
data16
mov
or
movb
mov
sbb
push
test
mov
mov
leave
fnstsw
nop
jbe
fnstcw
jmp
test
mov
pusha
xchg
adc
clc
xchg
mov
lret
xlat
adc
push
cwtl
in
lods
scas
xchg
inc
pop
out
adc
mov
outsb
rcl
jp
loopne
lret
out
and
mov
adc
ds
pop
xchg
push
mov
sub
dec
xlat
jbe
sahf
lds
scas
outsl
xchg
dec
stos
imul
push
pop
sub
aam
gs
in
call
outsb
imul
sbb
push
and
and
mov
arpl
icebp
in
out
cmp
rcll
cld
or
pop
jmp
aad
xchg
jns
pop
jno
sub
add
lods
pop
jmp
jl
push
in
sbb
or
cltd
out
push
inc
lea
ljmp
mov
movsl
ss
ja
syscall
ret
sbb
les
fs
push
add
pop
popf
clc
cli
idivl
xlat
xchg
mov
in
pop
into
cmp
xchg
iret
fstp
ss
inc
cmp
xchg
sub
sbb
rol
add
mov
mov
out
es
addr16
lret
push
adc
mov
ja
ret
inc
mov
inc
mov
jns
or
jmp
pop
subl
mov
xchg
stos
push
push
add
nop
jae
xor
sbb
mov
fcoml
lahf
lods
sbb
sbb
add
mov
push
xchg
inc
cwtl
sbb
cmp
or
cmp
and
pop
add
adc
and
ret
cmpsl
stc
inc
fs
imul
popf
mov
pop
fldt
icebp
cmp
pop
rcrl
or
and
dec
pop
mov
test
mov
scas
push
xchg
cmp
push
icebp
mov
ret
div
push
ds
out
inc
mov
mov
jp
movsl
jo
pop
mov
out
ret
sub
aad
adc
je
fsubrs
lock
mov
lret
mov
jle
ja
int3
dec
imul
scas
jbe
push
lods
sbb
bound
in
out
lret
ja
mov
repz
and
mov
mov
adc
pusha
js
inc
pop
dec
adc
xchg
cli
loope
imul
pop
push
repnz
cltd
inc
cltd
and
mov
insb
orl
dec
jp
pushf
js
roll
fcmove
popf
adc
adc
into
jl
xchg
inc
jbe
xor
cltd
jae
add
mov
popf
jne
xchg
test
mov
cmp
cmp
mov
das
lret
dec
pop
std
aam
mov
mov
push
stc
push
sbb
out
mov
sbb
fbstp
pop
loope
int
or
dec
out
xchg
mov
fs
out
aad
cmpsb
sub
test
sar
fsubs
sbb
cs
fisubl
dec
pop
les
jp
ljmp
dec
jns
sub
repz
jecxz
imul
dec
imul
stc
lret
fs
stos
movsb
idivl
loopne
push
dec
and
jle
mov
sbb
mov
and
popf
and
sbbl
stc
test
or
cwtl
sti
mov
push
sub
xchg
mov
mov
sbb
aaa
call
push
add
repnz
stc
cmp
mov
jp
inc
push
or
inc
ds
outsl
or
rcrb
ljmp
jno
ljmp
xchg
sti
jno
xchg
push
aas
lods
jg
sarl
jge
dec
mov
pushf
in
jle
mov
lret
push
or
lret
shrb
add
mov
leave
or
jp
repz
add
push
popa
lods
pop
dec
push
lea
xchg
inc
fs
xor
jle
fimuls
sbb
fadd
sub
mov
in
xchg
pop
mov
negl
adc
xor
push
add
inc
pop
jno
adc
test
mov
and
arpl
testb
jbe
cli
inc
fs
movsl
xchg
xor
pop
or
int3
imul
jne
pop
aaa
inc
iret
push
rorb
shll
inc
jnp,pn
cwtl
test
and
in
pop
nop
cmpsb
push
jecxz
rclb
sti
notb
or
lock
mov
add
movsb
mov
stos
inc
cmc
mov
xchg
cld
es
pusha
xchg
cmp
mov
ret
sub
mov
orl
dec
pushf
test
dec
pushf
cmpsl
call
xchg
cmpsl
pop
popf
bound
mov
cmpsb
cmp
lds
int
sub
loopne
and
xor
dec
iret
sbb
pop
xchg
sti
mov
pop
cwtl
add
fmull
lds
jge
mov
psubsw
inc
stos
mov
fcoms
pop
fistl
lds
jbe
ficoms
roll
and
adc
adc
mov
outsl
ljmp
rorb
mov
insl
and
insl
pop
mov
aaa
add
pop
hlt
xor
addl
xchg
mov
mov
adcl
jecxz
pop
js
pop
dec
add
mov
out
sbbb
push
xor
call
xchg
mov
and
stos
jb
gs
jno
adc
movsl
add
mov
mov
lds
in
sbbb
into
lcall
mov
dec
aas
xchg
test
fistps
jecxz
cmpsl
shlb
sar
xchg
arpl
lret
hlt
shll
stos
addb
mov
mull
inc
in
test
hlt
sub
mov
scas
cltd
enter
add
cltd
push
into
mov
call
negl
orl
ret
push
xchg
inc
out
xchg
push
xchg
test
mov
inc
fcomp
shlb
call
dec
imul
mov
shlb
imul
adc
mov
fstpt
sub
and
sbb
notl
xchg
mov
push
jo
inc
cltd
fld
push
movsl
test
cmp
xor
cmpl
into
jp
cmp
cli
push
cwtl
aad
sbb
das
cmpsl
inc
jae
test
loop
xchg
cli
leave
sbb
xchg
call
push
lods
sbb
jle
pop
jns
lret
cmpsb
in
lea
les
push
ja
cmp
push
pop
xor
jmp
pusha
subb
pop
jle
outsl
dec
dec
andb
rolb
bound
add
sbb
sbb
sar
in
mov
lea
mov
repnz
or
das
jmpw
xor
jno
mov
jno
jl
push
jne
dec
inc
ja
mov
mov
aas
dec
inc
ljmp
ret
jmp
cmp
sbb
ds
mov
dec
push
sub
xor
or
call
daa
adc
in
ja
aam
pop
and
cmp
jecxz
jae
or
hlt
push
add
dec
fadd
add
in
push
sbb
cwtl
test
lds
insl
xlat
jecxz
hlt
rorl
sbb
in
mov
xorl
ds
dec
not
shr
lcall
mov
or
sbb
sub
cmpsb
sti
sub
gs
aam
testb
pop
mov
iret
xchg
pop
push
icebp
cmc
movsb
xor
mov
cmpsl
jbe
pop
adcl
sub
data16
in
xchg
and
icebp
lahf
mov
shll
dec
push
inc
aam
sbb
loop
rorl
inc
pop
jno
data16
adc
or
mov
loopne
into
add
xchg
nop
dec
mov
pop
psrlq
rcrl
shl
sbb
inc
jmp
mov
or
lods
frstpm(287
fs
clc
pop
push
les
dec
ds
or
popf
fs
aam
push
mov
mov
adc
pop
rcrb
mov
fidivrl
insb
mov
mov
jns
movsb
and
adc
mov
aas
and
push
push
rol
inc
dec
xchg
das
in
cmpsb
cmpsl
scas
ja
xchg
xchg
ficoml
pushf
sub
sub
inc
leave
orb
xor
mov
xchg
pop
push
inc
test
das
pop
xchg
jp
xchg
ds
xor
push
add
inc
scas
adc
push
pop
jno
js
cmp
bound
outsb
lods
xor
imul
pop
ljmp
into
add
pop
fs
fcomps
lock
jl
cmp
sbb
xchg
sahf
push
bound
loopne
jbe
mov
jl
in
sbb
in
mov
pushf
hlt
adc
cli
lods
sub
lea
pop
xchg
inc
pop
xchg
xchg
test
ficoml
repz
push
mov
fwait
es
sub
pushf
aam
mov
outsl
cld
icebp
outsb
ljmp
adc
sub
lea
push
dec
mov
xchg
jno
lods
inc
jle
cmc
rol
mov
lea
das
cmp
stos
push
jle
cmp
push
sbbl
mov
stc
xchg
xlat
andl
push
pop
js
sub
cmp
cld
out
push
dec
dec
ja
in
in
mov
icebp
mov
insl
std
pop
lods
cmp
int
dec
arpl
cwtl
pop
push
pop
stos
push
xchg
or
sbb
mov
repnz
sti
mov
popa
inc
or
mov
add
push
jecxz
pop
stc
mov
xchg
cld
and
mov
and
stos
ja
mov
fimuls
outsb
jbe
jge
loop
pop
ret
or
push
movsb
stos
in
mul
sub
popa
mul
dec
mov
xchg
lret
cmp
aam
mov
jp
or
out
test
mov
leave
insb
adc
ret
pop
outsl
adc
mov
mov
inc
fs
outsl
gs
stos
shll
sahf
inc
cmpsl
cmp
push
lcall
pop
mov
rclb
push
jp
int3
jle
cmc
or
sbb
shlb
sub
scas
je
addr16
xchg
cltd
fadd
loopne
push
loop
adc
lods
cmpsb
movsl
dec
lock
into
call
xchg
cwtl
jp
gs
lock
xchg
add
subb
push
cmp
xor
cltd
aam
repz
enter
js
push
pop
fcoms
popa
adc
mov
or
loope
adcb
data16
in
and
push
stos
push
xchg
xlat
mov
pop
cmp
push
jl
clc
repnz
push
bound
mov
notl
aaa
pop
cwtl
popa
xchg
faddp
push
lods
inc
test
cmp
aam
push
sti
inc
sub
cmc
push
jo
mov
jb
in
cmp
shll
or
aam
popa
jge
icebp
jg
and
xchg
dec
sti
xchg
and
test
in
push
mov
test
sub
mov
fists
xor
jno
sub
xchg
mov
aad
mov
add
mov
sbbb
xor
insb
dec
mov
mov
add
or
xor
jecxz
jmp
outsl
inc
cmp
sti
cltd
mov
ror
arpl
pop
leave
jge
in
sbb
rorb
scas
push
sub
data16
jno
movsl
or
je
xor
fnsave
or
mov
and
jecxz
cld
cmpb
enter
sbb
xchg
movd
dec
sub
sub
mov
pop
repnz
out
imul
and
mov
je
outsb
mov
mov
dec
pop
mov
js
push
lds
xchg
daa
icebp
pop
jl
into
jno
and
adc
xlat
aas
leave
pushf
cld
test
sub
daa
adc
int3
popf
or
pop
lret
es
inc
cmp
lods
and
pop
mov
push
das
or
ret
mov
clc
fwait
sbb
lcall
push
or
aas
filds
push
sti
lret
fiadds
scas
arpl
enter
xchg
or
push
dec
andl
in
jnp
push
jnp
add
loope
inc
pop
adc
scas
cmp
movsl
sub
add
rcl
mov
mov
mov
pop
dec
bnd
push
cmc
test
adcb
mov
xor
jl
cmp
cli
xchg
inc
or
push
fmuls
jp
xchg
hlt
stos
inc
xchg
nop
mov
in
inc
add
stos
adc
cmpsl
callw
and
or
xchg
stc
cmpps
cltd
cmp
dec
pop
test
mov
and
jle
dec
lods
push
dec
cs
cmp
test
jae
outsl
add
insl
add
imul
add
add
jbe
add
outsl
add
sub
add
bound
jne
jns
insl
add
add
add
jae
sub
popa
je
push
add
add
bound
add
add
push
add
inc
add
add
jae
imul
add
push
jo
insb
add
jae
je
add
imul
add
insb
add
jae
je
add
imul
add
outsl
add
add
add
je
add
outsl
add
add
imul
jae
add
push
add
add
add
jae
push
add
jne
jb
add
add
outsb
add
add
outsb
add
add
add
outsb
add
add
gs
gs
dec
jo
gs
imul
