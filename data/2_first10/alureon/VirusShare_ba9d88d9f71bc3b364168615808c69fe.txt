cmpl
jne
xor
jmp
call
xor
divl
mov
ret
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
add
movzwl
movzwl
incl
addl
subl
add
cmp
jb
pop
pop
pop
leave
ret
push
mov
cmpl
jb
push
push
mov
mov
mov
sub
test
sub
mov
lods
xor
stos
sub
sub
sub
sub
add
rol
push
add
pop
jne
pop
pop
pop
ret
push
mov
add
sub
push
push
xor
mov
push
push
pushl
mov
push
call
test
mov
je
add
cmp
jb
push
push
call
test
mov
je
cmp
je
push
push
pushl
mov
call
sub
jne
mov
push
push
pushl
push
call
test
jne
jmp
xor
jmp
mov
mov
mov
mov
rep
mov
pop
pop
pop
leave
ret
push
mov
add
sub
mov
add
mov
push
xor
cmp
mov
je
add
sub
add
cmp
je
push
mov
cmpl
jne
mov
add
push
mov
call
mov
mov
call
push
pushl
call
test
je
mov
add
jmp
cmp
je
add
mov
test
jne
jmp
lea
push
push
lea
push
push
mov
mov
call
mov
mov
mov
add
test
add
cmpl
jne
pop
pop
leave
ret
push
push
pushf
rdtsc
imul
pop
add
mov
and
rol
xor
pop
pop
ret
push
mov
sub
add
push
xor
cmp
push
push
je
mov
jmp
push
mov
call
mov
push
xor
pop
movl
lea
rep
lea
push
mov
call
mov
mov
call
add
cmp
je
xor
mov
cmp
je
cmpl
jne
lea
call
push
push
pushl
mov
push
call
mov
test
mov
jne
xor
jmp
mov
mov
mov
rep
pushl
pushl
pushl
push
call
mov
sub
mov
mov
add
push
lea
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
call
pushl
push
call
mov
test
mov
je
mov
mov
add
mov
mov
mov
add
movzwl
lea
mov
add
movzwl
lea
mov
lea
push
push
push
push
mov
call
pushl
push
call
mov
mov
sub
xor
cmp
mov
je
mov
cmp
je
add
mov
jmp
mov
mov
mov
cmp
je
add
lea
mov
mov
mov
mov
add
push
push
push
call
or
sub
mov
mov
mov
sub
cmp
mov
jbe
sub
test
add
mov
mov
mov
add
addl
subl
add
incl
mov
mov
cmp
jb
pushl
call
test
je
mov
push
call
test
je
cmpl
je
mov
mov
call
mov
add
mov
movzwl
xor
test
mov
jbe
mov
mov
mov
subl
addl
push
pop
rep
mov
add
add
add
mov
movzwl
inc
cmp
jb
push
push
pushl
mov
call
mov
mov
mov
push
pushl
add
pushl
pushl
call
pop
pop
pop
leave
ret
push
push
push
push
push
pushl
mov
push
call
mov
push
pushl
mov
call
cmp
mov
mov
jne
cmp
jne
push
push
push
mov
call
xor
push
push
pushl
call
mov
pop
pop
pop
ret
mov
add
mov
test
je
add
add
add
add
add
push
mov
push
lea
xor
cmp
jbe
add
sub
cmp
jb
mov
add
xor
cmp
jbe
add
lea
test
cmp
jb
pop
pop
xor
push
add
pop
ret
push
mov
and
sub
sub
push
push
push
mov
call
test
pop
jne
push
mov
call
test
pop
jne
push
mov
call
pop
xor
push
push
push
mov
call
push
xor
pop
movl
lea
rep
lea
push
mov
call
cmp
jne
cmpl
jae
movzwl
test
jne
push
pushl
pushl
call
jmp
push
push
push
call
ret
jmp
push
mov
call
pop
mov
call
xor
inc
pop
pop
mov
pop
ret
push
mov
sub
sub
add
push
mov
mov
add
mov
test
jne
inc
jmp
andl
push
lea
lea
cmpl
push
je
mov
mov
add
push
mov
call
test
mov
je
mov
andl
add
cmpl
je
mov
pushl
pushl
call
test
je
incl
mov
mov
lea
cmpl
jne
mov
incl
mov
imul
lea
lea
cmpl
jne
xor
lea
test
pop
pop
pop
leave
ret
xor
jmp
push
mov
push
push
xor
mov
mov
scas
je
push
add
pop
jmp
mov
mov
pop
leave
ret
push
mov
mov
mov
sub
sub
add
push
mov
test
jne
xor
jmp
mov
mov
push
add
mov
push
mov
mov
mov
add
add
add
test
mov
jns
and
sub
cmp
jae
mov
jmp
xor
cmp
mov
jae
jmp
mov
mov
mov
add
call
cmp
je
incl
mov
cmp
jb
mov
mov
mov
cmp
je
movzwl
mov
add
test
je
mov
add
cmp
jae
cmp
jb
xor
cmpb
je
push
add
pop
cmpb
jne
push
lea
push
push
mov
call
add
add
lea
push
mov
movb
call
mov
test
jne
xor
jmp
lea
call
push
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
sub
mov
andl
mov
mov
add
mov
sub
add
mov
push
lea
push
mov
mov
mov
mov
rep
mov
mov
mov
mov
add
sub
mov
lods
xor
stos
sub
sub
sub
add
add
rol
dec
jne
mov
sub
add
mov
imul
add
mov
mov
neg
imul
add
add
add
mov
push
lea
push
push
push
mov
call
mov
mov
movl
mov
mov
mov
lea
mov
mov
mov
mov
rep
mov
add
add
decl
mov
mov
jne
addl
subl
pop
pop
leave
ret
push
mov
push
push
push
push
mov
xor
add
mov
cmp
movzwl
push
lea
mov
jbe
lea
mov
xor
test
je
mov
and
neg
sbb
and
sub
sub
add
jmp
test
jns
push
jmp
test
je
push
pop
test
je
or
test
je
mov
mov
add
lea
push
push
push
push
mov
call
test
je
movzwl
incl
sub
add
cmp
jb
xor
push
add
pop
pop
pop
pop
leave
ret
xor
jmp
push
mov
push
push
push
xor
push
mov
call
mov
jmp
mov
movzwl
imul
add
mov
inc
cmp
jne
testl
je
push
push
mov
mov
mov
add
add
xor
xor
mov
add
add
and
mov
add
sub
pop
pop
mov
pop
leave
ret
push
mov
add
sub
push
lea
push
mov
mov
mov
mov
rep
push
push
pushl
mov
push
call
mov
test
mov
je
push
call
mov
movzbl
lea
cmpb
jne
movb
mov
mov
mov
rep
mov
mov
mov
mov
lods
sub
sub
add
mov
sub
sub
xor
imul
stos
add
add
add
rol
dec
jne
mov
mov
mov
movzbl
imul
xor
push
add
pop
push
add
pop
jne
cmp
jne
pushl
pushl
push
call
mov
mov
mov
rep
push
push
push
mov
call
xor
sub
pop
pop
pop
leave
ret
je
add
jns
add
notl
add
push
dec
pusha
into
inc
push
xchg
or
loope
addl
js
jecxz
cmpsb
cmpsl
dec
adc
iret
and
popa
push
imul
mov
cmp
divl
aam
or
ja
pop
xor
push
jl
pop
mov
popf
sbb
int
jp
shlb
xor
test
mov
xchg
inc
jne
push
fnstcw
and
and
cwtl
mov
popf
jl
dec
repnz
xchg
idiv
loopne
fisubrl
aam
push
pop
xchg
les
jnp
repz
push
iret
adc
jns
frstor
out
sbb
mov
jns
mov
jns
jl
jb
repz
jp
pop
pop
fwait
mov
out
insl
push
lret
enter
mov
imul
pop
xlat
das
cli
arpl
enter
ja
jmp
push
popf
gs
loop
dec
stc
not
imul
daa
and
jmp
out
les
xor
fsubs
mov
sbb
adc
js
clc
loope
aam
sbbb
repnz
push
add
popl
push
icebp
jnp
mov
sbb
xlat
clc
cmp
mov
adc
arpl
and
out
testb
pop
mov
sahf
jo
and
hlt
xchg
fisubrl
cs
arpl
or
dec
inc
pusha
call
bound
pop
xchg
mov
sub
pushf
xor
mov
sub
aas
pop
lea
lcall
aaa
aaa
pop
stos
mov
lds
mov
add
dec
lcall
mov
paddsb
and
inc
movsb
mov
stos
sbb
aam
pop
xor
jp
mov
or
mov
iret
mov
dec
call
hlt
xor
xchg
xchg
push
lea
in
xchg
pusha
mov
jmp
gs
loop
cltd
add
pusha
xor
psubsw
movsb
ja,pn
push
xor
into
jecxz
push
mov
inc
cmp
cmc
lea
andb
mov
pop
sbb
rorl
in
out
ja
jmp
test
push
ret
jnp
fsubr
inc
mov
int
fadds
into
shlb
stos
mov
loop
add
out
ficompl
mov
add
and
int3
push
add
xchg
loopne
int
mov
std
int
ljmp
mov
icebp
int3
jl
sub
xchg
mov
jp
xchg
stos
je
dec
out
stos
scas
xor
bound
das
test
popa
jp
ljmp
and
sbb
xchg
outsl
cmpb
pop
add
ja
xor
mov
cmc
call
xor
nop
jmp
cld
xchg
stos
stos
push
imul
or
fldenv
in
hlt
arpl
ljmp
pushf
hlt
es
dec
ja
sub
insb
dec
xchg
mov
add
push
xchg
aas
fnstcw
mov
movsb
arpl
cmp
stc
add
or
sbbb
mov
gs
mov
sub
cli
rcl
sahf
inc
inc
int
jno
xchg
push
add
jg
ret
push
xor
mov
mov
add
movsl
xlat
pusha
mov
lret
sub
cmp
std
mov
mov
mov
repnz
inc
xchg
mov
dec
adc
or
jg
or
sbb
lea
je
inc
shll
mov
inc
sub
into
adc
adc
pushf
int3
dec
push
sub
mov
je
mov
dec
imul
icebp
movsl
stc
decb
pop
lahf
lahf
test
and
es
shrl
stc
add
jno
jae
jecxz
in
movsb
xchg
xor
xchg
jno
daa
push
pop
lods
fiaddl
and
jb
jecxz
nop
fcmovne
scas
in
arpl
mov
push
xchg
sbb
jecxz
insb
repnz
imul
push
sub
jp
imul
add
in
pop
popa
xor
addr16
fadd
insb
flds
pop
leave
test
scas
cld
in
lea
push
add
out
push
into
cmp
jmp
pop
jl
leave
sbb
mov
push
jecxz
inc
dec
xor
bound
js
insb
into
dec
jle
mov
aam
pop
fmull
lds
jbe
shrb
pop
nop
cmpsl
js
sub
cmp
call
jns
popl
clc
jnp
nop
push
pop
and
cmc
mov
mov
ret
movsl
or
xchg
mov
and
imul
push
shll
mov
pop
jg
push
jb
inc
or
xchg
push
sbb
ret
js
push
scas
call
inc
addr16
fdiv
mov
or
dec
add
mov
test
push
out
or
clc
push
nop
cmpsb
out
mov
mov
lods
pushf
dec
mov
and
lahf
lods
imull
fcoms
jo
test
adc
pop
inc
pop
jp
addr16
inc
sbb
mov
xchg
sbb
adc
scas
adc
jge
outsb
repnz
sahf
loop
jecxz
nop
ss
or
in
adc
add
lahf
nop
adc
outsb
ja
cmp
imul
shrl
enter
sbbb
fisttpll
sbb
aad
sub
daa
lahf
xor
xor
stc
or
push
lahf
mov
jg
adc
cltd
sbb
call
push
pop
xor
sub
and
mov
xlat
pop
int3
das
icebp
cmpsb
pushf
stos
and
dec
xchg
push
push
mov
or
jl
orl
data16
lcall
add
xor
out
sbb
std
push
test
in
jno
or
fistpll
and
hlt
mov
ret
and
nop
xor
and
aad
int3
pop
push
stos
int
repz
sbb
mov
inc
mov
into
cmp
jo
cmp
or
cmp
fs
jno
sbbl
cmpb
mov
dec
xchg
inc
inc
jbe
mov
mov
mov
sbb
or
mov
jg
dec
fs
fbld
stos
add
dec
and
stos
bound
loop
out
cmc
int
and
nop
cmp
push
and
out
xor
jp
xchg
repnz
sbb
inc
adc
andl
inc
ljmp
fisttps
outsl
inc
xor
cmp
pop
xor
imul
int
lods
xchg
or
xor
fwait
fs
jo
loop
adc
push
push
shrb
movsl
rclb
ss
arpl
xor
xchg
lods
cmp
mov
rorb
stos
cmp
movsb
inc
je
mov
xchg
arpl
mov
xchg
mov
mov
fisttpl
xchg
lock
mov
gs
imul
rolb
pop
frstor
jge
jne
xchg
pop
sti
jmp
push
in
ss
jnp
xor
into
in
scas
cmp
cmp
adc
clc
lret
push
cmc
scas
jne
push
shrl
repnz
test
out
jne
iret
sahf
rcrb
icebp
sub
mov
jle
pop
push
data16
test
shr
lret
pop
pop
dec
aad
inc
popa
sbb
inc
or
inc
in
test
outsb
repz
nop
jmp
lods
mov
imul
imul
mov
enter
mov
sbb
and
mov
push
jno
push
add
iret
and
jmp
or
dec
dec
ret
adc
cmpsb
inc
xlat
mov
adc
inc
pop
adc
push
jbe
orb
in
dec
pop
adc
mov
sbbb
jns
xorb
jmp
mulb
ljmp
mov
sub
lds
cmp
popa
movsl
lods
or
mov
push
sbb
data16
push
outsl
sub
test
jae
imul
dec
sub
cmp
lods
fnstcw
jge
push
stos
xor
scas
int3
jno
out
cmp
or
mov
cmove
jno
js
push
xchg
cli
jns
aaa
fwait
xchg
lahf
push
add
loopne
xlat
mov
cwtl
mov
pop
mov
sub
sub
mov
cmp
das
ds
ljmp
and
in
addb
test
sub
ljmp
push
jns
jnp
daa
clc
sub
jo
in
jp
or
jnp
jle
add
xor
or
mov
pop
aam
imul
jne
or
bound
rcrl
push
ljmp
jo
shlb
enter
popf
shll
cmp
jg
out
or
xor
cmp
dec
jecxz
sub
addr16
mov
fildll
or
loopne
adc
in
mov
push
xchg
push
insl
mov
mov
xlat
lods
jae
shrb
add
xor
sahf
and
xchg
sbb
mov
sub
rcrb
call
sarb
pushf
adc
pop
insl
add
subb
les
or
icebp
cmp
stos
mov
cs
jne
push
mov
push
test
add
out
pop
and
pop
mov
and
inc
out
xor
mov
aas
push
loop
xor
lahf
sbb
adc
add
ret
push
divb
aam
es
mov
pushf
scas
dec
pop
mov
pop
js
lahf
gs
addb
shll
adc
lret
mov
pop
add
fsts
test
jae
jbe
cmc
sub
pushf
js
or
xlat
lcall
sub
in
nop
jmp
jmp
lcall
stc
aaa
cmp
iret
sbb
push
pop
xor
and
leave
mov
sub
gs
and
in
and
stc
mov
and
pop
mov
gs
or
leave
or
xchg
pop
mov
aas
iret
ja
cli
adc
dec
test
pop
ds
pop
jge
sbb
jae
out
xchg
pop
std
cwtl
outsl
mov
push
dec
mov
pop
cwtl
in
ficoml
sub
lcall
mov
sub
xor
int3
test
pop
test
sub
mov
xchg
sbbl
mov
mov
andb
push
fs
pop
ds
decb
sub
fiadds
arpl
mov
mov
pop
daa
mov
pushf
dec
movb
data16
cmc
pop
aam
negl
mov
repz
addl
fldt
int3
stc
xlat
adc
inc
pop
loopne
hlt
adc
jae
rcrb
add
movsl
adc
subl
add
pushf
mov
cmpl
icebp
pop
pop
cmp
iret
cs
ret
fsubrs
or
mov
mov
popa
sub
aas
jecxz
andl
loopne
iret
add
and
xor
xchg
loope
icebp
pop
sahf
test
jbe
push
movsb
sub
mov
mov
in
cld
int3
int3
out
pop
xor
das
shlb
cmpsb
add
stos
dec
xor
pop
mov
add
xor
movsb
mov
jmp
test
test
adc
out
jae
push
leave
sub
inc
mov
lds
mov
mov
ret
xor
xor
cmc
jno
adc
rcrl
frstor
mov
and
lods
dec
popf
andl
idivl
out
mov
add
pslld
test
mov
enter
mov
clc
jb
dec
jae
xchg
add
int3
leave
mov
movsb
dec
mov
mov
xor
pop
inc
mov
mov
or
jbe
in
jmp
mov
or
mov
shl
pop
lods
push
outsb
insl
stc
dec
sbb
sbb
test
mov
inc
shrb
ficompl
push
fwait
xor
mov
bsr
xchg
jnp
mov
les
adc
shlb
jbe
push
je
movb
addl
mov
inc
gs
outsl
push
xchg
addr16
cmpsl
dec
hlt
adc
ljmp
das
lahf
insl
push
rorl
cmpl
lcall
xchg
ds
inc
adc
push
dec
mov
pushf
popf
cmp
ret
jmp
cltd
xor
xchg
in
lock
jmp
cmp
push
loopne
and
jecxz
jg
shlb
mov
inc
push
mov
cwtl
cs
clc
and
push
cli
enter
loopne
cmp
xchg
mov
dec
cmp
adc
ds
jp
cmp
lods
lret
pop
cltd
test
lods
lock
push
xchg
push
add
or
cmp
mov
int
leave
cmp
adc
xchg
dec
mov
lods
sbb
out
pop
mov
enter
mov
arpl
pop
imul
jns
sub
movsl
mov
push
xchg
lods
adc
sbb
sbb
jg
sub
inc
mov
les
das
out
jmp
ljmp
sub
cmpb
repnz
ds
jp
fwait
dec
jns
stc
lods
movsl
dec
mov
lods
in
mov
dec
add
lcall
push
insb
out
cltd
stos
nop
test
mov
xor
add
shrl
jno
outsl
iret
shrb
mov
cmp
minps
cmpsb
jbe
out
out
or
xor
add
mov
aam
sbb
or
int
pop
mov
ret
loope
daa
mov
pop
in
cwtl
mov
cmpsb
aaa
rcl
cmp
fisubrl
dec
sbb
aad
js
adc
sub
xor
les
dec
test
add
pop
mov
pushf
rclb
call
ret
out
hlt
into
ret
cwtl
xchg
aad
jnp
mov
cmc
lcall
push
rorb
cmp
je
push
xchg
mov
rorl
xchg
add
mov
enter
popf
mov
push
nop
das
lea
movsb
les
xchg
mov
push
jne
sahf
movsl
push
and
in
daa
arpl
adc
xchg
subl
dec
adc
decl
movsb
dec
subb
mov
inc
sub
aam
xchg
add
jnp
dec
fidivl
repnz
and
sahf
adc
rclb
and
dec
fwait
dec
jo
pushw
in
popa
xor
ja,pn
fwait
mov
icebp
add
mov
lods
dec
mov
or
rorl
jns
or
pop
and
movb
add
or
cs
mov
sahf
and
andb
in
dec
adc
push
lods
xchg
test
pop
lds
xor
int
dec
push
add
sub
ja
sti
xor
shlb
pop
mov
enter
imul
mov
andl
lods
pop
xchg
sahf
stos
addr16
shr
movsb
xchg
mov
daa
jmp
daa
mov
dec
lock
jae
nop
mov
xor
mov
sbb
idiv
mov
jge
call
dec
loope
or
test
fsub
inc
cmpl
push
mov
push
imul
ss
pop
into
bound
pop
je
cmpb
pop
int3
int3
sahf
push
sub
mov
xchg
mov
mov
xchg
push
mov
bound
mov
in
sub
les
cmp
cltd
aaa
adc
les
bnd
int3
inc
call
sub
js
imul
mov
push
mov
adc
jl
xlat
inc
xor
adc
ss
insb
jecxz
cmp
insl
loopne
dec
cmp
xor
dec
fsubrs
sbb
pop
mov
push
sbb
in
das
dec
push
mov
dec
mov
sar
int
sub
mov
jae
pop
xchg
mov
and
je
xor
lods
jp
sbb
cli
das
mov
fwait
mov
push
xchg
push
std
add
and
popf
push
andb
loope
insl
arpl
daa
sub
lret
pop
decl
dec
lret
fwait
in
xchg
lcall
add
insb
lret
std
pop
mov
ds
sbb
mov
cltd
adc
shrl
das
test
xchg
xlat
nop
jns
ret
jo
rorl
adc
jnp
sub
cmp
cmp
push
adc
pop
jno
and
mov
int3
das
scas
jecxz
arpl
xchg
roll
sahf
cmpsl
xor
xchg
dec
loope
mov
out
mov
mov
sub
inc
mov
jbe
nop
jg
leave
mov
enter
jno
call
push
icebp
roll
jno
pop
insl
xchg
andl
int
push
mov
xchg
clc
arpl
pusha
decb
lcall
clc
jmp
jp
mov
lea
cmpsb
jp
data16
push
mov
nop
shlb
sbb
jbe
sti
js
idivb
nop
mov
scas
mov
dec
stc
movsl
imul
or
sti
loop
ja
lahf
or
stos
push
inc
out
stc
shll
in
sahf
xor
aam
xor
insb
push
sti
mov
cmp
mov
std
fidivrs
enter
scas
shr
push
pop
loop
pop
js
cwtl
jb
ds
and
imul
js
fldcw
movsl
mov
ret
in
jl
cltd
or
out
mov
xor
dec
fldenv
shlb
lds
push
or
and
cmp
lret
je
push
sub
or
pop
fimull
mov
aas
loopne
imul
gs
shlb
js
arpl
fsubr
mov
arpl
push
pop
xor
fwait
out
pop
icebp
imul
jmp
repnz
dec
push
fdivs
sub
adc
lret
lea
xor
cmp
or
jp
pop
subb
movsl
adc
jg
pop
lds
push
lods
mov
dec
xor
popa
outsl
push
into
add
cmp
insl
adc
sub
roll
mov
lret
mov
xchg
jmp
je
cltd
aam
mov
cld
xchg
cwtl
push
sub
jne
mov
lds
inc
pop
out
rcrl
xchg
int3
test
or
and
sti
js
push
sbb
mov
out
mov
loopne
sarl
inc
fldenv
sub
dec
cwtl
popf
dec
mov
xor
mov
loope
cmp
mov
inc
sbb
daa
lret
pop
adc
mov
sbb
mov
mov
cmpsl
imul
sbb
cmp
or
mov
and
cmp
stos
int
fldcw
jne
jmp
aam
mov
out
and
clc
xlat
icebp
fmull
xchg
pushf
push
test
xchg
cmc
sub
push
mull
out
inc
mov
mov
cmp
jl
negl
insb
adc
mov
jl
pop
cltd
into
popa
jne
or
mov
and
cmpl
loop
mov
pop
dec
ds
lds
xchg
inc
add
fsub
cs
mov
daa
call
push
aad
or
add
push
pop
fimuls
fnstenv
aaa
mov
cmpsl
test
jns
iret
xchg
lret
dec
insb
decl
or
loop
mov
jae
frstor
bnd
mov
push
dec
hlt
cmp
ror
stc
push
mov
mov
sub
out
mov
adc
mov
xchg
pop
sub
jmp
test
lret
pop
xor
jle
lods
push
cli
lcall
leave
aas
push
pop
jns
cli
fwait
mov
daa
jnp
xlat
pop
xchg
push
mov
bound
faddl
inc
pop
int
push
out
stos
push
or
add
cmp
popf
fisubrl
push
movl
inc
std
xor
and
dec
mov
test
nop
mull
pop
mov
sti
rcr
mov
sti
mov
nop
adc
out
adc
push
popa
cmp
mov
insb
repnz
shl
adc
aaa
cmc
es
sub
xchg
nop
outsb
sbb
std
test
cmp
xchg
pop
inc
cmpb
inc
fbld
iret
testb
xchg
imul
int3
aas
or
data16
pusha
sbb
push
pushf
test
and
cli
push
jbe
and
mov
and
movb
inc
xor
cmpsl
les
imul
out
bnd
jbe
mov
mull
sti
test
dec
sub
push
add
frstor
xchg
jg
jo
clc
mov
lods
mov
negl
mov
and
sub
cmp
sbb
repnz
cli
inc
insb
add
ret
nop
inc
out
popf
mov
mov
or
pop
sahf
and
rclb
mov
or
mov
or
loope
pop
adcb
and
shrl
push
xor
or
jecxz
divl
stos
loope
cwtl
fs
push
imul
inc
movsl
jge
pop
cld
mov
push
xor
pop
sub
xchg
cmc
dec
jmp
pop
sub
das
pop
ret
xlat
arpl
pop
push
add
cmp
dec
sbb
in
ds
addl
mov
scas
data16
sarb
jle
mov
adc
cwtl
add
scas
fldcw
mov
aad
inc
sbb
sbb
lods
testb
xchg
mov
pushf
jp
cmp
add
and
mov
lcall
addr16
cmp
enter
cmp
sbb
cld
xchg
pop
mov
lea
xlat
jge
in
ljmp
push
xchg
shlb
mov
or
xchg
jb
insl
testl
idivl
inc
push
scas
push
ret
sbb
insb
jo
xor
outsb
repnz
pop
pop
jne
imul
or
in
shrb
add
sub
shr
mov
dec
xchg
loop
in
inc
addr16
cmp
push
imul
add
mov
or
xor
mov
mov
fstpl
and
and
xor
mov
and
das
dec
int
fucomi
imul
inc
mov
out
jno
jg
inc
loopne
adc
repz
mov
push
xchg
loopne
mov
lahf
mov
jne
xor
imul
mov
and
in
xchg
jns
push
negb
arpl
pop
cltd
int
fmull
movsl
or
pop
xchg
cltd
jg
sar
mov
mov
mov
sbb
std
xor
fwait
jl
push
mov
and
pusha
dec
fstps
ret
inc
xlat
mov
adc
ljmp
loopne
dec
cmp
jg
sbb
clc
js
mov
shll
or
xchg
mov
in
shlb
or
sbb
push
lahf
add
mov
mov
dec
xchg
sbbl
mov
daa
mov
sbb
nop
push
jb
inc
sub
adc
movsb
cmc
jmp
insb
cmp
shlb
mov
ljmp
ret
pop
in
cmp
loopne
mov
hlt
jns
fidivs
je
in
in
popf
jp
aam
aam
cmpsb
js
or
leave
cmp
inc
movsb
mov
imul
pop
out
xchg
sbb
cmpsb
sarl
xchg
and
jle
mov
jecxz
adc
std
ficomps
jo
cs
loopne
aaa
enter
shl
mov
push
idivl
es
and
mov
cmp
xchg
cmp
ljmp
mov
pop
inc
add
sub
scas
shr
mov
mov
nop
sbb
fistps
jmp
or
inc
into
jnp
popf
push
imul
lock
xchg
cmp
cmp
loope
stc
mov
sbb
push
inc
cli
inc
sti
fcompl
adc
cmp
pusha
push
push
pusha
push
jb
imul
popa
inc
and
mov
dec
or
pop
push
jae
loopne
fmul
jne
shrb
xchg
pushf
jecxz
arpl
out
in
add
fldl
mov
jnp
xor
scas
int
jmp
int
ret
xchg
lcall
xchg
jge
mov
andb
std
push
add
iret
ja
xchg
aam
xor
sarl
js
dec
sbb
mov
jl
aaa
mov
mov
mov
bound
lahf
cltd
cmp
clc
xchg
adc
inc
and
ljmp
aad
fbld
ja
pop
loop
push
mov
mov
dec
mov
jns
out
lcall
orl
mov
push
daa
mov
sub
ss
roll
push
or
popf
in
lcall
in
aas
out
mov
stc
sbb
lods
mov
fs
pop
sbb
outsl
pop
insb
push
test
mov
or
lret
scas
mov
daa
call
shrb
lock
js
daa
dec
inc
stc
jl
pop
leave
ss
jle
sub
cmp
cmp
inc
and
orl
es
sbb
push
scas
xchg
mov
cld
jmp
pop
lret
and
into
jecxz
cmp
pop
aam
and
push
in
sub
or
test
add
pop
jl
jno
xlat
push
mov
mov
push
push
jmp
pop
xchg
inc
jmp
push
outsb
in
sub
xchg
mov
call
fcmovnbe
mov
std
cmpl
dec
addr16
cs
aaa
sbb
or
test
int
dec
repz
fdivr
jae
pop
adc
sarb
cmp
out
ror
imul
es
fs
xchg
sbb
lahf
sub
sti
jmp
jb
pop
dec
xchg
repnz
icebp
pop
push
lahf
mov
mov
int3
mov
mov
je
out
insl
pop
repnz
inc
add
lds
push
dec
xchg
add
cmpsl
mov
or
jnp
and
or
icebp
xchg
add
insb
sbb
in
lret
dec
jno
sbb
stc
sub
out
out
ffree
mov
enter
lea
js
xor
aam
adc
mov
aaa
in
cmp
adc
aad
add
adc
loope
jp
je
ret
fmull
dec
fwait
out
loopne
jg
mov
lods
std
gs
repnz
js
xor
icebp
inc
inc
adc
daa
nop
inc
jb
push
rcrb
aas
cmp
push
mov
fildl
and
mov
mov
push
mov
and
jnp
repnz
ret
push
xor
fwait
scas
adc
lds
ds
pop
xor
mov
daa
cvtps2pd
mov
jne
rcll
jae
inc
cltd
push
movsb
js
or
mov
scas
mov
adc
pop
adc
inc
push
inc
lcall
dec
sbb
mov
jg
sbb
ja
cmpsb
jae
xor
jecxz
out
pop
xlat
stc
jo
out
inc
xor
adc
lea
sti
pop
stos
arpl
lret
loop
aad
and
sbb
sarl
add
xor
or
xchg
loope
mov
inc
imulb
insl
push
ljmp
fsubs
call
jbe
sub
lods
lret
in
arpl
adc
cmpsl
enter
mov
or
adc
pop
dec
push
cmp
jne
sub
stos
jle
int
dec
mov
mov
adcl
jle
jl
jp
inc
inc
loop
mov
jo
pop
into
out
out
ret
fidivrl
test
scas
jno
loop
mov
enter
sbbl
jbe
push
and
push
inc
mov
mov
or
ret
aad
xor
sub
mov
or
add
fstpt
setbe
push
or
cmp
imul
subl
and
lret
mov
scas
cs
std
xor
sbb
jno
stc
gs
pusha
and
popf
out
sbb
fdivl
push
jbe
leave
dec
mov
mov
lds
pop
cmp
sbb
mov
pop
ret
mov
mov
mov
cmp
xlat
jb
in
adc
movsb
pop
jl
movsl
xor
fwait
jnp
sub
mov
and
aad
imul
adc
cs
mov
andl
pop
lcall
sbb
xchg
dec
jae
inc
dec
add
fbstp
inc
test
cmp
iret
addr16
push
and
out
sahf
clc
inc
fs
jae
xchg
ds
enter
sbb
cltd
stos
fcmovb
fwait
jno
movsw
mov
mov
cmpsb
dec
push
xor
fs
fisubl
enter
sar
adcl
orb
addb
fcoms
cmpsl
pop
das
shl
xchg
jo
mov
jbe
mov
cli
jns
mov
ret
lds
cmp
loopne
xor
rcrb
add
leave
add
xlat
or
mov
sub
ror
jnp
jne
icebp
lds
cmpsb
sub
repnz
pop
stos
lods
and
cmpsl
ret
inc
mov
push
sbb
les
dec
lret
sub
filds
js
and
hlt
dec
cmp
dec
and
mov
sub
inc
insl
push
imul
scas
fidivl
fs
dec
sbb
add
and
insb
test
ret
jb
mov
ret
ja
xchg
pop
cmp
mov
inc
jmp
cmpsl
fucom
add
add
and
mov
cs
ds
mov
sets
mov
aas
loop
cmp
mov
jp
aas
jge
pop
ljmp
sub
stc
adc
scas
ss
lcall
xchg
mov
test
xor
jmp
pop
push
xchg
std
xchg
cltd
lahf
push
sbb
xchg
ss
push
cltd
bound
pop
mov
push
lods
cli
out
dec
sub
in
fwait
sub
add
divb
shlb
cmp
les
mov
popaw
sub
xor
inc
sub
daa
imul
push
hlt
cld
xchg
movsl
fdivr
xchg
mov
cmp
and
lret
lret
adc
sti
mov
inc
pop
stc
pop
sahf
mov
aad
aam
rorl
mov
sub
arpl
or
mov
add
mov
dec
int3
pop
mov
movsb
or
arpl
movsb
gs
pop
xchg
outsb
fstpt
bound
pop
jb
sub
insl
aam
adcl
je
cwtl
xchg
inc
xlat
dec
dec
out
lret
lret
adcl
cmc
cmp
jne
nop
adc
mov
adc
jg
mov
push
in
push
and
outsb
sbb
cli
test
xor
clc
jae
js
push
fs
out
mov
pop
int3
dec
sbb
mov
mov
pop
paddsb
shrb
jg
add
repnz
cmpb
in
insl
push
lea
mov
fiaddl
aad
loop
jbe
or
test
jb
sbb
inc
push
mov
outsl
mov
xor
shll
test
pop
fadd
ret
sub
aam
insb
sub
rcll
inc
cmp
lcall
aaa
repnz
test
lods
imul
fs
outsl
dec
mov
adc
gs
sbb
repnz
mov
in
cmp
adc
test
pop
dec
mov
add
ret
push
xchg
repz
loopne
xchg
sub
fldcw
icebp
add
bound
pop
insb
push
pusha
lock
jle
mov
sub
addr16
sbb
pop
and
loope
dec
out
mov
test
lret
add
arpl
and
sbb
das
add
sbb
bound
ja
in
jne
dec
test
rclb
mov
shlb
mov
sbb
mov
test
xor
pop
aam
xor
inc
scas
cmc
test
jp
adc
dec
sub
sub
sbb
inc
sub
mov
test
lods
ret
bound
es
inc
xor
rclb
adc
sbb
adc
ljmp
arpl
in
loop
mov
xlat
push
lahf
sbb
jp
xor
cmp
andb
mov
or
lds
mov
js
mov
in
pop
lret
loop
and
ljmp
leave
cli
jge
sub
int
dec
data16
js
adc
dec
sbb
neg
cltd
repnz
inc
xor
jge
fnsave
mov
push
loope
sar
mov
mov
jbe
mov
adc
loopne
subb
int
lcall
imul
mov
inc
daa
je
mov
dec
push
out
xchg
lret
std
call
incb
xor
test
jmp
repnz
jmp
arpl
cmp
rorl
mov
out
pushf
push
addr16
loope
enter
inc
nop
mov
cmp
xor
aaa
popf
clc
mov
push
jge
lds
adc
and
leave
adc
aad
mov
call
rclb
outsl
sub
xlat
pop
xchg
push
xchg
inc
out
cltd
add
sub
lock
in
stos
loopne
push
add
dec
andb
inc
xchg
sub
pop
idivl
adc
in
push
and
dec
int3
jo
gs
sub
repnz
testl
gs
in
cmp
in
jne
xchg
scas
add
push
test
push
js
jo
aad
iret
inc
repnz
and
repz
scas
add
aas
sub
imul
nop
inc
dec
dec
mov
sub
push
mov
add
cmp
iret
and
pop
movsl
jmp
cmp
repz
sbb
xchg
jmp
test
in
test
inc
shll
add
mov
sbb
cmp
jmp
add
insl
pop
incb
push
scas
in
fmuls
inc
pop
es
aas
insl
je
fistps
xorb
outsl
jp
pop
stc
sub
loopne
sub
jge
xchg
add
imul
out
mov
mov
inc
les
int
lods
testl
cli
in
mov
cmpsl
jmp
testl
sub
pop
out
das
lods
clc
lods
stc
ficompl
ljmp
xor
xchg
lock
nop
sbb
push
dec
xor
push
cmp
mov
imul
stc
outsb
inc
mov
jo
dec
push
sub
mov
pop
cltd
dec
adc
pop
xchg
bswap
mov
lods
mov
dec
test
jb
icebp
inc
ja
mov
leave
icebp
icebp
push
jnp
mov
inc
mov
cmp
enter
push
shl
and
xchg
mov
decl
jbe
testl
and
loopne
or
into
dec
mov
adc
je
pushf
lods
lods
insb
xchg
insb
and
pop
iret
add
dec
push
pop
pop
mov
call
push
je
sub
aam
push
icebp
mov
and
xor
sbb
mov
pop
add
nop
orl
xchg
ja
pop
outsb
insl
lods
xchg
insb
lods
adc
push
sub
mov
fdivs
push
pop
es
cmp
jg
xchg
adc
inc
js
jo
inc
push
nop
fdivrp
pusha
leave
sub
jno
push
cmpsb
mov
in
and
cltd
fdivs
mov
je
and
mov
lods
je
nop
mov
sbb
rorb
ja
add
jne
adc
adc
les
or
xor
cwtl
mov
das
lods
mov
pop
sub
jg
push
idivb
ret
mov
popf
pop
sbb
mov
mov
add
and
jae
jne
and
stos
dec
sub
push
push
jl
adc
mov
and
mov
lret
pop
cltd
jne
push
pop
lds
rcrl
pop
fists
mov
and
push
ficompl
xchg
jne
fildl
lea
lahf
jns
xchg
pop
xchg
and
cld
lods
jno
cmc
outsl
and
ja
data16
inc
dec
push
and
push
inc
orb
jb
cmp
fsubrs
stc
jne
xor
mov
push
xchg
shl
sub
dec
pop
icebp
mov
xor
sub
dec
inc
shll
adc
and
je
sbb
lea
dec
repnz
ret
subb
iret
ljmp
xor
fcoml
adc
xchg
mov
rclb
cld
jbe
push
or
or
and
pop
cmp
shlb
sahf
fcoms
mov
or
jnp
mov
mov
jge
lods
pusha
test
xor
push
pop
inc
cmp
shrl
jne
int
in
and
lds
inc
mov
lcall
pop
sub
shrb
cmpl
push
in
dec
inc
shll
push
mov
shlb
and
cltd
fwait
pop
mov
aaa
mov
or
jecxz
push
rclb
jno
and
mov
bound
icebp
push
mov
je
cmp
adc
xor
push
arpl
nop
ret
es
inc
rolb
pop
mov
test
aad
inc
cmc
sub
jne
push
and
and
test
xor
shrl
call
jle
add
sar
mov
mov
in
cmpsb
sub
push
jbe
rcr
dec
pushf
adc
orl
imul
out
xor
lret
sbbl
fnstenv
ss
dec
lret
mov
pop
movsb
and
cmpsb
arpl
aas
pop
mov
je
insb
xchg
test
pop
cmc
cmpsl
loopne
fld
jmp
rcll
int3
jle
add
adc
out
pop
imul
les
lret
aaa
cmp
scas
cmc
lods
orb
orl
fildll
push
mov
xchg
cmp
loopne
cli
out
imul
fisubs
cmp
sbb
or
cmp
xchg
mov
scas
cld
pop
repz
test
insl
dec
sbb
jno
mov
xlat
into
cmp
inc
lret
fwait
sub
mov
divb
pop
lea
inc
cld
jecxz
jle
bswap
fs
cld
sub
orb
ss
sbb
fwait
imul
negl
loop
push
xor
xor
gs
xchg
clc
xchg
mov
xchg
dec
sbb
in
aam
imul
dec
shl
rcrb
push
xchg
sbb
cld
mov
mov
in
mov
inc
and
lock
sbb
sbb
mov
jb
inc
sbb
xchg
mov
xor
mov
shlb
daa
fs
cmp
divps
aad
push
add
or
ja
int3
fsubrs
xor
decb
sbb
push
and
fdivrs
mov
inc
lcall
mov
inc
pop
scas
jecxz
sti
stos
add
movsl
ds
xor
adc
or
push
jno
test
jg
dec
or
enter
movsl
xchg
pop
pop
fcompl
cs
pop
mov
inc
dec
mov
dec
xor
or
out
mov
pusha
cs
ret
sbb
je
and
ljmp
addl
cmp
fsubrs
lret
sbbb
sbb
ret
and
and
mov
cli
sub
xlat
or
lds
sub
mov
push
jmp
aaa
mov
loopne
jmp
mov
outsb
sar
dec
popa
pop
jne
fcompp
jnp
xlat
sub
mov
cmp
or
roll
lret
pavgb
inc
fwait
pushf
dec
xchg
cmp
cld
mov
lods
and
lods
imul
ljmp
test
loopne
aad
dec
pusha
in
and
stos
fsts
xchg
and
mov
stos
mov
call
push
rcll
inc
ret
cmp
jb
lahf
mov
lret
dec
stos
or
int3
mov
xor
inc
jge
and
ret
into
mov
mov
test
test
test
pop
popa
stos
push
jl
repnz
push
pop
out
mov
cmpsb
jle
sub
cmp
fadds
int3
pop
repnz
lahf
aad
jp
mov
pop
inc
out
loope
jbe
pop
callw
cmp
lds
push
imul
cs
pop
inc
or
mulb
in
fdivl
into
mov
cmp
in
and
jno
pop
push
jecxz
or
aaa
add
ds
stc
data16
pusha
rorl
sbb
fiaddl
test
xchg
adc
mov
push
fcmovb
rcr
pop
dec
pop
push
int3
sub
imul
je
movb
adc
into
mov
lret
or
out
cmp
int
push
imul
mov
jo
xchg
insl
lock
aaa
cmp
mov
aaa
xor
mov
call
loope
das
sbb
mov
add
div
mov
push
shll
adc
shrb
pop
sbb
jne
iretw
ret
repz
sub
jg
jae
ss
div
xor
jno
sub
nop
mov
movsb
push
insb
shrb
neg
cmpsb
je
mov
jge
sub
push
mov
mov
cli
bound
shlb
mov
dec
cmp
loopne
cmpsl
shlb
movsl
mov
sub
jo
ficoms
call
push
xchg
dec
sarl
add
push
inc
push
fnstsw
mov
je
stc
scas
jge
fwait
jo
fwait
xchg
es
shlb
popf
pop
fisttps
xchg
dec
imul
add
mov
lock
cli
jbe
cmpsl
push
mov
test
out
std
pop
sbb
dec
xchg
outsb
fidivrl
add
sub
add
cli
icebp
jo
cltd
pop
mov
stos
imul
aaa
gs
pop
add
cmpsb
xor
mov
fsub
rorl
mov
in
and
fwait
adc
jnp
out
xchg
pop
xor
daa
cmp
rcrb
stc
outsl
leave
lds
out
jecxz
sbb
mov
inc
push
dec
es
sbb
fidivl
pop
hlt
dec
ja
movsl
mov
push
icebp
dec
sbb
shl
cmp
pop
mov
add
push
xchg
shlb
lret
les
xchg
mov
sbb
pop
leave
popa
pop
rorl
mov
aas
pop
push
and
mov
dec
mov
in
xchg
lds
in
jne
lds
pop
jne
arpl
inc
arpl
push
cld
shl
aas
in
gs
addr16
push
or
ret
clc
fwait
stos
sahf
xchg
int
dec
arpl
push
leave
add
in
mov
fisubs
add
push
sbb
cmc
stos
in
dec
sbb
pop
or
adc
inc
xor
leave
sti
nop
cmpb
testl
fs
inc
lock
xor
les
outsb
mov
or
ja
das
push
sub
push
stos
sub
cwtl
mov
mov
adc
xor
insl
push
inc
out
pop
xchg
test
mov
add
addr16
movsl
or
orb
dec
jmp
shl
inc
pop
jbe
fldenv
cld
out
xor
aam
arpl
aaa
ds
pop
cli
lahf
fucomip
xor
aam
jno
lea
fisubl
stos
and
xchg
dec
xchg
sub
xor
xor
xor
mov
outsb
cld
dec
lea
push
in
out
sub
std
into
sbb
leave
xor
ret
loop,pt
loope
inc
sbb
mul
rcrl
mov
xor
mov
mov
push
data16
sub
out
add
push
les
je
add
fwait
stos
repz
popa
jne
cli
sbbl
xor
movsl
xor
sti
daa
adc
add
outsb
mov
gs
mov
jecxz
xchg
sahf
pop
clc
mov
adc
mov
cltd
pushl
movsb
sbb
xchg
cs
jp
or
mov
bound
ljmp
mov
add
and
dec
push
in
jp
mov
addl
adc
loop
call
jmp
and
popf
subb
jae
lret
jo
or
adc
sti
shr
lcall
sbb
negl
imul
lock
stc
xlat
xor
scas
xor
sub
enter
aad
outsb
and
dec
or
push
ficoml
or
js
mov
add
mov
stc
pusha
inc
pop
ss
stc
mov
or
adc
bound
daa
mov
jnp
fwait
shll
nop
lret
cmpsb
cli
xor
repnz
stos
iret
lret
stos
int
imul
xchg
mov
scas
cmp
xor
mov
fistl
repz
stos
rclb
jbe
or
adc
fadds
push
std
mov
pop
test
xor
hlt
stos
jle
testl
add
sti
dec
out
pop
mov
push
insl
cmpsb
adc
jle
xor
arpl
into
push
movsl
inc
lods
ljmp
cmp
add
xchg
shl
xchg
dec
stos
cltd
mov
mov
test
cmp
mov
xchg
outsl
loopne
pop
movsl
fbld
orl
std
ljmp
arpl
lahf
movsl
ss
cmp
cmpsb
call
jns
shl
dec
push
fdiv
aad
lods
imul
inc
inc
jnp
jecxz
shr
pop
and
lahf
insl
add
test
js
cmp
cmp
push
pop
mov
push
rolb
dec
repz
cmpsb
mov
repz
inc
addr16
mov
in
idivb
mov
inc
cmp
and
push
inc
sbb
or
stos
aas
mov
push
and
dec
adc
xchg
and
pop
dec
jecxz
orl
pop
test
mov
xchg
cli
enter
cli
in
jns
or
and
sub
mov
mov
or
adc
pop
in
js
and
mov
ret
adc
jb
mov
xchg
into
push
xlat
adc
xchg
xorl
sti
sbb
sbb
negb
rcll
out
popf
jg
push
std
dec
js
int
cs
sbb
xchg
mov
mov
pop
cmpsb
adc
or
dec
xor
push
mov
mov
ljmp
daa
out
in
dec
mov
dec
or
xchg
cmp
aaa
jmp
mov
dec
lret
sub
or
or
and
add
popf
mov
bound
ja
xchg
pop
movsb
scas
gs
cmp
rcll
pop
lock
and
outsb
cmp
inc
cltd
xchg
into
out
adc
cmpsl
in
stc
int
xor
xor
jns
test
loop
sbb
daa
sub
push
int
inc
dec
fnstcw
fwait
shl
pop
clc
in
sbb
nop
xchg
ret
push
xor
fscale
aam
pop
jge
loopne
mov
call
sbb
inc
and
jns
pushf
int
xchg
xchg
jnp
adc
addr16
jne
or
mov
mov
shlb
testl
cmpsl
cmpsl
jg
sub
mov
and
xor
js
jge
inc
cmp
sti
cmpl
sbb
mov
jp
and
leave
and
pop
add
call
dec
inc
jle
dec
mov
push
sahf
lahf
enter
inc
xor
in
mov
lock
int
loope
movd
mov
jmp
sbb
add
cmp
cmp
cmp
mov
int
push
push
in
not
addb
call
push
fndisi(8087
rorl
jle
sub
push
sbbb
out
lods
pop
bound
dec
mov
cmp
dec
cmp
andl
jnp
mov
xorl
ja
ficoml
cmc
adc
iret
mov
sarl
fucomi
jb
adc
ds
pop
inc
sbb
sub
sbb
in
dec
ss
jo
mov
cwtl
push
lahf
ret
out
lock
ret
sbb
shrb
push
out
stos
sbb
add
aad
popf
cmp
dec
push
or
pop
mov
and
dec
fsts
sbb
fldenv
adc
test
arpl
outsb
add
cmp
test
sti
mov
jecxz
inc
cs
sub
rcrb
or
out
add
xchg
add
push
repnz
test
or
imul
pop
shl
fcmovu
mov
in
sbb
xchg
push
outsw
push
sti
xor
test
iret
push
jg
or
jge
mov
call
mov
aad
pop
aas
jmp
and
std
lret
in
xor
repnz
js
test
lret
nop
cld
or
push
dec
lret
sahf
cmp
mov
rcr
bound
or
dec
pop
popa
bound
mov
cmpsb
jbe
andl
adc
mov
xchg
jo
sbb
pop
loop
or
je
inc
hlt
sbb
cs
je
lea
or
xchg
push
cld
mov
adc
lods
jp
fiadds
dec
xchg
stc
rolb
pop
lods
sti
push
and
lret
ss
add
sbb
jg
cmp
mov
adc
inc
push
pop
mov
jno
int3
shl
andl
insb
mov
cmp
repnz
sbb
xor
fwait
pop
sub
add
push
dec
xor
jns
jno
push
jl
push
inc
popf
mov
out
and
mov
outsl
fsubs
xchg
stc
sub
movl
cmp
sub
in
mov
push
push
stos
xchg
jnp
call
or
mov
les
idivl
or
and
ds
push
jecxz
shlb
gs
push
jno
or
jno
push
lds
cmc
ret
cmp
inc
lds
dec
inc
loop
incl
in
daa
sub
int
ja
sarb
and
mov
insb
pop
imul
or
or
test
dec
add
cltd
xchg
pop
jno
inc
jae
in
mov
in
in
jno
loope
xor
cmpsl
mov
fcomps
push
and
int
mov
aas
sbb
ret
sbb
dec
or
dec
cmp
push
sbb
push
push
movsl
mov
or
addl
aad
sarl
arpl
sarb
or
jb
in
jb
add
inc
jo
pop
mov
frstor
push
add
xchg
enter
xor
bnd
mov
mov
inc
push
loope
les
les
ret
imul
dec
or
mov
insl
ret
sub
out
aam
in
scas
ficoms
cs
cmp
mov
popf
xchg
pushf
ljmp
sbb
pop
xchg
mov
stos
sub
into
lods
cmp
popf
hlt
fmul
push
or
lds
pop
andl
sbb
jp
lods
call
lcall
es
test
inc
xor
mov
jnp
mov
and
shl
lods
into
mov
call
xchg
xlat
adc
cmpsb
mov
data16
and
aaa
jnp
mov
shlb
add
jae
jae
aaa
mov
jo
cwtl
pop
or
aas
cmp
adc
mov
in
inc
adc
outsl
in
cmp
outsb
inc
fs
cwtl
adc
mov
cwtl
add
rcll
lret
jp
and
adc
sbb
add
push
xchg
dec
mov
push
movsl
dec
shlb
mov
sbb
mov
mov
rclb
movsb
xchg
dec
mov
pop
sub
outsb
or
adc
ljmp
adc
push
mov
and
push
test
xorl
repz
pop
add
mov
mov
fstps
mov
push
out
mov
xchg
sbb
xor
xor
enter
push
sbb
inc
xor
test
in
das
fimull
out
inc
fsubr
or
icebp
aaa
mov
ret
mov
pop
xor
add
pop
and
pop
pop
ja
mov
sub
adc
popf
fdivs
insb
mov
mov
ja
movsb
push
stos
ret
cmc
leave
movsl
adc
xchg
rolb
stos
add
faddl
lds
test
inc
ret
and
jp
int3
fmulp
pop
jbe
fnstenv
pop
arpl
add
call
jg
in
subb
rorl
xchg
loopne
test
dec
cmpsl
cmc
shld
out
scas
int3
inc
repnz
loopne
adc
mov
lods
adcb
mov
mov
fimuls
adc
stos
xchg
push
mov
comiss
shrb
pop
loop
pop
lret
mov
out
imul
or
es
xorb
push
mov
jb
and
add
out
ficomps
xlat
and
cld
pusha
add
cmpsb
js
int3
fidivs
dec
in
sti
xor
in
xor
pop
fbstp
jmp
pop
roll
mov
sbb
stc
cwtl
int3
clc
imul
and
adc
jle
test
adc
pop
or
xlat
mov
jae
cmp
inc
insl
lods
enter
ljmp
lods
sub
out
mov
xchg
xor
negb
sbb
cwtl
in
rcrl
cs
enter
push
insl
lahf
xchg
stos
test
cmp
and
out
fs
js
or
into
pushl
xchg
adc
ljmp
lahf
cmp
pop
inc
or
jno
es
pop
icebp
jp
add
div
push
imul
gs
gs
inc
dec
add
and
test
push
pusha
xchg
gs
mov
mov
and
jb
insl
sub
scas
in
jp
pushf
push
loop
or
enter
xor
loop
push
dec
js
das
scas
popa
imulb
aas
sbb
mov
dec
repnz
movsb
cmp
aad
pop
imul
push
cwtl
jecxz
dec
xchg
in
insl
notb
mov
in
outsl
pusha
cmp
jmp
adc
cmp
test
imul
or
dec
cld
mov
mov
into
sbb
stc
push
mov
inc
mov
cmp
add
add
sti
sbb
lahf
psllq
cwtl
push
jg
mov
ret
rcr
es
jmp
imul
sbb
xor
aas
sub
jp
push
loop
pushf
adc
sbb
outsb
arpl
jb
outsb
out
jl
push
cmc
loop
push
or
xor
cli
jecxz
dec
sub
ds
test
insl
jbe
adc
shll
das
and
in
pop
test
push
test
pop
jge
sub
jne
out
lods
inc
outsl
xchg
sub
cmp
add
stos
hlt
rolb
sub
outsb
mov
xchg
test
adc
pop
push
int3
fstl
mov
pusha
orb
xchg
push
xlat
mov
aam
mov
popf
loopne
outsl
mov
sbb
loop
sbb
jmp
iret
cmp
test
fisubs
subl
add
fwait
mov
fs
xchg
pop
js
and
aaa
mov
mov
sub
dec
cmpl
dec
popa
jl
mov
mov
jo
stc
sahf
fldt
nop
clc
test
push
or
bswap
pop
lods
jmp
adc
adc
mov
sub
fcmovne
xor
mov
dec
cmp
pop
sbb
stos
inc
loope
imul
add
add
jmp
xor
lea
fiaddl
leave
jmp
lcall
push
pop
pop
cs
xchg
jnp
repnz
rol
push
shll
pop
fcmovnbe
add
outsl
jmp
pop
and
rclb
mov
inc
hlt
rclb
push
sahf
mov
fwait
adc
shll
push
dec
mov
out
push
and
int3
sub
inc
mov
shrb
ja
dec
test
xor
movzbl
inc
repz
out
jnp
jnp
je
sub
aam
xor
sbb
test
data16
lods
xchg
shlb
mov
and
push
sbb
mov
call
out
cmp
in
lods
fs
lods
and
jb
sub
out
xor
enter
xor
mov
in
adc
sbb
sbb
pop
bound
cmp
jmp
jns
test
lret
cmp
test
gs
out
imul
inc
push
xchg
fucom
fmull
mov
data16
sbb
sbb
pop
xchg
xchg
jae
cmpb
dec
dec
aaa
into
jo
cmc
jge
mov
adc
xchg
es
pop
in
mov
aam
lock
dec
sbb
mov
sahf
mov
jmp
sub
xor
adc
int
lock
cs
adc
dec
inc
daa
leave
jle
jecxz
and
out
and
sbb
jle
out
aad
inc
in
push
sub
push
in
adc
pop
mov
dec
dec
fstl
sbb
movsb
insb
in
rolb
imul
aas
ja
xor
mov
add
jg
lods
mov
das
mov
rclb
push
lret
in
mov
leave
push
pusha
xor
test
sub
cmp
sub
lahf
insl
push
cmpsb
std
ja
jbe
mov
mov
push
mov
adc
xor
fsubl
faddl
add
cmpsl
jl
hlt
sub
mov
iret
mov
jns
mov
mov
sbb
popf
sub
cli
adc
push
in
movsb
in
fcmovnb
jbe
arpl
fsub
push
and
push
mov
push
xor
adc
dec
fwait
adc
test
xchg
sysret
xor
push
int
xorl
xchg
sbb
push
adc
and
dec
test
push
mov
stos
out
inc
adcl
add
cld
mov
and
sti
decl
cli
icebp
jnp
arpl
lock
mov
lock
mov
and
ss
ljmp
sub
xor
cmpsb
sbb
push
fxch
jl
ja
jmp
fbld
jle
dec
cmp
push
fs
jmp
fcmovnb
cmp
xchg
mov
pop
cmp
pop
sbb
mov
outsb
int
int3
insb
add
adc
push
in
or
xchg
sub
dec
clc
lcall
xchg
or
xchg
lahf
cmp
add
fadds
lret
push
out
xchg
adc
scas
in
mov
gs
mul
adc
sti
fwait
movsl
int3
lods
aas
mov
insl
xchg
shll
int
fwait
sub
pop
mov
aad
les
add
mov
cmp
outsb
ret
adc
dec
push
pop
xor
or
mov
test
pop
daa
mov
jp
push
stos
shrw
in
movsl
adc
ret
and
adc
xchg
andb
jbe
hlt
daa
xor
insl
push
jne
mov
mov
inc
jns
cmp
stc
inc
push
push
cmp
imul
dec
dec
ss
lods
pop
xor
or
icebp
ret
sbb
out
addr16
ja
dec
xorl
dec
jle
sub
ljmp
dec
int
outsl
imul
push
xor
mov
and
push
or
out
push
test
push
sbb
popf
pop
fidivl
or
push
mov
leave
adc
in
sbb
addb
gs
xor
stos
data16
jno
push
fucomp
testb
fstpl
aas
ljmp
mov
faddl
dec
adc
xor
in
aaa
inc
inc
loopne
cmpsl
pop
push
outsb
leave
testl
enter
das
xor
fs
and
imul
inc
pop
mov
inc
mov
add
out
jnp
rolb
pop
adc
fs
push
rcr
in
ds
insl
bound
shl
and
mov
mov
mov
por
push
jle
xchg
xchg
out
dec
ret
and
mov
cmp
push
mov
or
xchg
dec
sbb
insb
add
cmpsl
lretw
pushf
mov
sbb
insl
popf
push
push
lock
mov
mov
fdiv
push
inc
outsb
xlat
loopne
adc
pop
sub
neg
lret
xor
aaa
or
fisubrs
test
mov
jns
adc
std
scas
mov
popf
sahf
loopne
fs
fimuls
dec
cmp
popa
mov
mov
mov
adc
orb
fisubrl
incb
js
cmp
repz
int3
dec
js
test
jecxz
sub
adc
orl
mov
fidivrl
hlt
repz
push
shl
jg
add
sahf
es
or
mov
call
iret
test
ljmp
lods
xchg
xchg
sub
sbb
dec
addl
fldl
pop
xor
mov
mov
xchg
repnz
cmp
xchg
loope
cld
cmpsl
mov
aad
adc
and
dec
mov
sarb
add
xchg
sbb
mov
ljmp
lahf
sbb
mov
sbb
sub
and
and
lahf
outsb
and
or
lds
iret
ds
xor
mov
popa
cltd
mov
mov
insl
lcall
or
pop
add
lcall
rcr
loopne
jno
pop
jecxz
fmull
xchg
cmp
out
mov
icebp
cmp
ret
inc
inc
sbb
lock
push
cs
pop
push
push
dec
sti
jg
cmc
in
jmp
sbb
arpl
mov
inc
movl
add
imul
xchg
in
and
nop
cmc
jnp
inc
dec
or
inc
and
cli
jbe
lret
ss
add
add
iret
cwtd
shlb
inc
mov
sub
insl
int3
mov
push
sbb
les
pop
lcall
fcomp
sbb
adc
pushf
scas
call
push
outsl
push
cmc
jecxz
xchg
cld
imul
bound
adc
ds
push
ret
adc
fsubrs
sarb
inc
push
inc
jb
mov
push
add
ret
lahf
and
jp
popf
arpl
mov
push
sbb
cmp
stos
mov
sub
cld
xor
jnp
push
jo
add
add
cwtl
mov
call
clc
shlb
dec
mov
ror
xorl
popa
stos
adc
jae
gs
jb
inc
adc
push
push
or
testb
pop
lcall
cmp
add
push
nop
sub
imul
cmc
xchg
fdivrs
inc
jo
pop
push
jmp
scas
addr16
xchg
scas
pop
lods
scas
imul
lret
jns
ljmp
push
sbb
sub
dec
loopne
mov
les
lea
mov
xor
adc
mov
sub
rorb
ficomps
idiv
jbe
pushf
or
fdivs
mov
decl
add
push
jbe
push
ror
and
jnp
xlat
mov
mov
idivb
push
adc
mov
lcall
xor
ret
inc
mov
xchg
inc
push
adcl
and
icebp
fwait
lret
insb
lahf
mov
lds
es
push
enter
testl
fsub
xor
cmp
cmp
subl
jnp
dec
das
pop
push
outsb
adc
sub
fnsave
cmp
test
jp
repnz
xchg
and
sbb
subl
jmp
xchg
add
iret
nop
xchg
scas
addr16
jb
or
xor
cmp
das
imul
mov
jb
inc
pop
mov
fwait
mov
or
cli
jne
mov
push
jecxz
lods
negb
pop
loop
ja
push
add
les
mov
daa
pushf
sti
jg
faddl
js
adcl
xor
fwait
push
jg
fnstcw
xor
fbld
add
addr16
lret
inc
lret
push
les
into
shl
or
add
adc
cmp
inc
sbb
iret
mov
push
cmp
cmp
mov
lret
xchg
in
std
inc
mov
punpckhdq
jg
fs
push
sbb
cmp
sub
xchg
notl
xchg
bound
jp
dec
dec
inc
jp
hlt
mov
inc
rclb
push
inc
cmpsb
fisubrs
jo
sub
add
icebp
stc
dec
sti
xor
cmpb
out
movsb
push
mov
jl
inc
add
jmp
out
mov
pusha
mov
movsl
fisubs
push
mov
xor
xor
cltd
daa
mov
rcrb
push
jecxz
popfw
jle,pt
push
add
lock
and
mov
mov
dec
sub
dec
por
test
jl
adc
mov
inc
les
jno
push
jl
xchg
loopne
push
roll
sbb
les
cmc
or
adc
sarb
pop
adc
in
push
cmpsb
and
add
and
stos
idivl
ficoml
jnp
leave
or
mov
xchg
dec
das
iret
inc
out
test
add
outsb
xlat
xchg
arpl
cmp
add
mov
xchg
jecxz
call
adc
sbb
sbb
nop
cld
test
fbld
and
pop
clc
jg
inc
lahf
sbbb
push
ss
sbb
adc
arpl
int3
sbb
jns
in
fidivs
pop
js
out
sbb
pop
test
test
arpl
repnz
inc
fninit
nop
cmp
insb
or
stc
std
dec
aad
js
out
movsb
mov
aas
jg
jge
mov
mov
icebp
xchg
dec
xorb
cmpb
cmpsb
fwait
xchg
add
psubsb
xor
mov
aad
lds
fwait
pop
or
jbe
ljmp
pop
add
negb
dec
fcmovbe
pusha
mov
sub
dec
pop
cmc
xchg
lcall
repz
repz
movsl
cli
daa
mov
out
imul
jnp
shll
cmovne
shrl
fidivrl
fsubs
xchg
pop
pop
insl
mov
push
cmp
or
imul
xchg
cmc
cmp
sbb
mov
sub
mov
mov
in
in
add
mov
dec
sub
pop
sub
or
loopne
or
inc
add
push
xchg
push
mov
arpl
and
push
test
cmp
sub
jecxz
cld
shlb
push
adc
cli
iret
push
test
insl
xor
inc
loopne
jne
mov
in
pusha
pushf
lret
imul
aas
push
js
sub
inc
adc
andl
pushf
fiadds
inc
dec
mov
and
sbb
js
pushf
sbb
push
sarb
sbb
cmp
dec
and
lret
out
cltd
mov
xor
or
mov
dec
movsl
in
scas
push
fstps
sub
inc
adc
push
aaa
pop
push
mov
je
xchg
mov
lret
xchg
jge
testb
dec
les
xorb
xor
inc
and
inc
jno
pusha
int3
pop
dec
out
mov
fsubrp
cmp
or
sbbb
lods
lret
jo
out
push
xadd
orb
inc
jg
xchg
rcr
fcompl
jge
scas
rcll
es
shld
adc
jle
pop
outsl
pop
test
iret
arpl
mov
cmp
dec
mov
jl
xor
lret
aaa
xchg
inc
mul
popf
scas
xor
adc
mov
push
incl
in
jbe
cmp
das
ss
push
xchg
das
lret
popf
out
ret
mov
out
stc
dec
out
push
xor
scas
sub
or
jp
out
movsl
addr16
sbb
xor
add
in
cs
cmp
adc
ss
push
popf
in
push
negl
adc
cmp
in
dec
test
cwtl
xchg
sbb
pop
movsb
sub
call
int
xchg
pop
sbb
in
push
pop
lods
out
stc
fwait
sbb
mov
add
enter
mov
stc
inc
int3
push
imul
inc
or
stc
or
fsubs
sbb
sub
es
adc
in
outsb
icebp
sbb
mov
cmp
pop
loope
out
adcl
jg
pop
xchg
test
xor
int
lds
mov
dec
mov
adc
inc
cmp
jne
xor
in
dec
clc
dec
add
sub
jno
lea
insb
iret
sbb
inc
push
in
out
scas
enter
jmp
push
sub
sbb
dec
cmpsl
ret
sbb
jmp
popl
push
jge
push
popa
adc
nop
popa
jecxz
push
loop
and
mov
sarl
inc
cmp
mov
inc
fxch
shll
and
pop
jle
test
lcall
dec
mov
mov
out
add
rcrl
insl
xchg
sub
xchg
jmp
adc
mov
adc
jnp
pop
sub
xor
sbb
imul
jne
test
outsb
xchg
xchg
xchg
push
lret
mov
cvtps2pi
pop
lea
sub
daa
cmp
add
xchg
rcr
enter
pop
pusha
outsb
arpl
ret
cmp
xor
push
mov
mov
arpl
push
mov
movsl
push
rorb
push
pop
ret
orl
ds
add
inc
test
and
test
dec
xor
push
cmpl
xchg
lahf
fs
cwtl
hlt
pushf
mov
out
xchg
shl
add
in
and
xchg
pop
lret
push
adc
xchg
jns
pop
mov
mov
cld
stos
adc
sbb
insb
je
mov
insb
cwtl
lods
lcall
sbb
xchg
sub
insb
out
dec
pushw
out
subb
pop
and
adc
dec
and
cltd
add
bt
jmp
into
aas
inc
fsubs
leave
xor
inc
notb
inc
sbb
stos
loope
imul
lea
rcrl
out
pop
iret
xor
fmuls
xor
sbb
mov
inc
pushf
ss
cmp
loopne
pop
sbb
leave
jg
jb
cmp
push
inc
or
int
out
gs
imul
dec
push
add
mov
aas
cli
jbe
shlb
jecxz
jge
mov
push
or
pop
imul
insl
mov
sub
xor
mov
dec
push
pop
rcr
jge
fneni(8087
aaa
push
es
push
jle
lret
scas
jnp
dec
icebp
lret
pop
pushf
sarb
xlat
outsb
movsl
cs
jno
mov
loope
ficoml
mov
jns
cmc
push
inc
in
enter
push
data16
loop
cmovno
int3
dec
in
out
in
add
dec
lods
aaa
addr16
or
stc
mov
mov
and
ret
and
xchg
jp
and
jmp
stos
xchg
call
xor
xchg
add
sub
call
push
cltd
sbb
adc
cltd
mov
adc
push
mov
fmull
push
punpckhwd
sub
test
pop
lahf
dec
shlb
fldl
lock
test
inc
jb
adc
call
jbe
pop
out
dec
jno
xor
in
xchg
add
mov
jge
mov
test
popa
dec
pop
xor
mov
dec
or
nop
shrl
mov
push
xchg
test
xor
jbe
xchg
aam
out
pop
dec
fsts
loope
shlb
in
mov
sbb
sbb
push
push
xor
lret
mov
mov
ret
test
sub
outsb
mov
divl
sbbb
xrelease
push
fidivs
fnstsw
repz
adc
ljmp
movsb
fmulp
xor
cmp
int3
or
bound
pop
std
xor
mov
add
and
adc
adc
loop
jp
es
out
dec
adc
or
dec
xor
pop
lods
fwait
mov
push
adc
push
jo
leave
xor
push
cmc
or
lods
jle
push
add
popa
add
add
popa
add
add
popa
add
je
popa
outsb
add
add
add
push
add
add
add
add
add
add
