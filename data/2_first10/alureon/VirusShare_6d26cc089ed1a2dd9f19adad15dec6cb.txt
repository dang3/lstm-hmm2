rcrb
test
dec
push
call
xchg
loope
inc
add
fadd
pop
dec
clc
cmpsl
sub
push
mov
test
mov
push
out
sbb
cmpsl
sub
jnp
push
loope
sbb
jne
mov
mov
enter
sahf
lret
test
add
xchg
popa
aaa
cmpsl
mov
sub
js
popa
cltd
or
pop
jl
into
push
rcrb
ret
mov
inc
movb
sbb
push
and
inc
mov
push
add
cmp
mov
xchg
mov
dec
mov
sbb
orl
mov
pop
jecxz
sbb
and
mov
inc
xor
pop
mov
mov
inc
adc
arpl
dec
jne
fdiv
shlb
in
push
push
fs
icebp
in
cltd
push
mov
stc
ds
popa
sarl
xchg
pop
xor
and
ja
mov
aaa
adc
dec
sub
xchg
int
fs
sbb
cwtl
inc
ljmp
cmc
les
aas
test
adc
push
jl
inc
mov
mov
adcl
leave
jo
jecxz
movsb
xchg
popf
repnz
xor
out
jl
cmp
add
pop
xchg
iret
in
lock
sbb
loop
jg
pop
in
xlat
dec
loopne
mov
outsb
stos
movsl
movzwl
lahf
notl
test
mov
and
flds
ficoml
sti
push
jae
sub
jne
mov
adc
jle
stos
lea
loope
adcb
aad
lock
mov
jne
sub
pop
add
mov
loopne
jecxz
mov
sahf
xor
testl
xchg
jne
jle
jl
std
or
cli
dec
pop
cmp
xor
aas
fstpl
xor
push
jo
mov
adc
mov
lcall
out
hlt
mov
lea
lahf
inc
fiaddl
loope
add
std
mov
aaa
es
int
out
mov
pop
out
jle
mov
test
pop
cmpsl
jl
mov
pop
push
jne
mov
lret
xchg
pop
xchg
lock
and
ja
lcall
dec
lods
push
lods
jo
jae
fiaddl
pop
cltd
insb
inc
fistpll
push
fcompl
adc
fsubl
mov
push
bnd
or
mov
and
jo
insl
and
jo
fnstsw
inc
dec
adc
outsb
jo
mov
push
mov
jge
lds
enter
push
sbb
mov
pop
mov
mov
das
test
jne
xchg
sbb
jl
cmpsb
xorl
adc
pusha
xchg
cld
mov
pop
leave
bound
fbstp
dec
outsl
fsubs
mov
cmp
lock
sub
and
push
cmpsb
pushf
daa
sub
jl
test
aas
test
add
mov
adc
mov
dec
aam
mov
mov
push
jg
dec
fidivs
inc
add
inc
popf
cltd
sub
addr16
icebp
rorb
jns
inc
dec
sbb
int
fdivs
test
pop
bound
dec
not
jnp
inc
mov
dec
xorb
insl
aaa
or
dec
aam
lods
test
jmp
sub
ss
xor
xchg
push
cld
xor
in
jge
loopne
mov
ret
jae
dec
jnp
jmp
sbb
ret
inc
sbb
jmp
jnp
mov
jg
push
in
sbbl
imul
lcall
sub
push
jp
or
mov
popw
mov
push
mov
imul
add
call
add
mov
call
or
push
inc
call
and
lea
add
dec
dec
call
imul
and
sub
inc
add
dec
mov
sub
imul
inc
dec
add
mov
xor
call
add
add
inc
dec
lea
call
dec
mov
call
xor
dec
lea
inc
and
imul
mov
mov
pop
sub
mov
add
add
mov
pop
imul
sub
pop
or
imul
mov
movswl
pop
add
inc
dec
lea
inc
sub
mov
add
pop
sub
inc
pop
mov
imul
mov
mov
imul
call
imul
inc
dec
or
ret
inc
mov
push
add
dec
push
dec
sub
push
dec
push
movswl
inc
push
dec
dec
mov
dec
movzwl
push
movswl
ret
push
imul
dec
imul
lea
add
inc
mov
push
lea
mov
dec
call
pop
ret
jmp
sub
movzbl
mov
imul
add
mov
xor
and
sub
sub
movzbl
dec
lea
xchg
add
lea
movsbl
movzbl
xor
lea
lea
dec
movswl
inc
mov
xor
dec
jne
lea
mov
mov
inc
pop
mov
dec
pop
movsbl
dec
pop
sub
dec
mov
mov
mov
inc
mov
mov
dec
mov
inc
add
ret
push
push
movswl
dec
push
lea
sub
movsbl
movswl
lea
dec
push
add
mov
dec
lea
push
lea
inc
mov
add
lea
and
mov
push
sub
mov
add
push
lea
mov
xor
inc
mov
push
mov
sub
push
add
add
pushl
or
call
or
add
movswl
mov
dec
mov
dec
sub
mov
pop
ret
imul
add
add
inc
mov
mov
sub
inc
sub
lea
imul
lea
cmp
jb
sub
xor
lea
imul
mov
add
sub
mov
dec
inc
imul
inc
inc
lea
dec
add
mov
movzbl
cmp
jb
dec
pop
mov
lea
dec
lea
or
movswl
sub
mov
mov
dec
xor
or
add
xor
sub
sub
mov
test
jbe
mov
dec
sub
inc
inc
or
lea
dec
mov
add
dec
and
imul
or
mov
dec
inc
movzbl
mov
dec
add
lea
and
and
dec
mov
mov
lea
dec
mov
sub
inc
mov
inc
mov
mov
imul
lea
mov
inc
mov
xor
dec
jne
inc
mov
lea
dec
dec
mov
xor
lea
dec
xor
mov
mov
mov
or
add
imul
add
or
add
mov
sub
mov
sub
or
test
jbe
sub
inc
inc
imul
and
mov
xor
mov
mov
dec
dec
dec
mov
inc
xor
inc
add
lea
and
mov
dec
dec
and
lea
mov
mov
imul
mov
movzbl
xor
dec
add
imul
add
and
inc
mov
mov
inc
movzbl
movzbl
inc
dec
mov
lea
sub
mov
dec
jmp
push
lea
movsbl
inc
dec
inc
mov
mov
mov
mov
sub
mov
inc
add
mov
lea
inc
add
mov
imul
lea
xor
mov
dec
imul
mov
mov
mov
add
movsbl
mov
mov
mov
lea
add
or
and
mov
and
dec
cmp
je
mov
dec
dec
push
sub
dec
dec
imul
inc
mov
or
and
and
add
and
dec
mov
inc
dec
mov
dec
sub
inc
inc
mov
movsbl
imul
mov
mov
dec
dec
inc
lea
mov
lea
dec
inc
add
inc
call
call
sub
mov
mov
add
mov
inc
inc
ret
lea
dec
pop
and
ret
push
inc
inc
inc
movsbl
inc
push
and
movswl
push
dec
push
imul
push
inc
mov
imul
xor
movsbl
call
movzbl
push
imul
mov
xor
add
sub
mov
neg
inc
dec
lea
add
add
inc
mov
add
dec
mov
mov
inc
inc
lea
xor
dec
je
mov
mov
add
mov
mov
sub
mov
dec
jmp
add
mov
mov
repnz
lea
add
add
or
jmp
mov
lea
imul
inc
inc
add
imul
add
add
xor
add
movswl
lea
movswl
lea
sub
pop
pop
ret
push
mov
xor
inc
mov
inc
inc
and
lea
movzwl
dec
dec
mov
and
inc
inc
dec
imul
dec
inc
lea
mov
mov
add
add
mov
pop
ret
sub
mov
mov
mov
movswl
mov
mov
xor
mov
dec
and
mov
mov
mov
xor
sub
inc
mov
sub
mov
inc
mov
imul
inc
mov
lea
lea
cmp
jb
dec
push
dec
inc
push
sub
and
push
inc
add
xor
imul
mov
xor
lea
mov
xor
mov
and
push
mov
mov
mov
or
inc
xor
mov
imul
mov
sub
mov
sub
inc
movzbl
inc
dec
movzbl
add
movsbl
add
add
lea
movzbl
or
dec
imul
imul
and
jmp
out
mov
adc
js
jns
dec
lahf
pop
or
arpl
mov
and
adc
mov
cmp
in
xchg
inc
xchg
mov
and
andb
cmp
into
mov
imul
push
sbb
or
addb
ror
frstor
cmc
fnstenv
cmp
push
repz
int
xchg
repz
mov
mov
sbb
or
addr16
mov
push
jno
fistps
test
adc
cmpsb
push
mov
push
mov
cmc
test
dec
push
push
ret
or
insl
ss
push
inc
es
cmp
adc
dec
fdivrl
mov
sub
jle
inc
mov
or
imul
push
inc
xchg
sub
and
aas
adc
xor
rorb
jmp
loopne
loopne
dec
push
in
std
jge
mov
shll
sub
cmpsb
jo
mov
sarb
jbe
rclb
int
sti
push
inc
add
xchg
enter
mov
cmc
sub
frstor
xchg
push
iret
js
xchg
add
mov
push
mov
sbb
pushf
je
dec
add
jnp
orb
fcmove
xchg
stc
iret
add
sub
loopne
mov
mov
jne
js
add
lret
dec
add
pop
jnp
sbb
xor
pusha
outsb
out
xchg
fistpll
inc
or
mov
dec
call
rcl
adc
test
imul
lret
sbb
iret
or
scas
orl
out
push
mov
call
mov
cmp
xor
or
jae
and
int
jmp
jg
loope
fld
xor
aas
hlt
push
sbb
xchg
lea
mov
mov
sub
or
or
leave
jg
dec
in
test
lret
adc
or
push
jbe
xor
sub
jmp
dec
data16
fstp
push
pop
add
or
mov
mov
mov
sbb
and
jecxz
sub
jo
shrb
inc
push
imul
imul
xchg
adc
push
into
mov
push
or
jmp
sbb
outsl
sbb
cmp
pop
insl
cmpb
inc
cmp
sub
lret
and
repz
pusha
pop
push
xor
jg
repz
out
jecxz
je
and
sbb
xchg
adc
push
jmp
ljmp
stc
mov
jbe
or
push
aad
dec
pop
jmp
add
xchg
mov
lods
das
mov
xchg
and
test
mov
mov
fsubrs
mov
loop
test
sub
inc
mov
push
add
and
sarl
mov
push
sbb
push
test
sti
mov
outsl
je
cmpsl
push
fldenv
clc
add
or
or
adc
imul
idivb
sub
loopne
cs
pop
shll
xlat
inc
test
pop
sub
xchg
out
pop
aas
inc
mov
cmp
je
cmp
imul
xchg
add
fdivs
in
sbb
test
dec
movsl
idivb
adc
enter
lea
jmp
addr16
mulb
mov
jg
cmp
mov
mov
testb
jne
inc
pop
cwtl
loop
mov
sbb
pop
fimuls
sbb
ret
push
insl
and
inc
jno
jne
pop
cmpsl
out
cmp
hlt
fwait
inc
movsl
pop
bound
add
mov
ret
insl
ljmp
arpl
push
addr16
jae
lods
cli
sbb
test
in
call
xchg
out
xor
shrb
adc
inc
das
add
pop
in
pop
test
in
xchg
mov
pushf
clc
ret
fnstsw
push
push
inc
les
sbb
jmp
sbb
pop
shrl
fsubs
scas
lods
adc
lds
add
in
pop
lods
stos
mov
xlat
and
orb
ret
jl
and
ror
cmp
sbb
pop
xor
test
cmp
popa
fistpl
mov
in
xchg
scas
aam
sti
mov
cmpsb
push
mov
and
mov
mov
cli
jb
jl
iret
xchg
mov
cmpb
gs
in
xorl
gs
jge
mov
mov
cmp
out
dec
in
fldcw
scas
rcrb
jbe
xor
sub
and
cld
sub
and
jp
push
push
jae
push
inc
jae
dec
dec
push
iret
jbe
or
cmpsl
in
mov
fsubrs
int
xor
mov
test
dec
sbb
gs
dec
clc
push
jl
in
dec
or
cmpsb
dec
stc
gs
xchg
and
xor
and
call
inc
cs
add
inc
test
mov
pop
nop
lds
sub
mov
cmp
jmp
xchg
fs
push
sub
cmc
bound
cltd
or
into
cmp
and
pop
shll
cmp
sbb
loop
jo
xchg
test
ret
mov
add
pop
mov
push
jle
mov
and
mov
pop
pcmpeqw
rcrl
scas
cs
dec
fsubrl
jg
mov
das
jbe
iret
pop
ss
adc
aaa
mov
add
adc
mov
rcrb
or
dec
jl
sbb
add
subl
adc
xchg
cmp
insl
ds
test
mov
xorl
inc
sub
fistpll
xchg
stc
mov
sbb
or
fwait
mov
sahf
adc
mov
add
ret
sub
dec
push
jg
xor
aad
pop
or
je
mov
aam
inc
push
pop
and
inc
mov
sub
inc
sti
push
push
xchg
sub
movsl
dec
idivb
jge
fbld
leave
pop
lret
out
mov
lds
inc
and
and
ds
outsl
mov
xchg
xchg
andb
loope
jge
das
sub
adc
rclb
lock
imulb
popa
shlb
repnz
out
sbb
insb
mov
mov
mov
stc
lahf
decb
push
jnp
movsl
xchg
cmpsl
shrb
push
xchg
scas
inc
mov
mov
sbb
xchg
imul
les
lret
es
sub
jl
pop
sbb
out
sub
mov
sbb
shr
push
out
adc
pop
mov
mov
add
ret
pop
pusha
pop
pop
insl
lret
mov
rcl
inc
js
pop
jge
push
sub
outsb
movsl
ss
jae
fcmovne
xor
shll
test
pop
in
nop
sub
mov
sub
xchg
fimull
fbstp
xor
mov
frstor
repz
test
frstor
mov
mov
jle
cmp
mov
repz
rcrl
nop
lcall
repnz
sub
je
es
aad
ljmp
sbb
push
and
cmpsb
lods
ljmp
mov
faddl
inc
jge
push
add
es
mov
js
mov
pop
mov
xchg
adc
mov
pop
mull
mov
pop
sbb
mov
or
outsl
or
sbb
xchg
mov
dec
lods
std
arpl
add
push
daa
fnsave
mov
adc
aad
and
push
mov
inc
pop
pop
mov
add
jbe
sahf
inc
and
lods
push
out
lret
imul
rcrl
loopne
inc
fbld
loopne
mov
std
scas
sbb
xor
mov
int
leave
inc
add
xchg
imull
jb
out
xchg
sub
fisubrl
aam
push
fsubp
pop
pop
aas
lods
mov
and
pop
movsl
mov
fwait
loopne
shrb
idivl
xor
and
mov
and
negl
mov
pop
pop
test
sbb
push
inc
mov
shr
ljmp
fistpl
imul
outsw
mov
or
xlat
fldenv
test
pop
ljmp
pop
sub
fcmovnbe
jl
in
push
sarl
ds
cmp
mov
mov
mov
insl
or
xor
in
jb
repnz
add
rorb
test
inc
aas
setno
xchg
mov
lret
fsubrs
lret
mov
mov
adc
lods
test
and
adc
pop
jns
xchg
fmuls
ret
and
std
lret
adc
je
xor
imulb
mov
pop
cmp
sbb
mov
inc
xor
inc
mov
pop
push
or
mov
aad
clc
nop
or
call
jmp
add
jbe
popf
daa
arpl
shrl
gs
cltd
push
xor
cltd
mov
xlat
pop
pop
and
ja
in
dec
fcompl
or
sbb
ret
clc
rorl
sub
push
cmpsb
stos
adcb
push
sarb
test
and
dec
out
cmp
cmp
arpl
aad
xor
ror
out
dec
scas
mov
fimull
movsb
push
iret
daa
mov
pop
addb
sbb
push
incl
fwait
popl
aad
sbb
cmp
push
ret
sbbb
cmp
test
dec
mov
and
icebp
jns
inc
scas
bound
cltd
movsl
test
xchg
sub
inc
dec
into
jo
adc
sub
scas
lcall
daa
outsl
and
shll
push
pop
xor
loopne
cli
mov
repnz
shl
repz
aas
out
ja
cmpsl
cld
mov
loopne
jmp
mov
dec
mov
sbb
push
inc
popa
pcmpeqd
arpl
jp
mov
sbb
cmp
xchg
cmp
popw
add
idivl
lds
incb
in
test
roll
aam
pop
std
iret
dec
lret
lds
jge
outsb
xor
orb
or
jmp
mov
out
shll
negl
sbb
insl
mov
cmp
mov
mov
inc
dec
lret
clc
xchg
pop
fmuls
mov
dec
aad
lods
je
out
nop
sti
popa
dec
enter
push
sbb
shr
cwtl
subl
insb
fs
jbe
jb
and
out
addl
addr16
add
inc
or
mov
shlb
xchg
lock
jmp
pop
scas
lds
add
es
xlat
movsl
cs
js
mov
inc
add
je
xchg
push
dec
dec
cmp
fists
xlat
aas
std
rorl
pop
pop
inc
push
sti
in
add
pop
es
fdivrp
aaa
lock
mov
cmpsb
aad
enter
mov
jp
push
mov
js
jmp
push
adc
arpl
out
mov
inc
pop
sbb
jp
add
pop
popa
cs
je
lret
cltd
movsb
and
orb
pop
sbb
xor
xchg
xchg
sub
pop
sbb
mov
push
cmpsl
jne
das
cltd
stos
cmp
popf
mov
fildll
inc
mov
mov
rcll
pop
jae
test
mov
out
dec
shll
push
jp
jle
stos
movsl
inc
push
cmp
mov
iret
fwait
push
repnz
lcall
ljmp
fnsave
lcall
imul
bound
jecxz
xchg
and
repnz
or
ds
xlat
fbstp
int
push
scas
fwait
pop
in
clc
out
into
lcall
add
push
fldenv
lcall
sbb
pop
pop
mov
mov
mov
outsb
adc
mov
xor
mull
pop
xor
stos
sub
scas
add
pushf
pusha
sub
rorl
inc
pop
int
xchg
ljmp
xor
stos
jae
test
push
and
cs
push
hlt
cmp
lret
xlat
or
sub
aad
jnp
xchg
mov
mov
sbb
sarl
push
pop
or
and
sub
mov
lds
stos
shlb
fadds
dec
inc
lcall
mov
mov
pop
jp
sbb
cs
and
mov
iret
inc
out
enter
jno
inc
jl
and
add
cmp
or
pop
xchg
jle
cmpsb
cwtl
mov
mov
insl
lret
lahf
xchg
or
jl
add
push
addr16
dec
out
xchg
jge
or
or
jge
popa
dec
jecxz
jb
mov
cmc
jo
sarl
stc
mov
in
popf
jmp
sbbl
test
mov
xchg
shrl
cwtl
in
jge
xchg
popa
pop
jp
fmuls
adcb
stos
sub
rorl
push
or
inc
aad
add
or
outsb
add
in
sbb
ds
scas
sub
popf
shr
sub
repz
dec
dec
xor
imul
xchg
inc
shlb
mov
lcall
jne
into
adc
and
mov
cwtl
shlb
mov
push
dec
mov
stc
push
iret
cli
and
ss
inc
inc
out
mov
repnz
out
push
es
enter
push
pop
xchg
add
and
gs
mov
sbb
dec
cmp
xchg
pop
and
add
pop
cmc
mov
xchg
lea
adc
jo
jbe
test
scas
xor
std
jmp
mov
adc
pop
xchg
rorb
dec
lcall
cwtl
sbb
inc
inc
inc
push
inc
jae
jle
sbbb
add
jp
fisubrl
outsb
mov
pop
cld
test
add
mov
enter
pusha
cli
mov
aaa
adc
push
stos
mov
cmp
pop
pop
adc
in
adc
jno
sti
push
addr16
ret
push
inc
stc
pop
dec
sbb
hlt
pop
ja
loope
mov
mov
jns
sub
dec
sti
repz
sub
movsl
stc
xchg
and
sub
mov
clc
sti
iret
dec
jno
mov
mov
sbb
ret
fwait
cmc
shrl
mov
cmc
sub
aad
cmp
lahf
jnp
ret
lock
stc
xchg
xlat
mov
sti
loope
addl
inc
mov
loopne
test
dec
sahf
push
inc
sub
sub
push
jae
aam
aad
test
fcomi
arpl
or
push
scas
ds
das
push
shrl
add
cmc
outsl
test
mov
dec
mov
sub
pop
mov
shlb
in
mov
dec
jne
mov
mov
mov
in
loopne
call
fs
daa
mov
push
jno
cmpsl
lds
loop
loope
jle
pop
push
inc
arpl
sbb
lcall
jns
test
mov
pop
mov
lods
stos
rcrl
daa
mov
mov
jno
test
dec
mov
mov
les
push
mov
sub
loope
inc
dec
repz
out
shr
rclb
xchg
dec
subl
mov
push
aam
adc
add
mov
sub
outsb
rcrb
inc
in
sbb
jne
fldl
stc
aad
xor
hlt
add
xchg
mov
dec
xchg
pop
mov
pop
jae
mov
xchg
pop
push
shrl
cmp
sub
insl
repnz
inc
and
adc
fisubrl
pop
insb
fstps
fwait
sbb
jle
pop
push
adc
repnz
in
ret
sbb
push
dec
push
cmp
jecxz
pop
pop
addr16
cs
mov
add
ljmp
insl
or
xor
mov
dec
pusha
ficoml
ljmp
ljmp
push
jecxz
fnstsw
in
pop
jno
or
mov
pop
dec
push
pop
push
rorl
bound
pop
add
push
call
push
xor
dec
lods
dec
jnp
pop
loope
add
xor
sahf
cmp
mov
xor
and
ret
jnp
adc
int
ret
mov
jb
sbb
sbb
dec
push
push
mov
adc
enter
outsb
test
imul
xor
cmp
outsl
inc
jg
icebp
lods
fwait
outsl
das
icebp
sahf
scas
inc
pop
or
push
pop
xchg
dec
data16
pop
xchg
dec
in
scas
data16
xchg
gs
or
es
scas
inc
inc
nop
inc
cmp
test
int3
cmp
inc
lds
les
popf
mov
scas
cmp
jne
mov
mov
adcb
aad
lods
sub
notb
push
push
jge
popa
xchg
sbb
fdivrl
inc
dec
push
lahf
out
sbb
cmp
cmp
aas
push
es
fsubr
xor
push
mov
nop
std
and
popa
sbb
jp
cmc
mov
inc
in
jo
fdivrl
in
inc
aam
xchg
or
xchg
les
int
inc
into
popf
jecxz
mov
xlat
dec
jp
pop
sub
mov
jl
xor
xor
and
dec
aas
movsb
sub
inc
addr16
and
js
sub
xor
movsl
out
jg
sbb
push
mov
push
add
xchg
in
adc
push
sub
outsl
movsl
add
imul
lret
pop
lods
xchg
push
insl
mov
push
mov
lret
xor
test
arpl
jo
mov
adcb
daa
lret
mov
ret
out
jmp
das
imul
mov
fucomip
out
xor
leave
inc
pop
add
push
js
ret
in
dec
int
sarb
push
mov
sbb
popf
leave
mov
daa
or
fstpl
push
bound
sub
mov
adc
mov
push
stos
and
cmp
xchg
add
out
dec
in
orb
mov
mov
adc
imul
cltd
push
lret
icebp
pop
add
imul
movb
test
pop
jne
fmulp
sub
popa
addr16
lret
lods
mov
and
xlat
es
dec
sbbl
insb
cmp
gs
js
popa
hlt
push
in
cmp
xchg
fs
imul
shl
aas
mov
pop
sub
insl
mov
mov
ficoml
jo
pop
stos
sbb
inc
ds
fisubrl
fs
cmc
mov
gs
add
out
out
or
mov
or
frstor
enter
jecxz
mov
xchg
lret
adc
or
pop
inc
in
push
test
loope
stc
clc
inc
js
jnp
std
inc
xchg
cli
js
or
jecxz
cmp
mov
mov
in
or
dec
dec
out
cmpsl
scas
jbe
mov
cltd
sahf
jns
fwait
ss
pusha
push
mov
andl
loopne
loopne
in
sbb
ljmp
in
into
lret
out
sbb
stc
cmp
lds
jecxz
and
sbb
jno
push
enter
out
cld
xor
xchg
loop
sub
inc
test
shrl
test
pop
mov
andb
pop
imul
jecxz
xchg
arpl
in
sarl
push
testb
fwait
mov
fimull
fsubs
pop
add
std
add
xlat
cs
daa
cld
cmp
stos
or
or
int3
jmp
test
pop
xlat
mov
mov
xchg
mov
jle
mov
mov
cwtl
rclb
dec
xor
or
inc
or
ljmp
xor
addr16
ds
pop
sbb
push
fucomp
and
shrl
mov
jb
xchg
and
mov
in
data16
mov
mov
loopne
sti
cli
movsb
add
call
push
inc
aad
movsl
clc
cwtl
sti
out
fbstp
jns
in
or
xor
jg
dec
mov
sbb
repnz
jmp
pop
xor
mov
adc
fdivl
sahf
sub
les
sbb
test
inc
cmp
loope
loope
ja
or
push
jecxz
std
stos
cli
pop
add
dec
popf
or
push
into
jp
xor
and
stos
scas
into
cmpsl
sub
or
mov
push
mov
sbb
out
enter
or
addl
cmp
pop
xorb
in
lds
movsl
cwtl
inc
jb
pop
sbb
je
mov
orb
add
jg
adc
out
out
add
jo
sub
xchg
roll
sbb
gs
int
pop
jl
xchg
pop
push
sbbl
xchg
inc
xlat
pop
add
popf
imul
in
mov
inc
adc
sbb
mov
dec
sbbl
pop
mov
insb
cmp
or
dec
out
dec
and
sbb
mov
mov
call
or
lahf
push
pop
call
hlt
wrmsr
mov
lret
jns
dec
test
cmpw
pop
pop
mov
stos
out
jecxz
mov
xor
jmp
jo
das
inc
mov
cmp
dec
pop
jp
ret
add
ret
adc
mov
loop
and
frndint
iret
inc
lods
in
jo
jne
clc
std
outsl
pop
pop
xor
push
lea
pop
in
jge
clc
je
filds
loopne
mov
loope
dec
lock
fstl
ljmp
mov
add
push
movsb
sub
inc
xor
out
add
ds
or
loope
loopne
pop
push
jecxz
mov
daa
lcall
rcrb
mov
out
test
push
loope
lods
or
xor
aas
sbb
xchg
popa
jle
lcall
cmp
push
jmp
xor
pop
push
enter
bound
mov
xchg
outsl
movsb
xchg
rolb
sbb
inc
add
add
jns
pop
popf
data16
push
push
mov
xchg
imul
stos
pop
js
movsb
dec
xchg
fbstp
sub
add
cli
xchg
bound
xorl
mov
out
mov
inc
sub
insl
pop
int
mov
aad
jmp
out
and
xchg
cmp
mov
xor
in
shll
imul
jge
add
addr16
in
rclb
push
sub
mov
push
idivb
insb
pop
int3
sub
pushf
add
mov
cltd
loop
loope
inc
mov
lods
jl
dec
cmp
sbb
cld
mov
dec
pop
lea
cmpsb
jp
add
fldenv
cmp
js
xchg
andl
lcall
adc
insb
ret
mov
jle
in
je
dec
stos
fs
push
xor
jecxz
outsl
das
pop
nop
adc
scas
or
add
pushl
mov
adc
jecxz
mov
rcrb
fcmovne
adc
fistl
aam
pop
test
sbb
ficoml
sbbb
inc
cmp
sub
rorl
push
add
repnz
mov
aad
fdivs
mov
aad
outsb
mov
mov
xchg
nop
ret
and
inc
lret
xor
mov
in
cld
mov
push
xorw
dec
push
nop
adc
lret
in
out
icebp
sti
insb
xchg
andb
mov
popf
test
popa
clc
inc
or
in
or
lock
push
push
fldt
pop
fcoms
addb
jg
out
lock
mov
es
mov
push
jno
clc
jl
and
cs
es
jmp
hlt
call
mov
divl
lock
stc
scas
inc
push
xchg
sbb
pop
inc
xchg
sbb
add
sub
outsb
fsubr
lcall
cli
mov
jle
lcall
lcall
lret
inc
das
aaa
and
imul
pop
in
add
stos
imul
popf
call
xchg
js
mov
outsb
setno
in
jno
shl
xchg
dec
ds
mov
add
cmp
dec
cltd
in
int
push
push
add
sahf
test
stos
sub
jge
mov
and
inc
mov
adc
push
xor
cmp
pusha
rorb
pop
fmulp
ss
jmp
dec
push
mov
lods
xlat
xor
adc
out
inc
add
pop
sahf
adc
stos
xor
xchg
jl
mov
data16
and
loop
sbb
and
cmpsb
xchg
xchg
jle
outsb
jno
and
or
mov
add
cltd
jbe
pop
xor
clc
sbb
adc
ja
mov
add
dec
call
lock
cmp
dec
mov
jo
add
loopne
jo
xchg
test
push
jbe
jno
push
push
jl
shrl
fdivs
sub
inc
fisttpl
mov
cmp
popa
scas
and
push
xor
mov
cmc
jmp
cltd
fiaddl
jp
and
fimull
leave
inc
idivb
cmc
push
sub
jbe
sahf
mov
mov
mov
adc
ds
pop
sub
mov
cmpsb
jae
icebp
or
mov
jmp
and
call
mov
psubusb
cmp
nop
cmp
adc
fisttpll
dec
cld
mov
cmpxchg
xchg
pop
sbb
cli
pop
ret
imul
xchg
jns
pop
or
int
fistpll
je
iret
and
mov
scas
pop
push
xor
incb
jbe
mov
adc
popf
mov
cld
xchg
cmpsl
dec
hlt
bound
enter
pop
mov
push
mov
pop
and
push
das
add
dec
or
mov
lea
mov
pop
sub
or
pusha
shrb
lahf
lcall
mov
xor
test
and
inc
cmpb
insl
sub
or
push
shlb
xchg
fsubl
inc
cs
pop
xchg
loope
cmp
lret
fidivrl
mov
ja
jg
in
pop
dec
fmuls
shll
shll
hlt
imul
aam
nop
mov
xchg
adc
sbb
add
addb
stos
sub
xor
sti
cmp
or
pushf
enter
addb
adc
xor
xor
aaa
scas
js
leave
les
fidivrl
loopne
ljmp
fildll
cmc
dec
lods
xlat
dec
pop
or
int3
mov
dec
fcomps
jno
sbb
pop
cmpsl
xchg
adcb
loop
or
cmp
int3
cld
xchg
or
add
cmp
cwtl
cwtl
cwtl
xchg
cmp
pop
xchg
sub
jecxz
cmpb
push
dec
push
push
xor
sub
loope
dec
jmp
aas
cs
pop
lcall
cmp
movsb
pop
mov
fwait
and
xchg
jl
inc
sahf
decl
jecxz
test
das
inc
aad
jb
icebp
dec
jecxz
jp,pt
ret
fcoml
ss
fsubrs
cmp
out
jge
movsb
add
js
dec
dec
xor
stos
push
mov
into
enter
adc
sbbb
ret
lcall
fs
ja
mov
js
imul
idiv
outsl
aam
push
lds
std
pop
lods
jae
jle
cld
mul
mov
int3
stos
inc
dec
and
jmp
repnz
inc
frstor
shlb
shlb
fsubrl
push
push
jecxz
xor
xchg
hlt
jnp
push
dec
iret
push
leave
in
xchg
jl
sub
mov
jbe
popa
inc
outsl
call
xlat
ss
iret
scas
outsb
mov
clc
ds
cwtl
xlat
push
flds
dec
andb
xor
mov
out
int3
adc
lods
xchg
dec
push
xor
arpl
outsl
je
jg
pop
sub
or
arpl
push
fwait
aad
cs
push
hlt
sbb
nop
int3
enter
je
mov
pusha
rorb
lret
mov
mov
and
ljmp
and
xchg
hlt
pop
xchg
cmp
xchg
ror
aad
xor
jg
mov
out
test
dec
and
dec
inc
xor
cmp
mov
push
into
pop
sub
imul
fwait
pop
leave
xlat
cmp
or
ja
shr
fildll
or
repz
lahf
inc
fs
scas
popf
outsb
inc
cmp
mov
push
jo
jg
mov
pop
dec
mov
mov
mov
lods
fists
push
sbb
jns
and
mov
ret
je
and
insb
sbb
cmc
cmc
jl
xor
leave
add
xchg
fistps
daa
ds
sbb
test
jne
mov
ja
int
scas
roll
fsub
mov
and
sbb
jmp
push
rol
insb
mov
movl
repnz
iret
or
testl
mov
adc
sub
mov
stos
mov
fdivrl
enter
outsl
sbb
push
js
push
rcrb
fstpt
adc
mov
jne
repz
data16
dec
mov
repnz
cmp
mov
gs
fpatan
pop
push
xchg
ss
incl
xlat
jno
dec
dec
int
pop
ret
cwtl
sahf
outsl
loope
and
jle
and
mov
pop
jb
sbb
mov
mov
shr
repz
loope
sbb
jae
out
jbe
cmp
int3
mov
cmp
dec
or
mov
and
je
mov
mov
pop
pop
movsl
fistpl
sbb
out
out
inc
jp
and
cwtl
out
xchg
xchg
push
and
sub
adc
xchg
cld
popf
cmpsb
mov
push
adc
pop
cmpsl
pop
jmp
xchg
cmc
cmp
inc
data16
cmp
arpl
outsl
sahf
arpl
mov
ret
mov
clc
fnstcw
shl
inc
jbe
jae
mov
idivl
lret
and
xor
imul
jmp
push
in
data16
aaa
jmp
adc
mov
movsl
aas
addr16
push
sahf
push
push
call
cmpsb
mov
andb
mov
and
aad
clc
jl
lcall
mov
in
adc
sarl
ljmp
mov
loope
test
mov
aad
adc
imul
in
dec
loop
outsb
dec
inc
fldt
fidivl
test
lret
insb
js
push
push
cltd
pushf
mov
xor
hlt
adc
clc
lahf
pop
into
iret
dec
pop
sahf
push
dec
jmp
lret
xchg
movsb
add
mov
fwait
mov
mov
loope
jge
sbb
pop
mov
addr16
dec
mov
fwait
loope
bound
mov
sbb
xchg
stos
out
mov
or
and
jo
pop
push
jl
xchg
dec
xor
popa
pop
aas
jo
fwait
add
adc
iret
mov
arpl
pop
scas
mov
cmp
pop
pop
fdivrp
movsl
cmp
xchg
rorb
arpl
mov
jns
mov
adc
xchg
or
rorb
or
sbb
or
mov
and
push
pop
inc
in
movl
xchg
sub
adc
aaa
adc
lods
mov
mov
sarb
mov
int3
xlat
dec
mov
mov
int
out
dec
repz
insb
lods
push
sub
aaa
aas
out
movsb
add
lods
cmpsb
sub
xchg
add
pop
mov
inc
mov
movsl
push
js
push
inc
cmp
push
push
jmp
je
mov
les
jecxz
or
repnz
call
ss
and
sub
cmc
jae
jecxz
call
sub
arpl
int
push
adc
cltd
cs
lcall
fdivs
jns
sahf
out
jns
dec
imul
js
es
adc
imul
insb
and
shll
mov
and
and
dec
mov
add
mov
lock
es
pop
xchg
dec
add
lods
mov
sub
mov
mov
sub
out
lret
add
push
divb
popa
imul
pop
daa
cmp
dec
xor
or
sarb
lods
in
ljmp
outsb
sub
sahf
and
iret
sub
mov
loopne
xor
lcall
imul
add
sbb
xorl
jmp
push
pop
lret
orl
sub
adc
imul
les
or
cmp
mov
pop
ret
stos
or
insb
cmp
scas
loop
push
dec
fwait
ret
mov
ljmp
push
push
mov
push
mov
loop
cmpsb
stc
jae
shl
mov
frstor
xchg
lods
add
enter
jle
rolb
lret
arpl
js
into
popa
xchg
mov
into
mov
pop
rolb
push
sahf
cld
mov
lods
xchg
mov
pop
push
sbbb
enter
dec
mov
add
xchg
push
xchg
in
lds
fsincos
add
add
or
and
jg
jb
or
xor
mov
test
daa
inc
push
xlat
ret
mov
movsl
mov
imul
in
mov
or
sub
popf
cli
lret
movsb
int
inc
repnz
and
mov
sbb
push
loop
sete
adc
jnp
lea
outsb
sti
lods
mov
cli
sub
or
or
cmp
cmp
cmpb
fimuls
mov
lret
jae
and
inc
push
xor
xchg
add
lods
rol
imul
add
repz
pop
in
jge
sub
mov
les
imul
in
mov
decl
mov
aad
inc
sarb
insb
xor
cmpsb
imul
fcomp
out
jne
call
pop
jge
push
into
dec
clc
ljmp
xor
and
outsl
fstpt
mov
call
mov
mov
imul
add
inc
inc
cmpb
pop
inc
inc
inc
add
addr16
shlb
stos
int
popf
icebp
inc
dec
dec
sbb
mov
jno
jo
push
xchg
xchg
dec
call
fdivrl
int3
add
xchg
inc
divb
mov
aas
testb
outsb
jbe
xchg
fmulp
daa
sub
sbb
mov
daa
jns
call
mov
mov
jb
cwtl
decl
mov
adcl
sub
lock
sub
test
aam
outsb
lea
xor
push
pop
mov
in
xchg
sbb
mov
insl
sub
movsl
loop
add
aad
jmp
shll
jl
or
rclb
sbb
iret
fidivl
mov
addr16
xor
cmp
fiadds
pop
dec
jo
sub
frstor
lret
push
es
arpl
inc
jo
mov
lcall
mov
and
std
fistpll
mov
mov
sbbl
xchg
stos
push
stos
mov
add
push
xor
inc
pusha
and
xor
loop
mov
movsb
lods
out
inc
pop
add
or
xchg
sbb
add
jbe
mov
cmpsl
sub
xor
sbb
pop
cld
inc
inc
xchg
pop
into
out
pop
inc
shrb
cltd
jle
into
rolb
enter
loopne
mov
push
pop
scas
aaa
fsubs
add
pop
pop
fdivl
xor
test
cmp
mov
inc
xlat
add
mov
movsb
ret
xor
test
lret
outsl
mov
sub
movsl
cli
dec
outsl
sbbl
in
xchg
jmp
out
and
inc
rclb
sbb
add
mov
dec
xor
movsb
clc
ja
cmp
icebp
cwtl
movsl
into
xchg
lcall
adc
dec
mov
jbe
pop
sbb
leave
call
jge
pushl
cmpsb
push
hlt
stos
sub
inc
mov
mov
xor
jnp
stos
mov
aad
insb
inc
mov
inc
jns
decb
or
dec
inc
and
inc
cld
lahf
cmp
dec
sub
adc
cmp
pop
int3
sub
xchg
jmp
xchg
pop
out
jecxz
rorl
ja
cwtl
add
pop
sbb
pop
sti
insb
inc
dec
sbb
jns
sub
sbbl
inc
push
mov
sbb
pop
jge
call
ljmp
mov
jmp
cld
and
pop
xchg
mov
and
sti
popa
hlt
sbb
pop
dec
lods
and
pop
ds
repnz
into
push
sub
sub
jno
inc
out
sub
push
jns
cld
je
lahf
pop
push
nop
loop
popf
xor
repnz
adc
cmp
mov
mov
popa
lret
fldl
ja
xchg
jno
mov
pop
adc
inc
repnz
fiadds
call
mov
mov
and
fiaddl
mov
std
sub
mov
xorb
pusha
jbe
dec
cmp
and
sub
pusha
mov
into
or
aam
icebp
and
les
fs
je
je
mov
loop
add
fnsave
mov
in
jo
sbb
pop
ljmp
fldenv
mov
jb
insb
xor
xor
inc
enter
jae
or
sbb
sub
out
xchg
push
mov
sahf
divl
mov
lret
enter
mov
mov
adc
jbe
jbe
aad
push
or
pop
jbe,pn
mov
push
add
imul
test
icebp
imul
sbb
inc
and
jecxz
jecxz
mov
rol
int
inc
dec
pop
mov
mov
push
popa
and
jp
in
jp
jb
inc
repnz
mov
fmull
xor
stc
push
and
cmp
leave
sbb
iret
inc
test
fbld
aad
cmpsl
fisttps
cmpsl
sub
and
jge
push
aam
cld
push
lock
jns
into
cmp
sbb
movsb
in
add
addr16
rcrb
std
mov
test
adc
rcl
mov
lods
add
adc
sbb
fsubp
or
fs
jmp
gs
dec
dec
adc
sub
fcoml
xor
pop
push
dec
orl
lds
add
or
push
mov
out
out
inc
sub
dec
sub
mov
mov
and
sbb
or
outsl
mov
addl
dec
mov
fnstsw
pusha
loope
inc
sub
ss
pop
adc
rorb
jns
fcmovnu
pushf
inc
lret
mov
cmp
lret
push
imulb
cmpsb
movsl
mov
fdiv
insl
sbb
and
fisttpll
jns
pop
std
sub
add
sub
fiadds
ret
and
mov
add
aaa
pop
cmpsb
popa
pop
shlb
notb
in
cmp
push
and
dec
enter
mov
jmp
mov
outsl
ja
adc
ljmp
sub
lods
xchg
and
lods
dec
dec
mov
and
cmp
pushf
daa
lods
push
pushl
sbb
adc
lahf
jle
fwait
dec
jnp
mov
cltd
movsb
jl
out
dec
pop
and
or
cmc
popa
mov
into
popa
xorl
fldcw
lods
out
pop
jle
pop
push
sub
stc
inc
insb
mov
in
adc
pop
sub
lods
jle
inc
adc
je
icebp
adc
sbb
fildl
pop
iret
fbld
ds
sbb
pushf
fistps
cmc
push
fidivrs
fimuls
fs
mov
xchg
call
call
std
arpl
repnz
jne
pushl
iret
lds
xchg
js
xchg
xor
lods
aas
incl
or
insb
pushf
mov
jmp
imul
rorl
repz
and
out
inc
mov
add
in
lds
dec
jmp
pushf
push
in
rcl
arpl
sbb
pop
push
outsl
add
and
rcrl
rcrl
dec
dec
scas
mov
outsb
mov
sub
ss
push
ljmp
lods
push
imul
or
xchg
cmp
leave
fldl2t
divl
adcb
inc
jle
pop
and
ss
xchg
imul
scas
popa
mov
rclb
and
test
jl
mov
shll
loop
mov
or
ljmp
hlt
nop
cmp
push
pushf
jb
xor
stc
fimuls
add
fiaddl
jg
xor
sbb
lcall
mov
pop
sub
and
ret
mov
mov
arpl
or
mov
gs
dec
lds
inc
cmpsb
xor
or
mov
pop
xchg
push
int3
or
xor
xor
pop
loopne
es
test
aam
sarl
ret
mov
hlt
inc
mov
sarl
add
in
mov
xchg
pop
inc
bound
and
pushf
cmp
adc
cmp
or
bound
clc
sbb
xchg
loopne
jns
mov
push
iret
stc
inc
dec
sub
addr16
dec
mov
add
xlat
lret
inc
subl
xor
vmwrite
push
dec
mov
icebp
sbb
push
and
mov
and
sub
jne
jnp
dec
jmp
test
out
add
push
lcall
adcb
cmp
aas
dec
push
or
insb
jle
mov
cmpsl
sti
jae
jne
inc
sbb
adc
in
cmp
jb
lds
push
loope
jge
sub
cmp
mov
mov
clc
adc
mov
push
add
aas
shl
arpl
test
cmpsb
or
jp
dec
pusha
out
fisubrl
sbb
sub
loope
or
xchg
scas
cmc
sbb
fdivrp
jnp
cmp
cli
in
xchg
je
imul
adc
push
outsl
xor
xchg
xor
xchg
rcr
roll
push
loop
ss
int
out
cmp
pop
dec
sbb
jae
mov
and
shr
push
ret
imul
jmp
pushf
add
lods
xchg
popa
nop
inc
nop
pusha
insl
pop
xchg
jno
sub
cli
dec
stos
js
pop
inc
pop
mov
jmp
in
adc
sub
or
fs
roll
jno
pusha
repnz
pop
dec
mov
mov
xor
jns
pop
sarl
outsb
das
fcmovu
frstor
dec
lock
loopne
xor
mov
nop
pop
insl
xor
inc
sub
jge
and
adc
jae
inc
pushf
xchg
add
mov
das
fwait
sbb
pusha
inc
or
mov
dec
jecxz
pusha
xor
jg
or
testl
mov
and
mov
push
inc
jge
xchg
aaa
xor
sbb
mov
sub
mov
aaa
roll
and
sub
in
lahf
aaa
jmp
ljmp
mov
scas
push
push
and
mov
xchg
lahf
and
rcrb
jle
les
jno
inc
cmp
outsl
mov
mov
ret
add
jg
xchg
pop
lea
insb
frstor
fnsave
sub
add
repz
jmp
cld
xor
stos
xchg
mov
in
sub
popf
adc
out
mov
pushf
xor
dec
push
push
dec
sbb
xchg
cli
imul
xchg
test
or
pop
out
sub
mov
out
int
hlt
roll
or
mov
imul
sarl
and
cmp
jno
xchg
push
pop
cmpsb
add
stos
cmpsb
mov
dec
cmpb
sub
pop
xor
xor
scas
fcmovne
jecxz
roll
sbb
xchg
cmc
out
jmp
sahf
sahf
cwtl
push
inc
add
rcll
add
daa
add
dec
test
and
mov
movsb
movsb
xchg
cli
cmp
pop
xchg
cmpsl
mov
ja
sbb
mov
cmc
push
in
loope
scas
les
jo
mov
jbe
xor
lahf
push
push
pop
pop
js
inc
mov
repz
mul
jmp
test
scas
xor
cld
test
xlat
ljmp
aas
pusha
mov
inc
xchg
xor
aam
push
subb
movsb
pop
xor
movsb
sub
mov
and
add
mov
cmp
loop
frstor
in
ljmp
jge
in
fisubrs
mov
inc
lcall
inc
and
outsb
dec
test
and
fsubrs
into
fs
mov
mov
adc
cmp
pop
lods
or
pop
pop
lods
jle
fnstsw
xor
inc
mov
dec
cltd
xchg
in
loop
orl
ret
clc
out
ret
or
inc
xchg
sbb
xchg
or
es
enter
mov
out
push
push
inc
sbb
lea
out
cli
in
es
into
ja
dec
popf
loope
push
cmp
xor
push
inc
adc
pop
push
xchg
pop
cmc
pop
jl
dec
mov
push
adc
icebp
mov
pop
popf
mov
cmp
out
xor
js
inc
adc
pop
mov
movsb
jp
jb
adc
adc
iret
int
xchg
or
add
mov
movsl
jp
xor
xchg
fildl
add
aad
pop
sub
cmp
mov
or
outsb
insb
jbe
adc
cmc
push
xor
sti
dec
les
inc
push
or
pop
jb
jp
cmp
or
push
test
fmull
pop
in
imul
xchg
leave
mov
outsl
in
ja
push
jecxz
mov
mov
push
mov
xor
lcall
fsubrs
fistpl
push
fsubs
fiaddl
pop
scas
inc
jle
inc
pushf
insl
sbb
pop
hlt
cwtl
ljmp
push
mov
je
ljmp
sbb
lock
cli
pop
pop
mov
aad
cmp
lcall
push
sub
dec
inc
mov
aaa
add
xchg
dec
daa
jno
sbb
fildll
leave
mov
sbb
push
mov
jecxz
inc
mov
aam
in
test
inc
call
jg
xor
sbb
lods
or
mov
fistps
mov
stos
xlat
sbb
pop
inc
dec
jns
adc
mov
lahf
or
pop
mov
andb
pop
outsb
push
dec
mov
and
scas
arpl
mov
out
popf
fiadds
mov
mov
fwait
mov
fstps
push
pop
sub
xor
inc
pusha
sub
lds
mov
ds
add
aad
or
adcb
cmp
call
mov
ds
enter
fsubl
mov
pop
and
mov
jg
or
mov
dec
or
popa
pop
mov
retw
ret
jecxz
daa
mov
ficompl
clc
sbb
adc
loop
sub
mov
jle
lds
dec
cmc
fmuls
jp
std
lock
xchg
sbb
pusha
xchg
loop
cs
and
jae
pop
xchg
jg
mov
stos
ficoms
ror
nop
xchg
mov
xor
das
adc
and
pusha
bound
and
lds
testl
and
je
loop
jl
hlt
jg
xchg
xchg
cmpsb
out
cmpsb
xchg
mov
mov
xchg
cmp
in
adc
adc
jmp
fwait
shlb
cmp
mov
dec
or
push
push
ret
or
mov
imul
lods
scas
andb
inc
lds
lcall
je
fldcw
ret
stos
je
cmp
insl
push
pop
fcoml
xchg
int
mov
adc
hlt
enter
rcl
int
nop
in
or
int3
xchg
test
ljmp
mov
lcall
cmp
aaa
lret
mov
xchg
out
daa
pusha
pusha
mov
xor
scas
rcr
push
mov
imul
jle
scas
sub
sub
adc
cmp
adc
mov
mov
sti
and
pop
pop
icebp
aas
adc
or
es
arpl
pushf
and
adc
jo
sbb
cmp
ljmp
aaa
call
xchg
out
fbstp
repnz
movl
pop
mov
adc
dec
insb
adc
mov
inc
sub
push
movsb
aam
ja
in
adc
lret
stc
inc
das
mov
xor
push
or
mov
sbb
test
mov
fstl
je
mov
cmp
ret
inc
aas
mov
lods
and
and
or
jmp
lds
fcmove
xor
outsl
xchg
mov
ds
sti
push
mov
cltd
lock
and
adc
pop
jb
or
cmp
and
fisttpl
cmp
fwait
pop
xor
mov
scas
pusha
les
les
cmpsb
cld
enter
fcmovbe
pop
xlat
add
push
loopne
dec
fdivl
jge
or
dec
lods
movsb
arpl
xor
jle
ud0
jae
sti
addb
mov
push
cmp
fcmovb
ficompl
xchg
lock
push
inc
movsb
and
std
adc
pusha
mov
and
loope
xchg
push
jne
mov
lret
out
push
outsl
repz
xor
out
xchg
rcrl
scas
shll
popf
adc
pushf
aad
inc
sbb
das
outsl
mov
es
int3
jmp
add
scas
push
mov
ljmp
sub
xor
add
mov
imul
cmpsb
ret
std
lods
arpl
push
mov
inc
gs
adc
repz
popf
fxch
das
stc
clc
mov
sti
test
inc
push
test
gs
push
mov
aam
out
repnz
cmp
jmp
out
fildll
mov
mov
mov
and
imul
add
repnz
in
push
fstpt
push
loopne
add
movsl
insl
lret
data16
pusha
lds
mov
mov
adc
jb
dec
cmp
mov
add
psrld
push
outsb
xor
inc
sbb
lcall
add
xchg
iret
mov
into
xchg
mov
and
xorb
mov
xchg
lds
cs
xor
xchg
xchg
cwtl
mov
lods
lcall
in
mov
iret
sub
push
out
sub
pop
int
fcoms
fs
jbe
lea
and
sahf
andl
jne
mov
outsb
and
jmp
and
sub
fisubrl
test
mov
lahf
dec
adc
add
ja
push
je
cld
cmp
adc
sbb
lret
bndldx
mov
addr16
push
xor
fwait
test
in
jno
add
pop
in
shl
nop
dec
adc
push
dec
sub
and
mov
xor
add
add
or
sbb
lock
enter
mov
mov
jae
jns
fnstcw
sbb
int
push
out
pop
pop
cmpsb
pop
filds
jl
sub
mov
inc
xchg
pop
jecxz
sbb
shlb
fcoml
cli
pop
lds
int3
jg
ljmp
mov
imul
repnz
mov
adc
les
out
and
inc
cmpsl
adc
cmp
pop
cmp
shr
test
cmp
je
cmpl
dec
or
imul
aam
popa
sub
mov
xchg
std
imul
xchg
or
movsl
cmpsb
stc
insb
mov
pop
push
dec
pushf
call
andl
repnz
jge
xchg
lods
pop
mov
jg
in
push
mov
xchg
outsl
jmp
sbb
jl
dec
push
rolb
and
or
lods
xchg
xor
sub
adc
mov
mov
out
adc
dec
sti
hlt
call
xor
popa
push
in
insb
sub
pop
icebp
push
inc
mov
and
pop
xchg
xlat
movsl
std
sub
sub
hlt
imul
cmp
inc
std
push
mov
sbb
adc
add
push
inc
mov
and
xchg
mov
lret
dec
das
mov
pushl
dec
or
test
mov
push
stos
dec
inc
test
std
sbb
enter
fs
mov
xor
scas
xchg
pop
xchg
mov
jle
fwait
inc
mov
je
pop
mov
adc
adc
jb
cld
pop
adc
xchg
es
fwait
in
mov
and
jle
pop
jmp
mov
dec
pop
dec
and
xchg
fsubrl
imul
std
lods
push
clc
mov
xor
add
clc
push
mov
jo
or
jecxz
sti
add
imul
adc
jle
add
mov
outsb
mov
out
mov
ljmp
addr16
pusha
inc
mov
push
data16
pop
cmpsb
sub
adc
and
movsb
inc
jp
fcompl
insl
add
push
push
sbb
aad
adc
add
popf
sbbl
xor
fwait
aad
pop
test
push
sbb
sti
jo
std
xor
jo
in
pusha
rcll
mov
js
fs
adc
or
test
add
inc
mov
mov
mov
xchg
imul
mov
movsb
pop
add
int3
fnstcw
xchg
sbb
lea
cmp
pop
mov
xorl
xor
add
fstpt
inc
inc
aaa
imul
sub
roll
mov
pop
push
fidivrs
sub
jns
cmpsb
jg
mov
bnd
mov
cmpsb
sbb
mov
outsl
inc
and
not
mov
inc
push
mov
test
and
sarl
cmc
sub
mov
fsincos
ss
test
cwtl
ret
sti
aad
push
inc
lcall
leave
sbb
add
jl
lret
xchg
ret
and
sub
mov
fimuls
cli
std
insl
lret
add
mov
cmpsb
push
fcmovu
mov
repnz
mull
arpl
ljmp
inc
aaa
data16
push
fmulp
outsl
stos
jecxz
out
mov
adc
aas
rclb
flds
inc
pushf
add
test
cmp
add
movl
push
sbb
adc
mov
cmpsl
inc
or
pop
and
pop
mull
pusha
mov
pop
out
inc
fadds
mov
mov
dec
push
dec
mov
cmpsb
lock
loope
sahf
fadd
pop
inc
dec
lahf
sub
hlt
dec
into
inc
mov
nop
mov
in
lods
mov
add
mov
xchg
xor
stc
pop
repnz
add
pop
mov
popf
jl
in
mov
test
jae
arpl
test
scas
fldl
aam
sti
sbb
xchg
cmp
ja
insl
sti
cmpsl
pusha
repnz
mov
popf
adc
sbbl
in
push
inc
aam
jae
mov
push
bound
fistps
and
lods
rorl
pop
je
call
xlat
jl
mov
mov
ret
je
test
lds
shr
xor
pop
xor
scas
lea
cmp
jge
mov
iret
jecxz
xlat
test
in
cmpsb
pushf
add
push
mov
xchg
jl
pusha
lret
js,pt
jno
dec
loopne
iretw
std
fcoml
mov
sub
jns
jno
dec
fldl
loop
inc
push
iret
movsl
sbb
dec
shlb
dec
dec
js
test
in
aad
leave
ret
and
inc
out
imul
test
and
push
jo
adc
or
sub
mov
notl
js
pop
jp
jns
and
les
inc
mov
cwtl
scas
jne
fdivrl
bound
stos
push
aad
test
xchg
sbb
or
jl
iret
sbb
add
xchg
mov
cmp
dec
aam
sub
adc
rcr
jno
or
jl,pn
aad
out
je
out
int3
push
sub
mov
lods
push
or
mov
ljmp
xchg
and
jmp
and
push
mov
mov
adc
xor
xor
movsl
jne
repnz
xchg
lcall
sub
push
push
int
sti
dec
sbb
mov
aas
mov
popa
rclb
jo
xchg
insb
xor
out
es
mov
out
or
outsb
out
mov
sarl
in
adc
fisubs
dec
repz
xchg
cmpsl
lcall
dec
mov
mov
ds
sub
cld
mov
nop
leave
cltd
jb
sarb
push
or
mov
or
sbb
aaa
out
in
test
scas
movsb
subl
sbb
fldcw
cli
sbb
dec
icebp
in
ss
xlat
outsb
arpl
insl
lret
adc
ss
fdivrl
pop
mov
xchg
stos
jo
mov
dec
mov
test
sbb
jecxz
sub
jne
adc
pop
aas
mov
sub
push
inc
leave
cmp
cmp
out
jb
xchg
push
adc
scas
cmpsb
test
inc
shl
imul
push
sti
mov
mov
movsb
push
leave
fisttps
jae
insl
icebp
fldenv
sbbb
andl
pop
insb
test
mov
xchg
dec
shl
inc
outsl
mov
xor
test
cli
icebp
in
adc
scas
ss
adc
mov
call
add
dec
movsl
lods
jle
inc
sub
lret
and
mov
bound
inc
xchg
jne
lock
xchg
sbb
cli
cld
pop
push
lcall
je
inc
fs
ja
insl
rclb
and
or
out
insb
push
push
js
dec
aas
or
fstpt
shlb
sub
add
lods
shll
inc
popa
cmpsl
and
xchg
sbb
icebp
js
cmpsl
mov
push
add
mov
or
das
in
inc
pop
or
call
push
rolb
jae
sbb
jmp
xchg
mov
cld
mov
arpl
sub
sbb
jo
int3
pusha
xlat
aaa
mov
mov
repz
lret
lahf
sarb
cld
adcl
xchg
adc
sub
push
lods
xchg
es
stos
scas
mov
test
inc
jne
js
popf
add
xchg
ss
mov
jmp
dec
std
jge
mov
and
bound
cmp
jnp
fidivl
lock
jmp
sbb
push
jbe
movsb
fcomps
test
xchg
or
xchg
bound
leave
ficoms
inc
popl
jo
mov
iret
pshufw
in
xchg
xor
lahf
push
pushf
gs
insl
jae
push
mov
insb
arpl
mov
mov
loopne
das
scas
cli
in
out
jp
cmp
lds
aas
arpl
cmpsl
icebp
adc
mov
paddw
jmp
sbb
test
mov
add
fdiv
sar
cmp
out
std
bnd
sub
adc
cmc
pop
movsb
add
loope
loopne,pn
dec
ja
sub
jg
inc
cli
leave
sub
enter
mov
fisttpl
icebp
pusha
fdivp
xchg
enter
test
imul
or
or
fdivrs
movsl
es
jle
dec
lds
fs
lret
adc
inc
xchg
pop
mov
lret
sti
jecxz
cli
xor
jbe
adc
and
loope
jne
mov
inc
iret
outsl
pop
jbe
jae
scas
popa
xchg
in
movsb
xchg
das
cs
adc
pop
repz
dec
inc
push
fcoml
das
sbb
inc
push
cmp
call
cmp
cli
fs
sbb
adc
inc
push
in
or
outsl
in
add
fdivrl
stos
xchg
adcb
xor
enter
insb
jb
push
ljmp
sbb
sbb
into
dec
xor
aam
fwait
pop
hlt
cmp
mov
dec
dec
mov
pusha
and
jb
add
std
jo
cmp
daa
ret
pop
mull
popa
xchg
icebp
xlat
inc
dec
or
mov
xor
arpl
xor
adc
repz
pop
jb
imul
aad
daa
jl
xchg
in
insb
imul
insl
out
or
pop
mov
into
jnp
fwait
push
and
mov
and
cli
cmp
dec
cmpsb
addr16
push
add
jle
je
inc
call
push
cmp
jne
mov
pop
xor
inc
arpl
add
jne
fbstp
ficoms
stos
sub
sti
int3
pusha
cmp
icebp
jecxz
fisttps
xchg
cmpsl
mov
push
jns
sahf
scas
cmp
dec
jg
mov
xchg
push
pop
sahf
push
adc
inc
stos
ja
nop
inc
cmp
lfs
add
or
stc
or
inc
xchg
mov
movsl
jne
mov
inc
sbb
sti
xor
sbb
mov
sbb
or
shr
adc
adc
sbb
or
xor
sti
adc
incl
mov
dec
lods
inc
addl
xchg
push
sbb
aad
inc
std
lcall
mov
dec
push
xchg
xor
addb
pop
cwtl
mov
xchg
insb
das
sbb
fdivr
or
aaa
shll
andl
pop
bound
inc
repz
in
jno
aas
fstpl
jno
pop
adc
pop
xchg
loope
movsb
xchg
aam
bound
inc
shll
cmp
mov
shrb
xchg
pop
ljmp
into
push
in
stos
dec
inc
ljmp
mov
je
mov
pop
inc
ja
pop
sahf
sbb
and
out
mov
xchg
outsl
jle
jg
enter
jle
arpl
add
xor
cmpsl
lea
cmp
push
sbb
lods
jbe
mov
sub
lahf
add
mov
aad
pusha
fwait
push
sub
daa
pop
sbb
std
sub
loop
xchg
pop
mov
xor
fmull
test
fcmovu
insl
lcall
sbb
bswap
vrcp28pd
add
mov
pop
jnp
insl
or
adc
popf
outsb
adc
test
and
mov
xor
mov
and
lret
adc
push
or
mov
loop
sub
and
sbb
or
add
pop
add
fldt
call
sub
and
movsb
repz
mov
dec
dec
hlt
add
add
cmc
push
jge
rorl
clc
jmp
add
ja
push
pop
mov
pop
sbb
push
lret
std
xchg
stos
idivl
xchg
clc
insl
ja
testb
ret
add
daa
adc
jecxz
leave
insl
add
fwait
jl
into
loop
into
repnz
mov
jge
das
test
movsl
mov
loopne
shld
sbb
add
mov
scas
in
lods
lret
daa
int
inc
jl
gs
sbb
int3
mov
in
mov
adc
adc
scas
xchg
inc
dec
dec
bound
jae,pn
cmpsl
lcall
cmp
push
hlt
aas
stos
cmp
jp
mov
int
rclb
or
lcall
lret
sbb
cmpsl
popf
divl
sub
arpl
xchg
enter
mov
push
loopne
cmp
in
sub
sqrtps
pop
jle
std
ljmp
xor
das
or
data16
inc
jb
cmove
mov
nop
test
add
jle
xchg
xchg
push
xchg
mov
rcl
and
adc
insl
xchg
adc
or
test
pop
nop
ljmp
add
test
mov
rorb
orl
shl
or
add
aas
fnstcw
jp
mov
xlat
cli
jne
nop
test
fistps
sub
lret
lock
and
adc
pop
stos
xor
mov
mov
mov
jo
bt
mov
jae
lea
cmpsl
jle
xor
into
es
mov
pop
mov
pusha
daa
lds
nop
lea
push
enter
push
lret
xchg
sub
dec
jb
out
lcall
lret
and
xor
daa
inc
js
sub
outsb
in
pop
addb
std
jge
or
out
mov
in
pusha
xor
test
jb
sbb
jbe
fsubrs
lcall
sbb
jge
and
xchg
rol
shll
jge
lret
cld
jecxz
jae
jae
cmp
mov
call
in
xchg
pop
dec
fdivrl
stc
test
sahf
fdivp
inc
sbb
adc
xor
dec
push
insl
xlat
inc
insl
ss
sub
xchg
and
or
ret
inc
leave
inc
pop
outsl
ljmp
fdivrl
push
pop
mov
cli
jle
and
aaa
cwtl
cltd
pop
xchg
mov
loopne
popa
push
cmpsb
ss
fildl
sub
xor
out
lea
loope
aas
xor
or
outsb
scas
mov
cmpsl
aam
jae
test
jbe
icebp
or
lret
nop
mov
cmp
sub
adc
mov
add
std
out
bound
rorl
insb
imul
dec
lret
test
into
test
faddp
test
mov
inc
dec
ficomps
mov
push
iret
or
xchg
in
mov
dec
push
jmp
sub
push
loop
mov
shrb
push
dec
push
jno
data16
cld
popf
sub
mov
outsb
jge
jbe
rcll
cmp
sbb
pop
lahf
adc
jl
cs
add
out
jl
jae
inc
cmp
or
idivl
shlb
sub
jl
fs
xor
test
mov
mov
mov
in
pop
arpl
xor
adc
test
add
enter
xor
add
inc
push
sbb
mov
jle
and
sub
mov
imul
add
sbb
lret
mov
push
sbb
xchg
addr16
in
push
jno
pop
movsl
dec
dec
out
mov
push
rorl
cmp
adc
mov
outsb
add
fiaddl
xchg
jmp
imul
sarb
lods
add
mull
loope
fnstenv
fwait
mov
fdivl
or
orl
std
cmp
fidivs
add
xorl
or
pop
mov
or
iret
mov
and
movsb
addr16
cs
mov
scas
dec
jne
mov
insb
sbb
rorl
dec
stc
jle
js
adc
push
clc
lret
sub
add
jecxz
aam
aad
sub
inc
mull
and
jge
push
popa
out
les
arpl
or
xchg
fs
outsl
jb
in
sbb
cmp
lock
movsb
pop
sarl
and
fisubl
into
push
fsubrl
xor
jb
rorl
addr16
push
jbe
test
sub
js
ror
call
mov
outsb
xchg
or
adc
fwait
in
mov
testl
dec
and
int
loopne
dec
mov
das
ds
pop
cmp
add
push
or
sub
mov
je
fldenv
sbb
xor
shlb
sub
cmc
cmovno
aam
pop
in
jb
rcrl
or
inc
push
or
imul
test
mov
lcall
int3
ja
xchg
jnp
inc
fistpl
xchg
data16
ret
xchg
ror
inc
loope
enter
sarb
das
jb
add
std
and
fildl
in
jbe
mov
addl
sbb
jle
mov
cmp
pop
mov
cmp
mov
pusha
shrb
xchg
push
push
xor
sbb
cmp
clc
and
mov
cmp
test
and
andb
mov
push
icebp
push
rcll
push
pop
cli
and
imul
xchg
sub
xchg
sbb
mov
jno
stc
std
jecxz
push
inc
mov
cld
dec
ret
jmp
iret
lea
les
dec
stc
pop
dec
std
push
sbb
cwtl
adc
xchg
cmc
add
cmpsl
aam
popf
mov
cmp
adc
lock
mov
xchg
push
xchg
pop
mov
jne
lods
call
push
jg
data16
push
aas
sbb
mov
loop
sbb
sbb
jl
cmp
xchg
lahf
xchg
ja
ljmp
lret
inc
xchg
cmp
imul
push
in
mov
mov
push
pop
jecxz
pop
mov
fldl
ret
jbe
mov
movsl
ret
jnp
cli
insl
mov
testb
addl
test
jns
repz
sub
xchg
adc
xor
mov
les
test
int
add
push
js
in
int
push
jp
inc
jae
jae
mov
mov
fsub
es
std
mov
xchg
cwtl
psubq
shlb
fadds
cmpsl
retw
jnp
pop
pop
mov
jg
dec
or
mov
push
out
aaa
out
dec
jnp
mov
adc
lret
mov
ret
add
shll
adcb
mov
test
arpl
pop
push
sbb
sti
pop
outsb
or
sahf
mov
movsb
icebp
test
daa
pop
push
or
and
clc
pusha
pop
pop
scas
cmpsl
xlat
outsb
outsb
out
pop
repz
shll
mov
sub
and
loope
mov
xchg
popa
cli
pushf
movsb
outsl
fucomip
adc
out
movsb
mov
mov
adc
ds
xor
popa
stos
in
adc
xchg
mov
xchg
jp
aaa
mov
pop
ret
pop
add
negl
mov
xchg
incl
push
ja
dec
les
in
mov
out
push
adc
xchg
in
xor
lret
daa
and
lods
addr16
mov
dec
jecxz
sti
ret
sbb
cmp
fcmovb
mov
ja
mov
fwait
inc
aaa
push
xor
push
or
rol
je
xor
sub
in
sub
mov
inc
add
pop
mov
xor
not
jl
dec
sub
scas
outsl
out
in
faddl
icebp
cmpsl
xchg
in
test
rorl
ret
or
jg
les
push
leave
fmuls
push
stos
add
sbb
push
fistpl
roll
cli
push
cwtl
cmp
sub
cmp
add
icebp
stos
push
setne
in
mov
inc
sbb
mov
jge
js
adcl
jp
jge
les
test
insl
mov
xor
and
jnp
sub
bound
mov
push
and
scas
movsb
sbb
xor
jecxz
adc
test
xchg
clc
jne
xor
rorl
test
pop
aaa
stc
fsubl
adc
hlt
mov
subb
adc
jmp
out
push
and
sub
fwait
xchg
shlb
int
sbb
xorb
cmc
scas
and
push
stos
sbb
int3
push
xorb
stos
jecxz
adc
imul
lahf
mov
aas
fldl
idivl
sbb
xchg
sbb
jmp
mov
sbb
ss
jno
sbb
into
test
pop
jb
push
xchg
mov
inc
mov
les
add
aad
jecxz
sahf
bound
or
jge
xchg
ljmp
sbbb
and
and
mov
popa
shlb
sub
and
jp
mov
xchg
mov
jb
dec
xchg
push
sub
sti
lret
repnz
aam
rol
sub
sub
into
je
hlt
cmp
lds
loope
jmp
add
les
lds
call
out
movl
xchg
pop
or
sbb
xorl
cmp
mov
xlat
mov
in
push
pushf
jge
xchg
push
push
mov
jb
push
sbb
sbb
or
stos
shrl
or
repnz
aas
dec
dec
pop
ja
add
pop
insl
sub
add
and
sub
xlat
xor
push
jg
xchg
loopne
cmp
cmc
cmc
inc
xchg
mov
adc
mov
xor
jb
int3
dec
inc
jl
sub
das
mov
lret
and
and
inc
xchg
lock
das
fwait
xor
sbb
push
inc
das
lcall
mov
js
ds
js
shrb
adc
xor
inc
mov
sub
lods
lock
bound
outsl
sub
rorl
adc
mov
lret
dec
jb
fmul
push
ret
xchg
pop
shll
add
leave
mov
sbb
fs
cwtl
pop
test
lret
add
arpl
jmp
dec
adc
loopne
jo
and
cmp
shlb
xchg
inc
repnz
mov
in
add
imul
add
data16
cs
out
inc
jns
call
pop
push
and
fildll
insl
sbb
xchg
nop
mov
adc
cld
pop
push
jnp
push
mov
pop
or
push
lret
sahf
cwtl
mov
inc
stos
sub
mov
inc
xlat
data16
cmpb
ss
push
inc
add
lahf
aam
jae
insl
sbbb
sbb
push
scas
lahf
mov
or
inc
or
cmc
int3
mov
push
stc
mov
and
imul
out
fadd
and
lods
xchg
rcll
cmp
inc
lret
leave
push
outsb
mov
xchg
jo
fwait
leave
or
add
lret
icebp
xor
clc
xchg
idivb
inc
mov
or
lea
mov
outsl
cmp
mov
mov
sub
add
inc
in
xor
pop
jg
xchg
xor
ret
sub
jge
xor
dec
ficomps
mov
cmpl
lcall
mov
dec
rol
push
jb
ljmp
test
push
add
push
adc
cmp
jg
or
rolb
push
cmpb
add
int3
push
sub
stos
leave
inc
mov
cld
sbb
outsl
add
mov
cmovns
rcrl
push
fs
sub
pop
add
xchg
pushf
mov
incl
add
jnp
or
hlt
pop
jp
js
adc
xor
dec
sub
lcall
aad
cmp
mov
mov
pop
push
jae
popa
outsl
push
sbb
xor
pushf
iret
jge
fwait
push
sub
sbb
mov
push
dec
push
repnz
shll
dec
adc
cs
out
and
push
mov
sarl
and
xchg
mov
mov
jle
clc
jge
fdivrs
shll
mov
dec
sub
arpl
cmp
push
push
push
dec
push
cmp
or
cmp
andl
scas
dec
or
or
shlb
call
jge
jg
dec
ljmp
negl
mov
mov
lcall
insl
inc
fsubs
cmp
mov
adc
shl
ds
jp
add
sarb
inc
add
add
sbb
pop
push
pushf
sbb
rolb
pop
mov
mov
cmp
dec
xchg
mov
xorl
inc
icebp
les
dec
jle
das
insl
and
push
fisubs
hlt
test
rorl
fsub
jmp
repz
jne
adc
pop
ret
dec
rol
or
pop
pop
and
adc
cmp
cmpl
jns
xchg
imul
fisubrl
add
or
and
ss
mov
mov
mov
ficoms
jb
push
shrl
in
lods
gs
aad
and
adcl
sub
lods
lret
in
dec
cmpsl
movsb
popa
sub
fimull
adc
les
adc
pop
std
int3
mov
arpl
imul
addb
jl
out
pop
sarb
xor
push
inc
adc
jg
jae
loopne
ljmp
pusha
in
pop
mov
mov
sub
xchg
aam
xchg
pop
mov
and
mov
mov
subb
pop
ja
sub
xchg
jnp,pn
data16
adc
cmp
addr16
mov
inc
xor
adc
xor
setae
in
mov
cmpl
adc
mov
iret
mov
jae
ja
xor
mov
push
xor
mov
scas
fisubrs
mov
int3
fcmovnu
xlat
and
scas
add
pop
or
dec
dec
enter
push
xchg
push
pop
push
scas
sub
mov
sub
mov
mov
and
cmp
mov
pop
cmp
stc
cmp
push
xor
call
xchg
aad
add
mov
xchg
sub
mov
sahf
repz
mov
cmpsl
shrb
cmp
in
insl
sahf
jne
push
sbb
dec
push
mov
movsl
imul
jmp
ss
jmp
add
dec
xlat
cmc
repz
pop
jge
mov
mov
orb
loopne
pop
lret
sub
push
xchg
inc
repnz
or
and
jmp
test
jl
and
mov
push
pop
test
pop
leave
cmp
mov
sahf
les
inc
xlat
dec
ss
adc
push
enter
cmp
sub
orb
and
sub
das
aam
and
ljmp
add
or
pop
push
mov
mov
cmc
mov
add
mov
out
out
push
or
sahf
clc
fisttpl
pop
jl
push
push
push
xor
in
push
push
cltd
sbb
or
scas
sub
jae
stc
out
aam
loope
push
inc
sub
add
xor
cvttps2pi
add
cwtd
mov
mov
movsl
xchg
push
call
sahf
lcall
cli
ds
and
sub
int3
inc
ljmp
fbstp
iret
cmp
pop
add
pop
fbld
in
mov
adc
jns
cmc
shl
or
jg
jb
adc
pop
xor
call
shlb
dec
repnz
add
inc
ja
shlb
lahf
dec
push
cmp
sub
testb
out
js
shlb
stos
jl
adc
adc
mov
jmp
mov
adc
clc
mov
scas
jmp
and
and
icebp
and
insl
mov
shlb
jle
je
lahf
xor
pop
or
xchg
ljmp
inc
xchg
xor
faddl
orb
add
dec
div
push
je
push
jmp
push
jno
or
cltd
loopne
in
je
mov
or
push
cvtpi2ps
leave
cmp
sbb
fdivs
les
mov
cmpsb
dec
dec
push
cmpsl
xchg
mov
bound
add
mov
xchg
and
mov
push
pusha
icebp
xchg
sti
dec
in
add
add
or
hlt
orl
stos
sbb
mov
out
das
iret
pushf
sbb
leave
inc
inc
pop
pop
add
sbb
cmp
jg
inc
xchg
dec
mov
repnz
pop
inc
rcrl
mov
adc
adc
inc
inc
outsb
mov
sti
in
jg
adc
and
arpl
cmp
aad
add
stos
imul
jo
out
jae
frstor
xchg
jno
jmp
xlat
roll
xchg
aam
imul
sub
roll
jbe
adc
addr16
lds
xchg
lods
jns
or
push
sti
test
jnp
lret
test
mov
leave
xchg
xor
or
mov
ret
addr16
mov
sub
jle
xlat
pop
push
cmpsl
enter
std
adc
scas
cmpb
divb
push
subb
lds
pop
cs
sub
inc
mov
stos
int3
decb
int
inc
mov
out
or
aad
mov
adc
popa
sbb
fildll
pop
wrmsr
bound
mov
mov
stos
add
dec
push
xchg
mov
jmp
orl
add
xchg
in
addr16
lcall
popf
push
xchg
les
sub
cli
jae
fisubrl
ss
dec
test
add
xchg
mov
mov
das
and
fstl
dec
sub
push
push
movsl
and
insb
jle
inc
test
cmp
mov
adc
dec
mov
pop
mov
les
subb
jnp
mov
test
xorb
inc
outsb
jl
or
mov
and
pushf
arpl
mov
in
push
loop
stc
push
addl
aad
mov
mov
rol
push
push
jmp
sub
and
fnsave
push
in
adc
das
jb
sbb
sarb
int
adc
push
lods
scas
into
cmc
xchg
sbb
push
mov
sbb
sbb
sbb
shrb
in
sbb
dec
lahf
scas
ret
loopne
int3
dec
insb
data16
xor
mov
imul
xchg
mov
pop
jge
cmp
mov
xchg
dec
jo
fbstp
pop
jmp
or
fisubrl
cltd
add
cld
jle
adc
outsb
subb
daa
fdivrs
scas
and
inc
inc
jae
shll
xchg
aad
dec
xchg
or
sti
lahf
jb
fucom
mov
mov
insl
movups
pop
add
stc
mov
dec
cmp
stos
xchg
or
int
pop
sti
push
mov
insl
je
sub
scas
repz
in
loop
insb
adc
subb
xor
loopne
add
or
sub
jmp
inc
dec
movsb
dec
subl
out
outsb
and
mov
xor
popf
outsl
sbb
insb
js
pop
pop
test
call
in
test
fildll
cmp
dec
std
or
imul
lods
add
adc
or
jecxz
push
inc
sti
pop
loopne
inc
mov
pop
inc
mov
cmp
push
outsl
pop
inc
lea
adc
mov
push
aad
pop
add
fcoms
cmp
jmp
shlb
inc
fs
sarl
sub
sahf
outsl
fsubrs
jmp
mov
scas
mov
pop
aaa
fisubrs
nop
sbb
lret
xor
sbb
or
cmp
sbb
mov
fimuls
jnp
sbb
push
push
ret
or
aas
and
pop
dec
or
test
sbb
jle
adc
stos
pop
mov
pusha
subb
shl
lcall
jg
into
push
pop
xor
push
xcrypt-cbc
lds
ljmp
cmpsl
lods
adc
mov
add
sti
cmp
push
icebp
sbb
xor
jecxz
xor
icebp
add
mov
xchg
push
and
decb
and
sbb
jae
push
xlat
push
mov
loopne
lret
loopne
clc
cmp
mov
lret
xlat
xor
mov
fldln2
xchg
frstors
out
roll
sbb
inc
xlat
into
xchg
insl
popf
loopne
shlb
lret
mov
jmp
mov
push
fadd
pushf
cwtl
mov
imul
gs
mov
popf
loop,pt
out
insl
adc
jne
lea
bound
xchg
jne
xchg
cmp
in
xchg
xchg
je
stos
fwait
pop
jns
mov
fsubrl
inc
push
das
into
sbb
enter
sub
leave
mov
jg
mov
mov
lods
into
ds
stc
frstor
leave
sar
loopne
out
cmpsb
stc
leave
arpl
mov
adc
cmc
jle
sahf
xchg
dec
pop
or
mov
shr
jbe
inc
mov
popa
push
insl
mov
push
adc
or
mov
dec
les
pop
xor
test
into
jnp
push
fbstp
xchg
xor
dec
mov
std
mov
cmp
xchg
push
rclb
jecxz
leave
outsb
ljmp
jno
pop
or
inc
stos
adcb
loopne
rcll
ret
cmp
mov
and
add
fwait
cmp
push
or
popf
in
aam
xchg
out
aas
or
mov
les
mov
or
pop
xchg
mov
ja
adc
cmc
jl
sahf
scas
add
int3
sub
ret
fcoml
sahf
mov
test
mov
push
jns
mov
test
jne
sbb
std
dec
mov
or
inc
mov
mov
mov
arpl
mov
sbb
enter
mov
insl
cmpsl
xor
add
aam
dec
or
adc
insl
dec
or
mov
ss
es
loop
inc
inc
dec
jo
insb
ja
jmp
lret
mov
negb
lcall
xchg
add
shr
mov
aas
pop
mov
sbb
sbb
mov
add
cmp
pop
mov
mov
dec
xlat
fldenv
add
jo
pop
push
xor
out
cmp
cld
divb
imul
mov
ljmp
push
imul
shlb
pop
shll
out
add
into
pushf
adc
imul
out
jnp
xchg
xor
ljmp
repz
ror
mov
aam
jo
mov
mov
lret
cmp
std
adc
ret
add
cmp
lock
hlt
add
loop,pn
je
jl
pop
mov
jnp
lods
dec
inc
inc
stc
push
sub
js
cmc
push
ficompl
imul
dec
rcrl
repz
sbb
scas
out
sub
push
in
daa
bound
cwtl
pop
insl
inc
xchg
sub
mov
pop
xchg
mov
pop
sbb
jmp
adc
sti
adc
cmpsb
cmc
dec
mov
popa
cmp
fs
pop
lcall
data16
and
sub
jp
les
dec
cwtl
cmp
out
imul
fisttps
sub
sub
add
rcrb
xchg
fs
outsb
or
mov
cmp
daa
icebp
xchg
sub
mov
add
outsb
fdivrs
fwait
mov
mov
movsb
add
inc
shll
outsb
das
inc
pop
xor
mov
xchg
xor
or
xchg
mov
lahf
mov
jl
mov
stc
mov
std
mov
pop
xor
aaa
jne
inc
ds
repnz
xchg
inc
xchg
cmp
ja
sub
jno
stos
scas
inc
lods
push
lret
outsb
inc
shll
or
sbb
aam
sbb
mov
mov
mov
sub
shl
mov
daa
sti
scas
lock
push
sbb
pop
xchg
mov
shlb
repz
aad
arpl
or
enter
pop
push
cmp
lahf
pop
xor
ror
mov
lret
lods
in
nop
mov
aaa
inc
sbb
pop
ja
bound
sbb
dec
pop
push
shll
adc
xchg
jo
xchg
xor
stos
pop
dec
and
pcmpgtd
push
pop
jb
sbb
xchg
gs
pop
pop
fwait
aaa
cs
movsl
xchg
inc
pop
push
fs
jo
push
xchg
jns
dec
push
in
or
jne
stc
fdivrs
popl
pop
lahf
adc
xchg
jo
outsb
nop
enter
push
fstps
pop
mov
hlt
jecxz
pop
xchg
loope
add
faddl
fwait
adc
sub
jo
in
imul
or
mov
lcall
fimuls
mov
inc
mov
xchg
hlt
push
imulb
inc
pop
jne
or
pop
out
dec
push
jbe
xchg
jb
lds
lods
inc
adc
aad
pop
sub
sub
mov
add
and
mov
outsl
stos
mov
aad
rcl
stc
push
sub
sbb
push
mov
lret
xchg
test
xor
dec
jecxz
icebp
lods
push
cmpsl
test
mov
push
add
or
pop
lods
add
ljmp
sbb
jecxz
or
or
fistl
jmp
fxch
cld
into
addr16
add
call
andb
push
lret
jl
or
cmp
es
or
xor
cs
jns
in
roll
pop
cmp
adc
inc
inc
aam
jmp
mov
lods
adc
lds
cmp
fwait
cmp
nop
mov
sbb
fwait
lcall
leave
add
inc
fwait
inc
andb
push
lret
add
imul
mov
into
std
movsl
mov
imul
stos
jmp
mov
xchg
jl
push
xor
fistps
filds
cmp
push
stc
cmp
movl
out
xchg
movl
idiv
aam
mov
sahf
jnp
fsubr
sbb
cmp
and
mov
push
pop
pop
push
xor
jl
icebp
inc
outsl
test
data16
mov
cmp
dec
pop
les
data16
outsl
pushl
inc
push
ljmp
ja
in
js
jb
push
inc
movsb
pop
xor
cwtl
and
sbb
je
mov
fs
xlat
in
cmp
pop
mov
jge
enter
shlb
clc
jns
roll
stos
dec
stc
lods
mov
adc
test
insl
bound
xor
xor
lret
sbb
ja
movsl
outsb
int3
lahf
shr
sbbl
xchg
jmp
xchg
ret
cmp
shll
xor
rcrl
ds
mov
mov
leave
dec
mov
xor
out
jne
ror
popf
lods
or
ljmp
insb
mov
aam
fsubs
jne
test
adc
lds
addl
fnsave
fxch
lods
enter
test
mov
mov
sbb
es
mov
leave
std
shrl
jno
pop
inc
jns
les
dec
in
out
lea
testl
mov
je
mull
inc
or
out
inc
sub
pop
cmc
rcl
dec
and
test
enter
popf
popa
sar
jo
push
cmpsl
cmp
mov
xor
jbe
mov
cmp
pop
mov
or
cmp
js
mov
das
push
mov
jge
cmp
or
das
adc
inc
mov
jmp
pop
dec
pop
fmuls
imul
rcl
stos
dec
pop
sahf
rorl
out
lock
mov
les
ret
push
fisubs
les
lods
pop
dec
dec
dec
fimuls
jle
or
daa
fwait
test
jle
sti
push
outsl
sub
fdivrl
dec
dec
and
or
dec
sbb
icebp
adc
jle
nop
orb
push
nop
std
cmp
in
xchg
mov
lahf
imul
jne
repnz
pop
jo
aas
mov
lret
cmovb
jge
das
pop
js
repnz
cmp
outsl
push
fldt
adc
dec
push
and
xchg
push
incl
in
push
jg
mov
loop
inc
stos
test
jge
or
sbb
xchg
aam
jp
test
xchg
mov
pop
icebp
jns
mov
push
adc
push
or
jecxz
imul
cmp
aas
mov
loop
std
lea
add
jg
xor
sub
sahf
inc
loope
les
cs
cmp
fwait
lods
cltd
pop
lcall
xchg
sti
leave
mov
repnz
jno
int3
adcb
in
lea
subl
push
dec
mov
mov
mov
push
push
cmp
push
dec
iret
sub
push
mov
pop
fnstenv
leave
mov
push
int
jae
stos
std
dec
inc
jb
mov
popf
pop
fistpll
cmpsb
pop
jae
lret
adc
les
lods
dec
cmp
dec
sbb
inc
in
cmc
or
or
icebp
clc
mov
or
mov
adc
fisttpll
push
std
add
iret
pop
sub
xor
jae
mov
pop
jbe
cli
mov
stc
mov
test
in
aad
adc
ret
mov
lods
pop
fbstp
in
push
aas
mov
or
inc
lcall
xorl
inc
cmpsb
rorb
and
add
pop
cs
mov
mov
or
testb
jg
aaa
fadds
ljmp
and
push
sbb
xlat
cmpb
mov
fiaddl
mov
or
mov
jo
jmp
nop
jl
insl
loope
cwtl
mov
call
ja
rcrb
test
push
lcall
pushf
xor
stos
cli
sahf
ds
loopne
xlat
lds
xor
scas
push
mov
and
and
push
mov
aas
aam
repz
xchg
jg
mov
nop
fdivrl
pop
push
push
inc
ss
mov
pop
clc
jnp
or
int3
iret
rcll
jno
or
je
enter
inc
push
bnd
in
testb
sbb
pop
lea
add
xor
movzwl
sub
dec
inc
pop
call
sub
jns
and
fdivl
fmuls
mov
scas
mov
int
add
xchg
in
push
push
xchg
and
or
in
mov
out
stos
xor
movsl
inc
clc
mov
mov
adc
jbe
fcmovbe
sub
jmp
int
jo
stc
in
jmp
btr
add
sbb
dec
je
out
lods
je
push
sub
mov
sbb
fisubrl
dec
leave
xchg
push
or
popa
popa
add
pop
lock
and
call
add
bound
movsl
mov
xor
hlt
mov
popf
mov
out
mov
icebp
out
cltd
fcmovnu
cmc
pop
cld
mov
jnp
arpl
mov
addl
push
mov
jbe
pop
sbb
xor
sbb
xchg
cmc
dec
pop
sbb
push
pop
popa
mov
push
ret
cmpsl
jno
push
repz
push
arpl
out
jno
xchg
pop
mov
sarb
sbb
loope
cld
test
mov
xorb
jmp
cmpsb
sub
dec
stc
scas
xchg
adc
movsb
in
mov
ret
lea
xchg
xorl
jmp
push
mov
mov
and
pop
lahf
adc
xor
jne
lods
jl
lahf
pop
lods
stc
sub
jnp
sbb
sub
dec
into
jb
adc
mov
add
mov
jnp
mov
jmp
test
sti
adc
out
lods
sub
out
xchg
adc
mov
inc
cwtl
add
and
xchg
xor
lods
push
add
mov
cmpsb
add
dec
jge
fwait
fwait
std
rorl
cmpsb
lods
xchg
add
xchg
insl
sti
inc
loopne
call
test
je
adc
mov
sub
cmp
cmp
out
xchg
cmp
mov
aad
das
inc
ret
xchg
add
mov
fadds
or
dec
mov
push
and
cmp
shlb
mov
lret
jno
popa
sub
mov
mov
mov
mov
add
xchg
cltd
sbb
movups
and
aam
lret
cmp
shrl
add
pop
lock
inc
outsl
cmp
mov
je
push
popf
hlt
jmp
in
sub
push
push
int3
outsl
and
ljmp
lahf
into
dec
cmpsl
xor
movsl
imul
iret
fimull
movsl
inc
jle
pusha
pop
sub
outsl
test
xor
adc
cmp
insl
lods
in
push
andl
call
shll
push
ret
sub
and
in
pop
or
inc
popa
and
xchg
lret
fisubrl
loop
lds
popf
pop
mov
aas
mov
iret
test
stc
pop
lock
scas
add
and
mov
xchg
inc
rcll
nop
in
sub
push
iret
mov
shll
stos
bound
ds
mov
je
sub
mov
jbe
mov
push
dec
sub
jmp
xchg
call
and
sbb
push
hlt
add
jns
xchg
fiaddl
insb
fcmovnb
testl
aam
imul
cmp
mov
les
mov
sub
inc
mov
dec
lret
sbb
stos
iret
xchg
movsl
mov
dec
xor
mov
cmp
xor
add
pop
mov
aad
push
sti
dec
call
and
sub
pop
cmpl
rorl
pop
andl
or
cmpsb
inc
out
xchg
arpl
add
rcl
insl
imul
xor
xchg
outsb
cmp
xor
pop
xor
icebp
stos
xor
mov
fsubp
out
xchg
xchg
movsb
out
mov
dec
mov
xchg
movsl
lds
xchg
test
cli
mov
push
into
mov
repz
push
pop
in
inc
into
dec
int
pushf
test
roll
in
orl
in
lahf
daa
mov
add
js
mov
add
movsb
and
das
jl
cltd
pop
or
jg
xor
mov
vpsubq
lods
mov
subl
daa
xor
xchg
loop
out
xchg
adc
push
addb
mov
push
mov
pop
data16
and
stos
fistps
das
rcrl
jl
inc
cmpsb
dec
cmp
out
lret
sbb
pop
add
loopne
sub
cs
cmpsb
arpl
int3
xlat
in
xchg
or
add
xor
stc
fs
add
pop
mov
dec
adc
sbb
or
data16
adc
movsl
xor
mov
ret
inc
insb
cmpsb
cmp
ja
adc
sub
jae
outsl
xchg
or
add
outsb
aad
inc
cmp
and
jbe
outsl
bound
orl
mov
and
adc
add
ds
mov
xchg
mov
out
inc
add
in
in
add
scas
push
test
jecxz
jg
pop
pop
xor
nop
inc
int3
out
mov
dec
mov
push
insb
sti
jb
out
sbb
pop
xchg
aas
push
inc
popa
sbb
jp
jo
shlb
xor
dec
aad
outsl
mov
inc
imul
sbb
add
xchg
jl
cli
xchg
test
outsb
jb
cmp
loope
fdivl
pop
pushf
inc
jecxz
int
scas
pop
adc
sub
mov
jmp
adc
fcompl
or
push
mov
lods
cld
lcall
les
int
inc
in
xchg
clc
add
clc
test
jp
jae
insl
push
jl
adc
jecxz
sahf
aad
fisttpll
shr
add
imul
xchg
xor
inc
sbb
xor
cli
mov
push
cld
xchg
mov
out
sar
lret
jmp
andl
scas
loopne
shlb
and
outsl
int3
and
cmp
dec
in
daa
adc
in
adc
pop
pop
mov
imul
pop
scas
mov
jmp
push
into
in
and
mov
imul
test
jg
fiaddl
sub
or
push
test
pushf
test
push
xor
js
mov
inc
push
test
iret
jecxz
pop
js
mov
and
mov
movsb
xchg
jno
push
mov
pusha
or
pop
insl
jae
inc
pop
add
pusha
sahf
dec
xor
adc
mov
imul
jb
and
psubusb
push
mov
fsts
mov
cmp
mov
xchg
out
inc
push
scas
pop
pop
jg
or
xchg
push
sahf
jb
or
mov
add
insb
or
pop
in
scas
enter
stos
je
mov
insb
into
inc
outsb
cmpsl
or
aad
inc
mov
test
sub
in
adc
pop
hlt
jne
outsl
ror
push
mov
push
xor
mov
or
add
sbb
out
fistpl
or
sub
mov
sub
dec
add
loope
inc
jnp
rcrl
rcrl
daa
pop
imul
fmuls
or
pusha
pushf
push
nop
add
mov
mov
push
addr16
test
mov
push
sahf
inc
add
mov
out
and
adc
mov
cs
or
pop
fndisi(8087
in
jb
dec
cmpsb
mov
push
jne
out
and
mov
movsl
sub
push
jmp
ds
or
inc
lock
mov
inc
or
in
sub
xor
sub
pop
insb
and
adc
mov
or
pop
aad
cmp
inc
and
and
stc
xor
in
scas
flds
and
lret
leave
mov
xchg
dec
in
pop
andl
imulb
jb
inc
or
mov
rcll
arpl
fs
ficoms
and
shrl
cmp
mov
aad
sarl
popa
aas
mov
addl
lcall
insl
dec
jb
test
sub
pop
aaa
mov
push
lods
xchg
loope
jnp
loopne
divb
sbb
xchg
jp
test
cltd
add
nop
addr16
fisttpl
lock
ss
scas
enter
leave
cli
xchg
int
jo
sti
mov
mov
mov
and
leave
loop
adc
and
jg
push
cmp
out
inc
xor
sbb
and
and
in
dec
subl
sub
xchg
mull
jns
dec
lods
pusha
jno
lret
cmp
insb
add
and
sub
shr
sbb
test
push
in
xchg
inc
mov
jg
fmulp
es
out
popf
lahf
push
adc
test
repz
adc
mov
sub
mov
pop
test
test
and
mov
and
mov
scas
popf
or
xabort
adc
std
xchg
lcall
cld
pushf
push
jecxz
daa
push
mov
loope
mov
loopne
mov
cmp
dec
adc
dec
dec
lds
in
outsl
test
jmp
filds
jle
nop
sub
fmull
lahf
add
ror
into
stos
and
movsb
push
fdivrl
adc
outsl
add
into
mov
xchg
lods
xor
add
test
ja
in
and
and
inc
ror
or
and
ficompl
push
cmp
imul
sub
cmc
mov
mov
aam
push
push
mov
mov
pushf
cli
sub
call
mov
pop
sub
clc
sub
imul
gs
mov
outsl
add
cmc
cmpsw
inc
cmp
test
inc
in
sub
jle
pop
or
imul
jp
fnsave
negb
sub
xor
cmp
mov
sub
into
lcall
std
cld
lret
xchg
cmp
lods
inc
call
pop
ds
pusha
xor
jg
lock
jmp
pop
leave
insl
add
adc
push
and
pusha
into
or
loope
push
jne
push
mov
pop
mov
mov
dec
jne
insb
mov
repnz
dec
lods
or
in
lret
in
sbb
imul
sbb
es
add
push
inc
jns
out
cmp
repz
or
push
sub
fldt
scas
xor
xorb
xchg
insb
or
cltd
test
pop
inc
add
ret
push
jno
aam
int
cld
daa
cmp
cmc
push
push
mov
sub
xchg
jno
test
or
loope
mov
jae
in
xchg
cmp
push
subl
es
das
scas
add
xor
mov
decb
movsl
insb
test
daa
inc
xchg
xlat
mov
mov
and
xchg
pop
cmp
pop
mov
or
iret
orl
je
add
and
or
daa
pop
pop
out
push
jg
mov
popl
sahf
outsb
int
push
clc
data16
jae
frstpm(287
lahf
pop
sbb
fnstsw
mov
push
inc
mov
lahf
dec
jno
push
add
bound
notb
jg
cs
pop
stc
xchg
out
sbb
adc
orb
in
mov
cmp
or
jb
adc
inc
popf
inc
inc
rclb
pop
mov
inc
push
xor
jp
jmp
pop
inc
ficomps
jae
fcmovnu
sti
loop
jo
call
enter
xchg
jl
popa
dec
shlb
mov
dec
push
insl
sub
add
or
pop
fdivrs
jl
dec
sbb
and
pop
inc
fbstp
fs
cltd
mov
fistpll
push
push
aas
addr16
jbe
mov
jge
negb
cmp
xor
mov
sahf
in
in
mov
repz
test
or
lea
into
setp
movsb
enter
dec
pop
sub
and
outsb
sbb
loop
clc
out
mov
jl
cmp
xor
aaa
cmp
andl
lods
cs
pop
mov
pop
ret
call
mov
in
icebp
or
out
fidivs
mov
sub
jne
push
add
jp
sti
mov
pop
lock
cmp
or
icebp
push
jle
mov
ret
jle
imul
dec
in
into
cmc
and
and
shll
pop
adc
push
inc
push
push
pop
stos
push
pop
push
add
mov
sub
push
sbb
dec
cltd
cs
and
testb
adc
jb
hlt
ret
aam
clc
push
ja
mull
mov
hlt
jne
popf
and
pop
mov
xchg
nop
cmp
outsb
mov
jnp
fldcw
mov
xor
inc
cld
sub
pop
fldcw
sbb
outsl
hlt
mov
mov
inc
in
jecxz
and
mov
inc
mov
flds
int
add
xor
pop
cmpl
enter
push
in
scas
jns
ret
xor
pop
mov
std
fisttpll
add
test
sbb
andb
test
std
ret
xchg
stc
or
or
cmc
push
jl
shll
test
lret
outsl
mov
sti
mov
and
dec
js
sub
sar
jno
jno
insl
xchg
sub
daa
mov
jbe
jecxz
pavgb
ds
mov
nop
rorb
testl
jle
std
adc
out
lods
dec
sub
xchg
cld
push
inc
int
sub
push
mov
push
pop
int
mov
flds
imul
sub
dec
xor
repz
lods
and
cmp
and
mov
outsb
xchg
cltd
popa
push
push
dec
loope
test
xor
xor
in
outsl
loop
out
add
leave
sub
dec
push
inc
cmp
jg
fwait
mov
dec
mov
das
pop
out
add
lret
jbe
outsb
adc
insb
or
aad
jmp
add
sarl
push
xchg
fcoms
pop
popa
test
jl
dec
cmp
aas
pusha
pop
aaa
or
fwait
mov
mov
xchg
pushf
call
fs
pusha
rorl
cmpsl
repz
xor
push
jns
pop
adc
ret
mov
adc
adc
push
out
mov
mov
jp
and
ds
loopne
mov
pop
fimuls
lods
push
pusha
cmc
xchg
push
ljmp
cs
mov
jno
cli
sbb
loope
adc
lcall
cmp
pop
fidivrs
mov
add
jp
pop
inc
sbb
cmp
cmp
std
and
push
stos
ljmp
dec
dec
jl
inc
aam
aas
jo
imul
mov
sub
mov
or
in
push
loop,pn
punpcklbw
out
adc
cmpsb
ftst
mov
loopne
dec
in
ja
aaa
push
inc
adc
movsl
shrl
lods
fsubr
jmp
dec
cmp
stos
pop
xchg
xor
enter
ljmp
push
stos
add
sbb
ret
aaa
rcr
lcall
mov
or
int3
stc
cwtl
mov
fisttpll
pop
xchg
mov
in
cltd
pushf
push
sbb
pop
pop
dec
xchg
pop
in
pop
rclb
fs
and
ljmpw
ja
iret
add
xchg
push
mov
je
movsl
sbb
pushf
out
and
movb
outsb
int
orl
stos
dec
dec
sbb
adc
pusha
mov
pop
push
in
xchg
cld
sbb
xor
pop
push
mov
testl
and
rolb
fiaddl
fs
cli
sarl
mov
out
xor
cmp
fsubs
and
sahf
or
adc
push
test
cmp
int3
pop
rcl
cmpl
std
xor
sbb
xor
push
mov
sbb
aas
mov
popf
mov
pop
or
or
xchg
add
testl
cmp
insl
popa
push
mov
inc
inc
call
lods
rcr
xchg
add
jecxz
xor
dec
out
sbb
int
and
adc
xor
xchg
fwait
add
je
test
ret
push
push
jle
xor
add
jge
clc
enter
push
sbb
data16
push
push
xchg
and
pop
lock
roll
call
rorl
xor
cmpsb
jg
and
sub
ret
popa
outsl
dec
lret
jecxz
fwait
add
sub
pop
lds
mov
test
jnp
mov
push
xchg
xchg
adc
insb
aaa
jl
dec
cli
dec
sub
adc
lock
fidivrs
mov
cwtl
dec
cmc
test
ljmp
inc
sti
xor
jo
adcb
popa
mov
cmpsb
jno
mov
inc
add
xchg
ja
sbb
loope
pop
inc
mov
push
xor
mov
mov
loopne
rclb
sahf
sbb
mov
cltd
cmp
push
sub
and
repnz
rcrb
adc
inc
in
xchg
out
lods
popf
jns
mov
push
sub
pushf
xchg
xchg
inc
pop
cmp
or
jbe
inc
lock
insl
pop
test
push
lds
stos
xlat
stos
cld
movsb
sbb
pop
in
movsl
int
mov
jmp
or
jmp
test
sub
cwtl
and
pop
dec
xor
dec
das
adc
jmp
and
sub
or
adc
cwtl
popf
cmp
xor
xchg
xorb
jns
and
inc
ret
sbb
leave
out
jae
dec
dec
or
andb
sub
inc
add
fcoml
adc
push
mov
fsts
fs
lds
or
hlt
es
xchg
je
ss
pop
cmp
xlat
out
jne
sub
mov
pop
inc
shrl
out
dec
mov
or
cmpsb
addb
daa
subb
push
push
add
cmp
add
popf
les
or
mov
pop
ja
jl
in
out
push
mov
push
adc
pop
mov
mov
outsl
clc
std
lret
mov
sub
aaa
inc
mov
pop
pop
add
lds
jp
out
in
insb
popa
sbbb
sti
pop
std
sbb
lods
lret
nop
pop
std
pop
sub
fdivl
pusha
aas
push
hlt
pushf
mov
sbb
fistpl
xchg
and
sub
xor
fcoml
divb
xor
push
andb
xchg
insl
mov
xor
mov
sbb
xor
ss
lods
sti
sub
lahf
loope
in
ja
jl
ss
adcl
test
inc
adc
aas
icebp
adcl
adc
xchg
movsl
lahf
sub
cmc
mov
and
daa
pop
and
xchg
inc
jecxz
out
insl
lahf
cmp
stc
pusha
pop
clc
pop
scas
dec
rol
inc
jb
std
or
out
xchg
imul
dec
fcomps
rol
je
test
cmc
xchg
jecxz
pop
into
daa
ljmp
or
jl
ja
mov
lret
add
adc
or
dec
test
mov
or
cmp
adc
dec
insl
repz
push
push
fmull
mov
aas
fdivrp
mov
leave
sbb
inc
lock
loopne
scas
add
cli
adc
cwtl
xor
and
xchg
test
sahf
xchg
inc
movsl
pop
loopne
rcrl
popf
xor
push
test
add
xchg
sarl
cmpsb
leave
inc
and
dec
jbe
push
fistps
loopne
fdivrs
dec
sahf
add
inc
jmp
cmc
push
xor
mov
inc
xchg
dec
xor
sbbb
sub
pop
sbb
dec
idivl
pushf
sahf
cmp
dec
pop
adc
int
cwtl
dec
ss
mov
cmp
mov
jno
stc
jo
add
mov
mov
bound
cmpsl
inc
pop
clc
cmpsl
push
sarl
movsl
and
fidivs
outsl
out
rolb
add
mov
in
pop
aam
int3
jle
lret
mov
popf
pop
push
test
or
sarl
ds
xor
dec
or
sbb
fwait
push
sbb
sbb
mov
shrl
inc
int3
loop
das
adc
adc
mov
std
or
or
cmp
inc
je
nop
cmpsb
test
xchg
lahf
aam
loopne
add
mov
ret
pop
ret
repnz
aam
fidivrl
data16
test
push
xor
dec
sti
sbb
inc
hlt
mov
jecxz
fstl
pop
jg
imul
or
rcll
lcall
daa
popf
ds
dec
fwait
xor
jp
sbb
imul
mov
inc
inc
stos
loope
sarl
push
popf
sub
cmpsb
push
adc
insl
jle
add
inc
add
add
add
inc
add
adc
add
sub
lock
add
jg
add
add
adc
mulb
push
jnp
xor
int
jp
xor
mov
mov
clc
sub
scas
mov
and
enter
mov
jg
shr
loopne
push
sarl
add
mov
movsl
lcall
rolb
icebp
sbb
ljmp
and
cmpsl
leave
loope
test
out
jecxz
popa
stos
push
std
sti
ss
adc
imulb
test
jno
mov
cmp
jp
cmpsb
aam
fiaddl
aaa
mov
lods
sti
lret
add
test
jge
clc
cmpsl
or
stos
jb
les
xchg
add
or
lcall
mov
inc
sti
mov
lret
and
call
dec
mov
pop
jb
leave
je
push
pop
loopne
mov
inc
lret
xchg
mov
sbb
divb
repz
pop
inc
sub
pop
sub
std
inc
in
inc
fdiv
scas
stos
and
popf
sahf
push
iret
iret
sbb
sbb
push
add
pop
push
push
insl
pop
rolb
cmp
clc
dec
jecxz
push
xor
out
add
cmp
or
stos
add
xchg
aad
adc
sub
outsl
inc
fcoms
shl
in
fwait
mov
pop
adc
icebp
cmp
jg
cmpsb
movsl
or
les
iret
cli
pop
lahf
adc
push
jle
mov
mov
dec
pushf
or
movl
movsb
andb
mov
xor
shl
sti
xor
es
frstor
mov
es
mov
mov
inc
cmp
jns
inc
mov
adc
test
cmpb
mov
xorb
sahf
inc
sub
scas
jnp
hlt
add
or
add
lods
adc
adc
sub
or
ficoms
les
movsb
mov
mov
sbb
data16
gs
sub
aas
or
stos
cltd
xchg
stc
mov
pop
pop
fcmovne
or
and
mov
xor
mov
call
push
repz
std
imul
inc
xchg
and
sbb
std
push
outsb
pop
adc
add
movsl
popa
pop
lahf
mov
pop
cmpsb
lcall
ljmp
jecxz
pop
push
stos
dec
repz
popf
andl
rorb
dec
or
dec
jae
leave
jle
cmpsb
add
xor
mov
jg
ljmp
fldcw
push
jl
mov
pop
xor
fcoml
setb
cltd
jp
mov
and
push
xor
pop
mov
jb
ret
or
sbb
cmc
sbb
ljmp
outsl
cli
js
cmp
int
sbb
xchg
sub
pop
xchg
scas
xlat
add
push
rcrl
inc
cmp
mov
cmp
or
push
call
lret
loope
movsb
dec
pop
stc
das
add
andl
mov
sti
cltd
out
int3
xchg
scas
ret
add
fisubs
in
push
sub
int3
xor
jb
jns
repnz
sub
fstpt
sub
jg
andl
pushf
imul
outsl
inc
imul
xchg
sub
push
and
mov
and
repz
fsubrs
pop
fiaddl
push
mov
sub
sbb
add
push
in
jp
iret
movl
dec
aam
inc
push
jge
test
push
repnz
lock
push
mov
das
and
xlat
xchg
pop
roll
adc
jmp
and
cmp
mov
dec
sub
mov
pop
sti
cmpsb
out
test
sahf
sahf
pop
push
es
xchg
add
stos
mov
jnp
pop
adc
jp
inc
or
jmp
repnz
mov
mov
lea
in
sub
inc
imul
out
jae
shr
or
mov
addb
out
loope
cmp
cmp
mov
push
in
cltd
sti
test
fldl2t
cmp
push
mov
fdivs
cwtl
outsl
stos
addr16
mov
cmp
add
mov
mov
cmpsb
mov
lret
dec
test
sbb
jno
int
dec
mov
enter
dec
inc
mov
mov
addl
add
mov
enter
push
push
stos
cmp
jbe
ret
into
dec
inc
push
pop
jne
in
rorb
pusha
xor
and
xor
out
mov
ljmp
testl
xchg
jle
lods
xchg
jmp
aas
or
ja
cmp
fsts
out
xchg
xor
jnp
movsl
jge
aam
xchg
mov
into
cmp
jo
lret
rolb
push
pop
xor
inc
xchg
iret
ljmp
inc
lods
cmp
pop
mov
and
outsl
push
push
or
shr
lods
orl
ds
jns
imul
mov
mov
jmp
pop
sbb
rol
mov
push
adcl
loopne
outsl
xor
das
mov
imul
jp
addr16
jnp
push
ss
and
or
imul
rcl
sbb
sub
pusha
pusha
and
push
stc
ljmp
add
js
int
imul
xor
aad
adc
add
mov
fs
jae
loopne
push
cmp
mov
xor
adc
andl
lods
insb
mov
ljmp
adc
mov
push
pop
out
mov
pusha
mov
pusha
sbb
mov
mov
lretw
and
punpckldq
cld
das
roll
repz
xchg
inc
lock
mov
jmp
lods
push
enter
loop
mov
outsl
int
xlat
lahf
push
gs
and
pusha
mov
cmp
inc
clc
mulb
or
cld
jns
cmpsb
rcr
push
jge
cmp
fnstenv
cltd
push
sarl
ret
dec
adc
lds
mov
jle
and
cmp
xchg
in
addr16
adc
rcrb
cmpsl
or
je
jmp
jns
cmp
and
push
ja
and
jge
movsl
inc
scas
add
fstps
mov
fs
jo
js
movsb
xor
data16
cmpsb
cmp
cmp
stos
sbb
push
scas
inc
push
jg
jo
jge
lock
dec
in
and
ljmp
lock
push
hlt
sbb
scas
sahf
xlat
add
das
mov
mov
out
into
lret
aaa
cld
outsb
mov
bound
popf
cmp
push
mov
mov
stos
andl
xchg
cs
stos
mov
sub
mov
int3
and
ja
jnp
jns
inc
or
cmpsl
xchg
pop
ds
mov
push
out
lods
or
in
sbbb
jmp
lods
push
sbb
push
sbb
push
stc
popa
sub
dec
mov
stos
inc
in
push
cli
inc
sub
cli
adc
enter
xchg
aas
pushf
inc
cmc
hlt
cmp
out
xor
rcr
int
add
in
dec
jecxz
xor
cmp
mov
pop
xchg
mov
dec
icebp
mov
inc
or
jns
les
ja
ret
sbb
push
cmpsl
push
mov
cmp
ja
xor
insb
adc
adc
fnsave
and
add
ja
or
cwtl
cmp
mov
push
inc
fcmovb
pop
add
js
xchg
xchg
xchg
out
cmpl
xchg
push
cwtl
push
lods
mov
insl
int
mov
inc
or
and
insl
inc
and
out
jnp
dec
push
add
pop
lret
jo
icebp
enter
lods
push
test
lcall
shll
rcrl
jle
mov
mov
sub
nop
std
dec
jbe
nop
mov
leave
push
cmc
lret
add
popa
mov
cmp
push
pop
and
enter
mov
aam
xchg
cmp
enter
test
jle
leave
movsb
lret
push
mov
mov
test
mov
mov
sbb
xchg
mov
inc
mov
cmp
fwait
int
jg
sbb
pushf
sbb
cmpsb
jbe
out
xor
dec
divb
and
adc
pop
ds
mov
repnz
xchg
out
or
xlat
testb
and
ss
sbb
or
mov
xlat
sti
dec
cmp
mov
das
cwtl
leave
jge
scas
dec
test
into
adc
sbb
data16
push
add
jp
dec
mov
xor
jg
push
test
xor
cmpl
ds
js
adc
pushf
inc
leave
cli
jns
in
inc
nop
jns
push
dec
aad
push
jmp
push
mov
insl
fadd
loopne
sbb
pop
jno
out
mov
stos
fldt
leave
push
inc
pop
pusha
addr16
sbb
mov
inc
inc
sbb
inc
aas
frstor
insb
lahf
mov
aaa
xor
push
pop
xchg
mov
enter
mov
insb
les
nop
std
mull
aad
lret
cmc
cltd
jns
aam
cmpsl
popa
int3
cmp
mov
adc
pop
bound
or
ss
mov
push
mov
ret
dec
int
xchg
cmp
mov
cmp
mov
bound
sbb
iret
jg
incl
cmpsb
dec
out
sub
dec
out
pop
ja
rorl
and
jbe
sarl
pop
inc
dec
popf
mov
mov
and
push
mov
outsb
cwtl
xor
mov
fistps
inc
sub
push
enter
stos
fcmovnb
lret
mov
rcrl
cld
orb
lock
aam
gs
mov
jbe
out
xchg
sbbb
mulb
jecxz
jmp
jge
call
jmp
mov
rorl
xor
sub
push
imul
out
adc
xchg
hlt
mov
and
insb
push
shlb
hlt
mov
in
cmp
or
jo
inc
mov
aas
jns
into
cmpsl
xchg
pop
outsb
pushf
cmp
and
pop
das
aam
aas
xlat
sub
stos
in
repnz
pop
cmp
aaa
push
sbb
cmp
pusha
mov
mov
ja
bnd
cli
push
push
xchg
and
insl
mov
pop
or
test
shr
sub
sub
mov
and
mov
jecxz
inc
and
and
mov
xlat
dec
xchg
sub
sbb
pop
jo
ds
mov
lcall
out
xchg
loopne
push
pop
mov
adc
js
xchg
fs
adc
dec
cmp
mov
sub
xor
repnz
or
dec
hlt
call
dec
sub
jp
or
pop
mov
pop
push
cmp
sbb
inc
add
adcb
dec
movb
sbb
pop
ja
dec
push
ja
sbb
insb
je
mov
jbe
mov
jl
xchg
adc
outsb
xor
sahf
sub
shrb
fldt
push
rolb
js
mov
test
and
xor
jns
dec
loope
bnd
or
pop
jmp
subb
in
aad
mov
popl
test
out
dec
push
mov
js
mov
fisubrs
mov
mov
dec
sub
cwtl
mov
repz
decb
dec
adc
imul
cmp
jge
loope
mov
jge,pn
xlat
in
push
rcll
and
or
dec
clc
or
dec
mov
add
mov
jecxz
xchg
adc
insl
push
int3
sub
pop
adc
cmpb
jp
xchg
into
cmp
push
icebp
fptan
add
add
xor
mov
fs
mov
add
mov
fnstsw
flds
ljmp
ror
jmp
arpl
fldenv
push
push
sub
pop
jb
push
dec
out
cmp
cli
out
jno
arpl
mov
sbb
into
rorb
fwait
and
in
jle
jne
in
or
and
pop
sarb
in
mov
jno
imul
fneni(8087
and
rolb
add
mov
rcrb
xor
mov
xchg
loopne
mov
shll
add
in
mov
jp
insl
repz
inc
add
mov
push
fistpll
cmc
inc
cmc
cld
sub
out
jmp
sbb
mov
dec
push
pop
data16
xor
call
sub
inc
push
mov
inc
jbe
jmp
cltd
daa
fisttps
xchg
xchg
hlt
pusha
and
jmp
mov
add
pushl
inc
call
mov
adc
les
addr16
and
js
sub
sub
daa
lret
push
and
dec
gs
sti
dec
shlb
and
mov
addr16
jbe
pop
push
mov
call
xor
inc
das
push
sub
aad
test
sahf
mov
imul
aad
scas
pop
bound
pop
jg
mov
loopne
test
mov
cmpl
movsl
adc
pop
adc
je
lret
loope
add
push
rolb
pop
push
hlt
sub
jle
out
stc
testb
clc
rorb
and
or
mov
mov
in
mov
cmp
cmp
jbe
xchg
hlt
shr
dec
aas
arpl
push
imul
and
or
jnp
and
jae
jge
lcall
fs
sti
addl
xlat
repz
mov
sub
mov
xchg
jg
add
mov
jge
dec
in
les
rol
jle
cwtl
in
loop
mov
cli
jge
cmp
push
jne
sub
dec
cmc
inc
mov
outsb
test
sub
adc
mov
lods
inc
stc
into
xlat
sahf
inc
lea
jge
push
mov
fsubrl
mov
xor
sar
or
push
add
addr16
out
inc
inc
push
roll
adc
inc
cwtl
pusha
xchg
pushf
jo
pop
scas
lods
shlb
xor
adc
mov
adc
xor
jo
scas
cmp
ficoms
cmp
push
pop
mov
sub
lret
lock
mov
iret
mov
sub
call
dec
xchg
push
push
aas
xor
jg
mov
sbb
mov
addr16
lahf
sub
imul
shlb
mov
pop
aaa
xor
dec
pop
repnz
dec
dec
test
nop
mov
aad
xor
rcr
jge
xchg
xor
mov
pop
mov
fisubl
mov
sarb
cmpsb
sub
pushf
push
xchg
aaa
test
fwait
xchg
cmp
jb
dec
outsb
mov
fisttpll
shll
repnz
fcmovnu
push
hlt
arpl
mov
int3
cmp
ss
fcomp
push
lods
mov
imul
xchg
cmp
arpl
ficoms
clc
dec
jb
mov
add
lods
lock
jg
jno
and
cmc
sahf
sub
fs
dec
mov
and
sub
push
lret
inc
dec
mov
out
sub
or
aam
pop
lods
or
push
xor
and
push
add
pop
movsb
jl
xor
adc
cmpb
jle
jge
xlat
cmp
cmpsl
xor
mov
lret
dec
mov
sub
pop
mov
pop
mov
jns
xchg
jge
xchg
push
xchg
and
fsub
push
notl
and
into
dec
pop
hlt
xor
ficompl
mov
mov
mov
movsb
lods
rclb
fstl
cmp
mov
mov
idivb
push
rolb
sbb
rcl
fdivs
or
sbb
inc
stos
push
cmp
loope
in
enter
pop
aaa
int
fildll
test
divl
lcall
mov
popa
les
sbb
outsb
andl
insb
out
or
fnstenv
repnz
jnp
mov
mov
notb
cli
imull
mov
das
cli
cmc
insb
addr16
fwait
stos
sahf
mov
xchg
mov
mov
sbb
outsl
adc
aam
enter
popf
in
fstpt
scas
adc
pop
sbb
aam
dec
cmp
shlb
push
mov
call
loope
out
or
and
subl
mov
fists
mov
fstpl
repz
mov
movsl
mov
lods
jno
scas
mov
pop
push
mov
fdivs
adc
dec
mov
mov
into
insl
pop
jne
daa
push
jno
adcb
add
cmpl
pop
add
jo
aas
jmp
lcall
pop
jnp
xor
inc
ret
imul
div
push
xor
or
pop
mov
and
mov
and
cmp
mov
test
xor
mov
in
cmp
push
in
or
push
sti
mov
sbb
mov
or
mov
fs
mov
cmp
out
xor
mov
push
repnz
loope
fcompl
adc
ja
movsb
and
mov
add
add
fs
mov
mov
jno
cmp
sub
in
cwtl
push
aam
cmpl
imul
popa
push
stos
jmp
popa
imul
call
push
dec
cli
mov
adc
jae
movsb
sahf
fsub
adc
jae
fwait
mov
jmp
mul
xor
fiadds
push
adc
and
fnstcw
sbb
stos
fidivrs
sub
mov
or
ds
leave
pop
in
jnp
push
out
shlb
mov
clc
xchg
fisubs
adc
jne
dec
adc
pushl
dec
dec
cmp
lods
testb
pop
dec
mov
pop
dec
mov
jno
jl
data16
mov
mov
stos
add
arpl
dec
dec
mov
aam
movsb
push
insb
jne
push
aam
push
mov
jle
push
call
sbb
adcb
cltd
scas
push
add
lods
lcall
xchg
xchg
inc
outsl
push
test
mov
or
clc
jge
mov
out
xlat
jno
mov
lods
popf
xor
cmpsl
push
inc
and
cmp
stc
push
fldt
shlb
xchg
fsubrs
sbb
mov
dec
fbld
sbb
ret
mov
scas
jne
xchg
sub
test
push
sub
jnp
mov
jg
xchg
aad
mov
mov
and
pop
scas
push
cmp
pop
mov
inc
fwait
inc
xor
add
push
lods
out
cmp
dec
mov
repnz
mov
fdivrs
shlb
stos
and
aam
add
add
repnz
rcr
cmp
push
push
sbb
rorb
fisttpll
popl
lea
push
sbbl
or
dec
mov
or
mov
adc
inc
push
test
cmp
sbb
push
mov
jnp
call
shll
jle
mov
cmp
sub
cmp
push
dec
arpl
test
push
popa
shrl
shr
mov
add
push
lahf
negl
xor
or
data16
popa
shl
mov
mov
shr
popa
inc
movsb
int
xchg
gs
mov
es
xchg
sarl
mov
pop
add
add
push
in
mov
push
mov
and
adc
xchg
ljmp
imul
pop
and
sub
mov
hlt
daa
xor
xchg
xor
das
mov
sbb
mov
dec
scas
mov
ror
dec
mov
xchg
add
or
repz
jge
lret
mov
and
cmpb
jbe
in
xor
adc
push
outsb
inc
sbb
xor
out
mov
lret
imul
decb
cld
jge
jo
adc
or
imulb
repz
sbbb
mov
mov
cmpsl
sbb
lret
dec
idivb
or
or
cmp
call
mov
lods
sbb
shll
push
mov
sbb
xchg
dec
es
push
or
and
ds
lock
into
loope
xlat
sbb
jo
dec
jbe
loopne
jo
push
sub
mov
cli
mov
in
cld
xor
add
lods
mov
repnz
adc
dec
or
aam
sub
and
add
aad
cmp
sti
imul
inc
sub
dec
jge
xchg
push
sub
pop
pop
sbb
xchg
push
adc
pop
cmp
sarb
pop
sahf
inc
fmull
jge
jmp
lahf
inc
ret
rolb
jge
push
rorl
mov
add
in
mov
aad
pushf
inc
pusha
xlat
adcl
daa
jmp
or
jg
daa
js
push
aad
cmp
int3
and
call
rolb
or
test
jp
lds
in
mov
push
hlt
testl
ss
xchg
insb
adc
xchg
lcall
insb
out
push
pop
in
es
pop
cld
scas
int
cmpsl
out
cmpsb
xchg
xor
jno
fmuls
jp
ret
mov
jbe
hlt
and
stos
stc
subb
imul
fdivs
in
lea
shll
add
and
mov
xor
adc
and
jecxz
repz
sti
iret
xchg
shrb
sub
xor
cmp
mov
inc
add
sarb
or
jns
jnp
sub
orb
in
out
sub
out
adc
les
cli
push
jae
or
adc
les
in
loope
mov
push
movsb
mov
dec
and
pop
sar
neg
inc
cltd
pop
lret
mov
pop
push
xor
lds
push
pusha
fisttps
rcll
cltd
xor
jge
cmp
popw
adc
push
pop
mov
into
xchg
stos
fucomp
lcall
cmpsl
mov
xchg
test
jmp
mov
fildll
dec
test
clc
mov
ja
jns
iret
sarb
insl
ljmp
mov
stos
imul
adc
nop
inc
dec
xchg
cli
lret
cmp
mov
jg
jo
sti
out
mov
push
lods
mov
mov
movsl
gs
sub
cmpsb
push
pop
ds
loopne
stos
add
dec
aam
rolb
ljmp
xor
push
lds
lret
inc
std
test
pop
mov
leave
jmp
divb
mov
xchg
pushf
or
stc
xlat
adc
add
sub
hlt
adc
scas
sahf
xchg
mov
dec
lahf
mov
stc
movsb
sub
call
fsubs
xchg
int3
loopne
popa
nop
jge
repz
jno
hlt
ret
cli
cmp
inc
gs
sbb
sub
lods
imul
ret
jno
scas
aaa
int3
mov
sbb
mov
adc
loope
mov
shrb
fwait
or
daa
xor
jns
mov
es
sub
xor
mov
and
out
sub
popf
xor
test
mov
call
xor
lret
pop
push
cmc
inc
test
pop
mov
pop
mov
push
insb
inc
push
out
lods
into
adc
cmp
or
mov
pop
into
mov
out
lret
sub
fs
or
xchg
fildll
jp
xor
js
lods
pop
dec
sbb
push
fildll
out
cmp
movsb
in
pop
pop
out
lock
negb
scas
out
jbe
lock
inc
fistl
sub
outsb
dec
in
icebp
cld
fistpl
mov
ja
bswap
sarl
cwtl
mov
jecxz
adc
incl
jle
pop
add
mov
loope
mov
int3
in
and
shll
iret
fwait
xor
xor
scas
lret
inc
inc
nop
inc
dec
daa
icebp
adc
lock
push
lcall
insb
loopne
fnsave
leave
jecxz
sbb
mov
int
dec
in
arpl
xchg
insb
inc
cmp
push
scas
icebp
sub
inc
sti
push
dec
mov
int3
and
nop
push
mov
pop
pop
and
in
cmp
stos
mov
mov
nop
mov
xor
jb
adc
pop
inc
cmp
jp
cmp
add
bound
scas
or
lahf
sbb
cmp
sbb
jl
and
dec
jbe
js
ret
ds
jno
lret
mov
mov
call
lea
mov
mov
addr16
enter
mov
pushf
stos
aad
sbb
pop
xchg
pop
xor
insb
mov
pop
mov
test
in
mov
ds
mov
ss
inc
lahf
pop
sub
xlat
add
push
xor
sahf
dec
frstor
sbb
add
jge
lret
mov
jge
pop
loop
cmpsl
int3
and
les
jl
popf
xchg
fsubl
popa
stos
int
xor
mov
push
mov
mov
cmp
jmp
aam
push
inc
or
cmpsl
daa
mov
mov
mov
jp
mov
dec
lods
jecxz
cwtl
roll
lcall
dec
sub
pusha
cmp
xchg
shlb
mov
push
jl
fwait
arpl
xor
sub
jno
jp
jo
pusha
fildll
jns,pt
adc
cmp
repnz
dec
int
loopne
repz
cmpb
ret
lcall
xor
xchg
scas
add
push
lahf
leave
cmp
lret
and
cltd
xchg
test
xchg
out
or
dec
xor
or
mov
push
pop
imul
sbb
sbb
cld
in
aaa
dec
xchg
push
out
xor
scas
insb
or
stos
cmc
popa
shll
mov
cmp
outsb
sti
stos
inc
xchg
lock
push
icebp
mov
push
and
cmc
xlat
pop
jbe
or
hlt
movsb
sub
dec
mov
test
add
dec
jp
dec
jns
mov
cld
add
shr
rcl
popa
cmc
pushf
xlat
sub
lock
mov
cmp
insl
popf
cltd
pop
movsb
pop
xorl
popa
and
shr
push
out
xor
dec
jnp
adc
out
fwait
rclb
fadds
xchg
jmp
das
pop
cmpsb
mov
test
repnz
mov
push
andl
adcl
mov
push
push
shll
pop
outsb
mov
sbb
loope
shrb
push
je
inc
sbb
and
ss
mov
push
dec
mov
sub
std
std
ss
sub
mov
outsb
aad
mov
and
sub
test
data16
mov
pushf
cmp
aad
cs
cmpsl
movsb
cmp
sbb
ffree
inc
cmp
and
fcoml
ffreep
pop
xor
shll
adc
test
push
popa
cmp
mov
test
sub
mov
xor
sbb
mov
lcall
xor
fisubl
cli
hlt
cmp
dec
mov
shrb
adc
cmp
xchg
sub
push
xor
flds
stos
outsl
dec
push
jo
idiv
lea
adc
ds
cli
inc
fs
imul
and
xor
insl
stc
lods
xchg
cmp
and
inc
call
push
pop
adc
scas
mov
pop
fwait
orb
mov
add
lods
jle
pop
xchg
vpavgb
lods
icebp
mov
jmp
stc
iret
dec
push
loopne
fistps
pop
loopne
outsb
aaa
xchg
cmp
loope
loop
loop
cli
mov
loope
fimull
ds
dec
cld
lds
sti
lea
repz
or
mov
xchg
das
es
mov
lds
ret
cmp
sbb
adc
sub
inc
outsb
fwait
sub
outsb
ss
in
add
adc
cmpsb
loop
sub
sarl
xchg
sbb
enter
rcrl
push
repnz
adc
fisttpl
or
jb
mov
jp
aas
scas
sahf
mov
jb
fstpt
jnp
or
das
or
mov
mov
and
test
std
out
sub
hlt
xchg
out
pushf
pop
test
call
leave
arpl
idiv
cltd
xlat
nop
inc
xor
jae
out
out
xchg
mov
add
xchg
movsl
sbb
or
movsl
mov
and
sbb
sub
or
or
sbb
int3
lds
test
sti
imul
scas
mov
sub
inc
test
fmull
xor
jns
and
rorb
sbb
xor
xor
scas
popf
ret
loopne
jle
push
int3
lahf
sbb
adc
lret
jge
dec
jmp
movsb
fdivs
rorl
xchg
or
jecxz
popf
outsl
pushf
adc
sbb
enter
test
jmp
cmp
sbb
jno
cmpsb
cli
add
or
cmp
cmp
push
pusha
and
pop
popf
repz
xchg
or
ret
mov
lods
mov
scas
sbbb
jne
lds
cs
sbb
pop
fs
push
fldt
in
push
jo
sub
xor
xor
xor
ljmp
cmpsb
jne
jecxz
mov
sarl
inc
add
xlat
scas
shl
repnz
lahf
loope
jecxz
add
test
sub
stos
faddl
cld
and
add
arpl
cmpsb
sbb
mov
adc
mov
mov
les
mov
mov
mov
jo
repnz
cmpsb
xorl
mov
pop
sar
jbe
cmp
xchg
xchg
imul
test
sub
xchg
mov
mov
in
aam
sub
or
pop
loop
clc
or
outsb
popa
mov
adc
lretw
mov
push
shlb
icebp
xchg
imul
test
sub
mov
push
sub
mov
loopne
out
neg
scas
push
iret
sub
sbb
and
fdivl
sub
or
pop
push
repz
xchg
rorb
shr
adc
cld
stos
jge
mov
fnstsw
rclb
push
inc
in
ds
aaa
jp
dec
mov
add
lret
lahf
dec
sbb
pop
or
test
xchg
mov
mov
jne
xchg
dec
sti
nop
arpl
data16
lret
fs
mov
push
fisubl
out
xchg
sub
test
xor
sar
mov
or
rcl
movb
adc
movsl
xchg
daa
scas
push
inc
sbb
enter
int3
sbb
fldt
daa
ret
jge
out
mov
push
sar
sbb
out
mov
jae
std
jp
mov
jg
cmpsl
inc
mov
and
adc
ret
cwtl
imul
or
lret
in
pop
inc
pop
test
lds
mov
lock
xlat
dec
cmp
mov
imul
les
jge
clc
inc
push
cltd
and
mov
js
sub
inc
jae
push
mov
jbe
push
fsubrs
filds
popl
pop
popa
xchg
cmpsl
cmp
jmp
repnz
sub
lret
test
sbb
mov
sub
mov
andb
out
jnp
push
xchg
int3
imul
sbb
inc
int3
aam
push
xchg
bnd
mov
jecxz
bound
or
or
xor
out
push
jmp
lahf
stos
mov
adcl
movsb
jmp
jp
xchg
sbb
push
aam
fneni(8087
das
xchg
stos
out
jno
dec
rcll
pop
rorl
and
push
jno
sub
jle
and
add
fidivrl
pop
inc
rcl
dec
fs
outsb
int
insb
adc
adc
shlb
inc
mov
mov
pushf
test
adc
adc
loop
rol
mov
addl
jmp
sti
sbb
addr16
dec
and
sbb
sub
mov
pusha
clc
mov
inc
cmc
popf
sbb
es
adc
and
cmp
rorl
xchg
push
xchg
call
pusha
dec
ret
call
sub
jl
loope
pop
or
insl
arpl
mov
sub
xchg
cmpl
sub
xor
inc
mov
shlb
sbb
xchg
lea
fadds
sub
xor
cmpsb
mov
xchg
xchg
fidivs
push
sahf
mov
and
sahf
jmp
jecxz
sub
int
outsl
lea
cmpsb
cmpb
jg
test
outsl
xchg
mov
and
mov
sub
stc
xchg
push
ss
cmp
xchg
iret
add
cmp
jecxz
xor
int
add
sub
and
lret
dec
cld
out
lock
outsl
mov
ret
adc
and
adc
jg
lods
and
test
icebp
js
dec
lcall
outsl
cld
cmp
mov
xor
addr16
pop
add
sbb
jge
jle
fsubrl
lret
mov
mov
inc
mov
add
jb
lea
int3
xor
insb
and
fisubl
push
cwtl
into
rorl
rorl
ja
jl
sbb
sub
mov
in
fdivp
jp
fnstenv
insb
cmp
mov
lret
fwait
std
add
testb
ficoml
xchg
inc
out
adc
dec
dec
je
mov
daa
adc
jnp
mov
lret
fs
mov
mull
ss
sbb
out
test
sub
stos
lret
mov
xlat
fbstp
mov
xchg
sub
addr16
arpl
lods
nop
clc
sub
and
leave
mov
into
jp
pop
or
push
lds
xor
adc
add
mov
xor
popf
lahf
cmpsl
dec
mov
jns
xlat
lret
xor
shr
int
mov
and
aad
fstl
jmp
ret
int3
stos
cld
jl
pop
bound
ret
sahf
cmpsl
pop
das
inc
leave
jns
ds
xchg
mov
adc
add
jge
repz
jo
mov
mov
and
sub
in
cmp
dec
shr
fisttpl
cmp
in
and
insb
bound
inc
ss
les
jns
and
cmp
pop
sbb
rclb
rorb
inc
dec
jne
scas
lea
jbe
add
adc
int
cmp
les
in
pop
addr16
or
adc
lds
add
pop
outsl
push
shl
cmp
xchg
mov
not
jae
das
xchg
xor
or
xacquire
push
mov
stc
test
ds
xchg
cmp
inc
or
and
jno
sbb
mov
test
lds
inc
jp
jbe
jne
mov
mov
add
mov
xchg
sub
sub
fyl2xp1
shrl
jo
gs
mov
loop
sbb
std
jge
sbb
js
mov
into
jl
mov
adc
xor
and
jno
pop
mov
popf
inc
xchg
dec
ss
and
cwtl
imul
cltd
push
dec
mov
pop
or
push
or
out
outsb
lcall
mov
add
sbb
in
inc
push
nop
xchg
jae
dec
test
lods
jae
sbb
orl
cmpsb
mov
xchg
dec
cli
movsl
mov
push
mov
pop
imul
dec
dec
sahf
pop
push
lock
mov
mov
adc
adcl
sahf
stos
mov
outsb
popa
cwtl
and
lahf
push
dec
movsb
sbbl
xchg
loope
je
and
mov
rol
cmpsb
sbb
movsb
enter
mov
imul
mov
and
out
mov
test
pop
adc
jle
pop
bound
pop
lahf
in
adc
lcall
dec
jmp
and
sub
jle
in
orb
jb
test
mov
int3
lds
xor
xor
cltd
loope
sub
in
lock
cmp
xchg
xor
xor
mov
xor
inc
sbb
cmc
mov
adc
cmp
into
mov
lcall
lahf
lahf
sub
popf
inc
and
pushf
dec
sbb
imul
adc
cmp
outsb
js
push
push
stc
pop
jecxz
int
ljmp
movsl
jle
fisttpll
xorl
mov
fldenv
cmpsb
into
mov
fsubrl
scas
inc
dec
push
inc
loopne
addr16
daa
jno
mov
pushf
sahf
cmp
mov
adc
pop
cmp
aam
xor
adc
loope
rolb
dec
jmp
stc
pop
stos
jl
idivb
dec
into
pop
fnstcw
pop
aaa
inc
rorl
popa
jle
lret
inc
or
pop
mov
outsb
jae
fwait
loop
jno
mov
cld
icebp
xchg
fs
fmul
mov
call
pop
mov
test
dec
inc
and
roll
or
pusha
inc
subl
push
lcall
imul
mov
mov
xchg
push
jecxz
cmpsl
dec
dec
mov
les
cmp
jns
and
es
out
inc
cmp
push
enter
push
jns
adc
dec
pusha
pop
lods
cli
push
cmpsb
andb
ss
jecxz
cmp
fbld
jo
lds
xchg
das
test
lds
push
pop
xchg
fwait
or
mov
adc
push
pop
pop
insl
pop
stc
sbb
xor
clc
cmc
aas
cmp
sub
sub
loope
add
pop
divb
inc
pop
or
pop
loop
int
inc
add
mov
and
xor
fdivrs
hlt
pushf
cmpl
es
pop
cld
pusha
mov
les
sti
mov
add
dec
in
repnz
mov
stos
or
cmp
dec
mov
rolb
das
cmpsl
push
lods
add
mov
ds
cmp
testl
loopne
lock
pop
push
stos
jle
sbb
js
fisubrs
popa
scas
aam
loopne
in
out
add
stos
clc
cmp
jmp
repnz
mull
mov
mov
cmp
cmp
fidivrs
stos
stos
cmp
add
lahf
lahf
xchg
mov
mov
mov
clc
imul
pushf
lahf
or
xor
xchg
ja
sahf
adc
pop
out
mov
or
in
and
or
sbb
pop
inc
pop
inc
sarl
stos
sub
sbb
scas
xor
aas
test
sbb
mov
and
inc
sub
mov
push
adc
mov
icebp
jne
into
and
mov
pop
inc
addr16
sub
cmp
gs
dec
xchg
inc
push
mov
sub
jbe
filds
mov
sub
pop
les
iret
out
jge
add
out
shlb
aam
pop
jo
fwait
jg
addr16
negl
xor
dec
xchg
pop
aad
jne
xor
mov
xor
add
xor
push
rolb
test
or
jbe
mov
mov
sub
push
testb
mov
aad
or
xchg
lret
add
add
xchg
lea
bound
pop
mov
ja
out
jmp
push
inc
and
inc
repz
xchg
outsl
add
iret
cwtl
push
push
in
pop
mov
in
cmpsl
add
xchg
stos
aad
cmp
movsl
aaa
aas
popf
stos
fisubrs
cmp
xorl
pop
jns
fistpll
push
xchg
sub
mov
dec
mov
push
xchg
mov
std
cmp
leave
pop
mov
sbbb
mov
rorb
rolb
mov
jl
shlb
call
int3
mov
pop
aad
fistps
adc
dec
mov
jb
push
xor
ret
sub
shlb
fists
mov
decl
outsl
sbb
dec
xchg
call
mov
mov
aam
dec
rcrl
jg
sbb
xchg
popa
jb
flds
stos
cmpsl
es
into
out
push
fisttps
jo
insb
bound
into
inc
push
js
sbb
cmp
enter
mov
in
mov
aad
push
mov
iret
sub
loope
lea
xlat
inc
test
int3
jne
sub
mov
jbe
xchg
test
push
sub
sbb
in
mov
iret
and
out
cmpl
add
out
in
push
or
or
mov
mov
lret
push
xor
lcall
into
outsb
lret
das
xor
out
addr16
dec
call
sbb
std
lcall
mov
enter
adc
loope
out
mov
inc
mov
push
mov
adc
pop
les
mov
and
cs
and
lods
mov
mov
rcrl
and
inc
insb
push
sbb
in
fwait
pop
sub
out
loop
outsb
and
mov
push
dec
mov
push
cltd
shl
lahf
pop
mov
lea
bound
in
ds
xchg
pop
pop
mov
fcmove
xchg
std
outsb
inc
jbe
fmull
mov
rolb
xor
test
pop
mov
xchg
jl
es
adc
mov
pop
movsb
arpl
sbb
lea
data16
add
popf
pop
jecxz
repz
loopne
cmp
mov
das
pop
xlat
push
mov
lods
push
add
call
in
movsl
cmp
xlat
jmp
orb
xchg
adcb
sahf
cmpsb
bound
rclb
bound
xor
hlt
roll
push
xor
adc
jp
mov
in
fdivrp
pop
test
cmp
sub
xchg
out
sbb
jae
add
lret
icebp
mov
arpl
test
je
xor
repnz
xor
cmc
and
idiv
mov
ljmp
inc
add
fistpll
scas
mov
ficompl
loop
stos
test
test
inc
dec
insl
clc
push
hlt
popa
jnp
xor
mov
shrl
ss
loop
lock
and
pop
push
loop
lret
into
mov
adc
xor
pop
popa
orb
push
fcomps
push
test
das
fs
sub
sbb
xor
cmp
lea
movsb
roll
das
movsb
inc
mov
loopne
cwtl
into
das
push
loop
adc
push
dec
ss
add
insb
mov
inc
inc
jo
jns
add
jae
fnsave
pop
rcll
or
outsl
sub
imul
inc
xlat
test
mov
out
insb
ds
or
or
lods
rcll
out
orl
xchg
xorb
jmp
dec
push
aas
mov
fxch
mov
add
cmpsl
cmp
and
cmp
aam
push
mov
push
lds
call
mov
lock
pop
inc
jge
outsb
rcrl
mov
mov
movb
daa
ja
and
les
push
inc
mov
dec
enter
mov
subl
lea
and
sbb
lods
mov
sar
add
bound
in
cmp
jecxz
pop
test
mov
adc
xchg
jl
hlt
out
stc
pop
stc
shr
int3
ret
fnstsw
jecxz
xor
or
sbbb
ljmp
xor
inc
xlat
pop
and
or
daa
dec
xor
dec
mov
xor
mov
lret
jno
mov
loopne
sti
ds
mov
test
xor
cli
out
sub
add
dec
mov
inc
cmc
cmpsl
rclb
inc
bound
aad
ret
fisubl
and
jg
sbb
lods
jae
lret
pop
sarb
cmpsl
lea
mov
sahf
clc
dec
in
sbb
cs
bound
das
cmpsl
jg
pop
xchg
sbb
xchg
pop
addb
jnp
test
xor
out
icebp
in
idivl
jo
test
jg
pop
loopne
test
call
ljmp
sub
mov
dec
sub
ret
jmp
stos
mov
std
sbbb
in
andl
adc
out
ds
sub
inc
sbb
sub
cmp
jmp
mov
sbb
mov
dec
dec
lds
mov
sahf
scas
out
cltd
push
jbe
jle
popa
jmp
sbb
jb
xchg
pop
inc
arpl
xchg
mov
adc
int
xchg
icebp
gs
mov
cmpsb
xor
call
cltd
mov
int3
mov
out
cmpsb
or
xchg
mov
inc
int3
int3
mov
and
xchg
pop
pushf
movsb
xor
sbb
inc
movsb
stos
dec
jmp
inc
push
mov
jle
mov
and
pop
push
loop
out
arpl
daa
push
icebp
incb
stos
jp
jmp
xor
and
pusha
bound
cmc
pushf
icebp
jb
mov
movsb
scas
inc
lret
xor
jbe
test
mov
pusha
addr16
sub
push
mov
mov
sar
sbb
inc
int3
fmuls
frstor
and
xlat
pop
lcall
into
xchg
fisubl
add
and
inc
jp
jl
fnstcw
pop
inc
push
js
jb
int
sub
mov
cmp
push
popl
in
loopne
push
or
fmull
cmc
dec
movsl
sub
divb
das
push
pushf
imul
jb
cmp
stos
das
out
js
mov
arpl
int3
pop
cli
xchg
loope
xchg
jl
mov
inc
ret
mov
add
sub
lea
add
adc
orb
andb
mov
cmpl
out
in
adc
int3
lahf
int
ljmp
add
jno
lods
sbb
mov
fs
mov
mov
fistl
rclb
cs
push
and
mov
mov
lret
and
sub
cmp
xor
fst
jnp
lahf
mov
push
mov
arpl
mov
pop
lcall
js
daa
or
movsl
mov
xor
and
adc
imul
add
and
mov
or
je
gs
jmp
scas
mov
shl
pop
xor
cmp
xor
add
pop
jno
arpl
and
pop
ret
cmp
lcall
add
mov
and
insb
out
mov
sub
mov
clc
sbb
scas
sbb
loope
push
scas
pop
jge
xchg
mov
add
xor
mov
dec
out
jae
or
addr16
jle
cli
add
mov
mov
dec
mov
aad
xchg
jmp
iret
xchg
adc
push
imul
scas
add
icebp
lcall
mov
adc
and
fists
outsl
ret
jp
push
js
in
fildll
sub
push
xchg
and
cld
jae
adc
jle
inc
xchg
in
pop
push
shlb
xorl
dec
inc
aam
dec
xchg
xor
pop
add
mov
jo
dec
mov
xchg
xor
xor
popa
cmp
test
add
lods
stos
adc
add
pop
pop
aas
lret
or
sub
sti
or
push
push
mov
cmp
jmp
fiadds
sbb
add
sahf
imul
pop
mov
mov
shr
flds
mov
push
inc
or
loope
sarb
leave
sub
shrb
jno
mov
dec
jo
outsb
subb
iret
imul
ret
mov
shll
inc
push
loopne
in
aas
and
subb
jecxz
cmc
gs
jbe
inc
inc
adc
in
xlat
rdtsc
out
mov
imul
pop
jg
fbstp
mov
sub
addr16
int
pop
gs
xor
daa
mov
xchg
xchg
inc
cmp
inc
daa
dec
mov
and
cmpsb
insl
iret
jmp
imul
decl
shll
pop
enter
and
sub
push
lret
inc
roll
cltd
out
push
mov
nop
dec
repz
mov
push
mov
out
add
sbb
aaa
mov
ljmp
mov
cmp
pop
dec
jb
repnz
add
jecxz
add
jp
sub
and
fcoms
xchg
stc
into
aad
lods
je
mov
sbb
mov
repnz
xor
pop
sub
ret
aaa
inc
lahf
mov
out
inc
sub
arpl
mov
mov
inc
adc
inc
dec
je
mov
rolb
add
dec
inc
and
sbb
dec
mov
cs
sbb
or
lods
fsubrs
xorb
xlat
ret
jb
push
pop
arpl
jmp
jns
stc
pop
adc
mov
divl
xchg
idiv
idiv
lea
xor
lds
dec
push
stos
jle
pushf
mov
push
mov
inc
and
sbb
dec
sub
popa
dec
jae
mov
fldcw
adcl
mov
lock
sbb
xor
mov
dec
test
scas
sub
mov
dec
push
or
mov
outsb
ja
sahf
test
pop
jecxz
jo
lds
pop
mov
push
int
rcll
push
xchg
inc
push
or
imul
rcl
dec
orl
sbb
shlb
xchg
popa
fwait
jbe
xchg
sub
mov
movsb
mov
imul
test
repz
fdivl
mov
aad
hlt
dec
fnstcw
into
sub
pop
test
mov
test
arpl
sahf
rolb
lock
sbb
inc
xor
cmp
adc
loope
inc
enter
xchg
and
iret
cmp
inc
push
popa
into
or
fs
mov
adc
lock
pop
clc
jo
push
addb
ss
push
pop
jmp
and
jl
jl
insb
or
incl
shll
fisttpll
and
jmp
xor
scas
stc
pop
mov
loopne
test
mov
fwait
push
fwait
mov
push
pop
cmpl
jl
std
and
jno
add
mov
cld
lret
inc
sti
stc
pop
cs
mov
push
insb
jp
xchg
movsb
adc
popa
pop
nop
push
repnz
sub
sub
sti
cld
scas
mov
jp
ret
movsl
cli
in
dec
mov
arpl
xchg
mov
mov
lahf
mov
add
pop
adc
push
cltd
lret
jmp
sbb
sbb
pop
repnz
mov
dec
scas
ret
scas
sbb
or
jmp
push
fisubrl
in
loope
mov
inc
push
and
das
xor
push
push
hlt
data16
ss
pop
xor
dec
sbb
ljmp
int3
sahf
xor
xchg
sbb
je
sarb
ljmp
jp
push
xchg
pop
adcl
cmp
pop
pop
test
idivb
mov
lea
pop
jae
les
push
jp
and
leave
scas
cs
mov
xchg
test
pop
push
addb
and
shrb
outsb
inc
test
mov
fidivs
inc
cmp
jns
sbb
stc
out
fwait
clc
enter
enter
add
mov
ss
idivl
ljmp
fnstsw
mov
por
popf
xchg
push
int
pop
jno
cs
lahf
adc
cmpsl
ss
loopne
int3
or
out
mov
aam
fadd
sti
push
shrl
xor
xor
popl
jp
aas
and
xchg
outsb
jo
inc
inc
das
bound
iret
scas
add
or
roll
testl
cs
xchg
push
fisttpll
push
xor
stos
jne
and
aad
push
pop
lahf
xor
sarb
xchg
cmpsb
sbb
lods
std
push
insb
cwtl
xchg
cmpl
pusha
xlat
mov
push
lahf
ljmp
xor
hlt
xchg
jnp
lock
stos
cmp
adc
mov
inc
sbb
stos
jecxz
dec
xchg
subb
and
jns
enter
sub
scas
rcrl
clc
sub
imull
sti
sub
mov
inc
xchg
roll
mov
sub
add
cmpsl
sub
stos
add
test
insb
fadds
popf
cmp
shlb
bound
xor
into
pop
enter
stos
pop
sbb
cmp
pop
outsl
es
add
sbb
ficoms
shll
fildl
xchg
inc
sub
out
push
gs
popf
and
xchg
mov
dec
cmp
cmp
mov
nop
ja
sbb
test
fwait
sti
and
aam
pop
fidivl
scas
inc
add
xchg
xor
movsl
mov
jp
xchg
mov
and
jmp
mov
dec
or
push
movsl
mov
jne
hlt
inc
stos
int3
add
adc
pop
outsl
sbb
xchg
arpl
rol
gs
and
pop
pop
orb
sarl
mov
aam
cli
out
clc
jno
loopne
iret
or
imul
out
mov
shlb
add
insb
in
sbb
cmpsl
icebp
les
out
fs
push
push
jns
das
imul
rcll
cmp
cli
insb
cmp
test
scas
mov
ss
adc
lods
push
adc
dec
pop
cli
mov
dec
movsl
not
jl
cs
and
call
aaa
adc
loop
mov
or
pop
push
sub
jno
popf
gs
xorb
bt
push
lock
pop
cmpsl
addb
ja,pn
repz
jl
mov
cmp
sti
or
pop
mov
fildll
xor
jl
or
leave
popa
dec
inc
movsl
insl
dec
push
push
push
scas
add
add
leave
adc
add
sbb
and
and
inc
xor
jecxz
mov
pop
pop
in
and
jns
and
stos
cmp
ud0
loope
mov
test
call
xchg
fldt
mov
out
ret
lock
mov
scas
fwait
clc
mov
es
addr16
sub
out
aad
mov
mov
movsb
int
adc
jae
dec
jmp
fwait
adc
hlt
lock
adc
pop
dec
pusha
lahf
and
stc
loopne
pushl
pusha
jb
fistl
jb
jg
js
ret
das
adc
cwtl
ja
rcr
fldl
rclb
fsubrl
aas
outsl
in
lock
cmp
sbb
adc
push
shrl
push
cmpsl
rcr
ret
cmp
xor
mov
popa
mov
mov
mov
in
jnp
adc
icebp
leave
push
int
push
rcl
jb
inc
pop
ja
push
pop
adc
adc
daa
clc
orb
int3
jo
addl
cmpsb
push
in
addb
mov
mov
lods
je
mov
mov
outsb
addr16
or
nop
add
stos
pop
and
scas
mov
cld
xchg
daa
imul
pop
xchg
fldt
andps
mov
ret
rolb
jae
jae
sbbb
sub
mov
adc
pushf
aaa
imul
std
les
sub
fsts
fcomi
imul
repnz
iret
fildll
fisttps
xor
idiv
inc
dec
stos
fsts
cmpsb
adc
fwait
inc
in
xchg
addr16
insb
les
and
cwtl
dec
bound
test
pop
lea
test
mov
bound
or
rcll
push
mov
mov
lret
lods
pop
mov
pop
add
dec
jmp
inc
lret
fsubrl
or
mov
and
rcrl
andl
inc
roll
pop
jl
sahf
pushf
pop
push
fnstenv
repz
int
sbb
hlt
data16
orl
movl
les
mov
mov
add
sbb
push
jne
sbb
ja
lods
push
pop
or
jmp
add
mov
in
pop
dec
pushf
push
fcomi
cmpsl
adc
xchg
out
inc
leave
lcall
sub
sbb
xor
pop
ljmp
sbb
insb
jge
pop
add
test
sbb
jg
inc
cs
cmp
cmovbe
stc
add
push
stc
cmp
in
cld
ds
mov
ss
cmp
and
popf
mov
imul
push
leave
das
dec
push
repnz
lods
add
subl
push
sub
imul
aad
push
jne
jecxz
mov
xchg
pop
fnsave
scas
push
pop
pop
aad
xchg
adc
into
jne
push
es
adc
xchg
nop
iret
test
in
fsubl
pop
add
jae
scas
push
xor
addb
sahf
jne
popf
mov
add
clc
lret
cmp
sbb
iret
pop
push
faddl
and
fmuls
in
push
cld
xchg
lods
pop
or
insb
ja
addr16
xor
jl
stos
lock
es
adc
add
sub
add
fildll
stos
push
sub
int
sarl
in
xchg
mov
push
pop
xor
jb
xor
das
nop
ss
cmp
push
sub
xor
lret
int3
add
xchg
mov
js
test
outsb
je
push
daa
rorb
and
xchg
mov
jl
popa
bound
push
loop
testb
adc
jmp
icebp
dec
aam
mov
insl
jecxz,pn
cwtl
inc
and
lods
mov
jbe
sub
xor
addr16
outsl
imul
xor
fiadds
sarb
push
out
clc
mov
mov
sub
jg
shl
sub
sub
and
or
cmp
mov
leave
xchg
mov
notl
pop
mov
push
add
add
push
xchg
mov
movsb
cmp
shr
pusha
mov
mov
jmp
mov
and
sub
addr16
jecxz
inc
mov
push
mov
orl
sub
orl
jp
lods
xchg
adc
pop
scas
aas
jnp
dec
nop
fsts
inc
push
pop
aas
sub
lret
sbb
cmp
jmp
mov
xchg
pop
movsl
adc
xor
fstl
fsts
ja
arpl
iret
mov
arpl
aad
fwait
mov
sti
jbe
fldt
call
sahf
mov
push
mov
aad
fidivrl
inc
inc
mov
jge
push
inc
fdivs
fstpl
inc
jmp
lea
xlat
roll
sub
int3
jno
mov
fnstcw
inc
inc
jg
dec
stc
cmp
jg
pusha
xchg
xchg
xchg
mov
adc
loope
and
scas
repz
mov
mov
sbb
in
cmp
je
xor
fbstp
xor
cwtl
xchg
gs
cmp
xor
hlt
jp
stc
mov
push
pop
repnz
mov
push
xchg
ds
xchg
fwait
pusha
sub
push
testb
popa
loop
pop
repz
adc
jp
mov
xor
cmp
pop
xor
add
xor
mov
ret
inc
orps
scas
push
xor
xchg
test
push
movsl
in
xor
lea
push
adc
sarb
stc
xor
nop
and
in
lcall
pop
cmp
stc
pop
jecxz
aad
mov
iret
inc
add
jo
out
add
lcall
enter
dec
out
test
add
jmp
dec
aas
cmp
or
cs
arpl
inc
movsl
rcr
retw
ljmp
sub
lds
scas
and
fsts
add
jmp
ja
addr16
fwait
mov
sub
mov
mov
mov
sbb
cmp
lods
mov
shl
push
in
mov
popa
cltd
jo
lcall
mov
aas
test
sahf
cwtl
scas
cmpsl
adc
mov
jo
mov
imul
cmpsl
out
jb
add
jge
xor
jno
jmp
mov
xchg
jnp
test
popf
xor
dec
inc
in
add
movsl
cmc
pop
jns
out
and
and
imul
cmp
addr16
or
enter
add
cmp
hlt
das
dec
push
orb
hlt
adc
testl
hlt
sbb
mov
jg
add
popf
aaa
pop
and
nop
aad
jge
sub
sbb
insb
mov
call
das
cmp
fwait
pop
jg
inc
add
mov
or
js
xchg
adc
test
stos
adc
and
es
out
ficoms
mov
or
test
sahf
add
and
in
xchg
and
test
fwait
in
popa
jge
dec
lds
push
data16
adc
mov
inc
hlt
mov
xchg
xchg
int
fistl
shlb
push
test
aaa
into
ja
mov
mov
fs
adc
fwait
stos
lahf
push
inc
scas
pop
cmc
adc
aaa
jl
mov
das
inc
dec
sbb
sub
or
jne
mov
in
in
adc
rclb
and
rcrl
dec
lods
dec
inc
lea
lds
and
jp
hlt
outsl
cld
xchg
push
jl
or
sub
leave
loopne
push
imul
mov
or
push
push
or
movnti
ret
xlat
addl
pusha
ja
sbb
daa
pop
repz
pop
and
pop
rorb
test
dec
mov
xor
mov
xchg
lret
aam
out
stos
sub
clc
in
je
fs
arpl
inc
sahf
mov
mov
and
popa
fimuls
xchg
popl
or
mov
movsb
cmpsb
jbe
xchg
fs
push
je
mov
aam
push
xchg
xchg
rcrb
stos
icebp
xchg
push
and
and
mov
insl
sbb
loope
filds
inc
out
ljmp
jae
bound
xchg
mov
mov
cmc
js
inc
mov
imul
int
ljmp
mov
inc
sub
xor
add
or
add
cmp
stos
stos
fwait
lds
repz
iret
xchg
xchg
sbb
cmp
cmp
and
test
sti
xor
hlt
push
lcall
add
or
or
add
pusha
imul
shl
adc
or
or
xchg
insb
cwtl
mov
pop
jns
xchg
gs
sub
loop
mov
stc
xor
lods
cmc
adc
addr16
xor
xchg
out
out
pop
movsl
dec
add
pop
pop
sbb
push
mov
add
xchg
push
inc
pop
cmp
push
into
mov
push
repnz
add
andl
adc
cmpsl
cs
adcl
das
insl
lods
cli
subl
and
cmp
or
inc
mov
xor
push
push
sbbl
cmp
cwtl
scas
pop
call
xchg
mov
cs
mov
dec
xor
xor
fcoml
dec
mov
inc
mov
out
push
or
mov
jl
sbb
test
test
xor
and
pop
pop
or
popf
clc
inc
stc
std
scas
sbb
push
ljmp
arpl
pushf
mov
mov
or
xchg
in
sub
jle
shll
and
fdivs
movsb
pop
or
sbbl
inc
and
stos
mov
adc
xchg
shrl
les
adc
imul
mov
cli
jb
lods
aad
ret
xor
or
icebp
or
and
and
flds
mov
jns,pn
mov
push
loope
pop
cmp
jmp
sub
andb
inc
sbb
adc
inc
popf
movsl
push
mov
add
imul
das
cmpsl
xor
loop
xchg
and
cli
arpl
cld
pop
pop
cmp
int
mov
mov
dec
les
jp
inc
pop
lods
push
data16
cmc
xor
fs
and
push
stos
pop
scas
jne
es
ss
lods
mov
adc
and
jmp
mov
add
shll
popf
mov
cmp
dec
lcall
push
push
cmp
scas
mov
ds
mov
divps
outsl
push
jo
mov
mov
enter
jnp
or
sahf
repz
in
scas
jmp
mov
mov
adc
rcr
scas
test
popa
mov
dec
aam
dec
sbb
cmc
push
sbb
cwtl
push
cwtl
lret
push
xchg
and
fwait
imul
fsts
pop
orl
stos
je
xor
or
jmp
fmuls
pop
dec
ficomps
xchg
scas
push
inc
lahf
popf
cmc
in
std
iret
xchg
adc
add
push
and
and
mov
dec
in
cmpb
jg
add
dec
aaa
out
xlat
jns
jge
vmovntps
mov
test
pop
mov
jno
push
gs
in
sbb
mov
mov
pop
jl
ljmp
loop
iret
arpl
loope
icebp
fcmovbe
adc
jnp
rclb
lret
jp
dec
dec
add
lret
pop
adc
pop
cmp
mov
idiv
jae
sub
out
int
lret
mov
xchg
fisubs
into
out
ret
inc
xor
dec
sbb
clc
sub
fistps
repnz
jecxz
adc
push
dec
fsts
xchg
sbb
cmp
lret
es
notl
sti
dec
lcall
lods
je
inc
pop
xor
mov
andl
inc
and
sub
int3
sbb
outsl
sbb
cmp
ljmp
dec
lret
fwait
pop
call
cmp
pop
jecxz
push
jl
push
push
xor
and
push
mov
insl
dec
pop
push
mov
cmp
out
mov
adc
ficoml
cltd
mov
push
ret
mov
test
stc
aaa
lods
insl
fimull
or
inc
iret
mov
dec
pop
bound
mov
mov
jb
in
mov
cmp
mov
sbb
push
cwtl
fnstsw
inc
and
jp
jg
imulb
inc
sub
into
mov
xor
mov
xchg
mov
mov
mov
int3
test
sbb
rcrb
mov
int3
mov
mov
sub
cld
xchg
pop
data16
mov
jg
loope
push
aad
rcll
push
jb
negb
jl
lock
pop
sbb
sahf
shll
jnp
pop
fcmovnb
or
push
inc
movsbl
inc
arpl
int3
rcll
nop
stc
mov
pop
push
sub
adc
int
shll
mov
mov
mov
xchg
dec
jb
mov
fidivl
arpl
lcall
fbld
lcall
sbb
xorl
xor
jge
pop
jecxz
andl
shl
sti
jmp
dec
lds
out
sub
or
push
xor
cmp
shrb
pop
mov
in
out
adc
out
adc
and
in
mov
push
fdiv
or
mov
mov
push
or
cmpsb
lds
decb
dec
push
mov
enter
test
stos
repnz
in
loope
mov
dec
out
cmp
leave
sbb
mov
inc
mov
repz
xchg
js,pn
xchg
fmuls
jg
sbb
sbb
aas
ficomps
scas
cmp
fwait
and
decl
adc
push
pop
mov
dec
sarl
cld
cmp
in
jbe
or
xchg
notl
push
xor
outsl
mov
test
scas
pop
dec
mov
out
sarl
sub
mov
xor
xchg
sbb
ljmp
sub
dec
inc
mov
xchg
dec
es
int
sbb
stos
push
int
push
outsb
cmp
stc
bound
fs
cmp
sti
mov
sbb
mov
cmp
adc
jne
pop
push
inc
pop
iret
push
inc
addr16
jle
fwait
push
fwait
add
dec
xchg
lcall
outsl
mov
inc
sbb
jmp
and
xchg
test
dec
cmp
loop
pop
and
cmpb
jbe
test
xchg
pop
aas
jmp
pop
aad
sub
outsb
test
cmp
mulb
add
rolb
imul
je
rorb
pushf
inc
xor
cwtl
das
mov
adc
push
jge
addr16
jbe
std
xor
jp
test
and
test
sub
jecxz
insb
movsb
filds
mov
ljmp
mov
outsl
roll
lea
leave
sarb
sub
roll
loopne
push
shr
mov
mov
gs
lcall
inc
leave
and
mov
mov
xchg
mov
inc
sbb
inc
push
loopne
jg
adc
insl
fimuls
sti
jle
insb
loopne
imul
leave
dec
sbb
mov
add
dec
nop
test
xor
cltd
xor
mov
test
sub
add
sub
pop
je
mov
int
xchg
sub
lock
data16
std
sbb
std
fcomps
test
cmp
ds
pusha
jmp
adc
inc
cmp
cltd
and
fs
pop
jp
xor
mov
mov
mov
mov
adc
and
mov
jo
add
lret
push
xchg
add
inc
pop
mov
js
addl
cltd
inc
adc
lahf
mov
pusha
xor
mov
fisubs
in
sub
into
jle
xchg
mov
or
movsb
sbb
jns
pop
lods
push
js
in
cmc
mov
bound
scas
aaa
mov
add
imul
repz
cmpsl
mov
jle
cli
add
push
test
in
sbbl
mov
in
sbb
mov
adc
sti
mov
addb
xor
or
out
fwait
imul
push
cmp
or
loop
into
stc
lahf
xchg
or
clc
out
stos
push
sub
jle,pt
int3
mov
lods
pop
lret
cld
pop
sub
mov
cwtl
dec
movsb
rol
mov
fs
mov
imull
adcl
ret
js
mov
cli
orb
mov
nop
lfs
xchg
adc
sbb
lds
addr16
fs
popa
push
out
push
aas
hlt
sbb
dec
dec
pop
sub
adc
cwtl
pop
nop
xchg
pop
fisttpll
mov
adc
mov
gs
inc
inc
shr
dec
or
subl
mov
adc
cmp
scas
xor
push
out
xchg
pop
jge
ficompl
iret
jo
jp
and
sti
repz
jmp
mov
pusha
jecxz
dec
gs
cli
push
mov
cli
inc
ljmp
add
pop
dec
xchg
and
mov
push
pop
mov
mov
subps
enter
xor
xchg
daa
repnz
sbb
push
adc
sbb
in
pop
mov
out
dec
arpl
and
jae
dec
pop
jmp
inc
aas
pop
cmpsl
orl
pop
ds
xlat
in
rcrl
iret
or
xchg
jmp
ret
fnstsw
cmp
inc
sbb
mov
cmc
nop
xchg
fwait
movsl
push
int
stos
imul
data16
shll
out
inc
adc
pop
loop
inc
ljmp
pop
lock
negl
in
mov
test
mov
sub
std
cmpsb
dec
jle
aad
repnz
pop
cmp
cmc
inc
cmp
rolb
dec
mov
lea
dec
pushf
in
or
neg
mov
inc
lods
xchg
mov
and
jae
adc
jmp
test
or
inc
js
push
cld
sti
pshufw
stos
inc
mov
stc
pop
mov
iret
xchg
mov
adc
cmp
sbbl
cmp
push
xchg
pop
add
push
icebp
aas
sub
idivl
and
jle
ds
xlat
or
mov
xchg
xor
xchg
xchg
jne
cmpsl
ss
xor
repz
daa
popf
ficompl
imul
movsb
push
enter
pop
mov
add
enter
or
and
sbb
out
aam
xor
adc
mov
dec
sbb
dec
js
nop
add
movsl
xchg
outsl
push
jo
xor
shl
fidivs
adc
stos
fwait
mov
xor
arpl
rolb
or
testl
inc
inc
scas
shrl
cmpsb
clc
inc
mov
cmovb
test
sbbl
cld
cltd
xchg
mov
mov
inc
sub
cmpsl
repz
cld
cwtl
inc
and
mov
fsubs
add
pop
fs
out
lock
push
cmp
jp
jecxz
and
insl
push
add
outsb
cmp
cli
mov
adc
push
aad
push
mov
adc
movsb
repz
imul
mull
cmc
mov
dec
push
in
jnp
in
unpcklps
lcall
les
adc
aam
ret
lods
iret
mov
jns
cmc
push
inc
dec
out
mov
add
xorl
sbb
das
mov
sub
cmp
adc
sti
sub
sti
add
inc
push
pusha
mov
cli
call
jns
inc
fmul
cwtl
jbe
call
xchg
mov
movsb
insl
cmp
cltd
or
inc
and
in
punpckldq
pop
leave
fstl
lcall
out
out
or
scas
sahf
lods
mov
xchg
aad
xor
in
leave
dec
fcmovnbe
movsb
add
inc
js
jge
es
mov
cmp
or
jmp
mov
and
ret
int3
jns
or
jmp
idivl
int3
ret
inc
sub
rcl
and
cltd
dec
nop
and
pushf
jg
lcall
arpl
sub
xor
sbb
add
add
jg
outsl
cs
xor
sbb
xor
mov
pop
test
push
jmp
lds
loope
int
jge
and
sub
mov
add
cmpsb
or
push
ret
sub
dec
or
push
add
lahf
int
xor
add
fs
loope
dec
test
pop
xchg
shrb
icebp
fs
test
loope
push
mov
and
ja
js
dec
and
sbbb
dec
pushf
jmp
imul
xlat
shrb
in
cmc
dec
dec
lds
std
test
arpl
sub
jae
hlt
add
dec
outsl
xchg
cmp
fucom
test
out
orl
inc
mov
pop
aam
out
daa
fadds
xor
jg
ljmp
test
and
aas
cmp
push
mov
or
push
pop
xor
das
fstpt
sbb
mov
sub
adc
mov
addr16
popa
scas
in
push
dec
mov
xchg
loope
notb
std
outsb
adc
add
repz
popf
shll
add
or
push
mov
aas
jge,pt
scas
mov
or
testb
cld
push
movsb
movsl
arpl
stos
sbb
adc
jno
add
jg
push
out
mov
jo
xchg
sub
pop
fimull
test
mov
sub
and
in
push
xor
icebp
push
cli
xor
and
shl
xor
or
xchg
inc
jo
jns
or
jo
enter
ljmp
add
es
dec
sbb
popa
ljmp
mov
push
pusha
daa
out
out
add
xchg
pop
push
movsl
leave
mov
jmp
std
loopne
fdivr
jl
test
xchg
or
ret
cmp
inc
push
sub
mov
or
and
mov
pop
push
mov
sub
ljmp
xor
xor
jge
jl
jb
pop
insl
arpl
or
xchg
mov
sub
inc
mov
out
push
mov
shrb
push
jge
xchg
enter
sha256rnds2
inc
cmp
mov
icebp
push
fwait
ret
jno
les
or
mov
cmpsl
pop
mov
cmp
jmp
sub
mov
fs
push
std
stc
pushf
test
fdivl
mov
sbb
mov
test
sbb
jmp
loopne
mov
mov
sub
in
mov
mov
pop
xor
out
pop
cmp
cmc
mov
in
popf
aam
loope
int
xor
sub
sbb
sub
mov
iret
dec
sbb
push
into
push
repnz
dec
adc
inc
arpl
fistpll
sqrtps
sbb
jo
inc
jmp
jp
cmp
push
add
out
lock
xor
lock
scas
xor
lds
leave
fwait
out
cwtl
ret
xchg
dec
mov
push
pop
adc
insb
pop
aaa
outsb
test
shlb
cmp
xor
aad
inc
cmp
xchg
rorl
add
mov
out
pop
loop
adc
popf
shlb
fcomps
lea
push
pop
cmp
pop
sbb
lods
adc
xor
jle
cli
xor
out
js
mov
lret
imul
mov
aas
adc
xchg
jns
sahf
inc
lods
add
insl
test
lock
xor
dec
insb
mov
sbb
clc
xchg
lock
mov
push
adc
jbe
lcall
pop
dec
xor
iret
xchg
cmp
mov
call
scas
ret
negl
in
push
dec
shrl
add
sbb
xor
imul
jmp
mov
in
adc
int3
shlb
or
jnp
push
inc
pop
in
insb
jo
pop
pop
fcoml
adc
lds
rolb
push
lds
divl
jge,pn
stos
xchg
cmp
and
pop
xor
aam
push
mov
lret
mov
mov
repnz
hlt
push
cmp
xchg
incl
ss
loope
stos
jno
push
test
les
push
orl
jmp
push
adc
xchg
push
out
scas
pop
sahf
mov
ja
outsl
xor
andb
and
adc
daa
in
xor
or
push
movl
jg
jge
add
lds
test
xchg
mov
push
add
andb
ss
mov
iret
loope
jp
xor
jbe
out
jns
and
xchg
out
enter
sbb
pushf
push
pop
jnp
popf
jns
fimuls
stc
out
ss
dec
push
sub
ljmp
in
repz
add
dec
xchg
stc
cld
bound
inc
push
fwait
out
jno
mov
cmp
fiaddl
add
xor
jle
insl
mov
dec
fisubrs
ljmp
mov
sbb
jne
mov
xor
mov
fistpll
mov
add
pop
aas
iret
dec
lahf
jmp
cli
mov
ror
jle
sub
lahf
pop
repnz
lcall
loop
out
lret
mov
or
int3
ret
fdivrp
mov
pop
js
cmc
sarl
data16
ss
ret
mov
push
inc
mov
inc
or
mov
repz
inc
loop
cmc
dec
or
clc
jo
addb
popf
addl
mov
sbb
xchg
xchg
mov
add
in
imul
cmp
mov
inc
aaa
out
and
sbb
jns
xchg
sbb
mov
inc
sub
xor
mov
aad
insl
idivb
stc
call
sti
popf
adc
xchg
xor
add
mov
adc
pop
push
push
dec
into
in
lret
movb
sbb
clc
push
adc
sbb
in
mov
repz
push
es
ret
je
lcall
xor
out
add
push
cwtl
daa
loope
jbe
mov
nop
or
cmp
lahf
add
outsl
mov
adc
cmp
adc
fcmovne
sub
pop
ss
pop
nop
fadd
push
out
and
and
icebp
shl
ljmp
test
cmp
inc
aaa
ficompl
xlat
push
repz
mov
in
or
out
sub
sub
or
movsl
cmpl
out
push
aas
add
push
mov
lret
cld
pop
imul
cmpsl
dec
xchg
add
test
nop
fstpt
push
jbe
out
rcr
mov
adc
adc
pushf
out
out
sub
scas
mov
xchg
adc
jne
daa
mov
adc
xchg
cmc
sub
cmpsl
inc
repz
lret
sahf
ljmp
pop
add
mov
push
mov
xor
or
or
mov
jnp
movsl
aam
dec
push
dec
rolb
xchg
negl
cmp
jmp
jnp
xchg
dec
mov
mov
in
pop
enter
paddsb
fmull
jnp
out
xor
add
out
push
outsl
jl
push
or
pop
sarl
in
outsb
xchg
and
pushf
and
test
xchg
pop
rorb
lret
mov
pop
int3
hlt
aad
daa
jle
sarl
pushf
xchg
inc
mov
rcr
or
add
icebp
add
jmp
cli
cs
mov
fadds
lea
shll
sub
icebp
or
push
daa
cs
or
notrack
jle
adc
pop
dec
addr16
jbe
push
test
andl
scas
inc
call
arpl
out
das
inc
cmp
aad
imul
jno
jno
test
cmp
rclb
mov
pop
sbb
fptan
pushf
jge
icebp
jne
lds
jmp
movups
faddl
mov
cmp
insb
loope
jne
pop
push
push
insb
push
out
add
pop
add
jge
out
inc
mov
mov
and
sti
in
mov
push
jge
mov
push
mov
jns
push
out
mov
mov
cmp
sahf
test
cltd
or
inc
je
sbb
xchg
or
out
aaa
out
fistl
ljmp
inc
mov
mov
popf
adc
stc
mov
pop
push
mov
cmp
cld
or
pop
clc
add
pop
f2xm1
push
xor
inc
loopne
je
mov
fs
bswap
or
jge
ljmp
das
push
pop
in
mov
xchg
cld
jo
inc
nop
aam
xor
pop
inc
mov
inc
icebp
imul
ret
xlat
and
mov
and
xchg
lret
dec
stc
jbe
and
ret
lret
leave
and
adc
aam
out
aas
pop
jno
out
cmp
clc
hlt
mov
leave
xchg
pushf
sub
cmp
adc
push
or
int3
ljmp
lret
mov
sbb
testb
sahf
pusha
sarl
cld
fucomp
pop
sub
std
aam
in
xchg
aaa
jge
roll
das
push
push
inc
aaa
and
icebp
pusha
add
adc
or
or
stos
js
push
push
adc
sub
in
jbe
and
pushf
insb
push
addl
push
cltd
fwait
mov
push
arpl
adc
pop
push
sti
xor
lods
aad
popa
lds
xchg
cli
inc
xchg
mov
repnz
push
je
mov
pop
test
mov
and
sub
loopne
icebp
orl
movsb
ret
call
xchg
fdivrs
shlb
rclb
cmp
loop
dec
inc
movsb
sahf
jg
dec
clc
in
push
inc
xor
mov
jecxz
scas
iret
jnp
mov
push
mov
rclb
push
cs
pop
cld
repz
loopne
stc
or
sub
push
push
in
mov
daa
ja
mov
aam
pmulhw
or
push
lods
dec
mov
mov
mov
pop
or
aam
das
imull
addr16
leave
jb
sarl
xlat
shlb
andl
fwait
push
mov
cmpsb
pop
adc
dec
inc
xor
xor
pop
call
je
ja
call
stos
mov
hlt
jmp
adc
imull
adc
fistl
mov
js
les
mov
mov
mov
push
ljmp
sarb
rcrl
cld
push
inc
add
sbb
mov
jl
mov
mov
rorl
cli
lcall
clc
stos
enter
movsl
addr16
test
pop
stos
xlat
ret
mov
aas
outsb
dec
loopne
inc
repz
jge
fidivrl
and
repz
push
jnp
dec
into
jle
cmp
fnsave
popf
mov
push
sub
insl
adc
cld
cmp
in
adc
pop
jo
inc
inc
ljmp
test
pushf
dec
scas
inc
dec
icebp
jecxz
jl
lods
in
lea
xchg
push
stc
lock
lret
js
cs
or
xor
or
and
mov
mov
sub
mov
mov
sub
mov
in
pop
mov
es
jo
or
sti
adc
push
inc
shl
sbb
xor
mov
adc
test
rcrl
iret
or
movsl
xchg
adc
fadds
out
data16
jb
adc
cmp
xor
mov
mov
xor
xchg
pusha
add
ret
ja
inc
push
inc
adc
push
ficompl
scas
pop
sbb
loop
jg
mov
xchg
xchg
pop
test
dec
nop
jo
inc
adc
lock
and
and
push
iret
push
in
fstp
lea
std
xchg
aam
mov
insl
jle
in
scas
add
inc
loop
cmp
mov
test
cmp
imul
sbb
cmpsl
pop
jnp
insl
arpl
scas
jle
and
pop
sub
xchg
mov
adc
xor
aas
repz
outsl
repnz
popf
inc
popf
jae
shll
movsb
int3
lods
fwait
cmp
mov
jle
push
ljmp
lods
xlat
pop
sarl
pop
mov
sbb
xor
fcom
mov
cmpsl
dec
lahf
inc
mov
push
sbb
add
inc
adc
aaa
mov
adc
sahf
pop
icebp
outsl
ja
fdiv
das
ja
insl
adc
sub
icebp
push
aam
and
repnz
cmpsb
or
push
shll
sbb
in
ds
cmp
mov
cmpsl
fwait
and
lock
lahf
xor
rolb
out
sbb
and
push
pushf
ja
popf
fildll
stos
imul
cs
arpl
test
push
cmp
xchg
rcr
and
lods
lods
lods
call
daa
sbb
das
xor
inc
outsl
sub
pop
lahf
dec
gs
stc
and
mov
xchg
punpcklbw
jp
and
dec
fbld
cmp
mov
movq
std
pop
xor
inc
fsts
bound
or
cli
js
mov
int
in
shl
test
pop
cmp
out
ffreep
frstor
xor
fs
inc
jle
cli
pop
and
lret
daa
dec
out
xor
mov
loopne
movsb
rcll
mov
add
ljmp
jne
vpmadcswd
subl
and
lahf
scas
xchg
aam
xlat
inc
push
addr16
or
das
movsl
xor
sahf
aaa
cmp
shrl
xchg
cmp
cmp
sub
shr
lods
faddp
sbb
or
mov
pusha
lock
ficoms
in
dec
pushf
xor
adc
push
fidivrl
push
sub
pop
lea
mov
sbb
movsb
and
xchg
repnz
inc
cwtl
in
test
addr16
push
leave
fstpl
jns
push
out
jle
dec
sbb
add
cmp
flds
loopne
icebp
cmpsb
pop
mov
out
add
in
sbb
cmpsl
sub
loop
xchg
hlt
and
movsl
xor
cwtl
adc
aam
mov
push
cli
sub
xor
mov
mov
icebp
rcrb
insl
dec
mov
enter
out
clc
sub
or
cmp
cmp
scas
mov
cmc
data16
lods
cmp
jl
dec
js
fwait
pop
mov
dec
adc
dec
push
adc
stc
xor
xor
out
pusha
ret
stc
or
mov
and
sub
dec
rorb
or
daa
rclb
or
push
jmp
pop
jbe
pop
dec
movsb
adc
sar
lcall
int3
and
jae
fldcw
loope
sub
shlb
test
inc
jmp
subl
das
pop
cli
sbb
cmp
push
jl
stos
mov
enter
ds
notl
icebp
nop
sbb
mov
in
jg
iretw
loope
sub
fidivrl
popa
repz
xlat
push
sbb
testl
inc
ds
stos
mov
cmpsl
or
jns
insl
cmp
xchg
add
icebp
mov
ljmp
pop
mov
mov
insb
enter
fld
fs
xchg
sarl
pop
xchg
push
mov
cmc
and
in
mov
pop
int
fists
sub
shl
stos
loopne
lock
pop
mov
es
std
sarl
mov
cwtl
push
repz
cmpsb
test
inc
lods
push
push
ss
loopne
push
jmp
jb
lcall
pop
jp
and
jae
ret
cwtl
fxch
and
or
loope
add
sbb
pop
xchg
inc
pusha
inc
xor
adcl
adc
mov
js
add
xor
push
push
loope
roll
sub
or
jle
pop
pop
and
lock
mov
pop
mov
sbb
dec
into
mov
inc
sbb
lret
daa
in
add
pop
stos
cltd
mov
in
jno
lock
pop
sub
mov
mov
aad
scas
adc
ds
or
mov
push
mov
pushf
jbe
ret
imull
jg
mov
lock
js
pop
cmpsb
cmpsl
sub
cmpsb
push
ds
mov
mov
imul
or
int
pavgw
or
xchg
and
in
mov
sbb
stc
mov
outsb
test
imul
or
mov
enter
imul
xor
and
push
or
and
inc
fisttpl
subb
mov
or
and
push
xor
insl
add
inc
repz
fwait
sbb
xchg
iret
or
test
orb
icebp
rol
pop
data16
ret
sbbl
insl
ljmp
dec
addr16
and
add
aaa
jae
inc
jnp
test
xchg
xor
push
dec
sbbl
xchg
dec
test
xor
cmpb
push
sub
mov
add
add
jl
icebp
mov
stc
sub
push
pop
clc
xchg
inc
leave
push
mov
sbb
mov
jne
shrl
bound
in
push
add
lods
xor
mov
mov
les
je
pop
insb
lea
rcl
stos
leave
pop
out
mov
inc
jns
jmp
fsubs
loope
push
dec
xor
push
subb
into
mov
jbe
inc
pop
sub
ljmp
ds
push
stos
sbb
jbe
mov
jnp
pop
sub
iret
or
mov
ss
add
rorl
loopne
push
insl
lea
std
or
and
jge
call
sbb
fcompl
xchg
cmc
jp
fstpt
mov
fisttpl
xchg
pop
stos
out
dec
mov
push
pop
push
outsl
addr16
mov
mov
cli
das
ret
mov
mov
jmp
rcrl
popf
in
je
hlt
inc
jne
stos
into
jge
icebp
push
dec
icebp
jge
ds
ror
fwait
mov
mov
jl
sbb
aam
jb
aam
mov
scas
popf
pop
icebp
fistl
aam
push
not
out
push
in
xchg
test
adc
cld
stc
mov
lret
nop
push
jo
jae
cmp
mov
outsb
lock
sbb
mov
xchg
push
insl
cmpb
mov
pop
mov
cwtl
lods
pop
mov
push
mov
rcll
inc
push
arpl
push
sub
insb
dec
fisttpl
cwtl
mov
pop
pop
push
and
mov
sbb
cmp
mov
mov
push
pop
das
sub
loop
ja
lret
incl
pushf
mov
out
mov
sbb
jle
mov
jp
sub
push
test
jne
cmc
pop
mov
call
out
jnp
sub
lcall
pop
lret
stos
fstps
js
mov
jne
inc
test
sbb
add
push
mov
popf
push
repz
sub
mov
hlt
jbe
pop
mov
les
femms
out
add
sahf
push
push
add
jecxz
inc
loopne
popf
mov
jge
movsl
or
dec
mov
push
repz
in
lds
fnstcw
pop
xchg
jns
leave
cmpb
nop
out
mov
jle
sbb
pop
cmp
imul
sbbb
xlat
movsb
jmp
cmpsl
data16
shll
mov
dec
dec
or
ret
sbb
mov
stos
sbb
mov
add
into
pop
fdivl
and
test
fiadds
movsb
jl
xchg
and
push
sub
rorb
adcl
mov
dec
mov
xchg
arpl
inc
mov
jo
cmc
lods
jbe
mov
ds
sub
shrl
cmp
cs
or
push
xor
xor
xor
int3
jp
jmp
sbb
inc
leave
xlat
andb
sbb
add
sub
pop
inc
mov
stos
sbb
sbb
iret
decb
jl
leave
pop
cmpsb
dec
cli
test
jmp
xor
js
lret
lods
xchg
sbb
mov
inc
fmulp
mov
arpl
lds
ja
fdivs
cmp
out
lcall
mov
ss
fisubrl
add
repnz
sbb
dec
add
mov
clc
xchg
out
enter
shlb
xchg
cmp
and
push
adc
sbb
fs
pop
lahf
loope
mov
mov
or
dec
mov
pop
stos
fdivrs
mov
idivb
xor
mov
out
imul
jns
test
popf
lahf
inc
dec
add
adc
in
stc
xchg
inc
cmp
or
sbb
add
xor
sbb
fildl
dec
jg
std
or
adc
jns
subb
mov
cltd
lods
adc
mov
std
add
mov
repz
in
les
mov
imul
in
jb
loop
sub
xor
mov
int
mov
je
adc
dec
cmp
in
scas
sbb
cmpsb
int3
out
adc
jns
insl
fdiv
pop
or
and
stos
iret
xor
stc
add
outsb
shlb
dec
scas
roll
cmp
out
scas
xchg
cmpsl
and
jno
xchg
mov
andb
aad
shlb
lret
test
xor
xor
sub
insl
cltd
push
add
ret
mov
pop
stos
ss
jbe
pop
scas
sub
les
es
inc
adc
lea
sbb
inc
push
ljmp
les
mov
dec
jne
nop
arpl
push
cltd
arpl
inc
xchg
xchg
leave
rcl
lret
xor
jmp
cmpsb
push
loopne
adc
aam
push
push
or
dec
xorb
into
test
insl
pop
outsb
pusha
xor
xchg
push
or
pop
insb
mov
push
push
cli
mov
arpl
lcall
sub
pop
dec
shl
jbe
and
dec
push
mov
push
or
scas
insl
add
jp
mov
mov
mov
push
mov
sbb
and
mov
out
cmp
sub
mov
inc
int
gs
add
add
insb
xchg
fwait
dec
ret
imul
add
bound
xchg
sub
call
mov
jge
mov
push
jb
push
push
push
dec
xlat
mov
aaa
outsb
lods
jg
out
or
dec
xor
add
cmc
mov
mov
add
xor
adc
or
and
pop
jnp
repz
mov
scas
mov
arpl
push
or
lods
sbb
jnp
or
shrl
imul
cmpsl
iret
andl
sub
jb
xor
pop
or
gs
ja
cmpsb
cmc
arpl
or
popf
daa
cmp
jmp
jle
pusha
add
lcall
aam
lret
pop
lods
mov
pop
push
out
mov
jmp
daa
xchg
es
pop
jecxz
mov
mov
mov
aas
in
lock
insl
jecxz
xadd
addr16
fsts
stos
std
cmp
push
cli
and
push
shrl
das
ja
add
sbbl
xchg
fmulp
mov
mov
data16
xor
jne
outsb
mov
add
cmp
adc
pop
xor
movsb
cld
mov
in
arpl
pusha
xchg
lretw
pop
leave
xor
cmp
hlt
andb
or
dec
aad
mov
push
std
in
xor
sbb
outsl
jecxz
xchg
je
pop
orl
adc
icebp
dec
jle
outsl
test
pop
inc
mov
add
popf
push
cwtl
or
outsb
jecxz
inc
sub
lahf
xor
xor
push
sub
mov
loope
inc
daa
push
pop
jp
loopne
lcall
adcl
or
xor
add
imul
and
cmp
dec
adc
push
xchg
mov
fs
or
les
fldl
cmp
rorl
inc
lea
jb
jle
lcall
es
push
aam
lcall
sbb
je
dec
sbb
dec
xor
ljmp
je
push
imul
cmpsl
ret
sub
hlt
cmp
loopne
pop
push
bnd
jno
xor
arpl
sub
inc
in
xchg
pop
adc
add
xchg
les
dec
push
outsl
lods
fidivs
adc
pop
shlb
xor
adc
nop
push
mov
fwait
lahf
xchg
push
fisubl
push
int3
adc
in
xchg
jl
cmpl
test
xchg
cmp
cld
adc
mov
xchg
pop
jmp
out
divb
out
lahf
leave
rorl
fs
sbb
stos
fnstenv
xchg
fwait
xlat
sbb
and
or
pop
mov
xchg
push
inc
mov
cli
imull
fwait
add
cs
test
jl
sub
ss
movsb
ret
add
movsl
fsts
movsb
jne
push
je
aam
sub
push
pop
je
or
es
jp
inc
insl
mov
addr16
les
cli
jl
lret
hlt
imul
ret
mov
outsb
cmp
sub
add
popa
cmpsl
sbb
sbb
and
cmpsb
ljmp
jbe
rorl
mov
sub
in
jbe
andb
inc
and
cmp
fdivr
fwait
rorl
add
loopne
xchg
popa
or
xor
mov
fnstenv
into
jb
xlat
addr16
out
xor
movsb
dec
jg
mov
pop
icebp
pop
jl
lods
loop
adc
mov
mov
or
cmp
shl
add
add
fs
pop
lret
in
int3
fdivrs
hlt
cmp
stos
rclb
sub
jmp
sar
lods
into
jge
sub
push
xchg
jmp
or
repnz
sub
mov
xor
adc
sub
xor
shrl
jge
push
xor
xchg
push
xorb
or
fs
adc
sub
adc
pop
mov
adc
cmp
jle
fs
sahf
add
in
rdmsr
loope
ds
mov
lock
pop
popf
mov
mov
lret
pop
bound
test
les
test
icebp
sub
dec
leave
or
sub
push
pusha
add
pop
pushf
pop
lds
fcompl
test
enter
shlb
mov
jne
mov
aaa
push
mov
mov
push
mov
cmp
sti
and
das
call
mov
hlt
test
push
pop
mov
mov
ds
imul
or
aas
and
dec
ss
clc
out
imul
lret
test
push
add
pop
es
jmp
sbbl
or
mov
icebp
jnp
mov
mov
jb
pop
push
ds
stc
dec
mov
les
push
and
cmp
rcrb
push
scas
lods
push
nop
push
scas
in
or
push
fdivs
xchg
shrl
pop
xor
cmp
inc
imul
push
daa
or
adc
mov
fbstp
pop
pop
icebp
sbb
popa
fwait
and
push
push
xor
adc
inc
fimull
sub
outsl
fcoms
cmp
cwtl
mov
pushf
push
js
xor
icebp
cmp
lcall
jl
dec
and
or
std
ret
punpckhdq
mov
pop
sub
dec
jno
pop
addr16
cmpsb
cwtl
cmp
dec
xor
pop
ja
push
pop
dec
xlat
adcb
test
xchg
or
sub
sbb
and
test
lret
sbb
rorb
in
jb
pushf
daa
ljmp
pop
push
lret
inc
bound
jl
inc
adc
mov
xchg
push
mov
dec
stc
xchg
sbb
cmp
xlat
push
inc
addr16
pop
xor
in
pop
loop
cmp
adc
push
add
adc
repnz
cmc
adc
iret
cmpsl
cmp
sbb
or
dec
push
jno
adc
mov
sbb
push
sub
dec
mov
ja
stc
rcr
push
aad
shr
xchg
sahf
push
sbb
sarb
mov
mov
cmp
stc
mov
mov
mov
cs
movsl
dec
push
pop
xchg
outsb
lods
test
lahf
adcl
inc
sub
out
mov
aaa
adc
push
rep
push
int
aad
inc
imul
push
repz
dec
sbb
lcall
push
lcall
outsb
pop
and
push
cld
adc
cmpl
popf
sbb
out
hlt
jne
hlt
lds
or
cmpsb
cltd
in
in
popa
xchg
cmc
mov
in
jp
dec
or
lahf
mov
push
imul
jle
and
add
cmp
mov
xchg
loopne
or
mov
cmpsb
into
jle
or
pop
push
mov
cmc
movl
pop
jge
fistpll
xchg
push
pop
ret
cli
insb
or
subb
js
or
and
lods
in
fsub
dec
jp
mov
popa
pop
inc
mov
jbe
inc
cld
mov
shlb
lahf
sti
popa
roll
jnp
xlat
jecxz
sbb
xor
ret
rcrl
cwtl
movsb
aas
xchg
mov
pop
or
gs
sarb
lahf
add
cmp
cmp
xchg
ss
fisttps
imul
xlat
mov
sub
shll
xor
push
lret
dec
dec
jmp
xor
fwait
or
mov
ja
push
cmpsl
cmc
jno
dec
xchg
pop
mov
cmpsb
push
adc
lret
cmp
or
nopl
push
push
xlat
dec
sarb
movl
enter
jle
mov
pop
clc
adc
mov
adc
adc
pop
inc
test
aas
clc
adc
addb
mov
lret
cwtl
jecxz,pn
pop
mov
arpl
out
lahf
or
stc
int3
xchg
aaa
inc
call
ja
xlat
loope
or
sub
mov
mov
mov
in
loopne
or
inc
fwait
add
loopne
and
sbbb
lds
jo
testb
ds
push
adc
jns
lret
sti
gs
sar
clc
out
mov
aam
mov
mov
xlat
lods
push
push
push
or
outsl
jno
inc
adc
pop
push
cmpsb
xchg
sahf
pusha
mov
add
add
xlat
testl
push
push
aad
mov
adc
and
add
xchg
and
je
or
mov
cmp
xchg
adc
jle
mov
test
pop
jg
ja
lods
or
rclb
jmp
and
les
je
mov
mov
scas
js
pop
pop
dec
mov
adc
ret
popa
es
ficomps
call
push
push
xor
std
in
jbe
out
lahf
xlat
mov
or
into
or
insl
and
fwait
mov
sbb
pusha
popa
out
cmpl
cmp
jbe
jb
pmuludq
jbe
push
popa
mov
xor
test
scas
push
outsb
pop
sarb
push
push
jl
loope
xor
imul
xchg
hlt
or
sti
xor
add
decb
test
rcr
adc
push
outsl
int
minps
sub
in
jp
lods
inc
mov
jmp
sti
ds
xlat
scas
dec
testb
xlat
dec
push
sbb
lds
imul
inc
test
mov
cld
in
inc
push
stos
ss
js
or
repnz
mov
insb
roll
loop
outsl
jp
pop
data16
je
add
jl
out
mov
xchg
jp
mov
stc
orb
adc
adc
aad
outsb
xor
jne
pop
fwait
push
xlat
mov
sub
jmpw
add
pop
lret
scas
imul
dec
loopne
mov
sbb
push
xor
add
push
and
sub
add
mov
mov
jp
in
in
cmp
test
out
mov
and
in
sub
jle
mov
jne
mov
and
in
movsb
xchg
mov
outsl
stos
out
inc
jae
sbb
xor
gs
ficoms
add
mov
js
push
mov
ficomps
inc
mov
fwait
add
repz
insl
or
inc
fdivl
mov
into
lret
sub
inc
pop
inc
push
cmp
dec
xchg
idivl
xorb
ss
and
cmpsl
sbb
in
xlat
test
js
lods
test
addr16
jbe
or
imul
out
adc
cs
mov
add
push
push
ss
mov
andb
test
repz
push
pop
aas
xchg
sahf
mov
fcompl
ror
outsb
test
scas
into
jbe
loop
mov
loop
dec
iret
sbb
jno
fmul
testl
ficompl
ret
daa
fs
dec
lods
je
sar
sbb
xchg
xchg
shrl
inc
fmuls
mov
mov
hlt
mov
ss
scas
insb
add
ss
push
dec
pop
push
push
and
mov
xchg
mov
adc
mov
gs
mov
xor
xchg
and
sub
nop
jnp
mov
aas
mov
jge
sub
cmp
pop
mov
scas
jae
pop
imul
cmp
mov
inc
je
pusha
ret
pusha
dec
jne
push
imul
leave
push
lea
rcrb
ror
pop
in
push
insl
inc
mov
into
ret
jo
es
rcrl
xchg
and
lcall
pop
pop
mov
cwtl
ret
mov
popf
push
inc
adc
cmp
fidivl
test
stos
out
pop
mov
divb
lods
cmp
pop
xchg
xor
inc
jns
dec
mov
enter
stc
push
pushf
mov
cmpsb
pusha
pop
mov
cwtl
cmp
stos
push
das
cmp
mov
lahf
dec
sub
aas
pushf
leave
xchg
sub
mov
dec
add
daa
ficoms
popa
pop
xchg
dec
movl
cmp
loopne
enter
fcomps
jg
and
xchg
andb
in
fmulp
push
cli
lods
mov
push
xor
js
dec
add
sti
jle
xchg
push
push
rclb
das
push
movsb
or
dec
mov
sbbb
sbb
push
jb
icebp
scas
hlt
add
jns
icebp
xchg
mov
mov
movsb
sub
xor
xchg
pop
cmp
sub
fadd
test
jg
outsl
pop
sub
push
mov
xchg
push
cs
fdivr
pop
pop
mov
mov
test
inc
and
int
rolb
nop
jbe
movsl
test
push
in
jo
out
xchg
cmp
jnp
addr16
inc
sub
mov
pop
and
in
aas
fwait
add
stc
popf
pop
loopne
stc
ja
pop
sti
lahf
fsubrs
inc
out
pushf
push
push
sbb
and
jo
in
jae
movsb
addl
fs
inc
nop
nop
mov
test
in
sub
rcrb
scas
mov
negl
sub
pushf
mov
sub
add
jecxz
mov
dec
push
cld
mov
or
pop
mov
or
mov
pop
push
push
movsb
jns
pop
mov
or
icebp
emms
fbld
rorb
dec
jge
inc
mov
lock
mov
xor
mov
mov
cmp
lods
lds
mov
jne
jge
adc
adc
cmp
fcoms
adc
icebp
movsb
lcall
cli
jne
loop
cwtl
cmp
pop
xchg
jle
test
arpl
adc
inc
sbb
xchg
pop
mov
ja
xchg
cld
mov
out
ss
and
adc
push
cs
lcall
mov
add
andl
add
xchg
fisubs
mov
adc
cmpsb
imul
or
cmp
hlt
sbb
fldt
xorb
cwtl
xor
aas
cmp
jmp
stos
inc
loopne
in
mov
mov
aam
outsl
sahf
das
dec
icebp
repz
cmpsl
loop
or
addr16
push
or
call
or
mov
adc
xchg
test
orb
aaa
loop
dec
or
adc
mov
push
inc
mov
enter
popl
add
arpl
rclb
je
cli
pushf
es
popa
mov
pop
stos
pop
mov
movsl
gs
push
in
sub
dec
scas
jge
mov
dec
lods
subb
cmp
xchg
mov
lcall
xchg
sbb
xor
xchg
xchg
into
xchg
icebp
push
mov
inc
iret
lea
rcrb
push
outsb
mov
pop
xchg
inc
in
pop
stos
pop
mov
sub
test
mov
xchg
test
dec
loope
shlb
arpl
movsb
movups
and
fwait
dec
clc
mov
lret
mov
mov
mov
xchg
push
hlt
and
cli
xor
push
bound
popf
movsl
inc
daa
add
push
inc
das
jb
scas
fldl
adc
cmc
add
pavgw
jbe
aad
arpl
xchg
pusha
out
dec
out
ret
test
jnp
ss
aad
push
popf
pop
mov
sbb
jae
outsl
cltd
pop
movb
adc
into
lods
lret
pusha
das
sbb
mov
and
cmp
sub
xchg
dec
push
or
cmp
adcl
pop
and
jo
movsl
fiaddl
pop
push
clc
push
js
lret
xor
and
sub
add
cmpsl
sub
xchg
nop
popa
lods
inc
adc
pusha
and
and
push
bound
mov
or
mov
jl
jle
orb
xchg
leave
jbe
scas
jge
add
xchg
jno
dec
into
or
sbb
sbb
sub
imul
popa
pusha
jo
jecxz
mov
js
push
sub
push
pop
cmpb
js
inc
pop
cmp
adc
test
mov
pop
loop
adc
shrl
iret
mov
jp
mov
xlat
ret
push
mov
movsb
cli
movsl
fimuls
adc
mov
out
inc
fstl
add
or
rorb
nop
or
xor
push
or
pop
xor
addr16
lcall
inc
adc
ds
scas
mov
call
pop
hlt
cmpsl
leave
sub
sbb
fucomp
sahf
dec
mov
mov
mov
xchg
and
loopne
lret
divb
cld
out
cli
dec
popa
out
mov
bound
rclb
cmp
jle
mov
sub
xchg
aas
int
or
xchg
mov
mov
dec
lret
xchg
test
xchg
cmp
cwtl
xor
pop
pop
mov
and
call
je
ja
aam
jns
jl
add
loope
inc
or
cli
push
cmpsl
cmp
out
jecxz
or
sub
arpl
stos
sub
int
mov
adc
std
dec
imul
ficoms
ss
stos
sbb
push
repz
jo
lods
lret
pop
adc
inc
jge
push
repz
xchg
adc
xchg
enter
or
out
aad
in
push
fcmovnb
or
or
sahf
fmul
enter
cmp
push
add
lret
fsubrs
enter
pushf
xchg
sub
js
ds
inc
push
pop
aas
cs
sub
sbb
sbb
mov
jle
mull
mov
mov
push
stos
sbb
jmp
mov
ret
insb
addb
mov
and
jp
orb
iret
dec
push
dec
popf
sbb
inc
imul
jg
lea
jmp
jg
ret
adc
push
push
jae
jle
pop
call
cmp
jae
nop
sub
je
idivb
jae
mov
cmp
lcall
insb
sub
cmpsb
imul
push
mov
ds
push
sub
and
mov
fnstcw
mov
fsubs
xchg
cmp
enter
adc
push
xchg
lds
xchg
cmp
int3
inc
xlat
sti
mov
xor
pop
xor
or
fdivrl
add
outsl
pinsrw
adc
js
dec
sub
and
xorl
jp
into
xchg
dec
mov
push
into
and
pop
or
mov
cs
stc
sub
cltd
imul
pusha
popa
gs
jmp
jno
adc
xor
or
jge
push
and
mov
testl
jae
sbb
aad
ficoms
xor
mov
lret
orb
add
adc
ja
and
stos
lds
les
repnz
mov
in
je
jb
pop
in
not
sbb
cmp
movsl
out
mov
ror
push
jmp
fcomps
mov
mov
inc
ss
cmp
jo
faddp
xor
stos
push
push
cli
inc
iret
sbb
sub
sbb
out
and
mov
xor
int
add
int
mov
iret
push
and
sub
xchg
lcall
sub
lcall
loopne
mov
jb
frstor
ret
outsl
out
inc
jns
ljmp
sbb
repnz
xlat
push
pop
xchg
mov
pop
mov
jo
jp
idivb
jb
xchg
ffreep
cltd
xlat
push
aaa
aam
mov
rcll
dec
add
dec
outsb
sbb
faddp
mov
shlb
jb
fldt
outsb
test
mov
mov
jmp
lock
in
insb
int3
mov
fidivl
fdivrp
xchg
into
inc
cmpsl
push
das
arpl
jecxz
es
sbb
popa
les
je
xchg
lods
pop
push
cwtl
negb
aas
adc
cmp
push
push
mov
outsb
xor
xchg
pop
pop
rcll
ret
and
shll
nop
cs
lret
aas
mov
repz
or
mov
popf
fdivl
sub
in
imul
call
sbb
dec
mov
fs
in
test
push
xchg
insl
imul
in
dec
arpl
jp
sbb
stc
jbe
jp
push
and
lds
jg
inc
leave
pop
out
pop
scas
push
cmp
add
sarb
aam
rcr
cmp
mov
inc
pop
arpl
int3
pop
movl
adc
cli
popa
scas
mov
js
imul
dec
mov
into
xchg
iret
into
pushf
inc
pushf
jnp
test
sub
pop
pop
lret
popf
sti
js
add
inc
into
pop
xchg
pop
cmp
mov
es
popl
repz
fcomps
icebp
inc
test
cmp
add
adc
and
addr16
xchg
cmp
jmp
mov
or
fnstenv
into
lea
xor
je
insb
lret
icebp
mov
into
fisubs
mov
imul
outsl
cmp
call
adc
inc
mov
imul
cld
out
lods
lods
mov
xor
adc
cmp
push
sbb
ds
push
fisubrs
roll
fldt
inc
mov
stc
or
mov
add
nop
push
pusha
xchg
adc
mov
aas
mov
pop
cmpsl
add
fstp
lahf
cli
into
repnz
fmull
xchg
bound
mov
push
rcrb
mov
lds
std
enter
sbb
in
inc
cmpsl
add
jne
xchg
and
cmc
scas
iret
or
pop
fistl
lret
mov
dec
push
xchg
enter
aad
leave
dec
fbld
jg
xor
inc
push
add
sti
adc
sub
adc
xchg
sub
ficoms
adc
in
add
test
int
mov
test
insl
cmp
and
fcmovne
jg
cmp
xchg
sbb
cmp
ja
sub
mov
and
push
and
repnz
mov
dec
pop
fidivl
and
mov
cmp
mov
pop
xchg
xchg
ds
mov
jbe
shrl
inc
sbb
mov
or
out
jecxz
pop
cmp
jo
sti
pop
cmc
test
push
cmpsb
sub
xor
fcomps
in
xor
xchg
stc
in
ret
sysexit
ret
cmpsl
outsl
and
and
out
sbb
push
sub
push
es
scas
inc
rol
xor
arpl
xchg
adc
aam
dec
ret
sbb
jne
cld
xor
jl
xlat
aaa
inc
adc
test
stos
outsl
mov
or
push
add
push
and
cwtl
push
adc
xchg
sub
dec
mov
out
sti
push
fisubl
pusha
outsl
mov
mov
sub
adc
outsb
insb
push
jl
jmp
test
mov
push
pop
dec
int
adc
lcall
lea
jge
jg
and
popa
mov
jmp
pop
sbb
jnp
push
fnstcw
aaa
fbstp
sub
mov
cmp
cmp
inc
imul
dec
and
inc
out
repz
or
notl
dec
and
push
pusha
cltd
pop
mov
or
dec
mov
in
push
movzbl
xchg
or
stos
mov
or
and
mov
aaa
outsl
mov
jl
mov
sahf
mov
and
or
ret
mov
clc
xlat
mov
pop
outsb
mov
push
bound
push
sar
adc
fcom
and
outsb
popa
cltd
xchg
cmp
or
jmp
imul
dec
rcr
mov
cs
pop
xor
adc
add
mov
into
aam
lock
mov
aaa
mov
icebp
adc
stos
mov
in
mov
lahf
adc
pop
pop
jne
xor
ss
icebp
cmp
inc
push
fists
ds
adc
inc
hlt
push
test
lock
ret
fcmovnu
add
sbb
adc
mov
pop
lock
or
leave
int3
mov
and
imul
fsubr
es
jnp
aam
ja
cmpsl
sub
add
stos
mov
push
cmp
xchg
shrl
jecxz
test
inc
ret
ret
mull
loop
mov
push
adc
call
jne
int3
mov
test
pop
cmp
mov
xor
sub
fwait
sbb
call
lock
xchg
sub
test
sub
push
lcall
insb
imul
push
dec
lea
aaa
xchg
adc
fiaddl
push
push
mov
jns
jns
lods
and
push
das
push
mov
fcomps
dec
push
sbbb
mov
jnp
rcl
test
fsubs
xor
shlb
mov
aam
and
mov
jnp
sub
pop
cmp
mov
mov
xlat
aad
data16
sub
mov
faddl
jb
xor
xchg
pop
adcb
mov
inc
add
fsubrs
jmp
mov
in
sub
fwait
stos
insl
in
call
lods
mov
fdivrs
cld
cltd
pop
shll
cmp
mov
dec
add
mov
pop
push
in
test
push
loope
fcoml
sub
mov
fs
jl
movsl
gs
pop
ja
pop
std
adc
hlt
inc
inc
mov
cmp
imul
fidivl
inc
add
mov
ljmp
mov
leave
daa
sarl
sbb
sarb
lock
xchg
jns
mov
inc
in
or
xchg
dec
sbb
add
sbb
mov
jns
lahf
sbb
cmc
adc
les
lds
insl
jge
dec
mov
dec
in
imul
cli
lret
jecxz
leave
and
lret
jle
adcb
mov
mov
das
dec
push
jno
xor
push
cmp
mov
in
repnz
or
fdivrl
adc
les
int3
push
negl
popa
in
mov
push
fwait
rorl
popa
rcrl
lahf
sub
cmpsl
lds
sti
jo
push
imul
jle
mov
xchg
sti
add
sti
add
icebp
inc
sarb
ds
and
lret
popf
daa
scas
mov
test
ljmp
ret
xor
les
stos
mov
test
add
movsl
fsubs
pushf
insl
je
add
push
cmp
icebp
popf
cltd
scas
lods
inc
push
in
mov
cmpb
jb
or
mov
in
jns
leave
or
movd
arpl
push
cmp
cmp
push
shrb
lods
xchg
jg
xchg
mov
test
stc
lret
jo
jns
add
imul
xchg
dec
inc
cld
push
arpl
mov
mov
movsb
xor
xchg
inc
gs
cltd
ss
orl
outsb
addr16
js
sbb
jp
clc
cmpsb
add
scas
jb
repnz
les
cltd
cwtl
jnp
test
in
ss
orl
mov
mov
xor
xchg
jle
adc
out
sub
sbbb
out
lahf
in
lock
or
mov
adc
xor
fcmovnbe
arpl
mov
add
loop
mov
loopne
mov
fistps
cld
jg
jnp
xor
inc
jns
rolb
xor
sub
xor
stos
pop
mov
repnz
ret
les
cmp
cmp
sub
outsb
pop
rcrb
sub
push
stos
lahf
mov
lock
adc
cmp
add
cwtl
nop
jl
stos
mov
inc
pop
or
xor
dec
xor
ret
dec
lahf
push
xchg
mov
push
fucomip
daa
xchg
lods
adc
lea
es
divb
inc
xor
mov
cmpsl
xchg
mov
enter
filds
call
scas
mov
inc
sub
cmp
dec
pop
cmp
inc
mov
push
or
sub
jae
movsl
lcall
dec
leave
outsb
rorb
xchg
movsl
sarb
movsb
out
inc
cmpsb
popf
mov
int3
ss
in
add
inc
dec
test
ss
add
mov
insb
clc
cmp
test
cld
jp
xchg
sub
lcall
aas
imul
jnp
movsl
out
inc
add
adc
outsb
or
test
mov
int3
dec
mov
filds
jle
xor
fcmove
mov
call
pop
sub
aas
rcrl
xchg
subb
add
loope
pop
pop
or
sbb
daa
jo
scas
es
sbbl
int
lahf
inc
mov
sub
movl
pextrw
push
je
mov
pusha
push
add
mov
dec
call
dec
cmp
rorl
movsb
imul
jge
push
fidivrs
adc
cwtl
das
jnp
call
and
bound
pop
xor
mov
or
lods
adc
imull
push
adc
or
jecxz
xor
stos
movsb
ss
add
mov
mov
xchg
push
pop
ss
stos
inc
sbb
jb
jae
ficomps
jmp
movsb
sub
ret
sbb
sub
jge
cmp
ret
jle
add
pop
lahf
and
xchg
and
loop
loope
sub
imul
in
movlps
jge
cltd
or
fsubl
cltd
decl
mov
cld
ret
mov
sub
xor
stc
decl
fwait
cwtl
fwait
pusha
xchg
cli
insb
stos
mov
popf
cs
add
out
movsb
js
inc
mov
push
jg
jg
comiss
in
clc
inc
cmpsl
jmp
xchg
dec
inc
xchg
cmp
stc
xor
enter
repnz
cwtl
mov
inc
xor
data16
test
loopne
xor
mov
clc
repnz
lock
dec
icebp
out
mov
stos
adc
enter
insb
xor
shl
gs
mov
sbb
and
mov
lahf
adc
movsb
ror
or
push
imul
dec
bound
push
sti
sbb
punpcklwd
xor
movsl
xor
mov
sub
neg
int3
popfw
mov
fmul
mov
jnp
push
sbb
test
inc
mov
or
lods
and
push
adc
jnp
xchg
bound
add
enter
fmull
add
dec
sbb
ljmp
cmovae
jp
adc
dec
mov
sarb
pop
push
leave
xchg
mov
jae
push
and
inc
mov
add
lret
cmpsl
dec
hlt
je
pop
fs
jp
pop
push
push
out
xorl
mov
scas
sbb
mov
push
xlat
and
xchg
jecxz
outsl
pusha
cltd
sub
xchg
int
and
cmp
out
lds
bound
movsb
pop
or
cmp
outsl
pushf
cwtl
loop
push
mov
xchg
adc
adc
iret
mov
dec
das
scas
sbb
sub
cltd
or
aas
jo
and
xchg
cli
sbb
fmul
stos
ds
cli
jmp
or
adc
push
sbb
adc
mov
dec
cmp
cmp
cwtl
inc
jle
je
ret
inc
adc
mov
inc
testl
add
xor
scas
sbb
insl
icebp
and
xlat
mov
insl
mov
mov
cmp
add
ja
dec
sbb
int3
das
xor
mov
and
push
pop
pop
xchg
mov
mov
push
lcall
sbb
mov
aam
es
pop
push
xor
cmpsb
out
insl
ds
sub
dec
arpl
pusha
mov
cmpsl
inc
cli
lret
movsb
dec
cmp
outsl
xor
pop
fsubrl
lock
dec
push
test
out
pop
movsl
out
sub
mov
pop
sub
pop
int
loop
mov
leave
jae
rcrb
or
sub
xchg
push
stos
push
sub
pop
sbb
mov
cmp
aas
insb
lret
popf
dec
xchg
cmpl
cmp
sub
fisubrs
jle
adc
in
sub
add
and
jl
gs
es
and
or
jno
out
scas
jae
xor
aaa
dec
adc
lods
adc
lret
sbb
dec
sbb
cs
inc
pop
scas
mov
sbb
mov
sub
mov
dec
mov
fwait
push
adc
imul
mov
dec
bound
lods
adc
sub
xor
shrb
lret
sub
jb
cli
jl
mov
add
cwtl
mov
jae
inc
popa
dec
popa
fisubs
fsubrs
pushf
jle
pop
jnp
into
lret
clc
sbb
xor
xor
iret
pop
insb
jle
ffreep
mov
jae
and
or
xlat
jle
pop
pop
fwait
adc
cmp
jl
dec
sbb
out
or
sub
jo
dec
push
and
mov
hlt
insb
mov
pop
cmp
in
arpl
ret
std
jns
cmp
jp
or
jns
je
test
inc
and
into
out
xchg
scas
mov
fwait
dec
ljmp
loopne
ror
cmpsb
mov
popw
pop
or
rcll
sub
pop
call
das
daa
imul
or
faddl
lret
mov
popl
bound
out
aam
repz
and
dec
pusha
xor
xlat
test
or
jno
dec
inc
inc
sub
sub
push
xor
add
adc
int3
pushf
dec
adc
in
mov
sub
cli
mov
bound
push
imul
push
inc
xchg
and
sahf
add
mov
ret
dec
cmp
push
gs
xchg
iret
pop
cs
lds
sti
dec
adc
aam
pop
stos
in
jne
adc
data16
sub
fdivrl
clc
adc
ret
sbb
add
inc
arpl
fstps
aas
fmull
push
shll
jl
xchg
add
xchg
dec
lret
mov
mov
test
xchg
sub
xchg
and
and
sub
int3
pop
xorl
jge
popw
jmp
stc
sub
push
mov
ljmp
cli
add
push
xchg
loope
jl
aad
inc
aam
inc
mov
repz
xchg
sbb
jno
stos
movsb
pusha
out
test
ret
btr
pop
mov
inc
outsl
sbb
add
xchg
lret
scas
fisttpll
in
pop
popf
push
adc
insb
jge
and
dec
mov
dec
mov
mov
xor
pop
je
or
imul
movsb
adcl
hlt
xchg
lcall
mov
sahf
or
ja
push
cmp
pusha
xlat
and
aam
imul
lods
or
dec
je
in
cmpsl
mov
inc
mov
imul
out
leave
rolb
pop
stos
daa
imul
pusha
jge
cli
push
jmp
pop
loopne
cwtl
lahf
cmp
pop
hlt
subb
cmpsb
fwait
jle
jno
js
xchg
shll
xor
and
cmc
pusha
stc
shrb
xlat
dec
insl
xchg
ja
sti
inc
scas
push
xor
lea
leave
in
add
or
cmc
iret
mov
mov
ret
test
popa
cmp
adc
xchg
sti
add
lea
sbb
mov
stos
pop
lods
sub
cmp
push
test
sbb
cmp
mov
inc
mov
adc
filds
mov
cmpsb
stc
mov
hlt
dec
cmp
adc
aaa
insl
ljmp
sub
fldt
scas
insb
push
inc
loop
push
xor
mov
cmp
mov
jge
les
dec
ss
or
push
dec
xlat
add
dec
popf
push
orl
cmp
shl
es
outsb
subl
fstl
icebp
clc
jecxz
lahf
cmc
ss
mov
aad
lret
sbb
pop
add
or
fnstenv
add
pushf
loop
cwtl
xchg
ret
mov
xchg
sub
pushf
mov
aam
cmp
pop
rcrl
xor
sub
xor
popf
rcll
loope
imul
sbb
aam
xor
mov
nop
xchg
lods
mov
stos
xchg
lods
push
xchg
add
or
mov
mov
fldenv
dec
push
fnstenv
pop
rorl
push
mov
cld
inc
movsb
insb
pop
dec
loop
xchg
pop
adc
scas
cmp
inc
mov
rolb
and
fsub
fs
sbbl
insb
imul
int
in
jg
mov
aas
int3
call
adc
loop
push
repnz
gs
and
outsb
clc
push
sub
mov
sub
sub
jno
aas
dec
sbb
loope
mov
mov
jg
or
pop
pop
enter
and
sub
mov
sbb
inc
pop
outsl
and
shrb
mov
sti
push
aas
rol
roll
mov
mov
pusha
loopne
pop
cltd
test
pop
sbb
adc
adc
mov
sahf
push
cmpsb
cmpsb
shr
out
iret
inc
add
inc
cmp
inc
inc
lcall
adc
cld
sbb
fs
jp
outsb
pop
lahf
cltd
rcr
lds
dec
cs
test
je
dec
insb
inc
add
jae
insb
or
push
xchg
mov
icebp
add
dec
out
imul
push
mov
inc
cmpsl
ja
fld
push
aad
lahf
pop
aad
push
dec
mov
stos
and
les
dec
nop
fs
insb
push
xor
outsl
test
lahf
mov
sub
out
sub
mov
pop
aad
ds
cwtl
je
pop
and
mov
aaa
mov
dec
enter
inc
cwtl
out
xchg
adc
inc
adc
mov
xor
xchg
repz
jg
dec
hlt
loope
das
inc
in
subb
mov
cwtl
shlb
ficompl
cwtl
ss
mov
mov
sahf
test
push
mov
mov
int
mov
sub
xchg
sbb
pop
icebp
cmp
inc
or
adc
dec
fstpt
dec
clc
out
sub
cmp
pop
inc
jae
jp
in
sbb
cwtl
xlat
in
xlat
scas
outsb
mov
inc
hlt
cmp
mov
adc
out
mov
in
sub
add
or
push
or
arpl
mov
mov
iret
in
insl
loopne
push
aad
cmp
xor
xchg
mov
xchg
xchg
ljmp
jge
jbe
std
shll
into
out
cld
je
aad
push
loopne
cltd
jnp
int
and
sub
cli
stos
inc
imul
idivb
out
mov
orl
xchg
mov
xchg
sub
lcall
or
dec
jmp
aad
pop
inc
xor
outsb
ds
dec
das
fs
dec
adc
push
mov
addr16
lea
add
mov
jmp
pop
cmp
and
dec
xor
call
nop
stos
cltd
xor
sub
mov
mov
lret
mov
or
inc
xchg
adc
mov
dec
xor
and
jae
jg
push
aad
jns
call
jo
jle
pop
divl
xor
frstor
dec
xchg
test
sub
push
inc
mov
mov
in
sbb
sbb
add
inc
dec
subl
dec
cmpsb
popa
ljmp
add
ss
jo
sbb
into
mov
sbb
pop
cltd
lahf
and
or
sub
xor
test
cmc
or
rcl
popf
pop
pop
cmp
xchg
bound
outsl
enter
xchg
loop
in
bswap
inc
imul
jae
js
sub
nop
add
imul
dec
ror
aaa
rolb
stc
cwtl
cltd
aaa
aaa
jne
stc
bound
ds
out
cltd
flds
jecxz
mov
sub
aad
in
or
daa
dec
scas
movsb
jge
lock
data16
mov
xchg
xchg
pop
add
xchg
sbb
in
fbstp
xchg
movsb
gs
dec
mov
adc
jno
movb
inc
gs
sbb
add
lock
inc
jmp
shrl
cmpl
in
stos
adc
fcmovu
cmp
push
stc
jne
push
insl
push
add
hlt
arpl
ret
pop
mov
stos
sub
jecxz
roll
mov
jle
xchg
mov
orb
popf
cmp
jge
mov
push
movsl
jge
inc
aam
pop
jb
dec
adc
and
mov
cmp
jmp
inc
rolb
mov
xchg
inc
mov
cltd
add
icebp
mov
imull
out
mov
xor
ja
mov
lea
push
mov
rcr
sbb
and
jl
push
mov
pusha
out
fildll
aaa
bound
je
lock
add
sti
sub
js
cmc
inc
hlt
mov
sbb
xchg
ds
xlat
in
xor
cmp
sbb
lds
int3
stos
lea
iret
lret
popa
and
add
imul
ja
xorb
mov
in
dec
int
mov
scas
loopne
cli
adc
js
bound
push
negl
xlat
cli
popa
push
out
scas
pop
cli
and
hlt
mov
jecxz
hlt
mov
cmp
scas
inc
cmp
js
cld
sub
sub
adc
mov
jno
std
movsb
mov
pushf
jl
add
mov
popa
cmp
xchg
in
pop
xchg
test
push
fbld
adc
push
cmc
ds
in
xchg
call
mov
mov
icebp
movsb
push
sub
dec
mov
popa
popa
jbe
movsl
lret
xchg
repnz
enter
xorl
test
sub
loopne
mov
aad
aad
fidivl
std
pop
mov
mov
nop
push
mov
pushf
test
lock
push
jbe
add
push
jmp
jo
xlat
loopne
lahf
lret
mov
repz
lock
stos
adc
jge
sbb
cltd
test
inc
cli
cld
push
pop
add
lds
and
or
fadd
xchg
fdivs
pop
push
jecxz
hlt
sub
inc
lahf
adc
js
cmp
rcll
les
scas
add
xchg
cmpsb
sub
mov
sbb
loopne
inc
ljmp
cld
stos
pop
xorb
in
adc
mov
int3
jmp
inc
dec
mov
inc
loope
shrl
shl
mov
shlb
sahf
cmpsl
jl
pop
mov
push
data16
sbb
ficoms
insl
out
popa
pop
in
jae
mov
or
mov
nop
aaa
jns
sbb
push
lea
mov
jae
xlat
mov
pop
sbb
xor
ss
sub
jo
mov
loope
mov
pop
cmp
xchg
movsb
imul
leave
test
lods
xchg
dec
inc
ds
shrb
ret
repnz
xor
dec
rorl
xchg
jecxz
xor
sbb
icebp
xor
push
push
das
jns
loope
call
sti
and
dec
pushl
xor
sub
rorb
bound
inc
xor
xchg
mov
sbb
push
cs
insb
and
lret
in
or
outsb
xchg
gs
ret
xor
ror
mov
scas
rcll
xchg
clc
test
mov
es
shll
pop
dec
in
cmc
test
mov
pop
cmpsl
int3
lcall
push
xor
fisubrl
pop
mov
sbb
iret
pop
push
repnz
mov
int3
sub
dec
add
mov
mov
pop
and
push
scas
push
add
mov
push
xchg
ret
cli
adc
mov
jbe
add
stc
fstpt
dec
into
sti
lea
movsl
popa
jge
mov
mov
pushf
jno
aas
aas
mov
sub
push
xchg
test
incb
andb
push
inc
call
sub
icebp
ret
insb
pop
pop
cli
pop
mov
mov
pop
pop
fwait
rorb
test
sub
pushf
dec
das
es
add
hlt
fistps
push
pop
movsl
pop
inc
pop
add
out
push
stos
cmp
les
sub
lock
sbbl
mov
cmp
mov
push
in
fiadds
cmp
mov
xchg
add
pop
test
lea
cltd
add
mov
mov
movsl
mov
stos
mov
stc
test
xor
jmp
xchg
lods
test
push
dec
lcall
xchg
pop
out
mov
push
xor
and
and
jp
ret
xchg
leave
aam
inc
mov
add
test
push
out
cli
js
push
pop
inc
mov
mov
pop
adc
mov
push
mov
inc
sub
stc
in
gs
std
mov
mov
cmp
cmp
fnstsw
mov
xchg
cltd
dec
pop
iret
daa
dec
push
aas
jnp
adc
push
fldt
sti
leave
cmc
call
mov
movsl
divl
shrb
jo
andl
xor
xor
mov
push
xor
sub
xchg
jb
dec
hlt
mov
xchg
jb
inc
inc
jae
dec
loopne
into
popa
enter
ret
dec
sahf
ljmp
fbld
aaa
icebp
stos
mov
pop
or
inc
mov
mov
dec
mov
push
or
scas
cs
aas
push
cmc
pop
das
fstps
sub
push
inc
cmpsb
dec
and
mov
mov
ficoml
or
rolb
sub
xor
pushf
int
gs
stos
and
add
mov
jle
jecxz
add
out
sbb
scas
add
xchg
xor
dec
mov
add
xor
mov
add
jno
dec
sub
imul
test
jl
push
loopne
movb
arpl
fstps
in
subl
mov
dec
in
sbb
loop
pushf
inc
jno
pop
or
loopne
mov
or
xchg
lods
mov
jae
pop
cmp
js
aaa
inc
ret
ret
cmp
aam
mov
fistps
and
and
and
repnz
repnz
inc
mov
imul
mov
xchg
aad
adc
inc
cmpsb
fldcw
int3
jnp
mov
in
push
icebp
and
lods
or
dec
jg
mov
mov
in
pop
in
divb
loopne
cmc
lods
mov
inc
mov
pop
push
out
adc
push
insl
in
subl
xor
bound
cmp
mov
out
ret
push
bound
xchg
test
ja
mov
cmp
pop
inc
and
xor
aad
ret
cwtl
or
mov
mov
push
adc
add
incl
jl
push
and
add
mov
outsb
cmpsl
jb
pop
fcmove
sbb
int3
iret
add
xlat
cltd
shl
dec
push
xor
insl
imul
loop
ljmp
cli
je
or
push
mov
ds
inc
push
enter
shlb
jg,pt
divb
insb
mov
pop
scas
jmp
inc
sbb
jg
jmp
inc
fisubs
cltd
cltd
in
sbb
call
jge
mov
and
insl
int3
add
stos
add
gs
pop
xchg
jbe
cmpsb
popf
mov
mov
xlat
cmp
cmp
lcall
aas
push
jl
pop
xorl
sub
leave
repz
sbb
push
cmc
sub
iret
push
divb
jmp
dec
ficoml
and
sub
scas
into
fnstenv
xchg
jp
push
pushf
jns
cmpl
jo
jo
in
xor
es
jg
add
dec
sub
mov
xchg
mov
mov
out
push
fwait
sbb
out
mov
jp
dec
cmp
fdivs
mov
adc
rcll
jle
subb
jb
jle
in
cmpsb
orl
ret
loope
cmp
push
xor
out
and
repnz
xor
adc
or
idivl
movsb
sbb
or
jle
cltd
sbb
lret
rorb
daa
imul
mov
loope
adc
cltd
jp
clc
int3
int
nop
xchg
pop
popf
push
mov
xchg
push
adc
jbe
adc
jg
fwait
shll
call
pop
push
jb
xchg
outsl
ljmp
test
stos
pop
push
xchg
pop
into
les
movsl
mov
jg
cmpl
mov
mov
cmpsb
ss
mov
pop
enter
ds
inc
movsl
arpl
out
imul
sbb
add
mov
jae
jo
xchg
mov
xlat
int
adcl
xchg
je
mov
iret
lods
sub
repz
loopne
decl
hlt
push
xchg
cmp
add
inc
movsl
add
adc
and
pop
sahf
ror
xor
xchg
dec
xchg
dec
int3
insb
ret
push
dec
adc
xchg
mov
test
jmp
push
lods
stc
push
stos
or
shrb
or
test
inc
cmp
mov
pop
rorl
push
sbb
sbb
pushf
jbe
das
repnz
sti
adc
hlt
push
pop
pop
sbbl
jmp
scas
test
dec
jne
jmp
es
jg
push
insb
add
icebp
mov
loope
mov
xchg
adc
mov
fistpll
fs
mov
xchg
inc
cld
mov
jmp
pmaddwd
add
xor
ret
movsb
inc
and
inc
in
mull
xchg
jns
or
or
pusha
jb
push
addr16
ss
aad
fiadds
mov
or
into
pop
push
mov
mov
nop
push
cltd
in
dec
ret
cltd
dec
repz
je
and
rorb
enter
inc
xor
flds
shlb
bound
test
in
push
lods
dec
ret
cmp
mov
subb
push
test
lds
inc
aad
cmp
fadd
out
bound
xchg
xor
cld
pop
mov
loopne
xor
jl
cli
mull
fists
scas
sbb
mov
test
mov
int
adc
enter
les
pop
popf
es
out
div
ds
and
mov
xchg
cmp
movsb
mov
bound
dec
sub
add
jne
pop
dec
dec
cmpsl
stos
out
rclb
sbb
sub
lods
push
xor
leave
pop
push
cld
ljmp
jp
xchg
movnti
sbb
and
ss
test
inc
sbb
or
inc
negl
movsl
xchg
inc
xchg
leave
push
inc
xor
fs
xchg
jns
mov
pop
movsb
cmpsb
in
mov
xchg
cltd
fdivs
clc
call
jmp
int
push
dec
test
mulb
sar
inc
inc
sub
mov
push
cmp
int3
test
dec
bound
xchg
or
dec
or
aaa
mov
in
imul
loop
mov
xor
mov
mov
repz
mov
mov
subb
ljmp
mov
sahf
push
pop
and
andb
jecxz
jmp
cmp
and
jb
jecxz
sbb
into
rcrb
or
pop
subb
mov
std
and
mov
lods
adc
push
es
into
dec
bound
push
jnp
cmp
xchg
cltd
inc
xchg
or
inc
xor
ds
or
inc
add
call
loope
pusha
sub
push
cs
enter
adc
jne
xchg
fwait
movsl
mov
nop
out
sub
inc
gs
cmpsb
pop
stos
jle
cltd
imul
dec
xor
pop
pop
jne
add
push
frstor
dec
jmp
rorl
enter
fiadds
dec
pop
orb
subl
test
jno
sbb
mov
mov
fiadds
sbb
mov
sbb
cli
int
jmp
cmp
outsl
mov
adc
icebp
negb
xor
out
dec
cmp
adc
mov
roll
push
stc
dec
adc
lcall
fcmovb
popa
xor
mov
dec
sub
int
adc
xchg
mov
out
fucomi
fwait
shr
dec
add
iret
cmpsb
pop
inc
mov
mov
cmpsl
mov
cmp
and
or
jbe
out
pop
and
xchg
and
je
loop
aaa
or
jno
nop
clc
insb
mov
xchg
cmp
hlt
incl
mov
mov
icebp
arpl
add
xor
repz
mov
xor
cmp
leave
je
xor
and
movsl
fwait
sbb
shlb
dec
in
arpl
fsincos
lea
or
gs
cltd
mov
lcall
push
push
cmpb
xlat
popf
dec
stc
es
inc
mov
test
mov
push
push
mov
mov
xor
and
push
add
insl
adc
mov
imul
xchg
orb
test
sbb
inc
fcmovu
or
add
pop
dec
data16
stc
test
mov
loop
mov
xor
cmp
lds
idivb
xor
xlat
sub
xchg
mov
leave
jne
mov
dec
imul
xchg
cmpb
sub
and
cmpsl
push
lahf
arpl
imul
push
mov
lcall
sti
daa
adc
test
cmp
cmpl
push
xchg
or
cmp
test
cmpsb
push
or
pop
fiaddl
fldenv
call
clc
fmuls
pop
pop
test
dec
mov
ds
jnp
fisubl
pop
mov
cmpsb
das
pop
mov
dec
mov
inc
xchg
sbb
test
xor
fidivl
jle
push
movsb
call
aaa
ficompl
aaa
loope
lods
pop
mov
sbb
xchg
cmpsl
xchg
out
push
and
mov
mov
pop
inc
mov
xor
mov
dec
imul
pop
sti
adc
cmp
mov
sub
jp
xor
mov
rclb
subb
add
cmp
shll
fs
and
and
js
stos
idivl
cmpsb
sub
add
gs
lcall
je
fmulp
rcr
psubb
arpl
dec
mov
loope
sbb
pop
inc
cmp
jg
out
or
lods
jmp
xor
mov
add
sbb
add
ret
insb
into
xchg
mov
cwtl
sbbl
jg
push
popa
or
mov
pop
add
add
mov
and
cmp
insl
push
and
bound
data16
sti
rolb
push
jge
ja
push
mov
lret
mov
and
cwtl
ds
call
stos
scas
jne
inc
add
push
mov
sub
ret
faddp
and
inc
and
sbb
rcrl
adc
push
inc
sbb
inc
and
push
stos
mov
dec
or
fsubrs
pop
push
push
push
and
rolb
aam
cltd
inc
repz
push
ret
jmp
jg
mov
jmp
pop
in
xchg
fdivr
sub
daa
mov
fisttps
adc
push
xor
mov
in
gs
or
fcmovne
cmp
movsl
hlt
inc
cwtl
sub
ret
shll
adc
push
sub
mov
repz
xor
outsl
mov
adc
sbb
out
addb
fdivl
pop
push
xor
push
and
sub
cmp
insb
cmp
push
mov
addr16
cmpsl
mov
or
sbb
adc
fstl
repnz
fimull
pop
je
add
loope
mov
sub
movsl
fstl
pop
mov
aas
fstl
in
test
lea
rol
jecxz
push
sbb
mov
mov
test
dec
cmc
out
push
pop
jb
dec
mov
mov
xor
mov
fldt
call
test
push
xchg
jo
cmp
lahf
mov
adc
jl
cmp
push
std
lcall
jge
jge
pop
pop
iret
shll
or
mov
je
repnz
cld
pop
scas
out
and
mov
cmpb
loop
movsl
rcll
or
test
xlat
loope
jmp
cmpsb
and
cmp
loop
imul
lods
mov
das
xchg
dec
xor
xor
push
xor
dec
movsl
pop
lahf
subl
mov
mov
scas
cmp
addr16
push
outsb
les
cs
adcl
mov
push
fs
jmp
mov
push
cmp
jb
xchg
dec
jnp
mov
mov
pop
mov
xor
dec
dec
clc
in
inc
dec
add
pop
sti
push
addr16
test
pop
dec
shlb
sti
fidivrs
aam
xchg
mov
jge
add
int
loopne
and
cmp
xchg
outsb
outsl
rcll
inc
dec
dec
xor
cmp
mov
sbb
sub
mov
push
test
push
pop
mov
popa
cmc
mov
test
inc
cmp
sbb
movsb
lods
fisubrl
ss
jno
push
scas
inc
push
add
fists
andl
pop
ret
mov
mov
xor
xor
arpl
out
lds
lret
aad
jmp
mov
mov
push
cmp
mov
imul
jno
add
ss
sbb
das
insb
leave
sub
sub
add
into
adc
fldt
cmpsb
xchg
fadd
arpl
mov
sahf
sub
xor
dec
lcall
lods
cmp
fistpl
xor
je
stc
push
imul
and
lock
lods
aaa
jmp
dec
push
xor
rcl
mov
jns
and
push
push
lcall
xchg
push
lock
cwtl
or
nop
cmp
lret
mov
daa
sti
adc
jecxz
bound
mov
jnp
lock
subb
ds
movsl
iret
jae
jecxz
inc
or
nop
dec
or
push
inc
vfrczsd
lcall
mov
cmp
or
jge
adc
sbb
and
int3
in
inc
xor
pop
enter
int3
mov
lret
mov
sub
nop
mov
push
mov
xor
jno
call
xchg
pop
jle
xchg
call
jg
push
lods
das
cmp
ljmp
adc
mov
fcmovnbe
lret
jl
sub
pop
mov
pushw
popa
lods
push
add
add
xorl
jp
call
ds
cmp
push
inc
faddp
leave
mov
xchg
pushf
mov
xchg
mov
das
test
mov
sbb
jp
iret
cmpsb
cmp
and
push
mov
mov
outsb
or
pop
mov
decl
jl
jl
xchg
mov
sub
test
lock
sub
sub
stos
aad
inc
pop
dec
test
dec
jbe
out
jg
xor
xchg
cmp
cmp
test
adc
sub
sub
mov
push
adc
mov
or
shll
jne
sti
jnp
je
pushf
adc
cmp
ss
add
dec
cmpsl
shlb
rol
imul
rcrl
push
inc
aas
pop
or
fxch
mov
sub
stos
inc
dec
hlt
mov
jb
rorl
call
bound
cld
rcrl
popa
push
addr16
push
fstps
lods
mov
xchg
in
jnp
mov
pop
adcb
pop
xor
xchg
xchg
xchg
loop
sarb
hlt
je
cmc
sub
stc
mov
out
mov
std
test
pop
mov
mov
out
insb
decb
jg
icebp
movsb
shrb
outsb
xchg
call
pop
out
arpl
sahf
pop
mov
loopne
sbb
cmpsl
lret
mov
icebp
cwtl
aaa
aad
add
mov
rol
je
xchg
pushf
xor
enter
mov
jae
lahf
mov
call
fidivs
lods
mov
xchg
pop
rol
mov
sub
test
mov
lods
lea
fs
fsubp
lds
addr16
dec
dec
decb
aaa
cmc
jmp
pcmpeqb
movsl
sbb
call
lahf
dec
aas
dec
mov
push
inc
mov
or
add
adc
insl
shl
div
test
mov
sbb
addr16
jecxz
add
and
push
push
fdivrl
sub
ret
sahf
int
sub
pop
inc
jge
push
loopne
jp
cli
mov
hlt
mov
clc
scas
out
fwait
int3
rorb
adc
sub
dec
inc
rcrl
or
sbb
out
push
faddl
roll
mov
enter
mov
add
ret
cmp
pop
jmp
in
cmp
call
cmp
dec
fsubrl
and
pop
jnp
jecxz
sti
lahf
outsb
movsl
sub
fsubr
fistl
cmp
xchg
dec
and
stc
mov
adc
cwtl
iret
aas
call
jle
adc
mov
fldcw
xchg
in
mov
mov
mov
and
mov
fs
test
mov
jbe
rcrb
mov
ss
call
mov
les
mov
mov
mov
jb
lahf
outsb
sub
outsl
shrb
mov
inc
sbbb
jmp
int
mov
ja
fimull
or
mov
movsb
xchg
pop
mov
sub
test
test
mov
dec
lcall
adc
and
mov
rol
sub
add
orl
loopne
push
adc
and
lret
lds
inc
mov
arpl
inc
loopne
dec
jns
inc
pop
jmp
ficoml
cld
inc
fdivrs
add
sbb
inc
add
outsb
push
jecxz
mov
mov
mov
lret
les
shrb
incl
jno
jb
adc
inc
push
inc
rorb
xor
in
fidivrl
sub
loope
mov
hlt
out
leave
xlat
mov
andb
pop
jne
ss
sbb
call
cli
insb
shlb
arpl
dec
dec
rclb
or
fistl
dec
or
cmp
sbb
fldl
jge
insb
mov
jmp
add
add
leave
icebp
or
incl
lret
addr16
xchg
stc
cli
push
pop
sub
bound
add
roll
xchg
outsb
mov
push
adc
das
pop
out
mov
loop
decb
push
pop
sub
fcomp
dec
push
dec
pop
cs
mov
je
jle
jo
xlat
mov
mov
mov
in
aad
sbb
mov
and
imul
imul
jnp
add
inc
icebp
sub
inc
sti
xchg
scas
inc
sbb
gs
pop
jbe
imul
inc
xchg
sbb
jns,pt
sub
imul
sub
jecxz
cs
ret
xchg
repnz
mov
jb
sbb
mov
out
out
lock
jl
jb
mov
fsubs
fcoms
xchg
push
mov
mov
sbb
mov
push
mov
repz
mov
inc
fwait
aas
sar
lcall
negl
adc
icebp
mov
or
xchg
mov
pop
xchg
jecxz
push
adcl
sbb
hlt
add
lods
pushf
scas
cmp
lahf
mov
leave
ret
sbbl
inc
jo
out
out
or
push
xor
or
push
sbb
call
negb
cmpl
mov
test
mov
add
adc
jns
imul
pop
int3
pop
sub
std
push
pop
jno
jl
movhps
lds
cmp
cwtl
les
cli
sub
xchg
fs
ljmp
xchg
jmp
popf
ss
dec
or
iret
and
icebp
mov
aad
scas
out
add
out
subl
in
xchg
mov
cmp
and
or
inc
insl
xor
push
jns
loopne
and
sub
push
in
xchg
cmp
or
arpl
jp
inc
or
push
cmp
push
pop
in
fwait
stos
cmp
scas
xorl
mov
imul
negb
mov
dec
test
mov
adc
ja
aam
adc
nop
ja
out
addr16
mov
fidivs
xchg
fs
push
js
xor
rcrb
dec
fistpl
jmp
ss
leave
gs
or
add
inc
and
add
sbb
leave
aam
add
and
roll
pop
cmp
adc
jmp
dec
inc
in
fistpll
shl
xchg
sub
fucom
cli
push
add
aas
pop
je
pop
jmp
outsb
jnp
mov
cmp
jb
add
sub
and
in
inc
scas
pop
push
sub
sbb
mov
push
jmp
in
popa
shll
dec
je
lcall
dec
ljmp
xlat
loop
hlt
and
or
pusha
fimull
xor
lds
clc
add
stos
rcl
cmpsb
xchg
data16
mov
test
fiaddl
out
fwait
inc
imul
mov
js
jecxz
clc
xor
movsl
notb
xor
add
cmp
mov
repnz
call
es
push
stc
test
ret
ret
push
inc
jp
lock
sbbl
inc
sbb
and
mov
mov
incl
add
xchg
cmp
xor
imul
lock
or
sti
add
int
outsb
push
jae
jmp
pop
shlb
andl
test
mov
imull
adc
mov
in
push
insl
cmpsb
dec
popf
std
sbb
mov
mov
pop
fs
mov
insb
mov
lods
lods
addr16
enter
enter
dec
push
aad
cmpsl
mov
jl
mov
lret
cltd
in
sti
mov
mov
push
jnp
lods
dec
push
loopne
xlat
add
mov
pop
pop
fidivrl
cs
mov
cmc
xchg
push
imul
int
fisttps
xor
xchg
cli
sub
fucomp
xchg
stos
sbb
jne
fcomps
test
test
out
push
cmp
push
int3
lahf
or
pop
xchg
sub
es
and
cmp
rcrl
sub
push
shr
dec
add
jp
adc
cmp
dec
ror
imul
ds
scas
adc
jecxz
ret
mov
scas
mov
cld
ss
sub
adc
mov
iret
mov
scas
inc
sub
jge
xor
clc
sub
das
jbe
aaa
or
cmpb
daa
inc
sbb
imul
testl
int3
sub
adcl
cmp
sbb
mov
xchg
out
loop
out
and
or
mov
cld
dec
mov
aad
xchg
movsb
xchg
mov
add
push
insb
divb
daa
cs
jne
les
jmp
mov
jl
sub
sbb
xchg
mov
popw
push
jp
aad
add
std
je
inc
pop
xlat
stc
xchg
int
sub
cs
into
jmp
jnp
inc
or
dec
push
adc
adc
dec
inc
add
rcrb
out
test
mov
cld
push
mov
add
sbb
rep
cli
fisubrs
int3
sarl
bound
sbb
sbb
and
sbb
ja
cmp
pop
lcall
cwtl
pop
sub
jle
lods
lahf
sub
dec
dec
mov
cmpsb
adc
je
enter
fs
or
lds
das
nop
mov
jge
add
inc
fsubr
push
sbb
ja
adc
insb
push
in
push
stc
leave
clc
inc
mov
jns
adc
mov
mov
push
add
loopne
add
insl
loopne
pop
int3
andb
cmp
sbb
add
xchg
data16
repnz
mov
xchg
cmp
adc
divl
stc
subl
or
nop
xchg
pop
adc
test
popa
je
jl
push
sbb
pop
dec
push
movsl
lret
into
fistl
xchg
dec
jge
movsb
sub
fnstsw
dec
cmp
fucomip
push
mov
cltd
mov
or
bound
ljmp
pop
mov
stos
push
lcall
jle
imul
fstpl
iret
das
lret
ljmp
and
xlat
or
add
mov
and
pop
pop
lret
dec
lea
les
xchg
outsl
outsb
mov
jnp
lds
insb
xor
imul
ficomps
push
push
in
jmp
xchg
push
mov
test
xchg
cmp
mov
das
stos
inc
inc
into
xchg
jmp
pusha
leave
push
or
adc
mov
xchg
movsl
push
loope
push
pop
push
aad
jecxz
popf
pop
inc
or
mov
push
mov
sbb
test
ds
seto
pop
rcrl
fxch
sbb
or
je
push
addl
and
hlt
cmc
add
add
fwait
out
push
cmp
bound
jecxz
pop
je
mov
fsubl
repnz
or
xor
mov
inc
pushf
inc
pop
cmp
mov
sub
fidivrs
jge
mov
dec
jl
aam
les
lcall
idivl
sbb
cmpsb
and
add
sbb
xchg
mov
jo
cmp
sbb
pop
xchg
xchg
inc
dec
cmp
push
pop
adc
mov
cmpsb
or
adc
xor
push
mov
dec
cmp
dec
mov
add
xchg
cmp
xchg
pop
lods
mov
adc
cmpsb
inc
cmc
jmp
jl
jae
shrl
stos
rcrl
pop
cmp
inc
es
push
in
push
cmpsb
dec
pop
cmp
add
push
addps
sbb
aaa
jge
pushf
ret
push
iret
test
sub
fcmovnu
cmp
add
push
or
or
mov
dec
cmp
mov
out
inc
adc
inc
xor
pushf
sbb
and
pop
test
cmc
pushf
sahf
inc
adc
lods
hlt
fcomip
mov
mov
xlat
and
fs
clc
pop
jge
mov
inc
dec
dec
push
xchg
mov
sub
insl
cs
fistps
cltd
insl
je
cmp
pop
or
cltd
lea
sub
mov
push
ds
jb
pop
xor
call
mov
push
mov
lock
xor
or
flds
sbb
inc
iret
jg
arpl
test
pop
xor
sub
add
cmp
shrb
adc
and
push
sbb
mov
pop
pop
int
mov
push
call
cli
sti
orb
jns
push
mov
repnz
sti
stos
std
addb
or
testb
mov
movsb
int3
pop
popa
push
dec
push
jns
jnp
mov
mov
sub
addr16
mov
mov
xchg
push
cli
lret
inc
push
cltd
push
push
mov
test
insb
pop
jmp
dec
or
fs
mov
into
sub
stos
xor
imul
mov
sarb
mov
enter
call
icebp
inc
cmp
push
shll
loope
or
stos
mov
inc
lock
xlat
out
push
jns
fmull
dec
mov
loope
xchg
push
sub
xchg
push
aaa
mov
pop
leave
and
sbb
jo
jb
jp
pop
pop
ret
cmp
insl
test
dec
mov
sub
mov
xor
jge
mov
lods
sbb
push
out
cld
sarb
inc
ds
cmp
xor
outsb
aas
or
cmp
lock
jns
jp
mov
mov
int
das
xchg
and
cli
mov
mov
push
lea
test
out
inc
inc
cmp
xor
push
fwait
mov
inc
jecxz
fdivl
pop
out
adc
sbb
pop
ror
jmp
sub
std
imul
jne
xor
bound
and
mov
je
push
loope
xchg
xchg
push
push
push
lds
jle
movsb
test
xor
pop
shlb
int3
inc
fisttpll
mov
jne
inc
inc
testb
mov
and
and
adc
xchg
dec
ja
mov
jg
std
call
cmpsb
loope
stc
aam
xchg
orl
cmp
xchg
loope
add
mov
add
add
adc
mov
cmp
jmp
fcompl
and
rcrb
push
dec
push
repz
leave
fwait
sahf
std
rol
stos
ljmp
sub
push
rcrb
jb
mov
out
insl
push
mov
clc
push
or
ljmp
fidivl
imulb
outsb
and
daa
outsb
int
add
adc
inc
lods
rcrb
inc
hlt
xlat
sub
xor
xor
pop
ret
stos
shll
add
mov
and
lcall
fcmovnb
out
cmc
push
push
and
push
stos
pop
push
insl
jns
cwtl
and
mov
movsl
fisttps
iret
adc
mov
push
mov
sti
lret
jnp
data16
inc
mov
fisubrs
mov
push
test
pop
int
popf
into
ss
pop
xchg
jp
arpl
stos
inc
xchg
add
and
mov
adc
fisubrs
or
sqrtps
les
adc
pop
fcmove
mov
aad
sbb
das
aaa
sbb
adc
inc
and
xor
jmp
xchg
mov
orb
and
sub
push
shrl
add
mov
in
pushf
pop
adc
stos
inc
lea
cmp
cmp
adc
out
int3
loope
shll
leave
imul
outsl
lods
mov
ss
rcr
repnz
lret
decb
jae,pn
sbb
push
lods
nop
rolb
or
cmp
jno
and
xchg
mov
xor
sub
xchg
jmp
and
jae
imul
insl
adc
mov
or
adc
xor
adc
popf
dec
xor
cmp
mov
dec
test
sbb
divl
aad
mov
rep
xor
cmp
in
lock
lcall
pop
in
iret
int3
sbb
pop
scas
and
xor
jl
js
js
or
jmp
mov
dec
inc
jne
shll
loopne
add
nop
fidivrl
sbb
sub
mov
cmp
rcr
daa
or
jecxz
pop
push
mov
push
inc
jbe
loope
inc
enter
addr16
test
ljmp
shlb
negb
mov
fmuls
cmc
das
ds
popl
out
sbb
jne
stos
dec
adc
dec
add
xchg
sbb
mov
pop
or
push
mov
jb
mov
insl
inc
mov
dec
push
jmp
push
pop
sbb
xchg
adc
sbb
daa
addr16
inc
mov
xchg
push
in
xchg
jnp
dec
jne
fists
bound
xchg
cmc
loop
inc
and
imul
int3
pusha
sub
add
cmp
mov
jb
mov
lret
jp
test
jbe
sub
xor
out
dec
and
xchg
adc
mov
sub
jne
sub
adc
nop
pop
mov
xchg
jp
cmp
in
jmp
loopne
rorb
fdivrl
cmp
ret
mov
xchg
inc
jo
or
fsubs
xchg
addr16
push
mov
jg
jmp
mov
sub
and
mov
lock
fimull
iret
sub
mov
mov
fs
sub
mov
xchg
call
stos
dec
adc
arpl
inc
sbb
and
aas
in
mov
imul
push
cmp
test
ficomps
push
or
aaa
fistps
cmp
iret
rcrb
scas
or
push
push
xor
push
pop
stos
fcoms
mov
jns
ret
xchg
dec
movsl
dec
loope
push
sub
ds
mov
xchg
cmpl
fwait
addr16
cmpsb
sbb
insl
lock
call
lret
sub
mov
add
dec
lock
jg
push
cmp
pushf
loope
mov
addr16
or
and
fstpt
nop
add
xchg
push
lea
push
cmp
std
mov
dec
ss
xchg
mov
adc
fnsave
xor
ja
lods
lods
es
mov
mov
mov
xchg
js
dec
pop
jns
mov
pop
test
jmp
sbb
fcompl
mov
popa
daa
lods
push
frstor
xchg
scas
arpl
imul
ja
xorl
cmpsl
xchg
xor
aad
add
fdivp
sahf
fsts
mov
cmc
pop
cmc
dec
sub
stos
sub
pop
dec
es
cmp
sub
repnz
cld
dec
pop
mov
clc
jns
jb
adc
sub
xor
add
xchg
iret
cltd
adc
lock
adc
scas
aad
sbb
xor
aas
lcall
addr16
in
cwtl
jo
or
dec
loop
std
es
sbbl
loope
int3
xchg
stos
inc
sbb
cwtl
imul
aaa
add
add
jnp
aad
mov
shll
rorl
push
sbbl
pop
inc
lods
shl
out
mov
push
inc
out
xchg
andl
mov
lret
xchg
push
and
xchg
mov
cltd
adc
into
fcompl
mov
pop
or
jns
test
adc
scas
xor
push
cld
sub
arpl
nopl
jle
and
xor
pushf
dec
std
and
fstl
popf
inc
and
movsl
sarb
xchg
pusha
sbb
inc
decl
xchg
mov
sti
jg
ljmp
xchg
imul
popa
pop
xor
loop
imul
sbb
cmp
stos
shlb
repnz
xchg
popa
cmp
add
cmp
repnz
jge
daa
inc
clc
ret
or
mov
mov
lahf
mov
movsb
mov
insb
mov
aam
mov
lret
lret
push
loop
mov
mov
shll
dec
mov
jg
mov
mov
enter
aas
add
movsb
in
mov
pop
lcall
js
mov
adc
jbe
out
jp
sub
jecxz
jmp
mov
lock
roll
sbbb
das
popa
aas
and
xchg
enter
push
hlt
les
mov
jl
add
sbb
jg
adc
ljmp
imul
cld
addl
mov
xor
adc
hlt
xor
movsl
iret
adc
mov
outsl
pop
mov
mov
cmp
mov
jae
aad
shlb
dec
xchg
push
gs
and
mov
es
cmpsl
jle
push
sti
mov
ret
add
cmp
into
adc
lcall
jl
xor
bound
inc
mov
mov
stc
stos
push
jmp
cltd
sub
push
test
rolb
incb
enter
ja
arpl
movsl
push
ja
outsb
loope
sahf
stc
std
sub
lds
inc
mov
sub
adc
shll
aaa
in
adc
in
bnd
sbb
push
or
cmp
mov
imul
pop
andl
mov
daa
add
notl
inc
mov
fidivrl
nop
fstpt
outsl
lret
or
xchg
in
ret
mov
or
test
or
cmp
loopne
mov
mov
cmp
push
je
and
subb
sbb
xor
test
dec
in
mov
inc
add
or
loop
fcmovne
andb
cmp
inc
jmp
pop
outsl
jnp
cmp
jp
jmp
pushf
xlat
add
int
mov
cmp
aas
lret
lret
mov
add
mov
lret
pop
xchg
and
and
cmp
daa
out
xor
sarl
sbb
mov
jg
mov
fwait
dec
js
push
pop
sub
push
fdivs
fistl
and
cmpsb
jl
cmpsb
add
push
les
fcompl
outsb
add
jmp
adc
and
xchg
ds
adc
ficomps
jno
arpl
adc
xchg
rcl
fdivrs
cs
cmpsb
pop
add
dec
push
adc
dec
inc
pop
inc
dec
movsb
ficompl
mov
push
test
sahf
push
push
jae
mov
and
stos
fimuls
xor
push
movb
jl
imulb
and
xor
push
dec
pusha
das
roll
imul
jmp
fists
in
inc
out
rorl
outsl
mov
push
fldl
sub
scas
pop
mov
mov
add
mov
call
push
adc
mov
add
push
repz
sbb
mov
mov
test
sub
jge
cmpsb
adc
adc
loop
out
pop
jmp
and
inc
sarb
shrb
pushf
shll
add
out
fs
adc
subl
mov
pop
cli
inc
adcl
fmul
add
or
fstpt
movsb
out
jo
fdivl
nop
loope
push
jae
dec
incl
sarb
out
je
notb
sbb
mov
insb
loopne
daa
mov
shrl
mov
and
dec
mov
dec
aam
stc
shlb
enter
xor
mov
dec
pop
repnz
mov
inc
jo
xchg
fbld
or
rcll
fisubrs
mov
pop
cs
pop
ret
mov
mov
je
cmp
icebp
aad
cmp
icebp
out
mov
repnz
dec
dec
pop
xchg
fidivs
cli
sbb
xchg
push
sub
in
mov
sti
mov
xor
and
cmp
xchg
fs
sahf
cwtl
push
mov
int
xor
adc
bound
mov
cmp
xchg
hlt
icebp
popf
lret
xor
or
adc
aad
xor
fidivrs
mov
dec
jne
cmpsl
repz
jbe
lock
daa
mov
and
push
les
and
inc
mov
or
mov
ret
aaa
mov
mov
lahf
dec
negl
mov
divl
push
dec
pop
mov
adc
out
les
out
dec
mov
mov
xchg
inc
scas
and
enter
es
adc
dec
cs
test
sub
out
mov
pop
dec
ja
jp
sub
stos
xchg
xor
inc
sti
fs
cmp
cli
sbb
push
inc
sbb
shlb
xor
iret
xchg
mov
mov
and
fsin
lcall
sbb
incb
cmp
xor
mov
xchg
push
xchg
enter
adc
loope
lods
aam
or
sub
lods
cltd
mov
sub
jge
push
inc
mov
repz
into
lods
push
mov
dec
movsb
jne
fs
inc
cmp
and
out
jg
rorb
jmp
push
lahf
lock
sbb
ret
sbb
cmp
idivl
and
mov
mov
xlat
lods
movsb
test
pop
fsubs
sub
mov
rorl
add
adc
pop
inc
xchg
sbb
push
or
leave
cmc
push
pop
pop
insb
test
xlat
bound
add
cwtl
and
pop
insb
lea
sbb
or
sub
jl
addb
scas
and
mov
add
test
shrl
sbb
and
pop
ja
jbe
sbb
cwtl
cmp
and
jae
imul
rol
jp
stos
jns
mov
mov
inc
jg
xchg
push
cmp
mov
or
das
inc
pop
xor
ds
ret
push
push
inc
popa
clc
inc
sbb
xlat
std
addl
or
add
popa
lock
lock
pop
aam
push
in
dec
jbe
in
push
push
mov
or
jp
hlt
jmp
xchg
lret
fprem1
test
in
mov
inc
adc
xchg
in
push
inc
jo
inc
pushf
xchg
lea
out
outsl
ds
les
mulb
and
inc
inc
mov
xor
gs
mov
sbb
cmpsl
test
dec
data16
fcoms
call
add
rcl
lods
push
pop
outsl
fs
rorl
pop
pop
mov
sbb
xchg
pop
xchg
adc
lods
pusha
and
insl
shll
cmc
sub
repnz
xor
or
sbbb
rorl
stos
mov
je
mov
inc
sbb
mov
and
and
int3
xchg
fs
dec
or
jp
pop
mov
lods
sub
mov
xchg
push
or
int3
jmp
pop
call
mov
jg
mov
mov
and
sub
mov
lret
adc
outsl
les
popf
test
push
fsts
dec
cmp
es
adc
xor
xchg
aad
ds
into
cmp
mov
cmp
push
out
and
dec
scas
dec
mov
push
movsb
dec
jmp
enter
push
dec
inc
pop
mov
xchg
lods
pop
jnp
out
movsb
fwait
xorb
sbb
xchg
mov
dec
inc
cmp
incb
aam
imul
or
out
ds
dec
xlat
pop
sbb
mov
outsb
sbb
push
mov
jmp
push
push
mov
jns
lods
loope
invd
cmpsb
fistpll
stos
int
lods
sarl
ss
out
test
pop
loopne
in
push
xorb
loopne
mov
or
mov
and
ret
push
in
pmuludq
adc
xchg
pusha
scas
cmp
iret
in
or
mov
push
and
rcl
rclb
out
in
leave
mov
cmp
mov
xchg
pop
push
pop
sti
and
sbb
mov
outsl
invd
lods
jp
push
cmp
xlat
pop
xchg
and
push
jb
loopne
inc
hlt
sub
aaa
xchg
into
cmp
sub
push
sub
mov
mov
or
arpl
xchg
mov
daa
adc
lret
or
repnz
add
nop
jp
mov
and
shrb
jmp
cmpl
ljmp
mov
mov
stc
dec
push
dec
xor
inc
hlt
hlt
xchg
add
loopne
adc
pop
sbb
std
pop
out
cwtl
xor
xor
or
mov
aam
fnstcw
outsl
lods
notl
mov
mov
andb
int3
push
roll
int3
push
subl
fisttpll
cmp
scas
xchg
mov
int3
sbb
bound
and
shlb
sbb
mov
fwait
xchg
fists
and
and
mov
in
ds
fmull
xchg
sub
or
xor
sub
cld
mov
ja
mov
cld
push
mov
and
pop
call
jno
popf
cmp
or
ss
adc
sbb
mov
mov
dec
pop
xlat
mov
hlt
jle
dec
outsb
adc
imul
cmpsl
sbb
mov
jae
cmp
xor
pop
aaa
in
inc
sub
lock
mov
xchg
xor
or
pop
ljmp
bnd
loopne
sbb
fnstenv
insb
cmpsb
dec
xchg
add
inc
cmpsb
popa
jb
sbbb
scas
std
sbb
xchg
cli
mov
mov
push
xor
iret
jmp
mov
xor
fcmovne
xchg
dec
add
cmpsl
mov
mov
jnp
imul
jge
xchg
jnp
bound
ds
inc
popf
lods
xlat
push
sarb
xchg
adc
mov
lock
arpl
pop
xor
xchg
out
or
jbe
dec
adc
mov
fwait
or
dec
cmp
fldcw
xchg
scas
pop
or
fildl
mov
add
cmp
xchg
es
inc
xor
test
jbe
push
mov
cmp
mov
repz
ljmp
dec
shrl
gs
push
jl
sbb
push
adc
push
mov
nop
icebp
jg
out
jb
push
inc
mov
xchg
sub
cmc
jl
sub
mov
loope
jne
xchg
cmp
dec
sbb
push
xchg
les
pop
mov
js
add
ss
addr16
and
in
or
mov
xor
and
pop
add
stc
sub
cs
outsl
mov
popf
dec
leave
mov
std
inc
rol
cwtl
loop
out
or
inc
cwtl
mov
pop
mov
lods
shlb
cmp
dec
cmpsl
test
cli
pop
push
mov
js
sbb
ror
das
fstpl
jne
and
test
mov
pop
arpl
stc
lret
add
mov
sbb
jmp
add
addb
mov
je
ja
iretw
pop
jge
fbstp
insb
sbb
jecxz
or
jno
stos
in
dec
jo
cli
jae
stc
bnd
sbb
stc
xor
mov
loope
and
xchg
insb
les
out
sbb
sbb
mov
and
mov
cld
push
fistl
es
lock
enter
aaa
pusha
adc
lods
push
mov
jg
jp
pop
stos
mov
or
insb
push
hlt
lea
pop
popa
xchg
pop
insl
cmpsl
int
movb
gs
mov
push
js
or
enter
xchg
jnp
push
adc
and
btc
mov
loopne
outsl
mov
jle
roll
insb
lods
and
dec
xor
ret
pop
mov
add
xchg
in
mov
mov
std
loope
dec
faddl
jp
push
ret
aas
arpl
or
jl
nop
xor
sbbl
jbe
dec
adc
ret
divb
xchg
jmp
jns
xor
loopne
push
jg
call
ljmp
fldl
xlat
inc
icebp
movsb
lods
mov
ds
stos
add
das
aad
out
or
lods
loope
dec
or
popf
outsl
add
testb
test
push
aas
into
imul
sub
test
imul
ret
jge
insl
xor
mov
inc
aas
adc
cltd
inc
call
imull
maxps
xchg
push
sbb
cwtl
cmc
push
dec
add
dec
dec
movsb
mov
add
dec
icebp
outsl
cmc
dec
pop
cmc
mov
repnz
addr16
loope
mov
daa
mov
int
sub
pop
movsl
in
aaa
daa
inc
mov
aaa
mov
jb
lods
rcll
mov
dec
stos
dec
rcll
jecxz
jl
std
je
jge
and
sbb
xorl
addr16
ljmp
xchg
push
leave
orl
mov
decl
sub
and
test
inc
cld
out
rep
pop
mov
or
sbb
or
ds
mov
and
xchg
outsb
sub
mov
test
cmpsl
mov
adc
or
cmpl
vfrczps
sbb
aas
test
lea
mov
outsb
jp
add
xor
dec
loopne
cmp
iret
gs
fdivrl
adc
hlt
lret
lock
repz
sub
cmp
jge
mov
inc
mov
cmpsl
aaa
lods
push
pop
mov
std
out
cmp
or
shrl
jp
aas
xor
push
jecxz
sub
mov
je
lahf
jbe
jecxz
ret
repz
js
mov
mov
xor
dec
sub
add
dec
push
mov
fsubs
cmp
lret
push
test
dec
lea
scas
scas
inc
adc
dec
mov
imul
mov
hlt
popa
add
rcl
repz
je
xor
ss
cmpsl
pop
fisttpll
daa
pop
jno
sbb
mov
iret
gs
leave
push
in
and
rclb
fnstenv
cld
test
xchg
fadd
push
mov
xchg
xor
nop
jge
sub
add
lcall
sub
rclb
cltd
sbb
adc
int3
movsl
push
xor
xchg
sub
bound
push
daa
mov
dec
arpl
dec
outsl
pop
or
rcrl
cmpsb
mov
sbb
xor
inc
sbb
cmc
out
push
pusha
addl
test
fwait
and
xlat
jl
scas
mov
sbb
pop
xor
jecxz
sbb
sub
sub
les
sbb
rorb
rorl
fisubs
mov
loop
out
xchg
stc
dec
in
and
xchg
jg
cmp
sarl
es
and
pop
xchg
sbbb
je
movsl
jo
rcl
xor
bound
sub
lods
mov
mov
inc
jl
loopne
int
cmp
lds
pop
pop
sbb
add
mov
add
jmp
dec
inc
hlt
inc
cs
popa
repz
sbb
cmp
out
subl
mov
pop
movsb
adc
dec
leave
push
jns
mov
lds
mov
roll
arpl
or
stos
lcall
mov
loopne
test
stos
fiaddl
js
inc
dec
test
in
mov
pushf
sub
jns
roll
fcoms
imul
inc
jecxz
lgdtl
jmp
mov
cltd
mov
loopne
and
or
inc
not
mov
or
push
xor
xchg
dec
mov
das
gs
xchg
mov
rcll
push
int3
stos
aam
jl
cmp
cwtl
jae
pop
mov
inc
es
mov
test
call
pop
cwtl
xlat
out
sbb
push
decb
je
jbe
mov
and
es
sahf
mov
sar
sub
sbb
in
lret
ret
or
or
sub
jle
and
cmp
xchg
mov
jbe
jge
pop
pop
mov
mov
iret
mov
lods
iret
out
aaa
bound
in
std
ljmp
mov
fidivl
jmp
lret
cmpsb
cmpsl
stos
inc
jnp
cmp
sbbb
lcall
dec
int
arpl
xchg
mov
imul
enter
in
clc
lods
push
jle
stos
dec
sahf
adc
jmp
jo
xchg
into
jne
popf
fwait
gs
ret
jne
mov
or
loope
inc
leave
pop
jge
mov
notb
cli
aam
les
insb
jb
mov
pop
mov
int
mull
cmpsl
and
ja
or
icebp
rorl
addb
pop
leave
cld
icebp
and
es
mov
mov
mov
ja
ret
fs
adc
dec
mov
adc
loopne
lcall
or
push
mov
xchg
mov
pushf
mov
cs
or
pop
push
pop
pop
inc
and
jbe
adc
arpl
imul
std
lock
inc
sbb
mov
inc
push
mov
mov
jnp
inc
call
stos
fisubrl
and
nop
sub
mov
sbb
call
mov
fidivs
xor
cwtl
out
xchg
jge
js
test
xchg
fs
insb
movsb
jo
adc
cmp
aaa
mov
mov
dec
xchg
ja
dec
and
lcall
lahf
cmpsl
testb
std
jle
xchg
and
inc
push
push
lock
push
lea
push
lock
lods
push
push
fstpt
pop
sub
push
or
fs
sysenter
mov
mov
pop
jnp
xor
int3
scas
push
inc
push
pop
clc
mov
mov
and
pop
jnp
lea
cmp
ljmpw
in
scas
aad
jnp
mov
cld
lret
xor
pop
inc
lods
fcompl
popa
xor
xchg
push
icebp
cmp
stos
mov
lods
mov
or
fisubrs
mov
subb
jg
pushf
stos
loopne
imul
inc
fstpl
js
inc
xor
sub
inc
rcrb
packuswb
mov
dec
xor
or
push
fldenv
subl
jl
jns
nop
pop
into
mov
fwait
jecxz
scas
mov
push
sahf
cld
push
ret
inc
adc
and
mov
cmp
pushf
outsl
in
mov
daa
pushf
cmp
cwtl
adc
ficoml
adc
xchg
outsl
clc
jne
je
push
cld
sbb
cmovo
jo
cmpsl
test
icebp
add
enter
in
or
and
pop
jle
mov
sub
mov
scas
mov
addr16
and
rcr
je
icebp
out
jno
mov
ret
add
in
xor
cmpsl
daa
dec
sub
inc
dec
jne
pop
inc
loopne
mov
mov
mov
rorb
js
mov
xchg
xorb
js
pop
mov
or
and
mov
imul
jle
sub
xchg
imul
sbb
push
xchg
xchg
adc
bound
and
pop
and
or
sub
add
jle
movsb
insb
adc
mov
out
inc
vmovsldup
cmpsb
jae
pusha
idivl
rcll
adc
stc
jmp
test
add
adc
inc
push
xchg
lret
into
adc
inc
mov
cmp
pop
sub
pushf
pop
loope
lcall
xchg
in
jbe
out
testb
js
or
rorb
dec
mov
out
lea
add
add
xor
mov
dec
mov
loop
mov
fstpl
xchg
or
jae
lods
popf
iret
push
add
add
sbb
outsb
add
adc
sbbl
inc
add
lods
fmuls
xor
add
les
cmc
add
mov
inc
adc
ficoml
jp
push
xchg
mov
inc
mov
push
popf
xchg
jnp
add
push
mov
mov
in
into
js
icebp
push
testl
add
jb
addb
jp
cmp
sbb
add
dec
cmp
sti
push
push
mov
repnz
lods
mov
sbb
xor
ds
jecxz
pop
mov
jg
inc
inc
lods
das
fstpt
shlb
mov
mov
push
adc
xchg
push
mov
add
or
add
jge
inc
xorl
mov
xchg
adc
mov
mov
mov
mulb
nop
sub
push
inc
xchg
imul
mov
mov
jecxz
and
test
jle
jnp
out
xor
cld
fildll
jp
jecxz
sub
sbb
add
leave
pop
fdiv
imul
xchg
inc
mov
int
popf
test
adc
std
imul
add
aad
push
ds
add
in
adc
pop
std
loope
mov
mov
xchg
mov
popa
pushf
hlt
out
fists
int3
lret
rep
push
and
and
adc
push
ljmp
and
dec
xchg
call
cwtl
ds
mov
test
mov
repz
repnz
adc
and
imul
pop
aad
dec
push
out
mov
adc
repnz
sbb
call
mov
add
fwait
les
xor
pop
test
aaa
insb
jb
push
or
insb
lock
gs
jns
notl
sahf
pusha
into
xor
jae
movsl
ret
push
scas
inc
adc
pushf
ret
mov
leave
stc
xchg
int3
sub
inc
andb
ret
or
or
loop
jns
jb
mov
mov
fucomi
lret
jg
xor
sub
sahf
ds
mov
and
jge
insl
mov
scas
pop
testb
mov
and
pop
pop
pop
or
cmp
sub
pop
stos
mov
pop
test
je
jecxz
sahf
addl
sub
adcb
pusha
insb
insb
out
gs
das
movsl
xor
lea
dec
mov
adc
pusha
adc
repz
out
adc
mov
xchg
add
out
xchg
mov
repnz
test
pop
xor
mov
fmuls
lahf
lahf
push
mov
nop
and
dec
pop
shlb
adc
sub
in
xlat
insl
xchg
jno
movups
xchg
jp
test
cmp
sub
hlt
mov
pop
inc
insb
sbb
jne
or
jmp
stc
or
jno
lea
xor
jbe
push
fistpll
xor
cs
in
rcrb
mov
daa
in
sub
push
loopne
test
inc
mov
add
push
pop
add
popf
add
inc
dec
imul
push
test
lcall
jb
leave
jae
cmp
sub
and
inc
shrb
add
fsts
push
sbbb
je
fists
ret
add
xchg
mov
ficoml
out
xor
mov
sub
xchg
cmp
out
in
lahf
pop
inc
or
sbb
ffree
out
jnp
mov
xor
pop
std
mov
in
xor
mov
push
cmp
insl
mov
jl
cmc
add
adc
stos
pop
and
cmp
pop
sbb
or
mov
cwtl
sub
xlat
arpl
enter
dec
mov
sub
loopne,pt
nop
push
xchg
leave
push
xchg
roll
sub
aad
fnstenv
jp,pt
mov
sbb
pop
test
dec
mov
leave
adc
repz
push
adcl
push
cld
dec
inc
jb
add
lock
in
pusha
repz
aad
shl
jns
shll
in
fadds
push
out
ftst
jns
jns
rcll
xchg
inc
cmpsl
sub
jg
mov
addb
pop
and
xlat
orb
rolb
dec
add
shr
mov
fwait
cmp
or
adc
jge
cwtl
xor
rorl
aad
xor
call
jge
inc
jb
out
mov
pop
sbb
stos
aad
jecxz
outsl
dec
pop
cmpb
and
pop
cltd
aam
inc
xlat
add
xchg
je
in
pop
imul
in
pop
lods
loope
fwait
sub
out
lock
adcl
popa
xor
mov
test
out
mov
into
pop
mov
lods
adcb
xor
and
bound
movsb
loopne
in
cmp
mov
insb
mov
xlat
sub
mov
mov
popf
mov
cs
mov
and
push
dec
ficompl
cmp
sbb
aad
ds
sti
sub
jnp
and
cmp
call
mov
pop
pop
mov
mov
into
add
sub
mov
push
sub
mov
mov
push
add
jecxz
xor
jnp
or
jbe
push
inc
xchg
jg
sbbl
inc
movsb
inc
pop
jge
jne
jnp
pop
out
loopne
pop
push
insb
out
rclb
mov
loopne
shl
push
jp
pop
test
popf
daa
pop
iret
xor
lds
mov
cmp
fisubs
mov
arpl
jnp
mov
inc
mov
pop
lds
icebp
inc
mov
and
mov
data16
jno
adc
flds
in
cwtl
stos
int
pushf
push
push
push
call
pop
add
adc
adc
push
sbb
sbb
inc
stos
sbb
fdivrs
mov
sbb
lret
sub
inc
leave
rolb
test
dec
sbb
mov
imul
je
shrb
into
sbb
sbb
pop
dec
mov
push
jnp
lahf
push
sub
ret
fbstp
cmpsl
sbb
and
add
mov
test
das
mov
dec
mov
jnp
cltd
or
mov
cld
test
test
jb
popf
mov
jmp
push
cmp
pop
popf
or
inc
lret
iret
mov
sarb
shrl
xlat
add
loop
aam
sub
int
out
arpl
rol
jno
in
push
inc
jb
jecxz
inc
dec
xchg
dec
jo
add
loope
jp
mov
mov
scas
xchg
cltd
cltd
lret
popa
hlt
ljmp
xlat
sub
mov
mov
sub
jmp
adc
fs
pop
ret
lahf
and
dec
imull
jp
mov
xchg
jae
scas
or
insb
scas
cmp
mov
jge
aam
sti
pop
repnz
or
mov
jno
mov
xor
pusha
pusha
in
outsl
or
pop
sub
sbb
push
or
daa
imul
rolb
jae
dec
aam
stos
lock
mov
xor
sub
mov
xchg
push
jne
scas
add
popf
lret
loopne
add
and
cmp
cs
roll
in
cmpb
and
std
adc
nop
in
cmp
cmp
xor
aas
fs
xchg
xchg
and
insb
out
pop
hlt
cld
icebp
jae
ret
mov
int
push
pop
inc
or
mov
repnz
rol
cmp
adc
mov
push
pop
fbld
jl
push
leave
xor
call
add
leave
sti
or
inc
icebp
out
jecxz
mov
pop
sbb
pusha
xor
sub
sbbb
repz
loope
lds
fidivs
add
or
xchg
popl
xchg
sub
xchg
ljmp
inc
jb
xchg
shll
mov
mov
daa
mov
cli
xchg
cmp
cmp
push
js
dec
sbb
in
jmp
add
fists
pop
out
jae
mov
xchg
mov
nop
pop
push
sub
pop
cmp
shrb
jge
ja
and
xchg
bnd
jmp
and
in
nop
orl
int3
pop
mov
sub
add
ja
mov
jg
cmpsl
mov
sti
or
push
cs
movsb
stos
push
outsl
stc
rolb
push
xchg
es
push
in
cmc
out
outsl
cmp
mov
call
idivb
pop
adc
pop
cltd
dec
xor
xchg
ja
imul
add
sbb
sbb
das
cmpsl
and
inc
std
push
vcvtsi2ssl
add
das
aam
mov
stos
xchg
dec
fwait
push
xor
and
into
fcoms
inc
mov
mov
es
ljmp
mov
jo
dec
jnp
jno
cmp
addb
push
xchg
and
xchg
xor
mov
fcomps
fmull
pop
aam
pop
js
test
bound
jg
daa
popl
ds
in
cmp
jmp
std
jno
dec
stos
shrb
cli
xor
mov
adc
add
jle
cmpsl
and
cwtl
and
std
pop
popa
outsl
and
lock
movsb
xor
jle
xchg
jle
imul
cmp
xor
divps
movsl
adc
inc
mov
js
test
push
std
sti
push
inc
out
push
leave
imul
mov
lods
cmp
jbe
sub
cwtl
scas
add
mov
outsb
push
out
or
loop
inc
jge
popa
push
xor
inc
into
scas
sub
movsl
pop
out
mov
int3
xor
mov
arpl
loope
js
sbb
loope
fbld
jp
pop
int3
inc
sub
aaa
inc
and
lods
lret
and
stos
fwait
arpl
and
shrb
cmp
subl
cmp
pcmpeqw
ret
mov
mov
nop
jnp
xchg
or
int
repnz
fcmovnb
pop
rcrb
push
test
stos
aaa
shll
inc
fisubrs
cld
mov
xchg
mov
add
mov
lock
cmc
les
jns
xchg
jbe
mov
nop
push
data16
push
fsubs
sub
cld
pop
cmp
jge
xchg
fimuls
adcb
jge
das
xor
idivl
nop
iret
out
sbb
imul
pop
jg
cmp
sbb
jge
cmp
jno
pop
xor
pop
mov
mov
shlb
cli
das
mov
in
adc
mov
inc
sbb
pop
adc
sub
push
cli
notl
imul
mov
push
cmc
push
in
lret
jno
pop
jge
hlt
push
fstp
adc
cmp
iret
push
sub
mov
pop
push
sub
aaa
mov
and
cmpsb
lcall
or
push
push
push
and
add
dec
rcrb
adc
push
movsb
or
mov
je
adc
frstor
pop
movsl
pop
in
cli
mov
cwtl
mov
psubusw
test
fisubl
ror
jmp
pop
mov
dec
inc
popf
sbb
repz
adc
idivb
mov
xchg
mov
addr16
or
pop
dec
imul
add
sub
cmc
and
lods
and
adc
jle
and
stos
inc
inc
push
leave
sub
stc
mov
mov
sub
xor
lahf
imul
jp
pcmpeqw
add
fldenv
add
pop
stc
mov
fucomp
insb
lret
repnz
or
cmpb
and
fcoms
pop
addr16
sahf
xchg
or
jmp
mov
jo
jmp
in
dec
push
es
jge
clc
add
mov
cmpb
lock
out
aad
pop
popa
outsl
js
mov
movd
jne
sbb
push
jmp
pop
test
int
sbb
shlb
add
mov
enter
mov
xchg
mov
loop
dec
lcall
iret
xchg
pop
mov
cmp
jmp
repnz
cmp
sub
jne
mov
or
lock
repz
cmp
cli
adc
inc
daa
pushl
out
call
ret
ret
test
mov
imul
insb
xchg
nop
orl
jp
ljmp
nop
cli
mov
aad
pop
push
xor
xor
push
xchg
jg
mov
or
dec
dec
cmp
scas
inc
pushf
dec
lds
push
xchg
push
lahf
adc
xchg
gs
lock
or
fsubrl
adc
jmp
jge
in
aas
fldenv
jl
or
lock
test
nop
push
fst
mov
mov
imul
and
inc
mov
stos
xchg
dec
in
outsb
sbb
xor
adc
cwtl
jns
add
ja
inc
jae
xor
lret
xchg
daa
aaa
ds
pop
sahf
lahf
push
sub
lock
mov
ss
les
adc
into
pop
sbb
shld
inc
push
dec
or
lret
inc
mov
adc
shlb
sub
cmp
aam
and
daa
icebp
in
cwtl
arpl
test
sbb
daa
nop
mov
arpl
sub
push
out
dec
and
dec
cmpsl
fisubs
adc
bound
fmull
rclb
adc
loopne
jno
cmc
jne
mov
xor
popa
xor
pop
push
jo
in
fisttpl
loope
push
inc
push
jmp
jo
cmp
fldenv
in
mov
stos
inc
push
mov
in
sub
popf
loopne
sti
int
lahf
insl
out
js
and
xchg
add
mov
or
popa
pop
out
inc
pop
into
outsl
fcomps
cmp
mov
jmp
lods
call
das
les
aad
mov
pop
ds
lret
sahf
xchg
scas
pop
test
loope
pop
push
xor
mov
les
adc
scas
mov
push
xor
push
cmp
xor
into
push
lahf
inc
add
ror
xor
cld
or
in
imul
dec
cmc
scas
subl
pop
dec
stos
dec
lea
inc
fsubp
fisttps
add
mov
pop
dec
xor
push
cmp
in
and
xchg
dec
cmp
sbb
cmpsl
pop
pop
push
movsb
and
adc
lahf
cmc
lods
pop
aas
enter
decb
sahf
cmp
push
mov
add
mov
push
pop
test
stc
mov
mov
pop
adc
aaa
jo
dec
mov
mov
add
mov
mov
push
push
iret
mov
add
and
push
nop
iret
push
cmp
jo
test
fldl
arpl
or
pop
imul
or
adc
test
sub
sub
cmp
stos
into
lahf
or
movsb
cs
mov
mov
adc
ret
mov
ret
jo
orb
pop
js
lds
xchg
cmc
lock
psubsb
cwtl
enter
sub
cmp
fs
fstpt
jbe
cltd
cmpsb
add
aad
lea
mov
test
fsubr
jae
inc
iret
inc
incl
sbb
inc
push
dec
add
enter
jmp
ret
mov
push
push
daa
xor
xor
adc
sub
nop
jg
shl
xchg
movsb
test
rorl
insb
and
pop
or
neg
and
outsl
and
stc
repz
subl
sbb
pop
nop
mov
add
mov
pop
push
in
pop
in
fs
pop
mov
jl
insl
out
test
mov
adc
sti
xor
push
jo
insb
subl
mov
cmpsl
mov
pop
andb
orb
mov
test
xlat
push
jns
or
cs
or
les
push
fnstcw
mov
outsb
xchg
imul
sub
push
inc
mov
pop
popf
push
insb
and
and
cli
daa
cmc
out
pop
imul
jbe
jmp
out
push
stos
leave
mov
mov
jne
dec
sbb
dec
sti
and
lret
arpl
aas
mov
jle
xlat
add
adc
in
test
sub
outsb
sub
fs
inc
mov
fsubrl
or
mov
and
fld
mov
mov
sub
mov
cli
nop
pop
call
test
data16
mov
jge
fimull
sbb
ja
mov
je
mov
push
test
jb
je
lea
imul
loop
movsl
leave
push
outsb
pusha
xchg
pop
pop
imull
sub
mov
test
aam
push
pop
pop
outsl
fs
loopne
jle
push
stc
fsubrl
pop
gs
dec
stos
sahf
sti
push
arpl
pusha
mov
stc
sbb
push
fcomip
inc
push
arpl
sahf
shrl
add
in
popa
aas
ljmp
add
sub
out
xchg
mov
mov
ret
movsl
pop
loope
push
pop
stos
mov
inc
sub
pop
inc
inc
aad
mov
pop
dec
adc
mov
mov
insl
nop
adc
mov
divl
jp
mov
adc
jg
and
fs
jge
adc
cld
jge
lcall
fldln2
gs
icebp
jae
std
stos
stos
sahf
cmpsb
mov
popa
movsl
cwtl
pop
popa
out
jl
out
sbb
push
repnz
clc
insb
ljmp
lods
jp
mov
pop
lods
mov
scas
dec
cs
mov
xor
or
and
stc
xor
lret
mov
test
mov
or
mov
dec
shll
das
gs
push
fwait
leave
inc
aad
out
in
push
jge
jge
and
outsl
pop
or
jne
out
and
jnp
adc
or
jge
insl
mov
lret
jmp
dec
push
rclb
data16
xchg
or
ds
cmp
pop
repnz
pop
out
sbb
dec
xor
fdivrl
jne
lods
test
shrl
xchg
xchg
pop
mov
sbbl
insl
nop
lea
fisubs
stos
mov
imul
movsl
in
call
mov
jo
dec
add
jns
xor
mov
push
add
or
fsubrl
insl
hlt
repnz
shlb
gs
fidivs
daa
shrb
cmp
pop
mov
das
test
pop
xlat
jno
rorl
std
add
imul
dec
je
daa
mov
fsubrl
jne
or
out
aad
mov
add
loope
pop
cmp
push
xchg
inc
iret
mov
lea
push
mov
sar
test
push
inc
outsb
in
jecxz
enter
xchg
cld
fisttpl
jle
adc
insl
jb
cmp
add
test
mov
hlt
xchg
pop
mov
cmp
fcmove
push
mov
pusha
imul
jp
mov
push
add
in
test
mov
pop
push
xchg
xchg
jo
cmp
and
fdivrs
pop
dec
jp
cmp
inc
mov
push
adc
or
adc
lcall
cmpsl
loopne
in
jp
leave
and
nop
popf
xchg
add
cmp
push
ret
decb
repnz
lock
test
mov
push
sub
mov
mov
cmp
je
cmp
cmp
add
rclb
inc
nop
lcall
rcrl
outsl
test
sbb
sub
das
lret
jmp
xlat
mov
insb
or
xchg
adc
push
push
aad
nop
int3
loop
subb
les
sbb
jns
inc
add
mov
in
jne
mov
mov
das
imull
mov
push
stc
sub
jl
xchg
jecxz
jb
push
aaa
mov
jl
shrl
int
cmp
jecxz
sub
pushaw
push
push
cli
jbe
lcall
mov
push
and
cmpsl
dec
shll
dec
roll
insl
rorb
andl
stos
adc
dec
mov
in
icebp
push
addr16
lcall
addr16
xlat
dec
mov
stc
lods
rcrb
test
insb
or
movsl
daa
jg
test
mov
add
dec
test
push
ljmp
aam
mov
int
ja
insl
mov
sti
lret
movsb
mov
ja
loop
or
push
push
cld
scas
cmp
dec
test
mov
inc
jb
shll
fiadds
lods
lock
addl
push
cmc
mov
sbb
inc
loope
loopne
or
sbb
adc
add
mov
sub
adc
int3
sub
sahf
imul
sub
or
lea
test
pop
andl
es
clc
add
dec
pop
push
cmpsl
xchg
push
add
pop
xchg
push
inc
movsb
negl
push
sahf
inc
xor
jg
insl
dec
adc
je
inc
jmp
add
lret
sub
int
pop
out
ret
xchg
ss
enter
sbb
out
xchg
repnz
in
sub
mov
je
push
nop
test
add
cmp
pop
cmpsl
cmp
mov
xor
arpl
ljmp
jno
stos
stc
xor
pop
push
ret
cmp
xchg
push
mov
jge
lcall
ja
mov
test
lret
push
xchg
cld
jnp
imul
dec
mov
add
fcmovnb
mov
sub
movsl
stos
or
aam
xor
mov
stos
movsl
mov
xor
adc
pushf
mov
cmp
and
iret
xchg
jge
aas
xchg
pop
pop
add
lock
insb
jg
aaa
xchg
stos
loope
int
ss
mov
shlb
xchg
dec
sarl
test
push
dec
xchg
push
mov
outsl
fs
push
test
dec
fsubrs
js
xchg
sbb
push
fbld
clc
pop
or
and
fcomip
mov
mov
cmp
push
cmp
mov
test
test
hlt
loopne
xchg
les
or
in
dec
sbb
dec
push
rorb
mov
cltd
dec
in
sub
popa
dec
cmp
xchg
inc
mov
fisubrs
dec
mov
stc
pop
cli
jl
adc
cmpsb
xor
int
aam
ret
add
sub
pop
push
fwait
jne
rcll
fst
adc
xchg
pop
into
pop
jns
fwait
movsl
sti
cmpsb
jg
loope
mov
ret
pop
jb
xor
sbb
call
mov
stc
mov
or
in
shlb
loop
xchg
data16
aaa
jl
mov
or
je
jge
mov
lret
mov
mov
fmuls
xlat
add
adc
cmpb
ss
mov
popa
add
in
lret
pop
test
add
jb
and
jae
and
data16
or
jnp
repz
mov
sub
xor
jg
scas
mov
je
cmpsl
jnp
les
xor
sub
aam
push
pop
inc
add
xchg
fxch
mov
in
decl
les
aas
lods
dec
pop
adc
outsl
dec
popa
test
cs
and
sub
mov
mov
jnp
pop
outsb
jecxz
cmpsl
movsl
inc
mov
mov
sbb
pop
ljmp
adc
pop
sbb
cmpsl
push
outsl
jp
inc
sarb
into
rorb
js
cmp
mov
push
pop
into
mov
aas
cmp
xchg
jae
incl
pop
or
and
insb
xor
in
pop
ret
adc
pop
sub
sub
push
popf
mov
add
jp
loope
push
push
pop
cmp
sbbl
add
test
adc
repnz
lds
inc
inc
mov
out
push
add
cmp
xchg
lock
push
lcall
jnp
mov
stc
cmp
sub
pop
ret
adc
stos
adc
mov
push
cmp
sub
imul
shlb
adc
js
mov
movsl
and
mov
mov
cltd
sbb
int3
xchg
jle
jecxz
mov
jle
and
pop
jecxz
les
daa
and
mov
push
inc
lcall
sbb
leave
hlt
pop
lea
lods
call
jle
mov
ja
ret
jae
lods
sbb
xor
jge
mov
gs
jmp
xchg
je
arpl
call
ja
push
lret
aad
mov
dec
or
roll
cmp
jp
shl
mov
sub
xchg
gs
hlt
aad
daa
nop
xor
mov
out
and
dec
movups
aas
aas
xchg
push
rorb
sbb
mov
xor
mov
icebp
clc
shl
std
fisubs
jle
pop
xchg
jmp
sarl
outsl
inc
mov
mov
cltd
push
ret
pop
cmp
imul
sub
aam
out
loope
fidivl
xchg
xlat
add
dec
rorb
xchg
sbb
fidivl
jmp
xchg
sub
mov
repnz
ja
fbld
xchg
fs
mov
cmp
int3
push
dec
xor
inc
xor
pushf
dec
mov
jns
stos
sbb
xor
sub
push
aaa
movsb
divb
pop
les
mov
sar
push
mov
push
jno
sub
jb
jp
arpl
pop
mov
sub
ljmp
jnp
xor
out
xchg
mov
inc
adc
filds
scas
and
pop
sbb
mov
int
and
add
dec
je
outsb
mov
add
inc
mov
pop
xlat
cmp
jbe
cmp
pop
inc
test
fs
push
or
mov
cmp
inc
icebp
pop
fcmovbe
mov
push
hlt
push
dec
out
fisubl
js
movsl
ds
addr16
fcoms
pushf
pop
jmp
push
jmp
rcll
fsubrp
inc
cltd
mov
pop
mov
cmpsl
push
int3
arpl
lods
insb
mov
dec
sub
push
sub
mov
inc
jno
mov
jne
inc
mov
sbb
and
jbe
sbbl
iret
les
and
mov
lock
imul
movsb
dec
pop
sar
sbb
dec
scas
das
cmpsl
loop
repz
leave
push
push
imulb
push
cmpsl
pop
out
inc
sub
lds
pop
imul
mov
push
or
xchg
enter
and
and
por
sbbb
lods
fidivrs
mov
adc
push
cld
lret
insb
pop
xchg
xlat
mov
pop
jnp
jle
xchg
cs
pop
rcrl
and
cmp
sbb
inc
pop
push
jno
adc
cmc
fsubl
pop
sub
mov
pop
lcall
cmpsb
sub
dec
mov
daa
mov
daa
testb
add
bound
iret
shll
jmp
sbb
dec
test
in
push
mov
out
adc
sarl
inc
xchg
call
repz
leave
in
xor
and
incl
adc
jl
adc
dec
negl
shrl
ljmp
outsb
xor
adcb
scas
or
jbe
inc
scas
clc
adc
enter
and
xchg
sub
stos
leave
cmp
mov
lret
lret
xor
inc
loopne
scas
repnz
fldt
push
sbb
push
jmp
push
imul
aad
and
icebp
cwtl
data16
ja
pop
arpl
cmc
xor
mov
jns
jg
add
test
and
std
add
cs
fildl
test
pushf
sete
sub
aas
out
in
in
fdivl
mov
mov
loopne
filds
inc
pop
enter
cmp
xor
xor
jecxz
lret
jo
in
mov
mov
mov
jnp
sbb
xchg
jmp
popf
or
scas
hlt
icebp
cmp
int3
ljmp
push
inc
sbb
js
dec
test
cmp
adc
xor
in
call
cmp
fwait
sbb
xchg
mov
outsl
imul
andl
mov
popf
ret
jo
aad
es
add
mov
xchg
sub
mov
sub
clc
mov
push
cmpsl
mov
push
fldenv
jmp
xchg
and
push
mov
cmpsb
cmpsb
or
fdivl
push
cmc
and
add
cmpsb
inc
dec
imul
fwait
loopne
push
ret
out
pop
pop
lret
xchg
fs
pop
xor
xchg
inc
out
iretw
add
mov
lods
sbb
mov
push
repnz
roll
xlat
and
mov
push
icebp
in
jmp
enter
jns
cli
mov
aas
mov
lods
gs
dec
pop
or
pusha
inc
xchg
test
sbb
repnz
notb
mov
stos
mov
inc
aam
add
mov
rorb
xchg
mov
adc
jbe
aad
shl
xchg
out
lea
jnp
pop
push
sbb
mov
push
mov
and
loopne
and
ss
xchg
dec
aam
xor
inc
fcmovnu
mov
push
mov
xchg
es
into
js
mov
fsubrp
ja
push
pop
hlt
in
or
into
out
test
cs
jo
inc
xor
pop
fdivrl
leave
arpl
push
sbb
lcall
roll
jg
fcomps
xchg
in
sbb
cld
cltd
mov
outsb
cmc
and
jl
xor
cmp
fldcw
xor
sbb
xchg
cltd
cltd
in
jecxz
mov
xchg
cli
adc
lea
dec
sub
out
rorl
js
in
scas
or
mov
mov
insb
inc
lods
mov
mov
cwtl
inc
scas
icebp
xorl
fnstsw
push
mov
shll
xchg
sbb
popf
fs
clts
clc
ljmp
loop
fcomps
pop
pop
push
pop
dec
add
xchg
je
out
xchg
fwait
mov
mov
push
or
xchg
xchg
jp
adc
std
lds
xlat
adcl
add
push
js
add
hlt
popa
mov
mov
xor
repz
push
push
shr
jb
mov
and
int
rorb
stos
xchg
fcoms
jno
pop
pusha
ljmp
push
fcompl
adc
fstpt
mov
pop
jne
fistl
jl
mov
clc
jg
xor
add
movsb
jo
pop
inc
add
mov
mov
hlt
mov
scas
cmc
inc
in
and
jno
outsl
push
add
iret
adc
in
fisttpl
ljmp
sub
push
and
into
cltd
lret
mov
popa
cmp
imulb
xor
fistpll
loop
push
dec
pop
insb
and
push
rclb
jo
and
push
push
add
cmpsb
xchg
push
lcall
adc
push
loop
mov
jg
gs
in
mov
bound
jle
dec
in
in
popa
shll
and
push
inc
inc
dec
cmp
out
pop
jp
fisubrl
cmc
hlt
mov
fstpl
insl
and
movsl
mov
sub
mov
lods
mov
shrb
outsb
and
lret
push
dec
xchg
ret
mov
xor
leave
in
xor
sub
imul
push
push
jb
or
add
fwait
testb
in
and
or
insl
sub
mov
test
das
cwtl
into
pusha
aad
clc
es
fcmovne
adc
or
xchg
negl
dec
pop
scas
mov
jns
mov
or
xchg
aas
xor
sbb
arpl
data16
mov
daa
mov
cwtl
push
int
lahf
xor
mov
cmp
rcrb
rcll
mov
add
cmp
lea
xor
bound
in
and
or
jb
fnsave
dec
push
push
dec
daa
sbb
jmp
shl
nop
rolb
pop
fcoms
sbb
movsl
dec
cmp
push
xor
push
fcmove
lahf
scas
or
pop
cwtl
mov
out
orl
jae
cwtl
jo
imul
out
push
push
std
jp
mov
pop
cltd
in
jmp
popf
or
xchg
dec
rcll
mov
jecxz
aaa
inc
push
stc
sbb
add
or
out
arpl
add
out
mov
popl
imul
adc
test
cld
and
sarl
and
dec
pop
pop
pop
mov
xchg
testb
jp
dec
pop
jno
sub
pop
sbb
pop
push
sbb
scas
mov
mov
or
add
dec
jne
cli
test
mov
push
cmp
test
push
sub
mov
ljmp
pop
lret
dec
or
mov
stc
cmp
jns
pop
clc
and
mov
hlt
cmp
mov
mov
adc
stc
sti
mov
push
loopne
dec
aam
int
mov
cmp
mov
enter
add
loope
adc
mov
add
inc
ret
leave
add
aad
xor
loope
pop
jns
scas
mov
mov
icebp
pop
imul
inc
sbb
mov
mov
add
pushf
mov
insb
fisubl
fiadds
mov
repz
ss
xor
sahf
int
inc
push
sub
inc
jno
data16
jg
mov
cmp
daa
loope
int3
or
mov
lods
sub
adc
sbb
sub
fsubrl
mov
cld
cs
cltd
stos
aaa
js
vcvtps2pd
jbe
addr16
cmp
or
adc
test
cmc
lods
mov
gs
fs
aas
inc
mov
or
xor
push
ret
test
or
push
jne
pop
cmpb
pcmpeqd
repz
xchg
outsl
in
sub
scas
andl
pop
cmp
mov
mov
fwait
jb
fidivl
sub
pop
sub
mov
jbe
xchg
cmp
je
pop
ljmp
push
js
insb
sbb
dec
sbb
inc
stc
cmp
aam
jbe
nop
fidivl
cmp
and
pop
flds
cld
scas
xchg
xor
push
push
and
into
js
nop
cli
adc
sbb
std
in
jl
sub
jle
outsl
pop
mov
enter
cmpsl
pop
andl
jo
sbb
push
mov
cmp
jmp
jecxz
mov
dec
test
and
insb
sbb
sar
cmpsl
sub
or
jl
fwait
push
test
mov
dec
lcall
xchg
cmp
or
aaa
dec
iret
mov
and
and
xor
scas
fistpl
dec
es
inc
cmp
insb
les
popf
jecxz
xlat
xor
adc
fdivrs
arpl
mov
cld
and
dec
add
jge
out
cmp
in
aaa
scas
shrb
movsl
mov
data16
aam
and
jne
adc
cs
xchg
fcom
push
int
mov
jecxz
push
bnd
cwtl
cmp
cmpl
sub
push
shl
dec
inc
leave
jp
or
cmp
adc
rolb
mov
test
cmpsl
xchg
dec
daa
cltd
jge
shll
hlt
jb
fsts
pop
add
mov
cmp
test
sbbb
pop
jmp
lret
aad
out
add
icebp
cmc
nop
jae
loop
ret
cmpsl
aam
sub
xchg
and
mov
imul
mov
pusha
out
test
sbb
jb
addr16
push
rcrl
push
bound
dec
and
or
and
out
jae
in
cmp
js
mov
sahf
int3
inc
loopne
cmp
mov
mov
lret
push
jmp
inc
xchg
aam
dec
hlt
in
test
lea
insl
dec
push
pop
and
out
xor
push
cmp
ljmp
popa
lcall
out
inc
fisttpll
push
out
ss
adc
lret
mov
jmp
xchg
into
mov
or
leave
xlat
mov
jmp
push
xchg
xchg
or
mov
andl
cmp
out
mov
mov
fnstenv
pop
scas
lretw
mov
xchg
gs
and
jp
and
inc
mov
loope
repz
sbb
je
pusha
jmp
push
aaa
in
fs
dec
cmp
fimuls
mov
xor
pop
cmp
into
out
and
and
sbb
out
sub
dec
push
out
mov
xchg
shrb
testl
inc
repnz
mov
lea
fildl
add
pop
popa
popa
insb
leave
dec
or
cli
dec
enter
push
pop
shrb
inc
adc
xlat
inc
daa
fnsave
roll
adc
mov
mov
jecxz
mov
call
mov
mov
and
je
stc
fsub
lret
dec
xchg
fldcw
pop
out
inc
mov
sub
jg
inc
nop
xchg
mov
sub
push
mov
call
adc
push
pushf
sub
sub
sti
movsl
dec
rolb
shlb
aas
mov
ds
insl
cs
xchg
push
cwtl
lahf
sbb
push
leave
std
or
in
icebp
adc
mov
lea
xor
push
insb
iret
cld
mov
dec
jge
or
scas
pushf
cmc
mov
push
dec
daa
sub
int3
adc
je
int3
pusha
mov
and
add
jecxz
lds
push
rcr
popf
pop
fildl
mov
adc
repnz
push
pop
lahf
push
insl
sahf
mov
xchg
pop
mov
lahf
sub
xchg
add
cmpsl
insb
out
cli
xor
lahf
push
inc
lods
mov
std
mov
sti
jnp
clc
je
cmp
sbb
pop
sbb
repz
ja
or
pop
pop
aam
mov
xor
fadds
ret
fidivrs
push
in
mov
dec
dec
mov
jbe
lret
ftst
lret
xor
sbb
inc
and
xchg
rcrb
xchg
dec
rorl
sub
mov
vmwrite
hlt
fs
xchg
in
cmp
adc
addr16
test
sarl
sbb
inc
jne
lea
jne
xlat
int
clc
fcmovne
mov
ljmp
rcrb
enter
push
mov
push
jl
jo
andl
inc
rcrb
pop
inc
arpl
lds
adc
dec
test
cs
jae
adc
punpcklwd
mov
fimuls
and
int
sub
or
xor
icebp
mov
inc
subl
push
sub
fcomps
filds
push
xchg
stos
shr
jg
popf
cmc
adc
jo
mov
inc
aas
dec
add
jp,pn
fstp
mov
or
sub
adc
inc
jne
sub
inc
movsl
ds
fs
xor
xor
mov
bound
orl
lcall
push
mov
repnz
mov
repz
push
pop
es
sbb
push
xchg
cmp
and
mov
divl
jp
xchg
ja
or
lods
xor
aad
jp
jl
lahf
push
pop
mov
sti
fcompl
inc
xchg
in
je
mov
pop
rcll
lds
push
add
sub
lods
mov
jg
add
sti
add
cmp
xchg
sti
ret
add
pop
jle
arpl
sbb
call
mov
int3
pushf
cmp
mov
les
imul
inc
mov
daa
sub
jg
flds
into
into
mov
dec
push
std
xchg
loop
sahf
aam
cmp
mov
mov
inc
jp
mov
nop
mov
int
dec
shrl
ret
jmp
jge
sbb
bound
sbb
inc
repnz
push
iret
xor
adc
lahf
filds
cli
jg
fdiv
xor
or
dec
notb
and
mov
mov
ds
push
loop
cmp
sub
cmp
int3
jecxz
lock
sub
aaa
hlt
push
lds
xchg
jbe
pop
inc
stos
scas
sub
add
ds
pop
add
pop
into
imul
lea
fldcw
movsl
jne
std
cmc
je
stos
xchg
je
pop
cmc
pop
imul
lock
int
test
es
pop
jne
test
or
test
out
test
ret
jle
es
loopne
std
data16
imul
bound
in
daa
cmp
out
pop
push
and
lods
leave
imul
mov
cltd
lret
cmpsb
leave
lea
cmp
das
or
icebp
mov
dec
outsb
je
mov
mov
or
subl
add
pop
pushf
push
mov
lds
ret
pop
arpl
push
mov
push
imul
cmp
sbbb
stos
or
jb
rorl
call
fstpl
stos
xlat
push
xlat
in
jl
imul
scas
daa
icebp
jns
imul
jae
sbb
hlt
add
out
xor
pop
jp
or
fwait
pusha
in
lds
subb
rclb
mov
mov
and
inc
std
out
lret
sub
stos
push
pusha
lock
mov
jg
stc
hlt
jno
insb
pop
add
xchg
pop
push
scas
xor
addr16
je
js
aam
xlat
cmp
lock
push
mov
xchg
test
xor
imul
push
test
pop
aad
scas
and
pop
lcall
mov
xchg
dec
imul
scas
jl
inc
fcmovnbe
ret
inc
fdivs
push
sub
cmp
lods
cs
dec
insl
scas
or
leave
dec
jae
loope
in
cmpsb
pusha
xchg
data16
bound
dec
test
rorl
adc
into
ljmp
cmp
mov
mov
cltd
std
ficoml
aas
insb
fstpl
mov
dec
and
jl
adc
imul
mov
out
mov
mov
aad
leave
or
inc
fwait
dec
leave
imul
lods
fiadds
adc
arpl
ds
stos
add
mov
inc
add
jne
or
mov
push
fs
das
sbb
cwtl
add
dec
addr16
mov
sub
stos
cmc
xchg
xchg
push
cmp
into
gs
inc
mov
push
and
aaa
rorl
adc
popf
dec
mov
data16
aad
mov
dec
repnz
lret
push
jmp
cwtl
sub
pop
rcll
lods
loope
pop
lds
testb
push
mov
xor
fisubrs
push
sbb
pop
lods
push
int
xchg
pop
xorb
xor
pop
scas
shl
xchg
pop
sub
mov
mov
js
imul
mov
hlt
lahf
pushf
sbb
push
mov
xchg
and
out
or
push
xor
jno
xchg
push
loope
xchg
jns
sti
insl
xor
test
cmp
mov
in
aaa
js
jo
inc
das
filds
cmp
shl
xor
dec
aad
xor
fimuls
jmp
insl
xchg
mov
pusha
std
aad
jge
lock
xchg
or
lahf
add
psubd
pop
mov
daa
lods
out
jl
push
inc
ret
mov
mov
std
mov
xor
imul
adc
in
inc
iret
pop
ret
or
push
gs
sbb
psubsb
cmp
jmp
ja
mov
xor
sti
les
mov
das
cwtl
cmpsl
xlat
pop
stc
filds
cmp
icebp
cltd
das
dec
push
sub
push
repnz
jne
pop
sub
mov
push
lods
popa
adc
jae
cmp
mov
addb
movsl
sub
daa
shrl
ja
mov
les
sbb
std
push
leave
push
push
pop
mov
push
out
lods
dec
inc
jbe
outsl
mov
lret
fsubp
xchg
inc
adc
nop
lods
jno
jmp
clc
loop
jl
dec
dec
add
mov
xchg
add
jg
imul
sub
jmp
test
mov
insl
mov
jnp
and
cmp
cmpsb
mov
nop
daa
in
es
and
or
sub
fldt
inc
lret
jp
xchg
cmp
lods
sub
pop
adc
decb
pop
outsl
push
loope
mov
dec
add
xorb
andl
mov
or
int
sahf
and
pop
dec
stc
sbb
ljmp
jge
xorb
mov
cli
mov
dec
xor
addr16
cmp
ret
adc
xchg
in
mov
mov
repnz
mov
aas
sbb
imul
sbb
test
add
push
jae
jecxz
xchg
sbb
out
fmull
jp
xlat
dec
inc
push
les
dec
loopne
cmp
out
gs
inc
cltd
in
ss
cld
dec
je
sub
mov
and
mov
xchg
in
data16
imul
jecxz
sub
adc
mov
xor
les
loopne
sbb
lret
movsl
mov
ljmp
add
sub
ret
push
mov
adc
cmp
insl
mov
shlb
jge
jns
or
aas
jmp
daa
mov
cmp
aam
into
jae
xchg
jb
cltd
mov
les
dec
cmp
sub
fsubrl
inc
inc
cmpsl
jne
jne
add
sti
cwtl
pop
jne
mov
push
fwait
and
xor
push
iret
test
push
xor
jb
xlat
sysenter
insb
and
adc
pusha
mov
xchg
ss
xor
mov
leave
ds
test
xchg
sub
fnsave
and
pop
sbb
xchg
xchg
add
mov
and
inc
xchg
scas
subl
jle
stos
cmpb
ret
daa
div
mov
adc
dec
push
insl
ljmp
cmp
imull
mov
add
mull
cmpl
pop
pop
scas
push
in
jbe
sub
and
out
mov
cmp
lcall
arpl
in
mov
mov
js
in
cmpb
fwait
adc
fmul
cld
jb
push
cli
cmp
xor
inc
fnstenv
and
jle
stos
decb
inc
mov
negl
lret
imul
adc
scas
inc
mov
nopl
je
leave
out
lods
cmpsl
fimuls
cmp
call
fwait
sbb
inc
stos
mov
popf
test
and
aaa
stos
je
push
int
icebp
pusha
ret
inc
stos
xchg
and
add
mov
mulb
cmp
ret
bndldx
in
loopne
loop
std
adc
mov
cmpsl
xor
dec
push
rcll
shrb
mov
mov
int
test
out
xor
adc
push
cmp
dec
cmp
pop
xchg
push
pop
cli
cwtl
paddsw
jmp
mov
sbb
sahf
sub
call
mov
inc
xchg
sub
movsl
xor
das
or
aad
cs
sbb
xchg
daa
push
mov
js
add
cmpsb
adc
mov
into
push
or
jae
push
aam
mulb
ror
pop
sub
std
adc
cld
mov
rcrl
mov
out
pop
adc
loopne
sbb
pop
fwait
insb
jp
pop
and
adc
ds
mov
sbb
jg
pop
data16
mov
jne
inc
stc
call
es
fstpl
dec
or
adc
sub
fadd
mov
and
out
dec
testb
icebp
sub
mov
out
jne
push
imull
pop
decl
mov
and
fwait
sbb
add
or
loope
pop
jge
test
dec
fists
or
lahf
fmuls
ja
add
frstor
sbb
call
and
cmp
add
mov
jmp
mov
fs
pop
xor
test
and
arpl
adc
push
iret
sub
jo
push
jp
lcall
sub
ficoms
rcll
dec
insl
fimull
or
mov
pop
cmp
pop
repz
lret
nop
test
imul
lds
cmp
int3
add
sbb
sahf
pop
push
sub
loop
adc
xor
jb
ret
popf
inc
xchg
sub
clc
pop
fmuls
test
fcmovnb
scas
mov
out
push
xchg
mov
mov
pop
jl
push
std
sbb
aam
loope
xor
xlat
adcb
push
insl
xor
pop
aaa
imul
cs
inc
fisttpll
inc
jge
dec
ficoms
loop
fisubrl
call
clc
pand
inc
test
mov
mov
cs
insl
cmp
sub
pop
jo
sub
xchg
aas
movsl
lret
stos
cs
xor
and
out
sub
jo
leave
cmpsb
out
in
rcrl
and
xchg
mov
xor
mov
je
aad
data16
mov
fistpl
roll
movsl
loopne
inc
rcrb
adc
xor
dec
data16
inc
std
pop
repnz
xor
jae
aam
insb
mov
push
sarl
push
cmpl
lahf
call
adc
leave
sub
sub
or
jg
test
cmpsb
push
fistps
loope
cmpsb
loope
pop
xchg
lea
cmp
sub
or
fmull
in
movsl
subb
lea
push
cmp
shrl
push
sbb
cmp
jne
flds
mov
pushf
or
jo
sbb
mov
icebp
jge
pop
xchg
push
pop
mov
or
and
js
in
aam
or
dec
and
leave
jmp
xlat
sub
outsb
adc
inc
mov
adc
cmpsl
xchg
fucomi
mov
xlat
adc
push
cmc
mov
dec
negb
dec
test
jp
ja
or
hlt
clc
iret
sbb
adc
bound
jp
jecxz
out
ret
gs
les
sbb
add
mov
in
cmpsb
insl
clc
lock
jae
sub
mov
sti
jo
mov
mov
mov
aam
cmp
cmpsb
adc
repz
flds
mov
bound
and
mov
lea
mov
movsb
push
sbb
inc
icebp
dec
lcall
push
pop
mov
mov
wbinvd
fidivrs
push
add
inc
or
repz
ss
xchg
xchg
in
movl
lods
aas
adc
jecxz
loopne
aad
scas
pop
das
push
sub
clc
mov
test
inc
sub
inc
or
and
cli
lret
xor
fsubrl
orb
cwtl
lcall
test
std
adc
jmp
adc
jl
mov
and
es
xor
cld
cmp
mulb
xchg
inc
hlt
repz
mov
in
pop
inc
aam
pop
repnz
xor
pop
popl
adc
negl
add
push
add
mov
pop
push
lcall
je
lcall
sti
mov
ja
push
dec
and
add
add
xor
add
inc
inc
or
mov
dec
pop
mov
xadd
jge
push
inc
mov
jecxz
push
enter
js
jmp
leave
xchg
mov
jecxz
inc
adc
test
pop
cld
ds
push
clc
sub
lcall
xor
andb
aaa
pop
xchg
and
xchg
ret
mov
movsl
addl
shrl
or
jmp
cld
mov
mov
iret
mov
sub
inc
arpl
mov
pop
outsb
jae
adc
aad
pop
test
or
adc
and
leave
addr16
push
jno
cmpsb
into
mov
in
jp
loopne
adc
add
clc
stos
test
cmp
push
xor
lret
push
jne
movsl
hlt
xor
popa
cmp
cmp
adc
jbe
hlt
xchg
aad
ja
les
pop
mov
lcall
movsb
mov
add
xlat
push
lret
ret
andl
and
xchg
ss
repz
or
or
outsb
lock
jo
data16
adc
sarb
outsl
xor
negb
cmp
nop
sub
adc
outsb
inc
jmp
lods
in
adc
dec
adc
in
movsl
pop
mov
mov
xchg
icebp
or
sbb
and
cmovns
stc
pop
sub
ljmp
fs
xchg
int
mov
jno
add
mov
gs
xlat
orl
ret
imul
push
lahf
jmp
aam
addr16
push
mov
pop
dec
jne
clc
std
fisubrl
out
mov
cmp
outsw
push
xor
or
sub
jae
lcall
pop
negb
pushf
je
sub
outsl
xor
push
out
mov
loopne
cmpb
repnz
xor
mov
gs
loopne
cs
pop
add
mov
stos
lods
and
sar
clc
in
add
sbb
mov
test
push
mov
xchg
icebp
sbb
loope
sub
pusha
jae
lahf
inc
mov
push
roll
xchg
outsb
insb
or
dec
addr16
cmpsl
jns
fidivrl
loop
mov
add
add
add
lds
enter
mov
movsb
and
mov
adc
in
sti
xchg
in
push
popf
inc
stos
lret
cwtl
sahf
mov
cltd
xor
mov
pop
cmpsl
cltd
lahf
ret
aad
lahf
sbb
popf
sti
or
mov
movsb
mov
push
jbe
push
lods
mov
xchg
subl
aas
xchg
out
pop
fmuls
fs
and
inc
leave
dec
xlat
mov
mov
mov
pop
sbb
jecxz
mov
push
and
js
adc
clc
fsubp
int3
cwtl
sahf
fwait
sub
xor
aad
outsl
push
xchg
stc
xchg
cmp
mov
rcr
push
jg
adcb
jge
or
dec
mov
push
dec
test
je
pusha
negb
mov
test
shll
push
imul
fs
push
pushf
adc
pop
push
mov
and
push
inc
xchg
jge
mov
bound
out
andb
rorl
int
fdiv
pop
icebp
sbb
inc
hlt
sub
mov
je
dec
xchg
test
push
loope
push
inc
arpl
or
sbb
jecxz,pt
mov
pushf
mov
xlat
sahf
js
jg
movsb
inc
mov
test
hlt
mov
mov
sub
inc
mov
push
mov
fistps
xchg
pop
push
mov
int3
add
mov
sbb
lock
arpl
sbb
jno
mov
mov
lret
push
and
xlat
movsb
xchg
fs
dec
add
push
loopne
inc
lds
dec
bt
iret
pop
dec
adc
insl
sub
mov
out
arpl
dec
push
inc
cmc
stc
cmp
stc
mov
push
dec
jl
jnp
in
cld
or
jge,pn
jp
paddw
jp
sub
sbb
int3
fs
xchg
rorb
js
pop
gs
fmull
push
call
out
xchg
mov
jnp
cmp
push
fisubrs
and
jmp
or
ficoms
inc
push
stc
setl
mov
mov
mov
test
pop
cwtl
add
pusha
stos
roll
mov
pop
adc
ret
add
iret
lock
fisubrl
cmp
push
cmpb
or
shrb
std
mov
ljmp
jne
test
lock
arpl
xor
test
icebp
aam
scas
adc
and
mov
stos
jge
or
push
iret
mov
hlt
out
inc
imul
or
jl
xor
scas
sub
xor
pop
push
mov
out
cltd
xor
or
movb
sub
rclb
pop
lret
imul
cs
push
imul
dec
xchg
add
sub
shl
jecxz
mov
cmp
and
out
sbb
and
notb
mov
pusha
lret
sub
dec
fistpll
adc
invd
insb
push
mov
mov
sbb
out
cmc
jne
push
cs
shlb
add
push
addb
lea
and
mov
mov
mov
arpl
mov
push
movsl
es
mov
lret
fidivs
in
aam
out
xor
lret
icebp
mov
popa
mov
xor
push
call
andl
pushf
xchg
ret
jb
icebp
jnp
fdivs
addl
dec
pop
xchg
sbb
sbb
mov
push
lahf
mov
nop
inc
cmp
rol
or
mov
inc
sub
clc
loope
loopne
jle
push
loopne
ds
in
jbe
or
mov
jmp
daa
mov
mov
mov
lds
je
xor
in
sub
or
arpl
test
loope
mov
loop
mov
mov
inc
call
sahf
xor
pusha
inc
je
cmp
mov
fs
insl
sub
fwait
push
imul
ret
mov
filds
dec
pop
pop
lahf
insl
popa
mov
cmp
out
add
mov
lea
add
push
ret
or
js
pushl
jl
pop
add
mov
pop
jns
cmp
sbb
sub
sub
mov
stos
xor
jb
push
mov
outsb
dec
add
push
jl
movsb
loopne
das
jns
aas
jle
int
mov
mov
push
adc
rorl
rcrb
test
or
pop
negl
stc
clc
or
lcall
jne
cwtl
insl
test
and
icebp
mov
xor
out
lds
rorl
xchg
pop
cmp
xor
cmc
rcrl
outsl
pop
nop
xor
addr16
psubd
or
pop
mov
sbb
popa
repz
push
jae
pop
incb
pop
bound
xor
pop
sbb
pop
scas
pop
pop
lret
cmpsl
xor
dec
call
xchg
popf
test
cli
in
movb
sub
mov
mov
pop
fmull
mov
ret
in
sub
add
pop
xor
int3
add
jmp
cld
repz
lods
std
loop
cli
repnz
xor
fnstcw
gs
shrb
xor
lea
jo
loopne
jle
enter
mov
mov
xlat
ljmp
sarb
push
or
pop
scas
into
daa
jnp
hlt
or
mov
jl
stos
jl
cmp
fcmovbe
or
imul
out
or
sbb
dec
fisttpl
add
lahf
dec
call
pop
out
cmp
test
push
dec
sarl
push
adc
xor
mov
fsub
pop
cmp
shlb
out
stos
push
xor
mov
lea
insl
mov
scas
sub
enter
in
dec
in
lret
push
fisubs
sbb
sar
pop
sar
jae
jae
sub
inc
lods
adc
das
push
int3
jg
in
bound
lahf
insl
enter
cmp
push
jl
addb
fs
mov
add
cmpsb
es
add
mov
pop
adc
imul
cmp
xor
mov
fmulp
dec
jecxz
jecxz
mov
xchg
or
test
add
arpl
jae
stos
cs
dec
dec
lods
add
fldl
cmc
jno
fstpt
es
stos
setae
cmpsb
xlat
cmc
vcvttps2dq
mov
pop
pop
fwait
sbb
xor
and
jb
insl
mov
int
inc
enter
adc
cli
xor
xor
or
outsb
stos
or
jo
fcoms
xor
test
cmp
bound
test
cmpsb
pop
cs
aad
push
adc
add
adc
jge
das
sbb
lods
inc
sbb
and
mov
lea
mov
notl
lods
or
sahf
jbe
stos
mov
mov
inc
sbb
mov
jnp
pop
and
cmp
int
fcoms
fs
mov
sub
push
ja
xchg
arpl
or
dec
pop
scas
ja
inc
sbb
and
pop
xchg
mov
push
andb
aaa
pop
sbb
cmp
insb
dec
xchg
fdiv
mov
push
pop
or
sbb
xchg
dec
cld
pop
rcr
adc
repz
sbb
or
adc
or
cli
xor
xor
adc
xchg
jp
insl
xchg
push
inc
pop
cmp
or
cli
mov
sbb
jbe
clc
mov
stos
in
xor
sub
aam
inc
xlat
mov
mov
adc
dec
shr
sahf
xchg
lods
test
lret
loopne
sbb
cs
adc
cld
data16
pop
jecxz
pop
in
mov
jle
push
cli
or
repnz
mov
inc
and
xchg
mov
mov
fildll
pushf
inc
aaa
fxch
mov
loop
int
lret
fmuls
xchg
mov
xlat
repnz
jns
push
sbb
or
cmpsl
mov
test
dec
sub
shl
xchg
dec
in
mov
xor
pop
cli
enter
jmp
jne
aas
outsl
pop
push
rorb
into
movsb
mov
and
cmp
sub
pop
lcall
inc
xor
xor
rolb
movq
adc
and
les
out
lds
mov
fimuls
test
push
lcall
push
xor
aam
cmp
das
sahf
fmuls
mov
adc
pop
sub
sarl
and
xchg
sub
clc
pop
xor
dec
bnd
mov
jno
in
popl
add
jmp
jno
stos
addr16
pop
or
add
or
and
std
or
push
or
in
aaa
lahf
mov
dec
lods
dec
mov
adc
mov
adc
pop
jecxz
xchg
cmp
ret
shlb
mov
pop
pop
pop
mov
xchg
and
je
jne
rclb
or
push
push
jnp
pushf
pushf
cld
sub
aam
fwait
jmp
mov
jmp
roll
jb
or
inc
sbb
push
jb
lods
xchg
mov
repnz
mov
cmp
insl
jp
and
shll
les
dec
in
fcompl
daa
es
sahf
mul
push
roll
jns
and
fisttpll
hlt
and
aam
and
mov
es
and
mov
out
mov
dec
js
sbb
xor
jbe
dec
icebp
repnz
lock
test
mov
into
icebp
out
lcall
sub
xor
push
insb
popa
sbb
insb
ja
dec
movsl
xchg
out
aas
ud0
cmpsb
into
mov
add
aam
push
and
jno
and
or
fcoms
push
pop
add
ficoms
cmp
fsubs
popf
mov
push
xchg
data16
pop
cld
mov
adc
in
inc
sub
mov
mov
pop
or
pop
cmp
mov
adc
pop
dec
das
roll
rcrl
int3
cmp
mov
cmp
or
out
and
push
shll
fldcw
int
inc
or
jl
repz
pop
shrl
xor
sbb
les
pop
mov
add
int3
out
push
out
fs
inc
cmp
add
or
cmp
mov
loope
xor
push
lcall
pop
jno
cmp
fcoms
mov
xlat
adc
decl
jmp
jge
pop
ss
xlat
dec
adc
sub
into
nop
fst
sbb
mov
inc
outsl
pop
add
leave
jg
popa
jle
adc
mov
add
out
dec
sub
es
sbb
dec
nop
push
clc
and
inc
add
inc
ret
out
nop
ror
aam
ljmp
adc
sbbl
xor
in
push
daa
mov
pop
sarl
in
add
and
jo
cmp
mov
inc
outsl
aad
sub
addr16
mov
jge
popa
mov
pop
hlt
test
add
movsb
mov
or
outsl
inc
cwtl
mov
xlat
sub
inc
mov
sbb
mov
add
test
pushf
lock
mov
dec
add
rorl
gs
shufps
shr
mov
loopne
fsubl
cmp
ret
jo
or
ja
mov
jb
fstpl
jb
xchg
jnp
xor
xchg
stos
sub
push
mov
cmp
xchg
in
push
out
dec
adc
mov
push
mov
addr16
pop
daa
ret
add
rclb
das
cmp
insb
scas
outsl
iret
ficoml
ja
popf
dec
ljmp
jnp
push
push
mov
dec
xor
test
lcall
mov
repnz
mov
loop
insl
lahf
xor
test
mov
out
push
subps
jmp
push
int3
xchg
xlat
andb
iret
sahf
andb
sub
push
push
push
cltd
lods
lret
aaa
mov
push
test
add
jne
aad
or
jg
cwtl
dec
mov
loope
mov
adc
add
mov
sub
mov
or
mov
cwtl
pop
inc
pushf
pop
jns
pop
inc
in
push
aam
bound
inc
inc
xor
incb
jle
jnp
sar
jp
fs
cwtl
fimuls
dec
adc
mov
outsl
orb
les
cwtl
in
push
pusha
xorb
pushl
jnp
roll
mov
pop
cwtl
icebp
in
pop
stos
aaa
lret
mov
mov
in
jns
or
dec
or
inc
lods
stos
jle
les
test
fmull
cmpsl
pop
