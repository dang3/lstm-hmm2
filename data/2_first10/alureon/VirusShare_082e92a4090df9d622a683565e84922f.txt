push
sub
mov
mov
pop
sub
mov
push
pop
pop
mov
push
mov
pop
xchg
sub
xchg
sub
mov
mov
pop
sub
mov
sub
mov
sub
mov
pop
pop
push
sub
mov
pop
pop
jmp
lds
nop
mov
data16
ret
insb
ret
in
push
clc
jl
ret
add
push
cmp
xchg
add
sbb
xor
out
xchg
std
adc
adc
sbb
add
sbb
or
sbb
movsb
imul
xchg
test
cld
dec
arpl
addr16
sbb
xchg
cmc
push
mov
xor
pop
xchg
lods
je,pn
push
into
and
push
mov
inc
mov
push
call
dec
je
lcall
or
sub
daa
sbb
jo
roll
shlb
dec
adc
test
orb
push
ret
insl
out
pop
or
pushf
push
add
lea
inc
dec
stos
sbb
add
lods
jb
in
mov
sub
push
or
and
loope
sub
mov
or
xor
shlb
gs
and
lea
iret
movsl
inc
clc
push
inc
in
or
lods
aam
test
add
adc
sbb
add
rorb
xchg
ret
sbb
pop
jmp
paddq
in
lcall
inc
nop
repz
loope
je
push
fmul
and
sbb
pushf
jno
mov
call
les
pop
xchg
push
int3
jnp
jns
enter
in
test
aas
mov
stos
cmp
inc
add
pop
push
in
xchg
aam
loop
setno
fbstp
int
jg
cld
pusha
mov
addr16
push
in
jb
lods
push
pop
inc
mov
jmp
pop
shll
jns
test
test
pushf
dec
mov
mov
dec
lea
inc
clc
das
jge
mov
sub
cmp
shll
push
sub
ret
mov
and
jbe
cmpsl
inc
rorb
add
pop
cli
mov
push
mov
sub
push
mulb
je
inc
cmp
stos
lods
mov
sub
out
sbb
dec
push
notl
cmp
mov
pop
pop
dec
cmp
pop
mov
pop
jne
das
push
mov
je
fistpll
xchg
ficomps
arpl
scas
jl
sbb
enter
jne
xor
push
lods
jl
sub
enter
aad
enter
into
fbld
sbb
jno
add
pop
scas
add
sub
leave
js
push
subb
fmuls
hlt
cmp
cld
add
repz
lods
push
adc
dec
pop
add
rclb
dec
mov
add
or
add
lock
and
add
jl
sbb
cmp
outsb
movzwl
cmp
xorb
mov
ds
mov
adc
dec
cmpsb
adc
lahf
pop
cld
test
je
fcoms
jae
mov
inc
fisubrs
movl
adc
out
in
shl
sbb
sub
pop
xor
dec
or
and
push
aas
push
push
add
jns
jbe
cmpl
ja
rolb
lods
mov
adc
stos
and
inc
mov
ret
orl
clc
pusha
flds
inc
add
in
aaa
add
push
ret
xor
or
dec
or
add
cmp
jp
pop
and
sbb
xchg
jl
punpcklbw
fsubl
movsb
cmpsb
sbb
das
lds
cmp
xchg
in
adc
leave
pop
mov
adc
jbe
imul
ss
and
ret
add
dec
mov
mov
cmp
shlb
jmp
adc
mov
mov
es
clc
adcb
test
out
or
vmwrite
mov
xchg
jmp
adc
mov
xor
fcoms
mov
cwtl
and
sarl
inc
movsl
dec
call
mov
mov
fsubs
push
inc
mov
xor
mov
insb
outsl
xor
test
dec
mov
jge
inc
jne
cmpsb
sub
and
sbb
sbbb
clc
push
fs
cmp
adc
imul
ljmp
adc
adc
clc
xor
fimuls
mov
pop
inc
mov
aad
jbe
das
or
jle
sub
mov
or
xor
pop
mov
pop
and
and
scas
aas
sar
or
sub
je
push
adc
cs
call
jg
cmp
fcomi
imul
pop
hlt
and
sub
mov
dec
es
test
sub
fdivrl
repz
and
mov
invd
add
push
or
inc
fmuls
ret
push
ss
fisttpll
pop
adc
cwtl
push
cmpsb
aad
pop
rcrb
nop
mov
loope
test
inc
andb
in
testl
aaa
out
cs
mov
int
call
sbb
sub
ret
sbb
clc
and
mov
jns
push
jo
leave
iret
mov
cld
imul
mov
adcb
mov
adc
shll
sbb
adc
jmp
adc
dec
and
enter
sbb
add
mov
loope
cmpsl
inc
rcrb
mov
push
add
add
test
stc
sub
xlat
mov
fdivs
xor
fistpl
mov
adc
xchg
cmp
or
cmp
dec
iret
dec
mov
cmp
cmp
movups
mov
in
xor
addr16
lock
jp
xchg
pop
jnp
pop
mov
ret
sbb
add
movsb
pop
icebp
decb
add
int3
and
inc
je
jle
rcr
xchg
out
mov
call
outsl
shrb
mov
push
push
ret
or
rcrb
aas
cmp
fbstp
sbb
mov
orb
mov
xchg
vmread
gs
out
mov
inc
and
lds
scas
mov
push
cmp
aam
pop
je
les
mov
test
pushf
ss
mov
dec
mov
sub
mov
add
hlt
mov
imul
and
push
inc
mov
jg
cmpb
aam
loop
jecxz
movsb
push
test
dec
push
push
inc
pusha
shlb
mov
sbb
nop/reserved
push
push
jp
push
fucomp
adc
pop
repnz
out
push
ja
cmp
or
adc
inc
xlat
sbb
int3
ja
and
mov
stos
inc
shrb
aam
cld
mov
movsb
xchg
or
movsb
fs
push
jo
in
push
mov
in
dec
xor
mov
pushf
and
insb
push
mov
push
dec
sbb
push
dec
xchg
adc
sbb
and
pop
add
or
inc
or
sbb
adc
push
jnp,pt
fmull
jge
push
lea
in
or
mov
mov
loopne
mov
shlb
cmpsl
incb
dec
xor
es
lea
xchg
rcrb
jg
mov
cmp
sub
or
jo
pushl
mov
push
add
push
mov
dec
les
subb
popa
sbb
or
pop
insb
or
sbb
int3
add
arpl
or
les
lahf
sbb
jge
mov
and
mov
add
les
pop
xchg
ret
test
lea
jmp
jae
cmpsb
ret
mov
fcomip
xor
gs
lock
cmp
shrb
inc
sarl
xchg
cwtl
xlat
mov
les
dec
test
or
adc
loopne
pop
dec
xor
jnp
clc
outsb
sbb
ss
daa
out
test
aam
test
sub
mov
dec
jle
decb
jb
jae
jl
inc
js
xchg
push
jl
outsl
call
xor
push
je
test
dec
pusha
rclb
imul
cmpsl
and
adc
enter
dec
mov
enter
inc
pop
negb
mov
lahf
mov
push
mov
ja
xchg
sbb
pusha
dec
adc
aas
fs
lock
sbb
pop
ret
dec
ror
add
movsl
inc
inc
cld
add
jae
push
push
xchg
pushf
push
nop
jbe
iret
xorl
adc
add
cltd
sahf
movsb
or
push
loopne
mov
in
cwtl
fmull
stos
mov
or
mov
loope
mov
nop
nop
and
cmpb
je
into
call
push
xchg
into
popa
jns
dec
jl
mov
sub
push
push
aad
push
in
fisubl
mov
into
push
insb
and
jns
rcr
fcmovne
xor
aas
inc
js
daa
xchg
cmp
hlt
in
rorl
push
test
mov
hlt
or
push
mov
dec
or
call
dec
inc
ss
and
inc
je
in
dec
push
push
pop
cmp
inc
inc
dec
jbe,pt
in
pop
mov
sbb
cwtl
roll
and
lret
inc
mov
fildll
popf
sbb
std
cmp
and
call
je
pop
das
add
push
or
es
outsb
push
xchg
xor
sbb
pop
or
jmp
cmp
adc
push
lds
adc
mov
mov
mov
dec
xchg
mov
rorb
mov
sbb
push
jo
nop
mov
lods
test
test
rolb
cmp
pop
xor
adc
in
inc
enter
rcll
jge
jnp
movsb
xor
jg
mov
or
dec
mov
in
pusha
push
or
iret
inc
or
xchg
in
loop
in
push
and
lcall
adc
push
dec
inc
cld
test
inc
mov
mov
test
add
rorl
aam
cmpsl
sub
out
sub
imul
pop
and
mov
push
and
aam
adc
cmp
lcall
je
stos
xchg
adc
xchg
mov
cmp
cwtl
cmp
lea
sti
cmpsl
sub
arpl
mov
pop
mov
fistpll
sub
push
call
or
je
in
inc
dec
adc
int3
movsl
out
scas
nop
and
outsb
pop
nop
xchg
lcall
or
aam
add
adc
mov
inc
dec
jo
adc
test
push
xchg
cwtl
pop
sbb
mov
and
sbb
inc
arpl
xor
pop
or
sub
and
aam
xchg
xor
sub
inc
xchg
js
xchg
nop
xor
or
lret
adcb
dec
pusha
pop
xor
fsubl
cmp
in
dec
hlt
dec
add
mov
test
sbb
stos
faddl
stos
fadds
stos
aam
imul
or
xchg
test
xor
cmp
push
sarb
mov
jle
adc
test
pop
bound
xor
cmpb
and
mov
sub
or
cmp
sbb
mov
lret
mov
inc
faddl
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
in
sbb
clc
and
cld
ds
lock
hlt
ds
int
push
xchg
test
pop
test
inc
mov
hlt
dec
mov
mov
mov
lods
mov
filds
pusha
or
adc
lret
or
and
xchg
test
cmp
sahf
mov
lahf
scas
in
inc
mov
test
imul
xchg
mov
cmc
jbe
mov
pop
cmp
cmpps
nop
push
or
mov
daa
ds
out
pop
dec
sub
stc
sbb
xchg
fmulp
inc
stc
les
pop
cli
outsl
sti
and
pop
add
push
adc
sub
pop
pop
aad
mull
xchg
sbb
aam
popa
in
call
das
popa
out
into
jecxz
and
sub
mov
loopne
pushf
cmpsl
dec
dec
lods
inc
mov
fstps
imul
fwait
push
xchg
xor
stos
add
pop
in
loop
push
cli
lret
pop
cli
inc
pushf
aas
jo
add
fcoml
shr
testb
dec
push
add
cmpsb
sbb
lock
or
ficoms
or
rclb
call
addr16
jbe
xchg
adc
ljmp
xor
push
mov
fcom
int
gs
lret
sub
jmp
fildll
inc
jecxz
mov
cltd
jp
ret
lods
mov
test
cli
sarb
mov
into
les
or
xor
loope
sbb
ds
mov
mov
cmpsl
ret
or
push
lock
loopne
and
test
cwtl
aaa
mov
mov
fisttps
cwtl
or
ret
cltd
sub
rorb
pushf
call
es
lret
push
js
popf
dec
je
push
cmp
gs
fs
add
mov
inc
adc
fimuls
pop
mov
dec
add
xlat
in
xor
jns
in
mov
push
pop
adc
insb
and
xchg
clc
adc
pusha
jmp
push
and
dec
dec
mov
icebp
orb
fdivs
jae
adc
nop
pop
add
cmp
bound
cltd
push
mov
not
mov
sub
fdivrs
ss
les
mov
push
jns
int
pop
cmp
jns
dec
or
aad
movsl
pop
aaa
jg
jnp
adc
sub
mov
pop
in
cltd
dec
mov
scas
cmpsb
jb
ss
je
jns
push
inc
push
xor
hlt
aaa
push
xchg
inc
inc
mov
xchg
and
adc
sbb
adc
stc
ss
cltd
nop
pop
mov
inc
lock
stos
rorl
mov
insb
and
shlb
pop
dec
stos
pop
dec
shrl
mov
and
les
movsl
sub
stos
cli
sahf
mov
xor
rcr
push
sbb
pusha
mov
lret
xor
cmp
push
aas
sti
popa
rcll
insb
mov
push
enter
test
subl
inc
clc
sbb
jmp
in
or
add
scas
lock
imul
sbb
adc
aas
jne
jge
push
in
or
xchg
dec
shlb
cmp
mov
je
add
push
call
in
xor
in
pop
sbb
pop
push
dec
pop
adc
scas
push
dec
adc
dec
push
sub
mov
adc
out
dec
loope
test
loope
inc
lods
sub
mov
mov
and
xlat
dec
data16
gs
sbb
les
cmp
sbb
cmp
fsubl
push
cld
push
inc
cltd
inc
or
sbb
adc
dec
jb
leave
dec
mov
enter
adc
and
xchg
pop
loope
xor
mov
jo
cltd
fwait
js
push
scas
testb
cs
xchg
test
sub
or
cltd
in
mov
adc
xchg
cmp
fcmovnu
sbb
jg
ss
scas
daa
xor
jb
test
cmp
pop
xchg
and
push
cwtl
and
leave
out
out
stos
add
sub
inc
jne
cmp
movl
outsb
cwtl
subl
repnz
xorb
xor
jle
bound
jno
adc
cs
adc
lea
sbb
cmp
std
fs
insb
imul
out
clc
stc
push
and
and
rcrl
aad
test
in
das
inc
hlt
sbb
sub
icebp
add
in
js
call
rol
and
ret
out
mov
xor
xchg
cmpsb
loopne
outsl
xchg
dec
cli
lods
scas
aaa
add
jne
pop
divl
push
arpl
and
pop
xchg
lods
fmuls
xchg
out
lcall
sbb
push
cmp
jle
loopne
cs
pop
nop
cmp
mov
outsl
lods
cltd
mov
push
xchg
jb
adcb
leavew
add
adcb
cmp
mov
rolb
imul
sahf
xchg
nop
cmpsl
inc
xor
test
imul
out
inc
test
sti
xor
jnp
pop
sbb
call
and
scas
and
push
mov
mov
push
mov
mov
mov
fists
jnp
mov
push
xchg
in
cs
call
sbb
mov
cmp
shll
cmp
push
jmp
sbb
jb
outsb
ss
or
xor
add
jo
cmp
dec
jo
push
pop
sub
cltd
mov
nop
mov
push
sbb
adc
adc
out
lods
add
movsb
and
pop
jnp
mov
cmp
sahf
dec
es
xor
push
ljmp
cmpsb
sub
sbb
dec
lods
fnstenv
dec
dec
ja
xor
sub
movsb
push
pushf
sub
mov
inc
pop
add
cmp
jl
leave
out
jmp
pop
inc
xchg
add
loope
adc
mov
data16
jl
mov
fadds
mov
or
adc
and
or
mov
loopne
scas
iret
data16
push
sbb
sbb
add
inc
cmpsl
mov
dec
dec
push
pop
cmc
cld
lods
mov
and
scas
cltd
clc
push
jmp
jge
ss
or
test
pop
push
sub
cmpsl
adc
xchg
xor
inc
out
jmp
and
add
and
lret
clc
les
lock
inc
inc
sbb
aas
pop
das
cmc
mov
dec
leave
mov
adc
cli
fistpl
dec
dec
aad
mov
rcrb
shll
adc
pop
mov
mov
adc
push
inc
inc
mov
dec
adc
jae
mov
add
fisubrl
mov
pop
cmp
test
dec
mov
xor
hlt
adc
shlb
adc
rclb
je
jno
test
adcb
rorb
sti
push
or
jl
dec
or
cmp
push
xchg
jecxz
stos
sbb
mov
push
ret
xchg
push
call
sbb
out
leave
inc
xor
ds
cmpsl
cmp
push
add
fsts
xchg
dec
ljmp
or
jnp
cwtl
insb
test
movsb
add
cmpsl
loop
out
test
lcall
inc
mov
movsl
rcrb
cltd
pusha
xor
jecxz
add
xchg
push
sub
jmp
adc
xchg
xchg
add
fs
mov
jg
js,pt
push
lods
push
and
adc
inc
sbbb
adc
sub
sub
or
cmp
fisubl
jns
movsb
aad
hlt
cmp
lods
leave
in
fsubr
addr16
data16
neg
addb
addr16
push
push
in
push
test
xor
cmpb
insb
inc
jb
mov
xchg
mov
pop
and
mov
repz
leave
adc
mov
mov
mov
into
scas
incb
mov
or
jp
and
popa
xchg
sbb
jl
xchg
popf
lods
leave
cmp
xor
cli
fsubrs
pushf
scas
in
mov
fsubr
enter
inc
jne
push
jmp
je
inc
imul
pop
push
jp
push
sbb
jnp
mov
andl
mov
les
push
std
add
sahf
xchg
xor
mov
mov
adc
pop
sbb
arpl
test
cmp
xchg
test
leave
repnz
dec
or
or
and
std
and
icebp
je
jp
cltd
stc
pusha
scas
add
ljmp
cld
and
mov
insb
or
inc
popa
and
xor
sub
les
sub
jl
ss
inc
add
lcall
mov
scas
mov
test
add
das
pop
shrb
inc
js
lds
test
repnz
ja
mov
das
mov
inc
inc
xchg
shl
jge
sub
inc
mov
push
mov
sti
inc
popf
pop
sbb
cmp
js
or
xor
sub
add
sub
test
out
adc
cmp
add
sbb
fcomp
shll
mov
xlat
fwait
int3
mov
or
jl
add
mov
or
sub
jl
sub
aaa
adc
insl
fidivl
in
jecxz
pushf
dec
rcll
fldt
push
add
jae
push
xchg
pop
or
clc
or
pusha
in
jl
xchg
stc
adc
rcl
jle
movsl
and
or
test
pop
sub
shl
aad
addr16
sub
fs
mov
je
lahf
add
hlt
js
daa
jl
cwtl
adc
stos
xor
aam
popa
or
and
testb
xchg
jae
jl
les
imul
imul
cli
mov
mov
jbe
mov
pop
lock
dec
mov
add
in
adc
sub
notl
jno
sub
pop
je
push
adc
cmp
mov
xchg
xchg
bound
push
pop
cwtl
out
sub
icebp
movsb
jg
lods
stc
xchg
shll
jg
ret
test
gs
stos
imul
addb
inc
lret
fistpll
mov
jecxz
movsl
xor
mov
sub
xchg
popf
jecxz
std
mov
sub
add
dec
lds
repz
das
out
movsb
push
nop
mov
mov
and
sub
and
inc
push
enter
shr
mov
mov
dec
adc
xlat
mov
test
daa
inc
syscall
sub
lods
dec
sbb
inc
fiaddl
push
ss
faddl
into
add
xchg
sbb
sub
je
pop
or
sbb
lds
cmp
xchg
pushf
clc
and
jno
or
pop
mov
js
test
ljmp
add
fcomip
in
pop
cmp
adcb
pop
jne
or
lea
bound
inc
adc
iret
add
and
push
fistl
and
pop
cmp
or
std
stc
jmp
scas
shlb
mov
lret
test
xchg
xlat
ja
adc
jl
adc
and
test
inc
adc
inc
mov
push
int3
stc
cli
dec
push
loop
add
pusha
push
std
sub
call
cmpb
and
insb
push
mov
faddl
clc
lret
ja
sbb
scas
incb
pusha
jae
es
xchg
push
cmpsb
or
lcall
ficomps
mov
inc
sub
mov
out
or
cmp
popa
xchg
xor
xor
inc
and
test
cmp
nop
cmp
pusha
mov
nop
orb
lcall
jbe
loope
into
repnz
dec
aad
dec
mov
add
adc
cld
dec
movsb
sub
sub
or
mov
adc
ds
jae
and
into
push
xchg
insl
lods
inc
sarl
mov
inc
shlb
xor
mov
xchg
xor
enter
mov
sbbl
jmp
adc
push
in
clc
sahf
mov
fcoml
xor
xchg
fidivrl
or
xchg
outsb
xchg
dec
mov
push
and
cmp
push
rolb
icebp
or
jb
je
add
inc
push
mov
cmp
dec
loopne
mov
xor
imul
dec
stc
pop
jmp
lcall
popf
inc
cmp
sbb
int3
gs
shll
xchg
mov
adc
daa
jmp
call
add
mov
lahf
jge
aad
adcb
and
cs
adc
inc
cmpb
les
imul
sarl
aad
lea
push
or
jmp
dec
sbb
das
adc
ds
adc
pushf
ds
sbb
cmp
or
call
xchg
xchg
dec
or
fiaddl
adc
or
aas
outsb
and
mov
shrl
cmpsb
fwait
dec
sbb
fidivl
jmp
sahf
ss
dec
or
sbb
orl
pop
mov
mov
jne
push
call
test
stos
inc
es
inc
pop
mov
push
xlat
addr16
es
xchg
mov
sbb
mov
lods
and
inc
mov
add
dec
jecxz
insb
mov
stos
or
cmp
imul
orl
cmp
sub
sub
or
pusha
or
cs
mov
push
ss
add
mov
push
sbb
mov
xchg
int3
mov
inc
mov
repz
in
stos
push
sbb
mov
adc
pusha
pop
scas
test
cmp
jns
test
add
adc
arpl
jae
jp
loop
sbb
test
xlat
aaa
cs
mov
pop
in
cmp
push
sbb
je
or
lcall
lods
dec
jl
mov
movsl
pop
lahf
jg
or
pop
imul
mov
call
push
ja
jecxz
cmp
ret
mov
jmp
imul
femms
or
popf
inc
inc
orb
and
xor
mov
push
mul
and
pop
sbb
add
test
clc
sub
shrl
sahf
cmp
sbb
je
sbb
aad
or
add
push
and
inc
aad
ficoml
or
in
lds
in
cmp
adc
in
mov
rcrb
mov
sbb
call
mov
fs
dec
mov
sarl
jl
in
jo
inc
cmp
js
push
into
push
popf
ret
cwtl
cmp
and
mov
and
push
sub
andb
pop
and
sbb
mov
lea
cmp
insl
lret
rorl
mov
cs
mov
adc
xchg
out
jno
daa
push
push
fwait
jb
stos
movsb
pusha
xchg
lahf
inc
in
and
les
std
shr
adc
enter
and
cmp
xchg
or
dec
fucomi
ljmp
or
ret
lea
push
push
mov
ja
or
shll
sub
lods
lcall
add
rcrl
and
mov
enter
test
xchg
out
jl
xor
push
loopne
xchg
lahf
adc
and
mov
pusha
push
in
leave
ljmp
and
cmp
cmp
inc
adc
sbbb
arpl
imul
push
ss
in
dec
sub
sub
push
cmp
cs
jecxz
idivl
jle
hlt
out
cmp
dec
mov
aad
push
cmc
nop
in
icebp
mov
mov
mov
pusha
xchg
sub
add
cli
sub
xchg
leave
adc
int3
fidivl
add
dec
or
pop
cmpsb
nop
icebp
mov
fdivrl
enter
push
add
fcompl
or
push
xchg
push
imul
sbb
xor
cmp
insb
in
sub
add
inc
adc
test
add
dec
cmpsl
jo
pop
or
fistl
lods
int3
xor
lahf
sbb
movsb
mov
mov
les
repz
fdivl
xchg
cmpsl
rclb
call
divb
cmp
adc
and
mov
jbe
or
inc
pusha
pop
aam
shlb
cmp
call
sub
pop
mov
scas
cmp
adc
or
inc
les
or
or
movl
cmp
pop
adc
sub
adcb
or
and
ja
sbbb
xchg
or
cmpsl
cmc
dec
add
or
inc
jl
sbb
pushf
push
mov
cmp
add
xchg
icebp
movsb
popw
cld
push
jmp
inc
xor
or
loop
pop
and
jecxz
mov
loop
pop
sbb
xchg
out
test
jge
ror
xchg
and
fistpll
inc
sbb
out
iret
mov
cmp
pop
and
loopne
popf
mov
push
arpl
pop
rorb
neg
xchg
in
and
cmpsb
sub
xchg
test
xchg
mov
mov
xor
push
out
inc
push
and
repnz
mov
stos
add
cmp
in
nop
cwtl
mov
call
pop
aam
daa
or
jbe
jne
in
in
andl
call
inc
lods
mov
pusha
dec
sbb
and
xor
inc
cmpsb
rolb
pop
sbb
or
lahf
push
repnz
mov
ds
pushf
xchg
nop
fsubr
rorl
add
xchg
hlt
xchg
pusha
push
xor
aas
add
push
mov
pusha
push
mov
xchg
push
mov
iret
cli
test
and
or
push
fisttpl
iret
push
dec
xor
adc
or
xor
test
and
mov
mov
mov
fldcw
lahf
or
test
enter
in
aaa
mov
xor
inc
or
lods
loopne
mov
int3
scas
jo
cmp
adc
push
and
pusha
out
pop
in
ret
cmp
out
and
adc
or
ljmp
and
cmp
add
fsubs
push
aam
dec
push
mov
sub
mov
int3
inc
or
mov
mov
out
fimull
xor
or
lods
add
and
and
push
and
fs
jb
jb
cmpsb
add
clc
xorl
or
pushf
into
addr16
add
sbb
pop
dec
in
out
adc
and
push
or
cmp
xchg
lock
or
mov
or
mov
adc
add
or
and
test
add
aam
in
mov
or
add
fs
or
subl
fs
mov
and
int3
rorb
leave
cmp
and
push
imul
inc
sub
jno
decl
imul
dec
cld
out
mov
xlat
addr16
decl
ljmp
popa
xchg
lods
xor
xor
cld
push
cld
mov
imul
cmp
outsb
mov
arpl
or
or
aad
aaa
pop
jae
xchg
jle
loope
arpl
icebp
inc
cmpsb
sti
lret
adc
popf
push
rclb
pop
push
loopne
and
add
fwait
addr16
or
sub
mov
incb
inc
lret
pop
and
xchg
movsb
push
ljmp
sbb
push
ja
icebp
popf
add
js
inc
fisubrl
sub
inc
lret
adcl
and
jbe
data16
mov
and
lds
pusha
aam
xor
sub
sbb
mov
stc
jae
out
sbb
inc
arpl
bound
in
jg
push
incb
push
or
sub
inc
sub
jo
push
ds
or
in
inc
rorb
js
jecxz
cmp
lcall
outsb
aam
sub
repz
popf
add
and
test
and
insb
cmp
mov
sub
cmpsl
and
jmp
outsb
push
insb
xchg
cmp
aas
add
test
div
inc
sub
inc
sub
fiaddl
insl
cmp
sahf
cwtl
or
imul
adc
loop
pusha
xor
cli
dec
outsb
cltd
add
dec
bound
xlat
pop
loope
lods
push
dec
cmpsl
and
inc
cmpsb
push
popa
jae
aad
ljmp
les
scas
js
xor
xlat
and
in
mov
ficoml
xor
add
adc
dec
out
mov
cmpsb
sbb
sbb
jne
inc
push
add
mov
inc
jb
cmp
cmc
ss
insl
mov
pmaddwd
adc
int3
test
mov
js
push
fimuls
sub
inc
push
or
cltd
mov
je
data16
cmp
dec
cltd
fsubp
loopne
icebp
clc
fists
and
icebp
test
bound
pop
mov
cmp
xor
mov
sbb
mov
push
adc
cmp
pop
xor
ret
mov
and
les
inc
fcompl
xor
push
and
mov
push
inc
fidivrl
std
mov
dec
sbb
iret
add
inc
push
sbb
xor
cmp
push
adc
add
or
inc
add
lea
sub
xorb
xor
push
repz
sub
outsl
inc
xchg
sub
dec
fs
jmp
loopne
pop
xor
cld
mov
adcl
dec
aaa
arpl
ret
fisubl
or
mov
inc
mov
js
jbe
test
and
inc
aas
mov
xor
leave
das
push
sub
sub
ss
popa
mov
push
rolb
sub
les
and
outsl
dec
push
and
add
xchg
xchg
mov
jno
es
in
add
es
mov
insl
mov
lock
dec
js
dec
fmul
mov
stos
pop
push
pop
dec
leave
mov
lods
and
jmp
xchg
dec
std
stos
mov
dec
xchg
mov
jge
iret
sbb
jns
test
rcll
dec
jb
cmp
fwait
das
push
and
push
fs
mov
push
test
or
mov
ja
mov
jo
jae
lock
rorb
mov
aam
sarl
adc
cwtl
sti
out
int
push
mov
pop
scas
lahf
in
jnp
outsb
call
push
xor
out
xor
pushf
popa
lods
jl
jp
inc
in
repnz
xor
mov
sub
inc
xor
pop
outsl
cmp
sbb
cmp
mov
dec
daa
das
lds
dec
int3
xchg
push
mov
or
pop
fimuls
inc
mov
imul
pop
dec
push
fdivr
out
iret
mov
rcrb
push
lret
test
pusha
aam
push
sbb
mov
add
stc
test
cmp
int3
dec
add
call
jns
sbb
push
insb
insl
pop
in
rclb
mov
arpl
addr16
in
into
pop
adc
or
sbb
adc
test
inc
mov
mov
andl
sub
xor
fldl
loope
dec
outsb
leave
dec
add
stc
jae
push
nop
pop
mov
and
jmp
adc
stos
cmp
ljmp
sarb
adc
dec
jnp
inc
frstor
and
mov
dec
jecxz
fcmovnu
cmp
and
dec
roll
jl
jp
mov
fs
inc
jo
and
enter
roll
add
fcomps
dec
sub
or
sbb
mov
sbb
incl
js
adc
jo
or
test
or
hlt
mov
add
pop
sbb
lods
pop
arpl
mov
inc
xchg
int3
sub
push
aad
cmp
stos
test
icebp
dec
stc
js
mov
push
or
jae
mov
ror
push
outsl
adc
xor
outsb
je
inc
stos
insb
popa
adcb
push
mov
inc
or
and
cmc
movsl
mov
cmpsb
pop
mov
je
jbe
dec
arpl
mov
cmp
mov
and
in
in
leave
icebp
xor
repnz
fs
jns
and
lods
xchg
imul
push
cmp
popa
push
std
sbb
inc
pop
sbb
cmp
mov
xor
xorl
in
repz
ljmp
sarl
stos
cbtw
sbb
ja
cmp
mov
add
or
call
pop
cmp
adc
xlat
hlt
xchg
add
inc
inc
leave
nop
pop
cmc
push
lods
adc
jae
add
xchg
and
mov
mov
aam
std
loope
push
aas
out
and
shlb
mov
mov
mov
mov
inc
jbe
leave
aas
out
mov
das
fdivl
xor
lahf
orb
dec
pcmpgtw
gs
icebp
orb
or
dec
xchg
dec
push
cmp
roll
mov
lahf
adc
icebp
into
cmp
out
jecxz
sub
add
insl
pop
jmp
test
into
pop
jae
cld
and
loop
ds
dec
icebp
in
push
outsl
push
loop
mov
adc
js
xor
shl
es
dec
push
mov
lds
pushf
push
sub
dec
les
shlb
lods
es
icebp
jle
adc
adc
and
adc
mov
adcb
call
xchg
mov
push
push
pop
cmp
movsb
sbb
mov
clc
imul
dec
cmp
loop
inc
push
loopne
cmp
into
add
mov
in
std
aam
dec
pop
je
out
js
ret
inc
pop
push
pop
push
fmull
pop
jae
mov
dec
cld
inc
push
rorb
push
cmp
push
lods
mov
lods
pop
les
jmp
jbe
pop
jl
xor
and
xor
mov
mov
paddusb
sub
imul
cmpl
ds
sub
dec
push
test
pop
test
jne
pop
bound
adc
and
inc
push
dec
jmp
data16
hlt
sbb
push
push
sarl
cld
ficoml
cmpsb
fiadds
dec
out
outsl
cmp
stos
adc
mov
orl
outsl
ret
lods
sub
mov
xor
push
lcall
sahf
push
cmpsl
sahf
movsl
movsb
dec
lock
push
pop
loop
mov
mov
sbb
andb
push
dec
jmp
mov
jl
dec
jo
sti
sarb
or
xor
popa
outsl
std
pop
movsl
or
mov
inc
popa
mov
outsl
data16
push
and
popa
xchg
loope
jno
int
and
das
mov
adc
cs
gs
movsb
add
aad
stos
push
bound
mov
add
xchg
daa
movsb
ds
push
sub
jo
stos
dec
test
mov
pop
pusha
add
mov
sub
sbb
dec
mov
repnz
or
icebp
or
fistps
daa
lret
inc
add
jne
jp
sahf
cld
dec
adc
pop
sahf
inc
adc
dec
lahf
outsb
xchg
fisubrs
cmp
into
orl
inc
imul
mov
jle
dec
jae
hlt
aas
loope
out
icebp
adcl
jmp
orl
xor
add
sbb
push
outsl
jbe
sahf
call
adc
jmp
cltd
lahf
cmpsl
jno
lea
cmp
inc
faddl
dec
push
decb
imul
mov
adc
cli
add
test
movsb
xchg
pop
push
dec
jl
gs
jb
sub
cmp
xchg
xchg
mov
imul
xchg
cli
in
pop
mov
ljmp
sub
pushf
scas
jne
adc
imul
mov
mov
or
clc
and
jbe
loop
adc
fadds
push
fs
cmp
adc
sub
xchg
and
xor
sbb
cmpsb
aam
cmp
imul
jg
lods
add
les
shll
sbb
cmp
arpl
push
mov
rorb
adcl
fidivrs
or
and
lods
or
les
popa
rcrl
test
sbb
sub
stos
jmp
inc
pop
xor
fs
inc
inc
dec
mov
mov
mov
repnz
shlb
frstor
jle
push
lahf
insl
arpl
inc
push
int3
mov
movsb
nop
and
int
mov
xor
adc
adc
in
lods
shrb
imul
dec
in
lret
ds
fidivrs
jne
xor
adc
test
nopl
cmovs
fisttpll
push
sub
jle
mov
add
roll
mov
adc
lahf
mov
aam
leave
sub
push
pop
push
adc
pop
xor
mov
xor
dec
ljmp
xor
mov
das
cmp
jg
push
cld
inc
push
ss
arpl
sub
mov
jb
jmp
or
pop
insl
nop
xchg
xorb
pop
jl
mov
rcl
cmp
cmp
dec
jae
inc
inc
lea
loop
cs
pushf
inc
imul
int3
dec
mov
jecxz
push
push
xchg
ljmp
sub
fisttps
xor
pop
pop
shlb
pop
pop
lahf
sahf
ljmp
out
and
imul
inc
outsb
outsl
clc
pop
mov
ja
push
jp
repz
jge
imull
test
stos
mov
add
mov
sbb
pop
cmpsb
sbb
testb
push
sti
fcmovb
out
cmc
add
loopne
cmp
testl
inc
jecxz
pushf
data16
add
and
dec
int
inc
cld
add
pop
incl
push
repz
mov
loopne
into
jecxz
add
lret
mov
repz
sbb
cli
jae
ret
roll
adc
movsb
or
subb
xchg
and
adc
cmp
sti
divl
add
test
and
lods
mov
sub
push
xchg
les
sub
aaa
mov
cmp
mov
add
mov
push
inc
lret
push
pop
dec
ret
dec
mov
push
fnstcw
push
mov
push
push
pop
add
popa
or
dec
or
cmp
mov
push
ficoms
xchg
mov
sahf
pop
sub
mov
mov
insl
xchg
lods
xor
sahf
mov
cmp
mov
xor
mov
ret
lds
enter
add
xor
aaa
mov
neg
mov
nop
les
jmp
retw
rolb
jns
xchg
ficompl
mov
outsl
mov
cmp
or
stos
and
adc
xchg
divl
add
push
jle
enter
scas
das
cmp
add
sbb
lods
add
adc
movlps
add
outsb
subl
and
cwtl
add
mov
or
sarb
inc
pop
sbbl
lcall
jns
movsb
mov
and
sub
inc
and
loopne
add
cmc
add
js
add
jge
xor
jne
add
lea
adc
les
add
mov
sub
and
mov
push
add
push
dec
add
sub
enter
and
fwait
popa
sub
sub
mov
pop
cltd
or
adc
sub
xchg
adc
test
or
add
add
pop
js
adc
rcrb
or
enter
loopnew
leave
imul
xchg
incl
xchg
iret
pop
aam
in
rol
jne
add
cli
sub
push
movsb
add
mov
adc
shll
aam
lods
sbb
mov
aaa
mov
in
shl
xor
cwtl
add
scas
cmp
dec
dec
stos
leave
insb
jp
bound
jge
sahf
inc
adc
cmpb
xchg
xor
call
add
jbe
adc
adc
mov
xchg
xor
cmp
jmp
jns
insb
mov
sbb
cmp
xor
xor
aam
add
je
jge
push
inc
addb
pop
ret
faddp
push
sbb
icebp
inc
pop
inc
mov
jge
aam
push
sub
and
mov
sbb
pop
ljmp
jmp
in
testb
pop
outsb
je
adc
add
mov
mov
adc
cld
test
orb
push
loopne
ljmp
add
jge
pop
shlb
lock
jl
in
daa
jo
lds
rol
lods
add
mov
push
jl
add
mov
add
mov
sub
popf
sub
mov
cltd
cmpl
xchg
imul
mov
dec
adc
test
push
add
lock
or
inc
add
fsubrp
push
es
bound
inc
stc
sbbl
std
das
push
pop
sub
test
adc
stc
mov
stos
mov
push
cmp
or
mul
adc
fidivrs
pop
add
cwtl
pop
nop
or
stos
bound
inc
xchg
mov
fmul
fs
xor
add
jne
push
xchg
inc
sbb
adc
or
or
sbb
cmpsl
sbb
jp
mov
lcall
pop
pop
and
jns
popa
push
sbb
mov
mov
push
daa
add
addb
mov
sbb
test
pop
leave
int3
loope
add
fldcw
add
xor
lcall
dec
push
daa
js
and
mov
jno
inc
pusha
dec
add
push
mov
mov
sub
jl
stc
jmp
push
xor
stos
mov
add
test
jbe
add
out
ss
xchg
cmc
sbb
imul
mov
lcall
or
mov
cld
inc
enter
psllw
and
outsb
push
test
pop
sub
outsl
push
repnz
add
into
ret
decb
jb
cmpsl
pusha
in
mov
or
jbe
xchg
push
outsl
add
push
mov
shl
add
addr16
add
mov
mov
mov
sub
mov
std
notb
arpl
adc
popf
or
inc
add
cmc
xor
loope
push
sub
das
lret
arpl
pop
ljmp
nop
jno
xchg
out
out
sub
push
stos
test
add
int3
fsts
cwtl
xchg
sub
cmpl
movsl
mov
xor
lcall
xchg
sub
pop
insl
mov
cmp
add
hlt
ret
and
adc
pop
xor
add
sbb
daa
add
push
sarb
sub
mov
push
jl
mov
jge
popa
cmp
mov
sahf
push
dec
xchg
pop
add
sbb
dec
incb
inc
pop
push
out
jle
ret
xchg
orb
shll
add
dec
scas
loope
ljmp
fcom
mov
or
ja
mov
rcrl
sub
push
pop
or
lds
clc
dec
lret
cs
ficoml
daa
loop
add
outsb
cmp
imull
and
xchg
daa
testb
movsb
rcrb
push
xchg
jp
or
add
cs
out
jge
into
and
stos
int
loopne
add
out
lds
scas
add
mov
loop
xchg
push
lock
push
mov
jle
and
fidivrl
mov
and
repnz
mov
aaa
shrl
popa
out
pop
pop
inc
push
pop
xchg
mov
add
cmpb
sub
pop
xor
lret
rorl
add
mov
push
clc
add
mov
mov
cld
shl
mov
inc
add
into
xchg
orb
mov
mov
fstl
mov
pmaxsw
clc
clc
push
sub
jns
repz
call
int
sti
jbe
add
rol
add
dec
out
pop
addr16
out
dec
jp
xor
sbb
insb
and
js
pop
xchg
jae
inc
mov
mov
xchg
mov
adc
imul
sti
out
jp
push
jb
inc
hlt
or
mov
mov
call
inc
psllw
inc
fs
add
cwtl
mov
xchg
inc
add
sahf
sub
pop
sub
leave
aad
in
push
out
xchg
jge
sub
cmc
es
adc
dec
push
leave
inc
insl
aam
aam
loopne
or
iret
sub
stos
pop
popa
push
gs
cmpsb
test
andb
pop
testl
mov
xchg
mov
aas
pushf
or
mov
mov
popf
mov
push
stc
push
xor
cmp
ja
ljmp
xchg
and
lldt
ss
dec
adc
push
cmc
sub
lahf
imul
xor
bound
bound
lock
mov
stc
adc
es
add
lret
mov
fxch
pop
and
test
mov
nop
adc
add
insb
mov
das
nop
push
mov
xor
add
jecxz
mov
lahf
or
mov
mov
int3
fwait
into
stc
sub
xor
je
adcb
iret
mov
mov
sub
cmp
dec
jle
aas
int
add
cmpsb
xor
cmp
push
sub
out
stc
mov
jmp
mov
pop
les
das
daa
insl
add
xchg
fsubrs
dec
sbb
sub
pop
aaa
or
adc
inc
lock
fsubrs
sub
ret
pop
fs
pop
loope
mov
inc
mov
stos
or
add
loopne
or
xchg
into
push
sub
dec
out
jbe
lcall
push
add
repz
ficomps
movsb
xchg
add
clc
mov
sbb
push
shlb
cld
mov
clc
daa
mov
and
adc
addr16
nop
pop
cmp
dec
imul
fimull
inc
xchg
jnp
xor
cmp
into
js
es
adc
aad
arpl
add
mov
and
lock
gs
add
mov
xchg
pushf
hlt
inc
mov
mov
or
aad
sbbb
movsl
cs
mov
push
outsb
push
aam
sub
cmp
ljmp
popf
call
cmpsl
push
jae
pop
inc
sub
test
rcl
testb
mov
add
mov
pop
in
push
xchg
mov
xor
test
jo
mov
sub
adc
movsb
inc
mov
or
outsl
sub
sub
leave
sbb
cmp
or
push
cmp
lds
xchg
mov
fisttpll
pop
mov
xor
pop
mov
js
push
cmp
dec
xor
in
insl
sbb
fldl
ljmp
sbb
aam
pop
test
inc
mov
xchg
and
cld
push
cmp
dec
jae
call
icebp
push
scas
dec
leave
test
cwtl
inc
gs
loope
add
lods
lods
push
inc
data16
and
aaa
mov
cmpsb
call
lret
push
mov
in
pop
jbe
xor
push
push
nop
mov
and
mov
add
enter
cmp
aas
xchg
fnsave
sbb
inc
mov
and
test
mov
lcall
jbe
sub
mov
dec
out
push
iret
xchg
adc
sub
fidivl
rclb
popa
pop
aam
hlt
lods
ret
pop
push
adc
pop
add
into
add
cmp
jb
fnstcw
inc
add
inc
in
adc
add
loope
jo
add
mov
fwait
sbbb
sbb
xchg
add
push
mov
add
test
push
cmpsl
and
aam
add
in
dec
lds
movl
shr
push
lods
and
pop
mov
lock
mov
mov
sub
jge
push
mov
repnz
mov
aaa
add
inc
or
cmpsl
ret
inc
mov
enter
mov
pusha
aam
frstor
mov
push
or
sarl
movsb
loop
inc
test
shlb
push
sub
fmull
cld
mov
je
rol
sub
enter
ss
push
add
pop
clc
into
sbb
jno
pop
lods
or
lea
fists
add
les
cwtl
sub
sbb
icebp
add
jmp
mov
jmp
sbb
scas
loop
add
add
test
les
std
push
xchg
lahf
int3
add
sub
fdivrs
add
repz
pop
stos
sbb
popf
ret
sbb
add
xchg
and
pop
push
mov
dec
add
cmpsl
icebp
aad
inc
arpl
mov
push
mov
push
mov
fs
fstps
jne
fsts
mov
pop
inc
jae
test
or
jg
mov
mov
push
lods
add
jmp
jmp
shrl
adc
inc
sbb
sbb
cmp
test
sub
and
adc
jecxz
es
cs
mov
test
xchg
mov
xor
and
push
pop
loopne
jecxz
xor
mov
out
lods
or
mov
pop
sub
dec
stos
sbb
sub
mov
stc
nop
and
and
jmp
roll
paddw
pop
ljmp
jns
add
mov
pop
xchg
sub
loop
sub
jp
mov
xor
mov
push
std
cmp
inc
inc
push
lcall
xor
insb
inc
iret
inc
pop
mov
add
sbb
add
faddl
fdivs
ds
adcl
inc
imul
inc
dec
loope
mov
pop
scas
bound
mov
mov
sbb
or
jmp
add
lret
rolb
repnz
loope
jo
movsl
adc
or
fwait
lret
pushf
inc
add
or
push
iret
mov
das
push
jge
pop
sbb
faddl
cmp
pusha
mov
sub
push
or
or
sub
incl
ja
inc
scas
aas
mov
and
movsb
loopne
push
inc
sbb
dec
ds
adc
add
arpl
repz
out
mov
fsubs
or
jbe
jno
cmp
mov
addb
adc
sub
add
sub
or
movsb
mov
mov
inc
add
inc
jmp
sub
mov
out
mov
outsl
inc
in
mov
cwtl
rcr
pushf
scas
scas
shrl
xor
cmpsb
add
mov
stos
insb
push
jge
pusha
cmpsb
lock
fcoms
jnp
scas
push
jno
mov
sub
sahf
aaa
stos
or
cmp
sub
mov
jno
inc
add
sbb
loop
mov
add
jb
pop
ret
add
or
dec
mov
scas
mov
sbb
inc
cmc
insb
add
lcall
cli
add
decl
incl
mov
orb
xor
inc
xchg
xor
ss
imul
cmp
loopne
inc
add
dec
in
icebp
repnz
dec
gs
jo
pusha
aad
and
add
das
leave
xor
aam
icebp
sbb
add
pop
stc
mov
mov
and
mov
mov
and
and
lret
inc
adc
aas
das
sbbl
outsl
outsl
fs
mov
lret
mov
mov
addr16
lahf
inc
data16
mov
enter
sub
ljmp
scas
pop
stos
xchg
lock
pop
add
cmc
cmp
cmpsl
push
ja
dec
test
js
enter
scas
pop
jno
xchg
xor
mov
out
test
fwait
jmp
bound
or
add
and
mov
loopne
gs
mov
mov
xor
add
pop
mov
movb
mov
mov
dec
mov
popf
in
pop
call
or
enter
cwtl
leave
loope
or
pop
add
sti
inc
cmp
lret
jne
in
movsl
outsl
mov
mov
push
sub
jnp
data16
push
jb
dec
iret
mov
xor
sbb
sbb
dec
add
pop
cld
bound
in
mov
mov
mov
das
enter
ret
or
push
call
pop
adc
data16
mov
pop
mov
imul
or
sub
pop
imul
lcall
in
push
or
es
add
cmpb
ja
sub
fsincos
mov
lahf
sbb
push
lds
add
les
add
orl
or
mov
sbbl
js
cmp
sub
sub
cmp
stos
rolb
adc
mov
or
jno
add
xchg
jmp
push
aam
fistps
addr16
mov
xorl
in
add
and
subb
aam
pop
cmp
jbe
std
pop
add
pop
subl
lea
add
int
repnz
ds
add
popl
fistps
push
pusha
add
or
sub
jg
xor
aas
sahf
mov
ds
push
orb
add
lahf
cwtl
les
sub
loopne
test
fisubs
subb
dec
shl
daa
mov
add
sar
push
call
ret
jnp
or
adc
jp
add
xchg
mov
sbb
xchg
mov
mov
dec
mov
inc
or
dec
mov
fisttpl
rcrl
divl
xor
adc
int
dec
sub
inc
aam
clc
mov
pop
add
ror
and
lods
adc
fnsave
sbb
mov
roll
jmp
cld
sahf
sub
add
aad
pushl
sub
add
sbb
test
sti
sbb
cltd
in
add
add
lock
data16
and
jmp
in
into
add
test
adc
xchg
sub
mov
aas
cmpsl
or
mov
aam
push
mov
pop
cmp
aaa
sahf
jae
cmp
int
or
cmp
add
stos
cmp
notl
xchg
pop
cmpl
jecxz
mov
js
negl
stc
mov
jae
add
dec
sub
and
and
sub
add
cmp
cmp
out
mov
add
mov
mov
cmp
pop
pop
or
out
jno
cwtl
push
xor
mov
ds
sub
dec
aas
adc
xorb
ret
sbb
out
mov
and
jns
mov
rorl
mov
push
repz
fs
add
out
sub
out
dec
push
push
notl
or
cvtpd2dq
or
mov
or
push
mov
nop
and
in
adc
pop
movsb
push
sub
fisubrl
cmpsb
mov
pop
clc
dec
mov
add
repnz
sbb
repz
arpl
xor
popf
imull
jnp
bound
mov
movsl
pop
testl
mov
push
in
stos
add
dec
in
orb
push
jecxz
push
aaa
jp
sub
cltd
fldt
jnp
fcoms
sbbl
add
and
mov
sbb
data16
adc
int3
or
mov
jns
sub
aaa
loopne
cmpl
cltd
out
mov
sub
inc
and
rol
pop
repz
jg
loopne
mov
sub
rorb
and
cli
add
stc
dec
sub
es
loop
imul
cli
popf
aas
adc
cli
jecxz
icebp
jp
jle
dec
loopne
push
xor
add
xor
ljmp
icebp
test
sub
or
sub
lcall
lock
sub
mov
add
leave
mov
cmp
mov
add
sahf
jae
test
adc
pop
pop
mov
pop
aad
aad
rorl
in
mov
out
adc
push
call
fcoml
cld
mov
lods
xchg
adc
push
push
xor
test
sahf
inc
add
or
mov
lds
sbb
daa
shll
nop
push
pusha
adc
mov
and
xlat
lahf
arpl
mov
or
add
sbb
mov
cwtl
pop
pop
pop
sub
inc
or
in
shll
test
or
es
sbb
enter
add
fs
fwait
out
ret
fidivrs
pop
mov
out
mov
lret
push
mov
cmc
push
push
jle
sub
test
pop
xchg
lods
lods
lret
in
mov
push
pop
inc
cs
dec
jecxz
insl
lods
es
sub
movb
pop
jo
mov
xchg
push
ret
push
adc
cmp
push
sub
mov
jecxz
cli
lea
pop
inc
rolb
mov
daa
pop
loopne
pop
cltd
add
pop
push
out
inc
xor
inc
lea
adc
sti
fwait
out
jmp
jl
jle
xchg
setle
pop
jp
sub
jecxz
sub
shl
xchg
xchg
add
call
cmpsb
sub
ret
mov
mov
mov
stos
xor
mov
mov
es
ret
sub
xor
movsl
jmp
mov
dec
sbb
cmpsl
enter
mov
ss
subb
cltd
pop
in
xchg
sub
dec
mov
lea
lret
and
bound
icebp
xor
mov
pop
jbe
mov
stc
dec
subb
jne
push
add
add
repz
xor
inc
add
sti
xchg
xchg
les
je
mov
cmpsl
es
mov
mov
add
outsl
rcr
push
inc
fsub
add
fwait
fwait
mov
xchg
in
push
pop
mov
add
push
cmp
add
ja
pop
push
pop
in
lods
sub
repz
add
add
enter
adc
pop
push
sarl
mov
add
imulb
cmpsl
nop
push
cmp
add
cmp
adcl
inc
mov
fwait
mov
mov
popf
loope
mov
mov
jb,pn
mov
lods
sub
test
push
xor
and
into
adc
sbb
add
imul
gs
mov
sub
jp
cmp
add
add
jge
sbbl
jb
pop
add
cmc
add
or
pop
mov
xchg
sbb
xchg
faddl
mov
or
icebp
jno
mov
dec
scas
add
inc
das
xchg
xor
sbb
push
mov
or
outsb
inc
dec
pusha
into
movb
jo
dec
les
lahf
xchg
pop
fsubrl
dec
movsb
jb
sub
xchg
pop
lock
adc
sub
cmp
pop
add
mov
and
mov
and
hlt
cs
sti
aaa
fmuls
add
cmc
add
cmp
xchg
xchg
xchg
std
cltd
inc
adc
xchg
mov
jo
mov
ret
fstpt
or
sbb
js
mov
mov
fdivs
pop
dec
adc
push
dec
test
ret
aam
mov
mov
push
xchg
sbb
pop
mov
fildl
shll
jo
ja
les
mov
pop
test
std
mov
jo
mov
mov
push
mov
mov
sub
jecxz
mov
push
daa
sbb
in
sub
sub
repz
xchg
enter
push
xor
std
dec
mov
xchg
imul
pop
addb
pop
dec
shrb
cli
add
stc
aam
sub
add
cli
dec
je
insl
out
rorb
xchg
add
dec
add
sbb
pop
cmp
lods
scas
cli
rcr
mov
pusha
add
mov
rclb
mov
jno
mov
xchg
nop
cli
pusha
pop
jl
es
sbb
pop
jo
or
test
cmp
ret
mov
xor
popf
aas
aaa
das
dec
xchg
mov
ror
lret
add
sub
pop
inc
mov
add
pop
fists
in
imul
and
ret
adc
neg
add
sub
jbe
mov
popa
or
jae
ficomps
mov
sub
xchg
inc
cwtl
push
cwtl
cltd
popa
or
fildll
scas
add
movsl
daa
scas
in
jecxz
call
std
push
cmp
and
push
dec
mov
js
dec
ret
dec
lods
and
data16
sub
sbb
imulb
pusha
xchg
fisttpl
lcall
add
daa
sbb
jo
sub
repz
push
call
enter
jle
out
add
insb
and
xchg
push
sub
cmp
sub
in
add
loop
sub
jl
sbb
clc
mov
out
mov
cltd
adc
iret
fdivl
dec
leave
adc
mov
jecxz
or
push
dec
dec
enter
mov
or
push
mov
das
addr16
in
add
in
pusha
push
add
cwtl
dec
rorb
mov
add
inc
or
sub
test
pop
stos
xchg
fwait
adc
xor
enter
into
filds
push
and
adc
je
add
push
mov
push
lods
aam
push
mov
and
scas
inc
nop
sub
dec
int
int
pop
mov
sub
nop
pop
mov
or
cmp
push
add
dec
popf
outsl
insb
jb
add
xor
xchg
mov
jecxz
push
int3
add
dec
sub
mov
stos
pop
sbb
fldl
adc
lods
jg
or
lock
mov
pop
mov
popf
mov
push
lods
sbb
xchg
test
lahf
xor
js
sub
xchg
stos
sub
leave
test
into
pop
mov
xchg
loopne
dec
lea
cmp
xchg
adcb
pop
mov
ficomps
jb
xor
out
mov
add
jno
insb
sbb
movsl
inc
mov
mov
sub
lds
push
jbe
mov
je
aas
jle
or
and
std
repz
ret
xor
mov
lods
add
mov
dec
push
in
mov
iret
jae
sbb
mov
js
ss
sbb
push
out
int
push
mov
leave
cld
lret
push
nop
addl
and
test
subl
loop
mov
ljmp
pop
mov
cltd
aad
cld
mov
addl
or
or
sub
jmp
push
hlt
outsb
mov
push
sbb
mov
add
jo
adc
sub
mov
scas
mov
mov
push
mov
sub
dec
dec
fs
xchg
mov
int
stc
cld
bound
cmp
in
dec
sub
push
enter
lods
lret
call
add
sub
je
mov
add
cmpsb
mov
add
jbe
and
xchg
data16
mov
cmp
sbb
add
das
imul
loopne
add
sbb
add
ret
dec
sbb
inc
cmp
mov
mov
cli
inc
xchg
pop
push
jp
inc
call
jno
test
push
negb
sub
hlt
pop
in
add
push
jge
in
cld
xchg
add
test
add
mov
mov
aaa
out
bound
mov
mov
mov
sub
enter
add
mov
xor
insb
add
lds
mov
loope
push
mov
cmp
mov
cld
add
and
in
add
mov
adc
adc
lods
or
in
imul
cmc
lcall
jle
ja
add
and
cmpb
mov
test
fists
mov
pop
xlat
movsl
cmpsb
inc
jo
and
or
pusha
pop
adc
out
pushf
ja
mov
inc
dec
jg
xlat
xchg
mov
test
or
mov
sbb
orb
push
add
cmp
sub
sbb
push
sahf
cmp
out
ljmp
out
loopne
clc
insb
mov
sbb
push
jg
cmpsb
clc
je
daa
inc
aaa
pop
and
sbb
push
jnp
cwtl
aam
or
sub
ss
push
jg
adc
add
orl
iret
test
sub
into
dec
mov
inc
pop
inc
movsl
rcr
inc
add
lods
cmp
mov
scas
dec
scas
push
popf
mov
mov
sub
mov
jnp
sbb
or
out
scas
inc
arpl
insb
cli
imul
and
or
jl
clc
add
cli
daa
fistps
rorb
ret
andl
add
xor
pop
pop
fcoms
pop
adc
dec
lock
cmp
push
movsb
sub
rcll
sub
push
mov
mov
jb
lea
add
push
jo
dec
dec
dec
jmp
out
mov
es
or
sub
inc
mov
das
adc
mov
add
mov
ljmp
negl
out
decl
cwtl
mov
lcall
jp
push
movups
stos
add
ljmp
mov
in
sub
test
pop
aam
mov
or
stos
xchg
inc
xchg
aam
ja
rcl
call
ljmp
push
jns
fs
pop
sti
and
xchg
cmp
xchg
sbb
xchg
fs
pusha
xchg
ljmp
test
jo
push
add
fst
jbe
pop
xchg
jns
sub
or
pop
add
inc
pushf
loop
lods
add
push
cmp
sahf
xchg
cs
add
stc
das
pop
pop
faddl
add
add
adc
sub
mov
inc
xchg
lcall
leave
add
sti
stc
loopne
repnz
filds
stc
test
pushf
add
inc
inc
loopne
ljmp
hlt
inc
out
jo
add
xchg
jbe
pop
push
movl
mov
or
ss
lret
add
xchg
add
pop
sbb
popf
sbb
xchg
test
loope
clc
xchg
cmp
pop
aam
pop
fsubrl
sub
inc
ret
xor
outsl
fidivrs
pop
mov
add
xor
xor
jae
fwait
rorl
out
adc
add
sub
adc
in
in
dec
add
adc
xor
stos
aas
jle
insl
lea
loopne
roll
fbstp
ret
add
and
and
or
lock
lret
jo
sbb
pusha
mov
and
cmpsb
xchg
jmp
dec
sbb
add
ja
add
inc
xor
mov
mov
add
dec
lret
sarb
add
sbb
add
dec
jae
in
int3
add
cmp
sahf
mov
out
mov
mov
add
dec
icebp
pop
mov
mov
and
repnz
or
jne
pop
cli
push
xchg
and
push
adc
shll
in
add
test
adc
or
jne
addb
adc
rolb
fsubrl
mov
loop
dec
sub
outsb
mov
sub
data16
fisubrs
loopne
add
cwtl
outsl
faddl
bound
daa
mov
lret
xorl
je
jns
mov
add
loopne
dec
sub
lods
repnz
jmp
mov
dec
clc
sub
pop
lds
xchg
push
clc
xchg
daa
ljmp
rcll
adc
mov
jmp
mov
subb
xchg
decl
push
xchg
fildl
xor
adc
xor
cmp
add
daa
adc
pop
or
push
add
cwtl
jp
push
repz
sbb
inc
aam
mov
adc
test
xor
add
sub
stos
push
mov
fists
les
and
push
add
mov
sub
rolb
fidivrl
xchg
aas
lahf
aas
mov
push
xor
sub
and
enter
dec
mov
je
daa
add
xchg
cld
gs
sbb
and
pop
add
ss
jle
mov
xchg
or
mov
push
sbbl
mov
push
jb
sbb
mov
pop
add
xor
cmc
stos
inc
sub
mov
jle
test
or
cmp
mov
xor
outsb
cmp
mov
xchg
nop
mov
mov
jno
shll
testl
sub
xor
ja
pusha
and
jmp
addr16
aas
not
fs
xchg
cmp
add
mov
aam
andl
mov
add
cltd
iret
jle
xor
pop
shrb
test
rcrb
or
mov
movsb
dec
xor
or
lea
sub
add
push
out
jb
add
ror
int
movb
inc
pop
mulb
subb
pop
sbb
or
mov
in
add
pop
jl
mov
scas
push
xchg
cmc
pusha
aaa
add
or
dec
or
xor
push
cmpsl
pop
sub
sub
jecxz
cmp
adc
into
add
popl
jmp
and
and
cmpsl
dec
aaa
jae
mov
xor
fmul
daa
orl
fwait
out
out
or
sub
lods
mov
mov
push
call
cs
cltd
rcll
je
mov
insb
out
sbb
lret
adc
jnp
xor
add
pop
inc
in
dec
add
sub
lods
fwait
andb
add
ja
xchg
div
enter
inc
inc
insl
insb
daa
insl
cltd
adc
rolb
sbb
add
jae
mov
ret
mov
cmp
fldcw
push
dec
add
pop
in
mov
mov
ds
and
ljmp
gs
mov
pusha
add
in
cmp
push
push
and
and
out
repnz
and
inc
mov
cmp
jo
inc
mov
jb
mov
mov
or
dec
and
and
inc
sbb
sub
cmp
and
add
hlt
mov
adcb
jl
jae
adc
add
fwait
lcall
aad
sub
pop
inc
mov
mov
les
mov
and
add
aaa
out
les
adc
fsubrl
popf
orb
add
xchg
pop
addr16
xchg
mov
stos
cli
lods
mov
dec
lea
test
mov
dec
mov
fsubl
mov
dec
sub
add
sub
insb
mov
sbb
mov
test
lea
xor
dec
cmp
roll
mov
mov
cmpsl
dec
lods
addb
in
add
in
jnp
lret
lea
or
xor
test
sar
out
inc
add
push
add
fadd
add
adc
mov
add
xchg
fstl
cmp
sbb
call
pop
adc
out
imul
test
sub
xor
and
aaa
jmp
mov
jae
mov
test
mov
jo
mov
push
xor
add
data16
test
xchg
and
mov
mov
sub
push
push
or
add
or
aas
jbe
orb
mov
add
lcall
jo
call
loop
and
add
cmp
cs
sub
pop
jl
adc
push
jb
mov
mov
iret
push
lods
xchg
jp
enter
sbb
out
or
enter
lock
dec
sub
fcom
push
ja
stos
mov
jl
sub
xlat
mov
lret
cld
cmp
cmp
mov
clc
inc
mov
dec
add
mov
and
pop
aaa
and
cmp
or
jecxz
test
add
pop
sub
fwait
cltd
mov
add
add
xchg
fisttps
mov
mov
add
or
int3
add
jnp
aam
data16
stos
and
in
inc
mov
add
lea
xor
mov
ja
push
or
dec
shrl
xchg
jb
adc
push
inc
aas
arpl
cmpl
aaa
jmp
call
sbb
pop
sbb
rcrl
sub
add
xchg
jp
xchg
fldcw
pop
add
notl
in
cmp
pop
mov
pop
imul
or
shrl
fwait
sbb
mov
push
out
inc
test
enter
test
jmp
jb
sub
push
js
insl
sub
lahf
add
and
adc
cld
xchg
xor
movsl
cmp
imul
in
or
ret
lods
mov
mov
push
mov
fisttpll
xchg
inc
cmp
jmp
dec
ret
jno
fsubs
push
sub
iret
pop
lods
inc
mov
push
jb
cmpsl
movsl
call
mov
call
lds
pusha
lock
inc
in
insb
mov
sarl
sub
nop
mov
xor
sti
testb
bound
mov
cmpsb
mov
and
mov
loope
inc
inc
add
and
inc
sub
repnz
ret
add
mov
jns
stc
fistl
or
sub
mov
adcl
loopne
mov
bound
aaa
push
js
mov
mov
gs
in
jmp
das
into
in
mov
ror
or
adc
clc
mov
idivb
mov
sti
or
jge
rorl
or
xchg
sub
add
adc
sahf
sbb
outsl
mov
rorb
add
adc
ja
cli
fdivl
push
dec
mov
ret
inc
add
add
shll
mov
mov
mov
ljmp
popa
cs
lret
idiv
fdivr
jno
aam
outsb
mov
jg
and
add
lods
jg
xor
arpl
mov
in
gs
add
orl
xor
lret
sub
sub
pop
addb
xor
mov
sub
cmp
fwait
add
cs
daa
enter
lock
mov
push
dec
sub
adc
clc
pop
pop
mov
add
inc
inc
inc
sbb
xchg
mov
std
cmpsl
xor
jnp
clc
rorb
add
dec
pop
subl
mov
aas
dec
push
mov
adc
loop
sub
repz
fs
dec
aaa
xor
add
mov
cmp
add
mov
sahf
and
cmpl
xor
add
pop
pusha
int
dec
jnp
add
int3
pop
sub
fs
jecxz
jo
add
jns
xchg
rcl
jns
push
sub
or
sub
inc
jg
and
rolb
and
add
cmpsl
das
popl
mov
add
mov
xchg
xor
nop
xchg
jno
push
dec
xor
scas
adc
or
dec
shll
mov
scas
mov
mov
xor
addr16
mov
sub
jmp
aad
loop
sub
dec
lods
outsl
xchg
inc
mov
push
adc
push
insb
add
shlb
add
fmulp
stc
mov
sti
in
call
mull
subb
jge
xchg
popf
jmp
mov
pop
daa
add
and
xchg
adc
jmp
fwait
loope
aas
pushf
cmpsl
mov
stos
mov
insb
pop
mov
sub
or
cmp
mov
cmpsb
and
ljmp
add
and
inc
sub
loopne
test
xchg
sbb
pusha
dec
movsb
lods
jno
das
data16
or
outsl
arpl
lahf
xorl
fs
push
sti
mov
fs
add
test
or
loope
adcb
ret
cmp
mov
jmp
add
roll
add
jge
rolb
lret
das
prefetch
cmp
sub
xchg
hlt
roll
and
pop
int
sbb
inc
es
mov
stc
xchg
mov
out
stc
pop
or
sub
fs
or
sbb
cmp
enter
xchg
jbe
jb
loope
mov
shlb
add
lret
aaa
call
imul
sbb
jmp
ret
fdivrl
mov
sub
sub
jg
sub
mov
mov
mov
fldln2
sarb
jns
push
enter
dec
mov
or
push
pop
pop
cltd
add
push
add
xor
repnz
dec
aad
out
or
push
jo
cmp
mov
push
mov
inc
jge
lret
inc
cld
sub
mov
or
push
sub
outsl
out
test
push
cmp
cmpsl
mov
xor
scas
mov
jo
cwtl
jl
popf
mov
inc
mov
mov
add
gs
aad
enter
cmc
icebp
sbb
fadds
pop
jae
and
xor
loopne
add
iret
mov
and
add
into
testb
pop
xchg
nop
lock
mov
jae
and
adc
ds
mov
cmp
sahf
sbb
add
out
xlat
pop
or
mov
dec
xor
cli
push
pop
insl
lea
mov
add
fmul
dec
lds
add
or
clc
mov
mov
sub
mov
sti
iret
or
popf
push
pop
loop
adc
daa
rcl
pop
jl
fistl
xchg
repnz
jns
test
add
lea
fcoms
rolb
pop
jns
out
or
mov
sti
push
sub
movsb
mov
pop
inc
add
cltd
mov
fldenv
mov
scas
pop
call
inc
inc
mov
por
pop
orl
sub
fs
sub
enter
add
dec
and
mov
adc
sti
decb
lea
aas
mov
and
mov
faddl
scas
cmpsb
sub
les
cli
adc
lahf
and
add
mov
adc
mov
stc
sbb
mov
xchg
add
pop
scas
jnp
mov
int
cmp
faddl
adc
add
inc
add
rolb
jl
outsb
mov
fwait
adc
sbb
push
cmc
jo
mov
mov
outsb
lods
es
push
mov
mov
dec
test
mov
ficoml
sahf
dec
add
jno
mov
sbb
push
das
mov
dec
add
out
xor
aas
mov
addr16
aam
pop
call
mov
rorl
sbb
push
pop
lahf
test
add
repnz
in
pushf
inc
add
sub
mov
cmp
hlt
cwtl
in
mov
xchg
ljmp
rorb
push
jns
test
mov
or
pusha
add
out
stc
cmp
clc
mov
shll
push
data16
icebp
sub
in
xchg
xchg
xchg
mov
test
adc
movb
or
icebp
dec
push
add
adc
sub
xchg
adc
shll
mov
pop
add
cmp
fiadds
or
mov
pop
gs
ljmp
push
sti
daa
jno
add
fstpl
stos
xchg
cmp
and
sbb
out
imul
inc
pushf
adc
nop
add
nop
jnp
and
js
add
pop
cs
or
out
lahf
mov
test
mov
mov
cmp
loopne
fwait
iret
dec
sub
sub
lods
push
in
sbb
push
sub
mov
or
testb
xchg
dec
mov
call
out
jb
stc
das
inc
jge
fsts
ja
fwait
sbb
or
xor
mov
xchg
nop
movb
add
cmp
aaa
xchg
cmp
clc
sub
jmp
pop
add
pusha
jno
repnz
or
ss
dec
push
dec
sub
aad
in
lds
cmpsl
outsb
cmp
sbb
dec
mov
dec
push
or
mov
lcall
dec
out
inc
inc
out
xchg
mov
sbb
lret
icebp
popf
stc
addb
popf
cmc
xchg
mov
mov
add
jns
add
or
push
cld
push
sub
lahf
pushf
scas
ljmp
jle
dec
jae
xchg
inc
xchg
push
add
lods
mov
in
ss
sub
mov
shlb
sub
add
lret
xchg
cltd
aam
jbe
pop
or
mov
pop
mov
incl
imul
add
jmp
out
push
xor
ret
fdivp
je
xor
or
aam
sti
stos
sub
or
push
xor
stos
subl
fstpt
add
outsb
mov
int
mov
mov
sub
in
xchg
add
pop
add
bound
sbb
lds
rorb
andb
add
add
push
add
fcomip
das
repz
rorl
in
add
mov
inc
fildll
jae
lcall
mov
inc
add
sub
or
add
pop
mov
les
rcrb
cmp
daa
lds
orb
cmp
and
add
fbstp
test
mov
mov
mov
cmp
jl
leave
lret
dec
js
push
das
or
lock
roll
rclb
pop
sbb
verw
jecxz
xchg
sub
ret
out
lock
push
enter
add
scas
xor
orb
and
dec
bound
mov
hlt
repz
lldt
aam
push
fwait
sbb
mov
pop
adc
mov
cmp
push
test
scas
adc
cmp
movsl
mov
loopne,pt
xor
sub
inc
dec
mov
sub
scas
es
icebp
mov
cwtl
add
adc
add
pop
sbb
out
out
pop
push
lret
mov
and
and
insb
mov
add
orb
inc
or
jnp
mov
mov
xchg
icebp
add
sub
test
jo
jne
andl
lods
cmc
dec
mov
adc
cmp
ret
ja
ltr
in
rcr
pop
in
loop
push
dec
cmp
fistpll
fistl
inc
rolb
sbb
xor
cmpsb
outsb
inc
cmp
push
adc
andb
in
sub
fs
fldcw
jmp
addb
cmpsb
addr16
mov
add
lret
dec
out
sub
dec
push
mov
pop
mov
add
sub
dec
xor
mov
lret
mov
outsb
sub
ret
pop
xlat
sub
add
das
call
push
clc
mov
daa
mov
push
mov
push
jmp
loop
mov
and
or
mov
dec
decl
fimuls
mov
lock
inc
jg
lcall
cmp
jle
cwtl
mov
xchg
mov
loope
add
add
mov
adc
mov
cmp
mov
pop
xor
mov
jbe
xor
cld
inc
add
dec
mov
jne
mov
test
add
pop
fistps
dec
jb
add
dec
pop
repnz
mov
in
out
out
mov
test
xorl
adc
ror
push
mov
xor
test
movsl
subb
mov
push
stc
mov
pop
lock
add
add
jmp
add
int3
cmp
sub
test
in
mov
dec
dec
out
sbb
xor
or
into
mov
pop
pop
add
mov
jno
add
icebp
popa
jmp
insb
jecxz
daa
addb
mov
repz
hlt
ss
cs
sub
xchg
sub
mov
fwait
je
add
test
push
jnp
mov
nop
cmp
cmp
mov
mov
sbb
cwtl
stos
or
xor
arpl
add
add
ret
dec
sub
jne
sub
xchg
in
sbb
mov
insb
sub
rcll
fcmovbe
push
hlt
or
jl
pop
mov
adc
sub
push
js
add
dec
jp
or
cmpsb
push
pop
add
pop
mov
rorl
movsl
fstps
sub
lret
in
sub
jns
pop
cmpsl
andb
or
sbb
fcmovbe
pop
cmp
or
mov
xor
jle
daa
sbbl
add
test
inc
add
xchg
ljmp
xchg
jbe
pushl
push
mov
inc
std
sub
mov
add
imul
sbb
lods
js
outsb
mov
cmpsb
into
addb
test
push
out
pop
fdivr
mov
pushf
add
cwtl
inc
fwait
sbb
pop
sbb
hlt
or
sbb
mov
mov
mov
sbb
fisubl
cwtl
mov
fwait
mov
inc
mov
inc
fwait
loope
in
sub
jmp
xchg
push
jo
mov
fimull
jmp
imul
add
aaa
es
rorl
loop
or
ja
pusha
or
jmp
ja
test
add
js
add
sahf
xor
cltd
jmp
adc
ja
fidivl
mov
mov
scas
sub
adc
mov
stc
outsb
in
fwait
insb
mov
cli
and
insl
test
mov
imul
adc
xor
insl
add
sub
xchg
andb
in
sub
xor
aam
aas
adc
add
jp
cmpsl
mov
and
add
test
xchg
ds
ja
cs
fwait
adc
sbb
loopne
and
pop
mov
lret
dec
popf
dec
add
pushf
hlt
mov
jp
iret
xlat
pushf
das
fisttpll
inc
mov
stc
filds
add
sub
and
lock
ljmp
in
adc
mov
mov
mov
sbb
cs
stos
jg
adc
popa
push
add
or
mov
push
mov
lea
inc
xor
push
sbb
push
js
mov
adc
je
or
adc
sub
jns
adc
jl
loope
cmpsb
ss
mov
push
insb
jg
mov
cwtl
pop
repz
dec
test
movsl
sub
push
pop
dec
jecxz
sbb
add
insl
mov
inc
cmp
jne
push
imulb
jne
xchg
inc
lea
sub
decl
std
fwait
add
lock
dec
jle
pop
mov
sub
fwait
test
xchg
mov
into
add
scas
bound
add
xor
mov
mov
les
mov
sub
push
call
cld
xchg
xor
in
lock
or
cmp
sub
test
cmp
scas
orb
pop
scas
push
push
push
add
push
inc
push
and
and
mov
ds
xor
or
sub
lea
sub
cmpsb
xor
rcl
inc
dec
cwtl
add
and
add
mov
lds
mov
ja
repz
mov
or
pop
mov
mov
add
or
fwait
pushf
pop
jne
pop
add
insb
test
mov
xchg
mov
les
js
cmpsl
cmp
sbb
pushf
add
fisubrl
add
enter
orl
daa
iret
xchg
loope
ds
cld
mov
adc
out
sahf
mov
mov
mov
faddp
inc
rcll
mov
jno
sub
lret
rorb
mov
dec
dec
lods
rol
mov
adc
mov
xor
clc
dec
sub
js
movl
adc
movsb
and
nop
add
into
or
js
dec
les
sub
pop
pop
and
xchg
mov
add
cmp
inc
cmp
adc
pop
aas
mov
mov
dec
dec
sub
outsl
xchg
pusha
inc
adc
mov
add
movsl
popa
shll
mov
cwtl
cltd
inc
out
sub
icebp
les
cld
add
fsts
push
ret
mov
add
xchg
mov
sub
aad
aaa
sub
or
daa
sub
mov
jno
and
stc
test
mov
push
scas
lahf
mov
xor
ss
and
add
in
ret
and
mov
into
insb
sub
xor
sub
out
mov
pop
dec
fcompl
je
add
sub
fimull
and
add
aad
jp
sbb
mov
or
and
xchg
adc
andl
add
aas
sub
pushf
aam
add
push
mov
dec
rorl
push
and
cmp
mov
add
mov
outsb
inc
fisubl
movsb
fisubrl
shlb
push
test
insb
sbb
push
sbb
mov
aas
cs
daa
lret
shlb
sub
cmp
sub
mov
hlt
ds
sub
xchg
add
stc
lods
add
das
and
lock
psrlw
orl
mov
adc
mov
jecxz
sbb
movsl
or
add
das
sub
in
popa
dec
call
add
andl
add
dec
outsb
das
inc
imul
or
in
pop
sub
or
into
add
mov
jnp
scas
shl
mov
adc
je
pop
ja
aad
fcom
std
cld
or
and
push
jb
and
negb
sub
outsb
lret
out
adc
fists
mov
dec
xchg
sub
out
shrl
adc
mov
test
mov
clc
lock
add
jp
daa
int3
add
pop
fistpll
cmp
add
insb
add
jle
test
mov
in
shlb
mov
rorb
or
add
cmpsl
jb
add
xor
aas
mov
ss
mov
sbb
jno
mov
lods
shlb
arpl
ds
addb
add
xchg
test
xchg
enter
lds
pop
add
xchg
arpl
in
xchg
push
orb
rcr
enter
leave
gs
pop
test
pop
jne
das
aam
imul
jo
dec
add
cmp
inc
mov
add
mov
pusha
pushf
mov
sbb
adc
insb
add
adc
add
int3
sbb
mov
clc
and
xor
sub
mov
and
addb
xchg
roll
xor
ds
int
dec
inc
mov
rcrl
mov
xchg
mov
icebp
add
jnp
pop
shrl
and
adc
lret
scas
add
push
push
inc
aam
jl
and
idivb
add
push
jo
mov
xchg
dec
inc
test
int3
lea
sub
orb
mov
lods
push
loopne
enter
fstl
mov
jne
mov
mov
xor
adc
rolb
push
push
mov
mov
in
push
mov
cs
cmc
adc
lcall
rcrb
mov
ljmp
adc
adc
push
mov
add
aad
jmp
cwtl
adc
lcall
loopne
xchg
jmp
push
popf
mov
pop
test
es
cmp
pop
jecxz
test
adc
push
sub
sub
mov
mov
mov
scas
or
mov
dec
int3
mov
rolb
inc
dec
shrl
mov
sbb
jae
sbb
aad
add
out
pop
inc
cmp
push
enter
jnp
pop
add
push
sti
cli
sub
add
add
or
mov
orb
mov
out
sub
sbb
lcall
push
xchg
dec
pop
push
cli
xchg
hlt
mov
ds
rolb
lock
mov
rclb
popf
sub
or
add
stos
rorb
into
inc
inc
mov
pop
into
cld
add
mov
in
add
sub
xor
cmp
int
hlt
add
call
mov
je
jle
pop
mov
push
add
cmpsb
jnp
outsb
add
jnp
jp
inc
adc
daa
cmp
add
pop
push
sub
jmp
xor
and
xchg
movsl
add
aas
or
add
sub
push
ja
ret
inc
jo
add
push
int3
sti
dec
addb
js
add
mov
cmpl
repz
inc
pusha
add
adc
loope
jmp
sub
dec
orl
pop
fisubrl
stos
or
insl
cld
sbb
fisubrl
adcb
mov
ja
scas
scas
mov
negl
insb
mov
mov
jnp
mov
sub
pop
cltd
pushf
mov
inc
push
inc
add
js
loopne
and
mov
push
fidivl
add
dec
filds
fistps
or
and
or
mov
sub
imul
jg
xor
cli
dec
pop
decl
cld
sub
shrl
adc
mov
push
ds
lea
xchg
outsl
and
pushf
addr16
cmpsb
in
dec
and
xchg
mov
js
and
add
cmc
sbb
aad
xchg
iret
sub
or
cmp
cwtl
add
xor
mov
cltd
je
pop
in
jecxz
mov
mov
lea
jo
mov
pop
add
stos
fs
jns
jl
add
outsl
in
mov
clc
add
sub
nop
lcall
mov
mov
xchg
add
pop
popf
aad
or
add
mov
cmp
add
push
pop
mov
flds
mov
sub
push
sub
inc
arpl
js
mov
inc
add
popa
dec
jge
sub
rorl
inc
xchg
inc
or
push
dec
push
mov
repz
fdiv
jnp
sub
add
mov
mov
mov
imul
iret
mov
sub
cltd
mov
add
jnp
cmp
add
sub
test
xlat
lods
dec
sub
sbb
popf
dec
push
and
pop
xor
xchg
fs
lds
ret
add
cmpsl
insl
lea
loopne
pop
cmpsb
adc
push
cld
add
cmp
mov
subb
out
jno
mov
xchg
daa
fcompl
mov
mov
in
out
adc
add
mov
xchg
das
loop
orb
subl
or
das
into
test
mov
data16
and
ja
jbe
add
sub
fs
push
add
xchg
arpl
movsb
lods
cs
js
sub
sarl
jno
dec
iret
adc
cmp
pushf
add
pop
adc
or
out
push
das
daa
mov
push
and
or
jmp
fnsave
push
push
add
push
movb
into
mov
and
adc
in
jnp
mov
scas
into
popa
push
add
cmp
pop
or
ds
sbb
dec
dec
dec
inc
int3
dec
pop
cmp
add
mov
mov
shlb
push
loop
xchg
cltd
jb
daa
dec
call
movsl
jo
cmc
enter
mov
push
cli
xchg
fwait
push
rorl
rorb
sub
mov
lods
add
sbb
repnz
sahf
add
pop
test
jns
mov
outsb
mov
mov
add
inc
jb
mov
and
pop
mov
pop
into
pop
xor
mov
jmp
lret
shrb
dec
aam
sti
loope
fwait
jecxz
and
push
sub
sbb
fs
push
push
dec
repnz
lret
push
sub
outsl
pop
push
pop
sub
pop
fwait
pop
dec
add
mov
inc
aas
sub
jbe
xchg
movsb
adc
or
cmp
orb
add
sahf
lahf
sti
mov
dec
andb
jmp
pushf
add
scas
repz
add
jo
pop
stc
es
push
mov
insb
loope
push
add
loop
ljmp
aam
add
xor
mov
push
mov
pop
dec
add
sbb
add
ja
pop
xchg
cmp
and
test
adc
dec
dec
pop
mov
movsb
bound
cli
call
nop
mov
aas
xchg
cmp
int3
outsl
inc
add
xchg
dec
enter
adc
shrb
lret
fstpt
mov
xchg
fcmovu
adc
std
clc
sub
adc
loop
add
pop
mov
add
repnz
shlb
repnz
fstpt
lods
add
cmp
sub
or
cmp
mov
enter
mov
dec
jecxz
add
arpl
mov
shrl
sub
xor
mov
iret
sbb
xchg
mov
out
dec
faddl
lret
pop
fsubr
js
xor
int
dec
or
pusha
sub
out
jle
xchg
push
push
pop
jo
int3
adc
xor
push
dec
sub
es
imul
add
insl
sub
dec
loop
add
cmpsl
or
in
add
and
shll
lea
into
or
addl
orb
mov
lcall
xor
push
inc
in
xchg
in
fsubl
iret
lea
dec
jp
les
add
fiaddl
faddp
inc
daa
mov
cmp
arpl
sub
es
push
sbb
xor
and
xchg
dec
push
push
jge
test
and
add
je
fs
jae
test
xchg
cmp
sub
lods
xchg
fdivrs
test
rclb
add
jae
popa
mov
mov
add
xchg
xor
inc
leave
insb
mov
dec
pop
xchg
inc
iret
mov
fnstenv
add
mov
dec
pop
popa
lods
add
out
xchg
das
outsb
push
jecxz
clc
jbe
sub
aas
nop
mov
mov
mov
jg
cs
xchg
sub
jns
and
xchg
cld
mov
push
xchg
or
xchg
jl
add
add
cmpsl
sub
add
sbb
mov
mov
arpl
push
repnz
add
mov
cmp
add
dec
in
pop
sub
sbb
rcr
mov
mov
gs
or
out
leave
outsb
imul
push
push
mov
add
push
or
pop
lods
iret
or
sub
mov
lock
xlat
push
fstl
into
int3
and
add
stc
popf
popa
scas
add
add
xchg
mov
loope
add
sbb
push
call
add
in
xchg
inc
aam
rcl
adc
pop
push
cmp
pushf
jl
mov
mov
sub
ljmp
xorb
test
pop
mov
mov
jmp
cld
dec
sub
shlb
push
mov
sahf
xchg
push
mov
pusha
jp
cmp
test
lcall
xchg
add
mov
add
mov
into
out
sub
xor
mov
fcmovnu
cmp
pop
hlt
int
pusha
fdivp
add
cmp
shll
mov
dec
mov
out
fdivrs
sti
xchg
push
lea
push
ret
loopne
mov
int
push
dec
inc
add
mov
out
repz
es
or
cld
scas
and
stos
mov
add
addr16
in
cld
pop
mov
or
push
jae
lock
dec
into
mov
mov
movsb
push
mov
inc
lahf
add
lcall
jno
add
sub
jnp
or
out
sbb
pusha
mov
lahf
add
adc
inc
mov
ret
push
mov
mov
mov
xchg
in
add
cmp
add
sub
mov
in
or
xchg
mov
call
jne
cs
ret
push
mov
add
loopne
add
cs
int3
jb
add
add
pop
fmuls
fcmove
and
lahf
test
dec
jecxz
insb
dec
sub
adc
faddl
mov
xor
out
repnz
movsb
sub
in
incb
jp
or
testb
lock
adc
sbb
stos
cmp
sub
popf
cmp
test
mov
cmpsb
sbb
movsl
xchg
dec
pushf
in
add
cwtl
popf
lds
sub
xchg
mov
mov
shrb
shll
push
add
cmp
frstor
mov
and
mov
outsl
imul
fisubrl
add
addr16
orl
popl
jl
rolb
sub
pop
testl
or
js
add
pushf
lods
add
sub
daa
mov
push
jb
mov
jp
push
xchg
mov
ds
jnp
add
sub
add
sbb
xchg
fistl
add
cld
xchg
aad
fimuls
xchg
js
add
pop
cmp
xchg
mov
pop
inc
dec
add
mov
mov
inc
sbb
add
addr16
pop
xor
dec
loopne
add
push
and
lods
sub
xchg
pop
test
adc
xor
testl
adc
add
inc
dec
inc
imul
sub
or
jnp
inc
add
or
shll
sub
push
mov
add
jb
sub
out
dec
sti
addb
dec
pop
and
es
js
add
mov
add
cs
adc
scas
jp
add
dec
mov
pop
stos
test
mov
mov
scas
mov
adc
add
lcall
sub
add
les
adc
lcall
test
xchg
inc
push
fsts
sub
ret
cmp
rorb
inc
imul
enter
loope
add
aas
stc
sti
fs
leave
mov
add
mov
sub
mov
add
jbe
out
xchg
adc
sbb
sub
cmpsl
repnz
cmpsb
sub
xchg
add
shll
mov
dec
xchg
push
inc
dec
cmpsb
dec
jmp
repnz
movsb
daa
push
cltd
sub
rcrl
inc
add
jnp
movsl
std
ja
nop
shlb
mov
mov
lcall
inc
dec
add
cmpsl
popa
add
mov
ja
shl
andl
pop
inc
lock
inc
test
cmp
enter
jae
std
add
mov
mov
mov
push
cmp
mov
jbe
sbb
add
hlt
lock
push
test
xor
cmpsl
loopne
mov
lcall
add
out
push
add
dec
sub
psubsw
adc
add
cmpsb
es
out
std
lcall
adc
icebp
add
lock
add
je
xchg
nop
inc
lock
subb
sub
sbb
cmp
jno
xchg
push
out
sub
icebp
add
jl
das
cld
sbb
push
or
xchg
lock
stos
sub
dec
add
cwtl
std
inc
mov
cmp
mov
add
mov
orb
jne
out
dec
sarb
loop
xchg
adc
mov
das
jbe
dec
imul
div
add
inc
sub
js
stc
mov
and
xchg
xchg
jecxz
add
mov
sahf
lahf
mov
mov
cmpsb
das
aas
into
inc
mov
push
or
add
aas
out
inc
mov
add
enter
cmpsb
push
movsl
add
mov
movsb
inc
add
mov
or
push
sub
and
andb
sub
movsb
test
pop
and
jo
enter
dec
sbb
or
sbb
and
jnp
sub
test
and
or
imul
and
test
pop
and
and
mov
add
jle
mov
pop
and
sub
sub
and
xor
sub
cli
pop
out
cs
or
or
pop
push
scas
subl
xchg
mov
add
dec
cs
call
or
jge
or
andb
or
lds
pop
insl
and
loope
loopne
or
cli
sbb
xchg
xor
mov
ficomps
adc
mov
test
inc
mov
loop
and
pop
cmpb
in
or
outsb
dec
xorb
mov
sbb
or
and
outsb
addb
ret
add
xchg
cs
mov
push
add
into
or
sub
push
or
add
mov
xorb
mov
andb
pop
sbb
jp
xorb
or
lods
shr
or
in
sbbb
xor
pop
cmc
add
dec
and
leave
lods
movsl
sub
lods
adc
mov
mov
sti
shll
sub
mov
sbb
mov
mov
sub
scas
xor
bts
cmpsb
lea
std
or
lcall
es
in
insl
insb
push
mov
imul
insb
add
nop
add
jle
jp
inc
inc
pop
rcrb
repz
mov
fucom
gs
dec
ja
push
lcall
add
pop
push
cmpsl
pop
and
test
xor
and
mov
sub
mov
scas
pop
or
push
or
sbb
loopne
push
or
cmp
xor
mov
and
add
test
mov
icebp
stc
jbe
jmp
lock
sub
out
xlat
xchg
movsl
adc
push
call
dec
int3
ror
sub
das
fcmovnbe
enter
push
call
aam
push
sub
xchg
mov
out
fwait
mov
lea
cmpsl
lret
ds
and
cmp
xor
cmp
mov
xchg
test
icebp
add
sbb
xorb
add
jp
nop
add
lahf
popf
xchg
pop
mov
xchg
outsb
add
into
je
in
outsl
push
sbb
push
pop
jl
mov
add
je
in
dec
jbe
or
inc
jmp
push
jne
dec
fists
test
dec
popa
mov
in
or
pushf
sub
sbb
jnp
cmp
scas
and
xor
sub
pop
cmpl
or
mov
and
push
and
sbb
scas
push
outsl
xor
adc
pop
adc
pop
adc
lahf
in
cmp
xchg
iret
hlt
add
lds
mov
stc
add
ljmp
pop
repnz
mov
add
call
ror
imul
mov
rcrb
repz
testl
stos
sbb
orl
cwtl
xchg
add
in
das
mov
add
mov
mov
roll
data16
mov
push
push
mov
mov
jae
dec
jo
fldcw
popa
das
xorb
mov
dec
push
clc
sub
xchg
sbb
hlt
jg
je
cmova
jno
ret
push
pop
cmc
dec
jae
fcmovnbe
inc
push
lock
rcl
outsb
add
sub
and
daa
mov
jl
sbb
sbb
or
sub
sub
shrb
add
or
add
cs
fdivp
das
sbb
xchg
vpsraw
inc
sti
js
in
sub
jo
cmc
rol
xchg
lock
leave
andb
stos
cli
inc
and
pop
repz
push
in
ret
xchg
jmp
int
sahf
mov
xchg
or
or
fisubrl
xchg
mov
jo
cltd
mov
sahf
test
insl
cltd
xchg
nop
xchg
sahf
sub
mov
sbb
sti
and
adc
dec
outsl
adc
les
inc
pop
jae
inc
dec
lock
pop
adc
inc
addr16
dec
jp
movsb
cwtl
push
dec
imul
inc
inc
dec
lods
add
jle
fs
inc
lds
insb
mov
mov
jnp
gs
bswap
inc
xor
test
and
stos
cmpsl
xor
shll
add
xor
pushf
aaa
decb
xchg
adc
sub
jbe
cwtl
add
adc
adc
and
lods
cmp
mov
push
rorl
iret
mul
or
xor
lret
push
in
dec
leave
into
cli
stos
out
inc
shlb
xor
movsl
testb
lret
shl
clc
in
int3
inc
sub
xlat
push
stc
mov
cmp
hlt
cmp
icebp
sbb
addb
mov
and
and
mov
aad
sub
mov
data16
mov
insl
xor
roll
das
add
insb
movsb
hlt
jge
pop
divl
cmpsl
inc
lcall
inc
add
dec
jp
inc
inc
arpl
pop
add
inc
ds
jo
outsb
imul
inc
pop
jns
push
push
lods
jns
sbb
dec
es
inc
add
dec
add
jnp
pop
cmp
insb
push
mov
cld
movsb
int
sub
adc
lea
add
mov
cmp
sbb
stos
or
test
push
and
add
cld
jno
sub
xor
and
push
lcall
mull
decl
pop
movsb
mov
call
shlb
rcr
dec
xor
jmp
push
lods
int3
aad
std
inc
fmull
add
inc
ror
add
pop
in
hlt
mov
fsubrp
push
aam
add
ret
jmp
add
xor
call
pop
cmpl
sbbb
sbb
cltd
or
mov
adc
xor
mov
inc
outsl
data16
jbe,pn
lds
jp
push
arpl
jmp
adc
inc
imul
imul
mov
jp
outsb
inc
int3
fisubrl
aam
fdivs
sub
push
ljmp
push
into
je
pop
lcall
and
xlat
cmp
adc
xchg
adc
push
jns
repz
lea
or
xchg
sub
int
and
in
pop
mov
xor
sbb
jne
movsb
or
leave
int
xchg
adc
adc
sub
jb
call
sahf
daa
sub
inc
dec
mov
stos
aas
sub
sbb
add
sar
dec
nop
mov
scas
cmp
add
out
int
xchg
mov
cmp
mov
xor
mov
pusha
mov
mov
test
mov
add
cmp
xor
mov
xchg
aaa
scas
popf
lock
mov
addr16
in
arpl
push
pop
testl
xor
inc
jno
sahf
pop
insl
dec
mov
jb
jo
add
shrl
xor
pop
ja
into
bound
push
jne
orb
ss
sub
sub
sahf
dec
aas
mov
or
sbb
ja
pop
popf
int
fists
or
pushf
dec
addps
add
sbb
jae
pop
xorb
cmp
jge
imul
in
inc
fucomip
add
cmpsl
lea
insl
repz
outsb
fcomi
pcmpeqw
lcall
pop
loopne
dec
add
shll
sbb
daa
enter
cld
xchg
inc
jo
enter
add
mov
mov
cmpl
mov
jo
stos
cwtl
mov
push
lods
add
imul
sarb
xchg
cld
stos
aas
xchg
sbb
lods
adc
ja
out
sbb
pop
xchg
or
addr16
into
mov
sbb
loope
jl
loop
sbb
pop
fidivl
push
bound
pusha
add
push
xor
mov
jae
rol
pusha
add
sub
aaa
mov
sbb
mov
cmp
add
je
pop
ret
xor
and
or
or
push
xchg
xor
rclb
cmp
popf
adc
mov
nopl
das
rolb
mov
sub
dec
gs
cmc
out
stos
test
sub
jcxz
cmpsl
xchg
addl
iret
sub
add
cwtl
jl
outsb
idivl
roll
pop
pop
xchg
fwait
in
inc
sbb
push
sub
push
mov
xor
cmp
imul
jg
xchg
scas
mov
in
cmp
xchg
pop
lods
sub
add
push
add
cltd
mov
mov
add
cs
fildl
push
cmp
mov
xor
sub
push
js
out
aas
popa
and
insb
aaa
in
mov
iret
in
cld
cmpb
mov
in
xchg
cli
or
sub
pop
aas
and
pop
loopne
pop
cmp
mov
push
dec
sbb
add
lds
fldt
lcall
jb
inc
rorb
add
test
inc
imul
jp
jne
mov
fiadds
out
dec
js
mov
jb
mov
add
xchg
adc
mov
add
lods
cwtl
push
mov
inc
cmp
fldt
sub
adc
gs
fabs
aad
xchg
jmp
nop
or
daa
inc
loopne
sub
pop
add
xor
lods
inc
add
ret
addr16
pop
loopne
sub
jl
push
dec
push
rcl
add
imull
xchg
rolb
cmpsl
jg
pop
mov
inc
lret
ja
dec
or
sub
je
sub
cmp
nop
cmp
fst
mov
hlt
sub
loopne
and
ret
sub
mov
xor
repz
cwtl
push
pop
mov
push
xor
leave
mov
add
push
sbb
cwtl
or
fs
add
pop
iret
jmp
add
dec
mov
data16
xchg
outsl
sub
or
sub
ja
add
inc
std
jae
shrl
mov
jno
int
inc
test
sub
dec
add
xchg
and
mov
sahf
dec
fdivr
cltd
adc
xchg
push
fistpl
add
testl
push
lea
mov
cltd
aaa
push
in
push
ss
mov
cli
dec
movsb
pop
fildl
xor
iret
xchg
jmp
cmp
dec
out
push
mov
inc
lods
pop
mov
jle
add
bound
mov
arpl
fs
add
jmp
sbb
fiadds
scas
std
lea
sbb
xlat
add
xchg
loopne
mov
bound
mov
fimull
aam
xor
sub
xorb
xchg
add
gs
push
add
ret
movsl
cmc
test
imul
das
fwait
jns
add
mov
xor
hlt
in
add
sub
mov
in
push
adc
stos
cmp
popf
or
fdivrs
mov
or
mov
mov
xorb
and
roll
out
aaa
pop
popf
xor
inc
sub
inc
out
sub
roll
mov
pop
cs
mov
ret
loopne
clc
push
test
push
mov
bound
test
jecxz
popa
das
mov
shlb
in
clc
xchg
and
fucomi
xor
nop
mov
pop
cmp
xor
or
adc
cld
mov
push
push
fisttpl
gs
dec
outsb
ljmp
jle
adc
add
inc
sbb
repnz
movsl
pop
push
pop
cmp
inc
mov
lcall
mov
in
and
das
mov
jo
sub
mov
mov
push
push
fsub
adc
shrl
mov
cltd
in
test
imul
push
sub
xchg
loop
es
adc
shrb
xor
mov
cmc
adc
jbe
cs
and
cmp
push
and
outsl
add
pop
xor
cli
divw
mov
mov
js
cmp
into
fbld
xchg
pop
sub
mov
incb
faddp
jp
mov
ja
add
push
and
sbb
mov
or
push
js
das
cmpb
fildll
dec
mov
lcall
test
clc
xorb
jbe
jae
addb
cli
leave
xchg
add
loopne
js
decb
stos
dec
mov
sub
call
iret
pop
add
call
adcb
add
sub
mov
xchg
add
mov
jl
pop
add
fldenv
scas
lea
xchg
adc
inc
sti
push
lahf
xor
inc
mov
and
cmp
pushf
mov
sub
sbb
scas
jns
popa
mov
in
dec
fwait
sub
push
or
cmpsb
xor
add
rcrl
sub
and
xor
loop
mov
adc
mov
rcrb
xlat
jge
add
jg
and
gs
lock
add
enter
pop
cmpsl
adc
jns
lods
mov
xor
dec
xor
cmp
imul
inc
cmp
subl
dec
sub
cmp
add
sub
bts
iret
cld
das
sub
ds
inc
add
sub
jge
and
and
adc
inc
cld
scas
in
mov
mov
inc
jb
mov
movsl
jnp
push
xor
sub
push
addr16
add
push
scas
jbe
lds
popl
bound
adc
push
xlat
jo
idivb
movsl
inc
cmp
push
stos
mov
add
mov
test
jno
xchg
rorb
add
dec
dec
cmpsl
jnp
jnp
or
push
mov
pop
pop
sub
dec
icebp
mov
mov
push
insl
inc
sysexit
js
scas
fs
add
in
inc
adc
movsl
dec
pop
lods
adc
sub
nop
mov
movl
mov
xchg
xchg
xor
das
sub
dec
sbb
stc
into
add
scas
and
cli
dec
push
pop
add
sub
loopne
push
out
mov
hlt
hlt
sub
fimull
notb
sti
sbb
cmp
loopne
add
or
flds
call
cld
arpl
fmuls
sbb
add
mov
adc
push
out
fiadds
xchg
das
xchg
popa
sub
jb
enter
xchg
mov
test
sbbb
mov
mov
pop
test
pusha
shl
sbb
arpl
movsb
xlat
daa
mov
xorl
repz
lea
push
ret
jae
xchg
cltd
aad
aaa
enter
cmc
add
std
and
fucomi
xchg
loopne
cld
outsl
add
scas
push
xchg
or
lds
insl
and
add
ss
and
xlat
addr16
test
or
sbb
xchg
mull
dec
sub
popa
sub
inc
sbb
dec
xchg
out
stos
out
mov
fists
pop
add
cltd
lsl
jmp
and
arpl
mov
cmc
push
jne
jns
push
jno
sub
xorl
leave
repnz
push
unpckhps
mov
or
cmpsl
jns
fnstcw
sub
test
lahf
mov
fildl
pop
add
jnp
sbb
xor
mov
mov
mov
ret
test
ljmp
jmp
in
das
mov
dec
pop
and
mov
and
je
iret
xor
mov
push
fstpt
das
cmpsb
stc
xchg
jae
ss
mov
dec
in
sbb
loopne
fidivs
out
pusha
dec
ret
filds
insl
xchg
aad
inc
negb
xlat
mov
movsb
xor
insl
mov
loop
sub
mov
push
clc
jg
loopne
pop
jno
das
pushl
or
sbb
cmp
xchg
enter
cmp
addb
mov
cmp
or
mov
jge
insl
sub
je
inc
loope
stc
and
ss
pop
lret
out
movsl
cmp
push
sub
mov
mov
xchg
insb
std
iret
int
cmpsl
and
bound
mov
leave
add
fldt
ja
add
mov
in
fdivs
push
inc
add
pshufw
dec
xchg
ret
mov
enter
and
insb
clc
jmp
add
add
lcall
cmpsb
cs
sbb
cmp
test
mov
shrl
cld
mov
or
jp
mov
push
sysexit
sbb
enter
hlt
mov
mov
subb
sub
in
push
dec
push
or
cmc
jne
or
inc
stos
sub
mov
sarb
and
mov
cmp
add
mov
ljmp
stos
mov
lahf
sub
stos
imul
mov
add
cmp
mov
inc
add
cmc
gs
add
cmp
jns
sahf
mov
sub
mov
jp
dec
imull
lock
add
es
add
ljmp
xchg
mov
add
aaa
add
xchg
push
cmp
cmp
dec
and
mov
pop
aaa
shlb
in
in
sub
inc
lret
adc
inc
adc
mov
subl
inc
lods
lahf
cmpsl
adc
dec
push
xchg
sti
inc
sub
inc
mov
loopne
fbld
test
aam
inc
mov
push
imul
xchg
mov
sub
pop
hlt
mov
add
int
xchg
add
ret
mov
xchg
or
repnz
and
ljmp
or
in
xor
mov
xchg
fimuls
shlb
push
pushf
adc
add
out
dec
aaa
xor
adc
testb
xor
push
js
ret
mov
adc
cld
sub
in
ja
push
aad
and
into
test
push
sub
cmpsb
xor
shr
xor
in
cmp
lods
iret
ds
xor
pop
sub
inc
jb
pop
fcoml
add
mov
fildl
ja
sbb
mov
push
addl
repnz
es
inc
push
aaa
add
addr16
fdivp
jno
jae
add
sub
imull
repnz
ja
xor
hlt
pop
pop
in
sub
adc
add
sti
loope
cmp
nop
and
icebp
andl
ficompl
loope
ljmp
cmc
ss
adc
test
adc
rolb
loopne
or
mov
mov
mov
add
leave
fisttps
imul
sub
incb
in
jmp
ds
dec
and
inc
add
xlat
enter
scas
mov
test
xchg
out
leave
jnp
mov
add
xchg
xor
pop
sbb
rorb
dec
mov
push
pop
dec
cmp
or
dec
sbb
sub
adc
and
pop
mov
inc
rorb
dec
mov
imul
cmpb
and
sbb
inc
cmc
mov
negl
or
inc
cmp
adc
sbb
das
and
imul
inc
adcb
add
mov
popf
and
inc
mov
add
aam
dec
cmp
xor
mov
push
cmp
mov
shrb
mov
outsl
arpl
out
sbb
sub
push
test
push
flds
adc
hlt
je
mov
nop
daa
fwait
mov
mov
or
ss
leave
xor
mov
gs
sbb
mov
fsubrl
adc
inc
pop
arpl
xchg
sbb
pop
add
aaa
out
aaa
push
cmpsl
add
mov
pushf
xchg
stc
jne
mov
mov
test
add
xchg
stc
aas
adc
mov
xchg
nop
imul
and
lahf
pusha
and
or
inc
mov
push
in
lods
mov
mov
add
int
and
add
insb
es
or
leave
add
lods
call
imul
dec
js
pop
pop
or
pop
inc
cwtl
test
mov
inc
fmulp
sarl
sbb
rorb
jb
fnstcw
add
fnstsw
push
lcall
add
mov
ljmp
xlat
jecxz
push
in
dec
or
dec
dec
inc
shrb
ds
lods
lea
sti
sub
inc
push
lods
imul
xorb
imul
dec
xor
and
add
int3
orb
push
jle
fisttps
xor
push
cwtl
jns
cmc
aam
repz
push
or
sub
lret
add
and
xor
jno
sub
xor
jp
aas
mov
into
jb
test
or
mov
push
push
jge
mov
hlt
mov
insl
mov
fwait
jecxz
sbb
nop
mov
push
in
or
cmp
daa
addb
pop
sub
cmp
xor
and
pop
loope
mov
stc
sbb
mov
out
into
xchg
sub
jns
pop
shrb
sbb
outsb
pushf
nop
lret
sbb
jb
fisubs
stos
mov
add
jnp
scas
xor
mov
mov
mov
dec
cwtl
xor
adc
mov
dec
mov
int
mov
lds
mov
fmull
imul
jl
in
repz
test
push
popa
sub
in
add
sbbl
mov
mov
das
mov
test
cmp
mov
and
popa
xor
mov
sub
arpl
cmp
addr16
in
lret
pop
loope
push
dec
setle
test
or
adc
stos
jb
push
bound
cmp
xchg
addr16
aas
jb
jp
mov
pusha
xorb
aam
xchg
sbb
out
mov
dec
mov
test
or
mov
inc
leave
loopne
loopne
clc
lods
xchg
ja
pop
popf
test
pop
add
insb
adc
push
and
sub
in
or
cmp
stos
gs
xchg
or
or
fisubs
mov
mov
lods
xor
hlt
call
fwait
jl
xchg
outsb
stos
icebp
enter
add
push
add
fildll
pop
out
sbb
pop
repnz
iret
out
push
jl
in
add
not
xor
fwait
insl
mov
stc
add
cmp
pop
dec
pop
or
xchg
jns
imul
push
fisttps
pop
or
ret
jg
outsl
lea
pop
jle
mov
cmp
cmp
sub
xlat
push
rcll
aas
mov
mov
mov
xlat
rcl
or
test
mov
imul
int3
adc
sbb
fwait
xor
mov
dec
cmp
dec
sub
or
add
push
push
lret
rorl
repnz
std
mov
adc
inc
or
orb
sbb
sbb
ret
cmpsl
inc
add
inc
pusha
addr16
out
fisubrl
movb
scas
and
xchg
and
repz
inc
mov
stos
add
out
sub
imul
or
push
cld
mov
jno
push
push
and
jae
or
je
push
adc
push
sbb
mov
push
add
scas
xchg
mov
xchg
cmp
out
pop
or
jb
push
mulb
xchg
add
in
daa
mov
sarl
push
inc
add
jmp
xor
sub
push
les
push
lret
jb
test
sub
in
mov
xchg
mov
ja
sbb
add
in
sbb
or
aaa
imul
cmp
pop
add
inc
mov
test
add
cmc
imul
push
jge
add
xchg
pop
lock
add
pop
pop
sbb
sahf
in
xlat
into
or
mov
es
int
sub
je
push
push
xor
add
mov
add
mov
ffreep
clc
sub
pop
xchg
test
repnz
loopne
insb
ja
pop
sub
es
push
add
mov
lahf
add
mov
push
jge
or
push
mov
push
int3
inc
out
stos
jl
es
inc
push
cmp
movsl
add
xor
jg
repnz
dec
addl
jg
mov
sub
cmp
adc
xchg
test
pop
sub
test
mov
jle
add
jge
pop
push
add
jecxz
iret
outsl
test
rorb
jmp
sbb
mov
ljmp
and
push
and
cmpsb
std
nop
mov
enter
stos
or
incb
inc
xchg
add
repz
sub
jb
fistpl
xchg
cmp
lock
loop
rcrl
xor
dec
aas
leave
lret
push
in
mov
nop
push
pop
stos
and
cmp
loopne
subb
mov
cmp
push
add
inc
mov
and
icebp
sub
add
imul
outsl
sarb
test
lods
mov
shlb
push
mov
or
cmp
aaa
sub
pop
push
inc
add
push
andl
dec
mov
mov
sbb
xchg
pop
pop
adc
jno
faddl
jecxz
jo
xchg
mov
popa
add
sti
pusha
lcall
mov
jne
lds
sbb
sti
sbb
js
mov
stc
jbe
call
or
and
mov
das
repnz
shlb
add
iret
ret
int3
or
mov
jnp
scas
stc
loopne
cmp
daa
pop
daa
pop
dec
mov
das
add
push
enter
and
lods
pop
outsl
sub
push
sub
adc
aam
add
icebp
jl
cmp
xor
adc
and
dec
pop
test
mov
and
out
notb
mov
cmovo
and
xchg
xor
add
scas
cmp
int3
xor
adc
or
fnsave
insl
aas
xchg
popf
les
mov
xchg
bound
push
cmp
shrl
adcl
add
mov
sub
adc
mov
add
and
add
pop
sub
out
push
movsb
mov
fwait
sub
adc
and
stos
inc
nop
xorb
pop
enter
js
pop
subl
xor
add
int
imul
int
fidivs
sbb
into
mov
arpl
fsubrs
lea
and
xchg
lahf
cmpsl
je
test
enter
xchg
repnz
test
and
add
fwait
sub
fs
mov
adc
sub
cmp
fstpt
inc
loopne
orl
push
pop
icebp
js
mov
and
orb
repnz
jae
dec
sub
mov
mov
out
insb
mov
stos
cli
mov
clc
mov
inc
mov
pusha
xchg
rol
iret
mov
sbb
push
lret
push
cli
aaa
int3
popf
dec
add
dec
push
xchg
fisttpll
push
cli
sub
mov
adc
or
xor
dec
mov
mov
ja
adc
push
cltd
loopne
dec
xchg
sbb
daa
clc
repz
notl
xchg
ret
push
adc
aas
mov
scas
cmpl
jno
fists
sbb
dec
adc
add
sbb
add
jl
fdivrs
sub
pop
mov
shll
pop
push
ret
das
push
sarl
add
mov
leave
imul
mov
xchg
pop
mov
pop
jns
cmpsl
mov
adcl
xchg
sbb
das
sarb
pop
xorb
pop
out
sub
dec
test
outsl
les
add
dec
mov
rorl
sub
ss
add
inc
jb
mov
inc
or
aam
in
lahf
xor
mov
cwtl
push
popf
cmpsb
lds
push
pusha
fimull
add
add
dec
enter
mov
sub
adc
add
sub
inc
faddl
xchg
add
sub
xor
cmpb
outsl
mov
mov
test
ja
jl
mov
data16
dec
mov
in
xchg
idivb
mov
jbe
cwtl
xor
inc
adc
rcrl
mov
test
shrb
dec
into
icebp
jecxz
insl
popf
inc
outsl
cltd
xor
xor
mov
out
jbe
jecxz
or
mov
jne
cmc
adc
cmp
mov
dec
sub
xor
lret
jge
dec
lahf
pop
fldl
jbe
sbb
bnd
mov
loope
hlt
push
mov
data16
js
ja
cmp
or
cmp
repz
jnp
clc
nop
scas
mov
jno
cmp
xor
dec
add
or
add
in
adc
xlat
and
stos
stos
cmp
mov
lcall
jl
test
mov
jmp
sub
outsl
shl
sbb
int3
xor
or
push
push
mov
jge
stos
sti
stos
adc
or
es
jmp
mov
data16
sahf
frstor
imul
add
stc
mov
mov
bound
aam
mov
sub
inc
adc
or
sbb
jnp
mov
fiaddl
idivb
mov
or
xchg
clc
jp
data16
mov
inc
cwtl
shll
pop
inc
jb
sbb
jns
cli
xchg
add
pop
xor
add
mov
aaa
mov
inc
lcall
fsubrl
xor
add
shlb
fisubrs
push
iret
adc
xor
dec
jge
sarb
xlat
xor
mov
cmpsl
in
xchg
adc
pop
orb
addw
jo
pop
cs
ficoms
mov
lret
inc
xor
loope
mov
insb
add
or
sub
bound
and
movsb
idivb
sarb
adc
add
out
and
push
mov
cmp
sub
sub
jnp
and
or
mov
popf
mov
push
xchg
daa
call
das
jnp
push
test
pusha
and
bound
data16
cmpsl
sub
sbb
aad
add
xchg
xchg
add
push
aam
mov
mov
mov
repnz
adc
and
add
sahf
xlat
mov
nop
push
add
cltd
fprem
mov
rcl
mov
push
add
xchg
mov
sub
stos
loope
insb
fildl
into
int3
sbb
psrlq
hlt
test
jp
jns
mov
mov
int3
pop
or
sub
jno
push
pop
pop
in
jne
xchg
loop,pt
int
add
push
pusha
xchg
shlb
and
xor
dec
xchg
cmp
clc
mov
pop
or
inc
aas
scas
jecxz
xor
mov
mov
ret
ret
xchg
lret
sub
stos
mov
jae
mov
push
fisttpl
arpl
rorb
sbb
sub
cmp
shl
adc
cmc
gs
sub
mov
fwait
inc
scas
test
add
inc
push
ljmp
enter
pop
pop
daa
mov
or
sub
sarl
push
xor
aam
xchg
dec
mov
imul
insl
sub
add
jae
mov
icebp
fsubl
cmp
test
xor
xchg
js
fadds
inc
jp
add
daa
adc
loope
add
xor
push
add
push
mov
daa
inc
pop
mov
mov
outsb
jo
mov
add
pop
push
js
mov
aad
lods
lods
jbe
fwait
mov
fwait
mov
test
cmp
sub
inc
int3
mov
in
xor
sub
pop
ljmp
sub
or
into
hlt
and
sub
xor
mov
jp
push
mov
shl
dec
mov
loopne
inc
mov
dec
aaa
aam
popa
les
cmp
outsb
pop
rolb
int
ret
xchg
rcr
out
inc
in
orb
mov
inc
jno
add
sbb
sub
loope
lods
pop
and
xchg
in
sar
loop
xchg
cld
sub
imul
xchg
mov
jns
mov
inc
jne
je
cmp
stc
pop
pop
rclb
xchg
mov
je
add
xchg
enter
fildll
jne
xchg
fdivrl
mov
or
repz
and
xchg
insl
add
mov
cmp
cmc
xchg
and
lret
in
rolb
lea
inc
add
ds
in
sbb
mov
mov
dec
aas
pop
into
lods
mov
or
fmulp
xchg
test
sub
xor
sbbl
data16
add
mov
movntps
and
jne
pushf
xbegin
icebp
and
mov
mov
mov
push
sbb
push
repnz
cmpsb
dec
jg
jbe
mov
xorb
shrb
fidivrs
enter
or
enter
add
xorl
push
pop
std
mov
pop
call
cmp
add
mov
push
pop
pop
clc
add
inc
mov
shlb
mov
in
imul
bound
lahf
push
fstps
inc
sub
cmp
jge
ljmp
cmp
lods
adc
xchg
jo
shld
inc
mov
sub
arpl
hlt
xor
xor
das
add
jmp
or
jp
cmp
adc
mov
outsb
loope
sub
mov
xchg
ljmp
cmp
mov
xchg
clc
jo
add
shll
loopne
repz
add
cwtl
dec
jmp
or
sbbl
inc
icebp
mov
stos
push
arpl
pop
and
and
je
add
push
rorl
add
dec
clc
pop
dec
hlt
pop
jno
mov
int
jecxz
scas
je
mov
xchg
jno
in
imul
xchg
aas
mov
loopne
and
add
pop
into
add
mov
and
mov
mov
fisubl
adc
xchg
call
xchg
pop
lar
mov
add
xchg
popa
outsb
adc
mov
insl
mov
inc
test
imul
mov
xchg
aas
data16
cmp
adc
lret
sub
xor
cmpsb
movl
xor
outsl
mov
std
push
push
mov
insb
ja
sub
icebp
sarl
into
mov
fistpl
cs
test
scas
insb
mov
ljmp
jmp
ret
mov
adc
iret
stos
movsl
mov
js
les
cld
ret
xor
pop
pop
mulb
ficompl
push
insb
add
mov
popa
stos
push
cmp
xchg
fcom
test
das
cmpsb
subb
movsl
push
insb
data16
int3
inc
or
mov
adc
jns
pop
stc
fsubr
sub
test
add
mov
add
cmp
ret
loope
loope
add
jno
mov
sbbb
in
jmp
cld
lcall
add
xchg
shl
call
push
add
or
mov
ds
div
movsl
aas
popf
xchg
hlt
sub
inc
enter
cmpsb
std
jbe
sub
sub
mov
xchg
lods
or
cltd
cmp
lods
adc
mov
add
lcall
push
sub
hlt
inc
fs
cmp
jbe
sub
pusha
inc
out
xchg
loopne
jb
mov
sbb
dec
in
lods
fdivrl
add
stc
imul
pop
jl
add
les
clc
inc
sub
mov
cmp
dec
js
mov
out
jl
push
fisubrs
mov
out
add
lahf
das
pop
add
andl
repz
add
dec
jbe
stos
in
ret
add
aam
sub
andl
dec
add
xchg
adc
movsb
in
aaa
das
lret
pop
xor
aas
and
push
jg
cvttps2pi
cmpb
cmp
or
in
push
dec
fcomps
fstl
les
push
lods
dec
mov
sarb
dec
jecxz
pop
mov
sub
cmc
dec
sbb
out
xor
scas
inc
jns
rcrb
push
add
adc
sub
sub
sbb
dec
or
rorb
ficomps
mov
jmp
or
rorl
mov
add
xchg
sbb
pop
insb
sub
push
mov
mov
mov
pop
enter
ret
or
push
mov
push
fmuls
cld
lahf
popa
jl
data16
inc
mov
mov
ja
xor
lock
xchg
push
lret
movsl
mov
push
in
add
sub
jmp
lldt
aad
mov
js
push
mov
and
gs
sbb
push
popa
mov
adc
into
movsb
mov
dec
sti
dec
push
scas
add
xchg
sbb
leave
les
mov
inc
sub
adc
aad
scas
lea
xchg
popa
cmpsl
adc
cmc
insb
or
or
lret
sbb
or
ds
mul
mov
dec
dec
rolb
or
mov
dec
mov
mov
repnz
aas
sub
adc
and
scas
adc
int3
dec
push
cmpsl
xchg
sub
int3
aam
mov
dec
outsl
xchg
or
pop
bnd
stc
mov
sub
insl
pop
mov
push
mov
xchg
push
add
dec
cmpsl
pop
ss
push
pop
ds
inc
and
sahf
dec
js
test
and
mov
dec
daa
dec
pop
inc
xchg
sub
out
xor
pop
push
int
cmp
enter
sub
call
sbb
mov
fstp
ljmp
aad
or
mov
mov
or
and
cltd
sub
daa
jecxz
clc
js
inc
xor
cwtl
imul
mov
insl
ficoms
mov
fiadds
sub
inc
rorb
add
in
and
dec
add
push
cmp
decb
push
ret
push
rcll
ret
ja
dec
ret
sahf
mov
mov
sub
cmp
push
pop
and
rcrl
inc
sti
push
ret
pop
sub
jmp
push
mov
outsb
lcall
cltd
mov
mov
xchg
pop
cmpb
mov
addr16
inc
out
inc
movsb
push
jne
jbe
add
push
out
jnp
jmp
push
enter
add
push
mov
add
fldcw
cwtl
jnp
pop
xor
inc
mov
jmp
fdivs
add
and
dec
stc
push
push
fimull
xchg
cmc
jmp
or
mov
cmp
cmp
sub
pop
lods
push
sbb
sub
fcomip
push
ficoms
leave
roll
mov
lods
fmuls
iret
nop
add
sbb
pop
push
adc
sbb
mov
mov
push
adc
add
cmc
add
arpl
mov
add
aas
fiadds
int3
data16
mov
out
in
or
add
bound
je
imul
mov
adc
add
rorl
adc
cmp
dec
and
lret
xor
jge
popa
add
and
sbb
sub
xchg
cmp
xchg
fsubrs
daa
push
ficoml
rclb
sbb
jmp
iret
xor
and
lret
xchg
out
das
mov
das
add
aaa
mov
xor
cmp
mov
lcall
inc
xchg
das
push
fimuls
or
aas
adc
add
sti
xchg
or
out
pop
stos
push
and
arpl
stc
push
xchg
mov
mov
dec
mov
sbb
shrb
pop
add
out
jne
and
lahf
sub
das
push
loop
sub
mov
mov
repz
mov
xchg
add
sbb
popa
in
add
cmc
cmp
sbb
xchg
inc
jg
pushf
xchg
mov
into
cmpsb
xor
popf
xlat
add
jg
add
xor
mov
mov
add
fisttpll
sub
stos
pop
inc
mov
je
lcall
lret
outsb
mov
dec
das
cmp
mov
std
or
sub
mov
sbb
lret
add
daa
dec
xor
inc
cmp
enter
divb
iret
mov
xor
int
pop
add
push
jbe
repnz
xor
or
sbb
inc
inc
mov
das
inc
js
and
sub
addb
add
push
mov
add
aaa
fldlg2
lahf
and
cmp
mov
sub
test
pop
xchg
add
xchg
add
add
addb
xor
cmp
push
jns
lahf
xlat
test
mov
aas
xchg
sarb
inc
aas
sub
pop
mov
jp
jae
or
add
mov
jg
int3
pusha
cmp
lods
cmp
adc
xor
stos
mov
out
add
lods
aaa
and
mov
push
ljmp
xor
outsb
data16
mov
push
xor
out
ret
shll
sub
loop
test
out
sub
dec
dec
jp
enter
hlt
movsb
roll
stos
sub
int3
jno
stos
sub
into
cltd
test
push
sub
es
in
movsb
imul
mov
in
nop
dec
dec
std
test
and
xchg
stc
pop
ret
dec
add
popf
test
imul
sub
add
int3
push
xor
xchg
cmp
insb
mov
cmp
orb
gs
cmc
pop
ss
mov
int
sub
in
mov
cmp
add
imulb
adc
or
add
sbb
or
dec
mov
int
je
insb
and
mov
aas
mov
mov
fs
sbb
sbb
lods
test
repz
das
fimuls
jo
pop
or
sub
aad
fwait
push
cmp
push
sbb
xchg
sbb
fwait
in
sbbb
rcl
fwait
add
or
inc
lcall
fcomps
mov
aaa
push
mov
call
jb
mov
push
out
int
jae
and
test
out
stos
add
vunpcklps
push
mov
stos
pop
inc
mov
xlat
inc
inc
mov
sbb
pop
lret
clc
add
mov
dec
bsr
je
pusha
out
jo
psubd
cld
inc
je
std
mov
pop
andl
push
sub
sub
pop
outsb
sub
mov
orl
or
sbb
fldt
icebp
cmpsb
pop
add
jmp
inc
jp
or
fsubr
mov
push
stc
sub
push
or
es
and
add
imul
dec
mov
mov
mov
in
in
mov
inc
out
add
addl
add
pop
cs
sti
mov
inc
cmc
adc
and
mov
aas
mov
mov
xchg
pop
mov
push
cltd
jns
lahf
add
jae
or
stos
and
and
ljmp
sub
loope
mov
inc
sbb
or
dec
inc
movsb
sbb
adc
cmc
push
stc
jmp
shlb
scas
cmp
mov
je
outsl
sub
jg
lret
aas
lods
inc
lds
insb
add
jle
lock
fcoml
or
add
in
mov
mov
xor
test
mov
or
inc
fwait
push
insl
xor
repz
dec
xor
add
sbb
push
jle
inc
mov
insl
les
push
mov
mov
dec
sbb
sub
jp
lret
in
push
or
jns
xchg
enter
jbe
fpatan
fiaddl
jge
jns
and
pop
movsl
mov
dec
ret
enter
hlt
mov
add
int3
and
xor
xchg
fisubrl
in
or
mov
ljmp
ret
dec
in
lods
sub
je
in
call
cmp
cwtl
sub
push
les
push
jp
sub
js
js
movsl
sub
ljmp
xorb
jmp
adc
inc
inc
idivb
jbe
fadds
push
pop
shr
test
jle
mov
and
sub
cltd
mov
dec
mov
sub
or
cmpsl
dec
add
sahf
jl
pusha
xor
repz
sub
je
pusha
pop
push
iret
sub
into
push
dec
iret
push
enter
das
cmpsb
add
enter
jns
and
dec
push
test
mov
dec
mov
enter
mov
push
sbb
xor
add
int
jo
cwtl
mov
push
rorb
cld
sub
add
cmpsl
imul
add
icebp
xchg
cmp
pop
sub
aaa
sub
push
dec
sub
add
int3
ss
notb
sub
jl
sti
fstl
inc
sub
imul
in
jge
pushf
mov
mov
xchg
mov
test
push
pop
adc
leave
dec
sti
add
mov
jb
and
icebp
add
pop
adc
cmpsl
flds
sub
mov
in
popa
pusha
ljmp
rcrl
mov
cmp
jns
sub
incl
and
mov
fstpt
sar
add
ljmp
shlb
mov
sahf
pop
cmp
fldl
xor
clc
mov
loope
mov
mov
inc
add
xchg
es
cli
dec
sbb
or
add
sahf
scas
mov
and
pusha
out
sub
test
xchg
add
scas
adc
add
sub
mov
and
add
popf
push
dec
movsb
fs
add
outsb
sahf
pushf
push
out
mov
pop
in
xor
jae
sub
or
jns
xlat
jnp
ss
xlat
adc
jbe
adc
adc
mov
sub
outsb
xchg
lock
mov
aam
inc
and
cwtl
arpl
xchg
jge
ds
cs
sub
stos
mov
cmc
jns
rorb
std
arpl
ljmp
mov
mov
mov
pop
ljmp
jnp
mov
test
push
xchg
push
sbb
adc
pusha
stos
push
daa
out
mov
cmc
fsubl
cmp
sub
cmp
sub
imul
adc
lret
ja
dec
sub
lds
dec
cmc
jnp
inc
add
arpl
sarl
sub
int3
ret
aam
and
add
sub
pop
lahf
add
mov
push
or
mov
xor
clc
and
sbb
imull
fmuls
fwait
daa
ss
add
jge
jo
aaa
xor
popl
andb
add
adc
mov
mov
xor
ret
lret
fwait
sbb
mov
call
fcmovnbe
push
outsl
imulb
jae
sahf
jne
scas
testb
and
jb
fdivrs
mov
fcompl
add
fildll
push
imull
ja
imul
cmp
call
fmuls
inc
and
push
ss
jmp
xor
daa
dec
sub
jne
mov
and
imulb
xor
pop
sub
add
add
add
ret
leave
ljmp
aam
mov
add
sti
daa
inc
sub
jae
jge
push
call
adc
lea
cmp
rcll
pop
jnp
cmpl
dec
dec
sarb
xor
test
mov
xchg
mov
ss
test
adc
stos
inc
add
cmc
sub
lahf
pop
push
mov
test
es
xchg
js
hlt
push
clts
outsl
dec
lods
mov
pop
iret
and
js
enter
dec
popf
add
test
mov
vmwrite
or
mov
jg
sub
or
add
dec
fdivs
je
xchg
inc
and
xchg
in
xchg
into
lock
sub
sub
xchg
hlt
stc
int3
mov
dec
push
add
in
loop
psubw
adc
fdivrs
call
push
or
push
pop
xchg
mov
xchg
lods
int3
ret
pop
movsl
dec
jmp
cmp
decb
sub
and
popa
add
arpl
rorb
add
pop
fsqrt
sub
call
ja
or
xor
mov
fisttpl
xchg
leave
xor
and
pop
and
les
sub
out
cmpsl
int
sub
cmp
and
pop
call
andb
add
out
arpl
daa
dec
lret
add
pushf
dec
leave
xor
jne
or
inc
add
sarl
dec
jle
mov
mov
insl
dec
clc
push
js
movups
sub
lods
pop
call
xchg
push
in
sub
add
sub
aaa
mov
movsl
rorb
sbb
mov
fiadds
adc
je
and
in
adc
mov
int
std
dec
add
fistl
fnstsw
jmp
add
xchg
pop
add
pop
mov
test
mov
cmpsl
push
inc
or
and
xchg
fildl
mov
addr16
inc
jbe
scas
sub
jo
xchg
cmp
and
fldenv
jg
mov
fadds
xchg
lret
enter
add
sbb
sub
dec
add
sbb
push
nop
pop
mov
pop
rorl
cmp
xchg
sub
in
mov
pop
xlat
mov
pop
pusha
cmp
jg
adc
sbb
subl
or
out
movl
inc
inc
in
insb
fisubrl
add
inc
imul
cli
add
js
xchg
negb
push
add
jle
sub
mov
outsb
mov
inc
cmp
jg
addr16
sub
xchg
and
push
sub
sbb
sub
stos
int
xor
jns
lods
xor
jmp
and
stos
add
mov
shlb
pop
xchg
push
mov
ret
fadds
cmp
inc
or
add
pop
arpl
out
sub
mov
adc
nop
sub
iret
loopne
movsb
and
mov
jo
enter
mov
cwtl
les
adc
out
and
insl
movsb
xor
push
cmp
sbb
in
jmp
test
rcrl
pop
sti
lods
inc
in
sbb
repz
xchg
js
fld
jnp
mov
mov
cvttps2pi
je
roll
jo
mov
rclb
xor
ror
xchg
out
aad
addb
sub
nop
pop
subb
mov
mov
push
leave
addl
popf
enter
outsl
sub
mov
fisubs
adc
stos
add
or
pop
pop
push
push
test
mov
jnp
js
jb
fwait
mov
push
sub
test
aaa
add
or
cmp
mov
mov
jne
js
mov
pop
in
mov
test
cltd
flds
push
iret
xor
jae
and
add
add
clc
sbb
mov
pop
jg
dec
mov
push
das
movsl
les
add
xchg
out
xor
adcb
push
mov
xor
push
dec
sub
pop
or
pop
xchg
pusha
sbb
xor
adc
jl
inc
lods
dec
fldl
jae
jno
repz
shll
mov
xchg
xor
pop
push
xor
pop
add
push
cwtl
pop
or
mov
adc
outsb
es
mov
into
loop
and
int
aad
aaa
sbb
pop
div
mov
push
mov
adc
push
mov
jnp
xlat
gs
mov
push
push
shrl
cmpl
arpl
adc
fsubrl
push
jo
stc
mov
dec
and
lods
mov
mov
in
jo
push
mov
hlt
sti
fcoml
loope
inc
mov
fwait
daa
sahf
pop
mov
cmp
rolb
push
add
int
aad
mov
mov
gs
scas
outsb
scas
mov
cmp
dec
xchg
add
les
call
cmp
mov
add
sbbl
mov
mov
xchg
lcall
clc
sub
push
lods
xor
push
or
sbb
add
ds
mov
or
xchg
mov
loope
push
push
cmp
ljmp
outsl
cmp
sub
lods
psubusb
sub
add
mov
lock
mov
dec
lods
push
fcmovnu
bound
shlb
mov
push
pushf
dec
aas
jne
jnp
xchg
xor
jb
pop
mov
icebp
dec
inc
mov
movsl
sub
push
aam
cs
and
cmp
jmp
les
or
adc
popf
add
shrb
dec
xchg
jne
inc
xchg
sbbb
movsl
shlb
mov
mov
sub
mov
mov
mov
mov
cmpsl
movsb
das
mov
mov
xchg
das
pop
mov
rolb
fmulp
sub
jo
cmpsl
pop
std
push
cmp
sahf
fistps
jnp
xchg
mov
fwait
sub
iret
add
int
shl
adc
hlt
aas
je
insl
push
adc
fwait
xlat
jns
add
sahf
jg
lods
cld
add
and
sahf
push
scas
movsl
mov
mov
fbld
xlat
test
push
inc
xchg
mov
sub
pop
pop
adc
fldcw
dec
enter
addb
xchg
ficoml
inc
dec
xlat
data16
push
mov
mov
inc
or
aam
add
sub
fcoml
fcmove
mov
jno
mov
or
aam
add
jns
hlt
sub
clc
or
lock
push
sbb
int
mov
add
les
cmp
ret
push
fists
mov
aas
mov
mov
test
rcrl
mov
cmp
pop
js
into
add
into
sub
add
cmp
in
add
es
pop
pop
mov
sub
outsl
scas
in
add
ss
pop
add
or
or
jb
mov
lahf
pop
fnstcw
in
inc
sahf
out
gs
das
into
lock
stc
or
push
jge
sub
mov
out
push
jp
push
aam
lahf
pushf
popf
call
ljmp
push
xor
scas
adc
decb
xchg
inc
lea
addl
jge
cmpsl
jbe
lds
inc
testl
gs
adc
insl
add
jge
fstpl
pop
add
test
add
cmp
insb
aaa
xor
jns
mov
lret
dec
test
sub
push
cmpsb
lods
pusha
ss
dec
mov
adc
add
mov
xchg
lea
sbb
rcrb
movb
mov
mov
push
loope
cld
fiadds
mov
ret
push
xchg
jno
ljmp
pushf
pop
pop
cmp
add
inc
lret
stc
jl
mov
jne
fisttpl
add
mov
cmp
and
shrl
jg
mov
or
jle
stos
call
out
addr16
sub
jge
outsb
aaa
mov
inc
cmp
adc
sti
clc
add
leave
push
pop
jmp
mov
mov
dec
add
adc
rclb
and
pusha
add
push
cs
sbbl
push
jg
jns
subb
mov
mov
dec
mov
mov
push
add
popf
cmc
xchg
inc
pop
sbb
das
sub
cld
xor
or
dec
lcall
inc
inc
mull
aam
aas
insb
xor
sbb
mov
movb
sbb
pop
push
jmp
pusha
xchg
jg
loop
leave
push
lds
cmpsl
ja
push
int
push
mov
add
je
sub
bound
lock
push
pusha
jne
into
test
mov
pop
sbb
sub
dec
addl
cli
jbe
push
add
mov
sub
pushf
pop
out
xchg
ljmp
pop
inc
push
sub
sbb
ds
xorb
addr16
cmp
xor
test
mov
xchg
and
jne
sahf
fistpl
mov
mov
sbb
push
push
and
aaa
int3
dec
add
mov
loop
test
pushf
mov
out
out
adcb
icebp
xchg
sbb
out
int3
andl
pop
add
inc
push
push
lret
icebp
movsl
mov
clc
dec
mov
cmpsb
pop
pop
jg
pop
or
add
ds
push
test
test
nop
les
cld
cmp
lods
fcomps
lahf
es
inc
lods
repz
sub
decl
adc
push
rorb
inc
pop
mov
or
ret
rclb
lret
sbb
fsubl
push
das
push
addr16
clc
dec
sbb
add
pushf
jbe
xor
cmp
in
insl
mov
cmpsl
les
aad
push
aam
fdivrs
inc
pop
out
movsl
xchg
ror
mov
dec
fwait
pop
sub
inc
sbb
cmp
or
ja
fs
jnp
minps
dec
clc
sbb
adc
in
mulb
cmp
mov
cs
pop
mov
je
xlat
mov
dec
fimuls
adc
andl
incl
out
hlt
mov
ds
ret
popf
dec
int
dec
and
pop
xor
add
pop
ss
cmp
cmpb
addl
mov
dec
xor
sub
pop
pop
sbb
xchg
fdivl
lahf
inc
add
push
fmull
jo
mov
jecxz
mov
scas
xor
push
ja
pop
xlat
mov
aas
gs
les
iret
stc
repz
cmp
jbe
mov
cmpsl
shrb
mov
mov
add
test
add
add
fdivrl
pop
jo
lock
mov
or
add
out
test
push
pop
add
sbb
dec
adc
push
cltd
mov
pop
dec
jle
push
fidivrl
cld
jno
xchg
add
cmp
mov
push
inc
inc
adc
mov
fnsave
mov
jge
lret
arpl
push
stos
cmp
sahf
jge
sub
xchg
lock
mov
jne
es
pop
enter
enter
lret
faddp
dec
js
out
addb
dec
or
or
xor
sub
decl
les
xchg
sub
int3
dec
cld
shlb
and
xchg
dec
mov
dec
dec
pop
add
add
jne
inc
mov
cmpsb
add
clc
inc
shlb
xchg
out
cmp
in
sti
je
push
int3
adc
adc
sarl
pusha
ret
add
push
push
std
add
adc
jmp
xor
insb
add
aas
out
mov
mov
scas
cmp
cli
pop
add
in
cld
jg
add
or
cmp
and
repnz
popf
or
loop
sahf
sub
jns
stos
orl
out
cmp
sbb
xor
pop
or
xor
and
adc
xchg
neg
xchg
sbb
or
sbb
mov
imull
mov
rcrl
int
xorl
popl
lock
mov
jo
xchg
out
mov
inc
pop
test
shrl
xchg
and
sbb
xchg
add
jo
cmp
mov
iret
sub
es
add
add
and
mov
stos
lods
push
sub
lret
xchg
or
rolb
cli
add
sub
out
mov
add
rcrb
mov
mov
sbbb
mov
rorl
push
sub
mov
or
add
repz
loopne
add
jo
rolb
jle
pop
repnz
iret
std
cli
push
push
sub
mov
jns
pushf
mov
push
or
cmp
pop
pusha
dec
inc
mov
dec
mov
inc
notl
push
lea
mov
sub
lcall
cld
subl
mov
push
jg
fistpll
stc
mov
mov
add
mov
xchg
leave
mov
lret
cmp
mov
and
sub
hlt
fstl
cmp
cmp
xor
or
mov
fcomps
cmp
cmp
cmp
push
inc
daa
pop
aam
xlat
add
icebp
test
add
mov
cld
ja
add
mov
fiaddl
fwait
inc
xor
dec
in
mov
test
add
xor
dec
sbb
pop
push
jecxz
das
mul
mov
mov
aam
mov
xlat
fsqrt
sub
in
enter
sbb
in
das
in
push
pusha
stos
arpl
repnz
and
mov
cmp
cmp
sub
jp
in
and
pusha
add
inc
rclb
ss
jno
sub
adc
leave
sub
sbbl
lods
pop
cmp
xor
mov
aas
cmp
pop
xchg
ljmp
mov
int
ret
pop
vandps
add
pop
dec
cld
rolb
xchg
xorb
mov
jp
sbb
push
fcomps
clc
xchg
sub
sbb
pop
ret
mov
sbb
cli
cld
std
add
cwtl
push
jp
sahf
lds
mov
fmuls
jo
cmpl
je
cltd
out
mov
jg
push
mov
call
inc
je
add
loop
add
insl
sahf
push
lea
cmpb
daa
add
xor
push
addl
dec
lahf
mov
and
push
rorb
bound
int3
add
or
ja
pop
sbb
das
push
add
idivb
adc
sub
inc
sub
adc
leave
mov
stc
in
and
mov
mov
lea
pushf
mov
dec
addr16
insl
out
out
pop
mov
or
sub
mov
push
fwait
mov
add
rclb
pop
loopne
ljmp
inc
mov
jbe
pop
sub
mov
pop
pop
add
das
pop
call
cmp
pop
pusha
jnp
lcall
jg
sub
int3
test
insl
mov
loope
rcl
nopl
mov
inc
pusha
clc
test
dec
mov
push
pop
xchg
test
inc
test
imul
das
jecxz
jne
xor
push
sbb
sahf
addl
adc
jne
lods
xor
aaa
clc
sbb
pop
or
xor
adc
adc
mov
mov
xor
sbb
clc
cli
push
xor
cwtl
or
js
popa
iret
add
add
dec
add
dec
pop
in
mov
cmp
daa
lods
push
ret
insb
push
rclb
xchg
inc
out
mov
xchg
mov
pop
xchg
sub
std
pop
js
jmp
jmp
loopne
idivl
loopne
lret
pop
fmuls
fstpt
hlt
sbbl
xor
add
insl
test
jmp
push
call
popf
jns
test
ret
and
add
pop
dec
push
lods
mov
into
mov
xchg
rorl
popa
add
mov
jne
insb
adc
addb
jp
add
inc
mov
dec
push
insl
int
adc
mov
pop
js
incb
int3
cmpsl
fldenv
dec
ds
push
mov
enter
lock
jb
or
inc
xor
pusha
pop
pop
adc
or
xchg
mov
jnp
out
cmpsl
and
sub
sysenter
cmp
test
mov
mov
add
push
loop
jmp
imul
and
jecxz
mov
std
inc
syscall
xor
adc
stc
cmc
sbb
cmc
xchg
mov
mov
jnp
sarb
add
jecxz
rcrl
jle
lcall
xor
inc
push
insl
fnstcw
jecxz
pop
clc
sub
fmuls
jmp
cmp
in
clc
das
or
cmp
fidivrl
pop
testl
sub
xchg
mov
sti
nop
insb
aas
add
cmp
adc
sub
mov
mov
sbb
enter
push
xor
jb
xchg
test
pop
add
pushf
movsb
bound
adc
pop
insl
sbb
hlt
cwtl
mov
mov
int3
jmp
xor
out
or
mov
fwait
xlat
xchg
sub
dec
push
xchg
sub
call
add
fnstcw
mov
out
sbbb
pop
pop
es
inc
ds
sbb
arpl
out
cmp
add
xchg
add
dec
xchg
clc
mov
cld
andb
jo
push
iret
insl
out
insl
jbe
mov
cmpb
das
xlat
xchg
pop
outsl
mov
ljmp
cmc
pushf
out
aas
jl
sub
mov
pop
jae
test
pop
movsl
insl
push
inc
sub
sub
in
mov
xor
adc
adc
jno
shrl
mov
daa
sub
mov
add
sbb
lret
dec
xchg
rorb
popf
add
lret
imul
gs
shlb
pop
test
sbb
sbb
sbbb
sub
lret
fsubrs
sub
dec
mov
xadd
mov
lahf
fadds
inc
push
xchg
loop
insb
push
inc
call
mov
cmpsl
jecxz
and
mov
shrl
out
btr
in
je
loop
movsb
scas
xor
cmp
movsl
inc
sub
mov
push
xor
mov
xor
imul
xor
add
dec
loopne
imulb
aas
lods
push
push
aas
cmp
shll
add
push
xorb
iret
gs
inc
jg
scas
sub
push
mov
add
mov
out
mov
xchg
pop
xchg
pop
pop
xchg
adc
std
movsl
sbb
roll
popf
xchg
jno
jle
xchg
mov
test
xchg
sub
pop
insb
ja
mov
jle
shll
adc
mov
fs
xor
mov
loope
or
in
sarb
testb
pop
push
rol
mov
mov
or
adc
ret
hlt
daa
loop
or
sahf
xor
xor
in
sbb
movsb
insb
enter
loope
mov
pop
lret
and
push
sub
xchg
dec
call
add
lock
stos
stos
and
or
add
ds
jb
popa
rcrb
loopne
dec
mov
add
or
mov
add
xor
hlt
add
xor
cmpb
xchg
call
clc
pop
pop
dec
ljmp
insl
pop
int
add
mov
aam
add
call
cmc
jns
sbb
adc
inc
inc
pop
pushf
sub
and
das
and
das
or
adc
adc
cmp
ja
clc
push
invd
lods
cmp
cmc
sub
cmpsb
push
ret
adc
sub
out
ja
pop
mov
nop
in
mov
sub
xchg
push
aas
inc
sub
pop
pop
add
fmuls
inc
and
fdivr
add
xchg
adc
fiaddl
sar
ficompl
cmp
lret
pop
mov
dec
or
xor
dec
jb
pop
lahf
or
inc
outsl
push
ljmp
repnz
test
pop
testl
cmp
add
and
jg
mov
movsb
add
mov
add
push
adc
cmp
inc
in
xor
icebp
sub
test
dec
mov
pop
or
pop
out
addr16
call
mov
clc
shrb
sbb
lods
int3
dec
mov
cmc
je
dec
xor
dec
das
inc
add
inc
mov
xlat
push
xor
xchg
fisttpl
jmp
sub
mov
fidivl
or
cld
xchg
mov
ficompl
subb
push
and
cli
pushl
fs
pop
loope
leave
and
jns
mov
jl
mov
stos
cmpsl
xor
fldcw
inc
mov
or
and
inc
xor
mov
push
fs
in
or
and
jge
jecxz
sub
xchg
add
adc
pop
xor
adc
outsb
addl
aad
mov
add
xor
pusha
xchg
pop
rcl
mov
xchg
ss
mov
lock
lods
inc
mov
aas
movsb
clc
fwait
mov
pusha
cld
cmp
fdecstp
adc
mov
test
add
adc
iret
bound
jg
pavgb
cs
out
sub
jge
incl
add
aaa
sub
and
movb
cmc
in
mov
out
pop
ss
and
into
jae
jo
cmp
lods
scas
cmp
pop
test
loop
fmuls
xor
sub
test
pop
mov
mov
jb
sub
or
and
mov
popf
in
adc
inc
cmpl
mov
addr16
sub
fst
lahf
xor
leave
jo
cmpsb
mov
leave
or
add
or
pop
sarl
fsts
sub
cmp
iret
add
mov
sbb
inc
jns
mov
idiv
push
adc
sbb
cli
enter
add
jl
mov
or
inc
push
pushf
or
add
leave
mov
mov
xchg
les
mov
clc
call
test
rorb
mov
and
subl
lods
scas
mov
ss
add
shll
subl
mov
out
jle
xor
mov
fldt
icebp
jmp
sub
js
xchg
js
mov
stc
mov
push
mov
pop
and
shll
lods
xchg
sub
xor
movsl
fistps
aaa
stos
pop
addr16
mov
mov
mov
add
rcl
pop
movsb
add
cmp
pushf
sahf
loope
sub
xchg
scas
shl
or
jle
mov
adc
lock
sub
in
jecxz
inc
lock
jg
rclb
ficompl
pop
imul
lea
sti
sbbb
insl
pop
mov
xor
ret
das
mov
mov
xchg
xor
ja
lods
test
adc
call
enter
sbb
push
push
fsub
xor
mov
rcll
mov
adc
insl
sub
pop
add
movsl
in
push
sub
pop
enter
or
jle
pop
dec
notb
cld
sub
cs
xor
into
int
xchg
fwait
add
out
aaa
loope
cmp
sub
mov
pop
xchg
test
inc
add
rcr
int3
out
sbb
loopne
outsb
test
stc
or
add
arpl
cmp
mov
jmp
popf
aam
jae
dec
jmp
push
jno
mov
xor
push
jecxz
bound
in
fmull
add
adc
fisubl
mov
ss
xor
jle
hlt
or
pusha
add
addr16
and
add
sub
mov
jp
add
jnp
test
test
lss
and
daa
inc
and
shlb
cmpl
add
dec
arpl
das
sub
into
mov
xchg
adc
hlt
push
mov
mov
shll
inc
add
jp
ret
jecxz
loop
jno
sub
push
and
std
xchg
rclb
rcrb
mov
jmp
add
lret
adc
add
inc
fldt
fbld
fadds
iret
xchg
and
loop
hlt
in
dec
pop
in
add
pop
pusha
iret
jno
add
xchg
aad
imul
pop
mov
dec
add
and
addb
addb
push
push
stos
xchg
shrb
je
repnz
lods
mov
xor
lods
push
daa
ja
cmp
add
sbb
adc
aam
mov
xchg
mov
push
sub
loop
std
mov
out
jp
adc
xor
add
dec
add
jge
sub
sub
push
ss
sub
pop
fldl
add
pusha
out
xchg
jge
fistpll
cmp
sbb
mov
adc
push
mov
fwait
in
jo
adc
lds
cmp
str
dec
into
dec
shrb
mov
jo
add
dec
push
les
jecxz
dec
aam
roll
xchg
lcall
sub
mov
or
add
in
mov
add
lods
jbe
add
shrb
inc
dec
adc
fwait
aam
push
out
shufps
pop
ljmp
sbb
mov
mov
pop
mov
pusha
ret
add
cs
lods
jns
and
adc
sti
ljmp
adc
pop
and
mov
cmp
add
add
mov
adc
fldcw
int
in
mov
orb
fstl
mov
sahf
dec
leave
cld
inc
fimuls
xor
test
fmull
jle
loop
push
fwait
add
cs
cmp
sbb
test
xor
insl
mov
and
imul
aaa
inc
cmc
and
mov
loope
dec
add
movsb
aam
sub
cmp
in
fisubs
cltd
cmp
fisubl
cwtl
popa
sbb
fs
jno
rclb
fdivrs
mov
lds
mov
push
cld
mov
movsb
inc
mov
pop
xchg
push
mov
mov
je
inc
xor
add
sub
jb
bound
mov
scas
dec
mov
scas
mov
lods
push
sub
adc
xorb
in
sub
and
inc
xchg
ljmp
mov
mov
push
mov
sbb
or
or
sub
js
lds
shrb
push
loop
inc
add
orb
cmp
sub
in
push
add
cmp
data16
ret
std
mov
fwait
loopne
add
sub
sbb
sbb
push
test
daa
xchg
add
push
inc
add
and
enter
add
or
cmp
jmp
outsb
into
jecxz
mov
fsts
inc
adc
push
add
inc
cli
daa
push
insb
pop
adc
sbb
imul
ret
inc
btc
sub
in
cmp
push
sub
and
leave
add
shrl
dec
imul
bound
das
pushl
sub
loopne
xor
divb
xchg
insb
mov
pop
xchg
cmp
push
push
fsubr
rcr
push
mov
insl
add
ljmp
add
jecxz
cmpsl
sub
mov
xchg
adc
and
add
xchg
add
inc
push
push
sbb
mov
add
in
add
jecxz
or
outsb
pusha
mov
jo
mov
leave
insb
dec
or
lahf
xor
ja
sub
aam
cmp
jne
adc
inc
jp
push
ror
fldl
fsubs
imul
in
push
and
adc
xchg
jnp
das
call
push
jb
fbld
test
stos
jecxz
cwtl
pop
or
adc
dec
inc
cltd
jle
mov
or
or
push
mov
ret
xor
int3
dec
cli
jae
cmpl
xchg
cmp
imul
mov
add
xlat
jno
dec
scas
iret
sbb
cld
into
int
sub
pop
adc
push
xchg
cwtl
in
mov
sti
subb
push
inc
rcr
shl
jbe
pop
xlat
dec
add
mov
dec
sub
sarl
pop
push
pop
fmuls
dec
rolb
xor
push
fsubrl
sbb
add
std
popa
add
mov
js
adc
mov
xchg
sub
les
aad
add
loop
idivb
or
add
repnz
sti
push
push
lret
jp
test
decb
add
push
lods
test
mov
cs
add
cli
mov
push
leave
mov
mov
adc
addr16
call
jo
pop
repz
das
lahf
push
loope
add
addr16
xchg
into
mov
fiadds
insl
wrmsr
lock
sbb
pop
mov
sahf
cmp
rorb
mov
xchg
out
pusha
lods
movsl
sbb
in
mov
add
inc
pop
or
rclb
addr16
dec
pop
sar
adc
push
loopne
fisttpl
mov
cltd
jno
xchg
ljmp
mov
ss
in
cmpsl
xchg
jecxz
sub
lret
je
mov
cmp
pop
dec
in
mov
sbb
test
mov
test
jnp
mov
or
or
negl
xor
shll
dec
out
iret
push
adc
mov
ja
adc
dec
je
les
add
mov
sti
stc
xlat
mov
lock
aad
je
mov
or
jbe
loopne
sub
aaa
repnz
jno
pop
dec
mov
bswap
lods
lcall
lock
lods
in
sbb
or
dec
sub
xor
aas
mov
and
xor
push
cltd
add
shlb
repz
cli
xor
dec
xor
dec
ret
gs
or
adc
arpl
xlat
mov
out
loop
movsb
push
sbbb
fsin
mov
xchg
int3
add
cmc
mov
aas
pop
xchg
pop
fisttpll
cmp
movb
leave
insl
pop
in
add
xor
xor
lahf
out
pop
add
push
xor
test
add
in
inc
lods
add
aas
xchg
cwtl
jnp
push
mov
iret
sub
cli
aad
les
inc
push
sahf
ss
sub
mov
add
sbb
inc
push
mov
push
dec
insb
mov
push
lods
ds
lock
add
pop
mov
add
mov
lret
jns
js
sub
or
dec
lahf
or
and
mov
popa
sub
nop
adc
cmp
mov
sbb
adc
sbb
xchg
ret
cld
sbb
aaa
pop
std
mov
stc
mov
add
pop
and
loope
sbb
add
repz
out
int
push
lahf
jae
pop
inc
add
dec
stos
fildl
sub
insb
xchg
mov
mov
mov
dec
incb
xor
stos
fimuls
or
dec
and
pop
add
movsl
push
sub
push
lret
aam
insl
mov
and
push
iret
cmpsl
pop
mov
xchg
into
fidivl
mov
mov
fists
push
inc
dec
stos
sub
iret
dec
inc
mov
out
jp
or
add
dec
ret
mov
mov
and
sub
pop
dec
push
sub
sbb
inc
aad
imul
xchg
cmp
int3
iret
movsb
adc
bswap
and
pop
jl
push
mov
fs
adc
stc
sbb
add
inc
lahf
xchg
into
mov
add
cmpsb
rolb
mov
fildl
jmp
inc
sbb
and
sub
add
ja
add
mov
push
xor
stc
mov
jle
mov
xchg
imull
cwtl
sbb
pop
mov
pop
js
sahf
into
cltd
test
sarb
sbb
xchg
les
xchg
xorb
sbb
dec
rclb
push
or
mov
das
loopne
scas
pusha
push
shll
pop
in
jns
mov
push
add
movsl
cltd
rcl
rorb
mov
or
test
cltd
pushf
xchg
mov
idivl
dec
rol
sub
or
lahf
xchg
cmp
aam
test
push
arpl
int3
pop
roll
xor
jecxz
sub
insb
pushf
adc
and
jb
sbb
cmpsl
inc
add
rolb
push
aad
gs
sub
lret
lret
sbbb
insl
or
int3
xor
icebp
pop
test
gs
out
add
push
call
add
je
dec
mov
nop
fisubl
pop
dec
add
cli
xchg
lock
movl
test
gs
lods
sbb
loope
stc
into
cmp
push
mov
fdivr
mov
cmovnp
cmova
mov
roll
sbb
or
sub
icebp
dec
test
sub
add
inc
sarb
mov
cmpb
add
or
movsb
mov
pop
add
inc
cmp
adc
mov
pop
jb
pop
and
or
inc
push
jmp
mov
std
or
cmp
jnp
pop
and
mov
xchg
out
and
mov
xchg
pop
adc
movsl
xchg
js
add
push
gs
or
push
add
in
mov
call
add
dec
mov
jbe
xor
dec
fdivl
loopne
inc
add
ss
call
mov
decb
stc
stc
ljmp
into
imul
sub
xchg
test
enter
pop
xchg
in
shrb
inc
sub
pop
or
int
imul
sbb
lods
ss
xchg
lea
pop
dec
mov
repz
leave
sub
iret
push
add
pop
movsb
insl
lods
fs
jl
sub
add
cmpl
or
mov
add
mov
cmp
sub
jl
out
mov
mov
sub
movl
dec
aaa
call
sub
enter
pop
insl
cld
push
mov
clc
std
imul
sub
lcall
sbb
mov
mov
sbb
mov
lock
pop
call
push
or
inc
jns
sub
sub
int3
arpl
clc
cmpsb
dec
jae
gs
mov
ja
sub
sbb
mov
orl
add
jb
push
adc
and
add
stc
jg
add
dec
fsubl
imul
sub
cmp
gs
lahf
and
mov
popa
push
sbb
inc
fadd
rorb
iret
add
or
adc
fmull
pop
mov
cmp
jns
pop
test
jp
inc
pop
cmp
outsl
mov
fwait
mov
sub
cmp
sbb
lea
mov
popf
jmp
incb
cmp
cli
and
bound
pop
lock
xlat
cmp
mov
sbb
lods
outsl
sub
inc
bound
add
adc
stos
add
mov
mov
jbe
or
aaa
sub
iret
sub
mov
xchg
adc
insl
adc
add
stc
lods
dec
mov
nop
add
imul
pusha
add
push
mov
dec
xchg
addr16
cmp
jle
mov
pop
test
cli
sbb
pop
cmpsl
inc
mov
add
push
int3
add
mov
stc
mov
and
xor
pop
push
cmpsl
sbb
mov
sub
outsl
push
js
xor
enter
or
repnz
or
dec
movsl
clc
rolb
imul
mov
fidivrs
lea
js
sub
or
shrb
cmp
dec
ja
mov
call
add
jecxz
pushf
mov
add
mov
mov
mov
fidivl
insb
add
fnsave
inc
mov
pop
into
aaa
nop
adc
fildll
mov
inc
pushaw
rorl
inc
das
fwait
in
xchg
mov
stc
mov
movsb
in
bound
dec
cmp
mov
test
ljmp
lahf
addb
roll
jecxz
repz
or
out
mov
push
hlt
or
and
addb
pushf
add
push
in
pop
aam
jge
pop
xchg
add
push
adc
stos
inc
push
aas
push
add
ja
lahf
cs
jecxz
jmp
dec
rorb
mov
mov
cmpsb
cli
daa
add
cmp
xor
pop
fisubl
sbb
int3
popf
fcomps
test
mov
lods
adc
and
fsubrl
mov
imul
pop
mov
add
mov
rorb
add
fidivrs
dec
inc
jns
add
sub
xor
outsb
adc
mov
inc
decl
mov
jp
xor
xchg
inc
sbb
and
xor
cmp
fstpl
sbb
lcall
cmp
adc
sub
lock
jecxz
test
cmc
out
xchg
repnz
test
cs
sub
cmp
insb
mulb
out
pushf
pop
xchg
ret
imul
pop
add
shl
or
stc
pop
mov
mov
mov
adc
dec
mov
adcl
and
gs
sub
icebp
xchg
rcrb
popa
out
mov
mov
ss
mov
add
pusha
adc
lock
loopne
jo
xor
movsb
pop
repz
sbbb
push
fnstenv
add
out
inc
xor
stos
fdivrl
jnp
dec
add
call
popa
sbb
fimuls
movsb
das
mov
xchg
inc
mov
addb
test
mov
sbb
pop
ds
imul
gs
addl
dec
in
pop
loop
ja
dec
cmc
push
aam
rorb
inc
cmpsl
and
xor
pop
fldl
dec
out
jo
mov
push
add
leave
pop
hlt
fldt
mov
ret
sub
sub
add
pop
mov
test
or
out
or
inc
mov
mov
xchg
pop
xor
cs
mov
and
fadd
outsl
scas
pop
mov
fwait
sarb
jae
aas
insb
ljmp
and
lret
mov
xchg
jno
pop
xor
sub
inc
push
shrb
pop
loope
cmp
jo
faddp
xor
cmpsb
mov
add
pusha
push
flds
ja
in
cmp
pop
inc
cmpsb
jo
mov
inc
adc
test
sub
sar
pop
aas
testl
sbb
adc
add
cld
mov
xchg
stos
sub
inc
pop
add
lea
daa
push
fs
add
ja
cmp
movsl
jo
pusha
add
add
cmp
stos
imul
in
popf
sbb
inc
pop
push
dec
into
jb
test
outsl
mov
jecxz
xor
jle
sub
adc
test
hlt
out
bound
in
aad
add
jno
int3
sbb
orl
jbe
cmp
mov
movsl
in
mov
sbb
and
mov
xor
in
outsl
fwait
in
mov
sub
dec
pop
sbb
inc
push
add
xor
and
inc
cld
fstp
pop
aad
dec
push
ret
addb
mov
xchg
dec
pop
jnp
add
pop
mov
in
sub
mov
data16
add
inc
ret
ret
push
lds
arpl
jo
mov
sbb
pop
adc
stos
pop
sbb
jge
pop
and
in
or
icebp
ror
push
btr
movsl
call
add
and
outsl
call
cwtl
add
jmp
push
cltd
cmp
push
sub
lock
inc
push
pop
mov
add
fbld
jecxz
aaa
mov
hlt
mov
sub
pop
push
and
sbbl
cmpsl
mov
push
cmpsb
inc
test
cmp
mov
add
fsub
cld
lahf
mov
inc
mov
mov
sbb
sub
adcl
push
cwtl
xor
imul
jb
mov
call
leave
nop
xchg
adcl
push
xchg
inc
in
push
clc
ret
add
daa
stos
add
repz
xchg
movl
and
push
add
out
sub
lret
cmp
push
sbb
and
nop
hlt
nop
push
mov
in
or
xchg
aad
and
loop
mov
push
cmp
mov
ja
adc
jl
out
je
das
outsb
push
jbe
or
and
push
shrl
outsl
xor
rorl
add
icebp
roll
sub
daa
mov
mov
cld
insb
mov
outsb
sbbb
imul
cmp
outsb
add
mov
ret
mov
repz
out
fildll
and
daa
push
mov
mov
and
inc
inc
xchg
cmp
mov
dec
add
sub
test
insb
lods
push
add
ret
sub
das
pop
popf
call
dec
insb
orb
test
mov
add
in
add
dec
jmp
rolb
andb
add
sub
lock
rcr
dec
pop
rorb
jg
packsswb
outsl
mov
popf
insl
data16
roll
sbbb
mov
inc
std
rorb
jg
fwait
add
imul
xchg
ficoml
inc
or
push
mov
or
mov
add
add
outsl
imul
dec
push
and
mov
pop
out
jnp
push
scas
sub
mov
jl
in
mov
or
fsubrs
fmul
xor
inc
pop
lods
jg
das
pop
fnstcw
xchg
sbb
cmp
sti
add
outsb
mov
mov
popa
scas
push
imul
and
outsl
jb
icebp
call
popa
xchg
xor
fs
pop
pop
add
arpl
add
adc
jecxz
push
cmp
das
jnp
pop
ss
xor
sbb
dec
mov
jecxz
jl
inc
add
loopne
pop
in
xchg
bound
decb
mov
repz
sub
mov
clc
push
add
cltd
mov
and
mov
sbb
xchg
mov
mov
sahf
sub
lds
push
popf
mov
out
jnp
sub
jle
shrl
xchg
dec
and
lods
js
pop
mov
scas
insb
dec
pop
push
arpl
gs
lds
pop
inc
push
push
stc
push
enter
or
sub
repnz
xchg
mov
pop
int3
jae
outsb
fisubrs
lret
rclb
cmpsl
in
sbb
clc
push
fildll
in
enter
mov
and
gs
sub
rcrb
shl
fisttpl
add
fsts
test
pop
lods
fstpl
cmp
lret
mov
inc
jo
les
inc
mov
sub
push
pop
out
mov
loop
add
sub
mov
inc
lock
rorb
sub
sbb
lret
test
or
cmp
data16
mov
sahf
negb
aas
lahf
lahf
stos
aam
loope
imul
xchg
insl
dec
add
inc
mov
sub
scas
pop
out
push
sub
adcb
add
cmc
mov
ret
sub
sbb
mov
movsl
pop
cmp
or
subb
xor
divl
dec
sti
or
add
adc
enter
cwtl
pop
mov
sub
fisubs
add
dec
pop
pop
dec
push
leave
add
pop
lea
cmc
aam
movsb
push
push
loopne
repz
add
repz
movsb
and
mov
cs
call
or
sarl
rorb
lds
in
add
gs
xor
xchg
push
add
cmp
xchg
jne
imul
sahf
mov
out
jo
addr16
xor
push
and
mov
ja
pop
adc
mov
mov
xorl
jo
ret
jae
inc
cmp
add
pop
cmp
in
imul
aaa
inc
scas
mov
xor
cmpl
adc
pop
sub
adc
js
xchg
loop
mov
call
sub
xor
sbb
mov
push
shll
pop
andl
mov
pop
pusha
cmp
jge
xchg
or
cs
popf
lret
sub
sub
cmpsb
add
orl
add
test
jg
adc
cmp
cmp
and
push
add
les
xchg
sbb
xchg
fidivrl
and
jns
cmp
daa
cmp
jmp
add
int3
pminsw
test
push
sbb
dec
sub
push
fcompl
pop
ficompl
cld
jo
mov
enter
add
inc
and
dec
ret
mov
stos
testb
outsl
xchg
out
jg
or
add
dec
popf
push
cs
inc
jae
xchg
pop
xchg
jae
push
add
mov
add
dec
and
int3
jp
fstpl
aaa
enter
xlat
rclb
add
push
pop
pop
xor
sub
xor
and
out
adc
pop
cmp
push
sub
sbb
sub
xchg
mov
xchg
inc
addr16
pusha
mov
mov
pop
lods
sub
mov
pop
mov
xchg
or
xchg
enter
jae
xchg
add
cmp
aaa
mov
es
clc
stc
jnp
adc
les
fs
sub
out
mov
cmpsl
push
mov
pop
ja
add
enter
int
iret
inc
sub
inc
mov
adc
fiadds
pop
dec
mov
push
insb
sub
and
lret
fcomps
and
fstpl
lret
sti
inc
cmp
xchg
or
push
je
sub
or
jg
test
pop
or
clc
lods
xchg
add
fsub
lret
and
clc
add
and
cmc
cmpsb
pop
xchg
xor
and
cs
mov
push
mov
hlt
sub
dec
pop
cld
or
xchg
add
add
out
test
dec
adc
xor
mov
sub
iret
push
jge
xchg
mov
mov
clc
cmpsb
adc
pop
fbstp
in
dec
sub
fstl
cwtl
add
lods
lods
fldenv
scas
pusha
add
test
jae
mov
jo
and
add
mov
int3
cmp
xchg
mov
jae
add
pushaw
sbb
clc
pop
xorb
hlt
jl
lock
mov
mov
test
add
mov
dec
mov
aas
in
sbb
ljmp
or
mov
loop
jl
and
sub
mov
out
pop
jecxz
push
add
mov
mov
dec
jle
add
mov
xor
lcall
cmp
pop
mov
jge
aad
jo
or
lock
cld
repnz
in
mov
xchg
inc
add
jecxz
mov
lret
pop
das
lock
out
xor
xor
out
xchg
fmulp
and
add
jecxz
mov
clc
sbbb
jns
lret
out
cwtl
add
out
out
movsl
filds
pop
stos
sahf
adc
addr16
sub
repnz
sub
jg
inc
lea
cmc
fisttpll
hlt
pushf
gs
or
leave
sub
mov
jb
mulb
fs
stc
insb
or
mov
pop
dec
int3
int
clc
sub
ret
add
icebp
mov
call
std
or
insb
sahf
mov
jae
imulb
lea
or
test
xor
adc
inc
adc
cld
aad
dec
popf
xor
lahf
sub
mov
push
int3
imul
aaa
imul
inc
xchg
mov
movsl
add
xchg
mov
push
add
repz
pop
out
mov
push
popf
ss
pop
and
cmc
pop
roll
mov
adc
push
insl
ss
es
lock
cs
pop
push
loopne
and
add
fmul
dec
std
sbbb
add
mov
subb
sub
push
adc
add
std
xchg
and
inc
ds
adc
xlat
gs
cmp
add
mov
mov
jns
inc
mov
insl
adc
dec
aaa
xchg
movsb
sub
pop
lcall
adc
push
sub
mov
mov
stc
stos
outsb
xor
ret
mov
or
mov
mov
cli
enter
push
sbb
mov
iret
popw
push
leave
add
dec
inc
jmp
aam
pop
add
adc
cmc
dec
loopne
mov
pop
mov
adc
mov
lods
cltd
cmc
and
or
shrl
out
inc
add
xor
add
imul
mov
jb
mov
xchg
ja
inc
or
cmp
std
push
and
insb
pop
std
dec
add
cmpb
cmpsl
js
pop
enter
mov
nop
adc
jg
stc
jecxz
pop
push
dec
les
xchg
out
in
push
je
pop
mov
push
addr16
lods
pop
cvttps2pi
in
mov
imul
iret
push
ljmp
cmp
and
stos
jp
push
push
mov
dec
pushf
cmp
push
jb
repz
pop
clc
jae
sub
adc
sbb
aaa
mov
shl
mov
add
nop
mov
leave
add
pushf
fists
pop
and
jbe
mov
inc
push
xor
cli
jns
mov
dec
test
lods
sub
add
or
mov
add
ss
fwait
jbe
in
mov
loopne
mov
adc
mov
mov
mov
and
sub
dec
outsl
inc
test
push
pop
and
jl
add
xchg
and
mov
aam
mov
or
mov
cli
pop
imul
mov
subb
add
pushf
int3
out
pop
mov
add
and
push
and
or
xchg
leave
sub
lret
ds
and
and
leave
sub
mov
jp
jne
sub
push
leave
ud0
adc
mov
dec
mov
les
add
clc
int
or
mov
cwtl
sub
dec
repnz
dec
mov
test
jg
lret
dec
mov
out
mov
jne
inc
mov
mov
pushf
sub
add
mov
stos
push
sub
dec
xchg
cmp
add
push
shrl
xor
jo
addr16
pop
push
imull
sub
cmpsb
mov
jge
push
push
mov
inc
xor
je
js
lods
sub
lahf
inc
xchg
adc
stos
pop
add
leave
repnz
ja
scas
je
jo
rolb
div
movsb
test
pop
sbb
add
or
pop
icebp
xor
or
adc
add
js
jg
jo
xlat
mov
sub
es
adc
les
add
cmp
inc
movsb
sub
es
leave
cmp
inc
mov
jnp
repz
add
in
movsb
add
lret
and
aaa
popf
nop
jmp
lret
movsb
add
and
cli
push
add
add
lods
call
jmp
pop
mov
sub
mov
pop
xor
lods
hlt
xor
mov
ja
sub
mov
aas
lock
push
fistpl
xor
xor
data16
sub
cwtl
fiadds
add
rolb
push
jno
sbb
and
inc
mov
xor
fwait
mov
xchg
popa
cmp
sbb
mov
fbld
ds
lock
test
shrb
ss
mov
sub
or
add
test
and
jae
bound
insb
pop
mov
push
cld
mov
lcall
mov
cmp
add
lret
ret
mov
int3
push
push
sub
jnp
clc
mov
stos
adc
pop
or
cmc
jecxz
movsb
mov
add
nop
dec
fmull
xchg
fsubs
adc
inc
mov
lahf
in
add
cmp
add
fcomip
pusha
hlt
outsb
xchg
inc
adc
test
sub
and
cmc
lret
xorb
imulb
mov
inc
mov
and
ds
daa
sar
or
sub
test
mov
jecxz
jle
popa
jne
aad
and
cld
cli
scas
fcomi
fucomi
ljmp
cmc
scas
cs
mov
lods
lcall
xchg
pop
mov
cmp
orb
sahf
inc
das
dec
adc
mov
lahf
test
movsb
scas
inc
xor
incl
js
jnp
fimuls
xor
loopne
sbb
cmp
mov
shrl
stos
mov
xor
xchg
loope
filds
mov
dec
push
dec
movsl
mov
push
dec
loop
sbb
movsb
lea
xlat
add
sarb
jmp
shrb
int
test
add
push
and
push
jg
add
mov
adc
jbe
dec
xor
mov
dec
data16
mov
cmp
incb
repnz
xlat
push
mov
aam
sbb
jb
loopne
add
mov
orb
mov
das
fiaddl
adc
pop
xchg
sbb
adc
aas
loope
mov
sub
shll
adc
dec
fadds
cs
sbb
push
pop
jnp
pop
inc
jae
jbe
push
xchg
jns
test
std
adc
out
mov
add
xor
sub
scas
nop
sub
mov
daa
rolb
loope
scas
ja
sub
enter
ja
add
mov
jge
jno
loope
adc
xchg
and
mov
je
lahf
jle
clc
cltd
sub
xchg
cli
cmp
daa
mov
cli
gs
dec
cmpsb
cs
movsl
movb
mov
mov
adc
xchg
sub
mov
push
xor
js
cmp
repz
insb
xchg
pop
pop
cmc
leave
cmpsb
add
sub
push
jns
clc
mov
bswap
cmpsb
or
and
mov
and
testl
jns,pn
fisubl
mov
push
add
mov
orl
leave
sub
add
add
jg
mov
scas
dec
lret
lods
cltd
lcall
enter
or
lods
lahf
xchg
xchg
adc
xor
ljmp
aaa
paddusb
outsb
inc
cltd
add
insl
pop
lds
cmp
rcll
inc
inc
add
sub
out
xchg
xor
dec
cmc
pop
mov
push
add
sbb
add
rorl
add
jns
fwait
aam
pop
in
sbb
xchg
jb
fs
into
call
imul
aas
lods
and
cs
das
lret
mov
cmc
pop
test
push
inc
pop
pop
lock
mov
ficoms
aad
sub
jbe
inc
fdivs
sub
sub
leave
sub
sbb
mov
mov
dec
and
dec
daa
push
mov
shrl
cmc
in
xchg
add
push
ljmp
call
hlt
cmp
push
test
mov
test
rcl
add
test
mov
mov
xlat
hlt
gs
sub
pop
and
inc
mov
sub
test
jmp
sub
fiadds
shrl
inc
add
or
cmc
add
xor
adc
and
andb
fstps
sbb
add
sub
in
sti
popa
inc
out
popa
add
push
mov
rorb
mov
push
push
add
or
push
add
mov
je
sub
insl
ljmp
pop
push
xor
or
test
rorl
leave
scas
add
inc
imul
add
jo
jnp
mov
mov
sub
mov
xchg
clc
or
cmp
mov
pop
xchg
mov
fidivrs
xor
xchg
mov
dec
sub
sub
outsb
mov
subb
xchg
sub
int3
inc
mov
push
pusha
pop
aad
repnz
sub
hlt
dec
cmp
mov
cs
mov
cld
movsl
or
imul
orb
push
push
ds
push
mov
rcl
sub
jbe
xchg
mov
xor
enter
ds
add
addr16
adc
lea
movsb
loop
les
inc
pusha
pushf
insl
pop
mov
sub
jbe
jno
sub
jmp
imul
mov
iret
sbb
lock
lret
test
les
mov
add
pop
jne
shrl
int3
xchg
inc
sbb
sbb
lock
repz
iret
jo
enter
stos
add
xor
mov
xchg
inc
add
mov
shrb
add
xor
pop
jnp
adc
mov
and
mov
roll
pop
popf
and
lahf
xchg
enter
xor
insb
clc
jl
cmp
add
arpl
sub
add
movsb
lret
mov
repnz
jnp
xchg
lahf
stc
jnp
adc
add
mov
adc
pop
xchg
clc
add
dec
cwtl
pop
mov
push
jg
mov
jno
or
mov
cmp
jnp
inc
lar
add
addr16
loop
ja
mov
inc
sarb
cmp
inc
ret
mov
dec
mov
loop
sahf
add
std
popf
fmull
cmpsl
jae
cmc
jecxz
mov
test
dec
fists
cvttps2pi
into
add
xchg
cmc
xchg
add
cmpsl
roll
std
push
xor
sub
jbe
js
pop
dec
mov
ljmp
sub
or
shrl
cmpsb
psadbw
enter
sub
aaa
jns
cmp
fcoms
fiadds
mov
testl
mov
pop
dec
xchg
lahf
pushf
aam
mov
xchg
xor
push
jmp
test
mov
fstp
mov
movsl
std
jo
mov
inc
mov
sub
es
adc
aad
addb
rol
add
fwait
pop
call
imul
mov
push
mov
sub
pop
pop
xor
inc
movsb
mov
aas
add
je
mov
sub
mov
push
incb
test
sub
xor
scas
ja
mov
aas
sub
pop
sarb
mov
xchg
xor
hlt
imul
pop
cmp
sub
jnp
mov
pop
aas
sbb
aam
shlb
outsl
add
sub
push
repz
xchg
fdivs
fldcw
inc
insl
lcall
out
mov
and
add
add
dec
aaa
add
or
repnz
pavgb
mov
pop
jb
add
cli
inc
pop
push
xchg
enter
mov
movsl
aas
pusha
sub
add
dec
lcall
add
ja
popa
ja
loop
lods
mov
xlat
pop
sub
push
lret
jo
loope
hlt
ss
cmp
dec
push
mov
push
or
fstp
and
cmp
ja
push
jle
stc
pop
and
sub
push
pop
jo
push
sub
sub
push
push
and
ret
lds
jae
insb
mov
add
sbb
xchg
push
addr16
shll
leave
jne
mov
scas
mov
inc
mov
mov
jb
adc
ljmp
loope
cmp
leave
call
mov
jl
imul
fwait
jle
add
push
test
or
es
scas
sub
and
add
pop
sbb
mov
xchg
inc
enter
mov
push
dec
push
sti
dec
ljmp
jle
mov
cli
add
insl
test
pop
mov
jmp
popa
adc
xor
jmp
les
sub
outsl
shr
fnstcw
fs
adc
add
mov
push
test
sub
push
add
in
mov
or
sub
adc
xchg
rcl
fisttpl
sub
imul
push
lock
mov
sub
cmp
iret
mov
mov
fwait
jne,pt
xchg
xor
shlb
in
into
ljmp
sub
stos
into
mov
mov
popa
insl
sbb
mov
sbbl
imul
mov
cltd
jb
fnstenv
and
mov
aaa
cmp
xlat
mov
shrb
xor
flds
jns
pop
lcall
andl
data16
enter
dec
sub
push
mov
clc
sbbl
add
ljmp
ljmp
sub
add
xchg
add
mov
pop
lods
dec
jmp
cmp
fstps
and
jmp
lret
aaa
dec
dec
sub
cltd
xor
sbbb
or
lds
pop
imul
xchg
icebp
or
sahf
jge
movsb
mov
scas
pop
adc
shlb
rorb
mov
pop
enter
call
and
push
mov
dec
xchg
ss
push
sub
cmp
scas
cmpsl
sbb
in
test
jne
movsb
iret
mov
adc
lods
sub
adc
mov
sbb
jle
or
add
loop
dec
sbb
pop
jb
frstor
in
and
inc
xor
movsb
fsub
sti
pop
mov
shrb
int3
inc
mov
pop
imul
test
repz
into
fdivrs
test
sbb
dec
inc
inc
sub
cmpsb
in
jnp
loopne
push
ja
add
mov
mov
test
subl
mov
leave
out
xchg
xlat
stos
xor
adc
or
insb
xor
mov
and
pop
insb
push
clc
add
addr16
in
xchg
inc
add
addb
pop
xchg
aam
inc
mov
cmp
pusha
negl
scas
mov
inc
mov
push
push
sub
inc
cwtl
shrl
movsb
cwtl
lds
push
pop
sbb
ljmp
movsl
adc
lret
add
hlt
push
add
mov
jo
and
cmp
or
aaa
mov
dec
sbb
xlat
lods
stc
test
mov
jns
sbb
xchg
gs
add
mov
data16
hlt
sub
mov
adc
gs
jp
stos
out
xorb
mov
pop
rolb
add
nop
push
mov
cmp
pop
add
pop
subb
in
insb
jmp
loopne
notb
out
jecxz
inc
add
punpckhbw
cmp
inc
pop
addl
lock
std
imul
jecxz
enter
xchg
repnz
fwait
push
pop
rol
add
xor
lock
pop
add
movntq
mov
mov
mov
xlat
shlb
add
cwtl
mov
shlb
adc
rcrl
add
setnp
sbb
test
jno
pop
adc
sub
mov
sub
stos
dec
pop
lret
inc
add
popf
dec
push
ss
xor
pop
loope
aam
imul
add
add
pop
mov
arpl
add
dec
cld
jae
orl
mov
push
xchg
pop
popl
push
sarl
mov
jno
mov
mov
cs
aaa
sub
xor
enter
js
xor
xchg
outsl
dec
mov
jge
jge
fsubrs
mov
ret
cmp
xchg
pushf
or
push
das
loope
add
dec
fisubrl
add
and
subl
int
push
enter
xchg
mov
bound
cmp
xlat
add
sub
mov
movsl
pop
and
rcll
inc
add
push
rcrl
adc
insl
ss
inc
and
cmc
add
mov
push
mov
js
inc
out
jnp
add
popa
repnz
insb
roll
and
pop
mov
loopne
das
mov
add
push
lret
jo
mov
call
lods
xor
vmread
dec
jecxz
or
and
aad
cmp
dec
mov
addr16
cmp
mov
jg
sub
push
mov
mov
ret
out
rcr
dec
in
push
mov
pop
add
cmovo
mov
aaa
jle
and
clc
push
in
adc
mov
pusha
vphadddq
mov
mov
adc
add
mov
ror
mov
and
outsl
jne
push
faddl
std
jl
inc
fcoms
adc
cmovno
imul
mov
jecxz
sete
or
push
xchg
andb
sub
inc
push
sub
sub
ret
and
pop
or
mov
rclb
fidivrl
lods
xchg
rorb
das
stc
dec
stos
pop
call
mov
fwait
pusha
rcrl
mov
jl
push
clc
negb
add
jge
pop
mov
cwtl
lret
or
xor
push
lods
inc
shl
jmp
inc
mov
xlat
lea
xchg
es
mov
cs
lds
add
mov
mov
cmp
mov
fwait
loop
je
add
aad
mov
out
cmp
sub
out
xorb
stos
lahf
test
fidivrs
pop
sub
lcall
sbb
jg
das
iret
mov
cmp
aam
pushf
push
jle
dec
add
fcmove
xor
cmp
add
pop
es
movsb
mov
jb
imul
xlat
fisubl
jle
sub
sub
stc
rclb
xchg
push
or
sbb
sub
xor
daa
mov
adc
sahf
inc
push
inc
mov
and
punpcklbw
fnstcw
fstpt
das
add
sub
add
in
mov
sahf
sbb
sub
fdivrs
add
dec
daa
lea
xchg
movsb
lcall
loopne
sub
test
mov
and
pusha
loopne
add
inc
push
leave
cmp
andb
xor
pop
lahf
or
or
test
add
test
sti
sub
sahf
out
or
inc
cmc
add
dec
ss
movsb
cmp
lods
mov
std
mov
cwtl
mov
inc
adc
xlat
movsl
das
add
mov
and
mov
pushf
sub
ret
daa
aas
mov
imull
sub
jmp
push
cmp
mov
jb
loop
adc
cs
loope
rcl
dec
jle
fmuls
mov
out
mov
jmp
xchg
stos
pop
and
or
mov
push
push
out
add
lcall
mov
sub
jle
sub
pop
fwait
push
cwtl
dec
lcall
mov
xor
fidivrl
inc
mov
mov
aas
sub
rol
aam
mov
dec
retw
xchg
xchg
cmp
xor
hlt
inc
adc
dec
ss
pop
add
repnz
cld
clc
add
fmul
data16
lcall
cmp
adc
in
imulb
testl
sub
push
in
adc
inc
jb
dec
mov
xchg
loopne
inc
test
stos
adc
test
push
dec
dec
mov
int3
fidivs
loope
mov
pop
mov
rorb
ljmp
jl
xor
sbb
mov
or
jp
out
lods
sub
in
bound
call
pusha
les
fidivrl
add
and
mov
in
inc
fsubrl
sub
xor
add
mov
sbb
mov
ds
shlb
push
fwait
jecxz
sub
iret
add
pop
xchg
inc
and
rcrb
aad
in
push
add
jmp
mov
xchg
outsl
idivl
inc
aad
stos
cmpsl
pusha
sub
test
xchg
addb
ret
mov
mov
add
lods
and
dec
sub
sbb
pop
data16
sbb
lea
mov
stc
add
in
sbb
loopne
add
sahf
nop
scas
sbb
int3
add
cli
pop
xchg
mov
cmc
dec
aam
cld
push
add
sub
mov
push
clc
jns
mov
ret
pusha
dec
mov
jns
shlb
push
push
jle
pop
jbe
cmpsb
mov
pop
test
loope
cld
push
pop
sub
xor
les
mov
add
pop
sub
xor
test
xchg
and
mov
add
loop
mov
sub
push
push
push
shl
jbe
adc
mov
jbe
or
outsl
pusha
sub
sub
inc
xor
xchg
mov
nop
fwait
sub
or
jae
ljmp
loop
lods
hlt
fcoms
into
insl
or
gs
push
test
inc
insb
movsb
and
fldenv
mov
dec
add
or
aam
outsb
jb
shl
outsb
jmp
add
push
mov
lods
in
mov
leave
imul
into
and
xchg
out
fwait
xlat
pop
xchg
mov
push
lock
push
rolb
jp
mov
mov
shlb
dec
add
fwait
xlat
ret
shll
call
inc
inc
not
dec
sub
add
add
adc
leave
add
loope
push
shrl
icebp
cli
arpl
clc
jo
lods
sub
int3
jns
xchg
lahf
repz
out
andb
cmp
push
cli
cmpsl
shlb
decl
dec
fwait
shrl
add
insl
or
mov
mov
addr16
fldt
in
insl
into
xor
bnd
lds
insl
addb
mov
ret
out
xchg
lahf
cmp
cmpsb
popa
mov
or
fisubrs
push
cltd
add
shlb
movsl
popf
cmp
jp
add
push
mov
les
pop
pop
cmpsl
fs
mov
popf
xchg
push
cmc
pop
aam
and
add
cli
cld
and
jns
test
dec
xchg
dec
lods
insb
cltd
push
arpl
in
cmp
sub
mov
xchg
testb
in
ror
xor
xorb
daa
scas
lcall
lret
lods
sbb
sub
hlt
das
xor
pop
mov
popa
adc
dec
or
add
add
loopne
clc
sub
sarb
xorb
jo
faddl
lods
and
shl
andl
mov
cli
mov
sbb
and
daa
mov
movsb
xchg
push
popa
jp
or
pop
das
dec
scas
sbb
subl
rcr
daa
imul
xorb
push
pop
adc
jg
push
clc
jnp
and
test
jl
mov
js
pop
add
aam
sub
stos
es
add
jae
out
adc
adc
xor
sub
in
cmp
cltd
jb
pop
in
hlt
cmp
sub
sub
mov
pop
jmp
loope
sarb
mov
lods
test
jae
ret
jae
push
xchg
add
das
shrl
ja
aas
out
scas
in
aam
push
inc
mov
leave
andb
sub
aam
xchg
mov
in
je
inc
jne
out
adc
sub
stos
fwait
jo
out
movl
push
adc
push
push
imul
add
loop
fwait
cltd
shll
cmp
ret
movsb
lds
inc
dec
ljmp
inc
rcrl
dec
or
lods
cmc
dec
in
enter
pop
xchg
les
mov
insb
sti
xchg
cmp
dec
iret
mov
mov
jnp
sbb
mov
andb
scas
jecxz
xor
lret
lods
xchg
das
bound
insb
jnp
hlt
arpl
cmp
and
fldt
andl
in
sub
inc
mov
orl
lret
and
stos
pushl
scas
add
stos
mov
mov
pop
lods
test
or
cmp
dec
gs
test
or
es
pop
dec
sub
arpl
cmp
add
ficompl
hlt
sub
cmp
mov
pop
jnp
test
in
jle
xchg
pop
and
push
aam
subb
cld
add
and
cs
add
xor
add
mov
icebp
jle
and
scas
mov
mov
movsb
mov
mov
pop
sub
nop
adc
xor
xchg
jb
insb
jo
test
pop
pop
adc
cmc
sub
das
and
out
add
stos
movsl
popf
sti
aaa
ljmp
mov
loope
add
int
sarl
mov
divl
lds
sub
cmp
mov
sarl
sub
stos
mov
add
bound
xchg
movsl
add
mov
mov
stos
xor
mov
or
lahf
add
ja
pop
ficomps
pop
dec
std
cld
in
cmp
addl
ret
les
add
mov
jae
add
push
cli
push
mov
adc
pop
add
dec
arpl
int
aam
insb
pop
out
adc
or
movsl
mov
xchg
or
pushf
inc
enter
jo
pushf
cmp
and
sbb
inc
or
test
pop
jge
or
out
xor
ja
xor
incb
clc
xor
cmp
xchg
sub
lret
jmp
sub
lea
popl
orl
inc
add
imul
mov
call
pop
push
int3
jg
mov
inc
test
mov
sub
stos
inc
scas
push
add
insb
push
stos
popa
movsb
add
adc
mov
enter
or
into
lahf
add
or
dec
add
xor
mov
cwtl
adc
jle
inc
add
lea
mov
push
mov
cmpsb
mov
sbb
jo
push
xlat
mov
pop
mov
cmpsl
jo
adcb
jmp
push
push
popa
mov
add
dec
cwtl
cmp
xchg
mov
sub
adc
push
div
pop
flds
popf
test
pop
cld
dec
mov
mov
sub
lock
loope
add
int3
cmp
ltr
mov
inc
or
dec
mov
sub
fcmovne
add
push
sbb
mov
adc
or
sub
push
int
data16
cld
add
insb
lret
cmp
cmpsb
lock
dec
cmp
ret
in
fadd
cltd
jo
sub
imull
inc
call
into
mov
jne
add
iret
cs
adc
fdivrl
or
cmp
movsl
add
fmuls
aam
mov
or
lods
enter
xchg
sbb
dec
add
adc
cld
hlt
inc
xor
test
aad
mov
mov
into
xchg
pusha
out
cs
sub
ds
cltd
sbb
push
cmp
out
and
sbb
push
mov
or
xlat
pop
outsb
mov
insb
mov
enter
or
pop
mov
jecxz
and
and
out
cmpsl
adc
pop
pop
sub
ret
jecxz
adc
stos
dec
mov
dec
aas
cs
xchg
sbb
or
sub
adc
movsl
add
sbb
xor
sub
sub
pusha
repnz
add
push
sbb
mov
cs
inc
mov
ja
mov
sti
jns
inc
xchg
pop
inc
adc
pusha
push
mov
fs
add
das
xchg
hlt
mov
int3
dec
mov
lret
lret
insl
and
mov
lods
or
inc
sub
outsb
push
mov
and
mov
lcall
sbb
mov
ret
shlb
push
dec
and
cmc
cltd
mov
rol
adc
imul
mov
pop
sub
push
mov
loopne
andb
cmpl
or
mov
hlt
rcrl
or
or
sub
cltd
mov
andb
mov
lret
sbb
mov
push
sar
mov
test
cmp
in
add
xor
adc
pop
adc
xchg
outsl
mov
mov
aas
jne
add
and
cmp
mov
mov
pop
xchg
sbb
scas
push
xor
popa
int3
fs
push
ss
cmpsl
add
mov
push
fsubrp
push
mov
xorb
and
scas
rcrl
inc
mov
shlb
push
pop
fstl
dec
call
je
mov
loopne
lret
repz
add
mov
mov
jo
or
inc
and
and
add
pop
cmp
mov
sbb
inc
das
lcall
sub
cmp
nop
mov
hlt
adc
and
jge
and
cmp
add
imulb
or
add
or
decl
add
int3
and
dec
dec
push
and
sub
xchg
mov
inc
mov
xor
imul
adc
push
jmp
jo
jns
mov
jne
inc
cs
in
push
sub
mov
adc
mov
lahf
jnp
inc
movsl
jle
sub
mov
leave
cmp
js
rcl
dec
cmp
pop
pop
cmc
cmp
aad
loope
aam
adc
dec
add
jo
xor
jo
call
jg
les
push
push
je
mul
inc
mov
stos
xchg
mov
inc
mov
in
and
add
and
dec
pop
loopne
mov
and
popf
int3
lahf
sti
stc
lret
pop
scas
mov
jns
dec
jl
mov
pushf
xchg
sub
inc
inc
push
sbb
in
mov
inc
sbb
mov
lods
and
inc
pop
mov
adc
push
add
sbb
pop
mov
push
and
cmp
pop
add
xchg
push
mov
mov
xor
jg
lock
mov
cwtl
andl
cld
lcall
mov
mov
sub
pusha
sub
int3
jae
mov
adc
inc
mov
lret
inc
jbe
mov
out
xorl
pushf
sub
jg
mov
xlat
lds
cmp
adc
push
ret
jmp
rcrb
cmpsl
mov
mov
sbb
xor
inc
and
out
mov
aas
mov
lds
mov
call
sub
add
in
mov
lods
add
xchg
aas
gs
repnz
push
xor
sbb
cld
mov
xchg
and
sti
sub
insb
jmp
loope
popf
or
dec
sub
pop
adc
sub
xor
ljmp
and
shll
stos
and
fwait
xchg
sti
imul
add
aam
mov
mov
mov
and
add
movsl
xor
icebp
mov
xchg
dec
jmp
out
and
addl
jecxz
mov
sahf
ds
xor
cs
dec
dec
aas
stos
and
in
sbb
faddl
add
push
lods
cli
in
mov
mov
adc
cld
sub
or
dec
inc
add
loope
rolb
es
mov
xchg
add
aad
nop
adc
inc
add
pop
adcb
mov
xchg
cld
mov
add
daa
push
lods
adc
aas
sbb
add
test
mov
sbb
pop
rolb
mov
rcr
jbe
mov
sbb
push
jae
pop
cmpsb
add
and
hlt
sahf
pop
stos
and
dec
adc
js
das
mov
adc
jo
jp
pop
pop
xor
sbb
imul
hlt
or
xchg
sub
movsb
adc
sub
test
jecxz
sub
sbb
pop
mov
jle
sub
add
mov
enter
add
pop
daa
cmp
pop
push
cli
and
or
dec
push
or
rolb
push
inc
xchg
sub
not
inc
mov
test
ljmp
hlt
mov
dec
push
imul
pop
gs
sub
mov
daa
orb
adc
xchg
mov
push
pushf
mov
jbe
xlat
mov
lds
mov
inc
hlt
lods
mov
mov
cltd
fisubrs
jmp
xor
jmp
pushf
xchg
xor
popf
daa
jecxz
or
cli
test
add
fldl
popa
ficomps
add
sub
and
mov
repz
outsl
lds
pop
xchg
push
jle
add
fstpt
cmp
aad
call
pop
mov
movsl
rorb
cmp
cmp
sub
pop
aas
aam
cmp
dec
add
pop
stc
in
enter
xchg
xor
cmpsb
loop
add
or
iret
adc
sbbb
cmp
or
push
pop
pop
add
push
fdivs
std
add
and
out
mov
js
or
jecxz
sub
pop
jb
mov
inc
sub
mov
or
dec
add
sub
inc
xor
sub
xchg
and
mov
push
sbbl
inc
imull
push
fs
rcrl
movl
mov
pop
mov
clc
aaa
mov
add
out
out
or
push
add
sahf
movsl
cltd
mov
inc
mov
push
push
add
fwait
idivl
stos
je
std
movb
aaa
sti
jns
push
add
or
pop
xchg
movzww
jbe
xor
jo
das
sti
mov
imul
inc
sti
mov
imul
push
jmp
sub
daa
push
mov
stc
jl
aas
jb
xor
push
mov
xchg
cmp
push
dec
add
js
xchg
sbb
test
int
call
mov
sti
add
sbb
sub
or
movsb
pop
mov
mov
sub
dec
add
insl
popa
inc
add
cld
js
add
in
test
test
loope
add
mov
insb
add
jb
sbb
mov
xchg
xchg
inc
movsb
lret
adc
or
adc
mov
pop
jo
dec
data16
testb
adc
and
aad
sbb
jmp
fwait
leave
outsl
dec
push
and
repnz
xchg
dec
aaa
sub
stos
jge
mov
sub
xchg
sbb
andb
sbb
in
movntq
ja
push
and
scas
js
inc
and
out
pop
jno
sti
imul
xchg
ficompl
push
sub
xchg
cld
sbb
mov
jge
jp
lret
adc
sub
fs
sub
push
data16
mov
adc
stos
in
decb
add
add
pop
xchg
or
pop
mov
test
iret
push
pop
push
aad
xchg
xchg
sbbb
out
adc
js
test
add
pop
mov
jl
icebp
pop
subb
ret
rorl
test
jns
ljmp
sub
and
ljmp
stc
mov
push
rolb
sub
loope
ja
enter
scas
cwtl
push
dec
mov
ret
cmpsb
jmp
sbb
clc
sarl
mov
mov
add
test
repnz
repz
mov
cmp
pavgw
jae
das
xchg
mulb
into
repnz
add
loopne
push
addr16
jb
scas
sarb
bswap
fucom
inc
pusha
push
cwtl
pop
and
sub
shrl
mov
mov
adc
add
sbb
xor
lcall
push
mov
pusha
xchg
push
cmc
and
mov
mov
cld
test
sub
inc
push
je
icebp
pusha
ljmp
and
cmpsl
push
push
sbb
xor
dec
dec
mov
iret
insb
fmulp
xor
cmp
push
jg
mov
arpl
mov
and
mov
sub
cs
push
cli
scas
mov
test
xchg
xor
adc
pop
jmp
xor
sub
dec
das
add
jg
xchg
fnstenv
cwtl
outsl
mov
fidivs
mov
jmp
rolb
pushf
icebp
ror
push
and
clc
cmp
push
in
test
mov
in
sbb
pusha
and
push
jmp
cmp
inc
hlt
inc
mov
or
adc
mov
sub
sbb
leave
jo
adc
sbb
pop
cmp
and
rclb
imull
orb
push
cmp
sub
int
push
pop
mov
cmp
xchg
dec
and
pop
inc
je
jnp
int
dec
inc
sti
sbb
fidivl
adc
mov
jnp
push
bound
fcoms
cmp
lock
and
in
and
adcl
pop
or
adc
les
mov
mov
or
cmc
add
cmp
xor
adc
sub
pop
mov
mov
cmp
stos
cmc
lock
lahf
shrb
mov
sub
or
pusha
push
fstpt
cs
mov
orb
cmpl
cmp
add
lods
sub
fwait
jl
ljmp
adc
mov
faddl
mov
lahf
bndldx
arpl
insb
jno
mov
frstor
mov
add
cld
stos
lret
ljmp
je
aaa
xor
mov
add
pushf
mov
hlt
inc
mov
xor
aam
add
add
sub
pushf
aas
pop
rcr
rorl
pop
in
cs
sub
inc
dec
xlat
or
sbb
dec
insb
imul
dec
dec
cltd
add
int3
idivl
or
pop
adc
in
sub
xchg
mov
in
add
jecxz
mov
sbb
enter
cmp
add
pushl
mov
sbbb
sub
jne
inc
pop
rcr
call
mov
fs
dec
fs
enter
mov
sbb
pop
clc
add
arpl
fdivl
xchg
add
mov
mov
aam
sbb
in
mov
outsl
or
daa
add
or
dec
or
inc
and
ja
mov
das
or
add
sahf
pusha
dec
xchg
pop
push
add
sub
or
add
stos
pop
fld
sbb
or
out
sub
xchg
sub
push
pusha
add
pop
loopne
mov
out
out
xchg
shr
inc
add
enter
pop
leave
adc
push
inc
stc
popf
arpl
mov
dec
inc
xchg
bound
inc
sub
jne
stos
cmp
jnp
mov
icebp
ds
sub
outsw
xor
les
add
cmp
pop
pop
jg
std
jbe
scas
mov
lret
loopne
loopne
in
cmc
mov
xor
mov
add
xor
push
xlat
out
leave
cmc
or
mov
pusha
add
movsl
dec
add
mov
pop
pop
jne
mov
fdivrl
scas
fsubrs
lods
loop
les
cwtl
mov
gs
imul
daa
jecxz
xor
or
xor
jno
cmp
pusha
fs
ss
test
bound
dec
sub
mov
sub
es
mov
jp
ss
dec
sbb
and
sub
loopne
mov
out
add
jge
mov
insb
push
scas
test
xchg
scas
insb
push
das
rcrl
test
pop
add
lahf
mov
pushf
fs
mov
shlb
dec
push
rclb
lock
ret
fistps
in
jecxz
sahf
push
pop
dec
add
les
or
lret
call
jnp
ljmp
ljmp
imul
xor
push
inc
adc
add
jae
lock
lods
adc
cli
pop
lock
xchg
mov
sub
test
mov
fildl
pop
xor
jmp
xchg
jno
pop
or
pcmpgtd
pusha
add
mov
and
ljmp
in
sub
pop
push
daa
push
jp
sbb
scas
mov
adc
push
idiv
or
les
inc
and
dec
dec
pop
mov
push
push
pop
movsb
leave
lods
sub
out
loopne
push
int3
jno
xor
stc
cli
rcll
ja
icebp
pop
sbb
orl
add
in
fldcw
std
jo
insl
xor
negl
arpl
cmp
adc
dec
xchg
mov
movsb
add
mov
lahf
jns
xchg
mov
out
push
and
or
sarl
cli
xchg
fwait
xchg
sub
pop
cmc
les
int3
pop
push
inc
add
xor
cmpsl
stos
jne
add
push
or
cld
and
jno
sub
adc
icebp
mov
dec
lods
dec
call
sbb
sbbb
jbe
enter
push
cwtl
sub
stos
sbb
mov
mov
jne
add
out
mov
ret
add
push
stos
mov
pop
adc
movsb
mov
in
push
dec
cmp
push
icebp
filds
mov
add
ret
jae
cmovb
sbb
adc
mov
add
cmp
adc
or
js
dec
data16
stc
push
jg
pusha
mov
leave
je
sub
cmp
incb
loope
scas
jmp
lea
add
lret
jb
movsl
xchg
bound
pop
mov
sbb
fisubrl
loope
jne
ret
rcrb
int3
add
jl
sub
mov
jno
sub
cld
cmpsl
jbe
nop
mov
les
pop
sub
data16
pop
jg
pop
add
pop
inc
adc
push
es
push
adc
pop
mov
mov
stc
fildll
call
jae
add
sub
fwait
pop
sbb
into
bound
push
inc
jmp
jb
mov
inc
add
bound
xor
dec
sub
jle
adc
negb
into
add
dec
mov
add
push
repnz
mov
icebp
xor
lret
adc
aam
in
inc
mov
insb
mov
clc
popa
iret
adc
push
jae
leave
das
call
cmp
push
incl
mov
add
into
jo
mov
sub
sub
outsl
ss
jp
pop
sub
lahf
daa
cmpsl
fadds
xchg
dec
mov
gs
add
pusha
dec
es
stc
das
sub
jp
scas
inc
xor
icebp
xor
pcmpeqd
in
loopne
xor
mov
push
nop
xchg
pop
lret
fdivs
add
adc
enter
dec
xor
aas
adc
mov
test
xchg
adc
cmpsb
outsl
add
bound
loopne
fs
add
popf
inc
je
jns
mov
xor
fsts
pusha
shl
add
dec
fwait
jae
jbe
enter
mov
imul
mov
scas
dec
lock
repnz
dec
add
pop
aam
scas
inc
mov
mov
mov
or
mov
fcomi
dec
add
outsb
cwtl
mov
mov
push
add
xor
mov
adc
mov
shr
cmp
mov
and
xchg
add
add
cmp
icebp
add
mov
fbld
sub
or
mov
sub
or
push
dec
inc
sbbl
orb
mov
mov
ror
sub
cmp
ja
adc
add
pop
cmp
add
sub
mov
cmc
iret
fisttps
sbb
mov
lret
xchg
dec
iret
pusha
jmp
mov
sub
rolb
mov
cld
rcl
adc
jmp
jl
or
arpl
cmp
cli
add
adc
mov
fcmovnb
mov
xor
popa
mov
jge
mov
hlt
lds
jecxz
pop
in
push
jmp
jae
push
clc
xchg
adc
pop
mov
inc
cli
pop
push
push
add
push
ss
incb
bound
add
cld
int3
sub
xor
xor
push
xlat
dec
in
out
sti
mov
xchg
ds
mov
pop
sub
arpl
cmpsl
dec
add
xchg
lods
mov
inc
push
add
mov
dec
add
scas
das
repnz
add
mov
xchg
mov
aam
aaa
xor
test
sub
jp
fwait
scas
jns
adc
mov
lods
jecxz
dec
out
shrl
popa
xchg
cmp
cs
mov
mov
lock
bound
push
cltd
pop
xlat
push
mov
xchg
pop
enter
and
in
fwait
and
mov
out
stos
sbb
and
js
ret
imul
call
mov
pop
inc
rclb
mov
movsb
sbb
fimuls
fadd
ror
sbb
jecxz
sbb
add
aaa
sarb
fadds
mov
mov
bound
or
mov
add
iret
movb
mov
mov
add
pop
lcall
xchg
pop
and
loopne
cltd
adc
icebp
xor
int
pop
ficoms
lret
sub
pop
add
sarl
lods
mov
mov
incb
mov
fsubs
ret
sub
sbb
xchg
mov
sub
stos
test
and
or
xchg
or
mov
mov
out
jge
in
cmpsb
hlt
fnstsw
adc
lods
pop
popa
adc
loopne
aas
sub
add
sahf
jno
mov
inc
mov
je
nop
add
test
out
scas
lea
out
mov
aaa
add
mov
cs
lods
add
pushf
sbb
fdiv
fwait
mov
xchg
adc
jb
fiaddl
dec
push
stos
cmp
push
cmp
xor
std
mov
outsb
test
adc
sub
and
sbbb
jb
xor
adc
jo
mov
pop
fadd
icebp
and
mov
adc
add
xlat
insb
bound
sub
add
pop
js
push
mov
insb
cli
test
js
jo
out
adc
es
add
imul
dec
sti
sub
cld
lds
add
pop
mov
imul
pop
imul
cwtl
cltd
push
cmp
xor
add
test
aam
divl
in
out
dec
sub
loop
sbb
fldcw
sbb
jmp
adc
pop
pop
in
das
movsl
add
ds
pop
and
repnz
insb
push
jecxz
add
les
pop
out
rcll
call
jns
dec
add
in
dec
in
sub
jp
pop
sub
jbe
and
cmpsl
xlat
nop
mov
mov
das
mov
sahf
jl
xchg
jp
fwait
add
aam
je
sub
enter
bound
test
pop
cmp
scas
jae
inc
sub
xor
push
sbb
aam
pop
out
pop
pop
add
mov
add
in
sbb
stos
jg
aam
cmp
mov
mov
jnp
sbb
ja
inc
or
cmc
les
test
jmp
push
in
imul
test
adc
cmpb
mov
add
scas
or
add
lret
lea
xchg
popa
add
pop
jmp
sahf
jmp
pop
mov
push
cli
sub
xor
cmc
xchg
orl
push
std
push
mov
dec
add
sub
fsubrl
and
out
sub
testb
push
iret
lods
fdivrl
mov
jo
test
test
in
push
shl
mov
jge
push
cltd
cwtl
add
jl
adc
inc
mov
jno
lret
paddb
icebp
pop
sti
xchg
add
xchg
fnstcw
and
mov
mov
jno
lcall
jnp
imul
movsl
jbe
sub
ljmp
or
int3
push
mov
xor
mov
sbb
mov
int3
mov
jg
arpl
mov
outsb
xchg
bound
fwait
rorl
sub
out
sbb
xchg
ljmp
or
jg
mov
test
push
in
add
ss
dec
add
jbe
adc
inc
inc
xchg
notb
jmp
mov
addl
nop
int3
mov
cmp
mov
add
jmp
repnz
pop
daa
mov
lea
inc
jns
outsb
aaa
insl
add
test
fistl
mov
aas
aad
lret
loopne
sub
cmp
mov
add
imul
cmp
sub
xchg
or
xor
test
and
test
fists
and
fs
add
nop
rcl
sub
xor
pop
repnz
repnz
mov
arpl
das
out
and
icebp
adc
pusha
in
xor
mov
xchg
cmp
lods
inc
xchg
xchg
aad
sbb
push
popf
add
sub
dec
mov
cmova
jmp
cmp
xor
mov
ja
xchg
pop
dec
and
shl
jecxz
mov
adc
push
xchg
sub
jbe
mov
aas
mov
xchg
xchg
enter
cmc
add
es
pop
mov
sub
inc
xorl
int
sub
mov
cmp
hlt
dec
pop
shrl
mov
and
jp
jg
aad
int3
mov
stos
lea
mov
cmp
pop
mov
dec
mov
xchg
popa
push
sub
pop
rolb
push
add
repz
mov
in
xchg
aaa
adc
loop
push
insb
fstpl
xor
mov
mov
mov
fwait
or
sub
xor
test
add
negl
xorl
add
lods
sbb
add
jne
jne
add
adc
mov
cmp
add
cli
nop
add
sub
mov
cmp
shll
shll
mov
imul
lds
sahf
sahf
ja
fwait
hlt
sub
push
jmp
repnz
cmp
mov
fstps
add
add
call
lret
xchg
cmp
mov
out
mov
mov
fcompl
sub
lret
jle
xor
cmpsl
adcb
pop
outsl
and
iret
insb
icebp
dec
divb
mov
mov
ss
add
jl
int
and
loop
pop
pop
aad
nop
jns
insb
add
mov
cmpsl
mov
mov
add
inc
add
sub
sub
inc
sub
cmp
xchg
outsb
dec
xor
mov
inc
jle
loop
out
dec
test
lods
xor
jmp
loopne
in
push
sbb
push
pop
rolb
cs
dec
sbb
add
jmp
jmp
rcll
lock
into
cmp
lahf
test
add
mov
sarl
push
es
add
shll
or
ss
subl
into
lret
mov
lds
jns
add
pop
and
repz
mov
push
rclb
dec
paddw
cmp
push
loope
enter
cmpsl
bound
add
jmp
insl
cmp
mov
popl
adc
rcrl
mov
pop
imul
add
andb
push
enter
add
dec
jns
ret
lds
adc
daa
push
mov
mov
sub
das
pop
ss
mov
xchg
jecxz
xor
or
jbe
lea
and
xchg
stos
add
scas
jp
jo
sub
mov
sub
lcall
pop
cmpsl
adc
ucomiss
or
or
fwait
bswap
ficomps
lods
test
hlt
sbb
sub
dec
in
sub
test
jns
in
mov
cmp
pushf
das
call
jo
jle
divb
lret
sahf
add
jnp
add
fwait
xchg
pop
mov
divb
xor
add
ljmp
lahf
icebp
xchg
xchg
add
cmp
ds
push
sub
arpl
sub
in
lahf
cmc
orb
adc
hlt
jbe
xor
fucomp
cltd
push
and
xor
cltd
outsb
inc
ret
mov
test
jae
in
sub
subl
movlps
jae
hlt
add
xlat
icebp
in
push
call
dec
add
add
lret
stc
mov
sub
or
push
push
add
xorl
and
sarl
ss
push
mov
adc
dec
xor
sarb
or
xor
in
aam
mov
jmp
outsb
es
mov
mov
or
xchg
push
mov
aam
imul
pushf
mov
inc
fs
jo
dec
fmuls
jns
into
add
jecxz
add
add
loopne
das
add
push
mov
push
add
pmulhw
mov
dec
add
cmpsb
and
out
adc
pusha
sbb
sub
hlt
push
fisttps
fs
push
gs
mulb
xor
rorb
bound
add
dec
pop
add
sub
in
ja
add
int3
les
xchg
fcmovb
or
add
mov
pop
rolb
ja
sub
add
cmc
andl
mov
loop
jg
int
das
mov
push
jb
ds
test
scas
add
sbb
pop
mov
dec
xchg
popf
or
cmp
add
repz
js
mov
popa
inc
inc
aad
leave
push
jno
out
pop
jb
jbe
incl
fwait
sbb
xchg
fistps
push
mov
inc
xchg
jmp
rcrl
inc
dec
xor
frstor
js
cmc
inc
mov
mov
cmp
sub
insb
jnp
mov
sub
stc
std
xor
sub
and
cmp
loope
mov
inc
nop
aas
sub
and
pop
orl
mov
mov
sbb
xchg
xchg
out
mov
cmpsl
std
add
jg
rclb
add
mov
fstl
add
cwtl
pusha
notb
daa
hlt
xchg
jnp
pop
and
aam
or
sub
adc
pop
sahf
sbb
imull
mov
push
es
inc
repz
inc
push
rol
cmp
pop
jle
rcrl
outsb
and
aas
inc
jbe
fimuls
push
js
pop
idivb
mov
cmpsl
adc
shlb
xchg
ret
shrl
add
dec
into
dec
mov
pop
cli
mov
js
dec
and
cmp
out
add
pushf
xchg
js
cmp
jmp
or
mov
aaa
fcom
mov
ss
jle
adc
in
mov
cld
loope
into
cltd
fwait
jp
data16
aad
pop
test
cs
mov
mov
mov
pop
inc
inc
bnd
in
mov
pop
pop
cs
push
loopne
push
push
mov
and
es
mov
leave
sbb
mov
int3
sbb
jb
pop
adc
mov
mov
fisubs
mov
jbe
in
dec
pop
add
addb
cmp
sub
sub
test
mov
dec
adc
aaa
xchg
add
sbb
out
push
fnstsw
enter
or
add
lods
or
fcomip
mov
mull
mov
pop
add
or
inc
mov
mov
xchg
mov
imul
popa
mov
jno
add
pop
pop
imul
lahf
lock
aad
mov
adc
cmp
mov
leave
adc
push
test
and
add
mov
inc
xchg
pop
bound
inc
mov
add
test
mov
push
sbb
jl
sub
ja
hlt
push
pop
xchg
add
rorb
add
inc
xchg
push
stos
out
inc
sub
jae
sbb
sub
dec
addb
dec
fdiv
xchg
cld
jle
jge
mov
add
or
mov
pop
fwait
jne
je
pop
sbb
test
int3
inc
sub
mov
adc
add
pop
push
cltd
push
adc
xchg
popf
aaa
outsl
pop
gs
pusha
sub
fwait
mov
stos
add
lock
dec
fidivl
sub
std
mov
popa
mov
push
lret
jp
xor
push
jbe
add
lcall
push
cmpsb
aas
in
adc
add
push
nop
add
push
add
enter
push
adc
adc
mov
xchg
mov
leave
arpl
or
and
aam
stc
lock
add
cmc
inc
pop
pusha
les
dec
sub
pushf
insb
into
mov
loope
int3
dec
lret
add
bound
push
test
adc
sub
jb
mov
lea
int
push
ret
popf
sahf
inc
jge
lods
ljmp
addl
and
inc
jge
and
js
add
jbe
xlat
mov
dec
pop
mov
push
inc
insb
decl
mov
hlt
pop
es
add
mov
call
adcl
sbbb
pop
add
mov
lcall
dec
stc
sbb
sbbl
mov
xlat
cmp
dec
add
add
mov
lcall
cmp
dec
mov
int3
loope
or
das
mov
mov
dec
das
xlat
pop
and
xor
xchg
inc
int3
cwtl
sub
lods
outsl
mov
aas
out
xor
fnsave
sub
sbb
mov
dec
jo,pt
adc
and
or
sub
pushf
push
and
outsl
sbb
push
mov
in
clc
sub
fiaddl
aam
mov
add
dec
xchg
xchg
add
daa
mov
mov
cmp
icebp
add
push
and
sub
cmp
xchg
andb
hlt
and
mov
jl
jl
inc
add
inc
iret
xor
es
pop
mov
or
sub
or
scas
push
adc
sahf
mov
sub
cltd
xorb
and
push
jmp
xor
mov
pop
mov
mov
in
cmp
jno
sub
adc
dec
jb
enter
xlat
fs
cmp
xchg
mov
push
sub
dec
mov
dec
and
enter
rolb
mov
loop
jbe
scas
mov
scas
cld
int
inc
adc
cmpsb
pop
pop
aad
rcll
push
adc
sub
imul
ret
cmp
add
insb
mov
mov
or
xor
cmpsb
cltd
mov
hlt
push
addb
and
add
mov
fwait
lods
adc
sahf
jbe
sub
test
insb
subl
sahf
rclb
mov
mov
and
les
sar
lock
push
mov
insl
cmp
cmp
call
fdivr
icebp
in
test
clc
mov
clc
rclb
idivl
push
jae
fnstsw
pop
jp
jae
cwtl
add
stc
call
jp
and
mov
mov
ja
je
mov
sub
lods
jp
lret
fdivs
lods
aas
rcl
adc
inc
jb
rcr
lods
push
adc
push
or
pop
inc
dec
addr16
inc
imul
sub
jp
jae
jg
lods
add
sbbb
addl
cwtl
stos
sbb
or
pop
shlb
push
addr16
fdivrl
and
enter
mov
inc
and
mov
cmpsl
pushf
add
pop
xchg
add
jae
add
inc
add
es
add
sub
or
movsb
roll
fdivp
in
jo
imul
fcomi
cwtl
mov
repz
ljmp
add
add
mov
int
repnz
fs
icebp
shrb
xor
aad
pop
xor
jge
adc
mov
shrb
jg
icebp
push
and
jl,pt
les
cli
cld
add
jg
pop
sbb
hlt
enter
xor
mov
test
addl
sub
loop
or
lods
sbb
stos
xor
add
and
out
jnp
jno
in
mov
or
arpl
or
pop
sti
mov
ljmpw
push
fmulp
cmpsl
or
in
insb
cmp
andb
jae
xchg
inc
divl
shlb
fwait
daa
out
and
add
popf
dec
test
pop
shrl
leave
jo
jae
lds
ljmp
dec
rcrb
daa
mov
bound
shr
mov
cmp
incl
xchg
xor
pushf
xor
inc
sub
push
arpl
enter
add
push
fbstp
sbb
push
imul
sub
loop
dec
shr
xchg
cmp
shlb
add
inc
in
dec
repnz
lret
add
addr16
pop
dec
cmp
int3
sub
js
fbld
add
cmp
fs
test
push
mov
mov
cmp
dec
push
and
loope
gs
xchg
repnz
insb
add
push
push
mov
movsl
mov
fadds
jae
fldl
fwait
out
pop
mov
clc
dec
cmpb
or
push
add
roll
add
mov
scas
sbb
pop
xchg
iret
aas
inc
or
lea
sbb
jns
inc
mov
add
cmp
xchg
add
xor
dec
dec
and
aad
testb
mov
sub
jns
mov
add
insl
cmp
out
sub
pusha
ja
shr
jbe
and
mov
jecxz
jmp
add
cmpsl
pop
mov
cmp
or
mov
add
stos
and
orb
leave
nop
sysenter
sbb
sub
pop
or
xor
sub
sahf
sub
jae
sbb
dec
rorl
fimuls
addb
subl
in
scas
add
sub
and
mov
outsl
add
fimuls
jb
push
xchg
push
jl
dec
push
xor
or
cmp
imul
movsb
push
xor
cmp
add
shlb
and
cmp
pusha
add
adcb
dec
inc
add
es
add
inc
subl
dec
je
je
and
fadds
or
data16
mov
push
sbb
fisubrs
in
sub
es
jbe
mov
cmp
sub
add
add
and
pusha
mov
sbb
pop
fdiv
sbb
cmp
or
lahf
jecxz
push
or
add
and
cmp
dec
pusha
sub
stos
ljmp
out
jbe
or
inc
rorb
rcrl
inc
popf
push
inc
stos
jmp
addr16
test
and
dec
jb
jae
rolb
ja
or
xchg
cltd
repnz
insb
mov
js
adc
mov
lcall
pop
std
loop
xchg
cmp
push
inc
xor
add
add
xlat
in
xchg
sub
int
es
add
insl
sub
xchg
les
cmp
fcmove
js
sub
push
loope
xor
cs
cwtl
mov
adc
jne
and
pop
cmpsl
push
rolb
div
jnp
test
sub
sub
adc
int
jmp
add
mov
and
loope
mov
fldenv
sbb
mov
fdivrl
jle
xor
scas
mov
pop
push
inc
add
aad
loopne
mov
xchg
adc
mov
push
test
jecxz
cwtl
fsubrs
orb
push
mov
cmp
cltd
xor
cwtl
mov
sarl
ljmp
fidivs
add
mov
add
mov
cmp
fiaddl
addr16
push
dec
das
mov
lds
es
lods
das
bswap
inc
sub
into
enter
out
movl
push
inc
add
outsl
lcall
mov
cmp
cmp
shlb
xor
mov
xor
sub
es
mov
adc
call
xor
sub
dec
addb
cmp
stos
test
adcl
push
mov
cmp
inc
fildl
adc
jae
add
je
out
or
xchg
pusha
stc
int
mov
ret
inc
int3
push
incl
les
clc
fadds
push
outsl
push
jg
sbb
dec
scas
aas
push
cmp
and
adcb
jns
push
sbb
ds
mov
dec
add
add
pop
xchg
jns
push
mov
or
test
jecxz
inc
fldenv
rcrl
jno
movsl
rcll
dec
inc
push
orb
pop
push
aam
jecxz
pusha
ljmp
push
int
cmp
sbb
andps
std
out
insb
scas
inc
pop
icebp
cmpsl
pop
xor
test
ret
push
add
rcrb
sbb
inc
psubd
aad
mov
cmp
mov
sub
add
mov
pop
adc
jle
xor
mov
xor
pop
pusha
jns
mov
xchg
jo
shlb
aas
mov
stos
aas
sar
bound
sub
dec
push
jbe
cmc
pop
bnd
ja
or
xor
addb
stos
rcrl
jne
add
les
xchg
inc
xchg
add
pop
ds
add
add
popf
jnp
pushf
mov
or
mov
cmpb
or
add
dec
sub
mov
fstpl
inc
sub
repz
test
les
inc
imul
jnp
inc
int3
aam
mov
lods
mov
sub
call
add
outsb
icebp
hlt
jge
loop
mov
ret
lcall
adc
push
adc
lea
cwtl
pop
popa
bound
rorb
and
adc
dec
adc
bound
xor
sbb
or
cltd
mov
std
mov
enter
dec
mov
pop
lock
dec
lahf
sub
bound
add
dec
sub
push
shl
pushl
popa
jb
mov
cmp
imul
mov
imulb
sub
jnp
fisubrl
mov
sti
mov
and
loopne
xor
mov
fwait
sbb
pop
pop
jo
pusha
pop
loope
les
out
aaa
dec
arpl
test
push
inc
mov
test
aam
xor
mov
int3
jl
cmp
sahf
pop
sub
std
dec
add
inc
fists
in
push
add
shlb
out
rol
sub
push
dec
mov
xor
adc
fisubl
or
add
movl
cmp
and
das
test
cld
mov
mov
sbb
push
ret
int
shl
rorl
xorb
mov
fisubrs
mov
shlb
or
fwait
nop
aas
jnp
sub
sti
xor
stc
cbtw
gs
inc
lahf
mov
cmp
adcb
push
arpl
cmc
inc
add
ljmp
add
cwtl
hlt
clc
sub
adc
sbb
lea
cmp
sbb
add
push
jns
add
int
add
inc
pop
add
push
loopne
or
es
add
popf
nop
add
add
xchg
jae
sbbb
dec
sub
sarl
sub
mov
sub
test
cs
cmp
dec
sbb
shrl
pusha
sub
and
add
jmp
int3
les
sbb
and
mov
dec
push
mov
sub
test
jmp
shl
inc
aad
orb
fcoms
add
sub
xor
vunpckhps
xchg
adc
or
iret
arpl
sub
or
inc
repnz
push
xchg
cmpsb
lretw
pop
movsl
mov
xor
sub
cmp
test
jne
mov
fisttps
sub
jnp
daa
mov
add
push
sub
xor
or
scas
lcall
cmp
sbb
cmc
push
jge
sti
enter
rorl
push
add
pusha
das
sbb
push
mov
jecxz
mov
pop
rorl
cmp
int
scas
jbe
sub
cmc
fsubs
push
cmp
test
xchg
sub
sbb
or
or
push
jl
mov
in
enter
cmpsl
mov
jecxz
push
push
inc
add
xor
push
push
jmp
shr
sub
pop
mov
jb
leave
jge
aad
jo
add
jp
popa
mov
pop
out
test
cmpsl
leave
push
add
das
dec
jae
shlb
mov
xchg
in
or
xchg
mov
flds
aas
sub
popf
jb
mov
xchg
or
cmp
add
sar
sahf
sub
push
mov
sub
testl
cld
cmp
pop
xor
in
mov
adc
sbb
fadd
cmpsb
outsb
out
or
push
add
mov
mov
loopne
inc
pop
pop
test
std
or
jbe
cmp
test
fucomi
lock
pop
push
mov
rolb
cmp
mov
fsubrs
cmp
add
push
push
dec
mov
leave
scas
dec
add
sub
jnp
push
outsl
mov
dec
mov
mov
testb
xchg
mov
dec
dec
call
push
into
cltd
hlt
add
cli
pushf
mov
push
rorb
test
andb
pop
xlat
sub
call
pop
gs
aas
arpl
mov
push
insl
jle
xchg
add
and
js
xchg
mov
cmp
sbb
jg
rorb
jae
lahf
cmp
pop
hlt
sub
push
outsl
fisubrl
int3
adc
pushf
sub
mov
mov
mov
mov
or
mov
add
mov
sub
pop
incb
fiaddl
test
popa
xor
fidivrl
sub
jno
and
cld
gs
and
jge
add
psllq
and
mov
xor
fbstp
sub
or
es
lea
out
mov
inc
inc
and
imul
subl
fwait
imul
dec
sub
add
sub
aam
lods
mov
add
stos
stos
in
in
xchg
enter
icebp
sub
xor
dec
jb
jb
push
vcvttps2dq
and
imul
mov
mov
fs
pop
sbb
pop
rcll
adc
inc
dec
add
sub
arpl
outsl
lahf
data16
pop
mov
mov
inc
cmp
adc
cmpsb
or
cmc
cmp
or
pop
xchg
data16
mov
xor
movsl
ficompl
orl
cs
icebp
push
jno
fisubrs
jb
push
and
leave
shlb
and
std
pop
cmp
adc
push
jl
sub
pop
adc
cmp
jecxz
sub
lds
cld
das
push
repnz
fists
inc
jmp
dec
repz
stos
leave
sub
jecxz
xchg
shrb
ret
rcrl
add
sub
out
insl
outsb
mov
xchg
sub
mov
sub
movsl
add
inc
pop
and
or
mov
xlat
roll
add
push
add
mov
and
pusha
add
je
pop
adc
xor
pop
jmp
cmp
jl,pt
push
cltd
mov
add
dec
icebp
xchg
leave
push
fs
or
push
fstps
int3
dec
jns
pop
dec
fiadds
popf
jp
add
push
leave
test
dec
jmp
xlat
fwait
dec
add
xchg
sahf
es
gs
jae
clc
das
hlt
out
cmp
cmp
or
xor
mov
fistpl
add
lcall
lock
cld
cli
and
ficoms
popf
rolb
mov
mov
shrb
or
lods
lret
push
cmpsb
in
cwtl
enter
xor
cld
mov
notb
pop
or
mov
adc
stos
xchg
sub
cmp
insl
scas
jg
xchg
jb
std
or
sti
xor
pop
es
outsb
cmp
sub
add
adc
adc
jge
add
mov
mov
mov
sub
and
mov
add
aas
jg
mov
dec
lret
xchg
pop
push
jecxz
dec
xchg
aad
in
xchg
add
sub
add
adc
cmp
mov
and
sub
fnstsw
adc
add
pushf
add
cmpsb
mov
cmp
sbb
mov
mov
cmpsb
mov
mov
loopne
lods
and
xchg
xchg
lret
mov
sub
and
jmp
pop
mov
xor
mov
xor
rolb
js
outsb
pusha
loop
sbb
adc
jbe
add
stos
mov
js
pop
push
insl
inc
add
nop
aam
cmpsl
sub
dec
sub
aam
jge
push
cli
cltd
popl
xchg
or
mov
push
lods
imul
int3
es
add
and
pusha
xchg
xchg
je
add
sarb
xchg
add
rcl
add
xchg
sbb
bswap
inc
jo
xorb
xor
enter
arpl
xchg
mov
add
shlb
mov
cmp
xchg
pusha
or
mul
lods
add
mov
int
pop
bound
add
in
stos
int3
sbb
pop
mov
ud2
arpl
add
out
and
xchg
jle
add
or
xor
xchg
aaa
addb
jle
shl
mov
aad
dec
mov
cwtl
imull
pushf
fdivrs
nop
dec
add
sub
in
adc
sub
sub
dec
and
and
and
adc
dec
xchg
xchg
mov
mov
subps
lret
push
scas
sub
add
out
add
bound
mov
test
jnp
xor
xchg
addl
xor
mov
mov
xor
in
adc
pop
in
jmp
xchg
sub
sbb
add
sbb
and
sarl
mov
mov
psrld
push
mov
adc
aam
scas
js
rcrb
or
cltd
adc
sub
mov
es
cmp
int3
inc
pop
hlt
xlat
and
mov
lahf
add
add
adc
push
inc
sbb
add
xchg
add
sbb
mov
fs
or
fiadds
stc
sub
test
push
pop
clc
xlat
mov
dec
bound
loope
sahf
pop
mov
add
das
cwtl
pusha
add
pop
dec
inc
mov
xor
test
xor
dec
add
sub
stos
sbb
push
daa
mov
add
xchg
jb
add
imul
cmp
push
pop
sbb
pop
sahf
push
sbb
fnstenv
mov
pop
orl
fcmovne
in
outsb
xchg
add
inc
xor
cmp
add
fucomi
lret
icebp
adc
mov
or
pop
sbb
xchg
inc
xchg
mov
cmp
sub
dec
fs
xchg
pop
mov
add
fisubrs
sub
loop
cli
pop
iret
add
jg
jp
mov
rcr
sub
mov
les
inc
pop
bound
orb
dec
add
mov
scas
inc
dec
popcnt
in
sbbl
sub
cmp
mov
jo
outsb
loop
mov
add
sub
pop
ss
cmp
popf
mov
cld
addr16
add
add
or
push
sbb
inc
inc
or
cltd
add
int
ds
sub
adc
cmpsb
leave
in
dec
add
into
or
js
add
mov
jg
push
cli
push
cmpsb
in
dec
mov
xchg
or
mov
les
mov
adc
pop
sub
mov
insb
add
push
push
and
sbb
or
hlt
or
jge
lock
mov
xor
sti
adc
das
decb
mov
mov
jbe
add
mov
movsl
pop
jmp
adc
test
insl
mov
xchg
lock
sbbl
subb
lods
dec
or
enter
xchg
movsb
cmp
add
xchg
add
mov
mov
cs
sub
insb
ljmp
rorb
les
mov
or
loop
lahf
dec
cmp
jno
out
add
js
jmp
sub
add
pop
jno
add
and
add
mov
inc
mov
and
in
cmp
enter
and
add
add
cmpsl
xor
jbe
movb
add
push
mov
sysexit
iret
and
sarl
fisttpl
cs
add
mov
cltd
cld
and
mov
mov
dec
clc
mov
add
push
jbe
sub
cltd
jnp
or
lcall
dec
jb
push
fwait
add
xchg
or
repz
adc
mov
mov
inc
testb
sub
add
sub
ljmp
adc
test
mov
aas
jae
sahf
sub
jns
dec
bts
mov
mov
mov
lock
sbb
imul
rorb
cmc
inc
mov
push
mov
or
xor
fistpl
cmp
cmp
repnz
loope
loope
add
adc
ja
dec
mov
rorb
call
add
xorl
aas
pusha
sub
cli
xlat
ljmp
jae
mov
push
sbb
daa
aaa
mov
aas
add
sub
lods
rorl
mov
movsb
sub
or
xor
sub
pop
inc
xchg
ret
add
ljmp
fs
rolb
mov
add
jb
cltd
add
lret
cmpl
cmpsb
mov
cmp
icebp
hlt
loopne
nop
add
nop
xorb
pop
pop
adc
sbb
add
mov
outsl
ret
mov
push
shll
mov
test
dec
mov
movsl
mov
rclb
push
add
ljmp
adc
or
mov
cmp
orb
sub
jmp
jo
js
sub
sub
mov
dec
inc
inc
loope
push
les
add
lock
shll
and
cwtl
fwait
pop
dec
add
iret
inc
pusha
and
jo
cs
mov
test
adc
sbb
cmp
cltd
mov
add
in
pop
leave
add
jle
cmp
add
clc
xor
rol
mov
pop
jo
mov
mov
clc
shrb
enter
adc
xorb
in
push
imul
push
mov
dec
movsl
sub
aam
pop
jb
into
push
mov
mov
cwtl
ss
adc
je
cs
sbb
jo
mov
push
xchg
mov
cmp
mov
clc
push
mov
inc
cmpsl
adc
inc
mov
rorl
xor
flds
and
add
or
add
ljmp
or
add
add
inc
mov
adc
push
daa
mov
loopne
fiadds
mov
insl
sbb
sub
xlat
das
ja
ret
loopne
mov
out
ficompl
std
add
jecxz
repnz
cwtl
add
orb
das
and
icebp
cwtl
push
dec
repz
cmp
lret
js
push
outsb
into
push
inc
jge
add
cmpsb
dec
icebp
xor
inc
jp
and
xor
jo
sbb
test
cwtl
inc
rorb
add
mov
or
mov
xchg
aam
dec
xor
add
cmp
insb
rcll
and
sti
add
dec
dec
add
cmp
inc
loope
adcl
pop
jl
test
testb
loope
xor
fistps
in
inc
or
rorb
cmc
movsl
or
jmp
jb
lods
add
ret
jnp
mov
inc
mov
jno
add
rorb
lods
in
sarl
in
dec
push
jp
add
pop
xor
ss
cmp
sbb
sub
push
jo
cli
pop
push
xchg
aas
imul
xchg
orl
add
add
push
jne
fs
popa
scas
imul
leave
movsl
add
push
mov
cld
dec
jns
int3
jo
inc
or
das
jmp
lfs
add
xlat
popf
xchg
lret
mov
cmp
ret
mov
xchg
inc
lods
mov
push
movsl
imul
add
ds
add
jno
cmp
mov
loopne
dec
push
shrb
ljmp
sbb
mov
sub
mov
push
add
out
or
mov
popa
sub
divl
and
push
mov
xchg
add
push
leave
mov
or
mov
xchg
mov
test
jne
and
cs
stos
cltd
cld
scas
fldcw
lcall
imul
popa
shll
mov
jmp
push
mov
and
add
pop
mov
and
pop
jle
lea
popa
inc
sub
std
pusha
mov
js
fsts
cmc
xchg
outsb
imul
adc
xor
lock
aaa
pop
mov
adc
mov
cmpsb
xchg
pop
inc
inc
fisubrs
dec
lahf
cmp
mov
ss
cvttps2pi
orb
aaa
ss
add
mov
sub
fst
sub
or
and
nop
xchg
aaa
pop
pop
shr
add
data16
adc
sbb
xor
adc
mov
xlat
test
mov
xchg
mov
aaa
xchg
dec
cmpsb
sub
fwait
jns
pusha
dec
and
add
mov
addr16
je
inc
xor
test
dec
add
test
lds
clc
add
bound
xchg
lods
rcll
jmp
mov
pop
push
jno
add
int
pop
xchg
sub
outsl
cmp
and
cltd
pop
add
in
add
leave
mov
add
lea
pushf
pop
xchg
add
cmpsl
adc
pop
jp
les
add
fldl
add
mov
test
and
mov
pop
outsb
iret
fwait
mov
push
push
ftst
clc
dec
and
les
sub
sbb
stc
outsl
xchg
xchg
add
mov
insb
sub
push
sub
pop
and
cmovs
add
push
sbb
es
es
lds
sub
rcl
adc
mov
iret
and
jns
adc
mov
xchg
ljmp
add
test
inc
add
mov
popf
pop
nop
aad
push
mov
incb
sub
mov
fcompl
and
cmp
mov
nop
sub
cmp
mov
loope
lock
jbe
xchg
test
test
add
xchg
xchg
out
and
jp
mov
test
push
jp
mov
sti
mov
test
faddl
sbb
sub
jge
adcl
cmp
cmpb
aaa
lods
dec
add
cmp
sub
sub
int3
mov
adc
mov
sbbl
and
out
jmp
push
xor
dec
sub
jo
add
xchg
jo
rorb
sarb
and
imull
jle
dec
repnz
hlt
or
inc
add
out
rolb
dec
popa
xor
je
mov
adc
arpl
xchg
loope
mov
mov
xchg
mov
flds
movsb
xchg
ljmp
call
sub
mov
cmpsl
push
jb
outsb
and
int3
mov
xchg
xlat
pushf
add
or
in
movsl
mov
test
or
mov
es
add
add
or
data16
loope
xchg
sbb
xchg
jl
stos
add
adcb
dec
inc
cmp
loope
cmp
mov
pop
loop
inc
ja
add
rorb
les
in
shlb
std
xchg
jl
xor
pop
mov
push
or
jb
add
jmp
popa
inc
ljmp
cs
xor
mov
or
test
imul
push
sub
les
push
xchg
lahf
and
stos
je
inc
mov
add
add
jmp
xor
pop
or
or
lea
push
call
rorb
daa
fsubrs
sub
out
repz
inc
pop
or
jge
sbb
into
mov
jae
mov
cmp
xor
movsl
push
lahf
push
xchg
stc
jno
loop
pop
call
arpl
mov
push
es
xchg
fimull
shl
pop
imull
test
mov
add
mov
clc
lock
pop
imul
insb
ret
shrb
xchg
and
ja
shrb
into
fidivs
dec
push
inc
imul
xchg
or
sub
fsubr
cmpb
xor
lcall
inc
adc
call
sub
jae
stos
fcmovb
mov
add
mov
fildl
mov
call
test
cwtl
sbb
jno
jl
sbb
fistpl
out
fdivrl
mov
adc
sub
js
mov
dec
enter
xor
xchg
ja
lea
movd
xor
xor
xchg
mov
aas
mov
cmpsl
bound
add
jns
daa
insb
push
pop
jbe
loope
lds
push
jae
sub
xchg
pop
lahf
mov
aam
sahf
fidivrl
lret
sub
pop
sti
loop
shr
addl
push
xchg
fldt
shll
hlt
push
fistpll
dec
and
pop
mov
pusha
jnp
push
fnsave
daa
sub
push
jecxz
test
cwtl
lcall
das
rcll
push
add
dec
or
sbbl
push
shll
adc
adcl
shlb
roll
mov
leave
sub
lock
enter
inc
aas
pop
push
fadds
mov
stos
add
add
mov
popf
mov
mov
adcb
add
testl
cmp
sbb
ss
insl
sub
test
and
push
test
clc
sub
jg
mov
mov
bound
or
push
push
mov
aam
mov
push
std
push
push
xor
out
and
xchg
xor
mov
mov
lahf
mov
push
incl
orb
pop
loopne,pt
adc
add
inc
addr16
inc
adc
psrlw
xor
in
out
mov
or
outsb
sub
imul
inc
and
lea
inc
sbb
mov
pop
cwtl
out
rcr
pusha
add
fcomp
sbb
aam
push
mov
jmp
repnz
movsb
das
xchg
xor
add
inc
test
or
sti
mov
cmpsb
or
and
scas
jno
mov
lods
js
je
shrb
test
pop
mov
xor
push
enter
add
mov
jne
das
cmpsb
jbe
inc
xchg
mov
mov
in
int
das
lods
es
mov
out
xor
data16
xchg
pop
sub
cmpsl
js
int
pop
sbb
cmp
mov
popf
or
push
mov
sbbb
fisubs
and
ljmp
inc
out
mov
jge
jo
outsb
push
add
repnz
xorb
jg
mov
dec
pushf
scas
int3
sti
jle
push
movsl
pop
pop
or
outsb
out
mov
jae
in
popf
mov
mov
aam
inc
sub
ret
rcrb
into
mov
imul
mov
pushf
lcall
pusha
xchg
imul
or
sbbl
and
mov
sbb
lods
xor
into
push
and
ja
add
add
or
add
iret
pop
jnp
punpckhwd
into
out
insb
ja
jge
add
int3
cmp
inc
les
sub
add
push
pop
pusha
jecxz
testb
sbb
mov
fdivrs
loope
mov
sbb
cmc
add
dec
dec
jp
addl
mov
aam
stos
mov
out
dec
sbb
cwtl
push
sub
cmp
ret
ds
lods
rcr
loopne
xor
xor
pop
rorb
mov
sbb
add
jb
enter
add
inc
ja
mov
filds
mov
pushf
add
push
enter
mov
cs
and
sub
inc
shrl
xchg
imul
push
fnstsw
and
cmp
xor
xor
mov
insl
sbb
test
clc
roll
push
and
aaa
xchg
mov
push
das
popa
jbe
nop
pop
in
xor
mov
xor
popl
and
std
repz
lret
sti
mov
daa
clc
push
jns
jae
and
rolb
loop
pop
mov
add
test
cmp
int3
loop
push
cwtl
pop
mov
push
stos
add
outsl
push
outsb
sbb
dec
sbb
or
aad
lcall
sub
dec
cmp
clc
jl
sets
adc
pop
nop
aad
mov
cmc
xor
call
and
adc
fdiv
scas
shll
dec
cmpl
pop
out
sub
adc
les
setnp
bound
sub
gs
inc
jns
dec
lock
jae
xchg
int
pop
cltd
or
cld
dec
js
ljmp
fiadds
loope
mov
adc
mov
loop
push
or
shl
dec
test
sub
mov
jp
cmp
dec
and
rolb
inc
pop
enter
mov
arpl
add
adc
subb
pushf
out
subb
call
dec
inc
cmp
mov
cs
aas
mov
fdivr
out
and
fdivrl
out
xchg
lea
jl
lock
sub
push
mov
addb
adc
roll
fisttpll
mul
ja
cmp
pop
push
loopne
hlt
jg
sub
fnstsw
cmpl
fsubrl
mov
lds
mov
mov
add
nop
pop
aad
flds
mov
stos
stc
mov
sub
cmp
in
mov
jno
push
jmp
idivl
inc
sbb
xor
sarl
lret
mov
jle,pn
jno
xor
sub
push
pop
insl
in
sub
test
aad
push
sbb
pusha
pop
add
mov
cmc
lock
in
dec
stos
enter
xor
pop
xor
mov
sbb
inc
in
mov
mov
js
call
stc
or
pop
push
out
add
dec
mov
stos
cmc
andl
mov
jmp
or
imul
adc
fs
mov
add
jge
sbb
js
mov
sahf
or
out
or
das
jl
pop
test
movsb
mov
rorb
lret
insl
add
aaa
testb
out
sbb
popa
xchg
ret
popf
push
sub
les
aaa
jne
mov
jecxz
mov
sub
pop
ficompl
scas
sub
ret
add
inc
in
mov
mov
test
mov
push
lds
mov
enter
or
aam
xchg
and
push
repnz
arpl
xor
adc
xchg
pop
std
pop
cmp
decb
bound
xor
sbb
xor
ret
fdivp
xchg
test
sub
adc
imul
cs
jo
cmp
notl
fdivr
addl
std
fcmovu
out
stos
aas
fadds
sti
daa
add
jno
jp
jns
push
dec
nop
fildl
and
enter
pushf
mov
test
repnz
sub
sub
push
rclb
daa
in
add
mov
mov
inc
mov
push
pop
mov
adc
add
addl
int
inc
loopne
lret
sbb
fbstp
sbb
mov
rcll
or
sub
bound
jae
hlt
hlt
add
and
clc
lods
std
fucomp
adc
xchg
jnp
adc
pop
and
inc
xchg
int
add
fsubp
out
pop
sub
cmp
pop
pop
sbb
or
sbb
cltd
leave
sub
shrl
imul
cmpsb
test
sbb
or
xchg
mov
loopne
add
sub
lret
xor
es
add
push
adc
mov
outsb
mov
xchg
imul
or
pop
adc
ja
adc
js
sti
loopne
repnz
xchg
and
jb
andb
pop
mov
iret
adcl
mov
mov
sti
mov
mov
sub
sbb
sbb
xchg
add
push
fcomp
dec
popf
lods
loopne
sub
pop
outsl
movsl
lods
lods
scas
adc
mov
jno
roll
sub
push
shll
addl
pop
or
jae
les
notl
mov
push
push
or
mov
sbb
mov
pop
repz
push
xor
test
add
add
adc
fiaddl
pop
jbe
inc
dec
and
dec
sub
je
adc
add
inc
cmp
add
daa
dec
gs
mov
cltd
daa
pop
sub
pop
into
insl
xchg
mov
mov
xor
inc
push
add
out
icebp
out
or
xchg
outsb
push
adc
in
iret
pop
jmp
and
popa
ret
pusha
fidivrl
add
icebp
inc
std
inc
in
jo
rcrb
lods
testb
sub
jmp
pop
test
jno
mov
rclb
add
add
aam
aam
jmp
fidivrs
inc
testb
sahf
pop
aad
jns
cmp
mov
sub
daa
inc
push
mov
clc
fsubrl
mov
xor
push
sub
and
js
outsl
pop
cmp
xor
popf
dec
and
and
in
add
into
je
dec
xchg
cltd
ret
fdivrl
data16
lahf
add
dec
dec
test
sub
pop
jmp
sub
lds
testb
test
aam
or
rolb
inc
mov
xor
pop
outsl
imul
cwtl
push
mov
int
cmp
in
xchg
pushf
sub
adc
inc
sbb
jecxz
jmp
add
mov
add
mov
add
subl
rorl
xor
pop
fstps
dec
push
adc
int3
leave
xor
fnstenv
lret
xchg
lea
aas
cltd
sub
testl
xchg
lds
pop
push
sub
xor
pop
enter
dec
insl
mov
mov
mov
dec
lods
je
mov
jns
sub
add
cld
dec
xchg
ss
pop
pop
pop
fstpt
mov
pop
xor
sub
data16
add
lods
hlt
sti
mov
and
sub
fwait
cmp
sbb
mov
mov
push
jecxz
add
and
mov
dec
mov
add
pop
ljmp
aas
dec
push
sub
cs
rorl
push
loope
mov
xor
dec
mov
leave
push
add
mov
nop
dec
int
mov
jns
loopne
in
aam
jno
and
add
js
or
stc
scas
mov
sub
jbe
mov
or
mov
xchg
mov
fisubl
add
cltd
je
sbb
xchg
add
adc
add
popf
lret
pop
ror
mov
ret
add
shrb
loope
add
in
ret
andl
mov
lds
jns
jo
add
cltd
stos
loopne
cmp
adc
dec
in
cmpsl
inc
cmp
shrl
cmpsl
cmp
jno
aaa
frstor
jmp
mov
jbe
aaa
dec
add
adcb
and
or
pop
add
je
mulb
addr16
ret
daa
cmp
xchg
inc
mov
fdivrl
fwait
push
testl
inc
add
mov
cmpsl
out
shl
adc
popf
shlb
mov
in
iret
lahf
mov
fdivl
test
andb
test
dec
xchg
mov
pop
and
push
rcrb
ret
add
xchg
adcb
fisubl
mov
xchg
addb
fcomip
mov
cmpsl
add
mov
pop
ljmp
push
cmp
fimuls
cli
jl
xor
sldt
stos
insb
fmuls
icebp
ss
imul
sub
cmp
xchg
addr16
and
push
pop
xchg
sub
dec
imul
mov
sbb
mov
psubd
orl
and
inc
fisttps
push
pushf
mov
jae
test
xor
dec
jge
push
mov
int3
sbb
fs
push
mov
adc
jle
mov
into
movsl
cmp
mov
lret
imul
fisttpl
sub
push
and
dec
lods
add
jg
in
aaa
mov
je
in
pop
push
test
shrb
ret
xchg
loopne
xchg
lods
xlat
push
sub
xchg
fnsave
stos
jae
sub
cmp
mov
movsb
mov
nop
mov
test
andb
filds
or
push
fs
clc
inc
jno
jb
sub
jnp
sarl
sbb
push
sbbl
sbb
in
add
add
mov
add
fcompl
movsl
fisubrs
push
jl
jo
lret
adc
push
mov
lds
pusha
push
mov
push
loop
js
mov
in
out
push
lods
jns
and
in
pop
sbb
xchg
dec
sbb
mov
clc
stos
jp
mov
add
sahf
mov
cmpsb
sub
mov
sub
lods
mov
dec
js
and
out
xorb
jp
xor
lods
push
cmp
pop
sbb
push
leave
sub
xchg
lds
shrb
add
mov
push
dec
mov
sbb
dec
mov
cmp
call
fimuls
dec
dec
mov
pop
idivb
add
test
or
daa
or
mov
mov
stos
nop
movsb
sub
mov
sub
inc
push
clc
mov
loope
std
data16
add
sbb
outsl
repnz
clc
adc
mov
mov
and
pxor
add
bound
add
mov
cli
inc
add
push
dec
out
add
mov
mov
sub
in
xlat
adc
je
outsb
pusha
or
inc
add
icebp
inc
dec
jbe
cmp
add
sahf
and
in
mov
jno
subb
mov
inc
add
nop
ret
je
cmpsl
mov
into
pop
pop
xchg
mov
bound
cmp
jecxz
cmp
or
in
incl
or
dec
or
fisttpl
cmp
dec
sub
dec
lahf
fisttpl
xor
xor
std
or
dec
inc
decl
mov
fdivr
test
or
neg
cmp
pop
ret
sbb
out
push
xchg
ds
mov
ror
repz
lock
cmc
sti
idivl
insb
sbb
cmc
sbb
xchg
clc
fiaddl
pop
xor
add
call
cltd
push
add
add
dec
mov
je
stos
insb
add
jae
ret
int
jl
mov
out
inc
testb
sub
cmp
xchg
add
in
icebp
pop
test
sahf
and
sbb
lret
xchg
fcoml
push
pop
lock
roll
pop
add
mov
aas
xchg
sub
jne
pusha
adc
mov
sub
scas
outsl
mov
mov
cwtl
lock
push
and
add
add
fisttps
jno
mov
mov
sarb
loopne
and
add
jno
push
pop
das
sub
ja
enter
test
fwait
mov
sub
adcl
iret
orb
js
sub
stc
add
xlat
cmc
test
fsts
mov
inc
or
add
popa
stos
add
testb
add
sbb
incb
lret
lds
arpl
pop
aam
add
popf
stos
xchg
mov
movsb
mov
mov
adc
inc
sub
inc
push
inc
jle
jo
movl
jbe
adc
scas
stos
enter
mov
xchg
cmp
xchg
push
cld
add
in
push
xchg
lds
adc
cli
je
jne
push
mulb
mov
adc
in
mov
push
jo
add
loop
fstpl
and
aam
adc
popa
mov
mov
das
insl
mov
jmp
inc
pop
fldl
mov
xchg
pop
ja
mov
scas
scas
sub
jns
int
fnsave
adc
pop
xchg
out
adc
adc
sbb
mov
in
mov
scas
adc
mov
sbb
or
dec
mov
fisttpl
fimull
sub
jg
jge
inc
mov
add
clc
ret
repnz
pop
add
pushf
nop
fisubl
or
mov
jl
clc
or
add
sub
mov
rcrl
sub
mov
scas
dec
out
mov
sbb
push
iret
or
shlb
jns
or
fcomps
push
add
out
enter
and
das
dec
mov
fs
mov
add
inc
mov
mov
in
aas
sub
data16
inc
sbbb
das
mov
cmp
sub
or
sub
icebp
in
loop
cwtl
add
xchg
or
pusha
sbb
insl
leave
mov
add
shlb
mov
orb
cmp
ljmp
cmc
add
add
pop
lods
adc
mov
and
sub
mov
sti
push
add
fwait
cmp
add
add
and
hlt
sahf
dec
pop
mov
scas
xchg
mov
ljmp
adc
jle
push
jle
mov
movsb
jno
pop
adc
mov
add
popf
fucomip
and
dec
sbb
jo
jo
lret
insb
fs
gs
jmp
push
adc
pop
imul
out
ss
out
mov
cs
pop
push
lret
push
mull
add
push
ljmp
nop
and
jecxz
push
outsb
lcall
xorl
insl
imull
push
adc
jg
imul
fildl
push
inc
inc
sbb
and
mov
xchg
imul
mov
sub
fsubs
inc
fbstp
test
push
jmp
outsl
enter
cmc
push
add
push
or
cmp
ds
adc
xchg
stos
out
xorl
sub
in
and
or
dec
in
out
insl
dec
cmp
or
pop
add
cmp
cmp
or
mov
lsl
movl
mov
lcall
addb
xor
fbld
mov
add
push
push
jne
data16
pop
test
js
jbe
add
sahf
mov
popa
jnp
clc
lods
fidivrl
push
test
sahf
sub
mov
mov
xchg
mov
sub
ficoms
cmp
cli
xor
push
sbb
fdivr
aaa
add
add
add
lods
xchg
fidivrl
xchg
or
inc
xor
shll
mov
sbb
cmc
test
and
cmc
rcrb
add
mov
dec
xor
add
push
sbb
dec
add
aam
pop
and
push
add
cltd
in
sbb
xor
std
hlt
add
inc
in
lds
mov
mov
ds
in
aam
lods
lret
mov
xchg
sbb
sub
xchg
mov
mov
push
cs
sub
pushf
jbe
adc
nop
repz
daa
ret
imul
das
xchg
cmp
loope
sub
ret
movsl
add
cmpsb
lret
pop
and
and
push
mov
mov
adc
mov
sub
jb
xchg
jo
inc
sbb
int3
loopne
adc
lea
or
push
fisttpl
adc
mov
mov
or
inc
add
rclb
adc
pop
cmp
frstor
add
jl
cli
cltd
mulb
and
push
int
fists
dec
leave
notb
imulb
lret
add
ljmp
adc
pop
frstor
add
add
push
mov
sub
sti
aam
test
jbe
cmpsb
sub
aas
lock
add
sub
sub
or
cmc
fldt
mov
sbb
pop
and
icebp
add
push
jg
xor
add
sti
popa
sbb
adc
cmpsl
xchg
push
ss
add
and
dec
lahf
sub
pop
mov
fmuls
nop
xchg
add
aam
in
sub
sbb
xchg
pop
xchg
scas
mov
out
test
add
lods
cld
mov
add
out
xchg
sub
push
insb
mov
popf
lds
pop
ja
icebp
xchg
decl
rorb
sbb
nop
outsb
js
sub
sub
push
add
fldenv
cmp
sbb
xchg
fld
das
in
mov
mov
stc
orb
sbb
iret
mov
xchg
and
jl
xchg
adc
fdivs
sarb
mov
sbb
add
std
mov
mov
movsl
jp
push
jecxz
fsubrs
je
sarb
mov
jg
ljmp
or
sbb
aad
mov
sub
into
and
push
adc
call
add
adcb
xchg
outsb
fisttpl
cmpsl
testl
mov
lods
xchg
bound
and
inc
xchg
dec
enter
add
lods
into
pop
addr16
push
mov
cmp
add
js
outsl
mov
mov
add
dec
inc
pusha
stos
repz
mov
lcall
sbb
jg
icebp
adc
rclb
nop
sbb
psrad
mov
add
in
testb
jg
movsl
addb
mov
daa
or
out
mov
jbe
leave
add
xchg
sub
inc
cmp
enter
add
ja
dec
std
ss
scas
mov
lret
repz
into
lds
mov
push
lds
nop
push
and
adc
out
cwtl
push
iretw
mov
mov
adc
mov
sub
add
xor
mov
lcall
cli
rcrb
mov
call
daa
cmp
mov
push
push
mov
push
arpl
inc
ret
adc
or
and
cmc
and
push
lea
inc
mov
rcrb
fnsave
adc
sub
addr16
jb
push
jae
pop
lcall
les
mov
call
cmc
mov
xor
sbb
idivl
pop
rcl
dec
outsb
mov
add
xor
inc
repnz
icebp
rol
cmp
and
notl
xchg
xlat
sub
cmp
mov
or
xchg
fstl
and
in
rep
loopne
clc
mov
stos
mov
jmp
shrb
sti
das
xor
add
mov
xchg
and
sub
fsts
cmc
int3
sbb
and
xchg
cld
ret
sub
add
andb
inc
cmpl
mov
add
movd
dec
hlt
mov
adc
les
jbe
sub
ljmp
add
add
jae
pop
and
out
push
sahf
jne
xchg
inc
ja
test
scas
movsb
mov
nop
int
test
jg
ret
push
add
mov
into
mov
cmp
add
rcrl
scas
add
mov
mov
fs
or
push
add
mov
sub
inc
pop
ret
insl
imul
sbb
jo
add
mov
fnstcw
sub
ja
inc
adc
fiaddl
or
cmovs
test
hlt
lahf
scas
testb
sub
pop
and
lcall
adc
inc
mov
mov
add
pop
orb
fs
and
nop
popa
sahf
cld
mov
mov
ja
add
iret
cmp
cld
stc
inc
repz
jle
cmp
int
add
jbe
clc
pop
dec
adc
pushf
and
dec
in
add
scas
sub
adc
jp
dec
pushf
sti
imul
lret
cmc
lret
adc
xchg
jp
std
lock
add
cmp
lret
add
imul
into
adc
mov
in
out
xchg
dec
jg
mov
xor
aas
incl
jae
push
aam
or
dec
inc
xor
je
or
ret
hlt
in
mov
pop
popa
fdivrs
dec
fadds
inc
movsb
add
mov
shrl
ret
push
int3
hlt
imul
repnz
lret
shlb
aad
dec
enter
ljmp
push
cmovs
mov
fidivl
into
add
out
imul
adc
sub
shrb
add
xor
popf
clc
sahf
int
sub
cld
mov
jmp
sub
jecxz
dec
add
aad
rolb
push
loope
or
xchg
and
cmp
in
or
pop
rclb
adc
in
cmp
jl
jecxz
movsb
cld
insl
mov
jbe
mov
js
call
mov
add
lret
in
inc
xor
jp
insb
out
xor
sbb
lahf
push
les
sbb
pop
imul
inc
dec
mov
push
adc
xchg
add
mov
add
loop
aas
pusha
and
mov
icebp
je
fld
sub
xor
ret
in
shl
popa
insb
cmovns
stos
add
fidivrl
mov
mov
jbe
sub
dec
lock
add
sub
xor
cmp
cmp
push
inc
les
or
addr16
test
inc
sbb
jno
add
lahf
mov
loopne
pop
out
or
jmp
xor
xchg
push
mov
rcrb
pop
cmp
leave
or
lds
mov
xchg
inc
dec
nop
in
ret
jae
cmp
jmp
ficoml
outsl
or
mov
mov
into
ds
mov
push
fwait
imul
cmp
cmp
mov
adc
rorb
xor
xchg
add
or
cmp
mov
dec
cltd
imul
mov
sub
ret
add
cmp
sbb
sub
jl
mov
nop
stos
cmp
iret
mov
pop
push
fstpl
es
inc
add
pop
xchg
mov
xor
dec
add
stos
mov
jge
sub
sbb
outsl
test
mov
cmpsl
jmp
cli
iret
dec
mov
inc
mov
mov
push
sbb
cmpb
andl
nop
shrd
pop
xchg
mov
call
pop
add
stos
imul
add
mov
jne
mov
js
or
lods
jle
or
fildl
push
cmp
in
inc
dec
lea
mulb
idivl
imulb
mov
ret
inc
xchg
add
push
jo
loop
imul
enter
dec
hlt
add
or
push
and
lahf
xchg
js
pop
xchg
sbb
call
sub
repz
sbb
fidivrl
and
outsb
ja
mul
mov
fdivr
out
fs
mov
incb
sub
cmpsb
inc
daa
jmp
out
mov
mov
mov
aam
sti
add
push
cmc
add
movsb
scas
in
xchg
mov
jle
mov
add
adc
stos
fdivrs
pop
int3
inc
add
rcll
adc
cmpl
jge
jnp
bswap
rcll
stc
cs
loope
out
clc
sbb
jno
add
xchg
or
or
sub
fistps
les
mov
mov
add
push
pushf
inc
inc
test
call
jb
mov
xchg
inc
ja
and
mov
lods
sub
add
mov
add
andb
mov
and
mov
cmp
out
mov
xor
mov
imul
push
es
mov
jl
orb
sub
push
mov
nop
add
int
xor
or
add
push
in
inc
xchg
mov
mov
xor
or
cli
xchg
add
fstl
jbe
iret
xchg
dec
or
clc
or
cmp
pop
xor
dec
mov
and
and
neg
inc
addr16
je
and
cmp
test
testb
sub
sub
sub
push
mov
add
adc
sahf
insl
cli
mov
out
xor
sbb
adcl
mov
repz
inc
add
mov
inc
sarb
ja
mov
xor
add
sub
cld
dec
mov
insb
sbbl
mov
jbe
shrb
sub
stc
rolb
xor
mov
or
adc
push
fildll
add
movsl
sbb
in
sub
sbbb
aam
movsb
imul
and
bound
imul
addb
sbb
rsm
sub
xchg
jno
mov
out
inc
ja
je
fs
push
add
pop
movsb
jns
out
lret
push
in
xchg
rorb
fildl
jmp
lcall
jnp
dec
clc
outsl
xor
mov
imul
push
dec
xor
dec
setb
jle
push
and
adc
lret
rorb
push
sti
jl
dec
mov
jns
adc
sub
and
sub
mov
ficompl
fisttpl
lea
pop
inc
add
mov
push
lods
add
fs
js
push
in
test
xor
ljmp
rcr
fisubrl
je
rcrl
sbb
push
fwait
sbbb
push
adc
call
jo
or
lret
push
sub
insb
cli
sbb
addr16
bnd
xchg
clc
xor
jge
xchg
mov
mov
xchg
in
mov
mov
mov
inc
or
ret
cmp
jnp
es
cmp
sub
repnz
movsl
daa
inc
addr16
stos
adc
adc
mov
aam
mov
ja
ljmp
imull
adc
nop
mov
cmp
arpl
sub
movsb
push
pop
pop
push
xor
sbb
push
lret
push
sbb
pusha
pop
mov
mov
mov
lds
push
sbb
es
int
xor
jo
and
mov
cmpsl
lret
mov
xlat
xlat
sub
sub
or
sbb
sub
cmp
test
pop
loopne
stos
jl
imulb
jo
int
fsubrl
sbb
movsl
daa
push
mov
xlat
fnstenv
or
pop
insb
mov
xor
shl
ss
pusha
or
add
sub
fisubrl
add
push
imul
addb
sub
pop
shl
push
inc
push
cmp
xchg
jb
add
xchg
add
lret
je
ret
push
xor
adc
dec
in
add
dec
add
xor
adc
sub
sti
inc
pop
cmp
int3
xchg
add
cli
push
inc
ss
adc
stos
xchg
push
les
dec
bound
into
cld
add
push
dec
mov
cmp
mov
je
dec
jb
mov
sub
add
test
ficomps
cmp
sub
clc
push
push
fidivs
adc
xorb
int3
aad
outsl
or
jb
mov
cs
sub
in
mov
adc
pop
adc
aad
dec
fisubs
cmp
adc
mov
xor
sti
das
pusha
mov
mulb
pop
lcall
lcall
in
movsb
sub
hlt
or
pop
adc
mov
jb
push
and
inc
sub
insb
jle
clc
pop
lods
lret
mov
test
inc
in
dec
cmp
testl
push
xchg
fnsave
mov
or
dec
push
clc
ljmp
fnsave
hlt
adc
insb
sti
imul
sti
push
cmpsb
aaa
mov
jmp
sub
pop
and
repnz
xchg
call
push
in
cmp
xchg
test
mov
ja
ja
and
push
xor
cmpb
or
inc
sbb
aas
sub
mov
mov
mov
dec
sub
lods
testb
mov
adc
adc
xchg
pop
push
ret
dec
pop
test
add
add
xchg
out
add
imul
pop
xchg
into
arpl
sub
loopne
add
mov
mov
mov
pop
outsl
es
es
add
and
outsl
in
mov
fdivrs
jmp
enter
add
xor
mov
das
mov
lds
dec
push
ss
xor
sbb
mov
imul
lods
sub
fwait
add
in
xchg
jne
hlt
sbbl
pusha
ss
dec
mov
sbb
shrl
fisubl
add
in
jmp
nop
mov
mov
mov
or
aam
adc
lahf
dec
cmp
arpl
mov
ficomps
sar
in
adc
inc
add
lds
loop
push
das
clc
out
shr
or
sbb
sub
test
hlt
sbb
sbb
and
add
aas
stos
les
mov
popa
cli
lea
mov
cmp
lret
xchg
aas
pop
or
add
mov
pop
lock
js
dec
sbb
cltd
pop
add
popf
sbb
test
jl
jnp
aam
push
cmpsb
pop
in
das
xrelease
add
sahf
add
jle
xor
add
xchg
js
xor
lock
mov
lds
add
stc
xor
pop
test
lock
imul
lahf
mov
jnp
fwait
mov
push
loope
iret
imul
pop
mov
add
mov
mov
add
jmp
call
shlb
orl
mov
and
lret
add
sahf
cwtl
jge
es
and
in
std
pop
mov
jp
mov
fcoms
dec
pushf
fwait
mov
icebp
jae
test
push
xlat
jnp
das
loopne
in
add
dec
aas
lret
aas
xchg
insb
add
int
adc
cmpsb
sub
aad
or
xor
sub
fmuls
out
add
aad
sbbb
mov
outsb
xchg
data16
mov
fst
in
xchg
xor
and
cwtl
push
les
dec
xchg
fldenv
pop
sub
je
sbb
jg
shlb
mov
dec
sar
xor
mov
xor
data16
bound
cltd
add
jge
mov
jg
call
add
adc
push
mov
add
sahf
xor
cmpsb
add
sub
mov
orb
add
into
cmp
ja
jmp
push
outsl
mov
iret
xchg
jp
adc
testl
sahf
loope
xchg
ljmp
outsl
or
sbb
pushf
idiv
or
jmp
mov
and
jp
or
cmp
verr
mov
add
test
clc
inc
mov
sub
gs
adcl
iret
ret
inc
xchg
popa
arpl
cmpsl
sub
xchg
jae
roll
mov
shrb
jl
jnp
in
fwait
mov
bound
pop
outsb
jmp
xchg
xchg
pop
add
stc
mov
rcrl
cmpsb
sbb
data16
jno
cmp
pop
and
or
sarl
add
sub
jl
adc
add
out
daa
hlt
pop
test
mov
scas
cmp
xlat
push
repnz
in
psubq
sahf
dec
frstor
add
cmp
adc
dec
gs
add
roll
cmp
dec
sub
adc
outsb
insb
add
mov
jmp
cmp
pop
add
jnp
stc
call
subb
dec
xchg
cld
add
and
loopne
dec
fidivl
cs
iret
dec
in
mov
dec
and
andb
mov
cli
xchg
loope
inc
xchg
lds
pop
jo
sbb
pusha
sahf
sbb
in
sub
mov
ss
add
mov
and
es
loope
cmc
pop
subps
adc
sub
imul
sub
xlat
add
cmpsb
sbb
inc
mov
add
xchg
jmp
dec
jae
popf
push
sub
sub
das
add
pusha
movsl
xchg
push
add
and
loop
cli
push
xchg
jne
dec
push
movsl
mov
rcrb
mov
pop
add
sub
in
push
push
or
imul
xchg
loope
lods
iret
mov
ret
outsb
mov
pop
stc
add
clc
dec
rorb
mov
jmp
lret
xor
mov
sub
pop
mov
adc
popl
mov
cld
cltd
jae
mov
pop
pop
imul
lcall
xor
lock
mov
jbe
push
dec
add
or
lds
lds
data16
or
push
cmp
adc
push
pop
mov
mov
into
mov
fbld
adc
orb
pop
bswap
xchg
rcrb
lahf
mov
clc
or
in
pushf
je
sbb
jns
je
fsubl
or
mov
adc
or
cmpsl
push
stos
imul
bound
call
aad
xor
test
test
fiaddl
jo
xchg
scas
mov
into
add
push
inc
mov
comiss
cwtl
jbe
mov
jns
ja
cmpsl
dec
mov
sbb
mov
xchg
popf
mov
arpl
sub
outsb
sbb
out
sub
jnp
add
or
rcrl
or
cmpsb
mov
call
add
push
jno
cld
sbb
and
cvtdq2ps
aad
psubb
push
push
mov
stos
cmp
sub
test
je
fstl
mov
adc
cwtl
sahf
sbb
scas
sub
pop
push
lret
or
bound
out
jno
xor
sub
sbb
adc
cmp
cwtl
cmpsl
in
scas
ret
xchg
add
out
sahf
mull
add
jno
jl
leave
loopne
fwait
mov
mov
sbb
push
jb
sub
orb
ja
cld
jbe
js
stos
fadd
dec
mov
bound
jno
scas
repz
int
xchg
jge
jl
mov
sbb
cmp
insb
mov
push
inc
negl
add
ds
pop
lcall
jae
es
arpl
outsl
xchg
lret
div
add
lcall
mov
xchg
dec
lock
popf
stos
xchg
mov
or
add
mov
mov
int3
cmp
sub
jmp
xchg
paddsb
inc
cwtl
xchg
xchg
sbb
jl
pop
pop
push
add
adcb
sbb
push
dec
add
add
icebp
jp
sub
call
pop
lds
stos
stc
imul
or
add
add
cmpsb
fwait
cmc
mov
test
sbb
and
xor
push
mov
ret
dec
jae
fimull
mov
sbb
repnz
inc
add
out
cmp
idivb
mov
push
mov
pop
mov
push
das
fwait
xor
popw
add
mov
mov
jle
es
mov
mov
adc
sub
xchg
sbb
mov
jns
sbbb
sahf
sub
cmpl
js
sbb
adc
xor
jmp
adc
cmp
call
mov
sub
add
sbb
xchg
and
pandn
dec
ret
inc
in
push
add
out
or
push
icebp
fldenv
mov
jnp
and
mov
shlb
arpl
mov
pop
add
xor
dec
ss
es
rclb
lods
mov
mov
enter
orl
call
mov
pop
mov
das
sub
mov
icebp
mov
add
and
loopne
add
mov
iret
mov
pop
aam
mov
pop
mov
add
dec
mov
add
insb
fwait
lret
add
sub
fld
dec
add
hlt
or
dec
fidivrl
mov
mov
pop
inc
loop
es
sub
sbb
mov
xor
mov
repz
inc
pop
fstps
xchg
or
arpl
add
adc
mov
sbb
fbld
in
das
std
dec
mov
les
daa
mov
xchg
cmpsb
sub
shlb
ja
enter
or
fldlg2
cmp
adc
mov
push
inc
call
test
lret
jb
xadd
cmp
dec
mov
loopne
xchg
ja
pop
xchg
cmp
pop
lods
sub
aam
fildll
mov
out
push
push
push
movnti
cld
and
add
dec
mov
daa
pop
sub
mov
adc
ljmp
gs
xor
ret
dec
bound
ss
fsubl
push
inc
test
sbb
xchg
loopne,pt
mov
add
push
push
adc
data16
mov
jno
sarb
bound
in
push
push
test
loope
sub
icebp
push
sbb
gs
mov
shlb
leave
addb
add
jo
in
push
popa
push
sbb
mov
or
pop
xor
mov
icebp
rorb
enter
sub
ljmp
cmp
mov
dec
aaa
les
mov
adc
add
ret
fsubl
dec
add
push
sub
mov
add
fistl
mov
in
add
dec
mov
cld
ret
mov
push
sbb
loop
icebp
lock
bound
sbb
mov
std
movsl
and
dec
jns
sub
imul
adc
nop
rclb
add
xorl
mov
les
mov
not
mov
push
mov
push
push
xor
sub
xchg
ljmp
sbb
sbb
clc
adc
daa
mov
mov
call
shll
xor
and
mov
dec
xor
adc
jmp
in
jg
sbb
test
pcmpeqd
xchg
hlt
outsl
popa
xchg
pop
or
outsb
adc
pop
sbb
add
adc
popf
mov
dec
decb
mov
lret
mov
insb
push
adc
std
mov
cwtl
std
sbb
add
faddl
mov
pop
lcall
sub
adc
jns
outsb
mov
cli
inc
test
rolb
repz
jp
mov
jle
mov
fsubr
mov
addb
jnp
fucomi
adc
adc
movsl
dec
sub
jbe
fbld
sub
push
lahf
inc
dec
dec
xlat
mov
lods
and
add
inc
cltd
lds
nop
inc
cmp
rorl
icebp
or
sub
scas
icebp
test
sti
in
or
out
push
fwait
mov
pop
add
stos
mov
pop
addr16
fmull
sub
rcl
aaa
xchg
in
loopne
cs
jb
lods
jmp
add
add
sahf
jbe
add
enter
cmp
or
in
jnp
inc
cmp
pushf
lods
xchg
mov
jg
adc
mov
lret
sar
jns
fldl
dec
fldenv
sub
xlat
lods
xor
movsl
scas
sub
and
add
iret
repz
fucom
out
mov
lea
icebp
or
cld
sub
mov
mov
xchg
dec
or
insl
imul
dec
pop
ret
add
cmpb
or
sub
in
test
test
pop
cmp
cmp
andl
movsl
insb
mov
and
pop
mov
nop
cmpb
aas
add
je
clts
mov
rolb
int3
mov
dec
test
add
mov
push
mov
push
fsts
test
mov
adc
jo
imul
stc
pop
inc
mov
xchg
adc
rorb
jmp
xor
cmc
adc
or
push
dec
mov
jecxz
ret
mov
clc
jb
xor
adc
dec
jnp
sarb
shll
sub
sub
pop
push
xor
mov
xor
mov
mov
nop
aas
cmp
data16
fidivrs
outsl
lods
cmp
addr16
push
xlat
imul
fnstenv
push
mov
inc
js
add
out
scas
sbb
push
xchg
movsl
xor
aas
sub
sahf
push
sbb
mov
lods
or
jmp
test
in
lret
jnp
xor
inc
insb
loopne
gs
leave
scas
repnz
mov
std
push
lret
bound
xor
jecxz
insb
pop
imul
test
in
nop
add
and
lea
cmpsb
pop
rclb
scas
add
xor
inc
int3
xchg
loopne
xchg
jno
xor
scas
add
or
jb
addr16
sub
lods
jns
jp
dec
rolb
stos
jecxz
xor
mov
sbb
jns
fisttpl
clc
jg
mov
hlt
dec
or
movsb
out
or
adc
in
fimuls
push
pop
dec
or
xor
mov
jbe
loop
pushf
mov
adcb
jp
dec
or
mov
sub
call
sub
pop
loopne
orb
lods
xor
or
add
subl
sbb
addb
loop
inc
lret
bound
hlt
out
mov
repnz
lods
jb
or
xorb
enter
icebp
xorb
lods
jbe
or
mov
dec
mov
or
pop
and
mov
sbb
pop
mov
add
lret
fcmovne
hlt
js
repnz
in
pop
iret
sub
ljmp
push
lock
jg
jl
jns
mov
in
add
mov
sbb
lahf
add
xchg
cmp
mov
mov
push
fs
pusha
mov
movsb
jmp
sub
shlb
stos
test
or
jbe
out
je
lea
inc
out
push
lret
jle
push
lahf
and
pop
push
je
inc
jae
icebp
pusha
imul
jns
inc
inc
js
dec
test
dec
inc
mov
sub
push
jl
push
push
cmp
jle
and
cltd
xor
add
adc
dec
stc
jge
pop
mov
ss
stos
sbb
sub
dec
add
sub
add
sub
sbb
fwait
les
divl
jp
jg
in
mov
lds
iret
in
fistpll
sti
jge
fistl
faddl
lds
out
adc
add
out
pop
iret
leave
fnsave
lret
pop
ljmp
jnp
jge
lret
and
and
repnz
and
rdpmc
mov
fldcw
sbb
lahf
mov
orb
lea
sahf
stc
sub
repz
adc
mov
mov
jno
sub
adc
push
pop
add
pusha
loop
fsubrl
push
and
andb
dec
dec
out
add
dec
dec
jns
jle
push
into
jno
das
roll
dec
cmp
out
inc
pop
mov
aaa
and
add
cmp
adc
sbb
and
add
inc
movsb
adc
add
or
sbb
sub
push
push
jo
sub
or
aaa
in
rcr
std
les
push
int
out
lcall
cld
pop
enter
sti
sti
lock
les
cli
in
int3
push
mov
aad
pop
cmc
rorl
pop
out
out
outsl
clc
iret
sahf
fsubrs
int
sbb
mov
and
mov
scas
lret
scas
mov
das
add
xchg
mov
dec
jo
mov
jecxz
or
add
stos
mov
clc
daa
mov
jnp
pop
daa
outsb
bound
pusha
dec
jge
pop
hlt
jbe
sub
push
insl
mov
jo
inc
push
mov
jae
pusha
int3
mov
push
pop
fbld
dec
lds
push
fstps
xor
sbb
add
sub
sub
cmpsb
push
cmp
and
cmp
and
pop
andb
or
xchg
dec
add
movsb
loopne
mov
outsb
out
in
cld
movsl
fcoms
pop
xor
shr
jnp
ret
pop
imul
lock
and
cltd
xor
sbb
mov
mov
cli
movsb
fmull
mov
lods
fs
loop
and
pop
xchg
fwait
mov
jns
lds
test
or
cwtl
sub
movsl
mov
push
jnp
icebp
gs
add
adc
stc
mov
jmp
out
cmc
fs
ljmp
bound
pop
pop
rcrb
add
or
negb
test
fmul
dec
loope
iret
and
mov
jb
mov
mov
dec
adc
xor
sti
add
sub
add
and
xor
pop
xchg
scas
sbb
xchg
or
loop
add
es
xchg
or
adc
push
and
sub
xor
stc
leave
add
pop
out
imul
addl
cwtl
insl
scas
jmp
pusha
push
orl
pop
lods
jb
add
rclb
fsubr
push
fimull
fs
dec
or
dec
js
pop
inc
fs
jb
inc
and
int3
mov
xor
mov
aas
ss
mov
das
test
sub
pop
mov
add
mov
lcall
nop
negl
cmc
mov
push
sbb
mov
stos
or
or
or
lods
and
add
mov
jne
xor
loop
mov
out
insl
test
jecxz
int
icebp
inc
add
fsts
add
push
sar
dec
add
in
int3
pop
out
enter
add
sahf
dec
pop
xchg
adc
ss
aas
xor
xchg
sub
lock
sub
and
mov
ja
jb
push
adc
cmp
add
roll
rorb
sub
nop
dec
sub
ds
loope
sar
iret
aas
jbe
lods
bnd
push
lahf
jle
sub
jmp
add
imul
int
fldt
mov
xchg
push
adc
push
pop
loopne
pop
and
sub
cld
int3
ret
shl
dec
ds
pusha
mov
pushf
mov
cmp
mov
mov
je
in
add
push
lods
cs
ja
inc
mov
xchg
adc
sahf
adc
setp
aaa
loopne
lods
das
adcb
mov
add
add
lock
jmp
sti
add
xchg
in
imul
ret
push
in
test
add
popa
and
sbb
rol
pop
testl
fiaddl
hlt
cwtl
testb
les
inc
gs
enter
push
sbb
add
xor
xchg
pop
and
dec
sbb
aad
dec
add
mov
mov
or
repz
or
xchg
or
cld
dec
addr16
and
xor
mov
mov
loop
fbld
jp
sub
jo
pop
dec
ja
pop
add
imul
test
dec
ret
std
pop
cmpsb
sarl
push
push
lret
push
sub
dec
mov
sub
fadds
into
sub
inc
xchg
pop
mov
xor
mov
aaa
lahf
cmpsl
lods
pop
add
in
in
sub
adc
lahf
xchg
mov
fwait
test
inc
pop
mov
jmp
test
test
add
sbb
addb
lret
rcrb
jb
jl
notb
js
repnz
imul
call
cmpsl
jecxz
imul
push
xlat
test
sub
mov
nop
nop
pop
sbbb
jge
xor
and
adc
int3
mov
daa
push
test
pop
into
test
push
popf
gs
push
and
nop
add
sbb
xor
lahf
popa
dec
mov
sbb
pop
mov
mov
xor
out
addr16
mov
insb
ss
cltd
sbb
out
dec
outsl
dec
mov
or
mov
dec
dec
enter
out
xchg
xor
jae
jmp
ss
and
js
dec
fwait
inc
test
adc
xchg
or
sbb
cs
test
fcomps
jge
mov
dec
nop
insb
and
je
sbb
lods
mov
inc
and
pop
pop
mov
and
sbb
or
sbb
push
ss
leave
dec
push
jns
dec
and
in
int
adc
shrb
cltd
movsl
add
sbb
dec
inc
arpl
outsb
sbb
xchg
pop
leave
xor
push
xchg
dec
mov
inc
sbb
or
popa
je
pop
xchg
push
inc
push
sbb
test
cltd
enter
cli
add
mov
int3
fsub
cmp
insb
repnz
nop
pusha
inc
mov
mov
fnsave
fstl
sbb
jne
cmp
inc
cmp
mov
ds
mov
push
ud1
dec
pop
push
or
xchg
mov
mov
lods
inc
in
fldl
iret
std
dec
push
xor
sbb
pop
cmp
jl
scas
loopne
mov
xchg
les
hlt
or
sbb
jmp
adc
ja,pt
dec
xor
stc
jecxz
prefetch
sbb
sahf
iret
cmp
jecxz
iret
fs
iret
ja
push
aaa
loope
sahf
mov
test
in
les
cmc
fmull
cld
push
shr
cld
ja
mov
cmp
mov
cmp
neg
ds
int3
rorb
fcom
push
cld
aam
cld
loopne
outsb
cld
cld
sarb
or
xchg
add
xchg
cld
adc
sahf
cld
sub
stos
cld
cmp
mov
xor
ret
ror
cld
pop
rcr
cld
push
shl
cld
jo
cld
mov
cmp
push
mov
dec
daa
cmp
sbb
scas
inc
movsb
jg
sbb
call
ret
clc
jmp
or
testb
and
xor
lahf
stc
mov
cmp
jle
lahf
aam
ja
divb
xchg
lahf
adc
mov
xor
aam
push
mov
lahf
jp
cld
xchg
sub
stos
cmpsl
shr
out
lret
out
lret
jp
or
xchg
out
lret
test
cmp
mov
out
lret
in
data16
add
or
sahf
and
outsb
out
outsl
jg
pop
outsl
dec
out
outsl
pop
out
outsl
mov
mov
ret
loope
mov
inc
fdiv
js
cld
clc
ficoml
cmp
pop
dec
bound
mov
sbb
daa
lahf
arpl
sahf
lret
lahf
pop
xor
cwtl
jp
aaa
sbb
pop
fs
lock
jl
cmp
adc
fists
imul
adc
out
or
cmp
jnp
outsb
pop
mov
push
pop
xor
push
dec
jp
push
test
xorb
push
add
xchg
pop
cmp
daa
aas
inc
sbb
push
cmp
scas
xchg
and
das
shrb
sbb
sbb
rclb
clc
push
adc
inc
dec
jb
push
iret
in
rorl
or
xor
insb
mov
lock
jl
cmp
mov
aad
lods
sbb
or
je
incb
push
cmp
push
cmp
mov
loope
popa
jmp
fnsave
std
divl
cmp
pop
and
cmp
mov
dec
push
fnstcw
int3
cmp
pop
inc
jbe
push
stos
jp
push
ficompl
adc
popf
mov
push
lahf
ss
xchg
and
pop
and
daa
jp
out
outsl
add
pop
pop
je
pop
mov
inc
sub
je
xor
inc
inc
jl
xchg
test
sbb
add
test
sub
imull
arpl
add
nop
repz
fisttpl
add
fildl
mov
add
ret
pop
xchg
popl
sub
mov
push
pop
pop
xchg
add
sub
mov
push
pop
pop
push
push
pop
pop
mov
sub
mov
mov
pop
sub
mov
push
pop
pop
sub
mov
mov
pop
sub
mov
mov
pop
mov
push
push
pop
pop
sub
mov
mov
pop
push
push
pop
pop
sub
mov
mov
pop
movl
sub
mov
push
pop
pop
push
mov
pop
inc
incl
xchg
push
sub
mov
pop
pop
mov
xchg
push
mov
pop
call
cmp
jne
sub
mov
mov
pop
sub
mov
mov
pop
mov
sub
mov
push
pop
pop
push
mov
pop
inc
xchg
xchg
mov
sub
mov
push
pop
pop
xchg
call
cmp
jne
xchg
xchg
mov
push
push
pop
pop
push
sub
mov
pop
pop
push
push
pop
pop
xchg
mov
sub
mov
push
pop
pop
sub
mov
push
pop
pop
add
add
jmp
jmp
sub
mov
mov
pop
xchg
mov
push
mov
pop
xchg
xchg
sub
mov
sub
mov
pop
pop
lea
xchg
xchg
xchg
push
sub
mov
pop
pop
mov
push
mov
pop
xchg
sub
mov
sub
mov
pop
pop
push
sub
mov
pop
pop
xorl
sub
mov
sub
mov
pop
pop
sub
mov
mov
pop
add
cmp
jb
jmp
push
mov
pop
xchg
mov
sub
mov
mov
pop
xchg
subl
xchg
sub
mov
mov
pop
mov
xchg
xchg
ret
call
xchg
xchg
pop
push
sub
mov
pop
pop
push
mov
pop
sub
sub
mov
mov
pop
xchg
mov
sub
mov
push
pop
pop
xchg
push
mov
pop
push
mov
pop
push
push
mov
pop
sub
mov
sub
mov
pop
pop
addl
push
mov
pop
sub
mov
push
pop
pop
pushl
push
push
pop
pop
sub
mov
sub
mov
pop
pop
push
push
pop
pop
push
mov
pop
mov
xchg
xchg
xchg
sub
mov
push
pop
pop
mov
xchg
push
mov
pop
add
decb
xchg
xchg
popl
xchg
push
push
pop
pop
ret
inc
inc
add
dec
inc
add
add
add
xor
add
add
add
lcall
add
inc
add
inc
inc
add
dec
inc
add
add
add
imul
popa
jae
inc
jb
outsl
jb
fiadds
inc
gs
gs
imul
outsb
gs
xor
cs
insb
add
add
mov
clc
mov
mov
clc
mov
add
jl
mov
shll
orb
add
jno
inc
add
int
call
mov
clc
lea
mov
cmp
mov
add
pop
and
call
aam
add
cmp
push
xchg
add
cmp
inc
add
cmp
add
cmp
add
cmp
push
clc
mov
add
jl
mov
mov
add
sub
push
lea
cmp
add
cmp
push
clc
mov
add
jl
mov
shll
js
or
jno
inc
add
int
pop
mov
push
sti
std
ret
add
cmp
add
cmp
add
cmp
add
cmp
xor
or
ss
add
xor
push
or
cmp
or
xor
or
ss
add
xor
push
or
cmp
cmp
push
xor
jb
popa
pop
jb
bound
jb
jge
js
or
gs
outsb
jb
pop
jg
fs
pop
jae
cmp
push
xor
push
popa
insb
jge
insb
outsl
pop
js,pt
or
imul
jb
pop
js,pt
push
dec
je
pop
push
push
jb
dec
arpl
mov
mov
add
jl
and
pop
mov
pop
sub
xlat
int3
mov
mov
jns
jle
push
decl
add
mov
mov
mov
ds
decl
dec
add
mov
mov
popf
inc
jle
push
decl
aaa
add
mov
mov
scas
inc
jle
push
decl
pop
add
mov
mov
mov
decl
pop
add
mov
ljmp
in
push
push
push
outsb
mov
or
ds
xor
add
cmpl
dec
dec
mov
xchg
ror
mov
pop
jae
mov
add
mov
and
arpl
xor
mov
add
mov
outsl
repz
dec
cmp
pop
mov
jl
jne
add
jmp
mov
and
dec
ss
mov
or
aas
lock
pop
mov
mov
sbb
out
test
cmp
mov
lret
fldl
inc
xor
clc
mov
xor
gs
pop
test
clc
pop
lahf
xor
cmp
mov
mov
or
movsb
add
jl
cmp
dec
or
jl
adc
cmp
jmp
ret
push
pop
jmp
std
mov
mov
cld
insb
push
inc
push
mov
add
jl
push
ljmp
std
mov
pop
mov
mov
inc
xor
add
fs
sti
jle
jne
jle
add
add
std
mov
mov
clc
addl
mov
addb
jle
add
push
ljmp
mov
clc
mov
inc
inc
jle
lea
aas
xor
add
dec
adc
ja
add
cmp
je
sbb
incl
cmp
push
decl
rcll
cmp
pop
lea
cmp
push
push
ret
mov
jle
call
mov
mov
addr16
mov
jmp
mov
sar
pushl
add
dec
add
or
shlb
inc
push
xor
mov
pop
mov
cmp
pop
sbb
cmpxchg
push
xor
adc
aad
add
jmp
pushl
dec
adc
add
add
cmp
add
mov
add
push
add
cmp
add
push
ds
add
add
scas
cmpsl
inc
inc
cmp
push
clc
mov
inc
inc
jle
mov
shll
mov
outsb
call
cmp
mov
mov
add
add
cmp
add
rep
push
ds
add
add
pushl
ret
lods
stos
inc
jle
mov
std
pusha
mov
and
inc
sbb
cld
mov
add
push
add
dec
enter
pop
add
cmp
sbb
cld
pop
add
jae
cmp
mov
dec
add
adc
dec
leave
jne
xchg
aad
call
adc
jl
add
je
sub
jbe
loopne
xchg
call
cmp
dec
xor
cld
cmp
add
ja
jge
xchg
mov
lea
push
mov
sub
iret
lcall
cmp
xor
jg
out
ret
sar
cmc
out
ret
shll
adc
jl
and
