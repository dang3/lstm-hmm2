jge
add
mov
add
sahf
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
push
adc
add
add
jg
add
sahf
adc
add
add
rclb
add
jecxz
add
sti
adc
add
adc
add
adc
add
add
push
adc
add
add
jb
add
mov
add
popf
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
imul
add
lahf
adc
add
add
add
add
add
ljmp
inc
jmp
or
jae
sbb
sbb
in
insl
mov
or
push
jge
push
or
push
sbb
shll
aad
clc
pusha
jno
stos
mov
xchg
pop
imul
mov
or
movsl
int
outsl
rcrb
ss
add
xlat
jae
pop
adc
push
orb
xlat
jmp
add
sbb
fisubs
call
ret
adc
or
insb
adc
aas
xchg
xchg
pop
mov
iret
mov
daa
and
gs
insl
push
jae
fnstenv
xor
cmp
dec
bound
lcall
aaa
jno
nop
jns
leave
shlb
mov
cmp
ja
loopne
cwtl
daa
inc
xchg
into
mov
sti
outsb
inc
xchg
addr16
and
pop
test
jo
in
jl
pop
mov
mov
pop
insl
stc
and
icebp
imul
decl
pop
in
dec
push
and
xchg
imul
mov
pop
sbb
loopne
cmp
aaa
js
fsubr
xor
sahf
mov
cmc
repnz
pop
sub
mov
xor
ss
mov
xchg
mov
fidivl
xor
movsl
aaa
ds
mov
mov
push
mov
add
aas
cwtl
add
or
push
mov
inc
cmp
mov
adc
scas
cld
xchg
fs
ret
clc
das
ror
les
adc
xor
jo
mov
sub
loope
dec
xchg
and
addr16
arpl
or
mov
sbb
hlt
jp
mov
sbb
int
pop
pop
mov
nop
fcmovnbe
bound
fadds
cmpsb
es
frndint
ficomps
pop
mov
mov
insl
jp
orb
jmp
pusha
xor
mov
adc
sub
in
hlt
pushf
add
movsb
or
sahf
cmp
in
das
adc
cli
xor
je
dec
xchg
lcall
lea
lret
inc
ret
lcall
fbstp
lods
fsubrl
das
out
mov
enter
jl
fs
testb
inc
out
adc
call
mov
je
push
mov
shr
out
mov
mov
aaa
mov
jnp
scas
int
icebp
test
inc
cltd
popf
xor
pop
mov
loope
aam
mov
imul
fnstsw
and
out
pop
xchg
je
push
arpl
sub
xor
fimull
insl
jbe
fs
mov
mov
pop
rorl
psllq
lret
mov
test
rcl
addb
add
and
inc
scas
popf
into
insb
jne
les
fsubrp
repz
cli
sub
push
adc
jno
fisubl
std
lcall
outsl
cmp
out
mov
movsl
jae
mov
inc
lahf
pop
pop
popa
mov
arpl
jmp
aaa
lds
xchg
or
push
gs
shll
cmp
imul
cld
push
xor
xchg
jnp
addl
std
push
xchg
sub
sub
xchg
jge
pop
inc
int3
xchg
out
int3
xlat
outsl
mov
pop
mov
add
add
test
outsb
stos
nop
loop
pop
test
pop
push
xor
push
cs
jecxz
and
lahf
push
dec
inc
or
lret
push
push
movsb
bound
jp
xor
shl
push
int3
jp
push
xchg
mov
fstpl
dec
nop
and
dec
push
and
jno
es
aas
xor
mov
enter
pop
and
lods
xor
sarb
jmp
loopne
pop
sahf
inc
lret
sub
rcr
push
jae
loop
cwtl
cmp
xor
rcl
stos
mov
lods
push
sarb
add
pop
das
inc
mov
adcl
imul
lods
push
stos
jle
clc
adc
dec
ror
orb
add
push
fbstp
insl
lods
mov
jmp
enter
xchg
cwtl
dec
aas
add
lods
fdivs
adc
ret
mov
sub
xchg
xchg
ss
cli
mov
mov
and
ss
int3
sbb
adc
cmp
sbb
jnp
sahf
fisubrs
lods
pop
sbb
mov
bound
xor
pmaxub
out
xor
mov
test
test
mov
ret
xchg
aas
push
inc
stc
xchg
insb
pop
dec
imul
xchg
mov
mov
inc
add
sti
imul
scas
inc
sahf
add
mov
mov
sahf
sarb
cwtl
js
mov
push
jge
jne
cmp
cmpb
mov
inc
mov
push
out
cmp
mov
pop
pop
lret
in
xlat
cmp
bnd
ss
cltd
test
xlat
xchg
insl
cmpsb
cmp
jbe
or
xchg
jmp
xchg
and
shlb
movsb
xchg
lods
popa
adc
test
xlat
mov
dec
shll
sub
mov
mov
xchg
push
jne
inc
sub
xchg
pop
cwtl
imul
jl
mov
cltd
fisttps
call
loope
sbb
add
xchg
lret
add
hlt
pop
sbb
cld
loopne
ret
ds
scas
stos
popf
inc
sub
and
inc
sub
sbb
fwait
outsb
cwtl
shrl
and
mov
int
test
int
fcomip
insb
push
cwtl
push
sar
or
push
push
scas
outsb
jae
hlt
ja
mov
psrlq
mov
mov
mov
into
dec
fisttpll
xchg
jns
mov
adc
mov
icebp
stos
push
lea
test
hlt
or
mov
or
in
adc
or
push
mov
call
icebp
gs
inc
mov
mov
in
mov
stos
jo
jbe
push
dec
cld
mov
pop
inc
mov
les
mov
mov
mov
lods
cltd
ficompl
cmp
aaa
loope
clc
jbe
lea
fbld
popa
jbe
add
pusha
stc
repnz
sub
sti
fists
nop
push
clc
lock
sti
mov
and
jecxz
daa
and
divb
divb
leave
lock
out
mov
push
mov
dec
add
call
or
mov
call
imul
push
inc
call
add
inc
dec
lea
lea
imul
call
movzbl
mov
add
dec
add
dec
inc
add
movzbl
add
lea
mov
imul
inc
call
xor
add
mov
inc
xor
call
mov
or
call
dec
imul
dec
or
or
and
dec
or
dec
pop
sub
lea
xor
add
imul
pop
mov
add
pop
lea
mov
imul
mov
pop
imul
sub
movsbl
dec
inc
mov
mov
sub
pop
add
movsbl
pop
dec
dec
mov
mov
imul
call
lea
mov
inc
imul
ret
mov
lea
push
sub
mov
push
dec
inc
push
inc
inc
push
inc
movzwl
push
lea
add
mov
dec
mov
push
sub
ret
push
lea
dec
add
add
lea
inc
inc
push
and
inc
push
mov
call
pop
ret
jmp
mov
xchg
add
dec
inc
mov
xor
sub
xor
lea
inc
inc
sub
movswl
dec
jne
dec
mov
dec
mov
pop
imul
mov
pop
add
add
pop
mov
add
lea
mov
inc
add
dec
add
add
mov
inc
add
ret
push
inc
add
movsbl
add
mov
add
mov
lea
push
push
push
push
lea
imul
dec
push
mov
add
sub
dec
inc
sub
lea
mov
or
mov
inc
push
mov
mov
xor
sub
dec
push
sub
add
push
or
sub
pushl
sub
call
xor
add
sub
inc
and
inc
dec
sub
add
pop
ret
lea
mov
dec
inc
inc
lea
lea
inc
lea
mov
dec
mov
imul
mov
cmp
jb
imul
mov
lea
xor
movswl
dec
xor
inc
dec
pop
dec
xor
test
jbe
imul
inc
inc
inc
inc
mov
inc
inc
inc
dec
lea
add
dec
lea
mov
or
inc
movzbl
add
lea
add
and
lea
and
mov
dec
add
movzbl
imul
imul
add
lea
lea
and
and
mov
mov
mov
dec
mov
dec
inc
mov
dec
dec
mov
lea
dec
and
movsbl
inc
mov
dec
jne
mov
mov
mov
add
inc
inc
add
mov
mov
dec
add
add
add
imul
sub
lea
add
mov
inc
movzbl
test
jbe
dec
add
add
mov
imul
xor
inc
mov
sub
dec
lea
dec
sub
lea
imul
inc
and
dec
inc
and
lea
add
and
sub
dec
mov
add
add
movzbl
mov
or
add
dec
movzbl
and
inc
mov
mov
add
or
movzbl
dec
sub
mov
add
mov
mov
movswl
lea
movzbl
movzwl
inc
add
lea
inc
and
mov
add
movzbl
inc
jmp
push
call
inc
xor
inc
inc
xor
inc
sub
inc
mov
dec
inc
mov
lea
xor
and
mov
mov
movsbl
shl
sub
dec
xor
inc
dec
push
mov
dec
mov
call
add
pop
inc
dec
lea
mov
dec
and
mov
dec
cmp
je
call
call
add
iret
movsbl
inc
pop
mov
ret
push
dec
sub
inc
lea
inc
push
dec
lea
push
movswl
push
mov
push
add
dec
push
mov
add
dec
dec
mov
call
or
push
lea
push
inc
pop
inc
mov
mov
mov
mov
mov
or
mov
inc
imul
mov
dec
je
dec
inc
inc
add
inc
mov
mov
and
mov
mov
lea
add
mov
sub
sub
mov
and
repnz
add
dec
add
add
jmp
dec
dec
xor
mov
mov
add
mov
movzbl
sub
sub
lea
add
dec
dec
inc
mov
pop
pop
jmp
ret
push
or
lea
dec
inc
add
or
lea
and
lea
inc
dec
dec
dec
inc
inc
and
imul
inc
add
xor
inc
inc
dec
inc
mov
mov
pop
ret
sub
dec
mov
imul
xor
mov
add
lea
mov
add
inc
mov
xor
movswl
xor
sub
mov
mov
inc
dec
inc
add
mov
movswl
mov
xor
mov
cmp
jb
movzwl
push
lea
inc
push
imul
imul
push
dec
mov
mov
add
inc
xor
mov
inc
xor
dec
lea
xor
add
push
movsbl
dec
xor
inc
movswl
mov
inc
dec
mov
dec
movzbl
imul
imul
mov
mov
add
mov
mov
add
lea
movzbl
dec
lea
sub
inc
dec
inc
add
inc
lea
add
mov
lea
inc
sub
lea
lea
cmp
jb
inc
xor
inc
dec
mov
lea
jmp
test
stos
mov
and
push
or
adc
roll
bound
mov
xchg
jnp
stos
scas
mov
dec
loop
iret
sarl
loop
and
push
jae
and
add
sbb
sahf
loopne
mov
cmp
mov
pop
adc
or
lea
push
pop
push
in
addl
stos
xchg
mov
movsb
push
sub
inc
jnp
sub
aas
dec
popf
int
or
push
sbb
xor
mov
xchg
or
fcoml
cld
addl
sub
dec
push
ret
lods
test
ror
mov
adc
gs
insl
push
mov
lea
loope
sbbl
icebp
mov
dec
testb
int
out
dec
xchg
in
mov
ljmp
push
leave
mov
test
dec
lcall
pop
or
insb
imul
int3
dec
mov
loope
xlat
hlt
sub
lret
or
loop
subb
sar
adc
das
mov
mov
leave
ret
xchg
xchg
xor
sbb
negl
cmp
mov
nop
pop
pop
cs
fwait
xor
je
fcomps
dec
and
and
sar
sbb
jecxz
lods
push
mov
cmp
lret
shlb
stos
cmp
push
sti
test
inc
mov
pushf
push
dec
mov
mov
mov
out
aad
mov
loopne
xlat
mov
repz
aam
test
int
repnz
push
iret
and
add
lea
xlat
lea
add
jg
movsb
xchg
aas
add
mov
push
inc
xor
push
cs
add
fst
ds
fs
push
xor
inc
js
mov
pop
sbb
ja
mov
adc
inc
mov
sub
repnz
jmp
dec
xor
push
push
jmp
aaa
push
lock
into
mov
push
cmpsb
fildll
pop
mov
cwtl
jg
xchg
mov
lods
adc
ret
push
mov
mov
push
cltd
sbb
mov
pop
inc
cmovle
or
push
outsl
adc
scas
sub
int3
pop
js
pop
stc
ljmp
or
jecxz
fistps
mov
fidivl
adc
mov
bound
or
sub
or
int
hlt
xchg
es
or
loop
aas
xor
sti
add
movsb
sbb
mov
dec
les
push
daa
jmp
adc
nop
sub
cs
cmp
pop
jecxz
cmp
xchg
test
lcall
aas
xchg
mov
lock
push
aas
pop
jmp
mov
cmc
dec
mov
enter
and
jb
lock
cmpsb
ja
aam
jp
roll
mov
aaa
dec
push
in
mov
stos
dec
lock
int3
rol
jp
jbe
mov
lret
movsb
out
inc
cli
dec
les
lahf
pop
mov
mov
or
in
mov
inc
mov
rorl
andl
xchg
not
add
mov
mov
div
cmpsl
sbb
in
in
xor
ss
and
popf
fnstenv
pop
cmp
push
ja
orb
stc
push
pop
or
popf
pop
pop
fbld
nop
xor
xchg
sbb
mov
sbb
cwtl
lock
mov
jge
call
das
xor
add
mov
add
fiadds
cmpsl
push
cmp
and
sub
xchg
mov
adc
jge
loop
push
pop
push
lock
xchg
repz
add
imul
ds
mov
xor
cmp
rolb
pop
mov
xchg
inc
enter
push
cmp
add
popf
push
adc
xchg
inc
ds
adcl
in
lea
xchg
mov
inc
xor
into
sbb
cmp
lods
or
cltd
cmc
mov
sbb
jae
in
adc
xor
es
inc
hlt
push
mov
adc
or
ljmp
fiadds
enter
mov
pusha
fisubrl
shr
jecxz
je
add
cmp
xor
lods
push
sub
lea
or
test
cltd
inc
inc
sbb
or
cld
out
out
ljmp
mov
xrelease
dec
lods
mov
push
cmc
sub
jle
cmpsl
into
add
or
mov
xor
mov
jnp
xchg
iret
xor
orb
les
pusha
and
mov
mov
sbb
int3
xchg
push
pop
add
xor
sub
test
inc
mov
or
sahf
inc
cmpsl
or
popf
or
mov
dec
sub
fs
mov
jg
mov
rcll
hlt
or
and
push
insl
jge
mov
push
push
aas
fucom
inc
mov
mov
mov
cwtl
cltd
cmp
add
loope
lea
add
loopne
scas
subb
out
sbb
lea
push
mov
jle
dec
sub
clc
xchg
and
lahf
in
mov
ret
test
adcb
xor
mov
fwait
les
xor
cmp
push
ret
dec
sbb
or
stc
xorb
leave
jl
dec
clc
mulb
sbb
mov
jbe
mov
and
and
pop
adc
cmpsb
xchg
mov
nop
fisubl
aaa
rolb
xchg
jl
and
pop
hlt
push
or
pop
add
out
cs
mov
xor
pop
imul
movsl
bound
push
sbb
mov
ljmp
cli
adc
add
movsb
add
inc
imul
out
sub
lea
pop
loopne
xor
inc
sbb
jns
shll
adc
mov
mov
lcall
sub
and
pop
jbe
xchg
andps
xchg
bnd
mov
pop
outsb
cmpsb
sub
sub
jae
icebp
fldenv
repz
lds
inc
cmp
mov
pop
pop
popa
jp
sub
xor
dec
addr16
xchg
mov
adc
xchg
mov
addb
ds
or
outsl
xor
aad
pusha
mov
jo
ljmp
jp
push
test
dec
adc
push
sub
fxch
sub
jns
mov
mov
xchg
daa
dec
mov
popf
pop
cmpsl
jge
mov
rolb
sbb
std
xchg
add
stos
jbe
inc
es
pop
sbb
movsb
les
stos
xchg
jge
fidivl
xorb
cmp
fwait
sbb
add
sbb
fcmovu
mov
repz
push
xchg
jae
nop
loopne
sbb
add
jmp
shl
xchg
jle
sbb
loope
mov
test
cmpsb
lock
testb
xchg
cmpl
add
mov
aaa
lods
jl
jae
subl
fidivrl
pop
push
sbb
inc
prefetchwt1
or
xchg
sub
xor
add
stos
and
add
hlt
loopne
xchg
pop
addr16
xor
repz
mov
mov
add
into
mov
lods
sbb
xor
xchg
cmp
push
fcoml
jle
sbb
imul
push
repz
push
and
cmp
cmp
iret
repnz
mov
fcoms
sbb
or
dec
test
out
daa
fisttpll
sti
lock
js
cmp
pop
or
in
push
mov
leave
pop
xchg
mov
jmp
mov
mov
sarl
adc
rolb
fmuls
aam
xor
ja
sbbl
cmp
jg
jp
insl
mov
xor
orb
insl
fwait
negb
mov
add
dec
mov
cli
mov
jb
sar
lahf
das
jl
shlb
imul
clc
inc
cld
mov
sub
push
xor
lods
sub
jne
sbb
rcr
lahf
cs
push
jns
in
push
cltd
push
jnp
xor
dec
sbbb
jecxz
adc
xchg
std
dec
fcmovbe
jns
int
dec
pop
mov
rorl
hlt
sub
pop
fdivr
xchg
push
inc
cmp
add
dec
ja
jg
js
jmp
add
mov
add
dec
or
and
mov
add
and
and
inc
rolb
jl
rcrl
scas
lcall
dec
ds
cs
enter
jbe
in
pop
mov
jne
popf
repnz
xchg
or
sub
andl
negl
mov
loopne
clc
movsl
daa
jb
fwait
testl
jle
clc
mov
sbbb
popa
imul
pop
outsb
or
jl
mov
push
gs
adc
mov
xchg
jno
mov
nop
fisubl
inc
or
sub
push
add
fidivs
xchg
scas
inc
xor
inc
cmp
cmp
out
loopne
mov
outsl
mov
popf
je
loop
int
mov
jo
or
je
fisubs
fisubrs
mov
je
div
cmp
lods
lret
mov
dec
lds
nop
mov
loop
cli
mov
fistps
sbb
fildll
cli
push
xchg
sar
daa
inc
sub
iret
mov
iret
xor
jmp
mov
add
loop
sbb
sbb
cmp
lea
out
pop
inc
subb
outsb
mov
inc
jg
rclb
stc
aad
out
sahf
lods
sbb
shll
xchg
imul
shrb
cmpl
lcall
inc
sti
into
mov
lock
push
jbe
subl
push
aaa
test
insb
jne
cld
xor
xor
test
repz
sub
and
orl
cmp
mov
jge
or
push
inc
popa
add
andl
push
mov
xor
cs
cmp
or
xchg
in
mov
mov
shlb
pop
sahf
incl
and
outsb
fcompl
adcl
shl
ss
stc
mov
scas
or
movb
leave
jae
dec
in
push
popf
stc
lods
loop
mov
add
gs
push
inc
fistpll
ret
xchg
arpl
sub
adc
and
inc
sahf
jle
push
inc
icebp
idivl
rclb
lods
loopne
gs
xchg
lds
sub
xchg
test
mov
pop
loop
lods
xchg
fdivl
repnz
add
mov
push
inc
push
fsubp
stos
mov
pop
add
int
sub
sub
clc
dec
enter
daa
je
adc
mov
jmp
xchg
mov
cmpsb
imull
and
dec
push
mov
ret
cli
in
jns
cli
sti
cmp
fmull
cmp
and
push
jmp
popf
inc
ljmp
sets
cltd
mov
jo
or
cwtl
inc
frstor
sub
or
xlat
arpl
or
pop
adc
mov
or
andb
cs
pop
loope
cmpsl
fidivs
movsl
gs
loopne
lcall
mov
rcr
nop
mov
inc
scas
or
dec
stos
push
push
popa
mov
mov
testl
aad
dec
popa
pop
sbb
dec
add
in
pop
inc
cld
push
add
xor
xchg
pushf
inc
repz
clc
hlt
insl
mov
inc
xchg
lods
movsl
adc
jo
in
emms
xchg
xor
mov
xchg
and
pop
mov
cmp
int3
out
jecxz
rcr
push
ret
in
push
jp
sbb
and
negb
push
icebp
or
inc
xor
adc
jnp
mov
call
movsl
insl
sbb
jo
jne
dec
in
push
sub
or
mov
clc
adc
cs
aam
mov
je
idivb
jbe
and
sbb
idivb
imul
jb
add
pusha
mov
or
leave
test
jmp
repnz
cwtl
rcrb
lds
rcr
iret
out
in
mov
neg
adc
cs
mov
xor
push
jg
mov
jp
xor
cmovg
sbbb
add
adc
push
inc
cmc
fcoms
out
push
fnstsw
add
fidivrs
mov
or
mov
inc
jle
stos
jle
aam
xlat
loope
enter
aad
dec
push
push
fildll
cli
mov
aam
les
dec
xor
int3
lds
int
in
mov
js
push
xchg
loope
ljmp
iret
or
mov
adc
sub
or
popa
jle
adc
bound
lods
and
nop
imul
test
pop
inc
les
or
cltd
push
pushf
mov
jge
test
dec
pop
int3
pop
push
testb
sbb
repz
js
xchg
call
cwtl
push
inc
inc
jle
or
mov
movsb
inc
loop
jmp
outsb
fldenv
stos
insl
arpl
pop
inc
cli
fnstsw
dec
fiadds
mov
adc
sbb
add
add
jns
mov
out
roll
mov
xor
in
cwtl
xchg
cwtl
pop
call
xchg
or
and
mov
sub
jl
fcmove
orl
cmp
mov
cmp
stos
subb
push
push
cmp
lahf
out
mov
repnz
mov
sub
jmp
push
sbb
jl
pop
outsl
cltd
shrb
mov
mov
cli
sub
stc
push
adc
jbe
and
mov
leave
mov
cld
inc
jecxz
sub
mov
and
and
mov
mov
lods
andb
mov
jle
sbb
dec
mov
dec
xchg
jmp
test
ljmp
jg
fnsave
mov
mov
jmp
cltd
flds
mulb
inc
mov
cmp
inc
popa
popf
sbb
dec
jmp
add
into
xchg
addl
lret
add
or
ds
into
sahf
daa
in
and
imul
mov
test
push
cmc
sub
sbb
test
jns
sbb
sub
xchg
and
push
pusha
xor
mov
cmp
xchg
pop
jle
push
sub
lret
popa
dec
or
xor
mov
sub
ret
inc
push
lock
popa
addr16
jbe
nop
mov
popa
inc
into
xchg
pop
jo
iret
lret
mov
mov
push
xor
mov
fsubr
mov
jmp
sbb
aas
dec
mov
jp
mov
and
dec
inc
movsb
dec
and
dec
cmc
stos
clc
mov
or
adc
imul
jnp
cwtl
inc
add
inc
ret
inc
cmp
imul
jo
push
dec
inc
stos
mov
pop
and
adc
hlt
test
nop
mov
push
xchg
jle
lods
pushf
add
add
shll
test
pop
dec
fs
fsts
loopne
and
pop
mov
sbb
out
cmpsb
mov
clc
inc
dec
mov
mov
jge
cmp
sub
jecxz
in
sarb
pop
mov
push
and
das
ljmp
add
out
repz
fs
es
incb
xlat
pop
add
repz
cli
enter
sar
jne
repz
adc
loopne
mov
xlat
aam
mov
push
mov
test
sti
or
sti
lods
cmp
mov
cli
outsb
xor
test
pop
pop
gs
loope
addb
mov
cwtl
loop
sbb
cld
pop
sub
adcl
pop
and
jnp
xchg
mov
idivb
fnstcw
mov
mov
add
cli
arpl
cwtl
ds
inc
push
sti
jle
mov
xor
push
aas
adc
adc
push
sbb
xor
mov
xorl
pop
or
decb
push
clc
pop
js
and
push
std
lods
mov
sub
jl
add
push
jge
mov
shrl
push
das
fdivrl
imul
mov
loope
mov
cltd
adc
sbb
jle
jno
xchg
push
jge
jns
cltd
push
xor
fwait
pop
sbb
test
cmc
cmpsl
push
int
mov
loopne
lods
enter
stos
mov
dec
add
iret
pop
lret
lods
jne
jmp
jge
test
iret
rolb
push
out
sub
inc
mov
xchg
icebp
stc
loopne
mov
les
je
fistpll
ret
inc
stos
in
dec
push
add
out
movsb
sbb
xchg
sbb
fiaddl
xchg
imul
mov
hlt
adc
jb
mov
jno
mov
push
nop
movsl
iret
adc
xor
ja
gs
dec
test
outsl
or
lock
ss
ret
cmp
push
mov
mov
jbe
mov
xchg
in
shrl
not
lods
or
pop
push
hlt
fidivl
mov
jne
in
mov
shrb
imul
push
xchg
pop
lock
repnz
nop
jecxz
and
js
shlb
test
testb
pushf
pushl
pop
cmpsb
lret
and
adc
mov
mov
mov
sub
jbe
pop
in
mov
gs
add
xlat
pop
mov
ret
inc
leave
xlat
cmp
inc
imul
loope
inc
inc
pusha
in
or
imulb
cli
mov
mov
inc
cwtl
lahf
jecxz
xchg
outsl
cli
dec
test
lahf
xchg
imul
test
adc
sub
jge
lcall
ja
jb
cld
pop
mov
xor
pushf
mov
stos
cwtl
mov
jp
xchg
test
cli
lret
inc
xor
push
inc
test
inc
xor
repnz
test
btr
cwtl
inc
xchg
or
push
rol
loop
xor
enter
ljmp
aaa
ja
cmp
das
lds
xlat
push
mov
aas
dec
movl
xlat
xchg
fmuls
cmp
movsb
mov
inc
mov
ret
call
add
mov
and
add
xor
and
pop
insb
dec
mov
mov
loopne
cmpsl
ret
sub
rcll
sbb
add
mov
and
xlat
adc
or
bound
addr16
mov
sbb
mov
push
jecxz
jmp
idiv
in
fcomps
sub
outsb
out
hlt
xchg
mov
orl
xor
inc
jmp
push
int
ret
mov
fiaddl
test
cld
mov
rcl
imul
or
dec
pop
cmp
cmpsb
loope
loope
mov
out
push
inc
outsl
xlat
aad
in
repz
dec
pop
xor
pop
add
push
push
sbb
sbb
or
in
cmp
std
loopne
scas
clc
jno
ret
xor
mov
add
loope
shlb
std
xchg
adc
mov
dec
iret
xchg
jno
xchg
xchg
mov
push
xor
cltd
int3
stc
and
mov
insl
adc
daa
or
mov
mov
data16
push
daa
inc
aam
push
cmp
adc
mov
jl
mov
fstps
fdivr
dec
cmp
mov
xchg
mov
cmp
insb
inc
in
imul
or
leave
data16
mov
xor
ficoml
xor
movsl
mov
adc
orb
sbb
mov
cmp
insl
dec
dec
aas
adc
outsl
nop
dec
ret
sub
iret
sti
nop
or
ss
xor
xchg
cli
lods
jo
xor
and
mov
leave
xchg
in
imul
push
xor
mov
xor
push
xor
in
movsb
lods
mov
into
lea
jbe
clc
repz
popf
cmpb
int
jge
mov
enter
inc
rcr
test
pop
leave
add
jle
pop
loope
cli
fldt
dec
movsb
lea
shlb
sub
aaa
ret
xchg
arpl
ds
and
mov
jge
dec
or
inc
in
xchg
add
push
pushf
lret
jo
pop
rolb
pop
xlat
lcall
ret
fmul
mov
movsb
pop
xor
cld
inc
cs
lcall
scas
cld
lds
xorl
test
leave
inc
jnp
mov
pop
sub
sub
pop
push
add
cmpsl
dec
into
mov
adc
icebp
jnp
inc
nop
cli
adcb
stos
shr
or
jo
daa
loope
pop
outsl
adc
sbb
aas
mov
lahf
sti
das
lds
push
fcoml
xor
add
cs
jp
icebp
loope
test
fs
sarb
pmaddwd
insl
stos
les
add
mov
sarl
and
xor
jno
rcrb
dec
adc
jae
cmp
pop
and
stos
lahf
xchg
adc
cs
sub
or
jp
jo
mov
pusha
test
fstp
movsb
mov
adc
popf
fistpl
out
jp
jno
dec
mov
mov
addr16
notb
push
mov
test
xchg
sub
inc
stc
out
mov
dec
cmpsl
cmp
push
or
xor
sahf
or
mov
outsl
movsl
add
or
ljmp
jp
ja
shrb
ja
sarb
push
dec
mov
add
or
and
mov
rcrb
mov
ljmp
add
nop
mov
inc
jae
addl
mov
cmc
icebp
mov
fsubp
fisubl
ret
fwait
pop
inc
mov
adc
fdivl
in
push
daa
pop
nop
jo
cmc
fists
push
cltd
jg
push
je
fldenv
out
ss
js
pop
sub
sub
lock
in
and
jp
push
xor
loopne
outsb
out
sbbb
divl
scas
mov
sti
cmp
nop
aad
add
outsb
inc
sbb
mov
add
mov
inc
aam
nop
sbb
out
jae
cli
data16
rcr
fwait
std
shrl
aaa
sti
inc
outsb
out
mov
mov
jle
pop
je
push
lret
aad
adc
rcll
stos
aam
pop
cmp
or
mov
mov
lret
dec
xchg
adc
std
mov
inc
jle
mov
pop
cmp
dec
push
addb
stos
push
mov
jnp
add
and
test
dec
fadds
mov
xchg
sub
ffreep
cmp
scas
push
push
sar
mov
mov
imul
sbb
inc
pop
pop
xchg
and
mov
xor
jae
dec
arpl
xor
mov
fs
push
daa
cmpsl
push
icebp
lods
je
jge
inc
lods
xchg
pusha
push
dec
cmp
stos
mov
cmp
push
dec
push
jl
jl
cs
movsb
addb
repnz
loopne
pop
pop
sahf
push
inc
inc
dec
or
js
mov
adc
clc
fwait
sub
cmp
mov
sub
iret
mov
dec
test
mov
outsb
stos
test
aas
hlt
jne
loopne
lret
sub
sbb
or
xchg
push
dec
xchg
or
test
lahf
lock
cs
shrb
jl
and
add
and
cmpsb
int3
cmp
dec
or
or
pop
xor
xchg
inc
sub
mov
xor
inc
pop
addl
sub
icebp
orl
repz
test
inc
push
sub
sub
test
xor
inc
rcrl
stos
mov
mov
jns
dec
and
jno
push
stc
cli
push
aas
cld
mov
fwait
push
sub
in
xor
add
mov
ficoml
and
js
fldt
push
pop
into
and
call
jecxz
aad
mov
mov
add
into
cmp
jmp
mov
pop
jge
and
fldl
cmp
lret
xchg
xchg
sub
dec
stos
out
cmp
std
pushf
flds
ret
dec
adc
dec
icebp
adc
lods
shrl
jp
and
fildll
fisubrs
test
insl
jmp
sub
cld
sub
insb
inc
insb
clc
les
dec
mov
inc
mov
or
inc
sbb
mov
pop
push
test
cs
mov
mov
mov
push
sub
pop
mov
cs
jmp
jno
mov
adc
mov
sbb
pop
or
pop
imul
loopne
sbb
lea
mov
hlt
jp
or
loope
mov
xor
popf
lea
stos
jp
in
adc
cmp
test
pop
sbb
div
test
mov
and
add
cmp
cmp
mov
inc
outsb
test
mov
sbb
popa
mov
inc
lea
mov
sbb
pop
pop
test
add
lock
cwtl
mov
repz
xchg
dec
xchg
andl
lcall
push
sbb
fisubrl
jb
xor
rcll
fiaddl
popa
mov
adc
int
aas
jno
rorb
inc
pop
and
or
in
sub
cmpsb
xor
movsb
les
pop
lret
mov
add
and
jns
loop
mov
cmpsb
int3
lods
repnz
pop
inc
bound
dec
aaa
jae
popf
mov
lods
iret
filds
imul
daa
inc
xor
movb
dec
arpl
or
out
jbe
xor
mov
clc
cmp
lret
pop
mov
insb
mov
shlb
movsb
xchg
outsl
mov
lock
nop
xchg
js
mov
dec
mulb
fildl
dec
push
stos
push
pushf
ja
std
and
xchg
addb
jg
xchg
jo
xchg
sub
cmc
fistpl
bound
push
push
dec
clc
addr16
adc
std
sahf
ja
adc
hlt
dec
notl
fs
addb
addr16
fdivrs
int
out
aas
xchg
sub
adc
xlat
add
pop
fstl
fistpl
cmp
push
and
mov
push
jmp
rcrl
and
jp
dec
das
in
pop
std
xchg
push
ljmp
lahf
mov
cmp
mov
lcall
jp
in
xor
xchg
mov
mov
mov
or
sbb
movsl
cmpsl
xlat
sub
out
and
and
scas
push
out
ja
dec
jnp
cmp
mov
dec
sub
xor
inc
cmp
repz
es
or
push
and
ret
adc
in
das
mov
scas
pushf
je
pop
stos
mov
sti
and
daa
pushf
daa
outsb
test
jne
pop
mov
sbbb
mov
inc
mov
dec
jg
in
ljmp
jo
insl
cmp
inc
rclb
movl
in
add
out
jne
adc
scas
jp
fwait
lea
add
in
push
sbb
stos
dec
adc
jl
aam
and
sub
loop
gs
scas
lock
outsb
xor
cmp
lret
gs
fistpl
subl
daa
sub
fistpll
rcll
mov
pop
mov
mov
repz
pop
push
cltd
xchg
data16
test
dec
mov
pop
movsb
push
mov
fwait
vpgatherqq
add
pop
repnz
sar
pushf
cmpsl
jle
pop
sahf
dec
popf
and
push
cs
sub
sbb
push
jmp
idiv
mov
xor
push
lods
adc
dec
or
xlat
in
adc
std
pop
xchg
sub
movsl
daa
jge
shll
add
outsl
ror
outsb
call
test
addl
out
negl
fidivl
popa
add
inc
iret
add
dec
jb
aad
dec
movsb
subb
mov
subl
adc
jnp
nop
jb
pusha
adc
sub
dec
jecxz
pop
mov
xor
lcall
push
adc
icebp
jp
fsub
mov
aaa
loopne
das
push
jne
inc
cli
aam
adc
mov
xor
xor
or
inc
outsl
add
mov
repnz
addr16
mov
dec
mov
lods
lret
push
test
pusha
int
int3
push
loopne
jge
stc
add
call
out
mov
dec
xchg
cs
add
mov
or
mov
cmpsb
aaa
xchg
mov
addr16
cmp
shlb
xchg
scas
or
stos
push
sub
sti
mov
bound
push
addr16
and
sbb
push
jmp
ret
testl
mov
or
mov
or
aaa
hlt
rclb
xchg
cli
add
lods
cvtpi2ps
xchg
dec
or
aad
xchg
out
loope
inc
fcompl
insl
add
sbb
jns
imul
fs
inc
xor
arpl
xor
mov
xchg
inc
pop
cmp
outsl
addb
fldl
pop
mov
popl
sbb
repnz
push
pop
aas
jo
aaa
sti
pop
data16
lds
push
loopne
jb
fmuls
in
cli
shrb
cmp
dec
sbb
xchg
xor
ficoms
sbb
push
jne
adc
leave
or
mov
mov
and
popf
inc
cmpsb
cmp
push
add
xor
cmp
or
and
fldt
scas
fildll
test
xor
lods
push
lods
cs
xchg
dec
pop
fwait
insb
and
adc
aas
and
inc
or
mov
fldt
cmp
adc
push
pusha
mov
sub
push
xchg
mov
in
addr16
mov
out
dec
mov
pop
test
inc
fcomps
insl
dec
sub
sar
pop
aas
cli
sub
xor
mov
popl
adc
nop
jle
push
stos
insb
push
fcomip
out
or
fisubrs
jb
iret
or
and
mov
xor
out
int3
sbb
fs
loop
aaa
sbb
stos
push
xor
cli
push
xor
inc
orl
push
fstl
fcomps
sub
call
jmp
mov
js
in
push
sub
xchg
popa
ss
icebp
sarl
jno
push
push
pop
fcompl
int
jb
stc
int3
sub
pop
mov
addr16
in
or
fimull
hlt
mov
sub
push
inc
inc
and
adc
mov
and
add
xchg
nop
pop
and
dec
pop
jmp
fdivr
sbb
xchg
lahf
icebp
fs
cwtl
into
shlb
test
std
sbb
push
xor
aam
sar
cmp
test
add
cmp
loope
stos
xchg
lods
dec
push
xchg
push
sbb
inc
sub
sarl
cmp
sub
xor
xor
pop
jecxz
push
out
addr16
test
xchg
adc
aaa
test
fwait
shr
adc
stos
dec
fdivl
dec
clc
mov
daa
or
mov
push
imull
or
rclb
xchg
int
xchg
mov
filds
pushf
cmc
test
fs
nop
ret
push
and
or
or
jbe
push
jno
mov
cltd
xchg
test
nop
out
jno
pusha
gs
dec
clc
pop
dec
mov
out
pop
xchg
sbb
ja
dec
push
mov
mov
leave
add
sti
cli
hlt
adc
arpl
sub
shlb
adc
dec
add
imul
and
std
nop
test
mov
pop
mov
lret
cmp
sub
pop
jmp
stos
push
mov
dec
xor
pop
add
into
shlb
add
lahf
cs
pop
ffreep
fmuls
and
sub
ror
or
lods
idivb
test
cmp
int3
fnsave
nopl
mov
sarb
xchg
cmp
adc
jbe
add
sbb
push
int
pusha
subl
jg
icebp
jo,pn
dec
sbb
int3
fildl
push
adc
mov
xchg
jp
cmp
sub
sbb
jae
adc
dec
addr16
icebp
icebp
clc
lods
dec
push
pop
das
scas
jae
icebp
test
daa
popf
dec
je
ljmp
sbb
push
mov
cwtl
xor
cmp
pop
jns
sbb
sbb
jmp
jne
lahf
add
addr16
or
and
dec
adc
ss
lods
call
mov
inc
outsl
and
or
mov
into
jp
dec
dec
loopne
lret
jno
adc
mov
jne
jo
adc
mov
sahf
imul
lds
ss
cmp
cwtl
in
lcall
sub
and
ds
cmp
mov
adc
xchg
test
inc
and
hlt
mov
mov
add
lock
rclb
mov
cmp
add
in
sub
insb
sbb
scas
sbb
adc
mov
mov
cmpsl
sub
and
ja
addr16
testl
leave
pop
dec
cs
dec
jns
and
pop
adc
rep
cs
and
adc
fisubs
movsb
xor
push
dec
mov
scas
add
aaa
inc
xchg
mov
jae
inc
in
test
sbb
test
adc
jne
add
pop
mulb
pop
test
mov
fsubrl
inc
je
sub
pminsw
addb
jae
inc
cmp
mov
dec
pop
mov
icebp
dec
jge
jge
mov
lret
sbb
pop
pop
pop
out
out
inc
ja
push
inc
jae
bound
push
or
addl
andb
fmuls
clc
adc
xchg
loop
dec
and
out
push
sub
add
mov
adc
or
shrl
and
jg
cmp
xchg
push
adc
push
xchg
sub
mov
jg
data16
pop
and
sbb
push
mov
add
cmc
inc
fmull
pop
cwtl
mov
push
ret
xorl
push
adc
call
icebp
inc
iret
adc
xchg
cld
pop
mov
push
bound
das
cmp
out
popa
gs
pop
cli
std
dec
sbb
pop
daa
dec
je
and
sbb
xchg
fisttps
mov
inc
insl
adc
imul
xor
dec
cmpl
jmp
xchg
lock
jge
filds
push
fnstsw
sbb
inc
add
jmp
add
cmp
sar
jns
les
jge
cld
js
push
xor
fsubs
jne
mov
xchg
add
or
dec
jbe
pushl
add
clc
add
jno
cmp
lods
ds
adc
in
dec
clc
ss
roll
dec
or
and
mov
inc
dec
xchg
inc
add
push
ljmp
ss
movb
push
out
inc
jmp
call
outsb
and
cmp
add
pusha
scas
mov
xchg
out
cli
test
mov
shrb
arpl
mov
jge
nop
cmpsb
xor
test
andb
xor
adc
xor
repnz
test
fwait
inc
popa
xchg
and
ret
mov
pop
in
push
repnz
mov
std
lret
data16
lahf
lcall
xchg
or
cmpsl
test
and
popa
shlb
imul
adc
push
out
push
and
add
loope
loopne
into
mov
add
push
jmp
mov
add
cmp
pop
and
and
or
sti
jg
test
mov
outsl
adc
das
mov
rcll
stos
pop
imul
mov
mov
pop
adc
sbb
mov
pop
icebp
inc
pop
aaa
adc
fimull
jmp
lods
cs
pop
mov
mov
insb
cmp
cmp
jbe
ror
js
push
mov
push
sbb
adc
aas
add
adc
ds
inc
rorb
stos
addr16
lahf
shrl
lods
mov
push
cli
sti
inc
mov
sub
pminsw
pop
insb
imul
call
sub
jecxz
icebp
out
ljmp
sbb
les
fsubl
sub
cmpsb
data16
xchg
add
xchg
mov
movsb
pop
popa
add
in
add
push
jne
subl
pop
shr
iret
jo
or
push
xor
xorb
xchg
sti
ds
ss
aaa
es
and
mov
mov
js
adc
mov
sahf
pop
jl
fwait
test
insl
ret
lds
fld
xchg
imul
movsb
push
es
mov
mov
or
je
sub
into
cmp
jge
ss
add
pop
pop
in
mov
add
mov
xor
mov
inc
rcll
mov
xor
loope
out
xchg
jae
fldcw
cmp
cmpl
dec
inc
adc
xchg
cwtl
add
push
andb
shll
push
mov
orb
fistpll
mov
aad
popa
cmc
mov
les
cmp
fdivrs
pop
in
mov
sub
push
push
pop
cld
stc
mov
xchg
xor
test
adc
adc
insb
mov
sbb
inc
sub
in
xchg
xor
adc
mov
stc
int3
icebp
movsl
test
jnp
ret
and
repz
cwtl
out
stos
push
insb
lock
scas
nop
jmp
clc
js
push
out
and
dec
bound
push
mull
nop
imul
push
pop
pop
cmp
lret
les
shlb
mov
int3
xchg
and
ja
out
lock
stos
imul
jecxz
lret
sub
push
add
addr16
loop
in
scas
push
lock
out
loope
inc
imul
icebp
xchg
push
sbb
push
jo
and
outsb
imul
inc
stos
daa
push
sti
mov
call
jae
or
test
mov
mov
mov
loope
pushl
inc
and
lods
dec
shrb
or
movsb
loop
shrl
sub
jg
pop
dec
inc
and
addr16
dec
fistpll
inc
pop
pushf
popf
insb
xchg
jecxz
jg
add
out
bound
outsl
xor
fmull
push
popf
ljmp
call
aaa
lds
stos
xor
mov
xor
bound
stos
mov
add
pop
mov
rcrl
pop
fbld
jge
pushf
xchg
test
ss
mov
ja
rep
scas
lret
mov
jg
mov
insb
rcr
or
imul
xchg
in
inc
and
jbe
jne
cmp
pop
jb
shrb
mov
push
xlat
xchg
shl
jp
sub
scas
stos
mov
cmpsb
movsl
outsl
adc
fdivrl
rcrl
xlat
sarl
shll
xchg
lock
mov
inc
movsb
xor
xor
nop
je
jo
int
dec
cmp
add
fcompl
push
xor
push
mov
jns
fdiv
mov
enter
xchg
bound
push
jl
fidivrl
mov
aam
jne
xchg
test
inc
sub
lds
xchg
pop
inc
inc
mov
sbb
repz
cmpsl
cli
and
mov
or
mov
mov
cwtl
test
mov
clc
xchg
outsb
push
aas
pop
stos
mov
sub
daa
enter
jb
mov
cld
sbb
inc
orb
cmp
cs
into
mov
dec
lods
out
sub
pushl
and
inc
cmp
dec
jo
jle
jg
shr
mov
mov
push
jp
sbb
push
repnz
fstps
gs
es
out
adc
mov
jle
pop
mov
aaa
mov
xchg
test
insl
inc
fs
add
xchg
or
in
or
ljmp
sub
dec
dec
addb
stos
dec
push
sub
ja
xor
adc
insl
jno
sbb
lahf
popf
daa
mov
push
flds
pusha
xchg
or
nop
jb
in
hlt
bound
enter
push
int3
aam
mov
int3
ficompl
sahf
es
int
shll
movd
adc
ss
xor
insb
aam
mov
addr16
mov
mov
test
insb
mov
or
test
dec
xchg
jle
xor
push
mov
mov
shlb
outsl
shlb
mov
inc
mov
adc
mov
insl
xchg
sbb
scas
cli
and
cwtl
push
xor
jb
adc
xor
scas
fs
insl
loope
mov
imul
in
repz
mov
cltd
mov
sbb
js
mov
xchg
hlt
and
and
enter
testb
mov
dec
push
xor
mov
pop
hlt
xor
mov
mov
leave
in
push
out
xchg
jns
sarb
ja
sbb
leave
adc
push
mov
inc
and
xchg
jmp
test
or
sbb
xor
push
clflush
sbb
insb
push
jge
xchg
pop
push
insb
gs
hlt
mov
sub
xchg
test
jmp
inc
ja
push
jbe
and
inc
or
mov
push
and
lods
roll
and
rcll
decl
in
cmpb
lock
xchg
sbb
jnp
inc
test
sbb
out
leave
sub
pop
inc
cmp
faddp
cmpsb
es
test
ss
xchg
push
mov
aad
dec
push
and
dec
add
in
push
and
lods
fstps
ljmp
fs
and
addr16
mov
aad
inc
shr
mov
js
nop
les
sbb
inc
rorb
mov
cmp
lahf
jae
dec
xlat
je
xchg
ror
lret
xchg
inc
xchg
add
mov
inc
andb
add
lret
leave
clc
lahf
or
mov
add
test
adc
int3
clc
add
shlb
lods
fisttpll
ret
adc
dec
test
push
push
cli
or
push
sbb
sub
sub
sbb
scas
sbb
inc
push
jb
sbb
cmp
sbb
orb
iret
xchg
mov
xchg
ja
jge
test
lock
and
in
cltd
xor
movsb
mov
xor
pushf
push
and
shrb
cli
jmp
and
jb
sti
xor
xor
outsb
ss
lahf
sbb
jo
mov
fmul
and
int
dec
out
ljmp
sahf
xor
sub
xor
cmc
cmp
mov
lahf
ret
push
sub
pusha
xor
sub
loop
aaa
adc
les
adc
sbb
lcall
ret
jae
mov
es
add
xor
pushf
jo
mov
lea
mov
rorb
sahf
pop
xchg
aas
cltd
dec
jl
fcoml
out
mov
xchg
sub
cmc
js
and
ret
neg
pop
xor
fwait
lds
das
inc
pop
das
mov
xchg
inc
sbb
sub
stos
sbb
push
ja
in
and
add
pop
aaa
adc
push
lods
cmp
mov
lea
mov
sbb
std
cld
lret
dec
lret
jge
sbb
mov
pop
and
inc
mov
and
test
movsb
sbb
dec
push
sti
mov
in
push
js
mov
dec
xchg
mov
gs
mov
pop
out
ja
sub
insb
mov
jae
shl
sbb
stos
fwait
pop
mov
xor
loope
push
inc
outsb
or
in
lcall
xchg
pop
cmp
out
out
mov
je
inc
stc
pop
hlt
testl
xor
push
ss
xchg
xor
sbb
int3
adc
movd
dec
adc
inc
cmp
and
cmc
pop
testb
push
jmp
es
insb
push
lds
mov
dec
in
jo
enter
xor
cmpsl
dec
mov
xchg
pop
add
repnz
lds
mov
pushf
popa
decl
lods
lcall
shll
mov
ret
inc
pop
jb
scas
into
enter
mov
mov
mov
test
lcall
sub
loopne,pt
cmc
xor
jne
test
fs
sbb
arpl
jnp
cmp
push
std
cli
or
xchg
add
inc
leave
cltd
inc
pop
shrb
mov
add
add
dec
lcall
loopne
ljmp
add
rorb
or
dec
mov
jmp
and
pop
mov
fdivrl
pop
xor
repz
add
addr16
dec
iret
sbb
add
es
fidivs
subb
mov
mov
push
xchg
lods
shll
jl
sbbb
xchg
pop
add
int3
sub
rcrb
mov
dec
cmpsb
int
scas
or
pop
fmuls
jmp
push
pop
adc
add
mov
es
pop
xor
push
pop
cmpsb
sub
leave
idivl
jmp
std
iret
repz
stos
pop
addr16
mov
or
aam
ljmp
lods
xchg
xchg
lret
in
sti
loop
push
dec
adc
xlat
loop
jb
in
call
jne
dec
mov
subb
mov
aaa
mov
ja
inc
cmpsb
inc
adc
and
adc
mov
call
sbb
mov
daa
add
xchg
rcll
dec
int3
rolb
or
rcl
or
fcmovne
xor
mov
and
addr16
jns
xor
cmp
lret
adc
stos
push
push
pop
mov
fsub
push
leave
orl
dec
xorb
jge
jns
repz
aaa
or
push
lds
ret
es
mov
jmp
insl
lahf
test
sub
scas
xchg
call
bound
loope
inc
stc
fldcw
jns
add
mov
sub
call
add
rcrb
pop
cmp
data16
jg
out
repz
lods
add
inc
mov
in
and
jmp
dec
fisttpl
xor
dec
mov
jns
rcll
les
fisubl
mov
mov
mov
mov
mov
popa
mov
mov
orb
stos
clc
inc
and
push
bound
iret
test
aaa
ss
in
push
and
mov
fisubl
push
loop
add
fsubp
out
dec
and
loopne
out
or
jmp
cmpb
or
pop
loop
mov
or
call
arpl
ret
dec
ljmp
pop
lcallw
dec
sbb
pop
gs
mov
ljmp
imul
cmpsl
negb
mov
dec
aaa
lods
inc
fnclex
cmpsb
or
out
push
push
fwait
repnz
jp
imul
dec
xlat
popf
mov
mov
push
jno
cmp
mov
add
xor
orb
cld
push
inc
loope
and
lods
jo
jns
pop
sti
jle
xor
mov
clc
sub
ds
scas
pop
mov
or
push
mov
sbb
popa
pop
in
daa
pop
xchg
adc
dec
aad
pop
xchg
inc
ja
mov
in
dec
xchg
test
mov
sub
pop
mov
dec
mov
unpckhps
test
clc
sub
das
xor
inc
adc
shlb
xor
xlat
dec
fbld
cmp
jno,pt
into
add
pop
in
sub
or
xchg
fwait
xor
pop
pusha
cmp
jl
sub
mov
jmp
into
movsb
push
inc
xchg
mov
pop
data16
jne
fdivl
gs
insb
shrb
stos
sbb
adc
clc
jns
and
adc
push
push
xchg
pop
negb
fsubrs
dec
popa
fs
fstpt
mov
sahf
stc
arpl
cli
in
outsl
sbb
sbb
add
xor
in
inc
push
xchg
pop
inc
dec
cmp
lret
add
mov
loop
xor
mov
xlat
adc
cmpsb
sub
pop
mov
adc
lret
mov
inc
data16
jl
bound
dec
mov
adc
les
lcall
lret
iret
pusha
loop
push
ret
inc
mov
jbe
loope
aad
fimuls
sub
dec
lret
jp
lds
mov
sub
push
inc
popf
cmp
sbb
jo
pop
mov
les
push
popf
gs
inc
imul
jbe
mov
cmc
sahf
not
insb
mov
loopne
sub
dec
out
jns
ja
cmp
lods
sbb
cld
in
cs
pop
add
or
loope
jmp
pop
call
lahf
adc
in
lret
push
sahf
test
cmp
shlb
jne
sub
shl
insb
js
inc
push
and
adc
aad
or
cmp
xchg
incb
pop
pop
sbb
call
dec
arpl
dec
fcmovnbe
push
fdivs
test
stc
jo
nop
xchg
mov
ljmp
add
pop
or
lods
imul
rcr
sbb
daa
lds
xlat
sbb
popa
enter
cmp
fmuls
and
pop
jl
enter
mov
pop
inc
iret
sub
sbb
dec
fcoms
mov
dec
mov
jp
push
mov
stos
ja
push
mov
adc
push
data16
insb
jp
mov
jl
jo
push
mov
xchg
lret
cmp
dec
or
push
xchg
mull
cwtl
repz
jl
ret
jge
sahf
rcll
stos
pop
mov
dec
adc
inc
das
in
addl
ja
adc
cmp
mov
or
xchg
cmp
mov
pop
mov
outsb
pop
push
lock
or
rol
cmp
pop
iret
xchg
rcll
and
jmp
inc
test
mov
js
enter
loop
shl
mov
adc
sub
movsb
dec
notb
jmp
xchg
ret
mov
pop
jp
mov
loope
test
stos
repnz
adc
loop
rorb
test
out
into
push
loope
pop
inc
xor
or
cmp
inc
jb
add
in
aas
sbb
das
shll
adc
pop
push
fabs
or
xchg
shlb
stc
repnz
or
jmp
shr
sahf
mov
pop
jbe
ret
insl
jne
mov
mov
inc
adc
sub
les
shl
fs
jmp
ret
inc
pop
add
icebp
inc
dec
mov
test
test
dec
sbb
jno
xchg
in
cmpsl
sub
repnz
jmp
in
loopne
adc
fldl
add
pop
or
or
enter
sub
in
frstor
or
divl
xor
sub
insl
dec
lret
mov
shlb
nop
adc
into
jg
cmp
jns
push
in
jmp
cmp
xchg
and
cmp
loopne
ljmp
fisttps
lret
xchg
les
mov
out
xchg
nop
repz
lahf
lea
and
pusha
push
or
daa
sbb
jecxz
xchg
loope
mov
loop
into
addl
push
outsl
int
inc
jmp
sarl
pop
lahf
iret
mov
in
arpl
das
pop
mov
mov
cli
pop
rorb
loopne
mov
movsl
pop
push
lcall
iret
mov
dec
aam
mov
jl
fidivl
mov
xor
icebp
mov
mov
leave
or
ljmp
ds
mov
inc
in
loopne
aas
or
jp
push
and
pop
notl
and
jle
fstpl
xchg
xchg
scas
sbb
cmp
inc
push
and
scas
mov
or
cs
fsubs
ljmp
test
add
pop
into
inc
fstps
or
das
push
jnp
mov
cltd
push
lcall
inc
into
outsb
and
es
incl
ret
dec
das
add
dec
fistpll
out
cli
xor
sub
in
fld
test
adc
jnp
iret
push
sub
sbb
out
test
call
rclb
in
dec
push
inc
stos
pushf
mov
and
fwait
shl
push
sbb
push
sti
ss
push
fistpll
and
loop
cmp
roll
out
push
mov
mov
in
push
jno
mov
out
aaa
test
std
mov
loopne
sbb
aad
add
sti
xchg
pop
les
or
dec
pop
dec
adc
test
push
rcll
ja
xor
fistl
mov
into
add
cmp
pusha
xchg
lods
inc
push
dec
out
mov
lods
sbb
add
call
push
push
ja
pop
xor
jge
stos
and
insl
loope
mov
sbb
push
das
in
add
cwtl
xchg
cmpsl
imul
addr16
xor
cli
adc
hlt
jge
call
cwtl
bnd
push
jnp
insb
in
stos
scas
jae
xchg
sbb
inc
xchg
inc
mov
jg
pop
pop
and
or
adc
sahf
or
lods
loope
popa
push
xchg
adc
sub
das
sbb
or
sbb
icebp
mov
loop
sub
xor
out
daa
daa
pusha
pop
inc
loope
mov
cmp
sub
jns
add
repnz
and
xor
push
movq
pop
jle
call
cmp
cmpsb
jb,pn
mov
jb
arpl
shll
aam
mov
sub
xor
xor
fxch
mov
std
shlb
cld
sbb
lock
sbb
adc
ss
xor
cld
cmpl
jo
repnz
outsl
sbb
cmp
test
cmpsb
iret
lods
cmp
test
xor
call
cmc
movsb
mov
or
xchg
jle
fdivrl
fwait
lock
das
pop
pop
subl
arpl
push
inc
std
ficoms
fcoms
pop
add
mov
icebp
div
xchg
inc
pop
lds
sarb
push
les
into
xchg
mov
lds
cmp
daa
and
dec
mov
ret
lcall
lcall
and
or
sarl
xchg
nop
sub
push
lea
faddl
aam
pop
aaa
fistpll
sub
and
pop
xchg
sbb
cs
insb
pop
and
popa
arpl
cli
add
inc
fcmovnu
pop
sub
sahf
push
sar
gs
cmp
jmp
sbbl
ficoml
pop
jnp
mov
pop
outsb
je
sub
lods
mov
push
in
cmp
lahf
stos
inc
push
xchg
dec
gs
out
vphadduwq
mov
xchg
dec
adc
test
adc
adc
pop
xchg
sub
cmpsl
inc
jo
mov
push
lcall
mov
imul
pushf
loop
jno
ljmp
or
inc
les
out
cltd
mov
fmull
loop
nop
nop
into
roll
xchg
pop
lea
dec
mov
sub
mov
inc
loopne
out
data16
sub
sbb
push
jne
shrb
add
mov
scas
icebp
in
leave
xchg
dec
push
push
jbe
rcrb
jne
cmpsl
xor
inc
std
in
and
mov
add
gs
out
sbb
es
addl
stos
imul
xlat
ficompl
xor
add
sbbl
jecxz
mov
cmpsb
or
push
scas
xchg
cmpsl
test
add
jp
push
out
sbb
jecxz
loopne
sub
subl
xor
cmp
or
xlat
out
cmp
in
mov
jne
and
ja
popa
aaa
out
push
jnp
lds
pop
xchg
sub
data16
mov
sar
jb
in
popf
ffree
and
sub
mov
adc
lahf
mov
test
and
sub
ja
outsl
test
inc
mov
into
shll
mov
jg
ljmp
ret
repnz
xchg
xor
lock
shrb
icebp
sub
jns
ret
je
mov
push
adc
jo
rcll
adc
xor
leave
mov
mov
xchg
jbe
loop
fldl
mov
test
jb
stos
js
je
in
jne
data16
add
mov
pusha
fdivr
sub
shrd
cmp
mov
inc
push
cmp
xor
mov
in
xchg
js
ss
jb
push
lock
pusha
push
mov
pop
mov
xlat
sbb
leave
add
fs
lahf
sub
ds
es
rcl
and
sarb
jg
insb
inc
pop
mov
je
sbb
cmp
xor
cmp
repnz
fimull
mov
stos
idivb
out
xor
pop
imul
fsubrl
sub
loopne
pop
adc
sti
xchg
je
mov
and
lock
mov
aas
les
test
or
cmp
fs
jp
dec
xor
outsl
rcl
xor
mov
cli
xchg
ja
pop
push
jle
movsb
sub
mov
mov
pop
push
fidivrs
fstpt
outsl
pop
ljmp
fisttpll
xchg
inc
stos
sbb
loopne
mov
add
nop
push
iret
sahf
dec
jmp
dec
jl
jp
mov
popf
jecxz
sub
xor
push
sub
pop
incb
outsb
push
add
aaa
cwtl
xor
pushf
xchg
mov
and
inc
lods
test
movd
and
dec
push
repz
cmp
push
sbb
in
in
push
xchg
mov
sti
sbb
dec
mov
cltd
ja
sub
or
addr16
adc
rcrl
inc
bound
sahf
xorb
push
movsb
notl
mov
mov
stc
out
jl
add
popa
add
dec
scas
pop
push
into
out
jb
push
icebp
xlat
in
je
mov
loop
insb
or
in
mov
call
xchg
xor
cwtl
imul
pop
and
dec
ss
pop
adc
hlt
std
shlb
fwait
or
sbb
cmp
hlt
scas
and
dec
or
fistpl
aaa
nop
aam
sbb
mov
mov
sbb
push
pushf
les
fstps
subb
dec
sub
and
xor
mov
leave
cld
repnz
dec
imul
push
cld
push
insl
mov
pop
pop
cs
inc
rcrb
dec
in
gs
insb
inc
dec
pop
xchg
push
xchg
sbb
fmull
outsb
pop
inc
jmp
xchg
pop
xchg
outsl
jge
test
sbb
sub
stos
stc
or
mov
xlat
fadds
sbb
cwtl
push
icebp
pop
repnz
xor
dec
lahf
stos
add
xchg
jnp
movsl
fxch
das
pop
jne
mov
or
shl
mov
jne
loopne
addb
mov
das
cmp
repnz
sbb
int3
fsubrp
pop
push
aas
cmpsl
cmp
adc
cs
xchg
jp
in
lahf
stos
addr16
mov
xlat
outsb
inc
dec
aaa
icebp
iret
mov
pop
fwait
std
pop
xor
sbb
shrb
data16
mov
jecxz
je
cmpsb
mov
scas
inc
aam
test
outsl
mov
out
sbb
or
mov
outsl
das
mov
fs
mov
aad
sub
mov
mov
cmpsl
sub
leave
test
push
xchg
leave
mov
adc
pop
sbb
push
fistpl
xor
dec
push
sbb
aaa
sub
ret
fimull
xor
in
cwtl
fiaddl
xchg
rol
mov
adc
and
fnop
xor
jmp
push
inc
mov
inc
mov
mov
stos
je
rcr
xchg
aam
out
test
std
pushf
xor
push
insl
insl
pop
push
xchg
mov
imul
xor
pop
push
add
jns
mov
rclb
cmp
lods
sub
add
dec
cs
in
jecxz
movb
lret
outsl
cs
mov
inc
int
ret
mov
test
imul
pushf
xchg
scas
pusha
add
imul
int3
jae
fcomps
inc
lcall
xchg
rorl
loopne
pop
sti
and
js
test
fs
push
xchg
hlt
xor
repnz
aas
inc
sarb
gs
enter
arpl
sbb
pop
cld
rclb
movsl
dec
push
jae
pushf
pop
sub
jecxz
fstps
lods
xchg
js
pop
dec
mov
test
outsl
gs
sahf
adc
xor
sbb
mov
sub
scas
and
xor
stos
jae
mov
repnz
ss
fisubl
mov
sbb
in
bound
aam
add
jecxz
in
icebp
jae
jno
xchg
push
stc
inc
dec
sbb
jnp
sbb
xchg
lcall
cmp
iret
enter
add
lret
dec
mov
xor
das
jo
adc
and
testb
je
cli
jecxz
cli
test
add
mov
leave
jne
or
in
add
and
adc
jmp
dec
call
cwtl
scas
out
cmp
mov
mov
mov
or
es
outsb
cwtl
jecxz
add
aaa
das
lods
cmpsl
push
test
in
test
imul
lret
mov
or
shlb
pop
push
add
push
dec
dec
push
adc
fcompl
jmp
xchg
pushf
setle
enter
je
push
jbe
fildll
shll
clc
int3
xchg
sub
lods
addr16
mov
test
xorb
popf
cmp
cli
out
ret
mov
out
cmp
sub
lea
cmp
jnp
loopne
add
shl
push
fwait
mov
int3
pshufw
mov
lods
sbb
insb
cmp
inc
mov
adc
push
sub
fcom
jnp
shll
outsl
sub
ret
fisttpll
pop
sub
mov
cltd
es
or
mov
xchg
add
adcl
fisttpll
jno
inc
push
adc
sahf
loopne
xchg
aad
aam
je
dec
mov
push
or
inc
add
adc
xor
and
xor
in
test
aad
push
cwtl
frstor
mov
pop
movl
add
mov
pop
cli
outsb
in
cmp
cmp
pusha
out
sarb
fiadds
add
xchg
out
ss
insb
call
xchg
xchg
std
imul
outsl
adc
xor
fiadds
pop
cmp
sub
fcomip
stos
pop
mov
adc
vcvtsi2sd
fmull
dec
lret
adc
imul
adcb
pop
push
es
rclb
out
mov
clc
mov
ret
cmc
nop
imul
or
das
xor
xor
add
jl
sub
lds
jne
mov
loop
movsl
xchg
xor
stc
mov
xchg
iret
test
xchg
es
inc
adc
push
or
arpl
push
out
pusha
aas
daa
sub
int3
pop
mov
into
pop
mov
outsb
add
or
mov
sub
xor
mov
outsb
loope
ds
out
dec
push
daa
popl
push
jecxz
das
imul
and
mov
cmpsl
in
imul
or
js
test
outsl
rep
loop
out
cmc
inc
std
mov
aaa
repz
sub
xchg
xchg
adc
sub
ret
loop
aam
pop
and
cmpsl
and
aad
dec
cmpsl
shrb
or
sti
mov
cmp
jns
daa
lds
inc
fwait
movsb
and
inc
rolb
cmp
shrb
out
pop
int3
cmp
push
add
ficoms
es
fs
popf
insl
pop
mov
jbe
pop
jge
les
int
inc
lret
lea
testb
cmp
int3
cmp
cwtl
test
sti
fildll
mov
inc
jae
xchg
wrmsr
adc
sub
mov
jg
ret
aam
ds
cmp
es
mov
daa
xorb
xchg
mov
add
icebp
and
sbb
testb
jp
add
popf
mov
jecxz
sub
rcr
shll
push
jl
mov
add
adc
clc
jne
dec
fsubrs
cld
and
aaa
popa
cmpsl
adc
sti
dec
or
mov
and
or
jne
push
inc
int3
xor
aam
ljmp
in
pop
cld
out
or
lods
das
negb
das
out
mov
inc
test
add
add
cli
lods
in
mov
int3
adc
iret
xchg
imul
imul
dec
sahf
inc
sub
xchg
jle
shll
add
arpl
add
fisubrs
push
inc
mov
jg
xchg
scas
dec
mov
loope
popf
push
dec
and
inc
jge
mov
push
lea
addb
cli
cmp
data16
mov
xchg
dec
cltd
or
and
jg
aam
in
repz
lahf
cmpsl
push
xor
pop
or
or
mov
call
setne
repnz
pop
pop
ud0
xchg
jle
scas
in
aam
dec
mov
aam
mov
pop
pop
push
js
push
add
lea
cwtl
adc
jle
mov
stc
imul
scas
mov
adc
mov
sbbb
pop
pop
xor
or
jns
sbb
popa
cld
adc
repz
rclb
out
add
pop
lret
push
stos
cli
pop
testb
popa
shrl
sbb
ljmp
out
add
mov
addb
movsb
jne
stos
lds
push
icebp
add
shrl
pusha
je
int
jns
push
popa
add
sarb
mov
mov
cmp
push
dec
stos
and
fndisi(8087
in
inc
fidivrs
or
inc
mov
les
imul
les
sbb
sub
pop
mov
sub
sbb
das
xchg
jmp
or
aam
leave
add
jne
inc
fistpll
je
movsb
push
xlat
mov
mov
add
les
push
pop
nop
dec
and
test
push
sahf
sbbl
push
xchg
pop
fwait
pop
sub
add
stc
add
and
push
shlb
xor
xor
jns
movsl
test
xchg
xchg
popf
addr16
movsl
xchg
dec
jp
arpl
fbstp
xchg
subb
imull
jne
das
out
arpl
sub
jnp
js
sbb
js
xor
push
pop
jge
xor
insb
mov
imul
sub
fwait
popa
add
movsb
lds
arpl
call
sub
in
movsb
mov
mov
es
mov
fs
js
shl
xchg
loopne
jo
test
dec
adc
imul
ret
je
fidivrl
ret
sub
nop
jae
push
std
popa
aaa
pop
mov
and
xchg
pop
arpl
ret
outsb
inc
jns
mov
mov
or
insb
imull
jle
fldenv
outsb
xchg
push
cmpsl
loopne
iret
jle
xchg
mov
subb
arpl
outsl
das
test
jecxz
push
dec
aaa
mov
dec
mov
stc
fcmovnb
or
cli
xchg
and
psllq
xchg
and
xchg
xchg
pop
dec
addr16
and
imul
arpl
or
daa
jle
jb
push
cwtl
hlt
dec
lds
dec
cmpsl
shll
mov
rorl
jnp
mov
mov
xlat
pop
adc
loopne
mov
shll
idivb
mov
push
sahf
repnz
shll
dec
repnz
and
scas
addr16
or
jge
push
mov
adc
push
fwait
cltd
leave
jae
les
cltd
cmp
divl
lcall
loop
pop
pop
mov
adc
ficompl
mov
cli
sub
orb
xlat
lods
jmp
mov
add
sbb
jp
mov
sbb
push
jbe
push
aam
xor
dec
or
mov
jns
clc
lods
les
and
fcmove
jae
push
std
add
xchg
push
and
adc
xchg
scas
imul
aas
and
xchg
pop
jb
and
cli
stos
cmp
or
lcall
ljmp
push
add
sbb
xor
xor
or
addl
call
sub
mov
pop
adc
or
mov
inc
data16
iret
push
aam
in
adc
add
fst
mov
rclb
xlat
mov
add
or
push
aam
call
sub
rolb
adc
push
movsl
pop
jmp
mov
test
cmpsl
jecxz
inc
aaa
dec
nop
add
sub
sub
push
pop
mov
int3
xchg
lea
cmpsl
cltd
outsb
lds
sbb
int3
inc
push
jb,pn
lsl
and
test
inc
and
movsl
push
lret
pop
inc
inc
out
bnd
lcall
push
loop
cvtdq2ps
das
pop
test
mov
out
or
add
push
sbb
fs
jp
imul
mov
cmpsl
imul
xlat
jb
cmp
and
test
sub
xor
pop
aad
cmp
inc
push
adc
imul
jnp
ja
dec
out
push
test
inc
add
adcl
xchg
xchg
inc
lds
mov
xor
popf
jp
movsl
out
xchg
mov
cmp
lret
dec
in
out
lahf
iret
push
adc
daa
jecxz
int3
fnstcw
pop
fsubl
sbb
push
iret
jmp
cmp
fadd
pop
sub
in
jmp
cmp
fdivp
mov
lock
in
iret
sub
xor
xchg
and
mov
leave
adc
bound
dec
xor
in
or
sbb
fstpt
mov
int3
ret
mov
das
aaa
sub
imulb
and
lea
lods
jnp
sub
sbbl
lcall
lret
xorl
mov
out
int3
ljmp
dec
and
stos
sti
or
mov
movsb
cs
cmp
rclb
std
pushf
lcall
add
fidivs
pop
fisttpll
adc
fcompl
data16
scas
add
adcl
lods
mov
shl
jo
dec
sub
jo
aas
cmp
pop
mov
sub
inc
xchg
insl
ljmp
addl
testl
push
and
aas
or
lahf
arpl
lock
adc
movsl
pop
pop
sub
int
xchg
dec
mov
nop
jle
dec
dec
lret
jns
cli
and
mov
sbbb
je
xor
cmc
mov
fsubrl
push
test
mov
or
adc
addr16
int3
in
jl
sti
push
pop
scas
in
inc
fwait
mov
data16
in
movsb
lret
outsl
push
push
add
pop
js
inc
jns
add
fstl
push
jp
outsl
outsl
mov
cmc
test
xlat
sbb
xchg
sbb
daa
sahf
orb
test
mov
xchg
mov
mov
mov
fbstp
addr16
mov
mov
stos
adc
mov
mov
insl
int
sbb
inc
movl
bound
mov
xor
rolb
repnz
out
sarl
sbb
adc
xor
and
mov
mov
fiaddl
loopne
data16
popa
mov
jo
rcrl
mov
pop
inc
inc
pushf
mov
in
mov
roll
out
mov
sti
pop
je
sbb
movsl
aad
add
adc
in
xor
ficoms
fmull
sbb
mov
push
imul
hlt
push
mov
cmp
das
inc
inc
add
aas
enter
add
xor
push
das
in
mov
cmp
mov
dec
shrl
ss
dec
fisttpll
pop
int3
mov
test
inc
mov
test
lret
fcmovu
adc
dec
jp
inc
mov
orl
dec
int3
into
add
mov
and
ljmp
inc
leave
add
mov
aaa
jb
lea
iret
push
adc
js
ljmp
mov
inc
sbb
mov
cmp
imul
jmp
add
fwait
in
imull
lahf
xchg
or
mov
add
mov
adc
or
nop
sbbl
xor
movsb
pop
in
inc
and
or
sbb
or
mov
fisubs
jp
mov
jecxz
jecxz
xchg
mov
leave
loope
sub
in
dec
daa
dec
mov
cli
movsl
or
aaa
ja
lock
ja
sub
push
out
fnstenv
or
fs
or
jnp
icebp
imul
js
mov
int
pop
aad
pop
cmp
add
sub
addb
hlt
pop
pop
xor
leave
cld
stc
stos
jo
and
add
sbb
iret
cwtl
subb
sti
in
clc
sbb
inc
mov
mov
pop
push
xchg
or
pop
out
and
stc
mov
ljmp
lods
ja
add
fsubrl
cmp
adc
dec
xor
addr16
inc
jnp
mov
cmp
cmc
dec
jg
add
rorb
xchg
mov
sbb
in
pop
sbb
pop
insb
inc
push
or
ljmp
repz
negb
lods
sub
hlt
fs
mov
gs
scas
inc
sbbl
iret
shlb
js
pop
cltd
ljmp
cmp
pop
pop
out
dec
xor
mov
xchg
push
aad
cs
popa
lods
aad
sub
ret
clc
and
jle
ret
mov
xor
iret
pusha
loop
lods
shrb
push
sub
jmp
add
test
roll
inc
aam
outsb
adc
arpl
movsl
mov
cs
add
fsts
nop
cs
cmp
or
push
xor
sbb
lds
push
mov
adc
pop
fmull
enter
in
fmul
adc
cmpsl
pop
scas
cmc
rcl
shll
mov
mov
sar
pop
mov
add
test
adc
xor
iret
mov
ret
jb
jecxz
dec
sub
push
fnsave
loope
das
and
rcl
sti
out
dec
stos
fldcw
jns
pop
insb
push
mov
js
pop
or
shrl
dec
sahf
jmp
out
xchg
ja
pop
js
xchg
xlat
std
xchg
push
add
repz
inc
sbb
insl
mov
push
xchg
sub
sub
mov
call
jecxz
xchg
andl
rorl
aaa
jmp
pusha
mov
pop
jno
repnz
cmp
sarl
leave
xchg
cmc
js
pmuludq
adc
popa
mov
mov
test
pop
imul
push
pop
mov
sahf
scas
mov
imul
inc
insb
push
imulb
lahf
sub
test
test
sbb
jge
lret
inc
cmp
lds
in
push
inc
xchg
mov
lcall
iret
mov
outsl
or
clc
push
andl
push
cmp
add
insl
das
jbe
cmc
pusha
fidivrs
notl
jecxz
rcrl
mov
jno
push
adc
mov
jns
xchg
cltd
stos
mov
sub
pop
mov
out
xchg
ds
pushl
adc
inc
add
in
push
or
ret
mov
jb
insb
xchg
ret
dec
mov
movsl
xchg
and
push
xor
adc
lret
xlat
rcr
xchg
loope
nop
lcall
rcll
aad
shll
pop
jbe
jae
ret
ret
push
inc
cmp
fs
fs
sub
js
in
xor
cmp
inc
or
mov
f2xm1
repz
fwait
shlb
jg
shrb
int3
push
aam
pop
cmp
fidivrs
shrl
ds
cmp
jo
sub
fildll
push
xchg
out
push
push
pop
daa
leave
aas
into
faddp
fsubr
xchg
imul
add
movsb
mul
es
rolb
xchg
cwtl
pusha
insb
dec
lret
out
cld
mov
sbb
mov
mov
mov
xor
das
sbb
adc
leave
adc
insb
outsl
enter
sbb
push
add
cmp
or
push
les
pop
jge
sahf
cmp
mov
popa
call
sub
or
mov
cltd
scas
ja
sbb
fwait
loop
add
es
ja
or
inc
mov
psrlw
mov
xchg
testb
sub
mov
mov
dec
scas
sub
fsubrl
inc
lods
sarb
inc
out
adc
or
cmp
cltd
out
adc
cmpsl
shr
fdiv
dec
mov
fwait
sbb
inc
adc
jb
dec
xchg
hlt
repz
xor
cli
jmp
pop
aaa
leave
xor
gs
rorb
sbb
lret
push
iret
jbe
lock
pop
mov
mov
outsl
dec
repz
cwtl
jno
mov
xor
and
mov
push
sub
push
xor
and
and
pusha
je
sbb
jecxz
enter
cmc
aas
fs
mov
dec
jne
jp
push
push
mov
cmp
test
subb
dec
jbe
sub
repnz
les
lret
add
into
sbbl
sbb
cmpsb
pop
xchg
fmul
loopne
gs
cwtl
je
xor
push
and
test
pop
repnz
jp
das
clc
cmpsb
subb
insl
test
jmp
mov
adc
jno
lea
jae
push
or
gs
xor
dec
aas
insb
hlt
add
outsl
mov
push
cmp
and
push
jnp
fdivrs
ds
push
jmp
daa
lods
lea
pop
xchg
mov
pusha
jae
sti
shrl
pusha
cmpsb
dec
xchg
xor
mov
scas
enter
pop
icebp
addr16
or
dec
enter
shr
jns
mov
sbb
xor
cmpsl
inc
dec
push
dec
iret
xlat
imul
xchg
ja
je
jns
jb
xchg
add
mov
inc
clc
mov
or
add
sub
push
jnp
call
cmp
mov
cltd
icebp
lahf
je
imull
sub
jge
cmp
aas
fistpll
insb
loop
add
mov
dec
test
jnp
in
test
sub
arpl
pop
xchg
das
dec
jecxz
popa
push
lods
jbe
cmp
pop
add
imul
aam
inc
inc
pop
insb
mov
insb
add
out
mov
push
pop
call
std
inc
adc
imul
ja
insb
scas
hlt
fiaddl
rorb
push
push
jmp
adc
jbe
sti
xor
fisubrs
ds
aaa
aaa
xchg
pop
jle
mov
xchg
mov
jno
mov
movsl
xchg
add
cmp
or
fsubl
pop
cmp
divl
in
xchg
cmpsb
or
adc
testl
or
mov
pop
testl
mov
insb
shrd
mov
pop
pop
xor
pop
cli
push
sub
mov
sbb
mov
clc
or
dec
fstpt
out
adc
out
jmp
imul
lahf
sahf
add
out
fdiv
lcall
cli
cli
sub
xchg
xchg
rcll
ret
or
dec
ljmp
sarl
inc
push
idiv
jecxz
mov
and
jle
sarl
pushf
pop
mov
test
inc
lds
jp
push
mov
pop
or
mov
gs
jl
xchg
dec
sub
shrb
int
out
loopne
loopne
loop
add
lret
dec
dec
dec
cmp
cmp
add
fdivrl
in
lret
loop
sub
mov
in
outsl
xor
int
xor
jg
mov
int3
fisubrs
push
push
xor
dec
daa
lahf
adc
nop
add
add
stos
enter
xor
sub
jl
adc
stos
mov
add
movsl
out
add
xor
cmpsl
push
xchg
add
xor
jl
ret
in
lds
jmp
dec
cmpsl
pushf
mov
ljmp
shll
int
aam
fsubrs
add
test
cld
stc
scas
flds
outsl
sub
pop
jmp
icebp
push
sbb
sbb
lods
push
and
xchg
adc
and
mov
rcll
xchg
addb
mov
inc
in
push
pop
and
xor
fwait
pop
push
mov
fwait
daa
mov
xorl
and
inc
dec
mov
pop
xchg
inc
sub
jne
imulb
cmp
inc
data16
sbb
das
cli
and
lds
mov
rcrl
int3
mov
decb
movsl
or
adc
jl
orl
xor
sbb
shl
popa
mov
in
or
pop
jno
xor
push
loop
add
push
fidivl
arpl
mov
sti
aam
mov
xlat
push
push
jecxz
rclb
mov
movsb
xchg
test
dec
push
push
cltd
loope
stc
and
jmp
mov
add
jge
xchg
in
mov
lods
lahf
int3
cmc
xor
jle
push
jg
insl
jecxz
lods
jno
call
ret
xor
and
pop
notl
sti
sahf
push
add
jo
lcall
jmp
push
xchg
lea
jns
pop
test
arpl
xor
clc
xor
movsl
int
pop
inc
mov
sbb
mov
shll
pushf
out
call
outsb
outsl
test
loopne
out
pushl
enter
jbe
cmpsb
pop
pop
ja
call
ret
inc
test
xchg
std
lods
call
jne
aad
add
jmp
repnz
sbb
pop
fists
or
in
rorb
movsl
jno
jae
in
jle
mov
cmp
loop
mov
mov
and
push
sub
test
rorb
scas
sbb
push
pop
out
notb
mov
mov
lds
jnp
insl
pop
jle
push
in
mov
and
aas
les
inc
push
or
jle
jp
lock
sub
out
mov
testb
outsb
pop
jp
aaa
push
sbb
xchg
push
or
xor
cmpsl
push
push
or
test
aaa
jle
out
jecxz
mov
mov
repnz
push
mov
push
add
pop
in
or
mov
fdivr
test
inc
lret
push
rcl
addr16
out
and
xor
add
xchg
inc
jae
xor
add
movsb
sbb
arpl
mov
sbb
jecxz
mov
pop
push
jne
in
inc
fnstenv
icebp
xchg
pop
adc
adc
inc
ret
jns
adc
dec
mov
sub
data16
adc
push
sbb
shr
mov
dec
push
imul
rcl
xorb
loope
push
arpl
sbb
lret
xchg
clc
sarl
jecxz
das
hlt
or
pop
js
out
xor
nop
cmpsl
pushl
pop
icebp
int
je
dec
iret
mov
in
cmp
mov
out
outsb
out
pusha
imul
ret
das
and
fimull
adc
mov
fsubl
and
mov
cld
mov
inc
outsb
sub
xchg
or
repnz
cmpb
pop
cmp
pop
adc
int
jo
outsl
in
je
ficoml
movsb
inc
xor
pop
rdrand
cmp
lds
ficompl
jle
filds
sub
addr16
mov
push
lahf
cmp
cmp
cmp
jae
pop
sbb
sahf
rcll
shlb
faddp
inc
inc
jmp
and
outsb
or
inc
cmp
addb
pusha
jg
pop
xchg
mov
xor
cmp
adc
dec
xor
jecxz
xchg
repz
pusha
scas
out
mov
xchg
bound
xchg
push
sub
daa
out
lcall
das
push
ss
fistl
pop
out
and
jae
mov
add
sub
js
scas
sbbl
jae
test
fsubr
push
mov
mov
add
or
mov
js
dec
jne
inc
cmp
mov
lea
pushaw
gs
mov
xor
fsubrs
add
pop
and
scas
clc
xchg
pushf
mov
cld
je
xchg
xor
jg
insb
outsb
out
jp
fdivrl
fistpl
mov
sti
shll
dec
pop
inc
aam
clc
mov
not
lds
hlt
popa
into
das
push
iret
loopne
add
outsb
outsl
ficoml
xor
scas
call
mov
push
inc
pop
jp
xor
lds
out
mov
push
add
sarb
sbb
sbb
in
sbb
lea
inc
push
js
mov
out
cmc
xchg
lcall
push
cmp
push
lods
cli
fsubl
pop
pusha
es
lahf
ljmp
stc
fs
cmc
nop
mov
daa
xchg
roll
inc
add
aad
repz
dec
cmp
mov
xchg
push
mov
fwait
add
ror
inc
and
fs
pushf
pusha
cs
jge
push
out
xlat
xchg
mov
jbe
sahf
push
cltd
sbb
add
lods
mov
repnz
notl
aas
scas
imul
add
faddl
push
mov
cli
arpl
dec
cmc
shll
fcmovbe
mov
aad
mov
inc
jp
pop
aas
pop
sarl
in
mov
loop
or
push
inc
in
mov
cltd
jns
jg
rolb
push
orl
add
and
inc
int
cs
pop
or
xchg
cmp
mov
psubw
data16
xchg
dec
push
sub
in
repz
xor
dec
add
and
jmp
shll
mov
dec
mov
or
fwait
mov
and
stos
fstpt
loope
or
push
pushf
xchg
inc
pop
push
sub
lcall
pop
icebp
add
sbb
mov
rol
mov
sub
sub
jge
or
test
mov
adcl
incb
sbbb
lcall
mov
sbb
cmp
xor
faddp
outsl
popl
add
out
jne
jns
or
mov
sahf
xor
aaa
mov
dec
sarb
and
hlt
arpl
mov
in
jp
jmp
add
inc
inc
imul
lret
out
adc
jae
inc
xorl
fisubrs
sbb
shlb
in
es
js
insb
movsl
fbld
hlt
sti
adc
mov
imul
std
mov
fcmovne
or
mov
pop
in
pop
push
clc
hlt
arpl
aad
add
or
mov
test
bound
sti
mov
mov
mov
cltd
sbb
jge
bnd
xchg
push
pushf
jae
cmpsb
dec
orb
sti
je
push
aas
ja
call
out
push
in
outsl
rcr
cmp
push
mov
xor
movsb
cwtl
test
pop
call
sub
scas
and
in
pmullw
lret
inc
mov
stc
add
repz
or
mov
adc
ss
inc
dec
inc
or
inc
sub
out
push
lahf
xchg
lods
cmp
ja
sbb
stos
adc
mov
lock
into
sub
sub
data16
js
inc
sbb
xchg
les
mov
mov
jns
test
dec
xor
iret
or
inc
shrl
fisttps
or
dec
xchg
rcrb
stos
sbb
mov
lea
loope
jae
in
ss
outsl
lret
mov
mov
mov
clc
dec
fstp
pop
lahf
xchg
push
pop
xlat
fmul
sbb
fiaddl
daa
dec
xor
daa
jns
jl
jle
dec
lret
cli
xor
fwait
ds
add
push
and
cmp
daa
sbb
das
jno
data16
xor
xchg
insb
std
dec
mov
sbb
add
dec
fildl
mov
roll
pop
xchg
test
push
jns
xchg
popf
loopne
jl
push
test
push
pop
mov
loopnew
or
mov
pop
cmp
cltd
gs
ficomps
icebp
mov
cld
cmpsl
sub
and
xchg
or
and
pop
mov
roll
data16
outsb
clc
cli
popf
idivl
sbb
jne
stos
test
ret
jns
mov
ret
les
movb
aas
js
push
cwtl
out
push
mov
ret
call
mov
aad
enter
jg
out
xor
xchg
rclb
push
mov
loope
push
std
fdivs
sahf
setp
pop
sbb
ret
cwtd
in
add
stos
jle
das
add
insl
jg
nop
dec
jmp
add
out
je
push
data16
dec
or
hlt
hlt
or
xor
std
adc
scas
pop
js
or
inc
jge
lock
pop
jns
pushf
aam
iret
shll
scas
inc
jb
scas
add
aas
lahf
mov
test
dec
inc
cltd
js
pop
lea
pushf
repz
cmpsb
lds
mov
sub
inc
into
lock
in
jle
arpl
scas
imul
das
xor
jmp
repnz
sbbl
dec
ret
ret
imul
xchg
out
dec
add
cs
test
movsl
out
or
test
or
in
fimull
mov
xor
addl
jmp
fcomip
xchg
cmpsl
mov
addb
xchg
sub
mov
popa
lahf
icebp
and
sahf
mov
push
insl
xchg
sbb
ret
aam
push
aaa
cmp
fidivrs
pop
mov
mov
push
fwait
pop
dec
push
scas
cmp
or
rorl
xor
inc
and
push
pop
divb
add
cltd
xor
lret
mov
lret
mov
jle
sub
inc
push
lods
jl
cmp
adc
gs
pop
js
inc
lds
fs
pusha
push
ret
push
iret
mov
mov
dec
mov
setbe
and
dec
js
push
mov
xchg
inc
insb
gs
jg
cld
and
lods
adc
stc
repnz
inc
add
cld
repnz
shll
xor
out
scas
inc
roll
aad
add
adc
add
and
fisttpl
into
call
pop
or
lods
xor
loop
std
sbb
sub
insb
xchg
jns
or
sbb
xchg
xchg
or
rolb
mov
mov
cmp
mov
clc
jl
loope
cmpsb
xchg
aaa
dec
andb
jae
xor
adcl
ret
mov
push
addl
xchg
test
lds
les
outsb
xchg
cmpb
lods
inc
aad
mov
loop
or
sub
xchg
xchg
pop
mov
xor
dec
xchg
mul
adc
add
pusha
int
outsl
fcoml
push
xchg
aas
shlb
mov
mov
add
lock
or
ret
jg
mov
imul
loop
or
xchg
mov
sbb
lea
adc
mov
add
jle
addb
icebp
push
rcl
imul
test
pusha
sbb
or
push
mov
xor
push
insb
daa
xor
lods
mov
and
push
sub
pop
or
sbb
add
ficompl
dec
cmpsb
or
inc
mul
inc
test
and
shlb
cmp
xchg
int3
das
jmp
adc
add
sub
push
inc
clc
jl
sbb
mov
das
jbe
loopne
jae
les
rclb
lea
pop
mov
in
pop
sbbl
xchg
xor
jmp
in
sub
add
mov
shld
add
fsubs
movsb
mov
push
cld
in
rsqrtps
dec
inc
aad
adc
adc
mov
adc
pop
and
fists
sbb
in
inc
je
jl
sub
cmp
add
mull
push
shlb
dec
xor
mov
xor
inc
jecxz
in
adc
jno
xor
jnp
mov
js
push
sub
fisttps
mov
call
inc
dec
shrb
xchg
iret
inc
sbb
mov
pop
dec
nop
lahf
cmpb
and
fldl2t
fdivrl
pop
dec
aas
xchg
and
push
cmp
jo
movsl
js
loop
jge
popa
cltd
mov
stc
pop
clc
push
push
je
lods
mov
mov
mov
cwtl
mov
add
sete
push
xchg
stos
insl
sbb
cs
xor
addr16
mov
dec
subl
popf
jmp
add
mov
or
inc
imul
sub
xor
and
nop
insl
jne
push
fmuls
adc
fisubrl
fiadds
call
sbb
jmp
xchg
push
sbb
mov
xlat
fdivrl
pusha
lods
sub
dec
pop
shrl
pop
ret
mov
adc
out
jge
pop
sahf
dec
mov
pop
adc
cltd
mov
xor
jecxz
mov
rcr
mov
add
js
mov
mov
jae
jmp
xor
imul
dec
aaa
cmpsl
xchg
lock
jge
stos
sbb
or
es
mov
xchg
mov
shr
sbb
mov
scas
push
adc
jbe
nop
mov
test
addr16
hlt
dec
pop
notl
fdiv
inc
lret
push
dec
out
push
mov
into
inc
jae
fisubl
sub
mov
leave
loopne
and
add
aad
gs
mov
pushf
sub
lahf
sub
pushf
xchg
cmp
sbb
in
inc
movsl
xlat
mov
dec
dec
cmpsb
mov
pop
push
repz
ret
mov
movsl
mov
push
xlat
pop
ss
push
popf
mov
xlat
pushf
sahf
into
push
sbb
mov
push
xchg
jl
clc
pop
pop
ret
push
push
adc
mov
adc
add
shlb
mov
aaa
adc
and
cmp
pusha
gs
outsb
xor
cld
ret
rol
fwait
lret
xor
dec
repnz
sahf
mov
cmp
mov
sbb
mov
or
push
and
mov
dec
scas
cmpl
mov
and
in
stc
pushf
push
jo
add
push
or
pop
and
cmpsl
xchg
loopne
movsb
pop
shrl
xor
sahf
scas
adc
insb
or
scas
repnz
cwtl
scas
loopne
mov
mov
test
push
rcl
sbbb
jne
sub
sti
aaa
inc
fwait
lock
or
mov
sahf
loop
pop
mov
ret
inc
fs
out
jmp
dec
cmp
mov
mov
daa
lahf
fwait
aas
lcall
jle
pop
fstl
movsb
mov
mov
cwtl
push
rcll
mov
sub
xchg
sbb
imull
add
push
scas
push
in
hlt
dec
cmc
test
rolb
clc
idivl
xchg
fnstsw
ja
xorl
mov
add
inc
dec
add
add
xor
ffreep
sub
cwtl
push
inc
xchg
jl
sub
add
sub
push
ds
loop
je
rorb
inc
aad
mov
jo
cs
xchg
insl
andl
or
es
dec
mov
inc
inc
out
into
jmp
sti
and
lret
dec
mov
mov
loop
and
stos
or
dec
outsl
xchg
adc
std
loope
push
lock
je
push
bound
loope
in
shlb
jecxz
mov
cld
scas
fdivrp
mov
jne
mov
dec
pop
movsb
mov
ret
ljmp
lahf
adc
and
sub
cmp
stos
lods
ds
fidivl
and
sbb
push
pusha
lods
xchg
shl
mov
cmp
nop
jns
xlat
ss
fisttps
leave
aaa
stos
jmp
mov
sbb
fwait
cmpl
int
mov
cli
lret
mov
imul
cmp
sar
jl
pop
fwait
mov
pop
daa
es
sub
fstpt
ja
jo
xor
push
das
lea
xor
xchg
mov
sahf
movsb
aam
push
dec
cmc
aad
mov
stc
jne
dec
fistpll
sub
push
mov
repnz
xchg
cmp
mov
sub
cmpsl
pop
movsl
and
lret
inc
and
mov
inc
cmovge
outsb
insb
dec
aaa
fcoml
negb
xchg
popf
mov
mov
fimuls
sbb
add
and
sub
inc
add
rcl
or
push
es
mov
movsb
lds
xor
sub
call
sub
pop
jb
rcll
and
pop
orl
cltd
loop
jg
or
jge
outsb
dec
rcr
pop
aaa
int3
push
repz
out
aaa
pushf
fldl
bound
mov
imul
xchg
arpl
loopne
push
ret
xor
xor
push
push
ja
mov
mov
iret
lds
bound
fwait
sbb
test
lds
sbb
pop
dec
mov
cs
jmp
pop
mov
mov
hlt
dec
rorl
repnz
adc
or
xor
outsb
push
dec
adc
lea
shr
cmp
ret
push
jno
sbb
popa
dec
arpl
fldl
mov
mov
loopne
rclb
mov
mov
mov
add
xchg
mov
int3
jle
cmpsl
sub
fstl
ret
push
lahf
stc
inc
fcmovne
sub
cltd
mov
xor
scas
mov
hlt
nop
movsb
pop
inc
mov
xchg
mov
adc
sbb
adc
and
popf
jns
jns
dec
xchg
inc
jmp
xchg
push
adc
and
mov
adc
add
adc
das
lods
gs
xchg
xchg
rcrb
mov
aam
ret
push
fstl
mov
dec
jne
imulb
push
push
xor
out
aas
nop
shlb
enter
or
xchg
push
xchg
inc
mov
lods
fldl
in
pop
xchg
jae
xchg
mov
movaps
mov
adc
outsl
cld
xchg
je
loop
jae
mov
mov
push
dec
add
scas
inc
jg
or
lahf
js
fwait
or
xchg
mov
fstpl
lock
inc
sbb
mov
fcoms
dec
dec
std
ja
push
xchg
repnz
sbb
mov
ss
xor
push
jae
gs
push
inc
cmpb
mov
jns
test
lds
jg
fsubr
cmp
adc
mov
imull
mov
xor
loopne
imul
adc
mov
out
pop
lods
add
lea
mov
mov
push
adc
inc
jno
or
je
addr16
mov
loopne
rorl
test
xor
inc
stos
cmp
notb
push
xor
mov
push
subl
xlat
xor
push
mov
mov
movl
out
addr16
jb
jp
fisttps
mov
lret
pop
loope
or
test
loop
fld1
xchg
popf
andb
aad
rcrb
or
fisubrl
in
insb
mov
sub
stc
mov
data16
sbb
notl
test
lods
es
arpl
xor
mov
pop
xchg
cmc
jnp
or
in
pop
shlb
shrl
enter
adc
mov
fdivp
cmpsb
adc
push
lock
push
es
sub
or
or
fiadds
daa
mov
sub
mov
std
idivb
sbb
rcr
dec
jnp
idivb
sti
sahf
xchg
pop
fistpll
pop
cmc
lret
inc
xchg
xor
push
cmp
jb
dec
pop
fcomps
dec
and
mov
mov
xchg
mov
cmp
mov
dec
or
fstps
test
or
push
ljmp
jge
mov
ljmp
inc
xor
dec
dec
or
dec
imul
and
jecxz
das
sbb
mov
imul
sbb
imul
push
pusha
jnp
xchg
fwait
out
fwait
test
imull
and
ljmp
scas
jae
int3
push
inc
or
jb
shlb
sub
cmpl
pop
adc
sub
mov
mov
mov
mov
test
test
bound
in
mulb
jecxz
mov
add
push
js
mov
not
jbe
jl
hlt
xor
out
mov
popfw
test
push
ficompl
rorl
and
add
test
push
arpl
out
pusha
lea
jecxz
std
xor
cmp
xor
lret
cmp
sti
xchg
icebp
in
popa
pop
test
mov
stos
test
push
popf
repnz
int3
jbe
popf
mov
inc
and
lock
out
repz
inc
cmp
inc
and
push
push
sahf
enter
xor
add
inc
mov
aad
add
push
fdivs
mov
icebp
iret
lss
jmp
stos
pop
sub
cmp
push
sbb
jbe
push
jge
data16
or
roll
fsubs
add
mov
jns
xchg
mov
jb
faddl
xchg
adc
jmp
fs
in
roll
shll
adc
pop
pop
lods
sbbb
mov
rclw
and
pop
sub
scas
or
add
imul
pop
ja
jbe
cmp
int3
outsb
sub
cmp
mov
rcll
add
lds
pushf
push
cmc
cmp
repz
jns
and
sbb
adc
cmp
adc
pop
sub
fld
cmp
call
popa
hlt
rorb
xlat
and
cmp
out
sub
push
popf
bound
imul
outsb
mov
out
adcl
inc
dec
pop
clc
arpl
cmpsb
sub
jbe
hlt
add
cltd
push
dec
xchg
cltd
incl
jp
ljmp
cmp
pop
jb
mov
pop
adc
ret
pop
jg
pop
test
pop
jbe
call
in
inc
jmp
loop
testb
into
pop
sub
mov
sub
pop
cld
mov
addr16
push
repz
inc
popa
xchg
pop
addr16
push
lret
lret
and
xor
bound
lcall
movsb
push
fnstenv
mov
dec
addl
xchg
imul
pop
daa
adc
push
xchg
xchg
push
mov
lret
fdivl
push
add
aaa
xchg
jbe
mov
xchg
roll
pop
lret
push
and
fdivr
je
cmp
inc
pop
sti
lock
xchg
pop
push
popf
sbb
xor
in
icebp
fnstcw
push
sub
jnp
pop
inc
push
nop
mov
repnz
adc
push
inc
enter
mov
fisttps
or
dec
dec
addr16
adc
bnd
push
jp
dec
jecxz
mov
push
xor
stc
das
add
stos
lcall
xchg
orl
adc
int
xchg
je
addb
pop
testl
mov
test
daa
mov
repnz
jb
ffreep
call
icebp
inc
ret
cmc
mov
jne,pt
pop
inc
mov
mov
fadds
push
jecxz
shll
ljmp
push
cmp
sbb
stos
dec
popf
inc
into
imul
aaa
insl
lret
xor
loope
cld
ret
lock
cmpb
add
push
sub
push
xor
aas
push
leave
xor
mov
fadds
pop
cmpsb
push
lods
popa
push
aam
movsl
adc
xor
idivl
dec
fildll
sub
mov
pop
outsl
loopne
mov
inc
js
mov
mov
or
and
mov
xor
cmp
fs
inc
adc
dec
sub
pushf
mov
add
mov
fdivrl
lea
stos
rorl
mov
jg
rcrb
pop
mov
mov
pushf
popf
add
es
pop
push
std
pxor
xchg
mov
enter
mov
push
push
jne
lea
mov
in
cmovo
push
cmp
pop
jge
lcall
xor
gs
imul
pop
dec
mov
lock
xchg
jo
out
rorb
dec
jb
int3
dec
cwtd
out
jmp
push
ret
int3
movb
mov
sub
subb
mov
mov
xor
scas
es
jle
mov
js
ja
pop
daa
movl
lcall
mov
xchg
jmp
subl
inc
lahf
sub
test
cld
fimuls
ja
push
jle
loop
std
in
adc
mov
ds
push
mov
xchg
mov
sbbb
push
enter
jmp
sub
or
loopne
jnp
mov
xor
shl
mov
negb
push
mov
and
mov
mov
std
sti
pop
jge
adc
push
jo
or
test
and
lret
mov
inc
out
mov
cmp
int
push
sub
or
mov
es
cmc
iret
dec
dec
dec
adc
xchg
repz
jns
int
adc
push
inc
pushf
bound
jbe
int
std
pop
es
shl
or
int3
jecxz
pop
jns
add
sub
add
mov
pushf
jg
jae
jg
ds
jo
daa
bound
es
cmpsb
orl
mov
cli
hlt
jne
das
xchg
cmp
fistpll
pop
bound
xchg
andl
jae
ficompl
xchg
mov
test
iret
sub
and
inc
into
out
out
test
mov
dec
repz
andb
in
lahf
cmp
fidivs
dec
cmp
push
add
adc
xor
call
stos
pop
jno
dec
sub
jae
mov
sbb
dec
adc
leave
dec
mov
mov
imul
mov
sbb
sbb
pop
leave
stc
mov
andb
and
test
cmp
jecxz
lock
clc
idivl
xchg
fnstenv
out
sti
sub
scas
mov
cmp
jnp
fisubrs
dec
scas
push
mov
mov
outsb
add
mov
or
into
pop
pop
cmpsl
push
xchg
adc
add
dec
mov
cmpsl
cmc
cli
adc
jo
hlt
scas
cmpsb
lret
aam
subb
arpl
sub
push
movb
ret
or
mov
js
cmp
dec
out
jecxz
cmp
mov
aas
pop
jg
jge
and
loopne
mov
pop
pop
adc
dec
mov
je
push
scas
hlt
fsubs
xchg
ret
fnsave
push
loop
jb
mov
cmp
int
jne
xor
cli
aas
cmp
mov
mov
sahf
ret
fchs
xlat
and
cmpsb
sub
dec
daa
inc
in
xchg
mov
pop
sti
dec
fwait
stc
push
lock
or
lret
aad
mov
lret
mov
jge
pop
mov
xchg
mov
je
cmc
fisttps
mov
or
sub
ss
dec
imul
cld
scas
fnstcw
xchg
scas
mov
mov
mov
arpl
sbb
inc
xor
ljmp
daa
das
inc
lret
cmp
stos
fwait
rorl
jle
jl
es
xchg
pusha
loop
icebp
xchg
xlat
ja
out
and
lcall
or
das
and
clc
xchg
shrl
pop
jbe
aaa
or
mov
pop
fiaddl
jle
data16
shll
cld
inc
mov
mov
movsl
xor
inc
or
mov
push
jle
lcall
pcmpeqb
cli
imul
jb
xchg
mov
xchg
lock
and
hlt
scas
jns,pt
mov
in
jbe
inc
lds
jecxz
loop
push
testl
aad
dec
in
xchg
lahf
ret
notb
mov
sbb
pop
das
or
sub
jmp
dec
pop
and
arpl
loope
xor
sbb
call
scas
ja
fisubl
sub
sub
dec
dec
add
loopne
or
cmp
lret
lret
mov
jecxz
xchg
cmp
pop
xorb
sub
roll
push
cmp
scas
fdivrl
mov
or
cmp
loopne
and
jl
ja
cmp
bound
and
xor
call
push
out
push
xor
xor
das
cmpsl
jl
arpl
mov
pop
gs
push
mov
stc
dec
dec
pop
inc
pop
data16
cli
lret
add
jmp
fnstsw
adc
inc
inc
jbe
mov
lret
ficoms
adc
arpl
movsl
inc
pop
jno
add
aas
sti
repz
pop
shll
pop
in
std
in
lahf
stos
es
xchg
in
adc
and
iret
out
add
sbb
add
mov
xchg
sbb
cld
stos
pop
test
dec
pop
jle
test
sti
inc
aad
lods
loop
test
aam
inc
cmc
pop
adc
stos
mov
sbb
sbb
adc
push
loop
sbb
lods
lods
jmp
sub
pop
or
std
iret
mulb
cltd
dec
mov
repz
ds
mov
into
lods
push
mov
pop
add
dec
fdivr
add
xchg
dec
incl
popf
int
mov
ret
iret
into
pop
lret
getsec
jge
xchg
lahf
xor
push
xchg
orl
aad
adc
mov
in
sub
and
sbb
nop
xchg
fs
mov
xor
xchg
not
test
mov
repz
jmp
cmp
ffreep
loopne
sub
das
call
add
sbb
ret
cmc
pop
sarb
dec
pop
xor
pop
repz
cmp
sarl
mov
leave
mull
icebp
imulb
in
in
movsb
jne
stos
test
ds
arpl
outsl
stc
repnz
leave
aam
jle
cmp
pop
leave
test
adc
stos
test
aam
xor
iret
lea
mov
inc
fs
mov
ror
mov
int
jle
sub
sub
sub
and
fcoms
negl
cltd
mov
test
inc
into
test
fbstp
and
adc
xchg
popa
rolb
je
dec
dec
push
inc
shlb
adc
mov
jmp
movsb
lcall
ljmp
test
std
mov
mov
jge
sub
into
imull
out
push
repz
jge
add
loope
pop
jp
and
xor
sub
imul
aad
orb
outsb
sbb
je
inc
push
xchg
cld
mov
inc
je
insb
inc
jb
repz
inc
pop
repnz
int
pop
inc
xchg
mov
pop
mov
or
mov
fstpt
cmc
divl
fwait
movsb
push
movsl
or
fcoml
push
inc
mov
in
lods
sbb
sub
aad
out
pop
adc
fwait
idivl
repz
sbb
cwtl
outsl
loop
subb
int
js
fstps
mov
les
mov
sbb
out
leave
movntps
sbb
push
cmp
subl
xlat
jnp
and
jl
in
and
mov
sti
fnsave
cmpsl
iret
xchg
lea
sbb
shrl
sub
cli
test
inc
int
adc
and
dec
pop
sub
fdiv
pushl
addl
mov
lods
jg
and
lock
jnp
dec
shlb
nop
ds
add
dec
scas
test
ret
in
pop
xor
fcompl
or
fwait
adc
sti
pop
loop
and
adc
daa
jbe
xchg
jmp
fisttpl
push
outsl
sbb
cmp
adcb
in
iret
dec
out
int
cwtl
or
sub
xchg
test
and
xchg
lcall
fwait
adc
or
cld
mov
sbb
inc
out
aad
xchg
and
push
mov
sub
lods
push
in
push
ret
loopne
insb
xchg
add
jne
mov
outsl
rcrl
xchg
adc
pop
pop
repnz
in
mov
mov
fsubr
jbe
sub
cmpsl
rcrb
lret
and
movsl
pop
push
js
rcl
or
lds
add
push
je
jbe
insl
adc
mov
sahf
mov
lods
mov
nop
sub
push
pusha
xchg
xor
sbb
push
and
dec
xchg
nop
add
loope
fcoml
jbe
cs
test
scas
dec
leave
outsb
jle
sbb
adc
mov
out
push
inc
inc
filds
sub
les
ja
mov
aas
push
push
insl
icebp
les
xor
popa
push
cs
daa
std
mov
push
sbb
scas
xchg
or
inc
xchg
xchg
fcoms
js
mov
insl
jne
sub
sbb
push
ss
sarb
pop
push
pop
scas
dec
mov
inc
jg
and
push
insb
jo
pop
jno
ret
cmp
sahf
xchg
sub
cmpsl
cltd
dec
rorb
push
int3
aas
push
enter
fisttpl
in
jmp
mov
pop
mov
dec
scas
push
hlt
mov
int3
xchg
ret
push
faddl
cmp
pusha
daa
push
adc
popf
jno
xchg
mov
mov
arpl
rcr
cli
xorl
fwait
mov
movsl
push
clc
pop
je
pop
test
in
xor
fdivr
dec
fcompl
fldl
cmc
xchg
jmp
xchg
jne
js
xor
cs
xchg
ja
inc
std
sbb
push
pushf
aad
iret
lahf
push
pop
fwait
lahf
fs
jl
push
test
sub
pop
sbb
addr16
push
lods
or
fcoms
aas
inc
ret
je
xchg
das
addb
je
rolb
pop
and
jno
mov
push
inc
add
or
pop
dec
andb
xor
jnp
adc
dec
aad
pusha
and
xlat
jo
pusha
hlt
fsubrs
mov
mov
pushf
mov
jecxz
push
or
jmp
mov
inc
inc
mov
xchg
push
sub
pop
fdivs
sbb
sti
pushl
sub
jbe
clc
sub
lret
push
adcb
mov
mov
insb
cmc
adc
lea
mov
js
cld
int3
rcrb
cmp
adc
sahf
jbe
pushf
stos
xchg
outsl
mov
stos
push
sbb
push
ljmp
addr16
ljmp
lret
inc
stos
pop
dec
xor
lahf
push
stc
lds
xchg
inc
dec
jge
mov
stos
stos
cltd
mov
fcoms
lods
jns
xorl
lcall
pop
dec
into
xor
sbb
xchg
and
jmp
leave
adc
push
in
pop
out
psrld
arpl
jne
repz
movsl
cld
cwtl
aam
adcl
stc
aam
rorb
in
stos
pop
xor
cltd
cmp
cmp
mov
push
lret
ja
mov
dec
jle
insl
repz
ss
fs
out
or
xchg
or
jge
out
push
rcrl
sbb
mov
test
push
icebp
out
std
lods
fsubl
aaa
xchg
push
movsb
add
mov
out
outsl
imul
test
aam
test
push
sbb
xchg
mov
sbb
fcomps
outsl
sub
mov
out
add
xor
test
cli
ret
mov
les
xchg
bnd
or
xor
cmpsl
aaa
xchg
adc
jmp
bound
push
les
or
popf
imul
cmp
aad
pop
mov
add
mov
out
mov
lcall
jne
inc
push
sbb
roll
jne
add
adc
cmp
mov
scas
loope
shr
pop
mov
into
mov
or
js
xor
push
mov
or
fstp
pop
xorb
insb
mov
test
mov
test
mov
adc
dec
mov
jo
cmovae
scas
jle
fimuls
pop
rcrb
hlt
adc
das
lea
out
mov
in
out
or
and
ljmp
jg
lret
int3
js
in
inc
inc
icebp
inc
lret
mov
jo
imul
jae
xchg
inc
mov
adc
rorb
pop
and
outsl
fdivp
shlb
pop
xchg
jno
xchg
inc
pop
insl
push
xchg
pushf
mov
dec
pop
mov
mov
or
jle
das
xchg
imul
mov
ljmp
pop
pop
or
daa
inc
loope
fsubs
lods
xchg
inc
mov
mov
daa
in
or
subl
xchg
adc
jnp
adc
jecxz
gs
aas
int
vmovdqu
push
test
inc
jge
aas
popf
sarl
shrb
loop
rorb
ds
cmpsl
cmp
add
popf
add
lahf
jmp
mov
xchg
lods
or
fnstcw
shrb
repz
addr16
gs
jmp
pop
jno
sub
ds
inc
inc
test
cmc
cltd
sbbb
in
ret
adc
cmpsl
sub
gs
pop
push
aad
mov
divb
pop
ja
out
jo
jb
pop
adc
loop
fs
dec
pop
dec
xorb
dec
fstpl
or
pop
fxch
inc
sahf
sahf
sbb
mov
lret
daa
in
imul
pop
cmp
add
push
leave
push
jp
sbbl
sub
pop
iret
decb
shlb
sbb
add
jp
lds
push
sub
add
and
mov
dec
aam
push
andl
sub
pushf
leave
cltd
mov
push
and
add
movb
and
add
rol
xchg
insb
pop
jge
cli
push
push
mov
mov
push
adcl
mov
mov
rol
dec
lcall
mov
fldenv
cli
pop
jg
and
movsl
dec
lods
mov
sar
xor
push
aad
cmpsb
pop
ds
adc
and
enter
in
mov
std
inc
lret
push
scas
pop
mov
pop
inc
aas
loope
mov
inc
pop
decb
mov
adc
dec
insl
loopne
mov
lahf
pop
and
dec
repnz
xchg
hlt
add
mov
jecxz
xor
add
ret
or
dec
lahf
addb
fiaddl
pop
mov
aaa
and
lret
mov
mov
es
addr16
cmp
out
pop
out
lret
in
mov
std
loop
icebp
lock
dec
xor
cmp
lock
notb
in
and
jo
icebp
outsb
aad
in
cmc
xchg
xlat
jl
and
cmpb
cltd
inc
cmp
mov
dec
xor
and
or
mov
mov
addr16
mov
inc
loop
jge
xchg
ret
inc
and
lods
jecxz
pop
sub
jecxz
cwtl
stos
ss
int
hlt
int3
dec
je
test
lds
or
xchg
pop
mov
je
popf
lods
xchg
or
and
lret
mov
lock
jno
push
pop
in
cld
jo
int
pop
in
inc
push
sub
lret
mov
idivb
stos
mov
insb
jne
push
mov
leave
pop
js
rcrb
inc
pop
sti
aad
sbb
xchg
sub
adc
lods
or
jne
or
loopne
push
sarb
mov
mov
mov
fnstsw
add
add
push
pushf
rclb
sti
fdivs
mov
sbb
mov
shrl
sub
in
push
ljmp
jle
jb
dec
adc
lret
inc
insb
dec
push
mov
rolb
and
add
lret
adc
sbb
jp
mov
and
or
push
xorl
dec
push
adc
lock
add
sbb
insb
mov
mov
and
pop
test
push
jo
daa
or
ret
fiaddl
xchg
subb
bnd
iret
push
int3
xchg
jbe
adc
push
dec
ss
jb
cmp
sub
pop
sub
push
repz
sahf
adc
mov
and
and
sbb
add
add
mov
xor
iret
pop
or
rol
popf
movsl
pop
cmpsl
mov
add
xchg
int3
rsqrtps
dec
mov
sti
jp
into
or
pop
out
icebp
mov
sub
xchg
xchg
add
mov
mov
loopne
pop
fldl
rcl
sbb
dec
out
or
daa
lret
cwtl
mov
jns
push
inc
cmp
xchg
scas
cmp
mov
push
xor
sub
out
or
roll
bound
pop
xor
dec
mov
mov
pop
ror
mov
shl
dec
dec
into
ja
pop
aaa
dec
sub
mov
arpl
pop
dec
xor
mov
jle
lret
fwait
push
mov
sbb
inc
pop
movsb
cmpsb
insb
jmp
ss
nop
fsts
insl
js
cmp
ret
test
movsb
push
in
push
jb
jp
cmp
mov
pushf
push
push
sub
cltd
mov
xchg
push
mov
aam
adc
push
sbb
popf
push
dec
push
int3
push
cmpsl
mov
dec
dec
push
in
sbb
jae
cmp
mov
jae
adc
jb
pop
enter
sbb
cmp
pop
popf
adc
pop
adc
xchg
stc
shll
testb
dec
pop
xchg
push
push
cltd
mov
lret
into
mov
dec
push
jno
xor
shl
pop
xchg
test
hlt
call
pop
cmp
in
cld
data16
and
cmp
in
enter
in
inc
repz
jg
jbe
mov
mov
outsl
div
xchg
pushf
cmp
xor
inc
mov
pop
lods
jo
sbb
cmc
addb
lods
cltd
addr16
cwtl
fimull
jb
inc
jb
int
loop
shrb
mov
sbb
jp
xchg
adc
cmc
std
test
mov
sub
dec
mov
mov
and
cmp
std
in
xchg
repz
add
mov
or
psubsw
inc
mov
xor
xlat
mov
push
test
jle
cld
mov
push
push
hlt
pop
pushf
and
inc
jbe
mov
jmp
xor
sti
xchg
fistps
and
lret
scas
sbb
jle
xchg
or
mov
mov
gs
mov
data16
hlt
stos
fwait
outsl
adc
jae
sbb
in
or
fs
dec
inc
mov
popf
mov
int
aad
push
or
ret
push
sahf
lds
pusha
dec
les
in
out
leave
sti
stos
cmc
xchg
mov
mov
rcl
test
sbb
aad
inc
ljmp
push
or
movsl
jecxz
xor
lret
nop
xor
bound
std
sub
push
adc
pop
xor
es
inc
jo
jp
xchg
and
and
aas
shlb
sbb
cmp
cltd
data16
mov
push
test
inc
cmpsb
aas
out
or
xchg
loope
mov
cmpsb
mov
lea
lods
orb
mov
jl
testb
mov
negl
aad
aam
or
adc
cmp
xor
rcr
fmul
out
les
push
inc
fcomps
sub
mov
mov
or
cs
push
clc
push
iret
xchg
xchg
xor
out
repnz
mov
inc
or
nop
cmp
test
lcall
arpl
scas
mov
push
add
cmp
mov
pop
repnz
push
inc
mov
xchg
int
and
mov
xlat
ret
sbbb
sub
mov
mov
sbb
popa
inc
insl
sti
fwait
xchg
aaa
cmpsb
xchg
ljmp
test
add
dec
push
or
push
dec
outsl
cli
push
xchg
xor
sub
les
xchg
dec
addr16
mov
test
lea
sahf
dec
ja
xor
mov
or
mov
adc
mov
imul
mov
shl
jl
cs
sbb
mov
push
fsubs
pop
push
inc
cmc
fisubrs
xchg
loop
rorb
fiaddl
rol
test
mov
out
push
sub
decb
sbb
nop
fistl
mov
dec
loopne
cmpsb
xchg
loope
or
bswap
sbb
mov
js
mov
xor
or
cmp
push
shrb
pop
inc
fdivrs
gs
adc
loop
mov
bound
mov
and
pop
mov
mov
mov
and
int
sbb
es
out
and
je
push
or
and
jle
lret
daa
inc
inc
cli
scas
insl
in
test
sub
lea
mov
lods
cmp
pop
fistps
inc
xchg
int3
and
cmp
ss
popf
push
mov
mov
in
in
ret
inc
in
aaa
ss
in
out
out
push
push
fwait
int3
sbb
inc
mov
xchg
inc
and
faddl
rolb
jo
sahf
test
xchg
iret
sbb
mov
stos
dec
mov
mov
mov
hlt
jp
lcall
aas
jbe
into
jecxz
push
aas
mov
scas
int3
test
js
decb
pop
xor
mov
cmpsb
jo
and
sti
in
and
shr
mov
mov
fs
mov
push
inc
xchg
fistl
jnp
daa
cmp
add
leave
lret
adc
xchg
adc
inc
fsubp
fcoml
jno
pop
into
jle
sbb
cs
push
sub
lock
pop
add
sub
mov
adc
fcmovbe
insb
sbb
xchg
iret
ret
pop
iret
pop
push
decl
in
cmp
jle
in
mov
fidivs
lcall
pusha
arpl
inc
call
roll
jae
mov
iret
int
call
lea
xor
dec
and
cwtl
sarb
sahf
inc
dec
into
fcoml
add
pop
fwait
cmp
cmc
dec
test
mov
scas
jmp
orb
test
dec
adc
mov
idivl
mov
adc
mov
or
adc
jle
test
push
bound
cmc
das
and
jnp
pop
pushf
scas
das
mov
pop
or
popa
clc
cmp
dec
mov
and
vmread
jb
cmpl
push
xchg
ffree
mov
mov
xor
or
sbb
jnp
dec
scas
clc
mov
test
pop
adc
sub
push
dec
push
out
mov
push
sbb
pop
mov
xor
rolb
mov
sub
or
inc
push
mov
lret
les
sbb
sub
mov
unpckhps
les
repz
pop
adc
movsl
adc
mov
add
ficomps
and
filds
xchg
sbb
jae
fisubl
dec
lcall
ret
push
les
jmp
xchg
mov
cmp
test
jnp
jb
ret
mov
and
fldcw
cli
pop
and
adc
outsb
or
mov
jb
ret
lahf
in
pop
scas
mov
and
xchg
lods
cmpsb
fildl
or
jo
adc
les
scas
ret
jge
jmp
lods
ljmp
pop
cmp
mov
out
out
cmc
test
push
mov
imul
lret
cld
movsb
mov
call
enter
sbb
xor
xchg
js
addr16
int3
sbb
add
aad
dec
scas
in
subb
jae
cli
pusha
xchg
or
sbb
mov
inc
pop
lds
rcr
or
jecxz
nop
lods
lods
and
mov
clc
mov
adc
scas
dec
lea
push
xor
pop
divb
add
rcr
test
mov
sbb
xchg
daa
rol
ds
push
arpl
rcrl
cltd
or
in
sub
data16
mov
stc
rcll
xor
xchg
mov
jmp
push
mov
inc
jge
pop
sbb
push
xor
div
jo
xchg
cmpsb
leave
and
dec
and
jmp
push
pop
iret
push
or
xlat
aam
ds
pop
xorb
out
orl
das
out
cmpsl
push
xchg
das
fildll
xor
idiv
lds
mov
orl
cltd
pop
mov
jl
dec
mov
add
clc
or
pop
mov
fs
xchg
ljmp
dec
rorl
ds
cld
cmp
xchg
gs
data16
cmp
dec
push
test
sub
ret
jp
into
lret
loopne
shl
xchg
addr16
jl
addr16
nop
es
adc
push
mov
adc
jmp
loope
adc
aas
inc
mov
jb
ljmp
mov
adc
cmp
cmp
in
iret
and
mov
add
mov
xchg
pop
mov
dec
lods
jl
jmp
test
int3
add
mov
lcall
test
in
inc
test
pop
mov
jne
mov
cltd
mov
xchg
sti
mov
mov
pop
out
pusha
xchg
rolb
or
and
inc
outsb
fdivrl
xchg
pusha
mov
xor
pop
imul
jecxz
in
fbstp
in
ljmp
pop
sbb
inc
stc
adc
pop
movsl
and
lret
sub
pop
add
fsubr
popf
aaa
mov
and
inc
mov
sbb
mov
jo
std
push
lret
inc
daa
pushf
mov
and
in
and
ljmp
fdivl
mov
mov
and
fstps
adc
fstps
jmp
mov
xchg
jno
pandn
int
in
insb
mov
lcall
lret
sbb
or
stc
inc
ja
imul
xchg
push
sbb
and
xchg
lds
xchg
int
cmc
mov
pop
mov
pop
dec
mov
rolb
inc
sub
adc
leave
and
mov
fistps
leave
sbb
sbb
inc
push
push
in
repnz
lret
xor
fstpt
sbb
adc
js
cld
mov
divb
and
je
adc
mov
ds
and
xor
jp
mov
ret
aam
push
jne
push
jns
mov
sub
and
adc
pushf
or
or
mov
mov
pop
or
mov
sbb
sbb
xor
xchg
sti
jb
jns
int
xchg
mov
inc
xchg
in
test
bound
adc
xor
shlb
sub
push
mov
repnz
and
or
test
imul
jmp
loop
pop
stos
mov
inc
sbb
sub
add
inc
data16
inc
adc
fdivrl
pop
or
pop
adc
jbe
mov
pop
mov
push
cmpsb
mov
push
in
imul
xchg
test
add
mov
jns
data16
in
jno
push
dec
in
mov
sbb
dec
movl
mov
in
sub
jmp
xor
adc
test
fimull
dec
mov
lea
cli
cmp
lcall
jmp
in
insb
and
dec
fcomps
pop
inc
fdivrs
mov
xorl
mov
cmp
mov
faddl
jns
push
dec
jns
movsb
pop
shrl
jno
push
imul
mov
lea
cmc
xor
xchg
lret
mov
ror
test
jbe
jmp
lock
int3
xlat
jb
xchg
mov
push
es
add
sbb
jno
or
outsb
lret
push
into
xchg
fs
clc
mov
fwait
adc
cmp
jae
or
mov
data16
mov
enter
mov
jmp
mov
or
jb
inc
loop
rclb
adc
cmp
add
mov
fsubrs
or
jle
dec
cmovg
clc
rorl
or
or
xchg
jb
sub
pop
pop
ss
lea
and
movsl
xchg
and
je
dec
adcb
add
push
push
and
std
cmp
mov
xor
enter
adc
cli
xor
jno
cs
mov
jo
imul
movsl
mov
test
aas
jp
push
movsl
pop
pop
dec
imul
pop
xlat
sub
add
icebp
lret
mov
negb
xor
mull
frstor
cs
or
push
out
je
ret
shlb
in
jne
xchg
push
mov
cmpsl
sub
or
fldenv
mov
jp
xchg
mov
jp
mov
loop,pt
imul
aas
sbb
mov
int
nop
mov
repz
xor
xlat
mov
pop
popf
push
pop
xor
loope
jns
js
xlat
test
int
push
mov
add
xchg
push
cmp
clc
arpl
aam
pushf
repz
mov
add
arpl
pop
mov
pop
scas
adc
mov
cmp
mov
inc
push
inc
roll
mov
push
sbb
adc
adc
adc
fs
sub
cmpsb
jo
es
add
stos
lock
dec
ret
sub
xor
insl
stos
or
outsl
dec
mov
cmp
mov
daa
cld
ficoms
pop
xor
jbe
lods
pop
xor
mov
lods
int
sub
stos
fiaddl
cmc
pop
mov
or
mov
cmp
or
jmp
inc
or
mov
sbb
mov
stos
push
sub
cmc
stc
inc
cmp
rcrb
lahf
mov
adc
int
nop
enter
pop
shlb
jo
dec
js
xchg
cmpsl
in
or
xchg
das
in
inc
adc
jbe
aam
push
sbb
inc
std
lea
jge
cwtl
les
int3
mov
popf
fimull
mov
lahf
test
in
sbb
insl
lahf
out
loope
lahf
jecxz
cmp
jl
lds
pop
mov
insl
cmp
jb
cwtl
sub
cmp
cltd
cmp
jmp
push
rcll
and
gs
pop
inc
ds
push
data16
inc
sbb
hlt
into
cli
add
xchg
cwtl
popf
sub
and
fidivl
repnz
adc
jle
push
dec
push
dec
mov
out
sbb
les
pop
scas
das
std
sbb
les
fcomps
cmp
or
out
les
in
cmpsb
mov
add
into
push
jge
fwait
mov
and
inc
aam
cmc
cmpsb
cmp
jb
mov
iret
and
or
mov
sahf
mov
push
loope
mov
test
incb
jbe
xlat
fsts
mov
faddl
push
inc
aam
xchg
xor
xchg
sbbl
adc
stos
push
stos
scas
andl
fbld
and
iret
je
fwait
add
sbb
sub
stos
sub
ss
cltd
pusha
and
das
jnp
aad
pop
shll
mov
addr16
push
mov
sbb
jo
negb
data16
and
sub
outsb
iret
sub
cmp
inc
cmp
cmp
idivb
jne
test
cltd
inc
jae
jbe
sub
sub
sbb
dec
pop
xor
loope
mov
shll
movsb
ja
lods
xor
xor
xchg
jo
orb
testb
push
push
lds
mov
mov
jns
fwait
mov
enter
sbb
mov
and
push
and
cmpsl
dec
insb
jno
adc
xchg
icebp
ss
jb
add
cmp
or
or
mov
dec
popf
cmc
inc
ss
ficomps
jecxz
adc
fistpll
push
inc
jo
imul
hlt
lret
mov
cmp
out
fs
add
shll
call
in
scas
xor
lods
mull
sub
mov
and
cmp
push
mov
push
add
fisttpl
movsb
cli
rclb
test
cltd
out
stos
xchg
data16
ljmp
rorl
adc
dec
into
flds
call
int
ja
mov
adc
add
and
push
insl
nop
add
aaa
push
shl
pop
or
add
ficoms
fucomp
lock
jle
jne
sahf
dec
dec
dec
mov
jno
outsl
shl
aas
scas
jno
test
dec
outsl
mov
stc
jno
shr
rorb
movsb
lea
pop
and
mov
cmc
test
test
lcall
mov
rcll
out
mov
incb
imul
ret
adc
pop
fldz
mov
xor
jge
or
call
movsl
adc
adc
stos
int
jns
cmpsl
jle
xor
cmc
test
cmpsl
xchg
or
aad
xchg
pushf
fisttps
mov
dec
sbb
push
lods
sarb
mov
sbb
dec
sub
lret
into
fwait
jp
mov
cmp
cld
cmp
mov
xor
fisubrl
fiaddl
sti
xchg
into
mov
xor
and
push
in
pusha
pusha
fimuls
mov
ficompl
ds
in
fimull
push
xor
imul
push
and
xor
rcrb
cmc
cld
ljmp
and
popa
mov
add
xorl
jbe
pop
repz
xor
sbb
enter
mov
xchg
adc
cmp
mov
js
and
in
or
scas
xchg
fiadds
cli
addr16
cwtl
mov
std
movsb
out
mov
sbb
jge
mov
inc
pushf
push
sbb
cmp
imul
fcom
pop
push
dec
jle
and
mov
test
mov
es
xor
adc
adcl
scas
sbb
jno
and
out
cmp
xor
sbb
cmp
add
sbb
cmp
dec
jmp
loop
aas
jae
insl
enter
cwtl
ss
adc
fsubrs
test
mov
std
mov
pop
jns
in
outsb
cmpsl
mov
push
inc
xor
add
cmp
add
xchg
inc
xor
xchg
pop
sub
cmpsl
dec
enter
lahf
pop
in
or
shrb
ret
xlat
repz
movsb
out
cmp
push
cs
dec
test
add
jmp
test
cmpsb
add
push
test
mov
jmp
mov
in
pop
and
jb
xchg
arpl
xor
icebp
fwait
into
je
roll
dec
repnz
je
mov
rcr
inc
push
std
repnz
sub
movsl
lret
imul
mov
ret
dec
shlb
test
pop
push
push
ja
js
push
jno
testl
lcall
jne
leave
pcmpgtd
dec
repnz
cmc
mov
lcall
mov
xor
stos
xorl
loope
cld
pop
pushf
das
sub
mov
mov
push
cmc
cs
pop
call
lahf
shll
in
jnp
mov
sarb
pop
leave
cmp
jp
xchg
outsb
cmp
dec
add
cvtdq2ps
inc
insb
lods
ret
ljmp
jge
push
jge
xchg
sub
cmc
les
inc
inc
sbb
adc
cmp
stos
sbb
push
ds
loop
mov
inc
push
int3
jb
divl
cmc
mov
xchg
gs
jecxz
gs
fs
sub
mov
jnp
jecxz
and
pop
jns
or
xor
and
std
jns
adc
hlt
or
cmpsb
jmp
mov
dec
adc
xchg
adc
imul
fs
fwait
mov
mov
xor
xchg
jg
js
dec
lds
aam
imul
aas
fwait
mov
xchg
cmc
xchg
push
sub
in
pop
lahf
mov
popf
mov
mov
inc
test
lret
insb
into
pop
adc
test
pop
pop
xchg
push
pushf
push
arpl
adc
xor
imul
popa
or
cmp
loope
pop
mov
cmp
jne
xor
imul
out
mov
push
enter
arpl
fs
dec
repz
psubb
sub
or
xchg
sti
or
mov
xor
stc
xor
sbb
xchg
dec
mov
pop
mov
into
lds
adc
sub
inc
cltd
or
or
dec
call
fwait
xor
mov
nop
push
pusha
sbb
sub
or
xor
or
mov
push
loope
loopne
dec
addl
xchg
rcrb
jg
repz
sub
inc
push
cmp
out
repnz
fstpl
jne
ret
mov
ja
dec
cmp
andl
cmpsb
xchg
shl
jo
fcomip
int3
jmp
lret
int
icebp
gs
addr16
jmp
mov
int3
push
fcoms
mov
xchg
ficompl
cmc
out
push
mov
aas
movsl
mov
fptan
pop
stos
dec
sbb
adc
mov
pop
cmp
mov
xchg
cmp
in
andl
adc
std
imul
pop
or
push
mov
inc
add
push
test
push
sar
test
cli
and
stos
repz
mov
outsl
sbb
mov
xchg
hlt
mov
into
nop
push
mov
xor
push
mov
mov
in
mov
les
and
imul
dec
lods
pushf
sub
mov
or
addr16
push
adc
addr16
std
outsb
dec
rcll
jnp
push
pop
ljmp
jns
imul
je
nop
sub
mov
pop
xchg
mov
and
test
mov
xchg
and
mov
adc
xchg
push
subb
jae
pop
jp
xchg
xor
pop
out
imul
mov
popw
mov
and
cmc
cmpsl
adc
call
pushf
mov
or
dec
jnp
shrl
sub
pop
lret
test
cmp
lret
shll
imul
mov
add
cmp
insb
ja
fldenv
add
lds
push
shll
not
inc
aam
icebp
push
outsl
fnstenv
sti
dec
lahf
leave
jle
xchg
mov
fists
loopne
or
push
aaa
shll
push
insb
pop
int
aas
out
fildl
repz
call
add
lds
xor
mov
rcrl
sbb
push
mov
adc
jle
inc
test
dec
popa
imul
test
outsb
mov
clc
insb
shlb
in
push
mov
xchg
out
pop
push
mov
mull
gs
cs
ret
rcr
bound
inc
and
call
xlat
xor
loop
push
mov
sbb
out
lahf
subb
test
push
xor
push
loop
lret
out
hlt
and
jno
sbb
dec
repz
loope
pop
push
cltd
mov
jae
mov
pop
test
ss
gs
mov
mov
outsb
and
xor
mov
sub
adc
or
pop
pushl
sub
scas
xor
bound
jecxz
aas
divl
mov
mov
mov
mov
push
ljmp
pop
adc
adc
outsb
cmp
lods
mov
mov
cmp
dec
and
movsb
cwtl
push
cwtl
fnstenv
cmp
dec
call
in
adc
or
movsb
xor
mov
jmp
xchg
sub
mov
lcall
xor
push
mov
out
or
pop
add
loop
outsl
jp
adc
in
ds
arpl
and
test
orb
inc
or
ret
xor
fildl
sub
lahf
or
jge
lods
push
stos
cmpsb
jbe
xchg
add
sbb
inc
nop
push
scas
pop
lcall
and
xor
arpl
ds
dec
mov
daa
pusha
dec
pop
js
jne
test
rorl
rcrb
jl
mov
sbb
addb
stos
adc
lcall
inc
jno
lret
loopne
adc
into
cmp
fldl
push
cmp
inc
jl
pop
movsl
hlt
or
ljmp
imul
mov
mov
and
mov
in
xchg
mov
mov
push
nop
and
jo
and
xor
sti
pop
rorl
push
lods
imul
fistpll
xchg
in
adc
adcl
in
cmp
out
dec
mov
mov
test
add
inc
pop
pusha
fwait
pushl
mov
xchg
in
enter
mov
ja
imul
push
jl
ja
mov
or
cmpsl
ss
mov
pushf
popa
push
popa
push
test
xor
sbb
imul
mov
lea
push
flds
out
sti
js
pop
lcall
sub
dec
mov
bound
cs
inc
pop
ss
int
sbb
mov
jecxz
mov
je
lcall
sbb
xchg
in
stc
pop
and
movsb
in
lret
sbb
popf
subb
sbb
cmp
clc
repnz
push
hlt
push
sub
pop
xchg
out
lea
jbe
ss
jl
or
out
hlt
lods
pop
ficompl
push
xchg
hlt
mov
pusha
mov
cmp
rolb
cmp
and
sub
xchg
jl
mov
xor
pusha
shlb
cmp
scas
negb
and
dec
pop
mov
in
ss
push
arpl
cmpsb
and
push
cltd
fs
call
inc
pop
aad
in
inc
pop
neg
sub
sub
aas
clc
add
pop
les
xor
stc
push
out
loope
push
insb
xchg
xor
ja
stc
out
sub
mov
or
mov
jbe
shl
dec
jae
mov
push
rorl
lock
push
test
popa
bound
clc
mov
faddl
loop
movsl
rcrb
loopne
leave
add
aad
sbb
adc
push
popf
imul
inc
lret
push
cmc
into
mov
jno
inc
pop
in
pop
sbb
ret
pop
cmpsl
mov
jo
xor
pop
repnz
jg
cmp
fucom
jl
stos
cmp
mov
sbbl
ljmp
xor
and
adc
sub
arpl
sbb
sarl
dec
hlt
shrl
icebp
ret
loopne
mov
inc
jns
mov
lds
psraw
mov
jmp
fidivrl
mov
mov
pop
lods
enter
mov
out
inc
jo
aas
cmp
cmp
mov
fiadds
jg
dec
push
mov
push
test
clc
inc
sbb
loope
dec
out
stc
xor
lds
add
out
pop
pop
dec
sbb
nop
and
sub
ret
mov
sub
cmp
jb
sbb
jle
xchg
lods
nop
popf
inc
bound
and
xchg
gs
call
fwait
xchg
dec
iret
xchg
ja
subb
add
mov
outsb
lock
jnp
negb
out
daa
out
jecxz
repz
jnp
mov
out
xchg
rorb
xchg
enter
es
mov
out
int3
sbb
mov
outsb
push
fcoms
ficomps
les
xchg
sahf
sbb
inc
pop
outsl
mov
push
cmp
sbb
iret
outsb
sub
jmp
sbb
fucomi
jns
addr16
outsb
xlat
inc
cld
cmpsl
insb
xchg
sub
adc
testl
pusha
sbb
mov
add
hlt
insl
pop
fsubs
mov
mov
pushf
cmpsb
movsb
push
lea
xor
inc
mov
scas
dec
stc
mov
xchg
fucomp
or
cmp
ljmp
sti
or
hlt
mov
mov
jle
lea
and
adc
pop
add
mov
adc
add
test
add
fidivrs
add
mov
add
xchg
pushf
sbb
and
push
push
rcl
movsl
and
insl
push
dec
ret
jae
lahf
imul
insb
add
jno
sub
aad
test
aad
jp
cmpsb
adc
lret
das
mov
push
fsubr
jne
push
lds
jne
and
das
push
sub
adc
cwtl
inc
cmp
mov
call
mov
or
movsl
rcrb
icebp
nop
ss
lahf
mov
pop
cmp
push
inc
adc
dec
mov
iret
xlat
jge
cmc
adc
mov
outsb
inc
sahf
imull
mov
test
mov
stos
mov
lea
mov
mov
sarb
out
push
cwtl
out
dec
mov
or
cltd
lock
push
push
and
rolb
gs
leave
into
push
jle
push
inc
xor
push
inc
es
mov
or
fcomp
adc
jp
mov
fistpll
xchg
rcl
js
ret
jae
jmp
lods
or
hlt
push
dec
sbb
leave
xchg
push
pushf
mov
clc
mov
subl
arpl
rol
ljmp
mov
add
xor
sub
xchg
out
and
test
jae
jmp
adc
jno
inc
lock
jo
adc
and
lcall
jg
popf
mov
mov
int
add
dec
add
lahf
loopne
cs
mov
fs
pop
cmp
fwait
xor
dec
in
sub
xchg
mov
imul
xchg
filds
add
pop
pop
mov
jns
dec
in
adc
fnsave
sub
push
adc
icebp
hlt
ds
mov
push
adc
pop
mov
mov
mov
ds
sub
xchg
scas
mov
stc
xchg
ja
mov
test
js
cmpsl
dec
pop
mov
ret
dec
adc
xchg
shlb
xor
cmpsb
testl
jae
cmp
dec
sbb
add
arpl
call
sub
push
gs
and
push
and
je
mov
pop
push
cmpsl
inc
mov
mov
shll
test
pop
fmul
outsb
inc
rcr
mov
mov
aaa
push
in
rolb
sub
cltd
mov
adc
xchg
inc
cmp
mov
popa
dec
add
lret
inc
popa
adc
pop
arpl
or
inc
ds
in
sarl
mov
imul
js
xchg
mov
sub
cld
fs
sti
cld
sbb
lret
cmp
cs
sub
lods
pop
and
pop
and
jmp
xchg
cmp
or
cmp
jb
push
inc
dec
arpl
fsubrs
psadbw
ret
loopne
fxch
rorl
pop
in
pop
sarl
out
jnp
repnz
mov
jns
mov
and
int3
je
or
jns
stc
mov
sbb
notl
mov
cwtl
lahf
out
scas
pop
add
add
pop
adc
pop
ja
push
aam
inc
cmp
lea
rcr
inc
xor
add
mov
dec
pop
pop
mov
shll
xchg
fdivr
mov
repz
mov
das
mov
ret
push
nop
add
jg
xchg
and
adc
arpl
sbbb
mov
lods
pusha
mov
dec
xor
sub
test
push
imulb
cltd
inc
sub
mov
sbb
loopne
hlt
dec
or
and
push
dec
mov
and
popl
dec
adc
xor
shll
sbb
sahf
add
mov
mov
inc
xor
test
cmpsb
push
imul
es
stos
addr16
push
out
mov
jmp
loope
cmp
pop
in
ret
lea
out
jl
mov
or
ja
iret
xor
gs
xor
in
xchg
stc
add
in
add
std
sub
dec
in
aad
inc
push
lcall
test
shrl
arpl
into
push
push
insl
loopne
aad
arpl
push
or
out
xor
xchg
mov
pop
adc
fiadds
mov
mov
test
inc
inc
cmp
sub
sbb
push
sbb
mov
lods
xor
mov
sbb
int
rolb
fcoms
enter
das
js
ret
mov
push
xchg
gs
cmp
in
insl
je
xchg
ficomps
lea
cmpsb
pushf
xorl
aam
sbb
inc
push
xchg
add
aam
inc
inc
shlb
outsl
xchg
aaa
rol
popa
shll
leave
into
imul
xchg
sbb
scas
and
loopne
fistpll
lcall
sbb
loop
daa
es
adc
mov
inc
add
lock
inc
dec
and
pop
mov
data16
inc
int
stos
jmp
push
rclb
push
jne
dec
dec
cmp
xchg
add
aas
xchg
fisubrl
push
inc
mov
inc
cmp
scas
or
push
jmp
adc
xchg
jno
push
in
inc
stc
out
lcall
ja
lds
lock
push
jnp
pop
xorl
cmp
jns
lahf
push
imul
popa
pushf
mov
cmpsl
mov
xchg
pusha
sub
or
mov
push
pushl
clc
test
mov
dec
mov
rcl
mov
and
scas
mov
fsubrl
cld
xor
jne
loopne
fmul
bound
and
sarb
xchg
mov
or
cmp
dec
adc
push
jns
aas
or
mov
mov
lea
sbb
xchg
movsb
iret
push
cmp
bound
xchg
ret
or
xlat
jnp
lods
in
lahf
aaa
jns
addb
xchg
push
xor
faddl
push
cmovbe
inc
pusha
add
mov
sbb
inc
sbbl
flds
adc
xor
cmp
sub
xchg
sbb
stos
pop
mov
dec
stos
adc
into
mov
aad
cli
and
sarb
loopne
jp
iret
cmp
sbb
insb
adc
push
cmp
sub
inc
push
or
cltd
lahf
or
faddl
fdivl
mov
sahf
dec
xor
imul
cli
pop
nop
popf
mov
push
sbb
cmp
jno
cmpsb
cmp
dec
ljmp
cmp
pop
outsl
out
mov
adc
andb
inc
fcompl
cmpsb
mov
fiadds
mov
lahf
mov
mov
jae
xor
sub
push
insb
lds
xchg
mov
sbb
xlat
fidivl
cld
ljmp
rolb
mov
push
shlb
xchg
cmpsl
xor
daa
clc
lods
ds
hlt
sbb
pushf
mov
pushf
icebp
fistl
push
lds
sub
imul
inc
cmp
sarl
or
mov
and
jmp
into
popa
sub
mov
outsl
inc
jae
or
jl
mov
out
jg
sub
pop
or
fisttpll
in
test
adcb
mov
lret
mov
push
ljmp
stc
add
dec
jge
jmp
test
shll
leave
mov
movsl
inc
push
jo
mov
test
test
xor
push
ja
in
in
cmpsb
jno
mov
scas
cmpsb
daa
inc
inc
std
pop
sub
or
mov
pop
sub
dec
icebp
dec
xor
adc
nop
in
inc
arpl
or
sub
arpl
mov
push
in
fs
mov
adc
sub
xlat
add
fwait
cmp
addr16
fnstsw
clc
push
and
xlat
xchg
aad
and
push
pop
test
mov
lcall
mov
add
lods
lret
je
xchg
and
add
pop
fstl
xchg
cmp
mov
loopne
mov
out
pop
mov
or
rol
mov
push
mov
sub
bound
pop
cmp
stos
test
popa
das
lret
sbb
jg
mov
jmp
ds
jb
add
add
iret
dec
push
mov
fisttps
xor
sbb
aaa
sub
es
inc
jmp
mov
xor
lds
pop
mov
test
inc
sbb
pusha
sbb
sub
mov
adc
test
or
jmp
jg
loop
je
insl
aas
stos
mov
insl
add
dec
sarb
pop
push
loopne
jnp
bound
push
lcall
sub
xlat
fnstsw
jg
lea
jg
mov
ljmp
imul
in
sub
mov
and
xor
out
lret
add
fcoml
or
movsb
push
mov
mov
jne,pn
cmpb
aad
push
bound
shll
dec
dec
xchg
test
cwtl
fsts
pop
fcmove
push
fwait
adc
mov
jnp
push
dec
adc
pop
lret
add
and
cmp
enter
add
js
shlb
sub
xor
mov
mov
aas
or
cmp
leave
std
ret
hlt
mov
mov
cwtl
clc
out
iret
xor
add
sub
pminub
je
add
daa
icebp
dec
ficoms
mov
pop
jbe
rcrb
cld
cmp
jbe
mov
bound
das
sbb
and
jmp
sbb
mov
add
or
daa
inc
lret
icebp
push
imul
mov
jle
cmp
push
push
push
inc
fadds
mov
jo
mov
mov
pusha
sub
mov
xor
mov
sahf
jb
and
xor
xchg
or
int3
adc
pop
push
pop
lock
mov
sahf
cmp
push
and
cmp
outsb
popf
stos
mov
fcompl
dec
jne
arpl
aas
gs
mov
addr16
and
lea
cmp
jp
cli
lods
add
lds
add
and
sub
daa
faddl
jp
xor
mov
push
push
dec
das
in
xchg
adc
pusha
aas
shr
shr
push
xchg
in
jb
pop
add
push
jg
addr16
jne
pop
xor
push
ja
test
repz
push
lret
pusha
cli
inc
movsb
adc
mov
mov
xchg
jp
cli
bswap
hlt
pop
imul
lcall
mul
out
inc
in
fistpll
jg
adc
rcr
mov
add
cmp
data16
ret
je
dec
mov
insb
xchg
or
arpl
aaa
test
sahf
adc
pop
mov
cmp
add
or
jmp
and
xchg
inc
dec
aad
jns
lods
sbb
rol
inc
push
adc
mov
mov
cltd
adc
inc
sub
hlt
sbb
mov
jp
enter
mov
fldcw
fldcw
shrb
clc
int3
pop
insl
mov
sbb
mov
adc
int
dec
dec
inc
mov
iret
mov
xchg
jo
popa
mov
imul
repnz
cmp
fadd
and
jmp
cmp
jp
dec
pusha
add
sub
jns
xor
jnp
inc
movsb
mov
xor
cmpsl
adc
dec
loope
add
lahf
push
sahf
movsl
dec
or
jo
sub
xor
insl
cmp
cld
test
insl
and
xchg
push
cmp
les
fisubl
and
push
setne
int
popa
xor
adc
cld
pop
fcmovbe
sbb
loopne
scas
sub
cmovl
mov
ja
pop
xor
sub
mov
xor
xor
pop
jle
enter
dec
in
ja
orl
adc
cmpl
cmp
mov
fsubrp
push
xchg
push
xor
jo
dec
inc
cmp
popf
xchg
bound
repnz
js
dec
scas
test
add
aam
mov
lods
sub
pop
inc
mov
lcall
lahf
xor
push
push
push
xchg
mov
or
dec
ja
movsb
jb
int
xor
push
inc
js
outsb
dec
sarb
stos
js
pusha
and
cmp
repz
inc
pusha
mov
ja
lcall
clc
hlt
sbb
mulb
loope
pop
jno
xchg
or
ds
out
sbb
lds
sub
inc
jecxz
push
movb
out
add
rclb
les
and
popa
or
jmp
int3
outsl
xchg
cmp
lods
mov
test
xchg
int3
cmp
mov
sbb
movsb
add
adc
in
jb
lock
push
loope
lock
cmp
sbb
lret
lret
cltd
push
cltd
test
mov
jecxz
inc
fcmove
xor
or
push
jnp
mov
decl
mov
js
xor
jle
jle
aam
mov
cwtl
cs
adc
ret
cmp
mov
sbb
xchg
cli
into
adc
ja
cmp
pop
pop
test
btr
out
dec
xor
cs
sub
nop
adc
ss
outsb
aas
imul
cs
lock
into
xchg
dec
mov
mov
jno
mov
cwtl
add
sub
mov
sub
push
cmc
enter
push
xor
stc
or
aam
jle
subb
pop
lcall
lcall
in
jne
shlb
std
mov
mov
jg
mov
cmp
mov
clc
or
sti
pop
movsb
lret
int3
inc
punpcklwd
xchg
add
inc
pop
mov
aad
add
aaa
ja
dec
push
inc
push
dec
mov
les
jge,pn
inc
push
bound
add
iret
pop
mov
lods
push
rorl
cltd
in
jge
imul
je
int3
adc
add
lret
adc
popf
aas
ja
into
pop
lea
sub
movsl
ljmp
lcall
mov
adc
loope
popa
lods
insb
lock
test
cmc
inc
push
jo
lret
fbld
cmp
les
mov
push
and
xchg
mov
push
inc
pop
jp
and
sbb
stos
ror
adc
push
xchg
js
dec
js
ja
je
fdivl
or
adc
fisttpl
icebp
loopne
lea
in
xchg
add
pop
and
xlat
cmp
mov
les
in
loop
ds
cli
shll
js
push
pop
out
insb
lods
ljmp
xchg
pop
ds
sub
jecxz
and
aam
dec
pop
std
xlat
push
rcl
push
mov
ret
arpl
out
shrl
cmp
fistl
pop
ja
cmp
or
arpl
aaa
lcall
shll
jae
mov
jns
int
popa
lret
mov
push
ss
inc
mov
jns
fsubp
pop
cwtl
mov
sub
sub
mov
jns
scas
sbb
adc
lahf
add
adc
jmp
jns
das
jno
xchg
adc
pushf
ljmp
dec
mov
ret
push
xor
xchg
jbe
pop
xchg
test
sbb
out
fidivrl
into
int
sbb
mov
je
cltd
cmp
and
jbe
push
cmpsb
test
js
shlb
push
stos
jl
arpl
clc
adc
int3
pop
cmpsl
sub
daa
xchg
and
inc
cwtl
xor
mov
xor
pop
mov
push
adc
call
push
mov
rep
les
adc
xorl
pushf
sub
outsb
cmpsl
jbe
pop
les
pop
movsb
mov
lds
xchg
fbld
cli
mov
xorl
dec
iret
lds
ja
sbbl
sub
adc
movsb
xor
fxch
or
lret
adc
ret
sbb
mov
push
mov
pop
dec
ds
inc
iret
ret
stos
cmp
adc
outsb
ds
xchg
cmp
rcl
fisubs
mov
iret
cmpsl
cmp
mov
scas
sti
adc
pusha
dec
or
inc
push
es
lcall
cmpl
mul
orl
icebp
pusha
xchg
in
jle
rcll
xor
pop
ficompl
or
pop
jae
xchg
outsb
lretw
sbb
pop
or
into
inc
xor
mov
out
cli
lahf
ret
xor
test
adc
push
mov
gs
fdivl
mov
rclb
pop
and
pushf
test
adc
jno
push
imul
test
dec
cmp
sti
mov
outsl
sub
or
xchg
and
push
clc
ss
jae
jno
inc
aas
imul
pop
stc
add
orb
or
sbb
xchg
add
xor
push
sbb
dec
adc
lahf
push
repz
in
xchg
jbe
idivb
shrb
ja
xor
pop
stos
sbb
xor
inc
add
cld
dec
mov
or
adcb
jns
decb
es
push
aam
and
aas
es
jg
jg
sub
sar
pushf
push
sbb
js
ljmp
cmp
pop
jae
hlt
pop
xchg
insb
sbb
dec
mov
lods
pop
mov
push
sub
divl
add
sub
lea
jb
push
cmp
aad
inc
mov
jae
sarb
dec
popa
pop
daa
add
add
cmp
imul
dec
pop
mov
mov
pushf
fidivrs
sbb
push
mov
out
out
mov
fdivl
jg
cmp
push
out
sti
ret
add
dec
and
pop
sbbl
mov
sub
adc
or
cmp
outsl
mov
sub
xchg
xor
xchg
rcll
and
xchg
insb
pop
cld
pop
xor
and
push
addr16
movsl
mov
bound
js
dec
jae
or
sub
push
jo
push
aad
lds
dec
cmpsl
addr16
push
jno
loop
in
push
xchg
push
in
in
jl
daa
and
in
aas
mov
in
xchg
add
ss
cmp
xlat
adc
out
or
pop
inc
fsubr
mov
sub
dec
jbe
and
lds
outsl
dec
imul
inc
js
sub
fldcw
jecxz
adc
sub
pop
adc
stc
mov
mov
pop
cmpsl
repnz
or
xlat
adc
jo
mov
cmp
ljmp
jp
and
push
mov
and
out
out
pushw
adcl
pushf
sub
cltd
jo
pop
mov
hlt
pushf
loope
jbe
mov
cmp
xchg
in
je
add
pusha
in
stc
xchg
loop
jb
push
sbb
not
mov
adc
les
mov
lods
mov
xchg
call
and
dec
out
xchg
jg
in
loope
cwtl
outsb
dec
and
add
fwait
adc
xchg
int
fildll
sarl
lret
and
push
or
dec
aam
jo
fwait
add
inc
sub
cmp
sub
sti
push
test
sub
add
pushf
jnp
loopne
and
push
add
lea
push
fstpl
subl
push
in
add
mov
call
adc
inc
inc
faddl
dec
loopne
xor
aaa
test
xchg
jmp
cmp
mov
popf
mov
add
push
cmp
or
fyl2xp1
pushf
scas
orl
repnz
sbb
movsl
insb
cmp
adc
adc
in
inc
mov
or
mov
stc
testb
mov
xchg
inc
into
int
sbb
sbb
repz
mov
lock
imul
movsb
fmuls
or
xor
sub
imul
subl
jae
stos
dec
cmpl
inc
jo
mov
mov
mov
lds
cmpsb
arpl
cmp
movhps
jae
outsb
mov
orb
das
sti
xchg
inc
push
mov
jo
mov
outsl
cwtl
dec
ljmp
or
out
adc
push
imul
mov
mov
bound
push
lcall
push
stc
lcall
lods
inc
call
mov
add
sbb
data16
and
sbb
mov
jnp
fidivrl
rcrl
in
testb
repnz
test
in
rolb
add
pusha
add
test
and
stos
jmp
jg
push
add
mov
arpl
jne
in
lods
test
fdivl
hlt
into
pop
aad
loop
nop
inc
push
daa
adcb
push
outsb
mov
fdiv
adcl
inc
cmpsl
out
dec
cmp
int3
cmp
dec
pop
sub
shl
clc
inc
xorl
aas
divl
icebp
scas
out
mov
in
or
lahf
cmp
jno
mov
cli
xchg
ret
data16
clc
jp
inc
outsb
test
inc
stos
mov
in
fdivrs
xor
dec
xchg
jmp
ror
sub
std
sub
stos
out
jl
adc
mov
rcrl
mov
dec
jle
jecxz
inc
dec
icebp
cli
ss
cmpsb
addb
loope
jo
mov
fcomps
in
xlat
xchg
lock
shl
and
inc
mov
pusha
cltd
push
cmp
fwait
mov
push
inc
daa
lock
ror
daa
sub
sahf
lret
add
adc
cmp
jbe
xor
and
xchg
sub
or
mov
jnp
decb
push
lock
sbb
aas
je
cmp
jo
popf
mov
mov
xor
pop
out
mov
cmpsl
shlb
stos
mov
push
fimuls
cltd
std
dec
dec
cmp
push
push
fmulp
cmpsl
jns
mov
pop
ret
sub
push
gs
xor
xor
sbb
fsubrl
scas
jp
or
mov
lods
mov
mov
and
hlt
cmp
imul
in
rcr
mov
xlat
sub
mov
xchg
jecxz
sbb
icebp
fdiv
inc
mov
dec
out
mov
sbb
movsb
adc
cmp
or
sub
pusha
adc
push
pop
decb
mov
jo
xchg
addr16
aas
push
test
lcall
loope
push
daa
out
and
out
or
xchg
cmp
cmpsb
leave
push
inc
movsb
mov
xchg
bound
sub
iret
pop
add
jmp
sbb
fwait
scas
dec
sub
push
daa
dec
pop
jbe
push
shrb
mov
in
jo
cmpsb
and
dec
enter
or
movsb
push
ret
cmp
jnp
sub
mov
mov
fistpl
xor
pop
repnz
jb
hlt
push
fwait
add
bound
cltd
inc
imulb
mov
popf
les
es
dec
sbb
sbb
dec
push
sub
sub
adc
xchg
jno
adc
and
xchg
mov
or
in
aad
lock
pop
sbbl
mov
xchg
mov
adc
jl
dec
push
in
xchg
in
lea
inc
hlt
and
aas
dec
sub
les
xor
call
in
pop
or
sub
and
mov
iret
loope
push
mov
cmpsb
daa
adc
das
pop
or
mov
pop
mov
imul
mov
jbe
fwait
or
daa
add
and
stc
sub
sbb
test
neg
xchg
mov
jno
push
ret
xchg
add
mov
sti
sbb
xlat
test
dec
rcr
test
pop
lahf
call
ss
push
adc
clc
call
int3
insl
pop
mov
mov
rcr
sysexit
btc
pop
mov
popa
nop
mov
aaa
mov
push
data16
or
mov
or
insl
mov
sbb
dec
mov
add
addb
pop
iret
mov
sbbl
jle
and
insl
popf
push
arpl
add
mov
fnsave
outsl
lods
mov
inc
inc
loop
cli
xor
cwtl
xchg
lds
and
cmp
mov
or
mov
sub
addl
xchg
jbe
ftst
cmp
xor
jbe
push
out
shll
adc
clc
cmpb
xor
sbb
sbb
ja
inc
mov
mov
sbb
add
clc
stc
and
es
mov
jno
push
hlt
adc
mov
imul
mov
jbe
sbb
push
scas
pop
stos
je
sbb
lds
inc
mov
mov
jge
xlat
push
dec
addr16
repz
push
or
pop
aad
xchg
ss
out
dec
int
pop
jl
cmp
and
add
xchg
push
cwtl
stc
mov
cmp
xor
popf
push
iret
sbb
int3
or
pop
push
les
jecxz
arpl
mov
push
mov
stos
xchg
dec
dec
inc
int
dec
xor
mov
inc
stos
sub
xlat
iret
in
stc
leave
cmp
test
push
movsb
pop
and
aas
dec
jecxz
pop
iret
addl
mov
mov
cmc
shl
lahf
xchg
rolb
jns
fistpl
ds
dec
xchg
mov
out
jmp
sub
xchg
subb
ret
inc
pusha
dec
scas
push
jo
out
sti
inc
cmp
dec
xor
xor
mov
mov
mov
sub
mov
jb
imulb
imull
or
mov
fwait
movsb
jmp
shrb
dec
dec
inc
into
inc
gs
nop
pop
xchg
icebp
repz
fxch
loopne
sbb
mov
imul
mov
aam
lret
mov
push
push
bound
jge
mov
jmp
inc
pop
in
xchg
lcall
loopne
pop
or
pop
pop
push
jae
or
repz
mov
push
jne
adc
adc
cmp
test
adc
call
fcoms
insl
jno
and
inc
add
jbe
test
sbb
pop
jmp
icebp
add
pop
inc
mov
mov
jns
xlat
mov
pmulhuw
rcrb
out
jmp
push
xchg
mov
or
mov
push
lods
test
adc
jbe
pop
lret
mov
pop
add
icebp
cmp
sti
fsub
inc
pop
mov
orl
testl
xor
mov
ja
xlat
jl
icebp
cmc
pusha
mov
aaa
mov
add
fldl
adcl
push
mov
mov
test
sarl
add
leave
jp
sub
xor
inc
add
and
sarl
leave
mov
mov
mov
in
xor
popf
je
xor
pop
jnp
adc
movsl
xchg
imul
es
adc
mov
adc
stos
mov
or
mov
addl
je
or
inc
rclb
jnp
jecxz
adc
loope
out
sub
popf
sbb
push
pavgw
pop
add
ja
xchg
push
dec
jae
in
outsl
je
packssdw
out
sub
cwtl
addb
aam
mov
dec
test
push
neg
and
cmpsl
xchg
stos
cwtl
mov
faddp
mov
popa
in
test
nop
cbtw
cmp
adc
sbb
mov
fcoms
mov
ret
ss
or
xchg
repz
mov
fdivrs
xchg
or
sbb
pop
jae
pop
push
loopne
insb
push
and
xchg
dec
cmp
xchg
int
or
adc
xchg
mov
lds
rorl
ret
popl
popf
jle
lods
push
mov
loope
jo
xor
or
movsb
inc
mov
inc
cmpsl
jge
add
push
lret
jge
inc
movsb
pop
xchg
jnp
sub
lds
sub
neg
cs
jae
xor
popf
ror
dec
jmp
in
xchg
lock
xlat
scas
lods
mov
or
xchg
mov
mov
add
ret
lock
or
rcl
pusha
dec
xor
imul
outsl
sbbb
fstpt
jp
push
xchg
jb
push
adc
popf
ret
cmp
pop
pop
adc
dec
xlat
jmp
aad
and
int
jb
test
mov
test
xchg
ret
das
mov
cli
inc
addr16
sbb
jmpw
std
dec
popf
sub
dec
fwait
cmp
shl
fnstsw
push
adc
insb
mov
scas
pop
jp
mov
js
aaa
adc
xchg
fisubrl
pop
shlb
out
es
or
je
ret
mov
enter
jb
das
adc
xchg
mov
das
cs
je
dec
jnp
xor
insb
mov
in
pop
fucom
cltd
ficompl
sub
insb
addr16
xor
push
pop
dec
lret
cmp
sbb
fdivl
sbb
add
pop
mov
mov
add
jbe
add
in
insb
testb
jo
cmp
mov
movsb
arpl
jne
push
jecxz
out
cli
repz
mov
iret
movb
cmpsb
xchg
xchg
je
lcall
out
adc
outsb
insb
popa
outsb
adc
jne
loope
xchg
in
push
inc
stc
adc
inc
sub
inc
stos
rorb
dec
mov
sbb
push
mov
fnstsw
bound
sub
mov
std
fwait
pop
sbbl
fdivr
jl
adc
int3
daa
in
add
jnp
jg
imul
aad
mov
dec
inc
in
repz
push
lret
adc
mov
clc
xchg
lcall
cwtl
adc
mov
jmp
mov
addr16
mov
call
add
jae
dec
mov
push
xor
mov
ret
std
pushl
sub
sahf
das
xchg
fsubrs
sub
push
popf
jb
mov
dec
mov
das
mov
lcall
ss
jne
das
lock
xor
addr16
and
add
mov
jp
clc
jne
inc
or
xor
shlb
jb
call
jo
aaa
and
loope
aam
and
dec
out
mov
jns
xchg
adc
cmp
cmp
or
pop
outsl
mov
xchg
and
and
pop
lcall
jp
sub
in
xor
lahf
stc
imul
and
sti
mov
les
add
mov
shll
push
mov
mov
dec
popl
pop
mov
mov
xor
ret
jbe
shrl
xor
jb
rorl
pop
add
sbb
cmp
push
jmp
jg
in
sub
dec
loop
cld
outsl
mov
adc
mov
movsl
sbb
xchg
aas
scas
cmc
pushf
dec
push
fadd
cmp
loopne
push
lret
cmp
inc
loope
idiv
sbb
mov
push
outsb
out
notb
mov
loopne
ja,pn
stos
lods
and
cwtl
gs
xchg
mov
mov
sub
xchg
dec
dec
pop
inc
jp
inc
test
dec
shll
fs
dec
mov
or
xchg
les
ror
lcallw
icebp
out
push
int
subps
cmp
sbb
das
dec
pop
dec
jmp
test
loopne
lcall
mov
cld
leave
xor
push
test
test
adc
add
or
add
or
and
xchg
xor
clc
idivb
fwait
sbb
sub
dec
out
cmp
and
in
jae
fiaddl
pop
push
ljmp
mov
fs
push
xchg
and
call
cmpb
push
cmc
stos
pushf
test
mov
std
sarb
jmp
pop
mov
or
outsb
cwtl
mov
adc
lret
movsb
mov
in
or
sbb
xchg
xchg
jae
lods
cmpsl
fisubrl
xchg
pusha
movsl
jnp
je
lds
mov
jg
shrb
mov
test
push
scas
out
daa
ss
inc
test
mov
mov
mov
xchg
dec
testb
ret
jg
out
mov
jg
ret
inc
mov
inc
rcrb
ss
fstpl
pop
ljmp
inc
add
mov
mov
jo
mov
dec
pop
jge
pop
int3
sub
or
jno
lret
and
jl
inc
rorl
ds
testb
push
jge
ljmp
sub
pop
xor
jnp
loop
lret
call
sub
scas
cmpsl
sub
mov
adc
jbe
sbb
mov
and
cmp
cmp
mov
ja
shlb
pushf
mov
outsl
std
inc
lcall
and
dec
mov
push
adc
into
xchg
je
lcall
jecxz
lds
xchg
push
incb
mov
pop
xchg
jne
in
imul
ljmp
lods
sub
jnp
fnstenv
mov
stc
lods
adc
mov
dec
ret
inc
mov
inc
mov
pusha
xchg
sub
mov
pop
int
stc
ret
fsubs
cwtl
hlt
aas
push
cltd
loopne
jbe
pop
cmpsb
adc
dec
add
cltd
shrl
sbb
in
bound
aas
jne
xchg
pop
adc
loop
xchg
inc
inc
es
and
cmc
push
inc
daa
ljmp
icebp
jnp
mov
leave
outsb
out
jno
nop
pop
or
data16
xchg
and
xchg
jno,pn
pushf
pop
or
test
push
push
add
roll
pop
adc
orps
inc
sbb
outsl
gs
pushf
outsl
lcall
cwtl
jp
fstps
scas
jns
idivl
lock
mov
jbe
fiadds
sbbw
sbb
and
mov
decb
xor
sub
call
jg
sub
inc
mov
bound
clc
xchg
push
jns
cmp
push
pusha
fwait
cmp
jnp
daa
jo
stos
or
sti
mov
or
pusha
inc
mov
mov
mov
popl
imull
lcall
cmpl
cmp
xchg
mov
inc
mov
mov
sub
or
cmc
jae
sbb
adcb
jle
lods
scas
adc
add
xor
sarb
jp
add
addb
incl
repnz
arpl
and
xchg
cmp
insl
test
movsb
pop
pop
mull
jp
xor
xchg
xor
pop
pushl
jmp
cld
sbb
add
popf
add
inc
mov
mov
push
pushl
imul
pop
inc
push
ds
jbe
cmp
icebp
loop
sbb
fs
in
jnp
inc
into
aad
int
ss
sub
push
add
or
mov
hlt
lock
icebp
insb
aad
cmpsb
inc
cmpsl
pop
iret
add
outsb
repnz
aad
ret
imul
scas
cltd
popa
lret
sar
push
or
push
ja
xor
jns
call
jne
fiaddl
adc
pop
sarb
add
mov
shlb
or
cmc
xchg
adc
out
idiv
fs
push
lahf
sbb
outsl
rol
shl
cld
sbb
inc
ljmp
data16
push
jl
adc
jae
or
mov
mov
ret
xor
and
jg
jns
push
ret
xlat
cmp
sbb
call
mov
pop
pop
adc
jl
push
cmp
fsubs
cli
pop
mov
jge
add
adc
and
mov
xor
icebp
mov
mulb
add
sahf
dec
mov
inc
xchg
hlt
push
cmpsb
ds
mov
add
dec
mov
lcall
jns
lock
out
mov
mov
xchg
xchg
lahf
or
inc
and
xchg
dec
add
pop
mov
jmp
lea
push
fnstenv
sub
leave
mov
mov
xlat
fildll
or
or
pop
jae
mov
dec
cltd
pop
mov
and
stc
sub
inc
or
add
cmp
push
adc
movsl
jl
scas
insb
in
mov
sti
pop
or
and
and
inc
idiv
or
pop
cmp
in
mov
mov
out
xor
shl
cwtl
mov
xor
push
arpl
sbb
test
fsubl
lock
dec
xor
insl
and
andl
dec
lock
ja
jge
add
jne
pop
and
or
cld
jmp
and
outsb
push
lret
shrb
push
xor
into
inc
enter
shll
pop
gs
xor
push
adc
repz
mov
fwait
push
mov
xchg
ffreep
or
jmp
stos
mov
xchg
daa
outsl
xor
jmp
js
das
call
dec
fbstp
xor
dec
insb
fwait
xchg
xor
jmp
out
test
inc
push
adc
cmpsb
pop
cli
movsl
jnp
push
sbb
popa
xchg
push
sbb
jge
out
adc
or
outsb
push
in
lret
lret
inc
int
jno
repz
jge
leave
and
cmc
mov
mov
jmp
push
and
roll
in
sbb
mov
out
dec
xor
sarl
into
repz
stc
mov
push
jl
add
frstor
jb
adc
inc
jl
xor
sub
adc
sub
insb
loopne
adc
ja
mov
nop
inc
int
inc
in
je
xor
mov
stos
pop
mov
aaa
mov
or
jmp
mov
repz
jge
cmpsb
into
sbb
faddl
test
jb
xchg
mov
sub
xorb
insb
and
cs
icebp
xor
inc
mov
xchg
mov
iret
mov
xlat
add
sub
mov
insl
mov
ret
jle
mov
jmp
das
clc
or
or
mov
jne
pop
adc
loope
call
add
sbb
jg
xor
gs
movsb
cwtl
je
jle
sahf
jge
sbb
or
adc
nop
add
dec
mov
adc
and
in
testl
mov
ds
xchg
repnz
loop
xlat
fidivs
cwtl
je
clc
or
cmp
inc
scas
xor
pop
ds
mov
pop
xchg
dec
mov
mov
loope
mov
or
idiv
out
xchg
xchg
stos
sti
ss
orl
imul
push
cs
stc
jnp
push
addr16
std
mov
hlt
std
test
add
jo
lret
js
sahf
imul
out
fs
pop
into
fldenv
adc
jg
or
pandn
in
mov
scas
or
and
mov
xor
test
sbb
cltd
out
addl
and
jle
add
xlat
sbb
inc
test
movsl
inc
pop
push
jbe
pop
inc
jg
cmp
pusha
inc
lea
and
mov
jae
pusha
fnstenv
mov
dec
dec
cmp
fninit
leave
and
push
mov
loopne
or
dec
or
xor
pop
push
jo
push
outsb
aaa
and
sbb
jb
cmc
outsl
aas
repnz
inc
jmp
shll
nop
lret
frstor
sub
fwait
aam
adc
pop
or
cmp
out
sahf
gs
adc
stc
je
cmp
xchg
and
jne
mov
xchg
push
mov
mov
int3
and
cmp
test
cmp
popa
xchg
mov
out
sbb
xorl
add
leave
push
jp
push
in
stos
xchg
pop
incl
or
sbb
jo
or
out
mov
int
xlat
xchg
or
rclb
cmc
xchg
and
push
and
ljmp
out
sub
enter
shlb
int
sub
dec
and
lds
push
push
mov
xchg
loop
sub
stos
add
dec
mov
xor
inc
or
mov
or
js
pop
pop
stc
jns
stc
test
inc
mov
jl
ret
inc
stos
ja
cmp
xchg
add
test
pushf
xor
call
and
sbb
out
cwtl
mov
loope
sbb
and
push
sbb
fbld
mov
ret
scas
lcall
xchg
sarb
ss
xor
stc
hlt
add
pop
in
and
mov
scas
stc
imull
or
int3
icebp
test
xor
popa
mov
insb
and
jne
ds
mov
pop
mov
and
push
pop
pop
sbb
jmp
std
ret
lcall
mov
inc
test
adc
enter
stc
rcrl
imul
cmp
sub
outsb
dec
xlat
push
push
xor
ret
mov
pop
out
sub
xor
sub
mov
negb
mov
nop
jl
mov
movsb
xor
lahf
sahf
adc
lods
ja
cmpsl
cmp
push
aaa
or
ja
mov
notl
mov
loope
ljmp
in
lret
subb
push
repz
pushf
fndisi(8087
cmpsb
sub
in
repz
fidivrs
jnp
sub
jle
mov
je
jmp
in
mov
mov
mov
std
out
das
fcmove
xchg
pop
aad
insb
push
lahf
push
lock
xchg
mov
push
or
mov
setne
sbb
stos
xchg
outsl
xor
out
cmp
sub
fstl
movsl
sbb
xchg
pushf
pusha
aam
push
inc
dec
inc
add
sub
adc
add
fcmovb
loope
jb
dec
cmp
in
or
out
aas
xchg
insl
push
mov
arpl
fidivrs
lds
ret
imul
jmp
cmc
inc
dec
sti
clc
nop
xchg
dec
or
jle
test
in
rcr
adc
subl
xor
sbb
cmp
mov
daa
and
jmp
test
pop
stos
lahf
cmp
cli
pop
or
lret
rclb
cmpsb
xchg
fiaddl
jnp
pop
sarl
mov
xor
shl
jecxz
mov
push
sbb
movsl
mov
gs
movzbl
lods
xchg
jo
lds
or
cmpsb
inc
push
push
in
movsb
sbb
mov
clc
lods
fsts
lods
add
pop
les
rcll
dec
sub
sbb
push
jp
jl
mov
sbb
inc
sti
inc
pop
mov
mov
lcall
rclb
pop
cltd
sbb
je
mov
push
inc
adcb
inc
mov
xor
repz
cmp
cwtl
push
roll
in
out
jmp
std
imul
in
xchg
cmp
cmpsb
sub
push
mov
jae
adc
popa
decb
loope
test
push
inc
adc
xor
cmp
int
push
in
adc
mov
out
mov
adc
mov
subl
adc
pusha
lea
xchg
sub
or
out
int
push
cmp
or
inc
push
dec
pop
insl
or
mov
in
testb
in
stc
fs
nop
dec
sbb
mov
xchg
cmp
dec
leave
mov
repnz
in
xchg
xlat
popf
int3
pop
adcb
imul
movb
fcmovb
ljmp
ds
inc
mov
iret
lcall
je
or
mov
mov
daa
cld
test
inc
adc
mov
popa
jne
xor
xor
sbb
jecxz
lock
fwait
mov
pop
mov
or
out
cltd
cltd
lret
imul
in
and
mov
repnz
ljmp
pop
inc
jl
repnz
xchg
adc
pop
mov
jp
xor
aaa
cmp
xor
dec
ror
inc
call
hlt
push
out
pop
gs
insb
es
mov
ss
imul
push
rol
sub
jmp
out
xchg
xchg
sbb
lds
pop
lret
lock
xchg
into
adc
scas
and
imul
cwtl
mov
jno
add
inc
scas
or
out
dec
imul
aas
jnp
push
je
sbb
cmp
xor
fidivl
repnz
stos
cwtl
scas
ret
fistpl
push
push
je
cmp
loopne
clc
jg
mov
mov
pop
dec
fs
dec
ja
mov
push
inc
outsl
sbb
loope
pop
pop
mov
lret
cmp
daa
adc
cmp
mov
lahf
dec
sub
xchg
bnd
in
jno
push
dec
adc
mov
loop
in
sub
and
icebp
imul
fimuls
js
xchg
icebp
mov
mov
mov
xor
fwait
mov
ja
flds
lea
inc
cmpsl
pop
daa
jae
jg
in
xchg
leave
fldl
cmp
jp
xchg
cmp
mov
mov
clc
push
int3
jge
sub
int
inc
mov
xchg
lods
adc
push
or
popa
dec
pop
jmp
dec
imul
xchg
xchg
mov
dec
in
dec
pop
movsb
ljmp
sbb
push
movl
add
in
fdivrs
call
mov
call
ret
and
lcall
mov
mov
cmp
adc
pop
pushf
mov
movsl
filds
ljmp
int
mov
inc
push
add
je
movsl
test
fmull
cs
adc
sub
inc
sub
xchg
adc
sub
mov
mov
and
cmc
imul
xor
or
cmp
mov
sub
add
add
jl
imul
push
and
roll
inc
lea
lret
mov
roll
jb
pop
popa
add
push
or
movsb
shrl
sub
sbb
cmp
mov
push
inc
int3
add
fimull
push
adc
decl
jo
lea
sub
jne
sub
xchg
mov
dec
aas
inc
icebp
inc
jg
push
dec
mov
ficoml
xor
std
mov
leave
repnz
jge
into
xchg
mov
arpl
lods
mov
adc
lret
std
ds
sub
sub
push
mov
decl
push
push
jp
jp
cltd
and
sbb
dec
xchg
arpl
push
dec
add
cmp
jb
ret
pop
movsb
mov
aam
jl
pop
xchg
push
and
iret
inc
mov
lret
or
iret
cmp
add
int3
aas
mov
stc
mov
sub
pop
inc
sahf
aas
xor
hlt
mov
jb
xchg
loopne
rorb
mov
loop
dec
push
cmpb
in
push
out
fdivs
pop
xor
jg
test
lock
test
in
rcl
icebp
mov
inc
into
mov
fadds
sbb
arpl
dec
sub
xor
xchg
mov
inc
xchg
test
jl
leave
xor
aad
jp
xchg
out
mov
add
insb
movsb
mov
mov
dec
int3
and
data16
mov
das
xchg
cwtl
mov
jno
jl
or
jl
in
dec
pushf
aam
fwait
mov
pusha
xor
or
pop
movsb
lods
push
mov
push
sub
cmp
repnz
addl
fbstp
stc
les
rcr
dec
popf
cmp
iret
dec
call
jo
mov
dec
xchg
mov
jecxz
cltd
clc
decl
enter
rol
psrlq
pop
or
leave
sub
mov
aas
xlat
push
popa
movb
loope
pop
loope
imul
mov
mov
jmp
jns
inc
xorb
and
ljmp
add
cmpsl
or
in
das
add
xchg
fstpt
cmc
inc
xchg
inc
jns
jno
int3
jecxz
sub
stos
sub
fisttpll
cli
into
add
mov
inc
mov
xchg
test
jns
js
add
inc
mov
or
mov
add
out
push
mov
mov
jp
xor
aas
sub
clc
jns
and
iret
push
fwait
xchg
sbb
test
push
dec
fistl
jnp
icebp
inc
ret
outsb
pop
fsubrs
jnp
test
fadds
fcompl
cmp
push
xor
and
mov
fisubrs
push
inc
out
stc
sub
aaa
into
sub
sub
in
cmc
xchg
aaa
pop
aaa
xor
cltd
sub
and
out
pop
xchg
inc
jb
shlb
adc
out
jge
lods
xor
sub
loopne
xlat
jno
test
sbb
sbb
sub
ds
cwtl
mov
sbb
adc
pop
scas
movsl
pop
es
cmp
adc
hlt
ret
mov
add
and
ret
in
xor
lock
or
es
repnz
dec
cs
adc
stos
imul
ficoms
mov
adc
jbe
cmp
xchg
jmp
imul
push
mov
push
int
add
aaa
mov
or
or
lahf
loop
or
xor
mov
mov
and
xchg
repz
push
cmp
cmp
xchg
sbb
and
in
mov
rcll
subl
inc
stos
inc
mov
ljmp
stos
mov
or
inc
xor
pop
mov
dec
and
movsb
into
add
andl
jl
xor
dec
ret
in
shlb
aad
imul
inc
ljmp
push
mov
cmc
pop
mov
mov
sub
outsl
mov
popa
jle
lock
pop
jl
and
and
or
pop
jecxz
cltd
cmpsb
xchg
cmp
sahf
xchg
fcomp
jns
cmp
and
mov
jbe
mov
mov
outsl
lea
sub
pop
es
mov
fstpt
mov
xlat
call
jmp
sub
insb
ret
in
mov
stc
dec
xchg
and
dec
stos
cmp
std
into
movsl
or
add
mov
xchg
adc
mov
rcrl
fstl
iret
pop
cmp
sbb
inc
pusha
faddl
pop
and
pop
cmp
pusha
lods
push
mov
pop
xchg
push
dec
push
cmp
push
cli
dec
sub
adc
cmp
add
pop
jl
aaa
sbb
cltd
sub
sbb
pop
mov
lods
pusha
fists
out
jmp
or
pusha
jo
test
clc
imul
cmp
fcomp
clc
jl
dec
cmp
cmp
mov
scas
int
fcmovbe
mov
int3
movsl
jns
push
sbb
test
inc
or
popf
cmp
mov
mov
lahf
or
xchg
add
dec
jmp
outsl
movsb
mov
push
lcall
jmp
pop
and
fs
xor
cmp
and
shr
mov
stos
push
cmc
in
pop
fwait
ja
lret
dec
push
adc
pop
mov
lahf
jne
scas
insl
pusha
mov
push
pop
popa
xchg
jo
or
mov
js
in
in
rorb
out
leave
mov
push
or
cmc
fwait
jmp
inc
jecxz
lods
enter
jo
jns
xchg
or
inc
test
dec
scas
lods
push
ret
pop
ret
adcl
lock
xchg
in
int
adc
push
rorb
jo
pushf
cmp
pop
or
les
clc
outsb
pop
mov
push
push
and
pop
frstor
clc
mov
shlb
inc
jbe
cmp
cmp
mov
cmp
ss
bound
jmp
movsb
fstpl
sti
xor
mov
xchg
adc
fistps
pop
enter
jns
inc
out
sbb
pop
sbb
rcr
inc
test
xor
test
es
pop
jl
sbb
std
insl
pusha
fldl
and
shrb
or
cmp
shrl
ljmp
das
ja
mov
fiadds
out
insl
mov
push
call
cmp
out
mov
inc
icebp
dec
cld
notl
movsl
inc
cltd
and
sbb
sarb
xchg
mov
push
outsb
scas
push
jg
repnz
xchg
cwtl
out
sbb
sbb
shrl
pop
xchg
imul
xor
inc
outsl
out
outsl
cmp
cld
mov
mov
pushf
repz
sbb
jbe
lret
ret
xor
pop
xor
sbb
fstps
outsb
mov
lods
mov
xchg
xor
sbb
or
jmp
fsubs
cmp
mov
icebp
add
sub
dec
pop
xchg
adc
dec
push
scas
hlt
iret
mov
and
hlt
in
and
jl
jnp
inc
push
push
repnz
repnz
inc
mov
sub
mov
iret
icebp
inc
filds
pop
in
stos
test
notl
outsl
add
mov
ja
in
pop
sbb
ja
fcmovbe
push
lret
mov
out
std
dec
cs
add
mull
out
insb
cmp
add
ds
lahf
jl
lea
shlb
cwtl
mov
scas
minps
jmp
xorl
sahf
xchg
mov
mov
ficoml
dec
push
xchg
fisubrs
add
inc
xor
mov
iret
dec
or
xchg
xchg
and
pop
and
add
or
dec
sarl
jbe
stc
shll
or
cmp
shll
and
aad
pushf
dec
adc
adc
jmp
xor
add
mov
jbe
mov
insb
dec
mov
pop
push
andb
sub
cmp
xchg
stos
cmp
xor
dec
pop
cmp
dec
xchg
dec
fcoml
pop
fisttpl
sub
mov
push
sbb
dec
data16
xor
inc
and
or
or
jl
pop
dec
insl
lods
or
cmc
or
xor
push
les
pop
jno
jno
lock
inc
daa
xor
mov
cmc
movl
jle
adc
shll
movsb
cmp
add
lods
pop
mov
adc
mov
pushf
cwtl
insb
add
jmp
pop
gs
mov
mov
bound
push
push
pop
pop
xchg
pop
lods
sub
jecxz
sub
xor
pushf
cmp
pushf
cmp
push
push
test
shrl
cwtl
and
adc
add
popa
mov
int
or
iret
dec
enter
jne
cli
enter
sti
lea
push
lahf
popf
mov
mov
push
sub
and
test
out
data16
dec
ret
mov
arpl
sbb
std
aad
sub
aas
cmp
push
mov
sub
xorl
inc
or
mov
outsb
nop
int3
lret
xchg
aam
and
xor
and
faddp
mov
pop
data16
in
mov
or
sbb
xchg
aaa
cmp
rcr
imul
lret
ds
xchg
outsb
cmc
lret
fs
xchg
hlt
mov
xchg
adc
jge
aaa
data16
sbb
mov
std
addb
inc
xchg
push
xor
ja
arpl
fldcw
mov
in
cmpsl
xchg
mov
xchg
pop
repnz
aam
je
cltd
dec
imulb
cwtl
rcrl
xlat
pop
pop
or
adc
out
arpl
xor
cld
and
rcrl
adc
je
std
pop
lea
test
mov
repnz
lods
push
ret
inc
lret
test
inc
or
add
je
mov
mov
push
jne
jae
mov
jnp
xchg
aam
and
sahf
jl
cmp
cs
adc
mov
dec
stc
iret
repnz
out
stos
push
dec
xlat
inc
pop
jbe
iret
cmp
ror
sbb
mov
aas
mov
or
push
or
out
pop
addr16
xchg
roll
stos
in
xor
lods
call
push
and
push
jne
mov
jl
add
dec
inc
add
ficoml
push
hlt
rcrb
jno
xor
loope
mov
inc
mov
inc
push
and
fsubrs
xchg
addr16
mov
dec
je
arpl
mov
pusha
fcomps
add
sub
sub
xchg
pop
sbb
in
push
insl
call
jmp
jb
aaa
icebp
fstpt
imul
jae
cwtl
sahf
cltd
enter
cmc
and
push
aas
xchg
mov
je
popfw
ja
adc
add
push
dec
cmpsl
or
mov
xor
cmpb
jns
sahf
aaa
popa
clc
xchg
mov
int3
mov
add
sbb
push
mov
adc
xlat
cmc
sbbb
add
sub
sbb
rolb
dec
data16
cmp
pop
jo
xlat
jl
scas
ficomps
mov
ljmp
ret
mov
push
test
out
lret
jae
mov
repz
mov
ret
fidivl
pop
pop
adc
subl
pushf
sbb
jmp
negb
inc
adc
lods
fnsave
add
dec
int
push
aad
or
and
inc
mov
insl
inc
fidivs
cwtl
or
pop
fisubl
fimuls
outsl
adc
outsb
mov
adc
cmp
fs
mov
ret
pop
pop
aad
mov
and
or
dec
cwtl
and
sbb
out
xchg
imul
pop
ret
xor
push
fs
jp
mov
dec
xchg
mov
inc
rcll
aad
mov
inc
xchg
push
das
adc
mov
ret
mov
sbb
pop
loop
and
test
lock
push
movsl
jp
loope
fucomi
jge
sbbb
add
sti
repnz
sub
or
jae
jno
mov
mov
dec
mov
xor
lret
pop
sbb
pop
mov
insl
xor
jne
idivb
aad
test
pop
test
lock
ret
push
repz
dec
inc
xor
out
das
movsl
mov
mov
and
test
jb
add
inc
xchg
arpl
inc
ja
sbb
cmp
ja
push
imul
push
out
mov
addr16
inc
movsb
mov
sti
loop
shrb
mov
aaa
mov
or
cmp
and
jle
adc
inc
imul
call
orb
insb
lret
push
lock
pop
xchg
mov
imul
inc
cmp
adc
popf
push
jns
pop
inc
shlb
cmpsb
insb
pop
inc
or
jo
jg
cmp
mov
mov
fs
jno
jmp
add
xor
xor
lea
jbe
pop
push
pop
jno
xchg
xorl
sub
sub
push
mov
aad
test
xchg
adc
lods
arpl
sbb
xlat
inc
or
or
inc
pop
mov
nopl
in
mov
enter
fstpl
pop
outsb
cltd
add
fisubl
repz
popa
mov
mov
push
fbld
ficoml
lods
add
outsl
push
fs
cli
cli
outsl
inc
dec
imul
and
jmp
jbe
pop
xor
pop
dec
jnp
mov
push
mov
into
test
dec
pop
arpl
adc
inc
idivl
push
cmp
and
scas
or
or
mov
dec
add
rolb
mov
inc
inc
lcall
ret
mov
mov
push
mov
lods
mov
xlat
lds
iret
inc
add
add
sbb
in
ret
gs
cmp
xchg
sub
int3
hlt
js
gs
mov
lea
jnp
lahf
and
cmp
inc
cmp
or
movsl
fistpl
lret
push
and
pop
add
push
int3
dec
jl
lods
or
xchg
iret
push
pusha
mov
sahf
inc
inc
sahf
mov
lahf
add
jne
or
jmp
je
outsb
xchg
cmpb
xor
sahf
jmp
mov
jnp
shlb
mov
icebp
icebp
jne
pop
lea
fidivs
mov
xlat
movsl
dec
sahf
aam
mov
mov
fisubl
fwait
test
outsl
daa
xchg
test
xchg
shl
push
pop
cs
aad
ret
inc
and
jbe
clc
or
int
xchg
xor
loope
stc
les
popf
xchg
and
sbb
dec
pusha
imul
out
ja
aam
call
and
pop
push
enter
mov
mov
mov
popf
add
mov
and
rolb
or
lea
jp
mov
dec
mov
mov
inc
add
leave
pop
fsub
in
test
int3
popa
clc
and
sbb
jle
add
sub
enter
xchg
aas
pop
add
jmp
add
sarb
divb
or
lret
ficomps
loop
mov
xchg
jno
push
addr16
pop
int3
lock
in
cmp
fistpl
lods
mov
mov
dec
xchg
jecxz
cmpsb
mov
mov
daa
leave
ja
lods
rolb
iret
in
mov
js
movsl
or
mov
repz
ja
sbb
fcomip
rcl
pop
aas
fstpl
andl
xchg
outsl
fdivrl
xchg
std
mov
mov
jle
out
push
in
mov
movsl
sbb
scas
jae
mov
decb
das
mov
xchg
rorl
sahf
sbb
shrl
and
dec
push
imul
repnz
dec
mov
pop
popa
leave
aad
int3
inc
adc
pop
mov
push
data16
fldcw
inc
jge
sub
mov
int3
outsl
out
cwtl
cmp
or
sub
dec
sbb
dec
push
mov
push
inc
jnp
loopne
push
jne
inc
jb
jle
mull
movsb
aam
jge
cmp
sub
aaa
sbb
enter
xchg
adc
or
lock
jge
lods
push
jnp
pop
insl
pop
fucomi
sbb
lahf
dec
rcr
cmpsl
mov
insb
xchg
pop
mov
pop
adc
xor
lock
hlt
ljmp
js
clc
stc
lcall
repnz
jmp
test
bnd
mov
adc
cmp
mov
xlat
imulb
jecxz
je
mov
jno
lahf
mov
mov
mov
pushf
dec
dec
or
movsb
movsb
sub
fimuls
lock
addr16
cli
fists
pop
sahf
jg
push
movsb
inc
lret
imul
push
incl
push
mov
cmp
xchg
outsl
push
inc
jae
imul
test
aam
cmp
cltd
mov
icebp
inc
fidivs
sbb
sbb
and
int
aas
mov
add
xchg
les
sub
aam
inc
out
push
daa
popf
dec
mov
add
inc
dec
popf
mov
jo
fadds
push
push
addr16
add
in
add
fdivrs
dec
mov
inc
cmp
addr16
mov
clc
mov
sahf
mov
sub
fsub
mov
ljmp
jae
sahf
dec
scas
xchg
loop
inc
pop
mulb
cmc
mov
push
fsts
ret
jno
pop
iret
movsb
mov
xchg
jg
lcall
dec
mov
xchg
mov
scas
xchg
push
push
ficompl
pop
mov
xor
insl
mov
imul
repz
mov
pmulhuw
aas
jp
mov
inc
movsb
dec
xchg
sub
mov
xchg
imul
fs
pop
pop
lret
lcall
jg
test
and
jge
jns
cli
sbb
pop
call
js
xchg
std
lods
sub
and
dec
add
mov
mov
test
lods
dec
mov
adc
popf
enter
inc
push
sbb
jns
sub
test
pop
dec
movl
sub
mov
popf
jge
mov
push
and
js
xchg
mov
mov
mov
or
jle
das
cmp
aaa
mov
jecxz
xorb
shll
scas
adc
jge
sub
lcall
push
lret
loopne
stos
movsb
mov
outsb
imul
mov
fstpt
dec
enter
icebp
aas
adc
and
cmpsb
subl
or
sub
cmp
dec
mov
push
inc
add
push
fnstsw
stos
ffree
lods
push
jmp
mov
sbb
mov
mov
sarl
cmpsl
flds
jne
nop
out
mov
ja
jb
fistpll
rolb
pusha
add
paddusb
dec
push
bnd
les
outsb
cs
xor
aas
daa
jge
sbb
xor
ljmp
cmp
mov
mov
dec
jp
cmp
ud1
out
and
mov
popa
orl
cltd
scas
shlb
mov
sbb
push
repz
mov
pop
repz
push
fcmovnbe
mov
lea
mov
scas
push
outsl
insl
push
outsl
adc
xchg
ljmp
cmp
movsb
xlat
in
imul
sub
adc
cmp
out
dec
cmpsb
ljmp
data16
push
jle
cmp
dec
pop
jno
xchg
bound
dec
ret
add
cmp
sbb
std
inc
cmc
xchg
mov
stos
xchg
mov
leave
jae
adc
mov
inc
xor
orb
mov
inc
lahf
mov
pop
out
icebp
scas
shrl
add
xchg
and
je
dec
test
stos
mov
stc
rcrb
in
inc
stos
xor
ds
push
add
subl
decl
mov
rcrb
les
mov
test
out
out
cmp
fildll
sbb
dec
in
iret
jecxz
mov
dec
push
cmpsb
ds
fiaddl
xor
stc
jg
mov
sub
xor
ficompl
data16
test
pop
push
pop
out
mov
scas
push
or
mov
rcl
pop
and
push
push
mov
aam
daa
add
mov
sub
add
and
sbb
cld
push
cmp
mov
push
dec
mov
je
insb
xor
adc
pop
movsb
les
fmuls
jne
add
mov
sub
pushf
mov
lock
xchg
push
push
fsubr
outsl
pop
jb
ljmp
jbe
lods
dec
inc
out
jmp
xor
push
xchg
pop
popa
mov
inc
sbb
popa
mov
fdivl
int
xchg
cmp
int3
in
es
mov
xchg
and
ret
outsl
add
stos
enter
xchg
data16
inc
stos
and
gs
loopne
mov
cs
mov
aas
jne
arpl
mov
and
push
jae
ss
scas
out
insl
out
mov
push
insl
xlat
pop
loope
mov
loope
daa
lret
movb
cmpsb
inc
sbb
lock
xchg
pop
push
pop
clc
jge
sub
in
lcall
ja
xor
sbb
xchg
mov
leave
ss
cltd
mov
in
dec
insl
lock
push
jns
xor
xor
jne
add
pop
add
pusha
pushf
std
jo
into
cmp
push
mov
es
leave
dec
fsubl
adc
out
repz
lahf
scas
adc
jecxz
sbb
jno
cmc
in
mov
inc
loop
adc
pushl
stos
sbb
mov
arpl
mov
jmp
nop
in
lret
jl
je
pop
ss
fldl
lds
imul
cmpsb
cmp
lock
es
push
lea
dec
push
cltd
aas
or
cwtl
fdivrl
mov
pop
popf
mov
jg
aam
cmp
and
incl
or
inc
inc
js
xchg
push
rep
inc
push
cmp
dec
xor
test
enter
fs
das
daa
adc
mov
incb
mov
inc
outsl
into
jecxz
cltd
inc
and
sub
faddp
mov
call
or
mov
iret
add
inc
adc
ljmp
addr16
movl
cld
ljmp
dec
jae
ret
add
stos
cmpsb
inc
adc
sub
cmpsb
pop
in
test
xchg
xchg
sbb
sbb
mov
and
dec
and
mov
hlt
outsb
aaa
sbb
add
hlt
shll
scas
gs
add
stos
mov
sbbb
lahf
mov
mov
push
fistpll
pusha
xor
push
inc
sub
gs
and
pop
aad
dec
inc
ljmp
adcb
int
les
lret
xor
inc
pop
shr
sti
lret
adcl
jo
fnstsw
dec
or
dec
or
jle
fs
xchg
sbb
xlat
pop
in
add
xchg
pop
mov
in
push
push
cmp
sbb
adc
popa
mov
sub
dec
pop
jno
xchg
push
xor
xor
leave
sti
and
ja,pn
or
bound
sbb
lcall
or
and
mov
pop
sub
pop
stc
repz
dec
ds
stc
inc
sub
mov
pop
jnp
and
pop
imul
movsb
xchg
pop
xchg
xchg
test
rorl
pop
or
cmpsb
cltd
push
mov
or
ja
push
pop
test
lret
xchg
mov
mov
sahf
inc
pop
cmpsb
adc
mov
aad
lret
stos
xchg
sbb
push
fimull
add
pcmpgtb
sub
bound
sbb
fisubs
add
pop
iret
insb
sub
cmpb
or
je
push
loopne
ss
int3
mov
fiaddl
std
cld
xchg
adc
flds
jbe
xor
push
ficompl
pusha
jecxz
fimull
mov
lods
popa
sahf
sub
sti
in
das
hlt
pop
mov
and
stc
dec
mov
cltd
les
xchg
ja
andl
outsb
mov
adc
rorb
inc
sahf
ljmp
mov
nop
out
push
cwtl
arpl
test
adc
into
pop
sbb
movsl
out
add
aaa
aaa
je
cmp
mov
pop
mov
push
insl
fistpl
repz
jp
adc
cltd
sbb
xchg
xchg
cmp
fsubl
sbb
subl
fisubl
lcall
add
pop
push
push
pop
xchg
das
sub
fucomp
mov
push
sub
sbb
cld
lea
imul
inc
test
not
sti
dec
loop
fsubrl
sti
push
mov
test
add
cmp
mov
in
lods
jmp
add
lret
enter
or
mov
in
push
lcall
adc
test
add
and
icebp
push
and
inc
adc
mov
xchg
adc
pop
mov
sti
push
push
pop
popf
mov
sub
mov
pop
sub
adc
sub
test
imul
cltd
push
lock
push
jl
daa
mov
mov
icebp
cmp
push
xchg
in
sbb
jne
es
sub
jle
aad
in
dec
mov
inc
push
arpl
incb
sbb
movhps
int3
cmp
mov
scas
xchg
frstor
jbe
clc
cmp
nop
fucomip
dec
daa
movsb
xchg
fdivrp
dec
leave
push
xchg
aaa
push
dec
jge
rolb
xchg
mov
and
lret
adc
xor
sbb
dec
mov
adc
gs
popf
add
and
dec
clc
and
out
or
insb
xchg
xlat
jge
push
xlat
push
mov
sbb
cmc
sahf
pop
xchg
shll
xor
sbb
cmp
or
jnp
and
or
cld
cld
xlat
repz
inc
je
js
push
push
aad
iret
movsb
inc
jmp
xchg
sub
jns
jns
mov
sub
cmpsl
ficoml
cwtl
stc
push
xchg
ds
shll
push
jae
je
sbb
mov
cmp
and
sarb
xchg
mov
mov
aam
xchg
ljmp
divb
inc
outsb
inc
call
shl
inc
arpl
clc
lods
ret
push
mov
pop
cmp
and
push
data16
or
adc
ret
adc
adc
add
mov
es
repz
cmp
add
stos
inc
hlt
sbb
das
pop
in
push
lahf
leave
push
cmpsb
add
mov
xchg
jns
rcll
mov
loopne
push
scas
xchg
int
cmp
aaa
aas
fstpt
in
mov
in
loop
jns
cmpsb
mov
arpl
sbb
scas
mov
mov
shrl
cmp
sub
subl
sbb
in
pusha
fnstcw
sahf
mov
cwtl
das
test
pop
sbbb
pusha
insb
in
cmpsl
and
jmp
imul
jo
xchg
cmp
and
push
mov
iret
jo
inc
scas
or
daa
xor
mov
push
cmp
pop
out
es
sub
inc
jg
xor
jge
sbb
or
arpl
sbb
insb
loopne
or
test
sbb
xchg
test
sti
mov
into
or
inc
hlt
in
mov
add
xor
fmull
aaa
dec
push
cmc
pop
test
ds
cs
push
daa
mov
fs
js
jno
adc
std
cmp
mov
outsb
stc
jno
xchg
dec
scas
data16
mov
push
negl
push
daa
mov
clc
stos
out
ss
and
mov
inc
dec
je
arpl
popf
repnz
je
in
dec
push
scas
mov
xchg
mov
xchg
sub
jbe
rol
add
sbb
popf
jle
fs
sub
vpsubusb
in
lahf
sbb
rorb
imul
sub
lret
ret
mov
ret
sbb
xchg
cmpsl
sbb
jns
daa
xor
pusha
cld
leave
mov
xlat
sti
js
dec
ret
xorl
ret
fimuls
inc
jge
add
add
jb
lods
pop
loopne
sar
sarl
and
gs
mov
cmpsb
sbb
adcb
in
or
repz
push
xchg
cltd
loope
dec
ds
popa
ffreep
mov
cltd
dec
xchg
popf
sbbb
pop
mov
ljmp
dec
loope
mov
xchg
jnp
mov
xchg
out
add
popa
cwtl
push
xchg
imul
pusha
dec
call
lock
mov
or
dec
jbe
scas
sub
cmp
adc
inc
sbb
sbb
sub
inc
icebp
sbb
mov
enter
fdivs
mov
or
xchg
lods
inc
cltd
call
in
pop
inc
lods
mov
into
pusha
ds
inc
in
pop
rolb
ficomps
addb
and
fldenv
push
imul
lods
mov
pop
xchg
mov
mov
mov
addl
out
pop
fdivr
or
outsl
xchg
xchg
das
mov
mov
jecxz
and
cmpsl
adc
subb
cmp
fwait
sahf
sbb
adc
cmc
arpl
lcall
add
dec
test
mov
adc
movsl
inc
lods
jne
push
pop
icebp
mov
pop
leave
repz
add
out
inc
int3
mov
mov
stos
in
sbbl
push
dec
push
in
movsb
mov
in
jns
das
cmpl
lds
dec
out
or
jno
jns
dec
cmp
add
lahf
or
dec
jns
jne
fiadds
or
cld
call
outsl
xor
push
fcomps
cmpsb
push
arpl
xchg
pop
shrb
inc
or
push
dec
jbe
and
mov
std
sbb
mov
xor
scas
pop
fs
mov
pusha
mov
and
ret
pop
push
jo
shlb
pushf
add
es
inc
sub
enter
je
rcrl
paddusb
add
lock
cmp
cwtl
pop
rcr
push
push
pusha
xchg
xlat
inc
imul
cwtl
scas
into
scas
dec
cmp
aaa
pop
mov
push
adc
lret
pop
bound
dec
lcall
push
cmp
rclb
ss
mov
jno
out
aas
lcall
sbb
insl
shl
ficompl
popa
ja
js
imul
jns
xchg
call
imul
mov
jns
sub
stos
jmp
xchg
test
cmp
jnp
inc
out
ds
ljmp
sbb
lea
sub
in
stos
inc
and
hlt
pop
aas
add
inc
lds
cli
push
rcll
sarl
imul
mov
cmpsl
dec
je
sbb
lret
int
push
jne
jl
fmulp
cmp
sbb
data16
popa
mov
mov
add
dec
cmc
mov
mov
not
mov
jle
mov
mov
xrelease
add
push
je
jno
pop
cwtl
sub
xor
movsb
pop
inc
shlb
xchg
cli
xchg
vmptrld
and
dec
sarl
test
xchg
dec
hlt
jb
dec
sub
repnz
xor
or
insl
addr16
aas
ret
popf
push
mov
test
stc
dec
ljmp
dec
mov
xor
sub
jmp
or
roll
es
adc
rol
js
in
xor
int3
sbb
push
or
jle
movsb
cmpl
stos
insb
subl
and
push
pop
pop
ss
inc
cmp
gs
pushf
sbbl
xchg
push
aam
mov
bound
aam
sub
pop
cmc
mov
fstl
and
mov
pop
leave
pop
cmp
and
es
lock
inc
push
stos
fcomps
aad
mov
test
mov
xchg
mov
push
stos
loopne
das
and
cmp
and
xchg
das
ret
xchg
push
add
cmp
mov
jp
ds
fnstcw
test
aaa
daa
les
xor
repz
mov
lret
test
inc
cmp
sub
jnp
xor
test
stos
adc
roll
cltd
jae
mov
out
mov
sbb
mov
pop
andb
jnp
les
sub
mov
fwait
in
fdivl
shrb
cmp
push
inc
aam
ret
dec
mov
dec
sub
xchg
testl
js
jmp
dec
and
hlt
sahf
push
loop
repnz
xchg
dec
pop
push
jae
sti
jmp
pop
inc
push
adc
fsubr
sub
mov
in
js
inc
bound
xchg
adc
jmp
addr16
imul
pusha
push
adc
jge
push
mov
pop
popa
in
mov
add
mov
sub
mov
into
mov
cwtl
push
out
xchg
push
out
and
adc
pop
int
add
and
sbb
in
and
dec
cmp
dec
and
sbb
mov
or
lahf
outsl
xchg
mov
jecxz
out
out
inc
lods
xchg
aas
jbe
fldcw
movntps
stc
adc
mov
dec
out
inc
jmp
outsl
jmp
dec
xor
lcall
jecxz
jle
mov
add
in
flds
ret
adc
mov
lcall
jge
aam
and
xchg
pushf
inc
test
pusha
mov
cs
sahf
mov
ljmp
cmp
fnsave
xchg
imulb
and
stc
test
or
inc
cld
mov
clc
lds
call
es
sbb
mov
insl
fbstp
fidivs
popa
ljmp
sahf
jno
push
push
nop
inc
lds
push
pop
data16
dec
jne
shrl
add
xor
sub
cmpl
mov
add
hlt
push
mov
cld
mov
loopne
cmpsl
test
cmpsb
out
mov
inc
mov
jp
in
sarb
fimull
jecxz
and
sbb
cwtl
push
scas
aam
push
sbb
ret
and
int3
out
pop
cmp
pop
xchg
xor
jae
test
mov
mov
rcr
pop
push
loop
xor
sub
pop
add
xlat
jge
mov
cmpsl
xchg
aas
test
push
xchg
ljmp
jg
ja
rorb
sarl
lock
push
sub
xchg
fsubs
sub
data16
xchg
jp
sti
push
fs
push
std
jo
enter
movsl
andl
and
cmp
add
adc
inc
sbb
dec
loope
outsb
dec
push
cmpsb
xor
pop
pop
fwait
pop
jo
xor
lret
inc
imul
mov
scas
gs
dec
or
into
mov
push
push
dec
stc
popa
icebp
cmpsl
fistl
mov
test
std
dec
inc
xor
xor
add
mov
inc
sahf
push
jnp
dec
test
jae
lret
cs
dec
fildll
inc
je
xchg
test
je
clc
ss
dec
inc
mov
jge
out
les
pushf
fnstcw
outsb
data16
out
mov
aas
ret
adc
jne
push
add
fcomip
es
int3
xor
les
mov
out
lea
loope
xchg
mov
jp
jmp
mov
ret
loop
jbe
clc
lock
fs
add
adc
push
jns
gs
test
lcall
addr16
mov
push
call
mov
cmp
and
arpl
push
inc
call
loop
cld
mov
xor
outsl
adc
int
out
mov
test
xchg
mov
xorl
pop
popf
je
shlb
jns
add
dec
sbb
out
and
sti
push
inc
cmpb
test
push
hlt
arpl
sbb
punpckhwd
cmp
pushf
rol
add
es
out
arpl
mov
shll
jmp
inc
das
cmp
cltd
push
jmp
sahf
addr16
xor
popf
mov
xor
sbb
fcmove
js
add
add
cmp
dec
into
dec
aaa
add
or
sti
mov
mov
pusha
imul
jecxz
mov
in
mov
imul
mov
push
push
xchg
in
cmp
sub
jne
push
add
adc
xchg
psadbw
sbb
inc
push
lods
push
cmp
imul
add
dec
and
mov
adc
mov
popf
out
fs
jge
and
xor
xchg
scas
fnstcw
movl
pop
jne
jge
push
pop
lea
rorl
fmuls
out
xor
xor
or
adc
loope
inc
mov
in
fs
push
xor
mov
mov
push
sbb
fcmovne
shr
mov
lahf
aaa
insb
shll
ret
das
sub
add
mov
sbb
mov
or
std
push
cmp
lods
mov
sub
pop
in
icebp
aaa
inc
dec
mov
in
cwtl
sbb
mov
or
mov
in
or
pushf
xor
cld
loope
xor
lahf
or
sti
and
or
repz
xor
inc
add
xchg
orb
dec
mov
andb
add
sub
mov
dec
jno
jmp
mov
cmp
inc
test
mov
push
addl
xor
std
mov
pop
xchg
xor
pop
jmp
hlt
in
sarb
adc
mov
inc
test
movsb
inc
sbb
aam
inc
push
mov
aaa
xchg
pop
sbb
jp
cmpsl
cmc
jmp
insb
outsl
rclb
xor
fdivs
dec
jae
pop
lret
outsb
ficoml
mov
cmp
mulb
mov
adc
adc
jns
fiadds
sub
push
test
mov
test
out
jb
or
sti
mov
ljmp
xchg
jl
and
adc
sub
sahf
xchg
mov
rcrl
repnz
in
mov
and
push
cmp
xor
sub
iret
stos
je
jns
pop
out
pop
mov
jns
int
es
leave
jecxz
insl
rcrb
in
push
xor
sub
loop
push
mov
pop
and
push
fwait
jmp
xchg
ret
sbb
je
xchg
cltd
and
xor
pop
mov
push
aad
out
cli
or
pop
add
sbb
fs
add
ss
fs
insl
test
loop
or
icebp
xchg
jns
ficompl
jmp
cld
sbb
xchg
gs
pushf
fdivrl
rcr
jo
sarl
leave
adc
lcall
adc
cs
shll
dec
gs
inc
in
fimuls
mov
pop
lret
test
jl
xor
pop
lock
sub
mov
or
icebp
xchg
push
rcrl
loope
xor
mov
idivb
dec
push
cmp
mov
or
inc
rorl
dec
adc
pop
mov
pop
push
pop
lds
mov
mov
ficoms
push
dec
cld
fidivl
lret
leave
dec
fwait
je
movsb
nop
cmpsb
lods
sbb
fistl
aaa
xor
add
orb
jg
cld
jg
inc
mov
loop
cmc
iret
lock
jg
sti
mov
xchg
in
or
ljmp
add
stos
cmp
push
jae
mov
cmp
jecxz
aas
iret
adc
or
in
jge
popa
mov
pop
enter
in
push
into
ja,pt
mov
adcb
xorb
insl
xchg
gs
mov
sti
inc
in
xchg
aam
enter
hlt
int3
ss
inc
mov
or
rcrb
ljmp
push
imul
inc
shrl
fnstenv
pop
pushf
inc
cmpsl
fidivrs
out
rol
shlb
fbstp
mov
ljmp
push
bound
out
popa
jb
xchg
xchg
jno
imul
mov
cmp
xor
inc
shrl
xor
adc
and
ja
ret
hlt
es
xchg
shl
loop
subl
testb
mov
iret
and
ljmp
xor
or
mov
mov
inc
lahf
xor
scas
negb
sbb
adc
cmp
lock
stos
xchg
sbb
lret
aam
scas
cmpsl
mov
dec
fnstcw
sub
push
divb
add
fstp
sub
cmp
cs
push
push
xor
mov
inc
dec
cmp
stos
je
lret
mov
xlat
ss
xlat
push
and
fmuls
jecxz
dec
adc
stos
inc
aad
cmc
xchg
dec
pop
mov
jg
enter
pusha
mov
jno
icebp
in
cwtl
ja
sub
mov
xchg
xchg
cmp
jg
inc
inc
das
jns
cld
jmp
cmp
jecxz
cmpsl
mov
push
sbb
test
pop
movsb
lahf
push
mov
add
cmp
and
fbld
adc
stos
mov
xchg
mov
mov
out
nop
add
mov
mov
xor
dec
mov
push
xchg
fcmovbe
lock
mov
mov
inc
int3
leave
pop
jae
lcall
cmp
fiadds
ror
cmp
or
sub
fs
sub
sbb
hlt
mov
xor
jmp
push
xchg
negl
push
mov
mov
movd
sti
mov
out
lahf
push
loopne
jnp
jae
subl
xchg
insl
sti
std
sub
and
les
loope
xchg
fwait
and
pop
pop
or
orl
adc
imul
cmp
sbb
or
ds
jno
jbe
pop
fsubs
jge
daa
scas
pop
adc
imul
pop
add
push
jl
mov
jb
inc
mov
mov
subl
xor
repnz
xor
roll
dec
jae
cmp
xor
adc
dec
test
pop
mov
inc
stc
fwait
call
and
mov
popa
xchg
clc
mov
or
insb
aaa
filds
out
movsl
ljmp
sub
jecxz
scas
outsl
and
xchg
sub
mov
lea
mov
pusha
jle
dec
ficoms
jmp
adc
dec
mov
and
cmp
mov
scas
lcall
adc
pushf
mov
flds
or
inc
sub
sbb
mov
call
sti
gs
pop
mov
jecxz
fisubl
push
xchg
aas
mov
mov
out
inc
sbb
sbb
cmpsb
clc
add
sub
je
pusha
inc
cmpsb
sarl
adc
out
xchg
xchg
fistl
int3
add
jmp
push
pop
adc
push
mov
arpl
inc
btc
lret
mov
mov
cmp
addr16
sbb
cmpb
int3
loope
mov
pop
and
sub
sub
push
mov
xchg
mov
xor
mov
jnp
jp
sti
push
inc
in
adc
sbb
pop
jno
repz
ja
xor
cmp
out
imul
xchg
inc
mov
push
pop
test
addr16
mov
imul
in
push
adc
outsb
fmull
repz
pop
and
das
add
push
dec
push
into
daa
and
mov
sub
mov
js
clc
pop
jmp
int3
sbb
push
int3
addb
xor
aaa
mov
pop
jns
sub
cmp
pop
psrad
in
xchg
pop
xchg
cmc
inc
ret
pop
ret
in
cmp
imulb
xor
loop
cmp
adc
pushf
jl
cmp
in
pop
lret
jb
imull
mov
jb
pop
push
test
rorb
aad
test
adc
sub
jbe
jl
addr16
rorl
push
mov
adc
sub
cmp
ss
ja
mov
mov
or
xor
xchg
jno
mov
andl
js
add
insb
cmp
jle
cmp
dec
sbb
ret
adc
cltd
loopne
inc
xchg
mov
imul
loope
jne
ret
mov
shl
mov
negl
xchg
popf
inc
in
and
fstps
dec
jge
dec
cmp
xchg
mov
and
inc
mov
jns
adc
mov
mov
repnz
mov
and
or
jg
mov
fwait
outsl
movsb
and
outsb
cmp
test
pop
or
mov
sti
dec
call
mov
jle
xchg
imul
cltd
bound
inc
movsb
mov
mov
pop
stos
sbb
mov
mov
push
sbb
pop
jl
popf
cld
xchg
jo
outsb
adc
mov
xchg
flds
jbe
inc
cmp
jns
adc
adc
jbe
xchg
xor
mov
adc
decb
fisubs
nop
jmp
push
add
fldt
sub
ljmp
inc
pop
repz
adc
mov
jecxz
and
fnstsw
cmpsl
mov
cs
pop
jl
pushf
mov
sbb
mov
mov
inc
cmpl
add
lret
inc
jae
mov
and
fs
xlat
xor
xchg
mov
in
dec
xorb
adc
mov
rorl
stc
lods
aaa
ud0
data16
ss
pop
mov
aad
daa
jp
ss
aaa
jle
out
add
nop
add
out
stos
icebp
xchg
mov
out
push
imul
movsl
jecxz
nop
add
pop
jmp
orb
imul
add
cltd
push
daa
shll
cmpl
or
std
in
mov
mov
xor
cs
inc
fdivrl
xchg
and
xchg
iret
mov
enter
mov
mov
or
dec
inc
or
jmp
shrb
jnp
adc
mov
pop
push
cs
in
mov
mov
divl
pop
inc
push
dec
data16
xor
mov
lcall
cltd
mov
cmp
inc
cmpl
shlb
hlt
xor
sahf
jle
lods
push
negl
dec
in
jle,pn
jb
into
pop
sbb
test
dec
cld
push
xchg
or
les
xchg
into
sbb
test
gs
notl
or
scas
jecxz
jns
mov
cmp
xor
in
stos
dec
test
out
ret
in
mov
jl
xor
mov
fbld
imul
or
roll
stos
dec
test
stos
negl
iret
popl
dec
inc
dec
push
sub
adc
mov
add
mov
enter
mov
mov
gs
or
xor
jo
dec
sbb
and
cmp
popa
arpl
cmp
lahf
jl
dec
xchg
insb
fimull
push
lods
divl
dec
neg
cltd
cli
in
sbbb
xchg
inc
mov
std
out
daa
das
lods
fdivrp
jnp
cld
int3
pop
es
cmc
mov
cmp
in
cmp
cmp
push
nop
ds
rclb
out
neg
popa
push
hlt
adc
sub
cld
jmp
mov
mov
mov
icebp
xchg
or
jb
sahf
push
pop
jne
xorb
cwtl
inc
jmp
jecxz
rcr
sti
and
xchg
jno
xchg
cmp
aas
and
mov
dec
mov
movsl
inc
test
scas
out
lret
and
leave
sahf
out
mov
pop
jns
mov
jns
repz
cmp
outsb
int3
pop
jle
push
or
in
push
imul
xor
imull
push
cs
mov
in
fstpt
popf
mov
fidivrl
and
inc
mov
out
dec
and
jmp
sub
lret
jg
xchg
inc
bound
add
xor
call
stc
dec
sub
out
jne
out
adc
std
xor
call
orl
dec
ret
stos
adc
movsl
dec
sub
and
mov
call
cmp
ret
loop
rcll
push
mov
push
call
inc
xor
sarb
repz
lcall
or
xchg
andb
xor
xchg
dec
or
jmp
mov
and
iret
jmp
scas
fiadds
inc
into
cmp
aaa
notl
cmp
addr16
jge
fmuls
dec
lret
xchg
scas
shlb
dec
aas
fsubrp
add
mov
push
out
imul
mov
imull
cltd
dec
sarb
leave
lret
pop
push
enter
imul
jb
scas
ss
es
pop
jmp
aad
fsubl
pop
into
and
loop
pusha
movsb
cs
jns
add
pop
in
jp
sbb
je
enter
jno
push
push
into
ret
fwait
mov
nop
jno
xchg
cmp
stos
stc
and
jge
aaa
lret
adc
push
lods
mov
jae
clc
cmp
repnz
adc
push
pop
add
in
gs
mov
shl
cltd
mov
stc
cld
mov
lods
insb
jb
mov
lahf
aad
cmpsl
jle
cmpsl
pop
push
fistpl
shl
mov
sbb
push
jns
and
adc
subb
jmp
notl
push
out
fidivrl
rcr
fmuls
shrb
scas
pop
data16
add
cs
add
pushf
aam
and
je
cltd
cld
or
cmp
adc
mov
xor
pop
repnz
in
loope
pop
adc
dec
jl
imul
sbb
inc
and
mov
inc
add
in
and
inc
aas
cmp
stos
xchg
adc
jl
push
lea
mov
stos
jnp
scas
and
mov
out
sbb
mov
push
pop
mov
inc
movsb
fmul
push
fwait
inc
or
xchg
ret
jns
pusha
repz
sbb
aad
cmpsb
int
lock
mov
inc
inc
arpl
pop
mov
lret
mov
adc
cs
xor
jo
addr16
mov
stc
fldl
adc
cmp
js
or
ret
push
cld
mov
add
cmc
movsl
jp
and
out
add
dec
and
in
mov
sbb
inc
adc
push
movsb
icebp
jecxz
mov
popa
into
fidivrs
sbb
fldl
add
pcmpgtw
dec
or
jbe
xchg
loopne
sub
and
adc
jp
imul
dec
test
rcrl
sahf
or
or
inc
mov
jb
sub
cmp
add
xchg
pop
bound
cltd
aad
lock
dec
ret
or
fwait
cs
insl
addr16
sbb
inc
inc
xor
push
andl
xor
daa
jmp
push
cmpsl
cmpsb
mov
pop
add
movsl
das
adc
mov
mov
es
icebp
cwtl
sbb
add
mov
and
pop
adc
test
incl
push
sbb
and
dec
nop
jb
mov
ret
fdivl
int3
sub
psrlq
sti
pop
scas
jp
adc
and
lods
push
cmp
push
push
mov
adc
mov
jnp
xor
sbb
pop
xor
or
adc
test
push
les
mov
jae
cli
cmp
and
mov
sbb
push
cmp
out
adc
bound
jno
add
jmp
mov
sub
in
dec
test
cmp
add
add
jg
xchg
jle
fbld
repnz
mov
xchg
lock
mov
xor
pop
inc
ds
rorl
icebp
xor
cli
xor
inc
jne
push
cs
dec
xor
cmp
in
or
adc
jbe
popf
inc
in
and
lods
sub
push
aaa
dec
xchg
sahf
push
int3
movsb
and
xchg
push
sbb
xchg
or
call
inc
jns
test
andl
mov
subl
aaa
push
scas
rorb
mov
push
popf
shrl
stos
lds
sbbb
and
add
pop
or
xchg
cmpb
daa
xor
jmp
fmuls
sti
push
ja
popf
repz
pop
cwtl
arpl
hlt
mov
mul
xchg
inc
loopne
mov
add
shrb
stos
xor
shlb
cltd
add
xor
push
xor
inc
repnz
xlat
lahf
push
lods
and
dec
ljmp
lock
xchg
call
loope
fiaddl
add
in
shl
xchg
in
addr16
pop
or
leave
add
icebp
stos
push
pop
cmp
dec
arpl
xor
mov
mov
pop
pop
xor
notb
mov
inc
into
jns
repnz
push
rcr
sbb
pushf
icebp
out
fdivl
sbb
xchg
repz
add
sub
cmpsb
mov
xchg
js
lcall
leave
xchg
cli
sti
dec
jns
jg
lock
mov
jmp
enter
pop
aad
sbb
jne
div
shll
fsubl
bound
fcoml
and
mov
stos
stc
movsl
imul
jp
sub
and
lea
push
and
sbb
jecxz
sub
outsb
mov
outsb
mov
je
pop
movsl
ror
test
jns
icebp
xlat
sub
scas
xchg
adc
das
dec
pop
idivl
cmp
in
pop
mov
stos
imul
inc
mov
fwait
sti
je
push
xor
lret
push
int3
xchg
in
or
out
loope
mov
push
gs
inc
xor
cmc
and
sbb
or
dec
sub
jno
data16
outsb
int
pop
mov
adc
in
leave
test
dec
loop
inc
pop
mov
push
std
inc
in
dec
daa
cli
hlt
and
les
mov
test
out
adc
sbb
mov
test
inc
call
mov
pop
test
mov
dec
imul
aaa
cmc
pop
fidivrs
jae
mov
push
jb
popa
dec
das
pop
mov
xor
push
jecxz
and
iret
arpl
icebp
aaa
call
or
outsl
into
sub
hlt
rcrb
mov
addr16
cmp
xchg
mov
jmp
adc
cmp
pop
jne
dec
pusha
cmc
ss
outsl
sbb
inc
repnz
imul
aas
pusha
dec
insb
in
dec
cwtl
lods
jge
push
outsl
int3
movsl
xor
mov
fs
aaa
pop
sbb
test
and
mov
mov
scas
mov
inc
test
adc
sbb
dec
dec
movsb
dec
add
fsub
xchg
xchg
cmp
jnp
or
movsl
mov
jge
loopne
xchg
cwtl
int
stos
mov
xor
call
mov
lods
mov
popa
mov
mov
sbb
in
mov
test
addr16
xor
jo
or
scas
fists
bound
frstor
or
jbe
pop
adc
iret
jecxz
inc
cli
outsl
inc
xor
xchg
lods
and
inc
or
inc
sub
iret
xchg
loopne
sub
push
fsubrl
punpcklbw
inc
lret
into
lahf
mov
test
cmp
insb
or
vfmsubps
mov
lret
pushf
sbb
sbb
fldenv
dec
inc
jnp
clc
test
jo
das
popf
iret
imul
insl
mov
sbb
cmp
cmpsb
aam
leave
push
scas
and
cmpsl
ljmp
or
dec
iret
clc
ret
xlat
ss
mov
cwtl
fcmovbe
in
cmp
pop
mov
xchg
imul
std
push
lock
jnp
sub
push
test
push
mov
out
rcll
int
out
fcomps
cli
sub
out
mov
mov
xchg
bound
arpl
xchg
mov
jns
unpckhps
out
cmp
sbb
mov
out
cmp
mov
jno
xchg
lahf
cs
les
call
xchg
cltd
cwtl
out
ret
shlb
in
mov
jae
push
jo
cmc
pop
or
ret
lods
xchg
jl
fs
xchg
or
xor
adc
popa
leave
lds
mov
out
and
enterw
adc
call
cmpsl
mov
and
xchg
enter
iret
xchg
lcall
loopne
shrl
test
or
mov
movsl
xchg
roll
adcl
push
mov
mov
stos
ss
sub
pop
xor
mov
and
lret
and
in
out
add
jmp
sbb
inc
dec
inc
add
lcall
jno
subl
lret
mov
adc
or
push
aaa
arpl
ds
test
ljmp
xor
inc
push
xchg
pop
jnp
repz
add
js
dec
cmp
movsb
or
sbb
loopne
push
lods
inc
mov
add
inc
xchg
mov
aad
shlb
idivl
jae
push
out
cmpsb
lldt
pop
cmp
arpl
imul
push
pop
lret
test
and
lret
shl
cmp
inc
loopne
mov
cmp
cwtl
pusha
xchg
add
mov
shlb
xchg
jg
cmp
pop
imul
loop
lods
or
inc
sub
imulb
xchg
ret
les
lods
in
xlat
sbb
sub
adc
inc
insb
inc
orps
mov
lods
cmc
or
xchg
fsubr
jnp
mov
dec
int3
sub
faddl
mov
mov
mov
aad
and
or
jmp
ds
int3
add
pushf
call
sub
fildll
inc
mov
push
lds
dec
adc
xor
lea
popa
fiadds
out
test
cltd
mov
pushf
lods
xchg
xorl
push
cli
dec
or
dec
add
pop
pop
in
sbb
in
mov
inc
pop
aam
lock
jp
rorb
lods
sub
mov
cs
cmp
pop
ja
mov
scas
arpl
pop
jns
dec
xchg
push
xchg
cmc
ret
lods
cmp
fadd
mov
mov
inc
dec
lea
jb
adc
xchg
loop
sbb
inc
jns
ljmp
sub
fcmovnb
jge
jl
rorb
sub
push
or
and
mov
pop
add
loope
shrl
inc
cmp
sbb
xor
push
in
sbbb
mov
aaa
aas
pop
pop
jmp
sub
cmp
and
rcll
inc
aaa
lcall
xchg
jne
fcoml
mov
push
jno
cmp
inc
fwait
jae
jae
cmp
ret
outsb
scas
bound
mov
loopne
call
jnp
jns
test
out
xchg
outsb
notb
lods
insb
popl
je
iret
rol
rcl
sahf
push
aas
movsl
mov
test
cmp
enter
addb
popf
add
fwait
pop
out
jbe
dec
sub
dec
out
je
mov
mov
imul
rolb
lods
leave
in
jl
stos
push
pop
inc
into
mov
push
test
xorb
dec
push
jl
dec
mov
mov
dec
enter
pop
lods
pop
fsubs
outsl
insb
pop
lret
imul
sub
testb
or
pop
std
fucomi
push
cmc
jecxz
not
sbb
pop
rcl
repnz
mov
jmp
testl
mov
pop
test
scas
rorb
shlb
rcpps
and
pop
xor
jmp
clc
popf
std
scas
xchg
cmp
test
jecxz
mov
bound
xchg
adc
xchg
icebp
xlat
and
lods
push
jmp
addb
mov
ss
push
jecxz
test
dec
pop
pop
addr16
xchg
xlat
js
mov
popf
dec
push
fisubrs
mov
add
outsl
pop
jg
sub
mov
arpl
ret
je
push
mov
or
call
push
cmp
sub
or
pop
lods
mov
push
addb
outsl
lahf
jae
hlt
push
pop
jo
into
mov
dec
sar
adc
arpl
cmp
and
cld
andb
mov
loop
gs
pop
jle
pop
adc
jo
cmp
addr16
jns
mov
push
cmp
sub
xor
cmc
lea
repz
cmp
mov
loope
mov
aad
out
int
mov
mov
scas
out
push
sub
mov
adc
shll
pushf
icebp
test
fdivrl
pop
push
pop
lcall
fdivrl
push
mov
xor
sbb
mov
je
mov
scas
in
mov
aad
sahf
in
add
cmp
jl
mov
sbb
lea
sub
out
je
test
mov
stos
imul
inc
les
pop
enter
in
add
jmp
addr16
or
mov
xor
mov
mov
movsb
sbb
and
or
push
mov
ja
xlat
loop
stc
mov
mov
push
lret
aad
bound
clc
jge
pop
out
std
pop
sti
testb
test
scas
sahf
inc
stc
and
mov
inc
or
mov
adc
dec
subb
stos
or
mov
cli
pop
push
adc
pop
jne
mov
xchg
jns
pushf
jbe
lea
add
cmp
push
clc
xchg
sbb
leave
mov
xchg
js
sti
or
adc
cld
insb
xchg
fstsw
enter
orl
imul
std
mov
jp
push
out
jb
and
xor
and
icebp
nop
fsubs
push
pushl
or
xor
hlt
pop
js
aaa
std
xor
les
int3
subb
cltd
sbb
fnsave
arpl
xchg
or
testl
sbb
jns
loop
push
clc
and
mov
jp
hlt
sbb
and
mov
stc
cmpsl
or
mov
pop
or
int
pop
sub
mov
mov
into
add
inc
mov
adc
stos
pop
sbb
aad
test
push
jb
mov
jno
dec
xlat
repz
ret
cmp
adc
cwtl
aam
fisubrl
xor
out
imul
lods
jle
sub
jmp
jmp
jb
pop
push
xchg
iret
cmp
enter
fldcw
sti
outsb
clc
ljmp
fwait
mov
cmp
mov
lods
mov
push
xchg
inc
push
dec
mov
mov
cs
jecxz
add
outsl
and
and
cmp
cmc
and
or
xchg
push
sbb
dec
jne
mov
dec
push
cmpsb
pusha
mov
scas
js
sahf
out
cmp
fldenv
repz
mov
push
adcb
in
shr
xorb
jo
repz
jo
lods
rolb
pop
jns
pop
jl
cmp
pop
jbe
std
and
lods
pop
jge
test
loopne
loop
push
fstpt
in
call
or
cltd
daa
rcll
repnz
jmp
fiaddl
adcl
scas
mov
mov
add
or
into
fnsave
push
rcll
pop
inc
enter
icebp
jle
mov
pop
push
repnz
push
fists
mov
push
or
adc
cmp
and
stos
mov
ljmp
repz
sarb
cltd
cmp
sahf
cmpsb
add
out
out
adc
daa
mov
adc
or
push
fmuls
addr16
dec
sbb
sbb
jp
jns
dec
mov
outsb
sub
and
cli
divb
in
xor
and
pop
stos
movsl
jp
pop
inc
cmpsb
gs
sarb
scas
xor
xchg
insl
fucomip
aad
subl
lods
loop
ljmp
rcrl
lcall
dec
jl
stc
gs
xchg
mov
mov
dec
outsl
ds
mov
popf
repz
and
sahf
pop
into
add
mov
or
push
xor
jmp
gs
dec
jle
xchg
xchg
and
sbb
mov
pop
imul
inc
lds
fmuls
xor
push
outsb
aas
mov
inc
loop
add
and
aaa
add
xchg
cmpsl
aam
add
ja
lret
icebp
cmp
mov
jns
test
rorl
ss
push
ret
or
scas
add
fwait
call
jno
ret
mov
adc
mov
cmp
jbe
popf
pop
and
gs
fwait
ja
cwtl
and
mov
mov
push
sub
in
fwait
mov
loop
enter
mov
in
pop
scas
and
lret
adc
fldt
add
sbb
inc
xchg
xchg
xor
mov
mov
mov
xchg
mov
mov
cmp
mov
jle
inc
cmp
repz
push
adc
xor
es
shlb
sbb
mov
cmpb
or
mov
xorl
outsl
jb
lcall
jg
icebp
jno
xlat
rorb
xor
ficompl
cmc
aas
jp
pop
cltd
int
lods
test
xchg
iret
test
xor
cmp
sar
das
xchg
lret
out
scas
out
dec
push
cld
stc
and
pop
jno
xchg
adc
mov
jo
cli
addr16
push
sbb
jbe
mov
leave
lods
xor
inc
test
jnp
push
mov
pop
adc
and
fstpt
mov
pushf
jo
fldl
popa
scas
mov
rol
xorl
inc
scas
xor
lcall
scas
sbbl
add
iret
cmpsl
inc
fwait
and
sub
jae
imul
push
xchg
inc
sbbb
push
test
pop
out
les
dec
cmp
ss
mov
aas
pop
jge
sahf
dec
mov
daa
push
jne
mov
mov
lret
mov
inc
cs
inc
xor
mov
pop
adc
push
arpl
ffree
mov
xor
cmpsb
dec
inc
push
pop
push
push
jo
shl
mov
mov
int
pop
test
leave
sti
adc
aas
jle
mov
fwait
loope
dec
popa
sarl
or
jnp
sbb
xor
xor
xorb
pop
call
push
insb
fidivl
mov
sbb
sarl
push
adc
test
mov
mov
xchg
or
jmp
sub
lret
mov
sub
sub
mov
subl
mov
mov
mov
ds
push
adc
push
fwait
sbb
push
ds
jl
cmp
rcr
cli
adc
pop
dec
leave
out
push
fwait
ds
dec
add
xor
dec
jne
mov
push
aam
add
mov
jns
pop
lods
aaa
adc
fiaddl
ficomps
mov
xor
in
fistpll
sbb
xlat
sbb
dec
addr16
imul
and
dec
mov
inc
mov
sub
hlt
adc
or
sbb
pop
mov
sub
cmpsl
mov
cwtl
int3
sbb
sub
xor
in
lcall
adc
xor
ss
pop
mov
aaa
xor
in
out
inc
je
mov
cmp
dec
fnstsw
sbb
push
loop
in
adc
in
mov
ret
dec
push
sbb
add
add
imulb
inc
xchg
mov
adcl
mov
sti
xchg
outsl
sar
xchg
and
aam
mov
xchg
addr16
test
add
out
add
jo
fistpll
stos
pop
mov
aaa
jo
mov
mov
mov
xor
ds
aam
adc
sbb
clc
rcrb
dec
mov
sbb
test
mov
mov
mov
xor
and
lods
pop
push
cmp
data16
add
insb
ret
mov
rcrl
mov
inc
outsb
lret
pop
pop
test
jge
xorl
or
fisubs
pop
sub
push
popf
lcall
mov
push
mov
mov
aaa
repz
xchg
xchg
add
adc
fdivl
push
xor
imul
mov
pop
cmp
xorl
ja
lods
pop
aaa
in
add
mov
mov
mov
or
mov
dec
and
scas
push
add
or
mov
push
dec
mov
ds
adc
jmp
aaa
popl
inc
lret
xchg
add
mov
jge
cmp
jae
sahf
mov
jns
mov
dec
mov
int3
pop
sbb
sub
fdivr
shl
sbb
roll
test
scas
mov
hlt
in
sti
pop
or
jnp
imul
push
mov
push
adc
mov
push
cmp
int
dec
sub
sbb
lods
movsl
aas
mov
mov
add
in
and
jnp
adc
cmp
ljmp
aam
and
sub
add
mov
sbb
cwtl
mov
mov
sbb
jae
sub
ja
adc
nop
imulb
and
mov
dec
mov
lock
and
add
pushf
hlt
dec
das
cs
push
shrl
jle
leave
das
adc
call
xor
inc
jl
sbb
cs
xchg
in
jmp
test
dec
push
sub
ds
pop
rcll
lcall
lds
scas
pop
xchg
and
dec
iret
sahf
push
lods
frstor
push
pusha
stos
inc
mov
gs
mov
ljmp
jne
mov
and
mov
or
and
scas
and
mov
xchg
fwait
test
mov
subl
xchg
sub
cltd
mov
mov
push
sub
push
fwait
ss
mov
mov
dec
daa
bound
in
mov
ror
mov
pop
inc
jbe
push
mov
sbb
mov
push
shlb
aad
imul
xor
outsl
jne
jmp
mov
out
sub
sbbb
daa
mov
jmp
sti
mov
test
dec
xchg
mov
ret
cmp
push
cmpsl
xchg
mov
ret
mov
xor
imul
jl
cmpsb
sarb
xchg
mov
inc
lods
sub
mov
je
lods
push
test
imul
add
or
push
jns
lods
test
pop
aam
push
paddd
pop
pop
shll
addr16
push
pop
mov
aam
hlt
sbb
bound
or
inc
pop
mov
out
jle
pop
aas
aam
mov
lds
push
inc
pop
sub
dec
mov
mov
mov
rcll
sub
fnstenv
inc
mov
loopne
in
push
push
jp
mov
outsb
xor
shlb
push
cmp
or
pop
ds
mov
shll
cs
pop
notb
adc
xor
xchg
sbb
inc
sbb
or
insl
into
stc
push
or
daa
jb
pop
inc
sub
adc
mov
mov
xor
test
mov
pop
push
sub
xchg
xlat
loop
mov
ljmp
subl
push
xchg
push
xchg
daa
jae
or
daa
les
sti
divb
mov
and
aaa
lea
push
mov
jl
sub
lcall
es
repz
call
nop
and
sub
les
popf
mov
jbe
out
les
std
xchg
in
mov
add
in
out
add
dec
subl
sarb
sbbl
loopne
int3
aam
fcom
add
pushf
mov
std
rorb
mov
push
jle
or
pop
or
sub
fdivr
cltd
aad
popf
sub
jp
sbb
aad
sub
jb
adc
sub
push
mov
adc
push
cli
bound
sbbb
mov
pusha
jecxz
clc
enter
in
inc
je
jne
and
fmul
or
test
dec
aas
out
cmp
in
inc
enter
jne
push
or
xchg
hlt
pop
push
mov
bound
mov
aas
cmpsb
test
xlat
cs
mov
or
inc
push
dec
cmpsl
adc
pop
and
or
in
lods
jmp
aaa
mov
adc
sub
aas
mov
daa
push
mov
rol
cmp
imul
adc
lods
rcr
insb
js
fcoml
fsubr
mov
insl
adc
push
pop
loop
test
adc
push
incb
rcr
add
inc
xchg
mov
loope
mov
jg
or
das
lahf
xor
pop
lea
or
jns
push
jns
inc
add
adc
orb
scas
in
xor
adc
in
push
lea
inc
test
cltd
sub
push
cmpsb
jae
ret
das
pop
add
fwait
movl
inc
sub
add
daa
mov
sub
lcall
adc
scas
pop
ss
or
xchg
adc
lods
aam
loopne
adc
adc
je
cmp
and
jl
sub
xor
pop
insb
into
fdivs
loope
pop
dec
xor
js
arpl
sub
jb
jp
rorb
bound
cs
dec
xchg
movsb
xchg
insl
mov
cli
pop
sbb
mov
es
and
and
out
lock
inc
xorl
andl
inc
inc
mov
ds
js
imulb
push
stos
dec
add
sar
sbb
jno
lahf
sti
ret
or
mov
hlt
add
jle
stc
mov
das
jae
test
add
xlat
cs
inc
or
int3
push
sub
dec
ljmp
aaa
js
mov
popf
xchg
fbstp
ret
lret
inc
ja
in
pop
push
daa
sub
mov
testl
jbe
adc
sbbl
xchg
jae
jmp
or
push
jg
fisubs
leave
int
xlat
imul
lahf
es
mov
dec
ss
pushf
rcll
cmpsl
nop
cmc
pop
mov
lret
push
addr16
mov
subl
jnp
dec
cmp
add
popa
out
dec
int
sbb
and
add
dec
addr16
xchg
movsb
sahf
dec
adc
sbb
jno
adc
ret
arpl
ds
fistpll
cmpsl
call
cmp
dec
cmp
mov
inc
fisubs
push
sub
jbe
mov
pop
sub
pop
pop
jp
insb
lcall
pop
mov
sbbl
bound
enter
aaa
aam
mov
push
data16
jne
stc
imul
xor
xchg
mov
outsl
mov
lcall
frstor
sub
push
cmp
outsb
dec
pop
sti
add
dec
push
push
scas
loope
dec
mov
bound
sbb
xchg
xor
cmpsl
fs
push
orb
mov
test
xchg
add
loopne
loope
ret
int
jmp
out
iret
rcrl
sub
andl
movl
mov
ja
jecxz
jns
sti
lcall
jmp
cmp
sub
adc
jmp
and
test
aaa
add
pop
cmpsb
push
lahf
and
xor
pop
fs
adc
mov
cmp
call
aaa
pop
or
popa
xchg
les
xor
ffree
mov
jbe
mov
decl
nop
fstl
mov
jbe
xor
push
stos
fisubl
js
jno
hlt
mov
pop
fucomi
andl
jmp
bound
sahf
mov
fbld
mov
or
sub
mov
movsl
in
dec
fsincos
mov
cmc
pop
fcoml
pop
lahf
adcl
sti
push
ja
sti
xchg
mov
scas
mov
int3
jo
out
push
sbb
inc
jbe
pop
push
icebp
loope
jo
jmp
mov
push
dec
pop
jbe
notl
xorb
cmpsl
out
xlat
es
mov
enter
sbb
and
xchg
insl
xor
jg
cmp
bound
push
mov
jmp
or
arpl
lds
fistps
pop
out
xor
adc
xchg
jne
data16
push
repnz
jns
add
sbb
inc
dec
fsubr
js
aad
mov
sub
and
xor
lds
pushf
push
fst
mov
pop
stos
call
dec
leave
sub
fsubl
push
into
nop
fs
jge
push
insl
std
out
outsb
stc
adc
cmpsb
loop
rcrl
cmpsb
push
cmp
xchg
xchg
cmp
fisttpl
vprotb
lock
aam
adc
cli
xchg
jae
add
andb
pop
xor
pusha
inc
mov
mov
add
push
cmp
idiv
lea
mov
dec
sub
sub
int3
stos
mov
std
dec
pop
push
mov
sahf
pop
aaa
in
mov
les
es
hlt
and
jb
test
add
orb
dec
cmpsl
xchg
jmp
dec
rcll
fsubl
jns
push
fs
pop
pop
mov
xlat
xchg
pop
shrb
cmp
clc
loop
jecxz
dec
aaa
mov
xchg
call
orb
xor
push
nop
fs
dec
adcl
or
cltd
xor
aaa
sub
adc
add
andl
movsb
addr16
std
xchg
xchg
popa
arpl
xor
fiadds
adc
jle
pop
xor
jo
popa
push
das
push
mov
inc
sub
inc
aad
inc
mov
or
ficoml
jo
mov
push
movsb
imul
xchg
jno
inc
inc
xorb
imulb
pusha
mov
add
test
cltd
jns
popl
and
lahf
rol
jmp
pop
sbb
rcr
shll
hlt
sahf
push
pop
jno
sbb
inc
insb
sbb
lods
adc
lcall
adc
xchg
jp
insl
inc
call
ficomps
mov
push
lea
xor
push
sbb
pop
pusha
push
jnp
insl
dec
addl
mov
sub
ds
jno
das
ret
push
cmp
mov
jbe
push
push
jns
lret
dec
push
lds
add
lods
adc
ss
addr16
mov
or
jge
cmc
push
pop
icebp
pop
mov
loop
daa
push
xchg
cs
xchg
dec
loop
dec
mov
and
push
jmp
sub
stos
inc
push
dec
dec
or
ret
stos
stc
mov
iret
and
add
or
cli
jp
cs
sub
pop
jl
sti
sbb
pop
xchg
xor
adc
popa
and
ds
add
push
je
cmp
add
xchg
and
pushf
aam
mov
mull
and
xchg
out
cmp
inc
orl
rol
pop
rcr
pushf
mov
inc
mov
insb
mov
xlat
movsb
sub
sub
jp
jp
push
xor
mov
les
aaa
dec
movsl
test
pop
mov
ret
mov
mov
fld
lds
imul
jmp
pop
sbb
outsb
shld
stos
dec
repz
sub
insl
lods
lret
cmp
jmp
gs
mov
movsb
das
ljmp
pop
cmp
pop
repz
adc
enter
test
mov
or
and
test
push
push
xor
pop
dec
jl
xlat
movsb
mov
stc
pop
sub
imul
push
lock
shr
or
sbb
lret
sbb
pop
shll
add
lock
sub
add
add
outsb
dec
fcompl
cmp
test
jp
xchg
aas
inc
int3
cmpsb
jo
pop
fmuls
hlt
out
es
xchg
mov
int
xchg
mov
dec
sbb
sahf
jecxz
stos
fdivrl
incb
mov
push
pusha
xchg
es
pusha
sahf
movsb
sub
push
push
inc
mov
dec
mov
cmp
mov
cwtl
clc
rorl
sarb
pop
and
cmc
dec
movsl
outsl
pushf
xchg
test
fstpt
imul
ss
fnstcw
aad
movsb
dec
pop
fdivrl
and
cmpsl
and
jp
ss
sbb
int3
mov
gs
add
cwtl
or
loop
clc
push
enter
and
push
test
fmull
push
mov
mov
jmp
add
cwtl
jle
and
test
shr
push
roll
fcomp
das
inc
fmull
loop
add
and
jns
dec
dec
shrb
test
mov
xchg
add
and
stc
arpl
push
mov
std
popa
push
insb
mov
cmp
bound
mov
test
in
pop
cmp
add
adc
shl
mov
daa
pop
scas
cmp
int3
and
push
std
bound
imul
stc
fcoms
les
push
lods
cmp
lds
hlt
stos
test
movsb
scas
les
jbe
popf
mov
shlb
mov
inc
mov
daa
or
cmp
enter
insl
mov
shlb
movsb
dec
out
dec
enter
insl
dec
and
jle
in
sahf
cmp
xchg
scas
adc
fstl
dec
les
adc
inc
pop
xor
in
xor
data16
fstps
out
adc
fs
push
adc
in
xchg
and
push
ljmp
dec
and
cmp
shlb
dec
dec
jno
call
mov
fidivl
xchg
cmp
mov
pop
xchg
and
jno
imul
sbb
sub
jns
movsw
mov
push
add
pusha
movsb
pop
mov
jmp
cld
add
fsubs
xchg
adc
pop
jae
loope
int3
sub
adc
mov
jnp
out
aaa
mov
sbb
ja
aam
andps
call
or
dec
jle
xor
xchg
sbb
pushf
xor
popf
sbb
jns
les
inc
mov
xor
insb
daa
mov
fnstcw
mov
in
jno
inc
outsb
sti
aaa
or
pop
insb
gs
in
cmpsl
cmp
lods
pop
leave
add
out
bound
leave
or
fcmovu
movsb
addr16
lret
xor
xchg
fists
ret
jnp
xchg
push
jle
xor
int
imul
xchg
push
cmp
outsb
fcompl
sti
jb
shlb
repnz
pop
fcompl
repnz
cmp
sub
aam
jo
fisttps
lcall
mov
jno
hlt
hlt
mov
loope
ljmp
test
dec
and
add
sub
movsl
sub
and
or
inc
test
fadd
mov
sub
cmc
fiaddl
daa
fs
xchg
or
out
or
mov
xchg
test
bound
mov
adc
pop
cwtl
mov
mov
in
in
shrl
or
sub
cmp
add
inc
or
enter
inc
inc
js
loopne
pop
pop
mov
sub
hlt
push
idivl
loop
into
adcb
push
pop
cld
and
sbb
mov
pop
mov
ljmp
and
inc
jno
stos
in
add
jg
adc
decl
lahf
mov
pop
and
out
outsl
add
pop
jne
out
dec
dec
popa
xchg
cmp
mov
rcrl
stc
in
push
ljmp
cmp
adc
shlb
adc
out
leave
mov
fiadds
int3
lods
jno
das
sub
and
out
outsb
enter
into
xor
jmp
js
movsb
push
loop
not
aaa
scas
ret
pop
jmp
pop
lods
jp
inc
add
mov
jo
mov
lods
pop
push
cmpsb
jmp
push
gs
movsl
jnp
xchg
gs
lock
jecxz
lret
ljmp
cs
adc
outsl
out
in
push
test
mov
pop
cmpsb
inc
scas
es
adc
ljmp
daa
call
adc
adc
pop
pushf
sbb
lods
pop
pop
leave
dec
push
add
sbb
shll
or
jecxz
into
int3
cld
fstl
sbb
inc
mov
sahf
test
movsl
shll
dec
pop
call
js
pop
sub
or
fadd
mov
xlat
mov
mov
xchg
cmpsl
loopne
in
xor
xor
inc
dec
mov
mov
sahf
pop
mov
test
sub
xchg
andps
in
in
mov
xor
out
ss
pusha
sub
insl
cltd
je
in
dec
mov
mov
push
mov
call
adc
xor
mov
fwait
cwtl
sbb
dec
fs
cmp
data16
mov
fcoms
ljmp
lods
dec
aam
inc
pusha
arpl
ret
out
inc
out
mov
pop
sbb
inc
xor
enter
dec
and
movsb
xchg
lret
leave
jne
xchg
mov
pushf
fidivrs
enter
test
pusha
xchg
mov
push
xchg
mov
sbb
inc
arpl
testl
mov
and
xor
pop
aas
cmp
shlb
arpl
mov
mov
stc
les
mov
mov
add
int
outsb
and
mov
in
int
sbb
idivb
mov
xchg
shll
dec
dec
adc
cmp
inc
and
mov
mov
add
add
mov
fildll
dec
loop
bound
cmp
or
pop
or
in
repz
loopne
inc
andb
sub
add
mov
jae
push
cmpsl
idivb
lret
clc
pop
lcall
repnz
xchg
aaa
out
dec
inc
test
cmp
mov
sbb
dec
adc
lret
xorl
mov
push
sub
push
mov
ljmp
mov
pop
orb
jb
scas
fsubs
adcl
ds
push
push
add
jmp
xchg
pop
xchg
mov
jmp
data16
inc
jge
sbb
out
and
add
ret
aaa
jg
js
pop
mov
insl
in
rcrb
mov
xchg
pop
mov
mov
rclb
dec
inc
or
push
into
jmp
jmp
jecxz
enter
sub
into
mov
das
stos
test
dec
jp
je
out
loopne
pop
and
lret
push
or
out
sub
adc
call
mov
mov
gs
aam
sub
popa
mov
xchg
add
stc
mov
adc
mov
lods
cmp
sbb
push
cltd
data16
notb
pop
cltd
and
xor
pop
int3
xlat
das
jmp
xchg
mov
scas
rcll
pop
mov
outsb
fcompl
jns
mov
pusha
mov
jge
push
adc
popf
sar
cmp
addr16
dec
ljmp
fcmovnb
add
xor
hlt
das
movsl
outsb
jg
mov
pop
mov
cmp
lock
lret
inc
stos
loope
dec
cmp
ss
sbb
fildll
imul
or
ss
test
addl
pop
xor
mov
jge
fsubs
mov
jno
fcoml
popa
pop
push
inc
leave
les
cmp
fs
adc
imul
int3
mov
dec
xor
je
cmpb
inc
ret
cld
ret
dec
add
cmc
stc
lret
gs
xchg
sub
xchg
push
in
mov
add
ss
push
sbb
xorl
push
mov
xor
imull
jnp
add
dec
nop
pop
mov
mov
pushf
js
pop
scas
test
sar
iret
mov
pop
jecxz
add
out
xor
stos
aas
pop
xor
mov
imul
sarl
jmp
dec
jmp
mov
push
subb
cmpsl
jecxz
xchg
imul
jne
push
int
lret
ret
std
jp
mov
xor
out
mov
jae
js
sub
push
rorb
sti
cmc
movsl
sbb
jnp
xor
mov
addb
mov
pop
loopne
sub
lock
sub
cmpsl
repz
jo
jno
lret
adc
xlat
and
or
orb
add
mov
andb
lock
xchg
mov
sub
inc
fwait
cmpsb
mov
and
xchg
mov
cmp
or
xchg
inc
push
add
mov
add
cmpsb
js
es
dec
in
aam
jg
pop
ja
jmp
push
xor
testl
adc
dec
aas
xor
outsl
arpl
jbe
mov
loope
push
in
push
out
xor
xor
mov
jbe
push
movsl
in
arpl
cmp
mov
iret
dec
xchg
clc
xchg
loope
daa
mov
or
jo
imul
xor
jl
out
fs
cwtl
orb
lods
sbb
inc
cmp
mov
cmp
and
aam
jne
int3
test
jmp
fistpl
pushf
cmp
xor
or
movsl
and
xchg
scas
fisubrl
pop
adc
fnstenv
xor
imul
aad
cmp
stos
icebp
add
or
adc
mov
or
mov
cmp
or
sub
lods
insl
pop
xchg
es
dec
jmp
mov
sbb
inc
mov
mov
pop
jmp
scas
or
mov
xchg
push
idiv
and
lds
mov
push
leave
jg
aam
push
mov
jo
push
and
pop
outsl
inc
sahf
rolb
enter
jne
imul
scas
out
test
test
mov
jge
mov
ja
in
xchg
lds
mov
xor
aas
bound
fistpl
and
add
fs
pop
xchg
loopne
adc
push
nop
fistpll
jg
shl
loope
sbb
neg
cs
sub
pushf
jp
mov
xchg
add
adc
mov
repnz
dec
stc
and
adc
lret
add
mov
out
or
sub
or
sti
test
cld
push
and
cmp
xchg
call
loope
jbe
push
pxor
lea
cmp
js
inc
xchg
jp
subl
sub
stos
fs
enter
sub
mov
adc
dec
mov
fidivs
imul
popf
dec
test
cmp
fbld
and
fistps
es
mov
cmpsl
push
call
jno
daa
xor
sbb
fwait
mov
cmp
jae
push
sub
rep
dec
xchg
xchg
sub
jo
pop
inc
cmp
fldcw
push
pop
jg
sub
icebp
adc
scas
or
ljmp
cmp
movsl
bound
xorb
jge
mov
cli
sub
jnp
xor
inc
or
loop
stos
mov
mov
inc
jns
scas
jbe
dec
inc
outsb
jne
lods
mov
dec
popf
loopne
pop
xor
push
mov
jp
rcll
ret
sub
xor
xor
and
or
and
test
les
mov
mov
hlt
push
inc
aaa
fisttpl
xchg
mov
cwtl
inc
fidivrs
js
mov
xor
pop
mov
inc
xchg
pusha
sbb
fsubrs
cltd
clc
or
dec
aad
inc
xchg
dec
movsl
sbbl
xchg
jbe
and
dec
mov
sub
out
mov
mov
ficoms
sbb
cwtl
mov
mov
pop
sbb
sub
clc
cmp
adc
push
lea
push
xor
or
sub
pop
fisttps
in
inc
xchg
cli
jle
mov
imul
movsb
int3
adc
rorl
sub
mov
sbb
cmovbe
imul
jno
jne
loop
cmpsl
push
stc
cli
mov
sub
loop
and
sbb
nop
sub
xchg
mov
push
fildl
jg
adc
push
mov
jge
mov
xchg
mov
or
mov
cli
or
aaa
jmp
aas
sub
xchg
adc
pop
cmp
jp
lcall
js
pushf
psubd
adc
mov
and
es
insl
or
dec
lahf
loopne
or
jo
in
pop
rcrl
pop
or
iret
mov
mov
mov
loope
pop
sahf
iret
sqrtps
pop
pop
jnp
test
sub
sbb
dec
add
leave
popa
pop
es
xchg
sti
fisubrs
in
imul
pop
xor
lahf
out
stc
mov
mov
movsb
shll
mov
pushf
into
jge
inc
loope
dec
xchg
mov
sbb
xchg
test
inc
inc
dec
adc
mov
xor
cmc
cmpsl
inc
jno
jle
sbb
adc
dec
sub
push
mov
popa
pop
add
divl
mov
and
lret
push
xchg
cld
cmp
jge
mov
sti
add
inc
repnz
pusha
out
inc
cs
test
mov
pushf
movsl
or
loop
cmpsb
lret
adc
jle
jmp
test
xor
test
jp
lock
gs
push
mov
cli
sub
aam
outsl
mov
pop
cmp
cli
outsl
movsl
mov
adc
outsb
loop
gs
cmp
dec
je
dec
add
popa
jg
mov
cmp
push
sbb
inc
mov
adc
pop
test
xchg
aad
xchg
pop
sub
int
adc
push
inc
xlat
cmc
repz
scas
fcmovnb
pop
shrb
cld
and
pop
out
add
inc
lret
lods
xchg
mov
popf
cmpsb
insl
sar
cmp
add
cmp
cmc
stc
push
js
ljmp
mov
shlb
loop
cmpsb
je
sub
xor
ficoms
xor
stos
dec
sub
push
loop
fldt
add
std
ficoms
cld
or
inc
test
dec
shrb
outsl
jns
or
cs
cmc
rol
or
jnp
imul
fdivs
outsl
or
xchg
inc
icebp
clc
cmp
clc
jge
or
pop
les
lds
jge
mov
and
lret
mov
mov
add
pop
sbb
stos
cmp
mov
or
sbb
and
jb
cli
push
dec
xor
push
jp
mov
inc
sbb
adc
in
inc
fs
mov
outsl
es
add
divb
mov
aad
pop
mov
fs
pop
je
mov
shrb
and
push
shlb
fbstp
xchg
idiv
sub
mov
inc
out
pop
push
loope
xor
adc
sub
mov
add
mov
and
jo
mov
test
mov
xor
xor
push
and
cmovbe
cmp
xor
sbb
popf
adc
shr
mov
and
pop
inc
out
movsl
sub
jns
in
sbb
sti
aam
lds
ss
mov
sarl
or
or
mov
jle
ret
outsb
sub
movq
imul
shl
aas
and
and
int3
push
inc
imul
test
xchg
movsb
outsb
loope
scas
in
sub
fstpt
cmp
dec
jbe
js
stos
fwait
dec
cli
push
call
imul
pop
add
cmpl
and
dec
jae
mov
cmp
add
jl
dec
cmpb
repz
jmp
inc
loope
lock
std
mov
push
or
out
cmp
jne
adc
xor
and
cmc
push
pop
mov
jo
std
jns
sub
push
sub
or
ljmp
js
out
rclb
push
out
dec
pusha
xchg
fsubrl
int
and
push
mov
clc
xchg
mov
xchg
cmp
arpl
inc
jae
sbb
aam
adc
test
push
push
jns
sahf
lret
in
jmp
jns
push
sarl
in
inc
scas
and
push
cmp
jmp
xchg
out
cwtl
adc
daa
pop
arpl
out
ficoms
sub
pop
incl
inc
out
sahf
xchg
lds
sti
mov
sbb
test
pushf
mov
cs
jns
sar
roll
aam
xor
xor
or
inc
hlt
add
inc
and
mov
xor
sbb
pop
shll
lret
push
lret
loope
out
shrl
je
leave
dec
rolb
and
fs
cmp
das
mov
and
inc
mov
popf
in
push
rcl
sti
mov
sub
cmpsl
mov
cmp
push
xor
push
sbb
cwtl
inc
test
inc
ja
inc
cltd
fildl
sbb
in
or
sahf
xor
mov
icebp
in
jno
out
movsl
fldl
sub
or
add
into
jnp
cmp
sbb
mov
loop
subl
cmp
stos
add
mov
scas
movsb
mov
mov
aam
or
sahf
cli
inc
cltd
jecxz
sub
icebp
test
in
gs
mov
loopne
cli
icebp
adc
dec
pop
sbbl
xchg
shlb
sahf
jb
push
iret
adc
or
scas
lods
inc
in
xchg
std
clc
negb
inc
mov
mov
popa
xchg
inc
xchg
gs
testb
shlb
out
rol
push
out
fs
adc
jmp
jge
mov
cltd
fs
insb
and
pop
enter
test
stc
mov
mov
xlat
xchg
jl
dec
cmc
sub
scas
sbb
fidivs
mov
mov
test
out
mov
mov
xchg
mov
or
js
adc
dec
aad
out
fsubrl
in
stos
or
sbb
in
pop
jmp
cmp
into
pop
push
push
push
cli
and
jmp
imul
xlat
loop
jg
xor
cwtl
mov
cmp
std
daa
dec
pop
xchg
daa
bound
mov
mov
ds
daa
xor
mov
ja
or
imul
xchg
idivl
faddl
divl
pop
in
in
rep
js
imul
jb
mov
cmp
jle
dec
push
popa
into
bound
sti
lds
jo
into
rcr
cmp
lea
adc
scas
jb
popf
xchg
dec
out
or
mov
out
and
nop
push
xchg
leave
cmp
xchg
iret
pusha
jne
or
popf
cld
data16
xchg
cmp
push
and
push
dec
mov
imul
ret
in
mov
aas
lcall
lret
cmc
dec
dec
mov
sbb
pop
mov
cmp
js
xor
mov
arpl
dec
jmp
adc
pop
jbe
in
loope
sarb
ljmp
insl
mov
repnz
sbb
fidivs
push
xor
jae
cmpsb
xor
xchg
xchg
in
mov
add
clc
ss
mov
mov
sbb
lcall
xor
xchg
testb
out
in
add
popa
ficompl
pop
dec
jle
push
sti
pop
jbe
in
clc
je
sub
xchg
push
xchg
and
dec
test
iret
push
pusha
shll
shrb
push
push
incb
test
out
mov
xchg
adc
shl
daa
jbe
mul
outsb
pop
aad
or
lods
dec
xor
in
adc
and
das
movsb
jbe
out
cs
pop
mov
jge
lret
bnd
pop
jo
push
adc
sbb
and
shll
in
jmp
cmpsl
pop
jp
movsl
xchg
shrl
aas
gs
add
lahf
pop
ds
ds
int3
cmp
arpl
push
push
lret
push
das
lcall
xchg
fdivs
pop
data16
push
push
int
xchg
add
arpl
ss
insb
adc
outsb
ja
addr16
loopne
fcmovnbe
shlb
mov
mov
mov
fistl
stos
gs
inc
and
push
add
gs
mov
mov
add
loop
ret
shrl
mov
mov
lret
sahf
or
arpl
push
xchg
xchg
push
xor
fcompl
inc
push
iret
out
ret
push
out
inc
pop
jnp
mov
or
leave
inc
pop
fldenv
inc
imul
outsb
dec
hlt
lea
arpl
dec
mov
out
cmp
jmp
loopne
pop
jns
stc
in
in
aad
lock
push
inc
xor
fiaddl
inc
popa
insl
cmp
pop
pop
mov
mov
push
adc
and
pop
dec
sbb
movsb
jns
dec
mov
push
lahf
test
mov
aad
mov
sub
loope
pop
out
mov
mov
adc
mov
mov
cli
loope
mov
fwait
mov
mov
sub
in
loope
jp
mov
pop
jecxz
mov
lcall
jns
out
loop
or
jbe
inc
xchg
xchg
xor
std
mov
push
mov
push
xrelease
cmp
push
jns
cmpsl
jnp
jg
add
xchg
mov
and
mov
add
insl
cmc
out
sub
sub
testb
aaa
jne
leave
je
insb
test
pushf
sub
fcomp
addl
fstl
xchg
jmp
nop
xchg
xlat
aaa
test
pop
add
std
jbe
insb
lods
mov
jl
jg
add
lods
mov
fcmove
mov
notb
inc
sets
mov
inc
add
add
mov
push
jle
pop
insb
sub
sarb
imul
in
mov
stos
adc
mov
sbb
dec
out
mov
call
loope
scas
adc
push
inc
jb
ret
ret
inc
add
fstpl
adc
in
shrl
dec
in
int
ljmp
cmp
mov
test
jns
mov
les
xor
pop
and
in
jle
stos
insb
jnp
jne
or
cmc
cmpl
bound
inc
bound
jb
imul
xchg
mov
add
popa
cmpsl
movsl
scas
aas
jnp
jg
rorb
rolb
ds
ficoms
lods
cmc
and
out
imul
sahf
mov
push
jae
pop
xor
fcmovne
push
mov
lods
pusha
and
aaa
push
iret
push
xchg
sub
and
popf
xor
mov
sbbb
shrb
jb
mov
mov
xlat
lret
mov
pop
test
xchg
xchg
push
shrb
fisttpll
add
repnz
xor
int
xor
or
pop
sbb
shlb
shrl
pop
xor
btr
jnp
ss
inc
sbb
loop
shlb
xchg
std
aam
icebp
pusha
mov
shlb
ret
fistpll
je
movsb
mov
es
or
icebp
xor
add
out
inc
ret
mov
das
sub
sbb
add
pushl
test
push
and
daa
pop
rcrb
cmp
jl
cld
adc
push
inc
mov
sbb
call
mov
adc
xchg
xor
sti
lds
shr
adc
loope
xor
loope
out
push
mov
cs
push
mov
cmpsb
xchg
mov
dec
adc
fwait
jl
insl
jo
or
xor
icebp
dec
stos
cli
pushf
loopne
cmp
jecxz
and
mov
jno
add
popa
adc
sahf
push
stos
cmpsl
xchg
icebp
into
fdivrl
mov
and
inc
lret
xchg
fwait
cli
ds
xor
or
xchg
je
push
iret
ret
pop
xorl
ja
aam
jb
jle
into
aam
inc
shl
cli
xchg
in
pushf
inc
subb
or
inc
aas
sub
cmp
push
dec
insb
mov
cld
xchg
xlat
push
mov
xchg
outsl
jle
aaa
lret
push
jo
pop
xchg
data16
or
repz
xchg
and
dec
fdivrl
jne
xor
sbb
test
data16
dec
mov
push
dec
mov
adc
xchg
cmp
and
pop
inc
fisubl
jg
inc
test
dec
jmp
push
out
in
xor
cmp
aam
cmp
sub
aad
out
icebp
daa
cld
pop
mov
mov
decl
push
sub
jbe
pop
pop
mov
adc
mov
aad
cs
dec
ljmp
and
dec
mov
rorb
xor
rorl
pop
lret
sbb
push
pusha
adc
push
cs
inc
sub
out
adc
xor
shrb
adc
fstl
repnz
dec
in
inc
filds
xorl
cmp
jae
sahf
orl
dec
into
cmp
cs
movsl
jo
push
les
mov
pop
int
pop
rcrl
push
ja
int3
scas
pop
cmpsl
dec
mov
add
xor
jp
cmpsb
lahf
lret
movsl
sbb
and
repnz
mov
and
mov
pop
inc
imul
or
ss
cmpsb
push
or
jae
icebp
inc
lret
mov
adc
imul
sub
cwtl
inc
lds
pushf
cmpb
pusha
ds
popa
add
sub
and
sbb
mov
cmpsl
adc
inc
test
or
add
and
dec
mov
fldt
jl
addb
pop
jns
pop
or
push
shrb
es
pop
aad
mov
cmp
pop
mov
inc
fdiv
ret
mov
pop
jle
rol
mov
jg
hlt
call
or
clc
cmp
loopne
sti
or
xor
pusha
push
bound
ds
jbe
cmp
xor
and
cmp
push
pop
mov
and
out
push
inc
adc
stos
sbb
leave
fimuls
dec
mov
mov
in
add
adc
imul
xor
sub
xor
push
mov
fcmove
in
inc
insb
fiaddl
push
push
xchg
lahf
int
icebp
rcll
sahf
pop
xor
sbb
mov
sub
or
pop
pop
add
dec
add
shll
fbld
xor
sbb
pop
adc
cmp
jns
xor
imul
inc
adc
or
fucomi
pop
aad
jp
dec
mov
jg
mov
test
add
push
pop
push
pop
fbld
sub
fcoms
sub
adc
pop
movsl
lods
aas
cmp
sbb
sub
enter
loop
push
sub
fadd
push
add
push
enter
inc
sbb
cli
jp
mov
adc
in
int
dec
ficoml
push
xchg
cmp
mov
dec
fdivp
mov
les
les
pop
sbb
and
mov
jae
repz
in
xor
inc
and
and
popf
mov
mov
je
scas
pop
push
mov
inc
sbb
dec
arpl
out
popa
xor
cmc
inc
inc
xchg
pop
sahf
ljmp
pop
aam
insb
mov
and
pop
cwtl
div
lahf
mov
movb
adc
int3
inc
out
cld
cmp
aad
cld
or
sub
shl
lea
cmp
mov
mov
lret
rol
sahf
xchg
adc
je
lret
jo
je
jg
mulb
js
xlat
jge
jns
xchg
push
mov
sbb
mov
cmp
data16
inc
mov
dec
jp
enter
inc
int
int
std
or
insb
sbb
leave
int
enter
es
jno
push
or
push
xorb
or
adc
mov
push
stc
mov
cwtl
cmc
into
data16
out
mov
stos
lods
aad
pop
lret
das
cmp
dec
cmp
test
repz
dec
leave
add
pop
fnsetpm(287
das
adc
xor
lcall
inc
shlb
cltd
add
imul
mov
mov
insb
icebp
add
dec
push
stos
aam
add
inc
test
addl
jno
fnstsw
fisttpl
scas
repz
pushf
inc
and
fnclex
push
mov
or
cld
cmp
xchg
lock
xchg
daa
sarb
insl
imul
xchg
jne
sbbb
inc
shll
dec
mov
sbb
fcom
cmp
clc
loopne
lret
cmp
mov
iret
jns
aad
mov
subl
es
sbb
push
ficoms
jmp
test
lock
or
push
rcrb
mov
push
aad
mov
mov
dec
test
dec
or
int
pop
or
scas
data16
lods
jb
inc
enter
and
cmp
push
icebp
jns
mov
cltd
scas
stc
cwtl
mov
cmp
xchg
dec
push
sbb
pop
sub
pop
push
pop
les
daa
lcall
add
push
ds
jecxz
jecxz
jl
mov
sbb
xlat
test
aas
insl
jp
xchg
xor
mov
out
lods
xor
jg
test
outsb
out
fmull
push
out
loop
in
mov
push
pushf
sbb
mov
test
mov
dec
fildl
xchg
pop
inc
xlat
mov
in
scas
mov
jge
or
xchg
push
into
nop
ret
mov
jnp
pop
ljmp
sub
ljmp
std
clc
adc
inc
xchg
test
imul
pop
mov
inc
repnz
lahf
xchg
test
or
testl
push
xchg
repz
xchg
loope
loop
out
shlb
lahf
xchg
mov
inc
scas
dec
pop
cmp
movsl
test
movsb
cs
enter
decl
xor
fldt
cmpb
fwait
fs
mov
fs
out
shlb
jmp
sub
pop
mov
mov
add
dec
jg
add
ljmp
divb
fildl
in
sub
hlt
aam
pop
int3
jo
sbb
std
lcall
cs
into
mov
jnp
xchg
lret
scas
jnp
out
mov
sbb
lds
mov
inc
icebp
scas
cmc
and
movl
pop
sub
loop
add
dec
sub
test
dec
mov
jb
jb
add
mov
int
mov
dec
je
mov
push
ja
ljmp
lea
shrl
push
fidivrl
or
scas
lods
lret
dec
aad
loop
testl
shlb
sbb
mov
jecxz
mov
or
inc
jno
in
sub
fwait
xor
stos
or
mov
sbb
aaa
xor
cltd
push
or
movsb
outsb
rclb
test
inc
lret
mov
bnd
mov
fsts
or
ss
ficoml
fst
bound
call
stos
jle
jg
inc
aam
push
sbbl
insb
mov
dec
push
jecxz
jmp
cmp
sti
and
fadds
pop
dec
mov
andl
repz
push
xor
lds
aam
ret
stc
xor
shrl
jno
clc
shrb
stc
mov
std
or
int
add
sbb
ds
incb
movsl
and
aas
movsb
insb
int
js
lea
je
gs
push
lods
pop
or
sub
clc
push
cld
push
mov
int
push
push
adc
sahf
aad
push
in
stos
jg
sbb
cli
pop
xchg
cmpsl
test
imul
cmp
add
jg
roll
and
lea
add
cld
fists
push
jo
dec
ljmp
fs
int
pushf
loop
push
cmp
fcomp
xchg
sub
xchg
leave
shrl
add
jo
loope
mov
cmp
fistpll
push
jg
pop
pop
clc
ss
sub
icebp
mov
icebp
inc
sbb
cmp
adc
test
in
mov
lcall
cmp
and
sarl
leave
inc
pop
cmc
push
rcrl
mov
repnz
cmp
dec
insb
outsl
dec
xchg
out
jns
sbb
repz
xchg
adc
daa
test
dec
test
dec
sbb
daa
inc
ja
jmp
mov
mov
pop
loop
lret
cmp
out
in
faddl
dec
push
ljmp
xor
mov
int3
pop
negb
stc
mov
adc
sub
aas
imul
hlt
outsb
fdivl
mov
xor
out
pop
cmc
ja
in
loopne
fistpl
mov
cmc
push
dec
mov
sbb
xor
ljmp
enter
bnd
faddl
jg
adc
mov
mov
shlb
mov
ljmp
mov
dec
adc
mov
enter
jecxz
fldenv
xchg
jbe
push
cmp
sub
adc
into
jmp
enter
push
and
aas
xchg
dec
dec
mov
shrl
inc
test
sahf
in
xor
or
popa
ljmp
iret
cmp
lahf
cmpsl
in
pushf
lea
push
rorl
out
mov
ja
in
js
adc
mov
aam
in
imul
in
inc
mov
cmp
add
jmp
mov
repnz
cltd
scas
xchg
adc
pop
imull
xor
fwait
add
pop
pop
call
ljmp
mov
adc
push
push
pop
popa
divl
jmp
xchg
cmp
dec
in
mov
pop
jg
xchg
adc
pop
out
aaa
and
arpl
jae
pushf
pop
xchg
mov
je
mov
jns
sbb
sub
out
mov
idivl
bound
into
xchg
jo
cmc
mov
push
mov
add
iret
insb
sub
lahf
mov
inc
jae
fidivrl
in
loopne
inc
pop
push
lds
push
jns
out
xlat
mov
xchg
shrl
bound
test
loop
into
pop
jbe
or
push
mov
pop
xchg
leave
inc
mov
sahf
sub
or
pop
jecxz
add
movsl
mov
jo
xchg
mov
adc
daa
sub
cmpsb
lea
scas
faddl
mov
dec
mov
ret
mov
lret
mov
scas
sub
sub
jle
or
movl
hlt
cmp
ja
incl
add
or
mov
sti
xchg
jbe
std
mov
mov
push
push
enter
jae
sbb
and
dec
push
mov
xor
inc
jl
orb
mov
imulb
cmp
push
cltd
add
pop
cmp
test
mov
mov
jp
loope
rcll
ds
inc
shlb
std
add
insl
jae
xor
push
stos
mov
lret
dec
push
cli
lea
cmp
pop
lret
xchg
sbb
fbstp
movsl
add
pop
jns
mov
iret
push
sbb
inc
je
js
sbb
push
ret
push
dec
pop
push
pop
lds
out
xor
enter
sbb
aad
call
sub
cmpb
jmp
push
xchg
jl
fbstp
mov
inc
lea
inc
clc
std
jge
shrb
inc
xor
sub
into
lcall
ss
aas
sbb
sbb
imul
adc
adc
imul
mov
and
mov
mov
push
xchg
fs
cltd
pop
xchg
outsb
inc
push
dec
or
dec
cmpsb
mov
in
loop
test
xchg
pop
fsubrs
test
xor
aam
leave
pop
mov
fstps
mov
or
mov
cmp
add
push
loop
sub
ret
movsl
adc
imul
adc
add
test
push
xor
and
out
xor
ss
int3
lahf
cmc
jl
movsl
pop
aas
xchg
loop
or
cmp
int3
movsb
sahf
sub
add
cmc
dec
jno
sti
arpl
xor
mov
call
xchg
in
daa
mov
mov
stos
dec
jp
xor
scas
les
jno
nop
mov
or
jo
push
pop
int3
mov
aam
inc
cmp
test
add
aad
mov
loope
cld
jnp
arpl
shl
stos
sub
mov
lret
adc
outsl
loope
ja
mov
and
xchg
fdivrl
cmc
jg
roll
mov
xchg
pop
aas
decl
or
fs
stos
clc
adc
stc
cmp
std
nop
pusha
adc
in
ficompl
inc
cwtl
pop
jne
cmp
jns
rolb
test
sbb
shlb
loope
pop
mov
in
adc
mov
inc
out
scas
loope
imul
or
jns
int
nop
mov
pushf
aas
stc
xchg
or
jae
mov
fs
xchg
outsl
inc
cmp
das
leave
dec
cs
adc
cltd
fbstp
js
loope
test
jp
xor
lret
aas
leave
in
pop
aas
xorb
push
fcmovne
jl
mov
and
fs
cmpsl
call
out
int
dec
jne
ds
mov
sbb
rcll
outsb
adc
into
gs
mov
clc
or
add
iret
shll
adc
lahf
lcall
mov
jmp
sbb
push
sub
nop
xor
push
cmp
mov
or
mov
imul
sub
stos
pop
daa
lea
shl
jae
punpcklbw
cmpsl
stc
and
rcr
mov
jae
xchg
mov
scas
lret
xchg
cli
outsl
fcompl
sbbb
shl
iret
fwait
sub
pusha
sarb
mov
jecxz
nop
mov
je
repnz
cli
push
adc
out
push
or
mov
stc
lret
test
hlt
sbb
pop
flds
icebp
fisttpl
dec
outsl
sbb
pop
and
pop
icebp
int
ret
jmp
test
loopne
push
imul
add
ds
iret
push
mov
adc
mov
sbb
and
adc
or
jl
gs
sbb
pop
fistpll
cmc
cmp
shll
outsl
sbbl
cmp
outsb
mov
sub
pop
popf
leave
xlat
sbb
xchg
in
pop
lods
fldl
jo
sti
loop
fbld
shrl
push
ficomps
xchg
cmp
jno
pop
sbb
mov
dec
or
mov
outsl
or
cmpsb
xchg
idiv
mov
cmc
je
sarl
outsb
push
jo
fisttpll
xlat
pop
inc
leave
mov
fs
mov
test
in
enter
or
xchg
popf
xchg
dec
movsl
jno
xchg
mov
push
faddl
addr16
or
jg
adc
call
scas
jmp
xchg
fstps
push
inc
xor
mov
aam
fwait
sub
xchg
ljmp
jle
test
dec
sbb
mov
popa
dec
xchg
in
and
movsb
add
inc
jb
sbb
jge
adc
dec
cmp
divb
xchg
leave
ss
sub
xchg
push
xchg
mov
les
xchg
loope
cmc
adc
movsl
mov
xchg
iret
mov
push
mov
dec
popf
mov
test
pop
dec
sbb
das
mov
xor
push
daa
mov
push
jbe
lret
add
jo
dec
fisttps
shlb
and
push
jl
jae
cld
and
cli
js
pop
pop
imul
jbe
mov
adc
xor
mov
push
xchg
out
jns
jmp
jno
mov
sub
cmp
int3
xor
shll
mov
jo
in
pop
sbbb
sbb
or
sarb
out
imul
or
mov
mov
dec
cmp
or
mov
jne
push
loop
or
mov
pop
imull
push
in
mov
mov
jno
cli
test
adc
xchg
pop
cltd
xchg
call
push
xchg
dec
jbe
xor
nop
mov
ficompl
jl
aad
and
insb
push
test
dec
mov
jle
cli
push
and
cli
push
mov
pusha
lret
hlt
adc
pop
fadds
faddl
cpuid
mov
pop
sub
xlat
push
xchg
lret
push
xchg
sarl
stos
sbb
or
rcll
jmp
std
movsb
sbb
into
add
test
sub
sub
mov
lods
xchg
mov
shlb
shl
sbb
popa
xchg
xlat
pop
popa
jmp
aad
inc
loopne
mov
push
out
lods
lea
sub
lea
sub
bound
and
jl
aas
outsl
loop
adc
insb
or
push
add
mov
ds
cmp
dec
xchg
cltd
push
inc
stos
shll
ja
inc
adc
add
lock
xchg
pusha
jmp
jno
arpl
popf
sbb
push
mov
mov
push
dec
adc
outsb
mov
inc
in
ds
mov
mov
or
iret
pop
push
ss
ja
out
cmp
pop
jge
je
sub
push
xor
xor
inc
pop
bound
pushf
out
and
out
or
cs
push
pop
cmpsl
adc
jb
jo
pusha
jnp
in
jl
pop
test
out
or
adc
pop
sub
cmp
inc
loope
mov
in
mov
sbb
push
or
addr16
setbe
je
pop
pop
cltd
mov
movsb
dec
leave
mov
sarl
add
shl
bound
mov
mov
faddl
add
sti
dec
mov
repz
xor
sub
mov
mov
mov
aas
inc
mov
leave
dec
insb
mov
inc
adc
call
xchg
cld
orb
jecxz
sbb
pop
jp
cmpsl
scas
sub
aaa
pop
iret
and
adc
add
sub
call
jmp
sub
push
mov
add
imul
mov
aas
std
aam
xchg
and
cmc
shlb
xchg
pop
jb
add
add
mov
jp
xor
pop
sbb
addr16
outsl
pop
lods
push
fmuls
mov
imul
xlat
out
xchg
gs
pop
mov
adc
ss
shll
mov
mov
mov
xor
sti
xchg
or
fildl
in
hlt
xchg
sbb
push
out
idivl
jbe
cmp
push
dec
addr16
add
add
push
push
shlb
sbb
dec
in
into
shll
lcall
lods
push
out
arpl
xchg
shrb
mov
out
shrl
sahf
push
out
fisttpl
mov
stos
xlat
inc
rcl
sub
scas
enter
pop
add
pop
push
add
sbb
cmp
bound
roll
pusha
jge
jmp
add
xorb
mov
subl
out
imul
mov
cwtl
jmp
cmpsb
mov
adc
adc
and
pop
and
movsb
sbb
clc
push
out
jl
insb
inc
jne
mov
cmp
jmp
xchg
insl
imul
mov
lahf
add
dec
imul
sub
or
or
push
insl
ret
jb
int
sub
leave
fcmovne
pusha
dec
inc
inc
xchg
and
jp
fidivs
mov
dec
or
ret
shlb
in
sbb
dec
lcall
sti
test
inc
cmp
adc
dec
jmp
iret
sbb
cmc
leave
add
mov
pop
cmp
mov
pushf
inc
ret
sti
pushf
ja
sbb
mov
out
lock
mov
push
loop
andb
pop
andl
mov
icebp
sub
mov
fistl
stos
push
cmc
fldl
sahf
mov
into
lea
add
out
push
xor
mov
xchg
int
and
pop
inc
test
fsubrs
adc
add
pop
js
cwtl
cs
mov
or
fs
xchg
or
std
xor
push
cld
aas
inc
push
lahf
sbb
movsb
js
push
add
lret
jno
in
dec
mov
in
cwtl
mov
mov
in
aad
popf
ret
pop
cltd
dec
sub
mov
and
and
jp
jge
test
push
aaa
pop
aaa
and
mov
cmp
mov
mov
mov
mov
mull
sbb
insl
push
xor
jbe
fisttps
int3
inc
xchg
mov
es
pop
mov
aam
daa
mov
dec
popf
mov
xchg
in
repnz
inc
pop
mov
jp
push
cmp
in
xchg
mov
sub
mov
push
sbb
mov
mov
xchg
pop
xchg
sbb
hlt
scas
fstps
dec
subb
into
sub
jnp
nop
sbb
mov
imul
inc
mov
cmp
or
sub
or
leave
xor
and
cs
into
sub
sub
mov
lock
xchg
aas
aaa
sub
outsb
add
loop
pop
xor
mov
les
popa
adc
pop
es
mov
xchg
mov
arpl
incb
dec
mov
inc
mov
das
lods
add
int3
cmp
sub
clc
fmull
mov
out
pop
dec
in
and
xor
loopne
xlat
in
xor
ja
and
ret
add
sbb
push
adc
lds
js
je
mov
adc
jmp
pop
testl
mov
stos
fsts
xchg
in
sub
gs
sub
jbe
adc
mov
pop
sub
pop
ljmp
outsl
add
pop
push
jg
jnp
in
mov
out
add
enter
and
xchg
aad
movsb
out
cli
jnp
or
push
mov
dec
lock
js
lds
add
outsl
fnstsw
jg
stos
xchg
or
or
roll
leave
imul
sbb
cmp
push
xlat
daa
cmp
jb
int
mov
or
fistl
dec
mov
js
mov
addr16
nop
sbb
lcall
js
jmp
fldcw
add
mov
xchg
adc
jns
ds
xchg
mov
loopne
jle
or
lock
adc
iret
jl
stos
lods
popa
pop
cmpsl
xchg
loope
sub
daa
xor
xchg
xchg
lods
addr16
hlt
push
mov
sbb
call
addr16
adc
xor
xchg
in
sub
mov
add
lea
loopne
pop
sub
mov
stos
scas
xor
mov
xor
mov
sbb
in
scas
pop
imul
jg
outsl
dec
dec
xor
add
xor
shrb
inc
int
cli
lcall
jle
out
sbb
dec
mov
aam
pusha
lret
jae
dec
and
jbe
xchg
dec
cmpsb
xchg
rol
push
pop
push
popa
jo
insb
out
mov
out
cltd
shlb
mov
cs
loopne
inc
out
push
outsl
xchg
xchg
mov
sub
sti
ja
prefetchw
mov
loop,pt
loopne
xchg
cwtl
ret
fmuls
pushf
xchg
call
mov
fiaddl
and
add
mov
andl
inc
outsb
js
jmp
mov
hlt
add
sub
scas
push
lds
dec
sbb
std
xchg
mov
mov
insb
push
xor
stos
pop
sbb
fbstp
mov
mov
mov
sub
mov
xor
or
jl
adc
cs
cmp
cmpsb
out
mov
or
pop
xor
xchg
insl
jg
pop
mov
push
mov
push
mov
xlat
push
mov
or
jl
rorl
sub
dec
jns
xchg
push
or
xchg
or
cmc
mov
add
fcoml
fsubr
daa
in
cmp
jo
fimull
mov
insl
insl
pop
shr
repz
xchg
leave
sbb
andl
pop
dec
adc
xchg
xchg
pop
stos
jno
fdivs
jmp
ds
int3
xor
scas
subl
inc
lods
cmp
jno
mov
sub
sub
xchg
xor
pop
lret
cmp
shll
shrl
fwait
pop
cmp
and
jl
dec
mov
hlt
push
or
fdivl
cmp
insl
out
add
lcall
jl
add
out
lret
cmovns
push
sbb
daa
mov
sub
jmp
push
popa
and
stos
mov
and
mov
mov
add
add
aam
lods
orl
dec
mov
and
cmp
stos
fcmovnb
jae
aam
dec
xor
loope
stos
mov
cmp
rcll
fmulp
int
idiv
inc
inc
sti
call
aas
pop
stos
inc
cmpl
into
ljmp
cmp
data16
inc
or
ret
inc
ljmp
xor
or
lcall
jmp
lods
adc
loope
push
mov
jns
push
xchg
mov
pop
inc
prefetcht1
fs
loopne
xchg
aas
movsb
movsl
sti
fs
push
dec
pop
ljmp
sub
inc
or
js
popf
ficomps
fsubrs
or
xchg
in
xor
clc
dec
cwtl
mov
in
loope
dec
push
adc
dec
into
or
shlb
jo
aas
mov
adc
adc
fnstsw
jmp
popa
xchg
mov
aas
pop
iret
mov
notl
test
xchg
jg
push
in
xlat
mov
rcrb
cmpsl
es
sub
fstpt
enter
loopne
inc
or
mov
mov
imul
sbb
cmp
add
push
in
xor
push
in
lods
adc
stos
mov
test
fcmovb
shlb
out
and
mov
push
dec
test
clc
mov
lds
enter
cmc
adc
mov
pop
push
insl
shl
mov
and
push
sti
out
outsb
loop
push
xor
jb
sbb
fidivrs
jnp
jae
je
sub
fcomi
roll
lcall
lret
xchg
push
js
mov
call
and
js
sub
push
in
mov
adc
enter
adc
jnp
rcrb
mov
out
or
orl
mov
jae
fwait
or
stos
fcompl
scas
and
je
xor
jl
bound
les
mov
outsl
call
mov
dec
lock
fmuls
iret
js
sbb
ret
cmpsb
cmp
testl
mov
push
addb
sbb
xchg
loopne
data16
lods
int
aad
dec
gs
cltd
sbb
and
shrl
or
mov
idivb
jge
push
cmpsb
dec
sahf
aad
lcall
pop
das
aam
jnp
push
jb
pushf
mov
mov
out
fwait
add
sbb
out
cmc
addr16
xchg
andl
or
adc
jne
lret
pop
xchg
rclb
popf
sub
aam
sbb
mov
aaa
outsl
cmp
mov
fnstenv
shl
daa
scas
adc
icebp
loope
push
dec
push
and
lds
cltd
ret
leave
mov
sbb
mov
ret
sub
es
dec
ret
daa
fwait
push
xchg
mov
mov
xchg
loop
jp
xchg
mov
clc
mov
inc
mov
mov
dec
xor
aam
mov
sahf
bound
jo
mov
xchg
shlb
pop
cmpsb
push
jle
adc
fdivrs
rcrb
ds
add
xchg
or
dec
leave
add
stos
jbe
cmovg
sbb
jg
aad
mov
adc
dec
stc
fs
mov
imul
mov
xor
xchg
jbe,pn
mov
jno
fldt
icebp
ror
push
stos
add
lods
mov
stos
test
test
push
and
int3
and
mov
sbb
xchg
cmp
ds
std
inc
stos
xchg
jle
inc
imul
jecxz
nop
rorl
andl
ss
sub
das
rclb
gs
inc
stos
push
adc
ss
pop
push
icebp
dec
xor
js
add
jnp
mov
dec
inc
int
inc
inc
clc
push
or
add
mov
nop
cli
aaa
xchg
pop
add
bound
mulb
adc
leave
push
mov
outsl
scas
pushf
int
push
jmp
xchg
sbb
xor
mov
hlt
push
js
imul
mov
movsl
pop
or
lret
daa
cmc
pop
scas
hlt
push
xlat
in
shll
push
addl
inc
pop
mov
cmp
push
leave
lret
mov
hlt
in
cmp
dec
insb
add
or
push
in
pop
fidivrs
addl
inc
push
push
stc
or
mov
mov
sub
cld
sub
int3
stos
cmp
ret
inc
push
xchg
pop
inc
lret
loope
addr16
addl
mov
cmp
sti
dec
or
enter
and
add
nop
dec
dec
in
pusha
sahf
xchg
daa
repz
jb
mov
inc
jne
lods
subb
sbb
bound
mov
mov
inc
push
test
lahf
add
and
jg
imul
fs
dec
and
inc
cmp
jle
mov
xchg
pop
dec
out
mov
out
outsl
lods
bound
aas
push
add
lcall
lock
push
mov
mov
inc
xor
lock
test
push
gs
and
addb
addr16
lret
enter
shl
outsl
call
add
jl
mov
mov
adc
mov
enter
pop
inc
mov
mov
aaa
xchg
cmc
shll
lock
repnz
mov
fsubrl
push
sbb
in
adc
or
jnp
std
inc
jecxz
push
gs
xor
call
jnp
ja
push
js
das
dec
fwait
cmp
sbbb
outsl
ret
icebp
out
test
inc
pop
loope
outsb
and
or
push
lds
xor
xchg
mov
xchg
ss
mov
mov
inc
jge
jne
mov
adc
pop
cmpsl
pop
add
out
pushf
hlt
stos
test
xchg
andb
testl
xor
mov
addr16
iret
and
lds
cmc
mov
je
mov
sbb
jle
add
in
sub
push
cmp
mov
shll
aas
int3
popl
and
pushf
push
clc
and
mov
lret
or
outsb
sub
sbb
imul
or
xor
daa
loop
and
ja
fs
bound
xchg
xor
jnp
ljmp
cmp
insl
addr16
xchg
idiv
imul
and
rorb
fnstenv
aad
mov
push
cmp
rcrl
arpl
mov
hlt
ss
std
movsl
std
out
jmp
xor
sub
repnz
ja
pop
cmp
cmp
incb
dec
rorb
add
ret
in
push
lods
popf
sbb
scas
std
mov
test
jae
cmp
insl
or
add
mov
mov
inc
orb
mov
or
inc
jo
fidivs
sbb
cmp
cld
or
ljmp
push
push
out
or
dec
outsb
lods
fldcw
dec
adc
inc
jge
xchg
sbb
aam
xchg
xadd
pusha
es
sbb
and
ficomps
push
or
pusha
xchg
mov
sub
std
daa
jo
cwtl
rorb
cmp
mov
inc
add
add
hlt
xchg
loop
in
adc
hlt
sbb
pop
repnz
stos
xor
jne
cs
iret
adc
or
cmp
shlb
std
std
lods
pop
cwtl
daa
xchg
cmp
sbb
mov
xchg
es
mov
stos
lock
cmp
sbbl
adcb
hlt
out
push
mov
movsb
es
ja
rcrl
lods
sbb
or
xchg
bound
xor
and
jmp
adc
jmp
jae
or
cwtl
shr
dec
xchg
fidivrl
push
jg
lods
fdivs
push
lods
daa
mov
sub
cmpsb
and
ss
jmp
cmp
std
loope
xchg
cmp
repz
js
inc
mov
lret
sti
lds
pop
idivl
cmp
mov
add
and
xchg
std
fwait
popa
pusha
and
stos
push
stos
sbb
flds
decb
inc
mov
push
and
jbe
sub
mov
mov
lahf
pop
iret
mov
sub
ds
add
fwait
imul
cmc
cmpb
jns
ljmp
pop
mov
lret
adc
mov
loopne
jb
adc
lcall
mov
or
sub
and
push
jl
add
xor
sbb
inc
mov
pop
inc
dec
pop
mov
in
push
jbe
imul
mov
xor
lock
lods
popl
mov
adcb
push
pop
inc
pop
xchg
mov
incb
mov
xchg
push
mov
push
icebp
dec
shll
push
xor
mov
loope
xor
in
lahf
ss
mov
pop
mov
loop
les
scas
jmp
mov
sub
pushf
xchg
jp
rcll
lret
mov
iret
scas
add
in
xor
les
dec
push
enter
or
jmp
es
ljmp
mov
jno
popf
notb
push
sbb
and
mov
pusha
pop
jge
movsb
out
loopne
push
pop
fildl
in
pop
jmp
xor
in
cmpsb
subb
add
outsb
aaa
add
adc
in
xchg
lret
add
sub
or
nop
int
mov
incb
unpckhps
push
or
and
push
popf
adc
pop
stos
xchg
in
pop
sub
jns
push
xchg
and
fs
xchg
jge
movsl
or
sub
in
add
in
mov
js
adcl
jle,pn
ljmp
dec
sub
mov
ret
jge
cmp
xchg
mov
and
cwtl
jnp
shrb
add
mov
lds
dec
stc
scas
adc
add
outsl
fcoms
sahf
imul
sub
sbb
iret
aas
pop
mov
sbb
enter
jns
call
cld
popa
and
sub
test
or
pop
fisubrs
sub
dec
and
xlat
sub
push
cmp
stos
icebp
flds
out
mov
ds
imul
inc
shl
stos
dec
fdivs
rorl
adc
cmc
lods
xchg
aas
sbb
jmp
xchg
and
sti
or
pop
test
sbb
jbe
jge
mov
data16
sbb
rol
push
or
in
inc
lcall
push
leave
sarb
jmp
xlat
mov
jge
push
jnp
lds
shll
mov
out
add
xor
mov
xchg
mov
mov
scas
adc
and
xchg
lcall
mov
cmp
jmp
lods
fisubl
and
push
xor
sbb
cmp
test
std
fdivl
or
pop
adc
adcb
cmp
sub
fstl
jnp
es
daa
popa
xchg
xchg
adc
in
jmp
dec
cmp
scas
pop
or
mov
scas
outsl
lock
cwtl
or
sysexit
clc
cmp
cmp
or
jns
mov
in
and
mov
orb
dec
aad
xchg
mov
dec
and
aad
ja
dec
xor
enter
or
push
xor
mov
pop
xchg
sub
fwait
xchg
xor
clc
adc
stos
test
cli
adc
mov
leave
dec
jnp
popf
repz
jnp
and
adcl
push
sbb
cmp
dec
push
lods
push
int
pop
popf
add
rorl
and
xchg
xor
push
call
mov
cld
scas
push
dec
mov
add
push
push
sahf
push
xor
inc
xchg
mov
jmp
fidivrs
push
shrb
sub
hlt
int3
lds
xchg
in
and
add
fdivl
dec
mov
roll
cmp
mov
add
or
ss
lds
testb
xchg
inc
push
mov
mov
cli
lret
movsl
jmp
repz
cmp
dec
out
inc
cmc
xchg
mov
repz
cmp
add
jge
lahf
out
into
out
arpl
mov
mov
xlat
push
push
adc
sbb
cmp
clc
cmc
lret
pop
mov
into
xor
sub
sbb
pop
test
and
mov
icebp
jmp
pop
adc
frstor
and
xchg
push
sbb
enter
pop
mov
ret
pop
aas
mov
insl
imul
and
lds
rol
and
sub
sbb
das
int3
pusha
add
jecxz
jno
dec
stc
scas
jbe
mov
je
cmp
sbb
or
mov
inc
fprem
add
add
cmc
adc
fstps
mov
xor
ror
jge
push
sbb
jne
xchg
mov
add
push
test
xor
fidivrs
cwtl
les
mov
add
das
popa
mov
mov
xchg
call
jb
dec
lods
fisubs
cwtl
dec
sub
mov
mov
test
or
cmpsb
and
stos
xor
and
insb
or
fwait
push
ljmp
xchg
add
xchg
stos
dec
leave
mov
repz
push
push
pusha
addl
mov
push
cmp
ficoms
andl
sub
jmp
add
xchg
jne
std
popa
imul
dec
mov
nop
orb
ds
jle
or
mov
insb
push
push
inc
push
jle
data16
jmp
xor
inc
test
add
and
clc
xchg
rcll
jle
xchg
into
push
cltd
dec
sbb
xchg
loopne
push
push
cltd
mov
sub
in
mov
inc
sbb
movsl
jae
mov
in
pop
mov
jns
mov
xor
cmp
xchg
test
outsl
add
lret
cs
stos
clc
xor
jns
and
xchg
loope
aam
add
repz
push
orl
push
jo
mov
mov
ljmp
mov
imul
shrl
xor
inc
into
ja
xor
jno
or
inc
das
mov
add
jb
push
push
fimuls
jb
scas
ret
pop
or
pop
xchg
into
in
mov
pop
sub
stos
out
pop
cs
test
mov
push
rcr
stc
and
inc
int
sub
outsl
push
das
push
push
jmp
and
stos
mov
or
push
push
je
outsb
inc
adc
cltd
jmp
adc
pop
sub
adc
inc
stos
cmpsb
mov
int3
push
call
push
lahf
shll
test
int3
push
imul
pop
xchg
or
imul
mov
mov
and
fstl
push
test
popa
cmpsb
lds
fsts
xchg
dec
std
pop
jo
lea
in
sahf
in
iret
pop
sbb
jno
lods
push
out
cli
sarb
sub
mov
test
or
lret
sbb
jmp
sarl
test
mov
aad
leave
sub
cmp
xchg
shll
mov
ljmp
stos
and
xlat
mov
scas
pop
scas
mov
push
inc
jnp
pushf
pop
xchg
inc
push
lds
arpl
xchg
les
insl
sti
test
fstpt
pop
and
mov
cmp
lds
cmp
and
rcrl
xchg
sub
fbstp
out
cwtl
dec
shlb
push
pushf
jecxz
sub
push
aas
xor
sub
push
pop
add
inc
xchg
fsubl
add
loop
movsl
outsl
dec
dec
loop
or
leave
subb
pop
iret
mov
cli
clc
push
sti
cmp
andb
push
mov
adc
add
sub
push
pop
xchg
adc
sarb
add
xchg
int
mov
aam
xchg
incb
outsl
icebp
jge
pusha
loope
pop
shrb
cmp
mov
sub
pop
inc
push
arpl
outsl
data16
test
fsts
push
ja
add
pop
lea
sbb
lret
aad
or
push
mov
or
sbb
cmp
xchg
out
pop
sub
adc
pushaw
pop
inc
je
js
je
lea
ret
mov
inc
adc
pop
and
pushf
adc
adc
mov
mov
jb
out
mov
insl
xor
cmp
jnp
fs
xor
mov
outsb
negl
fbld
out
pusha
add
js
adc
jno
lret
mov
dec
xor
lahf
je
jmp
dec
nop
lds
pop
mov
int
or
inc
arpl
outsb
repnz
andb
jns
and
insl
in
outsl
stc
jg
ds
xor
pop
pop
ljmp
xchg
xchg
push
pusha
in
outsl
sarl
test
arpl
cld
pop
mov
test
ror
push
or
aas
jl
sbb
das
mov
cmpsb
ror
pop
xchg
pushf
add
notb
sbb
xchg
bound
stc
inc
pop
subl
xor
or
xchg
sbb
inc
xchg
movsl
inc
push
fcmovnbe
xor
mov
mov
movsb
jmp
fs
adc
pop
mov
shll
inc
mov
dec
fwait
gs
lcall
inc
cltd
sub
xchg
and
psubq
inc
xchg
orl
mov
jne
cmp
add
pop
leave
pop
fidivs
in
pop
sahf
insl
stos
and
fistpll
lahf
sbb
sbb
cmp
lret
sbb
dec
fs
int
and
cld
mov
add
inc
cmp
dec
outsb
sub
test
adc
ficomps
jbe
sub
test
cmpsb
xor
daa
add
pop
repz
sbbl
jne
test
aas
aam
ret
popa
pop
cwtl
add
xor
mov
ds
push
jnp
addl
add
mov
inc
push
in
mov
mov
mov
pop
fstpt
mov
rcrb
in
mov
and
inc
shlb
test
jo
lcall
inc
cmc
xlat
cs
jo
pop
repnz
test
add
pop
push
rcll
aas
xorl
insb
push
xchg
cmp
xor
adc
ror
dec
and
imul
pop
aad
lahf
push
in
and
and
scas
ror
dec
inc
push
leave
mov
sub
sub
hlt
push
and
xor
subb
out
mov
jle
divb
jecxz
mov
sbb
and
pop
mov
enter
xor
inc
xchg
pushf
cltd
cltd
pop
push
push
sub
cmp
js
test
add
fwait
push
not
inc
add
movsl
dec
ror
icebp
call
inc
ja
adc
sub
int3
sahf
dec
aam
dec
inc
jl
cltd
adc
dec
xchg
test
js
insb
sbb
test
lret
pop
out
and
xor
jb
or
popa
gs
loopne
or
shlb
fcoms
pop
leave
mov
imul
jae
xor
inc
mov
call
ja
mov
sub
lea
xchg
ds
and
dec
jne
out
push
adc
or
shll
push
push
fistps
pop
imul
inc
lds
push
jo
pop
jge
aad
xchg
and
xlat
xchg
test
sarb
xor
fmuls
jnp
push
mov
dec
fidivrl
pop
and
jge
ret
sbb
mov
mov
cmp
ret
ja
dec
mov
push
xchg
subb
jp
mov
dec
adc
inc
xchg
or
aaa
sub
insl
jne
adc
scas
idiv
or
and
lods
fcoml
cmp
jp
push
fdivs
mov
and
mov
je
cmp
loope
xchg
pop
jns
and
jmp
fldcw
push
mov
sbb
shr
fisubrl
inc
xor
or
hlt
cld
cmpsb
pop
outsb
mov
mov
jecxz
mov
jno
outsl
dec
and
rcll
lcall
pop
data16
lcall
mov
ret
in
mov
mov
or
xor
xchg
inc
dec
scas
sub
push
and
add
jne
inc
scas
push
cmp
mov
adc
jae
jl
mov
mov
push
cmpsl
addr16
mov
scas
fwait
jge
test
jp
sub
les
insb
jo
je
push
shl
or
push
ds
insb
cltd
loop
push
sub
out
jmp
and
cmpb
push
sbb
inc
sub
mov
and
iret
and
fdivrl
add
jae
sub
lcall
dec
jg
mov
mov
mov
data16
sahf
mov
rorb
mov
lods
push
rcrl
sub
push
pop
mov
push
sbb
jp
shr
mov
mov
rclb
lahf
push
mov
mov
enter
pop
fldl
shld
or
loope
int
in
mov
rcrl
je
and
and
popf
cmp
xchg
sahf
outsl
mov
clc
or
lahf
loop
test
push
lahf
pop
mov
sti
js
add
cmp
test
adc
pop
fs
cmpsb
das
xchg
mov
add
outsb
and
xchg
outsb
jmp
clc
orb
addl
bound
rcrl
xlat
sub
cmpsl
or
out
rcrl
mov
lret
xchg
mov
and
xchg
pop
adc
fstpt
cs
sbb
arpl
cli
cmp
shrb
push
enter
ja
jbe
adc
sbb
and
sbbb
scas
mov
fs
std
jo
jecxz
sahf
add
fistpll
repnz
xor
lods
sbb
fstpl
in
xor
rolb
pop
jmp
mov
fimull
in
push
adc
les
push
rcrb
cmpsb
mov
jecxz
scas
cmpsb
clc
arpl
dec
dec
lock
dec
pop
aas
dec
jo
cmpsl
xchg
sahf
or
fwait
sbb
lock
push
xorl
stc
jg
push
scas
jl
std
int
sub
xchg
and
mov
inc
shlb
jne
je
pop
cmp
aad
jl
mov
push
fwait
sbb
mov
movsb
cmp
cli
std
lock
cs
jns
addr16
test
push
lods
lea
repnz
mov
jmp
push
insb
les
mov
fcompl
neg
into
in
sbb
push
mov
add
xchg
in
jno
mov
add
cmp
pop
ljmp
sub
mov
pop
ret
xchg
mov
inc
pop
jmp
inc
repnz
ljmp
fdivrs
mov
xor
aaa
jne
lcall
lds
cld
jae
scas
pop
fildl
adc
lods
bound
cmp
mov
sub
xor
cltd
in
mov
subb
leave
inc
mov
mov
xchg
xlat
xor
inc
inc
dec
and
sbb
gs
cmp
jle
jnp
cli
aam
mov
lea
cmp
sub
fwait
mov
dec
enter
push
jge
adcb
mov
out
hlt
and
push
mov
fimull
iret
gs
pop
mov
cmpsb
push
pop
mov
in
out
test
sub
mov
mov
mov
add
xchg
hlt
and
testb
insb
cmc
in
mov
or
sbb
icebp
ljmp
test
pop
inc
jge
jge
add
cmp
pop
jge
cmp
in
aaa
sti
adc
sbb
xchg
jbe
call
push
mov
iret
mov
inc
lock
xchg
sbb
call
das
hlt
add
mov
test
pushf
inc
pop
fstps
lods
sbb
xor
sub
jbe
pop
sub
xor
xor
iret
loope
insb
xorb
xchg
ret
mov
cld
or
mov
decl
test
xlat
lahf
popf
xchg
pop
or
sti
outsl
mov
and
outsb
lods
mov
adcb
repz
lahf
addr16
pop
filds
jg
das
sbb
movd
sub
movsl
lea
push
jo
fs
outsb
xchg
sub
out
gs
shrl
mov
rolb
xchg
adc
push
cmp
xor
insb
jbe
faddl
pusha
movl
div
mov
ret
fdivl
ret
push
jmp
mov
adcb
shlb
ret
inc
dec
lods
popf
pop
add
and
add
dec
negb
sahf
mov
test
mov
sti
in
sub
mov
mov
mov
add
adc
iret
cmp
lret
cmp
inc
push
and
mov
or
or
pop
in
imul
sbb
aam
repnz
cmpsl
into
rcrl
loop
stc
ret
push
pop
jge
imul
inc
jnp
test
push
pop
out
aas
int3
jle
xchg
mov
fdivl
lea
mov
jne
and
cmpl
loop
repz
jg
add
decb
xor
cmp
pop
add
sti
and
scas
arpl
push
cmp
pusha
cli
fimuls
rcrl
cmp
jp
test
mov
inc
fimull
xchg
mov
rorl
enter
stos
jge
xor
push
xlat
push
jge
mov
push
and
dec
sbb
dec
repz
ud0
xor
pop
pop
shrb
movsl
cs
mov
repnz
xor
cmpl
jno
xchg
ja
sti
lods
popa
mov
inc
ficomps
inc
jmp
sarb
sub
inc
mov
lahf
mov
pop
push
and
test
ds
sbb
xor
mov
cmpsb
jb
mov
lret
movsl
in
sub
out
stc
ds
cmp
into
test
push
js
bound
mov
inc
fucomp
jns
mov
push
test
and
pushf
dec
rcrl
icebp
insb
shlb
push
cmp
pushf
stos
mov
adc
fsubrs
insb
adcl
cmc
or
loopne
out
xor
mov
cmp
mov
pop
mov
int
lock
pop
xor
jb
or
mov
sub
scas
adc
jg
scas
andl
cwtl
pop
add
inc
stos
jne
mov
or
mov
lods
sbb
mov
dec
cmpl
dec
test
sub
enter
pop
loopne
cs
add
lods
xor
lcall
ret
pusha
mov
jbe
rcl
js
ds
sbb
movsb
aam
inc
pop
addr16
sub
add
nop
popw
sbb
insl
aam
xchg
inc
lods
xchg
test
scas
sub
fmul
inc
cld
std
shrl
cs
mov
pop
nop
adcb
jbe
aaa
movsb
inc
jns
leave
mov
push
adc
fadds
mov
sahf
das
outsb
mov
lock
enter
out
das
and
aaa
lods
xchg
rcrb
std
outsb
push
push
xchg
data16
mov
enter
add
jmp
pop
mov
and
addb
mov
sbb
popa
xor
cmp
in
xchg
in
imull
xor
popf
dec
xchg
fwait
ret
xchg
xor
jno
addr16
lods
nop
lds
inc
inc
jg
pop
mov
stc
in
or
notb
stos
jns
aas
cmp
pop
pop
inc
pop
das
mov
jmp
mov
jecxz
lahf
mov
pop
jae
fists
data16
jo
jmp
pop
loopne
rol
jno
scas
mov
int
xchg
daa
xchg
add
fistl
imul
and
sub
stos
out
ret
lret
int3
mov
xchg
aam
ljmp
negl
out
insl
push
mov
or
enter
sub
out
jno
out
add
rorl
sub
or
dec
sbb
inc
adc
mov
repnz
lods
and
or
aas
cmp
inc
cmp
dec
bswap
popf
lock
stos
jg
xorl
idiv
pop
enter
lods
sub
shll
jo
lods
hlt
jg
cmpb
adc
pop
cmpsl
lds
jb
clc
test
dec
mov
outsl
js
stc
xchg
pop
jae
adc
cmp
imul
shlb
xor
scas
and
mov
xchg
icebp
call
and
pop
js
lret
popa
insb
pop
cmp
push
out
out
ret
clc
shlb
insb
sbb
mov
push
mov
and
insb
pop
int3
jno
sbb
pusha
sbb
icebp
cmc
inc
jmp
xchg
loopne
faddp
sub
push
sub
cmpsl
pop
push
sti
xor
stos
cmp
push
push
mov
ds
in
inc
pop
pop
inc
sbb
popa
fwait
out
xchg
adc
scas
mov
shrl
xchg
mov
and
imul
fmuls
sarb
mov
fisubl
stc
xor
pop
ds
sbb
ret
xchg
pop
and
mov
dec
dec
aam
mov
push
push
and
adc
in
mov
lahf
cmp
frstor
movups
les
and
mov
call
and
aam
repz
aam
push
cmp
sbb
push
sbb
mov
jo
fs
and
mov
shrb
lret
jmp
add
mov
inc
dec
dec
cli
lods
mov
pop
pop
xchg
call
cmp
sub
sbb
lea
pop
push
cli
pop
fwait
lods
xor
loope
xchg
jno
arpl
dec
cmp
dec
setno
outsb
or
push
sbb
cmp
ljmp
dec
out
inc
add
inc
insl
pop
outsb
dec
int
push
xchg
dec
outsl
call
inc
testb
dec
or
and
arpl
mov
jg
sahf
sub
cli
inc
add
aas
addr16
js
js
push
and
in
sbb
lahf
pop
aaa
sbb
fcompl
mov
fiaddl
jns
and
sbb
cmpsl
cwtl
add
int3
dec
inc
std
aad
repnz
jae
jb
cmpsb
lcall
pop
scas
push
in
into
test
cmp
or
sbb
sti
loope
adc
adcl
xchg
adc
pop
dec
je
inc
sub
out
inc
repnz
sub
add
loope
lods
adc
cmc
cwtl
mov
mov
dec
jae
mov
jno
scas
and
mov
pop
inc
bound
adc
jns
jge
adc
stos
or
subl
adc
fwait
nop
dec
jnp
inc
xor
jecxz
cld
lods
cmc
aas
pushf
mov
addr16
sub
push
loopne
sbb
lahf
scas
das
push
bound
mov
mov
push
mov
jmp
in
insl
insb
insl
jle
in
jge
sahf
dec
arpl
insl
jl
cmovnp
pop
in
das
pop
cmpsb
push
cmp
imul
movsb
rclb
jmp
or
imul
sti
and
mov
int
push
sbb
sbbl
cmp
dec
imul
xchg
mov
mov
xchg
fists
popf
out
xchg
in
ss
adc
adc
ljmp
inc
and
add
sub
ljmp
add
dec
insl
cmp
cmpsl
lods
mov
sbb
rorl
xchg
pop
repnz
add
pop
sub
cmp
jg
int3
jecxz
or
popf
hlt
inc
lahf
cld
jbe
cld
cli
iret
sub
int3
jnp
add
mov
pop
adc
sbb
jg
xor
and
add
imul
or
mov
cmp
or
push
or
repz
psadbw
add
mov
mov
pop
add
insb
sub
ret
sub
xchg
mov
fisttpll
mov
xchg
dec
cmp
je
xchg
call
enter
xchg
xchg
mov
pusha
fildll
mov
and
inc
cmp
and
ss
out
lock
repnz
cmp
lock
clc
pop
mov
mov
call
mov
xchg
mov
sbb
add
jno
lods
xchg
out
lea
in
xor
sbb
imul
adc
dec
pop
pop
add
fcmovne
and
sub
inc
int
cld
push
xchg
cmp
add
fldt
jmp
test
jecxz
gs
jecxz
fdiv
cmpsb
or
idivb
pop
mov
mov
in
push
xor
or
or
sub
shl
jmp
xchg
faddp
add
push
leave
adc
bound
xor
roll
gs
shrb
xchg
loopne
aad
inc
cmp
and
push
lea
cmpsl
mov
xchg
sti
aaa
adcb
insb
outsl
mov
outsl
and
pop
lahf
mov
mov
ret
cmpl
lock
xchg
push
xor
sti
aam
hlt
cmp
pop
cmp
xor
data16
pop
and
les
or
or
fstl
inc
add
jns
dec
mov
stc
shrl
sti
dec
hlt
sar
int3
stc
es
imul
das
leave
sub
push
sbb
push
inc
xor
sub
int3
les
fstpl
lcall
cmp
repz
add
add
sub
iret
xlat
adc
rcr
leave
js
add
pop
add
adc
and
out
lods
fnstenv
test
sbb
sub
xchg
sub
xchg
call
test
test
add
or
cwtl
lret
idiv
xchg
xchg
ljmp
mov
pop
insl
fwait
sub
aaa
push
stos
js
mov
in
xchg
rorb
dec
mov
mov
adc
push
test
js
ret
cmc
out
pusha
jo
bound
mov
inc
fdiv
rcrb
dec
cld
mov
je
arpl
cwtl
inc
mov
dec
push
mulb
jl
loopne
jo
ret
xor
ss
rcr
sti
pop
pop
shl
out
add
xchg
inc
es
mov
aas
pop
xlat
pusha
icebp
jns
sbb
int
or
push
arpl
idivb
xchg
inc
ds
lret
les
jecxz
inc
pusha
roll
add
jmp
shl
dec
movsb
xor
xchg
jo
aas
xor
das
sbb
js
push
jl
clc
and
sub
jae
movsl
das
sbb
test
jne
in
js
push
cli
dec
sub
inc
dec
gs
push
push
adc
pop
pop
ds
iret
fwait
stos
orb
mov
lcall
fldpi
insb
mov
xor
fstpt
sbbb
adc
or
and
push
mov
aas
ret
fs
ss
pop
iret
outsl
sub
std
std
add
popa
mov
addr16
scas
inc
push
add
jno
xchg
mov
xchg
pushf
shl
cld
lds
scas
test
sbb
cmp
jecxz
mov
jecxz
test
daa
call
sbb
push
cwtl
xchg
inc
jecxz
dec
shll
nop
pop
mov
insb
inc
pusha
in
inc
iret
jmp
sub
test
scas
mov
mov
dec
aas
xor
xor
arpl
mov
fnstcw
pop
jecxz
xchg
adc
jp
push
les
cmp
dec
shlb
and
rorl
jnp
push
outsb
std
jo
leave
dec
jp
jno
fwait
push
add
ss
push
push
mov
daa
call
dec
out
push
or
mov
orl
push
adc
movsb
jb
inc
or
mov
orl
repnz
dec
push
push
add
or
inc
lcall
mov
shl
inc
mov
pop
stc
imul
cmp
adc
add
add
dec
outsl
iret
outsl
fs
pop
sub
xchg
cwtl
and
mov
hlt
in
fwait
adc
add
ds
pop
xchg
pushf
rolb
sub
jge
adc
es
sbb
push
daa
mov
clc
andps
loop
out
sub
shrl
insl
mov
push
push
or
loope
mov
sub
stc
jg
push
mov
xchg
fsubrp
push
xor
and
adc
fst
punpcklbw
inc
sarl
add
imul
push
sbb
mov
repnz
lds
adc
cmp
mov
mov
ficomps
cwtl
push
jns
push
js
jae
mov
and
sub
jae
push
xchg
push
push
mov
pop
in
aaa
flds
arpl
push
ljmp
in
sahf
push
fbstp
and
jnp
dec
inc
pop
enter
outsb
cmp
loopne
mov
xor
or
or
mov
xor
call
int3
xlat
lcall
ds
pushf
push
into
sub
jae
test
je
mov
cmc
pop
sbbl
je
movsb
inc
mov
pop
xor
je
push
mov
insb
gs
mov
fwait
jmp
iret
inc
sbb
out
loop
adc
adc
pop
xchg
jle
push
inc
mov
xchg
jnp
mov
je
adc
sbb
inc
mov
andb
dec
cltd
jns
push
jecxz
cmp
popa
mov
ss
mov
xchg
aad
stos
arpl
filds
mov
jo
lods
push
add
shlb
stc
mov
ss
pop
mov
add
insl
pop
repnz
inc
mov
pop
mov
mov
lea
adc
add
fsubrl
test
lock
xlat
mov
adc
ljmp
pop
dec
push
addl
mov
cltd
mov
das
mov
dec
call
loopne
sbb
lahf
mov
sub
clc
xor
inc
lret
push
ret
adc
pop
xchg
lods
pop
movsl
mov
bound
shr
test
ret
mov
incb
aam
rorl
int
push
rcrl
sub
aas
cltd
xor
push
xchg
imul
pop
inc
dec
mov
ja
jl
incl
pop
pop
and
in
inc
mov
pop
cld
scas
push
js
or
dec
xchg
push
mov
and
repnz
xchg
adc
loope
lock
jns
dec
je
out
insb
cmp
stc
and
xor
mov
adc
call
push
addr16
stos
lods
lret
pop
movl
push
xor
loope
sbb
or
pusha
jp
in
loop
loop
hlt
scas
es
jl
je
pop
mov
lahf
pop
fcomp
cltd
rorl
adc
in
xchg
divl
stc
popa
test
shr
out
push
outsl
push
or
mov
push
out
lods
or
jp
pop
jmp
test
dec
enter
dec
pop
mov
rcl
popa
insb
in
cmovne
and
cltd
int3
dec
inc
pop
xor
lods
mov
dec
in
xor
out
test
dec
ret
fnstsw
cmc
scas
and
orb
mov
pop
and
mov
and
mov
mov
pushf
mov
push
rcll
sti
xor
repz
pusha
aam
mov
adc
fldcw
popa
cmp
sarb
ficoms
pop
in
push
mov
xchg
xlat
xor
insl
mov
push
daa
xor
out
out
cli
xchg
cs
xchg
mov
jp
stos
fisubs
dec
or
jp
jge,pt
xor
push
mov
out
sahf
icebp
jne
retw
pop
mov
hlt
push
mov
rcll
sub
xchg
wrmsr
pop
inc
enter
jno
or
adc
mov
cli
imul
or
and
mov
loope
jmp
sub
int3
mov
and
push
mov
popf
dec
pop
inc
loopne
jne
add
and
cmp
fs
cmp
mov
call
sbb
push
inc
mov
cmpps
mov
imul
xchg
pushf
nop
jnp
sbb
ficomps
xor
fildll
in
scas
dec
lahf
sti
jg
sub
pop
aam
dec
push
pusha
mov
dec
pushf
cld
push
pop
nop
and
inc
adcl
and
jecxz
xchg
ljmp
in
mov
in
push
lret
test
bound
out
cs
stc
in
mov
popf
flds
test
out
das
gs
stos
nop
or
fptan
jo
add
lret
or
jl
xchg
test
dec
lcall
out
into
mov
xor
mov
into
ficoml
enter
cld
lock
or
pop
cmc
dec
push
pop
inc
and
outsb
adc
aas
out
les
add
repz
xchg
inc
dec
imul
jecxz
out
dec
f2xm1
push
sbbl
xor
mov
add
je
sti
sbb
mov
dec
lret
push
fistl
stos
xor
fdivrl
fwait
in
orb
mov
and
int
testb
cmp
pop
iret
in
cltd
sbb
push
bound
fstl
into
cmpsl
inc
push
mov
mov
inc
dec
sub
jne
xchg
call
and
pusha
cld
lods
inc
test
jno
ds
ret
mov
insl
jbe
stos
cs
xchg
xor
popf
push
ss
mov
mov
lea
mov
pop
arpl
das
jg
push
add
inc
jl
inc
adc
adc
test
pop
fsubr
jmp
test
mov
js
xor
pop
sbb
out
hlt
fnstcw
outsb
imul
pop
pmulhuw
inc
enter
pop
jle
sub
xchg
jae
push
mov
lcall
stos
notl
ljmp
or
stc
dec
and
mov
aam
and
fdivr
pop
sbb
push
sarb
push
nop
pop
push
push
hlt
insl
push
unpcklps
pop
pop
call
daa
mov
add
cmpb
adc
xor
stc
and
mov
dec
in
pop
mov
rcrl
pop
cmp
jg
xchg
or
ds
ljmp
jo
dec
jb
mov
popa
out
pushf
mov
pushf
mov
cs
fwait
mov
popf
ficoms
xchg
dec
dec
stc
lahf
lock
ljmp
mov
cmp
sti
push
sti
std
aaa
mov
add
sbb
divl
cmp
fidivs
mov
mov
ds
add
and
loop
rcr
subb
jae
or
ret
mov
jg
mov
jne
and
ret
push
pop
push
in
mov
xchg
adc
test
data16
js
test
adc
out
xor
dec
ss
sbb
and
or
sahf
sub
in
inc
shl
mov
dec
sub
dec
shlb
adcl
mov
cmp
and
and
jle
aam
or
pop
sbb
jp
repz
or
inc
mov
stos
cmc
lahf
imul
lock
and
repnz
shr
cmc
cmp
push
jle
xchg
sub
mov
or
leave
dec
dec
mov
fisubrl
and
stos
add
icebp
mov
dec
fadd
adc
add
cmp
cmp
sub
scas
test
lea
mov
lock
or
test
mov
push
push
ljmp
lret
add
hlt
stos
add
cmpl
inc
arpl
ficoml
xor
stc
pushf
jecxz
sbb
clc
cmp
mov
xchg
lahf
addl
cli
in
xchg
loope
out
mov
daa
pop
xchg
sub
pop
push
fisubrs
add
int
mov
leave
insl
push
jns
pop
in
xor
outsl
outsl
and
cmp
ficomps
rorl
push
in
loop
jecxz
mov
add
dec
or
adc
int3
frstor
clc
fdivs
mov
cmp
ss
into
insl
mov
lret
jge
adc
out
add
daa
dec
lret
dec
jg
out
clc
in
lret
mov
gs
cmp
sub
sub
add
adc
sbb
movsl
xor
inc
sti
mov
sub
sahf
jmp
push
dec
int3
cli
loope
cs
ljmp
push
push
jae
cmp
adc
mov
pop
out
sbb
add
inc
insb
pop
orl
test
stc
lea
je
ret
mov
jle
mov
xchg
add
mov
in
les
add
test
or
fbstp
cmp
push
shll
cli
movsl
pop
jns
xchg
lret
daa
dec
mov
ficomps
enter
cmp
dec
sub
push
fdiv
aaa
mov
popa
scas
gs
popf
icebp
bound
mov
xor
jo
add
xchg
mov
or
xchg
inc
int3
cmp
push
push
in
mov
jno
pop
xchg
cmp
call
dec
cmpsl
xchg
rcl
mov
xlat
mov
in
lods
dec
push
jae
pop
mov
mov
mov
push
out
and
mov
fsubrl
nop
aad
ss
xchg
sbb
push
std
inc
lahf
dec
add
cli
or
add
cld
arpl
or
and
test
xchg
aas
repnz
sub
das
add
adc
jecxz
jo
lahf
xchg
mov
cld
dec
orb
sbbb
jmp
inc
xchg
cmp
jmp
xor
hlt
popa
lods
adc
xor
and
aad
cwtl
fs
push
push
cmp
pop
lea
jae
xchg
xchg
dec
fwait
or
mov
testl
pop
pop
jne
xor
inc
in
mov
sbb
and
mov
add
fwait
or
push
add
cli
adc
mov
gs
mov
and
nop
cmp
rcrl
xchg
loop
in
fsubrl
les
leave
push
int
inc
sub
add
pop
cmp
aaa
or
call
jmp
cmpsl
lods
jno
test
rclb
adc
popf
dec
or
in
cmp
jmp
jge
loop
jmp
pushl
fadds
pop
mov
push
lahf
popa
repnz
popa
cwtl
lods
pop
loope
test
ficompl
dec
and
mov
push
pop
sbb
ficoml
xor
jnp
jecxz
mov
inc
les
mov
lock
xchg
nop
and
jecxz
fimuls
pop
xor
sub
hlt
pop
fisttpll
push
add
dec
ffree
mov
outsb
sub
mov
sub
bound
cmp
pushl
push
aad
xor
pop
mov
mov
je
test
mov
decl
fistl
ds
sahf
sahf
and
jmp
out
daa
hlt
pop
imulb
lcall
lret
mov
xor
cmp
mov
mov
or
xchg
in
cmp
sahf
iret
ss
xchg
je
shlb
mull
fdivrs
stos
filds
data16
jg
jns
shlb
or
mov
dec
sarb
lods
mov
mov
xor
xor
out
dec
jg
xorl
int
xchg
xor
addl
jge
lahf
stos
lret
mov
jl
mov
dec
pusha
xchg
test
mov
mov
bound
jle
add
dec
popa
inc
sbb
jp
sbb
cmpsl
neg
mov
gs
dec
inc
dec
lods
in
jmp
jge
xchg
bound
pop
mov
cmp
dec
and
add
andl
test
bound
xor
jmp
sbb
and
movsb
sub
shll
iret
mov
idivb
hlt
cmp
mov
mov
pop
jge
mov
dec
mov
scas
pusha
rcrl
dec
sbb
das
int3
jne
test
into
addr16
push
jb
repnz
add
scas
jo
imul
pop
inc
lcall
gs
out
add
fcomps
dec
and
loope
inc
jle
rcll
lods
mov
xchg
push
and
cmp
test
jbe
setns
ds
jmp
push
lahf
pop
rcll
lret
daa
or
into
ljmp
jge
inc
test
or
clc
dec
sti
xchg
cmp
jge
loopne
jp
cmp
xlat
or
inc
cmp
das
int3
adc
imul
stc
popf
fidivrl
lcall
mov
fdivrs
inc
push
add
sbb
mov
jno
push
mov
dec
pop
fs
insl
push
adc
pop
cmpb
stos
fldl
sub
aad
orl
cltd
jns
das
stos
lds
jle
and
cld
cmp
mov
xchg
cmpsb
addr16
dec
ja
loop
leave
mov
and
sbb
pop
rcr
cmp
jno
pop
ss
sahf
loopne
mov
push
pop
cltd
scas
popa
jl
inc
into
sub
cmp
sbb
xchg
inc
xchg
in
clc
mov
into
nop
std
cmpsl
stos
xor
and
sti
in
inc
sub
fmuls
pusha
mov
cmp
loop
std
xchg
ret
add
rcrl
jle
pop
in
push
sarb
outsl
lods
jp,pt
sti
xor
dec
sti
loop
mov
insl
popf
push
and
add
jns
xchg
outsb
in
cltd
test
lret
mov
jae
push
mov
setl
fs
shlb
nop
add
cmp
inc
mov
test
es
in
add
add
and
mov
out
cmp
pop
jns
push
sarl
dec
mov
cli
loopne,pt
xlat
int
stc
loop
jp
xor
xchg
cmp
test
aam
xchg
or
lahf
mov
jp
mov
rcrb
lahf
cmp
aad
sarl
push
sti
sbb
cmp
xchg
and
jno
mov
inc
fldcw
popa
mov
jecxz
les
jmp
outsb
ds
dec
mov
rcll
pop
bound
xor
jecxz
sbb
gs
mov
sbb
leave
sahf
and
cmp
mov
lods
mov
mov
add
aam
repz
mov
sbb
and
hlt
dec
and
cmp
pop
stos
inc
fs
adc
data16
mov
lods
inc
fcoms
push
leave
iret
mov
and
xchg
aaa
daa
in
js
pop
mov
sbb
clc
cmp
icebp
push
pop
jno
lods
cld
or
inc
xlat
roll
push
loop
int
stos
int3
lret
jmp
dec
test
shrl
pop
cmp
jnp
test
jo
test
sbb
inc
roll
push
lds
inc
or
pop
and
adc
es
xor
fldcw
pop
add
mov
dec
dec
movsl
cmp
mov
cmp
jo
xor
xor
cmpsb
pop
in
mov
int
mov
cmp
add
mov
push
push
into
std
dec
fst
xor
inc
hlt
sbb
aas
and
push
inc
push
add
movsb
sahf
lock
lret
stos
ja
adc
aas
test
sarl
cmpb
adc
daa
and
fcoml
rclb
and
jo
inc
sbb
leave
ret
outsl
push
push
inc
or
fwait
mov
mov
push
icebp
jne
lcall
lds
pop
je
repnz
scas
aas
xchg
mov
push
dec
out
mov
mov
inc
inc
cmpsb
shr
xchg
je
cmpb
rcll
imull
rclb
dec
add
adc
int3
and
adc
rclb
jmp
icebp
jne
xchg
sub
pop
pop
pop
push
xchg
mov
stos
xchg
popf
std
mov
cmp
sub
jp
mov
andl
adc
pop
movsb
shll
cmc
mov
into
fwait
lds
test
push
adc
mov
adc
inc
ja
fwait
out
imul
xchg
xor
lods
leave
pop
lahf
inc
mov
movsb
movsl
adc
and
addl
add
aaa
pop
sub
xchg
ds
mov
fcmovnu
das
inc
lret
add
popa
popa
jns
push
movsl
push
push
bound
shlb
daa
insb
sahf
and
adc
lods
mov
andb
cmp
xor
and
fdivrl
inc
and
movsl
adc
inc
pop
jmp
jae
fwait
rclb
loopne,pn
cmp
jp
lahf
mov
push
sti
pop
jecxz
jnp
int
jmp
out
jecxz
mov
bound
fldenv
jge
dec
in
ds
adc
mov
rcl
mov
icebp
mov
es
xchg
rol
stc
sti
jmp
lret
push
mov
addr16
lret
mov
add
push
inc
hlt
inc
mov
add
leave
lods
shlb
sbb
call
jecxz
push
stos
jge
ds
mov
push
pop
fdivl
stos
out
mov
and
fsubrl
aam
pop
mov
repz
cmp
mov
jb
idivl
popa
mov
fsts
mov
int
movsb
daa
pop
mov
leave
fs
sub
xor
mov
and
cld
sub
jnp
call
mov
sbb
adc
xor
dec
xor
out
push
jns
or
push
adc
pop
mov
das
cwtl
jmp
push
cs
lcall
aaa
loope
dec
loop
pop
add
rol
fcoms
outsl
pop
int
enter
frstor
inc
add
xorl
call
and
sbb
jae
aad
pop
fisttpll
cs
cltd
aas
lods
jnp
inc
dec
or
mov
fwait
and
xchg
pop
jne
and
cmp
xchg
jecxz
push
xor
cmp
push
ret
rolb
aas
sahf
inc
xchg
lock
loope
adc
xchg
sub
dec
or
andl
dec
jns
mov
jmp
fadds
imul
iret
fnstcw
jae
shrl
nop
and
xchg
jo
dec
daa
in
fidivrs
dec
mov
ja
out
pop
adc
mov
add
fsubrl
sbb
stc
dec
daa
jnp
iret
in
cld
rclb
xchg
mov
orl
leave
xchg
mov
stos
mov
pop
add
sti
fsub
fwait
gs
lods
mov
pop
cmc
into
lock
mov
popf
icebp
and
test
pop
imul
cwtl
push
jb
shlb
mov
and
add
sarl
or
aas
into
add
pop
je
mov
iret
jno
scas
push
aam
jmp
fdiv
repz
sti
push
in
and
iret
dec
pop
mov
les
in
xchg
inc
lcall
scas
sbb
rclb
test
xchg
sti
xorl
sbb
lds
test
xor
xor
sub
fstpt
divl
inc
enter
xor
cs
lods
xor
xlat
idivb
test
inc
cmp
sub
out
jae
mov
popa
int3
or
push
mov
call
xchg
lea
ret
icebp
call
inc
cmp
mov
enter
inc
cs
ret
shlb
pusha
push
lret
xchg
or
icebp
pop
fcmovb
add
pop
cmpsl
push
xchg
imul
rcrl
sahf
lcall
push
fldenv
jle
push
jmp
fistpl
mov
dec
or
and
into
push
test
fwait
in
stc
dec
mov
sbb
xchg
push
fbstp
aam
andl
scas
sbb
daa
cmp
fimull
andl
dec
or
mov
and
sbb
into
or
out
sub
fbld
jnp
xchg
push
fldenv
sbb
mov
pop
cmp
cmpb
mov
push
and
pop
mov
mov
xchg
mov
jmp
mov
lahf
mov
xor
mov
pop
das
push
arpl
mov
cli
mov
mov
xchg
inc
pop
fwait
mov
mov
scas
mov
aaa
push
sub
inc
or
jge
lods
outsl
icebp
mov
jmp
push
sbb
xchg
into
dec
sub
or
mov
into
sti
flds
mov
mov
aad
daa
fwait
mov
mov
pop
or
lods
xor
cmp
add
jecxz
pop
xor
push
push
or
dec
lods
fistpll
fdivl
inc
mov
cmp
xchg
mov
ss
add
adc
ffree
inc
xchg
sbb
xchg
rcrl
ret
and
mov
sub
pop
cli
inc
leave
nop
mov
adc
xchg
mov
sbb
xor
repz
testl
ja
bound
push
cs
out
notb
mov
repnz
mov
jns
out
dec
push
sahf
mov
dec
add
jb
mov
inc
mov
and
ljmp
hlt
dec
arpl
bswap
pop
adc
lret
scas
mov
jg
jo
shrb
aad
idivl
inc
mov
call
je
dec
cltd
std
cli
and
push
mov
subl
inc
dec
mov
xchg
jb
sub
in
push
dec
lea
jl
lcall
rorl
movsl
or
lret
ret
dec
in
les
aaa
loopne
mov
movsb
inc
push
insl
push
jp
orl
lret
mov
xchg
inc
and
push
repnz
pop
xorb
pop
inc
mov
dec
and
inc
lret
cmp
scas
xchg
push
test
in
bound
sbb
in
sub
fisttpl
ror
ljmp
js
and
imull
int3
xor
stos
aas
cmpb
jnp
inc
jo
out
std
mov
cmpsl
lea
lcall
jb
xor
pop
xchg
icebp
mov
fnstenv
mov
rcrb
inc
inc
cs
lret
push
les
gs
push
jae
scas
in
adc
mov
mov
rolb
dec
and
out
sbb
sub
mov
mov
aaa
adc
mov
jae
loopne
inc
leave
adc
ret
mov
in
xlat
loope
test
mov
scas
call
jle
shll
push
outsl
inc
adc
loope
jbe
stos
mulb
and
mov
lods
lods
dec
imul
insl
jmp
sbb
jg
sub
mov
addl
call
int3
push
lret
popa
mov
adc
push
leave
sub
subb
dec
fbstp
repnz
push
jp
push
adc
test
jle
lahf
and
or
aam
adc
loope
xor
push
rcl
mov
out
pop
mov
popa
pop
ljmp
sbb
fstpt
pushf
sbb
cmp
icebp
push
test
loope
roll
jne
xchg
xor
insl
je
pop
jns
lds
cmp
lods
mov
mov
sahf
mov
push
loope
push
mov
push
loop
out
iret
and
sub
lods
repz
lret
pushf
mov
cmp
mov
and
pop
movsl
xchg
nop
pop
jae
scas
imul
push
pop
adc
adc
out
and
cld
hlt
gs
loop
push
lock
mov
es
mov
js
jae
push
sbb
dec
push
pop
mov
es
xchg
push
popa
cld
cli
imul
mov
sbb
and
cmpsl
cmp
or
les
mov
daa
cmp
loopne
sbbb
ds
test
sub
and
data16
add
data16
nop
dec
test
in
push
lods
pop
iret
lds
push
leave
insb
push
sbb
mov
or
fdivrs
imul
sub
mov
movsb
test
cmp
fisubrs
or
mov
sarb
push
lahf
sbb
test
jge
lods
sub
dec
cmp
test
outsb
in
mov
in
mov
fimull
dec
dec
ret
mov
shlb
push
and
les
repnz
mov
mov
popa
dec
icebp
lahf
add
or
ljmp
outsb
popf
gs
sti
xor
sbbl
inc
inc
outsb
jae
sub
test
cli
dec
adc
lret
mov
mov
das
int3
jl
out
sbb
sar
sbb
xor
lret
inc
cltd
cwtl
cmp
pop
jnp
dec
stos
mov
push
stos
pop
insl
shlb
loop
add
bound
pop
mov
leave
sbb
lret
sbb
ret
mov
int
out
cmp
pop
das
lahf
add
add
nop
or
cmp
iret
cmp
ss
ret
lods
or
jge
lock
test
inc
jnp
stos
fdivrs
cmp
dec
xorl
shll
les
arpl
fwait
mov
je
gs
stc
cli
mov
or
add
sub
pop
inc
imul
test
jo
push
dec
insb
cmp
mov
cmp
aaa
mov
xchg
pop
loopne
out
and
jle
inc
or
cmp
inc
mov
loopne
sbb
mov
repnz
push
outsl
cld
insb
lock
mov
call
dec
fcompl
dec
out
out
pop
outsb
xchg
push
in
popf
arpl
rorl
cmp
nop
add
or
sub
in
cmp
jnp
dec
inc
subb
push
inc
nop
and
mov
and
sub
jmp
mov
into
cmc
mov
dec
xchg
cld
push
add
sti
mov
inc
push
sbb
mov
jmp
add
aam
aad
mov
outsl
sub
and
fcoml
inc
movsb
aam
std
nop
mov
inc
insl
sub
push
popf
lods
int3
iret
inc
xchg
xor
xchg
cmp
lds
int
jnp
push
xchg
insb
xor
pushl
stc
rorl
or
imul
dec
and
aaa
add
ljmp
das
cltd
or
fisubs
test
jl
hlt
pop
enter
into
aam
inc
mov
lret
das
inc
fnstenv
bnd
xchg
or
mov
loope
jp
adc
pusha
ret
loop
repz
jno
push
inc
fwait
xchg
cltd
dec
push
popa
leave
imul
mov
loopne
fs
and
sub
sub
enter
mov
fnsave
stos
out
adc
sub
dec
sub
jmp
xchg
mov
xor
aaa
xchg
dec
xchg
add
xor
push
shll
xor
cwtl
in
and
push
mov
dec
outsl
pop
mov
mov
jae
xlat
inc
mov
jnp
mov
jle
stos
movsl
lret
das
adc
fidivrs
lds
cs
fs
je
or
jmp
xchg
iret
xor
pop
mov
cmp
xchg
ljmp
les
aaa
das
mov
pusha
pop
imulb
add
dec
push
push
jmp
ret
jp
adc
push
pop
mov
or
test
add
and
sub
push
pop
and
sub
push
add
in
and
jno
frstor
orb
mov
sbb
jae
fwait
sarl
cltd
ffree
mov
jmp
div
enter
pop
pop
rcrb
in
inc
dec
std
xchg
mov
push
xchg
mov
dec
aad
inc
adc
imul
jne
xchg
addr16
mov
push
mov
push
pop
xlat
cmp
fnstenv
enter
ljmp
push
pop
ljmp
outsl
and
adc
push
jle
push
mov
xor
and
dec
sub
sahf
dec
out
jge
out
pushf
lods
sahf
out
insb
test
push
sub
dec
dec
imul
cmp
fsubrs
arpl
lret
inc
mov
pop
xor
cmp
aas
pusha
loop
cwtl
jmp
pop
add
push
test
xchg
dec
insb
std
test
pop
sbb
mov
push
sub
mov
rolb
pop
jp
fldt
dec
mov
adc
scas
fidivl
xchg
and
enter
inc
das
int3
mov
sti
sub
sbb
cmpsl
cmp
js
imul
into
cmp
mov
fwait
xchg
mov
movsb
aam
mov
push
inc
or
xchg
push
test
ret
int3
repnz
in
mov
dec
scas
out
mov
icebp
bound
mov
shrb
repnz
insl
dec
add
and
pushf
dec
mov
in
mov
cmpsl
aad
imul
cmp
jg
cmp
cmp
push
outsl
in
jne
mov
test
insl
test
int3
xorb
fldt
shlb
inc
adc
loop
dec
cwtl
bound
cwtl
mov
faddp
addr16
and
call
mov
xor
inc
inc
adc
fists
push
inc
int
xchg
test
sbb
sti
sbb
or
cmc
push
push
cmp
outsl
cmp
jmp
inc
mov
lods
cmp
jecxz
xlat
popa
add
sbbl
fsubrp
xchg
pusha
int
test
aaa
shr
ret
sti
mov
jae
hlt
add
ss
mov
xor
sbb
ds
sub
insl
jo,pt
sbb
into
mov
stc
add
nop
shrb
sbb
test
mov
pop
fsubrs
mov
dec
mov
jae
cmpsb
jge
fimuls
repnz
jae
inc
sbb
insb
scas
jecxz
adc
or
test
or
arpl
cmp
int
add
push
lret
mov
cmc
ds
dec
or
js
mov
mov
pop
or
xchg
inc
insb
mov
add
in
push
jle
inc
push
cmpsl
int3
push
jg
fcmovnb
inc
test
orb
movsb
pop
loop
out
ret
mov
and
push
push
adc
pop
sbb
cmp
jp
addr16
aas
mov
or
mov
xchg
add
sbb
mov
sbb
xchg
stos
in
pop
test
jno
mov
mov
cmp
iret
mov
xchg
fidivs
out
je
adc
rorb
cmpsl
lahf
sbb
push
cmc
insb
and
xlat
pop
mov
nop
out
push
mov
aam
and
sbb
cltd
es
in
out
xchg
or
or
sbb
xlat
mov
and
aam
in
or
xlat
fucomip
das
cmpsl
stos
xor
mov
popa
rolb
sbb
jb
add
ss
pop
mov
mov
push
dec
sub
fisubrl
xchg
jge
sub
mov
shll
sub
icebp
pop
hlt
push
jne
sub
xchg
pop
movsb
cli
sub
test
imul
mov
in
lods
or
mov
repz
pushf
mov
repz
jnp
fiadds
pusha
repnz
pusha
sti
arpl
xor
loop
mov
pop
jo
add
xchg
sahf
push
and
int3
jns
fxch
cmp
rol
bound
sarb
xchg
scas
mov
insl
fistps
cmpsl
leave
and
movsb
dec
lea
in
cld
jp
add
divb
lahf
sbbl
sub
iret
jp
dec
push
jmp
bound
mov
push
imul
push
test
and
jb
add
lock
sbbb
jle
out
aad
in
into
outsb
add
sti
push
fisttpl
jne
in
adc
orb
jns
or
add
xchg
pop
jle
push
jmp
push
mov
adc
push
imul
jbe
dec
jns
sahf
fdivl
decl
pop
mov
movsb
aas
bound
and
ja
lock
jno
add
cmc
sbb
inc
popa
pop
int3
lcall
inc
sbb
test
popf
ret
jge
movsl
cs
ja
sub
push
jnp
test
in
xor
lock
dec
outsl
add
xchg
outsb
femms
fsubrl
fidivl
pop
in
pop
adc
icebp
mov
cli
out
jae
and
sti
mov
push
cmc
cmpsl
int
push
out
insl
dec
cwtl
je
popf
fwait
add
mov
pop
cli
cmpsl
out
daa
cs
loop
out
repnz
repz
or
mov
jg
jbe
sbb
push
fiadds
loopne
xchg
test
icebp
sahf
lods
cmp
jbe
cmp
adc
or
xor
in
call
fcoms
ret
add
movsl
scas
lea
test
jne
mov
mov
sub
or
inc
pop
bound
pop
fnstcw
dec
mov
mov
xor
in
jle
push
test
cmc
arpl
jne
insl
cwtl
loop
sbb
repz
xor
lret
inc
sub
adc
add
gs
test
xor
push
mov
out
lods
add
ret
or
imul
jg
ds
cmpsl
stos
inc
push
faddl
mov
or
cmp
ja
cmp
mov
push
test
loope
mov
and
xchg
xchg
mov
cmc
fisubs
sub
nop
out
lcall
xchg
sti
mov
jb
jge
std
or
xor
xchg
sti
push
aad
mov
aas
and
idivb
les
insl
xchg
out
xor
lock
mov
mov
mov
stos
sbb
cmp
and
cmc
mov
sbbl
inc
adc
mov
popa
test
jp
imul
cmp
mov
jmp
movsb
cmpsb
andb
into
sbb
xchg
push
lea
adc
add
push
mov
gs
mov
pop
inc
push
mov
lahf
clc
dec
ror
fcoms
repz
sub
jg
into
lea
rcr
mov
xor
daa
adc
pop
mov
mov
mov
xchg
mov
xor
mull
lock
push
mov
push
arpl
ret
rcl
pushf
in
jmp
sub
xlat
jecxz
test
xchg
dec
adc
roll
jle
sbb
jecxz
mov
adcb
ja
xlat
sub
in
rep
bsr
sub
mov
xlat
push
lea
rcrb
inc
jmp
mov
lock
add
inc
xor
shrl
jge
jmp
xchg
aas
mov
jle
jp
sahf
ljmp
lahf
add
fstl
negl
shlb
pop
les
fwait
popa
xorl
notb
ljmp
pusha
ss
or
ljmp
push
pop
inc
inc
push
dec
das
popa
subb
outsb
cwtl
xchg
pusha
sbb
mov
pop
add
adc
faddl
cltd
lods
push
xor
mov
add
lret
jbe
cwtl
xchg
xorb
xchg
jg
add
pop
sub
sub
in
loop
inc
sti
out
les
leave
adc
mov
cmpsb
xlat
xchg
dec
xchg
das
and
es
cmc
push
jle
out
rcrl
mov
ljmp
push
rcrb
jne,pn
sbb
sti
xchg
mov
cmc
dec
push
sbb
test
push
sbb
scas
and
es
push
ja
or
out
mov
mov
jo
mov
xor
scas
loop
inc
sbb
xchg
cmpsb
lret
xchg
pop
int
or
and
fwait
and
jmp
and
cmp
adc
outsl
jge
inc
pop
cmp
dec
sub
add
sbb
adc
insl
mov
dec
insl
jmp
adc
cmp
sbb
pop
jmp
lret
sbb
int3
jp
sub
lods
daa
pop
xlat
int
jo
das
mov
cld
push
pop
cmp
fnstenv
sbb
and
mov
pop
out
cmp
nop
lock
jb
loop
pop
testb
inc
sub
xor
push
cmp
mov
push
mov
aaa
pop
cmpsb
stos
imul
into
in
into
iret
and
jne
ja
sbb
xchg
dec
in
mov
repnz
xorl
and
rcll
add
icebp
xchg
mov
clc
adc
vmovaps
lahf
xchg
mov
nop
xchg
push
pushf
add
xchg
stc
test
imul
lock
and
inc
sub
xor
xchg
mov
rcr
sub
daa
or
loopne
into
push
push
scas
lahf
repz
int
test
push
jb
out
jmp
mov
add
mov
leave
cmpsb
mov
aam
ret
dec
stos
fmuls
es
shr
sbbb
aaa
movsb
dec
mov
neg
pop
pusha
iret
push
jnp
int3
jp
out
daa
pusha
fwait
xchg
iret
sub
mov
dec
add
or
mov
ret
into
dec
mov
cmc
push
pop
ja
mov
cld
ja
mov
fs
out
push
jp
loope
push
mov
ficoml
or
outsb
sub
sub
testl
imul
inc
std
enter
mov
inc
es
jo
iret
adc
push
cld
mov
dec
sub
scas
and
lahf
subb
call
xor
jmpw
xor
mov
jmp
cmp
push
sub
fdivl
inc
push
jge
push
out
je
pushf
gs
push
jno
fdiv
outsb
das
mov
inc
lods
jge
mov
fidivl
sbb
adc
sahf
mov
inc
std
add
pop
lret
mov
insb
ds
jl
or
xor
or
push
adcb
pop
mov
cwtl
mov
jns
outsl
je
dec
sub
shll
bound
sahf
loop
and
pusha
push
push
insl
sbb
lcall
daa
dec
dec
inc
repz
xchg
fisubl
or
sti
jb
outsb
mov
inc
dec
xchg
enter
xchg
mov
idivb
or
inc
inc
lea
xor
filds
mov
cmp
pop
pop
sbb
call
mov
rorb
or
movsb
outsl
int3
mov
lock
out
mov
cmpl
mov
out
jl
les
js
mov
dec
repnz
xchg
xor
sti
dec
out
cli
pop
aam
xchg
jp
jg
lcall
sub
dec
or
pop
push
sbb
lods
mov
adcl
xorl
push
arpl
sbb
add
mov
or
lods
pop
dec
adc
aas
mov
dec
mov
testb
or
cld
out
ds
mov
addr16
in
add
enter
mov
mov
push
sub
ret
inc
sbb
push
clc
out
movsb
mov
inc
xor
rclb
push
mov
repz
popf
jle
mov
xor
lret
ja
mov
fs
insb
cmp
jbe
cmp
hlt
incl
pushf
or
dec
pop
dec
jo
push
push
inc
loopne
inc
pop
xor
in
push
out
push
mov
test
pop
loop
adc
sub
int3
jae
test
cmp
add
in
inc
std
fwait
push
mov
sub
arpl
lret
orb
in
daa
adc
dec
xor
fisubrs
xor
out
jg
rolb
pop
ret
pop
out
dec
and
inc
mov
cmp
fists
mov
ja
cmp
add
mov
in
cmp
mov
sar
adc
js
outsl
cmp
aam
clc
xor
cli
xchg
pop
and
add
in
mov
xchg
cmp
lcall
popf
sub
andl
jmp
mov
mov
sub
sub
ret
mov
dec
adc
rolb
or
daa
scas
shr
in
mov
sub
mov
cmp
push
add
icebp
and
scas
inc
rolb
outsb
aad
mov
pop
push
mov
fwait
push
daa
cli
adc
mov
dec
outsl
xchg
sbb
cmp
ja
or
push
xor
xchg
mov
std
lret
dec
jne
mov
mov
clc
mov
sub
cmp
cwtl
inc
aas
push
out
cmpsl
into
pop
cli
hlt
stos
out
dec
cmpsb
lahf
add
mov
lcall
or
hlt
cmp
jmp
and
adc
sub
in
into
pushf
mov
mov
aas
iret
icebp
adc
pop
jo
or
shrb
inc
lahf
test
repz
jle
mov
dec
orl
jns
arpl
push
dec
mov
sbb
add
and
and
xchg
cmp
je
gs
imul
jnp
or
mov
movsb
cld
jno
daa
mov
push
movsb
sub
adc
xor
xor
cmpsl
push
lds
les
sbb
lods
mov
or
rcl
push
sbb
fwait
mov
insl
or
lcall
mov
in
push
mov
ja
sub
gs
cmp
adc
adc
movsl
mov
xlat
mov
decb
jge
mov
enter
jl
sub
push
push
sti
mov
and
mov
sbb
ss
sbb
in
push
orb
pushf
test
inc
rol
lret
dec
in
and
mov
out
xchg
imul
out
xor
mov
shll
xchg
mov
and
js
mov
mov
pop
inc
push
mov
fistl
rclb
mov
mov
mov
pop
mov
add
and
mov
pop
std
xor
jae
dec
mov
sub
and
ret
test
in
vandnps
jb
fcmovu
adc
inc
enter
mov
cwtl
mov
lds
pop
int
or
sarl
mov
push
ret
cmp
jns
jl
xchg
or
in
mov
pop
pop
xor
dec
mov
ret
mov
ja
movsb
fwait
sub
push
das
in
ja
adc
dec
je
dec
mov
clc
sbb
push
imul
aas
sti
into
lods
sbb
xor
and
sub
mov
xchg
insb
mov
mov
jecxz
mov
and
mov
sub
movsb
mov
bound
mov
dec
jg
pusha
mov
out
rcrl
jge
add
addr16
jle
fnstcw
addr16
jnp
adc
sub
cmp
out
sbb
clc
push
pop
jmp
or
xchg
test
mov
push
fdivl
call
xor
mov
sbb
push
mov
push
arpl
lea
pop
repnz
jnp
mov
out
push
push
pop
mov
aaa
jno
stc
pushf
fnstsw
push
insl
aam
mov
iret
and
cwtl
adc
fbstp
adc
into
leave
mov
jno
pop
sbb
mov
mov
sub
push
push
xor
mov
adc
mov
aas
pop
fsubrs
xor
or
xchg
out
and
xlat
xchg
mov
pushf
inc
cld
xlat
jns
or
cltd
andb
movsl
clc
sbb
add
pop
push
fneni(8087
xor
inc
stos
adc
js
xchg
add
push
dec
in
and
xor
pushf
inc
test
ret
xlat
pop
inc
cmpsb
or
sbb
shr
xchg
xchg
add
addr16
xchg
cmpsb
aad
rorb
sti
dec
lods
ja
or
arpl
sub
mov
cmp
mov
jb
test
cmp
repnz
test
adc
mov
inc
jno
inc
aaa
daa
outsb
or
ds
push
loope
xchg
inc
sbb
gs
es
in
jae
mov
gs
mov
stc
pop
mov
sbb
pop
rcrl
inc
ja
inc
repz
mov
daa
sbb
mov
add
ror
psubusw
mov
call
add
sbbb
and
mov
ja
mov
ficompl
adc
das
jecxz
mov
pop
push
xchg
inc
testb
and
call
repz
clc
jl
pop
inc
lcall
insb
sahf
mov
jl
xor
sub
mov
dec
shlb
movsl
outsb
cmc
fs
push
dec
fisubs
push
add
add
mov
lods
and
adc
adc
jge
mov
xor
pop
mov
jo
push
fstl
push
leave
outsl
cmpsb
push
pop
int3
rcrl
aaa
sti
insl
xor
pop
rolb
icebp
sbb
add
out
int3
mov
les
mov
xor
addr16
hlt
mov
leave
ss
leave
sbb
sbb
das
jp
arpl
mov
test
das
inc
loopne
and
lods
mov
aas
mov
adc
stos
dec
or
movl
lahf
pop
outsl
push
cmpsl
sbb
pusha
dec
insb
pushf
adc
pop
adc
mov
jge
adc
mov
es
push
imul
rcll
jge
jns
inc
aam
adc
clc
add
fs
outsb
pop
cmp
sbb
mov
lret
lret
fsubs
andb
xor
push
add
add
imul
xor
xor
call
popf
mov
xor
or
add
or
cmc
pop
adc
adc
lcall
sub
xchg
cmp
enter
ds
xchg
xchg
call
mov
mov
jbe
xchg
push
and
pop
cs
dec
dec
pavgb
dec
and
cmp
and
xchg
or
das
rorl
mov
push
cmp
popa
adc
out
mov
and
mov
inc
ljmp
sub
outsl
push
adc
inc
mov
inc
lea
pop
push
in
cmp
pop
and
or
cmpsb
jp
jmp
push
mov
or
das
push
xchg
out
mov
out
xor
arpl
addr16
loopne
loop
push
fbld
xchg
or
lods
xchg
mov
or
loop
daa
imul
fidivs
into
dec
test
subb
test
adc
mov
pop
stos
push
jnp
adc
repnz
or
ds
mov
jo
loopne
xor
mov
push
in
sahf
mov
nop
jecxz
dec
adc
fsub
push
in
dec
jae
inc
mov
ljmp
jns
mov
inc
pop
mov
outsb
and
int
fildll
test
lock
cltd
cmp
or
mov
repnz
sahf
sbb
loope
repz
add
adc
sahf
ret
sub
in
out
jns
mov
lcall
cli
xlat
inc
mov
sbb
push
cmp
and
and
pop
adc
cmp
outsl
pop
mov
cmp
or
mov
aam
mov
jns
in
add
aaa
mov
mov
cwtl
rclb
into
jmp
in
stos
xor
lds
xchg
xchg
dec
push
mov
cmp
jp
les
cmpsl
push
fistpll
movsb
and
js
repnz
adc
movsb
inc
jg
inc
aaa
mov
and
adc
dec
cmp
fldcw
mul
fidivl
test
int3
addps
pop
xchg
into
test
clc
in
hlt
or
adc
mov
jmp
cmp
mov
fistpll
xchg
fdivl
jl
xor
mov
sar
xor
or
or
gs
clc
insb
dec
hlt
and
dec
cmp
sub
adc
sub
cli
les
in
dec
sub
mov
enter
out
ret
movsl
cwtl
ljmp
push
sbb
outsl
mov
ja
jl
xchg
rcll
push
lods
xor
cmpsl
ss
jge
xchg
fdivr
sbb
mov
xchg
les
mov
fs
sub
addb
loopne
sarl
fcoms
mov
mov
push
cmp
int
sub
push
mov
cmp
out
aaa
out
inc
adc
xor
or
pop
mov
mov
sbb
pmulhuw
daa
mov
icebp
frstor
insl
imul
or
push
jecxz
dec
mov
out
jp
sub
loop
sahf
fs
sub
dec
or
adc
dec
or
fs
jg
test
pop
int3
popa
cwtl
mov
into
pushf
inc
jno
jmp
test
jp
add
inc
xor
adc
push
arpl
mov
in
loopne
lock
or
push
sbb
pusha
cwtl
xor
adc
cmp
sbb
or
adc
stos
add
daa
cld
mov
cmpsb
inc
add
sub
jno
add
mov
aad
les
xor
inc
ss
add
adc
push
jbe
xor
rorb
or
es
es
sbb
dec
cmpsb
mov
jbe
mov
cmp
fs
inc
pop
or
xor
cmpsb
and
adc
loop
sbb
dec
icebp
add
and
std
pop
repz
cld
mov
cltd
adc
out
pop
sub
jno
sbbb
sarl
mov
int3
sub
xor
dec
loope
and
pop
pop
mov
jbe
cmpsl
pusha
shl
or
mov
mov
std
dec
out
pusha
xchg
xlat
dec
into
sbb
clc
mov
outsl
ds
cli
add
xchg
jns
scas
fisubs
mov
sub
inc
lahf
sub
xor
testb
lds
sahf
loopne
in
jns
add
mov
aas
jns
jp
enter
icebp
or
ret
pop
jl
ret
repz
mov
aaa
cmp
ljmp
mov
jno
cmpsb
dec
lahf
jnp
in
add
xchg
shll
or
aas
xchg
fcmovbe
mov
add
push
in
pop
push
push
push
jp
andb
adc
push
mov
mul
mov
lcall
jae
sbb
mov
jl
or
scas
push
je
adc
fadd
repz
mov
push
lds
push
aas
sbb
push
lods
cwtl
jb
sahf
js
pop
jecxz
fwait
stos
clc
push
mov
ljmp
xor
jbe
jmp
leave
data16
and
mov
adc
pop
outsl
mov
inc
gs
rorb
stos
add
xlat
adc
arpl
cmp
pop
neg
rcll
adc
mov
or
rclb
xor
fwait
sbb
jae
mov
pop
cmova
push
nop
mov
or
dec
mov
xor
xchg
sub
orl
data16
les
aaa
ds
mov
and
jecxz
jle
adc
pusha
xchg
push
bound
mov
je
add
in
sub
mov
push
dec
mov
push
cmp
jb
push
shl
jmp
fisubrl
sbb
cmp
insb
inc
adc
dec
xchg
bound
mov
fildll
out
dec
jns
icebp
icebp
push
push
test
dec
push
sub
inc
out
mov
pop
fisttpl
add
movsl
nop
mov
repz
adc
addr16
push
cmp
divb
stos
gs
cltd
mov
addr16
out
adc
pop
inc
ficoml
or
shrb
cmpl
mov
pop
addr16
jmp
and
jmp
cmp
jp
xchg
jo
mov
mov
popa
ret
mov
data16
int3
into
xor
push
sub
xor
cwtl
push
cmpsl
inc
inc
pop
js
test
pop
cmpb
pop
push
cltd
push
push
movsl
jl
sub
add
and
das
in
inc
push
sbb
outsl
mov
iret
sahf
pop
notb
sub
mov
sbb
idivb
dec
cmpsl
sub
dec
jge
sub
daa
lds
ret
jecxz
outsl
int3
mov
loopne
sub
pusha
push
lds
mov
xchg
in
inc
and
lods
cmpb
inc
lods
mov
jge
cwtl
mov
mov
pop
jbe
test
in
lahf
pop
inc
stos
imul
aas
fldenv
repnz
pop
cltd
je
cmc
leave
fwait
and
addr16
pop
dec
cmp
mov
int3
mov
loop
add
mov
jmp
push
jmp
push
repz
pop
int
stos
outsb
mov
addl
push
mov
sbb
inc
pop
aas
les
rcll
hlt
lods
dec
sti
in
aam
cmpsl
pusha
int3
mov
aam
scas
xchg
shll
push
pop
xchg
sub
fisttpl
mov
inc
iret
sbb
add
jo
push
jmp
jb
xchg
sbb
jl
fstl
outsl
bswap
cwtl
into
movsl
out
out
mov
es
or
aaa
popf
bnd
adc
or
or
mov
dec
adc
imul
cmp
in
enter
out
push
mov
rorl
imul
jp
jmp
int3
scas
cmp
push
sbb
push
ret
sbb
push
sub
and
xchg
xchg
rol
mov
js
test
imul
mov
cmp
and
adc
cs
loopne
cmp
cltd
fwait
jle
scas
repnz
mov
pop
push
push
faddl
icebp
test
rol
mov
add
movsl
aaa
xchg
movsl
das
arpl
lret
jecxz
stos
add
jae
lea
sbb
in
cs
clc
or
loopne
pop
push
mov
test
rcll
pop
incb
push
loop
dec
aad
test
mov
in
roll
rolb
push
flds
inc
je
sarb
aam
in
inc
addl
mov
rclb
sub
sub
push
out
mov
lcall
xchg
jne
jmp
out
out
or
call
xchg
cmp
scas
cld
imul
std
dec
xchg
sbb
xlat
push
mov
stos
ret
sbb
pop
and
mov
sbb
sar
pop
mov
xlat
fisubrl
shrl
addr16
sbb
arpl
mov
insl
add
mov
and
jns
ficoml
dec
insl
inc
pop
cmpsb
je
mov
movsb
sub
bound
cwtl
mov
or
sbb
stos
sub
mov
push
xchg
in
cmp
push
add
jae
or
addr16
pop
dec
movsl
cmpsl
lods
or
std
cld
sbb
ret
lock
mov
ficompl
xchg
cmc
lock
fstpt
test
sbb
sbbl
mov
arpl
subl
push
dec
imull
lods
dec
xor
or
into
mov
inc
test
mov
repz
ret
test
inc
xor
jb
adc
pusha
mov
jle
les
adc
outsb
loop
inc
in
push
bound
dec
mov
jmp
insb
mov
xor
mov
cmpsb
mov
sahf
js
js
std
bound
fwait
adc
hlt
add
xchg
mov
sahf
push
jg
push
xchg
and
je
imul
ss
int3
popl
test
lea
add
popa
jae
push
rolb
push
sbb
lret
xchg
and
pop
into
popa
mov
daa
test
push
mov
repz
sbb
jg
repnz
cs
mov
hlt
bound
lahf
ss
stos
test
adcb
sti
lcall
sbb
clc
push
push
leave
fisubl
rcll
xor
xchg
pushf
ja
xor
mov
pop
xchg
pop
push
xor
adc
pop
sub
fisttpl
scas
or
pop
scas
mov
mov
cmpb
pop
mov
add
inc
mov
sub
test
mov
fsubr
fdivrl
imul
pop
mov
jg
push
daa
push
and
scas
xor
ret
clc
push
xor
adc
xor
movsb
push
xchg
loope
xchg
test
sub
sub
add
jno
repnz
lds
pop
cmp
cmp
cwtl
fldenv
cli
hlt
mov
mov
push
and
fldenv
popa
mov
add
popa
xlat
inc
push
adc
sbb
xchg
mov
bound
les
push
shll
pop
lds
iret
pop
push
xchg
dec
jno
mov
xchg
cmp
sbb
scas
loop
pop
dec
aaa
add
and
mov
shrb
stos
cmp
loope
dec
push
mov
cmc
es
xchg
mov
subb
jns
mov
jp
xor
inc
pop
cmp
out
mov
add
inc
clc
cmp
cltd
pop
cmp
enter
ds
insl
ficoms
inc
jp
enter
daa
cmp
pushf
stos
dec
test
jno
dec
push
sub
loop
popa
cmp
pop
cmpsl
jmp
inc
lahf
mov
mov
adc
jns
aam
adc
shrl
jge
mov
insb
push
addb
cltd
and
repz
jo
sub
fs
mov
inc
cmpsl
bound
popa
add
das
adc
bound
cmp
lods
push
jmp
jns
push
int
sbb
sarb
or
das
mov
mov
add
sub
xchg
or
xor
imul
shll
rcrl
push
in
sti
lret
sub
test
movsb
test
sub
jl
mov
mov
adc
lea
sub
jne
add
adc
jg
cwtl
mov
xchg
mov
mov
repnz
sub
lret
add
mov
sbb
mov
xchg
rcl
arpl
cmp
or
dec
das
adc
aad
cmp
dec
loopne
call
mov
and
lods
adcb
inc
add
mov
xor
ja
or
push
mov
cmp
stc
adc
and
loopne
adc
test
mov
pop
or
dec
aas
or
push
and
jb
imul
and
dec
repz
and
repz
jb
dec
mov
in
nop
xlat
mov
inc
fadd
jno
cmc
sub
dec
cmpsb
jg
repz
int
pop
je
jae
xor
popa
std
xchg
push
dec
mov
sbb
xchg
push
imul
cmpsb
mov
and
movsb
ds
stos
xchg
sahf
fildll
data16
sbb
add
xchg
mov
and
add
cltd
jl
pop
test
int3
pushf
div
in
push
jg
pop
shr
aas
jg
mov
lods
movsl
add
xlat
aaa
jg
cs
cli
popf
out
adc
add
mov
rol
push
lock
inc
mov
imul
insb
stos
jle
hlt
in
sbb
mov
ds
pushf
xor
or
rclb
mov
and
pop
cmp
in
mov
cmp
xchg
stos
imul
adc
les
push
in
xchg
cmpsl
mov
adc
add
sbb
or
sti
push
cmp
insb
pop
ffree
jge
test
hlt
data16
out
xchg
jno
xlat
scas
add
jo
ja
and
fnsave
jmp
mov
std
imul
cli
hlt
cmpsl
dec
leave
mov
inc
movsb
insb
push
sub
pop
nop
xchg
mov
ret
lret
test
cwtl
xor
fiaddl
lods
inc
mov
adc
pop
jb
jne
add
js,pt
imul
pusha
mov
and
pop
cltd
out
push
fsubr
push
jge
lds
sub
test
negb
cmp
test
mov
ror
sarb
pusha
lcall
jecxz
inc
fwait
dec
std
jbe
mov
and
insb
repz
add
mov
movsl
inc
dec
jne
cmpsl
ds
pop
adc
ret
into
mov
xor
sub
inc
in
jecxz
jmp
sub
call
inc
mov
mov
jnp
iret
jbe
shll
insl
sbb
pop
outsl
jg
xor
out
mov
cmp
inc
mov
mov
pop
dec
and
daa
pop
sub
xlat
jae
aad
cmp
sbb
cmpsl
jne
in
mov
inc
mov
test
shrb
push
xor
mov
leave
xchg
push
out
test
out
lahf
loopne
push
imulb
and
jecxz
lds
mov
daa
jl
or
inc
aaa
das
icebp
inc
adc
arpl
xor
imul
imul
cmp
xchg
sbb
cwtl
or
push
or
push
and
shr
popf
fmuls
xchg
rol
enter
cmp
push
in
adc
fcmove
fistps
sarb
jle
sub
daa
in
stos
push
cli
cmp
mov
sub
ret
sbb
sub
std
cld
mov
sub
inc
and
ja
push
mov
sbb
fwait
lods
movsl
pop
repnz
cmpsl
sbb
push
pop
add
movsb
cwtl
fimuls
loop
fiadds
jle
ds
cmp
mov
aam
in
aas
adc
xorl
pop
sbb
test
jnp
jnp
call
xchg
sbb
xor
fwait
jl
dec
cmp
adc
push
sbb
pop
pusha
jg
fstpl
jmp
xlat
jns
sbb
in
aam
mov
out
push
testb
add
in
sub
or
scas
jae
dec
inc
dec
pop
jb
loopne
filds
js
ss
add
lret
xor
pop
pop
xchg
and
testb
jp
sub
adc
pop
xchg
in
and
iret
loopne
jle
pop
shrb
cli
sbb
lea
push
pop
xchg
xchg
sbb
cmpsl
das
fwait
dec
jge
cmpb
icebp
cmp
xchg
and
divb
test
into
jg
or
xor
push
out
es
jle
xor
cmp
mov
adc
mov
mov
movsb
lahf
fdiv
sbb
cmp
add
sub
mov
enter
mov
out
mov
lahf
and
cld
mov
mov
mov
dec
movsl
mov
mov
or
adc
jno
out
scas
repz
mov
sub
negb
xor
xchg
pusha
out
mov
out
cld
adc
cltd
or
mov
dec
xor
fwait
cmp
mov
adc
pop
inc
js
dec
notb
push
adc
hlt
mov
lea
xor
mov
or
xchg
cmp
and
aad
add
ficoml
adc
cmp
sub
inc
fstl
or
cmc
or
mov
or
xorl
jns
dec
mov
push
stc
xor
cmp
xchg
lea
jp
push
fcoml
xchg
jne
xor
cltd
pop
ret
inc
inc
js
pop
ljmp
and
sub
les
repnz
jns
data16
or
ret
cmp
pop
add
mov
scas
std
cmp
jae
sbb
adc
das
in
jno
mov
cltd
mov
add
js
aam
out
fdiv
mov
fsubs
pop
xor
xchg
fists
lock
adc
cmp
ret
jo
mov
mov
aaa
ja
inc
or
and
mov
or
pop
nop
push
mov
xchg
mov
mov
cmpsb
ss
and
scas
bound
mov
add
incl
imul
loope
dec
fbstp
cmp
xchg
inc
xor
sbb
daa
mov
stc
setns
les
imul
adc
ror
pushf
sahf
pop
and
roll
lea
jb
mov
cmp
inc
rclb
mov
inc
in
or
mov
cmp
push
adc
inc
fisubl
cmp
xchg
sbb
xchg
sub
fnsave
mov
fcoms
clc
sahf
lods
mov
rorb
loop
xchg
jp
or
xor
adc
in
lods
lret
fwait
xchg
test
int
lret
inc
inc
dec
popf
push
jmp
pushf
in
sub
call
les
push
stos
xchg
xchg
sub
adc
data16
or
sbb
les
mov
push
movsb
sub
ljmp
pop
mov
mov
xchg
sub
aas
cmc
scas
inc
movsl
test
fdiv
jle
adc
adc
push
mov
pop
pop
mov
inc
fisttps
jno
rcrl
xchg
cli
cld
imul
fwait
add
jmp
jmp
push
aas
xlat
test
ss
ljmp
pop
jp
xor
xor
cmovg
push
jge
loope
mov
mov
sbb
mov
out
mov
aaa
inc
xchg
push
sub
call
add
mov
rclb
dec
add
dec
mov
pushf
call
and
out
andl
cmp
mov
scas
push
pop
sbb
movsb
scas
outsb
pop
insl
dec
out
les
sbb
cmpsl
inc
dec
repnz
and
add
lods
outsb
movsb
pop
adc
rcr
jp
out
dec
adc
fmul
inc
jp
hlt
mov
adc
and
inc
add
adc
dec
push
xchg
ljmp
jnp
push
or
and
xchg
cmp
lcall
loop
int3
aaa
push
xlat
rcrl
sub
out
cmp
add
repz
lcall
mov
orl
mov
aaa
dec
cmpsb
inc
adc
mov
cmpsb
mov
imul
inc
pop
inc
fwait
pop
sub
ror
notb
aas
sbb
adc
pop
movsb
push
in
sbb
fstpl
repnz
cltd
mov
push
sti
hlt
sub
andl
mov
sbb
daa
out
cmc
add
adc
enter
lods
pop
jnp
mov
xchg
jecxz
and
mov
mov
mov
popf
push
sti
lods
ds
mov
mov
mov
xchg
imull
cmp
out
jbe
fsubl
sbb
inc
iret
out
inc
andl
mov
cmpb
andb
push
fadds
inc
mov
sub
fdecstp
xchg
push
push
push
bswap
pushf
imul
sti
inc
imul
adc
add
test
mov
je
xor
fmulp
inc
or
cld
pop
popa
xor
popf
cmp
xor
dec
out
or
push
push
lcall
lea
cmp
iret
push
sbb
mov
pop
sub
scas
mov
leave
cwtl
lea
divl
faddl
in
sub
orl
fsts
mov
add
mov
mov
nop
pop
fistpl
xchg
adc
adc
jl
or
push
sub
std
fimuls
int
push
cmp
cltd
ss
inc
daa
adc
push
stc
xchg
push
shlb
hlt
fdivrp
cmp
rcr
movsb
xlat
or
xchg
roll
pop
les
mov
or
sbb
push
inc
push
lods
adc
cmpsl
jp
push
cwtl
cwtl
or
jg
imul
out
push
jne
mov
dec
xchg
mov
or
add
imul
xor
cmp
icebp
jo
scas
adc
dec
mov
ja
test
pop
inc
fwait
jg
add
adc
or
gs
mov
jo
mull
jno
in
jl
test
subb
imul
les
mulb
push
popa
lret
pop
out
adc
aam
ret
int
pop
out
inc
ret
dec
js
rolb
sahf
dec
dec
xchg
stos
pop
xchg
in
dec
jno
sbb
lcall
cld
repz
sti
adc
adc
scas
pop
daa
pop
loopne
and
pcmpeqb
setl
and
mov
lock
and
push
daa
lea
dec
mov
cmp
frstor
adc
pusha
lret
inc
ja
lods
jmp
lret
cld
mov
inc
pop
adc
push
mov
inc
shlb
add
dec
or
mov
adc
lret
mov
data16
fs
sub
and
nop
push
loopne
out
push
and
out
jg
jge
cmpl
xchg
push
ja
dec
lods
xor
xor
insb
push
jns
dec
or
popf
cmp
inc
mov
lds
rclb
pusha
ret
clts
push
stos
aad
cs
loope
cmc
int3
js
mov
xchg
sub
sbb
jge
sahf
xor
lods
sub
xor
mov
sahf
jp
icebp
or
push
cmp
enter
test
sahf
cmp
enter
add
push
nop
clc
mov
dec
popa
adc
fldl
insl
add
fcmove
add
push
cmp
mov
pushf
pusha
xor
adc
push
call
popf
jecxz
iret
popf
add
jns
mov
pop
cmp
or
stos
fsubs
divb
adc
aad
orb
cltd
clc
adcb
pop
cmp
sub
fisubl
mov
dec
sti
sahf
fistl
mov
inc
ja
mov
pop
bound
out
loop
xor
cmpl
push
mov
stos
jg
mov
xchg
mov
pop
mov
mov
loope
jmp
arpl
cmp
sub
stos
mov
adc
lods
push
mov
add
repnz
divb
push
inc
std
xchg
pop
out
sub
imul
lcall
mov
sti
test
push
cmpsl
sub
test
in
dec
int
mov
push
lret
pop
nop
fsubrl
das
or
out
push
mov
mov
mov
dec
mov
xchg
int3
push
adc
pop
repnz
and
mov
int3
mov
mov
into
decl
stc
test
xchg
rorl
push
sub
stc
movsb
lock
add
outsl
pop
mov
mov
adc
call
popf
dec
adc
aam
dec
mov
loope
xchg
arpl
mov
filds
stos
je
xor
lret
scas
addl
pop
shl
std
mov
outsl
sbb
cmpb
in
scas
gs
jmp
mov
aaa
dec
xchg
cmpl
insl
cwtl
popf
lods
mov
mov
sub
test
pop
test
mov
aam
pop
mov
inc
test
notb
loopne
jl
gs
rcrb
mov
ss
shufps
mov
cmp
jmp
cmp
jnp
inc
call
rcr
pop
call
cmp
xlat
push
mov
cmp
sbb
dec
shlb
jns
adc
stos
out
dec
sub
mov
mov
inc
into
sbb
vzeroupper
push
push
lods
addl
jp
sbb
adc
js
sbb
mov
aam
rolb
scas
sub
adc
imul
mov
xor
mov
adc
addr16
lahf
push
push
roll
mov
test
aad
iret
add
xor
mov
and
pop
aam
iret
iret
lcall
aas
ja
nop
ds
gs
add
cmpsl
jbe
lcall
cmp
sbb
lret
test
lea
mov
jecxz
out
or
outsb
xor
dec
iret
fs
dec
add
mov
fistps
in
xchg
adc
cmp
pop
scas
es
add
call
shrl
sub
mov
jle
fsubrl
or
xchg
xchg
mov
out
sbb
add
movsb
jbe
in
out
out
push
fadds
xor
sub
dec
les
inc
fwait
xchg
xchg
ss
adc
fisubrs
mov
push
loopne
pop
addr16
pop
pop
mov
and
out
sbb
insb
insl
mov
jb
adc
icebp
sbb
dec
leave
subl
cmc
rclb
xchg
add
adc
cmp
lods
shll
rol
pop
adc
xchg
popa
xchg
or
inc
rorb
popa
dec
gs
inc
fwait
iret
lods
push
pop
push
testb
stos
cmp
ja
aas
inc
push
mov
xor
sbb
test
mov
dec
xchg
ljmp
sbb
cwtl
ret
nop
jg
and
mov
enter
adc
sbb
push
xor
push
insb
call
jp
ljmp
pop
pop
cltd
add
mov
inc
test
lea
mov
mov
jecxz
mov
or
cmpb
xlat
xlat
popf
lea
lret
sub
testl
mov
mov
lock
movsb
xchg
outsl
pop
out
test
outsl
mov
xor
rep
or
addr16
xchg
fists
sbb
mov
cltd
int
cli
jmp
pop
imul
cmp
xchg
inc
inc
loop
sarl
popf
adc
push
pop
mov
js
fistl
cmpsl
dec
imul
cwtl
cmp
cmp
mov
popa
addr16
nop
sarb
je
les
cmp
pop
fwait
shll
adc
inc
cmp
jl
xchg
dec
jo
push
sub
sub
pushf
mov
pop
inc
mov
lret
adc
in
jecxz
pop
pop
je
loope
lock
or
sbb
sub
ja
xchg
mov
ret
jp
push
adc
push
mov
lods
mov
xlat
xchg
or
cmpsb
pop
inc
pop
pusha
int3
sub
dec
mov
and
ret
pop
lret
sbb
shrb
mov
add
arpl
pop
cmp
nop
jmp
push
mov
ja
loope
lret
mov
adc
scas
fiadds
cmpl
test
cmp
iret
sub
shrb
xchg
fildll
lcall
lea
mov
es
aas
xor
ds
cmpsb
mov
aas
iret
mov
repz
inc
cli
lcall
ficoms
frstor
and
add
inc
xchg
aam
mov
loope
adc
lret
cltd
sti
dec
jle
sbb
or
mov
enter
ds
push
sub
mov
pop
adc
fst
dec
popf
mov
pop
pop
or
sub
call
sub
stos
shlb
jbe
scas
iret
aas
mov
cmc
rcrb
pusha
out
mov
cmp
ficoml
test
cmp
ret
sub
fdivs
mov
add
stos
dec
or
fisttpl
cmp
pop
and
out
jns
mov
dec
or
flds
loop
inc
add
xchg
mov
aad
pop
mov
ljmp
jnp
or
loop
pop
mov
flds
mov
xor
into
loope
lds
test
data16
jnp
dec
jg
xchg
out
jmp
mov
mov
mov
mov
mov
dec
pop
adc
xchg
jnp
inc
mov
fstpl
jnp
jecxz
jmp
lret
sbb
test
aas
xchg
sbb
sbb
fisubrs
jno
cld
es
aas
fidivrs
jbe
cs
mulb
push
cwtl
cwtd
xor
imul
std
sbb
and
out
mov
inc
inc
xor
add
xor
xlat
les
outsl
iret
aam
push
jmp
shll
cmp
pop
ljmp
inc
fnstsw
or
jo
je
add
cmpsb
and
test
xor
cmp
mov
in
imul
add
sub
xchg
orl
aam
cltd
mov
fadds
stos
bswap
push
pop
andb
mov
dec
add
test
mov
sbb
out
jg
pop
cmpsb
fisttps
popf
orl
mov
rcll
xchg
push
roll
pop
jmp
or
fimuls
cli
es
inc
fcmovne
sti
sbb
cmp
xor
dec
in
inc
cmpb
in
xor
push
sbb
test
jno
sub
ljmp
repnz
insb
test
in
mov
pop
popf
push
inc
sti
inc
cmpsb
scas
jb
out
aam
fcoml
in
mov
mov
insl
xorb
lcall
je
sub
nop
dec
cmp
xlat
enter
imul
or
pop
push
test
dec
rolb
stos
xor
out
lock
xor
add
daa
xor
cmp
icebp
xor
ret
mov
mov
xorl
mov
sub
push
sub
mov
sub
fbstp
jae
test
dec
sub
jmp
cltd
or
push
push
arpl
push
inc
repnz
leave
sbb
rolb
loope
or
gs
push
ja
add
dec
xor
lahf
inc
fmull
pop
push
jns
repz
nop
sti
dec
and
xchg
addr16
jns
les
ficomps
pop
xor
push
push
sbb
mov
sub
mov
js
pop
cwtl
jno
das
fwait
out
rcr
je
mov
in
ret
cmp
jg
and
jmp
cmp
mov
repz
insl
ss
or
sub
js
pop
xor
dec
xchg
dec
das
lea
sub
rcr
pushf
data16
call
aad
mov
jge
enter
push
sar
dec
cmc
mov
sbb
into
jo
jne
fisttpll
leave
mov
enter
das
iret
push
mov
push
push
fstpl
outsb
jle
stc
popa
dec
mov
push
xchg
lret
rcrb
arpl
sbb
cwtl
xchg
sbb
mov
pop
inc
ja
setnp
imul
fidivrl
enter
mov
testl
outsl
mov
imulb
pop
push
or
mov
imul
addr16
icebp
add
pushl
cmpsl
ret
fsubp
mov
and
add
data16
sub
testl
popa
push
push
loope
cld
adc
push
out
imul
gs
push
aas
filds
scas
cwtl
pop
enter
fsub
iret
sbb
mov
jae
jne
xor
nop
pop
insb
xchg
jnp
cmc
push
mov
ja
aas
xchg
sbb
xchg
mov
ss
add
pop
dec
push
xor
xchg
and
sbb
outsb
test
hlt
jb
cmpsl
addr16
xor
or
cmp
pop
pop
outsl
test
inc
jns
stos
cmp
icebp
sub
testl
scas
mov
call
popl
std
or
dec
fsubl
out
gs
pop
fwait
sti
fimull
cmpsb
xor
xor
fwait
mov
pop
fildl
mov
jb
fisubrl
add
xorl
jg
aas
ficoms
cmp
pop
cmpsb
inc
nop
in
mov
int
out
sbb
xor
inc
pop
faddl
rclb
aaa
cmpsl
xchg
shll
sub
pushf
xchg
xor
cmc
and
outsb
and
je
shll
stos
xchg
inc
push
icebp
push
push
xor
movsb
cli
sbb
xor
push
rorb
and
sarl
test
fnstcw
push
fnsave
push
jecxz
xor
lcall
mov
lock
rolb
into
add
test
pop
out
dec
pcmpgtw
cmp
into
inc
sub
in
inc
dec
cmpsl
inc
imul
in
ret
push
jns
test
sbb
mov
adc
mov
inc
in
rolb
lods
and
mov
test
inc
sahf
mov
dec
out
lea
daa
xchg
pop
or
push
pop
jns
popa
xchg
xor
scas
mov
add
push
sbb
popa
cmp
in
xor
xor
or
popa
cmp
daa
sub
sub
or
pop
shr
dec
call
loop
inc
xchg
sahf
xchg
mov
fists
scas
out
fwait
add
pop
fdivr
sbbb
or
cmp
and
aad
inc
mov
daa
push
sete
push
cmp
scas
dec
push
pop
sub
or
addl
mov
int
mov
ja
ds
jp
arpl
repz
mov
push
jmp
xor
insb
int
mov
stc
mov
push
pop
pusha
sub
sub
loopne
ror
pop
cmp
mov
xor
imul
out
push
dec
fdivrs
push
decl
out
decl
out
xchg
mov
xor
fists
mov
cmp
jns
pop
push
pop
addr16
inc
jmp
popf
subl
jns
popf
cmpsb
push
xor
cld
cwtl
cmp
jg
scas
dec
rcrl
clc
cli
lret
jno
mov
out
mov
cmp
inc
cmp
es
shl
push
adc
sbb
adc
mov
add
fdiv
jnp
xchg
movsb
ret
xchg
test
xchg
mov
pusha
inc
adc
idiv
push
in
sub
idivl
cmc
cmpsb
jecxz
fistpl
mov
clc
les
cmpsb
mov
pusha
std
cmc
push
add
cmp
mov
adc
mov
in
rcr
pop
push
js
pop
push
mov
lea
push
in
cmp
in
push
sti
es
lock
pop
imul
pop
dec
sbb
movsl
cmp
pop
out
lds
or
pop
les
mov
arpl
fwait
inc
sub
scas
imulb
sarb
cmc
movsl
sbb
or
loope
xchg
outsl
nop
lret
aad
xlat
das
dec
loop
push
mov
pop
cmpsb
push
cmp
test
movsb
flds
fstps
and
cmp
lea
ja
lea
push
cmp
std
enter
jge
xor
or
test
je
cltd
add
sub
jo
out
xor
jno
mov
mov
loop
ja
mov
inc
pop
fcomi
hlt
sub
xor
sub
jns
je
ljmp
or
adc
mov
in
sbb
xchg
jecxz
pop
cmp
repnz
mov
std
xlat
movsb
int3
dec
arpl
les
leave
gs
push
pop
clc
adc
arpl
or
sub
sbb
push
dec
loop
scas
pop
and
cwtl
jge
dec
ror
repnz
lahf
dec
pushw
fwait
scas
out
sub
lret
nop
mov
cmpsb
sbb
adc
movsb
fnstenv
push
mov
push
or
or
dec
adc
daa
push
popf
je
popa
test
jbe
pop
mov
inc
lods
jo
sbb
in
sub
mov
out
inc
ret
or
xchg
movsl
sbb
fsubrp
scas
or
mov
pop
insl
jne
scas
mov
subl
jo
adc
in
je
xor
mov
cli
test
data16
xor
or
or
fidivrl
mov
aas
push
stos
aam
out
pop
mov
xchg
lret
jae
cmp
rcrb
fs
pop
push
lret
inc
jecxz
sub
mov
mov
dec
addb
mov
icebp
aam
clc
out
pop
insl
sbb
pop
push
test
mov
ret
jmp
inc
pop
fsubl
out
data16
lods
jmp
sbb
repz
loope
lahf
pop
lret
sub
sbb
mov
sbb
gs
into
pop
jle
rcr
push
jne
xor
push
jp
xchg
sarl
mov
mov
mov
cmpsb
mov
addr16
cmp
jp
sub
jl
imulb
adc
push
lcall
js
data16
jns
and
imul
into
xchg
pop
imul
mov
mov
push
pop
add
inc
rcr
sub
std
aam
sub
mov
lret
mov
pop
mov
jecxz
ret
inc
out
mov
mov
cmp
movsb
div
aaa
xchg
pop
jge
add
or
mov
xchg
pop
out
popa
insl
jmp
in
rcrb
in
lock
or
xchg
sub
xlat
mov
lea
adc
jg
mov
lret
jl
sub
dec
roll
sub
dec
xor
pop
mov
inc
ss
pop
fwait
into
adc
imul
aas
ljmp
dec
aam
sbb
xor
repnz
mov
sub
xchg
xchg
or
mov
cwtl
push
ds
push
stos
je
push
stos
cltd
xchg
es
pop
out
test
mov
aam
mov
loopne
jle
xchg
jp
dec
mov
icebp
sarb
add
jmp
aam
jb
dec
xchg
rolb
insb
or
in
dec
cmp
shlb
sbb
lcall
cwtl
adc
data16
xor
cmp
pop
sbb
fdivrs
cmp
jnp
les
movsb
je
push
and
popa
mov
xor
sub
sub
and
pop
adc
sub
and
icebp
jbe
call
repz
repnz
jae
fldl
pop
insb
cmpsb
mov
lds
add
inc
cmpl
xchg
mov
outsl
cld
sub
lea
mov
rcll
fwait
cmp
mov
mov
addl
inc
mov
pop
test
scas
and
sub
arpl
inc
movsl
mov
aas
pop
xor
and
out
pop
or
push
jecxz
mov
xchg
mov
xor
pop
aad
sbb
pop
movsb
es
pop
popf
stos
cmpb
fucomi
js
jl
movsb
cltd
push
pop
cmpsl
sub
cmc
rclb
mov
popf
push
movsl
ret
sti
insb
out
popf
mov
cli
push
dec
ljmp
fptan
cmpsb
pop
insb
push
movsl
into
pop
mov
ja
scas
pop
ret
fcompl
sbb
dec
repz
jne
orb
cwtl
adc
jg
mov
test
pop
mov
lock
fsubrs
test
pushf
adc
lods
ljmp
ja
push
cmp
in
jecxz
outsb
insl
fnsave
rorb
add
pusha
aaa
mov
cmp
aam
std
clc
mov
and
sar
fistpll
icebp
in
je
sub
and
dec
fwait
clc
lahf
mov
arpl
push
pop
adc
add
xor
iret
xorb
stos
cld
imul
sbb
daa
mov
pop
and
mov
aaa
mov
es
jno
xchg
fs
sub
movsl
push
xor
add
fidivl
xchg
push
pop
adc
lods
pop
aaa
insl
mov
movsl
push
push
fdivs
mov
mov
negb
add
cmp
mov
jne
ja
or
int
add
and
push
mov
stc
pushf
mov
xor
test
sub
popl
andl
test
fcomip
mov
inc
outsb
aam
push
inc
xchg
in
dec
mov
adc
ja
inc
mov
inc
movsl
mov
add
std
adc
int3
sbb
mov
lret
pop
xor
jle
pop
loop
add
xchg
push
out
idiv
push
lcall
fisubrs
jne
scas
sbb
mov
adc
jne
inc
add
sbb
cs
jp
movsl
sub
lods
push
mov
jge
inc
or
sub
add
cli
fsubrl
mov
cs
push
sbb
cltd
std
leave
jne
lods
adc
sub
in
aas
js
fdivl
lock
imul
cmp
jle
insl
ljmp
or
aad
addr16
adc
lock
mov
outsl
call
xchg
mov
leave
sti
movsb
imul
sbb
adc
dec
jg
jb
push
test
ljmp
sbb
loop
jne
sbb
mov
jecxz
lods
xor
lcall
imul
adc
sbb
leave
xor
add
stc
inc
mov
dec
popf
mov
int
mov
jae
sub
xchg
mov
arpl
fildll
imul
les
rorb
or
mov
jl
adc
subl
mov
pop
test
shlb
cmp
in
out
cmpsb
sbb
cmp
cmp
lods
xchg
sahf
out
fwait
dec
sub
push
mov
sbb
sub
xor
outsb
fcmovb
jl
ds
aaa
lds
mov
shl
frstor
and
adc
in
pop
pop
in
push
lods
mov
fldenv
cmp
outsl
and
adc
xchg
loopne
lods
test
add
scas
push
or
cmpb
arpl
insb
in
outsl
xor
xor
dec
adc
es
daa
push
jmp
daa
push
xchg
mov
cli
sub
push
sbb
das
or
cltd
or
pop
sbb
push
subl
out
lods
stos
and
aas
mov
or
adc
xchg
int
ret
lahf
jl
lods
rclb
imul
mov
adc
mov
dec
mov
testb
push
data16
jle
dec
sbb
pop
lds
push
or
mov
mov
das
popa
cmp
loope
mov
jo
sbb
push
jbe
enter
add
xor
inc
lock
cmp
cli
jns
xor
sbb
fcmove
cmp
enter
je
pop
test
mov
fadd
mov
cmpsl
roll
pusha
push
test
push
ja
fstps
popf
adc
mov
test
or
data16
jg
stos
xor
data16
push
inc
dec
lods
mov
flds
insb
scas
inc
ret
sbb
imul
mov
dec
inc
jg
ret
inc
cmpsl
push
jno
call
out
movl
sub
and
leave
adc
jp
jecxz
test
mov
mov
dec
ljmp
xor
divb
loopne
sub
orb
aas
xor
mov
nop
sub
sbb
add
xchg
pop
sub
cmc
mov
pop
inc
lds
pop
or
add
dec
andl
cmp
clc
lea
fldt
xlat
sub
hlt
cmp
nop
scas
or
jo
repnz
lea
movsl
xor
nop
push
mov
push
das
in
jge
into
add
ret
aas
inc
mov
outsb
lret
mov
icebp
aam
pop
push
rorl
jecxz
cmp
push
or
leave
sbb
pop
jnp
ret
mov
cmp
bswap
and
sub
sbb
jl
rcr
fidivrs
jg
lods
mov
cmc
xchg
mov
mov
cmp
and
xchg
adc
lahf
popa
ja
loope
shr
fcmovnbe
stos
mov
adc
stc
push
data16
adc
fdivrp
mov
add
add
mov
mov
push
movsb
std
into
mov
into
sub
shrb
arpl
cmp
insb
mov
cltd
test
data16
cld
out
cld
pop
inc
sbb
mov
add
cmp
test
jecxz
adc
jne
fsubs
std
fcomps
mov
sbb
lahf
sub
ja
lret
push
js
jecxz
and
outsl
mov
ja
and
xor
fbld
test
adc
xchg
loopne
sahf
mov
mov
movl
jmp
push
push
sbb
imull
xchg
adc
loop
xor
mov
jmp
adc
ret
ret
loope
cmp
std
stos
push
fwait
pushf
daa
cmc
xchg
jo
rcrb
enter
inc
mov
pop
sub
mov
lock
lods
cmp
pushw
mov
dec
and
dec
xlat
ret
cmpsb
movsb
push
mov
and
icebp
outsb
in
inc
xlat
imul
jecxz
cmp
pop
iret
int3
int3
inc
xchg
cmp
bnd
inc
xlat
xor
mov
mov
fsubl
push
push
mov
jne
mov
mov
aad
iret
shrl
sti
shlb
cmp
out
shlb
sub
into
stos
int3
xor
jns
aam
lods
addl
arpl
jmp
add
adc
lods
push
jp
pusha
arpl
movsl
sbb
adc
dec
addr16
sbb
aad
sub
leave
stc
stc
push
loop
jle
xchg
lcall
mov
or
xchg
lods
outsl
lahf
add
stos
pop
and
imul
adc
jno
lret
xor
leave
aaa
pop
add
mov
lods
enter
mov
jnp
movsl
or
test
pusha
addr16
dec
mov
cwtl
or
xlat
std
adc
movsb
ret
push
jl
dec
jbe
int
out
jnp
xchg
lds
bnd
out
inc
mov
jg
mov
ja
loope
fadds
sbb
pop
xchg
roll
add
xorl
into
mov
orb
dec
ss
into
mov
loopne
xchg
xlat
adc
xchg
mov
cmpb
and
mov
jae
and
sub
jb
lret
bound
xchg
lcall
inc
mov
pop
mov
cld
jmp
mov
enter
fcmovb
mov
mov
pusha
repnz
out
push
les
and
out
xchg
sbb
imul
fld
pop
popf
xchg
rcrl
fildl
adc
lods
leave
or
loopne
mov
mov
das
icebp
lods
roll
cmp
out
orb
lock
push
adc
mov
pop
mov
sbb
and
xsha256
cmpsb
adc
add
mov
lret
mov
and
xchg
les
xchg
jns
or
cmp
xchg
xchg
ljmp
cmpsb
push
xchg
mov
mov
xchg
pop
sub
jg
fcomip
mov
mov
jno,pn
jno
das
hlt
mov
test
inc
ljmp
shl
dec
addr16
and
insb
lods
in
test
sub
sub
adc
popl
xchg
js
mov
fisubrs
jne
jnp
xchg
out
gs
sti
dec
lds
push
xchg
mov
add
sub
xor
testb
orb
jo
inc
insb
pop
call
testl
sbb
inc
or
sbb
sbb
je
dec
popf
sub
push
mov
ffreep
flds
test
dec
adc
mov
pusha
loop
test
adc
push
scas
adc
enter
ret
adc
inc
sub
and
or
mov
aaa
push
xchg
pop
testb
data16
icebp
push
or
mov
mov
gs
out
loopne
add
cmpsl
rclb
hlt
jmp
inc
addl
jl
test
int
cmp
or
xor
inc
in
fwait
mov
mov
shrl
add
jle
adcb
stos
mov
sub
inc
rclb
push
sahf
xchg
sub
jp
js
movsl
pop
sti
mov
fs
fimuls
neg
mov
movsb
jg
dec
mov
fstpl
loop
push
test
jg
mov
mov
jmp
sti
mov
repz
cmp
or
into
xchg
addb
pushf
cmp
xor
jmp
add
or
push
mov
hlt
in
push
adc
dec
aaa
sub
pslld
mov
outsl
adcl
inc
icebp
jle
sbb
fstpl
mov
fcmovu
popa
inc
add
movsl
pop
and
mov
sub
sbb
mulb
push
jp
ja
repz
fwait
and
ret
decl
jecxz
xor
lds
in
fistpll
xor
jb
lret
dec
jmp
inc
lret
jge
mov
sbb
xor
xchg
mov
xor
insb
int3
addl
and
inc
scas
orb
sbb
insb
pop
mov
dec
int3
sub
cmp
js
in
in
adc
sti
dec
dec
stos
call
fistpl
outsl
sbb
mov
xor
sahf
jns
daa
repz
sbb
mov
sti
loope
xor
nop
dec
fsts
scas
push
push
rolb
jge
movsl
movsb
arpl
ret
xor
adc
xlat
movsb
add
mov
xchg
push
imul
inc
out
movsl
insb
sub
insb
adc
xor
out
je
sub
sarb
xor
or
out
fisubrl
repnz
or
les
and
mov
add
or
pop
mov
in
jmp
xchg
int
and
xor
into
lahf
test
je
iret
push
lods
xchg
lds
mov
ds
and
inc
cwtl
test
test
popf
xchg
fs
aaa
test
movsl
stos
pop
add
adc
cli
sub
std
cmp
adc
mov
dec
and
sub
xchg
and
mov
xor
mov
outsb
lcall
sbb
sarb
cmp
xchg
add
push
cmp
sub
lea
xor
sub
sarl
xchg
sti
fisttps
int3
enter
sub
sbb
idiv
aas
in
aad
dec
mov
test
jmp
sub
sbb
jnp
int3
stos
push
pop
mov
jl
sbb
sbb
dec
xor
jl
loope
jo,pt
sbb
nop
cmpsl
mov
jne
xchg
jmp
inc
js
and
mov
repnz
scas
sbbb
add
test
testl
inc
push
repnz
or
xor
add
push
lahf
lock
cmp
fisttpl
add
jp
jle
mov
aas
arpl
rcll
sub
fidivs
out
sti
outsb
not
xchg
xchg
add
out
inc
cmp
add
pop
xchg
push
loop
out
push
sti
sahf
cwtl
pop
mov
push
push
push
jecxz
fistpl
aas
mov
xor
cli
pop
or
mov
leave
xor
push
mov
cmp
xchg
lea
ss
xchg
stos
mov
cmc
stos
int
xchg
es
in
dec
jmp
or
push
enter
clc
js
xor
jno
add
dec
xchg
or
jbe
cmpsl
arpl
bnd
sbb
xchg
lods
add
adc
js
mov
mov
cmpb
loopne
inc
cs
sub
dec
out
lret
je
jmp
fwait
jecxz
popa
cmc
mov
mov
sti
andb
inc
mov
test
test
xchg
add
or
push
rorb
mov
pop
inc
pop
fdivl
icebp
push
push
mov
in
add
cmp
push
gs
xchg
mov
fisubs
jnp
out
xlat
mov
je
jg
out
push
pop
push
stos
iret
into
mov
outsb
jmp
cmpsb
xchg
add
cltd
xchg
outsb
mov
lret
sbb
fidivrs
push
jns
jmp
xchg
pop
movsl
add
dec
idivl
pop
inc
push
or
repnz
loop
les
adc
mov
jns
mov
push
xlat
imul
in
ljmp
call
ljmp
dec
rolb
mov
or
jb
xor
lcall
sbb
mov
push
mov
xchg
int3
ds
inc
mov
out
movsb
mov
and
inc
hlt
iret
in
xchg
pop
mov
loope
in
js
scas
inc
aas
jge
sub
fists
jecxz
mov
mov
insb
sbb
dec
pop
pusha
mov
xlat
imul
lods
sbb
jns
xor
mov
icebp
cmp
subb
loop
dec
jbe
loope
mov
popf
addr16
add
push
jo
fistps
pop
fstpl
popf
inc
pop
jae
loope
jns
jnp
lock
rorl
shll
cmpsl
mov
cmp
ds
in
stos
pop
mov
xlat
sbb
ficoml
pushf
loope
and
insb
popf
mov
sbb
adc
cmp
push
xorb
jnp
ret
mov
pop
in
cmc
jnp
into
pop
mov
jmp
movsl
push
and
jnp
mov
popa
mov
push
icebp
test
sub
mov
sub
adc
inc
lods
orl
mov
js
sub
insl
hlt
mov
repz
sti
push
xor
pop
scas
jbe
jmp
adc
scas
mov
xchg
mov
sub
dec
and
push
inc
xor
cmc
cmp
sub
mov
sti
or
faddl
mov
imul
mov
daa
mov
add
pusha
outsl
cmp
mov
adc
fdivp
add
pushf
or
jo
cwtl
arpl
jb
loop
pusha
movsb
jno
inc
xor
insb
sub
dec
dec
pushf
movsb
inc
adc
inc
test
orl
lahf
test
lods
add
lock
add
jne
movsb
push
insl
es
test
sub
call
jle
dec
mov
push
xor
out
xlat
mov
adc
push
fistps
jmp
testb
add
add
or
fimuls
stc
and
test
gs
or
and
push
pop
loop
test
aad
or
push
push
test
pop
outsb
mov
pop
xor
jo
pop
loop
int3
mov
icebp
fwait
sbb
pop
rcl
leave
sub
imul
stc
adc
sbb
xlat
shl
test
push
cs
icebp
fbld
je
addr16
outsb
pop
cltd
adc
mov
cmpsl
xor
sbb
js
aam
cmpsl
dec
sahf
dec
cmp
jnp
adc
rep
xchg
ret
add
lea
sti
or
sub
sub
jno
xchg
lock
push
in
jg
sub
cmp
aam
cwtl
fldenv
mov
sub
sub
adc
faddp
adc
rcr
stc
out
ja
mov
daa
mov
ja
cmp
mov
aam
lahf
push
inc
pop
fimull
mov
arpl
das
add
je
call
in
xchg
in
ja
into
dec
and
mov
rcrl
int
dec
popa
fbstp
fwait
push
mov
rcr
xor
sarl
mov
shll
pop
loopne
arpl
repnz
out
pop
mov
in
cmp
push
xchg
dec
test
repnz
add
addr16
cltd
jecxz
xchg
dec
pushl
pop
jne
mov
mov
mov
fstps
jle
mov
bound
jbe
sbb
outsl
jmp
push
cmp
push
imul
loop
xchg
xchg
test
mov
lods
jmp
les
mov
out
mov
xchg
or
or
cmpl
lea
subl
inc
stos
std
addb
push
add
inc
xchg
dec
sbb
fistl
fstpt
jo
sbb
adc
mov
aas
movsl
lds
je
push
cld
addr16
testl
push
cltd
in
scas
int3
fcmovnu
lods
and
outsl
mov
cld
outsl
inc
iret
add
fistl
mov
xor
dec
ss
js
pop
cli
imul
or
push
iret
pop
shrl
in
or
mov
popa
and
iret
sbb
test
push
loop
or
lea
lods
es
ret
fisttps
mov
mov
xchg
push
out
push
ret
loope
jmp
movsl
cmp
fadd
sbb
and
push
clc
xadd
call
in
and
jne
pusha
sub
inc
leave
fistl
stc
mov
or
cmc
cmc
lea
rolb
shll
notb
cmp
mov
ljmp
subb
faddp
xchg
pop
insb
inc
jns
xor
neg
mov
adc
pushf
xchg
pop
mov
dec
mov
jb
shr
mov
jae
xor
imul
push
or
xchg
inc
mov
jae
xchg
sbb
pusha
xlat
fbstp
jmp
sbb
push
imul
sub
push
adc
push
push
push
fsubrl
out
push
std
ja
xchg
hlt
and
insl
adc
mov
mov
cmp
adc
inc
stos
or
mov
leave
out
xlat
icebp
sbb
xor
sbb
mov
xorl
dec
push
mov
pop
push
lcall
ret
sbb
xchg
mov
outsb
dec
mov
movl
pop
pop
push
push
jg
arpl
cs
test
orb
adc
mov
sub
adc
popf
lahf
fxch
cmp
mov
int
adc
jae
mov
xor
mov
in
xchg
pop
adc
jo
imul
push
arpl
mov
mov
es
mov
xchg
jns
push
xchg
xchg
xchg
in
stos
jne
fldl
or
mov
aaa
adc
jns
mov
cmc
and
inc
aad
pusha
cmp
arpl
sbb
icebp
lock
inc
mov
add
sub
and
or
in
dec
mov
lods
in
xchg
clc
pop
pop
int
xchg
mov
lods
mov
stc
or
dec
les
lods
adc
test
or
scas
mov
aaa
dec
arpl
push
lcall
mov
inc
pop
xor
aad
jmp
push
mov
sarl
xchg
pop
push
aam
add
jge
movsb
lret
jae
out
push
mov
cmpsb
movsl
subb
movsl
loop
jl
int3
into
adc
outsl
pushf
cmp
pop
cld
or
push
mov
cmpsb
subb
mov
in
repnz
lods
js
jae
mov
test
pop
mov
sbb
sbb
daa
push
aad
ja
sbb
or
test
xchg
mov
in
les
push
pop
jecxz
jp
xchg
repnz
imul
fisttpl
movl
fwait
test
push
out
cmc
nop
and
rclb
pop
ja
or
das
push
cmpsb
adc
insb
dec
push
int
test
insb
push
or
stos
psrld
cmp
in
mov
int3
push
push
or
mov
in
pop
pop
lea
sbb
fwait
cs
jb
jbe
lea
sti
pushf
push
pushf
adc
mov
int
dec
dec
mov
lods
mov
bound
adc
pop
cmp
mov
lret
ss
mov
sub
repz
mov
push
mov
sub
push
repz
lods
xchg
adc
cmp
lcall
cld
out
and
pop
sahf
es
insb
inc
nop
cmp
mov
pop
scas
fisttpl
out
jmp
sub
scas
push
sbb
dec
incl
call
push
push
ret
jne
add
daa
pop
push
push
inc
shlb
faddp
jnp
test
pusha
inc
cmp
hlt
add
aam
fldenv
outsb
call
add
push
je
mov
cld
cmp
iret
sbb
int3
into
sbbw
mov
mov
in
insb
out
test
mov
in
cmp
inc
popa
or
call
stos
xchg
or
inc
or
out
add
cmpb
sti
inc
mov
clc
add
add
je
ss
cmp
out
outsb
ret
adc
pop
xor
sub
cmp
mov
popl
jp
mov
test
add
fsubr
lcall
insb
add
sub
int
jns
jp
out
pop
out
push
adc
inc
sub
adcb
dec
push
jno
pop
xchg
mov
sysenter
or
cltd
jl
subb
inc
mov
cmp
push
pop
sub
test
mov
lods
testl
popa
cwtl
ficoml
mov
lea
lret
and
push
mov
inc
bound
andb
lret
outsb
popa
test
push
cld
pop
push
adc
xorl
lea
cli
mov
dec
mov
xor
jo
out
pop
in
cs
setno
scas
pop
mov
add
mov
sbb
sbb
testb
add
push
mov
loope
sub
dec
adc
ret
loop
sbb
mov
push
pop
es
enter
pop
inc
lock
scas
out
outsl
adc
mov
out
addr16
pop
mov
aas
dec
rcr
imul
jb
repnz
cmc
cli
int
popa
gs
in
push
arpl
lret
adc
test
leave
out
xor
rorb
jbe
push
out
add
jae
sub
cmp
shll
xor
jle
gs
lock
xlat
nop
repz
jno
shl
jbe
cmp
lds
cmpb
out
fiaddl
push
cmp
sub
jne
pop
and
adc
outsb
shrb
dec
cmp
xor
lahf
and
into
out
arpl
pop
dec
outsl
jl
sub
cltd
mov
jecxz
insb
pusha
nop
and
jns
xor
push
or
push
xchg
xchg
xchg
outsl
jne
add
cmp
outsl
pop
mov
push
in
pushf
incl
hlt
xchg
xor
test
jo
stos
outsb
aam
cmc
ja
aas
sbb
arpl
cmp
push
repnz
rolb
fisubl
dec
test
xchg
fnsave
movsl
into
leave
imul
mov
fdivrs
adc
cmp
cltd
aas
pop
push
inc
or
xor
xchg
mov
push
sub
sub
cmp
jae
out
test
in
test
cmpl
push
popa
dec
int
mov
nop
xchg
cmp
imul
cltd
dec
dec
lea
in
gs
xchg
sbb
orb
or
notl
sub
dec
sub
adcl
pushf
stos
mov
scas
and
sbb
mov
push
scas
std
xlat
pop
add
jns
aam
fnstenv
push
movsb
cmp
dec
cmp
insb
jo
cmp
fwait
mov
adc
cli
mov
lods
or
adc
add
les
pushf
cmp
cmp
add
rolb
add
add
jb
jp
xorb
aaa
xchg
aaa
