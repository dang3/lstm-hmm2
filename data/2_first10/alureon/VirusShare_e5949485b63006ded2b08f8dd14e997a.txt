push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
push
mov
sub
mov
push
push
push
push
mov
movl
call
andl
movl
mov
movl
mov
mov
movl
mov
mov
mov
mov
mov
imul
xor
add
incl
mov
push
push
mov
call
mov
mov
mov
mov
mov
xor
mov
div
mov
mov
mov
mov
sub
not
add
xor
mov
mov
incl
add
cmpl
jb
cmpl
je
mov
mov
jmp
push
call
mov
mov
mov
xor
push
push
push
push
call
movl
mov
push
shl
push
add
incl
push
push
call
mov
mov
test
je
push
call
mov
push
push
call
mov
call
add
cmpl
je
cmpl
jne
lea
push
push
pop
add
xor
div
push
pushl
push
call
mov
push
push
push
push
call
lea
mov
lea
add
lea
add
mov
mov
mov
mov
and
call
mov
mov
mov
call
mov
mov
push
push
mov
xor
push
push
mov
mov
call
mov
lea
push
push
push
lea
push
pushl
movb
pushl
movb
push
call
push
push
push
call
mov
call
mov
call
test
je
pushl
mov
pushl
pushl
pushl
call
cmpl
mov
jne
push
call
test
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
mov
push
mov
sub
mov
push
mov
push
push
lea
mov
call
lea
xor
call
test
je
test
je
cmpb
je
mov
push
call
mov
push
mov
call
mov
lea
push
call
mov
test
je
push
push
push
push
call
add
push
call
test
je
push
push
push
call
mov
test
jge
push
push
push
call
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
call
mov
mov
pop
pop
pop
call
leave
ret
push
mov
push
push
mov
imul
push
mov
cmp
jb
mov
push
call
mov
add
imul
push
xor
pop
div
mov
mov
mov
mov
sub
mov
test
je
mov
sub
push
mov
call
xor
divl
mov
add
cmp
jae
mov
mov
imul
xor
divl
xor
mov
sub
imul
div
mov
cmp
jae
mov
sub
push
pushl
pushl
call
add
add
add
add
cmpl
jne
pop
pop
pop
leave
ret
mov
mov
ret
push
mov
sub
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
jne
inc
jmp
andl
push
push
lea
lea
cmpl
mov
je
mov
jmp
mov
mov
add
xor
nop
movb
mov
mov
inc
cmp
jb
mov
test
je
lea
movsbw
mov
add
inc
mov
test
jne
lea
push
call
mov
test
je
mov
add
andl
cmpl
je
mov
mov
mov
test
jns
and
jmp
add
add
push
pushl
call
mov
test
je
incl
mov
lea
cmpl
jne
mov
incl
mov
imul
add
lea
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
push
mov
testl
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
pop
ret
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
test
je
andl
mov
sub
add
mov
mov
mov
lea
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
cmpl
mov
je
or
sub
mov
mov
sub
add
mov
mov
mov
lea
push
push
push
call
mov
mov
mov
sub
add
mov
movzwl
add
lea
movzwl
lea
mov
mov
mov
andl
xor
cmp
jae
lea
mov
mov
addl
push
lea
pop
rep
mov
add
movzwl
add
incl
cmp
jb
mov
mov
add
pop
mov
xor
pop
inc
pop
leave
ret
mov
push
mov
push
mov
xor
mov
test
movl
je
push
call
pushl
call
mov
xor
inc
pop
pop
ret
mov
mov
mov
mov
rol
imul
add
mov
mov
mov
ret
push
lea
sub
mov
push
push
push
push
push
push
mov
call
push
push
call
test
je
push
xor
push
call
push
mov
call
mov
cmp
je
lea
push
push
call
mov
mov
mov
mov
push
push
mov
call
cmp
jne
movl
push
push
call
push
push
mov
call
xor
cmp
setl
mov
mov
cmp
mov
je
mov
cltd
sub
sar
mov
push
push
call
mov
neg
sbb
and
add
push
mov
call
push
mov
call
movzwl
push
call
pop
pop
push
push
push
call
push
push
push
call
push
push
lea
push
call
lea
push
call
mov
mov
mov
movzwl
xor
jmp
cmp
jne
cmpw
je
inc
inc
mov
cmp
jne
jmp
xor
inc
lea
push
movl
movl
call
mov
push
pushl
call
push
push
push
push
push
pushl
mov
call
cmp
mov
mov
jne
xor
push
pop
lea
rep
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
movl
movl
movl
mov
movl
movl
call
test
je
mov
push
mov
imul
cltd
pop
idiv
push
push
mov
mov
add
mov
lea
mov
mov
shl
mov
lea
push
call
mov
mov
sub
sub
mov
cmp
mov
mov
jle
mov
push
pushl
neg
push
push
pushl
sbb
push
push
push
and
add
push
push
push
push
call
cmp
mov
je
lea
push
call
push
push
push
pushl
call
test
jne
call
xor
jmp
call
pushl
call
pushl
pushl
call
pushl
call
push
pushl
call
mov
xor
cmp
sete
push
call
cmp
je
call
cmpl
je
cmpl
je
push
push
push
pushl
call
xor
inc
pop
pop
pop
add
leave
ret
push
call
pop
ret
mov
push
mov
sub
mov
push
push
push
mov
mov
mov
push
mov
lea
push
pushl
pushl
call
lea
xor
test
je
push
push
push
call
add
test
je
push
add
push
call
inc
pop
add
cmp
pop
mov
jl
mov
mov
pop
pop
mov
pop
call
leave
ret
push
mov
mov
mov
mov
mov
mov
cmp
jb
push
push
mov
mov
mov
lea
xor
test
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
mov
mov
lea
ror
lea
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
mov
inc
cmp
jb
pop
pop
pop
ret
mov
push
mov
xor
cmp
jne
mov
jmp
mov
push
mov
mov
test
je
mov
inc
inc
decl
jne
cmpl
pop
jne
dec
mov
movb
pop
ret
jmp
mov
push
mov
push
mov
test
je
push
mov
test
je
andl
push
call
push
call
push
call
test
je
push
call
push
call
mov
push
call
push
call
pop
pop
pop
ret
jmp
push
mov
sub
mov
mov
mov
sub
mov
je
mov
test
je
push
mov
add
test
je
push
push
mov
sub
mov
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
addl
decl
jne
mov
test
jne
pop
pop
pop
xor
inc
leave
ret
push
mov
sub
push
push
mov
xor
cmp
je
mov
cmp
je
cmp
je
cmp
je
add
push
lea
push
push
call
mov
add
add
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
sub
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
mov
mov
lea
ror
mov
lea
add
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
cmp
jb
mov
mov
test
je
mov
sub
mov
mov
inc
dec
jne
pushl
mov
pushl
pushl
pushl
pushl
call
mov
mov
mov
call
mov
add
push
pushl
pushl
pushl
call
add
pop
jmp
xor
pop
pop
leave
ret
mov
push
xor
cmp
je
cmp
push
mov
je
push
call
jmp
push
push
push
pushl
call
push
push
push
pushl
call
push
push
push
pushl
call
pop
pop
ret
push
mov
sub
push
lea
push
push
movb
call
lea
push
call
add
cmpb
jne
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
mov
jmp
mov
leave
ret
add
cmpsb
inc
mov
jle
aad
push
or
xchg
addb
adc
xor
adc
inc
jne
iret
push
xor
aad
ret
aam
stos
sub
loopne
loope
imul
and
dec
pop
stos
or
leave
pop
sub
fists
popf
out
jne
cmp
fsubrp
fisttpl
enter
mov
jno
int3
ret
sti
negl
mov
lods
mov
jo
jg
cmp
lahf
insb
fdivrl
xchg
fabs
dec
dec
loop
pop
outsl
lcall
push
mov
add
notl
add
add
cmp
insb
jl
mov
cmp
movsb
pop
js
adc
mov
mov
cmp
adc
push
pop
mov
aam
into
in
cmp
xchg
pusha
pushl
andb
js
pop
mov
push
and
ja
xchg
in
and
aam
mov
mov
dec
test
push
inc
cltd
mov
mov
mov
or
mov
adcl
test
mov
add
dec
mov
cmp
enter
leave
clts
nop
dec
cmp
jne
jle
sbb
idiv
pushf
addb
mov
xchg
repnz
lret
nop
loopne
jmp
shll
push
sti
or
fistpll
cltd
pop
push
or
mov
push
iret
push
out
push
mov
sub
aad
mov
xchg
cmp
dec
sub
pusha
fs
and
repz
push
bound
into
les
and
dec
test
lods
mov
add
add
push
out
jnp
mov
leave
mov
clc
or
cmp
jmp
aam
hlt
cmp
jmp
subl
lods
adcb
adc
rcll
inc
scas
cmc
inc
jne
push
gs
bound
and
xchg
xlat
scas
inc
and
or
or
inc
jb
xchg
xchg
lret
add
add
cli
sarb
pop
sysenter
mov
or
sbb
lea
xchg
pushf
jmp
xorb
movsl
adc
adc
cmp
push
test
hlt
xchg
leave
dec
adc
cltd
mov
cltd
lods
cmp
pop
outsb
std
mov
or
jle
into
xchg
adc
jle
adc
and
es
mov
adc
jnp
cmpsl
test
push
out
pop
add
sub
out
insb
pop
hlt
or
add
add
add
mov
mov
xchg
imul
sub
jo
stos
mov
cmp
je
mov
cmp
mov
adc
xor
ljmp
jecxz
shlb
or
mov
mov
pop
push
xor
pop
jb
testb
add
jnp
lcall
mov
loop
repnz
in
out
rorl
and
pop
cltd
stc
xlat
sub
jbe
sub
sbbb
int
mov
sbb
sarl
mov
hlt
cli
test
sbb
cld
sbb
xchg
adc
inc
arpl
jnp
or
or
outsl
jnp
std
or
repnz
cltd
pmovmskb
pushf
lret
popf
mov
inc
sbb
mov
cmc
sbb
add
ret
xchg
xchg
repz
sbb
add
bound
pusha
ljmp
stos
fs
hlt
add
pop
xchg
and
dec
mov
pop
or
adc
andb
ret
dec
scas
dec
lcall
dec
sub
divl
lock
repz
inc
jecxz
mov
lahf
rclb
add
shll
cwtl
dec
cs
add
add
jns
aad
sahf
xor
lret
mov
hlt
sbb
jo
add
push
inc
dec
in
jl
pop
and
pop
push
add
insb
daa
add
add
and
xchg
push
test
cmpsb
in
in
fcmovnbe
test
popa
inc
cmp
test
outsb
mov
mov
cwtl
movsl
sub
ret
aad
pop
pop
das
and
inc
cmp
idivb
jae
inc
lahf
add
jno
push
or
dec
jge
mov
jge
jecxz
call
add
or
cmp
out
stos
xor
inc
popf
xor
pushf
faddl
imul
scas
dec
sti
add
hlt
xor
inc
and
mov
add
dec
push
push
imul
add
mov
sub
xor
nop
mov
cmc
jle
jp
dec
pop
test
sahf
push
jge
bound
in
mov
lods
mov
sbb
test
mov
jecxz
mov
inc
xor
leave
push
movsl
sub
mov
mov
std
or
movsl
sub
xchg
xchg
idivl
mov
stos
mov
cmp
fistps
sbb
xchg
lcall
insl
das
pop
scas
mov
insb
enter
jp
mov
mov
mull
inc
sbb
add
or
shl
data16
sub
out
push
push
cmpb
out
leave
mov
cltd
and
pop
sbb
adc
xchg
inc
call
sbb
dec
inc
mov
fwait
pop
mov
nop
cmp
xchg
imul
fcomps
push
cmp
inc
adc
daa
stos
dec
out
sbb
rorb
xchg
pop
or
testl
mov
add
lock
mov
add
movsl
mov
xchg
inc
xchg
outsl
aas
cmp
std
inc
insb
insb
int
rcl
jg
xchg
bound
add
sbb
jge
lcall
xchg
les
outsl
lock
aas
and
xlat
test
xchg
movsb
jl
or
sbbl
jb
in
in
push
stc
mov
mov
inc
aaa
das
orl
push
jecxz
mov
sbbb
scas
push
dec
sbb
lret
push
mov
add
int3
bswap
or
cmpsl
out
mov
out
cltd
jbe
cmp
xor
or
jecxz
push
cs
sbb
lods
inc
jnp,pt
mov
xchg
aas
pop
andb
lods
mov
xchg
gs
fsubl
pushf
sbb
mov
pop
clc
das
pop
sbb
dec
outsl
xor
fneni(8087
data16
fimuls
dec
add
mov
fwait
or
arpl
stos
sub
popa
sbb
jmp
cld
testb
pushf
push
or
data16
outsb
inc
icebp
pop
mov
outsb
test
mov
inc
mov
push
sbb
xor
aas
and
les
repnz
nop
sbb
mov
test
ds
int
enter
cmp
inc
or
push
adc
and
pop
out
ret
shll
movsl
lret
lods
mov
add
add
push
sbb
xchg
adc
inc
jmp
scas
ret
ljmp
xchg
aaa
icebp
or
ljmp
imul
mov
jo
jl
and
in
or
dec
push
shrl
nop
fisttpl
mov
mov
imul
xlat
adc
sub
loope
xchg
cmovo
repnz
mov
mov
daa
fwait
imul
add
enter
pop
adc
leave
xchg
inc
dec
push
dec
adcl
lcall
mov
shll
cmp
call
mov
fnstenv
cs
jb
gs
je
jge
add
jmp
aas
cmpb
loop
movsb
dec
cwtl
and
add
mov
cmp
xor
stc
pop
lahf
scas
or
add
lahf
xchg
cmp
fwait
scas
aam
loope
push
imul
xlat
movsb
ja
mov
neg
in
shl
mov
fwait
and
add
mov
stos
jb
rol
mov
dec
xchg
in
mov
jne
jle
cmp
outsb
push
ljmp
lock
xor
adc
cmc
idivl
orb
int3
icebp
sbb
pop
lret
es
dec
cmp
lcall
loopne
add
or
mov
and
cmp
add
call
dec
mov
add
stos
cmpsb
jp
loopne
mov
rcr
lea
cmp
inc
mov
clc
movsb
jns
push
in
sub
inc
mov
and
dec
out
data16
lahf
arpl
lahf
frstor
lret
das
out
fdivrp
out
push
inc
xchg
lahf
add
xchg
jp
sarl
lret
sbb
jmp
mov
sub
mov
les
push
mov
test
inc
rcll
mov
adc
mov
mov
jne
jno
mov
mov
lods
pusha
flds
cmp
inc
aam
push
sbb
loopne
rcrb
repnz
or
lods
push
add
or
dec
add
add
sub
js
cmpsl
ds
mov
push
jbe
adc
inc
push
fs
iret
sub
jge
mov
repz
in
cmp
lret
mov
outsl
sub
mov
jle
or
xchg
sub
push
xchg
rcl
rcrl
ror
test
ljmp
or
lds
sbb
sbb
movl
popa
pop
adc
cmp
and
add
rorl
jmp
repnz
pushf
cltd
mov
adc
or
movsb
in
and
aad
mov
je
popa
jns
nop
mov
outsl
stc
mov
sbb
cmpsl
aam
mov
and
icebp
mov
orb
pop
shrl
push
out
iret
nop
and
sbb
mov
push
xor
mov
adc
push
icebp
in
rclb
adc
mov
cwtl
stos
push
daa
dec
enter
add
lds
enter
loope
test
and
insl
movsb
gs
push
rcrb
inc
adc
dec
jb
addr16
pop
in
arpl
push
pop
test
pop
add
div
leave
add
imul
push
cmp
pop
dec
andl
ljmp
lret
lahf
addr16
addl
repz
dec
rolb
aad
mov
add
icebp
out
jns
mov
scas
aaa
rolb
lahf
push
fwait
inc
jl
hlt
or
mov
pop
sarb
ret
jmp
pop
pusha
aad
cli
movsb
mov
fstpl
sub
cmc
or
stos
xor
in
sbb
shl
hlt
mov
out
insl
mov
rcrb
aas
cld
xchg
pop
inc
jp
lcall
add
shl
adc
pushf
add
dec
lret
int
aam
xchg
dec
repz
jge
dec
dec
cmp
sbbb
push
fcom
rclb
pop
ja
stos
inc
or
je
loop
add
mov
loopne
xchg
lahf
jecxz
jnp
push
pusha
dec
sbbl
add
aam
js
movsb
pop
fstps
add
add
jo
pushf
lret
sbb
pop
or
mov
pop
jle
add
add
cltd
jae
or
fbld
mov
inc
pop
jno
mov
or
push
subb
pop
jmp
xor
pushf
and
loopne
enter
out
mov
xchg
in
push
pop
jo
das
imul
jo
xor
cmpsl
int
movsbl
js
and
sub
out
addr16
xorl
inc
fs
loopne
loop
andl
sub
or
add
sub
xchg
paddw
pusha
cld
popa
lcall
dec
loop
lods
lods
loope
aad
xchg
push
negl
add
enter
daa
or
mov
gs
outsl
popa
adc
cmp
mov
aaa
push
and
add
fcmove
jno
jmp
popa
ljmp
fwait
xorl
cmp
lret
lcall
sbb
lods
sbb
in
lea
adcb
scas
in
repz
xchg
mov
jb
es
push
mov
mov
pop
stos
cltd
ret
push
stos
push
lcall
xchg
xchg
adc
fcoml
add
push
add
das
les
xchg
mov
lcall
int
pop
cmp
mov
fisttpl
sub
sub
inc
lock
lcall
or
pop
adc
mov
add
add
mov
daa
push
gs
fwait
movsb
jmp
out
arpl
mov
mov
mov
sbb
and
iret
jp
xor
ja
mov
pop
or
enter
push
fdivrs
xchg
adc
cs
cmp
lds
sub
shll
cmpsb
leave
hlt
fcmovu
in
pop
rorb
shlb
adc
imul
xchg
inc
shrb
or
xor
enter
clc
fisttpll
out
popa
js
add
add
icebp
dec
pop
push
outsb
ljmp
jge
das
or
punpckhbw
xor
adc
xor
cmpl
sbb
cmp
mov
in
or
mov
cwtl
ret
fcomps
inc
cmp
sbbl
mov
es
ss
lds
cmpsb
es
dec
push
push
sar
xchg
das
xchg
push
dec
pop
mov
or
sarl
inc
mov
fistl
add
add
mull
shlb
addr16
pop
sub
push
jb
push
subb
mov
inc
jge
cmp
pop
push
sahf
sub
sub
dec
adc
add
sarb
cmpsl
dec
jno
fmul
sbb
push
clc
xor
pop
aas
leave
dec
roll
sub
out
push
fwait
lret
cmpsl
inc
pop
inc
rorb
jb
cmp
sub
loop
icebp
andl
jb
scas
movsl
in
popa
xor
scas
shrl
or
repz
jecxz
push
sub
add
push
mov
dec
aad
out
insb
and
ss
ret
mov
sub
sub
outsb
outsb
fstps
enter
push
cmp
pop
xchg
push
in
cs
xor
and
mov
xor
ds
or
lcall
and
jle
xchg
mov
rcl
es
cld
ret
adc
pop
sbb
or
stc
mov
xchg
gs
cmp
jp
mov
pop
notb
and
add
mov
outsb
mov
add
add
mov
sbb
sub
sub
das
cmc
or
pop
cs
fwait
cmp
lret
pop
movl
out
lds
out
adc
mov
scas
or
cmp
push
push
inc
xlat
cltd
add
pop
mov
test
or
jb
jb
shll
mov
imul
loop
das
mov
out
imul
cmp
lock
lcall
jns
add
movsl
pop
jnp
out
hlt
into
ds
push
adc
push
adc
popf
dec
ret
mov
sbb
adc
fdivp
mov
loop
push
pop
and
jb
xchg
add
hlt
fsubrl
leave
mov
scas
fisttpll
add
and
fucomi
fwait
in
call
in
mov
lahf
or
dec
pop
lds
jo
incb
lods
nop
add
sub
lahf
jg
adc
ljmp
jg
cs
rclb
inc
es
shlb
std
mov
xchg
cwtl
cmp
mov
nop
adc
test
or
lahf
jo
fprem1
pushf
frstor
dec
mov
ret
lock
cmp
mov
inc
mov
pop
hlt
xchg
dec
adc
in
lret
mov
add
jno
dec
adc
mov
pop
or
pop
nop
push
das
pop
fs
xchg
pop
ret
dec
pop
and
mov
jnp
push
out
cmpsl
bound
push
ljmp
mov
or
mov
xor
in
cmpsl
shrb
imul
cmp
outsb
xchg
cmpsb
add
ljmp
hlt
ds
je
fadds
frstor
dec
inc
mov
mov
int3
pop
dec
shll
sub
lcall
fcomps
test
out
or
enter
sub
nop
into
insl
mov
lea
aam
loope
fsubl
pop
inc
inc
jle
mov
popf
or
or
sub
pusha
sbb
out
or
aam
push
dec
pop
dec
dec
cmp
mov
jle
das
fcmovu
adc
int
sbb
cltd
gs
mov
dec
scas
pop
cmpsb
pop
aaa
xchg
popf
fsubs
sbb
add
mov
mov
pop
sbb
sub
hlt
dec
adc
mov
popa
mov
add
repz
inc
mov
cmp
and
in
xchg
xchg
shrb
mov
mov
and
inc
clc
sub
cmp
jnp
xchg
movsl
stc
add
jle
adc
jo
movsl
sbb
enter
stos
lcall
repz
add
add
sub
test
mov
fld
dec
mov
inc
adc
or
cltd
test
add
adc
mov
jne
mov
mov
stc
fisttpll
aaa
imul
pop
mov
jmp
enter
ljmp
inc
sub
cmp
hlt
ficoml
sub
movsb
adc
mov
hlt
add
add
xchg
mov
jb
inc
movsb
sub
push
imul
mov
dec
outsb
inc
jbe
fisttpll
lods
adc
js
lret
inc
dec
lea
call
or
xchg
leave
pop
pushf
inc
icebp
push
mov
inc
mov
add
inc
mov
or
adc
sahf
cli
arpl
xor
mov
dec
ja
inc
popa
bound
inc
jle
sbb
xchg
xor
inc
bound
rclb
mov
andl
push
or
cmpsb
inc
ss
dec
dec
mov
pop
inc
idivl
cmpsb
lret
dec
iret
daa
dec
xchg
or
pop
pop
xchg
or
push
push
inc
sbb
hlt
call
outsl
fsubrl
xor
rorl
pop
out
es
fldenv
lcall
push
pop
ss
or
sarl
repnz
add
sub
inc
out
cmpb
xor
jecxz
scas
or
jae
mov
aas
and
adc
add
cmp
xlat
mov
jmp
fstsw
das
js
cli
loope
cmp
push
sbb
ljmp
push
mov
add
sti
insl
add
in
push
out
cld
mov
test
dec
cmpsb
out
jae
pop
cltd
data16
add
add
dec
dec
rcrb
sahf
lods
mov
mov
hlt
in
cmpsb
mov
gs
lea
iret
notb
push
or
xorb
xlat
xchg
insb
fcompl
cmp
dec
ficomps
xor
rcll
bound
leave
mov
imul
dec
pop
push
sbb
push
ret
mov
imul
dec
and
imul
and
leave
int3
jns
lea
xor
inc
jecxz
cmpsl
cmp
popa
int
add
test
sub
insb
cmp
icebp
jmp
jp
xchg
insl
loope
cmc
mov
push
ret
out
mov
scas
mov
mov
outsl
jle
inc
outsl
mov
fldl
sbb
test
mov
rclb
ret
jmp
out
imul
xor
cli
dec
ds
push
mov
xlat
pop
jae
insb
shlb
xor
pop
jne
cmp
shr
cmc
stos
add
xchg
fildll
mov
inc
add
jbe
mov
scas
jnp
ret
pop
out
cmpsl
adc
and
mov
cwtl
cwtl
and
movsl
pop
inc
sahf
gs
cwtl
dec
fisubl
xchg
test
add
test
hlt
dec
sub
push
popl
push
in
push
out
test
xor
dec
out
add
movhps
add
dec
add
mov
mov
aaa
push
lds
lods
lods
lcall
mov
lcall
fisubrl
fnsave
les
inc
cmpsb
jno
pop
out
test
rclb
sbb
fimuls
scas
sbb
fwait
out
sti
xchg
js
movsb
pop
aad
les
aaa
lret
sub
das
out
cli
xlat
cmp
and
push
mov
fwait
jne
add
cmp
sbb
jnp
popf
imul
aaa
mov
pop
mull
dec
jnp
mov
or
add
inc
xor
loopne
adc
jo
int3
repnz
mov
outsb
jle
ret
fdivr
mov
in
daa
pop
jmp
adcl
push
out
leave
pusha
mov
and
mov
cmp
or
adc
mov
mov
hlt
pusha
add
push
stos
arpl
nop
cmc
loope
cmp
sub
cmc
cmp
inc
insb
pop
sub
mov
push
jns
ljmp
xchg
lret
or
sub
xorl
lfs
test
and
cmpsb
dec
xchg
std
ljmp
sbb
lahf
pop
push
dec
add
daa
inc
ja
cwtl
shlb
aad
sbb
cmp
or
in
push
incb
inc
pop
xchg
test
sbb
int3
xor
jmp
jmp
adc
stos
hlt
push
loopne
pop
scas
iret
enter
outsb
mov
dec
mov
insb
pop
in
mov
push
inc
inc
jo
into
lock
jecxz
push
add
sbb
xchg
movsb
mov
cltd
pop
mov
sub
pop
mov
into
out
add
into
call
or
push
jl
jmp
xor
test
pop
movb
add
outsl
push
cmp
push
sahf
mov
push
cmp
push
jb
mov
ja
or
insb
xchg
xor
adc
lods
or
rolb
mov
jge
cmp
pop
pushf
nop
and
repnz
sbb
cmpsl
mov
push
loop
pop
dec
outsb
cmp
fidivs
icebp
sub
xchg
cwtl
fdivr
insb
dec
adc
xor
mov
xor
call
arpl
add
in
imul
sahf
mov
icebp
inc
add
inc
push
pop
fcmovnbe
push
cmp
cmp
das
pop
fldl
push
pop
fists
hlt
out
nop
push
adc
lcall
xchg
push
cmp
movsb
cs
popf
bound
mov
pop
jae
cmp
fstl
xor
add
fcomps
xlat
fisttps
xor
xchg
adc
xor
jno
sub
add
add
sub
fwait
lret
sub
lret
dec
xor
nop
sub
ss
fimuls
sub
cld
mov
ror
mov
ret
mov
xchg
hlt
mov
inc
icebp
addr16
mov
jbe
ret
jo
int
outsb
out
fiadds
push
imul
mov
mov
sbb
inc
dec
mov
pop
and
sbb
xor
xchg
or
mov
popa
xor
mov
pop
dec
sbb
dec
add
cwtl
mov
mov
clc
test
sub
fidivs
add
inc
stos
lds
in
fsubs
jnp
pop
add
xchg
dec
icebp
and
mov
jno
and
cmp
mov
sub
bswap
sbb
xor
push
xchg
sbb
pop
lret
cmp
out
mov
sub
cs
inc
repz
mov
mov
mov
mov
push
inc
imul
push
loop
mov
fisubrs
pop
orl
dec
ret
in
mov
leave
sbb
not
fldcw
daa
aas
ret
cmp
pop
mov
push
lret
pop
sbb
stc
sbb
mov
jbe
shll
jnp
inc
xlat
xchg
out
into
cmp
test
ret
movsl
mov
add
lcall
clc
xlat
insb
iret
add
push
or
xor
mov
dec
mov
sub
fmull
out
sbbb
push
fdiv
jo
xor
and
pushl
sbb
sahf
xchg
out
test
or
jae
pop
and
mov
lds
stos
pop
movsl
push
and
out
inc
movsl
gs
mov
mov
data16
dec
inc
je
stc
jae
outsb
sub
icebp
adc
out
cmp
mov
cmp
add
jo
pusha
adcl
jns
mov
fsts
pop
pop
fs
or
cwtl
inc
cmpsb
aam
je
and
jnp
dec
cwtl
xchg
mov
lret
repz
jns
sbb
or
mov
pop
xor
in
pop
pop
es
movsb
out
ja
sbb
fisubl
lcall
ja
outsb
lods
mov
lea
int
hlt
lret
sub
pop
movsl
adc
add
movsl
xorb
lods
dec
pop
decl
ja
aam
imul
xchg
sub
mov
adc
jne
and
push
push
daa
insb
pusha
xchg
cmc
shl
xor
ffreep
bound
scas
and
int3
dec
pop
outsl
imull
inc
cmp
enter
push
jmp
sbb
ss
insl
fstp
imul
loopne
cltd
pop
mov
xchg
mov
xchg
mov
cmpsl
mov
add
add
push
cmp
mov
addr16
xchg
push
jecxz
lahf
mov
sbb
mov
or
and
outsb
xchg
mov
cmp
push
ds
sbb
add
adc
mov
outsb
add
idivb
mov
pop
repz
or
dec
mov
and
popa
jmp
cmc
fcmovnu
xchg
out
inc
scas
jl
add
add
add
jnp
lahf
push
or
push
push
sahf
call
out
fs
adc
xor
in
outsb
scas
adc
push
les
push
std
mov
repnz
shl
mov
sbb
stos
push
xchg
into
sbb
sbb
mov
lahf
mov
call
xor
jo
int3
out
push
and
xchg
test
and
and
scas
mov
cli
das
dec
jp
popl
fmuls
popf
cwtl
pop
inc
in
add
add
fldenv
pop
jae
jns
cld
pop
fidivl
sub
dec
cmp
ss
lret
punpckhbw
out
jmp
mov
and
clc
and
inc
fs
mov
and
sub
enter
add
outsl
mov
stos
pop
cmp
mov
jg
mov
test
leave
fs
xor
pop
or
jnp
xchg
out
mov
fcoms
adc
pushf
xchg
add
dec
adc
in
pop
and
mov
jnp
inc
dec
loope
movsl
dec
pop
sub
fidivrl
stc
pop
adc
call
inc
lods
xchg
pop
fsubl
push
xchg
jle
add
out
pop
movsl
movl
das
mov
scas
mov
jnp
fcmovu
test
mov
jnp
mov
ljmp
mov
fwait
cld
mov
xor
daa
pop
inc
or
pop
inc
sbbl
jo
pop
pushf
sub
scas
icebp
imul
int3
push
sub
shll
scas
std
pop
imul
jns
sarb
ss
repnz
jl
insl
fidivs
loop
insl
lcall
out
aaa
mov
ffree
xchg
mov
call
jo
fsubr
add
add
and
and
push
mov
add
sub
loope
and
inc
and
inc
iret
inc
aad
xor
js
inc
add
mov
cltd
push
pmuludq
lcall
in
add
pop
mov
xchg
testl
test
jle
repz
das
cmp
dec
sahf
push
sbb
out
pop
xor
mov
int
push
aas
inc
jnp
int
push
ja
pop
add
ret
pop
jo
out
movsb
icebp
mov
scas
mov
push
cld
xchg
out
inc
jle
dec
and
and
hlt
xchg
mov
mov
inc
fdivrs
xlat
mov
mov
int3
push
sbb
nop
dec
pop
add
inc
and
fmull
jns
push
mov
jo
pop
leave
mov
fidivl
mov
xor
jecxz
mov
rcrb
add
je
es
jne
aaa
push
or
mov
push
adc
dec
je
dec
hlt
das
xor
popa
adc
inc
push
aam
lret
int
xor
imull
adc
dec
sahf
xchg
and
adc
aam
leave
mov
fs
fidivs
or
mov
or
aam
xlat
scas
inc
fdivr
sub
xchg
or
add
imul
lock
call
inc
pop
scas
inc
xchg
add
inc
and
es
into
add
hlt
int3
push
push
push
ljmp
jecxz
mov
std
std
lret
add
mov
repnz
sbb
addb
jo
mov
push
push
mov
mov
mov
push
outsb
pop
scas
pop
mov
std
add
outsl
cwtl
mov
popa
cmp
add
dec
imul
cs
mov
lret
pop
daa
jbe
push
add
movsl
xchg
sub
mov
fstl
js
outsb
loopne
inc
cli
outsl
dec
dec
loopne
repz
adc
movsb
lods
lds
adc
pop
push
dec
cmp
xor
add
daa
aad
mov
sub
cltd
repnz
jge
rorb
idivb
and
push
movsl
jns
add
js
test
add
cltd
or
jne
cmp
out
es
aas
jl
add
in
hlt
out
mov
inc
lods
scas
push
cmp
cltd
cmp
sub
sbb
add
cmpsl
inc
mov
mov
adc
add
jb
jle
outsb
shr
inc
jp
stos
daa
xor
mov
pusha
or
xor
add
xor
mov
or
add
dec
xchg
fs
jne
sbb
sbb
rcrb
inc
fs
int3
lcall
in
sbb
mov
add
repnz
inc
cwtl
jae
cmp
xor
ror
popa
push
inc
sbb
movsl
ret
push
xor
mov
dec
dec
je
aas
push
fists
enter
add
adc
ja
call
test
aas
shlb
int3
pop
push
dec
jae
sti
adc
