jge
add
mov
add
cwtl
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
push
add
jnp
add
mov
add
fwait
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
pop
adc
add
add
jne
add
mov
add
test
add
ret
add
adc
add
adc
add
adc
add
adc
add
push
insl
push
test
mov
mov
es
gs
mov
cmp
add
pop
pop
mov
std
mov
jmp
xlat
pop
lcall
addr16
mov
push
pop
aam
add
repz
shll
ret
dec
xchg
adc
lcall
rcll
bound
jmp
inc
int3
mov
fwait
or
sbb
and
or
pop
sub
push
mov
daa
ja
inc
imul
test
add
push
enter
aad
andb
mov
enter
les
push
inc
ret
divb
cltd
sbb
dec
or
inc
repnz
xchg
sbb
ja
movsl
pop
and
cmp
cmpl
cmp
outsb
sbb
imul
cwtl
gs
jmp
pop
scas
jne
cmp
jns
mov
mov
andl
cld
push
add
xchg
mov
mov
xchg
jno
jb
xchg
repz
or
fucomi
in
fcompl
pop
adcb
cmp
inc
mov
enter
js
cmc
test
scas
add
jmp
xor
aas
pushf
or
lahf
in
dec
or
rolb
outsb
ss
mov
lcall
sbb
lds
daa
jbe
sub
inc
loop
dec
movsb
push
out
stos
bnd
je
mov
xchg
cld
aam
int3
icebp
fs
fldl
inc
mov
in
cli
nop
fdivl
jae
in
ficoml
das
dec
aaa
dec
lods
add
andb
lahf
xlat
xor
xchg
sbb
sahf
pop
xchg
pop
ss
lret
iret
inc
push
jge
fadds
fcoml
pop
cld
nop
sbb
cmp
sbb
xchg
test
push
push
ret
mov
in
imul
cmc
pop
cmp
push
push
std
push
unpcklps
mov
jl
cmp
xchg
add
dec
jae
or
pop
adc
rcrb
or
pop
loope
imul
adc
push
sub
es
arpl
scas
sub
xchg
pop
notb
sub
pop
in
xchg
or
ss
add
fildll
outsl
lret
cmp
iret
maxps
je
sarl
jge
cmp
fsubrl
enter
mov
mov
or
add
outsb
xchg
xor
ret
mov
mov
notl
aaa
ret
sub
dec
leave
add
push
and
or
int
mov
push
add
std
cmpsl
jne
jmp
loope
sbb
scas
mov
imul
push
push
mov
lahf
sub
jno
fwait
rolb
xchg
insl
mov
int
lea
sub
push
daa
rclb
xchg
out
cs
xchg
imul
push
and
and
cltd
fnsetpm(287
rorb
pop
push
xchg
pop
rcr
stc
jl
fs
fdivl
sarb
push
les
rorl
lea
dec
call
or
lea
call
add
push
mov
call
sub
dec
movzwl
imul
mov
or
call
dec
dec
mov
add
mov
lea
add
or
imul
imul
sub
inc
mov
and
call
dec
add
movswl
add
sub
call
dec
inc
call
dec
lea
mov
mov
dec
inc
add
add
inc
pop
mov
sub
and
add
lea
pop
mov
inc
pop
dec
mov
lea
mov
pop
dec
dec
mov
sub
inc
add
inc
or
pop
dec
add
pop
mov
mov
mov
imul
or
call
and
inc
or
mov
ret
inc
dec
push
mov
or
push
add
dec
push
mov
imul
push
movzwl
dec
push
sub
mov
mov
inc
push
mov
ret
push
lea
dec
add
dec
inc
add
add
push
mov
dec
push
sub
call
pop
ret
jmp
mov
xchg
imul
mov
and
inc
xor
add
movsbl
inc
or
inc
imul
lea
dec
jne
mov
mov
mov
and
pop
dec
movzwl
pop
xor
inc
pop
xor
sub
sub
dec
imul
mov
inc
imul
inc
inc
dec
add
ret
push
dec
mov
inc
dec
movswl
movswl
mov
movzwl
push
push
push
push
dec
lea
add
push
inc
inc
add
dec
mov
mov
dec
mov
mov
mov
dec
push
mov
mov
xor
sub
movzwl
push
lea
dec
push
sub
dec
pushl
mov
call
dec
add
sub
or
sub
mov
mov
add
inc
pop
ret
add
mov
sub
sub
inc
inc
mov
dec
imul
inc
mov
add
sub
cmp
jb
add
mov
imul
mov
xor
add
dec
xor
lea
pop
inc
mov
test
jbe
dec
add
add
imul
dec
mov
inc
dec
dec
dec
mov
add
dec
add
movzwl
inc
add
dec
sub
movzbl
imul
movsbl
and
and
or
mov
sub
inc
movzbl
dec
dec
add
xor
mov
and
mov
dec
mov
or
inc
mov
lea
add
mov
inc
add
mov
lea
inc
sub
sub
inc
inc
dec
jne
imul
mov
mov
dec
dec
dec
lea
dec
imul
mov
dec
mov
lea
lea
inc
lea
lea
and
add
mov
mov
mov
imul
test
jbe
inc
xor
mov
movzbl
inc
mov
dec
xor
sub
mov
dec
imul
dec
inc
xor
inc
and
inc
xor
imul
dec
add
and
imul
imul
mov
mov
mov
movzbl
sub
add
add
imul
lea
and
dec
inc
mov
movzbl
imul
movzbl
inc
inc
mov
dec
inc
mov
dec
mov
movzbl
lea
lea
add
dec
add
and
dec
add
movzbl
mov
jmp
push
call
add
xor
and
add
xor
add
mov
inc
imul
lea
inc
xor
and
xor
dec
sub
mov
dec
shl
lea
lea
xor
mov
dec
push
add
add
mov
call
sub
pop
dec
mov
dec
xor
inc
movsbl
mov
dec
cmp
je
call
call
lea
iret
lea
movswl
pop
mov
ret
push
movzbl
add
inc
movzbl
lea
push
lea
mov
push
mov
push
dec
push
dec
inc
push
mov
mov
sub
inc
lea
call
mov
push
dec
push
mov
pop
sub
imul
mov
add
imul
mov
inc
dec
inc
lea
lea
dec
je
sub
inc
mov
and
inc
lea
dec
add
or
mov
dec
lea
mov
add
add
inc
imul
repnz
and
mov
add
movsbl
jmp
add
mov
imul
inc
xor
mov
dec
sub
lea
inc
and
sub
mov
inc
mov
inc
pop
pop
jmp
ret
push
dec
and
sub
mov
and
inc
dec
mov
lea
add
mov
dec
or
add
dec
or
lea
movswl
add
lea
dec
or
and
dec
inc
inc
pop
ret
sub
dec
mov
mov
sub
mov
add
inc
mov
dec
inc
mov
add
lea
xor
mov
sub
mov
imul
mov
inc
add
inc
inc
mov
add
or
cmp
jb
mov
push
mov
inc
push
add
mov
push
inc
mov
mov
lea
movzwl
xor
mov
lea
xor
mov
add
xor
inc
inc
push
dec
inc
xor
movswl
and
mov
sub
mov
xor
add
movzbl
imul
lea
lea
add
add
movzbl
add
inc
or
movzbl
sub
inc
and
dec
lea
inc
inc
dec
mov
sub
inc
add
sub
cmp
jb
lea
xor
add
sub
mov
inc
jmp
test
sahf
and
dec
mov
jne
cmpsb
int3
or
cmpsl
dec
out
mov
jae
xchg
fs
fs
mov
pushf
fbld
cmp
inc
push
jmp
jecxz
xor
repnz
dec
mov
into
mov
fs
sub
inc
add
mov
mov
mov
mov
add
sbb
test
xchg
mov
push
aad
or
or
add
push
sti
and
mov
mov
mov
jecxz
mov
adc
mov
dec
aaa
dec
sbb
iret
pop
shll
dec
push
jnp
and
add
adc
push
push
pop
push
mov
sbb
or
xor
mov
faddp
not
ret
cld
mov
call
das
movsl
aad
mov
in
push
mov
test
dec
add
push
xchg
frstor
pop
out
mov
fnstsw
ja
push
mov
lret
push
mov
and
inc
movsb
out
test
adc
pop
shll
mov
adc
mov
and
jg
outsb
fdecstp
aam
aaa
push
movsl
daa
frstor
or
cmpsb
xchg
mov
mov
ds
ljmp
sub
daa
push
mov
mov
mov
int
push
mov
lcall
cmp
fistl
ss
pop
movsb
dec
mov
push
sub
xchg
xchg
mov
cwtl
jnp
cmp
test
fidivl
and
sbb
aaa
add
xor
push
dec
lods
cmpsl
mov
mov
push
pusha
add
sarl
push
or
sti
push
and
adc
out
mov
jbe
jmp
fs
jg
sbb
dec
nopl
xchg
repz
mov
int
inc
insb
xchg
push
je
cmc
arpl
pop
mulps
inc
testl
lods
add
sbb
test
and
lods
js
cltd
mov
jae
mov
pop
shlb
inc
test
sbbb
iret
dec
jns
iret
cmc
fldenv
rolb
outsl
stos
std
enter
jecxz
mov
push
fwait
xor
jne
inc
iret
in
mov
cmp
mov
into
data16
push
icebp
test
mov
mov
cltd
inc
sbb
sbb
inc
add
movsb
leave
jl
xchg
lcall
push
data16
stos
cmp
jno
fwait
aam
outsb
clc
pop
mov
push
imul
mov
sub
pop
cmp
push
mov
test
dec
or
orb
movsl
pop
add
mov
in
test
lock
ja
mov
addb
nop
into
mov
popf
or
jl
sti
jno
pop
cld
pop
pushf
ret
loope
mov
clc
mov
fsub
mov
test
ret
hlt
pop
jae
pop
mov
jecxz
inc
inc
jo
and
cmp
or
jg
rorl
add
gs
aad
inc
mov
into
jg
loopne
dec
dec
lret
lock
movsb
pop
stos
pop
in
jnp
pop
jecxz
faddl
dec
or
roll
in
mov
push
add
pushf
dec
fimuls
add
jmp
xchg
push
jb
out
and
into
mov
loopne
xchg
jmp
jmp
sbb
aam
jne
lock
sub
bound
push
and
xor
xchg
jp
sbb
arpl
minps
and
lods
pop
mov
es
pxor
arpl
mov
cmpb
adc
mov
and
data16
jno
pushf
inc
xchg
std
mov
popf
in
inc
roll
ja
loope
js
inc
xadd
rcrl
aam
pop
scas
mov
cmc
jno
pop
xchg
xchg
dec
mov
xlat
adc
test
or
mov
xlat
sub
imul
pusha
data16
mov
jno
pop
pop
jb
inc
out
or
add
mov
dec
fwait
push
loope
data16
in
jnp
test
cld
ficomps
aam
arpl
adc
lods
add
or
cmpsl
add
push
push
xlat
dec
push
fdiv
sub
hlt
xlat
and
push
sub
mov
ret
or
push
inc
in
add
mov
insl
add
mov
ficoml
shll
loop
jg
repz
rorb
fimuls
xor
in
sahf
movsl
sub
or
mov
and
lods
xor
or
js
mov
dec
repz
dec
push
cmp
mov
push
aaa
adc
jp
movsb
mov
adc
out
jg
int
inc
outsl
popa
jecxz
cmova
pop
inc
gs
jl
mov
popf
incl
in
fwait
xchg
xchg
adc
rcrl
sbb
jg
mov
ret
push
cmp
mov
loop
icebp
int3
cmp
xchg
loope
jo
ret
cmp
and
loopne
cmp
sbb
jmp
aas
or
xchg
mov
mov
jns
ficomps
imul
add
imul
cltd
push
xchg
jecxz
xchg
es
inc
mov
inc
jge
pop
inc
xbegin
dec
fs
cmpl
loopne
dec
loopne
in
adc
shll
lret
in
and
aaa
mov
lock
xchg
xor
ljmp
popf
dec
sub
rcll
test
mov
enter
jb
push
outsb
mov
ss
push
xor
jle
adc
push
xchg
test
xor
pusha
imul
fsts
lret
or
mov
repz
mov
sbb
cmc
add
emms
ja
dec
lock
leave
fucomip
jge
sahf
and
ss
inc
rclb
cmpsb
leave
icebp
cli
lcall
movsb
jle
popa
jo
inc
pop
jp
xor
aas
fwait
cmp
mov
jmp
or
mov
pop
dec
pop
xor
cmp
or
aas
in
test
sub
js
fdivp
shll
cli
cmp
inc
mov
lds
xlat
lahf
and
sti
sbb
loop
loope
xor
jmp
add
test
xor
push
and
dec
cmp
dec
fisubrl
mov
stc
mov
cmp
inc
notb
add
in
dec
mov
loop
xchg
push
sbb
fadd
push
xchg
ret
pushf
addl
fiadds
fcmovnb
pop
into
mov
mov
stos
and
and
push
fstps
add
mov
repnz
jl
je
dec
in
fstp
mov
loopne
pop
or
popf
xchg
scas
out
push
mov
je
pop
loope
shrl
out
jo
pusha
out
jl
adc
add
aas
jo
sti
push
push
jno
xor
mov
push
ljmp
inc
push
out
xor
cmp
sub
orl
unpcklps
pop
shl
lock
push
pop
js
decl
test
cld
sahf
pushl
push
clc
aaa
sub
mov
into
xchg
insb
xor
repnz
outsl
aad
mov
add
pop
orl
pop
subl
mov
pop
push
dec
jp
es
loopne
mov
nop
outsl
stos
lret
mov
clc
push
ja
popl
in
insb
sbb
leave
sub
xchg
add
jle
adc
sub
mov
pop
inc
inc
or
jp
pop
push
or
dec
jo
push
cmp
les
movsb
xchg
sub
in
pop
mov
sub
insl
jo
add
ficomps
pop
adc
les
imul
js
xor
stos
add
mov
ja
aam
mov
pusha
scas
inc
testb
adc
out
cmp
xor
repnz
xchg
cld
pop
adc
jo
sbb
loopne
sti
sub
sarl
jecxz
imul
or
int
sbb
in
repz
movsl
cmpsb
adc
adc
pop
cmpsl
add
mov
cmpb
pop
and
cld
add
sub
ljmp
cwtl
bound
adc
cmc
es
xchg
mov
addr16
shlb
cmpsb
aaa
and
mov
sub
mov
or
add
push
add
pop
les
cwtl
mov
cmp
xchg
mov
loop
out
loope
in
mov
dec
loopne
add
lret
fcoml
cmp
shll
clc
in
cwtl
js
push
rcrl
iret
out
inc
mov
loopne
jecxz,pt
jmp
push
icebp
mov
repz
jbe
dec
sub
pop
out
stos
mov
dec
scas
push
movsl
and
outsl
sub
sub
rcll
or
adc
mov
mov
mov
jb
or
fcmovne
adc
jns
xor
pusha
fnstsw
sub
fs
jmp
scas
int3
xchg
mov
mov
stos
pop
mov
jnp
ret
mov
mov
jecxz
mov
and
sub
cld
inc
mov
cmp
jo
jae,pt
and
in
es
pop
mov
sbb
mov
rcrl
cmp
xchg
lahf
mov
lds
sbb
sub
pop
xor
scas
cmp
and
inc
xchg
xor
rcr
or
lock
out
mov
aaa
test
inc
xchg
test
jns
clc
mov
icebp
cltd
or
stos
sub
jb
or
xchg
adc
sarb
sbb
inc
call
popf
xor
mov
ret
xor
int
push
dec
xor
daa
xor
cmpsl
ja
repz
dec
dec
xor
shlb
mov
lock
mov
pop
mov
mov
dec
cmpsl
fwait
cmp
adc
push
inc
lcall
add
lret
jp
lods
mov
inc
push
jno
js
ret
mov
out
into
adc
aas
rorl
pusha
pop
sub
rcrl
lcall
mov
xchg
arpl
out
push
jno
jbe
mov
push
sbbb
popf
es
cmp
dec
add
cli
das
jle
dec
movsb
gs
xor
aaa
sbb
and
flds
mov
mov
dec
ljmp
or
ret
movsb
rolb
fcom
lahf
xchg
out
pop
sbb
mov
imul
mov
ret
inc
fistpll
hlt
xlat
fistpll
cltd
test
pushf
clc
in
lret
adc
leave
mov
fsub
and
data16
or
cmpsb
xchg
or
inc
arpl
jge
out
scas
das
xchg
sti
std
sahf
or
sbb
jmp
lods
fistl
xchg
ds
bound
xlat
inc
jp
xchg
sahf
inc
dec
add
shrb
mov
loopne
jmp
clc
push
out
mov
push
in
adc
and
xor
and
xlat
loop
mov
fldt
lcall
jle
and
push
outsl
mov
lods
sub
pop
jbe
sarb
mov
push
add
mov
inc
xor
adc
mov
xor
aaa
or
inc
div
mov
loope
das
popa
pop
pop
mov
dec
cmp
lock
sub
mov
pop
in
mov
out
scas
cltd
mov
lret
dec
sbb
or
mov
xchg
mov
iret
subb
je
ror
adc
jge
lret
fcompl
loopne
add
push
mov
fdivr
adc
push
sub
add
pop
fdivs
adc
dec
xor
mov
mov
push
test
mov
push
addb
sbb
inc
or
mov
lahf
orb
xlat
repnz
mov
fs
sub
loop
mov
and
lret
and
lods
mov
scas
or
rcl
jo
dec
cld
mov
jp
push
lret
ficompl
mov
leave
xchg
xchg
mov
dec
pop
imul
stos
add
fsub
push
test
cltd
lods
mov
hlt
pop
into
out
repnz
loopne
mov
lahf
mov
xchg
and
mov
rcl
lcall
mov
sti
dec
pop
push
sub
jae
stos
mov
daa
ficoml
sbb
jle
mov
mov
shlb
fstps
mov
jg
nop
sahf
imul
pop
lds
jb
push
push
lods
inc
scas
adc
jne
pop
or
popa
adc
pop
es
mov
mov
subl
mov
push
or
push
insl
adc
xchg
jno
xorb
gs
test
adc
jl
or
and
push
cmp
imul
cmp
inc
cmpsl
in
mov
dec
or
dec
lea
aaa
jmp
push
jp
sbb
lahf
sub
js
ficoms
mov
mov
scas
cmp
xchg
push
xlat
aas
pushf
and
stc
pop
pop
idivb
daa
add
hlt
call
scas
sbb
push
push
insl
cmp
fs
bound
mov
pop
ret
or
repnz
jb
mov
popa
dec
les
je
loop
mov
lret
pusha
test
bnd
pop
test
test
or
xchg
mov
jne
idivb
cmp
jmp
mov
jae
mov
loop
mov
mov
lcall
push
mov
jbe
popa
or
or
mov
dec
mov
pop
inc
add
mov
std
push
add
or
mov
mov
pop
dec
adc
push
jle
mov
add
adc
and
push
push
iret
pusha
out
sbb
and
xchg
out
fwait
or
fsubrs
and
or
and
and
jl
cmp
add
bound
cmpsb
jp
test
daa
xchg
inc
mov
xor
loopne
jne
xchg
jle
inc
mov
mov
popa
loope
pop
pop
pop
addb
ja
int3
lahf
into
sub
out
movsl
sbb
clc
mov
push
cmp
loope
dec
inc
adcl
push
xor
shll
push
nop
push
ds
lods
leave
movsb
xor
sub
ljmp
insb
std
pop
or
shlb
icebp
shl
pusha
sub
mov
dec
cmp
and
cli
or
mov
inc
cld
mov
shr
inc
sbb
iret
sub
cmpsl
lcall
inc
mov
xchg
pop
xorl
lods
lods
push
jl
jns
pop
inc
jle
int
jmp
sbb
and
test
rorl
repz
pusha
lock
cmp
inc
pop
call
mov
in
in
push
int
pop
int3
xchg
inc
mov
test
push
cmc
sbb
insb
fistpll
cmp
and
xor
fnstenv
push
jmp
out
adc
xor
in
insl
xchg
movl
arpl
push
jle
rol
loop
fdecstp
xor
inc
cmp
add
dec
in
imul
mov
lods
loope
mov
or
add
sub
pop
push
mov
ljmp
jmp
loope
test
add
jbe
mov
lods
dec
sub
cmp
push
jecxz
stc
gs
push
push
cmp
push
lret
sbb
ret
int
les
add
xchg
jg
push
call
dec
cs
mov
aam
popl
hlt
rorb
push
dec
lret
out
sahf
jns
push
or
fisubl
push
push
xor
xor
clc
sbb
push
xor
add
je
xor
xchg
outsb
fsubrs
addb
gs
add
pop
push
in
xor
pop
and
je
jecxz
inc
in
in
repnz
scas
adc
inc
mov
roll
push
mov
es
shrl
xor
test
cmpsl
sbb
lods
push
mov
inc
cld
or
push
loope
mov
cmp
mov
into
jl
mov
ds
mov
ja
aad
mov
adc
fdivr
sbb
lcall
jecxz
insl
mov
mov
jmp
mov
add
fsubl
lock
pop
mov
xchg
shlb
popa
mov
xor
les
xor
jb
jge
push
aad
jbe
scas
lcall
and
sub
hlt
daa
push
push
imul
cmpl
and
sub
mov
sbb
iret
test
cmp
jle
mov
and
push
ss
or
lahf
cmc
cmpsb
ljmp
push
outsl
call
aaa
test
es
pop
add
addr16
push
cmpsb
sub
std
mov
ja
adc
movsl
push
jo
push
sbb
push
jp
xor
mov
ljmp
push
hlt
lret
lods
jge
add
cltd
sub
and
cwtl
xor
jp
sbb
cmp
mov
shrl
mov
adc
sub
mov
enter
test
push
stos
mov
and
sahf
push
push
add
pop
fmul
pop
and
add
sahf
mov
mov
sbb
xor
add
negb
insb
into
push
mov
xor
mov
sbb
ret
std
mov
bound
add
add
adc
movl
in
sahf
popa
jns
mov
ds
pop
popf
sub
fistl
push
jns
xor
out
mov
in
int
push
insb
sub
cmc
cli
mov
in
ret
mov
jle
addr16
jo
dec
es
das
call
sbb
ret
lds
stos
and
out
fnstsw
ja
cmpb
aam
ljmp
mov
nop
mov
movsb
lods
dec
stc
cld
push
outsb
push
and
in
inc
aad
jae
sbb
arpl
lods
ret
ret
add
arpl
in
loop
mov
bound
sbb
test
xchg
adc
mov
sub
jecxz
pop
fcomip
repnz
xchg
mov
cwtl
sub
push
lret
pop
dec
popa
dec
cmovp
mov
pop
sub
adc
mov
push
mov
push
je
xchg
add
jl
pop
mov
sbb
add
ljmp
push
sub
imul
xchg
cmp
fcoml
hlt
mov
add
xchg
add
jle
arpl
xor
nop
adcl
adc
loop
inc
insl
mov
jb
and
in
pop
xlat
sahf
cwtl
je
sahf
out
xlat
push
xchg
or
loop
repz
jl
insb
and
paddsb
sarb
decl
mov
ja
je,pn
pop
inc
mov
rorl
arpl
push
mov
lea
or
dec
mov
push
mov
fs
push
frstor
and
negb
mov
ljmp
add
repnz
ss
inc
mov
jno
pop
je
push
stos
fldcw
repnz
lock
adc
inc
movsl
cli
adc
insb
pop
lods
scas
xor
and
movsb
stos
xchg
mov
mul
in
pusha
jnp,pn
mov
mov
mov
pop
pop
pop
xchg
repz
arpl
cld
xor
xor
std
fistpl
xchg
iret
daa
adc
in
and
mov
mov
xor
jmp
movsbl
mov
xchg
sbb
cmp
adc
lock
lahf
add
sbb
jl
stos
notb
mov
sbb
sbb
inc
or
xchg
popf
outsb
dec
and
and
ret
jae
or
mov
or
popa
insb
adc
out
mov
cld
js
lret
push
xor
xlat
push
fmull
pop
lods
repz
cmp
aad
mov
jp
sti
pop
mov
sbb
mov
cmc
xchg
stos
push
jns
or
or
mov
mov
hlt
cmp
iret
or
ficompl
bound
outsl
xor
outsb
dec
call
push
data16
dec
sbb
enter
push
mov
mov
test
bound
into
popf
rcrl
out
pop
test
and
test
dec
sbb
fstpl
stc
mov
jno
dec
cmp
rclb
mov
pop
xchg
jl
je
inc
inc
sbb
sub
rclb
out
sub
jg
push
mov
mov
jae
inc
add
jecxz
sub
sub
sub
or
loopne
xchg
lock
pop
xor
and
test
jbe
insb
jmp
push
ret
test
aad
out
pop
xorb
gs
inc
in
dec
cmp
add
scas
mov
movsb
shlb
sub
cmp
xor
mov
test
jbe
cmp
xchg
in
fisubs
xchg
xchg
lea
xlat
xchg
push
add
xor
sbbb
add
or
pusha
fildl
test
jp
lods
iret
xchg
dec
test
push
mov
in
mov
in
push
out
test
sbb
mov
mov
cmpl
or
add
loope
stc
dec
sbb
leave
cmp
fsts
jl
mov
insb
shlb
fisubrl
sbb
mov
inc
ret
cmpsb
pop
insb
lcall
fbstp
dec
and
sub
loopne
into
insl
leave
push
jl
push
fwait
mov
pop
lods
inc
cld
sub
out
mov
imul
mov
mov
push
xchg
inc
mov
ficomps
push
jmp
addw
push
adc
fmulp
inc
mov
in
gs
adc
sub
insb
xchg
adc
sahf
cmp
jnp
inc
daa
rcll
xor
lea
rolb
scas
movsb
push
andb
lods
jnp
icebp
xor
adcl
pop
jno
lds
cmc
scas
mov
les
out
jae
test
nop
mov
iret
lcall
xchg
pop
shll
or
mov
sub
mov
jno
sbb
mov
jl
push
popa
scas
adc
mov
jae
sbb
mov
rolb
lods
popf
fwait
insl
inc
addr16
adc
hlt
test
mov
adc
mov
mov
sbb
in
dec
pop
loop
movsl
test
cmp
fwait
xor
mov
mov
fldl
scas
cmp
std
aad
xchg
test
sub
pushf
js
xchg
push
or
and
je
inc
pop
out
mov
aas
dec
jae
dec
mov
push
aaa
jmp
lret
test
push
pop
or
xchg
sarb
enter
sbb
lea
mov
lods
jo
test
dec
repz
outsl
push
pop
jp
into
mov
mov
loope
fiaddl
enter
lret
cmp
mov
jecxz
xchg
push
fbstp
push
add
clc
mov
adc
xorl
adc
push
or
stos
negb
mov
xor
pop
gs
cmp
iret
jl
and
sub
fists
ret
xor
sbb
cmp
xchg
std
test
ja
sbb
mov
ficoms
xlat
or
sahf
ret
cs
xor
xchg
nop
mov
adc
int3
and
adc
dec
pop
shl
pop
mov
inc
xor
add
jae
iret
lea
pop
cmc
xor
popf
dec
test
aaa
mov
cmc
scas
int3
js
inc
jecxz
push
add
cltd
mull
loopne
sbb
or
mov
aaa
cmpsb
push
cmp
gs
lret
ret
push
orb
inc
pop
mov
inc
xor
shl
and
sub
lods
out
pusha
mov
adc
push
adc
pop
push
insl
packssdw
pop
data16
cmp
push
push
xor
into
fisubrl
and
in
movsb
add
jl
sub
or
push
jae
mov
inc
daa
xchg
inc
pop
out
mov
or
fcompl
push
shlb
jns
divl
in
adc
xor
jns
or
lds
ret
insl
mov
jne
sub
cmp
inc
cmpsl
fbstp
in
sbbb
push
adc
inc
jp
mov
add
pop
or
loopne
mov
cmp
movsl
and
movsl
xchg
movl
or
add
push
loope
negb
decb
dec
call
pusha
xor
xchg
test
icebp
repnz
cmp
add
xchg
or
add
pop
pop
int3
mov
inc
cmpsl
popf
xlat
dec
bound
dec
xor
sub
xlat
and
iret
inc
in
xchg
test
lret
mov
lcall
mov
inc
arpl
ljmp
cmp
or
insl
mov
cmp
and
xor
add
inc
sub
mov
pusha
push
scas
and
mov
arpl
xor
jno
sub
cmp
add
dec
and
popf
negl
add
mov
push
push
xchg
repz
mov
jmp
lret
std
dec
sbb
sbb
into
inc
pop
das
lret
mov
or
or
and
dec
iret
arpl
xchg
pusha
mov
mov
xchg
add
add
pop
neg
mov
popa
xor
shlb
xor
or
mov
adc
decl
pop
stos
adc
inc
ds
adc
data16
mov
cmp
outsl
add
lock
stc
cmp
loopne
cmpsl
xchg
movsl
js
fwait
xor
and
adc
mov
or
lret
or
fcmovu
dec
mov
popa
outsl
popa
mov
xchg
sub
repnz
xor
sub
aad
jmp
lret
insb
dec
roll
nop
jl
loop
data16
push
ret
mov
pop
jge
sarb
xor
in
add
cmpsb
outsb
jb
xchg
sbb
in
das
jbe
inc
xor
dec
pusha
lahf
insl
xchg
jb
xor
pop
adc
dec
gs
lea
gs
stc
pop
push
outsb
push
jne
fwait
dec
inc
mov
aam
popa
xchg
dec
repnz
lea
mov
icebp
loop
sbbb
aaa
out
push
into
pop
cld
adc
lock
test
jns
aas
out
cmp
sti
add
xlat
fldt
jle
or
dec
push
sub
sub
inc
add
daa
lcall
push
andb
rorl
sbb
xor
aad
dec
test
jne
push
sub
js
icebp
cwtl
and
into
jl
add
pop
lock
ljmp
pop
xchg
push
rcrl
out
aas
imul
fists
add
jmp
gs
fs
xchg
xor
mov
pop
je
fdivrs
popf
enter
fldl
pop
mov
lret
int
jbe
mov
and
popa
sti
add
adc
daa
adc
and
mov
cmp
test
push
adc
popl
inc
jne
xchg
mov
dec
rorb
or
dec
aam
add
jns
mov
inc
xchg
negb
push
mov
stos
gs
rcrb
arpl
out
jae
fnstenv
mov
xchg
call
or
lret
shl
shlb
jbe
push
popaw
xchg
frstor
dec
insb
xchg
lret
aam
popa
push
leave
mov
sbb
hlt
adc
test
xchg
pop
mov
ds
mov
std
ss
inc
and
lret
sti
outsb
push
adc
jmp
cmp
jnp
push
cmp
sbb
scas
icebp
orl
cmp
sub
outsl
pop
pop
xchg
add
pushf
dec
dec
mov
push
les
fcmove
and
mov
and
mov
push
jmp
and
fwait
xchg
shll
mov
sbb
lahf
fsubs
push
sti
shl
mov
cmpsb
into
pop
jae
fstp
push
ds
inc
sub
cmc
mov
sbb
xchg
cmp
xchg
decl
out
push
inc
sbb
or
sub
in
roll
xlat
test
or
cs
and
insb
xor
ret
push
fwait
jae
das
jg
cmpsb
out
add
iret
test
adc
and
dec
xor
dec
or
jno
xchg
xor
xor
repnz
xchg
enter
test
xchg
fistpl
ret
pop
push
fsubrp
mov
sub
push
mov
imul
sub
add
lcall
inc
rep
mov
jbe
xlat
ret
jno
xchg
pop
shl
dec
das
add
int
outsb
je
jl
inc
mov
and
or
decb
sbb
jo
sub
lds
sahf
push
test
mov
int
adc
dec
mov
xlat
aam
hlt
inc
add
jbe
roll
cwtl
or
out
fsubrl
loope
in
xor
popa
test
and
lock
cmp
jp
outsl
pop
mov
or
or
test
mov
lods
sti
jecxz
pop
inc
fs
out
mov
cmpsl
js
sbb
mov
pop
dec
xchg
or
cmpsl
aad
cld
push
adcb
outsl
dec
xor
clc
shrb
push
cmp
pop
or
adc
dec
ja
dec
js
jne
add
jno
pop
movsb
push
mov
and
pop
inc
xlat
int3
outsb
mov
xchg
cli
mov
pop
fucomip
xchg
jae
lods
lret
sti
sub
fs
lret
sub
pop
dec
push
push
xor
in
repnz
xchg
stos
hlt
scas
xor
or
push
xor
incl
xor
arpl
jle
or
push
mov
and
add
test
mov
sub
mov
ret
sbb
fidivrs
ret
adc
jae
cmp
mov
sbb
xchg
pop
push
push
rcrb
nop
xor
data16
daa
xchg
cmp
das
cmpsl
sbb
mov
or
push
mov
inc
cmp
mov
xchg
cmpsl
jno
test
and
stos
insl
cmp
pop
int
cltd
mov
cs
sarl
add
jae
xchg
xchg
add
call
and
xor
mov
add
mov
add
push
scas
adc
mov
pop
pop
push
cwtl
mov
xchg
test
add
test
xchg
jne
and
iret
int3
adc
and
fs
loope
fwait
sbb
mov
mov
fistl
xor
aas
adc
jg
lds
or
and
lret
cwtl
ljmp
inc
add
loope
mov
fstpt
xor
xchg
push
cmp
loope
sbb
andb
arpl
inc
lds
push
mov
sub
mov
arpl
jl,pn
or
pushf
push
pop
dec
xor
dec
adc
pop
dec
test
dec
in
and
lcall
dec
xchg
addb
jecxz
xor
enter
js
mov
nop
ljmp
iret
xor
shl
test
cmp
sbb
dec
dec
movsl
jl
scas
dec
fwait
out
lds
mov
xlat
cmp
push
adc
imul
cli
add
lret
idivb
movsl
mov
fdiv
sbb
test
dec
adc
mov
mov
je
stos
dec
scas
xor
push
xor
or
scas
orb
lret
jl
jg
fildll
push
push
mov
test
ljmp
xchg
addb
fmull
jge
and
test
lcall
cmpb
cs
sub
arpl
push
aam
lret
ja
sub
out
movl
arpl
xor
clc
std
dec
out
mov
cmpsl
ljmp
inc
aas
lret
cmp
push
cmc
negb
add
mov
das
mov
or
add
flds
sahf
cmpsl
ja
in
movsl
xchg
cmp
xor
sub
sbb
xor
mov
call
loopne
cmp
xchg
xor
dec
adcb
or
or
in
rcrl
out
and
mov
call
jno
push
add
sbb
shrb
loop
cld
cmp
xor
pop
cli
xchg
arpl
dec
js
sub
cmpsb
mov
shlb
pop
push
mov
pop
mov
dec
ljmp
rcrb
div
sub
jmp
dec
ljmp
dec
mov
fists
mov
imul
lahf
push
pop
popf
sti
ljmp
loope
cmp
insb
add
and
pop
data16
outsl
adc
mov
xchg
mov
jge
ds
dec
jno
pop
cs
test
inc
scas
outsb
inc
pop
insl
icebp
mov
xor
push
pusha
iret
popf
flds
mov
icebp
int3
jecxz
sub
hlt
cli
xor
scas
fcomps
pop
movl
mov
sbb
aaa
pop
or
dec
mov
stc
scas
push
aaa
pop
xor
sbbb
dec
ret
movb
ljmp
addl
sbb
sbb
mov
negl
jg
fisttps
aad
adc
push
sub
scas
or
lret
pop
shrl
sub
jl
sub
cs
out
mov
xor
mov
push
gs
pusha
jno
adc
movsl
cli
mov
mov
sub
cmp
cld
dec
push
cmp
push
cmpsl
dec
inc
sub
dec
push
outsb
add
loopne
push
xchg
inc
test
rcl
push
push
cmp
outsl
adc
jb
repnz
aad
cmp
push
pop
lods
inc
imul
xor
in
insl
xlat
flds
mov
jnp
xor
adc
dec
cli
clc
pop
aam
push
lock
sbb
inc
sub
stc
mov
loopne
mov
jp
lret
popf
pop
out
data16
movsb
mov
rcrl
mov
mov
repnz
out
scas
int
repz
mov
out
inc
out
mov
in
out
add
pop
mov
inc
jl
or
jae
incb
pop
xchg
mov
lods
or
fisubs
dec
push
push
mov
push
adc
pop
loop
add
mov
rol
leave
push
sahf
insl
or
aad
dec
push
and
lret
clc
fstpl
mov
lea
in
es
jo
sub
clc
testb
or
into
pop
adc
add
cli
pushf
hlt
push
call
add
stc
jno
jmp
ret
lds
add
dec
sbb
insb
lods
rcll
xchg
or
ret
int3
fdivrp
mov
xlat
xor
and
sar
jne
rcll
movsl
imul
cmpsl
adc
fsubs
movsl
cmc
lret
in
and
mov
add
leave
sar
pop
nop
fisttps
xor
cmp
add
cmp
or
xor
std
imul
int
lret
mov
mov
inc
sub
mov
mov
cmp
arpl
xchg
push
adc
push
subb
movsl
lds
shlb
jbe
mov
and
decl
push
lahf
ljmp
enter
inc
pop
xchg
icebp
cwtl
mov
add
in
leave
push
inc
rcrl
mov
and
add
add
sub
inc
mov
cmp
inc
ss
insb
xchg
mov
sbb
cmp
sbb
pop
cwtl
cmp
in
and
arpl
enter
lods
aaa
or
iret
jbe
pop
into
mov
sub
pop
into
jno
pop
fwait
clc
sbb
popa
jne
pushf
mov
test
scas
xchg
xlat
jb
pop
movsb
xor
in
adc
xor
xor
sub
faddl
sbb
out
pop
pushf
fs
or
sbb
fisubrs
sbb
out
aaa
xchg
fwait
dec
incb
inc
loopne
ja
into
test
cmp
jle
adc
mov
das
dec
in
xchg
xor
xlat
push
sub
lea
vmwrite
mov
call
cmc
fs
inc
arpl
or
jnp
push
jl
ss
scas
lds
sub
push
rcrb
xor
leave
push
jecxz
orl
nop
ss
or
sub
loop
cmpsl
adc
pop
aas
or
icebp
mov
lods
outsb
adc
adc
adc
ret
mov
mov
sbb
mov
pop
xlat
clc
in
leave
pushf
mov
loop
test
jg
inc
outsl
fdivrs
and
push
je
lcall
pop
cmp
add
inc
fcompl
testl
cmc
push
lret
cmp
push
dec
mov
enter
out
fwait
push
xor
and
lret
mov
xchg
sub
call
and
xor
in
mov
mov
in
mov
inc
sub
sbb
xor
xchg
cwtl
std
jne
jo
pop
shl
mov
lahf
and
lcall
xlat
nop
adcb
xor
repz
pushf
adc
push
data16
xlat
test
cmpsl
pop
sahf
jle
jns
xor
shlb
pop
or
dec
loopne
and
dec
push
sarl
gs
jp
jo
leave
icebp
loope
and
add
daa
and
sti
lret
aaa
or
addb
cmp
orl
rorl
adc
in
pop
push
adc
sbb
js
and
cmp
fwait
jl
bound
imul
inc
mov
hlt
pushf
rorl
das
xchg
cltd
pop
adc
mov
or
jge
mov
xor
sub
push
test
out
jno
lcall
jmp
hlt
lret
xor
mov
jge
dec
dec
mov
mov
bound
ds
adc
jbe
xlat
test
lock
rcrb
call
stos
out
jge
adc
loope
or
cmc
xor
in
lds
adc
jp
lcall
jg
jae
xor
fidivs
sbb
lcall
pusha
lods
lds
or
scas
rclb
pop
int
lcall
cld
repz
pop
pop
rorl
testb
loope
aas
stos
lods
movb
js
iret
iret
outsb
stc
dec
int3
cs
cvttps2pi
mov
inc
lea
fcmovnb
push
imul
dec
fdivrs
dec
mov
ret
fdivs
shlb
xor
sbb
mov
mov
mov
movl
shlb
jg
cld
fadds
ret
inc
adcb
cs
fsts
xor
pop
mov
inc
lret
mov
aam
dec
mov
push
push
repz
fstps
add
stos
push
push
jle
dec
jp
xchg
xchg
shl
mov
imul
arpl
pop
push
test
orb
xchg
mov
pop
sbb
jne
nop
cmp
jne
xor
dec
cwtl
or
mov
or
out
imul
cmp
daa
outsl
add
jmp
mov
sub
mov
gs
mul
lret
arpl
stos
and
mov
push
adc
sub
cmp
or
pop
inc
leave
in
arpl
sub
mov
imul
cmp
and
cli
dec
dec
mov
stos
fsubrl
sub
and
inc
je
stos
mov
popa
negl
stos
call
in
mov
das
mov
sub
xchg
jp
lahf
sub
inc
cmp
cmovl
in
add
add
pusha
pop
ja
cmc
or
inc
xor
and
incb
dec
insl
jg
ret
nop
dec
xlat
xadd
lcall
sti
icebp
xor
cmp
mov
js
mov
loop
xor
mov
push
mov
push
stc
mov
mov
jne
xchg
cs
cmp
push
xchg
mov
jb
or
dec
pusha
xchg
roll
jnp
lea
out
and
mov
andb
and
jle
fs
imul
into
mull
sub
clc
xchg
enter
aad
ret
mov
scas
jp
jno
xor
mov
orl
cmpsl
fmuls
mov
movsb
pop
jmp
ja
jbe
sti
in
in
arpl
shll
lahf
lock
repz
pop
out
mul
ficompl
lcall
fisttps
jae
ret
test
adc
rcrb
jmp
enter
mov
xchg
sbb
dec
cmp
cmp
add
sbb
nop
std
in
popa
cmp
jb
std
push
loope
pop
lea
out
dec
loopne
xor
inc
sbb
mov
call
mov
rclb
sub
sbb
pop
lods
push
or
inc
sub
mov
inc
aad
jmp
or
or
inc
push
mov
mov
cmp
cmp
adc
jne
notl
dec
cmp
jo
jle
mov
mov
popf
cmp
cmp
std
or
fisubrs
mov
lret
push
aam
and
pop
pop
imul
or
mov
adc
mov
rorl
andl
lret
outsb
mov
imul
test
dec
mov
or
xchg
cmpb
mov
dec
fbstp
cs
xor
vmovaps
inc
mov
sbb
test
fnsave
das
sbb
pop
out
mov
sarb
or
xchg
jns
popa
push
mov
les
pop
cmp
cltd
and
incb
and
pop
aas
loopne
xor
daa
andl
repz
cld
cmc
cmp
xchg
push
popa
arpl
int
cmp
fsubs
in
shll
mov
cmp
adc
fwait
lret
dec
jecxz
add
mov
push
sahf
scas
or
xchg
push
jo
fldt
add
test
hlt
jmp
enter
lds
xorb
mov
inc
sub
fs
dec
pop
popa
add
jo
dec
push
ret
stc
xchg
jno
pop
mov
inc
mov
in
mov
hlt
pop
data16
lock
cmp
dec
sub
adc
clc
rorb
sbb
xchg
mov
mov
pop
xchg
push
inc
int3
xor
push
mov
or
pop
pusha
mov
rorl
add
push
dec
jle
divb
or
and
popf
xor
xchg
jge
pop
stos
orl
xchg
stc
jl
not
cmp
test
push
jg
sub
push
jns
roll
mov
xchg
fldcw
xor
je
jg
les
iret
sahf
xchg
in
sbb
das
jae
push
lret
es
mov
cltd
and
jnp
jns
cmp
aaa
sub
out
mov
scas
sti
sbb
mov
clc
xor
inc
inc
lret
inc
addr16
xchg
xchg
jge
ret
out
xor
adc
fmuls
and
addl
xchg
lahf
scas
loop
inc
adc
ja
js
push
data16
xchg
mov
dec
push
sahf
cmp
mov
arpl
lock
sub
xchg
lahf
ret
push
jnp
add
mov
xchg
cli
das
inc
push
jo
xor
or
mov
dec
lock
test
shl
push
inc
adc
mov
pop
mov
into
cmc
mov
nop
mov
xchg
jb
sbb
sub
in
push
mov
cmc
test
bnd
sbb
hlt
or
mov
icebp
iret
in
cmp
out
sti
jbe
in
mov
addl
popf
sub
or
cmp
cmp
loop
sti
ljmp
mov
push
mov
jae
scas
sahf
dec
test
daa
pop
jge
shll
pushf
pop
mov
sbb
xchg
int3
xor
mov
xchg
push
add
mov
cmp
hlt
fimull
lds
cltd
pop
mov
nop
xchg
cs
inc
lods
roll
add
sahf
mov
adc
mov
in
in
cld
jns
sub
aad
fidivl
rorl
jge
mov
push
xor
or
push
sub
adc
or
sbb
xor
fs
clc
in
loop
sub
pop
mov
xchg
push
and
ret
mov
jne
pop
pop
xchg
xchg
mov
jns
repz
iret
les
lret
out
xchg
fwait
inc
adc
jno
mov
sbb
arpl
insl
and
test
push
pop
fnstenv
addr16
loop
cmp
jge
nop
mov
inc
outsb
pop
addl
pop
add
mov
imul
lods
sahf
mov
loopne,pt
addr16
fnsave
sub
aas
adc
mov
sbb
aaa
jge
xlat
stos
lahf
sahf
mov
mov
data16
adc
repnz
inc
mov
mov
adc
pop
mov
ds
cs
mov
popf
arpl
inc
and
pop
mov
pop
hlt
arpl
push
pop
and
mov
mov
push
filds
xchg
or
mov
mov
test
notl
cmc
push
push
lods
xchg
jmp
mov
jmp
outsl
adc
inc
inc
cmp
popf
outsb
and
mov
cld
dec
cmp
aas
jmp
push
das
xchg
pop
or
push
lods
je
xchg
jae
mov
mov
inc
lods
stos
xchg
mov
xor
sub
cmpl
mov
adc
mov
or
andl
ret
fs
lods
and
mov
mov
push
and
lods
add
and
xchg
push
iret
repnz
hlt
pop
das
jae
roll
mov
scas
mov
fmull
or
imull
mov
jle
pop
or
sbb
imul
mov
push
mov
cs
negl
pop
stos
imul
mov
xchg
lock
fstpt
mov
arpl
cmp
xchg
jg
data16
xchg
out
ficompl
sub
repnz
or
js
inc
std
mov
cmc
sub
out
cwtl
jo
and
mov
push
jl
aaa
out
mov
xchg
sbb
cmp
les
popa
cmp
cmpsl
int3
popf
and
adc
stc
sub
sbb
stos
jno
stc
pop
lret
pop
or
fucomi
fisubrl
jge
push
push
mov
sbb
inc
pop
jnp
and
push
into
cld
arpl
lods
daa
repnz
jmp
mov
clc
mov
stc
jmpw
dec
int
xchg
aam
push
inc
sub
or
imul
aad
test
imul
in
push
push
movsb
lcall
cltd
imul
adc
in
pop
inc
cmc
fistl
push
sub
sbb
mov
inc
lret
int
ficompl
jge
cwtl
aad
insb
jle
mov
and
mov
sbb
in
notl
and
and
imul
test
push
ret
dec
fisttpll
gs
jno
add
xchg
pop
mov
mov
cmpsb
lahf
pop
idivl
pop
sbb
jno
loopne
xor
sti
mov
fs
inc
test
loope
pop
ret
mov
fdivr
aam
pop
xchg
mov
cmp
mov
and
mov
jl
ret
scas
dec
or
inc
adc
cld
pop
test
negl
aam
jo
push
shll
jbe
mov
aam
nop
cmp
fucom
mov
adc
xor
mov
aam
inc
pop
ljmp
lret
xchg
push
add
mov
add
cli
stos
fcmovnbe
fnstsw
in
dec
pop
or
loope
iret
imulb
mov
sahf
mov
imul
dec
out
outsb
in
negb
loop
cs
sub
lcall
push
dec
mov
cld
test
jns
into
leave
pop
pop
ss
cld
rcll
mov
xor
push
sbb
stos
add
add
ds
fisttpll
decb
jnp
ficoml
loopne
popf
push
dec
aad
pusha
rolb
fs
lahf
arpl
leave
dec
add
mov
xchg
pusha
push
loopne
sbb
and
add
sbb
add
xor
add
lea
sbb
inc
mov
es
imul
cmp
pop
sub
cli
arpl
mov
adc
dec
aas
lods
xor
lret
xchg
jbe
dec
and
dec
adc
outsb
iret
lahf
adc
inc
and
sub
daa
in
jecxz
pop
rorb
dec
mov
out
cmpsl
sarb
popa
repnz
push
jg
lods
dec
pop
inc
or
addr16
mov
leave
negb
sub
add
stc
sub
orb
vpaddusw
adc
sti
aad
aam
or
pop
dec
sub
xor
push
es
sbb
push
in
mov
divb
inc
mov
jecxz
dec
sub
push
pop
mov
sbb
daa
out
and
xchg
cmp
out
xchg
and
mov
sbb
mov
out
inc
sti
add
repz
cli
mov
pusha
mov
sbb
repz
pop
daa
sub
ret
sbb
inc
sbb
pusha
mov
test
jb
out
aas
push
xor
sbb
push
stos
pop
and
xchg
adc
sahf
sub
adcl
or
sub
add
inc
call
and
sbbl
dec
jne
nop
mov
jge
lds
pop
out
test
int
sub
push
and
cmpl
hlt
pop
sbb
adc
inc
clc
xchg
mov
inc
dec
int3
sbb
cmp
es
jno
push
inc
cmpsb
mov
cmpsb
xchg
pop
out
pop
fsubrl
mov
sbb
cmp
add
inc
sbb
fdivr
pop
dec
sahf
movsb
enter
cmp
inc
dec
jb
cmp
xor
mov
insb
mov
xor
mov
addr16
mov
and
push
sbb
jb
add
mov
jp
iret
mov
inc
jl
imul
imul
mov
lret
or
and
pop
cmp
mov
daa
jne
arpl
fcompl
icebp
orb
mov
add
pop
xor
jb
ret
or
in
lods
add
enter
jmp
sub
cmpsb
mov
inc
mov
cmpsl
xchg
inc
push
cmp
je
jmp
das
adc
inc
mov
push
int3
xor
test
cltd
test
mov
js
jbe
adc
sub
mov
cmp
dec
in
out
lahf
testl
push
shlb
xchg
aaa
fwait
int
jne
sarl
fsubrs
loop
lcall
daa
lock
mov
push
dec
nop
movsl
cld
aad
pop
mov
gs
imul
lock
mov
add
pop
mov
movl
pop
cmpsl
xchg
jle
sub
call
mov
xor
nop
lret
jns
jnp
fnsave
out
cwtl
sahf
sarl
cld
add
sbb
mov
out
add
pop
js
mov
sbbb
into
nop
popa
push
cmp
add
jbe
enter
push
pushf
lds
nop
cmc
testl
out
loope
sahf
dec
mov
in
movsb
mov
fwait
imul
test
fidivrl
push
pusha
jbe
sbb
pusha
mov
jle,pt
pushf
outsb
in
push
pop
inc
mov
out
cmp
pop
mov
ja
sti
jo
xor
xchg
mov
pop
pushf
cmp
jns
push
pop
mov
out
push
cmp
push
out
sbb
gs
dec
mov
das
dec
aad
xchg
and
aas
inc
daa
bound
and
jo
xor
and
dec
adc
jge
adc
push
ljmp
mov
sbb
push
les
aas
roll
imul
mov
mov
sbbb
pop
sub
scas
inc
lea
lret
mov
incb
loopne
and
xchg
in
sti
shl
dec
leave
jbe
fildl
ljmp
jge
cmp
jmp
dec
loope
xchg
insl
cmp
repz
xor
push
xor
shrl
std
aam
adc
xchg
or
adc
paddusw
stos
push
fwait
mov
jp
leave
mov
adc
mov
test
or
orb
test
sub
loope
pop
loop
in
pop
faddp
loopne
cmpsl
and
inc
jno
xchg
jp
mov
mov
negb
mov
test
aaa
das
popa
inc
xchg
adc
jb
scas
lcall
xor
nop
pusha
or
sbb
out
imul
fmull
adc
xchg
xor
je
add
jo
and
cwtl
inc
mov
add
int3
sarl
mov
orb
mov
xlat
aam
cmpb
stos
daa
cmp
pop
int3
mov
and
pop
sti
insl
popf
ds
jo
and
adc
lcall
push
out
and
in
sub
divl
aam
jbe
and
mov
cwtl
add
push
loop
sub
mov
pop
testb
or
enter
mov
ret
xchg
xchg
mov
jmp
pop
sub
data16
aas
lock
adc
adc
push
mov
aas
les
enter
lcall
psrld
push
mov
add
cmc
adc
push
std
sub
push
add
test
cs
pop
lods
and
jg
push
xlat
mov
sub
and
into
sbb
lret
iret
in
stos
adc
int3
bound
adcb
inc
mov
adcb
mov
cli
outsb
mov
push
aad
xchg
lea
jno
insl
mov
clc
test
ljmp
movsb
push
mov
jnp
outsb
out
cltd
fisubl
rcl
mov
jne
sbb
sbb
imul
dec
xorb
lods
mov
add
pop
bound
push
dec
in
adc
adc
mov
mov
jl
lods
insb
inc
xchg
mov
mov
and
pop
movsb
inc
jmp
mov
pop
adc
fldcw
fimuls
mov
and
shl
pop
lods
pop
cmpxchg
add
scas
mov
mov
shlb
push
subl
push
inc
add
sub
push
rcl
mov
jns
imul
sbb
rol
in
popf
add
and
push
or
mov
and
inc
and
test
jge
int
add
je
movsl
shrl
outsl
xor
filds
inc
fiaddl
cmp
pop
loopne
pop
testb
loop
cmp
int3
int3
aad
or
adc
jecxz
test
mov
ja
cmp
loopne
cmp
loopne
adc
daa
pop
mov
test
outsl
jno
xchg
add
jg
inc
mov
jge
pop
lods
icebp
fnstcw
leave
ljmp
sub
mov
cli
insl
xchg
mov
adc
data16
gs
mov
mov
or
dec
rclb
push
add
mov
add
lret
jno
mov
pop
dec
sub
pop
xchg
pop
cmc
aam
xor
sub
subl
loopne
lods
lcall
gs
or
cmp
lret
rol
mov
mov
int3
iret
or
jp
sbb
js
dec
mov
das
divb
sbb
dec
les
mov
adc
or
call
pop
jge
push
cmp
mov
out
add
sahf
push
sti
ljmp
adc
rol
test
push
loop
jnp
mov
xor
lds
adcl
dec
je
jno
popf
sbb
pusha
push
pop
loop
pop
xchg
shll
outsl
test
mov
movsl
mov
mov
xor
pop
loope
push
dec
fcompl
cmp
pop
js
mov
pop
movsb
adc
jp,pn
test
cmp
adc
insl
fsubp
stos
push
stos
pusha
sub
data16
in
nop
xorb
or
ljmp
cli
jbe
push
jecxz
es
call
ret
pop
dec
movsl
mov
push
jmp
jge
jecxz
dec
cmp
mov
jecxz
repnz
test
test
mov
mov
nop
addl
cmp
adc
push
pop
adcl
jecxz
pop
inc
in
cmpsl
mov
pop
xchg
shrl
jmp
push
jg
sarb
int3
rcrl
cmp
inc
flds
pop
or
add
dec
sbb
adc
push
push
dec
cmc
or
adc
aas
jnp
push
and
or
sub
inc
call
add
jp
test
inc
in
je
roll
push
test
out
sbb
pusha
stc
sbb
cld
and
xchg
lock
enter
es
sbb
pop
push
orb
notl
shl
push
in
ret
add
aaa
lods
xorb
sbb
fisttps
mov
dec
inc
mov
ret
xchg
test
mov
daa
cmp
rorl
mov
cmp
xor
leave
or
pushf
leave
jb
and
pop
push
stc
xchg
test
lahf
leave
pushf
dec
mov
repz
insl
push
dec
mov
jl
stc
faddl
pop
mov
jl
jno
mov
xor
lcall
shll
ja
cmp
xchg
sbb
mov
das
outsb
mov
adc
cltd
cmp
call
jne
aam
lret
adc
mov
or
cmpsl
push
push
dec
cmpsl
pusha
push
data16
mov
mov
insl
jle
sarl
enter
ss
sub
or
lds
push
in
fidivrl
rcrl
or
insl
lea
jl
cltd
push
pop
fldenv
cmc
stos
fisubrs
ja
lods
mov
add
jl
or
and
in
jno
movsb
pop
jnp
cmp
adc
cmp
shrb
mov
rol
fcoml
insl
adc
sub
ret
push
jge
jmp
sub
dec
loope
xchg
jle
cmpsl
out
and
add
cmp
icebp
ret
js
in
xor
push
dec
in
mov
in
retw
or
imul
push
mov
sbb
pop
cmpsb
js
dec
jbe
mov
lock
or
add
cmp
ds
vrsqrtss
ret
push
push
popl
xchg
ret
and
and
pop
xor
cmp
adc
sub
mov
lret
out
stc
ss
push
pusha
and
ficoml
dec
push
xor
push
les
lods
mov
jg
shll
dec
stos
addr16
int3
dec
push
rcrb
and
scas
xor
push
sbb
testl
push
xchg
jne
pusha
dec
adc
stc
loop
in
out
adc
jmp
mov
out
stos
subl
lahf
aad
xchg
negl
das
out
ss
inc
idivb
outsl
push
imul
cmp
mov
enter
ror
lcall
bound
movsb
push
call
add
mov
mov
pop
lret
xchg
enter
repz
mov
lods
inc
sbb
adc
jns
test
ret
inc
in
mov
inc
rolb
cmpsl
aam
sbb
xchg
xchg
sub
push
and
aaa
push
cld
int
mov
lret
pop
xchg
inc
mov
dec
int3
in
sbb
rcr
loope
and
les
ret
stos
movsb
fs
sarb
xor
mov
push
std
fildl
aam
or
out
es
loope
out
push
push
xchg
mov
je
ljmp
pop
outsb
out
xor
adc
insl
xor
outsb
xchg
iret
mov
mov
jg
clc
mov
fwait
rol
inc
test
cmc
stos
pushf
insb
and
mov
cmp
aam
out
pop
jmp
dec
dec
sti
add
sub
lock
bound
testl
jb
sub
stc
jae
filds
test
xlat
andb
mov
fcmovbe
aaa
scas
jp
adc
dec
popa
imul
jg
mov
fs
add
pop
fidivrs
xor
les
scas
cmp
mov
cmp
sahf
pop
fiaddl
imul
push
and
das
mov
fnstcw
cli
lea
in
cmp
pop
cmove
fwait
xor
mov
je
push
xlat
mov
add
dec
pop
xchg
mov
cli
pop
sub
push
push
cwtl
out
ret
test
push
mov
push
mov
adc
adc
mov
outsb
xchg
lcall
fs
int
add
pop
mov
adc
insb
ret
and
out
xchg
sahf
jnp
cmpsb
sbb
push
stc
rep
cmp
dec
xchg
sbb
cmp
stos
jns
bound
and
push
stos
jecxz
push
inc
cmpsb
lahf
pop
or
fcmovne
or
sbb
fnstenv
addl
test
scas
mov
loopne
into
mov
sbb
cmpsb
add
or
aam
adcb
repz
daa
cmp
sub
jg
pushf
scas
mov
mov
aam
xor
in
xor
repz
mov
jnp
mov
arpl
push
movzwl
shll
mov
lcall
mov
mov
push
or
lock
cli
enter
pop
push
aaa
push
xchg
and
fildl
cmp
xor
repnz
inc
popa
cmpsl
xor
mov
shr
ret
ret
int
out
int
loopne
adc
push
mov
js
movsb
clc
adc
ljmp
jge
cmpps
adc
mov
jae
or
mov
adc
xchg
test
popf
dec
pop
xor
adc
popf
loopne
and
mov
rcrb
aad
xor
outsb
jbe
and
or
or
and
imul
and
iret
leave
pop
and
dec
mov
rolb
mov
jle
jge
add
jb
loope
loope
push
inc
ret
cmpsl
iret
mov
out
sbb
out
sbb
adc
xchg
js
fwait
mov
xchg
pop
fisubl
jo
inc
sbb
jmp
cmpsl
in
push
cmp
cmp
imul
std
je
jmp
xor
pop
jp
mov
push
test
in
cmp
push
cmp
sbb
out
lahf
mov
mov
test
filds
cmc
push
divb
rcll
lret
es
jle
scas
jbe
inc
and
pop
mov
das
pop
mov
and
cmp
ret
in
jb
cmp
mov
stc
incb
mov
and
lret
xor
pusha
mov
pop
out
xchg
sbb
cmp
outsl
cmp
orl
mov
inc
ret
dec
cmp
repnz
push
add
fiadds
adc
mov
mov
popf
xor
mov
xchg
sbb
adcl
xchg
xchg
pop
movsl
sahf
into
jle
scas
push
mov
loope
lret
and
jmp
data16
fiaddl
cmc
xchg
mov
cmp
and
shlb
xor
sbb
ficoml
je
push
mov
aas
bound
mov
in
inc
cmpsl
xchg
jne
dec
xor
jl
les
stc
or
cmp
mov
fdivrs
les
jbe
aam
lahf
repnz
addr16
push
mov
outsl
cli
loop
faddp
inc
out
ret
mov
pop
xchg
dec
popf
mov
subb
pop
clc
jae
push
jge
wbinvd
fldenv
and
mov
mov
dec
mov
std
scas
inc
mov
adc
adc
scas
popf
mov
push
arpl
mov
clc
mov
int3
in
int3
insb
adc
add
cli
push
cmc
mov
add
xor
sub
and
mov
push
int
xor
jbe
iret
or
mov
imul
sub
fs
push
jecxz
jnp
mov
jo
mov
mov
cmp
ljmp
cli
mov
sub
and
lock
dec
pop
push
iret
leave
mov
sti
add
inc
cld
pop
sarl
pop
pop
aas
cld
mov
push
sub
cmpsb
or
and
fs
mov
inc
mov
xlat
push
test
mov
sahf
pusha
es
jecxz
scas
add
popa
cld
call
lcall
popf
push
cmp
xor
andb
and
leave
pop
lahf
xchg
or
adc
or
dec
sarl
and
mov
out
pop
in
dec
xchg
repz
das
pextrw
cmp
push
imulb
mov
mov
iret
fs
sub
inc
xor
jns
inc
test
jmp
mov
jl
es
pop
push
add
mov
xchg
jae
aaa
out
pop
push
inc
mov
adc
bswap
aam
lods
cwtl
cs
ljmp
fs
jne
lea
sub
out
adc
enter
mov
sub
mov
mov
iret
xor
lods
jge
or
movsl
scas
dec
popa
jge
jmp
pop
loopne
sbb
jmp
cmpsb
repnz
sarl
rol
xchg
je
mov
pop
push
ja
and
scas
arpl
shll
aam
int3
bnd
sbb
lahf
xchg
dec
cmpsb
sti
inc
hlt
idiv
push
std
cmp
push
mov
push
pop
xor
add
sahf
inc
dec
mov
repnz
jg
inc
cmp
cmpl
pop
push
lea
mov
pop
rcrl
inc
mov
cmp
jno
xor
push
or
jnp
mov
and
nop
pop
inc
mov
loope
push
push
daa
sti
push
jae
ret
mov
dec
cmpsl
add
das
mov
std
inc
stos
sub
push
rcrb
fimuls
std
lret
cli
popl
fiadds
insb
xor
pop
nop
cltd
repz
xchg
mov
adc
into
movsb
popf
hlt
ds
mov
xchg
mov
pop
stos
js
mov
cmc
mov
cli
sahf
idiv
jnp
stos
dec
mov
push
je
stc
subl
mov
push
stc
pop
mov
in
ret
es
push
adc
mov
enter
add
fs
fisttps
jle
push
rorl
or
call
das
fwait
and
mov
xchg
repnz
lret
cltd
inc
addl
sti
push
xor
shll
rcl
cmp
outsl
les
cmpsb
test
arpl
sbb
jo
sub
sbb
imul
lods
sahf
cmc
lods
cmp
mov
gs
mov
xchg
lock
mov
push
movsb
ret
jecxz
mov
and
jno
lds
dec
sarl
loopne
fsubr
or
sub
pop
xorb
and
test
ljmp
cmp
shlb
pop
push
into
pop
cmp
adc
jno
xchg
or
in
xor
neg
popa
mov
inc
stos
adcb
mov
sbb
adc
pop
mov
dec
fnsave
inc
inc
cmp
jo
stos
dec
addr16
sbb
sarb
jo
das
cmpl
xchg
cmpl
stos
cld
pop
cs
cmp
mov
xchg
test
and
leave
ret
fmuls
cmp
into
pop
lods
jg
xor
into
in
loope
inc
jmp
gs
jp
ja
jl
xor
push
xchg
loop
mov
jo
jae
addr16
xchg
or
xor
pop
mov
sarb
pop
mov
cmpb
out
jl
or
ret
int
cmp
inc
std
or
or
cld
arpl
shr
mull
push
and
or
pop
jb
test
sbb
stos
mov
gs
pop
std
mov
lahf
push
in
add
mov
and
add
and
jle
insb
xlat
or
mov
pop
loop
pop
adc
shl
push
xor
pop
cmpsl
call
xlat
and
xor
or
out
in
in
xor
jo
sbb
sbb
adc
sub
rcl
xor
adc
stos
test
mov
or
aad
lds
jne
add
cmp
mov
not
test
int3
mov
cmp
push
pop
outsb
add
mov
mov
dec
mov
das
xchg
sub
jo
das
pop
push
xchg
cld
mov
mov
popa
loope
sub
stc
dec
sti
dec
and
mov
jnp
and
or
mov
inc
cld
cmp
in
and
dec
outsb
or
or
or
inc
mov
sbb
cmpsl
out
jns
stc
push
xor
adc
scas
mov
test
insl
cmpsl
and
ljmp
adc
int
test
pop
pop
and
popl
ret
sub
push
mov
push
cmp
xor
push
xor
pop
sub
clc
repz
sub
push
push
cs
popa
cli
jecxz
mov
xor
or
aad
mov
insb
aad
push
rcrb
cld
mov
pop
xor
xchg
rcrl
mov
mov
orb
iret
loopne
imulb
aas
xchg
mov
nop
nop
mov
jno
xchg
xchg
call
ss
leave
add
js
sarb
cmc
xor
xchg
mov
xchg
addr16
and
mov
jae
and
jb
sub
shll
and
js
imul
hlt
cmp
add
cmpps
mov
fstps
add
and
repz
push
and
faddl
imul
lods
inc
lcall
adc
hlt
sbb
jge
jp
and
jo
and
aaa
sbb
add
push
jmp
js
add
test
pop
mov
sahf
dec
testb
push
push
cmp
xchg
fs
insl
mov
lods
push
sub
add
jae
sub
mov
leave
sub
pop
icebp
xchg
test
aas
int
sub
adc
jl
out
pop
mov
jmp
sbb
sbb
aam
fiadds
rclb
xlat
jl
test
bound
pop
mov
cld
cltd
jno
outsl
push
inc
sub
mov
fwait
out
sub
loopne
inc
scas
sub
stc
into
add
xchg
shrl
aaa
sub
enter
xchg
mov
inc
adc
jnp
jns
dec
lahf
xchg
push
mov
mov
dec
adc
or
aad
ret
push
push
testb
cmp
pop
pop
ret
sub
mov
test
inc
push
mov
inc
inc
pop
adc
jno
popf
pop
imul
out
push
outsl
and
std
data16
rorb
xor
leave
mov
movsb
scas
sub
jbe
and
cld
es
jecxz
les
push
lret
je
fdivrl
imul
cmp
push
mov
clc
pop
aad
xchg
mov
mov
pop
std
fldl
lods
or
xchg
adc
decl
jbe
mov
push
push
push
xchg
adc
sub
aaa
fildl
inc
rcr
push
out
lret
mov
outsl
bound
or
div
out
cmpsl
mov
xlat
xchg
orb
push
stos
add
test
loope
and
sti
rcl
xchg
outsl
test
sbb
ljmp
scas
jb
roll
jbe
lds
and
add
ficoml
in
mov
jo
les
fdivrs
inc
cmpb
push
movsb
mov
dec
daa
insb
les
iret
test
and
enter
clc
cli
insl
bound
mov
xchg
xchg
cli
pop
fimull
mov
cltd
inc
jnp
ret
movsl
ret
dec
mov
add
sbbl
add
mov
push
fisubrs
inc
jge
adc
jmp
mov
sub
mov
insl
inc
push
icebp
jbe
or
imul
inc
xor
scas
std
enter
in
scas
sub
outsl
fimull
and
into
loope
shlb
mov
mov
and
loop
out
xchg
sbb
je
out
push
cltd
push
sbb
mov
int
dec
push
mov
cltd
notl
testb
adc
imul
enter
xchg
adcb
ss
xchg
xlat
test
or
dec
hlt
fwait
rcll
adc
in
push
test
movsb
inc
loope
xor
and
pop
xchg
mov
pop
pop
stos
out
insl
jbe
lds
add
lods
sub
pop
pop
fidivrl
gs
push
inc
mov
cs
fs
pop
jo
das
jae
xlat
inc
dec
loopne
addb
adc
xor
jb
rol
jp
or
jne
or
movsl
in
push
test
sbb
shl
cld
or
outsb
nop
outsl
js
fstl
cli
sbb
stc
cmp
pop
sub
lahf
cmp
stos
aaa
cmpl
pop
dec
xchg
mov
shl
dec
les
inc
adc
ljmp
or
dec
call
pop
mov
scas
add
jne
and
sbb
cmc
and
fs
test
lea
ret
subl
cmp
in
sarb
cmp
dec
call
mov
pop
lcall
clc
sub
jge
bound
mov
xchg
adc
cmp
mov
inc
out
jg
sub
dec
or
lock
jle
and
adc
dec
jg
pop
ret
push
xchg
jge
jbe
clc
fidivl
stos
addr16
cmp
pop
adc
mov
ror
and
loop
gs
adc
std
cli
daa
xchg
pop
adc
push
imul
adc
nop
addb
dec
jg
adc
insb
rcl
insl
fiadds
xchg
ss
adc
subl
mov
and
out
cwtl
es
sbb
mov
cmc
or
mov
mov
push
pop
ljmp
sbb
mov
inc
cwtl
ret
push
leave
jnp
fs
imul
push
mov
jo
push
mov
mov
pop
sti
add
das
cmp
sub
inc
outsl
scas
mov
push
push
jbe
push
fldcw
cmp
pop
fidivl
pop
or
fists
mov
jg
push
mov
fsts
movsb
fdivs
add
ljmp
call
std
hlt
fnstsw
fwait
push
or
and
iret
or
fisttpl
outsb
sbb
inc
mov
lds
jns
addr16
dec
mull
cmpsl
and
pop
dec
push
lods
arpl
lcall
daa
sub
ljmp
cmp
nop
fstl
lock
mov
dec
pop
xor
dec
sbb
mull
ja
mov
packsswb
pop
scas
mov
sbb
cld
addr16
jg
and
cli
data16
fdiv
sub
jae
pop
push
je
xchg
repz
sbb
sahf
xchg
lods
xor
mov
mov
cmp
insl
cwtl
push
mov
imul
ror
sarb
push
iret
pop
xor
inc
push
lcall
fwait
mov
inc
push
loope
int3
cltd
outsb
dec
je
fcomps
or
mov
imul
fdivrl
and
and
subb
and
mov
jle
flds
jo
sahf
cltd
hlt
xor
push
xor
inc
and
shrb
fld
enter
mov
fwait
push
into
inc
inc
movsb
or
and
into
in
add
cld
data16
aaa
bndldx
in
insl
push
ror
sbb
mov
fiaddl
ret
jle
fiadds
imulb
fistpll
mov
adc
pushf
adc
mov
in
mov
ja
mov
sub
loope
lods
xchg
mov
sub
mov
leave
pusha
sbb
decl
fsubrl
rcll
or
jge
push
pop
fdiv
pop
das
mov
out
lods
nop
std
cmc
loop
out
in
stc
adc
aam
arpl
lahf
jne
or
arpl
xchg
jle
fldenv
int
cltd
mov
lea
jmp
push
pop
pop
pop
jmp
pop
mov
dec
push
mov
out
loop
hlt
out
mov
pop
inc
aad
aas
fdivp
popf
sti
repnz
dec
sub
flds
ljmp
and
and
insl
icebp
or
jb
popf
mov
fwait
xor
outsb
insl
jp
pop
add
mov
pop
mov
push
mov
hlt
in
outsl
push
jb
push
cmpsb
or
pop
pushl
adc
fs
gs
inc
adc
pop
lahf
pop
aam
ffreep
jl
xchg
push
push
dec
add
push
dec
and
sbbb
lret
sarb
add
fimull
addr16
inc
add
inc
xlat
or
out
pushf
or
inc
clc
sub
into
xchg
push
inc
std
call
jle
xchg
xchg
test
test
ds
cmp
subb
add
adc
int
rol
test
addr16
or
and
ja
test
mov
sarl
sbb
xorl
ret
fucomip
lret
dec
dec
lahf
pop
addr16
mov
pusha
sahf
dec
or
fnstsw
jle
xchg
ret
pop
repz
inc
lret
and
sub
xor
push
cld
xor
std
adc
addr16
jmp
pop
mov
push
adcl
insl
or
fidivrl
in
push
push
mov
mov
roll
outsl
jmp
fbld
jge
xchg
movsl
int
scas
pop
cs
cli
call
mov
pop
aaa
inc
sub
pop
add
cltd
sahf
or
pop
addr16
cmp
lret
ljmp
popf
insb
hlt
sub
aas
cwtl
std
lahf
aaa
sub
cli
aaa
push
pop
cmp
mov
into
mov
add
loope
fsub
iret
jg
cmp
inc
inc
push
push
jo,pn
ss
pop
fnstsw
mov
jmp
gs
mov
inc
xor
dec
mul
or
push
out
xchg
or
popf
mov
iret
or
xchg
je
dec
mov
aam
lock
fnstcw
push
or
and
mov
dec
sub
mov
dec
add
adc
jmp
movntps
push
sub
xor
add
mov
adc
shll
mov
int
inc
pop
and
in
int3
mov
push
fidivrs
inc
or
sbb
cwtl
mov
xchg
adc
sub
and
outsb
inc
jae
adc
and
pusha
insb
adcb
push
and
out
mov
sbb
xchg
test
add
cltd
addl
xchg
sub
lock
or
push
adc
push
cmp
hlt
cwtl
push
pushf
into
movsb
mov
or
int3
and
mov
dec
mov
enter
imul
mov
in
inc
test
lea
mov
test
mov
push
dec
push
mov
cli
pop
or
xor
inc
push
cwtl
jb
dec
jnp
out
inc
pusha
cmpsl
inc
movsb
loop
inc
aaa
daa
lcall
sarb
xchg
ret
add
fwait
and
push
xchg
dec
das
fadds
fimuls
imul
mov
sbb
outsb
les
fst
xor
jg
sbb
or
jbe
jge
add
jle
dec
in
cmpsl
sbb
ret
dec
repnz
test
mov
add
lret
divb
dec
push
xor
idiv
jno
xchg
lahf
pop
or
inc
jnp
add
gs
shll
lods
mov
jmp
cmp
sub
xchg
ret
daa
jge
or
sub
mov
int3
popf
mov
out
xlat
sub
jle
call
push
cmp
lcall
mov
and
cmp
les
dec
addr16
and
jnp
addr16
imul
push
pop
popa
cmp
jp
aaa
leave
imulb
sub
ret
jl
stos
out
pop
in
lcall
mov
stos
bound
stos
inc
dec
mov
mov
push
dec
fisubrl
pop
sarl
sbb
dec
mov
loopne
inc
aam
dec
pop
xchg
lods
cmpb
fwait
xchg
cli
sub
pop
adc
insl
fsub
ret
sbb
icebp
xlat
mov
jne
cmp
das
popa
test
pop
pushf
out
sti
dec
lock
xor
stos
xchg
jge
xchg
in
add
mov
mov
pop
aad
add
lock
push
sbb
sbb
mov
lock
push
ficomps
ss
je
inc
and
and
jne
in
faddp
xchg
in
add
sub
jg
mov
dec
dec
fstpl
push
cmp
xchg
xor
and
sbb
mov
mov
aam
pop
gs
stc
jecxz
xor
mov
cmpl
mov
test
jp
sub
mov
outsl
inc
inc
fstps
cltd
ficoml
pop
xchg
push
stc
mov
pmuludq
lcall
mov
mov
pop
jg
jbe
pushf
and
inc
inc
cmp
out
add
cmp
mov
ds
sbb
sub
adc
lret
call
subl
jb
sbb
pop
pop
pop
hlt
jecxz
jge
adcl
leave
repz
mov
lock
dec
aas
rcll
xchg
lds
xchg
loope
fs
mov
mov
push
shrl
cmp
or
sti
jns
sarb
inc
rcrl
sub
push
inc
ljmp
jb
pop
dec
sti
nop
pushf
nop
inc
push
in
cmp
sub
mov
aaa
fildl
rorb
mov
or
pop
inc
sarb
mov
cmc
xchg
push
sub
shl
ja
out
iret
jae
addb
inc
in
fistpl
imul
inc
and
push
add
pop
push
sbb
mov
adc
mov
das
popa
dec
jge
aam
cmp
mov
or
jno
idivl
loope
cs
push
push
fcomp
es
mov
mov
iret
shrb
mov
daa
pop
clc
adc
adc
push
add
test
xchg
and
mov
pop
leave
gs
in
lods
mov
mov
test
imul
popf
rcll
inc
or
fwait
add
adc
popf
sub
out
mov
inc
xchg
pop
fs
push
jle
dec
cltd
inc
xorb
sub
mov
fcoms
std
add
xchg
out
cmp
fwait
aam
inc
daa
mov
mov
push
gs
cs
inc
ds
dec
jo
loopne
mov
rcrb
mov
jb
adc
mov
or
repnz
gs
mov
jno
bound
popf
xchg
dec
fs
add
jbe
jg
and
add
shll
leave
and
add
fcmovu
shlb
lods
mov
xor
nop
sbb
das
aam
jns
in
repnz
cmp
mov
ret
mov
adc
cmp
inc
dec
mov
or
popf
and
out
sbb
dec
or
ljmp
hlt
dec
jge
sbb
and
arpl
dec
mov
stos
ljmp
jl
hlt
pop
and
mov
cmpsb
push
push
mov
leave
jp
je
pop
test
jbe
test
ret
adc
add
aad
add
pop
adc
jecxz,pt
shll
ret
jmp
in
sub
imul
sub
mov
aad
stos
pop
inc
cmp
inc
sub
dec
out
adc
add
cmp
add
jnp
add
adc
sbb
inc
mov
std
loopne
xor
xor
mov
add
mov
sub
sbb
push
daa
test
mov
cmp
or
sbbb
xor
xor
rolb
xchg
cld
pusha
mov
data16
addb
jecxz
rcrb
insl
std
popa
fstps
test
pop
sahf
push
popf
notb
jae
shll
push
mov
xchg
pop
or
or
shrb
sarl
jle
outsb
lret
lock
mov
mov
and
mov
gs
and
ss
pop
push
clc
and
in
pop
jge
or
outsb
cmc
sbb
sbb
add
ret
popf
inc
insl
and
movsb
out
mov
xchg
sbb
adc
dec
call
mov
xor
movsb
mov
inc
xor
sbb
in
iret
add
dec
cmpsl
test
sahf
push
xchg
dec
push
adc
rorb
cmpsb
xchg
or
mov
jmp
inc
mov
mov
aaa
mov
aaa
pushf
lret
shl
or
xchg
add
lods
imul
out
add
add
loop
test
imul
cltd
mov
add
jae
jnp
push
adc
adc
jnp
cld
fadds
xor
in
lds
loop
enter
xlat
jle
xchg
stos
push
jmp
test
mov
ror
or
test
das
scas
xchg
mov
in
orl
pop
dec
cmp
mov
imull
mov
xor
or
fisubrs
lcall
cmp
add
dec
insl
ret
inc
pop
push
sbb
test
aam
arpl
lret
in
sub
subb
dec
sub
scas
cmp
arpl
add
fmull
lcall
out
int
xor
popf
cmp
add
js
adc
pop
sbb
dec
aam
mov
jns
repnz
test
cmp
jecxz
mov
xchg
test
cmp
mov
mull
outsb
xorl
outsl
outsb
push
movsl
mov
or
xor
mov
inc
js
out
mov
lcall
fiaddl
pop
rcr
lcall
int3
cmpl
fstp
clc
jle
popf
dec
cli
jmp
push
div
lds
stc
adc
popa
and
push
out
xchg
fidivl
sbb
xlat
inc
ret
mov
cmpsb
and
mov
or
stc
mov
jmp
sub
addr16
dec
daa
dec
dec
std
test
fsubrs
xchg
sbb
or
test
add
enter
xchg
es
push
sbb
adc
xor
dec
mov
les
adc
cwtl
push
or
pop
adcb
sar
stc
lock
sti
fwait
cli
dec
shll
push
xchg
lods
xchg
mov
idivl
insb
push
dec
aad
in
lods
les
push
xchg
jmp
jb
mov
lcall
fildll
fldt
or
rcrb
or
dec
lcall
ss
cmc
in
mov
add
push
lret
xor
mov
push
les
or
into
out
jne
int3
mov
dec
inc
jle
push
test
mov
sub
push
mov
xor
add
mov
jmp
jns
mov
js
mov
movzwl
mov
cmp
fldl
fwait
mov
outsb
bound
jb
in
mov
xchg
int3
sub
pop
stc
push
lret
test
and
stos
stos
inc
repz
insb
jne
aaa
push
jle
xchg
popl
jge
pop
pop
xchg
orb
xor
cmp
mov
xor
imul
mov
cltd
cwtl
lret
cmp
push
sub
aad
mov
xchg
pop
and
fcompl
insl
cmp
xchg
mov
icebp
arpl
call
dec
adc
inc
outsl
xchg
dec
incb
scas
mov
or
xchg
pop
sub
aas
add
fcmovnbe
cmc
aad
jmp
push
mov
les
ret
jnp
cmp
or
ret
lea
push
xor
mov
xor
imul
xchg
insl
add
sbb
sub
xor
mov
sbb
notb
or
mov
jno
inc
adc
cmp
hlt
pop
push
push
jmp
adc
sbb
mov
xor
pop
ret
push
mov
aad
jge
data16
jmp
mov
scas
sbbl
je
inc
pop
fs
push
les
jmp
into
paddd
jge
in
push
movsb
scas
mov
mov
sbb
data16
cmp
daa
into
cmp
movsb
pusha
or
dec
and
or
jmp
lds
and
push
adcb
scas
je
add
and
pop
mov
inc
dec
cs
mov
sbb
shl
pop
imul
cmp
movsb
in
mov
mov
je
cmp
add
in
mov
rcrb
mov
ret
pop
rorl
test
mov
sub
testb
mov
inc
lret
cs
jb
retw
shll
stc
push
cmpsl
lods
sub
jnp
or
push
xor
add
jge
int3
pop
inc
xlat
and
out
lea
add
in
mov
hlt
decb
subb
imulb
add
xchg
out
movsl
push
pop
loop
and
mov
iret
leave
fs
pushf
shl
add
in
adc
or
and
inc
cmp
out
lret
inc
int3
imul
sub
dec
mov
mov
add
add
adc
dec
dec
pop
adc
dec
lcall
fstpl
and
in
mov
mov
outsl
scas
mov
inc
sahf
add
mov
out
add
lahf
inc
xor
mov
push
pop
leave
dec
mov
int3
lsl
rcll
or
shl
pop
push
xchg
jp
shr
inc
jnp
pop
in
sbb
cmp
fdivrp
in
inc
jmp
xor
inc
sbb
mov
inc
test
int
popa
mov
testl
jno
fdiv
push
xchg
mov
mov
mov
add
or
arpl
sub
cmpsl
aas
inc
bound
iret
mov
or
pop
cmpsb
xor
sti
fwait
inc
sbb
scas
mov
sbb
dec
sahf
lret
leave
mov
cwtl
sub
mov
ss
mov
orl
imul
pop
fnstenv
push
enter
fdivs
pcmpgtw
push
icebp
xor
mov
outsb
ds
stos
mov
xor
adc
xchg
ja
rorb
cmp
stos
sbb
xorb
cmc
jmp
cmp
sti
push
out
test
stc
clc
mov
fimull
data16
out
imul
push
loop
call
pusha
lods
sbb
pop
push
sahf
mov
mov
pushf
shrb
jge
shl
loopne
push
xor
mov
in
and
xchg
aas
add
or
loope
xor
cmp
in
into
cmp
std
fcomip
sub
shlb
or
xor
jge
stos
jo
lods
jnp
mov
mov
inc
cmp
cmp
lock
pushf
xor
add
inc
dec
pop
ret
fwait
pushf
aaa
data16
xor
dec
shl
testl
lret
dec
sbb
push
inc
or
mov
outsl
xor
jnp
jge
add
lea
std
dec
out
push
pusha
sbb
ja
movsl
sbb
imul
les
popf
shll
adc
cmp
push
stos
lahf
sti
dec
pop
ret
mov
xchg
loopne
pop
xor
pop
hlt
xchg
mov
or
jge
enter
push
out
fnsave
rorb
or
inc
jg
dec
mov
xor
mov
subl
fiadds
and
mov
lods
aaa
jp
add
aad
mov
fimuls
xor
xchg
pop
rcr
test
aam
scas
jnp
aas
sbb
push
int3
adc
adc
bound
adc
popa
pop
out
mov
push
mov
cmpsb
test
push
lret
xor
dec
inc
jg
cmp
jecxz
xchg
and
cmp
and
xor
mov
fisttpl
and
inc
dec
jno
nop
jbe
mov
fdivs
ja
mov
jno
insb
test
out
jbe
push
mov
pop
jp
out
xlat
stos
cmp
xchg
stos
ret
or
lock
inc
and
pushl
into
iret
sub
jne
out
jle
add
inc
and
pusha
lods
mov
mov
push
jno
iret
dec
pusha
and
bound
adc
or
pop
mov
cmp
clc
push
mov
daa
icebp
xchg
cmp
les
sbb
and
test
call
inc
jmp
lock
or
sti
daa
xor
test
pop
in
inc
js
stc
jg
rcl
aad
mov
iret
and
test
int3
jecxz
and
push
adc
stos
mov
pop
inc
and
scas
sbb
jmp
mov
sbb
sahf
jae
imul
adc
mov
rclb
test
cmpsb
jo
jl
inc
mov
sbb
icebp
xor
clc
pop
fisubs
test
add
cmp
sub
test
dec
dec
mov
mov
ror
cmc
inc
add
test
loopne
int
out
and
mov
dec
pop
xchg
dec
setbe
sub
add
es
ss
insl
sbb
rol
and
xchg
movsl
iret
fwait
daa
movsl
pushf
test
push
outsl
cwtl
jnp
or
nop
insl
jg
and
insl
push
imul
adc
push
and
adcb
fsts
inc
or
jl
scas
int3
cld
or
jl
andl
movsb
mov
or
outsb
lahf
cs
test
addl
dec
push
sub
dec
mov
add
xchg
arpl
ss
out
fnstcw
arpl
dec
mov
shrl
lret
jle
shlb
push
sarb
or
pop
cwtl
repnz
jo
loope
jno
jns
xor
into
fldenv
and
dec
aaa
mov
call
fimuls
stc
ja
adc
std
push
lock
out
test
data16
cs
lret
pop
ljmp
inc
cmp
adc
pop
test
cltd
sbb
lea
mov
sbb
test
cmp
cli
popa
jb
xchg
xlat
push
test
dec
sub
sub
sbb
lret
xor
sbb
inc
lret
dec
cmpsl
inc
jb
xchg
rcll
hlt
jl
ss
xor
js
or
sbb
cmc
xor
scas
xchg
adc
or
out
loopw
aad
mov
divb
test
dec
loopne
aad
dec
pushf
sbb
inc
adc
or
and
sbb
or
cmpsb
cmp
add
rcll
pusha
add
jne
lret
imul
subb
push
mov
jp
jns
add
add
mov
addb
movb
lahf
xlat
shrl
pop
imul
mov
adc
cmp
xchg
sub
popf
xchg
hlt
lods
shrl
das
adcl
or
dec
inc
or
sbb
sbb
push
or
mov
loop
or
test
sarl
shlb
inc
mov
rcll
push
stos
iret
jg
cs
push
jecxz
mov
ljmp
inc
rolb
push
rcll
xchg
adc
out
xchg
jmp
jo
popf
mov
inc
pop
sub
mov
jl
xor
mov
mov
add
or
xchg
int3
ja
data16
movsl
into
sti
dec
pop
jge
xchg
mov
mov
cmp
inc
mov
out
js
js
jmp
imul
sub
cmp
mov
fsubrp
stc
psubsb
mov
xchg
lcall
xchg
jecxz
out
loope
test
mov
pop
rorl
add
cli
mov
jmp
or
insl
ret
es
pop
neg
mov
loope
xchg
fisubs
daa
dec
fwait
mov
xchg
sbb
xchg
mov
das
pop
enter
popa
movsb
adc
xchg
or
mov
mov
lea
fs
aad
adc
cltd
ds
and
sahf
add
test
lds
or
cli
les
jle
addr16
in
pop
imulb
into
inc
add
inc
jp
push
xchg
out
adc
les
jle
jns
pop
out
jb,pn
fchs
mov
decl
dec
in
cmp
or
dec
shlb
sub
mov
ja
pop
push
stc
mov
sarl
adc
xchg
stc
jne
add
pop
jbe,pt
inc
pop
lds
jmp
sbb
in
aas
inc
inc
mov
jge
lods
inc
pushf
ss
cmp
mov
jge
or
aaa
pop
add
dec
adc
loop,pn
push
dec
loope
sbb
sub
lret
aaa
popf
jl
and
roll
addr16
jnp
jmp
mov
xor
insl
mov
pop
mov
ljmp
in
add
sbb
or
or
adc
add
out
xchg
dec
pop
jmp
push
stos
mov
cmp
insl
dec
cmpsl
hlt
aam
in
in
mov
sub
dec
imul
mov
hlt
sub
mov
or
icebp
or
aaa
cltd
aaa
inc
mov
out
push
add
cltd
lret
loope
push
xchg
mov
divb
mov
les
mov
push
mov
das
fmuls
mov
pusha
xchg
mov
call
push
ret
cmp
push
jns
test
out
push
imul
dec
xchg
subw
jnp
imul
xchg
in
sub
ja
sub
mov
inc
hlt
cmp
and
sbb
jnp
sbb
mov
adc
xchg
jbe
add
test
pop
addb
scas
mov
ljmp
pop
mov
cmp
mov
pop
popa
push
rclb
and
lea
cmc
insl
adc
mov
jo
push
inc
scas
inc
mov
pop
xlat
movsb
cmp
xchg
insb
pop
mov
lods
aas
aas
lcall
jecxz
scas
imul
inc
jb
push
dec
pop
jecxz
lret
sub
sbb
sbb
leave
cmp
xchg
clc
sub
push
shll
outsb
outsl
lret
shll
js
leave
sub
and
cltd
sub
and
pop
and
icebp
iret
mov
cmpsl
out
or
xchg
test
sub
movsl
jns
mov
mov
imul
data16
lret
adc
ja
mov
ds
ror
xlat
sbb
or
jnp
stc
or
sub
loop
inc
push
ja
or
jmp
dec
daa
xlat
xchg
adc
mov
dec
ja
pop
cmc
notl
or
int
push
adc
jno
jp
stos
adc
test
inc
jne
out
and
bound
dec
xorl
sbb
mov
fmuls
sbb
fcoms
cmp
or
xor
shlb
leave
fwait
xchg
cld
jmp
loope
inc
cld
mov
jae
aas
xchg
push
dec
and
pop
mov
popa
in
cmp
push
sbb
mov
add
out
cld
shll
push
or
outsb
arpl
jmp
xlat
ficoml
cmp
push
inc
loope
jno
mov
clc
loope
sahf
pop
popf
movsl
cmp
or
jge
fwait
std
repz
push
and
cmp
pop
xchg
cs
sbb
jb
xor
adc
lcall
aam
sub
jae
mov
mov
loop
dec
cmpsl
daa
add
mov
cmp
shll
and
cli
testl
inc
mov
jl
sti
mov
out
aaa
inc
scas
aaa
popa
or
leave
in
mov
sar
sahf
sti
cltd
push
xor
mov
prefetch
mov
movsb
push
pop
iret
jnp
repz
xor
fnstcw
jbe
and
pop
xrelease
aam
je
dec
jne
lret
sbb
inc
xor
shlb
cmp
out
and
mov
inc
sbb
mov
push
icebp
cmp
gs
pop
fwait
dec
shlb
cmpsb
push
pushf
pop
cmp
adc
adc
je
pop
mov
cmc
xchg
and
jo
pop
in
jb
mov
outsl
shlb
jecxz
in
push
fnop
add
cmp
push
or
lock
jp
into
and
lock
xorl
pop
add
xor
cltd
popa
jge
pop
adc
shrl
pop
inc
in
adc
addl
sub
out
mov
fwait
ss
lea
cwtl
jmp
add
insb
into
xchg
repz
pop
jns
call
sub
ror
subb
dec
pop
stc
xchg
aad
cmpsb
cwtl
push
pop
mov
shrb
enter
js
lds
push
sarb
add
inc
arpl
mov
add
repnz
in
mov
xchg
mov
pop
mov
movsb
xor
cmpsl
push
adc
sub
sbb
xchg
andb
cmpsb
inc
jmp
insb
repz
jo
pop
xchg
cltd
jmp
lret
fisubs
mov
push
repz
add
stos
lods
xor
lods
push
ds
jle
lret
inc
mov
outsb
and
ret
or
xlat
lods
loop
jle
sbb
dec
loop
repnz
nop
push
xor
pop
mov
enter
fisttpl
test
insb
xor
adc
pop
xchg
push
das
and
dec
je
or
xchg
pop
push
hlt
fs
orb
dec
jbe
add
sub
mov
mov
mov
out
into
cmp
jg
iret
ret
pop
cmpsb
dec
dec
sbb
loopne
sbb
in
scas
ret
or
ds
pop
mov
mov
iret
cs
iret
aad
push
sub
test
jmp
incl
cld
repz
push
fucomp
rol
dec
xorb
xchg
xchg
shl
test
add
test
or
movsl
xchg
or
stos
xchg
add
xor
outsl
and
and
fs
lods
in
lcall
or
push
adc
pop
mov
test
jg
or
pop
dec
insl
cmpsl
ss
dec
out
popa
push
and
mov
cmp
pop
sbb
mov
rcll
push
cmpsb
fistpl
xor
push
cld
in
sbb
mov
cmp
dec
jnp
lret
mov
and
cmpb
test
xor
movsb
xchg
push
lret
out
test
xor
xor
ljmp
inc
iret
int
cmpsb
push
mov
cmp
repnz
jp
outsb
aam
aas
hlt
push
std
add
test
dec
rcrb
mov
mov
mov
add
adcb
testl
adc
push
nop
and
push
outsb
adc
lar
inc
mov
pop
jae
insl
mov
arpl
mov
arpl
sbb
mov
xchg
adc
lds
pop
cmpsl
lods
ret
jnp
cltd
icebp
push
out
adc
fptan
jle
push
mov
push
sbb
aam
adc
stc
js
sti
xchg
sub
cmp
xor
xor
movsb
mov
pusha
push
dec
stos
mov
xor
pushf
sbb
mov
js
cmp
repz
adc
jbe
jl
fdivs
mov
test
jp
pop
jae
jbe
aas
cmp
enter
and
movsb
dec
jge
popl
sarl
rolb
movsl
jge
sti
sub
xor
idivb
repnz
push
jns
hlt
in
arpl
mov
cwtl
inc
aad
fwait
push
fwait
jno
pop
hlt
and
idivb
mov
pop
iret
fcomps
dec
lcall
imul
rorl
loope
jno
scas
xchg
cltd
pusha
mov
pop
jb
in
and
mov
jno
jnp
xchg
mov
jp
fadds
jp
jbe
mov
sbb
sti
aam
xorl
jge,pt
push
mull
or
and
lods
xor
insb
sub
aas
ds
xor
loopne
and
mov
jle
mov
jo
jp
mov
or
test
test
adc
and
pop
push
in
jno
lret
rorl
fbstp
adc
iret
mov
scas
sbb
xor
mov
int3
mov
out
add
stc
mov
out
jecxz
push
push
pop
add
cmp
lods
out
adc
jg
int
stc
int
mov
pusha
loop
jno
mov
xchg
push
clc
inc
pop
icebp
fstpt
push
sub
mov
out
pop
xor
int3
push
or
cwtl
lret
popf
icebp
movsb
add
mov
mov
ss
lahf
fwait
pop
xchg
stc
lcall
inc
into
cmc
cld
add
add
and
xlat
add
push
jle
jno
imul
sub
jae
mov
mov
mov
pop
mov
dec
jns
leave
dec
or
shll
xor
call
f2xm1
outsb
pop
aas
cmc
dec
clc
jp
xor
push
mov
jo
mov
test
sbb
sahf
ficoms
popf
addr16
out
pushf
dec
lahf
cli
jns
in
mov
imul
or
mov
cmpsb
jmp
das
test
pop
push
mov
or
incl
jns
push
into
and
pop
lret
fs
iret
and
jecxz
es
push
push
out
out
jecxz
cmpsb
mov
movsl
mov
jnp
cwtd
push
adc
out
cwtl
dec
cltd
mov
cmp
add
xor
xchg
jne
std
out
lods
test
mov
jg
xor
xor
inc
cmpsl
pop
add
stos
pop
and
rorb
mov
jge
and
cmpsl
xor
lret
loope
inc
test
stc
fildl
push
or
mov
gs
or
jle
xor
in
mov
mov
pop
dec
test
adc
xor
outsb
jle
mov
jnp
sub
sahf
outsl
pop
sub
shrb
mov
push
filds
mov
out
fs
out
mov
fsts
xchg
jb
les
mov
or
fmul
sub
mov
push
or
lds
sbb
xor
sub
aaa
lretw
cwtl
sbb
aas
fsubs
push
andl
xor
fidivl
js
movaps
in
adc
or
mov
and
push
mov
or
repz
push
sahf
std
pop
out
push
sbb
mov
andb
push
and
stc
andb
shl
xchg
mov
test
jl
mov
push
repnz
cmpsb
push
test
xor
je
sub
jecxz
aaa
pop
arpl
fucomi
fstps
dec
sbb
cmpb
pop
or
cmp
fdivs
pop
push
jecxz
xor
cmp
cmp
sub
fmull
adc
or
cmpb
popa
cmp
cld
cmp
dec
loopne
mov
daa
mov
psubd
scas
insb
fs
sub
sub
mov
xchg
xor
lds
mov
jns
rolb
scas
xor
adc
imul
loope
clc
cmp
pop
bound
hlt
jbe
sbb
mov
stos
in
in
insl
int3
cwtl
bound
mov
mov
lret
push
mov
ret
js
aas
jecxz
sbb
lret
cltd
scas
mov
loop
stos
lods
adc
xlat
lock
loope
or
xchg
rolb
pusha
xchg
inc
arpl
cwtl
jb
fsubp
mul
jecxz
sub
jmp
fistpll
insl
loop
xchg
add
mov
mov
daa
cmp
inc
das
rorl
loopne
in
imul
rorl
pop
push
sahf
sarl
mov
lea
in
test
jecxz
insb
repz
sbb
cmp
sub
sbb
xor
popa
jb
cmp
cltd
test
rol
scas
lahf
xor
out
aam
pop
mov
mov
insb
fimuls
hlt
mov
pushw
mov
xchg
iret
loop
negb
xorb
lds
fdivrl
mov
add
fs
popf
cld
add
xchg
clc
test
pusha
dec
das
mov
das
scas
sub
insl
ret
cmp
dec
pop
jae
sub
repnz
arpl
dec
stos
mov
pop
outsl
xor
mov
push
sahf
out
cltd
jno
jecxz
jmp
fstps
sub
pop
pop
hlt
jb
in
in
xor
pop
enter
cmpsb
sti
les
ljmp
sbb
or
outsl
sbb
cld
jg
pop
xlat
ret
outsb
rclb
xchg
rolb
dec
jl
mov
je
pop
addb
out
cmp
jno
ja
jnp
adc
fdivrs
jb
jae
pop
ja
out
js
jne
pop
mov
or
repnz
popf
dec
lahf
cmp
iret
and
sbb
sbb
fdivrl
jo
movsb
jno
shr
mov
cmp
int
adc
mov
push
movb
xlat
cmp
xor
mov
out
outsl
test
mov
insb
lds
inc
fistl
lock
mov
sub
les
cmpsb
jnp
mov
add
ljmp
xor
xchg
add
inc
bnd
or
push
fstpl
insb
out
cmp
call
sbb
pop
mov
mov
xchg
jno
icebp
sbb
cmp
aam
ds
xor
inc
sub
jb
xchg
jl
sar
jecxz
in
fsts
mov
fstps
mov
dec
cmpsb
cmp
fidivs
es
sti
pop
ja
mov
mov
clc
push
cwtl
sub
xor
fwait
lock
sbb
jnp
dec
fstpl
mov
push
outsb
pop
mov
xor
enter
lds
xor
dec
or
loop
stos
xchg
mov
push
and
adc
mov
pop
mov
test
cmp
sbb
and
fs
jg,pn
sahf
xor
movzwl
fwait
and
jmp
cmp
cmp
out
pop
mov
shll
into
adcl
sbb
push
mov
mov
cmpsb
loope
xchg
test
test
mov
xchg
push
faddl
in
scas
dec
popa
and
and
aas
or
fcoms
pusha
mov
popa
bound
adc
mov
xor
fs
push
cmc
out
and
out
cwtl
adc
loop
mov
mov
adc
mov
or
and
pop
das
cmp
jbe
sub
cmp
std
xchg
imul
loope
dec
mov
jb
xor
lods
and
nop
add
sub
mov
xchg
cmp
cmp
mov
repnz
jl
sub
sbb
cmp
fld
pushf
pushf
pop
sub
inc
aad
jb
push
xchg
xchg
out
in
out
xchg
fildl
mov
inc
or
or
push
sbb
sahf
out
xchg
out
sbb
outsl
sub
add
sub
fimull
mov
pusha
cmp
fidivrs
leave
jno
xor
mov
add
fwait
sahf
sarb
imulb
mov
pop
sti
jmp
test
ret
lahf
mov
imul
dec
xchg
sti
test
add
xchg
jecxz
mov
xor
ss
dec
sbb
int3
pushf
jmp
fs
rcrl
mov
fiadds
cmc
aad
inc
cmp
dec
mov
rorl
jno
or
inc
cld
add
mov
cli
push
enter
pusha
fsubs
or
push
xchg
rcr
jns
cmp
arpl
fnstsw
inc
adc
cwtl
mov
inc
xor
add
daa
in
cmpsl
mov
lods
pop
mov
push
pop
movsl
xor
fnstcw
adc
push
adc
mov
in
insl
lock
jmp
addr16
xchg
or
jmp
jp
adc
lret
mov
push
aas
adc
push
adc
divb
sbb
dec
mov
adc
mov
ljmp
das
les
add
outsl
sbb
jnp
adc
test
xchg
idivb
popf
sbb
mov
mov
cmp
rcll
cs
test
imul
or
insb
scas
cmc
test
and
mov
inc
adc
addl
or
adc
sbb
cmp
les
flds
in
test
test
xlat
pop
sbb
or
pop
fs
loop
adc
das
mov
gs
dec
push
in
loopne
push
mov
adc
mov
fs
xchg
testb
or
add
dec
aam
and
lret
sub
incl
out
gs
ret
or
rorl
insb
test
pop
lret
rorw
push
or
lret
mov
insl
mov
sub
in
movsb
jne
scas
jle
cmpsl
jns
mov
cmpb
int
or
shlb
fnstcw
stc
popf
fstps
test
in
jg
insb
push
push
lock
or
fcom
inc
dec
mov
scas
mov
xchg
pop
out
cmp
daa
out
test
mov
shr
mov
dec
pop
cmp
fnsave
popf
push
scas
loopne
test
push
pushf
sbb
inc
idivl
nop
jb
dec
fisubrs
rcl
gs
popf
add
mov
dec
and
ret
and
mov
popf
and
sub
push
xchg
mov
sub
xor
movsl
xlat
lret
mov
test
test
dec
pop
pop
scas
or
fstps
pop
loopne
dec
les
or
pushf
inc
nop
sub
sub
pop
icebp
add
lret
cltd
iret
xchg
dec
imul
jmp
or
lret
cmpsb
out
ret
cwtl
test
mov
mov
int
jbe
leave
lea
pop
out
scas
fwait
sub
ror
add
jne
and
loopne
xchg
push
cmp
popf
xchg
std
push
out
loop
stos
and
mov
in
mov
add
pop
repz
mov
add
mov
or
sbb
insl
mov
cs
add
hlt
loope
xor
jg
outsb
pop
or
mov
out
or
push
iret
jle
cli
dec
js
jg
lea
cmpsb
out
sub
and
cs
fwait
xchg
and
cmp
cmp
cmp
jnp
fiaddl
stos
push
cltd
and
movsl
addb
insl
xor
aas
xchg
js
mov
push
outsl
ja
fcomps
or
mov
fwait
in
std
lretw
push
xchg
sub
loope
adc
inc
inc
pop
sar
add
mov
out
leave
repz
mov
and
push
xchg
adc
pop
sarl
mov
fidivl
push
push
dec
movsb
add
daa
lea
jge
add
push
cwtl
adc
cld
sbb
out
mov
jne
sarl
insl
cmp
mov
or
or
bswap
or
shlb
ss
lcall
cmpsb
ficoml
repz
sub
inc
xor
stc
dec
mulb
cmp
cmc
push
ret
dec
iret
fstpl
scas
lods
and
xchg
test
lahf
xlat
or
movsb
and
clc
es
inc
pop
sub
jbe
js
loopne
dec
pop
mov
scas
mov
push
add
dec
loopne
shlb
dec
popa
sub
test
sub
or
sbb
add
sbb
aad
pop
inc
leave
and
insl
aad
rep
repz
icebp
das
daa
xor
mov
rcr
std
xor
sbb
out
mov
lcall
push
nop
lcall
sub
popa
adc
je
mov
xchg
cmp
xor
lcall
rorl
imul
sub
push
pop
clc
ja
jno
fcmovnbe
cmpsl
xor
jb
xchg
lcall
sbb
rcr
lods
jecxz
cmp
jb
inc
cwtl
mov
lods
or
shlb
dec
pop
orl
push
push
adc
jle
jb
xchg
dec
xlat
stos
push
sub
or
pop
add
cmpb
adc
pop
mov
fwait
mov
outsl
lea
mov
arpl
stc
lahf
cwtl
mov
ud0
jae
out
ss
popw
imul
xor
pop
repz
rorl
insb
xchg
mov
cwtl
lret
xchg
int3
ret
adcb
ja
inc
jns
xchg
adc
das
jmp
jb
clc
loopne
adc
arpl
xchg
sub
cld
test
push
in
movl
dec
pop
pop
cld
in
sub
es
fwait
std
rcrl
xlat
icebp
daa
ficomps
mov
mov
in
fdivrp
cwtl
dec
call
mov
jbe
ds
inc
lea
mov
les
andl
xor
in
in
and
testb
ds
ss
dec
xchg
inc
sbb
dec
loop
pusha
loop
mov
push
jmp
pop
jb
bnd
mov
inc
or
jmp
adcb
dec
test
add
push
cmp
or
fstpl
imul
xor
aad
dec
push
add
add
mov
lcall
jns
cmc
xchg
mov
jp
dec
sub
aam
push
mov
push
mov
mov
jnp
mov
outsb
mov
add
jp
int3
adc
adc
add
lods
ljmp
lret
sub
scas
popf
int3
sarl
cmp
daa
pop
push
push
and
out
add
and
ljmp
cwtl
lock
int3
push
sbb
das
xchg
jae
rcr
bound
xchg
pop
dec
stc
ds
decb
cmc
loop
xchg
call
idivb
faddl
jg
repz
mov
add
mov
ss
xor
cmc
add
sub
jmp
push
mov
sbb
pop
xlat
adc
out
iret
jnp
insb
lea
dec
aas
mov
mov
add
pushf
fwait
icebp
xor
mov
cmp
int
punpckldq
and
push
xchg
or
dec
and
pop
scas
push
xchg
sub
sub
xchg
jl
push
cmp
mov
ret
add
xchg
mov
mov
ret
mov
pop
pushf
push
lds
movsl
or
mov
pop
xlat
sub
adc
dec
cmp
or
mov
xor
and
out
jnp
clc
adc
popf
dec
ret
xchg
or
loopne
push
sbb
xor
sbb
cmp
popa
push
sbb
jns
loop
loop
adc
sub
lcall
je
movsl
insl
pop
subl
fstps
pushf
hlt
icebp
mov
or
cmpsb
bnd
jmp
inc
imul
mov
dec
loop
jecxz
daa
iret
loope
out
in
inc
ja
imul
fwait
xchg
lods
cmc
popa
adc
sbb
cmp
xorl
frstor
js
sbb
cmp
jmp
mov
mov
lea
push
and
out
aas
jl
xchg
fsubrs
mov
jo
pop
pop
xor
cmp
sbb
leave
or
add
add
add
sub
imul
jmp
stos
repnz
js
push
xchg
mov
push
cli
out
dec
and
dec
cmpsl
cmpb
inc
lods
jle
inc
jns
mov
push
cmp
sub
popa
ret
add
mov
jecxz
mov
cmpb
adc
stos
test
outsl
jb
fsubrl
or
inc
mov
test
loop
jge
test
cmpb
push
insl
lcall
sub
pop
mov
ffree
pop
dec
sub
sub
dec
cmpsb
sti
dec
lcall
scas
das
pusha
jp
dec
ret
cmpsb
call
hlt
inc
mov
jle
in
push
clc
aad
cmp
or
cld
sahf
mov
or
xchg
adc
xchg
sub
popa
pop
cld
adc
or
cmp
cmpsb
sahf
dec
out
pushf
xor
imul
sbb
mov
adc
rcrl
cmc
xor
popa
popa
push
fidivrs
mov
aaa
sub
xor
inc
movsb
ja
push
add
inc
sub
test
xchg
movsb
jns
mov
js
jl
int3
out
inc
fsts
insl
push
pop
cltd
mov
cmp
sbb
aad
dec
add
mov
test
mov
dec
xchg
or
mov
add
adc
cmpb
adcl
cmpsl
cmpsl
in
mov
pop
mov
into
ret
add
jg
jge
loopne
sbb
sub
push
inc
push
mov
test
sub
inc
imul
enter
and
mov
inc
cmc
or
pop
dec
mov
outsb
xchg
dec
adc
push
fmull
add
popa
adc
test
sbb
mov
sti
out
xor
or
rolb
mov
and
push
xchg
cmp
sbb
stos
icebp
inc
ja
int3
ljmp
jno
mov
pop
pop
inc
aad
outsl
bound
inc
mov
and
call
cmpsb
jle
in
scas
xchg
xlat
push
iret
call
lods
mov
andl
out
inc
xcrypt-ecb
cmpsl
leave
jo
lret
sub
push
out
aad
push
leave
jmp
add
fucomi
popa
dec
lcall
push
icebp
cmp
inc
jno
aam
aam
scas
jl
adc
push
pop
pusha
dec
test
sub
xchg
mov
fwait
std
inc
aas
ret
pop
in
xchg
push
and
lds
mov
pop
and
xchg
cltd
push
jb
lret
mov
push
add
shll
sbb
jecxz
mov
cld
cld
aas
xchg
mov
jae
frstor
ds
shlb
jns
jne
pop
sub
mov
or
movsb
add
loopne
sbb
stos
int
int3
or
sbb
xchg
add
sub
movb
lock
add
in
xchg
fldcw
adc
sub
lahf
test
push
push
push
scas
clc
xchg
add
jmp
sbb
ret
sub
in
ljmp
jne
cmp
nop
pop
mov
push
push
jge
movsl
sbb
ror
inc
and
js
lahf
xor
insl
jo
test
jno
mov
or
xor
fwait
cmp
xchg
scas
aas
adc
and
das
mov
scas
scas
data16
jne
cmp
int
push
sbb
mov
test
xchg
hlt
mov
mov
gs
xor
lock
xor
dec
jns
ljmp
xchg
aas
xor
movsb
or
in
cmpsl
arpl
stc
adc
bound
shll
add
lret
xor
xchg
negl
sub
scas
in
bound
jmp
adc
insl
iret
loop
or
mov
cmp
or
xchg
pusha
int
loope
cmp
or
xlat
cmp
sub
cmp
jp
ss
in
or
int3
jo
mov
inc
push
adc
mov
es
xchg
lret
mov
mov
incb
mov
fcmove
fists
cmpl
jb
xor
mov
popf
mov
sbb
out
jmp
popf
and
rep
pusha
mov
cmc
jbe
test
dec
nop
loope
mov
lock
adc
pop
sub
imul
ret
xchg
mov
lcall
adc
shll
mov
pop
dec
ds
pop
pop
movhps
shr
inc
jg
cmpl
leave
mov
cmp
push
sbb
push
jne
jg
mov
and
mov
fisttpll
mov
push
jne
aaa
cmp
cmp
arpl
xchg
xchg
xor
lods
sub
lret
in
sub
xchg
cmp
cmpb
aam
mov
outsl
ret
xor
and
jb
jbe
je
orb
loopne
pop
mov
jae
or
and
daa
lods
jp
scas
outsb
mov
decb
rorb
push
lret
out
xchg
adc
sub
jnp
pop
pop
add
add
iret
popf
cmp
or
out
jmp
in
je
xchg
push
notb
jno
nop
adc
ret
outsb
cvtps2pd
je
hlt
shlb
pop
cmp
inc
out
int3
mov
cmpsb
cmpsl
sbbb
adc
mov
stos
jecxz
popf
add
cmp
xor
test
in
sub
je
xchg
sbb
ficoms
sub
xor
jnp
sub
xchg
rol
push
or
add
sub
nop
pushf
sbb
lock
es
pop
stos
lea
cld
in
xchg
leave
and
adc
add
mov
mov
fldt
rolb
adc
push
dec
jb
pop
add
add
lds
sbb
popf
xor
push
in
fcmove
fdivrs
dec
hlt
iret
inc
test
xchg
dec
addr16
xor
pop
hlt
dec
mov
jmp
dec
mov
js
cmp
data16
dec
cmp
jo
add
cmp
adc
popa
mov
dec
mov
sub
xchg
adc
pop
sub
xchg
push
xchg
es
jl
aas
rclb
jge
lock
cmp
jg
cld
sub
mov
cltd
sbb
ss
xor
mov
cld
cmpb
inc
sub
jge
jns
xchg
pop
mov
sti
mov
mov
aas
movsl
mov
pop
xchg
jmp
stc
adc
mov
pop
xchg
dec
and
pop
jp
pushf
cmpsl
inc
xchg
mov
das
mov
pop
xor
sbb
lds
lock
neg
int
dec
xor
pop
mov
mov
push
cmp
jne
das
fldenv
pop
aad
mov
sbb
rclb
movsb
pop
mov
inc
shll
and
xchg
adc
push
or
jnp
add
cmpsl
leave
pop
xlat
pushf
cmp
fstpt
mov
jae
cltd
xor
out
sbbb
lods
std
lea
cmpsl
or
sbb
push
popf
xchg
dec
into
das
divb
stos
aas
call
inc
jl
mov
inc
addl
loop
and
add
cmpsl
cmp
ss
adc
mov
sub
lock
adc
mov
push
out
nop
js
lock
cmc
inc
adc
sbb
lahf
dec
sbb
pusha
add
push
push
add
or
out
and
orl
fisttps
gs
xchg
cmpsb
cmp
mov
mov
in
dec
rolb
or
xchg
cmc
scas
stc
syscall
adc
mov
mov
daa
xchg
adc
loopne
into
and
sub
jle
adc
pop
push
pop
dec
test
add
jg
data16
loop
or
add
add
push
imul
push
fcomi
lcall
sbb
insb
mov
jmp
push
pop
ret
mov
sahf
push
div
sub
adc
rcll
fidivrl
pusha
pop
mov
flds
jg
adc
pop
daa
push
mov
in
sub
mov
fwait
fs
lahf
cmpsl
lahf
addl
cmp
pop
xor
push
hlt
mov
dec
mov
out
mov
pop
stos
idiv
push
repz
in
ret
mov
pop
ds
adc
popf
mov
idivb
sub
xchg
cmpsl
push
mov
inc
leave
mov
lods
stos
sbbb
jb
or
sub
mov
fnsave
aam
xor
mov
lods
shlb
inc
dec
fiaddl
xchg
pop
cmc
adc
inc
cmp
jbe
nop
stc
icebp
jae
ljmp
fldl
jmp
mov
addr16
push
mov
fsubl
mov
ret
adc
sbb
mov
shr
add
movsl
lret
xchg
adc
mov
xchg
inc
std
mov
fmuls
loope
mov
hlt
xor
cs
nop
setno
sub
loope
pop
mov
and
lods
jecxz,pn
das
ds
sbb
cld
mov
ljmp
mov
dec
xchg
mov
imul
je
mov
fadd
dec
lret
push
mov
cs
int
mov
xor
and
lret
dec
xchg
int3
sbb
bound
dec
int3
outsb
xor
iret
pop
leave
cmp
pop
cmp
sbb
jae
aam
stc
sar
movl
outsb
jbe
dec
or
mov
insb
add
adcl
add
xor
mov
shll
mov
and
imul
das
dec
dec
dec
fldcw
or
ljmp
cmp
cs
insb
inc
mov
xor
xor
lahf
insl
xor
jmp
xor
in
pop
shll
dec
pop
es
cmp
rorb
sub
jno
xchg
xor
enter
scas
mov
lods
clc
mov
add
mov
rolb
mov
push
push
or
call
jo
adc
push
cli
sub
rclb
sbb
test
lea
mov
cwtl
mov
addl
imul
lret
cwtl
daa
mov
sahf
fistpll
mov
push
jp
jnp
je
loop
or
inc
hlt
jns
popf
mov
out
push
or
mov
test
xchg
jnp
inc
xor
mov
mov
or
dec
inc
dec
jmp
jp
icebp
outsb
dec
popf
add
cltd
inc
xchg
cmpsb
cld
fisttpll
mov
cltd
xchg
add
adc
shrl
movsb
hlt
pop
loop
aad
cld
pop
test
leave
pop
mov
fdivs
bound
adc
imul
jb
stos
mov
and
insb
or
lcall
push
and
inc
and
sub
mov
jmp
push
insl
call
ljmp
push
push
and
xchg
xor
adc
add
iret
mov
xchg
xchg
pop
in
push
or
shlb
jns
xor
push
sub
fidivrl
cmp
push
add
lahf
bound
or
sti
std
sbb
daa
jbe
in
pop
cmpsl
mov
push
mov
dec
jno
cmp
mov
fwait
mov
mov
xchg
and
ret
pop
add
out
mov
mov
stos
xchg
into
inc
push
testl
mov
mov
cmp
add
sbb
sub
insl
xor
movsb
push
xorl
aam
fidivrs
adc
std
enter
push
fiadds
adc
fmuls
aam
in
test
das
enter
dec
nop
mov
bound
ret
pop
cmpsb
lahf
lods
jecxz
stos
adc
adc
xchg
inc
scas
test
fistps
lods
sbbl
syscall
adc
in
das
jl
xchg
push
clc
insl
lods
cwtl
add
mov
xchg
dec
mov
mov
inc
mov
add
rcrb
fistpl
fs
insb
shll
sbb
push
shlb
adc
inc
movups
enter
sti
fcmovne
mov
nop
jecxz
sbb
in
sbbb
add
inc
test
js
dec
bound
mov
aad
out
pop
sbb
dec
sbb
mov
cmpsl
dec
aam
or
inc
and
cld
movsl
lcall
cwtl
jae
push
add
pushl
call
xor
int3
add
mov
icebp
mov
cltd
jo
aad
mov
xchg
mov
dec
loop
xchg
fimull
fildl
push
mov
dec
insb
sub
rcrl
jo
mov
fs
dec
lods
in
packsswb
addl
fs
ret
stos
std
clc
outsb
rcrl
cmp
sahf
bound
nop
add
decl
ret
stos
int
inc
mov
cli
inc
cli
scas
mov
fldcw
nop
rcrb
lock
mov
mov
cmp
mov
lds
gs
loopne
mov
sbb
imul
xchg
pop
jo
and
jmp
xor
xor
imul
daa
das
adc
mov
sbb
mov
test
jmp
leave
jl
and
fsubrl
push
inc
or
sub
mov
mov
or
lock
dec
imul
icebp
and
sub
loop
or
cmpsb
cltd
or
mov
jnp
lock
cmp
jae
icebp
stc
test
sub
test
jge
imul
adc
out
jne
mov
int3
sbb
sarb
popf
clc
test
aam
in
ficompl
or
dec
pop
xchg
test
ret
push
jmp
scas
xlat
popa
dec
push
inc
inc
adc
popa
mov
aas
and
sbb
mov
inc
xor
std
popw
int3
adc
out
jae
in
push
cmpsb
add
pop
lahf
cmc
pop
in
and
pop
dec
mov
inc
xlat
shll
cli
repnz
addl
or
cli
inc
jmp
push
add
enter
fldt
or
or
fisttpll
les
lods
inc
aam
sbb
rorb
mov
and
lock
lds
add
lds
mov
cs
mov
fwait
adc
ja
outsl
test
jle
push
jge
jae
enter
mov
sub
and
pop
xchg
pop
leave
mov
pop
and
hlt
bound
mov
xchg
mov
mov
jp
add
push
lcall
inc
push
xor
pop
int3
outsl
mov
and
pop
dec
sbb
and
mov
mov
js
aam
sti
push
pushf
cwtl
sbb
popf
cmp
inc
dec
pop
divl
mov
mov
sbb
insl
mov
sub
fs
mov
jmp
xchg
adc
das
and
pop
ret
bound
push
repnz
or
mov
stos
and
lds
je
xorl
int
mov
jo
mov
mov
sub
cmpsb
ljmp
sarl
mov
popa
ds
and
mov
cmp
pusha
cmc
test
ficoms
mov
or
pop
fcmovb
ret
dec
rorb
sbb
lret
push
leave
repnz
aaa
lods
mov
cwtl
imul
lods
std
xor
jb
lds
and
or
xchg
fcomps
leave
mov
adc
repz
out
jnp
adc
adc
arpl
add
jnp
or
scas
clc
push
faddl
stc
sbb
fcmovnb
dec
dec
lods
int
nop
mov
dec
mov
push
add
sbb
and
mov
push
mov
inc
in
pop
in
and
xor
sbbb
xor
mov
push
mov
and
out
and
pop
in
mov
mov
fwait
mov
filds
in
mov
jno
inc
popa
ss
mov
dec
stos
push
outsl
dec
ret
clc
cmp
cmp
jnp
cmp
xchg
xchg
sub
int3
icebp
push
xor
and
ret
inc
in
out
and
xchg
dec
aam
outsb
in
arpl
icebp
bound
adc
mov
aam
jno
cmpsb
das
out
in
mov
mov
cmpsl
or
arpl
das
mov
call
call
xor
test
add
stos
test
scas
and
loope
testl
adc
rolb
jg
outsl
and
xor
loope
sbb
xor
ja
cwtl
sub
xlat
xchg
sbb
hlt
mov
jg
or
enter
stos
out
add
sub
and
aad
cmpsl
out
and
and
fcomp
or
or
sti
inc
cltd
mov
ret
iret
or
jl
and
push
test
adc
adc
aas
sub
xor
jbe
ljmp
out
or
mov
push
add
dec
js
sub
sarb
xchg
xchg
jg
add
lock
stc
sub
xchg
mov
cli
and
push
sbb
lock
loope
inc
xchg
pop
popa
aas
clc
cmp
out
stc
push
mov
cmpsl
pop
or
xchg
nop
mov
arpl
mov
adc
and
add
call
ds
sbb
in
xchg
xlat
and
aam
leave
jno
add
mov
jge
xchg
xor
adc
hlt
rcrl
and
push
sub
mov
test
push
mov
imul
movl
dec
std
out
imul
push
sub
inc
ret
mov
pop
adc
test
push
jbe
or
cmpsb
lods
jne
ljmp
cmp
sbb
fs
mov
xor
mov
push
mov
mov
mov
push
add
mov
loope
pop
sbb
pusha
lock
sub
int
iret
movb
es
jmp
mov
lahf
xorb
push
test
test
mov
sbbl
stos
lock
into
jae
jo
out
loope
pusha
clc
push
adc
mov
mov
and
add
add
aam
mov
pop
je
and
adc
jmp
inc
loop
pop
test
std
add
cltd
iret
ja
mov
or
jl
push
push
sub
shr
add
jmp
fcoml
pop
pop
pop
lea
pop
cwtl
inc
mov
adc
insb
fldl
cmp
and
jne
in
fwait
movsl
and
mov
sub
rcrb
sub
push
out
sbb
push
cmpsl
stc
mov
test
dec
and
add
ds
xor
leave
arpl
cli
dec
divl
call
outsl
cli
mov
dec
mov
cmpsb
dec
int3
mov
jbe
mov
pop
sub
orb
shl
bound
popf
enter
sbb
add
fistps
xchg
aad
shlb
fisttpl
cli
lcall
add
push
sbb
mov
out
ljmp
gs
orl
xlat
in
out
sub
hlt
sbb
in
jns
ja
test
or
rolb
jecxz
ss
jecxz
dec
sti
lods
mov
push
fldt
jne
inc
xor
jo
sbb
push
cmp
cmp
daa
add
sub
mov
jnp
or
jnp
bound
test
sbb
push
jnp
jle
or
xchg
sahf
add
aam
sbb
sbb
loope
rclb
mov
das
adc
pusha
lret
aas
aaa
jns
or
lcall
adc
jae
iret
addr16
cmp
shlb
jnp
pop
jne
ret
pop
hlt
iret
and
ret
popa
push
sbb
loopne
addl
mov
imul
sbb
leave
adc
push
jbe
and
shll
add
push
outsb
hlt
sbb
pusha
inc
or
stc
xchg
fwait
movsl
mov
arpl
push
rorb
xor
jb
push
movsl
cmp
incb
adc
sbb
stc
xchg
jle
mov
xlat
inc
addr16
sbb
xor
pop
lock
push
bound
push
outsl
add
sub
je
imul
mov
mov
dec
cmp
mov
mov
inc
adc
stc
pop
sbb
pop
in
test
adc
pop
push
inc
push
sbb
mov
mov
in
mov
pop
xor
jl
dec
ja
fcoml
addr16
xor
xor
imul
mov
incb
es
adc
push
inc
lret
fs
notl
dec
push
or
pop
lock
xchg
test
popa
notl
iret
jle
std
pop
cmp
frstor
clc
or
adc
ret
and
in
sub
test
out
add
mov
jge
das
or
pop
or
dec
mov
imul
addb
dec
icebp
add
ds
aad
sub
mov
mov
out
mov
and
fidivs
adc
movsl
roll
xchg
gs
jmp
enter
add
pushf
pop
test
roll
aaa
add
je
pop
adc
bound
jns
mov
and
cmp
and
pop
shld
ret
lock
adc
popa
scas
repz
cmp
xchg
dec
fstl
cmpsl
jle
lods
int3
das
faddl
clc
inc
sub
insb
cmp
movsl
cwtl
ffreep
xchg
sbb
out
scas
stos
inc
les
adc
aas
into
scas
jno
jo
mov
fmul
decb
and
es
into
add
mov
shr
popf
adc
insl
outsb
cmp
out
bound
movsl
fstpl
adc
sub
inc
add
in
lds
inc
xor
fsubrs
push
out
and
jle
fdivrs
add
lods
cmc
imul
inc
shl
xor
out
or
leave
in
lret
cli
adc
cmp
sahf
sub
cmp
repz
sbb
cmp
jmp
jae
lods
out
lahf
data16
rcr
daa
sahf
out
shlb
xchg
lret
xchg
fs
fs
loopne
ret
aaa
orb
sub
jbe
sub
fwait
cmp
jns
ljmp
popa
mov
xlat
sub
in
and
stos
shlb
out
loope
adc
out
hlt
push
les
in
and
idivb
rolb
sbb
adc
adc
les
lods
aaa
jae
dec
clc
add
stos
dec
stos
test
mov
mov
pop
cli
sbb
pop
enter
insl
mov
test
nop
enter
xor
int
add
int3
jecxz
out
repz
ret
cmp
out
cmpl
cmp
jecxz
movsb
add
sbb
hlt
aas
les
xor
inc
fstpt
stc
xchg
pop
push
mov
mov
cmp
and
dec
adcb
out
rorl
xor
pop
dec
jb
in
cmpl
ficomps
jge
cmpsl
pop
lret
or
jae
xchg
arpl
xchg
ret
cld
dec
imul
mov
inc
iret
ficomps
jmp
pop
lahf
shr
test
cltd
fldl
add
fcoml
call
ljmp
add
loop
rcll
mov
pop
testl
ucomiss
mov
mov
jns
lea
xlat
pop
push
inc
mov
fbld
jnp
mov
jl
rclb
and
mov
and
hlt
adc
fs
sarl
leave
push
in
add
mov
imul
or
inc
adc
cld
stc
mov
xchg
scas
pop
pop
push
inc
roll
imulb
in
incl
mov
daa
call
mov
add
imull
or
hlt
imul
in
add
es
pop
push
and
dec
mov
and
mov
or
ljmp
sub
mov
xor
popf
adcl
jo
xchg
aas
sbb
xchg
rolb
pop
mov
or
test
push
push
cmp
sbb
add
cld
push
leave
inc
xlat
lahf
or
dec
cmpsb
movups
fsubr
push
mov
out
add
sbb
jle
mov
sub
lds
iret
movsl
lcall
gs
jb
jmp
xchg
and
loope
mov
push
aaa
adc
xor
xchg
mov
push
iret
mov
sahf
pushf
sub
shlb
cmp
xor
loop
cmp
ss
cs
clc
popa
ror
jo
dec
mov
adc
fs
add
je
pusha
test
mov
outsl
loopne
sbb
or
clc
scas
xchg
and
add
pop
mov
out
xor
mov
mov
adc
jp
or
and
adc
aas
mov
shrl
adc
mov
cmpsl
aam
stos
or
aaa
lahf
leave
inc
and
es
adc
inc
sub
scas
cmp
xchg
in
mov
and
fstpl
loope
pop
pop
xchg
mov
lret
adc
add
scas
push
addb
bound
sbb
push
out
mov
test
mov
sbb
xor
add
ja
dec
lock
sarb
or
pop
xchg
icebp
mov
fmull
mov
mov
in
lahf
jns
push
jecxz
xchg
test
das
cltd
jo
adc
lea
stc
mov
out
ljmp
push
jg
das
jae
mov
pushf
and
je
push
loopne
ret
insb
pop
dec
xorb
push
xchg
jecxz
int3
test
rclb
pop
fisubl
and
outsl
out
int
out
addb
cmp
dec
aaa
fnstenv
cmp
xor
dec
cmp
leave
pusha
shrb
inc
in
nop
orl
repz
sbb
test
mov
das
aam
inc
sbb
loope
cli
shrl
fnsave
push
shlb
popa
xor
fists
xor
imul
shl
jge
scas
lret
out
fldcw
sub
push
in
sti
lods
fsts
aam
aaa
clc
mov
scas
ret
inc
xchg
push
inc
or
mov
popa
loope
xor
mov
sbb
sbb
icebp
ss
mov
das
in
inc
getsec
jb
imull
bound
mov
mov
push
arpl
insb
stos
inc
mov
xor
mov
xchg
je
lds
push
xor
fnstenv
jb
sbb
add
pop
xlat
jbe
rcl
call
out
push
jbe
repnz
js
xor
hlt
rcrl
mov
lock
loop
pop
je
addr16
push
js
xchg
or
mov
dec
sbbl
sbb
cmpsb
mov
sub
mov
data16
xchg
mov
dec
jecxz
mov
pop
divl
mov
jbe
mov
lahf
lret
adc
leave
cld
mov
ret
loopne
fstl
mov
lods
icebp
imul
repz
lcall
addb
popf
cmpsb
adc
pushf
aaa
fisttps
add
xchg
inc
jno
cmp
outsl
das
cltd
es
and
repnz
loop
push
xor
lock
jbe
xchg
adc
ds
sahf
js
xchg
lds
mov
imul
call
mov
out
insb
fcompl
ret
aaa
pop
xchg
int3
movsl
leave
imul
outsb
add
stos
jo
cli
pop
int
adc
in
sbb
stos
loop
popf
inc
sbb
add
loope
rcr
jno
stos
bound
pop
xor
js
mov
stos
int
xor
das
jmp
mov
out
scas
vpmaddwd
cmp
daa
cmp
push
add
in
int
jne
aaa
mov
mov
push
push
in
cmp
scas
dec
push
lea
adc
add
mov
jb
mulb
aas
jecxz
sbb
push
and
scas
popf
jge
add
mov
mov
xor
jmp
out
jmp
add
cmp
outsb
and
std
test
lods
ret
fdivr
pop
je
in
inc
je
sub
loope
sahf
xchg
and
fwait
popa
inc
push
cmp
testb
scas
jb
mov
mov
jge
iret
jecxz
dec
popa
imul
ljmp
sub
cmpsl
and
pop
ret
test
ffree
jmp
xor
dec
iret
push
add
sub
popa
xchg
xor
mov
fsubrs
dec
in
aas
in
xlat
xchg
je
pop
add
push
cmpl
xor
sub
leave
xchg
push
mov
test
xchg
in
cwtl
push
or
jns
pop
out
pop
mov
lea
mov
fcoml
fmull
cmp
jmp
pop
cli
outsb
xchg
add
lds
push
mov
dec
sbb
adc
jmp
jp
xchg
and
loop
stos
pop
inc
decb
testl
insb
sub
in
lcall
stos
pushf
jl
rcrl
dec
or
addb
stc
pop
xor
std
sbb
sub
pop
scas
push
dec
shlb
jo
push
out
inc
mov
ds
popa
push
push
call
clc
loopne
orb
and
inc
jo
mov
aas
dec
divb
pop
cwtl
dec
adc
lret
lock
in
shr
fisttpll
inc
xchg
inc
repz
rol
ficomps
loope
imul
jmp
jno
aas
dec
mov
loop
inc
adc
mov
inc
sahf
pop
loop
cmp
mov
push
pop
clc
push
insl
fcmove
cmp
pop
int
pop
sbb
push
fistps
mov
push
or
cmc
mov
push
lods
int
sbb
sub
movntps
movsl
mov
in
jg
adc
mov
ret
jb
push
mov
loop
arpl
mov
aad
test
cmp
cmp
jbe
lds
pushf
push
cmpsl
ret
push
and
testb
and
imul
out
add
stos
push
rcrb
xchg
ret
dec
imul
mov
les
mov
popf
cmp
outsb
sbb
lret
data16
push
fcoml
dec
cli
lock
iret
notl
ds
out
mov
jge
cmc
lahf
in
push
in
cmp
scas
in
xor
nop
ja
pop
jp
repz
and
ljmp
jl
mov
decl
addr16
pop
test
dec
fidivs
sbb
mov
xor
out
mov
stc
cmp
mov
test
in
icebp
dec
lcall
test
dec
jp
inc
push
sbb
pop
es
lods
scas
add
lcall
mov
cmpsb
movsb
mov
vpcmpgtd
test
sbbl
add
stc
insb
xor
stos
cmp
or
cmp
xchg
jo
sbb
repz
mov
inc
push
mov
in
imul
std
push
call
pop
xor
daa
aad
dec
inc
sub
and
xchg
mov
bound
cmp
jbe
fisttpl
in
and
jno
js
mov
insb
aaa
out
jge
mov
mov
xorb
div
xchg
push
lahf
fadds
sbb
mov
popf
adc
mov
fstpt
clc
mov
pop
and
ret
cmp
lods
sub
idivb
jno
mov
sub
je
pop
mov
push
jecxz
mov
mov
in
xor
je
test
lods
inc
ljmp
adc
mov
popa
mov
mov
inc
inc
jne
insb
cmp
sub
mov
or
in
dec
mov
xor
add
jno
lods
mov
scas
mov
jb
fucom
xchg
repnz
test
sbbb
adc
ljmp
out
fdivrs
mov
loopne
js
cbtw
pop
cmp
movsb
jb
in
mov
dec
pop
adc
mov
lahf
rclb
sbb
icebp
xor
mov
fdivr
gs
mov
jl
out
cmp
xchg
enter
out
jnp,pn
jp
pop
mov
testb
push
xor
and
pushf
mov
jae
shr
lods
les
cmp
or
and
bound
shrl
mov
inc
das
mov
sbb
dec
jp,pn
cmp
xchg
sub
imul
shll
mov
cmp
in
push
dec
pop
cmp
cmc
add
cltd
sbb
dec
ret
rorb
sbbl
ret
xchg
sbb
in
addr16
shll
mov
sub
fsubrs
lret
cwtl
enter
or
enter
push
xchg
das
xchg
mov
and
cmc
jno
xor
movsl
or
out
call
je
pusha
rcl
scas
pop
roll
mov
divb
test
sahf
aad
outsl
inc
icebp
inc
les
les
cmpsl
hlt
inc
stos
adc
or
fnstenv
in
and
jmp
lock
js
xchg
leave
xor
mov
dec
xchg
loope
pop
jnp
and
cmp
in
xor
ss
and
adc
jns
cmp
sbb
mov
xchg
mov
loope
jecxz
mov
push
scas
adc
push
ds
andl
inc
adc
sub
out
push
jae
ljmp
sahf
inc
repnz
addr16
outsb
push
shlb
pushf
cld
in
xor
shl
fs
or
dec
jne
stos
add
sti
cmp
je
xchg
cld
rorl
into
and
push
test
fwait
sbb
mov
cmc
out
add
sbb
mov
hlt
push
sub
push
mov
shr
fwait
aaa
jmp
cmpsl
dec
push
repz
push
into
cltd
adc
daa
jmp
xor
das
xlat
xor
add
femms
pop
bnd
pop
dec
inc
cmpsb
push
dec
dec
inc
mov
sbb
mov
jp
mov
adc
or
push
pop
aam
movsb
push
movsl
addl
add
inc
and
sbbl
mov
push
xchg
and
stc
stos
into
stc
jno
cmpsb
repz
mov
ret
stos
pop
out
inc
movsb
mov
test
or
js
test
bound
jne
je
add
mov
jle
push
and
and
mov
andb
xchg
dec
fsubl
and
dec
rcr
mov
fisttpll
or
aas
dec
sub
or
jmp
adc
xor
fsubrp
jns
sahf
fstpt
cmp
cmpsb
xor
adc
fcmovnb
xchg
pop
mov
sub
addr16
mov
sub
jno
popf
rcr
out
sub
add
pop
movsb
stos
push
iret
dec
mov
testb
and
and
scas
scas
pusha
xchg
sbb
mov
jmp
cmp
pop
sbb
add
pop
jns,pt
sbb
lds
ja
add
lea
pushf
mov
sbb
test
adc
mov
xchg
push
pop
xor
mov
repz
push
xor
or
push
dec
sub
or
xchg
out
hlt
lret
icebp
xchg
xor
xor
xor
dec
fcomp
push
fcomip
jns
pop
jae
movl
cmpsb
xchg
xchg
adc
leave
push
das
in
xchg
repz
and
out
popf
iret
pop
pop
push
enter
sbb
repnz
dec
xchg
sti
add
cmp
xchg
adc
es
cmp
rcrb
cwtl
stos
mov
xor
jl
and
push
scas
cmp
cmc
cwtl
call
out
jne
pop
insb
dec
sub
outsl
leave
arpl
xor
popf
cwtl
repnz
fisttpl
xor
icebp
movsl
mov
cli
out
xchg
add
adc
and
sbb
pusha
push
xor
sub
adc
out
sub
sbb
cwtl
xchg
dec
hlt
jge
cmp
pop
test
xor
pop
inc
aad
cmc
cmp
sbb
push
mov
dec
pushf
addr16
leave
sbb
stos
push
leave
mov
sub
repz
out
je
leave
loopne
nop
shll
rcll
pop
jb
xor
adc
inc
mov
adc
mov
jno
std
ret
sub
jg
mov
cltd
sub
and
fildl
cmpsl
mov
in
cli
xor
shll
popa
sbb
mov
js
adc
movsl
pushf
xchg
xchg
jne
jmp
dec
arpl
sarb
cmp
je
jb
xchg
sbb
sbb
lret
dec
out
push
repz
mov
lds
out
adc
cltd
ljmp
push
xor
cmovle
popa
shll
test
dec
sbb
xchg
dec
sub
xchg
inc
shl
pop
jne
or
loopne
aad
and
fisttps
xchg
sub
jae
jo
jae
movsb
and
adc
add
sub
adc
add
sub
adc
add
xchg
fldl
adc
mov
adc
add
add
jns
xor
ljmp
iret
stos
mov
mov
jne
stos
test
push
jecxz
mov
lods
mov
sbb
outsl
rcll
or
mov
out
mov
sub
lret
cmp
sbbb
mov
sub
in
inc
jo
in
jns
out
divb
cmc
adc
mov
into
cmovbe
popa
mov
cwtl
scas
inc
mov
mov
adc
push
adc
pusha
test
sbb
data16
es
popf
xor
fists
jge
mov
mov
sbb
pop
sbb
jo
out
sub
aaa
adc
jecxz
mov
insl
test
lods
test
outsl
cmpsl
add
or
or
cmp
shlb
ret
mov
mov
mov
aad
rorl
addr16
in
test
call
sahf
add
inc
sbb
sahf
inc
xacquire
sub
xor
cmp
cwtl
lds
shlb
lea
cli
jns
push
insb
mov
mov
jmp
test
das
xor
push
int
out
dec
in
repnz
and
out
xlat
mov
scas
sbb
out
fmul
mov
aas
roll
and
xor
in
cmc
sbb
rcll
icebp
inc
repnz
jno
test
push
ljmp
add
pop
movsl
fiadds
pop
mov
cld
bound
out
scas
lods
pop
inc
sarl
xchg
fimuls
stos
stc
and
in
popa
xor
dec
jb
xor
lret
stos
xchg
scas
jne
cmc
inc
xor
ds
das
test
dec
push
scas
imul
mov
xchg
mov
call
dec
xchg
test
std
int
mov
sbb
orb
sbb
xchg
ret
sti
int3
sub
pushf
scas
out
sbb
xchg
popa
or
cli
jecxz
push
sbb
and
xor
js,pn
fdiv
in
mov
mov
cmp
movsl
pop
cmp
mov
cmp
xor
sub
or
adc
mov
sahf
clc
mov
lods
add
inc
and
sbb
inc
sub
js
into
adc
sub
add
mov
andb
xchg
lods
scas
or
pop
ss
or
das
xchg
jnp
in
lret
fsubrs
loope
and
mov
pop
push
jns
pop
xorl
fdivrs
sti
cli
adc
popa
pop
lock
frstor
dec
pusha
js
xchg
int3
mov
push
pop
sbb
xor
add
adc
cmpsb
or
icebp
andb
add
pushf
je
lods
subl
imul
in
and
mov
test
cmp
jl
fiaddl
pop
call
mov
dec
mov
mov
push
cmp
mov
push
dec
js
jo
push
dec
cmc
into
mov
int
nop
jns
pop
aas
adc
mov
mull
test
test
inc
lods
jb
dec
cli
lcall
and
xchg
sbbb
add
sbb
inc
les
jl
jno
cmp
or
cmp
mov
sub
mov
ljmp
adc
in
mov
sub
and
add
hlt
shrb
cli
sbb
stos
add
or
cmc
inc
scas
cld
ret
scas
or
movsl
dec
xor
mov
jmp
lret
mov
int
arpl
call
hlt
test
lcall
mov
in
pop
arpl
jo
test
shll
fisttpl
dec
stc
je
or
jp
jns
lods
pop
dec
pop
ja
ret
dec
je
mov
icebp
lods
inc
cwtl
xchg
inc
xor
insb
into
aad
or
in
sbb
and
inc
mov
jnp
not
sub
cmpsb
jb
pop
mov
mov
pop
call
mov
mov
dec
mov
mov
into
cmpsb
mov
cmp
test
jmp
lret
ds
sub
ret
pusha
mov
and
jnp
push
mov
cmp
jg
sarl
and
sbb
or
call
ret
jmp
push
jnp
sub
ds
rorb
test
pop
jo
out
xor
imul
out
repnz
inc
lcall
xchg
imul
cld
mov
jb
repz
fdivs
in
mov
loopne
cmp
decb
jecxz
pop
incb
lods
sub
add
inc
enter
adc
jmp
icebp
lea
cmp
mov
cli
cmpsl
adc
adc
add
jp
push
lods
ja
xor
push
mov
xchg
mov
ds
xor
and
movb
adc
in
aad
push
dec
xchg
fisubrs
lea
xor
bound
sti
std
mov
lds
pop
inc
pop
inc
stos
call
jmp
mov
mov
xchg
sbbb
cmp
or
push
enter
pop
addr16
js
test
add
out
mov
mov
out
inc
insb
int
sub
pop
or
xor
bound
pop
scas
addr16
cmp
rolb
mov
sbb
push
xlat
xor
jbe
lcall
movsb
cmc
xor
in
cli
mov
dec
xor
leave
daa
mov
pop
insb
addr16
jg
jbe
loop
aad
dec
cmp
jnp
cmp
cmc
stos
push
pop
mov
pop
loop
push
adc
cmpsb
in
ds
fiadds
jg
sbb
jnp
mov
add
pop
pop
dec
ret
jae
clc
lds
cmc
jp
insl
popa
fcmovnb
or
add
scas
xchg
sub
mov
stos
out
pop
mov
ss
lods
or
cmp
cld
mov
pop
jg
xor
movsl
popf
mov
enter
pop
jo
repnz
or
bound
push
and
add
cli
xchg
stc
pop
bound
cmp
ds
cmp
lods
aaa
loop
ret
pop
nop
mov
add
dec
cmpsb
push
xlat
cmp
jnp
sbb
jmp
in
adc
daa
mov
mov
in
xchg
add
clc
lods
xchg
fwait
sbb
xlat
test
fdivrp
sahf
mul
out
lods
jnp
adc
inc
push
daa
xchg
mov
stc
sub
mov
mov
nop
add
test
cli
add
inc
scas
loopne
fisubrs
inc
push
lret
sub
and
mov
sbb
push
je
mov
out
shll
inc
iret
out
fidivrs
cmp
cli
mov
mov
jb
push
insb
sbb
cli
fisubs
inc
xchg
mov
and
fbld
sarb
mov
fiadds
and
fbld
cmp
call
popf
pop
cmpsb
push
test
repz
inc
cld
ss
or
in
jbe
jmp
test
or
pop
mov
or
add
lret
jae
inc
pop
dec
mov
xchg
cmp
ds
sub
jmp
dec
add
or
dec
adc
rcl
outsl
loope
rorb
mov
out
call
sub
inc
pop
or
loope
es
bound
movsb
fsubs
pop
sbb
cmp
ret
mov
sti
daa
sbb
or
jecxz
pop
ljmp
iret
test
mov
cltd
lcall
outsl
popa
jnp
ljmp
dec
mov
jnp
fcoms
push
in
cmp
adc
inc
xchg
add
jns
xor
sti
pop
ljmp
mov
bnd
into
inc
cmp
jmp
lods
int3
mov
pop
cli
ret
jecxz
scas
mov
leave
mov
rdpmc
sbb
mov
nop
and
pop
ret
cmpsb
mov
jno
dec
cwtl
sahf
and
fisttpl
lcall
arpl
jne
add
cmp
lods
jae
push
inc
out
shlb
ljmp
or
jo,pt
in
enter
push
cmpsb
add
loopne
xchg
inc
out
lret
in
mov
jo
lds
sub
jo
cmp
dec
push
jmp
and
out
aaa
mov
loop
int
scas
pushw
mov
mov
cld
loopne
or
outsl
mov
movsl
pop
add
push
pop
outsl
push
add
ss
push
cmp
mov
adc
add
rclb
insl
jecxz
sbbl
xchg
shll
fbstp
sbb
mov
adc
sar
out
cmpsb
xor
out
push
cli
popf
test
inc
arpl
push
test
testl
xchg
fidivs
xlat
xor
leave
fsubrs
scas
jno
add
clc
xor
arpl
cmp
pop
fcomps
or
into
xchg
add
mov
insl
mov
sbb
or
jb
inc
enter
push
nop
leave
inc
or
ret
push
fisubl
push
outsl
fsubl
lods
lahf
mov
scas
jbe
cmp
jo
or
or
and
clc
fnstenv
xor
out
or
pop
cmp
xor
fs
add
push
fwait
in
loop
cltd
sub
jl
xchg
mov
daa
and
jnp
popa
lahf
aad
pop
push
shll
fadds
sbb
lods
push
push
pop
xor
imul
and
mov
inc
cmp
jo
mov
dec
arpl
xchg
cmp
mov
push
scas
jecxz
jne
mov
movl
scas
adcb
daa
ret
pop
push
mov
in
leave
xchg
test
iret
jmp
mov
or
in
insb
xor
pop
scas
lea
sub
inc
repz
repz
jo
in
mov
test
and
aam
test
cmp
stc
or
mul
mov
lea
jne
repnz
push
mov
sarb
mov
ror
testl
mov
inc
and
out
dec
int3
sub
mov
arpl
xlat
pop
loope
xchg
out
int
mov
mov
popf
xor
aad
mov
push
mov
inc
ds
sub
cmp
dec
aaa
aad
xchg
xchg
hlt
pop
jp
repnz
jle
push
mov
add
cmp
sub
mov
ret
mov
and
pop
push
mov
imulb
or
icebp
and
lahf
mov
dec
mov
js
notl
mov
xor
jg
outsb
push
pop
enter
jle
test
aam
gs
mov
dec
push
mov
mov
nopl
push
repz
add
outsb
mov
lods
pop
jae
movsl
daa
add
out
push
mov
popa
rorl
movaps
cmp
andw
pop
mov
out
inc
imull
arpl
mov
pusha
push
hlt
or
popa
test
fdivrs
mov
rcll
xor
out
jno
cmp
push
mov
push
sub
sbb
sbb
pop
jb
jmp
or
push
xchg
insb
sub
dec
mov
scas
dec
sbb
daa
xor
pop
push
movsl
cmp
inc
in
adc
jecxz
xor
popa
push
pop
xlat
outsl
mov
test
sub
push
loope
dec
cmp
movsb
inc
push
dec
das
dec
xor
pushf
outsb
pushf
push
stos
pop
ret
call
ljmp
lret
mov
lcall
in
xor
ja
movsl
repz
lods
push
fstpl
mov
pop
pop
jmp
mov
addb
ret
xor
pop
xor
sub
insl
lcall
cltd
jl
repz
out
cld
shll
adc
sbbl
dec
iret
dec
shlw
pop
adc
pop
insb
loope
test
leave
cmp
or
adc
fwait
inc
lret
les
les
xchg
and
adc
dec
std
arpl
clc
dec
stos
jmp
repz
adc
icebp
test
push
push
mov
inc
mov
in
scas
test
cmp
pop
dec
cmp
btc
pop
outsb
in
xor
mov
es
add
lret
mov
mov
and
cmp
xorb
push
xchg
mov
lret
cmpsb
idivb
mov
xchg
fcompl
jnp
lock
and
xor
and
in
das
dec
xchg
arpl
inc
cld
fbld
push
xchg
sub
xor
cld
outsb
lcall
add
mov
fildl
xlat
mov
xchg
in
sbb
jg
pop
mov
push
scas
fldl
lea
dec
imul
insl
pushf
das
xchg
cwtl
test
arpl
movsl
sbb
repz
mov
ja
aam
inc
cmp
push
fiaddl
fadd
or
test
sahf
pop
scas
jae
and
cmp
push
int3
add
push
xor
mov
cwtl
push
scas
rcrl
nop
icebp
jecxz
sub
inc
rol
mov
sti
js
mov
pop
or
add
idivl
lahf
scas
ffreep
cli
cmp
sub
iret
lret
fs
notl
cmc
repz
lods
sub
out
call
mov
push
pop
or
and
mov
cmp
js
cli
bound
jl
jle
mov
icebp
stos
cmc
mov
sti
out
cs
in
inc
aam
xchg
add
dec
les
outsl
cmp
shlb
xchg
mov
mov
scas
into
call
sub
mov
push
cmpsl
negb
mov
cwtl
mov
lods
inc
adc
mov
jmp
movsb
jecxz
dec
jns
sbb
push
and
sbb
shl
push
push
mov
mov
sbb
rorb
dec
outsb
jb
in
cmp
or
fldpi
push
xor
and
shrb
gs
fcoml
mov
pop
je
nop
les
sbbb
dec
xchg
sti
and
shrb
sub
dec
jne
inc
inc
push
jbe
jnp
icebp
scas
shlb
lods
dec
jno
dec
ljmp
sahf
xchg
xchg
ficoms
add
nop
and
clc
push
add
mov
lds
cmp
insb
push
sbb
xchg
sub
mov
arpl
pop
sub
jge
adc
fwait
or
inc
jg
mov
pop
cmp
xchg
push
cltd
pop
inc
lods
shrl
cwtl
pusha
adc
push
jp
inc
add
outsl
push
push
shll
add
mov
and
pop
sbbb
mov
ljmp
fildl
xor
imul
xchg
push
adc
dec
mov
hlt
iret
pop
mov
in
xor
or
adc
or
xor
sbb
aad
jg
push
stos
pmulhw
mov
push
jbe
les
cmp
push
sti
ds
nop
push
jnp
adc
fists
jmp
xchg
sub
push
mov
sub
push
fimull
sbb
sub
jge
arpl
bound
cmp
sub
pop
sub
dec
jmp
rclb
mov
jne
repnz
mov
ds
pop
xor
ss
popf
inc
push
push
clc
jp
dec
and
lock
cmp
inc
aas
stc
aad
daa
out
and
js
repnz
lock
mov
lods
dec
jmp
or
pop
and
testl
pushf
mov
sbb
adc
lods
push
sub
loope
or
es
push
push
jg
popf
sub
popf
out
sbb
inc
test
sti
cmp
imul
aaa
fsubrl
jecxz
and
inc
xorl
cmp
and
fnop
aam
or
les
movsl
aad
jae
pop
js
inc
ds
push
xchg
sub
cmpsl
addl
mov
iret
fsub
int3
ret
adc
repnz
push
xchg
lret
je
jecxz
inc
pop
scas
push
cmpsl
mov
cwtl
jmp
push
mov
dec
and
mov
mov
ljmp
sub
mov
push
dec
pop
xchg
dec
orl
dec
add
xorl
sub
cmp
outsl
es
sbb
cmp
negl
add
lods
add
xchg
aam
out
xchg
pusha
lret
jp
inc
cmp
lods
xor
mov
popl
adc
testb
mov
addl
imul
sarb
push
inc
in
and
jg
mov
ljmp
xlat
pop
jecxz
es
fmuls
mov
add
lret
ljmp
arpl
mov
push
mov
sbb
and
push
popa
xor
lods
jno
sbb
shr
inc
mov
test
psadbw
cmp
cwtl
mov
lahf
test
test
xchg
sub
mov
loope
push
popf
sbb
xlat
adc
call
in
aaa
addb
adc
adcl
and
jne
and
inc
jbe
aaa
iret
xchg
cmp
push
and
ds
adc
add
insl
jmp
or
push
inc
out
cltd
adc
xor
in
dec
lret
fsub
outsl
jnp
xor
sub
leave
xchg
pop
rcll
cltd
push
jbe
xchg
dec
sub
popa
inc
add
mov
dec
sub
mov
dec
jae
cs
imul
add
and
cs
fsubl
jmp
mov
cltd
loope
cmp
or
sti
xlat
ss
insb
push
shll
mov
out
repnz
scas
daa
cs
jge
insl
cs
mov
jbe
out
and
scas
mov
ja
jge
in
aad
sub
add
ss
cld
sti
pop
and
les
and
jecxz
jmp
fsubrs
movsl
xchg
or
sub
aas
test
lahf
or
lret
mov
mov
push
adc
pop
mov
rcr
movsb
adc
imul
or
or
cmc
fs
mov
dec
mov
jge
mov
push
or
xor
xchg
jne
bound
inc
xchg
adc
daa
leave
ret
jp
pushf
jecxz
mov
sbb
push
imul
sbb
and
imul
cmpsl
repz
mov
push
mov
mov
cli
cmp
add
jge
mov
repz
popf
rcrb
into
xor
xchg
loop
lea
push
sbb
orl
loope
xor
push
test
adc
jg
cmp
cmpsl
cwtl
jmp
loope
lds
push
icebp
mov
jle
adc
scas
popf
or
mov
add
jmp
xchg
jns
inc
jae
cmp
inc
mov
sbb
aas
mov
dec
push
icebp
xor
jmp
addr16
movsb
loopne
enter
fldln2
test
insb
jno
adcb
repnz
and
and
loopne
dec
xchg
pop
inc
sti
stc
push
push
stos
testb
cmc
ret
call
add
xchg
test
mov
adc
outsl
sbb
fs
xor
fbstp
mov
dec
jp
jno
or
cmpsb
sub
dec
scas
adc
outsl
mov
adc
pop
insb
and
mov
sub
enter
in
ficomps
outsl
adc
inc
dec
fcompl
add
mull
jne
push
or
pop
daa
lds
adc
mov
sahf
aaa
cltd
fwait
push
leave
sub
and
pop
mov
mov
or
inc
cmc
sub
inc
daa
or
mov
std
mov
fdivr
mov
ss
and
pop
sbb
jp
sub
lods
movsb
inc
mov
jecxz
shr
inc
add
xor
or
adc
shll
daa
or
adc
subl
ljmp
and
dec
lock
iret
xchg
mov
dec
pushf
sbb
xchg
adc
xchg
int
xchg
add
int3
xor
inc
xor
xchg
sbb
mov
adc
daa
decl
xor
popa
adc
mov
ffree
push
pop
mov
cmp
jmp
or
lahf
mov
rsm
ljmp
pop
xor
icebp
shll
pop
bts
sarl
inc
push
push
fcompl
or
sti
lods
mov
pop
mov
xchg
mov
xchg
push
enter
pusha
daa
xor
push
cltd
mov
nop
add
popa
iret
and
repnz
xor
out
jbe
xchg
inc
lds
mov
enter
sub
cmp
or
sbb
int
mov
pop
inc
push
outsb
fwait
pop
subl
loop
ret
cli
push
push
pusha
pop
mov
insb
jno
xchg
mov
dec
fldenv
jno
jb
mov
jg
test
in
inc
cmp
jge
adc
cmp
test
mov
cmpsl
sar
int3
cli
dec
mov
inc
cmpsl
stc
mov
in
idiv
shlb
and
popa
mov
cs
out
push
ss
in
jle
add
add
lret
cmp
lock
mov
sbb
outsl
xchg
lds
movsl
ret
movsl
or
adc
push
pop
jnp
pop
mov
outsb
out
data16
das
or
and
mov
push
add
xor
pushf
cmp
jg
movb
js
rorl
or
fildll
adc
adc
scas
mov
cmp
dec
mov
add
sbb
push
fmul
or
test
test
paddusb
mov
mov
add
sbb
outsb
pop
adcl
xchg
xchg
pop
lods
cmovo
fs
adcl
xchg
pop
xchg
in
add
loop
jns
xchg
cmp
adc
jo
dec
xorl
mov
test
xor
cmp
fiaddl
add
cmpsl
iret
mov
adc
dec
daa
adc
bound
mov
or
mov
stos
cltd
bound
lods
mov
aaa
data16
out
xlat
jb
nop
pop
adc
jl
xchg
ljmp
dec
and
pop
xchg
mov
or
xlat
mov
je
pop
cmp
in
ficomps
sub
jmp
imul
and
cltd
adc
add
jno
insl
fidivrs
insl
popf
pop
pop
and
xchg
mov
outsl
sub
adc
mov
cltd
push
xchg
sbb
cmp
or
call
into
fcoml
ret
dec
cld
jnp
into
sarb
cs
fwait
in
test
nop
je
and
jle
fisubrs
out
js
pop
lds
sbb
imul
jge
fistpll
cmp
jne
xchg
cli
pusha
xchg
xlat
adc
sub
push
sub
rolb
mov
movsl
cld
push
jecxz
into
in
in
jmp
or
ljmp
imul
or
fcoml
fucomp
es
aaa
adc
or
cmc
push
aas
mov
mov
popa
aad
mov
ja
pusha
das
dec
mov
out
repnz
ret
mov
mov
and
push
data16
cmp
sub
add
jp
add
and
xchg
and
fisttps
and
inc
mov
mov
mov
xlat
sbb
add
lret
pusha
imul
mov
pusha
adc
pushl
or
mov
and
incb
insb
cmp
sbb
test
cmpsl
sbb
or
arpl
and
adc
or
pop
inc
inc
loope
lods
mov
fwait
rol
or
cmp
adcb
pushf
push
lret
inc
inc
sarb
jp
jecxz
cmp
aas
fdivl
insb
shrl
dec
scas
pusha
ds
dec
jne
shrb
iret
mov
cli
and
mov
arpl
xor
stc
sar
sti
sbb
sbb
fcmovnb
inc
ja
aad
mov
cwtl
jg
stos
pusha
jno
and
jge
mov
dec
sbb
sub
and
ficoms
push
addr16
fs
outsb
test
das
pushf
fistpll
mul
aas
nop
dec
out
mov
mov
or
mov
popf
mov
es
call
outsb
xchg
cmpb
adc
lds
pop
xor
dec
cli
dec
mov
pop
dec
das
jge
jae
icebp
jmp
std
inc
pusha
out
hlt
push
adc
insl
sub
filds
dec
xchg
imul
push
xchg
add
adc
into
loopne
xor
sbb
sub
mov
imul
dec
fstp
sub
addr16
cmp
push
or
ret
lret
popa
jg
jmp
xchg
push
dec
dec
jno
popa
shll
mov
daa
pop
mov
jns
pop
rorl
or
cmpsl
ret
sub
xlat
cs
add
lds
xchg
mov
movsb
aaa
loop
xor
js
inc
sbb
lcall
popa
cmp
ret
lret
or
push
add
arpl
clc
repz
sti
and
aaa
pop
mov
addr16
and
mov
jg
pop
mov
jl
adc
sub
cmp
aam
pop
mov
xor
cmpsb
push
daa
enter
mov
jnp
push
pop
push
in
adc
rcrb
xor
enter
sub
sbbb
fs
mov
or
xchg
jg
lret
fdivl
inc
adc
out
popa
jne
cltd
out
inc
sbb
ds
push
cmc
notl
inc
cmc
xchg
pop
mov
sbb
in
int3
pusha
cmc
imul
repz
jl
xchg
sub
adc
mov
pop
mov
xchg
dec
sahf
mov
jmp
loope
lds
xchg
imul
imul
sub
inc
sub
imul
lods
xchg
shll
and
cmp
rcrl
sbb
jecxz
adc
mov
jno
repz
dec
pusha
mov
test
sbb
push
inc
mov
dec
push
mov
inc
jae
cld
mov
mov
je
cwtl
loop
lds
adc
pop
loopne
lahf
lret
mov
dec
push
ljmp
mov
lds
daa
adc
fcomps
adc
xor
pushf
xchg
movsb
sub
add
jnp
push
xchg
cmpsb
push
mov
pop
test
sub
shll
sbb
inc
inc
test
sbb
or
xlat
push
jmp
xor
les
fistpll
andb
mov
out
lret
dec
aad
and
dec
inc
nop
xor
jmp
fcompl
add
sub
mov
xchg
mov
into
push
stos
cld
sahf
cmp
add
shlb
lahf
sarb
mov
gs
mov
mov
mov
mov
in
push
mov
lds
sbb
fst
mov
mov
pop
mov
imul
repz
popf
adc
xor
out
sbb
mov
insb
imul
cmp
pop
outsl
nop
insl
daa
jmp
ja
cmp
outsl
sbb
lea
call
movsb
mov
stc
dec
push
sub
hlt
loop
stos
push
sbb
mov
hlt
push
mov
xor
and
mov
inc
lea
xchg
in
xor
adc
jle
out
add
push
leave
aas
lock
push
outsl
sbb
das
inc
jle
std
mov
repz
aam
loopne
les
pushf
pop
mov
sub
popf
mov
sub
adc
inc
push
test
out
js
mov
loop
rol
push
mov
mov
push
aad
cmpsl
jge
pop
add
call
mov
std
pop
popa
pop
xorl
sub
lahf
test
loope
mov
xchg
mov
stc
ljmp
dec
jge
xor
daa
mov
int3
dec
mov
mov
int
nop
in
arpl
pop
pushf
loope
das
shl
outsb
repz
jne
or
arpl
jnp,pt
mov
cmpsb
ljmp
push
add
or
lods
test
mov
xchg
outsb
adc
jmp
pop
inc
sub
jg
lock
mov
lods
mov
xor
scas
cs
int
hlt
cmpsl
jle
mov
mov
cmpsl
push
fadds
lock
fxch
inc
cmp
movsb
xchg
pusha
add
mov
fistl
jb
shr
jb
mov
xor
test
mov
or
cli
mov
xor
add
in
dec
mov
sub
call
ss
aad
out
push
sbb
repnz
int3
lock
cmp
pop
shlb
jp
sbb
dec
xchg
cmp
push
stos
mov
xchg
fs
push
jo
xchg
or
and
add
inc
out
mov
clc
push
or
pop
cltd
sub
shr
xchg
aaa
outsl
in
hlt
inc
mov
sub
pop
add
das
ss
jl
mov
lret
jl
lock
mov
negl
enter
pop
lock
insl
out
outsb
test
mov
scas
les
inc
or
add
cmc
jo
out
add
sub
mov
adc
movsb
xorl
pop
rclb
pop
cmp
push
sub
mov
shll
and
adc
cmpsl
mov
cmp
mov
lods
pop
out
sub
in
pop
pop
push
add
jns
hlt
std
stc
push
inc
loopne
lock
leave
sub
test
in
in
dec
out
fsubrs
xchg
inc
les
ficoml
sub
lods
xor
sub
xor
sar
movsb
push
pop
pop
cmp
mov
push
mov
xchg
js
es
jl
jge
loopne
inc
cs
mov
xchg
out
push
mov
push
test
je
adc
imul
sub
sub
nop
mov
push
push
jne
inc
push
ret
xor
inc
jmp
fimull
mov
int
aad
mull
mov
xor
shlb
insl
lods
loopne
lret
inc
in
fsts
lret
lahf
lret
pushf
xor
ficoml
movb
sbb
std
sbbl
vpmulhw
push
pop
imul
out
movl
xor
mov
xchg
jmp
inc
or
cmpsb
movsb
or
xchg
sub
xchg
aaa
leave
cwtl
flds
xor
shll
mov
or
fs
lea
loopne
mov
cmp
lahf
fiaddl
pop
incb
ljmp
xchg
das
push
pop
fs
out
jg
or
movsb
dec
mov
popa
add
add
mov
jg
aad
add
or
push
push
ljmp
loop
shl
sbb
aad
push
add
xchg
xor
shrb
loope
icebp
jbe
outsl
cwtl
cmp
mov
adcb
imul
icebp
jns
sub
stos
xchg
mov
sbb
sub
pop
jecxz
pop
inc
shl
jno
cmp
aam
mov
sbb
repz
add
test
xor
test
jl
jnp
arpl
sub
cmp
sti
push
mov
sbb
in
jns
aaa
into
cltd
cs
pop
inc
daa
leave
in
insl
mov
cmpl
cmpsb
sub
fidivs
cs
rcrb
pushf
lcall
in
sub
cmp
adc
or
in
fsubs
mov
ds
stc
adc
cmp
subl
dec
add
and
out
jle
adc
jge
in
mov
dec
daa
cmp
outsb
clc
scas
adc
dec
mov
ror
test
xchg
mov
inc
hlt
and
clc
in
aaa
inc
push
clc
pop
jp
inc
cli
mov
add
bound
mov
fidivrs
inc
or
xchg
imul
jno
imul
pop
js
pop
in
divl
pushf
dec
es
outsl
pop
cmpsl
pop
test
mov
add
add
or
out
call
pop
sarb
cmp
mov
pop
sub
or
in
sti
fidivrl
scas
scas
and
ja
aad
mov
xchg
pusha
push
cwtl
lea
mov
xchg
cmc
lahf
ds
mov
mov
dec
pop
loopne
into
push
or
loopne
sbb
and
cmp
out
inc
mov
inc
add
stos
test
add
scas
push
add
enter
mov
add
xchg
iret
pop
jo
fidivl
movsl
lds
out
sbb
inc
or
jg
stos
cmpsl
mov
rolb
pop
xchg
sahf
cmpsl
jne
mov
stos
hlt
or
cmpl
xor
push
cs
pop
add
subb
faddl
imul
stc
push
adc
loop
jle
shrl
imul
or
or
xor
adc
xchg
mov
lods
setg
adc
out
mov
jae
imul
cmp
mov
loope
rorl
outsb
pushw
cmp
sub
xchg
sbb
xor
pop
add
in
ret
mov
xchg
cli
out
push
jle
inc
pushf
jecxz
pop
test
cmpsb
mov
ret
aad
jl
mov
iret
test
push
or
sub
push
loop
stos
pop
aam
mov
dec
mov
dec
cmpsb
dec
jmp
sbb
pop
shlb
push
cmp
xor
mov
mov
xlat
dec
ret
dec
xor
xor
pop
jb
mov
pop
mov
fwait
mov
mov
fldt
mov
pop
pop
insl
push
lock
insb
out
mov
push
mov
pop
pop
sti
or
dec
push
add
mov
mov
sub
dec
or
fidivrl
out
lea
les
leave
mov
mov
scas
cmp
aad
push
subb
push
enter
out
shlb
push
mov
sub
inc
mov
inc
popf
cmp
imul
adc
cltd
rcrl
push
outsb
nop
push
pop
insb
lds
orb
dec
ljmp
or
sub
int3
dec
jno
adc
jns
xor
mov
mov
jl
or
cwtl
mov
sub
jge
aaa
lcall
add
xchg
sub
adc
mov
test
inc
pop
mov
jp
je
bound
dec
xchg
adc
mov
popf
push
popa
push
es
inc
movsl
out
push
addb
sub
enter
adc
inc
adc
pop
push
cmp
movsb
jo
xor
rcrl
leave
mov
pop
cmpl
into
adc
cmpsl
test
xor
ss
sahf
push
scas
add
ljmp
int
shrl
shlb
push
push
sbbb
fsub
in
std
movsl
mov
xor
ret
je
loopne
xorl
mov
dec
std
sbb
adc
cmp
roll
jno
or
lret
cmpl
clc
pop
add
mov
ja
add
push
pop
mov
gs
inc
clc
adc
adc
les
js
pop
ja
push
call
push
push
stos
mov
adc
es
addl
dec
push
jl
mov
repz
faddl
pop
inc
data16
sub
mov
frstor
pop
and
in
mov
push
mov
sbb
pop
pop
sbb
push
fwait
mov
add
outsl
adc
inc
cld
pop
pop
sahf
ficoms
dec
adc
cltd
or
push
sbbl
nop
mov
add
cld
bound
sub
lahf
shlb
push
pop
mov
pop
mov
adc
jl
and
mov
add
dec
int3
fistpl
insl
sahf
xor
cmc
add
xorl
xchg
pusha
mov
pop
lret
mov
ja
mov
out
loopne
mov
xchg
mov
mov
cmp
stos
xchg
stos
push
dec
rclb
movsl
xor
push
lahf
call
shl
movsl
add
jmp
mov
lods
dec
daa
lods
movsl
cmc
int
pusha
repnz
gs
addb
insl
mov
loopne
xchg
mov
jmp
lds
dec
cmp
ret
addl
pushf
jbe
out
test
mov
fstp
icebp
mov
rcrl
mov
jno
dec
adc
stc
into
mov
jno
add
xchg
add
jbe
scas
adc
aaa
sub
cmp
push
jbe
sarb
mov
movsl
cltd
loop
push
testl
pop
cmpsb
xor
dec
fnstsw
jp
jl
mov
push
into
push
add
les
or
fstps
mov
mov
inc
movsb
or
out
popa
xchg
shrl
mov
mov
mov
xchg
sahf
mov
ljmp
test
cmpsb
int3
dec
movsl
xchg
rcrb
movl
outsl
cwtl
xchg
pop
cs
mov
and
mov
cmc
lods
dec
insb
lahf
pop
out
testb
xlat
inc
jne
int
mov
outsb
outsl
xchg
ret
cmp
jo
test
add
pop
movd
daa
pop
xchg
pop
jne
lcall
add
pop
negl
push
xchg
sbb
and
inc
cmpsb
ficomps
inc
pushl
push
gs
mov
nop
jae
jae
mov
ret
and
aas
std
loop
into
sbbl
getsec
in
gs
call
mov
xor
aas
mov
jp
les
or
mov
sbb
mov
shrb
mov
dec
faddl
xchg
fiadds
cltd
shll
mov
mov
mov
push
push
in
lahf
xchg
loop
jge
jns
inc
lea
daa
cmp
repnz
sbb
das
out
nop
or
sahf
es
lcall
inc
imul
and
movsl
push
fs
xor
push
jg
sub
dec
lock
pop
cs
sub
sub
int3
sub
cltd
into
sbb
xchg
cmpl
pushf
jg
mov
dec
or
mov
imulb
fisubrl
out
and
mov
fisubrs
push
xchg
push
scas
or
je
adc
daa
push
jmp
scas
arpl
pop
jo
pop
or
inc
jl
lock
daa
aas
in
imul
inc
rorb
shrb
imul
jnp
adc
jmp
inc
jp
mov
pop
mov
xor
in
je
cmp
pop
mov
cmp
dec
pop
out
push
or
push
sub
push
lret
add
dec
mov
rclb
aam
pop
mov
and
cmp
or
shlb
mov
lret
sbb
mov
es
jno
test
adc
rcrb
in
pop
inc
push
jmp
dec
cmp
cmp
fdivrp
stos
adc
adc
aas
in
dec
jae
int3
movzbl
or
sbb
jmp
sub
roll
xchg
inc
jnp
pop
movl
mov
push
cmp
inc
pop
sbb
xchg
xchg
daa
mov
fcoms
out
scas
cli
pop
mov
insl
repz
rorb
mov
out
mov
mov
jl
aam
mov
fstpt
push
or
mov
mov
stc
jns
sbb
push
stc
sarb
into
mov
mov
push
and
gs
imul
cmp
sub
into
cmc
dec
sbb
ljmp
sbb
and
or
iret
lods
lea
sbb
add
cmp
pushf
test
mov
andl
pop
in
lods
dec
add
cmp
adc
push
sbb
cmp
sub
push
sbb
int3
xchg
dec
in
rcrb
adc
or
shrb
lods
mov
cmp
fistl
push
out
ja
ljmp
aaa
push
mov
lcall
mov
gs
mov
lea
sbb
out
xchg
test
imul
popa
mov
dec
jae
dec
add
mov
test
push
cmpsl
dec
push
mov
push
repz
iret
mov
push
cmpsl
shr
fmulp
mov
jns
dec
ficoml
mov
test
xor
mov
bound
dec
xchg
mov
jns
movsb
push
and
mov
bound
jmp
cmpsb
aaa
xor
les
lret
fwait
loope
stc
jo
push
pop
push
stos
in
inc
mov
popf
cmp
mov
fcoml
jge
test
icebp
jg
add
pop
test
push
jle
insb
sbb
xchg
mov
xchg
repnz
lret
dec
movsl
ljmp
xchg
inc
jnp
jb
bound
adc
outsl
jmp
cmp
rcll
push
jl
and
xor
cwtl
push
xchg
push
adc
xor
leave
or
rol
es
dec
sahf
movsl
es
lcall
addr16
adc
stos
rcr
loope
test
hlt
inc
sbb
jns
inc
mov
sbb
push
dec
lods
dec
adc
cmp
movsl
pusha
inc
rcrl
mov
mov
shrb
test
out
mov
rep
xchg
sbbb
cld
enter
inc
aad
movsb
ret
js
and
inc
lods
icebp
push
int3
cmp
ret
in
jmp
adc
pop
repnz
lods
mov
sbb
sbb
push
inc
inc
stos
dec
adc
dec
fnsave
rep
cmp
pop
cmc
push
jle
fs
aam
fimuls
inc
add
loopne
mov
mov
lahf
push
lods
add
push
mov
adc
popa
pop
ret
mov
movsl
push
or
adc
sbb
pop
adc
lock
movsl
push
pop
and
addr16
das
aas
sbb
xchg
ret
add
sbb
or
or
xchg
les
sbb
pusha
sbb
adc
mov
xor
add
jecxz
lods
fcomps
pop
insl
jp
outsb
pop
inc
push
and
aaa
jns
lods
push
iret
out
ljmp
jmp
sub
sbb
sbb
fneni(8087
xchg
sbb
inc
lcall
jg
fs
pop
stos
repz
shlb
aad
imul
and
xlat
popf
jnp
aam
enter
aam
aas
jbe
mov
ret
rep
orl
inc
sbb
mov
leave
popa
stos
xor
sub
adc
loopne
push
cmpsl
leave
mov
andl
xor
fisttpll
sbb
adc
lock
sti
leave
sti
andb
adc
imul
loop
iret
test
aaa
lea
shll
cmp
mov
popf
push
or
cmp
testl
lods
adc
jmp
push
test
xlat
ss
dec
cmpsb
arpl
add
shlb
fwait
sar
pop
ja
movsl
dec
pop
arpl
int
sub
mov
mov
sub
aas
stos
push
push
test
mov
dec
fbstp
mov
into
pop
in
loope
pop
and
inc
cmp
jo
scas
and
jns
dec
or
xchg
bound
pop
xor
fwait
nop
sub
movsl
std
popa
cwtl
adc
xchg
and
jp
cli
jae
loopne
gs
pop
in
cmpsl
jl
mov
mov
sahf
jle
test
sub
jp
or
ds
dec
lret
mov
add
enter
inc
rclb
test
shrb
loopne
adc
popf
jmp
adc
sbb
icebp
sbb
pop
out
mov
jmp
ss
mov
cmp
shlb
pushl
addr16
aas
xchg
lods
sub
xchg
mov
int
lcall
js
lea
imul
push
dec
pop
xchg
xorl
inc
mov
adc
insb
jp
pop
mov
xor
lret
icebp
dec
push
jno
lea
inc
mov
jo
ret
data16
in
xorb
pop
add
ds
in
lcall
ja
sarb
dec
shll
movsb
mov
idivb
jbe
lret
jbe
cmpsb
or
out
cmp
test
pop
cmpl
sahf
daa
sti
fimuls
cmp
adc
movsb
pop
call
movsl
inc
pop
inc
push
jle
adcb
dec
push
es
add
ror
pop
xchg
ret
pop
es
rcr
mov
xchg
mov
outsl
inc
lcall
mov
mov
mov
jmp
popf
loope
fwait
and
daa
es
aam
or
insb
ss
mov
mov
mov
jl
test
add
dec
sahf
add
adc
inc
sbb
pushf
adc
loop
or
movsbl
jne
out
jmp
inc
mov
sti
jae
rcr
movsl
fwait
ret
cmp
pop
sbb
fmuls
ficomps
out
lcall
sbb
movsl
das
dec
popa
adc
pusha
xor
or
cltd
jne
or
pop
in
es
inc
or
popa
lret
mov
xor
sahf
rorl
sub
push
cmp
rorl
aam
mov
push
add
es
mov
into
rcrl
incb
xchg
mov
in
loopne
mov
inc
pop
cmpsl
push
adc
jo
mov
mov
mov
xor
add
mov
enter
mov
mov
dec
aam
or
xchg
and
pop
mov
sub
sahf
and
lds
popa
mov
mov
ja
in
mov
shrl
pop
inc
es
mov
test
sbb
sbb
adc
mov
idivb
loop
xchg
pop
adc
neg
inc
pop
inc
subl
cmp
das
add
out
xchg
and
cmpsl
mov
out
mov
addl
insb
sbb
or
mov
mov
push
sub
sahf
mov
mov
rclb
dec
aad
js
cmp
pop
or
pop
scas
test
mov
jge
mov
xlat
daa
xor
xchg
stos
out
outsl
xlat
push
pusha
inc
cmp
iret
jg
jge
cmpl
rorb
mov
pop
sub
jno
inc
lock
cmpsb
and
add
mov
cmp
out
out
iret
es
and
dec
cmpsl
mov
dec
mov
adc
sub
sahf
mov
mov
mov
test
mov
or
movsl
int
pop
pushf
lret
xlat
inc
fstps
ljmp
xor
stos
ret
lods
dec
mov
jle
sub
push
daa
push
mov
xchg
jmp
les
imul
ljmp
repnz
jb
dec
mov
sbb
ds
push
mov
rclb
adc
dec
jle
rol
fstp
mov
inc
sbb
outsb
push
xchg
test
stos
daa
jge
in
sahf
popf
xor
pop
in
pop
insb
inc
mov
lods
cmpsl
mov
mov
dec
mov
xor
fdivr
out
test
xchg
rclb
mov
or
adc
nop
fbld
scas
jno
push
jecxz
jg
insl
push
dec
scas
cmp
sbb
jae
notb
gs
test
or
jb
mov
icebp
rclb
pop
cmpsb
cmp
loop
aam
sub
fidivrl
notb
jp
and
aaa
outsb
push
pmullw
add
cmp
shll
ja
nop
jno
add
stos
xor
and
or
nop
pop
pop
sbb
int3
in
cltd
and
or
andl
mov
arpl
or
flds
das
loope
pop
in
sbbb
adc
lahf
test
xlat
cmp
or
mov
push
iret
mov
ret
inc
add
inc
cmpsl
pop
xchg
pop
adc
adc
in
or
mov
aam
dec
ljmp
pop
outsb
rclb
mov
aaa
lock
ror
dec
jge
fs
imul
in
fisttpl
lods
mov
sub
test
jbe
xor
push
mov
ret
and
imul
in
cltd
and
xor
xchg
ljmp
test
pop
bound
fisubl
xchg
notl
fbstp
dec
sti
xor
cmpsl
addl
or
imul
add
push
test
sub
adc
or
aam
test
mov
leave
xor
cmp
inc
imul
adc
lahf
or
push
add
or
push
out
bound
outsl
imul
push
add
push
enter
sub
imul
sbb
pop
push
adc
xor
jmp
mov
sub
xor
lea
lcall
xor
mov
insb
and
xchg
cli
ret
sub
adc
lea
int3
jae
std
mov
cmp
inc
dec
cli
jo
stos
lds
enter
mov
and
popf
mov
or
mov
stos
leave
fisubl
jge
add
ljmp
cmp
push
jo
es
cmp
in
mov
inc
cmpl
out
pop
imul
sub
iret
mov
xor
inc
mov
xchg
std
fwait
les
add
addl
sub
mov
sbb
xchg
aad
loop
xchg
mov
adc
sub
jno
cmp
into
xor
sbb
inc
adc
fstp
outsl
sbb
lods
outsb
into
add
xchg
insl
add
loop
outsl
dec
ljmp
sbb
or
in
lret
and
js
lock
jge
cwtl
mov
ficomps
jle
sahf
lods
lock
sbb
mov
je
imul
or
pop
pop
leave
lods
leave
add
stos
pop
jno
out
sahf
dec
add
movsb
mov
mov
ss
sbb
fninit
sub
jno
lcall
call
mov
into
shlb
inc
call
fsubrs
jecxz
dec
cmp
or
inc
cmpb
stc
call
inc
insl
loop
out
in
lret
arpl
cmp
push
inc
add
pop
cmp
popa
push
addl
push
pop
cli
push
and
repz
nop
or
sub
jmp
inc
rcrl
jb
mov
add
fmuls
pop
cmp
sbb
push
jmp
stos
jg
movsl
cmp
xchg
and
ss
pop
pop
sbb
scas
into
push
outsb
lea
push
mov
sti
xor
int3
sahf
js
lods
mov
gs
imul
sub
outsl
jge
xchg
mov
push
cmp
roll
inc
mov
sbb
adc
push
das
sti
mov
jmp
je
mov
sbbb
iret
int
imul
xor
mov
adc
lods
scas
lock
sahf
pop
stc
mov
mov
pushf
mov
fdivrl
stos
mov
loopne
xchg
push
jne
sahf
or
mov
adc
mov
ljmp
inc
mov
xchg
pop
xchg
or
jo
jp
sbb
cmp
adc
outsl
mulb
pusha
test
test
icebp
mov
inc
xchg
jne
js
mov
push
inc
or
mov
popa
xchg
std
and
mov
lcall
mov
inc
mov
pop
outsl
mov
mov
jnp
xchg
stc
test
repnz
bound
and
xchg
scas
insl
repnz
popf
sub
stc
inc
adc
lret
les
jnp
addr16
xchg
add
fwait
test
xchg
outsl
aaa
fisubrl
push
and
cli
lea
or
call
cmpl
loop
into
lret
push
jbe
stc
xor
xchg
xchg
les
rclb
cmc
nopl
pop
jno
shrd
mov
pop
push
xor
jbe
xchg
repz
adc
out
push
aas
cmp
add
sub
sbb
and
adc
sti
adc
aaa
int
scas
lods
mov
push
rcrb
iret
fisttpl
std
pop
add
mov
lea
stc
cs
sub
ret
leave
xlat
xchg
lock
fdivr
cld
aam
cli
fwait
push
push
iret
cmpsb
jne
sti
pushl
pop
scas
jb
mov
ja
shlb
pusha
xchg
pop
pop
mov
jbe
cmp
lahf
dec
pop
mov
repnz
mov
out
aam
mov
int3
aas
pop
inc
xchg
roll
mov
add
cmp
popf
push
push
xchg
cmc
mov
jl
sbb
jbe
jg
sub
rcrl
movsl
out
jg
jb
mov
jg
in
aaa
mov
fimull
fcmovnu
or
stos
repnz
shrb
iret
lea
jo
es
shl
lret
repz
test
dec
pop
lods
in
mov
or
stos
xchg
test
cmpsb
adc
sbb
nop
jo
movsb
dec
aad
xor
jnp
icebp
push
fs
mul
inc
xchg
ret
sbb
imul
mov
jo
cmp
sub
adc
mov
sbb
push
stc
inc
push
int
sub
fsubrs
sub
iret
jbe
mov
out
push
push
repz
adc
jg
and
xchg
fs
pop
cmp
push
mov
shlb
scas
les
arpl
insl
pop
jp
subb
lods
scas
push
into
nop
into
push
xor
outsb
add
jns
pop
cld
lock
cmc
jp
jno
sub
and
ja
lds
pop
sub
lret
jecxz
das
sub
or
shrb
inc
xchg
sbb
mov
adc
popf
sbb
xor
imul
mov
pop
adc
pop
add
jle
shl
sbb
daa
jne
or
pop
mov
ret
pusha
adc
insl
mov
dec
mov
mov
cwtl
into
mov
clc
sub
mov
dec
dec
cmp
sti
mov
mov
xchg
xor
add
fs
leave
or
addb
mov
jg
jecxz
sub
shll
mov
test
outsb
mov
imul
push
sbb
pop
xor
push
inc
je
push
outsb
adc
mov
std
and
ljmp
xchg
cmp
jp
stos
xchg
mov
mov
aad
pop
cmc
push
in
push
push
in
xor
jecxz
mov
sarb
or
adc
mov
xchg
loop
into
daa
in
dec
jns
xchg
add
xor
addr16
push
je
add
jbe
out
stc
mov
and
imul
mov
in
outsl
jns
cld
jge
jp
mov
shrl
inc
and
sub
mov
imull
clc
xor
not
pushf
jae
mov
filds
xchg
push
lea
imul
jns
add
push
or
test
mov
sub
add
mov
xlat
xor
mov
pop
cmp
fdiv
je
or
aas
inc
test
mov
mov
and
lock
enter
cmp
in
mov
push
movsl
orl
sbb
cs
sub
insl
add
mov
shl
cwtl
sbb
fwait
xor
sahf
mov
cmp
jl
push
stc
xchg
pop
mov
push
mov
in
out
add
mov
lcall
sbbl
push
add
lahf
pop
xor
popf
and
jbe
popa
js
push
pop
inc
lea
fcmovbe
or
ljmp
mov
cmp
and
std
pop
push
jo
xchg
fsubl
or
inc
adc
in
int3
les
fbld
sbb
inc
das
bound
pusha
mov
cmp
add
bound
ljmp
add
or
jp
adc
push
mov
mov
nop
cli
in
shrl
scas
cld
addr16
std
cs
cltd
jb
inc
jno
cltd
pop
push
mov
xsha256
cmpsb
shll
sub
xchg
mov
sub
mov
mov
fcoms
dec
pop
add
in
pop
push
lods
mov
je
cmp
fwait
and
roll
push
add
inc
mov
daa
mov
aam
clc
or
mov
sbb
test
je
dec
add
xor
repz
inc
jmp
pop
mov
push
pop
cld
out
ljmp
nop
loopne
fiaddl
add
sbb
xchg
adc
jmp
add
mov
push
ret
mov
repnz
cwtl
ds
lock
xchg
idivb
shll
cmp
call
jae
bound
xor
ja
sbb
jp
lea
pop
mov
je
orb
and
ret
in
push
jae
mov
lahf
xlat
gs
pop
bsf
mov
xchg
mov
rcll
push
sar
inc
pop
sub
imul
loop
shlb
xor
sub
clc
test
loop
xor
pop
inc
shrb
push
jnp
test
add
add
push
xor
inc
pop
pop
mov
hlt
or
test
les
and
push
test
lods
pop
mov
and
testl
xchg
icebp
repnz
lods
mov
inc
mov
jbe
subb
and
push
fcompl
and
fistpl
fisubrl
insl
inc
push
cmp
fdivrs
jg
pushf
inc
lret
stos
sub
inc
cltd
lds
lcall
pop
push
dec
sbb
xor
jbe
cmpsl
ljmp
pop
xchg
xor
jns
pop
add
push
inc
movsl
leave
shrl
sub
in
mov
dec
lea
or
xchg
sub
jle
and
xor
or
jp
loope
xor
xchg
data16
and
mov
sbb
adc
or
add
xchg
mov
fstpl
jmp
sti
insb
sub
cmc
movsl
pop
jmp
xlat
cld
and
aam
das
adc
stos
imul
lahf
add
sbb
jecxz
sub
sbb
jp
jle
mov
lods
pop
dec
cmp
and
data16
cmp
xchg
mov
mov
jg
pop
cmp
test
push
ret
cmp
popa
mov
or
mov
pop
mov
mov
inc
and
push
enter
sbb
cmp
push
cld
sbb
iret
xor
inc
fadd
add
loopne
inc
add
lahf
lods
mov
inc
push
addr16
aad
mov
jg
push
jecxz
pushw
lcall
cmp
add
sub
ret
mov
sbb
std
mov
aad
mov
leave
js
push
mov
loopne
stos
fwait
call
push
popf
and
mov
cld
jecxz
insb
ljmp
stos
int
daa
adc
jmp
mov
or
sub
fldt
out
sti
pop
out
in
lock
outsb
inc
negb
dec
jb
pop
cmp
pusha
jmp
push
cwtl
ret
int
repz
mov
aad
insb
ds
out
loop,pt
aam
add
aaa
and
rolb
inc
mov
pop
mov
xor
xchg
iret
inc
add
daa
iret
test
sub
sbb
sub
xchg
aam
mov
in
pop
lock
scas
adc
insl
pop
loope
nop
adc
dec
inc
jecxz
jle
fs
sub
cld
jae
fucom
jmp
xchg
mov
pushf
testl
and
or
insl
je
jb
popf
notb
imul
sbb
dec
mov
out
fiaddl
addr16
mov
pop
bound
sti
lret
or
sbb
les
jp
lock
sub
flds
test
or
inc
je
shr
pop
push
cld
fsubr
push
inc
sbb
sub
jmp
in
inc
leave
roll
lahf
mov
cmp
push
fxch
data16
imul
and
mov
sti
mov
pop
adc
jae
mov
add
mov
adc
jns
leave
xor
xchg
fidivrl
nop
sub
push
leave
out
aam
daa
movsb
dec
repz
jmp
addr16
adc
mov
imul
add
adc
jmp
mov
int3
dec
inc
idiv
loop
daa
xlat
sbb
sbb
sarb
dec
movsb
pusha
sbb
xchg
sub
push
and
daa
adc
mov
xor
ds
scas
cmpsb
sbb
sahf
in
sbb
push
imul
imul
outsl
jb
sub
mov
test
push
stc
mov
mov
out
dec
jbe
pop
test
sbb
or
xor
ss
call
jns
sub
pop
xchg
fs
inc
adc
inc
daa
pop
movsl
mov
mov
pusha
mov
or
and
jae
jmp
lods
add
imul
sbb
stos
dec
mov
repz
shl
fldenv
xchg
fwait
add
je
add
cmpl
adc
xchg
dec
and
repz
mov
shl
pop
incl
rcrb
push
xlat
stc
loop
scas
mov
sbb
jbe
pop
xchg
rcrl
xorb
jmp
cmpsl
mov
xor
nop
sub
subb
xchg
pushf
sbb
inc
jg
cli
xchg
ret
cs
jo
mov
addl
test
push
in
fwait
jecxz
xchg
sbb
xchg
xorb
push
push
jb
or
cmpb
ljmp
cs
les
mov
aas
pop
cmpb
dec
loopne
aad
xchg
dec
mov
and
insl
fstps
gs
sbb
pop
and
push
sub
sahf
pop
faddp
dec
push
out
push
mov
not
sub
aas
inc
fwait
pop
ds
mov
or
iret
es
mov
shll
inc
aam
jp
add
paddq
xchg
push
adcb
inc
dec
xor
dec
rcrb
test
inc
imul
or
dec
or
call
out
sub
xchg
or
arpl
cltd
pop
imul
mov
jl
inc
push
fwait
xor
jecxz
inc
sub
jmp
mov
mov
mov
loopne
adcl
nop
lcall
mov
jns
mov
test
dec
das
ret
fs
jb
lea
ds
loope
jge
xlat
and
pop
inc
push
imul
or
xor
add
and
mov
pop
dec
int
std
shlb
sub
xchg
loope
test
add
daa
and
iret
mov
dec
cs
sbbl
divb
ja
call
mov
lahf
aad
lret
cltd
filds
pop
scas
push
jge
adc
push
sbb
dec
adc
fadd
jmp
mov
cmpsb
mov
mov
or
mov
cmp
outsl
sub
adc
iret
add
push
movl
ret
xchg
add
sbb
push
mov
loope
loop
and
dec
cmc
out
xchg
mov
cs
lret
ret
shrb
int3
xchg
cmp
xor
xchg
cmp
fiadds
in
jmp
in
xor
popa
stos
and
js
clc
scas
inc
in
or
repnz
push
xchg
ret
adc
in
push
mov
incl
pop
shrb
notl
test
xchg
xchg
dec
jbe
jno
pop
and
fnstsw
stos
lahf
dec
hlt
pop
jle
addr16
pop
aas
sbb
das
call
aaa
shlb
sub
mov
lahf
arpl
and
xchg
sub
dec
cmpsl
fs
repnz
repz
and
and
xor
push
dec
jge
push
insl
mov
jnp
leave
sub
sbb
pop
push
scas
in
push
mov
sbb
sub
push
cli
popf
jb
or
shl
stos
out
ja
cmpsb
lret
jg
add
shll
or
outsl
sub
mov
cmp
inc
out
push
pusha
push
loopne
lds
jg
ret
push
xchg
cmp
sub
dec
orb
xchg
push
je
aas
outsb
rolb
or
icebp
aam
aam
sub
movsl
iret
jmp
push
pop
mov
mov
push
out
fs
add
mov
out
pop
xchg
pop
rcl
ja
sub
lret
xchg
jae
jae
out
mov
cmpsl
dec
add
mov
repnz
fldenv
ror
test
lret
xor
sbb
addr16
stos
xor
test
outsb
je
fildl
stos
aad
inc
sahf
shll
xor
xor
imul
adc
stc
popa
sti
mov
mov
andb
mov
pop
icebp
mov
test
adc
outsl
out
lret
and
inc
adc
je
out
add
sub
or
pop
repz
pop
into
xlat
out
and
mov
bound
jp
enter
pusha
sub
sbb
pop
in
notl
aas
dec
rcrl
cmp
mov
mov
xlat
in
cmpsl
sarl
enter
bound
mov
cs
insb
jnp
inc
scas
js
mov
cmpb
je
jecxz
xchg
fcomps
or
xor
jns
pop
push
shll
pop
int3
jne
xchg
in
and
ja
addr16
push
es
push
and
jp
jle
ljmp
fidivl
ljmp
dec
lcall
add
mov
mov
mov
sbb
movsl
in
or
popf
pop
fdivl
rcll
iret
mov
je
push
cmp
ljmp
aad
cltd
mov
fisttpll
jbe
sbb
sbb
add
push
les
and
xchg
mov
adc
jg
mov
int3
xor
jg
dec
cmp
into
or
lcall
out
inc
sahf
out
mov
shll
repz
cwtl
or
xor
fistl
add
lea
mov
mov
addl
pop
shr
adc
xchg
xor
inc
sbb
jle
sub
aam
lock
push
mov
inc
push
cltd
cs
sub
cmpsl
sbb
popa
pop
sub
sbb
mov
hlt
je
mov
je
inc
jno
dec
or
ja
enter
adc
gs
enter
lcall
in
xadd
mov
outsb
xchg
mov
sub
mov
push
cmp
ret
mov
cli
loope
sbb
cmp
pop
fists
jne
push
push
sub
fwait
jmp
jl
sbbl
filds
adc
dec
push
jnp
mov
add
pop
int3
lock
into
xorl
push
mov
inc
in
fbstp
dec
adc
pop
loope
pusha
shr
xchg
jg
lock
addb
loop
fwait
pop
arpl
insl
dec
aad
lods
test
or
xchg
add
cmpsl
mov
pop
push
mov
insl
inc
jmp
sbb
mov
enter
push
ljmp
testb
mov
inc
mov
jge
jge
scas
je
shrl
imul
mov
or
mov
mov
push
lods
cmp
lock
jge
aas
sti
jge
cmp
push
addr16
notl
mov
inc
jo
andl
mov
mov
enter
push
xchg
pusha
loope
stos
nop
mov
movsb
sbbb
sbb
or
in
and
sbb
movsb
adc
push
pop
out
adc
pop
adc
sbb
dec
les
fisubl
push
aad
mov
cmp
popf
push
sub
cmc
cmpsb
jae
negl
xor
inc
je
or
imulb
mov
xorl
add
dec
fbstp
cmp
jmp
cmp
aam
sbb
mov
cmp
and
inc
inc
mov
ret
loope
sub
mov
push
push
xchg
add
sub
iret
sbb
inc
adc
fmuls
addr16
cmpsl
fnstsw
stos
push
gs
pop
xchg
adc
mov
ror
pop
icebp
add
or
xor
cmp
sbb
lret
jl
in
add
sub
or
pop
jmp
das
adc
jmp
dec
pop
jae
jg,pt
cmp
into
push
scas
outsl
add
loop
jp
sbb
inc
xor
mov
add
jo
decl
stos
push
jl
mov
fists
dec
mov
lods
push
repnz
xor
leave
jp
mov
dec
dec
mov
cmp
ss
xor
cmp
outsl
gs
imul
add
cmp
dec
stos
rorl
xor
out
fnsetpm(287
jmp
push
sarl
nop
lcall
xchg
jmp
mov
lcall
movb
sbb
and
ljmp
into
fstps
sub
push
and
jecxz
xor
es
aaa
push
xchg
fiaddl
loope
or
test
repnz
and
inc
aad
mov
pop
test
movsl
ljmp
fdivrs
xor
xor
or
jne
inc
jns
test
mov
dec
neg
sub
lock
insb
pushl
jg
roll
lds
pushf
cmp
fldl
sti
xchg
outsb
mov
addb
sub
add
jecxz
filds
jmp
mov
in
lret
cld
addr16
daa
push
pop
jp
inc
xor
jo
dec
popa
jbe
mov
rclb
sbb
adc
aas
dec
adc
xchg
inc
stc
sbb
dec
mov
enter
jmp
cmp
mov
adc
lret
fcmovnb
js
das
and
loopne
and
ljmp
jge
xchg
es
push
pop
jp
push
xor
sub
lods
push
lahf
sbb
iret
xor
jp
fwait
lds
repz
mov
jg
imul
test
aas
push
mov
and
sub
mov
add
shrb
pusha
inc
sub
push
out
int3
in
or
fsubr
fdivrp
cmp
mov
push
fbstp
dec
dec
es
inc
sbb
cli
fildll
mov
add
fs
pop
addl
mov
mov
mov
cmpsb
out
xchg
xchg
dec
or
pop
and
outsl
xchg
addl
mov
pop
lds
fs
xchg
sbb
clc
ljmp
pop
das
jg
out
fcmovb
mov
lcall
cwtl
add
xchg
lret
add
fmul
or
out
xchg
repz
jl
scas
push
popf
mov
daa
jne
adc
daa
out
ss
popa
add
sub
aaa
popa
shl
sbb
fnsave
xor
jo
loopne
lret
jecxz
mov
lret
inc
pop
pop
div
mov
mov
das
sbb
scas
icebp
pop
mov
iret
push
xchg
mov
pop
lret
shlb
push
cmp
cmpps
pop
dec
xchg
mov
int3
xchg
sub
call
mov
mov
jns
nop
aam
imul
data16
fwait
push
push
les
xor
and
mov
pop
jmp
out
repz
add
lar
add
push
xchg
movsb
lret
ja
test
movsb
lods
enter
shlb
mov
lret
push
pop
and
jge
aaa
mov
jnp
push
nop
xchg
rcrl
clc
loope
xchg
mov
loop
pop
pop
and
inc
and
and
pushf
rcrl
ds
ror
jmp
mov
adc
lcall
inc
cmp
push
sbb
arpl
mov
inc
ss
jle
jge
mov
xchg
dec
call
sti
xchg
mov
add
push
dec
mov
lret
inc
adc
js
fimuls
int
pop
rorb
sub
or
test
and
inc
mov
sub
outsb
cmp
sub
aaa
ja
jge
sub
js
ret
dec
fldcw
cltd
inc
xor
rolb
sbb
add
scas
push
or
ret
cmp
dec
mov
cmp
push
ffree
mov
ljmp
imul
sbb
aam
mov
and
gs
sub
fcmovbe
jnp
cmp
les
arpl
push
cmp
lret
icebp
std
pop
jnp
daa
scas
xor
pushf
in
sbb
jl
ljmp
mov
inc
fdivp
xor
movsb
xor
cli
loopne
mov
movsb
vsubps
fs
icebp
dec
out
inc
or
cmpsb
fiaddl
jg
inc
iret
mov
rolb
inc
data16
inc
xor
notl
out
roll
push
popl
push
lret
pusha
movsl
pop
adc
les
or
lods
jp
adc
pop
addr16
stc
test
roll
inc
pop
fs
imul
push
aad
push
sbb
xor
cld
aam
pop
xchg
ja
pop
test
cld
fadd
sub
test
cmpsb
mov
dec
ljmp
dec
xor
mov
xchg
and
test
fnsave
sarl
shll
scas
pop
mov
mov
das
pop
shrb
or
sub
xor
xchg
cltd
aad
xlat
xor
jmp
in
lahf
pushf
nop
fs
addb
leave
sub
or
sbb
xor
or
pop
xor
mov
pop
popf
imul
lds
addr16
adc
outsb
fistl
arpl
rolb
outsl
mov
insl
sub
popa
mov
std
int3
test
mov
lock
add
loop
popf
mov
pop
xchg
imul
addl
in
nop
adc
daa
mov
imul
cli
lahf
out
inc
cwtl
mov
pop
push
sbb
inc
or
and
fldt
pop
mov
cmpsl
lock
cltd
cmpsl
or
shlb
mov
jmp
mov
lods
xchg
xchg
sub
sub
add
push
sbb
sbb
push
loopne
in
into
xor
mov
adcl
add
jb
arpl
inc
aad
sub
mov
pop
xchg
in
xor
test
rcr
xor
aaa
pop
mov
inc
dec
fucom
fstl
roll
cwtl
inc
sbb
cli
ret
mov
call
out
scas
into
out
cltd
sub
nop
push
dec
incl
and
jnp
outsl
shrl
or
inc
cwtl
adc
add
push
pop
outsb
push
loop
mov
push
fidivrs
pop
cltd
or
movsl
sbb
push
or
xor
ficoml
cs
and
and
jl
xchg
ss
loope
push
xor
addb
gs
jg
xchg
addr16
rorb
into
cmp
loopne
and
test
movsb
aas
insl
inc
add
jle
add
pusha
sub
loope
hlt
lahf
xor
and
dec
dec
inc
pop
or
movsb
pop
ljmp
mov
mov
adc
mull
fdivl
stos
dec
or
js
jg
xor
movb
lahf
xchg
inc
dec
push
fdiv
imul
cmp
movsb
imul
arpl
adc
lcall
xor
outsl
fsubs
and
pusha
frstor
shrb
notl
adc
mov
mov
jge
enter
shlb
movb
jne
inc
sbb
inc
inc
ret
lods
cmp
mov
stos
dec
jg,pt
out
jo
push
nop
jcxz
xchg
and
mov
jns
mov
out
mov
js,pn
fmuls
ja
sbb
sar
sub
mov
addb
mov
js
jnp
hlt
fisttps
mov
mov
enter
shll
xchg
rcrl
and
or
jb
inc
adc
das
mov
inc
adc
pop
cmp
or
cmp
mov
adc
cmp
inc
inc
mov
push
pop
out
xor
je
push
jne
mov
sub
mov
popf
push
pop
imul
lock
inc
out
js
or
cs
or
inc
xchg
adc
pop
and
push
int3
jmp
cmp
mov
jg
pop
sbb
insl
orb
xor
leave
loopne
xchg
jmp
jne
jne
cmc
jmp
fs
mov
dec
xchg
dec
outsl
sahf
das
mov
dec
xor
adc
and
inc
xchg
push
daa
add
out
mov
xlat
push
sub
andb
aam
cmp
call
cmp
scas
adc
push
pop
mov
shlb
xchg
inc
sbb
cmpsl
mov
test
or
test
mov
movl
cltd
into
or
or
mov
fimuls
ja
arpl
mov
inc
enter
pop
pop
arpl
call
xchg
sub
or
out
pusha
pop
and
mov
lcall
dec
inc
das
xor
inc
shlb
mov
jmp
aad
int3
iret
add
mov
stos
cltd
lods
movsl
stos
jo
mov
lcall
pusha
je
int
and
cmpsb
add
add
inc
dec
and
shll
into
add
xchg
pop
out
mov
mov
pop
bnd
repnz
addr16
jno
popa
sbb
jp
int
push
out
jae
aad
jno
xchg
mov
add
push
sbb
js
xchg
fnstsw
pop
in
addr16
mov
sbb
inc
cmp
lock
cmp
iret
mov
mov
loop
fucomip
gs
add
mov
stos
push
sbb
test
mov
pushf
cmpsb
jnp
stos
fbstp
jmp
adc
xchg
cmp
pop
sub
testl
fcos
inc
cwtl
adc
adc
push
adc
adc
out
push
push
push
mov
sbb
push
cwtl
orl
mov
jns
ficoml
xor
push
jbe
sub
icebp
jge
push
jle
mov
pop
icebp
sahf
sub
mov
inc
testl
mov
sbb
mov
fwait
ds
pop
call
bound
cmp
stc
notb
inc
insl
and
int
adc
mov
ss
ja
mov
les
imul
stos
js
sbb
test
inc
ljmp
mov
cmp
cli
xchg
pop
mov
dec
incl
incl
dec
cld
not
stos
rcr
in
sahf
add
in
cld
sub
outsl
rol
movsl
mov
gs
xchg
xchg
pop
lock
jno
cli
gs
fisttpl
js
and
mov
sub
mov
les
ds
imul
mov
addb
sub
hlt
insl
jmp
add
pop
xchg
sete
call
push
sbb
int3
dec
adc
lret
call
popf
orl
dec
insb
mov
mov
dec
jno
orb
xchg
push
cmpsl
lret
jb
xchg
arpl
sbb
mov
fmuls
pusha
and
and
out
cmc
and
dec
je
sub
stos
roll
inc
mov
dec
int
mulb
pop
sbb
mov
mov
nop
xor
fnstsw
xchg
mov
cmp
lock
packsswb
ret
pop
mov
movsl
test
sbb
les
mov
xchg
inc
xor
push
mov
pop
cli
fsts
sbb
add
lcall
jle
jmp
pop
movsl
xchg
pushf
rcr
inc
and
sub
push
hlt
pop
aad
inc
rcrl
mov
aas
das
cmp
dec
mov
mov
push
pop
mov
int3
test
lret
jmp
test
push
mov
gs
adc
jg
inc
add
push
fcmovne
cltd
andb
cmp
icebp
lds
xlat
push
push
jge
insl
pop
mov
sahf
sbb
mov
xchg
inc
xchg
sbbl
mov
push
out
cmp
lret
and
lods
jo
loopne
shlb
imul
xor
sub
jecxz
nop
jo
add
sbb
or
sbb
js
popf
loopne
in
sub
fstpt
jecxz
add
push
decl
fldcw
push
int3
mov
imul
dec
xchg
or
xchg
add
gs
pop
sub
mov
stos
lahf
nop
popf
sbb
mov
int
cmpsl
or
mov
pop
dec
std
pop
test
mov
xor
shlb
fsub
adc
aam
add
shr
arpl
stos
push
movsl
cmc
loop
pop
xchg
dec
inc
xchg
stc
inc
ds
pop
adc
das
sbbb
or
adc
das
xchg
dec
ret
ret
push
pop
aad
test
mov
add
data16
inc
pop
or
mov
mulb
mov
addb
inc
inc
inc
cltd
les
pop
nop
dec
cmpsb
dec
push
in
mov
jno
gs
test
out
cmc
jo
movsl
cmp
or
ljmp
scas
aad
int
add
mov
loope
rcrl
fmuls
fisttps
jb
clc
adc
adc
mov
mov
scas
cmp
dec
idivb
movsb
xchg
mov
push
inc
popa
xor
adc
add
into
or
mov
xchg
out
cwtl
mov
adc
cmp
or
jl
stos
mov
mov
loopne
and
iret
cmp
es
rorl
popa
mov
ljmp
out
das
jmp
out
das
pop
shll
jmp
inc
fstpl
xchg
movsl
cmpsl
add
rcl
sbb
or
lods
pop
loope
xor
test
daa
add
xchg
and
fnstenv
cli
in
movsb
and
pop
push
dec
subl
push
rclb
hlt
addl
es
xchg
movsb
fs
stos
mov
lcall
xor
xchg
pop
cmpsb
andb
xor
add
mov
pop
loop
out
and
adc
xchg
mov
push
dec
jne
fisttpll
sub
xor
decl
arpl
pushf
shll
imull
adc
mov
sbb
scas
cmpsl
mov
dec
pop
push
mov
sbb
out
jecxz
cmp
dec
aaa
dec
mov
fisubrl
inc
mov
lahf
in
pop
fisubl
dec
pop
push
pop
movsb
add
push
xchg
cmp
stos
or
sahf
push
pop
cmp
testl
jmp
imul
pop
rorl
jmp
or
sbb
mov
mov
outsb
dec
neg
cmpl
add
mov
mov
shrb
je
inc
pop
test
dec
imul
rorb
iret
inc
xchg
or
je
aaa
push
xor
shrb
jmp
mov
ds
ret
cs
jns
in
lea
xor
dec
jnp
ljmp
mov
push
xorb
mov
sbb
sub
inc
xor
inc
cltd
push
jbe
push
push
and
lcall
xor
lods
test
xchg
jl
xchg
aam
jb
fwait
push
mov
pop
push
fwait
xor
sub
add
stos
nop
shrl
adc
push
fimuls
jo
test
cmp
mov
xor
in
ret
jle
jp
and
out
push
or
ja
cmc
sub
je
and
outsb
adcl
ja
lahf
in
pop
mov
jno
fcoms
lea
sti
xchg
sbb
int3
mov
push
aas
mov
sbb
mov
gs
aam
dec
mov
out
mov
cmp
cli
fmuls
testb
mov
jne
push
mov
arpl
scas
pop
xchg
add
fiadds
lock
mov
fs
mov
in
iret
xchg
nop
insl
lock
add
pop
sbb
rcl
fdivr
ljmp
jbe
xor
lods
xlat
push
outsl
fsts
clc
adc
enter
pop
push
adc
int
testl
and
xchg
test
into
pop
xchg
cli
and
adc
call
dec
or
fstpt
cmp
pushf
fstpl
lods
add
push
jg
out
xchg
addr16
dec
adc
mov
add
or
cmp
cli
bound
and
leave
insb
pushf
jo
inc
dec
mov
and
mov
loope
hlt
insb
clc
inc
and
adc
or
imul
cs
sub
cmc
scas
or
mov
je
mov
ss
dec
pop
mov
sub
int3
mov
leave
lock
xchg
or
or
fists
or
mov
lods
fists
imul
int3
out
cmc
dec
iret
movsl
loop
hlt
xchg
addb
es
cmp
in
fcmovb
jne
xchg
xor
or
lcall
pop
add
mov
icebp
pop
dec
jne
testb
push
jno
xlat
mov
rcl
add
aad
cmp
lods
test
lds
std
scas
sbb
aas
dec
lock
mov
jnp
out
xchg
in
lahf
aad
fcompl
ror
dec
ja
mov
jns
test
das
mov
or
gs
fwait
dec
loope
mov
push
icebp
cwtl
fcmovnbe
rolb
or
ja
push
mov
mov
push
mov
xchg
fldt
fistpll
repnz
imul
lods
jbe
and
fisubrl
pop
sbb
out
aaa
mov
icebp
push
addr16
test
repz
jge
rol
outsl
mov
fimull
dec
sbb
aad
mov
movsl
lea
in
add
je
sti
fldenv
mov
sub
movl
add
xchg
dec
and
out
pop
popf
push
mov
push
mov
or
cmp
into
push
cmp
cmp
leave
jo
lcall
fs
pop
mov
push
jns
ja
ja
icebp
fwait
repz
mov
test
daa
dec
popf
mov
repz
add
lock
lods
and
xor
xchg
jb
pop
sub
cwtl
pop
push
adc
ret
inc
cwtl
das
push
jb
cmp
jbe
sbb
cmp
hlt
push
jg
scas
pop
xchg
sahf
jne,pt
stos
and
cwtl
mov
jae
mov
fnstcw
clc
scas
addr16
mov
jbe
cmp
lods
cwtl
int
adc
cmp
xor
lret
es
and
rorb
inc
pop
fdivl
sti
sbb
cli
movsb
nop
inc
pop
cld
arpl
ret
lods
xor
jge
dec
or
rorb
pop
jo
imul
test
lock
aaa
mov
or
lahf
fwait
mov
aas
cmp
aaa
push
or
mov
shlb
inc
cmp
leave
mov
mov
rcrb
loop
leave
jns
fs
xchg
mov
mov
mov
repnz
or
adc
mov
adc
leave
fmull
push
ret
jnp
cltd
pop
dec
ss
xchg
jmp
dec
or
imul
fists
ja
jns
ret
stos
xchg
aad
dec
sar
movb
jbe
pusha
cmp
insl
insb
push
pop
adc
test
mov
jo
into
js
nop
negl
fs
push
jnp
aas
ss
repz
movsb
mov
sbb
les
inc
loopne
pusha
fwait
push
jge
rorl
pop
adc
cwtl
pop
cli
test
lret
stc
sbb
repz
mov
mov
jle
xlat
add
xor
hlt
ja
mov
cmp
push
mov
or
or
add
or
aam
repnz
pop
test
adc
icebp
movsl
call
inc
jmp
pop
std
jo
mov
xchg
dec
jne
xchg
test
mov
push
pushf
xlat
add
mov
push
call
ret
loope
ljmp
add
clc
cld
dec
and
cmc
add
xor
push
pop
das
nop
stos
aad
fistpl
push
les
sbb
sub
mov
aad
lods
insb
leave
sbb
rorl
xor
shlb
loope
inc
pusha
dec
imul
imul
xchg
jb
pop
sub
jmp
mov
aad
je
ret
fs
adc
pop
xchg
fidivrl
fnstsw
js
mov
jecxz
lds
jb
xchg
ror
jb
mov
jns
push
in
adc
cmpsb
inc
lds
lret
sub
mov
sbb
add
outsb
fs
cmp
inc
test
jbe
addr16
or
jle
xor
in
sbb
sub
aaa
sti
sub
sbb
mov
or
outsb
xchg
mov
cmp
in
jge
push
inc
out
dec
aad
mov
mov
pop
into
test
mov
dec
movsl
mov
lret
int3
stc
dec
mov
shl
nop
mov
in
out
ja
dec
jae
mov
push
repz
iret
imul
add
jle
xor
adc
cmp
cmp
popa
mov
cli
push
inc
inc
mov
cmp
add
mov
and
test
jno
cmp
leave
insb
scas
jmp
sub
ficomps
jno
push
xchg
in
negb
or
pop
fmull
outsb
into
pop
mov
jle
jl
push
call
enter
xor
enter
dec
jmp
incb
fs
in
movsl
adc
inc
in
sbb
stos
inc
dec
dec
mov
mov
and
jbe
ds
pop
movsb
mov
repnz
jo
inc
xchg
shll
adc
pushl
xchg
jno
jl
arpl
subb
repnz
daa
or
xchg
fsts
push
imul
lcall
pop
test
inc
pop
adc
adc
insb
pop
aaa
pushf
jg
sbb
arpl
mov
loope
mov
data16
mov
pop
ss
mov
les
jae
lcall
jge
lcall
insb
lret
jae
xchg
rcll
push
add
jb
mov
push
pop
mov
lret
stos
sahf
mov
adc
mov
mov
jno
loopne
cmp
adc
push
adc
clc
in
aad
les
in
sub
xchg
into
dec
gs
pavgw
mov
ret
xchg
sarl
mov
out
addr16
jmp
sbb
sub
adc
popa
adc
add
test
insl
orb
bound
adc
daa
sub
mov
push
pop
cmp
sub
ret
adc
push
or
rcrb
outsl
icebp
pop
data16
clc
lret
les
jp
inc
shl
rcrl
mov
icebp
shr
inc
adc
enter
and
or
dec
push
in
sti
loopne
out
neg
or
sarl
daa
gs
xor
pop
stc
sbb
mov
fmuls
shlb
in
inc
cmp
bound
dec
ljmp
fisubrs
dec
inc
xchg
push
cwtl
push
xor
js
xchg
loopne
test
inc
pop
and
outsl
sbbl
iret
je
imul
out
xchg
adc
stos
aaa
inc
xchg
push
cmp
xchg
insb
ficoms
xchg
cmc
add
mov
cltd
cmp
lea
icebp
fcompl
mov
push
cli
mov
call
movsb
push
jo
out
sbbl
push
sub
dec
pop
push
dec
loopne
add
or
sti
int3
mov
push
xor
idivl
adc
test
scas
lods
sbb
rcr
or
in
je
pop
lret
sub
mov
testb
xor
xchg
adc
sti
push
stc
popa
adc
fisttpl
adc
jp
push
or
test
test
add
sbb
aad
push
popa
scas
mov
mov
in
ja
xchg
mov
imul
jbe
fisubrl
xchg
clc
xor
add
xor
popf
mov
push
sub
roll
or
push
mov
and
xor
xchg
mov
pusha
or
and
stos
dec
inc
out
jbe
daa
das
pop
cmpsl
jno
pop
shl
dec
push
mov
pop
fsubl
ja
pop
testl
or
stos
clc
popf
add
push
mov
sbb
in
xchg
sub
or
push
lcall
lcall
scas
mov
mov
stos
inc
scas
xchg
ja
add
shlb
lods
add
gs
fnstcw
push
aad
push
lods
xchg
push
pop
outsl
outsl
add
rorb
pop
lcall
push
shr
imul
bound
mov
adc
pop
stos
fidivs
mov
icebp
mov
pop
and
fstpt
add
ret
adc
and
jecxz
adc
add
aad
fcmovnb
shr
push
cs
mov
es
jns
rcrb
sub
pop
js
adc
sbb
xor
repz
or
in
ret
or
xchg
clc
popa
loopne
in
fldt
fisubrl
or
xor
pop
in
cwtl
inc
xchg
aad
adc
cmp
aaa
stc
aam
mov
insl
jnp
mov
sub
jecxz
popa
mov
leave
pop
xor
addl
inc
inc
cld
rorb
add
adcb
les
movb
mov
push
and
pop
and
scas
test
data16
xchg
add
pop
mov
mov
int3
lahf
stos
mov
sbb
jmp
and
mov
xor
leave
imul
or
ss
push
adc
lock
push
dec
in
mov
enter
xchg
mov
cltd
leave
xchg
mov
sub
ds
pop
pushf
mov
mov
aaa
adc
xor
add
mov
and
dec
lahf
adc
lds
lcall
addr16
call
mov
cmp
xchg
xchg
push
insl
aam
pop
adc
push
call
orl
or
loop,pt
int
bound
xchg
popa
lret
mov
dec
pop
ret
push
add
sbb
das
and
xlat
inc
js
cli
and
dec
mov
and
in
hlt
xor
sahf
enter
test
inc
sbb
outsb
pop
adc
cmp
lods
add
add
mov
xor
cmpsl
xchg
ja
dec
and
ss
cmp
and
mov
scas
scas
cs
xchg
dec
pop
and
lcall
jmp
popf
push
jnp
in
out
sbb
jecxz
addr16
xchg
mov
mov
xor
negb
gs
mov
sti
inc
pop
mov
or
fadd
cmpsb
cmpsb
mov
rorl
inc
popa
cmp
inc
xlat
jbe
loop
push
jle
ljmp
lds
call
into
xchg
mov
fs
imul
push
cmova
inc
mov
out
inc
and
push
mov
ljmp
insl
cli
push
add
jle
outsl
fwait
pop
adc
scas
ss
or
mov
ret
sub
subl
std
jge
mov
inc
mov
jae
jge
adc
out
inc
xor
aas
out
sbb
push
push
jle
je
push
cs
add
push
sub
call
sti
fists
mov
mov
mov
sbb
sbb
pop
inc
cmpsb
adc
add
adc
sbb
mov
mov
mov
pop
or
mov
pusha
sub
hlt
sbb
xchg
dec
sbb
dec
lock
je
jae
add
push
jo
mov
movswl
cmp
and
fisubrs
mov
decb
imul
call
jne
leave
pop
fsts
lret
dec
push
pop
scas
inc
addr16
test
imulb
inc
jmp
mov
mov
pop
int3
sbb
imul
dec
dec
int
or
das
in
ljmp
daa
inc
imul
adc
out
cltd
inc
jp
hlt
fdivs
adc
xchg
mov
or
push
dec
movsb
dec
xor
jae
dec
or
mov
rorb
jp
sbb
cmp
adc
aad
xchg
aad
adc
pusha
outsb
mov
and
jb
pop
mov
push
inc
sbb
or
fiaddl
jge
call
in
push
add
popl
and
push
std
bound
mov
sbb
dec
popf
aas
pop
mov
xchg
jbe
fcoml
jg
sub
push
and
sbb
dec
out
out
or
jnp
gs
xchg
adc
fs
jae
jae
mov
and
roll
rcll
cwtl
push
xlat
es
adc
xchg
pushf
pop
cmp
mov
jl
outsb
fdivs
xchg
xor
jbe
add
mov
push
pop
loop
push
push
jb
push
xchg
cmp
ja
enter
add
xlat
idivl
and
fwait
clc
and
pushf
jmp
pop
dec
fwait
imul
inc
inc
test
testl
scas
frstor
mov
jae
dec
push
std
jb
ret
sub
pop
shll
pop
iret
add
enter
push
stos
scas
dec
movsb
adc
ret
inc
loope
imul
div
ret
test
fsubrl
dec
es
dec
mov
adc
xor
sbb
pop
lea
pop
dec
lods
and
jbe
push
sub
inc
lods
jne
push
das
and
sub
jns
iret
jno
xchg
and
jp
addr16
out
in
sbb
pop
sub
jl
jp
call
ret
cs
sti
sub
std
fists
lock
push
cmpsl
xor
jle
mov
je
push
mov
dec
mov
jg
les
sub
push
mov
popf
mov
sub
aas
std
insl
adc
js
cmp
pop
sbb
mov
pop
and
add
add
filds
stos
es
sbb
in
mov
mov
mov
sbbl
mov
outsb
inc
xchg
ret
xchg
push
bound
dec
push
cs
outsl
or
mov
adc
adc
lods
loop
xor
cmp
xor
sti
ja
loope
rolb
sub
test
daa
and
in
popf
lahf
out
pop
xor
and
push
sti
mov
lret
pop
testb
in
cmp
mov
push
inc
mulb
fnstenv
or
cmp
pop
mov
lds
mov
add
dec
xchg
js
mov
sub
stc
adcl
jmp
mov
dec
ja
adc
inc
lret
push
aaa
or
test
and
push
pop
fnstcw
mov
popf
sbb
sbbb
enter
filds
mov
or
and
fldcw
add
mov
cmp
or
mov
xchg
jne
fcomi
cwtl
arpl
and
dec
aad
nop
and
mov
jns
jne
xor
aad
in
shlb
cmc
mov
es
mov
insl
sub
add
add
dec
lahf
mov
mov
mov
mov
jl
fldcw
enter
and
ficomps
cmpsb
mov
mov
aam
push
push
rclb
icebp
out
loop
xchg
mov
imull
sub
and
imul
leave
cwtl
popa
adc
fs
loope
int
movsl
fdivl
cmp
and
jns
cltd
xor
inc
xor
int3
and
sbb
dec
in
jbe
int3
jae
scas
xchg
outsl
fnstcw
fdivrl
das
aas
into
lret
idivb
lock
out
jle
ja
repz
pop
fsubrs
shlb
out
nop
dec
xor
fdivr
sbb
fisttpl
int3
mov
cltd
stos
mov
or
icebp
push
and
dec
push
out
sub
stos
test
lret
in
out
pop
or
mov
inc
cmp
pop
lock
test
orl
pushf
fsubl
sub
lds
lret
cld
xchg
and
cli
sbb
out
hlt
mov
cwtl
dec
xlat
andb
sub
or
mov
xchg
cld
mov
jae
mov
addl
in
outsl
xchg
mov
sti
jmp
ret
push
shl
pusha
cli
repnz
cmp
and
mov
shrb
subl
rorl
pop
jle
dec
loope
push
fbstp
out
out
aad
dec
cmpb
xchg
mov
dec
sbb
push
out
leave
and
sbb
xchg
mov
jge
ret
push
subl
bound
dec
jno
insb
mov
sub
mov
or
clc
mov
and
adc
pop
scas
push
add
mov
cmpsl
int3
arpl
mov
stos
sbb
mov
adc
out
pop
push
lahf
xor
js
negl
jecxz
push
in
loop
jno
cmp
xor
adc
aas
mov
mov
inc
cmp
in
mov
sbb
ficoml
ljmp
addr16
xlat
out
test
lods
hlt
mov
ljmp
mov
jmp
in
pushl
and
sub
xor
jl
imul
ds
xchg
insl
mov
mov
outsl
mov
fsubl
mov
lock
movsl
imul
mov
movsb
sub
es
xor
shll
push
ljmp
insb
cmpsl
push
pmaddwd
ljmp
lods
jecxz
pop
gs
mov
outsl
cwtl
stos
sub
cmpsl
movb
insl
fwait
sbb
out
mov
cmp
add
push
mov
lods
xor
jnp
sahf
nop
cli
adc
inc
repnz
aam
mov
inc
cli
ss
pop
popa
lock
or
inc
ja
inc
stos
xchg
sbb
xor
jb
pop
pushf
mov
and
push
xor
push
jns
jge
mov
pop
lds
push
dec
lahf
das
lret
gs
int3
sub
cmc
outsl
enter
or
jne
cld
dec
fwait
sahf
mov
aaa
pop
xor
mov
and
cld
sahf
or
sub
cwtl
jbe
call
mov
jae
cmpsl
adc
xchg
daa
idivl
rcl
rorb
mov
jae
inc
rsm
jmp
sub
movsb
jb
pop
nop
ret
inc
into
sub
pop
inc
push
sub
inc
leave
fnstenv
ffree
xchg
imul
repnz
fcompl
pop
popf
add
rcrb
jl
sub
push
pop
xchg
mov
adc
loop
mov
add
xor
sti
pop
and
out
sti
jmp
push
mov
sbb
cmp
stos
pop
add
dec
push
leave
or
mov
in
sub
jl
and
lods
jg
ja
es
and
inc
push
push
push
repnz
test
cmc
sbb
xor
gs
int
pop
gs
pop
xchg
stc
fstl
mov
subb
mov
sbb
ss
cmp
into
mov
add
and
mov
mov
stos
les
pop
xor
sub
cli
xchg
adc
ja
inc
rorb
dec
pop
lods
out
sub
pop
push
xor
pushf
popa
in
pop
pushl
loopne
cltd
and
fldt
aaa
in
cmp
push
pop
mov
loop
daa
sub
sbb
push
roll
push
adc
add
jp
xchg
aam
cmp
mov
mov
cs
xchg
sahf
jl
adc
sub
xchg
clc
in
std
adc
cmp
pop
pop
js
out
xchg
or
xchg
jo
cltd
mov
sbb
lods
push
dec
sub
push
push
cmp
enter
test
call
dec
or
mov
sub
movsl
xlat
and
mov
jns
sbb
in
inc
ja
repz
sbb
icebp
je
ja
xor
nop
pop
mov
mov
sbb
sti
mov
inc
push
jb
add
push
push
insb
rolb
xlat
iret
mov
xchg
dec
jae
popf
cld
inc
out
addr16
je,pt
jo
data16
loopne
es
mov
push
ror
mov
iret
pop
test
pop
out
repz
aaa
mov
scas
or
sub
orb
ss
mov
and
enter
pop
lea
xchg
jne
inc
test
stc
cmp
xor
call
cli
pop
mov
mull
jmp
mov
stc
jmp
push
sarl
cld
clc
rcrb
call
jbe
mov
scas
jnp
jg
out
dec
cmc
push
jge
aad
rcr
sub
jecxz
js
cmc
mov
mov
add
jo
push
mov
inc
fcmovnu
adc
or
and
shll
pop
or
rorl
ss
sbb
xlat
sub
xlat
inc
aas
and
and
and
jge
inc
lret
ljmp
push
jle
pusha
ret
dec
inc
sub
inc
jmp
and
dec
inc
or
adc
insb
lret
aad
mov
repnz
clc
in
sbb
pusha
lea
cmp
imul
sub
inc
push
cld
nop
add
xchg
xchg
add
sub
or
outsb
jbe
adc
pusha
sbb
je
jns
shld
push
cmpsl
dec
cmp
push
cmp
movsb
mul
xorb
rcrb
pusha
mov
push
ljmp
and
pop
mov
lret
push
dec
sub
or
push
stc
push
jo
rorl
cltd
mov
dec
fsts
ss
fmulp
fisubl
jl
hlt
xchg
data16
arpl
xchg
shl
gs
aad
adc
testl
stos
pop
das
fiadds
sahf
daa
lret
jns
arpl
mov
clc
shll
inc
push
inc
pop
cli
ficompl
mov
lea
jg
push
movsb
mov
movsl
lcall
cmpsb
subl
pop
ffree
in
shlb
sub
insb
ds
mov
insb
and
arpl
or
fmul
nop
sub
mov
sbb
sub
mov
pop
mov
sub
loop
stc
add
cmp
adc
test
les
in
adc
xchg
mov
cmp
stc
ret
jnp
push
sub
pop
pop
add
lret
ret
scas
mov
jnp
sbb
shlb
xchg
cmp
outsl
stos
mov
or
xor
push
xchg
jmp
aaa
aaa
dec
pop
outsb
mov
sub
sub
xor
jmp
sbb
pop
rclb
xchg
push
sbb
pop
dec
repnz
icebp
push
xor
repz
out
add
pop
mov
bound
sub
mov
scas
pop
ja
cmp
cli
movsb
fstpl
jmp
popa
test
pop
add
ds
jnp
xor
cmp
les
imul
cwtl
out
inc
sbb
xchg
mov
xchg
aam
adc
cli
iret
push
es
adc
jl
push
push
inc
and
enter
repnz
add
stos
mov
cmp
push
scas
and
ljmp
xchg
cmp
cmp
fdivrs
push
jecxz
mov
hlt
ret
jp
mov
jb
mov
bound
test
outsl
scas
cmp
stos
movsb
sti
jb
sub
loope
sbbl
popa
inc
ds
adc
lods
gs
sbb
push
test
and
dec
mov
adc
inc
cmp
testb
lahf
cmp
cmp
xlat
ja
xor
add
jge
lock
xorb
mov
or
ret
fisttpl
inc
movsb
mov
xchg
call
xor
xchg
mov
mov
in
sbb
xor
xchg
stos
sub
inc
adc
and
jg
cwtl
in
sti
mov
movb
mov
das
js
ss
iret
and
nop
xor
std
xchg
idiv
sbb
test
cli
inc
and
or
xchg
push
dec
test
push
pop
jg
jg
aas
cmp
dec
sbb
or
xlat
aas
lcall
lea
mov
cmpsl
bound
aam
sbb
pop
sbb
adc
pop
jo
dec
jge
xchg
lcall
lds
in
xchg
dec
sub
cmp
sbb
mov
or
mov
lock
dec
sbb
xchg
mov
stos
fistpl
stos
addl
pop
mov
xor
ja
adc
or
cmpsb
push
idivl
addr16
scas
adc
cmp
cwtl
xor
lods
mul
test
lods
and
and
rcrl
loope
xchg
push
push
ficomps
inc
es
push
mov
jmp
inc
ds
xor
sbb
popa
inc
fadd
sub
mov
cmpsl
pusha
es
and
loop
movl
and
push
mov
pop
mov
pop
pop
je
jo
and
mov
adc
dec
sti
pushf
andl
das
jae
out
xchg
push
xchg
sub
mov
jg
fisttpll
addl
rorl
sbb
jl
sub
mov
lcall
into
adc
push
cmp
inc
push
lcall
jmp
ss
test
pop
lods
push
mov
pop
fwait
data16
out
icebp
aaa
xchg
lock
inc
enter
jle
push
push
mov
inc
dec
pusha
mov
mov
scas
roll
lcall
insl
fstps
bound
int3
in
stos
insl
mov
xor
mov
into
push
test
jp
pushl
pop
add
cmp
ljmp
imul
test
sbb
jp
lret
or
jle
imul
mov
xchg
push
mov
fstpt
mov
xor
fistpll
cmp
jl
sub
push
sub
bound
mov
dec
or
pop
jle
mov
ja
and
pop
mov
sbb
cmp
push
shrl
mov
sub
ss
inc
jl
clc
xlat
inc
rorb
fadd
xor
add
inc
dec
and
rcrl
jp
jle
cmc
xchg
aam
or
or
jns
xchg
pop
cmp
loopne
in
fnstcw
adc
hlt
loopne
sub
or
adc
cwtl
jae
inc
xchg
scas
sub
in
outsb
jle
xchg
loopne
sahf
subl
and
js
stos
icebp
cmpsb
jg
and
scas
mov
in
adc
cld
cmp
xor
ss
scas
push
mov
jmp
in
jecxz
cmp
aaa
cmp
sub
out
dec
jno
sbb
mov
and
adc
dec
mov
cltd
out
fstpl
imul
in
xchg
in
mov
ret
xchg
push
pop
ds
dec
or
arpl
jae
inc
pusha
sub
fiaddl
stc
mov
jo
jge
mov
adc
cmc
jmp
shll
cmp
test
lahf
push
dec
out
jns
push
push
filds
out
fadds
out
lds
sub
lret
jmp
inc
lods
pop
push
cld
stc
dec
outsb
dec
out
sbb
cld
movsb
cmp
int3
mov
out
push
pop
jbe
fidivrs
lret
or
jg
pop
mov
jo
xchg
lret
cmpsb
roll
repz
rcrb
in
adc
mov
stc
in
push
pop
shll
xchg
jnp
xchg
cmp
mov
mov
push
jge
icebp
sbb
xchg
dec
push
stos
sub
mov
ds
jmp
insl
stos
jecxz
add
into
add
mov
push
pop
call
cmpsb
adc
dec
or
lcall
rcl
pop
xor
pop
and
jmp
out
push
mov
sbb
lret
pop
sub
iret
push
pop
loop
fnstsw
cmp
out
cld
not
and
lds
xlat
push
sub
or
xchg
rcrb
cmpsb
aam
fwait
jbe
jge
outsl
mov
jb
lret
popa
or
lods
imul
xchg
je
fwait
sbb
inc
pop
cmp
nop
aad
jnp
adcl
sub
push
sbb
in
call
daa
fdivl
orb
xor
or
xchg
insb
jecxz
cmc
fcomps
push
pmullw
sub
mov
add
mov
push
inc
mov
or
test
sub
mov
xorl
mov
mov
inc
xchg
jnp
xchg
rcll
inc
ret
out
fadd
dec
xor
cmp
xchg
push
sbb
into
cmp
dec
fs
adcb
jecxz
xor
stos
int
add
cmpsb
mov
bound
or
add
popf
and
fcomps
test
cmp
lock
aad
push
or
dec
pop
xchg
rcrb
fildll
arpl
stc
dec
sahf
pop
data16
xchg
shr
lock
inc
push
ret
cmpl
arpl
pop
and
dec
mov
push
adc
add
xor
inc
enter
adc
stos
cmp
add
dec
cltd
in
inc
inc
shrb
out
and
add
in
out
mov
loop
shl
xor
jmp
lret
cmp
loope
inc
xchg
or
fwait
mov
pop
aaa
lret
gs
mov
scas
push
aaa
inc
xor
and
int3
cmp
pop
test
sahf
ret
ret
lds
jo
mov
sarl
fimull
shr
jb
movsl
sbb
cmpsb
aam
jnp
lcall
mov
ljmp
clc
and
dec
fsubl
daa
aaa
push
mov
flds
push
shlb
movsb
jnp
ud0
mov
cmpsl
mov
cmp
es
lods
cltd
jmp
sbb
mov
and
scas
mov
mov
dec
ret
xchg
and
push
xor
pop
adc
arpl
mov
inc
adc
rcl
and
lods
clc
push
push
pop
inc
repnz
xor
popa
fdivrl
stos
test
and
call
mov
mov
lods
sub
xor
jnp
fldenv
cwtl
leave
push
orb
out
sbb
shlb
scas
jnp
and
pushf
gs
add
jbe
fistps
pop
fisubl
or
cmp
gs
and
lods
xor
and
jecxz
repnz
popa
push
pop
sahf
add
push
shlb
mov
enter
aas
test
out
pop
xor
ret
or
dec
into
mov
loop
cltd
adc
mov
fisubrl
mov
jge
lods
and
mov
adc
push
stos
rolb
outsl
mov
lcall
xor
pop
cmp
in
pop
sbb
fidivs
hlt
leave
hlt
insb
jnp
sbb
mov
aas
mov
jno
dec
cld
insb
int3
test
mov
data16
or
movsl
rorl
push
push
ret
in
out
dec
sahf
sub
mov
mov
adc
mov
int3
jge
xchg
mov
mov
out
jmp
scas
push
mov
test
adc
mov
mov
clc
addr16
and
testb
dec
lods
pop
adc
xor
scas
sub
jg
jae
out
pop
or
jnp
inc
lahf
push
into
push
nop
ss
imul
fwait
dec
adc
fsubp
jns
lds
sub
mov
pop
pop
nop
clc
pop
xchg
jl
je
fdiv
xor
cmpsb
mov
sarb
xchg
cmp
stos
addb
pop
mov
dec
lcall
fsub
decl
cmpsl
fldenv
add
jbe,pn
mov
cmp
dec
jns
in
sti
repnz
adc
and
fidivl
xor
aam
fs
or
dec
imul
sti
repnz
xor
lret
dec
cmp
push
and
add
add
pop
sbb
xchg
sub
cs
lods
movsb
sbb
std
pusha
into
test
push
cmc
test
loope
inc
jns
int3
mov
mov
pop
lret
xchg
jb
cmp
ret
ja
movsl
out
xorb
or
dec
jecxz
xchg
test
cmc
sahf
mov
ds
jo
add
popf
mov
into
push
inc
fisubs
fwait
adc
xchg
int3
xchg
daa
mov
outsb
sub
cs
cmp
std
cmp
cli
loop
scas
mov
pop
jmp
ds
das
sbb
mov
sub
push
dec
cmp
push
decb
je,pt
aaa
fwait
mov
and
mov
xchg
dec
out
lods
dec
nop
sub
in
dec
xchg
das
stos
scas
repnz
and
cmp
and
push
scas
xor
mov
ret
dec
lock
movsl
icebp
mov
fcoml
in
inc
cmp
dec
xchg
subb
roll
stos
cmp
pop
jge
mov
call
cltd
out
adc
je
mov
jg
cmp
repnz
adc
xor
adc
mov
mov
jmp
push
jmp
ds
adc
andl
push
or
or
out
pop
lods
cmp
dec
mov
cs
aam
arpl
int3
in
out
xchg
pusha
test
pop
movsb
js
sub
lods
mov
sbb
mov
dec
mov
mov
mov
imul
xchg
cld
hlt
aaa
xchg
push
outsb
mov
push
movsl
inc
in
insl
insl
cmp
or
push
pusha
ss
lret
jnp
rep
inc
shll
out
test
mov
aas
mov
leave
aaa
inc
mov
aam
xchg
sub
loop
lea
daa
mov
jne
aad
jae
sub
outsb
lea
push
mov
pop
int3
cmc
sbb
imul
pop
mov
bound
adc
jmp
aaa
mov
in
cltd
or
sti
mov
mov
add
push
call
add
dec
mov
addr16
cwtl
mov
popa
dec
cmpsb
push
dec
xchg
push
daa
fsubs
hlt
ret
sub
dec
dec
mov
ret
mov
pop
push
xchg
sub
sbb
movsb
sbb
shlb
adc
ret
mov
inc
jbe
stc
jp
mov
push
js
dec
cmpb
pop
aaa
andb
jae
mov
mov
mov
aad
ret
pop
sub
jle
clc
fwait
sbb
rolb
xchg
add
inc
adc
test
shll
jl
xchg
sub
mov
fs
pop
pop
inc
fwait
loopne
adc
or
dec
pop
iret
data16
dec
add
dec
rol
inc
bound
inc
fldt
and
push
mov
mov
cmpsl
mov
push
push
and
cs
ror
mov
push
lds
mov
xor
sub
push
xchg
rep
jg
hlt
pop
ljmp
stos
xor
or
jp
add
movsl
out
push
mov
pop
test
cmp
fdivr
push
inc
repnz
dec
push
in
insb
ret
cwtl
cltd
sbb
loop
daa
dec
ss
gs
js
and
sub
push
sbb
xor
call
push
icebp
mov
imul
insl
pop
fsubr
lahf
mov
adc
mov
jnp
sbb
ds
sub
mov
mov
xchg
in
imul
movb
int
fidivrl
test
pop
dec
jp
and
lahf
and
mov
data16
xor
adcb
or
notl
jecxz
sbb
sbb
and
mov
or
cmp
jbe
clc
mov
sbb
xor
push
mov
fmull
mov
call
push
das
flds
cmp
jbe
insl
dec
push
mov
popf
xchg
sub
and
cmp
push
jnp
xchg
test
int3
addr16
sub
cmp
inc
mov
add
js
nop
movsb
cli
pop
in
add
mov
or
ret
shrl
call
ds
jp
mov
xchg
loope
and
or
xor
mov
sti
sbb
loop
rolb
in
inc
pop
pop
pop
and
loopne
imul
inc
push
adc
arpl
and
in
add
push
std
cmpl
mov
dec
sub
mov
insb
cmpsl
jle
sub
cmp
inc
gs
mov
mov
and
cmp
movsb
sub
push
ja
adc
jp
pop
sbb
roll
imull
pop
inc
mul
aaa
adc
stos
or
repz
in
xchg
add
cmp
push
add
sub
inc
repnz
cmpsb
std
mov
xchg
sub
sbb
mov
lock
mov
repz
movsb
outsl
sub
xor
in
mov
lcall
xchg
sub
std
pop
push
and
or
mov
cs
cmpsl
jo
lods
fwait
inc
es
mov
sub
idivl
cmc
inc
and
adc
in
or
popf
fcoml
mov
push
mov
pop
mov
imul
nop
xor
or
idivl
push
aad
pop
aad
mov
imull
cli
test
div
inc
mov
ja
and
jge
loope
popa
pop
lcall
std
scas
popa
daa
lock
jno
into
xor
or
je
inc
stc
inc
push
xchg
insb
sti
fwait
mov
test
mov
xchg
xchg
repnz
adc
fnstsw
add
mov
mov
fnsave
adc
enter
test
or
lds
sub
adc
loop
add
call
testl
jmp
bound
cmpb
push
int
lret
cmpsl
ficomps
bound
out
popf
sarl
cwtl
movl
rcll
ret
pop
imulb
mov
shlb
lahf
jns
adc
dec
adc
in
sub
shl
push
lods
inc
jp
scas
pop
cmpsb
negl
or
cltd
orl
dec
mov
xor
mov
cltd
mov
and
dec
je
out
xor
rolb
mov
mov
dec
pop
dec
add
mov
mov
mov
sbb
aam
push
cmp
mov
std
push
arpl
lock
movsb
lcall
sbb
pop
xchg
cmp
cld
add
out
rsqrtps
dec
or
out
iret
imull
mov
iret
repnz
mov
pop
fstpl
rcrl
push
inc
and
pop
sub
adc
mov
int3
movsl
cltd
jmp
jae
pop
jp
sub
jp
mov
sbb
sub
sbb
sbb
scas
add
dec
enter
std
jge
fwait
jp
or
and
inc
jnp
mov
mov
pop
pop
inc
arpl
push
movsb
sbb
leave
test
fidivs
jb
or
aam
cmp
out
lods
push
sbb
or
pop
enter
data16
fmull
dec
leave
cmc
daa
inc
sbb
dec
add
lds
cmp
std
lahf
lods
ja
adc
push
insb
packssdw
and
sub
mov
into
ror
scas
xchg
mov
pop
dec
push
mov
adc
pop
jns
arpl
sarl
imul
and
lock
iret
xchg
sub
and
xchg
mov
adc
out
lods
loop
and
shl
test
mov
rcrb
or
mov
and
outsb
push
mov
test
mov
dec
sub
shrl
lahf
dec
inc
push
inc
in
cwtl
inc
mov
push
dec
xor
aas
cltd
imul
mov
test
cmp
or
jb
cli
test
shlb
mov
pop
fwait
icebp
cmp
loop
xor
stos
imul
xor
data16
cs
push
adc
inc
push
jl
ja
imul
cs
and
mov
call
mov
cmc
leave
aaa
loopne
sti
jge
and
int3
or
shll
add
iret
jle
push
mov
dec
mov
xchg
das
pop
add
icebp
scas
inc
inc
in
imul
jnp
lea
int
mov
mov
pop
pop
xchg
inc
arpl
jae
addr16
jne
jbe
fnstsw
push
out
inc
loopne
mov
pushf
cmc
les
and
pushf
cmc
fdivl
jo
mov
push
js
push
ljmp
adc
fildl
mov
mov
std
pop
into
in
mov
jbe
pop
icebp
dec
cmpsb
and
pop
enter
xor
orl
xchg
dec
add
imul
push
xor
xchg
xor
stos
adcb
sbb
sub
pop
addr16
rcrl
dec
fdivr
jle
mov
dec
insl
aam
push
mov
and
pop
test
repz
adc
out
stos
mov
mov
dec
jns
dec
xorb
rorl
icebp
roll
add
fucom
and
ss
pusha
fsubrl
nop
loopne
mov
das
adc
std
dec
push
mov
sub
jo
sti
pop
popa
outsb
add
data16
inc
or
push
leave
jg
push
scas
js
ss
mov
push
push
and
cmp
stos
enter
pop
sbb
mov
mov
popf
popf
in
mov
jns
ja
adc
pushfw
movsl
ljmp
xchg
xor
jle
inc
in
xor
imul
adc
outsb
push
push
sbb
cmpsl
inc
adc
fwait
cmp
icebp
cwtl
add
or
sbb
das
ret
popf
insl
jne
or
jne
js
fdivl
cs
fsts
mov
mov
fwait
pop
inc
dec
js
xchg
cmp
inc
pushf
sub
mov
mov
xor
xchg
mov
sbb
repz
gs
pop
push
roll
lods
jge
popf
outsb
pop
mov
or
rorl
xor
mov
insl
mov
push
mov
mov
pushf
xchg
mov
pop
xor
push
add
xor
lock
popf
testl
test
shll
lods
mov
mov
fbstp
push
xor
insb
adc
lods
xchg
repnz
loop
pop
stc
or
lods
aam
mov
stc
in
and
and
sbb
aas
mov
test
xchg
hlt
data16
cld
outsb
je
push
sub
add
mov
xlat
dec
data16
jnp
out
lds
out
fdivr
xor
andl
in
iret
and
adc
scas
xor
xchg
cmp
mov
mov
js
sbb
xchg
xor
imul
lret
lcall
push
pushf
sub
ss
xorl
mov
inc
push
mov
lahf
or
out
jnp
and
mov
cltd
or
pop
jl
lock
inc
push
int
ret
data16
leave
push
mov
sub
es
jle
adc
shll
adc
or
xchg
sub
push
xchg
xchg
int3
mov
or
mov
inc
mov
mov
adc
xor
sbb
aad
roll
mov
adc
ds
int3
loopne
mov
repz
les
pop
cli
jl
pop
dec
dec
shll
mov
bound
mov
leave
mov
add
mull
mov
cmpsl
lea
les
aas
sub
or
dec
inc
insl
jecxz
push
mov
outsl
sahf
imul
stc
pushl
lods
jno
movsl
iret
mulb
daa
inc
lret
nop
push
decl
and
pop
sub
and
adc
jne
xchg
cmp
mov
mov
sbb
aaa
jl
dec
loope
je
push
jnp
test
push
cmpsb
lret
fs
enter
outsb
mov
jg
xlat
lock
xor
les
pusha
mov
movsl
aaa
lcall
sti
adc
lcall
out
aad
pop
inc
inc
iret
shlb
lret
pop
je
scas
and
jecxz
cmpsb
es
ret
mov
lcall
add
mov
mov
inc
jge
jo
fcomps
je
pop
push
movsl
pop
jecxz
inc
jge
popaw
pop
imul
ja
push
dec
aad
inc
xchg
add
dec
cld
aam
mov
pop
jno
or
xor
cmpsl
into
int
xchg
sub
enter
cmpsl
jmp
pusha
add
leave
insl
xor
xor
sbb
dec
leave
push
xchg
pushf
push
xchg
add
or
mov
sbb
sbb
es
ja
cli
push
imulb
add
mov
loopne
jmp
ss
loopne
add
mov
movsl
add
enter
mov
push
add
stos
popa
cmp
test
jne
jmp
adc
cmp
fsubr
cmp
mov
mov
mov
iret
pop
and
mov
mov
pop
xor
adc
inc
arpl
addb
pushf
fidivl
mov
sub
cmc
imul
stos
cmp
jne
and
xor
fwait
xchg
mov
mov
add
cld
stos
push
int3
add
ja
setl
outsb
push
xorl
xchg
mov
mov
cmp
stos
jno
mov
out
scas
rclb
jmp
pop
add
clc
jge
popa
pop
xor
roll
jbe
in
enter
sub
xbegin
out
mov
mov
jl
or
jmp
xchg
les
xor
jo
cltd
outsl
enter
mov
mov
and
dec
fcmovb
jecxz
jge
or
fucomip
lahf
inc
mov
jecxz
nop
ret
add
outsl
sahf
mov
das
sti
xchg
pop
add
arpl
cmp
mov
les
sbbb
jb
test
lds
rcrb
push
and
push
leave
test
mov
push
mov
xlat
dec
shlb
jle
imul
dec
push
lfs
pop
jae
les
int
cltd
lods
popf
cmp
jl
in
sarb
or
mov
ror
arpl
add
in
mov
and
maskmovq
and
int
xor
les
pop
dec
dec
fmuls
mov
mov
push
loopne
push
and
imul
arpl
daa
adc
fisttpl
aad
les
aad
jge
adc
pusha
sbb
mov
add
jg
lea
and
sbb
cld
sub
addr16
add
push
cmp
scas
data16
rol
mov
push
mov
aaa
push
fiaddl
push
mov
cld
mov
fistpl
test
jnp
sbb
sbb
or
push
adc
data16
sarl
jbe
or
das
mov
enter
and
sub
pop
xchg
inc
bound
in
popa
roll
movsb
cltd
and
pop
jp
pop
sub
out
pop
cmp
inc
jge
add
jle
int
and
stos
and
call
xchg
sub
inc
inc
shr
cltd
out
pop
mov
icebp
add
xor
call
shrb
lret
mov
pop
cmpsl
xor
push
ret
sbb
adc
aaa
sbb
out
iret
shrb
stos
fisubrl
lock
loope
jmp
adcl
stos
aas
ficoms
fdivrl
lret
xchg
xor
cmpb
mov
dec
popa
mov
xlat
mov
sub
mov
and
mov
and
or
stos
jae
and
inc
daa
mov
xchg
stos
or
mov
mov
or
jno
lahf
mov
sahf
jbe
push
mov
sahf
movsl
sub
xor
cmpsb
xchg
int
mov
push
cmp
test
jae,pn
mov
fwait
jmp
sbb
push
sbb
ljmp
push
add
xchg
inc
adc
js
add
ds
lds
in
sub
cltd
adc
std
jno
push
push
lret
in
xor
mov
aam
daa
sbb
mov
inc
mov
adc
inc
push
xchg
mov
lock
mov
outsl
xor
inc
and
push
mov
scas
int3
xchg
jns
dec
nop
loop
cld
adc
loop
xchg
mov
fucomi
or
xchg
sarl
scas
shll
add
inc
mov
enter
scas
fstpt
shl
std
out
adc
pusha
cld
aaa
push
movl
xor
std
adc
mov
dec
xor
inc
mov
aad
dec
insb
leave
test
jno
pusha
insb
and
sub
hlt
xchg
jbe
in
adc
rorl
adc
clc
xor
dec
ret
jle
enter
cmovle
sahf
cs
movups
mov
es
sbb
xlat
call
jno
xor
test
lea
add
ss
xor
dec
loopne
cltd
sbb
push
nop
sbb
jo
jg
sbb
stc
sub
mov
inc
aas
xchg
addr16
je
and
mov
sub
pcmpeqb
xchg
cli
pop
das
imul
es
std
mov
xor
mov
xor
loopne
out
aad
aam
jnp
dec
loope
or
mov
xor
sti
jbe
int3
mov
mov
and
xor
roll
mov
or
add
lock
cli
leave
pop
lahf
dec
fs
dec
mov
jle
incl
push
lret
xchg
xor
mov
adc
xor
out
sub
push
lcall
push
movsl
ret
and
pushf
add
cmpsl
mov
rcrl
lock
jmp
dec
pop
sbb
decl
cmp
scas
and
xchg
push
pop
cmp
lret
mov
outsl
cwtl
jns
int3
mov
gs
sbb
mov
jle
push
in
inc
xchg
jl
lret
rep
add
mov
sbb
add
lcall
fdiv
mov
or
mov
jg
push
loope
loopne
mov
test
aas
dec
push
pop
cmp
insl
lock
sbb
ja
adc
dec
mov
test
add
inc
pop
outsb
sub
xchg
inc
inc
cmp
sbbl
mull
aam
xchg
inc
mov
in
hlt
cmp
and
cmp
popa
xor
sbb
inc
pusha
dec
mov
mov
imul
sub
cmp
sub
mov
pop
cmp
push
lret
pusha
jl
jl
sbb
icebp
in
pop
jle
into
sub
inc
das
daa
mov
inc
in
outsl
sbb
mov
pusha
xchg
repz
movb
mov
mov
fstp
out
mov
and
pop
in
pop
cmpsb
sarb
clc
lret
dec
mov
into
arpl
xchg
in
push
xchg
icebp
aas
mov
inc
inc
sub
pop
xorl
in
into
add
inc
insl
daa
xchg
xchg
push
or
ljmp
xchg
dec
jne
ud0
mov
lods
push
inc
jecxz
fists
int3
push
and
out
inc
xor
lcall
int3
repz
jecxz
fisttps
adc
outsl
push
mov
popa
mov
xchg
out
stos
dec
mov
aas
mov
call
xchg
imul
push
add
pop
scas
jbe
xchg
out
mov
push
inc
or
iret
ret
inc
fbstp
xor
sub
addr16
pop
mov
testb
sub
push
loope
and
nop
notb
xchg
shll
movq
xor
test
pop
jp
mov
iret
add
cli
dec
cli
and
inc
rcll
icebp
cmpsb
stos
in
sub
ss
push
popf
push
daa
lea
jp
mov
jp
mov
mov
push
push
mov
dec
or
inc
jno
ss
arpl
cmp
mov
push
adc
inc
inc
addr16
mov
stos
fs
cmp
mov
push
mov
jl
in
jl
sahf
cmc
orl
push
inc
inc
cltd
inc
rorl
fsubrl
cmpsb
fstl
inc
push
notb
arpl
dec
jp
or
push
shlb
hlt
sbb
daa
or
int3
popa
jae
pop
mov
call
xor
mov
stos
and
les
push
xchg
cmpsb
scas
mov
lods
pop
inc
je
inc
cltd
add
pop
push
stos
addr16
add
add
add
mov
mov
mov
out
sbb
jbe
movsb
push
sub
pop
lods
cmp
push
xchg
std
mov
xchg
or
adc
loopne
xchg
ret
or
pusha
lods
bswap
rcll
stc
push
inc
int3
enter
xor
sbb
push
jge
lahf
in
inc
cltd
xchg
xlat
repnz
shll
sbbb
sub
xor
jge
sbb
aad
add
xchg
addr16
pop
out
lret
pop
xor
mov
rolb
imul
int3
jbe
test
dec
mov
mov
sub
popa
jp
push
pop
push
ljmp
inc
int3
idivl
jge
sub
clc
mov
cmc
in
adc
jp
mov
aaa
mov
sbb
xchg
outsl
mov
sub
stos
rolb
out
stc
push
test
std
push
mov
mov
pop
nop
cmc
lea
cmp
ljmp
daa
push
pop
add
inc
and
add
aaa
inc
test
pop
mov
inc
add
mov
out
push
inc
in
flds
ficoml
push
mov
lea
jl
fucomip
aad
jo
cmp
sbb
stc
mov
jle
loop
insl
stos
fiadds
push
push
fs
mov
and
mov
push
hlt
sub
mov
jne
mov
pop
cmpsl
lods
or
fsubp
push
mov
jecxz
jmp
mov
push
in
mov
lcall
add
mov
je
mov
jne
call
inc
xchg
sub
push
pop
or
popf
scas
out
inc
jno
loope
repz
pop
insl
fnsave
dec
mov
dec
push
inc
mov
mov
mov
push
out
lds
or
lcall
push
int3
arpl
xor
mov
mov
adc
loop
pushf
pop
sbb
or
fsubrl
mov
test
mov
jb
add
enter
xor
in
in
inc
fwait
pop
jno
ds
push
jle
gs
dec
test
mov
js
jg
scas
fldcw
cmp
adc
mov
inc
rcl
and
test
insb
and
or
pop
lock
adc
sbb
jnp
mov
cmp
lcall
adc
imull
pop
mov
lea
xor
dec
insb
jae
jle
icebp
test
or
jmp
enter
pop
cwtl
rcll
int
test
sub
leave
jl
xchg
mov
mov
es
jmp
dec
add
sub
sub
outsl
outsb
cmp
popa
push
push
pop
pop
and
ds
aas
and
sarb
jmp
ljmp
jl
pop
pop
inc
repnz
sahf
enter
cmp
leave
jb
lods
shrb
inc
lcall
test
testb
dec
pusha
inc
cwtl
inc
rorl
popa
sbb
stos
notl
call
or
xchg
ret
in
adc
xchg
sbb
repz
repz
dec
lahf
mov
aam
mov
ds
fs
mov
jmp
jo
sbb
idivb
add
cmp
xor
rcll
cmpsb
sub
push
fcoms
push
ret
subb
push
mov
mov
sub
cmp
and
jmp
or
out
sub
adc
mov
inc
adc
push
mov
rcrb
fisttpll
inc
add
flds
out
popf
mov
cmp
or
mov
or
and
pop
push
addr16
idivl
in
xor
fcomip
aad
iret
pop
and
inc
mov
shl
mov
or
lods
mov
sbb
sbb
sub
mov
pop
das
pop
sti
inc
mov
xchg
stc
xchg
pop
mov
mov
shlb
sub
insl
scas
scas
and
jno
sub
sbb
xlat
mov
add
inc
jae
cwtl
xor
sub
xchg
sbb
mov
sarl
nop
mov
jne
push
leave
push
clc
mov
cmp
and
xchg
pop
pop
mov
jg
dec
fsubrs
adc
dec
inc
mov
dec
jp
gs
inc
scas
sahf
pop
cmpsl
push
cmp
pop
rolb
ljmp
mov
xchg
jmp
cmp
xor
out
add
addb
call
add
mov
loope
sbb
into
lock
sbb
push
pop
test
adc
mov
add
subl
rcrb
pop
out
mov
shrl
push
imull
push
sub
mov
shrd
addb
inc
xchg
mov
push
adc
into
mov
push
out
mov
iret
dec
scas
pop
aaa
aad
dec
mov
xor
jbe
sbb
loop
jp
shl
cli
mov
xchg
xor
lea
nop
icebp
mov
inc
inc
xor
nop
jg
cmp
fistps
pop
sub
inc
in
pop
push
pop
dec
add
xlat
cmpl
mov
ret
mov
ret
push
sbb
rcrb
repnz
les
or
cmp
cmpsb
adc
ret
jne
test
add
in
and
jl
or
movsl
pushf
int
sbbb
icebp
dec
movsl
loop
jle
mov
xchg
pop
loope
enter
orb
inc
lods
sub
iret
movsb
mov
cmp
pusha
mov
into
add
inc
cs
xor
into
adc
pop
push
sbb
aaa
scas
fwait
cmc
sbb
jne
xlat
rcr
or
xchg
fs
dec
xor
or
cld
push
sbb
loope
push
pop
lret
jl
jae
hlt
lds
and
aam
andl
xchg
cmpsl
jns
ljmp
xchg
hlt
add
xor
pushl
ja
insl
mov
add
add
outsb
jle
xchg
adc
and
xchg
push
push
inc
mov
xor
das
sbb
mov
sbb
sub
sub
dec
pop
xchg
fcompl
lcall
xchg
mov
xchg
adc
call
push
scas
mov
dec
adc
or
in
addr16
mov
xchg
add
dec
cmp
jmp
add
scas
jecxz
mov
sbb
pop
mov
xchg
and
jg
or
xchg
jge
pop
pop
pushf
xchg
loope
test
mov
mov
dec
dec
xchg
data16
arpl
xor
ja
mov
ret
ret
clc
xchg
std
jns
int3
xchg
iret
shrl
ret
jle
jle
enter
mov
mov
in
fwait
test
pop
or
or
cld
and
adc
sub
jg
xchg
adc
mov
dec
psraw
fdivl
jl
xor
adc
mov
xor
inc
push
or
sti
mov
andb
add
popa
xchg
mov
xor
mov
icebp
mov
mov
pop
cmpsb
pop
out
lret
test
pop
xchg
cmc
sub
pop
sub
in
push
pop
aas
dec
mov
jo
mov
mov
adc
insb
out
jp
jl
ljmp
push
lcall
xor
or
inc
dec
push
fnstenv
cmpsb
mov
adc
lods
mov
stc
xchg
rcrl
int3
call
fldenv
jge
and
fdivl
inc
imul
mov
mov
mov
ret
enter
sub
insb
outsb
sub
push
inc
pop
test
jge
test
lea
add
jae
dec
fs
call
push
int
int3
lret
in
mov
jle
or
xchg
mov
test
jns
mov
shl
in
dec
addb
lret
pop
inc
lret
add
addr16
inc
xor
mov
imul
lds
sbb
std
push
mov
mov
mov
xchg
pusha
hlt
lea
dec
dec
adc
pop
or
shrb
push
push
dec
dec
jae
lods
jae
shrb
jns
ljmp
ja
push
push
insl
test
sbb
mov
pop
push
inc
push
iret
movsb
aam
sub
hlt
dec
aam
lds
mov
push
pusha
mov
add
pop
in
filds
outsl
jns
xchg
icebp
repnz
and
das
outsl
sbb
arpl
lcall
lahf
xor
ss
jno
push
mov
inc
fidivs
jbe
push
mov
outsl
or
xor
dec
cmpsb
int
lcall
mov
lods
mov
xchg
adc
shrl
bound
outsb
bound
aaa
pop
jbe
and
mov
cmpsl
ja
or
shl
fidivrs
adc
pop
mov
scas
fwait
jge
subl
or
and
les
adc
lret
dec
inc
ret
lahf
pop
sahf
sar
push
push
sub
or
push
push
adc
scas
xor
nop
jns
mov
ds
js
clc
mov
xor
dec
pop
cmp
fsubrs
test
jno
cwtl
dec
dec
inc
fucom
jo
scas
leave
xor
popa
scas
jae
push
mov
or
stc
in
in
bsr
push
push
mov
movsb
pop
test
fcomp
jp
gs
jmp
int
lock
rorb
rcrb
jmp
adc
iret
sahf
lods
sarb
into
mov
insb
mov
clc
adc
enter
ret
inc
xchg
rcr
xchg
imulb
and
shrl
sbb
pop
ja
inc
xor
dec
scas
add
adc
add
stc
push
jae
pusha
push
aaa
hlt
mov
rcr
iret
pop
jo
repnz
cmp
bound
inc
adc
inc
addr16
out
adc
mov
push
fidivrl
cmp
xor
nop
cld
rcll
test
mov
shl
call
jnp
fcoml
jl
scas
mov
insb
jmp
stos
add
cmpsl
dec
jg
xor
cmpsl
hlt
and
xchg
ret
ss
movsb
dec
or
aam
sbb
xor
mov
adc
push
pop
repz
scas
jecxz
fs
into
push
ror
pop
push
xchg
cmc
push
dec
movsb
inc
bound
jg
movsl
sub
push
in
push
sahf
out
mov
add
inc
sub
mov
fldl
jno
jge
int3
pop
dec
push
ja
into
je
push
dec
push
int3
shl
les
je
into
push
push
push
jl
push
in
lods
sbb
cmp
jbe
mov
loop
inc
hlt
cmp
arpl
mov
hlt
pop
int
fwait
pop
lcall
xchg
aaa
mov
cltd
out
repnz
jmp
aaa
stc
bound
mov
add
mov
cld
mov
cmc
test
shl
out
out
push
stos
push
jbe
jo
lret
dec
es
repz
dec
lret
in
sub
dec
jnp,pt
dec
sub
xchg
iret
or
mov
pop
cmp
push
in
dec
sbb
lods
cmc
insb
and
sbb
out
push
test
push
int3
push
add
iret
jp
jmp
or
jne
cmp
cltd
or
test
sub
xchg
lcall
out
aas
xchg
xchg
jge
cli
icebp
mov
insb
adc
cmp
fistpll
rol
test
xchg
mov
cmp
push
sub
sbb
push
cmpsl
and
repz
iret
aad
pop
push
push
out
sub
lds
lods
mov
stos
jo
cltd
add
inc
jl
sbb
into
sub
aam
push
mov
cmp
jnp
ret
scas
jbe
add
push
mov
dec
and
jle
orb
and
loop
loopne
cmp
mov
dec
push
sub
fldt
adc
mov
pop
cmp
or
pop
daa
lret
ret
pop
cmc
push
mov
sub
pop
push
push
je
out
inc
in
mov
xchg
jnp
mov
and
adc
arpl
push
bound
xchg
pop
adc
sahf
push
add
xor
cmpsl
aas
inc
pop
xlat
mov
xchg
mov
mov
addl
jno
testb
cld
leave
mov
mov
rorl
add
jo
call
test
lcall
ljmp
shl
int
insl
mov
insl
mov
into
incl
outsl
insb
ja
add
das
jns
xchg
xchg
inc
int
jle
mov
iret
test
sbb
in
xor
xor
repz
sbb
mov
inc
and
cmp
and
push
jb
pop
and
fsubl
adc
jo
sub
or
and
out
mov
inc
sub
je
dec
mov
cltd
loopne
push
shlb
push
frstor
bound
out
or
stos
cli
test
scas
lahf
call
hlt
push
cwtl
int
popw
pop
cmp
and
mov
js
mov
mov
jmp
push
fidivl
int
pop
push
sub
xchg
fnstsw
shll
ret
loop
bound
test
call
stos
mov
pop
inc
adc
cwtl
mov
push
rolb
ss
pop
mov
pop
pop
aaa
icebp
pop
or
movsl
mov
sub
sti
add
mov
imull
out
push
inc
pop
xor
jmp
jecxz
dec
ret
pushf
mov
out
enter
enter
loope
cli
inc
add
loop
jl
lods
push
xchg
or
add
cmp
xor
mov
inc
lcall
call
adc
push
stc
je
mov
aaa
push
sbb
ljmp
fsubrl
push
push
and
scas
test
loop
mov
sar
scas
sar
push
icebp
push
sub
call
insb
aad
stc
adc
inc
js
fldcw
sbb
addb
test
push
xor
cmp
fadd
xor
lret
jnp
pop
scas
push
fld
sbb
sub
cmp
cmpsb
jmp
mov
pop
jnp
aaa
mov
scas
mov
or
out
pop
insl
xchg
cltd
mov
bound
lock
lahf
int3
lods
mov
call
push
sub
jbe
sub
pop
cld
orl
dec
add
mov
cmp
clc
fldl
xchg
push
jmp
jge
push
cmp
inc
inc
jp
mov
leave
shll
pushf
add
cwtl
add
push
mov
pop
inc
and
cmp
stos
in
lock
mov
lcall
pop
jb
xor
fdivs
xorl
mov
sbb
xor
je
xchg
cmc
xchg
inc
mov
adc
out
jmp
sti
and
xor
push
cmp
adc
std
int3
adc
push
stos
and
xor
mov
add
inc
out
xor
pop
dec
adc
fcmovnb
test
dec
lcall
cmp
push
les
je
dec
mov
or
fldcw
jle
cmp
leave
sub
scas
arpl
out
shlb
mov
dec
sub
bound
cmc
jl
mov
in
addr16
outsb
loope
aad
mov
dec
outsb
stos
push
mov
out
add
sub
jno
pop
jno
push
addr16
mov
cmp
or
xchg
cmp
insl
mov
loopne
fsqrt
lods
mov
mov
fnsave
dec
mov
xchg
in
push
and
pop
repz
rorl
sub
adc
xchg
and
insb
adc
and
sbb
enter
dec
adc
cmp
inc
lods
cmp
cmp
adc
inc
scas
rcrl
aam
xchg
out
cmc
imul
rclb
jnp
mov
mov
jge
in
std
sbb
es
jne
pushf
and
fwait
xor
mov
in
cmpsb
sbb
dec
aas
push
inc
or
fmul
mov
inc
push
xchg
inc
aas
sarl
dec
jnp
hlt
mov
lods
ret
pusha
out
jns
inc
cmp
pop
mov
insb
fwait
mov
repz
cmc
aam
lods
push
imull
sub
mov
test
or
out
in
jno
xchg
cmp
iret
insb
adc
xchg
pop
or
mov
movsl
push
test
test
mov
sbbb
pop
xchg
pop
add
cmp
inc
mov
cltd
xchg
mov
xor
add
jp
sbb
xor
mov
mov
mov
andl
mov
mov
jg
scas
pop
test
push
ret
das
test
and
cli
out
mov
pop
mov
xchg
mov
xchg
sub
and
inc
cmp
std
in
xor
mov
sbb
cmp
cld
aaa
or
sub
push
icebp
sub
cmpsl
mov
lock
mov
aaa
lea
int
mov
jae
mov
sub
enter
sub
popa
and
cmp
cmp
mov
xorb
inc
cwtl
push
call
cmp
mov
in
sbb
out
mov
cli
daa
sbb
mov
sbb
scas
xchg
pop
into
in
iret
mov
cmp
or
adc
add
jge
mov
fnstcw
fnstsw
push
arpl
repnz
out
add
push
push
stos
and
mov
mov
or
out
imul
orl
and
mov
shlb
mov
por
stos
orl
sbb
insb
push
lret
test
cmpsl
xchg
and
ficoms
js
test
test
sahf
mov
add
addb
xor
sbb
pop
outsb
xor
inc
jge
mov
outsb
cmp
and
push
orb
in
sahf
arpl
ja
imul
neg
xor
cmp
aaa
rorb
push
andb
sti
xor
xchg
cltd
xchg
mov
mov
jle
or
ljmp
add
outsb
mov
pop
ret
lret
pusha
mov
sub
scas
fcmovb
rclb
push
cs
sti
mov
pop
jge,pn
or
jecxz
cmp
stc
das
repz
fwait
or
leave
xor
or
leave
ficomps
mov
sub
lcall
jae
xor
aas
xor
sarb
or
dec
xchg
out
dec
hlt
loop
fwait
cld
mov
movsl
xor
lret
sbb
clc
cwtl
inc
hlt
mov
jne
add
jne
movsb
imul
and
mov
outsb
inc
in
inc
sar
xchg
dec
mov
xchg
mov
pushf
add
sub
xor
ret
add
cmp
sub
int
adc
mov
popf
xor
pop
cmp
inc
push
in
add
cmc
push
lock
pop
lds
mov
mov
or
incl
mov
test
mov
jecxz
cltd
call
mov
mov
add
jne
loope
rcll
xor
push
mov
mov
cli
xlat
std
into
orl
sbb
cltd
int3
lods
sbbl
xchg
xor
jne
ljmp
push
jle
scas
xchg
sub
push
icebp
cmp
int
mov
lret
aaa
sti
cwtl
ss
insl
mov
outsl
adc
icebp
movl
add
pop
jbe
es
pop
add
lcall
loop
sbb
scas
mov
inc
ja
sub
shl
xor
mov
dec
out
sbb
sbb
sub
mov
mov
or
lds
negb
lret
ficoms
aas
dec
movsl
stos
lret
xchg
jmp
add
sbb
push
rcr
mov
jno
popa
cmpsb
es
dec
add
jae
test
mov
cmc
push
inc
scas
mov
sbb
into
push
cmp
adc
or
movsl
lcall
pop
xor
jl
sbb
mov
push
dec
stos
cmpsl
xchg
or
je
or
jbe
js
cmp
dec
addl
push
outsb
lret
ret
mov
add
push
push
outsb
rcrb
data16
pop
push
sbb
xor
fsubrl
je
les
inc
jmp
pop
js
inc
xor
or
and
mov
xor
jo
cli
jne
or
sbb
adc
inc
inc
out
pop
lds
int
xchg
mov
or
mov
repnz
shrl
pop
insl
xor
mov
mov
and
xchg
rolb
bound
lahf
jle
dec
cld
frstpm(287
jb
pop
addl
dec
mov
mov
outsl
push
xchg
shrl
shrb
xchg
mulb
jmp
fsubrs
jo
test
adc
cmpsl
outsb
and
cmp
les
jmp
out
mov
scas
add
mov
inc
add
adc
insl
and
push
out
mov
clc
fcoms
mov
movsb
and
shrl
lret
sti
jl
lds
add
push
in
roll
jnp
push
aas
outsb
push
mov
mov
icebp
pop
pop
fldt
bound
jmp
adc
lea
ret
lahf
mov
js
xor
insl
repz
jle
out
push
cmp
cmp
inc
mov
mov
fucom
jl
call
addl
fnstcw
mov
cmc
or
orb
mov
lods
jno
insb
lcall
cmp
fildl
sbb
mov
ret
mov
cli
push
add
xchg
ret
mov
mov
cmp
inc
mov
mov
ret
cmp
fs
nop
inc
out
fadds
les
test
or
cmp
stos
bound
mov
mov
xor
lret
cmpsb
push
lahf
enter
fadds
xor
jge
cmc
inc
ja
aas
jb
dec
adc
and
dec
hlt
mov
push
lcall
sub
je
shl
add
jb
stos
or
pop
pop
add
dec
dec
adcl
push
cmp
and
add
dec
decb
je
push
push
xchg
rclb
shrl
pop
cli
add
and
mov
ja
mov
jecxz
jle
inc
and
push
dec
jge
dec
out
in
sub
inc
lea
rcll
or
into
in
xor
xchg
ljmp
cmpb
or
jg
dec
cli
dec
pop
clc
bnd
xchg
xchg
mov
dec
pop
dec
mov
call
jg
jge
jne
ds
stos
aad
andb
adc
pop
jno
dec
into
hlt
pop
xchg
dec
aam
and
inc
data16
xlat
push
das
lea
jp
ljmp
mov
imul
ret
or
ret
jne
mov
adc
mov
sarb
cmp
xchg
add
pop
mov
xor
adc
xchg
mov
sbb
icebp
mov
lods
lret
jecxz
rcll
shr
roll
stc
mov
into
mov
push
adc
test
aam
pop
test
negb
pop
pop
pop
mov
xchg
jo
leave
xchg
mov
push
out
push
cmp
lods
in
aaa
daa
sub
outsb
sub
ret
cmpb
jmp
sahf
rolb
xor
not
std
xor
cmpl
call
arpl
and
sbbl
orb
shll
lea
sti
dec
into
jl
inc
cmp
or
pop
sbb
adcb
dec
mov
sbbl
or
ss
clc
mov
jo
in
gs
int3
div
push
mov
xor
inc
ja
leave
call
rolb
dec
lds
pop
or
mov
inc
xlat
hlt
or
pop
sub
mov
jl
in
jle
xlat
mov
ljmp
sub
and
pop
lret
cld
aam
mov
mov
arpl
xor
sbb
into
dec
cmpsb
pop
or
and
iret
rcr
xchg
rclb
in
and
clc
sbb
fcompl
xchg
mov
or
pusha
mov
adc
mov
dec
cmp
xchg
xchg
mov
les
insl
pop
adc
mov
js
in
and
cmp
ret
loop
vcvttsd2si
mov
cmp
dec
je
pop
add
insl
minps
pop
jno
test
pop
hlt
fwait
cmpsl
pop
mov
jbe
cmpsl
cwtl
xchg
xor
jo
mov
xchg
hlt
shrl
dec
mov
in
cmpsl
int
mov
lcall
pop
adc
cmc
insl
hlt
inc
mov
stos
das
out
inc
es
dec
cmp
pop
cld
jb
add
dec
inc
adc
mov
adc
sarb
movsb
mov
out
add
push
pusha
ljmp
loopne
sarb
popa
popa
cltd
scas
xchg
push
dec
mull
loopne
outsb
sub
dec
loope
ljmp
cmp
daa
cwtl
je
and
sbbb
adc
jg
adc
mov
push
stos
cmp
push
ja
es
repnz
sub
mov
sub
int3
movsl
add
sbb
xchg
push
push
rorl
sub
nop
sti
sub
xor
sub
push
stc
out
fwait
dec
jmp
in
jb
sbb
sbbb
dec
mov
sar
sti
rcr
cmp
mov
int3
fstps
lds
in
daa
xchg
inc
jae
mov
pop
mov
out
insb
fcomps
jge
cmc
xchg
mov
mov
dec
fs
or
mov
ljmp
mov
test
or
mov
fsubrl
pop
fs
int
icebp
push
faddl
incl
xchg
add
mov
push
add
push
jo
sahf
insl
sub
mov
rcrl
out
pop
adc
push
mov
sub
mov
xor
int
mov
loope
lret
jae
stos
pop
lds
or
xchg
icebp
push
cmp
int3
inc
xor
push
fcmovnu
fwait
push
add
and
inc
sub
fists
jg
ret
inc
and
push
and
inc
lea
lcall
sub
xchg
jno
xor
push
jge
inc
and
mov
imul
dec
fdivrs
jge
das
and
mov
mov
cmpsb
iret
fs
cs
lods
cmp
scas
in
pop
inc
out
dec
or
outsl
dec
add
mov
mov
cmp
stc
xor
dec
pop
ljmp
sar
das
loope
adc
sub
push
jbe
push
mov
adc
mov
jno
mov
cmp
fildl
roll
test
push
pop
and
int
mov
int3
lock
mov
xor
inc
inc
jmp
rorl
dec
add
mov
jnp
dec
mov
addr16
mov
inc
in
add
lret
mov
jmp
pop
xchg
pop
sarb
fwait
push
sti
sub
pop
mov
sub
jbe
mov
adc
in
xchg
fidivrl
repnz
nop
out
or
pushf
add
push
lea
hlt
mov
repz
pop
inc
arpl
mov
adc
push
cmp
mov
js
xchg
xlat
and
dec
sbb
repnz
sbb
shll
loop
mov
into
cmp
sub
out
inc
inc
clc
jb
jmp
rcrl
addl
decl
mov
aas
xchg
jp
pop
add
stos
pop
add
mov
cmp
sbb
stos
hlt
sbb
loope
or
nop
ljmp
aas
movsl
jmp
adc
jns
jle
hlt
leave
mov
cmp
ret
rorl
cmc
aaa
push
icebp
fisubl
pushf
mov
sbb
ret
hlt
adc
mov
repnz
out
cmp
int3
rcr
xchg
ficoml
je
sub
xor
pop
insl
sbb
xor
dec
xchg
sub
push
das
and
subb
popa
push
mov
pop
pop
enter
xor
inc
sahf
stos
push
loopne
push
jnp
adc
push
add
mov
fcomip
aas
push
in
jns
or
sbb
enter
mov
in
fmul
and
in
sbb
dec
rcrl
or
sbb
push
xchg
popa
mov
mov
lods
enter
mov
lods
push
mov
loopne
dec
push
fisttps
xlat
jb
xchg
jmp
cld
xchg
sbb
negl
ja
jnp
push
das
or
and
in
jnp
sub
push
jb
xor
aas
call
fimull
lock
adc
loope
test
sub
adc
fstpl
inc
jg
mov
xor
mov
loop
aaa
int
mov
cmp
daa
out
sbb
scas
popf
mov
js
icebp
sub
orb
into
popa
mov
mov
mov
xchg
dec
mov
fcoml
pop
and
push
jb
jp
push
pop
sbb
xor
adc
cs
repz
cltd
mov
sub
movsl
je
nop
std
enter
pop
jb
inc
dec
mov
scas
xchg
out
fbld
mov
fmuls
jne
leave
push
sub
int
bound
dec
cmp
sub
movsl
stc
jns
neg
add
mov
pop
test
jno
cmpsl
clc
lret
mov
repz
test
jbe
xor
je
out
mov
jb
push
jge
mov
outsb
sbb
mov
cs
push
pop
add
cs
mov
out
int3
vpsadbw
ret
pop
lahf
push
fimuls
stos
pop
sub
adc
dec
cltd
sbb
sbb
jo
dec
sub
pop
sbb
mov
add
push
jb
push
and
pop
faddp
xchg
mov
mov
out
push
out
pop
adc
pop
jg
fwait
or
mov
inc
push
adc
shrb
je
pop
clc
jge
clc
and
mov
mov
loop
out
inc
in
pop
ljmp
and
arpl
aam
mov
adc
adc
cmp
mov
mov
jge
lss
arpl
test
dec
push
dec
push
enter
adc
inc
adc
push
repnz
sbb
movl
aas
loop
inc
bound
dec
add
dec
repz
loope
and
jl
cmp
hlt
inc
dec
jg
not
lret
lods
aam
cmp
and
adc
push
int3
gs
jno
je
cmpsl
cwtl
out
jb
out
xlat
jno
aam
mov
inc
sub
pop
mov
in
xor
fwait
lods
pop
lret
lock
insl
lock
incb
fs
shlb
test
inc
add
daa
rorl
sahf
popf
push
insb
sbb
jne
sub
fdivs
add
jl
je
cmp
repz
and
arpl
out
testb
dec
jl
leave
pop
fnstsw
and
fidivrl
xorl
mov
dec
add
aas
push
sub
and
jbe
inc
push
or
xor
movsl
and
adc
jp
aas
jmp
pusha
test
adc
sub
mov
cmp
or
inc
pop
inc
push
testb
cmp
pop
cwtl
cmp
or
stc
add
push
adc
arpl
sub
push
daa
seta
dec
and
jg
je
pop
adc
rcll
sbb
dec
jg
sbb
rolb
inc
pop
shll
jp
push
push
rcll
rolb
out
adc
in
and
bound
or
inc
jl
xlat
insl
and
imul
inc
sub
out
xor
inc
pop
jbe
icebp
call
pop
ja
fldenv
shrb
addl
add
jmp
mov
pop
mov
dec
and
jecxz
jo
adc
stos
pop
lcall
idivl
aaa
push
mov
hlt
aas
mov
cmp
addr16
mov
or
outsl
enter
jp
shll
cwtl
inc
mov
pushf
and
bnd
xor
lock
sub
fwait
mov
inc
pop
mov
jl
sarl
dec
sahf
hlt
movsb
mov
lret
mov
dec
ret
aad
outsb
xor
daa
fsub
mov
push
int3
scas
pushf
mov
shlb
adc
adc
adc
mov
mov
arpl
idivl
aam
cld
pop
pop
stos
sbb
lock
mov
pop
cs
fistpl
into
mov
lret
mov
aaa
inc
mov
js
and
cltd
cmp
gs
mov
outsl
out
or
out
aas
cwtl
xchg
cmpsl
cmp
js
and
js
jnp
inc
ljmp
sbb
or
pop
pop
mov
les
sub
testb
pop
insl
jmp
std
push
lea
repnz
push
pop
cmpsb
icebp
dec
mov
cmpsl
imul
cwtl
inc
rol
mov
and
out
in
cmc
mov
pushf
or
loop
lret
sbb
mov
repz
cmp
popa
in
jmp
fsubrl
lcall
push
push
inc
hlt
fmull
ds
iret
push
rorb
cmp
mov
push
inc
jg
aas
adc
mov
in
pop
out
aam
stos
or
ljmp
lea
addr16
cwtl
loop
in
cmp
sahf
fildll
lcall
mov
mov
mov
push
xor
stos
movsl
pop
pop
fisttps
cbtw
stc
fstl
xchg
scas
out
and
dec
jmp
bnd
mov
nop
sarl
and
loopne
mov
jo
clc
fildll
sahf
mov
insb
pushl
cmp
mov
popl
fbstp
adc
jb
pop
mov
pop
mov
mov
call
fidivrl
shrl
pop
add
jbe
add
push
addl
jg
pop
into
aad
xchg
lods
inc
insb
test
pop
lcallw
leave
in
rorl
pop
xlat
mov
or
push
arpl
pop
fadd
stos
xchg
mov
jno
repz
push
push
pop
push
sub
call
jecxz
orb
hlt
punpckhdq
std
adc
fidivrl
ss
mov
push
test
inc
mov
jb
scas
mov
push
xor
movsl
push
push
jl
or
mov
push
js
cs
mov
add
and
inc
xchg
je
popa
test
stos
test
fsubs
test
jle
xchg
fidivs
sti
mov
stos
inc
sbb
out
push
mov
or
push
jb
jno
out
into
and
subb
hlt
hlt
push
pop
sarb
sub
or
test
imul
dec
cmp
cmp
repz
inc
repz
xchg
outsl
mov
mov
daa
sub
xorl
int3
cmpsb
movaps
pushf
ds
shll
js
mov
xor
mov
jecxz
sbb
xor
in
rorl
inc
inc
push
pop
adc
cmp
or
enter
fdivrs
ffreep
lods
xchg
adc
mov
repnz
mov
cmc
xchg
lock
insl
mov
sbb
lds
inc
dec
and
lds
in
insb
notb
jne
pop
cmovp
jle
mov
mov
and
xchg
rcrb
cmpsb
ret
dec
push
sbb
sbb
xor
jae
jno
std
mov
jae
repnz
out
push
clc
lods
xchg
dec
aaa
out
or
pop
sbb
and
xchg
call
mov
frstor
mov
cmpsb
inc
ret
icebp
push
cmc
pushf
into
int3
dec
popa
and
lret
mov
hlt
pop
inc
cwtl
mov
lcall
adc
addr16
push
in
cmp
add
adcl
cmp
pushf
and
xor
andl
sbb
and
jae
lods
mov
lahf
test
into
fwait
dec
imul
pushf
pop
dec
and
sub
cmp
out
mov
ja
push
jbe
bound
outsb
rcrb
jnp
shlb
inc
sbb
xchg
mov
out
lret
xchg
popf
fnstsw
test
sub
out
adc
negb
rcrl
inc
adc
addr16
push
dec
xchg
lock
dec
lock
arpl
sub
mov
push
dec
daa
lcall
and
xchg
xor
lcall
xor
push
jae
mov
xor
sub
out
xor
repnz
inc
loope
push
mov
mov
dec
dec
mov
jg
leave
gs
clc
iret
push
sbb
dec
sub
xor
cmp
jmp
xor
adc
mov
shrl
lret
movsl
cmp
sbb
cmp
dec
fwait
in
and
and
int3
jns
dec
popf
mov
xlat
xchg
xlat
mov
mov
int3
je
mov
icebp
out
gs
adc
aam
cmc
int3
test
outsb
clc
mov
push
xchg
out
sahf
idivb
lods
leave
ljmp
push
mov
push
sub
xorb
out
push
xor
out
rcrb
repz
dec
push
cwtl
iret
test
call
stos
mov
dec
pop
or
stc
lods
dec
cmpsl
outsb
repnz
push
push
xor
cltd
add
popa
sbb
pop
or
inc
mov
mov
hlt
xchg
pop
pusha
fcomip
rcrl
int3
stos
mov
cmp
mov
shrl
mov
stc
shll
enter
lcall
mov
js
fcom
pop
push
jp
mov
jp
enter
pop
jnp
sbb
sub
inc
and
movsl
adc
mov
stc
fistpll
ss
inc
pop
jns
mov
pop
bound
adc
add
or
jecxz
out
sbb
jge
fwait
loop
mov
rorb
jae
cmp
jmp
cwtl
sub
scas
je
pop
movsl
movsl
inc
mulb
fdivrs
or
arpl
sub
push
xor
pop
subl
mov
les
xchg
lods
cmpb
pop
andl
lds
icebp
fistps
cmpsl
mov
adc
mov
idiv
in
shll
pop
adc
push
lods
aad
lods
mov
leave
pop
pop
lret
ficoms
cmpsl
dec
cwtl
or
mov
sbb
movsb
rorb
ss
jne
jge
stos
adc
mov
fbld
shrl
cli
and
stos
addr16
loopne
ret
lea
push
inc
pop
aaa
jp
cmp
enter
pop
add
popf
inc
aas
fadd
pop
push
lahf
sti
mov
add
push
mov
int3
mov
movsl
and
sub
sub
mov
out
ret
or
mov
pusha
lret
xchg
lods
stos
addr16
test
xchg
out
pop
cmp
push
aam
push
mov
cmpsl
je
jecxz
mov
out
mov
add
mov
xchg
iret
out
xor
imul
outsl
je
inc
dec
add
pop
fistl
sub
xchg
or
adc
call
stos
mov
push
and
cli
in
inc
jmp
or
test
xor
pop
int3
in
adc
loope
add
fsts
repz
icebp
xor
std
ja
or
add
clc
cltd
ja
mov
leave
fwait
int3
popa
out
ss
cli
movsb
les
imul
sbb
lea
add
sub
loope
mov
cwtl
loopne
pop
inc
int3
mov
pop
ja
pushf
push
lret
enter
push
sbb
ljmp
mov
testl
loope
orb
in
rolw
ret
fdivr
mov
push
insb
jnp
adc
orb
jo
aad
push
or
and
mov
test
mov
jecxz
sbb
shl
add
push
cmp
mov
mov
leave
fdivs
icebp
push
add
loopne
cwtl
xor
push
sub
in
sub
es
loopne
andb
lock
aas
xor
push
pop
and
mov
aad
mov
mov
dec
cmp
je
add
fnstenv
mov
push
inc
xchg
adc
dec
jmp
sbb
out
jb
pusha
adc
sbb
sub
mov
cmpsl
mov
lods
adc
xchg
into
enter
cmpsl
out
sub
sbb
xchg
xchg
es
loope
adc
mov
dec
aam
sbb
and
loope
sbb
js
ljmp
dec
fbld
xorl
aam
xchg
mov
xchg
and
mov
mov
movb
xchg
inc
cmp
lahf
jne
xchg
lret
sub
ja
xor
add
and
in
xchg
incl
mov
outsl
cmpl
xchg
test
or
mov
ljmp
aad
es
in
push
mov
inc
push
rcrb
shl
in
insb
es
subb
pop
pop
push
cmpsb
xor
addr16
movsl
in
push
pop
imul
mov
insb
in
sbb
mov
aad
lcall
push
jns
xor
mov
ret
jo
rcll
xchg
xor
pop
push
das
xchg
add
scas
test
dec
fs
or
pop
pop
int
mov
jecxz,pt
pusha
mov
push
pop
inc
outsl
xchg
lds
fisubrs
insb
adc
sti
dec
dec
xchg
adc
cltd
ljmp
pushf
cmp
filds
and
sti
fildl
or
cwtl
mov
jl
or
fdivrp
in
decl
cmp
inc
movsb
iretw
adc
xor
movsl
jge
mov
mov
sahf
and
xchg
mov
popa
xor
jge
pop
dec
or
flds
xchg
testb
int
pop
scas
js
jbe
mov
inc
add
xchg
popa
pop
sbb
mov
or
dec
cmp
int3
dec
add
inc
push
mov
dec
lods
cmp
mov
addb
lods
insl
call
mov
lahf
xchg
stc
or
pushf
jnp
je
xchg
stos
in
cli
cmp
jle
shlb
add
data16
jmp
arpl
cmpsl
mov
jne
ljmp
push
fadds
scas
mov
popf
jno
outsl
std
mov
into
jecxz
jae
mov
sub
mov
das
int
int
aam
cmp
jp
jmp
stos
aam
cmp
movsl
out
leave
sbb
test
fcmovb
fdivl
jno
scas
sub
das
adc
inc
push
cmp
push
pushf
mov
sbb
lret
xchg
dec
fwait
or
into
mov
push
rcrb
inc
and
leave
insb
aas
jl
bound
xor
mov
leave
test
sub
pop
dec
inc
mov
ss
aam
mov
arpl
inc
fsubrs
xlat
mov
mov
sub
add
xor
mov
ret
push
in
loopne
mov
out
movsb
hlt
adc
nop
sbb
movsb
int3
sbb
push
xchg
add
shl
js
jle
mov
xchg
push
inc
fstpt
adc
add
push
mov
lea
jb
push
dec
mov
in
xor
loopne
cmc
xorb
xchg
pushf
aas
ss
mov
movl
std
das
xor
jge
pop
decb
pop
mov
lds
lret
scas
loope
cmp
dec
les
outsl
jg
insb
fwait
outsl
and
es
add
lcall
xchg
or
cltd
fnstsw
int
nop
push
inc
lods
out
cs
pop
dec
sbb
cmp
les
mov
cs
and
nop
jp
add
ret
lea
les
mov
into
cmp
loope
bound
pop
scas
adc
nop
push
shrb
sbb
ret
js
lea
dec
repnz
inc
stc
or
cltd
lret
cld
dec
or
sub
jne
repnz
jge
cmp
pop
dec
pop
mov
lods
lcall
aas
cmp
mov
pushf
movsb
mov
mov
clc
xchg
mov
or
jge
popa
pop
push
add
test
mov
mov
sub
iret
pop
cmp
cmp
inc
sti
cmp
pop
jmp
mov
fwait
mov
std
and
out
gs
pop
inc
lahf
sbb
inc
bound
das
in
pop
sbb
pop
pop
mov
cld
cmpsl
dec
lods
sbb
and
lods
mov
adc
pushf
shrb
xchg
push
leave
ss
cld
les
sbb
xchg
jge
inc
add
sbb
mov
sbb
in
data16
frstor
dec
mov
pop
xchg
jge
pop
jne
dec
aad
rorb
sarb
adcb
or
pop
imul
in
push
lock
adc
jno
sub
outsl
subb
jle
push
adc
inc
and
or
js
popa
les
cmp
push
xor
and
std
add
pop
sbb
out
add
inc
xchg
popa
inc
push
inc
mov
sub
mov
stc
adc
icebp
or
sarl
jns
data16
outsb
adc
sti
pop
popf
cmp
or
dec
jns
scas
xor
and
pop
and
sub
mov
cltd
mulb
ret
mov
push
icebp
cmp
jg
jp
adc
sub
mov
mov
mov
xor
xor
and
dec
push
mov
push
inc
outsb
mov
test
dec
jg
fwait
add
or
inc
movsb
mov
xor
decb
mov
mov
push
xor
push
sti
cmpsb
mov
mov
cmpsb
pop
sub
popa
xor
ljmp
dec
imul
pop
jne
push
or
cmp
cmp
lret
mov
fwait
dec
mov
xor
sub
mov
std
cli
push
jno
or
cs
out
cmp
sub
jge
js
outsb
mov
sbb
xor
lea
cmp
push
into
lea
das
cmp
out
neg
aad
cld
mov
pop
dec
jge
dec
and
mov
or
outsw
xor
imul
sub
cltd
or
sbb
insl
mov
hlt
out
js
fisubl
cmc
scas
mov
mov
or
sbb
mov
jbe
adcb
les
fsubrs
cli
incl
add
sbb
push
incb
gs
xor
sbb
idivl
add
adc
popa
adc
pop
or
andl
jp
ss
cmp
into
mov
fs
cmpsb
je
imul
popa
jmp
push
clc
jecxz
dec
adc
pop
int
ret
lret
and
xchg
adc
fs
adc
rcrl
sbb
and
in
inc
xchg
push
repnz
push
pop
ret
or
inc
sbb
cmpsb
fwait
in
es
cmp
mov
test
mov
mov
add
mov
fsubrl
pop
cwtl
dec
add
dec
dec
and
adc
mov
out
lcall
jge
fistpll
dec
testl
inc
ljmp
lcall
out
lcall
pop
dec
cmpsb
sub
add
pusha
mov
pop
xor
mov
pop
or
mov
xchg
or
add
enter
jg
int3
cltd
out
push
in
xor
dec
divl
call
jae
xlat
scas
pop
mov
pusha
cmp
dec
rolb
in
xor
sub
scas
xchg
test
sbb
int
call
jge
pop
mov
pop
dec
inc
adcb
std
cmp
jno
mov
push
js
adc
push
sti
pop
jae
add
and
jbe
mov
divb
dec
gs
mov
mov
sbb
sub
jnp
in
roll
xchg
int
loopne
mov
pusha
xchg
cmp
cmp
dec
mov
inc
push
arpl
pushf
aad
inc
in
mov
or
or
xor
cmp
mov
jns
cmc
jnp
fwait
mov
ds
mov
dec
cmp
adc
add
imul
js
add
ret
ss
test
cmc
je
push
jo
xor
loop
and
mov
xor
ds
mov
negl
aaa
out
scas
mov
imul
addr16
bound
mov
aad
push
or
mov
xor
mov
mov
xor
pop
xchg
xor
or
adc
inc
cmp
jg
cli
aam
jg
test
push
ficomps
in
cs
xchg
mov
pop
mov
addr16
loopne
inc
pop
cmpsl
stc
pushf
adc
inc
adc
xchg
add
adc
in
dec
roll
aas
pop
ljmp
neg
push
push
jmp
insb
pop
mov
mov
inc
mov
jmp
lret
and
roll
sbb
mov
pushf
mov
adc
cmp
inc
out
sub
leave
mov
cmc
and
sar
and
pop
or
clc
pop
xor
sub
add
inc
daa
in
scas
mov
mov
mov
cmc
pcmpgtw
shl
daa
jbe
leave
fimuls
push
neg
imul
jbe
enter
mov
mov
shl
rol
ss
rclb
adc
ds
mov
xchg
push
jmp
or
mov
sub
pop
aas
fstl
arpl
push
mov
mov
add
fisubrs
insl
loope
lods
jmp
adc
aas
adcl
inc
cmp
ucomiss
fimuls
ficoml
sub
or
lcall
rcrb
pop
dec
les
jae
cmp
or
mov
pop
push
int3
out
adc
test
nop
cmpb
dec
cmp
mov
add
sub
into
xchg
xlat
shrl
ss
and
scas
and
mov
jmp
inc
movsl
push
pop
fadd
mov
push
pop
andb
fs
aaa
push
fidivs
das
or
add
mov
mov
test
cmp
aaa
mov
insl
lods
scas
jg
fstps
mov
stos
mov
add
xor
dec
push
pop
or
cld
mov
pop
add
icebp
pop
js
sub
and
cli
stos
pop
jo
dec
pop
dec
sbb
push
outsb
dec
cmp
testl
pop
pop
sbb
imul
push
std
cld
mov
inc
xchg
pause
icebp
out
lea
outsl
incb
lcall
dec
inc
push
div
fs
jl
les
test
mov
and
inc
gs
xor
mov
mov
pop
inc
sbb
mov
in
lock
stc
or
dec
je
incl
pusha
sub
orl
push
scas
mov
inc
sub
jge
push
fisttpl
fcoml
sbbl
inc
stc
and
arpl
add
cmp
push
push
nop
call
mov
inc
inc
mov
push
xor
les
and
pop
andb
xchg
inc
repnz
insl
push
xchg
pushf
inc
add
je
xchg
xlat
adc
scas
pop
sbb
arpl
in
jge
mov
test
and
decb
mov
add
jb
scas
push
cmp
ret
cli
call
inc
adc
xchg
push
adc
or
shr
das
push
testb
inc
es
fcoml
mov
inc
xor
xor
gs
enter
insl
push
ljmp
je
mov
xchg
add
repnz
xchg
scas
popa
cld
movsb
push
sub
mov
js
cmpsl
cmp
fwait
xchg
xchg
cs
push
fsub
dec
inc
inc
orl
xchg
dec
add
fdivl
dec
jecxz
adc
sub
icebp
cmp
xor
jne
push
jmp
das
add
cwtl
mov
sbb
mov
and
push
stos
aam
ficoms
daa
cltd
jb
xor
dec
inc
ds
stc
daa
loopne
xchg
in
jmp
mov
test
inc
inc
pop
adc
ret
jno
and
xchg
lods
dec
scas
dec
xchg
paddsw
scas
pop
lret
in
mov
enter
call
and
cld
out
aad
sub
out
stos
in
fcoms
les
jg
push
xchg
ficoms
mov
jmp
cmpsb
sbb
inc
stc
add
in
adc
or
mov
jb
std
out
daa
jmp
xor
dec
movsb
scas
and
jge
add
daa
mov
or
mov
jae
call
insb
cld
retw
aad
or
ja
dec
jmp
in
inc
movsl
jg
add
push
cwtl
loopne
xchg
shrl
push
cwtl
ss
sub
mov
push
add
and
cmp
add
xor
sbbl
adcl
cmp
cmp
inc
add
cmp
sar
push
fidivrs
movsb
sub
and
out
push
sarl
fsin
xchg
mov
jmp
add
inc
dec
dec
dec
int
call
movsl
repnz
xor
jecxz
mov
addb
scas
cmp
push
testl
mov
cmpsl
sbb
adc
movsl
push
scas
fldt
aas
dec
subl
dec
ret
cmp
shl
xchg
mov
sbb
mov
les
call
jle
pop
fstpl
jecxz
js
inc
and
popa
inc
and
add
orb
pop
leave
or
mov
cmp
lcall
imul
and
sti
ds
inc
stos
les
mov
or
adc
mov
or
add
fistpll
repnz
pusha
mov
cmp
addr16
dec
fnstcw
sbb
xorb
call
push
pop
jle
mov
mov
push
fs
jl
lock
int3
cs
mov
lret
in
jbe
cmp
cwtl
sbb
xor
jg
and
jge
mov
into
mov
and
pop
mov
xchg
jb
cmp
sub
repz
ret
push
xor
pop
test
mov
mov
data16
sarb
xchg
pusha
pop
out
lds
rcrl
push
es
out
ret
sub
pop
cli
push
and
loop
lret
xchg
mov
adc
mov
mov
inc
push
mov
xchg
outsl
fdivrl
inc
shrb
data16
imul
fidivrl
sub
les
out
cmpsl
hlt
stos
xchg
add
bound
inc
mov
mov
mov
xchg
lret
jo
and
or
imul
dec
sub
popa
pop
mov
call
sti
iret
out
push
inc
push
mov
dec
sbb
lret
lahf
mov
push
negl
push
or
dec
pop
adcl
sbb
test
cmp
das
push
mov
and
outsb
adc
add
out
out
sarb
movsb
mov
inc
lret
xor
cwtl
push
cmp
lods
les
or
xor
into
jl
mov
popa
sahf
push
out
test
out
mov
cld
push
repz
push
add
lret
test
xor
fldt
pop
fstp
inc
and
pop
push
rcr
push
jge
xor
test
fisubl
push
or
jbe
test
mov
imul
mov
lds
mov
mov
fwait
enter
push
mov
iret
rcrb
adcl
mov
and
jecxz
mov
push
or
pop
push
fdivl
adc
mov
mov
imul
push
sti
pushf
cmpsl
xor
pop
inc
ss
inc
mov
lods
movsb
push
shlb
jp
or
jge
in
fwait
outsl
sub
lahf
js
mov
pusha
repnz
push
xchg
loopne
cs
jbe
rolb
in
and
adc
sub
jo
out
int3
jbe
inc
adc
je
jb
test
inc
xor
and
cmpsl
sub
test
idivb
lahf
pop
data16
xchg
dec
fcompl
out
out
sbb
jge
int
sub
xchg
cmp
add
in
jge
mov
icebp
jl
out
lret
movsl
or
xchg
fmulp
or
jmp
mov
out
test
jae
push
jb
test
es
test
pop
push
and
cmc
or
cltd
pop
inc
jecxz
jg
xor
bt
mov
dec
push
adc
jb
mov
sub
cmc
mov
push
mov
sbb
push
popa
pushf
neg
js
dec
outsb
outsb
jmp
mov
imul
test
sub
stos
mov
inc
ss
mov
popf
xchg
jne
pop
xchg
push
loopne
int3
repz
ja
pop
jg
and
in
cltd
fidivs
je
ja
pop
xchg
mov
cmp
mov
cmp
mulb
fldenv
push
xchg
cmpb
in
les
jg
mov
pop
sbb
dec
push
cmp
dec
push
cwtl
aam
and
lods
jle
test
lcall
mov
lahf
arpl
in
cmp
addr16
insb
insb
or
adc
fnstenv
jmp
div
jns
mov
push
sahf
adc
fldenv
xchg
adcb
jb
inc
test
pop
fistps
aas
ljmp
popf
ss
xor
mov
mov
jns
mov
shr
cmpsb
xor
lods
add
adc
inc
lock
push
xor
adc
mov
inc
add
out
leave
test
dec
xchg
add
lock
inc
mov
or
push
enter
jnp
push
test
imul
lds
mov
test
xlat
xchg
lahf
ss
xchg
sti
imul
pop
mov
pop
xchg
lret
jnp,pn
jo
sbb
mov
std
pop
push
movsl
jb
or
jae
cmp
mov
jecxz
movsb
mov
and
jnp
xchg
ja
adc
aad
mov
and
sub
mov
xlat
lret
aas
lret
fwait
imul
pop
add
out
enter
mov
xchg
loop
enter
enter
mov
xor
fbld
lcall
push
aaa
bnd
mov
in
stos
inc
xor
jg
add
mov
push
arpl
xchg
in
dec
popf
sti
inc
push
xchg
add
pop
ljmp
addb
jo
dec
push
sub
out
mov
andb
jo
jb
mov
fwait
xchg
dec
mov
push
push
jno
xor
jl
xchg
jae
in
add
fiadds
jnp
lods
pop
inc
sbb
jp
cmp
adc
cmc
or
outsl
sub
push
push
xor
pop
sub
lret
sub
inc
and
inc
mov
test
inc
leave
mov
push
sbb
sub
out
mov
std
xchg
push
fcmovu
test
push
add
sbb
cli
ja
jmp
icebp
push
or
inc
rcrl
rcr
jns
add
test
insl
xor
sub
jle
ds
xchg
mov
idivb
inc
cmp
imul
shr
lret
push
mov
orl
pop
sbb
roll
or
mov
xchg
lock
push
add
sub
push
sub
xor
lds
push
iret
fdivrl
dec
cmp
add
test
and
cmp
inc
pop
pop
insb
in
daa
xchg
jns,pn
and
popa
push
out
clts
push
gs
aaa
dec
inc
dec
jl
adc
leave
inc
lret
inc
shl
mov
adc
push
mov
push
shlb
rolb
push
sub
cli
scas
loope
aaa
adc
pop
bound
xlat
out
or
loopne
icebp
sub
dec
lret
dec
pop
inc
ret
push
sbb
in
jle
insl
fisttpll
xor
pop
enter
inc
add
aad
jmp
lcall
mov
lods
andb
sbb
stos
xchg
dec
adc
mov
insb
jecxz
cli
imul
hlt
inc
repnz
pop
sub
push
jb
loopne
lods
aaa
movd
xor
mov
adc
add
test
adc
test
dec
dec
clc
arpl
pop
sbb
pop
jnp
pop
ljmp
xlat
imul
pop
jg
out
or
adc
int
enter
imul
fcmovu
sub
sub
pop
das
or
dec
or
rclb
hlt
push
lea
js
inc
mov
sbb
and
sarl
jecxz
pop
jo
mov
sti
dec
mov
sbb
or
lock
adc
mov
lret
clc
or
inc
pop
mov
je
push
movsl
int3
jp
call
loop
inc
jle
jmp
arpl
cwtl
mov
jb
mov
mov
pop
jnp
jno
mov
fstpl
mov
test
pop
pop
sbb
pusha
test
xchg
test
gs
pushf
push
push
xor
int3
sbb
mov
fistps
jne
or
std
fistpll
jecxz
in
ds
mov
cld
adc
ret
lods
sbb
sar
mov
or
push
mov
lcall
mov
in
xchg
xchg
dec
lods
sub
mov
loopne
mov
lret
mov
sub
pusha
shll
sbb
mov
inc
mov
or
or
cs
xorl
jg
ljmp
lret
inc
mov
sub
fbstp
pushf
sbb
mov
xchg
sub
mov
gs
sbb
push
pop
mov
add
das
shrd
lock
jle
add
nop
adc
imul
test
adc
ja
or
jne
js
xor
cs
cltd
sti
lea
or
ds
out
addl
int
jae
hlt
orl
push
jne
jns
adc
jbe
jno
or
mov
mov
mov
jge
jae
or
movb
mov
cmp
xor
cmpsl
cmp
std
mov
mov
popf
jmp
imul
or
repz
or
das
xchg
js
cmp
test
repnz
movsl
imul
dec
or
pop
lcall
inc
adc
into
sub
mov
and
mov
and
out
outsb
dec
cld
movb
test
movsb
aas
adc
xor
fistl
or
idivl
nop
std
int3
out
xchg
loopne
pop
cmp
test
mov
loop
or
scas
push
lcall
mov
jg
xchg
mov
mov
sub
hlt
or
jo
mov
add
push
fidivrs
fstl
fadds
and
sub
iret
pusha
inc
out
test
jmp
add
push
sbb
into
jg
xor
lcall
adcb
lea
popa
push
cmp
sbb
mov
enter
add
mov
fs
les
xchg
push
lret
lock
add
clc
out
cmp
sub
dec
xchg
cs
sub
mov
or
inc
xchg
flds
push
xchg
cmc
leave
xor
in
mov
mov
les
jae
jl
lock
adc
cmp
aam
gs
xchg
pop
iret
daa
xchg
in
cmp
test
dec
fwait
sub
imul
fistl
adc
movsb
cmpb
andl
or
into
aas
lods
iret
xchg
add
mov
repz
jns
nop
push
loop
mov
push
mov
lret
xchg
rorb
pop
ret
sbb
sbb
je
mov
jecxz
out
xor
push
pop
mov
movsl
dec
jmp
xorb
xor
mov
xor
int
enter
daa
cmp
push
pop
ss
cwtl
adc
nop
push
mov
pop
lea
fucom
xchg
mov
aaa
out
imul
mov
dec
xor
cli
pop
adc
pop
jmp
mov
daa
jnp
mov
insb
idivl
orl
inc
inc
imul
das
push
push
mov
sbb
addr16
inc
pop
int
aam
mov
mov
jne
mov
mov
adc
cmp
stc
shrb
pop
outsb
dec
loope
pop
sbb
mov
or
mov
cmp
lcall
mov
shll
ja
or
jb
popf
dec
neg
xor
lds
mov
repnz
je
jo
data16
leave
stos
mov
push
adc
gs
xor
pop
jbe
aad
mov
pop
jecxz
or
mov
push
cltd
lock
fs
insb
push
inc
inc
lahf
orb
sbb
in
cmpsl
xchg
lcall
and
in
lcall
jl
stc
jnp
dec
cmp
shrl
and
stos
mov
cmp
repnz
in
cmp
outsb
repnz
jp
xor
lods
out
mov
inc
mov
lret
hlt
jb
ds
mov
sbb
jge
xchg
mov
movsb
mov
enter
xor
iret
sbb
int
push
fcmovne
adc
aad
lret
xchg
xorl
pop
cmp
mov
dec
push
cmp
ds
xchg
sub
jg
dec
xor
arpl
lahf
jg
loopne
fists
andl
ja
inc
adc
sub
lds
sbb
or
lret
sub
push
in
cwtl
lahf
and
inc
iret
pop
adc
push
fisttpl
dec
jmp
inc
pushf
fdivs
pop
negl
incb
jo
dec
call
cld
and
sub
je
or
xchg
out
mov
fists
inc
daa
fistl
add
fwait
jo
mov
xchg
mov
addb
das
mov
movsl
push
dec
addr16
or
pop
dec
into
dec
ficompl
cmp
dec
hlt
rcll
adc
push
cli
push
inc
and
icebp
popa
mov
mov
in
int3
mov
mov
scas
mov
outsb
push
sub
pop
and
scas
inc
push
dec
pushf
mov
loope
mov
jo
setae
scas
xor
ljmp
arpl
cmp
mov
repnz
pop
add
fisttpl
imul
sub
cmp
sbbl
sbb
adc
jo
repnz
lock
push
lds
addr16
sbb
aad
dec
mov
cmp
pop
jl
pusha
xor
push
fcmovu
lcall
cmp
mov
mov
stos
add
es
mov
out
aam
xchg
cmp
dec
mov
popf
sub
jp
aad
in
add
jecxz
pop
call
mov
cmp
or
xchg
pop
lret
roll
aaa
pop
shrb
adc
cmp
mov
lahf
dec
int
mov
lock
mov
add
pop
sbb
or
push
dec
mov
repnz
mov
je
iret
or
lret
popf
and
push
in
add
dec
cmc
sahf
cmp
xchg
movsl
jmp
lds
in
mov
mov
or
mov
sbb
in
pop
mov
inc
inc
es
inc
sub
and
jl
ja
stos
movsl
lret
push
in
popa
mov
pusha
cltd
and
xchg
or
inc
addr16
pop
push
loopne
xchg
cmpsl
pop
mov
mov
das
mov
lcall
lock
fisttps
lea
pop
xchg
insl
test
sarl
sbbl
or
sbb
sub
shlb
add
mov
in
mov
das
push
add
jp
dec
stos
jecxz
push
pusha
xchg
pop
inc
mov
iret
fdivr
lcall
leave
inc
lcall
cmp
mov
sarl
dec
add
loopne
bound
sub
xchg
jge
push
ja
imul
enter
xchg
jo
inc
sahf
rclb
pushf
lods
sbb
pushf
xchg
fbstp
xor
cmp
arpl
pop
xchg
fwait
push
and
adc
jg
outsl
sbb
test
mov
jnp
cmp
inc
das
add
pop
jg
arpl
lret
sub
jne
xchg
jl
cld
repnz
popf
inc
dec
or
xor
push
jl
out
shl
push
xor
or
les
sahf
aam
ret
adc
mov
fisttpl
inc
xchg
les
fisubl
enter
lds
push
inc
fsts
xchg
cmp
mov
or
movsl
je
or
lds
sub
scas
add
fidivs
stc
and
loope
mov
or
aas
add
mov
addr16
or
cmp
lcall
adc
sub
mov
fists
jnp
shrb
xchg
xor
mov
cmpsl
mov
or
adc
movsb
cmc
adc
xchg
fisubrl
sbb
stc
insb
aas
enter
bound
inc
ret
arpl
dec
xchg
shrb
icebp
outsb
mov
cs
and
scas
pop
roll
adc
rcrb
andb
xchg
mov
xchg
sbb
xor
jmp
push
push
aam
lret
popa
add
push
jg
pop
xor
lcall
pop
or
adc
cmpl
pop
cld
ljmp
mov
dec
pop
cmpsl
rcrb
add
cli
adc
and
add
movaps
xchg
mov
or
inc
xor
sbb
sub
xor
push
inc
mov
int
fs
pop
mov
add
shl
mov
jns
sbb
in
fldenv
xor
out
mov
mov
inc
push
or
scas
dec
ds
std
pop
fdivl
xor
or
push
xchg
add
mov
mov
xchg
or
popf
dec
xchg
dec
dec
inc
jg
fisubrs
xchg
scas
leave
stos
sti
and
mov
sbb
dec
fnstsw
cmc
pusha
fs
dec
mov
inc
pop
std
int3
xorl
sbb
repz
loopne
mov
enter
cmp
addr16
cmc
lea
cmpsb
xchg
lea
sar
xchg
icebp
jbe
repz
adc
jp
mov
pop
aas
test
addl
test
jmp
fcmovnu
imul
mov
lods
cwtl
sar
jns
dec
daa
mov
mov
pop
enter
push
repz
push
rcl
or
dec
sbb
rcrl
sbb
test
or
cmp
test
scas
in
push
fwait
mov
loope
imul
les
or
xor
inc
cwtl
stos
outsl
rol
sub
xchg
xor
out
or
lret
je
cltd
mov
xchg
inc
adc
xchg
cs
insb
add
rcll
mov
jp
outsl
in
add
psubw
repnz
pop
xor
sahf
mov
inc
shrl
test
mov
sub
add
fwait
mov
daa
cmp
inc
test
ljmp
arpl
dec
and
jmp
movsl
sub
movsb
iret
mov
out
jo
mov
jne
fs
pop
sbb
mov
sbb
cli
sub
xor
push
xlat
bound
inc
out
lock
les
popf
push
sub
rolb
addr16
add
inc
mov
pop
inc
popf
fnstsw
jg
cmpsb
adc
mov
lret
sti
aaa
pop
pop
and
lock
pusha
lahf
test
sbb
leave
mov
rclb
pop
pop
push
in
shlb
outsb
popf
lahf
sub
xchg
mov
inc
mov
pop
mov
inc
lock
jbe
jo
gs
xor
sbb
add
mov
mov
pop
mov
sahf
movb
inc
cmp
push
xchg
mov
repz
jp
stos
add
cmc
xor
popf
mov
in
mov
adc
clc
lret
mov
clc
mov
shr
popa
xchg
cmp
adc
outsb
inc
movsb
cltd
sar
clc
xor
or
arpl
and
dec
sti
fwait
into
sbb
xlat
stc
adc
cmp
push
mov
bound
pop
inc
mov
insl
dec
imul
loopne
enter
shr
jle
pop
xchg
dec
jle
into
js
push
jno
movsl
ds
aas
xor
dec
lcall
lds
jl
sub
mov
into
ljmp
mov
cmc
add
dec
es
imul
jo
xorb
imull
fildl
push
sbb
xchg
pop
xchg
jmp
add
notl
je
cmp
bound
jp
mov
dec
xchg
std
repz
pushl
imul
and
fidivrs
inc
mov
jnp
or
mov
or
adc
dec
mov
out
or
jecxz
enter
cld
out
fadd
fs
mov
push
inc
jb
cli
nop
mov
cmc
pop
clc
pop
mov
call
mov
std
and
enter
mov
add
sub
xchg
incb
mov
ss
push
push
adcb
jecxz
out
ja
lods
inc
test
adc
orb
cmpsl
jae
stc
cmp
mulb
push
push
xchg
and
sbbl
xor
cmpsl
dec
sub
inc
xlat
dec
imul
call
jne
jns
xchg
fidivrs
jae
mov
popa
icebp
push
mov
ds
push
xor
pushf
fcomps
roll
out
dec
mov
fnstsw
lods
jae
sbb
ror
mov
out
arpl
loopne
push
sbb
test
mov
and
lret
jbe
bound
pop
sbb
add
pop
mov
push
push
and
xor
or
push
repnz
xchg
pop
pop
pop
ret
test
test
dec
and
cmp
sub
push
outsl
cmp
xchg
push
jg
out
stos
repz
ret
pop
push
or
cltd
push
mov
rorl
fstl
inc
enter
mov
xor
outsl
popa
not
cmc
andb
cmp
aad
push
pushl
fcompl
notl
pop
mov
je
int3
pushf
movsb
lods
pop
dec
jno
lea
mov
sbb
cmc
js
xchg
sarl
cmpsl
mov
xor
xor
pop
int
cmp
popf
fstpt
inc
xchg
les
or
mov
orb
mov
jge
cmc
pop
jecxz
out
adc
ss
or
or
js
cltd
decl
or
enter
adcl
cmp
inc
dec
adc
xor
fdivrl
pusha
sbbl
mov
sub
ficoms
int
xchg
xor
jle
cmc
rcrb
inc
imul
js
jp
fcoms
and
xchg
lds
push
scas
adc
mov
std
aad
in
ror
push
loop
xor
out
shlb
mov
cmpsb
pushf
sbb
nop
inc
sbb
pop
shrl
mov
or
jae
or
mov
and
push
in
adc
mov
arpl
xor
cld
adc
call
sub
inc
sub
and
fdivrl
cld
mov
mov
aas
in
mov
and
pop
push
or
dec
sahf
mov
xchg
je
ja
pop
icebp
push
jnp
arpl
cwtl
ja
jp
and
adc
push
or
mov
mov
icebp
mov
or
popa
stos
xchg
call
dec
pop
sub
insl
or
stc
ds
pop
xor
cmp
inc
and
mov
dec
cltd
add
jecxz
push
int3
push
adc
cmp
xchg
mov
outsb
cli
push
inc
push
rolb
fldt
mov
adc
mov
push
or
sbb
stc
jmp
fwait
negb
and
shlb
xchg
sbb
pop
and
cmp
push
push
out
or
repnz
mov
leave
rorl
jnp
rolb
sbb
xchg
loope
mov
add
aad
mov
outsl
jp
movsb
and
movsl
adc
stos
lret
add
inc
cmp
addr16
sahf
or
pop
sbb
je
cwtl
and
scas
or
mov
adc
pop
add
sbbl
js
or
push
xor
dec
sbb
or
jg
es
and
std
notb
jmp
dec
cmp
aaa
mov
out
xor
mov
xor
ds
sti
out
int
andl
jbe
fistl
xor
pop
test
sub
add
fsubr
xor
pop
mov
repnz
mov
pop
dec
dec
mov
nop
lock
jp
in
aad
lods
mov
inc
test
dec
and
gs
push
push
insb
test
push
popa
subb
pushf
pushf
mov
inc
mov
dec
adc
push
cwtl
insb
push
div
daa
cld
stos
rorb
mov
xorb
loop
cltd
cmp
sub
sbb
scas
addr16
jl
lahf
aam
jle
shrl
add
scas
lret
fcmovb
in
pusha
aam
ss
js
mov
outsb
ret
popf
in
fadd
adc
cmp
jge
mov
loope
dec
add
shr
je
xchg
adc
js
pop
loop
or
and
mov
xchg
out
fbstp
test
aas
sbb
in
lock
and
or
push
sar
aad
sarl
mov
shlb
int3
ds
pop
in
scas
lahf
negb
pop
sbb
xor
add
add
inc
push
adc
fistpl
push
jge
pop
pushl
jle
imul
xchg
test
int
add
adc
incl
ret
mov
mov
xchg
jo
or
jl
cltd
jns
stc
bound
sub
pusha
rclb
mov
ret
mov
jb
pop
jp
lds
adc
xor
outsb
scas
imul
cmp
lret
pop
into
and
xor
aam
inc
push
sti
inc
pop
test
xchg
xor
mov
into
jno
adc
push
shr
jo
lcall
adc
out
xor
pop
pusha
fadd
int
mov
sti
mov
adc
sbb
xchg
or
aaa
sub
adc
pusha
push
int
mov
or
adc
adc
les
out
add
mov
xlat
rcrb
int3
jp
das
scas
mov
cmp
add
je
popa
xor
mov
repnz
das
mov
aam
xor
pusha
fidivrl
sbb
scas
push
mov
imulb
fistps
hlt
mov
jnp
pop
mov
mov
adc
mov
jne
adcb
cwtl
sti
insb
jge
in
push
jle
add
xor
mov
pop
add
sub
mov
mov
fs
dec
add
fwait
adc
ret
sbb
mov
iret
dec
xchg
into
dec
dec
or
adc
mov
cmp
outsb
hlt
loop
addr16
call
mov
test
mov
sbb
add
sub
xor
insb
xorb
push
xorb
add
jnp,pn
mov
sbb
mov
push
jae
jns
gs
xor
in
xchg
xorb
mov
lret
xor
call
adc
sub
or
out
xchg
ss
fmull
add
out
mov
xlat
enter
cmp
out
bound
cs
lret
lahf
and
lret
pop
ljmp
xchg
icebp
outsb
call
dec
pop
sbb
bound
lea
aaa
out
iret
xchg
jae
mov
mov
mov
or
push
cli
mov
sub
js
stos
mov
daa
sub
lcall
or
out
xor
aad
xor
pusha
push
aaa
dec
mov
cmp
sub
push
jns
dec
gs
inc
push
dec
test
and
and
negl
mov
mov
xchg
push
mov
cmp
stos
cmpsl
add
sbb
sbb
dec
mov
cmp
mov
decb
mov
inc
sub
rcl
aam
push
mov
std
negl
mov
dec
add
int
sbb
aas
mov
mov
push
xchg
push
sti
negb
rdpmc
inc
xadd
aas
js
pop
jmp
inc
xor
sub
xor
ds
cmp
mov
mov
push
xchg
lods
repz
stos
xchg
pop
pushl
in
mov
add
loop
lret
enter
inc
daa
dec
cmpsl
push
pop
enter
cs
mov
shl
arpl
stc
and
daa
cmp
fwait
xor
pop
pop
insl
insb
or
sahf
xor
pop
add
mov
mov
test
cmp
idivl
add
movsl
mov
daa
shll
sub
jle
shrl
pop
push
or
push
mov
loopne
out
cmp
and
and
inc
aam
mov
mov
lret
fmull
fldcw
lret
inc
hlt
stos
test
lock
popf
push
add
mov
pop
or
xor
cs
xor
push
outsl
or
fiadds
test
iret
in
mov
adc
sahf
dec
test
mov
or
dec
into
test
popa
dec
pop
repnz
jle
ret
jmp
repz
mov
hlt
adc
pusha
or
out
outsl
fstpl
dec
stos
jo
imul
pop
jg
mov
inc
mov
loop
pop
add
sti
jno
xlat
sub
stc
into
push
pusha
mov
cli
cltd
sahf
fs
in
push
sub
or
lods
clc
push
test
dec
adc
mov
iret
sub
mov
and
sub
andl
aas
jmp
cmp
push
outsb
dec
pop
push
in
outsb
push
notl
dec
hlt
pop
mov
insb
push
dec
into
ss
les
sbb
xchg
rcl
aad
fiaddl
adc
push
ret
loopne
in
out
jle
je
out
xor
xchg
mov
cmc
cli
mov
mov
and
rcll
outsb
mov
into
mov
jo
push
xor
insl
sub
rcrl
shll
cwtl
or
dec
mov
cwtl
sbb
lods
cmp
lods
jbe
std
lretw
pop
xlat
add
imul
and
xor
orb
mov
outsb
inc
adc
pop
movsl
cmpsl
stc
mov
cmp
test
dec
fwait
aam
xor
cmpsl
mov
mov
jbe
jno
into
movsb
jmp
fidivrl
pop
js
push
mov
pop
pop
or
test
mov
cwtl
mov
sub
mov
fstpt
push
sbb
inc
add
sub
xchg
out
mov
dec
cmpsb
jecxz
bswap
mov
lret
aam
in
sub
mov
add
arpl
jge
mov
xor
mov
mov
iret
je
lods
pop
pusha
std
cmp
insl
scas
popf
adc
push
addr16
cltd
push
clc
cmp
icebp
popa
jmp
bound
mov
ds
imul
leave
jp
insb
idivb
hlt
mov
stos
inc
test
fbstp
and
fnsave
aas
dec
cs
test
arpl
push
fidivrl
and
mov
or
loop
xor
inc
add
dec
sub
mov
aas
stc
jecxz
jno
mov
sbb
add
movsl
subl
dec
shl
aas
sbb
dec
adc
pop
testb
cwtl
daa
mov
in
sub
inc
jg
aam
nop
fcomip
stos
mov
push
jecxz
adc
cltd
jle
cltd
xchg
ds
aas
mov
addr16
sbb
pushf
mov
gs
xorb
pop
jnp
hlt
jno
fists
or
xchg
dec
push
inc
jg
sub
xor
outsb
pop
mov
std
stc
icebp
cmp
lret
add
or
leave
push
notb
mov
rorl
jge
mov
subb
sarl
leave
add
iret
push
sbb
dec
sbb
xor
inc
clc
dec
xchg
popa
aad
inc
aas
sub
addr16
in
push
data16
dec
inc
mov
pop
popl
push
mov
or
cmpsb
jmp
adc
fnstsw
subb
jg
stos
jb
sbb
mov
gs
rorb
nop
std
mull
aam
loope
popw
adc
jmp
out
dec
fwait
pop
mov
loop
jae
push
pop
add
outsl
les
ds
subb
pop
fs
adc
mov
into
mov
adc
ret
fdivrs
call
in
lock
mov
pop
jo
mov
movsl
jp
insl
mov
mov
mov
outsl
lds
and
enter
and
sub
adc
pushf
test
mov
mov
jne
sub
inc
mov
mov
pop
loop
sbb
lea
mov
enter
adcb
xchg
xor
jae
outsb
dec
inc
stos
inc
jnp
roll
repnz
arpl
inc
loop
and
cmpsb
push
sub
fld
mov
mov
icebp
in
xor
and
sub
sbb
sbb
add
adc
jge
pop
test
mov
or
mov
and
outsl
lret
push
adc
xchg
xchg
gs
mov
mov
outsl
aas
jbe
ds
and
xchg
xchg
mov
xor
pop
pop
mov
mov
xor
add
pop
lods
ret
push
xor
pop
xchg
ja
lods
fstpt
ret
outsb
iret
inc
scas
xor
adc
dec
rol
stos
or
or
aad
fadds
add
ret
lret
mov
call
mov
or
lds
shlb
xor
cmc
and
inc
adcb
sub
scas
push
das
scas
mov
popf
lods
pop
repnz
aad
test
bound
and
sti
sarb
idivb
or
scas
xor
jecxz
clc
push
cmp
adc
ds
cltd
or
fs
das
sbb
out
imul
sub
arpl
push
or
mov
cmpsl
negb
cmp
mov
outsb
fdivrl
stc
pop
aam
inc
stc
inc
adc
cmp
adc
jg
cli
xchg
mov
mov
enter
jno
mov
cmp
lahf
inc
ja
jns
sbb
dec
xchg
cmpsb
pushf
cmp
cmc
push
fsubrl
lock
mov
hlt
sub
jp
mov
jae
cs
fcompl
loope
popf
sub
cmpl
dec
xor
push
js
jne
das
ds
mov
in
arpl
cmp
xchg
mov
push
lahf
cmpsb
pop
pusha
call
pop
sahf
mov
fs
mov
dec
jp
mov
int
enter
std
add
repnz
int
scas
cld
xchg
fimull
jae
lods
ret
jnp
mov
es
sub
cld
xor
inc
sub
or
xchg
cmp
add
scas
sbb
cmp
dec
mov
fs
lds
jnp
push
jb
adc
aaa
mov
xor
in
mov
cmp
pop
repnz
lock
inc
sub
pop
or
into
pop
jnp
push
lea
add
mov
icebp
and
call
xor
mov
inc
les
cmp
mov
pop
cld
repnz
and
jns
or
push
adc
ss
jg
movsb
fildll
cmp
and
add
pop
out
aam
dec
popf
divl
adc
mov
xchg
jp
aas
enter
adc
mov
and
shlb
inc
push
loop
sub
adc
push
cmp
pop
test
outsb
loopne
and
push
mov
hlt
inc
dec
bnd
dec
sarl
sbb
mov
jbe
les
mov
ds
in
xor
pop
fisubrs
rorl
and
in
jns
add
test
jb
or
inc
insb
lods
xlat
cmp
dec
xor
add
stc
push
sar
mov
push
mov
neg
lcall
andl
cld
push
shl
sti
inc
sbb
xor
cmpsb
inc
and
dec
adc
jo
rcll
pop
pusha
scas
xor
pusha
push
mov
inc
jp
inc
push
pusha
lock
dec
dec
mov
pop
cli
into
imul
cli
push
leave
lock
jg
mov
pop
iret
mov
push
iret
lret
arpl
das
test
in
dec
xchg
pop
or
pop
pushw
inc
cwtl
jecxz
add
cmpsb
fwait
xchg
les
dec
je
cltd
cmp
jg
sub
jmp
dec
mov
and
int
loope
call
pusha
out
sahf
sub
mov
and
stos
fmuls
into
mov
add
mov
into
jle
addr16
sbb
inc
addr16
fnstcw
movsl
fisubrl
mov
push
dec
jp
jns
dec
xor
outsb
pop
test
adc
pop
pop
cld
out
lods
mov
rclb
das
sbb
dec
jne
pushl
cmc
out
adc
loope
iret
inc
addr16
iret
lret
das
mov
leave
int3
lds
push
sub
cmpsb
lret
mov
cmp
clc
cli
add
pop
shrb
leave
popl
in
jecxz
fwait
adc
adc
int3
jo
add
inc
sbb
out
lea
push
mov
int
test
xor
dec
and
mov
cmpsl
insl
add
cmc
pop
and
pop
push
mov
repnz
test
and
jle
loop
cmp
out
fdivl
imul
outsb
or
sub
jns
jle
sbbb
andl
inc
outsl
sbb
rorl
lods
mov
scas
test
or
notl
lret
ja
adc
fisttpll
hlt
int3
loop
cwtl
lods
sbb
or
jnp
xlat
repz
in
dec
out
jbe
aaa
jno
xlat
inc
push
pop
insb
dec
aas
rcl
fstp
or
out
cld
push
and
adc
dec
add
mov
add
jns
sbb
inc
sub
popa
rcr
shll
sbb
sub
lods
and
mov
cli
push
mov
adc
mov
pop
dec
ss
pop
jno
push
pushf
jge
inc
jl
in
sbb
push
xor
jmp
leave
sub
psubw
sbb
adc
test
fwait
adc
iret
data16
lods
bound
cmpsb
js
in
pop
rcl
sub
jb
mov
loope
mov
hlt
sbb
ja
cltd
cmp
xchg
into
mov
lcall
sub
push
out
jp
push
cmp
test
xor
dec
mov
inc
push
xor
movsl
movsl
cwtl
xchg
cld
aaa
hlt
mov
test
ret
imulb
jle
fistps
and
pop
lahf
fisubrs
pushf
pop
pusha
lods
sahf
or
daa
xchg
jne
xchg
jl
add
adc
cmovp
cmpsl
clc
and
cmp
lods
jo
push
mov
ljmp
clc
dec
bound
push
out
xchg
xchg
mov
sub
enter
cwtl
sbb
sub
sub
xchg
jmp
idivl
jbe
cmp
push
cmp
adc
inc
aam
int
push
push
pop
and
imul
pop
gs
fisubs
cli
push
sbb
test
lods
fwait
pop
int3
push
add
sbb
mov
adc
mov
sbb
sahf
pop
add
jb
mov
outsl
jb
addr16
ja
sbb
fldl2t
jge
pop
jnp
and
cli
pushf
cmc
inc
add
loop
shl
or
jne
inc
in
or
pop
or
add
mov
mov
cmp
push
call
loopne
jl
xor
add
iret
fisubrs
int
cmc
fstps
sub
dec
nop
arpl
pop
sub
lret
jno
sub
xor
leave
xor
negb
sub
movsb
flds
loope
cs
add
inc
pop
loopne
test
fwait
or
mov
stos
sub
cli
loop
test
adc
icebp
fdivr
mov
cmp
je
xchg
and
inc
adc
sbb
pop
int3
jae
dec
jne
fbstp
outsb
in
and
and
fstps
xor
push
xchg
enter
or
lds
test
sbb
test
sar
std
loope
adc
in
outsb
out
outsb
pop
popf
clc
mov
lds
fadds
scas
xchg
inc
mov
es
lock
je
imull
into
add
repz
push
add
sub
in
sub
push
jg
fsubrs
jle
ret
fwait
cmp
lock
pop
pushf
movsb
adc
xchg
outsl
push
je
lds
or
in
or
int
inc
jnp
jno
rorl
inc
popa
jecxz
xchg
mov
mov
hlt
sti
mov
out
xorb
pusha
jmp
mov
jl
cmp
sub
add
sbb
push
leave
ffree
dec
sbb
sub
fidivrl
pop
loop
inc
mov
fcmove
pushf
stos
nop
or
pop
rcr
xchg
add
stos
movsb
mov
mov
push
lea
call
fwait
sbb
push
xor
mull
lea
cmpsl
or
push
mov
lods
ret
testb
jp
repnz
mov
xchg
arpl
adc
addr16
pop
xchg
mov
mov
cmc
jge
outsl
popf
xchg
jne
inc
dec
fcmovnu
cmp
add
daa
jl
cmp
xor
outsl
push
idivl
cmp
jo
sbb
sahf
out
cmpl
xchg
cmp
and
das
outsl
int3
pop
jmp
cli
sub
je,pt
insb
mov
push
push
test
jmp
sahf
cmp
iret
inc
lock
lcall
mov
dec
mov
call
and
out
test
stc
ljmp
test
lea
sub
jne
je
daa
dec
test
or
push
push
mov
add
gs
xchg
mov
xor
leave
dec
or
aad
fnstsw
in
stos
xor
ja
pushf
mov
mov
push
cmpsl
cld
icebp
shll
leave
insb
xchg
movsl
shrl
aaa
mov
adc
ja
cmp
inc
and
xchg
fsubp
shrl
test
cmp
test
pop
pushf
stc
jle
mov
and
outsb
and
aaa
inc
orl
sub
in
in
pop
in
push
jnp,pn
mov
cmp
sti
cld
xchg
mov
mov
xor
cmpsb
lret
xor
mov
and
add
pop
mov
mov
call
or
pop
xlat
pop
stos
fstpl
adc
cmp
mov
decb
pusha
lret
arpl
test
jle
andl
iret
jae
cmpl
out
dec
shrb
jae
cwtl
inc
mov
subl
pop
jmp
jo
xor
inc
rcl
dec
aas
inc
xchg
and
jge
aam
and
inc
fwait
data16
aas
lahf
popf
inc
clc
pop
sbb
test
sbb
mov
insl
out
call
addb
pop
mov
andb
dec
sub
mov
and
out
pop
jnp
mov
push
xor
aas
addb
push
stos
or
idivl
test
outsl
test
mov
or
sub
or
push
xchg
sub
mov
shl
dec
gs
xchg
push
loope
aas
push
sub
and
xchg
mov
mov
cmp
andl
lods
add
enter
out
push
mov
js
stc
loope
adc
sub
inc
and
push
dec
mov
sbb
out
cld
call
lds
rcr
fwait
push
insb
dec
fnsave
mov
mov
dec
repnz
dec
mov
mov
inc
mov
mov
jae
inc
in
inc
int
aaa
scas
in
xchg
ss
xchg
sbb
jb
push
es
lahf
mov
jge
cmp
aam
icebp
sub
aas
push
xor
mov
pop
aam
cmp
cmp
dec
pop
add
mov
dec
stos
jns
dec
cli
pop
mov
cmpsl
movsl
mov
fsubs
mov
movsb
mov
pusha
xlat
out
and
xlat
js
int
pop
sbbb
mov
and
lods
cmp
sbb
lret
in
adc
sub
jge
xor
imul
dec
into
test
jbe
movsl
sbb
shlb
adc
jg
adc
mov
test
js
mov
lock
fisttpl
or
scas
les
cmp
pop
std
pop
mov
cli
push
nop
pop
es
jmp
out
in
xchg
sub
xor
pop
std
push
xlat
mov
into
repz
jne
cmp
push
mov
lods
jae
fdivp
lret
sbb
ljmp
fidivrl
daa
popa
or
jmp
aaa
rcll
mov
mov
sub
insl
addb
xchg
dec
or
adc
fwait
and
push
aaa
sub
pop
and
push
dec
rcll
or
push
dec
daa
int3
dec
in
xor
outsb
xor
xor
scas
xchg
outsb
jnp
ja
decb
je
jg
fsts
cmp
sbb
jge
sbb
sar
pusha
arpl
addr16
xchg
lods
cmc
jg
subb
insb
notl
dec
pop
es
cmp
pop
ss
pop
loopne
rol
sub
pop
mov
arpl
repz
xchg
mov
mov
dec
aam
aaa
push
stos
adc
and
fcompl
sahf
jp
cmpsb
mov
in
aas
sti
mov
mov
mov
push
notl
add
inc
imul
into
sub
inc
pop
in
add
mov
xor
mov
scas
aas
adc
test
cli
adc
mov
movsl
clc
addr16
and
inc
subb
lds
test
pop
les
mov
fbstp
sbb
stos
lods
ret
jp
cmp
sbb
add
imul
adc
rcrl
pop
pop
rep
push
in
xor
les
lods
lret
lds
in
rcll
cwtl
lret
jmp
sbb
mov
arpl
orb
dec
push
sbb
loopne
loopne
xchg
fistpll
inc
in
jmp
fcomip
or
xchg
xchg
lret
lret
imul
fdivrl
cli
shlb
xchg
inc
mov
out
mov
sbb
aas
mov
dec
mov
xor
jns
jecxz
push
scas
xchg
adc
mov
loope
cmpsl
jb
add
xchg
enter
push
dec
daa
jns
cmp
jns
push
and
xor
cs
out
scas
das
adc
lock
cmp
pop
pop
push
ror
cs
scas
push
shr
push
shrl
push
lcall
push
fcompl
lds
or
jne
jle
gs
fwait
xor
test
ret
dec
loopne
cmpsb
jle
mov
jg
dec
sub
sbb
adc
cli
lds
adc
pop
jp
imul
adc
sub
xor
movsb
and
mov
aas
test
push
pop
out
outsb
in
outsl
push
dec
lret
ret
icebp
enter
lret
in
sub
jno
push
sbb
int
mov
shrb
cwtl
cmpsl
in
andl
pusha
xchg
dec
insb
adc
fmulp
push
jbe
mov
dec
push
loopne
aam
dec
stos
scas
jl
fisubl
dec
push
dec
out
mov
ret
outsb
pop
icebp
inc
jmp
js
mov
scas
sub
fiaddl
es
rcll
jmp
adc
and
xor
sti
xor
push
mov
shrl
enter
shl
cs
dec
push
inc
fistps
out
mov
dec
rcrb
aas
addr16
push
push
addr16
xchg
push
push
rorl
test
inc
inc
mov
mov
mov
jmp
stos
push
and
sbb
stc
push
push
sbb
std
jmp
stc
mov
xchg
out
lret
add
in
cmc
cmp
mov
outsl
pop
sub
fstpt
mov
shll
jmp
mov
enter
in
fdivrs
and
nop
adc
push
pop
pop
test
mov
dec
outsb
sbb
imul
sbb
push
and
js
dec
aas
sbb
ror
xor
icebp
adc
imul
or
gs
or
jo
jbe
push
shl
push
pop
in
mov
sub
xchg
jle
jle
mov
xchg
or
cltd
loop
test
cmpsb
dec
sub
inc
mov
xchg
push
loope
outsl
xchg
inc
cmp
das
call
push
push
mov
xchg
icebp
jp
push
jo
adcl
loope
jo
jp
aad
insl
xor
xchg
mov
cmp
jmp
cmp
inc
sbb
push
aam
out
push
mov
mov
push
adc
adc
inc
add
inc
mov
outsb
shll
stos
push
das
xchg
sbb
ret
movsb
cmpsl
lcall
push
rolb
loope
shl
daa
jae
push
mov
enter
lods
fcomps
aaa
push
imul
sti
adc
cmp
lods
ret
mov
pop
xchg
mov
cli
xor
jg
hlt
lcall
add
push
xchg
add
je
jmp
push
pop
and
sbb
cmp
mov
das
mov
sbb
push
and
aas
int3
sbb
dec
js
js
stos
jnp
mov
fldt
inc
jecxz
insl
xchg
ljmp
inc
je
mov
dec
jge
push
add
mov
loope
cmp
fdivrp
cwtl
std
pusha
mov
push
fdivrs
pop
add
loope
sbb
int3
pop
nop
pop
vmread
rorb
mov
push
fwait
add
testb
xchg
pop
sbb
imul
andl
mov
push
fimull
out
sbb
jnp
pop
stos
sbb
aas
push
cmpsb
adc
adc
add
adc
jnp
scas
jnp
stc
jp
dec
sub
dec
popa
shrl
sub
out
stos
xchg
mov
jecxz
shll
dec
inc
ficoml
xchg
je
test
sub
out
shll
mov
ds
adc
stos
cmpsb
iret
shll
jmp
adc
icebp
bsr
scas
xchg
push
push
and
mov
mov
dec
xor
xor
nop
mov
or
inc
lea
mov
cmc
lret
fdiv
mov
push
xor
mov
ljmp
pop
int
bound
es
xlat
fistl
mov
jmp
imul
dec
std
ret
pop
fwait
pop
cmp
dec
out
and
das
cmp
cmp
jae
xchg
into
lea
movsb
out
fldcw
stc
bound
sbb
mov
mov
shlb
cltd
test
sti
push
and
lock
aad
mov
js
and
jno
pop
insl
xor
xor
add
mov
jmp
je
sarl
mov
sbb
mov
jmp
sbb
outsl
jecxz
ret
enter
fcom
arpl
add
dec
test
mov
lock
xchg
test
mov
ljmp
inc
or
stos
lret
push
or
push
mov
loop
xor
lock
sub
and
cmove
rol
pop
fcoml
scas
jge
fwait
sub
jo
xor
add
push
adc
adc
mov
xchg
test
aam
fwait
ret
sahf
lods
xor
push
scas
lods
sarb
sbb
cmpsl
inc
popa
mov
add
es
cmc
lret
fucom
push
or
jmp
dec
pop
int3
bound
out
adc
sbb
cmp
xchg
mov
xor
arpl
adc
jg
iret
jno
fstl
sub
jnp
mov
out
scas
dec
push
call
sub
and
and
xlat
xor
scas
rcrl
push
lcall
mov
cmp
rclb
mov
sub
in
xchg
adc
push
stos
push
aam
jge
xor
xchg
cmp
and
add
sbb
inc
je
adc
rcll
sub
pop
jno
jbe
insl
push
or
xchg
push
iret
mov
stc
sbb
fs
in
lret
adc
fmull
movsb
pushf
jo
fldcw
imul
mov
insb
ffreep
dec
popa
inc
sub
push
lea
dec
addr16
mov
push
push
lahf
out
jbe
test
mov
jmp
addl
mov
dec
xchg
pop
lods
fidivl
stos
xchg
std
fdiv
jbe
pop
lds
nop
enter
out
sub
dec
scas
jae
xchg
lret
xchg
movsb
sbb
movsb
jg
into
push
out
aaa
or
push
loope
inc
addl
adc
push
or
cld
cmp
lret
test
and
scas
lret
mov
xorl
pusha
xchg
nop
sbb
lods
jmp
les
dec
pop
popf
jecxz
jnp
xchg
dec
xor
ljmp
aas
push
cmc
adc
push
mov
push
dec
in
cmp
mov
rcll
mov
ja
or
sbb
popa
imul
jae
xor
and
adc
push
jge
mov
out
mov
mov
pop
lods
xor
int3
pop
sbb
sarb
dec
pop
movsb
sub
xchg
lahf
mov
mov
mov
jo
jnp
push
loop
in
mov
jg
into
ds
mov
dec
aas
shrl
inc
ret
push
sbb
jmp
or
xchg
adcb
mov
push
ss
mov
cltd
std
sbb
notl
pop
shl
lods
out
xchg
stos
pop
sub
stos
sub
cmp
lcall
mov
inc
clc
js
scas
adc
das
and
push
mov
sbbb
aas
push
cltd
stos
xchg
movsb
roll
jp
cmp
fwait
lcall
jge
adc
lcall
ret
pop
pop
dec
cmc
inc
dec
popa
push
mov
aas
sarl
adcw
add
mov
in
jbe
es
dec
test
addb
and
inc
cmp
std
test
mov
pusha
push
sub
stc
jl
mov
lcall
push
mov
xchg
add
mov
lods
lcall
inc
pop
mov
or
dec
rolb
dec
pop
aam
enter
lret
push
mov
lods
idivl
test
xlat
push
and
and
and
lods
fidivl
push
push
jns
sbb
andb
fisttpll
cmp
mov
sub
add
int3
fs
fs
int
inc
or
dec
ret
mov
bound
les
inc
je
mov
rorl
mov
stc
jg
lods
jmp
and
pop
push
mov
orl
adc
adc
or
mov
mov
subb
xchg
mov
fs
mov
xlat
xchg
and
and
jmp
xor
mov
out
jne
mov
push
mov
inc
insl
test
jge
out
mov
popa
dec
dec
xchg
in
cmpsl
out
pop
xor
sti
into
or
scas
dec
lret
pop
sbb
out
xchg
decb
outsl
rcrb
adc
dec
rclb
sar
sti
test
repz
rorl
out
call
lcall
pop
movsb
pop
mov
mov
inc
cs
into
and
and
xorl
stc
cltd
ss
stos
arpl
pop
repz
negb
outsb
jmp
xor
jnp
imul
lea
mov
xchg
lret
xchg
jge
sub
xlat
dec
sbb
jb
xor
ret
ja
mov
and
jg
cli
repnz
xor
leave
lods
mov
xchg
dec
jmp
sbbb
cmc
dec
daa
popl
int
out
push
rolb
mov
out
xchg
push
jg
cmp
mov
sbb
xchg
cmc
or
leave
sbbb
jmp
dec
fmull
pop
cmp
lcall
sbb
inc
or
and
inc
sahf
je
cld
xor
arpl
or
jge
lahf
fstps
add
iret
pop
lret
mov
mov
dec
aad
add
sbb
jle
jno
or
pushf
jg
shll
loope
jmp
add
into
addl
aam
fisubrl
aaa
lretw
mov
jno
jb
pop
push
pop
or
and
mov
jl
xchg
lods
movsb
sub
xor
aam
mov
xchg
repz
test
ror
fsubrs
dec
les
mul
mov
scas
sub
mov
inc
pop
aaa
push
cmp
fwait
shll
std
and
orl
ret
ret
and
or
lock
jnp
xor
pushf
xor
add
dec
xor
rol
arpl
or
mov
clc
scas
cmp
lods
jge
jge
push
push
scas
or
mov
sub
jno
and
dec
cltd
ret
add
add
call
xor
clc
push
lods
aad
pop
mov
in
stc
push
adc
sub
rcr
sub
cmp
out
lea
std
sub
mov
in
mov
or
clc
xchg
cmp
xor
aad
icebp
sbb
pusha
jle
test
addb
dec
aaa
push
mov
movq
imul
inc
pop
pop
mov
mov
cmp
adc
jno
xchg
jae
cmc
pop
movsl
ds
mov
mov
stc
js
out
leave
ret
scas
mov
scas
hlt
neg
pop
adc
mov
mov
mov
cs
pop
mov
dec
movsl
adc
negl
push
mov
inc
fs
or
mov
push
mov
add
jno
rolb
adc
hlt
nop
fdivs
js
and
lcall
cmp
cmp
mov
imull
outsl
sbb
arpl
lret
pop
idivl
ljmp
xor
test
fldenv
sbb
xor
stos
jbe
xor
push
dec
pop
mov
outsl
outsb
int3
or
xor
fisttps
push
outsl
jns
rcll
jp
push
sbb
and
jmp
imul
or
xor
mov
inc
dec
lcall
cs
jo
sar
lods
push
push
jl
jmp
outsb
xchg
pop
scas
mov
adc
push
cmp
pop
push
mov
loope
rcrb
sub
inc
lds
push
dec
cli
cmpl
cmp
xchg
push
popw
pop
jle
cmp
divb
pop
push
add
es
cmpb
nop
es
jl
xchg
aaa
push
orb
sub
xchg
movsb
add
adc
mov
sbb
push
push
cmpsb
adc
int3
pusha
out
jmp
mov
push
inc
insl
and
mov
call
iret
and
addb
out
inc
jne
mov
lock
xchg
push
addb
aad
mov
xchg
ja
add
sbb
xchg
jl
shr
cmp
lods
jno
push
xchg
stos
inc
push
push
or
frstor
mov
rolb
sbb
inc
sbbb
or
mov
out
stos
fisubs
stos
pop
int
push
sbb
push
pop
dec
pop
rcll
xchg
and
jge
mov
mov
popf
lds
subb
popf
sub
and
aam
adcb
cmp
test
pop
add
xor
lahf
mov
cmp
test
int3
inc
lock
out
add
loopne
pop
pop
jp
sub
add
cmc
xchg
mov
push
pushf
aas
pop
push
mov
lret
rorl
sahf
cmp
es
scas
xchg
pop
mov
les
sub
inc
pop
into
lcall
pop
or
ret
inc
pop
je
dec
outsb
roll
daa
dec
icebp
cltd
xlat
and
dec
cmp
test
sub
test
inc
pop
shr
pop
jg
cmp
lds
std
mov
les
popf
lret
push
lds
sbb
xlat
jecxz
add
fmul
and
or
push
lcall
mov
aaa
pop
add
add
mov
add
stos
xchg
shll
outsl
sub
filds
or
inc
sbb
dec
mov
pusha
push
test
cmp
jae
je
cwtl
out
cltd
cmpl
jecxz
pop
nop
or
and
les
xchg
sub
fisubrs
out
inc
xchg
mov
jge
orb
jne
aaa
icebp
and
pop
mov
and
addr16
and
hlt
outsl
xchg
sti
cmp
dec
adc
and
mov
push
and
jp
pop
cmc
mov
push
push
orb
cmp
lods
cwtl
aas
cwtl
mov
dec
cmp
cmpsb
ret
inc
lock
stc
push
out
fucomip
into
hlt
iret
les
mov
push
repnz
in
aaa
cmp
pop
sbb
and
mov
cwtl
push
lahf
or
mov
pop
in
mov
mov
cmpsl
sarl
add
push
popl
add
mov
shr
stos
rclb
xlat
xchg
ljmp
pop
lcall
or
xchg
aad
xchg
push
movsb
mov
push
pop
nop
das
lret
ds
inc
add
das
fbld
lds
and
out
arpl
mov
out
xor
xchg
into
inc
mov
mov
adc
xchg
xchg
xchg
aam
xchg
xorl
icebp
mov
rcll
push
mov
inc
enter
sbb
insl
mov
aam
dec
push
or
in
cmp
orb
dec
aaa
insb
cmpsb
stos
pop
mov
pop
adcl
fcmove
and
push
iret
lds
in
mov
add
cltd
add
cmpsl
enter
cld
repnz
jnp
shll
fbld
sbb
mov
bound
ja
or
xchg
or
outsb
mov
cmpsb
xor
arpl
cmp
mov
loopne
nop
pop
jge
inc
cmpsl
imul
lcall
dec
sub
jo
cmpsl
pop
sbb
insl
push
xor
fisttpll
lea
inc
mov
mov
sub
sti
jne
subb
push
nop
dec
push
jp
push
lret
jle
out
pusha
cmp
inc
mov
lods
mov
push
push
xchg
or
test
add
xchg
aas
xchg
imul
mov
push
in
mov
or
nop
xor
mov
scas
sti
cmp
push
in
je
arpl
mov
dec
inc
lods
fisubrs
mov
stc
in
lock
jbe
xor
daa
roll
and
in
mov
inc
mov
cmp
mov
arpl
push
pop
rcll
icebp
mov
repnz
xchg
cld
repnz
push
adc
xor
dec
fstl
and
xor
lods
xchg
mov
sahf
test
mov
jns
jp
mov
lds
push
mov
imul
cs
aaa
aad
or
xor
add
subl
cmp
cwtl
test
and
sub
and
or
mov
je
lea
pop
adc
enter
in
fabs
mov
xchg
and
adc
aas
mov
fildll
rcll
insb
mov
ds
fmul
fmulp
movsl
push
pop
adc
hlt
gs
sub
mov
jg
addl
out
xchg
sub
mov
dec
je
jb
bound
fists
pop
lods
push
test
cmpsl
jnp
cmp
cmp
push
dec
mov
adc
imul
lcall
jp
sub
add
inc
clc
mov
push
aaa
push
pop
cltd
mov
cli
mov
xorb
je
outsl
inc
shll
jl
lock
in
loope
fbstp
or
mov
sahf
gs
je
pushf
iret
mov
mov
cmp
add
icebp
lret
sbb
mov
enter
cltd
pop
cmc
add
and
cwtl
lods
jl
xor
repz
ficoms
inc
mov
fs
les
cmp
dec
cmp
xchg
das
xchg
xchg
stos
sub
push
nop
aad
mov
fs
mov
aas
mov
push
test
aam
xorl
into
mov
ss
ja
repz
pop
add
mov
mov
push
loop
pop
jle
ss
and
stos
sbb
bound
inc
or
xchg
es
xchg
xchg
inc
xchg
ja
aad
in
enter
adc
push
into
pop
int
sbb
pop
jo
mov
shl
mov
dec
add
and
sub
mov
dec
cmp
xor
cmpsb
out
and
cmp
mov
sbb
push
test
pop
or
sbb
fwait
ret
mov
stos
jl
es
xor
outsb
sbb
in
dec
imul
popa
jmp
sbb
inc
shll
nop
xor
and
cmpsl
jmp
sbb
fs
sub
dec
push
inc
jl
xor
sub
fisttps
std
or
jnp
xor
ja
insb
mov
or
dec
pop
and
or
cwtl
dec
push
jno
adc
pushf
test
jecxz
pop
das
lock
xlat
and
add
or
sti
push
jbe
mov
int3
cmpb
fsubs
popa
xchg
es
or
adc
sbb
imul
imul
xchg
lahf
dec
outsl
ret
inc
std
mov
xchg
jmp
in
cmp
push
cmp
hlt
add
test
sub
cld
cmp
pop
sbb
test
pop
insb
pop
in
repz
dec
pop
sahf
iret
ret
mov
pop
pop
gs
repnz
nop
cmp
push
rorb
movsl
faddl
cmp
or
and
push
xlat
xlat
mov
popa
lock
or
mov
cmp
leave
ficoms
pop
dec
mov
imul
xchg
dec
popf
mov
je
dec
mov
dec
xchg
cltd
pop
imul
out
mov
popa
cmpxchg
mov
subb
jo
jg
fs
out
fcompl
andl
dec
outsb
mov
pop
jnp
mov
mov
notl
repz
mov
push
dec
and
insl
dec
mov
loop
loop
popf
mov
xchg
ret
fnstsw
call
movsb
fildl
inc
dec
dec
lcall
pop
int3
lods
scas
push
stos
jnp
das
lcall
dec
push
adc
das
loop
pop
loop
mov
push
fnstsw
push
lods
cmpsb
pop
cwtl
sub
out
push
add
sbb
in
ljmp
mov
notl
inc
mov
or
lods
mov
les
sub
fadds
mov
out
jle
xor
xchg
ljmp
pushl
and
js
stc
pop
lret
data16
xor
inc
mov
pop
adc
sub
aas
or
cmp
jns
mov
xor
fcomps
mov
pop
hlt
mov
mov
lret
scas
out
mov
mov
int3
gs
pop
aam
scas
sbb
jb
loop
test
test
in
or
subb
xor
xchg
adcb
dec
scas
push
mov
xchg
or
stos
dec
push
dec
add
sub
ljmp
add
ljmp
adc
in
cwtl
sub
lea
jl
fsts
test
aad
or
sub
sti
push
outsb
jno
iret
and
iret
hlt
mov
mov
mov
lret
in
sub
push
mov
dec
xor
push
dec
outsl
push
xor
cmp
mov
push
adc
sahf
es
add
out
or
mov
xor
cli
add
loop
insb
cs
test
jg
mov
mov
cmpsl
xchg
mov
dec
outsb
jae
mov
jne
xchg
pop
shlb
jle
movsb
mov
rcrl
xchg
sub
fcmovnbe
loopne
iret
adc
dec
cmp
rcrl
sub
or
stos
test
fs
pop
fcmovnb
andb
stos
dec
shl
lcall
rorb
pusha
lret
lea
out
adc
iret
add
dec
dec
pushf
xchg
decb
add
imul
mov
dec
enter
icebp
cld
sbb
sbb
mov
pop
or
in
es
orb
cmp
mov
cmpsb
xchg
pop
in
xchg
sbb
xor
mov
cmc
jno
push
pop
or
fidivrl
aas
lahf
or
int3
movsb
addr16
lods
fimuls
call
in
cli
push
testb
aas
out
arpl
sbb
int3
loop
test
dec
and
leave
daa
pop
dec
or
in
inc
outsl
outsl
loop
lcall
mov
mov
movsb
mov
push
xor
call
out
push
mov
jg
shlb
ja
fnstsw
sub
out
sbb
and
fisttps
push
dec
mov
fsub
cli
sbb
std
test
fwait
in
popf
xchg
mov
fnstenv
sbb
adc
push
mov
jl
dec
dec
loope
cmp
stc
xor
sbb
in
ss
scas
mov
mov
lea
ja
mov
sub
shl
cmp
xchg
in
jmp
je
sub
cmp
sbb
imul
fadds
mov
pushf
popl
loop
xchg
mov
mov
aad
cmp
push
cld
mov
fsubrl
cld
dec
jbe
decl
rcrb
sbb
jmp
pop
and
mov
inc
xchg
push
out
xor
add
xor
cltd
adc
xchg
inc
sahf
inc
push
push
adc
dec
jnp
jg
outsb
or
ds
test
pop
int
pop
loopne
sbb
shrb
jp
mov
sbb
stos
add
fsubp
mov
addr16
sub
xorb
movsl
push
adc
pusha
or
sbb
push
ds
std
test
stos
xchg
dec
in
cli
jle
insl
xchg
outsb
mov
pop
mov
in
mov
js
jae
fwait
pop
xchg
jb
push
add
in
or
push
cvtdq2ps
shr
sbb
and
and
cmp
and
daa
sub
in
lods
xchg
test
pop
sbb
shrb
and
mov
repz
xchg
jecxz
dec
sub
clc
aaa
andl
ret
fdivrl
mov
nop
sbb
stos
xchg
fistpll
xchg
imul
out
int
sub
lcall
xor
imul
and
scas
adc
jl
lock
add
jbe
mov
or
mov
test
cs
lea
shl
xchg
enter
inc
cmpsl
rclb
popa
sahf
pop
cs
mov
je
jnp
lret
or
in
ret
cld
sbb
int
push
mov
jp
push
and
divl
jnp
pop
push
inc
clc
sarl
jno
mov
mov
ljmp
mov
fadds
outsb
jb
mov
push
lea
and
ss
outsb
pop
push
ds
push
in
xor
cmc
mov
arpl
xor
and
push
leave
call
mov
lea
dec
loope
mov
jp
fidivrs
xchg
mov
add
xor
jae
and
int
mov
dec
mov
fstpl
imul
scas
adc
int3
cli
sahf
leave
repz
jp
sub
pop
pop
adc
es
jle
leave
push
icebp
jbe
xchg
in
xchg
lret
push
daa
lock
pop
xor
repnz
xchg
fidivs
imul
sub
aas
imul
sahf
out
iret
sbb
ret
mov
int3
aaa
test
or
dec
sbb
xchg
mov
or
cmpsl
push
push
mov
push
out
popa
rorl
cmp
dec
fistps
or
adc
sti
test
pop
test
popl
push
lahf
or
enter
sbb
sbbl
in
and
pusha
add
cmp
mov
cli
fucomp
jb
mov
or
lret
xor
mov
test
cmp
shrl
pop
aaa
pop
pop
sbb
dec
add
mov
jmp
in
daa
xor
cwtl
out
jle
or
gs
push
xchg
mov
dec
aad
outsl
adc
pop
test
test
pop
hlt
test
das
adc
push
dec
popf
jae
push
mov
and
dec
ljmp
cli
test
mov
xchg
mov
mov
adc
cmp
xor
fsub
push
push
adc
mov
mov
sarl
test
out
insl
js
jle
pop
insl
fld1
enter
mov
cwtl
je
mov
jmp
test
sub
out
jo
sbb
push
into
aad
push
dec
lods
ss
push
fs
cld
or
shr
icebp
jno
sub
xchg
adc
iret
test
mov
sub
dec
repz
push
jge
lock
and
aas
mov
push
iret
and
cmp
int3
jge
clc
xorb
mov
aad
cmpsl
lds
pop
mov
pop
sub
mov
pusha
lret
out
add
xchg
lret
and
xchg
movsl
push
lea
add
fsts
dec
jle
js
push
movsb
sbb
insb
pop
mov
cmpsb
jnp
push
movsb
pop
dec
imul
inc
sub
mov
mov
popa
movsl
sub
roll
pop
jbe
pop
ljmp
rcll
mull
out
in
jp
movsb
nop
and
std
lods
mov
call
jbe
das
pop
fcomi
mov
mov
cmp
push
or
mov
push
cmp
xlat
inc
mov
push
int
repz
mov
aas
pop
and
inc
lods
add
rorb
mov
loop
add
in
sbb
cmp
ret
ljmp
cli
out
pop
bound
jg
icebp
sti
inc
push
call
sbbb
call
push
lock
sbb
rcrl
xor
jae
push
loop
or
bound
aad
stos
fstps
sbb
imul
sub
push
scas
cmpsl
cmpsl
add
adc
mov
pop
test
mov
nop
icebp
lahf
or
sbb
jle
pop
mov
int
arpl
push
dec
push
pusha
test
fsubrs
fwait
insl
push
dec
adc
cmp
xchg
hlt
icebp
pop
mov
jbe
shll
cmp
clc
adc
mov
dec
in
pop
jo
mov
cmc
mov
ss
cmp
mov
sub
inc
sub
push
add
jns
lret
push
jno,pn
jnp
push
sbb
not
jl
fimuls
out
mov
into
push
cmp
push
dec
ja
insb
sub
jecxz
lret
fstpl
mov
insb
fistl
ss
cmpsb
pop
ja
mov
sbb
hlt
dec
in
lret
mov
sub
sahf
cmpsb
sbb
mov
in
fmul
leave
pop
lcall
xchg
cmp
inc
cltd
aas
fisttpl
cmp
push
lea
mov
and
fcmovb
mov
stc
out
leave
mov
bound
loopne
sub
out
loopne
pop
sar
mov
in
iret
push
shr
cmpsl
inc
push
mov
xor
dec
xchg
adcb
dec
test
xor
push
jno
das
iret
fneni(8087
xor
pop
ljmp
and
std
add
xor
mov
adc
ja
adc
or
daa
inc
sbb
icebp
pop
and
ss
cmp
ret
pop
fisubl
rol
pop
jmp
mov
clc
inc
add
lcallw
in
push
dec
scas
imul
insb
les
enter
cmpsl
and
add
rcrb
and
rolb
je
lret
pushf
fildll
in
inc
scas
dec
push
add
mov
out
pusha
inc
cmp
push
inc
mov
sub
clc
inc
push
sub
cmp
fbstp
out
lds
sbb
ret
sbb
loope
mov
jl
add
fndisi(8087
or
addr16
fs
or
loop
je
add
and
clc
loopne
cmp
mov
inc
mov
decb
mov
mov
pop
call
shrl
dec
mov
xchg
pop
jne
hlt
notl
jns
lds
mov
push
mov
jmp
add
rolb
jae
fdivr
loopne
xchg
repz
fwait
out
jmp
push
je
mov
adc
cmc
mov
xchg
jg
sbb
inc
repz
ret
mov
insl
outsl
cmc
cmpsb
jecxz
mov
clc
out
or
cmpl
inc
stos
icebp
lahf
mov
xor
das
and
xchg
ds
popf
add
shlb
testl
adc
addb
out
and
jbe
into
jg
icebp
cmpl
je
stc
repnz
aam
adc
sbb
mov
jbe
dec
fcmovbe
push
mov
mov
pop
iret
fs
push
jae
out
pop
dec
sub
pop
jae
mov
cltd
addl
repnz
inc
test
or
or
push
xchg
sarb
sbb
xchg
arpl
jmp
or
xchg
idivb
in
in
cli
int3
in
jmp
adc
push
aad
adc
jne
div
push
test
imul
test
inc
jo
and
pushf
leave
dec
push
push
add
mov
hlt
jae
ror
mov
mov
xchg
bound
xchg
cld
pop
pop
leave
fstps
sbb
iret
or
out
and
ss
or
push
lods
and
jbe
xor
add
lea
sbb
cwtl
and
add
sbbl
outsl
loopne
inc
and
call
lock
jmp
xor
adc
adc
enter
sbb
out
lds
into
dec
add
inc
ja
cmpsb
daa
test
add
mov
das
std
clc
inc
incl
mov
inc
iret
xor
mov
mov
into
rcll
xchg
clc
add
add
out
cmp
ja
gs
dec
jecxz
inc
in
mov
add
pop
push
sar
add
loopne
mov
iret
sub
add
mov
mov
push
lea
cmp
inc
mov
popa
push
arpl
pop
jge
inc
repnz
jbe
pushf
ficoml
lods
mov
insl
ret
and
divl
adc
fidivrl
negl
xlat
lds
push
ret
scas
mov
test
test
lahf
mov
pop
jnp
push
fisttps
icebp
subl
pop
mov
add
pop
cli
enter
outsb
fs
pop
in
jg
repnz
push
stos
and
xchg
lret
xchg
dec
lret
fcom
ret
jbe
mov
popf
adc
mov
push
inc
repz
xor
push
xor
xchg
pop
gs
dec
push
enter
or
inc
fnsave
push
pop
fucomi
insl
add
pop
mov
mov
mull
xor
adc
fldl
mov
js
mov
pop
and
adcl
sub
mov
outsl
fnsave
jp
out
data16
dec
jmp
repz
ljmp
ds
and
cmpsl
lock
pop
lcall
stos
fbld
cmpl
mov
adc
mov
out
inc
jnp
fwait
cltd
sub
sbb
cld
cmp
sub
fisttpll
lods
aad
inc
imul
lcall
stos
aad
rol
cmpsl
pop
clc
sbb
adc
lds
in
shll
sub
int3
xchg
repnz
and
push
fcomps
or
sbb
orb
adc
xchg
jecxz
push
test
les
scas
xchg
sub
cmp
ds
inc
xchg
pop
mov
out
jnp
out
aam
fnstcw
xor
roll
mov
ds
enter
dec
stc
or
adc
jo
adc
and
iret
jecxz
daa
and
test
mov
mov
outsl
xchg
notl
test
jecxz
xchg
cmc
pop
insb
adc
leave
pop
out
and
lds
pop
xor
testl
aaa
xchg
les
insl
inc
test
lcall
push
and
xchg
add
xor
inc
out
aad
test
and
insl
jne
sti
sub
and
arpl
aad
fs
xchg
hlt
loopne
cmp
cwtl
push
sbb
aas
cs
mov
push
adc
insb
fcmovb
xchg
xor
cmc
or
push
dec
mov
iret
dec
cmpsb
jbe
xlat
aad
push
xchg
push
push
dec
dec
cmpsl
push
lret
push
scas
data16
xchg
ljmp
add
pop
insb
loope
lock
cvttps2pi
ja
shrb
jg
xchg
jge
dec
inc
aad
or
mov
mov
lret
cmp
xlat
or
cmc
sub
sub
repz
mov
xchg
mov
add
or
or
push
add
out
jnp
daa
mov
int3
adc
push
adc
call
push
inc
add
and
das
jmp
popf
xchg
xchg
xchg
and
mov
sbb
add
sub
inc
mov
jb
or
dec
int
or
js
jbe
xor
xchg
pop
sbb
inc
or
inc
inc
outsl
mov
dec
aad
sub
dec
adc
jle
mov
jnp
sub
sub
mov
test
mov
dec
or
mov
mov
adc
insb
mov
push
movsb
jnp
xchg
mov
leave
scas
jg
test
lea
push
movsb
rorb
push
add
jo
or
sub
ss
je
cmp
mov
leave
jnp
stos
js
and
sbb
out
fldt
or
add
mov
jg
jne
add
inc
xor
pop
ljmp
addr16
pop
ljmp
add
cmp
mov
cs
push
sbb
push
xchg
fcompl
int
sbb
cmpb
cli
daa
pop
dec
mov
cwtl
push
fldl
fiaddl
xor
in
adc
xor
mov
xchg
push
adc
mov
mov
fldl
and
pop
test
incl
out
lds
fstpl
mov
sub
mov
adc
scas
sub
movsb
jb
les
bound
cld
in
stos
add
xchg
push
sbb
cmp
jecxz
sti
fucomp
cmpsb
or
repnz
dec
sub
and
rclb
cmp
dec
jecxz
inc
in
and
fcompl
push
cmpsl
add
push
aad
sub
xor
out
cmp
inc
fadd
push
bound
inc
push
mov
mov
daa
dec
jmp
mul
pop
xor
addr16
adc
adc
sub
es
repnz
lods
fcomp
inc
sbb
insb
xor
ds
xor
ss
into
push
int3
mov
fs
test
dec
push
in
mov
ja
pop
mov
xchg
add
add
sbb
and
sub
jle
lcall
push
cmp
push
mul
mov
scas
rcr
xchg
sub
popa
xchg
adc
je
fwait
dec
hlt
cmp
out
mov
bound
inc
or
aas
gs
jge
adc
ljmp
lea
sub
dec
mov
push
mov
lods
outsl
or
das
es
subl
stos
bound
xchg
sub
and
inc
xchg
repz
xor
gs
roll
inc
or
mull
movsb
push
sub
pop
add
call
jb
fmulp
bndstx
and
sbb
js
lcall
mov
jmp
dec
sub
data16
enter
inc
or
hlt
ljmp
add
mov
sbb
sub
faddl
and
test
mov
into
ds
lcall
leave
fidivl
mov
xchg
lret
cld
mov
pop
or
repnz
sti
pusha
int
fstps
insb
dec
std
add
stc
cmpl
or
pop
setbe
pop
popf
mov
mov
dec
xchg
adc
fisubrl
xchg
xor
lea
mov
mov
fwait
pop
xchg
push
xor
pop
gs
sub
call
cmp
add
imul
pop
pop
push
lahf
push
in
jae
add
add
test
push
or
mov
je
outsl
out
mov
add
gs
imul
int3
dec
icebp
addl
jl
add
mov
dec
ret
xor
dec
push
xor
jns
jmp
pop
cmovs
and
push
xlat
std
inc
mov
stc
sub
popa
inc
push
dec
sbb
enter
mov
fwait
hlt
jne
pop
mov
jle
add
dec
stos
stos
ljmp
ret
cmp
mov
push
mov
inc
test
call
ret
ret
sub
out
cmp
and
lock
mov
fcom
scas
psubusw
out
rcr
lods
sub
sbb
outsb
push
cmp
sbb
aam
ret
sarl
imul
sub
xor
push
and
add
mov
movsb
fmuls
push
jge
ja
bound
adc
data16
mov
or
cld
cmp
data16
int3
in
data16
mov
stos
aas
jmp
cmp
bound
cmpl
inc
pop
or
pop
xchg
xchg
int3
movsl
std
addr16
add
pop
sbb
xchg
mov
lret
pop
cmpsl
push
jno
jge
add
movb
test
pop
xchg
inc
cmovns
add
shlb
jae
hlt
add
xchg
cli
or
test
pop
mov
in
push
mov
sbb
and
repnz
xor
mov
ror
push
or
mov
or
lods
mov
fwait
in
inc
dec
stos
or
xchg
adc
lcall
and
xlat
frstor
xchg
mov
adcb
out
test
fwait
mov
or
dec
pop
mov
movsb
mov
pop
test
mov
sahf
lods
mov
jne
sti
and
cmp
xor
and
sarb
fisttpl
add
aaa
sub
enter
jnp
mov
dec
mov
xchg
push
pop
lds
bound
sub
sbb
cmp
loopne
movsl
imul
cmpsb
pop
dec
ss
repnz
cmp
lea
in
stos
clc
add
js
sbb
sub
arpl
pop
pop
fwait
jbe,pt
mov
sti
and
sbb
or
ficoms
test
cs
fildl
jnp
andl
or
push
iret
and
fmuls
rcr
sub
je
push
aam
stc
bound
mov
movsb
sbb
jnp
fstpt
mov
inc
arpl
mov
mov
sub
ss
jg
adc
test
mov
or
notb
adc
xchg
pop
out
cmp
adc
repnz
mov
xor
insb
xlat
mov
adc
inc
add
xor
out
scas
in
and
push
inc
sbb
dec
mov
sar
xor
cli
jmp
xlat
repnz
scas
lret
cmpl
pop
xor
jmp
xor
jae
repnz
int3
and
lcall
mov
or
outsl
popa
insl
idivl
xor
mov
test
jbe,pt
pop
leave
xchg
mov
xchg
push
mov
push
jae
sub
mov
mov
add
sbb
cmp
pushf
jmp
push
mov
test
xor
out
adc
mov
xor
insb
bound
sub
mov
lahf
mov
mov
loopnew
in
inc
mov
pop
jl
ret
int3
xchg
clc
cli
sbb
xor
push
mov
js
mov
loop
jne
icebp
sbb
xchg
add
mov
jo
push
sbb
ss
icebp
xor
fldl
mov
jle
cli
ljmp
out
push
inc
out
and
mov
mov
into
out
push
in
add
xchg
jmp
jge
cmpsb
lahf
out
adc
cmp
sbb
fdivrs
push
addr16
imul
iret
fwait
insb
jg
outsl
sub
aas
cli
adc
xchg
lock
sub
jae
inc
daa
lret
cmp
lds
lret
sbb
xor
enter
mov
js
movsb
int3
movsl
mov
pop
jge
stos
cmpsb
jb
dec
arpl
mov
cmp
push
in
sbb
inc
in
inc
dec
jo
scas
jb
mov
arpl
arpl
out
call
mull
and
jle
pop
adc
vsqrtps
dec
popf
push
std
mov
mov
or
jecxz
xchg
cmp
jle
fidivs
mov
adc
sti
out
push
leave
adc
ljmp
rorl
pop
mov
lds
cltd
sub
dec
push
test
loop
cs
in
lods
pop
mov
mov
pushf
sub
mov
por
cltd
fsubrs
ficomps
or
or
dec
push
lea
pop
out
xchg
sarl
mov
push
cmp
mov
mov
maxps
test
notl
push
in
mov
mov
scas
xchg
inc
xchg
mov
fstps
cmpb
arpl
xchg
jg
mov
cmp
clc
rorl
roll
mov
inc
mov
sti
xor
xor
sarb
outsl
ds
pop
adc
mov
jb
add
repz
rcl
xchg
subl
mov
xor
mov
outsl
arpl
inc
in
xor
imul
shll
dec
mov
inc
rol
ja
or
fiaddl
iret
pop
lods
jb
mov
cli
add
cmp
cmp
ja
push
push
mov
popa
jecxz
mov
imul
adc
dec
or
pop
mov
jbe
shlb
aad
icebp
cmp
mov
jp
cmp
dec
push
cltd
xchg
andl
xor
aad
inc
and
outsb
push
lds
enter
lock
mov
ret
jge
repz
dec
mov
gs
cmc
test
lods
test
jecxz
add
js
cld
jbe
js
add
mov
fs
and
daa
add
fiaddl
test
jae
out
jbe
mov
xor
jno
mull
insl
sahf
xor
inc
inc
push
jecxz
in
into
cmpsb
cmp
iret
sbb
pop
leave
mov
sub
enter
jae
shrb
pushf
push
jmp
imul
insb
les
and
inc
shlb
leave
adc
or
out
int
inc
add
adc
lcall
popa
div
mov
push
inc
inc
sbb
mov
sbb
xor
lcall
mov
push
adcb
enter
xchg
pop
popa
add
xor
sub
mov
popl
shll
inc
std
jns
fidivs
ljmp
aaa
pop
ret
jns
push
fiadds
cmpsl
jnp
jp
ja
test
imull
imul
pop
and
call
lret
or
inc
daa
sbb
and
enter
test
or
fimuls
icebp
imul
cmp
outsb
sbbl
or
push
mov
mov
adc
mov
jae
adc
jecxz
or
fistl
xor
mov
xor
add
stos
push
inc
adc
adc
mov
push
repnz
adc
lea
mov
lock
mov
ds
ret
pop
mov
clc
inc
xchg
les
dec
repnz
std
dec
dec
lea
mov
mov
lahf
fstps
cmp
lahf
sub
icebp
xlat
push
push
mov
enter
cmpsl
in
cli
push
gs
test
sub
push
pop
enter
mov
into
adc
clc
test
add
mov
xor
inc
scas
mov
pop
push
lock
mov
mov
jnp
pop
cmp
mov
popa
push
imul
mov
subb
shlb
jne
mov
rcll
std
fistl
dec
aad
fmuls
aas
sbb
or
outsb
adc
add
inc
jle
dec
popa
dec
enter
cltd
dec
loope
js
push
adc
shrl
mov
adc
mov
jge
pop
xor
sub
sti
jge
int
jg
inc
out
rolb
js
iret
insl
aad
mov
jl
les
and
pop
sub
mov
dec
add
cmp
loopne
sbb
loop
outsb
hlt
lods
push
xor
enter
cld
mov
pop
jno
push
fisubl
xlat
add
ja
aas
test
pop
or
imul
aaa
fnsave
jmp
shlb
pop
adc
and
cmp
test
arpl
popf
jl
add
popa
xchg
test
xor
push
shlb
lea
aaa
and
inc
call
fists
insl
mov
pop
xchg
push
jle
sbb
outsb
bnd
inc
and
jb
pop
frstor
pop
mov
jmp
xchg
sub
sub
inc
push
xchg
std
aam
jmp
lcall
cmp
gs
jge
in
push
sbb
adc
mov
lret
jmp
into
mov
cld
sub
mov
cmp
test
cmp
ds
stos
dec
cwtl
fidivrl
lods
or
pop
cs
enter
xchg
adc
add
pop
xor
and
pop
sub
ja
xchg
pop
xchg
add
and
jmp
cmp
sarl
mov
dec
das
push
ja
mov
clc
mov
hlt
and
jge
xchg
or
into
decb
movsl
mov
movb
inc
int3
les
nop
imul
jb
sub
push
jp
adc
cld
dec
cmpsb
xor
cltd
push
xchg
and
mov
jge
aam
and
das
std
dec
fwait
mov
ljmp
mov
inc
fwait
imul
adc
push
add
insb
mov
push
call
inc
jmp
rcrb
into
es
or
push
and
xor
js
lahf
xor
fnstenv
jmp
push
enter
ret
mov
inc
in
dec
cltd
push
adc
sbb
mov
imul
aam
mov
lods
xchg
push
lahf
cld
sahf
cmp
mov
cld
mov
push
jo
faddl
lret
sub
cmpsb
lret
loop
lahf
mov
lret
push
shl
dec
bt
or
stos
aaa
or
or
repnz
push
or
or
push
icebp
cmc
jnp
insl
jmp
cmpsl
jne
jnp
sbb
scas
lock
fcoms
push
inc
shr
sub
mov
mov
push
fdivrp
fildll
xchg
cmp
and
jl
orb
aam
shlb
or
add
mov
jg
mov
add
sub
mov
xor
or
je
cmp
rolb
mov
pop
es
jns
adc
shrl
sbb
inc
push
and
adc
dec
jo
ljmp
push
push
xor
push
jmp
push
xor
mov
jg
outsb
mov
sub
jne
shll
roll
sbb
jo
mov
orb
pop
fsts
xchg
inc
cmp
inc
mov
xchg
rcrb
stos
or
pop
push
cmp
dec
mov
mov
pop
add
out
and
es
xor
shrl
sub
stc
pop
sub
sub
dec
shll
xchg
jnp
add
jbe
arpl
xchg
sbb
jp
out
jmp
or
insb
pop
into
sub
jo
in
int3
mov
sub
rorl
push
fbld
mov
pop
cmpl
daa
cmp
inc
or
dec
mov
orb
pop
push
stos
and
mov
xor
mov
sbb
xor
mov
mov
jb
jns
inc
adc
jo
mov
adc
jle
clc
loop
call
and
cmp
bound
into
fsubs
mov
add
dec
xlat
cmp
sbb
xchg
out
pop
std
out
mov
push
pop
fmuls
in
in
cli
test
mov
bound
mov
push
loopne
push
call
mov
xchg
movsb
cmp
pop
xor
test
sub
bound
pop
push
mov
jg
in
or
outsb
mov
jno
or
or
sbb
jg
mov
mov
stos
mov
sti
sub
ljmp
inc
lea
sub
xchg
pop
ret
dec
hlt
inc
insl
mov
jl
dec
sti
or
icebp
inc
les
xlat
jmp
int3
add
mov
insl
push
inc
cmp
dec
mov
cmp
int3
dec
leave
cwtl
ljmp
outsb
lea
bound
mov
sub
mov
inc
mov
mov
xchg
cld
ret
mov
shl
pop
insb
mov
push
mov
jge
or
test
jg
repz
lods
repz
test
jle
and
lods
pop
lods
pushf
daa
xor
int
testl
inc
push
sub
nop
repnz
inc
test
push
nop
sbb
fisubs
mov
lock
mov
push
loop
and
sbbb
push
out
inc
jns
inc
clc
mov
xor
adc
or
or
rorl
filds
call
push
daa
in
push
scas
int3
movsb
push
insb
and
aam
clc
add
mov
adcl
push
adc
pusha
ljmp
test
cmp
int3
out
in
inc
in
xchg
in
pop
shll
add
or
and
into
ljmp
ficompl
sub
push
and
out
popa
test
push
and
add
inc
je
adc
xlat
nop
mov
mov
stos
iret
fsubl
insl
fists
xchg
out
cmp
mov
xchg
and
xor
xchg
stc
bnd
sahf
roll
ss
inc
fwait
int3
add
jno
jp
int3
repz
es
and
dec
aad
out
xchg
das
adc
mov
addr16
in
shrb
shrb
sti
cmc
pop
jecxz
cwtl
and
test
xchg
pop
test
or
pop
jl
cmc
popf
mov
cmp
xor
jae
xchg
xor
jle
mov
stc
mov
ret
fildl
clc
out
xor
insb
lds
pop
stos
popf
shlb
jle
xor
xor
insb
loope
pop
mov
ret
js
inc
push
add
xchg
sub
jmp
sbb
test
inc
dec
jae
push
mov
insl
sti
insb
dec
jno
cld
lret
mov
add
xchg
pushl
fistl
stos
out
or
jne
fcoms
jl
rclb
or
stc
or
or
jecxz
mov
mov
and
fstl
sub
sbb
dec
cmp
mov
lock
cmpsb
mov
cli
fcoms
addl
push
enter
pop
pop
mov
jb
sbb
test
scas
jbe
negl
and
sbb
cli
mov
stos
dec
xchg
sub
jecxz
push
movsl
enter
out
mov
mov
mov
imul
iret
mov
and
mov
ds
outsb
nop
xchg
adc
dec
sbb
xor
push
xchg
pop
add
fimuls
sbb
insb
cmp
inc
fdivrp
xchg
imul
std
or
sub
xorb
cmp
jmp
test
test
lods
insb
clc
or
jnp
xchg
adc
xchg
shlb
data16
pop
nop
shll
es
in
lret
int
add
jo
adc
stc
push
aad
gs
xlat
shll
pop
cmp
xchg
jne
rcll
mov
hlt
dec
repz
test
adc
cmp
add
iret
cmp
es
or
jmp
push
ret
cbtw
mov
push
notl
xorb
mov
jmp
adc
daa
adc
add
cmp
std
icebp
aad
jns
pop
or
jmp
dec
xor
lods
jae
dec
jmp
pop
inc
int
into
repnz
negl
adc
nop
sbb
and
jo
dec
andl
push
pusha
inc
add
mov
adc
cmp
mov
mov
add
sbb
jecxz
and
mov
xchg
push
jnp
jno
popa
push
sub
sahf
add
call
mov
ljmp
pop
bound
cmp
je,pt
mov
rcrb
jmp
inc
test
xchg
push
sub
add
stc
mov
and
dec
cli
mov
pop
jbe
int
sbbl
cmc
gs
lods
icebp
fmull
outsb
clc
aaa
cmp
es
dec
dec
or
jmp
push
mov
repz
adc
mov
adc
push
inc
shlb
sub
adcl
or
sbbl
pushf
xor
popa
mov
popf
int
pop
movsb
lret
push
insb
xor
mov
hlt
inc
cmc
loopne
mov
out
out
stos
dec
or
push
push
jnp
dec
jae
into
and
xor
mull
adc
cltd
sub
fnstenv
sub
aaa
inc
or
dec
es
sub
jno
jae
mov
out
push
jl
dec
movsb
dec
and
push
pop
xlat
push
rclb
push
mov
in
inc
xchg
xchg
sahf
mov
mov
in
sub
mov
cmp
gs
nop
xchg
pop
xchg
jno
dec
pop
sti
pop
mov
mov
add
cmp
cmp
push
sbb
cmp
add
xor
clc
xchg
data16
xchg
in
xor
sub
daa
lods
sub
sbb
shrl
insl
loopne
push
xor
pop
sbb
daa
inc
in
push
dec
call
inc
es
mov
nop
es
notl
jno
adc
sbb
nop
adc
in
frstor
scas
xchg
xor
mov
pop
shlb
addr16
cmp
aas
mov
pop
ss
inc
cld
and
push
ds
ljmp
dec
lahf
xchg
jp
or
fimull
aam
shrl
mov
mov
cwtl
cmp
in
cvtdq2ps
stc
lods
mov
lock
loopne
fstps
and
xchg
xchg
dec
mov
negl
repnz
push
mov
pop
lret
pop
aad
push
jle
sbb
mov
sbb
aad
xor
stos
lods
stos
sbb
mov
add
mov
add
pop
inc
mov
xchg
movl
insl
push
aam
bound
push
stos
outsb
or
mov
inc
adc
sub
push
inc
mov
add
pop
xchg
aas
fistpl
add
dec
cmp
mov
popf
cwtl
push
into
fsubs
pop
add
pop
sub
out
pop
dec
dec
mov
fbld
adc
mov
xchg
dec
ljmp
lea
test
pushw
xchg
add
cmp
mov
dec
in
and
inc
sahf
push
dec
mov
sub
cmpsb
fiaddl
xor
arpl
orb
leave
aam
dec
mov
call
js
pop
loope
les
scas
and
adc
idiv
pop
in
push
jae,pn
test
cmp
and
adc
jo
movl
mov
push
dec
push
stos
outsl
insl
in
xor
xchg
fldenv
in
lds
add
sub
cmp
xor
stos
lret
xchg
sub
nop
mov
pop
ret
daa
int
inc
mov
aaa
pop
xchg
dec
push
pop
aaa
cli
in
iret
sub
push
jge
aas
divb
cmp
cmpsb
inc
jno
add
and
fcompl
inc
add
dec
pop
add
sub
and
or
testl
fiadds
dec
fwait
aas
ret
int
sub
rcll
sbb
sahf
ja
movsl
pop
iret
jno
int
push
cmp
mov
jnp
aas
xor
icebp
cld
mov
sbb
scas
sub
mov
add
mov
add
sub
mov
or
push
popf
push
orl
mov
adc
mov
inc
push
pushf
inc
mov
jne
mov
adc
xchg
inc
mov
std
adc
inc
mov
mov
xor
dec
xlat
test
jp
jmp
fbstp
loope
inc
in
shrl
mov
mov
bound
dec
negl
aas
mov
xor
outsl
in
daa
jo
loop
aad
pop
sbb
cmp
pop
push
sbb
dec
leave
push
scas
int
cmp
cltd
in
or
mov
adc
add
lods
cmp
shrb
into
popa
and
or
sti
sbb
pop
icebp
push
mov
clc
int
out
int3
andl
xor
and
lret
mov
stc
mov
arpl
sahf
or
out
cmp
lret
cmp
dec
arpl
scas
rcrb
jl
ret
call
mov
sub
sub
jg
hlt
push
shrl
jne
ret
in
mov
repz
pop
mov
lcall
je
ja
dec
popa
popf
xchg
dec
jo
sbb
mov
mov
sbb
xchg
fsubrl
les
insl
or
fmull
jo
push
jns
xor
adc
sbb
fs
mov
jmp
jae
int3
mov
xor
stos
lods
mov
outsb
lahf
rcll
sub
arpl
outsl
add
xor
rcrb
push
push
and
mov
fldlg2
cmp
in
push
cmp
nop
mov
jns
jg
cmp
and
sub
push
add
inc
dec
jge
xchg
sbb
add
or
mov
pop
aad
mov
mov
lcall
inc
ljmp
dec
push
addr16
addb
mov
stc
jo
xchg
push
enter
das
loopne
xor
sub
cmp
sub
lods
fstpl
sub
or
xchg
or
out
mov
fwait
xor
imul
inc
sbb
sub
cli
add
repnz
sbb
sbb
dec
hlt
mov
mov
and
adc
fldl
xchg
sub
xor
and
adc
idivb
pop
cmpsb
enter
sbb
addl
or
sub
bound
gs
pop
cli
mov
lods
cmpsl
mov
scas
sbb
int3
leave
pop
push
out
jp
data16
or
xlat
xor
sub
dec
ds
lret
in
pop
and
push
mov
or
xchg
add
jecxz
daa
leave
rcrl
xor
mov
sub
lret
sti
jecxz
cmp
xchg
aaa
mov
out
pop
cmp
xor
fldl
cmpsb
test
pop
iret
lcall
xchg
movsb
add
mulb
insl
cmp
mov
cmpl
shll
cmp
sub
xorl
push
add
in
sbb
mov
mov
adc
hlt
cmp
lret
xchg
mov
in
ds
mov
cmc
push
lods
adc
pop
mov
sbb
in
push
push
imul
cmp
push
mov
popf
fisubrs
mov
mov
inc
call
popf
fnstenv
lock
xchg
fnsave
mov
insl
mov
rcrl
int
scas
push
push
dec
sbb
aad
mov
pop
or
sub
pop
jmp
cmp
dec
fldl
loopne
movsl
jae
jb
and
out
ret
int3
xchg
dec
lcall
mov
es
insl
mov
in
das
cwtl
adc
sbb
stos
pop
push
ret
cmp
push
or
ret
mov
das
aas
js
scas
pop
data16
mov
xchg
cwtl
adcl
and
pop
dec
cli
testl
bnd
out
test
shrl
pop
or
push
jp
fnsave
adc
inc
and
movsl
sub
pushf
out
enter
jecxz
sti
into
les
repz
outsb
lock
mov
jno
out
rorl
test
fnstenv
xor
push
sub
cld
divb
xchg
repz
dec
stos
pop
jbe
fs
mov
mov
sub
cmp
push
fbstp
xchg
hlt
jns
aaa
xorb
xor
pop
int3
inc
sbb
into
adc
add
mov
xor
mov
daa
les
lock
dec
stc
popa
adc
sarb
fsubrl
rorb
repnz
std
cld
js
sub
cmovnp
dec
lock
in
sub
call
push
movsl
dec
xchg
in
add
pop
movlps
andb
cli
jbe
and
mov
pushf
pop
pop
pop
push
push
fwait
cmpl
xor
pop
cmp
ljmp
out
cld
pusha
xor
aad
mov
enter
rcrl
add
repz
jge
pop
mov
mov
xchg
push
mov
xchg
psubsb
pop
icebp
push
insl
aam
cmp
add
pop
add
rcrl
out
pushf
sub
jecxz
mov
jnp
jno
das
push
jae
cmp
adc
movl
mov
xor
jo
xchg
hlt
subl
mov
mov
ss
je
fcoml
or
test
push
pop
fwait
dec
fcoml
sbb
push
mov
sbb
pop
nop
or
fcmovu
push
mov
movl
or
push
jb
cmp
aam
movsb
xor
mov
dec
stos
push
xchg
jmp
out
sub
fwait
icebp
mov
js
cmc
dec
adc
ret
pop
or
jb
test
sbb
mov
cmp
mov
xchg
lods
int3
pop
sbb
pop
fcmove
loope
inc
jecxz
xor
jns
ja
ret
shll
dec
jno
pop
inc
jae
jae
test
dec
mov
nop
xchg
jp
mov
sbb
xchg
cmp
aaa
jle
ret
ja
in
adc
dec
or
fidivrl
icebp
bound
test
add
in
adc
adc
dec
jp
pop
cmp
xor
enter
hlt
xor
pop
push
shrb
adc
mov
jp
push
jo
sub
fldl
add
push
std
mov
stos
push
push
lods
push
lret
sbbl
scas
repz
fwait
data16
pop
andb
push
mov
cwtl
jle
mov
cld
shlb
push
aas
add
push
push
clc
pushf
daa
cmp
sti
pop
fidivrs
xchg
mov
pop
loop
faddl
movsl
fstpt
sbb
ret
cld
push
mov
insb
push
cmp
filds
dec
hlt
sbb
movsl
pushf
sarb
in
sbb
test
dec
xchg
add
inc
orb
imul
shll
icebp
addl
xchg
mov
jne
dec
popf
jp
data16
das
arpl
pop
inc
in
pop
leave
jmp
ja
inc
add
das
fsubrl
xchg
fs
pop
lcall
cwtl
aas
mov
jg
xchg
scas
xchg
add
test
mov
xchg
jae
push
frstor
jecxz
adc
leave
sub
jno
mov
mov
xchg
outsb
hlt
stos
ja
sub
pop
out
ret
pop
iret
dec
mov
inc
fxtract
stos
adc
mov
iret
or
or
outsb
sub
mov
jl
in
jo
and
clc
mov
addr16
jp
lret
or
ret
fisubrl
shrb
or
hlt
insl
into
cltd
cltd
fistl
enter
pop
mov
adc
stc
xchg
leave
mov
cltd
xor
dec
fcomip
imul
cmp
push
sbb
mov
rolb
jmp
lods
dec
jne
pusha
in
in
pop
subb
gs
repnz
xchg
xchg
xchg
xchg
cmp
and
out
setne
push
maxps
dec
mov
ret
inc
dec
loop
jecxz
mov
fnsave
loopne
lds
cmp
inc
icebp
pop
jns
clc
dec
and
mov
or
daa
add
mov
sub
sub
inc
gs
cmp
or
mov
js
jge
int
ret
stos
icebp
mov
gs
aam
jbe
jecxz
mov
add
ret
hlt
incb
and
xor
cs
xor
stos
leave
lods
pop
push
xor
aad
inc
lret
je
aad
add
inc
mov
iret
loope
mov
push
pop
icebp
inc
call
js
adc
cmp
sub
or
je
push
into
sub
adc
or
pop
mov
xchg
out
mov
outsb
lret
pop
dec
pop
roll
mov
xchg
push
mov
outsb
jg
bound
mov
in
add
xor
cmc
xchg
mov
jnp
xchg
cltd
imul
xchg
cli
adc
mov
js
pop
xchg
in
inc
sub
xor
aaa
ficoml
in
cmp
mov
cmp
aas
lds
sub
xchg
fucomip
pop
popl
jns
lock
adc
lods
pop
adc
int3
xor
jle
push
mov
lahf
or
inc
mov
ja
ds
faddl
jo
addl
jo
mull
jp
cld
cwtl
imul
fisubrl
and
and
push
push
mov
ja
add
in
cltd
loopne
inc
in
lret
mov
xor
xor
mov
ret
cmp
or
mov
sub
and
js
add
icebp
packuswb
jl
and
insb
mov
inc
inc
shll
sti
mov
sbb
push
sbb
xchg
stos
lret
pop
cli
sub
out
repnz
jbe
push
and
test
jmp
mov
add
sub
mov
outsl
xchg
jecxz
hlt
mov
dec
cld
add
xor
xchg
cmpsl
insl
loope
rolb
pop
in
imul
dec
clc
mov
inc
leave
mov
mov
xor
pop
es
and
push
clc
cmc
ret
je
add
xchg
fsubs
xor
into
stc
push
cltd
imul
sbb
gs
rorb
mov
les
ss
jp
aaa
call
lock
pop
push
frstor
lahf
push
jbe
test
out
les
mov
cmp
in
mov
push
mov
cmp
sub
sti
jb
repnz
daa
dec
iret
insb
insb
inc
mov
testb
add
xchg
xchg
insl
out
cltd
cs
rcr
aas
jmp
jge
aad
nop
bound
jecxz
pop
dec
xor
outsb
nop
pop
outsb
push
adc
sbb
fs
jl
pop
addr16
xor
push
js
arpl
rorb
xchg
push
lahf
dec
out
cmpl
and
sbb
test
cli
cld
cmp
orb
js
mov
jmp
fldpi
lock
add
repnz
imul
repz
add
mov
add
sbb
jmp
lret
in
mov
sti
xchg
movsl
xchg
je
pop
outsl
adc
je
fld1
or
stos
or
das
test
jle
xor
arpl
or
inc
adc
lahf
dec
sbb
dec
sub
hlt
outsb
mov
outsb
jl
ljmp
mov
dec
addl
aad
loope
outsb
adc
sbb
or
out
imul
cmp
mov
in
mov
xor
push
adc
sbb
xor
xor
repnz
loopne
mov
lret
cmpsl
popf
insl
cli
jb
xor
imul
or
scas
aas
and
lret
xchg
rcl
pop
cmc
mov
push
insb
lock
shlb
or
push
mov
lods
shrb
ficompl
dec
rclb
pop
mov
mov
xchg
cwtl
aad
add
andb
xor
push
xor
ja
out
sbb
mov
popa
mov
test
sbb
cmp
cmp
test
orl
fisttpll
dec
xchg
pusha
fsubr
mov
mov
xchg
push
mov
repnz
add
scas
or
inc
cwtl
jne
sub
sub
orb
add
adcb
add
push
fnstsw
mov
xor
and
sub
lods
dec
pop
iret
popf
shl
xorb
mov
push
or
add
sub
jg
cmp
lock
aas
sbb
or
cmp
arpl
push
nop
iret
lahf
ja
mov
mov
mov
lods
lock
jp
and
push
adc
inc
movsb
jmp
cmp
shlb
shll
fcmovnb
jno
mov
add
xor
lods
out
aas
cmpb
inc
icebp
or
pop
in
add
add
loop
or
or
mov
andb
lea
lods
js
pop
unpckhps
data16
pop
dec
xor
scas
pop
repnz
fmuls
leave
push
sbb
int3
shlb
ret
fstps
push
test
sbb
pop
dec
mov
mov
in
idiv
dec
pop
mov
lea
sub
sub
imul
cwtl
cwtl
and
cmp
jmp
daa
jecxz
and
adc
mov
sti
scas
nop
cmpsl
xchg
push
dec
sbb
in
sub
je
mov
inc
push
and
xlat
das
push
scas
sub
and
in
jl
imul
loopne
das
mov
dec
pop
fistpll
adc
and
psrlw
gs
arpl
push
negl
repz
insl
rcl
inc
out
or
xor
xor
shrl
popa
add
mov
mov
mov
je
and
or
and
push
adc
cmp
xchg
mov
ficompl
test
mull
lcall
ja
jo
addr16
dec
xchg
enter
inc
pop
rclb
xorb
jp
repz
jl
push
imulb
pop
sub
xor
jg
pop
add
cmp
nop
inc
je
scas
mov
xor
fimull
mov
sarl
add
push
push
jecxz
jge
mov
cmpsl
inc
add
data16
pushf
and
ss
insl
fcmove
push
sbb
repnz
fidivrs
xor
push
inc
or
xorl
mov
lret
push
movsb
lods
push
in
lahf
loope
xor
or
sbb
fcoms
push
jns
jae
sbb
gs
push
xor
xchg
push
lock
outsl
xchg
fsubl
test
jmp
out
jb
mov
enter
pop
enter
das
ds
sbb
mov
shufps
out
es
xchg
divb
xor
pop
pop
lret
call
shl
dec
in
inc
leave
scas
addr16
sbb
dec
adc
loope
sarl
cmp
mov
stos
mov
aam
loop
dec
jl
cld
pop
into
aad
pop
push
sbb
jbe
inc
jmp
inc
adc
sbb
adc
mov
out
xchg
mov
cmp
loopne
rolb
scas
adc
fisttpl
shll
cs
out
pop
push
mov
and
lret
push
ja
stos
sbb
xchg
cmp
rorb
cmp
int3
js
cmp
jge
cld
cli
pop
fmulp
jmp
add
movsl
and
cmp
push
fnstsw
lcall
mov
je
mov
or
scas
ret
cmp
adcl
orb
insl
test
cmp
ss
cmc
js
aaa
and
stos
dec
push
fpatan
xorl
mov
andb
inc
sbb
icebp
xor
push
adc
cmp
cmp
pop
jnp
inc
lcall
inc
stos
push
ljmp
jb
or
fsub
xchg
test
fidivl
nopl
jl
cmp
mov
test
fwait
jle
xchg
movsb
insl
hlt
lods
jp
xchg
mov
xchg
clc
and
sub
sub
sti
jle
mulb
dec
hlt
push
mov
or
ret
add
pop
cs
in
in
repnz
dec
test
pop
adc
adc
push
adc
not
subb
mov
dec
call
lret
pop
sub
inc
sbb
mov
dec
call
mov
mov
ss
mov
add
xor
adc
adc
ljmp
pop
inc
add
mov
mov
dec
les
scas
pushf
orl
jecxz
in
or
loop
lods
dec
cs
mov
mov
dec
mov
leave
ljmp
xchg
push
pop
iret
jg
pop
xor
das
push
fistps
sub
and
dec
mov
jp
stos
xchg
mov
inc
popf
fwait
push
or
xor
stos
cmp
popf
dec
dec
add
mov
mov
lock
rep
pop
jmp
ja
adc
cmovo
or
xchg
movsl
and
scas
dec
imul
push
leave
xlat
loopne
pop
cwtl
jne
lahf
dec
repz
and
clc
mov
mov
push
repz
xchg
int
sahf
repz
cltd
mov
pusha
xlat
loopne
addl
fists
xchg
mov
push
stos
xchg
sub
iret
insl
pushf
mov
sbb
push
fisubs
in
test
and
call
hlt
out
scas
mov
mov
dec
in
mov
movsl
adc
jns
out
and
lea
dec
or
cld
aas
data16
icebp
stos
xchg
testb
popf
fwait
push
call
cmp
mov
lret
dec
or
lods
aad
mov
adc
jae
xchg
jo
mov
repnz
xchg
arpl
nop
jle
movsl
dec
sbb
add
and
pop
cmp
aaa
not
push
or
mov
clc
pop
std
dec
das
outsl
insl
dec
mov
pop
add
je
dec
mov
jno
cmc
sbb
jns
jo
mov
cltd
push
push
cmp
std
psubsw
insl
and
xor
pop
cmc
in
mov
mov
outsl
xchg
outsb
shll
mov
in
nop
adc
pop
sbb
dec
rorb
xor
push
scas
dec
cmp
aam
adc
popa
jno
sub
jb
lods
scas
mov
and
aam
adc
push
mov
dec
cmpl
in
loope
fmull
mov
ljmp
clc
and
enter
hlt
cmpsb
cwtl
cmp
shll
scas
add
jle
xor
push
cltd
iret
outsb
sbb
pop
test
stos
cmp
fldt
imul
test
jmp
cmp
mull
dec
les
xchg
add
imul
ja
push
mov
pop
rclb
mov
rorl
mov
xchg
imul
and
fcoms
add
loopne
in
pop
sbb
inc
lock
not
out
push
dec
pmaxsw
sub
xchg
imul
and
add
inc
int3
sub
loopne
mulb
jbe
jmp
sub
aad
loopne
imul
loope
and
fnstenv
jmp
push
frstor
cmp
sub
sbb
mov
ljmp
jge
mov
maxps
inc
fbld
cmp
loope
cmp
dec
ljmp
loop
xchg
mov
scas
rcrl
or
stc
test
in
mov
cld
push
cld
in
and
xor
pop
je
sarb
add
ret
repnz
dec
fidivrl
inc
mov
sub
popa
inc
nop
jle
rcl
jb
inc
mov
push
cmp
shll
adc
lret
cmp
aam
mov
or
xchg
push
fstps
fs
dec
adc
jae
jo
dec
xor
sbb
xor
adc
ja
xor
cmpsl
dec
sbb
movsl
and
adc
xor
inc
hlt
or
mov
sbb
jl
pop
cmp
rcrb
sub
into
pop
mov
in
xchg
and
lods
pop
and
decl
ss
rclb
inc
xchg
push
xchg
xorb
loopne
mov
cmp
leave
decl
outsl
add
je
or
fmul
fcmovbe
mov
dec
sbb
push
fwait
add
jg
ds
mov
in
sub
lahf
cmp
dec
cmp
jne
icebp
mov
cmp
cli
push
es
xor
sbb
add
mov
movsb
es
cld
mov
inc
mov
push
mov
in
pop
ljmp
xor
fmuls
push
xlat
sti
cltd
mov
repnz
int
shll
test
adc
cmpsl
inc
xchg
sub
leave
sbb
dec
xor
push
push
arpl
out
jbe
sub
aaa
leave
psubb
pop
dec
dec
inc
jno
bound
fsubrs
xchg
cmp
jmp
dec
xor
loop
pop
pop
sbb
fdivr
push
mov
orl
dec
stos
aad
add
or
rcr
dec
mov
mov
and
mov
sbb
movsb
bound
inc
push
sti
sub
lret
mov
cltd
mov
mov
outsl
push
inc
mov
mov
scas
nop
das
fwait
mov
adc
dec
mov
and
xor
fs
xorb
testl
shlb
or
cwtl
dec
outsl
and
jmp
push
popa
lock
inc
mov
mov
jne
std
mov
pop
insb
sub
or
jb
or
sbb
data16
leave
mov
arpl
jmp
cmp
xchg
inc
jns
clc
xor
repz
arpl
adc
dec
cmp
dec
lods
outsl
subb
jno
jae
mov
movb
inc
mov
cld
push
sub
lret
addb
xchg
or
inc
jnp
rorl
mov
and
add
add
sub
push
cmp
add
add
add
adc
add
inc
cmp
pop
cmp
