add
mov
push
sub
not
push
and
inc
push
or
movswl
push
pop
or
xor
and
xor
or
lea
lea
or
mov
movsbl
pop
and
or
pop
sub
sub
mov
movl
and
movl
mov
mov
mov
movsbl
inc
lea
and
lea
and
mov
lea
add
add
movl
mov
lea
lea
add
push
mov
or
mov
push
sub
lea
neg
mov
add
lea
push
xor
and
mov
shll
add
lea
xor
inc
push
imul
call
add
lea
mov
mov
movswl
mov
not
sub
add
movswl
ss
mov
lea
mov
dec
add
lea
and
dec
not
lea
mov
lea
movsbl
xor
mov
inc
add
lea
mov
inc
lea
lea
bswap
lea
and
sub
xor
and
mov
and
lea
inc
lea
or
imul
lea
sub
add
push
lea
push
lea
inc
push
xor
lea
and
inc
or
add
add
inc
add
and
or
and
movswl
inc
add
push
addl
mov
lea
and
mov
inc
add
and
add
sub
add
push
lea
push
mov
movswl
mov
mov
add
push
push
lea
sub
push
push
xor
push
xor
lea
mov
sub
sub
mov
lea
mov
add
inc
xor
lea
neg
movl
lea
push
add
or
push
lea
mov
push
and
mov
push
xor
inc
push
not
and
push
lea
lea
push
neg
inc
and
lea
inc
lea
lea
mov
and
lea
sub
xor
lea
and
lea
add
bswap
or
push
xor
imul
add
mov
neg
lea
bswap
sub
mov
sub
lea
inc
push
mov
lea
or
mov
imul
mov
and
sub
sub
mov
xor
lea
lea
or
neg
lea
add
xor
push
neg
lea
lea
xor
and
sub
and
xor
inc
sub
mov
add
lea
mov
mov
imul
and
mov
add
neg
and
inc
sub
add
inc
and
add
or
xor
not
add
imul
and
add
addb
and
and
and
sub
lea
mov
inc
imul
mov
add
add
push
mov
and
sub
lea
mov
lea
or
or
lea
lea
movzwl
and
sub
sub
and
and
add
lea
sub
add
lea
inc
mov
sub
add
inc
lea
call
lea
add
lea
sub
lea
inc
and
lea
or
cmpb
je
xor
mov
mov
lea
xorl
bswap
movzbl
inc
mov
xor
lea
movzbl
inc
or
and
mov
mov
xor
shl
imul
inc
mov
sub
add
push
xor
lea
lea
mov
movsbl
popl
lea
lea
and
sub
and
sub
mov
lea
and
and
add
movsbl
lea
pop
lea
jmp
add
push
and
add
push
or
inc
push
add
mov
push
lea
mov
pushl
add
mov
pushl
lea
mov
mov
or
inc
and
not
inc
sub
call
inc
mov
add
and
add
sub
inc
pop
bswap
and
pop
lea
and
pop
inc
or
sub
mov
movzwl
mov
lea
mov
mov
lea
movzbl
mov
mov
sub
mov
sub
mov
xor
not
and
dec
and
and
mov
inc
mov
add
inc
mov
mov
bswap
mov
mov
mov
not
lea
bswap
and
sub
and
neg
mov
sub
inc
movswl
add
incb
sub
sub
and
or
imul
mov
inc
mov
xor
cmp
jb
imul
mov
add
mov
or
push
inc
lea
push
mov
neg
push
sub
add
lea
bswap
lea
mov
lea
imul
xor
imul
sub
xor
or
and
xor
and
lea
push
xor
sub
lea
mov
xor
inc
mov
and
or
mov
lea
bswap
movzbl
add
lea
push
bswap
inc
movzbl
sub
mov
add
inc
movzwl
add
imul
sub
pop
sub
mov
movzbl
sub
or
inc
and
add
mov
sub
mov
cmp
jb
and
xor
mov
add
mov
inc
mov
inc
inc
sub
push
xor
or
lea
inc
and
mov
mov
inc
lea
and
lea
mov
inc
mov
mov
inc
lea
pop
xor
lea
mov
mov
lea
test
jne
xor
lea
and
movsbl
and
lea
add
sub
sub
mov
add
and
mov
lea
lea
xor
add
imul
xor
inc
lea
pop
and
lea
mov
movzbl
or
mov
lea
and
test
jbe
xor
inc
xor
and
movzbl
xor
neg
pushl
sub
or
pop
inc
lea
movzbl
mov
mov
add
mov
and
movzbl
lea
lea
mov
imul
mov
mov
movzbl
movsbl
add
sub
xor
add
mov
imul
movb
and
inc
dec
inc
imul
sub
add
mov
mov
lea
inc
and
inc
not
add
xor
and
lea
mov
and
movb
or
mov
mov
mov
and
and
sub
add
sub
xor
add
lea
add
sub
inc
inc
lea
add
add
imul
movzbl
movzbl
mov
xor
lea
and
sub
movzbl
and
xor
push
inc
lea
xor
movswl
movzwl
dec
lea
mov
mov
and
xor
inc
and
sub
and
sub
lea
or
or
imul
pop
or
or
inc
movswl
mov
dec
jne
mov
pop
and
add
pop
mov
and
pop
neg
lea
add
sub
sub
pop
lea
lea
add
and
mov
push
sub
ret
lea
sub
or
inc
lea
and
bswap
inc
and
inc
lea
add
mov
movzbl
and
inc
add
and
and
and
add
and
lea
mov
sub
and
neg
lea
inc
lea
and
imul
bswap
sub
sub
mov
lea
mov
pushl
sub
lea
push
mov
and
xor
xor
and
mov
sub
xor
add
imul
add
cmp
je
mov
add
imul
jmp
lea
xor
movswl
and
mov
neg
and
lea
add
not
lea
mov
and
mov
lea
sub
mov
mov
sub
lea
inc
add
push
lea
bswap
mov
and
mov
pop
add
mov
mov
sub
and
cmpb
je
mov
push
lea
lea
pop
add
lea
push
add
bswap
push
not
or
push
neg
mov
push
add
mov
push
not
or
push
or
lea
push
sub
mov
call
add
lea
push
and
mov
push
lea
lea
pop
and
movzbl
lods
and
sub
pop
neg
lea
mov
mov
movswl
sub
je
and
push
and
mov
call
lea
and
call
add
lea
call
inc
mov
iret
movzwl
mov
lea
sub
movzwl
or
iret
inc
xor
or
inc
add
lea
movzbl
mov
and
sub
call
not
lea
mov
lea
add
ret
lea
inc
add
xor
mov
ret
mov
lea
lea
and
imul
lea
sub
xor
ret
cmovo
and
add
inc
jne
add
add
repnz
push
push
or
mov
stc
cmp
pushf
hlt
insl
faddl
lret
and
jmp
daa
cmp
notl
push
push
sub
rcl
cmp
popa
jns
xor
sbb
je
outsl
inc
lock
lea
xchg
nop
outsb
aas
dec
stos
xchg
mov
push
push
inc
movsl
out
mov
add
adc
lods
and
imul
mov
mov
push
stos
jmp
aam
in
outsb
push
jmp
sbb
jns
xor
xor
aam
das
sbb
dec
jp
pop
add
ja
or
push
sub
int3
sub
mov
loop
lret
add
sbb
jns
rolb
pop
push
daa
mov
pop
pop
repnz
ljmp
mov
ss
pop
loope
fwait
mov
xchg
int
jne
pop
dec
cmpsb
jp
int3
cli
fistpl
clc
div
into
loope
cmp
jb
aad
test
push
outsb
sub
pop
mov
stc
into
std
sub
push
and
arpl
dec
cmp
pop
pop
test
ds
jnp
or
jmp
ret
imul
adc
stc
fsubp
dec
adc
mov
mov
cs
daa
mulb
movsb
mov
aaa
jg
movaps
pop
mov
jo
add
or
mov
mov
push
das
loop
inc
adcl
pusha
mov
push
inc
fldt
ds
lods
sub
pop
pop
cmpsb
ja
mov
mov
push
add
cld
jp
insb
aad
rcrb
lods
adcb
pop
loope
mov
popa
jle
mov
out
mov
pop
push
ljmp
mov
xor
clc
sti
imul
mov
mov
sub
aas
scas
outsl
in
scas
mov
xchg
sub
sbb
mov
push
stos
pop
lahf
sbb
cmp
insl
xor
fld
mov
push
and
ja
iret
fs
inc
filds
sbb
sbb
fdivr
inc
pop
in
jp
int3
pop
inc
add
mov
movsl
test
aaa
cli
adcb
and
xor
dec
leave
lret
inc
and
and
mov
xchg
mov
cmp
and
add
insb
arpl
inc
lcall
mov
scas
inc
pop
pop
fmuls
icebp
in
or
mov
rclb
sbb
mov
pop
dec
and
and
ss
fnstenv
adc
popf
sub
jmp
aad
ljmp
pushf
lds
je
es
mov
push
lock
sti
jle
sbb
loopne
leave
jp
icebp
dec
sarl
clc
sbb
xlat
xchg
ret
pop
and
dec
sarl
cwtl
mov
sub
fldt
inc
shll
dec
into
sub
push
push
dec
add
push
repz
jmp
inc
mov
cmc
pusha
mov
jnp
lods
icebp
ljmp
inc
mov
dec
lods
into
lret
cmp
bound
orb
pop
popa
cmp
jmp
and
push
pop
shrl
push
add
xchg
jae
push
xchg
ret
adcl
enter
lea
mov
cmpsl
stc
lea
jmp
push
inc
mov
imull
and
cmp
add
lcall
mov
rorb
rclb
inc
mov
frstor
xchg
add
enter
xchg
lcall
sub
sbb
sub
cmp
and
pop
mov
mov
dec
or
shll
mov
lock
add
jge
xor
mov
jae
mov
insb
adc
xor
mov
push
and
lods
xchg
dec
ffree
hlt
pop
sub
jo
push
push
popa
xchg
inc
sbb
fisttpll
xchg
nop
inc
jnp
xor
mov
jnp
xchg
jo
in
adc
cli
push
scas
stos
lcall
insb
out
mov
ja
jge
out
mov
dec
sub
repnz
stos
mov
jmp
icebp
les
add
nopl
ja
xor
fidivl
data16
pop
dec
or
lcall
sbb
fstpl
stc
sti
jnp
adc
out
cmp
loope
inc
es
push
icebp
inc
mov
ds
and
push
or
xchg
inc
or
cmc
scas
mov
and
jge
xchg
dec
inc
inc
rcrl
cmc
cmpsb
mov
xlat
jae
scas
je
repnz
int3
pusha
inc
bound
jge
mov
add
mov
xchg
mov
shrl
dec
fsubrl
push
mov
cmp
lcall
outsb
fwait
aam
bound
dec
call
xlat
and
cmpsl
dec
scas
mov
insb
or
jb
popl
mov
adc
sbb
notb
jmp
test
push
in
pop
stos
cs
xchg
je
hlt
xchg
das
leave
call
mov
sbb
std
test
lcall
ljmp
or
jbe
les
mov
stc
inc
mov
inc
push
les
sbb
lock
jbe
out
push
adc
push
cmp
out
lea
movsb
xchg
or
add
leave
xor
shlb
gs
lahf
mov
ljmp
sub
jb
add
adc
inc
add
jmp
push
insl
mov
xchg
lods
mov
movsb
fstl
movsl
dec
lcall
leave
lahf
ficoms
leave
adc
or
adc
inc
sub
xor
mov
popa
test
sub
sbb
shl
imul
fs
sbb
add
insl
adc
jl
mov
xor
das
sub
cs
ss
cmp
mov
inc
push
test
xlat
xchg
cmp
adc
and
lods
dec
sbb
xchg
ljmp
negl
into
or
cmp
lcall
add
pop
jge
sbb
fwait
cmc
xchg
adc
dec
pop
mov
dec
sbb
jp
xchg
mov
fists
cmp
or
mov
pop
push
ja
add
int3
cmp
inc
clc
outsl
mov
mov
or
lea
enter
aas
mov
outsl
inc
and
or
sti
ret
cltd
out
lahf
out
mov
leave
divb
push
iret
bound
aas
adc
aam
mov
into
movsl
lods
in
sti
pushf
push
xor
clc
add
and
loop
push
fists
sbb
es
call
mov
cmpsb
push
dec
push
or
ss
adc
int
xlat
sarl
mov
out
lods
push
into
dec
jb
cmp
pop
loope
les
cltd
xor
insl
ret
fstl
inc
and
or
sbb
or
mov
ret
cld
mov
movsl
fwait
or
pop
rorl
sti
push
in
fadd
mov
xchg
inc
dec
mov
mov
ds
or
mov
pop
icebp
or
inc
cmp
stos
movsb
adc
push
repnz
or
ja
mov
jmp
insl
in
cli
or
pop
leave
pusha
adc
pop
jge
call
mov
xchg
xor
aaa
xchg
mov
in
ljmp
xorb
cmp
aaa
mov
mov
push
stc
sub
pop
iret
shufps
sub
inc
sbb
shll
add
mov
push
push
fisttps
dec
mov
pop
sbb
or
pop
fisttpll
inc
adc
xor
and
lods
js
add
xlat
lods
scas
jo
cltd
mov
and
sti
mov
insb
inc
stos
xchg
xchg
ds
or
sbb
popa
sti
or
in
cmp
repnz
cmp
xor
fsubp
test
cmp
cmp
jns
sub
pushf
ss
push
mov
adc
fnstcw
xor
fimull
pop
and
insb
push
repz
sub
sbb
xchg
mov
xchg
addl
es
movsb
sahf
mov
cmc
test
je
xchg
mov
std
pushf
jb
pop
sub
mov
adc
dec
mov
sub
int3
cwtl
adc
jl
xor
cmp
lcall
inc
xor
in
inc
sub
es
add
dec
push
inc
fsubl
or
ficompl
cld
nop
adc
mov
notl
sbb
in
inc
out
cltd
in
jb
addr16
pop
mov
inc
fwait
cltd
scas
pop
pushf
mov
inc
fistpl
insb
mov
jmp
fistpl
jecxz
int3
push
mov
out
mov
insl
push
xchg
fwait
insb
xchg
mov
divb
mov
outsb
lea
lcall
iret
push
test
mov
mov
call
out
jp
or
outsl
or
inc
aad
xlat
cmp
add
and
and
mov
push
jae
popf
pop
push
inc
push
ror
shll
mov
divl
repnz
test
out
and
daa
movsb
add
icebp
add
popf
movsb
rolb
push
push
hlt
popa
outsb
add
inc
xor
or
add
cmp
test
cwtl
lea
sub
in
arpl
imul
pop
sub
jne
sahf
push
outsb
test
jl
sarb
cmp
ljmp
xlat
andb
ljmp
xlat
clc
ficoml
push
fwait
adc
call
loopne
insl
mov
xor
sahf
sbb
push
xor
xor
adc
or
cmp
int
ja
fdivl
rcl
addr16
dec
incb
sti
fimull
push
cmp
leave
sbb
xor
test
fstpl
fiadds
inc
push
xor
rolb
inc
push
sbb
hlt
je
jg
test
xchg
int3
fisubrs
test
dec
push
lods
pop
fadd
push
mov
push
jp
jmp
mov
test
pop
ffree
mov
lods
push
mov
lahf
cmp
inc
add
movsb
add
ss
into
jbe
cmp
and
nop
