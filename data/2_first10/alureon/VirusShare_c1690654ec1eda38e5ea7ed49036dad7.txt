and
cmp
push
int
inc
xor
ds
and
pusha
addr16
lds
std
jp
jmp
out
adc
aam
cmp
pop
add
pusha
je
popf
andl
cmpsl
stc
mov
mov
sub
adc
enter
std
jmp
ret
jno
inc
bound
mov
and
sub
data16
into
pop
xchg
pop
jecxz
adcl
mov
mov
icebp
aaa
inc
xchg
inc
jp
inc
leave
sahf
cmp
ret
push
sub
push
adc
adc
mov
cmpsl
dec
xchg
sbb
lret
sahf
and
iret
ds
xchg
push
xchg
into
sbb
std
mov
lret
icebp
sub
push
scas
jg
iret
xchg
cltd
popa
mov
pop
cmp
xchg
fwait
push
and
jecxz
call
sub
dec
mov
sti
ret
shrl
hlt
bound
ret
sub
pop
jo
push
dec
rcrl
outsb
sbb
fisttpll
push
daa
jmp
inc
mov
inc
rolb
mulb
and
pop
popa
pop
push
pop
cld
cli
push
xchg
sbb
lcall
xlat
push
jbe
js
fsubl
mov
sbb
mov
vmread
inc
fmulp
jbe
push
int
scas
xchg
arpl
push
aad
inc
lods
mov
test
pop
sub
xor
mov
fwait
jle
repnz
mov
leave
mov
pop
and
sbb
lods
stc
jbe
movsb
jbe
push
pop
jnp
jbe
sub
add
dec
pop
jecxz
or
ret
mov
or
stos
cs
stc
in
clc
repz
shl
jecxz
and
inc
cmp
jecxz
adc
sahf
inc
sbb
mov
stos
push
addr16
int
jmp
movsb
xor
adc
test
adc
lock
lcall
or
int3
dec
mov
xchg
fists
mov
pop
lea
sbb
mov
jbe
push
clc
sub
fcmovnb
ljmp
nop
dec
mov
sub
xchg
adc
sub
and
push
int
adc
cltd
mov
aad
repz
push
sub
mov
imul
pusha
jmp
shr
mov
imul
lcall
test
inc
pop
jl
adc
iret
add
mov
les
mov
adc
mov
rcll
gs
stos
add
ljmp
sub
xchg
inc
mov
nop
cld
xor
jmp
xchg
cmp
movaps
cmc
mov
sbb
pop
lea
test
inc
xchg
inc
jb
sbb
scas
test
add
sbb
sbb
arpl
in
xor
jo
dec
push
insl
gs
int3
test
call
cmp
mov
ss
jbe
movsb
cwtl
ljmp
es
gs
clc
inc
fstpl
cmp
leave
push
sub
sbb
mov
and
mov
loope
es
pop
in
cmp
jbe
add
or
subb
or
adc
cmp
jno
fimull
imul
enter
adc
mov
xchg
mov
cmp
mov
sbb
in
or
int3
repnz
add
mov
sbb
imul
inc
inc
repnz
cmp
shrb
cmp
in
fiaddl
sbb
push
sbbb
mov
xlat
push
push
or
aam
lret
imul
jnp
lret
adc
in
imul
fwait
dec
sti
shlb
push
or
icebp
push
fsubrs
pop
insb
and
xchg
sub
cmp
dec
pop
jnp
out
inc
jo
mov
test
es
jae
jl
mov
inc
cmp
invd
inc
es
mov
repz
add
xor
dec
jp
pushf
mov
out
and
adc
loope
cli
mov
stos
or
sub
insb
outsl
push
pop
sbb
inc
repz
ret
sub
lret
adc
imul
mov
lcall
or
outsb
ret
push
fnstenv
jp
jecxz
call
lahf
dec
dec
jge
loop
fiaddl
adc
aaa
jmp
cmpl
add
pushf
fistps
and
xor
mov
data16
lret
jge
jmp
pop
movsb
inc
push
push
vcmpsd
enter
test
popa
and
adc
mov
and
popa
pusha
adc
push
adcb
xchg
dec
loop
ljmp
jnp
stos
rorl
mov
in
cmc
pop
xor
mov
jmp
pop
mov
in
rorl
lods
cld
pop
pop
jmp
in
cmp
sub
push
inc
psubb
imul
ror
popw
add
xchg
xchg
mov
jne
adc
jb
lret
out
pop
aad
fldenv
in
and
ds
mov
aad
orb
pop
xor
sub
mov
xor
addr16
inc
fwait
xor
rep
test
int
add
jp
mov
pop
dec
inc
jns
jle
clc
mov
push
mov
mov
mov
call
mov
dec
call
push
dec
call
or
movsbl
sub
and
and
inc
call
movswl
sub
dec
movsbl
imul
mov
inc
dec
imul
add
imul
dec
dec
call
inc
add
mov
lea
mov
call
sub
mov
call
dec
lea
add
mov
mov
or
add
inc
dec
pop
mov
add
add
movswl
pop
inc
dec
pop
mov
dec
and
lea
pop
movzbl
mov
mov
imul
lea
inc
inc
add
pop
inc
dec
pop
inc
inc
mov
imul
inc
call
inc
inc
lea
add
ret
inc
mov
push
add
inc
push
xor
push
inc
sub
push
dec
or
push
sub
inc
mov
dec
sub
push
lea
ret
push
mov
movswl
sub
or
inc
dec
mov
push
lea
mov
dec
call
pop
ret
jmp
sub
and
movswl
dec
movzbl
mov
dec
xchg
mov
lea
imul
sub
xor
mov
inc
and
xor
inc
inc
inc
dec
jne
mov
mov
and
inc
pop
lea
movswl
pop
and
imul
pop
inc
sub
mov
sub
inc
movswl
dec
imul
inc
lea
add
add
ret
push
push
dec
inc
push
lea
inc
lea
mov
or
movswl
push
lea
or
add
lea
push
dec
mov
mov
inc
sub
add
inc
push
inc
mov
inc
push
inc
and
xor
mov
xor
push
dec
imul
push
and
mov
pushl
lea
call
mov
add
mov
and
or
lea
lea
movswl
sub
pop
ret
add
cmp
jb
xor
sub
add
mov
movsbl
add
mov
or
lea
inc
lea
lea
sub
add
dec
inc
mov
dec
lea
cmp
jb
inc
pop
imul
add
lea
sub
dec
imul
inc
xor
inc
add
inc
inc
dec
xor
dec
dec
xor
inc
mov
mov
mov
lea
test
jbe
inc
imul
dec
inc
add
add
sub
movsbl
or
and
add
mov
mov
mov
movzbl
movzbl
inc
add
inc
add
and
and
add
mov
dec
inc
mov
inc
mov
mov
mov
add
mov
dec
add
mov
sub
dec
jne
movzbl
mov
xor
imul
add
xor
and
xor
or
dec
sub
mov
inc
mov
dec
dec
imul
and
lea
add
mov
lea
sub
test
jbe
mov
mov
mov
mov
add
mov
inc
dec
imul
dec
sub
inc
add
inc
and
inc
lea
dec
dec
inc
mov
movswl
and
sub
mov
mov
dec
movswl
movzbl
imul
add
add
mov
lea
and
mov
add
mov
add
and
movzbl
sub
inc
mov
sub
dec
mov
dec
imul
movzbl
or
dec
add
or
jmp
push
lea
mov
dec
dec
add
xor
add
mov
inc
inc
add
imul
add
and
dec
mov
or
inc
add
dec
dec
and
lea
imul
dec
mov
inc
dec
movsbl
inc
mov
sub
sub
mov
sub
lea
imul
lea
lea
cmp
je
inc
dec
add
push
lea
call
call
dec
dec
call
call
lea
inc
mov
add
xor
mov
mov
ret
sub
mov
pop
inc
ret
push
sub
lea
add
inc
imul
push
dec
dec
push
dec
push
lea
push
mov
add
add
dec
add
call
dec
push
dec
sub
xor
mov
sub
add
neg
mov
movzwl
mov
mov
mov
dec
mov
mov
and
mov
or
inc
inc
mov
inc
dec
je
mov
lea
add
mov
mov
sub
mov
mov
lea
mov
mov
repnz
dec
imul
add
inc
jmp
dec
mov
movzwl
mov
or
mov
add
add
jmp
mov
inc
imul
dec
inc
sub
lea
lea
pop
pop
ret
push
sub
mov
inc
movzbl
inc
sub
inc
movzbl
inc
dec
sub
sub
mov
add
sub
inc
sub
or
inc
add
lea
sub
add
lea
lea
dec
dec
pop
ret
sub
inc
mov
and
mov
mov
mov
mov
mov
mov
inc
mov
mov
sub
xor
sub
mov
mov
dec
add
inc
mov
inc
sub
mov
lea
inc
cmp
jb
lea
push
lea
dec
push
add
mov
push
sub
mov
xor
sub
mov
xor
add
lea
xor
mov
imul
push
mov
dec
mov
imul
inc
xor
add
add
mov
mov
mov
dec
movswl
movzbl
or
add
dec
add
inc
mov
add
and
lea
movzbl
add
inc
lea
inc
imul
inc
dec
mov
mov
inc
lea
lea
dec
jmp
sub
push
das
and
mov
inc
ja
dec
lods
mov
adc
lods
jmp
aas
fsubr
push
leave
or
push
lds
adc
dec
fmull
sbb
push
repnz
lret
or
add
arpl
xchg
das
loope
fcmovnbe
testb
outsb
push
add
cmp
je
in
jno
xchg
inc
int3
and
or
push
jbe
orl
rcl
pop
ret
and
sar
jb
inc
and
cs
shll
daa
or
or
adc
mov
and
sub
imul
dec
mov
push
test
js
shll
push
xchg
and
and
movsl
push
adc
and
into
jb
in
fnstcw
clc
push
hlt
push
lock
mov
test
sub
scas
pop
pusha
js
sarb
out
sbb
jp
repnz
adc
ss
test
imul
push
inc
shll
xchg
sbb
loopne
fisubrs
inc
add
mov
cmp
xchg
sub
jg
iret
std
mov
divl
jl
testb
jns
add
sar
dec
scas
cmp
fidivrs
fnstenv
gs
push
xor
mov
cltd
jmp
imul
mov
lea
xor
adc
jge
push
sbb
mov
sbb
add
mov
jecxz
ret
add
ljmp
popf
dec
add
xchg
adc
xchg
cmp
shl
push
imulb
int3
mov
int
jne
insb
dec
push
repnz
inc
sbb
rcl
ret
insl
icebp
jl
lods
mov
fcmovbe
push
xchg
es
mov
add
lea
jp
pushf
push
mov
repnz
jo
dec
jl
xchg
outsb
mov
cltd
jge
inc
lea
cmp
rorb
subb
xchg
sub
xchg
shll
aam
inc
push
ss
inc
fsubrs
gs
xchg
xchg
adc
test
clc
imul
mov
repz
out
sbb
lahf
sbb
repz
sub
out
mov
xor
testb
into
jg
sbb
btc
cmp
jl
xchg
jb
fdivrs
loop
test
out
mov
xchg
in
inc
inc
mov
fists
mov
mov
mov
push
dec
push
xchg
inc
fiaddl
lret
ja
lea
pop
iret
test
sbb
fsubl
mov
int3
push
repz
mov
or
loopne
pop
xor
cmp
and
adc
inc
imul
cmpsb
inc
mov
mov
fimuls
inc
or
push
lret
and
inc
xchg
rcl
in
mov
push
mov
sub
fmuls
or
add
cld
daa
lea
sub
cld
mov
or
mov
out
mov
cmp
cmpsb
ja
aad
es
sub
mov
out
jo
cs
les
or
push
clc
sub
lcall
enter
je
xchg
test
pop
fmuls
pusha
push
lret
lret
xchg
sub
mov
push
scas
out
sbb
cltd
sub
xchg
push
das
cmp
imul
pop
sbb
stos
pop
ja
cmpsb
lods
or
adc
sub
jmp
jmp
faddl
ja
int
jns
adc
add
rcrb
ror
imul
outsb
imull
push
fiaddl
sub
xchg
fsubs
iret
pop
sub
adc
add
lret
pop
into
shll
push
loop
imul
ja
jb
aas
fdivrs
je
roll
jmp
jl
mov
xchg
stc
and
xchg
mov
add
fldl
jecxz
fists
push
das
shlb
aad
cmpsb
and
aas
add
xchg
inc
aas
inc
mov
mov
les
inc
mov
pop
les
cmpsl
add
outsb
xor
pop
adc
xorl
sbb
popf
adc
mov
push
or
jmp
js
ret
ds
push
fcomps
fisubrs
or
and
addr16
subl
push
ss
in
mov
icebp
adc
xor
stc
lret
or
dec
xor
rorl
fadds
ja
or
sarw
push
cmp
mov
clc
std
popa
xchg
imul
add
leave
sub
push
push
mov
imul
sti
xor
pop
shll
pop
adc
or
mov
loop
and
inc
icebp
mov
jl
xorb
xor
push
add
mov
rcrl
dec
mov
pop
inc
test
sti
sbb
into
jb
rorb
mov
or
xor
in
outsb
jns
mov
insb
lds
pop
adc
push
sarl
adc
ficompl
push
out
push
sbb
fsubs
cmp
insb
fidivrs
or
cmp
sahf
loopne
lock
add
push
or
lods
mov
mov
inc
cmpsb
adc
and
lcall
jp
lds
mov
cmp
mov
fs
mov
jns
sbb
sub
jmp
test
loop
mov
add
test
adc
pop
repnz
loope
orl
lds
sbb
arpl
dec
adc
scas
cs
mov
fbld
imul
les
mov
sbb
ljmp
jg
adc
or
xchg
roll
aaa
push
aam
ljmp
int3
mov
pop
cmc
xchg
je
push
sahf
leave
in
jmp
cld
push
jno
push
pusha
push
mov
imul
dec
in
mov
mov
popa
rolw
call
add
xorl
jge
and
outsb
add
ja
sub
dec
pop
jne
js
or
arpl
dec
dec
lret
mov
add
rcrb
inc
mov
and
pop
dec
mov
out
ficompl
notb
xlat
adc
cmp
enter
lea
imul
mov
popa
jnp
ret
inc
jnp
in
repnz
mov
pop
loopne
js
rorl
inc
mov
aas
popf
aas
jecxz
in
xor
xor
test
cwtl
adc
leave
lret
and
mov
pushl
mov
cwtl
addps
out
push
idivl
or
dec
add
xchg
jecxz
cmp
xor
out
push
arpl
sbb
dec
sbb
inc
add
push
ss
das
pusha
mov
dec
fstps
mov
rcrb
or
fwait
mov
adc
lcall
sub
sub
push
add
adc
cld
aad
add
sub
popf
sbb
mov
das
rdtsc
adc
cli
mov
sahf
mov
in
mov
pop
dec
test
test
mov
push
fisubrl
xchg
out
daa
das
push
lods
out
xor
hlt
cli
jp
incb
add
and
pop
cmpsl
push
mov
out
push
sub
and
nop
add
fcmovnbe
pop
ja
std
gs
jne
cli
sub
out
aaa
cmp
outsl
lcall
repnz
sarl
mov
xchg
fs
flds
add
jno
std
out
mov
mov
mov
pop
add
push
dec
sub
mov
push
xor
decl
outsl
xlat
inc
arpl
in
pop
ljmp
add
out
cs
mov
movsl
movsb
or
fsubs
insl
stos
aas
inc
pushf
xchg
mov
test
out
out
and
push
adc
sbb
push
stos
push
add
xchg
nop
dec
sub
inc
mov
inc
ljmp
inc
out
inc
mov
push
das
das
jge
xchg
mov
vcvttss2si
xchg
mov
add
fdiv
push
lock
jmp
shlb
push
call
repnz
xor
or
icebp
data16
xor
cld
sbbl
push
inc
aam
and
sarl
mov
add
or
jnp
negl
inc
push
mov
clc
xlat
xor
push
mov
insl
cmc
mov
mov
inc
in
stos
xor
push
ret
xchg
cmp
movsb
out
push
gs
jno
mov
pop
insb
cmp
jmp
cmpsb
fdivrs
xchg
xchg
dec
jns
fisubl
push
movsl
mov
data16
pop
dec
ret
push
pop
and
xor
jne
daa
push
lods
lea
pop
scas
dec
adc
int3
jo
icebp
insl
jle
std
int3
jbe
stos
add
bound
push
sbb
jle
jb
mov
jge
jno
or
mov
test
ret
jl
mov
mov
daa
pushf
scas
sub
pushf
pushf
outsb
rolb
data16
mov
jg
and
cmp
mov
add
add
adc
add
jae
mov
sbb
and
mov
bound
les
repz
jge
aaa
js
dec
imul
xor
movsl
pop
shll
cmp
mov
movsl
xchg
push
xor
pop
cmp
or
loopne
sub
mov
sub
mov
movntq
out
iret
fs
push
fdivrl
aas
movsl
jne
scas
cmc
ljmp
push
fwait
dec
dec
rolb
fisttpll
cld
push
aam
out
xchg
mov
stos
popa
adc
into
fldl
mov
loopne
popf
lret
adc
in
fldcw
in
push
fnstsw
call
scas
movsl
xor
mov
inc
das
push
leave
mov
cltd
dec
jg
nop
inc
sbb
sbb
and
mov
or
sti
jl
fdivrl
lret
clc
or
dec
and
sub
push
out
push
loope
cmp
stc
fisttpl
cmp
pop
pushf
lret
ret
push
sbb
jecxz
adc
dec
sbb
inc
xor
idiv
add
sbb
inc
mov
jnp
sub
pop
movsb
xor
inc
icebp
jnp
xor
leave
and
xchg
adc
and
sbb
imul
mov
flds
inc
lock
sbb
clc
cmp
mov
jne
gs
mov
aad
add
xchg
je
jp
lret
adc
out
jb
xchg
jmp
ja
addb
negb
shl
cli
mov
mul
fistpl
jecxz
cmp
mov
sub
stos
push
adc
xor
loop
add
sub
mov
addr16
js
flds
xor
jg
sahf
and
daa
enter
or
stc
push
push
js
sti
mov
xorb
std
jae
xchg
ja
xor
lea
pop
out
sti
bound
push
mov
sbb
lods
mov
inc
aad
sbb
dec
add
call
inc
out
rcll
mov
adc
addr16
lret
push
fcmovb
push
pusha
xor
sar
sbb
loopne
sbb
ret
mov
outsb
cwtl
jno
sbb
sbb
mov
jns
fstps
xor
xorb
push
mov
mov
jmp
cmp
dec
sub
loop
jg
adc
push
rclb
hlt
cltd
jecxz
mov
orl
and
scas
daa
jb
and
int
inc
mov
pop
fadd
mov
jmpw
and
pop
sub
add
pop
les
and
dec
stos
jo
stos
mov
lods
push
stos
gs
mov
jge
inc
mov
pop
out
pop
andl
xchg
xchg
inc
popf
xlat
adc
addb
push
sub
cmpsb
push
sub
or
mov
adc
scas
mov
xor
inc
push
xor
push
fsubs
push
inc
jg
xchg
jle
inc
rorb
mov
pop
xchg
out
stc
aad
cmp
inc
fidivl
fisttpll
mov
jle
adc
loope
sub
and
or
outsl
push
add
shl
out
lret
hlt
or
or
ret
pop
lret
cmc
cmpsl
rcrb
mov
int3
pop
in
aam
shlb
inc
sub
test
clc
or
idivl
push
js
add
mov
test
jne
sbb
ds
push
popa
hlt
mov
fs
js
sub
jb
leave
in
mov
and
sbbl
push
ja
test
loope
ja
movsl
sbb
mov
xlat
or
jno
jp
and
inc
adc
jno
jmp
movsl
xchg
cmpsl
mov
mov
mov
pop
daa
add
fistpll
aas
xchg
icebp
sub
stos
push
dec
pop
movsb
flds
pop
ljmp
mov
push
or
xor
testb
jmp
xor
mov
gs
push
or
or
aam
mov
xor
pop
nop
cmpsl
pop
outsb
push
pop
pop
mov
inc
out
stc
cmpsb
cmp
adc
sbb
dec
std
scas
hlt
cwtl
clc
xchg
shll
push
xor
call
cmp
in
negl
imull
mov
insb
fcomps
pushf
in
in
mov
jb
out
ljmp
cmp
mov
out
fwait
leave
out
je
into
and
add
cwtl
or
sbb
scas
rcr
cmp
cmp
pushf
enter
cmp
in
adc
sarb
minps
xchg
incl
push
sbb
push
ss
pop
push
dec
pop
addl
mov
dec
mov
rcrb
fldenv
jecxz
adc
cli
mov
xlat
add
aam
sarl
inc
ja
jl
call
ror
push
pusha
lcall
inc
popf
in
les
jnp
jg
std
stc
movsl
sbb
lods
mov
loope
and
push
sbb
cmpsl
insb
cwtl
roll
js
xchg
lret
pop
jmp
and
and
and
gs
mov
fs
xchg
pop
add
jl
or
loop
aas
pop
sbb
leave
js
lds
cmp
adc
in
push
sahf
fldt
inc
icebp
mov
adc
dec
mov
movhps
fdivs
aas
or
xchg
ljmp
fsubrs
mov
mov
cmpsl
push
movsl
lds
lock
jg
jno
movsb
sbb
sub
sub
sarl
jle
dec
xchg
in
sbb
jle
add
dec
mov
dec
xor
scas
ds
push
sahf
daa
or
push
jno
imul
lret
out
andb
jo
xor
mov
xor
fsubrl
mov
or
pusha
xor
insb
cmp
mov
or
jbe
scas
ret
cwtl
aam
adc
scas
add
ja
js
mov
je
mov
pop
push
shl
jmp
int
cmc
ficoms
faddl
js
cmc
jge
es
shl
sbb
lea
movsl
xchg
adc
int3
jns
sarb
sub
adc
paddsw
xchg
jae
jl
in
loope
and
pop
mov
iret
mov
sbb
mov
push
mov
mov
loope
in
add
xor
imul
test
mov
cmp
push
into
xchg
pop
xchg
or
daa
push
lret
jno
bnd
sbb
mov
jb
cmp
test
jmp
push
pushf
and
cmc
sub
push
fidivl
sub
push
add
fidivrs
clc
sub
mov
inc
pushl
xor
cmp
and
loopne
push
dec
pop
lock
dec
out
mov
mov
adc
push
cmp
fildl
pop
cs
cmp
add
sub
repz
hlt
add
mov
scas
in
hlt
lret
andb
inc
mov
jae
pop
dec
sbb
rcr
push
pop
jbe
pop
pusha
inc
mov
cli
in
mov
stc
mov
push
mov
mov
lock
dec
mov
aas
mov
xchg
pop
imul
sub
stos
xor
and
xor
mov
fs
add
sbb
cmp
xchg
nop
les
mov
xlat
out
mov
or
or
xor
test
popa
es
stc
push
jbe
aad
shrb
mov
pminub
jb
jne
mov
push
pop
dec
dec
mov
xor
jl
xchg
jne
dec
sahf
cs
ss
jp
xor
in
jp
outsb
out
test
sub
mov
das
test
push
inc
jmp
mov
or
sub
push
aaa
pop
cmp
adc
aam
imul
adc
mov
sbb
dec
pop
scas
mov
lahf
sbb
shrl
popa
mov
in
push
in
call
lcall
inc
orb
inc
mov
inc
outsb
fadds
and
stos
test
add
ret
fsubrs
test
test
or
mov
iret
dec
icebp
cld
pop
jmp
mov
test
int3
dec
mov
aad
push
scas
shrl
mov
adc
aad
cmpl
xlat
pop
jb
mov
push
lods
push
mov
adc
jecxz
xchg
push
fld
dec
inc
mov
rorl
sub
dec
test
fstp
test
add
scas
pusha
arpl
ljmp
ss
in
call
aas
int
sub
or
xlat
mov
mov
mov
xchg
imul
loopne
les
lods
negb
dec
mov
imul
syscall
mov
xor
pop
sti
cmp
jns
push
jmp
and
mov
xchg
pop
and
mov
aaa
ds
push
push
into
jns
adc
or
push
xor
ds
and
je
jle
dec
xor
pop
mov
cltd
fsubrl
sbb
rolb
and
frstor
shl
push
mov
int3
out
jle
fisubrs
ss
ror
dec
lods
xor
jnp
sbb
cwtl
test
push
jg
imul
cwtl
mov
jbe
std
or
or
dec
enter
cmp
inc
lods
clc
lock
addr16
push
jl
lods
push
pop
js
pop
and
kmovb
das
xchg
sbb
sbb
jno
mov
cmp
push
xlat
loope
mov
ljmp
cmp
cmpsb
call
jmp
jmp
int
mov
outsb
pop
in
insl
mov
iret
push
xchg
neg
sarb
sbb
cmp
jnp
outsl
mov
mov
sbb
mov
push
dec
push
dec
stc
mov
pop
jae
adc
add
mov
sbb
xchg
sub
mov
nop
dec
repz
mov
fisttpll
pop
push
pop
add
and
and
jp
mov
fiaddl
xchg
and
inc
xchg
mov
push
push
cmp
vdivss
in
icebp
push
pop
cli
push
int3
enter
imul
rorb
aas
xor
cmp
imul
clc
arpl
loope
mull
or
rcll
std
xchg
add
and
in
push
aaa
sti
pop
mov
pusha
xorb
nop
popa
and
pusha
into
sti
iret
popa
and
push
or
repz
jns
dec
add
push
and
sub
je
bound
adc
testb
repnz
test
xchg
mov
sub
pusha
repz
fldenv
ffreep
bound
repz
sbbl
sbb
rcrl
cmpsb
mov
stc
mov
add
xor
jp
inc
scas
daa
or
aam
nop
push
and
pop
in
mov
dec
mov
inc
xchg
sub
bound
pop
xor
shlb
xchg
add
and
pop
dec
mov
push
lret
sbb
xchg
mov
test
push
sbb
mov
pop
push
pop
int
push
sbb
leave
jecxz
pop
sub
jg
inc
dec
pusha
lahf
outsl
xchg
pusha
mov
sub
stc
jo
decb
lahf
pop
jno
out
mov
add
xlat
dec
movl
or
pop
push
jmp
aad
leave
sub
pop
test
lods
mov
fsub
cmc
ja
mov
inc
jg
aam
call
or
jnp
jge
sbb
outsl
sub
pop
ret
push
nop
push
cmp
aam
mov
shrb
xchg
shlb
sub
dec
arpl
sbb
rcrl
clc
sbb
daa
jl
fcom
and
xchg
shrl
pusha
mov
loopne,pt
dec
push
jbe
jecxz
mov
pop
stc
push
fwait
push
std
jmp
clc
lret
imul
pop
lock
dec
xchg
movl
jnp
jb
and
into
cs
pop
fwait
inc
test
lret
mov
loop
inc
fs
push
cmp
ja
adc
hlt
scas
scas
mov
xor
into
mov
mov
repz
cli
xchg
popa
lahf
lods
dec
push
cmp
xchg
nop
js
sub
mov
xor
add
nop
pop
add
js
cmpsb
ret
xchg
inc
pop
lock
daa
cld
or
dec
mov
or
loope
pop
lea
hlt
out
adc
xor
lret
mov
push
push
lahf
loopne
push
push
aam
sbb
jo
ficoml
outsb
test
xorl
scas
mov
arpl
cmpsb
arpl
dec
out
inc
inc
cld
pcmpgtd
inc
mov
inc
dec
rcll
jg
xchg
nop
enter
sti
test
jmp
mov
fsubrl
arpl
arpl
les
and
pop
sub
das
lahf
jae
sbb
inc
fdivr
in
or
sahf
inc
leave
push
lcall
mov
cmc
lcall
lcall
lods
push
cmp
jne
push
les
and
fwait
cld
aam
dec
pop
addr16
not
sub
int3
cli
mov
mov
and
movsl
out
aam
stos
mov
pop
adc
sahf
loopne
out
and
and
std
je
lods
in
mov
cltd
ss
mov
cmp
jnp
insl
cmpsl
sub
mov
enter
cmpsb
ss
lock
rcrb
adc
mov
pop
dec
loope
xor
and
mov
xor
pop
test
int3
add
js
xor
out
mov
mov
test
fcmovnbe
or
add
jb
xor
xchg
cmp
sbb
out
pusha
xor
in
dec
je
cld
pop
popa
stos
push
test
sti
mov
cmp
test
shlb
movntq
out
jg
aam
mov
pop
push
mov
cmpsb
sub
adc
mov
addr16
clc
imul
sbb
lret
inc
out
sub
sbbl
sbb
aaa
call
push
cmc
sub
sbb
xor
les
mov
adc
sub
es
pusha
push
adc
xchg
sub
pop
xchg
call
loope
repnz
aaa
fidivl
lahf
iret
or
jb
adc
shll
pop
push
dec
in
or
lods
pop
ds
imul
push
jno
cmp
mulb
pop
fnstcw
out
cmp
adc
imul
test
cmpsb
adc
movsl
sbb
push
movsb
dec
xor
jb
int
xor
les
je
fmull
adc
movsb
or
ja
andb
mov
insl
test
adc
or
mov
and
push
mov
sub
frstor
lret
mov
adc
or
jb
push
es
xor
jnp
or
jae
jnp
shlb
int3
aam
scas
sti
out
out
aas
aas
ret
jno
and
and
jbe
das
cmp
fwait
push
jns
adc
out
out
xorb
loop
fdiv
jbe
xchg
int
sbb
test
es
cmp
lock
std
mov
mov
and
inc
js
movsb
dec
fisubrl
pop
xor
jmp
arpl
push
sbb
pop
xchg
out
popa
sub
inc
xchg
adc
sub
dec
outsb
dec
frstor
imul
and
xor
dec
rolb
inc
cmpsl
test
or
je
cmp
cmp
pop
cmp
mov
mov
loopne
sub
std
cli
adc
retw
cli
sub
xor
or
cmpsb
sub
imul
and
push
mov
jno
sub
xchg
mov
nop
jl
push
icebp
and
jp
lods
jbe
jae
pop
xchg
aad
rclb
loopne
mov
cli
fcoml
aas
stc
loopne
stc
mov
sbb
imul
mov
lret
mov
xchg
lret
jecxz
jp
cmp
xchg
int
shrl
pusha
ljmp
sbbl
mov
aam
mov
mov
cs
aas
pushw
jp
shr
jge
cmp
mov
cltd
leave
mov
mov
xchg
sub
lods
pop
repz
push
in
dec
in
push
repz
cs
les
sbb
pushf
insb
adc
ja
jb
xor
iret
xor
add
incb
insb
add
nop
daa
shrb
sub
push
or
hlt
mov
jmp
int
cmpsb
jns
mov
sub
mov
add
call
or
jg
sbb
cmpsl
test
push
mov
mov
push
jge
loop
xor
xor
jl
daa
loopne
lret
out
sbb
or
gs
cwtl
adc
inc
inc
fnstcw
arpl
aaa
jp
or
pop
iret
sbb
xorb
outsl
subl
mov
mov
sub
jecxz
movsb
jge
add
repz
dec
loop
test
sub
jl
mov
jbe
xor
mov
mov
ss
dec
int3
and
lret
inc
btsl
cmpsl
cmp
lahf
jge
add
jl
repz
pusha
jle
fisubrl
and
mov
cmp
sub
mov
mov
jle
data16
push
sbb
jno
sbb
mov
fstps
pop
popf
mov
jl
push
aas
xchg
scas
adc
push
repz
push
or
mov
arpl
loopne
jnp
loopne
rolb
shll
mov
pushf
outsb
stos
xor
stos
pop
lcall
js
arpl
xor
pop
shrb
imul
jmp
test
push
sarb
jno
scas
inc
std
icebp
and
inc
mov
movsb
stos
adc
mov
add
mov
xchg
daa
jns
ja
inc
pop
mov
insb
int
cltd
cmp
shll
sub
mov
sbb
pop
ja
icebp
and
jecxz
push
cmp
mov
jae
dec
imul
sbb
aaa
push
push
popa
sahf
dec
gs
push
cs
sti
ret
hlt
jge
rorl
stos
das
out
aam
mov
in
xor
adc
sbb
dec
sub
mov
daa
lock
lret
add
daa
sub
jae
mov
sbb
mov
pusha
lods
sub
push
dec
adcl
loop
fsubrp
mov
jle
add
enter
jo
sbb
int
rcl
xchg
cmp
adc
mov
shlb
nop
adc
lcall
push
mov
mov
xchg
jmp
xchg
scas
repnz
scas
cltd
in
icebp
pop
das
idivl
loope
cmp
lock
mov
les
fs
das
push
inc
jle
adcl
outsl
call
sub
jo
outsb
fstps
std
leave
xor
cs
stos
jb
popa
push
repz
scas
inc
push
sub
jge
dec
jne
repz
aad
incb
cmp
mov
lahf
jae
xorl
jno
sbb
lods
mov
push
inc
jmp
cmp
push
sbb
xchg
das
pusha
push
mov
sbb
sub
loopne
mov
mov
push
insb
adc
mov
inc
xor
insl
lret
push
pop
test
pop
pop
xor
push
lock
cmp
inc
popa
inc
xor
pop
lds
xchg
outsl
xor
xor
adc
mov
mov
jbe
pop
fbstp
add
rcrl
pop
jnp
jae
lock
testl
sub
out
xor
out
inc
jns
push
ret
cmp
or
push
mov
sbb
aaa
sar
lret
xchg
test
dec
dec
sbb
lock
iret
out
mov
arpl
push
jns
int
inc
sbb
rcll
pop
inc
xor
jge
adc
dec
pop
dec
sub
or
push
imul
rcrb
mov
scas
jae
cs
in
jbe
push
adc
mov
inc
ljmp
inc
cmp
sti
bound
ror
inc
test
ret
or
jmp
mov
ja
inc
pushf
lods
cmp
ret
out
cmp
into
int
sub
sub
adc
mulb
cmpl
ret
stos
pop
push
xchg
out
test
insl
adc
mov
sti
pop
push
pop
js
inc
lcall
xor
inc
leave
add
fwait
jmp
and
jge
mov
das
inc
push
faddp
out
push
bound
hlt
adc
dec
fs
dec
fildl
fwait
push
dec
in
sti
out
popf
inc
push
inc
xlat
push
jno
pop
cmpsb
dec
pop
cltd
out
add
sub
movsb
ljmp
clc
jmp
stos
jecxz
aad
in
mov
mov
cmpsb
dec
add
xor
or
repnz
push
or
adc
jg
das
jne
pop
add
rorb
ret
mov
aam
test
push
cmp
adc
lret
xor
lret
into
loope
cmpsb
inc
push
mov
mov
gs
daa
push
out
lods
xchg
adc
jo
adc
stc
xchg
shll
stc
cli
mov
movsl
xor
into
xchg
fwait
xor
mov
adcb
push
fadds
sbb
xor
xchg
mov
mov
ljmp
mov
shll
orl
dec
mov
lcall
aas
daa
scas
ret
imul
xchg
or
mov
les
xor
xchg
mov
adc
push
xchg
repz
add
scas
adcb
fs
ja
arpl
xlat
push
call
jb
mov
and
sbb
dec
cmc
outsb
in
hlt
pop
lret
notb
out
mov
outsb
pcmpgtw
mov
push
int
mov
pop
xor
add
mov
clc
sbb
mov
or
sub
inc
mov
negl
repnz
lock
pop
push
bndstx
inc
dec
mov
cld
push
and
pop
xor
pop
inc
int
aam
int
sahf
dec
mov
lds
and
adc
movsb
xchg
imul
inc
or
mov
in
add
inc
fst
pop
lock
adc
cs
inc
stc
and
out
mov
mov
lods
jae
lds
test
and
shll
ja
gs
leave
in
push
in
push
and
enter
and
mov
add
testl
cmp
cmp
push
ljmp
add
mov
add
bound
adc
outsl
and
mov
cs
popa
stc
popa
loopne
dec
mov
sbb
cmp
mov
sarb
call
jle
pop
dec
dec
mov
xor
xchg
push
xchg
lods
pushf
adc
cmp
aaa
sub
fdivl
xchg
enter
push
push
xchg
adc
add
testb
adc
fwait
sbb
mov
bound
cltd
in
dec
arpl
leave
cmpsb
or
enter
arpl
adc
lods
jbe
adc
fs
xlat
in
cmp
jbe
and
dec
inc
ror
adc
sarb
cmp
jns
mov
jl
dec
stc
test
mov
les
popf
sub
inc
and
mov
pop
adc
pop
mov
sbb
jae
jge
loope
sub
repz
pop
mov
in
mov
xor
mov
xchg
adc
mov
mov
mov
fdivl
fimuls
xor
leave
jmp
pop
pop
xchg
jl
lret
fbld
int
aam
dec
int
xchg
shlb
and
cmpsl
or
popf
inc
jne
gs
mov
shrl
sub
in
or
nop
ss
sbb
call
lcall
into
in
sub
inc
movsb
jnp
push
adc
or
add
aad
lret
arpl
jge
mul
lods
sbb
add
cmp
in
ret
aam
cmp
pop
mov
jle
int3
movsb
and
lea
aam
fisttpll
std
fs
test
add
sub
fmul
cmp
fwait
pop
leave
loop
test
leave
inc
out
call
push
lret
mov
xor
xor
ds
adc
dec
mov
faddl
nop
into
dec
leave
lahf
cmpsl
daa
sub
dec
popf
mov
adc
fdivp
or
pop
add
adc
dec
scas
call
test
mov
packssdw
xchg
jbe
mov
and
ss
aaa
mul
ja
fs
mov
js
adc
pop
pop
xlat
push
ljmp
push
ljmp
lahf
stc
lcall
es
es
imul
loopne
mov
or
arpl
cwtl
adc
mov
push
jae
pusha
je
mov
cmp
loope
clc
movsb
call
fisubrl
mov
imulb
push
shrl
adc
mov
dec
jb
and
aad
sub
pop
movsb
pop
fmuls
fildll
pusha
adc
jmp
inc
and
inc
sbb
dec
daa
ss
icebp
rclb
xor
xchg
mov
ss
xchg
movl
shrb
nop
lcall
je
movsl
inc
bound
adc
loopne
test
pop
outsl
inc
shlb
das
sub
rorb
subb
and
add
movsb
ret
and
dec
mov
mov
fsubrl
shlb
dec
fsts
std
inc
mov
mov
pop
push
inc
loop
mulb
mov
mov
scas
jp
mov
adc
repnz
and
fsts
sti
bound
cmp
daa
jns
daa
or
sub
mov
aam
cmpsb
mov
mov
ret
push
pop
or
fimuls
mov
sub
mov
push
xorb
ror
xchg
xchg
and
ljmp
jb
adc
push
fucomi
out
inc
into
jne
jb
lret
xchg
add
add
mov
lret
cltd
popa
mov
aam
pushf
mov
cltd
inc
gs
out
xchg
ficoml
jno
xchg
lock
mov
mov
aam
jbe
xchg
push
sbb
adc
fs
movsb
add
jmp
mov
xor
mov
cli
aam
lcall
add
and
mov
inc
out
repz
or
xlat
pop
out
ljmp
in
sbb
dec
jl
lcall
adc
dec
cmc
cmpsb
icebp
mov
hlt
lods
lock
mov
ffreep
lahf
sbb
sti
dec
or
sti
cltd
or
loop
or
and
rorl
cmp
sub
xor
hlt
and
dec
lret
pop
mov
outsb
dec
das
mov
pop
and
add
pop
es
sqrtps
or
mov
fldt
push
std
pop
out
sub
mov
popf
sbb
or
cli
mov
scas
ficoms
xchg
fstpt
pop
aad
mov
and
jg
psubq
aas
dec
fiadds
lret
mov
test
loopne
iret
add
mov
cmpsl
sub
jl
fstps
stc
les
sub
and
les
scas
push
adc
outsb
iret
fwait
sbb
pop
sbb
xchg
inc
xchg
mov
push
int3
cld
fdivrl
push
mov
shl
loopne
inc
int
ss
clc
aas
inc
leave
mov
in
movsl
inc
fwait
jns
jo
out
movsl
addr16
outsb
add
movsl
push
mov
mov
mov
sbb
sahf
hlt
mov
mov
adc
add
hlt
jne
enter
fistpl
push
push
inc
add
fs
push
loop
test
push
adc
xchg
movsl
xchg
outsb
jle
inc
and
pop
aas
xor
enter
sarl
dec
addr16
or
daa
and
scas
dec
or
repnz
mov
inc
or
cli
mov
inc
dec
cwtl
sbb
mov
dec
scas
mov
data16
mov
and
gs
mov
in
adc
shrl
pop
adc
adc
test
xor
and
stos
pop
cld
inc
sub
dec
cld
scas
xor
mov
mov
cltd
test
imull
xchg
cltd
out
or
out
mov
mov
sbb
insl
xchg
sub
jns
mov
jecxz
sub
push
les
adc
cwtl
jl
sbb
enter
mov
fnsave
jns
leave
popf
inc
push
leave
pop
movsb
rcrb
stc
fwait
pusha
bound
and
sbbl
pop
xlat
cmpsb
sub
mov
inc
jg
loopne
aaa
faddl
js
scas
inc
outsb
sysenter
xor
fcoml
int
das
and
push
dec
mov
sbb
stos
stos
cmp
jp
or
ja
cmpsl
jmp
aad
nop
aas
rclb
scas
je
sub
jne
sar
jle
repz
sarb
mov
adc
push
out
aad
aam
cmp
clc
rorl
xor
je
cltd
test
jnp
xor
jge
mov
cmp
fdivrs
mov
dec
sarb
jmp
jg
lds
mov
adc
data16
lock
xor
test
in
stos
pop
shl
add
mov
adc
dec
dec
sarb
sahf
cmp
xchg
cmp
lcall
mov
xor
adc
add
movsl
movsl
mov
cmpb
outsb
js
repnz
jae
popf
xchg
sbb
jmp
enter
push
sbb
les
push
sub
scas
or
out
roll
mov
cs
and
sahf
sub
aad
test
inc
mov
mov
ds
mov
shl
mul
in
sub
and
idivl
nop
mov
popa
sarb
subl
sub
pop
mov
dec
lret
ffreep
lock
stc
mov
ljmp
pop
dec
or
xchg
dec
add
dec
lock
das
xchg
loope
shll
fldcw
lahf
imul
adc
push
subl
aam
icebp
popw
xchg
jecxz
paddq
out
test
pop
test
push
shrb
repnz
jecxz
pop
sti
aas
jge
cmpsl
out
pop
dec
mov
inc
subl
call
rol
jb
pop
mov
sbb
cs
pop
dec
add
jmp
mov
test
repnz
sbb
sub
arpl
dec
or
sbb
or
push
adc
adc
push
idiv
shlb
jp
pop
les
inc
call
pop
inc
out
test
arpl
rcll
stos
jnp
out
shlb
shl
int
icebp
idivl
loopne
mov
mov
sbb
out
sub
jbe
sub
xlat
stc
test
sti
sub
jle
aad
sti
into
in
fdivrs
sbb
add
inc
std
repnz
push
cmpsl
aad
das
mov
outsl
fisubs
pop
inc
outsb
icebp
lahf
les
xor
or
in
mov
cmp
or
fidivrs
push
enter
mov
mov
mov
popa
push
pop
int3
push
cmp
cmp
into
mov
or
mov
cmp
mov
inc
xor
repnz
inc
sbb
fstpl
inc
cs
mov
jmp
sbb
outsb
out
inc
lcall
loopne
repnz
push
or
in
cmp
pop
lahf
mov
xchg
sub
imul
or
cmc
mov
mov
sub
pop
lock
sub
pop
cs
dec
aam
cmp
ret
or
inc
cmc
mov
jmp
push
pop
fnstcw
mov
xchg
sti
cli
xlat
push
cld
mov
pop
movsb
es
mov
divl
addr16
mov
pop
jge
xchg
jp
aas
mov
and
ds
lret
xchg
sub
mov
shll
xorl
sub
cmpsb
cmpsb
imul
sti
xor
push
cmpl
test
dec
jg
fcmovbe
inc
pushw
ljmp
and
out
pop
and
loop
adc
outsb
lahf
inc
add
stos
testl
call
ret
push
mov
jmp
cld
dec
cmp
stos
push
enter
mov
inc
push
rclb
push
scas
dec
ljmp
leave
push
ret
pop
mov
fsubl
mov
push
sub
pop
outsl
inc
cmpsb
adc
and
mov
into
adc
sub
push
dec
inc
imul
sbb
xchg
add
adc
nop
addl
dec
sbb
es
and
cli
cmpsb
or
ret
or
loope
and
add
fsts
out
in
xorb
cmp
adc
mov
and
in
popa
pshufw
test
and
shlb
out
out
adc
pop
sub
and
dec
or
lea
push
push
orl
fmull
pop
fistpl
ret
rclb
push
xor
adc
movsl
hlt
adc
lret
dec
clc
mov
mov
mov
pusha
cmp
push
pop
cmp
leave
push
pop
cmp
cmpsl
lods
push
cmp
jge
sarb
sub
dec
cmp
daa
lret
xor
inc
scas
mov
repz
in
xchg
mov
loope
loop
and
mov
mulb
mov
adc
stos
mov
lods
sub
fstl
jmp
out
sbb
xchg
add
fs
pop
cmpsb
fbld
add
rcr
inc
leave
pop
push
sbb
xchg
cli
sbb
pop
loopne
mov
jmp
xor
add
sbbb
ret
mov
mov
lret
ffree
xor
cmp
std
mov
push
jp
jo
lret
popl
in
inc
aam
lods
es
mov
pop
mov
in
pop
clc
bound
icebp
mov
jmp
cld
cmpsl
in
adc
xor
sub
sub
sub
mov
stos
call
aam
add
fldl
cmp
mov
into
stos
shlb
rcll
ret
sahf
imul
mov
shll
ret
out
les
pusha
call
or
sbb
imul
fidivrs
popa
test
and
in
jo
mov
sbb
out
fs
pop
and
mov
jge
mov
xchg
cmc
mov
mov
add
cmc
push
fnstsw
aad
repnz
or
and
divb
cs
js
mov
or
fadds
sub
push
pop
js
mov
shlb
out
cmpxchg
push
cmp
xchg
or
std
add
shlb
jbe
out
in
in
push
in
bound
insl
pusha
sub
xor
cmp
pop
mov
mov
repz
xorb
xor
push
mov
or
and
cmpsl
out
jbe
pop
dec
outsb
dec
mov
es
mov
cmc
xchg
dec
adc
adc
hlt
xchg
dec
repnz
and
push
orl
jne
inc
jmp
fwait
mov
jl
jmp
and
mov
push
out
movsl
pop
js
dec
add
fdivr
repnz
pop
push
mov
jb
xor
adc
mov
fnstcw
jns
dec
lock
xchg
push
sub
loope
mov
clc
add
sub
fisttpl
jae
pop
cmpl
mov
mov
xor
pop
jno
dec
scas
inc
fstpl
bound
rcll
aad
in
repnz
sub
cmp
jb
jg
shrl
cmp
fcomps
out
loop
push
mov
test
stos
ds
lret
mov
test
outsb
leave
sbb
pop
and
dec
adc
sub
or
lds
xor
adcl
stos
incb
fcmovbe
mov
add
jns
out
mov
pop
sbb
jne
xor
rcll
fimuls
outsb
adc
cmp
popf
iret
or
or
lock
leave
lret
jns
xchg
cmp
filds
shll
xor
in
fs
xchg
xor
call
lds
sbb
cltd
repnz
and
adc
inc
adc
pop
daa
fiaddl
add
jae
adc
ds
mov
mov
mov
pop
jno
les
cmp
inc
call
out
pop
pop
cmpsl
mov
push
mov
xchg
sbb
fwait
pop
orl
jp
cmp
das
dec
int3
mov
loope
mov
shll
das
push
push
mov
push
movsb
sahf
cld
push
jmp
cmpb
xchg
jecxz
sbb
addr16
add
pusha
mov
aam
sub
pop
and
loope
sbb
mov
jns
test
lock
push
movsl
inc
pop
dec
mov
and
inc
clc
push
lret
enter
adc
adc
jl
xchg
xor
lock
lock
jecxz
xlat
rol
mov
inc
std
or
movsb
rorl
adc
inc
cli
mov
stos
mov
or
addr16
mov
loop
nop
bound
sbb
divb
je
rcll
pop
inc
sub
inc
inc
and
aam
cmp
pop
stos
lret
addr16
mov
add
cmpsb
loopne
shrb
sbb
dec
xchg
xchg
xlat
loope
add
xlat
or
cmp
mov
repnz
add
rorl
xlat
mov
outsb
cmc
push
dec
int
sbb
out
add
mov
out
mov
lcall
sub
test
stos
cmp
sti
loope
add
jecxz
sub
jecxz
sbb
push
aaa
out
scas
adc
xchg
adc
cltd
cmp
int
push
les
xchg
faddl
dec
adc
jnp
sbb
cld
lds
xchg
pop
imul
adc
xor
fwait
mov
ss
pop
notl
gs
cmp
imul
lret
aam
push
call
jnp
jns
ja,pn
mov
and
pop
das
addr16
mov
push
xor
inc
clc
sbb
test
and
push
fnstcw
leave
inc
arpl
call
sbbl
sti
in
hlt
push
int
adc
pop
mov
xor
and
mov
push
in
gs
add
scas
outsb
iret
push
test
in
mov
pushaw
scas
lods
sbb
out
pusha
in
pop
push
dec
outsl
dec
or
and
in
movsl
xor
daa
fs
out
add
mov
or
mov
mov
adc
mov
mov
or
jle
xchg
pop
dec
sbbb
cmp
stos
movsl
fldt
and
fstl
sub
jns
xlat
das
mov
mov
pop
rorl
sub
loopne,pt
push
das
rcrb
cmp
sub
push
dec
xor
outsb
mov
jle
loope
shlb
cld
rclb
adc
push
pop
add
ret
scas
ret
in
xor
gs
test
insb
cld
inc
stc
je
jnp
mov
jl
and
fisubrs
out
mov
xor
sub
mov
xor
cli
jnp
lock
stc
mov
out
cmp
fadd
mov
mov
rcrl
push
outsl
mov
pop
js
fsubrs
data16
pushf
xchg
dec
dec
jne
jl
cmpsl
daa
jp
mov
mov
mov
or
rorl
out
dec
ss
scas
push
lods
shlb
mov
dec
xor
hlt
cwtl
test
data16
int
movsb
aaa
movsl
cmp
sbb
fs
dec
mov
cmp
add
movsl
sbb
pop
shlb
push
or
shll
lahf
and
fmulp
xchg
mov
jns
pop
in
adc
jle
adc
ljmp
xor
mov
out
daa
pop
inc
mov
mov
xchg
cmp
subl
insb
loopne
dec
or
adc
aaa
stc
imul
and
xor
sub
scas
out
jl
and
mov
daa
push
sub
jl
lret
mov
jnp
scas
mov
mov
mov
jl
arpl
cli
insl
push
or
xchg
rorl
call
sahf
popa
mov
arpl
cwtl
mov
cmp
cmp
pop
mov
adc
lds
mov
mov
pop
outsl
mov
or
and
outsb
mov
mov
je,pn
test
sub
sub
inc
ljmp
sub
fmull
aas
stc
xor
subl
sbb
stos
in
neg
sub
js
inc
and
mov
and
jmp
mov
dec
rclb
stc
cmp
mov
jbe
push
mov
push
jl
inc
add
mov
mov
cmp
sbb
xchg
pop
xchg
pusha
jnp
addr16
testl
cmc
jnp
cld
xchg
jecxz
lret
mov
sarl
arpl
adc
sub
sub
adc
adc
into
in
jecxz
push
ror
cmp
pusha
pop
inc
adc
mov
inc
xchg
das
xchg
pusha
xchg
or
cmp
mov
es
popa
movlps
or
add
shr
adc
je
xchg
in
aas
xchg
sahf
sti
insl
pushf
stos
cltd
insl
inc
out
xor
jmp
mov
pusha
mov
sub
push
ljmp
bound
call
lea
out
xor
cld
jg
ret
out
pop
cltd
pusha
orl
test
popa
icebp
or
flds
xor
pop
mov
jae
add
sub
stc
mov
hlt
insb
loopne
in
in
xchg
frstor
aam
inc
pop
sub
sbb
push
lds
fstps
shll
fsubl
sbb
imul
ljmp
lret
lods
add
repnz
test
rol
scas
int3
out
repnz
int
sub
loope
inc
inc
dec
aas
mov
mov
pop
cmc
mov
xor
out
in
pop
xor
push
in
sti
ret
repnz
dec
xchg
sub
insb
cwtl
daa
sti
nop
jns
int
addr16
testb
adc
das
stos
movsb
mov
loopne
ljmp
mov
roll
fildl
fstl
ret
jne
icebp
jge,pn
fs
cmpsb
imul
xlat
jnp
push
pop
popf
clc
test
shrl
mov
rolb
and
rcll
ret
or
jmp
inc
test
fs
dec
je
push
mov
stos
ret
jecxz
js
inc
outsl
sub
movsl
scas
out
adc
cltd
pop
jp
dec
inc
test
and
setns
add
and
out
xchg
adc
addr16
jg
mov
mov
repnz
mov
pop
pop
mov
and
arpl
sub
and
in
fdivrl
mov
lcall
xchg
in
call
jb
add
xor
into
jmp
sbb
or
and
pop
mov
mov
and
ret
test
fisttpl
sub
out
iret
pusha
push
idivl
and
jo
sub
mov
popa
dec
inc
add
xchg
dec
dec
jl
inc
inc
push
cmpb
out
aaa
mov
lea
xor
lret
jae
mov
scas
fs
mov
in
loop
das
and
mov
and
adc
rorl
ds
mov
stos
aam
lods
jnp
mov
mov
mov
shll
cmpsb
mov
lret
inc
add
iret
push
jb
enter
cwtl
mov
mov
pop
imull
pushf
gs
pop
mov
lahf
stos
sub
rcrb
cli
mov
stos
pushf
shl
inc
out
aas
stos
xchg
jnp
out
jge
cmp
and
cwtl
addb
shrl
add
mov
xchg
or
pop
xchg
xchg
lds
jns
mov
leave
lret
pop
lcall
mov
jne
or
or
push
fidivs
jp
pop
arpl
mul
pop
mov
movsl
popf
push
xlat
sbb
test
mov
lods
les
rorl
imul
cld
jle
mov
into
adc
xor
ret
pop
xchg
push
addr16
lret
dec
sti
xlat
call
clc
out
repz
movsl
mov
jb
cmp
cwtl
cwtl
das
add
or
xchg
shr
jmp
call
in
mov
pop
imul
or
inc
fsubrs
or
jnp
mul
outsb
xchg
clc
inc
das
push
in
sub
jecxz
fmul
fwait
nop
add
rcr
jg
push
pop
xchg
loopne
sarl
pop
add
fimull
lods
dec
lods
jae
xor
mov
ror
and
out
pusha
loopne
mov
test
pop
xchg
push
mov
xchg
cmp
rcl
aad
dec
es
add
pop
lcall
out
pop
mov
add
jnp
scas
and
mov
cmp
cmpsb
shrl
adc
inc
nop
push
stos
movsl
nop
popf
gs
ficoms
sub
xor
jno
mov
jg
xor
dec
stos
imul
jl
cld
stos
jb
pop
bound
lea
push
mov
inc
xchg
and
mov
ljmp
mul
sub
push
gs
fmull
idivb
or
cli
orl
xor
cmpsb
imul
and
ret
ret
fldt
mov
iret
insl
pop
negb
mov
jge
dec
fucom
xor
cmpsl
inc
das
xchg
rclb
adc
mov
push
inc
xchg
inc
leave
int3
or
imul
popa
fmuls
push
mov
mov
add
pushl
mov
push
ret
or
roll
mov
mov
or
pushf
mov
add
cmp
adc
repz
out
ss
outsb
xor
call
out
adcl
sub
push
cld
arpl
adc
imul
push
sub
inc
mov
jge
xchg
and
jl
mov
xchg
or
and
stc
xor
rclb
clc
mov
adc
int3
aas
in
lods
mov
inc
pop
ljmp
mov
or
dec
adc
fistps
in
sbbl
xor
add
shl
cmp
cmp
adc
js
mov
sub
mov
iret
dec
in
cli
mov
inc
cmp
adc
into
in
hlt
enter
rorb
sti
mov
jg
pusha
pop
cli
or
xor
rcl
cli
sbb
push
lcall
int3
push
in
jns
in
jne,pn
daa
mov
arpl
inc
fdivs
xchg
mov
cmp
xchg
adc
lea
pop
mov
jl
cmp
cmpsl
jg
in
pushf
data16
and
scas
mov
sbb
push
pop
mov
js
imul
ljmp
sub
and
bound
pop
and
lock
mov
jmp
mov
inc
hlt
cld
in
ret
ljmp
add
nop
loope
imull
jecxz
loopne
cwtl
test
insl
xchg
dec
or
adc
xchg
out
adc
inc
aam
pushf
xchg
icebp
sahf
stos
les
pop
adc
test
mov
in
dec
jne
scas
inc
lods
xchg
popa
adc
and
mov
mov
xchg
lret
dec
mov
aad
mov
fidivs
jmp
in
fimull
movsl
sub
and
paddusw
inc
pushl
sbb
clc
adc
call
dec
jg
shll
adc
jne
dec
xorb
rol
clc
sub
lret
shll
pop
imul
sahf
sbb
dec
imul
fldt
adc
xchg
movsl
add
lret
jp
sbbl
push
fwait
arpl
shrl
add
pop
lret
test
frstor
pop
popf
sti
mov
sub
aas
and
ljmp
adc
sbb
std
xor
xor
insb
and
bound
test
sti
icebp
int
dec
jns
push
or
push
mov
xor
mov
lods
in
and
pop
jno
push
repz
faddl
sbb
mov
test
divl
mov
dec
add
xorb
loop
data16
stos
movsb
aas
clc
xor
cmp
cmp
or
dec
mov
inc
cmp
test
fmul
mov
loop
and
xor
jge
ret
outsb
loopne
cmp
bound
rcl
icebp
push
imull
je
pop
pop
dec
inc
lcall
testb
mov
iret
mov
in
nop
aas
xchg
xchg
mov
sbb
repnz
add
xchg
idiv
scas
jecxz
or
mov
cmc
cmp
xchg
jbe
pop
mov
daa
int3
pop
lcall
lea
testl
and
sbb
dec
dec
cmp
or
test
stos
hlt
das
push
hlt
fiadds
mov
sbb
push
lret
dec
bound
fisubs
adc
mov
mov
enter
cmp
adc
xchg
movsb
sub
movsb
mov
aad
push
in
mov
rorb
ljmp
dec
sbb
mov
adc
mov
stos
push
inc
leave
dec
jge
aad
xchg
jo
mov
stos
mov
mov
sub
in
lock
ss
outsb
mov
push
rorb
or
scas
cld
jbe
mov
nop
mov
xor
jg
xchg
add
sub
popf
lock
cmp
pop
or
push
adc
testl
xor
ret
mov
aad
jbe
jo
subb
dec
mov
xor
outsl
sub
fnstenv
pop
imul
out
dec
and
das
test
fisttpll
jle
dec
int3
mov
int3
sbb
enter
mov
cwtl
jb
stc
dec
pop
inc
or
jp
sbb
daa
push
xchg
je
dec
das
call
popf
cwtl
lds
into
mov
lahf
jmp
jp
mov
cmpsb
xor
leave
inc
jno
mov
adc
cmpl
pop
dec
or
inc
add
jl
mov
pop
add
rorl
or
sarb
loopne
js
pop
or
sbb
mov
sbb
push
les
xor
mov
jb
cmp
mov
xor
fsts
adc
xor
scas
jne
cmp
cmc
xchg
sub
int
sahf
cmpsb
mov
scas
ja
jo
enter
xchg
ret
mov
inc
push
pusha
cltd
inc
xchg
movsl
fnstsw
js
into
out
daa
testb
inc
imul
or
and
dec
push
test
inc
aad
add
cmp
push
or
adc
in
repz
fldcw
xchg
ret
test
dec
lcall
out
sbb
sub
and
xchg
xor
mov
push
cmpsb
mov
pop
rorb
lahf
mov
jge
fwait
movsb
add
std
sti
into
cmp
scas
add
push
fs
cmp
and
call
mov
xor
jbe
andb
lahf
mov
sub
divl
je
sahf
arpl
icebp
lahf
sbb
adcl
sbb
mov
clc
jae
push
outsl
fstl
adc
pop
jno
ds
in
sbb
js
xor
inc
pop
in
pop
jae
lret
dec
or
inc
jnp
push
xlat
jp
loop
sub
sub
cmp
mov
pushf
js
mov
cmpsl
mov
push
out
out
mov
jnp
jne
test
cmp
xlat
imul
pop
dec
ret
mov
mov
mov
jl
iret
jle
out
sbb
add
mov
ret
notb
leave
jmp
pop
adc
mov
bound
inc
push
jmp
loopne
pop
xor
mov
pushf
std
mov
add
or
scas
pop
xor
cmp
fstpl
jmp
adc
es
jecxz
hlt
adc
mov
imul
popa
jge
ret
hlt
xlat
insb
popf
jne
mov
iret
add
mov
mov
jo
dec
add
daa
enter
test
ds
or
cmp
mov
cmpl
sub
pop
arpl
movsb
jmp
lds
loope
jbe
sbbb
mov
cmc
and
xor
sbb
lret
pusha
mov
data16
fcmovne
jne
mov
pop
rcll
daa
cli
fstl
fadd
fisubs
ds
outsb
cmp
pop
pop
imulb
sbb
insl
andb
incb
sub
and
decb
shrl
divl
push
lds
or
dec
mov
sbb
xor
lcall
cmpsl
sub
in
pop
das
push
sbb
mov
fstp
dec
test
test
xchg
pop
aad
scas
hlt
sbb
out
cwtl
ret
mov
pushf
sub
cwtl
mov
jno
mov
xor
movsl
jge
mov
sar
xchg
xor
mov
mov
inc
xchg
jp
mov
rclb
lret
xchg
test
xor
cli
cltd
xchg
adc
mov
in
mulb
aas
add
cwtl
xlat
sar
cltd
pop
cmovno
imul
and
pop
push
and
out
jg
jbe
outsl
and
aad
mov
cmpsl
jo
cld
mov
and
fstps
inc
in
add
subb
xchg
lods
push
divb
daa
cmp
push
cli
cmp
notl
push
and
push
xchg
jl
inc
xchg
push
pop
jne
sti
sbb
arpl
sbb
inc
in
cmp
sbb
movsb
fs
fcoms
dec
pop
jb
push
loopne
repz
ds
into
push
dec
sub
xchg
sbb
xorl
inc
push
andb
shl
lods
fsubrl
mov
xchg
pusha
ljmp
in
jbe
roll
adc
pop
aas
xor
lahf
xchg
inc
neg
lret
jge
cmp
adc
mov
mov
adc
cwtl
or
and
pop
and
shlb
loopne
testl
pop
fistpll
mov
mov
jl
out
imul
insl
in
mov
aaa
pop
into
test
sti
dec
jge
mov
adcb
sub
or
jmp
jmp
or
mov
int3
cmc
jnp
mov
mov
aad
hlt
sub
add
mov
repnz
test
out
cmc
xorb
gs
fstpt
jo
pop
add
ret
or
pop
xchg
cmp
mov
inc
mov
sub
adc
add
scas
push
inc
cmpsb
mov
bswap
out
aaa
mov
data16
arpl
dec
mov
mov
adc
cld
mov
lds
adc
es
adc
mov
mov
mov
adc
inc
addr16
clc
or
push
adc
add
push
lret
loope
dec
add
cmp
ljmp
dec
test
into
jo
fsubrs
jo
lock
repz
pop
pop
aam
cld
xchg
bswap
jmp
loope
fsubs
sub
pop
cmpsl
cmc
mov
shll
pop
arpl
inc
push
mov
subb
jnp
iret
je
stos
aas
in
mov
pop
lret
jnp
aaa
xor
rcrb
sti
das
fidivs
mov
sub
xchg
fsubrs
lds
ja
loope
out
adc
pop
shll
into
mov
sub
test
push
pcmpgtb
stc
cmp
inc
dec
mov
lret
popf
jmp
xchg
cmp
ja
xchg
push
es
mov
add
popa
xor
js
pop
lea
sti
cmp
or
outsl
pop
aam
les
mov
loopne
inc
sbb
mov
xor
rcrl
sahf
jns
bound
push
loope
pop
cmpsl
mov
jnp
orl
fldcw
mov
jae
pushf
cmpsl
rcr
mov
rcr
jmp
push
leave
mov
dec
jmp
test
mov
adc
ss
adc
mov
mov
dec
mov
loope
jb
dec
das
push
clc
test
mov
dec
push
xlat
in
xor
ds
jp
and
add
movsb
cltd
jno
sbb
push
sub
adc
cmp
push
js
int3
fnsave
cmp
lcall
test
lods
aas
sub
pop
lock
push
cvttps2pi
mov
ss
cwtl
xchg
push
incl
or
jle
add
in
xchg
sbb
add
and
sub
pusha
pop
adc
pop
mov
ret
push
xchg
mov
imul
push
sub
push
cmp
imul
outsb
pop
push
out
ss
sbb
orb
movsl
dec
xchg
inc
cmp
push
sub
sub
mov
jnp
imul
mov
sahf
mul
inc
or
sbb
mov
fimuls
cmp
xor
or
pop
xor
imul
mov
lock
cwtl
push
mov
sbb
adc
push
mov
popf
lret
pop
jnp
mov
ss
int3
push
js
or
shrl
jge
mov
popf
ljmp
add
ja
popa
fldl
push
stc
test
jmp
scas
pop
jnp
into
test
not
dec
sti
inc
sti
adc
ljmp
shrl
fs
pop
flds
push
mov
loope
mov
mov
cld
adc
notl
and
fs
inc
mov
movsl
scas
testb
cmpl
in
int3
xor
mov
and
mov
cmp
dec
mov
push
jp
adc
icebp
jp
xchg
lret
test
fsubl
mov
es
rclb
lock
daa
jl
popf
jmp
dec
cwtl
fwait
pop
mov
popf
pop
int3
stos
mov
mov
btr
mov
dec
pop
or
or
push
push
mov
cmp
and
fldcw
call
std
ret
mov
aam
imul
scas
cmp
add
add
dec
or
arpl
jbe
inc
push
lock
and
in
xor
cmp
pop
fcoml
test
jnp
and
pop
mov
andl
add
adc
notl
add
add
data16
jo
rcll
and
mov
sbb
dec
push
push
les
fldz
pop
ljmp
int3
outsb
ljmp
or
rorb
arpl
ljmp
test
pop
mov
jbe
adc
mov
dec
test
xor
popf
sub
push
push
xor
push
fs
ret
add
fldcw
movsl
movsl
sub
push
movsb
dec
inc
inc
push
fistpl
ljmp
cmpsb
mov
add
xor
lea
jmp
sbb
cmc
rcrb
negl
xor
cltd
mov
ss
push
mov
or
into
enter
lahf
shl
xor
aas
and
aaa
cs
mov
and
mov
in
fildll
in
data16
jne
and
pusha
or
sbb
scas
test
or
loope
mov
roll
clc
lods
icebp
sti
lock
fs
idiv
repnz
inc
xchg
mov
pop
cmp
xor
shlb
dec
insl
sbb
adcl
enter
aam
cmpsl
int3
xchg
cmp
mov
dec
aaa
pop
in
adc
daa
lea
inc
in
into
sub
dec
mov
shll
outsb
xchg
rcl
adcl
push
fisttps
test
push
dec
out
mov
sti
aad
jnp
sub
or
hlt
push
and
imul
test
shr
cmc
dec
lea
loop
outsb
jb
ret
mov
dec
das
movsb
addr16
mov
inc
inc
andl
mov
in
adc
or
xchg
mov
lea
xchg
rorb
dec
pop
frstor
xor
shlb
out
cmpsb
nop
les
cli
jnp
les
mov
imul
cmpsl
and
ss
or
movsl
les
jo
pop
ljmp
xchg
cltd
push
mov
jmp
stos
das
push
add
roll
cli
aad
dec
call
repnz
hlt
pushf
mov
add
add
fbstp
mov
mov
mov
xor
ficomps
cmp
inc
clc
xor
add
scas
mov
lock
ret
lret
ret
push
and
insb
and
inc
mov
mov
iret
push
enter
into
jmp
icebp
mov
rcrb
sub
hlt
leave
enter
mov
jge
push
xchg
cmpsl
sti
cmp
ficompl
test
xor
test
loopne
jo
pop
jno
or
mov
pushf
push
dec
pop
jne
or
xor
out
stos
imul
sub
jbe
add
arpl
mov
dec
dec
push
lods
sar
pop
mov
pop
mov
mov
iret
xchg
cwtl
dec
pop
loope
and
mov
into
inc
out
loop
fwait
stos
cmp
jnp
mov
adc
ficoms
and
cmp
int
dec
push
cmpsl
xchg
inc
cmc
movsl
fldt
out
xchg
adc
inc
xchg
outsb
xchg
inc
andb
out
pop
call
loope,pt
xlat
js
loopne
push
enter
mov
sub
push
outsb
cs
mov
iret
test
jmp
add
out
rclb
and
jp
stos
std
sbb
sub
call
fxch
sub
and
nop
and
add
mov
dec
jecxz
stos
rorb
jle
movsb
cmp
imul
je
xchg
cmp
xchg
scas
jae
sub
rclb
pop
pop
repnz
sar
aad
das
push
mov
xchg
iret
jns
mov
ljmp
or
arpl
jae
inc
lahf
jae
push
shlb
fdivrs
push
into
out
adc
xchg
das
dec
je
aaa
or
insb
out
mov
cmpb
and
xchg
jno
imul
out
sbb
cmc
and
mov
pop
jae
sbb
jae
negb
dec
fadd
cmp
cmp
xchg
pop
aaa
xor
loop
inc
roll
lea
adc
adc
fucomi
inc
jns
add
sar
das
mov
stc
orl
sub
mov
mov
push
sti
xor
or
jmp
mov
inc
sub
mov
sbb
mov
dec
lea
or
mov
sbb
push
adc
mov
mov
lock
push
lods
pop
lret
mov
adc
push
jns
in
lret
inc
mov
shll
lods
mov
dec
or
sbb
jge
mov
aam
cmpsl
dec
cltd
dec
mov
mov
pop
push
mov
cs
movsb
sbb
pushf
daa
sub
xor
dec
cld
fsubrl
mov
aad
or
lahf
sbb
jae
inc
sub
adc
out
pop
insb
push
negb
icebp
sub
into
push
pop
in
mov
inc
shr
and
inc
sub
cwtl
jmp
shrb
xchg
int
fldcw
shl
cmc
xchg
outsb
addr16
add
sbb
xor
add
rorl
pop
loope
xchg
popf
int
jp
mov
ret
add
test
xchg
pop
xor
push
inc
cmpl
adc
adc
outsb
sub
mov
inc
in
push
sub
fcom
out
fs
nop
lds
call
xchg
stc
mov
push
bound
stc
fistl
jne
shrl
fsts
int
adc
xchg
add
repnz
dec
push
fs
outsl
mov
xchg
mov
fidivrs
leave
idivb
cltd
mov
outsb
sbb
mov
push
or
icebp
int
repz
mov
mov
es
fsubrs
dec
mov
js
adc
das
jg
sbb
loope
out
add
adc
mov
pop
sbb
xchg
sbb
sbb
dec
xchg
sub
test
mov
add
push
or
pop
cmp
inc
xor
add
sahf
mov
stc
sbb
jge
fdivs
cmp
xor
das
sub
and
adc
fldlg2
xchg
and
and
mov
fnstcw
sbb
jle
or
test
xor
jb
cmp
into
out
cld
rorw
lods
daa
adc
int3
hlt
mov
add
sbb
pusha
repnz
ret
mov
sub
hlt
dec
jbe
xor
js
xor
cmp
jmp
lods
dec
mov
adcb
insl
jno
push
and
dec
push
in
lcall
into
ja
dec
inc
or
or
mov
pushf
mov
sub
idivl
cwtl
lock
sti
enter
or
xor
dec
jle
int3
mov
test
fs
es
xor
mov
idiv
movl
mov
mov
pop
cmp
mov
testl
inc
pop
pop
sub
fmull
inc
mov
loopne
fwait
jbe
test
add
aam
xchg
fs
jo
push
lret
ficompl
add
jecxz
add
cmpb
hlt
sarl
pop
push
aam
dec
cltd
add
lock
fcomip
pop
call
push
sbb
jnp
adc
xchg
imul
pop
mov
lock
addr16
mov
dec
test
jmp
dec
scas
orl
test
int3
insl
xorl
pop
sbb
in
lods
and
in
xor
jecxz
xor
mov
test
adc
out
jae
push
sbb
xchg
push
and
push
je
stos
mov
mul
pop
fcomps
dec
xchg
sarl
adc
cmpsl
add
and
xchg
pop
clc
gs
lods
sub
push
dec
push
sub
sub
xchg
out
xchg
cmp
stc
pop
das
sbb
jle
mov
mov
push
and
jl
popf
and
addr16
mov
outsb
lahf
mov
outsl
repnz
sbb
in
sarb
ss
xor
mov
cld
stos
xchg
nop
in
sub
xlat
inc
ljmp
sub
cmp
mov
js
cwtl
jge
lock
push
and
out
lahf
sbb
movsl
in
and
data16
in
xchg
ss
stos
loop
ss
stos
push
fdivl
jmp
xlat
adc
and
and
lret
xchg
fs
insl
fwait
push
cld
and
xor
xor
pop
pop
mov
in
pop
gs
cwtl
xchg
xlat
and
roll
adc
inc
push
jo
push
adc
shrl
sbb
hlt
push
xchg
fadds
repnz
jbe
imul
jge
insb
xchg
xchg
js
clc
out
push
ds
lods
mov
mov
enter
mov
or
inc
and
xchg
movsl
inc
adc
rorl
push
mov
and
cmp
cwtl
bndmov
xchg
outsb
loope
push
mov
adc
adc
push
lods
pop
es
xchg
popa
nop
mov
test
bound
xchg
in
insl
out
sbb
hlt
call
addr16
in
ret
cmc
sub
pop
stc
cmpsl
nop
ss
mov
add
lcall
mov
cmp
push
or
and
ss
sbb
ret
arpl
ret
sahf
pop
or
dec
hlt
xchg
in
jle
sahf
or
or
push
jmp
xchg
pop
xchg
pusha
pushl
pop
push
or
jns
in
jno
xchg
call
sub
pushl
shlb
and
push
adc
cmpsl
es
mov
imul
in
xchg
into
fmul
add
cltd
mov
lds
pushf
cmp
stos
xchg
push
inc
jno
push
adc
mov
or
outsl
test
ficompl
jmp
add
push
in
pop
jo
inc
mov
sahf
adcl
mov
xlat
popa
mov
sbb
jmp
pop
inc
sar
fwait
mov
cmp
nop
lods
gs
shlb
dec
pop
jnp
pop
shl
adc
int
lahf
add
cli
mov
push
out
push
mov
mov
and
enter
rolb
and
dec
rcll
mov
in
xchg
mov
mov
xchg
mov
mov
jmp
cld
popa
push
add
arpl
sub
sbb
xor
mov
mov
and
ljmp
lahf
jb
pop
test
pop
and
lahf
inc
push
xchg
sub
inc
and
rcll
fwait
jae
mov
or
pop
ja
push
cs
or
mov
jge
add
add
inc
adc
dec
pop
inc
imul
cmc
icebp
clc
lahf
inc
mov
inc
fidivs
jmp
lods
and
push
loop
and
pop
inc
dec
mov
sub
fwait
loopne
jae
movsl
ret
mov
inc
push
leave
push
pop
xchg
daa
das
sarb
push
pop
lret
mov
sbb
shrb
lcall
mov
adc
add
ret
call
stos
or
lods
pop
loop
lcall
test
push
push
cli
cmpsb
push
mov
scas
nop
lcall
inc
xchg
sysexit
lock
addb
jg
es
or
mov
lods
inc
pop
jge
mov
pop
mov
xor
int
rclb
notl
xchg
movsl
stos
jge
jmp
in
lea
adc
into
xchg
sbb
mov
push
pop
lahf
cmp
xor
imul
mov
mov
cltd
cmpsl
and
xchg
add
add
sub
scas
hlt
xor
push
and
inc
xchg
ja
popa
aam
addr16
aad
mov
ret
out
loop
dec
xor
inc
dec
out
ret
loop
sbb
sub
shlb
sub
out
sub
pop
mov
and
sbb
add
pop
or
jns
out
and
test
pop
rorb
leave
lahf
mov
stos
loope,pn
adc
scas
int
sbb
gs
inc
mov
mov
dec
pop
mov
jl
cmc
lea
test
fdiv
sbb
iret
out
int3
data16
adc
xor
sbb
push
dec
add
push
add
sahf
jne
popf
mov
es
mov
jmp
pop
mov
pop
mov
testl
cmp
mov
jle
add
fistl
cmp
and
xor
adc
mov
out
in
addl
movsb
sub
lea
cld
cltd
je
mov
aaa
pop
test
pop
mov
jp
cltd
les
pop
test
pslld
dec
pop
mov
aam
mov
or
push
jl,pt
sbb
mov
imul
xor
mov
xchg
mov
mov
cltd
push
jl
movsb
inc
add
rorb
jmp
dec
xchg
cmc
mov
or
xchg
lods
push
leave
add
stos
dec
call
mov
push
mov
gs
cmp
adc
insb
gs
mov
pop
push
cld
cmc
inc
jae
adc
xor
push
fcomp
mov
imul
adc
ja
xchg
outsl
xor
aad
jl
ja
fsubrs
stos
popa
mov
adc
and
lock
push
stos
sbb
out
idiv
das
dec
inc
sti
imul
or
sbb
jle
ja
jl
push
xor
dec
push
ret
lock
shl
je
cltd
mov
jge
push
scas
insl
out
mov
das
loop
ss
insl
jecxz
xor
repz
xchg
lcall
add
js
jecxz
pushf
imul
inc
insl
pop
mov
clc
repnz
in
mov
sub
push
in
loope
mov
lds
xorb
sbb
sbb
inc
cmp
mov
dec
mov
sarb
pop
out
or
mov
xor
jbe
jo
jo
and
jecxz
xor
cltd
sub
or
dec
inc
das
and
imul
out
fnstsw
xchg
mov
sub
mov
fisttpll
nop
or
jp
iret
mov
decb
ret
ret
nop
leave
mov
add
xor
int3
sub
sub
jbe
xchg
xlat
mov
mov
mov
std
cmp
mov
addr16
push
adc
xchg
mov
mov
mov
add
mov
push
pop
sub
sbb
cvtdq2ps
cmp
daa
jbe
lahf
pop
lock
lcall
sub
cmp
outsl
icebp
shl
jl
inc
daa
jmp
es
dec
outsl
loopne
mov
jns
cmp
decl
insb
pop
mov
xchg
rcrl
movsb
mov
jg
dec
adc
adc
pop
cs
mov
pop
dec
mov
icebp
cmp
jecxz
mov
adc
sub
repnz
fidivl
in
mov
xlat
fdiv
jbe
pop
or
inc
call
cmp
sahf
popa
sub
inc
in
inc
and
and
mov
jmp
test
ret
inc
mov
rcrb
pop
mov
stc
jmp
xchg
push
call
sar
fisttps
xchg
dec
sti
out
orl
test
das
clc
xor
in
jge
xor
mov
repnz
jb
cwtl
jp
cs
sahf
stos
rorl
fdivs
in
das
out
stos
jmp
lahf
lods
lods
sbb
mov
outsb
fnsave
cs
pop
lret
stos
sbb
sbb
mov
or
insb
cli
in
out
add
test
fcoms
pop
fmull
addr16
inc
sbbl
dec
xchg
stc
and
push
nop
sti
adc
lods
cmp
mulb
shlb
push
sbb
pop
push
in
sbb
hlt
push
sahf
fs
xchg
mov
pusha
dec
jl
out
and
repz
scas
cmpsb
cmp
aam
sbb
mov
in
sub
and
xor
out
arpl
cmpsb
lods
lcall
ljmp
popf
div
mov
pop
cmp
inc
repz
aaa
es
sub
or
push
pop
in
test
and
mov
stos
add
lahf
shll
cmp
scas
notl
test
mov
dec
sub
or
jp
adc
xor
dec
into
ss
out
in
std
xor
imul
jnp
daa
pushf
ja
xchg
mov
mov
int3
pushf
xchg
arpl
int3
loope
inc
hlt
xchg
adc
push
pop
add
fwait
lds
bnd
adc
out
aam
cmp
shlb
inc
jle
mov
fists
dec
add
test
pop
fisttpl
inc
das
sbb
data16
sbb
sub
mov
sub
pop
push
enter
nop
and
cmp
call
imul
jmp
xchg
sub
and
lret
mov
addr16
rcrl
cmp
mov
xor
xor
fadd
pop
lea
mov
lds
insb
repz
int3
cwtl
fldenv
mov
test
stos
adc
into
pop
sub
push
push
dec
fsubrp
stc
popa
mov
sub
push
out
mov
lock
push
popf
mov
stc
dec
push
lcall
out
fisttps
test
jbe
jno
lcall
icebp
lret
add
mov
jbe
mov
push
push
repz
repnz
mov
jbe
pusha
fiaddl
cmp
fs
scas
les
sbb
sahf
cvtps2pi
add
push
dec
or
insl
xchg
lods
loop
push
mov
sbbl
mov
stos
jnp
mov
push
out
fdivl
push
xchg
in
insl
push
adc
cmp
dec
sub
sub
pop
mov
repnz
cs
insb
push
pop
popa
ret
xchg
ljmp
push
sarl
xlat
mov
sbb
gs
sub
push
cmp
inc
inc
or
lds
shl
daa
push
popf
lret
mov
mov
and
push
cmpsb
into
cmp
jp
jo
mov
in
das
out
shlb
sub
jns
mov
jecxz
fidivs
ja
repnz
loope
cwtl
out
xchg
pop
and
cltd
sbb
ret
je
scas
shll
cli
xchg
fcmovne
popf
loope
cmpsb
cmp
lock
sarb
or
insl
dec
pop
rolb
sti
mov
sub
neg
push
mov
and
sub
test
and
pushl
leave
ret
cmpsl
lock
pop
fsubrl
ret
nop
notl
push
inc
rorl
or
mov
sbb
jae
enter
sub
pop
add
loop
cld
jl
jecxz
int3
and
enter
pop
cmp
lea
cmp
mov
iret
xlat
xlat
push
cmp
add
test
shr
mov
sarl
subb
sub
sbb
sub
mov
push
dec
rcrl
std
cwtl
lods
mov
call
push
pop
push
sub
sub
loope
repnz
xchg
dec
push
es
pushf
aad
mov
cli
and
or
lret
cmp
mov
or
jno
adc
add
inc
inc
cs
mov
mov
iretw
mov
outsb
dec
add
dec
jbe
cmpsb
sahf
mov
cltd
jae
stc
in
iret
mov
fwait
sbb
in
inc
lods
cld
dec
add
pop
mov
repnz
pop
movaps
push
rorl
subb
xchg
xor
xchg
ret
jecxz
bndldx
js
or
xlat
adc
cs
adc
mov
dec
jns
enter
gs
call
stos
mov
add
ljmp
or
dec
aaa
imull
cmp
lods
sub
mov
test
hlt
and
pop
inc
ror
ja
mov
lods
push
xchg
sub
xchg
add
jns
leave
and
dec
jl
or
and
jo
lret
ss
xchg
rcll
or
or
mov
shlb
outsb
pusha
mov
pop
rcrb
jne
add
jmp
mov
loopne
jecxz
or
lods
int
pop
jo
mov
push
dec
insl
movsl
push
dec
push
or
mov
push
mov
mov
arpl
ret
test
mov
inc
frstor
mov
sub
nop
out
mov
pop
shl
mov
aad
cmc
je
lods
scas
stos
cmpsb
aad
push
sub
addr16
cld
jns
sub
in
adc
sarb
paddb
xchg
xchg
fdivs
jecxz
xchg
cs
cmp
add
pop
add
cmp
nop
repnz
out
in
lahf
adc
sub
mov
jecxz
add
push
cmp
cmp
jecxz
inc
xchg
push
jno
jmp
loope
xor
in
or
fisttpll
clc
arpl
and
shrl
cmpsl
and
mov
imul
ds
mov
rcll
jecxz
dec
dec
insl
dec
ljmp
push
out
push
xor
fbld
cmp
loopne
cli
rcll
jmp
or
push
xchg
sub
sbb
test
arpl
dec
and
inc
nop
or
sbb
dec
mov
call
add
call
scas
std
cmpsb
xchg
mov
lret
jbe
dec
mov
xchg
roll
and
pop
mov
jecxz
and
add
in
push
xchg
mov
enter
jae
in
add
rcr
xchg
fidivl
lcall
cmpsl
mov
or
insb
xchg
rolb
fldt
inc
fisubrs
xor
daa
dec
ds
xchg
mov
dec
std
xchg
movsl
repnz
movb
ret
cltd
inc
xlat
nop
arpl
mov
mov
aas
js
prefetchwt1
xor
fcomi
out
inc
inc
aad
cwtl
mov
out
loopne
jbe
fsubrp
fsubl
test
in
test
cltd
aad
dec
lods
jp
xchg
out
aad
int3
xorl
mov
mov
mov
les
ret
and
dec
adc
into
mov
addr16
adc
mov
push
mov
fadd
cld
or
out
lcall
leave
scas
xor
idiv
sbb
dec
and
insl
push
and
imul
pop
lcall
or
stc
ret
mov
jbe
xchg
sub
jo
sub
int
mov
shl
dec
orl
je
or
std
lcall
and
dec
mov
les
into
xchg
or
leave
xor
jne
and
xchg
jnp
clc
imul
push
imul
cwtl
mov
or
add
adc
cli
mov
imul
mov
xor
cmp
mov
dec
movsl
jecxz
xchg
mov
or
mov
cli
clc
mov
adc
pop
jbe
adc
sahf
stos
les
dec
adcl
notb
jno
lcall
xor
outsb
xor
ss
sti
dec
inc
push
cli
pusha
mov
sbb
sbb
mov
add
push
lods
add
mov
cli
out
pop
dec
pop
inc
jp
adc
clc
mov
sbb
and
into
aad
lcall
in
xchg
int3
inc
ja
mov
sub
cmp
je
shl
jnp
mov
jo
ss
or
je
dec
ja
fwait
out
adc
mov
pushf
outsb
cmp
or
insl
mov
pop
movsb
ror
scas
ja
rcrl
sub
cli
rorl
bound
mov
fisubrl
fldenv
loop
pop
scas
test
push
xchg
cmp
pop
je
inc
dec
mov
pop
fbld
push
cmp
mov
scas
in
out
pop
cmp
mov
int3
cs
std
mov
mov
repnz
aaa
pop
insl
and
sbb
push
jae
popa
popf
ret
cmp
adc
orb
inc
iret
jl
jb
mov
push
jmp
pushf
mov
shlb
adc
push
sarl
pop
je
into
inc
icebp
mov
shrl
and
movsl
xor
cmp
pushf
push
data16
jg
push
pop
dec
sarb
int3
out
mov
aad
mov
ss
sbb
pop
xor
adc
sub
in
sub
mov
mov
push
mov
cmpsb
shl
xchg
add
inc
mov
mov
andb
flds
or
scas
pusha
mov
xor
push
xchg
scas
or
cld
in
int3
jo
pop
xchg
inc
rorb
fnstenv
leave
arpl
and
pop
inc
dec
or
push
mov
xor
mov
icebp
push
dec
clc
jo
out
mov
push
pop
inc
pop
xchg
inc
cmp
rcrl
std
mov
icebp
xor
sahf
insl
daa
xchg
xor
add
lds
mov
mov
testb
mov
pushf
push
call
pop
sub
movsb
fs
adc
mov
inc
sub
xchg
fistl
test
pop
clc
into
mov
and
xchg
jge
mov
push
jg
cmp
ljmp
rcrb
dec
dec
jp
test
dec
jnp
cld
pushl
sub
xlat
xor
adc
es
dec
jp
ret
cmpsl
aam
mov
cmpsb
jo
or
loopne
mov
cld
xchg
pushf
jo
ss
mov
imul
cltd
push
das
push
sbb
push
push
in
jl
pop
and
imul
pop
cmp
imul
cmp
repz
mov
pushf
test
cs
cmpsl
dec
inc
lock
sarb
insl
test
inc
xchg
lds
out
adcb
or
ret
or
jg
fs
enter
push
in
or
sbb
aad
lods
orb
mov
test
push
imul
mov
or
mov
inc
xchg
insl
mov
mov
in
push
xor
std
jbe
shll
jnp
loop
add
movsb
xchg
std
je
lds
dec
shl
lcall
fwait
add
dec
daa
xchg
add
insl
sbb
imul
frstor
out
sbb
imul
sahf
push
loope
test
push
cmpsl
fadd
cmc
fwait
cld
jb
fwait
mov
movsb
loop
fsubs
dec
insb
sbb
jge
shlb
enter
dec
jb
adc
and
mov
test
push
push
add
loope
inc
aaa
add
and
mov
data16
xchg
fcom
xor
subl
adc
lret
scas
loope
out
and
dec
sub
push
lds
cmp
jp
adc
sti
dec
jmp
inc
mov
sarb
ljmp
rcl
std
repz
jmp
jnp
mov
cmpsl
scas
xchg
push
jbe
insb
ds
repnz
in
mov
out
push
xchg
or
aas
or
jns
test
pushf
mov
and
dec
dec
dec
push
out
pop
clc
mov
add
loope
sub
icebp
mov
jbe
test
rcrb
jbe
movsb
cmp
add
sbb
mov
push
xor
es
rcll
and
jge
adc
inc
ja
inc
rcrb
pop
enter
sub
add
stc
push
push
shlb
cld
inc
test
aaa
or
and
xor
jae
lcall
push
add
mov
pushf
outsb
shr
insb
lahf
negl
loop
and
cs
add
mov
jecxz
mov
loopne
movb
int3
scas
loopne
and
loope
jge
push
pushf
sub
repz
xlat
cmpsl
xchg
int
mov
jnp
aad
iret
gs
fstps
pop
add
popa
lcall
in
fmull
adc
and
xchg
inc
cmp
jb
xchg
xor
inc
push
push
add
imul
adc
pusha
cmc
push
xchg
mov
orb
insb
or
loop
xor
mov
shll
testb
dec
push
into
push
xchg
cmp
mov
mov
push
cmp
xorl
sbb
fidivrs
test
enter
pop
or
mov
incb
int
adc
in
mov
push
pop
loopne
push
call
add
jp
insl
leave
in
mov
cmc
aad
iret
pop
push
push
jecxz
adcb
jno
test
mov
mov
dec
or
inc
ret
sub
sub
and
subb
pushf
and
adc
mov
mov
repz
iret
xchg
jle
push
movb
mov
mov
pop
shl
sub
mov
jle
push
hlt
add
lahf
arpl
mov
mov
jo
out
es
cmp
jmp
adc
testb
jns
lahf
ficoml
xor
loop
mov
in
fistl
mov
add
or
mov
mov
out
xchg
and
xor
add
inc
mov
xor
mov
pop
jecxz
in
bound
faddl
jae
in
add
rol
mov
daa
sub
xchg
and
jo
push
dec
lcall
nop
cmp
mov
push
mov
jg
mov
arpl
pusha
addr16
cmpsl
or
in
bound
lea
hlt
mov
out
mov
mov
cmpsb
adc
adc
jno
push
xor
xor
dec
loopne
mov
mov
xor
fimuls
pop
cmp
sbb
jg
loopne
pop
test
xchg
sub
lds
mov
fdivrl
iret
pop
pushf
sbb
shlb
push
jp
mov
ret
iret
add
xchg
out
mov
sub
stos
push
add
sbb
sub
mov
sbb
cmpsb
sahf
cmc
aam
scas
mov
imul
outsl
out
sbb
dec
shrl
int3
es
imul
je
xor
cmp
adc
cmp
xchg
insl
lahf
mov
cs
and
push
add
mov
xor
pop
push
adc
push
daa
and
jg
dec
mov
push
aaa
movsb
nop
insw
mov
push
dec
inc
aaa
mull
out
out
std
stc
repz
sbb
nop
cmp
push
pop
pop
ret
sbb
mov
xchg
sti
push
sbb
test
xchg
lcall
push
dec
es
fucom
ficoml
inc
push
mov
lret
test
push
dec
movsb
pop
xor
xor
insb
mov
in
ret
lods
push
outsb
mov
fwait
dec
leave
fwait
sbb
sti
sub
and
stos
jecxz
mov
inc
test
sbb
ret
sub
sarl
mov
pop
jl
in
int
fidivs
mov
sub
xchg
mov
les
in
insl
outsl
dec
dec
stc
push
cmp
dec
push
adc
xor
rcll
outsb
pop
mov
dec
lods
out
fucomip
sbb
or
sub
fmul
imul
add
xor
clc
lcall
add
jae
in
scas
divl
xor
sahf
jmp
mov
mov
je
add
mov
pop
bound
push
pushf
loop
mov
sbb
shlb
mov
cmp
testb
jo
bound
dec
call
pop
mov
mov
hlt
fwait
mov
sbb
ficoms
sub
dec
adc
pop
test
in
out
test
bnd
popa
fs
imul
sti
push
pop
fildll
pop
fadds
shlb
cld
in
test
outsb
mov
sahf
xchg
jl
or
lret
jecxz
sub
inc
fmuls
lods
mov
sub
xor
cmp
push
sub
outsb
inc
fcmovb
push
add
or
and
in
subl
stos
pop
and
mov
adc
xchg
sbb
push
outsl
fistps
lock
loopne
inc
xlat
arpl
sub
inc
shll
lds
inc
mov
adc
mov
dec
xchg
out
sti
jl
jmp
adc
clc
lret
cmp
cmc
insb
inc
adc
jae
add
adc
cmpsl
cmp
mov
fucom
dec
jne
jb
in
sbb
push
fwait
dec
imul
mov
pop
insl
push
sti
in
aad
dec
or
fst
cmp
inc
test
xchg
or
push
repnz
dec
clc
add
int3
xlat
mov
fdivs
testb
out
jg
lahf
mov
xchg
add
mov
cmp
inc
fstl
inc
rorb
add
xor
pushf
adc
xlat
cwtl
jp
into
jmp
das
clc
and
dec
push
outsl
xor
sub
mov
rorb
jo
lcall
in
push
mov
push
jmp
mov
and
fwait
lods
xlat
push
ficoms
xor
test
lret
adc
or
rolb
mov
and
sti
xor
xchg
stos
adc
fidivs
xor
pop
push
sbbl
leave
dec
jbe
or
loopne
push
sbb
add
mov
cmp
sub
rorb
dec
adc
inc
fcmovnbe
mov
outsb
mov
mov
push
ljmp
xchg
int3
push
cmp
pushf
xchg
ret
jno
rolb
pusha
and
dec
sbbl
xor
mov
insb
loopne
notl
stos
sub
mov
push
aad
adc
or
jo
add
andb
rol
cmovge
xchg
xchg
xsave
jae
insb
inc
scas
js
push
cmpb
mov
clc
sub
sbb
push
inc
test
and
fwait
hlt
adc
out
push
nop
xor
mov
pop
popa
movsb
popf
inc
and
cs
outsl
add
sbb
inc
jns
rolb
in
mov
dec
inc
xchg
cmp
lret
test
adc
cmp
xor
repnz
jbe
push
jp
dec
sbb
imul
addr16
or
xchg
popa
cs
cld
mov
adc
cmp
adc
jg
call
cmp
lahf
mov
adc
dec
pop
push
inc
cmp
outsb
jp
sbb
push
adc
cmp
lret
add
mov
sub
mov
cwtl
stc
in
inc
dec
enter
add
sub
fstl
cltd
cmpsl
jae
fisubl
push
jb
stos
xor
xchg
popa
sub
mov
std
movsl
stc
push
inc
int
inc
adcb
push
jne
insb
mov
imul
aad
in
pop
pop
ficomps
dec
or
stos
push
mov
cltd
sub
mov
fistpl
adc
xchg
lret
jg
rorb
leave
adc
or
out
xor
loop
dec
rorl
xor
inc
rcrb
testl
inc
mov
or
lods
cmpsl
xchg
mov
out
cmp
mov
push
mov
xor
pop
arpl
sbb
das
setl
daa
jge
pop
ret
cmpl
int3
xchg
pop
in
mov
loope
push
push
and
cs
cmpsl
imul
pusha
or
xchg
ja
pop
and
cmpsl
lds
ja
jle
mov
and
adc
pop
and
ret
jo
inc
pop
mov
mov
fisttpll
lds
sub
push
jae
jo
add
pop
into
or
mov
push
mov
imul
xor
int3
out
fstp
sub
insb
push
stos
sub
jnp
jno
stos
cmp
add
mov
insb
pop
fs
sar
sub
mov
sub
cmp
fs
aas
mov
mov
add
xchg
cs
jp
insl
ja
cmp
push
fnstcw
sub
loopne
nop
sub
sbb
sarl
xchg
push
or
mov
inc
sbb
popa
fidivs
test
pushf
outsb
gs
jne
mov
out
cvttps2pi
popf
xor
iret
add
sbb
seta
mov
aad
mov
inc
clc
xchg
push
scas
jo
sbbl
dec
ffreep
sub
push
pop
fsts
fcoml
adc
outsl
fwait
lea
pop
outsl
mov
notl
mov
fiaddl
cmpl
xchg
xchg
mov
sti
xchg
add
sub
pop
sbb
or
mov
push
in
int
xchg
pop
cmp
lcall
pop
push
popl
in
sahf
pop
repz
shl
addr16
cmp
aaa
or
and
ret
sub
sbb
je
std
push
cwtl
mov
fbstp
mov
cld
sub
js
test
adc
jns
jb
out
hlt
je
scas
dec
lcall
lcall
iret
test
or
dec
test
jne
pop
ja
sub
scas
push
or
sarl
mov
xor
aad
mov
lods
in
dec
cld
add
jl
xlat
sub
test
rol
xchg
aam
or
aad
and
lret
pop
and
imul
push
dec
shlb
addr16
xor
or
scas
divl
pop
jne
stos
xor
ljmp
in
test
adc
push
outsl
inc
movsb
xchg
mov
sbb
or
loope
pop
sti
dec
sti
insb
sub
fnstcw
xor
imul
lds
scas
and
jb
sub
or
cmpsb
mov
stos
mov
add
sbb
pop
or
cmp
cmp
jns
scas
stos
pop
insl
pop
cs
in
lcall
in
mov
stos
mov
xlat
sub
push
in
fwait
sub
push
push
xchg
into
or
sub
mov
lods
fucomi
movsb
xlat
jmp
mov
push
fstpl
mov
ja
dec
pop
mov
mov
mov
mov
out
and
sahf
cmp
sbb
adc
push
cmpsb
repnz
mov
cmp
cmp
mov
cmp
and
push
in
push
mov
nop
xlat
xlat
ja
mov
test
adc
mov
push
das
mov
insl
and
out
xlat
push
ds
mov
and
jbe
pop
push
outsl
dec
dec
dec
sub
pop
testl
out
pop
iret
sbb
jbe
popf
mov
cmpsl
cli
mov
sbb
test
test
test
stos
ret
adc
mov
rorb
sarl
scas
andl
adc
jnp
mov
mov
push
out
push
fistpll
cld
enter
mov
cmc
lds
aad
lods
int3
add
sub
scas
lcall
push
shl
jmp
int
push
xchg
mov
sbb
mov
jle,pt
dec
add
icebp
add
push
in
jmp
js
jo
mov
shrb
dec
cmp
nop
clc
add
jae
data16
pop
ret
push
sti
loope
push
sub
adc
nop
popf
negl
push
loopne
xor
addb
xlat
enter
jp
xchg
cmp
cmp
shll
cmp
fsubrp
jp
push
test
jg
sbb
or
mov
mov
loopne
mov
jne
cs
fstpl
fsts
jl
push
cmp
fbstp
iret
jmp
mov
or
imul
cmpsl
movsb
loopne
push
pop
fwait
push
push
sbb
sub
ss
sub
add
and
lock
sahf
push
sbb
je
fwait
hlt
test
pusha
push
daa
and
pop
jge
fdivl
or
hlt
shl
mov
mov
cmc
shl
js
pop
inc
scas
and
out
cmp
popf
or
cmp
enter
jb
es
stos
icebp
imul
les
add
ja
mov
leave
out
out
xchg
sub
pop
jle
jmp
push
cltd
jae
mov
fldcw
jbe
test
dec
lahf
fidivrs
pop
sub
push
dec
xor
sbb
mov
push
jecxz
adc
lahf
rorb
hlt
or
xor
and
cmp
sub
push
inc
stos
pusha
notl
and
jo
jae
ljmp
andb
movsl
lea
push
xchg
imul
cmp
aaa
adc
dec
mov
or
xor
leave
ljmp
cmp
and
imulb
out
cvtps2pd
aam
hlt
jp
ljmp
out
test
enter
testl
in
mov
ja
cli
jns
stc
sub
inc
dec
sub
mov
fsubl
adc
cs
xor
xchg
dec
fcompl
xchg
pop
call
dec
mov
aaa
in
notb
inc
pusha
daa
lods
pop
int3
jns
daa
insl
push
iret
mov
pop
add
sbb
movsl
adc
push
mov
xchg
lea
mov
pop
inc
mov
out
xchg
inc
or
arpl
sub
mov
xor
pop
das
push
adc
cmp
je
push
mov
fists
repz
loope
and
pop
mov
sbb
xchg
jb
xchg
fiaddl
nop
or
cmp
bound
addl
popa
jne
pop
clc
fdivrl
jp
test
or
jbe
inc
stos
cmp
hlt
pop
cli
movsb
rcll
inc
and
xchg
bound
outsb
dec
xorb
cs
hlt
mov
jl
pop
in
xchg
cli
xchg
inc
push
pop
data16
clc
movsb
fwait
jecxz
xchg
jb
xchg
xor
or
push
loopne
cmpb
test
cmpsb
mov
jecxz
jp
dec
repz
sub
jl
dec
xor
test
inc
enter
mov
jmp
loope
xchg
in
pop
pop
rcrl
leave
inc
mov
pop
das
movsb
inc
pop
je
inc
xlat
sbb
xchg
push
dec
movsl
aas
jl
mov
mov
scas
dec
daa
push
mov
add
movsl
jne
and
mov
test
jp
cli
inc
push
xchg
mov
sti
and
mov
arpl
cmp
sub
pop
shlb
stos
imul
xor
aam
push
fstpl
adc
in
push
jg
push
sarl
jg
jnp
inc
mov
int3
in
loop
imul
add
data16
cmc
shlb
inc
dec
sahf
scas
mov
imul
sarb
mov
dec
movsb
scas
fucom
push
lahf
xor
xor
into
mov
cmp
and
mov
xor
sub
mov
leave
adc
push
mov
cmp
scas
int
lods
cltd
cltd
inc
fisubs
fcmove
or
repnz
sbb
std
sarl
cmpsl
aaa
jecxz
adc
lcall
sbb
loope
ds
dec
jne
push
jmp
jnp
mov
or
mov
or
outsl
xchg
nop
int3
sub
mov
outsl
loope
das
test
or
test
push
xor
out
fiadds
imul
inc
mov
fisubrl
and
rorb
and
jo
jp
lds
jae
pop
adc
cmovge
pop
cmpsb
cmpsb
addb
sub
fs
sub
in
fcmovb
and
and
cmc
cmpl
js
cmp
xor
push
inc
cwtl
cmp
sbb
sub
lock
sub
pop
push
inc
sbb
popf
lret
or
fadds
sub
popa
out
dec
jne
stos
pop
add
pop
outsl
sbb
dec
pop
mov
loop
mov
fmul
cmp
dec
es
pop
xchg
fucomp
lcall
or
cmp
fs
dec
in
movsb
fs
jb,pt
ret
dec
xchg
and
fdivl
aam
xor
lahf
adc
sbb
add
mov
xchg
ret
jp
clc
mov
daa
adc
cmp
mov
fsts
xor
stos
rolb
repnz
mov
fcmovnu
cwtl
jecxz
sbb
sti
jp
push
mov
fiadds
scas
mov
mov
cs
das
pop
filds
fs
inc
dec
test
cmp
mov
mov
lock
sub
sbb
lret
jbe
scas
popf
lahf
out
add
loop
sahf
mov
filds
fbld
dec
rolb
ja
mov
addb
xchg
sarb
jno
sbb
loopne
dec
es
push
das
data16
cmpsl
insl
pop
lahf
sub
out
or
cmp
stos
popf
vmovhpd
add
cwtl
pop
jns
in
xchg
and
fwait
xchg
xchg
pop
js
icebp
mov
lods
pushf
je
jge
cmpsl
sarl
cmp
and
imul
in
fisttpl
adc
add
lock
arpl
or
adc
and
pop
lods
aaa
ffreep
int
xchg
sbb
inc
xchg
shrl
inc
xchg
outsl
sub
shlb
or
xchg
xor
fisubrs
vunpcklps
mov
add
out
and
or
fildl
pop
cmpb
xor
jo
cld
test
push
imull
std
pushl
fldt
xchg
mov
push
lds
adc
inc
push
xchg
or
jne
int
loop
neg
mull
cmp
pop
adc
add
stc
in
mov
ja
pop
push
not
sub
test
bound
mov
repnz
xor
mov
subb
in
in
jo
xlat
inc
ja
push
cmpsl
outsl
and
or
mov
sbb
mulb
std
mov
test
inc
imul
inc
push
sub
repz
inc
lea
sub
loope
push
stc
leave
aam
push
sub
push
test
cmp
je
fs
cltd
jo
ds
jp
xchg
xor
dec
mov
jp
mov
xor
mov
push
addb
cmpsb
xchg
shll
mov
mov
fcmovne
outsl
jle
mov
movl
push
es
shll
add
mov
dec
sbb
aad
mov
ficoml
mov
push
addr16
or
sarb
mov
push
adc
mov
out
mov
sbbb
aad
cmc
hlt
dec
mov
xor
xor
or
mov
xchg
test
jg
sub
dec
xchg
adc
xchg
sub
outsb
inc
jo
js
gs
stos
leave
loop
push
jg
pop
jp
cmpsl
sahf
and
push
xchg
out
mov
mov
movsl
or
loope
mov
ds
out
sub
xor
pop
clc
lds
loopne
jmp
mov
xchg
jne
mov
inc
popf
jae
cmpsb
pop
lret
lock
sub
xchg
xchg
jg
repnz
clc
push
daa
fsub
aam
outsb
fcompl
int
dec
fcmovnbe
push
data16
adc
jg
xchg
cmp
xor
psadbw
mov
testl
lcall
mov
cld
fiadds
xor
pop
roll
lock
mov
test
push
dec
es
fcoml
mov
movsb
outsl
adc
fdivs
out
jmp
aas
fmuls
sub
in
xchg
sbb
js
dec
insb
sarb
bound
sub
jge
aaa
test
icebp
jns
mov
lods
mov
sbb
fistpll
pop
mov
mov
xor
rcr
andl
data16
mov
xor
lds
clc
pop
repz
sbb
stos
divl
xchg
sub
jno
mov
xlat
pop
orb
loop
sbb
mov
sub
fcompl
mov
adc
push
cltd
stos
pusha
push
jl
jnp
adcl
or
int3
les
stos
add
push
and
sarb
xchg
dec
mov
pop
in
shrl
fisttpll
cmp
xchg
cmpsb
pop
leave
and
push
fs
mov
sub
mov
inc
into
dec
push
mov
push
jl
and
or
aas
out
jo
sub
push
jo,pt
lods
sahf
out
adc
add
jmp
and
dec
mov
hlt
ljmp
adc
in
lea
and
mov
mov
inc
jle
adc
out
mov
call
mov
cltd
dec
stos
xlat
scas
aas
loop
shll
in
push
push
add
jl
mov
stos
mov
movsb
mov
out
jno
hlt
xchg
movsl
outsb
call
imul
jae
or
lods
xchg
imul
sbb
cmp
insb
jo
repnz
lcall
jecxz
xor
add
insb
sbb
dec
or
movb
call
dec
les
mov
cmp
pop
xchg
xchg
mov
leave
pop
cmpsb
mov
cli
xor
or
sub
xchg
or
mov
jge
jnp
imul
push
mov
dec
les
adc
in
or
sbb
inc
loopne
push
jae
mov
adc
dec
mov
ja
roll
mov
adc
clc
adc
mov
and
fcomip
insb
je
mov
inc
les
loop
cmp
testb
or
fisttps
ss
cmp
jns
dec
mov
xor
inc
xlat
ficoml
adc
iret
jb
xlat
pop
jno
mov
and
push
clc
jg
inc
gs
in
jl
sbb
decl
mov
sbb
in
push
xor
lcall
mov
pop
xlat
inc
frstor
jns
cmp
or
push
push
orb
cmp
das
aad
jmp
mov
push
push
mov
test
lcall
dec
je
mov
mov
add
jns
dec
adc
xchg
clc
popf
das
hlt
rorl
mov
int
dec
popf
scas
jge
loope
lret
lods
scas
or
mov
rorb
cs
mov
shl
je
dec
push
pop
xchg
sub
xchg
out
outsb
fnsave
dec
stos
sbb
dec
fsubrp
jle
mov
leave
lds
into
rcrl
xor
or
psubsb
sar
cmpsb
sub
fwait
clc
pop
pusha
iret
inc
andl
in
mov
add
cmpb
pop
inc
sub
xchg
loope
imulb
cmp
jnp
subb
lret
lcall
icebp
movsb
lret
cld
mov
pop
lds
adc
pusha
xchg
out
push
or
pushf
in
sarb
in
aas
xchg
pop
aaa
sti
mov
shll
mov
scas
and
pop
out
sti
cmp
jecxz
daa
out
fisttpll
xor
mov
or
sahf
lret
sti
pop
cltd
add
or
jne
pop
mov
jle
mov
fadd
adc
sbb
mov
adc
insl
in
jle
fidivs
loopne
jne
or
stc
out
and
push
adc
adc
cmp
sub
push
ja
push
clc
cmp
ljmp
pop
fistpll
jge
pop
lods
xchg
icebp
xor
sti
roll
jl
in
mov
and
sub
push
sub
fstpl
cmp
adc
rclb
pop
test
sub
inc
incb
jae
sub
or
gs
mov
jle
in
cmp
insl
cmc
in
idiv
jo
mov
sub
pusha
or
imul
push
cwtl
stos
fwait
sub
cmp
je
pop
les
loope
movsl
lahf
lahf
add
sub
aas
mov
aad
sub
cmp
sub
je
pop
movl
cmpl
repz
pop
or
add
pop
in
andb
jge
loopne
js
xor
lds
bound
in
addl
mov
mov
jge
lea
xor
mov
pop
push
fwait
cmp
aaa
xor
mov
jmp
movsb
push
jmp
mov
xchg
in
jle
xchg
sbb
cmc
sub
sbb
dec
movsb
lcall
mov
es
adc
push
aas
mov
pop
dec
push
mov
pop
ss
pusha
sub
cmp
or
sub
cmpsl
and
sbb
sbb
add
fcompl
xor
inc
movsb
jecxz
inc
insb
or
mov
mov
push
xor
mov
pushf
ficoml
hlt
decl
lret
pop
xor
mul
mov
and
loop
cmp
cli
adc
cmp
test
add
push
pop
pop
dec
jle
or
mov
push
stos
push
jno
mov
and
mov
out
jns
lods
popf
hlt
into
fwait
xchg
subb
movsl
jne
dec
jmp
inc
xchg
jo
mov
movsl
cmc
cwtl
cmpsl
push
hlt
mov
movsb
push
in
pop
xor
push
xchg
and
and
push
dec
movsl
je
stos
loop
pop
mov
faddl
fcmovbe
xor
test
mov
sti
mov
cld
iret
mov
sub
lahf
push
pusha
movsb
mov
or
mov
inc
fcoms
jl
gs
addr16
pop
aam
lods
mov
out
in
fstpl
xchg
fmuls
sbb
gs
pushf
movsb
mov
push
mov
popl
in
xor
cmp
inc
add
clts
daa
std
jecxz
xor
dec
or
jg
sub
push
inc
cltd
lock
cs
cmp
je
ret
jg
mov
sbb
sub
adc
dec
push
push
push
cmp
icebp
aad
xor
clc
cmp
ficoml
mov
mov
sub
jecxz
dec
xor
fcom
dec
addl
icebp
push
xor
insb
inc
lret
cmpsl
faddl
dec
ja
xor
aad
xchg
dec
testb
icebp
or
js
or
mov
lea
sete
push
mov
push
hlt
lretw
add
dec
mov
push
mov
fnstsw
inc
or
clc
cs
int3
cmpsb
cmp
and
mov
insl
cltd
repz
xchg
addr16
dec
add
and
fimuls
push
fwait
adc
lods
jb
punpckhbw
sbb
cmp
arpl
inc
mov
add
lret
loopne
clc
rorl
sbb
jp
add
icebp
cmp
cmp
cmpsb
and
push
ja
inc
je
shrl
jmp
or
js
in
mov
aam
fdivl
popf
xor
stos
cltd
aas
sbb
dec
bound
shlb
mov
mov
shrb
sub
in
pop
imul
outsl
pop
fcompp
mov
mov
and
scas
lock
pop
fs
outsl
or
lret
iret
jl
dec
push
dec
jne
lods
add
lods
mov
and
or
enter
int
and
or
adc
in
mov
mov
lock
and
sbb
insb
test
gs
addl
xor
fmulp
xor
out
push
mov
leave
mov
push
or
out
data16
cwtl
leave
jp
outsl
pusha
mov
xorl
push
add
lods
jnp
je
pushf
xchg
not
or
cmp
rorb
jbe
imul
repnz
inc
pop
outsl
pop
adc
cmp
cmpsl
and
mov
or
push
movsl
mov
shrd
sahf
adc
les
push
loope
mov
pop
imulb
inc
sub
dec
cmp
je
aas
sbb
lods
push
xor
test
jge
xor
mov
sbbl
cmc
arpl
mov
call
enter
ret
setg
sbb
repz
loop,pt
and
arpl
pusha
dec
fistps
xchg
out
clc
movsl
mov
add
es
fcom
xchg
push
lret
push
aas
ret
dec
or
sti
imul
cmp
inc
and
bound
dec
push
adcb
dec
sub
fsub
push
jno
xor
nop
insb
popa
ret
mov
pop
mov
cmp
aad
cmpsl
sbb
fldenv
mov
test
and
xchg
daa
adc
mov
or
jb
and
fsubrl
xor
icebp
add
and
mov
mov
dec
push
and
push
ja
and
fldl
jecxz
sub
jae
sbb
xchg
lret
add
mov
xlat
cmp
lds
cwtl
sub
jbe
dec
imul
jb
add
sub
add
fildll
aam
push
sub
push
cli
sahf
or
icebp
mov
mov
out
cmpsl
adc
clc
rcrl
xchg
aas
inc
cmpsb
push
add
ret
cmpsl
clc
jle
out
lcall
push
push
ja
sbb
lock
jno
out
jge
pusha
shl
jno
outsl
fcmovnbe
sbb
sbb
dec
notl
scas
and
mov
mov
mov
mov
jecxz
lea
movsb
jbe
pushf
test
sahf
cltd
not
sub
test
fimull
mov
add
shl
cltd
cmpsl
sbb
popl
push
mov
mov
call
mov
push
mov
aaa
nop
pushf
js
fimull
imul
mov
fmull
movsb
adc
daa
inc
int3
pxor
dec
cli
loope
fildll
xchg
xchg
pop
mov
inc
mov
dec
popl
dec
cmpsl
pusha
rclb
xchg
insl
inc
pusha
cltd
dec
dec
iret
roll
mov
inc
enter
cmp
pushf
into
mov
dec
ja
xorl
ja
fs
pop
dec
das
rcrb
push
xchg
xor
or
cs
fisubrl
into
mov
dec
outsl
mov
popa
xchg
mov
aaa
scas
sbb
repz
lock
sub
sbb
sub
add
lret
inc
push
inc
push
push
fucomip
jge
push
mov
outsl
inc
mov
jmp
sub
jb
inc
mov
or
or
mov
rolb
iret
cmp
fucomip
int3
pusha
pusha
cmp
push
cmp
cld
sub
xlat
lahf
insl
jp
mov
adcb
rcll
add
fisttpl
repz
sub
fiadds
sbb
jecxz
sahf
push
ds
mov
gs
vmulss
push
mov
and
test
inc
inc
mov
push
lods
rolb
js
add
aas
xor
scas
push
data16
push
push
dec
sub
mov
fdivrs
jb
xchg
jp
std
out
aam
adc
push
add
pop
inc
stos
jecxz
mov
test
js
dec
movsb
lcall
test
dec
cmp
inc
stos
pop
inc
aad
push
sub
add
or
aas
cmp
mov
mov
sahf
in
push
and
inc
ljmp
push
or
add
xlat
sub
jnp
mov
pop
lods
xor
mov
dec
rcrl
pop
cmp
mov
jnp
notb
enter
or
loope
test
and
sub
inc
dec
dec
das
or
inc
pop
mov
jge
loopne
sbb
imul
clc
mov
mov
sahf
adc
add
negb
in
xor
push
inc
int
xchg
inc
adc
fwait
je
xchg
test
mov
inc
or
mov
jnp
inc
dec
adc
mov
xor
and
mul
xor
jo
mov
fistps
out
jle
mov
adc
cmpsl
pop
xchg
icebp
jns
mov
push
sti
mov
loop
mov
inc
pusha
cmp
adc
mov
cli
push
cmp
pushf
mov
pop
repz
roll
mov
sbb
dec
push
xorl
cmp
sub
loopne
movsl
or
cmp
dec
and
jp
or
cli
cmp
mov
add
out
dec
es
xor
jecxz
push
push
add
jnp
loope
push
adc
and
or
cmp
xchg
mov
mov
sbb
repz
xchg
mov
les
sub
stc
push
xlat
pop
ds
sahf
jp
imul
test
iret
out
frstor
jns
xor
fmul
or
pushf
cwtl
fcom
cmp
push
adc
mov
loopne
sub
adc
dec
int
jecxz
pop
sbb
mov
fisubs
cmp
xlat
fdivrl
test
nop
and
bound
mov
cli
inc
call
addb
adc
inc
xlat
mov
mov
inc
movsl
push
test
hlt
mov
inc
js
add
adc
add
xor
outsb
cs
sarl
xchg
test
shll
ds
scas
or
jp
sub
mov
movsl
inc
clc
sbb
mov
inc
or
sbb
cmp
out
pop
outsb
rclb
dec
or
std
out
popl
mov
fdivrl
xor
insl
push
mov
xor
data16
test
dec
jmp
les
out
inc
scas
test
fsubl
shl
mov
sbb
mov
mov
fidivrs
fldcw
jo
lret
sub
dec
pop
dec
pop
push
or
hlt
es
loopne
push
pusha
or
jb
jecxz
gs
jb
ljmp
fbstp
cmc
notl
shl
bound
pushf
adcl
pop
sbb
inc
mov
out
sahf
sub
movsb
jnp
into
and
iret
sbb
sub
and
es
rcrb
cwtl
fidivrl
int
mov
in
push
mov
fldt
lea
xor
hlt
divb
xor
ljmp
sti
push
lock
or
shl
push
mov
cld
add
jne
xor
lret
mov
ret
fisubs
dec
or
or
mov
cli
add
mov
jle
mov
scas
mov
mov
xchg
clc
mov
or
jp
mov
mov
mov
pop
jle
in
mov
jl
clc
sbb
lret
inc
cmp
leave
xchg
daa
stc
inc
js
inc
xchg
ljmp
repnz
push
or
mov
lock
in
lcall
push
insb
adc
xchg
push
and
jns
and
mov
testb
stos
pop
pushf
in
or
add
shr
fwait
mov
fisttpll
inc
shll
pop
es
int
adc
jl
push
in
push
divb
or
sub
int
ljmp
and
jp
cwtl
jns
sub
popf
psubq
xchg
fnsave
enter
push
jle
lcall
mov
imul
jnp
xor
sub
aaa
mov
mov
mov
int
outsb
lds
fwait
or
mov
mov
shll
mov
fs
into
sti
std
stos
sub
arpl
aad
andnps
xor
ret
jge
imul
pop
out
sbb
repnz
adc
jns
cmp
cld
sub
cwtl
lods
mov
cmp
lds
sti
sub
ljmp
loop
xchg
es
dec
shlb
pop
setno
insb
leave
sub
scas
pusha
test
dec
sub
cmp
pop
lods
cmp
pop
or
out
and
add
bnd
xchg
notl
shr
imul
iret
outsb
in
addr16
xchg
int
jnp
mov
jne
js
rclb
pusha
or
pop
scas
dec
push
jge
mov
push
xchg
sub
fsts
out
dec
movsb
and
into
pop
pop
push
addr16
lods
lods
push
movb
sbb
icebp
cmp
inc
ret
fwait
stos
dec
shr
pop
cmp
fisubrs
sub
decb
pop
add
or
out
jecxz
jmp
lcall
out
in
in
addr16
repz
xchg
xor
fcomps
jno
clc
das
mov
addl
jne
pop
inc
fldl
mov
jle
mov
data16
lods
dec
loopne
cltd
pop
iret
aam
push
stc
test
iret
xchg
fcompl
sub
xchg
and
push
adc
push
xchg
ds
test
push
repz
lock
sub
mov
hlt
xchg
pusha
jnp
and
ret
test
ljmp
icebp
mov
mov
es
pop
repz
add
xchg
mov
lahf
lret
insb
dec
fcmovb
sub
mov
test
ljmp
sbb
loope
loope
mov
sub
adc
jno
add
sbb
js
xchg
ret
add
cli
lock
pushf
lret
int3
xchg
sarb
fimuls
jge
out
dec
push
stc
xchg
mov
imul
xor
imul
dec
cmp
icebp
push
decb
mov
nop
loopne
in
and
or
leave
fwait
mov
jae
lcall
cmc
xchg
repnz
jnp
mov
les
sahf
jo
pminub
iret
xchg
out
sub
inc
adc
add
outsb
dec
xorb
movaps
push
cmp
cmp
inc
push
scas
sub
sub
out
jle
imul
pop
ljmp
mov
add
lret
insl
mov
inc
add
sub
jg
lcall
fisubs
mov
mov
cli
pop
push
or
and
int
cmp
mov
xchg
cmp
and
mov
push
inc
icebp
or
clc
pop
mov
add
inc
js
rorb
fnsave
xchg
fcmovnb
jmp
ret
aad
xchg
lea
xchg
push
add
insb
lds
in
add
ljmp
out
adc
pop
jo
mov
sbb
mov
sbb
cmp
in
cs
dec
sbb
lock
jmp
cmp
cmc
call
mov
push
pop
fisttpl
cmpl
in
adc
jbe
cltd
or
lea
repz
xchg
in
and
and
shll
cmpl
out
mov
jnp
add
cmp
lahf
xchg
xchg
add
sbb
cmp
lahf
lock
aas
fwait
stc
outsb
test
repnz
dec
incb
sbb
mov
adc
xchg
sbb
mov
xchg
push
inc
shlb
les
pushf
aam
xor
clc
fdivrl
int3
call
mov
ds
jmp
xchg
push
inc
push
jle
incl
cmp
push
xchg
push
xor
sbbl
nop
adc
incb
adc
dec
lret
jnp
scas
dec
out
jg
push
imul
lret
pop
sub
lock
inc
pop
push
loop
pop
mov
or
jno
insb
call
dec
xlat
and
mov
cld
dec
nop
sub
sbb
cmp
pop
aam
jb
sbb
lcall
in
enter
in
xchg
lods
pop
pop
insl
or
das
lret
adc
test
push
shll
push
mov
mov
jo
pop
xor
pop
lds
sub
jnp
cwtl
pop
icebp
out
add
out
lret
cmc
adc
in
scas
test
sahf
xlat
inc
sub
mov
pop
push
push
mov
xchg
iret
adc
add
or
dec
sarb
push
roll
push
and
inc
push
pusha
outsl
jb
mov
xor
out
mov
adc
ja
dec
or
mov
mov
pop
lahf
mov
inc
cmp
mov
xor
cwtl
shll
jbe
test
fxtract
insb
outsl
in
cmpsb
test
das
or
loope
movsb
sbb
fcmovne
xorl
pop
js
ds
outsb
in
pop
mov
fwait
stos
xchg
xor
push
xor
test
test
nop
mov
shll
xchg
adc
adc
xor
notb
test
xor
mov
scas
cld
inc
and
dec
lock
pop
adc
hlt
jno
in
add
add
repz
stos
pop
jns
jl
in
inc
movsl
inc
adc
into
mov
sbb
cli
addr16
push
fcmove
stc
add
mov
fnstsw
sbb
xor
fcomps
pop
sarl
fdivrl
or
cld
or
test
dec
data16
and
jp
xor
adc
and
inc
scas
add
add
test
jl
rolb
mov
orb
jb
push
push
pop
inc
inc
scas
shll
dec
xor
clc
inc
mov
outsb
outsl
add
ficoml
xchg
cs
test
push
mov
pop
push
sub
dec
add
icebp
sub
test
adc
pusha
mov
xchg
int
lcall
pop
popa
sub
aam
into
stos
jl
add
pop
xchg
ret
out
daa
lea
je
xlat
jne
add
ljmp
jo
jne
nop
mov
shll
popf
xchg
pop
ja
pusha
cmc
loopne
mov
inc
mov
lds
pushf
adc
rol
sbb
jns
mov
adc
gs
repz
shr
fbstp
fs
pushf
std
ret
mov
inc
scas
or
pop
cmpsl
outsl
push
xorb
ljmp
mov
cmp
sub
jnp
sub
les
loope
xchg
inc
xchg
jecxz
jno
pop
push
stc
pop
or
leave
mov
loope
subb
mov
roll
nop
cmp
jmp
dec
mov
cmp
xor
lea
daa
xchg
cltd
lea
and
repz
enter
call
ja
push
fistpll
dec
fsubrs
add
out
sub
call
movsl
ret
inc
or
ds
lret
or
and
mov
push
int
cmp
popf
cmpsl
mov
addl
add
jne
pop
cmp
pop
push
movsl
xchg
push
xchg
xchg
mov
jp
dec
mov
iret
adc
pusha
xor
mov
pop
test
and
cmc
into
gs
pusha
xor
mov
xchg
adc
cltd
arpl
cmp
xor
fsubrs
mov
xor
xor
call
push
testl
push
ljmp
jecxz
mov
nop
stos
sbb
lahf
test
dec
pop
das
rcl
jl
sbb
sub
dec
and
mov
icebp
jmp
cmp
mov
dec
ret
or
stc
icebp
inc
add
xor
sbbl
sbb
hlt
xchg
lret
aaa
or
sbb
mov
clc
pop
push
jmp
pop
inc
addr16
es
lret
pop
lods
out
shlb
push
xchg
call
push
inc
sub
lods
loop
std
adc
push
jno
das
imul
aas
ret
mov
cli
sbb
push
sub
cmc
pop
pop
rcll
jmp
pop
std
mov
or
pushf
jl
fdivs
add
sub
mov
ljmp
ja
cmpsb
setne
mov
fs
or
pop
mov
pusha
pop
cmp
stos
mov
or
mov
mov
nop
and
push
sbb
cwtl
enter
push
cmpl
pushf
sub
dec
add
sbb
mov
mov
dec
and
pop
cmp
sbb
lea
jno
dec
test
mov
out
loope
ret
rclb
les
mov
jmp
psubusb
push
out
fcomi
cmp
mov
inc
jno
ljmp
xchg
rcr
sbb
or
push
and
mov
pushf
mov
outsb
add
scas
ret
jnp
loopne
ret
dec
cmp
mov
add
je
fldl2t
add
mov
addr16
dec
outsb
adc
shll
lret
push
mov
adc
das
adc
cs
cs
shlb
xchg
shl
xor
test
sub
sbb
or
jno
scas
lcall
mov
xorl
imul
sbbb
pop
stos
int3
arpl
push
test
mov
push
add
test
cmpsb
popf
in
je
movsb
out
movsl
xchg
dec
push
jg
xchg
sub
in
sahf
adc
mov
lret
jo
inc
mov
clc
iret
xor
xchg
adc
je
addr16
insl
popa
adc
daa
xchg
pop
mov
inc
js
cmc
sbb
pop
cmc
repz
lcall
sub
test
sub
sbb
call
sub
outsb
movl
fdivl
lret
lahf
mov
cwtl
cmp
add
fs
enter
mov
int
cmp
mov
fstps
sub
dec
or
pop
lds
repz
sbb
out
add
cmp
loope
adc
or
mov
jnp
mov
int3
xor
mov
ret
sub
lock
cmp
lods
jne
inc
mov
pop
out
mov
sub
lcall
nop
lret
in
ss
gs
test
push
cld
push
sub
pop
loopne
or
notl
push
inc
add
shr
loope
mov
adc
call
mov
inc
add
aad
test
std
ljmp
bnd
cmp
sbb
sub
adc
cli
out
and
shrl
push
adcb
test
test
adc
mov
push
xorb
pop
outsb
loopne
xlat
inc
stos
inc
add
sub
ret
adc
shlb
imul
stc
out
xchg
ret
mov
dec
mov
in
hlt
cwtl
in
adc
xchg
xor
pop
jno
and
js
imul
add
js
push
je
lods
pop
mov
cwtd
adcl
inc
or
adc
test
sub
lds
bound
shl
inc
xor
push
xchg
aaa
popf
cwtl
or
leave
fcomip
lock
or
rcl
lret
and
add
sbb
cmp
or
pop
jo
xchg
sbb
xlat
jge
mov
mov
movsl
shl
lcall
les
and
mov
fsubl
push
enter
dec
dec
cli
jns
inc
sub
nop
mov
arpl
and
mov
xor
shrl
push
sbb
sbb
sbb
arpl
std
sbb
leave
stc
or
mov
sub
or
push
cli
sbb
sbb
push
xchg
ret
subb
push
mov
jnp
lea
push
test
add
cmpl
or
push
test
mov
loop
repnz
or
pop
add
cmp
push
xor
lcall
jp
sbb
push
insl
scas
out
stc
xchg
loope
adcl
dec
jge
mov
insl
jo
repz
pop
aad
pop
out
dec
adcb
xchg
adc
out
gs
xor
sbbl
jno
test
xor
mov
jge
adc
sbb
or
or
aam
jae
movsb
xlat
dec
popa
sub
je
cs
dec
jge
loope
orb
fiadds
jb
mov
or
out
lods
inc
movsb
sbb
icebp
lods
fcmovnbe
cmp
sahf
jo
cmp
in
jecxz
lods
cmp
mov
or
arpl
aaa
sbb
and
xor
decb
lcall
sahf
out
test
jnp
loope
jno
in
add
outsl
pop
into
mov
inc
mov
cmovg
dec
mov
fs
sbb
outsb
into
and
mov
movsb
in
mov
aaa
adc
mov
inc
ret
pop
pop
jp
je
mov
or
sbbb
clc
pop
lods
mov
push
test
fisttpl
jno
jo
adc
shrl
sbbb
push
cmpsb
cmp
cld
scas
cmc
test
jno
dec
mov
and
fwait
jns
int
sbb
mov
arpl
pop
mov
mov
jmp
jle
adc
xchg
ret
ja
push
pop
insl
or
das
cld
int
pop
in
orb
cld
iret
dec
ljmp
in
imull
cmc
xchg
lds
insb
sbb
test
pusha
dec
and
push
fiadds
add
inc
lea
xor
ljmp
scas
icebp
adc
inc
add
mov
nop
sub
mov
aaa
daa
sub
xlat
dec
adc
pusha
aam
or
dec
das
mov
filds
es
fsubrl
cmpsl
loope
and
xor
sbb
fsubrs
movsb
xor
into
sub
test
in
rcl
xor
mov
push
dec
xor
negb
xchg
imulb
stos
clc
adc
pop
aas
in
scas
mov
fistps
mov
outsb
mov
sti
or
xor
add
sbb
and
sbb
lcall
mov
and
mov
add
jae
pop
pop
imul
push
es
and
xchg
jle
clc
repnz
mov
pop
in
push
mov
inc
add
mov
mov
jmp
push
out
fs
iret
lods
dec
mov
js
sbb
dec
stos
mov
lcall
sub
sbb
sbbl
ds
mov
add
push
ret
cmp
sub
cmp
jl
stos
or
lds
stos
inc
pop
pop
and
mov
mov
mov
push
pop
js
lret
add
arpl
fistpll
xor
sub
jmp
out
fs
scas
das
mov
idivb
pop
jae
push
mov
cmpsl
adc
fbld
ljmp
gs
dec
inc
mov
sahf
xor
jnp
cmp
mov
lret
jno
sub
loopne
pop
pop
pop
xchg
push
push
xchg
movsl
lret
test
insb
popl
int3
iret
es
pop
mov
inc
fdivs
insl
pushw
jle
pop
jno
arpl
jbe
sbb
clc
mov
int3
fcomps
and
into
mov
pop
cmpsl
jle
and
sub
inc
pop
cld
xor
sbb
and
repz
xchg
adc
jmp
das
jecxz
mov
scas
push
jbe
aam
loope
popf
add
xchg
cltd
popa
xor
mov
sti
sub
or
mov
sub
pop
mov
add
cmp
mov
mov
mov
dec
jae
lret
icebp
add
jo
ror
test
es
out
adc
xor
paddusw
or
loopne
andb
jbe
sbb
stos
lret
lret
mov
imul
aam
ss
and
sbb
scas
outsb
mov
sub
scas
les
movsb
pop
xchg
and
out
jge
pop
mov
jl
mov
in
ret
add
mov
mov
shlb
mov
mov
mov
ljmp
cmp
loop
pop
cmp
lods
lret
repz
mov
push
ret
add
push
dec
jb
mov
int3
addr16
in
and
adc
cmpsl
push
pop
fcompl
mov
xchg
repnz
cmp
xchg
adc
jg
popf
adcl
xchg
loope
inc
dec
pop
lods
mov
lret
add
bound
lods
push
mov
xadd
pop
xchg
inc
and
mov
inc
push
cs
mov
sbb
or
cmp
into
inc
addr16
int
add
dec
xor
add
pop
push
insb
and
outsb
fs
int3
pop
jge
push
push
or
fstpl
das
xor
jle
jae
rclb
negb
iret
lahf
push
rolb
cwtl
push
sub
popa
add
lds
mov
push
popf
cltd
jns
adc
and
repz
shrb
adc
enter
rorl
cltd
xchg
stc
pop
ror
test
or
mov
lret
out
sbb
xchg
pop
fidivl
adc
jae
movsl
shlb
sub
mov
pusha
dec
frstor
sub
loopne
test
fwait
dec
shll
or
xor
movsl
or
push
xlat
inc
pop
out
adc
adc
xchg
push
push
cmp
add
mov
ret
jg
int3
neg
popf
xor
push
std
shrb
xor
sbb
jp
jp
fcmovu
cld
xor
out
imul
hlt
inc
pop
sbb
push
xchg
out
xlat
leave
ss
mov
xor
fldl
and
xor
and
dec
or
mov
adc
jle
push
mov
loope
int
dec
jno
fwait
mov
jb
fldt
pop
jp
jbe
and
lret
fcomps
test
ss
xchg
call
push
daa
xor
pop
mov
mov
test
inc
mov
daa
push
jg
push
scas
mov
js
and
stc
and
mov
ret
sbb
sahf
and
test
jmp
in
decl
pop
aad
jg
insl
stc
adc
adc
ljmp
std
mov
fcmovnb
lahf
subb
mov
xchg
cltd
jp
xor
ret
inc
or
push
and
into
lods
outsl
mov
xchg
mov
bound
lret
dec
mov
ret
pop
addr16
push
push
arpl
rcrb
sti
push
dec
cmp
xor
add
push
cmp
mov
fwait
mov
mov
stc
xchg
scas
gs
sbb
push
jnp
jnp
out
push
in
mov
mov
into
mov
pusha
mov
dec
jno
pushf
sbb
mov
jns
adc
dec
mov
jmp
push
cmp
imul
xchg
sub
lcall
lods
bound
add
xchg
lds
jge
hlt
arpl
jne
sub
sbb
arpl
lods
cmp
ret
inc
enter
jno
sub
fadds
push
call
xor
cmp
pop
int3
mov
xchg
lods
int
mov
and
shlb
mov
mov
push
sub
fbld
adcb
scas
xchg
mov
idivb
mov
mov
movsl
iret
sub
xchg
lcall
ret
shl
cmp
faddl
dec
mov
push
jl
jp
data16
aam
in
mov
mov
addl
adc
jno
orb
testl
xchg
divl
jns
and
pop
sub
ret
enter
in
rcr
stos
aaa
cld
adc
test
and
sbb
les
imul
xor
movsl
push
sbb
ret
jb
icebp
sub
sbb
test
jle
mov
enter
inc
adc
xchg
or
mov
adc
xor
mov
mov
imul
std
adcb
jne
sub
adc
scas
roll
xor
xor
test
cmpsb
sbb
mov
jbe
not
jne
dec
aas
mov
shrl
cmp
xchg
lds
out
call
pushf
jmp
aas
push
fisttps
xchg
mov
xchg
pop
cmp
divl
jp
adc
sbb
icebp
fcompl
aad
in
test
fisubrl
xor
mov
jmp
adc
sub
adc
fwait
add
mov
imul
add
dec
inc
sub
jle
pop
xchg
cs
jl
out
pop
push
aam
inc
xchg
push
leave
adc
and
loopne
cs
imull
enter
xor
test
inc
dec
aad
je
push
xchg
push
mov
jbe
mov
lcall
cmpsb
imul
sbb
xor
mov
fs
scas
sub
xchg
mov
xlat
shll
push
jne
pop
inc
xor
scas
mov
ljmp
out
popf
cwtl
out
sbb
xor
adcb
mov
mov
add
sti
push
pop
sub
rorb
bound
xchg
add
inc
sub
fbld
mov
sbb
xchg
in
addr16
add
pop
call
scas
adc
ljmp
push
popf
pushf
je
es
cltd
push
sub
in
imul
pop
test
sbb
dec
nop
es
mov
mov
inc
add
push
xchg
mov
mov
push
xchg
adc
or
pop
sahf
insl
push
int3
mov
scas
push
inc
test
insb
mov
and
sbb
xor
inc
mov
out
sbb
mov
xchg
xor
adc
int
das
call
jge
fstpt
repnz
adc
in
xor
negl
imul
sarb
cmc
push
inc
dec
jmp
pop
dec
int3
mov
lret
sub
ficompl
mov
rorl
hlt
fcompl
mov
push
jmp
adc
fdivl
mov
xchg
sub
test
insb
inc
pop
fistps
fs
xchg
mov
ds
int
movsl
xchg
lods
jno
dec
jnp
xchg
out
fidivrs
xchg
cmpsl
ss
xor
loop
test
xchg
out
rcr
mov
aaa
sbb
shl
je
inc
sbb
faddl
nop
mov
movsl
push
cmp
insl
mulps
pop
hlt
icebp
std
fs
xchg
ss
stos
loop
js
push
mov
pop
mov
mov
adc
xor
push
mov
sti
push
pop
sbb
in
outsl
fisubrl
sbb
mov
jo
out
pop
cltd
mov
add
inc
stos
pop
ja
testb
push
and
xchg
xchg
pop
inc
xor
stos
repnz
cmp
mov
mov
adc
lds
arpl
shr
adc
jg
sbb
adc
push
imul
jno
or
sub
orl
push
jno
xchg
outsb
movsb
iret
leave
dec
push
lds
adc
ljmp
jge
push
jp
std
pop
push
xchg
add
cli
cmp
jns
or
xchg
jle
sub
and
lret
mov
sahf
adc
fnstsw
pop
and
outsl
pop
mov
adc
out
repnz
loope
adc
sti
imul
cmovno
repz
in
cli
loope
sbb
and
js
xchg
dec
lds
icebp
aam
sbb
andnps
xor
xchg
cmp
jge
xor
and
lret
adc
sbb
scas
es
dec
cs
mov
push
roll
sbb
and
or
add
sbb
jg
cmp
and
jmp
xor
sbb
hlt
jns
arpl
lret
xlat
insl
imul
mov
jmp
popa
rorb
int3
imul
test
loope
mov
xor
xchg
add
int3
jb
fcoms
arpl
cmp
xlat
xchg
lods
imul
hlt
xchg
lcall
jno
jle
cli
push
ret
mov
and
adc
add
test
lahf
dec
add
jne
movb
lds
lret
xor
cmp
jg
imul
mov
mov
dec
cmp
dec
mov
jb
jb
push
push
and
addr16
jno
movsl
mov
xor
xor
popf
scas
and
add
bound
cmpsb
cltd
xchg
mov
inc
fcompl
cmpsl
adc
scas
xor
xchg
push
iret
dec
push
cld
sbb
push
aam
xchg
sbb
pop
cmc
jno
mov
jle
dec
and
cmp
mov
mov
call
scas
frstor
adc
loopne
or
adc
inc
aam
push
idiv
mov
nop
cmc
and
xchg
push
outsb
jno
test
jecxz
mov
add
sub
sub
or
loop
icebp
aas
in
ljmp
call
adc
das
and
xor
icebp
and
push
addr16
aam
inc
sbb
jecxz
xchg
jg
ret
jg
cmpsb
out
push
lods
cmp
mov
scas
out
stos
stc
dec
push
lds
dec
int3
std
movsb
scas
pop
stc
pop
aad
mov
xlat
sub
cmp
push
push
lds
sbb
push
mov
fucomi
icebp
jp
inc
push
pop
pop
out
pop
sbb
dec
push
add
pop
testl
or
arpl
add
xor
lret
dec
xor
into
pop
ss
xchg
dec
icebp
cwtl
ljmp
add
sub
or
mov
fs
stos
xchg
add
stos
xor
fwait
pop
shl
sub
and
jp
pusha
dec
xchg
out
test
mov
or
push
push
jmp
into
leave
xor
add
add
jecxz
mov
int
shll
adc
js
hlt
cltd
lret
frstor
and
mov
pop
fsqrt
and
push
cmp
int
pop
pop
jae
xor
movsl
scas
jge
adc
xor
push
mov
jle
std
dec
push
push
cmp
xchg
fcoml
setno
pop
adc
repnz
js
fcmovbe
push
or
pusha
call
in
shl
mov
xchg
push
shr
in
mov
dec
fcmovnu
adc
pushf
test
cmp
cwtl
inc
xor
mov
popa
push
lahf
jae
and
mov
mov
jo
popl
dec
leave
push
inc
cwtl
xchg
push
loop
push
cmpsl
insb
out
insb
das
sti
xor
movsl
jne
fnstsw
nop
xchg
add
jns
pusha
cwtl
mov
cmp
sbb
shlb
fldl
xor
cs
sub
into
pushf
js
rcrl
cmp
pop
cmp
loop
sbb
out
cmc
cmpl
inc
hlt
pop
sarl
rclb
sub
call
push
xor
leave
dec
in
test
dec
lahf
aad
mov
cmp
mov
pop
inc
push
push
or
push
jae
mov
pop
mov
mov
cmp
lret
pop
and
cli
loop
out
fstl
push
push
or
test
enter
inc
pop
or
mov
std
mov
inc
and
add
cmp
xlat
sub
lock
add
lcall
and
icebp
pop
fcoms
sbb
in
es
adc
div
push
add
andb
rorl
test
push
cmp
in
mulb
pop
sahf
shrl
arpl
je
rorb
inc
out
arpl
sub
mov
xchg
and
cmp
mov
js
fstps
arpl
mov
test
out
fs
mov
orl
xor
idiv
or
xchg
scas
adc
mov
xchg
jmp
lret
scas
daa
xchg
sbb
inc
icebp
dec
adc
add
fbstp
xor
push
out
push
cmp
lock
pop
adc
mov
lcall
xchg
dec
sub
inc
mov
sahf
mov
or
fs
xchg
push
call
jb
pop
cs
sbb
les
xor
xchg
mov
xor
das
jnp
mov
dec
cmp
iret
outsb
scas
inc
test
jl
adc
repnz
lock
into
out
xor
mov
movsb
repz
xchg
inc
cld
loope
sti
pop
sti
lret
inc
jno
xor
out
mov
iret
push
arpl
insl
inc
movsb
rcl
mov
pop
cltd
lret
add
xor
xor
test
cmpsb
xchg
idiv
pop
int
sbb
lds
and
inc
or
loope
nop
js
dec
xchg
mov
cwtl
jae
jns
add
fdivr
addl
push
or
push
sti
inc
push
fmuls
sbb
orb
inc
fcmovu
sbb
cmp
dec
inc
sbb
xor
jbe
sub
cs
pop
sbb
lods
sub
dec
jne
push
jne
icebp
or
sahf
mov
scas
shl
xor
add
rcrl
push
mov
je
xor
cld
or
inc
cmp
movsl
mov
idivb
mov
push
sub
xchg
sub
in
lods
pop
xor
les
lret
mov
push
out
inc
lock
jne
inc
out
rorb
xchg
xchg
sbb
mov
xchg
out
pop
loop
sbb
push
xchg
cmc
add
cltd
or
scas
cmp
inc
clc
inc
sub
lret
cmp
xchg
pushf
mov
ja
mov
ficompl
jle
adc
loop
out
push
arpl
xor
outsb
dec
dec
or
mull
xor
lds
int3
pop
pop
dec
imul
jno
fildll
cs
scas
jg
push
sbb
xlat
sub
lds
fstpl
dec
jns
icebp
mov
sub
pushf
inc
and
or
adc
cli
fwait
mov
add
pop
popf
inc
movsb
mov
sbb
push
inc
stos
loope
hlt
shll
push
lods
pop
jb
popa
pop
pop
decl
adc
xchg
xchg
mov
fcomps
test
and
sahf
push
rcrl
mov
shl
je
out
fstpt
sub
mov
out
adc
dec
sub
lods
mul
or
rclb
test
ret
flds
cmpsl
and
stos
dec
out
pusha
inc
lret
andl
pop
xchg
and
push
xchg
pop
dec
scas
jp
push
push
sbb
inc
inc
or
out
fs
pusha
jbe
pop
loop
lcall
in
sub
sub
imul
ret
cwtl
add
inc
add
add
inc
add
adc
add
add
jmp
inc
add
lahf
inc
add
add
add
lods
mov
push
insl
mov
mov
stc
and
and
dec
sub
test
ret
in
ret
cmc
sub
sbb
imul
jae
sub
mov
scas
xchg
rorb
jno
mov
and
sahf
jns
stc
pop
sub
push
iret
dec
push
arpl
mov
push
jb
adc
js
stc
dec
cmp
adc
repz
jne
add
imul
icebp
mov
mov
mov
fmuls
cwtl
jno
adc
mov
cmp
mov
jle
fidivrl
mov
rcl
add
sbb
mov
sahf
scas
xor
pop
push
fisttps
mov
xor
or
hlt
ljmp
jp
shll
xchg
enter
sbb
cwtl
shll
jb
mov
push
xchg
lret
cmp
xchg
xorl
xchg
in
icebp
and
push
lahf
test
iret
shll
sbb
jne
insb
mov
mov
clc
mov
xchg
fs
pusha
mov
add
xlat
jne
iret
inc
or
inc
xor
push
pusha
mov
push
push
dec
popf
inc
mov
and
xor
lods
repz
jmp
mov
xor
sbb
mov
lods
xchg
xchg
add
and
pop
push
xor
and
movsl
cwtl
push
adc
pop
call
ret
in
in
outsb
push
jl
lods
fisubs
mov
inc
int
pop
stos
sbb
pop
dec
mov
or
adc
jecxz
xor
xchg
lfs
xchg
pop
test
out
xchg
in
push
mov
inc
int3
xchg
and
dec
fs
in
pop
push
and
ss
mov
add
test
lret
sbb
fmull
mov
sti
cmp
push
jns
dec
add
push
cs
add
scas
pop
adc
jno
mov
mov
cmp
pop
in
sbb
xor
xor
xchg
xchg
out
xchg
sbb
add
push
test
and
je
pop
jmp
pusha
outsb
outsl
sub
push
in
ret
sub
rclb
pop
ja
in
fstpl
mov
iret
sub
jae
push
add
xchg
dec
or
add
mov
nop
sbb
sahf
cmp
leave
sub
push
out
inc
arpl
stos
mov
int3
and
mov
jecxz
fiaddl
lcall
pop
or
adcl
and
and
shl
mov
fdivs
mov
xlat
dec
xor
pop
inc
and
mov
in
repnz
mov
adc
mov
cmp
enter
repnz
jecxz
jb
inc
sub
ja
cmpsl
adc
xor
sbb
repnz
xor
mov
inc
sbb
mull
lock
lret
aas
cwtl
in
clc
mov
aas
jno
mov
xlat
xor
add
std
ss
mov
test
xchg
xchg
push
xor
andb
in
fildl
cmpsb
fstpl
filds
mov
loopne
leave
outsl
les
arpl
enter
into
xor
jp
sahf
lds
das
sub
in
jge
jle
mov
in
lea
test
inc
mov
adc
xchg
pop
jge
jmp
fdivrs
stos
lods
xor
aas
popf
push
aaa
pop
inc
cmp
mov
cmp
lea
inc
or
mov
sub
test
inc
int
int3
mov
or
fucomip
and
rcll
push
xor
mov
mov
pop
out
add
adc
aaa
xchg
push
push
fidivrl
dec
xchg
mulb
data16
dec
pushf
imul
push
push
in
rol
jb
pushf
sbb
mov
shlb
scas
or
out
lahf
jmp
mov
xlat
adcl
xchg
adc
mov
lcall
xchg
mov
fsubr
pop
mov
iret
test
or
das
mov
cmpsl
push
sbb
test
adc
sbb
les
lret
xor
repnz
pop
add
ja
sbb
or
ss
rolb
dec
mov
jge
xchg
inc
mov
cmp
rclb
lcall
xchg
gs
add
imul
stos
inc
mov
shlb
mov
sti
cmp
fcmovbe
push
aaa
out
ljmp
sub
loop
add
sbb
mov
mov
jb
xor
xchg
mov
les
std
nop
jg
mov
clc
xchg
jge
mov
orb
dec
imul
dec
pop
in
sbbl
test
out
lahf
pop
repz
pop
fnstcw
and
inc
stos
imul
and
adc
xchg
fsubrs
add
pop
js
loopne
daa
int
sahf
out
sub
daa
cmc
daa
push
int3
int3
add
push
mov
ja
sbb
and
js
push
in
mov
ds
test
outsl
inc
xchg
jno
jmp
loop
xchg
inc
adc
pop
jge
xchg
arpl
jg
xchg
xchg
push
push
fistpl
push
mov
or
or
inc
dec
gs
out
jae
sub
sub
push
scas
inc
xchg
ljmp
add
mov
cmp
int
pop
mov
fs
fcmovnb
rolb
jmp
cmp
pop
sbb
inc
add
pop
arpl
stos
ss
testl
imul
stos
fiaddl
pop
xchg
and
push
mov
fsubrl
cwtl
nop
arpl
jno
push
mov
out
mov
mov
testl
insl
cmpsl
je
icebp
dec
call
xor
sbb
sub
nop
dec
stc
cltd
leave
sub
lret
popa
sbb
pop
imul
insl
ljmp
in
in
cmpb
test
pusha
or
imul
push
les
sti
push
in
inc
xchg
add
aam
jg
pop
push
lea
stc
and
xor
dec
not
jmp
fwait
lahf
out
cmpsb
jecxz
xor
nop
inc
insb
cld
jns
jo
sub
add
fsts
mov
xor
leave
push
maxps
loope
add
int3
lret
testl
sub
jmp
push
adc
jge
jbe
mov
xor
xchg
xchg
jl
popf
dec
mov
fsts
pop
inc
xor
clc
add
pop
int3
sub
dec
push
or
bound
adc
push
ficoms
lahf
movsb
and
in
push
into
push
stos
jnp
and
fsubrs
sbb
cmc
inc
jl
adc
ficompl
rcrb
imul
jecxz
jmp
imulb
mov
cmp
call
jecxz
mov
cmpb
or
push
inc
mov
popa
inc
lcall
call
or
sbb
push
add
loop
cld
imul
inc
sbb
sub
imul
pop
loop
xor
inc
sbb
jb
out
ror
mov
dec
iret
out
popf
out
repz
ja
add
sahf
lret
imul
aas
dec
add
and
das
repz
shl
pop
mov
bound
jo
icebp
fidivl
mov
mov
dec
cmp
xchg
dec
jge
stc
xrelease
rcl
mov
xchg
xchg
jle
xchg
bound
mov
dec
xchg
pop
mov
jle
cmp
mov
mov
mov
aas
iret
into
xchg
call
xchg
jae
into
insl
xchg
xchg
insb
fdivr
jae
cli
dec
mov
mov
ret
push
add
lock
cmpsb
sub
clc
frstor
lea
popa
jge
mov
scas
call
in
cmpsb
mov
or
popa
and
dec
jne
pop
mov
jle
shlb
push
imul
scas
pop
mov
call
ret
aaa
ja
push
addr16
push
xor
lea
xchg
data16
add
adc
xchg
insl
add
pop
push
int
cmp
loope
mov
add
xchg
loopne
sbb
sbb
push
loope
sub
mov
stos
jp
xor
sarl
or
gs
addb
sbb
imul
test
push
fcmovnu
rclb
sbb
pop
inc
rclb
pushf
inc
adc
outsb
jae
jg
xor
pop
mov
clc
xchg
adc
cwtl
sbb
sbb
add
xor
out
arpl
popf
popf
cmp
lret
ret
mov
fidivrl
mov
fisubs
dec
icebp
decb
pop
cld
mov
pop
mov
mov
out
sbb
das
andl
jmp
test
movl
fistps
push
cld
repz
std
aas
movb
lahf
sub
push
stc
or
nop
aad
arpl
ficoml
shr
sbb
fsubrl
test
jb
and
popf
cmp
mov
cmp
pop
test
lods
jo
sub
sub
mov
pusha
scas
xor
adc
or
repnz
cltd
ret
or
jno
stos
cld
loop
js
mov
ss
or
das
arpl
sbb
dec
adc
cmp
cmp
pushf
imul
cmp
sbb
jg
inc
ficoms
xor
xchg
andl
test
cmp
xor
jb
jne
out
or
push
xchg
push
adc
cmc
arpl
cli
movsl
dec
xchg
mov
test
das
mov
ret
sub
xor
pop
xlat
jmp
inc
dec
cli
jae
xchg
ror
shl
scas
sbb
adc
push
test
inc
mov
repnz
push
pop
xchg
adc
or
jl
push
enter
xchg
dec
loope
cmp
fsubr
sahf
rcl
mov
mov
sbb
aad
test
ffreep
cmp
sub
pop
lret
push
in
ljmp
repnz
cld
jg
sti
rcrl
cmp
mov
adc
es
push
sub
jle
dec
cmp
sub
lds
xor
repz
jecxz
pop
out
fstpl
ss
divl
push
sub
pop
popa
xchg
mov
je
stos
cmp
stc
mov
sahf
sets
jmp
mov
imul
int3
and
xchg
xchg
insl
rorl
mov
dec
dec
fcomp
in
filds
lret
push
cmp
iret
imul
out
xor
mov
mov
mov
sarb
xchg
jb
mov
add
mov
repnz
arpl
lahf
inc
pop
hlt
je
push
xchg
daa
pop
pushf
mov
aad
stos
ret
sub
rclb
aas
adc
jo
or
fwait
mov
nop
mov
cmc
mov
lea
inc
in
jne
das
pop
add
aas
sbb
sbbl
dec
mov
mov
pop
lcall
loope
dec
mov
adc
cmc
jge
mov
out
xorl
dec
mov
xchg
add
sbb
jle
icebp
lcall
out
std
sbb
xor
mov
inc
push
cmp
rorl
test
mov
mov
adc
ja
sbb
ret
mov
jge
pop
jno
jb
outsb
and
insl
mov
or
mov
cmp
push
outsl
dec
mov
pop
fisubrs
mov
mov
push
xchg
subb
mov
outsl
scas
cs
in
sbb
rorl
jecxz
jmp
imulb
jl
cld
mov
push
imulb
adc
mov
xchg
or
mov
stos
pop
cltd
mov
push
cmp
and
xchg
pusha
lea
add
and
mov
dec
stos
lahf
les
mov
sub
add
xor
dec
ljmp
dec
sub
jo
or
adc
fldt
pop
add
fistps
mov
pop
sub
mov
add
jge
add
sti
aas
xor
mov
repnz
xor
scas
dec
lock
fwait
pop
adc
jne
lods
inc
stos
lock
sbb
xlat
lods
push
xor
stos
pushl
out
xor
cmp
imul
int
into
cmpsl
mov
mov
jbe
mov
std
and
movsb
hlt
xor
fistps
ljmp
dec
mov
ds
add
in
adc
inc
mov
jae
mov
dec
jne
or
mov
jo
dec
movsl
aas
test
insl
adc
js
insl
in
scas
jns
push
pop
mov
aas
adc
mov
jle
and
stos
insl
ror
push
shlb
movsl
adc
lea
push
ret
mov
bound
sbb
mov
test
dec
adc
cwtl
dec
and
push
icebp
jp
cs
ljmp
cmpsb
clc
rclb
push
ret
sub
outsb
add
dec
mov
scas
lret
push
xorb
xchg
inc
mov
and
lods
sbb
xlat
xor
aaa
cmp
and
ret
dec
lea
ljmp
push
add
inc
xor
test
lods
testb
adc
scas
popf
pop
hlt
ljmp
je
pop
sbb
and
movsl
push
sub
cld
lods
adc
cld
sbb
mov
in
jl
jle
cwtl
lret
std
rcrl
dec
movsl
adc
pushl
lret
sbb
xchg
jle
and
pop
mov
js
jbe
out
arpl
or
ljmp
dec
pop
les
bound
rcrb
pop
ljmp
in
and
xchg
lret
cli
fwait
stos
scas
push
push
std
inc
mov
sarb
lock
push
dec
inc
and
dec
mov
repnz
mov
jno
xor
aad
roll
dec
add
lret
lret
clc
cmp
nop
jge
rcr
or
lods
enter
cmpsl
xchg
repz
movsl
mov
add
sbb
ljmp
rcll
or
jg
sbb
xchg
xchg
xor
lea
push
imull
sub
sub
cmp
xchg
jae
xlat
pop
ret
loope
inc
cs
xor
loope
or
jb
sub
popa
pop
leave
in
inc
mov
pop
sarb
stc
in
js
or
fstpl
fwait
or
test
and
shll
cli
outsb
das
cmp
cmpb
popa
mov
test
dec
and
test
push
inc
pop
lds
mov
xchg
jmp
mov
add
jge
fcmovbe
xchg
add
enter
inc
pop
lahf
mov
outsl
outsl
xchg
addr16
sub
inc
cmpsb
mov
rcll
push
and
add
push
push
leave
jne
inc
or
scas
movsl
lcall
push
or
aaa
ljmp
cmpsb
adc
add
lahf
mov
jle
ja
push
inc
popf
in
xchg
jno
mov
dec
mov
mov
clc
mov
mov
mov
or
ret
cwtl
inc
mov
cmp
cmp
jge
xlat
inc
mov
lock
sbb
pop
repz
cmp
and
pop
mov
push
fld
and
mov
cmp
and
sub
push
shll
aad
enter
rorb
and
xchg
pop
mov
gs
arpl
xchg
adc
pop
pop
cmc
add
or
lahf
push
add
pop
cmp
sbb
xchg
add
dec
out
mov
lea
lods
fimull
shll
mov
xor
inc
lea
mov
pop
pop
stc
mov
sbb
xor
shll
cmc
or
jmp
mov
jae
test
fs
xchg
ret
loop,pn
sub
cmp
xor
cmpsb
pusha
mov
decb
push
inc
mov
cwtl
add
jno
mov
shl
stc
push
cs
mov
adc
inc
mov
aas
mov
stos
shlb
test
xchg
packuswb
loop
fnstsw
inc
in
and
inc
int3
dec
pop
psraw
sub
cs
aas
aaa
jg
and
movb
or
adc
jno
mov
and
cmp
jmp
decb
rol
and
stos
cmp
mov
lds
jle
cmp
push
gs
loope
mov
xor
mov
stos
orl
jmp
xor
sbb
dec
movsb
xchg
xor
stos
dec
dec
or
hlt
jp
xor
jo
adc
subl
pushf
fdivs
cmp
divl
jge
push
and
cmp
jge
out
gs
xlat
rol
es
push
xlat
mov
out
add
add
out
mov
imul
ljmp
sub
ds
clc
pop
ret
mov
cltd
loopne
cmpsb
sti
pushf
das
jge
jbe
lock
mov
jp
cmp
adc
mov
dec
sbbb
roll
xor
push
add
inc
mov
mov
cwtl
mov
pop
sti
jno
in
dec
and
daa
xor
mov
cmpsb
mov
rcr
pop
idiv
jmp
push
dec
or
adc
ffreep
mov
sub
jge
xchg
popa
push
mov
add
adcb
or
mov
adc
mov
in
mov
je
bound
mov
sahf
ss
mov
or
mov
or
popa
inc
sub
fs
sub
cltd
push
inc
aaa
ljmp
call
popa
in
mov
aam
push
xchg
xchg
inc
mov
fs
dec
cltd
sar
jmp
mov
popa
xor
push
pop
faddp
ds
xchg
xchg
stos
cmpsl
data16
or
push
jle
sahf
add
inc
push
repnz
mul
mov
inc
mov
sti
cmp
in
jbe
xchg
mov
pushf
and
mov
es
or
repnz
rclb
and
or
js
cmp
dec
cwtl
adc
sti
mov
out
aad
mov
and
std
jb
insl
and
ficoml
add
adc
or
jnp
mov
pop
fcomps
sbb
xchg
jnp
in
mov
push
mov
mov
pop
and
pusha
imul
loopne
jnp
jp
jbe
cmpsl
pusha
aas
loopne
mov
shll
loope
and
dec
jmp
in
les
xor
loop
xor
dec
sub
loope
repnz
add
dec
adc
sbbb
fnstcw
xchg
sbb
and
imulb
mov
pop
test
int3
or
stos
push
mulb
push
cmc
cmp
popf
es
xchg
push
mov
pop
imul
mov
sbb
sbb
sbb
cmpsl
pop
push
icebp
outsb
in
add
mov
subb
out
inc
test
mov
xchg
dec
cmp
inc
mov
mov
xor
dec
outsl
cmp
ret
push
or
push
mov
daa
xor
test
jmp
test
inc
hlt
into
out
dec
push
jns
mov
or
aaa
or
xor
in
mov
mov
cmp
adc
xchg
sbb
dec
cmp
test
pushf
push
sub
int3
xor
inc
cli
mov
cmp
rolb
clc
pop
hlt
mov
cmp
in
lods
iret
arpl
mov
mov
adc
sbb
fs
jecxz
dec
stc
push
mov
rorb
iret
xchg
ljmp
or
icebp
adc
inc
and
adc
hlt
aad
mov
cwtl
ss
xchg
sub
fdiv
lods
dec
jmp
stc
orl
sahf
push
xlat
add
mov
jno
std
push
mov
adc
pop
repz
dec
mov
mov
or
add
fisttpl
lea
ror
adc
ret
test
inc
jno
loopne
push
sub
or
popf
inc
shrd
scas
mov
dec
les
adc
jnp
nop
fs
mov
xchg
adc
cwtl
and
adc
clc
movsl
ret
mov
lds
sbb
pop
push
mov
xchg
sbb
insl
jns
bound
sub
ss
fwait
push
inc
push
push
cmp
ja
or
sub
fiadds
or
push
lods
mov
push
jb
push
lahf
iret
popa
mov
mov
cli
testl
push
sbb
jge
and
adc
push
lods
or
cld
cmpsl
std
push
invd
add
sar
aas
and
insl
pop
pop
jle
push
sti
movsb
sti
repnz
mov
pop
clc
lcall
cmp
mov
subb
dec
jns
data16
cld
js
outsb
loope
or
pop
push
scas
mov
cli
stos
pushf
fdivrs
stos
xchg
in
test
stos
lods
int
xor
push
sub
jns
aaa
dec
int
ss
jb
adc
gs
cs
dec
pushf
jno
scas
test
repnz
sarb
out
jle
push
mov
or
outsl
ficompl
and
or
lahf
mov
fcomps
pop
cs
or
sub
dec
and
sbb
inc
jnp
pushf
in
aam
mov
mov
popf
or
jo
pusha
fwait
in
leave
inc
xchg
lcall
or
dec
add
add
test
xchg
mov
out
jae
in
call
xchg
mov
adc
iret
cmpsb
fdivrl
call
mov
or
pop
sarl
fadd
or
sahf
cli
mov
repnz
cmp
outsl
and
repz
inc
rorb
xchg
adc
or
push
call
pushf
dec
pop
xchg
les
adc
mov
in
add
cli
pusha
mov
inc
scas
xlat
pop
int
push
push
sbb
int3
or
sub
movsl
imul
push
cmc
push
pop
cmpsl
sbb
mov
jl
gs
ss
call
push
loope
enter
mov
and
out
cmp
ds
pop
jmp
repnz
jmp
cltd
imul
aad
mov
mov
ljmp
sahf
sbb
cs
jns
inc
stos
sbb
mov
adc
bound
mov
pop
cmp
inc
incb
push
add
repnz
mul
jp
mov
leave
push
test
push
negb
fadds
push
sbb
adc
test
mov
sbb
pop
lahf
mov
ja
push
inc
lret
mov
insb
jp
hlt
sarb
cli
jns
fmul
imull
jecxz
inc
xchg
fstpl
pop
jmp
mov
push
js
mov
mov
fwait
scas
mov
icebp
xchg
xor
sub
ret
jb
sub
or
sub
inc
push
inc
mov
mov
xchg
mov
mov
sahf
inc
repz
mov
sbb
fs
in
add
and
cmpsl
out
pop
push
mov
aad
fstpt
inc
mov
test
mov
add
inc
cmp
xor
repnz
jmp
stos
adc
movsb
and
out
enter
data16
ret
xchg
lea
jle
xchg
pop
in
stc
insb
jns
adc
rolb
mov
pushf
nop
movsl
faddp
jmp
popa
into
insl
or
leave
lcall
scas
loopne
jns
pop
lret
jmp
jg
out
inc
shrl
lods
mov
pop
lret
enter
push
xchg
cmp
pusha
add
cmp
pop
clc
jmp
cmpsl
jb
mov
movsl
mov
jmp
xchg
repnz
mov
jg
or
and
xchg
dec
movsb
sub
movsb
out
ret
jge
popa
out
mov
std
cwtl
push
dec
icebp
loopne
push
loopne
xor
out
rorb
mov
cmp
loop
sti
in
pop
mov
cli
lahf
iret
lock
jb
xor
cmp
xchg
stc
stos
dec
mov
and
out
xlat
aam
dec
scas
jle
pop
or
xor
inc
test
sub
lods
inc
lcall
pop
int3
repnz
push
pop
jg
cld
lock
outsl
pop
push
loop
jle
lret
divl
adc
cli
mov
cld
imul
mov
gs
aad
ja
out
daa
sbb
mov
bound
orb
out
rclb
sahf
shl
or
mov
inc
sbb
into
cmc
mov
mov
xor
sbb
xchg
clc
push
add
lret
cld
shrl
sbb
xor
and
push
cmp
popf
xor
dec
mov
sbb
outsl
std
jno
shlb
roll
lods
call
outsb
daa
jecxz
dec
jecxz
jae
sbb
cmp
fwait
push
scas
lods
cwtl
push
xor
ret
test
aad
mov
mov
es
rcrb
outsl
xlat
add
pop
mov
xlat
lahf
sbb
lret
outsb
pushf
push
adc
jmp
loope
movsl
push
fmull
jge
cmp
scas
lcall
jnp
add
inc
and
jns
push
jbe
in
sbb
cmp
push
in
inc
cmp
xlat
xor
xchg
packssdw
pusha
out
cmp
cli
xor
pop
outsb
into
xlat
sarb
js
jl
sbb
dec
xchg
xchg
aad
sub
ja
enter
aaa
icebp
pop
hlt
sarb
push
dec
movsb
sbb
push
mov
xchg
adc
add
push
mov
dec
shlb
lcall
mov
movsb
lret
xor
adc
sbbl
das
ljmp
icebp
testl
movsb
nop
repz
sub
test
xor
fwait
pop
xor
push
adc
cmp
pop
and
xchg
sti
mov
xchg
mov
mov
jnp
push
scas
mov
arpl
jae
in
cwtl
stos
jno
scas
xor
dec
mov
pusha
or
cmp
cmp
lea
addr16
das
mov
mov
and
inc
mov
sbb
mov
pop
in
jo
fbstp
jbe
push
sbb
push
enter
inc
mov
jl
adc
xchg
or
dec
fistl
or
out
mov
sub
bound
sub
lods
adc
pop
sbb
hlt
jne
fsubl
ficomps
movsb
out
stos
leave
push
sbb
adc
pop
cmpsl
or
dec
loope
or
adc
adc
cmp
stc
sub
jecxz
or
dec
adc
xchg
jp
xchg
stc
inc
adc
dec
inc
jne
pushf
mov
ljmp
in
orb
dec
adc
xor
push
push
cs
aam
xor
mov
xor
push
addr16
inc
mov
adc
xchg
xchg
call
data16
call
andl
mov
sub
jle
div
mov
sub
push
xor
int3
fidivs
jmp
push
pushf
std
push
inc
mov
mov
icebp
clc
in
push
push
push
add
xchg
sti
mov
push
in
mov
sbb
clc
sub
ljmp
scas
mov
mov
mov
cli
xchg
repz
jns
cmp
out
into
sub
stos
mov
test
ficoml
mov
xlat
rclb
sub
iret
ret
fisubl
leave
mov
fbstp
jp
add
pop
adc
pop
sbb
filds
lahf
adc
adc
bound
hlt
dec
cmp
bnd
sbbb
clc
sbb
jmp
fdivp
mov
pop
xor
sahf
leave
ds
pop
loop
lret
andl
mov
jb
jo
add
lret
push
cwtl
xor
jae
jo
adc
out
and
push
cmpl
xchg
and
dec
fwait
aaa
mov
sub
nop
cs
sti
call
mov
shl
addr16
push
xor
mov
or
jae
push
mov
in
pop
mov
in
add
pop
mov
jl
into
scas
push
dec
mov
test
mov
push
notb
xor
stos
sub
push
xor
dec
jge
clc
mov
lret
dec
fwait
in
mov
pop
std
mov
loopne
insb
rclb
xlat
jge
pop
dec
or
sub
bnd
add
lret
and
ret
cmp
data16
jl
sti
jecxz
outsb
nop
push
mov
fcmovnb
mov
and
pop
jp
fwait
xor
js
int
jecxz
xchg
xchg
mov
mov
xor
adc
mov
cmpsb
ss
cltd
sbb
lods
jnp
lods
aad
add
inc
mov
in
aas
in
ficoms
add
fstpl
dec
pusha
adc
xor
mov
std
mov
xor
lods
jle
cmp
mov
loopne
xor
mov
pop
ja
mov
lcall
loop
xlat
cmp
fcompl
xor
data16
pop
into
fiaddl
sub
cmp
ljmp
jo
test
pushw
fcoms
cmp
cmp
xchg
lea
inc
inc
int3
inc
fstl
mov
sub
call
mov
xchg
push
xchg
lea
int
inc
push
or
jge
sti
push
adc
mov
and
sub
lret
sbb
add
pop
adc
je
cltd
into
push
xchg
adc
shl
shld
scas
or
jmp
mov
or
inc
imul
mov
imul
enter
das
mov
jae
ret
xchg
push
jo
adc
fildl
sahf
lods
mov
repnz
aaa
data16
mov
pop
xchg
je
push
lcall
outsb
pusha
and
adc
xor
leave
xor
imul
mov
and
jns
cmp
lea
ret
push
lock
mov
push
dec
insb
inc
pop
stos
loope
mov
repz
sbb
mov
jno
dec
cli
mov
dec
push
cld
push
loopne
sbbb
xor
mov
std
hlt
test
es
lcall
mov
loope
mov
mov
into
cmp
popa
out
pushf
inc
in
test
mov
test
arpl
xor
dec
dec
dec
add
push
loopne
pop
jbe
scas
adc
pop
mov
push
enter
lret
pop
ss
adc
and
loopne
xor
push
cmp
xor
lods
jmp
cmc
stc
fidivs
and
xchg
pusha
xor
dec
lahf
loop
mov
sahf
das
push
ficoml
cmp
xorb
scas
add
xchg
xchg
les
or
idivl
lret
sub
cs
dec
mov
sbb
sub
jge
xchg
xchg
dec
or
push
sbb
dec
sbb
sti
push
sub
jge
pop
dec
push
lret
lret
ljmp
push
inc
vpslld
sbb
cmp
sub
jne
inc
movsl
fsubr
lods
push
mov
je
mov
lret
dec
cmpsb
ljmp
jns
movsb
cmp
jo
mov
pop
imul
push
and
mov
dec
cmp
xchg
pop
nop
jle
push
addl
sub
sbb
xchg
popf
aaa
jne
mov
sub
fbstp
add
xor
pop
dec
add
imul
imul
movsl
dec
push
cmp
repz
xor
ds
clc
sti
lahf
mov
orl
mov
xchg
fdiv
push
fisttpll
jno
dec
test
lods
movsl
outsb
out
aas
in
inc
mov
and
cmp
fs
das
aad
or
pop
imul
cwtl
xor
jmp
jmp
mov
sub
push
in
and
dec
arpl
jg
jo
xchg
insb
xchg
add
mov
in
hlt
push
es
shrb
and
mov
lods
adc
pop
stos
sti
pusha
cmpsl
inc
pop
mov
pop
fnstenv
cli
mov
daa
test
incb
test
and
push
and
mov
shrb
jg
cmp
outsb
std
sub
xor
popf
repz
pop
ja
and
sbb
nop
pop
dec
cli
icebp
add
mov
adc
inc
cmp
cmp
stos
outsl
scas
cmc
inc
nop
imul
sahf
mov
push
cmp
mov
lret
push
popa
cmp
jno
cmp
mov
pop
enter
lret
fdiv
movsb
fstl
push
int3
insl
fidivrs
push
ret
leave
jl
inc
incb
adc
mov
aaa
sub
xor
jo
adc
cmc
scas
das
outsb
or
mov
cmp
repz
test
mov
sub
sbb
shr
jae
and
xchg
ror
insl
out
dec
push
jno
sub
sbb
int3
stos
test
add
mov
pop
pop
jge
cmp
jae
xchg
pop
mov
cmc
mov
add
daa
jb
pop
jmp
divl
or
cli
in
pop
xchg
mov
jle
aas
negb
ret
push
roll
and
sahf
mov
jno
int3
and
fnstcw
mov
inc
add
mov
popf
push
pop
repnz
push
push
cmp
into
xchg
lock
test
fwait
into
cmpsb
pop
leave
ret
jmp
rorl
mov
lds
sti
cmp
dec
push
jns
and
lret
mov
out
mov
test
sbb
test
or
cli
lahf
push
pop
mov
out
scas
fldt
imul
out
sub
push
mov
pop
add
jge
push
adc
movb
mov
aam
fldcw
ljmp
jl
mov
jnp
into
or
gs
add
in
adc
jae
jns
shll
pop
mov
ss
mov
lahf
cmpsl
inc
or
dec
rorl
outsl
fiaddl
jno
mov
daa
scas
ror
dec
fadds
dec
nop
ret
jae
leave
in
scas
or
rcrb
mov
dec
std
mov
push
adc
push
inc
test
jle
aad
xchg
lods
mov
push
mov
jo
ficompl
fnstcw
sbb
mov
jge
xor
cwtl
mov
fs
test
dec
add
sub
cmpsl
ficompl
mov
cmp
stc
push
xchg
sub
ds
mov
rcrl
push
dec
loope
out
cs
mov
or
cmpb
movsl
out
xchg
fists
popf
mov
mov
xlat
loopne
outsb
lret
in
out
iret
leave
dec
cmp
adc
lret
add
iret
loopne
cmp
mov
mov
mov
movsl
or
add
cmpsl
jle
inc
push
jb
push
push
add
outsb
test
xchg
adc
inc
pop
mov
pusha
or
int3
pop
les
into
cmp
in
mov
cmp
sbb
xor
pusha
iret
addl
movsl
cli
mov
sub
and
fs
addr16
pop
mov
fistps
jle
or
call
sub
cmp
cmp
repz
cmp
adc
test
jns
cmp
aam
lds
jae
push
add
inc
pushl
out
jmp
movl
mov
xor
test
or
sbb
xchg
jbe
add
push
adc
jge
aaa
xorb
xor
adc
add
inc
ljmp
int3
movsb
in
and
xorl
mov
mov
inc
jecxz
push
pop
movsb
cwtl
pop
cmpsb
divl
push
lret
push
cli
fldt
sub
sti
mov
in
sarl
test
popfw
ret
sbb
pop
subb
mov
cmpsb
push
jno
stos
in
in
fs
add
and
push
xor
cmpl
mov
outsl
pusha
sbb
xor
mov
leave
sub
lods
xlat
test
test
xor
idivb
lret
jmp
scas
aam
mov
adc
jl
fwait
adc
add
mov
call
dec
mov
xorl
jns
jne
aas
mov
xor
ds
sbb
lds
fwait
scas
fldl
clc
fimull
stos
aaa
or
pop
fisttps
into
xchg
je
jmp
mov
push
movsb
ljmp
ds
jne
xchg
cwtl
rorb
mov
fbstp
es
sahf
movsb
sbb
push
movsb
adc
rorl
push
jbe
into
das
aaa
cmp
popf
test
bound
movsl
sub
pop
movsl
adc
movsb
insb
ficoml
movsl
push
jmp
dec
add
loop
jp
scas
not
sub
mov
mov
loop
add
cmp
xchg
out
int
mov
push
nopl
dec
je
xlat
out
lret
jns
push
sbb
adc
fsubs
in
push
mov
lahf
mov
pop
pop
mov
add
xchg
sarb
sbb
sbb
jns
cltd
cmpsl
or
repnz
push
loop
frstor
pop
test
ror
loop
or
test
enter
xchg
orl
or
inc
shll
or
insb
jp
mov
int3
xor
stos
mov
xorl
xchg
add
icebp
mov
scas
xor
cmp
jge
test
jle
xchg
cmp
push
jmp
or
aam
fimull
popa
mov
sub
mov
in
jecxz
pop
cmovge
cltd
inc
pop
fwait
or
sbb
movsl
out
mov
dec
popf
idivb
push
mov
push
fnsave
xor
jno
xchg
xor
or
cmp
sub
arpl
mov
mov
icebp
repnz
or
mov
inc
mov
insl
jecxz
je
dec
leave
imul
cld
mov
stos
int3
mov
push
leave
pushf
cmp
mov
sbb
sub
inc
jb
mov
inc
fcoml
lock
in
sbb
add
outsb
and
mov
fcmove
in
xchg
ja
sub
sti
rclb
insb
cmp
js
jl
xchg
xor
xor
lcall
sub
jnp
inc
adc
add
mov
daa
xor
sti
pop
out
andb
and
mov
push
xor
add
stc
xor
mov
adc
adc
jb
shlb
and
stos
or
ret
xchg
aam
mov
inc
push
xor
lds
loop
movb
sbb
test
push
pop
stos
or
mov
mov
add
dec
jp
mov
mov
std
psrlw
addr16
cmp
push
add
iret
mov
push
pusha
and
aam
xor
xchg
adc
dec
enter
andl
xor
pop
movsb
das
mov
mov
mov
push
mov
dec
and
adc
outsl
sub
and
sub
pop
add
push
mov
lcall
cmp
adc
jbe
dec
rolb
popa
cmpsl
pushl
pop
dec
cmpb
iret
leave
mov
jo
mov
pop
fcoml
push
mov
jge
or
repz
mov
imul
outsb
nop
jge
mov
mov
sub
push
mov
sub
sbb
push
sbb
pop
mov
mov
cmp
dec
xchg
sbb
movsb
jnp
xor
das
lahf
les
pop
lret
or
aaa
mov
inc
pop
pop
adc
mov
cmpsb
pop
mov
ja
popa
jmp
xlat
cltd
pop
iret
adc
ret
adc
mov
lahf
and
add
jle
and
out
test
xchg
les
xchg
xchg
sub
jg
nop
and
lret
aaa
andb
out
iret
decb
cmp
int3
xor
mov
fisttpll
inc
xchg
push
dec
and
xor
repz
cmp
mov
adc
mov
cs
push
sub
inc
je
xchg
imul
fs
mov
or
sbb
test
pop
xchg
shlb
movsb
cmp
pop
jne
inc
add
js
cmp
mov
ret
jmp
and
push
xorl
outsl
dec
and
out
int3
test
and
jno
outsb
xchg
fs
sub
mov
sbb
cmc
push
rcrl
cmpsl
xchg
lods
cmp
pop
jne
hlt
lret
pop
loop
enter
mov
adc
dec
xchg
jl
and
and
cltd
movsb
sub
jbe
lret
sbb
shll
inc
inc
in
repnz
push
insl
xchg
aad
repz
and
insl
rorl
adc
in
adc
push
sbb
mov
ljmp
pop
and
js
out
push
mov
cmp
jbe
sub
imull
push
insl
push
cli
neg
adc
ret
mov
mov
test
int3
pop
cli
hlt
stc
nop
or
xor
xchg
jae
aam
pop
lds
lcall
out
push
imul
test
ret
cmpsl
adc
and
or
loope
rorl
mov
popa
xor
pop
or
stos
mov
ret
aam
mov
adc
sbb
idivl
dec
pop
out
icebp
pop
adcl
push
out
insb
xor
lret
jge
inc
and
pop
adc
repz
push
dec
jo
xchg
xlat
mov
pop
dec
lds
dec
hlt
fsubrl
jbe
jle
and
lret
fwait
imul
fs
xchg
cmp
sbb
cmp
repz
lock
std
xchg
data16
sbb
and
mov
je
cmp
adc
jne
cmpsl
sbbb
addr16
xchg
push
loop
jnp
dec
in
jge
mov
add
aaa
insb
hlt
imul
icebp
cmp
rolb
mov
gs
stos
fnstsw
and
lods
pop
sbb
and
aad
adc
cmc
cmpsb
jae
loope
ja
push
leave
cltd
and
das
test
out
incl
addl
jl
mov
testl
std
lcall
std
ss
jp
inc
out
outsb
pusha
or
mov
push
sub
push
push
shr
test
xchg
mov
das
cmp
dec
je
pop
xor
jns
fbld
push
lea
inc
arpl
pop
movsb
bound
jo
lret
mov
xor
movsl
sub
outsl
aam
xor
ja
sti
mov
push
push
mov
jno
lock
push
mov
sahf
lahf
adc
int
enter
or
mov
scas
enter
adc
movsl
dec
pushf
sbb
xlat
or
bnd
pushf
sub
xchg
outsl
mov
bound
push
out
inc
mov
in
or
rcrb
inc
or
push
push
addr16
mov
sub
leave
mov
xchg
imul
faddl
in
scas
nop
lcall
push
or
clc
loop
pop
aaa
daa
ret
les
jge
xor
std
lret
cmp
or
unpckhps
aaa
push
mov
ror
jmp
pop
add
loope
add
cmpsl
sub
loope
shlb
popa
dec
cwtl
loope
and
lret
pop
sbb
bound
sbb
jae
or
pop
dec
mov
jle
mov
push
rcl
enter
aad
popf
fisubs
inc
ret
ljmp
movsb
fildl
mov
sarl
pop
mulb
jg
or
jmp
stos
xchg
popa
insl
push
shll
cli
adc
fdivrl
push
pop
mov
popa
xor
in
mov
pop
mov
jnp
and
xchg
pop
adc
sub
sti
mov
sub
subb
jnp
or
jb
lcall
xchg
addr16
stc
movb
xchg
mov
sbb
sub
nop
test
arpl
sbb
mov
stos
gs
inc
sbb
pop
cmpsl
jne
cmp
ja
push
fs
mov
ret
loop
hlt
sub
inc
cwtl
iret
dec
pop
nop
rcr
test
pop
arpl
outsb
insb
push
int
mov
adc
pop
int3
mov
sbb
and
mov
dec
cvtps2pi
mov
sub
push
pop
add
andl
incl
pop
movsl
jp
aas
in
sbb
cmp
sub
stos
sbb
jle
jp
imull
pop
clc
ret
ljmp
stos
pop
xor
or
cwtl
xor
and
bnd
mov
neg
out
aas
jg
cs
mov
sbb
mov
sbbl
out
pop
sub
stc
sbb
xchg
fstpt
fmul
lods
add
imul
sbb
sahf
outsl
pop
ret
dec
cmp
into
xor
cmpsl
cmpsb
movsb
lcall
mov
hlt
fs
rolb
loopne
sbb
add
lock
or
jmp
icebp
imul
les
mov
out
xor
xchg
pop
testb
dec
xlat
xor
out
sbb
fmul
push
xchg
sub
sbbl
mov
scas
aas
hlt
jns
push
js
mov
mov
and
out
orb
pop
pop
pop
mov
scas
xchg
or
inc
adcb
and
pop
adc
out
in
push
mov
dec
pop
addr16
fstpt
mov
pop
lods
jp
fcompl
loop
mov
xor
sbb
mov
ljmp
xchg
fsts
das
or
and
mov
jnp
es
int
daa
ljmp
nop
lcall
sub
sbb
iret
pop
js
mov
push
or
jo
movsl
jae
jnp
idiv
jnp
cmpsb
outsb
xchg
fmuls
and
push
les
xor
cmc
xor
and
xchg
stos
push
push
mov
jge
loope
and
cmpsb
xchg
lcall
add
and
aaa
outsl
push
inc
outsl
cmp
mov
ja
push
xchg
and
pushf
scas
sub
xchg
pop
je
dec
and
jmp
mov
jae
push
arpl
adc
sub
sbb
pop
mov
jp
fisubrs
sub
sub
push
and
mov
std
roll
adc
sbb
pop
mov
jge
dec
into
test
out
aam
dec
or
std
or
hlt
push
mov
in
and
not
sub
fcompl
mov
insl
xor
dec
add
mul
movsl
cmp
and
dec
jg
fsub
xchg
mov
lea
loope
cmpsl
subl
dec
jne
mov
sub
mov
cltd
cmc
inc
outsl
icebp
test
and
add
mov
pop
adc
mov
decb
cltd
cmp
je
loope
ret
xor
in
adc
add
mov
inc
jae
mov
mov
arpl
mov
or
outsl
add
in
push
in
stos
aas
add
lret
adc
imul
or
xchg
sbb
fwait
pop
call
jmp
notl
sub
mov
popa
mov
repnz
in
ljmp
fsubl
mov
rclb
adc
lcall
jo
dec
pop
xchg
or
dec
jbe
imulb
inc
dec
nop
push
fs
cmp
jp
dec
jne
jmp
in
loopne
jnp
sbb
js
stc
adc
cmc
push
insb
inc
mov
add
repnz
mov
out
in
push
movsb
movlps
sti
cli
popf
sub
std
jb
ds
jecxz
addr16
pop
les
add
sti
sbb
loope
sbb
dec
sbbb
nop
add
and
arpl
cmp
out
xrelease
adc
add
or
sti
jnp
sbb
sub
mov
aad
orb
enter
inc
inc
rorl
ss
mov
addr16
orb
mov
jnp
insl
jp
imul
stos
or
scas
dec
xchg
cmpl
cld
test
adc
lea
and
lock
jmp
clc
mov
loopne
sbb
clc
push
or
sbb
icebp
mov
mov
cld
push
pop
adc
dec
nop
mov
cmp
int3
rcr
mov
add
dec
scas
imul
cwtl
pop
subb
aaa
pop
gs
cli
push
sbb
cmp
mov
sub
int
mov
pop
loopne
mov
mov
test
ret
pop
sbb
rolb
inc
jl
mov
mov
push
outsb
ret
clc
lods
std
xchg
insl
mov
push
popa
cmp
js
testb
adc
inc
jbe
mov
xorb
insl
cwtl
mov
xor
dec
and
sbb
lods
jecxz
test
dec
movsb
cwtl
add
xor
ja
xchg
add
nop
mov
inc
es
push
xchg
xor
cmpsb
pop
dec
inc
cltd
xchg
scas
insb
add
pop
sub
jp
and
lret
add
inc
fists
fisubrs
jmp
add
jl
cmp
push
inc
push
mov
mov
cmp
xlat
jle
jmp
jnp
fs
iret
sbb
or
pop
scas
mov
insb
fstpl
pop
add
subl
mov
pop
ds
test
stc
adc
and
mov
fnstcw
push
out
inc
push
push
fs
or
cmp
sbb
enter
mov
pop
push
data16
rcrb
sub
jne
movsl
shl
xlat
iret
adc
add
jge
push
cltd
movsl
jmp
call
fsqrt
sbb
or
and
and
cmp
xchg
and
dec
xchg
outsl
call
xchg
mov
fnstenv
cmpsb
xorl
imul
jb
pop
in
jnp
adcl
xchg
push
mov
sbb
mov
cmp
sub
shl
sbb
iret
loopne
and
jae
mov
sti
jno
fldcw
inc
cmp
das
sub
sbbb
out
movsl
cmp
pop
cmp
add
push
jmp
aaa
sbb
fidivs
out
cwtl
ljmp
jne
lods
mov
aas
in
fnstsw
jmp
push
mov
lea
lods
lea
in
sub
imul
inc
pop
cld
incb
jg
imul
nop
cli
jmp
inc
sub
pop
lds
in
repnz
cmp
xchg
mov
add
push
lcall
psubq
inc
lods
xor
xchg
cmovp
adc
dec
gs
movsl
inc
fwait
dec
out
sbb
jb
js
fadds
test
sbb
test
in
xlat
mov
pmulhw
add
dec
test
pushf
loopne
lahf
popf
lea
sbb
rcr
std
sub
call
aaa
test
pop
dec
mov
popf
jmp
fldl
cmp
je
sub
daa
inc
push
adc
dec
mov
out
or
lcall
fcomip
sahf
sbbl
jae
and
cs
dec
dec
jns
add
test
mull
sub
and
lock
stos
add
aad
and
rorl
cmpsb
lcall
xchg
dec
adc
call
push
je
jecxz
sar
pop
cmp
je
xor
add
pop
dec
pop
cmp
and
cli
and
xor
mov
out
ret
insb
outsb
mov
cwtl
test
sbb
push
adc
mov
push
pop
sbbb
pop
xor
cmp
bound
jne
sub
in
or
add
ja
sub
outsl
inc
sub
es
cmp
hlt
arpl
sbb
adc
mov
jmp
jne
sbb
jbe
int
fiadds
out
ss
push
add
les
add
pop
mov
ljmp
pop
xchg
jno
out
add
and
call
sbb
dec
sub
pop
push
adc
pusha
jae
mov
pop
fcmovne
fisttpl
icebp
mov
xchg
xor
sub
bound
sti
inc
pop
fbstp
xchg
movl
jg
data16
loopne
jle
leave
sti
or
add
ja
mov
insl
popf
jp
cmp
repz
mov
and
mov
adc
jge
orl
and
lea
pop
push
and
sub
mov
stos
aam
mov
dec
ret
xchg
fisttps
jne
es
and
xchg
mov
xchg
in
ss
sahf
push
repnz
out
sbb
dec
js
cmc
shlb
mov
fs
push
out
mov
xchg
mov
mov
repz
and
stc
hlt
xor
ret
lods
push
leave
sub
mov
add
pop
mov
movsb
mov
mov
add
es
lods
and
test
sub
int
nop
xor
aad
lods
push
xchg
popa
push
int3
mov
jae
loope
mov
loope
sub
push
out
pop
or
fimull
jns
mov
mov
js
out
in
add
pop
dec
sub
mov
push
push
dec
mov
in
imul
and
imul
rolw
dec
pop
mov
bound
js
sub
stc
in
sbb
jl
xor
in
cmpsl
mov
mov
mov
cmp
cld
in
xor
pop
mov
int3
pop
sbb
stos
sarb
ja
cmp
add
enter
xor
sbb
mov
dec
movl
test
out
cltd
inc
and
lret
push
jae
push
mov
jne
shll
stos
das
dec
sahf
mov
xchg
arpl
out
imul
arpl
push
or
shl
pop
or
mov
jns
std
pop
loope
xchg
dec
xor
mov
test
xchg
pop
scas
xchg
mov
outsl
push
xchg
add
push
and
and
jns
mov
adc
push
adc
and
mov
sbb
or
jo
aad
aas
cltd
mov
lahf
js
cmpsl
mov
xchg
mov
insl
push
sub
inc
lea
outsl
jp
push
sbb
repnz
and
inc
loop
hlt
popf
in
dec
popf
mov
scas
inc
mov
out
das
fst
mov
adc
or
mulps
aad
dec
shl
xchg
add
fisubl
push
iret
push
dec
shlb
pop
jb
add
idivb
sbb
test
jb
cmp
or
add
inc
add
lea
je
xor
in
clc
xchg
cmp
fwait
dec
insl
mov
in
shl
mov
iret
sub
mov
cs
mov
andb
lds
mov
test
cld
xor
jl
into
arpl
mov
or
iret
test
sub
cmp
cmp
dec
iret
pop
outsb
jge
pop
or
mov
fwait
mov
aaa
ja
mov
pushf
lods
xchg
adc
dec
xor
push
dec
daa
sub
sbb
leave
jp
xchg
sti
mov
dec
sbb
sub
xor
mov
or
pop
xlat
or
loopne
test
pop
shl
mov
popl
sahf
in
pop
xchg
dec
add
cs
es
jbe
mov
xchg
xchg
rcrb
mov
inc
pushf
adc
mov
adc
add
jl
ret
icebp
int
add
fdivrs
fwait
jg
rorl
fwait
js
jmp
jb
sub
ljmp
addr16
cmp
xor
int3
add
jno
sahf
jl
xchg
mov
mov
jp
shll
mov
push
mov
in
cmp
or
inc
fidivrl
aaa
loope
xchg
xchg
cmpsl
push
xor
dec
xchg
insl
movsb
cmp
mov
lahf
adc
cmp
jge
cmc
lsl
add
adc
mov
imul
jg
add
or
inc
xorb
dec
shlb
add
mov
es
pop
aad
icebp
aas
pop
pop
dec
aad
inc
arpl
lods
xor
jns
mov
std
sub
cmp
int
adc
xor
sbb
notb
push
ds
and
imul
or
adc
mov
xchg
mov
mov
aad
iret
into
xchg
mov
fs
loopne
movsb
mov
xchg
mov
mov
sub
jae
lods
lods
imul
mov
mov
push
int
jg
dec
shlb
lcall
pop
jg
jne
xor
in
leave
xor
das
add
sub
testb
ja
or
nop
jg
push
out
adc
mov
mov
std
fcomi
jne
inc
mov
sahf
insb
or
mov
shl
mov
and
insl
stos
cmp
sbb
pop
cwtl
lods
jp
in
imul
roll
sti
cmp
jp
xchg
sub
jbe
jle
out
test
mov
cltd
adc
mov
arpl
mov
push
mov
insl
xlat
add
sub
push
rcll
movsb
fwait
inc
push
dec
sarl
mov
jmp
fstpt
fs
sub
sub
jnp
push
movsb
add
popa
sub
movsb
push
int
ljmp
test
mov
and
out
stos
jno
cltd
les
and
mov
mov
mov
repz
lcall
jae
or
popf
and
rclb
xor
aas
ljmp
or
or
aad
subb
or
or
test
scas
mov
dec
and
les
cmp
ja
fsubr
in
mov
inc
add
jle
pop
mov
int3
inc
cld
fisubrl
xchg
pop
hlt
xchg
and
aad
push
loope
arpl
pop
aad
ljmp
popf
in
inc
sub
mov
popa
imul
es
cmp
mov
in
or
or
jnp
inc
das
sbb
pop
cltd
dec
or
fidivl
inc
and
stos
aam
pusha
gs
sahf
popa
sbb
insb
jecxz
mov
jns
xchg
sub
adc
jns
dec
and
jge
dec
sub
call
ret
sbb
mov
mov
inc
and
xor
out
xchg
pop
or
xor
dec
fmulp
cmp
dec
mov
ljmp
jbe
push
pop
jns
xor
ret
ljmp
dec
inc
loop
in
int
cmp
inc
enter
pop
icebp
mov
jne
sarl
mov
int
fwait
push
push
mov
push
leave
test
xchg
mov
int
cmp
jmp
mov
and
cwtl
xchg
and
in
jmp
imul
jae
jae
jne
adc
mov
fidivs
mov
dec
loop
cwtl
dec
xchg
test
mov
inc
stc
jnp
or
lcall
jecxz
cld
dec
sub
in
dec
pop
pop
out
sbb
add
pop
push
mov
inc
xor
xchg
xor
jns
sbb
push
sar
xor
loopne
loop
sbb
inc
es
dec
icebp
int3
imul
jae
or
mov
jae
adc
xlat
cmpsb
xchg
inc
adc
cmp
aad
xor
push
jo
outsl
out
int
scas
aam
pop
sbb
enter
ljmp
icebp
mov
pop
cltd
cwtl
cmpsb
lret
int
push
ret
mov
sub
cli
shlw
insl
cld
int
or
mov
cmp
hlt
push
xchg
hlt
mov
jle
inc
dec
mov
dec
dec
repnz
mov
xchg
push
fildll
shll
scas
cmpsb
jp
jge
ljmp
in
pusha
add
sbb
xchg
push
cmc
sarb
nop
sbb
adc
out
add
ret
push
rcrb
shrl
addr16
in
mov
xor
dec
or
dec
ds
add
outsb
cltd
mov
mov
jbe
outsl
bound
inc
outsb
xor
imul
push
out
icebp
xchg
movb
and
pushf
fs
orb
push
xor
jnp
je
jno
cmp
mov
repz
mov
rolb
mov
sub
mov
int
lea
xchg
test
dec
mov
jne
aaa
adc
sbb
and
mov
jno
sarl
mov
sbb
pop
xor
ret
leave
add
aaa
sahf
cld
jp
mov
mov
and
mov
cmpsl
test
xchg
xor
in
pop
jae
sbb
mov
jp
scas
push
jmp
rcll
jo
mov
push
sbb
xchg
pop
xor
mov
or
cwtl
stos
push
mov
test
xor
push
inc
or
jae
cwtl
frstor
adc
mov
stos
pop
inc
js
fcmovnu
push
inc
push
xchg
sub
or
out
fisttps
cmp
and
mov
dec
push
aas
or
fisubs
je
cmp
daa
dec
lret
fstl
outsb
in
lret
adc
mov
stos
add
mov
aam
mov
ficompl
xchg
sbbl
cli
sbb
stc
jle
mov
insl
pop
add
pop
fs
scas
cmp
mov
mov
xchg
sbb
mov
mov
ja
movsl
jno
sub
pop
dec
mov
cld
inc
shll
sbb
test
sub
stos
mov
push
xchg
ds
or
push
cmp
shr
iret
es
jge
mov
in
jecxz
fcmovnb
lock
pop
shlb
dec
mov
xchg
pop
inc
lds
out
mov
or
ja
std
jno
inc
and
imul
add
sbb
sbb
xor
fsubrs
in
adc
pop
movsl
daa
outsl
lds
insl
push
inc
jae
xchg
idiv
ss
shr
out
cmp
sub
lock
inc
loopne
test
or
loop
cmp
xchg
es
mov
cwtl
rol
unpckhps
or
pop
test
and
pop
cmp
cltd
std
and
scas
sbb
pusha
lock
sub
push
rep
pusha
cli
sub
icebp
outsl
sbb
cmpsb
jmp
xlat
push
jno
loopne
call
jne
cmpsb
push
aaa
adc
push
pusha
mov
int3
dec
lock
cwtl
leave
ljmp
mov
cs
outsl
add
jecxz
es
cmc
mov
and
xor
js
xchg
pop
mov
mov
or
cmp
ljmp
fs
push
add
mov
sbb
push
scas
addb
xchg
sarb
xchg
fsubrp
pmulhw
xor
data16
push
pop
stc
popf
jle
ja
jge
inc
cs
push
outsl
inc
leave
pushf
push
mov
jbe
ret
call
adc
cmc
and
push
jmp
ds
add
fwait
cli
jne
jge
shrl
jmp
mov
cli
push
mov
lret
arpl
aaa
and
xor
mov
daa
xor
sbb
lcall
in
and
push
addr16
lea
or
cmpsl
ret
push
hlt
xchg
aam
push
dec
lea
jns
or
mov
inc
cmp
ljmp
in
xor
aas
std
dec
mov
fdivs
mov
push
iret
decb
inc
sub
js
mov
fs
push
add
mov
pop
adc
lock
xchg
mov
mov
movsb
jle
loopne
ret
out
mov
cmpsb
mov
ret
cld
jle
mov
cs
or
push
push
and
fisubrl
repnz
pop
pusha
cmp
mov
mov
xchg
cmp
fnsave
xchg
xchg
sbb
insl
jl
add
or
cwtl
out
arpl
pop
int
mov
jmp
add
xor
insb
xor
loopne
xchg
inc
sahf
add
je
in
dec
sarl
pop
bound
nop
nop
test
insb
js
cmp
lods
cmpsb
andl
and
pusha
enter
sub
xor
daa
test
jne
jb
repz
notb
fildl
mov
mov
xor
loopne
jmp
scas
add
lock
mov
insb
push
inc
push
push
clc
cltd
aam
add
inc
push
nop
mov
pop
adc
pop
insl
loopne
jb
sbb
loop
shrl
xchg
pop
lret
jge
add
sub
int3
in
dec
xlat
daa
mov
jae,pt
hlt
inc
push
jecxz
sbb
sbb
push
into
je
shrl
push
inc
add
mov
cmpb
or
pop
and
cmp
int
jle
aam
das
pop
xor
add
xchg
and
sbb
cmp
ret
std
gs
shlb
cltd
mov
test
adc
jns
imul
leave
int3
scas
fwait
sbb
pop
cmp
add
imul
fsubp
int3
mov
aas
xor
xchg
sub
inc
adc
hlt
out
shl
cmpb
leave
int3
xlat
push
outsb
xchg
shlb
insb
cmp
mov
jecxz
enter
push
popa
js
lret
in
xchg
xor
clc
xor
addr16
jno
inc
mov
lods
adc
aad
jecxz
xor
push
jle
or
jns
loope
clc
inc
cmpsb
addr16
jne
inc
loop
ss
pushf
ss
add
gs
rcrb
into
mov
out
jge
push
call
jg
pinsrw
xchg
inc
cld
jbe
fiaddl
mov
out
popf
mov
insb
mov
xchg
mov
int3
cwtl
rcrb
xor
ja
scas
ret
sub
je
push
outsl
mov
icebp
arpl
shlb
repnz
xor
cwtl
popf
mov
adc
add
pusha
adc
arpl
ds
out
sbb
test
rep
test
add
jae
pop
jnp
ljmp
in
dec
in
xor
xchg
bound
sahf
xor
stc
push
subl
mov
fdivrs
stos
jg
push
jb
inc
push
add
xor
sub
mov
inc
cmp
jp
inc
push
xor
and
cltd
les
xchg
test
xchg
pusha
xchg
shlb
adc
xchg
push
sub
mov
xor
jae
adc
jle
daa
lret
xor
cltd
mov
test
popa
jl
loope
insl
xchg
mov
mov
adcb
fisttpl
mov
in
jmp
shrb
mov
daa
mov
mov
xchg
out
xor
fsubl
repz
xchg
jg
push
lret
xchg
push
ds
stos
jp
fbld
xor
mov
aad
mov
jbe
xchg
pop
push
xchg
mov
fucomp
mov
fs
pop
push
mov
add
lea
addr16
jb
xchg
push
pop
cvtps2pi
mov
ds
sahf
nop
pop
cmp
stos
loope
push
cmpsl
lock
insl
mov
mov
or
push
adc
xchg
mov
lret
pushf
adc
insb
dec
xchg
or
movsb
or
or
or
inc
inc
xchg
dec
jno
shrb
fdivs
mov
xchg
fs
xchg
mov
cmp
int
xchg
and
fnsave
xor
mov
or
ljmp
insb
mov
rcrb
rcr
jle
aad
fisttpll
pop
jp
test
sbb
cmpl
jae
pop
ret
aam
stos
cmpsb
lahf
in
imul
mov
rep
in
push
popf
std
or
xchg
fisttpl
fsubrl
sbb
push
adc
shll
repz
mov
or
adc
es
aaa
movsl
les
mov
mov
dec
int
push
icebp
mov
sub
push
into
inc
sahf
aam
mov
xor
nop
cmp
jb
loopne
out
jl
adc
lea
push
or
ficomps
mov
ret
and
mov
das
pushf
mov
stc
imull
mov
call
sub
xor
scas
pushf
ljmp
mov
push
outsl
shll
outsb
mov
ja
loop
cmp
inc
and
stos
scas
push
insb
outsl
popa
or
arpl
scas
lahf
mov
stc
mov
sub
xor
mov
or
stc
xor
mov
das
xor
xor
std
xchg
shll
or
aaa
push
idivb
and
sbb
clc
jae
push
cmp
lea
mov
mov
sub
fisubs
fistps
insb
xchg
sub
inc
lods
cmp
out
ja
dec
pop
inc
push
lret
fsubrl
sbb
mov
xchg
pop
ficomps
test
clc
inc
pop
mov
cmp
xorl
out
lahf
fucomi
xor
addb
adc
inc
aas
dec
inc
sub
xor
sbb
xchg
out
add
dec
movsb
into
xorb
cmpsb
push
scas
pop
mov
xlat
xchg
or
into
sbb
sbb
mov
es
push
shlb
aas
cmp
sahf
or
adcl
incb
mov
cs
mov
mov
xchg
aam
push
dec
mov
popa
imul
loope
test
push
mov
mov
dec
add
ja
sub
dec
xor
out
punpckhbw
rorb
mov
cs
mov
pop
cmp
icebp
repz
xchg
sub
movsb
ljmp
xor
mov
inc
imul
cmp
and
mov
pop
repz
xsaves
jb
inc
inc
jo
sub
into
lret
add
into
cmp
inc
adc
inc
lock
mov
or
sbb
push
inc
es
movl
and
cltd
mov
bound
inc
push
iret
in
fcomps
or
add
lcall
mov
adc
pushf
push
pop
jb
ds
and
cli
sbb
out
in
mov
cmpsb
fsubrl
push
xlat
jb
mov
jb
hlt
loope
adc
mov
jmp
xchg
push
fiadds
sbb
ror
loope
pop
xorb
imul
hlt
sub
jecxz
jb
test
xlat
push
pop
lds
push
sbb
mov
sti
call
call
leave
je
add
inc
ror
popf
das
mov
inc
xor
or
adc
add
dec
adc
xchg
mov
xor
mov
nop
jl
cmc
push
lret
ljmp
lret
popa
add
aad
fistl
add
dec
flds
pop
jge
jns
jecxz
xchg
pop
or
repnz
sub
push
sub
shll
scas
or
cmp
sub
out
mov
and
ret
add
cmp
rcrb
adc
mov
jl
bswap
jmp
repz
jb
fisttpll
mov
fistl
insb
popa
xor
lret
adc
dec
add
in
mov
cmp
int3
pop
xor
movl
fdivrp
push
rol
or
inc
out
stos
mov
mov
div
push
roll
sbb
or
mov
pop
inc
push
int3
or
rclb
xchg
push
adc
and
mov
jb
mov
shrb
add
add
add
dec
mov
xlat
push
mov
hlt
ror
loop
popa
loopne
push
rorl
mov
and
movsb
clc
rclb
in
mov
push
aad
cld
repnz
out
sub
stos
outsl
and
in
lds
mov
xchg
adc
xor
ja
decb
and
add
jnp
das
mov
push
sub
arpl
pop
fmuls
ret
inc
pop
xchg
cwtl
xchg
xchg
add
or
clc
jb
xchg
and
daa
mov
adc
ss
mulb
in
outsl
push
fstps
push
pop
xchg
jge
lds
into
and
sbb
add
int
and
imul
adc
mov
icebp
fst
xor
imul
xchg
js
js
pop
repz
dec
jmp
daa
insl
sar
xchg
movsl
fistpl
popf
cltd
out
jo
call
roll
mov
jno
mov
out
sbb
jp
int
sub
lock
icebp
mov
pushf
imul
pop
jne
jbe
adc
arpl
pop
lds
insb
cmpsl
jno
cmp
aam
cmp
add
jae
adc
pop
jl
imul
js
test
outsb
adc
leave
sbb
or
pcmpgtd
adc
push
xchg
adc
les
aaa
or
ljmp
fnstsw
iret
ds
pop
jno
mov
push
imul
aaa
lret
or
pop
pusha
in
loopne
jne
dec
pop
add
and
lahf
pop
mov
xchg
hlt
push
mov
cmpsb
xchg
and
stos
repnz
mov
mov
addr16
inc
push
loop
ret
dec
or
mov
loopne
push
add
addb
xor
and
aam
and
mov
mov
dec
mov
out
push
dec
shl
jle
push
mov
jmp
mov
pop
adc
imul
mov
pop
ficomps
push
xor
cmp
push
jecxz
sti
lahf
inc
stos
stc
loopne
decb
enter
push
cmp
jae
fs
cli
pop
mov
fiaddl
arpl
jle
out
lock
pop
jle
hlt
aad
jmp
mov
cmp
jno
clc
lea
mov
push
dec
in
in
xchg
pop
cltd
or
mov
add
add
aaa
dec
shrb
nop
push
fnsave
icebp
push
xchg
bound
push
dec
shlb
pushf
mov
lods
cli
mov
xchg
imul
cmp
sbb
jle
mov
mov
out
icebp
movsl
dec
inc
xchg
xchg
jnp
adc
popa
or
shrb
dec
andl
dec
enter
dec
hlt
leave
rcr
outsl
push
arpl
outsl
sub
negl
mov
add
push
repnz
push
sbb
mov
daa
pop
js
mov
cmp
in
sub
mov
xor
xlat
fimuls
dec
ljmp
xor
aam
or
ror
enter
in
mov
pusha
and
add
shll
gs
into
push
xor
push
inc
sbb
xor
ret
pop
inc
mov
addr16
adc
push
arpl
xor
xorl
shll
cli
sti
mov
pop
ret
pop
inc
xor
dec
mov
out
loopne
test
fwait
pop
lods
cmc
das
test
int
jo
jno
or
dec
sbb
lret
cmpsl
imul
push
stos
cld
sbb
jg
cmp
jl
sbb
movsl
mov
jmp
sbb
in
testl
adc
inc
cld
pop
push
mov
dec
testb
mov
mov
inc
imul
sahf
out
imul
popa
cli
fs
pop
cs
sub
std
ret
in
mov
sbb
fisubl
push
xor
scas
adc
dec
pop
adc
cmp
jp
sti
stos
and
xchg
fs
out
and
push
jg
or
sti
pop
popl
mov
test
xor
stos
aad
push
sub
int3
lods
push
or
xorl
xchg
push
xor
loope
and
les
fistpl
mov
dec
and
cwtl
xor
ret
sub
sbb
mov
adcl
es
mov
cmp
arpl
mov
push
or
sbb
and
jns
imul
and
and
mov
rorb
loope
rclb
cmp
loop
iret
and
jae
out
mov
cwtl
push
popa
sub
sbb
scas
insl
cs
push
or
test
stos
iret
rorb
cmpsb
mov
inc
add
xorb
pop
mov
icebp
sub
dec
sbb
cld
inc
in
into
sbb
adc
pop
push
enter
std
je
sahf
cmp
ficoml
int3
and
jae
xor
in
mov
cltd
dec
cvtps2pd
cli
inc
sbb
enter
lcall
push
mov
pop
loope
daa
jmp
xchg
or
ds
mov
jns
popf
ja
call
mov
dec
popa
push
xchg
cmp
sti
add
cmpsl
mov
mov
mov
push
and
imul
push
cwtl
test
mov
jp
out
pop
and
aam
mov
mov
jno
fcmovne
sub
or
test
movsb
inc
scas
xor
jecxz
cltd
mov
add
mov
sbb
mov
sub
sti
test
and
das
mov
or
jnp
jo
xchg
xlat
aas
aaa
repnz
inc
lock
xchg
xchg
popf
and
loope
dec
mov
cltd
imulb
sbb
rcll
add
iret
nop
nop
adc
jl
jns
nop
scas
add
lock
sbb
call
inc
enter
pop
fs
or
mov
jns
outsb
mov
lods
je
mov
push
push
enter
loop
adc
push
cld
arpl
cmp
cmpsl
sbb
push
adc
pushf
sub
adcl
dec
sbb
clc
ret
imul
push
add
sub
repz
or
and
push
sbb
pushf
xor
iret
fs
mov
test
jecxz
add
in
mov
enter
xchg
mov
push
ret
insb
sbb
test
rcll
ret
sbb
into
jne
test
xor
in
jmp
lods
mov
fst
test
aad
imul
leave
stos
xchg
das
and
arpl
push
inc
lret
dec
ds
push
adc
dec
pop
shrb
scas
or
lret
jg
sub
xchg
push
and
in
mov
lods
mov
inc
cs
mov
shrb
adc
sub
jns
das
mov
flds
jl
mov
jle
cmpsl
in
mov
bound
or
mov
cwtl
mov
push
pop
push
push
fwait
adc
push
sti
in
pushl
xchg
repnz
dec
rolb
pusha
mov
ret
sub
add
sbb
fdivs
add
xchg
jnp
stc
cmp
push
pop
mov
and
data16
call
test
lods
fidivrl
jg
lea
cmp
lock
inc
imul
stos
push
xchg
pop
bound
pop
daa
mov
outsb
inc
add
in
and
mov
pop
out
pop
mov
mov
xchg
pop
mov
inc
in
pop
jmp
and
bound
mov
shll
sub
repz
cmp
repz
sbb
or
mov
out
roll
aam
aam
out
imul
insl
sbb
cmc
sbbl
faddl
and
insl
pop
mov
cmc
mov
cmp
xor
jae
call
inc
jl
jmp
jae
cwtl
adc
push
push
adc
xor
mov
sub
pop
rcll
and
adc
inc
dec
or
mov
ficompl
jmp
repnz
push
sarb
sub
push
mov
cmp
enter
inc
mov
pusha
add
stc
lahf
stos
leave
stos
rcrl
mov
test
or
cld
adc
packssdw
pop
clc
imul
dec
adc
mov
cwtl
enter
test
mov
leave
pop
rcrl
add
or
rcll
fcoml
leave
mov
sub
leave
lahf
pusha
cmp
inc
rorb
int3
mov
pop
mov
xor
mov
mov
jp
out
scas
push
nop
jp
xor
stc
add
sub
into
mov
add
das
mov
popa
out
pushf
aad
mov
xchg
icebp
xlat
pop
push
or
aad
mov
mov
dec
mov
jmp
lahf
lods
xor
aam
out
pop
adc
cmp
dec
and
and
xlat
std
clc
std
add
out
xorb
test
xchg
dec
loop
sar
sub
vpminub
cmp
xchg
cmp
insl
mov
push
inc
mov
pop
repnz
mov
sti
adc
mov
and
divb
leave
push
aam
rcll
int
dec
add
movsl
sbb
mov
sti
cmpsb
outsl
sbb
push
cmpsl
jp
or
in
sub
and
pushf
push
push
dec
inc
jae
sub
mov
shl
sbb
cmc
xchg
in
dec
enter
inc
lds
into
loopne
push
aas
sub
pop
cmp
dec
add
insb
les
iret
iret
aaa
cmp
or
hlt
xchg
loopne
adc
jbe
cmp
mov
push
inc
adc
xchg
mov
lods
or
jecxz
mov
aad
mov
fsubrs
subb
inc
loopne
aam
pop
adc
xor
or
pop
aaa
fisttps
jmp
in
imul
imul
iret
in
push
pop
pop
pop
arpl
fnstcw
sbb
xlat
fadds
and
stc
outsb
jge
rcrb
xchg
mov
out
stos
lret
jge
pushf
dec
icebp
test
mov
movsl
mov
and
dec
icebp
inc
insb
jo
or
inc
or
mov
jmp
mov
jg
or
sub
pop
adc
xchg
clc
sbb
ljmp
outsb
push
es
subl
cmc
incl
cs
test
decb
imul
mov
pop
pop
push
push
inc
shlb
data16
sbb
clc
dec
xchg
mov
fnstsw
xchg
leave
movsb
pop
int
lods
add
mov
or
sbb
jo
adc
or
leave
pop
jne
jl
cwtl
push
ja
movsb
cvtps2pd
inc
sbb
adc
fisubs
fsubp
xor
sub
jbe
xchg
inc
xlat
jnp
jo
push
aaa
mov
insb
jp
call
sub
rorb
or
mov
lret
or
push
call
sarl
std
push
fdivrl
xor
dec
lahf
int
xchg
fwait
movsb
and
mov
mov
mov
insb
pop
imul
mov
add
xchg
fsubr
loopne,pt
aad
xor
xchg
in
or
adc
imul
jp
jb
lcall
and
jb
nop
aas
adc
or
mov
lret
dec
std
out
in
mov
lahf
dec
lea
or
stos
je
xlat
jno
daa
stos
stos
lods
cmpsl
out
xlat
subl
rolb
and
inc
dec
scas
rorl
jl
imul
aam
aaa
dec
mov
pusha
add
outsl
mov
xor
inc
push
and
int
xchg
add
jae
xchg
mov
dec
enter
rol
push
xchg
and
xchg
pop
xor
clc
test
inc
frstor
push
loope
mov
inc
xchg
cmp
out
addr16
pop
sub
lea
sbb
push
cld
pop
subl
or
mov
iret
push
clc
insb
divl
sti
shll
sbbl
andb
mov
jo
jle
or
lods
jecxz
pop
add
xor
stc
movsl
stc
jmp
int
rol
clc
adc
sbb
inc
test
add
test
es
fbld
insl
sub
leave
adc
mov
fnstcw
gs
lcall
les
in
lods
xorb
sbb
mov
pushl
push
mov
add
fisttps
adc
pop
test
iret
outsl
adc
or
fcmovnbe
lods
inc
push
mov
cmp
sahf
and
cli
in
cmp
cmp
push
sahf
mov
jg
xor
cmp
mov
lds
mov
or
sbb
iret
xor
pop
ds
test
lahf
repnz
xchg
jg
cld
idivb
inc
mov
jmp
cld
idivb
jl
fwait
das
pop
lret
cmp
fbstp
adc
pop
mov
clc
das
mov
push
xchg
push
pop
les
subl
cmp
xlat
popa
jg
icebp
adc
xchg
sbb
stc
mov
lea
inc
mov
sbb
hlt
push
sti
in
std
xchg
mov
loope
lret
push
stos
imul
xchg
or
mov
cmp
sbb
scas
les
movsb
das
cmp
cmp
pop
fisubs
in
xchg
popa
and
je
xor
adc
lahf
shl
aad
or
mov
sub
arpl
lahf
pop
push
jb
sub
jae
adc
push
push
dec
push
stc
pop
mov
mov
mov
shlb
inc
mov
jb
fstpt
sub
lods
cmp
dec
sub
mov
adc
xchg
dec
pop
mov
mov
xor
or
test
inc
fwait
adc
xchg
adc
ret
fsubrs
out
dec
mov
add
addr16
out
cmpsb
mov
mov
movsl
mov
mov
sbb
fcmovb
std
test
xchg
inc
cmpsl
jo
cs
sub
aam
lcall
icebp
sbb
movb
dec
in
lret
dec
pop
lock
idiv
xchg
xchg
pop
inc
imul
sub
nop
push
das
and
and
mov
bound
jecxz
fdivrs
lods
xor
sti
mov
push
and
adc
rorb
imul
jle
popl
xor
sbb
and
add
mov
stos
movsb
stos
pushf
inc
cmpsl
cmpsl
jne
pop
xor
lea
in
lock
xchg
adc
jne
fidivrl
addr16
repz
sbb
dec
scas
add
or
call
or
xchg
xor
sbbb
inc
cmp
jecxz
pop
pop
pop
xchg
cmp
lods
es
daa
dec
or
jle
fiaddl
mov
fstl
test
pop
and
sub
cmp
add
jl
loopne
sbb
cld
lret
push
hlt
jp
stos
or
add
sbb
and
test
xor
test
mov
sbb
in
sbb
cmp
aas
cli
js
dec
gs
xor
and
push
mov
lods
cmp
xchg
ret
loop
xchg
mov
imul
ret
fstpt
mov
das
insb
cmp
xor
adc
xlat
sub
mov
loop
jne
int3
imul
mov
mov
iret
cmp
imul
pop
loop
jno
fistps
push
mov
sbb
sub
fadd
pop
dec
aaa
out
popa
dec
jnp
pusha
sub
xchg
xor
int3
cmp
sub
sbb
adc
jg
int3
in
mov
cmp
in
cltd
out
mov
pusha
outsl
in
leave
dec
ljmp
adc
lahf
cmpsl
stos
ss
lock
mov
lods
stos
lods
add
bound
fnsave
scas
xchg
into
xchg
ja
sub
into
rorl
cmp
add
ficoml
negl
out
sbb
add
or
outsl
loop
pusha
sbb
das
ss
shlb
aam
or
and
subl
mov
int3
mov
out
or
adcl
sbb
aad
rcll
mov
lock
xor
adc
add
jp
rcll
jmp
testl
mov
adc
jae
add
mov
xor
test
add
cwtl
sub
lods
nop
sbb
sahf
jge
enter
sbbb
iret
or
arpl
icebp
cmpsb
shrb
mov
jle
xor
cld
imul
data16
insl
ds
xchg
ljmp
shl
push
lret
xchg
lret
mov
cmc
sarl
adc
pop
xor
js
arpl
cs
mov
mov
jmp
push
mov
mov
mov
mov
add
inc
lds
cmc
nop
sbbl
xchg
pop
dec
mov
daa
push
sahf
push
push
push
jmp
es
push
xor
test
add
jle
cld
cld
or
inc
push
cmp
jnp
xorb
cld
lcall
mov
cmp
jecxz
mov
call
cmpsb
jp
sbb
test
sbb
lahf
mov
sub
push
lock
aaa
stos
or
mov
pop
sbb
mov
adc
aaa
jo
into
fidivl
fsubs
rolb
repz
fstps
fimuls
adc
imul
or
mov
in
add
out
leave
clc
fwait
lcall
xlat
push
cmpsl
imul
xchg
cmp
sbb
inc
ja
mov
lods
dec
mov
pop
test
and
xchg
sub
imul
test
es
or
dec
ss
fdivrs
repz
cmpl
or
jecxz
mov
sub
mov
pushl
jbe
into
imul
adc
insb
adc
mov
aad
push
mov
mov
ds
push
lcall
xchg
cmpsb
rcll
add
fstpt
enter
out
sbb
repnz
fcomp
and
dec
mov
aas
lahf
mov
fadds
sub
aam
cmc
sub
ficomps
add
and
and
cmp
fimull
push
push
add
cmp
or
push
clc
lcall
push
pop
sub
sahf
ds
xor
loope
mov
jecxz
pushf
icebp
rorl
repnz
in
addr16
xchg
cmp
or
xchg
out
dec
sbb
mov
adcb
inc
sub
inc
mov
les
dec
mov
clc
adc
pop
push
inc
dec
inc
testl
std
lahf
ja
imul
mov
inc
popl
jmp
icebp
add
outsb
mov
xchg
add
adc
les
sbb
and
mov
enter
mov
mov
sbb
lahf
cmp
fiadds
jg
ss
loopne
or
adc
jecxz
js
xlat
out
adc
mov
dec
pop
cld
mov
lock
cmpsb
les
add
xor
mov
dec
cmp
cmc
je
adc
adc
mov
inc
add
cmpsb
pop
pop
fdivrs
aam
add
stos
seta
iret
cmp
mov
fldcw
mov
sub
inc
arpl
push
add
fwait
mov
js
int
ljmp
stc
movsl
adc
cwtl
arpl
inc
popf
lods
js
add
ljmp
mov
cmp
shl
xor
js
loopne
add
push
in
lret
enter
pop
lea
test
std
mov
sahf
out
mov
xor
fwait
andb
andb
pop
pop
inc
shll
sbb
push
cmpsl
out
hlt
mov
dec
pop
jle
loop
dec
cmp
xor
mov
or
fisubrs
imul
or
leave
inc
loopne
pop
fistps
and
addr16
adc
pop
divl
and
iret
mov
cmp
iret
aas
adc
pushf
pop
adc
pop
cmp
inc
jo
sub
test
fistps
cmp
sub
loop
sti
lods
stos
xchg
iret
sub
scas
addr16
pusha
push
mov
jge
outsb
push
push
jg
mov
stos
mov
xchg
pop
mov
mov
stos
or
cltd
mov
pop
jmp
dec
cs
rclb
test
pop
ljmp
mov
xchg
add
push
insb
lcall
ss
mull
sub
cltd
icebp
push
sub
ds
or
repnz
jnp
adc
stos
int3
enter
sbb
arpl
push
mov
inc
mov
jno
std
mov
testl
ljmp
xchg
cmp
dec
ja
mov
fldcw
adc
repz
add
test
std
andl
js
mov
stc
test
jo
adc
repnz
lahf
dec
int
test
lods
sbb
clc
pop
movsb
mov
jae
pop
add
imul
sub
xchg
pop
call
or
sahf
jno
mov
jo
dec
cmpsb
scas
or
mov
push
pop
adc
xchg
ss
imul
ds
les
loop
mov
das
adc
adc
mov
add
mov
mov
aaa
in
aam
cmp
lret
pop
loop
xor
push
lret
or
arpl
fildll
gs
cmovl
lret
dec
pop
inc
pop
pop
addl
mov
outsl
mov
jg
jae
pop
cld
mov
mov
mov
sahf
xchg
mov
repnz
or
inc
mov
fdivl
insb
mov
mov
inc
loope
fwait
ja
xchg
push
push
xchg
lock
mov
test
outsl
jmp
in
shlb
pop
scas
xor
fwait
mov
add
aam
dec
icebp
mov
adc
push
and
adc
xor
xchg
lret
int3
sbb
sub
fdivl
jae
xor
sbb
sbb
add
xchg
push
fildll
int3
sub
or
in
js
pop
les
lods
es
push
fs
xor
push
fldl
fidivl
loopne
out
daa
arpl
incb
push
in
xor
xor
mov
imul
mov
nop
jl
lahf
xor
fisubrl
imul
aad
inc
lret
pusha
inc
pop
into
adc
fcompl
push
push
add
lcall
es
cmp
add
push
mov
inc
bound
incl
fists
loopne
mov
jbe
xchg
mov
gs
sub
sahf
push
mov
call
es
ds
jns
lods
cwtl
fstl
addr16
mov
fidivs
and
jno
jge
push
sbb
mov
aad
lahf
in
mov
test
cli
inc
stos
cltd
inc
push
xor
fists
lret
mov
push
arpl
adcl
push
setne
in
dec
sub
rorl
inc
popf
xchg
dec
xor
shlb
xchg
fdivs
or
out
sarb
lods
cmpsb
aaa
adc
es
cmp
insb
mov
mov
adc
push
jo
jnp
pand
sar
stos
dec
fistpl
cwtl
add
xchg
hlt
push
mov
and
dec
jb
xchg
popa
std
out
mov
pop
push
stos
and
sbb
aas
push
loopne
out
add
shl
mov
dec
outsl
pop
int3
mov
movsb
pop
mov
iret
daa
daa
mov
insb
adc
add
fucomi
mov
mov
test
mov
je
and
jl
dec
jne
cmp
pop
inc
jne
cltd
dec
mov
lea
mov
das
inc
testb
out
rclb
pop
jmp
or
into
movsb
hlt
orb
add
push
addr16
sub
dec
lcall
lods
test
lcall
or
mov
mov
mov
aaa
pusha
pushf
mov
test
subb
fdivs
xchg
sub
jb
stc
jnp
pop
pop
xchg
movsl
stos
dec
push
dec
in
icebp
xchg
mov
and
mov
push
mul
mov
repnz
ss
sub
inc
fs
mov
cli
push
ret
push
sahf
xorb
int
push
test
imul
mov
jmp
shl
stc
xor
sbb
cltd
mov
hlt
xchg
push
sbb
mov
cmc
pop
push
stos
aaa
or
scas
push
les
mov
add
sub
or
lea
jb
scas
scas
mov
mov
or
inc
popf
divb
les
stos
and
sbb
call
loopne
mov
sbb
inc
and
mov
rorl
or
leave
mov
push
xchg
dec
movsl
mov
repz
and
aas
dec
jo
int3
xchg
in
adc
dec
or
call
popa
ljmp
lods
or
sahf
add
scas
movb
inc
notb
outsb
into
mov
out
push
cmc
and
xor
xchg
or
js
imul
js
pop
lahf
pop
jp
and
inc
adc
xor
shll
inc
test
xor
dec
notl
clc
lret
dec
inc
fs
sbb
out
sbb
insb
inc
inc
mov
loop
aad
dec
push
roll
push
subl
or
fmull
inc
push
jecxz
imul
jns
loope
test
fmuls
fwait
sub
cmpsb
add
lahf
call
inc
pop
cmp
daa
mov
jmp
adc
in
dec
push
mov
pop
mov
sub
nop
push
out
mov
out
bound
xchg
out
cmp
mov
mov
and
movswl
shlb
test
fimuls
repz
dec
repnz
icebp
cmp
jmp
ja
stos
out
into
mov
jnp
daa
xor
jbe
popa
add
imul
jecxz
mov
dec
or
je
shrd
hlt
aas
or
cs
sbb
setbe
dec
add
mov
nop
add
in
and
cmp
push
decb
arpl
mov
ds
xor
sbb
scas
push
bound
mov
or
mov
xchg
add
decb
leave
mov
cwtl
in
jl
jmp
pop
inc
dec
dec
and
xchg
and
in
insb
aad
mov
cmpb
loop
push
cmp
test
mov
hlt
sub
outsb
lods
and
aad
add
mov
int
or
cli
add
fsts
test
pop
mov
rcrl
aaa
mov
dec
adc
loope
les
repz
jb
mov
sbbl
sub
sbb
push
sbb
dec
iret
adc
arpl
mov
aas
add
cwtl
mov
mov
add
lret
or
lahf
or
shll
in
adcb
int
filds
out
cmp
mov
mov
jecxz
cmpsb
dec
gs
lret
mov
into
adcl
inc
jne
sbb
jb
das
add
push
testb
sub
push
dec
inc
negl
in
pop
loop
push
pop
xchg
aas
or
dec
cli
pop
cltd
clc
adc
xor
arpl
jae
data16
or
cwtl
or
mov
sahf
stos
std
pusha
jmp
aas
dec
fdivs
inc
adc
cmpsl
and
mov
xlat
ret
ret
cmc
dec
inc
sub
mov
cmp
jne
test
mov
sar
idivb
clc
inc
sbbb
mov
cld
icebp
mov
xchg
push
movl
maxps
fidivs
lods
test
out
cmpsl
test
sbb
lcall
shll
mov
or
cmpsl
push
cs
cwtl
mov
cld
cmp
push
pusha
ret
adcb
push
aad
ret
jmp
stos
push
repz
je
xchg
push
enter
inc
cld
pop
xchg
push
fdivr
sbb
lock
and
adc
cld
jbe
pusha
cmp
jnp
shr
cmp
xorl
add
jp
xchg
xchg
iret
ja
insb
mov
push
adc
mov
cs
jmp
mov
pop
daa
dec
xchg
sbb
enter
mov
sub
mov
std
lods
orl
call
jp
jg
mov
test
pop
nop
push
inc
jle
sub
movsb
cli
scas
test
in
jge
cld
mov
mov
in
xor
lods
in
int3
and
xchg
jnp
mov
mov
cltd
dec
jg
or
mov
data16
nop
lcall
out
push
fdivr
push
dec
mov
std
mov
cmp
mov
inc
insw
push
xor
das
push
sbb
adc
pop
mov
leave
jae,pt
xchg
inc
imul
mov
and
sub
mov
dec
pop
in
xchg
jno
shll
stos
add
in
addr16
insb
pop
fwait
mov
xor
xor
pop
in
or
sub
adc
jo
and
or
imul
pop
icebp
insb
adc
mov
jb
fdivs
or
or
hlt
dec
in
orl
in
enter
xchg
xor
lods
pop
lcall
mov
sub
imul
shrb
inc
das
pop
sbb
lock
sahf
add
push
or
adc
jg
mov
sbbb
mov
xor
pop
out
xor
and
xchg
xorb
insl
jne
frstor
sub
stos
rcrb
popa
popa
mov
ror
std
xor
pop
nop
xor
les
cltd
jge
xor
inc
frstor
ficompl
mov
jae
shrl
punpckldq
ret
fisubrs
jo
sbb
cmp
in
mov
push
inc
jecxz
out
clc
xor
mov
mov
xor
dec
dec
mov
pop
mov
mov
outsb
dec
sub
insb
cmp
shl
mov
pop
inc
inc
les
adc
jbe
inc
enter
xchg
sarl
sub
lahf
and
scas
out
mov
adc
adc
in
xor
ljmp
ss
icebp
lahf
js
mov
sub
jge
push
jns
cmpsl
data16
cli
testl
mov
in
out
int3
sbb
jne
das
add
cltd
divl
cmc
sahf
pusha
pop
push
dec
jae
pop
addr16
lcall
ret
lar
dec
loope
xor
test
and
adc
and
jg
adc
add
or
test
jne
int3
shll
cmp
xchg
push
pushf
adc
mov
jnp
in
stos
or
ret
push
stos
add
mov
pop
mov
mov
xchg
mov
bound
imul
test
or
dec
imul
mov
je
cwtl
dec
mov
scas
ja
shrl
push
les
xor
repnz
cmp
mov
adc
aad
arpl
mov
jp
jbe
push
aaa
orl
sbb
pop
jg
xchg
mov
cltd
add
lret
cmp
dec
shll
fs
xchg
aad
in
shrl
pop
in
mov
mov
lods
xor
idivl
js
sbb
and
push
je
add
push
scas
std
js
inc
push
bound
add
jns
jno
dec
movsb
idivb
ljmp
sub
cmpsb
sub
cld
nop
loope
sbb
sub
sbb
push
and
jbe
sub
sub
add
rorb
jb
jne
mov
xor
xlat
inc
mov
inc
push
lret
data16
mov
dec
push
inc
adc
lock
icebp
fisubrl
iret
das
add
insl
gs
movsb
test
loopne
in
push
push
test
adc
negb
or
dec
stos
cmp
pop
mov
mov
mov
cmp
sub
sbb
imul
cltd
add
add
test
push
cmc
xlat
lcall
cmpsl
inc
pop
mov
stos
push
dec
mov
sarb
loope
pop
ss
dec
hlt
sub
stc
dec
xor
push
pextrw
inc
icebp
dec
sbb
imul
jg
fwait
inc
xchg
int
gs
pop
fsub
dec
fwait
adc
mov
sbbb
vpmaxub
jnp
into
sahf
inc
mov
jae
scas
into
push
jae
stos
mov
js
jmp
outsb
pop
jle
pop
mov
jb
push
cmp
pop
insl
in
fwait
andl
add
jmp
or
lea
inc
mov
mov
xorl
mov
xor
cld
popf
and
outsl
adc
and
xchg
mov
sub
xor
fnstcw
orb
adc
fs
clc
cs
sarl
xchg
add
jno
jl
movsl
inc
jmp
nop
xchg
adcb
inc
push
xchg
push
mov
xchg
cltd
mov
xor
aas
aas
sbb
mov
mov
cs
mov
and
and
jecxz
pop
jle
mov
mov
loop
fdivl
mov
lret
add
dec
imul
ds
test
mov
fwait
mov
cli
lcall
sub
jge
add
mov
inc
mov
fnsave
adc
inc
jnp
jecxz
pop
adc
int
in
fldenv
pop
lahf
pop
arpl
rcrb
and
loopne
jbe
rcll
pop
jmp
and
and
in
sahf
dec
xor
mov
int3
xor
shlb
xchg
push
jns
push
fidivrs
dec
adcb
out
lods
dec
xor
rorb
mov
iret
dec
xchg
into
aas
xor
cmp
inc
pushw
xchg
mov
push
inc
test
xchg
jns
ds
call
sarl
jecxz
mov
stc
int3
sarl
fbld
xchg
xchg
jle
repz
addb
xor
xchg
ss
xchg
outsb
in
std
push
and
cmp
out
adc
in
mov
cmpl
pop
int3
mov
mov
mov
sbb
aas
dec
jno
scas
xchg
dec
loopne
fdiv
jno
int3
in
push
inc
in
popl
fcmovne
mov
xchg
xor
sbb
pop
mov
aaa
test
cmpsb
dec
in
mov
or
and
adc
andl
scas
cmp
dec
jl
mov
insl
lret
add
dec
lea
jb
rorb
or
mov
mov
test
and
xchg
mov
out
or
sbbl
dec
jp
mov
outsl
or
cmp
ret
sbb
sub
stos
cld
cli
mov
push
outsl
popf
or
sti
js
arpl
es
fsubs
outsl
mov
jg
pop
frstor
and
or
es
int3
mov
out
sub
xor
add
cmpl
stos
ljmp
jnp
imul
xchg
data16
jecxz
jle
popa
mov
ljmp
dec
or
das
pop
sbb
add
xor
sub
push
xchg
xor
push
ret
push
ret
mov
dec
in
mov
emms
xchg
mov
mov
shrl
mov
js
mov
clc
xchg
mov
arpl
pushw
adc
xlat
xor
mov
pop
cmpb
or
jmp
aam
dec
les
sbb
lret
push
cmp
and
pop
xor
aad
inc
dec
clc
daa
mov
jo
lods
jbe
inc
mov
push
xor
jl
cli
ret
inc
dec
addl
mov
xchg
ret
fs
iret
outsb
xchg
call
mov
sahf
rcrl
loopne
dec
int
shll
lea
scas
pusha
jecxz
ljmp
fstps
mov
and
addr16
cmp
mov
fcmove
std
mov
jb
int3
testb
incb
jp
dec
cwtl
inc
insb
cmp
cmp
pop
mov
imul
das
mov
sub
mov
cmp
push
shl
mov
jb
mov
jb
inc
cmpsl
jno
add
add
test
movl
test
xor
rep
sarb
aad
sub
aas
lret
sbb
shr
xchg
rolb
cs
jg
arpl
cmp
mov
mov
inc
mov
xchg
loope
loop
mov
cmp
aaa
bound
daa
ljmp
in
leave
mov
imul
or
xchg
andb
sti
in
rorl
out
out
rcrb
dec
cmp
popf
mov
les
sbb
lret
mov
shl
popf
sbb
push
arpl
ljmp
mov
insl
xor
faddl
stos
fisubl
pop
repz
stc
push
vcvttpd2dqx
fimuls
scas
jne
scas
cs
mov
xor
popf
aas
pop
and
and
jae
sbbb
lret
mov
test
add
inc
cli
lahf
and
dec
xchg
sbbl
je
cmpsb
jno
mov
icebp
imul
fcoml
js
xor
or
xchg
push
and
mov
or
adc
and
xchg
aam
inc
sahf
pop
nop
ja
xor
stc
push
pop
sbb
je
cmp
jp
cld
aam
xchg
hlt
jns
dec
push
sti
popa
shrl
and
inc
mov
sbb
aam
cmpsb
or
sbb
inc
dec
push
sub
lods
inc
sbb
add
js
stos
pop
lds
mov
mov
clc
push
stos
sub
xchg
or
cmpsl
scas
fildll
icebp
and
pop
cmp
or
adc
jns
btr
in
call
test
orl
jp
mov
lock
test
pop
inc
dec
aaa
data16
xlat
xchg
rol
mov
shl
decl
cmpsl
cwtl
dec
add
push
inc
dec
sbb
es
lods
movsb
cmp
mov
jge
mov
mov
mov
cmp
push
sahf
jecxz
pop
sbb
cmp
jl
outsl
or
in
leave
mov
pop
out
push
jg
or
out
sub
repnz
mov
into
into
sub
cli
movsb
sbb
test
mov
fisttpl
pop
fiaddl
sub
mov
ss
jne
cld
mov
push
jnp
xor
mov
xor
mov
out
aam
lret
xchg
lret
cwtl
cld
negb
fwait
adc
mov
push
insb
fisttpll
into
lahf
cmp
jns
mov
popf
out
stos
lret
data16
data16
out
mov
xlat
xor
mov
fwait
mov
es
test
mov
xor
repz
pop
jb
sub
jmp
push
mov
jns
xchg
int3
xor
adc
lock
xchg
lds
cmc
dec
icebp
pushf
and
mov
ffree
lcall
shll
mov
out
aam
jns
mov
pop
xchg
int3
lods
bound
push
sub
lcall
scas
fs
xchg
xchg
cmp
dec
div
adc
jno
fidivrl
jb
and
aas
jno
mov
mov
xchg
fcom
repz
mov
sub
lock
push
mov
adc
js
push
pushf
cmp
shll
repnz
cmp
insl
aas
fldl
ss
cmp
xor
push
mov
std
test
mov
and
loope
js
push
mov
jb
scas
and
int3
jg
mov
std
ss
dec
sarb
mov
inc
mov
arpl
push
jl
mov
mov
adc
daa
push
cli
pop
mov
lods
stos
or
cmp
or
cmpb
lock
sbb
and
and
xor
in
cmp
nop
gs
mov
push
movsb
ror
push
xchg
insb
pop
mov
sub
sahf
mov
inc
les
dec
jae
add
cmp
lock
pop
daa
testl
out
aaa
loopne
or
ja
mov
popf
adc
mov
xor
jle
cmp
scas
sti
in
push
loope
push
adc
adc
test
xor
cmp
sub
push
nop
and
pop
dec
jae
roll
dec
into
add
jnp
jbe
jecxz
mov
mov
cmp
and
push
dec
cmpsl
dec
cmp
lock
leave
sub
mov
push
cli
andb
push
mov
shll
xchg
mov
sbb
push
movsl
lods
lret
mov
mov
fiaddl
repz
push
xor
sub
sar
movsb
subl
dec
pusha
mov
sahf
ret
xchg
ret
lcall
fidivrl
cmpsl
push
adc
rorb
clc
in
lahf
arpl
out
cmc
imul
xchg
and
mov
add
add
pusha
loop
js
incl
mulb
xor
inc
push
movaps
lds
fs
lahf
mov
jecxz
scas
cmpsl
xchg
push
adc
jmp
sbb
dec
jb
push
bound
pop
and
in
sbb
sub
cmpsl
sub
mov
cmp
add
mov
shll
cmpsb
je
adcb
and
sarl
cmpsb
mov
enter
into
xchg
fistl
sti
lret
pop
fildll
jle
shll
and
hlt
inc
sbb
jecxz
in
cmp
and
test
mov
je
add
sub
rcr
push
arpl
jns
inc
sub
loopne
fs
or
outsl
nop
cltd
nop
fldcw
test
outsl
cwtl
xchg
push
sub
sbb
sub
adc
xor
cmp
sub
test
xchg
inc
pop
int3
pusha
pop
into
lea
xor
ljmp
adc
arpl
mov
stos
cmp
fbstp
add
jnp
push
pop
xor
xlat
jge
jb
mov
fidivl
dec
sub
pushf
insb
xchg
jno
cmc
lahf
pop
pushl
lret
je
dec
add
dec
mov
ss
fbld
push
mov
dec
mov
call
jmp
enter
fs
int3
fs
gs
mov
insl
xor
mov
mov
ret
pop
pop
pop
inc
testb
jnp
jmp
sbb
movsb
shrb
or
or
add
sbb
or
mov
xchg
inc
lea
aam
mov
call
sti
sti
push
cmpsl
xchg
outsl
outsb
and
clc
add
and
mov
std
and
adc
and
mov
aaa
xor
cmpb
sub
mov
cmp
sbb
pop
insl
js
mov
add
shrl
mov
xorb
sbb
mov
mov
xchg
xorb
dec
mov
hlt
lea
add
ljmp
das
mov
mov
cmc
aam
sub
cli
mov
cs
frstor
imul
pop
mov
enter
jo
stc
pop
repz
cmp
pop
out
adc
fbld
jns
or
out
incl
fsts
xchg
cmp
in
sbb
cmp
push
inc
std
hlt
fnstsw
pop
js
aad
fs
xchg
shlb
adc
les
cwtl
ss
mov
adc
sub
stos
mov
xor
test
jo
cmp
jl
adc
xlat
xor
pop
outsb
mov
ds
pop
push
rorb
lret
pop
test
sbbb
mov
adc
mov
clc
jecxz
sub
mov
push
insl
adc
mov
call
push
adc
push
lahf
xchg
out
hlt
loop
cmpsl
je
rol
test
popf
cmp
ja
clc
popa
pusha
insl
loopne
packuswb
dec
insl
cs
ret
int
les
rol
sub
and
sbb
out
sbb
xchg
enter
movsl
fdivrs
xor
icebp
sub
jecxz
inc
scas
xor
cmp
jo
push
in
mov
movl
test
sbb
push
cmpsb
in
adc
mov
scas
in
mov
clc
cmp
jbe
cld
or
mov
xchg
lods
int
or
int3
pop
shlb
jbe
das
mov
mov
loopne
sub
fcoms
sbb
push
xchg
jp
les
mov
sti
inc
mov
mov
dec
data16
js
iret
in
test
mov
in
cmp
push
jg
inc
add
daa
or
sahf
cmp
push
jne
retw
pop
xchg
lret
mov
push
outsb
cli
push
in
gs
xchg
test
xlat
sbb
imul
add
scas
ja
orl
ret
in
std
fistl
jmp
lret
inc
in
dec
inc
test
ror
jmp
fisubl
popa
dec
mov
je
sti
rcrl
iret
in
push
jle
cmp
in
or
movsb
sbb
push
and
and
enter
mov
sub
jb
and
mov
fildl
sbbl
sarl
xor
mov
jno
sub
int
mov
cli
aaa
in
jnp
sbb
lods
data16
lret
jb
jl
mov
ja
cmp
ljmp
jmp
mov
xchg
cmp
out
jecxz
xchg
lods
dec
mov
popa
mov
jbe
xor
fmul
fldenv
popf
inc
cmp
mov
daa
mov
in
movsb
fs
or
lahf
roll
out
aad
push
out
gs
add
sub
mov
mov
sahf
loop
clc
add
ja
aam
jl
sbb
and
mov
mov
push
aad
jnp
fcmovbe
xchg
call
ja
xorl
fs
push
mov
xchg
in
leave
pusha
jno
fisubs
add
jns
addr16
faddl
filds
add
jge
cmp
add
sub
aaa
scas
push
mov
push
jnp
test
dec
arpl
pop
popa
xchg
adc
divb
ret
cmp
das
push
testl
push
stc
xorl
in
mov
adc
jnp
cli
add
add
iret
pop
int3
out
mov
cmp
cmp
xor
sub
cs
addr16
fistpll
imul
mov
loopne
sbb
sbb
xchg
lds
sub
lcall
sbb
mov
cmp
or
dec
mov
push
push
push
out
test
jl
fstl
xor
push
mov
lahf
xchg
cmpsl
imul
test
daa
mov
cmpsb
push
test
jl
pushf
cmp
or
ljmp
xchg
movsb
or
insl
iret
mov
push
mov
mov
adc
push
dec
mov
mov
mov
mov
insl
pop
pop
dec
pop
mov
rcrb
test
jnp
add
sbb
fimuls
dec
outsl
scas
push
mov
jmp
cmp
mov
jbe
xorl
or
aad
lret
add
std
sbb
lret
push
or
lret
shlb
xchg
cmc
xor
cmp
cwtl
dec
mov
adc
dec
dec
sub
inc
add
out
out
lds
fstps
fucomp
mov
lret
stos
call
les
inc
test
dec
cmpsb
bound
mov
push
inc
mov
std
negb
adc
xchg
int3
cmp
dec
outsl
aaa
fstps
pop
repnz
dec
jno
mov
les
xchg
push
cli
iret
arpl
jnp
jbe
call
scas
mov
fildll
and
movsl
dec
rcrl
dec
shll
mov
pop
cli
dec
leave
jmp
aad
cs
pop
loope
aas
fdiv
sub
cmp
xchg
jbe
lods
rcrb
inc
lahf
xchg
clc
ja
out
adc
test
movsl
adc
js
adc
bound
xor
or
sbb
loope
adc
lds
xchg
movsl
xlat
ds
aas
push
aad
xchg
rcrb
leave
and
das
shll
mov
sbb
mov
xchg
push
pop
aam
loopne
insl
add
push
adc
mov
sub
jg
sbb
icebp
call
jno
mov
adcb
inc
lock
sbb
xchg
dec
pop
ret
testb
mov
mov
bound
dec
lods
fimuls
push
dec
popa
test
push
cmp
je
mov
xor
dec
gs
test
xchg
inc
jl
inc
sub
pop
xchg
scas
push
fildl
cld
push
loope
call
andb
mov
mov
daa
add
dec
fiadds
ds
hlt
lret
in
jle
rcll
sti
aaa
adc
and
push
clc
pop
inc
adc
es
push
ret
outsl
xchg
pop
inc
inc
sub
aad
cli
mov
sub
lds
loope
dec
xor
xchg
je
lock
mov
xor
and
inc
js
loopne
aad
jmp
mov
adc
xor
loop
outsb
mov
xchg
push
inc
and
test
dec
pop
or
lods
xchg
in
sbb
mov
and
and
xchg
mov
dec
and
and
lods
add
mov
in
dec
sbb
and
mov
mov
jmp
mov
incb
shl
mov
mov
xor
adc
scas
sub
cmp
mov
sub
fsubrs
pop
cli
cmpl
inc
ljmp
sbb
idivb
cwtl
pop
xchg
xor
faddp
cmp
cmp
push
popa
aaa
mov
pop
repnz
loopnew
pop
imul
outsl
sub
shll
push
into
pusha
xlat
scas
outsb
dec
pop
push
les
add
jno
cmp
jl
aas
mov
stos
inc
mov
adc
xor
cmp
or
lock
xor
movsb
sub
popa
movsl
xlat
or
push
push
mov
push
dec
fwait
hlt
pop
push
cmp
mov
scas
js
or
mov
inc
jnp
mov
fwait
jle
mov
or
sbb
push
mov
and
test
pop
and
jns
dec
aad
inc
mov
repz
or
insl
xor
pop
push
push
sti
inc
mov
out
mov
je
mov
test
icebp
test
xchg
pop
fwait
int
shlb
lea
xorb
aas
lcall
inc
es
sbb
fstpl
inc
lods
mov
xchg
xorl
push
scas
cmp
ds
dec
inc
sub
or
jp
push
cmpsb
cmp
ljmp
mov
dec
in
inc
sbb
inc
jp
xchg
arpl
cs
repz
mov
rcrl
sti
ljmp
loope
xchg
dec
sahf
adc
xor
cmp
repz
inc
orl
out
jecxz
ljmp
mov
mov
outsl
gs
mov
popa
mov
into
add
inc
xor
scas
test
add
pop
adc
pushf
ds
imul
xchg
xchg
push
mov
jle
dec
inc
xorl
sbb
jns
jbe
mov
xor
nop
push
and
cmp
jae
jne
aas
mov
xchg
jno
scas
jecxz
ss
jmp
pop
in
out
or
lods
adc
mov
cwtl
loop
leave
inc
inc
pop
testl
out
lea
xchg
xor
mov
imul
add
jnp
adc
dec
adc
xchg
idivb
imul
stos
leave
fwait
jge
mov
or
pop
vphadduwd
sbb
mov
mov
dec
cmc
add
or
rcll
js
std
dec
push
and
inc
mov
ss
dec
push
xor
pop
mov
gs
mov
imul
imul
clc
add
fcompl
mov
jecxz
sahf
mov
or
dec
add
fdiv
scas
mov
cmpsl
adcb
push
sub
mov
mov
mov
enter
adc
aad
add
lcall
sbb
sub
mov
sbb
scas
popf
add
or
cmp
dec
push
shrl
shrb
in
mov
lret
jns
mov
mov
or
cmp
sbb
psrlw
shr
gs
dec
paddb
inc
mov
dec
adc
xchg
pop
jae
sbb
fimuls
jb
add
dec
ret
mov
sub
dec
call
lds
movsb
mov
loope
mov
and
ds
in
pop
sub
testb
pop
mov
lods
dec
rolb
lods
sbb
sbb
insb
mov
push
lahf
aad
sbb
sbb
ja
push
xchg
cmp
and
add
xchg
push
sub
cmp
in
out
or
lods
es
push
pop
or
xlat
inc
fbstp
push
inc
sahf
ss
fistps
push
sbb
adc
push
xchg
imul
jno
imul
jno
xchg
sbb
je
js,pt
mov
xor
dec
push
mov
or
iret
pusha
mov
pushf
jp
das
sbb
push
xor
lret
add
rcll
aam
sub
outsl
rcrb
jb
add
cmpl
rcrb
sbbb
inc
dec
pop
lret
dec
aaa
mov
das
gs
fisttps
movsb
fcoml
adc
cmp
jp
lahf
xor
test
jae
dec
mov
cmp
in
bound
sub
push
leave
mov
mov
aad
xchg
inc
or
stos
lock
inc
mov
loope
mov
and
sbb
mov
and
stc
loop
jbe
jnp
sub
andl
pushf
push
lahf
clc
xor
lock
adc
push
xor
xor
lcall
ss
mov
cmp
pusha
adc
test
xlat
bound
push
pusha
jne
pusha
pushf
cmpsl
dec
arpl
jno
cli
xor
inc
mov
loop
aas
sbb
fisttps
dec
das
fucom
mov
test
rcr
adc
xor
xchg
pop
adc
xor
data16
pop
rcl
nop
sahf
mov
adc
enter
cmp
xor
sahf
in
repz
imul
loope
mov
mov
xor
cltd
jg
scas
jmp
popa
sbb
outsl
inc
pop
pop
cmp
iret
aam
mov
lods
sarb
push
js
mov
pop
mov
mul
and
inc
jnp
scas
insb
xchg
inc
addr16
jne
dec
add
push
sub
push
loop
je
das
std
shll
in
push
add
shlb
fldt
or
bound
xor
inc
mov
or
adc
cwtl
ss
rcr
jae
sbb
xchg
pop
decb
or
sub
int3
pop
in
rcll
mov
push
in
gs
adc
hlt
xor
fnstcw
rol
pop
xor
pop
push
dec
pop
lea
cwtl
xchg
mov
loope
xor
int3
in
cwtl
rcl
imul
mov
or
jge
jnp
scas
mov
repz
push
movsl
out
repz
inc
arpl
clc
xlat
lods
jle
or
shrl
xlat
aam
add
inc
dec
ja
outsl
dec
mov
aas
mov
mov
ss
ljmp
dec
dec
pop
les
add
add
jns
jno
mov
sahf
ret
ljmp
cwtl
sbb
hlt
cmpsl
mov
sbb
cld
pavgw
mov
inc
dec
mov
popa
clc
mov
add
in
call
dec
cli
xor
fdiv
jb
mov
and
xchg
or
push
inc
cmp
jl
pusha
jmp
xor
xor
cmp
into
push
inc
fmull
jo
xor
mov
cld
xor
cmp
and
xlat
pop
add
insl
mov
push
inc
shl
adc
test
out
inc
inc
out
push
lds
cmpb
loopne
dec
movsb
sub
fwait
popa
xor
cmp
lods
mov
cmpsl
arpl
cltd
lcall
shll
popl
pop
xor
xchg
sub
rcll
fsts
call
bound
push
xor
scas
jmp
adc
loope
call
ret
jge
popf
xchg
add
mov
or
mov
lods
shll
push
arpl
je
or
lods
sbb
aaa
cmpsl
and
outsb
add
xor
and
aad
out
lahf
sbb
mov
mov
jns
insl
mov
mull
movsl
repnz
pop
mov
dec
push
hlt
jno
test
push
loopne
adc
push
and
test
or
and
and
fs
mov
insl
mov
incl
sahf
pop
mov
js
mov
and
push
pop
and
and
nop
jbe
iret
mov
cmpsl
dec
adc
cmc
dec
fcomi
xchg
std
mov
popf
add
ficompl
jne
mov
push
inc
push
sbb
or
adc
pusha
push
xchg
adc
or
mov
iret
jl
and
cs
mov
push
dec
push
daa
add
outsb
nop
mov
scas
sti
sti
adc
scas
loopne
les
loopne
pop
pop
pop
imul
jg
stos
add
les
adc
jb
hlt
and
xor
mov
xor
mov
data16
mov
add
sbb
inc
and
mov
and
push
rorb
inc
rcrb
leave
js
pushl
push
cmp
push
jl
lea
popa
mov
pop
and
jecxz
imul
jecxz
int3
lods
es
push
mov
cmp
int3
loop
mov
fcomps
out
push
jns
pop
mov
lds
and
add
mov
add
aaa
fnstcw
lret
out
pop
subl
and
pushf
adc
dec
mov
decb
les
lahf
cs
loopne
aas
mov
inc
in
sbb
push
and
jmp
aam
jns
popf
shl
sbb
push
bound
imul
jecxz
ja
clc
lock
inc
jmp
int
xor
push
or
fmull
pop
adc
loope
mov
pop
int3
lahf
dec
mov
sub
mov
inc
shrb
cld
xchg
push
jge
push
cmpsb
cmpsb
fbstp
push
sbbl
jp
jle
sar
sti
js
cld
insl
aad
out
les
push
jns
jne
sar
cltd
ljmp
aad
call
popa
imul
dec
mov
lods
dec
inc
ljmp
je
sbb
xor
ljmp
test
push
jp
shl
aad
mov
cmpsb
bound
cmp
pop
shlb
dec
sub
lret
sub
ja
push
dec
lret
mov
call
adc
dec
clc
cwtl
jnp
jo
push
dec
es
push
add
sbb
inc
insb
xor
hlt
or
fwait
mov
adc
or
hlt
and
sbb
lcall
jnp
push
mov
mov
jb
jmp
and
xchg
mov
adc
jns
mov
cmp
mov
or
mov
xor
or
cmpl
pusha
lods
pop
jne
adc
adc
movsb
mov
bnd
dec
les
push
pop
in
outsl
data16
arpl
out
cmp
inc
mov
int3
in
dec
gs
test
rorb
movsl
jbe
out
pop
and
mov
aaa
xchg
dec
rcll
mov
jns
jno
cmpsb
ljmp
pop
sub
pop
and
mov
add
sar
jae
or
enter
ret
cmp
ret
inc
std
dec
es
cmp
cmp
or
bswap
ds
js
push
ss
sbb
in
je
cmp
xchg
addr16
ja
fimull
push
pop
add
mov
rolb
shlb
inc
pshufw
or
gs
inc
adc
in
push
mov
add
mov
addb
ds
xor
adc
mov
imul
cmpsl
pushl
mov
jle
push
push
cmp
repnz
inc
jbe
xchg
jle
jg
cmp
fxch
lret
jnp
ret
mov
ja
fwait
mov
jg
arpl
adc
out
orb
adc
dec
mov
push
cs
mov
cmp
pop
pop
pop
inc
adc
jecxz
jge
ret
stos
test
and
stos
cmpsb
pop
sbb
xchg
icebp
mov
jge
or
jmp
out
lods
mov
inc
sub
or
mov
dec
mov
push
xor
mov
loop
scas
or
stos
imul
sub
push
ror
lea
and
mov
mov
dec
stc
xor
aas
dec
cwtl
dec
fidivrs
inc
jmp
jge
and
jae
stos
mov
jns
pop
sub
movsb
addr16
mov
nop
scas
les
daa
mov
ficompl
xchg
adcb
cli
mov
xchg
test
imul
shll
sti
push
mov
iret
xchg
pop
inc
mov
xchg
aad
out
rcrb
jp
adc
dec
decl
mov
dec
wbinvd
cs
xchg
test
movsl
mov
jg
inc
mov
into
fbld
sbb
sbb
jbe
les
out
insl
dec
fdivr
mov
popf
pop
nop
pop
mov
inc
dec
iret
push
dec
jo
push
add
cmp
fistpll
xor
hlt
adc
aad
sahf
mov
pop
and
adc
cld
loop
push
jb
sub
pop
les
dec
test
push
shrb
or
repnz
mov
pop
and
rolb
mov
mov
and
aam
imul
add
flds
sub
push
pop
inc
jl
push
in
rorl
loop
in
aad
and
push
int3
mov
push
dec
aaa
js
push
cmp
inc
pop
sub
or
jle
jp
cwtl
sahf
test
inc
movsb
sti
imul
test
pop
mov
xchg
cmpsb
enter
lea
fildll
inc
ljmp
loop
int
in
mov
lret
jecxz
jno
int3
inc
jge
or
mov
pop
fst
mov
xor
insl
mov
into
xchg
sbb
in
or
outsb
jmp
lods
out
add
push
xchg
lods
add
and
add
dec
hlt
loop
clc
iret
mov
notb
test
out
push
dec
rcll
mov
cmp
gs
adc
into
add
xor
xchg
aam
int
mov
in
popf
cmp
and
sub
jle
stc
imul
push
push
mov
call
sub
adc
imul
inc
outsl
test
xchg
sbb
mov
shlb
sbb
cmp
cmp
cmp
test
mov
cmp
int3
pop
xchg
jne
popf
nop
fdivl
pop
in
push
scas
cmp
lahf
les
mov
lods
fsubl
cmp
xorb
adc
sub
scas
test
add
fdivs
xor
pop
jb
cmp
mov
inc
sub
mov
sbb
xchg
cmp
shl
pop
jl
insb
out
dec
mov
sbb
shrb
pop
fisubrs
popa
aad
or
xchg
or
xor
aas
loopne
aam
xor
inc
and
mov
ret
cmpsb
add
mov
inc
sbb
and
test
sbb
jnp
mov
and
mov
out
lret
cli
aam
mov
mov
aam
sub
cmp
imul
inc
aad
cmp
mov
lret
adcb
push
mov
sbb
push
push
into
xchg
pop
sbb
movsl
or
fwait
and
sbb
lds
bound
movsl
pop
pop
iret
pop
insb
xor
sub
inc
je
pavgb
sub
stc
addr16
pop
and
pusha
xchg
shlb
mov
mov
mov
inc
ret
mov
sub
lcall
mov
inc
arpl
mov
lock
in
aad
sub
lcall
orps
inc
pop
cmp
cwtl
xor
adc
mov
movsb
outsl
mov
jne
pop
insl
xchg
xchg
scas
mov
jo
and
cli
testl
repnz
adc
imul
inc
push
pop
lret
lret
ret
lcall
cmp
pop
pop
xchg
lea
push
sahf
ret
ljmp
sub
lcall
ja
push
call
lahf
pushf
cmpsb
inc
lret
popf
out
imul
mov
ljmp
hlt
int3
mulb
pop
mov
jg
cltd
adc
insl
jge
xchg
sub
jae
in
popf
dec
sub
push
cli
push
shl
xor
cmp
sti
mov
adc
into
dec
sbb
movsb
push
mov
ja
fisubl
cmp
loope
mov
and
lock
imulb
mov
or
adc
icebp
mov
mov
psllq
and
icebp
out
hlt
mov
add
xor
lock
stos
fisubl
sbb
push
xchg
jne
inc
cmpsl
sbb
cwtl
adcl
js
or
ss
int
inc
add
sub
insl
rep
and
in
xchg
sar
mov
lret
sbb
ja
mov
sub
inc
cmp
add
xor
loop
xor
pop
sbb
and
xor
andb
jmp
cmpsb
add
in
cs
pop
ljmp
push
pop
cmp
mov
adc
rcl
insl
jl
and
cmovl
mov
nop
pop
sbb
mov
shlb
push
cmp
in
sub
push
inc
aad
shlb
sbb
or
jmp
inc
adc
sbbb
and
adcl
shlb
lret
arpl
in
cmovb
pop
mov
jl
cmp
cmp
sub
lret
call
add
stos
push
sbb
imul
fstps
std
cmp
shlb
fnstcw
pop
adc
mov
mov
repnz
dec
mov
adc
out
cltd
adc
add
ret
jns
adc
mov
pop
out
ss
jmp
add
jmp
pop
inc
sbb
xchg
dec
inc
mov
lea
inc
cmpsl
sub
aas
cmp
leave
out
push
addr16
xchg
pop
mov
cwtl
push
cmpsb
xchg
loop
jg
das
in
inc
andl
or
xchg
aam
jno
ficompl
icebp
cmp
test
cmpsl
popf
call
daa
addb
cmc
test
or
cmp
pop
pop
xchg
dec
stos
stos
mov
xchg
cli
dec
push
mov
mov
mov
movsb
shl
sbb
xchg
std
or
ss
mov
jae
in
mov
or
mov
inc
add
outsb
aas
sub
in
enter
dec
xchg
and
stos
dec
inc
pop
clc
push
aad
gs
mov
data16
push
xor
pop
mov
mov
pop
loopne
sar
shrb
lahf
adc
out
fadds
loopne
mov
pop
ds
add
fisubrl
int3
into
pop
inc
dec
lock
mov
xor
pop
mov
lsl
and
mov
lea
insl
test
jmp
inc
aad
inc
enter
add
add
pop
addr16
dec
push
cmp
push
fmull
sbb
inc
faddl
inc
mov
cmp
xchg
inc
aas
sub
fucom
pop
pop
add
mov
push
lods
divb
jae
lret
pop
mov
fisubrl
push
mov
mov
mov
dec
arpl
fstl
mov
add
fnstcw
fidivrs
pop
fwait
outsb
loop
push
test
cld
cmpsb
push
popa
es
inc
sbb
fbld
xor
dec
inc
push
dec
mov
pop
lods
push
sub
pop
test
add
or
arpl
mov
aad
imul
pushf
dec
mov
mov
inc
negb
insl
xchg
pushw
pop
jg
fmuls
aas
enter
repnz
stos
repz
jne
pop
repz
adc
or
ja
repz
jp
mov
into
inc
push
add
cltd
icebp
mov
mov
out
pop
mov
test
rcll
gs
out
pop
inc
cmp
sbb
jl
inc
nop
cwtl
mov
or
push
imulb
fcoms
cmp
inc
and
lahf
scas
imul
shrb
sub
ss
sarb
mov
das
xchg
aaa
sti
mov
negb
adc
fcmovbe
add
xchg
call
and
jnp
mov
faddp
mov
repz
loop
fcomps
xor
mov
lods
or
pop
sbb
insb
inc
jge
dec
push
add
inc
cs
mov
popf
or
push
mov
dec
dec
scas
fdivr
out
pop
mov
aam
in
hlt
pop
sbb
dec
inc
mov
cmpsl
mov
sbb
add
js
lods
insl
hlt
push
ljmp
std
pop
and
iret
popa
fisttpl
pop
xlat
sub
jl
leave
orb
or
nop
or
lret
push
and
xchg
outsb
and
jnp
cmc
cld
fiadds
push
stc
subb
xlat
pop
je
mov
and
mov
loop
fistpl
cld
and
mov
loopne
jae
movsl
out
aas
sarb
push
mov
push
mov
push
in
ljmp
lcall
jecxz
mov
mov
int3
inc
and
jecxz
test
mov
mov
nop
push
outsl
gs
mov
xchg
scas
xor
stc
lods
popl
aaa
and
add
xchg
jbe
lret
jnp
push
jns
cmp
pushl
testb
add
mov
push
xor
jg
cmp
cmp
ljmp
sti
imulb
mov
ljmp
and
mov
mov
push
push
into
mov
xlat
js
xchg
push
je
jle
fsubrl
adc
push
sub
imul
es
bound
lods
or
mov
outsl
jnp
lahf
sbb
inc
sub
cld
pop
popa
in
sbb
or
in
adc
icebp
sti
mov
std
push
sub
cs
orb
adc
addr16
std
mov
add
in
mov
xlat
lcall
mov
pop
dec
xchg
aam
xchg
pop
cs
and
js
lahf
adc
cmc
ret
neg
in
sub
push
jbe
leave
scas
insb
repnz
mov
adc
adc
push
movsl
dec
and
inc
or
sub
jp
cmc
or
inc
mov
loopne
adc
in
enter
repz
mov
js
out
test
pop
cld
jbe
push
pop
test
cld
stc
and
mov
mov
push
xor
dec
mov
push
imul
push
jne
push
sbb
cmc
das
push
xchg
add
data16
mov
push
xchg
outsb
leave
lods
icebp
in
inc
cmp
sbb
stos
xor
add
lods
fbld
cmp
lea
add
sub
xor
in
lods
mov
inc
pop
sbb
mov
cmp
pop
loopne
adc
imul
lods
aam
pop
inc
lds
out
sbb
imul
xor
rcrl
scas
out
je
fimull
sarl
push
dec
xor
sbb
insl
lock
out
sbb
movsl
js
dec
jae
mov
mov
fstps
sbb
insb
idivb
lahf
mov
js
xchg
sub
pop
mov
jl
leave
add
inc
and
enter
sarb
mov
sbb
loope
popl
sti
js
lods
inc
loopne
cmp
mov
repz
test
push
out
test
xor
add
fwait
mov
pusha
std
out
cmp
scas
push
lods
sbb
xor
cmp
xchg
ficoml
add
and
sub
mov
jl
add
sub
xchg
add
jne
push
and
dec
outsb
dec
nop
xorl
push
incb
shll
push
xchg
ret
cmp
mov
dec
pop
fstps
and
pop
cmpsl
pop
mov
add
iret
mov
cmpsl
aas
dec
out
or
xchg
repz
and
mov
inc
or
cmpsl
mov
pmuludq
dec
push
mov
xor
sub
pop
push
stos
jno
inc
inc
mov
sub
and
ljmp
ljmp
jle
sahf
inc
mov
adc
pop
or
iret
xchg
sar
movsl
into
es
cmp
lahf
outsl
push
inc
decb
jnp
fbstp
mov
idivb
xchg
popf
push
rcl
pop
or
adc
call
fmulp
inc
scas
mov
mov
sub
pop
rol
cmp
cli
sahf
cmp
ja
divb
sub
pop
sbb
and
loop
shrl
add
pop
mov
jne
mov
mov
jnp
push
test
and
or
add
in
aam
shll
add
shll
aam
das
add
push
and
push
dec
inc
xor
pop
ljmp
push
dec
lret
dec
jb
mov
movsl
push
into
pop
or
and
fwait
jle
in
shlb
pop
fwait
enter
or
addr16
inc
stos
popf
inc
sub
add
mov
lock
xor
cld
imul
xchg
stos
and
cli
mov
clc
imul
inc
sbb
pop
int3
jne
xchg
jns
sub
lea
and
jp
jp
pop
inc
stos
andb
lods
arpl
sub
lret
inc
xor
inc
imulb
mov
jle
fxch
fbstp
cmpsl
or
and
push
push
adcb
sbb
sbb
sbb
insb
std
iret
mov
sub
jl
inc
roll
inc
or
iret
aaa
sub
jb
mov
rclb
outsb
dec
adcl
cmp
mov
test
mov
jmp
jmp
ror
lock
mov
dec
ret
fnsave
test
nop
leave
push
maxps
xor
pop
jp
dec
pop
loop
adc
rcr
xchg
pop
xor
adc
out
mov
mov
adc
int3
pop
cmp
negl
push
push
loope
mov
add
jmp
imul
xchg
addb
xchg
jbe
pop
dec
cld
xchg
mov
adc
into
call
int3
inc
or
push
mov
jecxz
xchg
inc
mov
fdivrs
cmp
sub
das
jno,pt
inc
lahf
mov
test
aam
shr
mov
inc
sbb
xlat
std
cli
jp
jg
lahf
push
lcall
push
xor
ds
in
psllw
shlb
pop
xor
cmc
mov
jl
pushf
mov
dec
xlat
push
idiv
sub
push
pop
out
lret
loop
and
mov
push
or
xchg
outsb
push
pop
sarb
je
add
jge
scas
gs
cmpsl
cld
jbe
adc
mull
pop
dec
ljmp
mov
sarl
stos
xlat
arpl
scas
sbbb
daa
sahf
lret
mov
es
sbb
cs
fmulp
out
dec
inc
loope
shll
pop
lods
es
sti
dec
push
das
les
inc
dec
je
sub
push
mov
out
add
and
mov
sub
mov
push
jg
in
jmp
gs
push
cmovnp
jl
lret
outsb
and
cmp
leave
pusha
rcr
mov
rcll
mov
jg
out
add
les
pop
inc
out
mov
test
and
push
push
mov
loop
and
rcl
cli
mov
and
and
shl
fwait
push
nop
ja
lahf
adc
aas
xor
xlat
stos
xchg
mov
addr16
cmpsb
mov
adc
out
fidivrs
dec
es
push
lock
mov
adcl
testb
cmc
insb
jle
push
and
dec
cwtl
inc
call
sbbb
mov
rcl
sub
mov
repnz
push
xchg
sub
xchg
cmpsl
aad
cmp
cmp
push
inc
rcrb
rclb
and
add
add
cs
mov
pop
repz
inc
aam
fiaddl
lea
fwait
xchg
sbb
loope
pop
ficompl
roll
mov
pop
rorb
aas
pop
sub
xchg
inc
sub
mov
inc
in
pusha
cwtl
or
lds
add
jno
int3
or
mov
mov
jp
jns
jecxz
es
jnp
loopne
xchg
push
mull
js
sbb
and
xor
pusha
mov
stos
imul
pop
cmp
aaa
inc
in
rorl
add
cmc
push
hlt
sbb
clc
shlb
xlat
mov
repnz
jne
mov
scas
scas
sbb
adc
cld
mov
insb
call
inc
outsl
add
inc
rorb
sahf
jne
pop
xchg
cmp
push
xor
cmpsb
dec
not
rcr
sub
jno
xlat
cmpsb
sub
inc
rcl
mov
mov
mov
jbe
xchg
dec
mov
adc
mov
and
xchg
adc
add
pop
pop
les
stos
xchg
in
push
and
cli
pop
jbe
sub
push
mov
dec
push
inc
les
sub
cmpsb
push
test
scas
test
inc
xor
pop
dec
test
movsb
xchg
mov
cmpsb
shlb
fbstp
js
in
setno
sub
pop
idivl
adc
ror
mov
inc
push
outsb
ret
icebp
xchg
push
imul
fwait
pushf
aas
xchg
rorl
and
cmp
fdivrs
inc
dec
lcall
pushf
and
fwait
jmp
mov
pop
in
mov
and
dec
jge
jb
dec
add
outsl
mov
push
jmp
lcall
fs
xchg
nop
pop
test
out
add
jl
scas
popa
daa
sbb
mov
movsb
je
das
inc
lcall
rcrb
mov
or
mov
fimuls
imul
lret
arpl
std
sub
sub
mov
movsb
lret
shlb
xor
out
mov
jno
call
rcr
push
jbe
icebp
lret
enter
in
dec
notl
push
pop
je
lcall
pop
rcrl
sahf
daa
mov
adcl
shrb
sub
popa
leave
add
popf
push
add
xchg
mov
dec
leave
push
jecxz
sbb
mov
loope
push
in
ljmp
cmp
js
sbbl
jp
out
sbb
rolb
dec
and
repnz
cmp
adc
mov
sbb
or
int3
cmpsb
hlt
fsubrs
movsb
insb
cmp
and
inc
in
mov
jae
arpl
cmpsb
add
outsb
cmp
mov
es
pop
dec
sti
push
xorb
adc
jo
nop
mov
adc
inc
scas
sbb
dec
pop
inc
sub
xor
imul
lret
pop
jge
push
shlb
es
pop
mov
outsl
jg
jp
mov
in
fildl
lahf
lods
adc
pop
mov
mov
pop
adc
adc
mov
push
cmpsb
mov
outsb
dec
or
cmpsl
and
mov
outsb
adc
xor
mov
aas
js
fst
jge
mov
out
pusha
loop
adc
mov
pop
inc
xchg
fs
ss
add
lcall
inc
fsubrs
mov
add
pop
insb
pop
sub
ss
mov
sub
jb
aad
sub
fldcw
lahf
jns
mov
or
outsl
inc
xor
aad
push
enter
xor
or
xchg
xor
mov
add
arpl
enter
aas
popa
and
or
jne
cvtdq2ps
clc
jge
fldz
inc
jle
scas
push
pop
fbld
hlt
incl
and
shrl
mov
dec
inc
test
add
pop
xchg
test
add
fsubrs
cmp
xchg
add
sahf
mov
cs
rcr
push
mov
or
xor
dec
lods
rclb
mov
sub
aad
sub
push
dec
leave
insl
pop
incl
aad
inc
mov
xchg
movsb
pop
fldl
push
aad
idivl
test
add
mov
adc
cmp
rdtsc
das
xchg
dec
loope
pushf
mov
xor
shl
loope
hlt
cs
repz
push
mov
movsb
jg
popf
jne
pop
pop
mov
add
or
cwtl
mov
jnp
add
mov
sahf
in
lods
lcall
call
push
inc
lods
fucom
cmp
loope
push
scas
dec
xor
dec
inc
cmpsb
arpl
push
pop
mov
inc
aaa
cltd
shll
jge
in
xchg
call
imul
and
sbb
movsl
movhlps
scas
jnp
sbb
jne
pushf
sbb
rcl
mov
push
and
sbb
rolb
jae
xchg
push
insb
or
cmc
push
in
mov
cmp
pop
add
adc
loopne
repnz
cmp
cmp
inc
fildll
sub
std
outsl
mov
fsts
mov
adc
mov
dec
loop
pop
cwtl
jl
std
or
stos
jnp
xchg
or
enter
jns
fdivl
cwtl
cli
push
mov
dec
and
push
xchg
lods
pop
inc
dec
add
sub
mov
cmp
push
adc
lods
mov
aas
cmp
jmp
test
fstpl
inc
scas
push
sub
adc
inc
stos
das
cwtl
mov
xor
pop
andnps
jmp
in
test
mov
mov
das
sti
icebp
out
jns
adc
xchg
lret
add
push
clc
fisttpl
sub
aaa
cli
movsl
inc
rorb
push
scas
loope
cmp
mov
shlb
push
fpatan
lods
ljmp
pop
rcrl
sub
cld
cmp
and
arpl
lods
mov
test
cmpsl
insl
mov
fisubs
fimuls
or
frstor
xor
push
and
dec
sub
sahf
icebp
push
int
negl
adc
push
push
push
mov
lods
sarb
imul
inc
adc
imull
test
pop
sub
pop
and
dec
int3
jne
adc
filds
fistpl
cmp
stos
inc
ja
add
aaa
scas
fidivl
pop
aam
sub
je
cmp
xchg
sub
fimull
popa
dec
cmp
icebp
into
std
jl
aam
ret
faddp
arpl
test
xor
xchg
cmp
stc
push
cmpsl
pushf
loopne
sahf
fnsave
iret
cli
mov
or
test
in
sbb
mov
ss
xchg
sub
pop
daa
xchg
jl
inc
dec
out
scas
stos
jmp
adc
shrb
into
loopne
xor
shl
pop
rolb
int3
sub
arpl
pop
test
mov
and
pop
js
outsb
and
mov
bound
movsl
adc
xor
imul
fistpll
push
mov
mov
mov
lahf
sbb
lahf
out
dec
cwtl
dec
inc
cwtl
imul
jo
xor
pop
xor
dec
clc
fdivrs
and
fwait
jle
arpl
xor
negl
call
inc
pop
mov
daa
mov
pop
rcrl
xchg
mov
call
xor
lods
push
inc
aaa
jecxz
test
call
outsb
ret
or
cmpl
outsl
mov
push
and
cld
push
repz
lcall
cmc
add
rorb
pop
xorb
pminsw
stos
aam
fldcw
jecxz
push
shrl
lds
cld
lock
cmpl
orb
sbb
in
xor
shll
out
cli
lahf
outsb
cmp
cwtl
cltd
bnd
and
or
iret
mov
cs
cli
jle
jo
repz
push
mov
push
js
fwait
inc
iret
and
adc
and
pop
ss
ja,pn
lcall
pop
inc
mov
sub
xor
test
xchg
xor
pop
cld
data16
push
mov
lret
mov
jge
and
push
sbb
jae
lock
fwait
add
jne
jmp
aas
inc
cltd
xor
popl
jg
movsb
out
pop
lods
pop
fwait
lods
ds
sbb
adc
fwait
xor
nop
adc
pop
fisubrl
bound
fwait
repz
xor
xor
lcall
and
mov
roll
mov
mov
jbe
std
lea
data16
ja
out
cmpsb
lds
incl
ja
mov
adc
cwtl
lret
lcall
adc
aas
push
or
mov
jbe
mov
push
jl
out
push
sbb
xchg
mov
scas
or
mov
adc
aaa
mov
mov
scas
add
dec
pushf
dec
outsl
inc
jp
stc
sarb
xchg
pop
dec
mov
xchg
pop
out
mov
xor
icebp
jo
in
xor
daa
sbb
xchg
jp
xchg
aad
fildll
mov
lds
enter
fst
aaa
les
sub
das
cmp
cmp
mov
xchg
and
leave
xlat
hlt
inc
popf
xchg
jns
and
mov
sbb
xor
lret
pop
inc
in
xchg
xor
push
mov
xchg
fmulp
in
cmpsl
cmp
out
lds
xchg
sahf
dec
addl
sbb
in
rcll
adc
adc
push
adcl
loopne
xchg
push
popa
hlt
push
adc
loope
cmp
pop
roll
inc
fwait
xlat
cwtl
fsubs
dec
xchg
and
in
inc
dec
cmp
shld
loopne
adc
ja
xchg
enter
imul
cltd
ljmp
xor
stos
sbb
xchg
cmp
adc
bound
daa
rcr
rcrb
ljmp
scas
jle
into
std
dec
xchg
sbb
mov
movsl
cli
scas
mov
imul
imul
and
in
sub
enter
xor
iret
enter
dec
push
pop
or
inc
ss
mov
cmpb
pop
mov
loope
stos
repnz
testl
push
pop
mov
loope
sbb
pusha
jge
jb
cmc
mov
and
ss
adc
pop
add
inc
ja
fidivl
sti
enter
sub
hlt
or
and
sbb
out
xor
sbb
sbb
ret
fwait
out
push
lret
add
lcall
cmp
adc
in
jb
cltd
arpl
or
addb
out
testb
cmp
mov
js
add
scas
add
mov
sbb
or
push
mov
test
pop
jo
lahf
add
out
sbb
pop
adc
jns
sahf
test
push
outsl
mov
inc
arpl
jle
movsb
mov
out
int
stc
pop
jo
cs
cmp
cmpsl
lret
or
cmpsb
fwait
nop
test
dec
decb
xchg
push
aam
pop
out
sbb
cmp
les
outsb
loopew
cwtl
aaa
mov
cmp
jle
xchg
push
inc
in
mov
push
jns
inc
xchg
adc
test
mov
inc
inc
test
inc
xchg
pop
xor
adc
mov
adc
mov
in
lock
dec
mov
fdivr
loop
jmp
mov
push
add
sub
ss
dec
mov
jb
addr16
les
std
mov
push
or
lcall
fs
mov
sbb
loope
repz
sbb
add
shll
cmp
shrl
scas
jne
add
adc
rcr
daa
xlat
xchg
xchg
sbb
adc
cmp
cmpsl
adc
add
divb
dec
or
inc
inc
adc
pop
or
cld
mov
inc
mov
js
lds
xchg
inc
add
add
in
cmp
adcl
adc
mov
testl
ja
add
daa
dec
adc
or
movsl
mov
cmp
rorb
cmp
lahf
jns
enter
pop
mov
addl
scas
jae
xchg
mov
bnd
push
add
cwtl
jmp
int3
in
into
add
scas
inc
inc
jg
xchg
inc
mov
sub
icebp
enter
push
cmp
mov
lcall
imul
cmp
cmp
xchg
bound
inc
pop
insb
jge
fcmovnb
mov
add
xor
xor
inc
push
orb
cwtl
push
mov
lahf
adc
xchg
rorb
dec
jle
ds
cmp
rol
xor
sbbl
pop
sub
push
cmpsb
leave
mov
loop
rol
jae
mov
adcl
push
fiaddl
push
push
pop
cwtl
test
jl
mov
mov
or
jne
clc
adc
rcr
inc
sahf
inc
dec
sub
scas
cs
mov
and
lret
cmp
adc
imul
or
sbb
xor
pop
sbbl
loopne
push
push
inc
cld
dec
clc
adc
test
std
cmp
fisubrs
mov
stos
and
popa
leave
loopne
cmc
sbb
inc
or
ja
dec
arpl
int
push
mov
movsl
or
jle
incb
sti
and
sahf
or
pop
cmpsl
mov
out
fisubs
jge
bound
mov
pop
adc
bound
inc
popf
jmp
jp
add
cmp
je
pop
mov
pop
cltd
jl
mov
xchg
jp
mov
pop
sub
adc
int
repz
mov
push
mov
and
pop
mov
fcmovnbe
cmp
outsl
and
pop
loopne
jns
sbbl
dec
xlat
int3
pop
mov
int
cmc
testb
stos
dec
push
scas
adc
pop
mov
jne
adc
loop
mov
push
pop
push
jge
lods
pop
leave
aam
inc
mov
inc
lcall
bnd
cli
cmc
pop
jno
jnp
ds
popa
add
enter
sbb
addr16
sub
sub
cs
int
sbb
insb
outsl
push
fmuls
ret
div
dec
xor
mov
mov
jae
adc
dec
js
xchg
flds
loopne
out
shlb
and
mov
fists
ret
call
pop
or
jno
inc
dec
mov
in
mov
test
sbb
push
dec
scas
dec
icebp
pop
test
dec
addr16
sub
dec
or
cmp
or
mov
xor
jne
negl
je
and
pop
push
fisttpll
fsincos
sbb
gs
sub
popf
cwtl
xchg
decl
js
cmp
xchg
pop
out
add
jge
add
fistpll
cmp
jo
mov
divb
or
pop
cmp
lock
push
jp
sbb
fucomip
jge
add
inc
cmp
pop
add
ret
js
pop
mov
imul
fnstcw
dec
adc
test
int3
in
sbbb
mov
pop
xor
incb
sbb
bound
repnz
mov
popa
sub
xchg
cld
psraw
gs
repz
or
insb
out
jg
xchg
mov
std
dec
cmc
dec
mov
sub
jno
mov
xlat
cwtl
je
jge
push
add
mov
es
pop
jmp
sbb
xor
mov
shr
jae
aam
sbb
fmull
sub
sbb
mov
add
lods
div
stos
cmpsl
iret
aas
or
pop
rcrl
jb
xor
es
into
daa
shl
mov
shlb
insl
mov
pop
dec
daa
push
or
pushf
ljmp
lret
sub
sarl
repz
orb
fidivrl
add
outsl
cmp
sub
cs
xchg
dec
pop
xchg
pop
sti
pop
push
lret
lods
mov
inc
stos
push
daa
mov
int3
or
pop
dec
pusha
aad
mov
add
out
mov
mov
lds
or
lcall
mov
push
add
ds
sahf
ds
lcall
inc
mov
xchg
or
or
enter
pushf
mov
cmp
push
cmpl
fidivl
into
arpl
pop
les
cmp
sub
mov
mov
int
enter
push
int
dec
adc
dec
loopne
cmp
aaa
pop
mov
outsb
add
xchg
xchg
into
sbb
xchg
jecxz
arpl
jbe
rcrl
pushw
ds
mov
orl
pushl
inc
jne
jle
les
mov
inc
fs
subb
xor
addb
iret
mov
insl
xchg
rcr
das
xchg
mov
cltd
subb
ret
push
jns
push
out
movsb
mov
cmp
xor
gs
popa
xor
shrb
repz
je
insb
mov
mov
lds
lods
pop
stc
dec
cwtl
inc
mov
mov
outsb
out
repnz
pop
addl
add
inc
stc
xor
cli
call
or
cli
in
xor
inc
int
ret
aad
inc
mov
sbb
push
adc
add
rorb
jno
sub
mov
jg
mov
aad
cmc
mov
outsb
dec
cld
push
and
enter
lock
jne
rorl
ficoms
add
and
in
xor
sub
iret
fsubrl
add
hlt
sbb
lret
mov
sahf
imull
inc
adc
xor
or
andb
jp
adc
ja
enter
outsb
hlt
into
icebp
cwtl
dec
sbbb
sub
dec
jns
mov
jp
jnp
adc
xor
enter
es
pop
aaa
adc
xchg
or
jge
iret
xchg
mov
scas
cmp
xchg
dec
push
fidivrs
mov
inc
pop
iret
cmp
xchg
xchg
add
addl
outsl
mov
out
add
jg
dec
aas
mov
sub
cmpb
xchg
fadd
testl
xchg
movsb
stos
test
dec
jno
mov
cmp
mov
mov
inc
test
movsb
rcl
adc
jecxz
roll
aam
xchg
in
or
cmpsl
and
mov
insb
jp
cmp
call
sub
mov
clc
loope
pusha
lret
ret
lcall
push
push
jecxz
stc
and
dec
sti
adc
idivb
pop
mov
cmp
push
popf
push
lods
jle
ds
sbb
inc
loope
sbb
rcrb
jno
pop
dec
sub
mov
or
inc
leave
cld
rorb
pop
jne
or
adcl
cmp
lahf
pop
xor
les
bound
pushl
push
add
mov
push
xchg
insl
xchg
mov
lret
sub
push
mov
into
adc
int3
or
dec
aam
cmp
and
xor
stos
jp
or
mov
sbb
in
jg
subb
inc
sbb
lods
addb
cmp
inc
stos
repnz
je
xchg
int3
ret
add
pop
push
xor
pop
shrb
mov
sbb
push
mov
ret
and
popa
add
data16
lret
cli
incb
mov
aad
xor
sbb
in
aam
mov
sbb
inc
or
shrw
push
shl
cltd
into
mov
test
mov
push
and
mov
testl
nop
mov
aad
addl
popa
xorl
subb
cmpsl
mov
movl
ss
rcrb
xor
rcl
pop
mov
jg
pop
xor
aam
lret
call
movsb
ds
sub
mov
std
imul
imull
sub
subl
sbb
pop
mov
out
jns
xchg
js
jp
jb
dec
mov
stc
aaa
popa
adc
pop
shrl
xlat
jo
push
mov
sahf
loopne
mov
in
mov
xlat
adc
cmc
imul
out
mov
cmp
mov
cmp
and
aam
or
loopne
xchg
lods
in
or
jns
dec
cltd
cmp
rcrb
jne
pop
pop
subb
in
mov
pop
jnp
fstl
sbb
sti
out
addl
lahf
ficoml
push
ret
sarb
lcall
sub
rol
les
pop
or
ljmp
xchg
mov
xchg
xchg
mov
mov
icebp
mov
push
jns
std
pop
icebp
popa
xchg
jb
jns
outsb
push
into
popf
subb
mov
clc
push
xchg
das
in
std
sarb
std
insb
stc
sbb
cmp
loop
mov
cwtl
lods
fs
sbb
jnp
sar
add
rcll
je
xor
aas
leave
mov
mov
cmp
push
loopne
ret
push
fmulp
fadds
cmp
mov
out
addl
or
or
adc
mov
and
icebp
push
loope
aaa
outsb
dec
inc
je
xchg
adc
sti
aad
mov
les
outsb
daa
lods
jno
add
sub
stos
adc
ss
mov
pop
outsb
jns
pop
adc
in
movsl
dec
push
popf
sub
stos
push
adc
scas
mov
insb
add
push
sbb
push
imul
cmpsl
jb
stc
sahf
sbb
sub
imul
adc
mov
fnsave
mov
inc
pop
rcrl
fcmovu
ss
xlat
push
mov
dec
out
jp
into
fs
mov
in
cmpl
lds
in
dec
pop
in
fldcw
cmp
out
adc
dec
lret
dec
jp
xchg
xor
sarb
out
xchg
cmp
pop
sub
jns
mov
push
decb
sbb
push
in
xor
mov
frstor
jo
xlat
loop
xor
lsl
jne
push
inc
adc
test
jb
ljmp
or
xor
mov
lret
push
int
cmp
bound
or
sbb
js
push
xor
fwait
xchg
jae
lods
ror
xchg
inc
mov
sub
pop
insb
xor
inc
aam
ljmp
push
call
je
xchg
mov
das
fsub
mov
or
xchg
xchg
aas
repz
ret
dec
mov
cmpsl
loopne
ret
inc
fwait
and
loope
inc
pusha
push
sbb
push
daa
cltd
inc
outsl
jns
xor
lods
ja
ja
dec
sti
mov
inc
ss
fs
imul
ret
inc
mov
pop
mov
dec
lds
mov
aas
cmp
xchg
cmpsl
cmp
repnz
mov
push
fsubr
add
xor
scas
shlb
pop
scas
jecxz
xor
lock
rol
out
lea
xor
inc
adc
mov
adc
mov
repz
mov
push
test
or
sub
test
xchg
out
inc
cmp
jae
sbb
mov
sahf
pop
out
add
or
lahf
daa
leave
std
dec
popf
push
cmp
push
sub
fs
lahf
mov
dec
insb
nop
mov
pop
pop
cs
call
push
mov
in
dec
addr16
jp
js
fucomp
sbb
mov
inc
push
adc
mov
xchg
jb
vpcmpud
mov
leave
sub
adc
mov
add
pop
test
inc
mov
popf
xchg
pop
jae
xchg
cmpsl
mov
aaa
lret
cmpsb
pop
jmp
outsl
clc
fwait
orl
xchg
and
mov
sti
pop
adc
mov
repnz
ja
aas
jmp
xchg
jg
cltd
repnz
add
add
sbb
fiaddl
dec
xchg
imul
cli
inc
sub
outsb
loope
out
sar
pop
shr
loope
test
dec
movsl
jmp
push
mov
mov
in
ja
lds
lret
pop
out
movsb
jo
test
aas
dec
cmp
sub
lds
xchg
jne
movsb
mov
gs
xchg
and
jae
inc
or
sti
pop
neg
popa
cwtl
cmp
cli
and
xchg
pushf
mov
cmp
cs
and
xor
clc
and
gs
pop
cs
lods
ss
in
sub
xorl
jns
or
fnsave
loopne
jbe
sub
in
or
sbb
das
in
and
movsl
fiadds
push
or
adcb
dec
call
mov
pop
into
mov
cld
or
dec
cmp
push
push
jl
test
jb
cwtl
leave
in
imul
push
push
mov
jns
popf
or
sub
inc
repz
push
fwait
cmp
sbbl
jbe
xor
add
mov
cmpsl
out
mov
fisubrl
adc
xchg
loopne
push
sbb
xor
adc
xchg
pop
stos
or
pop
pop
daa
pop
int
shl
aaa
jg
jl
adc
loope
ljmp
stc
cli
loopne
xor
lods
mov
pop
sub
jp
into
dec
pop
mov
shrb
add
dec
mov
add
xor
dec
fstps
add
lock
sbb
lea
adc
pop
stos
or
insb
out
and
dec
jl
jecxz
cltd
cmp
loop
int
rcl
test
add
pusha
data16
icebp
mov
mov
addr16
fadd
ljmp
sbb
or
add
pop
ret
lods
iret
pop
cmp
mov
dec
add
rcrl
stc
mov
stc
pop
jne
dec
out
es
and
or
ljmp
cmc
jp
push
inc
popf
and
mov
adc
or
decb
scas
test
pop
push
mov
nop
add
rcl
and
addr16
mov
shlb
fwait
inc
dec
imul
cwtl
and
addr16
mov
mov
xchg
rcrb
cs
insl
aad
je
inc
addr16
push
or
add
insl
xchg
dec
mov
cmpsl
out
popa
testl
fistl
addr16
fwait
xchg
lods
and
jns
iret
in
cmpsb
iret
call
outsb
xor
sahf
mov
rcl
fimull
orb
idivb
sub
mov
data16
pop
ss
nop
flds
loope
dec
push
mov
push
cld
mov
jb
dec
xor
and
cld
and
fdivr
ret
mov
cld
fwait
popf
xor
jp
aas
out
in
out
xchg
popaw
and
jmp
cmp
cltd
inc
adc
mov
lahf
call
scas
xor
xor
lret
jmp
pop
push
xor
sti
jl
test
ljmp
incb
jg
fsubrl
lahf
mov
jmp
inc
sbbl
in
cmpsb
add
mov
push
xchg
and
loopne
push
push
xchg
mov
hlt
aas
add
loop
aaa
insb
pop
loope
jno
rcll
in
jo
xchg
xor
test
xchg
andl
test
insl
test
sub
xchg
cmpl
mov
inc
lcall
fdiv
pop
push
add
mov
add
inc
aad
sbb
and
xor
pop
lods
pop
aad
fdivrp
xchg
mov
jecxz
out
repz
xchg
ficompl
mov
jp
xor
dec
dec
cmpsl
test
das
dec
dec
lods
pop
pop
testl
aaa
jle
inc
sub
nop
jp
cmpsl
mov
shlb
data16
outsb
int3
xor
cmc
sub
mov
jnp
std
fmuls
enter
lds
push
je
mov
xchg
inc
push
sbb
in
iret
add
es
adc
or
arpl
add
push
xor
sbbl
hlt
inc
xchg
inc
fists
leave
out
repnz
adc
add
cmpsl
outsl
incb
mov
pop
ficompl
nop
out
imul
inc
mov
dec
ror
imul
xchg
pop
lods
stc
out
pop
dec
mov
sbb
inc
enter
inc
pop
inc
adc
push
pop
mov
das
push
pop
fiadds
dec
sbb
push
or
jecxz
mov
js
cmpsl
and
cwtl
jo
cmc
imul
and
movsb
out
movsl
roll
clc
sarl
gs
nop
mov
imul
stc
mov
pop
sbb
fnstsw
mov
cmp
call
loope
das
ds
and
push
sbb
bound
or
fdivrs
xchg
cmp
test
sbb
mov
cwtl
outsl
mov
push
outsb
mov
pop
add
scas
add
cwtl
jge
push
sbb
sbb
in
icebp
insb
jnp
clc
add
push
or
movsl
pop
dec
adc
and
loope
ret
cli
lret
repnz
dec
jnp
mov
fdivs
add
sbb
fisubrl
dec
jns
sub
into
pause
dec
fidivl
pop
pop
lds
aas
cmp
xor
jmp
cmp
bound
cmp
adc
fs
and
aas
dec
aam
lea
jp
adc
call
aad
push
out
nop
sbb
xor
dec
cmp
adc
add
popf
push
hlt
inc
cli
mov
pop
pop
adc
and
repz
pop
mov
ja
lcall
add
xor
scas
mov
aam
rcrb
std
scas
sahf
mov
je
xchg
sub
sub
mov
push
cmp
int3
jb
outsl
imulb
test
js
enter
jge
adc
fsubl
mov
dec
pop
js
sub
or
mov
mov
stc
cmc
dec
jg
out
sub
shrb
mov
rolb
push
hlt
jmp
sub
daa
stos
jo
cmp
ret
xchg
bound
push
pop
add
jne
pop
mov
pop
xor
mov
and
sub
gs
loopne
test
xor
xchg
cld
mov
adc
mov
int
cmp
mov
scas
shlb
lcall
cltd
insb
jbe
jg
insb
insb
mov
mov
push
inc
jle
mov
stos
and
adc
lcall
mov
add
add
sarl
emms
sub
pop
sahf
in
inc
ficomps
dec
mov
cmpl
mov
stos
gs
push
jnp
cwtl
out
scas
bound
in
divb
xchg
pusha
cld
out
fmull
sbbl
push
cmp
jmp
mov
test
out
in
imul
jle
loop
mov
daa
fwait
cltd
in
popa
cmp
mov
loope
rcll
in
mov
ds
pop
dec
out
pop
inc
jmp
jecxz
and
stc
lods
adc
cltd
negb
imul
push
dec
decb
test
mov
int3
adc
adc
fidivl
js
shrl
dec
rclb
icebp
xor
inc
sbb
xor
jp
les
inc
pop
pop
mov
add
icebp
xchg
jmp
mov
outsl
lock
sbb
jbe
icebp
cmp
ljmp
push
dec
mov
inc
sub
mov
xor
fsts
or
lgdtl
fst
lahf
or
jle
cmp
gs
xor
es
fidivs
movsl
sub
push
mov
pop
dec
mov
les
add
cmp
pop
enter
fstps
xorl
adc
imul
sbb
sbb
add
js
jno
mov
push
xor
sbb
subl
or
jo
iret
das
pop
xor
push
repnz
iret
pop
cmp
rcrl
outsb
fnstenv
mov
clc
pop
jns
cli
scas
xchg
inc
adc
or
mov
shrl
leave
lock
scas
ficompl
or
clc
stc
sub
enter
insl
push
shlb
mov
xor
jecxz
lods
repz
xchg
cmp
and
xchg
jae
cmpb
je
jmp
scas
or
aam
loopne
mov
les
scas
cmc
scas
xor
mov
outsl
sbb
push
cltd
sub
repnz
mov
push
mov
add
cmpsl
scas
in
cmp
add
imul
adc
or
xchg
les
test
add
insb
pushf
and
inc
and
mov
sub
call
das
xor
mov
xchg
jo
push
fmull
jno
lcall
mov
mov
jmp
jb
sahf
int
mov
sbb
aad
mov
dec
dec
insl
jecxz
and
mov
pop
push
inc
jns
jg
nop
pusha
rcrb
mov
mov
pop
aam
push
dec
lods
add
roll
add
data16
cmp
not
inc
inc
roll
or
jno
clc
mov
ret
and
mov
push
adc
adc
sub
dec
cwtl
into
lcall
jecxz
xlat
gs
mov
cwtl
pop
test
call
addb
add
mov
sub
outsb
cld
daa
xor
popf
fwait
or
test
sbb
jne
mov
repz
sahf
cmp
mov
lcall
dec
hlt
iret
ret
fnstsw
insb
stos
sbb
das
int3
mov
xlat
lock
cmc
into
jle
sbb
xor
cwtl
jecxz
mov
fs
out
in
cmc
arpl
adc
subl
lea
xor
leave
sti
pop
adc
lahf
xchg
insl
jg
xchg
jno
loop
fimull
xchg
inc
cmp
test
mov
adc
test
sti
subl
out
fistl
jne
frstor
jbe
call
pop
cmpb
adc
cmp
int3
adc
sbb
sub
xchg
lahf
pop
cld
jnp
daa
pushf
das
push
mov
sub
mov
mov
fcoml
insb
inc
pop
sbb
push
add
sbb
sub
sarb
popf
ljmp
ror
and
int3
push
push
sahf
rolb
mov
lds
mov
cld
insb
fisubrs
shrb
aam
or
add
in
push
jmp
movsb
xchg
clts
cs
data16
das
dec
jnp
push
mov
sbb
ss
add
clc
arpl
jge
jecxz
data16
ss
aad
jecxz
movsl
js
arpl
imul
xor
sahf
rcl
hlt
jnp
mov
gs
popa
xor
imul
fsubrs
ds
out
outsb
loope
pop
xchg
adc
iret
inc
scas
sbb
cs
jae
sbb
mov
or
add
shll
inc
inc
imul
inc
sub
cltd
subl
xchg
push
shl
iret
arpl
scas
mov
sub
mov
lods
jmp
push
or
and
inc
push
mov
xchg
popa
aam
add
mov
in
rolb
mov
out
mov
xor
shrb
sbb
orl
out
lock
loope
mov
jbe
sbbb
inc
jno
cmp
adc
movsb
sub
mov
jge,pn
and
icebp
lds
cld
in
clc
mov
sarb
adc
jbe
jge
jae
pop
fcomps
in
sub
push
fildll
les
mov
out
cltd
cmp
inc
aad
pop
sub
imul
jno
jns
jle
adc
inc
lret
ja
dec
loope,pn
and
push
lret
dec
dec
push
push
sub
fisttpl
pop
add
test
aaa
push
or
add
mov
les
inc
pop
pop
inc
imulb
aas
scas
jl
inc
mov
lds
test
je
inc
ficoml
cli
cmp
popa
jns
js
xor
xor
mov
enter
adc
mov
sbb
mov
bound
cltd
push
mov
xor
cmp
int
call
ret
mov
fmull
addl
xchg
test
ds
out
jnp
fdivl
hlt
shrb
lods
scas
dec
pusha
out
sbbl
lods
mov
dec
pusha
sbb
xchg
pop
jnp
mov
mov
enter
sahf
jnp
or
or
add
xor
xchg
jecxz
cmp
js
mov
pop
and
mov
sahf
push
inc
xchg
repnz
fwait
out
mov
push
insl
sti
notl
mov
dec
test
xlat
push
adc
dec
mov
lahf
test
mov
scas
push
mov
test
cmp
fcmovb
xor
jae
push
ret
or
add
mov
test
or
stos
jecxz
pop
adc
loopne
pop
repnz
test
push
adc
fisttps
test
or
int
jne
adc
aam
pop
xchg
imulb
mov
scas
add
sbb
int3
sarl
inc
adcb
out
mov
xor
js
ret
add
ret
push
pop
push
imul
fwait
pop
push
pop
mov
add
xchg
movsb
cmp
jg
pop
push
fmulp
imul
add
mov
mov
xor
mov
mov
add
add
xchg
outsl
cmp
and
iret
and
pop
lds
movl
enter
pop
ret
into
dec
inc
ljmp
lods
lret
or
cmc
or
cmp
pop
adc
and
pop
fmuls
lock
sub
incl
movsb
xchg
mov
mov
divb
fldz
or
mov
in
aaa
mov
out
mov
test
xor
or
mov
shl
mov
mov
inc
adc
push
aam
in
shl
clc
add
js
pop
pop
jp
je
cwtl
mov
jb
pop
leave
adc
inc
rorb
jge
mov
mov
or
std
stos
das
dec
and
push
xchg
loop
sub
shlb
stos
push
and
xor
pop
data16
jnp
dec
sbb
loop
cltd
dec
and
fistl
or
cmp
in
sbb
sub
sbb
sub
lea
xchg
sbb
add
dec
ja
push
mov
popf
mulb
xchg
das
fistpll
push
mov
inc
aaa
aad
sbb
repnz
pop
jne
mov
jae
xchg
cmp
or
xchg
imul
push
mov
inc
je
insl
push
pop
add
push
jae
sub
inc
outsl
out
aaa
mov
lahf
clc
ljmp
sbb
sbb
in
jb
sbb
loop
mov
lea
insb
fstpt
inc
jns
les
and
pop
adc
inc
sbb
cmp
push
imul
loop
mov
xor
inc
push
jl
xchg
repz
in
test
sub
scas
mov
subb
push
aad
loop
jp
adc
inc
dec
inc
addr16
aam
adc
jns
or
test
ret
adc
cmc
dec
sub
mov
cmp
sbb
xor
jae
xchg
stos
jns
pushf
sbb
push
mov
cmp
call
add
push
lods
in
stc
ljmp
pop
pusha
inc
jp
idivl
lret
test
inc
dec
or
pop
out
and
lock
fnstcw
inc
mov
jne
out
je
lods
aas
cwtl
cmp
push
nop
cmpsb
jns
mov
xchg
faddp
xchg
ja
int
idivb
push
mov
icebp
ds
push
loopne
ljmp
movsb
std
repz
push
loopne
push
jecxz
movsl
cld
es
in
push
cmp
adc
out
insb
cmp
scas
roll
push
shrb
shlb
mov
shll
sbb
adc
push
aas
fistps
int
adc
lods
xchg
loopne
push
push
sbb
xor
sub
repnz
mulb
ljmp
mov
subb
lahf
adc
cmp
scas
mov
rcr
repz
repz
mov
sub
loop
cwtl
jecxz
inc
and
cwtl
lock
mov
out
jns
repz
imul
xorb
inc
ss
push
jbe
mov
sbb
shlb
push
cmp
ljmp
sub
test
or
icebp
les
mov
xor
je
fisubrs
mov
in
mov
lret
xchg
ja
dec
shlb
aas
cmpsb
add
popa
push
aas
stos
test
pushf
mov
dec
push
add
mov
imul
mov
pushf
out
andl
in
sub
stc
stos
mov
nop
sbb
aaa
cmp
mov
int
insb
cmp
lret
aad
rcl
sub
mov
sbb
sahf
xchg
add
jg
and
mov
shrl
push
fs
xchg
sub
stos
stos
xlat
lods
shlb
jno
repz
frstpm(287
jo
pop
pop
arpl
cmp
xchg
ret
int3
imulb
movsl
out
xchg
icebp
test
call
sahf
or
pushf
hlt
shlb
aam
jae
adc
and
shlb
mov
cmp
jge
lods
xchg
or
jg
sbb
push
adc
mov
push
lea
addl
bound
mov
mov
add
ljmp
test
fstpt
push
push
or
dec
mov
js
sti
push
test
imul
xor
pop
movsb
rol
sarl
sbb
dec
pop
ss
xchg
pop
nop
pusha
pop
push
and
aad
sbb
out
xchg
sbb
mov
cmp
orl
movsl
push
scas
lret
dec
out
das
lods
cmp
cwtl
lret
mov
rorb
jb
rcrb
push
mov
into
pop
ret
mov
inc
into
inc
jle
xchg
xchg
pop
sub
and
adc
sub
imul
pop
mov
cmp
add
cmpsb
or
push
popf
push
push
lcall
and
and
loope
jo
ret
cmpsb
loopne
cmpsb
mov
out
imul
lock
into
inc
in
rcll
roll
pop
jae
aaa
mov
push
insl
mov
stc
sbb
cmp
xor
mov
and
mov
sub
std
xor
xchg
mov
iret
outsb
pop
arpl
out
and
enter
mov
xchg
add
sbb
cli
stos
lahf
movsb
mov
out
xor
adc
mov
addr16
xchg
in
les
outsb
mov
dec
sbb
cmp
addr16
adc
push
in
pop
mov
enter
leave
pop
dec
sub
jge
mov
dec
push
mov
int
inc
push
lods
dec
aam
mov
movsb
cmp
and
loopne
push
adc
push
and
sub
in
cltd
pop
out
xchg
aas
insb
and
data16
rolb
or
loopne
inc
ja
jns
fs
pop
sti
inc
xor
mov
ja
outsb
testb
lods
push
mov
and
inc
cs
iret
jno
dec
es
pop
push
push
fstp
in
inc
and
pop
stos
repnz
stos
mov
loope
insl
jge
mov
sbb
adc
mov
inc
repnz
ret
xor
jle
test
and
or
shlb
repnz
arpl
inc
dec
test
orb
xlat
xchg
inc
mov
aam
mov
add
xlat
mov
sbb
sar
jmp
jg
and
sub
jnp
jae
inc
lds
ds
and
cmc
dec
lock
or
call
xchg
popf
push
ja
mov
pushf
mov
or
mov
das
iret
std
sub
mov
inc
jmp
shr
jp
lret
and
mov
dec
cmp
mov
data16
push
sub
push
push
andl
nop
dec
test
mov
or
out
mov
mov
sub
mov
push
nop
mov
sbb
neg
jmp
jp
mov
into
arpl
fcmovnbe
pop
cmc
shll
xchg
addr16
mov
lds
sbb
sub
mov
dec
bound
test
and
dec
add
cmp
or
or
ja
lods
rcrl
out
into
jno
pop
lods
adc
clc
and
out
in
stos
add
xchg
jns
fistl
ljmp
pop
cli
xchg
in
ja
mov
fisubs
test
pusha
pop
pop
inc
fnsave
scas
jnp
int
sub
fs
mov
sub
sbbb
or
pop
sbb
dec
and
nop
or
hlt
mov
ds
cmc
testl
lds
and
and
mov
cmp
loopne
jp
aas
push
and
test
mov
imul
xor
mov
pop
test
push
aaa
test
ret
pusha
mov
adc
in
imul
cmp
mov
jo
insl
cltd
imul
cmp
popa
addl
xor
push
or
mov
inc
sub
popl
mov
xchg
push
mov
fcomps
inc
jo
in
imull
and
ficoml
fnstsw
jns
sub
decb
lcall
mov
mov
orb
xchg
notb
cmp
into
je
dec
inc
pop
jne
lahf
ret
pop
jp
jmp
into
ror
inc
and
testl
jnp
lahf
xor
test
sbbb
mov
jmp
mov
lret
mov
cmp
xlat
xor
sbb
and
cmp
hlt
adc
add
dec
or
xor
ficoms
in
lds
repz
inc
mov
out
jb
mov
sub
adc
pop
pop
testb
add
cmp
outsl
add
mov
jo
pusha
ja
dec
sub
in
ljmp
xor
or
add
mov
jne
imull
fwait
jbe
stos
scas
inc
inc
popf
lahf
das
fwait
mov
adc
dec
add
xor
je
adc
mov
mov
add
mov
out
mov
sbbl
add
daa
lret
xchg
xchg
movsb
lea
rcll
btrl
inc
pop
push
pop
setg
jb
xor
sub
ret
xchg
insb
and
inc
jp
lea
in
push
stos
pop
mov
pop
sbb
ss
stos
and
subb
repnz
mov
loopne
xchg
outsl
inc
cld
lea
fwait
aad
dec
xchg
push
jnp
ljmp
or
pop
adcl
pop
mov
mov
pop
cltd
je
cwtl
push
cmpsl
jns
sti
popa
and
inc
xor
popa
mov
jne
repnz
mov
sbb
mov
mov
nop
jl
test
xchg
sbb
pop
dec
fiadds
clc
mov
ja
jns
inc
cld
in
xchg
mov
push
movl
jbe
xor
cs
mov
outsb
hlt
rolb
arpl
imul
xlat
stos
leave
dec
sub
add
pop
das
scas
pop
xor
jne
xorl
aam
fs
insl
iret
bound
mov
aad
not
shl
ret
mul
jbe
cmp
jo
xor
arpl
loop
mov
movsl
lock
test
mov
inc
je
or
inc
push
cmpsb
and
cmp
insb
pop
lock
pusha
cs
je
xlat
sbb
xchg
leave
andl
insl
xchg
cwtl
add
fcmovnu
lgs
xchg
stos
cmpsl
movsb
pop
testl
cs
xor
les
stos
repz
call
ljmp
ret
cmp
inc
lea
outsb
xor
cltd
movsb
jl
aaa
lds
fistl
out
loopne
cmp
sub
jb
bound
fsts
push
mov
pop
out
mov
lret
sub
adcb
mov
data16
sahf
push
fistps
loope
xlat
sbb
loopne
out
xchg
push
jle
into
notl
cmc
cmp
pop
insb
push
jnp
adc
jle
pop
fnsave
das
arpl
pop
out
xchg
mov
jae
pushf
inc
sbb
lahf
stc
cmp
imul
xor
rcl
into
lea
int3
clc
sub
call
jp
clc
data16
data16
outsb
stc
dec
mov
in
mov
push
lock
lods
xor
imul
filds
je
fdivl
xor
rclb
and
pop
pop
xchg
xor
in
pop
dec
rolb
adc
xchg
movsb
mov
lcall
jecxz
negb
mov
inc
js
in
adc
shlb
jg
mov
cmpl
arpl
hlt
repnz
fwait
cmpsl
fadd
subl
push
stc
xchg
stos
aaa
sub
mov
int3
mov
loop
inc
aad
movsl
in
test
data16
subb
sbb
rcl
push
pop
stc
pop
lods
lods
add
mov
dec
ds
loope
sbb
imul
mov
mov
in
jg
mov
push
ret
incb
or
mov
mov
sub
mov
into
cmp
lahf
addr16
out
xor
testb
push
ss
sbb
repnz
mov
sub
jp
push
mov
les
adc
mov
pop
rcr
repz
push
les
inc
and
mov
pop
sbb
sub
xchg
out
dec
in
and
mov
addl
and
pushf
js
jge
rcrb
std
fadds
adcl
lcall
xor
and
cld
xor
cwtl
mov
cmpsl
dec
insb
inc
addl
insb
sbb
xchg
movsb
sub
loop
sub
fistpll
pop
shll
lock
sbb
rcr
mov
popa
adc
sbb
popa
adc
pop
orl
fwait
call
adcl
cmp
pushf
sbb
or
out
daa
scas
mov
jno
pop
inc
scas
mov
cmp
dec
mov
push
adc
sbb
test
mov
sub
jo
insl
arpl
aaa
cmpsl
ret
inc
loop
jl
mov
push
xchg
push
xchg
jo
fisttpll
xchg
fisubrl
and
push
jl
stos
jle
or
hlt
xor
xchg
push
pop
push
iret
fwait
mov
push
imul
je
mov
or
dec
imul
daa
jecxz
call
adc
cli
cs
leave
js,pn
fnstcw
pop
add
adc
orl
test
in
mov
adc
fsubrl
lahf
lock
adc
push
push
sbb
inc
imul
pop
lods
ret
fsubp
out
imul
ret
lods
jl
bound
rclb
lret
sbb
xlat
stos
insl
gs
or
jle
cli
into
gs
lods
fstp
in
add
pop
jp
pop
out
mov
ss
sbb
nop
push
mov
push
test
xchg
lret
ret
jecxz
add
pop
cs
push
adc
rcll
sub
jb
nop
cmc
xor
fimull
mov
xor
or
cli
add
in
inc
outsb
adc
in
or
addb
mov
push
fidivrs
mov
adc
movsl
and
mov
ss
aam
xchg
or
xchg
into
jno
xchg
xor
jo
mov
mov
scas
sub
push
mov
push
pop
pop
dec
xchg
sbb
je
pop
pop
inc
add
ljmp
xchg
out
mov
mov
and
pushf
ss
rclb
rcrb
sbb
int3
outsb
xchg
ss
insl
cmpsl
arpl
xorl
adc
movsb
mov
mov
adc
movsb
cmp
push
cmpsl
adc
rorl
push
mov
jns
and
addr16
hlt
sbb
adc
cmp
subl
jle
xchg
mov
push
mov
dec
and
inc
pop
inc
or
inc
mov
cltd
or
fdivs
into
enter
cmp
jb
push
std
sbb
push
pop
test
lcall
aas
add
pop
cld
jge
cmp
inc
adc
aaa
lret
inc
lods
push
inc
xor
and
notl
jge
pusha
and
icebp
mov
lods
push
das
dec
xchg
xchg
rcrb
incl
out
xchg
push
xor
jle
push
pop
pop
sub
in
pop
adc
imul
mov
jnp
cs
mov
adc
lcall
mov
out
and
cwtl
sbb
adc
or
ror
mov
sub
sbb
das
ret
mov
enter
sahf
dec
add
cli
mov
pop
loop
insl
mov
lea
dec
mov
out
adc
out
mov
ja
inc
mov
jp
jl
popf
jno
jns
push
jno
and
or
popf
sbb
push
inc
sbb
scas
bnd
sbb
jg
inc
mov
or
fldenv
push
and
ljmp
mull
and
jbe
xor
in
aam
loop
repnz
repz
jb
jbe
adc
mov
cmp
push
pop
mov
push
jmp
push
cmp
ret
sahf
jle
inc
enter
and
push
dec
js
mov
je
inc
inc
pop
out
fnsave
mov
repz
adc
or
xor
adc
inc
fildll
gs
xchg
sti
mov
and
rol
sbb
mov
add
push
lahf
stc
paddusw
xor
scas
stos
push
mov
lea
outsl
sbb
cmp
mov
daa
test
dec
out
xor
es
lret
jle
cmp
ret
addr16
test
loop
dec
push
adc
mov
dec
mov
push
stos
insb
das
rcrb
sub
push
mov
jbe
jp
push
adc
dec
push
add
mov
stc
jae
incl
rol
cmp
test
mov
xchg
pop
sub
cmp
rorb
inc
jo
cwtl
lock
sub
or
push
movl
data16
mov
mov
mov
lahf
ss
out
lea
lret
leave
push
cli
mov
imul
andl
dec
bound
cmpsb
int3
loope
jne
mov
mov
mov
cmp
or
xor
dec
pop
and
jp
cmp
bound
jecxz
adc
mov
mov
scas
pop
pop
test
repnz
jo
mov
jne
and
dec
shlb
fimull
cmp
and
adc
pop
das
sarl
scas
fdivl
pop
sbb
jmp
test
sbb
cltd
repz
xchg
push
and
lods
mov
cli
fildl
push
lret
in
push
lret
mov
dec
scas
inc
bound
lods
divb
out
pop
outsl
lea
sub
sbb
movsb
jne
or
pop
mov
mov
inc
daa
flds
or
cmp
mov
js
mov
daa
lret
push
rcrl
clc
in
push
sbb
sahf
xchg
sub
aam
aad
into
pop
mov
push
add
pop
insb
mov
and
and
push
jb
jl
adc
aaa
mov
sbb
xchg
loop
hlt
cmp
adc
pop
cmp
inc
fs
push
pop
movb
lahf
hlt
repnz
or
bound
int3
je
push
es
pop
inc
dec
lret
pop
and
jbe
or
rorb
adc
cmp
mov
int3
fcmovu
movsb
fwait
cli
idivb
jnp
out
lds
movsb
pop
popf
jmp
in
adc
std
mov
pop
sub
repz
insl
xor
sub
sti
cmp
insb
ror
add
int3
mov
xor
cmc
mov
scas
cmp
fcoml
mov
xchg
mov
out
xchg
mov
adc
insl
adc
mov
push
cwtl
repz
pop
es
xchg
adc
jg
repnz
clc
les
inc
cli
call
not
insl
sub
inc
or
jb
sub
call
inc
cmp
inc
clc
xchg
fs
leave
push
or
xlat
sub
mov
push
add
pop
jg
jae
gs
adc
adc
gs
fimuls
popf
xor
movsb
dec
mov
mov
out
mov
fidivrl
dec
mov
cmp
push
mov
mov
adc
imul
mov
or
es
xchg
add
in
xchg
xor
les
and
mov
jnp
repnz
mov
sti
ret
pop
rol
imul
jmp
cmc
xchg
sub
xchg
mov
mov
fistl
test
pop
xchg
loope
lock
shlb
nop
or
shlb
jg
inc
lea
inc
adc
add
push
das
or
ficompl
mov
out
je
in
xor
add
mov
pop
push
jb
xor
ss
dec
repz
imul
shlb
pusha
sarl
out
or
push
push
shlb
fists
jecxz
mov
adc
mov
jle
stos
jns
cmp
mov
inc
pop
jl
adc
mov
shl
push
in
jae
xchg
in
add
xlat
mov
dec
mov
cmp
test
pop
gs
adc
jno
mov
jmp
pop
xor
pop
sub
mov
sbb
push
movsb
pop
jae
in
cmp
jl
iret
call
add
adc
outsb
lea
addl
push
ficoml
pop
stc
into
push
idiv
add
ds
or
or
and
enter
push
out
xchg
sbb
and
mov
mov
mov
sbb
mov
xchg
dec
repnz
sbb
repnz
fsubrs
cwtl
incl
pop
out
std
push
pop
inc
xchg
jg
int
or
cmp
sub
xor
test
mov
test
xor
mov
fwait
xlat
push
cmpsl
dec
out
hlt
loope
jae
push
dec
xchg
icebp
adc
cli
inc
xor
xor
aaa
mov
sbb
imull
mov
jmp
xchg
filds
fistpl
pop
dec
or
ljmp
xlat
outsb
adc
jg
lret
sbb
push
pop
inc
addr16
shl
or
ja
imul
leave
sbb
fstps
pop
out
adc
icebp
in
ror
call
cld
cmp
pop
and
lea
add
ja
pop
push
cmc
cmp
mov
mov
jmp
mov
mov
mov
fistps
lahf
jl
ljmp
in
cmp
mov
shrb
push
xlat
adc
jo
daa
aad
loop
roll
mov
or
mov
cs
lods
inc
sbb
mov
push
dec
sub
mov
out
push
cs
les
out
mov
push
dec
jle
add
mov
push
and
add
shlb
jae
data16
bound
shl
mov
mov
bound
xor
inc
inc
fmuls
sbb
lds
popa
adcb
loopne
xor
cmp
push
xchg
pop
int3
mov
pop
dec
dec
into
dec
pop
stos
lods
das
fwait
aaa
fdivr
cmp
data16
inc
xor
lock
int
imul
jl
or
call
mov
adc
sbb
xchg
jmp
pusha
pop
scas
mov
movsl
addr16
and
sub
xlat
int3
fists
cmp
push
nop
mov
jle
aas
dec
dec
cmp
es
mov
cmpsb
outsb
stc
jl
add
cli
arpl
fildll
xchg
repnz
aaa
fdivp
pop
int3
pop
repnz
adc
cmpsl
jge
inc
sbb
das
add
stos
or
pop
imul
out
jo
mov
xchg
cmp
push
xchg
mov
dec
jp
adc
pop
inc
mov
ljmp
jb
cwtl
jae
popf
cwtl
inc
sahf
jnp
ret
mov
movl
mov
out
testl
mov
dec
push
push
cmp
into
add
push
data16
lods
mov
xor
pop
cli
dec
push
xor
mov
sub
jns
test
jb
stos
inc
cld
cmp
ror
and
fstl
lods
mov
mov
sahf
and
mov
pop
xor
jns
das
insb
dec
popa
fwait
enter
jge
add
and
mov
scas
add
sbb
push
int3
xchg
mov
xchg
lret
sbb
andl
shlb
jecxz
nop
push
xchg
xor
sbb
jecxz
dec
cmpsl
mov
sub
ror
call
mov
or
rcl
and
xor
cmp
push
cmp
dec
sub
xchg
mov
xor
fs
pop
xor
out
jl
hlt
int3
aad
or
sbbl
int
outsb
sub
cmpsl
mov
lock
pop
mov
pop
dec
sub
pop
inc
mov
jb
clc
dec
xlat
pop
pushf
adc
mov
and
inc
add
mov
inc
sbb
mov
jo
icebp
inc
jbe
jecxz
cltd
loop
int3
xchg
loope
mov
sub
jecxz
pop
jae
mov
fildll
inc
pop
frstor
cs
mov
push
imul
or
arpl
push
mov
mov
lahf
aad
fcoms
fnsave
pusha
inc
cli
ret
mov
sbb
mov
in
dec
arpl
stc
sub
xchg
cld
jg
pusha
and
loop
push
lret
inc
fimuls
push
mov
adc
push
dec
jnp
cmp
ja
xor
pop
push
mov
mov
mov
in
pusha
ljmp
fucomi
iret
inc
aaa
js
jle
cmc
movsl
je
xchg
or
shll
cmpsl
push
in
push
add
jno
repz
jge
cmp
add
adc
and
push
ret
repz
cmc
shll
jae
mov
popf
dec
add
pop
cld
push
mov
aas
call
dec
adcl
xchg
sbb
rorb
ljmp
pop
mov
int
test
adc
std
insb
jp
shrl
xor
cmp
and
cwtl
lahf
mov
stc
push
and
xchg
jo
out
dec
mov
aas
xchg
test
adc
test
push
sub
cmp
xchg
andl
sbb
jecxz
sbb
push
das
sub
dec
mov
push
or
mov
aad
push
out
fists
sbb
rorl
xchg
xchg
das
cwtl
hlt
jge
aaa
hlt
xlat
dec
or
aas
data16
es
xchg
stos
pop
cltd
repnz
mov
jecxz
jnp
pop
add
jae
cltd
xchg
test
inc
stos
into
jns
lds
sbb
adc
push
xlat
in
pop
cmc
aad
scas
insl
push
mov
pop
ret
int
mov
das
sarl
cltd
ds
adc
xchg
aaa
mov
enter
pop
cmpsb
aaa
in
stc
fwait
pop
add
ds
cmp
ljmp
pop
mov
outsb
scas
lahf
mov
mov
fwait
pop
and
xchg
mov
cltd
jb
loope
jp
lods
jb
push
jbe
mov
pushf
fwait
mov
iret
sahf
mov
pop
leave
cs
mov
push
jg
xorl
hlt
repz
pop
push
fdivrl
jo
notl
cltd
adc
test
mov
and
xlat
mov
jl
in
dec
test
pop
mov
pop
stc
jl
push
cmc
inc
dec
dec
adcl
sbb
fists
jl
test
or
jg
dec
jnp
adc
push
cmp
push
or
push
and
jo
popf
dec
mov
rcll
in
aam
scas
cmpsl
stos
lret
pop
dec
xchg
out
ss
add
test
jno
cld
xor
das
sbb
es
mov
iret
add
xlat
sti
pop
add
add
cmp
jb
xor
inc
jp
or
and
mov
out
jmp
popa
outsl
push
jmp
mov
jg
xchg
aam
fwait
mov
movsb
cld
inc
xor
push
test
or
ja
and
adc
filds
mov
inc
out
add
aas
aad
lcall
dec
aas
sbb
bound
leave
dec
clc
test
sbb
mov
and
and
loope
mov
je
imul
jne
pop
shld
pop
jb
mov
sahf
shrb
pop
mov
ret
xor
sub
int
cli
jb
loop
adc
push
outsl
pop
push
cmp
add
xchg
jno
addr16
sub
mov
jp
mov
push
cli
xor
sbb
adc
ljmp
sub
repnz
es
mov
dec
std
out
imul
lret
pop
jb
adc
inc
aam
push
call
xchg
mov
imul
repz
in
jnp
out
add
cmp
add
incb
xchg
sahf
xor
mov
popa
xor
outsl
pop
add
mov
mov
lret
cmp
adc
sbb
rcl
ljmp
pop
insb
test
sbb
mov
jns
mov
into
cmp
imul
add
xor
popf
pop
inc
mov
cmp
sub
add
mov
sbb
push
dec
cmpsl
pop
fisttpll
loopne
mov
jge
adc
push
ja
jae
fisubrl
in
enter
push
adc
mov
lock
cmp
fnstsw
adc
add
mov
pop
jp
mov
aas
adc
rcrl
aam
pop
jl
insb
stos
movsb
xor
sbb
in
inc
aas
sti
push
faddl
call
adc
mov
or
fnstcw
mov
adc
cmp
mov
in
mov
and
sbb
jp
aad
mov
jmp
xchg
mov
xlat
lock
dec
pushf
movsb
pusha
aad
mov
jnp
mov
jae
aaa
fstl
inc
xor
test
add
jns
dec
and
test
sub
int3
dec
aad
push
mov
add
aad
sub
daa
sbbl
xchg
sub
movsl
dec
fdivrl
dec
repnz
cmpsb
idivl
xchg
or
jne
push
aaa
data16
fisubl
cli
cmpsl
jno
cli
dec
cli
ds
mov
cwtl
int3
repnz
fucom
mov
cmc
or
add
add
push
push
mov
cld
leave
sbb
mov
imul
testl
push
ficoms
adc
icebp
repnz
push
int
dec
das
xchg
cmpsb
pop
mov
rclb
mov
or
push
jne
out
pushf
test
push
out
push
std
into
add
jne
xchg
clc
mov
int3
lret
rcrb
stos
cli
push
mov
loop
xor
in
mov
push
mov
movsb
sbb
test
loope
insb
mov
mov
inc
adc
push
or
and
mov
cmp
xchg
insl
in
push
inc
je
fldl
lret
pop
clc
aam
xchg
xchg
mov
sbb
inc
jecxz
xchg
xchg
repnz
adc
lods
scas
outsl
pop
cmp
lahf
pop
adc
sbb
sub
int3
lea
jmp
fs
xor
mov
mov
dec
pop
aas
movsb
mov
test
dec
dec
sbb
mov
movsb
ficomps
mov
shrl
mov
pop
sbb
mov
test
in
and
sbb
ljmp
xor
mov
pushf
mov
ds
cmpsl
test
jmp
sbb
xchg
fs
xchg
imul
mov
clc
jb
push
fiaddl
and
xchg
sbb
lret
cltd
pop
lods
dec
lahf
les
cmpsb
adc
icebp
add
pop
shlb
aad
xchg
adc
push
cld
int3
arpl
arpl
fsubl
sbb
aam
cld
mov
mulb
pop
mov
movsl
inc
hlt
inc
mov
in
sarb
loop
adc
stos
mov
insb
mov
push
rclb
inc
add
sub
pop
xor
divb
gs
shlb
cmp
imul
pop
mov
mov
iret
lds
lcall
imul
mov
js
cli
shll
mov
xchg
fs
push
daa
jne
jp
rcr
cwtl
popf
arpl
jmp
adc
pushf
and
cs
js
fldcw
push
dec
ret
push
movsl
lods
adc
xchg
push
push
adc
mov
pop
je
lock
xor
in
std
adc
jbe
fstpt
sti
adc
call
jne
sbb
push
mov
dec
mov
push
mov
inc
loope
outsl
push
rcl
sbb
dec
mov
je
push
mov
lret
ss
jg
aad
iret
push
or
push
xchg
and
movsb
cmp
push
push
pop
sub
add
in
mov
mov
jns
lahf
mov
xchg
ss
mov
push
xchg
push
insb
cmp
push
pop
xchg
add
push
and
aad
xor
popf
xchg
mov
pop
and
mov
fiaddl
cmp
mov
pushf
xchg
jmp
sub
fidivl
fcmove
mov
in
insb
ret
arpl
pop
sub
out
iret
cmpsl
cs
cmc
fdiv
cmc
and
ffree
scas
enter
mov
je
cmp
out
xchg
shlb
cmp
jbe
insl
gs
mov
addr16
incl
push
and
push
js
cmp
leave
adc
sbb
cmp
push
stc
lods
icebp
ret
add
inc
lods
aaa
mov
pop
or
scas
or
outsb
outsb
sahf
mov
ficoms
xchg
add
xor
outsb
fildll
mov
lret
lods
or
into
icebp
pop
ret
test
inc
sahf
push
movsl
mov
insb
sahf
repnz
divl
or
subb
cmpsl
and
gs
mov
xchg
pop
inc
js
cli
and
es
add
pop
mov
jne
cmp
es
cmpsb
movsb
dec
sub
pop
jnp
jno
enter
stos
mov
mov
fld
fisttpl
fildl
pop
mov
xor
jge
inc
lods
mov
cmp
mov
or
aam
add
sbb
fnstcw
orl
push
shrb
test
into
or
fmul
rcl
out
push
pusha
sub
jno
outsl
popa
xlat
pop
cld
push
lahf
adc
lret
dec
mov
pop
sarl
push
or
leave
in
xor
ja
dec
add
inc
movsb
fldt
sub
lods
push
xchg
mov
sub
mulb
mov
aas
clc
pop
sub
cmp
scas
mov
les
mov
mov
fsubrp
pop
fisttps
xchg
rcll
xor
mov
ret
dec
fdivrl
pushf
mov
lcall
imul
sub
xchg
jl
xchg
xchg
gs
xchg
shr
and
add
jo
xor
decl
mov
mov
sub
dec
or
dec
add
lods
in
xchg
test
stos
aad
push
test
aaa
jae
lods
push
insl
decl
dec
dec
mov
enter
adc
fimuls
in
jns
out
fildll
aad
add
mov
pop
jp
mov
or
out
sbb
imulb
test
mov
lods
mov
or
jl
push
and
push
pop
mov
push
sbb
adc
inc
sar
repnz
je
sub
or
es
and
adc
mov
jae
or
mov
test
mov
sarb
mov
adc
imul
lds
sbb
push
psllw
popf
mov
repz
adc
lds
add
rcl
out
inc
inc
pmaddwd
pop
loopne
addb
mov
movl
mov
sbb
and
sub
dec
orb
add
or
jno
xchg
or
push
imul
test
jge
inc
aad
rcll
ljmp
mov
ljmp
xchg
add
cmp
shlb
mov
bound
scas
fbstp
pop
andb
iret
add
adc
stos
pop
jmp
sub
bound
sub
cmpb
js
jo
xlat
cld
mov
and
mov
into
lcall
mov
sbb
mov
in
mov
push
out
cmpsl
imul
dec
mov
or
pop
mov
jle
aam
adc
pop
mov
in
stc
cmpsb
lock
in
inc
arpl
leave
out
rcr
add
mov
les
mov
push
pop
jns
adc
dec
cltd
jae
pop
adc
fwait
imul
pop
les
clc
lahf
mov
jno
cmp
inc
cmp
cltd
xor
or
cmp
insl
mov
pop
dec
in
aam
loop
jmp
and
in
ret
call
sbb
addr16
pop
push
cmc
inc
and
push
dec
push
mov
fdivrl
out
xor
push
cmpsl
mov
call
mov
or
xor
cwtl
loope
push
push
xor
movq
or
adc
imul
jge
pusha
outsb
rcrb
test
arpl
mul
or
rorb
dec
or
inc
pop
popa
adc
bound
lcall
cwtl
push
push
ret
inc
into
mov
popa
jmp
ret
push
lods
int3
test
pop
inc
mov
das
shl
mov
cmp
push
fbstp
mov
hlt
in
mov
adc
push
imul
cmp
xchg
notb
lret
or
in
daa
loopne
jo
and
in
and
or
insl
icebp
les
repz
lret
mov
jae
add
outsl
add
sbb
adc
lret
inc
inc
dec
int
stc
andb
inc
xor
bound
inc
adc
scas
adc
lcall
andl
lea
xchg
sti
add
imulb
lods
inc
rorl
inc
dec
fildl
fcomp
inc
sbb
shr
stc
hlt
jmp
jge
mov
push
pop
lock
push
pop
sbb
mov
popf
mov
jle
inc
push
push
in
sub
pusha
or
mov
push
int
jecxz
inc
cmp
fwait
das
movsl
xor
dec
iret
mov
mov
es
jp
dec
enter
mov
push
push
js
push
inc
inc
jp
stc
inc
pop
push
sti
test
das
cld
xor
or
aam
lret
and
sub
and
sub
dec
repnz
dec
es
fwait
cmc
cld
xlat
fildl
mov
lahf
cmp
data16
xorl
xor
out
jp
lock
inc
mov
push
ljmp
shlb
sahf
cmp
inc
cwtl
sahf
icebp
frstor
aad
test
test
sbb
fnsave
addr16
pop
shl
daa
enter
ret
hlt
insb
fstpl
sub
sub
sub
test
ss
and
loope
ja
pusha
add
cltd
xchg
adc
enter
cmp
insb
sbb
dec
xchg
cmp
mov
xorb
outsl
and
push
sub
fwait
dec
xor
adc
in
clc
in
cmp
adc
or
sub
lock
xchg
ja
push
xor
testl
mov
fildll
cmc
sub
pop
xor
xchg
jge
mov
xor
mov
in
dec
rolb
lods
daa
mov
leave
filds
jp
aaa
dec
outsl
ja
push
ds
sbb
push
loopne
shufps
or
aas
pop
in
outsb
adc
xchg
pop
xchg
les
adc
into
sub
rorl
cmp
sbb
loopne
add
xor
sub
repnz
push
lcall
sub
imulb
mov
cmpsl
outsl
rorl
push
orl
mov
or
mov
adcb
sti
mov
stos
inc
mov
pop
cmp
xchg
test
out
mov
mov
stos
subb
mov
jle
mov
mov
mov
les
cmp
xchg
push
ja
jmp
mov
pop
pop
mov
jns
es
out
push
mov
out
ljmp
jecxz
cmp
pop
ret
xchg
jns
mov
cltd
outsb
lret
insl
mov
loop
rclb
orl
jge
sbb
fwait
add
mov
icebp
jnp
xchg
iret
mov
jg
stos
add
sub
cmpsl
mov
enter
cmp
subl
jge
popa
sbb
xchg
pop
cltd
push
jp
aad
gs
fdivr
jle
hlt
ljmp
adc
ret
xor
in
pop
int
lods
mov
mov
std
jl
push
pop
lcall
xor
cmp
xchg
andl
cwtl
dec
and
mov
out
repz
inc
lods
inc
divl
daa
nop
rclb
lea
mov
and
pop
arpl
mov
rcl
shrl
sti
stc
insl
jne
dec
push
dec
mov
xchg
rorb
push
sahf
sub
pushl
dec
mov
out
sahf
adc
sub
imul
pop
xchg
jo
pop
popa
cs
ret
cli
dec
and
adc
adc
loope
lcall
loope
dec
fwait
movsb
rolb
sbb
sbb
dec
pushf
lret
adc
jnp
push
repnz
cmp
into
dec
popf
aaa
dec
add
or
jnp
jns
jge
adc
ljmp
sahf
jne
test
mov
cmp
jmp
pusha
jae
enter
or
adc
jae
ret
mov
clc
xor
je
mov
dec
cli
mov
enter
and
stc
push
mov
lea
push
psubd
cwtl
das
subb
fnstsw
sub
mov
outsl
loop
jge
out
mov
add
test
pushf
lea
lret
fnstsw
andl
mov
xor
add
inc
push
push
jle
jge
fs
adc
and
pushf
or
aaa
sbb
daa
jge
or
and
pop
aam
insl
pop
mov
lcall
xor
ret
sti
adc
ds
mov
aaa
pop
jne
shll
pop
fs
or
test
addr16
and
popf
jb
shlb
lods
lods
jg
mov
add
mov
mov
movsb
jle
repz
aad
orl
subb
push
jmp
inc
nop
xchg
xorl
icebp
shrl
sub
pop
out
adc
out
mov
int
cmp
into
sbb
movsb
cmp
dec
xchg
fisubrl
adc
mov
mov
adc
test
or
js
push
mov
cmpsb
sbb
outsl
adc
dec
sub
sbb
fdivp
cmpsl
jge
jno
cld
add
inc
lret
cmpsl
fwait
mov
aad
jns
push
outsl
and
pop
cld
mov
je
mov
je
push
mov
imul
mov
out
inc
add
outsb
popf
movsl
sub
cltd
into
push
mov
ljmp
cmp
std
adc
fcmovu
mov
int3
out
jg
dec
jne
dec
dec
push
jnp
xor
test
aad
pop
mov
dec
scas
les
out
adc
adc
jns
adc
repnz
imul
outsb
push
repz
sbb
scas
push
lahf
out
mov
in
cli
out
cld
lcall
cmc
jecxz
xchg
fisubs
test
jnp
cltd
sub
push
jl
cmp
mov
sub
or
out
ret
and
scas
cld
fnsave
in
push
bound
adc
mov
push
add
adc
popf
imul
es
jmp
dec
out
mov
xor
in
lods
dec
adc
stos
jg
xchg
pop
cmp
fyl2x
xorb
cld
jmp
lods
mov
cmp
xchg
dec
ret
sub
in
pusha
dec
dec
aas
push
inc
dec
jno
cwtl
test
xchg
inc
pop
inc
cmpsb
inc
out
and
js
nop
lret
cmp
imul
lods
imul
push
xor
xor
add
or
in
xor
fistpl
xchg
push
pop
loopne
rclb
ds
fs
jl
stos
or
sub
jmp
inc
das
idivl
inc
jbe
mov
leave
sbb
pop
fcmovne
roll
sar
push
aad
pusha
sub
addb
dec
rolb
filds
punpcklbw
cmp
orl
mov
movb
xor
mov
out
js
mov
cld
cmp
or
fwait
pop
pop
loope
and
movsl
jo
enter
cmp
jle
std
mov
pusha
repz
insl
push
inc
pop
imul
pop
add
inc
push
pop
out
cmc
cmp
fcompp
pop
xchg
js
cmp
shll
inc
scas
dec
inc
xchg
mov
ds
add
sti
mov
jecxz
jo
cmp
cli
xchg
mov
je
xchg
cmp
jecxz
js
inc
lret
dec
lock
add
rcrl
or
pop
mov
mov
jecxz
sbb
loopne
mov
push
push
pusha
mov
adc
add
and
insb
out
subl
loopne
add
inc
xchg
std
shrl
pop
jge,pn
sub
ret
xor
pop
pop
sub
mov
lock
hlt
dec
pop
sbb
inc
cmp
push
mov
cmp
lahf
xchg
test
nop
or
das
push
rorl
gs
negl
push
in
sbb
lock
sub
lret
push
mov
hlt
sub
mov
fidivl
or
mov
test
paddsb
int
mov
xchg
sub
lds
add
jle
pop
push
icebp
int
pop
insl
xchg
cs
cmpsb
push
fstps
jge
dec
push
fisubrs
lods
inc
imul
jmp
mov
push
shlb
cs
test
sahf
push
push
fdiv
xchg
std
neg
fcmovbe
out
add
mov
out
mov
call
inc
sbb
stos
pushf
stos
lret
inc
mov
bswap
gs
mov
sub
imul
jmp
js
dec
adc
lods
test
std
or
ret
dec
pop
pop
test
popf
dec
inc
sbb
mov
lea
roll
or
sahf
xlat
mov
dec
scas
in
les
mov
int3
repnz
loope
and
sbb
jb
adc
add
scas
inc
das
outsb
movb
pop
addl
test
es
repz
push
mov
sbb
sub
mov
jl
cmpsl
inc
sub
stos
nop
mov
outsl
push
push
cwtl
xchg
push
adc
push
xor
nop
cmpsb
cmp
cmp
cltd
fisubl
sub
cld
in
rorl
cmp
or
pushf
aaa
sub
cmpsl
sub
sbb
mov
ja
push
push
loopne
xor
adc
pop
xlat
xchg
ds
mov
sub
mov
cld
outsb
imull
rorb
fmuls
or
mov
cli
lods
popa
cli
mov
mov
pop
pop
in
mov
jle
scas
jmp
lcall
xchg
out
push
pop
repnz
or
push
mov
xchg
xor
adc
mov
mov
cmp
add
inc
push
pop
sbbb
repz
inc
push
push
xchg
mov
out
add
inc
mov
negb
insb
test
add
inc
xchg
cmp
test
dec
int
jle
cmpsl
cmp
sub
mov
icebp
mov
push
movsb
jl
cmp
or
pop
ret
push
and
test
xor
int3
cmp
mov
fcmovne
mov
add
xor
mov
out
icebp
pop
sbb
dec
adc
mov
stc
gs
cmp
sub
xchg
inc
inc
xchg
dec
rolb
arpl
jg
or
bound
les
push
xor
das
adc
test
jl
cli
iret
repnz
cmp
mov
rcr
adc
lret
mov
or
cwtl
cmp
call
jno
add
jbe
sbb
loopne
cmpsl
xlat
mov
and
iret
je
pusha
xchg
mov
pushf
je
mov
dec
sub
shlb
test
mov
mov
das
rorl
cmp
cmc
mov
cmp
jne
adc
mov
std
sti
pop
imul
fiadds
and
cmc
cmp
sub
mov
outsl
mov
cmp
cmpsb
adc
pop
push
xrelease
negl
jbe
mov
clc
sub
sbb
mov
dec
mov
loop
decb
xchg
push
mov
xchg
mov
xchg
pop
jp
repnz
stc
inc
lret
test
mov
loop
sarb
cld
mov
push
dec
or
push
inc
and
and
aam
gs
test
shll
orb
movsl
lock
adc
arpl
addr16
sub
inc
mov
shll
ret
cmp
nop
jle
adc
test
dec
out
push
xlat
pusha
lret
cld
in
rorl
imul
or
jns
std
and
mov
dec
lret
cwtl
dec
arpl
mov
xchg
jnp
push
mov
jl
and
push
mov
jbe
adc
mov
dec
inc
push
ret
ret
push
ja
mov
adc
repnz
jecxz
and
add
add
int3
and
imul
fucomi
cmpsb
lcall
gs
jmp
stos
lcall
xor
movsb
pop
jg
inc
cmp
ds
mov
push
pop
das
movsb
xor
std
xchg
stos
or
mov
aas
xor
enter
jno
mov
fiadds
fcomps
and
pinsrw
fldl
outsb
lahf
cmpb
ds
rcll
int
xor
pop
or
ret
in
push
xchg
push
in
js
dec
xor
insb
js
sub
addr16
call
repz
repnz
or
cmp
sub
jecxz
jge
scas
jecxz
aad
mov
imul
cwtl
adc
cmp
push
lcall
pushf
sbb
gs
cmp
inc
cmp
xchg
or
fnstsw
aaa
scas
cmpsb
icebp
loop
or
lret
mov
loope
lahf
in
dec
neg
mov
mov
or
cmpsb
jae
sbb
cmp
or
daa
cmpsb
fdivl
xchg
dec
test
dec
test
mov
ljmpw
add
adc
sahf
mov
jne
cmp
or
rorl
sub
cmp
nop
pop
in
ret
xlat
or
xor
rol
jne
lods
loope
loopne
mov
mov
pusha
es
subl
in
popf
jecxz
jmp
test
je
sbb
push
inc
and
sbb
xor
fs
loope
ret
add
sbb
sub
pusha
xchg
and
push
xchg
loope
push
cmpsl
or
dec
aad
repz
ret
mov
push
sbb
je
gs
shlb
rolb
mov
pop
pop
or
mov
loop
mov
loope
loopne
pop
sahf
movsl
add
iret
inc
int
iret
adc
dec
cs
adc
into
lock
pop
stos
lock
fisubl
mov
jecxz
or
sub
xchg
xchg
cmpsb
cmp
int
inc
int
jp
in
cmp
outsb
aam
pop
movsl
jbe
outsl
rcrl
xchg
fdivs
adcl
cli
mov
out
lods
fiadds
cmp
dec
cmp
pop
ja
jp
rcrb
js
jne
sub
sub
cmpsl
mov
scas
cs
inc
repnz
aam
negb
test
mov
adc
stos
push
popf
stos
add
inc
and
mov
mov
nop
push
adc
sbb
addr16
adc
mov
arpl
ds
aam
adc
idivl
dec
add
push
add
xchg
mov
scas
outsb
pop
add
sub
pop
in
mov
add
outsl
stos
jecxz
rcl
adc
pop
xchg
mov
ss
insb
out
sarb
add
enter
loop
test
gs
pop
dec
lcall
das
testb
test
ret
lods
xchg
aam
sti
push
mov
jp
inc
lret
inc
and
add
imul
scas
inc
push
movsb
xchg
cmpsb
idivb
xchg
cld
push
fsubrl
in
mov
addb
jg
mov
jp
aam
jecxz
imul
inc
xchg
insb
loop
push
cmp
mov
cli
mov
xchg
fbld
lret
mov
adc
and
dec
jo
unpcklps
xchg
push
push
jno
fmull
pop
ja
mov
frstor
mov
enter
jnp
inc
sbb
add
mov
lret
push
mov
jo
push
fisttps
inc
aad
mov
popa
inc
enter
mov
xor
testb
cld
int
aad
out
or
pop
lret
inc
rcrl
repz
push
push
pop
mov
into
mov
xchg
xchg
or
adc
adc
leave
push
xchg
stos
out
adc
scas
adc
cmp
rcrl
int
cwtl
fstl
mov
lahf
pop
iret
jo
fsubrl
shll
xor
fsubl
outsl
repnz
ljmp
xchg
sub
test
and
mov
das
cmpb
pop
not
lret
aas
punpckldq
call
imul
add
out
add
rep
dec
jbe
pushf
shr
or
push
cmp
xchg
push
in
pop
or
xchg
cltd
imul
sbb
andb
jmp
add
and
jecxz
sub
jae
fnstsw
push
movsl
pop
cld
lahf
adc
xchg
inc
sbb
and
jmp
inc
fmull
push
sti
loope
mov
xchg
push
sub
popa
out
pop
adc
add
dec
repnz
loop
and
push
add
adc
jae
pushf
sub
in
sub
add
jne
cmp
outsl
scas
int3
cs
icebp
add
scas
mov
and
or
add
lcall
lcall
call
andw
adcb
inc
push
out
jge
stc
pushf
mov
lds
fwait
or
shrb
sbb
popf
mov
sub
mov
push
mov
ds
pushf
and
jecxz
xchg
fimull
xor
aas
sub
jne
cli
lods
loope
daa
or
imul
je
subl
pop
fisttpll
xor
dec
rcr
adc
mov
jge
pop
mov
adc
sub
cmp
pop
iret
lret
fisubl
mov
jle
in
pushf
jmp
leave
jb
adc
jle
ljmp
lock
sahf
pop
testb
xchg
clc
ret
fldl
xor
or
push
or
add
cmc
add
sbb
push
ficoms
inc
stos
adc
addb
lods
adc
imul
into
inc
jb
sub
dec
subb
xor
aad
and
xchg
scas
mov
int3
mov
stc
insb
adc
add
xor
cmp
inc
ja
jae
popa
and
mov
imul
leave
xor
pop
push
in
sub
and
mov
add
push
movsb
aaa
lods
pop
mov
cmp
and
dec
dec
leave
iret
std
mov
lcall
or
rclb
dec
or
adc
jo
mov
jo
sub
cmp
push
cmp
xchg
daa
xor
jmp
mov
xor
rorb
popa
mov
imul
mov
mov
mov
push
mov
jo
push
xor
outsb
and
addr16
popf
leave
mov
jecxz
sbb
scas
pop
icebp
jae
imul
pop
fiadds
shlb
xor
mov
lret
xchg
adc
icebp
mov
rcrl
mov
dec
mov
movsb
and
mov
lods
sbb
xor
int
loopne
cltd
dec
lods
pop
js
in
fsubs
out
sub
adc
mov
inc
push
fbstp
pop
and
scas
cmp
xor
popa
sbbl
mov
ds
pop
sbb
aaa
out
aaa
xchg
ljmp
ds
ds
bnd
mov
aam
lods
add
inc
loop
xchg
sbb
and
push
rcll
std
ret
add
dec
pop
mov
or
push
inc
sahf
lret
mov
mov
leave
out
mov
jmp
jns
add
in
cs
mov
xor
mov
mov
call
in
xor
fidivrl
pop
les
mov
push
aaa
mov
xchg
cmp
add
enter
add
insl
mov
adc
fcmovnbe
xchg
ja
pop
inc
movsl
ljmp
out
in
inc
fbstp
jge
push
cmp
daa
xchg
adc
int
test
mov
cmpsl
negb
push
xchg
sub
jge
mov
lcall
sahf
cmp
mov
aam
sub
add
ficoml
cmp
push
push
enter
repnz
sbb
bound
pushf
in
sbb
fwait
push
xchg
xchg
sub
cmp
aaa
jb
push
stc
sti
mov
lret
inc
cmp
gs
jl
adc
frstpm(287
leavew
push
mov
enter
or
fmul
adc
sub
rclb
sbb
fisttpl
mov
xorl
leave
hlt
xchg
push
icebp
xchg
adc
aad
aas
pop
movl
adc
lds
cmpb
decl
cmp
gs
and
mov
arpl
xchg
xchg
cmp
nop
cmpl
ret
rorl
cmp
outsl
test
push
pusha
aad
repnz
subl
aas
and
lret
and
out
pop
push
push
mov
ficomps
je
push
stos
mov
pop
out
insl
adc
int3
out
adc
add
into
jo
lods
lods
mov
mov
xchg
sbb
mov
xor
sbb
cmpsb
add
or
sbb
pushf
dec
jbe
jo
pop
dec
movsb
fstpt
aam
mov
sbb
repnz
out
cld
dec
bound
enter
jne
stos
ret
sbb
or
mov
call
add
es
or
pop
lret
xor
jb
out
ja
cmp
fisubrl
cmp
sub
mov
push
mulps
out
sub
negl
int
hlt
or
sub
xchg
aaa
icebp
insb
rclb
inc
and
push
add
jmp
lcall
xchg
sbb
push
dec
adc
inc
icebp
jmp
xchg
jno
jl
shlb
fstl
daa
inc
mov
inc
ror
pop
les
test
xlat
sahf
xlat
lret
es
stos
call
mov
cwtl
mov
fists
pushw
adc
aam
lret
and
lret
mov
push
mov
push
or
popa
xor
and
in
mov
add
ret
and
xchg
outsl
ffree
inc
push
sarb
sbb
dec
xchg
jb
mov
ret
ja
inc
insb
mov
pop
sti
shll
push
fidivrl
inc
fstp
cmpsb
addr16
enter
mov
orl
mov
push
jae
loop
dec
xor
arpl
inc
adc
sbb
ja
push
push
ljmp
inc
dec
and
repz
sub
adc
sti
roll
push
inc
clc
je
pushf
call
mov
call
je
or
clc
nopl
mov
xchg
jle
test
sub
dec
aaa
std
xlat
or
lahf
add
call
sbb
popa
pop
loopne
mov
pop
das
shrb
popf
dec
pop
sbb
test
lock
pop
jnp
dec
pop
push
jns
jns
mov
imul
mov
repnz
pop
add
push
sub
out
bound
out
push
jb
cmp
popa
sub
pop
mov
clc
lahf
add
mov
or
test
sub
fisttpll
push
cmpsb
sub
shrl
push
ja
mov
call
aaa
mov
mov
cmp
addr16
pop
xchg
sub
and
pop
add
adc
sti
push
pop
ja
popf
pushl
ja
testb
ja
dec
aad
pop
mov
xor
je
mov
and
xchg
fisttpll
bound
push
mov
xorl
push
jne
push
pushl
mov
adc
or
xchg
outsb
test
or
ja
or
popa
repnz
test
scas
daa
out
out
xchg
lds
aaa
je
movsl
inc
jae
inc
cmp
add
stos
packuswb
mov
cmp
aaa
pop
jle
cwtl
xchg
out
ds
or
ss
dec
mov
xor
nop
shrb
xchg
fcoms
stos
out
push
xchg
jnp
xchg
xchg
les
sub
mov
ret
sub
fcompl
and
mov
fisubl
mov
test
loope
or
repnz
cmp
sub
jnp
icebp
jnp
adc
inc
hlt
test
das
xchg
xor
cs
sub
popa
aad
movsl
out
dec
inc
adcb
lcall
xor
and
mov
jb
push
jle
sub
leave
xlat
and
fcompl
enter
jmp
jg
out
sub
das
fisubl
stc
cmp
pop
daa
test
add
push
add
sbb
test
fdivrs
xor
fmull
repz
add
out
das
mov
imul
sbb
add
dec
ja
leave
subl
lods
mov
cs
sahf
xor
jmp
inc
jmp
or
jnp
add
sti
test
ror
or
mov
test
fisubrs
test
cmpsb
push
call
sahf
pop
sbbb
inc
inc
and
popa
and
hlt
pop
jmp
int
xchg
or
out
xor
in
add
enter
or
sub
xchg
dec
sub
fs
adc
mov
sub
shlb
push
lcall
in
imul
push
xchg
nop
pop
aas
aam
inc
push
orb
xchg
xchg
nop
and
mov
inc
or
into
inc
out
add
xor
jbe
fcmove
push
xchg
adc
push
wrmsr
pop
shlb
sarb
and
pop
sbb
shl
stos
xchg
mov
cmc
leave
mov
cmpsb
or
pop
or
inc
push
adcb
mov
out
dec
jg
or
pushf
leave
lahf
sarl
inc
adc
xchg
dec
pop
xor
mov
pop
jg
repz
push
inc
mov
inc
push
xor
mov
add
push
dec
jbe
dec
bound
mov
and
jmp
scas
out
sbb
jg
push
loope
mov
shrl
mov
std
xor
iret
sub
int
cltd
pop
push
aam
stos
ja
and
cmc
test
nop
cmp
cld
sub
sti
aam
jg
shrb
mov
fs
pop
cmp
leave
outsl
sub
inc
imul
inc
jne
repz
rclb
xchg
sbb
insl
push
fistl
pushf
popf
test
fstps
and
xchg
cld
aas
xor
xor
xchg
or
pop
sub
loope
dec
add
das
mov
popf
push
out
mov
popf
popa
xchg
sti
loop,pt
jge
pop
xchg
sub
sbb
mov
adc
dec
push
sub
xorb
mov
jg
daa
loope
jl
sbb
cmpsl
dec
jmp
cwtl
mov
xor
or
cmc
aas
movb
adc
pop
jge
adc
sub
sub
adc
int
movl
out
adc
ja
mov
and
mov
inc
sub
xchg
lds
sbb
mul
dec
movsb
fdivrp
ret
aam
mov
xor
or
mov
scas
jecxz
dec
xor
pushf
xchg
xchg
inc
or
test
xchg
clc
add
sub
cld
shrl
or
sub
gs
mov
fildl
mov
pop
adc
xchg
ds
xchg
and
jbe
sbb
sbb
addr16
mov
xchg
jae
shll
mov
pop
adc
lods
dec
fadd
xor
scas
int3
and
mov
movsb
loopne
mov
mov
popf
xor
aas
mov
test
push
push
sbb
ljmp
mov
lahf
pop
and
mov
jle
pop
bnd
xchg
mov
roll
nop
aad
xchg
mov
and
pop
mov
jl
outsl
and
adc
test
pushf
lret
push
xchg
in
insl
daa
mov
sbb
jg
roll
push
or
xor
cmp
or
pop
mov
scas
jmp
push
add
out
and
jb
or
cld
ficoml
fmulp
sbb
sbb
pop
push
jl
mov
inc
into
dec
xchg
sbb
push
or
mov
pop
mov
fidivl
jo
hlt
dec
out
and
sbb
xor
inc
and
je
sahf
sbb
push
jp
mov
hlt
inc
lcall
stc
pop
pop
sbb
repnz
xor
fnstcw
sub
pop
mov
and
jle
jge
mov
sub
sbb
add
cli
outsl
into
cmpb
pop
lods
push
push
push
inc
fs
xor
dec
iret
push
lahf
movsl
shlb
out
jp,pt
aad
lds
mov
mov
dec
ficomps
mov
ljmp
shll
fistpl
lods
jl
imul
cli
dec
in
out
or
daa
pop
enter
repnz
clc
sub
inc
ffreep
and
cmove
cmp
or
lahf
loope
xchg
ret
and
repz
inc
fwait
mov
cmp
jmp
add
lret
loope
leave
lods
int
mov
shl
push
xlat
cmc
mov
pop
xchg
jnp
push
cmpsb
out
arpl
inc
cmc
mov
enter
jno
addr16
sbb
mov
mov
and
popf
out
cmpb
shrb
out
shlb
insl
frstor
mov
rcrb
mov
or
mov
call
icebp
rorl
rclb
std
mov
mov
cmc
fdivs
xor
inc
out
cmpsl
mov
dec
sbb
je
sub
xor
inc
xor
jp
lahf
add
push
add
push
xor
sbb
repz
lock
xchg
xor
popa
cmp
pop
sub
xchg
xchg
mov
inc
xor
xchg
icebp
mov
cli
mov
cmp
rolb
int
outsl
add
cmp
xor
pop
xorb
ljmp
rorl
sub
test
add
movsb
mov
mov
mov
xor
jmp
jne
inc
or
cld
pop
cli
adc
jb
into
repz
addr16
adc
in
and
pop
jl
adc
push
dec
cmpsb
sub
or
xchg
xor
mov
std
std
out
das
and
into
xor
mov
jns
dec
movsl
push
sub
jp
push
andb
rcrb
mov
cmpsb
sub
enter
jp
idivb
cmp
pop
sbb
cmp
sub
or
jp
and
mov
pop
dec
push
outsl
enter
data16
js
out
aad
dec
ja
mov
lds
pop
imul
xchg
iret
loope
lret
and
mov
fldt
mov
mov
cmp
add
xor
cli
or
mov
lea
subb
jbe
nop
mov
push
dec
xchg
adc
dec
mov
add
out
xor
push
add
clc
or
in
push
pop
hlt
cltd
inc
jbe
push
or
xchg
insb
sub
test
decb
dec
and
xor
nop
cld
dec
adc
clc
mov
pusha
rcrl
fadds
mov
lcall
push
mov
lods
mov
inc
rclb
mov
pop
data16
movsb
mov
jl
and
movsl
sub
lods
xchg
xchg
scas
movsl
cmpsl
mov
or
lret
rcll
adc
leave
mov
cmpb
add
sub
mov
call
mov
adc
mov
push
daa
cmc
scas
pop
scas
and
daa
xchg
mov
sub
test
cmpsl
xor
inc
aam
aas
jbe
nop
inc
pop
add
movsl
aad
fs
add
jl
push
sti
jle
negl
mov
inc
test
gs
out
loop,pt
xchg
push
and
add
mov
dec
outsl
hlt
ss
xchg
dec
lahf
jnp
movsl
dec
sbb
cmpsb
pop
cmpsl
fistpll
push
pop
sti
rol
enter
add
mov
inc
clc
daa
stc
sar
mov
fisubs
pop
and
push
rcrl
xor
and
and
push
and
cmp
dec
mov
mov
sub
mov
mov
rclb
pop
sti
sahf
pop
adc
es
ret
test
in
add
out
xorb
scas
cmpsb
sahf
push
jle
into
push
sbb
pop
inc
adc
xor
jb
rcl
in
sbb
int
pusha
dec
into
sub
vmovntpd
pop
lret
addr16
mov
push
xor
mov
dec
xchg
mov
test
adc
jbe
mov
mov
js
shlb
xchg
and
enter
fsts
test
shll
jge
rolb
push
sbb
pop
insl
inc
mov
jae
jb
fistpl
mov
movsb
mov
inc
out
test
cmc
data16
jns
sub
pop
mov
lea
add
ja
mov
mov
inc
lods
adc
xor
test
lcall
aad
pop
sahf
xor
outsl
inc
ds
or
loopne
jecxz
inc
jmp
pop
rorl
jle
or
test
cmpsb
es
loopne
popl
jmp
sub
mov
bound
es
insl
xchg
fcomps
and
mov
out
addl
movsb
inc
mov
fs
xchg
loope
fwait
test
inc
push
arpl
ficompl
mov
div
add
pmaxub
stos
jp
push
addr16
pop
cli
in
adc
mov
pop
xchg
out
adc
add
icebp
xchg
xchg
popf
fwait
xor
inc
rcll
aaa
mov
mov
shlb
jnp
aam
jmp
push
test
adc
mov
das
mov
add
cmp
rorl
jne
push
clc
mov
loop
jnp
xor
jge
mov
xchg
dec
test
andl
std
fdivrp
call
cli
xor
scas
or
and
stos
stos
pop
cmp
mov
xchg
cwtl
mov
mov
xchg
mov
stc
or
les
pop
adc
mov
xchg
inc
adc
or
jo
jne
mov
adc
add
or
push
hlt
in
inc
sub
loope
or
mov
mov
push
or
dec
outsb
sbb
mov
mul
mov
out
pop
or
mov
ja
std
and
fs
and
aad
push
sub
or
mov
fs
xor
bound
adc
inc
inc
ret
sbb
sti
add
mov
push
xchg
sbb
dec
arpl
add
jno
movb
popf
xor
pop
in
addb
pop
push
movsb
aas
in
lds
dec
mov
pop
mov
sub
cwtl
xor
mov
jle
inc
push
push
mov
push
nop
das
imull
mov
sbb
mov
fcoms
push
outsb
sbb
cmpsb
or
mov
push
cmp
sbb
sbb
pushaw
and
movsl
xlat
stos
in
push
xor
mov
and
cld
xchg
push
push
fwait
mov
lcall
mov
in
fwait
mov
xor
pop
jo
test
in
aad
fdivrs
orb
pushf
add
aad
sub
mov
test
shll
loopne
jl
lcall
or
aam
push
mov
push
jp
inc
jno
mov
add
dec
ja
orb
sub
sbbl
lods
iret
sub
adc
orb
aam
or
xlat
adc
movsl
xchg
daa
push
mov
adc
dec
jbe
ss
sub
in
call
rcll
cmc
lock
in
push
adc
rcrl
cs
pop
pushf
shrb
inc
push
cld
clc
leave
jb
xor
stc
mov
inc
das
mov
mov
daa
js
incb
mov
xchg
jmp
or
xchg
sub
lahf
aad
flds
mov
outsl
je
xchg
mov
pusha
xchg
push
push
scas
push
pop
stc
idivb
out
aas
stos
add
and
pop
fsubs
pop
push
aad
and
lods
ja
jg
sbb
sbb
pop
and
mov
xor
insl
out
std
adc
daa
adc
sbb
movsb
ret
jecxz
jmp
mov
fwait
or
adc
xchg
aam
xchg
xchg
cli
sbb
pushf
pop
pop
fadd
sbb
lret
cld
xor
ds
stos
lcall
es
mov
push
pushf
test
push
in
inc
jecxz
outsb
cmp
rorl
clc
sbb
mov
sti
mov
testb
icebp
mov
mov
cmp
xchg
jge
mov
js
imul
inc
cmp
das
outsl
dec
ret
mov
push
pusha
movsb
loope
cmp
outsl
jp
scas
push
xchg
mov
xchg
std
les
jno
dec
jns
mov
icebp
test
jg
aas
lea
adc
pushf
pop
jno
comiss
movsl
movsb
aam
leave
add
rorl
push
jns
nop
in
pop
cmp
sbbb
in
ret
in
test
rcl
push
pop
cs
fnop
stc
enter
je
and
xchg
out
adc
mov
mov
push
stos
test
fistps
cmp
stos
inc
mov
imul
push
lds
add
inc
ficoml
bound
fldt
in
das
shlb
xchg
pop
enter
jge
bound
dec
aas
dec
xor
lods
aaa
test
sub
xchg
sarb
outsl
pushf
movb
mov
in
cs
loopne
mov
jle
lret
add
inc
je
and
std
bound
lods
mov
cld
jne
and
mov
imul
sub
adc
xchg
fildl
outsl
mov
aad
xor
mov
jbe
bndstx
pop
xchg
add
inc
jl
jne
push
out
filds
test
daa
xchg
pop
nop
sub
push
inc
mov
sub
outsl
dec
inc
dec
push
shlb
popf
push
ds
fadds
lea
lds
push
jae
clc
pop
loope
daa
aad
nop
cmc
sti
add
cltd
iret
push
test
jge
push
or
push
sub
icebp
mov
arpl
lock
stos
pop
int3
rcl
adc
mov
push
enter
pop
test
fistl
enter
pop
xor
cmp
mov
adc
cmc
mov
adc
xchg
sbb
xor
mov
or
jecxz
add
mov
push
inc
mov
mov
sub
les
or
add
or
pushf
xchg
dec
sub
mov
push
push
xchg
rcrb
hlt
std
cli
jno
scas
xchg
cmp
and
aas
jne
adc
stos
jo
jecxz
and
fildll
movsl
inc
into
adc
adc
sahf
andl
ds
aam
rcr
cwtl
lods
dec
add
push
sbb
fwait
pop
aad
inc
add
mov
fsubs
cwtl
enter
push
lods
dec
mov
inc
scas
dec
loopne
jp
ret
mov
push
call
add
mov
inc
and
movsb
cmp
add
cmpl
jnp
faddl
cmp
jmp
ljmp
push
in
stc
lahf
jl
les
push
lcall
push
sub
repnz
pusha
pop
cmpsl
mov
add
inc
adc
sti
idivl
ljmp
inc
out
xchg
xor
lds
push
out
push
push
movsb
scas
sbb
daa
adc
sub
xchg
aaa
lds
or
rcr
adc
push
sub
add
inc
leave
orl
mov
lock
mov
push
inc
ds
xor
fsubs
inc
addb
push
mov
mov
push
scas
adc
or
sbb
cmp
fadds
or
cmp
dec
xor
dec
in
lds
cmpsb
push
in
pop
int
sbb
aas
mov
aad
inc
out
jp
std
rorb
addr16
or
push
stos
daa
lods
push
fisubl
sub
mov
adc
fsubr
push
rcr
fwait
sub
dec
xor
mov
lea
xor
ss
mov
aad
lock
xlat
les
aaa
lret
out
sub
es
adc
aas
push
or
je
mov
push
aas
jle
orl
mov
ret
xor
inc
mov
ljmp
cltd
inc
pop
xlat
jne
cld
loop
sub
dec
xchg
or
cltd
addr16
cmp
aas
inc
pop
lea
into
push
fsub
push
sbb
scas
pop
pop
jg
loop
imul
sub
stc
cmp
jb
dec
dec
mov
push
inc
mov
pop
insb
mov
shlb
cmp
jp
adc
cmp
adc
mov
in
call
or
sub
cmpsb
cmp
testl
or
push
popf
inc
jns
test
int3
out
clc
ss
cmp
xor
loopne
fcompl
jbe
xchg
notl
nop
mov
out
push
mov
int3
mov
mov
ss
nop
adc
cltd
push
adc
popa
add
pushf
roll
fildl
mov
or
inc
popf
lods
xchg
sub
out
mov
and
xchg
mov
mov
cmc
ss
data16
push
idivl
cli
or
add
pop
xor
lods
loope
shl
cmc
shr
shll
movsb
enter
mov
inc
addr16
inc
mov
adc
lea
and
mov
fstl
cmp
cmp
jp
cmp
js
or
mov
jb
and
sbb
sarl
imul
lcall
push
xchg
xor
jno
ret
adc
pusha
and
mov
push
xchg
data16
cmp
push
jmp
fsubrp
dec
mov
popa
xchg
lcall
sub
or
pop
sbb
mov
lcall
lods
push
cmp
fisubrl
jae
inc
jno
loope
cltd
inc
mov
xor
lock
rclb
fimull
inc
mov
pushf
mov
add
inc
fcomip
pop
mov
nop
xor
mov
nop
mov
int3
leave
aam
nop
and
fistl
jne
cs
icebp
jmp
les
xor
insl
lret
or
cmpsl
mov
pop
xchg
push
sub
hlt
and
jle
push
mov
inc
mov
pop
inc
in
je
hlt
xor
cltd
hlt
out
inc
repnz
jg
ss
test
cmp
cltd
test
mov
sarb
lret
push
inc
sbb
push
mov
sbb
pop
mov
lcall
nop
rcrl
mov
aad
js
inc
push
xor
mov
dec
daa
cmp
in
bound
or
movsb
adc
out
stos
jae
inc
jns
lock
and
sbb
rcrl
popf
inc
shll
loop
cmpb
lahf
shll
jp
jl
jl
inc
or
out
push
inc
mov
imul
psllw
bound
dec
leave
fldl
xchg
mov
dec
loope
pushf
aas
mov
pop
in
xor
mov
sub
int
push
inc
push
push
pop
insb
mov
xchg
xchg
in
lds
int3
jecxz
das
int3
xchg
adc
mov
mov
mov
mov
addr16
pop
jl
enter
xor
mov
adc
stos
jne
fstps
pop
xor
incb
push
ss
lock
nop
push
mov
mov
pushf
add
jp
mov
mov
leave
and
fistl
dec
lock
mov
push
push
sbb
or
nop
add
test
and
jbe
or
pop
ljmp
test
xor
sub
cmp
aaa
shl
pop
clc
out
andl
mov
mov
mov
xor
or
cmpsl
lahf
xor
mov
jmp
mov
imul
gs
xor
lret
pop
pusha
sub
push
pop
xor
in
xor
push
test
mov
popf
scas
pushf
push
cmp
mov
addb
mov
push
test
mull
shrb
out
aad
scas
pop
mov
dec
das
lret
sbb
movsb
xor
cmp
mov
aaa
push
jno
repnz
push
out
mov
mov
pop
add
loopne
popf
mov
mov
daa
cltd
mov
pusha
test
inc
pop
push
ficoms
push
jmp
aad
or
dec
ret
and
outsb
fcomi
les
pop
pop
push
enter
xor
test
fidivrs
or
sbb
sub
or
mov
lret
int3
sbb
leave
int3
mov
jae
in
lcall
mov
lahf
out
cs
fucom
push
cmp
andl
dec
jnp
lods
cwtl
xchg
sub
addr16
adc
xchg
ja
xchg
outsl
push
stos
push
lret
mov
inc
aad
inc
inc
cwtl
or
out
incl
inc
jl
cs
hlt
sub
test
jp
repz
inc
cmp
mov
lea
pop
stos
adc
dec
mov
fstpl
idiv
psubusb
les
cmp
and
or
mov
mov
cltd
adc
lret
pop
int
mov
pushf
shrb
xchg
jb
std
dec
loope
mov
add
mov
mov
out
xor
dec
out
stos
jmp
xor
xchg
shll
xor
jp
mov
and
xchg
jl
test
dec
jo
sbb
dec
cmpsl
ret
xchg
test
jno
sub
sbb
into
shll
addl
jo
data16
lods
gs
punpcklwd
push
call
jo
xor
mov
outsb
adc
mov
jns
pop
dec
mov
add
rolb
das
mov
cli
add
mov
and
aam
jmp
add
pop
mov
push
adc
mov
pop
pushf
sbb
pushl
in
mov
in
sbb
cmp
mov
repz
mov
and
push
leave
jnp
jl
loopne
jle
jo
shrb
sub
insb
imul
imul
push
in
dec
pop
mov
sbb
out
jae
sbb
cmc
rorb
push
shlb
push
mov
inc
repz
pop
jp
call
jnp
dec
add
lret
dec
mov
lcall
sub
cmp
outsb
pop
std
and
sub
mov
ljmp
or
jo
sub
and
mov
cli
mov
cmp
jbe
mov
xor
xchg
xchg
mov
shrb
test
push
push
jl
push
adc
nop
imul
mov
push
call
pop
jnp
push
cltd
cmp
stos
shl
mov
xchg
pop
inc
dec
push
inc
hlt
fisubs
dec
sbb
mov
push
mov
popa
mulb
aaa
mov
out
dec
jae
cmp
sti
aam
pop
out
ret
into
aad
cli
insb
adc
cmpl
into
adc
xor
or
dec
xlat
pop
mov
repz
fs
adc
rclb
mov
jmp
jo
adc
pop
ss
ds
lods
roll
add
add
cwtl
jmp
push
cmp
imul
xchg
roll
fidivrs
pop
arpl
ds
cmp
mov
jmp
call
fbstp
ficoml
push
jl
fidivs
jp
jecxz
fcmovbe
idivl
fcmovnu
outsb
pop
rclb
mov
xchg
icebp
andl
xchg
in
pop
jnp
sbb
sar
cmp
xchg
adcl
pop
loopne
xchg
add
xchg
xchg
stos
outsl
scas
call
pop
sub
push
out
dec
sub
shrl
jg
inc
dec
sbb
inc
lods
cmpb
fsubs
stos
xchg
push
cmp
into
fnstsw
xlat
ljmp
das
incl
das
lods
leave
and
adc
fists
insb
push
aaa
pop
pop
jbe
push
test
xor
bound
xchg
scas
xchg
aam
or
jno
lret
leave
int3
enter
aas
add
and
dec
pop
es
mov
push
call
push
push
dec
aad
movsl
inc
sbb
mov
mov
scas
mov
ja
rcrl
call
sti
xchg
push
cld
mov
fsubrl
pop
jp
cmp
sbb
ret
adc
test
fidivrl
hlt
scas
cltd
inc
add
test
fimuls
add
loope
rolb
or
cs
adc
shll
test
mov
add
xchg
push
addr16
in
mov
dec
xchg
xlat
xchg
push
adc
stc
loope
aam
pop
mov
ja
into
out
nop
addr16
mov
cmpsb
outsl
cs
test
and
cmp
imul
inc
mov
adcb
mov
xlat
xor
lds
mov
gs
das
lea
loopne
fs
and
pop
xor
mov
push
push
or
jge
xorl
roll
inc
in
in
cmpsb
js
dec
fsubr
adc
les
jae
repz
mov
clc
xor
xchg
inc
mov
shrb
jle
outsb
aad
jnp
push
mov
movsb
mov
js
jp
mov
xchg
rorl
mov
rcl
mov
dec
nop
sub
in
imul
cltd
inc
mov
daa
into
pop
and
or
mov
inc
pop
nop
div
mov
icebp
xor
pusha
dec
aad
sub
ret
push
push
aaa
push
and
mov
mov
ror
mov
or
das
cmp
pop
fsubrl
repz
push
lahf
cmp
mov
mov
add
cmp
or
outsl
or
outsb
mov
mov
fnstenv
mov
movsl
mov
insb
enter
sbb
inc
adc
std
lea
pop
rclb
mov
mov
pop
call
adc
lea
test
mov
inc
loopne
fmuls
adc
ss
jae
xor
fs
test
scas
aad
jp
aam
cld
outsl
daa
pop
gs
cmc
cs
jge
xor
rep
fadds
and
mov
jo
mov
aas
lods
rolb
testl
mov
ds
jl
jb
insb
pop
adc
xchg
ds
dec
mov
popf
jno
fs
lret
sti
int3
mov
movsb
or
mov
sbb
mov
push
arpl
jns
andb
inc
mov
push
aad
dec
out
and
in
sbb
xchg
pop
mov
jp
pop
xchg
jp
xchg
bnd
jns
loop
in
addr16
icebp
jge
adc
push
mov
shll
in
push
bndldx
stos
addr16
insb
scas
aas
or
idivl
pop
inc
cmp
into
jae
mov
fcoml
stc
nop
mov
add
dec
mov
bound
jnp
pop
sbb
jb
call
arpl
push
divb
mov
pop
add
and
ljmp
stos
ret
mov
dec
jb
pop
add
push
mov
mov
std
xchg
pop
xor
add
pop
sbb
sbb
push
cli
bound
enter
push
fwait
or
fucomp
mov
in
lret
movsbl
inc
cltd
jb
fwait
xchg
xchg
in
add
dec
dec
loopne
mov
push
sub
mov
or
enter
fnstsw
pushf
in
stos
es
push
adc
cmp
mov
sub
aaa
cmp
hlt
jmp
and
jb
pop
xchg
jno
cmp
in
fwait
or
xchg
mov
fidivl
pslld
cmpsb
xor
int3
xchg
int3
sub
xchg
cmp
fs
fstps
std
mov
cwtl
dec
lret
push
push
or
nop
test
out
adcb
mov
xchg
fisttpll
test
scas
xor
jnp
sub
mov
aam
scas
xor
lods
jmp
add
pop
ret
bound
fnsave
pop
lods
sub
adc
jge
loope
cmp
rclb
pop
iret
sub
fldcw
inc
xchg
mov
xchg
lahf
outsl
scas
cmpb
movsl
xchg
pop
js
push
jle
das
and
xchg
sarl
mov
xchg
test
and
ret
into
push
jecxz
cmp
out
cmpsb
or
fisttpl
dec
std
lret
stos
push
iret
sbb
rolb
add
pop
pop
pop
cmp
in
jbe
outsl
add
mov
mov
je
rol
push
bound
and
mov
sarb
std
mov
loopne
ja
cmpsl
sub
add
fcomps
xor
jmp
std
mov
pop
rclb
sub
ja
mov
pop
shr
sbb
neg
cmp
aam
mov
xor
fstpt
or
scas
push
mov
inc
xchg
in
test
out
cmp
aaa
scas
and
stc
jecxz
repnz
shll
stc
xlat
jne
popf
in
movsb
xor
push
add
push
cmp
jp
adc
xorl
xor
pop
sarl
mov
and
aad
push
pop
je
fwait
add
or
je
stos
mov
aaa
lods
lock
mov
xor
lret
pop
js
dec
mov
add
xchg
inc
decb
loope
outsl
nop
mov
out
xor
mov
jo
jmp
xchg
jne
insb
cmp
jge
mov
in
std
mov
mov
xchg
stc
mov
sbb
cmpsb
xchg
dec
arpl
xchg
cltd
mov
cmp
int3
jae
js
test
pop
or
insl
sub
hlt
mov
test
insl
leave
std
nop
xchg
into
push
test
mov
pop
int
inc
jp
in
push
adc
sbb
and
sub
xchg
mov
xchg
adc
lock
inc
cld
sbb
jmp
data16
inc
fcoms
sbb
je
dec
mov
lret
sub
push
sti
cmp
or
repz
or
ja
or
mov
push
insl
cld
adc
push
xchg
inc
pop
lods
mov
out
test
pop
jp
dec
push
add
leave
cwtl
inc
repnz
js
popa
inc
lahf
adc
in
jg
lret
dec
add
insb
ljmp
ret
xchg
mov
lds
jecxz
dec
jp
mov
addr16
shll
ds
inc
xchg
pop
mov
mov
or
pop
dec
jb
shrl
jg
arpl
or
lahf
repnz
popf
cmp
stos
lcall
in
rcrb
push
sahf
sbb
push
jb
in
or
cmpsl
movsl
xor
xchg
hlt
jns
lock
aas
popa
lcall
and
dec
push
inc
add
cmp
dec
lods
test
inc
mov
loope
fcompl
pushf
arpl
xchg
inc
cmpsl
arpl
adc
dec
adc
jb
test
pop
jl
outsb
decb
sbb
adc
push
adc
orb
imul
xchg
testb
neg
rorb
push
cmpsl
lret
xchg
rcll
pop
pusha
jmp
cmc
cltd
iret
rcrb
mov
mov
andb
imul
jno
jae
cmp
icebp
mov
cmp
jp
add
inc
sub
add
xchg
dec
dec
movsl
aam
push
icebp
sbb
es
add
mov
dec
in
mov
inc
mov
mov
subl
in
push
xchg
js
std
rcrb
mov
jmp
pop
dec
or
out
xchg
cmp
pusha
mov
mov
push
jno
stos
adc
jl
or
push
adc
mov
xor
jae
into
jp
xor
jecxz
add
shrb
int
cwtl
fstl
xchg
xor
dec
fistpll
fistps
enter
adc
in
mov
adc
push
or
jmp
adc
sub
cmp
inc
pop
sarl
sub
test
sub
stos
xor
in
pop
test
nop
jb
cltd
mov
or
lret
ljmp
add
mov
insb
insl
push
fs
imul
sub
shr
out
and
sbb
out
stos
loopne
or
or
sahf
repz
sti
jo
fucomp
pop
pop
xlat
push
call
popf
xor
jmp
cmp
inc
dec
movsl
sbb
sbb
mov
sbb
mov
popa
lcall
dec
push
testb
mov
xchg
shrb
arpl
mov
mov
shll
jge
pop
push
mov
mov
mov
loope
cs
xchg
sbb
jl
popf
loop
xor
cmp
cs
ja
test
fcoms
inc
loop
push
into
lret
cmc
ja,pt
repnz
gs
xchg
dec
jnp
fbld
lods
xchg
movsl
pop
cmp
leave
jl
jecxz
or
and
nop
pop
das
test
pop
lcall
jae
dec
inc
lods
push
les
or
stos
mov
rclb
pop
mov
pop
in
mov
xchg
pop
xchg
iret
hlt
cld
jns
xor
rclb
mov
or
or
xchg
aad
dec
xor
inc
sub
xchg
add
daa
xchg
ljmp
push
cmp
movsb
xchg
mov
sahf
dec
fldt
sti
xchg
daa
call
popf
js
leave
test
in
enter
push
xchg
mov
jbe
push
xor
rorl
or
cmp
out
std
mov
aam
add
rorl
mov
iret
scas
fs
xor
lret
jge
jnp
sub
sub
lcall
cmp
sub
mov
jns
lcall
mov
mov
push
outsb
std
push
dec
add
jmp
push
mov
and
push
out
mov
cmp
pop
jle
adc
pop
xor
lret
mov
jae
negl
pop
cmp
popa
in
inc
sbb
in
or
je
mov
xchg
xlat
mov
xor
pop
nop
xlat
loope
push
push
lods
pop
leave
adc
cld
in
jmp
inc
imull
and
jne
mov
push
leave
xchg
movsb
push
fiaddl
xchg
pop
decb
and
lods
icebp
mov
bound
fistpll
into
jl
adc
ret
jl
sbbl
vmovhpd
push
cli
jmp
and
repz
loope
push
fldt
cli
cmpsb
jecxz
mov
aad
push
rcrb
adc
sbb
cmp
inc
or
add
push
and
sahf
insb
aaa
and
jns
add
gs
js
xor
xchg
sarb
lahf
test
movsl
and
daa
sbb
scas
scas
sti
xor
cs
into
pop
cmp
add
notw
mov
mov
dec
jne
add
mov
ljmp
mov
or
xchg
dec
movsb
pop
scas
arpl
mov
out
jae
cmpsl
mov
mov
mov
gs
xor
pushf
xchg
xchg
incb
es
jl
mov
jl
dec
loopne
and
ret
aad
lods
orl
mov
pop
cltd
dec
ds
sti
jno
pop
push
mov
ficoml
sbb
jae
mov
int
xor
xchg
cmp
repz
out
outsl
lcall
push
stc
rolb
gs
icebp
jnp
mov
inc
jmp
add
add
daa
cmp
or
cmp
push
xchg
mov
push
cmpsl
mov
scas
hlt
shl
fs
pop
loopne
cmp
mov
ljmp
nop
gs
inc
adc
and
and
xor
pusha
pop
jnp
imull
mov
outsb
mov
xor
sub
pop
test
int
push
cs
js
imul
loop
add
out
or
clc
repz
push
sbb
adc
mov
inc
mov
mov
xchg
das
leave
jp
mov
xor
xor
jge
sahf
push
cmp
inc
dec
repz
jnp
sbb
fsubr
xlat
lods
push
jmp
mov
in
outsb
mov
cmp
movsb
ljmp
dec
xor
shr
xchg
mov
xor
push
xlat
cmp
push
test
clc
mov
xor
fcompl
loope
out
cmp
mov
mov
pop
jne
lret
jecxz
jae
stos
sti
add
jl
cli
jmp
xor
adc
testb
test
jmp
out
rol
xchg
popf
insb
mov
mov
call
iret
adc
inc
mov
ljmp
xchg
sub
test
outsl
fisttps
pop
jb
daa
add
enter
add
nop
cmp
pop
xchg
mov
fcomip
insl
repz
out
std
arpl
sub
ss
mov
mov
adc
pop
xor
or
push
mov
scas
cmp
imul
jecxz
add
stc
test
rcl
lods
jmp
jbe
and
adc
xlat
outsl
add
iret
pop
mov
push
fs
pop
loope
cltd
dec
push
adc
popa
scas
lret
xor
fwait
and
ljmp
cmp
mov
test
test
and
stos
xlat
stos
stos
mov
cmpsl
lret
std
adc
shll
popf
and
xchg
mov
cmp
cmp
in
aam
ret
rep
sbb
sti
pop
push
fsubrs
sbb
cs
into
rorl
sti
mov
cmp
mov
xchg
cmpsb
lcall
mov
addr16
push
adc
push
in
push
sti
sbb
mov
insb
mov
aad
inc
pop
xor
or
fistpll
mulb
push
jg
in
setae
or
mov
mov
fdivr
enter
sub
popf
pop
or
dec
pop
rorb
inc
mov
xchg
and
xchg
xchg
jge
adc
in
lret
and
xor
shrl
jo
aad
jecxz
in
das
test
sub
or
jmp
fwait
dec
int3
fs
frstor
in
rorb
fsubs
add
push
cmp
sub
sbb
adc
jecxz
mov
and
mov
ja
fprem1
mov
jne
pusha
or
mov
xchg
mov
add
imul
testb
mov
repz
rcll
leave
dec
xor
aad
and
push
aad
push
inc
incb
mov
lret
addr16
out
aaa
sub
cltd
into
lret
ljmp
jae
insb
add
mov
mov
ljmp
inc
xor
fdivrs
cmp
call
out
fimull
adc
lcall
ja
addb
inc
jmp
mov
add
mov
add
xchg
sbb
nop
or
sbb
insb
mov
mov
fildll
dec
push
test
xor
xchg
lds
push
sbb
xor
add
sarb
aaa
add
cmp
out
in
push
pushf
andb
push
jnp
mov
mov
sbb
lret
add
dec
or
push
pop
dec
fmul
sti
aaa
mov
mov
push
mov
cmp
test
ret
mov
dec
push
inc
pop
insb
insl
inc
es
sti
and
sub
ret
jne
daa
sub
jae
sti
dec
addl
in
mov
mov
sbb
jp
jle
scas
dec
lahf
sbb
fistpl
cmp
pop
add
stc
ds
stos
lock
cmp
mov
jae
xchg
or
iret
fstl
dec
mov
mov
cs
mov
aaa
ds
aaa
push
fbld
fdivl
pusha
jbe
lret
add
loopne
fstps
mov
clc
out
dec
dec
mov
popf
outsl
mov
jno
cmpsl
mov
test
ret
test
leave
sbb
jnp
stos
int
scas
mov
xchg
cmp
arpl
mov
and
xor
arpl
insl
pop
notl
gs
mov
and
xchg
cmpsl
clc
or
in
push
sarl
jbe,pt
push
testb
es
inc
or
dec
xor
sti
insl
dec
arpl
fstps
add
xorl
fists
mov
inc
rolb
and
pop
es
jge
das
scas
adc
popl
ss
xor
jmp
pop
aas
pop
mov
je
nop
xor
jno
xor
cltd
out
mov
aam
sti
cld
mov
mov
daa
jno
inc
jb
pop
cmpl
iret
push
sub
lret
sbb
cmp
push
cwtl
mov
push
orb
mov
or
rorb
xor
mov
dec
scas
insl
dec
inc
dec
and
stos
pusha
sbb
divl
add
enter
mov
insl
sbb
rclb
push
push
pop
add
dec
test
ja
mov
stc
scas
mov
sub
push
scas
jne
xchg
dec
cmp
out
xchg
dec
inc
pop
jb
imul
lock
into
or
sarl
ljmp
xor
and
cs
lods
call
jo
fdiv
scas
mov
in
lds
fldenv
movsl
ds
call
and
pop
inc
nop
bound
mov
pushf
lret
jge
jecxz
xchg
mov
int3
fwait
jb
movsb
scas
mov
test
add
mov
rolb
nop
and
adc
sub
loopne
mov
add
mov
das
fwait
dec
pop
ljmp
arpl
in
mov
push
jb
sbb
lds
dec
dec
add
sub
sub
lret
jno
ret
push
fstpl
mov
mov
or
outsb
imul
lcall
insl
or
pop
inc
hlt
shrb
inc
jnp
xor
movsb
pop
jge
out
out
push
cmpsl
mov
pop
inc
push
shrl
popf
scas
lock
lcall
and
mov
dec
or
movsb
cmp
sahf
jmp
out
loopne
in
imul
loopne
push
pop
cwtl
cld
push
and
cld
push
mov
sbb
std
rcr
adc
movsl
inc
adc
dec
push
mov
into
loope
cmp
insl
mov
dec
push
cwtl
xchg
push
mov
sar
daa
xchg
outsl
push
mov
mov
jl
dec
pusha
pop
repnz
and
inc
push
sub
mov
inc
push
stos
xchg
or
mov
jmp
hlt
or
cmp
pop
or
stos
ljmp
or
mov
enter
bound
nop
int
ret
ljmp
inc
in
xchg
push
jne
orl
inc
cmpsb
daa
sti
js
clc
jae
cwtl
adc
xchg
dec
das
dec
ret
or
loopne
pop
sub
shlb
int3
xchg
call
das
cmpsl
jmp
push
ss
cltd
or
addr16
push
int
shll
xchg
iret
data16
mov
popf
fbld
xor
rcl
stos
in
pop
and
adc
out
iret
jno
jge
jne
out
jp
push
push
pop
or
in
xorl
inc
and
les
or
xchg
sub
addl
and
inc
mov
in
adc
mov
xor
pop
mov
arpl
xchg
sub
repz
repz
in
push
push
inc
push
jmp
xor
pop
loope
mov
cmp
cld
clc
mov
cmpsl
pop
aad
inc
jecxz
mov
negl
insl
or
sbb
add
and
jnp
out
cmp
jae
int3
movsb
push
mov
inc
insl
push
xchg
and
or
in
or
les
aad
lock
lahf
inc
xor
js
sub
mov
sbb
add
dec
inc
sub
fcomip
std
sbb
jmp
daa
nop
adc
js
jecxz
aad
mov
aam
ja
xor
or
fsubrs
cmpsb
insl
sub
in
jns
adcb
add
popw
adc
inc
lret
shl
filds
sbb
lret
xchg
dec
xchg
add
inc
test
outsb
mov
mov
nop
mov
sub
test
dec
mov
sub
repz
lock
push
roll
stos
imul
xchg
icebp
stc
test
push
pushf
inc
pushf
repnz
mov
push
mov
jp
push
lds
test
pop
jae
push
ja
imul
aaa
rcrb
pop
pop
add
add
mov
shrl
mov
or
insl
sbb
gs
test
sub
sub
std
adc
add
jecxz
jo
cmp
nop
loopne
lcall
add
es
add
enter
mov
jnp
push
imul
add
das
cwtl
xchg
bound
outsb
push
xchg
inc
pop
popa
dec
dec
fisttps
mov
aam
lods
sbb
pop
fwait
add
and
xor
or
data16
push
icebp
and
cltd
pop
out
sub
in
jne
in
xchg
jmp
or
push
mov
and
sub
push
cmp
lods
push
mov
lods
rolb
loop
mov
pop
loopne
or
mov
mov
sub
adc
cmpsl
jno
ja
cmp
mov
or
int
lds
cmc
xchg
pop
inc
inc
aaa
gs
je
popf
rcll
in
jne
pop
mull
js
sub
xchg
dec
fstps
int
outsb
fstpt
cwtl
mov
jno
adc
fldt
dec
lahf
sarb
fsubrp
push
mov
ret
test
xchg
lods
jp
push
pop
mov
mov
es
jne
out
mov
inc
adc
mov
xor
aaa
add
dec
loop
pop
mov
lret
xchg
lods
mov
nop
test
mov
mov
jecxz
lcall
push
sbb
and
add
xor
mov
ret
icebp
cltd
jmp
push
mov
loope
xor
data16
jge
popa
xchg
fs
cld
cmp
pop
push
scas
cs
cmpsb
enter
sahf
mov
shlb
std
outsb
leave
or
inc
scas
mov
xor
or
or
lock
loopne
inc
sahf
mov
pop
mov
aam
data16
std
push
and
mov
cmc
xchg
icebp
dec
mov
sbb
add
push
cltd
mov
shrl
mov
clc
mov
mov
dec
cli
out
movsb
jle
int
bound
pop
adc
pusha
in
fisttps
jp
cmp
xor
jno
mov
ret
test
fidivl
sti
mov
xchg
lods
cmc
loopne
add
outsb
testb
adc
movl
fstpl
jmp
mov
jg
mov
jmp
add
mov
bound
int3
adc
or
adc
leave
push
pop
jecxz
mov
addr16
hlt
jnp
nop
cwtl
rcrb
mov
xor
mov
out
mov
shll
idiv
fbstp
jae
xlat
xor
pop
pop
xor
shll
insl
imul
jmp
xor
lret
insb
adc
lods
outsl
add
mov
xor
hlt
inc
mov
push
stos
push
stc
clc
cmp
lods
cld
imul
fistps
cltd
ljmp
cld
cmpb
aas
out
inc
dec
loopne
nop
aam
xchg
test
pusha
xchg
xor
ret
adc
addl
stos
das
enter
or
and
pop
push
fnsave
shll
add
or
notb
fldenv
cmp
xor
shll
in
mov
fdiv
mov
dec
jno
push
ja
mov
icebp
les
bound
pusha
in
and
mov
xchg
xchg
xlat
enter
mov
lret
cs
mov
ljmp
and
dec
push
iret
adcb
inc
stc
pop
jp
pop
lcall
sar
xor
adc
std
sub
neg
sbb
xchg
lods
jp
test
mov
adc
inc
push
jbe
outsl
in
mov
xor
in
mov
dec
add
nop
mov
pusha
push
mov
dec
mov
add
sub
hlt
out
jge
mov
xchg
adc
cmpsl
jle
fxch
testb
cmp
shll
add
nop
lods
in
ja
xor
aas
pop
pop
mov
xchg
incb
cmp
in
jecxz
dec
push
sub
inc
inc
fs
xchg
fs
cmp
sbb
notb
mov
mov
inc
push
dec
test
or
sub
fimuls
xlat
es
add
mov
notb
jb
mov
call
int
fcmovu
repz
adc
jmp
push
sahf
out
adc
lock
mov
cwtl
mov
shlb
or
fwait
xchg
push
dec
repnz
jb
mov
aam
adc
test
or
ljmp
shll
ficoms
adc
outsb
jge
fneni(8087
xor
mov
push
sbb
insb
jle
and
xchg
and
adc
push
scas
arpl
inc
addb
out
rolb
ret
aam
adc
mov
imulb
mov
sbb
sub
jp
mov
fdivl
rcrl
testl
leave
jp
fs
push
into
jmp
out
fwait
ret
fcompl
pop
mov
jno
pop
insl
gs
mov
push
out
mov
sti
lret
lds
sub
inc
mov
push
loope
pop
pop
jecxz
outsb
aas
xchg
scas
jae
lods
leave
push
addr16
je
fadd
cmp
lea
adc
in
divb
mov
lret
cwtl
xchg
ret
test
cmp
stc
mov
xor
mov
cmp
popa
pop
xchg
mov
or
add
aas
outsl
lret
pushf
or
sub
dec
adc
fucom
inc
rcll
movl
les
jb
stc
pop
jmp
mov
pushf
push
fimull
dec
scas
xorl
pop
jmp
ja
sbb
jecxz
push
or
adcb
shl
fs
mov
sbbb
pop
dec
push
or
cmp
adc
adc
sti
mov
mov
mov
insl
jle
xchg
cmp
xchg
mov
and
movsb
lret
pusha
cmpsl
mov
loope
mov
pushf
jmp
enter
adc
fadds
jmp
fidivrs
cmp
inc
push
and
hlt
inc
inc
pop
push
jnp
dec
lcall
add
outsl
test
add
mov
jno
rcll
loop
adc
rcrb
cmp
mov
loop
int3
xor
xchg
fimuls
dec
mov
pop
stc
jmp
in
popa
les
ret
adcb
rolb
pop
leave
sub
sbb
int
test
mov
lea
add
stos
sbb
mov
pushf
xor
xchg
out
mov
mov
dec
mov
imul
adc
into
ja
cwtl
cs
jb
outsl
aad
orl
sbbl
lds
mov
jge
adc
into
rorl
adc
sarl
mov
mov
test
loope
aas
imul
mov
out
inc
inc
int3
mov
adc
call
pop
cmpsb
push
mov
cs
or
dec
jle
inc
jl
inc
push
nop
push
mov
adc
shlb
sar
xchg
gs
sahf
rcll
leave
mov
push
sbb
mov
add
popf
shlb
mov
sbb
loopne
mov
pop
mov
je
ret
rolb
push
dec
adc
daa
gs
pop
dec
icebp
ds
in
out
inc
test
xchg
adc
cld
in
jp
test
mov
dec
pop
ljmp
cwtl
jge
gs
mov
push
inc
ret
out
test
sub
les
insl
cmp
mov
in
xor
cmovno
repz
fdivrs
jns
adcl
bound
pop
add
xor
bound
jno
sbbb
mov
stc
lods
test
or
dec
nop
xchg
jecxz
js
xchg
cmp
cmp
mov
dec
insl
inc
inc
popf
aam
insl
cmp
pop
adc
in
stc
cli
add
int3
js
aas
add
lock
fldcw
cmpsl
dec
adc
dec
cs
lods
cmp
scas
or
mov
sub
ljmp
ss
rcr
sbb
gs
rorb
mov
test
or
popf
movsl
icebp
jnp
das
imul
and
add
mov
sbb
es
hlt
xor
pop
inc
into
pop
mov
and
xorb
inc
mov
dec
inc
inc
test
cwtl
mov
xor
xchg
mov
xor
pushf
popf
push
xchg
xchg
xchg
call
fadds
mov
imul
daa
jmp
popf
das
stc
js
mov
adc
add
xor
xchg
movsb
push
jle
rcr
and
inc
mov
and
sub
jecxz
add
inc
std
pop
mov
rorb
out
negl
enter
ficoms
dec
inc
call
in
cmp
inc
std
cmp
mov
scas
mov
lcall
xchg
das
rcll
dec
mov
lds
stos
ja
ror
ja
dec
iret
push
pushf
add
adcb
push
jno
int3
xchg
sub
sbb
decl
mov
inc
sub
push
cmp
repz
push
fdivs
or
mov
cli
dec
xchg
jnp
shrb
add
lahf
cmc
das
inc
pop
inc
or
imul
sarl
bound
cld
dec
fstl
rorb
pop
clc
in
dec
add
popa
movsl
lret
dec
ret
je
xchg
add
sub
cmc
popf
add
lock
mov
popa
rcrb
lcall
icebp
and
int
test
scas
xchg
movsl
jp
arpl
sti
fmul
or
mov
in
lods
xchg
lret
cmpsb
and
xchg
add
push
xor
insl
loopne
xlat
and
popf
add
push
pop
sbb
sbb
lcall
dec
imul
dec
fs
in
hlt
mov
fdivp
rorl
dec
mov
enter
adc
mov
movsl
mov
cs
ret
inc
rcrb
mov
inc
inc
pop
clc
in
stc
popa
ret
xchg
cmp
and
iret
rcl
sbb
std
push
or
cwtl
add
pop
sbbl
or
out
xor
loopne
ljmp
lcall
xor
cltd
or
xchg
lcall
loope
and
pop
idivl
test
aaa
hlt
imulb
outsl
fwait
or
or
test
pop
pop
dec
push
and
pop
loope
lret
sbb
shll
int3
or
aam
sub
dec
mov
mov
push
jb
out
xor
arpl
stos
test
pop
inc
inc
sbb
mov
mov
xchg
xchg
mov
dec
xor
xchg
push
cmp
add
dec
out
add
dec
imul
sbb
cltd
mov
popa
ret
xchg
mov
sahf
push
daa
stos
test
out
mov
mov
data16
cmp
shlb
sbb
pop
jnp
sub
dec
jbe
inc
and
aad
dec
inc
das
push
cmpsb
clc
jmp
inc
sub
mov
pop
xchg
movsb
sbbb
rol
sbb
jge
je
jnp
leave
cmp
arpl
jo
add
xchg
push
outsb
pusha
and
in
and
push
adc
pusha
push
in
std
cmc
aaa
push
scas
adc
push
adc
jle
scas
lahf
sahf
insl
es
mov
sub
push
sbb
mov
inc
mov
ret
inc
jno
jbe
in
add
imul
add
push
lods
xor
cwtl
jne
outsl
mov
ss
pusha
dec
jecxz
sbb
dec
add
sub
daa
lret
cmp
imul
les
test
inc
jp
nop
test
sbb
cmp
mov
cltd
dec
clc
negb
andb
add
inc
scas
fildl
mov
scas
xchg
stos
mov
iret
mov
jno
clc
rorb
stc
jo
lods
push
cwtl
nop
js
adc
push
cmp
cmp
push
sub
in
sbb
or
mov
pop
mov
xchg
adc
std
push
jp
mov
cmp
stos
bound
decl
push
xchg
push
dec
call
sbb
inc
jge
xchg
jbe
jp
pop
hlt
dec
mov
adc
out
fdivl
or
out
sbb
mov
xchg
pop
jae
sub
je
or
jp
es
push
cmp
cs
inc
or
or
imul
lret
shr
and
mov
adc
cmp
pop
mov
repz
or
jmp
jno
xchg
out
outsb
pushf
xchg
in
lahf
mov
mov
jbe
jmp
jnp
xor
jbe
mov
imul
scas
mov
in
into
push
push
dec
jmp
imul
pop
sbb
outsl
fistps
mov
and
jecxz
in
pop
mov
mov
mov
or
mov
mov
testl
push
test
dec
add
mov
jmp
dec
jno
das
rclb
fldt
xchg
xlat
pop
jmp
push
or
push
outsb
movsb
sti
jl
test
add
mov
push
cmp
pop
mov
push
fisubs
imul
fwait
aas
lcall
in
sbb
inc
xchg
lds
add
adc
cmp
daa
scas
xchg
inc
push
les
mov
add
out
cmp
add
mov
insb
ficompl
fcomps
jg
mov
pop
rorl
and
aaa
sub
mov
jnp
scas
pop
jnp
pop
adc
mov
rorl
ss
sub
rolb
movsl
cmp
sub
sub
push
cmp
pop
shll
xorb
dec
es
clc
adc
cld
adc
les
pushf
lret
or
sbb
hlt
or
adc
je
jb
add
cmp
out
insb
xchg
stos
repz
cmp
pop
mov
mov
mov
sub
in
sarl
cmp
xlat
or
cltd
arpl
shll
sbb
loop
roll
push
cmp
popf
sar
cmp
push
arpl
push
sarl
add
fld
mov
push
adc
mov
dec
out
and
or
pop
fiaddl
sbb
mov
int
popf
stc
pcmpgtw
cmc
enter
xchg
mov
dec
xchg
mov
sub
mov
gs
jge
js
call
mov
movl
sbb
loope
pushf
in
ds
jbe
mov
in
test
xchg
add
jmp
jno
mov
mov
jno
sub
xchg
addr16
das
cmpsb
inc
pop
mov
mov
ljmp
pop
inc
mov
cmpsl
push
out
int3
pusha
mov
xor
mov
sub
jb
aad
cmpsb
and
cmp
cltd
or
data16
nop
mov
pop
mov
mov
popl
movsl
daa
and
mov
nop
je
mov
int3
rorl
adc
push
addl
lret
and
adc
sbb
dec
mov
test
sbb
jns
outsl
xchg
imul
fisubrs
and
fnstsw
sub
inc
jnp
inc
subb
aam
movsl
cltd
into
cmp
imul
push
adc
popl
aas
icebp
xor
mov
je
mov
jo
aam
and
cmp
clc
aaa
mov
pop
les
and
sub
xchg
push
gs
fwait
inc
scas
icebp
mov
ja
cmp
popa
out
xchg
loopne
popa
jle
int
fdivs
adc
icebp
mov
mov
mov
mov
mov
cli
inc
xorl
int3
aad
fs
nop
lods
pop
dec
xorb
rcll
sub
adc
adc
or
xchg
rclb
push
sbb
insl
dec
inc
mov
outsb
in
or
mov
arpl
sbb
mov
dec
jmp
pop
mov
jl
and
push
in
inc
cmp
pop
mov
stc
icebp
fisttps
mov
jmp
sbb
and
aam
cmpsw
mov
sbb
ret
outsl
cmp
mov
fsubrl
cmp
pop
sub
sub
xchg
and
push
dec
es
jne
push
in
add
jmp
fsubrs
mov
lods
adc
mov
