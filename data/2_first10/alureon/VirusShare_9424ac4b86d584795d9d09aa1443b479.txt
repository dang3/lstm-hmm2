cmpsb
and
inc
adc
lods
adc
sbb
in
ja
cmp
jo
and
mov
xchg
insl
cmp
mov
inc
xor
or
sbb
pop
cmpsb
notl
jle
xorl
aad
mov
push
hlt
or
sub
out
add
push
shll
ja
jo
stc
popa
jl
insl
mov
cmp
loop
in
js
ja
cwtl
mov
xor
loopne
mov
push
add
adc
sub
push
xor
adcb
mov
mov
outsl
add
mov
mov
inc
lods
notl
scas
adc
jb
pop
notl
scas
adc
push
push
mov
and
or
into
jp
mov
push
adc
xchg
dec
pop
add
loopne
scas
pop
lea
mov
pop
dec
ja
stos
adc
ret
jbe
daa
sbbl
push
cmp
mov
push
repz
dec
stos
inc
dec
icebp
dec
iret
add
xor
dec
mov
inc
mov
hlt
jo
and
cmp
xor
scas
pop
nop
xor
lds
cmpsl
lds
xor
jg
stc
leave
and
stc
xor
nop
sarl
pop
rcrb
popf
pop
aaa
shrb
into
xchg
push
xchg
cmp
push
rorb
pop
mov
mov
sbbl
lds
aas
js
test
xchg
ljmp
imul
xchg
adc
testl
out
movsb
andb
pop
in
mull
ja
pop
mov
push
out
fwait
inc
clc
test
push
fdivrs
pop
test
mov
fidivs
inc
pop
dec
in
push
mov
xlat
mov
stos
pop
mov
add
cmp
dec
mov
pop
adc
cmpb
shlb
cmp
notb
sbb
pop
xor
adc
xchg
xchg
fnstsw
xchg
and
dec
push
repnz
mov
mov
mov
movb
add
xchg
xor
mov
adc
ret
push
test
pop
adc
push
nop
insl
add
pop
xchg
xchg
adc
xchg
cmpsb
loope
xchg
cmpsl
fcoms
cmp
pop
add
cmp
push
lret
fcom
mov
inc
mov
popa
dec
enter
xor
idivb
loope
dec
fndisi(8087
pop
adc
push
xor
into
daa
mov
mov
lahf
jns
pop
xchg
inc
lds
pop
adc
out
inc
pop
outsb
add
mov
scas
fxch
aas
dec
test
sbb
adc
fcoms
pop
adc
lret
push
popa
push
push
push
pop
sarl
sbb
push
cli
jns
mov
sti
push
in
int
popf
outsl
mov
imul
sub
or
jge
ret
repz
idivb
or
dec
xchg
insb
jmp
out
enter
fildll
les
mov
repz
cwtl
cmp
aas
jmp
test
or
pop
dec
inc
sbbl
inc
leave
or
js
or
loopne
jl
sbb
mov
enter
push
pop
cmpsl
jmp
cmpsb
pop
pop
jnp
sbbl
push
scas
lret
outsl
es
inc
int
loop
aam
mov
lcall
mov
cmp
mov
or
mov
in
or
cmc
xchg
in
rolb
imul
lret
push
fs
bnd
push
data16
aaa
lahf
sbb
and
jnp
loop
mov
cwtl
mov
or
out
popf
aaa
ja
std
imul
fstps
das
enter
ss
dec
sti
es
xor
mov
cltd
jp
repz
mov
out
cmc
in
test
sti
push
mov
jnp
popa
hlt
or
dec
lret
jnp
outsl
or
lret
or
enter
cli
lods
fnsave
or
ja
mov
jp
xor
sub
int
js
nop
js
stos
leave
jnp
lock
mov
cld
push
jo
fldcw
lret
inc
mov
mov
lret
lret
sbb
jnp
sub
mov
jb
imul
pop
fmul
cwtl
loop
jae
sbb
je
testl
ds
sub
sbb
lahf
repnz
pop
rorb
ss
xor
add
pop
idiv
push
cmp
add
or
pop
dec
inc
sbbl
negl
addr16
sbb
mov
not
add
int
add
push
and
int
clc
divl
dec
sub
test
daa
lret
sti
outsb
adc
mov
pop
ja
or
jge
psubq
divl
pop
arpl
mov
arpl
int3
ja
ja
or
lods
div
push
xor
ja
jne
iret
lea
jnp
ja
or
insl
jns
fimull
xchg
aaa
mov
inc
mov
int3
lahf
mov
in
jnp
clc
inc
adc
mov
insb
xor
lret
ja
fwait
add
es
loop
mov
rolb
sarb
sti
adc
negl
fmul
inc
push
cmp
lret
cmpsb
xchg
or
cmp
cli
push
call
adc
js
mov
and
mov
push
mov
sti
adc
clc
testb
mov
jp
lret
dec
sbb
sti
adc
clc
out
jmp
push
jge
dec
add
sti
mov
repnz
aam
loop
lret
ja
in
mov
psubq
sbb
std
xor
stc
adc
lahf
xchg
dec
inc
leave
and
cli
stc
xchg
adc
ja
test
cmp
jle
lds
mov
lret
dec
sti
hlt
mov
std
cltd
dec
sbb
pushf
sbb
add
mov
xchg
rep
negb
adc
lahf
dec
adcb
aaa
cli
fidivs
jle
jnp
xchg
pop
js
hlt
dec
dec
jne
clc
sbb
int3
das
bsf
cmpsl
pushf
imul
ljmp
adcb
aaa
and
ss
das
jns
ja
dec
sti
adc
clc
clc
or
cli
dec
nop
js
mov
in
clc
cld
sti
xchg
mov
cmp
sti
xchg
clc
clc
jnp
jne
mov
sti
pop
dec
jmp
dec
std
add
push
popa
mov
pop
adc
enter
cmp
dec
pop
es
xchg
idiv
jnp
jne
test
imul
in
je
test
cmp
jge
enter
std
dec
dec
std
and
js
cld
addl
mov
aaa
mov
cs
mov
pop
jge
mov
dec
cmp
jnp
mov
jmp
sti
hlt
je
mov
imul
lods
xor
mov
dec
dec
mov
push
mov
jle
incb
jnp
xchg
jmp
int3
jl
dec
xchg
negb
dec
cmp
add
insl
sbb
ja
or
pop
jp
dec
test
mov
cltd
add
mov
imul
or
scas
shl
jecxz
aad
in
fwait
scas
out
push
sub
cmp
sar
ror
enter
pop
imul
cmp
sub
cmp
test
push
push
cmpsl
sub
cli
lret
ds
fwait
cltd
sbb
cmp
inc
pop
test
pop
fs
lea
and
lahf
mov
or
jmp
aad
ret
jae
mov
or
mov
incl
sbb
fcmovnb
inc
int3
rcr
enter
xchg
icebp
mov
js
push
cmp
push
jge
imul
xchg
iret
cmp
mov
lds
add
cli
sahf
jnp
std
dec
adc
fcmovnu
stos
lock
mov
inc
push
mov
dec
pushf
stc
fists
fistpl
dec
add
jmp
mov
fwait
lea
mov
dec
cmc
pop
int
lock
mov
jnp
sbb
push
call
jecxz
pop
pop
sbb
jg
mov
std
jecxz
dec
sub
sbb
das
xchg
jp
idivb
mov
int
dec
dec
loopne
lods
or
repz
pop
sbb
cmp
repz
and
adc
sbb
shrl
jmp
mov
xchg
stc
insb
jno
fdivr
std
loope
adc
into
loop
pusha
dec
sub
test
imul
addr16
sbbb
dec
adc
shrl
sbb
and
xchg
test
cwtl
pushf
mov
ljmp
cmp
jb
sbb
popf
out
and
ret
fwait
loope
iret
scas
popl
xchg
imulb
outsb
mov
dec
xchg
dec
js
add
sbb
andb
cmp
pop
aam
sbb
cli
js
fwait
test
dec
mov
shrb
inc
rolb
cmp
leave
xchg
sbb
mov
pop
fucomip
lahf
lea
or
fwait
xchg
pop
js
jae
cmc
ret
mov
mov
lock
mov
hlt
ficomps
jnp
inc
add
sti
out
clc
movsb
lods
xchg
repz
adc
sub
fsubr
lods
or
test
stos
addr16
mov
pop
pop
lret
ljmp
sbb
imul
fwait
sub
jbe
fyl2xp1
push
insl
jle
cli
std
clc
add
lret
xchg
jmp
pop
dec
lret
pop
xchg
inc
in
into
sbb
mov
mov
dec
lods
mov
inc
mov
mov
dec
or
popa
repz
test
lcall
push
sub
jo
xor
int3
push
icebp
fisttpll
dec
outsb
cli
clc
ret
lea
mov
sub
repnz
sbb
test
dec
punpckhbw
push
push
or
arpl
xchg
scas
push
adc
cld
mov
sbb
inc
adc
fwait
shl
clc
dec
test
or
in
jns
popa
add
das
cmp
test
out
adc
pop
mov
push
inc
int3
repnz
pop
test
dec
jne
les
jge
jl
xor
inc
fucomp
dec
fcmovnbe
lds
lods
call
push
lret
lds
xchg
mov
mov
orb
adc
ljmp
cs
outsl
iret
int
sub
jmp
es
mov
and
mov
nop
enter
lock
cltd
mov
hlt
mov
or
fs
adcl
jno
adc
dec
or
stos
inc
lods
cmpsl
or
js
and
push
lahf
insl
cwtl
cld
movsl
dec
mov
adc
or
loopne
xchg
outsl
fmuls
js
das
push
mov
cld
lods
ljmp
mov
outsl
lock
adc
rcl
int3
outsl
dec
cmp
outsl
sbb
lahf
inc
push
out
dec
mov
leave
cmp
and
loope
lret
push
xor
jmp
shrb
sbb
int3
mov
xchg
in
in
xor
lahf
icebp
pop
iret
cltd
push
or
adc
push
jo
mov
fisttpll
aaa
loop
add
lods
cs
rolb
enter
inc
inc
cmpsl
mov
mov
dec
inc
adc
rolb
rcl
sub
inc
adc
lods
xchg
or
cmp
ss
aaa
js
dec
test
outsb
dec
nop
xor
sti
into
jae
and
mov
aas
pop
out
fstl
imul
setne
dec
lock
pop
xchg
and
push
dec
dec
lret
add
ret
test
orb
mov
pop
aad
sbb
lret
jp
sahf
or
sarl
add
and
dec
add
mov
aaa
or
sub
pop
test
call
andl
xchg
or
or
sbb
mov
mov
sti
sarl
roll
repnz
subl
and
fadds
lock
daa
mov
mov
ja
cmp
push
ret
stos
lret
ja
test
or
test
flds
add
adcb
stc
sbb
sub
iret
xchg
clc
mov
adc
xchg
fldpi
lahf
dec
xchg
lds
les
dec
insl
cmc
mov
aas
int3
jb
into
mov
dec
inc
lea
dec
in
cld
xchg
or
stos
pop
fiadds
sbb
lds
sub
inc
notl
fstps
pop
stos
inc
test
mov
push
popf
push
mov
pop
sub
add
into
or
in
call
inc
imul
stos
inc
pop
ss
cmp
and
mov
or
pushf
jno
xchg
lods
dec
je
mov
ss
push
stos
dec
ja
das
mov
stos
push
or
mov
decl
add
cltd
ss
jg
pop
add
lcall
inc
lock
mov
pop
mov
int
or
outsl
lret
hlt
or
or
xchg
or
jns
lret
mov
movsb
pushf
out
push
push
stos
mov
in
enter
mov
lods
add
insl
pushf
arpl
dec
xchg
cmp
add
out
or
lret
mov
or
lea
push
shr
mov
stc
je
pop
pop
ror
iret
xchg
pusha
out
in
enter
or
sbb
pop
shl
arpl
pop
dec
cmp
enter
sbb
ds
insl
mov
adc
in
add
je
or
out
rolb
dec
stos
and
mov
push
or
or
jb
in
dec
or
jp
push
leave
into
or
mov
movsl
cmp
sbb
aas
pop
cmp
bound
pop
xchg
pop
dec
fwait
idiv
enter
cmp
push
scas
pop
dec
idiv
lret
push
mov
in
rcrb
fidivl
outsb
dec
fwait
cwtl
shll
movsb
mov
stos
xchg
mov
pop
filds
inc
cmp
mov
and
inc
test
mov
repz
push
dec
repz
pop
mov
lea
pop
test
lahf
xor
aaa
rolb
ss
mov
out
sbb
mov
enter
mov
cltd
mov
mov
inc
lods
mov
mov
mov
fcompl
or
jbe
clc
cli
cmpsl
out
cwtl
or
mov
mov
or
cli
stos
dec
iret
jo
sub
ja
addl
cmp
cmpsb
or
xchg
mov
lds
adc
and
jecxz
cld
loop
cmp
bound
lods
inc
iret
push
or
test
int
aaa
xor
adc
out
or
aaa
daa
test
xchg
fmul
clc
pop
sti
mov
mov
xor
mov
cli
repz
fmull
mov
push
xchg
into
push
pop
call
clc
mov
dec
jmp
inc
int3
jecxz
clc
cmpsb
add
pop
fnstenv
jno
adc
jne
xchg
loope
mov
pushf
inc
dec
repnz
frstor
out
insb
or
mov
into
cld
add
outsl
pop
jle
or
adc
xor
daa
ja
int3
sub
cmp
mov
xor
mul
cld
sub
mov
inc
sti
xor
pop
lock
rol
nop
sbb
push
dec
push
rsqrtps
loopne
dec
dec
sarb
push
mov
add
mov
mov
mov
mov
xlat
mov
fsin
pop
adc
mov
push
ret
push
add
push
inc
push
rclb
adc
xor
push
adc
int
orl
aas
mov
mov
outsl
aas
les
mov
ret
and
pop
ss
xchg
sbb
jecxz
in
mov
push
add
rol
mov
pop
arpl
lea
mov
into
inc
add
cwtl
pop
push
cs
cmp
loop
arpl
fwait
mov
cmpsl
jnp
or
popa
mov
std
nop
jp
pop
pop
notl
dec
je
add
loopne
or
or
mov
ss
sub
pop
enter
iret
mov
lret
cmpl
or
lcall
pushf
lock
sarl
push
rorl
lcall
adc
dec
iret
jae
add
xchg
xor
pop
mov
mov
sub
jo
pop
rorb
mov
in
jb
cmp
sub
sub
push
ret
aaa
xor
iret
lea
cmp
mov
or
mov
and
call
cmp
mov
fwait
mov
lds
sub
daa
pop
push
test
jb
stos
fcoms
push
inc
lea
clc
leave
out
in
and
dec
cmp
nop
fistpll
inc
cmp
lret
leave
dec
jnp
xchg
dec
dec
or
sbb
and
shrl
imul
pavgb
dec
int
mov
mov
js
pop
jns
jae
outsb
mov
lock
jecxz
sub
jecxz
std
inc
cmpb
pop
mov
xchg
imul
or
aas
repnz
ret
sbb
mov
outsb
fsubs
addb
roll
or
mov
fdivrl
call
rol
shr
sub
stc
mov
shlb
and
int
cmp
cmp
cmp
inc
sub
sbb
dec
lcall
decl
cmp
movsb
adc
jo
inc
adc
mov
xor
push
xchg
and
mov
mov
and
insb
jp
adc
inc
mov
inc
push
arpl
in
pop
fisubrs
ljmp
cld
sbb
push
loopne
lea
jb
add
mov
and
add
cmp
or
jb
pusha
pop
xchg
and
out
xor
or
xchg
leave
fiadds
push
xor
outsl
negl
mov
sub
into
mov
es
and
into
iret
nop
gs
or
ja
ds
jnp
jnp
jmp
mov
inc
push
cmp
jo
adc
leave
in
inc
test
dec
repnz
movsb
push
gs
lret
scas
jo
imul
mov
stos
lds
pop
fsubrs
ret
out
inc
addr16
cmpsl
fistpll
loop
loopne
dec
push
fdivl
mov
push
bnd
movsb
cs
dec
push
mov
xchg
negb
mov
out
hlt
inc
out
push
mov
pushf
sbb
stos
dec
inc
ret
push
daa
jmp
inc
lds
andl
mov
pop
xchg
jmp
sub
movsl
lret
adc
xor
add
jo
inc
sub
arpl
mov
lock
mov
ja
jnp
add
mov
dec
aas
in
clc
mov
jo
mov
mov
xchg
mov
pop
sti
sub
sub
cmp
xchg
outsl
fwait
mov
iret
adc
xchg
in
pop
std
ds
mov
add
test
outsb
rcll
loop
pop
jl
mul
push
mov
and
fwait
cmpsl
out
inc
adc
dec
xor
addr16
insl
sub
pop
mov
and
shlb
fsts
out
push
jae
xchg
sbb
dec
aad
mov
dec
lds
es
mov
inc
jmp
mov
adc
stc
xchg
testl
lods
outsb
adc
hlt
jbe
push
push
test
dec
scas
xchg
or
int3
and
lods
scas
fcmovnb
mov
jno
dec
mov
mov
cmp
es
popa
add
imul
sbbb
mov
aaa
sub
call
fnstcw
sub
or
jae
in
jno
leave
lds
rcrl
sub
lret
mov
outsl
enter
je
pop
leave
cwtl
les
cld
mov
fldl
push
xchg
aaa
sbb
stos
inc
mov
rclb
dec
in
repz
lds
dec
sti
mov
xchg
mov
outsl
sbb
addb
xchg
fldt
mov
inc
nop
adc
mov
adc
jb
dec
cmpl
call
loop
js
clc
call
fimuls
pop
sbb
cwtl
stos
cmpl
jl
or
xor
add
test
adc
std
dec
fimull
popf
jnp
in
jle
or
in
iret
xor
mov
les
inc
sarb
and
outsb
add
mov
test
jno
shrb
iret
sti
push
inc
pop
mov
fadds
mov
dec
and
jno
sahf
adc
scas
cli
fs
add
mov
fistpl
gs
out
int3
cmp
lret
pop
int3
jo
inc
mov
cmpsl
hlt
xchg
enter
iret
sbb
imul
jne
push
jmp
mov
lcall
cmp
sub
js
imul
in
decb
imul
mov
lods
fs
iret
outsl
pop
into
push
into
sbbb
jmp
mov
sbbb
jle
stos
stos
icebp
rolb
xchg
aaa
fsub
ja
mov
and
popf
xor
andb
sub
push
push
mov
dec
pop
sub
sbb
sbb
jns
push
xchg
clc
jge
xchg
or
cmpsb
or
inc
pop
nop
add
aas
call
arpl
test
sbb
insl
xor
jnp
xorb
xor
adc
pop
push
test
mov
push
inc
inc
icebp
fcmovne
mov
mov
call
leave
icebp
fcompl
loopne
shlb
nop
push
xor
jo
sub
je
xchg
cld
sti
jle
push
iret
push
mov
cmp
push
cmp
loop
lret
sub
cmp
iret
push
imul
imul
xchg
ret
insb
repz
mov
stos
or
and
cmp
and
popl
jl
cmpsl
dec
inc
inc
subl
xchg
jmp
add
xor
jne
lods
jno
mov
mov
enter
outsl
or
sub
and
jne
outsl
je
xchg
mov
imul
je
nop
ja
stos
cli
push
ret
inc
aaa
test
or
push
test
lods
push
fdivp
dec
add
dec
pushf
jb
fs
pop
lret
or
loop
xchg
xor
jg
out
mov
ret
nop
sub
inc
cwtl
jnp
dec
mov
test
cmp
mov
push
jbe
and
lret
or
pusha
packuswb
mov
xchg
adc
std
xchg
enter
jo
ret
and
outsl
clc
jecxz
popa
add
out
add
neg
mov
shll
orb
into
push
sarl
rcr
or
jp
mov
adc
lret
pusha
xchg
jo
jae
push
jae
xchg
inc
inc
cmpb
pop
xlat
outsb
jecxz
ss
insl
icebp
mov
pop
lods
mov
cmp
mov
mov
xor
fldl
into
fneni(8087
ja
mov
fistpll
lcall
cwtl
outsb
cli
addb
cmpsl
je
mov
xchg
xor
xor
int
sbb
mov
jns
gs
add
mov
ljmp
lods
lret
xor
aaa
lret
gs
add
cmp
mov
icebp
cmpsb
test
mov
gs
shll
cltd
push
test
sahf
int
xchg
mov
and
lods
mov
js
dec
xchg
or
mov
jno
and
bound
mov
xor
js
cmp
sbb
mov
mov
shll
dec
stc
mov
movd
push
xchg
mov
in
mov
pop
ja
mov
inc
aaa
jns
jg
push
lock
int3
sti
mov
jmp
lock
and
jbe
or
rcll
inc
inc
aad
dec
lret
sub
divl
outsb
push
jge
fwait
sub
movb
mov
adc
movsl
sti
jno
fwait
and
sbb
das
imul
lock
in
push
cmp
push
mov
pop
xor
add
aad
leave
mov
out
in
lahf
jge
mov
mov
in
adc
cmp
inc
jecxz
sub
and
mov
out
int3
pop
jne
int
push
pop
mov
lds
or
sbb
popf
jbe
mov
lret
and
sub
insl
and
pop
addr16
sub
pushf
sbb
mov
movl
imul
popf
cmp
movsb
test
into
aad
aaa
cmpsl
insb
les
jns
inc
repz
xchg
mov
fcmovne
hlt
js
or
and
push
fwait
pop
data16
daa
std
psrlq
sbb
jno
cmpsb
sbb
lea
pusha
and
jmp
and
in
sbb
out
jne
xor
data16
mov
dec
mov
jnp
pushf
mov
mov
sbb
dec
rcrb
jp
xchg
sub
ret
mov
pop
out
rorb
movb
push
sbb
into
mov
jmp
adc
out
add
push
pusha
cmp
push
adc
inc
push
xor
stos
subl
jbe
or
jg
jge,pt
mull
inc
iret
sub
clc
orb
jge
xor
enter
cld
mov
or
shll
sti
mov
clc
negl
jnp
paddsw
cmp
fimuls
mov
jns
mov
lcall
fcomps
daa
or
aas
loop
pop
mov
mov
popf
lret
out
dec
jl
sbb
cmpsb
out
fistpl
push
les
shll
jne
pop
ret
jmp
mov
cmpsb
lret
or
movsl
shl
jg
or
jb
inc
cmp
dec
hlt
cwtl
rcl
xchg
cwtl
pop
sub
ret
sbb
add
je
lods
mov
push
mov
nop
inc
test
in
stos
mov
mov
mov
scas
sbbb
lret
sbb
add
and
fs
jle
jne
fldl
xchg
sbb
mov
sbb
xor
fdivrs
cmpsb
mov
imul
dec
sub
das
or
pop
add
cld
in
cmpb
cltd
sub
in
cmp
dec
sub
test
aas
jae
mov
adcl
pop
add
push
lret
fbld
cli
pavgw
cld
shrl
push
sub
out
repnz
xchg
sub
jbe
test
mov
ss
cli
jg
je
hlt
jmp
cmp
inc
mov
jmp
inc
pause
jns
adc
mov
fnstcw
mov
jne
lret
addl
ja
mov
dec
stos
mov
xor
test
test
out
iret
mov
int3
xlat
orb
mov
sub
push
add
jne
mov
xor
or
or
jb
mov
sub
loope
jo
test
bound
pop
adc
cs
aad
je
dec
shlb
test
test
out
sbb
jmp
rorb
mov
mov
out
add
insb
aad
push
mov
gs
mov
pand
pop
mov
rcr
jne
push
mov
push
dec
inc
and
ror
test
dec
shll
inc
fsubrl
popa
pop
inc
lret
push
fisttpll
inc
popf
add
repz
out
cs
insl
sub
mov
ret
fdivrl
xor
mov
in
mov
and
mov
xchg
lods
xchg
jle
je
sub
adc
pop
enter
lods
jnp
lret
rcr
push
into
nop
pushf
pop
test
push
add
mov
mov
out
adc
sti
xchg
xor
je
jp
repz
fwait
int
mov
fdiv
dec
inc
cmp
mov
lods
sti
enter
xor
lret
sti
cmp
std
test
les
leave
jae
popa
xchg
aam
icebp
movsb
orl
aad
loopne
sub
scas
jge
int3
mov
mov
mov
mulb
lret
cmp
xor
pop
adc
or
inc
test
pop
js
lods
lea
rol
sub
dec
add
rcrb
add
lret
shll
inc
popa
push
and
push
cmc
scas
dec
jl
lods
rol
imul
ret
xlat
lods
mov
in
movl
dec
sbb
sbb
push
fsubl
add
push
jl
iret
lret
pop
sub
mov
ss
add
cli
or
ror
sbb
mov
pop
test
out
js
cmp
jg
or
or
pop
xchg
lds
pop
stos
subps
mov
inc
xor
dec
inc
je
enter
mov
xchg
mov
es
sahf
xchg
lahf
sbb
sbb
out
aad
shrl
stc
sub
cwtl
lds
mov
aam
aad
aad
sub
jp
adc
jae
pop
out
dec
pop
sub
fwait
cmpsb
add
and
jno
inc
mov
cld
ret
test
mov
insb
jnp
cmpsl
aad
out
addb
test
arpl
sti
imul
bound
jl
mov
push
pop
dec
jbe
cmp
mov
sbb
ds
jns
and
fdivl
add
test
aad
sub
lahf
dec
jns
cmp
test
aad
xor
push
mov
inc
ret
pop
out
int3
sti
loopne
mov
cmp
xchg
add
inc
xchg
iret
lds
ljmp
daa
in
sub
xor
leave
xor
stos
data16
sbb
lea
lods
outsl
sarl
xchg
xchg
pop
jecxz
test
mov
out
rcrb
mov
xchg
mov
test
test
pushf
fmuls
movsb
jle
push
pusha
hlt
jb
loopne
add
add
cmp
and
in
es
add
shl
inc
outsl
mov
jg
mov
les
cs
pushf
ljmp
push
xor
into
js
leave
adc
push
mov
loop
dec
and
dec
je
shlb
movsl
pushf
mov
jl
sarl
mov
and
push
pushf
fisttpl
cwtl
repz
clc
lret
shlb
mov
jmp
mov
xchg
dec
jae
scas
iret
pop
aaa
gs
sti
ficompl
mov
xchg
mov
imul
mov
mov
scas
and
ret
cld
cmpsl
cmp
iret
push
jne
leave
sti
scas
in
dec
lret
test
fsubr
je
push
sub
add
cmpsb
in
lods
or
inc
lret
mov
leave
jp
and
pop
mov
or
outsl
mov
dec
adc
adc
jmp
jg
scas
or
or
jno
js
cmp
mov
jne
dec
pusha
pop
mov
out
cmp
push
push
mov
xlat
or
sbb
or
xchg
cmpb
cmp
aam
mov
inc
inc
or
and
jle
push
jge
inc
or
pop
popa
outsl
sub
mov
pop
cmp
xchg
xchg
nop
fcomps
mov
xchg
imul
jge
fstl
out
or
xchg
mov
or
popl
mov
in
repz
or
cwtl
dec
mov
enter
je
mov
sbb
adc
mov
sarl
aas
sbb
pop
negl
mov
into
test
enter
xchg
cmc
ret
cwtl
or
add
push
mov
adc
pop
loop
imull
mov
inc
mov
jae
or
cmp
sbb
out
xor
lcall
mov
enter
in
mov
iret
rorl
shll
cmp
inc
push
push
mov
inc
testb
xchg
jge
inc
je
mov
and
add
fadds
xchg
in
test
inc
loopne
push
jno
jns
insl
pop
inc
stos
pop
cmp
test
popf
subb
in
mov
push
les
mov
jne
clc
xchg
out
dec
lret
jbe
scas
nop
outsb
lretw
mov
or
cmpsl
and
loope
push
jp
stc
xor
and
in
js
inc
dec
iret
sbb
ja
push
ds
cmp
or
push
addr16
int3
sbb
jb
loop,pt
je
sub
push
int3
jle
xchg
cmp
leave
push
jmp
rol
mov
sbb
cmpsb
cmpsl
stc
add
andl
daa
stos
in
in
sbb
pop
mov
in
scas
mov
vprotw
es
pop
inc
stos
add
in
xchg
jnp
mov
lds
and
and
jnp
mov
xor
cltd
cmpsb
jl
lret
push
out
jns
ret
hlt
cmp
cmpb
in
jl
jbe
repnz
pop
ror
lret
cmpsl
push
jae
dec
int
xchg
mov
rcll
lret
jno
jnp
pop
fcoms
mov
sahf
imul
jge
dec
sub
lea
cmpsb
in
rol
and
adc
into
int3
dec
push
mov
inc
shrb
in
stos
int3
mov
int3
push
cmp
out
lds
daa
fcmovnbe
je
mov
outsl
loop
add
sbb
out
pop
sbb
iret
jg
xchg
pop
inc
mov
in
jns
pop
aas
outsb
xor
inc
nop
fdivl
push
lods
int3
mov
in
push
mov
mov
or
mov
jb
pushf
add
movsl
jmp
pushf
dec
xchg
daa
xor
mov
cltd
ljmp
or
fdivrs
dec
icebp
jno
fmull
stos
fmull
pop
dec
in
xlat
testl
mov
addl
cltd
data16
cmp
sbb
mov
jne
mov
ret
stos
dec
xor
push
aam
jnp
inc
inc
insb
out
push
arpl
out
pusha
dec
ficoml
dec
and
insl
xor
sub
pushf
scas
adc
or
pusha
pop
xchg
scas
mov
jnp
jno
mov
stos
test
and
fwait
leave
xor
xlat
fnstsw
and
push
int3
jae
insb
pop
mov
fs
adc
push
mov
outsb
pop
cmp
push
mov
inc
in
mov
and
fdivrl
cmp
mov
inc
enter
icebp
jmp
enter
cmpsl
sbbb
push
dec
xor
aas
enter
stos
mov
jnp
ja
dec
fdivr
int
nop
mov
push
push
enter
rcrb
jge
in
inc
cmp
sub
cli
push
ficoms
lods
sub
dec
jnp
into
push
jbe
les
lret
faddl
mov
mov
jmp
cmovae
mov
std
or
stos
xor
and
leave
xlat
jno
mov
pop
xchg
rcrb
push
jge
xchg
or
inc
sub
xor
call
mov
pop
mov
mov
pop
into
jmp
int3
pusha
cmp
fldl
lea
icebp
add
xchg
sti
fwait
sbb
das
mov
pop
frstor
scas
mov
dec
dec
lock
std
in
jl
ror
dec
popf
mov
xchg
sub
leave
shll
outsl
js
mov
rcrb
stos
xor
dec
pop
push
int3
cwtl
mov
inc
loope
xchg
inc
sub
push
hlt
xor
add
jo
imul
stos
enter
lds
aaa
or
xchg
pop
outsl
popf
mov
adc
lret
mov
gs
adc
outsl
xchg
pop
xchg
es
sbb
cmpsb
clc
mov
int
push
and
push
fisttps
mov
fwait
add
ja
cs
repz
cmp
mov
std
rcr
mov
rcrl
mov
mov
fstl
push
lds
call
pop
mov
sti
cmp
xchg
jle
scas
mov
test
int
fisttpl
jo
daa
pushf
pop
leave
test
subl
jg
stos
lahf
les
xchg
sub
sbb
push
pop
mov
lret
imul
aam
xchg
arpl
popa
pop
pop
push
pop
popa
adc
dec
cs
jmp
je
imul
jp
push
ret
mov
out
cs
subl
sub
movsl
jb
out
cmp
cltd
sbb
rolb
jns
jno
or
pop
sbb
ds
push
xor
jp
decl
enter
dec
xchg
fcoml
inc
aad
jo,pn
repz
loope
fists
iret
jecxz
push
dec
xchg
push
jp
pop
or
mov
adc
fsubrp
add
out
inc
in
outsb
js
dec
xor
jnp
in
sbb
outsb
mov
push
sub
imul
push
bound
addr16
sti
add
jge
inc
push
scas
fbld
into
imul
and
mov
sbb
cvtps2pi
int3
jnp
adc
dec
adc
mov
and
stc
jae
mov
jns
pop
ja
ljmp
subl
fcoms
inc
iret
sbb
or
or
std
test
test
shrb
or
pusha
pop
xchg
jmp
pop
ret
daa
mov
sub
in
repnz
cmp
jno
jmp
outsb
pop
stos
sub
in
pop
push
xorl
or
scas
add
pop
mov
mov
cmc
dec
pop
xchg
push
jg
aas
dec
push
in
jb
in
inc
push
push
mov
cmp
adc
lods
insl
jecxz
xchg
call
push
ss
inc
sbb
mov
xchg
cmpb
mov
testl
pop
ret
jo
mov
out
mov
cmpsb
xlat
into
cmp
or
mov
push
loopne
sbb
int3
jmp
mov
loopne
fsubs
fwait
loop
pusha
jp
aam
pop
jg
mov
and
psraw
ret
sbb
push
jle
test
or
sub
sti
jb
leave
fcoml
push
shl
lret
outsb
in
add
jo
xor
xchg
jmp
jae
outsl
jns
pop
xchg
decb
and
repnz
xchg
mov
loop,pt
push
sbb
xchg
pop
lahf
mov
cmp
pop
lret
inc
nop
push
movsl
insl
dec
mov
or
rol
sbb
push
mov
pushf
nop
push
inc
xchg
and
mov
and
jp
decb
mov
push
jno
ret
push
shr
push
test
sbb
scas
jmp
movsb
adc
cmp
push
mov
mov
pop
movsb
pop
iret
pop
icebp
mov
inc
push
mov
mov
cmp
lret
pop
and
sbb
adc
xor
mov
out
xchg
rcrb
das
fidivrl
testl
and
popa
into
mov
pop
add
jnp
xor
shr
mov
int3
popa
das
popa
filds
mov
cmpsb
orl
test
sti
push
sub
sbb
adc
and
daa
cwtl
shrl
aas
int3
pop
loopne
inc
jmp
mov
push
call
sub
sti
and
jnp
jns
popa
jle
aas
es
adc
adc
jo
xchg
leave
adc
test
insb
sub
dec
mov
int3
pop
xor
jecxz
push
test
test
xchg
mov
sbb
jge
xor
shlb
jno
fsubl
xor
and
icebp
sbb
push
xchg
sahf
jne
pusha
popf
lret
push
cmp
pop
repnz
jb
inc
pop
sti
cmp
xchg
out
push
testb
sbb
sarb
pop
cmpsb
xchg
in
cmpb
jno
rcrl
xchg
cmc
xorl
orl
test
dec
jne
jmp
sub
jns
dec
ds
stos
pop
gs
ret
push
jl
sarl
test
mov
mov
iret
mov
xchg
ja
fsubr
dec
sbb
les
and
icebp
mov
js
ret
stos
fnstenv
pop
pushf
cld
push
roll
fistpll
dec
in
icebp
mov
call
in
bound
jl
aad
dec
ret
pop
leave
sbb
jl
ror
mov
fisubrl
inc
mov
xchg
cmp
test
adc
xorl
pop
aad
pop
decl
jo
les
sbb
ret
pmullw
int
stos
stos
popa
popa
das
shrb
stos
fsubp
inc
ja
and
fwait
xchg
adc
orl
mov
pop
lret
cmp
cmc
push
jmp
pusha
sti
dec
imul
es
sti
enter
lahf
mov
out
and
mov
jp
jbe
mov
out
sbbl
mov
fwait
dec
scas
sti
js
std
fimuls
stc
add
ja
push
cltd
iret
mov
jae
ljmp
sub
cmp
jp
int3
and
sub
fs
xchg
imul
outsl
bound
mov
push
clc
aas
inc
cmpsb
push
or
xchg
mov
roll
xchg
leave
sbb
sti
push
ret
sub
adc
out
jmp
inc
inc
enter
xor
jmp
jbe
in
icebp
push
loop
enter
and
jge
xor
pop
in
mov
adc
cmp
jno
add
sbb
jp
out
jnp
stc
gs
mov
xchg
mov
pushf
sbb
outsb
stc
inc
imul
lea
push
xor
push
jnp
into
ds
mov
fcmovnbe
std
outsl
mov
cmp
outsb
mov
imul
mov
loope
sbb
icebp
xor
dec
mov
lret
sti
and
push
aam
push
jnp
cmpb
mov
adc
jg
pop
leave
adc
loop
repz
cmp
mov
jle
push
xor
pusha
rcll
add
xchg
jae
sti
pop
jno
mov
fisubs
lret
in
loopne
cmp
lods
outsb
dec
xor
into
ret
ds
cmp
insl
outsl
push
in
cli
cmp
push
adc
sti
inc
push
mov
scas
jle
cmp
dec
mov
mov
pop
jg
enter
pop
cmp
adc
inc
mov
inc
into
das
mov
xchg
dec
jbe
mov
mov
mov
inc
jo
mov
sbb
xor
xorb
repz
pop
lret
xchg
xchg
pop
sub
jmp
pop
jnp
bound
inc
mov
rorl
nop
jl
call
orl
cs
inc
mov
mov
shll
out
sbb
push
shlb
js
and
xor
adc
mov
dec
pop
enter
cltd
jne
inc
pop
jae
or
pop
jl
jmp
pushf
enter
ret
mov
mov
inc
jae
repnz
lods
add
jae
adc
lret
mov
lods
lds
mov
lahf
mov
push
enter
leave
clc
jg
mov
repnz
mov
repnz
cmp
fstpt
lret
fistpll
js
adc
xchg
popa
shlb
xor
test
fsubrl
pop
les
mov
jns
pop
mov
sbb
gs
cmp
aaa
insl
frstor
and
ljmp
adc
xor
jge
mov
xchg
je
test
mov
dec
out
ret
ret
sbb
fcmovnb
inc
sub
enter
inc
aad
dec
iret
adc
inc
xchg
shr
inc
les
in
jl
dec
mov
pop
outsl
pop
int3
sti
enter
push
mov
cmp
test
push
iret
hlt
mov
push
cli
xor
shlb
stos
pushl
cmp
aam
jne
sbbl
mov
sarl
mov
jbe
xchg
shl
xor
mov
lret
sbb
or
pop
enter
inc
jno
jmp
fisubrl
xchg
fmull
mov
test
iret
sub
cmp
add
push
mov
inc
dec
andl
fmuls
int3
sti
jp
pop
inc
imul
addr16
sub
stos
or
sbb
mov
ficompl
repnz
push
jae
pop
cmp
int
xchg
shlb
jns
fwait
fwait
or
movsl
add
xchg
pop
cmp
fidivrl
dec
pop
mov
arpl
fistl
xlat
lds
xchg
jmp
mov
fisttps
iret
dec
dec
pop
data16
cmp
push
and
xor
aam
jp
neg
rorb
shrl
and
adc
or
mov
inc
xchg
out
lcall
pop
bound
test
outsl
adc
int
cmp
lock
mov
add
ret
mov
cli
xchg
inc
into
pusha
in
jb
pop
mov
pop
cld
imul
ret
inc
or
fs
lods
sub
ljmp
or
inc
add
and
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
mov
sub
push
push
push
call
mov
push
call
call
mov
mov
mov
call
shr
sub
push
push
push
push
push
push
push
call
mov
cmp
jne
push
pushl
call
sub
call
negl
xor
call
roll
pushl
call
negl
add
dec
jne
call
mov
pushl
push
call
mov
pop
pop
pushl
push
call
call
pop
pushl
push
call
leave
jmp
nop
