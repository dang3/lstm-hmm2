push
mov
push
push
mov
mov
mov
mov
push
push
lea
mov
mov
mov
add
not
add
not
shr
add
push
mov
add
add
push
lea
push
mov
call
add
add
mov
mov
mov
mov
push
popl
sub
cmp
sub
lods
xor
stos
add
sub
sub
add
roll
sub
add
jne
mov
mov
neg
add
add
sub
add
mov
imul
add
mov
imul
add
mov
mov
mov
add
subl
add
and
add
movl
mov
pushl
lea
push
push
mov
call
mov
add
xor
add
add
sub
decl
mov
jne
addl
addl
pop
pop
leave
ret
push
mov
push
mov
movzwl
movzwl
andl
add
je
push
mov
push
lea
testl
je
mov
mov
and
add
push
push
pushl
call
jmp
mov
mov
add
add
movzwl
movzwl
incl
add
sub
add
cmp
jb
pop
pop
pop
pop
ret
mov
add
mov
test
je
add
add
add
add
add
push
mov
push
lea
xor
cmp
jbe
add
push
add
pop
cmp
jb
mov
add
xor
cmp
jbe
add
push
add
pop
cmp
jb
pop
pop
xor
lea
test
ret
push
mov
sub
sub
andl
push
lea
push
movb
mov
mov
mov
mov
rep
mov
mov
rdtsc
mov
mov
mov
mov
not
ror
not
movzbl
lea
cmpb
jne
mov
push
push
push
movb
call
push
call
push
push
pushl
mov
call
mov
mov
cmp
jne
movzbl
push
push
pushl
call
pushl
push
pushl
call
xor
pop
push
add
pop
pop
leave
ret
push
push
mov
mov
mov
mov
mov
mov
cmpb
jne
cmpb
jne
pop
pop
ret
push
push
push
push
mov
call
mov
jmp
push
mov
sub
add
push
mov
mov
add
mov
test
jne
inc
jmp
andl
push
lea
lea
cmpl
push
je
mov
mov
add
push
mov
call
mov
test
je
mov
andl
add
cmpl
je
mov
pushl
pushl
call
mov
test
je
mov
mov
mov
mov
mov
mov
incl
mov
mov
lea
cmpl
jne
mov
incl
mov
imul
lea
lea
cmpl
jne
xor
push
add
pop
pop
pop
pop
leave
ret
xor
jmp
push
mov
or
mov
movzbl
inc
mov
mov
lea
imul
add
add
mov
mov
decl
jne
lea
pop
ret
push
mov
sub
add
mov
add
mov
xor
mov
cmp
je
add
add
add
mov
cmp
je
push
mov
push
cmpl
jne
mov
add
push
mov
call
mov
mov
call
push
pushl
call
test
je
mov
mov
add
jmp
cmp
je
lea
test
mov
mov
test
jne
jmp
mov
lea
mov
mov
add
add
cmpl
jne
pop
pop
lea
push
mov
movb
movb
movb
call
leave
ret
push
push
push
xor
mov
push
mov
call
mov
push
push
mov
call
push
call
mov
xor
push
add
pop
cmp
jne
push
pushl
push
mov
call
jmp
cmp
jne
push
push
push
push
push
push
mov
call
test
je
push
call
push
call
push
jmp
cmp
jne
testl
jne
cmp
je
push
mov
call
pop
test
jne
mov
call
jmp
cmp
je
push
push
push
xor
call
push
mov
call
xor
pop
pop
pop
ret
mov
xor
cmp
je
push
add
pop
lea
test
cmpb
jne
ret
push
push
push
xor
call
mov
lea
test
jbe
mov
movzwl
mov
and
rol
add
dec
jne
test
jns
lea
and
or
pop
mov
pop
ret
push
xor
cmp
jbe
lea
push
mov
add
mov
add
inc
sub
add
cmp
jb
pop
pop
ret
push
mov
cmpl
push
push
jb
mov
mov
mov
pushl
popl
sub
cmp
sub
lods
xor
stos
sub
sub
sub
add
sub
roll
sub
add
jne
pop
pop
pop
ret
push
mov
sub
sub
push
push
push
mov
xor
cmp
jne
push
mov
call
push
push
push
mov
push
mov
mov
call
mov
push
lea
push
xor
inc
push
pushl
mov
call
push
mov
call
push
push
push
lea
push
mov
call
mov
mov
call
cmp
jne
cmp
jne
push
push
push
mov
call
cmp
je
mov
jmp
lea
push
mov
mov
push
pushl
push
mov
call
cmp
je
cmp
jne
lea
call
pushl
mov
pushl
mov
push
call
mov
sub
mov
mov
add
push
lea
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
call
mov
mov
add
add
push
and
add
push
call
mov
mov
add
mov
mov
mov
add
movzwl
lea
add
mov
movzwl
lea
mov
mov
sub
xor
mov
cmp
je
mov
cmp
je
add
mov
mov
mov
jmp
mov
mov
mov
cmp
je
add
lea
mov
mov
mov
mov
add
push
push
push
call
or
sub
mov
mov
mov
sub
push
push
call
push
call
test
je
cmpl
je
mov
mov
call
mov
add
mov
push
lea
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
call
mov
inc
mov
mov
mov
add
xor
xor
cmp
jae
mov
mov
mov
addl
cmp
addl
push
pop
rep
mov
mov
mov
add
add
test
sub
mov
movzwl
push
add
pop
cmp
jb
xor
push
push
push
push
push
mov
call
mov
call
cmp
je
in
push
push
pushl
mov
call
jmp
pushl
pushl
pushl
jmp
xor
pop
pop
pop
leave
ret
push
mov
mov
mov
sub
add
add
push
mov
test
jne
xor
jmp
mov
add
mov
push
mov
mov
mov
push
mov
add
add
add
mov
mov
test
jns
and
sub
cmp
jae
mov
jmp
xor
mov
cmp
jae
jmp
mov
mov
mov
mov
add
mov
call
cmp
je
incl
mov
cmp
jb
mov
mov
mov
cmp
je
movzwl
mov
add
test
je
mov
add
cmp
jae
cmp
jb
xor
cmpb
je
lea
test
cmpb
jne
push
lea
push
push
mov
call
add
add
lea
push
mov
movb
call
mov
test
jne
xor
jmp
lea
call
push
push
call
mov
mov
pop
pop
pop
leave
ret
mov
outsl
add
dec
insb
add
add
add
popl
mov
sbbb
or
jp
cwtl
arpl
mov
jecxz
fs
insb
mov
mov
cmp
inc
sahf
or
lock
xchg
cmp
fisttps
sbb
cmp
aad
adc
aam
inc
lods
filds
imul
jne
ja
adc
xor
sbb
movsl
or
test
pop
push
xchg
xchg
iret
mov
pop
push
sti
mov
movsl
fsts
sub
mov
ret
aad
rcrl
enter
jno
jo
cs
jbe
dec
mov
fxtract
xor
es
sub
mov
pop
and
jmp
sbb
add
call
mov
jg
push
sub
icebp
pop
add
add
mov
ja
popf
mov
jnp
out
jnp
lret
push
fdivrl
add
inc
xor
xor
xor
mov
sub
lock
cmpsb
addr16
pop
jae
mov
pop
pop
ljmp
mov
addr16
push
dec
fidivs
das
nop
push
inc
push
aaa
inc
repz
hlt
pop
cmpsb
data16
xchg
ret
xor
sbb
mov
add
xlat
add
aad
stos
or
nop
iret
fs
add
jmp
xor
rolb
push
into
dec
add
lds
repz
pushl
mov
ficoms
movsl
rorb
xor
aam
ljmp
out
sbb
out
and
insl
fmul
cltd
lods
adc
out
and
orb
mov
or
mov
xor
les
cmp
push
popf
cli
popa
bound
pop
push
jo
dec
bnd
mov
pop
in
inc
sub
adc
inc
xor
sbb
xor
xchg
iret
std
vmptrst
push
inc
mov
push
jp
enter
ja
add
lret
icebp
pop
xor
xchg
add
mov
pop
mov
xchg
adc
stos
dec
outsb
pop
sbb
add
iret
rcrl
mov
mov
and
dec
and
jmp
lock
push
in
sub
xor
sub
fdivp
xchg
pop
jb
lcall
adc
push
hlt
nop
popf
fnstenv
mov
add
loope
cwtl
rorl
dec
inc
enter
jns
sbb
mov
icebp
push
loopne
add
daa
pop
subb
in
cltd
pop
inc
xlat
daa
cmp
xchg
dec
cmp
fadds
cltd
sub
cltd
ror
inc
sub
jp
xor
repz
xchg
or
int
push
xchg
cmp
inc
ds
cld
adc
mov
lret
or
hlt
push
je
out
jg
push
test
push
arpl
jmp
repnz
je
shrb
iret
addb
or
mov
sbb
xchg
rcrl
add
xchg
mov
push
test
mov
fs
mov
dec
scas
jmp
mov
dec
mov
iret
mov
cmp
mov
loopne
or
psubusb
lods
sub
sbb
mov
or
mov
cwtl
jnp
scas
xor
scas
dec
dec
and
jmp
sbb
lea
add
mov
popa
xchg
pop
sub
mov
loope
lods
clc
pop
mov
outsl
xor
movsb
in
push
stc
int3
xchg
test
adc
sbb
cli
xchg
lds
cmp
es
int3
adc
pushf
push
dec
sub
js
mov
jno
int
add
sahf
lods
inc
xchg
and
es
and
inc
nop
aad
cmp
or
stc
ja
arpl
add
outsb
jo
lea
iret
mov
jbe
movsb
ja
mov
inc
xchg
sbb
imul
xchg
lahf
mov
xchg
enter
mov
popa
cld
jg
dec
aaa
cmp
mov
xchg
push
ljmp
jmp
mov
pop
jne
mov
insl
out
push
jle
arpl
inc
dec
inc
je
imul
ret
adc
popf
pusha
and
inc
inc
out
out
jecxz
adc
insb
test
adc
jne
stc
adc
xchg
mov
ss
mov
xor
mov
das
out
rcrb
pop
mov
add
mov
add
ja
push
adc
mov
mov
inc
shrb
inc
and
sarl
repnz
add
sbbb
and
fbstp
or
xor
stos
adc
jl
push
arpl
add
cmp
pop
stos
mov
inc
fsubrs
cmp
sbb
mov
mov
jnp
and
mov
out
loop
aaa
aam
pop
sbb
push
mov
movzbl
in
cs
or
and
lret
and
adc
sbb
ret
nop
pushf
in
sbb
or
dec
xchg
jno
movsl
fs
inc
jns
jle
outsl
inc
sbb
mov
insb
xchg
in
mov
inc
jns
sub
push
jns
pop
scas
jne
pop
ljmp
xchg
mov
sahf
in
and
rclb
leave
jp
sub
test
dec
adc
btcl
xchg
in
mov
mov
add
cld
xor
cwtl
mov
insl
push
int3
ljmp
es
push
pushf
js
fs
dec
xchg
fildll
dec
or
or
movsl
xor
dec
int3
hlt
and
sti
ss
js
cmp
scas
repz
aas
sub
xchg
rcll
arpl
imul
scas
xchg
das
mov
or
lds
push
pop
mov
jge
mov
jl
jecxz
sub
lret
int
push
pop
dec
fs
cld
sar
scas
pop
gs
addl
leave
push
adcb
mov
pop
arpl
fwait
inc
sbb
enter
adc
sahf
stos
lcall
cmp
ja
cmp
cmp
jge
pushf
les
imul
fldt
mov
and
movsl
insl
push
push
or
sbb
sub
cltd
sub
xchg
call
push
fs
and
xor
fdivr
mov
aaa
mov
pop
mov
popf
nop
clc
notl
sbb
dec
lods
inc
insb
and
out
mov
push
cmpsb
mov
pop
ret
pop
movsl
rolb
fldenv
push
push
out
add
out
pop
adc
aaa
jne
or
lods
aaa
or
pop
in
lret
and
aaa
and
arpl
cmp
cmp
jnp
adc
xor
mov
add
adc
pop
es
ds
and
shlb
ja
nop
stos
inc
push
test
in
lret
and
sub
jns
xchg
push
in
out
ds
lds
ja
ljmp
pop
loopne
inc
mov
ret
in
mov
or
mov
pop
test
fwait
outsb
sbb
test
pop
pushf
ljmp
jbe
dec
xchg
inc
xchg
lea
or
movsb
xlat
xor
aas
adcl
loop
sbb
push
xchg
xor
cli
inc
sbb
add
test
loope
pop
icebp
std
je
jnp
push
lahf
movsb
lds
sti
in
xchg
aaa
xchg
and
icebp
jns
jmp
xchg
call
std
test
mov
inc
or
mov
aam
xchg
lahf
xchg
fsubrl
hlt
jp
push
sarl
xorb
pop
pop
ret
sti
xchg
in
arpl
lods
jl
ret
jecxz
dec
test
xor
loopne
iret
nop
dec
lock
mov
popf
stos
add
jb
xor
inc
insl
and
out
hlt
push
popa
hlt
divl
cmp
pop
pop
movsb
adc
rcr
hlt
nop
pop
and
mov
data16
loop
fists
push
rcll
cmpsb
mov
fwait
xor
push
insb
popa
divb
pop
sbb
outsl
or
xchg
rcl
std
dec
stos
sbb
or
xchg
add
xor
add
std
fcmove
enter
add
pop
cld
sahf
mov
inc
cld
icebp
repz
or
ss
pop
jle
test
dec
jmp
push
pop
test
mov
in
std
out
mov
adc
loope
inc
fmull
sti
scas
cmp
cs
nop
jg
mov
in
fstpt
or
inc
inc
je
sbb
add
mov
mov
fstps
push
fstpl
fcoms
jno
nop
mov
cwtl
shll
mov
int
or
cs
push
mov
mov
outsl
popa
add
fiadds
ret
out
jnp
jp
cmpsb
loope
sbb
sub
sbb
push
or
loopne
jp
mulb
adc
out
dec
or
pop
mov
fiaddl
inc
outsl
xchg
and
xlat
mov
cld
pop
or
lock
mov
cwtl
add
xchg
lret
mov
icebp
out
xor
arpl
adc
pop
push
or
dec
scas
fwait
insb
sbb
sbb
inc
or
mov
push
push
jo
rclb
sub
adc
pop
mov
pushf
jns
ds
shlb
aam
cmc
jns
xor
pop
ss
rclb
and
sub
into
jl
lcall
sbb
cmp
sti
stc
enter
sbb
jns
mov
subl
lods
pusha
lret
and
dec
fstps
jo
mov
orb
shlb
out
pop
mov
fs
mov
or
cltd
ds
dec
adc
movsl
aad
mov
xor
sbb
fisubl
jb
xor
xor
xor
shl
cwtl
jns
orb
mov
test
jg
dec
fbstp
xor
jno
scas
aad
iret
mov
int
out
cmpsb
das
xchg
fistpll
call
gs
and
mov
aad
lods
adc
push
test
sub
insl
out
jb
movsb
jmp
xor
mov
jle
adc
sti
lea
in
pushl
fdivr
das
or
jg
std
push
xchg
sub
mov
mov
and
loop
jns
popa
les
arpl
mov
add
popl
inc
sub
andb
pop
dec
dec
call
inc
je
aam
loope
mov
sbb
mov
sub
or
push
ljmp
iret
sub
sbb
jl
push
lret
mov
mov
sahf
mov
or
in
rcll
inc
jae
call
and
fcomp
sbb
xchg
jnp
mov
or
rep
xlat
je
jp
inc
push
push
in
dec
int3
pop
xor
inc
stos
sti
dec
or
or
adc
sbb
xor
jns
push
mov
dec
xchg
lahf
and
pop
push
pushf
jecxz
fldt
jge
inc
or
das
dec
sub
inc
stos
jnp
sbb
test
nop
mov
sbb
mov
mov
jnp
aad
scas
xchg
mov
adc
pop
scas
shll
xchg
push
leave
fidivl
add
lcall
stos
ret
push
jnp
daa
push
cmp
cltd
sub
mov
adc
add
mov
je
movb
lods
arpl
jo
repz
int
pop
sbb
cli
or
movsl
xlat
or
or
xchg
push
cmc
dec
jb
mov
stc
sub
stos
call
lcall
cmpsl
sahf
test
push
lcall
jecxz
and
daa
dec
scas
outsl
xchg
sub
and
ss
mov
shll
inc
inc
cmpsl
roll
mul
insb
test
cltd
push
ds
jo
pop
lcall
xor
push
int
pop
rolb
ret
cmp
mov
cmc
notb
mov
and
push
mov
lret
into
mov
pop
jl
in
fsubl
loopne
sbb
xchg
sahf
pop
cmpsb
inc
or
and
lret
inc
xchg
inc
dec
sub
inc
into
outsl
fsub
mov
mov
push
shr
repz
push
int
iret
data16
mov
sbb
mov
jecxz
push
mov
into
ljmp
add
pop
mov
rorb
mov
cltd
mov
add
push
xchg
addr16
fsubp
mov
mov
fs
xchg
out
repnz
stos
push
and
jno
sub
adc
loopne
lahf
dec
ds
push
lcall
fdivrp
lret
push
jno
push
rcr
xchg
mov
mov
mov
and
loopne
mov
fwait
cmc
ds
adc
ljmp
bound
stos
pop
or
sbb
cs
jb
stos
int
lods
mov
insl
dec
cmc
sbb
mov
mov
jge
daa
mov
test
mov
dec
mov
dec
xchg
and
orl
cmp
fcoms
mov
xchg
shl
jnp
faddl
push
adc
jecxz
or
jbe
lcall
pop
in
inc
pop
inc
push
jbe
push
or
shll
mov
xor
sub
dec
cmpsb
fs
inc
mov
pop
mov
xchg
mov
shrb
sbb
or
mov
adc
cld
jbe
xor
in
dec
adc
lock
sbb
psubq
xor
data16
inc
and
inc
push
mov
adc
cmp
dec
outsb
inc
stos
sub
sahf
push
imul
ret
les
push
xor
mov
fcomi
fisttpll
and
mov
pusha
mul
pop
sub
xchg
adc
fldcw
dec
aad
cmpb
out
dec
mov
or
or
cmp
mov
bound
push
dec
jne
or
loop
jg
xchg
dec
cmp
mov
dec
jl
sub
outsb
pop
out
mov
sub
adc
subb
mov
std
mov
push
push
jge
sub
data16
enter
movb
add
shll
ror
mov
adc
adc
and
or
pop
inc
int3
jmp
adc
in
shlb
push
inc
inc
cmpsl
nop
int3
xchg
out
xchg
fildl
pop
sbb
dec
push
cmpsb
rcrl
outsl
stc
out
rorb
test
subl
push
mov
ficomps
jnp
sub
movsl
test
cmp
xchg
test
call
pop
cmc
jo
sub
flds
inc
xor
shll
popl
xor
ja
ss
pop
inc
je
mov
ret
pusha
orl
mov
jns
jbe
inc
jle
sbb
pop
pop
ret
mov
stos
and
cmp
add
or
and
xchg
cmc
clc
dec
mov
dec
repnz
sub
gs
mov
cmpsl
mov
cmc
mov
shr
xchg
mov
pop
lds
push
adc
vpmacssdd
in
outsb
push
push
loop
pop
or
icebp
lcall
jno
mov
stos
gs
pushf
sub
push
fsubrp
insl
adc
cmp
das
std
mov
andl
mov
mov
sub
push
adc
ret
popa
popa
pop
das
push
cmp
in
dec
aam
test
stc
or
and
test
inc
jae
loopne
xor
insb
or
loopne
and
test
lea
fidivrs
mov
dec
dec
iret
pop
repz
cmpsb
je
xchg
leave
push
bound
sub
imul
js
repz
daa
mov
pushf
and
inc
stos
shr
inc
add
repz
inc
mov
sub
jl
das
loop
out
jo
jb
data16
fcmove
stos
jo,pt
leave
xchg
div
xchg
or
xchg
js
push
xor
mov
mov
fucom
jbe
mov
insl
dec
das
pop
jns
mov
cmp
mov
dec
cmova
inc
jne
mov
lds
push
sbb
insb
out
jae
in
or
push
test
clc
iret
loop
mov
fstp
aaa
insl
mov
loopne
sbb
inc
jne
pop
iret
xchg
jmp
stc
aaa
pop
cmpsb
fs
push
xchg
outsl
adc
sbb
lock
jmp
xchg
ljmp
xchg
loopne
fidivrl
lock
cmp
xor
inc
andps
mov
pop
sbb
mov
fldl
aaa
fimuls
mov
aaa
xor
stos
lret
sbb
push
or
inc
out
outsb
mov
repnz
out
xchg
xor
pop
xchg
ret
push
or
outsb
iret
jbe
mov
fnsetpm(287
sbb
loope
jmp
xor
xor
push
pop
sub
mov
inc
xor
repnz
cld
stos
loope
lods
sbb
das
imul
dec
jecxz
das
je
adc
pop
cmpsb
loopne
xchg
jge
out
or
xchg
inc
sbb
sub
xchg
icebp
jl
repz
push
daa
dec
sub
dec
sub
cmp
int
ret
rorb
shl
mov
pop
in
mov
or
sub
mov
inc
js
cli
or
outsb
or
fnsave
loopne
push
sub
sbb
ljmp
negb
test
sub
mov
mov
sub
js
inc
pop
fmul
dec
jns
mov
ja
dec
pop
lret
lret
aaa
pop
cmp
jo
mov
mov
imul
push
push
rcl
push
pop
jp
or
aad
shrl
mov
mov
aam
sub
sbb
int
in
pop
push
or
fsub
dec
adc
in
dec
or
jae
dec
add
insb
or
stos
jle
xchg
out
jb
mov
out
out
decl
pusha
out
sbb
inc
push
dec
mov
data16
pop
mov
shrb
or
loope
pusha
imull
test
test
sub
rol
jb
xchg
dec
inc
mov
das
sbb
pop
imul
pop
jbe
int
xor
lock
xchg
jge
sbb
outsb
loope
fidivrs
mov
int
push
fwait
cld
adc
cld
daa
fcmovb
sbb
mov
pop
repz
mov
cmc
test
add
and
jnp
ja
loop
jecxz
bound
mov
xor
push
das
lds
pop
push
cmp
cltd
xchg
bound
scas
in
fcomp
cmp
in
and
nop
lds
lret
out
push
mov
pop
imul
or
cmp
in
iret
sti
orl
cltd
xchg
mov
cwtl
dec
inc
or
push
into
aas
inc
add
cmp
rcrb
cli
insl
hlt
je
inc
ljmp
sub
ljmp
stc
add
ds
adc
pusha
loopne
shlb
cmp
popa
popa
jg
js
pop
pop
cli
daa
sbb
icebp
insl
jmp
mov
mov
pop
jl
lret
and
enter
jnp
das
cmp
jo
inc
popf
jne
add
or
fsubrl
ljmp
cmp
cmp
js
jb
adc
psrlw
int
and
sbb
std
inc
in
div
xchg
or
adc
add
rol
push
mov
xchg
mov
xchg
jl
mov
pop
mov
pop
adc
xchg
mov
xlat
call
mov
arpl
mov
imul
xchg
mov
inc
mov
push
pop
push
enter
in
jl
adc
rorb
sbb
add
push
push
lea
flds
popa
repnz
dec
push
xor
daa
lods
andb
cld
sbb
stos
out
adc
or
jnp
cmp
mov
xchg
push
out
adc
inc
bound
push
push
dec
mov
push
orb
nop
dec
loopne
insl
jp
pop
mov
aam
in
xchg
fistpll
call
and
mov
in
xchg
xor
or
inc
sbb
int
inc
lret
pop
stc
push
outsb
fisubrs
jle
dec
sub
je
lcall
lock
dec
out
lods
leave
popa
xchg
pop
jp
xchg
ret
fwait
mov
add
lods
and
jbe
cmpb
int
dec
mov
lea
addb
out
out
mov
jecxz
dec
cmpsb
xlat
push
xor
push
outsl
inc
mov
add
xchg
stos
dec
insl
push
data16
stos
popf
adc
test
in
scas
ja
cltd
loopne
fwait
nop
test
mov
adc
add
sub
into
or
add
ret
test
pop
add
inc
dec
imul
into
sbb
dec
sub
aaa
es
pop
or
ja
mov
fidivrs
inc
jb
inc
or
pop
pop
mov
jne
and
mov
leave
test
jb
xchg
or
sbb
jg
pop
sub
fsubp
mov
pop
add
xor
outsb
aas
inc
loop
and
ret
cwtl
aad
in
inc
les
rcrb
xor
leave
leave
xor
das
andl
xchg
pop
jae
and
xchg
adc
sbb
push
lret
lock
shrb
mov
movsl
aad
jl
fwait
pusha
and
push
fcmovne
mov
lret
fisttps
pop
pop
addr16
push
and
add
dec
jmp
pusha
pop
pop
mov
scas
pop
dec
jbe
fnstsw
lret
xor
xor
mov
dec
xor
hlt
mov
orb
dec
enter
fcmovne
lds
mov
cmp
push
loopne
repz
mov
jae
std
adc
popa
flds
lods
push
or
cld
add
and
cltd
add
inc
sub
cli
mov
frstor
test
pop
dec
notl
shrl
les
adc
jp
scas
xor
jb
sbb
mov
push
sbb
pop
push
ror
icebp
and
mov
data16
aam
cltd
jmp
cmp
pop
cmpsl
cltd
decb
dec
test
pop
dec
scas
add
push
push
ds
sub
lcall
imul
insl
mov
pop
shrl
in
xor
in
cli
test
les
imul
jns
pushf
sbb
aas
push
inc
push
notb
or
push
sub
in
jns
xor
ret
lods
mov
mov
repz
add
nop
fildll
jl
mov
push
xor
mov
xchg
lods
push
inc
inc
lods
dec
pop
jns
xor
mov
jp
add
cmpsl
inc
xor
sbb
adc
add
adc
addb
add
mov
xchg
mov
insb
in
lea
push
ja
loope
stos
dec
jbe
xchg
out
pop
inc
std
test
in
or
cmc
sub
sahf
or
push
fcompl
jne
xor
insb
ret
stos
and
adc
iret
ss
bound
add
testb
outsb
mov
mov
dec
and
je
mov
fmull
dec
xchg
adc
scas
sti
inc
aam
mov
xor
and
cmp
push
test
jnp
jns
xchg
sbb
and
mov
sahf
jl
or
das
ja
fcoml
adc
je
insl
mov
pop
or
jae
jae
mov
sub
imul
mov
sar
cmc
xchg
mov
push
jns
fs
inc
cmp
and
sub
nop
xchg
ret
repz
repnz
js
dec
andb
xchg
inc
shl
jecxz
test
repnz
jl
dec
int
outsl
xor
pop
mov
aaa
sbbb
push
xlat
jae
aam
add
mov
rol
loope
daa
mov
jae
add
aas
hlt
aas
pop
outsl
pop
ret
jle
pop
jae
xchg
lock
int3
mov
popf
dec
out
sub
mov
inc
aad
dec
ljmp
testb
add
decb
fsubl
jmp
iret
icebp
pop
xor
jp
push
fcmovb
imul
aaa
mov
sub
xchg
aam
inc
sti
or
mov
shl
in
test
es
adc
pop
xchg
xchg
sub
adc
enter
or
sub
mov
bound
mov
fnstsw
mov
out
aam
clc
xor
sub
mov
dec
test
in
pop
dec
stos
aad
lods
fdivs
test
das
roll
sbbl
lds
es
add
xor
and
in
test
sbb
xlat
mov
test
inc
repnz
mov
dec
mov
xchg
mov
movsb
in
jle
push
outsb
shll
pop
nop
test
mov
repz
inc
inc
loop
xor
pop
stc
xchg
hlt
test
jecxz
sub
mov
sarl
inc
or
cwtl
subb
rcll
loope
cmp
clc
pop
popf
push
sub
les
inc
inc
ss
mov
push
shrl
sti
ds
leave
in
dec
inc
insb
adcb
sti
mov
dec
in
xchg
popa
mov
mov
lods
addr16
pop
adc
xor
out
jl
add
ja
hlt
mov
mov
mov
lcall
push
fsts
push
xor
mov
scas
adc
sub
push
cmp
mov
fwait
add
cwtl
and
sbb
and
paddsw
lea
cmp
mov
ljmp
fnsave
pop
cmpsb
fcmovb
mov
dec
push
ljmp
and
out
pop
mov
xlat
rcrb
xlat
jmp
insb
mov
xor
jge
jge
out
imul
ljmp
mov
xor
adc
jbe
lds
push
jge
fsubs
cmp
aam
and
jg
mov
push
lahf
xor
repz
outsb
sbb
repz
out
dec
scas
add
adc
inc
mov
movsl
jno
xchg
outsb
lahf
inc
sbb
cwtl
cmp
lcall
or
dec
andb
mov
adc
sub
and
mov
pushf
rcrl
jecxz
imul
sarb
xchg
xchg
inc
and
repnz
or
call
aad
sub
mov
shr
repz
dec
aaa
mov
nop
mov
test
xchg
fstpl
cmpsl
xchg
cs
mov
loopne
vucomisd
aam
insl
loope
xlat
inc
stc
leave
xchg
cld
insl
push
hlt
in
mov
lret
fmul
leave
sbb
leave
push
pop
std
incl
cld
xlat
pop
sub
add
shl
lock
push
imul
pop
xchg
sub
andl
xchg
lods
add
inc
call
aas
sti
insl
mov
jns
test
shll
jne
xchg
ss
ss
pop
rolb
imul
dec
inc
insl
rcl
dec
mov
or
push
lahf
add
inc
lret
or
call
fcmove
ss
pusha
daa
pop
adc
fs
out
mov
aaa
or
int
mov
gs
out
jecxz
cmp
mov
ljmp
jne
in
push
xchg
lret
shll
sahf
mov
inc
cmp
add
addr16
jae
stos
add
je
cbtw
rolb
xchg
inc
in
aam
outsl
mov
bnd
fstl
mov
sar
icebp
xchg
daa
daa
cmp
lahf
pop
cwtl
mov
push
jo
mov
cld
fcmovb
imul
insl
jge
or
mov
frstor
pop
inc
js
and
enter
adc
subb
clc
cmpb
movsl
lret
pop
mov
dec
xlat
dec
mov
add
in
pop
and
imul
cmp
sti
bts
sub
out
and
jbe
dec
jmp
and
dec
sub
adc
mov
subl
pop
icebp
sub
xchg
sbb
scas
jns
pop
jne
test
push
mov
fisubl
push
loopne
subb
xchg
cmp
jns
cmp
imul
jno
dec
cwtl
push
mov
jns
in
ds
notl
mov
hlt
sub
outsb
mov
pop
neg
push
push
test
loope
adc
imul
jp
inc
sbb
push
js
cmp
mull
cmpsl
movsl
loope
mov
jo
dec
push
stc
jnp
and
cmp
or
xchg
pop
in
test
push
xchg
popf
xchg
es
ret
call
imul
jle
in
sub
lcall
cwtl
int
movsl
dec
repnz
cld
adc
daa
decl
cmp
shlb
dec
loop
fildll
divl
dec
stc
rcl
es
int3
insl
jmp
jmp
imul
mov
fisttps
push
xchg
ret
repnz
daa
jge
sub
in
mov
jae
mov
mov
shl
lods
stos
cld
div
sub
call
sbb
xor
pop
sbb
pop
pop
arpl
rcrl
inc
dec
jae
fsubl
notb
sahf
lea
sub
leave
fs
shr
scas
insb
pop
adc
arpl
int3
out
xchg
lret
cmp
data16
test
jmp
xchg
pop
mov
fidivrs
jnp
fdivs
cmp
hlt
shrb
je
aaa
push
or
dec
xor
fmull
cmp
in
in
nop
ss
mov
scas
xorb
cmp
jecxz
add
fistl
int3
sti
mov
mov
xor
loope
mov
pop
mov
mov
pop
stos
add
lods
jle
or
or
das
inc
testl
shl
sub
ret
push
cs
mov
rcll
lret
fldenv
sbb
or
mov
out
out
shlb
test
popa
add
es
sbb
xor
ljmp
test
jns
mov
add
ss
push
test
ret
sbb
in
les
fwait
jmp
add
hlt
cwtl
jg
jle
jns
push
andb
mov
es
ja
dec
sbb
in
add
sbb
dec
xor
mov
loopne
je
pop
adc
jno
pop
hlt
mov
mov
xchg
test
dec
xor
mov
fs
sub
fisttpl
lods
out
std
inc
mov
inc
inc
scas
bswap
jb
fst
aad
cmp
mov
adc
add
repnz
mov
clc
sbb
add
mov
pushf
jb
gs
stos
das
call
mov
and
cs
or
adc
sti
sbb
adc
add
mov
sub
in
xchg
imulb
inc
push
push
or
stos
cld
mov
test
inc
jns
testb
rcll
mov
roll
xchg
insl
mov
or
mov
adcl
mulb
gs
rol
jb
adc
sar
js
dec
xlat
pop
xlat
jo
cmp
mov
dec
mov
jl
sub
add
xchg
fmulp
sbb
mov
popa
rcrl
mov
inc
fstp
adc
mov
ret
dec
dec
mov
xor
insl
and
mov
iret
daa
xor
xchg
adc
lcall
cmc
dec
cmp
test
xor
inc
arpl
jg
adc
daa
xor
mov
test
int3
push
dec
cmp
or
stc
hlt
xchg
fimuls
sbb
lcall
mov
sahf
arpl
mov
xchg
dec
aam
and
jb
pop
mov
pop
imul
jns
cwtl
imul
xor
pop
test
int3
fdivl
aam
jle
test
pusha
xor
insl
cmp
mov
repz
out
call
ud2
jecxz
bound
or
lock
insb
mov
out
mov
jle
jmp
repnz
jmp
mov
pop
sbb
rorb
add
jg
pop
insb
aam
insb
repnz
es
xchg
push
add
movsl
fiaddl
movb
mov
push
cltd
loopne
mov
dec
add
pop
in
out
xor
test
in
in
std
pop
test
dec
inc
dec
push
fcompl
fs
sbb
pop
rcl
push
fnsave
mov
jne
fildl
out
test
movsl
dec
cmp
sbb
ret
jb
test
ret
xchg
cmp
jno
sbb
sub
leave
sbb
jns
mov
lds
pop
mov
mov
mov
test
pop
clc
mov
movsb
push
inc
pop
fstps
dec
test
frstor
jmp
mov
mov
mov
lret
xlat
in
pop
stc
lods
xor
popl
enter
shll
sarl
sub
ja
out
shrb
stos
dec
sahf
inc
dec
jnp
movl
sub
sti
sub
or
fcmove
leave
push
sub
flds
bound
push
lcall
arpl
adc
dec
mov
mov
testl
push
mov
jp
mov
sub
lcall
popf
mov
aam
xchg
dec
cmp
xchg
mov
xor
adc
dec
push
jmp
push
mul
jne
nop
lcall
popf
sbb
pop
ret
mov
pop
mov
fnsave
hlt
push
xchg
sahf
pushf
gs
fmull
insl
inc
and
or
cmp
push
add
cli
xchg
loopne
jl
pop
pop
adc
jnp
push
dec
lock
fstpt
push
les
pusha
je
push
sub
aam
push
ret
hlt
mov
cmpsb
out
mov
sub
sub
je
push
cwtl
gs
pop
mov
cmp
imul
test
mov
fwait
mov
sub
dec
sub
imul
mov
outsl
negb
repz
out
sbb
xor
xchg
sahf
dec
mov
jbe
shlb
inc
xor
sub
push
jne
insb
lds
mov
lcall
popf
push
jns
aas
in
inc
ljmp
dec
in
filds
call
push
sub
lea
or
iret
lock
loope
cmpsl
int
mov
cmp
lods
movsb
imulb
scas
das
daa
ljmp
cmovg
enter
mov
sub
inc
pop
das
dec
sub
or
or
cmpsb
jmp
arpl
cmp
sbb
push
jnp
fbstp
imul
shrb
cmp
sbb
cvttps2pi
shrl
jp
jns
adc
lods
sub
mov
pushf
cmp
fisubs
push
pop
xor
mov
aaa
sbb
arpl
mov
es
rol
fnstsw
or
or
pop
stos
mov
push
xchg
enter
push
insb
loop
hlt
push
cli
loope
dec
orl
and
inc
dec
xchg
shrb
jae
filds
mov
pop
jg,pn
inc
mov
mov
aas
push
mov
mov
mov
addr16
ss
scas
icebp
mov
mov
cmc
xor
pusha
and
mov
dec
xchg
dec
fs
lea
jge
dec
out
cmpb
jg
push
jno
scas
aad
or
xchg
imul
mov
out
aas
dec
mov
mov
shrl
add
lods
sbbb
jo
fisubs
hlt
fistpl
dec
in
mov
pop
lods
pop
shlb
out
pop
enter
mov
lcall
push
int3
adc
clc
sbb
lods
cli
jmp
bound
repz
xor
add
les
jae
push
pop
es
add
out
std
scas
mov
push
push
add
roll
lcall
push
or
xor
and
ja
das
dec
xchg
notl
xchg
les
test
jnp
cltd
pop
fmul
add
inc
inc
lcall
addr16
movsl
dec
loope,pn
fistps
or
sarb
dec
int
jp
cmp
or
or
add
inc
fs
stos
sahf
xchg
mov
jg
sub
push
leave
fisttps
mov
mov
xor
sub
fs
cltd
into
clc
shrb
stc
loope
test
dec
xchg
push
mov
jecxz
cltd
and
mov
inc
mov
mov
jp
pop
shl
ss
sbb
dec
xchg
popa
add
and
int
jns
fmul
inc
xlat
mov
jae
int
sbb
flds
inc
ljmp
or
imul
dec
and
cmc
clc
divl
shrb
pop
sbb
xchg
push
xchg
push
mov
nop
movl
pop
push
adc
adc
scas
mov
jbe
mov
dec
xchg
push
pop
mov
push
cs
xlat
ss
rcr
lret
jmp
faddl
out
ret
push
jp
xchg
data16
lods
push
jecxz
push
hlt
int
dec
leave
and
add
lods
pop
leave
pop
js
xchg
sub
pop
push
bound
divl
sahf
lret
push
adc
push
and
popa
mov
mov
dec
mov
xor
ljmp
jne
mov
sub
mov
inc
xchg
ds
lock
mov
mov
mov
sti
mov
scas
inc
push
in
imul
jb
mov
or
in
popl
push
add
shlb
mov
jne
jecxz
cmp
add
xor
sti
cli
das
lea
inc
push
imul
jnp
sub
dec
dec
pushf
loope
xlat
and
mov
in
inc
js
mov
arpl
dec
imul
xchg
pop
jge
fidivl
mov
fsubrs
jae
mov
imul
aas
fwait
sbb
movsb
cmp
jae
scas
jge
xchg
daa
pop
sub
xor
xchg
mov
and
cltd
adc
cmc
sub
out
fisubrl
push
mov
inc
jg
or
cmpsb
mov
xchg
xor
lods
cwtl
jp
or
divb
mov
mov
cmpsl
ret
xor
mov
push
or
sub
pop
dec
and
insb
insb
mov
loope
inc
out
test
popf
daa
imul
fidivrl
hlt
insl
ljmp
in
mov
push
insl
dec
out
or
cwtl
and
fs
dec
pop
daa
fists
mov
test
loope
sub
lods
cli
bound
sub
jo
fcomi
je
arpl
in
sahf
sub
iret
xor
aaa
add
fcompl
adc
jns
pop
pop
pop
mov
jne
clc
sub
inc
icebp
sbb
mov
adc
and
jns
ret
es
shll
inc
sub
mov
dec
mov
or
out
insb
xor
imul
push
pusha
les
repnz
add
mov
xchg
sub
fs
ret
sub
cltd
mov
idivl
dec
jge
shlb
cmpsb
sbb
leave
xchg
cmp
jns
jcxz
addr16
mov
aad
push
das
ficomps
lahf
mov
mov
pop
loop
mov
push
imul
xor
stos
add
push
cmp
lret
cmpsl
pop
std
cmp
jbe
into
aas
int
mov
mov
insb
inc
aas
or
clc
or
ret
inc
stos
adc
cli
cmp
xor
das
adc
imul
or
sbb
sarl
arpl
aaa
pop
inc
enter
xlat
xor
sbb
dec
pop
xchg
adc
jg
add
or
ss
cmp
pop
mov
adc
shl
rcr
out
repz
or
lahf
outsl
mov
scas
push
jne
mov
pop
cmpl
lcall
pop
mov
out
mov
cltd
insb
push
aas
pop
adcl
fwait
cmpsb
vpsllw
fiadds
dec
fldenv
out
xor
jle
inc
sub
dec
or
test
inc
into
push
push
shrb
pop
mov
repz
or
adc
int
dec
in
test
push
rolb
dec
mov
pop
loop
jmp
push
les
outsb
xchg
mov
mov
iret
lcall
clc
lret
lods
lea
lret
pop
insb
rclb
pop
pushf
lods
fs
aas
dec
mov
hlt
dec
mov
jns
push
pop
pusha
jae
dec
and
js
and
js
stos
dec
jl
dec
cld
lds
inc
outsb
insl
inc
sahf
sbb
pop
mov
repz
int
mov
push
shl
or
hlt
lea
sbb
mov
mov
lcall
push
inc
adc
and
sub
orb
lds
sub
stos
insb
push
jo
mov
xor
mov
jg
ds
in
ret
cmc
lods
push
mov
out
inc
inc
jne
in
pop
jno
hlt
cmp
ljmp
leave
cmp
xlat
xchg
stos
clc
icebp
ret
mov
jb
int
roll
mov
cmp
outsb
clc
cmc
add
xlat
test
jnp
dec
cmpsl
xchg
enter
push
push
leave
fidivrs
outsb
push
lcall
adc
push
add
push
dec
pop
push
movsb
repnz
mov
bound
xchg
hlt
dec
jae
add
ret
and
push
int3
popa
or
jecxz
idiv
xor
sbb
adc
hlt
popf
mov
repnz
sbb
dec
repnz
scas
pop
mov
jb
pop
ficomps
outsb
es
or
lahf
stc
addr16
movsb
push
pop
mov
leave
inc
cmp
sbb
inc
jnp
dec
mov
jmp
inc
shl
out
and
push
call
adc
push
scas
xchg
mov
lcall
dec
jns
xor
push
fiadds
imul
call
dec
mov
dec
or
push
aam
fnstcw
inc
push
inc
ss
inc
mov
jno
aaa
and
mov
mov
outsl
jmp
pop
mov
mov
or
movsb
mov
and
sti
mov
pop
adc
sbb
scas
sbb
out
cmpsl
push
std
leave
and
sub
pop
bound
shll
jno
jns
cmp
js
adc
out
pop
daa
mov
bound
jbe
mov
jg
inc
shl
sar
loop
add
adcb
xchg
push
sub
mov
sub
jmp
mov
shll
jbe
js
jbe
mov
faddp
aad
inc
xchg
lret
jo
andb
out
push
mov
and
insb
scas
out
mov
movsl
fdivrl
int
popa
movsb
jp
loope
scas
aas
pop
call
jo
sub
cmp
cwtl
mov
add
or
fwait
mov
xchg
mov
cmp
adc
aam
sbb
and
xchg
insb
fidivrs
sbb
shr
xor
or
cmp
fs
int
or
mov
and
inc
adc
or
loopne
mov
scas
rorl
cmp
push
jnp
jp
pop
inc
data16
imul
and
jno
push
dec
sub
out
push
or
call
vpcmpgtb
jo
sub
mov
push
adc
inc
ljmp
push
mov
xchg
into
lret
stos
or
jo
sbb
popa
pop
pop
xorl
gs
push
or
frstor
repnz
or
shll
xor
outsb
hlt
daa
je
jmp
pop
test
push
shrb
data16
rcll
jp
imul
push
and
rcrb
mov
push
xchg
inc
adc
ljmp
pop
scas
out
mov
mov
jae
jmp
in
jle
in
jp
std
cmp
dec
rcll
insl
shl
mov
out
cld
sbb
xchg
sbb
jo
pop
dec
or
nop
xor
push
sbb
sub
fsub
sbb
mov
ret
xchg
loopne
jp
and
repnz
mov
xor
ljmp
loope
jle
sbbl
ret
test
and
jbe
mov
fcompl
mov
call
push
rcrl
pop
ds
pop
add
lods
mov
hlt
add
jle
cmp
leave
fs
push
clc
dec
cld
and
mov
aaa
out
es
pop
cli
xor
cmp
test
sub
loope
jae
inc
sub
int
mov
and
jg
pop
push
mov
out
pop
jge
inc
and
add
faddp
lahf
mov
jge
jo
adc
push
mov
in
popf
js
cmp
out
push
scas
movsl
mov
rol
push
scas
push
ljmp
stc
insl
loope
jne
xchg
cmp
scas
test
cmc
sub
mov
push
push
inc
lcall
js
mov
pop
cwtl
adc
jg
scas
sub
pusha
popa
divl
adc
out
dec
int3
cmp
mov
inc
jmp
mov
dec
push
xchg
fnstenv
iret
cmp
jne
sbb
cmp
and
xchg
mov
dec
jp
fcmove
add
imul
mov
ficompl
push
sub
push
stos
mov
ja
idivl
xor
jge
jmp
in
xor
add
inc
pushf
jg
mov
pop
jle
hlt
jns
xchg
push
mov
sbb
xor
mov
jp
int
pop
shlb
mov
popf
test
mov
ja
mov
imul
mov
test
lahf
insb
xor
mov
pushf
sbb
iret
imul
mov
sbb
fistpll
fsts
jae
cmp
jno
aas
sahf
loopne
inc
add
xor
mov
mov
add
out
ficoms
cmpsl
mov
jns
sub
test
jmp
push
xchg
mov
adc
popl
test
sbb
pop
scas
push
pusha
adc
jbe
add
aaa
std
fnstenv
mov
inc
inc
adc
sbb
xchg
sub
lods
test
aam
shll
ja
cmp
ljmp
or
stos
enter
push
jb
mov
int
subb
pop
mov
daa
and
mov
pop
mov
push
std
fnsave
insl
movsb
mov
lods
lcall
lea
mov
jb
lods
fildll
scas
test
jbe
call
mov
inc
aas
pop
addr16
cltd
imul
and
xor
push
aad
aaa
jmp
and
aad
xor
mov
test
ss
sbb
pop
add
cmp
sti
sub
xor
sbb
mov
mov
arpl
cmpl
orb
fldl
dec
roll
scas
imul
mov
fbld
fld
divl
in
testb
xlat
push
sub
jbe
or
sub
xor
lahf
hlt
push
or
ja
lods
mov
or
push
jno
in
cltd
xchg
mov
cmp
pop
or
sub
in
lret
add
js
mov
sub
pushf
push
adc
cwtl
mov
push
inc
jl
mulb
out
push
mov
or
gs
pop
popf
xor
fsubl
inc
ret
mov
fwait
fwait
iret
mov
cmpsb
daa
sbb
inc
out
ds
pop
out
mov
int3
notl
sbb
dec
js
pop
jg
adc
lods
lret
lds
add
push
or
ljmp
dec
push
lret
lret
sub
sbb
icebp
sub
hlt
orps
inc
movsl
bound
in
fwait
clc
pop
ret
sbb
ds
and
in
jge
or
bound
out
fisubl
adc
mov
loop
jl
sbb
cmp
jb
cltd
push
fwait
popa
xchg
mov
imul
xchg
lcall
pushf
xchg
push
out
mov
leave
push
xchg
call
jae
sarb
ret
cmp
add
sarb
push
sahf
ds
into
sbb
push
ss
test
sub
mov
loopne
stc
lods
sub
jmp
push
adc
in
ja
mov
jmp
data16
in
push
test
mov
and
cli
push
mov
std
pop
mov
test
popf
mov
fidivrl
mov
aaa
xchg
in
push
sbb
sahf
add
mov
insb
fidivrs
sbb
dec
lcall
movsb
mov
adc
sarb
les
outsl
repz
jns
and
sbb
lods
inc
rcrb
fs
mov
aas
jno
imul
sbb
roll
repz
jmp
inc
and
cmp
lcall
es
imul
popf
enter
pop
add
icebp
clc
add
adc
adc
enter
push
or
into
xchg
mov
lcall
push
push
test
jmp
xlat
push
jb
xchg
jnp
icebp
call
sbb
mov
outsl
push
fstpl
pop
mov
dec
in
xor
lock
pop
sarl
fists
mov
dec
jnp
lods
push
inc
push
movsl
mov
and
sub
in
dec
cld
mov
inc
fsts
or
cltd
sbb
mov
dec
xchg
pop
shll
jae
sahf
mov
ret
sbb
push
ja
dec
push
gs
testl
push
mov
and
push
stc
push
les
push
shll
inc
data16
ja
sbb
inc
out
dec
jmp
sub
and
int3
es
loope
ljmp
xor
nopl
enter
shl
lret
dec
jns
push
idivb
mov
iret
xchg
sbb
sahf
push
incl
or
lret
das
sbb
xchg
adc
aad
repnz
mov
xor
and
test
imul
pop
xchg
ret
pusha
add
test
pop
pop
leave
add
inc
mov
cmpl
and
dec
nop
std
out
pop
fadd
stc
popa
cmovnp
and
or
adc
mov
push
smsw
mov
cwtl
dec
arpl
xchg
mov
subb
jns
dec
jecxz
sahf
lods
inc
mov
subb
xchg
rcll
mov
jle
push
inc
fwait
sub
sub
lret
add
inc
daa
jmp
adc
jmp
inc
pop
pop
add
add
fwait
inc
dec
decl
ljmp
lret
sbb
xchg
pop
jge
icebp
mov
scas
mov
mov
add
cmp
mov
fwait
stos
roll
and
lds
jecxz
into
mov
jp
cmc
xor
enter
jnp
push
mov
es
dec
inc
xchg
cs
pop
cmpsb
lahf
adc
enter
je
xor
sub
jb
pop
sub
cmc
push
sub
push
jl
stos
stc
xor
mov
cmpsl
repz
fistps
stc
lods
and
and
fdivs
mov
mov
je
ljmp
in
adc
mov
mov
outsb
xchg
sahf
nop
aam
cwtl
int3
mov
xor
aam
addr16
mov
mov
in
aad
pop
jb
pop
mov
into
pop
jecxz
sbb
adc
int
sti
lret
daa
mov
mov
arpl
cmpsb
fsubl
pop
mov
or
push
xchg
and
out
xchg
xor
mov
iret
adc
dec
into
cltd
xchg
nop
pusha
jmp
incb
pop
popa
sub
mov
mov
in
lcall
xchg
xorl
testb
bound
jno
add
adcb
pop
xchg
or
or
push
xchg
push
inc
pop
push
sbb
mov
fisubl
bound
sub
push
das
ljmp
fs
lock
xor
add
push
adc
add
inc
mov
or
cmpsl
cld
ret
fimull
push
cmpl
and
sbb
mov
out
cmp
mov
push
jg
xchg
add
mov
xor
pop
mov
mov
or
xor
push
je
jns
adc
jae
add
jge
mov
xor
jmp
lock
add
imul
jo
jge
stos
mov
into
sbb
sbb
push
inc
adc
push
cli
mov
movsb
scas
lret
jbe
cmp
call
insb
or
xchg
pop
enter
pop
pop
jg
insb
cmp
sbb
jne
into
and
mov
aad
mov
iret
lahf
and
dec
shl
sub
ret
aam
adc
int
fldenv
sti
push
adc
cmp
lock
adc
push
into
add
aaa
ljmp
fdivr
xlat
loopne
movsl
icebp
into
cwtl
pop
dec
mov
add
sub
add
mov
push
daa
xlat
out
insl
adc
dec
andb
mull
pop
shrb
mov
mov
mov
adc
sub
cs
mov
lock
ret
fadd
jle,pt
clc
push
pop
jmp
pop
das
mov
fsubrs
adc
add
jmp
xchg
dec
ret
sbb
ret
rcrb
xchg
or
iret
test
and
push
dec
mov
xchg
xor
nop
pushf
cmpl
pop
xchg
jnp
shll
jle
loopne
lret
jecxz
mov
adc
pop
mov
inc
dec
add
dec
cwtl
sub
scas
mov
or
push
jl
int
add
std
adc
rcl
push
jno
aas
sahf
lock
out
popf
add
jne
mov
dec
les
pop
cmp
pop
sbbb
and
les
int
scas
lret
rcll
ss
cmp
sbb
push
add
xor
jp
aas
or
add
repnz
divl
lds
les
call
add
mov
int3
xchg
popl
daa
ret
pop
imul
mov
pushf
inc
xor
shll
shll
fiaddl
mov
sti
or
lods
lea
mov
shr
popa
jl
jmp
sarl
movsb
lea
andb
arpl
imul
mov
fiadds
and
out
movsl
dec
ret
dec
aad
fcmove
fdiv
addr16
xchg
in
push
adc
cmp
out
xchg
fisubrs
or
pop
sarb
cld
ss
pop
data16
inc
xchg
cmp
inc
xchg
adc
lds
scas
sub
call
popf
pop
fnstenv
loopne
ljmp
inc
jo
xor
movsb
mov
pop
cmp
sub
cmpsb
push
mov
mov
stos
adc
push
inc
ja
cmpb
and
scas
rcll
rcr
aam
negl
mov
repnz
leave
int3
ja
xchg
das
inc
push
mov
pop
fstpl
mov
in
jae
js
xchg
rcrb
cmp
jb
xor
dec
and
xor
lods
mov
dec
mov
sahf
jne
scas
xchg
stos
and
pop
je
xor
sub
push
addr16
fstpl
xchg
pop
in
lds
in
or
fcompp
outsb
mov
lahf
pop
ss
dec
add
jbe
pusha
push
jp
das
jae
fmull
xchg
mov
test
or
dec
inc
shll
push
mov
mov
xor
push
jp
mov
repz
push
fcomps
repnz
lahf
mov
mov
test
out
shlb
ja
push
invd
dec
add
mov
sub
icebp
push
nop
push
pop
outsb
stos
xchg
lret
frstor
jg
gs
or
push
mov
and
add
pop
push
leave
outsl
testb
push
xchg
mov
jbe
xor
cmpsl
cltd
aad
sbbb
ret
loop
lret
jns
push
sbbl
sbb
mov
je
xor
push
push
xor
outsb
jg
insb
add
cwtl
push
ljmp
call
add
push
mov
or
pop
pop
jle
adc
fimull
adc
pop
inc
push
pop
cmp
xor
lods
cli
imul
dec
dec
repnz
xor
mov
xchg
xchg
mov
jnp
jb
sub
call
mov
jmp
int3
addr16
bound
xor
in
xor
pop
cmc
adc
jb
lock
cmpsb
xorps
test
cmp
outsb
xchg
ds
out
add
lods
popf
mov
jb
lds
scas
addr16
sti
and
jmp
je
sub
ja
fwait
jp
fimull
pop
ficoms
iret
push
sub
mov
pop
cmpsl
in
insb
leave
push
mov
js
add
mov
cwtl
jle
push
mov
sti
mov
push
popa
pop
xchg
mov
add
dec
repnz
aas
or
in
sbb
adc
fistpll
ret
pop
mov
xor
jp
adc
inc
jmp
mov
mov
aaa
push
shl
cmp
jne
sub
mov
pusha
shlb
adc
cmp
popa
and
mov
jb
daa
ret
stos
cmp
cld
les
lock
or
das
push
dec
cltd
cmpl
dec
fs
pop
rclb
imul
dec
pop
inc
roll
jl
rcll
inc
jmp
mov
outsl
xor
sub
push
imul
mov
dec
mov
rep
ds
movsl
subl
in
dec
bound
adc
fcmovb
outsl
push
dec
mov
sbb
push
xor
push
js
adcl
lea
out
pop
jbe
push
dec
mov
push
xchg
pop
add
mov
mov
je
push
std
ret
inc
mov
jno
pop
dec
adcl
test
sahf
mov
add
xor
and
cli
orl
int3
pusha
jne
in
sbb
test
rclb
sbb
incb
mov
pop
adc
and
mov
insl
pop
clc
push
adc
push
fistl
imul
cwtl
add
and
jmp
push
adc
icebp
xchg
cmp
mov
testb
pop
push
int3
xor
or
dec
xchg
push
aam
testb
mov
inc
jmp
mov
test
cmp
jp
sub
xchg
mov
xor
cltd
or
ja
test
inc
cli
push
cmc
and
add
std
andb
cmp
cmc
lcall
es
adc
rorb
enter
push
ret
cwtl
insl
imul
pop
fisubrl
notb
rcl
add
push
add
jp
inc
mov
inc
loop
adc
sbb
les
test
cmp
rcll
fs
pop
mov
cmc
popfw
outsb
lea
sub
sbb
push
pop
test
sti
orl
test
xchg
std
adc
mov
xlat
xchg
xchg
testl
leave
clc
int
loope
cmp
xchg
push
addr16
ss
inc
push
pop
in
jmp
fistpll
in
push
scas
lret
mov
inc
lret
add
leave
pop
add
and
fstpt
inc
fstpt
es
jg
or
iret
inc
sbb
inc
das
cmp
mov
lret
add
lcall
in
inc
int3
cmpsb
inc
and
pop
adc
sahf
inc
inc
lret
loop
adc
mov
push
ljmp
mov
dec
stc
rolb
clc
xchg
and
pop
pop
popf
dec
data16
sbb
mov
push
pop
or
out
and
call
xlat
lds
int
cld
ss
jns
and
and
cmpl
sbb
lods
cmp
ja
enter
cmp
pusha
in
shl
jecxz
push
int3
shlb
inc
fcomi
mov
ds
imul
sub
aas
sbb
pushf
and
inc
xchg
or
icebp
int
iret
lds
sarb
mov
push
stc
std
push
cmp
push
cwtl
jno
add
inc
imul
jge
mov
cmpsb
out
movsb
xor
rorb
scas
test
or
fcmovnbe
loope
int
cmp
cmp
adc
lcall
std
ss
mov
jecxz
sub
push
push
jae
cmpsb
pusha
dec
jmp
out
mov
rorb
scas
jecxz
xor
mov
sub
fisttpl
cmp
and
xchg
sbb
sub
adc
push
dec
pop
or
imul
dec
in
ret
test
mov
inc
insl
pop
arpl
inc
aam
xchg
jne
inc
pop
xchg
lea
je
out
fidivs
pop
jmp
jl
push
and
cmp
lods
enter
mov
add
and
sbb
ljmp
push
push
insb
mov
push
in
adc
jl
cmc
add
mov
push
sub
lret
and
cmpb
pusha
add
pushf
sub
inc
push
fidivrs
in
pop
aam
pusha
add
out
nop
adc
fsts
mov
mov
jl
xchg
fs
mov
test
rcll
dec
or
clc
in
pop
int
xchg
rep
xchg
je
cmp
stos
fadd
mov
imul
test
je
mov
loopne
fidivrs
cmp
push
das
daa
std
and
pushf
mov
iret
mov
pop
sahf
es
sub
lods
xchg
fwait
outsl
xlat
lret
push
in
imul
hlt
jnp
adc
test
dec
mov
lock
in
leave
adc
or
arpl
adcb
fiadds
test
push
sbb
int3
mov
cs
int3
incl
lods
jecxz
pop
decl
rcll
xlat
mov
fwait
imull
cwtl
test
mov
xchg
cmpsb
add
xcrypt-ofb
cmpsl
ljmp
mov
cli
mov
jp
in
pop
lods
jecxz
aas
lret
int3
jno
lods
lcall
loope
push
xor
mov
rolb
sub
stos
negb
mov
and
push
jno
push
outsb
loop
int
repz
clc
std
movsl
push
mov
xor
js
stc
pop
jmp
jecxz
lds
sbb
add
scas
lds
imul
mov
dec
adc
mov
psadbw
scas
mulb
cld
cmpsl
std
cvtps2pd
adc
cmp
sub
and
movsb
mov
gs
shld
sub
sbb
cmp
in
cs
mov
and
insb
mov
mov
test
mov
test
push
in
cmp
je
jb
ja
mov
mov
ljmp
cld
xchg
fs
sbb
dec
mov
repnz
mov
xor
testl
int3
cli
out
je
rcl
sub
sub
jl
loope
jge
aad
adc
sbb
push
adc
mov
ss
out
pop
insb
scas
sbb
repnz
sub
cmp
push
push
loopne
loope
add
xor
dec
fmuls
lret
mov
or
sbb
push
fucomi
mov
clc
aad
cli
mov
std
sub
out
xchg
aam
jae
jno
popa
cmp
imul
das
dec
or
test
test
scas
loop
xchg
gs
sub
xchg
cwtl
test
xchg
into
sarb
fiaddl
dec
mov
inc
arpl
in
je
push
insb
data16
neg
jmp
int3
cmp
inc
movsl
adc
inc
ds
insl
mov
ljmp
cs
adc
std
nop
fistps
js
mov
xchg
xor
gs
pop
xchg
sub
jo
pusha
in
je
das
scas
add
push
lret
or
xlat
mov
sbb
repnz
inc
lahf
mov
cmp
cmpsb
xchg
out
mov
cmp
subl
inc
rorb
aam
das
inc
loop
cltd
cmp
ja
cmpsb
sbb
lret
cwtl
inc
aas
flds
pop
adcl
pop
movsb
and
push
cmpb
outsb
stos
pop
or
and
xor
and
lds
ljmp
out
mov
cmpsl
sti
cmp
dec
mov
into
ficoml
adcl
out
in
mov
aas
fwait
cmp
pop
dec
outsl
inc
pop
and
xor
adc
push
mov
adc
mov
daa
push
pusha
pop
div
mov
pop
fcomip
test
add
ret
jnp
ret
mov
xchg
cld
lcall
mov
or
lock
into
mov
cltd
je
inc
xchg
push
mov
jmp
sbb
dec
adcl
pop
negb
fdivrs
scas
std
std
mov
mov
rorl
inc
pop
xchg
in
inc
rolb
jp
push
cmp
js
cmpsl
aad
hlt
fbstp
arpl
enter
addr16
add
jo
push
cltd
sbb
call
mov
lret
sbb
jns
adc
out
push
push
out
xchg
test
scas
fmuls
mov
cmp
lret
inc
ljmp
push
imul
nop
das
js
scas
pop
popa
and
jmp
ret
xchg
test
lret
add
push
xchg
orb
fnstsw
test
xor
inc
adc
push
test
ror
add
dec
stos
icebp
cwtl
add
stos
pop
rclb
pop
mov
xchg
jae
mov
pop
cmp
fwait
inc
sub
sarl
out
jbe
shll
cmpsb
inc
dec
xor
pop
xchg
bound
xchg
sub
popa
out
mov
jae
sub
mov
mov
call
loope
pop
out
cltd
stos
dec
nop
xchg
hlt
cmc
cltd
in
dec
mov
or
add
les
adc
mov
jae
adc
std
ljmp
or
lret
lods
ret
pushaw
dec
mov
push
sbb
js
xlat
leave
add
neg
rorl
xor
push
sub
ret
or
dec
sbb
hlt
pushf
mov
gs
dec
xchg
xchg
loop
jecxz
ret
negb
and
cmp
and
mov
inc
push
loope
repz
xor
mov
ret
or
sub
sti
enter
sbb
test
xor
and
xchg
shlb
test
jae
fistpl
mov
mov
ror
in
movsb
sbb
scas
mov
test
mov
stc
dec
test
mov
cmp
les
push
add
sub
or
mov
mov
fisubrl
cmc
gs
inc
ret
mov
dec
enter
xor
ds
jecxz
cwtl
pop
loopne
cs
cltd
sbb
jle
sbb
xor
sub
sbb
out
nop
mov
fstp
enter
mov
jge
leave
mov
push
imul
test
movsl
mov
mov
mov
sbb
mov
xor
mov
mov
out
dec
xchg
movsl
outsl
sub
push
mov
aas
mull
adc
jae
or
fiaddl
add
out
into
insb
lods
jecxz
or
ficoms
mov
push
xlat
or
movl
mov
mov
inc
adc
mov
sub
inc
push
or
cmp
aaa
pop
add
sub
test
push
mov
orb
adc
aaa
sbb
cmp
mov
lods
andb
jl
and
xchg
xor
loope
or
sbb
popa
pop
adc
iret
test
insl
sbb
inc
xlat
ds
or
or
insb
mov
ljmp
add
std
pushf
fsubl
repz
in
popf
aaa
cs
or
cmp
jge
xlat
or
mov
push
sub
xor
pop
cmc
sti
sbb
adc
pop
enter
loope
test
pop
call
jle
ja
jp
test
mov
or
jge
add
arpl
mov
popa
mov
push
pop
insb
xlat
fidivl
pusha
rorl
fidivl
lret
shrb
lcall
mov
pop
or
std
pop
cltd
and
pop
mov
testb
mov
les
xchg
jecxz
scas
fldenv
cmpsb
mov
cmpsl
sub
cmpsl
sar
sub
mov
stos
mov
xlat
icebp
add
in
loop
mov
std
mov
out
mov
subl
into
adc
test
vmaxpd
xchg
into
adc
xchg
repnz
lret
lret
pop
jl
cld
push
jmp
fcmovnbe
push
add
iret
or
and
cmpsb
xchg
mov
jb
pop
fistl
sub
fcmovb
lods
movsl
pop
mov
add
xchg
push
cltd
push
inc
iret
stos
sbbl
adcb
cmp
movsb
out
sub
sub
jecxz
lahf
sbb
loopne
call
lock
jbe
xchg
out
xor
ror
fistps
ret
fdivp
dec
jge
cmpl
or
pop
andb
mov
out
pop
jge
dec
mov
fbstp
jge
ja
out
mov
push
addb
in
daa
xchg
mov
cltd
add
mov
dec
lret
or
pop
sti
insl
iret
pop
icebp
jno
jecxz
cmp
hlt
xchg
mov
mov
out
push
xor
xor
push
inc
pushf
cltd
add
mov
cmp
sub
call
push
rolb
mov
in
mov
rorl
das
test
xchg
out
mov
inc
test
das
repnz
les
push
mov
aaa
lods
cltd
pusha
xchg
xlat
push
xlat
icebp
sbb
mov
sub
push
cwtl
inc
jbe
xchg
stos
jp
mov
xor
mov
push
and
xchg
mov
mov
mov
sbb
xor
inc
push
imul
and
push
sti
dec
stc
pop
xchg
jo
pop
mov
lea
es
int
cmp
inc
rorl
jmp
pushf
jb
dec
je
adc
pop
inc
sbb
pop
pop
lret
and
inc
cmp
jmp
push
pop
add
add
and
aad
repz
sub
xorl
add
scas
push
lret
cs
dec
cmp
stc
in
fsts
xor
cli
gs
or
ret
shll
addr16
mov
sbb
in
and
pop
jle
lods
jo
scas
push
or
add
jmp
push
adc
fwait
xor
push
cld
mull
push
das
dec
xor
pop
pop
fcomps
scas
jecxz
movsb
pop
xor
out
rorb
jle
mov
cmpsl
icebp
mov
push
inc
mov
dec
fwait
shrl
rcr
pop
std
push
jp
inc
dec
jne
lods
jbe
mov
fnstcw
scas
jbe
fs
pusha
jmp
lds
push
sbb
out
lock
mov
push
adc
iret
sbbb
pop
mov
mov
adc
mov
lcall
fsubs
cmc
stc
pop
pop
inc
inc
add
and
clc
inc
xor
jl
inc
pop
fmull
movsb
leave
push
lcall
mov
or
jmp
pop
hlt
sub
cmp
or
insl
xchg
sarb
cltd
and
cmp
jb
outsb
pusha
xchg
clc
popf
push
and
test
fisubs
jge
in
maxps
sub
pushf
and
mov
cwtl
ds
je
sar
test
mov
jge
ljmp
xor
xchg
cs
dec
push
sub
adc
push
loop
jge
rolb
xor
in
es
out
orb
out
mov
pop
stos
ret
enter
add
sbbb
xor
movl
cmp
faddl
mov
ja
popa
ret
test
lock
xchg
orb
push
adcl
pop
mov
not
out
dec
leave
mov
aas
xchg
jg
std
xor
les
push
and
aas
cmp
adc
movsl
pop
pop
jno
or
pop
pop
pop
fldl
push
test
xchg
test
mov
shl
test
sub
shll
push
inc
lods
inc
int
add
cmp
int3
divl
add
je
test
test
jge
sbb
das
xchg
jnp
test
mov
mov
les
adc
mov
rcrb
jecxz
lods
std
outsl
xlat
xchg
pusha
push
dec
imull
adc
mov
cmpsl
dec
xlat
int3
push
jnp
add
sub
xor
sub
push
sub
adc
pusha
icebp
mov
loop
int
sti
imul
add
or
mov
cmpl
sub
inc
mov
into
xchg
mov
xchg
sti
inc
push
sbb
push
fwait
int3
jbe
jmp
xlat
inc
push
pop
out
push
sub
jns
fcomps
sub
lds
test
icebp
lods
jno
lcall
iret
inc
test
icebp
sub
jnp
adc
adc
fwait
dec
mov
sarl
dec
aad
add
add
in
pop
enter
push
stc
dec
adcb
jmp
in
nop
mov
outsb
outsb
mov
popa
pop
cmpsl
or
lods
push
inc
inc
push
sub
clc
xor
pop
cs
or
pop
push
cmp
inc
dec
xor
popa
enter
mov
cmp
fnstenv
aas
in
inc
sbb
and
outsl
sub
int3
sbb
cmp
add
inc
fs
bound
xchg
inc
push
lret
andl
xchg
cmp
flds
fstpl
jg
addl
xchg
cmpb
mov
jmp
fstpt
int3
add
push
es
push
test
cs
and
add
fdivr
mov
jne
pop
mov
fiadds
sbb
cld
xchg
cmp
mov
jl
outsl
dec
inc
lea
sub
aas
add
fs
xchg
ja
jns
shlb
sub
mov
mov
hlt
mov
pop
adc
imul
pop
lea
dec
pop
cmp
sub
out
fsubs
cld
adc
add
mov
bound
test
lahf
adc
enter
dec
into
mov
xchg
int3
inc
cmp
lret
adc
cmpsb
jnp
jae
sarl
mov
jp
push
cld
mov
shll
mov
ss
jno
test
dec
push
pop
movsl
in
data16
xor
pop
sti
or
mov
fdivrl
push
pop
adcb
fnstsw
pop
xchg
jmp
lcall
adc
and
mov
mov
rolb
outsb
adc
iret
fisttps
mov
push
test
mov
cmp
stos
mov
cmpsb
sahf
push
inc
xor
fmulp
enter
int3
mov
in
mov
icebp
loopne
mov
in
sub
gs
push
cmp
pop
out
shll
sbbb
mov
out
dec
in
xlat
negl
fidivrl
clc
pop
dec
mov
xchg
sarl
mov
push
loope
std
popf
movsl
cmc
and
or
roll
sub
pop
addr16
push
xor
push
pop
loop
add
sub
inc
push
cli
fsubrl
lds
mov
out
das
fstpl
sahf
cld
mov
mov
push
or
sbb
js
movsb
stc
je
xorl
fmull
out
xchg
dec
push
leave
xor
popa
sbb
out
mov
movsb
fcmovnb
and
push
dec
mov
push
dec
pop
into
aad
dec
or
scas
outsb
mov
push
adc
inc
push
cmp
or
push
or
fnsave
movsb
mov
rcll
jno
mov
push
mov
adc
frstor
sbb
pop
jo
xchg
fs
dec
mov
fsubrl
sub
mov
mov
scas
mov
push
mov
and
stos
and
mov
outsb
ss
dec
sbb
jecxz
xor
and
shlb
and
sbbb
push
das
mov
sub
lret
jo
ret
call
cltd
xchg
push
pop
dec
xlat
mov
call
out
mov
mov
jbe
inc
and
lock
das
fs
scas
out
or
jecxz
cmp
pop
imul
stos
stc
mov
ret
add
push
pop
lea
cmc
sbbl
jp
out
in
in
ss
dec
data16
into
data16
jnp
mov
test
xchg
pop
push
jb
sbb
jae
mov
ret
movsb
jge
inc
push
pop
mov
mov
aam
sub
jmp
push
xchg
leave
mov
jno
mov
sub
lahf
sub
push
jne
ss
cwtl
lret
cmp
dec
xchg
aam
sub
sbb
je
sub
adc
cltd
aam
cli
decl
js
repnz
mov
xor
add
leave
mov
sub
sahf
xor
stos
jge
inc
lahf
inc
xchg
add
data16
icebp
jecxz
outsb
mov
imul
call
lea
add
add
inc
in
lahf
test
adc
test
inc
push
sbb
test
mov
jl
js
lret
xchg
push
shll
sub
shlb
in
adc
pusha
and
mov
mov
mov
xor
pop
test
fstpl
mov
sahf
or
jecxz
lea
inc
mov
xor
xchg
jb
das
inc
in
mov
into
pop
inc
icebp
push
xor
into
jg
inc
insl
xor
scas
adc
std
inc
mov
in
mov
push
pop
adc
dec
fbstp
dec
sub
pop
lret
hlt
cmp
mov
mov
sarl
jle
sub
xor
decb
sbb
pop
mov
push
arpl
pusha
test
add
xchg
cmpsl
test
inc
sub
lcall
dec
sub
jg
repz
mov
scas
jns
inc
imul
test
out
fwait
int3
mov
scas
or
dec
jg
cmovg
rclb
dec
mov
stos
lcall
mov
lock
orw
push
xchg
jmp
icebp
roll
sbb
icebp
cmp
dec
iret
adc
inc
fst
jmp
adc
add
xor
pop
pop
mov
in
ja
jl
mov
push
pop
mov
gs
push
fidivs
int
mov
out
sbbb
pop
std
pusha
in
rorl
jns
lock
aas
adc
mov
fnstenv
ss
stc
in
aad
lds
daa
sub
jns
sahf
pushf
out
filds
or
sub
js
push
xor
xchg
addr16
mov
sahf
fwait
xchg
sbb
mov
mov
push
fidivrs
xor
xor
mov
or
fsqrt
push
cmp
dec
jp
cmp
jns
jge
std
aas
ja
rcll
fcompl
mov
sbb
mov
push
xor
inc
dec
insb
fdivr
fidivrl
sub
xchg
sti
cli
ljmp
mov
aad
dec
lea
cmpsb
jg
sub
jle
sbb
aaa
push
mov
dec
mov
sbb
cmpsb
pop
cmp
push
pushf
aad
push
adc
and
test
arpl
movsl
jno
fstps
xchg
mov
in
daa
outsb
pop
or
ljmp
lret
cmp
clc
es
jno
mov
movsl
jg
ss
aad
test
lds
xor
popa
sub
in
into
imul
jmp
test
std
push
mov
jno
sarb
pop
shlb
into
das
iret
and
lret
inc
sub
repnz
dec
sbb
inc
or
push
sti
into
gs
bound
sub
jl
add
lods
sahf
push
mov
ja
xchg
ret
lods
fwait
inc
pop
js
into
in
mov
fucomp
mov
orl
sub
clc
push
icebp
cltd
push
pop
sbbl
pushf
dec
roll
pushf
jns
jmp
ret
add
mov
dec
aam
out
fwait
or
lods
into
push
imulb
jp
add
daa
call
dec
rorl
adc
pop
insl
lcall
pop
inc
pop
pop
lahf
mov
or
xchg
sub
pusha
aad
inc
lock
xorb
aad
leave
nop
sub
add
in
jg
xor
sbb
xchg
enter
aaa
cmpsb
rclb
das
repz
jmp
sub
jb
shlb
pop
lods
jb
shll
sbb
xchg
mov
call
imul
hlt
jo
test
inc
mov
loope
xor
mov
fists
xchg
cmpsl
dec
cmpsb
xor
mov
ret
cmc
mov
mov
add
jnp
jae
jbe
sbb
scas
call
push
dec
sti
dec
rcrb
fst
mov
rcrb
aam
xchg
int3
lcall
pop
cmp
jne
inc
adc
stc
dec
inc
mov
pop
dec
jno
ds
pusha
mov
or
inc
cli
popf
xor
inc
cltd
rol
inc
js
and
int3
adc
out
jbe
xlat
sahf
cmp
fists
pop
pop
cmp
jle
bound
ja
sub
int
addb
cmp
mov
jp
and
xchg
out
fbstp
or
xchg
shl
mov
push
insb
push
and
adc
cmp
add
mov
mov
and
add
jg
dec
inc
or
shrl
jmp
pushf
dec
xor
mov
fwait
loopne
movsl
push
adc
out
jp
push
test
std
sub
lea
fldenv
in
and
sbb
mov
popa
imul
sahf
push
jbe
pop
xchg
popl
mov
mov
stc
dec
es
mov
xorl
mov
test
dec
fmul
faddl
mov
mov
imul
std
xchg
outsl
xchg
push
mov
jp
xor
xchg
lods
fwait
repnz
dec
add
mov
adc
add
push
imul
push
call
lret
or
or
adc
call
addr16
pop
push
inc
jne
mov
jmp
fisttps
gs
inc
out
pop
and
dec
add
jb
mov
cmpsb
sbb
dec
xorl
push
mov
imul
jmp
mov
cmpsb
cmpsb
or
in
lea
jo
ljmp
scas
dec
inc
mov
lahf
subl
jno
lret
dec
cmp
and
mov
dec
push
pop
xchg
sub
fisttpll
jnp
dec
mov
lret
stos
xor
fimuls
push
inc
adc
jp
or
int
dec
push
xor
or
cmp
data16
mov
dec
insb
in
xchg
xor
nop
pop
insb
js
out
add
pop
jns
adc
pusha
aaa
lds
loop
adc
dec
jl
dec
add
rolb
ret
fildll
adc
mov
cwtl
lahf
xchg
jecxz
sub
hlt
cwtl
popf
cmp
sbb
pop
mov
jp
mov
fisttps
dec
mov
cmp
sbb
out
loop
jl
pushf
pushf
mov
data16
popa
add
xchg
inc
xchg
mov
xchg
stos
dec
sub
adc
call
and
xor
scas
jmp
mov
repz
dec
int3
xchg
xchg
pop
bound
sub
or
push
sub
out
scas
ret
adcb
dec
faddl
cmpsb
pop
xor
out
or
addb
nop
lcall
scas
scas
ljmp
test
mov
mov
mov
stos
sub
outsl
into
xchg
andb
xchg
push
mov
mov
and
xchg
ljmp
call
ss
pushf
push
mulb
sbb
popf
jge
mov
sbb
in
mov
pop
inc
push
xrelease
mov
mov
cmc
loope
movsl
inc
and
aaa
xor
jl
cmpb
push
dec
mov
cmpsb
ds
sub
rolb
sarb
jo
jb
out
pop
cmc
push
in
in
out
sub
cmc
dec
cmp
push
cmp
das
cmpsb
arpl
xchg
fcomi
cwtl
add
fcom
push
fst
and
setnp
aam
in
daa
pushf
cltd
addl
out
xor
les
push
loop
cmp
icebp
jmp
mov
daa
movsl
insl
lods
es
mov
test
push
jns
jnp
in
mov
add
lods
push
jb
jb
cmc
adc
push
xchg
stos
inc
adc
scas
je
pushf
xchg
cmp
add
push
test
iret
xchg
cltd
xorl
mov
inc
mov
push
imul
push
jmp
dec
nopl
adc
test
insb
subl
sub
add
push
push
in
xor
rcrb
fdivrl
inc
cwtl
lahf
dec
pop
pop
out
push
out
jg
cs
sbb
xchg
jb
call
ljmp
sub
pop
xchg
push
out
sbbb
add
lret
cs
xor
jp
and
and
and
rorb
sub
jle
push
sti
lret
xchg
lret
sahf
fdivl
inc
and
test
sbb
jp
pop
jne
call
jbe
in
cmp
jle
mov
mull
test
sub
jl
dec
pop
ret
ds
dec
aas
sti
sub
push
add
mov
xchg
pop
test
inc
fisttpll
jge
out
pminsw
movsb
xlat
xor
sahf
and
pusha
jg
scas
imul
leave
nop
sti
addb
movsb
test
movsb
mov
das
jnp
fistpl
ss
out
out
pop
dec
and
sub
lahf
adc
icebp
push
jns
mov
mov
cmp
jg
mov
sbb
rcrb
call
push
sbb
pop
dec
sahf
adc
mov
shr
pop
stos
push
jmp
mov
sbb
adc
cmp
cmp
adc
dec
jge
sbbl
pushl
cmp
shlb
jno
dec
loop
ljmp
insb
outsl
test
lcall
mov
push
lds
icebp
and
pusha
adc
lcall
add
xor
ss
pop
cmp
pop
test
adc
jmp
into
cmc
cltd
push
xchg
mov
enter
popa
imul
std
aaa
sbb
mov
dec
jbe
jle
std
jl
shlb
aad
cmpsl
cmp
jp
mov
lret
pop
mov
cmp
dec
xchg
movsb
rolb
dec
mov
push
jo
sti
sbbb
xchg
rcrl
lret
int
mov
jmp
pop
gs
mov
pop
dec
mov
xor
pop
push
das
adcb
or
pop
stos
xlat
jo
jge
mov
sysexit
sbb
xor
andl
cmp
loop
movsl
inc
fcoml
sub
push
ljmp
push
mov
xchg
mov
mov
pushf
jbe
dec
pushf
mov
inc
inc
and
push
gs
nop
add
sbbl
in
lods
and
inc
in
push
bound
xchg
jp
in
in
fbstp
jae
jge
in
leave
push
push
cmpsb
sbb
pop
cli
jg
jae
punpckhbw
and
jnp
and
adc
lods
stos
add
jne
adc
cmp
push
lods
cmpsb
xchg
stos
push
xchg
adc
and
fs
push
in
pop
mov
adc
iret
and
xor
inc
cmc
call
arpl
add
cmpsb
repz
xor
xor
movsb
nop
jne
lds
clc
dec
outsb
call
pop
adc
push
pop
jmp
add
decb
mov
push
push
negb
arpl
ret
daa
inc
sub
sbb
popf
psrld
xchg
aaa
lret
push
mov
rolb
xchg
push
ret
aad
loopnew
push
pop
icebp
xchg
scas
cltd
or
shll
lea
push
jo
push
insb
inc
pushl
scas
mov
jecxz
adcb
push
mov
adc
popa
xchg
push
popw
daa
inc
loope
xor
jne
in
xchg
pop
sar
xor
pushf
push
incl
cmc
pop
cmp
push
jo
add
xchg
in
adc
dec
inc
mov
cmp
mov
push
fidivs
stos
mov
insl
popf
mov
mov
lret
adc
cli
lds
repz
insb
or
lahf
adcb
ss
inc
pop
pop
arpl
in
mov
test
xlat
push
sbb
sub
xchg
imul
mov
iret
pop
adc
xor
mov
pop
sub
mov
push
scas
sti
push
xor
sahf
sbb
cmp
sarl
fs
aad
hlt
pop
cmp
mov
xchg
xchg
push
sbb
repnz
pop
cmpsl
cmp
inc
pop
lods
bound
add
stos
cmp
inc
xchg
and
or
sbb
in
xlat
je
test
adc
sbb
fsubrl
jle
fldl
lret
jmp
ret
fs
mov
mov
cmp
and
fdivrp
mov
stos
into
mov
sub
clc
lcall
mov
adc
popa
hlt
pop
rcl
popa
ret
ds
out
push
in
out
push
addl
inc
lods
sbb
popa
sbb
xchg
repz
xchg
adc
enter
lahf
push
pop
iret
xchg
xchg
test
jno
lret
stos
mov
insl
add
gs
push
bnd
xor
sub
ret
cmp
xor
xor
jb
into
shrl
sub
push
push
das
lea
lock
add
xchg
das
xchg
xchg
mov
test
xor
cmp
push
push
sub
out
addr16
mov
mov
fdiv
data16
pop
aad
outsb
aam
insl
mov
out
push
dec
cwtl
out
sub
or
int3
xor
xlat
sub
pop
cmp
pop
ret
jae
inc
bndldx
pop
bound
inc
dec
aaa
test
nop
mov
push
cmpsl
cmp
add
push
flds
stos
jnp
mov
sbbb
push
pushf
and
divb
and
xchg
cmpsl
cmp
or
cld
lods
sub
daa
and
ss
sbb
mov
in
push
xor
movsl
xchg
adc
xor
and
int
jo
mov
add
push
outsb
jl
or
adc
add
pop
mov
mull
lret
ja
lds
loope
lahf
jmp
xchg
insb
mov
movsl
movsb
jns
fistps
jl
cmp
js
or
stos
loope
test
xchg
imul
dec
subl
inc
push
test
or
subl
das
dec
jno
lret
insl
stc
frstor
inc
test
push
movb
jge
scas
mov
and
cmp
scas
push
subb
repz
test
pop
and
in
xchg
movsb
mov
shl
mov
sahf
add
hlt
or
push
aad
lea
rcl
lcall
jge
lea
sbbb
jb
or
push
jo
aas
mov
lret
dec
ja
ja
notb
addb
mov
inc
mov
iret
jge
or
les
mov
cmp
add
cmpsb
test
rcrb
sub
jle
movb
xlat
ret
xor
pop
push
stos
lcall
emms
les
addr16
das
xchg
bound
rcrl
cwtl
add
jae
mov
add
jge
sti
in
sbb
subb
fisubrs
fwait
lods
pop
sub
mov
and
iret
sub
ret
xchg
push
dec
or
dec
jl
fcom
aad
aaa
xchg
flds
xchg
js
testb
xor
adc
xor
and
jmp
xor
out
mov
add
shll
xchg
hlt
jge
cmp
out
mov
stos
pusha
xchg
frstor
bound
xor
push
repnz
aas
ljmp
or
imul
lds
mov
mov
test
in
cli
jb
ljmp
cld
lods
stos
jne
lret
add
lahf
push
icebp
adc
sub
mov
jp
fisubrl
addb
jb
test
ret
pop
mov
jl
test
and
pop
fstps
int
xchg
icebp
mov
lods
enter
add
ljmp
mov
das
scas
pop
sub
lret
pop
sahf
jge
rclb
sub
fwait
pop
pop
ja
lods
push
push
sub
test
movsl
push
xchg
cmpl
pop
sbb
stos
and
aam
mov
roll
in
fxch
pop
movsl
mov
push
mov
call
in
cltd
fwait
lods
and
fisttpl
and
sahf
enter
xchg
cld
ss
mov
jb
xchg
xor
push
cmp
dec
bound
mov
or
lcall
popa
pop
cltd
jnp
and
les
imul
mov
mov
push
adc
popa
pop
stos
loopne
inc
cmpsl
inc
adc
out
cmp
scas
cltd
add
mov
loopne
leave
sti
popf
mov
and
das
lret
enter
clc
inc
fwait
aad
lcall
add
ss
insb
lock
fucomip
stc
insl
lods
jae
mov
ja
pop
test
jge
sti
fcmovne
pop
and
hlt
lods
adc
roll
outsl
add
inc
lahf
fcmovb
les
push
mov
jle
clc
inc
orb
imul
mov
icebp
jl
xchg
pop
mov
xor
dec
jecxz
ret
jne
imul
add
clc
push
jmp
mov
jmp
imul
mov
pop
jp
and
mov
aas
cwtl
stos
xchg
movlps
movsl
inc
cmc
ds
in
push
pop
xlat
add
xor
mov
lods
mov
movsb
pop
pop
dec
cmpsb
test
cltd
lds
std
mov
and
mov
xchg
int
mov
mov
icebp
mov
push
loope
mov
aam
in
xor
xchg
pop
ljmp
rcl
or
cmp
maskmovq
testl
cmc
inc
out
mov
sbb
lock
inc
lods
in
aam
push
mov
add
add
je
add
ja
push
add
add
jb
add
add
je
add
push
add
add
add
jae
add
outsb
fs
ja
data16
jne
je
add
add
outsb
add
add
add
jae
add
data16
add
add
add
popa
add
add
add
data16
add
add
add
outsb
add
outsw
jb
jo
jb
outsl
add
add
je
jns
add
je
popa
add
add
add
outsl
add
jb
add
popa
add
popa
add
outsb
add
je
jo
jne
outsb
add
jae
push
add
je
add
imul
je
add
data16
je
push
add
add
insb
gs
outsb
gs
add
jne
add
imul
add
outsl
ja
jb
add
jo
outsb
imul
add
jo
jae
outsb
add
add
add
add
insb
gs
arpl
jae
ja
imul
add
add
add
add
add
jb
outsl
add
imul
je
add
add
popa
jb
add
outsl
outsb
add
add
dec
popa
imul
ja
outsl
add
add
push
jne
jae
je
add
popa
jb
sub
add
add
add
insb
gs
jae
add
add
add
add
add
add
add
add
jae
popa
add
add
add
add
popa
outsb
add
add
imul
jne
jo
add
popa
outsb
add
outsl
add
jb
add
outsl
add
add
bound
jne
je
add
imul
