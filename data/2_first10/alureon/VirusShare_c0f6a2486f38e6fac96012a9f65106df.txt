push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
push
mov
sub
mov
push
push
push
push
mov
movl
call
xor
mov
movl
movl
mov
mov
movl
mov
mov
mov
mov
mov
imul
mov
xor
add
incl
mov
push
push
push
push
mov
call
mov
mov
mov
mov
mov
xor
mov
div
mov
mov
mov
mov
sub
not
add
xor
mov
mov
incl
add
cmpl
jb
cmp
je
mov
jmp
push
call
mov
push
push
push
push
mov
add
call
movl
mov
push
shl
add
incl
push
push
push
call
mov
mov
cmp
je
push
call
mov
push
push
call
mov
call
add
cmp
je
cmpl
jne
lea
push
push
pop
add
xor
div
push
pushl
pushl
call
mov
push
push
push
pushl
call
mov
lea
add
lea
add
mov
lea
mov
mov
mov
and
call
mov
mov
mov
call
mov
mov
push
push
mov
xor
push
push
mov
mov
call
mov
lea
push
push
push
lea
push
pushl
movb
pushl
movb
push
call
push
push
push
call
mov
call
mov
call
test
je
xor
pushl
mov
pushl
pushl
pushl
call
mov
cmp
jne
push
call
cmp
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
mov
push
mov
sub
mov
push
mov
push
push
lea
mov
call
lea
xor
call
test
je
test
je
cmpb
je
mov
push
call
mov
push
mov
call
mov
lea
push
call
mov
test
je
push
push
push
push
call
add
push
call
test
je
push
push
push
call
mov
test
jge
push
push
push
call
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
call
mov
mov
pop
pop
pop
call
leave
ret
push
mov
sub
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
jne
inc
jmp
andl
push
push
lea
lea
cmpl
mov
je
mov
mov
jmp
mov
mov
add
xor
nop
movb
mov
mov
inc
cmp
jb
mov
test
je
lea
movsbw
mov
add
inc
mov
test
jne
lea
push
call
mov
test
je
mov
mov
add
andl
cmpl
mov
je
mov
mov
testl
je
push
call
mov
and
push
pushl
call
push
jmp
push
call
push
call
mov
add
add
push
pushl
call
push
mov
call
cmpl
je
incl
mov
mov
lea
cmpl
jne
mov
incl
mov
imul
add
mov
add
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
jmp
push
call
pop
ret
mov
mov
ret
push
lea
sub
mov
push
push
push
push
push
push
mov
call
push
push
call
test
je
push
xor
push
call
push
mov
call
mov
cmp
je
lea
push
push
call
mov
mov
mov
mov
push
push
mov
call
cmp
jne
movl
push
push
call
push
push
mov
call
xor
cmp
setl
mov
mov
cmp
mov
je
mov
cltd
sub
sar
mov
push
push
call
mov
neg
sbb
and
add
push
mov
call
push
mov
call
movzwl
push
call
pop
pop
push
push
push
call
push
push
push
call
push
push
lea
push
call
lea
push
call
mov
mov
mov
movzwl
xor
jmp
cmp
jne
cmpw
je
inc
inc
mov
cmp
jne
jmp
xor
inc
lea
push
movl
movl
call
mov
push
pushl
call
push
push
push
push
push
pushl
mov
call
cmp
mov
mov
jne
xor
push
pop
lea
rep
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
movl
movl
movl
mov
movl
movl
call
test
je
mov
push
mov
imul
cltd
pop
idiv
push
push
mov
mov
add
mov
lea
mov
mov
shl
mov
lea
push
call
mov
mov
sub
sub
mov
cmp
mov
mov
jle
mov
push
pushl
neg
push
push
pushl
sbb
push
push
push
and
add
push
push
push
push
call
cmp
mov
je
lea
push
call
push
push
push
pushl
call
test
jne
call
xor
jmp
call
pushl
call
pushl
pushl
call
pushl
call
push
pushl
call
mov
xor
cmp
sete
push
call
cmp
je
call
cmpl
je
cmpl
je
push
push
push
pushl
call
xor
inc
pop
pop
pop
add
leave
ret
mov
push
mov
sub
mov
push
push
push
mov
mov
mov
push
mov
lea
push
pushl
pushl
call
lea
xor
test
je
push
push
push
call
add
test
je
push
add
push
call
inc
pop
add
cmp
pop
mov
jl
mov
mov
pop
pop
mov
pop
call
leave
ret
mov
push
xor
cmp
je
cmp
push
mov
je
push
call
jmp
push
push
push
pushl
call
push
push
push
pushl
call
push
push
push
pushl
call
pop
pop
ret
jmp
push
mov
testl
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
pop
ret
push
mov
sub
push
push
mov
xor
cmp
je
mov
cmp
je
cmp
je
cmp
je
add
push
lea
push
push
call
mov
add
add
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
sub
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
imul
mov
mov
mov
lea
ror
mov
lea
add
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
cmp
jb
mov
mov
test
je
mov
sub
mov
mov
inc
dec
jne
pushl
mov
pushl
pushl
pushl
pushl
call
mov
mov
mov
call
mov
add
push
pushl
pushl
pushl
call
add
pop
jmp
xor
pop
pop
leave
ret
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
test
je
andl
mov
sub
add
mov
mov
mov
lea
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
cmpl
mov
je
or
sub
mov
mov
sub
add
mov
mov
mov
lea
push
push
push
call
mov
mov
mov
sub
add
mov
movzwl
add
lea
movzwl
lea
mov
mov
mov
andl
xor
cmp
jae
mov
mov
mov
mov
mov
mov
addl
add
push
pop
rep
mov
add
add
incl
mov
movzwl
cmp
jb
mov
mov
add
pop
mov
xor
pop
inc
pop
leave
ret
push
mov
sub
mov
mov
mov
sub
mov
je
mov
test
je
push
mov
add
test
je
push
push
mov
sub
mov
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
addl
decl
jne
mov
test
jne
pop
pop
pop
xor
inc
leave
ret
mov
push
mov
push
mov
xor
mov
test
movl
je
push
call
pushl
call
mov
xor
inc
pop
pop
ret
push
mov
push
push
mov
imul
push
mov
cmp
jb
mov
push
call
mov
add
imul
push
xor
pop
div
mov
mov
mov
mov
sub
mov
test
je
mov
sub
push
mov
call
xor
divl
mov
add
cmp
jae
mov
mov
imul
xor
divl
xor
mov
sub
imul
div
mov
cmp
jae
mov
sub
push
pushl
pushl
call
add
add
add
add
cmpl
jne
pop
pop
pop
leave
ret
mov
push
mov
push
mov
test
je
push
mov
test
je
andl
push
call
push
call
push
call
test
je
push
call
push
call
mov
push
call
push
call
pop
pop
pop
ret
mov
mov
mov
mov
rol
imul
add
mov
mov
mov
ret
mov
push
mov
xor
cmp
jne
mov
jmp
mov
push
mov
mov
test
je
mov
inc
inc
decl
jne
cmpl
pop
jne
dec
mov
movb
pop
ret
push
push
mov
mov
mov
mov
mov
mov
mov
cmp
jb
push
mov
mov
mov
lea
xor
test
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
imul
mov
mov
mov
lea
ror
lea
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
mov
inc
cmp
jb
pop
pop
pop
ret
push
mov
sub
push
lea
push
push
movb
call
push
lea
push
push
call
lea
push
push
call
add
test
jne
push
mov
push
call
push
call
push
call
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
push
call
push
call
push
call
mov
pop
jmp
mov
leave
ret
push
or
lods
dec
xchg
das
sub
adc
leave
jno
sbb
adc
dec
adc
and
and
jno
test
in
fisubs
mov
ret
sub
inc
aad
mov
jle
dec
jns
xor
test
mov
jg
dec
enter
xchg
ss
leave
in
mov
and
adc
test
dec
sub
push
dec
fnstsw
add
inc
lea
sbb
fisubs
repnz
push
cmc
xor
xlat
inc
add
mov
pop
jo
cltd
sbb
push
push
adc
in
in
add
dec
mov
stos
lahf
loope
add
dec
aad
pmaxub
sub
dec
repnz
pusha
or
pop
dec
rcrb
mov
push
mov
xor
lods
cmpsl
daa
mov
mov
dec
xlat
lds
add
xor
lcall
mov
sub
xor
scas
jmp
mov
sbb
jnp
daa
sbb
sub
dec
dec
add
jbe
xchg
mov
jecxz
mov
movb
leave
and
aad
ret
pop
shll
jae
sub
ss
sbb
fsubrl
pop
add
addb
and
mov
ror
add
shr
pop
sbb
nop
ror
repnz
and
enter
xchg
out
insb
sub
sub
out
push
aas
xor
jle
imul
das
mov
xorl
outsl
ret
addr16
out
pop
shrb
in
test
jge
or
adc
test
push
lock
xchg
arpl
xchg
and
aaa
xchg
out
ja
fs
sbb
aaa
add
outsl
jae
jnp
arpl
or
push
push
mov
into
ret
shll
mov
sbb
loop
lock
jecxz
adc
and
test
pop
daa
pusha
fiaddl
shl
imul
and
sahf
stc
pop
jle
xchg
stc
inc
sbb
sbb
repz
enter
mov
xchg
dec
dec
fistpl
clc
lcall
stos
sbb
divb
fcoml
dec
and
fldln2
and
cmp
mov
jbe
pop
iret
and
xchg
mov
xchg
sti
sbb
and
push
add
mull
jge
ss
xor
add
mov
jo
out
negl
cltd
and
stos
aam
cmp
push
inc
in
adc
insl
dec
ret
in
bndstx
pop
jnp
lahf
sbb
bound
aaa
mov
div
inc
push
out
loop
sub
leave
push
adc
or
sbb
sub
jg
dec
pusha
outsb
xor
inc
cli
push
xor
xor
hlt
fisubrs
insb
lock
pushf
jo
mov
xchg
mov
and
cli
xchg
dec
and
lahf
ret
lods
fs
mov
cmpsb
int3
lods
or
subl
scas
arpl
xor
shrb
cwtl
add
pop
outsb
lret
movsl
imul
dec
cli
dec
adc
ljmp
lods
jge
ja
nop
xchg
pop
daa
mov
adc
mov
ficoms
stos
neg
cmpsl
repnz
mov
inc
xchg
in
mov
inc
sbb
add
xor
cmp
xchg
stos
dec
bound
xchg
push
movsb
mov
sub
push
inc
sbb
out
sub
ret
cmp
and
xor
shlb
clc
lds
roll
add
mov
mov
and
mov
mov
iret
dec
ja
sbb
notl
inc
imul
test
int
movsb
out
faddl
jmp
imul
adc
cli
ud0
shll
mov
mov
sbb
popf
jno
sbb
dec
push
adc
xor
mov
std
lret
out
mov
bound
xchg
pop
jno
hlt
cmp
cmp
push
sbb
das
clc
repz
fwait
repz
and
or
sbb
in
mov
xorl
add
add
rclb
and
rcl
and
and
dec
push
enter
pop
dec
push
pop
dec
out
aas
mov
mov
mov
sbb
orl
pop
popa
or
xchg
pop
mov
cmpsb
lret
push
arpl
adc
add
bound
icebp
mov
dec
lock
xor
rcr
mov
cmpl
frstor
jmp
push
aaa
sub
lods
xchg
sbb
popl
jbe
and
pushf
jge
das
dec
sbb
sbb
pop
jmp
jge
insl
sub
inc
add
shl
imul
add
jecxz
addr16
jge
inc
or
test
cs
xchg
mov
xor
jno
mov
loop
test
mov
xchg
mov
pop
dec
sbb
pop
mov
mov
or
push
fldt
loopne
adc
mov
jecxz,pt
mov
jp
cmp
aas
sub
enter
mov
mov
adc
and
mov
jle
cmpxchg
adc
arpl
push
loope
aad
idiv
jg
loope
rcl
xchg
add
add
mov
call
or
ror
mov
adc
mov
pop
test
lret
sub
jne
movsl
dec
daa
loope
push
jl
sub
je
dec
je
jle
xchg
outsl
xor
cmp
aad
nop
inc
and
cmp
std
bound
insb
iret
jne
sbb
out
rolb
es
nop
leave
lahf
lds
jns
int3
outsl
push
mov
out
into
sahf
mov
das
adc
inc
cmp
or
xchg
pop
mov
push
jb
cwtl
test
sub
cmp
pusha
push
rclb
jmp
icebp
push
add
movsb
and
add
fwait
mov
cwtl
dec
xor
add
mov
fisubl
ss
xchg
testb
sahf
int3
scas
dec
lea
imul
inc
jbe
outsb
mov
js
fsub
cmc
sub
mov
sahf
adc
sbb
fs
lcall
push
faddl
pop
pop
fs
stos
xchg
rcll
das
movsl
mov
pop
bound
addr16
lret
inc
cmp
mov
sbb
data16
lret
cmp
scas
xchg
test
add
push
mov
roll
addr16
adc
mov
jbe
into
rorb
or
pop
inc
add
mov
dec
sbb
cmpsb
xor
jecxz
add
outsl
fcmovnu
sub
or
mov
imul
inc
pusha
inc
cmp
push
cltd
fs
lret
push
mov
aas
aaa
and
outsb
and
imull
xchg
lock
aaa
xchg
add
and
dec
aad
inc
cmp
lea
mov
add
xlat
pop
dec
filds
stos
dec
and
push
xorl
or
cmpsb
ja
addl
stc
sarb
test
icebp
mov
sbb
fwait
ja
adc
inc
sub
fistps
mov
aam
mov
rcr
ret
fcoms
dec
xchg
das
push
jnp
cmpl
inc
push
int3
icebp
pop
add
sarl
int3
push
dec
pusha
pusha
dec
shll
es
fiadds
mov
or
in
cltd
push
arpl
add
addr16
add
push
cltd
fs
mov
pop
testb
fidivrs
mov
xchg
fdivrl
imul
lret
rcll
jnp
jns
xchg
xchg
push
and
lds
mov
and
inc
mov
bnd
sbb
fcmovb
fidivrs
dec
call
inc
mov
cli
outsl
inc
mov
iret
jle
cmp
inc
dec
adc
in
pop
ret
lahf
fildll
jnp
jne
pop
fcmovnu
inc
jle
sbb
pop
nop
adc
cmp
cld
addr16
aas
es
xlat
adc
mov
mov
call
jge
cmpsl
fisubrs
or
aad
mov
pushf
insl
lahf
push
test
or
outsb
jb
dec
push
arpl
xor
xchg
push
mov
fs
pop
loop
and
sub
ss
push
pop
into
insl
outsl
xchg
dec
lret
pop
pop
jp
and
ss
jge
sub
enter
std
mov
jge
int
imul
add
mov
xor
movsl
sub
std
push
jnp
lock
pop
xor
cld
mov
out
add
scas
cmp
pop
lea
popf
xor
orb
inc
jnp
fcomip
pop
mov
in
cwtl
je
xor
rolb
in
sbbb
sar
aaa
sti
pop
xchg
sbb
fwait
fwait
mov
ret
icebp
sub
addr16
js
xchg
hlt
aam
cwtl
dec
sti
sarb
aam
mov
outsb
jne
mov
ret
xor
adc
sub
pop
mov
ret
dec
xchg
aam
push
push
mov
xor
mov
dec
mov
cmp
daa
push
dec
pop
cmc
insl
push
incb
add
cwtl
fiaddl
out
inc
push
jno
cltd
ljmp
mov
idiv
pop
lahf
fldenv
out
call
pop
or
add
mov
popa
test
fistl
fs
movsb
mov
lods
xor
imul
xchg
dec
sbb
push
pushf
push
add
push
pop
inc
jb
test
and
mov
ja
daa
mov
mov
xchg
jae
push
add
xchg
inc
and
pop
enter
mov
sub
scas
popa
adc
rcll
pusha
and
add
out
inc
sub
add
add
ja
dec
lea
sbb
imul
mov
fbstp
fsubs
sub
push
insl
call
cwtl
shrl
icebp
mov
stc
mov
shrl
xchg
cmpsb
xor
rcrl
cmpb
rol
adc
and
inc
punpckhwd
push
push
sub
push
pop
sbb
inc
movl
lods
lea
and
mov
cli
mov
push
and
outsl
push
cs
adc
add
push
imul
imul
shl
popl
lret
mov
psrlw
jp
sub
or
sub
je
sbb
in
into
bound
popa
call
mov
imul
push
push
stc
adc
pop
lock
push
das
sti
jno
mov
pop
sbb
or
mov
cmpsb
cwtl
jp
or
test
cmpsb
dec
inc
mov
fiaddl
mov
insl
mov
shll
mov
pushf
cs
outsl
xchg
cmc
cmp
cmpsb
dec
popa
insb
cltd
sbb
jnp
add
add
mov
arpl
mov
pop
cmp
mov
ja
ret
xor
mov
adc
imull
ljmp
push
jnp
rol
push
mov
mov
sbb
xchg
xchg
and
xchg
xlat
out
sbb
xor
inc
subb
test
das
inc
push
jle
xor
jno
and
out
test
push
insb
push
xchg
mov
push
dec
inc
popa
shl
or
push
je
test
dec
dec
cmpsl
push
xlat
dec
and
imul
stc
mov
fldcw
mov
xor
roll
add
fs
inc
popf
mov
inc
faddl
stos
ret
pop
pop
dec
mov
imul
arpl
jl
and
fs
and
add
push
arpl
mov
stos
xchg
sbb
mov
into
push
ljmp
jb
mov
mov
movl
loope
add
in
jne
out
sub
xor
std
inc
inc
jl
mov
xchg
or
in
or
repnz
cmp
shll
jno
aam
pop
pop
and
scas
jmp
adcb
and
popa
push
sbb
sub
add
add
stos
or
inc
push
repnz
inc
aam
iret
in
pushf
mov
ss
icebp
in
adc
sbb
fabs
test
stos
add
int
fistpll
cmp
les
jbe
rcr
mov
jo
jg
push
scas
in
xchg
jne
pop
inc
xlat
outsl
inc
mov
jno
pushf
stos
orl
adc
jbe
pop
lods
xchg
dec
sbb
dec
pop
std
lahf
inc
clc
into
or
aas
mov
mov
icebp
fwait
jbe
mov
cmpb
lods
sbb
mov
punpckhdq
add
pop
jnp
fsub
sbb
xor
cmp
push
js
xor
xchg
jmp
es
orb
shll
jge
xchg
iret
jp
dec
pop
in
jae
es
test
jne
mov
sub
cmp
jne
lods
loop
mov
push
jp
int
inc
imul
push
sub
cmp
sub
enter
cmpsl
roll
mov
nop
pop
je
push
aaa
test
inc
xlat
xchg
and
xchg
xchg
cmp
das
es
push
ja
test
xor
sbb
mov
cmp
add
sub
repz
and
mov
pop
push
mov
mov
pop
xchg
mov
repz
dec
es
in
and
xchg
stos
push
lods
addb
and
addr16
test
ret
dec
mov
dec
inc
push
push
push
cli
dec
xchg
divb
lret
lcall
js
mov
sub
push
outsl
sbb
add
push
rcrb
lret
ret
pop
std
lds
pop
cmovo
jle
jp
test
cwtl
jo
cmp
sub
adc
sbb
hlt
mov
mov
dec
mov
clc
pop
mov
test
shr
push
pop
pop
ja
add
imull
aaa
push
mov
push
push
push
out
movsb
mov
sub
sbb
jle
or
fcomps
popf
add
repz
bound
addl
aad
push
dec
roll
sub
xchg
cmp
inc
arpl
xor
adc
cs
ficoms
sbb
dec
es
subl
push
xchg
mov
loope
das
xor
xchg
call
shlb
cmp
cmp
lret
call
bound
popa
sub
xor
mov
data16
mov
iret
outsb
xchg
push
and
sub
out
ja
rcrb
push
mov
dec
cmp
pop
pop
popf
stc
adc
jmp
cmpsl
in
ljmp
aad
sbb
je
ds
inc
lret
les
cwtl
jmp
sti
push
pusha
call
mov
lret
cli
push
or
int3
and
icebp
and
test
push
sub
mov
push
dec
ret
fsubrl
jno
shrl
push
lahf
push
adc
push
test
cmpsl
sub
fidivl
cmp
sub
mulb
mov
sti
push
and
out
lahf
mov
fidivl
push
test
xor
mov
xchg
orl
mov
add
stos
jo
ret
and
in
bound
test
cld
push
sub
mov
push
out
fisubs
push
xor
push
push
sbb
xchg
ds
jmp
cmp
mov
and
je
sub
cmp
outsb
popa
movl
jne
insb
test
sar
stos
cltd
lret
and
sub
xchg
inc
mov
scas
push
push
popf
mov
rorb
lret
aam
imul
dec
ret
mov
scas
mov
inc
subb
lock
adc
test
out
add
add
or
rolb
sbb
repz
xchg
sub
inc
lret
fwait
and
cmp
mov
sub
dec
out
outsl
cli
mov
push
dec
ljmp
stc
mov
jo
sarb
dec
inc
mov
aam
xchg
mov
xor
mov
stos
mov
jle
rclb
rcrl
dec
sbb
fimuls
jns
fidivrs
inc
mov
and
outsb
es
fiaddl
jne
mov
ss
das
push
dec
adc
rorb
add
add
imulb
mov
fmull
jbe
lds
cmp
cmpsb
xchg
and
lds
xchg
xchg
in
movsl
mov
cmc
div
sub
cs
lret
and
mov
jb
cmp
push
sarl
movsb
or
mov
cmpsl
jge
pop
lock
cmp
push
es
lods
ret
daa
sbb
popa
pop
nop
jl
sub
xor
out
mov
decb
imul
icebp
or
mov
add
cld
add
add
jno
popa
pop
xchg
popa
pop
dec
mov
repnz
mov
cmp
ljmp
imul
cmc
sbb
fucomip
cmp
push
adc
fstps
jmp
in
or
xlat
sbb
inc
xor
sbb
sbb
jg
push
sbb
mov
sti
mov
stc
aaa
add
or
or
adc
pushf
mov
repz
cmc
pop
in
jecxz
or
and
insb
xchg
mov
loopne
clc
mov
pop
and
sti
pop
fsubrl
jecxz
pop
pop
imul
pop
movl
add
nop
mov
sbb
pop
cwtl
mov
xchg
pop
imul
ljmp
int3
addr16
cmpsb
push
imul
ja
cmp
jmp
adc
ljmp
testl
fsubrl
fwait
inc
test
sbb
mov
cmp
and
andl
mov
enter
and
adc
dec
mov
push
das
mov
push
dec
dec
fwait
push
popf
cmp
pop
leave
push
or
lahf
popf
out
inc
in
inc
xchg
fs
fucomi
add
cmp
push
mov
add
add
nop
cmp
int
out
das
sub
aad
pop
pop
dec
cmpsb
rcll
fwait
inc
jl
aad
mov
and
push
or
lahf
inc
rorl
movsb
loope
cmp
test
popf
cli
adc
dec
xor
enter
nop
pop
sbb
mov
pushf
sbb
arpl
fidivl
sti
daa
mov
or
sbbl
pushf
mov
pop
mov
xchg
jbe
aaa
push
push
mov
mov
mov
inc
jg
nop
inc
scas
push
sub
imul
xchg
push
add
add
push
into
fwait
mov
xchg
jecxz
xor
inc
jbe
js
cltd
mov
out
test
pop
mov
icebp
mov
mov
xor
mov
lods
push
imul
xchg
in
mov
inc
ret
xchg
mov
sbb
insb
dec
iret
jnp
mov
pop
inc
fldcw
dec
aad
dec
jno
negb
test
imulb
loop
inc
jp
stc
mov
pop
mov
ret
mov
outsl
jnp
push
add
mov
fistpl
adc
adc
mov
ja
mov
add
mov
cmc
ret
dec
mov
or
add
in
addr16
dec
mov
mov
and
jl
add
shlb
xor
sub
push
mov
and
imul
or
cwtl
and
lea
bound
out
pop
mov
add
dec
pop
dec
loopne
pop
push
in
xchg
sub
jo
lret
outsl
cli
das
sahf
xor
push
cltd
mov
cmc
xor
cltd
push
jg
jbe
hlt
mov
mov
push
pop
out
xlat
fcomps
ds
rolb
add
dec
mov
sbb
js
mov
sbb
sahf
mov
icebp
ja
cs
jno
xchg
sub
adc
inc
fidivl
fwait
mov
push
and
enter
cmp
inc
out
fs
in
lods
leave
lods
jl
fs
sub
dec
call
test
repnz
jb
xchg
push
and
in
ja
push
sub
xor
iret
jle
loop
cwtl
dec
fimuls
dec
hlt
daa
pop
test
imul
lret
pop
ret
sub
sub
cwtl
push
mov
or
lock
stc
data16
sub
add
adc
filds
push
es
xchg
jae
cld
cmp
jecxz
xchg
stc
dec
aas
repnz
and
jecxz
xchg
es
xchg
cmp
divb
int
scas
adc
ficoml
loopne
pop
sbb
jne
and
inc
dec
or
rorl
adc
orb
cmpsl
ja
adc
pop
stos
shlb
xchg
lods
mov
or
mov
cwtl
push
hlt
xchg
pop
mov
cmp
mov
jae
dec
ja
lods
inc
imul
inc
stc
gs
inc
or
mov
lods
or
and
adc
pushf
add
cmp
out
popa
arpl
xchg
mov
bndldx
jp
or
out
ss
jnp
adc
inc
outsl
jno
clc
nop
dec
test
push
lods
jge
out
cmc
ja
push
jne
or
mov
pop
adc
pop
pop
pop
add
and
pop
mov
lret
loopne
jb
cmp
push
in
shr
xchg
pop
pop
xlat
add
jo
push
popf
or
or
popa
test
arpl
rcl
cmpsl
nop
out
sbb
or
test
mov
mov
idivl
mov
and
jae
add
cmp
or
leave
and
fldl
or
mov
mov
add
or
dec
mov
jno
xchg
daa
push
cltd
mov
pushf
out
and
or
jae
loopne
rolb
mov
mov
nop
pop
mov
into
in
pop
lret
and
xor
stos
lcall
test
addb
out
int
add
jnp
mov
repz
outsb
int
les
fwait
dec
faddp
push
cmpsl
dec
adc
xchg
test
add
inc
sbb
and
rolb
adc
sub
aad
mov
push
push
sahf
in
dec
stos
push
sbb
inc
mov
xchg
cld
aas
mov
push
lcall
in
lods
mov
scas
leave
sub
mov
push
ret
test
mov
aam
insb
inc
sbb
xlat
dec
jle
andb
cltd
mov
mov
aad
dec
dec
jae
out
fbstp
loopne
mov
pusha
push
cli
out
mov
movsl
getsec
adc
jg
cli
and
push
out
mov
and
pop
mov
sub
jb
push
sbb
adc
xor
scas
fidivs
pop
scas
dec
or
nop
sbb
lcall
lods
adc
pop
loopne
push
imul
xchg
cli
adc
dec
fst
push
loope
mov
adc
insb
shl
push
loope
jmp
cltd
and
into
and
movsb
jp
fadd
sbb
movsl
push
xchg
scas
mov
pop
pop
popf
dec
sbb
loopne
or
cli
loope
int
xchg
imul
xchg
cmp
adc
in
roll
add
mov
dec
mov
sarb
ret
rep
hlt
mov
mov
xchg
adc
int
pop
in
xor
pop
adc
adc
flds
iret
mov
lret
push
inc
lahf
sub
inc
pop
push
mov
daa
mov
or
xchg
stc
lea
xchg
leave
cwtl
xchg
add
cmp
lret
out
pop
cmp
jg
xlat
inc
fs
pop
mov
jmp
jmp
fistps
ljmp
pop
pop
xor
std
out
mov
insl
test
cwtl
js
sbb
pop
cmp
imul
xor
out
pop
push
repnz
sub
xor
test
ja
scas
pop
mov
insl
cmpsl
push
sub
sub
cmp
xchg
jl
bnd
mov
adc
or
xchg
push
and
sbb
outsb
lahf
les
imul
fstpl
push
dec
loopne
js
pop
add
sbbw
sub
xor
movsl
lods
and
add
mov
out
popl
xlat
sahf
push
sbb
pushf
mov
loope
ja
lea
inc
pop
rcll
in
add
dec
stc
mov
jp
cltd
jns
nop
sahf
mov
cld
xlat
fstpt
lret
scas
jg
adc
pop
sbb
mov
scas
xor
das
jnp
xchg
sub
inc
pusha
jle
mov
lcall
cmp
lds
inc
test
fdivp
rcll
insl
dec
scas
push
popf
inc
flds
xchg
int
fs
fs
xchg
push
add
jns
or
add
rcl
leave
stos
inc
pop
push
mov
jnp
or
push
push
push
jge
test
fbld
or
adc
xchg
or
push
in
mov
mov
cs
addr16
scas
cmpsb
imul
pop
jp
mov
mov
adc
mov
cld
pop
pop
inc
out
xor
cmp
mov
cmp
popl
jno
insb
add
xchg
push
xchg
iret
lcall
stos
push
loopne
lret
ja
stc
test
cwtl
pop
push
xlat
test
jno
in
jle
pushf
sbb
les
lcall
mov
cmp
arpl
jg
xchg
cmpsb
or
rcrl
xchg
sub
push
shll
in
jns
stos
popa
sbb
ret
adc
lcall
jp
popf
shl
lods
adc
mov
pop
push
jns
out
xorl
sub
imul
fwait
pop
mov
andb
jmp
lahf
lret
mov
xor
mov
push
in
scas
je
or
ds
add
and
add
or
loop
mov
adc
loope
xchg
mov
and
pop
jne
sub
xchg
fiaddl
cltd
sbb
clc
fs
pop
fscale
cmp
scas
fsubrp
daa
je
ljmp
or
xchg
xor
dec
sbb
mov
jae
mov
dec
cmpsl
loopne
pop
adc
dec
xchg
jmp
jg
sbb
addr16
icebp
sahf
orb
mov
ds
push
sub
push
arpl
rclb
or
adc
arpl
sbb
xchg
rcrb
jp
adc
and
vrsqrtps
add
cs
loopne
movsl
and
or
mov
lcall
adc
pop
jae
xabort
andl
pop
mov
jmp
mov
dec
xchg
fcmove
lret
test
insl
jl
push
pop
xor
loope
add
xor
cmp
rcrl
fwait
mov
popf
mov
xor
xchg
incl
add
fwait
jp
pop
xlat
mov
push
mov
in
addr16
jmp
idivb
icebp
test
and
stos
divl
bound
dec
adc
jge
dec
adc
jns
clts
mov
imul
mov
push
stos
xchg
and
fsin
pop
inc
pop
push
xchg
mov
and
cld
xchg
in
mov
imul
mov
or
pop
ja
cmp
outsl
push
aad
enter
hlt
imul
fcoml
sbb
movsl
jo
mov
test
mov
repz
push
mov
push
aad
icebp
icebp
xchg
cwtl
jo
jmp
mov
push
cld
out
clc
enter
in
add
cld
fbld
adc
jns
pop
sub
xlat
jb
mov
clc
shr
jbe
subl
aad
out
popa
fldenv
lret
cmpsb
add
and
dec
ljmp
xor
pop
fbld
cmpsl
and
push
cld
mov
push
in
adc
lods
jnp
mov
aaa
sub
push
cmp
sahf
mov
xchg
subl
mov
outsl
mov
call
ret
pop
sbb
push
aas
xchg
sub
add
jae
mov
pop
pop
mov
xchg
add
mov
aaa
jge
shrb
shrb
sub
add
jecxz
adcl
mov
insb
xchg
sbb
push
and
sub
pusha
iret
sbb
das
in
insb
push
daa
push
mov
cs
mov
inc
dec
or
roll
adc
ja
cmp
or
icebp
push
mov
ds
rcrb
jl
add
push
push
loopne
lahf
ds
in
inc
cmp
shrb
dec
imul
aam
pushf
add
out
and
xor
ljmp
js
sub
cmp
jecxz
add
add
fs
mov
pusha
adcl
ss
rolb
data16
in
aaa
mov
cmc
push
cmp
xchg
mov
inc
scas
cmpsl
adc
pop
pop
stos
xor
xchg
test
mov
adc
xchg
test
sti
cs
outsl
push
inc
push
loope
cmp
or
jmp
ja
mov
iret
adc
add
mov
lahf
inc
sub
adc
insb
xor
test
mov
out
stc
mov
and
dec
scas
subl
cs
cmp
add
add
fadds
xchg
push
bound
mov
and
es
adc
popa
mov
popf
out
sbb
dec
scas
fwait
mov
mov
push
xchg
push
jno
and
or
xor
jecxz
mov
adc
cmp
mov
imul
ret
add
ror
dec
pop
in
mov
outsb
mov
or
add
in
popa
loope
imul
push
push
movsl
pop
sar
and
nop
loop
pop
stos
repnz
and
or
mov
inc
dec
jo
nop
test
dec
and
ljmp
cmc
mov
cmp
call
mov
push
push
mov
int
insb
sub
in
lret
clc
cwtl
movsb
roll
out
das
