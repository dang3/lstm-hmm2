push
mov
add
pusha
shr
mov
xor
call
lea
lea
mov
mov
jmp
rcl
xor
mov
rol
and
add
mov
mov
shr
xor
neg
not
movl
jmp
xchg
mov
mov
rcr
neg
ror
xor
rcl
jmp
xor
add
call
lea
xchg
xor
lea
mov
jmp
not
mov
neg
xchg
lea
xchg
rcl
push
lea
push
push
lea
push
pushl
call
jmp
rcl
rcr
lea
mov
shr
lea
rol
shr
add
lea
xchg
xor
xor
xor
xchg
jmp
xor
add
neg
mov
xor
mov
shr
push
jmp
dec
jne
mov
mov
xor
xor
jmp
xchg
xor
xor
mov
rcr
not
lea
shl
neg
mov
shl
mov
neg
push
jmp
mov
lea
xor
lea
mov
xor
xor
xor
mov
mov
xchg
ror
mov
mov
jmp
xor
shr
mov
mov
mov
jmp
xchg
rcr
push
shl
add
shl
xor
ror
ret
mov
mov
xor
jmp
mov
lea
xor
popl
xor
adc
jmp
and
xor
adc
xor
mov
rol
xor
lea
lea
jmp
adc
mov
lea
rcr
lea
mov
shl
shr
not
push
lea
push
push
lea
push
pushl
call
jmp
rcl
not
xor
lea
neg
mov
popa
leave
call
call
mov
mov
rol
jmp
xor
xor
rcr
rol
xor
xor
push
add
adc
jmp
lea
xor
neg
sub
lea
rol
xor
jmp
xor
movl
mov
mov
mov
not
ret
lea
xor
mov
mov
xchg
jmp
lea
xor
not
mov
lea
rol
rcl
ror
mov
mov
and
lea
push
push
push
push
push
push
push
call
jmp
xchg
mov
not
lea
neg
mov
neg
rcl
mov
push
call
jmp
xor
lea
mov
xor
xor
mov
popl
shr
mov
lea
jmp
mov
mov
rcl
xor
not
shr
neg
lea
shl
shr
mov
jmp
mov
neg
movl
lea
rcl
jmp
mov
rol
xor
lea
push
push
call
mov
rcr
mov
xor
lea
xor
xchg
jmp
movl
mov
mov
mov
rcr
movl
rol
ror
jmp
xor
xchg
xchg
shr
xor
neg
lea
rcl
lea
lea
xor
xor
jmp
lea
xor
neg
lea
push
push
push
push
call
push
jmp
mov
shr
mov
xor
neg
inc
jne
add
mov
ret
not
add
lea
xor
ror
xor
add
mov
pop
not
lea
jmp
ror
neg
push
push
lea
push
lea
push
call
jmp
lea
xor
mov
and
xor
mov
lea
mov
xor
lea
mov
jmp
sub
add
mov
add
shl
add
mov
or
and
sbb
add
lock
shlb
dec
push
into
add
jle
stos
sub
xchg
pop
lret
std
sbb
sub
std
and
dec
and
out
add
lea
rcl
gs
aaa
rolb
and
fwait
adc
add
cmc
inc
push
push
jle
or
out
jns
jle
xor
clc
enter
gs
cmp
or
pop
ds
rolb
cmp
xchg
cmp
pop
sub
fimuls
cmpsb
jno
je
out
cmp
dec
jns
fldt
and
enter
mov
sub
mov
inc
je
js
lock
enter
lret
hlt
pop
xor
mov
testb
pop
movsl
and
mov
std
mov
push
mov
adc
inc
add
ss
inc
jnp
test
push
aam
aaa
jno
sbb
add
jnp
or
sbb
cmpsl
xchg
inc
inc
push
ror
hlt
mov
mov
and
mov
in
pop
cmc
enter
in
mov
enter
xchg
pop
cmc
lret
xchg
mov
mov
outsb
pop
popf
enter
aaa
jno
lahf
enter
push
or
mov
mov
in
int3
jmp
dec
inc
mov
idiv
jle
or
mov
cwtl
or
jbe
sbb
cmc
inc
lods
pop
inc
rcl
inc
nop
sbb
cmc
cltd
mov
lods
push
xchg
jno
jle
pop
inc
mov
cmp
test
mov
pop
dec
xchg
pop
cmc
inc
or
mov
push
inc
xchg
mov
mov
adc
iret
stos
mov
testb
mov
lea
icebp
test
mov
mov
adc
or
cmp
addr16
pusha
add
xchg
fs
ficoms
addr16
adc
xor
fdivl
push
lods
push
adc
sbb
cmc
popf
push
mov
push
mov
adc
ftst
mov
stos
movsb
sbb
cli
dec
cwtl
scas
sbb
stc
xor
jp
cmp
popf
in
lret
addr16
addr16
stos
imul
in
int3
fiaddl
rcll
addr16
xchg
lea
mov
stc
ljmp
lds
lods
push
lds
je
or
mov
cmp
mov
lret
adc
test
stos
loop
sbb
adc
mov
fs
sub
addr16
cmp
cmp
jb
es
push
cwtl
and
xchg
mov
and
push
mov
push
lods
fwait
shl
sti
cmpsb
ds
cli
and
fdivr
fs
xor
xor
push
cwtl
and
mov
in
xor
jb
rcr
test
in
push
add
cmp
fisubs
andps
mov
mov
xchg
adc
push
stc
adc
in
outsb
inc
adc
ficoms
jne
and
adc
std
adc
fidivrs
into
mov
adc
xchg
adc
mov
ds
push
repnz
stc
jcxz
test
and
out
push
mov
scas
xchg
fcoml
mov
data16
push
dec
movsb
pop
cmp
push
jae
cwtl
inc
sub
test
cwtl
int
adc
sub
rcrb
cli
jg
sbb
dec
cwtl
scas
sbb
stc
xor
jp
sub
jb
jb
xchg
and
mov
xchg
push
adc
ficoms
addr16
jnp
cmp
addr16
std
ficoms
adc
xchg
scas
xchg
daa
mov
leave
fiadds
mov
hlt
test
and
dec
pop
pop
stc
in
mov
push
es
add
daa
fisubrs
out
fisubrs
stc
xor
test
and
pop
stc
push
fisubrs
stc
or
bound
adc
and
repnz
rcl
fsubs
push
jb
mov
adc
and
loopne
ficomps
imul
stc
aaa
mov
ret
dec
mov
data16
xor
fdivl
in
pushf
jae
es
push
stos
pop
fstpl
lds
push
adc
out
in
xchg
mov
stc
xor
mov
js
popa
into
mov
mov
adc
fdivl
fs
imul
movsb
pop
in
sbbl
loop
dec
sub
pop
dec
adc
fimull
in
mov
fdivl
das
fstpl
cmp
jne
mov
push
sub
in
test
cli
adc
push
test
repz
test
test
xchg
mov
out
mov
test
in
pop
push
stc
addr16
push
stc
fisttpll
icebp
in
lods
pop
repnz
stos
add
adc
add
cwtl
aad
mov
je
pop
push
push
in
push
faddl
xchg
stos
push
jb
frstor
icebp
mov
and
push
fistl
sahf
pop
stos
aaa
mov
push
js
sahf
adc
and
es
inc
adc
push
add
in
sbbl
loop
stos
push
stos
pop
lahf
push
lods
pop
jp
jp
stc
fisubs
in
stos
pop
cli
aam
push
stc
addr16
imul
arpl
icebp
mov
mov
lret
push
add
leave
adc
jb
push
out
pop
in
fwait
pop
cli
in
push
stc
addr16
pop
ficoms
xchg
lods
popf
jb
sbb
addr16
push
stc
frstor
icebp
in
nop
push
shrb
xchg
std
ss
xchg
push
stos
jmp
xor
push
cwtl
push
sbb
dec
rcr
add
push
outsl
popf
repnz
stc
addr16
add
mov
iret
in
insl
xchg
stc
ficoms
outsl
push
and
insb
sub
in
lret
lea
adc
pop
mov
xchg
and
icebp
cwtl
push
adc
push
jb
rcr
mov
in
mov
aaa
and
in
fisubrs
jg
mov
movsb
outsl
push
pmulhw
adcl
sbb
stc
or
into
jb
or
test
sub
or
sti
arpl
es
out
xchg
push
mov
shr
addr16
xor
push
mov
aam
xchg
push
lods
ja
pop
lods
cmp
add
cmp
sub
cwtl
mov
inc
notrack
xchg
sub
add
pop
jo
cli
sbb
sbb
fwait
out
dec
xchg
push
jo
mov
add
cmpsb
adc
inc
mov
stos
push
mov
pop
test
sbb
sub
popa
push
in
jae
test
data16
icebp
push
into
dec
and
xchg
inc
fxch
add
cmc
mov
cld
pop
negl
js
repz
xor
jl
jmp
push
mov
jbe
cmc
rolw
push
lret
xor
testb
cmp
popf
mov
dec
lods
xor
push
stos
pop
or
stos
lret
insl
xlat
inc
dec
dec
mov
jo
iret
out
gs
xlat
fdivrl
jg
xchg
sahf
shrb
push
icebp
adc
fdivrl
ficoms
jmp
adc
ss
adc
mov
cmp
xlat
xchg
push
aam
fbstp
mov
mov
and
sbb
sub
pop
pop
lahf
or
pop
stc
adc
fdivl
xor
sbb
dec
shrl
jne
insl
aas
mov
test
fwait
lret
ret
add
xor
stc
loop
and
popa
and
lock
cmp
pusha
push
pushl
ss
push
push
andl
out
inc
ret
fisttps
lret
and
mov
inc
outsb
inc
imul
orl
cwtl
dec
popw
adc
and
mov
std
popa
fnstsw
cmp
outsl
sbb
push
dec
pop
add
movsb
lahf
stos
adc
xor
push
pop
rorb
push
fildl
push
ret
dec
lds
fiadds
leave
test
mov
rcll
dec
repz
add
push
adc
ficoms
shlb
cmc
or
adc
mov
in
push
std
dec
jle
mov
fcoms
jg
push
push
mov
stos
sub
inc
xchg
shl
cmp
jp
sbb
lds
jl
ljmp
jl
and
mul
loop
fsts
lock
sbb
add
flds
add
pop
sti
xor
add
pop
xchg
lcallw
sbb
adc
xlat
adc
dec
mov
loopne
test
mov
jmp
test
xor
sbbl
shlb
fnop
cmpsl
clc
lods
int
pop
pop
push
mov
jmp
pop
mov
push
jbe
mov
fcomps
in
arpl
dec
jp
xor
mov
mov
arpl
pop
je
fists
ja
shrl
adc
jl
mov
inc
cmpb
mov
or
pop
jge
lcall
xlat
ss
jmp
movsb
jg
xor
sahf
lret
mov
enter
leave
mov
sub
mov
pop
fisttpll
cmp
lret
sbb
mov
push
std
xchg
rorl
in
in
cmp
jle
push
jmp
fs
mov
inc
mov
xlat
scas
and
pop
cld
xor
das
lcall
xor
jg
sub
int
popf
pop
xor
ret
ja
xor
add
jp
pop
scas
lret
scas
and
lahf
hlt
jo
popf
mov
push
cltd
pop
pop
lea
and
mov
xchg
ja
dec
xchg
xchg
fbstp
fsubrs
inc
fwait
mov
and
loope
lahf
push
or
iret
dec
pop
rcll
js
adc
stos
out
sti
mov
maxps
test
popf
lahf
cs
and
xor
xor
jne
int
mov
enter
fnstcw
rol
into
setle
jne
sbb
loope
shl
stos
sbb
mov
cli
xlat
xchg
pop
jge
sub
enter
lahf
jbe
popf
fs
cmp
test
jl
adc
jl
adc
in
imul
or
xchg
loope
pop
adc
notl
mov
or
pusha
cld
adc
jge
int3
in
fucomip
fstpl
aad
ss
fcompl
test
andl
ret
sarb
push
xchg
fildl
frstor
popf
sbbb
push
mov
push
in
lock
jp
stos
pop
std
popa
fcmovnu
mov
adc
pop
cli
pushf
xlat
inc
stos
mov
add
mov
cwtl
ret
adc
add
gs
int
inc
stos
jge
and
mov
mov
rcrb
hlt
ret
mov
insl
push
and
lret
lds
jmp
xor
les
sub
aas
adc
mov
icebp
arpl
jp
mov
fwait
out
add
int
sti
cmp
mov
sub
pop
dec
push
lahf
inc
out
fsubrp
fcoms
jecxz
pop
push
scas
adc
fsubrl
insb
loop
repnz
pop
cli
popf
push
xchg
sarl
insb
or
inc
jo
mov
repz
push
sub
pop
xchg
mov
cmpsl
dec
rcrb
mov
int
push
lret
jp
mov
sbb
ja
cs
lea
inc
or
xor
repnz
sub
jmp
add
jns
xchg
mov
fbld
and
jge
jle
push
int
pop
sub
sub
mov
das
pop
jp
rcr
gs
jmp
in
and
aaa
push
push
movsb
cmp
lret
xchg
not
xchg
dec
dec
ret
aad
pop
push
lret
ljmp
mov
mov
repnz
inc
sbb
in
jbe
std
cld
cmpps
pop
ds
xchg
mov
imul
mov
xor
in
dec
inc
stos
mov
dec
sub
adc
mov
dec
cmc
jl
ljmp
lods
call
into
outsb
jp
push
dec
loopne
fidivrl
xchg
dec
stos
add
jae
xchg
mov
sbb
cld
jo
sahf
test
dec
add
inc
xchg
fstpt
popa
xchg
insb
insl
loop
out
lahf
outsl
bound
cmp
inc
jno
push
push
sub
xor
int
aas
stos
aaa
divps
or
mov
inc
push
arpl
les
out
sbb
dec
data16
pop
cmp
cmp
cmp
pushf
insl
jge
pop
mov
cld
push
jp
cld
sub
inc
fsubl
popf
jo
daa
mov
shlb
insl
bound
stc
pop
mov
mov
shlb
enter
icebp
out
cltd
test
jmp
push
cld
notl
cmpsl
mov
iret
cmp
add
adc
shll
loopne
movsl
pushf
rcr
mov
mov
sbb
lcall
mul
mov
fstpt
movl
pop
out
inc
scas
insl
mov
push
aad
sti
ret
inc
stos
punpckhdq
fldt
mov
sbb
ja
fistps
inc
or
dec
rorl
jp
cltd
cltd
je
std
cmpsb
out
jl
xor
fstpl
outsl
les
jnp
loopne
cmpb
das
push
imul
adc
mov
xlat
ret
loope
sarb
pop
dec
pop
repz
es
and
iret
push
rclb
jl
aas
cltd
in
inc
pop
mov
gs
push
xor
ljmp
sub
fldcw
jo
jge
out
aas
xchg
sahf
insl
adc
dec
aam
pop
nop
into
pop
sti
std
pop
roll
jg
dec
cmp
sub
and
inc
js
lret
pop
imulb
inc
push
xchg
fcmovne
mov
inc
pop
jae
xchg
mov
pop
sti
mov
pop
lods
shl
pop
out
in
lea
mov
adc
mov
xchg
jp
xchg
dec
bound
shlb
fsubrs
pop
jecxz
or
ss
int
loop
sub
adc
imull
inc
lds
and
pop
and
cmp
add
test
sbb
inc
hlt
inc
test
out
xchg
sbb
inc
adc
push
jle,pt
stc
loope
cmc
push
inc
out
adc
shufps
mov
pushf
jne
push
push
scas
mov
fstl
js
dec
and
sub
lea
ss
jmp
mov
pop
stos
je
inc
xor
add
xor
xor
test
clc
jb
inc
in
ror
sbbl
enter
icebp
hlt
mov
int
sbb
rcrb
mov
pusha
cs
leave
sub
mov
pop
loopne
test
xchg
push
icebp
ja
insl
xor
stos
jo
popf
fcoml
inc
pop
jmp
data16
pushfw
pop
shll
jns
stc
pop
cs
fstpl
cltd
pop
scas
leave
std
push
jae
push
pop
ret
and
adc
xor
sarl
out
jmp
imul
inc
js
aaa
test
ret
jge
xchg
jbe
or
xchg
or
cmp
leave
fnsave
pop
imul
xor
in
mov
inc
lcall
lret
gs
and
ljmp
mov
jnp
imul
cmc
jg
push
cmp
out
push
jecxz
and
mov
inc
inc
sbb
fucomip
dec
ds
aad
std
aad
pop
sbb
or
stos
jbe
jo
sbb
and
cmc
xchg
cwtl
push
inc
adc
outsl
push
pop
and
mov
jne
jae
das
int3
into
divps
lock
push
cmpsl
add
pop
xchg
das
mov
adc
push
cltd
jmp
cli
mov
fbstp
jne
and
and
das
jg
imul
fisubrs
sub
push
loope
xlat
jae
pop
lret
aad
out
imul
push
lret
test
imul
mov
test
inc
jae
das
mov
fwait
inc
xchg
or
cmp
add
or
ret
xchg
sti
and
fldenv
cmpsb
daa
xchg
or
idivb
mov
cmpsb
mov
lret
in
push
movsl
pop
fmul
jg
stos
outsl
mov
dec
adc
sub
xor
cwtl
xor
mov
xlat
cltd
cmp
cmp
mov
dec
or
add
pop
cmp
or
adc
lahf
daa
inc
sbb
mov
mov
add
push
mov
jnp
lcall
icebp
call
jge
push
adc
outsl
mov
movsb
dec
add
mov
fsts
in
add
fistps
xor
sbb
lds
jle
ss
pop
mov
fcompl
mov
mulb
lods
ds
test
out
push
xor
pop
mov
xlat
pop
mov
jnp
or
and
repnz
adc
jg
inc
negb
xlat
pop
stos
mov
or
jle
mov
cmp
cmp
lret
test
mov
repz
mov
lea
jl
mov
and
pop
cli
fwait
xor
mov
lret
fists
or
jbe
jle
dec
mov
sbb
ss
dec
push
into
mov
mov
xlat
shl
push
adc
pop
inc
outsb
fimull
mov
pop
std
nop
movsl
pop
xor
or
push
xchg
push
mov
xor
push
call
add
je
or
mov
jno
push
jmp
rorl
push
push
cld
lahf
xchg
cmp
and
add
mov
dec
or
icebp
xchg
cli
adc
popl
dec
cmp
adc
cmp
xor
outsb
mov
mov
dec
and
popa
xor
ds
mov
cmp
das
adc
popf
cwtl
mov
mov
clc
test
sub
leave
dec
xchg
adc
cwtl
fbld
mov
xchg
es
and
dec
xchg
xor
scas
push
mov
xor
cwtl
xor
jl
mov
das
mov
add
aas
lahf
dec
inc
ss
jae
mov
add
sbb
in
cli
fadds
adc
xor
and
ret
inc
mov
dec
pop
ja
and
rorb
pop
xor
push
testb
jp
fldt
sbb
int3
into
jb
adc
inc
cld
sbb
or
xor
jle
jecxz
adc
mov
cmpb
ja
sbb
jbe
movsb
lods
icebp
icebp
adc
imul
leave
aam
jle
adc
in
pop
lahf
test
fldl
imul
pop
or
scas
out
fmull
mov
popa
fcomip
xchg
adc
rcrb
jl
out
aaa
mov
ror
mov
jns
pop
flds
sub
sub
xor
jge
out
popa
inc
popf
push
xchg
pop
sub
push
scas
adc
or
pop
lds
mov
inc
xor
pushf
jno
sub
add
push
add
mov
data16
out
mov
mov
add
mov
cmpsl
push
and
loope
mov
roll
insl
inc
pop
ret
add
pop
dec
aas
arpl
insl
aad
insl
lret
jno
je
inc
negb
inc
ret
dec
mov
cmc
adc
mov
out
mov
push
data16
pop
fcmovne
data16
sbb
sub
pop
inc
lea
pop
inc
cld
add
mov
leave
cmp
fstpl
inc
dec
pop
icebp
mov
push
sub
jl
dec
cmp
jae
pusha
or
outsb
cmp
xchg
inc
mov
adc
lcall
push
jl
lods
adc
mov
iret
dec
sbb
scas
cmp
loop
lret
and
xchg
scas
cs
sub
sub
xor
dec
fildll
or
stc
ficoml
cmp
cmpsb
jmp
dec
or
xchg
add
repz
addr16
ss
jecxz
fsubl
lea
int3
push
call
jmp
neg
cmp
loope
sub
in
leave
and
ret
pop
inc
movl
mov
outsb
cmc
sahf
mov
out
aaa
das
cs
icebp
pushf
mov
icebp
mov
idivb
stc
clc
xlat
mov
mov
sti
xlat
movsl
pop
addr16
fmulp
rorl
fimuls
scas
mov
sbb
aad
cs
push
shrl
aaa
arpl
sub
push
mov
or
push
aas
push
je
roll
xchg
xchg
loope
or
icebp
add
pop
or
cmp
push
lock
insl
scas
nop
lods
addr16
xchg
lods
fiadds
sub
scas
outsl
cmp
scas
fnstsw
cmpsb
inc
mov
lahf
aaa
shr
mov
cld
add
push
aad
mov
div
iret
in
ficoms
mov
adcb
fmuls
mov
xchg
mov
cs
xchg
into
dec
push
push
mov
push
aas
std
cwtl
xchg
ficomps
push
out
scas
push
jmp
dec
ja
dec
icebp
stc
cld
cwtl
rcrl
leave
push
test
cmp
test
adcb
pop
mov
in
mov
data16
push
hlt
adc
outsl
xchg
lahf
jl
dec
mov
xor
addr16
sub
pop
ljmp
push
pop
rolb
lods
jbe
jns
xchg
fwait
xchg
mov
mov
or
adc
mov
push
icebp
jbe
dec
mov
ficoms
mov
loopne
push
fcompl
les
decl
xor
mov
inc
shld
or
mov
push
sahf
movzwl
inc
rcll
and
addr16
sbb
jnp
jl
pop
fbstp
push
push
jne
push
fcomps
std
sarb
push
mov
enter
xlat
shrd
jg
in
aas
pop
pop
push
cmp
adc
insb
mov
jno
lods
xlat
dec
cmpsl
push
enter
mov
into
je
stc
sbbl
push
aaa
test
xchg
mov
cmp
or
and
add
sbb
aaa
mov
pop
mov
cmpsb
or
scas
add
and
std
fcoms
outsl
xlat
pop
repnz
mulb
inc
jmp
lret
jo
dec
loopne
lds
jns
push
flds
je
inc
clc
jo
dec
idivl
dec
repz
addr16
lretw
push
ljmp
pop
in
les
pop
mov
test
ficomps
mov
xor
jae
cmp
mov
sbb
ss
cld
sub
xchg
jns
cmp
outsb
incl
arpl
je
addr16
jl
sbb
sarl
inc
xchg
jne
push
addr16
clc
dec
insb
in
shr
loope
inc
fs
inc
addr16
inc
cmpsl
pop
xchg
cmp
inc
sahf
xor
push
xor
inc
mov
test
mov
xchg
mov
sbbl
fistpll
faddp
movsl
addr16
ss
fs
pop
sti
ja
dec
icebp
pop
jo
mov
xchg
push
push
mov
aaa
inc
push
pushf
das
inc
cmp
xchg
push
and
popa
adc
ja
push
enter
aad
int
mov
xor
fcmovnb
cli
nop
std
scas
cmp
popa
out
popa
stc
into
adc
xchg
test
mov
cmp
enter
repnz
into
jmp
into
ficoms
inc
push
sahf
xchg
xor
xchg
push
test
jmp
iret
fsubrp
pop
out
mov
sarb
addr16
aad
lds
sbb
sbb
jle
cmpsl
lcall
or
hlt
pop
lret
mov
dec
push
cmpsl
fbstp
scas
.byte
lahf
