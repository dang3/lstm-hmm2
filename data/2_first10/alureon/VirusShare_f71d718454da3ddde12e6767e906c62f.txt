lahf
fcmovnbe
hlt
dec
scas
outsb
jns
idivb
test
imul
aam
popa
inc
loop
popfw
adc
decl
sub
fsubp
mov
inc
lcall
xchg
and
pusha
inc
inc
pushf
add
adc
hlt
sbb
out
or
xor
or
mov
add
iret
adc
lock
dec
xchg
push
fdivrl
cltd
inc
cmp
and
or
test
jecxz
incl
imul
and
sub
loope
clc
adc
xorl
das
loop
popf
hlt
xor
push
ja
stc
push
decb
sti
mov
ljmp
outsb
jecxz
and
cltd
mov
mov
xchg
pusha
xchg
inc
sub
leave
ja
fs
xor
adc
mov
jns
push
in
jge
push
repz
and
pop
push
push
xor
jnp
outsl
dec
mov
ret
outsl
iret
adc
mov
dec
xor
cmpsl
daa
jns
inc
int
jne
mov
punpckhdq
pop
xlat
lret
jae
add
xor
push
xchg
repz
call
cmp
fs
sti
mov
cs
pop
rcl
pop
aaa
into
add
mov
shll
add
ds
hlt
test
divb
push
cs
adc
mov
test
cmp
pop
fidivrl
xchg
fsubs
scas
push
mov
ss
inc
or
sahf
jmp
lret
vpcmpgtb
mov
mov
and
mov
call
mov
or
push
sbb
cmc
leave
outsb
xor
xchg
fidivrl
adc
enter
test
mov
mov
cmp
jnp
jp
jae
push
push
xchg
cmp
cmp
popa
imul
imul
mov
cmp
add
sub
test
mov
mov
adc
mov
cmp
push
xchg
mov
mov
enter
xor
std
inc
stos
cld
xor
mov
xchg
loope
sbb
or
inc
mov
fldenv
mov
dec
sbb
pop
mov
and
inc
pop
aas
fwait
leave
or
mov
mov
lea
add
mov
inc
adc
cmpsb
popl
dec
test
pushf
mov
push
nop
aam
adc
fs
orb
adc
cmp
pop
movsl
fidivrl
push
sub
lock
loopne
push
or
mov
es
ficoml
imul
fistpll
sahf
mov
add
mov
xlat
sub
sbb
repz
dec
sbb
std
xlat
fs
xor
gs
scas
dec
adc
xor
sbb
test
dec
dec
push
out
fs
jle
pop
mov
jmp
aam
stos
sub
dec
inc
xor
dec
xor
push
and
out
inc
inc
or
pop
add
mov
cmp
insb
into
aad
cs
insl
aam
jae
sar
out
cmp
cld
inc
jns
or
cs
mov
shll
pop
insb
mov
pop
stos
pop
and
sti
add
mov
fidivl
dec
ret
mov
xchg
mov
daa
enter
mov
jo
sub
pop
push
lods
js
dec
scas
clc
and
mov
decl
lea
inc
sub
ffreep
sbb
push
xchg
mov
cmp
sub
leave
repz
aaa
adc
xchg
or
push
lds
loopne
sub
mov
mov
or
in
mov
jne
jle
xor
or
cmpsb
pop
inc
pop
push
test
jnp
inc
lcall
aam
lods
mov
push
xchg
rcrl
cld
pop
pop
jb
mov
push
pop
loop
mov
push
push
mov
sbb
xchg
adc
inc
adc
addr16
cli
mov
jmp
pop
cltd
add
pushf
mov
xor
call
mov
jmp
pop
outsl
into
repnz
sahf
pop
push
mov
inc
sbb
inc
mov
xlat
xchg
xor
in
lcall
into
mov
test
icebp
imul
pop
iret
insb
js
dec
cmpsl
push
in
repz
push
mov
jnp
rep
cmp
fistps
cs
or
mov
or
loop
fisubl
inc
lea
out
sbb
and
add
mov
pop
and
imul
adc
xchg
mov
mov
xor
lahf
lcall
pop
js
les
rolb
mov
mov
mov
in
bound
mov
mov
xor
or
and
shlb
mov
push
jo
lret
adc
cmp
rolb
out
pop
sub
iret
clc
aam
lds
push
xor
popa
repz
out
inc
int3
xchg
and
cltd
fwait
mov
or
inc
push
jp
in
and
mov
push
pop
push
adc
mov
insl
daa
adc
stos
mov
cs
enter
sub
and
and
sub
jle
lods
add
mov
pop
int
sahf
into
into
repz
and
fimull
loopne
out
push
adc
ja
pop
jnp
es
in
cmpsl
in
cwtl
das
test
popa
jae
sub
mov
cmc
adc
and
sub
mov
pop
lahf
mov
outsl
mov
es
pop
push
add
pop
fidivs
cmp
cmp
inc
scas
fadd
jnp
cli
jge
in
in
pop
mov
sub
clc
loop
pop
jl
aam
sub
push
insl
adc
sbb
mov
add
call
insb
push
lret
lret
xlat
lret
fldenv
jns
jbe
iret
loopne
and
push
pop
push
jmp
addb
pop
mov
jno
into
adc
in
sbb
xor
mov
jmp
fistps
es
lds
and
push
mov
ret
jp
push
pop
bound
mov
mov
jno
cmp
push
in
xor
gs
rorl
sahf
outsl
adc
adc
mov
test
sbbl
mov
and
std
or
xchg
cmpsl
cmc
cmp
mov
mov
insb
sbb
mov
mov
jns
test
dec
pop
pusha
imul
and
xchg
insl
xor
adc
in
movsl
dec
mov
mov
icebp
repnz
clc
xorl
dec
call
testb
pop
outsl
xor
xor
not
dec
das
mov
bound
jge
lds
pusha
sbb
negl
sub
in
mov
dec
cs
fs
adc
cmp
sbb
inc
es
push
aam
es
addr16
ds
cltd
sub
mov
jge
push
stos
cmpsb
jnp
data16
pop
fists
mov
cs
mov
in
sti
xchg
push
cmc
aas
jg
add
jnp
popf
rol
loopne
and
fiaddl
inc
xchg
mov
inc
inc
mov
pushf
insb
insb
call
ficoms
shrb
sbbl
sbb
sub
jmp
pusha
inc
pop
xchg
jmp
xchg
fs
sub
cld
cmp
jbe
sub
push
push
movd
fs
lods
add
mov
mov
sub
lcall
xchg
repnz
ficoms
push
icebp
sahf
mov
push
sub
imul
cmpsb
call
test
mov
mov
push
test
nop
fldcw
std
fnsave
int
push
push
add
andb
pop
lods
mov
pusha
sub
popf
mov
lahf
jne
imul
xchg
jmp
pop
in
xor
fwait
adc
insb
add
push
fcoml
sbb
es
jne
fwait
hlt
rorl
xor
stc
lret
lds
lret
dec
mov
aaa
xchg
jns
lret
sbb
xchg
sbb
sub
push
and
jmp
into
mov
mov
imul
xchg
loopne
inc
adc
leave
cmp
clc
pop
inc
ljmp
cmp
sbb
addr16
add
push
test
pop
inc
or
fs
xchg
cwtl
movsl
or
xchg
pop
dec
jae
outsl
push
pusha
lods
sbb
es
outsb
xchg
sbb
in
jge
add
mov
cld
jnp
je
inc
dec
sub
not
mov
inc
pusha
cmpsl
cmp
push
or
xor
jno
hlt
aas
xorb
stc
fwait
in
cmp
or
xchg
cmp
fists
xchg
ss
cmc
sub
rolb
xor
jg
sahf
push
call
inc
pop
sub
jp
andb
jecxz
xor
gs
jmp
push
cmp
push
and
cltd
cld
push
call
jle
xchg
mov
sbb
mov
std
jg
mov
mov
lret
fdivrs
jae
push
push
xchg
sub
fs
mov
and
cltd
push
mov
js
and
iret
jle
xchg
scas
add
lea
int3
insl
pushf
inc
cmp
test
or
cmpsl
das
test
sbb
enter
mov
mov
and
lahf
out
imul
push
xor
imul
roll
dec
mov
or
xchg
subl
cmp
and
fcmovnb
push
pandn
xchg
fwait
sub
add
data16
sub
cld
mov
mov
sbb
imul
mov
insl
mov
push
loope
and
aaa
cmp
in
test
jg
insl
xchg
ucomiss
sub
notl
and
xchg
lods
ret
fists
adc
arpl
mov
and
stc
jne
imul
loopne
or
mov
loopne
mov
fs
mov
inc
inc
fcomip
sub
iret
stos
cli
stos
add
inc
dec
xchg
jno
inc
fwait
dec
lea
enter
gs
cld
or
push
sub
and
mov
jne
push
or
xor
rcrl
popa
pusha
andl
mov
mov
fldcw
push
ja
or
notb
sbb
ds
ss
and
and
rcrb
imul
popf
add
xlat
xchg
xor
sbb
lock
out
jg
lret
movsb
or
xchg
out
cs
push
lods
jle
jo
jl
and
int
sub
aaa
and
ds
rcrl
subb
fimull
cmp
mov
add
push
aad
cld
test
mov
add
pusha
negl
lahf
outsb
jmp
mov
fdivrl
out
sbb
bound
lret
adc
icebp
or
xchg
sbb
mov
mov
pop
mov
push
sar
jae
mov
add
outsl
imulb
sub
divl
pusha
fcoml
xchg
jbe
add
mov
rorb
pop
sbb
lods
leave
pop
push
dec
pop
data16
cmp
stos
out
push
xor
rcll
ret
pop
fdivl
add
or
mov
pop
mov
cli
fstpl
add
loope
jns
adc
xor
inc
adc
and
xchg
push
stc
xchg
rcl
mov
mov
push
sub
loope
pop
outsl
pop
jl
stos
mov
aaa
cmp
shrl
std
mov
sbb
out
mov
mov
gs
out
test
adc
inc
hlt
mov
adc
out
iret
xor
jnp
and
push
xchg
test
inc
std
daa
mov
jp
cli
sub
mov
push
dec
sti
xor
inc
jecxz
out
dec
cmp
jp
lahf
nop
or
scas
mov
cmp
or
jns
ret
test
sub
imul
pusha
mov
faddl
sti
stc
mov
test
call
addb
ret
cmp
adcb
jmp
jnp
int
in
cmpsb
fucomip
insl
cld
jnp
pop
mov
xchg
add
push
popa
push
test
ja
mov
mov
jmp
andl
movb
ja
shlb
loope
in
inc
std
js
loop
inc
push
dec
or
outsb
sbb
icebp
scas
jbe
enter
addb
cld
sub
mov
xchg
dec
mov
cmp
inc
lret
or
pop
loope
test
inc
mulb
jmp
hlt
jecxz
dec
cwtl
sub
mov
les
add
adc
inc
aaa
push
cltd
add
add
iret
xor
cltd
dec
bound
xchg
adc
fidivrl
jg
movsb
lds
into
pop
mov
gs
mov
push
mov
sub
test
mov
lock
lods
mov
jl
imulb
or
sbb
mov
mov
rcll
mov
xchg
jo
inc
aas
jae
xchg
rcrb
adc
add
in
jno
inc
shrb
mov
lcall
inc
ret
push
out
jp
sub
lea
mov
adcl
shr
nop
dec
mov
imul
xchg
mov
xor
cltd
mov
fs
aas
popa
cmp
push
mov
mov
rorb
pop
adc
mov
int
push
lea
jp
jmp
imul
push
lahf
in
popf
call
pop
mov
popf
mov
shlb
add
mov
inc
loop
loopne
imul
rorl
or
ljmp
cmpsl
aas
jns
xchg
jno
push
dec
mov
negl
add
dec
dec
cmp
rcrl
cli
movsl
push
nop
arpl
or
inc
aad
jecxz
inc
lcall
daa
jge
lods
pop
pop
sub
pop
jae
sti
pop
push
andb
sub
js
jns
insl
ja
mov
push
inc
hlt
bnd
push
jno
lds
mov
dec
dec
mov
push
loope
mov
adc
leave
mov
in
bound
ljmp
popa
gs
ja
dec
cmp
pushf
les
outsl
popf
cs
mov
xor
jecxz
movsl
mov
and
aaa
inc
sbb
push
xor
dec
pop
mov
movsb
ja
in
mov
aas
sub
and
cltd
ds
int3
daa
and
mov
mov
mov
sbb
push
cs
xchg
dec
enter
fwait
and
in
mov
sahf
jle
adc
movsl
repnz
sarb
mov
out
fbstp
test
mov
fildll
and
add
push
mov
pop
mov
push
ljmp
mov
inc
sbbb
mov
ret
inc
add
into
std
rcrl
ss
dec
inc
fwait
movsb
cli
dec
lods
out
fisubrs
xchg
adc
cmp
js
push
das
push
fwait
jmp
adc
and
xor
shlb
sarb
xchg
mov
out
add
jmp
jae
xchg
or
cmp
cmp
push
sub
xchg
scas
jbe
iret
xchg
notb
pop
dec
cltd
fmuls
mov
ret
into
fsubrs
xchg
jb,pn
xchg
adc
push
repnz
jns
in
lret
lds
sahf
adc
xor
into
sub
lahf
js
pushf
mov
jle
pop
cmp
repz
stc
repz
mov
push
xchg
pusha
cmpsb
jnp
inc
ret
inc
mov
mov
out
lods
or
pop
push
mov
mov
test
mov
push
mov
es
xor
andl
loop
stos
ds
xlat
jno
mov
mov
dec
cmp
movsl
mov
lock
ss
lcall
jp
les
cltd
mov
push
xlat
int
fcomps
ret
pmulhuw
add
rcrl
jp
test
stc
xchg
push
lea
aaa
jo
movsl
test
lcall
jae
lahf
jns
std
adc
pop
jne
imul
xchg
shll
sub
jnp
out
push
add
arpl
mov
fucomip
cmp
pusha
sahf
mov
int
adc
sbb
fcmovnb
imul
mov
or
imul
lock
adc
sub
cwtl
pop
pop
mov
pop
movsl
rcr
mov
idivl
fnstcw
mov
adc
lret
subb
adc
pop
xchg
dec
outsl
mov
sti
push
cmp
shlb
nop
inc
cmp
test
dec
cmp
add
int
mov
adc
subb
insb
mov
jmp
call
add
hlt
jno
xchg
cmc
adc
mov
mov
cli
popa
sbb
jno
sahf
shrl
mov
cmpsl
and
fwait
push
pop
aaa
cmpl
pop
sahf
cmc
xchg
sbbl
push
or
fwait
inc
mov
xchg
pushf
mov
jle
add
push
and
ds
pushf
cmp
add
daa
fidivs
ret
push
sti
aad
push
mov
movsl
xchg
jmp
sub
mov
and
pop
into
jg
cmp
jnp
pop
add
subb
test
adc
push
or
adc
lea
inc
ret
cmp
pop
mov
push
sub
xchg
or
and
cmpsl
stos
stos
cmp
in
push
pop
into
inc
lods
and
filds
fmull
and
adc
mov
mov
std
daa
inc
jmp
jle
sub
mov
push
mov
jnp
popf
loopne
lret
pop
xor
xor
es
mov
popf
loopne
push
lret
testl
hlt
test
das
or
sti
sub
test
sub
dec
push
insb
and
and
pop
add
scas
test
jno
mov
sahf
imul
ljmp
test
jmp
lcall
inc
test
adc
ds
xchg
sbb
mov
decl
mov
mov
jno
jne
fisttps
cli
add
mul
iret
scas
mov
cltd
aad
cmp
enter
jp
add
popf
or
add
inc
sbb
aam
add
std
repnz
stc
inc
jp
pop
push
push
int
mov
sub
add
in
sbb
je
pop
in
popa
jb
adc
aad
gs
xchg
sub
ljmp
mov
dec
dec
inc
xchg
and
lods
sti
sub
sbbl
or
cmp
mov
adcb
and
mov
inc
jl
stos
stos
popa
clc
xchg
mov
cmp
shlb
xor
xchg
push
cltd
sbb
or
lods
leave
xchg
xchg
mov
test
mov
pop
sbb
push
cltd
pop
adc
pop
ja
ljmp
cmpsb
dec
xor
inc
ret
aas
insb
jnp
test
sbb
xor
sub
mov
jb
in
adc
cmp
mov
xchg
mov
inc
and
fimuls
out
and
test
push
xchg
inc
and
rcrl
sub
add
rep
dec
cltd
sbb
cmp
pop
pop
push
es
pop
mov
dec
inc
push
ja
movsb
jle
pop
lods
mov
iret
int3
mov
pusha
stos
gs
inc
lods
jno
ljmp
call
scas
mov
xor
mov
xor
xor
test
cmp
add
es
lahf
xor
int
repz
shll
pop
ficompl
ret
lods
add
fldcw
adc
mov
push
inc
dec
lock
mov
xor
in
sarl
pop
pop
add
or
or
cmc
popa
xorb
mov
jle
push
push
dec
mov
sbb
icebp
test
fldenv
cmp
xlat
push
mov
div
mov
clc
push
cmc
cmp
push
ds
pop
pop
mov
fwait
std
jecxz
mov
aad
push
jb
push
xchg
lds
cmp
pop
fcoml
dec
xchg
nop
xchg
xchg
fdivl
xor
or
insb
pop
les
pusha
cli
rcrl
sub
dec
addr16
sub
aad
push
xor
push
pop
push
or
mov
adc
fnstsw
cmp
movsl
add
mov
mov
shl
pop
mov
ret
fst
ret
std
pop
xchg
cmpl
lret
pushf
sub
jmp
cmpsl
out
or
mov
pop
imul
orl
out
mov
sbb
push
ljmp
dec
cmp
mov
jo
mov
mov
repz
push
add
pop
jbe
es
fidivl
add
aad
lcall
mov
fs
push
sub
fistpl
dec
sub
shrl
mov
dec
push
push
inc
andl
xchg
fists
xor
jno
or
cmp
insl
ljmp
push
xor
scas
pop
dec
add
mov
icebp
sbb
xor
xchg
push
mov
popa
stc
xchg
mov
and
xchg
mov
jno
push
sub
mov
push
icebp
sub
xor
popa
out
mov
or
and
push
fsubrs
lahf
fst
push
std
jae
das
dec
push
mov
test
btc
movsl
mov
or
inc
mov
lahf
test
sub
push
lahf
push
dec
lret
outsb
loopne
mov
jp
out
hlt
fidivs
mov
pop
mov
divb
push
rcrb
sbb
xor
inc
adc
cmp
dec
or
loop
movsb
mov
xchg
cs
repz
sbb
cmpb
pop
mov
mov
cmp
cmp
xor
push
clc
dec
repnz
int
loop
fdivp
cli
imul
fnsave
out
mov
js
sarl
jle
ljmp
sbb
mov
inc
sarb
lret
jle
test
es
adc
push
ja
roll
ja
mov
jae
sbb
hlt
out
pushf
pop
pop
daa
pusha
xor
sub
pop
pusha
add
js
sbb
pop
lds
je
inc
jmp
push
add
sbb
xchg
scas
cmp
and
fimuls
and
push
aaa
xor
jno
mov
sub
sbb
cmpl
jge
jbe
push
dec
adc
lcall
sub
jne
testb
stos
es
ja
inc
bound
jp
xchg
sub
scas
cltd
ss
subl
jmp
popa
mov
mov
fmull
sub
mov
mov
sbb
push
les
jo
es
stc
cmpsb
daa
loope
push
and
dec
xor
adc
dec
sahf
mov
xchg
add
push
xchg
xchg
sub
cmp
cmc
into
mov
addr16
adc
cmp
fadd
loop
dec
fdivr
adc
push
cmp
out
lea
sub
jb
cmpsl
icebp
imul
lretw
jp
cmp
gs
mov
hlt
hlt
mov
loopne
pop
push
mov
inc
out
mov
add
xchg
popf
fsubrs
sub
cmpsl
dec
sub
andb
mov
lcall
repz
movsb
xor
xchg
enter
push
and
xchg
sub
push
xor
and
cld
jb
add
dec
xor
sbb
mov
in
popa
pop
dec
inc
pop
hlt
sahf
xor
in
inc
jbe
into
and
mov
sub
mov
lock
adc
stos
stc
fcmovu
mov
xchg
mov
jne
pushf
mov
fidivs
gs
cld
lock
adc
jns
mov
std
xor
and
aaa
arpl
cmp
pop
cmp
sbb
sbb
iret
mov
jmp
decb
shlb
jo
aam
push
fmul
ljmp
test
sub
imul
pop
int3
inc
mov
mov
mov
loopne
push
add
mov
mov
sbb
stos
sub
insl
jg
imul
sbb
call
and
pop
sub
jns
lcall
imul
pop
pop
test
inc
push
hlt
mov
sbb
std
sub
sub
inc
test
je
test
or
xor
sbb
shrb
or
in
push
jle
pushf
add
adc
leave
sti
and
mov
pop
fcoms
lcall
push
cwtl
push
mov
pop
push
mov
fistl
ja
jnp
loop
dec
sahf
pop
pop
xor
add
sarl
and
in
rclb
mov
stc
bound
cmpb
mov
xchg
lret
or
ficoms
xorb
sub
add
pop
call
or
out
call
arpl
repnz
cmp
cmpsb
in
lods
mov
push
iret
xchg
fnstsw
lock
mov
add
jnp
ret
iret
lret
xor
inc
mov
and
pop
mov
push
sub
sub
rcrb
mov
pminsw
popf
sub
push
or
pop
sbb
shl
pop
inc
add
inc
imul
or
cmpsb
sub
sbb
popf
sahf
ret
in
rcrb
push
addl
lea
sti
mov
inc
and
nop
int
leave
repnz
out
and
cs
test
jnp
clc
pop
or
and
ret
sbb
push
pop
sub
lea
push
dec
iret
mov
aas
adc
dec
scas
lahf
pop
xor
roll
cmp
aaa
and
dec
das
push
mov
pop
or
and
fldt
fldt
mov
jp
or
jp
mov
sbb
rcr
jl
lds
adc
loopne
jae
jl
js
pop
adc
sub
scas
out
jle
loope
ljmp
out
xor
or
and
sub
pop
enter
loope
mov
add
cmp
aas
mov
pop
rcrl
mov
mov
ffree
cli
push
pusha
mov
es
fcoml
mov
xor
cmp
add
mov
dec
jnp
mov
fistps
and
shlb
xchg
int
fucomip
mov
sub
add
out
jl
adc
fs
andl
sbb
or
roll
mov
push
insb
pop
dec
pop
mov
pop
outsb
mov
sbb
iret
shr
push
xor
sub
dec
pushf
scas
add
inc
int3
cmp
xor
sahf
mov
pop
dec
insl
imul
fwait
test
inc
adc
sub
push
jmp
dec
pop
mov
rorb
movsb
dec
cmp
call
dec
jae
inc
nop
aas
ret
lock
loope
sti
push
mov
arpl
jo
or
adc
jae
pop
add
cld
insb
imul
sub
pop
xchg
addr16
mov
sahf
or
dec
xchg
jne
lret
xor
mov
jae
aad
push
mov
sub
aaa
cmp
imul
push
sti
popf
or
je
jbe
cs
movsl
jp
hlt
cld
test
mov
pop
mov
ficoms
shrb
pop
mov
cmp
rclb
daa
ljmp
aas
outsl
sub
dec
mov
iret
cli
jmp
jnp
inc
jb
mov
mov
jb
mov
sbb
add
psubusb
push
inc
mov
outsb
iret
inc
int3
mov
mov
icebp
mov
out
inc
les
mov
nop
fnsave
mov
loop
ficomps
loopne
dec
mov
sbb
cmp
ret
mov
idivl
pop
dec
inc
jg
mov
or
jbe
cmpsl
outsb
mov
jno
jmp
add
mov
fs
mov
loop
shl
xor
mov
cmp
sets
rcrb
add
lret
and
iret
mov
leave
ja
roll
xlat
sbb
das
xor
lcall
pop
pop
icebp
je
cmpsl
mov
jmp
shll
push
in
cmpb
cmp
test
inc
cmc
pop
nop
adc
lcall
out
dec
daa
cwtl
aaa
shlb
dec
add
pop
pop
jge
pop
aam
test
in
mov
dec
int3
aam
mov
dec
adc
mov
int3
fidivrl
in
ds
xchg
shlb
scas
pinsrw
sub
sub
negb
loopne
fimuls
sub
sub
faddl
lcall
push
or
mov
das
lods
push
and
sbb
lea
push
in
inc
inc
sbb
and
xor
sub
adc
loopne
pop
lds
pop
divl
cmc
cmp
inc
inc
scas
mov
pop
xor
mov
sbb
mov
xchg
mov
popf
and
dec
jg
aam
bound
subb
fcomps
and
mov
mov
pop
mov
iret
gs
popf
sbb
aas
ljmp
leave
sub
xchg
ljmp
lods
xchg
cmpsl
pop
cmp
nop
dec
ffree
and
mov
scas
pop
cltd
cld
cmp
arpl
push
mov
or
sbb
adc
je
lock
jnp
gs
adc
xchg
adc
mov
rorb
mov
jbe
das
mov
xor
cltd
xchg
repz
shl
jne
mov
lock
clc
cmp
sub
je
sub
mov
adc
int
lods
ret
shll
jnp
in
add
clc
xor
xchg
lds
outsl
lods
dec
rorl
mov
mov
iret
pop
int3
push
push
pop
fisubrl
pop
fildll
cmp
cwtl
mov
cli
inc
inc
jge
arpl
cs
stos
int3
dec
or
cld
mov
ss
or
dec
sarl
jle
xor
mov
mov
mov
or
jb
mov
in
mov
movsb
daa
rcl
sbb
jae
pop
mov
daa
and
xor
dec
lock
ja
add
mov
gs
and
inc
push
xor
sub
pop
adc
xchg
mov
mov
inc
fsts
clc
les
jmp
pop
cmp
mov
push
mov
jl
mov
mov
pusha
add
cmpsl
out
cmp
faddl
popa
loope
fnstcw
call
or
add
das
mov
inc
mov
bound
es
and
jge
push
jne
out
pop
xor
in
pop
inc
bound
and
test
roll
mov
loopne
in
mov
idivb
pushf
fmuls
cmp
or
add
cltd
inc
xchg
mov
outsb
cmpsb
arpl
dec
adc
fistl
adc
ficompl
dec
outsl
rorb
dec
test
xor
nop
arpl
jns
daa
test
pop
dec
mov
and
and
repnz
mov
and
cmc
insb
movsl
sbb
sub
or
sub
dec
insl
loop
cltd
jo
out
xchg
mov
pop
outsb
inc
aaa
jg
adc
jns
idivl
mov
cmpsb
inc
popa
push
outsb
jp
cmpsl
sub
or
mov
push
push
pop
movsb
stos
mov
ret
imul
les
out
inc
into
gs
ret
sub
dec
ror
cmp
mov
shlb
adc
cmp
fstl
dec
adc
imul
xor
adc
lea
das
mov
rcl
jecxz
sbb
add
mov
and
inc
cs
ret
cld
lods
insl
popl
pop
lock
xor
loop
insl
push
mov
fsts
sbb
push
and
in
and
aad
xchg
int
xchg
push
pop
mov
loope
add
jbe
gs
jg
xor
push
jo
add
inc
pop
cld
sbb
jecxz
pushf
nop
dec
xchg
ljmp
jo
push
jae
cmp
in
and
leave
std
es
and
arpl
mov
push
in
push
mov
add
sbb
cmp
ret
sti
sbb
and
and
scas
and
pop
call
lods
icebp
sub
ret
or
cmp
cltd
fwait
sub
dec
push
stos
dec
jb
push
hlt
push
stc
xchg
in
xchg
mov
xor
fsubl
stos
cmp
mov
lret
pop
mov
in
scas
jg
sbb
es
mov
movsl
jle
out
xor
mov
cwtl
std
pushf
rcrl
jo
mov
cwtl
pop
cmp
sbb
mov
cmc
cwtl
mov
pop
rcrl
popl
ja
jae
or
gs
fisttpl
mov
loopne
cmp
xchg
sbb
lock
rcrb
test
mov
cli
mov
mov
add
fwait
cmpsb
push
add
dec
cmp
add
mov
aad
jnp
aam
cmp
mov
inc
enter
xor
push
add
lret
mov
mov
insl
lds
movsb
xchg
add
cmpsl
push
out
out
mov
inc
mov
pshufw
pop
insb
je
inc
dec
outsb
mov
and
mov
pop
dec
jns
aam
jns
and
adc
cmpsl
fidivl
aas
sub
stos
mov
cmp
popa
xor
popa
adc
sbb
in
xor
repz
mov
cwtl
fidivl
cwtl
icebp
mov
xor
xchg
xor
inc
repz
andb
xchg
and
aad
das
cmp
mov
add
and
enter
xchg
jo
aas
jp
pop
sub
pop
mov
int
sbb
ljmp
bound
push
cmp
testl
icebp
mov
xchg
scas
les
stos
fsub
adc
cs
inc
dec
xchg
mov
stos
sbb
push
push
jae
shrb
cli
ds
aad
out
push
mov
xchg
stos
mov
pop
push
lock
mov
push
add
movsl
js
mov
and
adc
push
xchg
mov
loopne
jo,pn
dec
jp
add
insl
pop
push
pop
out
out
popa
cmp
sub
in
std
aaa
outsb
push
push
out
imul
adc
or
aas
push
jns
cmp
adc
push
inc
dec
hlt
scas
scas
pop
mov
mov
es
dec
xor
loopne
mov
and
cmpsl
sbb
mov
imul
outsl
mov
pop
mov
and
cmp
bound
fiadds
in
and
cmovbe
leave
push
inc
and
jg
dec
mov
cmpsl
xchg
mov
mov
pusha
xchg
inc
jecxz
test
mov
je
mov
jae
mov
push
xchg
mov
shlb
cld
mov
push
out
pusha
mov
imul
fsubs
jmp
pop
stc
lods
push
cld
scas
shll
inc
sbb
loop
add
fstpl
cmp
andl
ljmp
sbb
movsl
repz
sahf
das
arpl
sub
ffreep
stos
pop
mov
pop
dec
pusha
fimull
cmp
mov
cli
loope
scas
push
add
mov
sub
cmc
mov
jge
push
roll
jb
pop
scas
push
push
jl
inc
jne
add
sbbb
mov
sahf
xchg
and
cmc
push
in
scas
cmc
imul
ja
aam
or
test
add
pop
mov
movsl
pop
push
leave
pop
and
call
pop
add
xchg
mov
inc
loope
or
leave
inc
and
xchg
cltd
mov
cld
xchg
inc
xchg
mov
jne
sub
xchg
jns
addr16
das
pop
or
fsubr
ja
xchg
mov
jl
decb
pushf
mov
add
add
pop
push
shlb
addr16
xor
loop
fldt
bound
add
nop
pop
dec
das
shr
test
fimuls
leave
movsl
aam
adc
rorb
and
and
repnz
sbb
adcb
jecxz
fisubl
fs
adc
xor
xorl
into
add
cmp
inc
cld
mov
adc
mov
bndstx
ret
sbb
fcmovu
and
lods
scas
inc
mov
push
mov
fnstcw
dec
aad
fldl
fs
xor
icebp
and
gs
and
nop
in
cmp
mov
movsl
push
push
adc
xor
adc
testb
inc
loop
xchg
es
cmp
lds
aad
sub
sbb
or
int
ficomps
sbb
sbb
dec
hlt
adc
jo
in
or
or
call
adc
sbb
aam
je
lock
cmpsb
movsb
loopne
neg
push
call
lret
in
test
cmp
hlt
into
into
mov
cmpsb
sub
cmp
xchg
xchg
call
in
xor
mov
dec
fmulp
adc
adc
sbb
inc
mov
out
inc
pop
inc
lahf
xor
and
test
call
dec
cwtl
mov
int3
push
adc
cmc
inc
jge
inc
pop
sub
adc
data16
in
dec
sarb
mov
fcmovnbe
inc
ffreep
mov
and
push
addr16
rolb
xor
pop
int
in
jb
divb
cmp
push
loope
adc
mov
inc
aad
fbstp
or
insb
stos
data16
sub
aam
xor
pusha
sbb
push
cld
jo
sbb
loopne
mov
ss
sub
mov
bound
inc
or
shrb
cmp
mov
in
or
ss
out
mov
pop
test
inc
ljmp
out
adc
aam
push
and
in
dec
fstl
mov
insb
adc
mov
data16
cli
jmp
iret
ret
mov
shll
mov
gs
xor
push
push
adc
enter
pusha
add
and
inc
sarb
dec
repnz
inc
add
sarb
jg
cmp
stc
stos
cli
ret
bound
fs
sub
bound
test
mov
push
jne
pop
dec
jg
cltd
cmpb
sbb
inc
xor
jae
mov
or
icebp
sbb
gs
mov
out
outsb
cld
iret
and
lea
push
lahf
sbb
fdivs
stos
stos
xchg
rcll
pop
out
and
lea
cmpsb
sbb
mov
jge
fisubs
shlb
enter
or
mov
jae
outsl
mov
test
cmp
push
lahf
push
mov
mov
mov
scas
xor
mov
add
insl
jns
ret
js
jnp
lds
test
mov
adc
push
cli
das
mov
cmp
stos
hlt
sub
sbb
jmp
xchg
jle
add
fld
stc
negl
add
cwtl
xor
sbb
lcall
cmpsb
sbb
test
dec
loop
jle
dec
sbb
cli
xlat
jns
xchg
cmc
lds
test
int3
out
mov
push
add
xor
push
ja
fimull
adc
mov
repnz
xor
jmp
push
outsl
test
fadd
mov
push
lock
inc
xchg
das
sti
lret
xchg
add
rcll
or
add
call
insb
icebp
cmpsb
inc
inc
lock
sahf
lcall
enter
pop
fwait
jne
xlat
add
mov
imul
lods
jnp
data16
xchg
je
pop
iret
fnstenv
cmp
std
or
ja
sbb
popf
dec
mov
daa
pop
mov
fildl
jne
sub
int3
xchg
insb
movsl
or
es
and
in
jecxz
into
cmpsb
sbb
je
xchg
fsubrs
or
test
add
sbb
cmc
pop
test
adc
orb
gs
and
sub
mov
fldcw
out
cmp
mov
aad
xchg
rolb
dec
or
repz
inc
es
cmpsb
push
mov
ds
adc
sub
xor
push
sbb
pop
mov
or
mov
lret
mov
stos
sbb
cmp
or
cmpl
ds
xchg
std
mov
dec
cvtps2pd
loope
xchg
dec
lock
test
or
push
rcll
pop
adc
xor
out
adcl
sub
or
mov
je
sub
xchg
push
cs
pop
test
lods
add
and
inc
jl
stos
std
mov
adc
lds
push
fwait
xchg
pop
ja
hlt
mov
scas
adc
sbb
add
aam
fsubl
lds
sbb
in
xchg
mov
scas
popf
dec
xchg
mul
loop
sahf
xor
popa
movsb
loope
pop
shrl
jecxz
or
cld
lods
push
or
lret
push
repnz
cmp
and
sub
jecxz
xchg
repnz
jmp
les
xchg
cld
mov
fstpl
rorb
lods
and
sbb
pop
or
xchg
into
push
or
xor
inc
sub
lds
mov
popa
push
stos
orl
scas
rcl
arpl
cmp
add
fdivl
ret
cli
in
pop
push
ret
mov
mov
bound
mov
aas
hlt
xor
mov
adc
pop
mov
in
je
ret
mov
ret
addb
pop
push
jno
iret
xor
scas
adc
and
xchg
popa
dec
and
sbbb
mov
fs
adcl
pop
push
bound
sub
mov
movsb
scas
cmp
or
mov
jne
mov
mov
fwait
sbb
or
imul
js
mov
fcomip
xor
mov
int
push
mov
xchg
out
arpl
mov
ds
jp
sub
adc
mov
or
cmp
pop
movsb
ret
sar
cmpsb
lcall
mov
dec
cwtl
inc
push
test
dec
fucom
xchg
ja
push
repz
out
in
dec
sub
inc
push
test
push
sbb
aas
lods
jp
stc
and
xlat
nop
mov
and
es
aas
pusha
dec
shrb
xor
and
push
fsubr
jle
lahf
xlat
mov
movsb
and
jmp
nop
test
pop
push
pop
add
pop
sub
mov
sbb
fmuls
xchg
xlat
sbb
mov
pop
xor
or
aad
loopne
cmpb
mov
mov
mov
push
shl
sub
rcr
xchg
cmpsb
loope
in
inc
insb
mov
call
or
hlt
cli
psllw
xchg
jb
add
or
pop
mov
and
test
je
sbb
xor
sub
fwait
je
mov
stos
inc
shl
je
mov
fisubl
lods
mov
mov
ss
aad
dec
das
std
inc
and
mov
jne
insb
push
push
lret
push
cmp
out
jb
or
sbb
mov
lods
add
les
sub
add
clc
lock
out
stos
xor
or
mov
xchg
into
pop
xchg
fidivrs
adc
sbb
xchg
popf
scas
sub
rolb
adc
and
loop
call
or
dec
xor
jb
adc
popf
dec
mov
cmp
dec
xchg
mov
jmp
dec
jnp
out
call
mov
loop
call
jp
outsb
shrb
ds
sub
cmp
jbe
xor
push
fs
inc
pop
lret
mov
and
push
in
and
data16
addl
or
pop
jp
or
mov
adcb
dec
notl
lcall
xchg
jbe
mov
add
repz
std
pop
mov
add
arpl
push
jnp
inc
inc
das
stos
lea
cmp
inc
xor
jp
or
roll
lret
popf
nop
pop
mov
scas
and
dec
sbb
ss
rorb
js
mov
jns
in
and
sbbl
dec
icebp
lret
fcoml
xchg
inc
hlt
outsl
cmp
push
into
push
and
push
test
ret
pop
pushf
stos
inc
jnp
xchg
push
jle
inc
push
adc
lea
or
inc
ror
rcrb
out
mov
mov
adc
popf
int3
add
xor
jb
push
fwait
cs
jl
cmp
fbld
jae
jmp
lods
cmpsl
movsl
mov
add
jns
or
dec
icebp
cmp
repnz
mov
lea
fldcw
fdecstp
dec
ljmp
or
cmp
pop
jns
cwtl
insb
test
xlat
push
lcall
sbb
jbe
lahf
in
call
inc
popa
push
adc
test
mov
out
pop
dec
cmp
mov
into
ficoms
cmp
and
xchg
imul
push
push
inc
and
mull
scas
inc
pop
xor
mov
loopne
ret
or
cli
pop
mov
and
push
pushf
xchg
popa
sub
mov
mov
int3
mov
push
pop
repz
data16
mov
mov
or
mov
push
push
mov
jnp
test
fisttpll
test
push
and
push
aad
stos
in
mov
enter
nop
jbe
aaa
arpl
xchg
add
or
mov
xchg
cmc
sbb
bound
lds
pushf
add
test
dec
shll
sub
dec
sbb
das
pop
inc
dec
shrl
sub
xlat
jg
stos
gs
sub
push
sub
mov
lret
lods
test
into
push
push
push
pop
pop
add
popa
fsts
scas
push
add
and
fidivrl
and
inc
movsl
test
cmp
xor
out
mov
ret
mov
or
or
mov
insl
into
cmp
pushf
sbb
add
pop
andl
fst
pop
into
das
mov
addr16
adc
sbb
jns
aaa
or
cmp
sub
fs
stos
loopne
jge
sub
ret
imul
aaa
or
dec
sbb
jl
add
lods
jb
fwait
and
mov
dec
cmpsl
gs
or
enter
clc
andl
cmp
xor
movsb
push
and
je
call
mov
hlt
adc
push
or
popf
movsl
push
shll
dec
andl
shlb
push
mov
push
int3
scas
lock
rorl
xor
xor
xor
into
dec
xchg
mov
cmp
fisubrl
fiaddl
xchg
xorl
in
cmp
lcall
outsl
or
lahf
jns
loopne
jg
mov
mov
add
hlt
xor
ljmp
jle
bound
into
movsb
push
jl
fcos
popa
scas
pop
repz
stos
outsl
inc
add
inc
pop
push
loopne
lock
ds
mov
or
fldcw
inc
nop
das
imul
cmpsb
push
and
jns
mov
cwtl
or
lock
push
push
adc
daa
xchg
xchg
pinsrw
popf
mov
jne
mov
jns
xchg
imul
jno
adc
pop
xor
mov
popa
sahf
jo
push
cmp
ret
cmc
rcll
mov
sbbb
fistl
jl
dec
mov
loop
sub
or
movsb
cmp
shlb
insb
or
dec
xor
mov
call
cmp
stc
inc
and
je
fcomp
xor
cli
add
push
lcall
add
aas
pop
mov
adc
mov
xor
jbe
test
mov
jge
loopne
xchg
mov
inc
rolb
add
out
mov
or
push
or
dec
jecxz
sbb
sbb
inc
cs
adc
jne
adc
cs
aaa
iret
mov
lcall
sahf
sbb
outsb
push
ja
nop
push
jo
cs
mov
jno
sub
imul
ja
scas
jmp
in
cmp
and
pusha
mov
mov
mov
cs
call
cwtl
cwtl
add
add
insb
cmp
jno
in
jge
and
fcomps
mov
stos
cmp
jbe
sbb
in
stos
enter
xchg
mov
iret
ja
mov
jne
sbb
lock
shrl
xchg
push
dec
mov
sbb
cwtl
dec
xor
or
lea
ret
imul
sbb
or
ret
lcall
daa
test
in
sbb
pop
ficoms
sub
out
shlb
ss
pop
pop
jbe
aaa
jae
xchg
jae
adc
mov
test
add
in
xor
mov
inc
dec
ret
inc
or
ja
fbld
sub
push
and
pop
cmpsl
shl
imul
jbe
pop
xchg
push
lods
jb
fmull
jb
addl
add
frstor
enter
fnstenv
mov
je
fsubs
sahf
lahf
cmp
push
loop
xor
push
jecxz
popf
sbb
jle
jno
movsb
insl
cld
cli
loope
mov
enter
dec
mov
pop
sub
cmpsl
jp
mov
shll
aad
jge
std
inc
cli
push
xchg
icebp
jge
lds
in
dec
out
add
adc
ja
and
fistpll
dec
xchg
or
lods
add
out
dec
lds
mov
out
lcall
mov
pusha
popl
sbb
sahf
xchg
popf
xchg
aad
push
inc
xchg
imul
mov
imul
mov
xor
rcrb
fs
sub
cmp
ljmp
test
sub
ds
daa
jns
jnp
push
xor
or
push
pop
cli
mov
jo
xchg
popf
push
out
je
pop
scas
pop
lahf
pushf
dec
rorl
jl
xor
adc
outsb
cmpsl
sahf
inc
cmp
mov
pop
cmpl
inc
pop
jmp
shrb
shll
push
out
rolb
stc
jbe
or
adc
adc
cmc
fstps
fnsave
add
xchg
pop
dec
and
int
imulb
xchg
imul
ss
jae
fisubs
je
pop
ret
test
add
in
mov
fldl
dec
dec
mov
or
imul
testl
inc
scas
jecxz
insl
xchg
push
jo
jmp
mov
jbe
jmp
fnstcw
push
jno
sahf
std
lods
sbb
mov
rcrb
mov
xor
push
cmp
mov
pop
pop
jg
lods
mov
cmp
cmp
jp
cmc
mov
jecxz
dec
jb
dec
lea
push
movsb
jnp
fdivrs
rcr
fisubrl
out
pop
or
mov
pop
aam
clc
mov
jge
das
loope
andl
dec
dec
xor
fwait
mov
stos
cmp
loope
lret
rcl
stc
push
mov
jbe
je
mov
mov
shlb
dec
out
popa
push
push
sbb
and
lret
ljmp
xor
jo
pop
adcb
or
cmpsl
xchg
push
sub
lods
popa
push
cmp
daa
cli
test
inc
cmc
sbb
add
push
daa
dec
mov
stc
rclb
push
das
cmp
scas
test
lret
jg
jg
and
imul
jne
xchg
jb
mov
test
mov
sbb
shrb
clc
push
idivl
xor
int3
testb
popf
fdivp
sarb
mov
fwait
cmp
add
push
test
push
adc
je
cmp
shr
inc
arpl
or
rclb
fbld
mov
sbb
jns
jb
js
test
mov
js
shll
push
mov
test
jae
fnsetpm(287
sub
pop
mov
shufps
mov
xor
fdivrs
pop
cmp
iret
mov
or
add
adc
lds
in
adc
mov
sarl
mov
movsl
pop
mov
lock
push
fnstenv
fs
ss
cmp
sub
inc
clc
mov
mov
roll
xor
pop
dec
shrb
js
cmpsl
sub
ds
mov
or
fdiv
loop
mov
xor
in
ljmp
mov
out
dec
mov
or
mov
push
les
pop
lock
mov
adc
mov
mov
imul
lods
fwait
or
popa
sbb
push
sbb
aam
idivl
xchg
pushf
mov
mov
adc
jo
in
mov
push
adc
mov
cmpsb
or
idivl
fadd
mov
sahf
mov
fs
mov
cmp
sbb
rolb
enter
int
sub
loop
push
mov
pop
or
mov
sub
jno
cmp
mov
aaa
shll
ret
pop
pop
or
fnstcw
adc
mov
pop
inc
sub
push
scas
xor
cld
std
imul
sbb
push
jle
cmp
test
push
and
mov
int3
sbb
mov
mov
and
adc
cmpsl
or
adc
shrb
dec
mov
fpatan
xor
mov
dec
add
loope
lahf
pop
rcll
xchg
call
cmpsl
js
outsl
add
adc
fcmovu
mov
fidivs
jl
xor
lret
out
insb
pop
sbb
movl
adc
sbb
xchg
mov
ffreep
js
mov
dec
adc
test
dec
adc
add
inc
stos
test
addl
addr16
insb
in
push
loope
mov
inc
stos
ret
fsubrl
or
mov
xor
arpl
out
dec
cwtl
out
mov
jg
inc
movb
pushl
rolb
dec
in
out
or
mov
dec
pop
mov
dec
or
aas
bound
xor
mov
mov
pop
push
jnp
xor
dec
or
mov
mov
subb
or
faddl
out
mov
lock
mov
pop
mov
cmp
jg
lahf
aam
sub
jo
insb
mov
pop
shll
popf
test
mov
fs
mov
gs
mov
loope
mov
popf
jno
imul
push
iret
jbe
sbb
mov
pop
popf
mov
push
fildll
jne
fcompl
lds
cld
out
and
data16
pop
imul
inc
add
jp
mov
test
jp
or
mov
sbb
mov
cmp
std
inc
push
mov
imul
sbb
or
pop
lock
adc
fs
cmp
mov
enter
mov
scas
inc
stos
jne
iret
clc
aad
popa
dec
pop
pop
ficoms
incl
push
fsubr
inc
lea
dec
scas
das
cmp
pop
bound
adc
mov
addr16
adc
cmp
mov
sub
dec
cltd
xor
test
pop
fs
adc
sub
mov
popf
divl
cmp
test
mov
js
sub
mov
in
imulb
mov
inc
lea
test
or
ljmp
ret
mov
add
test
sub
mov
inc
jmp
pop
push
dec
mov
cmpb
xlat
inc
sbb
push
sub
loopne
iret
arpl
shrl
sub
push
das
mov
jge
inc
into
outsb
inc
ret
dec
inc
mov
inc
jbe
sub
xor
pop
xchg
xchg
jp
pusha
test
fsts
xchg
sahf
mov
xchg
adc
out
popf
xor
aaa
ret
call
or
xor
ret
rorl
inc
imul
jbe
push
mov
inc
jo
cmp
jne
inc
push
push
ss
fidivrs
sti
lahf
pop
mov
imul
jb
push
pusha
sbb
mov
mov
xchg
sbb
mov
sti
cmp
loopne
mov
popf
dec
xchg
lods
dec
stos
ss
addr16
fldcw
sahf
mov
cmp
imul
arpl
and
fistps
test
popf
out
gs
adc
add
ljmp
insl
sbb
ret
rorb
jmp
mov
or
test
js
mov
push
xor
ret
loop
jg
out
mov
in
push
push
mov
mov
pop
xchg
mov
dec
xor
mov
add
aad
rorb
pop
inc
fs
cli
adc
cmp
inc
mov
fldl
vmovapd
push
lds
and
and
cmpsb
lock
mov
mov
repz
aas
cmpsb
movsl
and
shlb
and
outsb
insb
push
shrb
cld
dec
sbb
jp
cld
cmp
insl
push
push
leave
cmp
jge
mov
push
push
das
popf
je
jbe
or
fiadds
push
cmp
add
mov
in
pop
addl
lahf
pop
inc
mov
jge
add
vphaddubq
sarl
jp
movsb
add
scas
xchg
fisubl
mov
xor
mov
add
pusha
shll
add
inc
sbb
mov
test
pop
adc
xchg
lcall
inc
sti
fildll
imul
cmp
dec
push
xchg
call
rol
cs
stos
ljmp
out
jo
xchg
cmp
and
jnp
xchg
insl
fbstp
hlt
lret
in
xchg
lds
inc
mov
outsl
cmc
push
cmp
lcall
mov
mov
daa
test
loop
int
sarb
ja
mov
inc
adc
jle
adc
mov
push
adc
mov
sub
pop
inc
cmc
repz
movsl
push
mov
mov
addr16
aas
imul
and
loop
and
test
add
pop
subb
inc
aad
adc
sub
pop
fwait
out
jae
xor
mov
xor
nop
pop
test
mov
test
mov
jl
fisubs
mov
dec
loop
int3
ret
aad
cmp
aas
stos
subl
jo
and
push
pushf
add
adc
add
pop
push
test
mov
les
or
mov
aad
outsl
mov
popf
xor
jno
lods
fidivl
out
mov
int3
jl
inc
xchg
mov
clc
jl
loop
out
and
pop
push
jno
xor
es
xor
push
sub
dec
jo
cltd
pushl
cmc
int
test
xchg
xlat
imul
lahf
enter
jle
cld
insl
std
mov
rclb
add
mov
pop
or
lods
and
fisttpll
or
push
adc
cmp
sbb
pop
bound
ds
or
popa
into
dec
test
stos
push
cmpsb
cld
mov
mov
jne
cmc
push
enter
xlat
mov
cwtl
push
push
stos
push
cmc
jbe
fcomi
js
pop
and
push
icebp
inc
sub
movsl
filds
mov
jae
icebp
add
pop
jl
repnz
and
lret
sub
cmp
bnd
ljmp
sub
cmpb
lret
xchg
andb
mov
mov
mov
adc
xchg
cs
out
add
dec
das
dec
push
lcall
push
jae
jmp
lret
and
insb
pop
mov
popf
dec
es
lahf
aam
xchg
xchg
adc
outsb
lods
enter
jno
push
je
stos
pusha
pop
mov
and
jae
testl
sub
mov
popf
pusha
test
inc
insl
xchg
in
ds
and
into
js
lret
push
add
sahf
daa
and
cmp
pop
cld
stos
cmpsb
call
jle
movsl
in
jg
pushl
sub
jne
add
lcall
pop
xor
out
mov
iret
push
mov
leave
call
or
cmpsl
movsl
stc
lock
sbb
push
js
dec
cs
add
jb
add
stos
ljmp
or
inc
jne
hlt
xchg
ja
cmp
push
pusha
sub
hlt
push
cmp
or
cmpsb
les
pop
rcl
test
mov
fucom
cwtl
jl
mov
mov
mov
dec
and
dec
cmp
jno
movl
adc
popl
adc
fdivr
inc
into
mov
ljmp
test
mov
sub
ds
lahf
imul
push
in
ss
jne
sbb
lret
pop
push
icebp
insb
jae
popf
leave
bound
mov
jge
pop
cmp
imul
or
cld
cmpsl
pop
fstps
xor
pop
xchg
test
dec
lods
mov
lea
add
jnp
inc
mov
aam
push
push
push
lods
dec
sub
sbb
sahf
ds
or
push
loope
mov
dec
pop
scas
mov
inc
push
inc
or
cmpsl
dec
iret
lcall
jecxz
outsl
iret
add
push
imul
adc
cs
add
inc
fsubrl
mov
push
sarb
aas
call
sub
push
inc
shrl
jl
xchg
enter
pop
lock
jle
in
addr16
cmp
lea
xchg
icebp
mov
jge
stc
fldt
popf
repz
insb
stc
and
or
je
adc
aas
subl
sahf
in
lock
hlt
xlat
jp
daa
in
mov
rcrl
out
dec
pop
stc
ror
js
jg
sbb
push
push
imul
push
sub
push
mov
cmp
xor
mov
out
ja
loope
subl
cli
out
mov
std
clc
in
mov
add
push
enter
jae
sub
call
and
cmpl
fisttpl
mov
push
and
js
jnp
mov
push
dec
in
xchg
sbb
jge
adc
adc
push
int3
shlb
data16
adc
push
cmp
xchg
mov
aaa
sbb
gs
fsubrl
jg
mov
loope
xchg
push
mov
aas
push
int
xchg
mov
das
mov
cli
sahf
mov
adc
test
or
orl
mov
fcmovnu
pop
or
jge
adc
lret
adc
dec
jae,pn
stc
adc
sahf
jecxz
popa
jb
jnp
add
iret
popf
scas
sti
xchg
xor
jmp
daa
nop
add
mov
pushf
dec
and
mov
adc
lahf
xor
inc
bound
inc
jg
movsb
stc
mov
fsubrl
xor
mov
mov
hlt
movsl
popa
xor
loope
repz
nop
sub
call
into
pop
lret
jge
ja
leave
fisubs
xor
and
imul
push
jno
cmp
mov
repnz
mov
jae
aam
je
ret
mov
sbb
stos
lret
fdivl
push
shll
sbb
dec
xorb
and
or
popf
lahf
into
push
xlat
xor
je
cmpb
data16
in
lds
call
or
test
ss
fwait
pop
mov
push
js
insb
ja
add
push
mov
inc
jl
test
mov
cltd
jmp
jne
jns
in
add
push
and
es
cs
sub
test
rcrl
cmp
mov
pop
movsb
scas
out
scas
add
jg
cltd
xcrypt-ctr
cmpsl
pop
add
sbb
out
or
mov
mov
fdivrl
bswap
xchg
lods
xchg
icebp
aaa
lds
add
push
movsb
scas
sub
fmuls
mov
leave
insb
cld
ja
cmpb
test
ret
dec
or
cld
adc
fwait
dec
bound
subb
pop
xor
add
lock
and
adc
in
test
push
sub
pusha
pop
or
out
cmp
into
mov
sbb
test
cmpsl
inc
nop
daa
xor
jl
jb
sbb
cwtl
xchg
cmpsb
xchg
mov
adc
adc
pop
sbb
cmp
movsl
and
fcmovbe
jmp
lock
or
pop
adcl
shll
mov
popf
gs
xchg
jge
negl
mov
loop
mov
lods
shl
xchg
popa
xor
imul
fcmovb
pop
jae
test
int
in
pop
push
sub
rcrb
test
std
dec
lds
ds
enter
lods
arpl
and
fcmovnb
dec
mov
mov
ss
inc
jmp
cwtl
cmp
sub
mov
jae
hlt
cltd
dec
sub
cltd
fidivl
sbbb
in
test
mov
cmc
fiadds
push
xchg
adc
in
test
out
adc
pop
mov
lods
dec
push
es
loopne
cld
dec
xchg
mov
xorl
jge
jo
sbbl
pop
cmp
mov
mov
mov
dec
pop
cs
sbb
mov
mov
jnp
outsb
fisubrs
mov
cld
sahf
push
cwtl
mov
lcall
sub
xchg
rol
mov
xchg
jle
xchg
adc
in
dec
fs
sbb
movsl
or
arpl
push
sahf
rcll
das
test
dec
je
mov
add
push
lret
jmp
cmp
dec
add
fnstsw
xlat
mov
push
pop
insb
pop
sarb
in
out
adc
inc
jne
cmpsl
ja
add
pop
inc
je
repnz
repnz
lods
push
pop
test
xlat
add
pusha
loop
cmpb
inc
sub
repz
fdivrp
push
js
in
fstpt
or
sarl
ret
ret
dec
and
je
fistpl
call
sub
mov
and
inc
sbb
adcl
andl
pusha
mov
sbb
cmp
cmp
shl
enter
in
in
dec
sahf
xor
xchg
into
mov
jg
mov
mov
stc
pop
xor
xchg
pop
xchg
cmp
cmp
sbb
clc
xor
in
and
lcall
pop
add
adc
dec
repnz
lret
aas
inc
push
cmp
out
ds
lret
ret
sub
addr16
dec
cli
mov
out
lret
or
jl
xchg
lret
pop
mov
jnp
xor
dec
inc
xchg
cmp
pop
xchg
mov
inc
fcoml
sub
mov
movsl
mov
inc
xor
ljmp
sbb
dec
repnz
jle
inc
bound
xor
sub
out
jl
in
xchg
adc
xchg
push
pusha
xchg
int3
repz
cmpsb
jl
mov
stos
and
pushl
adc
cmpsl
stos
ss
cld
jae
leave
push
cmp
push
imul
cltd
xchg
iret
cwtl
cmpsb
fdiv
cmpsl
or
mov
js
mov
repz
sti
arpl
shlb
mov
pop
out
xorl
lds
hlt
dec
fwait
in
iret
stos
xchg
add
jg
sub
pop
popf
cld
insb
sbb
scas
aam
aad
dec
inc
push
jl
sysexit
sub
in
xorl
pop
out
notl
out
mov
lea
cmp
adc
test
pop
push
mov
and
xor
dec
gs
ljmp
pop
jb
insb
cmp
loopne
jo
inc
and
cmp
data16
ret
and
sahf
sbb
data16
test
gs
jbe
xor
stc
adc
mov
push
fistps
in
push
cmp
enter
ljmp
pop
lret
insb
int
mov
jns
dec
scas
bound
rcrb
mov
xor
test
pop
dec
stc
xor
lods
pop
inc
xor
mov
xor
ds
bound
repnz
cs
dec
sarl
mov
adc
cwtl
cwtl
xchg
mov
mov
cmp
insl
add
dec
int3
lcall
sbb
int
fst
sbb
std
or
test
sbb
mov
sub
inc
xchg
inc
test
mov
arpl
dec
or
xchg
fisubrl
dec
push
pop
in
cmp
add
sbb
cmp
inc
jp
push
jl
mov
in
cwtl
jmp
jae
push
inc
cli
cmp
mov
xchg
sti
lret
sub
cmp
insb
push
adc
pusha
mov
into
ret
fidivl
pop
push
mov
mov
push
test
cwtl
add
ss
cs
aam
lods
adc
mov
sti
or
cmc
scas
fimuls
int3
inc
scas
in
fstps
push
nop
ss
jb
mov
sbb
lds
inc
sub
adc
cmp
cmp
cmpsl
fidivs
inc
xor
sbb
iret
out
pop
jo
mov
test
sub
into
call
dec
inc
mov
xchg
jecxz
outsb
mov
pop
add
into
ds
pop
sbb
and
jb
es
add
aas
xchg
out
fidivl
add
aam
rol
mov
push
jbe
xor
cld
cli
jno
shlb
shrb
xchg
jb
and
or
mov
add
add
jmp
lds
sbb
push
mov
push
mov
mov
jle
sub
in
cmp
stc
cmp
xchg
movsb
push
in
lret
push
movsl
bound
clc
push
repz
enter
pushf
jb
iret
out
mov
lahf
mov
and
js
and
lock
cmp
scas
mov
in
adc
xor
ret
nop
test
sbb
dec
repz
mov
mov
ds
xchg
mov
mov
dec
jne
mov
daa
scas
enter
cmc
fwait
and
insl
or
xchg
lock
dec
push
out
cld
test
mov
out
inc
fiadds
fsubp
push
pop
push
cmp
push
mov
cwtl
add
xchg
dec
repnz
jns
adc
pusha
test
cmp
nop
mov
xlat
mov
add
inc
xchg
xchg
mov
into
mov
sbb
add
int
cmpsl
jae
xor
stos
jg
xor
or
loop
outsl
imul
mov
out
out
jmp
push
roll
cltd
inc
sbb
sub
lods
imul
mov
push
nop
jl
scas
cs
icebp
mov
rcr
inc
bound
hlt
fidivl
ds
adc
fcoml
inc
dec
insb
sbb
push
bnd
je
push
jl
sarl
std
test
popa
push
pop
xor
or
lock
out
mov
xor
stos
cmpb
ja
xor
push
pop
dec
inc
cmp
mov
jns
jg
je
jno
hlt
sub
mov
pusha
jae
nop
inc
dec
std
jecxz
push
shlb
ret
imul
ja
xor
repz
mov
push
outsb
lods
adc
inc
scas
loope
loopne
mov
push
jle
jbe
cmp
out
jge
xor
ret
loopne
into
push
pop
scas
cld
push
xchg
cld
mov
sti
add
pop
fmuls
aaa
into
xchg
pushf
insb
insb
cmp
iret
mov
mov
lods
inc
lahf
inc
sub
fsubrl
es
loop
cmp
loope
jmp
xor
pop
adc
mov
xchg
lahf
dec
xchg
mov
clc
test
dec
inc
testb
addr16
xchg
in
icebp
pop
les
daa
out
xchg
jle
das
sbb
xchg
sbbl
scas
mov
adc
sub
aas
sbb
xor
addr16
lcall
sub
cmp
fisttpll
jmp
adc
lock
cmc
shll
xchg
xchg
cmpsb
int3
popa
ljmp
mov
xchg
lds
cmp
out
mov
sub
add
adc
cld
push
add
inc
adc
jbe
and
pop
stc
iret
cmp
in
xor
cmp
or
daa
jno
mov
rcll
xchg
and
dec
or
mov
dec
or
inc
pop
lea
addl
notl
mov
lock
push
xor
pop
stos
fcoml
inc
mov
mov
pop
cmp
pop
jnp
insb
gs
jl
pusha
imul
add
test
lret
in
shrb
andl
jne
add
xor
xor
movsb
and
stc
dec
idivb
repz
ret
loope
repnz
jmp
cmp
test
mov
js
inc
dec
inc
jp
idiv
add
jne
jp
jnp
test
pop
sbb
dec
mov
xchg
jno
mov
cmp
bound
mov
add
or
movsl
sbb
adc
cmpsl
lret
xchg
dec
int3
lock
in
jecxz
add
inc
int3
fsts
inc
push
jns
cs
xchg
lock
cltd
shrl
mov
dec
mov
mov
mov
pop
je
xor
loope
and
stos
cmc
pusha
shlb
nop
lahf
out
jne
mov
mov
test
sbb
xchg
in
cld
in
cmp
cwtl
cli
xchg
pop
mov
cwtl
xchg
sbb
mov
sti
jg
add
sub
out
push
xor
mov
cltd
sbb
add
popa
movsb
and
sub
jnp
aas
in
rolb
and
lods
xor
popw
push
nop
xchg
adc
inc
or
mov
adc
iret
pop
fsubr
mov
cmpsb
shl
popf
iret
mov
inc
mov
xchg
sti
scas
cmp
call
cli
test
out
xor
xchg
movsb
inc
jle
mov
sbbl
mov
test
roll
add
pusha
pop
inc
dec
mov
jmp
adc
mov
mov
or
in
orb
sub
jl
sub
arpl
out
and
pushf
rorb
xchg
in
sbb
test
das
int3
mov
push
sbb
stos
sbb
jo
aam
pusha
dec
dec
insl
iret
cmpsb
sub
popf
xor
test
adc
jo
test
call
shrd
push
or
cmpsl
je
js
push
jg
inc
test
xor
cmovge
subl
sub
xor
es
into
sarb
push
inc
xchg
in
ljmp
sahf
cs
xchg
mov
add
decl
jo
jno
adc
ljmp
shlb
push
pusha
shr
outsl
xchg
jp
dec
dec
ds
repz
push
scas
lret
cwtl
mov
shll
pop
dec
shll
and
es
push
inc
jp
hlt
xor
aas
jl
pusha
daa
or
inc
ret
sub
dec
data16
loopne
out
jge
in
bound
adc
xchg
or
adc
inc
in
pushf
or
mov
in
sbb
ja
mov
xor
clc
test
mov
push
inc
and
mov
in
jno
jmp
push
cltd
sub
mov
cmp
and
mov
mov
ss
rcrb
imul
adc
jp
lods
xchg
jb
pop
and
test
adc
ret
dec
arpl
fadd
push
mov
cmp
xor
xchg
mov
push
xor
cmp
mov
lods
sub
dec
mov
xor
sti
push
icebp
pop
addb
mov
pop
xor
fsubp
push
cmp
add
sahf
dec
and
icebp
jbe
stc
aaa
adc
xchg
sub
jne
xor
dec
pop
bound
aas
ret
inc
out
bnd
mov
push
leave
jp
cmp
push
test
xchg
out
sahf
mov
push
jne
cs
insl
inc
sbb
xor
in
xchg
lods
repz
popa
fstl
jno
fistps
lcall
xlat
hlt
dec
push
sub
imull
xor
xchg
mull
outsl
jle
pop
adc
mov
inc
mov
or
push
mov
hlt
xchg
push
or
inc
push
ja
sub
loop
inc
xchg
and
call
push
push
adc
sub
fimull
stos
js
push
cmp
lcall
cmp
xor
ljmp
push
into
dec
aam
mov
loope
jle
mov
and
mov
into
mov
insl
sub
push
adc
add
xor
loope
sti
cmp
popl
dec
xor
add
fadd
and
jmp
loopne
pusha
mov
lods
pop
sbb
pop
push
daa
xchg
jb
scas
push
mov
xchg
incl
shlb
das
imul
mov
sbb
dec
sub
push
pop
jp
lret
push
lsl
jl
mov
insb
jnp
xor
and
push
sub
fiaddl
xchg
mov
inc
dec
ret
insb
aam
dec
dec
int
in
xor
pop
push
push
inc
int3
shrb
lcall
ret
aad
mov
int
sbb
ss
icebp
push
lahf
push
loop
fs
cld
sub
mov
sahf
rclb
mov
je
push
adcl
sub
repz
pushf
loopne
or
cmp
mov
aaa
loopne
ret
add
out
xor
stos
pop
imul
in
and
pop
xor
jo
testl
mov
sbb
pushl
negb
mov
aam
pop
sbb
cmp
cld
push
repnz
jl
mov
add
cmp
mov
aas
xchg
jl
mov
movsb
xchg
lret
test
lea
ljmp
cwtl
jecxz
test
add
aad
out
cwtl
pop
jle
daa
and
das
and
test
dec
cwtl
adc
add
addr16
ficoml
jne
ss
sub
stos
pushf
test
rolb
repz
outsb
outsb
lea
fsubrl
push
cmp
xlat
dec
subl
stos
cmpsl
ds
test
shll
dec
sbb
stos
cli
movsb
scas
movnti
fmull
int
stos
adc
loopne
mov
adc
xor
movsl
push
imul
dec
xchg
adc
mov
push
sbb
xor
cmpsl
push
mov
pusha
icebp
lahf
pop
xchg
aaa
mov
jg
fcompl
xchg
sbb
jbe
cltd
aaa
add
push
or
adc
sbb
repz
inc
jns,pt
pop
adc
adc
fadds
mov
test
popf
sub
pushf
aad
cltd
mov
sbb
jle
dec
xchg
mov
add
imul
mov
mov
shll
or
jle
sub
sti
cltd
mov
punpcklbw
pop
push
cltd
cmp
or
push
inc
and
data16
push
js
jmp
pusha
or
lock
test
stos
dec
movsl
in
int
and
cli
lea
mov
push
and
push
pop
rep
jo,pt
orl
and
outsb
pop
mov
sub
jecxz
inc
mov
scas
mov
lods
fdiv
lock
mov
cmp
pushf
jb
int3
les
fisttpl
push
in
int
cmp
fisubs
inc
sub
inc
jmp
rcrb
ds
in
mov
and
mov
fidivrs
cmp
scas
sub
mov
dec
push
mov
nop
or
cmp
ss
mov
stos
pop
xlat
inc
add
in
ss
stc
test
xchg
fst
cld
or
bound
paddw
mov
xorl
mov
pop
push
add
inc
jl
xchg
cmp
inc
bound
fsts
pop
pop
stc
movb
cwtl
scas
sarb
shlb
mov
test
or
aaa
pop
or
pusha
pop
mov
cli
lods
lahf
sarb
sbbl
add
cmpsl
je
mov
sbb
push
push
shrl
add
nop
andb
into
adc
outsb
dec
pop
inc
cmpsb
xchg
dec
xchg
leave
xchg
push
xchg
xlat
in
cmp
leave
push
popa
sub
notb
jns
dec
or
mov
cmp
sbb
js
fstp
jo
or
ret
mov
lahf
sub
jge
inc
jl
xchg
je
mov
xor
jne
ljmp
jl
mov
rol
fs
fldt
rolb
outsb
inc
js
mov
mov
jmp
hlt
outsb
jg
fdivr
int3
xlat
iret
cs
sub
jp
cmp
andb
adc
out
add
shrb
jb
jne
ret
lahf
dec
dec
adc
mov
cwtl
cmpsb
ret
in
iret
and
mov
daa
and
bound
mov
xchg
inc
dec
inc
dec
scas
adc
pop
out
adc
arpl
aam
pop
call
mov
jno
lock
xlat
insl
add
or
adc
sub
jg
inc
dec
jecxz
in
sbb
mov
sti
cld
xor
sbb
jo
fidivrl
nop
loope
data16
ror
test
clc
mov
aas
push
or
popf
pop
jae
std
xchg
pop
add
pop
clc
insb
pop
pop
enter
imul
call
jl
and
xor
fldl
fiaddl
dec
cmp
repnz
xchg
push
inc
icebp
xchg
mov
sbb
mov
aad
jno
test
or
cltd
pop
xchg
dec
aas
out
aam
iret
jns
add
les
cli
fbld
pop
in
out
pop
out
clc
or
ljmp
jecxz
xchg
dec
popa
imul
pop
std
ret
ss
or
dec
or
arpl
jmp
hlt
testb
mov
pop
je
inc
push
mov
out
cltd
push
cmp
dec
mov
sahf
mov
mov
cld
cmp
fcomp
insb
sarl
inc
fsubs
sub
aad
cs
dec
in
xchg
scas
push
rclb
mov
and
mov
sbb
cmpl
out
icebp
jle
sbb
inc
xchg
cmp
pop
fstl
sbb
jns
int3
or
in
test
push
pop
fsubs
mov
cmp
mov
repnz
add
mov
and
fwait
dec
add
cmp
jae
outsl
xchg
sbbl
mov
xchg
mov
add
adc
mov
jae
xchg
inc
test
mull
test
dec
nop
movb
faddl
xor
shrl
pop
mov
in
movsb
xchg
cmp
inc
xchg
pop
jo
push
jmp
loopne
rcr
inc
mov
test
dec
or
mov
lods
adc
clc
add
imul
test
jl
adc
je
mov
inc
jb
fisubrs
das
daa
shlb
mov
rcll
add
rcr
jg
inc
cli
xchg
push
inc
lock
inc
sbb
jmp
push
psubusw
sbb
inc
pop
aam
outsb
dec
daa
sub
jmp
cltd
rcrl
icebp
push
imul
mov
xor
push
stos
inc
adc
sti
inc
out
and
negl
sbb
fmull
mov
call
insl
inc
sub
inc
mov
xchg
fisubl
mov
sbb
leave
fdivs
fsubrs
in
dec
jle
pusha
inc
loop
mov
inc
movsb
pop
xchg
push
cmp
sbbb
iret
mov
repz
popa
dec
mov
pop
test
mov
cmp
push
aad
sbb
sub
andl
aaa
test
pop
mov
jns
das
lods
mov
ds
push
pop
push
gs
daa
lods
and
mov
ret
jmp
das
jl
dec
xlat
call
push
cmp
rorl
nop
popa
loopne
int
add
jge
loope
iret
mov
jno
pop
push
pushf
sub
and
movsl
mov
mov
mov
popf
or
ljmp
pop
mov
jns
add
mov
arpl
dec
insb
cs
inc
sub
add
inc
ret
pop
incb
jle
xchg
lock
or
shl
push
mov
repz
flds
test
push
loop
in
inc
shlb
clc
pop
dec
arpl
xchg
xor
push
mov
loope
push
jmp
sbb
scas
jns
xlat
jb
repz
mov
in
fistps
add
in
mov
popf
mov
mov
jge
arpl
push
lret
adc
xor
fdivs
sbb
popf
daa
dec
js
mov
jnp
cli
or
dec
pop
sub
imul
inc
mul
mov
orb
loopne
mov
push
push
cmp
sbb
int3
lahf
mov
mov
movsb
sub
mov
aaa
xchg
adcb
pushf
adc
mov
in
xor
test
fwait
mov
xor
mov
enter
inc
sbb
mov
push
sbb
pop
bound
in
in
shll
adc
ja
xchg
bndldx
adc
stc
mov
loopne
dec
fmul
sbbb
mov
fcoml
fmuls
adc
stos
mov
add
cmpsl
popa
inc
imul
arpl
push
pop
xchg
or
pop
insb
push
and
adc
popf
les
xchg
xor
add
mov
roll
dec
dec
dec
imul
ret
rcrb
push
jmp
xchg
mov
add
push
repnz
sbb
fsub
sub
pop
and
in
mov
adc
push
das
outsl
loope
lcall
mov
and
mov
out
and
out
mov
sti
jmp
add
sbb
inc
xor
jb
pop
imul
xor
andl
pop
xlat
add
clc
pusha
and
pop
mov
push
mov
aas
fs
xor
jl
bound
loop
dec
pusha
sub
loop
cmp
sub
and
stos
in
inc
adc
mov
cmpb
bound
inc
or
add
lods
int
jmp
testl
in
mov
in
and
imul
adc
bound
ljmp
lahf
jmp
mov
test
nop
hlt
add
or
jl
loop
pop
adc
rclb
inc
add
push
mov
cmp
sbb
mov
push
out
inc
mov
js
dec
movsl
lahf
inc
mov
mov
je
lcall
dec
jno
arpl
ret
and
rorl
subl
lret
cmc
cmpsl
lret
push
sub
cmpsl
jmp
xchg
lret
fisttps
xchg
push
enter
sbb
cmp
add
cs
std
idiv
pop
push
pop
and
or
mov
addb
mov
pusha
out
rcr
rcl
dec
adc
push
sbb
sbb
aas
jo
mov
mov
lret
orb
xor
xchg
sbb
out
ds
or
push
out
xchg
iret
stos
lret
jne
ja
dec
fcom
adc
jnp,pn
ret
lods
push
test
sub
imul
dec
dec
js
sbb
cmpsl
jb
mov
cmpsl
push
adc
cmp
push
mov
out
sbb
sub
arpl
xorb
clc
fwait
shl
cmp
and
jnp
std
add
shrb
pusha
mov
inc
inc
xor
adc
or
dec
cmp
loopne
pop
test
rolb
mov
into
pop
fstpt
in
add
insb
mov
inc
lock
movsl
and
out
xor
add
aaa
xor
aad
adc
sub
lock
add
fistpl
hlt
rcr
mov
scas
in
push
jbe
popf
data16
mov
xor
lret
call
ds
mov
xor
inc
lods
je
cwtl
sahf
addb
lret
or
repnz
jns
ds
push
adc
imul
mov
mov
xchg
add
enter
dec
ret
pop
andl
add
movsl
negb
sbb
test
bnd
pusha
sub
aas
test
fdivl
aaa
pop
addb
es
jmp
pop
mov
hlt
flds
pop
xorl
xor
xchg
fwait
repnz
mov
dec
mov
dec
adc
xlat
or
in
clc
lods
mov
jge
imul
push
sub
dec
lahf
into
push
pop
cmp
scas
push
lods
mov
inc
popf
int
mov
and
jg
sub
sub
and
outsb
notb
xorb
stos
inc
jmp
jg
xchg
loopne
mov
arpl
aam
test
pop
clc
adc
loopne
nop
xchg
lcall
in
subl
inc
xchg
mov
mov
xor
insb
add
jne
enter
mov
adc
or
cmpsb
jns
inc
push
fnsave
cmc
aad
or
jne
jecxz
gs
jne
push
or
cli
and
and
outsb
sub
js
ds
lock
sbb
out
in
movsl
cmp
std
loope
insl
and
in
mov
jmp
icebp
mov
or
mov
enter
cmp
andl
es
push
dec
sub
lahf
fmul
mov
or
mov
cld
ss
rorb
jle
int3
nopl
ret
or
nop
xchg
adc
push
sub
sbb
out
adc
addr16
addr16
out
ss
cld
jno
sbb
into
fiaddl
inc
aam
xchg
pop
xchg
lock
xor
dec
ja
sub
and
int3
mov
add
sti
pop
nopl
je
ficoml
jnp
divl
movsb
jp
jge
mov
inc
lea
dec
pop
sarb
xchg
cmp
mov
fs
fst
mov
arpl
and
jb
outsl
pop
arpl
nop
xchg
mov
dec
inc
mov
adc
cmc
clc
xorl
and
test
aas
int3
scas
sbb
sbb
in
cwtl
rorb
mov
clc
icebp
mov
lcall
adc
push
mov
add
adc
cmpsb
inc
jge
mov
jecxz
jle
shll
mov
loope
dec
mov
ds
sbb
adc
test
shrl
ret
sbb
clc
cmp
sub
dec
addl
icebp
aad
pop
xor
mov
mov
in
mov
mov
sub
stos
bound
mov
sbb
or
xor
push
aad
outsb
lahf
insb
int3
pusha
dec
mov
cmpsl
sahf
in
mov
scas
shll
xor
adc
pop
cmc
mov
mov
dec
mov
sbb
movsl
jl
pop
aaa
dec
jge
or
xchg
push
jge
cmp
mov
add
xor
inc
ljmp
xchg
in
icebp
pushf
arpl
push
dec
out
leave
andl
pushf
jnp
popf
shrl
inc
adc
loope
mov
mov
inc
jbe
pop
sub
lret
sub
nop
daa
fdivl
push
pop
pop
adc
xor
fs
or
cmp
dec
rol
repz
or
icebp
sbb
outsl
fdivs
inc
and
jecxz
movsl
sbb
fisubrl
mov
push
jl
pop
sub
cld
addr16
scas
int
mov
cltd
das
repz
aaa
mov
gs
outsb
xchg
ret
push
stos
xlat
xor
orl
add
sbb
cmpsl
inc
repz
arpl
je
xchg
or
sub
out
test
into
popa
imul
in
loop
xchg
in
in
jo
add
cmp
divb
jl
ret
cs
leave
xor
jge
push
cld
sub
pmaxub
addl
iret
mov
pop
into
pop
push
sarl
loop
loopne
or
lds
and
fstps
dec
outsb
fcoms
jne
dec
mov
sbb
xchg
xchg
adc
repz
cltd
lods
pop
ljmp
mov
or
clc
addl
or
int
rcrl
jg
xlat
test
pop
push
pusha
das
or
lods
jecxz
jge
jbe
in
int3
shll
dec
mov
push
negl
jb
jno
xor
into
dec
add
mov
pop
outsl
jno
jnp
dec
cmp
mov
inc
ljmp
mov
test
xchg
sub
and
adc
dec
xchg
jbe
aad
xor
insl
rorb
jecxz
and
jno
test
sub
cmp
sbb
pop
adc
call
test
push
clc
aad
jno
xchg
dec
sub
adc
mov
outsl
mov
push
mov
xchg
cmp
lahf
and
lret
sub
bound
xchg
lret
mov
lock
hlt
dec
pop
aad
call
fisttpl
sbb
mov
mov
add
push
ljmp
test
mov
mov
xchg
int
insb
sti
ljmp
xchg
lahf
test
popa
scas
and
in
arpl
lahf
dec
add
in
or
in
inc
stos
and
mov
int3
out
sbb
lret
cmp
repnz
inc
mov
inc
fdiv
int3
andps
or
fs
push
or
pushf
xchg
sahf
or
outsb
mov
pop
jmpw
sbbl
cld
cwtl
adc
and
and
dec
and
mov
jle
decl
lds
inc
in
popa
or
loopne
int
xor
negl
mov
pop
sub
xchg
dec
and
clc
pop
cli
mov
arpl
jae
xchg
int
add
dec
test
clc
xchg
inc
mov
mov
add
lds
dec
or
add
sub
arpl
or
xor
leave
hlt
dec
mov
sub
cmp
push
mov
arpl
ret
rorl
cmc
pop
movsb
inc
and
mov
pusha
ret
inc
add
jmp
fwait
jo
aaa
test
mov
xorb
xchg
add
scas
mov
lret
sub
adc
mov
enter
les
and
testb
dec
xchg
test
insb
sbb
sti
push
fsubl
xor
ja
clc
bound
daa
xchg
mov
xor
inc
adc
imul
xor
mov
mov
gs
xor
xchg
or
dec
jg
stc
mov
lods
push
mov
arpl
rcll
imul
and
pusha
xor
pop
and
sbb
mov
pop
je
aam
notl
je
jb,pn
scas
jae
aas
push
mov
imul
leave
sub
push
jmp
push
fldenv
mov
pop
jmp
sbb
mov
in
push
xchg
pop
pop
shlb
test
insb
adc
inc
mov
adc
pop
sbb
roll
sbb
jl
lcall
push
cmp
and
adc
nop
rclb
pop
jno
shl
push
push
dec
mov
sbb
arpl
test
imul
daa
xchg
and
packuswb
mov
andb
cld
jo
sbb
ret
pop
sub
xchg
mov
inc
je
mov
cli
cmp
in
call
push
xchg
push
sub
lods
xchg
and
add
dec
lock
fwait
mov
in
jge
sub
in
fwait
xor
mov
int3
xchg
clc
mov
enter
rclb
mov
lahf
cs
dec
int3
xchg
jns
vpmovmskb
mov
mov
lret
mov
mov
adc
test
jno
pop
in
jae
cltd
xchg
inc
adc
inc
pop
sub
out
cs
rcr
insl
jbe
mov
push
dec
test
je
mov
xchg
movsl
mov
popa
stc
lahf
out
mov
jns
sub
jns
xchg
jo
mov
cmp
sub
data16
fcoms
mov
mov
arpl
fldenv
mov
insb
xchg
and
loopne
mov
bt
jg
out
push
cld
sbb
ljmp
jp
pop
pop
push
pop
xchg
sub
add
in
cmpsb
dec
ret
jmp
ss
hlt
sub
cmc
fdivrl
lds
sbb
movsb
pop
mov
mov
push
dec
out
test
and
sub
mov
push
repnz
xor
cli
leave
push
ljmp
pop
jp
es
jno
add
add
enter
mov
xor
jmp
mov
push
jo
jae
pop
xchg
mov
ror
pop
call
out
mov
mov
sti
adc
cmp
stc
jge
jb
mov
mov
mov
add
loopne
stos
or
aaa
adc
and
fldl2t
fs
xor
push
loopne
or
or
push
imul
imul
mov
add
pop
popf
enter
jecxz
push
mov
sbb
sub
or
dec
mov
lea
aaa
shl
in
inc
out
jge
jo
push
cwtl
shrl
sbb
dec
mov
dec
xor
loop
jne
and
addl
repnz
inc
adc
in
sbb
jmp
xchg
shrb
arpl
mov
fmuls
jno
xor
cmpsb
sbb
int
test
push
push
cmp
sbb
mov
inc
adcl
xchg
sub
ss
test
sbb
mov
mov
adc
movl
insl
or
mov
cs
ljmp
cmp
fsubrl
addr16
fdivrl
in
inc
shlb
test
stc
dec
hlt
jl
je
and
mov
pop
mov
sub
jecxz
push
ret
jo
jae
xchg
std
sbb
mov
out
stc
fldl
sub
sub
xchg
push
add
mov
dec
add
dec
arpl
test
and
ss
outsb
dec
adcl
mov
mov
rclb
sub
bnd
pop
arpl
sbb
into
mov
dec
xorl
cld
dec
test
in
shr
jge
xor
out
and
lea
mov
jnp
adc
aaa
inc
roll
cmpsb
stc
addl
int
int3
es
mul
in
out
adc
dec
es
call
jbe
jnp
and
add
mov
sbb
push
and
loop
jnp
add
shll
sub
dec
mov
fdivrl
cmpb
ss
xchg
daa
adc
jb
or
into
js
data16
mov
std
test
in
test
jnp
bound
bound
sbb
data16
movsl
jne
dec
imul
jnp
pop
adc
xor
adc
add
xchg
sbbl
sub
in
and
insb
test
mov
flds
pop
push
int3
pop
cmpsb
adcb
adc
es
xchg
adc
xchg
scas
xchg
pop
std
fildll
popa
or
sbb
pop
sub
pop
adc
pop
imul
cld
sti
scas
ljmp
jmp
xchg
andl
lock
and
test
rorb
and
ljmp
sub
out
add
imull
sbb
pop
fsubl
jl
out
out
stc
add
stc
inc
fcom
rclb
fiadds
or
adc
es
xchg
enter
mov
and
cmp
xchg
inc
inc
fisubl
mov
test
pop
cmp
push
repz
inc
mov
push
add
push
in
xchg
jp
xchg
lcall
arpl
sub
mov
push
adc
pop
jb
adc
sbb
cmp
mov
fisttpll
xlat
lcall
jne
into
dec
in
lds
pop
jne
or
jne
add
or
ss
jbe
xchg
cltd
cmp
sub
jo
xor
fisttpll
iret
popa
add
clc
push
arpl
adc
cmp
cmpsl
mov
dec
add
dec
mov
mov
nop
mov
xorl
adc
test
pop
push
xor
imul
dec
or
mov
inc
mov
or
mov
pop
mov
dec
xor
or
xor
daa
jge
cmpsl
aam
mov
push
cmp
push
aaa
ljmp
into
jnp
pop
and
aaa
xchg
inc
call
mov
cmpsl
or
test
test
addr16
push
imul
dec
pop
push
cmpsb
sti
push
test
jle
repnz
js
mov
xchg
repz
popa
mov
sbb
negb
setne
enter
pop
shll
jge
fldl
xchg
sti
xor
mov
fistpl
out
sbb
pop
ss
mov
sub
sbb
lock
outsl
sahf
sub
out
mov
jle
xchg
inc
cmp
fnstsw
pop
add
sbb
pop
inc
enter
push
inc
gs
sti
fnstsw
imul
in
lret
mov
jbe
sub
lahf
dec
in
mov
mov
pop
mov
subl
sbb
jp
or
mov
int3
clc
dec
push
faddl
lea
test
push
stc
add
mov
xchg
lahf
pop
adc
imul
sub
mov
pop
adc
pop
call
mov
ja
push
in
fcoms
nop
sbb
mov
stc
add
xchg
xchg
cmp
push
push
xchg
jl
loopne
popa
dec
mov
out
mov
cli
jp
ljmp
rcrb
nop
or
jl
jmp
cmc
push
fisubl
or
jnp
mov
and
pop
sbb
jo
push
xchg
shrl
cli
push
int
mov
out
imul
pop
dec
incb
add
rol
adc
lcall
in
push
or
sahf
inc
and
pop
hlt
lret
mov
scas
ret
sub
movsl
faddp
sub
dec
sub
lods
into
popf
lea
and
cld
ja
jne
xor
out
fstps
push
inc
leave
insl
arpl
xchg
push
js
mov
jecxz
jno
jno
in
jg
mov
cld
or
movsb
loopne
test
push
xlat
add
mov
push
aaa
hlt
or
stos
sahf
hlt
popa
mov
mov
dec
push
cs
pop
add
hlt
jl
out
and
clc
or
sbb
mov
les
jno
dec
and
push
mov
or
jbe
sbb
stos
shl
inc
cmp
lea
push
xchg
mov
stc
and
xchg
cmpsl
aas
mov
mov
inc
test
cs
int
pop
cld
add
adc
fcoms
imul
cmpsl
cmp
push
std
push
es
or
shrb
push
les
mov
js
int3
xor
movsl
sti
dec
inc
in
adc
data16
jecxz
lret
pop
loop
lods
push
cmpsb
pop
subb
aaa
gs
xchg
xlat
sbb
mov
and
mov
cltd
in
xchg
push
leave
mov
mov
dec
ficomps
xchg
call
imul
sbbl
loop
fmuls
jmp
andb
ret
push
dec
ljmp
out
ljmp
and
jbe
sbb
loope
xor
nop
add
stos
jo
testb
and
int
jbe
inc
mov
mull
mov
jno
mov
cmp
xor
ds
sub
cmc
cmpb
jb
adcb
leave
mov
lock
outsl
adc
or
push
push
sbb
add
nop
add
adc
cmpsb
int3
mov
ficoms
cmpb
clc
cwtl
or
lods
js
or
lahf
pop
dec
addr16
sbb
mov
mov
popa
movsl
popf
jbe
inc
pushf
pop
fisttps
jl
lret
popf
fidivl
and
call
jbe
pop
aaa
in
sarl
xor
jle
xor
fcomps
lock
sub
dec
scas
imul
cmp
clc
ret
int3
sbb
inc
test
pop
cwtl
push
jnp
repz
repz
loop
push
scas
dec
mov
push
and
fcomps
lods
arpl
outsb
jecxz
mov
add
hlt
mov
lcall
mov
and
pushf
pop
sbb
xchg
cld
and
ja
jns
imul
cmpsb
rcrl
push
pop
into
or
pop
and
push
stos
ret
adc
jge
adc
sbbb
cli
mov
sub
push
aam
inc
jecxz
in
cmpsb
mov
add
lahf
fwait
enter
bound
mov
push
mov
enter
mov
jl
outsl
insb
sti
sahf
inc
sbb
ja
push
inc
in
das
icebp
or
pop
push
cmp
movsb
jne
int
mov
cltd
std
pushf
outsb
sub
std
xchg
cmp
fisubl
adc
dec
push
imul
leave
lods
pop
int
pop
mov
enter
and
movsl
mov
mov
sbbb
test
inc
sbb
test
push
js
push
into
es
out
or
fnstsw
sbb
and
pop
sbbb
sub
adc
jge
pop
aas
or
push
or
jbe
or
xchg
pop
push
lret
jecxz
psubsw
xor
pop
add
repnz
stos
mov
inc
inc
jo
mov
cmp
inc
jo
ja
stc
xor
mov
mov
push
cmp
cmp
cmp
inc
dec
xchg
in
xchg
scas
or
adc
aas
hlt
in
pop
xchg
into
xor
lds
push
movsb
inc
fs
adc
push
insb
rcrb
push
scas
sbb
movsb
lahf
mov
mov
nop
inc
lods
push
dec
lods
jmp
add
std
std
gs
fwait
xor
enter
ret
mov
xor
jb
push
mov
jno
sub
cmp
push
adc
or
flds
mov
fs
push
insl
jle
fnstsw
inc
xor
fcmovbe
xor
aam
mov
jbe
inc
popf
ficomps
ds
cmp
inc
dec
push
sahf
leave
adc
inc
jno
xchg
int3
outsb
imul
mov
jmp
cmpsb
sahf
popa
stos
and
mov
mov
mov
scas
dec
mov
decb
lock
lds
shrl
aas
pop
or
sti
data16
lds
es
push
push
jge
push
test
test
ljmp
inc
aad
idivb
je
jne
fwait
and
dec
ljmp
aas
xchg
rcrb
out
inc
repz
adc
es
dec
std
rorl
popa
into
xor
xchg
out
stos
js
pop
adc
sub
in
sub
ja
mov
add
shl
mov
dec
adc
in
stc
or
jne
pop
roll
in
push
test
xchg
imul
and
shlb
add
fs
xchg
sbb
scas
aad
jne
insb
mov
push
in
push
sahf
jl
lcall
jo
dec
push
add
and
stc
int3
outsl
mov
xchg
scas
sbb
add
insl
cld
into
loop
pop
scas
pusha
iret
inc
xchg
fs
fsubrl
jle
and
sbb
orl
push
ffree
pushf
mov
jecxz
mov
or
int
fdivrs
insl
je
jge
mov
jns
ja
inc
in
add
cmp
pushf
dec
sbb
adc
aas
imul
mov
pop
shll
ficoml
sbb
loop
in
and
idivb
and
sub
mov
fbstp
mov
push
pop
xchg
dec
push
mov
mov
ds
xor
inc
jo
ja
adc
jmp
jecxz
outsb
fs
adc
pusha
push
enter
imul
add
pop
jle
ret
inc
sti
jmp
loope
sbb
mov
stos
adc
mov
cs
in
into
xchg
pop
add
add
sbb
nop
adc
aam
imull
pop
push
imul
lea
out
xchg
push
fistpll
dec
pop
mov
das
sbb
imul
cmpsb
arpl
adc
adc
leave
jbe
mov
ljmp
pop
push
outsb
dec
lret
mov
ljmp
xchg
adc
pop
pusha
outsl
cwtl
test
xor
subl
mov
and
mov
adc
sbb
cmp
mov
roll
mov
pop
addr16
aas
push
fsubp
cmc
jecxz
insl
push
sti
pop
xor
insb
loopne
gs
xchg
xor
aam
jecxz
cmpl
fnstcw
pop
and
stos
pop
lock
add
sahf
fcoms
jmp
pop
loope
lds
sub
adc
leave
mov
mov
cmp
stos
repz
inc
xor
sbbl
xchg
mov
mov
dec
sub
leave
sti
jb
or
mov
sahf
loope
and
mov
jmp
pop
andb
pop
or
mov
rcrl
pop
adc
and
jmp
mov
mov
iret
xchg
pop
push
sub
sbb
into
push
cmpsb
fsubrl
sub
mov
bound
jg
jnp
loop
xchg
into
pop
in
cli
dec
sub
insl
mov
inc
fstps
mov
push
nop
mov
or
push
mov
cli
sarb
sbb
pop
cmp
mov
xchg
rorb
xchg
fimuls
mov
xor
daa
sub
sti
and
jno
inc
mov
sbb
pop
loope
fwait
xchg
ficompl
iret
sub
popf
jbe
add
mov
mov
jg
insl
js
cwtl
add
sbb
movsb
fsts
push
mov
mov
push
pop
icebp
jnp
rcll
mov
pop
pop
lahf
cmp
inc
test
inc
mov
and
lods
mov
add
pop
push
xchg
dec
sub
pop
in
dec
fs
push
mov
add
pop
loopne
xorl
or
cmp
sbb
js
or
lahf
loopne
cmp
xorl
pop
mov
daa
xchg
sbb
insb
cs
dec
xchg
mov
out
and
xchg
sub
cltd
addl
xchg
mov
mov
mov
leave
call
cwtl
shlb
call
push
push
or
lods
xchg
xchg
sub
push
rolb
push
adc
dec
or
push
mov
dec
and
loop
mov
pop
fwait
push
mov
lds
sub
cli
mov
paddd
sub
fsubr
test
lea
mov
ljmp
aad
add
push
nop
imul
outsl
add
jg
imul
pop
push
daa
dec
cmpsb
mov
adc
jp
ja
scas
sahf
mov
lds
push
pop
fs
subb
stos
leave
lods
sbb
xchg
insb
out
adc
add
and
push
test
movl
out
mov
test
xor
push
xchg
adc
push
dec
pop
sarb
mov
jnp
mov
mov
push
outsb
or
mov
mov
jmp
lea
ss
cmp
lret
scas
jmp
pop
lods
mov
stos
movsb
or
dec
dec
dec
loop
and
push
cmp
imul
fcoml
pop
movb
loope
mov
cmpsl
out
add
adc
pop
leave
mov
sub
bound
nop
push
inc
inc
js
cmp
test
in
lcall
pop
jb
ljmp
jb
in
repz
inc
out
subl
das
xor
mov
xchg
test
sub
fmul
add
xorl
loop
xchg
or
mov
lds
sbb
inc
in
out
or
sti
adc
mov
cwtl
icebp
ret
sbb
pop
cmc
aas
push
jnp
mov
xchg
stos
imul
not
mov
mov
and
add
sub
aas
cmpsb
sub
inc
xor
stos
cmp
dec
xchg
shl
pop
or
fmuls
jne
stc
jo
mov
jns
data16
xor
in
fcomip
jl
pop
out
mov
push
pop
xor
and
rorl
fsin
rorl
jo
addr16
in
or
das
cmp
flds
mov
push
aad
push
imul
fcompl
pop
dec
loop
mov
lahf
popf
inc
ja
cmpb
ds
sbb
adc
push
mov
mov
jl
into
cwtl
pop
stos
lret
out
push
mov
fbld
mov
mov
mov
leave
pop
cli
xchg
lea
add
or
add
lret
cmp
xchg
mov
mov
aas
inc
ss
cld
out
loopne
sbb
push
fldcw
pop
cli
cmc
js
inc
lds
fucomp
outsl
sub
icebp
mov
nop
pop
xchg
mov
push
mov
lcall
stc
cmp
sub
stc
cmp
stc
cmp
pop
cmp
dec
sub
and
pop
mov
test
gs
or
outsb
call
ficomps
aad
fimull
outsl
pop
rcl
jp
outsl
lods
pop
jnp
dec
push
cmp
mov
mov
pusha
jns
push
lods
test
pop
and
adc
mov
xchg
ss
sbb
sub
push
dec
outsl
popf
fwait
mov
insl
ret
cmpsl
mov
jne
outsl
pop
lods
jne
cmp
mov
jnp
jbe
mov
pmulhuw
fs
subl
lds
xor
inc
daa
shll
popf
ficoms
xor
iret
mov
cmpsb
jge
in
push
cmp
lods
push
aaa
sub
jmp
lahf
iret
adc
cmp
jge
cmp
sbbb
addr16
sahf
cmp
jmp
dec
sub
dec
push
cmp
sub
sub
jb
jl
aam
jo
add
xor
loopne
pop
or
cmpsb
fdivrl
out
movsl
popa
cmp
mov
popf
ret
dec
adc
adc
lahf
test
and
jno
fiaddl
adc
xor
clc
fs
lods
push
jp
cmp
add
inc
arpl
int
in
mov
fdivrl
pushf
xchg
cmp
idivb
sbb
lcall
mov
cmp
adc
scas
repnz
or
stos
loopne
mov
xchg
push
hlt
stos
outsb
decl
pop
dec
lock
cmp
jnp
sub
std
lahf
cmpsl
adc
shrl
adc
mov
push
mov
add
nop
fs
mov
xchg
out
outsl
push
mov
cmp
nop
jg
push
add
fldln2
pop
ljmp
sbb
lods
jl
lods
ja
dec
test
sbb
pop
jmp
out
mov
arpl
cli
aam
cmp
adc
cltd
mov
aaa
lds
or
imul
and
aas
enter
cmpsl
mov
cmp
ret
lods
push
pop
cmc
lret
lock
cmpsb
fnsave
adc
inc
pop
mov
insb
mov
cmp
push
aaa
stos
dec
push
notb
mov
jl
into
cmp
lret
inc
cmpb
cltd
jo
mulb
loope
cmp
hlt
mov
push
lock
sti
daa
jbe
cmp
mov
xchg
scas
call
jnp
lret
push
insb
inc
inc
dec
xor
xchg
cltd
adc
jecxz
call
enter
mov
lds
dec
ret
inc
fbld
mov
pusha
cltd
aam
cmp
scas
add
mov
das
icebp
shll
fmulp
add
adc
out
bound
movsl
xchg
movsl
xchg
cmpsl
rcll
adc
xchg
cmp
mov
in
loope
cmpl
mov
stos
incl
aaa
dec
mov
xor
push
and
add
push
imul
scas
std
cmp
dec
xchg
test
push
push
out
sbb
mov
sti
pushl
xchg
fisttpl
test
and
cwtl
ret
xor
add
icebp
mov
rol
xchg
adc
push
add
mov
jae
mov
lds
lcall
pop
xchg
shlb
es
dec
ret
dec
dec
nop
arpl
je
push
sub
addl
mov
daa
in
leave
push
push
dec
pop
mov
push
scas
add
pop
xorl
sub
mov
mov
cmp
pusha
mov
clc
cmpsl
sarb
fwait
sarl
cmp
push
fs
sahf
xchg
jecxz
jl
or
lret
mov
aaa
jmp
and
dec
and
xchg
xchg
cs
in
mov
inc
movsb
in
aas
dec
cmpb
push
jne
test
adc
sahf
jo
jecxz
test
push
sahf
jnp
rorl
iret
cltd
sbb
inc
xor
xchg
xchg
push
rclb
jnp
out
sbbl
imul
mov
outsb
dec
cmp
dec
insb
cwtl
enter
ret
or
lret
insb
aad
jns
push
fstl
xchg
jnp
fcomps
outsb
outsl
cs
iret
adc
push
adc
jmp
aad
call
dec
cwtl
aaa
repnz
mov
jp
nop
addr16
pop
or
ss
arpl
push
test
je
mov
jmp
ret
mov
mov
xorl
and
inc
mov
in
pop
adc
sahf
push
ficoml
pop
push
cwtl
inc
xchg
arpl
lods
jb
stos
push
rorl
inc
push
xchg
push
add
mov
outsb
dec
pop
push
leave
mov
inc
push
lret
mov
pop
pop
jecxz
testl
fsts
mov
mov
inc
les
mov
adc
mov
hlt
shll
nop
jl
shlb
jmp
fwait
divb
out
pop
aas
rcl
outsb
popa
jmp
dec
pop
pop
pop
stc
pop
add
inc
int
dec
pop
mov
push
lret
mov
push
sub
rorl
jle
mov
sti
leave
testl
cwtl
inc
pop
movsb
sti
xchg
mov
movsb
xor
lret
xor
mov
mov
jmp
sub
xchg
flds
ret
cmp
xor
and
filds
xor
push
mov
push
in
call
out
jnp
pop
int
add
inc
adc
xor
cmp
inc
pusha
inc
jb
or
repnz
outsb
jecxz
jbe
pop
iret
and
add
push
or
xchg
push
xlat
leave
and
pushf
sbb
ds
fwait
orb
push
or
or
and
mov
rcrl
sub
mov
roll
push
push
in
mov
imul
out
nop
popf
dec
or
sbb
inc
push
jle
xchg
sbb
outsb
sbb
aam
push
sbb
mov
jmp
repz
out
mov
mov
outsb
nop
loope
or
mov
cmp
fistpll
xchg
decl
ljmp
push
pop
stos
sarb
mov
loopne
push
and
insl
vrsqrtss
jo
popa
fcmovnu
jbe
xor
dec
aad
or
jns
add
push
ret
hlt
rcrl
scas
jo
std
test
or
jle
ds
adc
mov
push
mov
shl
sbb
cmc
aas
pop
sbb
mov
cmp
push
fisttpll
int3
shlb
and
mov
testb
test
add
shlb
mov
nop
pop
stc
xbegin
fstpl
int3
in
loop
push
and
shl
es
out
inc
mov
jge
movsl
pop
mov
mov
cmp
xchg
xchg
in
cltd
jge
daa
addr16
lock
cmc
xor
jne
and
out
shll
and
insb
cmpsl
mov
add
pop
out
adc
hlt
push
or
sbb
push
mov
cmp
cmp
loop
ja
push
cmp
adc
jmp
jg
xchg
push
push
xchg
pushf
dec
test
xchg
inc
mov
test
shr
jg
add
lcall
fs
or
sbb
inc
cmc
bound
lea
mov
movsl
adc
nop
xor
imul
int3
mov
mov
in
jl
adc
xor
pop
and
xchg
mov
add
test
vpmacsdd
pop
jl
outsb
cmp
int3
jg
mov
dec
fcoms
out
mov
push
jmp
mov
movsb
dec
jo
leave
call
add
fadd
push
nop
add
xchg
inc
in
ds
insb
xor
dec
dec
lcall
xchg
adc
dec
ss
or
xchg
das
cltd
out
cltd
aad
xchg
hlt
mov
xchg
sub
mov
pop
mov
out
pop
mov
insl
and
enter
mov
mov
pusha
aad
mov
or
cltd
lret
jns
pushf
and
sub
shlb
aas
clc
outsb
int
jl
cmpsb
orl
sbb
es
push
cmpsl
cli
and
subb
gs
dec
push
out
xchg
inc
pop
push
out
dec
sbb
sbb
push
jbe
adc
aad
mov
mov
mov
or
dec
adcl
or
or
inc
std
lret
xor
mov
stos
stos
ljmp
iret
stos
mov
cmp
rcl
orb
in
int3
dec
sar
push
test
fnsave
xchg
mov
mov
rcr
cmpsb
je
sub
mov
push
xchg
fimull
insb
pop
and
adc
adc
cmp
or
fnstsw
xchg
fwait
jae
jg
mov
dec
shrl
push
sub
mov
dec
outsb
sub
jno
jmp
jecxz
cld
and
sub
pop
ja
jae
fwait
das
mov
fwait
mov
ss
and
in
push
lcall
sbb
push
dec
sub
out
sub
jb
cmpsl
jl
pusha
arpl
lcall
les
inc
lahf
or
add
iret
adc
aam
push
mov
or
jbe
pop
shrb
pop
enter
pusha
xor
bound
aad
outsl
dec
in
pop
push
cltd
loop
inc
push
and
es
mov
cli
lods
stos
xor
add
add
ljmp
aam
adcb
add
mov
ljmp
xor
xor
inc
pusha
pop
fwait
inc
int
aaa
out
cltd
mov
dec
push
out
sbb
mov
loop
mov
insb
cltd
mov
enter
ja
or
inc
add
add
aas
in
enter
sub
mov
pusha
xor
addr16
roll
fwait
insb
pop
jl
push
mov
xchg
cmpl
addr16
mov
or
jae
push
sbb
jmp
lahf
pop
pop
mov
psubsw
or
into
movsb
inc
xor
cmc
lcall
mov
das
jl
fwait
adc
dec
in
faddl
ja
mov
cmp
pop
xor
mov
add
arpl
mov
iret
mov
push
loop
xor
fimuls
cli
lcall
sub
cltd
in
mov
test
fstl
cwtl
sub
std
push
cwtl
int
pop
dec
inc
das
push
jmp
lret
xor
or
pop
int
push
or
pushf
mov
dec
cmp
inc
dec
scas
dec
mov
adcl
inc
lret
add
inc
xlat
les
ficoms
xor
cltd
sbb
idivb
stos
loop
pop
push
xchg
fs
push
aam
xor
mov
leave
sub
out
repnz
decl
and
adc
stc
dec
psubsb
mov
pop
ds
push
mov
inc
dec
enter
pushf
lods
mov
das
or
and
cmp
or
fwait
daa
push
xchg
outsl
and
fnsave
clc
sarl
fwait
call
cmpsl
dec
daa
dec
cmp
rorl
pusha
stos
in
scas
xor
loopne
sub
bound
sub
fbstp
loopne
jg
popa
mov
insl
test
add
inc
lcall
test
pop
lcall
lret
bound
ja
scas
jno
out
mov
call
sub
xchg
jmp
pop
xor
mov
xchg
lret
rolb
cltd
xor
push
mov
lahf
dec
andl
push
mov
iret
aad
mov
jbe
in
mov
pusha
aam
call
lea
or
repz
pop
shll
mov
pop
mov
adc
cmp
mov
int3
andl
mov
insb
xchg
mov
lahf
lods
mov
jbe
mov
add
xchg
and
ficoms
pop
jmp
adc
pop
cmc
xchg
push
mov
aas
lret
sar
mov
cltd
out
cltd
push
test
xchg
call
insb
out
cli
xor
mov
je
adc
fstpt
std
push
push
pop
mov
outsb
or
out
sti
out
xlat
xchg
popa
sbb
fadd
mov
lcall
push
fsts
fisttpll
insb
mov
lahf
jmp
in
adcb
icebp
cmp
mov
les
or
leave
dec
mov
push
jge
inc
mov
call
add
andb
mov
sarb
cmp
aaa
cld
test
mov
int
js
rcll
pop
or
push
or
cli
iret
repnz
fadds
sbb
insb
mov
xor
int3
sahf
aaa
loopne
xchg
xor
xor
pop
mov
mov
or
call
frstor
shrb
dec
test
dec
lret
insb
and
xchg
out
cli
ja
test
adc
fisttpll
xchg
nop
bound
movsl
sub
lods
fmul
in
dec
int3
pop
adc
jp
pop
mov
shrb
imul
adc
jl
add
pop
push
pmaddwd
in
sbb
jnp
xor
fildl
test
rcrl
sbb
sub
mov
add
movsl
push
clc
jbe
ss
dec
fcmovb
cmc
fmuls
adc
insb
daa
les
repz
xchg
dec
jecxz
xor
fcompl
sbb
add
push
sahf
sbb
pop
push
lahf
push
loop
jbe
dec
iret
mov
xchg
pop
add
add
in
outsb
xor
adc
in
jno
xor
lds
in
inc
add
out
jne
adc
lods
adc
cmpsl
mov
mov
and
cmc
and
scas
popf
xchg
sarl
out
xor
xlat
xchg
xor
shll
lock
orb
std
jl
or
and
mov
pop
dec
or
push
lahf
pushf
mov
push
inc
lret
out
sub
xchg
insl
pop
jl
fld
pop
and
adc
mov
inc
outsb
xchg
push
lock
iret
in
lea
jb
in
xlat
fstpl
jo
or
or
je
test
fists
aad
mov
push
xchg
test
int
fsubs
inc
push
xchg
aaa
cmp
dec
pop
into
and
in
ljmp
cmp
mov
pop
fnsave
jbe
cmp
and
sbb
pop
cwtl
mov
xorl
xchg
xchg
addr16
adc
xlat
adc
pop
call
add
mov
test
popf
in
inc
fprem1
dec
mov
xor
leave
jne
jae
ret
lods
cmp
xchg
ds
xor
mov
jmp
mov
inc
lcall
sahf
push
cli
mov
push
dec
icebp
xlat
in
mov
cmp
and
das
stc
jmp
xor
push
rcrl
icebp
inc
sarb
aam
negl
or
imul
movnti
cmpsb
insl
fwait
push
fincstp
lcall
mov
mov
nop
movsl
inc
pop
into
xor
mov
adc
mov
mov
out
aaa
clc
repz
pop
std
data16
sbb
and
push
cmp
mov
mov
pop
mov
and
cwtl
sub
xlat
sub
xorl
ja
sbb
lods
lcall
das
sub
dec
mov
pop
mov
rcl
popa
xor
adc
int3
stc
push
push
lcall
mov
xchg
daa
sti
add
cs
pop
cld
decl
dec
test
xchg
cld
push
sbb
xchg
xchg
xor
jnp
cmp
inc
dec
sti
lock
lahf
xchg
lods
aaa
sbb
insl
dec
leave
pop
mov
mov
and
stos
loop
xchg
repnz
into
fsubs
stc
jbe
fwait
popf
lcall
pop
mov
mov
add
dec
mov
mov
cmp
xchg
xchg
xor
sbb
rorb
jns
and
adc
mov
mov
cmp
sahf
or
or
mov
and
push
mov
or
sub
aaa
pop
iret
insb
mov
mov
sbbl
cmp
lds
add
mov
sbb
into
cmp
sbb
jns
into
push
inc
jb
jno
pusha
pop
cmpb
aas
mov
push
pop
leave
jge
fists
out
loop
push
or
movsl
or
inc
lret
aam
sahf
arpl
ljmp
inc
cltd
jnp
or
dec
sbb
add
dec
push
pop
mov
loope
nop
scas
xchg
rorl
into
add
dec
sub
int3
cmp
cmp
test
mov
pushl
cmp
push
ret
add
clc
mov
stc
mov
push
jno
sub
daa
int
pop
push
and
cld
or
test
push
cmp
pop
mov
mov
push
sbb
xor
daa
rorb
dec
sbb
fimull
dec
mov
pushf
jnp
cs
fiadds
adc
mov
push
or
fisttps
cli
imul
inc
cli
lea
mov
lds
flds
inc
cmp
clc
xor
stos
jmp
outsb
mov
pop
fnsave
or
scas
into
filds
in
jp
add
dec
imul
test
repz
mov
rolb
lret
mull
dec
rcrb
cmp
pop
fdivrs
and
ret
test
push
ljmp
loop
sub
scas
mov
xchg
fistpl
add
or
jl
jne
jmp
out
test
dec
clc
xchg
insb
push
push
push
inc
call
sahf
outsl
iret
pop
add
lods
or
lret
push
lret
fwait
adc
cmp
sub
mov
adc
sti
push
ret
aaa
mov
and
pop
jbe
or
subb
mov
hlt
aas
daa
ret
sti
mov
sti
leave
test
call
xor
cmp
dec
test
leave
jbe
sub
cmp
aam
cmpsb
mov
in
xorl
shll
push
lods
out
xchg
iret
push
and
fcomp
ss
jno
dec
les
pop
jae
mov
mov
aas
sub
loope
lret
out
push
cmp
imul
cmp
icebp
ja
add
ja
aaa
inc
adc
fsubrs
xor
push
mov
push
shll
or
dec
xor
mov
adc
pushf
xchg
add
pusha
jnp
push
add
ljmp
push
cltd
pop
or
inc
loop
fnstenv
xchg
pop
movb
lahf
jo
push
mov
frstor
mov
fistpll
repz
mov
cmp
pop
push
push
fcmovb
jl
jge
cmp
test
jnp
and
xorl
pushf
push
xlat
mov
sub
cwtl
cltd
ror
jo
jnp
sbb
popf
stos
jae
xchg
lea
jnp
mov
stos
stos
fiadds
imul
out
cmpsl
fistps
xchg
shlb
int
in
fs
xor
pop
xor
pop
add
std
mov
xor
out
in
xchg
jo
push
stc
clc
mov
jmp
addr16
imul
icebp
dec
mov
fmulp
aaa
imul
and
xchg
push
sbb
bound
cmp
iret
sbb
add
add
cmpb
sbbl
mov
loopne
adc
inc
jae
popa
lock
xchg
jp
push
or
pop
cmp
lods
add
jae
push
aad
pop
mov
sbb
enter
jl
imul
out
xorb
bnd
sbb
pop
shll
popf
lret
mov
scas
mov
lods
mov
xchg
inc
sahf
arpl
push
jae
pop
or
int3
roll
push
push
faddl
mov
hlt
repnz
sbb
scas
mov
iret
test
add
jle
xor
or
pop
mov
aas
xchg
xorb
and
js
fsubs
daa
cld
jb
sub
shll
pop
pop
insb
xchg
lock
test
jnp
and
dec
jne
xor
and
aaa
add
sbb
sub
jl
jge
hlt
push
xor
mov
jns
and
int
fwait
sbb
xor
hlt
cs
dec
sahf
test
test
test
movsl
cmc
adc
nop
sub
ss
lds
subb
sbb
in
and
ret
xchg
inc
sub
jnp
movb
mov
push
insb
popf
xchg
add
insl
push
mov
jge
inc
notl
out
sbb
out
roll
mov
xor
inc
adc
add
push
push
lret
cwtl
in
hlt
std
sbb
pop
fadd
push
stc
push
sub
xchg
dec
test
test
jae
cli
and
test
leave
add
loop
sbbb
out
inc
jecxz
xchg
dec
fidivrl
pop
popa
mov
add
sbb
push
enter
loop
lea
mov
xchg
pop
lahf
adc
push
cmp
js
or
pushf
and
pop
sti
int
adc
add
cmc
stos
pop
icebp
mov
fisubl
jl
xor
cli
xor
add
test
mov
dec
lea
cmp
test
and
and
cmp
mov
sub
push
fsubrl
mov
lret
cltd
inc
sub
inc
test
add
aam
fisubrl
sbb
push
testb
xor
fcomps
mov
mov
jnp
rcl
ss
pop
rcrb
push
add
add
jb
sbb
mov
scas
ja
fdivrl
fsincos
and
stos
aas
outsb
and
pop
pushf
sti
xor
xor
or
inc
mov
cmp
dec
pop
cltd
aad
adc
aad
cmc
push
pop
scas
mov
xor
lret
xchg
rcl
aaa
lcall
cld
test
lret
scas
cmp
mov
mov
icebp
mov
push
or
sbb
mov
push
cmp
push
sub
in
pop
xlat
add
jbe
int3
xor
sbb
cmp
xor
pop
movsb
jbe
shl
leave
cmp
movsb
add
sti
mov
and
fdivrs
add
jmp
scas
adc
mov
xchg
mov
push
push
lods
push
sarb
lret
test
and
lds
andb
jmp
jle
hlt
test
fwait
jno
adc
sbb
scas
mov
adc
loop
fildll
je
or
xchg
lds
xor
mov
adc
fwait
mov
mov
push
or
inc
in
xor
cmpl
pop
stos
xchg
outsl
mov
ljmp
jae
cmp
icebp
sahf
lea
int
stos
push
push
pop
mov
cmp
dec
dec
cmp
push
jmp
sahf
and
mov
test
mov
lret
icebp
mov
add
add
sbb
mov
inc
in
inc
mov
ret
cmp
movsb
or
lret
mov
pop
rcr
repz
xchg
clc
mov
push
xchg
imul
insl
dec
and
ret
push
and
in
inc
xor
adc
pusha
cld
pop
mov
or
cmp
xor
mov
testl
inc
popa
xlat
ljmp
arpl
mov
adc
jbe
fwait
jne
push
mov
jmp
movl
inc
test
mov
mov
cwtl
lcall
push
cld
out
enter
into
ds
push
dec
push
pop
mov
push
fsubl
hlt
faddl
push
movsb
fistl
nop
cwtl
cltd
pop
fdivr
lds
adc
jge
in
pusha
imul
xor
leave
outsl
xchg
push
gs
cmp
fwait
es
xorb
mov
fildll
mov
sti
fisttps
out
mov
lods
inc
adc
xor
negb
jo
mov
out
fcompl
subl
inc
sti
or
outsb
test
dec
imul
in
lods
pop
mov
adc
out
mov
and
and
lcall
out
cmpb
fidivl
mov
and
jno
and
xor
jmp
xchg
pop
test
inc
jns
stos
out
jb
insl
roll
xchg
mov
rcrl
push
push
inc
lret
aas
mov
add
lea
xchg
scas
dec
ret
mov
mov
inc
push
cltd
mov
scas
pop
and
and
movzbl
mov
subl
cmp
sbb
push
fwait
fs
mov
pop
icebp
neg
adc
testl
jb
fidivrl
fadds
shlb
dec
or
outsl
scas
int3
pop
add
mov
sbb
js
sub
mov
ss
rcpps
cmp
shlb
imul
cli
clc
push
mov
pop
ret
faddl
sarb
stos
jmp
shrl
or
xor
sbb
inc
or
cmp
inc
bound
scas
mov
cmpb
iret
imull
outsl
inc
xchg
addl
pop
test
cmpsb
sbb
cmp
testl
mov
call
push
insb
lret
push
add
fldenv
mov
vpcmpeqb
cmc
jno
sti
xchg
ret
rol
cmpsl
aaa
cmp
add
jmp
sub
inc
in
xchg
loopne
out
enter
aas
jbe
repnz
lock
into
cmp
jns
js
adc
ret
fsts
movsb
int3
cwtl
lcall
jbe
and
call
daa
xchg
jo
loope,pt
les
mov
xchg
push
mov
sub
je
cwtl
mov
inc
or
jp
jns
jnp
aad
icebp
ret
lret
jl
pop
rcrb
or
adc
add
lahf
xor
inc
pop
iret
mov
xor
or
out
pop
xchg
xor
push
lahf
repz
adc
pop
xchg
imul
out
xor
iret
xor
les
dec
mov
hlt
and
jbe
lret
push
jle
push
xchg
sub
decl
xchg
sbb
xor
sti
add
jmp
dec
stos
jmp
call
xchg
pusha
loopne
iret
mov
pusha
mov
outsl
jle
or
aam
sbb
in
js
mov
into
mov
jl
daa
stos
push
test
scas
filds
jmp
sbbb
xchg
cmp
popf
and
inc
sar
or
inc
nop
dec
insl
addb
push
je
mov
mov
fucom
pop
ret
inc
cmc
jle
xor
xor
loopne
out
xchg
repnz
sbbl
and
sbb
inc
adc
jo
sub
mov
sbb
mov
movsb
pop
loopne
rcl
fisubrs
xor
cwtl
fsubr
mov
dec
cmp
push
cmpsb
sarb
inc
out
push
fcmovnb
sub
xchg
call
rcrl
cmpsb
mov
call
sahf
jg
inc
pop
ret
leave
pop
movsl
lret
test
push
cld
pushl
cmp
lds
shr
mov
sbb
dec
out
test
fimuls
idivb
cltd
ja
aaa
push
mov
and
repnz
test
push
xchg
dec
cmp
shlb
pop
test
xor
nop
cltd
add
mov
mov
cmp
jp
inc
stc
test
add
jne
xchg
add
jo
xchg
into
loop
xchg
dec
shll
or
imul
xchg
test
mov
shll
pop
aas
pop
pop
inc
pusha
inc
and
mov
shr
lods
sti
loopne
add
or
cmp
fisttpll
enter
lock
out
mov
or
add
int
pop
mov
xchg
push
xchg
movsb
out
mov
push
popf
inc
daa
cmpsl
xchg
outsb
mov
lea
ss
les
les
jmp
cmp
fsubrl
cmp
int3
orb
cld
jge
lcall
mov
data16
mov
mov
sub
pop
test
or
pop
orb
jo
out
int
inc
sub
cmp
xchg
adc
xor
in
insb
push
fdivrs
divb
mov
fsts
mov
fwait
or
cmp
mov
xchg
loope
inc
ljmp
and
cmpsb
mov
dec
push
outsb
add
pop
push
and
add
xor
add
dec
loopne
mov
pop
xor
jae
lahf
call
push
xchg
pop
xchg
mov
call
sub
adcb
dec
int3
xchg
cmc
xor
and
sub
into
add
and
dec
out
jbe
lea
ret
mov
mov
lods
scas
roll
xchg
fsts
dec
pop
pop
push
lret
sbb
jp
int
mov
stc
stos
inc
sbb
pop
dec
leave
pop
adc
notb
je
mov
out
outsb
push
mov
inc
mov
add
push
in
jmp
test
jmp
push
xchg
cmc
bound
dec
jl
jnp
adc
lcall
xor
add
mov
jnp
pop
mov
inc
jmp
inc
sbb
js
mov
mov
rep
mov
scas
lock
cltd
dec
dec
aam
jmp
mov
or
aaa
jl
jg
mov
jnp
sbb
test
jp
xchg
les
xchg
push
adc
mov
adc
inc
lret
sbb
lret
lret
inc
pop
mov
xor
ljmp
lea
mov
mov
and
psubw
shl
fnstcw
fdivr
mov
or
aaa
dec
gs
push
inc
insb
pop
mov
add
adc
scas
xchg
sbb
mov
jns
mov
adc
adcl
aad
add
sahf
xchg
dec
mov
mov
inc
ds
xchg
iret
imul
or
push
push
repz
lcall
lret
les
xchg
repz
insb
or
loopne
ret
stc
sbb
mov
jne
push
xchg
js
and
into
or
test
push
pop
sahf
icebp
push
jo
es
stc
sar
out
mov
mov
loope
sbb
mov
rclb
xor
mov
popf
addl
adc
movsl
lods
arpl
mov
aam
mov
inc
adc
ficompl
shll
jmp
cmp
lods
cmp
jmp
sti
push
js
insb
mov
jns
inc
sub
mov
xchg
mov
scas
add
aam
cmp
sub
sub
outsl
adc
xor
dec
jecxz
adc
testb
fisubrl
mov
lea
add
jo
push
jne
insb
push
mov
xchg
sbb
sub
mov
mov
pop
fs
sbb
mov
dec
adc
sub
xor
cmp
or
jmp
fbld
sub
pop
jne
ja
sbb
cs
rorb
pushf
frstor
ret
insb
arpl
in
and
or
stos
fsubrl
cmp
dec
insl
or
aaa
cmp
into
nop
ficoml
jno
in
push
sbb
pop
test
add
mov
mov
xchg
add
dec
aaa
or
insl
das
std
fwait
jmp
xchg
int
scas
sub
fldl
loopew
fnstcw
push
popl
mov
fsubrl
push
jge
jmp
mov
loope
jnp
inc
inc
cmpb
mov
mov
ss
add
in
in
pusha
add
fstps
rcr
and
lret
push
sti
decl
sbb
lcall
jmp
xchg
ds
jecxz,pn
int
sub
cmpsl
or
and
pushf
mov
pop
dec
arpl
push
and
xchg
jae
dec
or
pop
push
popf
and
daa
aam
push
dec
jns
add
and
cmp
rcrb
jnp
fadds
sub
cmp
inc
mov
mov
stos
pop
repz
pop
sub
jl
je
adc
negb
jge
dec
and
xchg
adc
jmp
mov
add
mov
sub
mull
aaa
or
jae
sti
stos
stos
ja
push
shrl
jae
iret
sti
cmp
xchg
mov
dec
hlt
add
enter
testl
orl
mov
pop
push
inc
enter
xchg
mov
adc
pop
lcall
jmp
xor
outsl
push
pusha
xchg
icebp
xchg
cld
shlb
frstor
les
cmp
cli
cmp
xorl
sti
lret
test
sbb
jnp
cmp
dec
inc
in
mov
mov
sub
or
ljmp
add
aas
or
cwtl
jns
add
add
in
lods
sahf
fidivrs
cmp
jnp
jcxz
loope
in
add
mov
or
inc
cmp
dec
and
jp
mov
cmc
jae
or
outsb
sub
pop
jne
insb
je
stc
jb
push
shlb
jg
data16
into
pushf
inc
lods
rclb
mov
mov
pop
or
push
push
mov
in
pusha
push
add
sub
testl
jb
cmpsb
loope
xchg
fwait
popf
cltd
ret
jnp
inc
add
sub
sub
insb
test
faddl
popf
xlat
cwtl
pop
adc
mov
adc
mov
mov
lret
push
adcb
cmp
int3
jne
push
outsl
es
sub
or
inc
sub
sbb
fdivs
and
movl
xchg
mov
jb
gs
xchg
dec
sub
cmp
mov
sub
mov
das
ss
mov
test
pop
pop
in
rcr
sbb
xchg
cli
jo
push
mov
sti
pusha
ljmp
and
fiadds
leave
imul
push
lea
fnstcw
push
and
cli
shll
mov
push
push
ds
or
stos
xchg
push
mov
test
mov
xor
adc
rcll
aad
leave
insl
jns
cmpl
sbb
dec
jecxz
xchg
dec
lcall
cmp
jp
mov
inc
cli
loopne
pop
inc
or
loopne
mov
lods
pop
and
inc
jb
int
xor
sbb
xchg
ret
lret
dec
pop
lret
jp
add
lcall
lahf
add
inc
nop
and
inc
push
push
push
in
adc
mov
clc
mov
cli
lea
aad
xchg
or
mov
rclb
mov
test
adc
dec
clc
nop
inc
push
sbb
sbb
test
imul
fs
pop
jns
dec
dec
mov
repz
hlt
lds
sti
xor
popf
and
into
mov
fidivrl
cmp
incl
stc
cwtl
dec
andl
inc
test
fistpll
es
inc
es
mov
cwtl
test
in
sti
test
push
jg
mov
fistl
iret
push
mov
jbe
sub
popf
fldl
xor
notl
push
pop
fucomp
pop
dec
fwait
xchg
sub
mov
cmp
xchg
cmp
les
jno
jg
push
in
xchg
pop
dec
cmp
lahf
andb
repz
ret
sbb
or
and
fisubs
icebp
imul
and
mov
call
mov
push
and
push
push
push
mov
cmp
ret
pop
out
xor
jnp
aas
adc
fwait
lret
icebp
mov
and
outsl
xchg
pop
xor
xor
mov
xor
sbb
cmp
arpl
lcall
mov
cmp
das
mov
int
in
dec
mov
sahf
dec
sti
ret
int
inc
rol
ret
mov
push
mov
cmp
inc
and
cld
jecxz
jae
test
leave
loope
stos
mov
lret
pop
test
fisttpl
jb
lahf
or
inc
pop
cmpsb
mov
nop
scas
sbb
sub
cmp
and
adc
movsb
add
sbb
or
jl
movsl
outsl
or
roll
inc
call
inc
dec
mov
pop
clc
sub
push
xchg
sub
in
clc
jne
arpl
mov
cmpsl
rol
push
popa
into
mov
imul
fstpl
iret
cmpsl
jns
mov
sbb
out
jo
popa
out
dec
aaa
mov
cmp
ljmp
mov
repz
shrl
jg
and
cmpsl
inc
out
pop
pusha
out
in
loope
mov
cmp
fucom
sub
insl
lahf
orl
in
icebp
pop
sbb
sysexit
xchg
test
enter
repnz
cmp
shl
and
pop
jp
in
xchg
js
xor
rclb
xchg
daa
dec
cmp
add
dec
lock
push
cmp
add
push
xchg
cli
test
mov
shl
outsl
sbb
push
mov
punpcklbw
pop
and
xchg
popf
out
enter
call
mov
push
shlb
dec
mov
push
add
mov
jb
xor
jge
cmpb
dec
js
imul
and
dec
or
sbb
pop
mov
xchg
aas
push
or
jns
and
inc
stos
sti
fldenv
sbb
push
dec
lods
xchg
fldcw
lods
pop
imul
je
xorps
imul
das
int
pop
inc
enter
leave
pusha
push
aaa
imul
lds
sbbl
test
adc
dec
inc
or
dec
gs
mov
xchg
cmovl
push
push
stos
xchg
and
pop
fsubs
and
nop
mov
jb
daa
push
lea
fistps
xor
ret
inc
cli
lcall
repz
push
test
push
xchg
sub
mov
das
das
pop
push
mov
addb
aad
imul
loopne
sbb
outsb
cmp
and
push
cmpsb
lods
movsl
sub
dec
or
jge
inc
das
dec
std
lds
stc
cmc
test
dec
popa
lret
dec
pushf
jno
pop
push
pushf
mov
sub
pusha
out
test
cs
sub
ljmp
or
push
or
add
inc
and
int3
push
dec
or
pop
sahf
adc
ficoms
cld
pop
sbb
orb
sub
in
imul
mov
lods
mov
mov
out
inc
push
inc
cmpb
mov
lret
orb
adc
push
mov
mov
cmp
jle
and
test
pop
xor
cmp
pop
xor
arpl
std
jl
ja
and
fwait
imul
pop
mov
mov
fwait
daa
xchg
les
pop
xchg
pop
mov
cmp
idivb
cmp
daa
hlt
nop
jns
js
sar
adc
dec
pushf
jmp
mov
jbe
add
add
shll
icebp
sub
and
das
fsubrl
fstps
jbe
mov
jecxz
pop
cmp
mov
add
sahf
js
or
mov
mov
fistpl
push
stos
inc
movsb
les
or
inc
jmp
dec
clc
mov
cmpb
pop
aas
push
rorl
ja
inc
rolb
xchg
fcmovnbe
sbb
jl
insl
ss
push
xor
lea
jmp
rorl
inc
inc
xor
out
ficomps
xor
or
maskmovq
divl
push
jp
insl
scas
rolb
adc
test
popf
sahf
insb
dec
cmp
dec
pop
or
fildl
xor
fsubrp
negl
dec
or
sbb
adc
out
xchg
mov
fldt
mov
xchg
imul
mov
gs
jmp
dec
sub
bound
rep
cmpb
js,pn
shl
add
arpl
cmp
pusha
dec
cmp
xor
into
lods
inc
mov
xor
repz
dec
pop
imul
xor
pop
cmp
pop
stos
inc
mov
sub
xchg
repnz
stos
sub
inc
pop
push
mov
adc
popf
inc
push
mov
popf
dec
sbb
inc
or
mov
push
mov
cmpb
insb
jae
fisubrs
jp
sub
test
mov
bound
mov
jne
imul
jo
decb
mov
movsb
in
sbb
push
xlat
cwtl
mov
aas
shll
fildll
mov
xorb
or
adc
sarl
jl
xchg
or
cltd
add
ljmp
shll
inc
mov
repnz
xchg
sub
push
iret
mov
inc
rcr
fstpt
in
jno
jp
and
daa
jo
in
popa
fnstcw
insl
adc
cwtl
data16
inc
sbb
push
mov
dec
pop
xorl
mov
sub
out
push
call
pop
xor
dec
mov
loopne
cmp
sbb
cs
push
out
push
aad
popf
icebp
clc
loope
out
jmp
roll
dec
iret
aam
or
pop
std
xor
lods
std
add
jb
xor
test
push
js
xchg
push
sbb
js
aam
sub
lea
lret
and
and
ja
push
scas
pop
xchg
outsl
cld
dec
mov
jge
push
fbld
movsl
imull
int3
mov
ss
dec
arpl
sbb
fld
mov
inc
sbb
inc
es
or
repz
pop
scas
inc
pop
or
std
cwtl
push
std
sti
xchg
mov
pop
das
stos
add
insl
cmpsb
cmp
test
les
sub
idivb
out
sbb
jne
pop
ret
insb
sbb
out
sub
shlb
xchg
cmp
sbb
inc
cmc
loope
cltd
push
push
test
stc
xchg
dec
test
dec
shl
adc
lret
das
test
enter
pop
inc
pop
add
or
inc
imul
lds
insb
sub
pop
mov
jg
mov
dec
push
mov
repnz
jnp
dec
leave
out
push
xchg
das
sbb
jns
jne
addr16
mov
add
mov
mov
call
fdivrl
rorb
xchg
stos
push
mov
adc
pop
fwait
sub
mov
dec
lret
add
int3
addr16
gs
dec
rolb
fsts
xor
mov
cwtl
enter
test
scas
push
js
inc
cmp
xchg
jg
insl
es
dec
push
push
les
adc
or
sub
jbe
cmp
in
sub
mov
xchg
or
push
movl
mov
mov
sub
jg
stos
mov
mov
rclb
cmp
adc
inc
xchg
icebp
push
testb
inc
sub
xor
jne
loope
out
fs
cmpsl
ret
pop
sbbb
repz
mov
mov
test
in
mov
pop
jmp
test
mov
push
cmpsb
xchg
icebp
pop
push
jg
xchg
push
mov
jb
outsb
sarb
divl
daa
outsl
mov
lds
push
in
mov
xchg
fndisi(8087
lretw
mov
clc
ss
xor
xorl
push
rol
lcall
sbb
and
leave
arpl
lock
andb
je
repnz
xor
xorb
in
lahf
sub
add
arpl
or
fmull
mull
or
pop
sub
in
leave
and
mov
push
mov
loope
xchg
xor
inc
popl
jnp
or
mov
mov
xchg
or
dec
mov
inc
jecxz
pop
mov
dec
cwtl
insb
jp
mov
jmp
cmp
cmp
test
imul
cs
daa
sar
push
out
pop
outsl
mov
aam
mov
ja
xchg
or
push
ljmp
int3
int
movsl
inc
push
cmp
and
mov
inc
pop
shlb
lods
je
lods
and
xor
mov
mull
inc
sar
pop
dec
loopne
loopne
cmp
mov
sbb
push
mov
push
outsb
dec
inc
and
aaa
int3
jno
cmc
out
jl
lds
mov
cmp
mov
inc
insl
sahf
sbb
fxch
and
lods
xchg
ror
lds
cmp
imul
jne
cwtl
mov
xchg
mov
mov
jo
scas
pop
cmp
jne
mov
cmp
mov
jg
mov
lods
and
mov
mov
and
dec
adc
add
and
pslld
cmc
sti
push
test
sub
pop
xchg
jne
sahf
sub
and
sarl
pop
ret
pop
ret
dec
lock
xor
clc
mov
sahf
mov
in
pop
test
inc
pop
lahf
sti
outsl
das
push
inc
out
insl
shlb
xor
mov
movsl
stos
loop
cmp
enter
sahf
in
rcll
mov
cwtl
push
push
xchg
dec
sbb
push
mulb
mov
pop
rcrb
jb
lock
sbb
lcall
jae
add
aam
push
push
cmp
xchg
leave
cli
inc
adcl
mov
xlat
scas
mov
mov
je
out
jmp
or
in
adc
rcll
inc
xchg
imul
cli
in
imul
orb
xor
add
dec
dec
inc
push
xor
add
loop
or
cmp
arpl
shrl
cmpsl
pop
aaa
lods
sahf
pusha
lea
adc
dec
movsl
pop
shlb
adc
jae
sub
fstpt
cmp
subl
push
cmp
jle
les
sti
scas
negb
xchg
add
adc
repnz
xchg
push
insl
insl
imul
dec
push
call
mov
int
mov
xor
xchg
dec
adc
in
or
data16
lahf
mov
adc
sbbb
mov
loopne
out
fldenv
inc
fistpl
rclb
push
sub
shll
std
repz
pop
and
and
icebp
mov
loop
lea
iret
sbb
pusha
jge
jo
flds
lea
negl
add
mov
call
loop
mov
pop
xor
cmpl
daa
leave
pop
fisubl
cmp
test
push
fstl
sbb
adc
jbe
pop
push
out
sbb
je
push
into
repz
movsb
mov
xchg
mov
mov
cmc
pop
inc
mov
xchg
lahf
sub
inc
jno
fwait
mov
xor
mov
cmpsl
or
lods
cli
dec
adc
rcr
ss
inc
add
mov
mov
inc
xor
in
dec
push
fmull
fstpl
out
packsswb
pop
das
mov
add
movsl
movsb
or
push
push
add
or
rcll
pop
fldt
xchg
pushf
dec
pop
pop
jbe
aas
cld
int
cltd
inc
out
sub
addr16
sbb
mov
pop
cs
sahf
jle
adc
jle
jge
adc
jnp
or
dec
jbe
addr16
ret
faddp
mov
and
cld
lret
pop
inc
ret
xchg
xor
rorl
mov
into
add
xlat
xchg
ja
aas
les
or
dec
loop
pusha
dec
addr16
dec
gs
add
ss
loopne
clc
push
sub
fcmovnb
adc
adc
into
cmpsl
daa
into
inc
cmpsl
cwtl
dec
push
loope
insb
inc
aas
jnp
inc
stos
sub
pop
pop
fidivrs
dec
aad
testl
fs
in
xchg
fisttps
mov
dec
andl
pop
fists
jge
aad
ljmp
xor
mov
pushf
cltd
pop
sbb
ret
mov
add
xchg
dec
add
fnstcw
ljmp
jl
lock
sbb
xor
inc
sbb
push
push
in
sbb
imull
mov
and
cmp
test
call
int
mov
mov
and
xchg
mov
mov
push
pop
adc
sbb
loope
inc
cmc
in
jg
inc
sub
add
test
int3
ret
sbb
jae
inc
mov
lods
mov
or
nop
aam
insb
ret
add
pop
push
and
pop
in
xor
and
dec
dec
mov
fisttpl
pop
dec
pop
cmc
fdivr
rclb
cmp
test
rcrl
repnz
test
lods
jns
push
mov
cld
stc
addr16
pop
and
adc
outsl
push
enter
mov
int
repz
sub
mov
orb
cmp
popf
jne
push
dec
enter
aam
popf
jg
lcall
insl
filds
sub
cmp
cmp
mov
or
das
mov
xchg
mov
mov
pop
and
icebp
pop
xorb
dec
and
add
xor
inc
testb
xchg
mov
push
out
or
and
outsl
cmp
out
sub
push
mov
nop
fcoms
rol
sub
xor
pushf
pop
das
aaa
mov
xor
ds
out
mov
jle
out
lret
xor
xor
sbb
mov
repz
lods
cld
adc
nop
mov
popf
mov
jle
dec
movsl
ret
cmpsb
cmp
jg
xor
dec
scas
push
mov
pop
xor
xor
jne
cmpsl
xor
cwtl
lret
xchg
jl
pop
and
in
pop
ret
sbb
sub
xchg
idivb
insb
dec
xlat
mov
push
les
dec
icebp
push
sbb
pop
scas
inc
cs
daa
ret
addl
fwait
dec
mov
and
sub
jle
push
in
shlb
and
fistl
mov
jecxz
mov
cmp
mulb
lods
aam
xor
lcall
clc
pop
ffree
pop
jle
jae
mov
lock
jmp
and
fisubrs
lcall
lahf
push
sbb
icebp
pop
iret
movsl
popf
aad
add
adc
xor
cmp
mov
mov
dec
sub
stos
jb
sub
mov
xor
jo
clc
mov
cmpsb
and
ret
testb
shll
push
or
lods
into
data16
scas
xor
cwtl
adc
xor
sub
pop
cmp
imul
arpl
icebp
jae
rorb
add
jb
lea
rcrl
aaa
dec
xor
sbb
popa
mov
inc
or
mov
fistl
and
aaa
loop
sub
cmpsl
cmpsb
sub
loope
mov
mov
in
push
rcrb
and
rclb
dec
out
inc
fsubrs
mov
outsl
sbb
inc
rclb
aam
xchg
popa
sub
pop
repnz
aaa
sub
inc
xchg
mov
pop
sbb
shll
rolb
ficompl
call
out
adc
fwait
add
ret
sub
xor
rep
push
pop
sbb
mov
mov
xor
jmp
int
inc
cmp
ja
sbb
and
push
imul
fiaddl
jle
outsb
rcrl
addl
pushf
or
xchg
das
iret
movl
jecxz
ret
jbe
rcrl
sub
sahf
fdivrl
ss
jno
sub
mov
or
cmp
pop
icebp
imul
push
cmpsl
lahf
out
xlat
das
lea
cld
les
jno
call
pop
cmp
test
scas
rol
out
sbb
fnsave
arpl
imul
sti
imul
mov
fiaddl
push
mov
sub
lds
mov
sbb
dec
and
dec
jnp
addr16
xor
ret
jo
or
jg
call
mov
les
das
dec
enter
or
jns
dec
daa
jns
dec
ss
bound
adc
add
sub
cmp
add
or
pop
lahf
leave
std
scas
inc
test
adc
xchg
into
sub
mov
bound
in
xchg
cmc
ret
add
push
cmpsl
cltd
test
push
daa
and
and
cli
jecxz
mov
sub
fs
and
addr16
jecxz
sub
adc
test
in
or
inc
sub
stos
aas
cmp
dec
in
in
int3
cmp
and
dec
jne
and
movsl
adc
mov
gs
mov
data16
cmp
xorl
int
dec
sbb
mov
mov
dec
imul
push
jne
shl
ljmp
aas
mov
pop
and
je
popf
in
and
xchg
xchg
dec
es
repz
loop
insl
jae
sub
mov
add
out
push
test
sub
std
push
dec
imul
movsl
and
loopne
mov
xchg
mov
cmp
mov
xor
lods
inc
es
jnp
xlat
add
cmpsl
xor
pop
aad
jne
push
jns
call
or
dec
push
push
inc
mov
xchg
cs
lods
inc
mov
out
pop
ljmp
pop
ret
int
negb
aam
in
les
pop
cmpsl
into
scas
fadd
notl
mov
xchg
mov
out
push
int3
dec
cld
add
add
xchg
adc
lds
test
cmp
aaa
xor
sahf
movzwl
jp
into
pop
inc
xchg
adc
push
mov
cmc
lret
das
push
pop
leave
mov
scas
ret
pop
fistpll
jle
or
imul
int3
pop
in
xchg
jmp
sub
test
test
cmc
enter
pushf
push
mov
xchg
mov
outsl
enter
divb
mov
ret
xor
lds
push
aad
jb
jge
push
mov
out
rolb
cmp
int
lcall
mov
sbb
jne
lods
jbe
adc
sbb
shll
insb
inc
dec
adc
ret
cmp
mov
fisubrs
push
loop
pavgw
test
int3
shrb
jmp
or
lahf
mov
imul
data16
cmpsb
stos
xor
stos
mov
jle
in
inc
clc
popa
js
ds
test
in
push
ficoml
sub
dec
outsb
push
add
js
cmp
pop
pop
fistpl
cmpb
shrl
jae
pushf
pop
inc
lds
into
test
add
rcr
lahf
xorb
mov
bound
jmp
inc
xor
jnp
outsl
mov
dec
or
fcmovnu
lods
mov
scas
pop
push
jecxz
inc
arpl
add
mov
into
lahf
push
in
xchg
push
out
jp
or
test
rolb
pop
subb
gs
push
cs
mov
jb
loope
movd
test
ret
pop
lret
or
cmpb
xchg
xor
dec
js
jle
mull
scas
movsb
inc
inc
mov
cmp
inc
pop
add
push
xchg
jnp
faddl
xor
push
fists
mov
cwtl
stos
or
in
std
jb
ss
mov
cmp
or
cmp
aad
and
xor
test
xor
jecxz
lea
nop
pusha
nop
fs
test
push
kortestb
push
push
in
std
out
cmp
sub
dec
inc
mov
add
in
shll
test
ret
add
jg
push
adc
push
xlat
jns
mov
xchg
sbb
sub
add
repz
das
push
xor
divb
data16
dec
xadd
aaa
and
xchg
pusha
add
or
lret
inc
lods
sbb
or
mov
push
sbb
push
idivl
adc
inc
mov
dec
movsb
fisubrl
call
subb
dec
mov
jo
mov
sub
or
and
jo
add
dec
out
jns
in
mov
lock
or
outsb
test
adc
jg
lods
sbb
bound
sbb
aas
pushf
fistpl
add
xor
push
repz
inc
leave
xor
bndstx
cld
leave
dec
andl
shrl
dec
jnp
adc
sub
popf
xchg
cltd
jb
pop
lea
pop
repz
cmpsb
sub
ja
shlb
psrlw
das
aaa
push
push
mov
push
ss
xor
mov
pop
and
imul
jnp
fldenv
mov
mov
mov
or
mov
ss
je
rcrb
or
cmp
add
fdivl
inc
dec
adc
in
mov
sub
inc
jecxz
pop
push
movsb
cmpsl
add
mov
pop
int3
dec
pop
arpl
lea
pop
mov
add
or
ljmp
xchg
test
mov
enter
mov
loopne
shl
or
lret
cs
cmp
adc
add
into
inc
sbb
addr16
je
arpl
std
pop
jb
arpl
sub
sbb
cmc
hlt
sub
ja
fs
lds
cmp
or
jbe
add
mov
ds
and
popa
hlt
mov
lcall
pop
sahf
mov
stos
movsl
sub
enter
sbb
mov
mov
test
add
inc
test
mov
xor
stos
add
pop
lock
test
ds
xchg
push
xchg
xchg
outsl
lret
xlat
sub
adc
clc
dec
lods
icebp
push
xor
cmp
add
pusha
or
xor
fs
popa
outsl
aas
test
xchg
inc
adc
std
cmp
call
sbb
cmp
icebp
inc
xor
lods
xchg
fimuls
popa
bnd
nop
pop
sahf
ret
ljmp
sub
iret
mov
mov
jns
push
std
adc
ret
xchg
jnp
inc
insl
push
repnz
dec
pop
adc
repnz
insb
and
pop
les
sub
cmp
pop
mov
xlat
dec
cmp
icebp
je
call
cmp
int3
addr16
outsl
or
sahf
test
and
jp
fdivs
pop
sbb
pop
lock
dec
ljmp
push
xchg
ja
ret
pop
pop
icebp
push
xchg
in
add
lods
das
inc
inc
xchg
or
adc
xor
loopne
fisttpl
loop
bnd
shlb
nop
cwtl
cmp
mov
mov
or
icebp
and
mov
pop
xor
insb
repz
shll
pop
sub
inc
popf
cmpsl
push
mov
lret
js
mov
loop
bnd
outsl
scas
negl
xchg
mov
test
jbe
out
sbb
inc
add
or
loop
daa
add
xor
sub
sti
jmp
sbbl
inc
mov
push
leave
test
je
arpl
or
cwtl
inc
lock
inc
push
cltd
out
das
and
xchg
cmp
jge
or
out
inc
in
dec
in
stc
pop
gs
jb
mov
add
cli
fildl
das
dec
shl
aam
jae
out
stos
xchg
stos
cmp
sub
jnp
xor
push
cmp
pusha
fsubl
or
imul
sahf
outsl
xlat
jns
sar
sbb
xchg
pop
ret
mov
movsl
in
add
add
sarb
xchg
dec
dec
rcll
jae
xchg
jns
popf
mov
sbb
sub
mov
mov
insl
mov
inc
xor
testb
dec
or
mov
pop
mov
push
sahf
adc
push
dec
cmp
adc
adc
mov
xchg
pop
dec
sbb
xchg
jge
or
mov
rorb
or
nop
cmp
pop
mov
ret
aad
mov
jp
pop
cmp
call
repnz
or
scas
jns
dec
mov
add
aaa
and
pop
cli
sub
mov
mov
push
fcoms
jle
leave
sub
out
lahf
sub
lret
inc
pushf
xchg
mov
lret
adc
pop
movsl
add
loopne
dec
mov
inc
pushf
cmp
mov
mov
loope
sarl
aad
stos
stos
jecxz
sub
fwait
mov
push
bound
and
in
inc
mov
loop
jl
mov
and
and
xchg
xchg
pop
pop
icebp
mov
mov
mov
mov
imul
out
mov
mov
dec
and
lcall
jmp
xchg
loopne
scas
xor
lods
sar
mov
out
jnp
jns
dec
or
inc
cmovg
push
push
lret
xchg
adc
imul
fidivrs
ficoms
negl
iret
mov
sbb
dec
sub
pop
inc
enter
adc
jns
test
cli
aam
lcall
mov
inc
lahf
jbe
gs
pop
movb
loop
movb
rcll
push
mov
inc
xor
dec
inc
xchg
pop
mov
xlat
push
scas
bound
jb
jp
loop
xchg
shrl
int3
adc
mov
negl
mov
movsb
jae
xor
outsl
fldt
ja
add
pop
fs
movb
bound
daa
fs
mov
rcll
mov
and
call
mov
lock
or
sbb
ds
adc
pop
xchg
arpl
daa
mov
add
push
popf
mov
mov
dec
sbb
fisubs
pop
cs
jno
mov
insb
jb
xorl
fldt
lcall
sub
adc
adc
push
lock
jno
xor
or
daa
xor
sub
mov
imul
cmpsb
das
cmp
stos
push
push
push
ljmp
sar
jns
jp
stos
jmp
jns
repz
fsubrl
mov
js
movsl
jne
or
fbld
push
dec
xchg
push
mov
arpl
xor
or
icebp
sar
inc
mov
stos
in
cld
fistl
push
nop
test
jno
jns
sbb
xchg
jae
jnp
mov
fwait
adc
in
push
mov
cmp
vpsllq
imul
sub
pusha
sbb
lahf
iret
pop
xor
mov
sub
daa
add
out
sub
jecxz
test
data16
mov
mov
lock
adc
fwait
aaa
scas
pop
and
cmp
and
loope
mov
lea
shl
mov
rcrb
cmp
pop
inc
jg
ss
cli
nop
mov
int3
jge
fadd
jl
cmp
test
dec
inc
fsubl
inc
imul
xchg
shrb
xor
xor
jnp
sub
pop
fcmovne
xor
movsl
and
mov
rorl
pushf
pop
jbe
jae
ss
hlt
adc
pusha
xor
or
pop
fsub
dec
dec
mov
sub
add
inc
sbb
stos
inc
inc
loope
and
and
dec
lds
mov
mov
out
jb
and
add
and
xor
adc
adc
dec
cmp
int3
loopne
mov
cmp
xchg
mov
clc
loope
sbb
sbb
loope
mov
jo
std
adc
pop
cmp
test
lahf
cwtl
push
push
fildl
adc
in
test
sbb
subb
cmp
push
lahf
popf
cmp
push
aam
mov
rcll
arpl
call
jns
aad
repz
cmp
or
pop
rolb
sub
push
fidivrl
sub
and
lock
sahf
push
mov
std
inc
push
das
div
aam
cltd
jl
and
cld
rorl
cmc
ss
jnp
out
adcl
inc
shlb
fiaddl
sahf
xchg
aaa
sub
add
xchg
jmp
fisubs
imul
xchg
sub
mov
dec
outsl
xchg
fdivl
sti
sahf
push
ret
ss
cmp
xchg
and
icebp
mov
lret
mov
xchg
mov
leave
push
mov
push
les
lods
sbb
movsl
xlat
call
jo
sub
dec
movsb
call
pop
mov
xchg
sub
aad
js
sti
insl
rolb
jecxz
mov
insl
sub
mov
mov
add
pop
push
mov
jl
lahf
and
mov
test
into
jl
lods
sti
pop
xor
xorl
stos
std
icebp
movsl
test
push
jg
in
adc
enter
and
add
adc
add
inc
and
jne
mov
mov
lcall
out
mov
pop
mov
int
xchg
add
mov
xor
aaa
or
test
or
sub
add
push
mov
push
daa
or
jb
nop
das
sti
xor
ljmp
sbb
mov
mov
xchg
push
pop
push
adc
inc
lahf
mov
mov
push
stc
cwtl
push
jmp
filds
adc
jp
inc
pop
inc
imul
cmp
push
xorl
push
and
ds
das
mov
xchg
adc
mov
dec
mov
jp
cwtl
cwtl
in
nop
sbb
xlat
dec
cwtl
lret
cmp
and
and
test
add
inc
xchg
lds
add
inc
sarl
pop
outsl
repz
adc
daa
cmpsl
jns
pop
push
dec
iret
dec
lret
pushf
pop
fs
pop
int3
movsl
mov
dec
add
je
mov
pop
jne,pt
push
pop
test
in
das
pop
lret
out
or
inc
inc
xchg
test
dec
lcall
and
push
push
xor
dec
push
imul
cmpsl
mov
jbe
dec
lret
fmul
mov
adc
clc
in
addb
xchg
cwtl
jle
sbb
mov
push
test
mov
mov
cld
jb
outsb
imul
aad
inc
je
sbb
or
incb
jmp
out
dec
cmp
push
insb
or
cmp
leave
cs
hlt
cmp
xor
inc
js
jno
ljmp
andb
cmpsb
push
jl
mov
imul
mull
sub
fidivrl
inc
lret
sub
imul
jbe
xchg
dec
sbb
insb
aaa
inc
repz
push
imul
xor
pop
mov
ja
into
dec
test
cmp
jle
bound
or
ds
jno
aam
pop
xchg
adcb
subb
add
mov
and
lret
fs
adc
cwtl
pop
testb
imul
shlb
and
jmp
jg
mov
jle
jmp
fistps
dec
jbe
movsl
insl
pop
ret
std
jno
push
cmc
test
in
xor
xchg
or
icebp
test
fwait
ljmp
jae
dec
call
imul
je
lret
mov
pop
lret
ficompl
dec
jb
inc
and
jmp
push
sub
push
scas
cmp
mov
pop
mov
xchg
mov
pop
test
push
gs
insb
cmc
ror
add
je
or
jge
sarl
rolb
ret
scas
loope
pop
loope
cmp
loopne
sub
dec
mov
outsl
fistpl
into
xchg
mov
pop
fdivrl
inc
dec
mov
sub
or
mov
into
pop
or
das
clc
test
mov
adc
aaa
stos
jl
and
enter
xchg
mov
outsb
sbb
mov
lds
push
mov
shlb
icebp
pop
arpl
push
pop
cmpsb
xchg
pop
xlat
adc
jl
cmp
ret
push
gs
loopne
mov
addr16
push
cmp
sub
pop
inc
in
out
mov
insl
xchg
daa
jp
cmp
mov
test
pop
jle
xor
scas
pop
and
mov
loop
into
sbb
adc
insb
xchg
sarb
inc
and
jbe
adc
inc
jle
dec
lods
mov
or
xor
add
repz
push
lods
dec
loopne
outsl
outsb
outsb
xor
pop
sti
cltd
clc
cmp
pop
pushl
jl
xor
cmp
sbb
mov
jns
pop
xchg
dec
inc
hlt
mov
es
dec
sub
add
xor
adc
lcall
pusha
xchg
inc
aad
das
mov
pop
clc
sub
mov
fcmovnb
daa
xor
rcrb
push
add
mov
xchg
pop
mov
movsl
stc
cld
or
pop
mov
ficoms
decb
dec
mov
sbb
pusha
mov
ja
arpl
outsl
in
lret
jle
lcall
dec
rorb
jns
iret
mov
dec
enter
sub
pop
cwtl
fidivl
sub
and
cmp
dec
mov
imul
push
inc
mov
sub
inc
addr16
push
xchg
ficomps
shr
add
or
cmp
jb
outsl
jle
sbb
fisubrl
mov
mov
mov
push
mov
adc
sub
mov
xchg
out
xor
mov
ds
push
stos
mov
adc
push
in
loopne
in
fidivs
inc
push
add
pop
jb
push
lahf
and
cmp
cmpsb
adc
js
jl
and
add
xchg
sbb
ret
push
inc
dec
jae
dec
sbb
leave
mov
mov
out
dec
in
push
mov
push
cmp
loop
jg
movsl
std
js
nop
cmp
outsb
or
test
stos
lahf
aad
leave
sub
and
outsb
je
xchg
cld
jns
adc
test
stos
mov
push
leave
or
pop
sahf
adc
std
push
inc
pop
sbb
push
movsb
insb
mov
stc
push
sti
in
mov
dec
mov
jmp
shl
sub
leave
mov
ljmp
push
xor
push
das
pop
and
push
mov
mov
and
push
shlb
dec
movsb
pop
push
jnp
sub
loopne
ja
mov
lods
lret
bound
es
inc
outsl
jmp
and
pop
ds
addr16
mov
insb
mov
mov
jmp
sub
and
jmp
mov
icebp
movsb
stos
ja
repz
add
lods
leave
adc
popa
and
dec
dec
int
add
std
xor
and
cmp
in
and
mov
mov
hlt
shrb
outsl
push
add
cwtl
leave
ss
fs
and
cmp
jmp
and
mov
add
aam
push
sub
lock
movsl
mov
and
inc
sbb
jg
push
lret
push
jl
dec
mov
sub
filds
xor
xor
pop
lret
inc
sbb
popf
pushf
jb
cmp
xor
push
test
imulb
aaa
mov
lret
inc
mov
incl
add
adc
xor
nop
jnp
cli
test
ret
out
fwait
add
xchg
stos
dec
bound
imul
sub
cmp
cmp
leave
out
jl
subb
jmp
adc
xchg
fwait
icebp
cmp
xor
iret
fs
mov
sbb
jno
xchg
adc
mov
int
test
and
cli
jae
and
aas
in
mov
rcll
adc
addb
scas
or
pop
shll
outsb
adc
mov
push
enter
mov
imul
faddp
xor
pop
repz
test
push
sbb
mov
clc
mov
stc
mov
dec
inc
xchg
cmp
bound
fimuls
jns
mov
movsb
mov
jge
rorl
pop
das
clc
imull
insb
push
adc
mov
or
mov
xchg
mov
rcll
xchg
xchg
and
rcll
pusha
xor
inc
mov
ret
lods
dec
lret
push
add
inc
stos
xchg
in
sahf
daa
shll
jne
movsb
or
sbb
push
mov
out
jae
adc
push
ffree
inc
sarl
sbb
push
rorb
jg
push
jle
pop
push
mov
add
fbstp
jecxz
scas
mov
jae
into
push
gs
jle
xor
mov
enter
neg
movsb
xchg
jle
lods
inc
xchg
fcoml
or
mov
pop
xchg
mov
adc
add
fldcw
leave
gs
pop
adc
pop
fidivl
fsubl
test
mov
cmpsl
leave
add
hlt
sarb
popf
popa
rclb
dec
add
or
adc
fmul
sub
data16
aaa
xor
scas
roll
xchg
mov
xchg
cmp
ds
out
mov
add
mov
sub
inc
and
daa
and
jl
test
fcompl
mov
xchg
out
push
xor
fwait
jo
ret
mov
repnz
les
sbb
jp
inc
xchg
test
scas
popa
push
call
push
sbb
jns
adc
xchg
sbb
mov
mov
jo
js
and
push
ret
mov
pop
test
popa
jge
pop
xor
pop
ds
stos
lret
add
sub
shll
imul
out
add
mov
or
mov
pushf
sub
xor
shl
xor
mov
int
xchg
push
jno
test
in
pushf
dec
icebp
call
inc
xor
out
sub
std
outsl
sub
mov
mov
mov
mov
xchg
mov
aas
xor
inc
and
mov
push
dec
xchg
popf
inc
xchg
jmp
repnz
data16
or
mov
shrb
pushf
movsb
insl
scas
lret
inc
out
loopne
fcoms
sahf
dec
xchg
fnstenv
shll
fstl
scas
and
js
in
dec
cmpb
mov
cmp
mov
sti
sbb
andl
lods
and
mov
adc
and
outsl
xchg
jg
jl
adc
inc
into
daa
mov
out
sbb
or
orb
inc
call
arpl
push
mov
push
enter
push
push
pop
in
loop
adc
mov
ret
repnz
dec
cwtl
push
iret
fisttps
std
xchg
or
adc
cmpsl
or
cltd
test
mov
jmp
int
push
hlt
pop
push
jge
sub
mov
lods
or
pop
out
test
fadd
mov
ret
int3
outsl
and
inc
dec
int3
sbb
sbb
lds
lcall
lods
cmp
adc
mov
decb
loop
pop
mov
aad
jnp
mov
cld
lcall
fsubp
mov
sub
xor
inc
sub
dec
ja
mov
popf
inc
lock
jg
dec
ret
enter
fmull
pop
jno
dec
cmp
aaa
xchg
xorb
push
dec
imul
loopne
cmp
outsl
int3
mov
push
and
pop
repz
lds
xor
mov
jle
push
pusha
es
xor
cmc
mov
sub
cmp
inc
jg
loope
dec
inc
test
std
push
dec
jl
mov
sbb
repz
negl
stc
mov
jle
nop
mov
add
fistpl
pop
scas
xor
arpl
sbb
inc
out
xchg
mov
lds
or
popa
test
fcompl
movsl
adc
or
and
mov
mov
movzbl
sub
mov
xchg
movzwl
inc
dec
inc
xor
dec
dec
dec
dec
inc
mov
add
dec
jne
add
mov
lea
add
pop
sub
mov
pop
mov
dec
pop
inc
dec
inc
dec
mov
or
lea
imul
lea
mov
sub
add
ret
push
push
lea
sub
push
add
or
inc
add
mov
or
push
movswl
inc
inc
dec
push
sub
lea
imul
xor
dec
add
mov
push
dec
mov
inc
push
lea
mov
xor
dec
dec
push
inc
lea
push
add
add
pushl
mov
call
mov
add
sub
and
inc
mov
xor
inc
mov
pop
ret
and
mov
cmp
jb
dec
xor
mov
dec
mov
inc
lea
mov
mov
lea
inc
add
movzbl
lea
mov
or
inc
mov
sub
and
cmp
jb
sub
pop
dec
inc
xor
add
and
inc
sub
dec
sub
mov
inc
mov
dec
xor
and
xor
xor
imul
sub
mov
add
dec
test
jbe
dec
mov
add
movsbl
imul
inc
lea
mov
mov
mov
mov
lea
and
mov
sub
mov
and
movzbl
movzwl
mov
add
lea
and
movsbl
dec
mov
add
dec
mov
dec
mov
mov
and
add
mov
mov
sub
inc
dec
and
imul
dec
jne
mov
mov
inc
sub
dec
add
dec
and
mov
lea
mov
add
sub
sub
inc
or
or
sub
imul
mov
inc
inc
test
jbe
mov
mov
lea
and
xor
imul
sub
add
or
dec
mov
imul
mov
sub
movzbl
inc
lea
lea
dec
dec
inc
lea
and
and
mov
mov
dec
imul
movzbl
or
mov
add
sub
lea
and
dec
add
mov
inc
add
movzbl
sub
mov
mov
inc
dec
mov
mov
xor
movzbl
dec
lea
add
sub
jmp
push
mov
movswl
and
add
dec
mov
dec
mov
mov
add
inc
inc
movzbl
inc
inc
dec
lea
movzwl
inc
dec
mov
mov
dec
lea
dec
mov
dec
sub
add
dec
mov
lea
add
mov
dec
xor
mov
dec
add
cmp
je
add
dec
mov
push
imul
call
call
mov
dec
call
call
movzwl
movzbl
lea
add
lea
inc
mov
ret
dec
add
pop
dec
ret
push
lea
sub
lea
dec
and
push
mov
mov
push
mov
push
movsbl
push
dec
mov
and
add
inc
call
movswl
push
mov
or
xor
movsbl
sub
dec
neg
dec
inc
mov
add
xor
mov
mov
or
xor
mov
add
dec
inc
inc
dec
dec
je
inc
dec
xor
mov
mov
add
mov
movzbl
inc
dec
mov
repnz
inc
dec
add
xor
jmp
mov
inc
dec
imul
mov
lea
inc
xor
mov
inc
movzwl
dec
imul
imul
jmp
icebp
inc
arpl
pop
in
sub
into
int3
mov
cmp
outsb
push
aad
repz
rcrb
or
xchg
pop
xchg
or
add
insl
adc
ret
sbb
hlt
nop
repnz
sbb
push
add
adc
in
pop
mov
pop
push
or
in
dec
pop
sub
movsb
inc
aaa
xor
jg
lcall
mov
insl
xor
int3
shrl
push
pop
sahf
ret
jmp
mov
icebp
in
filds
xor
jle
and
call
mov
leave
sub
loopne
xchg
xchg
hlt
mov
les
mov
cmp
rol
xchg
jae
mov
mov
push
stos
addb
dec
mov
jb
push
mov
mov
mov
ja
dec
cs
push
mov
inc
shll
shrl
inc
xchg
inc
sub
out
loope
inc
loopne
jp
js
and
adc
jecxz
sbb
mov
cs
xor
cld
mov
in
cmp
jno
mov
jecxz
sarl
pop
or
sub
xlat
and
movd
inc
mov
push
in
daa
push
test
and
or
push
pop
cmp
jnp
dec
std
lods
sbb
mov
ds
sub
dec
out
lods
lods
repz
mov
imul
cmp
setge
jle
xchg
push
jg
pushf
les
fwait
add
stc
mov
jmp
mov
fldcw
aam
and
jle
cmpb
sbb
inc
jns
rolb
pop
fildl
cwtl
xchg
dec
sti
call
mov
jle
mov
subb
out
ret
in
or
mov
cmp
int3
sub
pop
or
fldl
push
lret
arpl
add
lcall
push
mov
pop
stos
mov
xchg
mov
mov
loop
mov
jle
iret
call
addb
cmpsb
in
add
gs
dec
fmul
xchg
mov
stc
cltd
mov
imul
fcomp
jne
insb
mov
gs
rolb
data16
adc
jmp
jno
inc
push
add
mov
adc
sbb
repz
sbb
cli
cli
inc
cs
pop
add
inc
dec
cmp
ljmp
jnp
add
mov
loope
sub
xchg
insb
cld
getsec
aam
xchg
mov
and
inc
mov
xor
out
loop
mov
lods
add
or
movl
dec
adc
sar
xor
pop
shl
or
add
jae
arpl
mov
insb
xchg
movsb
mov
xor
cmp
fldenv
lods
scas
jb
pop
les
test
mov
cmp
push
das
pop
test
imul
mov
or
loope
scas
cld
repnz
sti
sbb
jno
out
aas
sbb
decl
shll
divb
stc
outsl
cmp
loope
fwait
sub
mov
inc
xchg
xor
dec
int3
sub
pop
inc
es
xchg
xchg
imull
push
cmpsb
cmp
jno
rcl
pop
or
xchg
popa
scas
adcb
hlt
aaa
popf
sahf
imul
stos
in
mov
jo
and
adc
cmpsl
mov
or
cmpsb
fbstp
imul
mov
out
add
cmp
sub
les
or
hlt
sbb
mov
cmp
out
cmp
data16
xchg
int
or
inc
into
mov
or
setb
leave
dec
dec
adc
jecxz
adc
pop
sub
xor
in
xor
xchg
push
xor
ficoml
push
mov
mov
jmp
test
rorb
clc
fsubrs
add
stos
inc
lret
pusha
sahf
pop
clc
sub
sti
xor
dec
sbb
iret
rcrl
fists
cwtl
dec
cld
adc
ljmp
mov
lcall
inc
iret
xchg
inc
push
dec
repz
stos
xlat
sub
call
jne
std
dec
pusha
add
xor
int
and
out
sti
or
push
enter
jnp
scas
xchg
mov
test
fstpl
mov
xor
xchg
xor
fsubr
add
push
imul
scas
cmp
in
jmp
lcall
mov
fnstenv
mov
xchg
cld
mov
stos
je
dec
push
add
leave
mov
test
push
addl
mov
or
pop
mov
xchg
lahf
jne
push
mov
cli
mov
ja
cwtl
xchg
sbb
mov
dec
andl
cmp
and
mov
mov
imul
scas
adc
add
dec
and
in
xor
cwtl
sarl
shl
adc
add
out
lods
push
pop
push
adc
ss
and
xchg
outsl
rorb
insl
sarl
inc
mov
outsw
cmpsb
mov
xchg
push
cmc
icebp
push
fptan
push
push
sub
repnz
dec
loop
pop
mov
add
out
xchg
cltd
loope
enter
and
aas
mov
inc
pop
jmp
adc
sub
push
out
cmp
fsubs
jmp
pop
cmc
cmp
or
mov
les
arpl
mov
mov
addb
shlb
shlb
inc
add
xchg
and
mov
out
inc
ror
pop
mov
in
in
adcl
sbb
fadds
cld
inc
adc
jmp
fstpl
fstps
jae
mov
jl
mov
icebp
adc
mov
ja
xchg
add
mov
in
bound
xor
push
outsb
jl
mov
and
mov
or
nop
sti
mov
leave
mov
dec
mov
aas
add
push
adc
in
shlb
jne
xor
xchg
jecxz
pushf
mov
mov
adc
or
sbb
inc
jno
addr16
flds
jnp
lcall
sub
stos
aam
in
sub
andl
pop
test
pop
xchg
jmp
aam
sarl
popl
mov
sub
push
mov
int
shll
sbb
aas
rcll
adc
push
xlat
sub
mov
pop
adc
pop
xchg
or
xchg
jbe
inc
sub
fimuls
mov
dec
test
xchg
dec
xchg
and
xor
andl
movsb
test
je
mov
in
cmp
out
int3
jge
daa
mov
push
jmp
inc
mov
iret
jmp
mov
ret
xchg
mov
test
mov
call
push
xor
fistl
lret
cmpb
in
dec
xchg
inc
in
testb
push
ret
mov
lods
repnz
test
adc
adc
mov
mov
cmp
add
mov
cmc
pop
addr16
pop
xchg
cmpsl
out
enter
pop
adc
add
pop
lock
test
or
lock
cwtl
push
js
in
jne
int3
mov
dec
jg
ja
push
cmp
mov
jae
xchg
aad
push
xchg
mov
pop
stc
fstpt
int3
lret
arpl
adc
sbb
movsl
loop
push
cmp
mov
mov
cli
push
push
push
sub
push
cld
jo
aas
out
jnp
mov
and
test
pop
loop
out
mov
movsl
jns
movsl
jo
mov
sub
and
in
jecxz
pop
pop
sbb
and
mov
sti
mov
xchg
add
add
movsl
fadd
dec
adc
insl
rorb
in
outsb
cmpsl
test
dec
hlt
test
dec
rclb
mov
cs
mov
pop
inc
aas
lods
mov
sbb
jmp
or
js
test
pop
dec
scas
pushf
xchg
pop
mov
mov
out
cmp
mov
aas
cs
pop
mov
stos
test
dec
pop
inc
adc
fsubl
dec
out
dec
das
icebp
sub
sbb
or
imul
add
pop
inc
daa
daa
inc
xchg
fucomp
pop
addr16
mov
ret
loope
pop
sbb
dec
push
cmp
inc
ret
repz
inc
jbe
jnp
test
mov
bound
adc
push
ret
mov
dec
mov
js
pop
adc
hlt
leave
sbb
test
xor
xchg
push
dec
addr16
imull
movsl
enter
xchg
mov
push
iret
adc
aaa
or
and
mov
out
jecxz
lret
std
lret
addl
jp
ljmp
in
inc
push
add
scas
sub
fs
lcall
sub
out
fsub
xchg
pop
mov
dec
lret
add
add
clc
ror
sub
xchg
cmpsb
into
daa
mov
mov
js
inc
mov
outsl
in
cmp
lds
lret
inc
and
dec
fldenv
mov
test
add
nop
or
xchg
xor
jns
movsb
adc
xor
out
jbe
xor
push
test
ja
sbb
movsb
xchg
mov
std
mov
test
mov
push
xchg
mov
dec
int3
cmpsb
cmpsl
dec
mov
dec
in
arpl
inc
dec
push
push
pop
fisubs
xor
bound
lahf
jno
jae
pusha
xlat
scas
sti
push
les
out
ds
pop
clc
int
test
inc
mov
sbb
sbb
in
shll
pop
enter
insb
sbb
inc
dec
scas
fnstsw
and
cmp
push
fwait
mov
adc
popa
xor
test
scas
inc
mov
dec
insb
popf
adc
jmp
sbb
gs
or
sbb
sti
hlt
xchg
ret
cltd
mov
mov
in
pop
jns
into
xchg
aaa
sub
hlt
jle
lahf
and
sbb
mov
push
xorl
loope
xchg
andb
in
push
das
ret
xor
subb
enter
pop
add
stos
or
xor
aad
and
pop
mov
cltd
movsl
cs
inc
mov
gs
and
mov
stos
es
adc
arpl
fdivrl
mov
and
sub
adc
fwait
cmp
push
js
push
push
lea
sti
xor
push
mov
jno
mov
pop
pop
movsb
sub
xor
mov
or
push
or
add
push
aam
hlt
fwait
shll
mov
push
add
pop
and
mov
sub
daa
jle
stc
adc
mov
ds
rcrb
jo
outsl
mov
lea
lret
sub
aas
lret
add
pop
mov
jg
mov
inc
sti
int
lahf
cmp
dec
test
cmp
arpl
mov
xchg
adc
xchg
pop
xlat
out
or
scas
and
cmc
sbb
aad
adc
mov
pop
bound
add
rorl
jbe
ss
pusha
sahf
push
cmpb
xchg
stos
mov
jecxz
jle
mov
cltd
push
cwtl
dec
and
jmp
jbe
imul
cmp
sub
jbe
push
in
and
xchg
pop
and
jle
xchg
scas
pop
testb
add
xchg
loope
mov
cmp
insb
lret
lret
jo
pop
sahf
add
cmp
cmp
loope
icebp
movsb
jecxz
xchg
cmp
adc
fists
sub
ret
xchg
arpl
add
sti
jecxz
mov
mov
cmpsl
inc
mov
mov
adc
cwtl
scas
fucom
jo
out
shll
shl
je
jmp
dec
sub
dec
adc
cli
adc
jp
jg
out
jns
subl
xor
cld
es
add
xrelease
cs
pop
mov
mov
sub
pop
das
dec
push
xor
js
push
push
jge
add
ror
dec
adc
je
pop
mov
negb
push
hlt
hlt
stos
in
push
fistpl
andl
pop
jnp
xor
xor
push
xchg
stos
push
cmp
sbb
movb
pop
cmp
mov
sbb
or
js
jp
push
xor
in
adc
bound
cmp
mov
or
cmp
push
cltd
ljmp
andl
adc
pop
fcomi
adc
or
pop
xlat
pop
jmp
jbe
vhsubps
mov
ljmp
push
inc
lods
mov
push
pop
or
dec
mov
bound
inc
xchg
insb
pop
push
movsb
shr
rep
xor
sub
sbb
lret
jns
xchg
outsl
in
cld
adc
aam
std
sub
fdivs
in
jl
aam
fxch
push
imul
fisubs
cs
inc
pop
fcoml
or
je
cmp
mov
lret
xchg
sbb
sub
mov
adc
into
jl
lods
mov
xchg
lret
cmpsb
daa
jnp
insb
push
lods
or
mov
daa
test
jns
aas
je
sar
lahf
mov
insl
cmp
pushf
rcrb
les
shlb
adc
popf
sub
cmp
int3
xor
cs
mov
int3
push
mov
pop
mov
test
xor
jg
sti
adc
mov
in
lret
test
xchg
aaa
jmp
xchg
fs
insb
add
push
test
mov
xor
outsl
sarl
mov
push
push
sbb
sbb
xchg
test
popf
loope
inc
in
or
loope
iret
loopne
ljmp
or
jecxz
fisttpll
sub
mov
and
andb
xlat
xorl
inc
jbe
enter
or
cmp
mov
mov
lea
call
inc
add
call
inc
push
mov
call
dec
imul
movswl
lea
dec
call
and
add
mov
movzbl
mov
imul
movzwl
inc
add
dec
inc
dec
mov
call
movsbl
add
and
add
inc
call
imul
mov
call
xor
inc
sub
add
imul
imul
lea
and
pop
or
inc
inc
add
mov
pop
mov
mov
pop
imul
dec
inc
and
pop
mov
lea
dec
imul
dec
xor
or
lea
pop
add
inc
pop
movsbl
lea
mov
add
mov
call
inc
dec
dec
mov
ret
mov
dec
push
and
dec
push
dec
push
inc
xor
push
dec
dec
push
movzbl
mov
mov
mov
inc
push
dec
ret
push
mov
push
lea
imul
lea
inc
push
mov
mov
lea
call
pop
ret
jmp
add
dec
pop
pop
ret
push
dec
xor
dec
add
lea
inc
inc
sub
dec
sub
lea
inc
lea
movzwl
mov
or
inc
mov
inc
mov
dec
add
sub
mov
movswl
and
xor
sub
pop
ret
sub
lea
mov
mov
dec
mov
inc
inc
mov
inc
movswl
mov
lea
sub
xor
lea
inc
mov
imul
dec
inc
inc
mov
mov
mov
mov
mov
cmp
jb
mov
push
dec
dec
push
inc
add
push
mov
add
xor
mov
add
xor
and
lea
xor
dec
add
push
add
inc
push
mov
inc
pop
mov
mov
sub
lea
inc
imul
dec
or
movsbl
mov
xor
dec
mov
sub
mov
mov
inc
movzbl
movzwl
inc
lea
add
add
imul
add
mov
inc
movzbl
add
lea
dec
dec
add
inc
inc
imul
mov
mov
and
jmp
add
inc
add
add
inc
add
adc
add
inc
add
push
inc
add
fadds
add
scas
add
insb
dec
inc
add
xor
pushf
dec
sub
mov
dec
pop
sbb
xor
lods
xchg
sbb
push
mov
or
loopne
mov
inc
gs
xchg
or
pop
daa
xor
or
add
pop
push
test
mov
ds
pop
pop
xor
or
sti
cmp
dec
push
and
or
fistpll
dec
lods
js
mov
inc
aad
sbb
fxam
or
subl
out
lret
int3
push
push
dec
aam
test
jmp
sbb
jnp
mov
jl
jo
push
aaa
dec
and
iret
mov
and
dec
adc
cmp
pop
in
jge
mov
icebp
call
mov
sub
outsb
imul
inc
stos
ds
pop
mov
cwtl
shll
push
outsl
mov
mov
jl
mov
lods
rcr
imull
dec
jnp
rcrb
mov
mov
ds
push
shrb
pop
pop
inc
push
fwait
and
adc
bound
repz
and
rcll
dec
ret
sbb
dec
ljmp
out
leave
enter
aad
cltd
xchg
repz
outsb
inc
mov
add
bound
xor
repnz
fnstsw
mov
or
popf
out
xor
sub
inc
jg
inc
cld
int
or
arpl
mov
fbld
nop
enter
in
push
jno
and
push
jle
pop
push
ljmp
jno
adc
pop
xchg
xor
mov
xchg
jg
movsl
mov
dec
icebp
inc
call
sbb
jae
mov
adc
out
in
add
cmc
aad
sub
pop
sub
popa
es
adc
jno
test
popa
add
jmp
xlat
stos
jb
insl
sarl
outsl
mov
cld
lods
cmc
mov
je
out
xchg
fists
sub
push
repz
out
mov
push
jo
mov
ja
push
and
stc
testl
inc
jge
addb
sbb
push
loope
cmp
xchg
mov
xchg
pop
dec
or
test
mov
add
jl
and
dec
imulb
in
and
or
dec
pop
jp
insb
xchg
cmpsl
lret
push
fidivs
xlat
adc
sub
adc
jp
jns
inc
xchg
xchg
imulb
dec
je
add
xor
mov
cmpsl
mov
aad
inc
fimull
mov
xor
je
mov
mov
shrl
jbe
data16
mov
cld
mov
lcall
add
mov
sub
pop
loopne
ret
outsb
xchg
iret
xor
mov
mov
mov
push
mov
cmp
mov
lds
inc
clc
xchg
into
stos
inc
icebp
dec
aam
aad
jnp
or
inc
mov
xchg
cmp
sbb
cmp
xchg
add
and
jns
aas
mov
sub
xor
and
not
hlt
add
mov
shrb
xchg
rcll
xlat
jmp
cmp
loopne
add
xor
outsb
jge
dec
push
mov
jno
cmp
lods
xor
add
dec
adc
mov
jecxz
inc
ss
subl
mov
cmp
pop
mov
scas
adc
pop
jns
and
jecxz
imul
clc
mov
clc
test
pop
shlb
jmp
fidivs
insl
arpl
sarb
rcrl
xchg
out
lcall
cmp
das
mov
inc
adc
gs
in
pop
mov
jns
mov
push
inc
shll
ja
ss
pusha
std
fldl
adc
sti
jge
es
das
cmp
jecxz
aam
loope
out
mov
lods
mov
pop
fsubs
mov
adc
mov
jp
cmp
es
lret
aam
gs
icebp
xor
mov
lds
lods
jnp
pop
pop
cmp
dec
dec
rclb
inc
cmpsb
sbb
lcall
push
mov
in
and
das
in
or
mov
or
xchg
mov
push
push
ds
clc
andb
std
xor
sti
adc
jne
incb
pop
leave
mov
dec
inc
jno
mov
mov
push
pop
xchg
xor
push
mov
mov
jb
and
mov
adc
mov
xor
int3
push
inc
push
fldl
cmp
movsb
jecxz
mov
adc
dec
lret
aam
dec
popa
mov
inc
cmp
ret
pop
in
add
mov
stos
dec
sbb
jle
movd
mov
fcompl
adc
stos
andb
popl
lahf
mov
pop
aas
sbb
test
cmp
pop
in
mov
pop
cltd
xchg
xchg
cmp
jmp
pop
xchg
dec
imul
sti
ds
pusha
cs
in
pop
outsl
sahf
fs
stc
pop
inc
je
pop
lods
or
nop
mov
jmp
xchg
out
cmp
and
scas
dec
sbb
in
repnz
mov
in
popf
pop
sbb
out
mov
adc
push
iret
inc
ja
rclb
cmpsb
sbb
scas
cmp
xchg
and
mov
inc
jnp
cs
cmp
test
into
jge
inc
jbe
inc
cmpsb
dec
push
neg
test
aam
aam
add
scas
iret
lock
adc
mul
xchg
dec
pop
pusha
mov
sti
jg
into
adc
add
call
in
mov
test
ret
hlt
sbb
lahf
fldenv
imul
loope
data16
pop
jbe
push
loope
cltd
hlt
pop
lods
clc
inc
mov
inc
loope
pop
ds
les
ds
repnz
lds
mov
shl
scas
lret
inc
cmpsl
mov
insl
in
lret
mov
ret
aas
mov
fwait
mov
dec
inc
outsl
data16
rclb
cmp
sub
in
dec
push
inc
pop
xor
in
scas
xchg
mov
or
out
loop
xchg
hlt
mov
adc
mov
and
ret
nopl
arpl
push
fwait
data16
cmc
add
ret
inc
push
adc
scas
cmp
xor
push
ja
sbb
sbb
lret
mov
xchg
out
push
mov
pop
scas
rorl
jecxz
idivl
push
loopne
fsubs
mov
pop
hlt
sbb
out
mov
repz
fdivrl
lods
jecxz
scas
arpl
sub
in
inc
xchg
lret
cmp
imul
jmp
jg
xor
sub
add
dec
into
arpl
lret
shll
stos
jmp
pop
outsl
push
dec
mov
addr16
jle
and
push
ret
pop
cmp
mov
xchg
add
inc
adc
into
mov
shrb
or
pushf
push
xor
xor
lods
lcall
je
jl
mov
fisttps
std
inc
addr16
or
lcall
jo
sub
shll
mov
addb
and
jbe
and
loopne
sbb
pusha
dec
and
into
mov
inc
hlt
lods
cltd
roll
lds
dec
or
sti
jns
sbb
xorl
daa
dec
pop
xor
mov
aam
adc
idivl
xor
and
es
js
xchg
lret
xor
cmp
adc
or
pop
add
mov
ja
jg
lahf
mov
and
sub
xchg
in
jbe
inc
mov
pop
outsl
pop
test
sbb
xchg
in
incb
imul
fcompl
mov
fstps
push
mov
or
adc
mov
ds
push
mov
test
and
popa
push
sub
imul
xor
rcll
fisttpl
daa
pop
dec
lcall
lea
push
mov
aad
xlat
or
and
clc
jae
cmp
jle
fdivrs
sbb
mov
mov
push
into
push
lahf
repz
ret
aas
ret
sti
jae
mov
repnz
fdivl
fstp
xchg
cwtl
mov
lea
mov
rcr
jge
adc
cmpsl
inc
jns
and
dec
add
scas
lock
or
add
xchg
push
rorl
xor
and
adc
das
les
lods
int3
movsl
sub
mov
in
es
lret
push
jo
dec
sub
and
adc
push
scas
push
push
icebp
add
xor
test
cmp
cmpsb
lret
pop
cmp
scas
mov
std
js
aaa
pop
imul
fwait
mov
stos
insb
or
arpl
enter
lods
arpl
sub
stc
je
adc
or
xor
xor
mov
out
mov
cmpsl
inc
mov
stc
mov
pop
cmp
cwtl
and
fsubs
out
pop
cmp
jmp
jmp
in
fcoms
out
lahf
xchg
dec
push
negb
fwait
lret
sbb
mov
mov
gs
pop
jg
stc
mov
mov
mov
and
mov
inc
xor
sti
loop
push
cmp
outsb
insb
push
sbb
nop
ret
hlt
icebp
lcall
in
stc
arpl
mov
cli
push
add
mov
pop
sub
jne
mov
fisttpll
test
add
and
test
shl
movsb
ljmp
rcr
add
push
ljmp
dec
shl
dec
pop
lock
jl
in
sub
jno
mov
rcll
jno
xor
push
xor
cmp
imul
imul
sbb
xor
shll
pop
push
rolb
lea
xor
push
hlt
out
sbb
mov
popf
fstpl
iret
push
and
inc
jbe
add
inc
sbb
test
adc
sbb
xchg
adc
stos
push
mov
fsubr
mov
push
sbb
rclb
inc
inc
and
dec
or
push
scas
test
mov
js
dec
repz
lret
adc
sahf
lds
xchg
push
lret
fidivrs
mov
sub
jb
incb
loopne
lock
add
mov
shrl
cmc
sub
test
xor
out
adc
lea
fs
scas
pop
mov
lea
imul
dec
inc
pusha
lret
shl
mov
aam
xchg
xchg
xchg
pop
rcrl
ss
mov
out
add
ds
movups
test
add
ss
into
ss
pop
dec
das
aas
out
cli
loopne
shl
xchg
mov
jno
js
fldl
xchg
mov
mov
fxch
scas
into
mov
push
or
ss
sub
jnp
pop
jno
scas
enter
pop
push
cwtl
mov
add
xor
mov
push
add
jmp
xor
dec
pop
mov
sbb
sbb
aad
jle
dec
dec
in
outsb
xchg
cs
inc
mov
pop
jno
fst
pop
add
inc
xchg
mov
xor
cmpsl
mov
push
popf
cmp
mov
and
dec
push
gs
cmpb
into
rolb
mov
xor
das
push
push
divb
test
mov
data16
sar
insb
mov
inc
mov
xor
shlb
int
dec
lret
sbb
mov
mov
into
sub
cmp
cmp
sub
imulb
fbld
mov
inc
pop
sti
ret
fcompp
out
lcall
sub
xor
push
sarl
xor
sti
and
sub
push
sbb
insl
in
scas
or
test
jbe
adc
iret
sbb
mov
xor
cmp
add
les
aaa
ss
mov
fcmovnu
sub
xlat
nop
push
ds
int3
imul
stos
out
inc
and
add
lods
scas
sub
leave
inc
ret
jo
scas
xchg
cmc
icebp
adc
jle
mov
mov
aam
int3
idivb
js
jmp
adc
loop
jle
push
out
add
xchg
aaa
mov
lods
popf
aam
mov
sbb
out
adc
test
mov
fsubs
or
sbb
loop
ljmp
cs
dec
add
jmp
inc
and
leave
push
mov
cmp
sbb
xchg
stos
mov
pop
sub
leave
sbb
adc
push
js
loopne
and
adc
lcall
push
or
pop
mov
test
daa
or
mov
shl
sbb
push
mov
fidivrl
rcrb
aaa
cld
aas
dec
and
dec
jbe
sub
pop
sbb
adc
aad
or
mov
shll
push
lock
pop
mov
sub
ret
std
int3
out
lret
ret
and
push
shl
shll
outsb
pop
and
add
pop
mov
add
pop
aaa
inc
jne
sahf
out
jge
andb
or
push
mov
jmp
sbb
and
add
xchg
pop
xor
and
push
sbb
sbb
mov
push
mov
arpl
cmp
aaa
leave
mov
pop
jl
shr
lret
outsb
test
arpl
ljmp
testl
popf
pop
mov
push
data16
shr
cmp
mov
jge,pt
jno
add
fstpt
sbb
lock
ficomps
fmuls
sbb
jae
fiaddl
pop
andb
aam
xchg
pop
enter
mov
xlat
sbb
push
aaa
and
jns
pop
xlat
jo
mov
jns
mov
leave
loope
push
sub
and
push
mov
dec
xor
xchg
xchg
push
xor
cwtl
jne
ret
aaa
mov
cmp
xchg
dec
fnstsw
mov
sbb
das
js
fisubrl
in
arpl
out
js
hlt
pop
and
lahf
cmpsb
or
cmp
int
cmp
add
imul
or
mov
sub
aam
xchg
pop
call
jmp
outsb
popf
ja
rcrb
test
adc
insl
xor
test
sub
jl
sbb
xor
sub
in
aam
mov
pop
divb
dec
inc
sbb
jno
call
stos
mov
js
cs
xor
int3
xchg
adc
fwait
xchg
andb
out
ds
sbb
jmp
fs
sub
lcall
test
xchg
cmp
sbb
pop
sub
ljmp
cmp
lret
mov
inc
or
xchg
mov
adc
mov
jne
stos
push
rcrl
or
cltd
add
sub
sbb
sub
stc
add
insl
lea
lea
stc
and
notl
sbbl
inc
imul
inc
cmc
movsl
xchg
popf
jecxz
or
gs
jg
or
adc
jl
mov
mov
aas
lea
cmp
lock
mov
cmpxchg
mov
jno
es
lret
or
push
sbb
push
dec
and
repnz
incb
mov
mov
out
jo
sub
xor
fldl
and
fcompl
inc
mov
xchg
xor
jmp
push
jecxz
cmp
push
out
ds
adc
aas
inc
mov
mov
jle
fdivrl
xchg
outsl
sub
test
adc
sbb
sbb
add
cmp
sub
jno
jbe
bound
or
dec
pop
add
outsb
fisubs
mov
mov
lods
aas
add
push
dec
push
jg
xor
mov
mov
push
lcall
aad
jno
xor
lods
notb
xchg
test
sub
lcall
xchg
jge
dec
pop
repz
xchg
cld
sub
xor
pop
je
cmp
inc
sub
cmp
mov
and
lcall
daa
cld
xchg
data16
lahf
cmp
cltd
pop
jne
repnz
popf
leave
xchg
cmpsb
and
sbb
mov
mov
dec
mov
bnd
aaa
mov
pop
in
rcrl
popf
enter
mov
xchg
lods
out
xchg
xor
xchg
push
stc
dec
fwait
dec
xor
push
xor
mov
clc
inc
dec
out
sub
jo
adc
andb
gs
inc
bound
mov
hlt
test
test
imul
sbb
test
in
gs
fsubl
movl
mov
inc
pop
icebp
add
dec
mov
inc
cs
jle
stos
pusha
sbb
loope
mov
loop
cmp
or
je
xchg
popa
and
mov
icebp
into
loopne
into
aaa
xor
cltd
xchg
sbb
push
xchg
sbb
push
push
mov
out
mov
in
cmpsl
inc
outsl
pop
jecxz
sahf
mov
push
ja
nopl
nop
enter
gs
dec
sahf
dec
mov
in
les
mov
mov
cmp
xchg
nop
xchg
addr16
pop
mov
aad
hlt
aam
mov
xor
int3
sub
lock
jg
fiaddl
iret
push
mov
pop
pop
or
sbb
shll
cmp
repz
aad
push
xchg
mov
add
insb
mov
stos
sub
pop
ds
mov
ss
test
dec
push
fidivrs
inc
ja
subb
rcrb
imul
ja
outsl
jp
mov
jb
and
notb
xor
test
add
mov
xor
pop
push
aaa
inc
jbe
pop
xor
xor
mov
push
nop
enter
xor
xchg
push
mov
in
or
push
add
jge
bound
icebp
fdivl
dec
pop
dec
cmp
outsl
pop
pushf
in
fs
add
cs
and
mov
inc
sti
add
scas
out
jle
pop
add
in
dec
movsl
shl
sbb
test
xor
movsl
xor
imul
ret
push
sub
cmp
mov
into
lahf
loopne
jno
call
mov
cld
out
pop
negb
inc
outsl
dec
inc
mov
push
jle
cmpsb
jno
adc
pusha
xchg
push
fnstsw
push
in
sti
cwtl
mov
loop,pn
push
xchg
dec
adc
popa
or
mov
inc
jns
dec
sbb
mov
ret
das
iret
and
cltd
pop
scas
push
shll
push
pushf
inc
sbb
out
lods
cmpl
jno
stos
test
divl
cmp
jbe
xor
cltd
incl
add
fcompl
imul
sub
mov
or
aam
loopne
sub
xor
mov
or
mov
inc
cmp
nop
jno
cli
sti
ficoms
insl
jg
pop
mov
lds
shlb
inc
dec
pop
sahf
mov
inc
dec
jl
mov
std
lds
mov
jo
add
push
int3
lret
lds
mov
imul
xchg
jae
xchg
inc
movsl
fcmovnu
xchg
loope
cmp
sbb
dec
push
repnz
fsts
or
popa
jne
dec
enter
in
xchg
andb
push
mov
orb
xor
frstor
adc
mov
cld
in
sub
mov
add
movsb
mov
mov
arpl
push
jnp
fcomps
xchg
lock
enter
mov
aaa
mov
mov
mov
push
sub
lods
shlb
movsl
popa
add
dec
es
mov
fdivrs
fwait
test
pushf
jbe
mov
testl
pop
arpl
lds
mov
lock
fs
or
mov
shlb
pop
jnp
lock
divb
fadd
inc
sti
jns
mov
sbb
clc
in
in
add
inc
sbb
mov
pusha
fcmovbe
inc
ficomps
pop
sbb
jecxz
xor
and
and
in
xchg
mov
loopne
in
out
cmpsl
mov
dec
jnp
aad
in
pop
divps
ljmp
cmp
aaa
mov
dec
fmul
lcall
mov
lret
mov
xor
push
scas
ljmp
fnstenv
ficomps
sbb
push
pushl
push
imul
scas
scas
shlb
add
sub
fildl
test
pop
mov
cmpb
rolb
cmp
inc
dec
mov
dec
push
xchg
xor
notl
ljmp
mov
bound
pop
pop
mov
std
shrb
xchg
das
xchg
or
xchg
mov
or
dec
add
fsubl
dec
dec
daa
mov
add
and
andb
inc
loop
add
dec
enter
xor
insl
idivb
sahf
push
test
xor
jle
shlb
ret
sub
add
cmp
in
mov
mov
scas
cmpsl
into
out
inc
lret
jnp
mov
repz
lahf
sti
shl
dec
stc
mov
cmp
push
and
mov
test
enter
xchg
out
push
dec
arpl
pop
mov
dec
data16
adc
and
mov
nop
and
xchg
push
jb
dec
mov
int3
mov
sub
outsb
xlat
add
adc
sbb
mov
loopne
push
hlt
cmpsl
xor
shrb
stc
pop
xchg
scas
mov
mov
test
lock
mov
out
mov
ret
jge
mov
rol
push
lds
xchg
fwait
dec
push
push
out
arpl
jl
lret
jle
mov
ss
roll
cmp
push
and
loopne
dec
insb
dec
mov
cmpsl
sbb
leave
xor
out
or
loop
sub
adc
dec
out
xchg
xor
push
sahf
sahf
jle
scas
sub
add
add
cld
mov
xchg
inc
test
sarl
outsb
fucom
add
mov
sti
cmp
jecxz
adcl
cmpsb
cli
sub
shlb
dec
insl
ja
cld
and
stos
sub
ja
or
sub
push
cmp
inc
jecxz
mov
sbb
cwtl
fisubrl
mov
fs
fldt
sbb
jns
clc
stos
sub
stos
cld
sub
ja
leave
sbb
shlb
fsubr
sahf
cmp
mov
movsl
mov
out
xor
test
rcrl
fs
mov
fcomip
sbb
dec
in
sub
mov
mov
iret
ljmp
ret
cmpsb
pop
outsl
xor
dec
lret
add
ds
and
orl
jb
xchg
js
scas
push
ret
sub
lods
fcmove
ds
adc
fs
jge
or
stc
jge
add
cmpsl
push
jg
cli
stc
ja
mov
mov
cli
sub
cwtl
aas
push
xchg
sar
inc
ret
call
js
and
inc
enter
roll
pushf
push
lret
loope
dec
lahf
out
sbb
xchg
cmp
mov
mov
pop
mov
repz
jno
fildl
cmc
sbb
fs
iret
sbb
incl
mov
in
in
lret
dec
adc
mov
scas
mov
shll
mov
int
sti
lods
fstpt
add
andl
mov
js
sbb
mov
jmp
leave
rcl
inc
dec
pop
sub
jmp
fdivrl
movsl
hlt
std
pop
cmp
sbb
lods
test
inc
fsubr
dec
addr16
out
push
je
mov
mov
fcmovu
mov
dec
roll
dec
mov
gs
adc
jmp
xchg
sbb
ret
mov
pop
lea
and
xor
cmp
push
mov
daa
fwait
aam
or
xchg
aad
repz
jecxz
dec
es
orl
loopne
movsb
xor
gs
aas
dec
in
xchg
cwtl
add
or
push
addr16
jae
jno
js
cli
pop
lcallw
or
jge
pushf
ret
xlat
iret
je
js
cmp
fimull
aaa
or
mov
inc
cmpsl
jmp
mov
mov
pushl
mov
ljmp
inc
sbb
mov
test
xlat
leave
mov
mov
jg
out
lock
xchg
adc
push
loop
xor
out
jo
sbb
jbe
dec
in
push
test
into
das
dec
push
xchg
push
test
push
loope
adc
frstor
jbe
dec
lret
shrl
mov
icebp
shlb
add
sbb
mov
push
mov
and
cmp
and
push
sbb
lock
scas
lahf
or
push
not
fisubl
test
xor
and
nop
outsl
cmpl
sti
dec
sub
sub
fimull
push
jmp
jnp
and
xchg
negb
scas
out
addr16
dec
gs
ljmp
inc
aaa
or
int3
aam
jo
jo
mov
xor
pop
jle
xchg
rcrb
dec
loop
xchg
sbb
adc
xor
ss
leave
cmp
ja
test
push
iret
lea
das
lea
outsl
push
jle
jecxz
cltd
mov
ja
mov
mov
enter
adc
jae
mov
aad
in
sub
xor
lods
je
outsl
aas
push
cmp
jecxz
inc
jns
mov
jl
adc
or
les
loop
es
push
pop
lock
xlat
xchg
out
pop
std
imul
jmp
cwtl
push
inc
add
repnz
stc
loope
out
jo
inc
test
inc
push
adc
xor
mov
pushf
sarb
imul
and
insl
sub
push
push
pop
jne
cwtl
adc
inc
fnstsw
xor
xor
fsubrl
sbb
stos
mov
xor
xor
jne
jp
jnp
pusha
jno
pop
pop
orl
push
sbb
imul
xor
xchg
in
dec
dec
jae
clc
push
cmc
in
std
cltd
imul
mov
test
test
mov
mov
adc
cltd
ja
jg
scas
rclb
mov
iret
pushf
aaa
aaa
pushf
xchg
lock
mov
testl
je
pop
mov
adc
je
js
and
sub
xchg
and
mov
and
addr16
subb
dec
sub
jg
inc
std
lds
scas
outsl
adc
jg
adc
pop
sbb
xchg
loopne
repnz
mov
int
add
fwait
pop
fldt
popf
xchg
inc
sub
out
sbb
lock
inc
xor
xor
jo
jge
es
scas
pop
cmp
mov
ljmp
jle
jle
sahf
sbb
stos
ficomps
gs
add
add
clc
dec
mov
in
push
push
les
popf
mov
xor
iret
sti
mov
jecxz
add
jge
fidivs
lret
shrb
inc
jbe
fists
ret
call
or
fwait
in
nop
shll
out
fsubrl
xchg
sub
and
call
pop
xchg
pop
aaa
mov
iret
roll
dec
mov
mov
inc
and
call
loope
repnz
xchg
fwait
adc
pop
out
mov
sbb
loop
aad
stos
aaa
fnsave
adc
mov
mov
xchg
jl
lret
inc
inc
or
test
pop
mov
jle
adc
push
cmc
add
inc
pushf
pop
lret
rcrb
and
xchg
cmpsl
lea
xchg
dec
lods
sti
mov
iret
pop
inc
push
jne
fwait
mov
gs
pop
pop
jo
mov
sahf
fdivrl
and
add
rcll
xchg
mov
loopne
es
adc
xchg
or
xchg
mov
inc
icebp
push
cmp
aaa
mov
mov
mov
mov
fstpt
das
mov
adc
pop
jnp
movsl
jle
ret
stos
xchg
ficoms
ja
dec
jl
inc
dec
mov
jl
aam
cmp
pop
xchg
ret
mov
fists
push
add
repz
mov
call
outsb
push
push
jb
mov
jge
inc
push
sbb
xchg
mov
mov
cmp
sub
add
add
jnp
push
mov
out
mov
cli
daa
leave
cmp
sub
push
mov
leave
sub
shlb
movsl
xchg
shl
out
pop
xorb
jbe
add
and
andb
dec
add
ja,pt
dec
mov
lret
roll
push
addb
mov
je
jle
out
pop
lahf
js
sti
or
add
and
sub
push
cltd
jnp
cld
std
xor
push
jns
fists
pop
repnz
outsl
cltd
icebp
pusha
xor
rcl
iret
rorl
mov
push
add
in
adc
shll
dec
scas
push
mov
mov
call
mov
pop
or
sub
ljmp
sub
gs
nop
sub
sbb
cwtl
inc
and
mov
jge
sub
inc
cmp
test
andl
and
xchg
push
jns
push
divl
test
loop
or
pop
jp
rclb
dec
jbe
adc
bnd
and
dec
cltd
stos
or
mov
aam
sbbl
in
imul
rolb
decl
xchg
rclb
in
push
lret
pop
popf
cld
inc
or
js
mov
inc
push
testb
xchg
or
lods
sbb
mov
adc
xchg
jno
les
mov
mov
jo
popf
sti
sbb
push
pop
subb
add
and
cli
hlt
aaa
push
cwtl
imul
std
sbb
inc
sbb
adc
lods
outsb
scas
sbb
fwait
clc
out
add
mov
test
cmpsb
xor
xor
cmp
loope
cmpsb
outsb
sbb
xor
shlb
push
cli
mov
fistpl
cltd
or
ret
sub
push
or
push
rorl
mov
out
dec
out
xor
lods
add
imul
dec
test
sahf
enter
ret
repnz
mov
test
pop
data16
mov
jmp
mov
inc
scas
stos
sub
inc
sub
or
dec
inc
or
jecxz
pushf
iret
in
shrb
sbb
dec
mov
jge
popf
mov
cmpsl
clc
xchg
jp
and
pop
es
sub
das
lods
lret
dec
jne
test
xor
add
out
lods
pop
punpcklbw
or
loopne
push
adc
jmp
pop
push
je
cmp
hlt
stos
sub
mov
or
jecxz
out
sti
gs
push
pop
ret
mov
in
in
xor
hlt
sub
cmc
movsb
lods
and
mov
fimull
movsl
xchg
in
xor
pop
and
inc
ret
popa
jne
sub
subb
outsl
mov
das
mov
cwtl
push
idivb
out
or
adc
cli
mov
mov
inc
arpl
aas
lock
or
int
xor
sub
adc
jge
xor
lret
and
adc
inc
or
sbb
fs
sbb
sub
aaa
lret
xlat
bound
push
insl
pop
les
sti
dec
mov
inc
popf
dec
test
or
xchg
cmp
lahf
cmc
sbb
loopne
repz
daa
xchg
cmp
mov
mov
imul
jb
mov
ret
mov
and
in
jno
inc
push
adc
lods
stc
dec
dec
rorb
and
out
push
pushf
mov
sahf
fsubl
loope
mov
pusha
stos
sub
out
and
xchg
mov
add
nop
xchg
xchg
add
bound
int
jbe
lods
fabs
in
adc
mov
aaa
inc
sbb
xor
mov
repz
fidivrs
nop
push
jnp
lock
push
add
xchg
in
add
inc
add
imul
ficompl
cmpsb
mov
push
pop
push
inc
inc
mov
gs
pushf
sbb
popf
pop
icebp
sbb
rcrl
adc
mov
mov
mov
sub
dec
push
and
rcrl
push
int
in
xchg
mov
movsl
mov
or
orb
mov
mov
jnp
jb
cmp
push
jmp
cmp
mov
loope
push
jb
insb
mov
lods
mov
jp
push
jmp
cld
insb
clc
mov
rcrb
mov
in
jo
fsub
xor
clc
cmp
push
sbb
test
cmpsb
push
lea
jecxz
inc
jp
cmpsl
dec
sahf
movsb
mov
cmp
push
mov
xor
mov
adc
xor
insb
hlt
popa
mov
dec
lahf
neg
adc
add
lahf
insb
sbb
sarl
and
mov
fldcw
pop
cli
les
inc
aam
sbb
or
adc
inc
pop
fucomp
nop
pop
sbb
test
push
in
fcmovnb
addl
mov
imul
push
into
mov
insb
sbb
mov
add
add
loop
repz
int3
mov
inc
aaa
imulb
cltd
jp
adc
lret
cli
sub
mov
and
outsl
aad
sti
xchg
xchg
mov
aam
cmp
dec
fstps
pop
inc
cmp
cmp
out
adc
and
scas
push
stos
fisubl
dec
dec
mov
jae
sahf
pushf
pushf
mov
cs
out
push
sub
lea
cmp
les
sub
or
jns
adc
mov
push
add
push
loopne
xlat
xchg
adc
mov
imul
into
sbb
scas
dec
hlt
pop
or
insl
cwtl
mov
push
out
mov
rorl
xchg
inc
test
or
mov
jbe
js
pop
stos
cmp
xlat
sub
ljmp
icebp
es
jle
aad
push
fbld
fdivrs
out
inc
jne
adc
fidivs
bnd
mov
inc
mov
mov
mov
xchg
cmp
inc
pop
adc
mov
sbb
popf
pop
adcb
dec
dec
jnp
or
xor
fsubp
and
int3
scas
inc
xchg
stc
push
mov
cwtl
arpl
jmp
movsb
lret
add
clc
and
pop
adc
jo
in
stc
jl
std
shlb
cmpsb
mov
outsl
and
cmp
cmc
loope
popa
mov
dec
lcall
ficomps
lods
imul
push
outsb
fmuls
ret
pop
adc
inc
sbb
mov
cmp
lret
xchg
pop
dec
inc
test
mov
mov
fs
out
insl
or
add
mov
in
jns
fimuls
out
dec
xor
and
sbb
push
inc
jecxz
push
scas
adc
jge
xlat
scas
pop
ret
pop
sub
xchg
jbe
divl
pop
out
sbb
ret
stc
jns
lcall
cmpsl
lret
popa
and
std
ja
out
adc
adc
push
stc
cltd
popa
or
pop
fldt
push
sarb
loopne
mov
mov
cli
xchg
jp
push
jns
xor
mov
pop
out
inc
mov
movsb
add
or
mov
les
cmc
xor
aad
repz
pop
je
daa
fbstp
loop
xor
and
rcrb
cmp
movsb
daa
je
xlat
nop
cmp
push
mov
jg
jo
or
or
add
xchg
rcll
inc
cltd
ja
dec
xor
dec
cmp
pop
pop
ds
dec
filds
mov
adc
xlat
int
fisttpl
adc
leave
mov
int
iret
in
cmc
aad
jno
sti
pop
ret
adc
or
std
out
cwtl
dec
mov
mov
cmpsb
mov
aad
push
inc
subb
test
cmp
adc
pop
in
pop
and
inc
loopne
outsb
sahf
cmp
mov
fsubrl
inc
sbbl
cmp
adc
sbb
or
cmp
jmp
stos
in
mov
std
out
fs
hlt
inc
mov
and
and
jbe
out
std
out
out
jle
out
popf
test
mov
xor
sar
stos
sub
or
add
pop
xchg
in
jbe
xlat
ljmp
inc
inc
cmp
in
test
push
fsub
or
xor
mov
aad
rolb
jo,pt
push
mov
and
into
xor
popa
jne
out
xchg
xchg
cmp
stos
cmpsl
fildll
cmp
and
or
in
push
mov
adc
fdivs
bound
sbb
sub
and
add
cmpsl
xor
push
out
das
sub
jle
nop
inc
out
clc
pop
xchg
xchg
bound
jp
or
pop
aaa
fdivs
in
test
push
lea
sarb
cs
rcr
mov
mov
iret
xor
adc
popa
adc
push
dec
scas
adc
jmp
inc
std
mov
mov
clc
ljmp
movsl
push
jae
in
or
in
mov
std
pop
add
or
sub
ret
xor
pop
pop
mov
lds
loop
out
dec
inc
lods
sbb
orb
hlt
xlat
xor
dec
xchg
shll
or
arpl
and
mov
in
imul
xor
xchg
fistpll
pop
lods
pop
or
test
adc
xor
icebp
enter
pop
cld
push
push
mov
inc
subl
pop
fidivrs
add
insb
jmp
int3
mov
fcomip
out
notb
xor
inc
add
lcall
addr16
pause
pop
out
and
xor
inc
xor
clc
orl
imul
popa
push
jo
outsb
push
mov
cwtl
bound
cmp
xchg
adc
sub
ret
test
rcrl
inc
xor
insb
xchg
stc
sub
jno
jecxz
and
iret
cld
pop
fiadds
out
inc
daa
add
xchg
movsb
and
cltd
mov
push
add
iret
push
fs
fcmovnb
test
loope
subb
mov
xor
or
mov
stos
test
mov
addr16
mov
pushf
mov
imul
movsb
ss
push
loop
add
popa
test
xchg
cmpsb
inc
adc
les
or
popf
es
xchg
jg
sub
cmp
aam
ret
jl
pop
xchg
xlat
pop
sarl
out
pop
fwait
lods
je
adc
mov
fistpll
and
jge
cli
push
mov
pop
jnp
sarb
shl
sbb
pop
aaa
movsb
testl
in
pop
scas
dec
xor
xchg
mov
in
dec
xor
ret
adc
out
cli
cmp
addr16
fwait
mov
mov
mov
sbb
jmp
shrb
sub
outsb
fs
ss
jno
lock
nop
mov
in
adc
mov
push
sub
dec
sub
int
xchg
lock
push
ja
imul
lods
loope
lock
rcl
movups
test
test
jl
mov
es
ret
inc
pop
pop
jns
sbb
jl
xchg
outsl
fidivrs
sub
mov
sub
jns
out
xchg
fsubr
lea
cmp
mov
xchg
push
aaa
lods
mov
addr16
cwtl
sti
inc
arpl
pop
sub
xchg
xor
mov
mov
int3
xor
movsb
jno
loope
cmp
pop
mov
scas
sbb
mov
movsb
pop
jp
xchg
subl
fwait
adc
sbb
inc
mov
mov
stos
into
sbb
xchg
cmp
jecxz
xchg
into
lret
das
mov
sub
test
ljmp
push
aas
stos
mov
inc
mov
dec
daa
test
or
dec
out
roll
jg
xor
lret
loopne
pop
mov
outsb
clc
mov
popf
push
int3
fisttps
sbb
out
mov
enter
dec
adc
cmp
mov
mov
jns
int
repz
fs
testl
push
dec
outsl
sub
push
jg
lds
fcomi
das
jb
xchg
lock
outsl
mov
pop
dec
mov
add
fcompl
cmp
pop
jg
inc
and
mov
dec
pop
jmp
lcall
icebp
xchg
push
lahf
cmc
nop
sub
push
pop
pop
mov
jl
or
add
add
jnp
insl
inc
popl
repz
repnz
dec
outsb
pushf
jl
ja
adc
addr16
ja
std
nop
mov
jg
ficoml
idivl
sbbb
ds
sbbb
xchg
movsb
aaa
and
daa
dec
shr
push
cmp
mov
mov
repz
push
xchg
cmp
jp
cmp
add
sbb
jns
cltd
testb
insb
insb
push
cmp
xor
fs
ret
jp
adc
ljmp
pushf
inc
fnstenv
jne
mov
or
js
lret
test
out
push
xchg
pop
outsb
dec
mov
jbe
mov
push
daa
jb
enter
std
mov
sbb
lds
dec
repz
sahf
divl
dec
int3
loope
pop
out
pushf
cmpsb
mov
jg
dec
shll
mov
dec
push
insb
jecxz
fiadds
imul
ljmp
out
stos
cmp
iret
out
into
cltd
pop
pop
sbb
xor
in
in
mov
sub
inc
mov
adc
push
jne
and
adc
and
jg
add
stos
inc
jmp
jb
mov
aad
popl
popf
mov
scas
fdivr
dec
mull
cmp
pop
push
ljmp
ret
pop
loopne
mov
call
push
jno
xchg
shr
sbb
pushf
in
pop
lahf
mov
push
cmp
jl
mov
es
cmpsb
pop
mov
shl
negl
mov
dec
inc
out
jle
push
lock
out
scas
push
daa
cmpsb
arpl
jecxz
sbb
add
rorb
mov
push
fcmovnb
outsl
push
rcl
pop
jecxz
push
or
js
es
adc
jecxz
arpl
iret
fs
in
ja
lods
inc
icebp
fimuls
or
ds
fldcw
shl
push
adc
orl
pusha
sub
and
scas
pop
shrl
cmpsl
in
mov
pop
push
mov
inc
mov
xchg
push
xor
scas
imul
shll
insb
bound
test
lock
das
sub
adcb
and
pop
add
mov
clc
lcall
jae
mov
mov
stos
and
rcrb
sub
push
jecxz
jb
daa
or
cmpl
sti
inc
add
test
xchg
fisttps
push
dec
cmp
push
push
leave
xor
adc
sarb
xchg
pop
pop
icebp
mov
xchg
jmp
pop
dec
enter
das
jecxz
leave
jne
sub
xchg
mov
xor
stos
leave
mov
or
js
mov
out
addr16
or
std
jecxz
sub
je
aas
fldl
or
push
fsubrl
xor
add
jb
adc
mov
enter
mov
xchg
std
mov
pop
push
jbe
movsb
inc
sbb
out
enter
inc
add
xor
mul
lcall
push
push
push
loop
pop
ljmp
nop
iret
rolb
jmp
les
and
push
es
lds
push
pop
std
inc
arpl
inc
enter
cmpsl
dec
jnp
ss
icebp
addr16
cmc
jg
bound
sbb
incb
int3
addr16
rcll
rorb
notb
cmp
lea
dec
mov
pusha
xchg
cmpsl
ret
push
jb
leave
push
in
adc
cmp
jnp
adc
inc
inc
addr16
in
xor
mov
imul
sub
pusha
movd
fnsave
push
inc
xchg
int3
or
bound
pop
pop
int3
je
xchg
jne
in
sbb
or
sub
out
outsl
xchg
int3
shr
fstpl
adc
imul
inc
rol
adc
mov
sbb
js
repnz
in
in
ficoml
inc
add
loope
add
dec
cwtl
pop
push
fisubrl
xor
jno
xchg
cmp
dec
jno
mov
jnp
cmpsl
cmc
and
jbe
cmp
lock
mov
pop
ljmp
popf
lret
insl
cmpl
mov
jno
scas
loope
std
lret
out
cmpsl
icebp
inc
inc
jle
xchg
push
imul
sub
cmp
test
pop
outsl
xor
inc
sbb
jecxz
in
scas
and
in
mov
ja
pop
jmp
mov
mov
mov
and
bound
cmp
xor
loop
xchg
cmp
aam
js
pop
dec
cwtl
sbb
xor
enter
sub
jns
add
xchg
insl
cmp
sub
and
in
pop
sarl
aad
xchg
sbb
jge
jge
into
sub
es
mov
scas
aaa
or
sub
fistpl
lock
add
and
and
or
dec
fcompl
mov
push
cltd
mov
adc
push
xchg
or
add
or
rcr
mov
push
push
ret
lcall
sub
sub
into
jne
pusha
mov
add
jle
outsb
ss
dec
xchg
test
xchg
and
mov
ja
mov
lahf
jno
sbb
sub
mov
cmpsb
sub
dec
xchg
inc
jbe
push
jb
lcall
push
xchg
cmp
jmp
push
pop
pushf
enter
mov
lret
xor
push
and
dec
mov
cmp
shll
inc
cltd
pop
int
pop
mov
rcrb
inc
lods
outsb
testl
or
imul
inc
fdivl
mov
pop
enter
loopne
pop
or
jp
xor
sbb
fwait
sbb
pcmpeqw
sub
out
mov
faddl
mov
shrl
sahf
ja
int3
mov
sub
cmpsb
push
sbb
pop
hlt
test
mov
adc
mov
pop
xor
outsl
fs
sub
dec
imul
push
scas
mov
sub
pop
pop
movsb
xor
popa
mull
testl
es
mov
imul
fdivr
push
push
loopne
fisttpl
pop
leave
mov
and
sub
stos
pop
adc
xchg
push
shl
sbb
mov
pop
jle
roll
out
lcall
fs
dec
push
subb
scas
push
pop
les
push
jg
and
outsl
in
notl
lea
into
mov
xchg
cmp
xor
daa
xor
xchg
ret
arpl
jle
and
mov
jno
in
jne
lods
mov
dec
sub
cmp
xor
mov
leave
xor
dec
sbb
mov
addr16
cltd
sbb
imul
popa
ljmp
mov
xor
dec
daa
jmp
push
aad
aam
mov
scas
clc
outsl
mov
mov
out
and
mov
faddl
int
test
xor
mov
push
rorl
or
loop
cmp
rcll
pop
push
dec
sbb
mov
pop
loope
iret
and
mov
inc
es
mov
ljmp
shlb
push
adc
jns
jns
push
adc
cmc
jge
std
int3
cmp
cs
add
stos
jno
popa
flds
fidivs
jne
inc
idivl
scas
lock
inc
test
sub
push
lret
xchg
pop
bound
in
adcb
xor
scas
imulb
subl
and
sub
push
nop
jnp
add
jnp
addb
fs
lods
xchg
sub
mov
dec
push
cmp
int
pushf
mov
cmp
popa
lret
adcb
stos
mov
push
test
loopne
adcl
pushf
call
test
aam
mov
aas
sti
test
gs
int
xor
jmp
mov
in
addr16
pop
jne
cmp
fldl
insb
cmp
pop
mov
dec
lret
out
and
cwtl
jg
adc
subl
or
jg
xchg
xchg
jl
mov
push
pusha
xor
std
repnz
lock
push
dec
xor
mov
cmc
cmpsl
pusha
test
arpl
and
mov
enter
cmp
xor
sahf
adc
jno
loop
into
aaa
std
pop
mov
repnz
and
add
cltd
test
adc
ja
daa
inc
xor
icebp
bound
mov
add
and
push
add
jecxz
popa
fdivp
push
mov
or
mov
imul
cli
or
xor
add
jbe
ficompl
repz
nop
jno
xorl
xchg
pop
lcall
jo
jg
sbb
fsub
cmp
lcall
sub
jg
xchg
sbb
int
fcmovu
out
cmp
inc
arpl
les
sub
mov
out
loopne
cmpsb
repnz
xchg
lret
iret
xor
dec
loop
popf
leave
ret
push
cmpsb
push
push
popa
call
fwait
imul
mov
sbb
and
fistpll
dec
test
aas
xor
or
icebp
jnp
dec
pop
loope,pn
lock
out
sbb
iret
data16
cmpsl
or
mov
push
mov
fmull
mov
clc
ret
ljmp
pop
mov
xchg
sub
push
int3
dec
pushf
cmpsl
inc
stos
sbb
inc
cmpsl
rorl
or
lds
cmc
ss
mov
jnp
mov
cmpsb
jle
xor
pop
push
pop
sub
ficoms
add
jns
push
or
mov
aam
xlat
mov
mov
pop
mov
jmp
dec
lea
in
sub
das
aad
or
add
insb
pop
lret
jmp
add
mov
sub
and
out
push
mov
xlat
call
pop
and
or
sub
lcall
sub
dec
loopne
xchg
subb
sbb
adc
cltd
pop
or
into
lahf
mov
jecxz
out
push
dec
mov
imul
inc
mov
das
mov
ljmp
test
xlat
xchg
jmp
fistl
inc
mov
mov
adc
cmp
mov
pop
aad
or
enter
test
add
call
stos
lahf
aad
push
ror
movl
shrl
pop
repz
lahf
mov
dec
fdivrs
pop
nop
adc
jno
pop
popa
sub
xchg
sahf
icebp
fst
dec
add
inc
clc
dec
shll
cmp
jle
mov
mov
push
pop
ja
jo
xlat
fs
push
mov
inc
xchg
nop
loope
into
push
fsts
mov
cmpb
fistpl
shlb
mov
lcall
test
lret
sub
xor
out
mov
loopne
icebp
in
cmp
je
pop
adc
fiadds
loope
jne
movsl
fiadds
popa
lcall
jmp
pushf
repnz
aad
aaa
ja
mov
mov
daa
scas
jbe
les
cmp
insl
mov
jle
out
and
push
xchg
mov
pop
outsb
lock
inc
arpl
adc
es
loope
std
enter
repnz
stc
mov
cmp
jmp
into
xor
push
cmpsb
repz
cwtl
lea
dec
mov
add
and
push
icebp
jmp
adc
adcb
pop
fwait
pop
sbb
add
dec
dec
je
mov
dec
mov
negb
pop
ficomps
movsl
test
sbb
dec
in
lret
arpl
or
cwtl
jnp
sub
cmpsl
xchg
in
pusha
mov
je
subb
out
gs
dec
frstor
stos
cld
cmpsl
shlb
mov
cltd
sub
add
and
push
sahf
in
dec
pop
mov
stos
lret
dec
mov
xlat
adc
test
mov
aam
lret
add
lcall
pushf
mov
adc
add
pop
mov
out
fwait
sbb
aam
and
andb
pop
mov
mov
push
shll
cwtl
and
cli
dec
jp
in
divl
push
arpl
pusha
outsl
or
ret
mov
jle
mov
hlt
div
inc
test
jp
negb
rclb
out
xor
jb
jo
mov
into
in
in
data16
adcb
inc
xchg
jno
clc
push
mov
orb
mov
pop
mov
cmc
sub
jnp
je
mov
or
and
push
in
test
mov
mov
cmp
sub
mov
test
cmp
jge
adc
add
mov
pop
xchg
xchg
setle
push
scas
jbe
test
sbb
pop
incl
sahf
movsb
push
in
loope
sbbl
and
in
fwait
mov
inc
sbb
ret
mov
sbb
in
mov
mov
jl
adc
mov
or
jg
xchg
iret
xchg
mov
push
int
pop
lret
pop
dec
movb
in
and
add
enter
jl
lock
xchg
sub
mov
test
dec
sahf
mov
mov
hlt
cmpb
sbb
sti
into
js
pop
push
out
mov
aad
pop
sbb
inc
js
int
scas
or
and
xor
cmp
mov
rorb
push
xor
inc
inc
jp
rclb
das
in
mov
inc
mov
xchg
fldenv
imul
push
das
rep
cmp
mov
enter
mov
adc
or
fnstcw
sbb
mov
and
mov
jle
into
js
loop
dec
int3
stc
fs
cs
and
push
push
fsub
lret
in
das
cmp
test
inc
mov
popf
in
mov
add
int
ret
mov
xor
bound
hlt
pop
aad
xor
jae
cmp
ror
pusha
movsl
cld
jbe
xor
jbe
int
mov
daa
pop
push
sbb
cmp
inc
pop
xlat
add
mov
lret
adc
xchg
push
xor
in
xchg
dec
fwait
xchg
fstpt
out
adcb
bound
dec
mov
add
xor
pop
mov
or
je
stos
mulb
bndldx
push
inc
outsb
das
leave
mov
in
sub
loop
fiadds
mov
int
xor
push
mov
mov
pop
dec
inc
or
adc
mov
sub
inc
dec
cld
lahf
xchg
ja
mov
and
jae
pop
and
pushf
fnstsw
cmpsl
pop
push
mov
push
xlat
add
push
lock
mov
adc
xor
sbb
xchg
pop
inc
loopne
jns
mov
out
xchg
pop
inc
icebp
jbe
pop
lods
call
jne
jl
dec
lock
loopne
and
push
xchg
stos
sbb
and
pop
sbb
xor
pop
fsubs
cmc
jmp
pushl
jl
pop
sbb
aad
mov
inc
fisubrl
ja
push
add
push
mov
pop
push
test
push
mov
mov
jle
ret
insl
notb
lock
int3
jge
ja
shll
call
loopne
and
jle
sti
pop
sbbl
jp
inc
int
cs
inc
enter
or
pop
ja
outsb
imul
cltd
test
movsb
add
in
mov
jne
fmulp
out
sti
inc
popf
inc
mov
xor
jmp
sbb
enter
lock
ja
cld
jmp
outsl
fldt
push
jb
pop
mov
or
xor
mov
push
dec
xchg
jbe
fnstsw
lahf
jg
push
outsb
or
mov
fwait
adc
lea
out
std
fwait
push
pop
lds
int
xlat
fsubrp
aam
insb
and
lods
lds
aas
les
pop
cli
out
inc
or
stos
rcrl
movsb
push
outsl
out
and
out
rcl
pop
inc
mov
mov
test
clc
ret
mov
pop
mov
and
and
mov
sub
fcmovbe
fstl
loop
rcl
add
adc
jmp
outsl
in
pusha
scas
jo
idivb
adc
adc
push
adc
lds
lret
adc
mov
test
jg
das
mov
push
or
andb
mov
es
and
and
cmp
adc
adc
xchg
es
pop
lds
inc
xlat
hlt
xorb
in
sub
fdivr
dec
mov
scas
xor
test
mov
out
inc
push
adc
dec
pop
pop
add
dec
imul
cltd
push
loope
sbb
cmp
cmp
sub
sahf
mov
mov
mov
subl
insl
js
pusha
mov
or
mov
add
push
out
push
popf
push
arpl
stos
int3
dec
push
and
ja
movsl
mov
sbb
push
test
gs
lret
pop
jae
cli
lahf
push
shrl
je
sbb
add
mov
popf
dec
aaa
lods
push
lahf
xor
adc
cmpsb
test
xchg
jae
enter
lods
test
adc
cltd
scas
jmp
arpl
pop
mov
pop
js
int3
adc
inc
sbbb
xor
scas
sub
and
dec
or
xchg
sbb
dec
movsb
jne
cmpb
or
es
cs
xchg
shlb
mov
clc
and
push
jnp
push
std
stc
mov
or
cmc
mov
cmc
popf
jg
iret
mov
dec
testl
adc
je
clc
add
out
and
stc
movsb
aad
les
push
pushf
ret
shll
or
es
pop
mov
cs
ror
cwtl
jge
cmp
andb
jp
xor
mov
adc
mov
pop
xchg
or
sbb
in
fisubs
fcmove
imul
adc
iret
popf
aas
mov
mov
push
or
mov
mov
add
mov
shl
inc
and
mov
push
in
add
mov
scas
push
or
jbe
pop
inc
sbb
push
dec
movsl
sti
pop
lock
cs
ljmp
sbb
mov
mov
push
fistps
movsl
xchg
mov
lds
fwait
adc
cmpsb
mov
or
inc
push
pop
nop
or
test
out
dec
imul
ret
pop
jns
xchg
jmp
jle
mov
inc
subl
jp
pop
mov
lods
jns
out
pop
xchg
push
push
sub
adc
add
push
pop
call
stos
in
add
insl
or
push
jb
mov
shl
and
xchg
ljmp
xchg
inc
repnz
test
movsb
xor
lock
or
mov
enter
aad
xchg
outsl
mov
sti
jno
or
mov
cmpsl
mov
pop
out
shll
fdivl
jo
leave
data16
decl
fisubrl
ds
in
push
mov
push
int3
push
popa
sub
inc
pop
orb
lret
sti
fsts
int3
fwait
mov
into
push
jge
sahf
sub
popa
mov
test
in
ficoml
xchg
mov
scas
ljmp
sti
lock
jne
inc
push
cli
dec
xchg
lds
aam
aas
mov
push
out
pop
mov
push
test
mov
scas
int3
out
add
cmp
sbb
pop
sub
testl
xchg
pop
pop
xchg
cmp
imul
inc
pop
pop
scas
insb
xor
and
sbb
sti
lahf
xchg
pop
pop
enter
push
lcall
sub
pop
sbb
inc
lahf
xchg
xorl
loop
mov
dec
add
hlt
inc
or
in
lret
mov
rorb
sbb
sbb
fbstp
jne
mov
in
xchg
push
add
pop
test
add
sbb
mov
inc
sahf
mov
cld
xchg
xor
cwtl
sahf
fimull
sbb
cld
jb
sub
jae
leave
add
shrb
fs
xor
popf
push
fwait
jmp
lret
rorb
sbb
sti
dec
es
loopne
rorb
mov
push
js
pusha
mov
setae
lret
cmp
xchg
test
mov
mov
or
repnz
and
out
out
push
mov
shlb
ror
decb
idiv
aad
jo
push
cltd
ljmp
loop
mov
pop
addr16
fdivr
mov
mov
das
divl
sti
mov
out
sub
add
outsl
rcrb
and
arpl
pop
inc
mov
int
ss
icebp
push
xchg
repz
push
inc
fildll
sarl
dec
ror
mov
jl
xchg
push
inc
scas
adc
add
mov
dec
mov
jbe
or
cmp
inc
xchg
inc
adc
sub
push
inc
mov
sub
fildll
mov
mov
lea
fwait
imul
scas
ret
sub
cs
loop
fprem
int
mov
cmp
or
pop
fidivl
xchg
aad
xor
ret
xor
xchg
dec
push
in
insl
shrb
outsb
test
or
mov
jns,pn
popa
fwait
es
adc
pushf
or
push
xor
add
out
jns
and
out
dec
mov
sti
sub
cs
adc
scas
xor
or
fwait
testb
nop
xchg
ret
negl
or
ret
call
aad
and
jns
dec
lods
andb
xchg
cli
js
popf
lcall
cmpsb
das
negb
xor
add
lret
jecxz
adc
fs
daa
jae
test
ds
sub
mov
pop
or
lock
lods
cld
jg
stos
dec
jne
sub
add
add
jge
push
scas
cmpsb
arpl
cmp
mov
mov
push
fisubl
sbb
or
jmp
xor
or
out
in
pushw
cltd
imul
cld
shll
in
stos
ret
push
fisubs
ret
xchg
xor
nop
adc
scas
das
mov
push
insl
ss
adc
imul
notb
sti
pop
inc
stos
ficompl
leave
mov
xor
sbb
sbb
test
push
in
nop
pop
mov
aad
mov
arpl
xlat
scas
sbb
push
pop
outsb
movsb
lods
aam
inc
mov
dec
inc
xchg
mov
mov
lds
xchg
dec
das
push
icebp
out
rclb
sub
sarl
push
mov
rcrb
add
rcrb
mov
mov
mov
test
test
jbe
or
addb
mov
mov
loop
inc
push
leavew
imul
adc
jl
dec
and
jp
js
lcall
test
inc
xor
mov
sub
test
test
xchg
pusha
and
call
dec
xchg
mov
push
and
cwtl
outsl
scas
xor
and
adc
dec
repz
std
mov
push
or
and
inc
or
das
inc
pop
fidivl
fs
mov
xchg
mov
iret
in
adc
cmp
repz
mov
push
shlb
loopne
in
pop
mov
mov
ret
xchg
mov
out
fstpl
push
push
int3
pusha
or
or
ret
xchg
out
in
inc
pop
pop
xchg
frstor
pusha
in
xchg
add
cmpsb
lret
aam
inc
popf
xlat
push
cltd
sbb
push
gs
mov
shll
adc
lods
popf
mov
jb
and
into
jle
dec
mov
enter
dec
movl
xor
dec
fldl
add
sbb
adc
xchg
icebp
adc
jbe
arpl
mov
inc
mov
xor
adcl
stos
popl
xor
icebp
subl
punpckldq
scas
cmpsb
pop
out
sar
stc
inc
outsl
jns
loopne
lods
mov
pop
sahf
pop
cmpsl
shlb
or
clc
mov
jno
test
xchg
lds
dec
inc
add
mov
sub
dec
adc
inc
call
lods
and
jae
cmp
movsb
push
pushw
shrb
scas
mov
jp
cmp
pop
loop
shll
aaa
mov
mov
push
cltd
mov
cmp
mov
sahf
ret
push
mov
xchg
mov
xchg
dec
xchg
jne
sub
adc
xor
inc
in
imul
pop
inc
inc
cmovl
out
sbb
push
push
addr16
mov
adc
clc
sub
add
mov
xchg
daa
test
jne
and
faddl
jmp
outsl
notb
jg
mov
mov
sbb
lds
adc
jno
push
subl
sbb
push
test
mov
and
dec
lret
adc
ret
lcall
add
adc
pop
inc
xchg
pushf
jmp
jnp
and
push
scas
pop
in
vpcmpgtw
aaa
jae
jbe
loop
fistpl
cmp
xor
in
inc
pushf
inc
xor
jmp
cmpb
pop
aam
pop
out
fisttps
inc
mov
xlat
cwtl
xor
pop
int3
imul
cmp
push
aas
push
std
adc
std
leave
cld
test
mov
leave
sub
sbb
ss
fnstsw
xchg
movsb
lock
inc
xchg
push
fs
faddl
ja
mov
pop
xchg
sub
leave
xor
ficomps
popa
mov
loopne
push
shll
aam
push
lahf
gs
in
inc
or
jle
jns
shrb
push
aam
mov
mov
push
xchg
lret
mov
addr16
push
div
mov
mov
test
ret
hlt
js
outsb
aaa
sbb
stos
lock
out
cmp
in
mov
clc
mov
test
fstpl
int
inc
insb
mov
mov
outsl
shrb
inc
xlat
push
cmp
xchg
cltd
insl
or
cmp
xchg
and
jbe
mov
sqrtps
orb
int
daa
push
leave
fnstsw
pop
xor
adc
or
lret
mov
lods
mov
pushf
push
mov
xlat
stos
ret
xchg
sti
add
or
xorl
add
sarl
mov
mov
push
and
adc
push
push
aad
pop
test
rcrb
jne,pn
cmc
cmpsl
movsb
test
mov
cltd
icebp
mov
fs
sahf
aas
imul
outsb
rorl
add
xchg
lods
cmpl
mov
add
xchg
in
pushf
sub
cmp
ja,pt
frstor
adc
test
mov
mov
jo
dec
xor
adc
ror
or
push
sbb
xchg
adc
mov
mov
push
enter
stos
xor
data16
icebp
push
jnp
push
add
inc
subb
push
ret
mov
mov
test
add
mov
xchg
mov
jae
xchg
mov
and
arpl
jb
mov
push
pushf
mov
ds
mov
shl
jae
lods
jmp
or
or
inc
insl
shll
cmc
jo
out
frstor
jmp
ljmp
lds
popa
lods
ja
test
call
mov
aaa
xchg
in
dec
adc
dec
sbb
lds
xor
mov
pop
fs
idivl
xchg
inc
push
push
jnp
adc
daa
ja
in
push
scas
popa
test
lahf
mov
jge
mov
negl
mov
add
ja
shl
or
xor
mov
or
and
add
movsl
pop
push
dec
ret
cmpsb
jne
fwait
push
or
xor
inc
adc
and
adc
popl
stos
iret
jecxz
xlat
mov
cmp
bswap
xorl
ljmp
jnp
jp
clc
aad
popa
flds
aad
lock
mov
leave
sub
dec
aam
inc
mov
mov
inc
clc
cmp
jbe
subl
pop
xchg
sahf
dec
pop
push
test
je
ljmp
stos
cmpsl
xor
stc
sub
cmpsb
data16
arpl
mov
cmp
test
fistpll
push
sub
mov
rcr
dec
push
or
stc
mov
cmp
outsb
or
rorl
and
sub
xor
lds
pop
insl
int3
push
je
jecxz
pminsw
movsl
pop
mov
inc
shlb
lock
arpl
jmp
es
xchg
inc
shrb
enter
dec
mov
sahf
es
pop
push
inc
mov
cmpsl
mov
adc
add
xchg
and
cli
xchg
into
xchg
mov
lcall
adc
out
incl
mov
fisttpl
fldl
mov
sahf
jl
xchg
addr16
idivl
pop
mov
inc
adc
fistpl
dec
test
xlat
adc
cmp
sub
push
ljmp
push
add
pop
xchg
out
xor
xchg
push
daa
xorl
mov
adc
mov
xor
shr
sbb
mov
and
and
cmp
add
jle
aaa
xchg
in
aad
and
aaa
dec
xchg
cld
cmp
jbe
mov
push
out
xor
and
outsl
mov
aad
cmpsb
shlb
inc
aas
mov
test
jne
push
mov
mov
mov
pushf
test
mov
lods
xchg
adc
jle
and
jnp
cld
mov
fdivrl
pushf
mov
mov
movsb
in
lret
fsts
out
adc
adc
sbb
adc
divb
frstor
pop
loop
jmp
jmp
orb
cmp
sub
loope
mov
push
jecxz
pop
or
mov
cmovae
xchg
rclb
stc
mov
imul
cmp
xchg
sbb
sbb
jl
and
mov
repnz
das
mov
ss
outsl
and
sub
sub
jecxz
jge
push
push
sbb
and
or
xchg
sub
add
out
jns
pop
out
inc
les
pop
loopne
leave
sub
adc
inc
rolb
movsl
pop
enter
jg
xor
in
sub
jg
cmpsb
roll
xor
mov
lret
or
add
lcall
inc
pop
repnz
lret
bound
sbbb
jge
movsb
testl
sbb
add
fwait
imul
mov
sbb
jns
ja
test
adc
mov
sub
jno
idiv
xchg
pop
fidivs
sub
lret
vphaddudq
jne
lret
push
xchg
out
daa
pop
repz
insb
pop
outsb
data16
sti
xor
imul
loop
out
xor
lock
rcrb
sbb
mov
and
xchg
flds
mov
or
in
xor
test
xchg
out
xor
sbb
scas
pushf
insb
cmpl
fimuls
mov
pop
and
cmp
push
lea
mov
adc
clc
sub
sub
insb
pop
ret
mov
push
jb
jb
loop
sub
aas
xchg
pushfw
pop
outsb
lock
je
push
jmp
aad
mov
cmp
jge
mov
pop
sbb
sbb
negb
cli
cmp
enter
pop
inc
mov
cmp
and
leave
jmp
push
inc
jbe
aad
or
data16
sbb
mov
xchg
cmp
movb
xchg
shll
ljmp
sbb
std
repnz
xor
lcall
idiv
cmpsb
int
in
jo
test
cltd
icebp
pop
fmull
mov
loopne
es
cmpsl
xchg
sbb
loopne
push
lcall
iret
stos
adc
pop
mov
and
inc
mov
mov
lock
jp
jg
pop
inc
fdivrs
inc
jp
shrl
in
loope
mov
ljmp
cmc
adc
add
or
icebp
push
mov
data16
orb
mov
sbb
jo
sahf
movsb
or
sub
mov
insl
aam
jmp
xor
popf
ja
push
js
repz
mov
mov
jl
fwait
lods
in
lods
add
adc
mov
cmp
ret
dec
decl
dec
sbb
adc
cmp
call
addr16
xor
in
inc
sarl
in
sub
aad
lods
mov
ret
lea
test
arpl
sbb
pop
aam
dec
add
sti
repz
imul
lea
call
ret
cmc
and
cmc
push
mov
jo
xor
aad
jecxz
add
or
adcl
push
in
add
aas
mov
dec
loop
xchg
lahf
cli
in
xor
push
sub
mov
loop
add
sub
and
repz
aam
add
cmp
add
shlb
in
mov
add
jno
nop
fsub
mov
push
roll
push
hlt
ret
sbb
out
mov
adc
mov
jmp
adc
out
into
push
xor
or
adc
xor
xchg
ret
es
push
leave
mov
xchg
xchg
push
cwtl
in
pop
add
loopne
and
sbb
add
pop
cmp
push
loopne
sahf
adc
in
lret
mov
call
cmpsl
incl
nop
dec
loope,pt
xlat
aad
fwait
push
mov
js
lds
jno
mov
xchg
repz
push
sbb
mov
punpcklbw
sbb
xlat
loope
xor
nop
jp
les
leave
pop
mov
pop
adc
xchg
fisubrl
inc
loope
shl
lods
adc
cmp
imul
insl
mov
inc
fwait
sbb
mov
cmp
les
outsl
xor
add
jns
add
movsb
jbe
cmp
or
mov
repnz
scas
mov
repz
pop
adc
cmp
jb
jb
ss
hlt
jns
adc
inc
sbb
xchg
popa
insl
pop
add
mov
jae
sti
bts
mov
js
mov
push
iret
mov
and
sbbb
pop
sbb
pop
fldcw
lock
mov
testb
mov
pop
stos
fwait
xor
xchg
arpl
or
mov
jl
pop
sub
arpl
pop
mov
cmp
push
mov
jg
ss
adc
fists
inc
jb
bound
daa
loopne,pn
inc
ss
int3
les
add
cltd
adc
es
mov
xor
mov
hlt
or
jecxz
shll
pop
xor
xor
sbbl
add
add
or
lret
mov
daa
repz
push
je
push
enter
mov
ljmp
sub
mov
imul
dec
nop
dec
xor
scas
adc
mov
cmp
adc
mov
stos
fsts
or
pop
cmp
xchg
scas
dec
mov
sbb
loopne
fnstsw
imul
lds
pop
cmp
cmp
dec
aam
out
das
adc
out
adc
xlat
fwait
mov
add
ret
scas
jne
adc
and
inc
notl
ret
inc
orl
dec
xchg
mov
scas
leave
xlat
jmp
adc
lods
cmp
inc
ficoms
sbb
and
movsl
sub
in
ffree
ds
imul
loop
pop
and
fwait
mull
sub
adc
dec
add
cmp
push
repz
pop
push
jnp
pop
std
sub
bound
or
mov
loop
popa
pushf
js
rcr
scas
and
std
xchg
and
movsb
mov
aad
dec
test
test
dec
xchg
aad
jmp
xchg
pop
xchg
mov
clc
dec
loopne
adc
pop
out
mov
mov
adc
mul
adc
fs
dec
cmp
mov
cmp
and
loop
mov
mov
cld
mov
xor
mov
pop
ret
andb
lea
fldt
jge
jno
cmpsl
and
pop
mov
insl
jo
sbbb
cmp
ljmp
and
push
sti
xor
adcl
and
cmp
cmpsb
or
add
fwait
mov
aaa
xchg
xor
sub
mov
sti
cs
pop
mov
sti
movsb
popa
jmp
mov
scas
imul
out
cmp
lret
in
jmp
test
lods
adc
sub
cmp
mov
lods
inc
out
jle
push
das
out
ret
xchg
add
insb
add
sar
lret
dec
int3
call
rclb
cwtl
call
imul
and
rclb
in
decb
mov
cmp
je
mov
push
add
lds
into
and
fcmovnbe
call
sbb
lcall
jle
fs
sti
xor
mov
push
ss
mov
int3
das
pushf
add
outsl
cmpsl
jge
jg
mov
lods
jge
stos
xor
cld
enter
aaa
dec
fistps
sub
cs
cmp
testb
jp
mov
or
sbb
dec
idivb
outsb
xchg
loop
ja
cwtl
mov
xchg
xor
adc
jae
pop
cmpb
xor
popl
nop
xchg
push
mov
icebp
push
sub
std
popf
or
add
lods
imul
jbe
test
sahf
dec
fidivl
mov
mov
rolb
das
lahf
xor
inc
cltd
lret
push
mov
mov
cmp
add
or
jmp
ret
mov
jge
and
and
and
and
sbb
xor
mov
mov
mov
test
fdivs
mov
inc
push
or
mov
dec
inc
mov
test
and
mov
mov
int3
out
push
sahf
out
xor
push
xlat
lds
mov
push
loope
mov
or
inc
mov
xchg
mov
js
cltd
icebp
mov
sub
adc
bound
inc
push
sbb
cmpsl
push
rclb
pand
pop
pop
lods
pop
pop
dec
dec
and
pop
lock
adc
mull
ja
vmulps
sub
xchg
andb
test
icebp
daa
dec
or
ret
mov
mov
xchg
pop
rcr
jno
mov
test
jecxz
lcall
mov
xchg
mull
ret
test
and
pop
inc
lods
bound
stos
push
adc
cli
push
push
pusha
imul
dec
dec
insb
cmc
add
in
xor
aad
lret
mov
pop
jnp
subb
xchg
out
xchg
adc
dec
loop
enter
add
adc
xchg
push
or
cmp
arpl
xor
cltd
xor
fnstsw
and
or
mov
pop
mov
repnz
ljmp
outsb
ja
call
fwait
sub
cmpsl
outsb
pop
sbb
add
das
cs
jno
stos
pop
sbb
adc
jmp
int3
inc
push
sbb
lods
xchg
mov
cld
jle
scas
push
pop
add
pop
pop
sar
fstpt
push
inc
in
movsb
sbb
and
add
dec
or
repz
and
loopne
inc
fcmove
fisttpll
gs
aaa
dec
arpl
pop
sbb
dec
add
stos
outsl
imul
pop
mov
subl
aad
fs
negl
gs
xor
pop
rorl
insl
sub
and
inc
pusha
mov
popa
adc
pop
xor
push
cwtl
enter
insb
stos
cmc
mov
and
push
mov
xchg
mov
lods
out
pop
imul
cmc
push
mov
push
out
gs
mov
nop
add
mov
in
cmp
xlat
add
mov
pop
das
imul
sbb
add
xor
cmp
or
les
xor
add
leave
cmp
push
sub
add
dec
push
sti
xchg
rcll
xchg
dec
cmc
and
popf
push
cltd
adc
insl
add
fs
pop
mov
xor
ljmp
int3
jns
push
add
popa
lods
cli
jns
dec
out
arpl
mov
out
ret
mov
or
cmp
add
ret
mov
mov
pusha
mov
jo
xchg
or
lret
jbe
or
pushf
xchg
test
push
mov
inc
jbe
fldl
bound
mov
mov
xchg
xchg
shll
shrl
nop
pop
lret
dec
int
movb
sub
daa
dec
aad
and
and
dec
test
mov
pop
adc
imul
adc
jmp
fcomps
fs
mov
orb
repnz
sbb
and
lods
jmp
jo
adc
sbb
mov
adc
push
roll
popf
popa
push
cmp
sub
stc
mov
sti
cwtl
sbb
xchg
xor
loope
push
xchg
loop
data16
push
es
dec
or
sarl
cmp
and
and
xchg
popf
loopne
mov
js
sbb
insl
inc
xchg
push
pop
rcl
orl
and
mov
jge
mov
adc
int3
fsubrs
mov
inc
mov
mov
lcall
jle
std
outsb
mov
shrb
mov
cmp
sbb
mov
and
repz
mov
push
outsl
imul
sub
rcrb
lahf
push
sub
xchg
vpmacsww
add
sbb
push
jl
fsub
mov
lret
pop
fs
test
out
pop
adc
daa
bound
pop
mov
push
shrl
inc
add
scas
inc
push
in
repz
add
mov
leave
cmp
cmp
in
rcrl
and
andb
pop
cmpl
pop
movsb
loop
mov
mov
int
jecxz
xorb
js
mov
cmp
ds
loope
xchg
int3
push
sub
mov
sub
fwait
pop
cmp
insb
ja
push
call
in
fs
cwtl
jne
ret
mov
jle
and
std
shll
cmp
pop
popf
cmp
bound
mov
shl
add
dec
loope
in
dec
sbb
popl
push
shll
int
jmp
insl
mov
lcall
jl
sub
in
sub
mov
repz
adc
bnd
pop
sarl
test
lcall
ret
outsb
std
icebp
imul
mov
mov
loopne
test
aam
sub
xor
imul
outsb
sub
cmp
xor
pusha
sbb
pushf
stc
pop
scas
xchg
sbb
jae
roll
pop
jl
or
divl
gs
jecxz
mov
sbb
loopne
ss
sub
cmp
ror
add
dec
in
insl
jecxz
cld
push
fsubrl
stos
or
add
or
mov
loopne
je
xchg
fwait
mov
rolb
mov
and
std
mov
jo
pop
inc
jo
test
sahf
out
mov
mov
sahf
sahf
or
cmp
movb
stos
sbb
and
loope
pop
out
add
lock
pushf
mov
cmpsl
inc
ret
in
xchg
adc
add
rolb
ret
stos
mov
adc
rcl
pop
sbb
xor
adc
sbb
bound
push
lods
mov
loop
fst
dec
cmp
pusha
out
ret
jp
fisttpll
sbb
pushf
xchg
out
or
or
inc
xlat
mov
in
imul
es
stc
jecxz
sahf
or
inc
add
stc
lods
sub
jge
and
cmp
les
adc
mov
push
xor
mov
ljmp
jle
jo
in
mov
popf
mov
adc
mov
mov
xchg
jae
mov
shll
dec
sub
arpl
push
fbstp
jge
jne
test
jg
movl
lahf
add
clc
cmp
cmp
sbb
je
mov
popa
loop
popf
insl
insl
in
xchg
notb
mov
gs
pop
cmp
loopne
popl
and
ds
std
push
inc
sub
sbb
mov
inc
stos
or
cltd
adc
pop
pop
xor
xchg
and
pop
addl
jno,pt
push
pop
inc
aaa
push
jmp
xor
xor
mov
mov
mov
mov
loop
push
add
xor
test
mov
cli
sarb
bound
in
into
lock
push
cld
lea
xor
cltd
aad
xchg
fs
arpl
rcrl
and
out
mov
xor
mov
in
xchg
mov
ret
sub
sbb
scas
jmp
sti
sbb
sbb
jp
stc
insb
pop
and
clc
or
bound
nop
mov
fs
mov
add
mov
mov
adc
inc
aam
adc
cmp
pop
mov
push
push
rolb
pushf
inc
popf
pop
mov
jmp
dec
shll
movsl
fistpl
out
call
fcom
mov
in
and
push
xor
stc
cmp
add
leave
arpl
aam
and
loopne
mov
dec
sbb
rcll
out
testb
xchg
stos
cmp
jae
in
aas
mov
add
or
fsubl
dec
pop
dec
push
or
mov
mov
or
es
dec
dec
sub
movsb
orb
push
stc
lods
in
sub
addb
int3
addb
cltd
push
pop
loop
call
push
mov
mov
mov
pop
mov
in
cmp
push
fidivl
in
mov
or
imul
xchg
data16
sbb
cs
cmp
adc
xlat
fdivr
jp
movsb
jae
dec
loop
inc
and
inc
adc
les
sbb
cs
movsb
pop
push
xchg
outsb
scas
stos
movsb
cmpsl
popl
maskmovq
call
imul
fnstenv
imulb
mov
cmc
insl
incb
fbstp
and
cli
push
sahf
fisubrs
stc
in
daa
jle
roll
push
mov
loopne
mov
pop
pop
jnp
cli
nop
cltd
sbb
loope
jmp
pop
dec
xchg
cmc
hlt
add
mov
cmc
ja
das
popf
into
jl
lret
push
xchg
test
mov
andl
cli
in
dec
push
ret
stos
mov
sti
aaa
cs
xor
inc
inc
sub
fistps
mov
jp
xor
lret
push
inc
jae
jmp
or
sbb
test
daa
cmp
gs
pop
inc
push
or
popa
repz
xchg
push
mov
fisttpll
dec
lea
dec
add
mov
movsb
sbb
pop
sbb
aas
addr16
call
dec
popf
fyl2x
or
jle
push
sbb
out
mov
add
imul
insb
rorb
imul
ljmp
add
ja
sbb
fwait
pop
fdivrs
and
adc
adc
push
btc
mov
loop
cltd
stc
in
js
and
mulb
ljmp
sub
sub
xchg
jns
les
fisttpl
adc
inc
adc
scas
je
mov
es
lds
out
rcll
jmp
add
jnp
ja
sbb
jge
or
lods
mov
jmp
call
mov
sbb
pop
sbb
adc
jae
pop
xchg
pop
dec
adc
dec
aad
pop
mov
test
imul
scas
adc
ljmp
jmp
dec
hlt
shll
mov
push
jl
das
jg
ret
movsl
fmuls
call
and
repnz
mov
int3
shrl
push
cld
add
inc
inc
repz
gs
adc
inc
movsb
xchg
inc
ficoms
imul
fsts
dec
rol
xchg
cmpsb
mov
dec
xchg
push
loope
aas
mov
test
sbb
insb
loopne
sbb
mov
xor
and
ret
xor
lods
aad
outsb
lret
rorl
jno
sti
sub
cmp
jmp
das
in
stos
pop
idivl
pushf
mov
dec
pusha
xchg
std
fnstcw
push
and
adc
mov
dec
aad
pop
adc
and
jne
mov
daa
sarb
std
test
push
adc
lock
pop
jbe
adc
xor
gs
and
add
mov
and
push
testl
nop
aas
ljmp
aam
repnz
fisttpll
dec
aad
xchg
mov
pop
pop
and
dec
mov
into
loop
mov
daa
inc
lcall
jmp
inc
ret
dec
fnsave
out
or
push
adc
or
cli
cmp
fs
xchg
adc
sbb
xchg
imul
and
mov
leave
daa
and
or
jl
or
scas
and
iret
pop
stc
sbb
inc
add
inc
inc
mov
scas
mov
rcr
dec
mull
ss
loop
sbb
clc
aad
or
rcr
in
loop
scas
xchg
aad
inc
out
inc
out
mov
inc
insb
fcoms
xor
mov
mov
movsl
and
adc
out
in
xchg
fcomps
inc
test
daa
mov
mov
mov
adc
xchg
mov
bound
sub
faddl
mov
mov
call
adc
jo
ss
repz
out
mov
les
and
fcoml
mov
mov
pusha
jle
and
push
out
xor
test
jmp
roll
adc
loop
fldenv
push
jno
mov
jg
pop
push
push
movsl
dec
xor
insl
aad
adc
sub
jo
addr16
repz
insl
cmp
jmp
xchg
mov
inc
loopne
mov
or
fs
mov
dec
fwait
sarb
push
mov
xor
into
mov
jno
cmp
mov
loop
mov
rcll
sub
roll
stc
fwait
cmc
outsb
cwtl
mov
mov
popa
iret
and
js
mov
pop
test
inc
fsub
pmuludq
stc
and
cwtl
scas
xor
insl
cs
push
push
sub
clc
xchg
inc
inc
in
out
das
mov
mov
sbb
push
sbb
in
data16
insb
or
cmp
sub
in
enter
insl
in
outsb
fldt
lahf
shr
or
andl
in
dec
mov
fidivrl
popa
cmp
scas
add
rcll
popa
movsb
in
add
imul
pop
xchg
push
push
rcll
dec
mov
and
inc
pop
mov
adc
lcall
dec
je
jnp
adc
std
orb
and
out
popl
loop
jmp
outsl
sti
int3
xchg
push
shl
movsb
and
in
jnp
stos
stos
pop
xchg
testl
push
mov
sbb
or
out
or
jae
test
aam
adc
xor
out
or
pop
cmp
xchg
sub
xor
xchg
or
mov
xchg
les
cwtl
ja
out
fdivs
ljmp
cld
lcall
jnp
xchg
mov
pop
push
pop
out
fistpll
outsb
scas
or
fs
adc
xchg
leave
adc
test
shr
mov
les
lock
cmp
adc
xchg
fcompl
add
mov
hlt
sbb
cmp
xchg
xchg
ds
mov
js
mov
std
push
aad
outsl
mov
mov
xor
andl
cmp
std
iret
xor
xor
push
sbb
mov
pop
pop
cltd
pop
shlb
stos
ss
xchg
xchg
push
test
arpl
ds
and
pusha
dec
pushf
mov
xor
pop
or
pop
jle
add
pop
and
sub
jo
ss
or
lcall
cli
adc
add
push
pop
daa
into
dec
jg
test
inc
fwait
lds
fstpl
jns
push
jne
rol
jbe
xor
rolb
xchg
push
push
lcall
test
or
and
jne
lods
sbb
leave
mov
dec
mov
lea
xor
gs
fimuls
mov
cmpsb
data16
jle
leave
addb
or
ret
and
mov
js
mov
jp
dec
insl
pop
mov
push
gs
test
data16
xor
xor
mov
loop
mov
lods
jecxz
xchg
xor
outsl
sti
mov
ljmp
dec
dec
repnz
add
xchg
inc
jo
pop
addl
cli
jne
insl
or
fiaddl
lret
popf
pop
mov
out
mov
mov
das
mov
repz
push
inc
lret
fildll
popa
shll
add
stc
pop
lods
add
cltd
cmpsb
jecxz
je
mov
ret
cmp
inc
xchg
adc
adc
lea
in
cltd
inc
add
mov
dec
aad
add
subb
repz
sbb
jns
pop
push
xor
into
bswap
sub
add
add
inc
pop
jge
dec
int3
test
dec
dec
mull
sahf
pop
sbb
push
andb
cmp
hlt
fnstenv
xchg
sub
sub
sub
leave
push
mov
dec
int3
pusha
ljmp
xchg
jb
xchg
lret
jecxz
sbb
decb
sub
rol
int
insb
cltd
jns
xchg
rcll
dec
sbbb
xlat
dec
fnstsw
lcall
add
add
xor
inc
mov
push
add
and
sbb
sbb
outsl
arpl
pop
dec
or
sahf
pop
fidivrs
xchg
cmp
cmp
in
dec
jne
pop
cmp
dec
jle
xor
pop
xchg
imul
or
jle
ljmp
outsb
adc
mov
lret
push
mov
nop
loopne
xchg
imul
adc
push
push
push
lahf
mov
add
scas
lcall
movsl
add
or
cmpsl
imul
test
xchg
ja
push
inc
sbb
inc
xchg
and
repnz
pop
loope
push
or
or
sbb
fldcw
ror
pop
fwait
xchg
add
lea
and
pop
adc
lret
sbb
sahf
lcall
add
sbbb
push
push
test
push
rclb
das
mov
push
dec
inc
movsb
and
mov
jns
addl
or
or
nop
xchg
cs
xchg
jae
and
mov
mov
popf
xchg
scas
mov
or
sub
dec
dec
mov
inc
pop
ja
imul
call
add
lret
pushf
insb
jmp
cmpsb
insb
xchg
pusha
arpl
or
aad
mov
jp
jle
arpl
pop
inc
inc
popf
jno
in
cmpsb
jp
dec
scas
dec
xchg
subb
push
enter
jmp
fs
rclb
int3
mov
inc
out
push
leave
jle
xor
ja
out
mov
inc
fdivrs
mov
push
daa
add
xchg
jmp
or
pop
fdivl
fidivrl
outsb
ret
mov
pop
add
fildl
push
adc
out
push
pushf
push
fbstp
xor
cli
and
call
xor
dec
xchg
jg
cmp
sub
repnz
add
rcl
outsb
inc
fnstenv
lcall
xchg
lea
aas
test
xchg
pushf
add
rorb
push
sub
push
movsb
aas
jl
dec
aaa
xchg
in
dec
jp
dec
sub
mov
jnp
test
mov
mov
call
push
insl
mov
iret
lods
int3
xor
dec
out
in
shlb
sub
push
fldenv
adc
and
sbb
popa
insl
leave
mov
jmp
out
jp
daa
sbb
xor
inc
into
sub
lea
ret
mov
inc
leave
and
daa
mov
arpl
cmp
xchg
sbb
das
push
mov
cmp
bound
pop
pop
push
daa
xchg
repz
enter
out
outsb
sbb
cli
bound
and
iret
fdiv
xor
adc
mov
iret
push
and
imul
iret
pop
dec
mov
ficompl
xor
push
les
out
jb
out
sbb
fs
or
in
inc
jno
mov
fcomps
mov
pusha
xor
fidivrs
and
pop
and
mov
inc
jmp
mov
mov
pop
dec
fdivrs
sahf
adc
jb
adcl
out
nop
jmp
pop
repz
scas
rorl
push
push
sub
pusha
lods
jo
sub
sbb
lret
push
aas
mov
or
push
dec
add
jmp
js
pop
and
pushl
xchg
fsub
jmp
outsl
fcmovne
popf
stc
jg
sti
cmp
pop
mov
test
mov
roll
xchg
jne
jl
or
fwait
mov
lods
cmp
mov
stc
adc
cs
fidivrs
add
inc
hlt
mov
adc
cmp
pop
mov
loope
sbbb
repnz
or
popf
mov
scas
sbb
push
fisttpll
cmpsl
scas
cwtl
dec
jecxz
mov
test
jb
lods
ret
loope
mov
mov
dec
xchg
mov
adc
jge
lds
add
movsl
nop
jecxz
jmp
int3
sub
rcr
xor
adc
xor
xor
enter
and
pop
lcall
push
add
or
pushf
std
fistpll
ljmp
out
repz
jbe
les
stos
loop
sub
lahf
dec
xchg
stos
imul
xchg
adc
lock
jo
mov
mov
int
inc
daa
call
mov
aad
daa
jecxz
leave
scas
cltd
fstp
push
or
std
mov
xor
int3
mov
pop
clc
or
cmp
loope
sarb
mov
jp
add
aad
xchg
pop
pop
pushf
push
daa
pop
jae
call
sbb
mov
std
daa
jmp
movsb
mov
add
repz
nop
fs
xchg
push
inc
sub
jns
in
mov
push
test
and
inc
addl
push
clc
or
mov
fwait
and
ljmp
pop
std
inc
cmp
sbb
enter
mov
ret
lea
pop
mov
bound
cmp
and
in
aas
jb
dec
call
mov
je
xchg
and
mov
daa
push
scas
push
lret
add
sub
push
jns
rcl
out
lahf
xor
jl
pop
jb
xor
iret
into
and
and
sub
outsb
sub
test
test
lea
push
mov
push
inc
cmp
pop
push
in
sbb
push
inc
popf
out
leave
cli
iret
in
popa
inc
rolb
dec
jl
das
dec
rcrb
jnp
pop
push
jp
pop
ret
lahf
lods
enter
xchg
lahf
jae
mov
mov
aad
pop
ret
iret
ljmp
mov
ja
push
sbb
xchg
jnp
dec
imul
xchg
jecxz
mov
not
jle
fs
lods
add
rorl
cmp
scas
mov
fsub
inc
push
insb
adcl
stos
test
jmp
mov
pop
xchg
push
and
roll
testb
sti
inc
stc
push
movsl
xor
pop
jo
repz
jae
movsb
iret
inc
movsb
pop
sbb
inc
js
and
lods
push
push
leave
mov
push
cmc
sbb
arpl
stos
push
mov
in
pushf
cmpsb
xchg
xor
mov
addr16
and
push
mov
cmp
jl
data16
sub
pushf
jecxz
out
stos
cwtl
aam
xchg
sahf
xorl
fs
add
push
rcrb
push
inc
sbb
lea
ss
fs
add
cmp
lret
ss
push
jae
add
xchg
outsb
lret
pop
pop
loop
nop
subb
outsb
push
in
pop
xchg
or
jnp
inc
aas
xchg
dec
cmp
push
xorb
xchg
adc
pop
insl
or
dec
xor
lcall
lcall
dec
movsb
adc
nop
arpl
lock
gs
adc
dec
cltd
sub
in
shll
imul
push
pusha
dec
out
aaa
push
jne
dec
xchg
mov
adc
sbb
repz
push
fwait
in
icebp
xchg
xor
les
call
mov
pop
out
out
sub
ja
iret
jmp
dec
std
rolb
sub
jle
xchg
test
movsb
insb
ljmp
rcrb
cmpsb
jae
mov
in
push
mov
in
std
mov
sub
dec
rorb
fsubrl
mov
popf
xor
pop
mov
bound
xor
mov
lahf
mov
and
rol
repnz
ljmp
pop
lret
pop
cwtl
mov
jns
mov
adc
repnz
loop
push
dec
hlt
stos
cmp
sub
or
xchg
shll
inc
icebp
sub
popa
fbstp
push
pushf
mov
stos
push
mov
mov
xchg
aam
push
dec
lock
inc
pop
call
push
cmp
ds
out
popa
lods
sbb
push
add
xchg
push
je
test
push
xchg
int
dec
pushf
add
push
fs
test
fdivl
outsb
push
adc
adc
push
loope
add
sub
adc
sbb
daa
mov
aas
pop
in
dec
sub
push
fdivl
xor
rcrl
es
xor
adc
pop
cmp
scas
cmp
xchg
mov
mov
nop
mov
jo
push
lods
add
cmc
jecxz
or
inc
and
iret
or
stos
adc
imul
fmul
jns
cld
or
jnp
movsb
shl
jae
aam
dec
fdivrl
stos
add
addb
push
das
adc
xchg
popa
and
divb
mov
test
lea
and
dec
int
and
ds
mov
insb
cmp
and
or
push
imul
arpl
subb
or
ds
loopne
mov
je
insl
xchg
dec
push
adc
inc
rcrl
adc
lcall
xchg
cmpsb
jns
out
jno
adc
xchg
sub
shll
scas
or
sub
dec
leave
movq
sbb
push
and
mov
in
push
hlt
and
adc
mov
out
loope
lahf
jl
sbb
jp
scas
pop
fisttps
sarb
loop
and
dec
pop
mov
xor
mov
popa
xchg
mov
sub
and
jmp
adcl
jns
xlat
xor
scas
or
bound
daa
test
jae
mov
or
mov
in
xor
dec
mov
sahf
adc
sti
sahf
insb
cmp
lahf
aam
mov
xchg
ret
mov
jno
jo
mov
push
push
stos
and
mov
cmp
adc
mov
pop
lcall
xchg
mov
cmp
test
adc
ficomps
insl
ja
pop
xor
js
xchg
sub
cmpsb
adc
clc
mov
pop
jge
enter
dec
xchg
rorl
adc
orb
push
in
inc
notl
cmc
cmp
int
add
movq
sub
repnz
xor
xchg
xchg
aad
ret
lock
cmp
jne
test
clc
adc
mov
outsb
push
imul
push
fistpl
fsubs
xor
stc
pop
in
lock
incl
and
adcl
mov
lcall
js
jg
jmp
or
mov
mov
lods
mov
adc
iret
inc
leave
stos
fsts
sbb
cld
cwtl
iret
adc
nop
push
fisubrl
mov
stos
cltd
mov
push
shrb
xor
adc
add
mov
out
stos
add
xchg
and
repz
add
lods
pop
xor
fdivl
mov
sbb
mov
cmpsl
jecxz
push
loope
ja
sbb
fists
push
ret
mov
add
in
cmp
pop
aaa
sbb
xor
lock
ret
dec
push
jle
mov
pop
xchg
mov
adc
into
add
and
in
mov
jne
inc
mov
dec
push
mov
in
dec
je
mov
imul
pop
daa
pop
insl
lea
dec
cmp
inc
leave
imul
fistpl
je
leave
movsl
clc
lret
xchg
add
or
popa
or
mov
cmp
mov
push
mov
fadds
bound
cltd
add
push
nop
and
mov
jg
push
and
mov
ret
inc
sbb
cmp
push
cmp
or
xor
in
sub
pop
popf
sbb
ja
jmp
add
or
in
rclb
pop
inc
in
bound
inc
js
aam
stc
lahf
mov
sub
data16
xchg
addr16
in
sub
and
insl
pop
add
pop
into
out
movsl
das
fsubl
popf
scas
pop
push
xchg
popf
ja
mov
dec
in
mov
or
and
and
mov
mov
pop
lods
xchg
add
add
cli
xchg
ret
in
mov
not
mov
xor
pushf
xor
cmp
frstor
ljmp
lock
popa
cmp
popf
imul
sub
out
imul
mov
cmova
push
out
inc
or
roll
jbe
mov
dec
dec
imul
loopne
dec
aad
or
mov
test
mov
sbb
shll
repz
enter
xchg
jmp
orl
add
and
sbbl
mov
pop
imul
sbb
in
fisubrs
adc
xlat
call
movsb
roll
add
add
test
in
popf
jle
scas
repz
cltd
push
frstor
mov
dec
dec
xchg
inc
call
mov
or
sbb
rolb
inc
fistl
shrl
pop
stos
test
and
adc
sbb
jp
loope
mov
push
mov
and
push
clc
pop
popf
sub
ret
inc
xor
sub
push
addr16
mov
cmp
mov
pop
inc
cmp
pop
jo
repnz
add
outsl
sub
mov
push
push
loop
std
mov
mov
or
jae
dec
pusha
leave
pop
xchg
pop
cmp
lahf
imul
push
and
sbb
cmpb
ficoml
shr
daa
cmpl
das
sbb
sub
fwait
fs
sub
aas
adc
push
popa
push
repz
inc
cwtl
gs
inc
pop
push
fisttpl
adc
gs
cwtl
sbb
dec
xchg
int
xorl
lret
sbb
sub
or
int3
imul
push
aaa
push
jnp
daa
cli
movsl
jne
lds
loope
orl
sahf
pop
aam
push
add
bnd
mov
mov
test
or
mov
std
jbe
stos
dec
pop
dec
cwtl
daa
shr
ds
or
adc
mov
inc
dec
mov
push
add
jb
push
fwait
push
sarb
mov
push
mov
ja
mov
pop
sar
push
fmul
jo
cld
xor
cwtl
imul
add
shrb
push
iret
leave
fisubrs
mov
mov
xor
jge
lea
pushf
xorb
mov
cmp
cld
inc
mov
into
push
push
subl
iret
mov
mov
ret
loope
xchg
iret
pop
es
sub
enter
nop
ret
sbb
sub
fstpt
inc
mov
js
pop
enter
movsb
xor
jecxz
lods
and
loope
stc
aad
inc
jnp
jo
cmp
sarl
sub
scas
mov
lcall
das
pop
mov
enter
mov
popa
pop
xlat
jne
mov
arpl
xchg
jmp
dec
sub
jle
push
fldt
incl
popa
scas
sbb
xor
xor
add
insb
sub
pop
pop
mov
inc
fcoms
inc
je
sub
and
imul
cwtl
hlt
mov
pop
sti
lcall
inc
sub
mov
jmp
out
cli
xor
cmp
sub
inc
lret
lret
out
adc
sbb
test
fimuls
mov
push
movsl
cld
cli
je
shl
cmpsl
or
add
mov
dec
push
jno
mov
push
jo
dec
mov
sarb
mov
int
dec
clc
or
das
mov
jmp
cmp
or
addl
adc
sbb
xlat
aam
lods
mov
xlat
xchg
push
pop
xor
push
fs
jns
and
aad
pop
loope
ret
or
mov
leave
cli
adc
push
aas
mov
popl
pop
sbb
cmpsb
inc
cmpb
add
sti
inc
pop
xchg
notl
xchg
aaa
cli
xchg
aad
repz
les
jno
into
sub
add
push
dec
dec
jmp
or
cmp
insb
mov
mov
sahf
fildl
std
in
pop
int3
mov
mov
xor
sbb
loope,pn
xchg
cmp
mov
in
push
or
sbb
and
xchg
jbe
cmp
jo
sahf
stos
sahf
adc
shlb
push
popf
out
dec
clc
inc
push
or
jbe
and
mov
add
rcll
cmp
les
ljmp
sti
and
jo
test
inc
or
xchg
sahf
daa
aam
adc
ret
pop
cmp
fists
out
lret
xchg
call
mov
fucomp
jmp
cltd
lret
adc
adc
into
icebp
xor
jae
mov
cmc
inc
mov
nop
stc
les
outsl
push
cmove
mov
inc
jl
sbb
pop
scas
aam
inc
sub
insb
pop
add
sub
aas
imul
cli
repnz
sub
lret
and
mov
clc
je
dec
jae
or
cmp
jno
pop
xor
adc
std
mov
imul
jge
test
js
push
sub
daa
sarw
cmpl
mov
mov
mov
mov
cvtpi2ps
mov
sarl
cld
dec
fldl
mov
jno
fisubrs
aam
movsl
push
fxch
dec
int3
pop
mov
outsl
mov
cwtl
out
les
mov
popa
and
movsb
cmp
jecxz
mov
mov
mov
iret
or
add
insb
mov
and
repnz
mov
lea
ffreep
or
dec
mov
shrl
outsb
into
dec
ret
sub
das
leave
inc
in
cmpsl
ret
push
loopne
push
cltd
mov
lret
enter
pop
ds
repnz
mov
ds
push
rcll
pop
lret
stos
je
mov
mov
scas
xchg
mov
ja
ljmp
inc
inc
mov
jg
daa
lea
mov
iret
xor
inc
mov
sbbb
inc
scas
sahf
fisubrs
cs
fcomip
push
xchg
gs
cmp
push
inc
lcall
xor
ret
mov
fwait
mov
fcoms
sti
das
mov
in
in
dec
bndldx
jae
loop
sub
add
fdivrl
fisttps
mov
das
push
jbe
xor
mov
mov
lods
in
sahf
xchg
inc
leave
mov
insb
sbb
je
inc
inc
push
dec
push
or
mov
out
int
movsb
aad
mov
xor
idivb
mov
dec
cli
inc
pushf
es
popa
sbb
out
inc
je
out
and
sbb
cwtl
mov
fidivs
bnd
cmp
mov
cmp
push
cmp
stos
pop
movsl
or
mov
push
imul
xchg
out
xor
pusha
fucomi
adc
jnp
sub
dec
insl
xlat
enter
adc
movsb
fcoml
repz
test
fsubs
xor
mov
into
fdivrs
cvtps2pd
in
incb
dec
lods
fimuls
mov
iret
push
out
decb
inc
cmpxchg
pop
or
cld
jge
aad
xor
jge
add
aaa
sahf
jnp
sub
or
pop
lahf
stos
mov
lret
shll
pop
rcrl
cltd
xor
lret
sub
fdivrs
push
fcmove
repnz
fwait
test
out
mov
shlb
push
lods
fnsave
not
mov
int3
stc
sbb
mov
cmpsl
adc
int3
and
test
cmpsb
ljmp
jp
jno
ss
scas
or
xchg
lea
icebp
dec
mov
jae
loopne
mov
mov
insl
or
sar
mov
inc
lcall
push
and
inc
dec
inc
xor
icebp
out
mov
push
and
mov
mov
adc
dec
xchg
inc
cmp
push
lcall
dec
jg
adc
std
sbb
fs
scas
fstpl
pop
sahf
adcb
mov
iret
popf
adc
xchg
lahf
lcall
and
sub
jmp
repz
pop
sub
sub
inc
jns
mov
adc
ds
mov
xor
dec
pop
in
js
mov
popa
mov
or
rolb
aam
xor
stos
xor
sbb
lea
bound
mov
dec
and
push
push
in
test
loope
mov
xchg
cmp
add
mov
ja
scas
out
in
movsl
jg
cmp
mov
js
je
aaa
icebp
sahf
mov
out
outsb
into
xorl
inc
cli
in
movsb
stos
jnp
add
lods
sub
pop
sbb
xchg
mov
xor
rol
ret
cwtl
inc
movsl
stos
cwtl
roll
jo
jo
rcl
add
mov
inc
repnz
lods
sbb
scas
rclb
stos
test
sub
and
sbb
es
and
add
mov
popf
jb
sub
cltd
push
jnp
loopne
xor
mov
sbb
ficoml
mov
icebp
push
out
jo
ds
sahf
mov
fnstcw
pushf
sub
fcomps
adc
adc
incb
jno
push
mov
pusha
cmp
mov
aad
pop
inc
mov
fmuls
test
stos
xchg
imull
cmp
xchg
aaa
btc
add
sbbb
out
imul
mov
mov
mov
push
sbb
add
lret
xchg
loope
imul
inc
or
hlt
sub
je
test
fs
test
pop
push
sti
jle
xor
and
push
ja
add
outsl
lods
push
push
or
pushf
push
movsb
inc
popa
sbb
or
mov
mov
adc
pop
mov
cmc
mov
inc
jb
shl
cmpsb
mov
cmp
jmp
and
pop
test
cmpsb
fistps
je
ljmp
imul
stos
push
ljmp
and
push
lahf
push
sbb
xchg
movsl
or
jne
sub
inc
mov
xor
and
add
dec
cmpl
test
xor
or
sti
into
mov
adc
pop
dec
js
mov
test
mov
inc
lret
or
mov
arpl
push
orl
lret
jns
pusha
pushf
fucomi
fiaddl
jp
push
imul
push
testb
loop
ja
loope,pn
add
stc
dec
xchg
dec
add
sub
mov
mov
cmpb
pushf
enter
push
stos
jg
out
bound
push
push
out
and
incl
push
clc
insb
dec
mov
movsl
aaa
mov
aas
sbb
mov
pop
pushl
mov
push
pop
xchg
ficoms
inc
push
push
sahf
ret
pop
dec
push
pop
push
mov
xor
imul
or
fcomp
in
or
je
call
pop
adc
push
ljmp
mov
ret
add
in
pop
jns
fidivl
cli
insl
out
ret
ja
fimuls
mov
mov
ja
sti
addr16
movsl
jl
sub
add
push
loop
sub
and
scas
call
xor
mov
mov
mov
xchg
push
push
inc
cmp
mov
mov
repnz
and
jo
data16
sub
ret
fwait
pop
jecxz
or
xor
das
cs
test
push
jmp
xchg
pavgw
xchg
ljmp
ja
inc
cld
or
dec
ds
lcall
and
pop
sahf
jl
inc
jp
dec
cs
dec
push
add
shll
push
add
fsubs
mov
js
jb
xchg
xor
dec
mov
xchg
das
jns
es
xchg
in
xchg
shrb
and
sub
cmp
inc
nop
out
mov
int3
in
js
jmp
dec
mov
nop
mov
cmp
xchg
clc
insb
ret
cld
and
outsb
cmp
jge
sahf
mov
pop
mov
lods
fs
mov
push
andl
popa
mov
icebp
xor
push
pop
jp
push
mov
test
and
out
xchg
or
dec
push
gs
adc
sub
mov
mov
jmp
push
pop
jno
dec
cmp
movsl
out
inc
push
mov
and
xor
out
adc
pop
loop
mov
inc
lods
mov
lock
jle
ja
push
xchg
push
outsl
addb
dec
cmc
lret
arpl
add
sbb
fdivs
pop
js
mov
xchg
pop
fsts
lret
dec
xchg
sbb
aaa
cmp
push
hlt
lea
add
jo
inc
jbe
mov
mov
mov
sti
or
mov
in
sbb
mov
push
or
mov
jle
jno
lret
add
mov
int3
into
lret
adc
cmp
push
filds
call
mov
and
mov
insb
inc
rcrl
mov
repz
lret
adc
jmp
ds
int
push
loopne
pop
leave
adc
aam
mov
jmp
ss
mov
xchg
test
loopne
inc
or
stos
xor
aad
sub
mov
jbe
jl
fwait
imul
inc
push
pop
stos
imul
imul
js
lods
push
inc
faddl
adc
or
dec
sbb
sub
in
sbb
push
pop
sub
cmpsb
out
rcll
jmp
imul
idivb
inc
mov
jns
bound
pcmpeqd
aad
pop
imul
mov
repz
xchg
mov
add
mov
pop
sarl
and
mov
mov
pop
repz
popf
jne
pushf
in
pop
mov
jmp
inc
inc
push
add
into
pop
jmp
int3
movsl
loopne
test
repnz
test
ja
roll
fs
out
adc
lea
push
test
out
stc
loopne
inc
mov
das
clc
push
js
add
je
jbe
into
ret
mov
xchg
arpl
fadds
xchg
inc
pusha
dec
add
mov
repnz
mov
jmp
or
cltd
aas
loope
sub
xchg
pop
pop
mov
cmpb
loope
dec
fidivl
push
cmp
cwtl
daa
in
pop
das
xor
popa
out
inc
daa
cmp
dec
pop
call
add
jno
call
cwtl
fsubl
js
dec
dec
jb
out
fcomp
addr16
push
lock
popf
into
mov
std
xlat
and
lods
add
scas
and
xor
jg
push
mov
xor
arpl
ret
and
pop
cmpsb
add
je
ds
cli
das
sub
push
pusha
ds
je
pop
pop
xor
popf
pop
jg
jo
stos
cmpsl
andb
aam
dec
xchg
jnp
fs
sub
cmp
dec
fadds
enter
insl
mov
inc
jmp
mov
daa
imul
mov
adcl
and
mov
in
in
bound
into
xlat
lods
int
cmp
add
and
sub
mov
inc
adc
sub
jae
jp
js
push
mov
addr16
and
popf
insb
jne
mov
dec
enter
inc
ds
jno
mov
cmp
dec
jo
icebp
mov
sbb
sbb
stos
sub
out
sub
push
mov
add
and
and
out
into
imul
es
ja
pop
leave
int
push
xchg
push
sbb
mov
mov
jns
add
in
scas
xchg
repz
mov
lock
pusha
call
sti
sub
cmp
sbb
call
in
add
or
lcall
and
hlt
jp
pop
iret
scas
outsl
push
add
lret
mov
jne
xor
add
call
repz
out
pop
pop
movsb
and
stos
jae
mulb
test
mov
outsl
mov
add
or
push
jns
hlt
xchg
lea
shr
ljmp
push
fdivr
cmp
xor
lds
push
iret
iret
mov
enter
jo
ret
push
mov
jmp
pop
lret
imul
or
inc
rcr
mov
mov
xor
inc
lods
xchg
js
mov
jnp
repz
repz
xchg
jno
pop
mov
popf
rclb
add
pop
ficomps
daa
decb
loopne
mov
fsub
inc
pushf
xchg
scas
push
or
rolb
test
andb
xor
add
mov
mov
test
push
inc
add
xor
cmp
ss
adc
push
addr16
inc
leave
rorl
jge
sti
int3
and
or
shrb
add
int3
les
jg
out
daa
gs
clc
and
fsts
push
lret
inc
push
leave
xor
outsb
cmp
dec
mov
fidivrl
fsubl
xor
popf
icebp
nop
dec
xor
sbb
cs
cmp
mov
test
insb
sbb
xor
inc
jg
cmpsb
add
mov
mov
add
std
cltd
xchg
out
sbbb
aad
adc
je
xor
movsl
ret
shl
pop
and
cld
outsb
adc
test
ret
shrb
adc
ret
repz
rcll
mov
lods
test
mov
add
add
cli
and
xlat
ljmp
push
inc
testb
rcr
inc
int
dec
dec
pop
mov
js
testl
les
aas
mov
jno
sbb
sbb
jno
jmp
les
arpl
int
ss
imul
jno
dec
subb
inc
push
pop
sbb
stos
jno
fst
js
xchg
pop
or
cmc
das
xchg
test
push
mov
lahf
ss
jp
pop
cmp
adc
cmpsb
push
xchg
lods
jge
jp
lret
shlb
pop
push
and
push
xchg
sti
xchg
nop
addl
lods
aas
mov
insl
push
or
test
dec
bound
push
fst
mov
xor
and
scas
not
inc
mov
dec
sti
adc
sbb
cld
add
js
mov
loope
clc
rcrl
testb
pop
roll
mov
movsl
fs
aaa
pop
jle
repnz
inc
push
mov
jle
adc
push
and
popf
aaa
sub
xchg
mov
mov
jns
pop
add
jo
imul
int
outsl
xchg
cwtl
or
xchg
faddl
xor
adc
imul
adc
aaa
fnstcw
movsl
or
mov
jmp
mov
test
adcb
andb
xchg
popf
mov
mov
mov
mov
mov
dec
je
aad
jl
adc
sbb
xor
js
sub
paddw
rcrl
in
insl
mov
int
fldenv
add
mov
and
mov
stos
mov
cmpb
sub
inc
insb
dec
pushl
gs
out
pop
mov
mov
adc
inc
sti
int
cmp
xor
sahf
inc
add
lods
inc
adc
int
and
and
stc
sbb
mov
inc
sbbb
xlat
jb
xchg
add
or
rcll
cltd
add
ja
mov
cltd
cli
out
mov
sahf
rcll
das
fdivrl
push
add
das
decl
and
cmc
iret
fptan
jno
mov
push
testb
adc
ss
js
pusha
xor
xor
fldenv
xchg
jl
in
mov
push
push
add
data16
sub
xor
out
mov
loopne
push
repz
or
adc
push
and
sbb
jne
daa
subb
daa
lcall
hlt
jle
or
test
mov
pop
fpatan
ljmp
sbb
rcl
push
fcompl
mov
mov
sub
dec
movsl
inc
shrb
shrb
cld
pop
test
pop
sub
icebp
sbb
pushf
out
inc
sbb
xchg
pop
inc
cld
adc
dec
sarl
dec
inc
popf
push
cmp
fwait
inc
xchg
loopne
cmp
and
movsl
jecxz
mov
sti
dec
dec
fisubl
xchg
fisttps
shrl
fists
sarl
xlat
repz
cmp
repz
mov
adc
push
aam
xor
cmc
cmp
daa
aad
fsubl
cmp
pop
lods
pop
sbb
inc
cmp
out
es
mov
std
push
roll
data16
fstl
sbb
cmp
je
fwait
push
dec
repnz
sbb
lcall
cwtl
outsl
push
push
and
mov
mov
ss
fistps
daa
sub
dec
add
push
adc
mov
push
stos
push
xor
bound
shrl
push
mov
test
dec
cmp
sub
dec
add
xor
mov
sbb
dec
mov
ret
int
nop
outsl
addr16
cmp
push
std
jbe
push
and
or
add
inc
mov
lds
fs
jle
lcall
mov
ds
dec
mov
jno
dec
iret
ljmp
das
ror
push
icebp
lret
arpl
mov
push
inc
addl
sub
daa
xchg
js
or
xor
stos
imul
jl
lods
mov
hlt
out
mov
cmp
mov
or
test
movsb
jmp
outsb
lahf
cwtl
ja
mulb
fwait
mov
pop
out
or
fwait
lods
jns
popa
fcomip
add
xchg
add
leave
jmp
stos
xor
push
pop
testl
movsl
adc
mov
sub
adc
in
or
sub
fucomip
or
lds
aam
dec
add
mov
out
jecxz
jb
pushf
cmp
out
test
inc
ret
test
dec
loope
adc
stos
outsl
pop
sub
ja
and
in
lods
lcall
cmp
and
rclb
pop
and
xchg
lods
add
or
mov
pop
popf
jbe
xor
stos
dec
jecxz
sbb
sbb
push
mov
adc
filds
out
sbb
fnstsw
dec
sti
aad
pop
or
fsubp
movsb
push
xor
xlat
scas
jle
fisubl
out
andl
iret
shlb
std
add
sub
pushf
push
pop
mov
movsb
out
jmp
cmp
jb
in
cli
xchg
lds
pusha
add
sbb
nop
lods
gs
push
xlat
mov
xor
dec
fs
mov
mov
inc
cmp
xor
lock
fmuls
sub
outsb
mov
mov
xchg
out
scas
aas
sbb
or
ss
add
push
aam
mov
cmp
xchg
sub
push
dec
push
mov
mov
fcoml
pushf
push
fiadds
imul
or
ret
xor
jg
jno
mov
pop
out
movsl
shll
fmull
mov
pop
mov
push
das
data16
adc
xor
movsb
inc
sbb
lea
dec
loope
shll
xchg
cmc
mov
insl
jp
int3
dec
cmp
clc
lods
adc
fs
cmc
cmpsl
addl
sub
and
shlb
cwtl
pop
inc
lcall
mov
inc
andb
push
out
jle
xchg
js
push
lret
inc
cmovo
push
mov
icebp
andb
dec
enter
shl
pusha
sub
push
pop
aam
mov
pushf
push
roll
sbb
cmp
mov
adc
outsl
imulb
pushf
mov
imul
aad
scas
hlt
stos
cmpsl
out
or
int3
add
loop
in
jno
mov
push
adc
push
mov
pop
sti
adc
sbb
jmp
or
mov
loop
rcrb
mov
xlat
lret
add
jge
pop
mov
mov
shlb
stos
int
mov
test
enter
mov
xchg
mov
cltd
pop
adc
inc
out
jns
divl
jmp
bound
xlat
xor
clc
xor
add
int3
repz
mov
add
adc
inc
adcb
push
lods
sarb
cltd
cmp
fs
push
popa
clc
sbb
cmpb
imull
push
paddsb
pop
ret
pop
xchg
data16
add
addr16
pop
push
add
nop
adc
mov
sbb
cmc
cmc
loop
mov
push
std
pop
xchg
xor
repz
add
stos
popa
aaa
popa
mov
sbbl
cmpb
stc
add
pop
test
bound
push
mov
and
test
into
orl
xchg
xor
jne
and
rorb
mov
jb
arpl
test
in
cmpsl
and
cmp
or
pop
mov
popf
push
pusha
sahf
lahf
xlat
xchg
subl
lods
jge
jb
xlat
enter
out
pop
lret
dec
mov
imul
cld
test
jmp
divb
mov
mov
jne
sbb
jle
test
xchg
fs
fs
js
jmp
or
ret
cmpsb
cltd
fstpt
imul
inc
lcall
rcl
cmp
mov
cmp
fldcw
aad
xlat
cltd
ret
cs
jbe
sbb
arpl
push
xor
out
sahf
hlt
or
les
int
or
add
das
dec
ljmp
xlat
vpmaxud
rcrl
hlt
pop
push
sub
jecxz
pusha
pushf
test
je
xchg
push
ret
push
dec
je
add
or
fwait
push
shll
je
inc
inc
sti
mov
cmp
fildl
addb
imul
adc
stos
das
dec
add
jno
in
or
pop
test
es
notl
push
enter
dec
cld
cld
lahf
and
jmp
sbb
rorb
in
mov
push
mov
aam
inc
fbstp
sub
jmp
xor
mov
xchg
xchg
push
add
xchg
jnp
subb
cwtl
fcomps
sub
xor
js
scas
movsl
sbb
dec
xchg
sahf
xchg
sub
and
fistl
testb
pusha
leave
sbb
leave
ficoms
and
add
mov
pop
outsb
inc
mov
mov
dec
or
aas
jnp
jno
lea
pop
dec
mov
xchg
ja
jo
loop
movsl
movsb
inc
into
xchg
loop
sub
test
pushf
cltd
jl
outsl
fucompp
jl
insb
loopne
sbb
push
adc
inc
pop
mov
sbb
lds
mov
and
ja
out
outsb
mov
inc
daa
aas
lock
xchg
jo
sarb
dec
int3
xchg
jge
lea
inc
xchg
dec
daa
mov
icebp
push
sbbb
popf
inc
dec
jp
push
fs
bound
inc
in
js
lods
mov
mov
aas
push
pop
nop
jo
adc
lds
mov
jae
xchg
inc
cltd
into
mov
scas
mov
jo
xor
daa
shrb
sbb
cmp
sub
adc
and
push
mov
lcall
push
int
sub
jg
sub
es
mov
inc
ret
movsl
loope
mov
std
bound
dec
dec
xlat
mov
xor
pop
inc
push
hlt
ss
mov
shrl
in
push
xchg
add
jo
mov
ret
add
and
mov
sbb
inc
sahf
jns
mov
xor
mov
xchg
sbb
out
in
popa
cmp
xchg
in
into
je
jp
sbb
cld
shrb
rcr
test
dec
repnz
scas
dec
pop
call
popa
xchg
pop
add
rcll
and
mov
in
xlat
mov
test
cmpsl
es
enter
jecxz
leave
adc
ss
xchg
sti
mov
cltd
dec
mov
fnstsw
cmpsl
cmpsl
jb
out
mov
cmp
hlt
mov
sbb
xor
scas
adc
jmp
lods
cs
icebp
lsl
aas
lea
insb
push
shll
mov
ds
iret
das
mov
and
cmp
inc
inc
mov
scas
adc
mov
jle
jmp
push
pop
out
mov
pop
jge
xor
imul
shll
mov
adc
sub
cmp
xor
clc
int
jmp
jo
fstpt
sbb
loope
orl
jmp
lret
rclb
pusha
jl
leave
leave
fnsave
xchg
iret
or
out
fistl
ds
hlt
movsb
fs
mov
jne
aaa
repnz
push
call
and
icebp
jne
fmul
stos
pop
enter
les
imul
jl
xor
fisubs
xchg
frstor
mov
cmp
xor
mov
scas
arpl
xchg
add
dec
aam
arpl
shll
shrb
lea
xor
addr16
adc
loopne
or
stc
fcompl
cmc
hlt
pop
movsl
lock
dec
push
xchg
pop
cmp
in
mov
cmp
adc
shll
lret
pop
pop
ret
dec
sarl
loope
popa
cmpl
sti
cmc
dec
pop
xlat
int
outsb
mov
lds
cmp
add
and
fwait
test
insl
in
fidivs
and
lods
fwait
popf
adc
mov
lret
mov
int
sahf
cmp
dec
aam
mov
push
mov
push
arpl
int3
jo
add
cmc
push
sub
dec
mov
movsb
in
fcmovb
mov
push
sarl
cli
icebp
popf
xor
xchg
lcall
jns
push
sbb
xlat
push
jbe
rcrl
pop
or
pop
pop
dec
rclb
jnp
add
lock
loop
rorb
test
xchg
in
aas
adc
outsl
push
fcomps
icebp
lret
test
stos
lret
pop
fsubs
mov
cmpsb
mov
loope
ja
adcl
aaa
incl
faddl
repnz
pop
loopne
js
sti
dec
mov
mov
lcall
cld
outsl
scas
pop
pop
mov
stc
push
pop
rcrb
jne
or
enter
mov
imul
jp
xchg
movsb
test
add
loope
fs
out
jge
add
push
daa
add
aas
or
cwtl
mov
sbb
inc
pop
test
pop
lods
sbb
push
jb
jb
mov
push
fcomi
cmpl
rolb
pop
mov
push
imul
adc
fwait
jp
call
inc
aas
js
jmp
int3
inc
movsb
cltd
adc
cwtl
scas
mov
cwtl
fstl
and
adc
xor
jb
test
mov
outsl
mov
jb
outsl
mov
subb
out
jno
lods
mov
jp
and
inc
js
test
push
test
add
incl
push
orb
push
js
sti
shlb
and
repz
push
mov
cmp
xor
xchg
pop
arpl
in
sbb
std
addb
or
xor
clc
cwtl
push
mov
adc
mov
lret
popa
dec
fistpll
addl
pop
rcrb
adc
pop
sub
mov
decl
stos
shrl
les
sbb
pop
adc
xor
jg
aas
push
lcall
jne
mov
pushf
pop
push
mov
pushf
and
sbb
mov
push
subb
fcoml
fildll
mov
xchg
inc
movsb
and
pop
int
cmp
stc
xor
out
mov
xchg
dec
mov
frstor
jns
jnp
xor
pop
add
xchg
jb
ficomps
add
jno
aas
pop
inc
insb
xor
push
stos
jne
dec
outsb
repnz
jo
mov
fisttps
pop
xchg
mov
pusha
inc
fcmovnb
fisubs
mov
pop
dec
aad
aaa
pop
jno
jbe
bound
adc
push
pop
mov
or
jecxz
xor
xchg
popl
xchg
ljmp
add
in
fs
sub
ljmp
es
roll
add
icebp
dec
aad
push
xchg
pop
nop
ss
icebp
in
pop
repz
sbb
shrb
std
sti
shl
imulb
adc
push
mov
and
xchg
lea
sbb
xchg
mov
out
and
js
mov
out
icebp
loopne
xor
and
pushf
enter
iret
popa
xchg
pop
push
movsl
mov
xchg
stc
pop
fsubrl
jg
loope
jo
pop
or
push
adc
add
pop
cmp
jle
inc
movd
ja
mov
push
xchg
sub
mov
les
or
imul
sbb
cmp
push
cmp
gs
sbb
mov
pop
pop
sti
add
popf
das
push
cltd
cltd
sbb
pop
xchg
xchg
fiadds
sbb
cs
les
push
sbb
outsl
adc
in
lock
std
stos
mov
add
repz
pop
xchg
ja
cmpsl
repnz
aam
leave
pop
lcall
scas
in
mov
jecxz
repnz
sub
fwait
jno
je
pop
nop
in
scas
insb
rcll
push
jae
jno
jnp
pop
cmpsb
xor
cmp
sub
call
lods
mov
add
fsubr
xchg
lahf
sub
ds
aaa
jecxz
push
aaa
pusha
inc
pop
xchg
xor
pop
pop
loop
mov
adc
es
je
pop
nop
jns,pt
push
test
arpl
sub
sbb
push
mov
pop
jmp
or
call
scas
mov
add
mov
fbstp
mov
mov
inc
movl
out
into
lea
mov
ja
test
xor
cmpsb
jb
dec
jbe
cmc
sar
push
mov
push
and
les
fwait
sub
ret
and
cmp
add
xor
call
clc
adc
scas
lcall
mov
or
mov
mov
xor
xor
xchg
jbe
cmp
rclb
sti
das
fisubl
ja
lods
daa
inc
test
push
push
outsl
cmp
ret
sub
add
cmp
movsb
testl
arpl
pop
dec
pop
cmpsl
repz
mov
icebp
mov
fisubl
orl
xchg
mov
push
je
jb
sbb
mov
flds
fdivrs
aam
jl
push
mov
hlt
cltd
jnp
andb
test
xlat
jbe
int3
push
add
inc
mov
pusha
mov
ja
mov
jge
push
out
nop
and
and
sub
mov
popf
jne
stos
add
dec
dec
xchg
adc
loopne
loop
cmp
push
ds
mov
scas
jae
data16
dec
jb
pop
xor
pop
push
pop
push
andb
aam
jae
cmp
xchg
dec
sub
cwtl
push
ljmp
and
pop
scas
adc
mov
clc
bound
xor
popf
outsl
jnp
cmp
stos
xor
rclb
sbb
or
push
dec
cmp
das
adc
push
jne
xchg
jae
inc
dec
push
ljmp
dec
cmp
inc
fmull
into
mov
push
mov
cmc
push
cs
push
cwtl
cmp
mov
into
or
les
popa
cli
push
neg
push
jl
mov
imulb
divb
das
fsubrp
jne
cli
jge
pop
cmp
out
xchg
ss
out
out
mov
dec
je
jo
jae
or
xorb
scas
insb
sbb
test
push
dec
adc
popf
jno
cmp
clc
in
and
bound
mov
xchg
ret
popa
test
sbb
fisubs
or
cmc
ja
bound
xchg
jle
push
outsl
inc
mov
shll
jb
mov
loope
les
adc
xchg
ret
loope
pop
loope
sub
pop
push
in
cs
fidivrs
pop
and
mov
adc
aad
fsubrs
xor
dec
push
sub
jl
mov
add
repnz
jnp
or
pop
pushf
ss
enter
sbb
jp
dec
pop
push
push
cwtl
pushf
pop
lahf
popf
pushf
cwtl
xor
pop
in
in
ss
test
clc
fs
xorl
jg
out
add
js
out
aad
inc
dec
xchg
cmc
mov
mov
mov
add
aam
mov
mov
xchg
fcoms
adc
pop
inc
dec
and
mov
xor
lcall
dec
int
sbbl
orb
mov
fwait
jns
xchg
sbb
adc
rcll
mov
sbb
sub
std
push
mov
jmp
les
cwtl
bound
add
ret
or
paddusb
jecxz
inc
jg
cld
test
push
insb
adc
rcl
fisubl
sub
sub
xor
mov
pop
ds
aad
jle
inc
imul
push
cli
xchg
aam
aaa
mov
pusha
ljmp
mov
mov
sub
mov
xchg
js
push
mov
fsts
inc
std
aaa
dec
mov
out
mov
push
cmp
repz
fs
rolb
test
cmp
filds
mov
jle
out
xlat
pop
pop
shrb
jae,pt
rorb
sub
loope
xchg
xor
jg
fistl
aas
xchg
jecxz
aas
rcll
mov
mov
and
stos
cmc
jns
mov
sar
add
and
pop
cmc
adc
add
in
mov
daa
sahf
incb
jbe
jb
notb
add
push
in
mov
xlat
mov
enter
movsb
cs
xor
hlt
inc
jae
ficomps
lcall
dec
movups
xor
xchg
jbe
gs
leave
cmp
sbbl
xor
adc
add
das
cmpsb
push
cmp
xorb
mov
out
lds
out
icebp
mov
and
xor
in
pop
push
fsub
nop
loopne
mov
and
cld
rcr
sbb
pusha
call
xor
xchg
xchg
sub
and
xlat
push
push
jb
mov
pop
pop
or
add
xchg
and
out
mov
jle
pop
jp
and
dec
fsts
xor
or
adc
adc
cmp
xorb
in
sub
fsubrs
fsubp
test
jl
lret
imul
cwtl
and
pop
out
fnsave
jmp
jle
cmc
frstor
dec
jg
enter
sub
jp
in
out
xor
stc
mov
outsl
js
cltd
jns
dec
fldcw
enter
lock
add
scas
outsb
nop
fcomps
mov
dec
dec
sub
inc
jl
je
mov
cli
adc
lahf
leave
lods
insb
aam
daa
repz
cmc
cmpsb
mov
push
jle
stos
int
cmpsl
ljmp
jb
repnz
es
inc
clc
mov
mov
lods
arpl
push
mov
push
icebp
mov
mov
fisubs
xor
imul
lea
in
aas
sub
xlat
sbb
fstp
imul
enter
lock
or
in
or
inc
sti
or
out
pop
ljmp
shll
adc
sarl
xchg
xor
or
add
mov
sub
in
mov
mov
inc
int
xchg
or
jnp
test
push
fs
dec
lds
cmpl
nop
xchg
rcrl
adc
add
mov
repz
push
cmpsb
pop
jo
pop
es
mov
ror
jle
push
out
xchg
adc
mov
push
pop
imul
xchg
dec
and
jne
fs
push
sbb
dec
mov
cs
push
cwtl
jmp
shlb
cltd
shlb
jp
xor
sub
hlt
mov
xchg
adc
inc
mov
aaa
icebp
add
add
int3
cli
leave
xor
sahf
mov
cmp
xchg
mov
jnp
in
dec
and
dec
test
xchg
es
ljmp
dec
cmp
into
and
dec
in
mulb
fdivrl
inc
push
fidivs
daa
inc
pop
jns
adc
ret
mov
mov
cs
jb
jl
cmp
pop
cmp
mov
xchg
xor
ds
mov
cmp
pop
xchg
aam
mov
idivl
cmp
jp
aas
xchg
push
jmp
pop
cmpsb
inc
shlb
push
lock
not
stos
in
adc
movsb
sbb
cmp
cmpb
add
test
sahf
test
inc
xchg
scas
mov
sbb
mov
or
lods
or
in
xchg
mov
push
loop
mov
aas
bound
push
sbb
lcall
push
dec
sahf
push
adc
jmp
jb
fbld
inc
movsb
pop
xchg
shrl
cmpsb
lock
pop
sub
xor
push
lahf
fbld
dec
ljmp
gs
cmp
xchg
jne
sbb
jbe
addl
sub
or
mov
pop
insb
fs
subl
dec
std
mov
inc
jne
inc
stos
inc
cld
cltd
mov
fwait
or
addr16
mov
push
test
shrb
jecxz
das
jle
call
pop
xchg
sub
mov
pop
into
pop
push
pop
aas
dec
adc
mov
mov
and
xlat
sub
pop
sbb
mov
pop
pop
pop
aas
inc
push
fcom
xchg
inc
mov
cmc
xlat
lock
popf
ss
ja
insb
xor
add
adc
dec
cwtl
scas
jne
rorl
inc
insl
fsubp
cltd
xchg
adc
xor
arpl
test
aaa
mov
nop
sbb
push
rcl
push
rcr
adc
imul
push
cmp
push
push
ljmp
andl
jg
pop
xchg
divl
repz
jl
mov
xor
in
cmp
test
dec
dec
xchg
mov
fsubrs
lahf
and
aad
mov
fiadds
idivb
mov
cmpsl
pop
mov
and
inc
add
fildll
or
outsl
mov
dec
orl
js
or
into
and
jmp
loopne
pop
dec
movsb
andb
pop
rcll
mov
fsubrs
push
add
xor
dec
mov
pop
inc
lods
lock
mov
inc
xchg
ret
and
fmulp
add
add
adc
rorb
mov
jno
pop
xor
insb
xchg
cld
jmp
xchg
jbe
test
test
into
dec
mov
pop
pop
stc
or
rolb
dec
sbb
int3
xlat
push
jl
push
sbb
inc
mov
adc
cmp
or
or
push
sbb
pop
paddd
pop
out
jae
jmp
adc
add
jle
mov
fildl
pop
es
sbb
cli
or
pop
sar
dec
lds
add
jno
stc
mov
or
inc
lret
ss
fwait
or
mov
push
push
decb
jl
xchg
std
je
xlat
enter
icebp
mov
and
out
adc
scas
jb
ficompl
lcall
arpl
xchg
cmpsb
push
pushf
xchg
pop
mov
mov
shll
inc
fisubl
imul
int3
ja
xchg
add
and
sti
xchg
xchg
dec
inc
adc
imul
loopw
jae
inc
add
cmp
mov
xchg
int
jp
in
mov
mov
dec
insb
test
mov
hlt
icebp
pop
cmp
xor
and
xchg
mov
lods
clc
mov
push
nop
adc
mov
jns
push
lock
pop
fidivl
jo
pop
sbb
sahf
es
stc
je
sub
or
fwait
jle
cmp
icebp
out
ss
cmp
sbb
jl
xchg
mov
call
xchg
mov
fs
ljmp
inc
add
imul
cmp
lods
inc
add
in
jnp
lret
or
inc
inc
aam
and
lcall
add
sub
cmc
out
push
xor
cmp
stc
and
mov
jg
adc
mov
sbb
push
pop
sbb
ss
mov
or
add
mov
bound
in
or
adc
pop
add
xchg
and
xor
mov
outsl
mov
shrb
adc
cmpsb
fidivrl
add
icebp
dec
insl
outsl
push
cltd
bound
and
je
outsl
pop
and
cmpsl
push
ljmp
adc
mov
sub
push
sarb
pop
or
sti
movsb
jae
add
pop
out
add
mov
or
aam
sbb
xor
inc
jl
xor
aam
out
dec
mov
xchg
sbb
or
mov
movsl
insl
fiadds
jecxz
lahf
jo
pusha
inc
cwtl
pop
jne
lods
inc
mov
pop
clc
rcrb
push
outsb
push
mov
cltd
psubd
out
xchg
mov
mov
daa
repz
test
cld
clc
or
mov
fmul
dec
jp
orl
pop
add
ret
mov
dec
or
adc
daa
adc
lret
sbb
orb
mov
imul
adc
insb
xor
mov
cmpl
lds
in
push
mov
pop
inc
lock
aas
loopne
outsl
mov
cmp
jae
jp
pop
rclb
ljmp
stc
pop
push
mov
rdtsc
iret
sub
mov
test
ss
into
jg
dec
scas
mov
mov
imull
cld
sub
lea
sub
daa
add
je
iret
inc
dec
mov
pop
or
enter
xchg
add
inc
mov
cld
add
cmp
je
jae
cwtl
das
aad
lcall
pop
ljmp
cmpsb
das
ljmp
sahf
push
add
test
xorb
cmc
xorb
test
push
loope
dec
jl
xchg
jg
into
dec
push
jl
insl
push
repz
ror
mov
fisubrs
out
incl
in
je
mov
cmp
dec
cwtl
fmull
jecxz
and
mov
pop
cmc
jg
shl
push
xchg
cwtl
mov
mov
xor
xchg
cmp
cmp
les
adc
xchg
mov
imul
mov
mov
psadbw
jmp
sub
xor
test
cmp
xchg
test
int
insb
mov
ss
fcoml
cli
mov
fstpt
adc
jns
adc
cmp
cmp
adc
pop
jmp
mov
pop
sub
mov
icebp
dec
push
cld
inc
pop
nop
xchg
in
paddd
fldt
push
or
std
out
sahf
inc
mov
insl
fadds
faddl
mov
popa
out
push
sbb
leave
hlt
mov
ja
add
fwait
jbe
fdivrp
sbb
movsl
lcall
sti
stc
gs
gs
test
xor
mov
push
subb
add
stos
fiaddl
xchg
mov
jnp
jmp
sahf
cmpsb
leave
js
cmp
std
or
roll
sarb
jae
add
stc
addr16
jge,pt
and
aam
or
ficompl
push
clc
adc
mov
inc
stos
std
fpatan
jl
mov
int3
mov
jb
pop
mov
sbb
in
add
mov
ror
leave
mov
bound
loopne
mov
sbb
out
inc
movsl
div
mov
pop
mov
jmp
call
shl
or
call
sbb
inc
inc
add
lcall
mov
call
sub
xchg
mov
jl
or
lds
and
test
mov
hlt
sub
pop
jo
in
xchg
int
cmc
out
leave
add
add
adc
cmp
sub
and
mov
pop
arpl
fcmove
and
int
mov
lahf
cwtl
and
pop
cmp
in
inc
rol
fdivl
js
sub
scas
mov
adc
add
pop
in
dec
mov
std
adc
sub
jge
mov
cmpsl
inc
mov
sbb
pop
enter
inc
int
repz
xor
mov
adc
std
jo
loop
and
clc
out
out
adc
cmp
xor
idivl
inc
stc
xor
gs
popf
and
pop
cmp
inc
push
mov
sub
mov
in
lods
sti
dec
mov
xchg
in
insl
outsb
dec
pop
or
mov
cmp
lds
jo
out
inc
push
sbb
mov
testl
add
mov
pop
lods
int
hlt
repnz
sbb
jae,pn
xor
xchg
mov
cwtl
or
bound
xorl
rcrl
pop
cmpsl
pop
pop
out
pop
ss
fsubl
cmc
ret
jbe
incl
xchg
fldcw
and
xchg
in
aad
pop
xorl
dec
movsb
fbld
add
lcall
mov
dec
or
addr16
aam
jno
fwait
mov
aaa
xchg
stc
jno
sbb
ds
ret
mov
shlb
jne
cld
data16
ret
or
xchg
sbb
mov
shlb
or
jno
sahf
mov
or
lods
xorl
stc
cmpl
lods
sbb
cmp
cld
mov
pushf
or
clc
cmc
jg
lret
sarb
fdivrl
icebp
pop
and
in
stc
loopne
sbb
negl
sbb
mov
scas
add
sbb
stos
mov
cmpsb
shrl
pop
mov
push
dec
sub
mov
daa
cmp
push
in
and
lret
ja
lds
xchg
push
cltd
or
push
outsb
test
sbb
xor
movsl
movsb
std
sbb
in
ret
inc
mov
rolb
pop
sti
inc
shll
cmp
popfw
lret
lods
pop
pop
lods
mov
sub
or
lret
jp
xor
outsb
or
cmpsl
xor
fwait
movsb
mov
scas
fsubrp
in
inc
inc
xchg
lahf
mov
icebp
xor
jae
lahf
aas
into
dec
jmp
fiadds
push
nop
mov
inc
xor
loop
push
jg
mov
loope
cmp
xchg
aam
repnz
push
add
and
cmp
es
xchg
sub
dec
push
jne
xor
add
std
push
in
repnz
and
std
popf
sbb
mov
scas
icebp
mov
pop
add
outsl
div
es
cmove
addr16
push
or
test
pop
jl
pop
loopne
pop
xor
mov
test
into
sarb
ds
mov
pop
mov
mov
xchg
repz
cmc
push
pinsrw
aam
xor
jo
adcl
pop
nop
and
and
lea
mov
insl
pop
xchg
sub
push
loopne
add
adcb
scas
inc
idivb
clc
cld
push
fiadds
mov
rorb
outsl
arpl
jne
and
mov
std
cld
aam
sbb
cmpsb
stos
fnsave
and
cmp
sbbl
mov
pop
cwtl
scas
sub
or
mov
mov
loope
iret
mov
xor
or
stc
sbb
test
clc
rolb
out
lds
cwtl
xchg
frstor
mov
inc
sub
and
ja
pop
mov
jge
adc
out
mov
cli
js
mov
scas
mov
std
xor
mov
adc
dec
mov
sub
iret
xchg
cmpsl
sub
insb
sub
test
and
in
or
push
adc
inc
pop
xchg
nop
jnp
jge
push
pop
xor
dec
ds
dec
and
int3
cmp
ret
popa
out
adc
icebp
rorl
pop
rcrb
push
sbb
lea
sbb
sahf
pop
in
and
add
jb
dec
pop
rcll
mov
xlat
mov
jle
push
js
sbb
cmp
push
and
rcrb
pop
xchg
dec
jg
jp
test
xor
inc
scas
push
popl
outsb
lahf
mov
cwtl
sbb
mov
push
cmp
inc
inc
push
inc
jae
sbb
ljmp
dec
aam
psadbw
addb
loopne
or
mov
mov
icebp
les
ficompl
inc
movsl
inc
loop
shll
nop
ret
xchg
out
mov
aas
cmp
aad
add
dec
fdivr
push
mov
rol
push
js
lcall
ja
sub
addr16
pop
je
lods
loope
loopne
jge
loop
inc
ret
jne
ja
dec
pop
rolb
xor
popa
jbe
in
jb
scas
xor
push
das
cmpb
mov
jne
add
and
or
shlb
xchg
lds
push
cld
cld
push
nop
xchg
dec
mov
jae
xor
out
mov
pop
mov
jo
ret
cwtl
dec
or
pop
or
and
and
enter
pop
pop
jnp
stos
shll
out
mov
xchg
dec
gs
sbbl
ficoml
mov
xor
cmp
lds
jmp
push
outsb
ret
mov
fdivs
sub
mov
mov
fwait
fwait
push
xchg
nop
mov
dec
jo
hlt
imulb
dec
ror
lods
cmp
dec
inc
test
xchg
gs
jb
icebp
inc
push
addr16
dec
je
das
sbb
aaa
or
sub
imul
jns
sbb
incl
push
ljmp
in
jmp
dec
push
push
or
ret
lret
into
sbb
jnp
xlat
ljmp
xor
or
xlat
fiadds
jbe
ds
mov
push
add
dec
push
fdiv
mov
inc
test
jae
sbb
bound
mov
clc
mov
push
add
pusha
ficoml
aas
and
mov
cmp
lahf
pop
test
mov
or
aam
push
lods
push
dec
mov
rolb
inc
mov
or
push
fwait
shr
std
lret
add
xorb
repnz
je
inc
ds
pushf
xor
incl
push
fisttpl
movntq
scas
rol
rcl
push
inc
or
pop
out
mov
rclb
loopne
mov
insb
ret
in
and
fwait
cmpl
popf
scas
rolb
push
mov
xor
sub
add
and
dec
or
dec
test
cwtl
mov
mov
cmp
or
mov
fwait
aad
lods
lcall
out
mov
stc
stc
sti
sub
dec
fucomip
loop
out
pop
addr16
inc
lret
lcall
push
add
jge
xchg
xchg
pushf
push
sahf
dec
push
in
and
pop
mov
or
inc
repz
adc
sahf
jno
mov
test
and
mov
add
or
lock
cmpsb
mov
sbb
repz
fistpl
cmpsl
scas
xchg
add
leave
push
aas
sahf
movsb
dec
jg
ficompl
ss
xor
jle
xor
test
inc
add
mull
adc
lock
jmp
inc
push
jg
in
cmc
adc
pushf
mov
fcmovbe
xor
add
adc
xor
fiadds
inc
mull
out
jb
das
mul
push
outsl
mov
xor
add
add
lock
fwait
jmp
bound
rorl
mov
jmp
lods
jbe
paddd
sbb
cmp
aad
push
outsb
cmpsb
sub
and
pop
repnz
pushf
and
ss
add
push
dec
mov
inc
or
js
scas
test
hlt
mov
movsl
dec
cltd
push
dec
push
xchg
stos
bound
xor
lock
inc
pushf
andl
adc
sub
aaa
and
inc
mov
scas
pop
sub
lcall
or
push
fsubs
inc
add
das
xlat
pusha
scas
cmpsl
add
adc
inc
pop
inc
jb
cmp
cbtw
hlt
dec
mov
mov
adc
lds
mov
aad
add
das
ja
aaa
lret
lods
out
push
inc
dec
adc
ret
out
pop
xor
xor
cmpsl
or
and
inc
dec
packsswb
out
dec
cmp
sub
bnd
mov
mov
inc
push
pop
dec
mov
or
mov
push
mov
cltd
pop
lock
es
jae
mov
out
pop
inc
mov
pushf
dec
pop
jnp
lods
xchg
xor
xor
cld
inc
mov
jbe
mov
lcall
cld
mov
arpl
cmp
loop
pop
sbb
imul
adcb
mov
std
lret
test
outsl
sbb
dec
jle
scas
mov
xlat
lahf
mov
and
cmp
imul
in
shr
push
loope
pusha
jne
pop
insb
notb
and
inc
inc
cmp
es
mov
sub
in
jp
imul
xor
or
add
ds
sbb
mov
hlt
mov
dec
adc
cmp
pop
jg
pop
fwait
setle
xor
and
inc
das
lahf
pop
hlt
cld
xor
ret
and
xor
mov
fimuls
addl
sbb
test
int3
loop
inc
cmp
rclb
ja
fdivp
add
iret
insb
lahf
mov
add
xor
mov
out
pop
stc
daa
xor
fnstsw
xchg
imul
int
sti
mov
pop
fnstsw
ret
push
mov
scas
or
or
cmp
lret
mov
xor
movsb
pop
cmpsb
and
pop
push
ficomps
push
out
dec
pop
xor
xor
push
test
mov
dec
add
cmpsb
push
rcll
les
and
dec
lea
add
mov
push
rorb
es
pop
sub
mov
mov
sbb
iret
imul
clc
sub
add
stos
arpl
adc
adc
xlat
sbb
mov
addr16
int
repnz
xchg
xchg
cmp
fs
inc
int
cli
mov
inc
ds
ja
push
shr
rorl
lds
or
int3
inc
pmulhw
stos
es
xchg
js
sahf
aaa
jp
inc
adc
rolb
inc
jo
or
jbe
mov
scas
ss
xor
ret
cld
sbb
sub
insl
sbb
dec
aam
cmpb
jge
inc
cmp
aas
in
inc
adc
lcallw
popa
cltd
or
cld
mov
xor
inc
mov
jbe
lahf
jno
or
enter
mov
fcmovb
pop
adc
fsub
or
xchg
add
jmp
mov
xor
and
xor
aas
fsts
add
dec
cmpsb
daa
lcall
jmp
repz
lods
add
dec
jne
inc
andb
mov
mov
addr16
fcomps
jnp
sub
and
dec
adc
cld
das
negl
adc
stos
scas
addr16
fmull
test
stos
int3
mov
dec
pusha
jne
adc
sbb
or
cmp
imul
sub
jno
call
pop
and
shll
imul
cmp
jle
inc
push
test
cmp
cli
faddl
add
sbb
jp
xchg
adc
test
mov
sbb
mov
add
movsb
pop
negb
mov
pop
mov
lods
popa
ret
outsb
out
jbe
jle
loopne
ficomps
mov
sbbb
fs
stos
mov
push
jo
in
and
stc
mov
push
mov
lret
add
sbb
sbb
test
mov
inc
popa
jmp
jle
in
ret
add
mulb
cmp
idiv
push
xchg
jb
or
add
repnz
jle
mov
lock
insb
lcall
bound
inc
movsl
cmp
and
aas
lahf
mov
icebp
int3
jle
and
lcall
xor
imul
add
add
inc
mov
out
in
clc
and
mov
inc
pop
add
xchg
addr16
dec
jae
cmp
rcrl
ja
xchg
and
addr16
fldcw
jbe
push
mov
shrl
lahf
inc
call
mov
xchg
pop
in
sbb
inc
add
lret
mov
mov
mov
adc
xchg
pop
stos
sbb
mov
movsb
xor
push
inc
mov
cmpsl
and
xchg
inc
mov
pop
push
call
sub
int3
sahf
test
bound
mov
jl
mov
and
int3
ljmp
mov
mov
dec
xor
add
or
and
pop
sub
lret
andb
lret
xchg
pop
mov
popa
xor
mov
inc
in
fcoml
pusha
icebp
inc
cwtl
sbb
sbb
inc
sub
sub
repnz
jbe
push
pop
ficompl
xchg
gs
xchg
mov
push
lea
and
ret
push
push
pop
popa
pop
and
add
icebp
mov
fwait
adc
or
jmp
jne
sahf
and
cltd
std
inc
mov
or
negb
add
ror
lcall
sub
cli
pop
outsl
ret
shl
pop
and
sub
ljmp
jbe
jo
loopne
clc
movb
int3
idiv
mov
cld
push
dec
test
in
aas
pop
fmuls
lcall
cwtl
mov
test
jbe
jmp
add
xor
sbb
jmp
paddsb
dec
xchg
lods
rorl
cmpsl
cmp
stos
xchg
int3
add
popa
iret
jae
arpl
adc
jmp
pop
sti
or
mov
jmp
lock
int
test
or
enter
insl
mov
enter
fwait
in
int
inc
mov
ds
mov
movsb
pop
ret
sub
repnz
cmp
pop
aas
lcall
int
cltd
cmp
xchg
inc
fisubrs
jge
fwait
inc
test
ljmp
sub
enter
bnd
mov
cmp
testb
dec
bound
cs
pop
pop
mov
cmp
mov
mov
mov
test
loopne
gs
cmp
push
shlb
cmc
jae
loop
sbb
jge
mov
iret
outsb
ret
mov
imul
add
shll
cmpsb
jmp
push
iret
jg
dec
lcall
adc
sub
and
cmp
rcrb
cwtl
lock
cwtl
arpl
dec
lea
lahf
shrb
cmp
in
jne
mov
xlat
pop
imul
adc
arpl
cs
lea
ljmp
sbb
pop
xor
or
loop
pop
add
notl
leave
je
ror
mov
cmp
dec
icebp
fdivrs
sub
int
add
dec
cltd
add
pop
dec
pushw
sub
loop
call
cmp
aaa
push
mov
push
arpl
flds
push
pop
jle
hlt
and
xor
push
mov
jle
or
mov
daa
cli
fs
adc
jp
int3
xchg
inc
gs
xchg
jns
scas
outsb
mov
xor
rorl
fadd
sub
sti
rolb
and
es
xor
scas
or
sbb
nop
xchg
sub
xor
dec
push
shll
sbb
sbb
xchg
adc
pop
push
sarb
mov
popf
push
jp
scas
imul
cwtl
out
mov
lods
imul
fst
lods
jne
mov
icebp
pop
shll
pusha
lret
sub
jmp
or
lock
mov
pusha
rcrb
mov
jge
popf
repz
push
js
xchg
mov
aad
lock
pop
pop
pop
sbb
mov
imul
adc
out
mov
mov
xor
popa
cmp
test
cmp
pop
mov
dec
mov
inc
fs
shll
jle
and
xorl
cmp
insb
div
mov
cmp
jp
sbb
cwtl
enter
push
pusha
outsb
adc
sbb
push
add
test
shlb
inc
adc
je
push
push
pop
ja
sti
in
andl
mov
out
mov
or
iret
xor
sarl
fwait
push
lods
sub
or
iret
mov
fisubl
scas
jle
pop
int
and
aas
xchg
xor
fdivrs
push
push
cltd
push
rol
lods
shlb
stos
mov
js
inc
xor
or
cli
scas
movsl
dec
mov
dec
inc
stc
sahf
sub
pop
negl
pop
pushf
add
and
popf
inc
stc
xor
mov
ja
and
add
dec
leave
dec
pop
scas
arpl
jo
push
nop
arpl
mov
mov
rcll
test
addb
mov
add
mov
push
mov
imul
or
ds
and
cs
rcr
jns
sarb
cltd
mov
hlt
fwait
xor
sbb
cmc
out
mov
fwait
pushf
repnz
add
lock
cli
lcall
dec
loopne
les
adc
sbb
cli
test
testb
inc
hlt
sti
or
sub
stos
pop
xchg
shlb
and
bound
fcmove
daa
cmp
in
and
into
cmp
sbb
pop
pop
lds
fcmovnbe
xchg
xor
mov
out
jns
mov
fwait
cwtl
mov
pop
and
sbb
and
mov
jo,pn
ds
dec
mov
cmp
aam
cmpb
xchg
push
imul
sub
push
stos
mov
rol
sbb
xor
xchg
jecxz
repz
ds
sbb
cmp
push
lods
jns
add
jecxz
push
mov
or
pushf
rcrl
and
adc
xchg
pop
xchg
add
xchg
imul
clc
iret
data16
int
jnp
pop
pop
mov
jnp
pushf
dec
push
shrl
sbb
mov
jbe
mov
mov
aad
ficoms
fistpll
test
imul
sub
adc
fnstsw
pop
int
inc
add
fnsave
aad
jg
jne
jo
adc
stos
fs
dec
jbe
ds
pmuludq
cli
cmp
adc
adc
scas
pop
or
push
repnz
test
xor
stc
test
xchg
hlt
inc
push
std
out
roll
test
popf
shll
cli
adc
push
mov
inc
pusha
or
lret
aad
arpl
mov
into
pop
dec
in
inc
cmpl
insb
repnz
leave
xor
aaa
out
es
gs
xor
fsubs
fs
push
jb
out
and
xchg
cmp
lret
cmc
xchg
mov
dec
stc
fnstenv
jmp
jne
sub
repz
pop
xor
sbb
ja
mov
and
add
lock
cmpsb
sti
repnz
cld
add
mov
cmpsl
fs
jle
cld
int
aaa
pop
adc
mov
les
mov
pop
das
pop
inc
mov
rcr
push
cmp
and
js
inc
jmp
fwait
cmp
mov
out
mov
lret
clc
mov
xchg
popa
gs
jge
pop
pop
repz
sbbb
imul
adc
mov
out
add
xorb
std
out
or
dec
in
pop
mov
cltd
jno
push
fistl
jp
sahf
gs
add
addr16
mov
sub
in
jb
add
iret
jge
mov
mov
lret
xchg
repnz
in
loop
and
cmpsl
sahf
cmpsb
pop
mov
or
aam
jge
fsubp
rcr
or
xchg
stos
adc
pop
push
clc
insl
sti
dec
test
xor
xchg
fwait
cmp
push
arpl
mov
gs
sbb
or
stc
or
and
xor
push
ss
jecxz
adc
pop
jle
mov
loope
shrl
pop
outsl
shlb
or
adc
push
xchg
pop
jns
mov
or
loopne
jne
mov
outsb
jno
mov
inc
push
lds
out
add
divb
xchg
ss
jo
mov
push
push
call
cmp
or
mov
xchg
push
jo
push
lock
in
inc
sub
out
sarb
test
pop
mov
adc
out
je
pop
icebp
xchg
xor
xor
or
push
xchg
xor
xor
mov
pusha
cmp
and
daa
in
xchg
jmp
mov
mov
mov
and
fdivl
ficoml
dec
stos
jbe
xchg
test
or
mulb
jl
cmp
and
bound
jmp
sub
ret
mov
xchg
psraw
es
mov
out
lahf
shll
js
movsb
test
or
in
cmpsb
and
mov
add
add
lock
pusha
mov
dec
dec
pushf
and
mov
std
int3
popa
push
scas
iret
xchg
and
xchg
shrb
xchg
mov
sahf
cmpsl
push
mov
push
adc
arpl
pop
aad
fsub
in
mov
addr16
jno
idivb
fcoml
enter
xor
pushf
xor
int
cmp
xchg
adc
add
mov
mov
push
dec
in
mov
lea
scas
mov
and
inc
xchg
rcll
jbe
inc
adc
or
test
insl
cld
dec
fidivrl
push
fwait
arpl
add
lret
dec
jl
ljmp
sub
pop
iret
test
and
clc
sbb
movsl
pop
mov
sahf
test
jecxz
xchg
mov
mov
test
jg
xchg
pusha
xchg
int
das
sti
add
pop
dec
dec
xchg
jae
scas
bound
cmp
cld
mov
jo
aam
xlat
push
push
dec
or
fs
negb
push
inc
fimuls
icebp
sbb
and
lock
dec
into
dec
out
pusha
xchg
dec
add
inc
out
leave
inc
cs
outsl
and
icebp
sub
mov
pop
jno
les
aaa
outsb
dec
mov
aam
inc
mov
ror
pop
mov
dec
jo
adc
push
xchg
mov
push
outsb
loopne
mov
mov
push
pop
push
inc
xor
icebp
add
stos
mov
pop
clc
insl
movsb
mov
pop
lock
cmc
dec
mov
leave
mov
das
aam
xor
push
mov
lods
mov
popa
bound
movl
nop
dec
movsl
inc
test
push
push
cmp
mov
cli
fidivrs
xor
xchg
push
aas
add
pop
or
xchg
fistps
fs
arpl
out
aas
xchg
pop
loop
xchg
fs
ds
adc
cld
xchg
sbb
ret
adc
aad
sbb
or
outsb
outsl
ljmp
inc
lods
sub
mov
or
outsb
std
and
test
xchg
aad
jno
sbb
or
inc
arpl
data16
add
mov
pop
jecxz
xchg
pop
jp
push
jg
cmp
mov
push
xchg
roll
fwait
and
insl
push
addr16
push
fucomip
les
cmp
movsb
push
push
mov
in
aam
push
cmp
push
dec
jbe
and
or
test
aam
dec
pop
cltd
fisttpll
mov
add
or
inc
outsl
out
push
imul
je
add
movsl
mov
adc
inc
sbb
cmpb
jle
inc
sahf
mov
fdivr
call
push
jge
fwait
loopne
mov
inc
aas
cltd
pop
fsubs
cmp
ret
jmp
iret
inc
mov
jns
addr16
sbb
push
dec
or
shlb
fwait
mov
in
pusha
bound
jae
fbstp
and
les
out
mov
imul
inc
mov
jmp
pop
imul
pop
cmp
cmp
mov
andb
fiaddl
es
popf
jb
aas
jnp
rorb
sub
pusha
dec
xor
mov
mov
in
xor
dec
jg
fisubs
cmp
cmpsb
test
stc
enter
in
jb
addr16
cmp
push
and
stos
push
pop
es
pushf
xchg
cmp
pop
ror
in
xchg
jne
lods
int
mov
dec
mov
sbb
or
fs
lret
sub
aas
popf
or
or
cwtl
xchg
fst
ss
jmp
mov
cmp
dec
add
mov
lds
decb
lret
fldl
sub
push
xchg
rolb
sbb
mov
jns
mov
ljmp
cmp
popf
jno
or
jo
movsl
test
cmp
fldl
aaa
adc
dec
xlat
into
push
xorl
fwait
out
lahf
mov
xchg
push
jne
loopne
pusha
xchg
imul
pop
inc
add
xor
std
or
aaa
jne
pop
pop
adc
pusha
test
movsl
out
and
cli
jbe
sub
in
sbb
dec
imul
jle
iret
mov
jo
cltd
cmp
ss
icebp
lea
mov
mov
aaa
sub
sbb
jl
cmp
pop
adc
inc
bound
add
and
nop
in
adc
sub
mov
mov
cmp
je
xchg
mov
mov
push
push
ja
cmpsb
add
adc
out
sbb
jnp
xchg
mov
out
aad
popa
sti
sarb
imul
add
sbb
leave
lea
enter
adcb
lock
mov
nop
mov
iret
jnp
js
push
popf
ja
pop
pop
iret
sub
mov
cwtl
aad
test
mov
dec
add
sbb
mov
orb
sbb
mov
cmc
arpl
aam
inc
sub
addr16
repz
pusha
add
jae
and
sahf
pop
dec
adc
push
iret
lds
inc
sahf
mov
insb
push
call
pop
sub
mov
pushf
fldt
mov
dec
jae
addr16
cltd
cmpsb
mov
jge
adc
or
in
pop
sti
mov
cmp
add
shll
popf
mov
mov
cmp
mov
std
add
pusha
in
xor
mov
mov
jns
adc
add
push
pop
shlb
sbb
and
test
cmp
xor
mov
xor
out
lcall
addr16
cmp
daa
xchg
nop
sbb
jnp
inc
inc
lcall
jb
imul
sti
stc
sbb
pop
outsb
sub
imul
xchg
or
dec
stos
mov
stos
cmp
xor
pop
sub
inc
mov
cmp
or
notb
jnp
cmp
jecxz
xchg
imul
notl
push
arpl
pushl
pusha
int
shrl
dec
in
adc
jle
sub
xor
fidivrl
inc
daa
jg
scas
stc
sbb
movsb
adc
adc
cmp
ret
loop
sub
repz
scas
push
lahf
std
ds
lret
andb
fcoml
push
mov
fcmove
clc
inc
nop
mov
lock
xor
mov
mov
popf
jmp
or
std
fimull
xchg
jecxz
cmc
jb
sarb
test
loop
adc
into
pop
jb
pop
cmc
sub
popf
jecxz
pop
add
stc
or
repz
add
lret
add
sbb
not
inc
std
cmp
inc
jmp
out
ss
xlat
loope
nop
fwait
xor
pop
es
or
lcall
scas
adc
fildl
test
cmpsl
nop
mov
std
int3
inc
test
xor
mov
fld
add
xlat
sbb
xchg
lods
call
adc
dec
adc
dec
dec
jg,pn
dec
test
shl
xchg
pushf
jo
cmp
push
pop
jmp
sub
scas
mov
mov
out
sbb
cli
test
mov
mov
xchg
shrl
cmc
cmpsl
cmp
mov
sub
xor
xor
mov
es
cmp
clc
loope
in
in
inc
mov
cmc
test
addr16
jno
mov
movsl
pop
pop
stos
mov
mov
aad
push
cmpsb
mov
pop
jo
sbb
add
dec
pop
dec
push
js
mov
mov
sbb
data16
fnstsw
cs
mov
sti
int
in
mov
rorl
out
xor
mov
leave
pop
push
and
mov
ret
stos
pop
rcr
insl
jle
inc
add
add
enter
lret
cmp
mov
repnz
push
arpl
aam
aad
mov
out
aaa
jb
adc
out
and
lds
lcall
bnd
rcl
pop
pop
shll
movsb
mov
inc
and
jae
cltd
cmpsl
add
adc
cmp
push
sub
clc
ret
dec
cmc
mov
call
or
push
movsl
sub
xchg
nop
fdivl
xorl
jmp
dec
mov
cmp
repnz
mov
test
or
inc
pop
sub
lret
test
mov
xchg
sbb
in
shrb
sbb
std
pop
mov
scas
mov
scas
mov
pop
ficompl
ljmp
pop
xchg
dec
mov
sbb
xor
mov
inc
pop
xor
mov
int
in
aad
bound
rcll
sbb
push
sub
lods
jecxz
stos
pusha
or
in
add
pop
jg
js
clc
lock
cwtl
das
add
sahf
mov
jo
xchg
dec
imul
sub
in
push
notl
addb
sbbl
sbb
cwtl
adc
pop
push
loope
sahf
orl
jae,pt
dec
out
cmp
and
cld
push
xchg
push
iret
shll
xlat
cs
int
cmpb
xchg
aas
inc
xchg
lcall
rcrb
ror
pop
roll
mov
cmp
lods
add
hlt
mov
decb
mov
sub
push
mov
dec
hlt
test
cltd
mov
out
loope
aad
sbb
add
ret
ljmp
popf
jb
fincstp
inc
rorb
out
jmp
rcr
xchg
sub
sub
les
mov
mov
pop
mov
sub
ja
stos
cmp
jmp
sub
or
lds
pop
cli
adc
fstpl
cmp
out
mov
mov
imul
arpl
mov
add
fsubl
pop
mov
pop
movsl
jp
and
or
and
mov
popa
fsubr
repnz
cmp
cmp
jle
pop
xchg
jl
jb
pop
movsl
fcomip
adc
dec
inc
sbb
lds
mov
xchg
data16
jo
stc
mov
cli
jg
ret
jle
arpl
sbb
add
sbb
or
jl
test
movsl
or
xchg
lcall
out
xchg
lcall
insl
pop
nop
icebp
dec
jl
test
data16
or
sbb
mov
test
into
out
push
mov
cmp
pop
mov
test
dec
mov
add
xchg
jne
add
stos
mov
idivb
cmp
mov
shl
incb
xchg
mov
out
enter
scas
mov
je
fsubrl
sti
aaa
cmc
sub
mov
mov
loope
pop
dec
push
sub
ror
jl
pushf
fiadds
cmpsb
out
lods
sti
pop
push
push
aam
stos
dec
jge
into
inc
push
addr16
in
daa
pop
dec
cmp
in
jnp
jo
dec
cld
mov
xchg
adc
push
xor
movntq
sahf
inc
push
inc
int
icebp
mov
dec
inc
and
rcrl
out
and
sub
sub
adc
in
cmpsl
out
push
cli
in
sarb
sub
dec
mov
movsb
mov
xchg
xchg
mov
call
mov
shlb
inc
test
pop
fwait
cltd
inc
sbb
int
xchg
dec
xor
sar
inc
xchg
adc
and
add
xchg
sbb
out
arpl
js
std
mov
loop
test
pop
sahf
pop
cmp
pop
xchg
addr16
mov
out
jnp
or
adc
lods
sahf
and
scas
add
cmpsl
fmull
cmp
mov
inc
sub
ret
das
js
adc
in
jmp
sub
insb
and
pop
pop
inc
cmp
in
repz
jg
and
mov
getsec
lret
sarb
adc
sahf
sbb
lret
jle
ja
or
mov
fwait
movsl
pop
adc
cmp
push
mov
xlat
add
pop
out
aam
xchg
xchg
cmc
sub
ss
pop
mov
add
jae
pop
js
lcall
into
jl
das
lret
cmc
pop
xchg
hlt
gs
and
leave
enter
cltd
mov
mov
lods
out
aam
xchg
push
loopne
push
and
adcb
pop
cmp
jmp
and
pop
shll
test
mov
dec
or
jno
sbb
mov
lea
out
lcall
movsb
inc
in
bound
or
aas
jp
xor
bound
xchg
inc
add
sub
and
pop
dec
imul
jbe
push
mov
aam
mov
in
push
aad
scas
or
fsub
mov
imul
loope
xchg
and
fs
enter
mov
mov
xor
adc
inc
mov
sbb
adc
into
cmpsb
fstp
pop
push
fimuls
paddq
add
add
pop
bound
inc
lahf
ret
jecxz
push
xchg
mov
fisttps
data16
xchg
adc
pop
add
sbb
hlt
and
fdivrp
js
or
shlb
andl
jl
leave
pushf
ds
push
rcll
mov
pop
or
push
sbb
add
imul
xchg
jle
cmp
push
sub
adc
pop
popf
xlat
jmp
mov
pop
ljmp
mov
out
das
sbb
and
mov
fxch
int
mov
pushl
sbb
or
pop
mov
xchg
int
ficoms
lods
ficompl
cmpsb
scas
mov
lods
mov
mov
push
jecxz
or
xlat
or
pop
ficoml
out
lock
dec
aad
xlat
aaa
mov
xor
mov
xchg
and
sub
sbb
xor
adc
pop
mov
or
out
inc
int
and
or
pusha
jne
mov
adcl
out
cmpb
out
sbb
aad
cmc
loop
jno
out
push
pop
or
aaa
push
test
cmpsb
xchg
mov
inc
test
push
lret
dec
mov
xchg
pop
cmc
or
pop
pop
mov
and
lea
jp
cmp
sbb
cwtl
into
dec
lret
dec
sub
adc
nop
and
inc
daa
adc
xchg
out
cs
int
inc
sbb
rol
jg
popl
add
stc
test
adc
mov
mov
test
fs
leave
mov
cmp
inc
mov
inc
push
pop
lds
mov
jno
sbb
sbb
into
cwtl
cmc
arpl
pushf
cmpsb
xor
xchg
clc
jg
dec
movsl
push
sub
shlb
enter
call
cmc
jbe
call
dec
add
mov
outsl
ljmp
mov
inc
sbb
ja
dec
dec
cmp
and
adc
cmp
int
fs
pop
sbbl
sbb
add
pushf
xchg
popa
cmc
adc
aam
mov
sbb
fstpt
mov
add
mov
xor
mov
sbb
sarb
jns
mov
fisubs
jae
stos
pop
or
mov
mov
test
push
jp
aaa
pop
xchg
adc
ja
pslld
xor
push
lods
sub
xor
jp
mov
lds
subl
nop
mov
adc
mov
das
test
or
jg
cs
insl
xchg
and
ret
fdivr
adc
push
add
xchg
adc
mov
add
stos
push
bnd
dec
shrb
add
imul
in
insb
test
sbb
mov
lds
test
into
add
and
mov
xchg
in
fisttpl
lods
add
movsl
sbb
in
fwait
mov
fidivs
jne
stos
in
adc
jmp
pop
sub
outsb
aaa
aaa
jb
outsl
arpl
scas
lret
lret
imul
pop
add
addr16
subl
sti
loope
cmp
mov
pop
jmp
and
and
push
in
lea
lret
test
inc
ds
pop
bnd
icebp
jg
add
xor
jmp
clc
fidivl
adc
je
cmp
repz
mov
mov
jns
jbe
pop
mov
or
mov
sbb
inc
loop
jmp
pop
pop
or
mov
push
mov
daa
mov
and
idiv
mov
loopne
and
mov
out
mov
jle
mov
out
and
ret
mov
push
pop
jnp
push
xor
pop
negl
scas
xor
pushf
cmp
xor
ja
inc
mov
dec
arpl
iret
pop
sbb
dec
std
popf
inc
push
cld
repnz
sbb
mov
sbb
aam
dec
testl
inc
and
dec
xor
adc
fs
inc
push
lds
sbb
sbb
cmc
inc
lahf
ds
dec
int3
dec
jle
jl
mov
ret
mov
fwait
xor
mov
mov
out
es
inc
aam
jl
mov
mov
push
mov
cs
stos
and
cmp
sbb
dec
push
adc
xor
cmpb
adc
dec
sbb
insl
movsl
scas
and
dec
jbe
je
cltd
addb
orb
add
add
iret
out
bound
adc
cltd
push
xchg
jae
test
mov
lcall
test
and
mov
inc
pandn
jmp
sub
sub
dec
rcr
xchg
sub
and
fisttpll
out
inc
or
inc
in
loopne
pop
lods
xor
movsb
lods
xor
jle
out
xlat
jge
inc
enter
aas
and
adc
jmp
out
adcl
pop
les
movsl
mov
popa
pushf
inc
push
cmc
inc
mov
push
pop
inc
dec
test
dec
lock
fsubr
ret
add
mov
mov
scas
xlat
cmpsb
rorl
or
enter
shrb
xor
and
in
subb
pop
pop
add
push
xor
jnp
inc
jns
mov
fcoms
popa
sbb
mov
xchg
add
outsb
pop
jnp
pop
es
out
sbb
loope
and
mov
loop
pop
sarb
adc
xchg
sub
jmp
das
dec
in
aam
data16
insl
test
popf
mov
fmul
dec
adc
out
mov
cmp
adc
pop
push
js
fsubrl
loope
sub
push
jb
cmp
jnp
sbb
add
ficompl
int3
cmp
leave
xchg
inc
dec
insb
test
stos
adc
cmpsl
sbb
stos
push
mov
test
sub
jne
rorb
mov
movsb
xchg
sbb
xchg
lret
out
into
nop
cmp
mov
xchg
xchg
dec
lea
ds
sbb
cltd
iret
movsb
xchg
cwtl
adc
mov
int
mov
sti
leave
in
jns
sbb
cmp
push
outsb
jecxz
fcomps
popa
push
outsb
out
add
int3
cmpsb
jbe
push
or
mov
push
or
xchg
mov
sbb
call
fs
rcr
push
mov
mov
iret
fucomp
mov
xor
loop
dec
jl
cltd
push
pusha
imul
es
pop
out
mov
pop
jle
cmp
push
dec
push
xchg
add
cmp
aaa
outsl
mov
int3
mov
cmp
xchg
jp
jmp
jge
fwait
shlb
hlt
jns
lret
hlt
addr16
pop
and
push
jge
mov
clc
cwtl
jmp
orl
cmpsb
daa
xor
pop
jmp
or
std
divl
add
imul
popa
bound
pushf
into
jp
das
or
mov
xor
je
insl
js
mov
push
push
orl
mov
sbb
pop
out
mov
xchg
push
lcall
loopne
push
fmuls
push
adc
ljmp
call
adc
ja
ss
pop
fcomip
adc
fsubrl
pop
mull
pop
dec
jmp
or
imul
out
in
adc
shrb
loop
mov
add
mov
mov
out
pop
jae
data16
xchg
sbb
mov
sub
sbb
sub
icebp
jecxz
hlt
pop
or
add
pop
jmp
adc
xor
dec
add
pop
rorb
and
aam
mov
mov
loop
shl
movsl
push
lret
ja
je
jno
sti
sbb
lock
adc
cmp
push
sub
xor
lcall
inc
mov
das
xchg
adc
mov
jae
mov
pop
xchg
xchg
push
xor
cli
cltd
pop
adc
fs
nop
aaa
sub
mov
add
cmpsb
nop
imul
mov
adc
int3
and
add
sarl
cld
sbb
mov
xchg
xchg
sbb
cli
cmp
xor
push
hlt
mov
stos
pop
and
popa
outsl
xchg
lods
push
sarb
insl
fdivrl
insb
rorl
pusha
xchg
or
test
or
xor
fwait
das
rorb
cwtl
lea
out
stc
cmp
orb
shlb
sub
xchg
or
push
jne
cmp
ret
add
jb
cmp
mov
mov
andb
cmp
call
mov
and
xchg
int
add
mov
sbb
cwtl
sti
jne
repnz
imul
ret
jge
push
adc
xchg
sub
stos
xor
ret
mov
xor
cmp
xor
mov
sbb
int3
ds
shll
shlb
mov
out
call
add
push
push
jo
push
ss
test
jmp
push
push
add
ds
jecxz
fnstenv
cld
push
rorl
sbb
push
das
push
ss
ret
dec
xorb
loopne
fistps
sbb
clc
sahf
into
in
lahf
test
aas
decb
notl
daa
and
inc
and
aas
out
jmp
push
scas
jg
inc
nop
add
mov
stos
or
cmp
mov
push
andl
inc
add
jecxz
clc
add
jge
xchg
inc
xchg
fildll
and
push
das
notl
pop
xlat
cmpl
jg
pop
xchg
fsts
ja
in
add
or
test
insb
loopne
pop
insb
fbld
mov
mov
mov
jnp
clc
cmp
dec
ret
ljmp
dec
sub
loopne
jae
lea
jae
bound
jo
bound
ljmp
dec
test
aas
in
jecxz
cmp
jl
mov
lds
nop
push
std
mov
test
push
sbb
sub
push
stos
call
divl
push
fbld
mov
add
lret
aad
cs
or
mov
test
mov
mov
ficoml
jmp
imul
jmp
repz
inc
pop
loop
push
add
mov
dec
rcrl
cmp
mov
lods
ss
addr16
imul
pop
ret
shrl
ss
mov
mov
inc
popf
xor
xchg
jns
cmp
push
xchg
lcall
in
test
mov
push
mov
cwtl
lcall
cmp
lods
andl
or
push
enter
clc
mov
sbb
ret
jnp
loope
xchg
lods
test
lea
test
xchg
sub
rolb
mov
mov
xorb
jb
cmpsl
les
nop
outsb
inc
adc
and
inc
add
repnz
pop
mov
rcrb
in
and
jecxz
or
and
dec
inc
js
jno
fildll
sub
add
test
mov
loopne
fwait
iret
movsl
xor
jecxz
jg
inc
mov
or
loope
xor
mov
and
mov
mov
xor
xor
ss
mov
pop
xor
and
rcll
jmp
cmp
ja
stos
xchg
loopne
stos
jle
psubsw
push
sub
jne
dec
sahf
cmp
cmpsb
pop
decl
and
pop
out
mov
lds
movsl
add
enter
pop
sarl
add
jb
xchg
test
rcl
mov
roll
lret
ret
adc
inc
lcall
pop
xchg
cltd
xchg
cltd
stc
mov
in
dec
addr16
dec
call
inc
les
or
lock
or
das
pop
insb
push
mov
sahf
out
lcall
in
mov
pop
out
sub
push
pop
lods
sbb
out
aaa
adc
rol
mov
std
xchg
rclb
movl
iret
cmp
xchg
adc
xchg
pop
ljmp
mov
cld
xchg
sbb
mov
scas
add
add
cmpb
or
inc
cwtl
leave
addr16
pop
mov
inc
mov
sub
jnp
sbb
xor
bound
mov
add
cmpl
inc
inc
push
push
pop
sbb
cmp
mov
js
lahf
insl
cmc
dec
movsb
sbb
fstp
out
lea
pop
loopne
sub
xor
clc
fwait
bound
jo
cwtl
iret
sub
outsl
add
bound
sbb
or
sbb
fsubrs
lea
cmpsl
pop
pusha
jne
adc
mov
mov
cltd
out
xchg
mov
int
ret
loopne
test
cmp
jbe
jne
dec
fisttpll
jae
pop
inc
or
js
xor
scas
out
cwtl
add
fnsave
adc
test
mov
out
or
fsubl
pop
add
sbb
lcall
jecxz
jp
lds
dec
push
pop
mov
fs
int3
cmpsl
imul
xlat
bound
cmpsb
jecxz
ds
loope
pop
adc
in
xchg
jg
sbb
stos
fisubs
jns
cmp
jg
inc
jb
and
jg
inc
mov
push
subps
xchg
fimull
jae
shlb
loop
mov
cmp
and
lret
and
adc
test
mov
fsubrs
push
xor
popa
inc
popf
mov
mov
or
cli
pop
pusha
jnp
loop
xchg
inc
dec
scas
out
fistl
fwait
mov
enter
mov
sbb
pop
adc
mov
lret
push
push
pop
jl
mov
mov
or
lcall
inc
stc
rolb
jnp
pop
test
lods
jns
shrd
scas
lods
mov
xchg
adc
lea
sbb
mov
orb
push
push
dec
shlb
arpl
movb
or
cld
cmp
xchg
add
cmp
test
loopne
fs
dec
je
cmpsl
pop
adcb
mov
cmpxchg
test
cmpsl
xorb
mov
lods
bound
aad
addr16
mov
sahf
sarl
xchg
sarl
sub
scas
ljmp
mov
adc
dec
mov
pop
aad
enter
out
jge
test
ficompl
in
push
cmpsl
mov
repnz
lods
and
dec
mov
jmp
in
sbb
dec
sub
scas
pushl
fdivrs
add
sbb
inc
add
fisubl
arpl
in
movsl
push
fs
lods
loope
xchg
adc
ret
cs
pushf
out
fidivrl
cltd
lds
ret
shlb
outsb
addr16
negb
stos
je
and
pop
xchg
rcll
loope
pop
or
push
insb
and
mov
mov
pop
shl
or
and
dec
sub
lcall
test
jmp
mov
push
stc
out
xor
in
test
and
mov
mov
xor
dec
jnp
mov
cmp
insl
sub
and
int3
pusha
xor
mov
pusha
push
insb
popa
jle
xor
jb
push
mov
fs
push
or
push
push
mov
pop
lock
enter
add
pop
aad
pop
daa
jns
or
sbb
js
enter
loop
sahf
test
pop
test
in
mov
outsb
inc
and
les
js
cltd
adc
test
fs
lret
repz
sub
cs
outsl
xchg
cmp
sahf
add
divb
jne
fadds
mov
lret
imul
aas
cmp
adc
push
push
push
filds
pop
cli
push
adc
and
aam
gs
xchg
cmp
inc
imul
mov
pop
adc
ret
inc
xorl
pop
lcall
sbb
sbb
ret
cmpxchg
loopne
js
mov
cmpb
jecxz
push
jbe
lods
push
sti
clc
out
fbld
pushf
clc
rorb
cmpb
clc
pop
jle
sbb
and
add
jmp
clc
nop
mov
out
lcall
sbb
inc
sbb
rcll
in
adc
mov
mov
flds
xor
out
out
inc
jns
lret
mov
loopne
adc
ja
fcoms
xchg
cmp
xchg
sti
lret
adc
push
sub
mov
es
out
xor
pop
push
pop
mov
aaa
es
push
mov
arpl
sbb
add
js
adc
test
dec
mov
xchg
ret
xchg
dec
push
adc
mov
xchg
cwtl
movsl
addr16
mov
test
scas
jle
mov
xchg
cs
popa
inc
dec
aaa
xor
aad
dec
add
sar
jl
xchg
imull
rorb
lcall
icebp
add
pop
ret
inc
lret
pop
mov
dec
add
outsl
jg
xor
sahf
dec
lods
ljmp
lcall
mov
pushf
aam
popf
inc
rorb
ss
test
mov
sub
cmp
mov
in
cwtl
push
mov
jg
mov
sbb
dec
stc
sbb
pop
and
cmc
sti
leave
in
xor
fwait
popf
mov
xchg
dec
sar
sbb
sti
ret
pop
rorl
aaa
xchg
rcrb
std
fdivrl
insb
lea
outsb
jecxz
mov
shlb
add
dec
leave
cmc
pop
cmp
movsl
mov
or
dec
test
gs
mov
orl
xor
fs
out
cltd
test
cmpsb
js
cmp
popf
jae
jne
pop
jb
pop
push
pop
int
cmpsl
notl
xor
fs
and
test
rol
jmp
std
decb
movsl
sub
out
popf
mov
pminsw
and
js
decl
mov
add
out
repnz
inc
mov
das
and
push
mov
xchg
sti
fiaddl
jno
jmp
jge
das
nop
or
pop
xchg
mov
add
roll
ljmp
pop
and
xchg
pusha
sbb
lods
ljmp
ror
clc
test
sub
js
shl
scas
push
sbb
xor
sbb
dec
aas
out
aaa
dec
cmp
gs
imul
outsl
push
jb
dec
fistpl
les
mov
subb
inc
sbb
repz
subb
arpl
fiaddl
xacquire
sub
fdivrs
xorl
stc
adc
fidivrl
addl
xchg
push
imul
or
sub
xchg
xor
and
jge
xchg
sub
push
stos
stos
or
sahf
adc
adc
ds
fnstenv
push
scas
xor
out
ja
insl
sub
ss
push
sub
mov
mov
fldenv
lds
lret
mov
cli
aam
vsubpd
repz
jae
sbb
xchg
pop
mov
add
or
adc
sar
adc
negl
sbb
imul
jge
sbb
cmp
in
sti
push
jp
xchg
xchg
mov
adc
and
xlat
pop
roll
fistps
sub
movsl
sti
push
cmp
nop
arpl
pop
xchg
loopne
in
mov
cmp
sahf
aad
les
iret
loop
mov
cs
mov
loope
into
call
repz
cmp
mov
push
hlt
push
mov
rcr
aaa
dec
jno
in
sarb
jg
mov
push
in
dec
out
cwtl
cmp
into
or
test
dec
mov
fstps
pop
test
shrb
mov
ror
fiaddl
push
imul
push
fbld
jns
xchg
push
bsr
dec
push
lret
fcomps
mov
bound
sbb
and
add
mov
in
ljmp
sub
test
mov
push
push
ret
setp
out
push
push
push
inc
and
push
cs
aam
mov
sub
pop
orl
mov
ret
sub
pop
in
fdivp
adc
jge
mov
adc
repz
mov
iret
push
add
adc
xor
sarl
push
sti
inc
jbe
loop
mov
out
inc
inc
out
loope
or
sbb
adc
setns
test
das
incl
pop
mov
mov
test
mov
data16
push
xchg
jb
scas
sub
push
adc
or
and
scas
xchg
jb
aaa
dec
jmp
jo
out
sahf
xchg
adc
jno
data16
fcomip
cmc
fists
sub
lahf
push
dec
stos
or
jecxz
cwtl
rcl
add
arpl
xchg
cmc
inc
xlat
lahf
cmpsb
xchg
into
xchg
scas
cmp
cmp
repnz
dec
lahf
les
fidivs
or
bound
adc
inc
lret
aam
cmp
aam
lds
into
mov
test
bound
insl
jl
add
pop
stos
jo
dec
xor
mov
sub
adc
scas
out
in
cmp
mov
push
cmp
push
push
inc
arpl
sbb
push
in
cmp
movsb
inc
push
aam
mov
outsb
imul
jp
inc
mov
and
mov
pop
push
or
notb
imul
xchg
stos
cwtl
or
inc
xchg
inc
lcall
push
int3
mov
mov
stc
jp
sbb
cs
mov
and
jecxz
xor
repnz
test
push
jle
aam
inc
add
sahf
loope
outsl
push
cmp
pop
iret
out
addb
xchg
xchg
push
aam
mov
rep
out
orl
add
sbb
sbb
sbb
cld
mov
xchg
sub
cmpsb
testb
push
add
xchg
ljmp
adc
ret
loopne
and
pop
test
jg
sub
pushf
mov
insb
into
mov
aad
pushf
stos
and
xor
jp
inc
aaa
mov
lahf
push
push
iret
mov
pop
cmp
mov
push
addb
mov
sbb
into
or
sbb
xchg
xchg
dec
mov
lcall
lcall
sti
or
int
shlb
pushf
scas
mov
xor
loop
mov
cmp
add
in
ss
mov
jno,pn
js
dec
xchg
xor
movsl
push
adc
jmp
or
jge
addr16
fcmovnu
sub
mov
popf
adc
inc
dec
cld
jmp
arpl
sbb
push
das
stos
das
repnz
xchg
rol
call
mov
sub
test
lods
mov
mov
mov
loope
sub
and
inc
mov
mov
imul
lock
lret
cmc
data16
cwtl
adc
and
and
jmp
lahf
inc
out
cmpl
sti
pop
std
mov
sub
pusha
clc
addb
push
cmc
adc
mov
xchg
pop
pop
add
cwtl
call
iret
test
jns
push
mov
sub
ficoml
test
add
shl
and
mov
mov
popf
mov
mov
stc
les
popa
mov
fwait
rcrl
lods
adc
jmp
inc
sbb
pop
fs
pop
jne
jl
sub
push
xchg
inc
dec
fcoms
mov
pop
sub
inc
jg
jb
push
imul
sbb
aas
shr
dec
jmp
mov
jbe
add
cmpsb
inc
cmpsb
fwait
push
adc
call
mov
in
es
cmc
orl
lret
sub
stos
shl
push
or
stos
xlat
test
mov
cmpb
gs
int3
je
mov
sbb
or
data16
out
call
and
std
jbe
test
mov
notb
stos
les
xor
mov
mov
mov
bound
test
jmp
xor
and
xor
cmp
mov
les
cmpsl
sub
repz
js
add
sbb
mov
xchg
fwait
std
cmp
mov
hlt
sarb
in
enter
test
mov
cltd
or
sbb
dec
jnp
mov
addr16
and
fdivrl
push
lds
clc
cmpsl
dec
test
mov
and
mov
jb
cs
imul
xor
inc
fidivrs
scas
jo
push
dec
push
aaa
jmp
js
cmp
sahf
mov
lret
imul
jp
jb
jns
rolb
in
andps
xor
clc
pop
cmp
cmp
mov
rol
mov
push
insb
and
push
and
mov
jae
mov
cs
mov
sub
mov
testl
arpl
or
cmp
ss
pop
lcall
adc
out
mov
dec
xor
iret
mov
pop
es
sbb
mov
mov
or
daa
dec
movl
mov
add
fistl
jmp
pop
cmp
jnp
mov
cmc
loope
jecxz
orl
aam
push
jecxz
push
loop
sub
sub
cs
stos
aad
jnp
in
pop
icebp
mov
cltd
mov
stc
lods
shlb
lahf
inc
dec
ret
dec
cltd
pop
ret
xor
mov
pushf
sub
sbb
repnz
hlt
fst
stos
push
cmpsb
adc
push
adc
mov
insb
inc
add
add
jg
les
cltd
popf
ret
jle
jb
cmpsl
mov
or
inc
dec
mov
jne
pop
jnp
inc
inc
jns
xchg
stos
xchg
rcrb
mov
xlat
rcrb
fldl
sub
fidivrl
popf
sbb
scas
pop
sbb
dec
insl
or
cmp
outsl
inc
mov
in
cmp
sub
pushf
fsubr
cmc
sub
xchg
dec
fcoms
pop
je
cld
xor
pop
cmpsl
loop
mov
out
cmp
clc
inc
imul
testb
and
push
xchg
adc
lret
inc
das
mov
mov
mov
or
mov
ds
in
cmp
cwtl
dec
ret
push
xchg
movsb
pop
mov
sbb
repz
xchg
shlb
inc
out
aas
cltd
sub
lods
mov
bound
ljmp
adc
mov
rolb
dec
fnsave
lcall
inc
jl
cltd
in
enter
jns
subb
stos
push
nop
cmp
icebp
sahf
inc
addr16
cli
cld
ficompl
push
fdiv
mov
dec
test
lods
cltd
mov
loope
lcall
add
lcall
adc
push
jnp
dec
std
into
sbbb
sbb
xchg
lret
xchg
out
outsb
jle
push
in
test
cmpsl
ljmp
movsl
scas
cmc
sbb
add
dec
aad
lcall
mov
cltd
arpl
fbstp
or
pop
dec
push
addr16
imul
sub
insb
mov
enter
les
pop
and
btr
mov
mov
and
popa
push
je
cmp
jp
mov
mov
jnp
hlt
jg
sub
jmp
cli
lock
out
inc
out
sbb
popa
xlat
icebp
aad
loop
mov
pop
mov
fimuls
mov
and
out
cltd
movsl
xchg
mov
add
jmp
roll
lahf
jmp
cmc
inc
movsb
dec
pop
repnz
nop
dec
xor
lods
arpl
icebp
pop
sbb
push
dec
cmp
lods
jbe
sbb
mov
push
es
or
or
push
ret
sbb
ss
push
in
inc
imul
jnp
jno
jg
outsl
push
xor
sub
xchg
paddusw
xor
sub
pop
or
data16
outsb
inc
mov
lods
mov
cmpsb
fdivrp
out
pushf
dec
loop
xor
jmp
cmpsl
jno
xchg
mov
out
dec
sub
xlat
les
and
mov
in
mov
inc
dec
jp
mov
or
sbb
jae
pop
jae
cmp
cld
or
movb
cmpsb
xor
jno
pop
sub
stc
orb
addr16
jp
scas
mov
xor
lods
test
pop
and
xor
or
push
push
aam
dec
cmp
popf
pop
in
sbb
cltd
xchg
outsb
es
sbb
and
pushf
subb
or
in
cli
dec
mov
aaa
mov
cmpsl
fisubs
jge
and
sbb
jmp
andl
aam
dec
call
push
nop
sub
mov
imul
cld
fcomps
sub
mov
and
sub
shll
pop
int3
cmpsb
xor
cwtd
addb
movsb
in
dec
xchg
test
mov
adc
adc
pop
dec
pop
cmpsl
loope
ret
dec
cmp
daa
pop
fiadds
movsb
into
addl
in
push
pop
ficoml
jp
lods
neg
cmp
stos
mov
imul
int3
fidivrs
int
cmp
add
dec
inc
mov
push
pop
lret
jecxz
mov
mov
mov
push
arpl
adc
in
xor
idivl
pop
cmp
adc
outsb
lds
daa
mov
jl
xchg
dec
inc
repnz
add
bound
mov
dec
add
pop
push
add
daa
aad
sub
loop
pop
adc
iret
arpl
xor
mov
cmpsb
jnp
scas
in
scas
jns
jbe
out
out
in
adc
sbb
aad
cmp
xor
jg
enter
jb
mov
outsb
shlb
cmpsl
idiv
stos
push
cmp
test
cli
ljmp
in
xchg
xor
xor
inc
sbb
incl
inc
cmp
lcall
mov
mov
push
add
mov
push
push
mov
inc
pop
add
arpl
push
jmp
cmpsl
xchg
inc
cli
add
inc
pop
push
adc
arpl
adc
fwait
adc
cmp
xchg
into
loopne
cmp
lods
mov
jbe
lds
addb
or
push
imul
leave
jle
jmp
cmpsl
or
or
in
rcrl
push
jno
mov
push
mov
jp
jae
push
push
inc
mov
cwtl
push
jp
dec
fs
mov
outsl
push
push
lods
sub
andb
call
call
or
test
imul
ret
push
xchg
and
xchg
push
popf
push
dec
in
pop
ja
and
in
jge
scas
fstp
and
mov
fstps
roll
test
dec
sub
mov
inc
repnz
xchg
cmp
rol
hlt
ficoml
int3
loopne
addr16
ret
popa
scas
pop
lods
or
in
xchg
test
loope
push
xchg
in
sti
dec
mov
pop
mul
pop
clc
shlb
or
insb
mov
imul
mov
jnp
stos
lret
out
loop
mov
sub
daa
call
push
aad
mov
sbb
pop
je
xor
inc
cmp
pushf
sbb
insb
and
push
pop
sub
adc
dec
and
mov
lcall
or
xchg
rcl
cmpsl
out
pop
inc
adcl
repz
xor
popa
clc
ds
std
sbb
imul
pusha
test
push
bound
movsl
mov
dec
je
push
mov
sbb
or
sbb
adc
adcl
hlt
arpl
lock
and
inc
pop
jge
mov
mull
inc
imul
mov
loopne
lods
xchg
jmp
in
mov
loop
pop
or
adc
sbb
repnz
jb
or
adc
push
and
ljmp
jo
js
mov
inc
xchg
inc
mov
cmpsb
mov
aaa
add
repnz
sub
cmp
push
jge
mull
fsubs
outsl
sub
push
into
adc
call
or
ljmp
pop
pop
push
test
mov
movsl
into
pushf
je
xor
sbb
sub
shll
dec
cmpsl
mov
lds
inc
mov
imul
imulb
das
sbb
int3
jmp
mov
xor
add
xor
push
inc
and
out
push
lcall
push
adc
dec
dec
and
add
out
popa
dec
outsb
aad
mov
and
stos
jne
adcl
mov
daa
pop
adc
sbb
xchg
sbb
data16
ss
mov
jl
scas
mov
sbb
shr
shlb
out
xchg
insb
mov
in
mov
test
push
push
dec
and
dec
push
sbb
jmp
xchg
shl
repz
push
icebp
popf
test
sbbl
gs
inc
and
fldenv
xchg
xor
loope
jecxz
ret
sbb
inc
mov
shlb
sbbb
pop
das
and
cltd
bound
pushf
ret
and
outsl
fsts
cmp
adc
in
fmull
enter
aaa
sti
dec
inc
pop
cs
rcll
or
sub
mov
mov
test
add
dec
daa
subb
mov
nop
and
movsb
sahf
nop
dec
je
add
push
sbb
rorl
xorb
cmp
and
ret
lahf
cli
and
cmp
jno
jae
xchg
adc
sub
sbb
jmp
jp
nop
jecxz
sub
xlat
cmp
lcall
call
cmp
pop
jo
push
dec
std
sahf
push
lret
loopne
out
adc
fcomip
fwait
add
sahf
lret
inc
xor
inc
adc
mov
mov
add
bound
xor
lret
nop
xchg
xchg
pop
jo
push
mov
push
sub
rolb
mov
cld
pop
add
adc
jns
sbb
call
std
lret
lret
cmpsb
divl
inc
mov
mov
in
imul
mov
sbbl
lret
dec
cmp
jae
adc
xchg
mov
dec
aas
jecxz
popf
mov
mov
cwtl
push
pop
in
insb
push
jl
mov
dec
das
mov
lcall
mov
cmc
jge
cmc
mov
cli
lea
ljmp
cmp
stos
lods
pop
sub
cmc
xchg
jae
outsb
stos
push
stc
enter
cmp
xor
mov
sbb
push
das
loopne
popa
mov
pop
pop
out
mov
cli
mov
xchg
and
cmpsb
jg
pop
cltd
pop
ja
out
xor
cmp
pop
add
divb
xor
push
lock
aad
push
adc
dec
aad
std
mov
mov
bound
inc
aad
mov
pusha
shll
shll
lods
push
test
sub
mov
insb
lcall
lret
jb
pusha
repnz
or
mov
push
or
pop
xchg
pop
and
jno
loop
rorl
cs
add
int
push
mov
and
shl
frstor
add
lea
push
xchg
outsl
mov
in
movsl
out
inc
dec
inc
sti
sub
dec
gs
sub
cs
addr16
inc
or
xchg
jmp
sub
sbb
mov
xchg
clc
popa
shlb
inc
cs
jg
push
jnp
cmpsb
sub
xchg
iret
ror
aaa
movsl
aam
adc
pop
jae
mov
xchg
movsb
lcall
out
pushf
dec
jg
pushf
fmulp
dec
mov
jge
cmpsb
sub
jecxz
push
mov
cmp
mov
pop
adc
rorl
test
aaa
js
mov
repnz
mov
mov
jg
stc
mov
ja
out
testb
pop
in
imul
test
mov
jb
js
sbb
xorb
ds
mov
ret
add
rcrl
mov
out
popf
test
sbb
gs
sub
scas
xchg
jge
cmp
sbb
add
push
mov
pop
dec
and
das
xchg
sahf
inc
jo
or
jl
out
sbb
mov
mov
mov
out
pop
int3
sbb
adc
mov
cs
and
out
mov
lret
dec
sbb
pop
xchg
mov
pop
push
mov
cmp
xchg
cwtl
in
xchg
in
add
add
movl
stos
insl
xor
decl
popf
adc
push
push
xor
push
push
pop
jbe
sub
jle
xor
mov
push
push
and
cmp
iret
mov
shrl
jle
ss
ret
rcrb
out
mov
fnsave
inc
pop
jmp
test
add
adc
or
jns
ljmp
imul
mov
les
mov
enter
xor
mov
jns
hlt
enter
ret
subl
jecxz
xor
xor
rclb
xchg
out
push
lea
ficoml
sgdtl
iret
fnstcw
inc
out
int3
loopne
cmpsb
divb
or
xor
xor
mov
or
jb
out
lds
sti
xchg
sub
add
or
dec
out
push
aam
xor
out
sub
iret
in
negb
ret
push
xlat
push
int
inc
dec
cmp
mov
out
xchg
dec
inc
call
rep
push
fnsave
lea
inc
xor
ja
sbb
add
xchg
rcrb
or
jbe
mov
mov
jg
mov
js
outsl
pop
jg
mov
repnz
call
clc
es
mov
cltd
rcrl
xchg
cmp
loop
lret
dec
push
mov
addr16
mov
sub
bound
movsl
pop
sub
mov
bound
push
fsts
test
fcmovnb
leave
shr
push
mov
sbb
out
lods
pop
jg
stos
pushl
pop
mov
out
push
adc
aam
cld
hlt
imul
subb
andl
mov
xchg
xchg
repz
sub
in
sbb
fs
mov
into
push
lods
ret
rcr
sub
idivb
sbb
mov
es
push
jno
xchg
xchg
mov
stc
mov
mov
aaa
sbb
dec
inc
mov
xor
xlat
mov
adc
mov
push
cwtl
fcmovnu
frstor
mov
filds
xor
cmp
movsb
repz
in
jmp
pusha
pop
insl
pop
enter
pop
add
hlt
leave
outsl
dec
jmp
mov
outsb
mov
and
and
cs
or
fwait
rcrl
adc
inc
sbbl
insl
ds
int3
rolb
inc
pop
inc
aas
adc
in
push
fdivs
frstor
push
lcall
je
lods
dec
xor
lahf
add
aam
aas
ffree
jge
jmp
jo
or
dec
stc
sub
push
pop
or
mov
testb
ss
and
stos
mov
xor
push
ret
xor
outsl
add
inc
ljmp
adc
lahf
inc
jno
out
stos
mov
push
fmul
lds
ss
inc
mov
pop
xchg
rolb
sbb
push
inc
sub
loope
xchg
jmp
test
rolb
cld
jp
cmp
jle
ret
inc
mov
shr
mov
push
push
cmp
out
lds
dec
roll
stos
push
shll
cmp
and
inc
fisubrs
sub
dec
mov
js
fildll
and
out
or
mov
lret
pusha
cmp
xor
pusha
dec
movsb
pushf
sarl
jg
push
sbbl
rorl
sbb
daa
push
and
xor
out
adc
mov
adc
dec
jp
pop
inc
dec
mov
rcll
adc
insl
sub
repz
idivl
mov
call
jb
outsb
test
xor
insl
cmc
movb
fucomi
ret
xchg
xchg
xlat
xchg
scas
jecxz
mov
jecxz
push
fstpl
iret
lods
cmp
adc
pop
call
icebp
xor
add
dec
test
cwtl
mov
jg
mov
rcll
mov
add
aad
sbb
pushf
ljmp
and
mov
inc
add
cltd
cmpsl
pop
xchg
mov
in
xor
and
ss
fsubl
jae
cmp
outsb
push
xor
xchg
xor
or
in
clc
repz
add
mov
cli
pop
pop
or
sbb
fistl
fcmovu
hlt
xchg
push
lods
test
sub
out
popf
mov
mov
scas
mov
pop
in
push
or
rcl
add
lock
cmp
ret
sub
stos
jns
cmp
mov
and
mov
insb
pop
leave
in
js
std
cmp
xchg
mov
pop
mov
out
or
push
and
fimuls
rolb
and
out
imul
cwtl
in
mov
adc
sarb
das
lahf
roll
push
sbb
xor
cs
mov
stc
xor
mov
cmp
outsl
cwtl
push
mov
inc
or
sbb
pusha
push
push
adc
xchg
test
sbbl
adc
outsb
sub
dec
sbb
arpl
mov
sti
cs
lcall
push
rcrl
arpl
incb
into
mov
xlat
test
fcomip
fsubp
loop
xchg
mov
jbe
dec
pop
fisubl
dec
mov
mov
xchg
pusha
pop
mov
js
jmp
push
out
in
mov
push
jns
dec
pushf
push
leave
add
rorl
jmp
movsl
pop
pusha
sub
xor
repnz
jno
roll
popf
push
push
sarb
cs
pop
nop
sub
insl
roll
push
lock
mov
dec
push
mov
sbb
mov
sbb
nop
ret
lret
mov
and
scas
add
push
push
gs
jl
jbe
in
inc
aam
inc
jl
js
and
push
imul
mov
test
ljmp
into
clc
xchg
cmp
int3
insl
jae
inc
mov
jge
sub
xchg
mov
fldl
mov
rcrl
ret
dec
adc
les
iret
andnps
daa
out
jg
xor
xor
iret
ljmp
push
cmp
pop
sti
push
ljmp
sub
rorb
dec
inc
xor
add
push
push
pop
jb
sbb
notl
cmp
xchg
aaa
fmull
enter
dec
aaa
ja
sub
ds
jb
xor
fcoml
pusha
ret
out
mov
out
fstpl
adc
xchg
or
mov
mov
inc
xchg
call
adc
jnp
xchg
or
push
lds
cmpsb
mov
addl
out
xor
insl
lock
cmpl
iret
adc
push
sti
push
aas
add
xchg
lock
imul
or
mov
out
mov
movsl
adc
rcrl
jmp
add
push
rcrb
fsubrl
sub
cmp
out
inc
mov
inc
in
xchg
pop
ja
fsubl
adc
loopne
out
xchg
fdivl
mov
pusha
xor
pop
out
lcall
mov
mov
add
inc
jbe
push
fstp
mov
fidivl
add
aaa
sti
jecxz
inc
sti
fisubs
rcll
ficoms
mov
fadds
mov
or
leave
or
sarb
adc
jne
fwait
jbe
mov
insl
aam
mov
cmpsl
scas
ds
dec
pop
add
cmc
je
mov
xchg
mov
icebp
sub
and
adc
dec
push
stc
dec
xor
call
bswap
stc
jne
enter
xlat
pop
mov
push
jmp
jbe
test
iret
push
xlat
or
or
sti
jg
xor
sbbb
adc
cs
push
scas
leave
subl
loope
ret
add
or
leave
dec
shlb
or
sbb
mov
sub
or
cmp
cli
ret
notl
call
pop
cmp
repnz
push
xabort
cmp
gs
add
xor
out
dec
js
ficoml
or
jnp
popf
add
jb
rcrl
sub
push
inc
lods
inc
incl
push
in
mov
arpl
jge
adc
sbb
pop
dec
es
or
mov
gs
push
mov
dec
xorl
pop
fcomip
rcr
xor
mov
arpl
sbb
fs
fstl
adc
add
das
and
aas
pop
xchg
adc
pop
bound
shrb
mov
adc
sub
test
sbb
cmp
cmpsb
mov
pop
push
or
cwtl
sbb
gs
dec
adc
or
ret
xchg
popa
add
ja
jge
test
jge
test
fsubrl
and
and
adcl
adc
or
mov
imul
cltd
cmpsl
pop
das
movsb
add
and
pop
test
adc
mov
xchg
cmp
fdivrl
jb
in
or
mov
ds
push
xchg
pmulhw
cmpb
adc
cmpsl
cmp
scas
cltd
lods
inc
rcll
add
ja
int3
cmp
mov
push
sub
push
scas
xchg
mov
inc
leave
add
lds
pop
add
adc
shrb
addr16
int
jae
mov
faddp
test
pop
inc
push
xchg
test
incb
mov
sbb
jbe
xor
repnz
adc
cmp
sbb
or
pop
xchg
out
movsl
mov
sbb
and
mov
mov
add
add
mov
ljmp
lret
or
sub
sub
in
xchg
push
in
jle
das
adc
jbe
hlt
mov
dec
sub
push
clc
test
cld
or
pop
pop
loopne
das
jns
clc
mov
cmp
shr
pusha
inc
add
or
roll
and
mov
aaa
inc
add
jnp
jp
arpl
movsb
ja
lcall
xchg
sbb
dec
fsubrl
mov
sbb
lea
mov
xor
adc
adc
imul
enter
xchg
pop
sahf
test
sbbl
mov
adc
std
jmp
add
cmpsl
psubusb
jge
mov
aam
jle
sahf
mov
or
imul
es
call
or
xlat
jb
jae
adc
inc
rorl
jp
in
cwtl
and
lods
dec
or
test
add
lock
adc
sahf
or
xchg
clc
fldt
cmc
sub
in
call
repz
fcompl
pop
sbb
or
mov
outsb
xchg
lods
sub
test
stos
aaa
pop
and
sahf
imul
movaps
into
data16
lahf
add
cmp
ja
cmp
lahf
ret
mov
jns
dec
jge
scas
pop
stos
mov
dec
fs
or
fbstp
imul
or
fsubl
adc
mov
test
imull
mov
jnp
fs
or
mov
sti
movsl
addr16
fistps
xchg
push
pop
imul
jmp
inc
inc
pop
inc
mov
mov
adc
xor
repz
enter
or
jp
sbb
or
push
out
mov
push
jle
xchg
pop
jns
and
in
adc
push
shlb
arpl
dec
xor
mov
or
pop
mov
jle
pop
ja
xchg
pop
outsb
imul
data16
pop
ret
or
pop
dec
xchg
fcmovnb
mov
fcompl
mov
pop
xchg
in
add
xchg
sbb
push
push
jno
sar
mov
pop
dec
fnstsw
fdivr
and
out
sbb
mov
adc
pop
add
repnz
inc
gs
xchg
aam
in
add
mov
fisubs
sbb
xchg
mov
std
mov
push
mov
pop
mov
aam
adcb
movsb
xchg
fcom
pop
cwtl
mov
arpl
mov
lahf
and
jle
dec
loope
adc
mov
cmp
sub
pop
jge
dec
lds
or
push
in
xor
loopne
add
rcrb
mov
es
cmp
aas
hlt
xchg
outsl
rclb
cs
dec
mov
in
adc
pop
xchg
adc
jp
fisttpl
inc
shlb
inc
inc
jns,pt
and
fisttpl
and
jl
adc
push
lds
pop
cmp
fwait
iret
xor
mov
imulb
shll
pop
xchg
lock
clc
jne
in
aas
lret
jo
adcl
pop
cwtl
mov
loopne
shrb
sbb
arpl
pop
test
or
jle
cmp
fldl2e
fldl
stc
data16
adc
test
dec
movsl
movsl
cli
mov
push
cmp
mov
mov
push
iret
and
adc
inc
iret
jle
xchg
mov
sbb
add
movsl
sarl
pop
loopne
movsl
inc
lcall
lods
fstpt
aas
out
xchg
enter
mov
movsb
jp
lds
cmc
xor
xor
mov
xchg
sbb
lea
sbb
rolb
mov
mov
lds
jno
fsubs
aad
sahf
je
call
sbb
aas
sub
push
dec
inc
cwtl
or
xor
jge
inc
pop
cmc
in
fwait
jmp
test
xchg
aas
sub
push
pop
je
dec
adc
jmp
xor
out
jo
lods
jp
xlat
aad
sar
jmp
dec
or
dec
cmp
mov
jp
xor
fcompp
mov
or
je
in
andb
pop
cld
add
pop
pop
ss
cmpl
pop
insl
sbb
imul
or
aaa
fdivl
in
xchg
or
pop
jecxz
push
jbe
in
ret
push
fnsave
ficoms
dec
dec
movsb
test
mov
mov
test
loope
fistpl
pushf
test
sbb
mov
shrl
push
divl
iret
push
inc
js
push
dec
xor
push
push
and
stc
xchg
mov
mov
movsl
fsubrl
outsl
cmpsl
or
mov
mov
dec
sbb
jb
push
notl
add
or
sbbb
xor
popa
inc
out
clc
fsts
mov
or
lods
dec
add
loop
jge
or
push
and
dec
lock
mov
push
mov
jmp
cmc
pusha
movsb
mov
shll
adcb
in
push
cmp
gs
aaa
xor
scas
lods
dec
pop
cmp
adc
orps
or
call
add
aas
sub
xor
mov
mov
repnz
jo
cltd
cld
add
insl
lods
sahf
sti
cltd
add
sub
add
mov
adc
pop
push
pop
pushf
push
or
or
pop
mov
pop
adc
addr16
mov
xor
ds
sub
cmp
cmpsl
ret
cmpsb
out
mov
gs
ja
imul
pusha
js
pop
imul
mov
add
repnz
mov
push
or
inc
xor
sub
int3
xchg
pop
adc
insl
pushf
es
or
and
jmp
fldl2e
ds
int3
and
imul
sahf
dec
pushf
sbb
movl
or
test
fwait
inc
add
aad
out
test
sti
int
sbb
jg
enter
jl
test
push
push
popa
adcb
pop
inc
or
add
xchg
and
xchg
cmp
test
lock
jle
repz
ret
pop
mov
adcl
mov
adc
std
inc
adc
negl
jno
fiadds
xchg
gs
mov
inc
jmp
gs
movsl
mov
sbb
add
je
lret
or
orl
adc
jmp
dec
rol
nop
out
xor
mov
xor
xor
aad
aas
fdivrs
adc
stc
or
inc
fidivrs
push
arpl
ret
mov
cmpsl
popa
sbb
popf
xor
in
sbb
jle
cmpsl
in
out
stos
jle
and
lock
push
sub
xchg
cmc
clc
jns
sub
lret
push
ja
inc
xor
jo
scas
outsb
inc
out
cmp
push
sub
and
aas
mov
test
out
cmp
je
pop
inc
inc
jecxz
popf
mov
and
int
xchg
subl
mov
and
out
fdivl
inc
fdivl
subb
js
mov
fmull
fildll
sarl
jmp
neg
test
push
les
call
imul
pop
dec
arpl
mov
popf
dec
lock
sbb
lock
mov
xchg
test
jns
fbld
add
inc
mov
movsl
iret
enter
push
leave
sahf
xchg
arpl
push
enter
mov
bound
sar
jnp
sbb
sub
xor
and
or
sahf
imul
loop
pop
mov
lods
mov
outsl
shrb
mov
pop
dec
ja
sub
inc
inc
outsl
ret
fwait
inc
lods
xchg
xor
dec
test
inc
sbb
lods
cli
add
push
and
in
dec
cwtl
iret
cmp
ds
xchg
push
xchg
cmp
iret
xor
insl
xchg
test
loopne
lods
dec
xchg
push
mov
dec
fwait
lods
jns
mov
jb
stos
loop
xor
insl
into
or
insb
out
or
rclb
xor
xor
cmp
inc
adc
ja
jmp
mov
dec
add
addl
int
ret
jge
aaa
xor
leave
sub
cwtl
pop
pop
lods
std
cli
sahf
sbb
das
icebp
dec
and
mov
arpl
cmp
adc
inc
adc
mov
sbb
sub
std
jmp
icebp
jecxz
push
les
mov
rcll
mov
out
movsl
fwait
vpaddb
mov
xor
pop
sahf
in
pop
popl
out
sbb
sbb
fsubl
adcl
xchg
cli
sbb
sar
sti
subb
fucomip
leave
cmp
lea
xchg
stc
and
sub
jle
xchg
mov
pop
xor
into
xor
inc
js
add
pusha
loopne
pop
or
add
xchg
leave
and
sub
pop
jno
add
pop
mov
xchg
out
ds
adc
mulb
jle
adc
stc
outsb
loopne
and
divl
and
popa
dec
shll
jnp
mov
xor
pop
sub
inc
mov
repz
in
xor
or
mov
pop
xor
popf
mov
dec
in
repz
and
pop
gs
xchg
push
js
in
xlat
popa
jae
loope
cwtl
mov
loop
xor
fsubr
pop
out
aam
inc
mov
fisttpll
or
mov
fldl
mov
adc
dec
aaa
jno
lret
je
jnp
outsb
push
adc
adc
xchg
test
nop
and
xor
test
out
sub
adc
jecxz
pop
ret
or
test
insl
dec
outsb
popa
adc
mov
pusha
mov
xchg
mov
cmp
xchg
lcall
aam
fdivrl
pusha
stos
jge
push
fstl
adc
outsb
or
push
inc
mov
mov
fstps
mov
cmpsb
dec
inc
gs
bound
sahf
lods
sahf
xchg
pop
push
movsb
xor
mov
mov
arpl
mov
jg
and
bound
xor
aas
mov
std
clc
popa
lods
sub
or
dec
mov
rcrb
xchg
mov
popa
inc
in
loope
gs
jl
arpl
ds
adc
mov
xor
jmp
std
xor
and
mov
jg
and
jge
and
stos
cmp
inc
out
xlat
xor
mov
fidivl
sub
sub
cmp
push
fstpl
inc
cmp
mov
loop
icebp
push
test
adc
or
in
xchg
icebp
sbb
inc
push
lahf
ret
dec
sbb
sbbb
xchg
push
cmpsb
xor
ds
sub
loopne
outsb
xchg
and
int3
adc
cmpsl
bound
and
test
add
push
cmp
std
icebp
and
xchg
inc
jae
push
push
or
or
adc
xlat
repnz
xor
in
mov
cmp
clc
xlat
mov
and
jno
sub
divl
test
iret
mov
mov
pusha
sahf
fimull
mov
cmpl
cmp
jnp
xchg
xor
fldcw
mov
cmp
mov
loope
sbb
adc
sbb
or
sbb
xchg
lret
adc
gs
aaa
ljmp
test
lock
test
cwtl
notl
fwait
or
enter
sarb
int
inc
lahf
push
jae
daa
popf
mov
dec
and
dec
mov
andb
cmp
and
incl
xor
sbb
je
scas
aaa
jno
jno
jne
sti
cmp
cmp
adc
adcb
fisubl
daa
push
mov
xchg
adc
xchg
scas
lahf
cltd
lock
pop
adc
fs
or
out
pop
mov
xchg
imul
shlb
inc
pop
mov
and
mov
pop
fidivrl
loop
add
fisttpl
sarb
outsb
push
push
pop
jle
sub
push
or
pop
cwtl
std
icebp
mov
mov
jo
inc
ret
push
test
sarl
or
daa
push
jecxz
cmp
xchg
shll
push
or
fcmovbe
sub
andb
sbb
pop
sub
xor
pushf
pop
jge
inc
out
ljmp
in
mov
push
dec
cltd
push
lods
cltd
data16
adcb
out
aad
mov
orl
das
pop
pop
test
jb
and
scas
jb
cmpsb
imul
fdivs
adc
cmp
or
ljmp
push
pusha
or
mov
out
mov
inc
sbb
xchg
cmp
ret
lret
jge
leave
cmc
jecxz
gs
ljmp
pop
add
and
mov
bound
jne
push
mov
outsl
cmpsb
mov
pop
mov
jl
scas
test
fsubs
bt
into
push
int3
stos
mov
insb
fs
popa
jae
dec
xchg
sbb
test
mov
aad
out
push
sub
xor
pusha
push
shll
montmul
cmpsb
cmpl
lds
cmp
roll
mov
push
mov
movsl
cmp
xchg
in
cmp
pop
lods
sahf
std
out
insl
mov
push
sahf
inc
int
cli
or
or
xor
stc
std
stos
mov
loop
jle
lret
out
pop
in
stos
int
loopne
iret
add
jne
dec
testl
xchg
icebp
jecxz
xor
std
xor
aaa
pop
sti
repz
push
lock
scas
adc
dec
jecxz
out
pushf
dec
jecxz
into
out
cs
in
adc
cmpsl
mov
or
xchg
xchg
pop
cmpsb
loope
mov
pop
mov
adc
xchg
mov
insl
sbb
jbe
lahf
mov
imul
mov
mov
or
jg
fidivrs
and
xlat
sbb
cmpl
mov
movhps
mov
mov
add
ds
push
inc
mov
pop
arpl
test
and
or
mov
xchg
dec
jne
mov
xorl
enter
pop
fucom
dec
xchg
fisubrl
mov
push
popa
int
and
pop
pop
and
xor
pop
adc
ljmp
popf
mov
sub
cltd
sti
sub
mov
xor
clc
jne
pop
mov
cmpsl
es
movsb
cld
push
mov
jns
mov
cli
scas
lret
pop
xchg
inc
hlt
add
push
cltd
mov
adc
push
mov
jge
stos
mov
or
sbb
rcl
jb
outsb
xchg
imul
jmp
dec
pop
loopne
push
rorb
out
insl
popf
or
aad
nop
or
clc
mov
mov
mov
add
xchg
cltd
out
pop
scas
pop
ret
lock
movsb
div
out
or
popf
ds
mov
lret
sbb
lods
xor
mov
xor
test
pop
out
in
sbb
mov
dec
les
js
pop
mov
out
test
in
dec
nop
sti
cmpsb
push
jp
cmpsl
mov
ficompl
cmpb
cltd
les
mov
sbb
sarl
sbb
add
push
adc
jecxz
mov
mov
ret
lock
jbe
imul
xor
cmp
push
inc
push
mov
bound
sti
pushf
mov
dec
lret
push
ficompl
aaa
add
xor
jno
and
stos
xchg
mov
mov
inc
lret
movsl
insb
das
loope
jl
jb
cli
and
xchg
push
fldl
subb
movsl
mov
sbbb
or
lcall
xor
adc
loop
jg
lahf
incl
xchg
in
cmp
lea
jbe
and
outsl
jge
aam
push
pusha
inc
and
lods
pop
pop
cmp
xchg
dec
sub
test
int3
dec
std
and
jb
mov
dec
and
popf
add
sti
repz
lcall
cmp
je
sbb
popf
mov
push
sarl
add
scas
jl
xor
sub
push
pop
push
fimuls
mov
pop
int
bound
insl
sbb
cli
shrl
out
xor
outsl
inc
sub
popf
jne
lds
xor
mov
popa
adc
mov
sub
add
ret
xchg
mov
scas
lods
das
rcll
xchg
mov
xor
jecxz
cmp
push
into
jp
xchg
and
rep
sbb
inc
divb
bound
xchg
xor
mov
dec
mov
cmp
cmp
jo
leave
cmpsb
xchg
or
adc
xor
pop
sbb
sarl
cmp
inc
jns
adc
mov
shll
movsl
mov
ss
adc
aas
subb
mov
test
pop
rcrb
and
icebp
stos
jbe
loope
cmp
std
mov
jmp
mov
ss
or
lea
enter
data16
mov
inc
rorl
cmp
lret
inc
or
popa
cli
and
cmp
push
and
lret
cmp
ljmp
and
xor
aaa
scas
mov
ljmp
call
ficompl
push
inc
mov
mov
sbb
mov
popf
sub
lcall
jae
pop
cmp
mov
sub
addb
push
mov
lods
and
and
jmp
push
sub
ja
icebp
adc
call
cltd
jl
aad
jg
xor
dec
mov
nop
pop
jp
in
lcall
std
clc
enter
push
fld1
jmp
fsubl
lret
shll
adc
scas
test
sub
repz
sub
sub
ss
mov
mov
mov
sbb
fs
sbb
movsl
out
cmp
mov
movsl
pop
lods
xchg
roll
dec
mov
js
sub
dec
adc
pop
jne
xchg
fnstsw
mov
outsb
mov
add
push
aad
jmp
sti
pushf
jg
xor
test
mov
out
xor
fwait
loopne
xor
fiadds
punpcklwd
sub
shll
push
out
out
mov
mov
dec
or
push
sti
pop
xchg
popf
mov
scas
mov
xlat
jl
sbb
mov
xchg
mov
aad
icebp
in
xor
popf
sbb
outsb
std
add
jnp
jne
xchg
mov
inc
cmp
ret
shl
add
add
xlat
jb
rorb
std
lret
cwtl
mov
mov
sbb
arpl
push
mov
xchg
aaa
in
dec
or
push
daa
push
aaa
sti
cltd
arpl
out
mov
add
dec
addps
add
nop
xchg
xchg
in
xor
mov
shrb
jne
xor
stos
cld
push
hlt
mov
mov
mov
int3
xor
mov
inc
mov
adc
movsl
dec
mov
pushf
sub
and
mov
mov
fiadds
or
movsl
push
jbe
jnp
sbb
xchg
and
pop
and
fdivp
das
arpl
lock
jg
pop
aam
pop
subb
lret
dec
enter
jp
add
dec
outsl
or
xor
cld
inc
aaa
pop
adc
jnp
xor
das
mul
ja
jbe
out
rcll
mov
inc
rcrl
inc
inc
fsubp
or
jle
mov
sbb
adc
nop
mov
mov
mov
iret
cmp
jecxz
mov
ss
cmp
filds
aad
cmp
xor
or
sbb
rcrb
jo
push
fisttpll
mov
out
inc
outsl
dec
cmp
jbe
mov
xor
scas
mov
pop
mov
aam
insl
xor
rcrl
fcmove
push
rcll
test
rol
and
es
xchg
inc
mov
dec
xchg
xchg
in
mov
sub
loop
int3
and
mov
cli
xchg
dec
push
pop
inc
mov
gs
fisttpl
cli
xchg
push
rol
xchg
inc
adc
insl
dec
sbb
subl
mov
add
inc
repz
cmp
lahf
loope
or
xchg
mov
adc
xchg
movsl
add
icebp
iret
aam
test
mov
adcb
das
shr
sbb
lock
into
or
fwait
dec
das
in
insb
out
ss
xchg
rorb
xlat
push
cwtl
pushf
fxch
push
loopne
mov
and
mov
push
mov
in
xor
outsl
fbstp
or
push
sub
push
xchg
lds
jb
dec
mov
scas
rclb
cltd
mov
dec
mov
mov
fbld
pushf
jg
lock
or
aad
les
xchg
mov
jnp
lret
xchg
insl
into
test
movsb
rorl
lods
pop
inc
rcrb
and
lock
aas
mov
dec
lods
jo
test
clc
shlb
pusha
ss
fistps
notb
push
pop
xchg
cmc
pop
cld
and
out
pop
and
insb
jge
imul
ret
aam
push
gs
orl
out
mov
scas
test
xchg
xor
and
fidivrl
rclb
xchg
mov
push
hlt
test
add
iret
adcl
xchg
fs
stc
push
pop
adc
mov
pop
sbbb
or
mov
xor
inc
sub
mov
xor
mov
mov
popl
testb
xor
hlt
add
popf
sbb
outsl
daa
lods
cmp
jns
mov
out
imul
ds
jmp
loope
mov
imul
xchg
adc
push
sbb
push
sub
mov
sub
sub
mov
jb
push
iret
jge
jbe
push
test
dec
adc
xor
pop
clc
out
mov
stos
and
negb
adc
adc
sbb
jne
pop
push
fmull
xchg
shlb
fistpl
jnp
out
mov
out
jge
aaa
aaa
out
mov
xchg
mov
mov
pushf
pop
adc
push
mov
filds
jb
pop
test
cs
out
fdivrl
fs
icebp
and
insw
ret
mov
rcr
bound
pop
xlat
clc
or
sbb
stc
and
cmp
pop
xchg
cmp
mov
int
cmpsl
loopne
jnp
dec
addl
add
pop
hlt
ja
out
jl
lods
xor
daa
lcall
and
dec
xchg
arpl
adc
int
xchg
jg
negl
sub
leave
mov
mov
clc
xor
std
xchg
setb
push
cltd
scas
popf
cmp
sbb
pop
fdivr
mov
or
add
xor
inc
cmp
in
mov
add
jecxz
jae
iret
std
into
aaa
les
xor
loopne
ds
add
ljmp
pop
sub
jge
andb
in
jo
in
lret
xor
mov
iret
or
std
ficoml
rcll
inc
in
xchg
stc
mov
inc
rolb
fdivrl
xchg
cwtl
push
in
xor
jno
scas
xor
lock
dec
aam
sub
in
push
dec
push
push
jnp
pop
cmp
mov
popa
pop
jg
ja
ss
sbb
push
mulb
jmp
jmp
mov
adc
xchg
lds
sub
imul
add
push
out
pop
cltd
add
loop
inc
lds
add
xchg
sbb
push
xor
loopne
jo
sahf
sbb
and
inc
call
cltd
aad
sarb
enter
mov
pop
dec
jbe
adc
mov
aaa
in
push
aad
push
xchg
imul
adc
sbb
insb
jg
and
jle
xchg
mov
fwait
call
push
cmp
mov
les
js
jns,pt
nop
test
in
jg
repz
cmpsb
xor
and
xchg
adc
pop
cmp
icebp
xchg
mov
popa
xchg
cwtl
test
xchg
add
cmc
ficoml
mov
sub
ss
fucomip
fisttpll
inc
fbld
imul
int3
movsl
cltd
lahf
lods
jmp
cli
cltd
mov
roll
adc
std
rcll
out
jne
je
sub
or
in
cwtl
int3
add
out
inc
aas
sti
jae
cmp
push
adc
fcmovnbe
mov
shll
dec
dec
pop
inc
mov
xchg
shl
pop
push
add
test
data16
loop
add
rcr
mov
or
inc
insb
je
shlb
test
leave
push
cld
movsl
stos
loopne
int
xchg
mov
scas
lahf
fstl
lods
mov
leave
sbbl
outsb
xchg
mov
xor
xlat
and
adc
pop
gs
inc
inc
rolb
ret
or
dec
add
jno
lds
ret
lret
add
ja
push
movsl
mov
jns
or
jns
jge
insb
cmc
cmc
das
mov
lods
loop
fwait
data16
push
imul
icebp
inc
add
sub
imul
fcoml
xor
and
adc
pop
es
fld
xlat
pop
cmp
sbb
dec
pop
mov
mov
add
xchg
emms
ja
inc
lds
scas
push
xor
and
jo
repnz
xor
out
push
fcmovu
push
sbb
inc
call
into
xlat
or
into
aad
ss
cmpsb
test
sbb
sbb
mov
and
insl
call
into
lods
ljmp
aas
es
sti
add
iret
dec
inc
shrl
pop
dec
and
dec
jnp
loope
push
ds
push
push
pop
idivb
mov
outsb
xor
push
sub
scas
sbbb
outsb
mov
aaa
mov
mov
add
pop
daa
call
nop
loopne
mov
aad
dec
cmpsb
xor
jb
inc
lock
and
pop
push
dec
xor
sbb
popa
loop
stos
addr16
les
clc
pop
test
add
les
pop
mov
add
cli
test
or
pop
pop
clc
mov
xor
test
std
mov
push
pop
add
pop
jb
mov
repnz
dec
lds
mov
push
insl
xchg
shll
out
inc
stos
pop
xchg
mov
inc
push
iret
scas
mov
shl
inc
test
data16
mov
mov
inc
imul
loope
jns
mov
push
jno
and
popf
inc
sahf
out
cmp
xchg
pusha
sub
xchg
sbb
adc
xchg
clc
cli
lahf
lods
pusha
loope
mov
mov
jmp
xor
adc
cmpsb
test
sti
repz
inc
xor
cli
ret
ljmp
and
fstl
int3
test
adc
mov
out
das
mov
adc
pop
aam
data16
pop
dec
xor
mov
stc
add
aad
in
movd
mov
leave
outsb
outsb
aas
clc
cmp
jbe
jl
test
rolb
mov
std
adcb
cmpsl
out
lods
aaa
xor
adc
xor
jle
dec
xor
mov
add
aam
jne
mov
fistpl
inc
mov
lret
pop
repz
dec
pop
test
sbb
dec
pop
out
xchg
push
stos
sbb
aad
cmpsb
xchg
add
lret
pop
outsb
in
lds
or
jecxz
jge
mov
je
pop
pusha
orb
mov
jecxz
mov
cmpsl
out
out
aam
test
xor
sub
xor
fistpl
cmp
xor
cld
cmc
xchg
cld
jne
popa
dec
sub
test
add
dec
insl
jae
mov
xor
cmpsl
cmp
push
subps
mov
mov
or
push
std
and
push
cmpsl
jg
mov
mov
outsb
jecxz
fmuls
or
fsubs
pop
je
cmpsb
push
fmulp
dec
pop
bound
cmp
pop
fisubrl
out
mov
into
stc
pushf
dec
into
les
ss
scas
jne
ficoms
and
mov
lods
jmp
inc
idivl
pusha
mov
fdivs
push
and
rorl
cmpsb
jnp
push
inc
jno
jne
stos
mov
mov
dec
jle
mov
insb
dec
into
jo
adcb
jno
cmpsb
cmc
nop
loope
jmp
mov
or
xor
lock
adc
jnp
popf
rcr
or
jno
shl
dec
cmp
sub
imul
jbe
sub
and
sub
out
mov
pop
mov
mov
sahf
mov
call
mov
popa
and
popf
push
inc
push
iret
inc
shrb
sub
lret
add
arpl
inc
repnz
lds
sbb
push
les
jnp
fxtract
je
dec
lcall
fidivl
outsb
cmp
gs
rclb
scas
push
pop
shrl
pop
lret
shrl
in
mov
xor
mov
xor
pop
fs
std
cmp
xchg
jne
notb
inc
lds
je
pusha
pop
dec
mov
aas
ds
jp
push
sti
xor
in
push
mov
and
pop
or
mov
inc
push
aam
mov
mov
daa
xor
fldcw
das
in
mov
or
in
ret
mov
sbb
and
add
rorl
inc
and
lret
lea
insl
mov
jmp
jae
or
bound
movsb
push
and
in
insl
jbe
outsl
ret
pusha
std
in
add
repz
cmpsl
cmpsl
std
test
or
test
and
add
lret
pop
out
sti
mov
fmul
clc
popa
or
sbb
push
insb
or
fs
daa
mov
bound
daa
pop
add
or
push
lock
and
xor
inc
and
les
movb
inc
jae
pop
mov
out
xor
mov
and
hlt
std
neg
ss
push
xor
lret
mov
sahf
ss
arpl
dec
adcl
cmpsl
les
push
inc
push
xchg
xchg
call
movsl
into
pusha
or
cli
test
mov
sbb
in
mov
cmp
ss
xlat
xor
mov
xchg
push
or
out
ja
sahf
cmp
push
imul
sbb
jp
lods
or
out
sub
dec
sti
stos
cmp
aaa
cmp
and
push
or
mov
jmp
inc
addr16
jp
and
sbb
mov
adc
xchg
xor
ret
popa
leave
pop
in
xor
xchg
push
or
in
xchg
jns
test
adc
xor
xchg
lock
jmp
fcmovu
jns
add
push
mov
jge
jb
sub
mov
pop
mov
and
sahf
rcl
call
add
sahf
int
outsl
inc
inc
stos
mov
sub
aad
adc
dec
lock
jmp
orb
int
rcll
cmp
rorl
test
cmp
out
cmp
ud2
dec
jbe
sbb
hlt
mov
mov
sbb
mov
neg
mov
sahf
push
cmp
loope
and
push
sbb
cs
lock
daa
and
and
fisttpl
xor
insl
cltd
idivb
enter
inc
mov
gs
jmp
push
sbb
idiv
jg
mov
mov
mov
jg
stos
enter
pusha
mov
in
aad
subl
shlb
loopne
mov
into
daa
sub
and
sti
addr16
addr16
or
xor
adc
jnp
imul
test
sti
xor
or
xor
pop
dec
in
mov
mov
idivl
jle
mov
add
dec
repz
cmp
mov
outsb
loopne
adc
dec
fsts
imul
cmpsb
xor
mov
inc
pushf
jecxz
in
cmp
jmp
movsb
jbe
and
mov
flds
and
sbb
fists
mov
push
jno
cs
xchg
cwtl
xchg
sub
mov
jb
call
adc
xchg
and
lock
aam
pop
mov
push
xchg
test
sub
push
inc
loop
loop
sbb
loop
pop
rcll
push
fdivrl
and
pop
push
lret
dec
pusha
lahf
in
test
ljmp
add
test
fimull
cmpsb
into
mov
pop
sarb
xor
push
mov
aas
add
dec
mov
js
cmp
or
das
ficompl
inc
repnz
movsl
jnp
dec
inc
jp
or
add
movsb
pop
movsb
aad
rcrb
in
mov
call
mov
subb
adc
loop
cs
sbb
data16
lahf
sub
in
mov
mov
divb
sbb
sbb
xor
out
mov
icebp
push
clc
pop
adc
xor
mov
xchg
cmp
lock
inc
add
mov
fldcw
or
outsl
stos
loopne
sahf
dec
adc
sbb
mov
sbb
pop
stc
or
dec
sahf
mov
or
dec
repnz
call
inc
xchg
pop
fcoms
aad
add
nop
rcl
cmp
mov
std
pusha
push
aaa
pop
push
das
pusha
call
subb
or
xor
sub
add
pop
push
sub
pop
xchg
ret
stos
adc
push
mov
stos
mov
and
les
mov
add
cmc
xchg
lea
mov
and
push
ljmp
mov
push
pop
into
adc
mov
ds
fcoms
inc
xor
scas
push
jp
imul
sbb
int
mov
pusha
inc
inc
add
add
cwtl
adc
mov
addr16
imul
int
aam
in
dec
divl
mov
xor
push
push
gs
inc
push
cltd
dec
sbbl
andl
pop
bound
imul
push
mov
xor
mov
push
sbb
gs
cmc
test
pop
imul
or
xchg
add
movsl
mov
xchg
add
pop
test
add
and
fistps
push
dec
push
sbb
mov
lods
sbb
js
push
sbb
icebp
xor
das
sub
jo
mov
add
and
sbb
pop
inc
xlat
in
out
daa
ret
insb
jle
xor
push
or
rolb
in
in
sbbb
adc
mov
and
scas
adc
movsl
adc
jp
orl
jge
stos
inc
push
flds
pop
pop
mov
jns
les
daa
xchg
sbb
push
jno
mov
cmpb
int
fucomip
and
scas
or
stos
cmp
lret
gs
les
ljmp
xor
mov
jmp
sbb
stos
inc
ds
push
mov
mov
rclb
mov
ja
mov
mov
dec
out
mov
popa
adc
push
mov
xchg
aad
jnp
pop
out
out
loopne
cmp
bnd
cmpsl
mov
push
mov
add
mov
lcall
push
sub
cmp
mov
cmp
test
jb
mov
jno
pop
mov
mov
push
mov
cmpsl
out
in
mov
mov
inc
stc
addr16
mov
lcall
jnp
js
inc
add
pop
cltd
cmp
jle
clc
loop
aas
mov
scas
movl
dec
in
add
mov
jmp
int3
or
lods
cmp
cmp
mov
pop
cltd
lret
dec
pop
fs
mov
sub
sbb
mov
sahf
inc
arpl
add
popa
out
popf
mov
in
scas
pop
mov
aad
mov
cwtl
fdivrs
xchg
fcoml
push
in
fcmovnu
fsubl
sti
mov
cmp
fcomps
ljmp
scas
fcmovbe
popa
or
push
sbb
loop
cltd
mov
jmp
or
repnz
sbb
cltd
in
int
sbb
in
mov
add
pusha
inc
inc
aaa
sbb
mov
mov
jg
cwtl
in
lcall
insb
out
in
addr16
ret
mov
adc
cmp
push
sti
stc
xchg
ret
divl
jo
cmp
sub
pop
cmp
cmpsl
mull
data16
fdivrl
jp
and
movsb
or
stos
pop
lret
sbbb
lods
shl
add
push
jle
push
inc
lods
inc
mov
mov
mov
add
sbb
in
add
xchg
adc
pop
cmp
repz
out
inc
pop
mov
aas
adc
stc
push
add
cmpsl
dec
sbb
jbe
cs
insb
pop
cltd
hlt
stc
cmp
sub
push
bswap
inc
fidivl
clc
out
push
fwait
jno
add
daa
movsl
aad
mov
cmpsl
adc
pop
jb
push
mov
sub
fs
mov
ss
add
xchg
jnp
xor
pop
scas
mov
out
leave
out
rclb
clc
outsl
inc
and
loope
mov
mov
iret
pop
add
out
dec
rolb
daa
nop
push
fcom
mov
test
mov
mov
push
lcall
lods
lock
dec
push
mov
jb
mov
sub
dec
pop
in
movsl
sti
adc
mov
pop
sahf
daa
mov
imul
mov
setge
push
rcll
and
dec
jne
fimuls
aas
ficoms
inc
sbb
sbbl
jl
push
pop
jecxz
pop
mov
dec
adc
cmp
push
loopne
lods
cmpsl
test
scas
mov
add
std
out
mov
and
insl
loopne
lea
and
add
outsl
add
mov
push
sbb
mov
mov
lods
enter
adc
in
dec
mov
sbb
jecxz
lds
and
dec
dec
cmp
push
nop
add
xor
xchg
push
mov
mov
jle
movsl
lahf
stos
sub
jl
pushf
fstpt
jnp
std
or
push
bound
mov
cmp
scas
sbb
ret
inc
iret
inc
xor
je
div
std
in
repnz
or
add
aad
cltd
in
icebp
mov
and
cld
jne
popf
out
add
push
mov
add
pop
pop
repz
mov
int
fisubs
cmp
or
inc
cwtl
jnp
xlat
lcall
lods
adc
inc
pop
push
in
mov
ret
mov
jmp
mov
jp
jnp
pop
out
jle
popa
push
mov
xchg
add
add
jecxz
sub
mov
sub
repz
adc
sti
xor
aam
xor
inc
mov
repnz
andb
out
cmp
cs
fldl
shrl
out
sub
rcrl
pop
xor
dec
data16
sub
dec
and
cmpsl
sahf
adc
or
cmpsl
inc
popa
mov
dec
fstpl
add
mov
mov
push
jns
sbb
inc
sarb
jnp,pn
dec
push
adc
and
int3
pop
std
push
or
outsl
inc
nop
fiadds
orb
mov
cmp
std
popa
lahf
mov
mov
inc
in
adc
push
cs
std
inc
ret
pop
sbb
out
and
je
lcall
pop
mov
mov
mov
test
mov
testl
adc
mov
stos
jno
xchg
popf
xor
mov
jge
pusha
divl
inc
pop
adc
iret
or
mov
inc
inc
lret
mov
add
inc
sahf
insl
ljmp
pusha
ss
test
movsl
adcb
jbe
fmull
popf
mov
jg
inc
movsb
push
or
add
sub
adc
mov
fsubrl
lds
in
popa
ljmp
shlb
jnp
push
xchg
cld
push
fldenv
and
inc
lods
rolb
push
push
and
jecxz
ret
xchg
xlat
sub
dec
lret
dec
inc
jmp
aam
pop
mov
inc
mov
popf
lret
adc
or
dec
adc
mov
adc
mov
mov
mov
cltd
insl
push
mov
xor
mov
mov
loopne
cmpsb
sub
sbb
or
mov
jb
out
and
xchg
data16
fwait
push
push
ljmp
and
test
pusha
mov
lods
jg
pop
xchg
push
ficoml
cltd
daa
mov
xor
mov
and
sub
stc
xchg
mov
push
add
mov
fs
rcrb
in
popa
sub
jle
xor
xchg
and
pop
clc
dec
sub
outsl
xchg
movsl
iret
shll
les
popf
repnz
fcom
mov
sahf
cmpsb
lods
sub
and
lods
arpl
lods
sub
pop
lret
cmpsl
jmp
outsb
sbb
or
bswap
pop
movsb
jno
mov
sub
xor
inc
add
mov
mov
test
mov
mov
sub
into
scas
sti
test
push
xchg
out
sbb
mov
rorl
filds
cmp
sub
cmp
out
mov
mov
lods
inc
add
daa
mov
gs
adc
rcl
jbe
cltd
sbb
jno
add
mov
cltd
sti
cmp
and
rolb
dec
lret
dec
js
popf
mov
sbb
arpl
leave
in
jns
pop
outsb
andb
or
and
insb
rdtsc
bound
jbe
movb
xchg
psubw
fldt
dec
sbb
xlat
mov
mov
into
xchg
les
sub
arpl
mov
fsubrs
ret
inc
jle
mov
mov
loopne
lahf
adc
sbb
sub
arpl
std
hlt
mov
test
push
push
ret
mov
lret
and
push
mov
pop
arpl
mov
pop
cmpb
lret
mov
add
dec
pusha
test
or
jg
xchg
pop
jne
and
jl
hlt
lds
adc
test
ljmp
xor
push
pop
fucomip
mov
mov
mov
mov
mov
dec
jbe
cmp
mov
push
lods
ds
out
jbe
enter
popf
in
aad
or
xchg
fmulp
sub
cmp
notb
sti
xor
pop
stos
cmp
jmp
clc
stos
xor
xchg
ja
cmp
jno
dec
loop
adc
inc
rcr
cmp
and
mov
rcll
into
add
and
dec
fsts
cld
cmp
mov
inc
push
pop
mov
idivb
dec
add
inc
repz
fsubrs
sbb
pop
adc
mov
dec
mov
mov
bound
push
subb
push
inc
in
shll
sbb
ljmp
inc
inc
loope
or
std
push
arpl
movsl
jbe
cs
out
or
xchg
int
imul
mov
out
fsub
sbb
add
lds
jp
pop
lea
cmc
push
adc
in
add
and
cltd
jnp
popa
push
out
mov
pop
inc
mov
popa
jp
push
out
inc
sbb
stos
mov
imul
out
lret
ret
int
sbb
fstpl
mov
lea
xor
or
xchg
adc
in
sahf
dec
xchg
ror
mov
cmc
shlb
push
stc
sbb
rolb
push
sti
ds
int3
mov
xor
adc
sub
mov
movsb
xchg
icebp
jl
ficoms
or
jo
cmpsb
xor
push
xor
cli
stos
mov
rclb
inc
pushf
dec
sub
pop
sarl
xor
aaa
mov
repnz
jns
push
dec
xchg
dec
pop
or
pop
bound
sbb
decl
outsl
fidivs
scas
push
mov
dec
das
mov
daa
hlt
add
les
jg
test
and
ds
or
jo
shlb
adc
add
movsb
inc
jg
jnp
stos
popa
lahf
leave
scas
lret
mov
push
data16
loope
dec
imul
gs
out
jb
cmp
sub
add
add
daa
out
cld
insb
mov
dec
xchg
scas
mov
out
push
cmc
fbld
jbe
into
sub
ret
je
push
mov
xchg
cli
mov
inc
mov
test
sub
pusha
pop
or
les
sub
ret
sub
sbb
and
inc
test
jns
push
inc
pop
xor
xchg
fistps
les
orl
ljmp
cld
jbe
inc
and
stos
add
fstpl
es
xchg
inc
inc
test
push
mov
adc
addb
adc
leave
dec
dec
mov
aad
push
and
in
jne
mov
dec
lods
aam
mov
mov
shlb
and
mov
pushf
loopne
testb
jnp
mov
pop
and
cli
and
insb
or
inc
scas
fwait
std
pop
aad
out
andb
cmp
scas
cwtl
js
push
mov
scas
je
cs
popf
sbb
mov
push
repnz
je
rclb
outsb
sbb
xchg
push
stc
adc
stos
ja
inc
jo
insl
stos
sub
ljmp
movsl
and
cmc
sub
pop
mov
pushf
sub
jne
add
mov
loopne
shll
stos
dec
and
nop
sahf
push
pop
call
je
les
lret
and
jne
orl
iret
cmpsl
inc
xor
out
imul
mov
cmpsb
sarl
mov
sub
insb
outsb
add
jle
xchg
dec
push
and
cmp
or
in
xchg
nop
and
jg
sub
pop
js
and
rcrl
xlat
jp
mov
mov
mov
pop
enter
je
repnz
fsubrs
shrl
adc
sub
mov
mov
jae
jle
ret
dec
mov
push
aas
loopne
sub
xchg
test
dec
in
mov
mov
repnz
int
insb
out
mov
fstpl
sub
mov
outsb
imul
mov
push
inc
test
pop
xchg
imull
add
cmp
movsl
lods
das
in
fstp
dec
mov
xor
enter
ljmp
out
lahf
push
cmp
mov
mov
jbe
mov
cld
or
in
ljmp
shr
push
add
cmpsb
orb
or
rcll
loope
rcrl
add
lahf
and
adcl
cld
push
adc
mov
mov
je
icebp
mov
adc
jbe
bound
jb
js
jns
xor
push
ljmp
add
mov
jmp
dec
nop
pop
mov
pop
sub
adc
sub
aaa
cld
inc
data16
push
ja
lcall
pop
pop
dec
xor
ja
leave
outsl
mov
xchg
dec
mov
mov
push
jmp
outsb
shlb
call
das
xor
orl
jg
sbb
xchg
fiadds
push
aam
lods
mov
nop
cmpsl
sbb
mov
fwait
test
sbb
popa
mov
lods
aas
sbb
push
fadds
jo
sbb
subl
cmpsb
js
dec
aas
inc
cmp
mov
push
push
xor
inc
xchg
push
and
sub
outsb
inc
movsl
adc
cmpb
jns
mov
add
dec
inc
and
pop
icebp
sbb
mov
and
ss
fiaddl
decb
out
and
xor
es
mov
push
std
lds
insl
push
inc
and
inc
pop
int
adc
mov
push
in
push
and
push
push
push
dec
fwait
sub
xchg
or
lret
sahf
dec
mov
mov
lods
cmp
ja
pop
popa
lock
nop
cmc
lret
movsb
adc
lea
dec
loope
mov
mov
xor
ja
cmp
and
aam
popf
or
lock
mov
xlat
sub
cli
mov
mov
jge
mov
lods
fbstp
inc
xchg
inc
cmp
xchg
and
cltd
fidivl
xchg
push
or
sahf
gs
cmc
mov
xor
dec
sarl
ss
shrb
dec
cmp
inc
push
movsb
pop
in
inc
jecxz
jecxz
push
mov
sub
cld
push
fdivrs
call
lret
mov
lods
jne
leave
scas
cmp
cmp
rorb
dec
loope
push
lods
or
mov
jns
data16
fimuls
daa
fidivrl
jmp
push
jns
nop
repnz
loop
insl
mov
sbb
jle
adc
pop
jg
mov
and
lret
adc
movsl
lods
adc
aam
scas
insb
pop
test
lahf
repz
lret
andb
mov
test
into
das
and
into
pop
aam
cmp
std
sbb
sbb
add
insl
data16
sbb
and
adc
fdivrs
in
jne
add
mov
xchg
aad
data16
ds
and
xor
loope
mov
stc
addb
insb
rsm
adc
shrb
insb
movsl
add
call
sbb
int
mov
sarl
lods
les
nop
insl
xchg
and
pop
lret
repz
xchg
out
aad
nop
sub
out
aad
pop
pop
mov
pop
out
sub
mov
xchg
leave
dec
stos
ret
push
add
push
test
mov
stc
xchg
rorl
add
add
xchg
daa
imul
cltd
lock
or
or
cmpsb
mov
hlt
outsb
gs
call
enter
pop
in
cmp
fbstp
jp
adc
add
stos
daa
aaa
lahf
fiaddl
rcrl
hlt
push
dec
cmp
push
mov
aaa
cmpsl
dec
lods
xchg
rol
test
nop
dec
scas
adc
shll
add
test
fsubrl
nop
or
pushf
mov
or
mov
mov
mov
pop
pop
sub
or
jecxz
jo
lds
mov
mov
out
jno
push
loop
fiaddl
dec
or
mov
or
nop
and
repnz
jne
ficoml
mov
sbb
out
aaa
mov
mov
outsb
into
adc
jb
and
dec
inc
xchg
adc
xchg
mov
call
inc
mov
sub
ret
pop
ret
mov
in
jbe
sbb
lds
add
mov
mov
outsl
or
or
inc
popa
xchg
popa
aam
stos
hlt
ja,pt
add
cmp
mov
je
add
mov
out
fldenv
jp
repz
push
scas
repz
clc
pop
imul
mov
lret
push
addr16
lods
test
xchg
aas
mov
sbb
xor
push
xchg
in
stos
xor
stos
sbb
sub
xor
add
cmp
dec
xchg
adc
ss
hlt
lret
mov
es
push
pop
data16
push
adc
push
inc
insb
gs
pop
add
in
pop
lret
in
xor
jmp
xlat
sub
cld
jnp
or
in
rolb
add
leave
pop
call
leave
mov
push
pop
repnz
test
mov
movl
inc
jno
add
pop
lods
xchg
xlat
lcall
mov
mov
mov
mov
cmp
pop
loop
dec
jp
ror
pop
lcall
push
pop
and
mov
mov
stc
mov
xchg
or
imul
orl
test
icebp
sahf
clc
sbb
sar
pushf
mov
cld
jb
stc
loopne
inc
mov
push
cltd
lret
or
in
jp
mov
jg
dec
xchg
mov
add
mov
dec
jb
repnz
jne
into
pusha
add
aas
dec
or
rcll
repnz
cmpsl
jmp
adc
mov
xchg
sbb
dec
mov
notb
test
and
add
mov
js
stos
xor
rorl
xor
rclb
lahf
lret
popa
push
pushf
cmpsl
sub
std
pop
xor
test
loope
test
int
dec
cmp
out
scas
int3
movsl
pop
mov
out
sbb
imul
inc
ljmp
jle
cmpsb
and
dec
xchg
mov
inc
daa
mov
enter
push
or
outsb
pop
jp
add
sbb
xchg
test
xor
aam
ret
out
xchg
cmp
xchg
les
xchg
leave
sbb
add
movsb
mov
cwtl
push
popa
pop
clc
loope
in
sub
aam
mov
divb
hlt
frstor
addr16
jb
stos
cmp
or
and
imul
inc
test
cs
push
repz
dec
mov
cmpsb
arpl
dec
mov
into
sbb
sub
lock
xor
fsubrl
xchg
push
je
arpl
xor
push
icebp
rclb
and
cli
shrl
sbb
insb
sarb
nop
inc
pop
cmc
lods
add
or
repz
scas
stos
mov
adc
outsl
movsb
mov
xchg
add
cmp
cmp
jmp
xchg
ficompl
jb
loop
push
lods
xchg
push
sub
sub
pop
aas
loop
outsb
dec
ficompl
xor
mov
jle
push
mov
and
and
and
sub
inc
xchg
sub
dec
push
dec
pop
in
jno
fcomi
push
push
in
and
mov
lock
mov
add
jecxz
inc
sub
pop
mov
popa
dec
shl
xacquire
push
ja
cmp
and
jnp
add
sub
popf
testl
sub
lret
xchg
sbb
or
lods
dec
inc
arpl
mov
mov
lret
and
xchg
popf
push
sbb
jne
ficoms
jg
sub
test
mov
std
jno
inc
repz
dec
jp
decl
ljmp
js
rclb
add
and
cmp
enter
pop
cs
dec
mov
mov
dec
jno
fildl
ret
adc
ret
leave
dec
dec
inc
ljmp
int3
dec
add
movsb
jb
mov
loopne
pop
ror
sub
ret
jmp
sti
mov
fisttpll
popa
mov
iret
and
cmpsl
leave
jno
jne
cs
xchg
fbld
xor
sbb
push
dec
and
pushl
jno
pop
mov
fimuls
push
mov
cmp
ret
loope
jmp
push
lret
cmpsb
in
mov
popf
neg
jp
imul
mov
mov
xchg
leave
ja
jne
sti
mov
movsl
jne
xlat
sub
pop
fnsave
rcll
mov
and
jp
jle
cmp
aam
movsb
notl
push
add
mov
lea
das
lods
jg
test
inc
outsl
push
lods
jecxz
pop
pop
dec
sub
lea
lret
andl
arpl
aaa
xchg
ljmp
test
mov
xchg
mov
lods
daa
aas
rorl
test
sbb
pop
vpmulhuw
les
movsb
cmp
cmp
aam
mov
xor
cltd
fnstsw
in
pop
mov
cs
fsubs
mov
setnp
jecxz
mov
inc
lock
push
int3
jno
scas
aas
inc
outsb
iret
mov
jnp
dec
in
loope
fiaddl
addr16
xchg
movsl
push
dec
rcrb
rolb
inc
data16
lahf
and
jp
sbb
push
push
pop
int3
adc
add
mov
lock
les
outsl
div
xor
add
mov
xchg
aam
shll
jo
sub
cmc
stos
imul
push
loopne
mov
lock
add
orl
xchg
pop
int3
sbb
test
xchg
subb
js
cmp
mov
xchg
xlat
pop
rorl
mov
xchg
sbb
or
xchg
and
push
lret
incl
cmp
cmp
in
xor
jge
cltd
xchg
mov
cwtl
xor
movsb
sub
sbb
mov
cmpsl
mov
lret
jb
mov
cmp
inc
pop
mov
lahf
jg
jecxz
mov
xchg
dec
mov
add
jp
insl
fstl
js
push
dec
mov
cmp
push
and
in
es
dec
push
mov
insb
insl
jl
cld
sub
fcomps
xchg
pushf
push
rcr
jge
sub
mov
or
ret
bound
xchg
mov
push
subb
aaa
cmp
outsb
mov
cmp
pop
pushf
sbb
fiadds
push
or
add
pmaddwd
ror
test
movsl
jl
test
xor
mov
fists
cmp
fsubr
lahf
cmp
leave
dec
xchg
xchg
fs
clc
mov
cld
cmp
inc
shll
xor
xchg
in
mov
mov
cmpl
xchg
pop
or
call
pop
push
pop
cmp
xchg
mov
iret
push
push
mov
scas
sbb
punpckldq
mov
sbb
fs
loopne
sbb
sahf
or
jne
mov
repnz
push
shrl
xor
dec
in
xor
mov
js
mov
mov
add
addb
xchg
xchg
sub
dec
mov
aam
dec
jbe
jns
imul
loopne
int3
cmc
fsub
imul
movsb
insl
dec
push
hlt
mov
in
test
dec
dec
pop
arpl
js
xor
es
or
stc
push
mov
inc
repnz
pop
or
lret
ds
test
loope
rorl
cmpb
xorb
pop
fldt
push
sub
test
jae
data16
ret
and
inc
xor
lea
jnp
mov
loope
test
sbb
imul
mov
ret
or
out
pop
push
mul
add
ljmp
in
push
sub
es
mov
push
negb
testl
pushf
sbb
fwait
inc
add
mov
in
pop
push
mov
iret
mov
stc
sahf
pusha
and
imul
inc
imul
cmc
mov
mov
sub
add
lock
jg
mov
mov
cmp
icebp
pop
pop
jbe
dec
inc
and
lahf
dec
inc
add
std
or
nop
inc
call
insb
ds
mov
les
xchg
mov
stos
adc
pop
cmp
sbb
pop
inc
sti
dec
pushf
and
arpl
add
addr16
push
ljmp
lods
dec
lret
add
dec
jmp
test
cmp
pop
cmp
shll
jmp
je
push
out
cli
pop
xchg
gs
negb
dec
push
jae
jb
test
cmc
jb
pop
lret
addr16
cmp
movsb
pop
sub
sub
loope
outsb
inc
and
mov
insb
cmp
aaa
jle
rcrl
sub
xchg
jbe
adc
pop
push
das
fptan
lds
fcmovnbe
nop
mov
cwtl
fnsave
inc
cmp
sub
pop
mov
roll
cmp
adc
sub
test
adcb
xchg
or
dec
shr
mov
rclb
outsl
cwtl
mov
not
push
xor
or
xor
mov
out
imul
rclb
add
pop
imul
aaa
int
xchg
lea
dec
das
imul
sarl
and
pop
cli
aad
aad
or
cmp
mov
pop
addr16
xor
divb
cmp
sbb
ja
jo
pop
enter
dec
idivl
ficompl
pop
les
xchg
std
ljmp
sahf
or
dec
jno
iret
mov
push
into
gs
hlt
add
andl
cltd
inc
pop
negb
jmp
inc
cmp
test
loopne
mov
inc
adc
xor
or
jo
cltd
aam
cmp
out
cmpsl
push
aam
add
bound
push
sub
mov
sbb
aam
out
repnz
addr16
adc
fisubrs
stos
and
mov
lock
fsts
ljmp
in
cmp
inc
or
dec
jl
xlat
or
jge
subl
aad
jno
inc
movsl
gs
pop
fs
push
dec
push
jb
in
sar
hlt
stc
stc
sbb
and
pop
pop
ljmp
xor
jle
mov
repnz
jge
hlt
gs
fcompl
stos
lcall
sub
insb
mov
data16
push
je
shll
pop
lods
ret
xchg
jecxz
mov
clc
mov
lds
out
jmp
enter
je
add
aam
js
movsb
or
stos
sti
pop
inc
test
cwtl
xchg
jbe
pop
add
shr
hlt
push
mov
les
pop
fwait
mov
sbb
mov
movb
arpl
and
stc
mov
scas
ret
jle
fwait
and
dec
mov
cmc
iret
and
imul
cmpsl
add
inc
mov
mov
mov
mov
mov
add
jnp
sbb
outsb
aaa
push
jb
test
das
outsl
jle
loopne
or
jb
sbb
fcmovu
lds
notl
outsb
xlat
sbb
fs
sbb
cltd
mov
pop
xor
or
xor
mov
mov
jmp
push
call
sub
cltd
mov
and
call
pop
or
mov
sub
mov
test
arpl
add
int3
hlt
out
es
jno
fcoml
test
or
fsubl
jnp
mov
inc
lahf
subb
fs
xor
jl
aaa
adc
movsb
aam
addr16
xchg
sub
mov
jl
mov
jp
or
add
movsb
push
inc
sbb
adc
fmull
in
outsb
loope
xlat
adc
arpl
push
jl
or
lods
and
fcomps
mov
inc
mov
pop
popa
mov
sbb
stos
inc
fidivrl
pop
xchg
ljmp
inc
xchg
pop
in
mov
in
idiv
mov
mov
stc
cli
jne,pt
loopne
mov
in
push
push
pushf
push
stos
mov
pop
popf
push
jmp
mov
rolb
and
sub
push
or
insb
mov
mov
iret
add
inc
add
dec
sbb
ljmp
jnp
je
and
xchg
add
jecxz
mov
sub
sbb
sbb
mov
push
sbb
inc
stos
cmp
mov
call
pop
mov
dec
add
mov
enter
xchg
xor
push
in
mov
xchg
xchg
imul
add
mov
jp
and
mov
sbb
mov
inc
inc
ljmp
inc
mov
sbb
imul
test
int
dec
pop
or
jae
outsb
scas
mov
pop
push
inc
movl
js
iret
push
pop
out
or
repz
cmpsb
mov
dec
sbb
jnp
cmp
xlat
dec
imul
jae
mov
outsb
repz
inc
mov
inc
sub
xor
xor
arpl
xchg
pop
push
push
stc
mov
xchg
movsb
lcall
inc
push
in
imul
mov
mov
pop
popa
pop
into
int3
or
mov
jg
and
xchg
push
dec
mov
push
in
xchg
mov
inc
fdivr
addb
cmc
xchg
add
insb
sbb
dec
mov
dec
in
iret
movsl
mov
cmp
rolb
dec
rcr
stos
mov
mov
and
xchg
push
mov
lret
xor
fidivrl
fwait
inc
in
mov
outsl
inc
arpl
adc
outsb
std
mov
dec
nop
int
cmpsl
add
xor
orb
outsl
jae
jne
scas
push
push
out
push
gs
inc
or
lret
insb
enter
jp
adc
lea
mov
pop
mov
cmp
fstpt
fsubp
cli
fst
aam
xchg
lods
cmp
lcall
cwtl
xor
cmc
pop
push
sbb
iret
lret
mov
or
fsubr
fnstsw
push
sub
neg
xor
faddl
inc
push
mov
cmp
inc
jno
std
lahf
lcall
inc
jno
pop
jecxz
pop
pusha
jl
xchg
sub
mov
mov
enter
mov
jo
mov
push
adc
add
out
test
lds
xchg
and
push
adcl
sub
pop
movsl
lock
lcall
xchg
fchs
xchg
mov
mull
pop
lods
adc
mov
je
or
sbb
mov
aas
xor
in
pop
adc
cmp
jle,pt
rcrb
ja
ret
pop
jle
sti
xchg
mov
xchg
xchg
aas
push
inc
outsl
fdivrl
adc
add
std
ret
fadd
push
xor
mov
sbb
adc
fnstcw
pop
fdivr
in
xor
dec
pop
jae
push
fidivrs
xchg
mull
sub
xchg
jg
jns
xchg
xor
stc
cmp
inc
mov
push
xor
push
cld
dec
out
stos
in
or
pop
or
mov
hlt
popa
cvtdq2ps
cmc
imull
lahf
xchg
clc
add
test
icebp
xor
std
in
push
inc
repnz
push
mov
in
add
jmp
jb
call
fistl
stos
insl
adc
jg
dec
xchg
in
dec
mov
mov
add
int
fldenv
jle
pushw
xchg
pushf
out
dec
js
lcall
cli
xchg
pop
xor
jne
jne
jge
hlt
jmp
mov
jne
jns
test
out
xor
or
sub
js
pusha
addr16
pop
pop
loop
cld
pop
or
lret
cmovnp
mov
xor
dec
scas
mov
pop
je
adc
push
pop
out
fs
inc
adc
jl
add
inc
test
leave
or
int3
push
push
fcoml
or
mov
movsl
aad
mov
dec
rcll
xor
mov
sbb
loop
insb
lea
icebp
incb
and
xor
pop
pop
dec
cmp
outsl
xor
in
sbb
jmp
scas
xor
mov
aas
jp
out
repz
ja
fwait
and
cmpsb
mov
inc
cmp
lods
mov
arpl
cmp
dec
mov
adc
mov
xchg
adc
cmp
into
or
mov
movsl
aaa
pop
inc
pop
mov
mov
pop
inc
mov
imul
out
pop
jp
mov
push
sub
pop
dec
push
pop
jmp
fdivrs
mov
adc
push
mov
mov
pop
pop
testl
sbb
std
movsb
fdivrs
cmc
addb
repz
cmp
inc
mov
jne
mov
imul
push
imul
inc
mov
ret
mov
jle
sub
es
push
mov
mov
popa
mov
sbbl
inc
ror
push
rcrb
insl
test
and
test
xchg
movsl
not
ss
enter
add
inc
dec
adc
ja
popa
dec
mov
ret
cwtl
inc
jae
loopne
jb
out
in
enter
jne
lods
jg
cmp
jae
insl
call
xchg
mov
add
addr16
loopne
scas
push
push
pop
push
stos
cmpsl
mov
stc
addr16
sub
or
sbb
daa
xchg
sub
scas
adc
retw
xor
xchg
fisubl
das
ret
int3
stos
xor
lcall
jb
out
insl
fbstp
scas
call
in
addr16
sbb
ret
movsb
cs
adc
jecxz
xor
pop
subb
mov
fnsave
inc
adc
mov
std
divb
or
sti
inc
aas
outsb
imul
mov
test
sbb
xchg
dec
lds
adc
cmp
add
xor
int
jl
roll
cmp
or
push
add
int
and
jo
jmp
inc
mov
mov
into
adc
lds
sub
pop
push
xor
in
aam
ja
add
je
pop
xchg
mov
mov
popf
cwtl
jle
rorl
inc
pop
je
jb
aam
pushw
lret
adcb
xlat
xor
jge
clc
pop
fiaddl
nop
lods
cli
and
imull
or
cmp
jmp
jmp
ds
mov
push
sbb
jnp
pop
pusha
add
mov
imul
fsubs
les
mov
mov
mov
stos
sub
leave
inc
rolb
xor
add
pusha
inc
mov
mov
push
repz
pop
subb
fbstp
insb
jns
adc
inc
push
pop
fs
pop
int3
inc
cmp
jne
xchg
adc
dec
testb
mov
jl
out
fsub
sahf
jmp
jge
inc
mov
cmpsb
bound
jne
in
sub
gs
ret
loop
inc
lea
lahf
imul
jo
das
cld
xor
js
jp
mov
repnz
pop
push
dec
pop
insb
daa
jl
xor
in
sbb
push
and
insl
popf
stos
cmpsl
inc
inc
inc
mov
fwait
dec
xor
mov
sar
pop
adc
push
jmp
jecxz
sbb
or
pop
xchg
push
lahf
out
fnsave
shll
jmp
loop
push
sbb
test
inc
adc
pop
jnp
push
cmc
sub
push
sub
stc
xlat
cmpsb
jno
push
aam
lret
loopne
xor
cmp
dec
mov
xchg
jns
cli
inc
push
sbb
xor
rcr
push
and
imul
push
stos
dec
pop
add
lods
mov
adc
mov
cmp
mov
ja
clc
test
xchg
xor
insl
loope
lret
fsts
sub
sub
mov
out
insb
int
push
and
inc
mov
mov
xchg
jl
push
push
push
dec
mov
fld
icebp
mov
dec
or
adc
inc
dec
arpl
dec
sub
xchg
push
jecxz
int
ficoml
movsl
xor
mov
leave
xchg
mov
jne
fsubrl
mov
xlat
push
jmp
adc
insb
push
push
dec
pop
daa
and
outsl
jnp
rolb
fistpll
shrl
inc
lahf
stos
mov
mov
or
inc
adc
push
and
xor
shl
pop
mov
xor
mov
fwait
or
push
dec
mov
stos
jp
std
popa
and
mov
lods
lock
push
xchg
insb
and
lods
insl
fiaddl
cmp
push
aam
sub
ds
enter
cmp
jl
xor
jb
dec
adc
aam
aas
jg
and
add
test
push
cmpsl
mov
sbb
xchg
aas
leave
lea
dec
in
hlt
push
sub
out
dec
cpuid
sbb
cmp
adc
lods
mull
mov
dec
jo
jge
pop
mov
test
pop
movsl
loope
sbb
jge
je
and
and
scas
movsl
xchg
xor
in
das
out
call
cmpsb
hlt
cmp
xor
addr16
sub
cltd
add
xchg
mov
jne
icebp
pop
sbb
cmp
cli
or
gs
enter
call
pushf
inc
mov
sub
idivb
rorl
sarb
mov
call
mov
or
inc
test
xchg
mov
xorl
push
or
ss
fsubr
hlt
outsb
xor
cs
adc
je
in
pop
mov
movsl
sbb
arpl
outsb
xor
push
int3
xorl
das
ljmp
cmp
lods
push
sbb
adc
sbb
dec
aaa
dec
in
push
hlt
aad
push
pop
out
in
xchg
outsb
pop
ret
mov
iret
fcomi
rcrb
mov
fmull
imull
fst
cs
pop
js
aas
and
inc
das
dec
and
or
adc
mov
fsubp
lcall
stc
xchg
jecxz
mov
and
push
leave
push
dec
fwait
je
mov
pop
xchg
ljmp
imul
cmp
pop
adcl
loope
pop
fbstp
scas
ficoms
aaa
cld
push
mov
add
and
ret
roll
push
nop
jmp
lret
cs
jns
cmp
xchg
sub
xlat
mov
addr16
xchg
ret
push
sub
cmp
pop
inc
xor
pop
test
dec
cld
loop
jge
test
nop
push
cmp
pusha
pushf
negb
mov
cmc
cmpsb
call
jns
and
pushf
push
data16
imul
daa
fstp
push
je
jge
and
sub
cli
inc
xor
mov
cwtl
xchg
popf
mov
mov
stos
lods
add
dec
add
jae
scas
lock
mov
aaa
mov
jecxz
jge
in
popf
mov
fbstp
lods
cmp
xor
int
ret
and
adc
lret
push
mov
xor
jno
pop
inc
ljmp
ja
cld
dec
add
leave
sub
fldenv
aaa
cmpsl
push
pusha
pop
inc
scas
pop
cld
insl
jle
cmp
movsb
inc
xchg
pop
jmp
arpl
xor
or
push
in
lcall
jb
mov
add
cmpsl
xchg
push
push
jmp
push
cmp
outsb
add
jp
movsl
imul
mov
fwait
std
add
fimuls
xchg
movswl
jmp
sub
dec
adc
xchg
int
nop
or
out
sar
loopne
out
mov
pop
jle
add
ret
rcll
and
cmp
clc
repz
ss
je
jg
and
incb
lahf
rol
enter
pop
sub
pop
xchg
sub
aam
fcom
sbb
mov
or
cmp
movsb
xchg
mov
outsb
cmp
xchg
movsb
rorl
pop
sub
sub
mov
cmpsb
outsl
sub
xor
stos
or
pop
cmpsb
daa
dec
loop
mov
jg
mov
push
imul
test
aad
ret
lea
jle
cmp
sbb
movsl
addr16
popa
push
fldenv
sahf
stc
stc
jecxz
inc
loop
push
dec
enter
out
cmp
cltd
popa
stos
hlt
addr16
cld
out
add
push
das
subl
lock
fildl
mov
push
push
addb
jge
out
xor
cwtl
shlb
xchg
push
push
int3
push
fidivrl
inc
xlat
cmpsl
subl
movsl
sahf
push
movsb
ja
fxch
mov
sub
xchg
cmp
mov
mov
aaa
push
popf
mov
pop
cmp
dec
fs
cmpsl
xor
inc
jmp
sbb
inc
mov
js
jns
push
leave
mov
jno
push
cmpsb
xor
sbb
lret
stos
addr16
jecxz
loopne
shll
push
dec
and
dec
push
rcrl
ret
add
test
dec
or
adc
cmp
stc
jecxz
rorb
cs
test
sub
mov
clc
inc
xchg
or
fwait
mov
xchg
ret
das
mov
dec
push
pop
pop
insl
jecxz
add
push
nop
shlb
enter
and
fisubl
lret
pop
xor
sti
cmpsl
mov
mov
fs
ljmp
shrl
inc
cltd
jno
jae
dec
mov
sub
push
shrb
fnstcw
xchg
gs
push
leave
xchg
xor
xor
hlt
je
insl
loopne
movsb
or
fidivrs
and
or
daa
insl
in
sub
xchg
ret
sub
sub
popa
insb
mov
insb
push
dec
pop
or
mov
sbb
leave
sub
jg
outsb
sbb
test
pop
sbb
jmp
dec
fistps
in
fs
dec
xchg
rcr
add
dec
mov
mov
push
cmp
xchg
push
ljmp
xor
mov
popf
pop
pop
inc
adcb
fst
test
inc
or
lret
shrb
rcrb
mov
push
stc
cmc
push
pop
fwait
ja
test
xorb
lods
fadd
test
lret
les
mov
inc
out
or
shrl
int
lods
cwtl
movsl
sub
ficoms
mov
inc
jmp
inc
mov
or
ss
rorb
sbb
data16
adc
icebp
scas
movsb
jno
js
fstpl
loope
push
jmp
adc
arpl
lods
inc
jnp
push
xor
xchg
movsl
mov
ret
adc
jge
inc
dec
dec
into
imul
and
add
fisttpll
enter
dec
cmpsl
cmp
scas
in
mov
bound
push
icebp
jl
fs
test
rcrl
jb
pop
inc
push
lcall
leave
negl
popa
mov
movl
daa
or
dec
out
outsl
shll
push
adc
adc
and
sti
xor
out
cmpsb
or
pop
movsb
imul
jae
cli
cmp
mov
jl
fisttpl
in
mov
xchg
and
data16
mov
sub
jb
xor
sbb
sahf
inc
adc
xor
add
ljmp
jecxz
rclb
fnstcw
cs
flds
repnz
jmp
int
jg
stc
js
add
pop
dec
fldt
push
fwait
sbb
mov
in
push
shl
out
sub
pop
push
pop
fwait
pusha
stos
cmpsl
daa
das
mov
aaa
and
ja
inc
out
addr16
fistpl
cmpsl
leave
outsb
mov
cmp
pop
add
andb
jns
add
and
aaa
xchg
inc
xor
mov
cli
jp
stos
sbb
in
lret
push
dec
add
daa
jle
cmpsl
int3
xor
hlt
gs
sbb
lahf
sub
jmp
and
orb
clc
hlt
pmaxsw
sub
xchg
pusha
xor
and
lret
mov
mov
inc
xlat
popf
ret
xchg
mulb
sub
push
mov
adc
aaa
mov
pop
add
ljmp
ret
lds
sub
jo,pn
sub
sti
in
test
stc
mov
mov
out
cmp
pop
jge
xor
and
stos
in
xchg
in
or
mov
jns
push
idivb
cld
fnsave
lcall
out
adc
push
adc
jno
xlat
dec
pop
push
mov
adc
mov
ljmp
push
jp
loopne
cli
cltd
insl
inc
push
mov
int
je
lock
repz
xor
push
xor
xor
pop
addl
in
inc
xor
mov
es
jne
fsub
push
mov
popf
cmc
repz
sub
pop
jle
repnz
sub
sbb
lret
cmp
out
mov
pop
je
mov
push
inc
fwait
call
xor
jo
fnsave
push
bound
jbe
iret
adc
cmpsb
adc
push
pop
lret
inc
lret
xor
loope
ds
dec
out
rcrl
aaa
inc
rolb
iret
test
outsb
inc
sub
mov
fldl
loopne
roll
xlat
inc
imul
mov
sbb
pushf
ljmp
in
cmp
add
or
fstps
cld
jecxz
out
adc
hlt
mov
pop
add
and
mov
mov
pop
pop
cmp
test
xor
negb
dec
sbb
jno
adc
loope
or
jno
pop
fcoms
pop
mov
adc
push
pop
mov
inc
mov
or
jg
pushf
call
sub
test
test
xchg
xor
push
rorb
dec
hlt
sub
in
pop
stos
push
test
scas
mov
lock
jg
push
ret
inc
hlt
je
lret
pop
push
popa
adc
mov
dec
and
lea
incb
xchg
and
sti
adc
sbb
sti
xchg
aas
xchg
repnz
int3
int
hlt
lret
out
subl
sti
jb
adc
scas
shl
or
test
rcrl
movsb
imul
imul
enter
mov
or
popa
sbb
push
lods
inc
mov
mov
les
stos
adc
or
lock
xchg
jnp
mov
xor
add
sbb
pop
sub
roll
pop
push
lret
jle
cld
fwait
add
fistpll
or
ljmp
aad
jmp
xchg
or
pop
outsb
out
insl
movsl
sub
dec
cmp
xor
ss
ja
mov
cmp
add
push
fidivs
lcall
loop
xor
test
scas
bound
push
fstpt
mov
icebp
sbb
xor
xlat
push
or
pop
int3
adc
mov
fs
pop
and
mov
cmpsb
loope
cmp
les
cltd
jge
sbb
mov
push
push
xor
fimull
dec
xor
push
scas
scas
mov
xchg
imulb
mov
pop
dec
jae
in
lahf
fbstp
test
cli
mov
scas
aas
xor
inc
fsubs
nop
es
cmp
sbb
iret
push
push
testb
and
pop
pop
lods
mov
out
xchg
cmpsl
cmp
cmp
mov
sub
mov
pop
dec
stos
out
mov
daa
jge
rcrb
std
pusha
pop
lcall
test
imul
ret
dec
test
int3
out
lods
idivl
enter
xchg
inc
jmp
add
dec
adc
cltd
lods
pop
adc
inc
xchg
pop
fsubrs
outsb
mov
push
or
add
mov
or
ret
mov
cmp
push
cld
sarl
cmp
adc
push
inc
mov
pop
jl
hlt
inc
mov
movsl
mov
or
inc
push
js
fsubrs
mov
lods
imul
fmuls
pop
push
cmpsb
pop
faddp
pop
faddl
bound
test
rcl
mov
dec
imull
xchg
stos
jl
dec
mov
cld
ficoms
inc
fs
xchg
imul
dec
les
jecxz
mov
popf
add
push
dec
pop
repz
add
fisubs
mov
pushl
add
xchg
stos
sbb
xor
lahf
in
inc
inc
xchg
push
pushf
mov
ret
jae
pop
in
xchg
aaa
jl
and
ljmp
sbb
addb
mov
cmp
jmp
cld
movsb
and
in
jmp
test
jecxz
imul
insl
pop
xor
ja
adcb
adc
cmpb
cld
insb
popa
pusha
pop
inc
adcb
bnd
pushf
xor
clc
add
test
je
shrb
movsl
arpl
cmp
rcr
add
pushf
aam
fnstsw
lds
adc
add
dec
and
pushl
jecxz
mov
repz
sahf
filds
jns
pop
inc
push
adc
adc
sbb
in
push
fcmovbe
cli
movsb
ret
xchg
fistpll
nop
lret
rolb
fadd
mov
jecxz
mov
push
push
lods
mov
sbb
sbb
test
mov
nop
jge
test
scas
xor
addl
mov
add
inc
ljmp
imul
test
mov
mov
aam
in
je
push
fistpll
and
mov
shl
addl
push
ret
sti
xlat
jbe
push
pop
inc
push
in
sbb
lods
sbb
jle
sub
mov
sbbb
shl
inc
or
sub
fstps
pop
enter
pop
cwtl
in
mov
xor
aad
ljmp
das
cmc
test
sbb
xor
dec
inc
or
scas
or
adc
push
out
add
sbb
shr
loop
sahf
lcall
lea
nop
mov
fcomps
sub
cmp
sbb
add
insb
adc
push
lock
dec
sbb
pop
push
flds
shl
sti
add
push
into
adc
scas
or
push
psubusw
cmc
icebp
mov
mov
inc
test
in
ret
repz
dec
cmp
inc
xor
fs
jle
les
push
mov
mov
mov
adc
paddsb
gs
fldcw
lahf
sbb
fnstcw
sbb
push
outsl
push
es
lret
fs
in
testb
fwait
js
stos
sar
lock
inc
push
push
aam
pop
testb
ss
sbb
xchg
lahf
dec
es
shrb
in
mov
mov
add
and
push
rcr
stos
mov
xchg
sbb
sbb
imul
push
push
cmp
shr
scas
psubusb
ficoml
out
ds
xor
mov
arpl
jg
xor
test
cmpsb
push
or
int3
add
cwtl
aam
jb
jmp
mov
lahf
sbb
lret
mov
cmp
lds
push
inc
dec
call
mulb
mov
xchg
stc
outsb
popl
inc
push
jmp
imul
sbb
sti
and
push
jb,pt
adc
ja
arpl
sbb
hlt
jae
outsl
add
fldl2e
movsl
int3
add
enter
sub
add
push
pop
cmovns
dec
mov
or
scas
lcall
in
xor
dec
ja
push
iret
lods
movsb
das
pop
test
lcall
scas
jl
add
jb
push
and
frstor
cmp
das
or
adc
adc
pop
push
pop
imul
jl
inc
lds
adc
pop
inc
pop
jns
cmp
sub
inc
jp
mov
xor
rol
arpl
testl
loope
sub
push
shl
mov
movsl
and
je
loope
subb
out
mov
mov
pop
xor
add
pop
cmp
xor
nop
pop
push
scas
sarl
and
pop
mov
or
dec
jne
mov
xor
mov
cmpsb
pushf
es
sti
pop
loop
clc
test
xor
jl
js
sbb
jl
sbb
pop
mov
xchg
out
mov
pop
lahf
aad
in
fwait
iret
std
ja
mov
jns
scas
outsl
mov
std
or
sahf
popf
sub
pusha
dec
push
jp
push
push
xchg
testl
sti
mov
ss
das
and
icebp
ret
std
push
ss
imul
xchg
test
and
and
or
rolb
push
cmp
mov
push
and
jb
pusha
orl
adc
and
xor
call
aad
das
and
js
mov
stos
lahf
adc
cs
loopne
lret
or
sahf
or
push
loop
push
jno
sub
sub
xchg
mov
adc
xorb
adc
xor
filds
in
sub
mov
pop
add
sub
inc
xor
test
add
sub
mov
test
jbe
sbb
add
cmp
adc
jg
sti
shrl
ret
inc
sub
outsb
int3
addr16
mov
jo
dec
insl
mov
adc
jge
mov
mov
xlat
adc
clc
sub
sarl
xor
fcmovnu
mov
mov
fwait
pop
out
adc
pop
mull
and
mov
nop
and
jno
and
es
adc
inc
sbb
std
sub
sub
ds
mov
push
pop
adcl
jae
lcall
and
cli
fs
insl
and
pop
movsb
ret
fisttpl
movsb
jbe
jmp
jns
mov
or
jle
or
ds
or
mov
in
imul
fnstcw
sarl
mov
xor
std
push
xlat
fisttpl
mov
push
sub
adc
repz
pop
in
cmpsl
bound
jp
pop
popa
pop
or
mov
mov
jg
mov
sub
popf
ss
sub
sti
mov
mov
les
maskmovq
notl
jae
scas
xor
hlt
xor
xlat
inc
lret
dec
mov
xor
mov
test
aaa
imul
enter
cs
cmp
loope
jp
mov
leave
rcll
imul
xchg
xchg
mov
sbb
js
ja
jp
xchg
mov
mov
xor
push
pop
fndisi(8087
sub
xorl
cmp
cmpsb
stc
lea
fninit
or
test
lea
stos
out
ret
jae
repz
inc
bound
xchg
insl
add
loopne
bound
sub
mov
push
add
scas
push
imul
mov
sub
mov
sub
out
orl
cld
fwait
testl
sub
jmp
andb
mov
in
or
cmp
lar
jle
add
ret
push
cmp
dec
loop
bound
popf
sbb
mov
sbb
jmp
sbb
fucomip
mov
data16
mov
scas
dec
ja
add
jne
pushl
dec
or
mov
icebp
lods
lods
and
inc
aas
xchg
outsl
pop
sbb
xchg
or
outsl
sub
or
or
mov
jnp
nop
fcompl
test
bound
mov
cmpsl
add
cmp
loopne
dec
add
ljmp
inc
jmp
and
cmp
sub
bound
rcl
iret
sub
and
stc
leave
sbb
ja
adc
pop
cli
mov
adc
xchg
rorb
lds
xlat
into
stos
pop
and
stos
mov
xorb
sub
insl
shll
jbe
pop
in
std
jno
insl
jbe
sahf
aad
addr16
push
mov
into
gs
mov
inc
pop
inc
nop
adc
lds
ftst
xor
jo
shlb
pop
mov
inc
mov
int3
ss
loopne
fdivrl
iret
lret
ja
dec
in
mov
jle
icebp
xchg
sbb
repnz
clc
jl
add
inc
test
inc
lods
fs
out
mov
rcr
jg
fwait
dec
sbb
cmp
mov
fldl
inc
lret
sub
push
xchg
gs
ret
mov
sti
mov
out
inc
mov
bound
cld
shlb
xor
dec
push
sbbl
aaa
fistpll
mov
cmpsl
andb
pop
jbe
and
push
adc
dec
cmp
cld
testl
adc
push
adc
xchg
push
push
shlb
jae
scas
inc
stos
xor
push
ret
ret
out
outsl
sub
adc
sbb
stos
and
or
jnp
int3
jb
adcl
out
dec
adc
cmp
fimuls
rcr
jp
jmp
lcall
mov
scas
scas
fidivrl
jno
inc
lods
jns
pop
mov
clc
mov
loope
aam
fsubrs
and
movl
jno
int
int3
jo
sbb
mov
jle
sbb
dec
aam
int3
pop
notl
je
call
push
lcall
jecxz
mov
mov
aas
sbb
sub
repnz
jnp
xchg
dec
sahf
stos
mov
sbb
mov
or
push
xor
jecxz
repnz
xor
loope
sbb
mov
test
inc
fucomi
mov
jmp
outsb
pop
cltd
bound
dec
aaa
into
mov
mov
or
fisubl
dec
sbb
jns
aas
icebp
ss
jbe
repz
dec
dec
loopne
dec
and
sub
dec
into
fldl
in
cmc
repz
xor
sbb
jno
loop
sarb
xor
pop
sbb
sub
aam
dec
pcmpgtw
cmp
ljmp
out
popa
rcrb
enter
mov
fwait
lret
in
mov
xor
cwtl
shll
repz
gs
push
xchg
mov
cmp
mov
add
call
mov
rcl
xchg
mov
push
or
sbb
movsl
xchg
popa
adc
sbb
mov
jnp
or
xchg
out
sbb
insl
dec
repz
push
fwait
xor
xor
arpl
js
mov
inc
cmp
aad
leave
pusha
inc
jmp
push
push
jecxz
mov
idivb
sbb
scas
inc
cmp
cmpsl
fdivs
jle
cli
cmpsl
rol
xchg
or
ljmp
sub
pop
testb
xchg
push
js
stos
push
sbb
fcmovu
bound
xor
decb
cs
sub
xor
mov
push
mov
lods
mov
fistps
test
mov
mov
pop
mov
in
std
or
mov
and
aam
movsb
sub
or
test
mov
jge
pop
inc
dec
mov
sub
dec
jne
sbb
dec
xlat
or
pop
sub
out
xchg
push
push
mov
or
mov
add
cmp
mov
or
add
scas
xor
push
inc
push
shrl
and
out
movsl
xchg
cmc
or
mov
int
xor
in
addb
inc
mov
cmp
movl
outsb
sbb
cmpsb
cli
pop
pop
inc
ja
jns
adc
mov
adc
mov
jnp
testl
add
sub
cmp
mov
mov
dec
into
call
dec
imul
mov
xchg
xchg
out
scas
push
and
or
and
dec
fdivr
inc
scas
adc
inc
out
xchg
and
fisubs
pop
inc
lock
js
and
rcll
movsb
xchg
cwtl
ret
nop
stc
les
cltd
je
insb
fbld
ret
fsubl
les
je
push
or
inc
into
mov
fdivrl
add
test
sbb
add
mov
mov
jne
fisttpll
pop
xor
loopne
fidivl
mov
in
lds
jg
or
fs
lock
sub
mov
xchg
sbbb
mov
ret
iret
dec
mov
mov
pop
cmp
shl
fists
mov
add
xorb
jge
xchg
fisubrs
lock
fsubl
mov
lods
js
mov
pop
push
push
jbe
cmp
push
sub
cmpb
adcb
cmpsl
add
aaa
and
in
je
fmul
push
jno
sbb
pop
mov
xor
jl
nop
jb
and
sub
faddl
setae
pusha
mov
fistl
mov
mov
test
pop
push
and
jecxz
cmp
and
mov
dec
mov
int3
jbe
clc
sbb
dec
dec
je
or
add
jge
pop
pop
gs
imul
es
pusha
inc
push
pop
push
push
jg
mov
cmp
fwait
mov
mov
fcoml
lds
test
movsl
lds
jbe
add
test
adc
pusha
cmp
js
sbb
push
push
push
dec
push
push
xor
xlat
iret
lahf
cli
incb
pop
out
mov
pusha
stc
jbe
jge
cmc
mov
mov
repz
test
bound
faddl
mov
lds
mov
fstps
pop
idivl
pop
and
aaa
repz
into
push
je
or
adc
jmp
out
dec
pusha
mov
arpl
in
sub
test
in
pop
out
cmp
jne
filds
pop
lcall
pop
jge
push
fadds
sub
std
stos
jae
pop
mov
mov
xor
stos
sbb
xor
cmp
pop
pop
fisttps
cmp
jecxz
lahf
popa
jle
movsl
push
inc
or
pop
or
mov
cli
pusha
xor
inc
inc
cmp
fs
and
push
or
aam
cs
sub
out
jp
dec
jo
das
sbb
add
loopne
pop
cmc
sbb
jl
sub
mov
cld
test
or
out
jb
sar
mov
lret
mov
fbld
arpl
push
adc
fstl
mov
lock
push
sar
jns
outsl
adc
mov
rcr
int
pop
jne
in
xor
xor
mov
ret
mov
in
int
filds
aas
mov
inc
sar
mov
popa
mov
or
dec
pop
dec
xchg
sub
neg
into
cltd
mov
cltd
outsl
les
sarl
jmp
mov
rorb
inc
or
mov
pushf
das
adc
xor
xchg
xchg
jg
jecxz
sub
jns
scas
lods
and
in
add
sub
push
pop
dec
aam
xor
dec
lods
popl
inc
adc
ja
and
jae
and
loopne
sbb
int3
std
xchg
stos
xchg
es
ds
clc
mov
rcll
add
fcomps
mov
arpl
push
inc
and
xor
and
cmpsb
insl
xchg
jmp
insl
ss
lods
rcrb
jp
mov
xor
push
sbbl
and
cwtl
mov
adc
imul
add
mov
es
lods
movl
call
repnz
sbb
lods
std
js
nop
and
inc
insb
mov
pop
pop
jb
xor
frstor
xchg
out
push
xchg
loop
mov
scas
dec
call
popf
ljmp
imul
jmp
mov
push
dec
icebp
rcrb
and
aaa
jmp
addr16
and
leave
mov
jle
mov
fs
inc
ds
mov
daa
sub
xchg
adc
cmp
jp
xlat
repnz
jg
inc
pop
in
jae
adc
push
xchg
sub
int3
icebp
or
mov
mov
fnstcw
mov
and
and
stc
nop
dec
ja
fiaddl
nop
std
push
mov
les
mov
iret
hlt
pop
push
sbb
outsl
cmp
sarl
cmp
mov
xor
inc
int
mov
divl
xchg
pop
dec
aas
sbb
xchg
test
stos
jecxz
nop
aam
xchg
ds
sub
jns
push
test
sub
xchg
adc
call
call
inc
sahf
std
ret
xor
adc
pushf
in
add
sbbl
lods
fdivs
out
inc
cmp
clc
and
pop
cmp
push
inc
inc
push
aas
mov
add
xchg
js
and
cmp
xchg
ret
lods
aad
mov
dec
xor
inc
sub
fimull
mov
push
cmpsb
add
jp
mov
idivb
lret
sub
cs
pop
lods
notl
cmpsl
lock
jno
push
js
and
outsb
out
adc
enter
sbb
enter
aam
pusha
dec
cmpsb
push
arpl
mov
jno
les
dec
cmpsb
jecxz
mov
cmpsl
mov
test
movsl
lock
xchg
int
cs
push
inc
push
xchg
cmc
jne
jmp
lea
mov
sbb
sub
cmp
lret
inc
or
ret
out
xchg
in
pop
cs
mov
nop
add
xor
dec
out
insb
stos
and
gs
mov
jmp
fmull
cmp
ret
lret
inc
aaa
xor
fsts
lods
push
jbe
sub
pop
jge
sbb
cmp
jecxz
hlt
push
mov
push
test
pop
in
cmpsb
push
dec
scas
or
jne
fwait
pop
dec
std
std
xchg
loope
jbe
push
pop
ja
mov
lods
fwait
sbb
lock
xor
std
out
jns
jns
cmp
sub
int
sub
lret
dec
cli
mov
jae
xchg
pop
mov
cmpsb
into
inc
outsl
cmp
xchg
gs
vmread
rcll
pop
or
or
filds
or
subb
lds
daa
fcomps
jge
sub
xorb
mov
mov
adc
lret
dec
dec
shll
in
test
rorl
enter
jp
movsb
dec
sub
mov
and
xor
imul
adc
mov
push
add
xchg
mov
and
mov
repnz
xor
mov
mov
ljmp
cwtl
cmp
subb
jbe
fldenv
sbb
jae
sarl
sub
popa
outsb
addr16
movsb
xchg
add
mov
inc
jle
pop
mov
fnstsw
mov
sbb
movsb
xor
jns
add
sub
mov
sub
xchg
pop
xor
test
xchg
jecxz
xor
ret
js
shlb
or
add
inc
aam
pop
adc
sti
popa
ds
mov
movsl
scas
cmp
lea
test
inc
popa
lahf
movsl
sub
dec
int
sarl
pop
mov
aaa
cmp
shll
mov
sub
in
cmpsb
ljmp
cmp
out
xlat
or
lods
rdmsr
mov
iret
stos
mov
es
xlat
adc
lds
sbb
inc
adc
movsl
jge
lea
mov
scas
int
pop
add
cs
sarb
xor
pushf
or
inc
mov
jae
add
or
sbb
push
cmp
movsl
sub
nop
mov
xchg
cmp
out
jno
dec
or
pop
push
pop
jns
mov
cmpsl
jmp
outsl
es
andb
pop
ljmp
sbb
nop
sti
sti
jmp
ds
or
je
dec
gs
sub
push
out
fldt
dec
jbe
outsl
or
imul
loope
mov
es
xor
mov
xchg
sub
push
or
cli
cmp
dec
test
fldt
movd
fadd
aam
mov
incl
popf
and
fldcw
pop
cmpsb
sub
iret
jl
xchg
mov
adc
xor
pusha
push
outsb
clc
pop
cmc
lea
test
cmpsl
pop
sbb
jns
and
adc
sahf
leave
es
cmp
push
sti
sub
xchg
pop
cmc
flds
jbe
mov
sahf
cmp
sub
jmp
outsb
inc
or
mov
inc
negb
cs
std
inc
add
lods
ljmp
out
xchg
mov
out
mov
mov
lahf
mov
js
imull
or
or
pop
add
scas
sti
pop
jl
push
scas
aad
inc
cmpsb
and
cwtl
icebp
pop
xor
mov
addr16
je
xor
mov
pusha
mov
or
rolb
push
test
pop
push
sub
jg
xchg
xor
repnz
push
xor
mov
cmp
loope
push
das
out
inc
add
lods
cmovl
push
adc
insb
ss
xchg
das
mov
dec
fsubr
mov
push
cwtl
mov
std
xchg
pushf
mov
imull
xchg
mov
and
and
sbb
lods
xchg
pop
mov
inc
pop
movsl
lahf
jmp
sbb
movsb
jo
rcr
ret
xchg
mov
popa
imul
ret
xchg
lds
stc
inc
fcompl
adc
xor
fs
daa
cltd
jb
xchg
repz
pop
lret
fwait
mov
dec
hlt
inc
test
push
lds
jbe
cmp
scas
add
outsb
sub
or
aad
data16
test
sbbb
mov
xor
pop
lods
push
enter
adc
les
jmp
push
jno
ljmp
mov
fistpl
jo
lret
mov
mov
push
fdivr
jg
sub
cli
shl
inc
daa
inc
mov
aad
icebp
aaa
mov
mov
mov
inc
push
ja
shrb
mov
je
xor
scas
insb
es
mov
call
mov
ret
and
lcall
mov
cmp
and
adc
addr16
mov
icebp
test
dec
addr16
stos
mov
sub
outsl
xchg
push
pop
pop
cmp
das
mov
adc
or
pop
mov
mov
sbb
push
je
lds
push
repz
cmp
adc
pop
inc
xor
jbe
addr16
mov
data16
out
xchg
mov
xchg
add
fs
jle
inc
rcrb
outsb
xchg
dec
cmp
mov
push
mov
add
add
mov
pop
push
inc
and
adc
test
adcb
mov
mov
lods
imul
or
mov
cmp
jb
xchg
mov
pop
hlt
rorb
inc
sub
cld
or
rcrb
ds
pop
int3
loop
cmc
test
arpl
movsb
sub
adc
daa
sahf
jb
jp
ja
loope
and
popf
fldl
ds
das
and
or
xor
out
mov
xchg
adc
lods
xchg
mov
in
fcmovne
outsb
push
shlb
sbb
nop
xchg
test
sti
inc
sbb
adc
sub
mov
iret
insb
daa
pop
movsl
loopne
sbbb
mov
mov
outsb
jno
mov
dec
popf
jg
test
add
mov
xchg
and
aad
out
pop
mov
cld
push
mov
lds
dec
mov
cmc
fistpl
cmc
iret
dec
je
sbb
std
enter
add
xchg
xchg
cmpsl
cwtl
lods
fiadds
pop
mov
faddl
xor
xchg
std
dec
push
nop
mulb
adc
int
cmc
inc
sub
insl
inc
lods
dec
mov
in
cmp
stos
test
sbb
mov
cwtl
inc
jno
mov
in
rcrb
fnstsw
popl
xchg
std
addr16
add
jecxz
xchg
pop
adc
cs
repnz
dec
mov
scas
out
ja
push
movsb
cmp
jmp
das
addr16
js
inc
mov
out
loop
lret
cli
out
in
or
test
cmpsl
xor
sbb
inc
jb
sub
inc
jmp
push
stos
ljmp
mov
sbb
sbb
adc
rcl
jae
inc
mov
insl
aas
aaa
repnz
jb
mov
add
leave
les
out
mov
sbb
lahf
dec
jb
inc
xchg
mov
int
inc
ret
xchg
das
in
add
and
or
or
cmp
push
movsb
pushf
fidivs
lods
inc
lock
sbb
cmpsb
lret
loope
je
sub
aas
cmp
fistps
fsubrl
fistps
inc
shll
fndisi(8087
shlb
mov
mov
mov
aad
mov
pop
ss
scas
xchg
pop
cmp
lea
mov
ja
pop
idivb
ljmp
xor
xor
pushf
andb
sub
fs
mov
idivb
xchg
fdiv
subb
orl
rolb
repnz
jle
mov
pop
notl
cltd
jecxz
enter
xchg
lret
mov
inc
push
test
addr16
mov
sar
xchg
imul
rol
out
cli
mov
fiadds
pop
aaa
repz
cmp
lock
out
jno
inc
mov
inc
xlat
arpl
push
in
push
aas
add
jle
sub
out
js
fwait
push
push
adc
jge
gs
inc
jg
pop
sbb
mov
mov
cmp
dec
aam
cmp
push
aaa
sub
lret
adc
inc
lds
fdivrl
and
jne
or
mov
fistpll
adc
add
push
clc
sbb
sub
mov
or
mov
into
clc
scas
pop
jno
xchg
jbe
inc
or
push
adc
sbb
scas
add
addr16
sbb
imul
js
and
fistpll
jle
push
cmp
dec
lds
movsl
mov
sub
mov
sarl
outsb
lods
xor
add
or
mov
and
pop
nop
cltd
adc
insl
fiaddl
outsb
jl
adc
js
sub
inc
sbb
arpl
mov
outsl
icebp
ja
jmp
ficoms
imul
inc
dec
inc
jl
cli
mov
sub
lcall
push
repz
xor
idivb
inc
push
dec
inc
mov
mov
inc
jmp
adc
ret
sub
sldt
adc
mov
push
jp
cmc
cmp
mov
sarb
xchg
push
pop
mov
jno
loope
jg
stc
stos
adc
xchg
xorl
std
cmp
add
rcrb
hlt
ret
lods
fadd
pop
dec
mov
mov
jmp
mov
daa
andb
fadds
ficoms
push
incb
fisttps
mov
add
test
fisttpl
repz
iret
pushf
xchg
fdivr
repnz
divb
lret
bound
and
xlat
xor
cmp
mov
pop
popf
or
sub
or
mov
es
outsl
and
dec
cltd
loope
sbb
push
cmp
dec
scas
fildl
or
inc
es
out
push
and
mov
syscall
lcall
pop
mov
sub
in
mov
mov
iret
test
or
int3
aas
mov
jbe
inc
popa
int
pop
xchg
sbb
dec
fcoml
mov
