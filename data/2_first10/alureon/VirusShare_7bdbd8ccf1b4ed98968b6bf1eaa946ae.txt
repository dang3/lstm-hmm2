push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
push
mov
testl
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
pop
ret
push
mov
push
andl
push
lea
push
push
call
add
cmpl
je
push
pushl
call
pop
pop
test
jne
push
mov
push
call
push
call
push
call
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
push
call
push
call
push
call
mov
pop
jmp
mov
leave
ret
mov
mov
ret
mov
push
mov
xor
cmp
jne
mov
jmp
mov
push
mov
mov
test
je
mov
inc
inc
decl
jne
cmpl
pop
jne
dec
mov
movb
pop
ret
push
mov
sub
mov
mov
mov
sub
mov
je
mov
test
je
push
mov
add
test
je
push
push
mov
sub
mov
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
addl
decl
jne
mov
test
jne
pop
pop
pop
xor
inc
leave
ret
mov
push
mov
push
mov
xor
mov
test
movl
je
push
call
pushl
call
mov
xor
inc
pop
pop
ret
push
mov
sub
push
push
mov
xor
cmp
je
mov
cmp
je
cmp
je
cmp
je
add
push
lea
push
push
call
mov
add
add
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
sub
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
mov
mov
lea
ror
mov
lea
add
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
cmp
jb
mov
mov
test
je
mov
sub
mov
mov
inc
dec
jne
pushl
mov
pushl
pushl
pushl
pushl
call
mov
mov
mov
call
mov
add
push
pushl
pushl
pushl
call
add
pop
jmp
xor
pop
pop
leave
ret
mov
push
xor
cmp
je
cmp
push
mov
je
push
call
jmp
push
push
push
pushl
call
push
push
push
pushl
call
push
push
push
pushl
call
pop
pop
ret
push
call
pop
ret
push
mov
mov
mov
mov
mov
mov
cmp
jb
push
push
mov
mov
mov
lea
xor
test
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
mov
mov
lea
ror
lea
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
mov
inc
cmp
jb
pop
pop
pop
ret
jmp
push
mov
sub
mov
push
push
push
push
mov
movl
call
andl
movl
mov
movl
mov
mov
movl
mov
mov
mov
mov
mov
imul
xor
add
incl
mov
push
push
mov
call
mov
mov
mov
mov
mov
xor
mov
div
mov
mov
mov
mov
sub
not
add
xor
mov
mov
incl
add
cmpl
jb
cmpl
je
mov
mov
jmp
push
call
mov
mov
mov
xor
push
push
push
push
call
movl
mov
push
shl
push
add
incl
push
push
call
mov
mov
test
je
push
call
mov
push
push
call
mov
call
add
cmpl
je
cmpl
jne
lea
push
push
pop
add
xor
div
push
pushl
push
call
mov
push
push
push
push
call
lea
mov
lea
add
lea
add
mov
mov
mov
mov
and
call
mov
mov
mov
call
mov
mov
push
push
mov
xor
push
push
mov
mov
call
mov
lea
push
push
push
lea
push
pushl
movb
pushl
movb
push
call
push
push
push
call
mov
call
mov
call
test
je
pushl
mov
pushl
pushl
pushl
call
cmpl
mov
jne
push
call
test
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
push
lea
sub
mov
push
push
push
push
push
push
mov
call
push
push
call
test
je
push
xor
push
call
push
mov
call
mov
cmp
je
lea
push
push
call
mov
mov
mov
mov
push
push
mov
call
cmp
jne
movl
push
push
call
push
push
mov
call
xor
cmp
setl
mov
mov
cmp
mov
je
mov
cltd
sub
sar
mov
push
push
call
mov
neg
sbb
and
add
push
mov
call
push
mov
call
movzwl
push
call
pop
pop
push
push
push
call
push
push
push
call
push
push
lea
push
call
lea
push
call
mov
mov
mov
movzwl
xor
jmp
cmp
jne
cmpw
je
inc
inc
mov
cmp
jne
jmp
xor
inc
lea
push
movl
movl
call
mov
push
pushl
call
push
push
push
push
push
pushl
mov
call
cmp
mov
mov
jne
xor
push
pop
lea
rep
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
movl
movl
movl
mov
movl
movl
call
test
je
mov
push
mov
imul
cltd
pop
idiv
push
push
mov
mov
add
mov
lea
mov
mov
shl
mov
lea
push
call
mov
mov
sub
sub
mov
cmp
mov
mov
jle
mov
push
pushl
neg
push
push
pushl
sbb
push
push
push
and
add
push
push
push
push
call
cmp
mov
je
lea
push
call
push
push
push
pushl
call
test
jne
call
xor
jmp
call
pushl
call
pushl
pushl
call
pushl
call
push
pushl
call
mov
xor
cmp
sete
push
call
cmp
je
call
cmpl
je
cmpl
je
push
push
push
pushl
call
xor
inc
pop
pop
pop
add
leave
ret
mov
push
mov
sub
mov
push
mov
push
push
lea
mov
call
lea
xor
call
test
je
test
je
cmpb
je
mov
push
call
mov
push
mov
call
mov
lea
push
call
mov
test
je
push
push
push
push
call
add
push
call
test
je
push
push
push
call
mov
test
jge
push
push
push
call
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
call
mov
mov
pop
pop
pop
call
leave
ret
push
mov
sub
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
jne
inc
jmp
andl
push
push
lea
lea
cmpl
mov
je
mov
mov
jmp
mov
mov
add
xor
nop
movb
mov
mov
inc
cmp
jb
mov
test
je
lea
movsbw
mov
add
inc
mov
test
jne
lea
push
call
mov
test
je
mov
mov
add
andl
cmpl
mov
je
mov
mov
testl
je
push
call
mov
and
push
pushl
call
push
jmp
push
call
push
call
mov
add
add
push
pushl
call
push
mov
call
cmpl
je
incl
mov
mov
lea
cmpl
jne
mov
incl
mov
imul
add
mov
add
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
test
je
andl
mov
sub
add
mov
mov
mov
lea
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
cmpl
mov
je
or
sub
mov
mov
sub
add
mov
mov
mov
lea
push
push
push
call
mov
mov
mov
sub
add
mov
movzwl
add
lea
movzwl
lea
mov
mov
mov
andl
xor
cmp
jae
mov
mov
mov
mov
mov
mov
addl
add
push
pop
rep
mov
add
add
incl
mov
movzwl
cmp
jb
mov
mov
add
pop
mov
xor
pop
inc
pop
leave
ret
mov
push
mov
sub
mov
push
push
push
mov
mov
mov
push
mov
lea
push
pushl
pushl
call
lea
xor
test
je
push
push
push
call
add
test
je
push
add
push
call
inc
pop
add
cmp
pop
mov
jl
mov
mov
pop
pop
mov
pop
call
leave
ret
push
mov
push
push
mov
imul
push
mov
cmp
jb
mov
push
call
mov
add
imul
push
xor
pop
div
mov
mov
mov
mov
sub
mov
test
je
mov
sub
push
mov
call
xor
divl
mov
add
cmp
jae
mov
mov
imul
xor
divl
xor
mov
sub
imul
div
mov
cmp
jae
mov
sub
push
pushl
pushl
call
add
add
add
add
cmpl
jne
pop
pop
pop
leave
ret
mov
mov
mov
mov
rol
imul
add
mov
mov
mov
ret
mov
push
mov
push
mov
test
je
push
mov
test
je
andl
push
call
push
call
push
call
test
je
push
call
push
call
mov
push
call
push
call
pop
pop
pop
ret
add
add
inc
adc
pop
arpl
and
jp
fidivs
mov
out
mov
scas
add
ret
jmp
loop
out
daa
jg
add
andl
leave
add
fnstenv
das
pop
mov
stos
sarb
in
iret
test
les
xor
dec
sbb
push
subl
adcl
imul
adc
mov
sahf
push
xchg
push
jmp
insl
leave
aad
push
fiaddl
in
es
xor
daa
fs
js
rclb
outsb
inc
shll
jbe
sbb
outsl
push
mov
incl
scas
scas
push
fimuls
dec
pop
std
inc
mov
or
dec
loopne
mov
in
or
adcl
add
cmpsb
jae
mov
lock
nop
jp
inc
cmp
inc
mov
rcll
leave
xchg
inc
mov
push
daa
jne
shrl
add
test
sbb
leave
mov
add
mov
imul
cld
adc
sub
xchg
push
shl
mov
imul
clc
push
push
cmpsl
jmp
inc
xchg
xchg
in
fbstp
in
sub
pop
lahf
fxch
adc
inc
jl
aad
fistpl
inc
push
inc
mov
loope
lods
dec
xchg
ffreep
dec
test
sub
scas
fidivrs
lret
inc
test
xor
sti
pop
mov
aam
sahf
or
add
and
fabs
js
push
out
mov
pop
outsb
ret
fildll
and
fldl
and
xor
cmpsl
in
les
inc
testb
jb
leave
mov
stos
sub
cmp
mov
mov
je
push
mov
int3
testl
or
stc
cmpsl
int3
imul
jae
adc
pop
popf
mov
imul
mull
inc
je
mov
mov
jns
fwait
xor
mov
ret
cmp
je
jns
cli
sub
lret
cmp
xor
stos
test
sub
test
lods
andl
cmp
sbb
add
adc
push
bound
cmp
insb
lods
mov
popl
ficoms
mov
add
lea
dec
adc
repz
sbb
dec
pop
bnd
and
stos
mov
test
out
outsl
test
add
popf
stos
iret
or
popa
repz
inc
mov
mov
je
pop
dec
into
cmp
scas
or
clc
pop
or
mov
mov
cmp
in
enter
fstpt
jle
dec
mov
les
inc
std
jecxz
rcrl
mov
or
add
mov
ret
sbb
aas
stos
clc
cmc
or
rorl
push
lea
idivb
cmp
add
cmp
lea
sub
mov
out
sub
mov
outsl
imul
vpmacsdqh
pop
sub
cmp
out
popf
ss
bound
jp
ret
xchg
xor
repnz
or
add
cli
adc
mov
jp
mov
ja
mov
pop
or
imul
push
mov
push
inc
scas
add
outsl
jg
bound
out
dec
imul
stos
mov
dec
ljmp
cmp
add
inc
or
mov
or
and
inc
hlt
add
sub
xchg
scas
xchg
sbb
dec
std
inc
outsl
sbb
sarl
xor
push
push
push
mov
enter
add
and
push
inc
xchg
addb
xor
dec
inc
cwtl
cltd
mov
adc
mov
pusha
or
push
xchg
sbb
data16
in
add
mov
pop
adc
dec
divb
in
lods
es
imul
pusha
xor
insb
inc
outsb
mov
call
aam
add
pop
sbb
xchg
call
push
out
xchg
or
ja
dec
push
stc
xor
xor
in
inc
add
add
cmpsl
jns
cmp
xchg
jle
imul
inc
push
test
enter
sub
out
mov
xchg
lcall
aaa
divb
push
mov
xchg
sub
mov
inc
or
mov
xchg
outsl
shl
and
or
pop
rorb
inc
xor
push
pop
idivl
adc
es
mov
ficoms
add
push
push
loop
sbb
sbb
in
sub
arpl
les
in
pushf
dec
flds
mov
pop
jbe
mull
dec
insl
cmp
scas
es
push
inc
inc
iret
andb
sbb
mov
jg
mov
inc
inc
pushf
jae
popf
out
arpl
jae
insb
jg
jmp
mov
push
xchg
arpl
enter
cmp
dec
adc
mov
arpl
xlat
movsl
cli
adc
in
jecxz
dec
sbb
add
jo
stos
mov
loopne
mov
jmp
dec
xorl
or
and
clc
pushf
ja
adcl
mov
ret
punpcklbw
cmp
cmp
mov
repz
jp
movsl
and
scas
pusha
test
push
mov
xchg
bound
in
mov
xchg
iret
aad
mov
push
or
add
std
or
loopne
jo
add
lahf
sbb
mov
add
cld
mov
insl
std
pop
cmp
loopne
jae
pop
and
lods
dec
mov
mov
in
pusha
inc
dec
test
es
cmp
jp
int3
and
shlb
ljmp
cli
popa
push
mov
int
pushf
lahf
mov
jg
cmp
mov
fadd
in
mov
sbb
or
sub
lcall
jno
test
cmp
je
dec
hlt
bound
and
mov
out
sbb
lock
sbb
pop
mov
pushf
mov
mov
adc
lea
imul
mov
add
jo
xchg
xor
orb
out
mov
dec
ja
mov
jg
or
dec
mov
ds
mov
cmc
mov
in
jo
imul
imul
pop
ror
cltd
or
add
add
mov
cli
push
sbb
into
fists
aas
mov
addl
shll
push
mov
sahf
out
bound
movsl
or
lret
dec
ljmp
xchg
loopne
jle
das
cmpsl
scas
and
jmp
in
xor
jp
fistl
push
je
jno
sub
andl
inc
out
mov
and
into
adc
xchg
incb
add
add
ftst
lret
add
scas
movsb
xor
sbb
icebp
rcrb
jmp
movsl
and
stc
cmp
pop
iret
xor
es
cmpsb
popa
jge
daa
test
and
mov
ficompl
in
mov
xlat
ss
xchg
vandnpd
xchg
es
int
and
xlat
dec
mov
out
adc
and
sbb
and
jge
jno
inc
daa
addr16
add
movsl
lods
mov
dec
add
cmp
in
push
loope
lret
out
push
daa
stc
shll
ds
pop
leave
ljmp
mov
aaa
and
xor
sub
cltd
loope
fdivs
add
sbb
dec
add
andl
xchg
aas
cmpsb
outsl
and
inc
mov
pop
push
in
dec
pop
daa
sbbb
push
push
push
push
mov
in
or
add
mov
jmp
inc
add
sub
xchg
enter
repz
mov
pop
push
mov
dec
xchg
ret
mov
pop
push
push
or
int
mov
and
nop
pop
ds
push
and
mov
std
fidivrl
fld
lods
imul
cmp
mov
jbe
mov
sbbl
cltd
inc
mov
popa
movsl
pop
push
sbb
add
mov
test
jecxz
xor
sahf
dec
fiadds
xchg
inc
cmp
xor
jo
inc
push
ffreep
jmp
pushf
and
lods
xchg
pop
sbb
divb
mov
ljmp
adc
add
shufps
stc
adcl
push
scas
xchg
dec
inc
scas
dec
sub
push
test
in
fcomp
push
xor
pop
dec
mov
repz
pop
int
dec
add
mov
pop
fisttpl
test
mov
dec
rorb
push
and
push
lea
xor
out
fisubs
cs
add
sbb
add
loopne
sbb
jmp
push
aad
lea
or
sbb
push
push
mov
cs
mov
lret
int3
push
in
pop
mov
jmp
js
or
cmc
add
mov
jne
xchg
mov
in
mov
hlt
fcomps
pop
cmp
leave
imulb
and
jmp
adc
push
sub
mov
stos
pop
movsl
and
es
fnstsw
ret
sub
into
push
push
inc
jno
mov
addb
xor
fcom
add
fdivr
mull
mov
clc
push
pusha
js
ja
dec
jns
pop
inc
cmp
lds
mov
fisubs
orl
pop
aad
sahf
and
xchg
mov
in
add
jg
and
int
push
pop
lret
aad
fsts
mov
les
add
mov
stos
jnp
mov
or
sbb
stos
jae
imul
mov
jbe
sahf
dec
or
jo
cmpb
and
jae
sub
mov
fstpl
hlt
mov
subb
in
jle
cmp
or
mov
aaa
jns
and
cmp
add
add
shlb
xchg
pop
cmp
stc
jle
sbb
repz
repz
jne
xchg
mov
mov
scas
cltd
outsl
sub
xor
adc
pop
aas
dec
mov
adc
jae
sub
sub
dec
cmp
mov
repz
and
adc
xchg
cmp
outsl
push
cmp
scas
sbb
stc
jmp
cmp
dec
jbe
cli
push
sbb
xor
add
arpl
or
ret
cmpb
imul
pop
es
and
movsb
out
pusha
scas
decl
mov
hlt
dec
or
fmull
fsubl
fdivr
out
mov
xor
insl
gs
add
jmp
adc
insl
push
jp
mov
mov
and
xor
stos
pop
gs
cli
call
push
sti
cltd
int3
in
mov
sub
outsl
lods
add
add
add
scas
arpl
mull
push
fsub
pop
test
sbb
mov
les
and
test
hlt
sub
mov
addr16
push
pop
cmpl
xchg
test
xchg
cltd
jg
clc
mov
pop
dec
push
int
jns
inc
adc
scas
push
dec
and
stos
ljmp
xor
inc
adc
cs
sbb
push
add
xor
adc
jmp
xchg
mov
xchg
rorl
xchg
stos
mov
es
in
clc
pop
adc
jb
insb
push
loope
cmp
shl
or
popa
jmp
jns
adc
fwait
sub
in
scas
cmpsl
inc
pop
in
and
push
pop
xchg
call
mov
decl
fidivs
test
iret
push
add
sub
sbb
imul
jle
lods
fs
iret
js
xchg
fstl
xor
jo
aam
mov
xor
lods
or
mov
je
or
icebp
adc
mov
and
dec
lret
roll
dec
pop
loopne
xchg
jp
or
xchg
not
sub
testb
lcall
outsl
js
xor
sahf
fcoms
mov
addb
add
sbb
sub
adc
int
xorl
or
sbb
popf
shrl
repnz
imul
std
divl
mov
or
sub
fidivl
push
aad
fldt
and
inc
ljmp
pushf
adc
dec
jb
dec
pop
add
adc
inc
js
loope
loopne
pop
fisubrl
dec
xor
add
sbb
rorb
pop
out
into
jno
enter
xchg
scas
enter
sbb
les
push
pusha
sub
sbb
sbb
jge
cmpsl
pop
adc
pop
xchg
loope
ljmp
andb
jle
sub
sbb
out
sub
push
test
inc
out
inc
xor
add
pop
mov
in
lds
pop
div
shll
shrb
cmpsb
popa
sbb
push
mov
xor
add
add
jle
jae
jo
jle
lea
jnp
inc
outsb
sbb
aad
mov
lds
add
adcl
cmpsl
xchg
sbb
and
jl
xchg
add
mov
pop
xor
scas
enter
adc
aam
push
lock
daa
mov
xchg
xchg
cmp
or
jl
cltd
stos
std
es
and
idivb
add
out
xor
fwait
mov
cmp
or
push
jne
mov
add
adc
cmp
addr16
imul
das
cmp
mov
adc
scas
add
mov
loope
xchg
jg
je
cmp
pop
jle
cmpsl
int3
fmuls
icebp
cmp
mov
aas
mov
cmp
mov
gs
jbe
loopne
test
jmp
mov
mov
popa
adc
insl
pusha
stc
fwait
xchg
cmp
ljmp
dec
divl
xlat
add
add
add
sbb
jbe
or
shll
gs
or
jle
cli
popa
fcomi
add
ret
repz
sbb
inc
xor
mov
nop
fsubl
adc
cmp
xlat
sub
ret
jns
dec
jmp
ljmp
lret
xchg
adc
jae
xchg
mov
mov
push
test
pop
es
add
aad
mov
mov
rorb
pop
adc
sbb
xor
les
xor
pop
inc
rep
push
cs
pusha
inc
xlat
push
rcrl
xchg
mov
mov
mov
hlt
cmovl
jg
add
sahf
xor
cmc
ror
pop
xlat
xchg
push
data16
leave
pop
divb
cmp
mov
shlb
aam
fidivl
es
movsl
subb
ljmp
mov
push
pop
aas
sub
or
sub
push
cmpsb
xor
or
push
insb
or
shl
cs
enter
daa
mov
push
imul
js
in
xor
jnp
test
dec
dec
mov
pop
xchg
sbb
iret
fists
lret
mov
inc
out
pop
cli
mul
scas
jnp
sbb
jb
lds
shll
in
mov
push
sub
lahf
mov
aaa
sbb
add
sbb
outsl
push
fs
pop
inc
inc
popl
aad
add
lcall
cmp
sbb
or
test
mov
cmpsb
test
xchg
rcrb
mov
icebp
movsl
iret
lods
and
sbb
push
xchg
in
iret
mov
push
das
mov
push
jns
pop
pop
adc
mov
push
out
mov
add
add
add
out
stc
test
cmp
cli
fisttpl
out
in
mov
loop
ficompl
inc
push
aad
iret
inc
sbb
dec
push
sbb
out
or
adc
jle
and
and
popf
mov
sbb
sub
insb
lret
les
jo
pop
add
rclb
fisttpll
pop
aas
jbe
mov
dec
jae
add
ss
dec
jg
fidivs
lods
jne
dec
fidivs
push
jno
add
add
push
dec
mov
cmp
push
push
pop
xchg
and
in
pop
scas
and
inc
or
add
push
mov
addb
jg
xlat
lods
jbe
push
out
jo
sti
xor
mov
mov
pop
movsl
pusha
subl
rcr
xchg
mov
jp
pop
jb
loopne
or
and
ret
lea
pop
push
les
add
mov
inc
sub
rcrb
nop
shl
inc
inc
mov
lock
loope
inc
lahf
dec
das
jmp
imul
adc
pop
subl
jg
xchg
cmp
add
rorb
mov
sbb
pop
gs
stc
add
mov
lods
xchg
jl
xchg
adcl
loope
pop
xor
xchg
gs
xchg
mov
fcomps
jmp
rol
xor
or
add
push
xor
xlat
xchg
xchg
mov
or
imul
mov
adc
fcmovnu
sub
fsubl
shl
add
adc
negl
dec
dec
sub
ss
dec
stc
orb
jle,pn
jg,pt
xchg
sbb
xor
daa
push
jle
dec
daa
dec
aad
xlat
scas
jns
rdmsr
sbb
cmp
rcr
fcmovnbe
nop
pop
mov
mull
add
int
ja
xchg
lea
pusha
xchg
xlat
dec
call
push
xchg
add
and
dec
mov
cmp
push
out
pop
mov
jmp
mov
xorl
vmovups
jne
mov
aaa
xchg
add
test
xchg
jmp
in
lret
imul
lea
push
popa
sahf
dec
ret
jnp
adc
adc
push
inc
push
dec
nop
decl
or
cwtl
cmp
out
push
xor
jns
adc
out
mov
lahf
push
sub
jno
or
lods
mov
add
sbb
inc
loop
jb
nop
adc
xor
dec
push
fwait
sbb
sti
jp
pop
jns
loop
mov
xor
fsubrl
mov
push
sbb
cli
push
xor
dec
or
in
mov
loop
cmp
loop
and
lds
mov
lcall
mov
add
js
mov
or
cmovl
mov
add
in
faddp
mov
jns
sub
andl
cmp
and
in
test
push
lret
and
cmp
sbb
adcb
sub
dec
outsb
cmpb
sbb
out
cmpsb
lods
into
pusha
lea
sub
mov
enter
pop
das
and
popa
jno
pop
xor
fidivl
add
enter
xlat
pop
cmpsb
enter
sbb
in
cmpsl
or
dec
fnsave
xor
out
cmp
cltd
mov
shl
iret
ljmp
mov
sbb
dec
in
leave
mov
jg
push
into
mov
sbb
je
jp
push
lahf
dec
out
or
rcrl
js
lcall
orb
sub
lret
scas
inc
jl
xchg
movb
arpl
sti
inc
adc
das
jecxz
xlat
lock
or
dec
mov
mov
rcl
sarl
sbb
icebp
test
mov
xchg
ss
add
cmp
sub
cmpsl
dec
pop
movsl
popf
dec
js
lahf
push
mov
add
dec
xchg
dec
nop
mov
push
adc
push
sbb
xor
xchg
lods
add
ljmp
mov
pop
add
imul
in
pop
adc
pushf
jmp
push
cld
mov
xor
in
ret
xor
mov
lock
mov
nop
es
cli
xor
or
sub
add
jp
ja
dec
push
stos
jp
fsubrl
xchg
adc
xchg
imul
or
mov
xor
lock
inc
xor
mov
ljmp
dec
and
jecxz
test
xchg
mov
iret
mov
push
xor
movl
insl
jno
jge
pop
lds
jne
add
test
add
orl
or
pop
movsb
lods
pop
jge
or
inc
imul
int
out
in
mov
mov
push
cmp
dec
add
int
mov
mov
add
add
popa
mov
shrb
sarl
mov
outsb
shrl
imul
int3
xchg
scas
mov
pop
mov
or
inc
insb
repz
mov
mov
pop
sbb
mov
mov
pop
rcrl
mov
addl
cwtl
pop
jl
je
cmpsl
out
out
sub
les
shlb
out
sub
lret
mov
aam
stos
in
add
jmp
mov
sbb
pop
ret
and
sub
xor
std
sbb
and
push
pop
fnstsw
loopne
jo
cwtl
daa
xlat
lds
mov
mov
or
fldt
sub
stos
adc
scas
jecxz
fimuls
cmp
imul
mov
movsl
jg
push
je
jg
addr16
aas
inc
es
cmp
add
add
out
in
icebp
mov
insl
mov
daa
lret
sarb
cwtl
movsb
ret
movsb
jmp
stos
popf
xor
inc
out
rorb
jno
push
mov
int
jmp
scas
mov
call
inc
out
insl
jl
xchg
shll
fs
shrl
adc
pop
cs
mov
loope,pt
imul
cmc
add
xchg
cmp
popa
imul
insl
adc
add
add
lock
cli
push
mov
inc
aam
pushf
inc
jne
fbld
and
adc
ljmp
pop
lock
inc
or
xlat
and
aaa
adc
pop
add
mov
and
fs
inc
xchg
sbb
sti
inc
adc
pxor
and
push
movl
adc
push
test
mov
ljmp
cmp
ljmp
pop
pusha
adc
inc
pop
push
mov
out
push
dec
add
add
pop
push
sub
or
data16
mov
imul
and
adc
fisubrs
cmp
in
cmc
fwait
add
in
add
xor
cmpsl
mov
dec
pop
or
dec
dec
repz
test
fildll
sbb
movsb
clc
xlat
add
or
mov
sub
loope
mov
pop
dec
bnd
inc
sub
lea
push
into
push
bound
std
dec
add
int
mov
cmp
fdiv
fs
test
shlb
mov
or
in
int
jns
sub
cmpsl
jmp
jle
mov
xchg
outsl
scas
roll
in
mov
das
test
mov
push
shlb
arpl
scas
mov
sbb
sub
call
cmp
dec
cmc
pop
test
arpl
and
jmp
add
movq
in
fisubrl
push
test
mov
enter
sub
push
jg
cmpsb
mov
int3
outsb
add
sti
sbb
addr16
outsb
or
sbb
daa
call
dec
in
push
or
addr16
jbe
adc
outsl
inc
cmp
int3
imul
xlat
movsl
adc
jae
mov
scas
bound
stos
add
into
inc
aaa
xchg
add
inc
pop
add
in
aad
loop
mov
mov
inc
or
jp
cmp
mov
push
pminub
pop
es
std
pop
aam
jae
leave
shl
popa
mov
mov
test
sub
fucom
jns
lahf
push
mov
fldt
mov
lock
push
dec
cmp
aam
mov
push
pop
mov
add
add
pop
or
fistpll
fbstp
xor
add
repz
mov
push
aas
clc
jl
leave
mov
repnz
outsl
mov
add
test
sbb
insb
jnp
subl
movntq
out
hlt
dec
stos
xchg
imul
adc
in
shlb
sub
dec
fwait
mov
add
lcall
mov
pop
jmp
in
mov
nop
cli
ret
or
cli
pop
mov
icebp
push
test
cld
push
gs
fsubrs
lds
inc
adc
xor
jb
or
dec
sbb
imul
mov
or
sti
jbe
divl
js
cmpsb
add
push
test
sub
pushf
mov
add
add
sub
or
mov
divb
mov
pop
inc
pushf
xor
in
xor
mov
push
hlt
push
lods
mov
or
xchg
jle
pop
inc
sbbl
or
iret
mov
jmp
fsubrl
lods
repz
xchg
xchg
mov
xor
and
xorb
push
add
jge
int3
jnp
adc
sub
and
fmull
iret
mov
or
fidivrs
fidivs
and
mov
jg
lcall
jmp
sub
and
push
adc
je
jbe
lock
sub
xchg
test
xor
cltd
mov
jne
clc
notl
jne
aaa
aas
and
fdivr
xchg
fstl
adcl
fs
jge
pop
jmp
pop
xchg
xchg
and
sub
mov
xchg
add
in
lahf
mov
dec
inc
aad
sbb
test
fstl
push
shrl
xchg
es
dec
out
push
push
adc
add
psrlq
pop
addr16
jecxz
xor
imul
pop
stos
xchg
push
fcoml
call
add
mov
seta
mov
inc
xchg
mov
mov
out
pushf
popa
adc
fistps
dec
movb
scas
outsb
rcrl
mov
mov
adc
push
push
movsb
in
fdivrl
shrb
in
leave
jge
insb
mov
gs
sub
fnsave
sub
push
lcall
in
je
jge
pop
into
jg
push
cmp
xacquire
jno
das
inc
iret
jg
jmp
sub
idivb
sbb
jge
sbb
push
jle
gs
push
vandpd
outsl
ljmp
shl
or
fstpt
jmp
rolb
cmc
push
dec
dec
inc
jnp
sub
or
ljmp
aaa
outsl
mov
mov
rorl
sar
iret
dec
push
mov
add
insl
mov
aaa
sub
test
sbb
dec
jae
dec
aaa
xchg
sbb
movsb
mov
stc
pusha
popa
imul
sbbl
mov
mov
outsl
mov
and
jbe
pop
arpl
int
insb
add
mov
cmpsb
mov
pop
sub
and
imul
dec
cli
mov
leave
inc
js
jne
sbb
jmp
insl
xchg
fisubl
pop
icebp
jecxz
jecxz
pop
divb
jno
shl
cmp
mov
loopne
mov
int3
and
add
fsub
insl
addr16
ja
jo
sub
ret
push
or
or
push
add
jp
leave
sarb
push
mov
dec
insl
cltd
dec
cmp
lcall
adc
and
xchg
sbb
clc
mov
inc
sti
adc
add
lret
daa
inc
enter
or
fsubr
sub
xor
push
sub
mov
data16
inc
mov
sub
push
mov
xchg
push
mov
mov
xor
add
js
mov
pop
mov
sbb
xchg
addb
std
adc
fstl
xchg
shll
cmp
inc
cwtl
int
xor
mov
movsl
mov
mov
jmp
lcall
adc
xchg
xchg
popa
mov
pop
inc
jmp
into
sbbl
dec
xor
fdivl
jp
xor
insb
fdivrl
loopne
test
push
adc
xor
add
mov
xchg
aas
cltd
sbb
fucom
xor
pop
daa
ds
inc
cli
xchg
in
pusha
mov
cmc
loop
sub
test
cli
push
pop
sarl
sti
aam
cltd
stos
popa
xor
inc
jno
cli
fwait
jo
pop
jno
loope
or
sbb
insb
lahf
data16
xor
int
pop
pop
mov
xor
mov
setge
xor
cmc
rcl
push
inc
in
dec
mov
fwait
popl
add
add
jns
mov
out
xor
mov
nop/reserved
xchg
jge
xchg
xor
ja
shll
mov
lock
mov
cmp
pop
lcall
lret
jne
xchg
fbld
es
pop
xchg
test
imul
dec
lahf
xor
dec
stc
dec
jmp
inc
bnd
stos
addr16
mov
decb
pop
inc
and
add
mov
pop
cmpsl
in
push
push
mov
push
sub
ja
push
push
jbe
lret
testl
lahf
add
pop
jecxz
in
xchg
pop
adc
aas
mov
call
add
or
mov
lea
mov
orl
jo
mov
push
add
add
dec
jmp
shl
add
imulb
push
add
adc
rcrb
pop
and
xchg
jb
clc
and
loope
mov
in
dec
sub
or
pop
pushf
popf
lods
pop
sbb
hlt
adc
or
xchg
xchg
inc
hlt
adc
jbe
cmovno
dec
mov
xor
dec
stos
stc
add
jno
adc
rcl
adc
in
sub
jnp
mov
cli
push
fnstsw
das
fwait
sub
sahf
cwtl
and
add
cld
or
sar
int
pop
sbb
adc
repz
lods
cmp
cmp
jp
mov
orl
push
into
fwait
fwait
and
add
ror
in
aad
push
cs
xchg
stos
mov
inc
or
rcll
cmpb
mov
nop
mov
push
lock
inc
shrl
dec
xor
xchg
sub
scas
movsl
ds
shlb
sahf
pavgw
add
cwtl
fadds
push
xchg
add
push
in
in
inc
insb
mov
imul
pop
out
dec
cs
xchg
lahf
sub
outsl
mov
sub
lods
pop
enter
ret
mov
out
push
push
testb
dec
push
and
into
leave
pop
lahf
pushf
fimull
cmp
ficompl
iret
movsb
and
adc
xlat
jno
and
mov
sbb
