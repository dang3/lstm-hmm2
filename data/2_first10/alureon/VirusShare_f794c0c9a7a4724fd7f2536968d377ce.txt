jge
jmp
push
test
ja
ds
inc
mov
in
ss
ja
jmp
jmp
ja
pop
jmp
jno
ljmp
and
jmp
dec
mov
ja
push
in
fbstp
in
mov
out
cmp
ja
arpl
ja
jne
ja
mov
ja
sbb
ja
inc
jmp
icebp
pop
jmp
popf
das
out
js
out
das
out
mov
sub
ja
or
ja
mov
ja
sahf
cmpb
ja
push
out
fs
jmp
pop
hlt
in
add
in
mov
ljmp
inc
out
ds
ja
mov
ja
dec
out
cs
out
xchg
shl
ja
pop
in
mov
in
lret
xchg
out
subb
ja
cmp
ja
insl
in
and
mov
in
jb
ljmp
out
ja
das
out
sub
in
test
mov
jmp
ja
cmp
jmp
push
mov
in
and
jmp
jecxz
in
mov
in
imul
in
imul
mov
pop
in
mov
das
out
popa
cmp
ja
fucomip
ja
loop
ja
sbb
ja
in
stos
out
out
in
repnz
push
in
xchg
ja
shl
add
add
add
cmp
movsl
fidivrl
ja
leave
cmp
ja
stc
cmp
loopne
ja
loopne
ja
popa
cmp
loop
ja
clc
cmp
pop
cmp
mov
hlt
popa
cmp
xor
cmp
or
cmp
jle
ja
popf
cmp
jb
ja
pop
cmp
popa
cmp
cmp
ja
loope
ja
push
cmp
pop
cmp
push
cmp
int
cmp
jmp
cmp
cmpsb
cmp
jl
ja
das
cmp
push
cmp
leave
cmp
fstpt
ja
adc
ja
fstpt
ja
cmp
pop
cmp
jnp
ja
xor
ja
les
ja
fdivrl
ja
pop
cmp
loopne
ja
adc
ja
mov
fmul
cmp
ja
dec
cmp
jecxz
ja
adc
sub
cmp
ja
sarl
movsb
test
ja
add
ja
scas
cmp
jne
ja
inc
cmp
movsl
cmp
iret
cmp
fdivrl
ja
in
cmp
dec
cmp
xchg
and
mov
cmp
mov
ja
add
add
pop
shlb
ret
ja
iret
shlb
shlb
shlb
shlb
shlb
shll
ret
ja
rol
ja
push
shll
shll
ret
ja
inc
ret
or
ja
pop
ja
xchg
shlb
shlb
ret
jno
ja
jo
ja
lods
ret
xchg
ja
shlb
ret
ja
jmp
ja
lods
shll
shlb
shlb
shll
shll
ret
jecxz
ja
scas
shlb
ret
ja
and
ja
sub
ja
daa
ret
ja
shlb
shlb
shlb
add
cmpsb
xchg
mov
ja
clc
mov
ja
fnstsw
ja
mov
ja
les
ja
mov
ja
enter
leave
mov
ja
xchg
mov
ja
jb
ja
jae
ja
mov
ja
or
ja
jbe
ja
jns
ja
push
mov
ja
cmp
ja
pushf
mov
ja
sbb
ja
sbb
ja
mov
ja
and
ja
aad
ja
xlat
mov
ja
jg
ja
xchg
ja
fdivrl
ja
or
mov
ja
nop
mov
ja
xchg
mov
ja
loopne
ja
xor
add
jbe
ja
xchg
push
ja
jbe
ja
fstl
pushf
fcoml
pop
pop
push
ja
mov
ja
mov
sub
mov
sub
add
mov
mov
cmpl
je
mov
xor
mov
mov
xor
cmp
je
mov
add
xor
mov
mov
sbb
mov
add
and
mov
sbb
mov
cmp
je
adc
mov
xor
mov
add
leave
ret
cmpsb
and
inc
and
adc
sub
loope
stc
cmp
xchg
inc
fstl
test
bound
dec
shlb
inc
inc
or
sub
push
xchg
pop
aad
lea
test
lcall
dec
loopne
xchg
inc
jb
test
in
pop
or
xchg
pop
jo
lea
in
dec
pushf
clc
loope
jl
mov
adc
xchg
loope
push
cmpsb
loope
jo
mov
mov
outsb
in
ret
loope
mov
dec
hlt
push
and
push
push
cmpsl
sar
hlt
push
mov
jp
dec
push
mov
jno
loope
mov
mov
pop
sub
mov
mov
xor
loopne
cmp
out
popf
mov
aad
pop
in
mov
mov
fsub
pop
sub
adc
pusha
push
xorb
mov
jbe
push
aad
mov
loop
adc
jne
adc
mov
std
or
sub
cmpsl
mov
inc
inc
mov
cmpsl
xchg
mov
push
pushf
outsl
inc
test
sbb
push
inc
pop
outsb
mov
in
daa
mov
int3
jb
mov
sub
xchg
into
loop
mov
or
dec
popa
call
push
ret
lcall
test
adc
mov
ljmp
scas
aad
scas
and
sub
jecxz
lret
iret
imul
inc
and
in
mov
loop
je
or
jp
pop
test
push
cli
mov
push
and
data16
loop
testb
pop
xorl
sub
and
aad
mov
sub
loop
dec
sbb
mov
or
imul
adc
sbb
and
xlat
cmpsl
and
aad
mov
sub
jb
xchg
ret
dec
sbb
mov
scas
mov
ds
cmpsb
or
sub
add
ss
xchg
pop
enter
das
sbb
aad
nop
xor
xchg
push
scas
arpl
aad
and
cmp
ja
sahf
sbb
outsl
out
bound
aad
adc
ss
mov
int3
popf
jg
dec
clc
mov
std
loop
dec
mov
insb
outsl
inc
mov
enter
mov
jecxz
xor
pop
push
fs
mov
lcall
ljmp
aad
loop
loopew
or
sbb
flds
iret
fneni(8087
lock
loop
jg
scas
scas
mov
push
dec
pop
out
add
sub
pop
jecxz
outsb
fs
xchg
addr16
sbb
cmpsb
scas
out
test
mov
xchg
mov
or
mov
push
sub
fildll
arpl
xchg
gs
out
sub
inc
cltd
lea
mov
jecxz
movsl
pop
and
push
push
push
sub
repz
jecxz
cmp
shl
mov
mov
xchg
or
mov
shll
xor
loope
lock
mov
dec
jb
xchg
mov
jecxz
push
lcall
push
sbb
push
or
sbb
mov
pop
inc
je
es
push
mov
cmp
mov
mov
aad
jae
int
inc
sbb
stos
jl
jecxz
dec
out
mov
test
sub
sbb
mov
adc
bnd
xlat
pop
xchg
fldl
out
roll
pop
push
sub
aad
mov
inc
xor
push
aad
sbb
mov
shrb
fdivrl
arpl
loopne
lock
gs
ret
adc
sbb
insl
add
aad
mov
mov
int
mov
inc
push
sbb
add
mov
std
dec
mov
in
sbb
leave
push
loopne
in
jmp
mov
sbb
insl
adc
pop
mov
insl
outsl
lock
mov
shr
sbb
iret
xor
jl
leave
fdivrs
adc
cmp
sbb
dec
in
jmp
cmp
adc
or
sub
mov
sub
lods
sbb
fstp
push
inc
pusha
cmpsb
sbb
mov
addr16
push
call
scas
icebp
xchg
sbb
subl
test
cmp
sub
icebp
cwtl
aad
mov
mov
leave
mov
mov
out
xchg
ds
xor
mov
jmp
jmp
push
xlat
dec
mov
sub
cmp
cwtl
aad
arpl
lret
xor
in
pop
sbb
inc
and
fs
ss
popa
push
inc
push
sbb
dec
lds
cmpsb
lret
sbb
dec
cmp
push
xor
out
ljmp
dec
test
mov
cmp
ret
push
cmp
aad
leave
in
adc
mov
mov
jae
imul
jo
in
xlat
imul
bound
out
in
sub
cmpsl
aam
mov
outsl
push
addr16
mov
mov
mov
ret
sub
push
nop
js
dec
cwtl
aad
add
repnz
sub
je
mov
xor
jb
cmc
sbb
jne
stos
cs
call
or
cmp
in
and
test
in
cmp
and
call
push
xor
sub
sub
int
scas
push
mov
sub
cmp
pop
cli
ret
mov
add
mov
jp
insb
outsb
es
insb
pop
push
test
cmp
cmc
in
testb
jae
test
cmp
test
ljmp
jne
je
jne
xor
or
add
add
sbb
cmpl
je
mov
mov
mov
mov
mov
test
je
sub
adc
xor
or
leave
ret
int3
int3
int3
push
mov
sub
mov
sub
mov
xor
mov
test
je
xor
mov
xor
or
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
and
xor
add
mov
cmp
je
mov
add
adc
mov
sub
mov
cmp
jne
mov
and
sbb
mov
mov
sbb
leave
ret
int3
push
mov
sub
mov
and
mov
and
sbb
mov
mov
adc
mov
and
test
je
xor
and
mov
and
mov
leave
ret
int3
int3
push
mov
sub
mov
sbb
xor
mov
adc
mov
sub
mov
sub
adc
test
je
xor
mov
mov
mov
xor
mov
adc
or
and
add
push
push
push
push
mov
sub
sbb
adc
mov
call
or
adc
mov
add
xor
call
test
je
mov
xor
mov
mov
mov
sub
add
mov
mov
mov
mov
add
adc
mov
add
xor
and
mov
adc
mov
add
mov
mov
sbb
mov
adc
mov
add
adc
sub
mov
or
sub
mov
cmp
jb
mov
sub
add
or
test
jne
add
mov
mov
mov
leave
ret
push
mov
sub
mov
and
sub
mov
cmp
jne
mov
mov
add
mov
and
mov
cmpl
jne
xor
mov
xor
adc
mov
leave
ret
int3
int3
int3
sub
mov
mov
mov
mov
xor
mov
mov
mov
cmp
je
sub
mov
and
mov
mov
mov
cmp
je
add
mov
add
mov
mov
xor
pusha
mov
sub
mov
mov
cmp
je
mov
mov
xor
or
xor
cmp
jne
or
mov
or
and
mov
mov
mov
sbb
add
sub
mov
cmpl
jne
adc
mov
or
mov
mov
sbb
cmp
je
xor
mov
or
and
add
mov
call
xor
and
or
mov
cmpl
je
mov
sub
sbb
and
sub
mov
sub
xor
add
mov
test
je
adc
mov
mov
mov
mov
cmp
je
mov
mov
sbb
mov
xor
cmp
je
adc
mov
mov
add
or
movl
sub
mov
sbb
mov
mov
and
cmp
je
mov
mov
xor
sub
mov
mov
cmp
jne
adc
sub
add
mov
or
mov
ret
int3
int3
int3
int3
push
mov
sub
add
sbb
mov
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
sub
mov
mov
and
leave
ret
