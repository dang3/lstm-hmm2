push
lea
sub
mov
push
push
push
push
push
push
mov
call
push
push
call
test
je
push
xor
push
call
push
mov
call
mov
cmp
je
lea
push
push
call
mov
mov
mov
mov
push
push
mov
call
cmp
jne
movl
push
push
call
push
push
mov
call
xor
cmp
setl
mov
mov
cmp
mov
je
mov
cltd
sub
sar
mov
push
push
call
mov
neg
sbb
and
add
push
mov
call
push
mov
call
movzwl
push
call
pop
pop
push
push
push
call
push
push
push
call
push
push
lea
push
call
lea
push
call
mov
mov
mov
movzwl
xor
jmp
cmp
jne
cmpw
je
inc
inc
mov
cmp
jne
jmp
xor
inc
lea
push
movl
movl
call
mov
push
pushl
call
push
push
push
push
push
pushl
mov
call
cmp
mov
mov
jne
xor
push
pop
lea
rep
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
movl
movl
movl
mov
movl
movl
call
test
je
mov
push
mov
imul
cltd
pop
idiv
push
push
mov
mov
add
mov
lea
mov
mov
shl
mov
lea
push
call
mov
mov
sub
sub
mov
cmp
mov
mov
jle
mov
push
pushl
neg
push
push
pushl
sbb
push
push
push
and
add
push
push
push
push
call
cmp
mov
je
lea
push
call
push
push
push
pushl
call
test
jne
call
xor
jmp
call
pushl
call
pushl
pushl
call
pushl
call
push
pushl
call
mov
xor
cmp
sete
push
call
cmp
je
call
cmpl
je
cmpl
je
push
push
push
pushl
call
xor
inc
pop
pop
pop
add
leave
ret
push
mov
mov
mov
mov
mov
mov
cmp
jb
push
push
mov
mov
mov
lea
xor
test
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
mov
mov
lea
ror
lea
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
mov
inc
cmp
jb
pop
pop
pop
ret
push
mov
sub
mov
push
push
push
push
mov
movl
call
andl
movl
mov
movl
mov
mov
movl
mov
mov
mov
mov
mov
imul
xor
add
incl
mov
push
push
mov
call
mov
mov
mov
mov
mov
xor
mov
div
mov
mov
mov
mov
sub
not
add
xor
mov
mov
incl
add
cmpl
jb
cmpl
je
mov
mov
jmp
push
call
mov
mov
mov
xor
push
push
push
push
call
movl
mov
push
shl
push
add
incl
push
push
call
mov
mov
test
je
push
call
mov
push
push
call
mov
call
add
cmpl
je
cmpl
jne
lea
push
push
pop
add
xor
div
push
pushl
push
call
mov
push
push
push
push
call
lea
mov
lea
add
lea
add
mov
mov
mov
mov
and
call
mov
mov
mov
call
mov
mov
push
push
mov
xor
push
push
mov
mov
call
mov
lea
push
push
push
lea
push
pushl
movb
pushl
movb
push
call
push
push
push
call
mov
call
mov
call
test
je
pushl
mov
pushl
pushl
pushl
call
cmpl
mov
jne
push
call
test
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
mov
push
xor
cmp
je
cmp
push
mov
je
push
call
jmp
push
push
push
pushl
call
push
push
push
pushl
call
push
push
push
pushl
call
pop
pop
ret
mov
push
mov
sub
mov
push
push
push
mov
mov
mov
push
mov
lea
push
pushl
pushl
call
lea
xor
test
je
push
push
push
call
add
test
je
push
add
push
call
inc
pop
add
cmp
pop
mov
jl
mov
mov
pop
pop
mov
pop
call
leave
ret
push
mov
push
push
mov
imul
push
mov
cmp
jb
mov
push
call
mov
add
imul
push
xor
pop
div
mov
mov
mov
mov
sub
mov
test
je
mov
sub
push
mov
call
xor
divl
mov
add
cmp
jae
mov
mov
imul
xor
divl
xor
mov
sub
imul
div
mov
cmp
jae
mov
sub
push
pushl
pushl
call
add
add
add
add
cmpl
jne
pop
pop
pop
leave
ret
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
mov
push
mov
sub
mov
push
mov
push
push
lea
mov
call
lea
xor
call
test
je
test
je
cmpb
je
mov
push
call
mov
push
mov
call
mov
lea
push
call
mov
test
je
push
push
push
push
call
add
push
call
test
je
push
push
push
call
mov
test
jge
push
push
push
call
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
call
mov
mov
pop
pop
pop
call
leave
ret
push
mov
sub
mov
mov
mov
sub
mov
je
mov
test
je
push
mov
add
test
je
push
push
mov
sub
mov
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
addl
decl
jne
mov
test
jne
pop
pop
pop
xor
inc
leave
ret
mov
push
mov
push
mov
test
je
push
mov
test
je
andl
push
call
push
call
push
call
test
je
push
call
push
call
mov
push
call
push
call
pop
pop
pop
ret
push
mov
sub
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
jne
inc
jmp
andl
push
push
lea
lea
cmpl
mov
je
mov
mov
jmp
mov
mov
add
xor
nop
movb
mov
mov
inc
cmp
jb
mov
test
je
lea
movsbw
mov
add
inc
mov
test
jne
lea
push
call
mov
test
je
mov
mov
add
andl
cmpl
mov
je
mov
mov
testl
je
push
call
mov
and
push
pushl
call
push
jmp
push
call
push
call
mov
add
add
push
pushl
call
push
mov
call
cmpl
je
incl
mov
mov
lea
cmpl
jne
mov
incl
mov
imul
add
mov
add
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
jmp
mov
push
mov
push
mov
xor
mov
test
movl
je
push
call
pushl
call
mov
xor
inc
pop
pop
ret
mov
mov
ret
mov
mov
mov
mov
rol
imul
add
mov
mov
mov
ret
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
test
je
andl
mov
sub
add
mov
mov
mov
lea
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
cmpl
mov
je
or
sub
mov
mov
sub
add
mov
mov
mov
lea
push
push
push
call
mov
mov
mov
sub
add
mov
movzwl
add
lea
movzwl
lea
mov
mov
mov
andl
xor
cmp
jae
mov
mov
mov
mov
mov
mov
addl
add
push
pop
rep
mov
add
add
incl
mov
movzwl
cmp
jb
mov
mov
add
pop
mov
xor
pop
inc
pop
leave
ret
push
mov
sub
push
push
mov
xor
cmp
je
mov
cmp
je
cmp
je
cmp
je
add
push
lea
push
push
call
mov
add
add
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
sub
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
mov
mov
lea
ror
mov
lea
add
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
cmp
jb
mov
mov
test
je
mov
sub
mov
mov
inc
dec
jne
pushl
mov
pushl
pushl
pushl
pushl
call
mov
mov
mov
call
mov
add
push
pushl
pushl
pushl
call
add
pop
jmp
xor
pop
pop
leave
ret
mov
push
mov
xor
cmp
jne
mov
jmp
mov
push
mov
mov
test
je
mov
inc
inc
decl
jne
cmpl
pop
jne
dec
mov
movb
pop
ret
push
mov
push
andl
push
lea
push
push
call
add
cmpl
je
push
pushl
call
pop
pop
test
jne
push
mov
push
call
push
call
push
call
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
push
call
push
call
push
call
mov
pop
jmp
mov
leave
ret
push
mov
testl
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
pop
ret
push
call
pop
ret
add
add
fldl
cmp
lods
popf
xchg
fcompl
mov
testl
sub
sahf
js
loopne
and
and
cmpl
jmp
fsubs
mov
or
xor
mov
xorl
push
out
jbe
inc
xor
lods
out
dec
dec
iret
dec
add
mov
fcmovbe
pushf
adc
repz
enter
insl
mov
pop
xchg
lret
cmp
test
pop
movsb
aad
call
jp
int
adc
fsubrl
mov
sahf
xchg
add
add
dec
mov
iret
push
dec
int3
aad
arpl
ror
xlat
sub
not
mov
montmul
cmpsb
inc
adc
or
xor
and
std
dec
shrl
outsl
in
inc
into
lret
fistl
mov
aas
out
out
jmp
test
xchg
add
shll
icebp
xchg
pop
fs
addr16
pop
jbe
sahf
dec
mov
repz
rcll
xchg
js
add
pushf
cmp
jns
dec
sub
push
jb
mov
into
xchg
xor
dec
rolb
pop
fistl
mov
cli
loope
lods
test
mov
es
xchg
test
push
adc
jns
mov
push
pop
mov
out
ret
pop
loopne
mov
inc
jb
or
cmpsl
shll
sbb
sub
test
cmp
mov
dec
sub
add
fidivrl
jge
mov
ret
inc
lea
sbb
jl
mov
cmp
shlb
ret
leave
dec
mov
outsb
pop
test
outsl
sub
dec
les
cmp
lea
clc
mov
add
xchg
hlt
lret
insb
jmp
jg
adc
xor
repz
or
mov
jne
outsl
or
pop
dec
xchg
inc
arpl
insb
inc
je
stos
jp
cld
lods
rorb
push
mov
aad
xchg
pusha
xchg
pop
xchg
movl
jne
stos
pop
repnz
scas
clc
aas
and
sub
mov
out
dec
sub
aas
iret
xor
mov
xchg
inc
shlb
sbb
popf
cli
and
cmp
jnp
ds
js
push
inc
aas
cmc
jecxz
pop
or
imul
add
add
lds
imul
mov
or
shrb
gs
xchg
cmp
in
dec
out
mov
cmpsl
and
and
fistpll
dec
sub
lcall
cwtl
cltd
xor
add
pop
jmp
sub
and
cli
xor
add
call
pushf
popa
jmp
add
add
enter
jp
pop
ja
or
jo
imul
shll
aaa
pop
mov
sub
and
xchg
cmpsl
mov
and
cmp
cmp
and
dec
sbb
in
into
xchg
or
mov
adc
gs
jae
and
imul
lret
mov
add
pop
pop
fiadds
add
lea
out
sub
push
into
pop
test
xchg
push
and
jle
mov
movb
subl
fs
add
pop
ljmp
cmp
cwtl
inc
xor
test
daa
mov
decl
mov
push
pop
mov
jb
adc
ret
hlt
and
movsl
adc
jns
cmpsb
ds
xor
mov
imul
inc
pop
nop
jns
pop
aaa
pop
aam
add
add
leave
jl
mov
js
xor
fidivrl
in
jmp
bound
ds
inc
mov
xlat
adc
cmp
jno
in
leave
cmp
jecxz
lock
test
adc
sub
jle
rorb
cmc
lahf
and
inc
fcmovb
jbe
filds
xchg
pop
jl
movsl
sbb
jp
fwait
in
sbb
add
movsl
mov
push
cmp
cli
mov
mov
cld
lcall
push
clc
or
insl
jp
xor
je
js
pop
cmpsl
jmp
push
add
sbb
and
inc
cli
leave
xchg
mov
shrb
add
xlat
iret
mov
push
loop
test
xlat
and
jo
mov
js
in
mov
lret
daa
add
sbb
cmp
test
adc
fcoml
testb
fwait
and
xchg
mul
insb
movsl
add
jb
in
pop
sub
aam
shlb
mov
outsb
gs
inc
cmpl
popf
leave
addb
push
fstpt
mov
pop
and
imul
xchg
jae
push
mov
add
sbb
xor
bound
mov
call
popa
testl
into
mov
cmpsb
push
add
xchg
mov
sub
xor
inc
frstor
hlt
add
pop
mov
pop
sbb
outsl
or
mov
ret
xacquire
in
aam
or
jae
jb
or
mov
ret
test
dec
push
pop
addl
and
xor
subl
sub
mov
mov
inc
movsb
je
nop
xor
add
ds
cmpsl
xchg
xor
xlat
out
test
dec
add
std
sahf
je
dec
cmp
cmc
cli
lret
in
push
fs
xadd
roll
stos
pushf
sub
ret
jns
mov
or
out
sub
fcomps
pop
lods
push
pop
inc
loopne
adc
imul
xor
add
xor
in
mov
xor
or
sbb
xor
jne
mov
lret
sti
arpl
jp
hlt
and
fisubl
loop
pop
jne
pop
in
mov
and
xchg
imul
sarl
push
mov
mov
arpl
in
or
push
sahf
cmp
push
cmc
nop
pop
push
fucomi
out
jb
dec
or
lea
cmp
xor
notl
leave
fisttpll
push
cmpsl
das
cltd
pop
test
shll
js
mov
fsub
jge
xchg
add
and
add
mov
pop
pop
jmp
add
inc
lcall
test
lahf
jl
bnd
js
sarl
out
movsl
leave
jl
mov
add
pop
push
xchg
mov
lods
fisubs
mov
push
lods
cltd
pop
adc
cltd
jnp
stos
dec
pop
xchg
pop
mov
add
stc
inc
mov
insb
sbbb
push
sub
cmp
adc
test
out
scas
push
movsb
mov
andb
xchg
mov
push
in
movl
inc
or
rolb
pop
out
dec
push
aas
add
pop
and
pop
mov
imul
movsb
hlt
js
xchg
mov
pop
xchg
ret
or
cld
sub
xchg
iret
cmpsb
push
xchg
pop
add
ficomps
scas
jns
lcall
dec
nop
xor
jne
cmp
adc
mov
pop
sbb
fwait
clc
decb
pop
test
sbb
orb
rcrl
or
or
enter
adc
mov
xor
sbb
sbb
iret
and
movsl
shl
xlat
outsb
mov
pop
mov
daa
mov
faddl
inc
leave
bound
mov
stos
dec
test
aam
lods
or
xchg
dec
xchg
sub
cmpsl
adc
mov
sahf
adc
add
das
ss
add
shl
arpl
int3
sub
in
lret
mov
push
sbb
dec
adc
fs
dec
arpl
push
dec
test
into
push
lds
jp
fs
test
out
or
adc
add
xlat
jmp
ret
shrb
jmp
and
popa
mov
lock
xchg
fcomps
das
and
and
ljmp
cli
xchg
or
lds
popf
jno
popf
testb
lock
jmp
sbb
dec
lea
cmp
or
into
icebp
call
jo
add
add
out
cmc
or
sub
fcoms
out
xchg
clc
fucomp
mov
sub
jbe
pop
cmpsl
repz
mov
ljmp
sub
mov
iret
mov
inc
mov
push
push
call
xchg
clc
jns
popf
cmpb
mov
mov
call
sbb
loop
test
add
jmp
cmp
jp
iret
pop
shrd
lea
in
cli
loop
dec
fiaddl
fisubrs
popa
clc
movsb
test
bound
adc
sbb
sub
lods
cltd
or
mov
call
fmul
xlat
out
xor
pop
incl
roll
fdivrl
lahf
mov
adc
fidivs
and
mov
in
push
aas
cltd
lcall
cmc
adc
push
mov
jecxz
in
aad
or
xorb
mov
push
add
shl
push
scas
xchg
jns
jns
int3
pop
mov
dec
movsl
push
jmp
rcl
jne
push
push
inc
loopne
out
mov
bound
mov
fsubrs
mov
mov
mov
push
iret
lahf
push
push
mov
in
cli
ja
loopne
pop
roll
mov
add
hlt
xchg
out
lret
cmpsb
int3
cld
test
popa
mov
mov
mov
stc
gs
pop
or
pushf
add
cmovns
push
test
dec
pushf
sub
out
cmc
lods
push
and
pop
mov
test
in
xor
dec
xlat
fidivl
dec
test
xchg
adc
adc
mov
clc
pop
or
add
xchg
push
roll
and
inc
mov
int
push
sbb
in
ret
push
adc
insl
xlat
mov
lea
mov
ljmp
test
jl
pop
pop
xor
in
xlat
sbb
ljmp
ds
loop
lcall
mov
sbb
and
data16
inc
insl
sub
xor
mov
jo
aas
addr16
imul
xor
or
mov
add
fildl
out
xor
fistps
ficoml
dec
add
stc
xor
or
nop
jl
and
xor
jp
movsb
icebp
pop
movsb
mov
and
inc
jge
in
loope
adc
and
inc
les
in
xor
jmp
in
xlat
add
add
fs
pop
sarl
pusha
mov
and
sub
iret
xchg
mov
add
addb
xor
insb
jg,pn
push
adc
loopne
xor
pop
jmp
xor
repnz
mov
andb
xchg
aas
adc
add
movsb
pop
inc
xor
push
sub
cmpl
xchg
scas
inc
outsl
cmp
imull
jnp
dec
cmp
std
loopne
imulb
iret
xchg
out
and
cmp
xor
and
sbb
add
add
cltd
lret
gs
dec
jae
mov
cmpl
out
out
cmc
ljmp
xchg
test
lcall
xor
pop
fdivl
and
pop
jmp
xchg
mov
icebp
lods
imul
xchg
repz
sbb
jns
mov
sub
fbstp
pop
dec
aad
std
std
outsl
cwtl
pop
inc
mov
mov
mov
mov
push
pop
add
sub
cmp
cwtl
loope
push
jmp
ss
lret
dec
or
lods
cwtl
fcomi
nop
mov
sbb
fstp
cmp
pop
inc
dec
fldenv
jge
add
adc
xchg
fmulp
js
shl
cld
int
xchg
ja
jmp
sbb
fmull
es
mov
sub
jne
push
fcmovnb
xor
cmpsl
pushf
mov
stc
ret
mov
adc
ret
xchg
push
mov
repnz
push
pop
jmp
or
xor
movsb
enter
xor
pop
rcrl
loop
jl
enter
sub
mov
xor
in
mov
cli
xchg
pop
adc
pushf
jmp
mov
js
popf
push
mov
adc
jg
pop
xchg
fistpl
and
mov
and
leave
negb
mov
mov
push
and
fmuls
into
cs
popf
mov
ret
fninit
adc
add
cmp
mov
pushf
cmp
insl
inc
ret
jae
out
mov
cmp
mov
push
insb
lcall
push
xor
jmp
adc
cmp
ret
jnp
ja
ficoms
push
cld
mov
cmpb
out
outsl
rcl
enter
mov
mov
jmp
add
xcrypt-cbc
cmpsl
xchg
test
sub
into
add
sub
ljmp
xchg
loopne
and
aas
lock
jb
xchg
mov
clc
ret
mov
push
sbb
mov
sar
jl
in
out
bound
push
xchg
mov
pusha
cmp
cmc
sub
mov
cmp
pop
scas
mov
cli
stos
push
movsb
push
cmpsb
push
or
das
xlat
and
sbb
jns
cmp
jl
in
add
inc
sub
add
add
push
fsts
icebp
xor
inc
or
push
pop
push
xor
pushf
cltd
inc
jp
xchg
ja
into
mov
sbb
mov
push
out
fisttps
inc
adc
sub
sahf
gs
out
je
ss
xor
dec
je
addr16
ss
add
cltd
test
and
lds
mov
shll
add
fdivs
mov
fs
aam
repnz
add
mov
pop
mov
push
sti
pushf
ds
add
lock
push
pop
lods
daa
scas
dec
pop
and
mov
insb
add
xor
call
je
dec
mov
outsl
hlt
pop
mov
mov
or
les
jo
testb
adc
cmp
cmp
insl
dec
fs
fwait
loopne
ret
leave
scas
adc
jns
or
adc
shrl
and
repnz
pop
jbe
add
sub
mov
inc
dec
subl
gs
shrb
inc
mov
ss
cmc
cmc
insl
pop
lea
sbb
xlat
inc
xchg
jns
add
dec
mov
dec
shlb
test
cmp
mov
scas
ds
orb
arpl
repz
add
ja
stos
inc
sarb
xchg
xchg
lret
insb
cmp
xor
xorl
mov
cmp
mov
in
mov
pop
mov
and
fistps
sub
push
lds
int
rolb
lock
mov
mov
rcrl
xor
fisttps
cmp
arpl
sub
pop
sahf
dec
inc
sub
ficomps
pop
jb
xchg
or
adc
push
mov
and
movsl
jns
stos
xchg
or
add
xchg
addr16
sbb
mov
mov
int3
push
lea
cmpsb
fpatan
or
adcl
push
lods
xor
mov
sub
adc
and
dec
inc
dec
mov
popf
lods
shlb
push
int3
or
sbb
inc
push
push
adc
arpl
lahf
xchg
cmp
int3
ffree
xor
and
out
vpunpcklwd
in
cmpsb
in
decb
shl
cmp
xchg
push
iret
push
gs
or
pusha
insl
or
pop
and
idiv
cltd
push
cld
je
sub
mov
lcall
insl
or
pop
lcall
xchg
idivb
xor
test
popf
adc
shlb
in
sbb
test
inc
stos
es
xchg
sub
push
lock
dec
jns
xchg
inc
scas
ret
push
fsubs
mov
repnz
out
insb
icebp
add
add
mov
xchg
add
sub
sbb
push
and
out
cmp
push
cwtl
adc
scas
adc
decl
outsl
xchg
sahf
addl
cmp
ljmp
xchg
mov
xchg
mov
das
lcall
xchg
or
outsb
ret
loop
jnp
dec
pop
test
cmc
icebp
stc
rcrb
and
add
add
xor
iret
subl
cmp
sbb
cs
repz
adc
pop
jecxz
inc
insl
xor
add
scas
mov
jecxz
movsb
mov
scas
imul
xchg
xor
push
pop
dec
sub
mov
daa
in
bound
sbb
stc
xchg
or
or
mov
mov
insb
fwait
jno
loopne
sbb
fbld
jne
add
add
daa
xor
movsl
dec
jle
leave
out
ret
sti
leave
nop
push
xlat
mov
out
dec
addr16
enter
rcrb
xchg
jne
fwait
or
sahf
cmp
adc
push
xor
cmp
into
add
je
loopne
and
mov
subl
cwtl
fnsave
lret
ret
loopne
shrb
fnstenv
pushf
pop
push
inc
push
cli
jno
inc
out
mov
test
repz
shrb
inc
mov
xchg
push
out
lcall
test
jbe
jbe
xchg
mov
mov
in
out
sti
jl
cld
sbb
lea
ss
icebp
push
daa
adc
jno
ret
int3
out
adc
pop
dec
ds
dec
repnz
xchg
flds
aad
pop
sub
mov
or
or
int
add
push
rorl
lret
clc
or
out
push
push
push
or
aad
loope
cli
xor
cmp
lcall
icebp
adc
movsb
xor
push
stos
js
lret
test
test
leave
popf
ss
mov
mov
xchg
fadds
and
sub
jnp
or
push
pusha
ljmp
push
dec
call
scas
sbb
cmc
loope
insl
imul
or
into
cli
inc
fs
add
add
cmp
push
pop
into
jno
adc
sub
mov
fmuls
sbb
test
jl
dec
out
filds
inc
pusha
xor
adc
pop
lcall
stos
test
pushf
jo
xlat
pop
repz
push
or
ljmpw
push
sahf
cs
sbb
dec
cmp
jecxz
lret
mov
sete
repz
sbb
xor
mov
stc
add
add
shlb
orl
jno
add
addr16
mov
loop
into
scas
scas
outsb
addl
cmp
cs
push
add
orb
int3
dec
je
pop
inc
adc
jae
xchg
or
adc
ljmp
pop
sub
inc
mov
sub
xchg
sbb
xor
je
ficoml
push
sub
andl
and
sti
loop
mov
ss
dec
stos
leave
fstl
mov
add
dec
mov
or
inc
fiaddl
movsb
sbb
cli
pop
sub
fcmovnu
imul
mov
cmp
inc
outsl
nop
mov
inc
in
pop
add
sub
push
int
jge
iret
cld
ret
pop
loope
movsl
in
addb
daa
movsl
add
sub
xchg
inc
adc
out
out
test
sbbl
jle
add
mov
scas
icebp
add
std
mov
push
push
fdivrl
or
pushf
push
mov
inc
inc
lea
pop
sub
adc
and
mov
movsb
je
and
aas
or
nop
xchg
cmpsl
hlt
inc
cwtl
in
mov
test
ffreep
nop
dec
and
add
push
xchg
ljmp
or
xchg
jmp
test
and
test
jnp
shrl
cmp
out
add
ja
neg
lret
pop
mov
xor
fbstp
mov
sbb
loopne
jnp
stc
fcmove
ficompl
push
push
stc
fnstsw
mov
ds
and
arpl
inc
mov
bnd
rcl
push
fiaddl
mov
adcl
lret
fs
sub
jnp
fcompl
push
sbb
dec
pop
rolb
mov
fnsave
adc
rcll
dec
jnp
xchg
fsubrs
add
insl
test
jl
lret
or
sbb
test
jl
mov
push
out
adc
notb
out
stc
roll
sub
ficomps
arpl
mov
adc
test
cmp
je
cld
ret
std
leave
cltd
inc
mov
ficompl
push
cmp
leave
mov
add
pushf
add
add
sbb
add
and
jbe
sub
xchg
ret
lods
adc
cmp
push
xchg
jnp
rolb
mov
fdivrs
push
pop
jo
or
add
xchg
jmp
jl
add
xchg
sbb
or
dec
sahf
test
inc
mov
xchg
clc
cmp
cwtl
jbe
shll
insl
insb
fidivrl
xor
xor
mov
sahf
push
mov
pop
les
add
repz
mov
cld
adc
cmp
sub
mov
in
push
unpckhps
pop
inc
test
xor
push
cmpsb
ret
cmp
dec
push
push
mov
adc
jmp
and
jle
push
adcb
repnz
push
xchg
test
inc
dec
add
int
cmpsb
and
pop
cmp
jo
in
xchg
faddl
xor
pop
mov
cmc
fs
test
mov
cmp
mov
add
flds
call
xor
std
xchg
jle
and
adc
int3
xchg
mull
inc
jecxz
stos
call
or
stos
push
imul
mov
orl
xchg
mov
xor
xchg
xchg
and
int3
pop
cmp
nop
sbb
or
ja
fstpt
test
imul
pop
jno
jle
lcall
adc
scas
daa
mov
pop
decb
push
test
jp
add
add
jae
adc
int3
mov
xchg
mov
jl
pop
js
mov
lcall
push
cwtl
mov
sbb
push
xor
xchg
and
movhps
sti
mov
int3
adcb
stos
cld
adcb
aad
sub
repnz
scas
daa
stos
enter
cwtl
jg
pop
stc
lods
adc
scas
and
push
lfs
dec
test
add
dec
jnp
xchg
ret
xchg
pop
mov
dec
test
or
dec
call
push
mov
les
fisubrs
std
add
cmp
xor
inc
stc
add
call
ret
push
and
xchg
stos
or
mov
mov
jb
xlat
cmpsl
js
mov
mov
xor
ret
xchg
add
and
sbb
lods
jno
cs
sbb
mov
scas
lea
dec
jl
sahf
and
push
in
hlt
inc
mov
jecxz
push
jae
sub
ret
xlat
into
lods
dec
lock
pop
lods
leave
test
test
xor
dec
xchg
scas
popf
mov
popa
sbb
sub
sbb
sti
xlat
aas
outsl
in
fwait
push
es
xchg
lahf
add
jle
fdivrl
outsb
dec
dec
xor
das
xlat
xchg
in
fnstcw
lret
insb
cmp
das
mov
xor
pop
dec
pop
inc
fiadds
sti
cmp
xorl
pop
adc
xor
jae
loope
jbe
sub
shl
in
cmp
push
and
pop
pushf
mov
out
insb
roll
push
pop
fcmovnbe
mov
sub
outsl
add
add
int3
dec
cmp
in
ss
jns
or
inc
jg
shll
data16
xchg
testb
repz
pop
adc
lds
inc
scas
mov
lahf
pop
popf
test
sub
xchg
mov
and
jb
add
mov
fsubrl
mov
pop
adc
and
xor
dec
aad
mov
into
xchg
pop
pop
add
add
add
add
jle
jecxz
lret
dec
or
lock
std
les
jecxz
push
repz
push
and
mov
push
pop
jb
mov
jb
mov
cmp
mov
cltd
loopne
notl
jns
and
push
or
push
sti
out
jno
mov
lds
int
sbb
sub
stos
lret
sub
push
mov
add
gs
loopne
sub
test
adc
movb
icebp
ret
pop
in
cmc
andl
pop
add
jg
add
add
rol
addr16
mov
es
lods
outsl
pushf
dec
in
lods
push
js
dec
push
adc
lahf
rcl
jmp
ja
cmp
mov
scas
pop
and
mov
pop
inc
lea
jo
pop
int3
cld
cmp
testb
shrb
push
sbb
add
mov
xor
xchg
jge
sbb
ror
inc
mov
cmc
std
pop
pusha
ds
gs
xchg
dec
xchg
inc
jbe
rcrl
jo
push
inc
cmp
pop
and
mov
pop
jg
fwait
pop
mov
cltd
add
adc
or
jl
aad
mov
mov
or
maskmovq
mull
or
sub
pop
gs
mov
jle
cmp
aam
pop
imul
sub
add
add
andl
mov
aad
dec
mov
pop
scas
lock
jne
cmp
cmp
ja
or
xor
cmc
outsw
push
test
fstl
jne
fnsave
movsl
in
add
jo
ret
add
rclb
addr16
or
stc
lods
cmp
xchg
cmc
sub
and
inc
add
shrb
ljmp
sub
pop
bound
add
add
rorb
int3
xor
movsl
jns
adc
dec
std
leave
rorb
sub
ret
or
stos
mov
fs
inc
ja
sbb
aaa
pop
and
and
andl
mov
adc
jp
pop
int
push
sub
mov
mov
fwait
mov
mov
cwtl
and
roll
push
sbb
xchg
cld
xchg
mov
cwtl
ds
add
mov
dec
push
dec
aam
addr16
cmp
mov
fwait
sarl
xchg
std
push
cmp
push
and
or
xor
xor
clc
adc
and
rorb
adc
pop
xchg
push
shll
shr
push
dec
mov
ret
inc
mov
ljmp
loope
aaa
mov
mov
dec
inc
sub
xchg
enter
pop
dec
mov
jge
jmp
add
or
add
ret
sbb
rcll
xor
repnz
movl
mov
ja
add
xchg
xchg
inc
push
int3
fbstp
icebp
shll
mov
cli
gs
and
lods
je
sbb
mov
sahf
stos
fdivl
scas
repz
sbb
xor
pop
xchg
addr16
mov
dec
mov
repnz
pop
push
imul
add
fisubrs
mov
add
cmp
mov
or
rolb
add
add
fdivs
je
mov
js
push
cmp
js
jge
xor
ret
push
cs
cli
pop
mov
mov
test
lods
pop
stos
jmp
dec
push
jmp
stos
or
push
lods
adc
daa
inc
mov
out
mov
mov
sub
jns
cli
jae
and
xor
daa
xor
mov
cltd
les
cld
loope
bound
cs
sbb
nop
add
add
test
xchg
xchg
mov
out
stc
iret
test
sub
mov
lock
or
int3
data16
scas
out
mov
in
sbb
lds
add
add
xchg
test
or
mov
iret
in
daa
insb
aas
cmp
cmp
fistpl
pop
cmp
outsl
inc
xchg
add
js
pusha
mov
inc
aaa
clc
jnp
sbb
mov
cmpsb
adc
push
add
pop
sub
movsb
pusha
mov
mov
and
jp
cmp
stos
mov
or
jp
push
inc
add
mov
lret
sahf
out
and
jnp
sbb
cmp
cmp
push
xor
sub
jg
pop
mov
fdivrl
gs
cld
jae
faddl
je
ret
jle
adc
mov
cmpsb
push
cwtl
into
call
add
jne
int
idivb
aas
mov
mov
cmp
push
push
sbb
test
imul
sub
rorl
dec
mov
ljmp
push
sbb
mov
mov
int
imul
lret
cmpsl
negb
and
mov
into
and
push
fwait
xchg
sub
sub
xchg
cmp
rcrb
ja
jnp
sub
jmp
pushf
mov
lods
cmp
out
add
std
mov
movsb
std
or
mov
xor
popf
xchg
and
incb
imul
loop
sbb
pop
popa
add
outsb
mov
dec
xchg
ss
loope
inc
xor
pop
nop
xchg
and
jno
add
inc
mov
out
fmuls
hlt
jl
fmulp
sub
or
incb
sub
add
add
shll
int
leave
lock
or
cmp
cs
js
cmp
dec
cmp
dec
outsb
sarl
sbb
fxch
sbb
or
pop
add
mov
in
js
lea
out
add
or
repnz
push
ss
add
jbe
or
mov
out
cmp
mov
pop
and
xor
nop
ljmp
adc
pop
pop
