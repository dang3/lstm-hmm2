cmp
es
jne
add
sub
mov
fs
push
inc
or
fs
jl
mov
cmp
adc
rol
jp
mov
enter
fisubrl
mov
mov
fldenv
movsb
jb
mov
pop
mov
shll
xchg
rol
into
xchg
cli
sub
cwtl
and
testb
sub
adc
dec
fisttpl
cmp
jnp
xor
cwtl
xchg
adc
enter
shrb
mov
enter
add
cli
lods
or
in
xchg
mov
cmp
fstl
dec
adc
jge
fidivl
push
rcll
xlat
mov
dec
pop
mov
jp
stos
shll
or
sbb
cli
movsl
loop
in
adc
int3
xchg
dec
div
sub
inc
push
lods
not
xor
insl
cli
jl
add
mov
fucom
push
fcomps
addr16
fistpll
mov
inc
imul
stc
aad
jmp
fiadds
sub
jns
jb
push
bound
dec
pop
jmp
pop
adc
test
ds
imul
pop
cmc
stc
cmpsl
sub
rcrb
xchg
sub
xchg
and
xor
loop
add
inc
lods
jmp
cltd
flds
pop
jl
inc
mov
inc
outsb
test
ss
mov
or
dec
inc
sub
nop
rcrb
mov
lock
or
outsb
mov
dec
adc
pushf
adc
push
mov
xchg
push
fistpll
adc
pop
cmpsl
inc
sbb
xor
xchg
add
mov
ret
gs
push
stc
push
dec
jmp
cmp
cmc
push
test
test
jmp
movsb
cld
and
or
dec
and
sub
fdivr
and
sub
inc
roll
into
mov
xlat
sbb
add
popf
lret
or
dec
inc
out
incb
jnp
jg
fcomps
mov
add
cmp
in
fsubr
mov
pop
aad
push
aam
leave
cltd
pop
ljmp
popa
ret
clc
xchg
hlt
add
orl
or
sub
lret
xor
jo
ret
push
out
addr16
cmp
lods
cmpsb
call
sbb
xor
cmc
sub
lods
jge
nop
dec
scas
xchg
mov
test
add
sbbl
shlb
roll
ljmp
jp
mov
add
ret
mov
stos
and
cmp
into
jmp
dec
inc
mov
jo
out
push
inc
rolb
ficomps
test
xchg
out
fwait
imul
adc
mov
add
sbb
mov
push
add
dec
leave
push
mov
sub
push
lea
push
call
pop
mov
ret
scas
xchg
mov
xor
test
repz
inc
pusha
push
jge
inc
push
mov
lock
cmp
jle
rcrb
mov
adc
push
in
sub
jle
xor
sar
incb
stos
mov
cmp
fs
fsubrp
sub
mov
aam
notl
ret
sub
cs
sbb
testb
mov
sahf
divb
sub
sbb
imul
insb
test
jb
push
xor
mov
mov
mov
cltd
add
mov
mov
ss
in
adcb
push
punpckhwd
or
rorb
test
rorb
bswap
jmp
add
scas
cmp
out
pop
cmpl
mov
jmp
sub
imul
jnp
or
inc
dec
insb
out
jbe
xor
aad
and
add
jno
sti
cmp
fimull
rorb
int
push
inc
pop
mov
in
cmp
mov
mov
jns
dec
jmp
lretw
sub
mov
xchg
outsb
inc
jmp
mov
aaa
or
fwait
js
ffreep
sub
jmp
ds
imul
xchg
mov
shlb
xlat
es
push
out
ss
lret
hlt
jmp
enter
mov
pushf
bound
mov
jmp
add
xchg
pop
xchg
fsts
mov
push
inc
dec
xor
inc
fbld
mov
push
fimull
hlt
hlt
btc
and
jle
lods
cs
mov
cwtl
pushf
stc
incb
int3
shl
pop
jae
dec
mov
pop
sti
bound
mov
add
pop
cmp
clc
xor
fmul
addr16
push
cmp
rcrb
pop
pop
stos
xchg
mov
inc
stc
pop
sbb
push
popa
and
jmp
add
mov
lcall
push
and
mov
cmp
pop
scas
icebp
stc
les
lods
and
mov
cmp
test
fdivl
in
rclb
fdivs
inc
ret
mov
js
out
cmp
inc
push
inc
insl
clc
bound
mov
jmp
out
add
bound
sti
inc
outsb
xchg
jno
pop
aaa
push
cmp
jg
fisttpl
js
fstpl
subb
push
movsb
add
push
jae
cmc
sarl
lahf
inc
or
sub
aam
daa
sbb
movsl
test
sahf
out
mov
xchg
and
arpl
stos
shlb
test
lock
lds
clc
or
mov
out
test
xchg
rcr
xor
adc
rcrl
mov
movsb
stos
out
fimull
popa
mov
movzwl
jmp
lea
xor
hlt
jmp
icebp
les
aam
loopne
add
insl
lret
mov
xor
jmp
dec
xor
vpunpcklbw
add
movsl
inc
sub
int3
cmp
into
xor
add
roll
sub
jne
or
outsl
sbb
or
inc
and
bound
sahf
pusha
fmull
add
jmp
pop
sub
fisttps
lret
pop
add
pusha
jecxz
scas
into
sbb
sub
mov
add
dec
rep
pop
pusha
xor
jmp
cmp
push
clc
shll
fnstsw
mov
pop
iret
push
push
adc
or
pop
xchg
sub
adc
cmp
xor
mov
orl
push
sbbb
push
jmp
movsl
mov
sbb
rcr
das
pop
add
cmpsb
push
push
sarl
push
jmp
ds
jle
jg
lcall
scas
jae
outsb
or
sub
pop
add
cli
pop
bound
mov
sub
out
jmp
mov
add
test
jns
out
fs
movsl
jmp
mov
ja
cmp
mov
add
adc
xlat
cmp
fidivs
dec
cmp
mov
adc
jmp
testl
cmp
sub
mov
cltd
push
out
movsb
dec
xor
and
xchg
pop
in
ds
mov
rol
xor
jmp
in
cmpsl
xor
daa
jno
mov
clc
test
and
add
mov
sub
arpl
sti
in
mov
add
repnz
scas
jno
nop
daa
out
dec
sbb
jae
mov
jl
inc
sbb
es
mov
mov
mov
dec
fcomip
enter
aas
jbe
ja
adc
cs
leave
xor
mov
fisubrl
push
mov
scas
fwait
pop
ljmp
sub
js
pusha
sbb
mov
out
pop
jo
pop
pop
or
lock
mov
jo
xchg
test
or
test
jge
push
mov
pop
mov
adc
sub
and
leave
cmpsl
cltd
dec
adc
push
sbb
jae
stc
push
jno
dec
movsl
sub
push
out
or
testb
xor
loopne
rcrb
inc
jmp
popl
cltd
daa
push
sbb
push
inc
xor
mov
mov
push
fdiv
fildl
add
sbb
sbb
stc
cmp
inc
mov
mov
jp
out
mov
sbb
mulb
pop
jp
pop
test
jns
loopne
repnz
jmp
sub
mov
push
loope
arpl
mov
mov
out
xchg
fcomps
leave
cltd
stc
push
das
test
sbbb
mov
test
sub
mov
jne
inc
dec
mov
dec
cld
cmpsl
out
jl
jecxz
scas
ror
out
jl
mov
add
ror
mov
outsl
and
add
imul
lods
jecxz
and
arpl
jl
jno
shrl
dec
pop
rclb
add
rcll
or
cmpsl
fbstp
icebp
bsf
andb
into
push
pushf
repz
jb
orb
pop
push
stos
aad
lock
loopne
mov
mov
push
mov
sbb
cmp
stc
sbb
mov
dec
ja
inc
mov
aas
inc
bswap
jmp
sarl
jb
int
xchg
lea
jmp
jle
mov
les
test
idivb
lea
inc
nop
mov
mov
dec
scas
push
add
test
mov
xchg
popf
mov
vunpckhps
jbe
sub
mov
hlt
or
ljmp
jge
pop
mov
lea
in
rclb
inc
ljmp
out
sbb
into
lea
ficoml
mov
inc
test
push
iret
mov
or
dec
movb
loopne
scas
insl
pop
and
sub
sub
mov
insb
sbb
fsubs
mov
dec
jmp
aaa
sub
rclb
scas
fwait
adc
or
mov
cltd
xor
add
jmp
and
xchg
or
pusha
movsb
mov
mov
cli
pop
clc
mov
mov
sub
mov
fidivs
adc
out
cmp
lahf
add
mov
push
or
jnp
int
cli
and
lds
mov
pop
mov
pop
je
test
or
in
cmp
adc
lods
cmp
xchg
cs
push
mov
jnp
das
lcall
lods
mov
lcall
sub
repz
add
les
inc
push
push
dec
std
loopne
inc
cmp
icebp
fwait
dec
push
fs
sarl
pop
or
jmp
mov
or
jmp
loop
sbb
in
or
mov
mov
add
cmpsb
jmp
sbb
int3
push
les
and
pushf
or
mov
pop
mov
mov
mov
fsubp
mov
push
imul
push
lcall
out
inc
xchg
inc
push
test
push
or
das
cmp
das
and
jmp
sahf
mov
mov
mov
movsl
or
pop
stos
sbb
cmpsb
lods
stos
pop
arpl
pushf
and
jmp
leave
sub
pop
aad
jge
fidivl
pop
push
inc
cmp
ljmp
lea
inc
add
push
or
lock
loope
sub
movsl
adc
sub
push
pop
pop
add
push
mov
adc
push
add
cltd
in
ljmp
sub
and
ss
sbb
cmpsb
xor
out
inc
cmpl
push
inc
js
ja
jmp
jnp
mov
xor
adc
cmp
jne
ret
xchg
out
notb
inc
aas
lret
popf
inc
or
sbb
xchg
and
fisttps
je
xor
pusha
mov
adcl
mov
das
mov
sbb
add
mov
sbb
inc
testb
mov
push
idivl
sbb
out
pop
pop
stos
pushf
aad
shrd
popw
mov
and
add
mov
sub
add
insl
in
jo
push
call
inc
stos
adc
pusha
xor
xor
mov
add
mov
and
mov
inc
dec
je
mov
imul
cmp
jne
mov
imul
cmp
jne
mov
imul
test
je
add
sub
sub
add
popa
ret
out
sub
les
cmp
arpl
hlt
fimuls
dec
bound
mov
sbb
lret
repz
stos
frstor
inc
fldt
popa
inc
std
sub
bound
xlat
sbb
insb
jbe
jbe
cmpsl
inc
out
leave
adc
pop
mov
sub
mov
mov
dec
mov
enter
xchg
jmp
mov
stos
xor
in
pop
add
pop
js
push
sarl
xchg
repnz
insl
call
leave
lret
xor
loopne
mov
addr16
cmpsl
lahf
and
imul
and
mov
push
jmp
cmpsb
sbb
mov
fwait
mov
jmp
mov
pop
pop
out
add
push
mov
shl
xorl
xlat
push
bound
outsl
stc
out
pop
fdivp
fistpl
pop
aad
sahf
jg
popf
add
fcoms
addr16
mov
xlat
int3
dec
pop
popa
aad
xor
mov
or
and
ja
stos
mov
jmp
popf
imul
test
jmp
ret
push
jle
in
sbb
jp
add
jmp
add
jl
and
jbe
stos
test
xor
mov
insb
push
push
cltd
sub
js
movsl
ror
cmp
jmp
xchg
addb
stos
xchg
mov
clc
inc
movd
addl
rolb
mov
mov
sbb
jg
adc
push
dec
or
out
xor
sbb
lret
adc
inc
inc
jns
in
stc
jge
xchg
xor
mov
adc
xor
xchg
mov
sbbl
add
xchg
sub
xchg
cmp
dec
repz
mov
mov
fstp
inc
mov
mov
lcall
movsb
movntq
pop
les
aam
xchg
dec
int
mov
xchg
pop
cli
mov
repz
fldenv
mov
jle
fcmovbe
add
pop
jg
pop
jbe
cmpsl
inc
mov
inc
xor
jmp
xchg
neg
jmp
scas
inc
pop
sub
or
xor
inc
xchg
add
adc
dec
imul
jns
xchg
xchg
fs
rcll
iret
lahf
add
jmp
lods
popa
and
add
je
jo
fnstcw
cmp
divb
cmpsb
inc
repnz
push
sbb
jg
lods
ljmp
imul
add
xchg
imul
sub
lcall
mov
sahf
mov
dec
mov
ja
push
ret
leave
divb
cmp
xor
pop
movsb
dec
loop
inc
add
mov
jp
aam
iret
popf
adc
gs
push
pop
mov
jg
mov
rcr
out
mov
or
dec
jnp
push
mov
sar
fdivr
les
popa
loopne
jno
pop
jno
sub
mov
test
fsubrs
movsl
dec
idivb
mov
push
dec
inc
into
push
mov
xchg
pusha
lea
fnsave
push
xor
jmp
pop
cmp
cltd
cli
jae
sahf
mov
push
xchg
out
xchg
xchg
inc
xchg
aad
xchg
fnsave
and
cli
jmp
mov
jo
lcall
sbb
xor
push
mov
dec
jmp
sbb
lcall
inc
fnstsw
mov
out
movsb
dec
pop
cmp
sbb
stos
jne
mov
fsubrp
pop
cmp
jge
jns
jns
add
jns
push
jp
insl
js
jl
in
cmpsl
enter
sbb
mov
jo
loopne
mov
push
ret
repnz
test
shll
fstpl
mov
pop
mov
insb
icebp
push
repnz
test
fimull
sub
push
fsubl
repz
ffree
jp
inc
inc
fisttps
mov
and
fdiv
xlat
jnp
jns
mov
ret
xor
daa
pop
xchg
xor
je
repz
xor
pop
lods
jmp
out
mov
lahf
rol
scas
sbb
pop
dec
pushf
xchg
adc
popl
inc
xchg
dec
push
or
int3
cmpl
xor
hlt
loopne
mov
insb
xor
inc
jmp
out
ret
add
xchg
arpl
inc
mov
pop
loope
push
outsb
outsl
ds
jmp
imul
repz
add
xor
add
nop
sahf
mov
pop
in
inc
fdivl
or
fwait
and
add
jle
fnstsw
xchg
fistps
pusha
jge
cmp
inc
andb
lret
jns
es
out
mov
pop
insl
loope
sbb
jecxz
mov
mov
push
testl
lods
cmp
push
mov
push
test
inc
mov
pop
sbb
sti
dec
bswap
jmp
and
rcrb
aam
jg
and
lods
stc
int3
incl
pop
scas
lcall
push
ljmp
rcll
or
lods
mov
sub
jo
test
cs
cltd
mov
xchg
inc
adc
aam
ja
cmp
or
stc
xchg
cmp
das
inc
imul
and
push
sti
pop
pushf
pop
push
fdivrp
in
inc
inc
ljmp
jecxz
pop
xchg
jecxz
jbe
mov
pop
popa
aaa
sbb
inc
loope
and
call
aas
rol
jmp
int
mov
fisubs
in
cld
xchg
mov
mov
sbb
fdivl
shll
int3
jne
mov
or
pop
fabs
inc
aas
xchg
int
xchg
xor
jmp
push
jns
push
xchg
std
hlt
dec
test
aam
inc
dec
bound
sbbb
frstor
add
adcb
sub
ljmp
push
sti
jle
stos
ljmp
push
loope
xor
jmp
leave
jne
sbb
pop
aad
imul
fs
mov
out
mov
pop
pusha
stc
iret
pop
daa
push
xchg
adc
dec
bound
leave
in
xor
jb
outsl
push
ds
loop
push
shll
jmp
shlb
sbb
in
push
sub
jg
push
mov
scas
ret
push
inc
jne
clc
cmp
pop
mov
imul
ja
pusha
shl
jns
inc
xor
pop
out
loop
jns
jmp
push
sub
mov
xor
push
stos
jne
icebp
js
cmpsl
add
cmp
and
fsubs
lea
xor
out
jnp
cli
xchg
jmp
cmc
mov
pop
scas
mov
enter
sub
adc
mov
jb
pop
cmp
int3
xchg
or
push
icebp
lods
gs
icebp
out
pop
mov
jae
dec
mov
mov
inc
test
out
lret
add
add
outsl
push
add
xchg
leave
or
mov
cmc
loope
scas
imul
std
incl
xor
sbb
scas
pextrw
js
add
sbb
scas
add
jge
repnz
push
mov
push
cmpsl
sahf
pop
cmp
fidivrs
ja
push
movl
es
je
js
mov
or
xchg
xchg
mov
pop
inc
mov
jnp
test
mov
xchg
adc
gs
and
sbb
or
jmp
inc
lock
bnd
clc
push
mov
push
push
inc
in
mov
pop
in
push
mov
clc
jmp
add
repz
rcl
sub
push
adc
push
loope
jle
shll
pop
nop
sbbl
mov
sbb
enter
fs
push
mov
mov
dec
jbe
jbe
into
sub
cmp
jb
cwtl
je
jmp
shll
mov
hlt
cmp
xchg
arpl
cmp
hlt
dec
sbb
xor
push
fst
push
mov
fwait
xor
fcmovne
popf
cli
dec
in
mov
ss
add
cmp
pop
jmp
decb
adc
xlat
out
imul
cmp
ret
fnstsw
cwtl
push
push
add
jmp
lret
ljmp
bswap
jmp
mov
cs
test
jp
sub
jmp
jg
iret
call
cld
mov
int3
jecxz
mov
inc
dec
push
movsb
dec
or
lea
lret
dec
or
arpl
fucom
fnstsw
mov
xchg
loopne
push
sbb
jae
std
insb
aad
scas
enter
cmpsl
dec
std
fucomip
test
cmp
xor
sub
add
adc
cmpsb
andl
dec
jle
pop
imul
and
in
insb
test
cld
aaa
adc
mov
push
jmp
jmp
cmp
push
mov
inc
outsl
and
jmp
xor
pop
addr16
add
divl
inc
xchg
pusha
mov
cld
adc
popa
stc
fwait
jae
add
rcr
add
rcrb
test
and
or
loop
outsl
fcmovnb
stc
cmp
hlt
dec
adc
mov
pop
sub
in
mov
and
sahf
mov
pop
pop
xchg
loope
xchg
cld
rolb
movsb
incl
mov
sub
pop
adcb
adc
xor
mov
test
pushw
cmp
mov
in
inc
push
mov
adc
jle
js
mov
movsb
incl
loop
sub
imul
jns
aad
mov
sahf
cmp
mov
xor
call
jl
lcall
adc
lods
std
dec
add
repnz
in
stos
cld
jb
mov
dec
push
pop
sub
adc
ljmp
jbe
in
sti
rclb
push
mov
data16
push
jno
data16
sbb
mov
xchg
mov
sub
dec
sub
dec
lret
cltd
testb
xchg
mov
gs
pushf
sub
pop
rorl
pushf
mov
addr16
mov
sbb
lcall
mov
into
mov
mov
std
clc
lret
ss
insb
adc
pusha
mov
or
mov
in
jne
push
in
aaa
pop
rorb
xchg
push
push
stos
repnz
les
je
mov
lods
sub
mov
dec
cmp
dec
icebp
mov
dec
pop
scas
and
xor
pushf
jae
popf
xchg
push
int
insb
mov
sti
push
jg
cltd
cmpsl
outsl
xor
cmpsl
pop
dec
sbb
cmc
cmpsb
imul
push
std
aad
mov
cs
and
push
or
jmp
gs
xchg
inc
jp
cmp
popa
fsubr
cltd
or
jae
adc
cld
cmp
xchg
scas
ss
ds
push
jmp
out
and
sub
push
xor
jbe
jns
gs
idivb
leave
pop
mov
sub
inc
adc
lods
push
sbb
mov
sub
inc
push
jge
xchg
cld
negb
cmp
xor
repnz
shr
js
xchg
or
add
xchg
loop
sub
loopne
popf
mov
mov
shlb
mov
or
dec
jns
es
pop
jne
nop
pop
test
sahf
jns
pop
add
or
int
add
or
enter
push
jge
cwtl
and
shlb
mov
inc
dec
out
mov
sub
cld
loop
imul
push
out
loopne
loope
sti
stos
add
fadd
clc
xchg
ret
icebp
sbb
adc
xchg
out
loope
cld
sbb
pushf
inc
push
rcll
and
xbegin
lods
cmpl
push
fwait
mov
fwait
push
fmul
fs
loopne
mov
jb
movntps
jle
nop
push
stos
loope
mov
int3
cmp
int
push
or
and
cmp
idivb
jae
lea
stos
push
es
test
push
cli
push
repz
out
pop
xor
dec
push
lds
or
cs
add
lds
nop
outsl
mov
stos
rcrb
loop
cld
jb
pop
mov
hlt
gs
sub
out
lret
lock
or
es
subl
or
add
mov
shl
into
cwtl
jmp
mov
insb
imul
je
pop
sarl
add
ds
fidivs
sbb
insb
imul
jne
adc
sub
or
pop
mov
adc
test
iret
fimuls
aam
inc
jg
test
lahf
mov
xchg
decb
mov
adc
loopne
addb
dec
pop
imul
pop
push
mov
pop
mov
sub
dec
test
lods
addr16
sbb
dec
aas
xchg
mov
clc
movsb
movsb
les
mov
ds
pushf
lret
fcompl
sbb
hlt
xlat
pop
and
add
push
cli
dec
mov
push
mov
lods
inc
js
cltd
iret
dec
or
xor
ret
pop
shll
je
and
cmpsb
xchg
out
or
sahf
sub
aas
push
shlb
adc
mov
xor
loopne
sub
lahf
xchg
into
mov
inc
and
aad
xchg
andb
mov
xor
lods
int
lret
lods
xchg
mov
fsts
and
out
cmc
dec
mov
call
or
dec
pop
and
mov
sbb
jbe
xchg
loop
xchg
push
xchg
dec
test
adc
divb
dec
fisttpl
add
xchg
pop
inc
pop
call
mov
mov
fcmovu
out
aas
xor
or
cmp
mov
cmp
fucomip
mov
inc
rdmsr
test
jmp
scas
adc
loop
push
jecxz
jmp
imul
in
cmp
cld
in
out
insb
sbb
rcll
mov
push
pop
and
push
sldt
les
mov
sarl
dec
divl
mov
sti
lea
jmp
cmp
pop
lods
outsl
xor
xor
fdivl
or
jmp
movsb
sub
loope
adc
daa
add
push
nop
jmp
fisubs
sti
fmull
dec
add
in
xchg
ds
roll
add
dec
cmp
ret
leave
cltd
jl
add
cmpsb
mov
int
popf
fwait
mov
insb
mov
out
fldl
push
pop
mov
aam
rcll
push
mov
in
rcrb
into
cmp
dec
adc
inc
mov
push
std
das
ss
sarb
and
subb
fwait
inc
or
adc
add
inc
test
fucom
ljmp
sub
int
add
pusha
and
call
inc
popf
mov
cmpl
icebp
iret
push
cltd
sbb
fldcw
test
lret
pop
inc
cmp
xchg
daa
xor
inc
mov
cmp
pop
gs
into
jecxz
loopw
or
icebp
divl
inc
push
mov
or
sub
cmpsl
push
dec
repz
sbb
cmp
enter
mov
sbb
imul
push
movsb
popf
push
notl
xchg
sub
add
jb
pop
pop
and
aad
xor
dec
hlt
ds
adc
aas
repz
incb
fisttpll
ja
mov
mov
aas
dec
fdivs
add
fldln2
mov
mov
sub
jbe
sub
lcall
or
jb
jns
sbb
pushf
test
xchg
and
arpl
jmp
in
hlt
or
jno
mov
loopne
addr16
jge
es
jecxz
or
rclb
xor
sahf
jmp
sbb
insl
scas
adc
add
jmp
xchg
xchg
fadds
add
call
push
inc
mov
outsl
addr16
cltd
ljmp
jno
cmp
push
sbb
and
push
push
jmp
sbb
jmp
xchg
fisubs
cmp
ds
insb
rclb
pop
lret
out
adc
xchg
and
jmp
or
lods
bound
imul
es
aaa
mov
popf
es
mov
adc
xchg
aad
mov
gs
mov
cld
pop
ret
xchg
jmp
cmp
mov
lcall
and
sbbb
movsb
mov
loopne
mov
loope
fisttpll
lea
jmp
lret
mov
xchg
idivb
pop
jb
out
shll
adc
lods
out
lahf
jge
jne
sbb
adc
sbb
add
dec
sub
push
stc
mov
mov
and
out
cmp
pop
icebp
xchg
decb
gs
loopne
push
mov
sbb
mov
jmp
inc
xchg
fcmovnbe
pop
shll
and
popf
fsts
ds
aas
xor
xor
and
pop
mov
xlat
add
loope
sub
inc
dec
dec
scas
sbb
mov
dec
push
shrb
dec
mov
or
mov
ret
scas
gs
jle
or
std
add
and
xchg
pushf
sub
xchg
mov
jb
into
int
mov
jle
ret
mov
pop
and
loop
into
clc
cmp
shlb
or
lods
arpl
cmp
lret
mov
cmpsb
imul
xor
mov
and
ficompl
ljmp
leave
fs
add
mov
imul
jmp
fs
lret
mov
sbb
cltd
push
out
test
cmp
fs
and
push
das
sbb
mov
pop
inc
jnp
rcll
fcmovbe
add
jmp
mov
push
xchg
xlat
cmpsl
push
stos
and
stc
mov
mul
push
and
mov
sti
sub
sbb
cmpsl
xchg
or
mov
aad
mov
add
dec
push
mov
imul
push
movsl
dec
or
push
out
mov
jl
in
scas
add
xchg
cmp
add
xor
sub
mov
or
ja
clc
add
and
sub
jno
rcrl
sbb
pop
sbb
mov
dec
scas
xchg
mov
jo
push
ss
nop
mov
cmp
out
cmpsl
addb
push
call
xchg
shld
lods
cmpsl
ret
je
test
dec
shl
xchg
add
cmp
sti
jle
jae
mov
sarb
jmp
test
add
mov
ret
cmp
movsb
push
or
inc
sbb
or
xlat
mov
jns
jecxz
cmp
or
pushf
into
cmpsb
bound
or
repz
out
cmp
adc
cmp
in
jnp
or
mov
shl
mov
xor
inc
orb
jge
pop
add
xor
sub
mov
cmpb
icebp
into
in
mov
push
movsb
inc
mov
jnp
jecxz
insl
cwtl
jne
xchg
xor
jge
pusha
inc
icebp
mov
jo
pop
mov
xor
xor
mov
int
xchg
jmp
jge
pop
aam
jae
push
push
loopne
loope
popa
mov
dec
outsb
adcl
data16
jne
subl
rcrl
cmp
mov
push
jp
jp
popf
xor
sbb
notl
add
sub
jmp
outsl
cmpsb
enter
sub
add
mov
mov
xchg
adcb
outsb
je
or
aas
dec
aam
cmp
bswap
jmp
sbb
call
cmp
xchg
xchg
cmp
inc
add
push
and
cmp
or
xchg
arpl
mov
mov
or
pushf
roll
insb
mov
orb
mov
inc
pop
in
leave
mov
inc
inc
test
daa
xorl
sbb
jne
pop
gs
js
in
pop
fwait
push
mov
pop
cli
inc
jmp
es
jmp
lods
pop
jbe
mov
repz
jl
xor
jmp
out
dec
mov
dec
sbb
xlat
sbb
fcomps
xchg
stos
testb
loopne
fucompp
insl
or
mov
pop
jno
sbb
insl
and
dec
imul
mov
mov
and
incl
sub
mov
xchg
sahf
add
jne
iret
jnp
and
nop
inc
and
clc
cmp
sbb
pop
add
scas
jg
mov
sti
push
push
in
enter
jl
ja
cmp
mov
inc
divl
cmp
rcrb
or
add
fcoms
leave
pusha
jmp
jbe
aam
inc
call
mov
mov
insl
pop
fmuls
push
inc
jmp
clc
cmc
test
and
mov
inc
mov
push
sahf
clc
ret
mov
lea
mov
dec
sbb
or
xchg
sbb
jno
dec
test
or
pop
mov
mov
repz
enter
mov
fiadds
sub
sub
adc
dec
pop
pusha
push
add
pop
pop
fwait
adc
test
pop
xchg
jnp
fsubr
mov
dec
pop
pop
aam
push
mov
and
push
ficomps
divl
jmp
xor
cmp
pusha
add
mov
movsl
shlb
jmp
jmp
loop
out
cmp
dec
jmp
stc
xor
aaa
adc
scas
sbb
jb
adcb
in
dec
xor
lret
int3
push
push
cwtl
scas
sub
and
imulb
jbe
roll
sbb
in
inc
lds
out
sbb
add
jmp
pop
addr16
dec
popf
shlb
inc
xchg
pop
js
or
cmp
adc
push
jb
aas
pop
xchg
jns
add
lcall
sbb
jmp
cmpb
xor
jmp
arpl
cmp
and
std
in
hlt
cmpsb
adc
lahf
sahf
pop
pop
int
sbb
pop
add
dec
or
dec
jae
adc
lods
push
sbb
into
add
sarl
jae
out
call
xor
and
shrl
repnz
mov
mov
fstpt
add
jmp
imul
jns
jp
pop
or
test
xor
inc
cld
call
fdivs
inc
iret
das
orl
movsb
insb
or
jmp
lret
nop
cmpsl
aaa
maxps
mov
fwait
sbb
fistpll
cld
push
xor
xchg
hlt
cld
mov
push
test
sbb
in
cwtl
and
xor
xchg
xlat
mov
sbb
hlt
lcall
aam
call
mov
push
push
xchg
sbb
or
loopne
jl
mov
fpatan
xor
mov
inc
sub
repz
fs
jge
xchg
fucomi
addb
jmp
pusha
sub
jae
jge
mov
sbb
push
inc
iret
push
out
push
fdivrs
mov
test
mov
mov
out
and
jae
mov
mov
cmp
incl
js
rcrb
xchg
mov
xchg
lret
rolb
fxch
cmp
mov
jmp
add
push
mov
or
xchg
ret
stos
mov
int3
mov
sbb
xchg
xor
test
jbe
ret
rclb
ljmp
idivb
push
stc
push
mov
mov
xchg
ja
jb
ljmp
fdivrp
ljmp
mov
cmp
hlt
xchg
push
or
fldl
pop
fildl
sub
mov
data16
movsl
ja
das
adc
jmp
pop
xor
into
push
cmp
jmp
sub
push
js
std
mov
dec
xchg
loopw
inc
push
aas
jo
aas
jnp
jno
loopne
ror
mov
pop
mov
inc
jne
insb
daa
shl
xchg
icebp
xor
pop
push
mov
jp
jmp
jne
xchg
sub
popl
dec
mov
out
dec
pop
scas
add
ja
mull
adc
xor
lea
adc
dec
mov
jmp
or
mov
bound
icebp
lock
mov
rorl
fdecstp
fucomi
sti
push
add
adc
dec
vpminub
pop
dec
mov
icebp
sub
adc
ret
cli
mov
sub
lods
imulb
jbe
dec
leave
gs
jg
loope
xchg
imulb
xchg
mov
adc
ss
pop
pusha
loope
ja
jmp
dec
out
jne
sub
push
mov
xchg
ret
adc
inc
sub
jge
sub
jmp
mov
pop
popa
sbbl
frstor
je
xchg
cmp
fldl
out
sbb
add
xchg
or
shlb
cmp
and
jmp
and
cmc
popf
outsl
sub
mov
movsb
adc
xchg
incb
xor
adc
xchg
xchg
push
das
arpl
decl
scas
outsl
and
xchg
imulb
fistpll
inc
inc
jne
cli
out
cmpsl
outsl
sbb
pop
ja
inc
mov
inc
or
test
nop
jl
shrl
push
cmpl
pop
je
mov
mov
sub
cld
js
cwtl
fs
xor
fists
sbb
mov
and
and
mov
mov
adcl
pop
dec
or
and
int3
ss
jmp
add
inc
sub
je
xor
mov
int
popa
shl
inc
stc
jg
lods
enter
cmp
pop
mov
push
mov
sahf
dec
and
iret
mov
scas
add
cmp
mov
jbe
jae
xor
fcoms
jmp
lods
sqrtps
mov
in
xor
sbbl
gs
out
ljmp
pusha
jg
sbb
fsts
movsb
adcb
mov
out
pop
lods
mov
cwtl
xlat
inc
sti
and
rclb
xchg
inc
dec
sbb
stos
adc
lea
cmpsl
aad
fwait
sti
lret
adc
push
xor
jo
pop
sub
adc
mov
std
push
and
xchg
add
mov
mov
stc
les
mov
out
cmp
dec
pop
inc
int3
cmc
dec
or
cmp
mov
in
data16
gs
mov
add
jg
insl
inc
mov
push
mov
sbb
jbe
std
mov
ret
add
aam
outsl
fs
stos
lea
jmp
pop
ds
sbbb
out
cmp
jmp
jle
flds
dec
dec
mov
fisubs
push
in
aaa
sahf
orl
sub
sub
inc
out
icebp
fistpl
dec
iret
mov
inc
xchg
les
push
mov
mov
fistpl
ds
movsl
bound
addr16
jnp
pusha
sti
stos
mov
mov
jge
cld
out
aad
lods
xor
shr
or
ljmp
sub
fs
mov
push
das
aas
inc
aam
sub
or
cwtl
cmpsb
or
push
lock
adc
jmp
insb
std
dec
cmp
or
popa
push
adc
imul
rolb
idivb
sbb
mov
lret
add
sbb
jmp
aaa
cmpsl
dec
outsl
test
loop
bound
movsl
jnp
cld
shlb
jmp
imul
mov
sbb
repnz
sub
fldenv
inc
scas
jecxz
or
sbb
rcrb
inc
jecxz
jb
in
mov
movsl
xor
pop
adc
mov
sbb
repnz
mov
bound
sbb
add
sub
cmp
data16
or
mov
test
fwait
mov
ss
arpl
sub
or
inc
insl
leave
mov
lcall
ds
adc
mov
imul
ss
pop
es
adc
stos
sti
xlat
leave
xchg
nop
pop
sbb
outsb
inc
in
cmp
shl
sub
jmp
push
lods
fwait
imul
jae
adc
ljmp
ds
movd
push
mov
mov
loopne
rcrl
dec
stos
fisubl
clc
jmp
dec
xor
test
ss
imul
negb
or
fucompp
and
jp
jge
mov
lods
mov
or
push
sub
xchg
cmp
adc
int3
mov
movsb
ret
fstl
lahf
stos
mov
xor
sub
sub
shr
pop
cmp
aad
or
imul
cmp
les
mov
jmp
je
in
lahf
pop
cwtl
dec
push
inc
insb
gs
mov
inc
fldt
and
jmp
adc
jae
sub
xor
mov
push
or
fiadds
sbb
mov
dec
mov
adc
pop
popf
pop
push
fs
jb
inc
sbb
mov
push
out
jmp
test
enter
imul
push
ljmp
pop
data16
lcall
xor
clc
filds
orb
xchg
mov
nop
es
outsl
call
mov
shlb
push
xor
fisubrl
xchg
fdivr
sub
aad
jmp
lahf
mov
and
add
sub
pop
vpmaxub
movsb
and
or
lret
jle
andb
dec
push
cmpsb
push
rep
int3
push
popa
dec
and
test
pop
jmp
mov
jb
pop
jbe
dec
ror
jmp
add
sbb
pop
and
cmp
pusha
mov
cmp
dec
sbb
out
or
push
cmc
imul
push
lock
jmp
enter
repz
stc
lds
jle
xchg
pop
fists
pop
xor
leave
and
push
andl
cld
imul
and
dec
sbb
sysret
xor
adc
les
loop
jmp
ss
jle
fistpl
sbb
shrb
dec
adc
jno
insb
lret
cwtl
dec
out
test
jbe
repnz
lret
movsl
hlt
mov
pop
xchg
frstor
das
adc
and
xchg
ror
inc
les
jae
out
lock
mov
mov
lret
shl
jmp
adcl
sub
inc
cmp
int
aaa
cld
jmp
mov
sub
ret
fistl
inc
jmp
and
mov
test
jns
push
jb
push
leave
sbbl
cmc
push
mov
shr
aaa
add
add
bound
inc
jmp
shrl
les
xor
shlb
jns
scas
daa
and
mov
cmp
push
jle
sub
add
jmp
mov
insl
leave
cld
mov
bswap
jmp
inc
mov
and
nop
not
scas
push
inc
jbe
lods
popf
pop
mov
stc
divb
cmpsb
fmull
cmc
lcall
push
fiadds
xor
jmp
xchg
mov
mov
ret
addr16
mov
sbb
sbb
test
sub
and
jmp
cmpsl
add
cmpb
enter
in
cs
jecxz
mov
xchg
out
add
fcoml
jns
stos
cmp
scas
or
inc
ljmp
and
ret
repz
adc
dec
outsb
movsl
mov
xor
add
cmpsb
push
push
pop
xorl
rcl
out
sub
testb
int
mov
daa
xchg
cmp
adc
ret
sbb
mov
xchg
leave
mov
loop
jge
mov
dec
rorl
cs
fistps
jmp
ss
mov
or
repnz
mov
jne
add
xor
daa
xchg
xchg
adc
and
push
popf
cld
xchg
inc
push
subb
xorb
data16
mov
out
pop
xor
jle
and
mov
mov
push
push
scas
shr
jne
ficoml
rcrl
xchg
xchg
rcll
dec
mov
pushf
push
jecxz
icebp
imul
jmp
xor
jg,pt
pop
sets
lods
mov
ljmp
sub
inc
sub
pop
dec
push
pop
test
in
pop
stos
mov
mov
sub
dec
lock
call
jmp
push
int
mov
nop
jge
add
adc
or
mov
sub
mov
push
adc
lock
cmp
es
push
scas
add
jmp
xchg
sbb
sub
mov
nop
je
jne
lret
and
cmp
jmp
adc
and
cmpl
nop
lods
test
and
cmpsb
lds
sbb
mov
leave
jno
xchg
cli
cmp
daa
cs
push
rol
and
leave
mov
push
mov
gs
shrl
inc
sub
xchg
jl
mov
popf
jp
adc
loop
adc
rcl
mov
xchg
loopne
fcom
dec
pop
leave
pop
je
mov
xor
jno
pop
and
push
fisubrl
adc
jmp
cmpsl
clc
enter
cld
imull
push
jecxz
push
fstpl
pop
inc
sbb
push
xchg
jo
pop
mov
push
or
shr
aas
jecxz
lcall
xorb
lcall
push
push
jbe
push
sbbb
loopne
pop
aaa
cmc
push
fsubl
pop
jmp
mov
add
inc
sub
dec
sbb
mov
jmp
and
dec
sub
sub
aad
mov
xchg
sub
mov
pop
add
adc
sarl
mov
test
dec
and
pminsw
nop
jecxz
fsubr
cmp
mov
je
cmp
ja
shrb
scas
cld
mov
mov
pop
sbb
dec
or
jmp
dec
xorl
enter
inc
mov
ja
ja
outsb
test
leave
and
mov
stos
push
mov
in
sbb
adc
xchg
jmp
jle
adc
inc
repnz
ret
pop
inc
adc
lock
int
movsb
xlat
mov
mov
imul
lret
sub
jmp
rol
mov
or
mov
pop
pushl
rcl
sub
jmp
inc
mov
mov
xchg
outsl
rep
icebp
mov
imul
sahf
cld
test
or
and
sub
jmp
scas
fiadds
sbb
repnz
sti
or
stos
mov
into
xlat
add
jmp
ss
push
or
adc
jg
xchg
in
pop
fstps
enter
nop
inc
out
iret
jmp
lea
sbb
cli
jmp
js
add
jmp
ficoml
out
jno
and
sbb
out
testb
adc
inc
mov
aam
test
loopne
aaa
jbe
jl
jns
push
aad
call
cli
sub
lahf
pusha
cmpsb
cli
enter
js
jne
icebp
xchg
enter
sub
rcrb
sbb
stos
scas
dec
dec
fnsave
mov
and
xchg
xchg
sbb
mov
mov
repnz
fsubl
or
push
push
mov
inc
jge
mov
lea
stos
mov
xor
rcr
pop
add
push
sub
sub
mov
lret
sub
adc
pop
mov
out
add
data16
shl
rolb
push
push
push
inc
inc
fidivrl
jp
adc
repz
shlb
sub
aad
inc
cmp
arpl
shl
adc
cmp
imul
or
sbb
repz
lods
cmp
mov
lahf
out
mov
push
mov
clc
inc
push
in
mov
mov
fidivrl
sti
jne
jmp
fwait
cmp
int3
mov
ret
je
pop
push
inc
xchg
adcl
stos
cld
jp
pusha
jmp
daa
adc
shl
xchg
mov
movsb
out
jbe
sbb
lret
pop
mov
dec
pop
es
fildll
movsl
xchg
mov
jmp
jle
cmpsl
mov
insb
in
adc
sbb
cmp
jnp
ret
mov
mov
ret
xchg
xor
pushf
jo
add
mov
and
cmpsb
mov
and
pop
jmp
cmpsb
sub
jne
xor
repz
sbb
cltd
mov
dec
dec
sub
cmc
inc
or
mov
mov
jmp
out
mov
or
into
jno
test
ss
insb
js
xchg
das
shlb
add
sbb
add
or
xor
push
and
imul
lea
jmp
imul
sub
pop
movd
in
iret
mov
pop
in
jae
test
decl
dec
call
aad
iret
lcall
sbb
push
rclb
mov
adc
sbb
outsb
movsl
scas
inc
and
fs
icebp
aam
xchg
cmp
in
pop
mov
popf
push
and
stc
adc
pushf
in
xlat
mov
imul
scas
sbb
add
sti
pushl
xchg
or
lea
mov
pop
xor
add
fistpl
xchg
dec
push
sub
out
mov
imul
mov
mov
je
das
mov
test
test
lcall
aad
sete
cmpl
jmp
lods
pop
int
sbb
shll
repz
lds
add
gs
loope
cmp
and
and
das
sbb
ss
xchg
ljmp
outsl
aas
jae
iret
pop
mov
es
out
sbb
mov
inc
push
iret
mov
xchg
jo
insl
cmp
cmp
sbb
xor
testl
mov
cmc
jae
xlat
jmp
push
clc
or
mov
push
call
add
mov
loope
lods
sahf
shll
xor
lret
or
or
pop
jne
inc
lret
cmpsb
mov
insl
sub
bound
out
negl
sbb
jmp
pop
mov
loop
lock
dec
inc
lahf
add
xlat
xchg
out
cmpsl
fs
jmp
push
xlat
jmp
jns
push
insb
dec
ret
push
int
xchg
xchg
inc
sahf
jns
xchg
hlt
jl
stc
sbb
xchg
sbb
mov
xor
out
pushl
sahf
fstl
enter
mov
xchg
fdiv
aas
sub
cmp
iret
mov
rclb
imul
sub
adc
pushf
add
pop
loope
inc
lds
ljmp
mov
das
das
xlat
push
hlt
dec
ret
lahf
jne
and
sti
fimuls
aaa
movsl
xor
push
push
inc
jl
mov
xchg
push
lock
xlat
je
sub
std
shl
dec
sub
inc
shlw
sub
inc
xchg
out
mov
sbb
out
stos
adc
jle
icebp
push
sbb
fcom
or
popf
into
pop
and
xchg
cld
mov
adc
fbld
adc
pop
jne
or
xor
inc
and
movsl
jns
es
sub
bound
repnz
out
int3
jne
imul
repz
mov
adc
popa
pop
fwait
scas
stc
adc
stos
cli
adc
out
aam
mov
pop
sub
add
jmp
sbb
icebp
jl,pt
fistpl
add
push
push
js
or
addr16
ja
mov
add
fcompl
popa
pusha
test
rcll
je
mov
xchg
or
out
test
mov
pusha
fcomip
jo
movl
insl
mov
adc
sbb
pop
aad
decl
push
mov
outsb
add
mov
fiaddl
add
xchg
lods
ficomps
rcrb
repz
jle
js
lret
xor
sbb
jns
sbb
push
inc
push
and
jno
jl
jne
loopne
hlt
cmp
les
push
add
mov
pop
addb
out
mov
add
cld
decl
inc
out
xchg
out
loope
push
aad
lock
stc
insb
rol
pop
int
into
aas
shrl
jnp
cltd
enter
inc
loop
aas
ret
cwtl
imul
addr16
mov
iret
mov
dec
jmp
xchg
ret
xchg
add
and
leave
outsb
rolb
shrl
pop
outsl
bound
insb
xchg
sbb
fcmovnb
cld
xor
mov
jbe
sti
fldcw
xor
in
cs
aaa
xor
mov
or
push
fisubl
mov
rcrb
std
call
xchg
fcmove
shlb
mov
add
push
sti
aaa
das
in
sbb
test
in
sarb
out
ret
adc
lcall
daa
push
shr
pop
mov
adc
rcr
into
movsl
sbb
jne
jmp
mov
add
jo
sbb
cwtl
int3
ljmp
hlt
jl
and
push
cld
mov
xor
dec
inc
ss
test
pop
sub
call
ret
std
lods
add
mov
push
or
xchg
jmp
loope
in
mov
cltd
inc
jne
hlt
jne
or
in
cld
adc
arpl
jns
out
addr16
cmp
cmc
sbb
js,pn
cmp
add
or
jmp
fdiv
sbb
fistl
arpl
xor
popf
and
int
out
test
in
orb
mov
dec
movsl
push
sarl
jle
int3
icebp
or
outsb
jbe
std
xor
out
aas
jb
mov
cli
pop
cli
add
inc
mov
xchg
sub
lock
jae
mov
lds
cmp
pop
xlat
xchg
jo
mov
inc
in
push
jns
cmc
shll
cli
xlat
add
or
imul
mov
and
arpl
int3
add
popa
in
testl
mov
mov
mov
cmpsl
pop
push
leave
and
stc
jmp
test
popf
or
adc
clc
inc
cmp
call
outsl
mov
div
aas
pop
bound
mov
outsl
outsl
sub
jmp
xchg
push
iret
mov
nop
mov
aad
jmp
out
int
in
jp
popa
push
mov
mov
loope
or
xchg
push
jp
ljmp
xor
movsl
ljmp
mov
cli
mov
pop
mov
dec
mov
push
mov
leave
mov
lds
aad
popa
xchg
mov
jb
pop
ret
mov
inc
ja
fstpl
test
lds
enter
sbb
lcall
push
jns
repnz
xchg
add
insl
pop
add
add
add
ds
add
dec
dec
add
add
add
cld
dec
add
xor
add
dec
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
add
add
add
add
