or
sbb
mov
add
mov
xor
daa
add
sbb
cli
jge
and
xor
pmulhw
cmpsl
fdivs
fcmovne
dec
out
add
les
pop
push
nop
xchg
test
pop
scas
cmpsb
pop
xor
adc
push
sub
fcmovbe
les
pop
hlt
or
xchg
hlt
adcb
out
inc
xor
bound
fsts
cmc
push
fcomi
cs
test
aaa
and
scas
and
popf
mulb
psubsb
mov
push
push
ljmp
adc
int
test
fldt
imul
dec
cs
fadd
jbe
int
inc
mov
push
bswap
mov
mov
mov
ja
or
je
xchg
pop
jnp
add
mov
pop
mov
shrl
lods
xor
add
sub
mov
add
fsts
popf
jae
fcmovne
jo
xchg
outsl
jae
cltd
cmpsl
jmp
insb
fisttpl
jnp
pop
loope
in
sarb
dec
iret
addl
enter
icebp
and
pop
lock
mov
xchg
push
roll
jb
cmp
lock
xchg
add
xchg
and
push
fistl
jb
stos
leave
or
es
nop
cmp
leave
jecxz
sbb
add
cmp
fbld
lcall
int
mov
push
insl
repnz
push
out
enter
xor
ja
cmp
xchg
sub
xchg
arpl
movsl
cmp
xlat
dec
xor
pop
stos
sub
test
and
mov
int3
data16
orl
nop
sbb
push
mov
inc
add
js
mov
pop
add
push
popf
clc
xor
lock
xor
je
std
mov
bound
fstp
lods
scas
inc
jl
mov
fcoml
aad
mov
push
sub
mov
pop
leave
mov
push
dec
fdiv
out
cmpsl
stos
adc
outsl
push
lods
cmp
lds
mov
xlat
xlat
in
inc
gs
inc
mov
jmp
jne
push
add
cltd
in
xor
cmp
stos
lods
jne
jg
cmc
jge
adc
dec
sbb
roll
cli
cmp
pop
dec
mov
iret
cmp
repz
xor
jns
mov
add
imull
jp
rol
cmpsl
jle
lds
adc
std
cmpsb
cmp
jae
or
jl
xor
test
outsl
adc
fsubrs
aaa
imul
test
mov
aas
dec
std
mov
add
cmp
in
pushf
dec
mov
fisttpl
pop
jae
fsincos
mov
push
pop
pop
es
test
stos
jp
sti
cmpsl
adc
or
int3
daa
adc
movsl
testb
cmp
xchg
addl
dec
or
and
sbb
inc
push
scas
jbe
jb
std
mov
lds
mov
and
mov
xor
lods
aas
cmc
cmp
mov
jge
mov
ljmp
into
ret
insb
xchg
jl
das
mov
imul
mov
cmc
cmp
xor
add
xor
dec
and
mov
xchg
xor
jmp
xchg
clc
xor
dec
lahf
mov
add
and
mov
and
mov
xor
sub
sbb
in
outsb
rcr
xlat
in
add
stos
xchg
mov
cmc
ja
cmp
in
inc
scas
fisubrl
jae
cmp
lods
loopne
mov
push
hlt
idivl
jo
ja
jle
xchg
inc
inc
insb
pop
js
mov
outsl
aad
lods
adc
repz
jae
xor
insl
sub
int3
dec
pop
sbb
sbb
test
fildl
jb
sub
pop
and
cld
sbb
adc
cmp
push
mov
pusha
je
out
icebp
jecxz
out
paddq
mull
movsl
aam
ret
in
cmp
or
pushf
inc
js
jnp
mov
inc
pop
fidivrs
mov
lahf
sub
out
mov
cmp
imul
jo
shll
xchg
jb
add
fstpt
dec
jbe
cmp
imul
push
mov
push
into
adc
pop
mov
sub
dec
or
jno
mul
ljmp
pop
iret
test
mov
outsl
divl
xor
jg
ljmp
sbb
ja
cmp
nop
or
orl
pushf
xchg
pop
adc
inc
adc
mov
and
xchg
filds
jo
xchg
lock
mov
xor
jp
imul
leave
cs
cltd
std
xadd
xchg
sub
cld
inc
loop
cld
loopne
inc
loop
and
mov
lds
mov
jecxz
jmp
jno
xor
pusha
pop
xchg
push
xchg
lret
mov
lods
inc
stos
jle
lods
and
mov
ret
xchg
xor
sarl
sub
add
mov
ficoms
and
std
sarb
push
or
pop
testl
fsubr
sbb
test
lods
mov
mov
dec
push
jae
xorb
xchg
xchg
cli
ret
repnz
es
sub
inc
into
imul
jg
push
out
repz
sbb
imul
lds
popf
jmp
gs
jge
cwtl
mov
sbb
sahf
jnp
lcall
call
out
and
std
pop
lret
sub
inc
scas
mov
mov
cmp
xor
stc
fsubrp
mov
sarl
aaa
loop
mov
mov
test
inc
ret
mov
adc
nop
test
adc
cmc
and
daa
pop
and
mul
jo
dec
hlt
and
cmp
or
xchg
roll
push
pusha
cmp
xchg
in
enter
test
jns
jmp
shrl
adc
scas
pop
movsb
shll
lods
sub
add
push
mov
add
sub
call
add
dec
call
dec
push
dec
call
inc
lea
inc
add
dec
inc
call
inc
imul
imul
add
inc
dec
add
movzwl
mov
mov
movzwl
lea
movzbl
dec
call
dec
add
inc
imul
dec
call
lea
or
call
or
sub
movzwl
mov
add
inc
inc
mov
imul
pop
mov
lea
inc
add
sub
pop
dec
lea
pop
dec
dec
sub
mov
pop
add
inc
inc
mov
movzbl
add
mov
dec
pop
add
imul
pop
dec
dec
mov
lea
mov
call
sub
inc
inc
dec
ret
dec
inc
push
inc
dec
push
mov
sub
push
mov
xor
push
dec
sub
push
imul
dec
mov
add
add
push
sub
ret
push
mov
lea
and
movzbl
dec
add
push
dec
mov
dec
call
pop
ret
jmp
inc
mov
add
mov
movzbl
xor
dec
add
inc
lea
and
and
mov
movzbl
dec
lea
xchg
lea
inc
lea
inc
xor
dec
mov
sub
lea
inc
dec
lea
dec
jne
mov
mov
inc
sub
pop
inc
dec
pop
mov
sub
pop
lea
imul
or
sub
mov
dec
dec
and
lea
xor
mov
add
ret
push
mov
lea
lea
sub
mov
mov
mov
add
push
push
push
push
add
inc
mov
push
xor
inc
movzwl
mov
mov
mov
dec
mov
sub
mov
lea
push
dec
dec
xor
dec
and
push
imul
mov
push
mov
mov
pushl
add
call
sub
add
dec
imul
sub
dec
movswl
and
dec
pop
ret
inc
imul
lea
mov
inc
inc
sub
mov
xor
sub
add
xor
xor
cmp
jb
mov
xor
inc
dec
mov
dec
mov
and
inc
add
mov
dec
dec
lea
mov
lea
dec
cmp
jb
dec
pop
inc
add
lea
dec
inc
dec
dec
inc
lea
inc
xor
lea
xor
mov
mov
mov
inc
lea
test
jbe
or
imul
dec
sub
inc
inc
add
mov
inc
or
mov
add
and
inc
lea
mov
inc
dec
movzbl
inc
add
add
imul
and
inc
xor
mov
dec
lea
mov
dec
inc
mov
sub
mov
lea
sub
mov
movzwl
add
inc
dec
jne
mov
mov
dec
lea
xor
mov
sub
mov
mov
mov
movzbl
mov
inc
mov
dec
inc
mov
add
movsbl
mov
mov
inc
imul
test
jbe
dec
mov
lea
and
add
inc
dec
sub
movswl
sub
mov
mov
dec
mov
sub
inc
sub
lea
mov
sub
add
mov
and
mov
dec
mov
dec
mov
movzbl
mov
mov
add
mov
dec
and
dec
mov
mov
sub
and
movzbl
dec
dec
mov
add
jmp
push
movzbl
and
inc
mov
mov
mov
inc
movswl
sub
add
mov
add
sub
mov
xor
inc
inc
dec
lea
dec
mov
dec
or
add
inc
mov
imul
lea
inc
add
and
inc
imul
dec
add
inc
or
movzbl
or
cmp
je
call
call
lea
mov
mov
lea
add
lea
inc
mov
lea
mov
inc
lea
or
add
dec
add
inc
dec
movsbl
inc
dec
dec
dec
inc
sub
lea
lea
sub
inc
imul
dec
xor
dec
inc
inc
dec
imul
movzwl
mov
movzbl
mov
add
inc
inc
add
xor
dec
ret
lea
inc
pop
dec
ret
push
or
mov
mov
mov
dec
push
mov
xor
push
xor
push
add
push
lea
sub
sub
add
imul
call
inc
push
add
or
xor
lea
sub
add
neg
inc
mov
mov
lea
mov
add
mov
mov
add
mov
mov
mov
inc
inc
mov
dec
je
dec
inc
dec
mov
mov
jmp
xor
mov
mov
dec
add
mov
repnz
lea
imul
add
inc
jmp
mov
dec
lea
lea
mov
dec
sub
dec
imul
dec
inc
and
mov
movswl
dec
add
pop
pop
ret
push
inc
movzwl
mov
sub
lea
or
add
inc
lea
inc
add
add
mov
movswl
dec
movswl
or
lea
lea
inc
add
mov
mov
add
pop
ret
sub
imul
mov
mov
mov
mov
inc
lea
mov
lea
mov
mov
sub
lea
xor
imul
or
mov
movswl
lea
inc
inc
movswl
xor
mov
xor
movswl
cmp
jb
or
push
movzwl
dec
push
dec
mov
push
movzbl
mov
xor
sub
mov
xor
mov
mov
xor
mov
mov
push
movsbl
inc
mov
mov
dec
xor
add
mov
mov
lea
mov
dec
movswl
movzbl
xor
dec
lea
lea
add
imul
mov
add
lea
lea
movzbl
inc
movzbl
lea
jmp
scas
stc
sbb
pop
mov
cli
and
nop
xor
xor
or
out
and
jno
aas
xor
mov
xchg
loop
jl
outsl
sbb
mov
push
aad
push
int
mov
stos
loop,pn
dec
dec
inc
fdiv
dec
push
xor
or
pop
jge
adc
mov
pushl
inc
aas
sub
mov
ss
mov
add
scas
daa
bound
rclb
pop
adc
and
ficomps
cmp
fidivl
push
xchg
loopne
push
ret
cmp
sti
insl
lock
mov
rorb
int
js
loop
js
into
push
sub
sbb
xchg
inc
dec
or
stos
in
addr16
mov
and
lret
les
lods
xchg
fstl
sbb
add
ljmp
mov
inc
jg
xchg
push
xlat
sarb
dec
adc
into
ljmp
mov
pop
and
mov
insb
jecxz
outsb
mov
fsts
mov
dec
sbb
fsubs
pop
int
push
mov
imul
cwtl
mov
mov
and
in
pusha
xor
jle
add
jg
mov
enter
lock
lret
notb
mov
lods
fwait
or
add
fcomps
pop
adcb
test
ret
ljmp
dec
lods
push
mov
pop
push
push
lret
inc
pop
lods
rol
shlb
adc
jecxz
inc
xor
outsb
or
mov
mov
mov
loope
pop
in
or
adc
cmpsl
rorl
cld
pop
shrl
push
xchg
fnsave
into
sub
sbb
cmp
or
ja
sbb
mov
repz
dec
pop
aad
cmp
rcll
testl
loop
sub
loop
imul
sub
push
add
stc
add
addr16
push
fcoml
mov
push
cmp
icebp
add
sub
xchg
mov
sbb
xchg
mov
xchg
jl
push
cmp
clc
dec
jne
jp
xlat
sarl
fsubrs
imul
insb
fcoms
mov
shl
sarb
ljmp
jbe
push
jmp
lahf
int
test
ljmp
cmc
setbe
jecxz
ds
push
in
out
sub
sub
cmp
xchg
lcall
push
ljmp
test
and
cltd
cwtl
icebp
dec
dec
push
inc
std
pop
lcall
xchg
sbb
adc
mov
rcrl
adc
or
add
cmpsb
lods
int3
test
loopne
notb
or
in
dec
pop
clc
add
icebp
imul
imul
imul
mov
adc
or
mov
dec
mov
clc
fsubs
inc
std
mov
jp
sbb
repz
outsb
mov
pop
mov
xchg
out
out
clc
in
mov
mov
frstor
xor
je
inc
xchg
pop
js
in
enter
mov
jle
and
sbb
push
dec
popa
jb
aad
pop
scas
adc
xor
mov
addb
idivl
push
lret
inc
push
out
or
mov
and
nop
add
xor
xor
cltd
add
aam
inc
and
and
inc
adc
ljmp
dec
mov
enter
mov
jb
aas
mov
fwait
iret
add
mov
movsb
add
ss
pop
nop
into
mov
scas
and
ret
sti
insb
or
mov
popl
test
cmc
aaa
cmp
rcl
ss
sbb
adc
cmpsl
xchg
and
dec
cltd
jl
fmuls
call
rcl
xchg
out
insb
bound
jmp
mov
daa
or
mov
into
imul
inc
inc
pushl
mov
lods
xor
out
dec
int
add
fwait
pop
lret
dec
add
idivb
pop
add
into
and
mov
or
or
xchg
sub
shr
pop
push
jb
jle
mov
sbbb
bnd
mov
imul
movsl
test
inc
mov
lods
lea
sub
sbb
add
addr16
adc
xor
test
xchg
add
push
es
inc
test
scas
jae
shll
xchg
mov
jns
inc
jne
xchg
adc
dec
sub
push
or
es
and
dec
js
inc
adc
adc
das
andb
inc
push
inc
loopne
cmp
push
ffree
mov
xchg
cwtl
outsl
clc
fs
insb
cmp
jnp
std
jmp
xor
jb
mov
sub
dec
mov
loopne
push
loopne
cwtl
enter
aam
xchg
dec
iret
mov
lods
pop
insb
fcmovu
xchg
nop
cmp
fs
shrb
jp
dec
in
je
pop
push
push
test
cs
xor
mov
std
push
xchg
pop
shl
lock
repz
push
lods
bound
mov
lods
push
sbb
xor
into
adc
js
cwtl
jns
pop
or
mov
lds
push
pop
cld
push
lret
stc
fucomip
pushf
lahf
push
aad
aas
loop
mov
mov
movsb
stc
cltd
outsb
scas
outsb
add
outsl
test
jb
int
cmp
xor
pop
pop
xchg
xor
and
cli
push
addl
imul
cmpsl
aaa
and
and
xchg
adc
aaa
mov
leave
xchg
icebp
push
dec
dec
test
test
mov
lahf
outsl
sub
mov
inc
dec
imul
push
mul
movsl
cmpsb
push
pop
push
xor
add
or
dec
mov
sarl
call
leave
subl
bound
aam
cpuid
dec
les
push
or
aas
shll
xchg
test
pop
outsl
clc
inc
add
mov
mov
imul
stc
push
adc
bound
je
xchg
jns
mov
shlb
lret
mov
mov
or
lret
stc
push
push
clc
sub
dec
and
lret
repz
add
and
lods
or
and
mov
cmp
shl
movsl
out
push
cli
lods
push
sbb
lret
push
pop
sbb
mov
mov
mov
xchg
jo
in
in
pop
push
fbstp
and
sub
stc
in
cmp
inc
mov
lods
in
adcb
movsl
decb
bound
sarb
sub
popa
push
aam
pop
pop
lea
imul
outsb
sbb
sar
sub
sbb
pop
fisubrs
fwait
or
notl
fcomps
mov
insl
fistps
pop
xchg
push
or
nop
dec
jo
ret
xchg
insl
inc
push
cli
pop
or
das
repnz
adc
ret
xchg
mov
stc
mov
loopne
in
popa
xchg
stos
int3
sub
pop
in
test
xchg
jo
call
into
adc
adc
pop
imul
xchg
dec
sub
cmpl
sahf
dec
dec
cmpsl
cli
in
mov
mov
shll
into
je
aam
fsubrl
jle
repnz
pop
fldl2t
pop
lcall
mov
xor
pop
push
jge
stos
ds
lods
nop
std
les
mov
or
cmp
or
cmpsb
mov
sub
iret
lods
pop
ret
outsl
xchg
test
pop
jecxz
int
movsb
xchg
stos
add
jb
push
lods
dec
loop
std
adc
stos
nop
mov
inc
mov
cmpsl
repz
mov
pop
push
hlt
jno
xor
inc
stc
mov
push
push
aas
xor
test
test
inc
out
arpl
aas
add
pop
mov
faddl
or
cmp
lret
test
add
and
test
stos
loope
dec
fwait
mov
ret
imul
mov
cmpsb
pop
jns
jecxz
push
in
inc
cmp
int
dec
ret
cmp
movl
insl
xchg
es
sbb
fcmovnu
pushf
pop
aad
xchg
sbb
sub
bound
std
sbb
mov
mov
jmp
or
xchg
popf
pushf
jns
lahf
dec
scas
std
jl
add
push
notb
shll
mov
test
leave
cwtl
daa
dec
and
cs
add
xchg
int3
pop
jp
cwtl
mov
lret
mov
into
xchg
outsb
mov
xor
and
push
adc
xchg
sahf
mov
sub
mov
pop
lea
mov
mov
dec
inc
cmp
test
js
xchg
pop
push
popf
fldl
sbb
mov
xor
xor
sahf
or
xchg
andl
or
addr16
xor
ljmp
inc
push
cmp
xor
ret
xchg
cli
mov
adc
xlat
loope
or
dec
pop
jae
or
imul
addb
into
adcb
and
es
add
xchg
or
aad
xchg
add
mov
popa
js
push
mov
mov
cwtl
daa
push
mov
jno
push
jo
aaa
dec
mov
movswl
repnz
or
stos
lods
cmp
outsb
lret
pusha
les
cmpl
and
stos
mov
mov
aas
fcomi
lahf
mov
fwait
pusha
loopne
mov
add
xchg
movsbl
aad
mov
test
mov
push
and
sarb
out
xlat
mov
adc
mov
and
lret
fiadds
adc
into
add
xor
popf
call
xchg
js
int3
cmp
xlat
aas
dec
jmp
adc
subb
inc
xor
push
jp
mov
lahf
popa
popa
inc
fxtract
sub
lret
push
pop
or
sbb
gs
hlt
repz
repz
pop
fisubl
xor
pop
mov
mov
sbb
mov
push
daa
adc
sbb
xchg
pop
push
mov
or
lods
push
int
xor
mov
ljmp
pop
xlat
xor
clc
mov
mov
insl
int3
lea
dec
push
addr16
adc
jno
call
xchg
popa
adc
add
mov
dec
cmp
xchg
ror
push
pop
jmp
or
sbb
fisubrl
mov
repnz
leave
mov
enter
mov
aas
mov
jo
lcall
add
xor
or
ret
clc
int
fsubrl
das
icebp
or
cmp
dec
pop
fstl
fwait
inc
jbe
sar
adc
mov
inc
xchg
sahf
jo
cwtl
jns
int
cmp
das
pop
mov
pop
xchg
jle
arpl
mov
adc
push
pop
cmp
aas
xchg
fdivs
ret
outsb
mov
cmp
push
mov
fstp
xchg
xchg
mov
push
jmp
and
and
data16
ror
sahf
leave
movsb
scas
mov
xor
mov
dec
inc
add
xorb
sbb
push
push
push
jo
fldl
das
sahf
inc
cmp
cmp
test
xchg
jmp
lock
scas
and
mov
mov
lock
test
movsb
or
pop
jmp
mov
jp
and
inc
sub
and
xor
ret
loopne
in
push
sub
adc
xchg
xor
mov
insb
lahf
jnp
pop
scas
mov
rcrl
and
mov
xchg
xchg
orl
repnz
loop
cmp
scas
repz
iret
mov
iret
inc
dec
stc
adc
mov
adc
or
xchg
mov
aaa
adcl
mov
sub
pop
mov
popf
lret
jg
sbb
in
xchg
nop
pop
das
arpl
fnstsw
add
in
lret
jmp
pop
movsb
mov
out
or
jmp
jbe
cmp
and
and
test
aaa
inc
jge,pn
cmp
int
aas
xlat
pop
xchg
jno
adc
outsb
jbe
cld
or
xor
mov
popf
imul
es
inc
lret
and
inc
inc
cmp
add
dec
xchg
loop
negb
pop
push
icebp
add
aad
add
and
sub
popf
leave
es
in
adc
add
jno
jo
and
aas
out
in
mov
nop
xlat
jge
fwait
push
adc
sub
inc
mov
mov
mov
sbb
jl
adc
jge
inc
icebp
iret
fs
jnp
jb
movsb
test
jne
arpl
lock
call
dec
into
sbb
xchg
stc
pop
cwtl
cmpsl
popa
pop
add
cmp
std
jnp
and
mov
push
hlt
pop
movsl
aam
pop
pop
dec
nop
dec
pop
loopne
inc
fidivl
aad
mov
cs
pushl
cmpsl
pop
lret
lret
xchg
xchg
aam
and
and
push
mov
adc
mov
daa
in
or
mov
sub
mov
mov
gs
loopne
add
adc
lods
jecxz
lea
lock
adc
filds
imul
ds
sub
cmp
adc
lods
and
sbb
push
cs
or
dec
sub
outsb
mov
mov
lahf
mov
aaa
and
in
lock
aaa
out
roll
adc
shrl
sub
imul
pop
fldl
pop
jle
sbb
adc
popf
or
cwtl
in
or
imul
mov
iret
jp
mov
mov
mov
dec
in
cli
shlb
enter
mov
scas
and
ja
ja
std
stos
or
dec
cli
test
or
or
fsubrs
into
sub
in
xchg
add
adc
popf
out
pop
and
mov
cmp
lahf
mov
fistpl
xor
out
stc
dec
inc
sbb
int3
xor
xchg
jb
shlb
jge
sub
mov
jbe
ss
adc
aad
imul
pusha
dec
lahf
cmc
push
repz
mov
icebp
jne
stos
push
stos
jb
inc
lahf
sub
cmp
sarb
ret
dec
cmp
das
orb
shrl
mov
push
and
push
xchg
jge
lods
cmp
cltd
add
je
inc
sbb
pop
fadds
xchg
xlat
lret
lret
and
adc
test
jle
mov
sbb
or
addr16
call
rcll
repz
sbb
xchg
cmp
lods
test
es
and
add
inc
mov
int
inc
push
push
or
ficompl
addl
push
sar
adc
mov
adc
adc
add
les
sub
fdivrl
xchg
stc
ret
dec
test
out
fsubp
jp
insb
imul
test
cltd
mov
pop
movsb
mov
outsb
cwtl
mov
mov
adc
lcall
adc
dec
icebp
xor
hlt
adc
ret
mov
push
sbb
dec
ja
mov
or
adc
cmp
roll
imul
jne
js
pop
es
and
mov
pop
or
out
jmp
pop
cmp
xor
dec
pop
imul
xchg
aad
movsl
mov
test
lods
daa
cmp
cmp
jno
int
push
shld
inc
nop
pushf
cmp
aas
jnp
cltd
mov
out
jne
rclb
test
test
lea
iret
jle
out
out
or
adcb
cmpsb
inc
les
jle
mov
inc
ret
push
fbstp
ret
cwtl
movsl
pop
rorb
xor
jg
inc
mov
cmc
sub
xor
jl
enter
and
cmp
pop
mov
sbb
push
imull
out
xchg
insl
sbb
aam
rolb
sbb
bound
sbbl
aaa
mov
lea
pop
xchg
pushf
xor
dec
xchg
inc
pop
mov
decb
cld
pop
stos
push
mov
pop
cltd
push
mov
inc
pop
int
mov
mov
lock
sbb
sbb
scas
or
mov
enter
push
pop
into
mov
dec
out
scas
ljmp
lods
jno
rorb
mov
mov
ss
push
or
add
sbb
mov
leave
adc
inc
test
jns
sbb
cli
arpl
gs
add
inc
orb
mov
ds
pop
push
adc
out
and
dec
cmp
out
pop
pop
push
mov
loopne
int
dec
cli
int
xchg
push
push
mov
fcomip
cmp
fs
mov
add
dec
sahf
add
inc
jmp
dec
push
iret
push
jecxz
dec
mov
jmp
jno
xor
les
bound
jo
jns
jl
cwtl
mov
bound
xor
push
fnstcw
push
leave
adc
scas
mov
add
test
scas
pop
aaa
inc
pop
enter
loop
pop
cmp
scas
adcb
es
xor
push
fs
sub
sbb
pop
inc
mov
jmp
mov
lret
xchg
cmp
xchg
outsl
inc
fs
sub
nop
fadd
cmp
xor
cwtl
sub
adc
aad
and
lea
fidivrs
dec
jb
mov
or
icebp
adc
push
mov
sbb
addl
and
inc
stc
mov
mov
mov
hlt
mov
push
out
std
mov
nop
xor
adc
add
sbb
enter
sub
pop
mov
leave
adc
sbb
lds
add
std
lods
daa
test
imul
mov
xor
lods
rolb
int
shlb
adc
test
ds
push
out
or
and
pop
and
stc
cwtl
lea
out
arpl
add
xor
addb
adc
decl
inc
xor
xor
movsl
mov
xchg
jb
mov
js
leave
lea
sub
xchg
or
rol
push
imul
or
dec
ret
jbe
cs
fbld
lret
xchg
out
shrb
insb
scas
dec
pusha
shlb
push
or
mov
push
xor
out
imul
repz
jnp
xor
stc
cmpsb
mov
dec
adc
and
sbb
xchg
test
imul
xor
cmpsl
scas
inc
dec
mov
mov
and
mov
adc
mov
sbb
mov
add
jmp
xchg
pop
xchg
xchg
mul
mov
inc
mov
nop
xor
mov
jb
aad
addr16
stc
and
pusha
aaa
cmpl
addb
sub
mov
sub
lret
repnz
cmpsl
jbe
movb
dec
dec
stc
call
mov
mov
dec
xor
dec
and
mov
xchg
inc
jg
or
sbbb
sahf
mov
pop
nop
mov
loopne
imul
rcl
pop
pushf
adc
fdivrl
popa
xor
cmp
push
sbb
sub
xor
out
insl
and
pop
jbe
mov
pop
jg
adc
lea
push
xchg
loope
es
cmpsl
sarl
sub
loop
xchg
movsl
pop
add
jbe
shl
add
mov
loope
aaa
xchg
sti
pop
pop
data16
xor
test
lret
xchg
clc
sbb
sahf
xchg
roll
add
dec
or
sbb
cmpsl
mov
aad
sub
dec
test
stos
sti
imul
dec
loope
sbb
popf
test
enter
add
fwait
and
call
or
mov
jae
pushl
mov
mov
ds
cmp
dec
fnsave
add
jecxz
jno
sbb
cs
push
in
ret
add
shlb
mov
stc
add
jns
insb
dec
fs
das
inc
stos
lds
mov
ret
xchg
jge
dec
mov
sbb
cmp
fs
cmp
das
negb
xchg
mov
inc
mov
scas
pop
xchg
or
add
test
sub
or
pop
pop
icebp
das
inc
push
dec
pop
jecxz
dec
pop
sub
je
push
cmpsl
fwait
push
jo
fwait
mov
outsl
cli
pop
test
je
enter
into
inc
lret
push
xchg
pusha
mov
mov
adc
jbe
aad
mov
insb
mull
xorl
xor
leave
and
pusha
sub
and
orl
les
out
add
sbb
test
push
push
fdivs
lock
mov
push
sub
loopne
inc
mov
cmp
popf
ja
mov
mov
or
pop
data16
movsl
in
lock
stc
nop
loope
mov
aas
pop
inc
mov
and
jle
push
gs
sbb
cltd
push
mov
mov
cmp
ja
mov
scas
leave
pop
push
mov
xchg
inc
or
lea
sahf
sub
repz
xor
mov
popf
xchg
and
xchg
sub
scas
out
mov
lods
mov
pop
mov
js
or
cld
outsl
mov
fidivl
jo
test
fisubrl
jnp
inc
adc
roll
xchg
cmp
lock
rclb
mov
inc
xor
sahf
pushw
imul
push
addr16
inc
xchg
shll
sarb
int
adc
jg
daa
push
leave
sbb
adc
cmp
adc
mov
dec
ja
out
lods
lods
push
lea
or
dec
push
push
ljmp
stos
sti
jo
mov
dec
cld
push
add
fnstcw
or
cltd
in
lret
mov
sub
xchg
and
iret
mov
adc
push
adc
and
dec
pop
adc
das
inc
js
dec
fwait
adc
pop
leave
into
xchg
xor
mov
xchg
iret
lods
les
lods
ret
clc
jo
xchg
ljmp
clc
or
xchg
xchg
adc
sbb
mov
jnp
loope
mov
cmp
or
xor
sub
lea
mov
popf
jnp
out
fnstcw
stos
fiadds
imul
mov
jecxz
add
cmp
popa
repz
mov
and
ja
jno
ficoml
aas
ror
mov
cmp
or
sbb
lret
adc
push
ja
jecxz
inc
dec
ljmp
and
mov
in
cmc
jl
mov
or
movsb
imul
mull
sti
pop
sbbl
scas
adc
mov
divl
imul
jp
jno
mov
in
loop
dec
xor
int3
insl
in
mov
scas
call
popa
test
fisubs
pop
mov
add
pop
cmp
mov
and
and
jmp
push
jmp
pop
sahf
fwait
push
add
jp
or
cmp
xchg
call
pop
decb
shl
sbbb
icebp
cmc
xchg
mov
faddl
adc
lahf
xchg
ja
sbb
and
fwait
insb
pusha
aad
pop
mov
pusha
add
psrad
and
xchg
insb
pushl
sub
ds
lock
or
frstor
out
pop
add
subb
popf
xor
jo
push
pop
push
add
add
pusha
jge
lods
sub
push
add
sub
call
in
pop
iret
jns
test
popf
subl
or
mov
or
out
or
enter
jle
ds
mov
std
adc
adc
add
into
ret
mov
jg
inc
dec
pop
out
inc
mov
outsl
mov
sbb
mov
inc
fisttpl
inc
xchg
add
ret
leave
out
push
sbb
notl
sti
sub
push
lret
inc
arpl
fistl
mov
inc
dec
shll
dec
sub
jns
fisubl
xor
jno
cmp
or
ljmp
adc
pop
push
fs
addl
lret
inc
xor
fmulp
fdiv
push
mov
mov
mov
pop
and
add
shlb
loop
and
popa
jge
jmp
in
push
inc
outsb
out
popf
mov
test
dec
adc
xchg
cmc
xor
dec
out
insl
cmp
arpl
jo
leave
xor
in
or
inc
pop
enter
rcll
mov
fxch
or
dec
gs
es
fsubs
jnp
or
cmp
mov
and
jnp
lahf
mov
mov
mov
jne
jb
jnp
inc
loop
adc
push
add
fisubrs
sbb
mov
out
aam
mov
pop
jmp
fidivs
lret
rorl
mov
fs
shlb
scas
cmp
jae
and
negb
dec
or
mov
popa
imul
in
fucom
imul
inc
icebp
mov
js
mov
popa
adc
pusha
mov
ret
push
lock
pop
pop
mov
into
aas
xlat
push
popa
jl
jmp
and
inc
pop
in
dec
outsb
mov
sub
xchg
add
mov
xor
xchg
xlat
xor
lret
hlt
out
lods
adc
popa
aaa
imul
add
icebp
shlb
stc
repz
cmp
out
pop
std
lods
sbb
in
jne
push
test
sub
subb
adcb
add
pop
inc
dec
stc
mov
outsl
add
lret
ficoml
out
jb
jno
jl
pop
mov
inc
xchg
sbb
push
cmpsb
mov
cmpsb
cltd
cmc
call
add
ljmp
test
data16
push
mov
in
imul
mov
jmp
int3
int
mov
push
dec
push
xchg
jbe
repnz
sbb
bound
xor
outsl
mov
pushf
mov
cmpsb
push
cmp
lret
lods
negl
mov
pop
pop
shll
pop
pop
sbb
cmp
cs
ss
ret
out
or
inc
jp
imul
xchg
jnp
stc
aas
arpl
scas
or
mov
sti
hlt
push
pop
xorb
cmpsb
stos
jae
hlt
sbb
sbb
jle
push
fwait
into
mov
pop
out
xchg
test
dec
or
inc
cs
std
sbb
stc
adc
in
xchg
xor
mov
in
aas
test
mov
enter
shrl
rorl
cmp
cmp
ja
mov
popa
mov
je
aam
push
rolb
xchg
jbe
nop
jmp
push
cmc
in
pop
push
testl
js
leave
ds
xor
stos
sbb
cmp
dec
sub
jge
fsubl
mov
or
jne
xor
xchg
jmp
das
xor
or
cltd
or
or
sub
mov
fwait
xor
cli
cmpb
out
dec
push
jmp
test
js
mov
dec
push
and
lret
pop
push
lret
mov
call
hlt
sub
clc
fucomi
sbb
sbb
mov
xor
mov
push
push
daa
inc
xor
xchg
mov
addr16
pop
orl
fsubrl
sub
stc
in
mov
dec
pop
and
jge
jecxz
pop
idiv
mov
arpl
xchg
mov
ja
aas
sub
cltd
cmp
loope
jns
xor
pop
addr16
cmpsl
xchg
stos
mov
cmp
inc
xor
cmp
jno
enter
inc
xchg
pop
mov
dec
pop
cmp
aad
push
loop
test
negl
orb
jl
stos
mov
incb
xor
xchg
jb
stos
or
xlat
jno
xchg
pusha
push
cltd
sbb
cmpsl
push
pop
rol
outsb
clc
in
rclb
mov
cmp
shrb
sarl
pslld
sub
cmc
aad
jge
sbb
bound
imul
pop
xor
push
push
adc
jmp
pop
es
rorl
adcl
pusha
pop
rcpps
imul
push
insb
sbb
repz
and
lods
jae
movsl
cmp
fcomp
dec
xchg
xchg
push
pop
das
scas
ss
in
stc
and
xchg
mov
shll
ret
out
sub
das
add
or
dec
cmp
cltd
mov
jns
inc
mov
test
and
into
adc
add
cmp
cmp
push
int
mov
gs
out
pop
stos
idivl
sub
mov
lea
jl
mov
dec
in
enter
xor
cmp
jecxz
push
cmp
sete
jp
xchg
bound
add
sub
add
ja
fwait
push
pop
popa
sbb
cmp
sub
xor
adc
cmp
imul
ret
cld
xor
or
xor
cmpsl
mov
jp
push
and
add
or
push
std
mulb
lret
and
sbb
fldenv
sbb
dec
pushf
or
lea
push
push
cwtl
xchg
pop
or
lea
pop
xchg
aad
cmp
adc
xor
orl
mov
and
cmpsl
out
cwtl
mov
push
lods
xor
arpl
ljmp
dec
cmpsb
scas
or
sbb
mov
int3
lock
mov
inc
sbb
test
and
push
out
out
aaa
jmp
inc
mov
shlb
outsl
lcall
popa
in
and
icebp
mov
sahf
sbb
mov
out
jae
and
fistpl
pop
sub
adc
xchg
lods
daa
pop
pmulhuw
mov
test
es
jg
rorl
and
mov
out
ja
xor
orl
imul
xchg
sbb
movsl
pop
fwait
repnz
mov
iret
mov
inc
out
xchg
popf
mov
sbb
sbb
and
aad
insb
pop
sbb
loopne
xor
dec
popl
out
cmp
out
mov
jl
mov
in
mov
xor
dec
xchg
sub
jno
insl
jno
test
punpcklwd
cli
out
loopne
in
cwtl
cmc
push
mov
leave
mov
dec
fldt
push
add
xor
scas
into
xchg
hlt
imul
fstl
popa
popl
inc
test
cvtpi2ps
mov
lds
and
cmc
gs
ret
cmc
cmc
or
stos
divb
clc
nop
out
jmp
jns
lods
add
enter
push
pop
lods
xlat
dec
adc
loopne
aas
pop
out
int
rcrb
jge
xchg
cmp
cltd
xor
xlat
pop
xchg
mov
push
pop
lods
rorb
icebp
call
push
mov
mov
in
leave
pop
mov
int
mov
rcrl
hlt
jmp
push
push
popf
or
ds
shll
xor
fsubrs
mov
popa
push
adc
pop
mov
movsb
jge
fstps
mov
scas
fldl
cld
mov
dec
xchg
call
imulb
ss
jne
jge
sub
xor
and
mov
dec
outsb
adc
push
or
pop
push
push
aas
dec
inc
add
and
bound
call
arpl
cmp
xor
les
jne
push
insb
sub
mov
daa
faddl
mov
js
idivb
pop
clc
push
cmpsb
aas
pop
cmp
insl
mov
scas
out
test
adc
test
xchg
cmp
in
pushf
adc
adc
or
inc
loopne
test
jno
mov
mov
es
cld
add
popa
loope
jg
icebp
cmpsl
es
sub
adc
mov
jns
or
sbb
sbb
lret
dec
vmulpd
mov
icebp
test
inc
xor
cmp
lods
push
decl
or
xchg
test
arpl
cmpsl
pop
pusha
stos
sarb
jl
cli
push
lods
push
cwtl
out
vpshlw
xchg
loope
mov
push
adc
cmpl
and
shr
jo
je
aam
inc
outsl
popa
sahf
imul
popa
cltd
xchg
addr16
jb
jg
shll
inc
cltd
add
inc
dec
push
ret
xchg
addr16
stos
lds
hlt
push
sbb
bound
mov
icebp
mov
ja
push
cmovne
jae
leave
add
icebp
clc
pop
push
xchg
sarb
popf
push
or
imul
jl
aad
add
fisttpl
pop
fstl
je
cwtl
pop
cmp
and
pushf
push
sub
push
aaa
ljmp
call
scas
xchg
fisttpll
or
push
out
push
outsb
clc
test
std
or
adc
lahf
and
insb
cli
arpl
cmp
mov
add
jno
pop
mov
sbb
mov
je
or
xchg
mov
mov
jbe
cmp
sbb
xchg
xchg
aad
into
add
xchg
sub
sti
stos
repz
mov
dec
cmp
xchg
mov
outsb
pusha
jno
mov
xchg
jnp
push
inc
xchg
fsub
leave
setae
dec
mov
out
xchg
ds
add
or
leave
insl
test
fstpt
rcr
xlat
faddl
out
sbb
jl
repz
mov
mov
xchg
lahf
pushf
lahf
pop
sub
xor
and
adc
push
jb
push
jb
aas
xor
mov
mull
sbb
pop
mov
ret
mov
push
xchg
sbb
loope
xchg
xchg
dec
shl
sbb
or
jl
push
mov
loopne,pt
lcall
nop
pop
jg
mov
push
test
fisubrs
test
jl
jmp
arpl
lcall
pop
jle
adc
nop
mov
or
std
push
jle
call
and
shlw
inc
into
rcr
sub
xchg
js
movsb
pop
add
std
mov
inc
xor
and
rclb
in
lds
sbb
std
and
jnp
mov
scas
xchg
insb
inc
andb
push
imul
ret
fs
rclb
mov
xor
test
andb
dec
aas
push
pop
imul
push
sbb
clc
test
ss
mov
adc
lock
adcb
xchg
and
xor
jge
int
dec
inc
ret
fisttpl
shl
fidivl
out
je
mov
imulb
pop
xor
sbb
mov
out
fimuls
test
jno
sub
xchg
outsb
sub
dec
and
sti
cs
or
lretw
push
ss
in
lret
push
jb
cmp
push
int
nop
stos
and
pop
add
data16
mov
sub
cwtl
insb
sub
pop
aam
es
mov
inc
iret
stc
mov
push
lret
xorb
sbb
pushl
decb
repnz
lds
pop
pop
inc
inc
mov
sbb
push
dec
push
ds
add
es
and
sub
dec
inc
cmpsb
pusha
xchg
pop
in
out
dec
push
cltd
in
popf
jmp
ljmp
std
push
mov
cmp
pop
int
cmpsl
in
imul
lock
inc
sub
fs
je
insb
ret
rolb
rcrb
xor
mov
in
jno
or
adc
pop
cld
dec
daa
xor
sub
pop
xor
fnstcw
add
jo
push
lea
sbb
inc
sbb
lock
mov
jb
in
jbe
movsb
jno
or
and
mov
orb
nop
test
pop
push
jae
ret
fsubr
out
sub
or
or
dec
addr16
push
shr
and
insb
push
out
imul
mov
movsb
aam
xorl
xchg
pop
xor
imul
cmovo
pop
cmp
mov
push
mov
hlt
xor
pop
jl
stc
push
out
mov
enter
mov
call
cmp
ss
movsb
push
pop
stc
push
shlb
shr
into
aas
sbb
xchg
scas
sub
mov
add
out
lcall
xchg
jno
enter
cmp
sub
test
mov
mov
fnop
pop
rclb
fcomps
mov
push
xchg
mov
mov
sbb
sti
inc
mov
ljmp
icebp
push
arpl
negl
jae
divl
sub
push
push
test
aam
mov
adc
movsl
clc
std
pushf
pop
add
sbb
movsl
adc
mov
mov
cld
pop
xor
lahf
ror
pushf
xchg
out
dec
test
fcomps
xor
ljmp
pop
enter
cmp
mov
ss
insb
daa
std
adc
test
xchg
cli
imul
rcl
jbe
add
add
mov
into
push
adc
sub
or
gs
insb
enter
sub
divb
push
aaa
popl
sar
popa
sub
push
fcmovnu
cs
sbb
andb
and
pop
mov
outsl
jp
fsubl
leave
mov
mov
sbb
jmp
pop
inc
fcomip
mov
add
lods
adc
test
cmp
adc
out
lods
aad
stos
cmp
cmp
imul
sbb
std
and
push
in
pop
fsubr
call
xor
pop
clc
test
lcall
mov
pushf
or
fs
jge
pushf
xlat
jecxz
mov
test
in
std
and
push
dec
mov
pop
sbb
pop
add
enter
aas
mov
push
push
mov
iret
cmp
int
pop
sbb
push
clc
cmp
xor
nop
cs
cld
pusha
add
mov
jmp
fwait
ret
sub
xlat
push
loopne
mov
andb
aam
cld
sub
dec
and
xchg
or
push
fwait
or
cmp
jbe
jns
mov
call
rcrb
je
sub
mov
xor
inc
xchg
stos
in
sbbb
cmpsb
inc
and
je
repz
xor
xor
inc
push
dec
jnp
cwtl
and
aam
inc
andl
addb
das
lret
dec
dec
sbb
pushw
or
jg
int
push
aad
es
aad
cwtl
mov
push
aas
std
ja
pop
mov
int3
loopne
cmp
test
call
pop
fdivrs
cmpsl
testb
imul
xchg
push
std
xor
xor
outsb
push
in
rcrb
cwtl
cmp
ret
jno
cmp
cmp
mov
push
or
or
jno
lahf
call
sahf
fnstenv
sbb
and
xchg
ss
inc
imul
imul
inc
pusha
mov
into
enter
sub
pop
outsl
jne
jp
inc
jbe
push
in
ds
and
jbe
movsl
xor
sbb
mov
push
mov
pop
imul
int3
outsb
dec
push
xchg
push
lcall
stos
data16
nop
or
ja
cmc
add
lods
fdivl
add
arpl
jns
shrb
addr16
lods
test
push
inc
sub
adc
push
outsl
jbe
jbe
shlb
add
mov
filds
aas
nop
xchg
xor
in
rorb
inc
xchg
adc
inc
dec
cmp
lods
shrl
pusha
in
loop
or
shr
dec
data16
jo
xor
cld
in
pop
repnz
out
fisubs
fcmovb
mov
lret
push
mov
adc
out
pusha
mull
add
rolb
pop
call
cwtl
cltd
rorb
rcrb
and
sub
cmc
lock
outsl
add
add
imul
aam
test
outsb
xchg
loopne
std
dec
pop
out
push
into
out
xor
cwtl
sbb
push
mov
inc
in
lahf
mov
dec
outsl
outsl
push
notl
je
test
std
out
cli
js
pop
test
fstl
and
dec
jmp
xor
cltd
mov
jg
arpl
data16
movsl
adc
ficoms
and
cmpb
ss
rol
ret
add
mov
out
cltd
jle
cmp
add
adcl
cs
test
sbb
push
adc
dec
or
popf
bound
inc
sahf
and
sub
in
xchg
in
addl
xor
inc
sub
sub
push
out
int3
jbe
test
imul
mov
jnp
sbb
ds
gs
mov
dec
repnz
jp
inc
dec
push
iret
push
inc
push
inc
pusha
mov
mov
adc
movsl
arpl
push
cmp
xchg
insl
das
repz
and
mov
sub
sub
and
repnz
loopne
cwtl
mov
lock
scas
ret
cltd
mov
sti
test
jecxz
add
in
ret
icebp
gs
mov
cmp
fistpll
jmp
xchg
lock
dec
xchg
stc
rol
repnz
inc
cli
les
mov
addb
fildll
jle
dec
clc
loopne
stos
mov
xor
ds
mov
jle
scas
loope
push
mov
pusha
and
inc
idiv
stos
jmp
cmp
xor
sahf
jge
int
aam
gs
pop
xchg
divb
cmp
xchg
mov
mov
add
push
mov
push
inc
push
pushf
pop
stc
pop
add
mov
and
mov
icebp
sarb
or
dec
out
scas
sahf
mov
inc
or
scas
mov
cmp
mov
popa
mov
fmull
mov
inc
mov
pop
std
sub
sbb
push
nop
lahf
sbb
or
mov
push
jo
and
leave
bound
xorb
push
xor
popa
ret
xlat
sbb
jmp
mov
mov
lea
lcall
fwait
add
in
shr
push
bound
enter
mov
dec
and
call
movsb
xchg
push
push
xchg
pop
mov
insb
outsb
pop
lods
cmc
fisubrs
sub
sbb
ret
out
adc
popf
add
mov
shll
inc
adc
inc
mov
out
insl
push
xchg
jge
shrl
or
lods
fisubrs
clc
cmc
mov
mov
and
scas
outsb
nop
fisttps
adcb
mov
xor
lcall
out
popf
adc
cmpsl
cmp
sbb
jae,pt
test
and
cmc
adc
inc
das
and
enter
sbb
xor
add
lret
mov
sub
aaa
lret
xchg
adc
xor
xchg
mov
lods
and
outsb
xor
outsl
mov
aaa
and
dec
stos
lahf
repnz
push
cmc
mov
sbb
cmp
hlt
push
movsl
dec
popf
adc
out
outsl
or
sub
sbb
and
push
mov
stc
xchg
into
xchg
lods
int3
jbe
addr16
xorl
lcall
sti
je
outsb
cwtl
sub
adc
scas
and
push
stos
popf
cmp
mov
jl
daa
dec
out
xor
arpl
repnz
xor
sbb
mov
test
push
je
pop
hlt
add
in
add
gs
pop
jmp
mov
mov
addr16
cwtl
lods
inc
xor
daa
divl
sbb
mov
shll
pop
lahf
hlt
dec
xchg
xchg
aaa
adc
push
xchg
lcall
mov
push
jge
cmovne
popa
loopne
dec
lcall
js
test
test
popa
shlb
push
ss
fwait
adc
jg
xchg
or
rolb
cltd
movsb
mov
movsb
cs
dec
movsb
inc
adc
cli
mov
jns
add
or
sbb
rcr
jb
adc
cmp
or
push
in
push
xlat
lret
repnz
dec
sarl
dec
cli
pop
push
pop
sub
cmp
and
lret
sahf
sub
movsb
cmp
mov
inc
push
shlb
push
dec
sbb
cld
sahf
es
jle
or
iret
pop
cmpl
pushf
jmp
lret
jle
fwait
fs
dec
mov
and
mov
sbb
icebp
cmpsb
sahf
sub
addb
jmp
and
ret
sbb
or
lods
mov
and
or
jnp
xor
mov
inc
arpl
test
enter
and
mov
outsb
cmc
es
pop
dec
xor
xor
add
in
cld
pop
movsl
inc
ljmp
fldenv
xchg
aas
fildll
sti
out
sub
dec
dec
sub
les
pusha
fisttps
out
and
in
dec
and
add
mov
dec
mov
movsl
ds
nop
xor
sub
sahf
sbbl
pop
pop
jae
inc
dec
xor
cmp
pop
aad
ds
fsubs
xor
aam
push
rcr
mov
pop
lock
jecxz
push
dec
jmp
inc
sahf
and
xor
push
inc
clc
sbb
inc
shlb
loop
pop
dec
pushf
cmp
sbb
or
test
push
xchg
pop
jno
and
aad
adc
mov
add
mov
jge
inc
adcb
mov
aam
and
dec
rcl
mov
subb
in
add
push
or
idivl
sub
loopne
insb
inc
icebp
sbb
pop
imul
mov
es
imulb
jecxz
or
mov
in
in
out
adc
rorl
nop
pop
das
sahf
fbstp
mov
adc
inc
loop
dec
test
xchg
xchg
and
mov
or
mov
sti
or
jno
push
std
or
or
xor
outsb
rclb
cmpsl
mov
jp
add
in
lret
addb
or
dec
sti
or
mov
outsl
xor
repnz
ds
insl
and
clc
hlt
flds
or
mov
mov
stc
int
popa
add
xchg
jb
lock
sbb
xor
repz
mulb
es
dec
mov
mov
loopne
sbb
rorb
into
test
cwtl
sub
mov
mov
jle
and
cmp
shrb
mov
mov
sbb
mov
jns
and
mov
fsubs
jno
addr16
fimull
mov
xchg
inc
repz
adc
arpl
xor
jnp
ficoml
in
cmpsb
push
cmp
mull
inc
cmp
mov
shl
push
sbb
dec
lret
sbb
insb
aam
out
push
add
psubsb
push
pop
sbb
aam
push
aad
and
ljmp
inc
das
inc
or
clc
ret
sahf
cmp
call
sub
add
test
outsl
cmpsl
sbb
inc
rolb
sub
sbb
xor
rcrb
lea
xlat
sbb
aaa
mov
sub
mov
xlat
in
test
adc
mov
jbe
mov
xor
xchg
mov
xor
insl
and
adc
xchg
and
mov
outsb
leave
fdivrl
lock
je
fdivrp
fbstp
and
stos
push
dec
imul
fmuls
mov
jnp
pop
jecxz
mov
aam
push
push
xchg
test
shlb
in
fs
mov
mov
popa
xor
vmovupd
cld
mov
add
pop
idiv
in
xchg
lret
mov
mov
mov
pusha
pop
je
cmpsl
cwtl
out
jbe
push
mov
sahf
icebp
mov
cmp
es
ret
gs
mov
pop
or
fildl
in
xlat
sahf
mov
mov
inc
adc
jg
sub
inc
add
inc
and
lcall
mov
cmp
jnp
insb
fdivl
inc
fiadds
scas
repnz
lahf
out
cvttps2pi
jb
pop
jge
mov
movsb
lret
daa
and
xor
mov
cs
pusha
int3
test
sbb
fldcw
sub
fwait
adc
jbe
outsl
mov
mov
push
pop
cwtl
sub
mov
aaa
mov
loope
xor
sub
leave
fiadds
sbb
adc
out
iret
add
stc
rcrl
sahf
cmpps
outsl
sbb
push
out
mov
call
and
pop
push
pop
sbb
push
rorb
dec
push
pop
pop
or
std
rol
es
lods
mov
pop
xchg
loop
pop
mov
dec
nop
inc
xchg
jmp
jecxz
sub
mov
and
out
ror
dec
mov
sbb
lods
cli
push
daa
rclb
test
add
cmc
add
shlb
test
insl
sar
mov
icebp
lods
push
jg
into
pop
decl
lcall
mov
mov
mov
into
lock
xorl
xlat
imul
es
xchg
sarb
pop
cltd
xor
adc
test
lahf
or
ror
jg
cli
push
loope
iret
sti
pop
call
bound
scas
pop
inc
rolb
pop
and
dec
in
mov
push
imul
pop
repz
sub
push
adc
loop
or
inc
sbb
daa
aam
add
outsb
lcall
lret
scas
shrb
cmp
jne
sbb
out
add
jnp
mov
arpl
sbbb
inc
mov
stos
loopne
imul
sbb
ss
fst
out
and
rcr
stc
leave
mov
stos
jmp
push
stos
lahf
int
ljmp
or
inc
insb
cmpb
outsl
and
mov
out
and
mov
ret
mov
xchg
sarb
mov
repz
scas
mov
pminsw
adc
mov
sbb
inc
negb
sub
pushf
loope
cmp
xlat
and
mov
hlt
outsb
jp
mov
das
sbb
mov
scas
aas
das
insb
in
sti
repnz
rcll
and
mov
mov
lahf
pusha
sti
stos
rorb
push
pop
push
xchg
lea
loopne
into
addr16
push
sub
or
cmp
call
xchg
int3
addr16
in
cmpsl
and
enter
mov
stc
xchg
ds
pushf
add
icebp
jge
cmpsl
sub
adc
lods
cmpsl
out
pop
movsl
fwait
cld
adc
jne
xchg
outsb
add
sub
mov
xlat
adc
aaa
and
repz
adcb
aas
hlt
mov
test
lea
das
xor
jns
and
ss
cli
shlb
popf
xor
dec
lock
addb
dec
bound
negb
out
iret
scas
cmp
outsl
push
mov
fists
mov
sub
dec
sahf
mov
hlt
fdiv
cmp
addr16
sti
scas
dec
stos
cmp
in
aas
inc
push
ss
push
mov
or
sub
sbb
jbe
mov
movsl
push
aas
mov
test
std
sub
mov
jne
cmp
add
test
loope
shrl
adc
xor
mov
cmc
gs
aam
mulb
adc
sti
mov
sarb
xacquire
xchg
or
rcrl
lahf
lcall
fxch
inc
popa
and
mov
dec
mov
xchg
mov
pushf
pop
ds
xor
addr16
loope
pop
gs
cmp
movb
aad
sbb
mov
pop
lock
add
leave
xor
je
stc
jo
aam
repnz
fwait
add
into
in
jmp
std
sub
decb
push
mov
push
inc
sbb
test
scas
xor
fbstp
mov
sub
pop
jae
mov
or
ret
pop
mov
stos
xor
cmp
jp
pop
cmp
dec
bound
xchg
dec
sbb
push
pop
xor
add
into
add
add
xchg
fidivs
and
rol
sub
sbb
sbb
cmc
subb
cmp
cmpsb
cmovns
sub
rcll
and
pop
mov
clc
inc
mov
inc
rclb
fabs
xchg
mov
lock
movsl
movl
xor
cmp
mov
ret
or
xlat
arpl
jns
mov
lods
pusha
lret
push
aam
mov
imul
pop
aaa
inc
sub
lcall
jmp
test
sahf
push
xlat
stos
jne
movsb
jg
mov
shlb
mov
or
es
sub
lods
insl
xor
cwtl
mov
or
sbb
push
sbbl
dec
icebp
mov
mov
in
fidivrs
sub
cmpsl
cmp
adcl
sub
lods
sub
insb
lahf
iret
mov
push
loopne
mov
in
mov
leave
stc
sub
xchg
inc
cs
jp
jmp
rorb
cltd
pop
pop
lahf
aas
mov
xor
xor
xor
int3
rol
mov
lods
xor
push
xchg
cmpsl
call
cmp
in
add
xlat
mov
pop
dec
int
sbbb
scas
dec
out
jns,pt
int
inc
stos
pop
repz
sti
lret
pop
call
gs
pop
pop
sti
mov
cmc
fnsave
das
dec
xchg
sub
shlb
sbb
fxch
std
je
lock
push
xor
cs
mov
xlat
jge
add
add
push
pop
xchg
lahf
inc
outsl
shrl
nop
insb
in
add
ret
xchg
lea
or
mov
lea
scas
repz
push
adc
mov
cmp
or
mov
call
inc
imul
lds
fs
pop
mov
xchg
push
sbb
fisttpl
mov
jae
fldcw
add
data16
aad
mov
icebp
sar
sarb
xor
cmp
ljmp
movsl
and
cmp
sub
fldenv
adc
jne
jns
add
sbb
cld
loopne
adc
imul
lock
push
faddp
sbb
sbb
mov
fs
adc
in
mov
mov
ficoms
jno
xchg
mull
xchg
jg
push
das
adc
insl
rcll
push
mov
push
pop
xor
mov
mov
fists
insb
mov
adc
mov
mov
cmp
pop
jl
ljmp
pop
jge
inc
test
lea
dec
sbb
push
orl
xor
loop
jl
ret
data16
std
pop
ljmp
xchg
lods
add
test
in
in
inc
jp
jb
xlat
shll
fwait
stc
mov
jae
fldenv
mov
jbe
mov
mov
test
mov
push
dec
daa
iret
mov
fs
ret
push
and
xlat
xchg
cmp
insl
fs
aad
mov
cld
jg
or
mov
sahf
lea
push
xchg
cmp
mov
sbb
or
push
fildll
fs
popf
movsl
jne
sbb
push
aad
or
add
mov
sub
movsl
xor
mov
in
lods
addr16
dec
pop
cmc
xchg
les
stos
xchg
addl
insl
pop
cli
gs
das
add
mov
cmpsb
sahf
cli
cwtl
repnz
adc
popf
xor
data16
mov
sub
fimuls
jns
test
lahf
call
push
mov
lret
loope
jnp
add
pop
cltd
sub
mov
daa
mov
lret
mov
aad
push
mov
dec
dec
ljmp
push
mov
mov
push
and
rcrb
or
pop
sub
mov
gs
xchg
jne
push
rcrb
out
je
sbb
je
pop
insb
aam
xchg
add
mov
mov
sahf
std
int
jb
push
mov
add
jno
inc
xchg
icebp
lret
inc
jp
fmull
mov
mov
ds
and
xchg
or
pop
jo
idivl
xor
outsb
rorl
jae
push
xchg
jo
adc
add
aas
mov
xchg
fildll
push
outsl
sbb
inc
push
aas
mov
inc
int
sbb
adc
mov
aas
cmp
in
inc
jmp
inc
ret
fnstsw
push
mov
sub
and
xor
pop
or
bound
inc
lret
adc
and
repz
xorl
push
mov
inc
push
mov
dec
mov
and
clc
daa
rcrl
pop
mov
lds
push
icebp
dec
mov
adc
ljmp
loop
inc
icebp
mov
and
xchg
loopne
xor
add
popf
stc
xor
incb
cmp
out
outsl
mov
repz
push
mov
outsl
sbb
aad
fs
add
in
mov
jle
inc
cmp
mov
ljmp
rclb
ret
iret
movsl
sub
pop
lret
xor
mov
pop
or
push
add
xchg
mov
shll
dec
adc
sub
clc
imul
add
std
jo
mov
pop
out
lret
mov
mov
mov
xor
das
leave
push
sub
outsb
cmpsl
add
scas
mov
mov
iret
out
shll
jecxz
mov
inc
into
xor
shll
inc
cmp
mov
loopne
xchg
orl
pushf
test
push
rcl
fwait
or
pop
push
sbb
sbb
sub
inc
in
shll
mov
imull
dec
aam
in
insb
lds
test
int3
xlat
dec
push
orb
into
lcall
stos
test
push
jae
roll
insb
sbb
pusha
inc
ds
out
aas
divb
cld
inc
neg
xchg
push
mov
shlb
push
inc
inc
imulb
jno
mov
add
pop
cmp
lret
sbb
pop
shl
int3
data16
icebp
in
es
push
in
mulb
scas
pop
iret
idivb
push
out
mov
and
lret
fsubrs
loope
jge
hlt
inc
sbb
mov
and
push
cli
add
enter
sbb
leave
mov
mov
pusha
dec
jbe
adc
jle
pop
mov
cmp
loopne
pop
jecxz
fcoml
je
lahf
dec
stc
jecxz
sbb
sahf
ficoml
inc
idivb
loope
jnp
ret
and
xorb
and
add
stc
sub
rorl
lods
inc
xlat
push
or
jno
sahf
mov
cmp
inc
sahf
lods
dec
xlat
or
rcr
and
jg
mov
lods
mov
sbbl
inc
push
in
lock
addr16
mov
jge
mov
fstpl
stos
sbb
or
jo
popa
jns
lods
push
push
mov
out
daa
iret
mov
fs
xlat
inc
or
stos
mov
dec
mov
push
add
and
xor
inc
shlb
pop
lods
lock
je
mov
sub
scas
pop
sti
arpl
dec
adc
shrb
mov
daa
je
les
ja,pn
sub
aam
sbb
mov
out
lock
xchg
pop
enter
popa
insl
adc
mov
mov
sti
jbe
xchg
mov
repnz
enter
xchg
leave
pop
lods
jp
sbb
hlt
scas
jge
aam
cmp
lods
add
in
rcr
aam
pop
cmp
clc
rcpps
mov
inc
and
iret
andl
mov
mov
ds
ljmp
cmc
xchg
loope
jo
dec
cli
and
andb
cmpsb
testl
cmp
jbe
out
dec
pop
mov
in
outsl
xchg
pusha
inc
cmp
andl
std
mov
inc
pop
mov
ucomiss
jo
push
gs
cmc
or
inc
pop
data16
and
xor
test
into
jl
xor
and
sbb
mov
and
xchg
stc
enter
mov
and
aad
mov
push
push
and
jns
je
pop
mov
mov
clc
into
xor
adc
mov
xor
inc
pusha
lahf
mov
hlt
fists
rcl
and
aaa
inc
cmp
lret
cmp
xor
xor
mov
push
loopne
mov
lea
gs
idivb
cmp
jns
icebp
jne
sbb
negl
push
or
adc
dec
psraw
movl
in
dec
fists
inc
jl
scas
pop
aaa
popf
push
push
adc
add
imul
bnd
jge
inc
aaa
push
push
enter
dec
jb
icebp
stc
movsl
aad
xor
stc
shlb
inc
sti
mov
sbb
repz
out
ja
mov
sub
enter
jbe
cld
adc
push
add
pusha
inc
jg
test
xchg
xorb
repnz
add
stos
loope
sub
out
pusha
pop
sarb
jl
dec
enter
sti
xor
loop
into
das
xchg
adc
inc
loop
les
frstor
bound
cmp
or
aam
jbe
cmp
in
ret
imul
repnz
jg
movsl
sbb
and
shlb
sti
les
shr
mov
push
shrl
mov
jo
enter
sbb
lret
sbb
dec
mov
cmpsl
call
push
rorl
sub
dec
mov
dec
jp
or
adc
dec
fildll
jle
mov
nop
ss
cmp
outsb
pop
pushf
pop
stos
pop
xchg
or
add
sarb
add
push
test
cmpsl
pop
js
fwait
xchg
lock
shrb
lods
xchg
inc
mov
or
fsubrs
lods
mov
sub
xor
mov
mov
lret
rorl
loope
ss
sarl
das
divl
pop
int
arpl
imul
negl
adc
xchg
in
in
sub
sbb
push
xchg
dec
je
jae
mov
push
adc
stos
ljmp
adc
xor
insl
shl
mov
lcall
adc
adc
out
mov
daa
mov
ror
dec
bound
in
mov
mov
iret
aas
mov
push
push
mov
jg
mov
jns
push
imul
std
xchg
mov
cmp
sub
into
push
repnz
mov
or
sub
pop
adc
test
xchg
test
cmp
jecxz
ret
cmpsl
add
push
xchg
mulb
jmp
pop
push
mov
xor
and
push
addl
scas
scas
repnz
inc
add
cmp
in
idivl
rolb
dec
movsb
sub
fldl
mov
jg
lods
mov
mov
or
pushf
mov
push
int
rolb
and
in
pop
lret
data16
fcomi
xor
jae
sbb
xlat
clc
jbe
das
xchg
pop
je
inc
cld
pop
test
fimuls
popa
adc
stos
mov
mov
movsl
cmc
or
in
push
push
mov
js
pop
inc
mov
loope
icebp
fbld
gs
xor
lods
out
sti
sbb
mov
add
insl
cli
sub
cmp
mov
and
shl
addl
jb
js
mov
pop
lea
pop
xchg
lret
enter
ja
xchg
repnz
test
scas
dec
push
andl
leave
add
mov
mov
cmp
inc
mov
js
cmc
lea
test
out
inc
sbb
arpl
data16
popf
add
adc
nop
in
xor
fs
push
or
cmp
ficomps
add
loope
out
add
push
ljmp
dec
ss
ljmp
pop
add
xchg
sub
dec
xor
sub
call
icebp
and
and
mov
sarb
imul
mov
jbe
sub
jb
mov
jg
lea
nop
mov
jne
jo
lret
cmp
sti
rorl
adc
dec
xchg
jns
adc
mov
cmp
ja
jmp
std
fsubrp
cmc
add
jp
dec
mov
xchg
add
inc
mov
loopne
xor
jns
pop
mov
adc
aas
loop
sbbb
gs
bsf
in
xchg
insl
xchg
push
std
pusha
stos
int3
push
mov
dec
outsl
loopne
and
push
dec
inc
adc
scas
cmpsl
xchg
out
movl
push
add
or
fxch
jg
dec
xor
dec
fcmove
fcoml
dec
sbb
lret
mov
sub
stc
test
adc
push
adc
nop
repnz
pop
rcll
test
push
loope
cmp
inc
and
testl
rolb
bound
sub
lods
cmp
orb
jne
sub
jnp
out
cmp
xchg
push
test
filds
sbb
fdivr
jo
outsl
jno
dec
sub
add
sub
inc
mov
stos
das
add
cs
out
dec
fcmovnb
cmp
push
imul
ret
sub
daa
aad
xor
and
add
mov
outsl
lods
aaa
sbb
movsl
cli
aam
addr16
mov
jns
aad
inc
sub
gs
jge
lahf
xor
shrl
adc
mov
fldt
into
scas
inc
xchg
mov
imul
mov
mov
mov
xor
lret
push
push
inc
cs
lods
inc
sub
cmp
iret
mov
adc
cmp
lods
lock
add
ja
cltd
jecxz
adc
rclb
xchg
ret
push
cld
adc
dec
push
xchg
rcl
ficomps
cmc
pop
add
add
inc
cs
sbb
jbe
pusha
xchg
repz
add
or
mov
xor
pop
daa
and
outsl
lahf
mov
mov
imul
outsb
push
sub
pop
cmp
and
mov
pop
mov
or
or
and
adc
mov
mov
stos
cmp
mov
ds
scas
ja
adc
aad
sti
jp
add
cmp
pop
dec
inc
or
sub
clc
mov
inc
sahf
lahf
iret
xor
mov
test
aam
pop
or
xor
je
push
js
xor
and
mov
in
js
imul
je
in
mov
jno
call
jae
int3
iret
xor
jb
mov
iret
sahf
cmp
pop
inc
hlt
jne
add
insb
jns
and
roll
enter
data16
lds
cmp
ret
arpl
loopne
sti
imul
inc
mov
fcmovnb
mov
repnz
ss
and
or
and
jne
repz
xchg
xor
call
popl
repz
scas
outsl
mov
movsb
xchg
fcomps
cld
iret
fwait
cmp
push
stos
inc
ljmp
lods
mul
test
das
pop
fistps
ljmp
enter
add
incl
sti
in
daa
jnp
dec
aas
das
sbb
stos
inc
cli
faddl
jmp
inc
fdivl
mov
sub
outsl
std
stos
shlb
pusha
in
inc
dec
cli
out
mov
or
imul
cmpsb
out
sti
xchg
push
cmpsl
ret
inc
loopne
push
mov
call
mov
mov
and
mov
sbb
push
jg
xor
mov
sbb
or
daa
adc
sub
push
icebp
and
addr16
je
xchg
leave
imul
fldln2
jmp
aaa
imul
pop
xor
push
adc
orb
fcmovbe
fisttpll
ja
fadds
cmpsl
xor
mov
outsl
cli
lcall
mov
test
inc
lret
fimull
std
ret
sub
cmp
in
mov
adc
push
pop
fcom
push
and
mov
push
movsl
outsl
pop
xor
popa
cmp
insl
call
jns
sub
dec
gs
ds
cld
push
stc
scas
push
cmp
leave
stc
add
std
enter
and
shll
aad
push
cmp
mov
jmp
std
push
pop
xchg
jmp
and
push
in
insb
negb
daa
int
inc
push
jne
in
je
in
ljmp
or
dec
int
adcl
leave
add
mov
fcmovnu
or
sbbl
jne
cmp
popa
pop
mov
inc
aaa
imul
cld
je
dec
inc
mov
into
mov
jmp
push
xchg
push
pop
ja
cmpsb
dec
aaa
xchg
pop
dec
adc
fsubrp
sub
dec
int
inc
adc
daa
pop
xchg
loop
test
call
in
pop
push
sub
cmc
and
repnz
ds
xchg
mov
mov
xchg
and
inc
mov
scas
mov
lahf
cltd
inc
xor
dec
js
push
or
test
add
mov
mov
pop
pop
dec
jl
pushf
inc
cmp
insb
inc
cmpsb
loope
xchg
out
or
icebp
fcoms
xor
test
loope
outsl
ja
shlb
xor
sub
xchg
xchg
or
mov
test
mov
jns
les
add
loopne
cmp
push
lods
xor
jecxz
lcall
in
xor
lods
pusha
pop
enter
pop
and
cmp
movsb
xchg
imul
je
xchg
out
xor
insb
int
push
outsb
xchg
inc
ljmp
into
push
mov
push
lds
jbe
adc
xchg
mov
js
ja
out
lock
xchg
arpl
pop
in
mov
cmc
cltd
scas
stos
aas
out
stc
push
mov
call
cwtl
idiv
shll
sbb
mov
out
jnp
std
push
repz
cmp
dec
adc
or
push
lds
push
sbb
mov
sbb
mov
fdiv
mov
aas
adc
cmp
inc
jo
mov
mov
sub
shlb
or
jl
mov
pop
xchg
dec
scas
rcll
lds
test
jb
sbb
mov
dec
add
push
les
inc
out
sub
cld
fmull
mov
aas
jo
lcall
int
dec
push
loopne
jle
mov
cld
imul
inc
mov
shll
arpl
iret
icebp
movsl
arpl
mov
cmp
loop
call
mov
push
mov
sbb
mov
aad
cmp
ljmp
and
sbb
sbb
fwait
hlt
andl
into
repnz
fcoml
aad
in
jb
lret
leave
dec
rorb
roll
adc
movsb
lahf
rclb
loopne
inc
psllw
and
xchg
jge
stos
xchg
mov
and
sar
xchg
cmp
adc
xchg
jns
das
mov
pop
sub
adc
das
xor
in
jl
addr16
adc
or
movsl
mov
mov
sub
mov
mov
cmp
pop
mov
lahf
xchg
shr
mov
int
testl
push
mov
push
ret
aas
cmpsl
sub
mov
cmpsb
bound
stos
stos
add
notb
pop
les
jo
push
test
xor
pushf
out
aad
rcrl
lods
xchg
jns
lea
jp
popf
inc
xor
pushf
push
inc
fcoms
cmp
cmp
mov
mov
xor
mov
cmp
cmp
inc
daa
mov
mov
outsb
pop
movsl
repnz
out
popa
inc
xchg
loop
popf
es
in
popf
test
dec
xor
lret
mov
lds
xchg
adc
jmp
sbb
popf
lods
test
pop
dec
jb
sub
leave
mov
out
xchg
or
xchg
lret
movb
pop
gs
xor
or
andb
mov
gs
mov
jp
dec
stc
test
out
cmpsb
dec
xor
jge
cmp
pop
test
sub
sub
or
lock
out
gs
fwait
xchg
push
out
imul
popa
inc
inc
daa
ficomps
and
ficoms
xchg
mov
mov
mov
cmp
mov
movsl
and
in
adc
aad
add
adc
dec
rorl
mov
mov
adc
scas
jns
xor
xchg
jle
shl
scas
jno
inc
cmpb
dec
dec
dec
movsl
jns
mov
push
movsl
stos
pop
xchg
rcl
jns
int3
cmp
clc
push
inc
inc
mov
sub
lock
jo
mov
pop
pop
pushfw
das
arpl
add
mov
sub
test
cs
andb
aad
je
jl
xlat
inc
push
ror
scas
mov
push
shll
int3
sub
jb
mov
add
xchg
in
lret
rcrl
subb
mov
xor
lods
fidivrl
dec
lahf
es
add
divl
aad
cmp
mov
rcr
sub
faddl
xor
mov
fcoml
pusha
cmp
xor
xor
out
or
push
push
jo
xor
sbb
fnsave
lock
mov
inc
jecxz
fstpt
cli
or
imul
punpckhbw
lret
out
dec
stos
test
dec
je
push
dec
gs
stos
nop
pushf
test
add
jae
fidivl
dec
aas
mov
dec
into
sbb
dec
jnp
es
sti
lea
orl
sbb
lret
pop
aaa
mov
xor
stc
and
loopne
dec
addr16
cmp
dec
popf
sub
nop
xchg
fwait
cs
js
or
push
fwait
sbb
fistl
lcall
cld
out
mov
adc
inc
add
shrb
mov
sahf
pushf
mov
das
shll
cmp
jg
xchg
xlat
repnz
push
insl
push
dec
shlb
sub
bound
daa
clc
jp
outsb
adc
xchg
das
imul
iret
stos
gs
data16
pop
xchg
das
cmpb
in
add
mov
and
jmp
std
push
enter
pop
mov
pushl
mov
scas
dec
stos
ja
mov
jne
push
pop
cmp
sub
mov
pop
mov
div
ja
int
push
xor
mov
xor
les
imul
pop
int
adc
xchg
fdiv
sub
lock
or
inc
orl
and
test
or
cli
jmp
cmp
loopne
icebp
pop
shr
in
push
mov
xor
push
je
push
aaa
xor
dec
fcomip
stc
lcall
and
leave
inc
or
in
shrl
mov
dec
icebp
data16
or
fnstenv
sbb
push
add
aas
out
loop
pop
cmp
xor
dec
jmp
lcall
cmpsb
nop
jp
xchg
mov
inc
loop
push
insl
daa
pop
push
into
in
adc
hlt
add
and
dec
dec
ret
mov
dec
insb
dec
jo
test
jp
pop
or
xchg
cmpl
in
shrb
pushf
dec
in
je
xor
imul
fimuls
test
mov
ljmp
mov
mov
mov
test
sti
cmp
loopne,pt
mov
jo
mov
pop
add
push
ret
xor
xchg
popf
lods
ss
outsb
in
icebp
test
mov
test
sub
out
jl
adc
jno
mov
loop
adc
out
insl
pop
insl
sub
sti
addr16
pop
dec
pop
add
popf
add
movsl
dec
insl
or
lock
push
mov
sub
out
mov
aad
sub
scas
cmp
popf
repz
dec
iret
and
push
push
mov
std
push
mov
xor
push
xlat
adc
movsl
mov
mov
pop
nop
into
sbb
xchg
jmp
push
mov
jge
in
pop
mov
pop
inc
repnz
jno
testb
xchg
loope
loop
xor
ret
push
mov
inc
xchg
jnp
aad
dec
push
mov
das
adc
test
mov
lahf
xor
into
in
imul
dec
mov
mov
dec
movsb
lret
cmp
fbstp
mov
adc
or
cmp
pop
and
gs
je,pt
inc
dec
pop
xlat
jne
in
add
push
sbb
out
push
bswap
test
lock
adc
mov
leave
ja
cmpsl
and
int3
fisttpll
in
or
into
or
inc
jne
mov
push
mov
cmp
push
mov
mov
lea
les
jnp
lret
cltd
mov
dec
movsl
pop
mov
loope
lock
icebp
decb
lret
and
decb
and
in
pop
enter
xorl
adc
shlb
stos
xchg
repnz
mov
mov
mov
sub
enter
pushf
or
test
push
in
add
add
loop
cmpsb
dec
popf
push
xor
mov
subb
adc
ljmp
pushf
or
fs
adc
push
jb
aad
sub
repnz
out
not
mov
shrb
lds
loope
or
movsl
fsubl
mov
aaa
xor
mov
test
xchg
mov
lahf
push
adc
xor
sbb
out
pushl
xor
mov
xchg
or
sahf
inc
add
push
inc
mov
mov
fisubs
cwtl
jne
cmp
mov
mov
scas
or
dec
clc
dec
pop
add
outsb
popf
std
pop
mov
dec
mov
in
ret
divl
fisubs
cmp
mov
and
stos
pop
dec
into
outsb
insb
imul
lcall
mov
ret
into
cmpsl
inc
and
pushf
ficoms
into
fwait
inc
cmp
and
mov
int3
adc
sarl
xchg
pop
push
xchg
push
clc
das
out
loopne
jbe
fucomip
jbe
sbb
xlat
adcb
ljmp
fwait
adc
mov
cltd
push
ds
or
lret
fnstenv
es
mov
push
mov
jmp
or
push
cmp
or
arpl
xchg
enter
call
iret
mov
sbbb
hlt
fbstp
popl
mov
adc
xchg
inc
pop
les
dec
pop
addr16
rol
dec
push
leave
push
fmul
and
mov
fcoml
inc
adcl
mov
mov
or
mov
dec
sahf
sti
lds
fbld
and
pop
mov
mov
stc
cmp
testl
push
in
pusha
loop
jmpw
adc
mov
adc
mov
pop
pop
daa
mov
jno
mov
mov
mov
data16
loope
push
jb
xchg
and
dec
and
or
xchg
jecxz
scas
add
lret
daa
daa
mov
pop
push
cmp
pextrw
mov
cmp
outsl
jp
mov
fldcw
sbb
decl
into
mov
mov
arpl
dec
inc
aas
add
ror
mov
mov
das
adc
testl
shlb
inc
or
imull
repz
arpl
xor
lret
xor
cmp
mov
pusha
push
insb
movsb
nop
mov
aam
adc
push
and
imul
sub
xchg
add
sub
sub
add
push
das
and
mov
mov
and
bound
div
mov
xor
dec
incl
pop
jmp
hlt
scas
in
mov
cmp
mov
cld
or
add
mov
aas
adc
jge
ud0
pop
not
mov
sbb
mov
mov
or
sbb
xchg
arpl
mov
outsb
mov
mov
lock
pop
mov
pushf
sti
inc
dec
out
push
lea
sub
mov
mov
xlat
in
or
jecxz
dec
pop
clc
repnz
popf
push
loope
jmp
mov
in
pop
pop
lods
inc
cmc
jo
insb
add
sahf
je
scas
jecxz
sbb
cmp
or
imul
adc
xor
pop
insl
icebp
sub
repz
lahf
sahf
call
dec
xchg
pop
insl
sti
sbb
mov
push
jae
vpsubd
cmpsl
cmp
mov
aad
bound
mov
mov
cmp
mov
jne
pop
push
add
cs
sub
inc
pop
inc
adc
les
or
push
popa
cmpsl
movsl
fwait
sti
inc
pop
add
data16
sbbl
cltd
mov
int
xor
stos
gs
or
push
jae
and
mov
jecxz
mov
leave
and
sub
das
cli
repz
mov
lahf
nop
xlat
cmp
mov
repz
ljmp
roll
jae
daa
mov
sahf
mov
stos
pop
mov
mov
fisubrs
pop
aam
push
jno
shrb
inc
jno
push
jmp
adc
repz
pop
repz
xor
push
lds
popf
lock
ljmp
mov
cmpsl
lock
lret
inc
push
and
xchg
lods
and
pop
clc
dec
fcmovnu
inc
jo
repnz
rcrl
int
call
scas
aas
push
mov
aam
lret
sub
data16
xchg
cwtl
lock
jp
data16
xor
sbb
xchg
ljmp
jl
pop
adc
out
xor
call
shr
mov
push
xor
inc
xchg
negl
movsb
fsubl
shl
movl
push
jo
gs
cmp
dec
stc
jnp
mov
sub
lock
out
inc
xor
mov
xchg
bound
inc
insl
xchg
jl
and
jns
xlat
cmpsb
sub
sahf
lcall
es
xor
out
adc
lock
mov
loope
ret
mov
in
popa
or
imul
xchg
adc
pop
lret
jo
sbb
in
lahf
aad
in
imul
sbb
xchg
pop
push
mov
cmp
and
and
jl
je
js
pusha
adc
fs
rcrb
push
pop
push
enter
sbb
ficoml
add
mov
test
loop
and
fisubl
add
les
mov
sub
and
mov
movsl
movsl
fbld
outsb
popa
sub
jge
fnsave
and
out
adc
push
xor
jecxz
imul
mov
nop
mov
sub
test
in
pop
icebp
sbb
enter
es
sub
cmp
push
test
test
mov
subb
and
out
fst
cmpsb
jne
cld
inc
adc
xchg
mov
negl
mov
jge
movsl
xchg
xchg
add
xor
inc
shrl
mov
fdivs
jg
sub
shll
jne
mov
out
jns,pn
adc
stos
add
out
jno
rcrl
pop
lods
pusha
loop
mov
ljmp
inc
aam
cld
std
pop
test
dec
pop
fadds
repz
call
in
pop
bound
stos
clc
mov
and
loopne
sub
sub
mov
repnz
lcall
inc
or
and
in
ljmp
cmpsb
and
xchg
mov
xor
mov
cltd
add
add
add
cmp
loope
and
jg
mov
lock
mov
mov
sbb
outsb
mov
or
pushf
mov
into
mov
adc
cld
xlat
add
jg
pop
pop
cmp
hlt
jg
xor
dec
bound
loop
xchg
test
popa
lcall
mov
pop
xor
inc
xchg
outsl
mov
decb
push
test
jns
pop
lea
pop
push
nop
jg
dec
dec
loope
stos
cwtl
dec
in
enter
pop
addl
popf
lret
mov
jg
sbb
mov
pop
mov
int
test
inc
sahf
int3
loopne
mov
fdivrs
es
and
and
and
dec
and
jb
popa
jg
mov
call
fs
sahf
pusha
xchg
aaa
out
insl
and
and
leave
or
inc
cmp
out
aad
arpl
loopne
mov
or
mov
cwtl
xchg
es
notb
mov
xchg
addl
mov
ja
movq
or
or
cmpsl
es
jge
lods
mov
hlt
jecxz
jnp
mov
ss
pop
push
loopne
xchg
cmp
mov
pop
punpckhbw
pusha
mov
ds
xchg
lock
push
mov
and
push
sbb
mov
mov
push
shl
stc
lcall
mov
cmp
mov
xor
inc
push
xor
js
and
aam
data16
push
pop
gs
mov
jl
sbb
xor
pop
cs
addr16
jnp
loop
popa
adc
inc
test
mov
inc
mull
pop
fildll
jl
jl
pop
xchg
dec
bound
pop
mov
jno
push
inc
mov
sahf
cmp
outsb
xchg
enter
aam
cmp
mov
mov
mov
xchg
cmc
outsb
inc
pushf
popf
leave
mov
pushaw
push
pop
dec
aaa
inc
pop
push
cltd
mov
imul
out
mov
add
fisubrl
push
out
adc
fstps
xchg
xchg
sarl
jmp
fmul
test
ja
arpl
fwait
icebp
xor
cld
push
ret
jo
push
or
mov
icebp
jg
add
movl
inc
jle
push
jmp
add
pop
fildl
repz
adc
jge
mov
adc
inc
jl
sbb
int3
jne
jne
dec
mov
mov
push
imulb
mov
into
dec
mov
mul
or
leave
fdivl
jbe
cs
in
inc
icebp
inc
popa
scas
repz
adc
lods
outsb
adc
sbb
xchg
data16
or
insl
mov
jb
nop
mov
add
shrl
add
shll
push
test
repnz
sbb
mov
dec
je
pop
iret
popf
sub
js
data16
jge
cmc
mov
cmpl
mov
mov
ss
enter
mov
jp
xchg
add
and
lock
sbb
jle
mov
pop
lds
and
arpl
mov
xchg
loope
and
jg
int3
cmc
jns
outsl
jmp
inc
and
dec
jge
ss
jecxz
imul
or
mov
test
push
inc
repnz
or
pop
inc
int
stc
jg
dec
mov
addl
ja
aas
jecxz
cmp
mov
pop
fcmovbe
daa
add
test
and
sbb
das
inc
inc
jo
mov
test
add
push
jge
fidivrl
sbb
xchg
test
mov
pop
inc
stc
pusha
inc
ret
cmp
sbbl
xchg
jno
cmpsb
cmp
cs
jae
call
test
cwtl
sbbl
movsb
jnp
mov
push
push
mov
mov
out
std
aas
lcall
cli
sbb
xor
cmp
pop
sub
sub
int
sub
dec
orl
sbb
outsb
je
add
out
cmpsl
cli
sub
imul
inc
jmp
add
xchg
mov
das
aad
pop
popa
pop
sub
xchg
mov
mov
dec
cltd
call
pop
clc
adc
inc
outsl
lahf
xchg
or
cwtl
lea
mov
lods
popl
add
es
xchg
sbb
sub
loop
les
xor
push
sub
out
in
push
bound
stc
push
xor
mov
icebp
mov
shrb
dec
test
hlt
out
lods
dec
add
pop
pop
mov
sbb
inc
das
ret
ljmp
cli
xor
stos
xor
jae
pop
inc
jo
cmp
ret
aam
mov
add
repz
dec
iret
movsb
xchg
scas
fwait
loop
dec
in
jns
xor
pop
xor
das
add
outsl
jge
ljmp
push
sbb
inc
xchg
iret
or
lahf
dec
and
in
mov
stos
xchg
cmp
test
orb
add
popa
inc
dec
fstl
jno
jns
pop
scas
mov
cmp
adc
and
out
lret
es
movsb
sub
xchg
jbe
fsubp
cmpl
inc
xchg
scas
cmp
cwtl
xchg
lods
mov
movsl
jne
mov
push
and
and
in
sub
sbb
ss
sub
in
mov
call
addr16
mov
jae
xchg
adc
lret
fsubl
push
add
clc
in
cmp
mov
xchg
inc
pop
cli
nop
mov
cmp
or
cs
push
sbb
lea
mov
aad
arpl
int3
mov
scas
adc
and
enter
xchg
cmc
cmp
dec
mov
ret
gs
inc
adc
aad
popa
sbbb
gs
ret
sub
aas
popf
adc
fldcw
imul
sbb
dec
or
ljmp
push
lods
sub
scas
out
mov
push
sbbl
int
scas
push
pop
gs
insl
pushf
cmpsl
mov
pop
add
jmp
fs
sub
push
iret
and
mov
imul
shlb
mov
insl
jge
in
mov
in
lock
into
push
push
mov
sarl
loopne
test
xchg
and
test
vmwrite
push
movsl
xor
testl
dec
jl
xchg
mov
add
inc
shl
inc
xor
mov
jg
enter
pusha
iret
jnp
and
test
push
ret
ficompl
inc
mov
dec
ret
adc
cmc
add
sbb
mov
aam
mov
adcl
xor
mov
mov
lds
jmp
cs
sbb
ret
sub
fmulp
jge
imul
test
stos
and
or
shrb
je
out
pop
jnp
or
add
mov
inc
fldcw
jp
add
mov
mov
and
add
mov
xchg
or
dec
xchg
mov
jge
enter
pushf
faddl
mov
cmp
ret
cmp
xchg
pop
leave
mov
dec
popl
iret
and
mov
and
lock
scas
orl
mov
fldcw
or
pop
ljmp
pop
ljmp
pushf
insb
xchg
imul
in
inc
inc
jp
aam
jno
add
add
scas
add
adc
shl
or
push
repz
push
cwtl
sub
jmp
ret
sbb
scas
mov
dec
aam
jns
mov
mov
sub
inc
cltd
jnp
jnp
push
cmpsl
outsl
dec
inc
xor
fisubl
xchg
ret
mov
xor
add
adc
push
leave
mov
dec
dec
jno
loop
push
add
aam
or
cmp
gs
dec
ja,pt
cmp
mov
and
fnsave
or
lds
ss
icebp
push
gs
pop
sbb
pop
inc
sahf
in
aam
jmp
xchg
lods
jmp
mov
mov
add
sub
pop
sub
ds
ficompl
les
or
sbbb
lds
mov
ds
ret
adcl
int3
xor
test
mov
jno
pop
mov
jbe
xchg
fxtract
inc
ret
imul
in
repz
or
mov
mov
push
loopne
sbbb
and
jp
fldt
cli
lock
mov
in
jecxz
pop
jp
push
mov
fsts
jge
pop
mov
stos
imul
and
fs
push
pushf
mov
icebp
fsubr
clc
sbb
loop
pop
inc
xchg
xchg
jb
test
jle
js
sbb
dec
imul
pop
cmp
movsl
into
mov
outsb
int3
sub
xlat
inc
sti
aaa
shrl
mov
pop
pop
xchg
pop
sti
dec
push
xchg
ss
dec
enter
in
push
in
mov
icebp
sti
jns
out
divb
pop
cmp
xchg
jp
adc
in
subl
jo
adc
jmp
cmp
loop
cwtl
add
std
stos
pop
jmp
fistpl
mov
push
pop
sub
loope
push
mov
mov
andb
scas
lock
sbb
lds
addr16
insb
adc
mov
ja
mov
adc
xchg
jbe
mov
and
pop
add
ds
ss
push
mov
scas
xchg
push
mov
xchg
repnz
cmp
jg
mov
sbb
cmp
scas
adc
in
aad
dec
ljmp
jae
xchg
pop
push
shlb
pop
stc
jns
inc
pushf
fstps
dec
mov
mov
or
stos
add
and
mov
andb
in
outsb
xor
test
pop
stc
test
lret
pop
cmp
mov
dec
xor
adc
ror
loope
and
or
mov
push
nop
mov
and
rcrl
dec
std
push
jbe
cli
imul
lods
sahf
pop
shrb
pop
fildll
std
sbb
outsl
mov
inc
insb
js
ss
ret
stos
push
shlb
ss
movsb
loopne
mov
cmp
pop
popa
jae
xor
out
lret
ja
test
jmp
mov
jg
cmc
mov
loopne
test
xor
ljmp
sub
daa
insb
mov
and
add
add
movsb
adc
aas
and
ret
mov
rclb
xchg
addl
cmp
cmp
cmp
sbb
push
inc
lahf
adcl
je
mov
incb
jno
push
dec
hlt
push
popa
pop
xchg
and
jl
loope
jns
jge
bound
mov
sbb
fistpll
push
adc
push
mov
cli
sti
les
mov
sahf
dec
js
xchg
dec
dec
out
fbstp
push
lcall
jmp
mov
xor
and
inc
cltd
loope
sub
stc
loopne
jae
dec
cli
sub
pusha
push
insl
stc
inc
and
mov
bound
xchg
test
test
mov
arpl
in
push
nop
xchg
loope
add
pop
mov
daa
gs
add
mov
inc
fistps
cmpsl
inc
jnp
pop
add
add
imul
cmp
mov
mov
shll
mov
ficompl
shll
mull
inc
dec
inc
mov
jmp
jo
push
pop
mov
inc
push
sub
cwtl
push
add
adc
sub
push
aas
xchg
in
sub
add
div
bound
xchg
inc
or
add
push
pop
adc
lret
jns
mov
int
jp
leave
clc
adc
xchg
adc
mov
sbb
icebp
jne
lds
push
inc
jbe
dec
cmpsb
ds
sbb
bound
jne
aaa
out
and
icebp
outsl
rep
or
xor
mov
jp
pop
or
inc
dec
out
movswl
ljmp
fsubrs
adcl
jl
pop
scas
mov
push
mov
xchg
frstor
repnz
add
xor
fnsave
push
call
dec
clc
aam
or
add
inc
rol
cmpsb
icebp
imul
movsb
adc
aaa
and
cmp
mov
insb
sub
lods
adc
out
sahf
mov
pop
es
mov
mov
jle
bound
das
inc
fnsave
rol
mov
insl
jns
fdivrs
stos
jnp
mov
sar
sbb
and
out
popa
fildl
or
xor
xor
hlt
ret
enterw
jbe
fiadds
inc
sbb
xor
inc
sbb
dec
push
popa
addr16
aam
inc
add
pop
adc
lret
sti
icebp
push
mov
and
and
rorb
dec
aad
mov
pop
fiaddl
int
les
push
cltd
test
xor
fs
sub
imul
pop
dec
inc
xchg
sub
pop
dec
sti
cmp
mov
dec
lcall
dec
popf
mov
mov
sbb
pop
rcrl
add
loopne
push
pop
adc
xor
jnp
out
sbb
adc
xor
pop
lods
in
dec
fcomip
popf
jmp
cmpsl
lea
pop
pusha
jmp
push
pushf
je
push
sbb
xchg
xchg
into
jne
pusha
sbb
in
pop
test
inc
add
mov
repnz
addr16
xchg
std
pop
xchg
sub
pop
push
iret
sarl
adc
add
push
testl
cmp
mov
xchg
ret
pusha
cmpsb
dec
push
mov
dec
jl
jge
sub
push
stos
fadd
cmpsb
add
loope
sar
pusha
jne
aam
int
sti
lret
sbb
dec
sar
mov
cmp
mov
pop
sbb
sbb
dec
adc
xchg
shll
add
rclb
push
shl
lods
in
mov
insb
fisttps
or
push
jg
out
or
stc
lret
fsts
sbb
xor
call
insl
inc
iret
cmp
test
fucomip
sbb
hlt
xor
std
push
push
movsl
cwtl
add
test
outsl
faddl
fsubrs
es
int
mov
push
dec
lahf
cmpsl
xchg
fwait
sbb
inc
push
inc
sahf
dec
rcr
test
pop
lods
dec
dec
lock
popa
xchg
loopne
push
or
mov
add
out
jmp
pop
dec
flds
push
or
push
jecxz
mov
mov
cltd
les
rorl
mov
mov
mov
jno
jmp
mov
and
pop
test
mov
icebp
xchg
leave
icebp
das
aas
jmp
xchg
dec
dec
ja
movsl
imull
comiss
jbe
mov
xor
cmc
stos
hlt
rcll
sbb
hlt
or
push
pop
scas
mov
add
dec
in
xor
push
xchg
movsl
cwtl
jbe
pavgw
imul
out
jg
imul
jl
mov
popf
insl
cli
sbbl
mov
ja
lea
sub
mov
pusha
jle
sub
sub
sub
loop
and
push
xor
fwait
and
leave
push
in
push
mov
subl
mov
mov
aam
movsl
arpl
add
out
push
fwait
dec
aas
inc
adcb
xor
push
dec
fstps
push
jbe
gs
fsubs
pop
cmc
movsb
mov
movsb
movsb
add
pop
mov
std
jle
mov
inc
push
insl
scas
jmp
ret
mov
test
ficoms
mov
imul
adc
out
sbb
and
aam
loop
inc
pop
ret
in
fsubrl
cltd
lock
sbb
mov
push
push
dec
pop
pop
mov
jecxz
jmp
lret
pop
fbstp
inc
ret
arpl
hlt
daa
jle
rclb
out
mov
ljmp
mov
ljmp
lods
lret
out
bound
push
imul
popl
xchg
fistps
mov
mov
movsb
out
cmpsl
pop
leave
popf
adc
out
mov
add
stos
in
add
addb
daa
add
push
addr16
add
lea
sub
mov
sub
cmc
in
jecxz
pusha
stos
popa
xor
and
pop
adc
roll
repz
dec
jo
rcl
cmpsl
fcmove
je
insl
sub
pop
data16
bound
mov
das
outsl
and
mov
arpl
cmpsl
dec
dec
xor
jne
jo
fldl
and
ja
inc
add
movsl
ja
fmuls
push
loopne
pop
cltd
lret
cmc
lret
adc
cltd
jp
and
aad
das
adc
mov
gs
mov
add
xchg
movsl
pop
xchg
sub
push
dec
sahf
out
sbb
in
data16
push
lea
dec
pop
or
int
aad
mov
jns
adc
cmpsl
xchg
fwait
cmc
daa
aas
stos
sub
jae
into
les
mov
cmp
aam
out
mov
fimull
xchg
dec
bt
pop
shll
pop
push
jmp
insb
mov
scas
xchg
xlat
sub
mov
out
xchg
inc
mov
bound
ljmp
push
push
aad
push
add
mov
mov
add
mov
dec
inc
ss
pop
daa
pop
push
call
insb
call
jl
or
adc
lea
lods
inc
scas
jae
decb
xor
adc
xchg
cmp
ficompl
dec
cmp
pop
cltd
jae
loop
xchg
subb
mov
mov
jno
mov
ficomps
mov
sbb
xchg
mov
pop
pop
mov
js
adcl
mov
sub
push
push
aas
addr16
pop
or
repz
shl
das
mov
mov
or
dec
xor
stos
insb
into
pop
lret
adc
pop
jmp
idivl
cmpsl
ficoms
push
or
dec
negl
mov
mov
movsb
push
fistpl
cltd
fiadds
mov
repnz
das
in
jbe
les
xor
sbb
push
mov
int
pop
push
pop
leave
mov
mov
out
dec
cs
lcall
sub
add
les
dec
mov
imul
test
and
jg
inc
cmpb
xlat
repnz
push
add
pushf
sahf
loop
insb
push
imul
jecxz
jecxz
dec
inc
pop
xchg
xor
inc
adcl
mov
fdivrl
repz
pop
pop
xor
repnz
xor
nop
in
xor
mov
or
pop
push
cltd
add
loop
lret
and
sahf
jge
scas
mov
pop
es
scas
pushf
jo
cmp
jb
dec
dec
push
loopne
dec
and
aas
clc
cld
push
sub
or
push
sub
sbb
cmpsb
ret
add
data16
adc
adc
dec
push
aaa
mov
adc
cmp
stos
cmp
lea
add
imul
push
add
mov
push
call
clc
mov
mov
push
mov
inc
movsl
sbb
sub
inc
popa
inc
adc
aad
xchg
push
sub
jl
mov
sbb
mov
hlt
imul
cld
xchg
mov
shr
leave
add
adcb
out
cltd
sub
push
pop
mov
int3
cmpl
cltd
sbb
pop
movsb
subl
icebp
gs
xchg
mov
inc
lock
lods
xchg
dec
or
add
mov
and
and
lods
cltd
subl
scas
adc
mov
jns
and
adc
pop
or
push
dec
add
jmp
fimuls
insb
pop
data16
or
fcompl
jns
movsl
enter
sub
xorb
popf
mov
cmc
jo
bound
and
mov
inc
in
add
in
add
mov
jb
int3
push
push
std
call
fistps
add
hlt
or
or
nop
lods
pusha
in
ljmp
addb
fisubs
popa
daa
xchg
fstpl
rcrl
in
ds
sbb
adc
stos
sbb
test
iret
outsl
xor
push
divl
xor
jb
fstpl
inc
and
sub
fnsave
in
xchg
add
xchg
in
sbb
inc
pop
ficompl
bound
int
flds
das
clc
pop
xchg
pop
ret
loop
pop
xchg
pop
adc
pop
fnsave
dec
push
arpl
cli
push
mov
scas
ds
sub
rcr
dec
jno
push
clc
addl
mov
enter
setle
xor
inc
leave
cmpsl
add
push
add
inc
out
sbb
std
rclb
cmc
sub
gs
mov
repz
lcall
push
and
jnp
lret
popa
push
out
test
push
ja
cmpl
cmp
jle
sub
loope
in
mov
cli
and
inc
scas
xchg
or
jo
pop
icebp
shl
fdivl
jo
xchg
push
out
sbb
insb
fwait
dec
fnstcw
fildl
lahf
mov
lahf
mov
setb
or
loop
les
inc
arpl
mov
sub
sub
dec
cmp
insl
orb
pop
push
movl
or
or
repz
jne
js
cmpl
jo
loopne
or
adc
cmp
mov
cmp
ljmp
and
push
xor
mov
adc
push
xor
pop
cmpsb
dec
pop
clc
pop
stos
dec
jecxz
add
in
int
dec
lcall
aad
cs
lods
fstpt
fwait
incl
sbb
inc
sub
cmpsb
pop
lret
std
insl
inc
dec
mov
mov
lods
push
pushf
es
int
decb
or
test
call
in
hlt
mov
mov
and
inc
add
gs
inc
add
push
cwtl
fdiv
int
leave
test
mov
mov
mov
push
xor
enter
push
xchg
fs
movsb
aas
out
mov
loopne
dec
loopne
stc
testl
dec
xchg
cmpsl
pop
xor
push
roll
addr16
xchg
shll
into
cmp
mov
mov
scas
adc
pop
adc
sbb
jns
mov
rolb
and
pop
les
cmp
lret
inc
and
stos
add
insb
cmp
test
lods
repnz
ss
imul
popa
adcl
pop
push
adc
add
add
mov
dec
fs
cli
int
cmp
cli
dec
shlb
lods
adc
aaa
pusha
push
daa
mov
jnp
pop
in
ret
aas
out
dec
push
test
inc
fiadds
add
or
push
mov
cmp
cltd
pop
inc
call
pop
int
pop
mov
in
dec
jle
je
mov
push
out
fwait
xchg
mov
mov
je
lahf
sahf
and
test
sahf
xchg
int3
movsl
inc
mov
es
cmp
sarb
and
mov
arpl
fldl
add
add
push
sbb
mov
inc
iret
jl
insl
sar
and
sbb
or
int3
xchg
mov
ljmp
sbb
and
sbb
insb
push
jno
rorb
mulps
call
jge
lret
cmpl
sub
push
subb
out
xchg
jae
insb
add
and
fwait
ficoms
enter
adc
fildl
jmp
out
mov
cld
gs
mov
pop
pusha
shlb
dec
insb
std
fcmovne
push
or
inc
lods
sti
mov
rorl
adc
push
fstl
xchg
stc
mov
add
mov
dec
subb
ds
data16
cmp
gs
pop
mov
push
movsl
lret
mov
enter
insl
xchg
es
es
inc
adc
repnz
jp
fdivl
clc
mov
dec
ds
pop
rclb
fldcw
dec
sbb
sub
leave
in
int
in
clc
inc
subb
dec
out
mov
outsb
mov
or
scas
mov
pop
sub
mov
and
rcll
lret
sub
push
fsubrs
xor
xchg
xchg
add
mov
inc
lea
push
xchg
sbb
pop
addr16
mov
gs
mov
xor
js
dec
xchg
sbb
dec
mov
cld
lds
push
push
insb
adc
les
js
mov
sub
mov
push
dec
pushf
pop
insb
cmp
pop
sub
data16
call
das
mov
pushf
push
aam
push
lods
pop
push
lret
push
imul
scas
sub
ret
in
cs
add
cld
je
mov
aam
or
std
shll
sti
mov
xchg
xchg
sub
hlt
dec
cmpsl
xor
into
sbb
cwtl
xchg
cwtl
xor
xor
pop
jns
das
jno
xor
dec
outsb
rorl
push
popf
dec
xchg
and
ret
or
sarl
push
mov
mov
dec
sub
push
add
mov
sub
jae
sbb
xchg
in
daa
or
int3
or
mov
adc
stos
and
ljmp
insl
sbb
shl
popa
jb
push
and
mov
test
lahf
fisubs
xor
icebp
and
ficompl
mov
cwtl
mov
ret
bound
inc
lods
cmp
jae
lahf
inc
out
repz
mov
lods
sbb
dec
jae
xchg
icebp
mov
test
loopne
pop
or
push
pop
inc
xchg
pop
push
sbb
outsb
sbb
daa
cmp
xchg
sbb
push
pop
lea
sbb
add
pop
addr16
xchg
push
sahf
gs
or
enter
test
inc
sub
out
dec
jge
js
stos
cli
adc
and
xchg
das
shr
addb
and
mov
dec
nop
shll
hlt
and
inc
and
push
cwtl
aad
insb
xchg
mov
sbb
jo
pop
movsl
sub
inc
addr16
inc
sub
inc
in
fists
fcompl
cmc
cmp
shlb
or
or
test
xor
jne
jae
add
pop
insl
aam
insb
or
enter
in
idivb
or
std
fcoms
iret
sub
dec
iret
jmp
mov
test
jle
ja
xor
pop
push
cmp
xor
dec
iret
into
mov
sub
cmp
mov
out
xchg
popa
outsb
lods
jg
sbb
jo
xor
cmp
sbb
sbb
adc
or
xor
inc
loopne
xchg
inc
mov
lcall
or
sbb
int3
dec
in
and
xor
jnp
iret
outsb
mov
adc
or
xor
cmc
push
push
test
mov
xchg
inc
or
mov
andnps
pop
xchg
loope
sbb
adc
mov
push
push
pop
push
pop
adc
sbb
adc
testb
insb
mov
and
mov
xor
adc
mov
dec
and
xchg
mov
fwait
cmpsl
pusha
sbb
or
in
dec
aad
push
pushf
jge
jne
inc
in
in
jmp
or
jp
or
addr16
icebp
push
jo
cmc
dec
sbb
push
pop
scas
jo
imul
and
sbb
sbb
xor
cmp
sbb
aam
cmp
inc
into
cmp
int
repz
das
add
das
mov
cmp
aaa
push
jge
xchg
sub
or
adc
inc
jmp
and
loop
pop
in
jmp
scas
repz
das
add
imul
scas
dec
repnz
fsubs
inc
push
mov
pop
pop
gs
ds
inc
xchg
xor
arpl
mov
mov
divl
xchg
cltd
xor
rcll
xor
sbb
pop
inc
enter
mov
xor
frstor
push
cmpsb
xor
ss
inc
mov
movsb
ljmp
in
sti
sub
or
test
push
in
xchg
mov
int
add
mov
popf
dec
xchg
imul
mov
mov
xor
adc
or
mov
add
jb
fistl
inc
bswap
test
pop
or
aas
in
or
sub
xchg
jecxz
dec
ds
out
test
jnp
pop
in
jns
int
cs
ret
mov
or
add
inc
push
loope
cmpb
loope
outsl
ficoms
pop
push
add
push
jle
aad
stc
je
sbb
jo
or
hlt
push
add
in
pcmpeqd
xchg
or
pop
pop
sbb
push
cmp
cli
insb
aam
shlb
xor
or
or
rcrb
cmpsb
js
mov
pop
jp
and
dec
shlb
push
xor
lea
mov
and
in
push
andl
sub
icebp
xchg
hlt
inc
mov
xchg
movsb
int3
mov
out
or
ds
mov
and
gs
jg
sbb
bound
add
push
aad
mov
out
shrb
or
sbb
imul
outsb
xlat
mov
scas
leave
movb
test
cs
imul
ljmp
xor
insb
mov
sbb
and
mov
jl
xor
or
jb
sub
outsb
lret
mov
cld
jg
outsl
fsubrs
dec
repnz
mov
push
daa
bnd
push
ret
hlt
call
repnz
xor
jo
test
and
in
mov
loopne
incb
bound
sbb
dec
push
mov
jno
popa
lahf
mov
mov
outsl
xchg
int3
adc
push
outsl
sub
das
fs
sub
arpl
jge
push
sub
gs
loope
outsl
fwait
adc
inc
enter
out
pop
jmp
push
sbb
inc
fidivrs
xchg
sbb
ja
jmp
sub
jg
pop
or
popf
sub
dec
in
and
mov
adc
pop
lods
pop
jns
add
jge
inc
xor
push
movsl
xchg
imul
mov
mov
sub
insl
xlat
into
add
sbb
dec
fwait
ud0
push
xchg
fdivl
nop
inc
cmc
xchg
sarl
leave
and
cli
xchg
xor
mov
insl
jle
mov
push
pop
sbb
jb
inc
jne
mov
jge
jns
popl
ret
rcr
stos
sub
jp
jo
aas
and
add
cli
imul
cli
repz
dec
pop
and
stc
addr16
outsb
sahf
sbb
xlat
mov
cli
mov
ret
cmpsl
dec
test
mov
xor
sub
xchg
mov
mov
popa
sub
lods
mov
insl
mov
mov
das
cld
cmc
nop
cli
lret
test
sbb
test
inc
sbb
aas
xor
xchg
stc
scas
inc
dec
inc
repz
push
add
and
dec
cmp
mov
mul
cmp
cmc
or
std
lret
lock
inc
jge
pop
notrack
pop
xchg
sub
les
leave
orl
mov
mov
pop
les
std
mulps
cmp
fsubp
add
sbb
mov
stos
pop
push
into
add
shl
jb
and
xor
sahf
dec
lea
or
mov
cmpsl
shll
mov
and
clc
leave
mov
push
push
mov
sub
add
sub
fiaddl
jnp
std
aas
cwtl
xchg
cltd
loop
outsl
and
dec
fs
mov
hlt
addl
pop
mov
iret
data16
jns
and
aad
pop
lods
jp
es
loopne
jne
dec
cwtl
sub
sbb
aad
lods
pushf
and
xlat
lds
sarb
ret
out
mov
xchg
sub
in
pop
push
in
ja
jo
cmp
mov
cli
mov
pop
rorb
xchg
loop
push
outsb
fidivs
ja
js
inc
push
repnz
daa
mov
aam
int
and
and
xchg
inc
addr16
in
aaa
cmp
sbb
inc
inc
pop
loopne
es
and
jnp
pop
int3
mov
lods
cli
leave
in
cmp
jecxz
fs
xchg
mov
aam
std
dec
imul
xchg
repz
neg
movl
in
aad
int
and
loopne
sbb
stos
repnz
popa
pop
sub
push
mov
ret
push
sysexit
push
push
mov
in
adc
leave
ret
jo
push
mov
loopne
test
ja
sub
xchg
inc
push
xchg
xchg
mov
xchg
cmp
fwait
dec
push
sti
sub
in
pusha
sbb
push
les
jnp
mov
add
cwtl
push
inc
or
je
or
adc
adc
clc
mov
adcl
ss
cmc
stos
sbb
lods
and
stos
sbb
dec
pushf
loop
sub
cmpsb
movsb
lret
jmp
lret
or
jmp
or
aad
or
push
enter
dec
mov
jo
inc
mov
pop
addr16
pusha
inc
mov
mov
dec
push
jo
xchg
pop
push
out
adcl
div
mov
xchg
call
enter
push
ds
mov
mov
ret
fdivrs
in
sbb
or
pushl
aad
dec
jo
rcrb
jnp
out
and
lods
fcomps
pop
jno
jne
xor
in
mov
mov
pusha
or
loopne
shr
push
pusha
push
jge
rclb
cmp
pop
lea
ret
loopne,pt
push
fwait
imul
dec
sbb
add
clc
or
adc
pop
mov
out
add
pop
mov
pop
ljmp
shrl
iret
dec
and
test
pop
push
ljmp
sbb
addr16
push
ds
mov
in
subb
hlt
test
int3
add
in
and
inc
xchg
movsl
movsl
hlt
repz
and
into
aad
push
add
push
jp
sbb
movsb
sub
js
arpl
sub
cwtl
and
popf
xor
mov
pop
cmpsl
frstor
fildll
or
repnz
and
and
or
lock
ja
or
or
mov
sbb
bound
hlt
sbb
xor
sub
xor
and
imul
mov
sbb
xchg
and
into
mov
call
sbb
xlat
into
mov
inc
sub
aad
sarb
ror
stc
add
jmp
xlat
lret
repnz
movsb
xor
ret
mov
hlt
pop
mov
push
sahf
mov
mov
xchg
sub
jecxz
shlb
xchg
iret
aaa
enter
imul
add
roll
js
xor
lock
outsb
mov
aad
inc
dec
mov
xchg
push
push
loop
sahf
mov
aas
dec
xor
inc
push
pop
aam
fmull
ficomps
mov
leave
pop
jns
jnp
addr16
in
xchg
lcall
mov
mov
mov
sub
shr
cld
inc
inc
cmc
fucomp
adc
dec
in
lcall
mov
daa
scas
pusha
mov
call
cli
add
pop
push
cs
adc
outsl
fisubrs
mov
mov
jne
mov
clc
or
jne
xchg
add
insb
or
test
mov
jae
in
out
neg
aam
int3
inc
xlat
cltd
outsl
push
push
lock
pop
or
lahf
inc
push
push
insb
push
inc
dec
add
push
mov
fsubrs
jnp
sbb
pop
mov
push
fisttpll
imul
popf
ja
movsb
cmpsl
and
mov
addl
add
subb
push
mov
sti
mov
lahf
pop
inc
cltd
add
mov
jns
mov
in
or
fsub
push
les
movsl
shll
scas
cmp
or
xchg
mov
pop
mov
dec
les
sar
shll
mov
fldcw
cmp
jecxz
lods
fadds
cmpsl
sbb
and
call
dec
sbb
sub
movsb
cmp
rcrl
sub
movsl
cwtl
push
addr16
lea
sarl
dec
cwtl
scas
imul
push
gs
mov
insb
dec
cmp
sbb
imul
data16
push
pushf
dec
jle
push
test
pop
sub
add
out
aad
adc
jge
and
inc
cmc
jmp
sub
dec
push
or
lahf
cmp
xor
daa
jmp
into
inc
movsb
fs
pop
fcompl
push
sbb
out
or
ret
jmp
dec
dec
repnz
out
stos
idiv
lods
mov
mov
sti
cltd
mov
fwait
out
sbb
or
xlat
sbb
in
jbe
jns
clc
push
mov
out
pop
adc
pop
pop
mov
pop
dec
inc
cmc
loope
xor
addr16
jne
inc
and
push
movswl
pop
aaa
cmpsb
jge
dec
cli
add
ret
in
dec
out
aam
xor
frstor
in
xchg
ds
xchg
push
jbe
or
inc
js
push
inc
fnstsw
pop
out
cmpsb
mov
scas
sbb
imulb
and
or
mov
je
in
ret
into
loopne
adc
push
insl
jecxz
xor
dec
in
mov
inc
pop
jbe
pop
aam
lock
push
dec
sub
aaa
cmp
mov
xor
scas
sub
jecxz
and
mov
test
inc
cmp
es
rorb
rclb
scas
xchg
cwtl
add
adc
icebp
ja
pop
dec
xor
xchg
mov
cmp
adc
das
cld
shlb
sbb
or
add
movsl
dec
mov
cwtl
sub
sarb
mov
gs
adc
and
popa
pop
les
xlat
aas
test
rol
out
repz
add
test
xchg
cltd
jmp
ret
xor
mov
pop
loope
push
mov
mov
jle,pn
inc
pusha
sti
xor
lods
bnd
ficoms
test
sbb
mov
inc
sub
pop
cmc
fdivs
push
add
aas
ret
mov
rorl
mov
or
insl
insl
sbb
loopne
lret
rorb
xor
mov
mov
and
bound
loopne
leave
xacquire
sahf
or
imul
ffreep
pop
ljmp
adc
scas
dec
ljmp
stc
pop
adc
andb
mov
stc
jl
mov
fwait
cmpsb
jl
sti
rolb
xchg
add
orb
jl
xchg
mov
popf
orb
dec
addr16
jmp
fnsave
mov
shlb
gs
enter
jno
mov
mov
jae
cmpsb
lret
aaa
push
or
sub
inc
ret
je
xchg
xchg
push
sbb
lods
inc
jecxz
iret
data16
push
ds
adc
xor
pavgb
rorb
arpl
xor
xchg
or
cltd
jg
pop
mov
mov
lret
call
shll
jne
jns
pop
daa
inc
mov
mov
sub
jg
mov
sbbl
ljmp
dec
cmp
test
cwtl
daa
data16
aaa
mov
je
xchg
jle
rolb
push
mov
inc
jae
shrl
pop
test
push
call
mov
mov
mov
test
cmp
fistpll
daa
clc
mov
mov
and
pop
repnz
fwait
jne
pop
or
pop
xchg
jecxz
rcl
sub
loop
ss
js
xchg
lock
dec
insb
sub
sbb
leave
in
adc
xor
out
mul
popf
cmpsl
and
in
push
ret
push
pop
dec
fldl
dec
aad
mov
sub
sahf
and
inc
sub
invd
jo
mov
test
mov
cli
cld
inc
mov
es
dec
jle
and
adc
xchg
cmpsl
leave
pop
fstl
jo
or
push
out
xchg
ss
adc
pop
jecxz
lret
inc
inc
stos
or
jle
mov
pop
push
jp
pop
inc
cli
jg
fnstcw
sarb
mov
int3
dec
adc
mov
cld
mov
fstps
mov
mov
xor
arpl
cmp
push
jl
ja
scas
xchg
cmp
and
mov
and
mov
jns
and
ret
idivb
lcall
movsl
push
fsubl
xor
fldenv
inc
cmpsl
xlat
push
cwtl
jne
jp
out
push
sarl
jns
jne
sbb
mov
mov
jbe
mov
push
lcall
push
sbb
pop
iret
add
inc
add
push
add
cmp
add
add
call
mov
add
add
jl
add
scas
inc
add
mov
add
js
lods
mov
das
jae
pop
into
inc
cli
jp
rep
sti
inc
mov
mov
mov
cld
hlt
add
add
pop
mov
sbb
sub
or
mov
lret
push
pop
adc
pop
stos
cmp
mov
cld
sub
mov
out
movsl
sbb
ja
dec
ss
js
mov
or
inc
shl
push
imul
mov
mov
adc
pop
scas
lahf
ljmp
push
pop
sub
jbe
std
aaa
out
xchg
in
repnz
popf
pusha
inc
adc
adc
mov
xor
outsl
xchg
xchg
icebp
push
xor
enter
inc
stos
ss
pop
into
pop
insb
out
imul
or
out
sub
sub
testl
cmpsb
shl
jmp
and
into
leave
fstl
xchg
out
icebp
and
std
adc
mov
mov
out
imul
aad
cwtl
mov
fcmovne
inc
cmpsb
movsl
mov
add
popf
iret
insl
sbb
pop
pop
inc
jo
push
mov
imul
mov
scas
les
jmp
sub
jmp
std
ds
mov
out
xchg
cmp
daa
dec
jmp
mov
and
dec
jno
data16
push
insl
out
add
in
inc
mov
cmpsb
ret
fld
out
notb
mov
insl
mov
sarl
adc
push
ss
push
imul
cwtl
movsb
into
jbe
out
ljmp
and
jb
into
popa
pop
or
loope
movsl
ljmp
cmp
enter
mov
addr16
cmpsb
fimull
jge
inc
mov
mov
insb
ss
push
imulb
outsb
or
adc
aaa
add
insl
aad
xchg
inc
loopne
mov
lods
outsb
cld
aad
push
and
and
xchg
inc
mov
xchg
popa
push
jbe
xor
fists
mov
and
pop
pop
mov
lds
and
in
sbb
cmp
scas
jg
jb
test
cli
mov
dec
dec
test
pop
std
pop
push
loopne
movsb
sub
es
das
mov
push
shl
jmp
cmp
aas
and
pop
xchg
clc
arpl
fistpl
dec
jg
out
cmp
push
rol
or
sub
and
gs
lahf
or
jp
or
clc
daa
bound
int3
cmp
push
mov
ret
out
fcomi
shll
push
mov
and
push
mov
repnz
or
mov
or
test
stos
out
fdiv
add
iret
je
pop
dec
imul
imul
mov
test
pop
or
inc
pop
inc
lds
push
or
adc
ljmp
dec
add
enter
push
gs
jbe
addr16
fprem
mov
mov
loop
cmp
mov
mov
aas
xchg
pusha
push
fldl
xchg
clc
data16
inc
push
lods
xchg
or
dec
arpl
jb
mov
push
pop
adc
mov
jo
cltd
into
and
mov
cmc
mov
adc
jp
push
stos
sub
mov
sub
cwtl
clc
inc
jne
insb
or
xor
movsl
fsubrl
dec
push
orl
repz
inc
inc
dec
jb
inc
loop
and
lret
testb
or
or
aas
xlat
movmskps
jo
mov
lods
rcrb
mov
cmpsb
jg
lahf
sbb
call
sbb
lea
mov
fistl
mov
test
dec
dec
or
test
adcl
fnstcw
popf
js
icebp
pusha
dec
nop
int
aaa
pop
lock
in
xchg
dec
test
mov
mov
sbb
xchg
jno
jne
mov
push
imull
loopne
mov
sahf
xchg
and
pop
in
push
inc
and
jmp
pop
pop
movsb
shrb
shlb
ret
pop
insl
aas
add
sbb
shl
sbb
inc
mov
mov
outsl
divb
mov
mov
inc
pop
pop
sub
push
lock
mov
jno
mov
mov
push
push
jbe
stos
xchg
jbe,pt
push
repnz
test
sbbb
mov
sbb
xchg
aad
repnz
pop
in
loop
stc
mov
ss
mov
loope
and
je
push
mov
sub
sub
in
loope
scas
mov
dec
ss
or
movb
ret
adc
cmpsl
sbbl
mov
mov
xchg
and
nop
aad
or
add
dec
push
mov
push
and
lods
in
fldenv
sbb
adc
stc
enter
lcall
mov
dec
mov
aam
pop
aam
push
sub
xor
fdivp
cmp
xor
adc
aaa
lahf
jmp
dec
rcll
mov
popf
sbb
shrb
add
imul
jnp
add
aad
jl
jle
jg
shll
fwait
out
push
movsb
inc
bound
mov
xchg
es
daa
add
pusha
push
mov
dec
xchg
ror
sbb
data16
inc
mov
jb
sbb
cld
stos
hlt
and
mov
xchg
je
push
shrl
into
rcr
je
xorb
clc
test
sub
cmp
xor
mov
sub
rcrb
aad
push
rolb
gs
lods
in
in
shrb
fisttpl
mov
iret
out
dec
pushf
mov
jb
push
lret
sbb
sub
push
fbld
push
pop
notb
add
and
inc
cmc
cwtl
aad
xor
xchg
mov
lods
es
ja
add
lcall
and
out
ficoml
jnp
mov
lret
cltd
lret
jp
outsl
mov
les
ret
cs
adc
xchg
outsl
enter
repnz
sbb
xchg
cmp
sub
pop
jmp
mov
jmp
cmpb
js
stos
outsl
int3
cmp
inc
scas
gs
dec
push
sahf
nop
mov
or
adc
xchg
xor
jmp
inc
mov
xchg
mov
or
dec
aaa
push
fdivrl
cmp
scas
xchg
jecxz
xchg
cwtl
pusha
sbb
lods
mov
xchg
or
iret
lea
cld
adc
adc
mov
and
loop
pop
add
test
jle
test
cli
mov
flds
adc
cmp
fsts
pushf
into
mov
pop
xor
icebp
fwait
xchg
cmp
adc
mov
cli
daa
shr
flds
xchg
cmp
ss
leave
enter
jnp
adc
call
xlat
inc
dec
outsl
jg
rolb
incl
dec
int
or
out
pushf
jmp
and
ret
xchg
cmp
cmp
push
mov
add
adc
jmp
xchg
add
insb
add
mov
mov
and
xchg
fadd
repz
rorb
pop
stos
and
mov
sbb
xchg
push
xlat
push
mov
ret
shrl
aam
aam
icebp
mov
xchg
or
orl
pop
dec
aam
test
loope
pushf
mov
cmp
ss
test
mov
or
jne
sar
into
outsb
push
test
lret
stos
add
mov
mov
push
daa
mov
pop
mov
out
push
ss
and
xlat
xor
aas
push
lahf
fbld
xchg
test
jne
adc
cmpsl
xchg
cli
iret
das
fwait
add
adc
xchg
pop
xor
std
cmp
les
pop
fwait
sbb
push
cmp
mov
imul
pop
or
nop
sbb
jnp
xchg
fwait
jb
inc
sub
mov
mov
xchg
ret
pop
push
xchg
and
sbb
fmuls
or
andb
bound
movsb
scas
adc
adc
aad
ror
sbb
jae
lcall
push
sbb
xor
loopne
jbe
xchg
pop
imul
mov
shrb
test
popf
cs
and
sarb
lret
ljmp
add
dec
ret
xchg
mov
outsb
ret
movsl
ja
mov
rclb
popf
add
fistps
mov
xchg
inc
negb
lret
es
ljmp
adc
outsl
push
aad
pusha
stos
loope
insb
fisubrs
lret
in
fs
stos
stos
push
stc
imul
movsb
xchg
mov
test
inc
jno
pop
add
fcomps
push
push
add
mov
mov
xchg
mov
cmpsl
movsb
pop
mov
sbb
jae
mov
cmp
mov
sti
push
xchg
cmc
icebp
xchg
imul
andl
sub
fldcw
repz
mov
jmp
xchg
push
outsb
add
push
add
fs
test
jl
fs
mov
dec
mov
ss
out
out
dec
cmp
iret
push
push
mov
lcall
mov
xchg
testl
jl
test
loopne
inc
xor
dec
pop
pop
leave
pop
mov
inc
jno
lock
cmpsb
jge
and
jmp
pop
jae
push
cmc
dec
mov
cmpsb
cmpsb
sbb
mov
push
stos
cmp
addl
fisubl
and
clc
adc
mov
ljmp
insb
lock
xchg
xchg
outsl
add
sbb
mov
push
sub
jecxz
pop
cmp
sar
pop
outsb
jae
xor
or
jge
mov
aaa
mov
sbb
sbb
outsb
inc
pop
mov
or
hlt
cld
jae
fsubl
mov
mov
cmc
push
pop
pop
lods
call
mov
inc
dec
lods
jge
pop
inc
aad
mov
test
add
das
jp
xchg
flds
inc
mov
sbb
adc
std
lahf
or
ljmp
ljmp
mov
movsb
push
icebp
das
mov
push
xchg
or
push
add
icebp
shl
inc
xor
lods
mov
xlat
xchg
sbb
fcompl
pop
lret
scas
mov
or
xor
xor
sbb
adc
mov
dec
lock
jmp
movsb
sbb
push
std
dec
pop
adcb
sbb
lods
ljmp
std
xchg
test
fs
jmp
mov
xchg
jbe
cmp
xchg
dec
mov
sub
stos
pop
in
sub
aam
and
js
jbe
jns
jbe
jo
mov
push
or
sub
push
mov
dec
xor
push
in
fs
pop
test
test
jp
jg
dec
mov
or
int
in
aaa
stos
cmp
enter
sbb
push
andb
and
cmp
inc
outsl
push
sub
pop
addr16
fincstp
inc
adc
add
pop
mov
pop
scas
add
ds
mov
mov
pop
jle
sub
js
in
sbb
inc
or
xchg
icebp
jg
adc
mov
es
movsb
pop
cld
outsl
into
sub
add
nop
flds
stos
mov
inc
dec
insb
jo
inc
decl
cmp
sbb
movsl
sbb
adc
iret
loop
cli
imul
mov
lret
sub
pop
pushf
outsl
cmc
insb
xor
rcr
sti
jb
sub
push
rcr
jo
add
mov
movsb
pushf
sbb
ds
dec
test
cld
lods
je
shlb
sub
je
stos
outsl
mov
xchg
scas
scas
inc
xor
ss
mov
xchg
fistpll
negb
insb
ret
xchg
lcall
and
clc
jno
pop
jae
inc
lods
xor
in
and
fwait
mov
stos
mov
pushf
or
gs
data16
sti
cmc
xor
rcl
xor
ret
or
out
in
inc
adcl
xchg
cmp
frstor
mov
int
les
sbb
inc
inc
ss
dec
out
repz
lret
fistpll
test
mov
adc
mov
pop
lock
hlt
pop
xchg
cltd
push
mov
test
sub
mov
fnsave
decl
xlat
movsb
rolb
jmp
inc
inc
shlb
scas
rcl
mov
rorl
les
sub
add
stos
outsl
xchg
sbb
dec
xchg
lcall
lods
mov
in
jmp
mov
dec
jne
jno
or
xorl
mov
pop
lret
xor
int
inc
decb
push
jo
sub
adcl
jo
xchg
xchg
push
mov
dec
ss
push
jle
mov
mov
inc
xlat
or
pop
push
sub
stc
pop
test
pop
adc
rorb
xor
shlb
mull
mov
mov
mov
or
fstpl
test
popl
hlt
rcr
and
cwtl
cmpsb
push
ljmp
outsl
cmpsl
push
xor
xchg
dec
dec
mov
cmp
jnp
push
adc
scas
mov
jno
mov
cmpsl
mov
push
enterw
lea
add
inc
aad
cmp
xchg
lahf
testb
scas
pop
mov
jae
insl
pop
imul
mov
or
mov
cld
outsl
outsl
rolb
stos
dec
push
testl
rsm
sub
fcoms
sub
xor
jo
mov
sbb
aad
sub
pop
xor
bound
jns
dec
mov
jae
add
cmp
pop
stc
sub
dec
push
xchg
jae
js
in
inc
scas
dec
repz
mov
popa
icebp
aaa
push
pop
pusha
addr16
push
jg
sub
inc
dec
movsb
push
loop
pop
insb
push
xchg
xor
jge
lret
insb
ljmp
shlb
and
aam
mov
cmp
adc
sub
mov
int3
clc
and
lahf
rorb
mov
jae
xchg
lock
fwait
enter
dec
bound
stc
addr16
enter
jmp
inc
jge
mov
adc
mov
dec
fisubl
icebp
and
test
xor
dec
pop
xchg
sbb
fs
xchg
sub
xchg
nop
add
outsl
clc
sbb
add
cs
jmp
dec
in
test
mov
jnp
inc
pop
jmp
adc
loop
nop
xor
addr16
ret
shrl
pop
push
mov
int
dec
push
daa
scas
fldcw
mov
loopne
das
push
pop
ljmp
outsb
lcall
ljmp
pop
shll
cmp
dec
fcompl
lods
ds
push
xchg
sub
and
push
lods
rcrb
inc
loopne
out
push
jg
scas
arpl
mov
sbb
fldenv
jns
and
les
das
push
dec
cmpsb
jl
mov
frstor
dec
or
enter
xorb
cmp
fcomp
sub
push
lret
enter
inc
xor
arpl
push
rorb
cmp
lock
mov
push
repz
shrl
and
jge
test
stos
jne
in
jmp
out
cli
pop
lods
iret
sub
mov
xchg
addr16
jp
ljmp
mov
adc
bound
aam
or
loop
arpl
ds
jns
ljmp
hlt
jnp
inc
push
mov
and
and
dec
dec
mov
xchg
jg
loope
call
test
mov
hlt
pusha
mov
xor
divl
cmp
pop
aam
ljmp
loop
sbb
fadd
hlt
xor
sub
movsb
push
js
jnp
xchg
ret
addb
inc
js
xchg
dec
in
shl
sub
adc
daa
adc
mov
and
in
push
jno
xlat
xchg
mov
add
movsb
xchg
or
push
and
int3
fistpll
mov
in
adc
rolb
ss
and
pop
adc
stc
out
fcom
jnp
mov
int
pop
pushf
mov
sbb
push
push
push
pushf
in
or
mov
mov
ljmp
mov
sbb
or
fsts
sahf
sbb
jo
xchg
daa
mul
jmp
jmp
sti
mov
add
enter
dec
cmp
aaa
fnstenv
pextrw
lret
call
arpl
mov
mov
mov
cmpsb
dec
dec
inc
enter
mov
lods
jns
dec
dec
vpcmpeqb
push
inc
addr16
movsl
dec
jle
mov
imul
cmp
xchg
mov
jecxz
sti
rorb
ja
mov
sbb
stos
jbe
sbb
repz
aad
mov
and
daa
jne
fadd
sbb
or
mov
movsb
movl
dec
push
cwtl
repz
in
and
lods
out
inc
add
pop
test
sar
iret
jecxz
or
mov
jno
pop
add
nop
imull
mov
mov
mov
rorb
adc
fnsave
fsubs
lret
loop
loope
jno
in
or
sub
pop
pop
adc
imul
cli
cs
or
pop
lret
leave
jb
or
decl
fimuls
aas
gs
sub
outsb
sbb
es
dec
xor
mov
lret
cmp
add
rcr
shrd
mov
jmp
nop
adcb
push
mov
adc
pop
cmp
enter
pop
cwtl
pop
js
lds
in
lock
aad
pop
cltd
scas
and
adc
pop
xor
dec
loopne
test
cmpsb
clc
push
or
arpl
pop
lahf
xchg
dec
outsb
insb
aam
dec
int3
mov
mov
cmc
in
repnz
fnstcw
loopne
fldenv
test
xchg
sbb
repnz
ret
aas
sub
or
pop
cs
mov
xor
ljmp
cmp
pop
divl
push
sub
cltd
fimuls
lret
push
arpl
mov
lahf
repnz
xor
jge
loop
and
inc
jl
jns
fwait
add
mov
mov
rcll
pop
mov
pusha
cmp
pop
mov
mov
bound
daa
jo
mov
jle
cmp
dec
xor
lods
push
xchg
xchg
cltd
fstl
and
je
cmp
pop
arpl
jle
testl
fxrstor
dec
lods
xor
mov
or
sahf
popa
shl
aam
mov
pop
xor
jbe
shl
adcb
clc
mov
add
insl
pop
lock
addr16
push
and
loopne
cwtl
out
jmp
mov
and
sbb
ss
je
xor
xor
push
cs
sub
push
or
pop
es
in
stos
leave
adc
pop
fdivl
lcall
out
in
movsl
sub
insb
ret
mov
cmpsl
pusha
js
outsl
hlt
dec
jb
bound
jno
enter
adc
dec
xchg
stos
mov
adc
clc
jnp
jno
sub
xchg
mov
cs
pop
xor
cmp
push
test
popa
cltd
mov
aas
push
ret
fwait
sbb
sub
push
outsl
shr
lret
mov
icebp
jbe
rcrl
push
xchg
movsl
mov
push
mov
cmp
lods
dec
inc
dec
or
push
mov
cmp
loop
stos
mov
rorb
fmuls
inc
testl
xor
pop
inc
lods
jne
mov
sub
lret
inc
jecxz
and
jg
iret
sub
rcl
out
mov
add
mov
xchg
iret
lds
cmp
pop
cmp
fisubrl
sbb
add
arpl
xor
adc
jmp
adc
cmp
cld
lcall
and
sarl
out
and
mov
ja
xchg
mov
mov
mov
loope
repz
jae
cmp
movsl
scas
stc
scas
push
pop
hlt
mov
clc
push
scas
sbb
ret
push
inc
enter
cmp
dec
xorl
push
xchg
stos
xchg
test
gs
mov
test
add
push
dec
out
fmull
sbb
clc
adc
xor
pop
pop
push
push
or
das
arpl
push
adc
inc
push
mov
call
xor
rcll
lods
cmp
mov
int
mov
ss
in
xor
cmp
mov
fnsave
xchg
addr16
xor
cmp
adc
mov
mov
push
or
in
sahf
outsl
pop
jo
gs
incl
add
lods
mov
cmpl
adc
int3
iret
and
dec
rcl
movsb
aaa
cmp
es
push
push
pop
mov
adc
jmp
inc
dec
pop
test
push
xor
pop
jne
arpl
addl
mov
xchg
insl
popa
xchg
or
shl
es
in
out
mov
leave
inc
mov
dec
add
add
ljmp
mov
pushf
aas
cltd
outsl
jmp
dec
cwtl
data16
cli
mov
mov
icebp
sbb
inc
daa
jp
sub
push
dec
lods
sub
inc
dec
das
loope
mov
in
inc
insb
mov
icebp
mov
addb
mov
fldcw
rorl
pop
xor
bound
sbb
xchg
std
and
incb
test
and
sub
into
add
test
aas
stos
mov
lods
xchg
jae
jae
sub
sub
pusha
jne
outsb
push
in
insl
xchg
jl
sbb
icebp
test
fucomp
idivl
cwtl
inc
pop
fmull
gs
test
sarb
mov
cmp
lret
cli
out
pop
or
icebp
sub
dec
sbb
push
mov
jl
dec
imul
hlt
test
mov
loope
mov
lahf
or
sbb
mov
stc
add
mov
sub
adc
fdivr
mov
loopne
lret
aas
or
repnz
outsl
or
add
mov
enter
mov
adc
jo
or
imul
push
add
jl
mov
int3
in
lods
mov
mov
and
call
adc
enter
rcll
xchg
cmp
jmp
adcb
test
or
in
imul
inc
notb
mov
cmc
fdivrl
pushf
js
and
sub
or
xor
cmp
pop
cmp
out
push
adc
in
push
xchg
in
cmp
jecxz
mov
push
xchg
lcall
adc
xchg
jne
adc
mov
loopne
lods
aaa
loope
xor
push
xchg
fdivrl
cmpsl
mov
sar
mov
inc
cli
cwtl
aad
push
jg
rorb
js
add
add
andb
sbb
pop
jle
or
loopne
xor
test
pop
cmp
mov
int3
jbe
outsl
xchg
cltd
rcrb
aam
dec
in
lods
xor
lea
repnz
xor
xchg
or
jns
and
xchg
mov
jmp
leave
xchg
mov
mov
lods
movsb
loop
cltd
mov
pop
test
das
hlt
xor
cmc
clc
out
push
mov
dec
lods
xor
stos
jnp
xchg
mov
push
push
sbb
aad
xchg
or
scas
adc
lds
ljmp
out
mov
pusha
stos
les
cmpsl
in
lock
xchg
pop
or
addr16
pop
cwtl
pop
sti
push
xchg
gs
cmp
pop
arpl
lods
fstps
mov
fbstp
adc
push
mov
out
xchg
fcoms
pusha
cmc
mov
mov
push
add
jmp
pop
xlat
sti
pop
lds
mov
aas
mov
cmp
dec
jb
repnz
out
in
jl
cmpsb
cmp
addl
lods
lds
insl
subb
mov
ja
je
jecxz
pop
pop
pusha
out
push
arpl
xchg
mov
fisubrs
sub
popl
fimull
pop
inc
xor
aad
pushf
bound
mov
pusha
dec
in
das
and
jns
jno
sub
xor
out
jae
push
inc
xor
xchg
fcompl
in
add
insb
orb
or
aas
aaa
test
lcall
lsl
ret
sbb
leave
pop
lret
repz
dec
mov
daa
mov
enter
iret
ffreep
xor
jmp
mov
ja
cltd
loop
adc
call
lds
inc
cltd
pop
insl
les
xlat
pusha
mov
ds
xor
not
cmp
jle
addr16
data16
cld
xor
in
test
test
sbb
fldcw
hlt
imul
insl
cli
pop
sub
inc
addb
xor
mov
ds
js
xchg
inc
mov
popa
gs
bnd
pusha
jns
pop
mov
sub
mov
xchg
push
mov
in
leave
dec
sub
jge
sub
push
push
push
push
insl
adc
xor
xlat
sbb
cli
lahf
cld
les
lods
push
xlat
push
mov
loop
xchg
cld
sbb
sbb
inc
sarb
mov
jb
inc
addr16
jno
addl
test
xor
outsl
sbb
rcr
out
or
push
push
jnp
bound
dec
aaa
out
scas
xor
sub
call
cli
adc
mov
lret
xor
rorb
ret
sub
fwait
dec
push
gs
shlb
jle
or
popf
insb
mov
xor
jbe
scas
je
out
in
lret
stos
aad
add
add
mov
pusha
jl
test
mov
mov
sti
dec
cltd
mov
repz
fisttpll
test
pop
mov
popa
outsl
mov
xor
cmp
mov
xor
xchg
sub
mov
adc
adc
insb
mov
pop
xchg
test
jle
hlt
xchg
jmp
les
rorl
inc
ss
js
fcmovnu
jns
cwtl
xor
push
lret
movsb
jp
xor
aas
pop
lock
dec
and
leave
insb
mov
push
ret
jo
outsb
cmp
inc
xadd
cmp
jno
rcrb
mov
adc
dec
lea
outsl
jbe
xor
or
mov
or
dec
repnz
inc
cmpsb
xor
cs
fimuls
jnp
testl
cmp
aas
cmp
into
out
sub
jno
idivb
add
fs
ljmp
adc
jns
ror
sarb
dec
in
jp
cwtl
mov
sbb
lahf
mov
pop
jg
into
jle
lret
adc
or
insb
das
push
call
jle
cmp
pusha
xchg
pop
cmp
lods
sbb
mov
sub
mov
dec
arpl
scas
aam
rcrb
push
adc
cmc
loope
scas
fidivs
fcompl
mov
sbb
into
jne
pusha
movb
popf
sbb
mov
in
mov
xlat
jne
sub
imul
cmp
or
adc
std
dec
jb
sbb
jge
sti
cwtl
pop
sbb
mov
iret
push
inc
arpl
adc
test
call
ret
xor
in
push
pop
mov
sub
imul
sub
cltd
icebp
adc
and
jmp
test
jl
lea
and
outsb
lret
sbb
dec
cli
mov
push
xchg
bnd
pop
cmp
outsb
jmp
add
push
lcall
mov
cmpsb
inc
pop
xchg
cmp
pop
cmpsb
push
loopne
mov
movsb
into
push
out
popf
cltd
and
pop
mov
repz
lods
pop
fstps
dec
iret
loopne
cld
adcl
popl
insl
jmp
cmp
addr16
and
push
mov
sub
repz
inc
int3
xor
or
cmpb
or
scas
pop
hlt
mov
cmpsb
ficoml
sub
xchg
das
aad
push
pop
dec
push
pop
fstps
leave
pop
cltd
sub
aaa
orl
adc
xorl
pop
in
lock
push
sub
mov
aas
fiadds
ret
jmp
in
cmp
js
push
jp
pop
dec
sub
add
push
dec
aam
push
jecxz
stc
pop
das
pop
dec
dec
pop
and
cli
xchg
paddb
gs
mov
add
push
or
stos
cli
sbb
jmp
xchg
aas
pop
mov
imul
dec
out
fmuls
aad
movsl
jbe
pop
les
daa
mov
adc
jb
fistpl
lock
mov
mov
int3
leave
scas
fcomp
jnp
push
add
pop
jo
jecxz
or
lret
fisubl
or
hlt
mov
mov
xchg
cmp
push
adc
in
push
sti
pop
xor
adc
pusha
scas
cli
inc
add
pop
daa
cmp
ds
mov
pop
cltd
ljmp
dec
mov
adc
stc
nop
inc
pop
xchg
lret
dec
inc
pop
xor
or
divl
mov
aaa
and
sbb
div
cmp
ljmp
shlb
push
sbb
xchg
jns
pop
jl
jb
adc
mov
sub
mov
pop
pop
sbb
es
shlb
out
pop
enter
mov
dec
xchg
cmp
lret
dec
push
xchg
xchg
call
aaa
or
mov
rorb
aas
xor
cli
ret
jl
dec
mov
int3
imul
mov
inc
push
rcll
xlat
xor
xchg
ficoml
mov
pop
pop
push
and
cmp
push
es
mov
adc
mov
mov
or
xor
sbb
sub
jg
xchg
jno
dec
inc
shll
dec
rolb
insb
aad
jne
fs
enter
gs
push
lea
push
ss
xchg
in
bound
inc
jo
cmpsl
push
loop
or
aad
pop
push
jb
out
out
clc
sbb
nop
xchg
mov
push
out
imul
push
mov
ja
adc
scas
or
pushf
orl
lods
mov
movsl
pusha
cmp
insb
xchg
adc
adc
adc
lods
add
sub
repz
fcoms
pusha
push
frstor
jae
adc
jne
jl
and
mov
inc
mov
ret
add
imul
stc
iret
je
jmp
jns
ds
cmp
pop
mov
lahf
inc
pop
cmp
and
mov
loopne
xor
outsl
xchg
incb
les
sub
push
inc
loopne
adc
les
lcall
and
je
xor
leave
out
push
cmovl
jbe
rorl
dec
fiaddl
sarl
ret
dec
and
data16
jmp
xor
cmp
mov
and
xchg
inc
lahf
popa
cmpsb
inc
lahf
jg
xor
inc
mov
fstl
ffreep
ret
vpcmpgtb
sub
or
xchg
xor
insl
rcll
jb
mov
stc
push
pop
dec
cmp
or
sbb
pop
and
or
frstor
sbb
iret
aad
push
mov
adc
aad
jns
xor
and
push
ja
cltd
jecxz
cmpb
inc
and
mov
out
push
jbe
dec
pop
lods
push
loope
popf
push
outsb
dec
imull
std
mov
jecxz
sub
jae
fwait
and
loopne
fidivrs
sbb
sbb
stos
adc
test
jbe
sbb
lret
nop
push
jns
xor
xor
adc
xchg
mov
jge
shrl
and
sub
insl
ds
mov
lock
push
add
lahf
or
push
push
jb
fdivl
in
dec
inc
pop
scas
xchg
daa
int3
or
roll
sbb
ret
cwtl
loope
stos
nop
jecxz
mov
xor
adc
pop
sbb
push
rorb
test
pushf
sarb
shrl
enter
mov
push
and
rclb
sti
push
cmpsl
inc
dec
cld
and
pop
packuswb
cld
mov
into
cmp
mov
push
popf
into
jne
mov
fimuls
clc
jbe
xorl
cmp
mov
cmpb
scas
test
mov
inc
pop
insl
add
dec
or
repz
push
lret
xchg
lods
pop
fwait
or
btrl
adc
test
lock
adc
sbb
cmpsl
mov
inc
mov
out
test
and
repz
add
scas
mov
sub
mov
stc
inc
sbb
push
push
push
xor
mov
xor
inc
testb
insl
daa
mov
sbb
jns
push
testb
inc
pop
or
movsl
adc
or
or
sub
inc
inc
test
rcll
loop
sub
mov
push
aam
pop
loop
mov
adc
lcall
shrb
out
nop
loope
xor
adc
adc
lcall
int
and
das
insl
out
sbb
inc
adc
push
out
inc
add
or
inc
in
mov
nop
ret
or
jecxz
cmp
fdecstp
push
pop
test
lcall
adc
push
js
loopne
scas
jmp
mov
pusha
mov
cmp
test
out
call
pop
in
arpl
stc
shl
mov
jge
lds
jmp
mov
pop
push
js
pop
inc
pop
std
xchg
pop
repnz
mov
fwait
loopne
adc
inc
sbb
cwtl
inc
mov
insl
pop
aaa
shrl
add
pop
js
pusha
aaa
sarb
lea
jo
aam
sbb
cli
mov
pop
stc
pop
fs
sbb
xor
mov
sbb
loope
out
das
and
mov
mov
and
inc
adcl
inc
lods
jbe
sti
in
push
jne
and
cltd
imulb
imul
lret
xchg
sub
test
insl
sub
mov
outsl
movsb
out
xchg
fwait
sub
sti
xchg
int
xor
movsb
hlt
push
and
jecxz
out
jmp
popa
or
andl
sub
lret
xlat
decb
cmp
imul
jno
popa
aad
sbb
inc
jns
shl
pop
dec
mov
cmp
push
push
stos
push
das
nop
out
dec
and
push
es
leave
and
pop
jnp
mov
sarl
int
mov
pop
idivl
lret
pop
bound
cmp
push
sbb
lahf
insb
or
mov
xchg
mov
adc
mov
fisubrs
add
jge
popa
arpl
fcmovne
jecxz
ja
pop
add
lahf
jge
lds
lea
dec
mov
lcall
movq
je
repz
xor
push
or
dec
dec
push
pop
sbb
inc
or
inc
lret
fisubl
mov
or
addr16
xchg
inc
pushf
sbb
mov
cltd
jl
repnz
mov
mov
push
mov
pusha
shlb
shrl
inc
push
add
cmp
add
and
push
lcall
xchg
mov
xchg
sti
xchg
cmp
pop
mov
movnti
xlat
push
mov
xchg
mov
and
cmp
fmul
mov
js
jecxz
add
and
sar
flds
lods
dec
repnz
pop
push
sar
ret
sbb
sarl
cmp
ds
jns
fwait
xor
stc
push
inc
hlt
dec
in
sub
and
sbb
add
and
loop
leave
loop
popf
dec
and
fs
mov
add
jbe
xor
cmp
sbb
xchg
loope
add
cmp
dec
lods
insl
pushf
leave
inc
dec
pushf
popf
xor
mov
sarb
add
lret
in
pushf
aaa
cmp
repz
inc
mov
fadds
cmc
or
pop
mov
lods
sahf
pop
mov
jecxz
sbb
and
sub
aas
and
cmp
stc
xchg
sub
push
jp
push
cld
insb
lods
mov
mov
xchg
jno
es
ljmp
fisttpl
push
outsb
mov
cmpsl
idiv
sub
addb
pop
nop
inc
xor
cld
mov
xor
sbb
push
inc
adc
loopne
mov
cmpsb
adc
mov
push
inc
push
push
adc
mov
mov
imul
scas
xchg
mov
arpl
in
in
in
sub
ds
lahf
inc
cmp
pop
mov
data16
fcmovbe
jge
inc
lods
push
andb
add
jmp
adcl
test
adc
inc
jmp
xlat
icebp
add
mov
jbe
xchg
imul
ljmp
mov
movsl
out
aad
xor
testl
add
mov
js
xchg
adc
mov
mov
xchg
imul
mov
popa
mov
push
jnp
xor
test
dec
or
jmp
cmpsb
neg
andl
loope
lds
fmull
lret
rcll
mov
rclb
ret
mov
repnz
test
fsubl
imul
sub
cmp
addl
sub
loope
sub
cwtl
adc
inc
lea
mov
ret
addr16
push
mov
lock
outsl
out
lcall
cmp
loop
jno
push
test
ret
pop
out
in
mov
out
jle
xor
mov
fistl
adc
data16
or
stos
mov
stc
xchg
addr16
lds
lock
adc
dec
shrb
pop
mov
je
add
test
or
sbb
and
nop
inc
adc
and
or
test
pushf
testl
stos
outsl
into
movsb
clc
pop
add
sbb
ss
ss
jge
movsl
or
sbb
int
int3
in
aad
ficompl
shlb
sub
pop
xchg
addr16
sbb
mov
push
lock
stos
adc
mov
xchg
jb
testb
out
dec
xorl
in
imul
das
add
jge
jl
mov
mov
dec
xlat
mov
aaa
scas
imul
call
cwtl
in
pop
arpl
pop
xor
insl
out
or
and
lock
jb
in
xor
adc
mov
sbb
mov
inc
std
jecxz
sahf
lcall
loope
and
mov
lods
inc
push
ja
insb
les
or
in
or
and
imul
aam
cmp
mov
add
ds
jo
pop
jae
js
fsubl
mov
pop
lcall
or
in
or
movsb
inc
xor
mov
jno
aas
loopne
push
std
fdiv
shlb
pop
xor
or
repnz
sahf
cmpl
dec
ret
cmp
xlat
test
push
cmp
ror
mov
testl
push
sbb
mov
push
push
daa
jge
loopne
sub
loopne
jl
addl
in
scas
xor
movsl
stc
push
fwait
mov
mov
int
les
adc
pop
dec
stos
mov
or
shlb
mov
add
ror
gs
sbb
push
inc
loopne
outsl
out
or
dec
stc
shlb
pusha
inc
pop
cltd
adc
fisttpl
add
push
aas
or
cmpsb
loope
mov
test
ds
xchg
dec
popf
js
sub
data16
pop
mov
sbb
adc
je
push
push
xchg
xor
sahf
sbb
pop
insl
orl
inc
dec
mov
and
into
lcall
pop
pop
repnz
pop
jb
xor
cmc
mov
lods
cmp
jns
push
in
ja
xor
stc
mov
xchg
fadd
inc
movsb
or
mov
mov
std
lahf
push
cld
les
je
fiadds
pop
or
clc
addb
sbb
dec
cld
outsl
dec
xor
and
add
xor
cmp
out
adc
adc
addr16
popa
push
roll
outsl
cmp
inc
das
lea
incb
rcll
int
xchg
pop
sub
xlat
pop
push
cmp
mov
imul
mov
mov
cmp
mov
insb
sub
fisttpll
sti
movl
ficoml
jb
out
sub
jmp
cmc
pop
imul
jb
inc
or
mov
getsec
mov
dec
mov
jne
push
dec
lret
mov
mov
aas
fcoml
enter
xor
fs
aad
rcr
mov
cwtl
ljmp
push
cmpsl
ficompl
imul
sub
aaa
mov
scas
xchg
xlat
sbb
push
mov
loope
subl
cs
jne
add
xchg
es
dec
nop
sbb
jns
pop
bnd
jge
xchg
jmp
and
call
xor
pop
lds
sbb
out
pop
or
mov
dec
js
aaa
rorb
and
stos
shlb
push
shlb
fsubrl
mov
adc
pop
dec
cld
xor
pop
inc
mov
or
add
xchg
stc
sbb
out
fs
sbb
ret
insl
cmpsb
gs
jle
push
mov
lret
pop
mov
into
lcall
mov
ljmp
pusha
jge
mov
je
push
cli
dec
push
pop
adc
push
xor
mov
inc
fwait
xor
inc
pop
cmp
jle,pt
or
cli
sbb
stos
pop
outsl
pop
notl
ss
pushf
inc
in
pop
scas
jnp
lods
add
push
loopne
test
into
rcrl
sbb
fcompl
mov
ret
out
ds
fs
lahf
jge
sbb
movl
adcl
inc
ret
sbb
rorb
cmp
sub
sub
je
sub
mov
cmp
cmpsl
inc
mov
push
mov
sarl
mov
int
testl
sub
loopne
jl
pop
pop
cld
push
nop
mov
out
sub
fwait
mov
or
jo
hlt
outsl
sti
imul
adc
or
pop
dec
divl
xchg
int
adc
iret
aaa
cmc
mov
movsb
xor
mov
out
add
mov
xor
loope
mov
paddsb
test
pop
push
gs
push
js
sarl
test
cmp
loopne
bound
or
xchg
shll
mov
outsl
dec
shr
add
push
aad
dec
lods
into
xchg
xor
inc
dec
cs
mov
out
je
fidivs
sub
push
insl
and
out
in
xchg
pop
clc
ret
mov
mov
repnz
xor
add
adc
cltd
popa
jle
aas
push
fidivrs
push
fistl
leave
mov
jle
popa
jmp
sqrtps
imul
repz
outsb
adc
fstl
std
and
cmpsl
mov
in
mov
push
loop
jnp
xor
jl
mov
enter
sbb
fiaddl
popf
icebp
add
sbb
in
inc
jmp
mov
into
lret
xchg
pop
push
pop
and
mov
call
cmp
pop
mov
mov
cmpsl
cmpsb
push
mov
out
jne
sub
fbld
je
dec
imul
popf
xchg
rcr
mov
outsl
popa
or
fs
adc
in
ret
test
lock
repnz
mov
dec
xchg
out
and
push
hlt
insb
jae
bound
mov
stc
mov
xor
pop
lcall
sub
shl
mov
icebp
ficompl
testb
push
pop
outsb
insb
scas
and
call
scas
xor
lock
sbb
in
dec
std
mov
jno
inc
sti
mov
movsl
xchg
icebp
adc
sub
rclb
or
enter
pusha
fisubrs
inc
into
iret
lods
ret
adc
mov
mov
inc
lahf
int
test
push
xor
adc
js
push
xchg
mov
sbb
inc
and
jno
cmp
mov
jo
push
je
cmp
imul
mov
pop
imul
push
je
pop
xchg
and
jae
lods
mov
and
or
jbe
test
sbb
jecxz
fcmove
aas
mov
sbb
push
arpl
cltd
mov
dec
push
pop
hlt
out
mov
loop
xchg
nop
ljmp
cs
stos
scas
or
ja
mov
pusha
aad
sub
cmpsb
in
jo
and
pop
push
insl
mov
mov
imul
mov
cmp
mov
mov
cltd
sub
push
mull
ds
negb
enter
lret
pop
xchg
and
dec
push
cmp
cmp
andb
arpl
jns
xor
adc
mov
daa
xchg
xor
mov
shll
out
pop
sub
mov
xor
push
xchg
or
scas
enter
inc
int3
push
mov
and
pop
and
mov
icebp
mov
out
stos
sub
jmp
cmp
dec
xor
xchg
aam
lret
xor
mov
bswap
ss
jne
pop
fs
pop
add
insb
jo
sbb
sbb
mov
pushf
cwtl
jo
jle
dec
aas
mov
jecxz
mov
pusha
stos
xor
fistpll
adc
jecxz
imul
and
insw
mov
fnstcw
push
fs
xchg
dec
sub
inc
sbb
sub
fldenv
mull
icebp
stc
add
cmovo
pop
cmp
imul
idivl
or
jmp
xlat
into
icebp
cmp
in
dec
add
pushf
inc
sub
mov
adc
jb
fstl
cli
loopne
inc
add
arpl
mov
sub
test
ret
add
or
mov
add
inc
fsubrl
mov
jmp
mov
pop
sbb
cmpsl
dec
in
xlat
or
orl
mov
or
popa
jno
xchg
scas
lret
pop
ljmp
push
xor
das
leave
adc
push
repnz
sub
jnp
test
hlt
in
add
mov
loop
int
inc
mov
add
clc
pusha
movsb
lret
xor
test
sub
dec
lret
push
cmp
jnp
dec
and
pop
mov
dec
mov
imul
ficoms
mov
and
inc
insl
add
or
sub
inc
cmp
lcall
lret
mov
sbb
pop
mov
inc
pushf
out
test
xor
pop
dec
std
cli
adc
out
or
ja
xchg
inc
frstor
adc
sti
fcmovne
scas
push
mov
lea
dec
in
fstps
sbb
repz
cld
fdivrl
sahf
pop
inc
or
mov
xchg
stos
or
mov
pop
test
lret
inc
stos
jnp
mov
ja
lods
inc
gs
mov
pusha
inc
int
mov
cmpsl
mov
fsubp
stc
or
add
jmp
lds
jecxz
imul
pushf
jg
outsl
mov
mov
das
mov
add
sub
je
xor
mov
sub
imul
std
test
pop
mov
test
jno
jb
push
pop
mov
jl
test
call
jmp
in
cmp
cld
sbbb
and
mov
xor
inc
mov
out
jno
sub
mov
push
dec
or
js
sbb
adc
aaa
popa
rcrl
and
in
stos
je
jne
movsl
insl
arpl
scas
push
std
cmp
mov
lret
stos
out
add
pop
xchg
mov
sahf
cmp
popf
sub
stos
and
outsb
icebp
sub
pop
andl
sub
add
lock
data16
pop
dec
adc
int3
testl
sub
out
xchg
arpl
mov
aaa
lock
or
pusha
stc
and
xor
sbbb
mov
ret
or
jns
dec
xor
push
mov
mov
inc
scas
inc
cmp
mov
mov
xchg
bound
enter
adc
jb
jg
mov
sahf
aam
jno
inc
and
fiaddl
cs
pop
or
arpl
pushf
mov
inc
dec
or
dec
mov
pop
inc
pop
mov
and
addr16
pop
push
xor
lds
cmp
fdivrs
add
iret
push
inc
mov
fnsave
inc
pop
push
into
mov
dec
sbb
fidivs
xlat
sbb
mov
movsb
mov
data16
mov
fldl
sar
scas
sub
jl
out
inc
repz
sbb
push
sti
imul
pop
mov
lds
sbbl
es
outsb
inc
icebp
je
popa
pop
rcrl
cmp
push
xchg
jge
xchg
adc
dec
and
cmp
imul
jmp
jne
pop
lahf
jnp
fs
in
pop
icebp
frstor
mov
sub
mov
fs
insb
enter
cmp
mov
out
pop
xor
add
sbb
pop
mov
push
adc
mov
pop
pop
dec
int
hlt
or
cwtl
call
leave
inc
jae
stos
loop
vrcpps
xor
jns
or
test
popf
in
dec
mov
mov
outsl
imul
lret
test
adc
cmp
leave
or
sbb
addr16
bound
fidivs
push
inc
pop
mov
loop
hlt
push
into
in
cmp
add
lret
ja
add
xchg
nop
pusha
add
arpl
xor
das
int
xor
int3
ja
inc
andl
push
pop
enter
ss
test
sbb
fwait
rcrb
add
dec
jl
cs
jle
scas
test
incb
call
push
stos
cmp
push
cmpsl
test
icebp
or
jle
pop
ret
or
test
or
mov
inc
sbb
mov
sub
scas
jge
fs
mov
sahf
sub
cmc
cs
jp
xchg
lret
xchg
mov
insb
add
clc
rcrl
jns
insb
pop
mov
pop
insb
fs
push
outsl
popl
push
mov
aad
aam
pop
cmp
sahf
mov
stos
fisttpll
icebp
sub
push
cmc
daa
mov
mov
mov
rcll
xor
jae
ds
sbb
push
mov
stos
inc
sub
scas
mov
dec
test
dec
aas
arpl
bnd
aam
dec
pop
int3
push
mov
xor
std
cs
sbb
mov
mov
mov
inc
and
lret
cwtl
outsb
add
jns
push
orb
sbb
leave
inc
pop
pop
imul
xchg
fcmove
aad
sarl
mov
aas
add
xchg
jmp
outsb
or
jmp
lea
aad
and
dec
mov
dec
cltd
rolb
fisubl
loop
mov
mov
out
insb
or
lock
popf
mov
rcll
jp
jmp
inc
cmp
in
inc
in
mov
movsl
mov
xor
cs
rol
xchg
push
xor
lret
and
test
pop
fistps
out
cltd
ret
add
mov
mov
jno
shl
jmp
add
rcrb
ror
movsl
or
nop
push
popf
rolb
hlt
ljmp
pop
xor
lret
mov
fsub
jge
imul
xor
sbb
popf
call
and
mov
dec
or
mov
sbb
xchg
out
cs
xor
pop
and
cs
or
imul
in
jo
jmp
push
mov
fs
mov
xor
mov
icebp
js
andl
js
prefetchwt1
add
dec
or
cltd
out
pop
aam
sub
std
popf
mov
add
cwtl
repz
ret
imul
sub
das
xchg
das
into
sti
mov
clc
movsb
loopne
call
mov
pop
and
fcomps
cmp
jp
outsl
pop
lods
xor
jle
cs
pop
sbb
adc
fldt
and
add
rcr
and
shr
mov
add
sub
pop
iret
jg
aas
rorb
sub
outsl
adc
mov
jg
jmp
push
sbb
pop
shlb
push
xchg
iret
iret
lea
jl
shll
jmp
aas
mov
ret
pushf
stc
fucomp
cmp
push
sbb
push
icebp
push
cld
push
roll
sub
decb
test
cwtl
out
mov
dec
pop
jbe
lods
movl
xor
mov
ss
shlb
mov
jnp
jne
in
out
xchg
out
pcmpeqw
lods
decl
xchg
adc
lock
cwtl
dec
mov
out
sbb
ss
pop
pop
ja
xor
jle
jo
insl
mov
pop
test
data16
and
xor
xchg
fsubs
adc
dec
cli
rorb
dec
loop
imul
nop
cltd
sbb
inc
sbb
or
sbb
rolb
les
out
stos
mov
mov
andb
call
mov
cltd
jbe
shll
divb
jo
movsl
cmp
in
jne
icebp
testb
decb
ftst
addr16
sub
pop
dec
push
idiv
shrb
addr16
cs
push
fbstp
popf
sar
jp
test
pop
out
insl
ret
xchg
dec
xchg
mov
shlb
mov
lcallw
mov
inc
or
out
cmovp
call
loopne
adc
or
push
mov
adc
inc
mov
mov
repnz
xor
popf
mov
sub
pop
add
rorl
xchg
stos
mov
push
xor
movsb
inc
xor
in
mov
inc
and
bound
test
cmp
jns
cmp
es
repz
mov
test
in
sar
pop
stos
pushf
xlat
add
sbb
mov
dec
dec
flds
in
std
mov
jp
xorps
jne
enter
push
mov
sbb
or
jnp
clc
mov
add
sbb
iret
stc
add
sbb
in
das
adcl
mov
mov
mov
in
sahf
sub
loope
outsb
sbb
mov
cpuid
inc
mov
sti
push
fmuls
fnstsw
je
adc
aad
ret
sti
call
fwait
jge
mov
mov
mov
std
ret
pop
push
sub
cld
out
pop
bound
jle,pn
cltd
jmp
fildl
xchg
fists
add
gs
cmpsb
or
add
adc
inc
dec
push
gs
loopne
xchg
xchg
dec
dec
dec
stc
je
outsl
icebp
das
inc
jmp
xor
fwait
lret
ljmp
cmp
and
pop
mov
push
popa
adc
mov
in
ljmp
xor
adc
pop
icebp
mov
mov
rcl
cmp
dec
mov
popl
xchg
or
sbb
repz
ljmp
js
lea
mov
and
not
inc
jg
push
sbb
sbb
xrelease
jb
das
pop
xchg
outsl
movsl
push
insl
ret
aad
cltd
pop
xor
ja
inc
pop
push
push
jne
nop
loope
mov
pop
das
mov
jle
and
call
push
push
xor
xor
mov
inc
pop
pop
and
jle
mov
inc
daa
int
add
and
push
pop
and
adc
push
cli
sub
insl
mov
icebp
sbb
pop
fdivrs
iret
repnz
lea
sbb
daa
mov
push
or
xchg
jnp
call
jb
out
dec
pop
inc
jno
mov
adc
mov
or
outsl
pusha
fdivp
sti
cmp
push
add
jmp
ds
adc
dec
mov
stos
or
and
mov
add
in
sbb
add
in
scas
aad
sub
fcomp
dec
shlb
mov
std
imul
fiaddl
pushf
mov
pcmpgtd
ds
mov
jb
addr16
push
sub
lods
enter
into
inc
int
mov
cmp
mov
mov
sti
in
mov
pop
ja
or
mov
xchg
dec
lret
xchg
jge
sbb
mov
jmp
arpl
cmpsb
dec
sti
push
cs
jg
dec
addb
int3
mov
adc
xchg
in
ret
fistl
lea
repz
add
jo
out
mov
ret
movsl
adc
sub
add
enter
test
sbb
je
mov
sub
or
xchg
push
cmpsl
test
mov
or
sahf
add
imul
ss
mov
push
negl
insl
int
add
ss
ret
shll
mov
or
popf
mov
add
out
jns
push
cmpsb
pop
movsl
dec
call
jo
mov
push
mov
or
outsb
in
sti
outsl
test
inc
stc
cmp
jmp
dec
xchg
pop
cmp
stc
das
ror
push
pop
dec
mov
jle
call
loopne
sarl
cmp
push
sbb
mov
inc
lcall
add
add
dec
adc
ret
aad
lock
sbb
cld
insb
sbb
xor
movsl
sarb
add
out
dec
cmp
rol
lods
mov
jne
inc
xor
lea
insb
mov
mov
inc
ljmp
ret
sub
fcoms
js
out
lods
xchg
xchg
gs
add
sbbl
jno,pt
je
out
mov
add
jne
shrl
xorb
incl
insb
lret
mov
dec
adc
jecxz
test
test
push
or
pop
pop
aam
push
in
jo
insb
int
mov
or
pop
inc
sbb
pop
dec
xchg
cmp
jb,pt
or
mov
and
imul
orl
adc
stc
jle
clc
mov
mov
xchg
mov
dec
inc
cmp
jnp
mov
or
scas
xchg
pop
fldenv
out
idivb
xlat
leave
inc
fs
sub
push
scas
mov
aam
cmp
dec
push
jbe
fsubr
jae
xor
in
mov
cmp
adc
adc
or
je
mov
cmp
dec
inc
in
mov
pusha
nop
jno
or
icebp
mov
subb
mov
pop
bnd
add
in
push
pop
ficoml
mov
and
into
or
sti
pop
jge
xchg
jmp
xor
xchg
and
insb
insb
jp
add
sbb
inc
shrl
xchg
data16
mov
add
insb
sbb
add
movsl
jle
pop
mov
outsb
lahf
movnti
cmpsb
or
popa
stos
cs
sbb
jno
or
xchg
or
sbb
mov
not
or
outsb
or
out
xchg
sbb
sbb
les
mov
sub
push
jo
loop
dec
pop
pop
divb
movsl
dec
fcomps
ret
movsl
dec
jecxz
ljmp
dec
or
jno
adc
stos
out
push
das
js
andl
mov
insb
adc
fcomps
sub
or
or
sub
aam
mov
enter
and
lock
dec
lret
fistps
inc
sub
negl
ret
fidivs
dec
sub
loop
lret
or
xchg
pop
push
jb
jl
mov
cltd
adc
inc
mov
aas
or
mov
add
or
mov
stos
out
mov
mov
dec
add
es
sbb
sbb
mov
pop
fidivs
movsb
sbb
mov
xlat
mov
jge
cmp
arpl
call
lods
aam
fistpll
dec
sbbl
cld
cltd
inc
ja
les
cmp
out
lret
fcompl
push
dec
stos
cmp
scas
and
into
and
xchg
fadds
call
sbb
dec
jle
je
xor
mov
in
sub
add
cmpsl
xchg
repz
mov
lahf
xor
pop
mov
mov
pop
adc
jle
rorb
lods
fimuls
add
inc
addl
stos
fwait
int
fsubp
xchg
add
int3
aaa
int3
adc
sahf
and
xor
or
mov
or
jmp
shrb
adc
push
inc
mov
ret
push
pop
add
xchg
xor
popf
out
imul
xchg
pop
das
sbb
into
mov
xchg
mov
mov
fstps
inc
ljmp
jno
inc
xchg
cmp
je
nop
ss
prefetch
push
cmova
or
ds
ljmp
stos
subb
xchg
mov
fmull
xchg
jo
iret
insl
dec
and
xorl
dec
push
das
lds
xlat
mov
mov
sub
lds
adc
mov
popf
push
pushf
lahf
repnz
and
test
mov
sbb
inc
mov
dec
in
in
das
mov
dec
je
repnz
fcmovne
dec
filds
xchg
jnp
rcr
push
int
jno
push
mov
js
loope
pushf
adc
mov
jl
shrl
add
xchg
mov
mov
mov
in
shlb
cmp
xorb
fisttpl
cmp
pop
shlb
mov
mov
mov
and
enter
mov
and
mov
mov
and
mov
xor
push
int3
mov
test
adc
cwtl
incl
sbbb
cmpsl
ficomps
or
or
sahf
icebp
cld
push
addr16
dec
cli
inc
out
fldcw
rol
cmc
mov
and
jnp
mov
pop
push
jb
mov
pushf
stc
les
dec
out
pop
inc
dec
mov
fimull
push
pop
push
dec
lcall
and
fwait
xchg
sbb
jp
xor
xchg
in
std
out
push
xchg
sbb
inc
push
stc
jbe
sbb
inc
stos
cmovl
daa
repnz
adc
cmp
xchg
dec
stc
mov
or
dec
jmp
jnp
sbb
mov
cwtl
pop
ret
add
fs
fs
lahf
cmp
mov
es
imul
in
push
rcr
adc
enter
imul
push
dec
mov
movsl
and
pushf
dec
movsl
jecxz
or
cmp
push
mov
pop
xor
icebp
add
movsb
mov
xor
loope
mov
and
scas
icebp
cmp
sbb
mov
in
das
mov
in
outsl
fidivs
js
cmc
lock
sbb
mov
incl
mov
nop
inc
jp
outsb
jecxz
mov
mov
pop
xor
mov
dec
mov
loope
xlat
mov
pushw
lret
paddw
je
lods
cmp
mov
jle
cmp
fs
pop
iret
imul
insb
lods
adc
movb
cmp
push
adc
push
stos
hlt
mov
push
push
mov
cmp
xchg
sarb
into
xchg
stos
push
cmp
cmc
pop
lea
xchg
ds
inc
lahf
scas
or
gs
and
adc
jb
mov
sbbl
sbb
xor
scas
outsb
mov
push
mov
lret
jbe
mov
addb
je
jae
nop
aad
push
vmovupd
jns
nop
push
iret
fcom
lds
xor
sub
mulb
mov
and
popa
push
addr16
and
and
mov
mov
sbb
lcall
or
inc
or
xchg
jmp
lds
sub
pop
loopne
mov
into
sub
pushf
sub
mov
out
daa
xchg
addl
popf
in
js
subb
jmp
add
pop
jo
push
adc
pop
adc
sbb
or
int
lcall
or
stos
dec
scas
fs
test
iret
ret
jbe
sbb
andl
outsb
es
cmp
iret
arpl
gs
movsl
inc
cmp
cmp
aas
xchg
inc
shll
fisubrs
fcoml
cwtl
cpuid
xchg
inc
inc
cmp
hlt
push
push
out
sbb
jnp
dec
lcall
cli
push
push
call
out
add
pop
call
mov
jne
subl
mov
mov
popl
jmp
cmp
adc
sub
subl
cmp
repnz
dec
mov
pusha
clc
imul
fwait
or
xchg
push
out
mov
insb
fs
fistl
stos
xlat
dec
xor
fiadds
lret
and
cmp
cmpsb
inc
or
mov
in
inc
inc
push
add
and
je
jbe
mov
leave
jg
dec
fnstsw
jmp
in
jle
outsb
or
mov
out
rolb
je
jmp
cld
cmp
repz
pop
daa
mov
insl
push
loope
or
xchg
mov
push
daa
fistps
sbb
adc
loop
cltd
ss
repnz
ret
lret
xchg
or
loope
mov
jmp
mov
push
pop
jbe
mov
ret
adc
xor
ljmp
cmpsb
scas
sbb
pop
movsl
gs
adc
add
add
inc
sub
jecxz
pop
mov
stos
sub
pop
test
mov
loop
frstor
xor
xchg
aaa
xor
cmpsb
adc
jl
inc
and
shlb
or
mov
movsb
negl
sub
fsubrp
mov
sbb
sub
pop
shlb
pusha
faddl
ret
lock
jo
dec
ret
jo
push
outsb
shlb
cmp
mov
enter
cmp
enter
mov
movsb
xor
aam
gs
mov
popf
xchg
outsb
xlat
push
movsb
and
and
pop
jge
cmp
push
outsl
jb
nop
fld
out
pop
add
nop
gs
pop
jg
mov
stos
outsb
pop
push
nop
scas
mov
cmpsb
inc
cwtl
pop
scas
lret
or
inc
aam
add
adc
jge
movsl
data16
mov
lock
xor
mov
dec
lock
xor
stos
ret
cmp
les
idivb
xchg
mov
push
mov
loopne
bound
cmp
fcmove
dec
xlat
aaa
roll
add
cli
lahf
xor
jmp
mov
mov
cmp
dec
mov
pop
test
shll
adc
push
fwait
dec
clc
dec
cmpsl
cmp
lea
and
push
mov
mov
pop
sbbb
fidivs
cwtl
or
subl
xor
jne
shll
mov
in
mov
mov
into
xlat
and
mov
sub
testb
or
ficompl
std
xchg
outsb
sbb
arpl
lock
add
xor
test
mov
scas
push
adc
outsl
iret
outsb
movsb
or
or
cmp
mov
rolb
cmp
adc
jmp
shll
mov
add
push
pop
cltd
mov
stos
sbb
sti
iret
movsb
adc
add
mov
cmp
sarl
mov
sbb
rorb
sbb
orl
ds
pop
pop
outsl
sbb
xchg
or
sbb
mov
inc
mov
mov
jmp
sub
mov
sbb
xlat
cs
pushf
jle
add
mov
add
lret
mov
loop
mov
xchg
mov
test
outsb
aad
xchg
lahf
push
aam
arpl
push
adc
insl
jae
mov
aad
dec
fadds
sbb
std
push
les
clc
out
pop
add
inc
call
ret
sub
xor
cmp
outsb
xor
daa
or
push
adc
mov
stos
jmp
data16
push
adc
and
repnz
xor
adc
or
outsb
subb
or
in
arpl
cmc
jecxz
push
xor
pop
es
add
cmpsl
outsl
arpl
lods
ds
mov
mov
jbe
mov
push
sbb
adc
xor
add
adcb
jae
lea
mov
xor
icebp
fstps
das
jmp
es
dec
lds
pop
xor
mov
lock
pusha
mov
push
mov
js
addb
out
mov
arpl
rcrl
test
mov
loopne
and
repz
pop
adc
ja
adc
fldcw
pop
jle
jl
xchg
cmp
mov
and
mov
mov
add
jl
jns
insb
sbb
jb
test
lret
push
adc
jp
test
mov
dec
lcall
lahf
in
shll
cmp
scas
ja
adc
xor
and
mov
xchg
pop
nop
xchg
jge
mov
pushf
mov
imul
sahf
lret
mov
ds
clc
jne
js
mov
sub
sbb
das
std
daa
popa
cmp
fisubrl
jno
push
int
roll
nop
push
leave
adc
out
or
and
or
fbstp
xor
dec
or
mov
jnp
icebp
fdivrs
adc
sub
movsb
xchg
cwtl
lcall
mov
or
sahf
mov
bound
fcoms
jb
int3
rcr
xor
mov
mov
xchg
in
pop
mov
or
fs
push
je
addr16
sbb
scas
pop
out
jle
and
cmpsb
subb
xchg
shlb
in
lds
sbbb
dec
and
jg
and
xor
int
push
sbb
cmp
adc
scas
jle
push
bound
sub
xchg
lret
and
cmp
rcll
mov
std
and
aam
aaa
xchg
and
out
cmc
shlb
lcall
mov
repz
xchg
cwtl
out
fisubs
adc
sbb
pop
fstps
call
insl
cmp
adc
in
cmp
clc
jge
icebp
mov
and
mov
fdivp
inc
loope
jo
dec
aas
adc
adc
divl
movsl
testb
push
scas
fstp
pop
loope
icebp
push
xchg
in
push
cmp
repnz
mov
fisubl
inc
enter
jge
jno
sti
inc
cli
lea
out
cmc
push
sub
fimull
add
jns
in
dec
inc
pusha
push
je
add
pop
inc
dec
sahf
cmp
decb
mov
inc
fs
xchg
adc
fists
adc
and
pop
push
jb
call
dec
out
aaa
imul
scas
push
sub
jmp
or
subl
add
cmpsl
neg
fldcw
push
inc
xor
push
lret
pop
xchg
out
and
push
call
lods
mov
repnz
into
shlb
jns
out
cmp
outsb
xchg
cmc
xchg
mov
test
movsl
out
das
mov
push
pop
fcomi
jb
lret
out
fwait
scas
aas
lods
jle
js
xor
scas
sti
mov
cwtl
addl
xor
addr16
jl
lea
imul
xor
movsl
popf
xchg
sahf
cmp
jecxz
bound
movl
dec
push
jb
scas
pop
jb
and
mov
outsl
cmp
and
mov
movsl
daa
pop
jns
jno
or
mov
scas
daa
or
data16
jbe
adc
jl
add
mov
fstl
jne
insb
cltd
mov
sub
xor
daa
jmp
inc
adc
dec
mov
in
popl
dec
jno
pop
les
and
fsubrs
aas
loope
call
data16
inc
jb
xchg
rol
or
pop
je
inc
arpl
dec
outsl
outsl
fisubs
mov
mov
js
mov
dec
inc
sar
and
out
sbb
sbb
repz
scas
mov
int3
stc
push
sub
cmpb
fwait
arpl
cmpsb
or
mov
pop
hlt
dec
push
or
call
inc
rorl
sub
in
pop
sbb
sbb
repnz
inc
pop
ret
insl
call
sbb
dec
andb
mov
mov
stos
sub
test
jmp
inc
cmp
in
pop
fstpl
sbb
ret
arpl
jl
cmp
scas
push
mov
stc
pop
and
sarb
adc
das
jb
jno
scas
and
loope
pop
popf
xchg
mov
jle
xor
js
dec
inc
jle
adcb
adc
call
xchg
xor
sbb
test
fld
pop
ljmp
dec
pop
mov
xor
data16
sub
jnp
add
arpl
cmp
dec
and
mov
inc
repz
adc
stc
sub
cld
sbb
cs
xchg
out
imul
ret
lods
pop
or
cld
test
mov
cwtl
xchg
lods
pop
cmp
sbb
mov
sbb
fsubrl
out
xchg
inc
cwtl
cmp
pop
push
bswap
lahf
in
rolb
adc
imul
call
pop
repz
xchg
std
stos
cwtl
push
rorl
in
cmpsl
cvtps2pi
xor
insl
setp
sbb
cmp
test
mov
sub
repz
mov
repnz
cli
or
js
mov
es
jo
dec
mov
std
fwait
xchg
cmp
sti
xchg
mov
adc
xchg
lret
adc
ficoml
in
push
jge
sbb
nop
sahf
push
mov
aas
cli
cld
test
ret
ja
push
outsl
mov
xchg
fnstsw
push
lret
nop
test
mov
in
pusha
push
xchg
idivb
jo
shl
mov
call
scas
and
pop
sub
fldenv
or
je
ja
cmp
cwtl
adc
fs
imul
push
sbb
ffreep
fwait
sbb
divl
rcr
xor
cwtl
jno
andb
mov
adc
outsb
fildl
inc
testl
mov
mov
nop
jle
xchg
lret
test
mov
push
or
inc
pop
dec
xchg
cmpsl
mov
icebp
dec
add
jne
dec
cmp
iret
movups
xchg
mov
push
inc
dec
out
adc
shrb
sti
cmp
cmp
clc
scas
jp
push
pop
adcb
enter
data16
jae
cli
jmp
dec
mov
call
jno
mov
or
inc
mov
add
sbb
push
mov
fs
mov
aas
dec
cs
push
push
cmp
push
cmpb
loopne
ret
inc
xchg
aas
jmp
xor
outsb
les
pop
cs
in
adc
movsl
sub
jne
notl
push
std
push
lods
xchg
popa
push
movsl
mov
enter
mov
cld
pop
fistpl
jle
inc
mov
xchg
loop
dec
sbb
mov
push
sti
iret
mov
mov
push
dec
or
fwait
aam
je
inc
notl
sbbl
je
loop
and
adc
out
les
adc
fbstp
imul
xchg
jmp
aad
ljmp
inc
lods
or
fsub
enter
xchg
add
mov
clc
sbb
daa
push
mov
mov
nop
dec
sub
xchg
nop
mov
xorl
pop
push
or
push
js
pop
repnz
sbb
cmpb
imulb
and
mov
add
push
fldt
test
inc
outsl
nop
loope
rorb
mov
lds
movsl
imul
ficoml
sub
pop
mov
bnd
stos
mov
jmp
sbb
mov
pushf
das
movsb
imul
mov
rorb
movsl
adc
mov
leave
push
inc
dec
cmp
sub
leave
ja
push
clc
pop
or
pop
pop
sub
xchg
jne
orl
or
shl
lock
icebp
lcall
push
sub
inc
repnz
testl
or
push
xchg
xchg
daa
cli
and
jne
and
std
push
mov
sub
andl
es
xor
push
push
addr16
push
leave
lahf
pop
lods
xorb
bswap
repz
fwait
dec
gs
loop
ja
mov
int3
jne
and
enter
mov
jecxz
pop
mov
addb
add
mov
pusha
inc
pop
bound
mov
in
jmp
shl
pop
mov
cmp
jae
push
lret
je
pop
pop
ljmp
sbb
cmpsb
mov
push
cmp
jno
jae
lret
fabs
lods
push
aad
sbb
pop
popf
hlt
jb
rclb
in
mov
lcall
cmpsl
mov
cmp
scas
dec
pop
xor
pop
push
arpl
mov
sub
aad
cmp
in
pop
test
or
push
repz
mov
push
fsubrp
mov
aaa
xchg
cwtl
mov
popfw
into
jns
les
aaa
cli
or
xchg
push
mov
jnp
aas
jo
in
insl
cmp
scas
xor
fidivrs
dec
add
ret
and
das
push
test
mul
or
or
dec
popa
ds
or
shll
rcrl
pop
sbb
lret
adc
stc
in
xchg
cmpsl
xchg
iret
inc
fsub
xor
aam
leave
in
imul
faddl
loope
push
cmpsl
jo
dec
ret
mov
cmp
cli
ja
mov
loopne
pop
fstpl
inc
pop
test
mov
scas
aad
outsl
scas
rclb
cmpsb
push
rcl
xchg
xor
jo
comiss
in
adc
pop
sbb
sub
aas
ret
test
je
ss
jae
cmp
pop
mov
push
push
add
pop
adc
pop
cmp
aam
inc
push
sti
loopne
arpl
push
lahf
mov
mov
ficoml
lcall
mov
push
leave
push
aad
lock
or
xchg
xchg
popf
mov
insl
aam
adc
inc
lret
sahf
pop
or
dec
arpl
loope
lcall
or
shlb
jp
dec
lcall
roll
ljmp
mov
cmp
shlb
push
mov
jns
cmp
fsubrl
xchg
mov
xor
push
inc
xchg
sbbl
mov
call
jg
cmpsl
jg
mov
nop
push
add
jmp
xor
cmp
sbb
adc
loope
sbb
pop
rorb
xchg
ja
clc
and
xchg
repz
push
jecxz
sti
jecxz
imul
cmp
cli
mov
rorb
loope
bound
xor
decl
xlat
xlat
mov
loope
xor
or
mov
push
test
clc
daa
cmp
mov
enter
faddl
pop
jbe
inc
dec
std
xchg
pop
add
mov
xor
push
xchg
outsb
mov
imul
es
pop
enter
mov
jg
stos
cmp
ret
push
inc
mov
sbb
push
minps
shll
pusha
mov
xor
inc
movsb
and
push
imul
in
mov
or
jae
or
fwait
cmp
xchg
repz
push
rclb
or
cli
and
orb
daa
cmp
inc
pop
cmp
or
add
aam
addr16
xchg
xchg
mov
sbb
xchg
mov
adc
mov
lahf
lods
fwait
mov
adc
hlt
push
lds
ret
push
rclb
sahf
pop
dec
mov
xor
stos
cmp
enter
dec
cwtl
fidivrl
ja
int3
enter
inc
fwait
mov
test
push
ret
int
dec
push
cwtl
adc
ret
pop
scas
hlt
mov
push
cld
sbb
iret
mov
subl
clc
adc
jecxz
pusha
push
adc
rclb
push
fsubrl
jecxz
fdecstp
push
mov
lods
ret
inc
test
xor
rcrb
imul
mov
xorl
mov
lds
lea
dec
mov
je
lods
xchg
aaa
es
add
iret
test
dec
bndldx
xchg
notl
sbb
pop
cmp
lock
jae
mov
xchg
pop
xlat
lcall
push
jl
mov
sub
call
sub
bound
lds
push
aam
movsb
and
or
jns
fimuls
push
push
inc
xchg
inc
lods
addr16
test
sub
pop
pop
clc
and
dec
aaa
stos
mov
mov
jp
bound
jp
pop
cmp
aam
inc
add
repz
addb
and
divb
stc
pop
movsb
jo
mov
lods
sub
cmp
mov
mov
add
daa
dec
inc
mov
div
mov
enter
xchg
gs
cmpsb
imul
fmull
pop
jno
inc
lock
mov
push
dec
fs
xchg
push
rcr
dec
dec
xor
xchg
adc
out
sbb
push
inc
sub
jg
or
mov
movsb
mov
add
adc
push
jle
scas
jp
lret
push
xor
scas
sbb
and
jge
mov
mov
lods
cwtl
dec
mov
repnz
mov
notb
adc
push
sbb
in
les
cmp
aas
cmp
sarl
ja
or
sub
popa
out
inc
dec
mov
arpl
jl
cs
push
mov
call
jmp
shll
mov
jae
testl
out
stc
jmp
mov
xor
mov
std
and
jae
sti
lret
test
outsl
pop
fdivl
mov
jne
sub
jae
les
stos
lods
mov
sbb
leave
stos
enter
lds
mov
test
mov
repnz
mov
adc
pop
in
dec
adc
sbb
mov
js
out
mov
aaa
faddl
int
push
rolb
fildl
or
cmp
mov
and
fnstsw
mov
mov
jle
enter
pusha
push
add
sub
cmp
push
lret
stos
mov
xor
fucom
arpl
adc
cmp
rorb
mov
ds
nop
inc
push
push
enter
pop
and
movsl
fisubrs
int
scas
and
xlat
push
lds
pop
es
xor
mov
outsb
xor
or
adc
or
mov
cmpsl
push
xlat
dec
inc
mov
dec
dec
mov
test
sbb
xor
lcall
mov
pusha
push
xchg
sti
leave
and
popa
mov
cmp
mov
mov
test
push
mov
sbb
xor
push
insb
enter
push
sub
in
xchg
push
int3
adc
push
jl
sub
xchg
mov
int3
cmc
faddl
pop
or
mov
cmp
leave
push
sarl
pop
into
test
outsb
pop
into
pop
shr
sub
sbb
dec
pop
mov
imul
inc
xchg
and
fwait
clc
ds
adc
jae
mov
push
push
inc
cmp
loope
enter
je
stos
xorl
mov
in
xlat
add
std
into
pop
mov
and
lods
lods
movl
test
daa
mov
adc
insl
fisubrs
jns
dec
insl
shlb
fdivrl
cs
mov
or
inc
daa
jecxz
xor
xor
push
rorb
mov
cmp
inc
mov
fmuls
xchg
es
mov
mov
jmp
jae
leave
xlat
jecxz
mov
jne
sbb
sub
xchg
cltd
incl
subl
aad
int3
pop
pop
xchg
cmc
mov
std
andb
pop
or
jp
mov
popa
cltd
out
addr16
lea
idivb
dec
xchg
adc
push
test
mov
dec
fcmovbe
dec
push
aad
inc
pop
jnp
loop
sbb
mov
adc
mov
adcb
ja
ja
lahf
dec
enter
aas
adc
cmc
cwtl
add
call
add
iret
fisttps
dec
sahf
or
push
xchg
mov
jmp
hlt
test
jg
pop
lods
add
popa
and
jnp
cmp
imul
sbb
xor
roll
cmpsb
pop
popf
mov
dec
mov
push
add
xchg
fbld
rcr
sahf
push
jns
mov
cmc
cld
js
cld
fwait
sbb
cmp
inc
clc
aaa
cld
mov
aad
dec
sbb
cmp
sahf
dec
les
imul
pop
and
pusha
pop
test
cltd
mov
push
adc
mov
stc
ja
jnp
cmp
cmp
test
add
leave
nop
cs
jnp
mov
mov
sahf
dec
inc
jge
inc
push
dec
xchg
sbb
push
into
call
and
dec
mov
xor
push
test
xor
cld
test
sbb
loopne
fcomps
mov
stos
mov
sub
pop
aaa
lahf
sar
sub
notb
repz
dec
jb
lahf
xchg
ljmp
in
push
outsl
dec
mov
dec
fmull
insl
xor
movsl
imul
mov
int
push
and
mov
lahf
mov
dec
sub
leave
outsb
and
jbe
mov
movsl
cltd
rcrl
add
das
mov
and
push
imul
outsb
inc
out
add
mov
lods
cmc
pop
mov
js
loopne
jle
mov
fistps
in
fadds
pop
mull
imul
jo
mov
rol
and
stc
mov
mov
push
ljmp
cmp
rep
lods
xchg
pushl
ds
jl
rcrl
adc
xchg
cmp
repz
mov
data16
insl
movsl
popa
out
mov
adcl
mov
jge
cmpsb
sub
cmpsl
mov
pop
fiaddl
pop
cmp
imul
fbstp
jmp
or
ss
pop
lds
mov
sub
push
repnz
imul
mov
xor
inc
out
mov
mov
ja
or
lcall
mov
stc
leave
mov
rclb
jg
nop
xlat
xlat
or
gs
cmpsb
pop
mov
cmp
aaa
cwtl
andl
adc
cmpb
fwait
jnp
xor
sarl
mov
fsubs
aad
mov
cmpsb
jmp
adc
mov
push
sbb
roll
daa
sub
jle
pop
sbb
fwait
pusha
cmpsb
jbe
repnz
adc
xchg
call
aaa
mov
jno
jne
push
push
pop
sarb
cmp
xor
jmp
push
test
xchg
or
idiv
jecxz
mov
insl
inc
mov
and
sub
push
or
out
ja
test
stc
pop
cmpsb
xchg
mov
xchg
xchg
lcallw
loope
ret
aas
out
mov
mov
dec
jg
addr16
inc
pop
xor
sbb
arpl
lods
sub
mov
int
mov
mov
jle
aaa
sbb
jne
aaa
loope
sbb
inc
inc
mov
loope
push
sti
mov
ret
and
mov
add
addr16
sbb
and
sbb
ds
movsl
je
out
icebp
cmp
std
jo
outsl
dec
xor
adc
shl
faddp
bound
xchg
loopne
imul
pop
int3
lahf
jo
aam
xchg
jbe
cltd
sbb
and
bnd
fwait
aam
aad
ja
sub
adc
loopne
fwait
or
pop
pop
outsl
cmp
int
decb
adc
mov
push
iret
in
xchg
popf
mull
cltd
hlt
dec
add
and
out
cmp
dec
fbstp
dec
outsb
test
mov
loope
gs
mov
and
inc
test
popa
push
adc
aaa
cmp
mov
mov
jg
cmp
mov
xor
mov
lds
ja
lds
sub
mov
xchg
fdiv
notl
int3
dec
xchg
lcall
and
push
xor
push
xorb
push
ljmp
sbb
repz
arpl
mulb
jmp
je
test
and
push
pusha
ds
aad
aam
adc
repnz
mov
imul
jo
dec
fcom
xchg
xor
and
rcl
mov
mov
cld
pop
sbb
fstpt
test
mov
lods
jp
mov
push
xor
cmc
and
outsb
push
movsb
test
inc
ljmp
int3
pop
mov
sub
lret
mov
push
jge
push
xor
lods
xchg
sbb
and
fiaddl
xchg
push
inc
lahf
sahf
fdivrs
xchg
and
push
movb
pop
push
jle
or
dec
movsl
sbbb
push
test
mov
cmp
inc
call
dec
in
cmpsb
sub
adc
push
pop
jmp
push
bnd
ret
jbe
lahf
mov
sbbl
mov
test
mov
push
inc
mov
scas
sub
xchg
adc
cmp
dec
mov
xchg
test
inc
into
out
pop
sahf
out
push
nop
addb
out
sbb
xlat
loop
pop
push
pusha
clc
mov
insl
shl
jo
inc
push
push
test
mov
js
loop
push
sub
repz
out
jnp
mov
cmpsl
hlt
out
cld
jnp
shrb
clc
ds
xchg
adc
inc
cltd
sti
mov
jge
test
jle
cltd
xor
push
xchg
mov
sub
nop
test
mov
mov
inc
imul
adc
xlat
mov
add
out
adc
loopne
popa
shll
loop
movsb
pop
fnclex
aam
xor
inc
fs
dec
gs
nop
and
dec
xchg
fwait
test
push
mov
adc
mov
jns
in
mov
jns
push
clc
pop
bound
xlat
add
push
shr
fld
xor
mov
pshufw
ret
sub
test
dec
shl
or
and
aam
fldenv
aas
cmp
sti
jns
ss
dec
lret
lret
fimull
out
jl
lcall
jg
pop
jo
mov
and
jae
pop
mov
int3
inc
dec
xor
mov
sub
fwait
lret
dec
fucom
sbb
bound
mov
in
inc
mov
mov
outsl
mov
cmp
mov
movsl
cs
negl
sahf
add
inc
outsl
sub
mov
mov
add
jle
movsb
jmp
leave
cs
push
gs
in
and
or
dec
popf
mov
sub
xchg
jmp
dec
rclb
cwtl
mov
hlt
inc
sbb
push
insl
lods
mov
iret
xor
push
std
push
jmp
cmp
imul
cmpb
fs
call
pusha
js
lods
lods
cmp
pop
scas
inc
and
or
push
xchg
insl
fwait
lock
xchg
sti
mov
sub
fs
repz
push
xchg
mov
movsb
push
rcr
outsl
jl
pop
test
cmpsb
imul
repz
and
test
das
xchg
push
xchg
pop
push
inc
rorb
ret
sub
lods
mov
and
sbb
aam
inc
xor
dec
add
cmpsb
push
adc
sub
shrb
adc
pop
or
aaa
push
mov
out
jg
dec
aam
jmp
rol
or
loope
out
divb
inc
les
push
xchg
jns
lret
xor
bswap
and
mov
adc
mov
mov
cmp
adc
fldt
mov
dec
mov
aam
fs
out
adc
loop
sbb
push
andb
push
aam
ss
mov
mov
cmp
inc
idiv
fcmovu
aad
mov
cltd
mov
arpl
xchg
pop
mov
nop
adc
dec
dec
lods
out
out
fimuls
sub
push
cmp
data16
push
pop
push
or
mov
sar
xchg
ljmp
pushf
out
inc
dec
daa
mov
add
xchg
adc
in
dec
ret
cmp
lret
scas
or
mov
and
std
or
jmp
jne
imul
inc
lock
cmpsl
imul
fisubrs
iret
sub
add
daa
repnz
sbbb
inc
jmp
cmpsl
fwait
sub
push
stos
lcall
or
mov
pusha
xorl
andb
aas
xchg
and
and
mov
xor
rcrl
and
scas
add
push
test
dec
pop
pop
enter
jo
fnstcw
mov
xchg
fwait
and
inc
add
lock
jge
mov
jno
pop
popa
nop
push
sbb
sarl
mov
add
daa
push
sbb
ljmp
pop
or
lcall
cwtl
nopl
ret
push
aad
inc
lds
fisubl
xor
ds
pop
repnz
les
rcll
xlat
aaa
mov
pop
lcall
clc
jmp
mov
je
jg
cmp
lahf
mov
cmp
mov
into
repnz
jae
mov
fiadds
sbb
push
cmc
mov
add
sbb
jno
data16
add
inc
add
ja
inc
sub
adc
es
icebp
popa
scas
sbb
lahf
popf
mov
push
aam
jl
push
push
andb
cmp
push
xchg
int3
xor
pop
add
ficoms
pusha
outsb
xor
je
test
xchg
adc
je
xor
add
xor
enter
mov
sub
push
sbb
inc
cwtl
mov
xor
cmp
cmp
pop
xor
jl
xchg
push
push
loopne
adc
cmpsl
pop
xchg
xchg
jmp
add
jp
popf
pop
test
nop
mov
adc
loope
rcrl
imul
lahf
push
xchg
addb
fwait
dec
out
mov
cmp
out
xchg
adc
repz
xchg
xchg
push
movsb
jge
xor
or
pop
sub
stos
popf
ds
xor
sub
push
mov
push
push
lret
lret
mov
and
cmc
mov
test
sub
and
and
in
insl
jge
je
xchg
mov
insb
stos
dec
std
push
sbb
push
pop
les
jge
outsb
and
xor
cmp
fwait
mov
jnp
into
dec
test
adc
cmp
sbb
push
cltd
cmpsl
jmp
pop
mov
pop
ret
pop
cs
sub
push
pop
mov
mov
mov
leave
daa
js
scas
leave
push
sbb
xchg
lods
call
mov
pop
lods
sub
add
jmp
dec
push
mov
jmp
add
std
push
cmpsb
sbb
ret
adc
test
lea
mov
lods
push
push
je
nop
and
inc
repz
inc
dec
cmpsl
push
jg
mov
inc
jge
cltd
push
scas
xchg
or
adc
movsl
adc
insl
mov
iret
ss
sbb
sahf
cmp
pop
fidivl
cmp
loopne
test
lea
out
sub
inc
push
mov
mov
mov
jne
fdiv
pop
ds
dec
shl
popf
cmp
pop
xor
jb
mov
lds
andl
test
shl
frstor
inc
subl
inc
mov
insb
fcompl
cmp
pop
insb
xorb
xchg
sub
lret
cmp
pop
cmpsb
mov
dec
cmp
movl
dec
mov
les
dec
aaa
arpl
jp
jmp
pushf
subl
adc
mov
ds
and
aaa
inc
fwait
in
lahf
mov
repnz
jle
push
cmp
loopne
lock
cltd
dec
jbe
ja
and
sti
shl
add
mov
jne
scas
mov
cmp
cmpsl
inc
adc
inc
addb
xor
insb
add
mov
sub
pop
xchg
fildl
popa
dec
inc
lcall
les
pop
inc
ja
out
in
int3
dec
lods
fxch
xchg
jbe
cmpb
xor
add
mov
jmp
jne,pt
pushf
adc
repnz
push
push
cmp
mov
mov
dec
movsl
shlb
xchg
push
nop
jp
add
nop
into
pop
and
xorw
test
inc
push
int
in
cmpsl
or
bound
push
pusha
into
stos
sub
add
mov
jg
sahf
xor
jp
adc
and
daa
movsl
loop
es
inc
push
push
adc
mov
out
stos
pusha
jg
cmp
add
push
dec
fwait
sub
cmc
mov
jl
int
adc
cwtl
xchg
cmp
shlb
xchg
mov
rcl
mov
sbb
lret
movsl
xor
add
pop
mov
fildl
xor
dec
es
cli
out
xchg
mov
int3
insb
mov
mov
gs
repz
mov
mov
stc
pop
xor
jns
ja
mov
xor
pop
stos
inc
test
in
scas
sub
mov
mov
repz
sub
ret
addr16
jae
xor
mov
int3
cltd
or
outsb
adc
jg
mov
stc
mov
fwait
and
ret
cmpsl
push
rcrl
inc
shrb
jbe
and
dec
cmpsl
mov
inc
inc
aad
test
ja
aaa
les
lock
clc
sbb
pop
mov
ja
sar
sti
cmp
ret
jl
dec
pop
cmp
inc
add
pop
test
stos
cmpsl
jno
inc
mov
test
dec
sbb
push
jo
jge
cmp
xor
fidivrs
jne
mov
test
cmc
movsb
loop
loope
sbb
add
cmp
leave
mov
out
aad
imul
mov
xchg
arpl
adc
pop
pop
pushf
add
xchg
pop
icebp
lea
sub
lock
push
xorl
push
out
ficoml
jb
mov
cs
loope
js
imul
je
sbb
ret
mov
xchg
fdivp
jg
mov
pop
orl
mov
pop
or
lahf
lods
and
or
sarl
add
and
ficompl
and
enter
inc
rcll
mulb
sbb
mov
pop
test
dec
xor
in
rcl
dec
xor
shrl
jne
mov
dec
pop
sbb
xchg
ret
into
cwtl
add
cmp
xchg
mov
push
in
sbbl
add
cmpsb
and
repnz
inc
push
aad
mov
or
adc
leave
into
push
or
pop
xchg
pop
or
fildll
pop
cli
xchg
jne
sub
xchg
aas
out
mov
shlb
jo
adc
ja
in
in
test
outsb
xchg
jg
pusha
cs
dec
xchg
fnstenv
pop
imul
mov
lock
cmp
into
pop
fldt
xor
sbb
dec
test
sub
into
xchg
fldt
pop
pop
ljmp
rcl
pop
imul
add
cmp
enter
mov
push
push
ret
fldt
popa
loope
in
jg
mov
xchg
push
out
xor
out
popa
mov
aaa
mov
sub
jl
jb
adcl
push
mov
xor
repz
insl
fisubrl
mov
sub
mov
sbb
test
inc
push
cmp
inc
add
test
lahf
xchg
pop
das
mov
aaa
mov
and
pop
push
pop
adc
add
ds
loope
lea
loopne
xor
pushw
stos
shrl
mov
cs
mov
push
pop
jne
and
mov
sbb
sbb
rcll
outsl
lods
mov
je
pop
fsubs
fs
in
push
cmc
repz
xchg
xchg
mov
adc
jnp
lods
movsl
adc
mov
aaa
out
cmpsl
imul
pop
lcall
mov
and
xchg
and
xchg
mov
insl
add
cmovne
xchg
aam
jo
orl
fcmovu
into
std
fcomps
dec
fst
out
ret
ja
mov
xor
daa
fistpl
ret
popa
mov
mov
sbb
das
mov
sub
xchg
and
je
cmp
mov
add
repnz
and
push
xchg
sub
out
cs
pop
push
lods
aas
inc
and
shr
lea
and
xor
dec
xchg
mov
ucomiss
xchg
imul
mov
sub
mov
lahf
fsubrl
mov
notl
in
push
pop
ret
lods
xchg
in
jno
outsb
cmc
cwtl
lret
or
mov
les
sbb
sti
mov
cmc
imul
inc
fwait
rcl
push
jmp
push
jp
sti
pop
cmpsl
xchg
jp
mov
xor
xor
sbb
daa
sub
ljmp
jnp
incb
shrb
imul
mov
movups
pop
sub
fsubs
sbb
jne
imul
pop
clc
push
xor
cs
add
cmp
inc
inc
ss
lahf
out
jae
inc
loopne
call
xor
cmpsl
mov
or
add
gs
scas
aas
xor
push
add
daa
out
lahf
hlt
ficompl
push
and
cmp
imul
push
adc
lcall
bnd
jae
jb
nop
jmp
enter
sub
sub
inc
loope
sub
mov
sbb
iret
leave
jnp
hlt
fdivrl
jne
push
sub
enter
dec
cmp
xchg
ss
inc
ffree
insb
nop
js
sahf
sub
pop
jne
or
mov
or
or
adc
daa
in
rcr
and
jl
sub
add
in
cmp
std
cmp
fidivrs
lea
das
popf
call
insb
mov
mov
inc
stos
inc
hlt
popf
out
cltd
pop
mov
lea
fisubs
cmp
pop
push
fdiv
fmulp
cmp
roll
sahf
xchg
xor
pusha
dec
cmp
aaa
mov
sbb
lds
out
mov
jge
subb
mov
mov
jae
in
adcb
dec
xor
sahf
or
sub
jmp
cmp
test
add
jp
sbb
hlt
mov
mov
movsb
sahf
jb
shrb
mov
xchg
pop
filds
sahf
or
lcall
cmp
bound
mov
jmp
mov
push
repz
and
pop
cmpsl
inc
add
jns
cmpsb
pop
cmp
lea
daa
dec
into
clc
and
je
mov
cld
je
and
xchg
aam
pop
call
popf
jp
sbb
sbb
xchg
lret
ss
sub
pop
call
outsl
add
mov
sbb
cmp
pop
lods
test
fucomp
mov
data16
sub
cwtl
out
mov
xchg
jb
jle
add
rep
inc
enter
insl
push
jp
xchg
mov
int3
fsubrs
pushf
xchg
out
mov
out
pop
mov
sbb
mov
leave
xor
push
and
in
sub
sub
push
scas
sti
xor
dec
dec
daa
sti
mov
lods
cwtl
inc
sub
jecxz
dec
push
sar
mov
xchg
sbb
test
hlt
cmp
or
movsb
divl
andb
xlat
lahf
sbb
repnz
fistpll
mov
xchg
cs
sbb
cs
ljmp
lcall
imul
mov
push
jmp
std
cmp
je
test
rcll
or
and
repnz
pop
movsb
or
mov
emms
dec
sti
sub
or
mov
sarl
iret
and
push
mov
stos
xchg
adc
es
mov
rcll
sub
jge
movsl
pushf
js
mov
test
outsl
hlt
sbb
aaa
popf
shrb
mov
in
aad
ss
mulb
jno
loopne
lods
jle
and
scas
inc
mov
sbbb
popf
out
jb
enter
call
in
xchg
sbb
mov
or
aad
ss
add
out
addb
in
pop
repnz
scas
divl
cld
xchg
loop
pop
xor
test
and
popa
push
pusha
mov
ss
mov
inc
ljmp
pop
pop
dec
out
das
fcompl
repnz
stos
mov
lods
push
dec
ficompl
add
imul
and
pop
dec
jnp
push
jge
or
push
adc
pusha
mov
or
and
fucomi
outsb
jmp
xchg
mov
jnp
cmpsb
cwtl
mov
sub
mov
pop
inc
sbb
adc
mov
inc
add
lea
in
fimull
scas
inc
repnz
clc
pop
push
mov
scas
lods
dec
movsb
dec
xor
mul
jmp
xor
or
cltd
and
pusha
inc
xor
cwtl
ljmp
xchg
mov
and
loope
flds
pop
push
xlat
push
call
fwait
lock
jge
pusha
hlt
js
rorb
movsl
mov
jae
repnz
mov
pop
arpl
xor
mov
lret
into
sbb
push
cmp
frstor
adc
repz
cld
stos
sbb
mov
or
lcall
jno
jns
pop
pop
mov
frstor
sbbb
cmpsb
dec
ret
inc
fimuls
xchg
loopne
inc
inc
call
and
cli
ja
push
mov
je
adc
sbb
xor
ds
out
int
xchg
scas
vsqrtps
inc
jo
lods
mov
xchg
repnz
cltd
cli
test
xor
ret
loop
insb
jnp
ret
adc
clc
adcl
lahf
jl
cs
lods
sbb
loopne
add
xor
fmul
orb
cltd
js
cmp
inc
sub
adc
jb
sub
addr16
mov
adc
xchg
ljmp
lock
repz
mov
bound
jae
add
push
popf
lahf
leave
scas
pop
add
pushl
sti
xchg
rcrb
es
xchg
inc
out
mov
jge
or
in
repnz
ja
push
jb
insb
dec
mov
mov
sbb
ss
les
fsubr
in
push
pop
cmp
test
bnd
add
jp
mov
loope
outsb
roll
or
mov
dec
and
pop
mov
cmp
nop
fs
jl
ja
aas
push
or
mov
jno
mov
aaa
mov
test
repz
adc
sti
hlt
push
mov
fisttps
loope
sub
push
cmp
mov
add
fwait
xor
popf
and
mov
in
out
in
and
xchg
aas
jns
dec
xchg
fwait
inc
pushf
movsb
sbb
gs
stc
adc
inc
push
or
std
outsb
mov
inc
push
mov
out
jns
sub
push
int
ja
pop
xchg
xchg
lahf
mov
sub
mov
mulb
xchg
in
add
into
and
bound
lock
rcrl
stos
das
ss
jnp
mov
out
cmp
in
mov
divb
adc
stos
cwtl
mov
push
xor
ud2
dec
mov
xor
sub
mov
and
addr16
mov
es
or
jp
cwtl
rcrb
pushf
test
sbb
das
jne
js,pt
loope
out
pop
or
imul
dec
stc
mov
das
jecxz
lcall
outsb
fisubl
daa
leave
addl
in
lret
xor
adc
push
sub
jg
fbld
nop
sti
fmuls
popf
adc
cmp
push
cli
rcr
jne
adc
push
or
xchg
cli
xchg
lahf
stos
cs
subl
jb
insl
sbb
pusha
and
test
mov
xor
add
xchg
sahf
mov
je
arpl
aam
mov
pop
div
dec
orl
movsb
insl
in
or
dec
fs
jle
sub
or
mov
in
xor
hlt
enter
stc
lret
sub
insb
add
clc
ret
mov
jmp
test
push
lods
inc
push
sub
cmpsb
add
leave
and
and
sub
xor
lret
xchg
xchg
mulb
ljmp
cs
movsb
and
push
inc
imul
inc
add
sub
rclb
je
jge
dec
xor
div
xchg
into
mov
lahf
push
fdivs
mov
adc
cld
mov
pop
cmp
mov
sub
sbb
outsb
stos
pop
jge
lock
aas
or
out
jecxz
ret
das
jo
aam
loopne
add
jmp
arpl
xchg
sub
dec
out
shrb
sbbl
imul
cmp
sbbl
pop
or
inc
push
aam
xor
xor
mov
outsl
jge
sub
push
jae
cmp
mov
jno
in
add
fwait
rcrb
insl
imul
adc
cmp
push
jbe
aad
repnz
rcl
scas
negl
cs
or
test
inc
jae
subb
sub
loopne
add
cmpsl
xor
and
icebp
sub
flds
das
push
dec
stc
cmp
out
adc
repz
jae
cwtl
xchg
jl
mov
and
mov
mov
sub
push
in
mov
shlb
adc
test
xor
push
lahf
add
sub
xchg
xlat
std
mov
mov
jg
add
xchg
in
dec
xchg
inc
mov
cmp
pop
xor
push
ljmp
in
out
sub
mov
jb,pt
rclb
cmp
dec
dec
and
lods
icebp
out
std
cwtl
push
or
ficoms
dec
pop
push
ja
push
push
cmp
push
jmp
fs
add
and
aaa
fwait
mov
fs
mov
inc
adc
mov
inc
sbb
div
push
stc
in
mov
jno
xchg
imul
cli
mov
loope
fsubrs
xchg
arpl
push
test
lds
sbb
int3
cwtl
lcall
insl
push
into
push
lods
mov
push
test
lahf
push
in
add
jno
in
sahf
xchg
out
popa
subb
mov
movsl
add
adc
dec
jo
dec
inc
fs
inc
sub
inc
xchg
pop
push
push
cmp
push
testl
andb
push
inc
mov
sub
jno
fisubrs
cmp
push
add
sub
aaa
cmpb
mov
lods
mov
imul
adc
or
jo
or
xor
pop
aam
mov
lods
cmp
dec
mov
push
mov
dec
push
fnstenv
dec
arpl
int3
add
adc
xlat
pop
ja
dec
mov
adc
and
imul
or
push
ficoml
ja
jg
outsb
xchg
mov
add
and
pop
movsl
mov
jae
je
mov
aas
inc
lock
dec
rcrb
mov
push
ret
ficoms
dec
loope
stos
fstpt
sub
pop
call
or
and
inc
mov
and
pop
cld
push
data16
pushf
cwtl
pcmpgtw
rorl
inc
and
into
mov
cmp
cld
movsb
cmp
dec
jg
dec
xor
in
pop
out
mov
out
fildll
lds
inc
push
insb
xchg
popa
pushl
mov
inc
sbb
in
pop
push
int3
add
or
in
movsl
add
aam
into
pop
loop
jle
fucomip
xor
push
push
mull
mov
xchg
xor
xchg
addr16
xchg
adcl
insl
negl
les
ret
sub
ja
mov
insl
test
or
std
mov
test
dec
sbb
popf
lods
subl
fdivs
cmp
mov
lock
into
inc
and
and
push
inc
mov
mov
fdivl
ret
push
jno
mov
cmp
sub
xchg
movsl
adc
push
jecxz
pop
stos
cwtl
sub
je
adc
int3
lods
and
push
sbb
fwait
xor
push
dec
enter
xorl
cmp
lret
and
mov
xchg
inc
cmp
xor
test
mov
rcr
movsb
pop
jecxz
push
sub
add
push
iret
xor
mov
ret
sbb
dec
lahf
push
lret
testl
xorl
arpl
ljmp
sahf
movsb
mov
pop
inc
mull
out
cltd
lock
pop
lret
int3
enter
cmpsb
mov
cmp
sahf
je
testl
mov
adc
addl
in
mov
lcall
addl
mov
adc
or
popw
int
cld
dec
ljmp
out
data16
xlat
daa
lret
push
add
int
pop
jns
loope
mov
sbb
mov
fmull
mov
shll
in
pusha
push
imul
lcall
das
sbb
test
or
icebp
mov
add
inc
dec
cmp
fsubs
xchg
mov
sarb
nop
roll
sahf
jp
lock
insl
mov
dec
bound
xchg
cmp
sub
stos
cmpsb
xchg
sbb
scas
xchg
push
pop
and
pop
dec
fwait
mov
xor
insl
pop
test
repnz
or
or
data16
lds
push
lds
xchg
mov
xchg
test
lcall
dec
imul
movlps
mov
cmp
aaa
bound
lcall
add
nop
push
pop
push
outsb
lcall
repz
adc
icebp
push
sbb
mov
lret
pand
jecxz
push
insl
in
add
out
xchg
jge
out
orl
pop
xor
pop
js
dec
je
dec
add
bound
inc
xchg
pushf
test
sbb
xchg
cmp
add
mov
xchg
and
aaa
mov
test
movsb
and
jge
push
je
divps
adc
sub
js
pushf
int3
jmp
cwtl
cmp
pop
pop
mov
xor
sub
mov
sar
out
test
cmpsl
add
cmpsb
lods
sbb
pop
or
fists
push
jp
push
xchg
jg
jno
mov
out
stos
imul
lcall
mov
pop
outsb
mov
push
xor
addb
mov
shlb
mov
pop
xchg
lret
xor
dec
jl
lahf
aaa
movhps
xor
jp
fnstenv
sub
inc
cmp
data16
in
bound
sbb
inc
pop
loop
pop
in
mov
imul
add
sub
or
pusha
sbb
and
push
xlat
jecxz
fyl2xp1
adc
nop
movsb
pop
cmpsl
mov
jb
movq
inc
pop
adc
add
int
mov
push
pop
xchg
xor
shlb
add
xchg
fmull
mov
push
add
test
pop
adc
cmc
arpl
cmp
jecxz,pn
or
enter
jmp
adc
in
repnz
int3
dec
fidivrl
fdiv
decb
or
mov
clc
call
xchg
cwtl
xchg
push
cld
adc
lods
cmp
xor
movd
add
push
dec
jmp
psadbw
mov
sbbl
sbb
jg
jle
lret
jbe
pop
rcrb
jne
fnstsw
lcall
pusha
inc
les
sbb
data16
sbb
jns
jp
lcall
pusha
clc
mov
mov
imul
lods
xor
movsl
jcxz
inc
inc
add
sbb
push
jg
sbbb
cmp
or
test
aaa
rol
in
or
cmc
or
arpl
jge
pop
int
orb
mov
and
and
xor
sbb
cmp
enter
mov
or
imul
inc
dec
push
and
cli
push
scas
shll
icebp
pop
mov
pop
mov
pop
sbb
shlb
and
cmc
insb
hlt
pop
dec
sub
in
leave
mov
lods
pushf
or
sbb
loop
mov
in
xorl
mov
mov
inc
loop
test
jmp
mov
and
sbb
lahf
jo
adc
mov
insl
ja
push
sahf
pusha
dec
pop
xorb
adcb
mov
push
mov
sub
test
mov
dec
cmp
cmp
lret
fidivs
sub
or
mov
hlt
andb
xor
pushf
pop
pushf
test
fldl
and
mov
fistpl
or
sti
xor
inc
pop
cmp
ss
sbb
xchg
or
iret
mov
in
cmc
or
sub
cmp
dec
jle
sub
sbb
pop
insb
adc
loope
test
pop
ljmp
cltd
in
jae
dec
pusha
jae
addr16
sbb
iret
arpl
dec
push
push
cmpsb
outsl
arpl
scas
mov
test
add
or
repnz
les
jge
popf
jnp
fildll
mov
out
xor
adc
xchg
bound
mov
mov
pop
insl
stos
cwtl
sti
push
out
popa
pop
enter
pop
ss
rcrb
lret
dec
out
push
add
jge
loope
or
fcompl
test
push
icebp
aam
loop
xor
cmp
jecxz
sbb
sti
adc
arpl
and
pop
test
xchg
sarb
repnz
aad
enter
mov
les
jae
xlat
sarb
aad
sarl
dec
xor
loope
call
mov
lods
arpl
xor
cli
pushf
xchg
sahf
fstpl
mov
sub
les
ds
test
mov
rcrb
add
xchg
lea
jbe
outsl
jne
ss
out
xchg
push
movsl
adc
push
addr16
scas
sbb
and
pusha
mov
icebp
xchg
lods
iret
dec
fsubrl
lret
push
mov
mov
mov
inc
cltd
shlb
push
icebp
popa
add
test
out
mov
shl
test
fmuls
xchg
push
mov
or
fcoml
clc
mov
dec
push
adc
adc
rol
popa
inc
dec
jae
inc
call
arpl
pop
movsl
xor
xchg
sarl
je
pop
push
cli
jmp
add
inc
cmp
fsubs
mov
test
and
shlb
dec
jmp
repnz
lret
or
push
sub
loopne
add
sub
sbb
roll
cmp
fcoms
mov
push
push
scas
push
jno
push
adc
inc
sub
dec
mov
mov
sbb
cwtl
mov
sarl
pushf
cmpsb
cmpsb
in
les
cwtl
sub
addb
iret
test
daa
mov
jns
pop
out
cmc
mov
ret
ljmp
stos
fadds
mov
mov
loope
stc
fistl
sarl
mov
push
outsl
into
push
xor
xor
sub
rcl
mov
jnp
jecxz
or
pop
xor
dec
pop
aam
frstor
loop
mov
lods
mov
ret
test
jae
add
daa
inc
xor
xchg
cmp
cld
xor
out
mov
jmp
or
loope
imul
adc
and
adc
adc
cmpsl
push
cli
shl
xchg
call
cmp
lods
repz
dec
pop
fsubrp
adc
imul
inc
std
leave
popf
mov
fisubrs
lret
inc
mov
fnstenv
mov
or
sbb
mov
popa
sbb
add
stc
ret
add
mov
test
cmp
sbb
or
adc
nopl
adc
or
shll
push
pop
ja
mov
outsb
sub
inc
ljmp
rorl
stos
push
decl
push
inc
adc
aaa
mov
pop
aad
pop
xor
sbb
sti
lret
rcrb
cmc
mov
jecxz
stc
sbb
or
inc
pop
xor
out
mov
pop
std
mov
cmp
add
pusha
mov
shrl
addr16
or
test
sbb
iret
xchg
push
dec
cmp
cmp
jecxz
cmp
dec
cmpsb
dec
paddd
pop
push
inc
inc
push
jns
push
xchg
dec
std
lock
and
fisubrs
push
movsb
xor
sarb
cmpsb
add
fidivrl
push
or
xchg
push
dec
inc
cs
enter
lods
jge
mov
movsb
push
pop
dec
jg
fdivrl
add
cmp
adc
sub
mov
and
popf
arpl
pop
das
or
cmc
imul
push
sub
push
push
pusha
mov
dec
adc
es
test
rolb
mov
and
outsl
dec
add
cmp
jge
repz
xor
out
mov
insb
mov
xlat
nop
cmp
xchg
push
xorl
or
pusha
add
loopne
popa
movsb
mov
shr
pop
pop
pop
ljmp
pop
mov
cmp
std
sbb
xor
and
xor
popa
mov
mov
and
mov
ja
mov
mov
cmp
sub
pusha
pop
ret
sub
outsl
jno
fdivs
in
lea
and
sbb
xchg
adc
sahf
dec
movsl
ss
call
gs
add
rorl
push
insl
push
mov
ret
push
fs
push
gs
pop
add
mov
cltd
mov
fidivrs
cmpsb
sub
pop
fbstp
mov
push
pop
fwait
ljmp
sbb
lcall
mov
cmp
ljmp
cwtl
sbb
cltd
lret
jo
and
loope
iret
push
insb
or
adcl
and
mov
loop,pt
add
lret
jno
cmp
mov
pop
dec
jg
sahf
stc
sbb
fucomp
sbb
cmpl
pop
sub
test
je
gs
and
mov
data16
clc
adc
sahf
xor
nop
fcoms
push
mov
mov
ret
cmpsl
cwtl
dec
scas
fwait
jp
dec
jae
pushf
push
and
push
push
dec
push
faddl
and
sub
jnp
and
int3
push
xchg
cmc
and
jno
cmpsl
rcr
inc
xor
push
jbe
sbb
pop
outsl
mov
or
add
add
out
cmpsb
mov
jnp
push
push
fdivs
dec
bound
aam
aaa
jg
jae
xchg
aad
aas
cmp
inc
mov
push
daa
test
out
mov
orps
shlb
pop
and
call
insb
push
jg
scas
mov
sbb
xor
push
in
movsb
clc
sbb
inc
pop
mov
push
aam
std
sbbl
mov
aam
xor
mov
mov
inc
inc
div
inc
cmp
nop
dec
cli
lods
xor
cwtl
xchg
subb
or
xlat
sti
push
push
jns,pt
push
adc
or
movsb
pop
mov
cld
push
aaa
dec
xchg
ret
jno
outsl
mov
pop
cwtl
out
xorl
mov
pop
inc
fs
enter
sti
pop
adc
hlt
loope
cwtl
adc
and
push
add
inc
dec
jle
and
rorl
xor
pop
or
mov
jno
push
das
jp
jge
cmpsl
cs
lods
movsl
sbb
cmp
adc
outsb
xor
pop
mov
sub
pop
jecxz
into
dec
push
out
test
lret
push
push
add
lods
sbb
push
dec
jo
addl
lcall
call
adc
and
je
adc
jp
mov
ds
repz
dec
test
and
clc
mov
ret
shlb
test
or
nop
sub
pushf
jns
bound
mov
dec
shlb
push
mov
xchg
lret
addr16
in
pop
shll
lea
pop
fwait
inc
or
inc
in
jl
cmp
mov
sub
faddl
xchg
add
cmpb
movsl
cmp
push
or
pop
js
rcrb
leave
imul
dec
mov
jge,pt
daa
xor
push
fwait
push
push
or
pop
dec
jns
test
out
jns
lods
adc
mov
lds
xchg
repnz
jg
add
ret
mov
rcl
cli
and
push
ror
pop
adc
clc
or
std
push
inc
and
push
mov
scas
aas
sub
scas
test
mov
and
jl
mov
xchg
sub
jae
das
cmp
outsl
mov
mov
or
or
push
push
iret
clc
popa
mov
mull
adc
cmp
fnstenv
repz
pop
cmpsl
jno
add
cs
ja
or
sahf
xchg
jo
cmp
testl
push
push
jp
notb
push
leave
sbb
not
in
xor
stos
mov
nop
cmp
cmp
cwtl
push
test
jg
dec
frstor
push
or
jbe
xchg
mov
mov
repnz
dec
jnp
mov
inc
out
lcall
pop
aam
cs
inc
xchg
loope
fadd
ss
repnz
in
xchg
aad
add
adc
pop
icebp
ja
inc
mov
add
cmp
dec
ficoml
out
ja
inc
jnp
in
fsubs
jns
pushfw
addb
and
pop
mov
fsubrs
in
mov
push
and
xchg
jle
dec
add
push
cmpsl
ret
mov
push
loop
cmp
mov
pop
cmp
inc
mov
aaa
or
xor
pop
jnp
xchg
xchg
in
push
xor
cmp
lods
adc
daa
ljmp
mov
ret
fists
sub
adc
test
faddl
fnstsw
and
jo
jg
adc
ret
bsf
popa
pop
mov
xchg
mov
into
repnz
mov
xor
add
arpl
mov
iret
jnp
mov
xor
fstp
orl
shrb
lods
xor
jle
enter
pop
mov
movsb
es
dec
movsl
fnstenv
cmp
cmp
sub
xchg
lahf
mov
fildl
push
fildll
jnp
enter
lahf
stos
xchg
cmpb
in
loopne
test
fmull
pop
pop
push
jle
cmp
mov
mov
cmpsl
jp
nop
dec
aad
cmpb
lcall
mov
mov
push
adc
jle
sub
jg
sub
jne
fisttpll
out
and
mov
xor
mov
sub
es
sub
push
shrb
add
pop
adc
xchg
lahf
scas
or
clc
jo
mov
jbe
pop
cmp
inc
scas
pop
fdivl
notl
adc
add
push
stos
lcall
das
add
xchg
mov
xor
js
mov
lret
sbb
push
sbb
lock
mov
lods
outsb
inc
pop
sub
sbb
mov
lock
lock
or
in
inc
cmpsl
lret
pop
ror
cmp
clc
mov
stc
sahf
test
nop
lret
jle
jne
addr16
push
dec
fistpl
fisttps
ret
aaa
mov
clc
and
adc
enter
cmp
insb
in
pop
out
adcl
add
test
ret
insl
sbb
hlt
add
in
bound
jno
addr16
mov
push
mov
and
dec
rcrb
sub
jp
xchg
loop
cmp
xor
mov
std
ljmp
pop
jp
push
arpl
mov
cmp
or
mov
jo
lret
jno
pushf
jno
filds
lret
out
mov
les
cli
ret
lods
lods
mov
addl
cmp
sahf
shlb
std
movsb
mov
mov
dec
jnp
dec
pandn
lea
add
or
pop
outsb
push
adc
lret
fsubr
push
arpl
xchg
test
pop
int
and
lods
mov
inc
lret
mov
fstpl
adc
repnz
add
dec
daa
out
jp
and
outsl
xlat
inc
inc
leave
fwait
insb
add
mov
mov
push
adc
sbb
jns
dec
or
lds
jp
adc
mov
es
sbb
inc
push
sti
cmp
repnz
outsb
push
ss
pop
push
out
mov
or
div
adc
inc
push
incb
push
cmp
xor
jae
js
stos
dec
sarb
cmp
jg
in
pop
sub
pop
mov
inc
dec
inc
shl
imul
mov
sub
ss
mov
jae
push
imul
adc
ja
inc
imul
ficoml
and
repz
pop
or
outsl
xchg
cmp
jbe
mov
pop
add
push
push
fisubs
sub
sbb
lret
xor
sub
dec
mov
clc
mov
repnz
test
push
fisttpll
xchg
pop
ds
jae
cltd
popf
mov
aaa
pop
jecxz
and
adc
push
fs
imull
les
sbb
xor
cwtl
sbb
scas
icebp
mov
jbe
push
mov
int3
les
mov
push
sub
movsl
xchg
data16
mov
xchg
jg
int3
cmc
jo
int3
cmp
or
aaa
adc
xor
pop
aas
mov
push
ret
push
hlt
sbb
ljmp
xor
dec
dec
test
insb
daa
stc
mov
aam
pop
aas
mov
mov
out
add
fwait
lds
sub
jp
and
fisubrl
mov
mov
stos
test
and
xchg
push
mov
in
inc
inc
push
jnp
icebp
test
leave
jnp
scas
icebp
ja
jp
cmp
sub
sub
push
pop
pop
pushf
leave
inc
movsl
les
sahf
adc
fwait
jns
inc
mov
cmc
or
push
fsin
and
jo
mov
call
cltd
mov
add
sub
rorb
pop
leave
call
sub
data16
cmp
cli
into
in
mov
xchg
aaa
mov
cmc
jns
dec
movsb
dec
enter
sbb
add
sarb
sar
std
insb
mov
insl
arpl
aas
mov
gs
aas
outsb
fcmovu
lcall
leave
and
pop
lea
out
inc
stc
icebp
cs
movsl
and
mov
mov
or
adc
inc
push
iret
and
pop
fdivr
cmc
in
iret
insl
pop
mov
xchg
icebp
imul
jl
or
push
xor
sarl
cmpsl
mov
in
aaa
jno
jne
testl
sbb
nop
pop
pop
out
xorb
nop
outsl
pop
jecxz
jnp
xlat
xchg
aam
insl
mov
jmp
or
xor
test
push
mov
add
js
mov
xor
sbb
or
sub
cli
sti
pop
test
pop
in
and
sbb
push
addr16
imul
stos
icebp
negb
int
outsb
je,pn
aad
addr16
lret
jp
push
nop
jle
xchg
bound
sbb
mull
scas
bound
xor
and
lahf
cmp
mov
adc
aad
mull
or
cwtl
jne
imull
or
or
xlat
iret
fwait
xor
dec
jno
and
scas
push
cmc
inc
decl
pusha
scas
jge
jo
adc
mov
mov
add
outsb
sub
popa
out
sahf
ret
lahf
push
fsubp
fiaddl
sub
pop
jno
adc
mov
inc
adc
aas
fistl
lods
add
add
call
popa
adc
insl
divl
test
mov
ds
dec
dec
out
std
xor
pusha
loope
xor
sub
dec
jbe
push
jp
mov
add
inc
mov
fists
push
clc
mov
mov
jg
ljmp
in
mov
cs
and
test
dec
rorl
ret
fsubr
stos
dec
xchg
sbb
or
orl
jecxz
jmp
stos
jp
lds
orps
pop
jne
cmpsb
nop
sbb
int
sbb
cmpsl
xchg
mov
into
pop
aas
xchg
dec
push
xchg
mov
cltd
xchg
shrb
adc
mov
movsb
mov
shlb
jno
jecxz
fnsave
cmp
movsb
shlb
in
sbb
xchg
add
movsb
ja
dec
inc
aad
out
test
cwtl
xchg
in
fwait
mov
jae
push
pop
push
lods
and
jle
mov
js
cmpsl
cli
pop
ret
std
and
adc
outsl
pextrw
in
mov
ljmp
dec
mov
add
sub
lcall
mov
xchg
pop
adc
push
sub
or
lds
cmpsl
pusha
and
pop
out
ss
add
xchg
jo
dec
gs
xchg
es
and
int3
push
fstpt
lret
pop
je
stos
xchg
fsubrp
mov
cmpsl
dec
fcompl
inc
cmp
insl
jp
cmc
mov
pop
scas
test
bound
out
mov
adc
jbe
cs
lods
sbb
dec
stos
mov
inc
sbb
aam
or
mov
divl
cmpsl
jmp
pop
jbe
mov
flds
xor
xor
mov
popa
outsb
xchg
mov
pop
in
sbb
mov
sbb
mov
xor
lcall
sbb
pop
xor
add
lods
xchg
or
nop
lock
loop
idivl
adc
into
bound
daa
int3
xor
insb
outsl
cmp
imul
mov
fbld
scas
je
repz
rcll
inc
sti
mov
pop
clc
inc
xchg
dec
fwait
cld
mov
fnstcw
out
stos
and
icebp
mov
divl
sub
fnstsw
fbld
movd
mov
clc
out
jge
mov
imul
into
mov
mov
dec
adc
or
inc
xor
sbb
cwtl
mov
pop
fwait
pop
fstl
lods
rcll
xchg
mov
mov
or
jmp
add
mov
sti
faddl
shlb
out
arpl
jge
sub
jne
call
loopne
cmp
dec
mov
scas
or
push
jmp
mov
enter
xor
sbb
fidivrl
sarb
mov
xchg
loop
cmp
dec
dec
aad
xor
ret
jae
adc
add
inc
push
add
shll
or
scas
sub
jge
repnz
ljmp
mov
mov
sub
cs
fs
mov
jg
mov
sub
mov
cltd
cmp
add
or
add
test
aaa
and
fsubrp
inc
push
dec
adc
mov
add
dec
mov
orl
jp
jnp
nop
jl
mov
test
ret
scas
or
push
iret
rorb
fbstp
push
test
mov
ret
dec
push
addr16
frstor
pop
or
mov
cmpsb
enter
lret
subb
sub
negb
push
shrb
push
in
or
in
xchg
in
inc
cmpsb
xor
push
ficomps
pop
shrl
les
aas
ret
subb
adc
lods
rolb
inc
es
mov
adc
insb
xchg
add
xlat
sub
cld
or
inc
std
jge
dec
lds
sti
mov
jne,pt
test
xor
push
out
inc
test
cmc
fisubrs
push
cwtl
shrb
dec
fstpl
insl
add
dec
scas
je
addr16
lods
iret
jo
inc
cmc
imul
into
xor
add
shl
in
gs
aaa
jl
mov
jne
push
and
aas
fstpl
push
mov
mov
bound
data16
sub
pop
cltd
jne
sahf
in
lret
enter
xlat
iret
fs
mov
add
pop
pop
jge
leave
fisttpl
mov
xchg
ret
stos
pusha
push
jl
push
jl
outsl
or
xchg
sbb
es
outsb
jp
dec
addr16
jmp
enter
mov
aaa
sahf
out
xchg
mov
jp
inc
sbb
scas
push
mov
enter
incl
or
clc
cmp
pop
out
sbb
inc
dec
and
xor
call
dec
mov
aas
sub
mov
xchg
pop
or
imul
adc
les
sbb
pop
in
jmp
pusha
lea
scas
ss
out
xlat
mov
fidivl
xchg
dec
ret
repz
sbb
sbb
cltd
orl
iret
sub
push
shl
sbb
xor
mov
test
mov
or
push
out
rcrl
ja
mov
fldcw
sbb
mov
dec
mov
adcb
std
movb
lock
push
dec
mov
imul
push
sub
fbstp
pop
adc
and
jnp
and
bound
push
ret
pop
pop
sub
dec
add
popa
mov
xlat
xchg
dec
cs
and
sahf
aaa
and
aas
adc
add
out
roll
sbb
ss
bound
inc
fbstp
and
add
imul
xchg
aad
push
jbe
std
add
aad
es
ficoml
push
fstpt
adc
mov
sub
xor
aas
sub
imul
sar
idivl
mov
sub
loop
ss
negl
lock
loop
mov
aam
xchg
test
jmp
int
cmp
mov
ret
bound
or
cmp
cwtl
xlat
repnz
je
sbb
cwtl
jp
xor
mull
scas
leave
sub
xorb
ret
je
xor
iret
mov
daa
jne
jns
xor
add
adc
mov
lahf
enter
ret
insb
dec
in
fstpt
mov
or
xchg
loope
loopne
int
lea
add
cmp
notb
xchg
sub
imul
xchg
sbb
mov
jae
les
pusha
loope
out
add
clc
jmp
enter
adc
add
lock
mov
dec
stos
aaa
ss
mov
mov
loop
loopne
wrmsr
addr16
sbb
push
push
aad
cmp
lods
leave
xorl
int3
push
fcoml
out
hlt
xchg
cmp
xor
shrl
sbb
aaa
sub
mov
sbb
xor
sbb
jle
cmc
add
lods
sub
add
loopne
int
cmpsb
ds
add
jne
cld
mov
cli
ds
bound
pop
xchg
mov
testl
aaa
or
out
bound
dec
cld
inc
mov
sbb
and
push
and
pusha
je
arpl
inc
testl
xchg
lds
cltd
pop
adc
xchg
push
loop
cmp
xchg
mov
movsl
xchg
mov
dec
inc
shll
rcr
pop
in
dec
cwtl
pop
cmc
inc
aas
pop
ret
pop
fildl
add
int
or
inc
adc
push
es
ret
or
pop
mov
iret
push
inc
out
popf
cbtw
fidivrs
push
xor
pop
cli
fcmovu
mov
sub
or
ja
cwtl
jle
xor
and
popf
mov
data16
int3
pushf
movsb
test
mov
xchg
adc
sub
mov
mov
mov
push
lahf
test
mov
cmp
cwtl
in
pop
nop
cltd
lea
lea
mov
into
imul
cltd
adc
es
test
fs
jo
jp
movnti
cmpsl
mov
xlat
jno
iret
std
test
jp
jb
scas
cmp
lds
push
std
pop
aaa
orl
leave
and
fs
mov
push
jle
jnp
bound
jecxz
mov
jne
and
adc
dec
pop
mov
lock
lcall
sub
pop
ss
xchg
xchg
mov
ss
nop
mov
fbld
mov
outsb
mov
imul
push
xor
dec
lods
xchg
nop
add
push
lret
dec
mov
cmp
xor
mov
cwtl
loop
enter
add
push
xchg
hlt
lods
cs
test
mov
mov
jecxz
adc
add
mov
loope
sahf
mov
movsl
jmp
mov
cs
xor
fwait
mov
sbb
push
push
mov
xchg
dec
negb
mov
sub
sbb
testb
sbb
pop
inc
xchg
loopne
and
dec
or
push
addr16
sahf
dec
bound
shr
sti
movaps
fyl2x
xor
mov
mov
mov
xchg
pushf
sti
push
out
lea
fidivrs
outsl
popa
add
es
jecxz
and
out
mov
mov
sbb
aad
xor
pusha
dec
cs
fbstp
sub
icebp
dec
lock
sbb
int3
shlb
xchg
add
sbb
cmpsl
inc
push
cmc
shl
push
push
js
push
xor
outsb
aad
inc
push
push
popf
cmp
ret
push
inc
stos
dec
repz
mov
dec
lds
cmp
fadds
ja
inc
test
xchg
repnz
cltd
ret
popl
mov
push
jmp
outsl
fmuls
sub
push
testb
xor
or
sbb
pop
mov
mov
int
mov
lods
popf
test
cld
imul
fsub
fcoms
or
cmpsb
inc
adc
xchg
jecxz
jg
popa
pop
fmull
jne
sub
sbb
jmp
mov
std
imul
test
jg
mov
in
jg
mov
sbb
stos
sub
fsub
sbb
scas
test
shrl
or
ja
mov
cmp
adc
daa
mov
or
movsl
mov
stc
inc
add
nop
push
outsl
pop
mov
lahf
imul
insb
loopne
pop
pop
add
xchg
bound
ret
mov
dec
xor
mov
imul
ds
sbb
or
cmp
sub
test
xor
sbb
mov
add
cmc
fcoms
xchg
lea
lock
lcall
repz
je
ljmp
mov
dec
and
leave
inc
fsubrl
fcompl
xchg
xor
sub
lret
push
lods
inc
xchg
fisubl
inc
sub
icebp
dec
or
pop
jl
hlt
inc
cld
pop
call
dec
push
xchg
inc
out
jo
aam
mov
pop
stc
cmc
insl
push
jo
mov
fldenv
dec
jmp
mov
in
cmp
sub
ss
mov
loop
cli
dec
stc
das
mov
imul
je
jno
xor
add
call
mov
mov
push
inc
push
pop
lret
push
xor
dec
or
pop
xchg
rorl
in
pop
mov
dec
testb
and
or
add
outsl
add
inc
aam
mov
jl
js
imul
daa
mov
popa
icebp
jecxz
movb
insb
pop
xchg
fs
xor
negb
movsl
dec
jo
fwait
xor
je
xor
out
ljmp
lods
mov
pop
inc
mov
push
std
xor
push
pushf
cld
mov
lret
xor
fsts
xlat
add
insb
inc
out
mov
sub
lret
jg
and
mull
popf
pop
jle
test
jne
and
mov
sbb
cmp
inc
sar
cli
push
cmpsl
insl
or
scas
dec
out
gs
sbb
outsb
rcrl
mov
pop
mov
test
out
push
sub
mov
xor
cmpsl
or
mov
nop
fstpt
sbb
push
xchg
pop
dec
and
je
jg
fxch
out
rorl
mov
mov
adc
sbbb
jo
add
out
sbb
sti
dec
in
push
ret
scas
mov
jno
sub
adc
sub
mov
or
aad
adc
movsb
stos
or
ret
addr16
inc
sbb
pop
and
fdivrs
sub
push
xchg
idivb
jno
cmp
scas
subb
mov
repz
pop
dec
fildl
ja
sbb
mov
shrb
pop
jo
filds
mov
fiadds
and
movsb
inc
icebp
imul
inc
inc
mov
or
movsl
add
inc
sub
sahf
in
pmullw
fs
xchg
and
add
jb
lcall
fs
inc
jge
popa
add
ret
dec
mov
loope
mov
ss
sbb
push
pushf
cli
push
xor
rolb
push
movb
subl
lea
and
ret
popa
aas
rorl
lret
mov
inc
incb
mov
shrb
in
sbb
xchg
test
inc
xlat
push
mov
sbb
roll
mov
mov
arpl
dec
mov
xchg
loope
daa
fmulp
pop
fmul
dec
fmul
jne
outsl
push
repz
xchg
cs
push
mov
mov
mov
sub
push
iret
addr16
push
adc
inc
roll
inc
xor
negb
outsb
or
mov
clc
sti
negl
enter
into
jge
fimuls
sbb
ss
adc
std
jb
push
leave
test
leave
stos
sub
xchg
lret
sbb
ja
inc
mov
add
movsl
dec
push
xor
lods
in
fdivrl
dec
iret
pop
out
roll
outsb
add
xor
push
or
je
testb
fs
loope
mov
lods
sti
repnz
je
mov
pop
aaa
dec
fiaddl
data16
in
and
loopne
ljmp
xchg
sbb
gs
in
iret
mov
repz
dec
shl
jl
fisttpl
out
sub
push
pop
stos
je
vmwrite
or
hlt
rorb
dec
or
xlat
xor
mov
movsb
xor
mov
int
and
jae
or
push
jns
sbb
xchg
push
mov
flds
mov
js
mov
js
gs
fsubrs
adcb
scas
fsubrl
bound
add
push
mov
cli
pop
ret
sarb
sarb
mov
cmp
movsb
add
sub
cmp
mov
pop
inc
and
fcoml
jno
std
fs
xchg
sub
xchg
mov
xchg
es
jb
push
test
scas
adc
mov
xchg
fisttps
xor
scas
pop
push
hlt
xor
dec
cmp
push
jl
pop
fs
testb
jo
and
aam
daa
push
sbb
mov
lea
clc
test
dec
jmp
adc
push
push
mov
lea
mov
pop
pop
mov
push
pop
aad
out
test
push
mov
mov
xchg
mov
add
xor
pop
sahf
ja
mov
int3
adc
out
sbb
fimull
jl
dec
out
jo,pn
mov
mov
fmuls
sub
sub
xor
sbb
push
pusha
lock
js
pop
inc
pop
dec
xor
cmpsl
lods
mov
mov
and
flds
and
movsb
adc
adc
sbbb
mov
ret
pop
sub
ret
mov
xor
loope
out
pushf
jl
lock
mov
int
scas
lea
shll
cld
xor
fcompl
scas
stc
shll
mov
cmp
or
pop
sub
cld
sub
sub
sti
xchg
out
stc
cld
xchg
pop
nop
or
ret
jmp
aad
out
sbb
cmpsb
int
aas
sub
test
pop
xchg
inc
aas
cmpsb
inc
in
ret
inc
out
sbb
fdivrs
ljmp
popf
sub
lret
cmp
loop
pop
adc
bts
lock
fcom
pushf
xor
clc
stos
sbb
mov
inc
int3
jno
adc
loope
lcall
aaa
stos
dec
out
inc
mov
mov
shlb
xchg
cmp
cmpb
xchg
aad
adc
add
mov
or
cs
ja
inc
xchg
sbb
mov
addr16
xor
daa
cmp
fsubs
xlat
scas
inc
ret
pusha
jle
lahf
insl
std
nop
or
sbb
lcall
push
aas
addr16
sub
pop
roll
jmp
jg
pop
lahf
sbbb
jno
sub
adcb
dec
call
sub
pop
repz
gs
jmp
and
add
push
aaa
push
jmp
nop
fucomp
sbb
mov
or
test
mov
push
bound
xchg
push
ss
lret
mov
mov
push
cmpb
ljmp
and
xchg
mov
or
or
xchg
call
mov
pop
bound
divl
ljmpw
test
mov
mov
mov
hlt
lds
hlt
dec
mov
jge
pop
insb
negl
stos
xchg
mov
inc
push
test
andl
cmc
pop
push
cltd
sub
mov
lcall
repz
pop
sub
jne
into
addr16
push
adc
xchg
sbb
and
mov
mov
adc
sbb
mov
push
pop
fsts
cmpb
in
aam
out
or
bound
orb
pop
daa
aam
ror
xchg
leave
cmp
sub
pop
cmp
sbb
loop
leave
mov
push
mov
xchg
xchg
add
je
lahf
repnz
sbb
js
je
mov
icebp
stc
xchg
or
fwait
xchg
outsl
sub
mov
or
pop
nop
movsl
aas
xor
xlat
push
xchg
pop
loopne
cmp
mov
inc
adc
hlt
push
cwtl
jae
ret
pop
jae
arpl
pop
outsb
mov
lds
imul
rol
dec
arpl
dec
mov
enter
add
in
inc
into
iret
mov
enter
in
clc
mov
sbb
out
push
sub
push
rcrl
xor
in
insb
adc
sub
add
femms
and
shrl
add
stos
fildl
jne
ss
fiadds
aad
cmp
cli
movsl
adc
xor
test
jb
sub
ret
insl
add
and
es
loopne
dec
ds
testb
pop
in
out
mov
xor
xchg
push
test
sbb
mov
movsl
jne
leave
jle
mov
test
inc
push
push
aad
bound
movsb
pop
cli
inc
pop
push
loopne
and
test
pushf
scas
jne
cwtl
aam
xor
sbb
adc
cmp
pop
mov
cs
mov
test
jne
shrl
movsl
loope
add
sahf
and
ds
mov
shll
pop
ja
jno
pop
mov
pop
dec
dec
jg
sbb
lahf
dec
daa
imul
mov
cmpsl
test
aaa
sub
cwtl
pop
dec
dec
das
sahf
pop
lahf
ficomps
cs
xchg
inc
ret
mov
addr16
pop
std
xchg
repnz
adc
jne,pt
pop
fisubrl
inc
and
inc
pop
or
push
repnz
pop
sbb
add
cmpsl
movsb
enter
in
loopne
lods
mov
add
xchg
cltd
add
repz
cmpsb
pop
inc
icebp
adc
cmp
push
mov
int3
and
adc
or
lcall
aam
dec
mov
lret
xor
push
or
mov
mov
jl
push
xchg
aad
out
inc
mov
out
imul
imul
sub
inc
in
pushf
gs
and
cmp
and
pop
sahf
test
int3
adc
sub
arpl
dec
lock
xor
pop
in
roll
hlt
adc
mov
int
sub
xor
lds
and
push
lcall
popl
pusha
adc
jmp
sbb
test
js
xchg
mov
sbb
loop
jae
out
add
sub
daa
enter
fmull
mov
lret
mov
jp
ja
iret
test
pop
mov
cmp
xchg
add
out
jbe
sub
movsb
popf
sbb
push
movsb
jmp
inc
adc
fbstp
adc
imul
mov
sub
push
xor
push
aam
movsb
out
imul
sub
insl
push
mov
nop
cmp
mov
out
push
cmp
pop
or
xchg
insl
mov
fwait
mov
pop
jnp
jg
inc
cld
jne
pop
mov
push
inc
fcmove
jbe
cmp
outsl
movsl
mul
or
arpl
mov
pushf
in
jo
sub
outsb
lds
pop
inc
dec
push
lods
pop
add
adc
xchg
fwait
and
add
cmp
pop
add
fstpl
out
outsb
es
add
dec
je
int3
dec
push
push
loopne
mov
xchg
filds
cli
fstps
pop
xchg
hlt
push
xor
xchg
fisttpll
movsb
xor
repnz
pop
rclb
cmpsb
les
loop
mov
or
fidivl
xchg
jbe
mov
jae
pop
test
push
mov
mov
dec
int3
dec
fcmove
int3
leave
jl
enter
fisttpll
ljmp
push
cmp
mov
insl
jnp
nop
es
idivl
xchg
push
mov
mov
jo
hlt
int
inc
sub
mov
adc
push
call
sub
cmp
push
or
and
hlt
xchg
push
push
loope
int3
push
aam
ja
mov
rorb
push
mov
sub
sbb
mov
mov
dec
jbe
rcrb
mov
rcrb
cltd
ficomps
cmp
stos
sti
movsb
ds
mov
jl
sti
nop
lahf
cmp
mov
out
inc
pop
ss
jo
or
add
insl
shlb
pushf
and
sbb
ret
cmpsb
pop
div
xor
push
push
bound
inc
mov
inc
insl
jae
dec
push
orl
xchg
fldt
jne
cltd
and
repz
push
xor
stc
icebp
xchg
popa
fs
pop
xchg
push
fcompl
add
mov
dec
lret
cmp
fmul
push
lret
mov
or
ret
in
stos
or
dec
mov
in
cld
jge
das
sbb
add
aaa
test
loopne
andb
inc
into
jae
adc
jns
sub
popf
or
loopne
int3
clc
shlb
xchg
mov
pusha
mov
pop
jl
mov
pushf
mov
out
mov
lcall
cmpsl
sub
out
add
cmc
jp
or
mov
or
xorl
decl
xor
loopne
xor
mov
and
cltd
and
rcll
push
dec
and
fadds
ret
jbe
ret
add
js
xor
test
mov
push
or
lds
int3
or
inc
stos
repnz
xor
xlat
sbb
negb
aad
xor
push
stc
xchg
pop
pop
push
xlat
and
bnd
and
dec
sbb
ljmp
shrb
push
push
sbb
add
fldl
pop
rcrb
ficompl
insb
inc
or
mov
sub
push
jbe
dec
shll
movsb
aaa
xor
into
ja
es
lahf
inc
inc
pop
pop
push
rol
popa
lcall
sub
or
push
test
cld
jbe
aam
sub
repz
test
dec
fwait
jp
and
hlt
or
mov
sub
mov
cltd
in
lret
mov
test
ret
sub
sub
ljmp
mov
icebp
jge,pn
insl
push
inc
xorb
enter
xor
scas
mov
jg
sbb
lock
jbe
ret
aad
xor
mov
leave
sar
sub
fbstp
subb
mov
jmp
push
push
cmpsl
cmp
das
adc
jbe
or
cltd
cmc
adc
pusha
in
das
or
or
mov
out
fisubrl
test
sbb
das
pop
outsb
mov
adc
sti
and
or
negb
sbb
out
movsb
pop
mov
mov
sbb
fiaddl
in
push
sub
jns
xlat
push
xor
mov
not
sbb
je
mov
into
mov
ret
test
lcall
bound
popf
aas
cmp
mov
das
insl
mov
sub
sarb
rorb
jbe
out
pop
movsb
int
jecxz
add
sahf
stos
test
sub
mov
shll
sub
or
loope
outsl
cltd
inc
push
lds
push
xor
adc
xchg
lods
arpl
pop
data16
aas
imul
arpl
add
data16
xor
jnp
cmc
js
fiaddl
push
test
aas
dec
data16
cs
dec
jae
insl
ljmp
sahf
sarb
mov
lods
dec
sbb
repz
data16
cltd
test
lds
sahf
pop
and
push
pop
das
inc
xchg
adc
add
inc
cmpsb
out
and
dec
iret
sub
mov
inc
jo
or
xchg
das
push
in
xchg
dec
outsl
sub
pop
cmp
lahf
les
mov
xor
xor
testb
insl
and
jl
lret
rcrl
pop
je
or
mov
bound
std
stos
jmp
nop
outsb
mov
inc
or
insl
mov
xor
shl
add
shlb
adc
lock
in
rolb
mov
ljmp
mov
ds
xchg
rcll
scas
adc
cwtl
les
and
mov
push
pop
shrb
aad
xchg
loop
mov
add
rorl
xor
jae
xchg
pop
push
rorl
xlat
insl
shl
popa
lea
push
jns
mov
cmp
pushf
push
popa
sahf
dec
push
cmp
lods
xor
xorb
mov
or
scas
dec
cmpsl
mov
mov
jl
jb
add
push
call
inc
dec
xor
idiv
nop
lahf
sbb
mov
rolb
into
icebp
add
xchg
inc
push
mov
bound
mov
jmp
cmp
xchg
insb
and
outsb
js
fnsave
cmp
test
iret
jb
arpl
hlt
inc
cld
addr16
xchg
mov
sbb
mov
ret
lahf
outsb
scas
pop
dec
clc
loope
inc
fidivrs
out
aad
or
aaa
das
cwtl
or
test
jnp
bound
inc
out
pop
mov
aam
mov
lea
and
into
xchg
and
push
aam
mov
cmp
xchg
enter
adc
sarb
aam
pop
cmpsb
ficompl
push
bound
mov
push
xchg
sbb
stos
add
nop
pop
js
sub
cmc
leave
pop
outsb
xor
pop
jne
rclb
das
mov
loope
jb
mov
sbb
call
cmp
fcmovnu
icebp
int
mov
cmc
call
or
lea
cld
dec
sahf
pushl
in
sub
lret
cs
testb
mov
xchg
das
inc
jo
xlat
jns
cli
insl
pop
ljmp
sbb
cmp
adc
lcall
ljmp
inc
idiv
sub
jl
or
and
xchg
std
sub
test
dec
jae
adc
xchg
sub
sahf
mov
xor
inc
enter
pop
xor
leave
sbb
push
test
mov
mov
or
xchg
push
out
nop
push
xlat
std
rolb
out
jg
shrb
sti
movsb
or
adc
sub
jnp
fsub
dec
pushf
or
lret
pop
mov
xor
imul
repnz
mov
xchg
shlb
inc
mov
pop
and
out
rorb
daa
add
push
adc
xchg
push
cmp
jg
jp
push
cltd
scas
xlat
out
push
dec
or
pop
mov
push
les
ljmp
mov
cmc
or
clc
xchg
jns
sub
mov
xor
mov
fldl
mov
shlb
mov
cld
pop
les
pop
scas
stc
std
inc
add
dec
sti
pop
aaa
lock
fidivrs
shr
mov
pop
sbb
shrl
lret
inc
js
sub
push
sub
ljmp
jl
mov
call
outsb
pop
mov
push
sbb
scas
cmp
push
scas
jae
test
stc
lret
jns
dec
xor
push
mov
push
fstpt
insl
bound
xor
loop
insl
aas
movsb
mov
test
sub
mov
fisubrl
add
sahf
add
cltd
dec
jge
adc
bound
xchg
leave
mov
pop
inc
gs
dec
cld
push
shr
mov
jge
ljmp
rcll
cmp
push
xor
mov
outsl
and
mov
inc
leave
inc
pop
std
popa
scas
or
ja
testl
inc
adc
testb
push
and
push
ds
dec
inc
xchg
mov
pop
xchg
mov
cmp
adc
jle
aad
sbb
push
inc
and
out
inc
add
loope
and
mov
add
pop
clc
and
xor
or
inc
and
or
jp
in
leave
mov
imul
or
jge
out
pop
push
iret
pop
mov
mov
pop
scas
push
xchg
push
cmp
dec
add
cwtl
jnp
or
sub
or
ss
mov
sbb
stc
mov
call
mov
or
imul
or
in
mov
add
inc
repnz
lahf
pop
popa
and
cwtl
xchg
push
xchg
ret
std
mov
loopne
pushf
mov
stc
fidivl
loopne
test
je
clc
inc
fistpll
xchg
nop
mov
test
adc
jno
dec
daa
into
call
push
push
fwait
mov
xchg
pop
mov
jmp
lods
mov
cmp
xchg
sub
cmp
sub
pop
xlat
das
mov
cmpsl
and
xlat
nop
jns
pushf
das
xor
xchg
flds
out
rclb
fnstcw
outsb
push
stos
lock
adc
or
or
cmpsl
roll
sub
sti
fadd
sub
and
and
mov
std
dec
bnd
bnd
mov
in
xor
mov
popa
adc
mov
push
sub
loope
jb
cli
lahf
inc
jle
into
mov
or
mov
push
test
sbb
cmp
push
ljmp
xchg
cmpsb
lret
iret
movsb
hlt
push
in
ficompl
dec
mov
ret
hlt
mov
dec
sub
rcr
add
adc
lret
enter
adc
mov
jg
sti
push
fcomip
in
mov
dec
inc
adc
mov
gs
pop
imul
movsl
sub
push
pop
repnz
push
lcall
mov
int
pushf
dec
cmpsl
inc
push
ja
fildll
loop
loope
hlt
fistl
mov
jge
jmp
lret
pop
dec
adc
loope
mov
push
sahf
pop
mov
imul
mov
mov
jae
movsl
sahf
stc
and
cmpsb
inc
test
push
mov
test
ret
xor
jne
test
pop
cld
fdivs
arpl
sbb
dec
es
outsl
mov
xchg
fcompl
test
fistpll
fs
lds
push
or
pop
dec
cs
jb
scas
adc
sbb
or
fidivs
pusha
push
fldl
xor
dec
mov
pop
mov
sahf
sets
stc
mov
jne
outsb
insl
xlat
repz
adcb
subl
clc
mov
test
mov
inc
out
push
add
fbstp
sub
push
movsl
sbb
dec
mov
jle
push
xchg
sbb
jae
lock
sbb
and
jns
or
or
jb
clc
dec
add
jp
add
and
dec
sub
cli
pavgb
sbb
enter
fistl
mov
mov
loope
imul
dec
and
mov
push
jle
mov
movsb
test
and
insl
ja
push
lret
push
pop
inc
cmpsl
mov
push
sub
pop
insl
jle
fisubrl
leave
rclb
cmp
add
jne
add
sbb
arpl
sbb
shll
imul
fisttps
aas
mov
push
std
lea
inc
pop
mov
lret
mov
insl
inc
pushf
repz
iret
ret
mov
jg
sub
call
xlat
dec
jo
ss
lods
and
dec
and
cmp
icebp
or
incl
lds
bnd
das
add
popa
push
push
sub
push
sub
imul
add
out
push
mov
mov
mov
adc
push
adc
xor
ss
mov
jecxz
arpl
outsl
nop
and
fs
mov
mov
fsubs
adc
sbb
iret
jp
dec
or
and
cltd
inc
imul
push
loop
cs
or
insl
jne
adc
jno
adcl
xchg
test
jno
inc
clc
push
add
out
mov
lods
add
xchg
dec
movsb
mov
xchg
outsb
scas
jnp
mov
inc
andl
and
orl
mov
mov
push
mov
mov
lds
push
test
lods
push
inc
addl
cmpsb
mov
and
lds
shll
pop
daa
sub
adc
cmpsb
dec
add
mov
js
popa
cmpps
push
pop
jp
test
pop
pusha
dec
push
rcll
call
shlb
lods
adc
or
jno
inc
jle
arpl
dec
mov
out
mov
cs
or
sbb
sub
cmp
mov
push
push
lods
jne
fld
adc
imul
sbb
std
cmp
stos
addr16
push
addr16
mov
mov
dec
mov
xchg
out
mov
jns
nop
and
jne
pop
xchg
and
into
xchg
out
and
fadds
xor
ficompl
xor
rcrb
fimuls
out
ja
adc
test
repz
faddl
ljmp
jb
mov
cmp
push
ds
push
xor
pop
aam
pop
shl
mov
notl
aad
fwait
lahf
mov
sbb
clc
lret
xor
loope
mov
push
mov
push
jns
mov
dec
mov
push
cmp
sub
or
push
jns
or
dec
add
push
push
cmpsl
lock
add
add
jg
push
xor
popa
sub
ss
pop
and
xchg
push
lea
push
call
fwait
mov
jns
inc
jg
outsl
or
pop
lret
jg
imul
jmp
jae
mov
cmp
push
or
inc
jmp
mov
mov
leave
dec
loope
push
pushf
xlat
or
ds
pop
mov
in
cmp
cmp
mov
xor
xlat
lods
mov
pop
roll
clc
xor
xor
or
jno
sbb
ss
arpl
sub
lcall
clc
pop
std
push
daa
inc
hlt
push
push
lock
cs
gs
mov
or
cwtl
inc
xor
dec
inc
jp
xchg
shrl
dec
nop
sub
jl
sbb
lret
adc
or
andl
adcl
lds
jge
pop
sub
movsl
test
xchg
inc
fisubrl
jmp
lahf
pop
sbb
cmp
into
xchg
mov
xchg
outsb
xchg
data16
xchg
mov
sub
mov
sbb
out
dec
divb
and
mov
push
daa
push
push
fmuls
cmpsb
je
insl
ret
fstps
sahf
inc
mov
mov
mull
jae
adc
lods
adc
mov
sahf
push
add
arpl
or
rcrb
pop
inc
das
arpl
arpl
mov
mov
push
xchg
sub
mov
addl
loope
nop
int
jmp
lds
inc
pop
cmpsb
je
addl
mov
ret
aaa
pushf
push
out
mov
sbb
lods
clc
jecxz
add
sub
mov
lock
movsb
arpl
pop
push
jl
cmp
dec
out
call
pop
scas
mov
xchg
inc
mov
jg
jg
pop
popf
dec
outsb
cmp
and
cmpsl
xchg
fistps
pop
sahf
and
decb
sbb
ljmp
add
out
fwait
jnp
dec
push
fistps
add
mov
imul
pop
ja
push
rcll
sbb
inc
imul
xchg
fcmovbe
out
sbb
call
sbb
jnp
shl
inc
mov
lcall
mov
icebp
ds
push
dec
xchg
sahf
enter
fcompl
lods
xchg
mov
cmp
adc
jge
and
arpl
mov
stos
loope
xor
mov
imul
inc
push
inc
jno
mov
mov
das
and
xor
mov
push
mov
in
adc
repnz
aaa
add
mov
lret
jns
mov
stos
dec
rolb
in
push
cmp
andl
cltd
sbb
sub
loop
mov
imul
into
and
jge
lods
loope
jo
cmpsb
mov
inc
mov
test
xorb
mov
push
sub
add
call
int
add
nop
cmovne
push
push
jnp
push
jns
cmpsl
push
xor
push
shlb
mov
mov
sbb
repz
push
add
and
push
das
xchg
in
jmp
in
imul
lret
shlb
push
dec
jg
jae
dec
adc
adc
jl
mov
dec
dec
outsb
ficoml
mov
das
dec
push
outsb
loop
ss
cld
jne
push
xchg
jmp
add
out
dec
test
sahf
int
inc
push
adc
fistpl
lret
mov
inc
pop
dec
fdivs
or
test
mov
out
mov
jg
stc
xor
cld
cwtl
adcb
sub
cmpsl
mov
repnz
pop
stos
xchg
popf
pop
aad
adc
mov
and
in
scas
jp
xchg
push
or
fstl
stos
xor
pop
jno
adc
rcrb
lea
adc
push
mov
mov
mov
lock
cmp
clc
sbb
test
out
xor
lds
sbb
neg
mov
cmpsb
push
xchg
dec
or
xchg
addb
adc
roll
cmpsb
mov
mov
or
xchg
or
adc
cs
clc
mov
iret
inc
lods
rorl
pop
xor
scas
xor
shl
and
cli
mov
je
pop
mov
mov
fcoms
push
in
fbld
sbb
adcl
push
xchg
das
std
inc
push
aam
push
scas
mov
stos
cmp
xchg
es
mov
stos
sub
sub
mov
adc
xchg
repnz
mov
cmp
sub
push
dec
mov
mov
and
ret
loope
popa
std
in
add
pushf
mov
int
jp
call
int3
jbe
or
stos
jl
sub
out
jmp
or
and
xchg
adc
pusha
and
pushf
mov
shlb
in
pop
lahf
jb
sub
or
in
dec
insl
mov
jg
mov
in
enter
add
lret
xchg
test
sbb
mov
fisttpll
aaa
sarl
jo
cli
xchg
sbb
movsb
fsubrl
lret
jp
mov
xchg
sbbl
insb
add
fildl
das
jno
mov
or
or
mov
fwait
std
add
fsubrp
int3
cmp
jge
in
ret
push
inc
enter
das
aad
scas
xchg
mov
loop
ja
imul
mov
xchg
aas
loopne
pop
jmp
jmp
jno
add
xchg
pusha
push
int3
add
xchg
push
mov
in
daa
sbb
cmp
insl
or
daa
clc
jecxz
pop
lods
push
incb
lahf
jb
push
leave
pop
scas
arpl
sbb
repnz
arpl
and
add
xchg
je
mov
mov
jecxz
and
adc
ja
sti
pusha
arpl
xchg
mov
or
push
movsl
pop
es
xchg
push
fwait
je
lahf
pop
lea
cmp
fisubs
mov
sbb
and
lahf
xor
insb
mov
pop
inc
movsl
icebp
hlt
sub
cmp
rcrb
inc
repnz
jp
int
jmp
lock
mov
mov
cld
jecxz
sbb
dec
insl
bound
repz
movsl
enter
xchg
shll
jb
in
in
pop
hlt
sbb
in
inc
inc
js
pushf
mov
ja
ret
out
push
cs
int
and
cmp
cmpsl
push
cmp
fsub
fbstp
hlt
mov
test
pop
cli
leave
stos
int
cltd
push
mov
xchg
pop
mov
lahf
int3
inc
in
sbb
cmpsl
push
in
lods
pop
daa
or
hlt
mov
mov
daa
pop
or
das
xchg
adc
stos
jecxz
mov
pop
mov
inc
fstl
lock
adcl
add
shrl
ds
nop
mov
xchg
inc
inc
mov
fcmovbe
or
mov
mov
sti
stos
loopne
pusha
mov
into
pop
fisubs
mov
sub
adc
inc
dec
ja
repz
out
pop
fdivrs
cltd
xchg
hlt
sub
sub
jb
fimuls
cmp
clc
mov
pushw
test
sbb
dec
dec
rclb
repnz
adc
sub
sti
or
cwtl
fnstenv
xor
xor
mov
add
pop
inc
pop
sbb
sahf
fdivr
and
lcall
sti
inc
jo
mov
std
add
push
sbb
or
push
pop
sub
or
mov
sub
int3
shlb
cmp
adc
movb
mov
out
sub
xor
xchg
mov
mov
dec
shl
ljmp
cltd
ds
push
dec
int
dec
aas
into
scas
jnp
jl
jp
mov
pop
fimull
int
adc
push
inc
gs
adc
mov
fwait
mov
aaa
pop
psubusw
adc
lock
inc
mov
mov
stos
fmuls
add
sbb
cmp
jp
and
stos
test
pop
movsb
insw
push
and
fmul
sbb
repz
cmpsb
jne
dec
inc
xlat
xchg
xor
addb
popf
stc
or
int
dec
xor
mov
jno
mov
jecxz
clc
push
and
xor
push
xor
xor
fnstcw
pop
repnz
fs
mov
cmpsb
jl
mov
mov
adc
call
in
jp
and
lret
dec
or
dec
arpl
mov
cld
push
inc
lods
iret
pop
outsb
stos
std
movsl
addl
ds
hlt
xchg
into
enter
test
add
push
push
in
cwtl
iret
and
jbe
xor
nop
pusha
gs
xor
mov
sbb
jecxz
out
rclb
mov
xor
push
test
push
jmp
sub
arpl
push
and
nop
stc
pop
int
cmp
and
lock
dec
test
lock
add
xchg
dec
insb
insl
aaa
popa
jb
mov
xchg
dec
adc
mov
or
out
pushf
call
jle
push
inc
mov
xor
scas
cwtl
test
in
xor
cwtl
in
aas
aam
sbb
insl
sbb
loop
icebp
cmp
in
pop
js
icebp
loopne
adc
adc
arpl
aad
outsb
inc
pusha
notb
fnstcw
add
inc
or
in
loop
inc
cli
arpl
mov
imul
cmp
xchg
aad
cmpsl
mov
lcall
in
add
pop
pop
repz
xchg
jo
jecxz
push
mov
pushf
int3
fwait
pop
aad
js
jge
pusha
pop
test
mov
loop
int3
adc
roll
and
mulb
mov
cmpsl
scas
dec
popa
xor
sub
inc
lea
jmp
inc
add
dec
inc
xlat
test
loop
ljmp
sahf
pop
outsb
aas
negb
jnp
pop
lcall
pop
pop
lods
sbb
add
cmpsl
pop
cmp
push
add
cmpsb
and
pop
rcrl
inc
ret
xchg
call
xchg
add
or
add
cs
and
sbb
inc
mov
and
xlat
lret
push
add
cmc
jle
jae
cltd
call
or
int
pop
mov
xlat
push
push
ljmp
jbe
pop
test
push
pop
loopne
cmpl
xlat
fnstenv
jne
mov
inc
or
sbb
insl
sbb
cld
inc
lea
jnp
int
sub
lcall
jno
nop
jmp
mov
jg
lret
xchg
sub
shrb
je
xor
mov
das
jne
push
rcrb
cltd
add
leave
outsl
cli
sarl
fidivrl
movsb
into
sbb
stos
jnp
xor
or
cltd
or
out
jo
add
pop
or
popa
test
das
dec
arpl
inc
inc
aaa
xchg
cld
fisttpl
push
push
jbe
xchg
repnz
les
gs
imul
mov
sub
sub
mov
or
adc
adc
and
aaa
ja
icebp
push
fildll
outsb
outsb
mov
push
mov
sub
notl
mov
nop
xlat
pop
xor
stc
data16
sbb
gs
xchg
push
fwait
or
idivb
push
mov
int3
mov
ret
aas
fsubs
mov
inc
fwait
lods
jns
arpl
movsb
pop
jbe
adc
sbb
xor
xor
mov
mov
dec
dec
pop
pop
xor
aam
xchg
add
stc
add
iret
gs
repnz
jg
ja
lcall
mov
fbstp
mov
leave
cmpsl
xor
xchg
dec
repz
outsb
out
inc
das
repnz
xchg
lods
mov
ljmp
lea
jecxz
inc
outsb
scas
data16
xchg
or
mov
lds
inc
push
js
mov
insl
dec
iret
stos
fsub
jecxz
xor
movsb
jb
fwait
sbb
into
pop
mov
insb
push
push
mov
inc
sbb
js
jo
imul
jb
jmp
and
cmp
xlat
push
test
inc
cli
pop
rcrb
movsb
cwtl
icebp
addr16
cli
lods
or
and
das
xor
hlt
aam
or
inc
or
sub
and
ljmp
repnz
pop
scas
test
dec
add
or
dec
add
mov
std
rorb
mov
xchg
and
fidivs
push
mov
imul
cmpsl
push
das
pop
out
jg
add
sbb
mov
adc
cmpsl
fisubs
or
gs
sahf
fildl
sub
pusha
arpl
sub
sbb
in
jmp
ja
adc
cmp
inc
enter
int3
xor
mov
xchg
add
mov
and
pop
push
pusha
in
popf
in
push
jp
leave
das
aad
ret
dec
pushl
adc
in
sbb
popf
and
push
sbb
mov
scas
pop
out
pop
push
and
call
stos
pop
in
je
pop
adc
mov
cltd
lods
mov
inc
push
gs
out
loopne
mov
sti
cs
test
mov
mov
dec
jge
xchg
mov
icebp
xor
clc
mov
lods
lods
dec
jnp
cwtl
mov
imulb
or
cmp
gs
inc
push
into
adc
test
lds
in
xlat
xchg
outsb
push
arpl
jae
or
pusha
mov
js
fistpl
mov
pusha
jp
in
push
scas
sbb
enter
arpl
fcmove
lret
cmp
shll
adc
idivb
in
loopne
fisubrs
es
dec
inc
mov
dec
dec
push
inc
sbb
clc
loopne
ljmp
mov
popa
in
adc
mov
repz
pushf
js
xchg
jmp
movsl
jle
pusha
out
xor
nop
xor
repz
popf
jae
fdivs
xchg
mov
dec
push
dec
adc
xchg
nop
popf
cmpsl
and
dec
cmc
lea
mov
scas
insb
mov
fistl
jnp
lock
nop
jl
mov
push
in
mov
inc
scas
dec
cmpl
fldl2t
popa
and
ret
jg
jmpw
sbb
push
jbe
sbb
cmpsl
and
aam
fcoml
fidivl
es
sub
or
mov
xchg
dec
in
mov
mov
push
xlat
add
in
es
popa
sbb
in
push
or
pop
adc
cs
mov
cwtl
jle
mov
gs
ljmp
jg
sub
pop
mov
stos
mov
cmc
aad
loopne
mov
out
mov
cmp
sub
rcrb
cmp
mov
dec
cmpl
mov
dec
mov
in
stos
ljmp
sub
mov
jne
std
jbe
cmp
or
mov
sarb
jo
out
or
out
daa
dec
or
negb
rcrb
xchg
or
pop
or
push
inc
mov
adc
xchg
in
insl
stc
push
ljmp
fistl
mov
push
neg
lahf
test
mov
mov
fimuls
les
outsb
sub
aas
sbb
in
pushf
clc
or
cmp
cltd
negb
ret
in
imul
jo
mov
or
rcl
arpl
jb
and
sbb
push
bound
not
loope
adc
or
out
imull
pop
fld
mov
cli
fistpl
jo
xchg
iret
sub
out
xchg
pushf
adc
stos
xor
test
jns,pn
lock
leave
add
aas
cs
das
push
push
push
outsb
xor
cmp
adc
test
mov
and
and
in
xor
jno
cmpsb
sti
inc
and
xor
cmp
inc
adc
pop
cmc
lcall
pop
jb
dec
call
scas
cmp
popa
xlat
xchg
xchg
loop
scas
mov
out
and
cltd
test
adc
jl
loopne
fidivrs
push
lods
mov
cmp
xor
mov
pop
aam
or
cmp
inc
ja
mov
fiaddl
xlat
js
sbb
arpl
es
or
sub
xor
scas
and
ret
std
jbe
cmp
mov
sub
dec
mov
mov
enter
outsb
xor
jmp
jo
btcl
mov
jno
sub
mov
inc
and
mov
inc
and
lret
pusha
and
fcoms
lds
adc
cltd
adc
xchg
lods
pushf
fwait
or
or
pop
fiadds
aad
addr16
add
lea
test
xchg
sarb
jmp
loope
fcomps
add
fidivl
xchg
jo
sub
cmp
sub
imul
rcrb
pop
push
mov
jecxz
sub
jl
dec
js
in
loop
sbb
add
adcl
imul
das
imul
xchg
push
xchg
xchg
daa
scas
cmp
fsubrs
scas
mov
or
je
cwtl
shll
jb
dec
stos
xchg
xlat
int3
bound
repnz
fistpll
js
jecxz
dec
lds
mov
ja
sarb
dec
mov
notb
cmc
iret
fidivrs
rorl
inc
dec
lea
mov
notb
mov
mov
pop
inc
dec
push
sub
rolb
adc
ja
popa
dec
xchg
mov
pop
lds
iret
sbb
mov
les
fiaddl
inc
ja
stos
addr16
xchg
add
nop
out
dec
push
js
cli
call
xchg
mov
xchg
mov
lea
ret
push
push
lods
imul
xlat
pop
leave
icebp
sub
xor
xor
lcall
dec
push
mov
sub
jne
cmpsb
hlt
fidivrs
push
sub
adc
mov
sub
adc
ja
je
push
mov
sub
fsubp
mov
int3
mov
jle
mov
and
cld
xlat
jmp
jmp
shll
inc
mov
sub
mov
cmp
jb
ljmp
fdivp
pop
sub
add
and
daa
stos
sub
pushf
mov
rcl
and
mov
mov
je
mov
roll
push
xchg
push
mov
popf
jle
adc
clc
ret
push
sub
pop
or
jnp
ss
insb
fsub
cmp
mov
cmp
and
cs
aam
rolb
sbb
into
pop
jmp
adc
mov
arpl
imul
cmc
mov
mov
mov
mov
stc
mov
lock
dec
push
iret
js
outsb
inc
outsl
mov
jne
lcall
js
addb
inc
push
sbb
insb
xchg
stos
and
jg
jne
inc
pusha
xchg
jle
lret
stc
pop
jne
fisubrl
std
adc
mov
fstps
imul
cwtl
sub
mov
cmc
push
out
movsb
jno
pop
jp
fsubs
lret
xchg
pop
mov
fs
dec
insb
jg
jo
pop
cs
cmp
rcrb
mov
out
in
mov
mov
xchg
mov
lock
push
lods
jle
cmp
inc
xor
imul
hlt
mov
int3
cmp
cltd
fistps
or
jge
cmpsb
fcmovu
enter
test
push
jp
jo
dec
fisttps
push
pop
fs
shlb
data16
mov
jmp
pushf
cs
lcall
lret
lahf
pop
je
mov
nop
rclb
test
xor
cltd
sbb
xor
push
inc
into
movsb
mov
sub
cmp
clc
jnp
and
add
movsl
and
outsb
mov
mov
nop
out
xchg
dec
pusha
aam
push
cwtl
xchg
mov
shll
sbb
mov
push
xchg
push
ljmp
jp
xchg
cmc
into
xchg
adc
rcll
jmp
int3
sahf
push
cmpsb
stos
jl
xchg
jmp
adc
dec
adc
sub
dec
dec
inc
mov
es
add
fists
mov
pop
push
ret
push
mov
in
inc
out
rcll
int
mov
stos
jae
jns
jmp
inc
or
xchg
pop
dec
fwait
push
jae
fistps
insb
mov
xor
mov
mov
sub
and
ds
int
push
or
adc
in
movsb
jbe
popf
sbb
fwait
lea
imul
jb
add
pop
ficompl
ret
sub
pop
xchg
dec
bound
out
mulb
jmp
and
rcrl
sbb
fldln2
jg
mov
sti
imul
mov
aam
shr
inc
cmp
pusha
shrl
jno
push
fwait
xchg
push
dec
or
sbb
lds
sahf
ret
pop
adc
mov
ja
fldl2e
xchg
loopne
jl
mov
cmc
shr
aas
mov
int
sbb
inc
imul
or
ljmp
sub
iret
lock
movsl
add
hlt
popf
in
lods
mov
rorb
xchg
test
repz
cmp
gs
mov
adcb
leave
jae
mov
xchg
inc
bound
addr16
imul
nop
out
lret
mov
jne
xor
addr16
add
pop
lahf
jae
inc
test
pop
inc
stc
cmp
stos
popaw
sub
inc
mov
in
xchg
out
in
jg
aam
ljmp
jmp
add
orb
mov
lcall
and
xor
out
inc
ljmp
mov
push
pop
stc
int
gs
adc
mov
not
pushf
lret
rcrb
fidivrl
std
ret
push
call
pop
xrelease
ret
into
inc
int
mov
shl
cltd
mov
mov
jl
xlat
stos
mov
icebp
das
and
xlat
sub
fstp
pop
cmpb
mov
push
push
sbb
inc
dec
in
in
sub
fidivrs
aad
testl
or
enter
xor
cmp
cs
mov
repz
fcompl
xchg
mov
leave
fsubrl
or
pop
sbb
sbb
cmc
data16
jle
inc
cs
jmp
ds
dec
cmp
scas
andl
mov
mov
lcall
jecxz
stc
loop,pt
test
mov
push
push
and
dec
cmp
iret
inc
and
adc
int3
bound
mov
and
jns
fs
jge
xor
les
rolb
fistpl
dec
mov
and
mov
jmp
shrl
aam
jnp
lods
arpl
ret
inc
in
sbbl
loopne
and
arpl
dec
jg
loop
aaa
mov
movsl
pop
mov
sub
shlb
imul
ret
pop
push
xor
lcall
movsb
mov
movsb
loope
jne
cmc
repz
and
mov
or
dec
mov
lea
ret
or
aam
into
iret
and
cwtl
out
mov
movsl
jge
push
addr16
ret
dec
mov
jl
mov
mov
mov
adc
dec
movsl
sub
sub
addb
fisubrl
out
es
sahf
or
dec
fwait
aam
mov
jo
xchg
lahf
cmpb
xchg
andb
lea
cmp
dec
out
prefetch
push
insb
sti
fs
dec
adc
dec
push
inc
lahf
stos
or
fisubl
jne
je
add
lahf
lret
push
or
test
mov
cld
hlt
jg
pop
xchg
cmp
mov
out
lret
test
inc
stos
inc
test
dec
push
fmull
ljmp
mov
xor
bound
dec
xchg
ds
mov
mov
mov
adc
cmp
dec
jge
mov
sbb
mov
pop
adc
lcall
and
jg
push
enter
dec
and
cmpsl
mov
xor
jns
es
in
jbe
xor
shrl
push
cmpsl
mov
sbb
insb
rcll
xchg
shl
jge
inc
enter
add
call
jecxz
adc
mov
out
dec
imul
mov
in
sbb
lcall
ror
sbb
inc
xchg
out
shll
mov
cmp
cmp
cmp
mov
ret
cld
jno
dec
or
daa
add
sub
scas
fisttpl
add
jns
movsb
jae
adc
dec
push
xchg
inc
pause
sbb
lods
push
dec
or
test
or
and
mov
std
jnp
cltd
rcrl
sub
orb
vcvtsi2sd
mov
imul
call
shlb
adc
jo
inc
cmc
ss
stos
jmp
or
add
push
sbb
sub
mov
scas
imul
lds
sub
sti
adc
cmp
dec
and
xor
iret
pop
add
xor
xor
sarb
or
sub
adc
push
inc
fisubrs
or
jae
jb,pt
inc
inc
ss
sbb
jae
mov
sub
mov
inc
and
pop
xchg
gs
inc
gs
cmc
ja
rorb
mov
cmc
stc
cmc
and
sub
cmp
jns
pop
cmpsl
add
js
xchg
sub
inc
and
dec
clc
push
inc
sub
and
ja
std
xchg
dec
repnz
test
mov
mov
pop
pusha
dec
out
adc
push
fstpl
cmp
dec
mov
mov
xchg
push
pop
cmpl
jnp
mov
xor
cmp
daa
add
enter
xchg
fisubs
stos
in
sub
pusha
clc
nop
shlb
icebp
je
into
iret
movsb
xchg
test
js
mov
fs
dec
inc
je
sahf
out
addr16
fsubp
into
scas
adc
movsb
popf
test
cmp
stc
and
popf
sbb
jns
imul
rorl
insb
cs
cmc
xchg
rcrl
sub
in
xorl
test
into
xchg
jb
and
and
in
jo
jge
add
bound
fists
jecxz
movsl
pop
gs
sub
ss
out
or
cwtl
loopne
and
pop
push
pop
aam
xor
lods
inc
out
shlb
xchg
daa
int3
inc
in
cmp
cmp
dec
mov
push
repnz
je
and
fcom
subb
call
jecxz
cs
daa
and
jbe
into
aam
outsb
push
add
inc
dec
flds
inc
pushf
test
negl
leave
loop
repz
ja
adc
mov
in
das
cmp
xchg
jle
aas
and
jno
aad
jns
leave
iret
lea
xor
ljmp
aas
xor
jae
movsb
push
mov
imul
cwtl
and
ljmp
push
pushf
das
inc
inc
std
fs
lods
hlt
fisubl
clc
mov
pop
and
decb
dec
jo
or
pop
loopne
xchg
sbb
int
add
and
in
fcomps
push
hlt
add
mov
repz
addr16
arpl
pop
push
push
pop
pop
push
fldenv
add
hlt
adc
sub
test
cmp
popa
in
sahf
cmp
fsubr
and
scas
dec
push
dec
and
mov
mov
sbb
xor
inc
cli
stos
daa
ss
push
pop
mov
cmovg
test
sub
adc
sub
xorb
repz
call
adc
es
pop
xor
jp
xlat
sbb
out
xchg
push
loope
test
sti
cmc
xchg
mov
push
jp
sub
pop
adc
pop
jo
inc
pop
shll
or
dec
repz
int3
push
push
rcrl
push
add
fdivs
sbb
sahf
xchg
dec
mov
inc
dec
add
mov
aas
xor
out
xchg
pusha
pop
xchg
add
sbb
lods
and
sbb
pop
in
dec
shll
fdivrl
sbb
mov
imul
pop
outsl
add
push
jo
shl
and
adc
or
pusha
add
add
mov
test
jbe
xchg
ret
sbb
in
ret
lcall
mov
pop
cmpsb
lret
movsb
push
es
rcll
sub
pop
jp
add
test
add
call
jb
dec
test
cmp
add
ret
cmp
pop
xor
mov
inc
mov
xor
push
fistpll
sub
sti
loop,pn
jae
sub
inc
cltd
xor
mov
stos
jp
or
aam
pop
jle
iret
xchg
inc
pop
mov
js
mov
loope
adc
xchg
cmpsl
xchg
pop
adc
mov
mov
dec
inc
pop
inc
adc
push
cmp
clc
dec
xor
and
jge
pop
mov
jp
xchg
add
cli
mov
aad
dec
nop
iret
cmpsl
jg
dec
push
cmc
push
lret
je
inc
mov
movsb
pop
fcoml
pop
mov
jae
test
or
inc
in
rcr
inc
mov
mov
jmp
xchg
mov
cld
popf
sub
jg
out
fcoml
fdivl
repz
pop
sub
sub
add
cmp
sti
lods
sbb
jae
jns
or
ret
sub
pop
sarb
jmp
popf
ret
lods
push
jge
idivl
xchg
sub
jl
sub
xchg
stc
dec
fnstcw
cmpsl
pop
rcrb
inc
and
sbb
adcb
ds
push
and
iret
cmpsb
pop
in
dec
sbb
add
loopne
clc
or
inc
xorl
mov
sub
jns
xchg
addr16
sub
fadd
shr
mov
out
shlb
mov
add
pop
lock
sbb
in
xor
mov
and
adc
jae
fistl
push
jle
outsl
es
mov
gs
adc
fcomip
and
add
xchg
ds
gs
sub
aad
xor
sub
cmp
shll
sbb
aam
add
jbe
dec
ds
push
fnstcw
addr16
inc
inc
or
insl
test
push
call
lcall
shl
inc
enter
push
and
rcrb
inc
std
mov
lods
std
add
xor
std
outsb
sti
inc
and
mov
jns
lods
or
jae
pop
je
sbb
ret
adc
cmp
dec
and
sub
or
and
jne
test
test
dec
mov
aad
hlt
imul
mov
mov
jmp
cmc
fcoml
xchg
mov
xchg
jle
dec
cwtl
pop
mov
shll
or
xchg
push
push
adc
pusha
jmp
stos
sbb
imul
dec
cmpsb
out
jmp
mov
add
mov
dec
lcall
or
cli
and
mov
divl
push
hlt
neg
dec
inc
mov
into
repz
loopne
sub
loopne
ljmp
pop
jecxz
sarl
mov
rorl
insl
adc
fsubs
jbe
mov
cwtl
lea
push
and
mov
push
cmp
ljmp
adc
push
inc
rcrb
test
push
mov
xor
fcmovu
add
push
outsl
push
fisubrs
mov
and
popf
mov
sub
or
ret
cmp
out
add
popa
insb
dec
jne
icebp
mov
sub
fnsave
in
xorl
add
mov
popf
fsubrs
cmpsl
fiaddl
icebp
cmp
cmp
push
ja
fs
add
xchg
mov
arpl
dec
shll
std
sar
push
stos
mov
jl
jb
mov
and
shr
xor
sbb
frstor
cmp
xchg
sbb
or
mov
bound
lods
out
xchg
cltd
xor
lahf
cmp
imul
mov
arpl
aas
dec
out
sbb
rcl
pusha
xlat
push
rolb
std
ffreep
fbstp
popa
aam
or
stos
lret
loop
sbb
test
insl
or
and
pushf
xor
cmp
fdivrl
cltd
popf
cmpl
mov
jb
and
fimuls
mov
mov
fiadds
ljmp
lds
icebp
push
xchg
loope
xor
push
push
addb
mov
push
jle
notb
lds
test
sti
addb
or
or
ret
push
gs
testl
mov
scas
out
inc
or
or
cmp
ljmp
adc
shr
fstps
popf
jp
sti
cmpsb
je
test
lcall
inc
out
push
imul
andb
mov
and
xor
lods
pop
xchg
sbb
addb
push
cld
and
rorl
jp
jnp
inc
fwait
sub
cmpsl
add
jo
mov
pop
mov
int
iret
shrl
lret
enter
test
xchg
xchg
dec
int
sub
subb
mov
fcom
scas
es
clc
or
cmp
sub
adc
icebp
push
insl
cmp
fs
outsl
aaa
jg
outsb
daa
xor
jbe
lods
test
repnz
jp
push
outsl
inc
loop
jp
xor
bswap
sub
pop
pop
jge
xor
das
call
and
cltd
test
push
xchg
scas
jbe
dec
jle
imulb
jne
mov
jb
testb
int
lods
push
andb
push
lds
stc
rorl
or
dec
xchg
jmp
lret
or
insl
insb
cmpsb
xor
jecxz
test
mov
mov
lcall
mov
jns
mov
add
in
xorl
test
jle
xchg
mov
or
iret
in
inc
in
lea
mov
cli
dec
test
fdivrp
pop
in
addr16
and
nop
popf
in
adc
sbb
add
shrb
and
sahf
dec
sbb
fldt
test
negb
cld
ja
xchg
imul
sti
cli
nop
dec
std
aad
cmpsl
xchg
js
inc
in
push
xchg
clc
xor
dec
dec
sbb
ret
sbb
xor
test
test
mov
mov
jno
push
cmp
outsl
xor
shlb
jp
cmp
ror
cld
or
xor
lods
sbb
icebp
es
sub
out
gs
jnp
shll
and
or
lcall
sti
add
mov
sub
jne
adc
fcmovne
stos
cs
adc
aaa
in
cli
movsl
xchg
test
ljmp
lahf
dec
mov
adc
loope
cltd
mov
jb
inc
mov
imul
dec
xor
mov
inc
adc
jo
call
es
sti
mov
inc
xchg
push
loopne
imul
mov
loop
roll
mov
in
and
pop
dec
push
int3
out
loop
xor
sahf
dec
push
stos
add
xchg
fistl
or
ljmp
cs
das
cmp
mov
movsl
movsb
outsb
add
inc
mov
inc
jl
dec
adc
scas
jo
insl
xor
sbb
and
fbstp
xor
pop
jecxz
aam
inc
cmp
ret
rorl
push
jmp
pop
popa
inc
fsubl
push
inc
imul
fistps
pop
inc
out
in
jbe
sub
xchg
inc
shl
mov
xchg
jne
loopne
frstor
xlat
mov
add
fsubrl
sub
push
cmp
push
fucomip
or
pop
adc
rcrl
movsb
jge
outsb
xor
bound
xchg
inc
cmp
outsb
sahf
lea
mov
adc
je
adcb
jnp
es
adc
into
adc
bound
out
xor
lret
outsb
pusha
add
jbe
push
aad
push
sub
add
jge
fwait
xchg
add
mov
fnstenv
in
roll
pop
push
cwtl
adc
and
nop
jp
fcmovnbe
pop
push
push
rcll
insb
lea
and
push
mov
loop
mov
and
loopne
add
in
push
xor
mov
push
hlt
and
inc
add
ret
lret
inc
sbb
ss
cmpsb
lret
mov
pop
das
and
push
fstpt
ss
and
rorb
sbb
lret
mov
cli
loop
in
jmp
dec
push
or
push
dec
push
pop
xor
mov
into
sub
push
push
pop
or
pop
aas
pushf
ds
add
fwait
shll
push
sahf
jg
pop
dec
les
push
mov
fidivs
add
and
dec
scas
mov
decl
pop
and
mov
pop
icebp
sbb
mov
lret
adc
jl
adc
dec
imul
xchg
xchg
insl
or
push
lret
push
in
lahf
sbb
mov
scas
sbb
push
or
ss
iret
movsl
test
xor
insl
mov
std
dec
and
out
shrb
pop
xchg
mov
push
popf
aaa
loope
and
pop
push
adc
cmp
jb
icebp
cmc
mov
popf
push
in
adc
mov
divb
mov
out
arpl
mov
push
adc
mov
das
jl
pop
mul
dec
mov
xchg
mov
push
sub
lahf
push
ficoml
jp
push
cld
cmpsl
stc
jne
jmp
pop
jp
xor
mov
stc
test
push
mov
xorl
lds
ret
daa
js
rorb
or
out
pop
mov
adc
ret
cmp
das
stc
pop
push
pusha
lcall
pop
cmp
ror
add
jnp
rorl
addr16
add
adc
push
sbb
push
ror
subb
test
inc
sbb
push
shrb
jno
scas
pop
or
xchg
enter
outsw
loopne
mov
je
jp
adc
aas
mov
into
mov
add
arpl
fisttpll
out
pushf
sahf
push
scas
icebp
dec
leave
xor
push
ss
repz
and
scas
sarl
mov
ror
cmp
scas
ds
sub
add
push
ljmp
stc
jecxz
bound
icebp
adc
push
notl
arpl
sti
call
dec
lcall
and
into
jl
lock
sbb
pop
push
shlb
in
jg
mov
push
dec
jge
int
mov
push
dec
test
inc
adc
incl
pop
sarb
and
jle
xor
in
lcall
ljmp
jb
iret
loope
arpl
repnz
fs
xchg
and
testl
jnp
push
push
sbb
and
shlb
subb
lcall
shll
xor
mov
je
adc
shr
push
pop
mov
xchg
push
enter
addb
sahf
add
mov
pop
jns
inc
sub
xchg
outsl
out
ja
xchg
mov
dec
jle
xor
js
cmp
jge
mov
mov
jp
pop
int
stc
stc
xchg
rcll
das
push
adc
in
clc
and
and
aad
fisubs
movsl
faddl
adc
imul
sti
xor
aad
mov
sti
xor
inc
push
push
push
mov
mov
push
mov
or
jno
fbld
sbb
call
add
int3
add
jge
out
adc
and
inc
jecxz
incb
andb
mov
mov
push
in
lret
xchg
fwait
jge
arpl
mov
dec
mov
sub
pop
pop
xor
cmp
push
and
nop
ja
jne
lahf
cld
subb
das
inc
sbb
fsub
mov
jnp
cmc
cmp
xor
jmp
sbb
hlt
push
outsl
loopne
xchg
cmp
cld
add
cmp
pop
aas
in
lret
push
mov
je
mov
jae
scas
lock
push
dec
and
and
xor
cmpsl
movsb
in
mov
stos
mov
pop
es
inc
dec
fstl
xor
sub
and
cmp
cwtl
jns
xor
sub
fisttps
mov
inc
jp
aas
sub
push
jo
into
js
mov
in
sbb
xor
push
jg
ret
dec
cmpsl
push
fcoms
add
jae
daa
out
andb
or
xor
push
scas
adc
xor
mov
xor
adc
leave
mov
addl
inc
dec
imul
jne
aam
test
and
std
nop
mov
mov
push
lods
xor
lahf
mov
arpl
imul
pushf
repnz
loope
or
lea
push
lods
mov
sti
mov
mov
xor
xor
sbb
std
test
gs
bound
cs
adc
movsb
jne
lock
or
icebp
xchg
pop
cmp
jge
cs
sbb
pushf
cld
imul
movsb
shll
cmpsl
int
test
in
lds
cmp
into
daa
mov
sbb
mov
xabort
out
xchg
pop
xor
mov
fisubl
add
mov
rcll
outsl
out
pop
in
jno
imul
pop
in
push
add
dec
push
mov
xor
and
and
in
and
cmp
sti
xchg
fistps
xchg
popf
inc
loope
sub
sub
mov
js
adcb
sahf
mulb
mov
cltd
jno
cmp
and
dec
pusha
mov
dec
jmp
or
lock
pop
std
add
pusha
stos
xchg
repz
aad
sub
cwtl
add
jge
adc
shrb
lock
push
orl
lret
jg
out
cmp
loope
sub
and
sub
arpl
sar
or
or
stos
cmpsb
lds
inc
popa
mov
xor
xchg
aad
cmp
pop
lds
insb
inc
pusha
sub
lahf
test
fimuls
pop
in
outsb
mov
cmpsl
dec
push
mov
push
out
ror
cmp
rcl
xchg
pop
sbb
cli
add
out
xor
mov
mov
mov
xor
sub
adc
sbb
lods
mov
stc
sub
pop
mov
stc
imul
into
fiaddl
mov
push
jp
mull
xor
movsl
push
lahf
fcomps
push
add
xor
dec
and
adc
enter
lock
push
cmp
xor
cltd
lea
jg
xchg
pop
add
lea
jmp
adc
mov
in
push
int
cmp
sbb
fwait
mov
adc
mov
data16
mov
sbb
imul
or
aam
repz
sub
mov
outsl
pop
sbb
movsb
sbb
pop
sbb
adc
cmp
jp
pop
sub
xor
ficompl
pop
lea
inc
test
call
icebp
jmp
lcall
or
pop
dec
mov
mov
into
rcrl
xorb
sub
mov
mov
cltd
je
test
lret
push
ret
push
push
ficompl
xchg
sub
and
clc
fdivrs
mov
xor
adc
les
jmp
mov
aad
lea
jne
nop
dec
int3
mov
mov
shl
repnz
adc
jl
cmp
sbb
repz
imul
dec
es
ja
rcrl
fsubrl
sbbl
or
js
mov
ret
fists
je
mov
pop
sarb
jl
xor
xor
xchg
ss
loope
mov
ljmp
fdivs
outsb
mov
mov
mov
jnp
aad
in
fstpl
sbb
and
mov
shl
pop
and
cmpsb
push
xor
inc
inc
lahf
into
and
adc
mov
add
cs
int
sbb
outsb
cmpsl
mov
inc
outsb
xchg
mov
loope
adc
mov
jne
add
shr
hlt
fptan
and
xchg
xchg
push
xchg
cwtl
bound
sub
xchg
xor
stc
lock
cmp
sub
notl
test
and
ljmp
and
call
loopne
mov
fwait
cmp
ljmp
sbb
mov
mov
pop
rcrb
jl
into
sub
cmpsl
xor
xchg
shlb
xor
dec
or
jbe
add
add
mov
stc
stos
dec
xchg
setbe
jno
cmp
mov
notl
xor
scas
xchg
cmp
pop
mull
and
jno
xor
adc
lret
dec
fidivs
inc
inc
pusha
cmp
scas
jl
adc
jge
fsubl
push
mov
sbb
sub
pop
movsb
lret
mov
test
pop
pop
rcll
mov
mov
sub
lcall
ficoms
das
adc
lds
shlb
or
jecxz
fdiv
mov
repnz
lahf
inc
xor
negl
pop
mov
test
imul
lds
or
and
adcl
xchg
std
movsl
repnz
enter
icebp
cs
loopne
aam
sbb
bound
out
ret
jno
cltd
fs
repz
xchg
sub
sarb
or
mov
js
add
xor
mov
mov
lcall
shll
lods
xlat
mov
mov
imul
int
imul
enter
insl
fs
imul
fsubp
sarl
add
rcl
xor
shrd
cmp
mov
sbb
cmc
std
cmpsl
jb
push
sbb
jbe
ret
js
mov
mov
or
lret
js
ss
cld
lds
daa
dec
orb
mov
inc
add
outsb
sti
add
stc
fdivl
sbb
xorb
pushf
inc
mov
js
test
xor
and
and
inc
aaa
jmp
loop
bound
shlb
jle
jmp
and
ret
shl
shr
and
xor
nop
scas
es
call
sbb
push
mov
andb
arpl
add
sbb
subb
jl
pop
mov
push
test
lds
into
aas
outsb
push
sbb
pop
out
dec
scas
out
popf
xor
loop
mov
or
xor
std
sti
nop
in
popf
jmp
loopne
cmc
in
add
xor
enter
cmpsb
sbb
popa
outsb
cmc
xchg
cs
hlt
pop
adc
lret
loope
fld
clc
mov
push
jge
out
fcmovnu
sub
sbb
loopne
adc
aas
jmp
aaa
adc
call
pop
shlb
jnp
mov
int
xchg
sub
fwait
mov
mov
sub
test
inc
push
aad
mov
push
push
js
std
sbb
jmp
shrb
fistl
pop
ret
push
imull
sbb
les
mov
xchg
xor
rcr
cld
or
aaa
sahf
nop
in
out
sub
mov
lcall
cmp
jb
mov
lock
lods
jbe
adc
and
repz
inc
mov
cltd
push
mov
mov
add
sbbb
das
push
ret
pop
in
loope
mov
jle
int3
lret
pop
or
jns
addr16
pop
dec
hlt
cld
orb
and
xchg
mov
inc
mov
into
addr16
popf
or
push
in
mov
movsb
sbb
loopne
arpl
std
test
and
push
add
mov
push
ds
out
push
or
mov
sbb
cmp
insl
nop
mov
pop
pop
push
fidivl
adc
mov
ds
jp
cwtl
add
pop
jne
enter
fisubs
push
lea
xchg
setbe
push
test
push
and
pop
mov
scas
xchg
inc
cmp
push
add
mov
pop
ret
bound
pop
fwait
test
pop
ja
pusha
clc
pop
bound
aaa
sbb
rcll
pop
push
xor
inc
inc
stos
mov
adc
popa
addr16
inc
mov
cmp
pop
lcall
aas
sarb
push
rcrb
jnp
or
push
mov
and
inc
mov
jl
push
pmaxsw
pop
dec
pop
fwait
jge
lcall
sub
mov
out
jl
sbb
idivl
adc
insl
frstor
or
imul
mov
mov
xchg
pusha
mov
pop
xor
xchg
xor
inc
sbb
dec
mov
out
scas
or
push
pop
lret
pop
in
fs
in
inc
and
lock
xchg
lcall
dec
fidivl
repz
lock
scas
pop
dec
xchg
sbb
mov
mov
shlb
movsl
ja
jb
push
push
sub
mov
movsb
mov
daa
lds
test
sub
sbb
dec
xchg
stos
js
test
dec
xchg
dec
fimull
dec
jge
hlt
std
popa
test
aas
stos
ljmp
mov
int
mov
and
xchg
cs
or
scas
fcomps
cmp
adc
subb
or
arpl
inc
push
cmp
ljmp
dec
mov
mov
and
push
gs
loope
adc
fst
fmuls
mov
jns
std
jle
mov
cmp
mov
int
adc
sub
mov
inc
daa
xchg
hlt
mov
imul
and
aaa
out
xor
sub
stos
les
mov
jns
sahf
leave
cs
add
clc
push
fdivl
add
jb
cs
jns
cmpl
sbb
push
int
inc
int
or
cmpsl
mull
push
movl
into
inc
jo
lret
mov
pop
inc
jmp
cmpb
outsb
mov
push
rcr
andl
pop
sub
jbe
mov
mov
add
shr
pop
scas
je
pop
iret
mov
iret
or
test
cmc
mov
rcll
push
jno
mov
rolb
mov
dec
mov
mov
and
fbld
sbbl
push
inc
push
mov
xor
lock
es
mov
add
add
sub
jno
hlt
mov
mov
loopne
add
xchg
lret
inc
les
cmp
insl
daa
and
cmpsl
sbb
call
movsl
js
jns
out
sbb
mov
dec
mov
mov
inc
testb
popf
xor
sahf
das
xor
and
jne
aas
cmp
test
in
mov
in
inc
jp
add
lret
xchg
aaa
bound
xchg
or
inc
ror
dec
sub
in
cmpsb
fsts
and
add
loop
pop
pushf
push
movsb
jecxz
push
mov
nop
add
aaa
push
inc
jae
aas
mov
int
mov
aad
loopne
int3
mov
movsl
je
es
fcomps
sbb
push
ja
xor
pop
pop
stos
or
push
test
add
adcl
push
insb
pop
and
xchg
loope
jl
ficomps
mov
lea
decb
aad
jne
insl
pop
or
mov
mov
ror
stos
mov
dec
ja
fsubrl
lcall
cmp
fdivrs
push
and
add
mov
ja
push
imul
aas
nop
mov
jp
adc
mov
jbe
fdivs
jnp
inc
jecxz
mov
jg
call
das
push
imul
out
icebp
xor
push
pushf
mov
pop
add
das
xchg
cmpsl
mov
or
ficompl
dec
add
xor
xor
negb
inc
fistps
xchg
mov
sbb
int3
mov
aaa
lods
push
pop
je
ljmp
icebp
fbstp
push
pop
push
lods
loopne
pop
fisubrl
sub
xor
cs
out
push
lds
push
shrl
pop
jg
movsb
xor
fsubl
xchg
lods
push
fwait
pushf
push
insb
add
inc
cmp
mov
inc
or
repnz
arpl
sub
push
push
lods
adc
add
outsb
leave
xor
or
sbb
xchg
mov
nop
xchg
pop
and
addl
jg
mov
push
mov
mov
and
add
inc
loope
aam
sbb
or
inc
shl
hlt
mov
push
sbb
lods
and
bound
ror
fcomi
pushf
xchg
cmp
imul
mov
dec
cmp
sbb
push
fiaddl
popf
add
mov
jo
jbe
jne
lret
ljmp
cld
cmp
test
or
stc
xor
xchg
cmp
out
sub
xchg
rcrl
lea
ljmp
inc
cmpsb
adc
cmpsb
or
inc
outsb
movsl
neg
mov
fbld
or
fcoml
hlt
iret
jne
adc
pushf
in
mov
dec
lea
adc
hlt
and
je
inc
pop
movsb
insl
jg
push
test
push
and
ret
rol
mov
push
mov
push
xchg
movsb
sub
mov
movl
fstpl
add
cmp
inc
mov
mov
test
jg
jo
xchg
dec
push
xor
mov
fisubl
mov
in
push
test
push
or
orl
imul
mov
ret
jmp
xchg
out
loopne
push
sbb
jne
jae
adc
into
icebp
xchg
inc
mov
cmp
adc
inc
pushf
lods
ja
sbb
testb
mov
jo
xor
dec
mov
dec
sti
ja
cmp
sbb
nop
mov
mov
test
push
push
ret
xor
xor
pop
sub
jnp
or
scas
leave
adc
pop
pop
sbb
inc
and
aam
scas
int
clc
xlat
icebp
test
jmp
insb
sbb
jns
xchg
sub
push
pop
cmp
ss
dec
hlt
dec
in
flds
cltd
int
adc
fmuls
xchg
inc
jle
jecxz
push
xor
sahf
movsl
pop
sbb
aam
ret
dec
pop
or
aaa
inc
cmpsl
sub
fwait
and
out
scas
scas
jecxz
inc
test
mov
lahf
adc
add
into
or
cmp
jbe
sub
scas
outsl
jmp
fildl
mov
cmpsl
add
lods
or
pcmpeqb
fs
xchg
sbb
hlt
xchg
inc
inc
cld
in
jle
sub
jp
cmc
jecxz
out
xchg
jnp
out
xor
cmpl
jg
bound
sbbb
fwait
jae
enter
lret
mov
lahf
and
filds
mov
ret
cmp
add
inc
adc
aad
xor
cmpsl
pop
xchg
push
jp
mov
lds
sub
js
jne
cmp
mov
jne
dec
cmpb
nop
mov
push
addr16
push
and
out
data16
lcall
insl
mov
jb
dec
lcall
and
adc
cmpsl
lds
bnd
jp
xchg
jnp
sub
cli
addr16
aaa
idivb
repnz
push
adc
sbb
sub
inc
xor
mov
pop
cmpsl
push
aas
add
dec
mov
lahf
aad
and
inc
inc
pop
xchg
daa
or
sub
push
jmp
shll
add
imul
repnz
insb
xchg
int3
jno
add
aad
jmp
subb
xor
sbb
test
jae
dec
mov
pop
cltd
popa
ror
into
adc
mov
mov
jnp
jo
xor
adc
inc
sub
sbb
or
jp
cmp
fldl
xchg
dec
mov
jno
mov
sub
movsl
aam
push
js
int3
or
shr
sub
xor
xchg
mov
ljmp
and
xor
push
mov
aas
ror
push
fsub
and
mov
pop
out
xor
rorl
xchg
xor
mov
arpl
pop
xchg
or
mov
loop
dec
xchg
mov
lods
movntq
negb
cmpsl
jno
rclb
fsubrl
mov
jne
pop
mov
pop
sahf
adc
popa
fs
xor
push
and
imul
scas
les
ds
inc
mov
out
int3
lea
or
mov
mov
fsubrl
mov
inc
add
jle
fistpl
movsl
mov
or
cmp
popl
dec
cli
sbb
adc
imul
std
inc
sub
cli
jne
je
cmc
xchg
aad
xor
jne
cmp
xor
jl
js
ljmp
add
rcrl
insl
xor
fsubl
sub
or
xlat
and
clc
cld
mov
mov
jbe
xor
adc
mov
pop
push
idivl
pop
int3
loop
fbld
push
int
scas
mov
pop
cs
imul
pop
aas
loop
cld
adc
lods
jb
mov
jns
or
push
pop
fldcw
push
jp
push
adc
je
mov
call
add
jg
repnz
mov
push
mov
in
stos
mov
inc
adc
subb
inc
push
std
fistpll
lret
mov
dec
je
sbb
pushf
xor
adc
shrl
sbb
mov
jmp
out
lock
std
jb
mov
sub
or
int
mov
pop
jbe
shrb
sbb
sbb
mov
xchg
aaa
outsl
ret
mov
mov
mov
push
leave
adc
add
lcall
jle
js
mov
popa
nop
out
stos
or
xchg
inc
cli
fs
jb
xor
enter
xchg
cmp
adc
jns
dec
cmpsl
out
insb
mov
push
in
bound
mov
movsb
lods
in
and
or
xor
les
and
pop
data16
cs
xor
and
sub
imul
je
imul
iret
int
imul
jmp
ffreep
xor
pop
mov
ss
rolb
pop
jns
cmc
test
inc
iret
or
pop
sarl
adc
dec
mov
dec
mov
aas
fidivl
pusha
lods
dec
or
orl
mov
mov
cmc
data16
test
and
xchg
mov
jmp
jb
lea
ds
cs
adc
lea
test
mov
stos
in
xor
pop
and
shrl
inc
mov
mov
popa
repz
push
cs
js
sbbl
ljmp
lds
dec
lahf
cs
mov
loope
ds
clts
push
cltd
and
lret
xchg
icebp
ja
cltd
jns
cmpsb
lret
mov
subl
pop
js
adc
mull
push
add
ss
jecxz
nop
scas
cmpsl
enter
push
imull
repnz
adc
shr
mov
imul
jge
jp
push
pop
jns
clc
push
push
test
xor
in
lds
and
inc
clc
or
push
pop
ret
and
xor
add
dec
push
jmp
es
adc
add
shl
or
lret
test
fidivs
or
cvtdq2ps
mov
addr16
cmc
push
rolb
adc
lret
movsb
addr16
xor
shr
push
cmp
stc
leave
mov
out
adc
xlat
pop
popf
fimull
das
mov
and
jae
lea
xchg
ret
xchg
fstpt
and
push
push
clc
cmc
cwtl
rorl
pop
jne
mov
into
cmp
mov
sub
jmp
dec
mov
dec
clc
xchg
jae
imul
sbb
cmp
stos
into
inc
sbb
jge
sbb
sbb
mov
testb
sbb
mov
addr16
stos
icebp
mov
mov
movsl
xchg
out
outsb
xchg
xchg
fdivl
adc
push
push
mov
cmp
out
or
mov
inc
and
sbb
dec
loop
lcall
dec
loopne
test
sbb
xor
test
test
sub
aas
cmpsl
dec
lock
mov
mov
les
mov
jns
pop
cmp
push
push
fmull
movsb
jnp
or
pusha
cmpsl
mov
stos
push
repnz
imul
dec
sbb
push
out
or
loope
xor
or
insb
pop
pop
test
and
insl
jge
jle
insl
out
fsubl
imul
das
cmp
jecxz
popf
sbb
adc
es
mov
dec
push
or
pop
std
xchg
movsl
mov
das
sbb
test
pop
aad
cld
aad
fldl
in
adcb
mov
xor
shrb
pop
sbb
movsb
orl
js
push
mov
mov
std
es
sbb
test
ret
xor
neg
in
imul
jp
rclb
ljmp
je
xchg
jae
inc
or
mov
shrd
inc
aad
daa
ret
movsl
jno
inc
stc
stos
push
xchg
insb
xor
push
fildl
mov
mov
sbb
cli
cmpb
int
mov
sub
lods
xchg
adc
pop
sub
lret
cmp
mov
lods
into
xchg
sarl
push
aam
jns
popf
shlb
ja
inc
arpl
dec
pusha
and
cmp
sbb
imul
cmp
push
sub
cwtl
into
or
sub
sbb
push
or
aad
push
out
sub
pcmpeqb
xor
fcoml
cmp
jge
xchg
sbb
push
xor
lret
js
pop
xor
pop
je
dec
popf
pop
sub
std
jecxz
clc
lock
adc
pop
mov
fcmove
das
cmp
pushf
lcall
jp
aas
dec
push
cli
adc
lods
add
leave
outsl
pop
jns
sahf
pusha
cs
inc
xchg
sub
mov
call
push
or
sbb
rclb
stos
push
add
mov
sbbb
pop
mov
dec
jp
pop
in
push
inc
shlb
fnstenv
cltd
pop
cs
stos
xorl
repnz
adc
mov
jns
push
cmp
or
aad
call
xor
std
das
stos
gs
cmpl
lret
xchg
sub
xchg
xor
ds
adc
insb
loope
stc
je
loope
mov
sarl
cmpsb
mov
repz
sbb
push
and
popa
cltd
pop
xchg
push
sbb
clc
and
aad
pop
xor
mov
lcall
pop
push
lods
push
or
lods
mov
adc
mov
ds
pop
leave
sbb
inc
mov
fwait
inc
cmp
jne
jne
scas
and
loopne
cmp
test
aad
or
lock
nop
pop
fdiv
aas
fs
aaa
inc
sarl
lds
repz
push
jb
out
in
test
orl
cltd
inc
add
push
cmc
or
lret
mov
sbb
mov
jb,pt
jo
imul
negb
iret
popf
pusha
mov
adc
shr
test
mov
jns
hlt
push
movsb
mov
jp
push
addr16
jg
je
out
lea
jmp
cs
cmp
xor
ret
repnz
xchg
dec
sub
xor
rorb
fstpl
mov
lret
and
adc
mov
fcmovb
into
jnp
aad
dec
std
mov
imul
inc
and
aas
fst
imul
fwait
sbb
and
lcall
sbb
imull
lods
faddl
inc
xchg
pushf
rorl
pop
pop
mov
fisubs
and
ret
lds
lock
cmp
movsl
iret
push
out
xchg
jb
inc
mov
addr16
mov
int
rcrl
dec
pop
cmc
jbe
mov
cltd
inc
jle
mov
gs
mov
xchg
xor
lret
sbb
and
pop
aam
jb
mov
shll
xchg
xchg
gs
pop
mov
xchg
jmp
popf
jnp
movsb
push
lods
and
hlt
ja
ja
test
jno
pcmpgtb
lods
arpl
pop
dec
flds
mov
jne
dec
pop
clc
xor
mov
push
inc
push
add
xchg
or
jle
push
jp
aaa
push
lds
clc
sbb
outsb
imul
dec
jmp
mov
int3
push
cmpsb
lods
ficoml
cld
sub
fucomi
insl
sti
fiaddl
int
jb
scas
lret
rorb
sbb
inc
push
pop
sub
sub
add
insl
stos
lock
insl
dec
loop
lds
mov
xchg
outsb
mov
cltd
push
int
sti
shl
sar
or
in
mov
sbb
in
inc
repz
ret
clc
adc
js
mov
scas
jns
sbb
aaa
icebp
xor
lcall
push
fsubr
dec
int
popf
push
push
xchg
mov
ret
call
andb
imul
push
mov
or
pop
sub
and
nop
jp
loop
es
data16
inc
push
lcall
and
xchg
jmp
xor
shll
push
das
mov
mov
jecxz
inc
pop
jae
and
push
mov
int
clc
mov
add
xchg
xor
std
lds
xchg
xchg
jl
mov
xor
insb
arpl
adcl
js
fmuls
xchg
aas
or
mov
in
shl
test
std
push
in
add
pop
mov
ljmp
inc
push
in
fisttpll
mov
sbb
mov
lcall
pushf
jl
pusha
ljmp
jp
xor
sub
fcompl
hlt
cli
or
out
sahf
dec
nop
pop
xor
jg
xor
leave
imul
cmpsl
xchg
push
and
cld
inc
xor
in
mov
add
mov
jbe
pop
les
ret
add
pop
sbbl
jb
sti
mov
into
inc
mov
popa
inc
scas
push
mov
push
cli
in
adc
push
add
or
jge
and
xor
bound
cmp
loopne
dec
lcall
subl
pushf
dec
mov
sbb
mov
subl
jl
aaa
xor
pushf
int
pusha
mov
lcall
xor
ljmp
pop
fsubrs
push
popf
add
loopne
jp
in
adc
fwait
pop
cmp
pushf
xor
xchg
pop
nop
dec
mov
les
sar
fwait
sti
arpl
das
mov
mov
jp
es
imul
adc
lods
inc
test
dec
cmp
mov
lea
cmp
cmp
test
outsl
xor
rolb
ret
cmc
mov
push
jecxz
je
rcrl
and
daa
pop
movsl
imul
push
xor
aam
pop
leave
mov
out
lea
scas
jmp
push
test
test
sub
xor
imul
ljmp
sahf
inc
xor
fnstcw
inc
ret
cli
mov
lahf
test
loope
add
dec
jp
mov
xchg
dec
inc
mov
outsl
dec
icebp
inc
pop
insb
mov
sbb
fwait
push
cmp
cld
lea
xor
jbe
mov
loope
jo
add
lret
inc
mov
call
jg
mov
mov
fdivrl
add
mov
adc
dec
lods
repnz
xchg
jbe
push
jg
icebp
xor
jg
sar
mov
iret
addr16
jno
imul
push
fst
ret
ret
xchg
in
out
rcll
out
punpckhwd
adc
xor
adc
pop
sbb
sbb
dec
pushf
jnp
push
gs
mov
mov
add
fidivl
push
cltd
dec
inc
xchg
loope
pop
mov
fstl
jb
cmc
xor
jmp
in
mov
xchg
jp
popa
lahf
sbb
out
idivb
pusha
pop
mov
dec
jp
pop
and
int3
cmp
orl
js
mov
mov
jecxz
mov
rorl
push
xlat
push
mov
scas
add
negl
push
inc
push
pop
aas
inc
lret
fwait
divl
inc
mov
add
jb
jnp
cli
popl
mov
pop
xor
xor
pop
rorl
fmul
xchg
mov
xor
mov
pop
mov
testb
push
scas
movsl
sub
cli
sub
cld
test
cs
frstor
mov
pushf
ret
jb
mov
xchg
or
addb
popf
mov
or
into
xor
aas
and
pushf
xchg
call
add
pop
lret
arpl
les
inc
inc
lahf
and
dec
inc
fs
lods
pop
cmp
movsl
sbb
cs
adc
testl
dec
xor
dec
inc
inc
push
cmpsb
aam
out
sbb
mov
xor
push
imul
push
jp
rcr
scas
push
fbstp
push
cwtl
nop
sahf
push
cmp
movsb
jp
movsl
loopne
insl
stos
lods
in
jg
negb
jne
mov
je
jnp
push
pop
fxch
cmp
and
pushw
pop
incl
mov
ficoml
cwtl
lret
repz
mov
xchg
mov
sti
and
jnp
pop
jae
mov
dec
mov
test
mov
pop
xor
pop
dec
xchg
inc
push
sub
adc
test
clc
loop
jnp
or
shl
adc
jb
dec
test
xchg
addr16
ret
testl
push
int3
je
sbb
into
mov
loope
sbb
icebp
outsb
insl
sub
cltd
push
xchg
int3
in
push
cli
mov
dec
add
xor
insb
imul
inc
jg
and
cmp
adc
imul
pop
int3
or
daa
and
xor
int
test
cmpsb
in
das
push
outsl
dec
adc
sbb
pusha
addr16
faddp
adc
push
pop
js
mov
in
loop
xchg
arpl
push
cmp
mov
adc
ss
dec
push
nop
inc
add
xchg
fcmovbe
rorl
test
arpl
imul
in
jns
leave
inc
into
fsubl
fistpll
repz
jns
ss
adc
ret
sti
out
les
fwait
pop
xchg
and
pop
push
dec
mov
cmpsl
sub
xor
scas
repz
fwait
pop
in
jo
cmp
out
dec
adc
sbb
adc
inc
mov
adc
subl
test
sbb
or
adc
addl
rcrb
clc
outsb
jb
sub
xchg
or
mov
xor
inc
test
aad
push
adc
or
andb
nop
mov
iret
mov
xchg
mov
xor
adc
test
dec
mov
sbb
sub
fadds
add
out
data16
jp
cmp
add
aas
adc
shlb
idivb
jecxz
xchg
dec
movl
nop
mov
and
jae
jl
je
mov
ret
scas
sti
cmp
mov
and
jnp
rorb
mov
sbb
pop
push
sub
jge
and
lcall
out
arpl
pop
mov
push
out
int
push
loop
ret
adc
cld
sbb
cmc
xchg
dec
stos
enter
add
pusha
sbb
adc
aam
push
cwtl
les
inc
test
lahf
in
imulb
cmpsb
and
test
sbb
ret
mov
xor
outsb
dec
in
jp
aad
loopne
lret
cmp
push
inc
xchg
icebp
xchg
sbb
add
pop
lods
mov
movsb
in
popf
dec
fwait
ret
into
mov
enter
stos
dec
sub
pop
movsb
cmp
scas
cmp
dec
jae
sub
cmp
push
add
jecxz
cmp
pop
jmp
lea
repz
flds
mov
jne
aad
sub
fisttpll
add
push
cmp
pop
jns
aam
jo
iret
jmp
popf
push
ds
arpl
cwtl
jle
testl
push
add
mov
sub
xor
sbb
outsl
sub
inc
inc
ret
mov
jmp
std
ficompl
add
adc
xchg
sbb
sub
xor
scas
xchg
jb
nop
xchg
and
stos
pop
jge
hlt
and
rcrb
dec
mov
mov
pop
fistl
rolb
decl
dec
in
sbb
cmc
cld
insb
fidivrl
adc
fwait
jno
fincstp
pop
or
push
cmp
push
mov
cltd
mov
mov
mov
ss
sbb
ret
enter
adc
pop
push
or
and
pop
out
leave
mov
xchg
jns
bound
fildll
jnp
adc
push
orl
iret
push
test
outsl
lahf
fcmove
aam
xchg
mov
and
gs
mov
cmp
dec
sbb
sbb
mov
fs
and
pop
lret
fmull
ljmp
inc
push
shll
js
xorb
mov
or
jge
shl
inc
mov
cmp
sbb
push
icebp
leave
push
fildl
xor
js
xchg
ds
gs
dec
pop
push
shlb
nop
xor
out
jb
xor
push
in
iret
cmpsl
xchg
push
daa
adc
adc
jns
mov
fs
inc
pop
xlat
es
sbb
leave
gs
or
mov
jb
mov
aam
orl
gs
mov
adc
mov
stos
jne
lcall
les
aas
shll
and
into
fsub
out
dec
in
lock
rol
sbb
cmp
pop
xchg
jns
test
adc
insl
outsl
dec
rol
lret
js
push
outsl
inc
loopne
scas
das
dec
or
idiv
pop
cmp
aam
popa
pop
aam
mov
xor
js
cs
or
or
ja
or
adc
push
push
mov
pop
xor
jle
mov
xlat
xlat
arpl
xchg
pusha
add
sbb
push
adc
push
adc
cmc
pushf
test
mov
jae
stos
mov
jmp
push
push
pop
pop
inc
scas
mov
mov
mov
enter
pop
mov
out
arpl
push
filds
mov
xchg
pop
divb
in
jbe
stos
aam
pop
mov
cmp
xchg
xchg
jecxz
rcll
and
movsb
lods
xlat
std
jnp
sub
push
int
xchg
jmp
mov
adc
adc
lods
dec
mov
cmp
adc
push
xor
fmuls
das
pop
ret
mov
hlt
jnp
loop
cmp
flds
lods
arpl
inc
adcb
pop
cmc
bound
lret
outsb
pop
push
jp
mov
cld
leave
push
dec
sbb
dec
ret
aaa
out
add
cli
ja
ss
sub
xlat
xor
rolb
jl
jp
cli
adc
pop
jno
dec
dec
jno
xchg
fsubrl
sbb
xor
push
mov
pop
or
aas
inc
fdiv
loop
lahf
out
jl
push
fisubl
pop
mov
jge
decl
loop
xchg
sbbl
sub
xor
xchg
cmp
faddl
sub
push
sub
fsubs
xchg
jg
imul
subb
insb
setp
mov
mov
mov
repz
inc
add
jb
or
jp
int
stc
adc
movsb
adc
sub
outsl
orl
or
outsl
cltd
jns
sub
pop
aaa
popa
mov
adc
push
leave
das
add
jae
fldcw
and
in
cmpsl
pop
sub
adc
jno
mov
test
aad
mov
ss
mov
hlt
daa
push
dec
inc
xchg
roll
push
pop
lcall
mull
mov
pop
test
or
jg
clc
dec
pop
and
fcompl
xor
jae
sbb
cmp
mov
lods
stc
loopne
dec
ret
daa
addl
xor
add
sbb
or
mov
xchg
pop
dec
lods
iret
and
jecxz
xor
in
jp
popa
dec
roll
xchg
sub
adc
lods
ljmp
imul
push
fcmovnu
push
cmp
jl
pop
mov
std
mov
add
pushf
jmp
mov
sbb
cli
inc
jne
sub
or
cmp
out
fisubrl
or
or
or
insl
dec
sbb
sub
or
push
les
sbb
ret
push
dec
imul
mov
pusha
or
fnstcw
mov
testb
xor
inc
out
popa
xor
std
fmul
add
loop
loop
xchg
mov
stos
test
or
fmulp
cwtl
mov
adc
adc
rorl
popf
mov
add
into
insb
mov
xor
out
aad
mov
xchg
pop
pop
xchg
cmp
jle
dec
xor
jbe
xlat
mov
lock
xchg
fucompp
mov
test
lcall
cmp
fs
test
outsl
push
insb
insb
lea
mov
pop
and
divl
popa
nop
loope
add
mov
inc
movb
addr16
cmp
xchg
sbb
push
mov
es
ror
xchg
ds
sub
test
stos
test
pushf
sub
dec
repnz
add
int3
pop
pusha
popa
mov
cmpsb
ja
cmp
insb
movsb
fisubs
jbe
inc
ret
push
xor
cmp
dec
mov
push
lret
mov
js
xchg
sbb
jae
jbe
cmpsl
outsl
and
mov
mov
test
mov
dec
in
hlt
pusha
jle
aaa
add
pop
lahf
scas
cs
mov
loop
fwait
cmpsb
js
and
in
push
lods
and
inc
cmpb
sbb
and
pusha
push
fwait
mov
mov
test
in
loopne
and
pop
sub
mov
cmpsl
push
test
mull
aam
mov
repz
add
idivb
pop
cld
jmp
icebp
cmpsl
out
sub
or
push
fsubrl
jp
jge
sub
add
xor
jbe
addr16
mov
popf
and
sarb
sbb
or
mov
or
xor
sbbb
aas
movsb
mov
push
jbe
jns
sbbb
enter
movsl
in
xor
arpl
mov
jle
pop
mov
test
out
pop
sti
sub
xchg
mull
lods
mov
loope
mov
lods
mov
mov
pop
sbb
movsl
outsl
cmp
pop
xchg
push
sti
ror
fisubrl
cmp
imul
mov
loop
xor
pop
add
add
cmp
cmp
push
sub
add
neg
mov
dec
test
pusha
sbb
clc
lret
xor
test
mov
pop
ja
sbb
lods
rcrb
in
jno
scas
test
movsl
sbb
xchg
hlt
sahf
and
mov
pop
mov
