push
mov
sub
add
push
mov
mov
add
mov
test
jne
lea
test
jmp
andl
push
lea
lea
cmpl
push
je
mov
mov
add
push
mov
call
mov
test
je
mov
andl
add
cmpl
je
mov
pushl
pushl
call
mov
test
je
mov
mov
mov
mov
incl
mov
mov
lea
cmpl
jne
mov
incl
mov
imul
lea
lea
cmpl
jne
xor
push
add
pop
pop
pop
pop
leave
ret
xor
jmp
push
push
push
push
mov
call
mov
jmp
push
push
push
xor
mov
push
mov
call
mov
push
push
mov
call
push
call
mov
xor
lea
test
cmp
jne
push
pushl
push
push
call
jmp
cmp
jne
testl
jne
cmp
je
push
mov
call
pop
test
jne
mov
call
jmp
cmp
jne
push
push
push
push
mov
call
test
je
push
call
push
call
push
jmp
cmp
je
push
push
push
push
call
push
mov
call
xor
pop
pop
pop
ret
push
mov
push
mov
movzwl
movzwl
andl
add
je
push
mov
push
lea
testl
je
mov
mov
and
add
push
push
pushl
call
jmp
mov
mov
add
add
movzwl
movzwl
incl
add
add
add
cmp
jb
pop
pop
pop
pop
ret
mov
or
mov
movzbl
xor
inc
mov
add
sub
mov
decl
jne
lea
ret
push
mov
cmpl
push
push
jb
mov
mov
mov
pushl
popl
sub
sub
lods
xor
stos
sub
add
sub
add
roll
sub
lea
test
jne
pop
pop
pop
ret
push
mov
sub
sub
andl
push
lea
push
movb
mov
mov
mov
mov
rep
mov
mov
rdtsc
mov
mov
mov
mov
not
ror
not
movzbl
lea
cmpb
jne
mov
push
push
push
movb
call
push
call
push
push
pushl
mov
call
mov
mov
cmp
jne
movzbl
push
push
pushl
call
pushl
push
pushl
call
xor
pop
lea
test
pop
leave
ret
push
mov
sub
sub
mov
add
mov
xor
mov
cmp
je
add
add
sub
add
mov
cmp
je
push
mov
push
cmpl
jne
mov
add
push
mov
call
mov
mov
call
push
pushl
call
test
je
mov
mov
add
jmp
cmp
je
sub
mov
mov
test
jne
jmp
mov
lea
mov
mov
add
sub
cmpl
jne
pop
pop
lea
push
mov
movb
movb
movb
call
leave
ret
push
push
mov
mov
mov
mov
mov
mov
cmpb
jne
cmpb
jne
pop
pop
ret
mov
xor
cmp
je
inc
push
add
pop
cmpb
jne
ret
push
xor
cmp
jbe
lea
push
mov
add
mov
add
inc
add
add
cmp
jb
pop
pop
ret
push
mov
push
push
mov
mov
mov
mov
push
push
lea
mov
mov
mov
sub
not
sub
not
shr
add
push
mov
sub
add
push
lea
push
mov
call
sub
sub
add
mov
mov
mov
mov
push
popl
sub
add
lods
xor
stos
sub
cmp
sub
sub
sub
roll
sub
sub
jne
mov
mov
neg
add
add
sub
add
mov
imul
add
mov
imul
add
mov
mov
mov
add
add
and
add
movl
mov
pushl
lea
push
push
mov
call
mov
add
xor
add
add
add
decl
mov
jne
addl
addl
pop
pop
leave
ret
push
mov
sub
sub
push
push
push
mov
xor
cmp
je
mov
jmp
push
mov
call
push
push
push
mov
push
mov
mov
call
mov
push
lea
push
push
pushl
mov
call
push
mov
call
push
mov
call
mov
mov
call
cmp
jne
cmp
jne
push
push
push
mov
call
cmp
je
xor
inc
jmp
lea
push
mov
mov
push
pushl
push
mov
call
cmp
je
cmpl
jne
lea
call
pushl
mov
pushl
mov
push
call
mov
sub
mov
mov
add
push
lea
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
call
mov
mov
add
cmp
add
push
and
add
push
call
mov
mov
add
mov
mov
mov
add
movzwl
lea
add
mov
movzwl
lea
mov
mov
sub
xor
mov
cmp
je
mov
cmp
je
add
mov
mov
mov
jmp
mov
mov
mov
cmp
je
add
lea
mov
mov
mov
mov
add
push
push
push
call
or
sub
mov
mov
mov
sub
push
push
call
push
call
test
je
cmpl
je
mov
mov
call
mov
add
mov
push
lea
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
call
mov
mov
mov
xor
xor
cmp
jae
mov
mov
mov
addl
add
addl
push
pop
rep
mov
add
mov
sub
add
mov
mov
movzwl
sub
cmp
jb
push
call
push
call
pushl
call
mov
xor
push
push
push
push
push
mov
call
mov
call
cmp
je
in
push
push
push
mov
call
jmp
pushl
pushl
pushl
jmp
xor
pop
pop
pop
leave
ret
push
mov
mov
mov
sub
sub
add
push
mov
test
jne
xor
jmp
mov
add
mov
push
mov
mov
mov
push
mov
add
add
add
mov
mov
test
jns
and
sub
cmp
jae
mov
jmp
xor
mov
cmp
jae
jmp
mov
mov
mov
mov
add
mov
call
cmp
je
incl
mov
cmp
jb
mov
mov
mov
cmp
je
movzwl
mov
add
test
je
mov
add
cmp
jae
cmp
jb
xor
cmpb
je
add
cmpb
jne
push
lea
push
push
mov
call
add
add
lea
push
mov
movb
call
mov
test
jne
xor
jmp
lea
call
push
push
call
mov
mov
pop
pop
pop
leave
ret
push
push
push
xor
call
mov
lea
test
jbe
mov
movzwl
mov
and
rol
add
lea
test
jne
test
jns
lea
and
or
pop
mov
pop
ret
mov
add
mov
test
je
add
add
add
add
add
push
mov
push
lea
xor
cmp
jbe
add
inc
cmp
jb
mov
add
xor
cmp
jbe
add
inc
cmp
jb
pop
pop
xor
inc
ret
aas
jecxz
mov
pop
add
stos
pop
add
add
add
dec
stc
call
jmp
orb
in
cli
pushf
lds
loope
icebp
idivb
push
outsl
sub
pop
out
cmp
popf
mov
mov
js
roll
mov
mov
daa
nop
fucomp
out
xor
lret
pop
pop
jae
ljmp
add
sub
mov
cmpsl
inc
cmp
cmp
pop
loop
int3
lea
sarl
cs
mov
repnz
cmp
daa
inc
cmp
out
adc
pop
das
jmp
rorl
jecxz
test
stos
adc
adc
lea
divl
mov
cwtl
cmp
cmp
and
mov
mov
jbe
lahf
cmp
pop
scas
lock
nop
je
jns
inc
int
test
imul
fsub
clts
jl
pop
pusha
xchg
gs
or
push
sbb
pop
lods
dec
cmp
cmc
out
pushf
clc
mov
or
call
hlt
ss
mov
xor
stos
lret
ds
das
xchg
jg
gs
mov
stc
dec
jae
pop
mov
enter
outsb
xor
test
push
xchg
in
sbb
adc
xchg
inc
nop
cwtl
add
std
pop
fdivs
inc
cwtl
mov
daa
push
sbb
test
lock
shl
scas
popa
imulb
jmp
into
mov
dec
ss
lea
outsb
adc
xchg
fwait
inc
pop
xchg
jns
xor
jecxz
loopne
jg
mov
inc
dec
and
inc
andb
dec
and
dec
shlb
mov
gs
or
pop
jle
cli
test
mov
inc
sbb
cmpsl
fnstsw
sbb
loopne
mov
sar
inc
and
and
add
push
pop
xchg
test
push
jmp
imul
aad
push
cmpsl
out
mov
jbe
scas
subl
push
pop
sbb
xchg
fstl
frstor
enter
pop
stos
iret
aas
xchg
xchg
call
sub
and
xor
inc
pop
fidivs
fstpt
mov
lods
ja
movsb
adc
cmp
mov
lret
push
test
jp
dec
test
or
call
and
shl
dec
jo
mov
mov
xchg
ja
sbb
test
sti
test
lock
fildll
outsb
in
mov
inc
or
mov
sbb
fistl
fcmovnu
movups
adc
stc
sbb
int
sub
fdivl
ds
add
lea
jge
xor
sar
hlt
add
js
jo
movsb
test
aam
repnz
push
bound
sbb
mov
sbb
cmp
test
and
mulb
adc
mov
insl
rcrb
test
dec
push
out
push
adc
xor
sub
and
pop
js
mov
mov
loope
lods
mov
enter
xchg
push
out
inc
sub
or
lahf
clc
push
psubusw
and
in
push
mov
fiadds
sbb
test
outsb
dec
xchg
sbb
cmc
sub
jbe
pop
enter
mov
dec
inc
call
mov
mov
mov
out
cwtl
loopne
and
dec
and
push
bound
es
pop
xchg
jl
les
jnp
enter
cwtl
push
inc
dec
xchg
sbb
enter
xchg
fwait
pop
add
inc
mov
jecxz
push
mov
enter
lahf
and
inc
xchg
cld
mov
lahf
popw
shll
inc
jle
and
cwtl
in
xlat
inc
and
or
movsl
cmp
cmpsb
shlb
test
in
imulb
mov
and
stos
adc
dec
pop
push
xlat
mov
sarl
jg
and
cmp
pop
dec
data16
jo
icebp
int
jecxz
inc
adc
push
stos
push
push
add
in
movntps
sbb
pop
nop
sub
add
add
js
dec
xchg
push
sbb
dec
aas
sub
pop
aas
cmp
gs
cli
xor
dec
mov
cvtps2pd
dec
cmp
adcb
jecxz
inc
cmp
rorl
pushf
sub
fstp
int3
jbe
out
lds
and
mov
mov
outsb
inc
movsb
mov
mov
push
inc
mov
push
xchg
jb
loop
idiv
add
mov
jge
movsl
fsubrs
jmp
and
lahf
addb
adc
testb
lahf
aad
enter
jg
mov
stc
push
std
addr16
or
push
push
jae
sbb
sub
and
mov
hlt
icebp
mov
faddl
stos
push
stos
jo
int3
jnp
mov
push
daa
stc
out
sbb
mov
insb
stc
inc
and
adc
out
jno
push
ror
cmpsb
iret
js
xor
cltd
testb
mov
cmpsb
fistpl
cmpl
pushf
lret
inc
jecxz
cmp
lods
cmp
inc
loopne
xchg
into
stos
cmpsb
std
mov
cmp
arpl
test
rcr
int3
mov
pushf
ret
jns
adc
cmp
scas
jp
mov
and
das
cwtl
rclb
adc
ffree
pushf
lret
jle
stc
out
fcomps
jle
cmpsb
mov
pop
lcall
jecxz
sub
xchg
mov
pushl
xor
daa
call
loopne
jnp
aam
sub
imul
out
add
fstl
jnp
mov
or
jo
and
cmp
xchg
or
jo
pop
pop
lea
sub
jl
lods
push
push
jge
loopne
scas
rcrl
push
std
inc
xchg
pusha
cmp
rcll
ret
out
cli
mov
mov
out
or
lea
and
mov
neg
mov
pop
roll
test
pop
push
cmp
mov
insb
dec
jnp
push
js
pop
clc
xchg
cmpsb
mov
lcall
adc
adcl
push
lock
es
stc
lods
dec
out
fistpl
in
fists
iret
cmpl
jmp
mov
dec
into
cmp
sub
jnp
mov
enter
and
data16
icebp
jmp
cmpsb
mov
cli
xor
sub
ljmp
mov
gs
adc
lock
arpl
aad
popa
mov
cmp
sbb
int
lods
adc
loope
repz
adc
jmp
jae
sub
push
sarl
jb
sub
or
xchg
stc
imul
mov
jb
adc
std
addr16
shl
jecxz
ficomps
mov
mov
xchg
lret
inc
mov
xchg
test
dec
mov
lret
loopne
pusha
scas
repz
cmpsb
insb
mov
repnz
or
imull
dec
int
jecxz
lds
arpl
lret
or
add
or
jl
mov
dec
xorb
and
shll
fists
loope
cld
enter
pop
xchg
ds
mov
jecxz
or
jl
add
sbb
movsb
test
sbb
loop
mov
mov
push
adc
ljmp
mov
dec
sbb
enter
mov
cmp
adc
jle
flds
adc
out
roll
or
jnp
mov
dec
sbb
mov
fbld
loopne
cmp
jg
xchg
and
xlat
or
ret
pushf
and
data16
adc
sub
pop
int
pop
addr16
sub
outsl
push
sub
insl
vandnps
xor
mov
jne
jns
push
fldcw
and
jo
sti
std
aas
xchg
add
adc
adc
loop
adc
mov
xor
pop
stos
xchg
push
pop
addr16
jno
xchg
cmpsl
dec
scas
mov
jae
pusha
push
pop
stos
inc
cmpsb
daa
into
imul
and
sub
sub
mov
push
push
mov
in
shrb
inc
jp
adc
pop
dec
or
out
fcmovbe
jne
fdivs
enter
sbb
or
or
test
lea
dec
or
jg
lcall
xor
jp
xor
xchg
mov
js
pop
sub
out
dec
ljmp
test
jge
xchg
jnp
or
ss
dec
cld
roll
and
pop
dec
fdiv
mov
pop
xor
mov
rorb
js
pop
push
push
mov
jl
pop
push
push
stc
or
idivb
aas
or
mov
push
lock
sub
mov
out
bound
add
pushf
and
inc
filds
cmp
mov
pop
lock
and
aas
lock
cmp
pop
or
mov
xlat
sarb
xchg
and
sub
dec
add
cltd
push
loop
add
xchg
xchg
lcall
mov
jns
or
mov
lahf
mov
and
jnp
in
lret
add
dec
fld
add
sub
in
cmp
inc
sbb
xor
cmp
leave
adc
ficoms
stos
mov
cltd
test
inc
add
fwait
iret
sbb
addr16
in
sahf
rol
and
pop
int
cwtl
adc
pop
lods
or
imul
xchg
loope
and
xor
mov
push
sub
lahf
sbb
or
out
jbe
sub
xchg
aad
add
int3
sub
lret
sahf
cmpsb
add
flds
fistl
popw
push
add
icebp
and
in
test
jno
inc
out
je
fwait
or
movsb
add
cs
in
ret
adc
sbb
xchg
cmp
loop
lret
pop
fsubs
push
adc
aad
cmpsb
mov
push
hlt
ljmp
scas
mov
cli
dec
inc
xor
pop
imul
cmp
pop
dec
sub
psubusb
push
xchg
out
mov
pop
push
stc
push
orl
lods
inc
out
mov
mov
mov
sahf
add
lahf
or
cmp
cli
cmpb
xchg
jle
sbb
popa
push
aam
cmpsb
cmpsb
and
mov
ficoml
mov
test
repz
mov
mov
mov
gs
inc
es
cmp
mov
stos
fisttps
jae
loop
pusha
inc
push
inc
scas
or
mov
jp
xchg
xchg
push
cmpsb
add
insl
pop
repnz
push
adc
and
sti
push
cwtl
xchg
insl
push
movsb
xchg
mov
dec
subl
dec
leave
mov
xor
scas
xchg
orl
mov
jae
ret
nop
add
sbb
pop
idivb
dec
adc
inc
sub
jnp
dec
scas
sbb
int
push
in
lea
test
push
shlb
and
dec
sbb
jae
jne
add
mov
fstpt
orb
push
fstl
imul
arpl
lods
sub
pusha
scas
pop
add
xor
sahf
hlt
aas
xchg
fmul
and
insb
fsubr
inc
push
jle
test
mov
mov
iret
hlt
stos
fs
js
jns
movsl
popa
sbb
xor
divl
jnp
sub
popa
adc
push
inc
push
rorl
test
pop
jb
mov
fsubs
rcrl
adc
fwait
xor
lret
push
leave
inc
cld
inc
mov
dec
adc
into
push
mov
fs
cmp
push
pop
add
inc
icebp
les
int
mov
xchg
leave
mov
adc
dec
sub
mov
cwtl
stos
or
mov
int3
inc
popf
cmp
das
jo
stos
push
jae
scas
mov
stos
add
repz
mov
and
jo
shr
not
xor
dec
sbb
cmpsb
and
pop
add
fsts
pop
adc
sub
jmp
cmp
push
sbb
mov
jmp
lret
lcall
xchg
adc
aaa
sub
xor
cmpsl
lds
add
jbe
mov
xor
cmpsb
shrb
out
lret
xchg
adc
dec
sbb
mov
roll
lea
fdivrl
hlt
int3
in
arpl
push
sbb
test
dec
xchg
call
dec
ret
negl
adc
mov
add
push
andl
loop
xchg
jae
nop
lds
xchg
inc
popa
jbe
xchg
and
mulb
inc
mov
mov
cmp
rcl
addl
into
jg
aam
pop
in
pop
dec
push
mov
xchg
jb
fiadds
ficoms
out
stos
and
lods
cmp
jbe
xchg
pop
dec
mov
adc
repnz
lcall
and
mov
popa
dec
neg
dec
mov
lahf
sahf
nop
sub
das
jnp
aad
movsl
loop
mov
mov
mov
std
pop
leave
dec
add
mov
out
mov
fucomi
out
mov
push
dec
loope
dec
inc
les
cmp
adcl
jbe
in
or
pop
xchg
out
cltd
scas
test
pushf
les
or
dec
mov
cld
int3
movsb
adc
test
fldl
sbb
fisubrs
test
iret
clc
rorl
mov
inc
js
imul
cmpsb
xchg
mov
pop
dec
lods
in
sub
jno
adc
push
pop
adc
xlat
arpl
rep
pop
mov
pop
pop
xorl
outsb
xor
movsl
inc
hlt
mov
shl
ficompl
push
cmpsb
mov
jecxz
cmp
sbb
xor
xchg
dec
adc
aas
xchg
inc
xchg
adc
jae
sbbb
clc
jg
pop
dec
or
jle
lahf
or
pop
cmp
cli
pop
mov
js
and
in
mov
or
lret
movsb
stos
cmp
sbb
jbe
imul
out
add
iret
js
xor
imul
loop
mov
cld
jle
mov
or
ljmp
inc
popa
leave
xchg
push
or
jne
or
xor
out
and
jae
fmull
xor
lds
add
clc
or
cmp
mov
nop
mov
adc
jb
cltd
orl
out
mov
loop
sbb
daa
stos
pop
dec
nop
or
add
lds
jno
mov
inc
roll
mov
push
jecxz
stos
addr16
lret
movsl
sbb
adc
lods
mov
jge
cmp
add
ds
push
jl
lods
dec
mov
jle
loopne
mov
jo
pushf
ss
in
adc
mov
pop
mov
push
lret
dec
fcmovne
mov
cmpsb
add
pusha
xor
popa
jmp
dec
or
inc
cmp
sahf
pop
jp
lods
jg
icebp
sti
lea
test
adc
xchg
cli
aad
xchg
sub
adc
imul
sahf
inc
dec
xlat
mov
filds
clc
gs
mov
gs
jp
xor
and
mov
lahf
int3
sub
add
daa
xor
jmp
inc
and
inc
stos
test
cmp
rcll
inc
xchg
inc
dec
and
mov
popa
jns
and
in
lds
and
je
arpl
int
xlat
mov
and
dec
ljmp
aad
sbb
or
lret
pusha
scas
adc
jle
fcom
mov
jb
mov
cmp
adc
mov
dec
xchg
inc
jmp
scas
adc
jo
je
mov
inc
int3
clc
inc
fwait
lret
xor
xchg
mov
imul
into
xor
inc
inc
push
ljmp
arpl
sub
in
cmp
das
xor
pop
lea
add
jl
mov
mov
bound
sbb
and
movsb
das
leave
pop
out
mov
and
jne
shlb
or
shld
xchg
fbld
mov
les
inc
sub
jmp
call
rcll
and
or
ror
out
ja
xchg
push
cmc
push
cmp
push
push
dec
lock
insl
jbe
push
push
lahf
jp
loopne
loopne
mov
and
mov
lods
leave
sbb
sarl
insb
mov
mov
and
xchg
mov
daa
inc
mov
mov
es
add
cmpsl
jmp
xor
subb
bound
out
mov
iret
enter
inc
bound
test
xchg
out
cld
push
sbb
sbb
popf
popf
push
dec
es
dec
lret
popa
pop
xor
shlb
out
es
or
outsb
test
mov
dec
mov
sub
out
jae
pop
ret
ss
sub
aaa
cmp
in
xchg
mov
adc
xor
test
dec
push
hlt
in
std
pop
mov
int3
mov
xchg
mov
cmp
mov
dec
fnstenv
adc
and
mov
mov
add
adcl
gs
add
out
fldl2e
cmp
lret
into
imul
add
jno
popa
out
jle
test
sbb
push
and
jno
add
divl
jg
sbb
and
jno
jecxz
sbb
push
pop
jne
sbb
adc
xchg
or
jb
inc
sub
test
enter
mov
dec
imul
inc
inc
clc
repz
or
ja
sbb
jbe
dec
xchg
mov
jne
repz
movsb
adc
xchg
jbe
nop
ret
jae
cmp
inc
inc
repnz
sbbb
popa
mov
fisttps
xchg
add
fwait
pop
mov
popf
mov
in
les
arpl
scas
ficompl
mov
ret
xchg
ljmp
adc
fadd
inc
addr16
popf
inc
xlat
pop
out
lds
mov
imul
xchg
xchg
loope
jle
pusha
xchg
push
mov
xor
mov
arpl
enter
jns
mov
repz
jnp
insb
add
or
mov
dec
les
xchg
sbb
out
pop
cmp
jae
add
out
aad
jp
add
js
pop
add
or
and
or
in
test
mov
push
ror
mov
jl
push
mov
mov
stc
push
mov
add
jecxz
xor
sbb
icebp
insb
push
jbe
je
jmp
jnp
mov
mov
cmp
test
mov
in
test
mov
imull
call
popa
or
fs
leave
dec
xchg
in
test
push
popa
and
jo
sti
inc
jp
les
mov
add
mov
pop
enter
pop
dec
mov
fimuls
lret
pop
clc
into
sub
jno
out
push
pop
jns
addr16
xor
adc
sbb
in
jmp
movsb
mov
punpckhwd
jl
mov
sarb
mov
lock
scas
mov
mov
add
shlb
add
in
adc
imul
jns
je
loopne
xchg
jbe
inc
and
push
inc
mov
jge
add
sub
lcall
adc
mov
ss
js
fdivs
popf
cltd
jnp
cli
sti
xchg
xor
mov
lea
xor
jbe
sub
popf
int3
jno
sub
loop
bound
mov
notb
cmp
sbb
dec
mov
dec
push
sub
mov
sahf
xchg
aad
and
ja
pop
jno
int3
adc
sbb
inc
ss
shll
push
loope
nop
xor
pop
dec
dec
shlb
push
cwtl
aad
jb
inc
xlat
imul
and
xchg
in
fisubl
leave
lea
dec
sbb
mov
mull
movsb
fbld
dec
movsl
or
add
ss
inc
aad
sub
shrb
repnz
aaa
int3
icebp
push
cmpsb
data16
mov
in
xlat
imul
in
dec
sarb
fbld
pop
adc
test
cmc
rorl
jmp
jle
scas
sbb
pop
enter
mov
jbe
mov
icebp
jl
xor
mov
sub
inc
add
imul
jbe
xor
dec
mov
or
sbb
and
dec
idiv
mov
jg
stc
in
jl
mov
jae
sub
dec
cmp
fldt
jmp
mov
ss
lods
nop
push
sub
outsl
shlb
add
add
fildll
xor
call
or
mov
hlt
int
andb
hlt
bound
xor
ss
sub
sarl
mov
mov
fdivrs
int3
fists
sub
aas
inc
imul
add
add
scas
les
jb
sbb
and
xor
xchg
decl
adc
lods
es
adcl
pop
in
jo
add
ret
fistpll
out
xor
movsb
mov
pop
xor
test
mov
out
dec
fiaddl
call
xchg
cmc
xchg
xlat
mov
lcall
arpl
lret
push
insb
cltd
push
mov
insb
rolb
mov
xchg
fstl
clc
push
lods
insb
cli
fistpl
lahf
scas
mov
not
mov
xchg
fimull
sbb
pop
inc
mulb
test
mov
call
das
shlb
xchg
ljmp
repz
cmpsl
xor
rcl
scas
push
jg
mov
lds
in
imul
ficomps
daa
dec
jb
cmp
loopne
mov
inc
mov
mov
push
pop
jo
sti
test
or
sub
bound
dec
pop
push
jb
add
out
sub
test
adc
test
in
ja
pop
les
dec
lcall
mov
iret
push
sub
mov
stos
imul
loopne
push
jmp
mov
out
mov
ss
pop
scas
les
mov
flds
in
out
jb
daa
and
int
popf
cmp
inc
push
push
xchg
ljmp
mov
pushf
mov
xchg
pop
aaa
push
xor
loop
repnz
fwait
cmpsb
mov
int3
jns
xlat
or
cmp
stc
hlt
push
or
or
outsb
mov
mov
shlb
dec
arpl
inc
gs
cltd
push
sub
aaa
std
cmp
jbe
test
push
mov
xor
cld
jmp
repnz
mov
out
inc
cmp
push
fstpl
popa
aam
lds
lds
push
pusha
xor
xor
mov
xorl
es
test
mov
sbb
movsb
add
aad
mov
call
and
xchg
or
sub
or
gs
test
or
xchg
insl
sti
sub
push
jp
fsubs
push
adc
xchg
fstl
icebp
push
mov
push
dec
or
cvtps2pd
adc
ret
dec
sub
lcall
mov
cmp
pop
xor
stos
filds
jb
lods
sbbl
fcoml
mov
stc
add
icebp
mov
movsl
sbb
movsl
dec
test
pop
jmp
repnz
repz
sbb
das
jl
adcb
push
repnz
fiadds
je
mov
das
dec
mov
out
jmp
adc
cs
mov
mov
jnp
pop
scas
xchg
loopne
das
jae
call
fdivrl
loop
inc
lock
or
stos
adc
dec
cmpsl
push
push
push
adc
or
push
lds
and
fsubl
lret
inc
xchg
pop
mov
daa
loopne
cmp
and
mov
adc
aam
xchg
xchg
icebp
mov
popa
imul
mov
or
cmp
dec
loope
push
shll
les
adc
xchg
xor
stos
add
int
scas
adc
inc
sub
cmp
pop
jmp
shlb
mov
test
xor
sub
mov
and
scas
movl
fldenv
mov
lret
and
push
mov
pop
rolb
ss
insb
sbb
sub
pop
and
stc
imul
jecxz
js
imul
sahf
lcall
mov
sub
jno
inc
lock
je
js
dec
test
and
mov
xchg
imul
movsb
outsb
xchg
data16
out
adc
movsl
sub
push
rcr
stos
outsb
cmc
outsl
fwait
mov
and
mov
or
scas
in
mov
push
or
aaa
bound
adc
add
scas
lahf
xchg
cmp
mov
mov
leave
lret
test
mov
cmp
xchg
push
lahf
aam
jmp
shlb
lcall
mov
outsl
stc
popf
adc
shrl
cli
mov
popa
out
jle
stos
in
imul
scas
pop
ret
int
stos
jmp
xchg
sub
dec
adc
enter
mov
imul
mov
xlat
aaa
es
inc
into
inc
xchg
jbe
inc
push
jne
and
fdivrl
insl
leave
in
loopne
jnp
mov
popaw
aaa
adc
test
push
sarb
mov
lret
cmpl
addb
dec
mov
push
xchg
into
push
insb
jg
ja
pusha
mov
pop
test
xchg
sar
pop
es
dec
pop
daa
xor
or
adc
mov
ljmp
lret
loop
jno
mov
jnp
dec
add
ds
stos
push
jmp
inc
dec
jns
vpsubusb
jecxz
mov
sub
mov
repz
jns
mov
test
jns
mov
mov
shll
pop
lret
sub
sbb
lret
lods
leave
mov
shr
xorb
mov
fisttps
insl
or
push
dec
mov
data16
cmpsl
int3
mov
adc
xor
cmp
daa
and
or
andl
fldenv
jl
push
pop
sub
adc
or
sub
shll
inc
sbbl
inc
inc
sbb
out
jb
sbb
inc
repnz
adc
jl
lds
jl
push
cmp
pop
insl
out
cmp
jmp
cmp
lds
test
sbb
lock
ja
push
add
pop
jle
jmp
aas
outsl
push
push
nop
lret
lea
cmp
loop
adc
popa
jns
xor
cmp
in
xchg
stc
int3
sub
jmp
add
dec
or
pop
jb
and
inc
jecxz
dec
jmp
add
mov
push
jg
sub
add
and
jmp
inc
pop
hlt
mov
sub
lods
cmp
sub
scas
js
decl
inc
mov
push
in
jmp
lcall
xlat
lds
push
xor
push
xorb
adc
jl
repnz
js
cmp
jge
and
out
ss
mov
xchg
pop
pop
xor
scas
repnz
addr16
jnp
in
stos
in
popf
decb
inc
and
call
int
idiv
push
iret
loope
pop
xlat
xor
outsb
int
pushf
push
or
hlt
ja
push
inc
mov
inc
jl
sbb
sub
sub
je
add
arpl
sub
mov
bound
mov
and
cwtl
rcrb
adc
xor
xchg
movsl
push
fwait
pop
sbb
ds
loopne
movsl
jle
test
mov
add
icebp
js
jmp
mov
cmpsl
mov
movsb
jl
mov
sub
popa
xchg
clc
in
or
inc
xorb
or
in
mov
push
in
push
inc
lea
and
cmp
push
addr16
inc
sbb
shll
ss
mov
leave
xchg
test
pop
pop
cmp
pop
rcl
stos
loopne
push
cmpl
subb
sub
cmp
cmp
push
jmp
insb
sahf
test
xor
imul
jle
pushf
aaa
mov
hlt
push
mov
loope
and
repz
call
out
jle
sub
stos
dec
rcll
loop
push
mov
add
dec
es
scas
push
loope
mov
lcall
mov
pop
mov
into
lcall
pop
or
mov
push
lods
leave
adc
xorb
subl
mov
add
mov
repz
lods
push
xor
dec
or
cli
sti
sbb
js
std
inc
hlt
xchg
fstpl
inc
call
shlb
inc
push
dec
adc
cmp
push
inc
into
or
mov
xchg
rorl
mov
dec
mov
ficomps
loopne
ja
xchg
sub
lock
sub
ret
push
ds
stc
adcl
adc
adc
cmp
xchg
movsb
push
daa
rolb
in
aas
jns
popf
xchg
enter
lret
adc
nop
lds
mov
lahf
hlt
lsl
mov
roll
aad
pop
adc
mov
sbb
mov
loope
xchg
sbb
add
shlb
jb
mov
or
or
sub
pop
mov
or
pop
add
aam
imul
push
sahf
mov
push
pop
shl
cli
and
dec
pop
gs
xchg
lods
lret
pop
test
sub
gs
push
mov
add
addr16
mulb
int
xchg
cltd
adc
rorb
add
jecxz
adc
pop
mov
popf
add
dec
lds
ret
push
mov
das
xor
mov
in
in
mov
aam
imul
dec
pop
out
stc
push
jne
jae
outsl
xor
jmp
lds
ret
in
mov
idiv
test
push
sbb
loopne
jbe
sbb
dec
int3
or
ss
jmp
sbb
sbb
add
inc
jnp
loop
lcall
push
sbb
mov
sbb
sub
hlt
xor
and
xchg
xchg
enter
lea
jmp
loop
dec
push
adc
enter
mov
add
inc
and
xchg
add
iret
std
adc
xor
testl
mov
shr
rcrb
and
dec
in
repz
aas
mov
in
push
and
je
out
les
nop
push
sbb
in
adcb
stos
push
repz
nop
insl
out
jg
mov
and
add
mov
and
jns
repz
out
sbb
pop
pop
cmp
xor
test
mov
adc
add
sti
or
adc
lcall
cmpsl
cltd
loope
insb
cmp
jne
pushf
rcll
jmp
push
stos
cmp
and
cmp
into
adc
aas
push
lahf
sbb
imul
pop
lods
mov
xor
lea
mov
or
cld
fcoms
sub
imull
orl
setge
cmp
or
push
inc
lods
pop
jnp
pop
xor
mov
inc
insl
cmp
int3
jl
dec
sbb
jp
aad
mov
jb
push
aad
jl
xchg
mov
xlat
and
xchg
scas
daa
std
scas
sbb
pop
in
add
rorl
push
enter
outsl
inc
jge
mov
sbb
repnz
xor
cmovge
dec
pushf
cmp
rorb
outsl
lcall
lea
inc
jae
xor
adc
push
jmp
fildll
dec
mov
jb
imul
jl
mov
scas
bound
cmp
into
test
mov
add
jge
test
aas
mov
clc
mov
inc
cli
scas
sahf
push
fs
out
or
adc
imul
sub
stos
jmp
cs
pushf
shll
dec
lods
inc
adc
mov
pop
add
sbb
aam
sub
std
jno
mov
roll
pop
mov
dec
cmp
xchg
cmpsl
ja
adc
mov
dec
in
das
js
movsl
in
pusha
arpl
pop
adc
test
mov
ret
or
sti
sub
pusha
dec
pop
test
push
inc
add
stos
mov
mov
pop
dec
or
adc
test
hlt
sbb
jae
or
cmpsb
cmc
xlat
xchg
cmpsl
and
cmp
dec
adc
aam
pop
lock
sub
inc
lods
cltd
dec
js
test
shrb
sub
jae
jp
cmp
cltd
pop
arpl
lahf
lcall
mov
rolb
add
sbb
dec
xor
stos
and
and
pop
push
fwait
repz
loopne
xchg
filds
sti
mov
popa
outsl
dec
pop
push
fs
lret
orl
or
lods
pop
jl
int
lcall
xchg
adc
pop
fcoml
sbb
sbb
testl
and
mov
push
pop
pusha
push
mov
sahf
rorb
jns
mov
jp
loop
prefetch
fcomps
add
out
jl
push
aam
xchg
addl
inc
jle
orb
shrl
pop
test
push
jp
xchg
dec
rcrb
push
push
pop
inc
cld
stos
lock
dec
push
xor
testl
in
inc
dec
cld
xchg
mov
es
dec
daa
dec
push
jo
out
adc
pop
pushf
in
sub
aas
std
das
inc
cmp
xchg
ljmp
xor
in
subb
repnz
and
add
dec
jb
lods
in
fisubl
mov
shl
xchg
into
pop
iret
subl
adc
or
inc
mov
xchg
pop
jnp
out
movl
inc
imul
jle
sbb
jl
rorl
dec
push
jb
into
mov
out
jl
push
gs
inc
call
pop
fiadds
adc
sub
lea
out
mov
scas
shll
dec
movsl
adc
and
cmp
mov
cwtl
ljmp
jecxz
xor
xor
push
push
scas
sbb
add
pop
xor
xchg
mov
unpckhps
imul
or
std
test
mov
pop
xchg
pop
cwtl
cmc
dec
insl
nop
test
add
insb
ret
add
mov
imul
cmpsl
nop
or
xor
pop
sbb
adc
iret
sub
and
mov
lret
test
sbb
mov
add
fmuls
push
xor
mov
add
lcall
ds
jle
adc
rorb
lahf
dec
arpl
in
and
xor
jmp
cmp
mov
push
jne
push
adc
mov
pusha
adc
mov
and
aas
inc
fldl
fistps
jns
xor
jp
mov
aas
inc
xor
mov
lahf
lds
aas
mov
movsb
lahf
popf
mov
and
jmp
icebp
push
pusha
jge
jne
rclb
loop
inc
cmp
mov
sub
in
gs
xchg
mov
jl
outsl
mov
mov
fcmovb
or
je
rorl
add
imul
lods
arpl
movsb
push
pushf
and
fcoms
xor
jp
stos
or
dec
inc
shll
sbb
xor
and
dec
nop
pop
decl
cmp
inc
push
out
push
push
xlat
aas
lret
bound
sbb
mov
xchg
dec
lods
aas
sahf
fildll
pop
xchg
test
or
jne
lret
adc
aam
in
enter
notb
les
ja
push
js
imul
fs
lret
ret
pop
fsub
lret
in
shlb
and
pop
inc
sbb
negb
push
jno
cmp
cmp
xchg
lea
in
nop
cmpsb
lahf
sub
inc
xchg
and
mov
orl
fdivl
sub
mov
lret
cmp
test
ss
iret
push
lret
add
ret
es
cmp
xor
sbb
ret
mov
cmpl
push
pop
xor
xor
pop
mov
inc
jae
outsb
pop
aad
in
pop
push
andb
mov
cmpsl
mov
mov
outsl
in
sub
xor
xchg
fnsave
cmc
mov
and
and
flds
shlb
enter
into
repz
xor
mov
push
repnz
daa
xor
push
shl
test
pop
nop
loop
sub
dec
dec
ljmp
push
scas
mov
xorl
push
inc
sub
add
repz
lret
imul
jge
fstl
in
test
dec
out
dec
shlb
sahf
mov
add
pop
xorb
sti
xlat
js
shlb
push
push
dec
jne
xor
lret
bound
push
push
movsb
jb
test
xchg
popf
in
jne
sbb
xchg
fwait
psubd
scas
movsl
arpl
jle
xor
or
rcrl
cld
xor
xchg
add
dec
cmp
mov
or
lret
test
not
and
mov
xor
shr
adc
cmp
js
fistps
insl
inc
scas
mov
mov
shll
or
int
cmp
mov
push
sub
dec
jp
adc
inc
push
sub
xacquire
sbb
stos
fcomip
dec
and
mov
or
outsb
push
jecxz
daa
pusha
icebp
pop
rcrl
mov
xchg
cli
popa
or
inc
or
adc
xchg
call
cmp
les
lcall
mov
addr16
fcomps
pop
subb
xor
add
in
push
mov
test
sbb
pusha
adc
add
lds
or
insl
cmp
sub
cmp
ret
test
jno
push
mov
stos
mov
mov
enter
lret
push
jne
push
mov
xchg
mov
adc
arpl
inc
sbb
push
test
test
ss
xchg
sbb
fdivl
movsl
fildl
inc
xor
nop
idiv
das
into
lret
xchg
or
out
leave
mov
adc
cwtl
frstor
xchg
mov
iret
push
dec
add
jnp
enter
xchg
mov
xchg
subl
cmp
mov
out
and
sub
push
insb
or
or
push
div
dec
pushf
dec
jg
cmc
out
out
and
add
dec
and
jne
test
xchg
xor
dec
mulb
mov
sbb
push
sub
xchg
fwait
ja
enter
cwtl
lea
scas
pop
cld
xor
shll
cwtl
jg
sub
xorl
loope
sbb
xor
adcb
divl
sub
imul
repz
sub
loope
rcr
stc
cmpsl
add
add
les
add
adc
loop
test
aad
in
cwtl
push
testl
pop
into
fdiv
rolb
mov
mov
rcrb
and
test
scas
jl
rclb
xchg
jae
jecxz
std
fcoml
adc
or
jmp
inc
add
inc
push
into
negb
and
fs
rorl
jbe
fs
push
icebp
lods
adc
xchg
jl
fmul
mov
insb
lock
fstps
scas
fdecstp
lods
pop
jmp
sbb
repz
sahf
mov
or
je
jns
imul
lahf
out
popa
jno
mov
pop
mov
or
imul
lahf
movsl
pop
and
arpl
sub
sbb
daa
stos
push
es
lea
sub
inc
jle
adc
aaa
test
xor
push
push
popf
lret
in
aam
and
insl
das
mov
bndldx
sbb
je
data16
and
inc
hlt
mov
add
jge
pop
xchg
pop
cmp
mov
mulb
mov
jae
repz
fisttpll
js
cmp
xor
inc
ljmp
dec
xchg
sub
ud1
rorl
stos
jnp
pop
pop
ss
pop
add
push
dec
les
dec
lret
popa
or
dec
lret
in
lods
cli
fwait
jg
inc
cs
add
pop
ss
pop
xor
rolb
rolb
or
sbb
and
add
mov
std
cli
push
test
repnz
push
popa
xor
adc
out
cld
add
mov
xchg
inc
hlt
dec
enter
add
into
ja
dec
dec
xlat
clc
jnp
or
lret
adc
fimull
xchg
shlb
push
push
faddp
lea
rcll
int3
jne
daa
cld
and
lea
inc
mov
aam
push
popf
dec
cmp
pop
repz
daa
xchg
push
and
cld
xor
loopne
xchg
mov
inc
test
sahf
pop
std
aad
test
pop
xor
and
fadds
xchg
flds
lods
xchg
xchg
pminsw
add
enter
sbb
fwait
sbb
mov
jp
hlt
adc
repnz
shl
in
movsl
push
inc
adc
inc
or
lds
movsb
loopne
sahf
sbb
mov
adc
jg
add
pop
sub
js
fs
sub
dec
lea
xchg
test
imul
jae
lcall
out
sbbl
outsl
sub
aaa
cs
rcrl
or
xchg
cwtl
mov
xchg
jg
sahf
push
push
aaa
ds
arpl
fs
rcll
outsb
push
andl
push
dec
jne
pop
add
xor
mov
daa
add
movsb
aas
sub
cltd
decb
mov
addr16
mov
movsl
test
cltd
lds
mov
pop
lock
shll
sub
sbb
ja
mov
push
jl
iret
mov
ret
sahf
jg
dec
sub
pop
insl
push
or
fistpll
nop
inc
push
xor
mov
es
int
cmpb
test
mov
xchg
inc
stos
mov
mov
sti
mov
pushf
enter
and
xor
pop
sbb
outsl
call
add
int
in
push
sub
call
cmp
xchg
sahf
mov
stos
icebp
out
jge
aas
or
xor
pop
cmp
push
pop
inc
mov
popa
sbb
mov
lret
xchg
inc
lods
pop
lret
inc
sbb
push
adc
addl
sahf
sti
mov
mov
push
ffree
jge
pop
sub
iret
add
jo
std
sbb
dec
clc
add
push
test
inc
pop
clc
push
mov
pop
dec
jg
xor
xchg
add
or
cmp
mov
aas
sbb
cltd
push
sarb
ljmp
sub
mov
ljmp
xor
aam
loopne
inc
inc
xchg
sbb
dec
outsl
sbb
mov
or
push
xor
inc
or
sub
adc
cs
adc
mov
data16
cmpsb
mov
mov
and
arpl
in
mov
and
jno
fmulp
repnz
rolb
sbb
hlt
add
pushf
daa
pop
call
pop
and
test
iret
or
aad
js
push
call
out
sbb
inc
jbe
mov
or
incl
test
out
out
sub
mov
mov
xor
inc
cmp
add
in
imul
mov
jb
ss
and
in
push
sub
cmpsl
jg
and
mov
xchg
shrl
add
pop
fidivl
aam
jno
ja
arpl
jmp
movsb
mov
inc
push
pop
test
aas
enter
loopne
adc
sub
mov
pop
adc
cmp
test
pop
dec
fidivrl
pusha
icebp
push
or
hlt
andb
and
pusha
cmp
lods
add
xchg
cmp
adc
arpl
lods
rclb
sbb
mov
xor
mov
pop
adcl
mov
aam
daa
fdivr
cmp
jmp
enter
imul
xchg
test
je
add
mov
dec
push
mov
push
and
fidivl
jns
js
ds
lea
sub
insl
xchg
sahf
sbb
emms
aaa
jecxz
cmc
fidivrl
dec
jl
add
hlt
sub
or
into
outsl
sti
imulb
or
pop
push
jecxz
ja
pop
lods
lock
inc
cmp
jae
aam
pop
dec
mov
adc
dec
cmpsl
shlb
inc
push
lahf
repnz
ret
int3
out
mov
cmpsl
jbe
lds
dec
lret
jbe
es
sub
stos
push
fdivrl
and
xchg
cmpl
popf
stc
push
pop
je
cltd
mov
stos
xchg
fs
lcall
xchg
addl
outsb
je
or
rcll
mov
dec
imul
push
scas
xchg
or
in
xchg
mov
out
hlt
das
lret
leave
push
aaa
dec
sub
mov
jmp
sbb
out
and
pop
add
test
inc
out
dec
incl
insl
rorb
bound
ffreep
lret
xchg
inc
pushf
mov
cmp
xchg
and
push
aad
push
jo
mov
repnz
or
add
shrl
and
push
aaa
mov
jbe
dec
stos
xor
xor
inc
rclb
imul
movb
out
pop
bound
imul
xor
or
enter
cmp
jg
mov
in
je
rolb
push
sti
pop
cltd
lsl
mov
jae
in
addr16
imul
pop
adc
and
test
sbb
push
js
mov
push
cs
push
or
inc
adc
int
test
aam
mov
dec
scas
scas
dec
xchg
test
jno
jmp
divl
push
cmovae
aas
lret
test
mov
test
push
outsl
rcrl
outsb
std
sbb
push
lds
outsb
andl
cmpsl
and
mov
js
out
aad
adc
in
adcb
jb
jmp
jmp
cmp
jle
jmp
pop
clc
xchg
packsswb
clc
ljmp
dec
cmp
jmp
arpl
mov
bound
rclb
inc
and
fs
jl
movsb
addr16
mov
fmulp
add
sbb
xor
mov
push
lock
mov
addb
loope
insl
cmpsb
jl
hlt
addb
movsl
sahf
lahf
ret
insb
idivl
or
or
jp
push
mov
shrl
fiadds
pop
mov
sub
incb
or
sub
imul
or
jle
push
mov
fsubl
pop
test
rcrl
push
xchg
inc
push
mov
pop
pop
jl
hlt
out
add
cli
aas
mov
shrl
cld
inc
xchg
push
mov
popf
xchg
or
dec
sub
jne
inc
add
sbb
mov
incb
mov
mov
cmc
xchg
jae
jbe
cmc
push
mov
mov
lahf
sub
push
xchg
add
jg
je
jb
lock
adcb
stos
adc
cmpsb
in
sub
xor
gs
xchg
sti
mov
lods
push
push
testl
ret
jae
sub
data16
test
lea
ss
pop
dec
lcall
inc
cmc
push
out
insb
aad
add
lahf
insb
loop
push
lret
aam
and
xchg
jbe
xchg
leave
lcall
je
mov
cmp
cmp
mov
cld
es
sbb
cmp
ds
fistl
xlat
movsl
jae
mov
dec
adc
push
cmp
movsb
mov
and
dec
mov
jno
gs
dec
outsb
jmp
cltd
pop
rcl
dec
psubb
sub
push
aas
add
push
das
inc
sbb
dec
sbb
jno
ss
loop
fstpt
pop
fisubl
add
cmc
pusha
xor
lret
test
push
out
mov
mov
dec
leave
jg
pop
int
mov
mov
test
or
lcall
sub
imul
sub
cmp
outsb
sbb
adc
pop
jg
ljmp
dec
test
fstpl
enter
adc
cli
les
or
jecxz
pop
scas
ds
sub
lods
sbb
xor
jns
push
decl
repnz
nop
dec
imul
fiadds
aam
psubd
push
aas
test
xchg
scas
pop
push
lahf
jmp
cli
cli
cli
fimull
xchg
dec
add
imul
js
mov
mov
leave
pop
lods
js
lret
pop
jp
sbb
fwait
xlat
fdivr
and
jnp
push
fwait
mov
lods
lret
sti
repnz
jb
xchg
cltd
sbb
rcll
push
fcoms
pop
or
adc
stc
call
or
arpl
mov
stos
and
into
jno
and
mov
clc
mov
fiaddl
inc
mov
sbb
repz
shll
dec
roll
add
clc
clc
xor
ret
xchg
into
adcl
jnp
out
divb
pop
xor
orb
mov
adc
out
call
jmp
cmpsb
fnstcw
xchg
add
mov
mov
in
outsl
push
testl
fidivrs
cmp
xor
stos
imul
mov
repz
ret
insl
outsb
adc
xor
sub
cltd
mov
push
out
cmpsl
int
or
pop
ja
lret
cmpsb
pushf
dec
mov
or
stos
rorl
xchg
out
sub
popf
pusha
into
cmp
mov
adc
jns
jno
fnstsw
mov
or
jno
mov
bound
imul
cld
cmp
je
mov
push
xor
mov
jmp
test
int3
in
daa
negl
into
div
clc
mov
into
xor
cmp
repz
ret
lcall
adc
push
pop
out
mov
in
lret
iret
daa
jne
out
std
sbb
cld
in
and
and
sub
icebp
enter
jae
popa
push
fst
push
push
cmp
ret
lods
js
bound
push
mov
inc
mov
jg
shrb
popf
push
mov
pushf
leave
mov
pop
decb
outsb
mov
mov
push
ja
jae
mov
dec
xchg
adc
pop
push
cmp
xchg
dec
sahf
sbbl
arpl
mov
mov
and
cmpsl
dec
sbb
les
xchg
push
lret
lods
dec
push
inc
mov
and
adc
cmp
xchg
or
pop
popa
inc
xlat
in
mov
jb
pop
rcrb
outsl
push
sarl
sub
test
sarl
fsubl
roll
nop
mov
ror
sbb
gs
mov
pop
adcb
scas
jge
fildl
jns
insl
fld
cli
testl
movsl
out
lcall
rolb
or
push
pop
movsl
outsb
lods
xor
mov
dec
xor
mov
lds
mov
ds
jecxz
dec
daa
jmp
dec
and
push
lret
cmpsl
jnp
bound
fidivl
dec
or
add
push
lret
imul
jno
sbb
fnsetpm(287
mov
repz
stos
imul
xor
sbb
dec
xchg
push
lcall
mov
test
xchg
out
cmpsb
xchg
faddp
adc
dec
icebp
pop
dec
rorl
repnz
push
and
std
movsb
push
push
popa
lock
inc
pop
mov
sahf
lcall
fs
aam
xor
xchg
mov
ljmp
xchg
dec
cmp
bound
adc
addr16
jecxz
inc
fiaddl
or
pop
push
stos
or
mov
jmp
or
add
addb
pop
mov
jg
jbe
mov
addr16
ljmp
pop
ss
fsubl
flds
hlt
and
aaa
repz
lret
mov
xchg
mov
and
mov
sbb
sub
or
cld
outsb
cmc
mov
call
ljmpw
push
test
or
inc
testb
jl
sub
push
arpl
int
mov
je
sub
das
jae
mov
into
xchg
es
movsl
std
in
out
aas
push
jp
loope
dec
push
ror
jne,pt
hlt
sub
push
out
inc
das
ds
jl
in
ljmp
adc
push
out
mov
bound
or
push
dec
cmp
jmp
pop
xor
rcl
fwait
push
jnp
sbb
push
rcl
cmp
xor
add
pop
pop
aam
push
stc
ds
lret
pusha
cmp
enter
push
sbb
lds
addr16
popa
pushl
insl
imul
push
andb
inc
xchg
lahf
loope
fdivr
sbbb
ret
jb
inc
lret
pop
push
jmp
daa
call
or
add
lea
and
out
mov
and
xchg
mov
sbb
repnz
test
push
inc
push
adc
jae
jbe
push
stc
cmpsl
inc
or
test
sub
dec
xor
lcall
lods
imul
push
xchg
lret
push
inc
adc
fisttpll
repz
or
popa
in
push
movsb
pushf
push
or
sbb
mov
jae
lret
mov
lret
jno
pop
insb
out
divl
push
adc
mov
repz
iret
cmpsb
cwtl
fdiv
inc
mov
ror
adc
inc
in
in
lcall
fcoms
inc
in
xchg
imull
inc
add
mov
repnz
and
jmp
push
xor
mov
mov
test
into
or
dec
pop
popl
test
test
pushf
add
mov
xor
cli
pop
or
or
adc
clc
stos
mov
inc
xor
lds
adc
pop
int3
xor
and
lret
push
ds
xchg
push
testl
xlat
pop
pushf
dec
mov
add
sbb
push
mov
inc
and
push
dec
lahf
addr16
fdivs
sbb
popa
or
fs
cmc
or
jge
cmpsb
or
push
addl
dec
call
stc
xor
fwait
and
mov
inc
lods
popa
movsl
mov
pushf
aam
stc
sub
push
or
pusha
dec
data16
jae
push
das
or
aad
int
hlt
je
xor
inc
pop
adc
mov
orl
lcall
outsb
cmp
add
mov
xor
and
xchg
test
cmpxchg
jmp
mov
mov
cld
cmp
repz
jne
or
or
outsb
lahf
mov
sub
xchg
mov
cmp
cmp
or
push
push
fmull
dec
pop
pushf
out
xor
jecxz
inc
add
aas
movswl
inc
cmp
out
or
fcoml
movsl
dec
cmp
cmp
jae
pop
adc
jmp
shll
fildll
mov
int3
push
fxch
stc
cmp
cmc
fisubs
and
dec
arpl
inc
push
sbb
adc
cld
in
and
mov
push
idivl
and
fsts
out
aam
xchg
mov
fwait
dec
test
jbe
and
mov
jne
mov
or
scas
aam
dec
enter
sub
cmp
and
adc
fidivrs
xor
setge
out
inc
lret
jle
mov
push
mov
pop
addr16
or
or
adc
lods
or
jb
out
popf
mov
pop
mov
test
adc
cwtl
add
adc
bound
arpl
lods
jo
xchg
jno
inc
mov
jo
cli
xor
aas
xchg
stos
shlb
mov
dec
ljmp
std
in
jmp
arpl
add
sub
mov
pop
mov
cmp
push
clc
jle
out
mov
std
popf
sub
sub
mov
sbb
inc
jg
jle
stos
gs
xor
xchg
pop
sub
pop
mov
add
or
shl
cmp
stc
lret
lods
push
fmull
mov
sbb
insl
dec
cmp
xchg
xchg
or
inc
dec
add
pushl
jmp
or
jns
push
decl
mov
mov
xor
dec
mov
xchg
and
sub
push
jo
hlt
adc
mov
lea
mov
cmp
out
sbb
fwait
call
sub
sbb
stc
add
lds
mov
aaa
das
sbb
xor
in
test
movsl
add
push
mulb
xlat
popf
aaa
fs
mov
icebp
and
inc
jle
mov
dec
inc
lcall
xchg
orb
adc
outsl
mov
xor
popa
sub
pushf
mov
adc
xchg
mov
lock
loop
mov
sti
addr16
ds
imul
in
out
inc
mov
cmp
pushf
sti
dec
push
or
mov
xchg
cs
insb
mov
out
fildll
pop
ret
lahf
inc
aas
sub
push
xchg
jbe
in
imul
mov
mov
adc
mov
mov
xchg
movsb
cmp
loope
jo
int
cwtl
jb
in
rclb
pop
popf
xor
outsb
mov
push
fcompl
add
or
pop
jo
add
lods
and
mov
sahf
pusha
and
lret
rcrl
or
dec
fwait
jae
pop
push
test
int3
xchg
leave
adc
pop
mov
pop
cmpsb
jecxz
cmp
stos
xchg
fldt
stos
fdiv
pop
sbb
enter
jp
aas
cmp
cmpb
addr16
xorb
aas
mov
lret
mov
js
inc
fldcw
fstl
xchg
insl
jns
mov
in
or
xor
or
cld
mov
push
xchg
or
sub
sub
xlat
rcrb
rol
in
fs
aad
sub
sahf
int
or
jmp
fwait
idivl
gs
add
mov
mov
or
subl
sahf
pop
in
pop
xchg
stos
inc
fistl
add
cmp
rol
sbb
sahf
das
mov
jnp
out
mov
push
or
cmp
push
pop
mov
int3
sbb
add
shll
sbb
mov
neg
in
lret
mov
push
xorl
pusha
out
mov
dec
and
cmc
lods
fwait
dec
xchg
inc
shll
add
mov
pop
cmp
ficoms
gs
popf
in
lea
dec
dec
sub
cmp
mov
ret
test
enter
fwait
xchg
xor
adc
lock
into
pop
xchg
std
es
bound
iret
and
dec
and
fnsave
mov
ss
repz
add
addl
gs
xor
in
jb
pop
sbb
bound
rclb
add
pop
adc
cmp
xchg
fists
dec
jns
push
insb
push
repnz
adc
xor
mov
arpl
daa
out
cli
in
cmpsb
data16
jmp
jo
popa
jecxz
stos
fbld
xchg
dec
pop
enter
sub
test
loop
push
arpl
cmp
stos
loopne
mov
add
add
pop
adc
arpl
mov
xor
imul
jle
mulb
jae
sub
xor
xor
jp
jecxz
rorb
sub
add
add
xchg
add
sbb
and
js
inc
jae
push
xchg
mov
loope
pop
and
daa
mov
sbb
out
jns
stos
clc
out
mov
fwait
and
adc
add
sbbl
dec
ljmp
push
adc
cmp
imul
sbb
int
mov
push
add
dec
ljmp
das
and
cmp
cmp
and
cmc
popa
mov
push
cmc
aaa
lret
xor
cwtl
mov
out
adc
dec
add
adc
push
mov
addr16
mov
fs
mov
xor
int
pop
popa
ret
add
pusha
imul
test
sbb
adc
push
lock
pop
stc
je
gs
popa
and
out
fs
int3
addb
mov
daa
mov
mov
and
insb
outsl
insb
out
repz
or
lods
push
sub
sbb
jle
adc
pop
int
sbb
addb
mov
mov
push
lock
mov
lret
adc
loop
pop
loopne
shlb
cmpsl
xchg
pop
push
mov
cmp
orl
cmp
mov
inc
inc
jp
add
dec
loopne
lret
fsubp
or
and
cmp
rorb
jle
lock
sar
sbb
aas
mov
lods
repz
lods
sub
stos
inc
dec
jecxz
mov
dec
sbb
mov
aas
lds
ss
jl
add
jb
xor
add
pop
xchg
inc
call
pop
xor
jns
mov
cmp
sub
and
adc
mov
add
lret
in
scas
mov
cmp
cld
cltd
fcompl
cltd
mov
mov
mov
dec
inc
in
pop
sub
cmp
lock
fcmovu
add
in
loope
stos
xchg
xor
jmp
add
outsl
std
shlb
sbb
aam
mov
xlat
lods
sub
add
and
sahf
lahf
ret
hlt
mov
sbb
cli
js
cli
adc
ds
ss
add
test
add
dec
scas
push
xchg
outsb
xlat
shrb
cmpsl
cs
cmp
roll
insl
cmp
inc
cmp
pop
ffreep
mov
jl
cld
mov
leave
repz
and
ja
jb
pop
pop
mov
iret
jge
fwait
outsb
cli
rorb
mov
xor
aaa
sbb
xchg
pop
scas
addr16
sbb
sub
movsb
mov
clc
sahf
mov
push
mov
dec
int3
xor
jp
mulb
cwtl
ret
dec
shlb
ret
mov
je
stc
lret
loop
xor
jno
shll
idivb
jmp
inc
fwait
mov
outsl
cwtl
adc
int3
iret
test
sub
mov
insb
mov
cmc
or
stc
movsl
scas
and
add
cli
inc
inc
jne
fcmovbe
or
xor
jb
or
or
cwtl
push
sub
gs
sub
fimuls
and
out
push
cmp
lret
mov
lretw
push
xchg
repz
xchg
jg
fiaddl
push
je
fdiv
sub
xchg
pop
push
lods
jge
ret
jmp
jns
fcmovb
int
add
rorl
ljmp
std
mov
inc
mov
sbb
adc
out
imul
movsb
pop
repz
dec
sbb
repnz
jo
sub
jae
xchg
ja
and
or
adc
and
adc
jp
test
ds
cmpsl
sahf
ds
movsl
xchg
xchg
xor
in
lods
xchg
arpl
xorb
push
clc
xabort
mov
scas
jle
subb
cmp
mov
out
bound
pop
loop
loop
pop
clc
mov
sub
cmp
cmc
sub
sub
adc
mov
test
or
mov
repz
mov
xlat
dec
jbe
test
fsub
fcomps
mov
sbb
add
jb
in
lcall
pop
data16
and
inc
dec
push
loopne
fisubrl
lcall
cwtl
je
cmp
and
jae
xchg
sbb
mov
mov
mov
mov
sub
mov
jecxz
ljmp
clc
rcrb
lods
add
enter
mov
add
push
fsubrs
stc
cmp
lret
cmp
loope
jnp
xchg
scas
test
cmp
in
fstpl
xchg
popa
in
xchg
shll
xor
cmp
push
movsl
xor
pop
sarb
lods
xchg
mov
daa
add
xor
mov
add
iret
insb
sbb
sub
add
cmp
inc
jne
dec
cs
fsts
test
jne
push
testb
fdivrs
inc
xor
cs
push
in
adc
test
mov
shlb
andb
dec
adc
lret
jae
insl
addl
test
adc
push
xor
add
stos
idiv
sub
loopne,pn
mov
inc
outsb
stos
add
inc
xor
cmp
cld
fwait
ss
inc
mov
jmp
cmp
addb
inc
push
shl
jp
test
mov
add
or
or
sbb
xchg
mov
xchg
ljmp
mov
pop
test
xchg
cs
fmuls
xor
movsb
nop
in
jns
pushf
out
sarl
imul
stc
mov
nop
dec
repz
or
test
out
int
cmpsl
xchg
sbb
mov
enter
jp
pop
lods
lcall
inc
fidivl
inc
mov
add
imul
cs
je
outsb
out
cmp
inc
mov
pusha
jle
adc
dec
jge
popf
xchg
mov
xchg
test
cmpsl
mov
dec
and
dec
daa
leave
into
ja
iret
aad
pop
dec
in
adc
stos
jnp
mov
andb
pushf
enter
xchg
sub
inc
push
push
int
sarb
cmp
dec
pusha
push
pop
jg
mov
movsl
pop
sub
or
movl
xchg
mov
sahf
mov
bnd
lods
mov
push
aaa
outsb
int
test
stos
incl
mov
movsb
pop
sub
dec
or
sbb
in
ret
mov
add
cmp
or
mov
jge
or
inc
xor
adc
insl
andl
int3
pop
fisubrl
push
add
mov
stos
cmp
add
inc
pop
pushf
ja
mov
mov
mov
enter
loop
aad
fwait
push
lret
hlt
insl
lds
mov
jno
inc
mov
cmp
and
in
adc
int
add
out
ja
inc
adc
mov
scas
xchg
cmp
jp
sbb
leave
popf
mov
cmp
stos
lcall
popa
popf
xor
add
aad
add
test
sub
les
imul
arpl
mov
out
cli
jecxz
xchg
adc
repnz
jge
outsl
push
cwtl
mov
sbb
jl
pop
aaa
bound
or
add
imul
mov
mov
cmp
pop
arpl
rolb
jb
push
xchg
loop
icebp
xchg
pop
push
pop
mov
cmpsl
bnd
hlt
mov
sti
scas
xchg
mov
iret
repz
es
insb
test
push
js
mov
xchg
inc
jb
nop
cmp
addb
nop
mov
sbb
pop
cmpsb
outsl
push
fsub
cmp
inc
inc
mov
cmp
jno
ret
xchg
push
sbb
jecxz
pop
mov
jnp
sbb
mov
xor
push
ds
lods
xor
je
xchg
push
mov
sub
inc
clc
add
fwait
mov
sbb
adc
imul
aad
lods
fwait
xchg
fisttpl
popf
aam
push
stos
mov
sbb
sti
push
adc
enter
cmp
gs
lret
in
cmpsb
pop
enter
adc
cmc
inc
aas
sbb
and
ljmp
mov
dec
xor
sbb
push
mov
scas
cmp
movsb
cmp
mov
mov
jmp
pop
sub
ljmp
popf
aam
and
mov
xchg
push
push
cltd
fdivr
bound
fwait
jl
ret
adc
adc
pop
insl
push
sbb
lret
dec
mov
and
mov
sub
shr
cmpsl
or
leave
xchg
pop
push
sti
mov
aad
pop
popf
cld
adc
test
les
mov
arpl
js
shll
add
or
iret
xchg
jl
sbbl
iret
sbb
arpl
push
pushf
add
sub
dec
mov
sbb
daa
and
adc
out
push
gs
repnz
aam
ds
cmpsl
mov
cmp
je
or
cmp
test
jae
repz
pushf
cs
data16
cmp
cmp
aam
xchg
pop
std
push
jg
lea
xchg
movsb
pop
mov
sub
push
adc
shlb
call
xor
or
push
inc
or
subl
arpl
bound
filds
je
pop
out
jp
into
jmp
or
sub
loopne
jle
lret
mov
imul
in
ret
push
mov
and
iret
inc
pop
arpl
pushf
sbb
lret
mov
mov
inc
dec
and
xchg
aas
out
popa
push
std
dec
outsl
icebp
mov
jbe
mov
test
aad
jg
test
popf
jae
fstp
sub
das
inc
mov
jmp
lret
sti
xchg
xor
jno
popf
inc
test
mov
test
jo
push
call
or
js
cltd
lock
fmull
imul
push
add
ljmp
pusha
jo
out
mov
into
fsubrs
movsl
xchg
xchg
shrb
fstpl
fs
xchg
and
jmp
adcl
xchg
cmp
jl
xchg
jne
decl
ljmp
sbb
sub
insl
inc
xchg
test
imul
pop
mov
push
inc
cmc
pop
sbb
xor
arpl
dec
push
mov
dec
pop
enter
cmpsl
hlt
shrb
push
ret
add
mov
inc
das
xor
mov
js
adc
pop
mov
xor
or
dec
jne
movsl
out
inc
inc
inc
push
cmpsl
sub
stc
fldenv
adc
jne
aaa
sbb
hlt
int
and
pop
jle
loopne
cli
jno
test
mov
xchg
outsb
outsb
in
subl
in
out
mov
dec
gs
inc
insb
sbb
into
xor
lcall
dec
dec
push
loopne
sbb
roll
ret
fsts
mov
mov
xor
rcr
rorl
repnz
cs
inc
movsb
mov
adc
cwtl
test
dec
mov
scas
sarl
xorl
pmovmskb
out
or
mov
aam
add
test
jge
cmp
mov
test
push
data16
pop
inc
cli
sbb
xchg
pop
adc
in
repz
out
dec
mov
and
insl
sub
ss
aam
xchg
xchg
jmp
lret
imul
sbb
popf
fists
mov
jmp
adc
pop
xchg
fiadds
xor
scas
loope
xchg
mov
inc
mov
mov
xchg
or
fisubrl
cmpb
fildll
mov
mov
jne
cmpsl
adc
xchg
push
idiv
push
subb
mov
push
push
xorb
enter
rorb
and
data16
lahf
pop
inc
shl
int3
icebp
repz
mov
and
dec
or
scas
mov
add
enter
aam
jno
inc
popa
pop
pop
stc
rcrb
mov
rcr
sbb
stc
rol
adc
push
xor
jge
sub
mov
xchg
mov
dec
pop
mov
ljmp
scas
ljmp
mov
iret
insl
push
add
pushf
popa
xchg
push
test
repz
lcall
adcb
push
push
cmp
ss
mov
xchg
dec
arpl
mov
mov
jmp
cmpsb
adc
pusha
jge
lea
or
outsb
jmp
xchg
imul
loope
shlb
popw
push
xchg
mov
jge
ret
add
inc
sarb
sbb
loop
scas
ret
pop
bound
or
xor
enter
outsb
jmp
cmpl
test
push
sbb
out
inc
and
in
and
adc
xor
cmp
or
pusha
xor
test
insl
lock
jne
add
pop
outsl
insl
or
add
shrl
ret
mov
roll
iret
push
subb
mov
bound
andb
iret
sub
and
andb
pop
sbb
xlat
popa
sbb
xchg
lcall
loope
push
pop
xabort
xchg
and
ljmp
loopnew
daa
jp
shl
mov
inc
repz
lret
pusha
fwait
push
outsb
pop
push
cltd
add
xchg
repnz
cmp
mov
mov
or
push
sbb
std
xchg
add
push
pop
cmp
test
outsb
in
mov
mov
jmp
xor
pop
adc
mov
cld
mov
in
jg
dec
test
fdivr
addb
push
xlat
lahf
or
jb
mov
imul
imul
ds
pop
std
fistpl
lock
mov
mov
lret
je
daa
jmp
mul
lods
sub
xor
rolb
std
aad
ljmp
mov
insb
pushf
into
dec
xor
imul
clc
fdivr
mov
jae
daa
lods
popf
mov
ret
pop
outsl
xlat
fimuls
pop
repz
bound
sbb
in
and
adc
mov
mov
pop
push
test
decb
out
jmp
pop
or
andl
and
shl
insl
push
xorb
sbb
jne
sub
fistl
dec
xchg
jae
idivl
pop
lock
mov
sub
imulb
idivb
lock
jl
jo
jmp
xlat
notl
shrb
xor
or
addr16
push
mov
mov
scas
daa
das
pop
fwait
imulb
out
scas
aam
test
mov
testb
jnp
dec
xor
or
dec
fldcw
pop
jbe
pop
xchg
stc
leave
pop
mov
mov
push
pop
insb
test
enter
out
adc
movl
sub
jl
inc
mov
cmp
jae
sub
mov
out
jns
cmp
pop
in
sysret
into
into
jecxz
fs
addr16
jbe
jnp
and
cmpb
push
scas
mov
lcall
aad
and
fisttpl
cmp
out
mov
stc
pop
das
mov
arpl
stc
mov
inc
loop
or
xchg
loope
rclb
xlat
xchg
stc
fisttps
daa
test
aaa
or
arpl
mov
lods
mov
test
rcl
loope
orl
add
and
pop
mov
stos
sub
daa
lcall
jecxz
or
fdivrl
push
movsb
cs
scas
dec
clc
jbe
jnp
pop
sbb
jp
and
pop
mov
pop
movsb
push
mov
pop
add
jmp
cmp
sbb
mov
fidivs
xor
push
imul
or
pop
mov
stos
shrb
pop
mov
dec
rcll
outsl
push
mov
in
popf
xchg
push
shll
cmc
pop
nop
stos
cmp
iret
mov
push
pop
out
in
pop
lahf
push
out
test
jp
pop
fwait
pop
daa
pop
adc
movsb
aad
dec
cmp
sti
gs
xchg
jg
out
imul
inc
pop
push
xchg
or
imul
lret
pusha
mov
repz
add
mov
push
dec
scas
outsb
loop
int3
popf
adc
test
pop
dec
push
arpl
mov
pop
rorb
push
and
pusha
lock
cld
add
je
jge
sub
dec
push
jle
shlb
jmp
jg
in
jae
sar
push
rorl
sti
das
xchg
push
adc
push
adc
mov
or
dec
daa
dec
xchg
test
mov
push
test
out
dec
adc
in
fidivl
fdivl
fldcw
pop
int
mov
add
addb
pop
data16
sub
les
sbb
mov
jle
lret
orb
out
inc
jno
push
repnz
cmc
out
cmp
inc
icebp
arpl
jmp
cli
add
fadds
rclb
sbb
hlt
pusha
push
clc
hlt
xor
mov
jbe
ljmp
loop
pop
fcompl
dec
ficoml
pop
ficoms
fsts
cmp
and
pop
mov
out
xor
fstps
sbb
dec
sub
mov
movsb
add
adc
sti
xlat
add
clc
mulb
adc
outsb
dec
xchg
ret
mov
mov
sub
or
ja
xchg
xor
jecxz
dec
sarb
fucomp
in
mov
fstpt
lds
sub
fsubrs
lahf
fdivrs
faddl
lea
pop
cmp
test
cmp
or
push
xlat
push
loopne
jnp
dec
lret
inc
or
add
xlat
ljmp
xor
push
adc
xchg
fs
add
addr16
gs
jp
cmp
rorb
xchg
cmc
fsubl
pusha
std
jp
std
mov
add
push
push
in
in
or
lret
mov
dec
cwtl
push
adc
jp
subb
mov
dec
jmp
sub
add
call
ljmp
xchg
sub
sub
sub
fsubl
pop
lahf
rorb
rolb
in
jae
sarl
rorl
push
sbb
leave
cwtl
pop
leave
aaa
cwtl
mov
cmc
adcb
xchg
cmp
lret
icebp
mov
aad
aas
fisubrl
jns
add
add
outsb
add
ja
insb
add
add
add
add
add
add
jns
jne
add
add
add
add
outsb
add
add
outsl
add
jb
dec
add
je
add
popa
outsb
outsl
je
gs
inc
insb
insb
popa
push
jb
add
imul
popa
add
jae
add
add
jae
add
add
add
add
push
inc
add
add
push
add
add
add
add
inc
add
add
push
add
add
jae
add
imul
add
je
jb
add
insb
popa
push
add
data16
add
je
add
insb
popa
je
gs
inc
add
add
push
add
add
jb
add
add
arpl
add
add
add
add
pop
add
outsb
add
add
insb
add
add
add
imul
add
add
je
gs
jne
outsb
add
add
add
arpl
je
je
add
je
insb
add
add
arpl
imul
add
inc
add
add
push
popa
jb
add
add
jb
insb
add
je
add
je
add
add
add
add
add
outsl
add
add
add
outsb
imul
add
add
jne
fs
je
outsb
imul
add
jb
add
