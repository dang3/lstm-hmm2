fadds
lds
add
add
xor
jecxz
lss
stc
data16
sbb
test
pop
jnp
and
xchg
call
ret
loop
scas
lods
mov
ljmp
dec
dec
mov
dec
inc
fsubl
ljmp
xor
lret
stos
sbb
dec
add
shrl
fdiv
inc
pop
in
or
or
rorb
add
es
rcrl
jecxz,pn
mov
inc
xchg
outsb
pop
mov
xchg
out
dec
inc
stos
mov
pop
hlt
cmp
loope
push
in
cmp
mov
ret
pop
shr
mov
push
sbb
mov
fucomi
cmp
fbld
sub
or
loope
xchg
cmp
xor
popl
sbbb
sub
inc
push
push
pop
push
mov
mov
insb
mov
and
sti
jle
cmpsb
loopne
mov
adc
and
mov
and
imul
mov
addr16
jbe
or
pop
imul
or
stc
out
jle
outsl
xorb
mov
ficoml
test
mov
es
mov
lds
and
aam
negb
adc
sbb
mov
jno
xor
sub
pop
outsb
repz
fcmovbe
ret
mov
nop
add
or
cwtl
inc
inc
sbb
and
loope
push
jbe
mov
mov
int3
and
shrb
mov
inc
mov
inc
scas
mov
test
sbb
inc
jno
int
rcrb
inc
mov
rorb
fwait
mov
dec
data16
aad
dec
fdivs
xchg
jnp
psubusw
movsb
dec
dec
decb
arpl
icebp
dec
or
or
xlat
into
stc
pop
mov
and
jb
jmp
push
rcll
repnz
mov
ljmp
inc
into
cmp
mov
mov
loop
jns
xchg
mov
imul
lods
clc
inc
and
push
sbb
repz
pop
js
mov
mov
ja
sub
cmp
mov
inc
add
jmp
jae
call
push
push
mov
scas
fisubl
inc
xor
and
sbb
into
inc
or
mov
loopne
shll
lahf
aad
inc
flds
xchg
jl
cs
cmpsb
js
out
mov
jmp
outsl
stos
dec
pushf
lcall
out
clc
cmc
pop
rolb
movsb
dec
js
mov
or
cmp
stos
mov
lds
cs
js
jns
push
fisttpl
cli
and
cmp
daa
orl
jle
lret
aad
rorl
mov
mov
push
pop
shll
aam
lret
push
xchg
push
dec
ret
sahf
daa
les
lds
or
dec
ds
cmp
jp
jne
dec
mov
and
mov
daa
bound
daa
les
mov
mov
mov
insl
test
mov
sub
add
jns
and
ljmp
shrb
pushf
repz
mov
add
pop
xor
insl
adcl
mov
or
lock
pop
mov
stos
mov
in
ret
dec
aaa
or
stc
rclb
lret
pop
adc
jmp
out
enter
mov
adc
fsubs
test
adc
push
jg
repz
cmpsl
mov
add
pop
fwait
test
cld
mov
mov
out
ljmp
fwait
xor
lret
imul
shrb
pusha
fistpll
rcll
xchg
xchg
in
js
fwait
ljmp
cmovle
in
pop
outsb
push
imul
hlt
jecxz
insl
sub
mov
inc
adc
push
jb
aad
push
xchg
jle
bnd
lret
and
sti
push
scas
dec
repnz
xor
cmp
mov
mov
xchg
fwait
push
inc
fs
ret
dec
stos
pop
mov
test
lret
aam
mov
inc
push
cmp
inc
lret
xlat
cli
cmpb
mov
jo
xor
jle
sti
jp
in
xchg
lods
jl
sbb
mov
aas
push
adc
popf
jl
sub
insb
dec
dec
sbb
cltd
or
sub
mov
icebp
andb
gs
xor
subl
xor
mov
arpl
int
aad
ror
fsts
mov
or
and
pop
mov
sahf
shl
imul
cmp
jmp
lcall
cmp
adc
inc
sbb
sub
aas
pop
push
push
sahf
cwtl
pop
mov
pusha
mov
or
mov
mov
mov
pop
popf
bound
sub
and
cmp
jbe
mov
push
shrl
test
inc
push
jp
leave
xchg
adc
loopne
int3
cmc
cmp
inc
outsb
push
ret
mov
dec
das
add
in
push
ds
addb
xchg
push
leave
in
test
push
add
fs
filds
add
xchg
js
cmp
jge
and
popf
inc
insb
bound
jno
mov
cltd
in
mov
rcrl
xchg
xchg
add
cmc
dec
mov
mov
lret
aaa
or
test
adc
mov
enter
insl
mov
lcall
push
data16
jecxz
xchg
push
and
and
popf
xorb
ljmp
sub
dec
test
xchg
mov
and
push
xlat
pushf
pop
sbb
and
mov
test
mov
dec
in
push
add
test
pusha
es
inc
js
jo
loopne
rorb
sbb
or
lret
sar
mov
movsb
setnp
xlat
popf
xlat
sbb
loopne
lea
ret
jl
xor
rorb
outsb
fcmovbe
dec
inc
dec
pop
cwtl
mov
add
lea
add
popf
negb
arpl
fimull
or
xor
cmp
insl
ja
les
xchg
pop
xor
lds
cmpsb
out
inc
push
inc
mov
fsts
fs
ret
jle
mov
popf
pop
ret
mov
addl
rorb
xor
lret
xchg
loop
lcall
fwait
and
out
test
les
divl
push
popl
adc
mull
xor
in
loope
jns
pop
aad
loope
fs
sarl
xchg
sub
dec
inc
sub
cmp
and
sbbl
and
cmp
sub
lea
enter
push
jmp
cmp
out
jo
mov
xchg
mov
xlat
sbb
push
mov
cmp
test
fs
sti
nop
sbb
loop
pushf
mov
sub
add
push
or
addr16
aas
pop
outsl
mov
push
scas
inc
and
daa
mov
insb
mov
xchg
add
int3
sarl
mov
jns
mov
and
out
outsb
data16
insb
sub
repz
jg
insl
xor
in
inc
mov
and
outsl
dec
and
mov
out
aas
iret
lds
js
iret
jns
scas
data16
and
scas
aaa
sbb
rclb
push
stos
xor
xchg
xor
ljmp
pop
lods
sbb
or
in
push
lods
mov
cld
xchg
push
mov
jp
xchg
and
movsb
mov
std
lods
jne
in
out
xchg
cmp
test
dec
ds
dec
in
mov
flds
mov
jnp
icebp
fsubl
push
lret
outsl
cs
daa
add
movsb
add
mov
jb
rcrb
adc
lea
leave
sti
pop
ljmp
cmp
xor
jp
jge
mov
and
or
mov
mov
test
mov
insb
and
jg
ds
pop
jns
push
out
subl
scas
xchg
hlt
adc
lcall
mov
jbe
aam
cltd
jge
cs
push
add
mov
sub
shlb
xor
fsubrs
aad
nop
int
dec
push
pop
cli
popf
jne
and
imul
ss
sbb
mov
mov
aaa
lods
cmp
adc
mov
and
mov
adc
in
sbb
and
pop
adcb
dec
mov
pop
push
mov
xorb
loopne
in
adc
add
mov
jb
inc
xchg
fistpll
push
and
and
filds
cmp
dec
enter
cmpsl
add
xor
out
movsl
xlat
pop
mov
dec
shlb
gs
pop
in
cmp
mov
leave
lods
loope
jno
fucom
pop
shrl
fmuls
inc
mov
jmp
xor
mov
lods
push
cmp
repz
xchg
push
flds
xor
imul
mov
add
inc
test
sub
lcall
pop
xor
out
int
inc
fistpl
out
jne
loop
mov
test
je
shl
subb
das
outsb
mov
daa
pop
dec
sub
flds
in
push
data16
mov
mov
fnstenv
cmp
orl
les
popa
pop
xchg
xchg
jno
scas
jbe
aaa
arpl
jbe
test
loope
jle
adc
xchg
test
mov
push
int
sbb
or
insb
int
add
push
adc
inc
or
add
adc
imul
jo
or
and
iret
sahf
shr
loopne
fsubrs
out
and
lahf
in
adc
and
and
jle
mov
cld
adc
leave
sbb
in
sub
adc
je
lock
in
fs
mov
add
pop
fimull
daa
stc
sub
std
adc
pop
xor
mov
aad
jg
jne
sbb
sbb
dec
cltd
lock
sbb
sbb
movsl
rorb
mov
inc
cwtl
nop
mov
dec
sti
orb
lods
xchg
ljmp
push
xchg
lcall
test
inc
add
and
ds
lahf
mov
test
sbb
or
data16
loope
jp
movsb
ss
mov
push
mov
mov
mov
call
mov
lea
call
and
push
imul
call
imul
inc
lea
imul
lea
add
call
inc
inc
inc
inc
imul
dec
add
mov
mov
imul
imul
dec
lea
imul
call
sub
add
add
mov
inc
call
add
sub
call
mov
mov
add
inc
movzwl
imul
xor
add
pop
lea
or
inc
add
pop
mov
mov
pop
lea
add
sub
sub
pop
inc
inc
xor
mov
mov
dec
mov
dec
pop
mov
add
pop
mov
sub
mov
inc
mov
call
or
add
add
add
ret
inc
imul
push
lea
mov
push
xor
inc
push
add
dec
push
inc
lea
push
dec
mov
mov
inc
dec
push
xor
ret
push
dec
mov
and
mov
add
sub
add
push
inc
add
sub
call
pop
ret
jmp
lea
and
mov
lea
movzbl
sub
or
xchg
dec
and
sub
and
xor
mov
add
movswl
lea
inc
mov
add
dec
jne
sub
mov
add
inc
pop
lea
dec
pop
and
inc
pop
sub
imul
sub
mov
lea
sub
movzbl
imul
add
dec
sub
add
ret
push
push
dec
inc
push
inc
add
and
inc
inc
imul
push
movswl
inc
lea
lea
push
add
mov
movzbl
add
imul
sub
lea
push
movzbl
mov
mov
push
dec
lea
xor
movzbl
dec
push
add
sub
push
dec
dec
pushl
mov
call
dec
add
movsbl
dec
imul
movzbl
dec
or
mov
pop
ret
dec
cmp
jb
dec
xor
lea
add
mov
sub
mov
inc
inc
inc
inc
or
inc
mov
sub
mov
sub
inc
cmp
jb
inc
pop
sub
lea
dec
or
lea
dec
xor
inc
mov
mov
dec
lea
lea
xor
lea
dec
xor
or
mov
lea
add
test
jbe
sub
add
mov
add
mov
inc
dec
dec
mov
add
dec
imul
and
movzbl
add
mov
add
add
movzbl
mov
add
mov
xor
and
imul
mov
mov
inc
add
mov
sub
movswl
mov
add
mov
mov
imul
dec
add
dec
mov
dec
dec
jne
inc
mov
inc
sub
mov
dec
sub
mov
mov
mov
mov
lea
imul
movsbl
lea
mov
mov
movsbl
mov
sub
add
test
jbe
mov
inc
lea
mov
sub
mov
inc
mov
mov
mov
inc
lea
inc
movsbl
xor
inc
inc
sub
add
inc
lea
inc
and
inc
sub
mov
lea
lea
movzbl
dec
sub
add
mov
inc
and
mov
mov
mov
mov
inc
movzbl
dec
lea
mov
mov
add
mov
dec
dec
movzbl
mov
lea
add
dec
jmp
push
mov
sub
add
add
xor
mov
mov
mov
mov
inc
add
add
lea
add
add
lea
and
add
mov
mov
xor
imul
mov
dec
xor
inc
inc
and
mov
lea
inc
xor
xor
mov
inc
movzwl
mov
and
dec
cmp
je
movsbl
mov
add
push
dec
call
call
mov
or
call
call
lea
add
mov
mov
lea
lea
mov
ret
lea
dec
pop
inc
ret
push
mov
dec
mov
mov
mov
push
inc
mov
push
inc
push
imul
push
sub
inc
lea
mov
imul
call
lea
push
mov
dec
xor
or
sub
imul
neg
add
lea
mov
sub
mov
mov
mov
and
mov
mov
mov
lea
inc
sub
movswl
dec
je
sub
add
sub
mov
add
lea
mov
lea
mov
mov
mov
repnz
imul
mov
add
sub
jmp
inc
sub
imul
xor
inc
dec
dec
mov
jmp
mov
imul
inc
imul
lea
inc
dec
add
pop
pop
ret
push
dec
imul
mov
movzwl
dec
imul
dec
sub
and
mov
sub
dec
imul
inc
movzbl
add
add
add
xor
imul
inc
lea
add
inc
lea
inc
pop
ret
sub
sub
mov
movzwl
movsbl
mov
dec
inc
mov
add
mov
mov
add
add
xor
add
dec
mov
inc
sub
inc
mov
dec
add
movzbl
lea
mov
cmp
jb
imul
push
dec
mov
push
dec
sub
push
movzbl
dec
xor
inc
mov
xor
mov
inc
xor
add
sub
push
mov
mov
mov
mov
sub
xor
mov
sub
mov
sub
dec
mov
dec
mov
movzbl
xor
and
add
inc
add
or
imul
add
inc
mov
movzbl
sub
movzwl
dec
imul
lea
lea
dec
inc
add
mov
add
inc
imul
lea
mov
jmp
and
test
xchg
sti
mov
dec
adc
mov
and
pop
aad
and
sti
aaa
rcrb
cld
inc
ffreep
and
sub
lret
insl
imul
in
pushf
movsb
push
stos
pop
adc
test
out
insl
mov
adc
sub
mov
push
call
out
jp
mov
nop
stc
imul
test
sub
jne
mov
popa
push
fldcw
in
pop
aas
xor
jmp
push
sub
mov
aam
mov
pop
movl
dec
or
jbe
pusha
xchg
push
leave
push
xchg
fisubrs
sub
fldl
sub
or
or
mov
repz
jge
mov
sub
mov
enter
je
repz
fcmovb
mov
push
inc
mov
and
mov
shl
scas
loope
lcall
lret
aaa
or
ficoml
sub
shll
arpl
cmpsl
pop
inc
or
cmp
xchg
daa
push
ret
jns
and
stos
aam
test
sub
test
jb
les
mov
pop
dec
pop
fnstcw
cld
adc
push
out
adc
pushf
push
mov
push
pop
jg
xchg
jo
aaa
xor
in
jns
in
inc
add
xor
imul
jg
cmc
fisttpll
sub
stc
fldenv
xchg
dec
scas
pop
cmpsb
ret
inc
push
cmp
lds
mov
addr16
push
filds
jns
negl
rorl
cmpsb
repnz
sub
jno
les
scas
outsb
xorb
mov
in
inc
xchg
dec
mov
mov
sbb
dec
jg
jle
cmc
mov
dec
mov
xlat
sub
add
sub
push
xchg
inc
add
lcall
push
adc
sbb
sub
lock
push
call
shlb
jle
dec
inc
and
mov
sarl
repnz
and
and
xchg
adc
or
icebp
sub
push
mov
pmaxub
icebp
mov
sub
shrl
jl
lock
out
icebp
mov
dec
cmp
cmpb
rorl
push
iret
sahf
sub
jno
push
in
mov
cld
ljmp
fs
push
push
loop
dec
fdivs
inc
pop
xchg
sar
lea
jo
clc
xchg
xchg
xchg
out
pop
fisubs
jno
mov
xchg
rclb
sub
dec
lods
ret
mov
mov
push
jge
xor
push
jg
add
sahf
xchg
daa
daa
cmp
ss
lahf
push
aaa
shll
dec
enter
loopne
in
arpl
dec
xor
push
mov
mov
pop
pop
xadd
aaa
loop
mov
mov
mov
ss
and
insl
push
jo
push
cmp
sbb
xchg
xchg
inc
mov
cmp
nop
mov
aad
leave
ss
pop
sti
jo
dec
adcb
in
shlb
pop
sub
jecxz,pn
sbbl
pop
pop
xchg
mov
leave
cmp
mov
enter
push
or
pop
pop
add
or
mov
xor
int3
sub
movsl
lret
mov
add
xor
mov
or
fldcw
mov
insl
push
lcall
dec
push
je
loop
jno
in
ds
mov
push
movsb
jge
mov
push
and
dec
push
cwtl
fs
sbbl
mov
lret
nop
xchg
push
and
cmp
les
ret
in
dec
aas
cmpb
mov
daa
mov
sub
mov
inc
push
push
pop
dec
dec
je
mov
cmpsb
mov
inc
pop
cwtl
sbb
add
mov
fcmovnbe
xchg
sbb
mov
pushf
mov
push
add
jg
aas
xchg
sub
jle
and
test
cmp
pop
sahf
or
jbe
es
shlb
mov
cmpsl
imul
mov
scas
jecxz
xchg
mov
nop
in
dec
cmpb
xchg
mov
icebp
and
xor
es
sahf
mov
pop
adc
imul
push
and
jle
testb
cmpsl
roll
fwait
sbb
jnp
idivl
dec
push
movsl
out
push
outsl
lods
mov
rcrb
loopne
xchg
cmpsw
and
fistl
into
push
sbb
nop
mov
sub
push
xor
out
lcall
push
xchg
sti
jno
push
int
aam
outsl
dec
in
sbb
mov
add
out
out
push
aad
sbb
cmp
or
notl
scas
jbe
inc
call
stos
and
pop
mov
test
xor
dec
out
push
mov
iret
adc
jle
push
les
mov
scas
lock
and
mov
iret
xlat
jecxz
data16
pop
xorl
test
mov
fwait
stos
push
mov
mov
pop
mov
xchg
clc
jno
lock
negl
or
insl
cltd
in
rolb
insb
je
rcr
call
inc
adc
movsb
pushf
fwait
jp
adc
imul
adc
ret
jecxz
mov
jge
addr16
into
mov
pusha
test
in
sub
notb
loop
arpl
push
aad
leave
cli
add
aad
aad
scas
sbb
cmp
js
and
mov
cmp
or
push
cmp
std
push
roll
mov
sbb
int
ljmp
shl
aas
lock
xchg
dec
sbb
out
jl
or
xchg
dec
js
aam
adc
fistps
out
push
in
aam
mov
insb
es
push
add
adc
fnsave
mov
arpl
js
das
lds
sub
int
sbb
into
add
cmp
nop
out
data16
into
pop
ret
cli
xor
shll
orl
ds
pop
push
sub
mov
dec
test
sbb
in
ja
xlat
mov
cmpsb
cmpsl
cmp
sbb
cmpsl
lods
mov
mov
add
mov
popf
cmp
sti
push
pusha
repz
add
daa
push
loop,pn
stc
sbb
dec
add
test
xchg
out
addl
pushf
rcrl
push
sbb
fildl
das
jns
shl
sbbl
cmp
mov
leave
mov
push
xor
dec
es
sbb
mov
cs
add
mov
cmc
and
fnsave
out
sbb
test
mov
arpl
sub
xor
dec
in
and
cmp
inc
cmp
hlt
cmp
sbb
push
inc
mov
mov
leave
pop
push
out
push
pop
push
ja
ja
in
ja
or
fsubrl
xor
leave
rcrb
push
jnp
aaa
sbb
dec
in
arpl
cmp
cs
idiv
sbb
jbe
aam
dec
enter
sub
jp
repnz
jb
loop
cli
mov
int3
jno
out
xchg
sub
fstp
sahf
push
pop
push
xchg
ljmp
add
xor
mov
jge
xor
or
adc
pop
inc
lock
iret
jb
arpl
int
xchg
ffree
idivl
test
xor
movsb
xlat
rclb
inc
sbbb
lahf
insl
call
or
jae
bound
in
pop
xor
pusha
insl
pusha
mov
fidivrs
push
pop
pop
adc
sbb
dec
xchg
mov
xor
cmp
mov
pop
loopne
loope
hlt
into
xchg
sbb
jg
test
add
loope
pop
inc
les
insb
mov
mov
cmpsb
xlat
sahf
sbb
fdivp
cmp
push
jno
xchg
les
fs
adc
inc
bound
cmp
sbb
pop
adcb
sub
xchg
cwtl
addr16
std
test
icebp
dec
lcall
adc
out
lea
pop
pop
fdivrs
xchg
sti
add
lock
sub
mov
mov
or
mov
inc
inc
sub
frstor
pop
sbb
mov
ss
or
stos
icebp
inc
data16
sub
mov
pop
addr16
mov
faddl
cmp
imul
mov
cmp
mov
cltd
sub
das
cmp
mov
mov
cmp
aad
dec
std
fstpt
or
xor
push
sub
cmp
addb
mov
pop
je
call
push
jbe
jl
mov
rol
pop
sarb
jb
mov
mov
add
pop
insb
jg
mov
mov
pop
ja
in
adc
and
icebp
mov
pop
push
lock
popf
ss
lea
call
inc
push
mov
push
lods
imul
sbb
hlt
cmp
fs
lods
lea
lcall
insl
mov
mov
dec
clc
gs
push
dec
leave
and
idivl
cmp
sbb
adc
add
aam
addr16
fsubrs
imul
fwait
js
bts
popf
mov
aaa
adc
dec
mov
cmp
lods
adc
rclb
insb
test
jnp
dec
pop
outsb
pop
fs
enter
and
mov
imul
std
xor
push
dec
ret
bound
pop
xchg
push
add
push
stos
in
popa
add
pop
imul
fistps
mov
jge
add
pop
cmpsl
and
inc
rcrb
mov
mov
cmpsb
sub
pop
ret
gs
or
sub
lods
stos
jnp
cld
adc
or
outsl
jmp
enter
sahf
mov
sbbb
mov
lock
into
repz
cmpsb
loop
adc
sub
bound
lret
pop
ret
pop
push
es
roll
fstl
dec
fistl
bound
cmp
and
push
outsb
cmp
ret
and
divb
aam
test
clc
fiadds
lcall
and
pop
les
fwait
mov
push
mov
psubsw
sub
in
das
sbb
out
lods
push
mov
sub
js
mov
jp
push
ficomps
popf
addr16
sub
or
testl
mov
ss
mov
cltd
stos
jge
pop
and
ljmp
into
fwait
add
xor
dec
cli
mov
sbb
cmpsl
dec
push
adc
pop
leave
pop
bound
mov
pop
stos
aam
or
cwtl
mov
mov
push
testl
xchg
inc
push
jne
jp
jl
or
or
sub
imul
xorb
or
jbe
mov
mov
jbe
outsl
call
mov
pop
dec
add
shll
into
add
cmp
pop
in
xor
int
cs
pop
pusha
fstpt
insl
pop
mov
push
movb
xchg
movsb
out
lea
push
imul
out
add
insb
cltd
test
jo
add
data16
call
sub
adc
mov
mov
jnp
pcmpeqw
mov
scas
test
jne
jbe,pn
icebp
add
mov
or
xorb
out
mov
repnz
cli
and
and
fwait
lea
push
cmp
popf
lods
mov
pop
lret
pop
jb
in
repnz
jne
pop
cli
pusha
sub
int
sti
pop
test
insl
cmp
pop
cld
add
dec
lret
sbb
aam
sub
xor
pop
fdivrp
rol
xor
pop
cmc
inc
xchg
xlat
jg
mov
pushf
pop
add
push
mov
shll
mov
cld
pop
mov
popf
push
pop
mov
push
xchg
mov
inc
cltd
add
inc
lock
fsubl
scas
lock
inc
inc
cmp
sbb
je
cmp
pop
aaa
sbb
les
out
outsb
movsl
mov
pushf
rorb
xor
fucom
iret
call
int
jo,pt
or
xor
mov
xchg
or
fwait
insb
mov
imul
fcmovnb
enter
jl
cld
mov
lret
sub
orl
dec
mov
xchg
sbb
inc
test
xor
test
ret
sbb
iret
and
lret
dec
lahf
pop
or
repz
loop
test
insl
inc
jmp
mov
jmp
aas
icebp
cwtl
mov
sti
sbb
pop
ret
xchg
sub
aaa
xlat
sub
ljmp
loopne
fld
add
bound
ss
jg
aam
push
out
enter
add
push
cmp
ret
ja
push
test
cmpsl
das
std
lahf
ja
in
out
stos
ficompl
pop
sbb
mov
lcall
cmc
andnps
jb
imul
fld
xor
xchg
jo
jmp
jge
pop
in
and
push
out
sbb
cmp
xchg
data16
mov
sbb
lds
pop
push
pop
push
mov
push
jle
icebp
stos
lret
pop
sub
mov
lcall
int
jecxz
cmp
loope
inc
lahf
jne
xchg
imul
inc
sbb
inc
bound
mov
push
mov
nop
sub
stc
mov
jmp
adc
fisubs
cmp
push
mov
shll
into
ds
test
addr16
ljmp
sub
mov
cs
inc
rolb
and
rclb
repnz
push
or
jmp
inc
shlb
loopne
mov
mov
das
mov
pop
repz
mov
inc
dec
mov
or
mov
xchg
inc
insb
imul
and
out
pop
js
pop
out
pop
jnp
adc
fnsave
outsb
mov
loopne
decl
fisubrl
jb
or
add
ss
dec
push
xchg
push
or
push
mov
loop
add
xchg
dec
bound
adc
mov
jno
mov
mov
push
mov
lock
shlb
and
in
std
xchg
xor
cltd
inc
sub
mov
jge
fdivp
cmp
rol
cmp
mov
sub
xchg
push
mov
mov
jno
jle
jnp
sti
clc
cmpsl
or
inc
sub
mov
and
jg
fwait
xor
int3
add
and
icebp
dec
mulb
dec
jle
fdivp
sub
pop
push
ljmp
mov
out
xchg
or
fsubl
or
and
mov
push
add
push
xchg
jmp
mov
bound
sahf
ficoms
add
push
add
repz
ljmp
insb
xchg
shrl
movsb
lahf
cmp
call
imul
xor
sbb
scas
nop
pop
cmpsl
movsl
movsb
jp
push
adc
xor
mov
test
xchg
cmp
pusha
mov
je
fmull
movsl
scas
or
les
and
loop
iret
fdiv
sub
pop
outsl
inc
les
std
jne
mov
inc
mov
adc
and
mov
mov
fwait
push
mov
scas
push
sbb
pop
xchg
mov
out
and
out
and
mov
xchg
repnz
mov
cmp
decb
int3
pop
xor
jno
xor
push
daa
push
mov
mov
jo
shl
inc
sbbb
or
rcrl
sub
shl
dec
mov
out
aad
flds
pop
shll
xor
and
imul
dec
iret
dec
repz
repnz
sbbl
mov
jmp
ljmp
adc
int3
dec
push
enter
imul
jecxz
lods
add
sarb
scas
mov
xchg
pusha
push
rorb
push
int3
xor
movsl
cmpl
jbe
fmul
jg
inc
or
inc
and
mov
lea
or
ror
rcll
add
push
lahf
dec
nop
inc
testb
jb
push
test
insb
sub
popf
and
jmp
sbb
rcr
loop
dec
cmp
das
push
cld
xchg
push
adc
push
xlat
push
pop
lods
mov
add
mov
add
mov
adc
xchg
outsb
xchg
shll
cmp
cmp
cmp
mov
push
outsb
adc
mov
or
jge
xor
test
cwtl
inc
setg
adc
pop
test
jecxz
cmpsl
test
jns
sub
mov
into
gs
out
mov
shll
test
lret
cmp
cmp
lret
cmpsl
daa
ret
mov
xchg
rsqrtps
in
dec
and
jl
jns
movsl
lds
jecxz
cmp
xchg
mov
insb
mov
jns
outsb
and
mov
fwait
pop
push
pop
sbb
pushf
loopne
cmp
test
out
cltd
xor
mov
jl
mov
mov
jmp
sbb
push
addb
pop
push
add
and
xor
imul
push
pop
movb
ljmp
xor
mov
sub
stos
inc
xor
add
and
outsl
mov
xchg
dec
jl
ds
push
scas
and
das
cli
mov
js
dec
push
inc
inc
testl
repz
aam
bound
push
cmp
addr16
push
fcmove
add
jmp
lods
lock
xchg
mulb
in
addr16
lret
inc
push
cmp
popa
mov
aas
mov
fiaddl
stos
popf
lahf
mov
repnz
in
sub
shrl
adc
mov
and
sbb
in
aad
jg
fmulp
or
cmp
scas
add
hlt
adc
js
add
jmp
pop
andl
aad
add
aaa
call
sbb
or
sbb
sbb
imul
int
aaa
cmp
jnp
push
icebp
mov
fidivrs
gs
push
dec
mov
jge
dec
mov
rcll
js
jp
scas
push
jg
and
negl
jg
inc
mov
cmp
cld
lock
xchg
lods
mov
mov
jmp
xchg
pop
orl
das
subb
pushf
lret
mov
push
in
rcll
scas
and
sub
inc
pop
inc
inc
pop
dec
stos
arpl
out
mov
sbb
outsb
add
xor
mov
movsl
lds
orl
and
jecxz
out
and
lods
outsb
pusha
jb,pn
pushf
rcll
aas
hlt
mov
repnz
test
psubusw
push
and
stc
inc
lods
jbe
lock
out
push
pop
pop
fcmovnbe
imul
sub
xor
inc
add
xchg
mov
jo
inc
xchg
and
insb
xchg
mov
adc
loop
sub
add
test
dec
dec
push
xor
cmp
xchg
fwait
inc
add
clc
pusha
mov
out
loope
inc
out
pop
mov
imulb
xor
cltd
in
fsubrl
shrl
shlb
scas
enter
jmp
lea
scas
xor
scas
sub
movsl
add
pop
jbe
push
clc
jno
jbe
and
in
lds
sbb
push
or
cs
push
cmpsb
aad
iret
mov
ret
jle
sbb
sbb
jnp
cmp
test
sub
xor
dec
mov
jp
mov
push
adc
cli
push
push
lahf
jge
mov
add
xchg
lret
orl
push
jno
hlt
cmp
ror
push
push
dec
and
cmp
mov
imul
cmpsl
mov
xor
iret
in
mov
sub
movsl
cmp
sub
lret
loope
xchg
cmp
jae
sbb
scas
jmp
jle
aaa
cmp
scas
push
xchg
stos
mov
sahf
outsl
mov
push
inc
xor
fiaddl
loope
mov
mov
scas
popf
inc
inc
push
inc
clc
mov
inc
mov
lahf
loopne
cmp
cltd
push
std
outsl
adc
xchg
inc
jae
sub
jl
ret
xor
loope
popa
stos
dec
push
sbb
xchg
dec
or
add
mov
scas
jae
hlt
sbb
push
pop
ss
into
call
out
das
mov
imul
jge
cld
lret
pop
sub
jmp
dec
pop
mov
mov
sbb
mov
mov
faddl
mov
pop
rcl
aaa
shr
cmc
jne
lds
inc
lahf
cmpl
fwait
and
mov
cmp
cmc
and
rcrb
cmc
shl
out
jns
cs
sbb
aaa
loop
aas
filds
xor
nop
add
cmp
and
xchg
insl
mov
mov
std
pop
fwait
imul
cwtl
add
insl
mov
mov
and
pmulhw
outsl
cmpb
push
ss
dec
push
shrb
mov
pop
push
mov
xchg
sbb
mov
test
data16
and
repz
ljmp
push
shrb
lock
repnz
cmc
push
decl
adc
sbb
test
xchg
shll
fisubs
pop
sub
repnz
jnp
ret
xchg
imul
xchg
pop
das
movb
inc
sbb
push
nop
push
stc
sbb
mov
jle
out
mov
mov
out
pop
lret
xor
les
or
jne
das
add
lret
mov
mov
add
sbb
and
scas
lahf
xchg
dec
jle
fucomi
lock
mov
inc
mov
add
jno
inc
or
mov
xchg
push
insb
push
nop
jecxz
insb
cmpl
xchg
mov
loope
push
scas
outsl
add
push
push
add
clc
imul
inc
popa
and
sbb
fs
inc
loop
inc
fsubrs
xchg
cmp
nop
stos
imul
xor
mov
and
sbb
fstpt
and
sbb
mov
xor
fdiv
aaa
sti
clc
xchg
pop
in
imul
add
xchg
in
scas
in
xor
and
arpl
orb
add
dec
xchg
mov
das
adc
push
push
js
push
inc
mov
xchg
inc
jmp
xor
add
lds
jmp
jecxz
xor
test
jns
xchg
and
lods
jl
ret
mov
inc
add
mov
pop
inc
je
add
dec
dec
mov
add
test
fistpl
lea
xchg
sub
fsubr
fsubrl
test
in
mov
cltd
out
mov
cmp
sti
mov
add
adc
push
test
cmpsl
and
cltd
test
xor
sbb
inc
mov
imul
push
pusha
pop
jae
and
sub
lcall
xchg
leave
cs
insb
jge
jecxz
and
cmp
xor
iret
xor
mov
das
xchg
bound
push
pop
and
in
inc
jno
hlt
int
dec
jb
fimuls
cmp
imul
mov
xchg
xor
or
add
fcomps
push
xor
shrl
cs
adc
out
mov
push
pop
jbe
jnp
and
out
into
pop
pop
loopne
jb
pusha
es
shr
aaa
cmpl
adc
sarl
xchg
sub
in
jle
push
sub
pop
xlat
ljmp
je
cmpsl
and
and
jl
jle
inc
out
mov
repnz
and
adc
ret
stc
push
fisttpll
or
hlt
mov
in
mov
cld
add
test
notl
call
fmulp
mov
cmp
push
add
mov
and
imul
div
loopne
mov
ds
jmp
into
dec
ja
ret
add
jmp
mov
cmpsb
pop
aad
test
es
mov
out
xor
mov
dec
push
xchg
lock
cmp
fstps
fsubp
repz
push
mov
js
test
gs
cmp
and
push
cmp
adc
fcompl
mov
lret
or
js
movsl
pop
sub
fsubr
in
cmp
rolb
pushf
or
xor
shrb
out
and
mov
mov
jb
in
divl
xor
push
addb
dec
mov
out
sti
add
cwtl
adc
test
add
cld
adc
push
pop
mov
js
ljmp
inc
dec
int3
out
sbb
lods
pop
shlb
pusha
inc
cs
xchg
xchg
aaa
pop
xchg
cmp
ljmp
cli
xchg
rorb
jb
mov
xchg
aaa
test
test
cmpsb
cmpb
cmp
ret
add
add
mov
stc
xchg
sbb
jmp
mov
data16
sbb
in
fidivrs
test
xchg
push
cltd
adc
decb
outsb
cmp
mov
outsb
scas
sub
mov
aaa
loop
pop
mov
fwait
cmp
mov
push
and
jg
les
mov
fimull
ficoms
and
pushl
sti
loopne
leave
jl
xchg
rclb
loope
or
shlb
fistpl
sub
aaa
movsb
dec
sar
iret
fidivs
xor
hlt
sub
and
mov
cmp
dec
or
mov
jo
test
sbb
push
bound
xchg
cmp
push
cmpsb
jae
icebp
pop
das
cmp
out
lods
xor
fmuls
and
dec
jo
and
cmp
outsb
and
sti
bound
insl
lock
jno
mov
aad
and
jmp
nop
push
sub
iret
hlt
addb
xorb
cmp
scas
and
pop
ret
pop
adc
in
xchg
repz
mov
xchg
sar
cmp
sarl
pop
in
gs
aad
repnz
cmp
mov
fs
jnp
add
gs
pop
push
cmpsl
arpl
adc
cmp
sub
call
in
jo
jno
cld
push
jno
jg
cmp
push
lds
clc
sbb
fistpl
scas
notb
sahf
inc
ret
xchg
scas
adc
out
and
xchg
inc
sub
pop
mov
ret
cmpsb
scas
aaa
fdivs
lds
int
lea
pop
lock
test
dec
data16
movsl
cmc
push
push
rep
inc
faddl
fsts
cmc
aaa
dec
ja
push
push
inc
sub
loop
and
sub
test
dec
mov
sqrtps
mov
mov
mov
dec
jle
lods
iret
nop
jbe
mov
lcall
stc
xchg
mov
cmp
sbb
cmpsb
scas
sub
stos
std
or
mov
mov
or
inc
mov
test
sub
cmc
adc
ss
push
adc
pop
push
mov
lahf
adc
mov
sub
out
sbb
mov
lret
stos
call
and
or
dec
popa
jns
mov
sarb
jno
loopne
push
jmp
stos
dec
inc
mov
push
lcall
mov
mov
mov
jo
mov
push
inc
cmp
inc
setbe
fwait
sarb
scas
cmpsl
and
int
rcll
jae
jle
and
stos
bound
shlb
jecxz
jns
inc
lods
mov
fidivrl
xor
enter
lds
push
xlat
sti
shll
and
inc
arpl
dec
xchg
lods
dec
ja
jb
sbb
dec
sub
jnp
mov
mov
mov
pushf
daa
mov
and
push
cmpl
sbb
fnsave
cmpl
or
dec
test
mov
cmp
pop
lcall
mov
cld
dec
mov
into
cmp
jbe
insb
xchg
lea
mov
push
inc
pop
stos
jne
js
adc
push
jge
cmc
or
adc
pop
inc
push
insl
pop
dec
dec
cmp
sbb
sbb
fidivs
dec
out
sbb
imul
daa
shll
int
in
cmp
cmpsb
dec
push
adc
test
push
movsl
xor
jae
push
outsb
popa
arpl
movsl
sub
adc
jge
outsl
scas
inc
jo
ret
mull
push
xlat
sub
call
adc
hlt
cmp
outsl
insb
imul
pop
add
jno
adc
enter
jns
jb
pop
pop
fucomp
mov
repnz
push
ds
and
das
in
pop
aas
insl
sbb
fsts
mov
hlt
sti
inc
xchg
add
ret
cs
push
lods
sbb
mov
mov
cmp
mov
insb
shlb
jns
repnz
mov
arpl
jo
mov
ret
jmp
fs
sbbl
and
neg
or
mov
sete
xchg
enter
jns
pop
mov
jge
jmp
loop
pushf
jo
cld
in
lret
or
in
adc
shlb
mov
adc
clc
ss
stos
outsb
inc
das
lods
or
mov
hlt
out
mov
repz
rcll
push
aaa
lods
pusha
pusha
pop
mov
nop
data16
std
je
movsb
and
or
and
stos
in
repnz
gs
dec
jnp
addr16
mov
ja
inc
xchg
xchg
mov
aas
mov
mov
test
mov
pop
mov
jl
lock
call
mov
dec
test
cmpsb
adc
and
int
sahf
lahf
jb
push
test
scas
lods
sarl
mov
sub
cmpsl
inc
push
mov
std
lcall
xchg
sbb
dec
or
bound
addr16
or
push
inc
clc
movsb
mov
inc
dec
mov
call
mov
cltd
adc
add
push
cmp
fstpt
loop
and
pop
xor
lcall
faddl
cmp
push
add
jnp
jbe
push
xor
mov
pop
mov
hlt
pop
rolb
push
insb
mov
enter
lret
lods
add
mov
popa
mov
push
lahf
jo
mov
shll
outsl
jne
jno
mov
mov
xchg
stos
jle
std
or
cmp
xor
insb
test
inc
sub
imul
lret
jbe
jge
xchg
sbb
cmp
jp
insl
add
lcall
pop
cs
xor
call
or
xorb
pop
sub
sbb
xor
cmp
int
lods
and
stc
xor
mov
lahf
lds
test
ja
ret
jbe
test
movsl
push
mov
popa
xchg
or
insl
jmp
adc
hlt
jo
mov
add
aad
shrl
add
xchg
inc
xchg
cwtl
and
mov
dec
adc
insb
add
push
push
arpl
fwait
in
xlat
jb
sub
in
gs
or
rol
xor
aas
cld
insb
call
data16
mov
dec
clc
rol
jl
push
movsl
cmp
pusha
add
movsb
xchg
sub
shll
ret
add
loope
xorl
mov
fidivrs
cld
pop
cltd
sub
das
xor
and
test
push
arpl
or
shr
mulb
push
adc
out
jg
and
mov
push
jg
xor
incl
jno
pop
pop
dec
inc
sbb
outsb
jne
pop
imul
dec
mov
movsb
jg
lds
rcr
andb
hlt
iret
lcall
addl
loopne
mov
divl
cmpsl
clc
inc
pop
add
xor
std
les
sbb
outsb
repz
pop
pop
addr16
xlat
xchg
mov
cmp
in
or
subb
fistl
jg
int
mov
insb
jae
dec
adc
sbb
adc
call
ret
push
mov
and
insl
mov
mov
and
das
pop
inc
mov
or
push
movnti
pop
outsl
imul
test
or
fsub
xchg
ss
out
test
addr16
cld
jl
jno
pop
jmp
test
mov
cmp
mov
jae
aas
cli
lods
fs
jle
xor
fwait
shrl
int
in
dec
push
clc
ja
add
test
mov
mov
push
or
mov
cmp
in
pop
pop
imul
and
cmp
jne
in
pop
pop
and
sub
aaa
cmpsl
add
je
mov
stos
xor
add
fadds
cs
inc
shll
into
lods
mov
jmp
add
orb
ljmp
pop
pop
lock
xor
stc
push
push
data16
imul
and
push
jmp
nop
or
sbb
negb
cmpsb
inc
shl
bnd
xor
sub
icebp
xchg
xlat
pop
mov
stos
and
jmp
and
add
cltd
sub
pop
mov
sub
xor
xchg
xchg
ret
xchg
sahf
je
orl
push
in
imul
mov
or
out
loop
xchg
mov
mov
xorb
notl
in
xchg
sub
hlt
push
shll
or
sbb
rcrb
push
repnz
fldt
scas
pusha
loop
mov
loopne
les
fmul
or
xor
inc
lahf
lret
inc
sarb
test
mov
jle
test
or
imul
jne
xchg
xchg
xchg
jb
iret
call
out
jb
jmp
jmp
mov
inc
inc
fs
cmp
aas
ja
jg
sub
xor
dec
lcall
add
cmp
dec
es
mov
lret
cli
int3
gs
lds
pop
adc
jge
xchg
dec
and
adc
in
inc
dec
fcoml
les
std
loope
popf
xchg
je
xor
jg
push
test
xchg
loopne
int3
or
gs
jle
into
xor
icebp
jno
jecxz
sub
lahf
pop
sub
sbb
fwait
adc
push
dec
sub
movsb
cmp
incb
decb
push
mov
and
mov
cmp
mov
aam
sub
push
in
jb
imul
cmp
and
push
lcall
sub
out
leave
mov
and
jb
mov
jmp
xor
sbb
sub
fstpl
loopne
fsubl
outsb
int3
int
adc
mov
pop
shlb
cmpsl
insl
repnz
in
jb
pop
out
pop
adc
lods
lret
xor
pop
hlt
xor
jbe
mov
pushf
clc
or
insb
and
jb
outsb
hlt
ljmp
movsb
inc
push
push
pop
xchg
push
xor
xchg
xchg
sub
pusha
out
sti
aad
inc
mov
ja
push
sbb
imul
int3
mov
mov
or
add
push
jne
push
sbb
jno
sub
or
sub
jl
sbb
imull
aas
add
fistpll
jbe
add
imull
push
scas
fdivrl
stos
and
stos
or
mov
push
rclb
inc
stos
mov
cmpsb
xor
jns
push
call
sbb
loope
and
adc
stos
stc
lods
stos
mov
iret
cli
jnp
add
shlb
jmp
movsb
push
js
dec
setno
fadds
out
mov
xchg
cmp
adc
mov
lock
mov
mov
adc
mov
dec
lods
add
jl
push
add
jae
add
push
rclb
cmpl
xor
orl
lret
divb
push
cmpsl
push
aaa
or
mov
enter
enter
and
cmp
pop
jl
fs
mov
lods
xor
fwait
stc
dec
jp
mov
out
lods
stos
sub
mov
fistpl
or
test
add
ss
jnp
jo
inc
pop
and
dec
cmp
rcl
or
fs
jmp
movsb
aas
inc
ss
cs
rcll
dec
outsb
lret
dec
mov
test
dec
loopne
test
sub
sub
aad
mov
mov
push
or
movsb
sub
loope
or
xchg
pop
cld
pop
loope
dec
xor
mov
inc
cltd
push
pop
xor
xor
pop
dec
push
and
ss
adc
mov
jb
clc
sbb
sti
and
int3
sub
pusha
mov
cmp
push
mov
negl
sub
cltd
inc
mov
pop
pusha
cwtl
pop
testb
dec
push
mul
sub
or
cwtl
cmp
push
mov
jge
pop
sbb
pop
loop
mov
push
cld
dec
lods
test
sub
adc
out
jnp
xchg
or
lds
cmp
out
cs
sub
data16
sbbl
jnp
adc
frstor
mov
fwait
mov
aaa
cmc
cmp
sbb
mov
iretw
dec
pop
enter
jae
aaa
and
popa
and
daa
stc
push
and
repz
mov
pop
mov
cmpsb
add
ljmp
cmp
or
sub
insl
cmc
push
adc
sti
movsl
leave
fstl
push
int3
or
pop
pusha
scas
loop
xchg
jno
pop
mov
icebp
fists
or
stc
lret
xor
movsl
dec
xor
sub
mov
inc
dec
lcall
jne
scas
mov
cwtl
and
sbb
rorl
mov
and
inc
arpl
jmp
dec
fiaddl
movsb
push
into
sti
out
dec
sti
mov
loope
mov
xchg
and
push
mov
wrmsr
mov
in
cmp
mov
mov
movsl
aas
sub
idiv
adc
xchg
dec
fs
sub
and
push
imul
mov
mov
mov
or
fcom
into
xor
test
sarl
inc
seta
xchg
rorb
test
cmp
lods
cmp
inc
sub
mov
cli
mov
push
add
out
mov
xor
jp
pop
push
add
adc
pop
jb
pop
mov
sarl
xchg
pop
or
push
int3
icebp
aam
cmpsb
hlt
in
jns
jo
popf
push
xor
out
dec
frstor
scas
lahf
out
sbb
and
scas
inc
int
cs
and
sub
mov
xor
sti
mov
sub
test
push
jp
jns
dec
push
xchg
jmp
xor
call
lock
push
or
jno
xor
xchg
insl
sbb
jmp
xor
bound
pushf
push
shrb
repnz
or
insb
adc
pop
mov
sbb
or
and
push
and
inc
xchg
jo
pop
pusha
pop
xor
repz
push
fildll
shlb
push
add
adc
pop
push
mov
mov
lcall
inc
jno
mov
push
mov
sub
test
cld
mov
jmp
nop
sub
outsb
fdivrs
dec
pop
sbb
scas
popf
mov
mov
test
adc
orb
lods
sbb
cwtl
cmp
xor
inc
mov
into
cltd
test
jle
in
cltd
sbbb
dec
in
add
fstps
out
adc
sahf
jbe
cwtl
sub
loopne
jmp
hlt
cmpsl
xor
call
popa
pusha
jmp
push
addb
loop
xchg
and
div
pop
mov
cli
mov
sahf
dec
push
pop
fcos
jnp
sbb
dec
jbe
int
pop
in
add
cs
xor
icebp
inc
xor
xchg
jecxz
cmc
fcomps
push
sub
push
jns
dec
aad
insb
in
mov
fdivrl
and
es
imull
push
add
xchg
cld
test
mov
mov
es
loope
insl
mov
cmpsl
das
call
push
rorb
xor
and
mov
or
fisttps
pop
push
mov
das
in
fsqrt
arpl
out
mov
cmp
jbe,pt
mov
jo
mov
repz
rcrl
dec
sub
in
lahf
imul
imul
mov
add
xchg
cmpsl
fwait
mov
outsl
xor
into
sahf
pop
add
pop
pushf
mov
or
mov
repz
push
fistpl
push
add
fistps
and
jmp
add
cs
test
out
leave
fcoms
cmp
out
mov
mov
and
mov
int3
sub
inc
cmp
ss
sbb
push
dec
sub
jmp
push
iret
mov
fists
mov
jg
mov
fistpl
std
push
ret
inc
mov
daa
xchg
or
xor
fmull
loope
addr16
mov
push
rolb
mov
lret
mov
or
inc
push
and
mov
sti
cltd
repnz
shr
int3
dec
push
int
dec
and
roll
sbb
or
das
repnz
daa
lret
xor
sahf
jp
pop
and
fcoml
jns
pop
lea
cltd
jae
push
or
fidivrl
lret
subb
jecxz
cmpsb
mov
adc
jns
inc
xor
mov
movsl
add
cld
jmp
jns
enter
pop
test
adc
push
xchg
xchg
adc
bound
inc
xor
pop
sub
pop
mov
mov
mov
mov
test
scas
push
and
xor
repnz
jg
aad
sbb
outsl
cmpsl
mov
push
negl
enter
and
pop
ret
insb
repz
insl
inc
sub
dec
mov
xchg
inc
mov
dec
dec
cmp
notl
mov
xor
mov
sub
mov
decb
cwtl
mov
sub
loope
test
pop
ficomps
fstl
dec
mov
push
jne
pop
inc
dec
addl
sbb
std
mov
inc
arpl
mov
in
test
jns
inc
lahf
jmp
xchg
jmp
pop
mov
leave
jns
mov
mov
and
aad
or
inc
xchg
inc
add
and
xchg
jl
jbe
pusha
repz
or
out
cmp
stos
scas
js
adc
rorl
or
dec
mov
adc
sub
jo
xor
mov
inc
imull
rcll
scas
xchg
and
inc
xchg
aaa
add
and
je
ja
inc
mov
dec
rol
dec
les
push
outsl
stos
jmp
movsl
popa
jmp
fldcw
in
adc
fwait
pop
call
out
xchg
test
icebp
sbb
adc
adc
imul
addr16
and
inc
adc
pop
movsl
mov
mov
sahf
dec
and
orl
mov
lock
loop
test
into
leave
adc
insb
inc
adc
std
sbb
fdivs
out
jbe
dec
enter
sbb
rorl
aaa
mov
sbb
cwtl
sbb
inc
leave
call
mov
jbe
mov
sub
and
inc
cwtl
mov
inc
add
mov
sub
rcll
cmpsb
js
in
mov
negb
sbb
lret
stos
fcos
imul
in
outsl
popf
je
outsl
icebp
int3
inc
lods
mov
cmp
gs
jnp
sub
sbb
adc
add
pop
aad
jbe
ss
int3
in
in
lcall
push
cmpsl
and
test
inc
sub
loop
mov
mov
jle,pn
sub
xor
pop
pop
lock
push
outsl
lea
mov
test
and
pop
xor
pop
jno
mov
int
xor
repnz
and
sub
mov
push
fadds
shlb
repz
inc
dec
jae
stc
dec
rcll
sbb
or
mov
sbb
jb
add
pop
sub
inc
leave
test
loope
dec
lds
in
daa
mov
pop
jecxz
adc
jae
out
testl
mov
inc
bound
sarl
dec
bound
mov
xlat
mov
sub
mov
lock
pop
jmp
shl
or
dec
add
jmp
arpl
in
imul
dec
mov
bswap
lret
je
inc
orb
ss
push
adc
mov
xor
or
fidivl
mov
mov
shll
sub
fiaddl
and
mov
sti
pop
or
mov
in
pop
mov
dec
comiss
add
jbe
ja
ja
inc
repz
and
xchg
sbb
mov
push
adc
dec
jns
sub
fucom
mov
xchg
fwait
mov
pop
jg
aam
xlat
adc
add
repz
mov
iret
xor
mov
xor
ss
loopne
cmp
mov
add
cmpsl
ret
mov
fidivrl
mov
fwait
pushf
les
push
add
lock
fwait
push
add
aam
dec
jns
daa
jae
std
sub
inc
insl
mov
and
lods
inc
and
mov
inc
scas
sub
aaa
pop
lods
xor
iret
out
cmp
inc
mov
push
mov
iret
push
lret
mov
cwtl
xchg
hlt
xchg
push
dec
ljmp
int3
push
repnz
inc
xchg
das
xor
mov
movsb
test
pop
or
cmc
movsb
sarl
mov
fmulp
mov
jle
nop
fcoml
gs
sub
mov
aaa
jae
repz
xchg
test
pusha
sbb
push
fsubrp
das
pop
pop
push
and
adc
dec
xor
loop
jg
add
iret
xchg
ja
lcall
mov
mov
push
pusha
test
jmp
push
sub
adc
cmp
pop
push
adc
mov
pop
fxch
jae
daa
sub
jno
das
out
shl
inc
mov
test
mov
pop
outsl
decw
fs
xor
sti
push
xchg
jno
test
push
add
in
shlb
and
mov
mov
inc
cmp
lock
mov
dec
mov
rcrl
push
add
mov
jmp
jb
js
ja
leave
sub
ss
out
imul
lods
filds
cmc
mov
mov
dec
stc
sbb
mov
out
push
lds
xchg
sub
pop
movsl
cmp
mov
rcl
push
mov
fldl
jne
testl
mov
lahf
xchg
nop
sub
repnz
or
test
or
inc
mov
aad
fcoml
sbb
or
xchg
repz
mov
jge
bound
mov
lret
add
arpl
test
jecxz
add
sbb
stc
cld
sbb
xlat
int
fdiv
sub
and
into
mov
sbb
push
mov
jp
jmp
sub
jg
roll
push
ss
shufps
adc
fsubrs
inc
cmpsb
jo
xchg
pusha
mov
out
bound
fisubs
lods
aam
mov
push
dec
jnp
mov
sbb
int3
mov
leave
fistpll
jns
pop
pop
xchg
cmp
xor
pop
ljmp
psraw
std
mov
jle
cwtl
xchg
clc
mov
jbe
xchg
jge
xor
lock
push
mov
adc
dec
push
subb
xor
inc
lea
xor
insl
je
out
dec
nop
cmpxchg
in
cmpsb
fdiv
and
fdivrl
leave
aaa
aam
enter
jb
jae
mov
orl
jmp
clc
add
enter
cltd
cmpl
xchg
jbe
or
push
ds
cwtl
hlt
mov
mov
cmpsb
dec
in
out
xlat
push
sub
int3
lahf
sub
mov
ret
jo
adc
cmp
fcomps
or
imul
shlb
outsl
and
es
sarl
lods
inc
movl
add
xchg
popf
iret
pop
dec
push
xor
dec
pop
xchg
jae
jle
ficomps
js
out
and
lds
mov
fbld
into
sub
and
test
and
add
cld
xor
and
inc
xor
insl
jne
xor
xor
pop
xchg
cld
cs
and
adc
sahf
or
test
stc
push
sbb
aam
cmc
imul
mov
repz
pop
repnz
jmp
xor
mov
push
add
xchg
addl
pop
shlb
roll
xor
adc
xchg
pusha
out
or
jmp
add
jbe
in
jo
popa
mov
push
dec
ljmp
cmp
lea
popa
aas
repz
fbstp
lods
aas
cmp
sub
or
out
loopne
ja
ds
xchg
shll
or
mov
outsl
shlb
and
pop
pop
pop
sub
push
sbb
mov
jns
lea
pushf
xchg
movsb
mov
sbb
sarl
inc
mov
dec
outsl
dec
fadds
push
xchg
pop
fisttpl
pop
fstpt
fwait
pop
outsb
leave
lds
adc
dec
sub
pop
popa
dec
jg
xchg
test
jb
mov
inc
sub
pop
out
pop
and
je
je
cwtl
clc
jo
imul
mov
test
icebp
shlb
ret
or
call
call
sbb
mov
in
pop
mov
pop
jl
cmc
xor
lcall
mov
jae
stc
out
cmc
mov
stos
shlb
or
movsb
or
out
inc
sub
lock
loop
adc
iret
aaa
dec
cmpsl
sub
pushf
js
add
shlb
push
fnstsw
cmpsb
dec
mov
and
cmpsb
inc
jo
mov
mov
xchg
in
fstp
bound
add
in
pop
pop
cmc
and
in
cwtl
sbb
cmc
jae
aam
mov
popa
mov
mov
out
or
xchg
dec
xchg
xchg
or
sub
add
push
lea
cmp
push
lahf
lods
adc
lods
in
jbe
and
inc
push
pop
inc
mov
nop
cmpsl
mov
data16
fnstcw
lods
add
sbb
xlat
jo
sub
jns
inc
aas
adc
sahf
icebp
test
add
popa
sbb
inc
fadds
xchg
rcrb
mov
jb
cmp
call
xchg
lea
pop
repnz
repnz
lahf
xchg
out
ficompl
mov
mov
push
adc
or
push
aad
pusha
push
lahf
das
pop
ret
mov
popa
mov
push
lahf
popa
mov
cli
icebp
loop
out
shll
push
out
sarl
push
mov
sbb
push
or
stc
lea
into
dec
andl
test
outsl
inc
ds
jnp
xor
lcall
stc
mov
xor
loope
insl
in
mov
jmp
lahf
push
push
inc
bound
pop
mov
push
nop
fld
xor
idivl
mov
pop
ret
mov
sub
lea
loopne
mov
insb
inc
jmp
push
test
cmp
call
cmp
fnstsw
dec
inc
and
ret
and
mov
push
sub
pop
pushf
imul
shlb
adc
lods
add
sbb
xchg
ficoml
ficomps
leave
sub
loopne
pop
pop
arpl
testb
xchg
xchg
cmp
data16
stos
ret
inc
cmpsb
ficomps
es
jnp
cld
out
jae
in
outsl
mov
lods
xchg
pop
imul
cld
jno
sbb
hlt
stos
add
imul
xchg
dec
fwait
push
push
pop
sub
mov
lds
sahf
in
mov
jbe
adc
jne
and
icebp
mov
xor
sbb
test
jg
push
pop
rorb
xchg
pop
lods
push
jl
xchg
sbb
loopne
addl
add
lcall
xchg
sbbl
xchg
enter
lret
insl
add
pusha
sbb
push
xchg
ret
ret
subb
int3
sbb
jae
or
aad
shlb
mov
xchg
stc
xor
cmp
xchg
sbb
inc
adc
sarl
outsl
sub
jecxz
mov
rcrb
pusha
inc
xchg
ja
bound
dec
and
jnp
add
addr16
es
lods
push
fs
fdivr
test
sub
rolb
adcl
fisttpll
test
sub
jp
push
aad
add
and
cwtl
jnp
mov
repnz
jbe
adc
outsb
push
pop
lahf
dec
hlt
mov
filds
cld
xor
mov
mov
pop
and
cmp
std
gs
stc
pop
test
mov
cli
xchg
fnstenv
roll
add
pop
sbb
pop
or
adc
in
mov
dec
sarb
jl
cmpsl
rcrl
mov
sub
adc
stc
les
push
inc
popa
movsl
ljmp
cmp
or
dec
das
data16
dec
scas
mov
mov
mov
cmpsb
and
stc
divl
scas
mov
jnp
out
stos
pop
aas
push
in
mov
daa
insl
mov
loop
clc
and
xchg
push
hlt
icebp
sub
ret
jp
int3
mov
lcall
or
adc
push
lods
add
leave
and
dec
push
mov
sub
add
sarl
dec
mov
lock
dec
std
mov
scas
mov
pop
inc
xchg
fcmovb
xchg
rorl
ret
adc
inc
ljmp
lods
add
ljmp
mov
insl
cld
int
mov
mov
rol
sub
insl
and
mov
cwtl
fwait
scas
pop
cltd
sbb
je
xchg
mov
aas
jp
push
in
aad
inc
cwtl
sub
cmp
in
mov
shll
sub
or
mov
sar
daa
lock
loope
jge
cmp
jmp
add
mov
flds
mov
and
out
and
enter
ljmp
dec
mov
dec
lock
in
mov
repnz
sbb
adc
push
ljmp
mov
add
add
dec
into
ret
pop
mov
inc
js
outsb
into
jb
pop
sbb
imul
push
gs
stc
lock
mov
pop
out
sub
lret
dec
clc
ja
mov
nop
clc
xchg
sub
and
jp
or
and
movsb
fs
movsl
popa
stos
out
lds
repz
test
into
ds
scas
jp
sbb
xor
icebp
dec
ret
inc
mov
dec
loop
xchg
mov
mov
pop
sub
pop
xchg
inc
dec
rol
mov
ss
filds
xlat
imul
out
push
rolb
mov
adc
stos
push
xchg
int
mov
sbb
pop
es
subl
fwait
push
xchg
movsb
aad
and
jecxz
sbb
xor
xchg
pop
jp
ret
push
xor
mov
in
xchg
cmp
popf
cmp
inc
pop
jno
xor
cmp
xchg
loopne
xchg
mov
scas
insb
fbstp
xor
jnp
adc
ds
je
dec
fsubrl
aas
xor
jge
int
sub
mov
test
icebp
clc
adc
mov
xor
xor
and
lret
adc
movzbl
insl
test
xorb
pop
cmp
add
sub
fistpl
std
insl
xor
into
in
inc
dec
or
inc
outsb
add
lret
enter
imull
shlb
jne
or
push
cltd
push
gs
popf
sbbb
in
xchg
mov
in
inc
sub
xor
adc
xor
xor
jne
ss
mov
and
jbe
jmp
popa
pop
mov
out
int
push
std
or
push
add
inc
xchg
sbb
into
mov
mov
jns
adc
sarl
fstl
sub
test
mov
xor
popf
sbb
cld
add
mov
mov
mov
lret
push
mov
scas
fnstsw
dec
cmp
mov
mov
sub
fucomi
fisubl
inc
dec
into
outsb
arpl
sub
sbb
faddl
jmp
or
push
mov
sub
push
sub
fwait
cmp
dec
sub
repz
jmp
pop
into
jecxz
mov
addr16
ljmp
xchg
and
sbb
scas
or
or
mov
fs
daa
shlb
jl
and
out
xchg
aas
pop
pop
jp
pop
arpl
nop
ss
mov
repz
test
test
das
aam
shlb
push
push
push
lahf
arpl
pop
addr16
rcr
jns
inc
sbb
call
out
repz
out
dec
mov
mov
adc
lods
sbb
in
pop
lcall
push
mov
sbb
xchg
or
shrb
lea
jbe
sub
sub
fwait
or
jbe
inc
mov
out
dec
xchg
aad
ret
into
addl
or
int
sub
or
xchg
repz
pop
incl
loopne
xchg
fcompl
lea
jnp
fldl
sbb
mov
mov
cmpb
fwait
mov
ret
sti
js
inc
bound
cmp
dec
scas
xor
aas
test
das
cmp
push
xchg
iret
in
in
cmp
dec
ret
dec
mov
sub
lds
sub
mov
or
xchg
mov
xor
dec
je
imul
aas
dec
cli
stc
mov
sub
mov
xor
repnz
add
cmpsl
sbb
mov
fidivrl
insl
aaa
xchg
add
mov
push
pop
aad
inc
imulb
iret
stc
test
add
bound
inc
and
sbb
inc
stos
ds
sub
xchg
push
arpl
out
sub
pop
inc
cmp
adc
jle
adc
imull
xor
ds
shlb
inc
addr16
push
xor
loop
pushf
lods
shll
mov
loope
incb
shll
sub
pop
cld
and
sbb
lahf
bound
loope
cmc
xchg
rclb
enter
outsl
xlat
pop
add
mov
mov
mov
out
mov
and
loopw
gs
xor
dec
jns
lret
fsubl
mov
mov
mov
xchg
subb
lods
cmp
repz
les
pushf
subb
jecxz
ret
and
sub
pminsw
sbb
inc
rcrl
hlt
fstpl
or
movq
ds
jb
push
mov
enter
dec
jmp
mov
cmpsb
aam
sbb
icebp
and
jecxz
imul
lahf
or
xchg
sahf
pop
dec
mov
clc
movsb
xor
cmpsb
cmp
data16
xor
inc
ret
pop
lret
push
and
out
mov
cli
insb
test
jnp,pt
jo
xor
dec
sbb
cld
sbb
vunpcklps
mov
mov
or
mov
push
out
aad
push
jl
ret
arpl
jle
aas
cmpsb
jb
rolb
std
cmpb
mov
int
mov
ret
out
or
or
xchg
mov
out
scas
hlt
orl
js
inc
dec
jle
aam
xchg
cmp
mov
jne
mov
sub
cltd
add
addr16
int3
daa
call
mov
lcall
insl
cmp
lret
xor
pop
mov
subl
inc
cmpsb
mov
jb
popf
inc
dec
ss
out
je
data16
jb
aas
push
lcall
clc
lods
push
sub
adc
ffree
push
push
rolb
test
popa
bound
sub
mov
mov
pop
lods
xchg
sbbb
icebp
js
shlb
test
pop
pop
sbb
stos
mov
add
rcl
xlat
xor
cmpsl
das
mov
mov
lcall
push
push
dec
sub
lret
inc
push
mov
push
xchg
test
lods
jns
leave
sub
mov
mov
xchg
divb
mov
sbb
sbb
subb
mov
nop
xor
mov
scas
mov
mov
push
xchg
sbb
aam
lret
ret
divb
push
pop
loop
sbb
out
inc
dec
rcrl
mov
aam
mov
andl
jno
cwtl
push
push
xchg
push
dec
arpl
outsl
sbb
or
jp
lahf
cmp
cmp
pop
cmp
push
mulps
jbe
mov
xchg
mul
ljmp
mov
xor
inc
and
out
orl
mov
xor
test
sbb
cmpsb
call
loope
jae
xor
mov
hlt
es
andb
movsb
xlat
fnstsw
nop
in
notl
wrmsr
fadd
dec
xlat
or
dec
push
mov
mov
ja
les
ja
jb
xchg
and
mov
fwait
mov
ret
mov
lds
nop
pop
jle
cmpsl
iret
cpuid
inc
xor
aas
out
sahf
mov
jo
xchg
pop
movl
test
pop
pop
jle
mov
ljmp
scas
fisubl
cwtl
imull
stc
sub
test
test
fcomps
insl
inc
leave
sar
icebp
and
fisttpll
push
cmc
cld
fwait
pusha
dec
pop
sbb
add
dec
aaa
push
ret
lock
push
call
pop
mov
pop
dec
dec
sub
and
icebp
outsl
ret
pop
mov
pop
daa
ljmp
in
data16
aaa
fdivl
repz
out
mov
inc
xor
jb
sbb
sahf
mov
mov
outsb
adc
push
bound
lods
sub
mov
sbb
sbb
pushf
jg
cmp
inc
ss
test
pop
cmp
sub
sub
mov
test
pop
cld
xchg
js
hlt
mov
stc
mov
test
inc
xchg
leave
dec
xor
sub
adc
or
inc
mov
xchg
popf
es
xor
jle
mov
pushf
push
gs
and
push
je
push
ljmp
cltd
sub
xor
push
ficoml
out
add
scas
pop
push
or
lret
test
orl
push
adc
jge
adc
add
add
cmpsb
lret
lret
jge
subb
lods
enter
jnp
js
pop
mov
bound
cmp
mov
stc
xor
jne
in
fs
mov
mov
or
mov
outsb
pop
adc
mov
aas
in
and
push
pusha
xor
push
ss
addr16
xor
sub
dec
repz
push
test
dec
sub
inc
lock
mov
jns
cld
fcmovu
fcoms
stos
lcall
inc
sti
push
dec
leave
sub
mov
and
jecxz
jmp
insb
dec
scas
sbb
jp
icebp
sub
leave
aad
pop
or
inc
shrl
out
fidivs
addr16
push
ljmp
incb
dec
or
jge
outsl
shll
mov
adc
cmpsb
sbbb
les
mov
dec
lcall
sbb
add
cmpsb
inc
sahf
fstl
ds
or
push
ret
cmc
jmp
xchg
adc
jns
mov
pop
mov
daa
add
xchg
xor
shr
and
jl
mov
fcoml
sti
roll
cmpsl
imul
mov
fwait
or
lahf
sbb
sub
pop
mov
cmp
loopne
mov
cwtl
test
insl
lret
xchg
loop
mov
xchg
lea
add
out
push
cmp
popf
lret
in
dec
push
rorl
xchg
adc
scas
cs
jle
inc
pop
add
leave
adc
pop
rorl
lcall
es
and
insb
rorb
insb
frstor
ljmp
out
jns
lock
xchg
jecxz
out
push
fidivl
and
sahf
add
es
int3
sbb
dec
fwait
and
jg
lret
adc
or
add
push
mov
xchg
sahf
xor
lods
stos
repnz
shll
fiadds
outsb
aas
adc
xchg
adc
js
adc
repnz
pusha
imul
mov
scas
mov
jmp
mov
xchg
pop
sub
ror
lcall
mov
ss
lock
push
mov
sub
push
push
push
inc
and
push
inc
xor
rclb
jp
push
jae
adc
rorl
push
in
push
xchg
add
int
lahf
or
repz
dec
sbb
fwait
dec
mov
idivl
push
inc
sbb
lret
daa
or
bound
add
movsb
mov
sub
mov
aaa
in
sbb
out
fcomps
decb
inc
jecxz
insl
ljmp
mov
out
loope
and
cmpw
jp
fs
cwtl
dec
and
mov
insb
and
pop
ja
mov
in
arpl
ret
cmp
lahf
mov
cmc
in
notb
cmpsb
cmp
xchg
stos
push
fildll
inc
pop
in
xchg
push
mov
stos
pop
lret
nop
shlb
jo
dec
leave
push
and
dec
sub
lret
inc
sarl
stc
and
lock
out
mov
repnz
adc
ret
das
and
in
cli
popf
ficoml
mov
and
jp
movsb
shl
and
or
push
xlat
and
sub
mov
rorb
enter
push
test
popa
and
adc
xor
enter
lock
and
push
in
repnz
mov
add
stc
iret
mov
frstor
push
or
add
call
mov
mov
push
jno
jno
jg
int
and
sub
pop
or
pop
out
out
stos
sub
inc
inc
or
movsb
xor
and
lcall
sti
orl
imul
in
clc
imul
sahf
ljmp
sbb
dec
inc
daa
fnstenv
or
wbinvd
pop
mov
mov
mov
frstor
addr16
out
leave
push
dec
aaa
xor
mov
loope
or
lcallw
cmp
mov
pop
pop
das
jnp
jmp
or
pop
mov
out
cmp
or
cmp
out
insb
or
addr16
in
mov
scas
lret
or
inc
mov
jecxz
mov
mov
pusha
test
xor
xorb
mov
divl
add
inc
and
xor
adc
inc
bound
sarw
icebp
xor
ss
in
jg
notl
mov
jle
shlb
daa
imul
fldcw
cmpsl
hlt
mov
jl
loop
sub
sub
xlat
imul
jge
pusha
es
pop
test
sbb
push
movsb
rorb
ret
xor
arpl
xor
mov
ja
popa
dec
dec
test
inc
shrb
add
jl
sub
inc
mov
xchg
mov
mov
rcl
mov
leave
lods
pop
inc
out
lea
mov
fwait
je
or
mov
in
sti
mov
movb
sbb
xchg
int3
enter
mov
test
rcl
jb
repz
jle
pop
push
in
cmpb
dec
in
enter
mov
in
daa
xchg
mov
shlb
testb
scas
lds
sbb
jb
sub
jmp
lock
push
or
mov
mov
insb
vmovhpd
icebp
xchg
pop
push
mov
adc
add
and
xor
mov
lret
notb
int
lea
mov
or
pusha
fadds
dec
mov
jbe
das
hlt
pop
or
fs
pop
shrl
xchg
xchg
lret
decl
clc
inc
outsl
pop
and
jo
jmp
testl
mov
xchg
insl
scas
cmc
rolb
mov
mov
fs
mov
ficompl
xchg
mov
scas
scas
imul
sbb
dec
sub
cli
mov
dec
sbb
loop
hlt
or
aaa
insl
xlat
jle
xor
jo
lcall
push
leave
shl
ds
and
mov
dec
leave
sbb
insl
mov
mov
or
jmp
imul
or
xor
lea
cld
adc
xchg
in
xor
int
inc
pop
and
in
fldenv
mov
or
outsb
push
adc
shl
mulb
es
mov
decl
xor
and
jns
dec
or
pop
daa
mov
imul
mov
jno
enter
fidivrs
unpckhps
and
inc
xlat
jno
mov
jae
imul
mov
cmc
dec
dec
mov
popa
xchg
pop
sub
lods
addl
pop
fwait
rclb
pop
or
adc
push
shrl
lea
push
leave
jnp
and
sbb
lcall
xor
or
aaa
in
jbe
jle
sbb
out
cmp
rolb
imul
sahf
mov
orb
push
scas
imul
sar
ljmp
popf
or
mov
or
bound
pop
xchg
insl
pop
sub
xor
cld
das
inc
out
mul
xchg
test
sub
mov
dec
mov
add
cmp
mov
call
popa
int3
adc
sub
push
jne
mov
fs
sti
xchg
cmp
ljmp
xchg
push
inc
sbb
pop
xchg
in
out
xor
int
out
sbb
dec
xchg
adc
jbe
pop
mov
stc
sti
add
das
rol
cltd
mov
sbb
lea
cltd
push
mov
dec
adc
fldl
sbb
add
cltd
push
cwtl
fsubr
mov
movb
sbb
sub
les
and
push
lods
jl
pop
mov
xchg
pusha
cli
dec
test
or
mov
flds
shlb
jge
cmp
cli
rorb
imul
jmp
cmp
mov
pop
stos
push
in
dec
sti
sub
stos
xchg
mov
test
fidivrs
hlt
jmp
sub
test
aas
shll
jnp
call
pop
inc
and
call
and
cli
cmc
mov
adc
test
jge
xor
mov
cmp
fists
nop
fisubs
xchg
dec
in
pushf
jecxz
mov
sub
sbb
sub
repz
lcall
dec
sbb
push
cmp
and
push
in
pop
mov
arpl
jb
roll
mov
out
xor
sti
je
inc
mov
cmp
das
push
jbe
sahf
sub
adc
fmul
cs
dec
stc
jnp
jne
jbe
sub
movsl
jae
adc
xchg
les
push
inc
fmulp
and
lods
out
dec
add
mov
sbb
xor
rcrl
jle
cmp
sbb
xor
stos
stos
call
icebp
sub
jae
testb
xor
cltd
outsl
int3
test
jge
fs
xor
aam
dec
pop
mov
movsb
stc
xor
lods
mov
sbb
out
add
adc
push
sbb
pushf
jb
add
sub
sahf
insl
push
jb
or
jno
jmp
sbb
hlt
cltd
les
mov
ret
sbb
nop
daa
push
cltd
arpl
jo
fsubs
mov
dec
fisubs
mov
sub
movsb
out
fwait
sbb
sub
je
test
test
hlt
sub
icebp
aam
popa
bound
ret
clc
push
push
stos
push
jle
or
outsb
int
sub
loope
xor
mov
sub
and
pop
out
push
mov
or
insl
or
jo
jl
fdivl
sub
ret
add
iret
leave
in
shl
fadds
jge
sti
cmpsb
test
mov
adc
sbb
movsb
rcll
imul
daa
jno
sti
pushf
xchg
mov
cmp
idiv
adc
icebp
jno
cltd
cmpb
repz
and
lea
scas
stos
idivb
or
xchg
inc
push
aas
jno
dec
inc
mov
dec
idivl
stos
mov
sarb
jno
sbb
sub
aam
cltd
xlat
mov
pushl
push
aas
arpl
lds
das
xor
movsb
mov
xor
xor
insl
cmpsl
in
sub
mov
push
call
insl
dec
mov
adcb
xchg
xor
in
ret
lret
scas
aas
or
lds
cmp
scas
or
call
mov
mov
in
dec
test
pop
pop
inc
mov
scas
cmp
in
sub
sbb
popf
push
xchg
pusha
pop
test
in
data16
mov
dec
mov
cmpsl
jg
inc
nop
fsubp
into
pop
out
xchg
jge
mov
xchg
push
int3
xchg
hlt
ljmp
es
push
or
and
or
sbb
inc
and
sub
jae
dec
data16
mov
rclb
out
mov
icebp
sub
xchg
das
xor
adc
add
out
jo,pt
push
or
xor
popf
jmp
test
std
pop
pop
loop
lods
and
inc
dec
ljmp
popa
dec
test
aas
les
jg
aam
mov
inc
jne
sahf
dec
adc
add
in
mov
jmp
aaa
das
mov
xchg
xchg
xor
sbb
je
cli
shr
aas
fbld
aam
add
xor
mov
cld
push
lahf
or
xchg
lds
adc
je
sub
or
mov
jge
data16
xchg
rcrl
push
in
das
cmp
cmp
int3
in
xor
and
out
pusha
in
xchg
rclb
add
aaa
insb
in
inc
push
pushf
aaa
mov
inc
xchg
push
sbb
fdivs
stos
movsl
jg
cmpsb
out
lods
and
addr16
pop
xor
cmp
test
lods
inc
push
dec
or
int
adc
mov
push
sbb
ja
cmp
mov
jecxz
xchg
adc
gs
sbb
inc
xchg
pop
dec
xchg
inc
cwtl
rcll
outsb
xorl
nop
pavgw
mov
jle,pt
sbbb
xchg
fdivrl
mov
mov
cmc
cmp
or
ret
pushf
adc
add
push
xchg
xor
mov
sahf
push
cwtl
outsb
xchg
gs
das
inc
daa
int3
adc
pop
jmp
decl
int3
mov
out
daa
js
ljmp
lret
movb
clc
xchg
mov
rclb
jnp
insl
mov
xor
adcb
and
adc
mov
push
ret
aad
scas
pmulhuw
cmp
addr16
loopne
inc
xor
test
inc
sbb
sahf
loop
or
push
push
sbb
filds
into
mov
mov
cli
dec
adc
fsubrs
cmpl
cltd
pop
or
mov
push
dec
bound
push
mov
fisttpl
fisttps
jns
jne
aam
dec
loop
in
aas
cli
mov
popf
xchg
mov
xacquire
inc
repnz
loopne
lahf
out
xchg
icebp
xchg
push
aas
aam
inc
in
in
dec
movsl
repz
jmp
bnd
mov
mov
cmp
test
xor
jmp
push
int
in
mov
test
outsl
add
xor
xchg
inc
mov
dec
xchg
jp
pop
dec
scas
gs
xor
mov
cmp
or
sbb
cmp
jg
fidivrl
or
xor
cs
adc
cs
imul
imul
pop
shrb
call
ljmp
adc
sarl
mov
cmp
ret
or
in
push
aad
out
enter
sub
mov
mov
out
push
pop
rcll
adc
dec
xchg
mov
mov
ret
test
push
scas
std
clc
jmp
clc
xchg
sbb
dec
xor
mov
enter
dec
jb
loop
mov
sub
dec
jmp
out
push
add
aaa
mov
jo
mov
aam
js
cmp
inc
mov
lcall
in
add
cs
mov
mov
push
jbe
lds
shll
out
push
pop
movsb
mov
loopne
mov
pop
cmp
mov
lock
insl
push
pop
inc
incl
into
roll
fstpt
int
xchg
clc
fiaddl
cmp
mov
adc
lds
mov
outsb
jecxz
rol
dec
push
lret
push
or
or
cmp
lcall
push
outsl
jge
sub
cwtl
mov
ret
mov
jbe
inc
mov
dec
or
loopne
fs
and
xchg
mov
popa
pop
mov
inc
cmp
mov
lods
sub
mov
jno
aaa
imul
mov
mov
pushf
pop
adc
lcall
lods
xchg
in
lods
jl
mov
xchg
xor
inc
or
adc
pop
add
repz
cs
sbb
pusha
mov
in
icebp
mov
cmp
jle
xchg
into
subb
mov
mov
out
in
imul
ds
aaa
mov
xor
and
test
lret
pusha
and
mov
addr16
cld
sahf
jbe
adc
cmpsl
sbb
cmp
imul
popf
call
notl
into
dec
fists
xor
mov
push
ljmp
and
mov
js
mov
add
sbb
mov
int3
mov
pushf
inc
dec
pop
out
cmpsb
lret
jne
fidivrl
xor
push
sub
rcrb
das
xchg
movsl
popa
jb
hlt
loop
xchg
push
mov
pushf
cmp
fdivs
cmp
cmp
sbb
cmp
or
imul
adc
adc
cmpsb
loope
mov
sub
bound
mov
mov
xchg
jp
fs
outsb
xchg
xchg
gs
scas
inc
xor
push
cwtl
enter
iret
cmc
into
mov
push
adc
rcrb
push
loopne
jb
call
jnp
movsl
les
cltd
mov
adc
ret
push
out
movsb
push
loop
sub
adc
addr16
inc
rcrl
jge
cmp
test
in
cwtl
mov
xchg
sbb
pop
jl
mov
cmpsb
mov
pop
fiadds
mov
sbb
inc
lahf
add
pop
dec
inc
bound
test
inc
loopnew
cli
imul
sbb
hlt
mov
js
notb
push
and
rcl
movsl
es
repnz
aam
mov
xacquire
add
outsl
call
xchg
push
ds
bound
xchg
and
les
pop
lea
std
mov
jno
aas
or
ss
cs
inc
sbb
stos
je
aas
add
scas
decb
in
mov
mov
fcompl
mov
or
xchg
loopne
and
adc
pop
push
inc
sub
push
sbb
pop
pop
add
cli
lock
adc
cmp
test
xchg
dec
xor
lret
mov
movsb
and
mov
leave
aaa
js
cmc
popa
xor
rcll
xchg
dec
and
and
xorb
imul
or
mov
pushf
loop
mov
cmc
aaa
cmp
sbb
std
stos
stc
add
adc
imul
inc
movsl
sub
xchg
or
mov
into
cmp
enter
shrb
leave
jecxz
aam
cmpsb
add
stos
scas
cld
or
sbbl
pop
mov
popa
imul
xchg
sbb
nop
push
mov
lret
jp
sub
inc
das
xor
dec
or
movsl
jmp
ljmp
mov
test
cmp
in
xchg
or
lahf
hlt
cmp
xlat
lea
fsub
and
xchg
dec
roll
jle
pop
cmpsb
pop
data16
cmc
cli
mov
lea
xchg
cmp
jae
mov
push
mov
shlb
or
sub
das
sub
xchg
sub
mov
pop
sub
pop
xor
loopne
cs
adc
aam
leave
pop
fwait
test
fstl
pop
mov
iret
cli
add
test
jl
fwait
push
cmpsb
aas
xlat
mov
call
lahf
iret
push
jne
out
or
popf
movsl
xchg
insb
mov
push
xchg
daa
outsl
xor
lcall
outsl
add
cmp
push
inc
xchg
jae
add
xchg
mov
inc
js
ss
aaa
roll
ss
in
int3
aam
or
pop
jmp
insb
aad
mov
adc
popa
mov
inc
add
enter
or
jp
in
push
and
xchg
ficomps
cmp
in
cmp
lods
scas
xchg
pop
mov
inc
imul
pop
jae
adcl
or
fwait
and
fadds
push
pusha
lahf
mov
aaa
icebp
add
sbb
dec
das
js
dec
inc
add
scas
jb
stos
lahf
jo
test
daa
out
inc
cmc
cmc
insb
iret
in
cmp
adc
imul
jmp
xchg
rcl
jmp
call
cmpsb
xor
dec
dec
out
iret
jp
cmp
inc
mov
arpl
or
sti
jle
into
cmp
xor
sub
not
mov
call
mov
add
insb
shll
mov
and
repz
sahf
push
call
cmp
pop
test
imul
jp
adc
xor
std
cld
stc
shrl
add
pop
jnp
adc
repz
sti
stos
imul
faddl
les
outsb
ret
adc
outsb
add
sbb
dec
bound
hlt
jno
sbb
mov
push
scas
sbb
jne
xchg
pop
ds
aaa
loope
cmp
gs
inc
ss
mov
pop
push
fstps
leave
cmpsb
xor
loop
and
pusha
iret
sahf
in
scas
insl
insl
mov
adc
rolb
dec
leave
leave
push
or
flds
jmp
shll
mov
repnz
xchg
jmp
or
mov
cwtl
xor
jmp
aas
stos
sbb
push
lret
lahf
daa
xchg
dec
dec
or
lods
pop
cmp
push
xor
cltd
add
je
out
jp
mov
inc
and
out
cld
cmp
pop
sbb
lods
xor
pusha
jno
mov
rcrl
xchg
aas
push
int
cmpsb
push
jge
adc
cmp
hlt
inc
ss
push
pop
sahf
sub
inc
push
push
insl
jge
or
movsl
movsl
pop
jmp
icebp
cs
xchg
idivl
cmp
sub
mov
stos
mov
cmp
inc
loopne
cmp
add
jb
bound
shll
stos
sub
xchg
nop
and
cltd
movb
dec
lcall
ficoms
push
les
fidivs
mov
push
lret
ret
sub
sbb
mov
cmp
ret
xchg
pop
cmp
sub
dec
mov
and
fldcw
imul
lods
and
mov
jbe
ret
js
push
pop
mov
in
nop
adc
arpl
int3
mov
and
jne
and
cmpsb
pop
adc
imul
inc
or
mov
inc
iret
lcall
mov
lcall
mov
sub
push
xor
pusha
ljmp
into
imul
cli
pushf
sub
cld
jge
int
dec
cs
cwtl
xor
pop
leave
sahf
xchg
dec
mov
push
and
sub
insl
mov
inc
mov
push
mov
int
mov
sbbb
stos
jns
xchg
je
test
int3
xchg
push
xchg
inc
fsts
cmp
mov
divl
rcll
push
xor
jle
pushf
les
test
adc
add
in
inc
or
sbb
jecxz
adc
test
mov
mov
pushf
xor
les
popf
xorl
daa
sub
dec
push
push
es
imul
push
cmp
insl
xor
out
cmp
adc
cmp
push
les
fisttpl
outsl
xor
dec
out
rorb
sarb
xorb
mov
cmp
pop
addl
enter
mov
rorl
inc
cltd
pusha
sbb
fs
mov
aas
enter
mov
jmp
push
nop
or
pop
scas
orl
popa
das
pusha
fnstsw
pop
cltd
lret
dec
mov
mov
cmp
pop
loope
cmp
mov
addb
pop
jbe
scas
add
cmp
and
xchg
mov
out
in
daa
dec
push
inc
scas
pop
pop
insb
data16
in
stos
xor
sub
jg
addr16
add
ss
sbb
stc
adc
mov
cmp
mov
pusha
aas
mov
loop
push
and
test
or
dec
test
notb
or
test
and
xlat
mov
addr16
cmp
cmpsb
ss
xor
mov
cmp
jmp
data16
movsl
xchg
dec
movsb
loope
jl
outsl
test
lret
insb
pop
cld
push
daa
div
sbb
inc
arpl
fmuls
sub
daa
and
shrb
xlat
cmp
jne
xor
frstor
imul
push
movsl
test
lret
cmp
push
pusha
and
jo
imul
jbe
jno
adc
in
inc
repnz
fs
inc
fmulp
je
fwait
xor
lcall
jne
inc
in
clc
mov
icebp
xchg
jnp
xor
and
lds
hlt
xor
lahf
mov
andl
or
cmpsb
adc
mov
fdiv
jle
loopne
stc
cld
dec
das
daa
aaa
inc
addl
dec
aaa
roll
add
add
xchg
imul
inc
mov
jmp
lods
and
sbb
mov
cmp
popf
ja
add
inc
sub
adc
iret
mov
inc
ret
aad
mov
ja
movsb
or
bound
jb
jbe
jae
fucomi
sub
les
jne
cmpsl
stos
dec
scas
dec
push
jg
xchg
cmp
pop
sub
inc
pushf
cmp
cmc
ret
dec
sub
inc
mov
mov
inc
test
xor
push
xor
push
adcb
fbstp
jmp
xor
fs
xor
sub
cmp
jne
inc
test
addr16
push
xorl
jmp
mov
mov
push
mov
mov
aam
xor
call
sarl
jmp
subb
sub
sahf
xor
out
lock
sahf
repnz
bound
sbb
test
add
insl
or
pop
cmp
lea
cmp
mov
push
aam
pop
sub
or
jg
imul
adc
adc
fstpt
or
sub
out
add
and
pop
and
addr16
ret
cld
ds
pop
push
fldenv
or
add
int3
dec
inc
lret
add
and
int
loope
pushf
ds
pop
mov
aad
rorb
cmp
or
daa
cmp
mov
xor
push
mov
sub
stos
jnp
loopne
jae
mov
mov
sub
or
sarb
jno
mov
outsl
icebp
adc
mov
outsl
cli
int
dec
faddl
mov
negb
das
mov
pop
stc
test
xor
xchg
ljmp
mov
jle
push
shll
loopne,pn
mov
cld
aas
out
add
xchg
repz
xor
mov
cmc
insb
into
xor
add
jb
xchg
fisttpl
push
jge
cvttps2pi
test
mov
jmp
mov
cltd
dec
gs
xchg
lds
movsb
dec
leave
pop
mov
or
mov
adcb
fcoml
jmp
fsubrp
mov
in
cmpsl
jne
ds
insl
mov
sub
fidivrl
sub
ja
mov
pushf
arpl
in
jno
or
add
aaa
fimuls
xchg
add
insb
pop
stos
inc
pusha
xlat
stc
xor
out
aas
movsb
push
adc
out
mov
jnp
xor
mov
mov
mov
rcl
inc
cltd
add
mov
push
mov
xor
hlt
xchg
sub
fdivrp
aad
and
inc
push
sti
stos
jle
xchg
jo
sbb
or
or
lahf
js
push
or
mov
sbbb
loop
jbe
and
or
lcall
popa
and
jo
fsts
cmp
mov
stos
sub
arpl
push
fisubl
js
push
into
mov
test
aad
dec
aad
push
into
dec
out
push
add
subl
int3
sbb
ja
iret
adc
lods
and
sbb
xor
jp
jb
jbe
mov
stc
xor
pop
test
clc
pop
into
jmp
dec
xor
cmc
stc
rcrl
jmp
mov
es
jmp
fcom
imul
and
xchg
mov
sub
mov
test
fdivr
add
dec
xchg
mov
mov
or
pop
lds
jp
sbb
enter
cmpsb
loopne
fwait
aaa
dec
lret
out
outsl
aam
jge
call
sbb
pop
sub
ljmp
xchg
or
pusha
adc
mov
rcrl
test
fiadds
mov
lcall
and
push
lock
push
push
test
xchg
push
or
icebp
xchg
dec
cmpsb
inc
xchg
out
lahf
mov
sbb
push
neg
or
xchg
push
dec
sbb
lods
pop
insl
or
lods
adc
loop,pn
cmpsb
push
pop
mov
out
rcl
fs
js
jecxz
int
dec
add
js
je
call
push
icebp
dec
xor
push
add
mov
cmpb
daa
movq
mov
xchg
mov
mov
adc
idivb
mov
aad
je
in
mov
les
daa
pop
jp
xor
ffreep
in
enter
add
in
inc
rorl
cmp
sub
cmp
pushf
add
imul
fadds
and
or
cmp
mov
mov
mov
mov
adcb
les
repz
jbe
add
sbb
leave
inc
and
xchg
cmp
andb
stos
inc
movsb
pop
push
ljmp
and
cltd
lahf
xor
xchg
xchg
sub
pop
jbe
push
movsb
cs
cmp
xchg
dec
fldcw
into
add
out
pop
push
stos
mov
jnp
loope
clc
lods
jbe
gs
sbb
adc
mov
xchg
push
out
sub
dec
or
mov
sbb
inc
aam
pop
mov
jne
dec
pop
out
pop
pop
insb
xchg
repnz
dec
xchg
cmpsb
std
sub
add
adc
inc
inc
mov
je
mov
cltd
mov
mov
lea
fucomp
sbb
push
dec
add
ds
jns
sbb
jmp
arpl
fistpll
cmpl
mov
pop
mov
scas
sub
out
shlb
inc
dec
push
lds
nop
sub
arpl
xor
inc
xor
fsubrp
and
roll
sbb
dec
jnp
cmc
leave
loopne
mov
push
inc
xor
adc
fs
cmp
mov
adc
int
shlb
enter
ret
xor
icebp
jo
mov
inc
inc
int3
xor
pusha
mov
mov
xchg
sub
repz
pop
das
mov
insb
or
sbb
or
or
hlt
mov
aaa
fsubs
test
daa
std
insb
xor
fwait
aas
test
fildl
xor
in
adc
mov
xchg
pop
ljmp
iret
les
loop
jne
sbb
lods
test
and
fs
popa
mov
sbb
xchg
inc
sbb
adc
scas
cmp
rclb
pop
push
xchg
push
sti
xchg
push
xchg
aas
fistl
sub
mov
sbb
xchg
xchg
scas
push
cmp
mov
inc
aas
cmp
xchg
cli
sub
addr16
sbb
mov
pop
pop
setne
pop
and
jg
mov
or
hlt
dec
repz
enter
lds
data16
imul
mov
lea
sub
shlb
adc
jle
pop
lahf
jnp
add
out
sti
pop
in
in
enter
adc
jmp
test
cwtl
push
sub
or
fwait
adc
add
repz
cmpsl
mov
sti
mov
jg
xorl
or
iret
int3
cmpsl
daa
xor
mov
mov
add
pop
adc
xorl
jge
add
filds
mov
add
sub
int
test
cmp
cld
lret
xchg
int
int3
jg
mov
enter
push
mov
addr16
pop
xchg
rcl
mov
inc
xchg
cmp
das
bound
ljmp
leave
xor
insb
ljmp
test
shll
ror
ja
int
or
cli
mov
jecxz
test
je
pushf
leave
push
movsl
or
ss
movsl
cmp
ret
pop
mov
push
in
adc
jno
pop
out
xor
or
lcall
clc
imul
sub
jl
or
add
cmp
inc
jbe
fwait
jns
pop
add
add
js
xor
sub
jle
jle
jae
and
inc
sarl
pop
fistpl
and
jge
popa
jae
adc
sbb
inc
add
stc
movsl
ja
mov
cli
and
sub
inc
ret
in
jns
int
push
pop
stos
mov
fs
dec
sbb
cs
pop
js
dec
sahf
mov
imul
scas
mov
lea
jp
sub
xor
sahf
cs
inc
mov
push
data16
loopne
into
cmc
fstpt
adc
add
dec
idivb
or
dec
pusha
loopne
sti
mov
jle
or
mov
outsl
out
rcll
pop
inc
aad
repz
and
jnp
sbb
push
inc
ja
ret
or
arpl
xchg
ret
mov
les
xchg
and
int
pop
fstl
fbld
cltd
mov
cwtl
dec
cmp
jno
scas
sbb
movsb
movsl
cmpsl
inc
aad
shll
hlt
push
rcll
in
ja
aam
mov
mov
push
mov
push
cwtl
jecxz,pn
inc
mov
stos
push
dec
lahf
adc
ret
xchg
popa
xorb
insl
push
mov
outsb
fisubrs
repnz
inc
adc
inc
int3
fsubrs
push
insl
ja
test
ljmp
jl
mov
or
pop
push
sbb
sub
mov
mov
sub
repz
adc
push
into
jmp
pop
pop
xchg
jns
movsb
stos
incb
add
jge
pop
dec
pop
cmp
inc
sti
jge
push
int
je
xchg
push
and
xchg
jp
pop
ret
adc
or
fucomip
lcall
rcl
js
mov
or
push
sub
mov
mov
xor
jge
gs
dec
out
out
sbbl
stos
out
js
out
mov
jbe
jge
xchg
and
xor
inc
push
out
xor
fs
cltd
xchg
pop
or
pop
push
rcll
pushl
out
out
push
std
cld
sti
and
cmp
cmp
jmp
inc
test
xor
or
mov
bound
xchg
mov
lahf
rclb
in
mov
sbb
outsl
stos
lahf
mov
mov
add
mov
mov
push
add
call
test
sarl
sbb
sbb
dec
jmp
mov
lods
adc
mov
jno
rorb
xchg
pop
sbb
hlt
fildl
and
sbb
cwtl
jg
sbb
dec
push
cmp
mov
adc
testb
inc
dec
dec
inc
je
das
notrack
orl
out
inc
lock
aad
stos
xchg
dec
outsb
sbb
mov
lock
mov
arpl
or
ljmp
ret
adc
cmc
shlb
xchg
mov
adc
xchg
cld
dec
mov
aam
sar
jae
cmc
mov
push
out
mov
lock
adc
sub
jg
mov
cs
icebp
es
daa
xor
mov
insl
mov
test
adc
mov
test
sbbb
push
enter
mov
push
pusha
xchg
inc
outsl
add
cmp
jb
pop
and
dec
pop
add
test
imul
and
pop
insb
cwtl
pop
rorl
iret
add
jmp
adc
cld
fildl
xor
loope
into
jno
pop
jne
mov
fstpl
sub
sbb
pop
add
mov
adc
lret
cli
leave
sti
mov
push
mov
xchg
pop
and
and
jnp
jb
push
dec
setae
int3
sbb
xchg
jns
fs
or
rcr
xor
aad
mov
and
enter
fucom
pop
hlt
adc
push
cwtl
in
xchg
ficompl
xor
test
arpl
mov
in
cld
std
push
stc
aas
lret
xor
mov
adc
push
xchg
cmp
movb
adc
cmp
jne
les
hlt
sub
mov
pop
or
mov
push
cmp
loope
fistpl
push
jne
loope
mov
pop
jmp
scas
fbstp
and
pop
rorb
adc
xchg
lds
insl
nop
jno
loop
pop
add
or
adcb
jns
mov
sub
rorl
inc
sbb
ljmp
xchg
mov
dec
inc
xchg
mov
mov
cmp
jne
xlat
and
ret
mov
ret
add
add
mov
lret
lods
mov
into
flds
pop
cmpxchg
cmp
add
testb
pusha
in
loope
jb
push
out
lds
arpl
lret
and
mov
sbb
push
shlb
nop
mov
sub
pop
mov
notb
out
popf
pop
mulb
data16
lret
mov
bound
cli
aam
hlt
movb
scas
stos
in
xor
cmp
xchg
inc
jge
lea
add
mov
jb
and
call
scas
repnz
mull
outsb
aaa
dec
es
dec
inc
dec
push
mov
jno
sbb
push
scas
pushf
sbb
mov
and
aad
dec
sub
push
rcrl
mov
jns
inc
or
cmpsb
das
daa
in
inc
sub
xor
mov
push
push
stos
data16
mov
aaa
or
mov
ficoml
es
sub
sahf
xchg
std
inc
imul
jg
dec
leave
stos
jb
or
fcomps
hlt
into
pop
out
jl
test
xchg
sbb
jmp
mov
fucomp
loop
pop
xchg
hlt
sar
pop
ja
cmp
or
push
pop
mov
and
cmp
cmp
mov
adc
icebp
mov
dec
xor
popf
cmc
mov
daa
pop
sbb
hlt
adc
dec
pop
fistl
cmpsb
loopne
jno
rolb
xor
aad
inc
adc
xchg
pop
mov
and
jle
sbb
sub
mov
or
or
sub
jl
xchg
fcompl
imulb
out
sti
mov
sbb
dec
andps
sbb
pop
jb
xchg
cmp
inc
inc
xorl
je
daa
in
cmpsb
int
imulb
pop
sub
orps
into
cmp
jnp
inc
scas
inc
xchg
xor
movsb
cmpsl
mov
ret
adc
icebp
mov
lret
ljmp
inc
addb
push
and
push
pop
movsb
add
adc
fsubrs
addr16
test
jmp
adc
mov
xor
imul
sahf
cmpsb
lods
lock
notl
into
int
xchg
shl
push
xchg
and
fildll
jnp
push
mov
pop
aad
addr16
lock
cmp
mov
call
inc
jg
pop
test
loope
psadbw
cld
ja
pusha
xor
call
notl
movsb
dec
mov
mov
sbbb
push
xor
loope
movsl
push
test
inc
les
sbb
mov
scas
dec
jae
add
xchg
ljmp
movsl
pop
fsubr
mov
inc
fdivrl
mov
adc
add
jno
mov
inc
and
pop
scas
fadds
sti
pop
stc
pop
inc
or
sbb
mov
je
repnz
mov
dec
xor
xor
ficoms
sub
mul
add
xchg
gs
jg
lods
arpl
addr16
das
sbb
push
cs
xchg
sbb
lods
cmp
inc
sub
cmp
xchg
jg
cmc
cmc
aaa
lahf
sbb
call
sub
in
dec
mov
mov
leave
mov
out
jge
sub
sbb
stos
pop
mov
std
cmp
push
in
dec
or
mov
or
aam
or
fimull
push
mov
pop
js
cli
jno
ret
lea
lret
std
mov
sbb
xor
push
lds
xchg
or
pop
ds
jp
sbb
mov
sub
adc
mov
insl
sub
ds
push
mov
inc
pop
cmp
fmuls
jno
sbb
incl
and
adc
lods
mov
add
mov
stos
sbb
cmpsl
test
out
jnp
xchg
das
dec
gs
or
subps
push
fdivr
cmp
rcl
sbb
and
int3
pop
and
mov
pop
push
in
mov
adc
dec
hlt
mov
add
outsb
scas
mov
mov
or
or
lret
mov
enter
sbb
inc
xchg
testl
push
adc
hlt
inc
movsb
andb
in
addb
mov
mov
lahf
mov
das
xchg
stos
jbe
imul
lcall
lods
pop
xchg
shlb
fs
mov
cmp
mov
cld
mov
inc
jns
cmp
shl
mov
push
mov
ud1
ja
int3
lcall
mov
jno
adc
popa
xchg
aas
or
or
dec
subl
movsb
mov
clc
lods
jno
and
hlt
ja
xor
mov
lea
mov
arpl
add
adc
mov
inc
xchg
fbstp
jmp
pop
fdivrl
xchg
or
sub
sbb
aaa
cld
add
adc
xchg
inc
mov
flds
js
daa
scas
push
xchg
rcrl
xchg
sbb
jb
fsts
and
dec
mov
clc
add
int
push
xchg
jne
push
xor
cld
popa
add
pop
push
pushf
cmc
je
cltd
pop
imul
jnp
jne
cmpsb
jle
iret
pop
push
add
fnstsw
cmp
dec
mov
and
popa
pop
inc
mov
nop
arpl
fs
lds
jg
cld
and
xchg
shr
xchg
lret
jmp
mov
and
in
cmp
in
jbe
mov
lds
jne
in
xor
ja
push
movsl
or
outsb
fistpll
pop
pop
add
in
push
add
test
jg
add
arpl
js
movsb
push
or
cmp
lds
or
sub
jb
fmul
push
sti
ret
jl
mov
pushl
cwtl
xor
xchg
je
sbb
fsub
fcoml
in
dec
ret
sub
xchg
inc
xlat
out
inc
sub
and
and
into
xor
icebp
cli
cmp
ds
dec
shll
aaa
pop
fdiv
xchg
scas
ljmp
cmp
ret
fcompl
ret
aaa
xlat
sahf
adc
mov
int3
ret
or
push
pop
idivl
loopne
xchg
cmp
inc
add
mov
sbb
lea
les
outsb
jb
dec
insl
outsl
jb
into
mov
jge
clc
loope
adc
pop
mov
adc
push
push
dec
inc
aam
scas
jg
or
arpl
mov
mov
test
xor
inc
insb
test
sub
in
xchg
je
push
mov
out
fsts
push
jg
scas
mov
push
aad
dec
xchg
repz
jmp
pop
ss
mov
cmp
cs
adc
dec
add
les
ret
lret
jo
popa
mov
sbb
xchg
xor
jae
or
cli
out
cs
sub
cmpsl
aas
out
xor
je
pop
stos
mov
fisubs
sbb
pop
jge
test
mov
pop
xchg
jecxz
scas
pushf
rcl
inc
imul
mov
dec
dec
jmp
cmpsl
popa
jmp
icebp
cmp
and
xor
mov
sahf
mov
lock
inc
je
push
clc
movsl
push
ss
leave
mov
je
lret
test
cs
cmc
adc
xchg
push
shrb
sbb
sbb
pop
sbb
add
shr
fs
cmpsl
sarb
cli
inc
xlat
push
bound
in
shl
jl
mov
push
sbb
jg
cmc
cld
dec
fstp
daa
sbb
mov
add
movsl
push
push
loop
lret
jecxz
icebp
int
push
loopne
test
push
outsl
cltd
andl
loop
and
dec
jge
push
sbb
fidivs
dec
and
xor
push
sbb
push
and
stc
pop
out
test
or
mov
mov
in
aam
mov
icebp
mov
inc
sbbb
pop
loope
dec
ljmp
jg
fnstenv
aaa
sarb
lahf
mov
mov
and
in
cmp
mov
pop
fbstp
mov
lret
and
adc
bound
je
adc
out
push
jo
ret
cmp
enter
inc
lea
fcoms
js
dec
dec
aam
push
popa
out
push
mov
pop
aam
add
xor
push
loope
aas
dec
mov
mov
test
jmp
mov
push
push
xor
xchg
mov
test
and
xchg
dec
xchg
dec
sbb
or
ds
mov
mov
push
inc
jg
xchg
stos
nop
jecxz
lods
adc
repnz
inc
mov
or
in
and
and
into
enter
imul
cli
cmp
lea
inc
fadds
or
push
cltd
call
jae
adc
test
pop
nop
adc
es
sub
test
adc
adc
cltd
mov
xchg
repnz
repz
or
jb
inc
lret
rorb
push
leave
adc
les
inc
jge
mov
mov
insl
outsl
xor
pop
add
out
sbb
into
sbb
cwtl
gs
fsts
push
sbb
cmp
mov
push
pop
or
shll
cmp
xchg
jl
push
xchg
mov
cmp
test
sahf
cmp
cmp
int3
add
movsb
mov
popa
inc
fadds
jbe
fidivrl
cli
testb
int
cmpsl
jns
stos
dec
es
sub
xchg
mov
jbe
nop
loop
andl
popl
mov
pop
sahf
xchg
adc
jecxz
jmp
inc
adc
popa
sub
push
std
xlat
mov
mov
in
mov
adc
mov
mov
add
repz
dec
lds
xchg
jl
fnstenv
in
jge
mov
cmpsl
mov
mov
popf
fdiv
mov
fsubs
xchg
jmp
adc
push
push
cmpsl
adc
sti
mov
es
inc
rcpps
mov
pop
dec
sbb
xchg
adc
and
fwait
pushf
cmp
jg
loop
les
pop
jp
inc
cmp
push
rcrl
mov
cmp
dec
imulb
xchg
int3
push
fwait
push
add
ret
xor
aam
or
cmp
movl
ss
cwtl
adc
scas
jge
popf
movsb
gs
enter
xor
in
jnp
loop
leave
bnd
gs
fs
push
int3
movsb
sbb
mov
xchg
jae
mov
dec
test
mov
repnz
mov
dec
push
daa
test
jle
addr16
aad
imul
cmp
push
addb
or
add
xor
and
or
dec
call
xchg
pushf
mov
jle
fmull
hlt
sbb
sbb
jecxz,pt
xchg
cmc
xchg
testb
inc
push
sbb
mov
popf
ficoml
lcall
sbb
mov
or
fdivs
mov
inc
add
xor
shrb
pusha
adc
pop
jbe
push
lock
into
push
cmp
push
test
ret
xchg
fisubrl
cmp
loop
dec
lea
jmp
sub
das
stc
cli
mov
and
in
pushf
andb
frstor
sub
and
or
imul
xor
sbb
adc
cmp
push
ja
jmp
mov
das
or
mov
jne
inc
icebp
add
stos
arpl
and
lods
lret
mov
movsl
sbb
cmp
add
or
jne
sub
jns
sbb
push
in
jns
or
mov
shl
sar
lret
dec
repz
repnz
adc
stos
or
mov
pop
sbb
push
xchg
in
pop
dec
dec
scas
adc
and
add
dec
push
sbbl
dec
mov
adcb
aad
mov
add
add
and
inc
popf
mov
sbb
jg
scas
dec
test
fwait
inc
leave
test
rorb
popa
jecxz
xor
pop
int3
in
les
jg
mov
daa
in
cmp
test
jg
mov
cs
cld
fmull
sub
or
fsub
mov
rclb
popf
adc
sub
or
pop
mov
shrb
jnp,pt
pop
imul
push
sbb
rcr
mov
dec
pop
test
dec
iret
pop
cmp
inc
test
sub
js
sub
mov
mov
mov
int3
sub
mov
mov
insb
addb
or
add
ret
or
pop
aas
sub
inc
sarb
into
daa
pop
ret
or
push
lods
sub
std
lock
xchg
int3
sub
pop
shlb
mov
mov
mov
push
and
je
in
sub
mov
xlat
xchg
std
mov
outsl
adc
outsl
pushf
jl
incl
adc
lret
sbb
xorl
and
jnp
aad
es
gs
xchg
mov
inc
jmp
popa
in
call
iret
dec
and
xchg
pop
mov
lret
mov
sub
sub
not
xor
into
sbbb
xchg
out
xchg
inc
jle
stos
xchg
div
lretw
add
adc
and
aaa
and
shl
insb
cmpsb
rcll
jns
adc
and
ds
sbb
xchg
and
adc
xor
add
pop
pop
dec
enter
cmp
outsl
jecxz
mov
inc
in
fsts
adc
into
scas
clc
mov
adc
or
sbb
clc
push
sbb
shr
fbstp
fistl
lret
lock
negl
mov
pushf
lahf
jne
dec
imul
dec
hlt
add
lods
jg
addr16
das
jge
ret
loop
mov
dec
and
mov
or
lock
mov
mov
mov
popf
inc
cwtl
xor
int
pop
cmp
mov
mov
jae
orl
gs
adc
add
mov
insb
adc
xlat
pop
popf
and
jmp
cmp
push
sbb
movsb
xchg
xor
add
xor
add
xchg
and
pusha
scas
xchg
popf
jne
push
or
dec
or
lret
sub
mov
jmp
or
loopne
add
or
rcr
mov
test
cli
adc
shlb
scas
gs
lcall
in
aaa
mov
mov
xchg
adc
hlt
mov
jb
xchg
xchg
inc
aaa
sarl
fwait
xlat
sbb
xchg
lods
loopne
lods
inc
test
mov
mov
push
mov
adc
mov
xchg
or
mov
mov
loop
iret
ljmp
lret
mov
adc
cli
sub
mov
xlat
dec
pop
imul
mov
je,pn
mov
nop
jmp
fdivrl
icebp
fld
cmp
add
sarb
jne
repz
xchg
lock
or
sbb
jb
lahf
rol
push
aad
imul
jns
int
imul
ds
push
stos
iret
adc
mov
sbbb
mov
and
sub
pusha
pop
lahf
das
sub
jmp
sub
arpl
or
ljmp
fsubrs
subb
imul
dec
mov
or
lret
ss
mov
xchg
inc
xchg
pop
mov
jge
push
pop
inc
inc
inc
aam
rorl
mov
stc
cltd
loopne
fwait
mov
cltd
testl
sbb
or
rolb
add
mov
out
push
inc
inc
mov
jg
or
mov
arpl
js
adc
push
add
pop
cmp
cmp
cs
aaa
insb
iret
aaa
add
arpl
cmpsb
fcmovu
pop
scas
in
xor
insl
add
stos
sbb
cmp
mov
ret
dec
jne
out
and
or
out
dec
add
adc
inc
xchg
and
cld
push
adc
out
mov
add
decl
out
out
pop
out
push
loopne
cmp
rcll
add
inc
jmp
mov
fistpll
dec
icebp
std
mov
push
shl
cwtl
or
mov
stos
imul
pop
sub
je
push
add
mov
out
sbb
movsb
pop
and
jnp
xor
mov
or
int
sbb
xor
dec
lods
imull
fcmovb
sub
inc
sub
sbb
pop
mov
push
mov
in
xchg
pusha
inc
inc
lret
clc
outsl
mov
inc
pop
cli
inc
jecxz
xchg
cmc
xorb
xchg
cmp
in
dec
imul
imul
mov
in
loop
cld
insl
inc
inc
arpl
out
xor
fists
inc
mov
inc
pop
jns
in
pusha
lods
mov
mov
jle
loopne
int
xor
ljmp
lcall
aas
out
mov
outsb
dec
cmp
sub
cmc
mov
push
aaa
sbb
clc
rcrl
aaa
push
pop
enter
in
lock
jmp
inc
push
out
xchg
xchg
adc
rcll
test
or
jae
xchg
or
notb
sub
mov
outsb
leave
jle
or
mov
scas
sbb
dec
call
movsl
mov
mov
sarb
jmp
loop
mov
fmull
and
imul
jo
orl
ja
ret
jno
pop
fidivrs
mov
pop
sbb
push
jo
mov
inc
dec
xor
daa
sbbb
adc
adc
sahf
pusha
in
push
add
dec
in
iret
movsb
outsb
fcoml
bound
xchg
loopne
sar
and
cmpsl
xor
in
jnp
fndisi(8087
test
cmp
shl
cmp
mov
imul
or
bound
push
mov
lock
cmp
and
stc
subl
shll
das
mov
mov
adc
mov
into
sub
imul
cld
pop
dec
outsb
test
push
lds
dec
inc
dec
nop
dec
fwait
nop
pop
movsl
add
jle
jle
gs
cmpsb
mov
mov
cwtl
rcrb
test
ret
fsubs
inc
in
add
addb
or
and
loope
les
jmp
push
call
ss
or
movsb
jae
fisttps
dec
xchg
mul
mov
stos
pop
dec
push
adc
add
dec
idivl
ds
mov
xor
dec
xchg
rolb
rcll
test
dec
pop
paddb
mov
jmp
jecxz
jae
mov
add
add
test
push
popf
insl
mov
xchg
xor
mov
pushl
cmc
cmc
mov
xor
ljmp
inc
clc
enter
lea
sub
xlat
xor
sub
sub
dec
addr16
je
int
mov
jecxz
xchg
addr16
lods
lret
fs
jnp
pop
xor
in
xchg
jnp
jns
cmp
fs
iret
enter
sub
sub
mov
dec
fists
fcompl
fsubrl
ljmp
sahf
leave
inc
push
adc
dec
rol
cmp
mov
add
cmp
push
push
lret
insb
addb
jl
cli
aam
cmp
fists
inc
jno
push
push
mov
scas
mov
pop
call
mov
std
xchg
jg
enter
ret
mov
and
cmc
iret
pop
out
mov
jno
mov
lahf
jmp
test
cmp
push
and
push
pop
icebp
js
add
dec
icebp
mov
lea
jmp
cltd
xlat
jbe
pop
cmpxchg
dec
mov
aas
sbb
ss
xchg
ss
cmpb
sub
fisubl
ret
cld
push
inc
mov
jp
or
cmp
fs
inc
lea
ret
shll
push
cmp
xchg
dec
out
sbb
mov
and
add
lret
sti
out
bts
es
aas
pop
dec
mov
sti
cltd
aam
js
adc
add
mov
sub
sub
push
rcll
out
pushf
ljmp
adc
iret
movsl
and
adc
fwait
clc
outsb
and
mov
pop
std
sarl
or
addb
dec
int
xor
gs
les
or
gs
pop
icebp
test
lods
es
ret
dec
adc
or
xor
jg
out
mov
xchg
add
jg
xchg
mov
test
and
xchg
mov
jp
in
dec
icebp
adc
xchg
push
loopne
fisubs
scas
cmp
lods
shlb
or
in
mov
das
push
push
aaa
iret
dec
addr16
in
adc
jecxz
push
arpl
fstps
ficompl
or
sahf
in
cmp
mov
push
push
shll
mov
imul
cltd
dec
xchg
nop
dec
adc
jns
xchg
daa
loope
jae
addr16
push
cs
jmp
mov
and
xlat
aaa
fnsave
jmp
cltd
inc
add
fwait
icebp
xor
imul
outsb
add
cli
movsb
mov
mov
jmp
or
push
add
xchg
inc
xchg
inc
jmp
cwtl
add
pop
std
out
daa
xchg
pusha
sub
push
inc
mov
push
test
xchg
jmp
push
push
clc
aaa
inc
int
push
loope
arpl
nop
das
bound
js
movsl
inc
dec
mov
pushf
hlt
or
insb
push
fdivs
jne
shll
cwtl
dec
loopne
ljmp
mov
jae
add
adc
scas
fldl
adc
adc
mov
sbb
setle
add
cmp
adc
and
cwtl
push
push
mov
mov
cmp
mov
sub
xor
mov
xchg
jne
xchg
sahf
adc
mov
stos
repnz
xor
sbb
and
cli
xchg
andb
int
pop
sub
fdivrs
in
stc
sbb
mov
shl
jecxz
dec
andb
call
mov
mov
mov
js
mov
mov
sub
mov
outsb
into
jbe
adc
stos
mov
xchg
push
cmc
pop
lods
cmp
sub
push
call
insl
sbb
fnstenv
xchg
std
jmp
fdivrl
popf
div
mov
mov
movsl
pop
add
xor
xchg
cmp
in
jp
sbb
scas
cmpsb
mov
lcall
lock
shrl
imul
fisttpl
test
push
sbb
fisubl
loope
push
pop
jmp
jmp
or
or
out
xchg
sub
lcall
out
dec
or
or
in
leave
sbb
lock
mov
sbb
vcmpsd
aas
shrb
xchg
int
inc
mov
icebp
mov
cmp
pushf
stos
or
fstpt
cmp
insl
fstpt
loop
or
cmp
mov
fisttps
push
dec
inc
add
cmp
dec
popf
xor
in
lods
out
mov
in
dec
repnz
pop
inc
dec
xor
and
pop
lds
lock
loop
sub
xchg
in
loop
inc
inc
aam
stc
pusha
paddw
cmc
cmc
mov
mov
xchg
insb
sbb
add
mov
sbb
repnz
jae
mov
mov
scas
stc
ja
addr16
jb
xchg
adc
imul
hlt
inc
jecxz
stos
jae
xchg
mov
fs
fwait
incb
or
and
shrl
sub
inc
dec
aad
pop
lods
or
cmp
outsl
dec
jnp
and
or
ljmp
pushf
lret
mov
or
stc
pop
pop
cld
jmp
inc
shl
xchg
push
roll
test
mov
daa
ret
rcr
call
inc
mov
mov
adc
imull
call
sbb
push
in
xbegin
scas
sub
or
lret
insl
sbb
pop
inc
mov
loop
in
inc
cmp
xor
push
cltd
popf
lock
cmp
push
add
jb
add
aaa
insb
xor
push
push
data16
push
pop
and
push
jb
sbb
jnp
mov
mov
in
mov
std
pop
push
sti
js
sub
shl
popf
lods
gs
inc
fidivrs
ret
xchg
xor
pop
or
mov
mov
in
dec
sbb
xor
mov
mov
test
inc
cmc
les
pop
add
testl
les
dec
jo
sub
leave
fsub
xchg
lret
mov
mov
jnp
xchg
push
mov
shll
fsub
inc
loopne
push
mov
adc
xchg
and
stos
sub
pop
sub
pop
jmp
pop
hlt
pusha
js
clc
jg
enter
pop
push
jle
insb
fs
out
sbbb
popa
addl
lret
add
xor
clc
loope
das
sbb
ljmp
and
cs
lock
loope
loope
cmpsb
sub
shll
jbe
arpl
xor
xor
mov
or
nop
mov
scas
jge
xchg
iret
pop
mov
out
adc
or
mov
push
daa
push
dec
push
jne
jge
sbb
xchg
jmp
push
mov
fadd
fists
xchg
insb
push
xor
inc
fstl
adc
fdivrl
clc
mov
sahf
mov
xchg
sbb
in
push
fwait
and
fisttpll
dec
stos
mov
or
aad
movsl
sub
mov
xchg
ja
data16
mov
jg
hlt
cwtl
mov
shll
fimuls
test
pop
std
ljmp
adc
mov
and
push
pop
xlat
insl
pop
out
cs
inc
les
or
mov
stos
fisubl
jmp
test
aas
ret
add
out
dec
fldl
mov
jmp
lcall
loop
sbb
xchg
std
inc
pop
xchg
mov
sahf
mov
call
pop
fidivs
lcall
inc
fucomip
push
in
scas
les
cmp
dec
jmp
stos
cmpsl
fisttpll
out
or
je
hlt
loopne
mov
les
test
in
add
xlat
test
fildl
roll
fdivr
test
inc
gs
outsb
out
in
sbb
push
adc
js
ficomps
outsb
les
jns
into
or
cli
ds
or
sbb
mov
andb
mov
addb
mov
insb
or
mov
mov
pop
pop
push
out
outsb
cmp
mov
adc
add
es
fsubrl
adc
aas
cmovnp
adcb
xor
xchg
cmc
sub
xor
add
dec
jp
or
insl
and
jle
dec
mov
and
xchg
mov
mov
or
jo
in
fadd
fcmovbe
adc
negb
ret
in
push
adc
popa
jns
aas
pop
sbb
bswap
or
mov
popa
sub
xlat
insb
int
add
jmp
sub
loopne
icebp
add
mov
xchg
insb
cmpsl
cs
repnz
pop
or
push
sub
std
pop
jno
mov
pop
xchg
xchg
xchg
mov
ljmp
dec
pop
pop
sub
push
js
xchg
cmp
subb
inc
push
loope
cmp
jmp
popf
out
jae
sub
stos
unpckhps
rcrb
xchg
cmp
or
cmp
lea
insl
test
test
xchg
mov
pop
jns
xchg
adc
cmp
nop
pop
push
mov
lock
jno
orb
shll
push
and
popa
dec
xor
lcall
and
or
pop
nop
imul
and
ror
cmp
xchg
ret
jmp
ror
mov
mov
mov
sbb
mull
clc
stos
aam
sarl
jl
ss
dec
ret
cli
imul
in
xor
loope
imul
arpl
or
adc
fmull
cmp
push
ja
lea
add
sub
xchg
stc
cmpsb
rolb
add
and
and
loop
in
imul
dec
int
jnp
xor
push
sub
movsl
cmp
sub
icebp
insl
inc
cmpb
repz
adc
add
adc
sbb
fimull
adc
sbb
mov
out
test
push
aam
or
dec
lcall
mov
aam
jecxz
mov
push
sub
push
mov
das
dec
push
aas
xchg
push
out
mov
out
and
iret
test
imul
xor
jg
inc
cmp
pop
mov
jo
inc
mov
cmc
nop
pusha
mov
out
mov
jg
and
jmp
adc
lea
dec
mov
mov
add
jp
adc
push
cmp
dec
scas
mov
push
add
dec
fsubr
jnp
push
hlt
out
fstl
push
pop
pop
fsin
mov
push
xchg
add
pop
cwtl
test
pop
jae
mov
andl
lret
aam
mov
and
sahf
push
inc
in
cld
mov
test
movsl
lret
xchg
test
cmp
fwait
xor
dec
mov
movsb
pop
inc
imul
fwait
sbb
push
cmpsl
and
add
inc
pop
mov
xor
stos
test
insl
lock
add
fwait
ljmp
loop
sbb
mov
xchg
inc
mov
push
pop
popa
mov
nop
mov
dec
inc
mov
enter
mov
lret
sbb
mov
mov
cwtl
dec
dec
push
iret
stos
dec
jnp
xchg
adc
push
xchg
inc
iret
sub
mov
mov
cmpsl
mov
mov
decl
fbstp
mov
in
scas
push
lds
mov
dec
and
xchg
ss
movsl
testb
stos
mov
mov
je
cmp
test
psraw
aas
mov
js
push
addb
xchg
dec
mov
lods
sbb
scas
lods
outsl
xchg
in
fiaddl
inc
push
hlt
jo
negb
dec
lock
jbe
push
jl
mov
lret
ss
mov
aas
push
out
rcl
and
lods
and
or
es
int
lea
fisubl
lds
dec
outsl
mov
das
jnp
popf
lret
ljmp
xor
addb
xor
or
testl
inc
push
cmpsb
mov
out
fs
sbb
cli
and
arpl
addb
and
imul
movsb
xchg
shll
mov
int3
sub
or
sub
fnsave
js
imul
call
xchg
lahf
jae
cs
sub
jo
fld
mov
out
dec
jno
in
dec
mov
nopl
push
xchg
ret
mov
les
mov
and
jnp
inc
xchg
loopne
pop
inc
inc
cmc
xor
sbb
test
and
inc
neg
hlt
out
xor
push
sub
lock
sbb
mov
mov
stos
es
faddp
test
or
cmp
stos
jno
lret
sub
lcall
lret
push
adc
jns
xor
add
into
inc
clc
ret
cs
imulb
jns
daa
xor
stc
dec
data16
imul
or
ss
adc
scas
inc
pusha
xor
pop
inc
movsb
push
mov
addr16
mov
sub
pop
ja
sbb
jge
cwtl
lcall
out
das
sbb
jne
add
fwait
pop
push
insl
cli
jg
adc
dec
or
or
jno
fildl
cltd
ds
mov
loop
jns
xchg
shlb
jl
aas
leave
mov
stos
sub
mov
lret
or
sub
add
cs
rclb
jne
into
mov
pop
push
jnp
push
or
pop
cmp
mov
inc
inc
sub
mov
xor
jmp
push
stos
lods
aaa
xchg
test
dec
mov
xor
pop
mov
jle
pop
add
cmp
in
sarb
jge
iret
popa
orb
pop
inc
ds
or
xchg
jmp
fst
ja
jo
jbe
sbb
xor
lods
ljmp
and
ljmp
lret
les
bound
adc
jp
or
mov
test
into
outsl
or
sbb
orb
cltd
pusha
mov
jns
or
inc
fistpll
int3
sub
jmp
sbb
insb
and
xchg
int
es
xchg
imul
rol
std
jg
xchg
fwait
push
mov
xor
push
or
sub
imulb
cmp
outsb
sbb
idivb
lods
lock
inc
movsl
lret
in
call
jns
es
cmp
mov
call
ror
and
jno
push
lods
pop
sbb
xchg
jg
test
mov
cli
mov
out
pop
cmp
out
adc
pop
dec
outsl
in
pop
lods
adc
movsb
push
mov
push
inc
pop
ret
out
addr16
jge
push
xchg
xchg
jmp
movsb
stc
repnz
aam
int3
outsb
xchg
jmp
call
orl
cli
mov
inc
cmpsl
dec
mov
or
lods
test
mov
int3
call
adc
aaa
sub
dec
pushf
jecxz
add
xlat
fcoml
cmp
stos
popa
or
addr16
jb
jge
mov
xor
and
xchg
out
movsl
xor
insb
in
test
roll
jl
insb
sbb
xchg
mov
mov
jo
jb
mov
adc
mov
scas
or
imul
xor
xor
out
sbb
gs
mov
and
mov
ret
ret
sub
and
mov
xchg
fistps
push
or
jg
xchg
pushl
out
or
or
ss
sbb
mov
loop
jl
imul
data16
mov
stos
test
in
fs
mov
mov
into
outsl
jne
sti
dec
xchg
loopne
push
jno
jns
sbb
mov
call
xlat
jg
add
jae
push
jecxz
sbb
xor
test
jo
inc
in
dec
mov
sub
mov
shll
cmpsb
sbb
xor
jbe
sarl
cli
or
lret
jge
test
call
pop
sub
mov
aam
jne
lock
inc
and
inc
int
repz
jbe
stos
frstor
jp
aad
test
xchg
es
mov
cmp
dec
test
jmp
dec
jo
scas
mov
mov
sar
aaa
sbb
xor
xor
dec
imul
pop
inc
inc
dec
rorl
ret
jae
xchg
mov
cmp
inc
add
movsb
data16
add
jne
out
into
js
fwait
dec
sbb
dec
xchg
sti
xor
imul
or
lcall
jmp
nop
mov
xlat
xchg
push
and
int3
and
and
decb
rcr
fsubs
lock
std
inc
sti
jo
shrb
mov
cmp
stos
ror
int
and
mov
add
cld
out
arpl
sub
lahf
jne
lods
outsl
inc
cmp
xchg
orl
inc
sbb
mov
movsb
movsl
jmp
mov
mov
jmp
repz
mov
decl
jp
sbb
inc
mov
insb
inc
orb
cmp
dec
pop
cmp
adcb
lret
xor
leave
jmp
mull
push
cmp
mov
lcall
inc
sbb
inc
xchg
or
nop
orl
fmull
sbb
push
rolb
add
mov
cmc
jae
add
cmpsb
push
in
je
mull
sub
sysexit
lret
das
test
jle
push
imul
mov
pop
mov
cmp
enter
xchg
stos
subl
or
sub
fmull
push
inc
scas
rorb
cld
jl
mov
sti
outsb
scas
xor
mov
cwtl
clc
imul
cmc
mov
fwait
jns
test
nop
fidivl
pop
mov
adc
inc
adc
jnp
inc
cli
fdivrs
jno
add
and
pop
lock
es
ljmp
outsb
xchg
addl
loopne
std
dec
pop
je
pop
repz
inc
int
mov
xor
or
pusha
aam
add
adc
and
or
mov
nop
push
negl
mov
push
add
lcall
mov
lret
xchg
cmc
dec
xlat
fcoms
cmc
or
add
pop
outsb
inc
dec
lods
testb
mov
data16
pusha
rcrl
and
inc
xorb
mov
dec
jns
push
popa
rcr
pushf
loope
loope
pop
dec
dec
inc
and
jmp
dec
jnp
xor
ljmp
push
ret
pop
mov
mov
add
mov
loope
int3
mov
mov
scas
cwtl
mov
mov
pop
push
daa
mov
popa
xchg
and
fists
adc
sub
ja
sbb
loopne
jns
inc
lds
mov
xchg
mov
cmpsb
pop
fs
repnz
dec
icebp
inc
pop
gs
mov
push
adc
mov
nop
mov
dec
lcall
popf
sub
stc
sbbb
push
pop
cmc
mull
xor
das
mov
adc
mov
mov
movsb
daa
cmpb
mov
jp
add
lea
jmp
pop
mov
jns
scas
mov
in
pusha
out
xchg
mov
dec
gs
lods
je
sub
mov
les
pop
sub
jnp
stc
jl
sub
sarb
stos
mov
cltd
or
hlt
ds
lock
pop
pop
jo
gs
out
pop
cltd
ss
mov
jne
jnp
pusha
scas
pop
add
or
stos
out
std
adc
and
inc
loop
push
cmpsl
in
inc
sbb
push
popf
push
jge
sub
pop
out
ret
clc
test
xor
push
fimuls
xor
mov
add
insb
pop
push
jl
jge
adc
rorb
sbb
sar
loop
imul
jbe
js
pop
leave
ficoms
out
cltd
dec
test
ret
mov
push
ja
in
sbb
inc
mov
mov
pop
mov
mov
sub
sbb
mov
push
outsl
call
or
add
jmp
nop
inc
or
xor
test
ljmp
add
add
std
bound
scas
cmp
dec
jns
push
rorb
xchg
sbb
test
inc
daa
lock
lret
rclb
dec
dec
pop
in
sarl
les
and
pop
bound
ja
mov
int
push
out
les
mov
mov
xor
arpl
out
dec
imull
repz
sbb
les
xor
jnp
in
insb
mov
push
jbe
dec
xchg
push
fstl
sub
cmp
add
jmp
lods
jns
or
mov
xor
mov
push
or
pop
sub
in
call
xchg
xchg
arpl
test
in
sbb
lods
in
aas
imul
cmpsl
xchg
in
jmp
fidivs
xchg
das
and
sbb
jmp
mov
push
mov
mov
outsb
jno
xor
pop
hlt
push
icebp
andl
ret
sub
or
and
adcl
mov
clc
aad
data16
icebp
stos
stc
mov
mov
sub
mov
enter
cmpsb
jp
mov
jns
push
cmc
cmpsb
leave
push
mov
aas
or
sub
stc
lods
cmpsl
cmp
adc
je
lahf
cmc
jb
and
mov
adc
push
inc
pop
fs
push
add
pop
das
roll
ret
dec
test
adc
unpcklps
sbb
jne
adcl
pop
out
pop
or
ret
or
into
sub
faddl
negb
xor
aaa
inc
outsl
push
dec
jmp
in
mov
xor
xor
fcmovne
clc
dec
cmp
push
xor
jp
dec
xor
ljmp
lds
fucomip
sub
rclb
imul
pop
sub
lret
fs
pop
pop
mov
or
clc
scas
and
sbb
adc
sub
imul
push
movsl
out
sbb
dec
es
fwait
ss
lds
cltd
push
xchg
pcmpeqd
inc
xchg
idiv
sbb
xor
pushf
mov
inc
xor
fwait
test
adc
stos
cli
mov
sti
dec
vmovups
mov
rcrl
mov
test
push
pop
pop
out
cmp
jbe
fldt
popaw
dec
jnp
js
pop
xchg
movsb
test
sbb
adc
sub
mov
sbb
pop
lods
loope
loopne
pop
sbb
out
rolb
sbb
mov
das
mov
xchg
xorb
dec
add
fidivrs
cli
inc
inc
jmp
xchg
push
popa
xchg
lret
mov
cwtl
sbb
dec
mov
mov
jge
jae
xchg
imul
xchg
aam
adc
stc
and
daa
sub
ljmp
jns
hlt
aam
repz
data16
pop
adc
fistl
addr16
sub
jg
push
fstpt
add
xor
fisubs
mov
xchg
mov
iret
cmpsb
pop
ret
add
popa
arpl
ret
or
push
div
jmp
xor
mov
sbb
or
out
cmpl
or
andb
lods
loope
add
sub
mov
std
xor
mov
dec
sbb
out
sub
push
sbb
cmp
jns
addb
outsb
push
inc
stos
lea
mov
jno
mov
adc
fisubs
mov
int3
repnz
or
cwtl
jb
sub
sub
or
fdiv
add
mov
repnz
cmp
aas
xor
loop
mov
sbbl
rcrb
adcl
lea
cltd
sbb
and
sbb
mov
mov
dec
xor
xor
cmp
mov
add
inc
adc
and
loope
adc
testl
sub
iret
dec
add
insb
jl
push
fstpl
js
pusha
ds
lret
mov
loopne
push
mov
jmp
push
sbb
int
dec
fwait
pop
sub
aas
das
jne
mov
cs
push
leave
mov
mov
inc
jg
negl
imul
mov
dec
inc
pop
and
add
dec
and
and
fwait
and
pop
adc
xchg
sub
xchg
out
pop
mul
cs
mov
mov
fwait
sbb
aaa
cli
push
push
scas
mov
dec
sub
fucom
or
sbb
dec
sbb
dec
ret
lock
push
xor
xchg
pop
push
mov
stos
fistpll
and
cld
loopne
cmp
add
movsb
popf
jle
out
jecxz
lods
xchg
sub
imul
jl
pop
out
jle
pop
mov
insb
xchg
inc
sub
xlat
adc
stos
add
dec
outsb
andl
mov
int3
insl
rcr
jns
dec
pusha
pop
sarl
cmp
jns,pt
hlt
mov
pop
mov
je
fidivrl
mov
pop
or
mov
sbb
mov
call
sbbl
mov
aaa
bound
das
out
xor
popa
outsb
repz
inc
stos
lahf
leave
fiadds
sub
inc
mov
pop
sbbb
jg
dec
pop
push
or
sub
and
ficomps
push
add
and
or
hlt
cli
enter
xchg
dec
push
divb
or
add
js
push
ds
mov
or
add
mov
push
and
jns
xchg
push
mov
in
pop
cmp
hlt
les
fs
dec
pop
fcomi
pop
xor
pop
les
loopne
dec
arpl
aas
rclb
push
cmp
pop
pusha
inc
aaa
jmp
ret
std
lea
dec
lret
rcrb
xor
movsl
add
imul
rcll
and
add
fnstcw
push
jae
mov
out
sar
xchg
insb
cmp
cmpsb
shrb
or
sbb
je
xchg
int
ffree
sarl
add
andb
in
sub
insl
push
and
xchg
adc
iret
pop
jns
xchg
and
adc
cmp
mov
mov
cmp
mov
push
xor
inc
mov
pop
andb
mov
jge
loop
and
stos
outsb
or
dec
insl
mov
mov
lock
xchg
dec
fimull
jmp
cmpsl
cld
sub
repz
lods
imul
test
in
imul
fsubrs
xorb
mov
aaa
mov
imulb
or
mov
leave
mov
jnp
fiaddl
lods
movb
adc
xor
jle
lock
ja
lock
pop
into
test
bound
and
mov
mov
adc
sub
mov
out
cmpsb
psrad
imul
xor
es
int3
nop
push
mov
call
rol
test
outsb
inc
cwtl
stos
sub
lds
outsb
add
inc
mov
das
dec
mov
subb
push
lret
jb
maskmovq
notl
cmpl
fisubrs
ljmp
rol
fwait
arpl
rcl
mov
mov
or
mov
ss
gs
lret
aaa
push
loope
lcall
cli
xor
out
fnstenv
cmp
je
jecxz
sbb
mov
mov
add
cli
and
adc
xor
xchg
jae
jmp
shrb
cmp
add
rcrb
add
pop
fstl
jmp
mov
sub
das
out
cmp
dec
xor
pop
mov
aad
iret
and
or
daa
clc
xor
movsb
fildl
test
mov
dec
pusha
dec
cmp
add
inc
xor
pop
lds
push
adc
flds
push
lds
fsts
xor
mov
add
dec
jl
sub
scas
ja
xor
inc
es
mov
sub
and
push
inc
push
lret
lods
in
mov
jae
mov
add
sbb
and
fs
sub
imul
xchg
or
imul
shlb
xlat
sbb
pop
test
in
das
inc
mov
js
lock
idivl
xor
adc
add
mov
rcl
add
arpl
dec
subl
or
int3
sbb
mov
mul
jmp
xchg
js
dec
pop
mov
loopne
int
sbb
fdivl
data16
cld
imul
or
sahf
xor
shl
pop
sbb
dec
and
and
lcall
mov
and
fs
fistpll
jge
jbe
andl
sbbb
jae
or
xor
fucomi
addr16
ja
xchg
int3
jne
sti
ja
push
xor
xchg
mov
sbb
cltd
sbb
mov
mov
mov
lahf
inc
dec
fdivs
jecxz
in
pop
sub
sub
lea
mov
adc
mov
dec
hlt
pop
mov
imul
pop
lahf
xor
movsl
push
mov
data16
into
push
es
test
cmp
nop
adc
sub
add
xlat
sub
hlt
xorb
outsl
xchg
call
daa
fstps
jo
mov
pop
lcall
insb
jns
mov
push
mov
test
or
je
mov
xor
sti
les
pop
pop
jne
sub
neg
loop
bnd
push
repnz
fsubrs
or
jns
jb,pt
adc
test
xchg
fisubs
scas
pop
imul
jae
inc
sbb
xchg
jbe
push
xchg
push
pop
addr16
or
test
das
je
inc
xor
adc
ret
mov
loop
mov
push
xor
jmp
sahf
or
add
mov
xor
imul
les
lods
test
and
test
sub
mov
shlb
inc
jl
jg
adc
fiaddl
xchg
ja
sub
test
mov
out
cwtl
xchg
xchg
pop
adc
add
jl
andb
add
outsb
fadd
ja
sbb
mov
jmp
add
cmc
icebp
dec
lods
jo
xlat
stos
sub
lea
scas
inc
pushf
aaa
test
mov
test
adc
repz
jle
lahf
cmpsl
mov
sbb
mov
aam
adc
sub
xchg
lea
jecxz
jae
in
and
sub
test
mov
fidivs
repz
leave
cli
loope
push
cmp
sub
fcos
adc
adc
stos
jecxz
pop
movsl
jp
aad
push
inc
cmpl
lock
jno
jge
xchg
push
pop
out
enter
and
inc
push
mov
or
or
je
testl
adc
sub
mov
js
movb
and
rcl
dec
pop
push
and
loope
cmp
sbb
dec
push
mov
push
add
xor
iret
cwtl
aas
hlt
lcall
add
jae
ficomps
push
out
inc
push
addr16
xchg
fld1
pop
mov
stos
dec
add
in
mov
jge
mov
loop
outsb
cmp
mov
xchg
loopne
das
pop
xlat
icebp
sbb
mov
pop
cmp
ret
jmp
pop
repz
pop
xor
lds
cwtl
push
and
sti
sbb
je
adc
das
mov
dec
or
inc
push
mov
xchg
jbe
fdivs
pop
idiv
je
jle
loopne
insl
test
in
mov
cmp
adc
cmc
cli
push
jecxz
daa
rolb
or
test
ds
cmp
sub
push
rcl
mov
mov
cs
push
push
pop
imul
shlb
mov
pop
fmull
mov
int3
inc
ja
xchg
ds
mov
repz
jno
add
xchg
fdivs
dec
jb
jle
mov
sahf
adc
mov
loope
pushf
divb
fldln2
rol
and
lods
cwtl
pop
jle
and
imul
pop
pop
imul
and
insl
mov
icebp
sbb
pop
cwtl
fwait
icebp
mov
int3
bound
shr
inc
loopne
xchg
aam
xchg
loop
loopne
int
mov
and
mov
pop
lea
lods
in
test
pop
and
jae
or
imul
sahf
js
jne
sub
sbb
mov
stos
xlat
js
mov
stc
gs
push
add
jle
mov
lods
pop
cmp
lds
pop
mov
cmp
stos
or
add
or
jle
push
lret
popf
dec
jns
mov
daa
xor
lret
insl
jge
adc
mov
sarl
sbb
lret
cmp
jne
je
inc
pop
push
jns
xlat
jae
js
cmp
int
jo
scas
std
shr
cmp
imul
andb
adc
cli
push
hlt
cltd
xor
in
aaa
movsl
pushl
lahf
jbe
mov
sbb
sti
xor
cmp
xchg
movsl
mov
inc
adc
push
inc
pop
jns
xchg
orb
les
flds
scas
ss
dec
add
sahf
in
pushf
js
jle
clc
out
mov
loopne
ret
in
xorb
aas
enter
xor
bnd
dec
scas
push
aaa
jmp
ljmp
aam
mov
aad
icebp
cmp
lahf
and
ret
cmc
cmp
jb
cmpsb
movsb
in
loopne
js
push
stos
pop
insl
adc
in
sbb
popf
mov
fdivrs
bound
mov
outsb
shrb
movb
pop
push
test
stos
scas
gs
jge
loope
inc
in
sub
cmp
mov
test
dec
push
add
dec
addr16
les
sahf
data16
xor
dec
dec
dec
mov
mov
pop
lds
ficompl
lock
mov
pop
push
mov
loop
nop
repz
movsl
lods
push
fisubs
shlb
imulb
pop
jae
repnz
call
repnz
xor
test
mov
stos
jg
mov
imul
add
and
out
mov
or
xor
xor
sub
ficoms
ret
sub
mov
scas
xor
dec
scas
dec
lock
pushf
add
test
shll
xor
rclb
pop
aam
sarl
call
sub
shll
js
sub
imul
mov
test
sub
mov
mov
pop
xorb
push
or
adc
sbb
cmpsb
mov
jno
sbb
pop
xor
ret
cwtl
dec
hlt
in
fiadds
pop
xchg
jmp
dec
movsb
jmp
sub
or
mov
movsl
jmp
mov
xor
lods
ret
lods
sti
add
dec
xchg
add
xor
xor
xor
inc
adc
loopne
pop
push
cmp
scas
adc
push
add
lds
mov
adc
xchg
adc
mov
mov
in
jb
xor
repz
fdivs
push
inc
lcall
xchg
or
add
int
aam
pop
pop
lea
pop
dec
mov
pop
lret
sub
mov
icebp
mov
test
pmaddwd
mov
lea
add
lods
jne
loope
lods
add
sbbl
in
push
mov
les
mov
fsub
adc
int
add
push
ret
test
adc
lahf
inc
mov
dec
mov
jno
adc
aaa
inc
pop
ss
sbb
and
lret
cmp
dec
jno
shl
xchg
pop
aam
pushf
sahf
je
fwait
mov
sahf
aad
xchg
add
add
loope
pop
adc
fwait
jp
mov
lret
shll
xor
scas
add
cltd
jp,pn
push
in
add
push
loop
dec
scas
or
cmp
fadds
mov
push
sbb
das
das
pop
test
jns
sahf
pusha
and
jg
xor
mov
dec
push
sub
mov
jmp
cmpsl
or
adc
jbe
fdivl
popa
inc
mov
loopew
iret
or
xor
sbb
add
lahf
ds
mov
xor
jp
or
and
sub
inc
mov
ja
add
inc
gs
hlt
stc
lahf
lcall
mov
or
imul
andl
mov
cmp
jno
iret
mov
stc
or
iret
data16
cmp
mov
addr16
mov
push
stc
push
pop
outsl
jmp
pop
xchg
inc
pushf
ret
iret
pop
xchg
dec
ret
mov
sbb
in
fsts
xchg
das
add
arpl
sbb
inc
push
fidivrl
inc
xor
xor
test
lret
outsl
sub
pop
cmp
cmc
mov
inc
push
add
add
inc
loopne
mov
dec
mov
xor
mov
test
mov
icebp
mov
hlt
movsb
loop
mov
push
cmc
cmp
push
mov
adc
clc
push
loop
mov
dec
test
popf
aas
push
xchg
repz
lock
movsb
inc
add
enter
sub
cmp
pop
adc
and
xorl
xchg
xchg
andb
movsl
xchg
ja
inc
sub
and
imul
jbe
inc
pop
cmp
loope
clc
push
inc
mov
loop
sbb
popf
mov
je
fistl
into
cwtl
arpl
data16
mov
enter
mov
inc
scas
xchg
jp
push
cmc
mov
sub
and
adc
ljmp
or
imul
cld
jne
add
pop
xor
adc
dec
or
pop
loopne
shll
jno
fadd
mov
xchg
push
test
data16
mov
mov
push
ret
sbb
jns
out
jl
fsts
pop
aad
stos
xor
lret
shll
pop
sbb
stos
xor
rcr
pop
push
fistpll
pop
outsb
pop
mov
insl
mov
push
mov
repnz
fdivrp
mul
cwtl
mov
imul
adc
cmp
shll
push
fdivs
mov
cmpb
jo
shlb
push
sub
mov
aaa
xor
mov
iret
mov
or
rorb
fcoml
out
inc
sub
incl
lds
xlat
adc
out
aaa
pop
flds
cli
ds
addr16
loopne
mov
mov
mov
xchg
mov
mov
pusha
repz
fstps
sti
push
cld
add
cmp
dec
iret
test
cmp
cld
sub
punpckhdq
pop
inc
mov
lcall
push
xchg
cld
sub
mov
cwtl
outsl
rcrl
int
xor
jl
ror
int3
push
scas
or
fs
es
sub
push
cltd
xchg
mov
pop
cmp
cld
mov
xchg
cmp
and
sti
cmp
es
pop
stc
cld
xchg
clc
std
insb
das
xorl
ret
xorl
cmp
insl
mov
movsl
dec
add
mov
xchg
les
mov
stos
cmp
inc
jmp
mov
fwait
out
and
mov
repz
movsl
sbb
and
out
cmp
int
dec
pusha
dec
popa
out
jle
lock
ret
mov
aaa
sbbl
rcrb
enter
movsl
lods
inc
in
jns
xchg
mov
xor
xchg
pop
scas
inc
data16
mov
out
inc
xor
push
pop
push
inc
add
xor
ficomps
add
dec
fsubrl
inc
or
xchg
jl
jecxz
iret
jecxz
mov
xor
pop
add
push
mov
push
sub
aad
bound
jmp
dec
fcoml
test
fidivs
cmp
pop
imul
adc
gs
cmp
scas
lret
jno
fcoml
loop
pushf
fidivl
or
mov
and
jle
and
pop
rol
jmp
movsb
ret
rcll
fdivs
test
pop
mov
test
in
rcl
cmpb
mov
jge
inc
rcrl
xor
in
sbb
mov
mov
inc
jo
dec
popf
jo,pt
imul
repz
mov
mov
sbb
sahf
call
das
jp
mulb
stc
jecxz
or
sbb
xchg
pop
push
mov
scas
adcb
mov
outsb
scas
inc
jbe
loop
cli
sbb
test
jecxz
insl
ss
mov
pusha
loopne
cwtl
lret
add
jae
cltd
cmp
xchg
mov
movsb
and
icebp
aaa
enter
mov
rcrb
cmp
xor
xchg
sbb
jle
xchg
jle
sub
jecxz
hlt
std
pop
aam
fsubr
rorl
sbb
fmuls
stos
cmpsb
aam
adc
adc
imul
fsubr
loopne
scas
and
jbe
cmp
mov
adc
inc
movsb
lret
cmp
cmp
out
rcl
cs
mov
dec
dec
pop
call
add
push
loopne
ficoml
popf
jb
inc
call
rcr
mov
jge
fs
jb
enter
jecxz
pop
dec
mov
push
cmc
arpl
popf
and
jmp
sub
stc
jmp
mov
lea
and
es
shll
add
jb
outsl
fwait
push
mov
addr16
jp
test
pop
imul
adcl
out
mov
push
loop
arpl
dec
sbb
xor
mov
sahf
iret
or
fistps
mov
add
xlat
arpl
fidivl
repnz
lea
fwait
mov
fmuls
pop
mov
lahf
loopne
cmp
fldenv
outsl
fcmovne
fldenv
xchg
out
fcoms
lods
push
sub
ds
aam
pop
insl
cli
cs
into
aam
pushf
pop
sahf
rcrb
inc
lret
and
jno
dec
lods
dec
mov
fisttps
lcall
mov
add
mov
push
nop
push
xchg
out
push
pop
in
mov
or
cli
cmp
mov
test
popf
aaa
into
mov
in
push
orb
addl
test
stos
adc
in
mov
arpl
xlat
or
mov
jle
mov
dec
and
cmp
mov
mov
int3
aam
fcom
pop
inc
inc
rcr
mov
push
ret
lcall
jnp
jecxz
cmp
pop
or
inc
xor
adc
ds
adc
sub
mov
data16
sti
leave
mov
xchg
adc
jmp
sub
push
mov
mov
rcll
movsl
mov
mov
addr16
sub
dec
push
sbb
out
in
outsb
pop
data16
xchg
daa
fdivs
pop
ljmp
ret
mov
aad
inc
adc
cltd
gs
rorb
nop
push
and
das
cs
negl
rcrb
pop
aaa
xchg
loope
xor
pushf
mov
lret
adc
jecxz
hlt
add
aas
cmpsl
cltd
stc
jg
and
cmp
cmp
pop
insl
ljmp
lret
repz
pop
xlat
notb
jno
push
jl
stos
outsl
cmp
mov
dec
sub
inc
mov
gs
dec
xlat
in
lret
js
cmp
cmp
arpl
outsb
add
aad
cmp
adc
or
add
pop
imulb
leave
pushf
inc
arpl
lods
in
mov
xchg
inc
pop
rclb
imul
adc
pop
stos
mov
loope
sahf
cs
incb
dec
jno
in
dec
movsb
lret
enter
push
dec
in
repz
pop
loopne
negl
sbb
or
pop
lds
adc
icebp
or
mov
and
in
and
les
jbe
add
lcall
insl
mov
ss
dec
jns
dec
shr
dec
pop
dec
leave
rorb
mov
pop
mov
movsb
fcomps
adc
call
shlb
rclb
nop
fldcw
ds
mov
stc
orl
and
repnz
inc
mov
adc
push
cmp
push
pop
ss
sub
xchg
aaa
xor
cmc
dec
stos
sbbb
inc
movsb
xor
pop
popf
movsl
dec
cld
cmp
pop
icebp
in
mov
adc
cmpsb
sbb
cs
mov
jg
xchg
inc
fadds
int
mov
push
test
push
int3
addl
rcll
mov
loop
mov
push
or
pop
add
mov
mov
pop
movsb
pop
popa
xchg
sub
fstl
lret
xchg
dec
cmp
jne
es
dec
push
xlat
sub
lds
or
movsl
xor
and
or
fnsave
push
popf
out
data16
cmp
ret
mov
mov
std
sub
cs
mov
jne
mov
outsl
popf
sbb
je
loop
fwait
rcrb
js
or
pop
lock
jl
stc
cmp
sub
enter
or
dec
fnstenv
mov
and
mov
inc
mov
ljmp
sbb
xchg
movsl
mov
test
lock
lods
test
xor
jns
inc
ja
in
outsl
ljmp
shr
mov
cli
js
imul
jl
lods
iret
movsl
pusha
test
cmpsl
dec
repz
adc
ret
push
ret
scas
loope
and
xor
xchg
lock
data16
push
push
jo
lahf
ss
into
imulb
inc
dec
out
inc
lds
sbb
lds
mov
gs
jmp
orl
fwait
js
inc
dec
inc
mov
cld
adc
subb
push
pop
xchg
push
cmc
inc
enter
xor
mov
or
hlt
push
movsb
lds
add
daa
ret
stos
sti
testl
cmp
jecxz
imul
fnstcw
xlat
out
inc
mov
and
test
cmp
mov
and
les
rorl
push
jno
mov
hlt
test
add
push
xor
lds
adc
pop
dec
pop
sbb
mov
das
and
jl
cmp
cmp
cli
jnp
fwait
jne
in
and
loope
pop
loop
jmp
sub
test
popf
repz
inc
dec
add
and
mov
jle
les
dec
lcall
mov
cwtl
icebp
shr
jns
jne
in
inc
push
sbb
stc
xchg
sar
xchg
std
sub
scas
std
inc
xchg
or
sbb
std
stc
fwait
sti
mov
pop
cld
sarl
mov
stc
pushf
clc
std
ret
sbb
gs
adc
inc
add
ds
pop
hlt
mov
push
sub
std
cwtl
out
inc
lods
sbb
inc
das
scas
xor
mov
inc
mov
dec
in
mov
xchg
pushf
call
leave
std
xchg
adc
pop
or
leave
push
adc
cmp
dec
imul
dec
sub
fcom
dec
jbe
movb
pop
jno
inc
inc
test
stos
fs
jle
mov
aaa
inc
out
dec
mov
or
inc
inc
cmp
nop
add
mov
xchg
mov
imul
add
or
add
inc
add
adc
add
xor
cli
mov
inc
add
add
pusha
mov
add
loope
add
js
jbe
push
pop
popf
add
push
icebp
cwtl
call
rolb
pop
sahf
aam
push
dec
mov
fadd
mov
or
stos
jbe
imul
loope
push
sbb
adc
or
ja
sub
icebp
jb
or
scas
mov
adc
xchg
inc
inc
xchg
sub
loop
push
push
loope
fildll
inc
movsl
rcl
test
pop
sbb
jae
aam
sub
out
jge
or
mov
dec
push
xorl
mov
adc
test
inc
or
add
mov
fnstsw
mov
mul
xor
outsb
bt
call
scas
rep
daa
pop
inc
test
push
cmc
cmc
xchg
xor
inc
into
add
pop
push
imul
int3
jecxz
aaa
test
xchg
imul
xchg
fucom
cmc
or
rcll
aad
js
xor
mov
enter
xchg
es
push
cmp
push
jno
pop
out
icebp
push
mov
sub
add
pop
sbb
lcall
cmc
adc
xchg
dec
jno
or
leave
xor
jns
jmp
sub
shlb
mov
sub
into
inc
je
mov
cwtl
xor
mov
cmpsl
mov
rcrb
orb
loope
ret
into
sub
jecxz
popf
sub
cmpb
cs
lret
jb
jmp
inc
je
in
push
out
insb
mov
int
mov
cmpsb
lea
sub
test
sub
mov
push
jno
dec
dec
or
sar
sbb
pusha
mov
adc
pop
stc
insl
sbb
cs
dec
and
out
outsb
jge
xor
or
adc
cmp
cld
mov
add
mov
dec
aad
adc
mov
mov
sbb
lahf
add
or
stos
jne
push
pop
in
imul
cmpsl
arpl
sbb
mov
adc
imul
cmp
inc
std
scas
icebp
sti
loop,pt
ds
mov
ret
sbb
lods
xchg
leave
and
les
and
outsl
addr16
fistpll
xor
adc
mov
sub
outsl
push
sar
fwait
mov
pushf
loope
mov
mov
stos
push
mov
jae
nop
addr16
push
cmpsb
sub
aaa
cltd
xor
aad
cmc
pop
ss
sbb
xor
iret
mov
and
pop
and
push
repnz
adc
aam
popf
jnp
sbb
jmp
clc
add
movsl
sbbb
cmp
icebp
jne
fdiv
jbe
jb
shll
mov
mov
push
daa
out
add
xor
xchg
loope
dec
xchg
aam
cmp
aam
cmp
je
xchg
mov
loope
push
insl
mov
adc
je
push
into
push
popf
iret
mov
cmc
rcll
sub
mov
jmp
or
fwait
jge
push
push
adcb
leave
repz
outsl
pop
popa
lret
repnz
in
pop
sti
into
mov
repz
ror
ret
mov
in
inc
xchg
sub
scas
push
insl
mov
imul
lock
rorb
push
fwait
mov
je
int3
test
cmp
push
pop
jg
pop
cs
comiss
push
add
pop
xor
testb
jae
fcmove
mov
xchg
fisubl
add
aad
push
bound
mov
and
xchg
dec
gs
cmpsb
inc
push
cmpb
fisubs
mov
cltd
push
ret
mov
scas
mov
enter
fwait
aas
and
rcrl
repnz
in
mov
add
jg
mov
test
nop
int
or
ret
aad
adc
mov
xchg
xchg
add
push
clc
scas
outsl
dec
or
bound
ret
sbb
mov
shr
dec
inc
das
js
pop
ss
pop
std
mov
cmpsb
jo
jns
fiaddl
push
inc
dec
jmp
lret
mov
push
mov
xor
inc
into
sub
imul
lret
sub
int3
fwait
jo
adc
cmpsl
adc
push
or
jo
fcomip
dec
imul
inc
lock
pop
push
jp
icebp
fcompl
jo
pushf
push
adc
call
ja
aad
xlat
xlat
cmc
adc
shll
lods
xchg
pop
and
cmp
or
adc
int3
std
sub
cmp
push
xor
lret
jge
sub
cmp
inc
mov
mov
jg
add
pushf
add
mov
insb
stc
jnp
xchg
jle
jne
cmc
repnz
fs
pop
inc
pop
out
je
gs
out
adc
dec
das
into
sub
push
pop
pushaw
mov
mov
shlb
in
mov
in
push
add
ud1
push
orl
add
lock
ss
imul
add
ret
sahf
mov
fdivr
xor
inc
jp
js
ret
push
pop
push
mov
ljmp
jne
je
jns
dec
addr16
sub
inc
pop
mov
sub
out
mov
cmp
outsl
dec
inc
dec
add
sbb
mov
lret
jg
mov
or
pop
sbb
lret
movsb
fs
xor
std
shll
jg
push
aam
aas
out
push
fmull
ljmp
sub
mov
inc
jnp
leave
mov
jmp
add
pusha
pop
cmc
loopne
divl
dec
pop
cmp
iret
shrb
mov
xor
ljmp
push
ja
scas
cmp
pop
dec
mov
inc
push
les
cmpsb
mov
imull
and
cmc
adc
movsb
jl
ror
xchg
or
arpl
fs
push
or
addr16
mov
lds
jnp
dec
add
rcrb
mov
into
mov
sbb
daa
fiadds
push
xchg
hlt
inc
js,pn
jnp
iret
inc
pop
sub
das
mov
test
jecxz
mov
icebp
shlb
adc
std
mov
pop
push
or
cli
clc
into
jecxz
jge
mov
sbb
cmpsb
ficompl
mov
push
jl
out
fcoml
push
jp
clc
aas
mov
stc
mov
rcrl
dec
nop
jp
sbb
mov
out
loop
ja
add
cmp
subb
loope
jle
pop
pop
sbb
lahf
in
cmp
aad
pop
std
aam
push
xor
sbb
popa
add
mov
and
xlat
leave
loop
shlb
enter
ss
sbb
sub
les
push
inc
pop
cmpsb
stos
ret
stos
push
and
loop
sarl
add
jp
into
outsl
mov
imul
cmpsl
and
jle
jnp
dec
gs
xor
pop
popf
pop
jle
rcr
sbbb
mov
mov
int
mull
lock
mov
xchg
cmp
mov
adc
or
stos
mov
in
sahf
pop
out
mov
dec
jmp
cltd
testb
aad
ffreep
mov
jecxz
sti
ret
add
mov
ds
popf
xor
sbb
insl
jo
mov
div
adc
and
inc
sahf
mov
inc
jo
inc
xchg
cmpsb
mov
rorb
hlt
fnstsw
adcl
repz
fdivp
mov
mov
mov
fwait
mov
les
mov
cli
in
jnp
insl
push
sti
ja
or
push
pop
test
outsl
imull
jns
jle
xor
pop
aaa
push
mov
xchg
scas
ret
jae,pt
daa
jp
negb
add
fdivrl
jp
fmul
cmp
in
xchg
rcr
cmp
pop
into
jl
mov
mov
int3
push
mov
pop
push
mov
outsb
je
mov
mov
mov
jbe
pop
jecxz
mov
aam
pop
ret
out
dec
add
cmp
insl
pop
fidivs
mov
mov
enter
jecxz
scas
aam
xor
lcall
movsl
pop
xor
lahf
dec
xchg
les
lcall
xor
test
insl
test
fldcw
add
in
cmp
xor
imul
push
enter
add
jg
call
dec
popl
clc
shll
ret
cli
pop
or
cmp
scas
mov
mov
sub
sbb
dec
pushf
into
push
adc
je
notl
hlt
push
stos
cs
aam
mov
sub
decb
sbb
sbb
repz
mov
cli
out
arpl
cmp
mov
push
subb
lock
fs
arpl
mov
insl
or
cmp
inc
imul
push
dec
sub
sbb
out
add
dec
mov
cmc
fsubs
or
jns
jae,pt
call
xorb
mov
ds
repz
data16
popf
pavgw
jbe
add
lods
push
xor
sub
mov
icebp
jo
test
mov
xor
insb
lea
sarb
and
cmp
test
jns
pop
rolb
sub
leave
xor
pop
ljmp
xor
repz
into
icebp
mov
xchg
xchg
aam
aad
mov
pop
mov
pop
mov
sbb
pop
ret
xlat
stos
les
inc
sarb
loope
bound
mov
popa
or
mov
jo
and
fmull
mov
fisubl
stos
ljmp
out
xor
jne
mov
clc
lret
pop
mov
mov
insb
push
cwtl
lret
inc
sahf
dec
mov
mov
dec
inc
popf
push
cmp
xor
in
faddp
and
cs
dec
clc
rorl
sahf
sbb
or
in
les
popa
pop
sbb
inc
inc
sbb
mov
div
push
cmp
dec
ror
leave
dec
xor
sub
sub
mov
and
and
inc
aam
sbb
cmp
loopne
int
call
cmp
cmpsb
inc
rcll
dec
scas
pop
enter
aam
or
mov
jle
roll
sub
cmp
aas
mov
popl
adc
jge
mov
xchg
mov
push
mov
in
add
cwtl
xchg
dec
inc
xor
andl
in
aas
add
jne
pop
lds
das
inc
jge
daa
loop
or
rclb
clc
sub
jo
and
ret
shlb
hlt
add
dec
mov
cmp
fs
push
or
nop
jecxz
or
adc
jo
test
sti
xorb
mov
and
fwait
cwtl
xchg
mov
cld
cmc
adc
mov
pop
jge
sub
jl
fbstp
dec
cmp
push
into
pop
push
ret
mov
addr16
xchg
push
inc
insb
adc
inc
xor
xor
push
cltd
iret
scas
sbb
pop
lock
fsubrl
mov
nop
or
xchg
scas
mov
into
cmp
cmp
inc
fcos
mov
int3
or
out
roll
lods
std
fldcw
divb
mov
mov
stos
test
jb
mov
imul
xor
hlt
jle
popa
pop
add
sub
negb
mov
dec
mov
andl
pop
jno
xchg
rcrb
out
lret
mov
cmpsl
xorl
inc
ds
add
push
addr16
das
inc
ds
cmp
ljmp
mov
cmp
dec
and
jne
pop
jmp
aad
push
jno
cmp
push
xchg
loopne
fwait
rcr
pushl
jne
adc
jp
test
xchg
mov
popa
adc
fdivrl
sub
loopne
mov
popf
outsb
inc
outsl
shlb
jnp
mov
jb
cltd
call
xchg
jne
jle
cmp
add
movsl
cwtl
stos
xor
cwtl
or
sub
sbb
mov
jnp
sbb
dec
inc
mov
fs
daa
mov
lock
push
jae
jp
out
xchg
adc
fcmovnbe
push
pop
addb
scas
mov
or
add
xchg
faddl
push
xchg
dec
adc
xlat
sbb
jp
dec
lds
test
mov
sbb
mov
js
loop
and
lods
xor
mov
and
fldenv
mov
lahf
add
push
inc
cli
and
xchg
inc
cltd
xchg
arpl
cmp
ds
cmpsb
inc
and
cltd
loop
orl
hlt
add
mov
push
push
js
repz
xchg
in
push
mov
pop
xor
xor
popl
hlt
jge
xor
pshufw
pop
sarl
sbb
inc
loope
mov
add
cmp
xor
imul
adc
jmp
mov
movsl
lahf
xchg
jmp
jae
and
jo
mov
fdivrp
sahf
sbb
movsb
leave
cwtl
mov
dec
ja
mov
pop
mov
adc
clc
loope
sbb
popf
adc
lock
stos
sbb
mov
push
jns
rclb
call
inc
enter
xchg
add
jo
fiaddl
add
jnp
faddp
pop
sarb
xor
into
mov
adcl
add
iret
inc
imul
or
movsl
aam
mov
lcall
iret
pop
ret
pop
frstor
jmp
pop
mov
inc
loop
dec
or
mov
adc
neg
imul
insl
mov
sti
jg
inc
shl
movsl
xor
xor
mov
sub
adcb
mov
fidivs
sub
pop
stc
mov
fidivl
dec
loop
dec
jmp
fsubrl
or
mov
int3
add
mov
cmp
shll
lea
jno
mov
aaa
pop
mov
xchg
cmpsl
push
mov
push
xchg
push
popa
push
cmpsl
xor
pop
pop
xchg
shrb
popf
dec
mov
pushf
or
movsb
call
ljmp
test
in
sub
jno
xlat
lcall
andb
andb
mov
mov
xchg
fildl
pop
jbe
sbb
add
repnz
nop
dec
jne
adc
jmp
cmp
fwait
dec
out
adc
popa
adc
aad
jmp
loopne
mov
push
mov
lea
cld
fs
cs
pop
or
outsb
dec
mov
lea
lret
es
je
mov
fsubl
mov
xchg
cmpsb
dec
outsl
aas
out
pop
cmp
sbb
jmp
ds
scas
imul
jno
dec
fisttps
lahf
add
push
mov
aaa
shll
sbb
xchg
xchg
xchg
loop
inc
add
jge
js
add
mov
in
pusha
mov
push
lods
pop
lock
pop
hlt
pop
insb
in
scas
dec
fsubr
sarl
sbb
jge
pop
mov
mov
adc
dec
movaps
inc
fidivl
mov
test
or
mul
in
pushf
push
out
addr16
sbbl
out
leave
in
adcb
mov
sbb
into
test
push
pop
fistl
icebp
xchg
jns
insb
hlt
pop
loop
inc
repnz
xor
clc
aaa
sti
jne
aam
out
scas
and
leave
and
sbb
cmc
sub
xchg
or
out
xor
or
lock
push
cmc
ss
cmpsb
mov
test
push
leave
ret
jp
aam
repz
xor
add
pushf
lods
push
jmp
dec
or
add
shrl
xor
dec
out
movsl
test
inc
dec
hlt
lods
add
bound
sub
inc
mov
or
or
xor
sbb
mov
stc
aas
sbbl
sub
dec
aad
mov
push
pop
lahf
pop
fstps
sub
scas
add
add
jle
fstp
xchg
mov
lods
inc
pop
push
add
cld
inc
fdivrs
xor
cmpsb
jb
cmp
mov
bswap
rclb
sbb
sub
sbb
jnp
rcl
pop
xchg
daa
js
shrl
xor
mov
jp
sub
jnp
std
mov
push
mov
pop
push
mov
pop
scas
inc
rclb
or
and
ds
add
adc
cmpsb
inc
xor
leave
fbld
movsb
out
mov
pushf
jnp
or
out
scas
outsb
inc
push
dec
fisttps
cmp
sti
test
xchg
sbb
cmpsb
cltd
xchg
push
xchg
data16
mov
scas
xor
js
and
jecxz
test
xchg
arpl
loop
in
push
movsb
push
jle
cmp
mov
sbb
lahf
dec
adc
add
notb
lods
mov
xchg
add
sahf
jne
outsl
aam
popf
xchg
sub
push
test
cmc
js
pusha
fsubrs
sub
fisubl
lcall
nop
jp
cmp
in
dec
xchg
enter
xor
add
dec
mov
loop
movsb
bound
iret
pop
xchg
mov
iret
jge
cmp
icebp
in
xor
jg
inc
xchg
loopne
inc
jae
cmp
jae
rcll
pop
mov
xor
loopne
xor
jp
cmp
loopne
leave
stos
clc
test
imul
mov
sti
adc
sti
dec
icebp
or
adc
and
push
pop
fldl
out
xchg
dec
push
inc
mov
test
add
mov
pop
mov
in
inc
lea
mov
lret
fisubrl
pop
or
dec
xchg
cmp
movsb
xor
in
out
rolb
nop
cmp
leave
imul
shrl
push
inc
imul
pushf
dec
xchg
mov
or
into
sub
jo
dec
push
mov
sahf
pop
outsl
sub
and
pop
pop
jbe
cmpsb
push
cltd
pop
ss
pop
cmp
mov
test
test
loopne
popf
imul
push
mov
xchg
adc
fucomp
out
inc
xchg
fcmovb
loope
xchg
jmp
jg
xor
sti
cwtl
insl
xor
sbb
push
scas
xor
lret
popf
or
outsb
cmp
ds
xor
mov
daa
test
mov
sub
jmp
xchg
fwait
in
sbb
arpl
cmpsb
push
sub
int3
push
lcall
rcrl
lock
addr16
fdivl
jge
adcl
push
jbe
mov
mov
jo
inc
push
mov
mov
addr16
xchg
sbb
out
dec
fisubrl
fidivrl
xchg
rcrb
pop
movsb
sub
jbe
in
mov
lds
sbb
jle
lret
ss
mov
cmp
jns
jb
adc
adc
sub
loop
call
push
repz
inc
stos
fcomip
xchg
pop
mov
imul
iret
sbb
test
adc
inc
test
jp
int
mov
call
lods
je
sysexit
into
lfence
fimull
push
cmp
iret
lret
mov
cmp
push
adc
jg
cmp
mov
in
mov
fsub
aaa
lea
sbb
into
jne
and
cmp
push
push
shlb
fldl
fmull
dec
pop
mov
je
mov
mov
jecxz
test
jle
cmp
iret
mov
xchg
sub
ljmp
fyl2xp1
lds
ja
test
mov
xchg
sub
pop
std
mov
and
out
ds
aam
sub
es
daa
mov
jmp
cmpb
mov
ja
adc
dec
cmp
push
mov
push
shr
fistpll
mov
jmp
cld
dec
filds
dec
ljmp
push
js
lcall
lret
inc
push
stc
shl
push
sahf
cli
in
xchg
es
xor
fidivs
test
sbb
sarb
in
mov
js
and
outsl
and
and
js
jo
outsb
repz
ljmp
mov
aas
int3
mov
popf
gs
sub
jno
push
fs
and
and
cs
outsb
mov
test
fwait
mov
sub
cmp
pop
sbb
imul
dec
mov
adc
jecxz
pop
jns
xlat
iret
xor
imul
sbbl
mov
xlat
divl
das
pop
stos
pop
inc
push
and
nop
fs
dec
pop
iret
ljmp
mov
test
in
mov
push
adc
xchg
jno
pop
inc
add
xor
xchg
into
imul
rolb
outsb
ljmp
pusha
lahf
mov
popf
lret
jge
jmp
insb
cmp
rclb
pop
por
dec
aam
loopne
lcall
and
lods
test
sbb
mov
mov
addr16
add
pop
loop
out
push
xchg
iret
mov
jns
push
stos
adc
sti
push
jge
sub
sbb
xchg
pop
sub
cmp
mov
mov
stos
mov
inc
lgs
xchg
push
xor
aam
ds
and
outsb
or
add
popf
pop
test
pushf
mov
or
cli
mov
dec
nop
inc
cld
stc
and
xor
scas
call
mov
push
pop
jmp
push
ss
mov
mov
out
loop
aam
xor
int
push
xor
icebp
je
pop
mov
add
hlt
add
and
cmp
inc
push
jnp
jecxz
out
jp
rclb
pop
adc
sbb
xor
das
fldl
daa
adc
mov
dec
adc
dec
push
sub
sub
aad
mov
movsb
insb
xorb
leave
lods
dec
mov
out
push
loopne,pn
xchg
lods
arpl
adc
shll
sbb
jle
pop
inc
dec
psllq
gs
rcll
mov
in
xlat
int3
pusha
xor
cmp
lods
repnz
or
stc
movsl
and
adc
cmp
sbb
stos
xor
dec
and
push
in
push
push
jl
jl
faddl
negl
inc
sub
mov
mov
dec
cmp
into
or
mov
scas
lods
and
adc
push
insb
xchg
stc
dec
inc
jl
adc
sti
roll
lret
movsb
mov
iret
out
xor
jg
cmpsl
fwait
mov
loope
mov
out
cmp
out
pop
sbb
repnz
fs
movswl
mov
adc
rorl
inc
test
out
mov
enter
sbb
jp
sbb
into
inc
movsb
repnz
jns
mov
sub
dec
adc
dec
in
push
sarl
aaa
test
add
loope
pusha
adc
out
dec
pop
daa
jae
lcall
icebp
jno
cmp
or
mov
cmp
ljmp
mov
dec
pop
dec
int3
mov
push
push
mov
arpl
cld
jl
mov
mov
mov
mov
xchg
outsb
scas
cli
dec
xor
je
push
adc
cwtl
sbb
add
cltd
sub
mov
std
int3
cmpsl
fsubl
push
rcr
adc
cli
mov
jecxz
xchg
outsb
outsl
cltd
in
fildll
shll
sbb
dec
and
pusha
gs
mov
enter
mov
pushf
sub
xlat
cli
sub
leave
xor
lock
push
jge
mov
cmp
mov
or
and
cmc
in
or
xor
jne
jecxz
inc
dec
dec
ds
inc
ss
push
adc
sub
aam
es
lret
and
adc
xchg
loope
mov
lea
lods
fs
ja
push
inc
std
jno
cld
xlat
call
lods
dec
js
or
cwtl
adc
test
jb
mov
loope
pop
daa
mov
xchg
lret
add
mov
andb
sbb
or
cmp
sub
mov
rorl
sub
inc
adc
mov
ljmp
hlt
ret
stc
mov
in
dec
loopne
and
sub
clc
adc
xchg
cmp
loop
lcall
jo
pop
add
or
xchg
inc
stc
in
cmp
pop
aad
stos
pop
sub
adc
into
cmp
fldl
sub
xor
sbb
ss
bnd
push
shrb
dec
mov
and
negl
inc
inc
mov
xor
adc
push
xchg
addr16
mov
add
call
xor
stos
mov
jp
pop
or
xchg
push
push
fisttpll
shll
mov
inc
cmp
fdivrs
xchg
outsb
jl
fisubl
mov
mov
sarl
pop
ss
stos
fbld
out
es
adc
pop
lock
nop
cltd
cmc
lea
pop
aad
mov
fxch
pop
jmp
dec
dec
clc
cmp
sbb
out
and
sub
arpl
jnp
call
loope
movsb
add
or
add
decb
sbb
sub
add
je
xor
jle
insl
dec
jno
dec
loopne
lock
xor
test
jle
lds
sbb
pop
xchg
push
sub
push
lret
imul
leave
push
pop
xor
sbb
jg
sbb
notl
out
mov
sar
enter
mov
fcmovnbe
mov
inc
fidivs
stc
dec
dec
or
mov
adc
sbb
loope
push
lret
add
lods
call
sti
pop
lds
pop
dec
adc
push
sbb
lea
dec
push
xchg
enter
xchg
sti
adc
loopne
adc
dec
inc
pop
les
sub
sbb
jne
cwtl
es
sbb
mov
inc
jge
int
xor
cli
or
add
fcmovbe
jo
lods
dec
mov
sub
fs
xchg
inc
sbb
sub
push
push
pushf
movsb
push
sub
fnsetpm(287
xor
cld
push
dec
mov
insl
pop
add
push
jo
out
loop
push
loopne
test
ljmp
bound
cs
dec
pop
jno
sbb
sarb
or
push
add
sbb
cwtl
jge
mov
push
sahf
pop
jg
lret
cld
adc
in
repz
addr16
test
fs
xchg
pop
dec
out
push
mov
lret
lret
mov
xchg
mov
mov
in
or
fcmovu
test
xchg
add
dec
icebp
sub
outsl
test
push
shll
adc
and
loop
inc
xor
xchg
loopne
mov
push
in
mov
loope
xor
lods
dec
repz
mov
loop
mov
pop
xor
or
mov
jg
call
ret
xor
xlat
xor
jo
add
aad
cmp
and
push
xor
enter
in
mov
or
and
pop
lods
push
call
in
icebp
and
mov
ja
icebp
push
cmp
or
inc
pop
jno
and
nop
outsb
dec
dec
lret
push
orl
fcomps
ds
enter
stc
shrb
inc
inc
fs
mov
movsb
filds
add
nop
movsb
or
ds
outsb
outsl
push
in
add
jl
jmp
sbb
lahf
hlt
outsl
sub
sbb
lcall
or
dec
xor
dec
pop
jg
int3
xchg
lock
pop
cmp
mov
in
push
idivb
sbb
vmread
mov
mov
stc
push
pop
out
xor
pop
fmuls
xlat
push
jg
add
pushf
loope
push
andb
aas
mov
jb
cld
out
testl
movsl
outsb
les
lods
mov
addr16
lods
push
inc
dec
cmc
jge
test
rcll
xor
dec
mov
pop
pusha
arpl
add
shrl
dec
or
aas
push
fwait
mov
stos
out
fildl
int3
cmp
xchg
or
arpl
fists
or
mov
cmp
mov
bound
in
sub
adc
xchg
or
pop
addr16
push
add
daa
push
out
call
mov
add
sub
jmp
jge
mov
jmp
ret
lret
mov
shl
add
insl
insl
xchg
pop
inc
xchg
push
ss
fcmove
dec
or
test
imull
mov
xor
int
mov
cmp
and
nop
xchg
sbb
jae
mov
pop
ret
jl
es
test
test
enter
scas
lahf
sub
sbb
inc
std
push
js
jmp
fmuls
mov
push
and
mov
mov
xchg
ss
fwait
mov
jns
xchg
out
sarl
loope
xchg
or
jae
ss
mov
pusha
imul
inc
push
cmp
loopne
xor
dec
pop
jbe
pop
inc
icebp
or
cmp
cmc
pause
mov
mov
ss
inc
jnp
and
sbb
mov
mov
pop
adc
sbb
ds
cwtl
fstl
aas
daa
lahf
loope
mov
add
xchg
jo
sub
std
sahf
xchg
fldcw
fs
subl
inc
add
push
add
xorps
or
daa
jecxz
lods
mov
lret
xor
subl
cmc
sub
xchg
mov
popf
xchg
rcrb
inc
add
xchg
loopne
mov
ret
arpl
lret
sub
jns
aam
xorl
push
sbb
orl
movsl
outsb
cmp
jl
out
xor
inc
or
and
aaa
pushf
nop
mov
push
mov
in
dec
add
test
mov
pop
sti
jle
jg
pop
test
test
out
dec
sti
fnstcw
sbb
sti
or
gs
pop
mov
rcll
push
loopne
icebp
imul
mul
insl
jecxz
dec
push
out
cmp
rclb
dec
mov
jno
push
lods
cli
mov
fists
pop
fadds
mov
aaa
out
and
jno
push
and
popa
mov
test
pop
push
or
shlb
lea
divl
or
xor
divb
push
sub
sahf
xlat
sbb
cmp
dec
or
imul
xor
lds
cltd
jne
or
sub
cmpsl
popl
mov
loopne
lcall
sbb
mov
push
lret
sbb
idivl
loop
fwait
mov
or
mov
in
mov
rep
mov
pop
dec
clc
cmpsl
pop
and
or
mov
push
and
pop
rorb
int
pop
inc
jg
mov
pop
in
add
in
push
or
xchg
sbb
fwait
jb
pop
cltd
cltd
dec
enter
out
iret
stos
fidivrs
pop
jp
jb
pop
xor
fsubs
stos
inc
fstpl
arpl
daa
pop
loopne
fcoms
scas
rclb
mov
lahf
xchg
mov
cmp
ss
sub
sbb
and
clc
and
pop
out
add
push
pop
loopne
cmpsl
mov
dec
xchg
mov
test
call
fs
cli
cmp
inc
inc
jmp
pop
mov
cmpb
in
aaa
xor
test
lret
sbb
push
outsl
jbe
adc
inc
movsb
sub
stos
or
mov
je
mov
repz
and
xchg
lds
stc
je
push
sub
adc
ret
scas
xor
pop
idivb
fcmovne
adc
inc
pop
sub
pop
in
adc
and
popl
dec
arpl
lock
aam
out
xchg
pop
popa
rcrl
test
sete
cltd
mov
loop
movsb
fmuls
mov
fidivs
mov
mov
adc
pusha
jle
dec
push
cmpl
fwait
inc
jno
add
call
pop
aas
rcll
pop
push
sarb
lret
imul
lock
or
fwait
adc
pop
mov
adc
jge
push
mov
popl
cli
push
xor
fs
mov
pusha
sbb
mov
dec
mov
mov
xchg
adc
insl
popf
or
cs
fs
loopne
ja
pop
pop
adc
fldt
mov
loope
test
sbbl
popf
mov
cmp
sti
xor
fisubl
mov
std
dec
pop
into
dec
in
jne
mov
inc
sub
ret
inc
mov
out
cmp
and
out
inc
arpl
inc
out
rcl
xlat
push
xchg
gs
popf
lret
aas
stc
fsubrl
xchg
mov
scas
imul
scas
fwait
mov
pop
xchg
and
mov
pop
jnp
cmpsl
cmpsb
and
iret
xor
nop
mov
rorb
or
or
jno
loop
inc
in
shlb
jg
bound
jmp
jecxz
mov
jb
js
mov
xlat
iret
dec
jp
or
pop
les
pusha
cmc
push
lock
adc
ja
xchg
enter
xor
scas
pop
imul
adc
xchg
mov
sbb
cmp
aaa
mov
pop
xchg
jno
sbb
pop
pop
sub
testl
int
sub
loopne
jp
and
test
pop
movb
outsl
pop
push
mov
aas
sbb
fld
lcall
lret
sbb
add
xchg
data16
sbb
sti
mov
xchg
out
xchg
adc
mov
bound
in
sub
out
shrl
out
push
mov
ja
inc
or
and
aam
xchg
aad
pusha
sbb
lods
mov
xchg
mov
mov
or
dec
aam
or
shrl
sbb
mov
or
movsb
mov
popa
fucomi
rcl
jecxz
add
rol
iret
int
mov
xchg
adcl
pop
ja
bound
les
mov
cmpsl
cmp
pop
mov
xor
decb
test
aam
dec
in
les
es
sbb
dec
or
arpl
adc
pusha
mov
popa
pop
jnp
outsl
not
pushf
jne
popa
xchg
pop
fwait
jns
loop,pn
add
clc
mov
inc
cltd
lods
popf
jge
sbb
rcll
xchg
pusha
push
mov
int
push
iret
cs
jne
icebp
insl
call
mov
xor
sti
cmpsl
and
rcl
push
ja
and
dec
mov
xchg
jge
mov
or
loope
insb
loope
dec
outsl
stc
xchg
in
test
incb
jecxz
cld
and
arpl
jmp
or
dec
imul
cmp
lods
in
cmovg
ljmp
adc
mov
jp
aas
xchg
popf
mov
outsl
insb
cmc
enter
mov
das
mov
aas
sbb
xchg
gs
test
sbb
pop
and
push
out
jl
dec
mov
mov
leave
dec
outsl
fwait
mov
sbb
scas
mov
sub
cmp
ja
mov
sub
pop
pop
xchg
loope
dec
repz
mov
or
sahf
add
das
jbe
jae
addr16
rclb
dec
xchg
mov
inc
scas
lock
bound
mov
add
push
jne
xchg
ljmp
lahf
or
lea
xchg
add
popa
xor
leave
int3
fsubl
jnp
jno
int3
call
mov
push
dec
aas
cs
inc
sub
pusha
filds
pushl
call
inc
jo
out
sub
sub
imul
push
sub
push
shr
or
inc
pop
cmp
adc
insl
loop
mov
movsb
fistpll
xor
push
push
fstps
es
jns
push
and
int
and
pop
scas
fldcw
fists
scas
and
shll
lcall
in
cmp
dec
sub
mov
sbb
lret
inc
loop
mov
xor
cli
aas
call
xor
sub
out
push
mov
fisubl
mov
cltd
inc
mov
das
xchg
fimull
mov
into
shrb
and
jmp
and
jp
jmp
xchg
jns
int3
push
stos
xchg
aas
xchg
mov
pusha
xchg
pop
sahf
or
inc
rep
jo
ret
jmp
xchg
mov
ret
jmp
scas
cmp
or
lea
out
mov
sbb
in
testb
jl
fst
adc
les
nop
jp
int3
sbb
setae
cmpsl
adc
dec
dec
test
pop
cwtl
or
bound
jmp
and
add
or
call
add
pop
inc
adc
xchg
inc
and
gs
mov
inc
test
cmp
loope
ret
rcll
cmp
inc
pop
sbb
mov
push
sub
mov
mov
pop
sub
pushf
lea
xor
es
cmpsb
enter
sub
aam
pop
jae
mov
xor
stc
add
pop
sub
icebp
je
out
fistl
xor
ljmp
sub
cmp
outsl
or
dec
loop
shll
inc
cmp
fstps
sbb
inc
lret
addb
loope
out
adc
cli
sub
imul
push
mov
jns
test
lahf
sub
push
mov
push
std
xchg
cld
out
xor
dec
movsl
pop
push
cld
sub
test
imul
int3
dec
push
cld
clc
sub
or
icebp
dec
sub
rclb
jmp
add
dec
loope
jb
dec
mov
les
daa
sahf
push
cmpsl
sti
cmp
test
pop
fidivs
cmp
lret
mov
sub
enter
vmread
jle
mov
dec
cmc
ja
pop
fwait
mov
arpl
rcl
xchg
aaa
nop
or
mov
mov
shll
cmp
cltd
je
or
lods
test
dec
adc
mov
dec
shrb
iret
in
in
sti
imull
inc
mov
fwait
and
insl
addl
cmp
sub
out
leave
xchg
into
hlt
cmp
std
push
pop
sub
dec
cmc
jbe
push
inc
mov
add
inc
popa
insb
xchg
jbe
jl
cld
or
and
mov
or
pop
sbb
pop
push
jp
cmp
lret
lock
vpaddusb
or
xchg
jno
dec
aas
mov
shll
cmp
inc
div
dec
daa
stos
sbb
dec
jle
jle
mov
push
fs
test
mov
in
xor
xchg
and
push
outsb
mov
push
push
mov
xchg
je
jbe
push
mov
cmpsb
icebp
mov
out
sti
arpl
jmp
arpl
sahf
pop
stos
push
lret
imul
mov
cmc
fs
testb
aam
jge
gs
repnz
push
inc
bound
and
pop
mov
out
push
andb
andl
scas
out
sti
ret
lods
js
ret
jne
mov
mov
dec
cmpb
stos
add
pop
or
pusha
inc
lods
shl
mov
cmp
lcall
mov
mov
adc
sub
inc
inc
aad
movsl
stos
call
jg
mov
out
cmpsb
mov
stos
add
adcl
mov
jecxz
push
stos
xchg
inc
sbb
jo
std
inc
loope
pop
mov
mov
aas
xchg
xchg
repz
mov
mov
jno
mov
in
cmpsb
es
lret
mov
mov
jecxz
sbb
cmp
test
icebp
and
push
int
pushf
sub
loop
fdivs
nop
add
cwtl
popa
sbb
sbb
inc
adc
sbb
jns
in
sbb
adc
xor
mov
call
adc
sub
mov
inc
je
mov
jb
mov
xchg
xchg
cwtl
and
xchg
dec
aas
fwait
push
cmpsb
mov
pop
out
adc
or
jl
push
negb
outsl
ret
sbb
cmp
push
ret
xchg
pop
cmp
push
cld
lods
jns
mov
mov
ds
jnp
imul
cmp
fcoml
fidivrs
cmpl
clc
pop
test
fiaddl
scas
xchg
out
jae
or
mov
clc
rorl
inc
iret
mov
addr16
jg
rorl
adc
adc
imul
push
dec
adc
cmp
and
das
frstor
in
rorl
xchg
pop
push
aaa
lods
xor
cwtl
adc
data16
cld
data16
addr16
mov
and
int3
push
add
sub
xchg
sbb
cmp
in
ret
addl
les
mov
dec
dec
in
adc
fisubrl
lea
frstor
clc
and
sub
outsb
jle
pop
sbb
sbb
stos
add
dec
fs
lret
sarl
mov
xchg
mov
dec
jge
push
mov
pusha
lahf
jp
mov
bound
setl
cmp
lret
rol
push
ja
mov
xchg
push
call
out
dec
ficompl
mov
or
lods
pusha
sub
jecxz
push
jae
pop
gs
popf
mov
fsubp
and
and
adc
mov
jno
rorb
popa
pop
adc
je
inc
dec
mov
cmp
inc
push
movsb
push
sbb
xor
out
shlb
addb
pop
xlat
jg
movsb
push
aam
addl
imul
or
icebp
dec
fimuls
pavgb
and
movsl
notl
xchg
rorb
and
cmp
push
ljmp
mov
jae
loope
jnp
mov
pushf
sbb
dec
popa
subb
pushl
jl
xor
sbb
out
sahf
push
dec
lods
push
cwtl
fldcw
and
sbb
std
adc
shrb
sbb
sbb
dec
mov
xor
xlat
xchg
je
mov
adcl
std
mov
mov
push
mov
adc
fistps
mov
movsl
movsb
xorb
xchg
lahf
adc
arpl
jae
popf
test
fs
mov
movsl
push
in
int3
xchg
cmp
cs
fnstcw
pop
lods
es
dec
das
aaa
leave
scas
les
pop
imul
dec
stc
scas
xor
decl
jne
imul
ljmp
test
call
sbb
stos
inc
scas
jb
adc
pop
mov
cs
int
insb
adc
xchg
sti
jmp
mov
xor
jo
scas
inc
lahf
cltd
out
sub
jmp
jns
je
mov
pop
dec
leave
cmp
cmp
outsb
jge
cmp
jp,pn
repnz
std
aas
cmpsb
xor
push
xor
lods
mov
icebp
sbb
pop
fildll
fcoml
fbstp
adc
out
popf
scas
pop
xor
sub
call
repnz
fldl
xor
pop
out
cmp
inc
xchg
mov
cmpsb
xchg
insb
adc
xor
insb
out
inc
pop
loope
mov
jl
in
add
push
ds
and
or
sbb
push
jnp
insl
jmp
and
jp
sub
je
lret
repz
xchg
mov
imul
mov
sahf
insb
jnp
clc
push
pop
pop
bound
daa
stos
into
dec
mov
jno
ret
push
out
mov
popf
bound
cld
fsubrs
push
subl
sti
jmp
pusha
cltd
or
inc
xchg
mov
jle
rcrb
mov
jns
aad
mov
and
repnz
and
inc
ret
arpl
in
testb
mov
js
xchg
hlt
imul
pop
cwtl
jbe
in
mov
inc
mov
lcall
fbstp
push
mov
sti
and
dec
sarl
loope
cltd
in
inc
xor
mov
daa
loopne
aaa
xchg
cmp
imul
imul
xchg
cmpsb
cmp
adc
data16
add
insb
int
or
sbbb
fisubs
inc
imul
mov
into
notb
movsb
popa
iret
outsb
mov
shl
sub
movl
jnp
push
pop
dec
cmp
ffree
or
cld
sbb
outsl
cmp
lods
add
cs
cmp
push
jns
dec
movsl
popf
lret
mov
xchg
jg
movsb
sbb
or
pop
jno
or
data16
aaa
dec
push
cmpsl
test
lock
push
mov
iret
aam
out
imul
mov
inc
push
xor
lds
mov
fwait
pusha
bndldx
fcmovne
out
xchg
sub
mov
adc
insb
fildll
add
cltd
mov
std
sub
pop
repnz
inc
fwait
outsl
pop
addr16
sub
in
xor
lcall
pop
decl
jg
dec
stos
adc
xchg
cmp
sbb
cmc
dec
mov
mov
in
adc
cmp
call
inc
and
cmp
jb
xchg
out
lcall
inc
jno
lcall
fwait
jg
mov
orb
mov
push
jae
xchg
aam
orl
cmpsl
in
faddp
lcall
sub
inc
mov
ficompl
insl
nop
sahf
jae
push
dec
and
sbb
jmpw
adc
std
adc
fidivl
sub
xchg
add
inc
jae
mov
push
xlat
sub
push
les
cmpsb
cs
pop
imul
gs
mov
lock
cmc
insb
jg
cmp
out
decb
sbb
dec
push
repnz
mov
sbb
lods
clc
repz
xor
jnp
inc
adc
movsl
push
dec
inc
insl
enter
jl
gs
cmpb
xchg
pop
pop
inc
ret
adc
rcr
lcall
jno
add
inc
cltd
in
pop
jb
leave
pop
fldl
negl
push
lods
stos
aas
stos
push
inc
and
jl
mov
mov
or
idiv
mov
mov
xchg
mov
mov
jmp
dec
xchg
shll
std
sub
out
push
fstl
int3
cltd
repnz
lea
pop
xchg
pop
xor
xor
xchg
test
sub
adc
ss
inc
bound
sti
adc
outsl
je
ss
mov
stos
fbld
icebp
fldenv
jne
in
rol
pushl
lea
xor
and
fisttpl
out
lret
int
test
jecxz
mov
jns
jb
dec
pop
cltd
repnz
push
xor
or
imul
xchg
push
int
and
sub
inc
mov
jo
sub
jecxz
push
es
cwtl
gs
jecxz
test
sub
fwait
bound
data16
mov
mov
iret
pop
or
xchg
jp
mov
nop
xchg
push
fisttpl
call
xor
add
cmp
sub
mov
ljmp
insl
jno
and
lahf
mov
aam
xor
pop
or
rorl
dec
fiadds
pop
mov
lods
mov
scas
jmp
test
adc
mov
outsb
inc
jns
fisubl
ds
sahf
mov
inc
jb
mov
ret
dec
ret
and
jbe
cmpsl
xorb
lods
repnz
repnz
pop
aad
pop
cmpsb
push
insb
mov
out
xchg
sahf
mov
and
lcall
jo
and
jl
daa
bound
adc
xchg
inc
popa
jl
inc
jnp
cmp
je
ret
jbe
mov
rcrb
in
or
inc
push
xor
std
push
js
ja
outsl
or
push
loop
lcall
popa
test
les
cltd
fwait
add
mov
jl
aas
std
stc
sub
pushf
sub
sbb
sbb
jno
or
insl
add
out
rcrl
adc
pop
and
loopne
lock
lea
sbb
adc
clc
adcl
or
fisubl
repnz
push
sub
or
insl
mov
push
scas
pop
adc
les
dec
mov
test
test
inc
iret
xor
pop
out
stos
adc
jae
shll
xor
out
call
les
movsl
fld
xchg
jmp
fs
fisubs
dec
dec
call
cs
pop
dec
cmp
xor
cmp
das
pop
adc
jo
cmp
les
lret
enter
vcvtsd2si
jmp
and
jns
xor
inc
cli
loope
mov
sbb
pop
xchg
fisubrs
and
mov
loope
push
js
inc
jnp
inc
ljmp
les
getsec
and
push
lahf
orb
addr16
jae
pop
sbb
aad
loope
add
lret
adc
lahf
jns
push
jno
mov
mov
adc
repz
pop
push
mov
mov
imul
add
and
mov
ss
fimuls
cmp
lret
pop
iret
test
es
xor
dec
loopne
mov
adc
inc
jmp
adc
gs
popf
les
sti
in
loop
mov
mov
in
sbb
scas
dec
sub
and
ret
cmpsl
mov
movsb
mov
daa
dec
mov
mov
xchg
mov
mov
cmpsb
or
mov
movsb
pop
das
das
xchg
xchg
movsl
sbb
hlt
outsl
mov
xchg
shl
sti
sub
cwtl
rorl
and
imul
jp
mov
data16
cmpsl
cmp
loop
lods
scas
xchg
mov
mov
dec
mov
int3
jmp
mov
leave
sub
xlat
xchg
in
push
pop
push
outsb
pop
cwtl
xor
pop
inc
lea
daa
push
xor
enter
push
push
pushf
pop
inc
lds
inc
add
test
insb
mov
nop
lahf
push
notl
xchg
add
xchg
cltd
jnp
arpl
mov
movsl
mov
cmp
imul
and
pop
cld
ja
int3
mov
xchg
ficoml
sub
jge
cmpsb
mov
pop
js
cmpsl
leave
and
nop
outsb
sahf
pop
mov
cld
adc
xor
mov
inc
push
adc
rolb
jae
cmp
dec
or
mov
fists
aad
or
scas
push
imul
jb
mull
mov
ret
mov
out
sub
insl
xchg
mov
adc
cmpsl
xchg
add
sbb
pop
mov
in
jmp
xchg
add
mov
daa
push
dec
xor
or
sbb
pop
imull
into
sbb
jp
into
pop
mov
jne
mov
mov
mov
lcall
dec
push
push
nop
sub
mov
cmpsl
nop
sbb
or
dec
jle
fs
in
shlb
add
sub
hlt
push
jmp
jmp
xchg
inc
push
aas
mov
lret
sub
adc
mov
sub
ds
insl
pop
pandn
test
adc
push
xlat
mov
adc
push
lea
pusha
outsl
lea
sub
nop
clc
incb
lret
push
shll
jbe
cmp
xor
lret
in
mov
mov
lcall
xor
sbb
push
pop
dec
pop
push
clc
or
or
sub
fistl
lods
cmpsl
loope
aaa
pop
mov
adc
xor
subb
mov
push
pushf
fwait
mov
sbb
sub
mov
add
or
cmp
lods
aas
loope
mov
adc
shlb
and
push
stc
and
inc
sub
jno
ja
lret
mov
cwtl
int
xchg
subl
jge
fs
inc
sbb
ja
aam
mov
jge
mov
sbb
pop
stc
and
inc
or
jl
in
push
repz
or
fimuls
xchg
xor
orb
test
jne
jle
or
cmp
sbb
or
pop
rorl
dec
sahf
aaa
adc
mov
repnz
test
or
jno
sub
pop
mov
cltd
stos
dec
jmp
pop
jmp
shrl
and
mov
dec
in
jb
mov
jle
dec
dec
inc
push
dec
mov
outsb
pop
insb
aaa
loopne
dec
lds
sbb
aaa
dec
fldenv
lods
or
mov
add
pop
mov
stos
jno
mov
lock
call
stos
jl
nop
push
mov
aad
fwait
idivl
mov
sbb
xchg
sub
push
jle
stos
cld
lahf
push
int3
fdivl
and
scas
sahf
out
jbe
arpl
mov
mov
dec
push
lds
push
mov
rol
fcoml
out
sbb
sub
pop
call
jecxz
mov
mov
or
adc
addr16
dec
mov
push
pop
mov
jnp
outsl
xchg
xor
cwtl
lcall
sbb
push
jnp
cmpsb
add
mov
jg
into
insl
insl
repnz
mov
adc
jne
adcl
sbb
dec
lret
imul
jno
nop
lahf
add
jo
les
push
imul
leave
cmpl
cltd
mov
mov
mov
divb
dec
movsb
subb
je
aad
fdivr
mov
and
add
sbb
jns
ret
and
or
mov
add
adc
sbb
push
cmp
or
and
jecxz
insl
push
orb
cmp
aaa
adc
daa
fld
mov
gs
insb
in
jbe
fidivs
push
mov
outsl
inc
imul
adc
push
addb
je
stos
cmc
aas
mov
pop
xor
inc
push
sub
push
popa
inc
or
xor
xchg
mov
sbb
rorl
cmp
fucom
scas
cld
mov
add
xor
imul
loopne
sbb
push
insb
popa
mov
jle
xor
and
negb
mov
push
push
inc
push
bsf
test
xchg
adc
pop
push
jp
mov
jle
push
sbbl
int
sbb
sub
cmp
push
xchg
cmp
push
and
outsl
xchg
les
pop
and
int3
lock
adc
shll
push
loopne
into
pop
inc
aaa
xchg
push
add
enter
push
and
push
dec
mov
cli
jns
pop
mov
push
xor
inc
xor
push
add
test
or
in
loope
gs
gs
ret
and
jbe
adc
adc
mov
mov
mov
arpl
pop
pop
push
movsl
add
ret
jp
sbb
inc
xor
scas
mov
nop
outsl
or
mov
mov
xchg
fwait
or
xchg
adc
inc
scas
cld
dec
mov
pop
xchg
and
sahf
outsl
icebp
insb
ds
inc
bound
mov
das
xchg
test
pop
loope
lcall
loop
ljmp
xorb
xlat
clc
push
icebp
mov
nop
xlat
pop
mov
jmp
setnp
mov
fwait
xchg
pop
lods
int
sahf
test
adc
pusha
ss
cli
push
ffreep
and
test
inc
pushf
arpl
mov
inc
inc
mov
mov
push
std
shrl
lret
mov
rcl
loop
mov
enter
push
jo
int
xor
mov
jbe
jae
jbe
test
mov
xchg
test
sbb
ljmp
inc
add
hlt
push
jae
es
mov
sub
out
add
pop
insb
push
ret
jge
out
push
push
lret
xor
xor
push
add
jmp
pop
imul
inc
cld
shl
repnz
dec
hlt
jns
loopne
xchg
insl
in
mov
pop
adc
filds
addr16
in
mov
test
inc
and
mov
mov
inc
repz
jno
loopne
sbb
cmp
imul
mov
lock
inc
push
lret
rolb
leave
test
inc
xchg
inc
mov
mov
dec
subl
incb
cmpsb
rol
rcl
fidivrl
mov
in
std
aad
jae
pop
gs
imulb
lods
popa
mov
in
or
nop
cli
or
cs
pushf
pop
mov
enter
mov
clc
jo
es
mov
xor
pop
inc
or
call
sub
mov
mov
in
dec
adcb
addr16
adc
inc
rcr
popf
mov
ret
int
popf
or
xchg
mov
mov
pop
or
pop
out
lods
xchg
movsb
js
in
loop
out
lock
sti
in
dec
xor
popf
sub
mov
ret
xchg
arpl
push
loopne
out
shrb
out
cs
lret
test
dec
xor
clc
mov
test
std
dec
cld
add
sub
adcl
leave
mov
and
or
sahf
stos
or
xchg
addr16
ljmp
rorl
mov
push
sub
pop
pop
pop
in
ret
sub
cld
pop
xlat
cmp
repz
sub
push
pop
push
push
jmp
inc
adc
adc
lock
mov
pop
adc
shll
mov
jecxz
adc
std
lret
ljmp
mov
ja
fldt
lock
add
add
popa
jbe
xor
rolb
pop
pop
jecxz
pop
es
div
int
lods
repz
lock
roll
dec
xchg
rcrb
or
sahf
dec
es
js
test
fdivp
mov
or
in
xor
xchg
lock
inc
adc
xor
inc
gs
sub
xor
push
mov
mov
add
sbb
mov
das
testl
push
add
lahf
jae
fmull
adc
push
xlat
test
stos
bound
xchg
pusha
adc
xchg
dec
pop
pop
imul
in
data16
add
add
push
mov
mov
add
movsb
push
pop
das
dec
mov
and
insl
push
push
fdivrs
pusha
push
fiadds
mov
imul
fidivl
mov
imul
inc
sub
mov
mov
pusha
enter
popf
mov
cmp
xor
xchg
aad
cmp
mov
popa
cli
pop
cs
adc
iret
cld
stc
fisubrl
lcall
jmp
lods
iret
inc
adc
int3
mov
outsb
outsb
pmaxsw
out
cmp
icebp
loope
imul
sub
fisubl
push
out
in
test
add
cmpsl
into
mov
or
jg
add
sarb
test
inc
jecxz,pt
pop
dec
sbb
int3
xchg
mov
jmp
xor
mov
popa
fs
sahf
aaa
sahf
and
adc
and
and
cmp
cmp
adc
lea
out
shrb
call
dec
test
jae
arpl
mov
fisttpl
andl
jp
mov
pop
dec
ret
sbb
mov
sbb
jecxz
dec
inc
fisttps
inc
mov
scas
addb
cmp
fcmovbe
jo
sbbl
mov
int3
mov
or
xor
clc
and
out
cmpsb
test
xor
clc
movsb
push
mov
xlat
add
xchg
and
mov
add
mov
adc
mov
dec
mov
adc
sbb
rorl
and
jge
cmpsl
pushl
arpl
inc
lcall
or
cmc
and
xor
sahf
in
mov
jbe
shlb
fisttpl
and
ret
cmp
mov
add
or
mov
out
xchg
add
jl
lds
pop
jle
mov
ljmp
imulb
inc
lds
in
jo
xchg
fwait
and
cltd
pop
mov
fwait
jl
mov
repnz
pop
testb
sbb
test
dec
movsl
shlb
shl
jl
rcr
mov
bound
mov
push
test
enter
pop
rcrb
loope
xor
dec
pusha
or
inc
hlt
xor
mov
mov
mov
fstps
mov
mov
in
gs
lods
mov
add
shrl
repnz
xor
sahf
loop
lods
test
imul
jle
inc
aas
or
fstl
jmp
jge
rorb
jns
adc
aaa
sbb
mov
cmp
sbb
cmp
and
iret
ljmp
cld
add
adc
mov
fsubrl
loope
test
fidivrl
in
and
cmp
pop
sarb
ret
pop
mov
xlat
loopne
ss
mov
out
xlat
push
arpl
aam
or
pop
adc
stos
lcall
aas
orl
imul
push
mov
inc
call
jmp
ret
clc
jbe
pop
dec
les
mov
xchg
movl
jbe
rcr
dec
in
cmpb
ficompl
pop
or
push
lds
ja
loopne
jl,pn
or
mov
mov
imul
jl
xchg
insb
cmp
leave
pop
scas
xlat
adc
outsl
dec
lods
mov
cli
sub
out
inc
sahf
inc
and
stos
xor
into
leave
sub
jle
fistps
or
enter
out
insb
lock
negl
jns
stos
leave
rcr
xchg
mov
inc
sbb
mov
ds
or
sahf
out
js
sbb
mov
movsb
push
shrb
into
lcall
cmp
xchg
in
sahf
mov
fneni(8087
pop
rcrb
gs
into
arpl
jnp
ja
add
addr16
jo
push
mov
push
pop
push
mov
add
dec
pop
jnp
loope
cmp
dec
pop
xlat
shr
mov
fsubrl
iret
jne
dec
add
jne
lock
mov
aad
stos
push
push
jmp
pop
lea
loop
and
mov
xor
add
insl
jno
sti
test
cmp
dec
mov
push
cmp
inc
xchg
and
bound
data16
push
roll
test
or
cmpsb
or
pop
cmp
out
movsb
mov
mov
xchg
jne
mov
inc
mov
insl
das
lret
jecxz
loop
mov
int
lock
cmp
ret
lods
sarl
repnz
xchg
nop
push
sub
test
mov
cmp
mov
sub
add
in
jg
rcrl
xchg
mov
faddl
cmp
aad
jbe
andb
adc
pop
out
psubd
fidivrl
cwtl
or
loope
je
xchg
inc
std
fs
mov
ja
pmulhw
movsb
cmp
data16
xor
ret
flds
ret
mov
sqrtps
or
jge,pt
nop
in
es
cmp
push
xchg
cmp
outsl
push
ljmp
adc
xlat
sbb
out
jns
mov
ret
mov
add
xor
xor
adc
mov
negb
lds
test
sbb
es
cltd
loopne
sub
out
push
push
jnp
mov
xor
cmp
xchg
mov
jmp
lods
cmc
mov
int3
aas
cwtl
and
ljmp
loopne
or
jg
pop
adc
pop
es
add
xchg
cld
fmul
nop
movsl
or
and
inc
lcall
jmp
dec
test
out
ja
mov
lods
xor
insl
and
test
pop
fldt
dec
mov
js
or
fisubs
mov
ja
push
arpl
push
lahf
dec
fsubl
jecxz
sbb
sti
insb
or
push
lds
in
sbb
aad
in
pop
and
or
dec
nop
lret
xorb
cmp
dec
sbb
pop
push
sbb
inc
jmp
xchg
pop
xchg
mov
dec
xchg
adc
orb
popa
inc
xlat
sub
into
add
xor
push
nop
into
cs
xchg
adc
sahf
mov
ja
push
leave
cmp
call
ljmp
in
pop
pop
jae
aam
xor
xchg
loopne
sti
stc
mov
xchg
and
jl
xchg
jle
cwtl
mov
xchg
adc
shlb
and
mov
enter
inc
leave
dec
inc
mov
inc
jnp
data16
xchg
jb
cmp
roll
data16
pop
fsub
das
mov
std
fsubrs
jp
out
imul
xor
fldt
push
and
rcrb
dec
stc
ljmp
cmp
clc
imul
push
adc
insl
popa
sbb
push
inc
mov
or
cwtl
inc
test
in
movsl
cwtl
pushl
call
pusha
jle
cmp
loop
popf
push
or
mov
add
clc
sbb
sbb
xor
mov
jge
das
inc
push
xorb
or
inc
pop
stc
fimuls
mov
aas
jo
mov
mov
mov
cs
mov
imul
mov
pop
mov
loop
sbb
pop
mov
lea
xchg
dec
jmp
pop
inc
jae
or
aaa
fdecstp
cmova
fildll
ds
lods
std
lret
js
aas
cld
pop
ss
cmp
imul
fdivl
aas
push
loop
lds
xor
adc
jo
testl
lea
arpl
imul
xor
cmp
daa
pop
jno
cld
dec
inc
lods
pusha
mov
lcall
sub
imul
lods
mov
fimull
xor
inc
fcmovnb
xchg
sti
out
inc
and
cltd
lods
repnz
mov
mov
and
mov
dec
ss
rcrb
cli
mov
or
ror
xor
mov
imul
out
cmc
pop
lahf
shl
cs
mov
jne
popa
mov
pop
mov
addr16
sbb
es
jns
push
mov
scas
xchg
pop
dec
fstps
fistps
adc
out
incb
ret
add
mov
and
cmp
fisttpl
imul
xchg
mov
in
xor
and
inc
test
sub
mov
push
aam
lret
xor
mov
fistpll
inc
lock
add
sbb
mov
clc
ret
push
ja
imul
cld
sub
dec
sbb
ficomps
dec
push
jmp
xchg
inc
les
xchg
repnz
int3
jge
data16
jo
scas
js
inc
mov
jbe
push
jle
enter
dec
stos
outsb
rorb
push
clc
es
imul
filds
les
push
ret
jno
stos
nop
xor
leave
out
jno
icebp
call
dec
xchg
and
pop
cmpsb
cli
icebp
adc
jo
sub
push
push
mov
mov
movsl
inc
test
mov
dec
scas
push
pop
adc
sub
scas
mov
jge
mov
xor
ja
imul
stc
aam
arpl
das
inc
cmp
rol
sbb
inc
pushf
adcb
pop
cmc
adc
sub
movsl
icebp
test
adc
and
lds
bound
push
outsl
mul
adc
mov
jne
mov
lahf
mov
repz
mov
and
and
int3
push
pusha
mov
pop
dec
cli
inc
add
dec
xchg
inc
sti
fldenv
sbb
pop
pop
arpl
fs
lcall
or
test
dec
mov
pop
mov
mov
jmp
pushf
pop
cmp
lret
lods
sahf
stos
dec
js
mov
nop
addr16
sbb
jge
xchg
cmp
pop
xchg
hlt
ljmp
pop
mov
push
movhps
pop
cmp
fstl
and
adc
bound
mov
cltd
jno
mov
test
cmp
mov
push
xor
aas
adc
push
pop
lods
prefetcht2
jae
inc
and
sbb
enter
pop
cli
pop
and
clc
out
sbb
fisttps
cltd
jl
fs
dec
xchg
cmc
shrl
mov
xor
dec
out
jmp
adc
faddl
je
dec
or
gs
je
add
mov
aad
loopw
jae
jae
pop
ret
js
xchg
ret
pop
into
ret
inc
and
or
lahf
lods
popf
insl
push
mov
add
daa
adc
loope
lea
mov
ds
and
lods
mov
jae
mov
loope
jae
xchg
and
jl
or
pop
mov
ja
clc
arpl
inc
rcl
arpl
in
sub
ja
push
aaa
int3
cltd
enter
gs
xchg
sub
fidivs
and
or
inc
mov
mov
pop
movl
loop
sarb
cmp
push
pop
rcl
lds
je
mov
imul
scas
testb
iret
pushl
ret
sbb
outsl
adc
lock
cmp
jnp
lcall
or
enter
out
scas
mov
loope
pop
mov
imul
loop
popa
aam
sub
mov
push
test
je
mov
push
lds
fstpl
sbb
and
jecxz
add
or
jns
sub
pop
and
add
loopne
xchg
pusha
adc
shl
mov
mov
int3
hlt
cmp
sbb
pop
sub
inc
scas
sbb
pop
pop
jbe
jns
mov
sbb
scas
mov
cmp
or
xchg
push
mov
jne
daa
lock
rorl
addb
imul
mov
sub
push
mov
or
jp
pop
in
popf
xchg
push
or
and
outsb
hlt
arpl
xchg
or
lea
leave
mov
cmp
rcr
cmc
cmp
jmp
xchg
ds
mov
std
cmp
push
push
xor
sub
xor
ud2
mov
fldt
mov
push
pavgw
pop
jb
jmp
jb
xorb
xchg
mov
mov
insb
push
xor
adc
insl
xor
dec
in
add
mov
dec
dec
sti
mov
push
sub
sbb
mov
insl
in
mov
arpl
push
add
xchg
xchg
jae
mov
and
scas
hlt
imul
test
or
inc
push
add
inc
imul
push
mov
xorl
insl
xchg
add
mov
loope
mov
ret
push
jne
cmpsb
shlb
push
xchg
loop
popa
push
cmp
push
sub
clc
outsl
cmp
mov
mov
and
fbld
movsb
mov
inc
pop
ja
xchg
xor
call
aaa
bnd
pop
stos
negl
jns
or
pop
sbb
adc
shld
mov
arpl
mov
mov
test
jecxz
sbb
dec
sbb
in
ficoms
inc
pusha
lahf
jg
push
push
push
shr
jecxz
dec
or
mov
xor
xor
or
xor
std
int3
or
sbb
xorl
stc
aaa
sbb
dec
into
add
inc
lahf
imul
sub
push
aaa
loopne
xchg
imul
mov
idivb
jge
inc
lock
xor
fisubs
add
mov
mov
add
js
lock
push
les
cwtl
test
xlat
jbe
xor
xor
test
aad
les
or
push
xchg
sti
shll
ror
out
inc
xor
imul
dec
xchg
xor
dec
lock
scas
loope
in
add
test
scas
push
imul
fistpl
jnp
imul
stos
inc
out
adc
adc
push
icebp
ja
sub
and
xchg
sarb
jmp
ret
fcmovbe
xor
aad
xchg
sbb
mov
dec
xchg
inc
and
lret
adc
daa
mov
pop
js
dec
inc
enter
in
outsb
pop
cmp
into
mov
and
mov
testl
add
shrb
pop
inc
frstor
cmp
and
in
out
and
pushf
mov
shlb
mov
fmull
or
mov
cmp
mov
adc
xor
xor
or
int
aas
push
es
pop
xchg
insb
pop
mov
xchg
icebp
ret
jge
cltd
fstps
shlb
adc
fs
loopne
add
xchg
jns
aad
pop
adc
cmp
fsubl
cmp
aam
ljmp
sbb
pop
lahf
pop
mov
mov
push
mov
push
das
adc
mov
bound
loop
jbe
dec
mov
adc
xchg
push
pop
lahf
ljmp
jge
or
rol
mov
mov
sti
sbb
pop
sub
adc
ljmp
inc
iret
movsl
fdivrs
stos
loopne
test
adc
movsl
adc
sub
jmp
cmp
sahf
insl
jle
sub
popa
jno
mov
xor
mov
in
lcall
push
inc
cltd
mov
nop
aam
dec
cltd
dec
es
push
and
sub
xlat
pop
push
push
rsm
inc
or
push
popf
scas
in
sub
fcmovnb
cmp
dec
lret
hlt
mov
and
imul
mov
xor
aaa
sub
scas
call
call
sbb
daa
sbb
loop
pop
xor
out
mov
pop
jne
das
sarb
fimuls
cmc
loope
scas
and
mov
cltd
jbe
cwtl
imul
iret
xorb
fimuls
divl
repnz
jbe
ljmp
insb
mov
test
inc
sub
push
pop
dec
repz
xchg
scas
adc
mov
mov
shr
cwtl
imul
jmp
sub
dec
mov
and
xor
push
adc
leave
jnp
xor
adc
imul
movsb
loop
in
xor
jecxz
lock
mov
je
add
lret
test
push
mov
or
in
cmp
sbb
out
popf
add
lahf
sub
and
daa
cld
in
movsb
dec
nop
es
push
xchg
lahf
cmp
mov
cld
out
jns
lods
incb
or
xchg
mov
push
mov
popf
movsb
inc
stos
xorl
ds
dec
jne
cmp
jl
arpl
int
push
clc
movzwl
sahf
imul
mov
out
mov
test
in
mov
jg
shl
push
ljmp
je
enter
mov
sti
cmp
jp
and
mov
push
leave
int
pusha
jle
subb
dec
mov
mov
shll
mov
popf
dec
int
addr16
sub
mov
and
jnp
xor
outsl
fwait
ret
or
arpl
dec
cmp
lret
push
mov
jg
jle
push
aas
cmp
mov
aad
add
nop
cmp
aas
xchg
test
fs
jp
sbb
scas
lahf
jg
pop
inc
cwtl
inc
xchg
movsb
push
ja
mul
leave
xchg
pop
aaa
aad
mov
leave
sbb
add
call
xor
dec
ret
xchg
ljmp
lods
adc
lock
aaa
pop
add
mov
xor
or
jae
add
inc
or
mov
add
push
bnd
jno
movsb
dec
mov
sub
in
pop
pop
xchg
icebp
push
cmp
adc
xchg
mov
push
js
lahf
dec
and
popa
call
pusha
cltd
xchg
mov
xor
xor
jp
push
out
jl
pushf
xchg
aaa
movsl
iret
lds
mov
inc
inc
enter
cmp
cmp
push
cmp
jae
and
add
fiadds
and
dec
imul
je
or
jbe
cwtl
shll
iret
adc
push
ret
popf
mov
mov
mov
outsb
push
lea
pop
inc
cmp
sbb
mov
push
jl
mov
ffree
pop
sti
dec
push
add
les
mov
adc
dec
cmpsl
push
pop
xor
xchg
in
push
js
sti
mov
ss
jg
inc
dec
repnz
mov
daa
test
mull
xchg
sbb
pop
mov
adc
mov
xor
ret
add
pop
sub
or
clc
icebp
push
fcompl
aas
andl
push
lock
xchg
jne
ss
cwtl
mov
icebp
adc
imul
and
cli
scas
fsubrl
jno
xchg
xchg
xor
rol
pop
add
jmp
out
sbb
int
movsl
cmp
ds
pop
int3
mov
push
jno
rcrb
pop
shrb
inc
push
jg
sub
ss
cmp
mov
enter
mov
adcb
push
das
add
sub
pop
inc
cli
shrl
pushf
aad
pop
subb
push
ficoml
aad
mov
test
pop
lods
fimull
shll
dec
dec
mov
mov
dec
push
aad
jl
adc
dec
cmp
mov
lahf
push
mov
daa
ja
rorl
mov
imul
repz
dec
fcmovnbe
scas
mov
push
sbb
xor
fiaddl
push
or
adcb
cmp
mov
cli
out
test
out
lds
xor
fiaddl
xor
sub
lock
enter
jns
inc
loope
test
mov
sbb
lea
push
mov
cmp
sbb
mov
mov
pop
iret
xlat
pop
or
pop
test
sbb
pusha
lcall
mov
mov
fnstenv
sbb
xor
pushf
xchg
gs
xor
lret
sbb
aaa
sub
or
lret
imul
shll
ret
repz
dec
adc
rcr
xchg
sub
cmp
mov
sbb
push
mov
mov
adc
stos
popa
xor
test
ret
scas
les
xor
data16
pushf
leave
stc
inc
sbb
arpl
jmp
mov
iret
mov
popa
sbb
add
push
cmpb
sub
js
cmpsb
xor
inc
sbb
enter
pusha
mov
fisubrs
aam
xchg
or
push
inc
mov
arpl
push
popa
xor
push
arpl
xor
mov
xchg
push
stos
and
adc
jg
stos
sub
pushl
sbb
jmp
cmp
pop
cltd
imul
mov
daa
fldl
out
out
mov
out
lds
sarb
test
and
pop
sub
and
inc
mov
sbb
out
iret
jb
scas
loope
in
dec
and
loopne
js
sub
adc
pop
fwait
repz
test
xlat
stc
sbb
loope
orb
mov
icebp
adc
cltd
sub
lea
loopne
scas
sub
out
xchg
pop
dec
ss
jo
iret
fcoms
int3
and
push
pop
daa
xchg
xor
adc
pop
leave
lret
cmpsb
insl
js
sbb
cld
and
push
arpl
and
clc
pop
jbe
sub
cs
hlt
scas
jecxz
jns
adc
cld
ljmp
out
outsb
loop
lock
lods
out
sub
add
push
into
or
test
addr16
push
out
js
sarb
add
leave
sub
mov
dec
arpl
push
sbbb
lcall
jecxz
pop
pop
inc
fsubrl
cwtl
nop
das
xchg
cmpsl
cmp
push
cmp
movsb
rcrl
and
cmp
xchg
dec
xor
repz
int3
fisubs
cwtl
xor
lret
mov
push
rclb
lds
sti
pop
les
lods
mov
lret
mulb
adc
daa
cmp
pop
in
cmp
jp
jnp
fmull
imul
loope
xor
inc
lea
loop
popa
js
je
jmp
xchg
stos
test
lret
xchg
popf
std
push
cmp
pop
aaa
hlt
rcr
push
jl
das
lret
loop
cmp
or
test
pop
lcall
dec
pop
inc
out
sub
dec
xchg
pop
jl
xchg
mov
mov
fst
aaa
xchg
loopne
rclb
test
int
mov
fnstenv
and
stos
mov
cmpsl
test
xchg
ss
inc
ljmp
test
sahf
aas
xor
mov
and
mov
nop
dec
arpl
jle
inc
adc
push
inc
fisttps
call
lea
cmp
das
dec
std
jns
imul
push
mov
jmp
enter
push
fwait
outsl
aam
jb
arpl
popf
pop
and
mov
push
mov
aas
test
lock
mull
jno
pop
add
mov
mov
gs
push
in
jb
jb
add
shlb
adc
arpl
mov
imul
push
inc
je
dec
cmpb
xchg
popa
jo
ds
loope
es
mov
mov
inc
adc
sub
cmp
sub
push
cli
fldcw
repnz
popf
mov
or
repz
mov
imul
xor
stos
leave
sub
xor
cmp
sahf
ret
sbbb
adc
scas
arpl
es
adc
sub
jno
pop
ret
mov
xchg
pop
jp
add
sti
stos
loope
and
movsb
lret
sbb
dec
xlat
xor
xor
lahf
insb
icebp
add
mov
test
loop
sbb
aas
addr16
mov
jp
imul
repnz
sahf
test
not
sahf
mov
or
mov
ss
add
inc
fldl
and
xchg
neg
add
mov
ficomps
sbb
xor
mov
cli
fwait
push
pop
gs
cwtl
inc
or
les
push
mov
sub
sbb
adc
bound
xor
or
jle
adc
lahf
push
hlt
stc
hlt
and
test
push
cwtl
push
and
sbb
jae
sub
add
jl
insl
dec
sti
lock
in
sbb
sub
and
stc
or
pop
push
andl
cmpsb
cs
test
in
outsl
or
jge
adc
xor
cmp
gs
lock
push
sbb
popf
aaa
pusha
or
cmp
ss
std
adc
cmp
lcall
stos
dec
adc
stc
stos
flds
loope
sbb
mov
mov
rcl
loop
pop
xchg
dec
test
pop
xor
cmpsb
ret
clc
addr16
fsubs
rcr
mov
mov
es
mov
js
vmaxps
cmp
iret
lds
lods
xor
adc
pop
dec
and
jb
jnp
lret
xor
fidivrs
fadds
dec
cmovne
ljmp
loopne
inc
daa
iret
inc
call
sub
fcompl
fwait
mov
jp
cmpsb
push
jmp
inc
xor
sbbb
xchg
xor
nop
stos
pop
es
fidivrs
sbb
xchg
pusha
mov
push
inc
xchg
push
repnz
fisubl
hlt
out
mov
enter
fs
cs
add
movsb
jne
xchg
push
push
inc
adc
loopne
push
or
push
outsl
js
daa
test
jbe
fcoms
mov
bound
adc
adc
and
inc
dec
repnz
mov
inc
int3
add
rol
mov
adc
cwtl
aam
lock
inc
nop
sub
push
push
test
jo
stc
and
sbb
jmp
jl
shll
jno
insl
add
cld
hlt
dec
pushfw
pusha
xchg
cmp
imul
negl
adc
push
pushf
sbb
dec
mov
in
mov
mov
inc
or
ja
cli
jnp
add
pop
xchg
push
fistl
mov
push
hlt
pop
mov
pop
add
jns
fs
mov
and
mov
jns
dec
pop
cltd
pop
adc
jne
orl
shlb
sarl
sbb
jecxz
out
or
add
mov
lods
gs
fsubrs
push
add
fbstp
cs
sub
add
outsb
pop
jo
mov
gs
mov
pop
insb
jo
or
mov
jb
scas
push
push
test
pop
fcmovu
arpl
fs
ljmp
imul
inc
sub
ljmp
fs
dec
inc
adc
push
mov
mov
mov
mov
in
mov
sub
in
jae
pop
lret
and
fisubrs
sub
fldl
push
out
repz
xchg
xor
int3
imul
sbb
xchg
mov
jmp
and
cli
lret
xor
or
es
cmp
push
push
jbe
lcall
out
adc
push
mov
sbb
mov
jl
js
mov
cmc
push
add
addr16
int3
fwait
loope
and
dec
push
inc
lods
jno
aas
sbb
iret
jmp
pop
mov
adc
dec
pushl
mov
and
sbb
xor
cltd
dec
or
pop
lret
fidivs
sti
push
in
mov
clc
inc
xchg
pusha
mov
cmp
mov
pop
arpl
arpl
les
call
sbb
push
cwtl
add
das
ret
mov
pop
ror
stos
mov
add
ds
sbb
in
mov
dec
sti
pop
jp
out
mov
add
imul
sarb
ds
stos
sub
sti
gs
push
push
pop
lods
sbb
add
les
push
cltd
loope
mov
adcl
cli
popa
cli
aas
std
test
int
loop
nop
nop
sub
sbb
rclb
sbb
or
fwait
mov
rorb
shrb
push
mov
adc
pop
mov
push
jo
xchg
iret
sub
mov
mov
dec
out
sbb
ficomps
sbb
cmc
ret
adc
or
rorl
in
sbbl
lea
push
stos
shrl
test
fsubrp
push
xorl
dec
mov
je
add
xchg
movsb
lock
repnz
inc
sbb
mull
repz
shrl
cmp
loop
jge
dec
push
xchg
lea
in
mov
or
inc
inc
dec
aad
pop
imul
sub
int3
fldenv
xchg
lret
imull
jns
xchg
int
adc
xor
xorb
mov
in
jae
pop
mov
dec
mulb
rorb
outsl
sbb
push
stc
dec
fstl
popf
sti
add
divb
inc
out
jo
inc
pop
mov
in
out
loope
aas
mov
inc
lret
jge
push
enter
mov
enter
and
fisubrs
or
jg
pushf
cmc
lods
sub
out
push
ret
sbb
mov
sub
or
add
in
xor
in
adc
mov
dec
add
or
mov
aaa
filds
sahf
inc
or
icebp
jae
adc
inc
push
stos
or
test
cmp
pop
push
pushf
mov
test
lods
fstpl
leave
and
xchg
std
push
shl
mov
je
mov
inc
push
add
cmp
fs
pushf
data16
mov
cmp
lret
mov
add
jmp
rorb
cli
fisubs
lock
ja
loop
xor
mull
jo
inc
xchg
rcll
mov
nop
jbe
and
xchg
cmpsl
adcl
xchg
pop
stos
inc
pop
sbb
mov
jo
jne
xchg
xchg
inc
pop
fldt
add
mov
arpl
std
lahf
gs
test
cwtl
ss
test
xor
add
mov
clc
mov
lahf
push
call
jbe
pop
pop
fucomip
pushf
adc
and
into
mov
mov
scas
add
xchg
loope
stos
test
inc
negl
inc
dec
stc
jo
pop
enter
cs
nop
add
pusha
dec
test
scas
test
sarl
imul
cmp
cmc
sti
pop
adc
sub
iret
xlat
xor
add
mov
imul
pop
pop
daa
add
or
adc
xchg
adc
aas
mov
mul
out
push
xchg
cwtl
subb
call
xchg
xor
sti
fsubrs
fmul
aam
lret
mov
divl
jne
lcall
divb
cmp
mov
aam
mov
adc
sbb
stos
pushf
dec
outsb
nop
pop
adcb
test
and
sbb
insb
stos
cmpsb
push
inc
xlat
pusha
lods
xor
shl
sahf
lcall
int
test
push
cmp
arpl
icebp
imulb
out
dec
ret
test
cwtl
das
out
loope
test
cmc
xchg
orb
sbb
ja
add
movsb
insl
xor
xor
addl
pop
movsb
sub
ja
stc
push
int3
xchg
js
testl
stos
repnz
adc
adc
outsl
adc
movsb
inc
xchg
pop
dec
iret
fs
xchg
fbld
xor
jle
sti
out
pop
pop
jns
clc
xchg
mov
sahf
mov
mov
repz
fistpll
dec
daa
xchg
dec
xchg
inc
push
pop
cmpl
xor
outsb
cmp
add
mov
movsl
sbb
loope
sub
push
inc
imul
adc
dec
ret
sbb
mov
xor
lds
lds
in
cld
aad
inc
or
inc
add
inc
cld
es
es
mov
out
repz
decl
pusha
roll
fimull
gs
cmp
dec
sub
imul
cld
xchg
xchg
iret
sbb
mov
lahf
dec
xchg
add
xchg
cmp
test
cmp
dec
cs
mov
mov
mov
into
insl
dec
push
lock
push
scas
add
mov
push
pop
bound
or
stos
orb
cmp
fidivrs
out
sub
sbb
loope
inc
rol
cmpsl
loopne
nop
mov
inc
xchg
xlat
lahf
mov
xchg
and
rclb
mov
jg
add
repnz
insl
push
daa
push
jno
scas
movsb
jmp
xor
arpl
xor
repnz
inc
dec
pushf
mov
or
cmc
ret
xor
ret
cmpsb
in
or
mov
mov
into
jecxz
lret
push
lahf
or
xchg
inc
xor
loopne
mov
xlat
dec
aad
xor
dec
rcl
sar
fnstenv
fsub
movsl
mov
imul
sub
pop
sbb
js
pop
iret
xchg
xor
xor
jmp
xor
lcall
sbb
orl
xchg
push
mov
and
idiv
push
loope
addr16
pushf
imul
mov
add
pop
ss
gs
faddl
out
inc
cmp
fldcw
popa
lahf
aas
es
pop
arpl
pop
jns
xor
movsb
mov
imul
adc
fcmovnbe
ret
and
xorl
dec
stc
lock
cli
mov
cmpsb
jge
jbe
and
scas
out
mov
sti
mov
cwtl
mov
push
mov
mov
arpl
mov
imul
adc
loopne
fistpll
popa
mov
lods
iret
cmp
std
mov
loope
out
jns
insl
mov
nop
ret
cmpsl
jl
or
int3
fcmove
cmpsl
inc
jnp
subb
insb
in
gs
repz
cmp
shrl
cmp
cmpsb
dec
jae
out
aaa
cmpsb
test
adc
push
mov
xchg
xor
imul
mov
push
or
decb
xchg
add
rcll
mov
movsb
test
jb
jno
dec
push
pop
xor
pop
ss
test
insb
dec
loope
bound
and
inc
imul
les
aad
push
mov
imul
sbb
dec
mov
mov
into
push
xor
int
test
lods
or
mov
pop
iret
test
push
mov
mov
mov
adc
mov
jmp
jg
lock
ljmp
enter
addl
add
je
test
dec
loope
pop
fcompl
js
loope
dec
icebp
xchg
sbb
inc
pop
scas
loope
fadds
fists
ret
mov
cltd
jae
adc
mov
std
push
adc
popf
push
pop
lock
fcmovne
add
mov
pop
out
pop
push
ss
adc
ret
pushf
outsl
inc
gs
mov
dec
and
inc
insb
cmp
inc
ljmp
pushf
sbb
sub
rclb
addr16
or
pop
and
ret
adcb
pop
int3
aam
inc
xor
cmc
sti
hlt
and
mov
pop
into
add
jle
jns
shl
sub
sbb
scas
dec
lret
jmp
push
dec
pop
iret
sub
sbb
or
push
cmp
sub
lds
jle
sub
popf
and
pop
or
sub
and
stos
inc
mov
mov
mov
negl
xchg
mov
les
xchg
rcrb
sbb
fcmovbe
insb
popf
push
subl
loop
cmp
arpl
jae
pop
or
xchg
cs
mov
mov
mov
mov
and
leave
push
sbb
sub
sbb
sti
dec
insl
pop
mov
xchg
negb
cmc
push
inc
lret
adc
mov
orb
fldenv
jns
cmpsb
in
inc
mov
xchg
lods
les
arpl
or
filds
cmp
or
inc
lret
add
pop
pop
pop
jnp
sub
mov
dec
push
mov
jge
cmp
fisttpl
cld
mov
fcmove
insl
pop
jp
les
sub
push
arpl
imul
subb
pop
xor
movsl
lret
push
ret
xlat
lret
mov
dec
sub
mov
test
rcl
and
adc
and
xchg
shll
jg
xchg
orb
in
pop
push
mov
das
mov
clc
movsb
add
pop
jb
cmp
fidivl
lahf
inc
mov
sub
cmp
cmpb
pop
in
cli
jg
push
out
mov
xchg
xchg
pop
inc
and
mov
xlat
pop
andl
xor
ficoml
out
call
cltd
jno
adc
pusha
pop
mov
repz
icebp
fs
je
mov
mov
aad
sub
push
mov
inc
mov
lret
pop
push
jns
cmp
enter
xchg
insb
xlat
lret
xchg
sub
mov
cmp
mov
out
adc
adc
sub
jb
push
imul
jo
dec
pop
or
xchg
cmp
pop
into
pop
pop
or
push
pop
jo
rcll
cmp
je
xor
xchg
cmp
in
mov
adc
jl
out
push
data16
lods
int
int
add
mov
orb
sbb
push
adc
das
loop
scas
mov
inc
lods
sub
push
arpl
pop
and
js
int
insl
shrw
or
out
or
pop
les
push
lods
out
jbe
outsb
test
inc
hlt
lcall
aaa
ljmp
xchg
stc
pop
stc
rcrb
aam
stos
es
xchg
ljmp
xchg
pop
xchg
cmpsb
repnz
je
test
movsl
jge
jg
and
mov
je
mov
ret
sbb
lds
pop
pop
push
pop
push
mov
out
ja
or
test
sub
repnz
popf
cld
push
scas
fnstenv
adc
jo
pop
cmp
pavgb
adc
mov
addr16
jmp
add
inc
mov
test
push
mov
imul
dec
lahf
push
add
scas
ret
pop
mov
add
frstor
inc
mov
mov
adc
or
clc
mov
mov
cs
cmc
xor
sub
mov
push
xchg
mov
adc
mov
push
sbb
bound
lret
mov
mov
repz
push
dec
xchg
adc
sbb
mov
push
call
icebp
sbbb
mov
cmc
or
lahf
cmp
scas
xchg
mov
dec
fwait
shlb
mov
lcall
cmpsl
ud2
jp
mov
lret
loopne
sub
pop
jnp
fidivl
sbbl
arpl
and
cmc
adc
inc
leave
and
ret
and
arpl
mov
leave
pop
sbb
xor
test
adc
daa
add
xor
pop
add
fsubs
icebp
lea
push
stc
scas
dec
or
notb
dec
sub
dec
nop
faddl
sbb
rcr
cltd
sub
cmpsl
xchg
out
jp
stos
xlat
or
jecxz
into
xor
mov
test
xor
mov
sbb
sbbl
in
nop
int
mov
xchg
insb
jnp
xchg
push
xchg
cmpsl
push
push
push
popf
dec
call
popf
loop
outsb
push
decl
fnstcw
int
fildl
ja
test
or
repz
aad
dec
dec
dec
lcall
or
jle
add
mov
je
cld
ss
pop
mov
jae
jp
movsb
sub
jae
sub
jno
jbe
push
mov
jbe
cs
mov
in
fwait
aas
repz
mov
addb
iret
dec
xchg
sub
fucomp
sbb
nop
mov
inc
lea
pusha
andb
xchg
popa
addr16
movsl
adc
jns
lock
push
sub
jmp
loope
xor
pop
mov
test
sbb
mov
sbb
fisttpl
or
fs
cmp
nop
cmp
sub
fadds
popa
clc
je
sbb
mov
test
negb
sbb
push
mov
dec
jmp
pop
lods
out
out
imul
inc
pop
sbbb
or
add
push
dec
pop
outsb
mov
push
inc
push
leave
insb
add
dec
dec
xchg
inc
imul
aas
cmpsl
dec
aaa
mov
adc
xchg
stos
push
jae
call
jbe
lods
xchg
push
subb
xchg
xchg
push
daa
iret
in
mov
xor
push
lods
jmp
sahf
dec
addl
mov
mov
lods
adc
clc
inc
jns
lret
enter
mov
sahf
dec
adcb
loop
cmp
pop
and
dec
push
in
xlat
movl
add
xchg
dec
and
inc
or
xchg
pop
and
fstp
jg
inc
ficompl
pop
dec
std
out
xchg
insl
xchg
adc
pusha
mov
std
mov
add
sbbb
shll
sbb
mov
lds
scas
test
popf
fisubrl
jp
dec
or
fistl
and
das
je
js
mov
mov
lret
xchg
adc
jp
lods
jg
push
es
test
fsubr
fstl
cltd
add
push
pushl
mov
scas
fwait
sbb
mov
or
mov
daa
adc
pop
mov
inc
popa
jbe
or
lods
loop
dec
push
jno
or
sbb
mov
imulb
daa
sbb
sahf
mov
shll
imul
jne
roll
pop
dec
cmp
mov
jae
sahf
xchg
dec
xor
pop
out
mov
je
cli
repz
add
cli
insl
and
push
jmp
jmp
pause
xlat
jmp
clc
xor
lods
outsl
lea
mov
idivb
inc
push
push
cmpsb
add
loop
inc
push
imulb
xchg
and
push
sysret
movsl
addl
jmp
sub
sahf
push
pop
xor
or
outsl
add
repz
repz
fsts
xacquire
pop
xlat
lea
push
fbstp
mov
cld
aam
cmp
pusha
out
js
xor
cmp
adc
filds
cmp
outsb
jmp
jno
loopne
adc
xchg
pop
inc
hlt
jge
aad
dec
fstpl
push
ja
fs
popa
jo
and
cs
leave
lret
mov
punpckhbw
pop
cwtl
loop
xchg
sbb
mov
jae
outsb
jb
or
or
cmp
stos
xchg
nop
pop
aam
adc
stc
push
gs
rorl
testl
mov
sub
stos
sbb
jmp
cmpsl
aam
rol
xor
push
outsb
mov
imul
jbe
add
mov
push
jge
xor
sub
jmp
sbb
pop
pusha
fsts
vpaddsw
in
mov
cmpsl
imul
xor
rep
cltd
rcrl
mov
gs
idiv
sarb
adc
mov
push
clc
mov
adc
push
push
cmp
push
rorb
dec
out
mov
notl
mov
pop
imul
test
jmp
in
jecxz
imul
mov
push
mov
dec
inc
and
rorl
cmp
movsb
mov
inc
mov
lahf
mov
out
adc
pop
jbe
pop
jecxz
mov
adc
into
jge
and
xchg
and
or
push
lahf
xorl
lahf
push
jns
cmp
jmp
mov
shl
movb
addr16
mov
xor
xchg
in
pop
aaa
xchg
pop
cwtl
lahf
jle
xchg
mov
cmpsb
or
xchg
mov
sbb
mov
sti
mov
mov
pop
or
fildl
out
leave
mov
pop
xchg
mov
cwtl
les
lock
scas
lret
jbe
sub
arpl
imul
lret
pop
outsl
sbbl
hlt
arpl
fimuls
icebp
inc
pop
pop
pop
mov
pop
cmp
ret
and
xor
fldcw
adc
lcall
cmp
shr
enter
push
sub
idiv
push
mov
jmp
mov
pop
adc
cmp
loopne,pt
jne
xchg
push
xor
into
es
loope
xlat
movsl
sbb
mov
and
adcl
push
ljmp
pop
enter
repnz
dec
push
cmp
dec
jb
ds
mov
push
test
pop
sbb
data16
add
es
rcr
mov
les
jbe
mov
cmp
xchg
sahf
mov
adc
clc
int
repnz
fndisi(8087
das
aad
cltd
mov
mov
out
lods
mov
sub
add
iret
test
fldt
repz
call
loopne
icebp
stc
mov
leave
lcall
inc
inc
mov
lds
dec
push
pushf
jg
popa
cltd
cmpsb
lods
int
pop
xchg
aaa
loope
dec
mov
adc
jmp
and
xor
sub
or
iret
xor
iret
mov
mov
in
xchg
lea
sbb
sub
xor
sub
in
out
es
mov
sbb
mov
mov
mov
lahf
out
sbb
out
jge
xor
sub
pop
outsl
push
inc
mov
shrl
rolb
pop
cmp
imul
lret
xlat
shlb
mov
or
pop
push
mov
test
imul
mov
sbb
push
leave
dec
mov
adc
adc
movb
inc
xchg
mov
mov
into
sbb
push
test
jb
and
xor
ljmp
pop
xlat
andb
mov
inc
mov
xchg
or
int
xchg
fucomip
or
xchg
xchg
or
sub
dec
add
push
dec
rclb
mov
testl
fdivp
mov
insl
stos
xchg
into
std
ja
movsl
push
into
into
lret
mov
jae
and
push
cltd
jl
push
push
scas
jl
ret
and
dec
pop
mov
mov
stos
xor
pop
cltd
xchg
xchg
das
mov
dec
push
sub
jbe
mov
jmp
inc
repz
pop
xor
and
fdivr
add
xchg
cld
or
dec
push
in
dec
push
sub
loop
icebp
jl
dec
jmp
xchg
lea
mov
lds
mov
inc
inc
dec
lods
nop
pop
scas
sub
out
pop
jns
mov
push
shl
adc
push
or
jl
les
mov
fstps
sbb
out
push
inc
mov
inc
or
or
xchg
popf
add
fildll
fwait
dec
out
icebp
mov
adc
pop
jb
in
adc
stos
hlt
push
jp
cmp
dec
cmp
adc
lcall
hlt
call
inc
movsl
outsl
sbb
xchg
aas
mov
loop
dec
cmp
add
sub
fcomps
jle
movsb
insl
jbe
call
add
fs
leave
mov
and
mov
mov
cmp
jb
cmc
pop
xor
int3
or
repz
mov
mov
dec
pop
cmp
push
or
insl
xor
fbstp
sahf
mov
or
imul
push
rcrb
sarl
cli
cmp
out
fidivrs
and
add
mov
js
pop
dec
dec
pop
dec
fcmove
lahf
fists
loopne
cli
dec
pusha
inc
jns
pop
pop
xorl
cmpsl
int
fsub
cmc
mov
fmuls
in
cld
outsb
mov
dec
jnp
xchg
popf
and
cmp
push
sub
xchg
ds
les
jge
and
test
xor
adc
mov
mov
xchg
adc
add
adc
ja
push
pop
loopne
jp
arpl
bnd
cwtl
jg
int
fs
jge
push
sbbb
fs
test
les
fs
sub
fistps
pop
stos
out
movsb
xchg
ja
in
nop
and
pop
mov
cmp
or
popa
cmpsb
or
movsb
icebp
mov
sub
idivb
test
pop
push
inc
fs
leave
dec
sub
adc
ret
push
xchg
movsl
inc
inc
jp
xlat
arpl
lods
idivb
mov
lcall
mov
sti
xchg
jo
add
adc
test
movsl
inc
stos
popa
or
into
xlat
push
add
lds
adc
shll
and
dec
inc
fcoms
dec
punpckldq
or
jg
bound
int
xchg
divb
push
out
jp
add
sub
mov
ja
xchg
dec
notb
pop
xor
sbb
xor
jne
push
inc
fcmovbe
push
cmp
fimull
add
add
mov
sbb
cmp
sbb
xchg
mov
inc
mov
and
cli
xchg
xchg
mov
jecxz
je
aaa
pusha
mov
mov
into
shlb
lahf
insb
jle
pop
sub
adc
push
cmp
mov
cwtl
loopne
push
ds
test
adc
lods
es
adc
call
xchg
and
imul
sti
cmova
push
push
movsb
cmpsb
outsl
and
jb
push
lea
pop
leave
mov
xchg
push
jmp
mov
add
and
lret
push
jge
pop
cmc
arpl
ss
sahf
xchg
jb
es
repnz
and
fwait
mov
and
stc
mov
test
cli
inc
cmp
fists
mov
shlb
sub
jo
inc
test
gs
data16
aad
into
mov
fwait
orb
stos
gs
pop
and
push
mov
test
cmp
mov
ret
inc
jecxz
mov
cmp
lea
in
push
add
xchg
xor
push
lcall
orb
mov
mov
sub
pop
mov
inc
pushf
in
mov
sbb
push
out
cs
divl
mov
cmpsl
rcrl
add
jg
mov
inc
jge
cmp
jbe
xchg
stos
mov
mov
xchg
ss
pop
andb
cld
je
pop
fildll
scas
inc
stos
call
lods
xchg
popf
fldcw
jnp
repz
dec
std
lret
dec
iret
test
aas
test
fsts
lods
pop
xor
or
mov
nop
mov
ret
ret
inc
sti
in
xchg
outsb
mov
push
sbb
outsb
dec
cld
cwtl
push
mov
pop
cmp
fdivr
mov
mov
aam
push
jg
adc
ds
enter
fsubs
xchg
adc
cmp
jg
cmp
movsl
mov
clc
sub
cmp
jns
sub
mov
ljmp
add
dec
ljmp
cmp
mov
jecxz
rorl
add
pop
hlt
cmc
dec
jmp
out
mov
push
inc
mov
adc
or
enter
hlt
pop
int3
inc
in
outsb
lock
jno
sbb
pop
out
push
xchg
jg
xchg
scas
int
mov
mov
sbb
loop
cwtl
push
inc
push
push
icebp
loope
add
sbb
pop
bound
inc
jmp
cmp
mov
or
in
cmp
adc
int3
pushf
xor
sbb
xchg
cmpsb
adc
add
in
dec
ljmp
int
lds
xchg
xchg
add
stc
cli
sub
addl
ss
xlat
test
adc
incl
nop
cwtl
inc
xchg
lcall
pop
shrl
leave
mov
jl
popa
pop
mov
pop
jle
jo
sbb
mov
jo
aas
fs
cmp
test
jb
push
pop
xchg
inc
push
std
xor
cmp
adc
aas
shll
outsb
into
aas
inc
imul
push
mov
subb
int3
mov
mov
mov
aad
cmpsb
mov
and
adc
xor
jp
sti
add
rcr
jae
and
mov
sub
xor
jg
fistpll
sub
pop
int
jmp
inc
test
jns
sbb
popa
int3
push
mov
popf
cmp
bound
sub
in
cmpsl
xor
adc
pop
jne
sub
xor
movsb
lods
or
clc
pop
add
movsl
loope
loope
mov
cmpsb
fdivr
pop
lret
pop
jl
mov
int
cld
pop
mov
ljmp
lea
push
dec
inc
ret
dec
rorl
push
push
stos
js
mov
or
shr
mov
mov
jmp
cs
or
pop
sbb
inc
inc
xorl
cmp
pop
fwait
add
rcll
xor
inc
into
int3
lds
sub
add
jns
xchg
ss
cwtl
ss
jno
daa
dec
cmp
in
pop
and
xor
ret
sub
push
push
mov
pop
out
cmpb
rorl
faddl
clc
daa
xlat
pop
mov
scas
icebp
bound
imul
fisttps
or
xchg
movb
out
dec
lods
cs
push
repz
mov
xor
push
xor
pop
clc
out
in
in
or
icebp
mov
push
xchg
aad
jmp
punpckhwd
gs
sbb
pop
loope
xor
jb
dec
mov
les
jne
push
xchg
fcmovnu
or
or
add
xchg
inc
loop
or
pop
push
or
fidivs
dec
and
xchg
orb
lret
test
rcl
adc
aas
mov
cwtl
popa
and
data16
lods
inc
adc
or
sub
or
push
push
xchg
xchg
cmpsb
add
mov
dec
insl
div
out
call
and
nop
mov
mov
in
cmc
mov
xor
js
jb
sub
roll
adc
je
lods
scas
mov
adc
adc
pop
sub
dec
push
idivb
bound
bound
fs
cmc
xor
adc
xchg
sub
sub
fmulp
pop
cmp
mov
call
addr16
xchg
sahf
jp
xor
rol
dec
cmp
jno
dec
xchg
iret
fwait
add
mov
jo
repnz
xchg
es
test
sub
scas
fildl
push
jb
or
aam
xchg
and
nop
and
call
xorl
lds
jmp
xchg
xchg
inc
ljmp
sahf
cmpsl
xchg
movsl
xchg
jnp
mov
mulb
int
rolb
inc
jg
lret
fldl
pop
in
xor
or
movsl
xlat
gs
jle
repz
xchg
mov
insl
inc
mov
or
sbb
cmp
adc
push
test
inc
loope
sub
popf
sub
rolb
cwtl
insl
sub
or
mov
outsb
lcall
lea
cmp
add
outsl
subl
pop
add
jno
sub
imul
pop
stos
jge
add
cltd
sahf
cmc
add
fisubl
scas
scas
or
mov
pusha
cmp
mov
stc
inc
pop
xor
fistps
movsb
cmp
add
addr16
or
cwtl
inc
out
imulb
mov
pop
jp
arpl
jl
into
cmp
dec
vmwrite
xchg
add
mov
push
cmpsb
mov
and
jle
dec
jo
shll
push
add
xchg
lret
mov
xchg
push
ljmp
hlt
inc
ret
daa
cmp
mov
cs
mov
in
test
add
fisubrl
dec
xchg
dec
test
add
sub
int
int
xchg
cmpsb
sbb
cltd
movsl
aas
jl
xor
stos
mov
xchg
xchg
scas
and
addr16
lahf
add
mov
mov
test
fadd
push
sahf
andl
inc
lds
add
ljmp
inc
test
cli
and
cmp
jmp
lods
imul
sbb
sub
cli
jae
in
sbb
mov
xchg
testb
daa
inc
outsb
scas
push
ret
push
mulb
and
dec
out
mov
lret
sbb
pop
mov
jp
addr16
mov
out
bound
lock
cmp
add
scas
dec
std
leave
out
jb
push
arpl
cmpsl
test
nop
xor
xor
pop
jl
and
xchg
fistpll
inc
fwait
mov
cmpsl
cmp
ret
pop
sub
inc
mov
fninit
mov
andb
xlat
mov
adc
xchg
mov
pusha
inc
pusha
mov
mov
pop
and
ret
mov
mov
test
cs
clc
or
push
sub
lea
push
mov
adc
xchg
je
ret
in
stos
xlat
sbb
push
test
xor
pop
pop
loopne
iret
aad
push
mov
aas
xchg
loop
push
imul
test
inc
pop
pop
mov
jp
or
pop
pop
incl
call
cmc
sar
push
or
mov
adc
jne
jo
add
xor
mov
cmpsb
mov
mov
out
js
movsl
sbb
insl
lock
cmp
int
push
and
xchg
or
jl
dec
push
dec
jge
fdivr
inc
fmull
movb
add
test
fldl
xchg
pop
addr16
into
xchg
rol
shlb
out
loopne
pop
clc
jge
xor
lods
outsl
sbb
in
jbe
cmp
rcr
push
dec
das
jecxz
jp
mov
nop
pop
rol
movsb
jns
popf
jecxz
shrl
or
fisubl
jae
push
pop
push
aad
push
fs
xor
aas
xchg
pusha
mov
hlt
data16
ja
xorl
sub
lods
in
xor
add
mov
and
shll
daa
shlb
js
or
aaa
pop
pop
mov
xor
pop
call
mov
mov
adc
mov
out
cmpsb
inc
data16
mov
add
fsubrs
mov
inc
psubusb
gs
shll
cli
out
insl
pop
sbb
jmp
jmp
mov
outsl
sbb
ja
stos
jnp
scas
xchg
sbb
dec
xchg
dec
loopne
push
insb
popf
and
push
ret
jns
pop
add
sub
mov
stc
fstp
lea
std
pushf
mov
dec
add
inc
mov
js
in
iret
inc
aad
cmp
xlat
cltd
dec
mov
movsl
cmp
push
dec
inc
xor
inc
std
mov
inc
add
jge
es
mov
push
cmpsl
inc
stos
or
pop
jl
sbb
mov
icebp
sub
and
ficoms
add
push
das
stos
in
shll
ret
je
ffree
loopne
test
and
leave
and
mov
xchg
les
xchg
mov
sti
call
and
cmp
add
and
incb
mov
mov
push
xchg
ds
pop
popa
aas
int
enter
popa
jbe
push
mov
adc
cmp
push
inc
jo
popf
xlat
jp
inc
fnstenv
inc
fnstsw
sbb
mov
aad
mov
mov
add
int3
lret
nop
xor
imul
push
adc
sub
popa
push
push
or
sub
test
bound
fisubs
dec
lods
sub
xchg
int3
loopne
cmpsb
aas
xchg
inc
jbe
adc
cmp
sbb
xor
repnz
lret
jp
aaa
dec
push
jmp
sub
mov
push
fdivl
adc
mov
add
shlb
data16
sbb
sub
stos
pop
pop
and
cmpl
repnz
mov
jecxz
add
cld
dec
add
xor
xchg
lea
sub
cwtl
ret
adc
mov
das
test
push
es
xor
stc
mov
mov
test
xorb
pop
xchg
xor
jmp
bound
pop
inc
mov
sbb
insl
out
inc
in
lcall
jmp
or
test
cmp
push
divb
lret
jg
pop
in
pop
mov
push
jo
stos
fldl
pop
sahf
jo
out
cmc
out
xor
popf
fs
mov
rcrb
bound
movsl
loopne
cmpsb
in
inc
and
mov
jns
cmpsb
sbb
xor
push
dec
inc
mov
inc
push
lods
insb
pop
xchg
xlat
push
push
sub
jp
inc
pop
ja
mov
sarw
inc
add
rcrl
jne
sub
push
mov
arpl
outsb
lods
ret
jb
addr16
std
out
notl
sbb
mov
mov
pop
sub
dec
pop
icebp
dec
jae
xor
push
lcall
test
test
ja
cwtl
rorb
scas
adc
xlat
nop
mov
push
and
ret
jmp
mov
dec
icebp
mov
adc
fsubrs
jle
xchg
xlat
inc
mov
inc
cltd
std
xchg
adc
lock
lcall
addr16
dec
neg
inc
test
nop
insb
mov
dec
pop
pop
cmp
jge
cmpsb
xchg
jp
mov
sbb
call
lea
or
sarl
jb
jmp
loop
rol
lcall
nop
mov
dec
enter
mov
shufps
addr16
in
add
pop
ss
mov
cmc
bound
imul
cmpsb
cmpl
jb
cs
mov
mov
add
jmp
jae
mov
push
add
fbstp
cmpl
xchg
stc
pushf
call
and
mov
idivb
es
xchg
fldt
cmp
sub
mov
xchg
xor
or
test
mov
mov
decb
jnp
mov
call
mov
pop
outsb
test
mov
push
mov
xchg
movsl
ds
stc
dec
lcall
cmpl
int
adc
and
dec
adc
cmp
cmp
ds
inc
loope
dec
mov
and
or
lods
sub
into
pop
jg
ret
jg
mov
jb
dec
cmp
gs
pop
pop
xor
in
add
xor
fisttps
ds
jbe
in
push
sub
cmp
cwtl
adc
hlt
sti
push
xchg
jg
cmp
jnp
repnz
push
pop
iret
scas
hlt
mov
jno
stos
mov
push
xchg
bound
lret
shr
jns
sahf
add
inc
sbb
sub
push
sbb
or
inc
mov
sarb
pop
test
push
test
mov
in
push
cmc
mov
loopne
xor
dec
cmp
hlt
cmpsl
sbb
pop
mov
out
pop
sbb
insb
ds
inc
jbe
das
xor
jp
mov
movsl
loop
and
and
aam
shrb
xchg
je
and
sar
insl
popa
adc
int3
jo
sti
push
leave
ljmp
cmp
outsb
fnsave
in
dec
shrb
xchg
cmp
mov
popa
mov
gs
sbb
sbb
lret
adc
add
cmc
cmp
shrl
popf
test
mov
push
inc
sbb
pop
dec
test
test
inc
mov
hlt
and
adc
repnz
or
and
call
sbb
ljmp
sti
nop
test
and
jl
push
scas
out
push
rorl
add
lea
xchg
andl
imul
es
cmp
inc
fbstp
adc
mov
lds
fwait
shlb
in
fldcw
pusha
inc
xchg
cmpl
push
ret
inc
lea
rcll
push
mov
cmp
stos
lods
mov
imul
loopne
mov
pop
jge
adc
and
call
adc
mov
ljmp
dec
xor
and
outsb
test
dec
sbb
cmp
mov
fdivs
icebp
scas
ret
and
ret
arpl
mov
cmp
pop
aam
out
mov
push
push
pop
mov
cmc
insl
test
xchg
mov
stos
mov
cmp
mov
imul
cs
mov
rclb
leave
push
xchg
popa
repnz
mov
cmp
add
xor
dec
shr
pop
sub
movsb
int3
repnz
jl
cmc
ret
shl
adcb
or
imul
addr16
sbb
mov
cmp
movsb
popf
lock
add
in
popf
inc
inc
addr16
imul
sbb
in
jns
nop
subl
cmp
pop
mov
xchg
inc
xor
notl
push
out
cmp
mov
adc
outsl
rcll
icebp
aaa
lods
cmpsl
mov
ss
jno
push
fistpll
cmpsb
rolb
push
aaa
xor
adc
xor
cli
xchg
ss
loop
lods
sub
ret
testl
mov
inc
push
lahf
fstpl
mov
mov
aam
jle
dec
sbb
mov
lcall
popf
fldcw
cs
push
pop
test
scas
rorl
and
and
sub
and
push
mov
je
pop
mov
xchg
pop
cmp
mov
popa
outsb
cs
idivl
xchg
xchg
cmp
sti
mov
aad
addl
jle
mov
cmp
gs
push
inc
hlt
jo
xchg
mov
int
lds
jle
push
xchg
movl
rol
fdivl
bound
inc
jbe
jnp
mov
inc
js
jae
call
jo
xor
pop
push
pop
inc
js
cmp
mov
adc
gs
jb
or
push
dec
in
cmp
mov
jno
repz
rolb
cmp
aad
test
xchg
cmp
pop
cmp
cmp
mov
or
iret
mov
fbld
inc
rcl
sarl
cmp
jecxz
pavgw
out
mov
xchg
cwtl
mov
sub
aam
push
enter
mov
popa
pop
cmpsb
ret
push
xchg
push
mov
mov
fildl
testl
std
push
aas
jnp
jge
stos
lcall
xchg
cld
ja
in
sub
int
push
cmpsl
cmp
cmp
push
and
or
xchg
dec
les
fisttpll
cmp
push
jmp
data16
loopne
jmp
pop
adc
and
pop
xor
imul
mov
mov
xchg
jne
in
fsubs
cmp
adc
xchg
adcl
cmp
rcrl
push
sbb
std
xchg
mov
mov
dec
dec
repz
es
xchg
inc
jge
xchg
jne
xor
movsl
sbb
movsb
mov
mov
add
loope
inc
imul
dec
fstpl
fisttpl
lret
lds
mov
int
bnd
in
jns
xchg
jp
dec
imul
aad
ss
test
sbb
sub
jo
sbb
and
shl
pop
xor
mov
xchg
out
daa
jmp
ret
or
adc
adc
imul
push
lock
or
pop
xchg
and
cld
or
les
in
fwait
pop
mov
mov
adc
or
xchg
nop
ljmp
or
popf
je
lret
lods
push
inc
add
int
xchg
fidivrs
popf
push
ljmp
pop
pop
dec
std
adc
adc
and
xchg
mov
mov
push
int3
mov
jns
cli
sub
push
iret
push
sahf
lods
mov
cwtl
inc
jp
andl
lods
mov
scas
adc
fistps
adc
mov
inc
repz
shl
dec
xchg
inc
dec
popf
push
jne
clc
cmp
push
test
jge
flds
stos
loopne
mov
xchg
lea
xor
imul
leave
fdivs
mov
or
jmp
daa
mov
xor
pop
push
adc
mov
adc
popa
push
ja
cmp
es
push
ds
sub
test
inc
sbb
inc
test
movsl
sbb
dec
movsb
mov
sbb
outsb
aad
cmpsb
rcll
aaa
in
loop
mov
add
push
cmc
jae
inc
add
loop
jle
sub
pop
outsl
xchg
push
stos
adcl
cmp
adc
add
lock
or
iret
out
jmp
mov
sub
into
cmp
cmp
sbb
add
push
push
xor
into
jns
cmp
movsl
pop
repnz
sub
jns
flds
inc
ret
lods
jns
fimuls
lea
add
jb
movsb
pusha
push
lds
mov
fwait
imul
cmp
inc
push
cli
fistpll
lock
mov
lahf
mov
out
sub
test
mov
rorl
arpl
fs
xchg
mov
fmuls
and
pop
jae
popf
nop
adc
int
xor
inc
adc
sbb
adc
shll
lds
cmp
sub
adc
push
int3
cmp
daa
arpl
jg
loop
inc
fwait
sub
pushf
ja
jecxz
xor
test
xchg
sub
or
ds
inc
scas
inc
lret
sbb
mov
ret
jae
mov
hlt
inc
movsl
clc
adc
jl
shlb
xor
cltd
subb
dec
fstps
xor
int
loope
pushf
pushf
rorb
lods
or
pusha
loope,pn
xor
lods
pop
fcmove
rcrl
mov
ja
pop
aad
outsl
ds
push
or
mov
jne
out
lods
cmp
push
popf
sub
sbb
or
xor
mov
add
int3
and
jnp
icebp
mov
cwtl
sbb
and
cmp
subb
test
shll
mov
cs
dec
add
xchg
mov
xor
dec
std
push
cld
xchg
jle
jl
or
pusha
inc
jmp
xlat
rcl
js
xchg
dec
imul
push
push
xchg
call
es
xchg
fbstp
add
and
inc
jle
nop
popw
mov
adc
sahf
cmp
adc
loope
cli
aam
movsb
mov
cmp
insb
pop
aas
jl
sarl
cmpb
jnp
sub
mov
ds
push
ret
sbb
leave
mov
adc
sti
clc
ret
pop
aam
les
and
mov
adc
imul
mov
pop
aas
int3
cmp
insb
mov
mov
shrl
fiaddl
xchg
cmp
xor
insl
mov
shrl
rcrl
adc
sbb
mov
push
mov
push
repz
ljmp
out
mov
loopne
enter
js
out
test
mov
push
cltd
arpl
xchg
sysenter
rcrb
mov
mov
mov
fdivr
xchg
cmp
pop
in
cltd
inc
mul
mov
addr16
hlt
mov
push
push
aad
pop
xchg
mov
mov
jmp
sbb
pop
jecxz
aas
mov
push
dec
mov
mov
dec
xor
mov
int3
add
ds
in
and
fsubr
aad
rorb
jmp
pop
jae
push
sub
mov
fs
mov
jl
subb
stos
pop
aad
or
imul
dec
dec
adc
jge
pop
scas
subb
into
xchg
adc
push
inc
push
enter
dec
sub
jo
jmp
ja
jbe
test
mov
sub
sbb
xchg
lret
push
xor
insb
add
je
push
xchg
mov
xlat
addr16
pushf
nop
jecxz
sbb
mov
mov
dec
stos
sbb
mov
dec
pushf
and
test
xchg
mov
sbb
jns
sub
xchg
in
lcall
lahf
cmp
decl
sub
pop
fldl
cmp
ret
push
pop
xor
test
fcomi
mov
fadd
daa
adc
or
or
call
and
aad
add
jae
mov
inc
push
loope
pop
inc
jae
mov
push
cwtl
out
mov
adc
sub
aaa
arpl
sub
cmp
or
outsl
cld
sub
sbb
add
mov
lea
test
test
movsb
and
sub
cmp
mov
adc
out
setg
cwtl
and
xchg
int3
fs
dec
dec
push
add
pop
mov
push
out
stos
loope
add
inc
bound
sbb
je
cli
stos
fisttpl
daa
sahf
mov
inc
or
imul
pop
push
inc
nop
ror
dec
ja
ss
popf
pop
xchg
jg
insb
int
aaa
push
xor
movsb
mov
fdivr
rorb
sbb
cmp
test
out
jle
and
or
pop
jl
movsb
sbb
jl
sbb
cmp
scas
out
rclb
sti
sti
addl
enter
imul
dec
dec
pop
pop
stos
fistpll
addr16
vpmulhw
adc
lret
jno
stc
push
dec
pop
mov
adc
jo
ret
jp
push
jne
movsb
adc
test
pop
xor
xor
lcall
rcl
imul
cmc
ljmp
int
mov
cltd
icebp
cltd
sbb
xchg
stos
aas
cli
dec
sahf
mov
icebp
test
mov
int3
in
cld
xchg
push
push
mov
dec
jp
and
or
push
rorb
lock
jge
test
xor
cmp
out
dec
dec
mov
push
adc
mov
xorb
aam
js
dec
mov
pop
mov
loope
out
into
sarb
and
or
sub
nop
test
je
cmp
add
cmpsb
lcall
fmul
popaw
sbb
nop
jp
add
insl
out
jg
pushf
xorl
jne
xchg
add
mov
orb
jmp
add
mov
mov
jns
aad
subb
dec
mov
add
shll
call
mov
ret
in
mov
les
gs
fdivs
roll
popf
jge
repz
jmp
shlb
in
pop
inc
mov
pop
lahf
add
enter
xor
mov
jge
mov
mov
xor
test
mov
push
mov
push
loopne
inc
inc
repz
pop
jbe
jno
mov
push
fisubl
mov
ljmp
dec
xchg
sbb
jae
jmp
xor
sub
daa
sub
packsswb
jbe
test
insb
sti
int
or
add
push
push
jbe
fldt
js
hlt
pop
mov
int3
bound
jb
mov
pop
or
rolb
jmp
call
and
add
ret
jmp
movsb
and
xlat
les
arpl
lods
mov
and
ljmp
cwtl
xor
cld
leave
andl
rorl
pop
pop
movsb
pusha
clc
push
jge
out
sub
cmpsl
rclb
scas
mov
jge
and
fidivrl
cwtl
xchg
push
push
loopne
adc
sbb
add
sahf
pop
incb
lcall
push
pop
sub
iret
xorb
and
cmp
subl
and
and
stos
or
hlt
dec
fwait
push
stc
lds
xor
cwtl
sbb
push
mov
mov
sti
xor
dec
mov
sti
mov
push
push
bound
sbb
dec
nop
fucomip
pop
adc
es
inc
fistpll
inc
shrb
jg
fisubrl
inc
sub
push
mov
sbbb
roll
pop
adc
cmp
test
adc
cmpsb
fwait
xor
out
daa
cmp
push
jl
jge
cld
int3
loope
xchg
je
cli
ljmp
dec
in
test
ret
pop
xchg
mov
lods
and
pop
push
jle
fists
mov
mov
scas
cli
aaa
mov
xchg
ret
add
out
cltd
jb
mov
cltd
sub
fstps
inc
mov
or
mov
mov
icebp
xchg
clc
pop
int
ljmp
inc
push
inc
fbstp
mov
and
into
push
push
xchg
inc
xchg
out
mov
inc
frstor
push
sbb
xor
sbb
scas
jbe
mov
adc
mov
dec
fs
in
adc
push
fcoms
mov
fildll
or
je
adc
stc
arpl
or
adc
sub
add
xchg
or
push
subl
iret
icebp
leave
stos
mov
adc
dec
pop
cwtl
mov
inc
out
xor
add
add
mov
pop
arpl
pop
insl
inc
ds
cmp
or
test
cmc
sbb
xchg
pushf
outsl
fdivs
inc
mov
mov
sbb
test
jp
shll
cmp
inc
pop
and
cmp
hlt
mov
jbe
js
test
push
mov
add
and
mov
push
out
push
push
mov
or
xlat
mov
movsl
cmp
or
inc
rorl
jle
inc
xchg
icebp
xchg
adcb
outsl
hlt
xchg
movl
test
in
mov
adc
scas
cli
mov
cmp
es
pop
les
mov
lret
frstor
push
adc
inc
adc
xchg
dec
or
and
scas
inc
repnz
add
inc
xor
cltd
pop
adc
sub
xchg
fistpl
inc
cld
ficompl
mov
leave
or
and
xchg
pusha
gs
out
cwtl
push
out
movsb
pop
mov
int3
jecxz
dec
push
xor
xor
xchg
push
mov
jno
js
or
xor
xor
not
mov
lcall
or
dec
jns
icebp
pop
mov
fisubl
add
cmp
mov
ja
pushf
pop
les
inc
jmp
inc
lret
mov
insb
lret
mov
je
xor
into
mov
push
mov
mov
iret
pushf
out
shlb
stos
and
pop
add
pop
and
movsl
add
ja
add
pop
daa
out
lahf
popf
mov
imul
add
or
dec
les
jbe
mov
repz
orl
push
outsl
lret
add
jecxz
fs
mov
mov
cltd
inc
or
inc
mov
clc
push
adc
dec
mov
movsb
xor
psrad
arpl
cltd
test
push
add
dec
int
push
pop
xor
jo
out
popf
das
mov
ret
mov
outsl
sbb
ret
notl
lret
stos
enter
xchg
test
mov
pop
jmp
cmpsl
jmp
aas
add
shll
ljmp
rorl
fwait
call
mov
imul
shrl
fldl
and
repnz
rclb
in
jb
add
mov
gs
pop
and
or
mov
fs
mov
addr16
ds
repz
outsl
pop
mov
xchg
mov
shr
stos
loopne
imul
add
xor
xor
and
and
ret
stos
xor
push
arpl
imul
push
repnz
loop
push
je
jae
fdivl
push
or
xor
aam
hlt
js
xchg
or
add
bound
ret
sbb
adc
inc
sbb
mov
mov
imul
lret
mov
movsl
in
imul
repnz
data16
test
sbb
xor
or
icebp
add
ror
xor
clc
shlb
mov
xchg
mov
loop
push
sub
xchg
fdivl
test
add
loope
imul
imul
jae
sbbl
fcomps
fidivl
pop
and
jbe
scas
mov
sbbb
xor
aad
shlb
xchg
mov
adc
sbb
adc
xchg
push
adc
push
mov
scas
orb
mull
push
inc
dec
shll
popa
gs
inc
jl
das
stos
in
aad
pusha
sub
and
nop
in
pop
lcall
out
clc
cltd
idivb
pop
test
dec
pop
and
lret
ret
out
fs
push
fdivrp
arpl
pop
and
mov
out
xchg
jae
testb
out
out
test
andb
subl
pop
pop
pop
pushf
les
inc
hlt
shlb
dec
xchg
int
jnp
push
fldcw
adcl
and
insl
cmp
xor
add
adc
push
xchg
cvtps2pd
or
loope
imul
xor
out
cmpl
test
sbb
data16
cmc
jo
out
xchg
pop
or
nop
mov
sti
mov
pop
sahf
xchg
pop
push
add
sub
or
lock
sarb
fdivrl
ds
jl
and
dec
and
decl
movsl
int
inc
sub
dec
push
in
les
push
pop
push
sbb
and
cmp
xor
movsl
stos
dec
and
sbb
mov
mov
out
sbb
mov
and
loop
jb
test
movsl
outsl
jl
pushf
or
and
sbb
cltd
in
mov
aad
fs
dec
sbb
lcall
dec
push
mov
dec
repz
pop
cmp
jne
subl
das
ficompl
cli
or
jl
mov
andl
sbb
ja
mov
cmp
adc
push
cwtl
sub
xchg
out
jno
inc
imul
pusha
js
nop
mov
jg
xor
jmp
push
fidivs
jns
jno
std
jbe
movsb
mov
and
loopne
fiadds
add
ficoml
mov
lods
mov
cltd
push
mov
adc
mov
insl
cmp
cmp
mov
mov
test
fadds
lahf
pop
jl
dec
or
js
sub
scas
push
ljmp
or
pop
add
xor
push
add
roll
nop
add
jecxz
inc
dec
sarb
add
mov
inc
ret
repz
stos
jle
lods
in
pushf
dec
push
adc
sbb
xlat
bswap
pop
cmc
scas
and
sahf
push
add
test
mov
lods
sbb
push
insl
mov
lea
loope
fsubs
xchg
push
xchg
loopne
out
xor
pusha
cli
or
jno
insb
lods
movsl
adc
jb
pop
testb
xor
fadds
and
fisubrl
push
xchg
jl
mov
das
dec
stos
push
xor
std
xchg
stc
inc
jbe
mov
jnp
pop
ret
add
je
stc
push
xchg
add
aas
dec
add
leave
les
cs
mov
lea
jge
xor
loopne
xchg
cwtl
subl
call
pushf
adc
pushf
cmp
and
mov
call
mov
xor
xchg
push
rcll
cmp
push
into
test
int3
imul
out
aam
mov
out
cmp
or
sbb
and
sbb
sbbb
and
lods
nop
cmpsb
or
and
xchg
cmpsl
mov
out
lea
rcr
jmp
imul
movaps
jp
outsb
adcb
insb
jne
jl
in
sarb
sub
mov
mov
cmp
cmpb
test
inc
mov
lock
add
xor
inc
rcll
fwait
push
inc
shll
jle,pn
mov
sub
mov
push
push
push
jnp
xchg
faddl
fstps
dec
mov
dec
insb
and
pop
sbb
sarb
pop
ficompl
push
cmp
out
loop
dec
xchg
arpl
lods
fidivrl
cmpsl
jne
jae
mov
shll
shl
test
cld
xchg
cmpl
pop
int
arpl
mov
jo
add
push
xchg
shl
sbb
rorb
pop
call
mov
fwait
mov
lea
clc
push
addr16
movsb
mov
push
pop
push
stc
sub
dec
mov
lods
mov
sub
jns
mov
jne
mov
and
ret
out
mov
fdivrp
clc
mov
leave
aad
cmp
mov
ds
sbb
imul
cmpsb
decb
orl
loope
loopne
sbb
jbe
sub
mov
xor
xchg
push
int3
cmp
pushl
mov
orb
loopne
sbb
sub
inc
and
mov
and
jl
sbb
in
int
ficompl
jp
jne
jp
fst
push
mov
icebp
adc
imul
fldt
and
mov
inc
jae
std
inc
insb
pusha
dec
lret
jb
pop
ds
mov
xchg
mov
scas
inc
js
xor
mov
aaa
and
mov
cmp
pop
dec
inc
sbb
dec
enter
cmp
mov
or
pop
ficomps
pop
push
xor
jp
or
inc
out
sub
mov
out
push
fsubr
mov
sbb
xchg
mov
rcrb
push
or
mov
ljmp
xchg
outsl
ds
lret
mov
dec
pop
insl
shlb
add
push
mov
test
je
cmp
pop
mov
add
lods
jns
xor
xchg
mov
icebp
lret
dec
scas
loope
xchg
movsl
pop
xchg
pop
xchg
xchg
xchg
fs
stc
fincstp
sbb
or
lods
or
sub
or
dec
xchg
sub
cs
iret
jo
push
jmp
shlb
and
insb
mov
cli
cwtl
rclb
inc
into
mov
repnz
or
outsb
add
test
pop
cmp
and
fcoms
pop
cld
cltd
out
xor
add
sbbl
add
sub
movsb
xor
mov
xchg
ret
xor
mov
jp
movsl
popf
add
pop
add
dec
jl
arpl
das
fcmovne
fdivrs
mov
dec
or
or
in
scas
fmuls
fsubr
adc
shrl
imul
aam
filds
sti
dec
fcomps
push
iret
jmp
xchg
dec
xor
scas
std
sarb
add
sbb
cmp
mov
sub
aas
fildl
sbb
scas
jmp
jo
sub
out
and
dec
push
data16
flds
xor
push
imul
inc
int3
and
cmp
push
xchg
xor
xchg
jg
mov
sbb
shrb
inc
fcoms
aas
xchg
and
mov
movsl
fincstp
mov
and
fcmovnb
sbb
les
lock
fisttpl
xor
sbb
mov
jmp
cmc
dec
mov
cli
xor
xor
adc
xchg
jl
movsl
movsl
fstl
dec
inc
inc
push
scas
fdivrs
loope
xor
sbb
pop
sbb
or
push
pop
pop
cmp
test
popl
jbe
jnp
imul
sub
out
cmp
or
mov
cwtl
jp
mov
test
movsb
push
in
out
imul
push
push
out
jo
xor
test
adc
jmp
mov
sbb
xor
rorl
pop
cs
sub
xor
inc
push
add
pop
mov
mov
in
sbbb
sbb
iret
stos
jmp
insb
dec
in
mov
ja
shl
pop
dec
aam
add
dec
aad
and
add
and
mov
cmp
xchg
mov
mov
negl
es
push
jle
call
call
cmpsl
lds
mov
jnp
test
notl
xchg
lock
je
cld
adc
rcr
push
pushl
hlt
mov
inc
push
adc
or
xchg
sub
dec
and
shll
mov
mov
cltd
pop
repz
data16
adc
sub
into
push
shlb
stc
mov
xlat
cmp
or
dec
xlat
mov
inc
pop
push
xchg
sti
xor
addr16
rcrl
mov
popf
dec
pop
movsl
imul
lods
aam
fstps
xor
in
inc
push
jnp
pop
aaa
sub
mov
cmp
sbb
jnp
sbb
ja
xchg
fwait
sbb
mov
fwait
es
pop
je
mov
dec
enter
mov
sbb
leave
xchg
cld
sub
sbbb
mov
scas
loopne,pn
jnp
clc
fs
mov
leave
test
aas
sub
mov
mov
inc
cli
ljmp
fmull
fdivrs
sub
jne
and
lret
fucomip
or
mov
and
insl
cld
mov
fwait
xor
mov
fwait
push
dec
adc
inc
aam
repnz
dec
pop
out
cmpl
dec
mov
jb
rcrl
xor
mov
sub
aam
ss
and
sbb
outsb
daa
cmp
push
insl
mov
mov
or
add
xchg
add
call
mov
mov
xchg
pop
call
lods
mov
push
lahf
and
fs
cs
jnp
mov
mov
sub
shr
negl
add
cs
xchg
sub
xchg
add
mov
cmp
add
call
insl
loopne
inc
push
push
arpl
ret
inc
vpunpcklwd
fmul
mov
push
dec
fs
ljmp
je
mov
ds
xchg
cmc
in
xor
mov
mov
mov
mov
outsl
nop
pop
fidivrs
push
push
loope
pop
call
mov
sarb
sbbb
mov
push
sbb
jecxz
jns
inc
mov
push
mov
test
xchg
add
in
mov
xor
cwtl
adc
repz
push
cli
jmp
sub
push
mov
sahf
mov
cli
loopne
cmp
cmp
repnz
adc
pop
fists
lock
in
mov
aaa
arpl
add
xor
cli
aad
mov
dec
lcall
sti
adc
xchg
pop
xlat
xchg
outsl
jecxz
or
jne
push
or
shl
bound
setnp
lds
or
loop
or
mov
mov
cmpsb
dec
push
pop
mov
mov
jg
xor
movsl
mov
std
insl
ffree
pop
popf
and
add
rcll
push
xchg
push
aaa
sbb
push
neg
out
sbb
out
shr
es
addl
mov
repnz
or
lods
inc
dec
popa
jmp
jl
aad
idivl
fcoml
cld
das
xchg
and
push
insb
fcoml
bound
js
sbb
inc
mov
mov
or
xlat
jmp
fdivrl
push
pop
push
jnp
add
and
lret
ds
in
sbb
jo
jno
out
pushf
jmp
dec
mov
xchg
inc
out
sub
out
mov
fst
jnp
cmp
sbb
jp
bound
popf
xchg
rcll
xchg
sub
jno
mov
clc
aaa
enter
mov
push
fisttpll
rclb
push
adc
or
data16
add
ret
loop
xchg
jecxz
je
jno
jnp
pop
mov
test
adc
fwait
shlb
test
mov
jmp
outsb
imul
les
sub
pop
stc
shll
leave
dec
fyl2xp1
cwtl
add
test
aad
adc
shll
xor
mov
and
gs
mov
cmp
out
int
dec
adc
out
cmp
pusha
fwait
cmp
arpl
jbe
outsl
and
jmp
push
cmp
out
xchg
insb
pop
dec
sub
incb
xchg
pop
loopne
test
cld
sbb
les
xlat
fists
cmpsb
mov
out
es
negl
pop
and
mov
push
call
mov
aas
in
sti
mov
xchg
popa
test
mov
test
mov
aam
roll
sar
cmpsb
push
xor
pop
mov
cld
or
sahf
push
loopne
push
lods
test
lret
bound
push
jb
ret
lds
lret
push
fucomp
cmc
pop
in
das
loop
lahf
popa
xchg
js
test
and
cmp
lock
lea
sbbb
into
lods
mov
dec
stc
push
fmulp
lcall
movsl
movl
test
pop
fdivrl
pop
adc
sbb
popf
mov
insb
scas
sbbb
xor
mov
jne
jnp
or
test
enter
scas
cltd
xlat
pushf
cmpb
cmp
test
sub
mov
push
push
sar
and
iret
inc
add
dec
in
das
shl
add
mov
insb
in
stos
movsl
aas
in
xorl
cmp
inc
push
call
leave
cltd
sub
ss
clc
sar
mov
mov
rolb
xor
sahf
imul
repz
in
stc
stos
mov
mov
fdiv
cs
in
cwtl
push
ljmp
gs
les
sbb
add
mov
cmp
pop
call
pop
bound
in
mov
adc
sahf
inc
lods
pop
inc
out
popf
scas
data16
inc
mov
cwtl
dec
jo
add
int
insl
mov
inc
negb
scas
jo
stos
adc
ds
fwait
je
and
push
stos
add
xor
jecxz
push
repnz
jns
or
xor
ljmp
inc
dec
or
xchg
inc
sbb
data16
in
inc
cld
das
jo
push
stc
std
pop
pop
stos
lcall
push
js
out
xlat
mov
pop
jp
sub
jo
imul
jle
test
pushf
sbb
push
or
jae
push
mov
xor
push
dec
pop
int3
cmc
lds
lock
jae
pushl
outsl
jbe
mov
push
mov
in
mov
fcoml
and
add
cmpsl
cld
loopne
xchg
mov
nop
and
add
mov
aas
cltd
fs
pop
mov
pop
outsb
jg
xor
xor
jg
mov
fisttpl
test
lods
iret
cwtl
ja
mov
inc
rolb
push
and
addr16
push
jmp
adc
scas
stos
lds
mov
and
or
movsb
mov
ret
inc
sbb
lods
lahf
and
inc
and
aaa
in
jl
cwtl
sub
mov
out
fsubl
cltd
cld
ja
and
out
mov
mov
sbb
mov
adc
insb
pusha
inc
fldl
cmp
stos
insb
nop
inc
sub
add
jle
fcoms
jns
push
sub
sub
pop
movsb
dec
daa
dec
int3
lret
xchg
and
addr16
mov
lds
mov
mov
insl
and
inc
in
mov
dec
in
and
inc
sbb
insl
es
iret
scas
lods
scas
lds
add
mov
sbb
push
out
pop
loope
mov
push
xor
std
jnp
or
push
nop
mov
lods
cld
xchg
adc
stos
out
jl
cwtl
mov
fwait
sbb
out
sub
add
dec
fs
xor
dec
pop
icebp
shll
sbb
ss
leave
sbbl
frstor
movsb
cmpsl
adc
add
shrb
shlb
cmp
mov
and
xlat
shl
xchg
mov
sub
adc
stc
icebp
mov
mov
mov
cmpps
jp
sbbl
stc
sbb
pop
rcrb
sub
pop
pop
arpl
movsl
xor
push
adc
insb
into
sub
inc
mov
or
out
rorb
mov
out
mov
sbb
jbe
pop
mov
jo
out
pop
adc
lods
sbb
inc
pop
lds
in
cmc
pop
inc
out
dec
cld
xor
jmp
jo
leave
or
lea
jmp
and
loopne
xor
test
decb
cmp
adc
cmp
adc
js
jno
shrb
push
jecxz
xchg
in
xor
jae
es
adc
dec
je
jecxz
jge
arpl
push
jns
imul
jmp
xor
int
jns
lcall
sbb
xor
ja
fdivr
xor
rclb
cs
mov
sub
mov
sbb
orb
bswap
jno
push
sti
pushf
xchg
sbb
roll
push
ss
outsb
pop
loope
outsl
lods
mov
mov
xor
mov
mov
push
adc
xor
mov
jbe
into
mov
mov
sub
push
ret
mov
out
ds
cmpsb
repz
xchg
sub
xor
out
jno
pop
loop
jge
pop
push
sub
and
xchg
push
fiaddl
movsl
ret
mov
pop
fists
xchg
inc
inc
cli
movsb
cmp
sub
push
cmp
inc
xchg
jnp
mov
push
shl
aam
mov
inc
mov
shll
in
popa
insl
nop
and
sub
cmpsl
xor
loop
jae
and
adc
push
push
movsl
mov
push
loope
sub
mov
mov
push
adc
imul
dec
mov
test
pop
xchg
sbb
mov
xchg
mov
jl
mov
outsb
jbe
aas
xor
les
imul
test
mov
daa
or
xchg
sahf
add
fwait
add
ret
mov
jmp
and
fistl
imul
push
sahf
or
inc
pop
inc
iret
testl
in
int
push
js
xor
adc
icebp
fsubrs
stos
adc
aam
mov
or
nop
into
subb
xchg
gs
shll
sar
les
aaa
mov
or
dec
adc
cmp
inc
jo
inc
fistps
and
repz
pop
sti
es
ret
xor
rcll
sub
je
cmpsl
jo
rorl
cmp
pop
adc
xor
push
mov
sub
aas
push
arpl
inc
add
xchg
aas
add
fldt
icebp
push
sbb
call
cmc
aas
clc
lods
push
sub
push
add
add
pop
adc
enter
mov
sbb
xchg
popa
call
xchg
jb
xchg
es
cmp
inc
push
andb
fidivl
int
or
sbb
xchg
and
xor
mov
das
leave
cmp
sbb
dec
pop
in
mov
test
mov
ds
adc
mov
sub
pusha
adc
insl
push
rcr
adc
jp
pop
xchg
fcmovu
cs
sbb
sbb
adc
imul
pop
adc
addl
push
ret
cmpsl
mov
sti
cmp
scas
add
pusha
mov
jbe
rcll
shlb
adcl
mov
imul
push
or
clc
mov
cmp
mov
sbb
sub
sub
stos
sbb
fldt
mov
and
arpl
cli
subl
fwait
sub
adc
mov
cmpsl
int
cmpsl
xchg
adc
aad
iret
mov
pop
push
or
outsl
dec
push
inc
repz
mov
mov
cld
dec
cmpsl
imul
shlb
jb
xor
jmp
loopne
sbb
xor
add
inc
iret
mov
and
add
cs
ljmp
mov
xchg
cmp
push
xor
push
jecxz
into
or
sbb
popa
outsb
cmp
pop
add
lods
in
jae
clc
push
rclb
xchg
mov
imul
mov
push
loop
test
mov
enter
lock
fwait
in
outsl
cltd
imul
dec
mov
jnp
mov
mov
lcall
daa
xlat
mov
movsb
js
sbb
sahf
outsb
mov
push
enter
stos
push
add
sub
push
in
xor
ffreep
or
fsubrs
mov
adcl
xor
ljmp
adc
nop
mov
hlt
in
fadds
jne
scas
jno
xchg
xor
pop
cmpsb
xor
fisttps
sahf
fcmovnbe
hlt
js
mov
adc
inc
mov
pusha
movsl
push
in
dec
cmp
int3
mov
test
daa
movsl
push
in
inc
int3
lret
js
cmp
dec
lds
adcb
jb
adc
jl
jp
xor
loopew
aas
rcrb
cmp
lret
int3
cmpsb
imul
add
lock
push
mov
cmp
xlat
dec
scas
xor
addr16
gs
fs
push
jmp
mov
es
push
ror
repnz
call
pusha
in
insl
nopl
mov
aad
mov
and
inc
stos
xor
enter
dec
std
scas
ret
dec
rcr
xchg
xchg
pop
dec
test
xchg
arpl
arpl
lds
and
cmp
jp
jo
jle
in
xchg
ss
add
test
adc
bound
sarb
ret
or
je
into
hlt
inc
aaa
rcrb
fucomip
scas
cltd
jne
xchg
xor
fldl
loope
fnsave
aaa
cmp
pop
sbb
stc
mov
mov
sub
dec
pop
pop
scas
push
mov
mov
xchg
mov
ret
test
stc
fstpl
hlt
leave
adc
ljmp
lds
add
mov
xchg
rcl
std
push
loope
xorl
popa
lcall
or
mov
out
sarl
out
in
push
add
int3
fwait
sub
cmc
pop
imul
xor
xchg
mov
inc
sbb
adc
cli
jecxz
mov
jnp
add
dec
jg
mov
push
sub
push
outsl
adc
nop
xchg
dec
push
pop
or
adc
aad
jne
fdivl
subb
add
fstps
adc
xlat
rcrb
or
pop
jecxz
xchg
rcrb
mov
imul
or
mov
sbb
jecxz
mov
es
xchg
bound
sbb
hlt
std
test
jecxz
inc
adc
stc
add
lret
pop
dec
sbb
sbb
jns
test
or
test
sub
cmc
jae
popl
stos
sbb
cmpsl
add
lret
imull
mov
cmp
test
jb
popf
push
repnz
pusha
push
xchg
mov
dec
test
stc
sub
mov
fcompl
test
mov
xchg
xorb
sub
adc
xor
add
movsl
inc
test
cmpsl
or
jg
and
adc
lcall
scas
xor
xchg
mov
xlat
dec
mov
dec
mov
xchg
mov
xor
sbb
lcall
addb
sub
adc
aas
leave
cmp
sti
and
lea
add
push
ss
mov
and
xlat
push
and
fs
fstps
xchg
and
or
loopnew
dec
push
sub
mov
sti
insl
adc
call
dec
aam
enter
sahf
iretw
mov
imul
cmp
push
pop
dec
adc
lret
data16
push
daa
push
ljmp
lcall
sub
mov
roll
roll
dec
ret
adc
add
or
mov
dec
test
aam
fistpll
mov
pop
mov
cmp
lea
mov
mov
pushf
xor
into
fdivr
mov
loop
mov
sub
lea
cli
out
cmp
inc
jle
inc
js
stos
test
call
push
dec
jge
aam
cmc
or
sub
test
imul
add
test
bound
and
sub
jmp
imul
sub
fwait
xor
xor
xchg
add
outsb
in
or
sbb
not
inc
and
push
call
pop
stc
ds
movsl
ret
and
int3
call
call
insb
cs
js
stos
mov
gs
mov
js
push
cmp
ja
push
mov
push
aas
aas
inc
sbb
jbe
cltd
push
mov
sti
dec
cwtl
and
cmpsl
pop
xchg
fcomps
xor
xchg
xor
rcrb
pop
xlat
addl
shlb
ret
pop
out
and
sub
mov
push
inc
xor
pop
aaa
arpl
movsl
xor
dec
lock
shr
shl
push
cmp
rcr
dec
add
mov
mov
cld
lods
cld
pop
pop
mov
lds
js
mov
xchg
push
sub
sub
pop
xor
push
inc
add
stos
jge
gs
adc
mov
mov
pop
lret
jmp
xchg
dec
scas
ficoml
int3
dec
scas
clc
pop
cs
xor
loop
es
cld
jno
or
hlt
xchg
xchg
dec
aad
dec
pop
js
movsl
shlb
jp
sbb
mov
int
popa
adc
movsb
test
mov
pop
or
or
psllw
mov
pop
or
insl
insl
add
mov
sub
daa
cmp
sbb
dec
in
loop
mov
inc
jmp
movsb
push
fistpl
int
or
js
xchg
pop
sub
mov
pop
loope
leave
cld
adc
lahf
adc
cli
enter
insl
enter
aam
gs
dec
cltd
push
xlat
ss
int3
ss
bound
pop
jo
into
inc
lds
mov
out
jl
sbb
xor
sub
sbb
cmp
add
mov
push
inc
dec
movsb
xchg
sbb
add
bound
dec
mov
pusha
js
pop
xchg
ret
pop
pop
js
adc
scas
xchg
pop
sti
test
jnp
mov
arpl
lahf
invlpg
je
iret
mov
loope
fisttpll
cli
lods
outsb
shrl
and
lahf
xor
in
insl
fstpt
in
pop
mov
test
sbb
push
xor
push
fstl
je
dec
dec
fisubrl
sub
popa
jecxz
jp
mov
ljmp
and
sub
push
jbe
stos
popa
mov
shll
pop
je
inc
orb
add
sub
in
arpl
pop
fs
xchg
loopne
mov
push
mov
in
test
sahf
jl
inc
cli
scas
mov
jle
mov
dec
xchg
or
hlt
daa
sbb
in
clc
jmp
loop
fstps
mov
or
outsb
add
sbb
xor
xchg
inc
cmp
ljmp
jge
repz
mov
stc
js
mov
push
xchg
test
out
ret
test
xchg
pop
push
jae
jge
outsl
push
out
add
mov
pop
xchg
adcb
aaa
pop
sub
andl
std
cvtps2pi
and
jle
xor
inc
inc
add
pop
popf
pop
inc
int3
add
mov
push
add
cmp
insb
mov
pop
xchg
aaa
int
mov
aam
rcrl
xorl
sbb
lret
js
sar
dec
ret
and
es
bound
leave
cmp
or
xchg
pop
cmpsb
ss
mov
jne
sbb
bound
dec
shlb
std
mov
dec
xchg
adc
shr
repnz
mov
push
hlt
cmp
lret
inc
push
jge
cmp
cs
pop
fisubl
xor
jg
push
sub
push
insl
cli
sub
sbb
xchg
hlt
or
xor
push
cmp
pop
xchg
jns
xor
add
ja
add
cmp
cmc
and
mov
lods
in
mov
clc
sahf
jnp
push
mov
add
lret
xor
sbb
inc
stos
inc
daa
cmp
sbb
lods
cmp
sbb
or
push
or
lret
push
mov
sub
adc
push
xchg
dec
mov
outsl
xchg
push
int3
cli
xor
push
mov
pop
jge
sbb
lods
shll
xor
adc
scas
xchg
pusha
and
adc
test
push
dec
adc
cld
and
mov
cmp
lcall
mov
mov
mov
rep
es
aaa
add
push
jle
test
mov
mov
mov
cmp
ljmp
test
movsb
pop
fnstcw
negb
ds
testb
sahf
imul
stos
mov
lret
or
mov
xor
movsb
jg
xor
jle
movsb
or
sahf
ljmp
jge
hlt
fidivs
push
add
jmp
lahf
xor
xchg
dec
mov
inc
jle
sarl
test
xchg
ja
adc
je
mov
xchg
fnstsw
leave
mov
fists
sbb
push
sub
or
cld
mov
sub
jge
pop
push
shl
repnz
cld
hlt
sahf
test
lret
ss
dec
xor
push
or
lods
cld
js
or
inc
mov
fbstp
pop
inc
xchg
sahf
testl
pop
or
rcl
fs
out
and
push
or
sbb
or
xor
inc
mov
dec
jae
mov
ret
cli
outsl
push
ds
inc
mov
and
xchg
jnp
add
int3
pusha
sahf
adc
repz
out
int
xlat
fcoml
aas
jge
xchg
negb
push
ss
pop
dec
int3
and
mov
dec
ds
inc
cld
dec
daa
fdivl
hlt
push
xchg
lahf
add
outsl
inc
adc
and
xor
insb
adc
add
ficompl
call
dec
lahf
in
int3
negb
or
cli
dec
mov
or
sti
pusha
test
xchg
sbb
jns
xorl
out
or
sahf
mov
fdivrs
jg
sbb
jecxz
pop
sbb
imul
or
pushf
cli
cmp
les
imull
int3
xchg
out
daa
jmp
sub
dec
xchg
scas
das
sub
xor
mov
adc
dec
in
add
ret
test
stos
aam
pop
push
dec
nopl
ja,pt
in
fimull
sbb
adc
mov
pop
push
xor
dec
jecxz
jmp
pusha
in
jns
mov
hlt
add
das
test
ljmp
jne
cld
pop
push
cmp
scas
sbb
movsl
fsts
imul
shll
sub
cli
and
inc
push
cmp
mov
sbb
or
dec
imul
xor
cmp
mov
dec
nop
stos
sbb
fucomp
loopne
push
xchg
inc
cwtl
push
iret
shrl
mov
cwtl
inc
mov
cmp
and
ficoml
or
push
or
xchg
in
call
or
inc
rcrb
adc
sarb
add
jp
xor
cmp
lods
in
dec
cmc
inc
repnz
ret
add
pop
jb
insb
out
icebp
cmpsl
aas
add
lods
mov
loop
arpl
lods
cltd
fs
push
xchg
dec
aaa
mov
dec
push
mov
call
mov
pusha
bound
and
jno
adc
xchg
frstor
push
dec
in
cmp
or
fstl
push
push
sub
and
add
jecxz
vcomisd
in
popf
lea
bswap
push
pushf
dec
aad
jmp
mov
cmp
push
cmovb
and
lea
mov
addb
jge
cmp
cli
cltd
stos
sub
imul
test
cltd
mov
bound
or
push
pop
lods
adc
cmp
mov
pop
push
das
cmp
mov
dec
fildll
daa
orb
push
dec
out
jg
mov
lds
lods
lret
popf
dec
pop
adc
mov
jecxz
xchg
mov
scas
mov
cmp
pop
fisttpll
es
in
negl
out
push
scas
cltd
sahf
in
sti
sahf
cmp
sub
sub
aad
sbb
loop
adc
adc
cmp
jmp
out
cmpb
in
stos
xor
out
aam
loope
push
or
mov
pop
rclb
test
pusha
shrl
or
mov
inc
pop
xor
sub
int3
sub
out
push
icebp
ljmp
mov
sbb
inc
xchg
jecxz
cmp
dec
push
pop
mov
inc
jae
xchg
in
push
jmp
push
mov
mov
inc
hlt
inc
sub
dec
pushf
or
push
sbb
enter
cmc
leave
iret
adc
jmp
out
outsb
sar
push
dec
adcl
pop
inc
dec
outsb
lods
jb
mov
clc
clc
jae
xlat
sbb
xchg
jno
orb
lret
push
sbb
je
cmc
fstl
iret
push
sar
lds
xlat
mov
ret
dec
add
push
es
mov
xor
sbb
mov
lcall
pop
in
mov
pop
into
add
and
bound
pop
fsts
or
push
xchg
inc
push
inc
adc
rorb
shrl
pop
dec
rorb
sbb
lock
xchg
jge
pop
lock
mov
lea
pop
xchg
push
push
push
jns
mov
in
fldcw
jns
xchg
ljmp
push
fabs
xor
int3
xchg
testl
loopne
mov
lcall
movsl
mov
sbb
lahf
cmpsl
aam
pxor
pop
jl
pushf
movsl
sub
stos
js
movb
xor
sahf
jge
movsl
lea
sub
sbb
std
pusha
dec
xchg
ja
hlt
inc
rorb
lret
out
xor
mov
insb
jo
mov
mov
pop
fwait
fs
cmc
mov
mov
jo
mov
mov
jno
movb
insb
mov
jl
mul
jb
fstpt
mov
xchg
mull
inc
cmp
pop
sub
gs
ja
xchg
or
add
add
enter
in
mov
mov
jecxz
fcmovu
je
cmp
daa
pop
stos
mov
das
push
ja
inc
aad
cmc
addr16
out
outsl
xchg
sbb
and
mov
dec
jge
pop
fidivl
push
and
repz
or
cmp
and
mov
pop
pop
xor
fmull
iret
pushf
inc
sarl
fimull
scas
sbb
imul
ret
mov
stos
xor
ja
int3
push
xor
test
dec
shr
push
sahf
xchg
shr
pop
and
push
xchg
cwtl
jmp
enter
fs
lret
cmpsb
dec
push
aam
xor
xchg
rolb
jg
imul
divb
or
dec
imul
xor
xor
pop
mov
and
or
mov
fidivrl
pop
outsb
loop
push
roll
cmp
mov
lea
ffree
mov
jp
and
adc
add
or
sbbb
push
ds
xlat
dec
popf
push
cs
outsl
pop
sbb
leave
cmp
cmc
in
imul
dec
xchg
jge
or
out
mov
js
ret
mov
mov
popa
pop
addr16
aaa
sbb
aas
das
sub
gs
dec
js
mov
mov
adc
jne
lods
clc
lret
pop
std
and
mov
jmp
adc
sbb
mov
add
sbb
icebp
mov
cmc
adc
outsb
jbe
cmp
rorb
lods
int
xchg
xor
fsubrs
std
or
and
pop
adc
pop
mov
fcomip
int3
mov
xchg
mov
mov
mov
std
ret
daa
adc
mov
rclb
mov
sarl
pusha
imul
test
cmp
sbb
pushf
xchg
dec
incl
and
xchg
mov
outsl
in
push
mov
js
mov
jl
hlt
pusha
jg
fistpl
lahf
mov
mov
xor
into
xor
or
inc
scas
dec
aam
jns
pop
sub
fidivrs
xchg
sub
inc
and
xchg
sahf
adc
sub
das
dec
int3
outsl
loopne
not
dec
fadds
out
lahf
fcomps
add
fcmovnbe
adcl
insl
mov
push
in
scas
outsb
jmp
in
in
push
aad
sbb
mov
inc
adc
cld
sub
mov
test
xchg
jl
loopne
add
push
shll
add
xchg
mov
lods
dec
jo
fwait
add
lcall
fmuls
jp
adc
pushf
mov
mov
xchg
and
loopne
sarb
or
pusha
cmc
out
je
jmp
sar
jmp
js
aam
std
sbb
xorps
jecxz
jb
push
bound
int3
adc
or
ret
cli
movsl
daa
ret
nop
cmpsl
push
or
or
jb
adc
inc
jge
in
mov
enter
pop
loopne
mov
and
ljmp
cmp
jae
daa
das
inc
cmpsl
sub
mov
xchg
mov
out
jg
mov
lea
pop
push
addr16
fsubrl
pop
jmp
loopw
lock
adcb
xchg
lea
lock
pusha
xchg
xchg
popf
clc
div
mov
movsb
push
fs
lahf
add
cwtl
je
mov
cwtl
mov
fwait
sbb
dec
jecxz
or
bound
pop
push
jae
mov
popf
dec
repnz
jmp
mov
sub
pop
and
inc
imul
mov
scas
add
jnp
xchg
imul
mov
fildl
rorl
notb
mov
mov
div
lods
fs
mov
and
je
sahf
dec
jp
mov
or
vcmpss
das
inc
add
mov
xchg
push
mov
pop
cld
bound
loopne
imul
mov
xchg
fcoml
mov
bound
inc
lock
or
cmc
mov
imul
test
in
scas
arpl
pop
je,pn
mov
test
mov
std
xor
outsl
cltd
adc
adc
mov
mov
jmp
aam
in
pop
dec
sahf
int3
add
or
mov
adc
test
inc
call
ret
pop
test
sbb
daa
imul
mov
aas
cltd
test
shr
xorb
or
rorl
sbb
pop
loope
cmp
lods
stos
xchg
test
add
notl
inc
mov
loope
inc
cmp
ja
mov
inc
sbb
lods
jns
cwtl
cmp
mov
inc
repz
in
jb
repz
bound
sbb
cmp
mov
sub
dec
adc
filds
movsb
adc
xchg
mov
push
pop
xor
adc
dec
xor
mov
repnz
aad
js
inc
inc
fbstp
stos
subb
lret
dec
lcall
jns
xchg
sahf
rorb
dec
gs
jo
jae
sbb
mov
inc
sbb
pusha
daa
ret
mov
gs
aad
mov
adc
notl
lds
mov
jne
cltd
clc
ret
inc
leave
ss
xchg
and
xor
imull
xchg
inc
and
xorb
hlt
stos
ds
jo
adc
and
mov
mov
xor
cld
clc
adc
push
cwtl
outsl
stos
test
outsl
mov
mov
jg
xchg
lcall
stos
pop
pop
inc
or
jmp
sub
bound
int3
push
call
imul
dec
or
rcrl
mov
xchg
pop
cmp
pop
xlat
xchg
cmp
loopne
arpl
jecxz
add
fidivrl
push
inc
cmp
adc
sbb
jg
lods
dec
repz
jp
hlt
dec
mov
icebp
push
fs
popa
fs
and
imul
adc
test
orb
xchg
roll
adc
inc
xor
negl
loopne
mov
enter
rcll
push
jno
lea
xchg
dec
stos
es
ss
ljmp
jns
rorl
sbb
stc
mov
idiv
cmp
or
cmp
jno
sub
mov
jne
es
add
inc
add
mov
mov
jb
and
in
js
je
sarl
dec
mov
fsubr
and
jno
icebp
out
les
mov
loop
mov
stos
fldenv
testl
xchg
xor
jp
and
loope
mov
pop
push
lods
cli
lret
jo
std
mov
es
lret
es
sbb
std
mov
jp
and
cwtl
fwait
sbb
cmpsb
out
pop
lahf
aad
jle
mov
in
lods
pop
mov
mov
xchg
in
jmp
jge
xchg
loope
sti
sbb
js
cs
mov
dec
aas
daa
push
das
adc
push
arpl
pushf
cmp
or
lds
mov
icebp
add
sbb
jb
dec
lcall
push
jne
xchg
lret
jecxz
imull
cmc
rcrl
subb
fnstenv
loope
nop
outsl
dec
shlb
xor
and
jmp
inc
fsts
mov
das
orl
push
ljmp
add
iret
or
stos
or
xchg
icebp
cmp
add
in
add
hlt
sbb
inc
jnp
outsb
dec
and
shr
or
es
sbb
icebp
outsb
dec
sbb
gs
cmp
hlt
lret
ljmp
std
mov
xchg
pop
sub
xchg
cmpsb
cwtl
addl
jae
xor
sbb
dec
sbb
int
out
repz
add
pushf
sbb
shr
jbe
inc
jb
inc
cli
pop
dec
jo
mov
fldenv
in
mov
out
pop
add
adc
xor
push
pushf
add
loop
mov
pop
outsl
fstl
adc
pop
pop
inc
rcr
dec
lds
pop
ljmp
adc
add
lods
jmp
test
scas
lds
scas
inc
sub
lock
jmp
icebp
repz
cmp
test
mov
add
cld
dec
repnz
xchg
mov
mov
pop
sbb
pop
pop
rorb
mov
or
mov
mov
adc
jl
mov
mov
repnz
push
lret
and
xchg
push
jae
mov
outsl
jmp
jne
aaa
jo
movsl
cld
out
add
jnp
cs
and
push
xlat
jo
xchg
push
pop
jbe
xchg
cmpsl
mov
xor
xor
and
mov
mov
das
sub
iret
mov
xor
and
loop
lret
mov
dec
xor
setg
cmp
movsb
lahf
inc
in
pop
push
es
enter
daa
scas
rcll
sub
and
out
fdivl
inc
adc
ljmp
cwtl
xchg
inc
cmp
push
pop
mov
ja
stos
push
sahf
gs
mov
lods
dec
or
pop
cmpsb
daa
xor
cmpsb
cmp
arpl
mov
xchg
xor
fisubrl
lock
hlt
lds
jae
enter
in
push
dec
scas
and
jge
shll
in
fnstenv
data16
pushf
add
outsl
dec
stc
or
lcall
pop
sbb
dec
cs
test
add
dec
andb
jmp
jp
fisubs
addr16
fimull
mov
repnz
inc
add
dec
pop
or
stc
pop
movl
ljmp
call
pop
xor
xchg
pop
push
push
lea
test
insb
movl
cmp
push
data16
in
inc
jecxz
add
pop
in
popa
into
shrl
push
mov
adcl
imul
movsb
call
jb
fdivl
data16
fistpll
or
inc
inc
in
jle
mov
imul
test
mov
pop
and
dec
pop
sub
push
sub
mov
push
das
jg
hlt
fcompl
roll
scas
sub
sbb
pop
xchg
or
lds
aas
adc
xchg
xchg
je
and
cmp
in
push
js
imul
in
out
xlat
leave
pop
xchg
or
icebp
mov
jl
mov
lret
inc
jns
inc
mov
aas
mov
adc
dec
lds
mov
sbb
mov
shrb
xor
jbe
jl
or
pop
pop
dec
cmp
mov
or
push
ret
cwtl
jnp
scas
xchg
jae
stc
push
mov
arpl
out
push
test
leave
fsubrs
movsl
aas
mov
loopne
xor
in
xor
clc
sub
stc
and
out
push
add
mov
mov
fbstp
jnp
cmc
loop
sti
and
movsl
lea
movsb
jecxz
dec
mov
xchg
repnz
adc
mov
fidivrs
sub
jmp
sbbl
test
rcrb
outsl
jo
adc
aam
inc
sarl
sbb
and
xor
xchg
stos
xchg
lret
and
fistpl
pushf
mulb
push
leave
pop
sar
and
mov
fdivrp
cltd
xchg
mov
jns
pop
pop
mov
jle
add
jp
cmp
push
insb
stos
aaa
js
out
sbbl
lods
sub
in
ds
dec
fwait
movsl
int3
je
jo
mov
and
sub
mov
clc
jp
mov
ja
xchg
or
and
pop
mov
pop
in
stos
enter
movsl
pop
rcrb
push
or
mov
xchg
sbb
clc
inc
popa
cmp
movsl
sbb
inc
lret
xor
out
sbb
mov
mov
pop
jle
pop
popa
inc
in
aad
nop
ljmp
push
push
xor
loop
sub
pop
xchg
or
data16
jmp
inc
cmpsb
jo
and
cmp
jb
and
pop
jno
loope
flds
mov
jae
in
cmc
xlat
pushf
iret
fldenv
mov
outsb
mov
xor
test
insb
fldenv
xor
mov
std
inc
dec
inc
gs
xchg
mov
mov
loopne
xorb
test
js
data16
lret
inc
pop
popf
subb
mov
int
inc
or
pop
xchg
or
fildll
in
jnp
test
xchg
imull
push
repnz
jnp
dec
inc
or
sbb
pop
enter
popa
jmp
loope
push
insl
testl
outsl
lock
sub
xor
pop
and
div
fnsave
adc
dec
js
sti
inc
xchg
pop
mov
fwait
mov
fwait
dec
push
lods
dec
cmpsb
sbb
dec
cmpsl
arpl
scas
sahf
nop
addr16
adc
movsl
add
mov
dec
fdivs
psubw
adc
mov
fisttpl
test
sbb
mov
lret
sub
sbb
das
pushf
sar
cmp
pop
sbb
insb
and
cmc
sub
xlat
xor
daa
ftst
or
loop
mov
mov
push
lcall
sub
add
lds
jno
sub
adc
icebp
xorl
push
cmp
inc
mov
lds
sbb
loopne
fsubl
cmp
or
xchg
out
jmp
jle
xchg
loope
subl
jg
test
loop
jbe
insl
js
in
sbb
xchg
out
sbb
bound
and
repnz
jo
loopne
cmpsb
sahf
mov
pop
sbb
sbb
xlat
fisttps
addr16
ficomps
xor
mov
aaa
mov
push
cli
sub
leave
sbb
imul
les
sti
aaa
dec
cmpl
pop
shll
mov
pop
je
jle
jae
jp
xchg
loopne
icebp
cs
cmpsl
mov
mov
rcrl
gs
inc
aam
xor
lea
inc
jo
dec
fstpt
aad
bound
jns
pop
inc
pop
popa
xorl
mov
xchg
dec
xchg
mov
cmpsb
mov
stc
mov
insb
pop
add
arpl
xor
dec
jae
sub
pusha
cmpsb
xchg
or
jp
lret
loop
bound
out
xchg
daa
xchg
xacquire
or
pushf
ret
xchg
jno
pop
testb
inc
jmp
mov
sti
xor
mov
nop
xchg
js
aad
movsl
sub
dec
inc
xchg
stos
sub
mov
cmpsl
cli
loope
cmp
sub
stos
push
dec
out
rolb
mov
gs
push
mov
enter
mov
cs
mov
push
or
iret
jle
mov
dec
dec
and
adc
dec
mov
and
mov
not
push
or
loopne
dec
cmpsl
jbe
loopne
hlt
and
test
jns
lret
jg
sub
push
push
pop
out
cmp
inc
ret
jo
aas
and
lods
xchg
cmp
fisttpll
xlat
xchg
pop
pop
scas
insb
mov
pushf
and
pop
adc
fmull
fwait
lret
jge
mov
fwait
out
lods
push
xor
leave
stos
call
inc
dec
pop
aaa
add
mov
push
jns
cmp
iret
loop
cmp
pop
mov
cmp
xor
daa
sbb
add
pop
mov
xlat
movb
lahf
push
aam
jge
jmp
out
sbb
inc
gs
add
cmp
rcll
dec
pop
dec
jbe
je
mov
ja
push
nop
dec
sbb
jne
je
xor
stos
and
lock
in
int3
jns
sbb
test
adcl
sbb
add
cmc
mov
pop
popa
cltd
sbb
mov
test
pusha
dec
and
cltd
cmp
in
inc
andb
dec
pop
pop
pop
and
test
stos
xlat
test
jns
jb
jb
dec
sub
jno
pop
add
jae
dec
std
inc
mov
out
push
mov
fbld
int3
push
cmpsl
jge
xchg
push
jle
insb
idivl
enter
pop
mov
jmp
inc
cmc
negb
fsubrp
shlb
xor
fldt
jg
push
dec
shll
jle
push
mov
cmovg
xchg
sbb
push
ret
mov
dec
ret
xchg
in
aas
lods
test
push
lcall
in
sub
pop
mov
fdivl
int3
push
je
scas
mov
fucomp
idiv
movsb
dec
or
rcrl
lods
lock
push
stc
fsubl
xchg
jnp
sub
subb
pop
fildll
repnz
mov
inc
pushl
jp
or
cwtl
and
repnz
rcl
push
mov
or
cltd
xor
xor
xchg
inc
fsubl
jl
xchg
andl
insb
sub
ret
mov
rcrb
pop
pop
push
mov
es
fs
push
add
je
push
stos
aas
push
mov
fdivrp
icebp
mov
cmpsl
or
setno
jmp
popf
mov
repnz
lds
pop
adc
fisttpl
mov
shll
pop
inc
imul
mov
jne
js
add
sub
xor
daa
sti
nop
andb
adc
scas
push
cmp
push
es
aad
mov
sarb
imul
sbb
or
shl
imul
mov
pop
sub
test
std
jne
movsb
popa
in
inc
pop
jbe
aam
fisubrl
or
sub
inc
fwait
add
dec
mov
leave
rcrl
adc
shrb
iret
add
add
inc
sbb
add
insl
adc
pop
aam
jl
ror
fcoml
pushf
jb
pop
adc
dec
add
repz
fdivrl
and
rorb
sbb
rcl
cmp
out
js
ret
inc
ss
xchg
aam
mov
push
or
popf
hlt
dec
fnstcw
notl
cmc
jo
jne
inc
int
xor
imul
and
dec
out
cwtl
mov
stc
mov
dec
adc
ficoml
iret
addb
xchg
mov
ficomps
icebp
dec
adc
into
sub
rcl
jg
fs
mov
and
fidivs
add
push
js
test
dec
adc
jge
inc
daa
scas
nop
mov
adc
mov
iret
lods
cmp
push
add
shlb
imul
into
sahf
lock
ss
insl
je
je
aam
in
fwait
orb
clc
sub
jns
jle
cli
jns
cmpsl
test
push
adc
loopne
je
js
fisttpl
xchg
divb
test
mov
and
push
xorl
mov
mov
arpl
loopne
mov
mov
pop
xor
fistpll
mov
ja
in
mov
popf
fstl
stc
pop
pop
cs
cmp
pop
aaa
inc
jo
dec
inc
lock
incb
mov
pop
push
inc
sbb
mov
inc
or
loope
ja
sbb
dec
xchg
adc
inc
or
add
push
push
inc
sar
sub
js
mov
mov
sbb
mov
movsl
cmp
int
ljmp
ss
pop
cmp
dec
sub
pop
mov
test
jb
movsb
sub
and
leave
jns
ret
sub
ds
add
bound
loope
xorl
sub
mov
pop
cmp
hlt
mov
rolb
mov
pop
jl
jp
repz
test
xor
and
in
mov
xchg
mov
cmpsb
dec
push
inc
mov
adc
out
or
jle
xor
and
pop
in
cmp
dec
add
cmpsl
ret
dec
pop
pushf
call
mov
xchg
push
mov
in
jnp
adc
mov
fsubs
fcoml
sub
jmp
icebp
lret
xchg
mov
sbb
mov
cltd
scas
aam
jno
pushf
adc
cmp
das
leave
popl
lea
loopne
je
xor
test
lret
fsubs
lcall
cmp
ficompl
mov
xor
sbb
pop
adc
aam
cmp
dec
pusha
int3
xchg
lods
cmp
pop
leave
mov
imul
cmp
jne
adc
std
sbb
stc
pop
pop
in
into
movsb
push
push
push
adc
mov
add
data16
cmp
mov
arpl
or
xorl
stc
jns
push
mov
and
stc
data16
mov
inc
pop
stos
jo
lea
testb
pop
push
test
mov
xor
cli
jmp
xor
mov
xchg
inc
dec
cwtl
rcrl
xchg
mov
cmovge
adc
fdivrl
pop
mov
and
xor
mov
push
stos
inc
adc
in
or
mov
pusha
orb
lsl
insb
sbb
mov
clts
mov
insb
clc
pop
jg
jg
dec
dec
jge
js
movsl
sbb
or
mov
fidivl
jnp
out
jmp
xchg
rcrl
pop
popf
push
cmp
cltd
lods
sbb
adc
push
inc
out
xlat
aaa
dec
je
dec
pop
ss
xchg
jmp
stos
cmp
dec
je
jae
cwtl
push
inc
lds
pop
fwait
dec
mov
add
dec
sbb
inc
in
outsb
test
mov
xor
int
mov
xor
out
pop
sbb
call
aam
jle
ds
pusha
add
call
push
mov
aas
fldenv
push
insl
cmp
mov
lods
pop
sti
adc
cwtl
ja
push
ror
or
mov
imull
sbb
push
xchg
jo
adc
inc
repz
inc
dec
jge
inc
jb
mov
cmp
or
inc
std
jg
mov
jmp
pop
jmp
test
sub
mov
or
jbe
xor
mov
mov
mov
sub
dec
xchg
rcrb
mov
ds
dec
adcb
xor
ret
xchg
cmp
notb
sbb
dec
mov
shlb
sub
sbb
and
insb
decl
andl
movsb
mov
mov
lcall
mov
cmpl
lods
and
stc
push
movsb
dec
jge
xor
fidivrs
paddb
mov
scas
in
cmpsl
shrb
mov
push
divb
nop
outsb
and
push
xorb
fisttpll
sub
inc
push
xchg
andl
xchg
push
aaa
mov
pop
adc
dec
mov
xchg
xchg
mov
leave
pop
orl
push
jae
test
fistpll
cmc
out
push
push
xchg
jmp
int3
or
popf
in
mov
cmp
pusha
rcr
dec
jae
daa
call
aaa
jmp
cmp
jl
stc
adc
lcall
scas
sbb
in
lret
loop
push
jns
call
add
or
movb
negb
push
mov
insb
enter
lea
xchg
sbb
loope
clc
dec
loop
mov
jecxz
mov
loopne
and
and
in
or
stc
jg
mov
scas
adc
sub
jmp
push
or
mov
jg
in
fimull
xlat
imul
xor
std
jb
inc
mov
js
into
stos
gs
xchg
sbb
fdivs
scas
lahf
inc
jle
pop
push
adc
inc
out
jl
add
xorl
data16
cwtl
xchg
inc
cwtl
and
scas
cwtl
mov
dec
cmp
inc
lock
xchg
mov
ja
iret
pusha
push
mov
scas
jnp
pop
mov
or
out
sub
push
pushf
lcall
sub
aam
popa
test
addr16
jb,pt
xor
add
xchg
hlt
cmpl
or
jbe
mov
jae
fcoml
mov
out
mov
dec
and
movsl
pop
test
xor
scas
ja
push
xor
imull
imul
sub
int
pop
aam
or
mov
insl
arpl
jns
or
inc
sub
adc
fcomps
cmp
xchg
sub
dec
aam
cltd
xchg
lcall
es
sub
shrl
pop
ljmp
xchg
or
lcall
jmp
das
mov
mov
fcoml
jno
movsl
jl
adc
je
push
sbb
xchg
jge
xchg
mov
dec
xacquire
jmp
and
std
push
hlt
or
sti
add
pop
test
daa
push
jo
sub
out
push
push
fstpl
xor
in
sub
cmpsl
arpl
inc
mov
mov
das
push
fldenv
jp
cwtl
xchg
mov
or
cmc
gs
test
rcrb
dec
lcall
lret
add
xor
test
movsb
mov
cltd
or
test
cmpl
mov
lret
pusha
mov
in
imul
fsubs
add
jp
jb,pn
clc
movsl
jg
xor
pusha
xor
jne
and
xchg
daa
imul
jle
adc
cli
jbe,pn
shlb
mov
not
test
and
adc
and
pop
cld
push
in
jae
cmc
pusha
adc
mov
data16
sub
xor
in
leave
xchg
xchg
mov
xor
rclb
sub
mov
xchg
jg
mov
iret
sub
mov
pop
loope
push
jbe
cmp
out
and
jne
xchg
or
push
xor
pop
les
daa
lret
xlat
pop
cmc
mov
cwtl
cmp
cmpsl
sti
insl
sub
jno
pop
push
bound
dec
aad
lods
push
adc
inc
mov
cmc
popf
xlat
jmp
jnp
test
scas
pop
or
push
push
xchg
clc
sub
fucomi
xchg
lods
movsl
outsl
mov
push
inc
mov
scas
mov
sub
cmc
or
fildll
and
pop
loope
mov
stc
push
stos
gs
pop
lret
cmp
mov
int3
cli
lock
addr16
jle
push
sbb
mulb
push
lea
push
pop
imul
fistps
mov
cmp
fcompl
test
or
jl
add
je
sbb
outsb
dec
cmc
gs
push
aas
sbb
insl
inc
repnz
cmp
pop
cmp
fldt
ds
enter
loope
and
adc
fiaddl
daa
lahf
cmc
sbb
push
nop
ja
add
xor
jne
popf
repnz
sbb
scas
ret
int
mov
pop
pop
mov
pop
xor
jle
pop
test
push
jo
push
icebp
jp
inc
jp
loopne
mov
pop
jmp
pop
pop
rcrl
ficoms
jge
adc
int3
ret
dec
sub
ret
lea
test
movsb
jb
mov
stc
in
aad
cltd
push
inc
lahf
pop
loopne
xor
mov
int
dec
cmpl
cld
dec
pop
lahf
cmp
pop
adc
lock
and
scas
cmp
dec
mov
jae
out
push
xor
and
pop
int3
mov
repnz
mov
les
lea
je
stos
imul
dec
sub
mov
pop
ljmp
loope
int3
pop
pushf
push
outsl
push
aam
stos
adc
fstpl
dec
call
dec
call
lret
sar
push
nop
fstpl
adc
sub
add
xchg
frndint
push
pushw
mov
outsb
jecxz
xor
mov
push
or
pop
cli
daa
les
icebp
push
std
mulb
sbb
outsb
add
mov
jle
mov
rorb
fwait
popf
mov
ficoms
mov
cltd
movsb
xchg
fists
adc
test
aam
pop
mov
pushf
loop
lods
cmpsb
inc
stos
xor
adc
das
ss
inc
xchg
sub
mov
stos
adc
mov
adc
addr16
sub
loopne
mov
dec
fwait
stos
dec
bound
std
pop
mov
fdivrs
jmp
loopne
push
push
imul
xchg
push
ds
add
lret
mov
mov
mov
hlt
cli
lds
and
dec
icebp
dec
sbb
insb
inc
mov
test
sub
scas
inc
decl
xorl
jmp
jg
shll
sub
jae
pop
jb
sbb
ret
push
add
aaa
lcall
repz
mov
push
push
xor
nop
jnp
pop
cmc
loopne
out
test
int
push
je
dec
insl
jecxz
jl
push
pop
xchg
mov
pop
cltd
xor
push
shrb
sahf
cmp
rcr
mov
xor
pop
arpl
add
adc
cltd
or
loope
pop
jmp
jecxz
test
dec
ret
xchg
push
push
lcall
addl
xor
pop
xchg
jecxz
into
cwtl
cmp
pop
or
int3
mov
dec
or
pop
sbb
fstl
stos
repnz
jo
ds
or
sarl
push
repz
sbbb
lret
mov
push
dec
test
aas
push
fwait
add
xchg
mov
cmp
jg
mov
ss
ljmp
dec
jbe
xchg
dec
jg
test
cmp
mov
popf
xor
jg
xchg
mov
push
adc
mov
pop
scas
cmpsl
jmp
jp
icebp
imul
mov
jne
lret
jecxz
xchg
cmp
xor
mov
outsb
outsl
jns
mov
fisubrl
xor
sbb
jecxz
orl
test
imul
std
rolb
mov
or
shrl
test
popa
inc
inc
lcall
jp
daa
fdivs
es
jmp
cld
ds
adc
push
outsl
and
leave
lea
in
stos
inc
cmp
shll
call
scas
inc
cwtl
ret
cmp
push
into
add
jmp
xor
cmp
addr16
and
data16
lds
pusha
fsubl
fcmovnu
mov
lea
mov
fnstenv
cwtl
ss
jg
daa
push
jnp
mov
es
cld
cmpsb
addr16
jle
cmp
or
cltd
rcrl
inc
xchg
jmp
sbb
shl
push
ret
cli
xchg
jo
hlt
and
mov
add
mov
adc
inc
jg
and
xchg
mov
adc
jle
into
adc
add
adc
mov
je
sub
je
sub
add
pushf
and
insl
shrl
sub
pop
mov
das
jmp
rcll
in
jmp
movsb
and
lods
mov
push
test
pop
ficoml
shr
addb
dec
mov
sbb
addr16
lods
pushl
push
and
pop
add
cmpsb
push
inc
and
scas
push
dec
sbb
add
mov
push
aam
and
dec
adc
rcrb
daa
sub
xchg
jae
sbb
movsb
push
jmp
jl
test
mov
push
adc
inc
pop
mov
mov
sbb
push
pop
ja
xor
jecxz
loope
inc
out
mov
mov
mov
into
stos
and
cmp
lock
fldt
lret
cmpl
xor
mov
mov
push
cmp
pop
addr16
inc
addr16
jp
call
daa
pop
ds
mov
clc
ljmp
insl
aaa
aad
dec
mov
lcall
push
inc
sub
inc
cmp
mov
in
out
bound
repnz
rcrb
addr16
movsb
int
add
lcall
cmp
adc
addr16
mov
in
dec
push
mov
mov
fs
adc
cmpsb
sub
adc
rolb
inc
xor
imul
call
jle
pop
add
js
cmp
xlat
out
clc
and
mov
dec
or
pop
jp
imul
pop
xor
std
fildll
xchg
push
or
loop
fst
hlt
ror
leave
sbb
jb
dec
aas
daa
push
push
in
push
lcall
sbbl
rclb
jge
cld
and
enter
inc
shlb
in
fstpl
in
sbb
loopne
in
jo
iret
cltd
jnp
test
mov
insl
push
lock
mov
pop
push
xchg
xor
call
das
icebp
test
dec
dec
mov
mov
out
shrb
or
push
pop
into
xchg
mov
ret
jg
arpl
int
sbb
dec
bound
ja
push
sbb
dec
in
xlat
add
test
test
jnp
pop
and
sbb
adcb
sahf
iret
dec
inc
subl
pop
xorl
inc
ret
sub
dec
jle
adc
or
shlb
pop
inc
sti
fidivl
xchg
scas
and
call
xchg
cli
ror
movsl
or
out
pop
sbb
lods
jne
orb
and
fisubl
pop
fwait
mov
xor
push
mov
jl
imul
imul
cmp
push
cmc
cmp
and
movsl
pop
scas
push
cmp
and
jecxz
inc
fnsave
sbb
js
cmp
lcall
nop
clc
rcr
out
dec
xchg
ja
mov
jmp
cmp
dec
and
aas
xchg
mov
stc
cmp
cmp
ds
mov
jo
push
out
jge
adc
icebp
cld
add
loop
loope
rcrl
lahf
outsl
out
mov
aas
testl
sub
arpl
sbb
add
std
in
rorb
insb
outsl
push
sbb
mov
in
shrl
cmp
jae
dec
or
mov
xor
loop
rclb
mov
cmc
dec
mov
movzbl
fisttpl
dec
pusha
aad
std
in
leave
push
hlt
jno
popf
mov
out
pop
and
sarl
repz
cli
inc
arpl
sub
inc
lahf
cmpsl
into
pop
std
dec
jo
adc
sub
out
dec
or
mov
mov
mov
and
shr
in
loope
inc
lret
loop
mov
lcall
sub
mov
dec
mov
add
inc
cli
sbb
rcrb
outsl
cmp
cltd
mov
lcall
push
inc
or
pop
fdivs
or
arpl
add
loop
out
les
push
inc
movsl
ljmp
mov
sub
jnp
addr16
mov
arpl
cmpsb
imul
mov
push
idiv
ret
aas
idivl
xchg
mov
jne
outsb
push
test
or
andb
adc
je
mov
add
stos
icebp
cmp
jle
cmpsl
and
mov
jge
lea
and
aaa
in
jbe
pop
fildll
dec
xchg
cmc
into
sub
mov
xchg
sub
mov
sub
inc
mov
adc
aam
aas
mov
sahf
mov
pop
daa
aad
push
repnz
push
fdivrl
cmp
dec
jbe
cmp
jnp
push
dec
pop
cmpsl
mov
cwtl
push
lea
stos
pop
xor
mov
push
mov
mov
lahf
adc
nop
adc
pop
ror
sub
das
xchg
enter
inc
xor
call
push
sahf
cli
cld
pusha
mov
sub
inc
shlb
push
in
or
subl
repnz
jmp
mov
cmp
inc
adc
xchg
dec
add
mov
rcrl
bound
inc
aad
inc
pop
push
dec
push
ss
and
pop
and
pop
add
or
jmp
pop
mov
xchg
pop
and
or
or
cmp
arpl
xchg
add
xor
popa
cmp
repz
pop
cmpl
jno
sar
jb
inc
cmp
daa
pop
inc
xor
pop
fsubrp
dec
xchg
pushf
data16
arpl
sub
fisubl
cltd
aam
cwtl
push
mov
push
arpl
dec
push
mov
jg
add
mov
iret
test
aaa
xor
cmp
jno
push
test
ljmp
mov
and
cmp
orl
in
imul
mov
push
faddp
jne
push
mov
add
jno
cs
mov
or
leave
dec
sub
outsl
jmp
xchg
cmpsb
imul
xorb
pushfw
mov
into
sub
or
imul
stos
outsb
or
sub
dec
enter
mov
pop
cs
dec
or
pop
push
adc
jmp
xor
mov
inc
sbb
sti
jp
in
popf
hlt
data16
lret
cmpsl
sub
xchg
sub
cmpsl
popl
jns
mov
ljmp
aas
sbb
push
add
xchg
mov
mov
push
xchg
je
and
mov
push
outsb
inc
push
in
jnp
enter
mov
mov
push
cmpsl
sar
test
mov
loop
mov
push
xor
add
add
mov
popa
cmc
arpl
xchg
shr
xchg
xor
pushf
in
and
sub
push
fimuls
data16
imul
xchg
popf
maxps
and
cmpsb
mov
mov
xchg
xor
dec
movsb
and
sub
sub
lock
pop
add
lret
jb
cs
test
hlt
mov
inc
out
xor
pop
aam
mov
cmc
adc
jecxz
mov
insb
sub
jns
mov
push
adc
push
data16
sbb
push
rcrl
stc
das
pop
lds
dec
xchg
hlt
loope
add
sbb
cli
inc
ret
jecxz
cmp
xorb
xchg
jb
pop
loop
pop
adc
push
sub
addr16
test
xchg
insb
sbb
adc
mov
out
add
leave
mov
jecxz
inc
jmp
cmp
or
mov
push
sarl
sbb
lahf
cmc
jo
dec
and
pop
xor
outsl
dec
shlb
js
call
dec
mov
push
adc
fnstcw
xchg
adc
hlt
divb
lahf
loopne
sub
mov
leave
add
fs
sub
jle
mov
das
call
std
pop
in
test
sar
sbb
inc
or
cwtl
adc
int
lahf
sarl
jecxz
scas
sub
fidivrs
mov
scas
add
or
inc
push
out
add
dec
dec
add
jle
cwtl
loope
int3
xchg
cmp
push
fistpll
shlb
xor
mov
in
jecxz
pop
movsl
mov
movsl
sbb
loop
jmp
cmpsb
outsb
jb
ret
dec
sbbl
or
aas
pusha
add
nop
mov
aas
add
and
fiaddl
mov
xchg
ret
xchg
pop
or
mov
mov
jno
pushf
test
or
jg
or
int
mov
fcmovb
adc
jmp
popa
add
stos
aam
adc
in
xchg
xor
movsb
xacquire
xor
hlt
rorl
les
in
and
movsl
xor
call
cmpsl
fstpl
adc
sbbl
movsb
out
fwait
in
or
ds
xor
es
movl
xchg
or
fiadds
pushf
clc
sub
stos
jmp
divb
jecxz
jg
and
test
add
adc
outsl
pop
stc
jg
inc
cltd
inc
mov
mov
jmp
popa
aas
ss
int3
aas
adc
pop
pop
mov
subb
adc
push
arpl
dec
pop
push
pop
sub
arpl
pop
jbe
in
pop
mov
sti
or
mov
dec
in
fdivrl
stos
sub
xchg
movb
jecxz
fbld
shlb
dec
jbe
mov
push
test
pop
lcall
push
lods
fldt
mov
sub
addb
jge
mull
push
cmp
sarb
aas
test
outsb
out
jns
inc
mulb
xchg
shrl
mov
adc
sbb
imul
add
xor
lret
xchg
jns
out
sahf
push
lcall
and
add
add
jg
sub
mov
xchg
fadd
jne
mov
xchg
inc
mov
inc
inc
xchg
pop
xchg
insl
mov
fildll
xor
jmp
sub
ss
js
fwait
movsl
divl
addb
push
test
add
mov
push
aad
out
jp
je
mov
stc
aad
mov
add
or
dec
cli
add
pusha
test
inc
jg
lcall
dec
mov
fwait
xchg
push
push
or
into
cltd
sub
test
loopne
adc
mov
fdivs
mov
xchg
jnp
mov
imul
aam
adc
xchg
cmp
cmpsl
scas
leave
cli
xor
and
dec
push
clc
push
jo
pop
lods
push
jp
enter
ret
mov
pop
cmpb
sbbl
or
jecxz
es
sbb
leave
adc
push
mov
and
and
insb
loopne
repnz
cmp
cmc
mov
pop
inc
inc
sub
in
jmp
jno
mulb
xor
cwtl
cs
js
xor
sbb
fisubl
stos
jecxz
lahf
test
lock
popa
xor
adc
aam
push
inc
idivl
mov
lahf
into
jne
fdiv
mov
rol
pop
mov
dec
aad
loop
pop
xchg
jp
push
xchg
repnz
jg
shll
test
ds
repz
es
addr16
push
dec
mov
mov
mov
lret
repnz
push
aaa
mov
call
inc
inc
sub
lds
xor
mov
sti
lret
faddl
cli
xor
mov
adcl
xchg
scas
xchg
ficomps
or
pop
int3
int3
stos
mov
adc
into
adc
popf
sahf
and
jo
lcall
xchg
adc
sbb
jbe
push
push
dec
cld
and
fbld
sub
sub
pop
les
xchg
xor
addr16
scas
iret
fiadds
ja
test
lods
xor
mov
push
test
fcoms
xchg
imul
mov
shlb
push
test
cs
xlat
jl
lock
ss
inc
or
and
lods
sbb
add
sub
jne
imul
pusha
jecxz
scas
cmp
fdivrl
sub
mov
fsubrl
jl
aad
xor
lods
in
ficompl
cmp
insb
dec
in
mov
mov
sbb
cmp
jae
and
and
sbb
jnp
enter
ret
sub
imul
ljmp
lret
mov
insb
mov
mov
shll
cli
rcll
xchg
repnz
mov
inc
jnp
pop
icebp
xor
stos
je
pop
add
aam
jmp
std
pop
inc
or
lock
dec
pop
mov
and
dec
sbb
sub
add
xor
in
cs
adc
lea
and
rcrb
aaa
lcall
jg
lods
jp
leave
xchg
inc
pop
inc
cmp
fdiv
add
shll
mov
mul
pop
cmpsl
insl
imul
mov
inc
aaa
push
notb
inc
dec
popa
in
mov
push
mov
mov
mov
add
dec
fisubrl
out
mov
aas
jno
movsl
ror
aas
push
jg
add
push
cld
xor
pop
arpl
lcall
adc
roll
jge
arpl
les
xchg
lcall
lds
inc
int3
adc
fwait
inc
outsl
jl
inc
or
and
xor
and
jecxz
jns
stc
aad
or
push
sbb
cltd
test
mov
out
hlt
xor
lret
sti
xchg
xor
imul
xchg
imul
xor
jbe
pop
ja
push
mov
imul
sbb
inc
or
loop
add
dec
sbbb
test
jbe
aad
mov
repnz
popf
mov
mov
ficoml
call
xlat
xchg
lods
mov
testb
mov
test
inc
xchg
sub
scas
or
sbb
faddl
pop
test
or
test
daa
push
cli
xor
mov
lods
push
mov
testb
insl
loope
sti
loope
testb
mov
xorl
cmp
sub
enter
stos
xchg
push
push
pop
clc
dec
sarl
add
push
cmp
jno
hlt
cwtl
push
out
ret
in
mov
push
scas
sahf
mov
mov
pop
mov
es
in
adc
pop
loope
jmp
lret
or
pop
loop
and
mov
pusha
or
icebp
sbb
bound
fwait
stos
mov
decl
adc
mov
mov
test
or
mov
mov
or
jae
push
cmp
dec
into
sahf
add
push
mov
push
iret
push
icebp
add
mov
xchg
imul
cwtl
fidivs
xlat
jb
lret
mov
in
sbb
jbe
push
pop
xchg
jno
xchg
cmpl
push
stos
pushf
aad
cld
jb
sbbb
shrb
xchg
add
sbb
fcoms
leave
adc
jmp
ds
xchg
mov
jmp
imul
cmp
sub
inc
sub
adc
and
adc
popf
jo
add
sub
push
pop
arpl
repz
cmpsl
jo
sbb
jp
mov
dec
push
push
cmp
sbb
in
sub
call
fwait
mov
add
pop
roll
pop
and
xor
stc
clc
xchg
jmp
push
inc
imul
and
lods
in
aam
dec
dec
push
mov
das
fistl
pop
pop
xchg
push
or
or
insb
xchg
int3
pop
add
xchg
movsl
scas
pop
dec
lahf
add
popa
pop
mov
fwait
inc
push
add
push
mov
aaa
dec
and
sbb
movups
call
xchg
subb
sub
mov
or
cmc
jo
sub
cmp
iret
inc
jo
and
es
add
push
push
test
in
es
adc
rclb
add
push
mov
ja
clc
mov
and
js
or
aas
jg
cmpsb
push
push
dec
mov
fldenv
pop
jbe
mov
insb
lods
mov
dec
outsb
rcr
jnp
subb
or
clc
ret
fsubs
xor
movsb
xlat
fcoms
into
fldenv
clc
cmp
out
es
out
lahf
push
add
xor
fwait
popf
push
fucomp
lods
or
mov
cmp
add
xchg
fldz
pop
je
inc
nop
addb
lahf
mov
popf
rorl
mov
add
rcl
outsb
jl
pop
in
cmp
jmp
sahf
or
les
ljmp
gs
mov
cmc
test
fsubs
mov
add
xchg
mov
jmp
jo
repz
addl
cmp
sarl
sar
jle
dec
mov
pop
jbe
loope
mov
bound
popf
pop
mov
inc
shll
int
or
loope
mov
jecxz
aas
adc
repz
mov
bound
cmc
xor
xor
inc
mov
shll
mov
inc
repz
inc
sub
dec
adc
enter
dec
cmp
scas
mov
mov
shrl
add
mov
sbb
jae
xlat
enter
negb
or
rcrl
pusha
stos
mov
js
aas
jl
jnp
mov
loop
stc
clc
push
cmp
dec
lock
xchg
inc
mov
sub
inc
bound
add
ss
out
out
jnp
inc
and
add
inc
xor
mov
push
addr16
dec
mov
cmp
ja
push
es
or
xchg
pusha
xchg
inc
inc
hlt
shr
loop
mov
sub
push
or
call
shr
ret
sbb
xchg
adc
push
movsl
cmc
je
dec
insb
lahf
mov
pop
mov
add
dec
jb
push
mov
xchg
push
out
xor
adc
inc
mov
inc
out
sbb
pop
test
xor
mov
shlb
add
lods
jmp
call
inc
aam
addl
cmpsl
push
out
inc
mov
and
pusha
test
add
pop
out
cmpsl
lods
leave
notl
mov
or
push
xor
or
insb
loope
pop
pop
arpl
stos
jle
fildll
jle
in
imul
dec
into
xor
adc
je
mov
cmp
cmp
loop
cmp
sbb
jle
or
fists
ljmp
add
loop
mov
xor
subl
xchg
add
jns
aaa
loopne
scas
pop
movsb
inc
push
mov
cmc
stc
and
in
out
push
pusha
lea
lds
pop
ficoms
inc
jbe
mov
lods
adc
stos
pop
add
xchg
idivb
xchg
fists
repz
push
pop
add
ret
lahf
into
sub
gs
and
jmp
pop
xor
stos
xor
adc
pop
and
cmp
jns
ds
test
int3
inc
dec
sahf
adc
data16
je
inc
sub
sbb
pushf
push
pop
pop
or
or
out
xor
inc
or
add
fs
adc
popa
xor
mov
pop
push
and
adc
dec
jo
call
pop
fdivrl
lods
in
lahf
mov
adc
es
xchg
and
movb
imul
mov
lods
hlt
cs
sarb
xchg
sub
dec
add
mov
test
push
jb,pt
fldl
std
fisttpl
fcompl
mov
fidivrs
xor
push
data16
in
dec
scas
fdiv
mov
aam
push
insl
push
inc
loope
push
lret
lds
jecxz
and
and
ret
or
icebp
lcall
push
test
xchg
xor
notl
jns
nop
outsb
lock
mov
cld
testb
mov
je
sub
test
xorl
mov
xchg
mov
aad
adc
subl
mov
cmp
and
pop
push
push
push
mov
mov
mov
inc
xchg
popa
push
int
inc
and
jne
mov
push
mov
dec
test
aad
jge
or
lds
ljmp
add
or
push
push
cld
push
mov
push
jg
in
clc
leave
adc
hlt
mov
mov
sbb
jecxz
es
sbb
add
or
adc
mov
mov
adcb
sub
inc
ja
and
xor
mov
inc
push
or
rcll
inc
into
jle
fwait
scas
pop
mov
jns
gs
mov
mov
out
jnp
push
xor
jo
adc
push
xchg
mov
sbbb
hlt
mov
shr
mov
ljmp
lret
cmp
mov
push
insl
aas
popa
push
sub
adc
mov
mov
jbe
add
pop
adc
pop
cmp
xor
jae
adc
lods
stc
cltd
sbb
mov
push
add
ret
xlat
int
daa
prefetch
push
push
out
scas
sbb
aaa
fsub
push
ret
xor
push
or
test
mov
push
jb
cmc
mov
ret
adc
push
sti
push
pop
jecxz
push
push
sub
and
xchg
inc
setp
subl
push
fcmovnb
lock
jl
dec
or
adc
jg
test
movsl
adc
loopne
inc
cmp
call
outsb
push
pop
mov
repz
mov
push
hlt
push
fists
xor
adc
out
sbb
ret
nop
out
outsl
cmp
cs
aam
push
dec
mov
sub
bound
ret
fs
ret
imul
out
imul
test
sbb
lods
xchg
or
mov
test
mov
stos
rorb
push
mov
pop
pop
mov
outsl
inc
cmc
movsl
in
jae
jns
pop
xchg
adc
xlat
ficompl
in
adc
push
adc
pop
cs
mov
int
adc
je
or
out
push
mov
in
jmp
add
insl
sbb
mov
sub
in
pop
lea
aas
pop
cmp
int3
hlt
inc
out
adcl
pmulhw
lcall
mov
xchg
sub
xor
rcrl
nop
bound
fdivl
pop
jns
aam
scas
mov
sub
cmpsl
rcrl
das
push
out
arpl
bound
test
sarb
xor
rcl
pop
std
add
insl
jg
lcall
push
mov
repz
mov
stc
pop
repz
push
mov
or
iret
divl
add
cmp
inc
rorb
repz
arpl
cltd
clc
sub
jl
addr16
ret
leave
in
jmp
imul
es
and
ja
lahf
jnp
inc
js
movsl
mov
aas
into
xchg
add
mov
jno
mov
sub
sub
push
xchg
add
loopne
push
pop
addl
cld
decl
mov
aad
push
adc
sahf
int3
pushf
rolb
mov
rclb
scas
test
cli
jp
lock
mov
xchg
xor
and
pop
fisubs
fcompl
das
push
imul
sub
push
inc
mov
mov
push
sbb
dec
ljmp
mov
mov
cltd
mov
ficompl
fimull
pop
pop
arpl
lcall
rorb
mov
xchg
push
leave
mov
inc
pop
int
aam
and
mov
cmp
push
rol
jnp
xchg
divb
mov
inc
scas
mov
shrb
dec
shr
mov
outsb
cmp
sub
pop
jecxz,pn
mov
fldcw
jmp
cmp
ret
repz
jg
mov
insb
iretw
sbb
pop
add
out
fcompl
std
fdivr
mov
out
sub
mov
out
mov
pop
subl
jl
sbb
mov
mov
fbstp
faddl
subb
test
pop
pop
cltd
insl
xor
insl
jmp
cld
add
pop
lods
in
xor
xchg
pop
inc
inc
and
xchg
mov
add
xor
xor
xor
imul
clc
mov
adc
ljmp
add
push
loop
push
xchg
scas
stos
adc
mov
add
sbb
mov
mov
add
mov
push
xchg
cwtl
js
sbb
gs
jo
add
add
lahf
loope
lock
push
in
xchg
push
cmp
inc
fs
stos
fiaddl
cmp
mov
jns
push
inc
and
inc
xor
fdivs
mov
xchg
movsl
mov
mov
lods
sub
mov
sub
dec
jge
xchg
in
imul
jb
mov
and
rcr
push
shll
daa
mov
adc
rcl
cmp
fldt
sub
xor
xor
jbe
mov
push
mov
sub
fcmovb
inc
pop
add
mov
xlat
js
xchg
lret
push
xor
data16
xorl
xchg
rorb
sahf
push
inc
sub
xchg
or
push
lds
sbb
xchg
cmp
dec
lcall
insb
xchg
es
bt
pop
or
or
jg
xchg
aaa
int3
mov
adc
sbb
jmp
xor
test
loopne
push
je
inc
fists
inc
mov
jle
adc
jb
push
test
adc
push
jp
xchg
adc
outsb
rcrb
mov
jnp
popf
sbb
test
fcomp
pop
push
xchg
cli
xor
out
repz
jb
cwtl
jnp
pushf
sbb
jp
jae
xchg
jp
dec
mov
mov
cmp
push
shlb
jbe
mov
gs
les
in
and
mov
pop
loop
jbe
imulb
cmpl
pusha
add
xchg
das
rcrl
js
jmp
notl
push
mov
mov
in
je
les
jmp
jmp
jg
mov
xor
test
into
divb
and
fucomip
push
arpl
ftst
fldl
aaa
loop
stos
adc
jo
pop
inc
and
push
and
mov
mov
push
inc
call
out
dec
jb
data16
or
sub
inc
mov
sub
mov
popa
jmp
xchg
lock
insl
shll
xor
inc
add
dec
sbb
sbb
imul
xor
dec
test
and
push
in
cmp
test
fbld
popl
sub
in
adc
mov
sbb
ret
dec
push
dec
insl
pop
push
sbb
shll
jb
cmp
call
jae
xor
mov
lret
stc
xchg
sbb
sahf
sbb
out
jb
xchg
nop
or
cmp
cwtl
adc
xchg
sub
mov
daa
mov
xorl
fdiv
insb
int
lahf
xor
cltd
jns
mov
jno
arpl
lds
aam
stos
loope
repz
dec
adc
ds
scas
mov
ds
fcomp
xchg
aaa
or
xchg
test
jns
daa
int
jbe
mov
jle
in
ljmp
addr16
test
fdivrl
ds
jns
in
adc
imul
xchg
inc
xor
mull
jge
frstor
lods
mov
push
mov
jne
addr16
bound
ljmp
leave
lea
pop
sbb
and
lcall
out
jmp
mov
cmp
jbe
stc
mov
or
xor
les
adc
addr16
jb
fs
cwtl
pop
add
lock
ret
shll
das
imul
push
pop
adc
pop
pop
mov
mov
daa
popa
ljmp
mov
pushf
scas
movsl
jl
push
adc
mov
mov
inc
push
dec
icebp
cmpsl
xor
jns
fldcw
mov
pop
mov
sbb
int3
daa
dec
jne
insl
lcall
lock
sbb
cltd
sub
inc
aaa
lcall
int
xor
mov
arpl
rol
xchg
cmpsl
fisubrs
pop
pause
ljmp
cmpsb
outsb
sbb
mov
ds
xor
mov
repz
stos
popa
xchg
mov
add
scas
jno
add
mov
cmp
popf
mov
xchg
pop
add
cmp
and
out
mov
or
unpckhps
roll
mov
cmc
icebp
in
jmp
push
jae
xor
or
out
test
or
mov
lods
mov
shll
jns
add
shlb
loop
dec
in
sbb
or
add
mov
xor
xchg
dec
enter
ret
jl
sbb
pop
fcmove
addr16
dec
lret
pop
icebp
test
stos
jecxz
mov
dec
jmp
lods
xor
sbb
mov
push
rol
mov
inc
jbe
insb
shlb
cmp
popa
push
xchg
sub
sti
mov
aad
inc
int3
popf
pop
push
mov
xor
dec
mov
push
icebp
mov
mov
push
call
movsl
ja
lahf
inc
xchg
sbb
test
int
xchg
movsb
xchg
pop
lods
pusha
cli
dec
push
lret
mov
hlt
or
movsb
mov
inc
cmpb
fistpll
repz
pop
cmp
das
dec
mov
jno
add
into
popf
fisubs
imul
inc
adc
push
out
push
and
mov
or
mov
data16
sbb
jb
mov
push
add
ds
int
mov
fistl
sbb
fnstenv
adc
popa
dec
aas
sti
jl
pop
shr
cmp
sbb
inc
aad
idivl
pop
pop
pop
popf
jle
jmp
xchg
mov
add
es
push
daa
push
add
popa
lods
imul
pop
shll
sbb
jo
pusha
cmp
push
enter
rorb
addr16
lock
push
xchg
shrb
cmpsb
or
mov
orl
inc
out
pusha
sahf
mov
mov
repz
sbb
xchg
imul
in
or
xor
aam
dec
jp
scas
aaa
cmp
jmp
jl
pop
clc
pop
aaa
adc
stos
add
sahf
xor
inc
test
xchg
ret
sbb
std
sbb
pop
jno
stc
lahf
pop
inc
cmp
pop
loop
outsb
movsb
pop
je
fyl2xp1
lcall
xchg
insl
gs
js
int3
cmp
mov
mov
add
int3
xchg
pop
mov
pop
sbb
ret
mov
imul
adc
mov
movsb
xor
pop
pop
push
inc
xor
dec
adc
pop
into
popa
pop
shll
or
out
out
mov
adc
ljmp
push
and
xor
or
or
xor
and
xchg
shlb
jmp
add
jecxz
sbb
leave
movsb
and
mov
xchg
mov
lods
xchg
jb
test
dec
in
jb
arpl
pop
mov
stos
cmp
clc
cmpsb
fiaddl
shr
cmpsl
mov
pop
in
std
push
or
movsl
mov
pop
cli
repz
cmp
lods
lea
test
lock
sahf
xchg
scas
cmp
pop
mov
lret
cltd
aaa
push
ficoml
xchg
ljmp
cmp
jle
mov
pop
lahf
mov
sbbl
sbb
inc
pusha
mov
jecxz
inc
mov
add
je
cli
inc
or
enter
pop
in
loopne
or
in
mov
repz
mov
rolb
cli
pop
cli
mov
dec
xchg
and
mov
std
sub
insb
inc
mov
mov
imul
cmc
data16
xor
je
sbb
inc
jns
popf
sbb
ret
cmp
stos
mov
push
dec
notl
or
shlb
pop
sbb
pop
push
loopne
jnp
or
jne
dec
mov
ja
adc
xchg
je
add
xchg
sbb
sahf
or
stc
sub
xchg
or
push
shll
je
test
inc
mov
clc
mov
das
rcl
xchg
movsbl
mov
cmpsl
sub
xor
addr16
add
pop
inc
adc
pop
fsubl
into
jg
lret
xor
das
pop
and
fstps
mov
xlat
repnz
mov
stos
pushf
test
dec
insl
fs
mov
insl
out
push
add
pop
fwait
cmp
push
aas
sub
dec
jmp
stos
cmpsb
mov
out
jnp
mov
mov
mov
int
jb
sub
out
aaa
xchg
cmp
xor
cmp
out
dec
out
cli
fidivrs
jmp
int3
sub
push
movsb
push
mov
xor
and
add
mov
add
or
lea
mov
inc
cmc
loope
dec
rolb
add
cmpsl
outsb
imul
arpl
pop
xchg
cmp
adc
inc
and
mov
dec
mov
and
arpl
aad
xchg
adcb
mov
push
outsl
ret
pushf
sbb
push
cmp
inc
add
sbb
insb
push
inc
mov
jno
ljmp
xor
aaa
xor
pop
mov
int3
pop
sub
adc
and
pushf
cwtl
sub
fwait
sub
and
cmp
sub
xchg
int
add
pop
loope
inc
dec
popa
fucomip
cmc
adc
dec
decb
frstpm(287
stos
mov
dec
mov
imul
and
clc
mov
push
xlat
mov
xchg
mov
out
mov
adc
scas
in
aaa
add
lret
mov
mov
xchg
add
jg
pop
xor
adc
mov
mov
lret
cs
jns
jo
pop
shrl
les
xchg
sbb
pop
les
ss
mov
lret
loopne
mov
dec
mulb
aas
je
scas
sub
pop
or
jne
pushf
sub
cmp
mov
cmp
hlt
inc
push
and
mov
inc
inc
stc
imul
pushf
loopne
bound
adc
xchg
lock
cmc
sub
aam
movsb
sub
sar
jmp
mov
mov
xchg
into
cmpsl
and
cmp
xor
and
out
cmp
aam
mov
loop
jl,pt
addr16
xchg
xchg
jmp
and
imul
lock
or
cmp
clc
and
sbb
jl
mov
sbb
dec
jo
dec
ss
addr16
push
push
fcoml
or
fists
loopne
fisttpl
je
decb
outsb
jle
mov
adc
cmp
sar
push
xchg
bound
push
cwtl
dec
je
test
sbb
add
sub
dec
jecxz
dec
sub
xor
scas
fstps
xchg
hlt
pop
sub
pushl
sub
inc
movsl
xlat
cmp
aaa
in
mov
insb
cmp
fs
sub
cmp
leave
out
push
dec
idiv
adc
mov
out
dec
xor
mov
lcall
cltd
iret
les
sbb
cmp
jmp
fdivr
and
scas
dec
stos
ret
aam
mov
jb
in
repnz
fildl
fldenv
xchg
in
out
bound
mov
inc
xor
cld
enter
push
mov
mov
loop
sub
xchg
push
jno
aas
movsb
movsl
sbb
xchg
loope
xor
mov
popf
adc
cmc
les
and
popa
inc
in
ljmp
sahf
pushf
pop
adc
inc
out
data16
sbb
and
sub
jg
cmp
aam
cltd
nop
push
insl
movsl
mov
jno
xchg
cmp
adc
dec
sbb
and
inc
cltd
jne
ret
fwait
mov
jecxz
fimull
arpl
or
fisubrs
popa
sub
and
adc
cmc
cmovs
xor
push
add
mov
adc
push
add
xor
cli
adc
aas
sbb
xchg
icebp
mov
cmp
adc
pop
inc
hlt
pusha
lea
mov
loop
lret
inc
imul
jecxz
in
mov
or
dec
test
xchg
mov
pop
loop
movaps
inc
std
leave
fwait
cmp
loopne
outsb
fnsave
push
xor
test
sbb
adc
shl
jno
repnz
insb
jb
repnz
pop
sub
fists
push
pop
xor
mov
jbe
sbb
mov
and
sti
ficompl
out
addr16
sbb
je
stos
add
test
jno
nop
xchg
sbb
dec
in
lret
sub
mov
adc
inc
insl
mov
aam
aad
sub
pop
dec
sbb
dec
dec
flds
imul
out
mov
ret
dec
imul
idivb
add
jb
loop
arpl
jb
mov
es
cmp
mov
inc
movaps
and
sti
sub
inc
jle
aam
lcall
inc
mov
mov
pop
roll
jnp
js
push
gs
divl
fildll
dec
std
imul
cmpsl
jbe
adcb
fwait
mov
stos
jg
and
imul
daa
icebp
xchg
movsb
mov
stos
clc
pop
inc
mov
or
jno
add
and
add
pop
sub
es
lret
mov
jmp
loope
loop
or
inc
test
fistl
add
scas
and
sbb
push
inc
iret
lret
dec
loope
xor
lret
mov
enter
into
testl
aaa
jno
in
jo
mov
aam
scas
les
jnp
inc
out
pop
mov
imul
rcrb
popf
sub
dec
pop
stos
aad
adc
jl
push
push
push
adc
out
cld
push
add
fimull
push
das
insb
call
mov
arpl
pop
test
scas
jo
mov
pop
adc
or
add
addr16
pop
scas
outsl
mov
adc
jmp
cmp
cmp
dec
lret
pushf
jle
cmp
imul
cmp
xor
sbb
and
stos
pop
mov
add
pop
dec
mov
cmp
inc
sti
in
in
cmp
mov
pushf
nop
mov
cmpsb
xchg
mov
jnp
inc
mov
push
xchg
mov
jne
out
pop
ja
sbb
fdivp
test
add
sarl
aam
and
imul
pop
stos
fadds
xor
push
sbb
mov
gs
lahf
sub
or
aad
adc
mov
lods
jmp
lcall
mov
and
jne
mov
mov
sbb
fisubrs
pop
stos
inc
mov
fwait
or
and
push
aaa
fisubrs
cmpsb
scas
dec
outsb
push
mov
jbe
imul
mov
cmp
mov
in
js
xor
int3
xlat
outsb
or
jmp
arpl
mov
arpl
jne
dec
mov
decl
stc
pop
hlt
fndisi(8087
sub
mov
outsb
es
and
mov
adc
je
cli
pop
mov
pop
push
nop
sub
lret
inc
ds
jne
sbbl
cltd
rorl
add
cltd
sub
adc
mov
mov
test
push
enter
test
js
xchg
push
dec
cmpsl
xor
cld
jge
movsl
cmpsb
loop
ret
xor
mov
dec
pop
lahf
fwait
cld
inc
push
push
jecxz
sub
in
addr16
test
ja
dec
cmc
in
imul
out
rolb
inc
clc
push
or
shll
clc
mov
dec
shrb
pop
jecxz
ljmp
std
xor
mov
fwait
dec
or
jno
rorl
ret
shlb
sti
popa
imul
ja
pop
or
pusha
jb
add
sarb
adc
mov
das
push
testl
pushf
inc
sarl
pop
mov
mov
popf
fs
enter
and
sub
jecxz
jne
xchg
jl
cmp
push
in
push
cmp
into
dec
test
fwait
div
sbb
rorl
lret
push
imul
add
in
pop
sahf
add
sahf
cwtl
mov
push
lock
xor
loope
test
xchg
mov
add
std
pop
in
loope
mov
inc
pop
call
mov
gs
dec
lret
outsl
cmp
insb
inc
insb
sbb
imul
out
lock
testb
bound
std
test
inc
adcl
fwait
add
jo
aad
fstps
inc
mov
jp
outsb
push
std
dec
stos
adc
push
ljmp
jb
inc
mov
push
shlb
flds
push
inc
mov
push
push
xor
mov
fs
ljmp
pop
jp
jl
add
insl
cmp
inc
dec
fstpl
push
orl
sub
xor
mov
dec
imul
push
sub
xchg
jge
call
lock
sub
sbb
jmp
out
pop
lock
cwtl
sbb
jg
testb
outsb
popf
xchg
pop
rolb
push
pop
push
stc
scas
call
pusha
adc
sbb
xchg
mov
and
lahf
faddl
inc
pop
lahf
jns
jg
lds
test
inc
cmpsb
mull
orl
mov
test
test
iret
dec
in
jecxz
dec
bound
mov
and
fstpl
pop
popa
ret
clc
aam
jnp
arpl
adc
sub
push
in
inc
scas
mov
das
fdivr
les
xchg
mov
data16
push
and
xlat
dec
sub
pop
pop
bts
sbb
test
sbb
cmc
sub
in
inc
imul
loop
dec
and
pushl
out
sbb
push
mov
add
fiaddl
pushf
pusha
inc
xchg
jge
movsb
xorb
lock
test
outsb
mov
xor
dec
mov
das
sti
lea
jb
test
fwait
jbe
xchg
xorl
sbb
clc
push
fs
and
cli
sbbb
loop
movb
je
push
int3
fsub
lret
aas
inc
jmp
leave
std
cmp
push
or
imul
ljmp
cmc
sub
scas
push
hlt
lds
cwtl
pusha
test
ja
mov
sbb
cwtl
inc
adc
std
imul
inc
push
sahf
xor
pop
int
or
enter
lahf
inc
xchg
mov
not
and
or
call
jne
sbb
jae
cmc
or
in
enter
mov
icebp
shlb
scas
adc
es
je
scas
and
dec
pop
jo
cwtl
dec
ret
adc
loop
jl
cs
inc
lods
mov
mov
aaa
jg
dec
dec
xchg
test
or
mov
das
and
and
loope
fsubrl
mov
movsl
mov
mov
andb
mov
scas
add
cmpsb
mov
iret
pop
inc
xchg
adc
sub
ja
cld
fs
out
int
shrb
repnz
in
divl
or
fwait
insl
roll
mov
rcrb
lcall
xlat
adcb
popa
lcall
jp
cmp
add
jns
stos
jmp
js
sahf
xor
rorl
inc
sbb
jl
pop
sub
fimuls
lock
rolb
xorl
sbbb
pusha
shlb
into
inc
xchg
xchg
shl
jne
jmp
or
test
orb
cmp
addr16
pop
leave
loopne
in
int
jo
sbb
fimull
testb
lock
out
addr16
push
add
aaa
into
nop
je
adc
or
popa
jb
in
std
xchg
out
push
push
xchg
call
shlb
pop
data16
stos
mov
ror
int3
dec
aad
or
pushw
stos
popf
sbb
inc
inc
xor
rclb
mov
rcr
lods
pop
scas
mov
shlb
xor
jo
push
mov
dec
mov
cmp
and
jg
bound
xchg
inc
cs
in
jl
dec
pop
push
leave
mov
aad
add
xchg
mov
out
mov
jge
mov
in
cmpsb
jb
or
rcll
add
pop
xor
adc
push
test
mov
aam
int3
arpl
subl
adc
add
push
ljmp
cwtl
dec
sarb
push
lahf
lret
fsubs
inc
mov
scas
negl
data16
out
shr
flds
push
cmp
iret
dec
sbbb
xor
inc
imul
je
push
addr16
push
add
fstl
adc
nop
mov
mov
cvtps2pi
dec
xchg
xchg
mov
xor
and
sbbl
inc
cmp
mov
mov
add
push
inc
or
pop
pop
sub
mov
and
and
mov
aam
outsl
xor
rcr
aas
jp
pop
adc
fiadds
fadds
sahf
pop
mov
cli
push
cmp
cmovns
dec
cmpsb
lret
jo
int
or
sub
xor
in
or
mov
call
ss
es
es
push
mov
xchg
lods
je
test
dec
or
enter
xchg
dec
and
in
jl
in
mov
or
push
lcall
cs
call
adc
mov
ds
cmc
mov
es
stos
xchg
sbb
lods
mov
pop
lret
bound
cld
xchg
lea
dec
cmpb
push
or
or
lahf
in
sahf
hlt
xor
add
pusha
xor
pop
repz
int3
and
dec
cmp
aas
fwait
push
adc
adc
repnz
int3
sbb
xchg
mov
pop
pop
gs
in
mov
xchg
shll
pop
dec
loope
dec
mov
mov
repnz
scas
rolb
pushf
jg
cmp
xorb
inc
mov
push
mov
scas
les
in
lret
sub
sbb
cmp
aad
enter
stos
mov
xchg
insl
std
add
inc
call
mov
hlt
push
ds
sub
subl
test
inc
pushf
dec
mov
imul
xor
add
leave
xchg
mov
sbb
push
xor
xor
inc
mov
lods
adc
sub
clc
arpl
shlb
adc
dec
outsl
and
add
scas
lds
and
aas
push
rcll
repz
mov
sub
push
sub
rcl
pop
loop
jbe
ret
jecxz
cmpsl
cli
inc
ror
in
xchg
xlat
mov
mov
repz
dec
mov
and
sbb
test
loopne
pop
cmp
js
xchg
mov
adc
dec
mov
mov
aad
clc
js
xchg
dec
push
add
fwait
mov
sbb
inc
dec
loopne
mov
decl
popa
sbb
insl
and
shl
outsl
repz
and
adc
xor
xlat
pop
xchg
jp
sub
loop
pushf
dec
jnp
and
loop
sbb
pop
cmp
adc
or
lcall
aaa
cmp
add
cwtl
push
aaa
test
ja
xchg
test
test
pusha
sbb
test
outsl
mov
inc
push
push
push
mov
in
call
inc
and
cmp
std
mov
enter
inc
outsb
xor
cmp
out
lahf
xor
push
xchg
test
fistl
enter
inc
push
nop
dec
and
pop
mov
out
bound
sahf
sbb
hlt
pop
pop
imulb
push
test
outsb
pop
jle
jno
mov
jecxz
mov
imul
xchg
call
sbb
clc
xor
jae
cmp
pusha
mov
pop
or
xchg
mov
call
inc
dec
mov
dec
imul
jo
cli
pop
dec
mov
aad
sub
jns
pop
mov
imul
gs
cmpsl
lods
shlb
xchg
jmp
test
dec
stos
xchg
jae
into
or
fisubl
mov
fs
sti
out
mov
xchg
in
cmc
xchg
mov
xor
inc
lahf
es
push
enter
add
or
js
cltd
lea
cmp
jg
inc
out
add
loopne
mov
push
push
and
jge
scas
adc
sar
cmp
push
loop
aam
negb
and
add
mov
mov
jl
lock
lcall
lock
insl
jp
int3
mov
xchg
push
cltd
shlb
or
dec
fidivs
fistl
addr16
or
out
arpl
mov
cmpsb
stos
scas
in
pop
stos
popf
add
xchg
aaa
cmp
jp
mov
and
jno
add
push
push
cmp
popf
or
push
and
sub
jno
daa
stos
ret
dec
sub
arpl
icebp
testb
pop
mov
inc
jmp
data16
scas
mov
scas
cmp
enter
js
test
jns
or
xor
mov
mov
pop
cmc
or
pushf
jbe
test
xor
xor
sbb
inc
mov
ret
xchg
popf
dec
outsl
adc
call
pop
sbb
pop
pop
fdivl
cltd
and
lods
add
xchg
jecxz
cmpsb
push
iret
add
enter
sub
add
popa
ss
das
jle
inc
inc
mov
mov
in
mov
mov
jle
call
or
and
dec
ja
xor
mov
pcmpeqd
mov
push
fnsave
jb
xchg
adc
shrb
pop
rorb
fsubrs
push
mov
lds
lahf
shr
xchg
mov
dec
adc
lods
jl
fwait
and
add
push
mov
mov
mov
mov
jns
jns
push
out
dec
cmpl
cwtl
mov
inc
lret
sti
repz
mov
pop
mov
sbb
repnz
sub
lahf
push
cmp
sbb
pop
xchg
jge,pn
inc
or
pop
mov
cs
xorb
sub
shll
lcall
fnsave
dec
cli
lahf
mov
call
adc
xor
mov
push
aad
jo
jl
movsl
push
push
arpl
mov
add
imul
sub
in
sahf
pop
loop
jae
dec
cli
andl
pushf
dec
test
xor
enter
push
outsb
cltd
fidivrl
out
imul
insl
and
add
dec
lock
jo
sbb
push
imul
clc
mov
fistps
in
add
ret
jo
rcrl
adc
call
pop
dec
icebp
dec
adc
mov
or
mov
cmp
es
jae
inc
lret
mov
sbb
pushf
fisttpl
repz
js
pop
push
lret
inc
xor
dec
sarb
idivb
imul
mov
push
lcall
cmc
lods
or
pop
xchg
jg
pushf
fistpll
sub
movsl
dec
jecxz
daa
into
xlat
sub
xor
das
shll
popf
leave
ret
fldl
push
mov
sub
scas
jbe
jae
push
fdivl
mov
dec
cmp
mov
inc
das
fldt
or
ficoml
and
es
sbb
sbb
scas
cmp
inc
div
les
xorb
jo
push
add
sub
xchg
xlat
sub
sub
mov
lock
in
fcoml
stos
aad
mov
stc
sarb
testl
arpl
adc
inc
das
test
cmpsl
xchg
dec
mov
sub
aam
mov
xchg
jnp
push
jnp
xchg
xchg
lahf
cmp
push
int
ljmp
leave
aas
lcall
test
pop
jecxz
pop
vpsubsw
andl
pop
fwait
mov
jns
incl
pop
iret
sub
pop
lods
scas
cmp
mov
addl
jmp
sbb
shlb
lret
das
mov
dec
movsl
movsb
mov
movsb
xor
lret
test
movsl
pop
dec
stc
outsl
jne
inc
push
cltd
sbb
cmc
sbb
mov
movsb
jo
adc
mov
and
or
aam
cmc
xchg
pop
fs
imulb
inc
sub
or
setg
mov
loop
mov
pop
and
mov
fidivrl
mov
sbb
lret
rcll
repnz
int3
js
cld
fsubp
push
sub
push
cmp
add
test
adc
fcoms
add
mov
dec
inc
ds
imul
in
and
mov
mov
adc
mov
inc
push
adc
xor
insb
rolb
rol
dec
add
movsb
add
jo
mov
cltd
push
outsl
popf
lock
or
jnp
mov
push
pop
mov
nop
mul
jnp
inc
xor
jae
xlat
inc
cmc
pop
mov
push
mov
xor
stc
mov
and
xor
push
into
xchg
xor
lret
jne
add
lea
push
cmp
and
pop
jg
or
push
mov
divb
xor
out
push
push
pop
popf
mov
je
mov
test
pop
pop
popl
inc
hlt
or
ljmp
sub
jge
xchg
jp
mov
inc
adc
add
dec
pushf
out
cmc
test
out
inc
nop
mov
les
adc
dec
sti
inc
push
movsl
sbb
dec
pop
xchg
lock
dec
mov
stc
fs
jnp
test
rcl
ljmp
ja
int
je
in
mov
ja
movsl
add
and
mov
loopne
push
xchg
push
jae
inc
cmp
sarl
inc
or
pop
sub
insb
cmp
pop
and
jno
push
mov
cmpsl
add
push
fsts
daa
loope
test
or
inc
sub
in
mov
sub
xorl
jecxz
addr16
xchg
mov
subl
jbe
or
or
pop
xchg
mov
mov
push
dec
mov
push
sarl
mov
fsub
mov
push
push
sub
xchg
repnz
and
mov
icebp
dec
inc
cmpl
push
or
mov
xor
sub
stos
mov
sbb
adc
movsb
ret
ret
mov
lods
mov
xor
push
or
mov
test
addps
cmp
outsl
testl
es
or
xor
int
stos
xchg
sub
sbb
loop
test
sbb
pop
jb
lcall
pop
add
mov
call
pop
fs
mov
adc
dec
incb
clc
mov
jns
xchg
std
fadds
fs
nop
call
xor
xchg
rorb
dec
lods
add
and
mov
fnop
fwait
mov
pop
jnp
sub
inc
or
cmp
adc
mov
mov
sbb
mov
pop
dec
mov
cmp
insl
enter
out
fisttps
sbb
leave
or
sbb
aaa
iret
mov
rorb
and
dec
sti
aad
mov
nop
jp
cwtl
popf
cmp
cs
pop
and
insb
stc
inc
adc
dec
stos
mov
or
adc
loopne
in
out
inc
into
adc
add
dec
inc
orb
xor
pop
xor
mov
out
dec
adc
jmp
mov
loop
ret
repnz
repz
mov
jmp
xor
xchg
and
adc
stc
or
sbb
lds
jge
mov
pop
push
and
sub
xor
sbb
jmp
movsl
jno
dec
push
fmuls
popf
cmp
ja
sbb
add
sub
jns
sbb
jmp
sarb
mov
call
les
subl
xchg
enter
in
icebp
adc
xchg
nop
xor
lcall
add
je
push
or
loopne
into
sub
mov
shrl
aam
xor
cmpb
mov
daa
or
sbb
leave
jl
mov
mov
sahf
in
xchg
das
jns
ljmp
popf
lcall
add
or
mov
popa
or
push
shlb
add
leave
inc
add
stos
sub
call
xor
stos
in
hlt
ffree
clc
cmp
stos
and
push
jns
mov
fstps
lret
in
out
and
lds
pop
imul
dec
sbb
cmpsb
pop
add
lock
stos
mov
inc
pop
subl
mov
pop
in
repz
xchg
jg
test
call
stos
dec
mov
mov
pop
ret
cltd
cmc
cmp
xchg
data16
mov
mov
push
lcall
ret
out
cmp
pop
int
aas
in
mov
pop
push
into
test
mov
push
enter
sub
mov
or
lods
dec
mov
sbb
inc
dec
movsb
ss
mov
mov
shl
fadd
pop
aam
xchg
pop
add
paddb
mov
cli
popa
gs
push
dec
push
test
movsb
mov
mov
in
out
cmpsl
xchg
popa
fsubs
bound
push
cmpsb
or
out
std
divb
inc
nop
xor
pop
push
shll
jge
jmp
fisttps
sarb
pop
mov
ds
dec
enter
jmp
sbb
addr16
sub
es
bound
cmovbe
xor
mov
pusha
call
adc
stos
js
sbb
and
push
sub
stos
push
fldl2e
popa
ret
stc
in
imul
ja
sbb
and
mov
push
cmpsl
mov
lahf
test
dec
pop
sub
mov
int3
add
dec
test
and
mov
pop
jg
jns
sub
lahf
sahf
in
adc
dec
pop
cmp
and
lahf
les
lcall
call
and
and
fimuls
ljmp
js
out
repz
mov
mov
testb
js
or
sub
imul
loope
out
add
das
cwtl
pop
push
out
sbb
inc
inc
push
mov
in
loope
xor
xchg
sub
popa
adc
scas
into
enter
pop
add
movsl
out
repnz
dec
xchg
icebp
jl
mov
divl
xchg
fbld
jnp
or
imul
dec
mov
popf
jl
dec
sub
test
xchg
push
sarl
xchg
push
xlat
insb
dec
xor
xlat
test
fnstcw
xlat
iret
lock
sti
mov
lret
jb
pop
dec
or
cmpsb
loope
pop
adc
call
mov
cwtl
and
pushl
and
jmp
xlat
cmp
ja
xor
ljmp
mov
fdivrs
dec
iret
stc
adc
pop
push
test
pusha
jnp
shlb
fcoms
xor
mov
into
sahf
mov
push
nop
addr16
pop
mov
andb
sbb
jno
in
mov
push
lahf
inc
insl
test
and
push
gs
jb
int3
or
into
mov
cmp
outsb
dec
scas
and
push
imul
roll
ret
jbe
and
and
pop
or
cmc
aas
xor
mov
in
mov
xchg
mov
sahf
mov
ss
mov
cmc
mov
pop
imul
sub
inc
pop
hlt
js
jmp
in
jno
jge
stos
stc
jae
and
decl
aaa
js
out
push
orb
jecxz
rolb
or
push
ja
ret
fisubl
mov
pop
adc
add
dec
imul
shll
pop
push
bound
orb
jmp
pavgb
data16
enter
adc
scas
sbb
cmp
xchg
jbe
mov
push
mov
dec
pop
decl
and
or
adc
dec
push
cmpsb
fsts
or
pop
push
cmpsl
sbb
and
movl
test
mov
sahf
aam
ror
cli
push
xchg
iret
mov
xor
enter
adc
mov
push
movsb
mov
cli
scas
lcall
push
jle
mov
test
xchg
loopne
bound
out
push
pop
jno
pushf
cmp
sbb
inc
out
hlt
pop
leave
push
push
paddusw
sub
adc
outsl
mov
out
clc
push
lods
in
push
aad
jnp
push
cwtl
cmp
mov
push
mul
xchg
add
mov
cmp
cmc
pop
push
test
nop
adc
or
jg
pushf
jno
pop
dec
cmpsb
xchg
inc
dec
sbb
sub
jmp
cmpsb
xchg
and
mov
jg
push
mov
test
add
fxch
mov
cmc
dec
rcr
jbe
adc
subl
mov
movsb
test
xchg
testb
xchg
fimull
fmull
js
dec
cmpsl
shr
subl
idiv
call
daa
dec
fcmovnu
clc
pop
pop
sbb
jo
and
mov
rcl
movsb
cmc
bound
cmp
or
mov
sahf
push
add
xchg
mov
test
and
shl
jo
shll
jle
sti
and
cwtl
lock
mov
imul
pop
pop
jae
add
xacquire
jmp
jle
add
imul
int3
pop
sub
cmc
mov
call
pop
adc
or
mov
push
add
inc
jmp
mov
push
cli
pop
notl
rclb
fisubrs
adc
dec
push
jle
jle
into
xchg
jge
cmpsb
lret
pop
jmp
sbb
adc
sbb
dec
rclb
add
insb
and
aad
inc
jmp
inc
mov
loope
subb
xchg
push
cs
fsubrp
push
fsubrs
jmp
sbb
js
jno
mov
jnp
pop
sub
pop
int3
loopne
loope
jmp
dec
inc
pushf
mov
mov
or
out
push
sbb
out
dec
cmp
daa
sar
sub
and
popa
mov
or
xlat
insl
ds
sti
mov
sbb
ret
xchg
lods
cmp
lods
cmpsb
int
lret
mov
cmp
test
insb
sub
and
jle
cmp
mov
or
testl
cmpsl
mov
cmp
popa
pop
jns
sbb
inc
cmp
pusha
inc
addr16
jbe
dec
mov
mov
xor
fldenv
popf
pop
pop
mov
aam
add
pop
sub
mov
jo
pop
int
shll
aam
rclb
jecxz
es
insb
addb
xor
fs
pop
xchg
loope
je
and
scas
out
fldl
bound
dec
jp
outsb
adc
jbe
push
inc
mov
or
cli
ret
rolb
orb
xor
rorb
dec
dec
sub
scas
jge
ds
jae
pop
or
cmc
jb
push
icebp
std
jb
outsb
dec
jb
mov
in
and
sbb
sbb
sbbl
orb
mov
mov
mov
sub
cld
lods
jb
mov
lds
jge
iret
or
add
inc
int3
xor
movsl
int3
sub
fwait
lahf
mov
shlb
jecxz
imul
fucomp
and
adc
int3
popf
push
xor
shrb
or
test
jo
bound
lret
pop
push
in
ljmp
shlb
pop
push
mov
ljmp
pop
jno
jbe
pop
xchg
loopne
push
xchg
xchg
int
negl
arpl
pop
inc
stc
dec
hlt
aam
outsb
fdivl
sub
dec
mov
inc
inc
and
jno
push
inc
stos
into
jmp
fiaddl
stc
mov
cmpl
fistpll
mov
movl
ret
popf
push
and
push
sub
jg
out
mov
test
icebp
or
jle
lret
push
pop
pop
pop
push
addr16
fwait
cmp
iret
jmp
bound
lods
pop
fadds
sbb
out
xchg
cmpsb
mov
in
in
add
push
fucomip
scas
sbb
cmc
adc
push
jbe
mov
mov
sub
add
pop
iret
mov
xor
push
adc
outsl
inc
cwtl
dec
push
adc
popa
or
popa
and
hlt
out
repnz
hlt
lods
xchg
stc
push
push
leave
or
mov
aad
push
sbb
xor
stos
fistpll
lcall
rclb
jmp
dec
lret
push
mov
bound
xchg
in
xor
cmp
push
jo
lcall
sahf
mov
push
jo
jle
js
xchg
je
push
sahf
push
scas
pop
sub
mov
or
xor
rorl
xchg
shll
cmpsb
xchg
fisubs
sbb
jge
mov
mov
and
jle
lret
imul
mov
and
push
js
and
fstpl
xor
add
jno
and
cmc
in
adc
pop
jl
lea
std
pop
icebp
or
mov
xor
pop
fadds
xchg
or
jbe
in
or
push
xor
cmp
lahf
or
repz
mov
daa
inc
lret
fwait
test
aad
cwtl
jo
shrb
pop
inc
mov
push
mov
sbb
mov
mov
xchg
pop
inc
int3
in
lea
pop
mov
notb
xchg
test
movsl
in
and
loope
lret
or
mov
jns
pop
sbb
int
test
sbb
stc
xlat
xchg
cmp
pop
leave
push
adc
outsb
je
ljmp
jae
out
cmp
xor
negb
in
ja
ret
mov
xchg
aas
rclb
pop
mov
gs
jmp
addr16
and
mov
xchg
scas
movsl
cmp
adc
iret
push
pop
dec
daa
arpl
add
xor
inc
adc
inc
adc
arpl
jno
add
cmc
sub
mov
sbb
push
jp
scas
je
add
jg
outsb
mov
pop
movsb
scas
lock
mov
pop
ljmp
daa
push
sub
call
pop
js
sub
fdivl
test
inc
mov
mov
in
sbb
rorb
sbb
cmpsb
xchg
das
inc
je,pt
pop
xor
dec
push
loopne
inc
hlt
pusha
push
stos
mov
dec
and
in
in
clc
hlt
enter
or
out
mov
sbb
mov
xchg
cmp
aas
dec
mov
push
icebp
inc
stos
cmp
cwtl
aad
jecxz
xor
movb
add
jo
out
push
inc
mov
sub
ljmp
jne
adc
out
and
mov
xchg
mov
or
fsts
or
ret
sarl
inc
mov
push
scas
shufps
jl
cs
out
sahf
in
addr16
push
mov
ja
push
xchg
fdivs
out
test
sbb
lcall
test
push
add
outsb
mov
sbb
in
jle
in
pop
insb
inc
dec
jne
xor
push
xor
dec
sbb
dec
add
mov
in
int3
push
pop
inc
ficoml
clc
xor
mov
fidivs
lret
lock
mov
enter
pop
mov
and
popa
push
insl
pushw
mov
xchg
mov
pop
and
lds
fcompl
insb
stos
mov
sbbb
jecxz
aad
cmp
jns
lods
je
in
cmpsl
or
mov
leave
insb
sub
scas
pop
jecxz
add
inc
add
and
pusha
loop
int
out
ret
push
and
lret
outsl
popa
cmpsb
mov
pushf
int
cvtps2pi
push
rorb
sub
repz
sahf
xchg
call
and
dec
lds
leave
cmpb
popf
rcr
dec
shlb
rorb
lret
mov
das
aam
mov
lret
or
add
je
xchg
pop
push
stc
add
inc
sbb
scas
push
xchg
cmp
sbb
push
adc
push
mov
cli
sub
in
std
es
xchg
ja
popa
test
mov
test
outsl
js
jno
xchg
std
and
push
push
and
aam
out
enter
repnz
add
xor
fmull
sub
pop
rorl
stos
outsl
popa
out
pop
ds
push
clc
jg
cltd
jnp
mov
dec
push
neg
retw
mov
push
or
movsl
push
sti
mov
inc
outsb
mov
mov
aad
xchg
sbb
test
enter
aas
dec
ss
fldenv
int
or
popa
inc
mulb
ja
stc
das
nop
and
fwait
mov
lret
cmp
int
lret
push
and
dec
push
stc
and
sbbl
das
adc
pop
lea
dec
inc
pop
dec
mov
cmp
push
sub
cmpb
or
cmp
pop
js
in
jae
pop
shrb
outsb
aam
fimuls
outsb
jge
cli
ja
push
movsb
pop
jae
test
jp
pop
iret
popl
les
fwait
inc
dec
cli
adc
sbb
cwtl
pop
jle
lret
jl
lahf
mov
lcall
and
sbb
nop
mov
and
data16
mov
push
jmp
xchg
imul
inc
popa
push
pop
je
imul
test
ja
or
jmp
call
xor
pop
out
es
imull
int
dec
inc
fdivs
add
aaa
dec
push
xchg
xchg
fisttps
insl
cltd
push
insb
cmp
adc
adc
add
jo
mov
sbb
ss
dec
cmp
jge
test
shl
ss
rcr
std
inc
insb
and
fistpl
repnz
jge
cli
lretw
xchg
inc
xchg
dec
and
sub
sbb
mov
jle
xor
repz
rorb
lahf
fsubrl
cmp
adc
in
push
and
scas
ret
jge
in
cld
movsl
sub
inc
rol
ret
or
cmpsb
lods
idivl
fwait
arpl
mov
xor
and
mov
adc
test
test
xchg
out
cmp
cli
jb
mov
cmp
dec
push
adc
inc
inc
add
push
ror
jmp
sub
cmp
out
adc
jp
xor
daa
icebp
sti
add
push
dec
testl
sahf
mov
cli
mov
jne
jg
xor
je
out
and
bound
pop
jnp
jl
aad
cmpsl
dec
push
cmpsl
sbb
push
mov
addr16
scas
sub
mov
dec
adc
pop
sbb
dec
and
push
jge
add
add
ljmp
dec
mov
pop
inc
sbb
in
cmpsb
xchg
cmp
and
sbb
adc
lret
cmp
pop
xchg
nop
and
hlt
jb
bound
xchg
out
push
sahf
xor
inc
mov
adc
scas
inc
mov
xchg
ret
xor
insl
test
mov
ss
test
cmp
test
xor
int3
and
out
ss
push
in
dec
cmp
sbb
jge
lods
insl
mov
nop
movb
fstpt
mov
push
and
mov
dec
in
je
mov
rorb
push
sbb
lea
sub
sbb
cwtl
lret
and
sbb
fstpt
add
aas
add
xor
mov
enter
cmp
ja
jns
ret
pop
ja
sbb
mov
out
sub
lods
outsb
sub
pop
mov
in
sub
inc
add
loopne
push
adcb
add
dec
or
mov
jg
lret
jle
aaa
adc
and
fnstcw
aas
mov
iret
cmp
mov
rorl
mov
ret
ret
in
or
js
mov
call
mov
aaa
lret
sbb
pop
xchg
or
push
sbb
push
push
sahf
ret
jns
push
add
mov
push
lods
push
cld
pop
or
adc
xchg
and
les
test
pop
mov
aaa
imul
shlb
das
les
pop
sti
lahf
push
aaa
test
mov
in
arpl
jmp
cmp
scas
addr16
jle
mov
xchg
cld
aad
mov
or
xchg
mov
mov
shll
dec
jo
cltd
mov
fmull
mov
jns
and
dec
push
mov
repz
aaa
iret
inc
iret
mov
xchg
std
mov
mov
push
dec
and
imul
mov
das
add
inc
xchg
and
ja
xchg
ja
out
cmpb
lods
pop
cmp
add
fisubl
and
push
xor
call
in
aas
lods
dec
lcall
mov
inc
jmp
or
dec
push
pop
sbb
push
xchg
ficoms
or
movsb
in
xor
or
lods
lods
mov
push
mov
push
inc
rolb
jecxz
fbstp
data16
adc
xor
pop
mov
cmp
add
faddl
in
push
push
or
and
push
addr16
pusha
mov
add
lcall
enter
das
or
cmp
push
test
xchg
addr16
cmp
pusha
loopne
adc
outsb
jno
jl
xor
sub
xor
pop
cli
hlt
shrb
sub
int
fcmovbe
call
hlt
jnp
ficompl
xchg
push
pop
mov
pop
and
cmc
add
inc
xchg
hlt
psllw
stc
lret
leave
xchg
jmp
loope
inc
pop
outsb
cmpsb
fcmove
adc
mov
inc
out
sbb
pop
mov
leave
sti
push
mov
and
dec
fsub
xchg
pop
or
add
inc
hlt
xchg
and
adc
scas
push
mov
es
jbe
cwtl
jg
test
test
and
cmpsl
pusha
fidivrl
xchg
or
sbb
xor
mov
mul
or
shl
dec
jno
sub
shlb
les
imul
push
mov
mov
mov
sub
popf
loop
inc
xchg
sbb
pop
in
aaa
sub
test
push
push
fnstsw
fwait
jl
in
call
clc
push
pop
imul
ljmp
xchg
mov
add
mov
cli
aad
in
movups
repz
jno
lcall
cmp
mov
je
decb
cmpl
adc
or
inc
int
in
cli
int3
mov
jl
outsb
arpl
sub
push
mov
jg
xchg
ljmp
jmp
lods
adc
jl
jae
pop
imul
mov
outsl
jae
sbb
scas
mov
aaa
sbb
stc
mov
shll
sbb
mov
mov
xchg
lahf
adc
inc
int3
pusha
sub
shll
mov
iret
iret
jmp
cmp
sbb
rorl
sbb
ja
inc
mov
push
lods
adc
ret
fdivr
jbe
shll
cmp
fwait
jb
scas
add
push
pop
enter
mov
xor
push
jnp
leave
push
pop
imul
or
sbb
mov
lcall
cld
sbb
adc
jg
sub
aas
xchg
cmp
mov
push
sub
xchg
xlat
call
mov
mov
iret
lcall
test
scas
shrb
pop
cmpsl
sub
push
ret
mov
mov
fs
sub
loopne
pop
push
dec
out
push
cld
stos
popl
or
cmc
pop
cmp
add
test
shlb
mov
jns
adc
iret
xor
mov
hlt
jns
mov
in
lock
in
out
mov
xchg
xor
or
fbld
fldt
or
mov
call
cmp
pop
push
clc
lahf
insl
in
cli
xor
addl
xchg
mov
outsl
jge
lods
mov
bnd
cld
add
sbb
xchg
bound
mov
cmpl
cmpl
movsl
out
sub
inc
adc
xchg
aad
xchg
adc
pop
test
mov
lods
stc
xchg
ror
inc
sbb
push
xchg
dec
sbb
imul
xchg
dec
or
push
xor
and
into
inc
mov
scas
test
addr16
push
sbb
out
rcl
mov
insb
enter
pop
arpl
adc
pop
sub
jno
cltd
sub
dec
nop
frstor
pop
push
mov
cmp
int
cmc
mov
jnp
jecxz
dec
or
lds
repnz
jb
aad
and
cmp
dec
shll
lahf
scas
inc
xor
push
push
popa
mov
fwait
outsb
imul
fs
cmp
mov
push
xchg
aaa
pop
xlat
or
cltd
dec
jno
cmp
mov
inc
cmpsb
push
aaa
jae
ficoml
and
iret
push
push
scas
cmpsl
mov
pop
jns
jecxz
popa
and
push
jg
push
mov
dec
ret
dec
inc
dec
pop
addr16
mov
pop
sbb
pop
in
sub
xor
cmpsl
div
into
loopne
repz
xchg
ja
in
or
hlt
adc
xor
pop
lods
xchg
mov
ja
jnp
mov
mov
lds
push
inc
mov
lods
test
inc
in
sbb
subl
stos
push
lcall
mov
mov
jp
adc
sbb
loop
das
pop
sub
pop
dec
push
scas
mov
es
data16
jns
loopne
dec
or
and
cmp
cltd
fwait
xlat
stos
cmp
outsl
jbe
mov
rcrb
jns
aas
sub
cmp
jl
push
sarb
in
ret
cmp
xchg
aas
cld
xor
cmpsl
jb
cmp
imul
cmpsb
mov
cmp
dec
dec
imul
into
mov
test
sbb
pop
mov
pop
bound
rclb
cmp
mov
mov
int
pop
inc
mov
js
jl
enter
mov
popf
ds
cmpsl
push
jo
mov
sbb
jp
cmp
hlt
jne
leave
jnp
push
ret
sbb
lds
and
mov
and
push
push
lret
cmp
and
or
cmpsb
insl
iret
lock
nop
std
sbb
addb
es
dec
sbb
add
in
mov
in
daa
add
sub
scas
lret
inc
or
jmp
imull
in
xchg
xchg
addr16
popf
nop
jmp
inc
or
push
repnz
mov
lds
scas
out
push
cmpsb
fidivrl
fisubrl
mov
mov
nop
mov
pop
loopne
inc
dec
and
mov
sbb
clc
add
outsb
or
mov
pop
mov
pop
xchg
cmp
es
fwait
add
sbb
lock
jae
stos
cwtl
jmp
aad
loope
lock
iret
mov
mov
ds
cmp
mov
push
add
adc
mov
lods
bound
inc
jns
mov
addr16
pop
in
pushf
mov
icebp
dec
cwtl
stos
sbb
shl
insb
and
arpl
orb
cmp
dec
jl
addb
lds
xchg
pop
jmp
mov
fldenv
imul
das
xor
dec
push
or
ja
sub
pop
nop
push
mov
lock
mov
xchg
stc
loope
stos
out
cmp
loopne
adc
and
adc
mov
adc
mov
jmp
push
stos
pop
sahf
in
jo
in
add
sub
pop
pushf
jns
cmp
ja
pop
leave
int
andb
popf
or
dec
mov
arpl
sahf
xchg
lret
repz
push
add
movzwl
push
and
sub
xor
in
mov
pop
mov
cltd
xor
sbb
push
sbb
mov
lret
movsb
jmp
int3
mov
pop
sbb
sub
xchg
sub
test
xchg
repnz
enter
bswap
hlt
mulb
inc
popa
push
aas
or
ret
mulb
add
inc
add
test
cmpsb
lret
dec
xor
adc
push
add
out
cmp
lea
mov
in
into
xchg
jnp
repz
lods
mov
lcall
sbb
xchg
mov
outsl
mov
push
jle
inc
fnstenv
pop
add
cmpsb
ss
fs
cli
scas
rcrl
or
out
mov
adc
mov
aad
inc
pop
push
lock
pop
mov
ret
jmp
fucomp
inc
test
mov
int3
js
cmp
or
aaa
ds
jle
or
insl
and
push
mov
or
in
jg
imul
int3
or
push
dec
roll
add
sub
mov
jle
imul
mov
stc
in
adc
jb
fstpt
push
pop
call
je
push
xchg
inc
push
popf
daa
insb
pop
pop
inc
jnp
and
adc
data16
pop
cld
shll
sti
ljmp
ljmp
push
push
int3
loop
push
jno
cmp
cmp
insl
sbb
pop
data16
dec
imul
outsl
pusha
or
outsb
outsl
loope
inc
sub
cmp
inc
lret
cmp
lds
or
clc
test
ds
nop
pop
push
rcll
outsb
dec
sbbl
fisttps
cmp
jae
imul
dec
stc
out
jo
or
mov
aad
inc
mov
or
cmp
dec
stc
das
mov
sub
in
mov
or
push
les
out
std
fsubp
mov
es
stos
aas
fcmovnb
fwait
insl
imul
pop
loop
xchg
ret
dec
mov
lods
fiaddl
mov
lahf
nopl
sbb
inc
insb
daa
mov
mov
std
in
popf
addr16
dec
adc
call
idivl
jle
repnz
mov
sbb
mov
lret
cmp
dec
out
or
cmp
pop
pop
mov
xor
push
pop
pop
and
fsts
mov
add
xchg
mov
mull
mov
lret
dec
adc
jmp
mov
in
jp
test
dec
xchg
pop
sub
pop
popa
ret
mov
mov
lock
cld
mov
ljmp
dec
fldenv
push
xor
adc
dec
cmp
out
jl
adc
cld
out
add
push
roll
cmpsb
fnsave
out
inc
adc
mov
and
loop
xchg
stos
mov
sbb
loop
jmp
movsl
mov
in
aam
dec
mov
aam
inc
lods
data16
inc
jo
int
fidivl
outsl
ss
imul
pop
lods
push
out
fdivl
inc
pushf
stos
insb
xor
ljmp
fbstp
fisubrl
pop
gs
push
adc
in
aad
pop
aaa
and
imull
aaa
cltd
loopne
loop
fwait
movb
adc
or
lods
xor
aam
and
mov
push
or
mov
adc
faddp
xor
mov
mov
into
leave
xor
inc
leave
push
clc
das
shrd
dec
andps
push
rcll
testl
and
test
dec
dec
bound
mov
ds
and
clc
sub
jae
mov
or
cmp
loopne
mov
adc
sarl
push
sub
pop
scas
pop
dec
lds
cmp
fiaddl
push
inc
and
lods
fldl
into
push
jo
pop
pop
lahf
pop
sub
iret
dec
ds
das
sbb
jne
out
adc
or
mov
add
cmp
jnp
xor
in
movsb
daa
lods
or
push
sub
sub
loope
ret
les
mov
mov
icebp
stos
xor
adc
mov
cli
mov
mov
sub
mov
cmpsl
arpl
pop
cmp
mov
add
inc
movsl
out
xor
mov
sub
dec
cmp
ficompl
dec
outsl
fwait
mov
and
loopne,pn
jge
push
xchg
clc
dec
lret
mov
mov
mov
in
cwtl
adc
incl
sub
cmpsb
je
cli
mov
xlat
outsb
test
lds
push
dec
aad
mov
mov
addr16
js
call
mov
mov
inc
cmp
or
xlat
xchg
lock
jne
push
jo
scas
add
pop
pop
sti
je
fldt
test
mov
fimull
or
sbb
mov
out
pop
test
push
adc
jns
jg
push
call
shlb
rcll
ja
out
or
push
out
lods
sbb
xlat
mov
ret
inc
jb
add
push
jl
orb
dec
xchg
xor
stc
xchg
cmc
mov
mov
or
ret
xor
xchg
xchg
fildl
sbb
mov
ljmp
mov
and
push
mov
bound
and
shrb
mov
fdivr
add
inc
repnz
popf
and
mov
lcall
inc
push
lods
xchg
addr16
cli
xchg
ja
out
or
sahf
icebp
mov
xchg
xor
xchg
inc
pop
mov
push
out
pop
cmp
pusha
dec
jp
or
gs
test
stc
mov
popfw
pop
xor
sti
shl
or
fcoml
fnstsw
ret
mov
jae
out
fidivl
inc
cs
xchg
mov
stc
pop
or
adc
int3
std
inc
dec
and
int
lcall
call
mov
les
and
jb
out
fs
pop
xlat
pop
push
mov
cwtl
xor
cmp
ds
sti
imull
adc
sbb
jmp
mov
jmp
imul
loopne
adc
or
xor
inc
sti
or
loope
mov
sub
mov
add
popa
pop
xchg
int
test
icebp
xor
cmc
int3
mov
inc
adc
leave
sbb
mov
jle
in
out
cmpl
and
movsb
or
push
in
ljmp
out
decl
and
aad
leave
add
pop
addr16
xchg
sub
rorb
xchg
movsb
outsl
and
mov
mov
add
adc
vmovddup
xchg
fisttpll
sti
add
lock
sub
jg
out
push
add
and
cmpl
sbb
addb
in
jg
adc
fnstenv
nop
pop
repnz
fnstcw
push
push
jmp
test
lods
xchg
fldt
pushf
adc
push
jmp
push
nop
push
notl
test
mov
sbb
dec
popf
shll
data16
push
dec
mov
popf
sbb
xor
xchg
xchg
lods
fwait
cwtl
test
push
jne
mov
cmp
and
mov
test
int
and
rorl
xorb
fdivl
outsb
subl
jle
or
lret
test
cmpsl
push
bound
repz
pop
repnz
sbb
inc
ret
faddp
addl
sub
xor
iret
aam
dec
sbb
cmp
xor
add
sub
xchg
jae
push
clc
xchg
adc
mov
sti
sbb
ss
jb
pop
jle
addb
fs
fwait
idiv
popf
adc
sub
cltd
clc
test
imul
dec
fdivs
add
pop
cmp
push
inc
test
out
mov
imul
pusha
scas
sbb
cmp
lock
aas
iret
dec
scas
stc
push
aaa
mov
adc
daa
lahf
or
xchg
jle
lahf
mov
addr16
fists
decb
fs
fs
push
arpl
pop
imul
data16
loop
scas
ret
jecxz
cmp
cld
hlt
dec
ds
push
push
pop
fmulp
popa
sbb
cmc
dec
inc
cmc
mov
test
jae
or
pop
test
sub
lock
pop
insl
add
push
xlat
mov
out
subl
lods
ret
insb
insb
xor
shll
stos
jno
and
shlb
pop
movsb
or
das
pop
adc
dec
popa
mov
push
scas
andb
ljmp
clc
aam
mov
iret
adc
ret
sbb
add
test
mov
nop
cwtl
and
test
repnz
push
divl
mov
jne
out
sbb
test
xor
jno
mov
test
test
mov
fcmovnu
xchg
inc
sbb
roll
push
iret
jo
into
js
incl
push
pop
psubusb
ret
add
out
pop
ret
data16
xchg
popa
stc
test
push
jecxz
mov
add
mov
xchg
lock
out
stos
mov
fadd
ficoms
faddp
ret
imul
out
push
inc
mov
jmp
pop
add
daa
es
in
adc
inc
inc
sub
cmpsb
cmpsb
cltd
pop
imul
data16
mov
push
repnz
enter
pop
xchg
hlt
mov
outsb
and
loopne
pop
int
dec
popa
adc
pushf
or
xchg
in
mov
jge
faddl
and
insl
loope
mov
loope
or
mov
cmpsl
stos
or
pop
inc
push
ret
jns
je
cwtl
in
push
int3
inc
push
cltd
xor
sub
scas
mov
push
lds
adc
adc
les
mov
daa
faddl
add
cltd
repnz
std
cld
or
cmp
push
dec
and
jecxz
sbb
test
fadds
notl
mov
cli
aam
cmpsb
sub
scas
lahf
jns
sbb
divb
cmp
fdivl
rolb
xor
push
jb
dec
push
sub
add
repnz
call
mov
orb
pop
ret
adc
push
les
int
adc
pop
adc
fildll
or
ret
lcall
aam
pop
loopne
or
jo
test
das
pop
je
imul
js
mov
fsub
push
enter
pusha
mov
fsubrs
shr
loop
aad
into
cmpl
into
inc
ja
cmpsl
into
sbb
sub
push
jae
sbb
das
sbb
out
xchg
out
lea
or
in
sub
add
fidivl
popa
jecxz
cmc
sbb
out
lods
xchg
adc
dec
popf
shlb
clc
fcomps
dec
sub
lock
leave
imul
jae
data16
leave
sti
int
mov
les
push
mov
les
lock
stos
ret
call
inc
push
ret
rorl
pop
xchg
cmp
inc
dec
into
stos
add
jae
imulb
or
sub
imulb
ja
outsl
lea
and
adc
pop
outsb
dec
repnz
add
pop
lret
outsb
jecxz
cmp
test
std
sarb
jmp
mov
das
xchg
cmp
dec
xor
daa
mov
test
sub
mov
hlt
notl
in
push
inc
sub
inc
mov
inc
stc
fdivrp
scas
mov
or
dec
hlt
or
loop
sub
arpl
ffree
and
xorl
push
test
xchg
xor
pop
cli
add
test
add
and
and
and
lea
mov
sbb
pop
cmp
outsb
dec
and
int
mov
add
push
jp
std
iret
rcrl
js
adc
mov
andb
mov
imul
ljmp
jo
jecxz
sub
sahf
repnz
mov
repnz
add
sahf
ja
popa
push
and
mov
sahf
insb
xchg
popa
pusha
adc
dec
add
pop
je
dec
push
push
sbb
enter
sbb
and
insb
js
mov
fxch
repnz
inc
sti
mov
cmp
ret
aam
mov
sub
sahf
sub
leave
inc
fwait
iret
mull
add
jecxz
icebp
outsb
ds
xor
pop
mov
in
test
daa
inc
jge
iret
xchg
mov
pop
test
mov
pushf
fadd
dec
ljmp
push
repz
adc
or
lahf
cld
push
push
outsb
pop
cmp
pminsw
dec
xchg
mov
jge
mov
jmp
movsl
cmp
es
mov
sahf
mov
jmp
mov
outsb
test
dec
push
ds
jae
or
cmc
test
outsb
sahf
sbb
dec
push
sub
sub
test
jae
fisttpll
and
jg
dec
int3
shrb
mov
nop
loope
inc
mov
les
addl
jmp
xchg
mov
inc
je
push
jmp
outsb
scas
jbe
lahf
xchg
add
pop
inc
mov
shrl
jg
mov
in
dec
or
nop
mov
loop
inc
add
xor
arpl
jle
out
movsl
cmp
lds
or
scas
mov
pop
movsl
push
aad
rcrb
jns
or
or
out
jecxz
pushl
js
les
pushf
bound
out
dec
icebp
inc
enter
outsl
mov
movsb
dec
xchg
sti
gs
and
adc
jge
push
xchg
inc
sti
add
bound
fnsave
loop
sub
mov
xchg
mov
mov
pop
loopne
cmp
movsb
dec
sbb
push
jae
jmp
in
sbb
mov
mov
cmpsl
popa
aad
aam
fs
lea
repz
xor
out
lahf
cmp
sbb
repnz
dec
mov
mov
add
fs
mov
xchg
push
test
das
jo
sub
inc
inc
fmull
decb
repz
lahf
mov
jnp
push
repnz
pushf
daa
bound
mov
cli
mov
cmc
jmp
and
lods
jmp
arpl
add
pop
sbb
xchg
mov
rcll
inc
xchg
adc
movsb
inc
push
fwait
xchg
xchg
xor
mov
mov
jb
das
int3
xor
mov
scas
cmpsb
in
xorl
loope
in
mulb
sbb
popa
add
cmp
das
inc
xor
roll
movsb
mov
adc
and
icebp
inc
js
imul
mov
sarl
orl
push
mov
pushf
xchg
mov
ss
stc
add
rorl
cmp
xchg
in
or
pop
sbb
xor
and
sar
dec
push
faddp
jbe
and
inc
divl
mov
or
imul
pop
in
movsb
in
out
push
mov
movsl
mov
rol
ss
dec
or
and
and
xor
cmp
aaa
insl
adc
jb
es
xchg
bound
cmpsl
inc
incl
fs
ja
or
pop
sti
add
sbb
movsl
jno
xor
loopne
jns
pop
fisttpl
cmp
dec
movsl
cltd
sbb
unpckhps
fsubrl
rol
loop
pop
pusha
xchg
and
xor
rclb
push
cmp
or
imul
mov
cwtl
xchg
mov
fwait
push
mov
mov
mov
sbbb
lcall
stos
jo
aam
and
pop
mov
gs
shll
sbb
sbb
or
testb
mov
pop
lahf
mov
leave
cmpsl
in
sub
xchg
fmull
scas
std
repnz
mov
inc
cmp
dec
or
and
call
dec
cmp
fcmovnbe
imul
movsb
jne
dec
inc
das
xchg
pop
shrb
sbb
je
mov
inc
clc
xchg
test
and
out
xchg
addr16
or
movsb
popa
sti
adcb
ret
sbb
sbb
jno
mov
test
or
push
pop
xchg
sbb
aam
fsubrs
push
xor
cmp
lret
pushf
test
sbb
into
je
loope
inc
or
jmp
pop
fidivs
pusha
cli
push
jb,pn
push
sti
outsl
push
jnp
in
push
add
lret
mov
push
adc
adc
cmp
jb
rorl
das
sbb
test
add
outsl
gs
mov
aad
inc
outsb
or
sub
fwait
outsb
jbe
das
loopne
clc
std
mov
out
addr16
mov
xor
push
fists
ficompl
or
push
sub
insb
outsl
xchg
icebp
paddd
fnstsw
jmp
call
lods
push
aam
push
xor
jg
sub
push
pop
xchg
lea
mov
mov
mov
mov
add
mull
xchg
xor
les
sub
pushf
push
fwait
shl
mov
stos
mov
repnz
add
ret
cs
and
std
xchg
sbb
enter
roll
sbb
push
insl
jg
push
cltd
fiaddl
mov
lahf
push
pushl
imul
mov
paddq
std
sbb
mov
jge
leave
and
scas
lahf
mov
pop
mov
mov
mov
sti
sub
lahf
jmp
xor
sbb
or
adc
jg
loopne
aam
jbe
pop
mov
gs
adc
add
and
in
lret
push
jb
lret
aad
jbe
mov
fwait
xchg
mov
arpl
cmpsb
add
mov
movsl
out
mov
and
outsb
push
inc
add
mov
mov
pop
mov
push
test
sub
jmp
sub
jecxz
scas
pop
lcall
push
in
xchg
jno
xchg
sub
pop
mov
lahf
adc
inc
mov
xor
je
sub
inc
mov
ss
mov
lret
call
mov
shrb
xchg
stos
or
adc
inc
dec
or
xor
fists
pop
leave
mov
xlat
mov
xor
filds
xor
cmp
call
enter
loopne
loop
loopne
stc
adc
sub
int
call
jmp
push
pop
push
fwait
or
xor
bound
jb
inc
push
sub
insl
loopne
bound
stc
fs
push
push
jne
mov
push
and
cltd
cmc
add
das
and
and
mov
nop
test
mov
test
int3
jp
outsl
mov
fincstp
loop
leave
jle
xor
lcall
mov
cmpb
xor
orl
mov
pop
mov
lds
push
xchg
push
or
mov
sbb
pop
sub
mov
jno
loope
mov
nop
mov
cmp
outsl
push
sub
pop
fadds
mov
add
stos
jp
dec
add
shrl
cmp
or
fwait
roll
aaa
push
je
mov
adc
push
outsl
push
lock
movsb
fidivl
mov
push
fdivl
stc
popa
decb
mov
push
jecxz
aaa
out
loope
and
cld
std
xchg
jnp
jne
and
jmp
pop
repnz
cmp
xchg
outsl
jne
arpl
adc
subb
icebp
inc
push
ret
cmpsb
sahf
jl
mov
subb
jecxz
loopne
jle
test
ja
nop
add
mov
dec
ss
add
mov
adc
data16
xchg
aas
repz
push
cltd
xchg
jg
mov
dec
or
mov
jne
mov
int3
bound
push
pop
xchg
adcb
sub
xchg
fcmovu
xor
push
push
ror
cmp
and
aas
jo
xchg
jns
push
xchg
mov
out
and
es
mov
adc
test
mov
push
jae
mov
xchg
outsl
fucomi
push
xchg
xor
pop
mov
push
mov
jge
jmp
pop
fmul
ror
stos
enter
loopne
mov
popl
push
jecxz
inc
fildll
pop
mov
rorb
sbbb
mov
cmpsb
mov
ss
jecxz
lahf
sbb
dec
push
in
mov
inc
cwtl
pusha
pop
out
jg
pmulhw
lcall
lahf
sub
aad
xor
dec
jg
or
pop
mov
int3
and
aad
mov
push
sub
sbb
in
inc
push
cs
mov
push
sub
into
lret
sbb
pop
scas
rcrb
jle
lods
pop
shll
int
mov
sarb
repz
dec
jns
mov
xor
jbe
mov
int3
sbb
sub
push
and
and
stos
dec
das
or
adc
xchg
sbb
iret
sahf
jo
jge
rclb
movsb
dec
pop
out
pusha
xchg
js
mov
add
cmpsl
inc
sti
lahf
fistpll
scas
pop
adc
rcll
mov
cmpsb
aas
rcll
sbb
int3
cld
xorl
scas
mov
mov
add
frndint
jmp
cld
adc
jns
push
repz
andb
fildl
repnz
insl
inc
stos
test
jge
in
mov
fidivl
or
repz
out
js
lret
jle
icebp
and
xchg
movsb
or
aas
ja
jl
jno
jae
xchg
addb
popf
xor
and
outsl
rcll
or
sbb
sub
in
mov
ret
scas
stos
sbb
adc
test
xor
xchg
adc
std
insl
xchg
scas
jp
lds
mov
hlt
sbb
mov
xchg
testl
ljmp
mov
sbb
sbb
add
shr
inc
mul
push
pusha
ljmp
leave
shrl
bound
fists
iret
pop
rcrl
js
lret
pop
xorb
insl
dec
cmp
lods
mov
cld
inc
in
mov
adc
mov
add
xchg
out
xchg
adc
insb
mov
shrb
and
addl
in
inc
push
inc
in
mov
test
push
shlb
out
sub
add
and
inc
or
push
mov
xchg
xor
fisubs
jle,pt
mov
es
xor
lds
jmp
sbb
add
repnz
add
dec
ja
add
gs
aas
cltd
mov
movsb
mov
aad
adc
push
xchg
idiv
repz
xor
mov
dec
push
fstpl
xchg
fidivrs
pop
pop
inc
xor
xchg
imul
jne
sub
test
inc
push
jmp
mov
lods
ss
or
icebp
dec
es
packssdw
leave
sub
mov
popa
aad
jns
push
add
je
mov
popf
hlt
ja
xchg
or
mov
push
sbb
push
lock
pushf
adc
insl
jecxz
lret
mov
into
cmp
jmp
outsl
sarl
xchg
pop
test
xchg
lea
adc
int
mov
ret
stc
mov
sti
inc
cs
movsl
insl
push
lret
mov
rol
out
dec
jmp
xchg
inc
xor
mov
mov
fs
push
int3
or
fldlg2
xchg
sarl
mov
cmp
clts
jae
jecxz
icebp
mov
scas
rcrb
xchg
in
in
mov
test
mov
xchg
aam
xchg
xchg
jp
clc
ss
addr16
adc
stos
ror
lods
movhlps
mov
jge
cld
pop
adc
out
push
cmpsl
ret
nop
jne,pn
and
xor
imul
ror
mov
test
inc
cltd
gs
daa
call
fcmovnu
mov
jnp
lods
inc
ret
jb
int
push
in
mov
xchg
lret
leave
adc
fldl2t
pop
pop
addr16
xor
and
rcrl
cld
iret
dec
pop
jecxz
cltd
aaa
shrb
in
pop
mov
mov
in
es
data16
dec
repnz
stc
jnp
aaa
scas
jb
inc
repnz
push
mov
and
push
inc
mov
notl
push
fildl
xchg
dec
fbstp
stos
mov
jb
mov
pop
cmp
test
adc
int
cltd
rcll
jbe
xor
push
dec
jecxz
fnstenv
stos
icebp
mov
lahf
rol
adc
xchg
popf
mov
gs
lods
ljmp
movsb
sbb
and
push
jo
xchg
dec
pop
daa
ss
and
or
pusha
das
ds
mov
movsl
add
inc
xchg
popf
and
jg
push
stos
xchg
jb
imul
xor
in
jmp
or
mov
repz
stos
mov
xchg
filds
mov
test
sbb
icebp
or
repnz
mov
ffree
lahf
sbb
jl
push
dec
and
aam
fisttpl
fsubrs
xchg
mov
bound
sub
adc
push
adc
push
sarb
jne
movsb
mov
in
inc
pop
and
mov
loop
or
mov
imul
adc
jns
outsb
jge
jnp
sub
movsl
add
sub
icebp
pop
lret
das
es
xor
adc
sbb
cmpsl
adc
cld
test
cmc
popf
adc
fwait
loop
cmc
pop
js
outsb
xor
jne
mov
xor
test
add
ds
in
bound
jge
jp
adcb
aam
pop
sub
pop
mov
cmpsb
lahf
scas
cwtl
out
cmc
mov
cmp
pop
les
aam
insl
pop
add
cmp
xlat
jecxz
inc
repz
add
rcr
lahf
sti
mov
mov
repz
push
cwtl
inc
dec
dec
inc
mov
std
mov
icebp
movsl
or
pop
jne
adc
and
mov
stos
orl
mov
fs
aas
in
mov
mov
add
mov
fstps
data16
adc
into
jl
ja
jae
leave
push
aam
adc
jg
cmpl
lret
add
lret
pop
loop
movsb
pop
cmp
adc
std
inc
pusha
lahf
decl
scas
inc
mov
fcompl
jbe
xchg
sub
mov
push
ret
adc
inc
jbe
daa
mov
jecxz
mov
repnz
cmpsl
and
fdivs
sub
mov
cli
jle
loopne
add
nop
dec
xchg
mov
xchg
or
call
jo
cmc
inc
pop
mov
shll
mov
cmp
lods
outsb
out
shl
and
mov
adc
ja
arpl
xchg
jae
jno,pn
sub
mov
notb
lret
adc
das
sahf
xchg
out
jl
mov
mov
mov
rclb
xor
add
rol
shrb
add
dec
test
mov
sub
pusha
cmp
aam
in
mov
lods
ret
xor
push
in
add
push
punpcklwd
je
push
nop
pop
fnsave
je
into
sbb
stos
mov
push
mov
xlat
lds
xor
ret
sub
mov
xchg
sbb
andl
sbb
adc
fists
in
andb
call
test
sbb
dec
push
add
lods
add
sbb
and
fidivrs
xchg
pop
in
addr16
push
xor
mov
stos
inc
mov
sahf
cltd
ret
aad
mov
lods
pusha
notb
js
cltd
adc
mov
push
outsl
or
sub
insl
sub
mov
mov
and
test
mov
jns
xor
cmc
inc
icebp
cmp
int3
push
test
sbb
xchg
jnp
lds
xchg
xchg
mov
flds
inc
cmp
sbb
gs
in
popa
cmp
test
push
inc
push
xor
xor
ja
cmp
or
lods
push
jl
mov
lods
insb
test
push
test
and
int3
das
mov
repz
jbe
and
not
movsb
inc
js
xchg
and
add
cltd
xlat
outsl
and
mov
xchg
xchg
fdivrs
jl
aam
or
mov
sbb
jmp
ss
inc
xchg
ret
test
out
mov
into
cmp
inc
pop
xchg
pop
mov
sub
jb
xor
fldl
dec
leave
pop
fildll
xchg
inc
cmp
inc
pop
sbbl
lret
repz
dec
ret
in
mov
sbb
mov
push
cmp
cmpsb
lret
int
mov
int
inc
sti
jmp
clc
mov
fbld
dec
xchg
jmp
in
adc
cmc
push
fwait
icebp
ja
in
cmc
fistps
push
mov
idiv
sbb
into
mov
push
push
mov
xor
mov
je
sub
mov
sub
cs
push
in
push
sub
mov
push
push
mov
clc
pusha
cli
fbstp
roll
or
cmp
loop
dec
add
divl
cmpsb
pop
sbb
je
xlat
in
mov
sub
inc
aas
or
inc
push
popa
pop
and
sbb
loope
in
shl
jno
sub
cltd
mov
cmpsb
xor
add
cmp
lock
inc
lahf
je
mov
js
imul
pop
cmp
xor
push
mov
rorl
outsb
pop
push
in
ficompl
outsb
push
jecxz
push
int
or
jmp
jmp
arpl
jnp
pop
lods
lahf
jns
sbb
xchg
stos
adc
jp
xchg
and
adc
icebp
sbb
cwtl
lods
inc
aaa
adc
inc
lcall
incb
jae
fwait
or
mov
sbb
imul
push
adcl
jb
mov
int
daa
andb
inc
pop
mov
mov
pop
pop
mov
mov
filds
xchg
xor
cmp
ja
xchg
aas
inc
lcall
mov
es
repnz
jae
pop
lcall
enter
inc
cmp
fxch
addl
aaa
lret
int3
inc
ljmp
inc
mov
pop
sbb
incl
and
sbb
mov
mov
lcall
xor
mov
sahf
paddsb
nop
inc
repnz
scas
inc
movsb
mov
adc
mov
add
clc
fidivrl
sbb
xor
sbb
adc
pop
ret
push
mov
mov
lds
jmp
mov
xchg
into
loopne
data16
clc
test
cld
cmp
jle
ficomps
cli
fldcw
pop
clc
xchg
dec
pop
adc
xor
mov
jle
jecxz
adc
xchg
add
cmp
sub
mov
pop
cld
mov
cld
inc
stos
sbb
cmp
outsl
ret
cmp
and
mov
cs
cmp
add
fs
ret
stos
aam
xor
cld
mov
ret
dec
adc
sbb
mov
cmp
xor
pop
les
sti
mov
push
in
pop
xor
jle
jae
aad
arpl
popa
dec
movsb
mov
rorl
ds
jmp
iret
mov
cmpsl
jle
enter
push
sub
lcall
notb
cmpsl
ljmp
and
outsb
arpl
jle
push
adc
mov
fdivrl
xor
cmp
xchg
ja
or
pop
imul
cmp
sbb
popf
inc
add
stos
cmp
mov
ret
mov
sub
imul
mov
cmpsb
imul
popf
addr16
ror
sbb
leave
cltd
dec
mov
jnp
out
test
sbb
dec
insb
in
cltd
cmp
inc
sub
or
flds
cli
loope
push
mov
xchg
add
add
or
insb
mull
cmp
add
popf
outsb
jle
adc
jns
sub
test
cmp
stos
cli
add
cmp
iret
loop
cmp
rol
mov
daa
lcall
push
xor
jge
sub
leave
js
popf
sbb
sub
pusha
pop
cmpsl
test
inc
sbb
out
pop
mov
cmp
push
ret
jns
cmp
jg
outsb
ljmp
subps
add
push
push
arpl
cld
fst
pop
pop
mov
cmpsl
pusha
add
cmp
jmp
in
mov
mov
pusha
cmp
sub
std
push
jmp
push
sub
lea
imul
lret
mov
mov
jp
mov
gs
int3
repnz
cs
cmpsb
arpl
pslld
jl
push
xchg
lock
dec
sbb
xchg
dec
dec
xor
ja
sbb
sbb
adc
inc
push
lea
icebp
lcall
test
in
scas
xchg
adc
and
mov
stc
nop
aam
sarb
lahf
cwtl
testl
ficoms
add
sbb
movsb
xchg
and
add
pop
jp
add
in
and
int
ret
imul
jmp
rcrl
rcrb
ret
addr16
scas
inc
dec
cli
sbb
xchg
cmp
cltd
and
xorb
and
mov
dec
leave
mov
dec
out
mov
dec
fisubl
xchg
mov
fmull
mov
dec
xlat
jge
mov
sbb
dec
into
jo
jecxz
stc
adc
add
add
push
in
shlb
insl
dec
or
sub
ficoms
jne
lahf
and
in
xor
popa
mov
push
mov
sbb
adc
adc
push
mov
xchg
addr16
or
int3
shrb
enter
sub
movsb
push
pop
inc
fsubs
mov
sbb
out
loop
out
sub
loop
jno
adc
xchg
sub
aaa
shll
and
pop
scas
mov
loope
lret
mov
push
mov
lcall
sbb
push
imul
fsubs
imul
xlat
sti
xor
dec
div
mov
and
mov
shr
cmp
aaa
xchg
mov
jbe,pt
inc
jmp
rcll
outsl
cwtl
xor
lret
add
inc
mov
pop
shrl
sbb
xor
icebp
das
add
and
mov
push
test
xor
pop
fistl
dec
ja
loop
pop
mov
hlt
mov
jmp
popf
cs
cmpb
push
arpl
loop
pop
cmp
jmp
inc
sub
rorl
scas
insl
es
repnz
jb
sahf
mov
pop
out
jo
insl
mov
sbb
fldcw
es
jg
outsl
xchg
in
or
aam
push
push
aad
in
sub
movsb
cmpsb
xchg
pusha
pop
pop
jnp,pn
cmp
sarb
push
out
in
inc
int3
bound
stos
repz
faddl
adc
jecxz
xchg
xchg
sbb
ljmp
pop
mov
int
cmp
jl
fcmovnu
iret
loopne
inc
sbb
mov
lcall
push
mov
sbb
xchg
jns
call
sbb
outsb
pop
cs
addl
jp
repnz
inc
add
incb
int
clc
dec
lds
fcmovnb
and
cmp
cmpsb
into
mov
push
pop
out
shrl
xor
lock
adc
fwait
clc
or
fwait
mov
lock
testl
jmp
mov
jp
and
in
and
sbb
pop
fbstp
inc
dec
jmp
push
clc
shlb
mov
data16
jnp
inc
rolb
cmp
jne
enter
out
stc
shr
arpl
push
in
in
dec
mov
aaa
scas
cltd
ljmp
or
inc
dec
scas
cmp
add
leave
pusha
into
lock
arpl
push
push
add
repz
push
fcmovu
inc
out
cmpsb
push
xchg
xor
push
mov
ret
cmp
lcall
int
arpl
cltd
xchg
or
jp
loopne
dec
mov
and
cmp
jns
adc
cmp
or
enter
es
je
icebp
pop
movsl
sbb
and
jmp
repz
sub
xorb
xor
mov
xlat
popf
mov
sub
out
pop
pop
push
mov
mov
andl
add
cltd
dec
add
sub
std
loope
dec
push
xor
adc
repz
or
and
jl
xor
gs
ror
jle
stc
jbe
jmp
iret
outsl
cmp
jmp
orl
and
inc
xor
shlb
xchg
fistpll
mov
sbb
shll
scas
loop
pop
cmp
mov
fnstsw
es
and
sbb
jle
mov
call
push
or
xchg
out
adc
jl
or
ss
out
sub
and
sub
cmp
nop
push
push
mov
xchg
scas
mov
movsb
or
push
add
insl
dec
push
nop
push
lock
imul
hlt
add
push
mov
stos
mov
js
mov
js
xchg
push
sub
push
lods
ds
push
or
loopne
mov
in
mov
lea
xchg
out
fnstsw
xor
fnstsw
fsubrl
mov
dec
popf
scas
inc
aaa
or
setns
loope
inc
popa
or
mov
inc
xchg
push
mov
fdivrl
sbb
ljmp
cs
pop
leave
loop
test
pop
sarl
rcrl
jae
add
decl
xchg
test
js
xchg
pop
xchg
js
dec
in
lret
in
xor
int3
lahf
mov
fs
xchg
fs
loope
out
fs
enter
bound
mov
stc
or
mov
cmp
push
pop
mov
ret
fldt
stc
push
sbb
ds
jg
push
sti
mov
adc
sbb
jp
dec
pop
icebp
bound
pusha
gs
or
mov
sarb
das
jg
stc
das
add
xor
mov
xchg
f2xm1
loop
in
sbb
mov
ds
push
xor
out
push
lods
nop
jecxz
faddp
stc
sub
pop
xchg
jl
mov
push
mov
jmp
pusha
fistpll
add
stc
jg
inc
mov
fwait
pop
cmpsl
in
xor
repz
cmp
ret
push
mov
push
aas
push
mov
dec
std
xchg
and
mov
int
sub
add
jecxz
pop
scas
jecxz
jo
js
or
sbb
mov
jmp
add
mov
push
cmp
adc
sub
adc
dec
add
sbb
mov
test
mov
push
inc
sbb
dec
outsl
lcall
cmp
add
inc
daa
mov
pusha
adc
mov
push
sbb
dec
push
push
lahf
imul
adc
aas
inc
cmpsl
stos
xchg
orb
and
adc
rcr
xchg
loopne
fmuls
and
fmuls
add
mov
cmp
addr16
loopne
jg
xchg
hlt
outsl
scas
push
popa
mov
jo
into
lock
pop
cld
jmp
add
rclb
xchg
mov
es
repnz
test
jo
stc
push
and
xchg
fimuls
xchg
inc
lcall
cmp
adc
movsb
mov
ror
rcrb
and
jb
imul
xchg
dec
or
cmp
movsb
and
mov
loopne
and
jl
repz
dec
inc
xchg
sbb
sbb
sub
cltd
stos
adc
es
push
and
xchg
sbb
icebp
jge
sar
fs
pop
je
push
push
xchg
adc
ljmp
adc
test
and
test
inc
inc
das
or
lods
xchg
jno
scas
and
or
fcomp
sub
push
movsl
jmp
roll
loope
and
loop
dec
iret
jb
sti
ret
loop
cmpsb
sub
xor
je
sti
aad
movsl
dec
aam
shlb
in
ss
inc
testb
pop
js
xchg
jp
inc
mov
cltd
js
inc
arpl
dec
stos
sub
jo
pop
mov
sahf
and
xchg
lret
aad
mov
shll
popa
outsl
xorl
cltd
adc
fbstp
pop
mov
fiaddl
ret
stos
cltd
cmp
and
adc
test
push
inc
fwait
pop
dec
subb
mov
test
test
xchg
add
rolb
lahf
dec
sub
out
mov
and
mov
adc
jge
dec
call
xlat
aas
add
cltd
jp
xchg
pop
cs
xchg
inc
lea
out
inc
fwait
xorb
xchg
lds
xlat
mov
cli
mov
popa
and
or
call
popf
lods
push
sub
xlat
mov
clc
jmp
xchg
cmpsl
in
mov
pop
iret
out
mov
aam
aad
push
mov
in
or
pop
mov
adc
ret
dec
test
movsb
sub
cwtl
xchg
shlb
add
add
mov
mov
mov
xlat
mov
aas
mov
xlat
and
push
sahf
sahf
jb
cmpl
sti
add
add
adc
movl
add
bound
adc
cmpsb
add
mov
pop
leave
mov
push
xchg
imul
xchg
xchg
lock
jo
stos
arpl
push
pop
mov
adc
push
pop
xchg
mov
loop
movsb
andb
dec
rcl
xchg
in
test
mov
mov
imul
and
in
repnz
enter
mov
dec
pop
jno
add
test
test
cld
lcall
int3
stos
push
xchg
repz
sbb
jmp
pop
out
pushf
xchg
dec
mov
out
popa
mov
inc
fcmovnb
xor
insl
fcompl
cs
das
sbb
push
push
jle
dec
xchg
sbb
movsl
fimull
jge
out
fs
scas
cmp
sar
popa
xor
nop
nop
pop
shlb
jne
and
mov
and
sbb
daa
mov
and
push
je
mov
sub
incl
jp
leave
cmp
stos
or
rorb
outsb
dec
mov
ja
inc
out
daa
loopne
or
xchg
jns
mov
or
inc
in
fildll
mov
and
es
add
lods
adc
test
or
push
cmp
inc
cmp
and
pop
xchg
es
inc
and
popa
loopne
in
das
stos
cmc
sbb
sbb
and
dec
adc
loop
jnp
cmp
cmp
cmp
imul
mov
outsb
rolb
rcr
fsubrs
repz
pop
add
sub
push
inc
jge
mov
mov
test
mov
jns
lods
add
mov
push
push
push
push
in
popl
leave
adc
aas
xchg
jl
leave
insl
adcb
cmovl
xorl
adc
mov
dec
dec
nop
xor
fwait
dec
push
dec
pop
mov
jns
add
push
aaa
icebp
mov
sti
push
les
mov
leave
jg
inc
xor
mov
call
inc
jg
out
hlt
mov
inc
iret
mov
outsl
scas
aad
gs
shlb
inc
mov
in
mov
adcl
js
mov
ja
out
pop
adc
cmp
aas
test
aaa
cmp
inc
adc
test
pop
sub
xor
das
movsb
push
int
jno
jl
aas
notl
push
ret
or
scas
sub
xor
xor
insl
jg
push
push
add
mov
mov
pop
xchg
je
inc
pop
rolb
jge
mov
inc
pop
push
test
mov
daa
es
std
add
jge
lcall
pop
ret
sahf
fisubrl
lods
sbb
dec
mov
xor
dec
fsub
lret
mov
nop
push
clc
cltd
les
aaa
idivl
fstpt
mov
pop
pop
popf
push
sub
dec
jmp
orl
in
or
jb
sub
pop
cmpsb
sbb
inc
js
mov
adc
pop
cmp
stc
mov
dec
movsb
xchg
notl
push
mov
or
mov
lret
mov
outsb
ja
lds
movsb
dec
cli
insl
cmp
or
ss
xchg
and
jmp
daa
lret
outsb
test
adc
sub
bound
and
repz
inc
lret
push
subl
lock
cmpsb
popa
addl
imul
ss
repnz
jbe
jg
shl
inc
mov
mov
mov
mov
out
pushf
push
push
cmc
movsb
shll
stos
out
xor
inc
sbb
push
loope
pusha
mov
xlat
or
out
sar
dec
sbb
dec
mov
inc
fs
std
iret
inc
push
sub
cmpb
and
mov
test
push
repz
mov
jno
fistl
mov
pop
rorl
es
jecxz
push
inc
xchg
cmpsl
scas
lock
adc
xorb
sbb
testb
test
fmuls
out
mov
ss
jmp
mov
jp
dec
test
pop
mov
pop
rcl
daa
mov
jno
jne
sbb
int3
or
negl
mov
les
cmp
push
mov
dec
inc
add
movsb
aad
idivl
hlt
cmp
pop
add
cmpsb
mov
in
mov
out
inc
lds
jp
into
xchg
out
sbb
dec
lods
pop
push
inc
popl
nop
mov
push
in
shll
add
fwait
ss
vmovapd
mov
mov
es
mov
jp
push
sbb
pop
cmc
loopne
clc
inc
adc
aaa
mov
cmp
nop
out
add
push
lret
sbb
dec
mov
outsb
xchg
inc
mov
xchg
das
lock
lret
add
mov
icebp
outsb
popl
adc
sub
rclb
and
mov
cs
ja,pt
pop
flds
xchg
push
adc
and
ret
and
push
dec
mov
sub
push
adc
jge
xchg
push
aad
cld
call
cmp
int
lahf
cmp
fstpt
sbb
jecxz
repnz
add
aas
nop
mov
dec
mov
inc
inc
jle
push
pxor
xchg
jmp
popa
xchg
leave
sbb
sahf
mov
gs
fimuls
sub
push
ja
jbe
stc
mov
mov
ja
outsb
push
out
push
adc
push
fsubl
cmp
int
xor
push
in
add
arpl
cld
jp
mov
mov
mov
fdivl
push
aaa
cmpsb
xchg
adc
dec
fildl
daa
aad
adc
test
push
adc
mov
push
jnp
les
pop
xor
call
test
jnp
mov
orb
mov
mov
dec
shrb
or
addb
lcall
and
or
std
mov
aas
mov
sbbl
sub
rorb
cmp
mov
lds
dec
xchg
fwait
scas
lret
imul
push
cmc
inc
int3
data16
repz
sub
sub
adc
mov
movsl
xor
push
fcmovu
imul
adc
pop
bound
mov
pop
nop
test
cmp
mov
nop
je
push
jne
shrl
icebp
and
cmp
or
call
or
lock
mov
jne
std
sbb
mov
cltd
ficomps
loopne
sub
call
outsl
xor
jb
les
ss
divb
mov
aam
pop
decb
lea
cmp
cmpsl
das
push
cmp
xor
or
les
sbb
nop
adc
cli
cmp
add
push
xchg
aam
es
cli
jmp
cmpsb
cld
xchg
outsl
popa
lret
adc
sbb
stc
scas
dec
mov
pushf
mov
jge
cmp
int
cmp
inc
push
cltd
sub
jp
mov
sbb
fisubrl
sbb
mov
bound
inc
jmp
popf
inc
sbb
sub
aas
cli
xor
pop
and
out
xor
fisubl
cmp
sbb
mov
repnz
push
in
lock
jmp
iret
mov
cli
dec
pop
test
dec
out
xlat
repz
insb
shll
xchg
test
negb
dec
pop
imul
sti
cltd
into
pop
aas
xchg
pop
mov
lock
stc
mov
nop
cmpps
cmp
push
adc
sbb
push
bound
push
popf
fnstenv
incl
dec
movsl
jl
out
and
sbb
ss
jns
push
mov
push
mov
cmpsb
outsl
mov
loop
jo
push
andl
push
push
mov
sbb
out
cs
mov
mov
push
mov
das
aad
ret
lahf
stos
test
jbe
stos
xchg
jo
xchg
cltd
adc
sub
loopne
adc
jl
adc
xorl
mov
shlb
sbb
mov
testb
push
daa
hlt
sar
adc
test
mov
mov
jge
in
sub
fisttpl
inc
lahf
pop
adc
add
ss
dec
xorb
aaa
repz
fsub
es
add
xor
jg
repnz
add
mov
or
pop
inc
xchg
js
lahf
xor
pop
mov
jns
dec
stos
add
push
in
in
lods
jle
and
sub
xchg
addr16
or
js
jmp
mov
lret
rolb
cmpsl
push
or
lock
mov
movsb
cmc
push
addr16
sbb
and
test
lcall
jecxz
in
sbb
mov
fs
fimull
or
mov
mov
mov
movsb
out
lods
movsl
lock
lock
or
pop
jo
add
xor
pop
push
fbld
xlat
pop
movsb
dec
adc
imul
pop
dec
out
hlt
fstpl
loopne
out
inc
icebp
pop
movsb
in
lahf
das
cmp
jle
inc
std
imulb
mov
push
stc
arpl
stos
arpl
lods
sub
and
sbb
xchg
sub
scas
pusha
and
sub
fwait
iret
addr16
cmp
in
xor
cmp
add
hlt
mov
cmp
dec
xor
hlt
orl
mov
bound
cmpsb
mov
das
enter
or
stos
adc
stos
add
sbb
dec
fildll
push
dec
nop
and
mov
aaa
mulb
mov
xchg
cmpsl
jae
mov
minps
xchg
cld
mov
push
clc
mov
cltd
test
bnd
pop
andl
pop
mov
out
adc
inc
xchg
lret
cmpsb
imul
insb
cmp
out
sbb
daa
lock
lret
or
cmp
pop
ja
inc
mov
mov
jp
pop
sar
dec
fisubs
out
out
pop
inc
fcom
jl
incb
addr16
sarl
xchg
hlt
adc
and
dec
jne
add
cmpsb
andl
mov
popa
and
ficoml
lret
adc
movsl
gs
mov
and
fsubrs
inc
or
sbb
icebp
mov
ret
xchg
in
daa
aad
sbb
push
dec
adc
cmpsb
out
xor
sub
cltd
scas
ljmp
ficomps
js
jl
sbb
repz
ja
call
pop
adc
sbb
and
popa
mov
sbb
mov
jecxz
pop
xor
std
pop
push
and
repnz
mov
add
push
jge
mov
incb
cmpsl
add
test
mov
out
mov
xor
mov
cmc
xor
jg
dec
daa
jge
push
inc
loope
fimull
hlt
int3
loope
lret
jno
and
mov
test
adc
pop
xor
test
inc
sbb
mov
mov
outsl
fcmovne
cs
nop
in
xchg
xchg
test
mov
mov
int
es
fidivl
cmp
je
in
sub
xchg
scas
cmp
std
push
loope
mov
pop
mov
outsb
xor
cwtl
sub
pop
call
lret
cmp
sbb
cs
jge
mov
int
jmp
push
inc
jle
inc
xchg
cmp
mov
pop
cmc
in
std
test
mov
sti
sub
out
mov
dec
inc
push
insl
dec
xlat
or
fs
loope
js
push
and
push
mov
pop
pushf
sarb
mov
push
fdivl
in
outsl
mov
pop
pop
sbb
jmp
sti
jb
pop
push
jg
es
push
inc
push
or
loope
xchg
xchg
add
daa
mov
mov
push
mov
push
jecxz
aad
jnp
jmp
cmp
fs
in
pop
jp
mov
dec
lods
pushw
loop
loope
push
mov
push
sub
xchg
in
rclb
sub
sbb
scas
ss
clc
push
dec
or
xor
xor
xor
cmp
mov
mov
pop
shrb
outsl
out
arpl
sbb
adc
fistps
sub
inc
loope
lds
out
call
jg
mov
sbb
cmpsl
popf
adc
cmp
cmc
adc
int3
sub
jl
scas
fwait
out
jne
mov
xor
dec
and
mov
fnstsw
adc
out
sub
int3
xchg
cwtl
fisttpll
pop
push
sub
pop
or
or
sub
sbb
add
inc
ds
negb
jbe
adc
cmp
dec
jle
cmp
dec
mov
mov
lret
and
fdivrl
inc
test
mulb
popf
xchg
int3
inc
je
fwait
mov
sub
xchg
jle
test
ss
ds
pop
cld
clts
mov
flds
imulb
lds
or
adc
int
adc
push
fstpl
or
lea
aad
inc
repz
nop
in
mov
xchg
out
adc
enter
das
dec
add
fmul
pop
lds
pop
mov
idivl
add
and
scas
sbb
hlt
cwtl
insl
cmc
pop
pop
adc
cmpsl
ljmp
inc
repnz
std
mov
sbb
cmp
push
fstps
xchg
ljmp
les
xor
pop
sarl
sub
push
lock
and
notb
in
mov
push
mov
cmp
loop
or
outsl
test
cmp
dec
fcom
test
jno
push
and
loop
fiadds
cmpsl
push
inc
out
arpl
jge
mov
scas
out
test
cmp
sbb
jl
add
pop
ds
and
out
adc
popf
mov
pusha
jge
inc
pushf
and
mov
cmp
sbb
push
and
pop
movsb
frstor
test
push
aaa
inc
pop
insb
add
cli
loopne
ja
js,pt
stc
fimull
jmp
jbe
sbb
insl
push
mov
inc
sahf
adc
add
aad
xchg
std
jp
pop
ds
scas
adc
and
bound
lcall
dec
xor
inc
filds
fldcw
shll
dec
loopne
jae
add
pushf
icebp
imul
out
pop
xchg
mov
aam
mov
mov
jle
mov
or
fnstsw
decl
sub
push
xor
mov
mov
js
cmpsl
in
test
cmp
push
or
aas
hlt
cmpsb
or
xor
in
bswap
sbb
lcall
aam
out
add
fcoml
sbb
sbb
clc
or
add
ss
xlat
pop
jne
in
mov
push
mov
jno
pop
jecxz
pop
and
sbb
xlat
dec
push
push
mov
sbbl
cmpsl
adc
pop
repnz
push
mov
ss
popf
ss
cmp
mov
mov
dec
cmp
movsb
add
push
or
pop
jg
les
out
and
clc
ja
or
jb
sbb
cmp
sbb
out
push
mov
sub
lds
pop
and
push
dec
adc
daa
push
jbe
inc
inc
negl
leave
ret
pop
scas
cmpsl
lahf
cltd
iret
jo
xor
insl
adc
lahf
hlt
orl
out
cmp
mov
lds
aam
mov
xchg
test
cmpsl
sbb
cli
outsb
xchg
add
stos
js
and
mul
jg
repz
hlt
lahf
pushf
mov
cwtl
add
cmp
imul
jbe
js
dec
pop
repz
stc
adc
and
sbb
rcl
in
jl
mov
jle
jns
lods
jns
cltd
std
fcomip
xlat
mov
lds
outsb
jne
loopne
test
pop
loopne
jno
lcall
mov
inc
xor
or
daa
sbb
or
iret
dec
daa
ret
pop
out
adc
shll
ds
mov
scas
sub
mov
jns
dec
cs
xor
jbe
enter
jns
sbb
fisttpll
xor
pop
shl
push
sar
push
cmp
xchg
mov
clc
pop
jp
push
sbb
ret
lahf
enter
xchg
pop
push
idivb
sub
inc
push
test
dec
in
movsb
ret
push
dec
inc
mov
sti
inc
mov
inc
pop
dec
movhps
mov
cs
ret
cltd
inc
sti
dec
incl
leave
vpinsrq
js
sub
orb
jecxz
xchg
add
rorb
cwtl
push
in
jg
je
fnstsw
add
mov
mov
push
jbe
pop
mulb
fcom
mov
js
push
sub
pop
or
jmp
inc
mov
or
pop
popf
sbb
jp
sti
outsb
push
mov
enter
lret
hlt
lds
sub
cmp
in
and
popa
fbld
jmp
out
les
leave
cs
sbb
fs
inc
ficomps
mov
or
sbbb
stos
out
xchg
adc
test
repz
movsb
xor
xchg
pusha
and
aam
and
mov
mov
test
lock
outsb
push
push
lret
insb
lcall
fsubrp
imul
lea
mov
ljmp
xor
push
push
shrb
dec
data16
call
insb
fucom
sub
or
mov
inc
stos
add
ja
dec
xor
rcrl
dec
fidivl
add
out
cmp
xlat
push
cltd
fsts
and
in
shl
dec
mov
add
push
mov
clc
test
xchg
pop
adc
stos
sub
pop
popa
sbb
out
test
cli
cs
loop
addr16
mov
cmp
daa
outsb
sbbl
inc
push
mov
mov
test
xchg
adc
xchg
popf
pop
pushf
arpl
fcompl
cmpsb
iret
ret
sub
xor
and
mov
lods
in
insl
push
mov
xchg
or
mov
pop
ds
les
int
mov
mov
iret
popa
and
addr16
push
mov
push
in
xchg
push
dec
cmp
je
incb
add
scas
mov
cld
xlat
jns
insb
sub
push
jbe
pushl
loop
cmp
roll
pusha
mov
insl
outsl
xor
arpl
mov
lcall
jmp
dec
mov
sbb
sahf
test
mov
or
mov
push
in
inc
cmpsl
imul
jbe
cmpsl
adc
xor
stos
mov
lahf
jmp
in
das
sbb
and
adcb
in
pop
adc
lods
int
mov
insl
add
loopne
fwait
dec
jno
ret
cltd
lahf
mov
lret
mov
sub
mov
lds
loop
fs
jp
std
cmc
and
and
xchg
aam
insb
sub
jp
mov
scas
test
inc
dec
cmpb
sbb
dec
mov
adc
xchg
add
lret
fistps
jb
inc
sbb
lcall
lock
iret
or
fildll
push
or
pushf
ficompl
fnstenv
add
test
xor
test
mov
push
lret
push
pop
in
sbb
add
push
jge
and
push
or
clc
imul
or
hlt
sub
pop
bound
adc
mov
cmp
jmp
add
jns
ja
mov
cld
mov
sbb
push
test
dec
sbb
jns
imul
push
lcall
push
sub
sub
call
add
js
mov
inc
fs
out
push
in
mov
cmp
or
push
push
and
mov
insl
es
add
mov
or
lods
das
iret
pop
ficompl
subl
dec
lods
aad
mov
xchg
jg
sbb
and
les
jg
outsb
mov
jl
mulb
inc
lods
inc
movsl
stos
and
movsl
dec
int
push
fsub
fsubrl
ljmp
xchg
cmp
pop
xor
daa
xor
dec
sbb
cwtl
sar
orl
jns
aas
test
lret
sbb
mov
loop
movsl
or
jge
lods
add
xchg
dec
mov
push
sahf
shlb
mov
movsl
pop
sbb
sbb
lods
jmp
push
into
movsb
mov
mov
jg
stc
dec
jb
sbb
cmc
mov
mov
xchg
rcrb
subb
mov
add
aas
mov
mov
sbb
xor
push
dec
sub
pop
push
nopl
in
fildll
dec
leave
je
xchg
pop
pop
cld
dec
dec
les
lret
adc
pushf
aad
xchg
lods
xchg
jge
dec
out
add
icebp
into
or
xchg
into
pop
stos
inc
shll
or
add
fs
ds
lret
cmp
test
imulb
mov
sub
xor
call
sub
jecxz
or
cwtl
imul
and
xchg
cli
pushw
mov
cmp
out
inc
jge
and
mov
xchg
lahf
sbb
or
aad
shll
mov
or
cmovge
and
push
mov
inc
push
sub
aad
sbb
loope
add
pop
cmp
dec
lcall
jo
mov
sbb
movsb
and
push
pop
mov
sahf
rcrb
jmp
cmp
js
cmp
and
mov
jb
arpl
hlt
inc
sbb
enter
push
rclb
imul
out
pop
pcmpeqw
xchg
pop
sbb
pop
movsl
cmpsl
cltd
sarb
dec
sbb
dec
dec
fcoms
pop
aas
dec
mov
mov
movsb
mov
ds
jg
dec
sbb
js
popf
leave
xchg
rcl
loop
stc
xor
mov
mov
dec
sbb
rolb
ja
incb
dec
pop
pop
rcr
ljmp
push
push
out
nop
enter
aaa
mov
rolb
jb
push
aaa
loope
pop
xor
jnp
cltd
sbb
add
lret
cmpb
jl
mov
cmp
sub
mov
lcall
xchg
lods
and
jg
movsb
jb
out
addb
mov
add
xor
pop
and
ret
xor
popa
mov
jbe
jg
lahf
jge
pop
call
movsl
adc
pop
icebp
xchg
jecxz
adc
jae
arpl
popf
jp
rorb
add
inc
inc
pop
mov
jno
add
icebp
sub
daa
fldenv
xor
dec
adcb
mov
sbb
push
cli
jno
popf
mov
cwtl
cmp
in
ficompl
inc
xlat
xchg
or
clc
lods
and
adc
jg
sbb
adc
bound
cmc
shlb
scas
and
cmp
cmp
stos
rol
or
leave
inc
xor
pop
stos
flds
aam
ds
negl
stc
and
mov
imul
xchg
sbb
stc
fdivp
inc
mov
dec
mov
jl
pop
mov
adc
add
outsl
ds
jae
xchg
and
mov
add
out
cmp
sbb
into
iret
imul
push
pusha
rcrb
inc
outsb
push
fistl
cs
push
sbb
outsb
gs
bound
out
xchg
add
idivl
popf
dec
loope
cwtl
inc
sahf
add
pushl
cmp
adc
and
movsl
ja
mov
stc
repnz
or
add
fadd
out
add
hlt
cmp
enter
test
xchg
mov
xchg
lds
push
jge
jo
and
push
sub
test
lock
xor
push
mov
loopne
stos
mov
xchg
scas
mov
lahf
mov
outsb
sbb
mov
fbstp
sub
mov
pop
pushf
mov
push
jmp
callw
or
mov
or
imul
xchg
xor
out
popf
fiaddl
push
sahf
in
call
inc
aad
dec
adc
fs
pop
and
repz
lea
xor
mov
mov
mov
scas
inc
stos
push
cld
xorb
cmp
cmp
into
mov
inc
fsts
and
pop
push
cmp
cld
inc
fs
xorb
lret
and
jp
rorl
arpl
icebp
lea
xchg
xchg
cmp
fwait
pop
pop
aas
cmc
sub
jno
loope
vshufps
iret
rcrb
das
cltd
xor
xor
das
adc
or
jb
das
adc
adc
mov
pop
cmp
sarl
movsl
dec
dec
in
popf
xlat
jg
mov
mov
mov
lret
inc
icebp
das
cmp
stos
pop
or
add
xlat
sti
bnd
jl
clc
sbb
push
stos
ror
scas
jae
scas
fnstsw
pusha
mov
xchg
mov
loop
imul
shl
xchg
or
dec
enter
popf
mov
push
adc
dec
loopne
add
xchg
gs
aam
jb
sbb
sbb
jbe
inc
inc
cmpsl
sbb
addb
insb
inc
jg
test
fistpll
pop
adc
xor
jne
cmp
lret
xor
push
imul
add
cmp
xchg
mov
jp
fsts
in
jg
dec
test
sub
fdivrp
pop
xchg
jb
pop
lahf
xchg
xlat
dec
lods
lds
pop
and
aam
jl
sub
inc
push
daa
sbb
cs
and
cmp
and
orl
jmp
mov
mov
int
sub
sub
adc
and
jae
and
and
dec
cmp
loop
enter
mov
xor
out
in
test
rcr
cld
faddp
adc
ret
imul
movsb
pusha
xchg
push
and
push
fildl
push
xor
pop
mov
sbb
lret
push
clc
dec
push
in
orl
daa
pop
cmp
cmp
sub
or
lock
not
popa
xchg
pop
call
push
cs
rorl
stos
cmp
xor
out
xchg
pop
pop
jle
pop
sub
xchg
cs
lret
adc
sarl
lea
add
stos
mov
lea
ja
test
mov
lds
imul
add
mov
loope
ss
pop
sbb
jge
out
jns
sbb
inc
fdivrp
popa
mov
xchg
push
jns
rolb
clc
mov
cmp
mov
mov
cmc
shlb
lods
test
cld
outsl
mov
mov
leave
sbb
icebp
push
jnp
pop
jle
jecxz
dec
add
mov
jecxz
push
in
dec
fidivl
loop
and
xchg
xchg
iret
insb
fwait
mov
sbb
and
xchg
shll
std
add
in
or
fistpll
adc
je
shlb
cs
insb
add
stos
mov
jge
add
xchg
sbb
sub
neg
dec
test
xlat
int
cmp
ret
sbb
data16
lea
xchg
or
outsb
cli
or
insl
idivb
xor
or
fstps
dec
addr16
mov
push
out
fmull
in
sbb
cmp
inc
out
cmp
push
sub
dec
cmp
and
pop
jne
jno
push
gs
adc
out
jo
pop
ret
fmulp
mov
jbe
lods
sub
inc
push
cmp
shl
and
xor
pop
pushf
out
xchg
and
repz
int3
xchg
inc
push
test
js
or
hlt
rolb
and
rcrl
xchg
fwait
insb
pop
mov
mov
into
popa
add
pop
mov
sub
sbb
dec
in
mov
jne
push
push
imul
mov
mov
je
mov
mov
and
jg
in
call
jb
cmp
pushf
stos
call
sbb
repz
mov
lds
sbb
cmp
fs
fisubl
inc
push
dec
push
push
clc
cld
pop
xor
js
xorb
pop
call
jp
frstor
sub
jbe
arpl
sbb
or
xchg
and
clc
data16
jnp
mov
data16
and
rclb
cmp
push
sub
add
adc
xor
jle
test
popa
in
jae
jno
movsl
loope
pop
pop
mov
fisubs
cmp
out
ficoms
fisttpll
jg
mov
fdivl
sub
xor
cltd
lcall
imul
rorl
lret
andb
ja
pop
sbb
in
dec
add
jnp
ret
mov
sbb
push
mov
adc
fucomi
daa
cld
mov
or
in
lahf
sbb
aam
leave
pop
or
fdivs
push
sub
cmp
adc
jne
adc
mov
mov
std
or
movsb
je
cmc
int
dec
insb
pop
or
mov
jmp
jle
jmp
cmp
push
stos
loopne
inc
inc
insb
mov
ja
jae
cmp
xchg
cmp
jmp
sbb
jns,pn
jns
rcr
adc
test
push
daa
xrelease
pop
pushf
jbe
andb
jbe
dec
insl
xchg
mov
stc
mov
out
insl
lret
and
mov
in
lock
int
xrelease
pop
push
sarb
lock
in
into
dec
imull
xchg
gs
into
pushf
inc
xchg
sub
cmc
in
imul
incb
outsb
jae
dec
ds
add
xchg
jbe
daa
push
cltd
add
icebp
loop
les
and
push
loopne
aad
cmp
not
mov
insb
and
lret
pop
cmp
call
dec
repz
mov
sbb
jle
fdivl
dec
sbb
fwait
mov
test
mov
dec
imul
lret
or
fisubrs
adc
inc
xchg
mov
ret
out
or
pop
mov
ljmp
imul
out
jmp
sub
adc
xor
jns
fsts
and
ret
imul
dec
lock
int
jb,pn
fildl
leave
rolb
and
int3
add
mov
add
push
and
pop
sti
cmp
and
or
push
sub
xchg
and
outsb
dec
insl
sahf
das
lcall
pop
xchg
pop
out
jl
int3
mov
jo
jno
scas
add
mov
mov
popa
pop
add
adc
out
cld
stc
jbe
into
or
fbld
adc
repz
inc
xchg
mov
push
and
mov
test
inc
test
pop
das
dec
jbe
in
sti
call
and
inc
pop
mov
loope
loope
mov
xorl
pop
jns
jbe
sbb
push
inc
jge
daa
in
test
loop
pushf
inc
mov
gs
imul
arpl
pop
pop
stos
jge
ja
int
push
mov
jbe
pop
imul
jg
lods
dec
fnstenv
mov
push
add
mov
divb
das
popf
dec
call
test
stos
sar
fisttps
xchg
rorb
in
addb
rorb
pop
xchg
jg
xor
xchg
leave
dec
push
shll
jge
leave
lcall
data16
je
loop
xchg
or
push
fisttpll
add
bound
leave
push
rorb
push
rcrb
lret
xor
inc
lds
andl
cmpsl
mov
add
xchg
jbe
imul
pop
popa
dec
aaa
shll
push
mov
ljmp
scas
test
testb
adc
xlat
cmpsl
mov
nop
pop
fs
mov
jmp
int3
pop
mov
scas
xlat
enter
dec
mov
xchg
or
pusha
or
add
aam
lds
loop
int
push
pop
jbe
pop
jge
rcrb
rorl
and
sbb
sbb
xor
sub
add
fwait
cwtl
inc
sbb
negb
add
dec
rclb
movsb
pop
in
ficomps
es
mov
adc
int
mov
adcl
mov
cmpsb
lret
pop
aas
jmp
or
test
mov
loopne
jbe
pusha
lret
jo
cmp
pop
xchg
test
int3
loop
in
sbb
add
push
shll
inc
add
loopne
cmp
pushf
cmp
dec
jb
xchg
cmp
aas
ja
mov
pop
test
jp
mov
jp
jecxz
inc
mov
arpl
nop
mov
test
jp
daa
cmp
popa
mov
mov
js
mov
push
pushf
sub
fcmovnu
cmpsl
and
sbb
pop
ja
cmp
das
sbbb
add
repz
push
lds
ret
dec
mov
js
into
ss
jmp
jae
jl
mov
test
aas
jb
mov
fiadds
pop
idivl
xchg
mov
xchg
cmp
int
popa
mov
imul
pop
or
cmp
xor
jnp
into
xor
subl
shll
aam
scas
mov
repz
push
je
lret
add
pop
test
or
pop
adc
je
jns
xor
movb
popl
ret
js
xchg
insl
sbb
sbb
inc
fucom
pushf
sbbl
sarl
enter
das
popa
adcl
test
testl
aad
ret
popa
jb
jle
cmp
sbb
jns
aam
jne
sub
and
lahf
vprotw
movsb
lods
push
fcomp
lods
out
sub
icebp
inc
stc
stos
jge
mov
inc
mov
adc
fwait
pop
test
out
jl
loopne
adc
fisttpll
pushf
ds
divl
sti
loop
xor
rcrl
lods
aam
xor
aas
gs
adc
xor
pop
and
or
imul
imul
push
jmp
inc
mov
mov
adc
sub
test
mov
jns
pop
je
sbb
inc
je
mov
mov
push
fcmovne
inc
movsl
jno
jg
sbb
test
in
jns
mov
mov
jnp
orb
fwait
addl
andl
scas
pushf
stos
lods
inc
mov
pop
sbb
pusha
ficoml
lcall
dec
leave
push
lahf
pop
out
imul
sub
fcmove
xor
mov
iret
adc
ljmp
mov
in
xchg
rorl
popl
jmp
jns
mov
pop
je
mov
adc
jb
pop
jno
aaa
xor
mov
mov
inc
cli
cs
inc
pop
enter
cmp
mov
mov
fidivl
nop
leave
shlb
sub
and
sbbb
movsl
scas
xor
daa
mov
aad
in
out
adc
into
xor
lahf
and
in
je
push
scas
dec
xchg
jmp
push
into
icebp
js
cs
pop
or
mov
daa
xchg
int3
mov
outsb
fimuls
aam
cmpsb
mov
notl
pop
adc
clc
and
cli
pop
les
add
shrb
xor
icebp
js
aad
into
pusha
sub
ds
call
pop
in
jge
lds
dec
insb
int
xor
fs
add
xor
cs
mov
adc
mov
mov
std
rorl
jno
or
aad
and
xor
movsb
sti
inc
notl
jl
pusha
lock
pop
adc
sbb
xor
pop
jecxz
cmpb
ror
call
fwait
repz
push
mov
push
cmpsl
or
flds
out
or
inc
les
nop
and
pop
jmp
aam
push
push
stc
sbb
fistps
sbb
scas
mov
sbb
pop
or
push
sbb
mov
push
hlt
mov
pop
aas
enter
sbb
sub
or
mov
js
jecxz
push
or
jo
dec
loop
out
adc
data16
sbb
dec
pavgw
jnp
popf
ret
add
xor
pop
movsb
ret
cmp
push
mov
mov
imull
out
jae
inc
jne
clc
and
mov
mov
popf
jbe
xchg
andl
aad
xor
mov
xchg
mov
leave
xor
ret
cmp
push
movsb
push
stos
and
loope
mov
and
out
xchg
mov
out
pop
fiaddl
es
in
xchg
adc
xchg
cmpsb
lods
xor
je
dec
notb
inc
jle
sbb
in
insl
sti
push
loopne
mov
sbb
lcall
pop
fwait
cmp
xor
aam
mov
cmp
add
mov
rcr
jbe
cwtl
push
sbb
hlt
add
hlt
enter
mov
add
rcr
nop
es
sbb
ficoms
out
das
mov
sahf
mov
mov
push
push
out
mov
test
push
cmpsb
ret
jns
inc
sti
gs
and
lret
idivb
stos
push
inc
gs
jo
pop
sarl
movsb
into
push
rcrb
dec
pop
popa
lods
push
js
mov
jp
sar
jno
icebp
push
pusha
or
pop
ljmp
push
ret
add
and
outsl
aaa
daa
in
sbb
sbb
int3
rcrb
fadd
lcall
decl
out
inc
or
out
leave
mov
lds
or
sub
jle
lods
mov
in
xchg
or
mov
jno
rorb
movsl
cmpsb
mov
xchg
push
and
inc
insl
bound
insb
sbb
cmpsb
clc
push
imul
add
sbbl
sbb
mov
leave
mov
xlat
mov
cmpsl
paddsw
mov
arpl
sub
movsb
mulb
fistps
mov
les
mov
adc
shl
push
outsb
sbb
adc
inc
adc
shrb
scas
sub
imul
aam
rcrb
lods
fcmovnb
sub
ret
sbb
pop
sbb
out
sbb
push
cmc
mov
lods
lahf
gs
loop
adc
je
adc
nop
cld
shlb
push
push
adc
push
mov
lahf
inc
jae
mov
add
push
aaa
inc
dec
fdivp
mov
and
adc
add
stos
and
adc
ret
cltd
mov
mov
rdmsr
in
scas
rol
mov
and
in
jns
shlb
lcall
jns
mov
aas
out
inc
mov
js
lret
lods
mov
jl
call
jne
xchg
lods
mov
mov
stos
or
test
mov
sub
cmp
stos
cmp
sbb
daa
sbb
cmpsl
outsl
rcrl
lcall
fidivrl
inc
add
push
xchg
fiaddl
inc
push
xor
les
mov
imul
lahf
out
lret
mov
pop
repnz
outsl
dec
lock
int
inc
mov
mov
into
sub
and
test
insb
into
dec
xchg
lods
mov
xor
fsqrt
dec
jg,pn
inc
in
dec
in
mov
ficoms
pop
cwtl
mov
mov
aad
sbb
dec
or
mov
mov
mov
cmp
cs
push
scas
jbe
cltd
jno
fnstcw
lcall
cli
cmp
and
lock
call
push
jmp
mov
mov
movsl
jne
and
sbb
add
data16
lds
add
enter
mov
or
sub
arpl
sbb
rclb
mov
adc
mov
jmp
nop
push
outsb
inc
int
inc
fcmovb
cmp
jg
xchg
test
push
in
xor
cmp
xchg
push
sbb
ret
out
icebp
jge
inc
ja
xor
push
mov
lahf
lret
fildll
add
scas
cmp
ja
or
mov
insl
decb
scas
sub
mov
test
aaa
mov
inc
popa
loopne
inc
stc
jle
mov
adc
or
push
fadd
jecxz
loopne
test
inc
push
mov
sub
xchg
mov
je
cs
push
cli
fistl
lods
mov
and
mov
in
lds
and
and
in
adc
adc
ficompl
clc
shlb
sbb
ljmp
sbb
dec
lods
outsb
dec
out
lret
or
sub
jl
pop
sarb
cwtl
lret
or
adc
ds
iret
jecxz
call
mov
enter
lods
stos
jnp
sarb
xchg
loop
scas
loopne
mov
mov
mov
or
fldt
cmp
dec
pop
jge
lock
das
jle
stos
ret
sub
inc
lods
pushf
push
lret
mov
shll
shlb
iret
repnz
movsl
nop
ret
push
inc
add
and
ret
outsb
shlb
and
jge
sbb
and
xor
sbb
jmp
push
mov
jge
dec
jmp
daa
xlat
jle
push
sub
inc
pop
out
popa
mov
stc
lock
or
mov
cmp
lds
inc
cmp
dec
jmp
dec
mov
or
cmpsl
mov
in
pop
hlt
sbb
xchg
dec
xchg
loope
xchg
std
jmp
sti
adc
or
xor
mov
data16
and
ret
call
mov
pop
xchg
cmp
cmpsb
xchg
call
subl
pusha
push
mov
jbe
and
imul
cwtl
mov
cmp
arpl
jmp
cmp
cmp
push
stc
xchg
fbld
imul
and
xchg
jmp
cmp
pop
mov
dec
mov
xor
stos
sub
pop
imul
mov
add
das
cmp
mov
sbb
incb
add
scas
push
xchg
cmp
dec
popf
in
sahf
js
push
mov
lods
lret
shlb
ja
les
push
push
dec
adc
pop
ss
lahf
adc
mov
push
push
jmp
es
pop
push
addb
mov
cmc
mov
stos
rcll
mov
sbb
add
adc
cmp
inc
add
scas
lret
sub
lods
sub
push
aaa
mov
insb
jp
fisttpll
cmp
je
stos
test
dec
mov
inc
push
cmp
enter
into
mov
pop
jl
push
imul
fisttpll
cwtl
push
inc
xor
loop
pop
xor
xchg
dec
xor
mov
add
push
sub
aam
addr16
cli
fstp
xor
pop
xor
xor
leave
cmpxchg
mov
sbb
cmpsl
pop
and
adc
ret
cmp
aad
jecxz
or
sbb
jecxz
movsb
sub
adc
dec
out
inc
dec
and
adc
rolb
jns
popa
xor
jb
int
cmp
mov
dec
and
orl
mov
adc
enter
repnz
mov
cs
in
dec
add
push
int3
lret
int3
rolb
dec
mov
xchg
or
and
int
and
mov
xchg
dec
mov
or
inc
psubusw
pop
pop
clc
andl
sub
or
and
adc
out
sahf
xor
jae
imul
mov
out
cmc
arpl
jae
loope
xchg
addr16
rcrl
xor
clc
arpl
add
and
sub
pop
subl
shlb
stc
stos
fstpt
scas
cwtl
dec
xlat
jns
jnp
les
xchg
mov
mov
je
mov
notb
dec
adc
cmp
sub
outsl
push
fidivrl
sbb
popf
mov
pop
test
xchg
call
mov
daa
jmp
fwait
in
add
imul
pop
mov
repnz
popa
int
sub
mov
adc
sbb
std
dec
xchg
mov
ss
out
or
jno
xor
adc
in
inc
dec
mov
test
int3
mov
jmp
insb
repnz
mov
rclb
in
cli
pushf
add
out
std
add
sub
das
orl
ss
shll
xchg
fildl
jbe
cld
adc
jmp
add
inc
jns
and
sahf
std
lcall
pop
ds
mov
arpl
sar
adc
sbb
push
arpl
jmp
lret
mov
pop
cmp
ffree
adc
cmp
dec
jb
add
call
or
dec
cs
cmp
fwait
test
push
scas
stos
cmc
lcall
jmp
sbb
pop
pop
test
sub
sbb
addl
movsl
es
imull
lods
mov
movsb
lock
mov
cmp
leave
sub
jnp
mov
pop
or
jb
stos
push
xor
inc
nop
mov
add
jg
mov
jmp
add
adc
mov
mov
xchg
cmc
inc
push
or
sub
push
into
dec
mov
lds
cltd
dec
icebp
jae
fwait
int
cmp
imul
adcl
hlt
xchg
andb
js
xor
jae
enter
adc
into
lahf
xchg
mov
stos
mov
push
pop
sbb
addr16
cmp
mov
xchg
cmpl
sbb
arpl
fnstenv
pop
sbb
or
sub
out
xor
mov
movsb
in
jns
arpl
push
adc
sti
popa
std
pop
stos
mov
ss
add
out
lret
fimull
push
inc
inc
xor
or
cld
and
push
xor
fsubrp
fstpl
andl
cwtl
mov
fidivs
ljmp
enter
dec
mov
mov
add
mov
xchg
clc
sub
dec
xchg
inc
lods
rcl
mov
outsl
ret
jae
push
jb
xchg
movsl
mov
lock
orb
sbb
das
xor
stos
push
mov
mov
mov
jg
rclb
jge
or
rclb
xchg
dec
pop
sbb
mov
adc
mov
insl
push
cmpl
adc
dec
sbb
cmp
out
imul
xlat
outsl
add
cwtl
scas
into
xchg
mov
push
lahf
mov
iret
into
jg
int
xchg
adc
fcompl
adc
lahf
sbb
xchg
test
cmp
add
mov
sbb
pop
cmp
inc
dec
lds
sbb
cmp
addr16
pop
xor
in
xor
mov
fistpll
push
lret
jg
sub
jne
shll
int
push
icebp
and
xchg
cmpsl
dec
dec
adc
sti
push
adc
xor
sub
sbb
push
cmp
dec
dec
cmp
testb
xor
fwait
xor
outsb
aad
jg
mov
mov
jne
sti
cltd
imul
repz
dec
insl
mov
add
lea
adc
out
icebp
add
outsl
mov
mov
mov
xchg
push
imulb
cmp
pusha
xor
ret
xchg
cmp
sahf
push
mov
mov
jge
sahf
jle
sarb
sub
mov
pop
sub
cmp
rorb
inc
pop
fwait
imul
and
inc
cmpsb
xor
dec
out
outsb
in
lret
jg
mov
test
jb
clc
int3
scas
lret
loop
mov
push
xchg
and
xchg
lds
inc
sbb
inc
dec
sahf
xlat
in
or
mov
insl
dec
or
in
arpl
into
cld
repnz
add
jp
icebp
sbb
fidivl
out
jne
cltd
or
lcall
pop
or
ja
or
push
pop
aam
andl
xchg
push
addl
in
iret
pop
outsb
cmpsl
xchg
xchg
mov
sarb
mov
sub
xchg
and
lahf
in
hlt
push
in
fistl
ret
add
fs
pop
xor
mov
and
testb
imul
negb
ss
mov
cmp
adc
mov
ret
mov
fs
mov
fdivs
fstpl
rorl
int3
mov
add
