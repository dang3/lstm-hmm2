dec
pop
jl
jle
stos
mov
nop
scas
aad
std
in
cmpsl
js
xor
aam
shr
inc
aaa
and
call
pop
push
inc
jmp
push
movsl
leave
sbb
sub
push
sbb
and
jmp
and
out
test
or
mov
mov
imul
lods
jge
or
daa
sub
mov
ja
push
push
shrl
shrl
xor
outsl
jmp
push
sbb
fimull
movsb
adcl
sbb
dec
dec
in
push
je
jb,pn
push
mov
cmp
mov
jle
add
stos
pop
mov
and
fisttpll
xor
push
or
xor
mov
sahf
mov
xchg
sarb
xor
out
imull
lret
pop
mov
lret
insb
insb
dec
test
adc
mov
or
cltd
test
out
pop
lods
stc
mov
cli
jne
add
andl
ljmp
fwait
sub
sbb
mov
rcll
xor
push
and
cwtl
loopne
pushf
int
or
push
fimull
fisubrl
pop
lret
sub
sbb
mov
pop
pop
inc
mov
jb
push
or
jecxz
jmp
out
or
pop
mov
jl
cwtl
add
inc
rcrl
rolb
int
pop
cmc
mov
mov
mov
lods
lods
movsb
adc
dec
mov
adc
ss
dec
test
scas
fcoms
add
sbb
js
sarb
scas
aad
mov
dec
or
out
leave
push
roll
cli
popf
out
sub
push
inc
ja
inc
or
xor
pop
mov
stc
adc
js
and
dec
jmp
add
push
loope
popf
jnp
hlt
das
subl
and
xor
jle
push
gs
repnz
rol
push
out
jno
sub
mov
cwtl
and
jae
pop
xor
out
sbb
pop
lea
push
mov
mov
test
push
jb
dec
fnstsw
test
pop
push
push
cli
stos
cmpsb
scas
push
ficoms
adc
push
pop
jl
push
cmp
push
data16
mov
mov
movsl
cs
bound
cmp
rorb
inc
jmp
shlb
ja
shl
daa
testl
pop
xchg
ja
inc
fwait
jg
int3
pop
scas
add
rclb
xorl
lea
dec
and
xlat
jmp
pusha
mov
cmp
add
ds
imull
mov
adc
insl
enter
out
lods
mov
repz
add
xchg
ficompl
das
jbe
mov
sahf
dec
xor
push
in
insb
mov
and
mov
and
push
jne
out
jg
popf
lock
jmp
lds
and
sbb
or
cs
inc
push
lods
mov
cld
in
je
xor
push
mov
dec
loopne
enter
into
inc
pop
and
mov
mov
mov
iret
adc
dec
add
outsl
or
cmp
xchg
andl
xchg
jbe
adc
jb
add
in
xchg
out
adc
scas
movsl
xor
and
inc
jb
lods
js
adc
xchg
out
mov
mov
or
test
or
add
das
xchg
jl
pop
jb
dec
enter
test
insl
sub
push
adc
cmc
dec
xor
enter
xor
popl
arpl
call
inc
cmp
add
xchg
mov
adc
dec
lcall
adc
ds
cmc
jns
pop
fisttpl
in
out
popa
fcomps
add
push
pop
insl
in
jbe
call
push
push
mov
or
mov
inc
push
push
les
test
jmp
lods
push
jne
and
leave
cmp
test
lret
test
outsl
push
cltd
lods
sub
cltd
test
jne
mov
jmp
test
loopne
jmp
fistps
push
and
pop
xlat
adc
iret
jbe
xor
imul
stos
push
shlb
cs
jo
lret
std
repnz
adc
or
cmpl
push
inc
sub
jne
mulb
aas
scas
je
ss
or
inc
sbb
sahf
or
rolb
fstpl
push
loop
fcomps
add
xor
and
xchg
call
ret
jae
shrl
push
xor
mov
pop
adc
jl
push
fwait
sub
push
mov
push
mov
lods
insb
sub
movsl
sub
mov
shl
lret
adc
jecxz
inc
sub
fldcw
inc
add
jecxz
sbb
ret
test
int3
fidivl
lds
xchg
push
dec
mov
add
or
aas
in
pop
mov
loopne
jg
je
pusha
pop
rcrl
daa
mov
out
pushf
sbb
mov
sub
shr
lahf
loope
fwait
xor
shlb
rcll
leave
inc
andl
loopne
sbb
pop
call
test
inc
and
pop
pop
aaa
mov
dec
sub
clc
dec
push
mov
shl
lret
dec
pop
mov
push
nop
xchg
sbb
jnp
sbb
push
scas
imul
outsb
loope
xchg
in
int
sbb
or
stc
and
in
fisubs
jo
jbe
in
div
sbb
or
cltd
es
daa
data16
addr16
dec
addr16
scas
sub
push
and
cli
mov
adc
loope
and
jl
mov
or
add
xchg
and
jbe
fldenv
aad
xchg
cld
xchg
clc
jge
int3
lods
push
push
inc
xchg
inc
ret
push
jns
lock
mov
leave
jae
ss
jns
mov
inc
lea
sub
sbb
outsl
adc
push
fs
sbb
mov
cltd
addr16
into
mov
ljmp
xor
inc
push
out
mov
fwait
popa
sbb
xchg
dec
rcll
inc
pop
pop
scas
adc
vorps
dec
gs
stos
mov
adc
jle
pop
cmp
push
and
and
xor
jl
rorl
mov
cmpsl
cld
hlt
jp
imul
outsb
hlt
test
jbe
xchg
stc
inc
jo
out
lcall
nop
mov
bound
roll
inc
and
add
shl
xchg
jle
lret
xor
jle
gs
mov
lcall
mov
push
pop
fwait
cmp
xor
dec
cmc
rol
pop
iret
adc
in
xor
sub
test
or
and
inc
xor
sub
and
xchg
arpl
lds
or
xchg
add
add
adc
mov
mov
push
pop
test
add
aad
xor
jmp
pop
es
pop
cmp
in
icebp
cld
and
fisubl
ljmp
mov
das
pushf
mov
loopne
loop
push
addl
test
mov
jne
aaa
mov
add
ret
mov
sbb
test
add
call
cmp
jg
push
mov
cmp
mov
jmp
mov
orl
and
mull
mov
rcrl
int
push
dec
or
lock
in
inc
addr16
or
cmp
daa
jae
push
and
and
popa
ja
sbb
mov
mov
enter
daa
insb
pop
mov
or
xchg
lods
ja
js
mov
out
dec
sbb
sahf
jae
scas
dec
into
or
sti
adc
adc
mov
in
lcall
xchg
imul
push
jge
add
jnp
adc
stc
cmpsl
pusha
and
push
in
mov
ss
mov
jmp
push
mov
test
sti
scas
mov
push
loop
sub
xchg
sub
jp
sbb
loopne
je
shrb
repz
inc
nop
inc
add
in
sub
shll
in
pop
scas
jb
and
mov
fisttpll
lret
ror
dec
mov
jbe
cmc
iret
dec
sub
cmp
pop
adc
mov
js
cmp
xor
jne
push
jno
sub
fdivr
xchg
dec
mov
out
sbb
out
pop
add
ljmp
jmp
ds
lea
jle
stc
ret
out
out
repnz
adc
push
loope
xor
inc
mov
ror
rcrb
pop
push
inc
outsb
jle
sub
add
jmp
cmp
adc
cli
adc
ret
mov
ror
shlb
lds
int3
pop
push
or
insl
dec
clc
ret
iret
lret
les
ja
test
mov
dec
jmp
add
dec
dec
push
repz
ljmp
and
sbbl
jl
add
jp
lods
or
cmp
jns
pop
aas
les
lret
mov
and
andl
inc
and
int
lods
cmp
lahf
and
les
test
fcmovnb
mov
mov
jg
adc
push
ds
adc
push
roll
fstpl
in
add
mov
push
jp
lret
push
cmp
out
add
std
xor
mov
mov
mov
test
mov
cmp
bound
push
xlat
jl
test
test
dec
inc
add
sub
and
js
push
pop
scas
lock
mov
mov
mov
adc
adc
pop
mov
pushf
fistps
cld
movsl
pop
fistl
pop
push
mov
sub
js
or
jns
jecxz
sub
lock
mov
movb
imul
inc
stos
adc
adc
add
jo
add
inc
push
cs
outsb
mov
shlb
jle
inc
test
mov
cwtl
outsl
add
popa
mov
cmpsb
inc
push
dec
call
aaa
addr16
std
xchg
sub
dec
pushf
pop
push
data16
lahf
mov
jmp
adc
xorl
add
into
les
mov
xchg
sbb
dec
test
fwait
add
add
and
pop
pop
sbb
lods
inc
and
jae
xchg
dec
dec
int
fs
mov
test
add
popf
pop
dec
cld
rep
fldenv
gs
mov
pop
mov
jae
mov
pop
xor
enter
cld
dec
stc
int
mov
xchg
gs
jno
fiaddl
sbb
cmp
std
mov
mov
cmpsb
cmp
bound
push
mov
clc
xor
inc
pusha
jns
out
inc
inc
ret
dec
cmp
negb
dec
jae
in
push
sub
fisttps
dec
cmpsb
sub
stc
mov
test
int
push
mov
cwtl
out
js
repz
xchg
ljmp
shlb
inc
jge
lea
xor
cmp
iret
lods
mov
sub
cli
dec
movsb
inc
cwtl
push
inc
sti
test
sbb
inc
jnp
mov
ja
jnp
cmovp
xor
xchg
dec
jno
ljmp
lret
sbb
dec
shlb
or
sar
jbe
sbb
in
jp
mov
add
sub
in
cwtl
mov
mov
ja
sub
xor
loopne
nop
push
mov
sbb
fld
xchg
jae
lret
fsts
add
shlb
in
or
push
and
ret
jnp
xchg
adc
xchg
jnp
add
divb
hlt
mov
xlat
cli
stos
adc
push
leave
xor
mov
cmp
and
clc
mov
pop
jle
mov
insl
cmpsl
pop
xlat
mov
jl
jmp
sub
cli
pop
loop
dec
sub
and
dec
loopne
mov
int
lret
fbstp
fsubp
movsl
lods
mov
xchg
mov
jae
out
loop
je
jge
mov
dec
mov
inc
in
pop
inc
outsb
mov
xchg
mov
jmp
add
jle
xchg
pop
or
or
push
test
xor
outsb
mov
sub
loopne
push
dec
cmp
fistps
fnstsw
lds
xchg
push
ficompl
sub
es
cmp
mov
in
xor
repnz
mov
sbbl
jno
mov
or
pop
jecxz
out
push
lods
pop
jl
inc
test
push
icebp
pop
mov
inc
ljmp
cmp
xchg
leave
test
sub
mov
mov
outsl
test
sub
pop
fsubs
push
test
sti
mov
jle
jle
gs
push
out
aas
or
insl
inc
jl
jecxz
movsb
clc
pop
ret
jl
fildl
mov
loopne
xchg
add
js
xor
sbb
xchg
out
mov
insb
clc
sbb
daa
sbb
ficompl
inc
jo
mov
cltd
dec
and
or
inc
out
add
imul
xchg
movsb
push
ja
pushl
out
sub
arpl
lret
sub
lcall
mov
mov
daa
aam
dec
sbb
movb
dec
aad
xchg
and
lods
sbb
xchg
clc
popw
out
les
mov
xor
xchg
xchg
repnz
pop
scas
mov
sbb
adc
mov
call
jb
sbb
xlat
pop
ret
xchg
pop
jp
sbb
jmp
mov
sub
mov
mov
sub
add
cld
negb
clc
movsb
aaa
and
test
add
loopne
int3
das
out
pop
xchg
jbe
divl
sahf
or
hlt
clc
jbe
cmp
sub
jns
jo
adc
out
dec
cmp
or
push
mov
mov
adc
cmp
mov
push
sub
sub
cmp
outsb
fucomi
jne
mov
sbb
inc
insl
sbb
pop
adc
jnp
test
mov
outsl
test
lods
mov
imul
popl
lret
dec
xchg
out
dec
lea
xchg
cmp
jbe
push
ret
inc
pop
mov
mov
pushf
push
cmp
les
outsl
xchg
test
movsb
sbb
push
ss
mov
pop
xchg
addl
icebp
pop
cmp
xor
jl
xor
test
jae,pn
xchg
jmp
fisttpll
xchg
push
vpmaxuw
sti
stos
sub
ljmp
cmp
mov
cmp
xchg
pop
mov
es
or
push
ds
sti
xor
add
stos
jb
jo
shlb
dec
jmp
or
jmp
or
adc
insl
test
movsb
mov
adc
xchg
pop
ficoml
cmp
add
dec
adc
popa
pop
pushf
aad
push
mov
xchg
imul
clc
inc
data16
sub
loope
push
pop
ror
sbb
bnd
mov
sbb
xor
mov
adc
imul
ss
mov
inc
out
pop
outsb
mov
push
add
cs
into
call
int3
sbb
je
cmp
cmp
rcr
push
fstpt
or
int3
mov
fs
out
sub
add
pop
shlb
lcall
sbb
mov
movsl
daa
scas
sub
ljmp
jle
jne
fwait
int
je
xchg
adc
cwtl
std
pop
and
cmp
jmp
push
sti
mov
rcll
add
mov
gs
mov
dec
add
xchg
insb
lahf
cmp
lods
sti
popa
push
sbb
adc
or
dec
or
imul
in
mov
orb
pop
lea
popa
outsb
xchg
inc
inc
mov
pop
lcall
and
sbb
nop
lret
push
out
mov
push
push
pop
sbb
ss
andb
inc
mov
cmp
testb
loopne
cmp
aas
in
xor
nop
cmp
scas
rorl
cwtl
fs
cmp
stos
cld
rclb
sbb
enter
xchg
pmullw
fisubrl
inc
mov
mov
out
std
sbb
repnz
inc
pop
jmp
ss
aaa
mov
xchg
lea
pop
in
roll
sub
icebp
push
sbb
ljmp
mov
lods
dec
std
xorl
xchg
std
sbb
push
stos
cwtl
cmp
shlb
data16
adc
mov
ficoms
inc
inc
clc
cmpsl
push
es
add
cltd
jbe
inc
jp
cmp
cld
jl
adc
dec
jo
adc
fwait
xchg
jl
xchg
sti
movsb
push
mov
iret
jne
adc
mov
lock
lea
pop
addr16
faddl
jmp
xchg
sti
mov
push
adc
rcrl
sub
add
rol
cld
mov
mov
lret
push
int
imul
sbb
mov
sahf
sub
loope
loopne
sbb
cmp
ja
movsl
and
lods
out
jb
cwtl
push
cmp
addr16
cmpsb
or
sub
arpl
daa
sbb
cli
inc
daa
inc
mov
adc
repnz
mov
dec
out
aam
jb
mov
inc
and
mov
testb
mov
insb
lahf
cld
dec
xchg
ficoml
or
mov
std
jmp
jno
push
pop
xor
test
mov
pop
xlat
pusha
mov
sbb
decl
std
les
xor
popa
sbb
add
mov
cmp
jne
dec
in
shrl
mov
inc
inc
xchg
sbb
mov
dec
int3
arpl
or
pop
pusha
ljmp
pop
jg
add
add
mov
add
adc
js
push
aad
xor
adc
hlt
notl
add
insl
xlat
mov
mov
dec
adc
loopne
leave
sbb
lcall
xor
stc
sbb
cs
andb
in
jo
data16
cmp
push
movsl
xlat
ficoml
loopne
add
xlat
jp
popa
mov
or
mov
inc
cmp
movsl
jle
cmp
aas
in
dec
inc
out
mov
ret
push
mov
fistpl
and
xchg
jecxz
popa
push
adc
out
or
rolb
outsb
arpl
xchg
xor
mov
ret
inc
mov
or
insl
or
jo
sub
movsl
cmp
out
cmp
fs
gs
test
inc
dec
icebp
adc
jmp
or
push
mov
mov
inc
in
mov
loopne
fisubs
xor
sbb
mov
fildl
sub
push
test
dec
mov
sbb
jno
aaa
ja
cmp
cs
and
mov
aad
mov
inc
adc
test
int3
rcr
add
test
dec
xor
in
lds
test
sbb
lahf
dec
cmp
mov
pop
es
rorb
lahf
addl
in
mull
xchg
sbb
shrl
and
dec
enter
mov
movsl
xor
adc
lods
jne
and
cmc
call
mov
cmp
pop
or
pop
mov
leave
lahf
sarl
add
push
jb
mov
mov
divl
test
jecxz
lods
aam
jbe
cmp
cmp
push
adc
inc
das
cwtl
pop
cmp
push
mov
pop
cmp
arpl
push
mov
pop
add
rorl
dec
ljmp
ja
imul
hlt
imul
xchg
shlb
cld
xor
loopne
fstl
fisttpll
sbb
std
and
leave
fs
jns
and
add
fisubrl
mov
rclb
xchg
jbe
bound
hlt
mov
mov
jmp
movsl
cmp
cs
or
mov
fnstenv
xor
push
cwtl
rorl
cwtl
mov
out
scas
xchg
ret
mov
sub
jg
xor
mov
push
fcomps
rolb
push
jb
cs
fistpll
push
mov
sub
fnstcw
popf
iret
pop
into
cmpsl
xorb
sub
shr
mov
or
jne
jp
loop
inc
div
pop
and
imul
out
pop
mov
or
xor
lret
scas
dec
mov
pop
jnp
xchg
mov
dec
or
sbb
aas
lcall
inc
aas
les
mov
in
popf
mov
mov
adc
int
pop
xor
dec
inc
and
pop
fwait
xor
idivl
jmp
stos
and
outsl
bound
int3
stos
jg
or
mov
jecxz
jbe
test
inc
and
push
lods
outsb
test
stos
in
add
ja
inc
push
mov
fcomps
and
rcrl
add
dec
js
stos
loope
scas
and
push
fwait
repz
sbb
aad
add
subb
clc
leave
lret
xchg
lock
pop
cs
lds
sub
mov
je
xor
dec
xchg
sbb
mov
add
dec
jne
shrb
je
mov
sti
mov
sbb
dec
mov
and
push
mov
testb
cwtl
mov
js
loope
outsb
nop
subl
xlat
jmp
push
mov
or
out
clc
data16
lock
cmp
mov
test
adc
push
aas
add
and
rol
testl
sub
xchg
out
lahf
adc
xor
mov
out
repnz
pop
inc
push
ret
xor
jnp
mov
xor
and
shrb
mov
ja
sub
imul
mov
dec
adc
mov
aas
das
push
pop
and
xor
mov
call
mov
xor
repnz
jne
pop
mov
test
cmpsl
and
int3
nop
adc
push
push
nop
pushl
test
lahf
jmp
mov
and
aas
sbb
rcrb
xchg
and
pop
adc
xchg
inc
lods
nop
dec
jg
enter
popl
dec
xlat
dec
test
jae
fldcw
aaa
sub
mov
mov
jbe
cld
fiaddl
inc
rorl
imul
cli
jmp
rol
in
mov
hlt
mov
mov
pusha
dec
stc
mov
movsl
pop
shl
mov
mov
out
orl
sub
aas
xchg
pop
lods
mov
test
dec
push
cwtl
dec
mov
push
mov
dec
imul
inc
jbe
push
xchg
mov
dec
std
jmp
mov
mov
add
les
in
test
das
aaa
or
push
cmpsb
inc
gs
test
int3
loopne
imul
mov
imul
aad
cmp
ss
out
data16
mov
xchg
push
testl
mov
loope
mov
xchg
out
mov
mov
shlb
ja
lods
mov
pop
shl
mov
xor
pop
push
or
roll
inc
pop
movsb
push
or
dec
lahf
xor
fsubl
popf
mov
xchg
inc
cmc
mov
dec
in
adc
test
stc
aad
fwait
loope
js
or
pop
mov
outsb
repnz
in
dec
sub
aas
bnd
fstpl
mov
int
out
mov
cmp
das
mov
out
cmp
xor
xchg
test
dec
test
inc
out
cmp
lret
scas
mov
test
mov
add
rcl
int
xchg
notl
out
push
mov
clc
lock
or
sti
sbbb
ds
outsl
dec
repnz
xchg
or
xchg
ss
pop
negl
test
aam
mov
xchg
or
sbb
imul
lock
xchg
out
sub
roll
andl
fdivr
mov
xchg
push
notb
ud2
mov
nop
je
movaps
sub
sub
loop
insb
aad
not
ret
pushw
insl
xlat
push
sub
lret
mov
xchg
in
mov
das
aas
mov
cmpl
mov
mov
sub
sbb
loope
leave
orl
out
out
dec
xor
cmp
add
sti
cmpsb
mov
adc
mov
add
xor
sub
fsubr
cmpsl
adc
shll
cmp
lods
sub
imul
mov
pop
out
adc
jl
enter
xor
pop
inc
les
inc
inc
inc
jmp
xlat
bound
jmp
lock
imul
scas
sbb
cmp
nop
cmp
mov
lahf
mov
xor
ret
sub
pop
ficoml
jnp
sub
mov
jns
push
sbb
mov
xor
mov
sub
mov
sub
test
mov
loopne
xlat
adc
lret
mov
adc
stos
or
mov
repnz
mov
dec
popa
scas
cmpb
and
or
ss
sub
fnstsw
addr16
pop
pop
sub
popa
test
mov
cmp
addr16
jb
leave
xchg
mov
dec
pop
rcrl
pop
call
out
xor
bound
fldcw
test
leave
loopne
ror
das
pop
ljmp
xchg
lds
add
sarl
cmp
jne
fidivrl
ret
shr
xorb
inc
lcall
iret
push
or
aam
mov
stc
xchg
es
ja
mov
add
sbb
jmp
cmc
or
jle
lret
push
pop
bound
mov
mov
aaa
cmp
shrb
cmc
mov
cmp
mov
mov
ficompl
es
mov
inc
pop
icebp
int
sarl
movsb
stos
adc
test
out
jg
dec
jo
xchg
pop
xor
mov
adc
sbb
and
enter
cmpsb
jge
iret
adc
add
call
in
dec
mov
mov
mov
add
aad
and
rcrb
and
data16
and
mov
scas
mov
mov
stos
lds
fwait
lahf
sbb
sbb
add
mov
ficomps
int
dec
mov
mov
loop
mov
mov
xor
ss
mov
xor
outsl
enter
push
loope
inc
sbb
inc
std
aad
jns
aam
cmp
aas
scas
pop
std
push
adc
fldt
scas
push
pop
popf
pop
cld
adc
add
stos
test
outsb
cld
cltd
rcl
pop
lcall
js
sbb
ds
or
mov
enter
xor
pop
xchg
mov
xor
repnz
xor
xchg
pushf
sbb
sub
pop
data16
mov
inc
cmp
xlat
hlt
mov
xor
pop
cltd
sbbl
imul
cmp
test
push
cmp
int3
mov
aam
sarl
orb
and
jmp
js
mov
jl
add
sahf
sbbl
hlt
fwait
outsb
ficomps
cwtl
inc
les
mov
sub
divl
sub
in
rcrb
gs
shrl
add
cmpsl
mov
adcb
loope
pop
xor
sbb
or
out
je
jb
mov
fcoms
pop
std
fsubp
cld
stos
cs
sbb
pop
xchg
mov
lret
ss
cld
loopne
adc
jmp
shl
adc
shrb
lret
jb
cmp
adc
pusha
mov
clc
sub
add
xor
push
mov
sub
faddl
test
in
and
xchg
in
push
pop
loop
mov
aam
mov
cwtl
mov
or
es
arpl
mov
aad
and
mov
movsl
int3
fs
pop
repz
cmpsl
dec
lock
fisubrl
pop
dec
mov
inc
and
xchg
pop
shr
xchg
cmpsb
scas
inc
test
mov
insb
xchg
and
sbb
xor
jmp
fs
and
pop
test
push
add
movsl
jo
dec
rcrb
jle
icebp
and
dec
xchg
outsb
rorb
je
xchg
ljmp
out
call
hlt
das
and
mov
mov
outsb
sbb
xor
mull
add
jl
pop
fimuls
mov
sub
adc
test
push
mov
add
or
movsl
addr16
inc
popf
lea
push
out
mov
xchg
sbb
dec
lock
mov
xchg
pop
rolb
push
pop
fninit
js
cmpb
fmull
mov
mov
arpl
and
loop,pn
das
imul
dec
sbb
xor
inc
adc
mov
pop
out
dec
add
iret
jb
mov
mov
cwtl
cli
sub
pop
js
xor
mov
jns
add
xchg
dec
or
mov
pop
stos
sbb
jo
sahf
cli
xchg
insb
jb
in
add
sbb
loope
pop
ret
lods
jno
jge
mov
outsb
cmp
in
fnstenv
sbb
lock
pop
mov
push
jmp
test
lret
iret
ret
cltd
sti
mov
test
test
and
and
lahf
and
push
lahf
xor
cld
cmp
cld
movsl
adc
mov
shll
adc
inc
lcall
xor
adc
mov
xchg
sbb
bound
dec
fsubs
pop
outsl
sbb
mov
rcll
gs
mov
add
cmp
pop
loope
mov
lock
jnp,pt
cwtl
leave
mov
lods
add
xor
lahf
add
insl
xor
mov
pop
mov
mov
insb
adc
add
fadds
jb
pushf
lret
lcall
mov
pop
mov
adc
pop
inc
dec
andb
dec
jns
pop
std
movsl
or
dec
xchg
sbb
cld
and
call
mov
inc
or
xchg
add
sarb
sub
sbb
incl
nop
repnz
dec
inc
lods
push
xchg
adc
enter
mov
stos
cmp
jno
xor
and
dec
movsb
push
push
das
sahf
in
pop
xchg
repnz
and
dec
inc
pop
enter
sub
sti
rcll
rcrl
mov
jg
sbb
cmp
dec
or
and
in
daa
xchg
lods
and
add
adc
enter
mov
cmp
xchg
jmp
insb
xor
scas
mov
dec
outsb
es
cli
imul
add
dec
pop
stos
cmp
dec
and
ds
iret
fdivp
cmc
xchg
push
lock
lret
sub
mov
out
mov
mov
les
mov
jo
scas
arpl
out
stos
xor
and
push
imul
and
popw
leave
jmp
mov
jns
mov
cmpsl
and
add
jo
adc
mov
xstore-rng
cmpsl
xchg
push
mov
mov
roll
or
jno
mov
imul
adc
jecxz
push
daa
pop
add
inc
lods
insl
xlat
adc
sbb
fadd
mov
mov
mov
frstor
je
adc
push
xorb
int
sbb
adcl
repz
bound
mov
fstpl
ret
fistpll
push
fnstenv
rcl
mov
je
sub
sbb
pop
mov
cmp
and
outsb
addr16
rcrl
std
inc
call
fwait
mov
and
xchg
int3
cmp
insb
and
mov
fisubs
dec
dec
aaa
mov
adc
mov
cld
insb
popf
rcl
and
jo
mov
mov
enterw
mov
push
sbb
out
jecxz
ljmp
jg
dec
pop
fisubl
mov
add
adc
int
mov
je
fildl
add
cld
enter
into
cli
pop
andl
daa
xorl
daa
js
lret
das
test
mov
ja
add
out
add
jb
jmp
test
aam
pop
dec
faddp
sbb
je
addr16
push
arpl
cmpl
inc
dec
add
sbb
mov
aaa
push
adc
fisubl
mov
out
pushf
xchg
add
push
push
repz
lods
pop
fwait
adc
testl
mov
or
mov
leave
jne
xchg
sti
adc
inc
movsl
out
push
and
and
loop
inc
mov
ljmp
jge
int
or
movb
rcl
aaa
xor
ss
imul
lods
vpmaddwd
aam
mov
fcmovnu
rol
mov
cmc
imulb
fs
push
adc
ret
in
jo
cwtl
cwtl
call
xchg
ret
fisttpl
sbb
xchg
push
mov
pop
nop
push
jp
push
push
sub
jbe
pop
repz
imul
mov
cmp
sub
stos
pusha
in
es
push
call
leave
je
lock
lret
scas
mov
cmp
mov
mov
jae
or
stc
pop
lods
and
mov
notl
shlb
and
jge
xor
dec
jecxz
sbb
fcomi
ret
and
fcoms
fisttps
sub
inc
xor
pop
mov
push
cmpb
sub
loope
fistps
xchg
adc
repz
mov
leave
sbb
pop
pop
push
sub
jle
neg
sarb
outsb
shlb
pusha
mov
xlat
mov
cli
push
push
xor
push
aam
pop
stc
stos
in
imul
ljmp
mov
pop
dec
pop
test
jl
inc
imul
mov
pop
mov
xchg
and
jge
pushl
pop
mov
inc
xor
xor
xchg
sub
pop
pop
arpl
aas
cwtl
or
enter
dec
push
xor
and
jmp
sub
fidivrs
xor
or
cmp
push
xor
lods
and
dec
xor
and
loope
in
cld
inc
stos
jecxz
jmp
out
cwtl
rorb
loope
je
stos
sti
add
jge
mov
pop
pop
nop
lods
leave
cld
int3
mov
add
or
push
stos
stos
jnp
sub
scas
mov
pop
ja
ffreep
pop
ljmp
cwtl
mov
jne
cmp
mov
outsb
js
mov
cmpsb
hlt
into
ret
call
xchg
and
jecxz
xor
dec
lret
shlb
sarb
cmc
push
leave
repnz
mov
jnp
sahf
pop
mov
lcall
jge
lods
jl
sub
mov
arpl
jno
xor
push
xchg
inc
pop
enter
repz
push
sbb
lds
out
sub
lea
jns
movsb
fstpt
jmp
hlt
inc
cltd
popf
xchg
cwtl
dec
push
add
inc
jnp
shl
imul
xor
jae
cltd
shlb
rclb
push
pop
clc
xor
push
dec
add
inc
cmp
mov
push
inc
sub
ss
mov
push
subl
fists
test
fiadds
xor
pop
xchg
mov
mov
int
sub
push
xchg
in
addr16
xchg
fiadds
stos
or
enter
int3
cmp
mov
enter
push
dec
aaa
cmp
add
push
std
dec
lds
out
int3
inc
cld
dec
push
ss
push
mov
cmpsb
adc
outsb
imul
or
addr16
aad
enter
ljmp
adc
lds
stos
xchg
lds
inc
in
lds
mov
mov
data16
dec
mov
mov
jle
das
dec
ficomps
lds
sub
xchg
lret
xchg
sti
xor
popa
sbb
push
arpl
lock
push
jnp
test
scas
jne
clc
push
inc
fisubl
hlt
jbe
aad
adc
outsb
fdiv
into
jb
mov
add
inc
incl
xor
pop
mov
lock
cltd
cltd
ficomps
stc
xor
or
into
jo
mov
movsb
lock
and
add
mov
loopne
add
icebp
ljmp
aad
leave
mov
pop
pusha
cmp
push
outsb
aad
ja
sbb
sbb
or
cmp
les
sub
dec
js
repz
ror
push
mov
inc
dec
std
mov
xorl
mov
stos
sbb
pop
pop
cmpsb
or
xchg
add
xchg
cmp
outsb
mov
in
xor
pop
mov
push
cltd
dec
mov
push
push
pop
sti
lods
lahf
sbb
shlb
enter
fs
stos
add
push
mov
rclb
dec
push
mov
pop
lcall
jno
jmp
cwtl
addr16
and
sbb
in
sbb
jbe
test
rolb
ja
jge
cs
cmp
lods
test
mov
pushf
add
xchg
mov
sbb
xchg
les
imul
or
nop
aaa
mov
sbb
mov
sarl
jae
jecxz
push
xor
cld
aam
out
dec
xchg
shl
cli
xchg
jo
out
scas
xrelease
movsb
loop
mov
or
pop
leave
ret
das
dec
sbb
xor
stos
inc
int
sub
in
cmp
pop
push
sub
les
push
xchg
cmp
and
movsb
loop
xchg
icebp
push
pop
sbb
jmp
bound
popa
xor
mov
das
pop
lret
movsl
and
in
popf
jmp
or
push
movsl
in
iret
out
mov
in
shlb
into
dec
lahf
les
movsl
aam
test
in
repnz
ret
adc
pop
dec
pop
packssdw
jp
int3
jae
test
add
dec
cs
inc
or
push
jle
dec
xchg
sbb
cmpl
add
mov
leave
cmp
or
rcl
les
inc
adc
pop
out
and
cmp
xor
xor
dec
cmp
out
adc
fisttpll
dec
int
add
popf
arpl
cmp
aad
mov
dec
pop
mov
out
dec
lock
mov
and
in
sbbb
jbe
daa
jnp
mov
and
ds
fstpl
push
adc
jmp
or
mov
add
jecxz
push
dec
adc
ficoml
dec
inc
jecxz
cld
push
jl
jbe
cmp
xor
andb
imul
pop
push
jnp
lret
ds
aaa
out
mov
push
jbe
adc
hlt
push
xchg
arpl
or
mov
dec
inc
mov
mov
dec
dec
push
jo
push
rcrb
dec
outsb
lahf
and
add
mov
sbb
jae
test
movl
mov
adc
push
push
popf
lret
sbb
loopne
push
pop
addl
adc
pop
pop
push
int
out
loopne
shll
loopne
xor
dec
inc
outsb
movsb
shlb
loopne
shlb
sbb
jno
xchg
sub
jp
push
test
imul
pop
push
mov
ja
test
xor
outsb
enter
outsl
test
mov
jne
and
mov
push
push
push
fisttps
mov
pop
or
lods
pushf
jo
stc
lods
push
outsl
neg
filds
ljmp
insb
push
sbb
jp
enter
shll
daa
mov
vpsubw
jge
clc
jg
sbb
pop
add
hlt
popa
dec
pop
adc
push
jge
jecxz
loop
cld
call
imul
enter
pop
inc
sub
jo
popl
in
push
iret
push
mov
pop
inc
pop
sub
shl
mov
dec
jecxz
pop
adc
call
lock
sti
out
movb
fucomi
movsb
cmp
ljmp
imul
pushf
ss
rol
movsl
and
mov
add
rolb
inc
lea
test
aaa
test
je
in
or
cmc
mov
es
repz
jnp
sbb
dec
pop
xor
jnp
inc
or
test
cmc
xor
and
aaa
push
and
pop
scas
push
jle
add
and
mov
jo
dec
push
or
bound
lret
sarb
jle
dec
in
push
inc
stos
lds
test
or
cmp
imul
pop
jb
sbb
les
jo
xor
cmp
sbb
fwait
mov
add
and
dec
sahf
mov
sbbb
mov
outsl
mov
mov
dec
test
jne
push
cltd
cltd
cmp
inc
lock
xchg
rol
shlb
andb
sbb
in
lcall
aaa
aam
xchg
fstps
outsl
scas
fwait
jbe
in
adc
lret
lods
jno
mov
lcall
insb
dec
sbb
loope,pn
sti
mov
dec
hlt
hlt
or
fadd
cmc
push
xchg
inc
out
lds
out
adc
dec
rolb
sub
mov
ds
stos
repz
scas
mov
xchg
fiadds
imul
or
out
mov
mov
dec
adc
insb
lods
xchg
cmp
testl
mov
decl
icebp
push
mull
cmpb
popa
pop
scas
mov
fnstenv
push
stc
popa
std
add
cmp
jb
push
cmpl
outsb
inc
inc
and
inc
jnp
xchg
or
addb
pop
inc
movsb
ficoms
and
push
jo
fistpl
mov
arpl
das
mov
stos
push
add
add
and
pop
fcmovu
ja
shlb
sub
out
insl
scas
inc
xor
push
imul
add
sahf
rcll
iret
inc
inc
adc
in
ljmp
push
bnd
cmp
lahf
sbb
int
and
fcmovne
scas
adc
xchg
dec
and
jno
ja
lea
outsl
movsb
mov
fxsave
popf
in
fisttpll
xchg
test
xchg
outsb
pusha
test
sbb
xchg
fbstp
xchg
push
fdiv
or
pop
add
jecxz
jl
sub
in
mov
lods
bound
xor
jbe
insl
push
ja
movsb
sbb
xor
dec
inc
inc
fistpll
out
mov
cwtl
out
movb
rolb
dec
and
inc
insl
lcall
mov
cwtl
out
and
sbb
cmovne
adc
adc
nopl
push
rorb
and
mov
push
xchg
or
mov
jo
fs
lret
and
je
push
clc
arpl
mov
ror
pop
shrb
inc
mov
rcrl
mov
dec
out
push
xchg
xor
ret
outsl
stos
dec
pop
mov
enter
icebp
int
in
mov
icebp
push
movl
stc
mov
push
or
in
lcall
jns
inc
push
fistps
xchg
stc
or
push
dec
cmp
out
cmpsb
push
xchg
rorl
aas
in
fwait
mov
jp
push
sbb
push
jne
jbe
sub
push
push
test
mov
outsl
sti
push
pop
jmp
xor
adc
clc
xor
xchg
loop
fwait
or
jae
cli
cmpl
test
sbbl
jbe
aas
aam
push
das
int
adc
jp
adc
rcl
bound
add
cmp
enter
movsl
cwtl
cmpsb
mov
push
cmp
imul
mov
es
std
pop
test
or
dec
xchg
xlat
or
pop
or
lahf
jecxz
mov
dec
or
push
push
outsl
xor
xor
cmp
lret
iret
push
jmp
push
ret
repz
cmp
sbb
imul
mov
notl
sub
and
mov
rorb
xorl
ret
jne
aad
jmp
in
sbb
aaa
xchg
jne
push
add
jnp
push
sbb
dec
lcall
pop
cmp
mov
lret
pusha
fimull
call
mov
sbb
cmp
ret
aam
xchg
in
jne
mov
sbb
xor
cmc
and
rcr
cmp
xchg
mov
lret
mov
sub
pop
xchg
popf
psllw
lahf
dec
pop
fldt
mov
and
ja
fisubl
cmc
nop
insl
cmc
loopne
jo
push
xor
lock
out
es
in
adc
sub
es
dec
xchg
xchg
dec
bound
idivb
pusha
mov
mov
or
mov
adc
pop
jae
leave
xor
dec
lods
and
mov
cltd
pop
fwait
popa
pop
out
sbb
lret
mov
fisubl
je
push
xchg
xchg
loopne
sti
add
mov
dec
test
imul
adc
subl
addr16
mov
mov
into
push
or
movsb
xor
pop
adc
sti
or
and
push
enter
jbe
ja
pop
mov
dec
enter
pop
add
xorb
pop
testb
xor
dec
inc
jne
aad
jle
adc
enter
xchg
push
and
stos
popa
mov
adc
in
jmp
fnstsw
pop
mov
jge
jg
push
cs
xchg
ds
xchg
addb
test
ret
sub
push
adc
or
enter
cmp
mov
add
mov
popa
in
dec
inc
cvttps2pi
aam
movsl
ret
outsb
fisubl
cli
out
daa
or
rcrb
xor
jp
lea
popa
int3
adc
push
es
stos
testl
fnsave
dec
or
adc
and
mov
fmuls
daa
int3
data16
mov
rorb
movsl
sub
lret
out
push
xchg
xchg
loop
push
shr
mov
add
incb
fwait
loopne
xchg
lds
data16
fidivs
into
lock
fs
jg
pusha
mov
out
leave
mov
mov
movsl
dec
jp
ret
mov
scas
out
push
mov
push
call
es
pop
fcompl
aam
xor
jns
jo
lahf
les
repnz
repz
cmp
adc
jbe
out
or
rorb
insb
mov
mov
aaa
pop
add
sub
cltd
testl
pop
xchg
loop
les
and
popf
xor
lcall
dec
mov
cmpsl
dec
mov
ja
jno
movsb
mov
cmp
icebp
int
sti
jge
lret
scas
mov
ljmp
out
sub
jmp
mov
divl
xor
in
inc
aam
addr16
adc
mov
in
insl
adc
sub
das
jecxz
inc
frstor
fstpl
xchg
lret
cmpsb
xor
cli
lods
movb
mov
imul
fdivs
in
cmp
adc
sbb
pop
scas
sub
mov
mov
push
ret
rcrb
mov
jnp
xor
cmp
outsb
push
sub
push
adc
int3
mov
sbb
pusha
pmaxsw
xchg
push
ljmp
fmulp
mov
aaa
mov
or
nop
jne
fiadds
mov
fistps
ss
and
push
inc
mov
outsl
test
sbb
xchg
jae
dec
xor
xchg
cmp
adc
jecxz
or
lret
jl
imul
mov
mov
loope
pop
or
shl
xchg
lock
orb
mov
push
xor
mov
mov
sti
pop
loope
icebp
sbb
fbstp
in
into
aaa
dec
dec
xchg
sbb
stos
js
cmp
fs
or
and
and
rcll
jmp
cmpsl
adc
push
scas
imul
stos
repnz
loope
les
mov
outsb
pop
push
sbb
sub
std
les
push
dec
push
fucomi
sub
mov
sti
enter
xor
sub
push
cmpsb
rcrl
aaa
fwait
jl
push
jmp
cltd
or
xchg
into
mov
lock
and
aad
sbb
lahf
dec
adcb
push
mov
xor
sti
lds
lock
cmp
jl
sar
mov
arpl
push
rcl
mov
shlb
imull
sbb
jmp
imul
sti
add
repnz
call
mov
pushf
mov
adc
into
cltd
push
jns
popa
cmc
xor
aad
movsl
outsb
mov
mov
mov
mov
xchg
mov
pop
push
test
repnz
in
xor
lods
mov
clc
jbe
xchg
and
inc
aad
insb
or
loop
cwtl
dec
jp
or
fistl
cwtl
pusha
inc
mov
ds
out
push
test
addb
dec
into
pop
cmp
pop
jl
jl
gs
arpl
insl
icebp
es
rol
xchg
test
mov
sbb
push
xchg
mov
int3
int
mov
test
add
rcrb
mov
sub
cmp
fimull
xlat
push
dec
mov
sub
add
jl
enter
ljmp
inc
cmp
loop
ja
popf
fimuls
inc
and
jae
ss
jmp
mov
sar
int
and
movsb
jmp
sub
popf
and
mov
orl
pusha
int
xchg
xlat
idivl
mov
cmp
jl
fnstcw
ss
cmp
inc
cmc
std
cmp
xor
mov
sbb
hlt
js
repnz
and
sub
pop
mov
add
loopne
mov
sar
dec
divl
and
int
or
int3
test
add
xor
fcomps
js
in
sub
sub
ljmp
movsl
dec
add
mov
stc
jnp
adc
sti
inc
insb
jp
mov
dec
adc
mov
sub
int
dec
mov
insl
sbb
mov
cli
cmpsl
mov
daa
leave
js
lea
flds
dec
lcallw
pop
lods
fstps
pop
in
jbe
mov
cmpb
mov
in
idivb
rcll
mov
packuswb
fisubl
data16
jmp
cmp
xlat
jecxz
pushf
xchg
popf
lds
rcl
fstl
fstps
pop
pop
xchg
loop
sbb
daa
movsl
rolb
jo
ret
push
inc
fmul
insl
mov
xor
call
fwait
adc
push
jp
push
fisttps
mov
inc
lret
jmp
stc
outsl
cs
mov
popf
mov
push
cmp
cwtl
mov
scas
sti
push
push
xchg
pop
sbb
cs
push
sbb
cld
pop
inc
nop
pop
adc
push
add
push
enter
pusha
jo
mov
notl
push
xor
jg
notl
sub
cmpsb
pop
fsubrp
stos
fdivl
mov
aas
fcomi
or
ret
adc
xor
adc
xchg
jo
cmp
lock
jmp
jg
jnp
popa
mov
out
pop
pop
out
xlat
xchg
xor
test
outsl
sub
inc
ss
push
xchg
fwait
push
rcrl
lods
mov
pop
aad
outsl
pop
adc
loope
sbb
adc
xchg
outsl
insl
sbb
mov
fsubrs
add
push
addr16
add
pop
cwtl
shrl
in
sahf
and
mov
lahf
jo
fildl
xchg
daa
test
aad
inc
repnz
imul
mov
rcrl
xlat
jmp
and
stos
xchg
enter
std
xor
push
cmp
xor
stos
push
pop
test
jo
and
ljmp
push
xor
cmp
jbe
mov
mov
insb
mov
xchg
push
les
dec
cld
pop
inc
dec
push
pusha
ljmp
mov
aas
adcb
pop
add
shl
jp
mov
dec
and
pop
negl
add
ds
dec
arpl
adc
adc
add
adcb
jmp
adc
push
mov
dec
clc
loopne
mov
cmp
pop
or
pushf
ret
mov
insl
addr16
lods
rcr
dec
outsb
pop
push
or
push
int3
add
stos
jmp
add
stos
cmp
sub
jmp
cli
sbb
mov
call
cmp
clc
cmpsb
ret
sbb
jb
das
xchg
mov
lock
or
mov
and
xchg
mov
imul
mov
cmpsl
add
aaa
cmp
aaa
es
fidivs
and
xor
xchg
ret
jmp
adc
sarl
cli
aas
jl
xor
inc
dec
cmp
push
arpl
pop
xor
push
aaa
cmp
push
iret
and
push
sub
fwait
imul
push
and
xchg
jns
sbb
jns
out
jae
fwait
cli
lods
iret
push
pmaxsw
mov
das
ret
cmpsl
ret
xchg
push
and
clc
jecxz
fmuls
aad
xchg
add
hlt
sub
jnp
jns
inc
inc
das
stc
push
xchg
and
dec
fwait
insl
shrb
and
pop
daa
jns
adc
clc
xor
push
mov
cs
fistpl
xorl
test
push
inc
popa
rcr
mov
std
push
test
sarl
lcall
bound
adc
in
cmp
add
leave
lea
loopne
fildl
ja
push
push
dec
mov
cmp
scas
xchg
les
inc
je
rcrb
clc
ret
test
sbb
and
and
test
nop
movsl
pop
insb
test
mov
cmc
out
loop
stos
test
and
xor
testb
and
outsb
pop
and
pmulhw
jmp
lods
mov
std
mov
inc
mov
or
push
inc
dec
or
pop
repnz
cmc
jmp
sub
int3
fnstsw
pop
cmpsl
cmc
inc
adc
push
sbb
adc
dec
out
push
sbbl
cld
sbb
je
inc
fs
movsb
sahf
push
push
dec
add
fldcw
sub
daa
ljmp
sub
hlt
xchg
jle
sti
push
leave
sahf
stos
ror
or
mov
or
add
das
mov
je
xlat
cld
idiv
bound
hlt
stos
sbb
inc
sub
add
in
mov
and
mov
jle
sub
mov
adc
push
arpl
pushf
lret
aaa
jb
or
mov
scas
stos
cld
sub
cmp
xchg
movsb
jmp
scas
mov
mov
test
movsl
ds
push
mov
stc
xor
stos
push
mov
addr16
popf
ret
dec
dec
mov
fisttpll
xrstors
push
popf
dec
sbb
pop
push
lds
adc
je
or
mov
jns
adc
sub
dec
ret
mov
rcrl
fisubrs
movsl
lock
lods
shrb
sub
mov
insl
sbb
enter
outsl
int3
lret
mov
cmpsl
pop
jno
xor
add
sub
mov
xchg
fsubs
addl
push
stc
inc
mov
repz
mov
out
cmpb
sbb
pop
xor
jge
hlt
and
or
test
divl
sub
mov
xchg
shr
and
jae
pushfw
sub
or
imul
hlt
in
inc
test
les
call
gs
movl
jmp
pop
fyl2xp1
enter
es
lds
push
dec
push
jne
fs
mov
push
jb
jg
or
jl
shr
pusha
orl
adc
inc
outsl
inc
idivb
pop
pop
cld
clc
mov
pushf
fwait
inc
mov
pop
pop
cmc
xlat
pop
xchg
insl
xchg
decl
jnp
cmpb
sub
xchg
jle
mov
arpl
cli
jne
ja
popf
xor
push
clc
xchg
cmp
dec
lahf
and
rol
push
cmp
mov
cld
add
lcall
shrb
call
call
push
mov
or
fcoms
sub
mov
jp
pop
lea
adc
loop
dec
int
dec
aaa
and
or
adc
stos
aad
cmp
out
xchg
mov
jo
push
cmpsb
das
lods
repnz
adc
mov
out
pop
sub
adcb
lea
out
sbb
push
js
xor
movsb
fdivrp
dec
pop
fwait
or
pushf
push
or
inc
add
out
lahf
clc
mov
mov
lods
repz
in
ljmp
ds
sbb
jle
or
dec
out
push
xor
mov
leave
mov
or
jnp
or
stc
cmp
shlb
ficompl
popf
jmp
and
adc
xchg
lock
ss
pop
leave
xchg
arpl
mov
nop
jl
js
in
xor
dec
jecxz
sbb
pop
push
decl
xor
pop
in
ds
aam
fsubl
iret
jae
mov
push
fwait
adc
or
push
ds
ds
dec
cmp
repz
popa
into
out
pop
mov
pop
sub
mov
sub
aam
pop
add
sub
iret
outsb
sub
jnp
xlat
xchg
or
dec
fnstenv
xchg
dec
mov
iret
pop
xor
push
je
rorl
mov
mov
cwtl
mov
lret
mov
aaa
push
sbb
mov
pop
adc
pop
dec
lods
fmul
iret
inc
insb
movsl
stos
fisubrs
sub
lea
mov
jb
sub
aas
cltd
mov
in
mov
sbb
mov
and
sub
xor
arpl
cmpsb
out
push
cltd
push
and
mov
outsl
pusha
and
icebp
add
or
arpl
push
push
ja
inc
mov
adc
adc
js
jno
and
push
into
fld
push
test
push
jns
or
sub
cmc
push
scas
sti
addr16
or
outsb
in
ret
mov
out
jp
or
aam
lret
add
mov
insb
or
mov
adc
aas
pusha
ds
xchg
test
ret
fdivrp
jns
jbe
xlat
mov
push
mov
jae
jp
push
push
cmp
in
bound
adc
pop
pop
aam
mov
mov
xchg
out
sub
push
std
pop
in
jbe
xlat
outsl
das
addr16
lock
pop
fwait
or
test
insb
xchg
dec
and
call
push
fildl
rcl
fs
clc
xchg
int3
mov
mov
in
pop
popf
inc
lea
movd
add
pop
adc
in
add
jb
jle
dec
cmp
movsb
gs
outsl
gs
dec
lods
arpl
ret
les
sbb
pushf
shlb
dec
push
sub
fsubs
mov
adc
cmp
inc
push
std
clc
sbb
sub
sub
or
mov
sahf
mov
daa
aaa
les
push
ret
lret
push
jl
pop
xchg
push
rcll
and
lret
ss
or
stos
sahf
imul
insl
xchg
dec
pop
shl
mov
xorl
aad
pop
xor
push
pop
aad
lock
jnp
adc
jecxz
aam
dec
iret
arpl
in
jmp
mov
popa
or
repnz
data16
lods
xchg
inc
cmp
ret
insl
outsb
push
stos
shlb
sub
scas
clc
aad
lds
out
mov
addb
or
mov
out
mov
sub
jb
js,pn
mov
mov
cmp
adc
addr16
add
push
xchg
push
out
fsub
les
or
aad
stos
test
js
jecxz
stos
ret
push
add
sarb
outsb
ja
ret
out
lods
sbb
sbb
sub
and
push
cmp
bound
dec
aad
mov
gs
jnp
xchg
fstpl
es
xor
mov
sub
push
sub
fwait
sbb
jne
cmpsl
and
stc
cli
mov
rcrb
adc
and
mov
rcrl
scas
and
add
mov
mov
xchg
fwait
imul
push
repnz
inc
xor
fldenv
out
jne
cltd
mov
fnstcw
mov
xchg
jg,pt
std
push
push
add
stc
or
xchg
stos
lahf
in
aas
adc
sub
es
mov
push
mov
ret
inc
inc
add
pop
inc
mov
sbb
outsl
outsb
add
je
sbb
pop
loope
dec
mov
addr16
adc
xchg
pop
add
pop
mov
repnz
xor
clc
mov
jne
aaa
sbb
out
aaa
das
lahf
and
ret
pop
xchg
or
or
and
cmp
add
mov
mov
outsl
push
test
sub
push
mov
stc
lret
in
mov
sbb
std
outsl
sub
push
inc
add
push
outsl
and
adc
mov
pop
repnz
stos
jge
inc
push
in
jae
or
jns
sbb
cmpsb
fstpt
test
mov
gs
mov
push
jo
push
mov
stos
sti
or
std
std
sub
sbb
cmc
fnstsw
mov
js
cmpl
in
mov
sarb
test
mov
xlat
in
jo
jmp
icebp
add
fstps
push
std
loope
loop
inc
stos
xchg
xchg
sbb
xchg
push
cmpsl
test
sbb
in
test
adc
and
jl
jne
pop
popf
fwait
bnd
or
frstor
rolb
push
shr
dec
dec
les
add
adc
pop
xchg
sahf
jbe
out
int3
imul
lods
or
andl
lea
jae
shll
fidivl
cmp
cmp
or
dec
inc
adc
in
jb
sbb
call
pop
sub
xchg
xchg
fmuls
incl
sub
and
sbb
mov
inc
clc
cld
and
cmp
les
add
ret
push
push
fsubrs
pause
xor
into
gs
dec
mov
dec
out
push
jg
push
dec
lock
pop
jns
call
aad
test
sahf
or
gs
psubq
shlb
and
push
bound
add
mov
mov
mov
lods
insl
iret
call
ja
mov
xchg
out
adcl
iret
orb
cld
mov
jns
mov
mov
adc
sub
lcall
scas
push
sub
enter
cmp
into
add
cmp
mov
sti
or
fcmovbe
mov
push
fadds
inc
jge
ljmp
sub
sbb
mov
xchg
nop
mov
jge
jae
ret
ret
shlb
xchg
mov
sub
sbb
push
dec
cmp
push
out
movsl
ja
addl
adc
sub
pop
push
fidivrs
outsb
lods
outsb
xor
test
mov
mov
jns
sbb
mov
das
dec
hlt
and
or
lea
ret
ds
mov
cmp
test
aad
push
cmp
outsl
fsubl
sbb
sub
mov
pop
out
int3
aaa
add
leave
mov
dec
cmc
push
daa
and
data16
loope
cmpsl
sub
ss
shll
mov
inc
inc
and
push
adc
iret
sub
jle
or
outsb
inc
jge
icebp
outsl
xchg
stc
inc
cmp
lods
pop
sub
dec
stos
adc
adc
xor
sarb
stos
mov
clc
je
mov
mov
aam
popf
xor
add
setp
fs
lds
in
jb
push
xor
loope
and
jle
jno
movsb
mov
cmp
push
xchg
add
sub
mov
jo
and
jmp
xchg
push
sub
test
data16
jmp
loope
adc
clc
inc
mov
mov
pop
push
pop
insl
jo
push
inc
fcomps
push
cmp
sbb
in
mov
imul
or
scas
add
mov
scas
aad
push
stos
outsb
ret
xchg
adc
sbb
jno
xchg
fdivrl
insb
pushf
inc
mov
sahf
daa
mov
pop
add
add
mov
pop
movsl
sahf
shl
int3
ret
cmp
das
sub
push
mov
add
aas
fnstenv
or
arpl
add
popa
jne
popf
call
popl
push
push
js
cmpb
enter
addb
jl
push
sub
scas
iret
mov
repnz
xor
jo
pop
icebp
lret
mov
mov
jge
or
jbe
cmp
imul
push
outsb
pop
add
fucomi
mov
neg
sbbb
addb
mov
dec
xor
cs
xor
mov
test
sti
pop
mov
data16
fmuls
cmp
daa
in
lods
int
outsl
insb
xorl
nop
push
outsb
insb
andl
jmp
jb
cmc
stos
cmpsb
jle
orl
aam
xchg
js
jecxz
es
outsb
mov
nop
inc
sbb
ss
mov
imul
push
scas
test
insb
mull
aaa
hlt
pop
cmpxchg
gs
jne
mov
imul
and
xor
out
push
insb
jns
mov
inc
icebp
xchg
xchg
mov
cli
icebp
out
jmp
fidivrl
inc
dec
outsb
xchg
popf
and
lea
lock
mov
cmp
pop
xor
rcrl
push
lret
loopne
mov
and
std
cwtl
or
cli
addr16
xchg
int
sar
adc
fistps
jne
lcall
rorb
loopne
icebp
jge
pop
je
or
aad
pusha
or
and
mov
xchg
jg
aam
imul
data16
push
push
jnp
test
cli
bound
cmp
or
or
vshufps
push
shr
mov
push
or
add
cltd
aas
push
shr
pop
fdivrl
ja
out
cmp
mov
iret
add
mov
ds
loope
mov
bound
push
out
inc
and
or
xor
jo
ret
dec
add
cmp
out
iret
jge
pop
push
sbb
cmpsl
test
in
sub
fnstenv
aad
notl
or
jmp
mov
sahf
fdivr
mov
inc
add
and
ljmp
fwait
icebp
sahf
loop
sti
push
mov
repz
push
imul
xchg
aas
repnz
das
iret
pop
push
mov
jb
popf
sub
js
imul
and
push
jbe
fidivl
push
sbb
test
insl
int
adc
fwait
out
and
mov
fsubrl
orl
pop
sahf
adc
jae
mov
mov
mov
in
jge
dec
jge
and
daa
leave
fisubrs
nop
jo
pop
or
fdivl
dec
or
xor
gs
insb
sbb
push
inc
pop
dec
les
and
test
dec
cwtl
in
xor
imul
sti
sub
cmpb
enter
cld
hlt
fsubrs
unpcklps
jnp
pushf
pop
not
lcall
decb
stc
sti
shl
dec
and
sub
fisttps
or
ss
dec
scas
cltd
repnz
roll
test
adc
out
adc
pop
cmp
adc
mov
xchg
mov
addr16
sub
aas
mov
nop
mov
mov
mov
nop
lods
leave
mov
jno
mov
test
fcmovu
inc
ljmp
fpatan
loope
or
pop
sti
stos
adc
xlat
popa
flds
mov
scas
adc
test
les
adc
dec
inc
push
xor
insl
stos
cwtl
dec
xchg
ljmp
xchg
xchg
mov
call
aad
loopne
imul
sahf
xor
mov
add
xor
or
shr
jl
aaa
mov
and
scas
mov
inc
leave
dec
pusha
lock
xor
lret
loope
stos
push
pop
sti
mov
sub
test
cs
repz
and
mov
icebp
mov
clc
or
dec
push
mov
sbb
ret
push
fcmovu
leave
sbb
arpl
sbb
pop
cmp
ss
mov
ret
add
icebp
fwait
inc
mov
mov
daa
adc
out
jmp
rcrb
insb
xor
fldenv
stc
outsb
sbb
pusha
dec
fstpt
mov
adc
add
jl
mov
jecxz
adc
lods
mov
xor
sbb
pop
stos
ja
pop
test
adc
sarl
cmp
lods
add
sarb
pusha
std
ret
call
mov
pop
mov
repz
imul
jnp
imul
int3
jge
inc
addl
out
in
in
popf
push
mov
int3
fcompl
dec
or
ljmp
aas
lock
sbb
fistl
in
pop
or
je
xchg
push
adc
outsl
cld
mov
mov
push
sbbb
mov
mov
pushf
andb
mov
lcall
scas
push
gs
fwait
mov
inc
and
sbb
push
aad
pop
outsl
iretw
xor
fcoml
mov
inc
push
into
popf
lea
pop
out
xor
sub
out
xchg
insb
jp
outsl
mov
pop
cmpl
push
out
repnz
int
mov
inc
lcall
lods
sti
pop
je
lret
jo
xchg
pop
and
jmp
xor
and
loop
inc
mov
push
fs
or
inc
ror
test
fbld
jmp
push
mov
in
jnp
rcll
cmp
scas
pop
test
movnti
mov
out
popf
push
clc
hlt
sbb
mov
fwait
popf
xlat
lods
rcll
fstpl
shll
mov
add
mov
push
aad
xchg
popa
in
jge
jl
out
mov
loope
aas
es
stos
imul
lock
jns
adc
jp
std
lods
aaa
xor
clc
stos
dec
mov
pop
cltd
mov
test
or
out
lcall
xchg
push
fcoml
jne
fcmovbe
outsl
add
mov
inc
aaa
xchg
jmp
push
mov
jne
and
push
mov
fdivl
in
sub
push
dec
mov
ret
sbb
popf
lahf
push
leave
lcall
dec
pop
jno
lock
push
scas
sub
movsb
add
pop
cli
sub
mov
sub
je
or
test
into
mov
pop
pop
adc
pop
or
add
or
ret
testb
loop
clc
test
aad
popa
inc
and
loop
and
and
cmp
shrb
aam
out
out
dec
push
insb
pop
pushf
hlt
ljmp
add
insl
es
add
stos
mov
dec
xchg
adc
scas
call
lock
bound
adc
fldenv
sarb
add
inc
push
pop
dec
xor
je
sub
push
adc
loope
mulb
arpl
lahf
xor
inc
push
and
sarl
pop
div
mov
cmp
or
lea
out
loope
or
add
cltd
and
sub
aad
aad
sub
ljmp
test
sbb
in
or
addr16
add
sub
mov
jno
pop
add
dec
sbb
adc
in
jbe
std
xor
fstpl
imul
lret
add
xchg
roll
outsb
ficomps
mov
sub
mov
pusha
mov
sbb
aad
xchg
in
inc
gs
inc
push
lret
addr16
adc
int
stos
por
mov
jne
outsl
xchg
sub
pop
push
fnstenv
xchg
scas
pop
push
mov
fisubl
jge
movsb
xchg
fistl
inc
jnp
dec
in
pop
aam
xchg
inc
sub
addr16
dec
inc
js
repz
out
imul
mov
outsl
jl
adc
pop
mov
gs
adc
jp
push
fwait
push
loope
pop
andb
sub
xor
int
adc
dec
cmp
mov
cmp
lret
cmp
mov
push
adc
lods
aad
stc
in
mov
mov
pop
in
add
mov
movsl
in
cmc
hlt
inc
mov
adcl
sbb
insb
and
adc
enter
subl
std
sahf
icebp
jp
xlat
dec
mov
adc
aam
add
xorb
pop
sub
outsl
xor
movsb
shlb
jge
loope
aaa
call
xchg
test
inc
jb
in
pop
lds
sbb
dec
orl
fnstenv
mov
ret
pushf
repz
mov
or
pop
jb
mov
dec
cmp
pop
fnstcw
sub
sub
pop
xchg
jns
pusha
or
dec
and
cmp
push
lods
jnp
fcomp
push
in
ds
xor
xor
loope
cmpb
ljmp
fs
mov
xor
stos
inc
jbe
sbb
ss
add
and
xor
inc
les
stos
sub
xor
sbb
jb
jle
mov
mov
addr16
cmpsb
sub
stos
xor
sbb
inc
sub
ja
sti
scas
test
imul
outsb
sbbb
adc
outsb
sbb
lea
sub
daa
pop
ret
mov
inc
dec
adc
or
sub
test
std
testb
mov
lock
sahf
popa
xlat
arpl
lods
mov
cmp
sbb
imul
jmp
push
push
loope
jo
dec
stos
push
push
scas
push
adc
sub
ror
jbe
add
and
push
pop
icebp
and
cli
in
shl
mov
ss
inc
dec
inc
lods
and
std
push
movsb
cmpsb
dec
call
and
in
push
xchg
inc
pop
add
jecxz,pn
cmp
mov
ret
lret
sar
sub
xchg
or
fldl
dec
mov
cli
or
iret
cmp
xchg
mov
cwtl
sti
call
int
fiaddl
push
cmp
mov
push
leave
rolb
out
sub
bound
xchg
jge
xlat
mov
aam
popf
cmp
jbe
lods
mov
subb
jle
call
pop
sub
popf
mov
lds
int
xchg
jno
add
je
push
xor
lods
sub
fcoms
test
adc
out
std
jmp
out
push
arpl
iret
xor
mov
push
test
xchg
test
aad
inc
cld
push
data16
cmc
mov
xor
mov
js
rcr
push
movsb
mov
scas
mov
mov
push
repz
stc
cmpsb
inc
jo
push
sbb
sbb
jae
cld
lea
sarl
mov
pop
or
loopne
cltd
cmp
addl
dec
mov
inc
pop
mov
inc
xchg
cmpsl
test
cmp
out
jecxz
xor
insb
into
nop
xchg
stc
inc
push
lret
jne
mov
out
jge
repnz
mov
and
in
lds
pop
mov
bound
aas
sub
in
ss
and
ficomps
gs
out
cmpl
inc
fisttpl
cltd
and
movsl
outsl
pop
adc
loopne
mov
mov
mov
pop
add
bnd
lahf
pop
sub
adc
jo
pop
clc
inc
or
stos
cmp
jge
push
cs
sub
cltd
xchg
cmpsb
sti
mov
push
jmp
cltd
cmp
pop
int
test
pop
ret
jp
and
pop
inc
mov
or
lock
mov
and
sub
and
inc
outsb
aad
pop
lcall
in
repnz
jb
jae
push
mov
cmpsl
sub
out
cli
push
adc
adc
lret
push
and
jmp
jne
in
and
clts
sahf
fists
call
bound
loope
ss
jae
mov
pop
cmp
xchg
push
push
pavgb
mov
sbb
jno
inc
fadds
mov
mov
sbb
pop
and
push
mov
or
movsb
xchg
lds
int3
sbb
in
stc
js
xchg
in
movsb
imul
ljmp
adcb
jne
out
popa
xchg
mov
fidivrs
daa
cs
ss
or
jo
cmp
jb
fwait
mov
push
idivb
mov
sbb
sti
ds
stc
sbb
add
jb
ljmp
test
inc
xor
subl
fneni(8087
add
aad
movntps
cld
lahf
jne
mov
or
mov
xchg
xor
iret
test
test
mov
fildll
shl
jmp
outsl
cmp
fcmovu
or
cld
dec
cs
subl
jmp
mov
loop
mov
out
sti
rorb
jb
cli
int
mov
test
xchg
ret
fisttps
daa
lret
xchg
sbbl
ret
mov
and
xor
jno
ficoml
add
inc
adc
pop
fimuls
push
mov
inc
inc
cmp
push
inc
adc
push
mov
scas
mov
jo
lret
lret
jbe
mov
aam
jge
and
add
int3
out
xchg
insb
sub
popf
aas
push
sbb
push
in
fwait
repz
lds
outsl
stos
or
loope
jns
pop
mov
imul
scas
outsb
and
pop
sbbl
and
bound
shl
mov
dec
sub
mov
stos
out
sbb
and
in
lahf
mov
scas
jns
xor
test
xor
xchg
rcll
jae
xor
xchg
enter
mov
pop
lahf
mov
inc
jb
cli
mov
mov
inc
addr16
loope
test
xor
jmp
enter
mov
lret
cltd
mov
fs
sub
lret
cwtl
adc
sbb
repnz
mov
inc
stc
lcall
aad
pop
cmpsl
push
test
inc
push
mov
xchg
rcrb
xor
push
sahf
cmp
xor
xchg
leave
inc
xchg
cmp
aaa
int3
fwait
inc
sahf
loope
icebp
outsb
subb
jp
xchg
push
adcb
xchg
xchg
hlt
repnz
inc
test
lcall
sub
jns
test
xchg
insb
and
aad
ret
test
or
lahf
mov
cmpb
clc
and
aaa
adc
mov
sub
std
ja
addr16
lahf
iret
inc
or
in
dec
jge
inc
fs
es
inc
shr
and
inc
out
lock
gs
rdtsc
sub
ss
push
cltd
inc
jecxz
in
and
dec
andb
test
inc
fwait
push
pop
fimull
add
aad
leave
aas
or
and
cmpb
xor
cmp
into
mov
movsb
push
jmp
adc
pop
ja
lods
and
test
pop
fnstcw
int
and
aad
adc
outsb
fidivrl
decl
and
push
xor
mov
cli
mov
sbb
push
js
xchg
add
mov
gs
jl
flds
push
xchg
aad
pop
aaa
ljmp
ljmp
or
fldlg2
add
mov
push
and
rcll
fadd
imul
jl
xlat
lds
inc
add
sbb
fldl
std
rcrb
jg
cmp
xor
cmpsl
xchg
divl
mov
cmpsb
idivl
nop
push
sub
mov
mov
cmc
in
fcompl
dec
mov
push
jp
mulb
add
inc
out
mov
daa
add
push
sub
inc
test
test
sbb
inc
filds
mov
ficoms
ljmp
mov
pop
imul
inc
insb
push
rorl
jbe
mov
xchg
sbbl
and
push
cmc
test
scas
repnz
mov
cld
cmpsb
push
cmpsb
arpl
pop
jae
mov
mov
movsb
mov
int
dec
ja
out
movsl
sub
stos
sub
leave
mov
jecxz
jae
loop
push
in
nop
sbb
inc
mov
mov
mov
jmp
push
aam
sbb
push
push
pop
insl
mov
jecxz
std
cmc
inc
mov
lods
std
in
mov
or
mov
movsl
xchg
out
push
or
mov
or
push
jge
inc
mov
xchg
xor
dec
test
sbb
sahf
test
fcmovnb
jno
mov
in
fiadds
push
add
mov
movsb
jmp
dec
and
mov
daa
xorb
es
pusha
jne
sub
or
xchg
cwtl
and
mov
lea
jmp
pop
popf
push
push
fmuls
repz
pop
cmpsl
fisubrs
cmp
mov
sbb
xchg
xchg
out
in
iret
push
xchg
test
adc
xor
arpl
jp
add
add
xchg
xor
es
dec
ret
xchg
ret
xchg
jg
sbb
mov
adc
or
mov
ljmp
inc
push
push
fs
push
jne
push
sub
jge
ret
mov
mov
adc
xlat
pop
pop
test
inc
dec
mov
cltd
xchg
inc
popf
push
les
jle
or
or
cmp
sub
cli
jbe
ss
clc
xlat
pushf
je
and
mov
lret
aaa
sub
add
xchg
jg
shlb
js
mov
inc
pop
jbe
je
push
fisubrl
mov
jb
inc
push
jnp
jge
jge
test
das
repz
mov
lcall
scas
add
xchg
js
popa
xor
fadds
pop
out
mov
inc
call
or
fcoml
cmpsb
xlat
mov
pop
imul
les
stos
test
mov
out
or
push
in
mov
inc
jns
scas
add
sub
mov
push
cmp
daa
outsl
nop
and
addr16
pop
add
imul
scas
jmp
ret
filds
repz
xorl
push
mov
mov
push
xlat
pop
push
les
rorb
in
dec
pusha
lret
test
movsb
sub
sbb
add
stos
lods
fnstcw
loopne
les
cwtl
inc
out
fcmovnbe
and
pop
inc
mov
das
and
add
pop
push
cmpsb
scas
outsl
pop
scas
inc
rorl
shrl
pop
mov
push
cmp
clc
int3
cmpsb
and
fucomp
jmp
sub
xchg
push
jo
cld
push
sub
push
aam
mov
rorb
das
sbb
mov
pop
jg
sbb
nop
sbb
and
jb
lret
pushf
push
je
cmpsb
lods
jmp
cltd
xor
fmuls
mov
xchg
adc
jo
xchg
je
ret
pop
cmp
xor
push
mov
clc
repz
dec
lahf
loop
xor
sti
repnz
call
xchg
fdivrl
mov
pop
lahf
and
dec
xchg
enter
add
popa
pushw
inc
add
or
div
sub
xchg
cltd
and
and
fists
loope
xchg
xchg
jle
push
into
iret
or
dec
pusha
push
leave
rorl
cmp
cld
fucomp
aad
mov
repnz
add
leave
cmp
push
push
outsl
orb
jmp
pusha
or
sub
rolb
shrb
sub
cmpsl
sub
aaa
pop
xor
or
add
ss
imul
pop
mov
movsl
inc
stos
faddp
dec
mov
leave
in
leave
add
scas
jne
es
andb
idivl
arpl
out
adc
cwtl
popf
jbe
dec
jb
and
push
jle
or
scas
xchg
dec
pop
sub
cs
mov
adc
mov
fnstcw
outsb
ret
lcall
subl
out
adc
sub
mov
sub
dec
ret
ds
xchg
ljmp
pop
push
xlat
lret
mov
scas
out
leave
mov
mov
sbb
mov
pop
subb
inc
sbb
xor
pop
cwtl
in
lds
mov
and
dec
orl
adc
sbb
sbb
xchg
addb
icebp
out
mov
gs
cmpb
test
cwtl
cmpl
pop
repz
xchg
clc
jl
scas
pop
repnz
in
jp
mov
cmp
not
jae
xor
repz
cmc
jecxz
scas
cmpb
scas
cltd
and
mov
pop
inc
push
aad
or
cs
iret
xlat
scas
add
xor
movsb
add
add
xor
leave
hlt
outsb
lret
clc
insl
addr16
pop
jo
xlat
inc
gs
ror
das
leave
shrl
aam
cmp
mov
in
jge
movsl
lret
or
mov
or
jo
sbb
push
sub
xchg
shlb
fisttpll
dec
add
mov
outsl
cli
js
sarl
pop
call
mov
cmpsb
push
pop
cmpsb
mov
or
and
pushf
fwait
roll
jno
out
repnz
mov
imul
cs
jle
aad
cmp
imul
xchg
cmp
in
hlt
lret
sbb
aad
mov
fs
std
sub
fistl
clc
iret
test
cmp
mov
scas
dec
in
jbe
movsb
arpl
jns
dec
andb
lods
arpl
es
lods
push
sub
cmpsb
sbb
or
mov
pop
dec
or
aad
testb
dec
xchg
loope
je
movsl
or
xor
sbb
das
rcr
mov
lcall
pop
ret
mov
xchg
mov
data16
fs
xor
jl
nop
aam
rolb
test
test
or
dec
fists
test
insb
sub
in
stos
xor
mov
inc
fs
adc
jle
out
aas
fcom
sbb
idivb
jge
insb
or
adc
dec
or
stc
cmp
dec
jp
push
jg
mov
jl
iret
adc
pop
mov
in
jecxz
mov
pop
and
pop
insb
test
cltd
jl
aam
cmp
inc
mov
xchg
pop
or
and
cmpsl
push
cmp
loop
push
sti
imulb
out
inc
push
nop
xchg
nop
imul
jmp
rorb
mov
into
cwtl
mov
dec
mov
cmp
mov
inc
ror
sbb
test
adc
jb
int
mov
orl
add
les
data16
int
push
int
dec
pushf
cmc
gs
and
cmp
aad
push
outsb
cli
movsl
sti
pop
int
dec
push
scas
mov
dec
ja
aam
adc
hlt
insl
cmp
mov
cmp
aad
cld
mov
mov
daa
arpl
ljmp
loope
adc
daa
shll
mov
loope
jo
inc
pop
pop
push
dec
mov
test
stos
fnstsw
sbb
std
push
cmc
adc
mov
push
jae
lcall
int
push
sub
inc
or
pop
lods
lcall
arpl
mov
fs
push
lea
stc
stc
add
and
pop
stc
nop
neg
test
leave
jg
insl
in
add
pop
add
and
cmpsl
jnp
mov
outsb
aam
pop
add
mov
xchg
mov
iret
or
cs
xchg
and
aam
hlt
out
push
xchg
push
jbe
mov
imul
adc
sbb
sbb
mov
sub
push
sub
out
popf
arpl
call
out
push
lret
adcb
mov
clc
mov
mov
cmp
les
xor
dec
sub
ds
iret
out
stos
xchg
arpl
sbb
arpl
mov
das
adc
jnp
and
xchg
outsl
mov
fs
add
sub
leave
rep
jnp
dec
push
cmp
es
pop
insb
xchg
sub
cmp
or
xchg
lcall
push
mov
adc
pop
enter
mov
mov
repnz
fistpl
pop
push
pop
inc
popa
insl
jl
rorb
xor
pushf
shl
pop
std
fsubr
xchg
dec
lret
lods
xor
dec
in
jp
mov
in
loop
outsl
add
xor
mov
xor
pop
mov
cltd
loop
stos
in
adc
sahf
mov
daa
int3
adc
fstpl
fwait
mov
pusha
inc
fisttpl
fcmovnu
jge
push
pop
movsl
push
nop
mov
lods
or
sbb
cmp
paddusw
jns
inc
insl
int3
inc
int
in
cmpsb
or
dec
dec
sbb
cmp
or
lret
sub
mov
fwait
xchg
push
test
repnz
jnp
xor
lahf
push
mov
mov
fisubrl
stos
jo
pusha
cli
loope
pop
icebp
mov
loope
call
scas
notl
lods
mov
lret
push
sub
repz
ja
pop
xchg
arpl
jg
loop
in
int
in
movsb
imul
adc
icebp
pop
or
pusha
and
inc
cmp
pop
fsubl
or
xor
jae
in
in
adc
pop
ds
xchg
inc
push
mov
jl
lods
and
mov
sahf
mov
mull
es
je
inc
and
pop
scas
mov
jg
outsl
mov
mov
cmpsb
xor
fildll
jo
jmp
out
mov
pop
int3
fisubl
push
addl
sub
fistl
xchg
cld
out
jbe
mov
mov
mov
mov
stos
pusha
inc
jmp
popf
ret
pop
int3
andb
sub
shll
ret
xchg
jecxz
mov
mov
cwtl
or
and
adc
loopne
inc
push
lcall
xor
xchg
jl
loopne
cs
int
je
push
or
pop
push
ds
test
adc
cmc
pusha
jl
mov
and
mov
outsl
out
lahf
data16
pop
inc
cmp
out
pop
in
xchg
loope
add
xlat
inc
mov
xlat
fisubl
jmp
sbb
mov
or
push
and
dec
xchg
mov
mov
cs
ss
push
div
pop
xorb
push
lds
jo
imul
adc
int
popf
insl
or
aam
push
fstps
xor
dec
rolb
inc
sub
enter
push
mov
jg
push
xchg
mov
fistl
sub
xor
mov
inc
pop
ds
test
xchg
shll
jb
mov
in
lea
adc
in
mov
xchg
out
lea
clc
jl
jno
dec
xchg
ljmp
test
jle
cmp
xchg
jnp
sub
dec
and
inc
mov
outsb
dec
mov
sahf
pop
inc
pop
stc
jmp
fincstp
dec
ja
dec
and
xchg
sub
inc
push
dec
adc
add
add
rcrl
jne
and
xchg
inc
adc
out
xchg
jmp
and
mov
fs
adc
cmp
pop
mov
aad
fadds
out
xor
xchg
dec
pop
and
sub
fdivrl
rcrb
arpl
pop
adc
outsl
iret
push
add
pop
jne
stos
iret
fbld
push
leave
jg
jg
xchg
sbb
jmp
lcall
stos
fcomp
mov
pop
gs
dec
stc
call
movl
xor
rorb
in
jl
outsl
mov
pop
cmpsl
iret
into
xchg
jbe
mov
in
inc
mov
adc
add
sub
cmp
and
js
push
cmp
mov
add
adc
jbe
add
insb
jae
adc
xchg
out
sti
inc
idivl
cmpsl
lock
clc
xchg
popl
mov
xchg
lcall
scas
pop
dec
repnz
pop
adc
push
mul
mov
ret
sub
into
jmp
in
adc
jl
in
push
pushf
imul
subb
je
pop
pop
cmp
sub
push
ss
inc
dec
adc
push
lods
fldt
adc
lds
lcall
in
mov
sti
mov
int
lock
inc
or
pusha
push
add
cld
adc
jns
jg
loope
enter
jg
or
mov
adc
jg
int
scas
add
push
imul
sub
xor
xor
aam
test
inc
jno
out
out
mov
inc
lds
xchg
inc
das
jg
mov
outsb
or
loop
sahf
imul
outsl
push
inc
shlb
das
push
addb
add
inc
inc
jecxz
enter
xchg
cmpb
push
ret
xor
mov
cmp
je
imul
or
push
cltd
cmpsb
sub
insb
incl
insl
in
sub
decl
out
fwait
ret
out
sub
mov
and
or
ljmp
mov
push
jle
sbb
pop
xorb
mov
sahf
add
jnp
cmpsb
mov
sub
iret
ljmp
lret
scas
hlt
les
add
pop
cmpl
inc
adcb
mov
pop
mov
clc
imul
in
fnstcw
xchg
xor
loope
mov
sub
jo
inc
sub
ja
test
push
das
or
push
push
stos
mov
mov
adc
adcl
add
stos
inc
cmp
fs
aas
xchg
adc
fcmovb
mul
sbb
sub
adc
call
and
flds
sti
leave
xor
pop
jmp
add
roll
mov
lret
div
or
xor
jle
or
ror
dec
inc
cmp
aam
jno
jl
sahf
jo
pop
push
mov
pop
out
mov
pop
in
mov
lods
fsubrl
cmp
pop
shlb
mov
cmp
mov
andb
gs
mov
mov
and
add
jnp
mov
mov
mov
ljmp
loop
mov
outsb
bound
shlb
xchg
lahf
in
pop
xchg
call
into
imulb
stos
outsb
xchg
out
lret
push
push
outsl
lock
popf
cltd
insb
mov
outsl
mov
test
dec
ds
in
fmull
adc
jns
sbb
andl
movsl
cmp
add
jmp
xor
cmc
push
mov
mov
call
int
shll
mov
cmp
cmp
adc
xor
sbb
or
mov
add
jg
cmp
js
and
mov
loope
imul
stos
xor
sub
andb
imul
leave
int3
cwtl
pop
stos
jmp
pop
pop
jmp
or
xchg
and
adc
mov
sub
lahf
pushf
cmp
stos
out
fldcw
lods
imul
inc
rolb
adc
pusha
rcrl
adc
movsb
xlat
lret
mov
pop
push
sbb
sahf
or
int3
leave
jno
xor
sti
aas
dec
dec
repnz
mov
lods
jp
icebp
mov
jbe
test
adc
mov
stos
xor
sbb
cmp
xchg
sub
stos
xlat
mov
cmp
jmp
pop
or
sub
movsb
sbb
jb
mov
fwait
cmc
inc
mov
push
out
fdivs
rcll
adc
push
mov
cmp
push
test
stc
int3
push
mov
jnp
stos
insl
pop
mov
iret
jno
push
ret
dec
add
xchg
and
seta
cwtl
xchg
out
jbe
push
pop
lock
aaa
mov
mov
dec
jle
xor
mov
mov
out
leave
xor
mov
xchg
jns
mov
or
jo
xor
gs
popa
push
flds
adc
sbb
mov
or
pop
test
jl
insl
decb
mov
fst
and
test
notl
push
fmuls
mov
lret
call
repz
lret
and
aad
lods
mov
mov
jp
ds
or
inc
add
rorb
mov
jno
push
mov
cltd
in
lock
mov
hlt
imul
fists
jge
inc
fcmovbe
jecxz
test
add
roll
cmp
inc
aaa
xlat
fcompl
mov
mov
mov
jae
and
rorl
xchg
dec
testl
xor
mov
pop
and
or
cmp
pop
push
xchg
xchg
dec
das
in
js
cwtl
jo
fcompl
jge
fwait
sbb
aaa
stc
imul
jb
ret
cmp
sbb
addl
mull
data16
test
cmc
bound
and
and
adc
sub
jp
frndint
insl
ds
sub
jge
dec
sarl
lea
ficoml
add
xchg
mov
out
push
ret
lcall
call
push
fcoml
rclb
mov
addr16
lock
lods
pop
orl
imul
push
or
shll
insl
sub
cvtps2pd
cmp
push
push
adc
xchg
or
and
jo
call
outsl
jmp
mov
inc
enter
dec
roll
repz
in
mov
adc
lods
repnz
sub
jns
fwait
mov
dec
out
mov
popl
adc
pushf
add
sti
push
mov
push
add
mov
fs
jmp
cmp
jg
cmp
xorl
in
pop
lret
test
push
dec
push
out
mov
cmp
inc
std
and
inc
inc
gs
sub
dec
fs
push
push
aam
mov
out
enter
test
push
call
aas
test
mov
aam
sbb
push
fxch
cmpb
cltd
pop
jg
repnz
or
xorb
lea
xor
test
push
xor
fdivs
out
lods
addr16
jg
cmc
cld
movb
out
sub
outsl
arpl
and
push
add
sub
movsl
jp
adc
dec
sub
ret
xchg
xchg
inc
jo
insb
mov
loopne
sub
fidivl
pop
dec
nop
loopne
clc
mov
xorb
fidivl
test
add
pop
andl
fdivr
inc
inc
sahf
lock
jnp
inc
xchg
bound
repnz
xor
mov
ljmp
sub
movsb
imul
sti
into
adc
ret
adcb
xchg
sbb
fcmovne
push
std
cltd
fnstenv
ss
or
lods
mov
lret
mov
cltd
movsl
mov
adc
xor
xchg
movsl
jns
cmp
lahf
hlt
ficoms
pop
push
mov
add
jae
xor
xor
inc
add
mov
orb
pop
sub
sbb
add
cmp
scas
cli
mov
in
adcb
movsl
int
mov
cmp
mov
roll
mov
mov
scas
xor
lock
mov
mov
loopne
jb
pop
pushf
push
out
iret
sub
icebp
js
push
aaa
dec
shrb
adc
dec
mov
push
fmull
jmp
mov
add
and
add
adc
adc
mov
icebp
sbb
sub
and
push
or
and
xlat
push
mov
lods
jp
jae
and
and
jae
in
movsl
aaa
out
or
insb
jno
push
enter
dec
xor
sti
adc
pop
cmp
gs
mov
cmpsb
pop
mov
sti
insl
mov
and
pop
test
ljmp
push
cmp
rcrl
mov
push
sub
jne
mulb
adc
enter
out
cmp
adc
fs
pop
mov
aam
nop
mov
adc
js
mov
add
bound
adc
mov
xor
mov
mov
andl
dec
inc
adc
or
sub
xor
jns
xor
or
lods
push
xchg
mov
cmp
cs
jns
ret
cltd
add
pop
sbb
in
fidivrl
push
mov
test
les
lcall
fcoms
mov
mov
jle
dec
jns
cltd
mov
xor
ljmp
lcall
add
lahf
pop
stc
mov
das
jl
mov
icebp
xlat
inc
out
dec
aad
ja
lret
stos
imul
push
xlat
fsubs
xchg
imul
fcoml
stos
movsl
cli
ljmp
pop
mov
mov
stos
jns
out
call
xor
pop
pop
add
aad
or
add
jl
fcmovb
lahf
movsl
sbb
cmp
sti
shll
or
in
mov
js,pt
lds
push
inc
mov
pusha
push
push
stos
lods
imull
add
cmp
icebp
ljmp
shr
cwtl
stos
pop
stos
mov
xor
jne
mov
cli
js
scas
stos
mov
adc
cld
popa
mov
inc
fdivrl
mov
push
movsb
loop
mov
pop
bound
orl
sub
or
aas
mov
movsb
fs
mov
cmp
sbb
sub
aas
pusha
pop
outsb
int3
add
push
fdiv
push
xor
inc
xor
scas
scas
shr
add
addr16
adc
inc
push
arpl
adc
add
dec
mov
sbb
shrl
loope
jge
push
xchg
loope
arpl
sbb
mov
sub
push
mov
shr
xchg
fwait
iret
loop
insl
test
insb
cmpsb
xor
mov
stos
nop
std
inc
sub
jae
jmp
ret
mov
mov
cmp
xor
xchg
pop
movsb
jo
inc
jne
push
test
stos
add
aam
dec
jbe
pusha
sub
pop
icebp
mov
leave
push
mov
mov
aam
push
scas
push
fbstp
aam
enter
mov
jp
push
arpl
popa
enter
jge
mov
cs
lods
cmp
ss
push
or
aad
mov
jmp
push
lahf
and
push
inc
pop
stos
cli
ljmp
sahf
sarl
jnp
xor
iret
xchg
dec
cld
mov
mov
sub
das
mov
stos
mov
sub
fisubs
xor
cmp
push
cmp
xor
repnz
dec
popa
in
inc
rep
mov
add
pop
jns
in
mov
push
mov
out
cltd
nop
int3
mov
mov
mov
ja
ljmp
pushf
inc
out
pusha
call
mov
test
out
aam
inc
movsl
sbb
fwait
mov
jae
lods
adc
mov
mov
out
hlt
iret
xor
xchg
sahf
xor
or
adc
lods
fdivr
sbb
pop
mov
push
ds
out
jno
mov
push
fisubl
mov
push
jle
les
fisttpl
xchg
push
fsubs
fsubrl
outsl
ret
jmp
cmp
dec
cmp
add
test
mov
das
jg
xor
jl
and
sbb
out
in
clc
jmp
jle
bound
mov
sbb
add
pop
lret
push
sbb
lods
xchg
cli
dec
jmp
aas
fs
fstpt
insb
aaa
dec
sub
push
insl
add
sbb
push
adcl
sbb
add
je
push
fucom
shlb
inc
seto
test
adcb
xchg
xchg
mov
test
insb
fstpl
push
jno
jecxz
jecxz
jg
push
and
adc
cmp
lods
pop
gs
jbe
outsl
inc
in
sub
mov
inc
int3
inc
jo
cmpsb
rcrl
sub
push
icebp
mov
cmpsl
cmp
je
adc
or
pop
inc
ljmp
test
loope
adc
cmp
out
dec
inc
fsubr
sbb
adc
sti
mov
lret
push
push
xchg
push
aas
pushf
jmp
sar
insl
sbb
dec
lods
je
mov
dec
sti
jbe
call
cltd
jae
mov
bound
push
enter
arpl
aad
cld
xor
mov
ds
popa
sub
dec
add
int
xchg
or
lods
out
test
clc
cmp
mov
jecxz
in
push
and
mov
ja
jae
fadds
cltd
addb
cmp
dec
cmp
sub
xchg
pop
dec
cli
aam
mov
pop
js
es
xchg
cli
mov
dec
dec
add
ja
stos
and
lods
mov
cmp
dec
sub
xchg
hlt
mov
test
sbb
dec
sub
fwait
stos
mov
inc
movzwl
addb
cmp
mov
pop
jge
adc
roll
je
mov
cmpsl
jg
icebp
test
std
or
adc
es
add
dec
and
adc
add
mov
push
xor
ret
fildl
pop
push
dec
sub
insb
clc
test
lret
inc
dec
roll
mov
jge
inc
stos
pop
test
lock
pop
xor
adc
jmp
xchg
jb
xchg
shlb
jne
test
neg
lret
sbb
ret
bound
subb
sbb
clc
xor
lahf
xor
imul
or
add
mov
insl
in
aad
rolw
fwait
into
hlt
das
icebp
add
lcall
aaa
add
rcrb
loop
xchg
sub
arpl
hlt
addr16
cltd
xor
mov
addr16
popf
mov
cld
idivl
jge
cmp
xor
add
arpl
and
loope
inc
sub
xlat
xor
and
push
pop
cmp
out
loop
scas
sti
or
push
mov
and
xchg
test
rcrb
cmp
xor
mov
mov
cmpsb
repnz
push
push
pusha
stc
xchg
push
xor
sbb
movsb
inc
mov
push
inc
push
or
push
or
insl
lock
lret
test
mov
mov
pop
lods
push
int3
test
fcmove
push
test
adc
shr
sbb
lea
out
jecxz
call
xor
push
or
mov
shrb
cld
test
stos
fcomi
mov
and
xchg
and
iret
daa
gs
pusha
pushf
or
xor
xchg
mov
je
xchg
das
fiadds
jns
sbb
cli
mov
cmpsb
xor
jl
push
push
dec
mov
and
add
ret
inc
xchg
cmp
stos
dec
xchg
addr16
ja
scas
daa
pop
pop
into
adc
mov
stos
stc
dec
sbb
xchg
push
rorb
push
dec
cmp
test
fwait
daa
xor
stos
push
js
mov
inc
xor
adc
push
xchg
push
dec
addr16
call
mov
jge
xchg
outsl
xchg
mov
je
and
mov
fnstcw
cmp
mov
int
pop
dec
enter
adc
lahf
cmp
inc
arpl
inc
jecxz
in
test
mov
xchg
push
pop
cmp
mov
and
sti
mov
decb
enter
xchg
xor
sbb
xchg
bound
inc
mov
or
rolb
test
mov
int
add
push
fldt
pop
mov
xchg
nop
neg
repz
mov
cmpsb
shrl
ljmp
aam
xchg
dec
pop
sbb
pop
cmp
fwait
jmp
scas
lea
push
xor
adc
notb
and
test
pop
push
mov
jne
or
mov
outsl
jle
addr16
mov
pop
stos
push
aam
test
adc
push
pop
push
or
pop
add
jle
in
add
jmp
arpl
xchg
clc
imul
xchg
in
jle
shlb
cmp
pop
pusha
jo
jno
pop
je
mov
pop
movsb
mov
enter
dec
roll
mov
sub
xorl
stos
ret
repnz
add
mov
and
stos
in
mov
inc
lea
in
inc
in
pop
xchg
lcall
push
cmc
out
in
mov
mov
jnp
sub
lock
fstpl
stos
pop
popa
scas
ljmp
mov
je
add
daa
popf
stos
push
mov
std
and
push
sahf
push
popa
out
sbb
jns
mov
sbb
mov
jecxz
jbe
lds
cmc
pop
xchg
ss
pop
pushf
into
cmpsl
jg
mov
aas
xchg
pop
test
sub
adc
das
popa
push
sub
gs
mov
insl
cmp
and
int3
dec
icebp
jg
std
jo
and
std
insl
inc
lods
mov
nop
into
sbb
cmp
subl
outsb
add
pusha
adc
outsl
add
frstor
pusha
or
sub
lods
pop
pop
aam
mov
test
loop
cmp
leave
mov
inc
loop
sub
and
stos
mov
inc
ljmp
int3
push
aas
pop
cmc
jp
mov
pop
enter
popf
arpl
shlb
mov
bound
sbb
je
xorb
shl
mov
lds
mov
rcll
jns
shll
cmp
xchg
ja
lahf
pop
stos
xchg
leave
and
inc
sub
aaa
xlat
and
ret
lcall
sti
loop
mov
pop
cs
push
mov
leave
mov
inc
xor
out
adcl
sti
js
jne
pop
in
mov
mov
inc
loop
push
push
popl
hlt
outsb
jns
mov
clc
inc
mov
insb
inc
or
test
ficompl
int
dec
xchg
out
pop
mov
push
push
xor
jae
cld
xchg
cmp
fistpl
push
push
sub
ss
push
sub
aad
je
out
scas
aaa
aam
xor
or
dec
pop
cmp
lea
sbb
lods
inc
inc
mov
ss
cld
dec
xlat
popf
jle
stc
pop
mov
fcoms
stos
push
lds
pop
adc
and
cmc
mov
mov
sti
cmp
push
sbb
into
cmp
ret
jnp
sub
in
jmp
ret
and
loope
sbb
push
sub
mov
cld
fisubl
pop
pop
mov
mov
lret
popa
je
add
pop
in
push
jge
addl
jle
shrl
or
add
mov
inc
sub
pop
sbb
pop
movsl
ljmp
jo
or
sbb
ljmp
ret
int
rcll
imul
les
or
je
and
iret
push
push
dec
xchg
call
cmp
mov
arpl
cli
int3
sub
inc
adc
push
ds
mov
adc
cmpsb
adc
aas
sbb
mov
cld
dec
sti
sarb
dec
xor
mov
cmp
dec
dec
inc
xabort
es
mulb
pop
gs
outsb
cmp
arpl
fldl2e
push
movsb
jecxz
scas
fcoml
lods
push
lods
pop
sbb
sub
push
xor
cmp
test
xlat
mov
sub
xchg
sbb
into
test
cmp
dec
and
mov
fld
insl
lret
leave
fisttps
cmpsb
mov
jmp
sub
dec
pop
mov
pop
roll
bnd
or
inc
sbb
push
arpl
cmp
ljmp
xchg
mov
add
lea
push
imul
in
mov
push
les
add
ret
movsb
sub
xor
push
pop
mov
xchg
adc
jns
imul
push
lret
fcmovu
and
push
mov
lea
ret
ljmp
mov
arpl
sbb
mov
nop
fwait
pushf
cmovl
xor
xor
ret
or
add
call
cmp
push
adc
std
mov
sbb
sbb
addr16
jp
outsb
jbe
inc
pop
mov
adc
add
call
jb
movsl
cmp
rcll
pushf
lahf
xchg
add
push
test
dec
ja
data16
sub
xor
jle
jae
lea
mov
sarb
mov
repnz
adcl
popf
fidivl
mov
jnp
and
pop
imulb
cmc
fs
bound
fistpl
je
mov
pop
push
push
decb
cltd
add
data16
ljmp
movsb
add
mov
into
stc
xchg
adc
dec
imul
or
jb
sub
mul
les
pop
std
jnp
push
inc
ret
leave
gs
repnz
les
add
lds
inc
iret
cmpl
push
movsl
push
addr16
jo
sbb
insb
push
daa
mov
stos
loop
mov
insb
fsubr
add
lods
jmp
rolb
cmp
flds
xchg
fists
sti
pop
sbb
cld
into
outsb
jbe
sub
jmp
sbb
mov
bound
hlt
ss
xchg
jbe
ret
lods
dec
dec
js
jp
mov
and
sbb
and
pop
lock
mov
dec
outsb
xor
call
pusha
pop
adc
stos
sub
test
adc
and
lods
adc
in
movsb
mov
inc
ret
ret
jle
xlat
dec
bound
out
sar
push
adc
in
int
imul
repz
pop
sti
aam
push
sbb
incb
aam
jns
dec
pop
pop
cmp
and
pop
mov
and
xor
movsb
jmp
jns
inc
add
loope
dec
iret
add
pop
incb
lcall
ja
pop
imul
loope
rcrl
mov
pop
push
out
aam
add
ljmp
jno
cltd
push
sub
subb
add
jne
cld
outsb
add
ret
inc
adc
test
cmc
pop
cmp
int
pop
push
sub
fisubrl
ss
sbb
jle
sub
shll
pop
aad
sti
xchg
fnstsw
shll
test
jge
int3
int
cmp
and
push
inc
lret
add
daa
adc
sbb
ret
sbb
enter
test
xor
or
mov
mov
lahf
sub
cltd
xchg
sbb
cmp
scas
insb
mov
lcall
fndisi(8087
test
or
movsl
fisubs
push
fldt
andl
out
xchg
lret
xchg
dec
in
inc
adcb
jbe
in
cwtl
cmp
jg
lods
push
or
or
mov
clc
xchg
enter
cmp
rclb
dec
inc
pop
mov
mov
add
aad
hlt
or
mov
stc
sub
sbb
pop
cmpsl
push
sbb
les
rorl
lods
lds
test
inc
jmp
pop
push
xchg
insl
mov
mov
mov
andl
xchg
stos
mov
popf
jns
adc
push
jmp
adc
lea
pop
mov
jg
and
jb
lret
cmp
loope
fdivrp
adc
xchg
mov
jne
in
xor
stos
xchg
mov
or
adcl
negb
pushf
lahf
cmpl
sub
mov
ret
mov
mov
sarb
rcll
arpl
ss
stos
add
outsl
test
mov
xchg
adc
mov
push
jae
add
loopne
push
bound
rolb
xchg
lock
xlat
xchg
lahf
sahf
repz
inc
xchg
inc
ret
add
stos
and
cmpb
jbe
mov
movsl
aam
xorb
shl
int
adc
popf
push
jge
test
cmp
pop
cmp
call
shrl
dec
test
sub
add
jmp
mov
popa
mov
pop
dec
daa
scas
jmp
das
xchg
jae
inc
adc
popf
xchg
mov
stos
int3
or
scas
jne
or
push
pop
movsb
es
sub
inc
jecxz
push
dec
cld
inc
arpl
dec
add
jp
jecxz
and
mov
jmp
ficompl
lahf
cmp
shll
movsl
sub
jae
and
add
pop
mov
inc
addr16
add
jb
sbb
lret
xchg
mov
ret
pop
pop
push
jbe
mov
pop
sub
sub
sbb
pop
ficoms
aas
or
add
es
in
ljmp
repz
nop
inc
movsb
mov
jg
rclb
scas
scas
mov
lods
rcl
mov
sti
psrlw
mov
xorb
mov
lods
std
daa
jne
cltd
or
call
repz
hlt
dec
push
xor
mov
lret
adc
ret
mov
pop
ja
jns
and
mov
mov
mov
pop
adc
loop
loop
or
sub
fs
mov
addl
cwtl
sti
movswl
loop
mov
into
in
call
fisubrs
lods
sub
xor
fbld
scas
or
clc
loopne
cmp
lcall
daa
fistl
lods
lret
fbstp
pop
outsl
scas
shrl
ret
adc
leave
mov
ja
mov
bnd
dec
iret
sahf
in
movsl
cld
jo
pop
bound
add
outsl
dec
shl
xchg
adc
inc
cmp
adc
mov
jne
xor
inc
dec
push
sub
adc
mov
mov
push
push
or
std
pop
sbb
lahf
or
test
lock
mov
mov
aaa
lea
lock
sub
mov
xchg
mov
insb
adcl
sti
insb
push
push
pop
aas
inc
orl
sbb
pavgb
loope
pop
ficompl
mov
push
popf
subl
pop
out
jg
adc
ja
jo
pop
insb
cmpb
aam
dec
push
rorb
mov
mov
dec
sub
jmp
jns
pusha
sub
mov
int
mov
fwait
jb
or
ljmp
push
and
cmp
popa
mov
in
mov
sub
or
rclb
mov
push
addr16
repnz
inc
ljmp
aam
notl
rcll
lds
or
and
jno
pushf
or
add
stos
jo
fwait
lar
sbb
sub
inc
push
rolb
fisttps
xchg
cmp
out
sbb
mov
ret
dec
dec
sub
inc
cmpsb
aas
pop
out
rol
sti
out
sahf
rorl
sub
call
mov
adc
gs
and
lock
fwait
pop
pop
jecxz
mov
andl
loopne
shrb
and
jecxz
jmp
clc
mov
cmp
mov
sti
stos
inc
js
ret
fildl
pop
sarl
insw
dec
gs
jle
mov
mov
cmpsb
in
movsl
sbb
insl
push
jbe
adc
bound
xchg
mov
sub
sub
xor
mov
out
hlt
outsb
push
push
sub
mov
inc
cwtl
in
and
and
ud2
int3
sti
mov
mov
test
mov
push
push
jg
mov
dec
out
fsubrl
loopne
cs
dec
out
xchg
xor
loope
movzbl
xchg
dec
js
lods
loope
popa
sbb
fadds
inc
add
push
lods
dec
pop
flds
andb
addr16
add
movsl
dec
xor
das
xor
xor
xchg
lea
cltd
add
sbb
ss
mov
out
push
ds
outsb
sarl
shrb
xchg
xor
mov
dec
inc
or
push
inc
jno
sbb
mov
mov
add
xchg
sarb
jno
int
lahf
fwait
cli
test
mov
cmpsl
push
xchg
incb
daa
aas
xchg
add
xor
cmp
scas
sub
icebp
inc
enter
stos
ds
mov
outsl
std
dec
pop
pop
xchg
loopne
and
mov
cmp
pop
xor
dec
inc
lds
lcall
repz
in
mov
aad
inc
sbb
out
pushf
cmp
jb
in
ret
or
mov
push
nop
jl
mov
movsl
loopne
cmp
outsl
mov
popf
lret
xchg
adc
mov
xor
jp
inc
ret
adc
inc
out
mov
xchg
pop
in
cmp
js
movsb
lea
cmp
cmp
mov
add
or
in
xor
adc
ljmp
shl
and
pop
push
adc
mov
repnz
fdivrp
or
dec
fldl2e
push
fnstcw
push
sbbb
push
xor
das
ror
push
pop
xor
repz
out
lahf
and
pusha
sub
mov
push
mov
fmulp
inc
int3
data16
fwait
push
andl
inc
mov
inc
lds
scas
jle
lock
out
or
ljmp
cmp
sbb
pop
mov
mov
mov
lcall
je
movswl
inc
leave
adc
loopne
jns
mov
idivl
push
repnz
cmp
icebp
xor
cld
subb
jns
fnsave
cmp
daa
or
push
mov
rclb
sub
lea
popf
data16
in
mov
gs
aas
repz
inc
sub
xlat
pop
sub
mov
xor
push
mov
mov
int3
cltd
fs
push
jmp
lock
jecxz
dec
das
daa
fsubrl
jecxz
mov
add
jecxz
sub
ljmp
stos
shlb
out
mov
test
in
enter
sbb
sti
jns
mov
sub
aas
xchg
fsubp
outsl
std
and
in
xorl
lret
add
add
loope
test
out
jl
add
inc
or
inc
ss
pop
cmp
adc
enter
lret
dec
mov
test
lods
xchg
jno
outsb
and
sbb
jge
sahf
fbstp
data16
or
sbb
notb
jae
and
push
push
cmpsb
add
ficomps
sahf
sub
xchg
mov
sub
sarb
cmp
sti
mov
shll
rcll
push
adc
lahf
pop
mov
xchg
cmp
out
mov
cld
push
lcall
inc
dec
inc
mov
fdivp
cld
dec
arpl
aam
adc
das
dec
mov
cs
inc
sahf
cmp
ret
test
adc
vpunpcklbw
addb
out
fsubr
movsb
jne
or
subl
pop
adc
pusha
mov
push
fidivrl
sbb
lds
orb
push
sbb
sarl
jge
inc
shrb
inc
hlt
pop
aad
imul
jmp
xchg
mov
mov
mov
jb
in
inc
jns
lret
enter
xchg
jns
xor
hlt
sbb
insb
sbb
loop
popa
xor
cmp
inc
sub
out
sub
xlat
jne
add
xchg
and
ja
js
ljmp
movsl
bound
fsts
ss
movsb
xor
imul
popf
xor
push
mov
push
clc
test
shlb
mov
jae
pop
sbb
mov
adc
sahf
adc
pop
xchg
xor
fisttpll
sbb
shl
fstpt
mov
int3
pop
stc
outsb
daa
lret
aaa
imul
scas
xchg
xchg
andl
push
call
inc
sti
outsb
shrb
pop
xchg
mov
adc
shll
pop
push
pusha
aam
std
inc
cmp
mov
jo
cmpsb
and
sub
mov
cmp
mov
jp
sub
dec
gs
into
push
jle
out
cmpsl
jb
lods
dec
out
push
cmpsb
or
out
mov
in
sub
sbb
cmp
jg
mov
pop
xor
incl
jl
mov
xor
sarl
dec
lods
pop
cmp
addl
mov
insb
or
cli
cmp
je
push
dec
icebp
sbb
outsb
xor
mov
jmp
push
mov
dec
shll
bound
adc
fimull
sar
fstp
xchg
mov
push
scas
mov
add
sbb
js
pop
mov
hlt
loope
clc
rorb
fwait
mov
adc
loop
cltd
mov
insl
jnp
nop
sub
adc
out
in
cmp
ret
iret
bound
hlt
cmp
pusha
xchg
lahf
addr16
mov
hlt
cmp
mov
fstpl
in
or
stos
and
mov
pop
loopne
cmp
fdivrs
and
mov
sub
jp
test
mov
sbb
pusha
stos
or
sti
and
and
mov
pushf
sub
fisttpll
or
sbb
or
test
push
out
leave
or
xchg
push
cli
dec
pop
iret
ret
ficoml
dec
sahf
xchg
cmp
jg
add
sbb
adc
addr16
aad
je
pushl
lea
jp
mov
lret
movsb
or
jne
sti
daa
jbe
pop
subb
dec
loope
sub
cltd
call
outsb
cmpsb
outsl
dec
xchg
pop
mov
or
lds
test
sbb
out
shll
pop
cwtl
jl
rorb
scas
gs
jbe
lcall
sbb
fs
flds
shrd
dec
mov
hlt
lret
sbb
lret
cmpsb
cltd
stos
pop
lcall
pop
mov
clc
cmpsb
out
mov
gs
idivl
cmpsl
lret
testl
mov
jle
cmp
in
loope
xchg
or
test
dec
jle
inc
les
jns
mov
jnp
data16
out
cmpsb
mov
cltd
mov
or
xchg
nop
test
dec
subl
pop
dec
pop
ret
mov
std
adc
jp
jno
xor
outsl
pop
sub
and
int3
sti
cmpsb
mov
pop
rorb
add
stc
xchg
jb
sbb
or
call
daa
sbb
hlt
push
imul
rorl
pop
rolb
mov
popa
push
inc
adc
cmp
push
test
or
jmp
gs
and
cld
mov
push
dec
xchg
mov
xchg
cmp
jle
adcb
jae
imul
dec
mov
outsb
pxor
rcrl
mov
pop
jmp
jge
cmp
sub
jno
clc
push
adc
inc
mull
stos
dec
inc
out
xchg
xor
fsubs
push
jb
xor
rorl
sub
sbb
mulb
add
mov
or
cs
dec
sub
jmp
add
jnp
test
inc
sbb
incb
ljmp
mov
insl
insb
aaa
ret
loopne
adcl
pop
cmp
imul
or
jbe
cmp
aaa
mov
xorb
jnp
fistpll
cmc
in
mov
outsb
sbb
fsubl
loop
movsb
or
popa
lret
das
mov
mull
and
fidivrs
xchg
subb
dec
data16
je
test
hlt
cmp
dec
jle
adc
push
shrl
mov
sti
xor
inc
push
lahf
icebp
push
stc
sub
add
scas
mov
push
mov
outsb
lods
xchg
and
push
cmc
cmp
jmp
cmp
xor
adc
icebp
sub
xchg
mov
test
stos
jp
and
dec
or
leave
lcall
jne
pop
aas
pusha
ds
andl
idivl
push
cld
cmp
push
mov
test
push
xchg
lock
sarl
or
test
std
xor
pop
int3
mov
sub
hlt
cmp
or
enter
xchg
dec
and
les
mov
out
mov
dec
movsl
and
sbb
add
fistpll
sahf
sub
adc
lods
and
push
negl
outsb
cmpb
jle
dec
stos
out
cli
pop
adc
outsb
sbb
jecxz
jmp
sub
mov
mov
les
sbb
dec
mov
inc
or
pusha
adc
ja
xchg
ret
pop
xor
icebp
mov
cld
call
adc
dec
outsb
dec
into
dec
or
stos
push
xchg
push
mov
fidivrs
shll
fcmovnu
dec
mov
mov
insb
xor
cmp
cmp
or
jno
xchg
pop
mov
mov
dec
sbb
stc
lcall
push
cwtl
aad
jne
aad
push
inc
data16
mov
cmp
clc
rclb
stos
les
mov
scas
int
push
int3
jo
jb
sarb
decb
add
cmpsl
pop
scas
sbb
jbe
sahf
xchg
adc
rcrb
repnz
icebp
add
enter
and
push
adc
imul
aam
insb
mov
or
cmpsl
push
cs
in
mov
inc
push
scas
or
scas
and
cli
or
jb
pop
cmc
jmp
push
out
push
mov
cltd
or
scas
and
pop
popf
xchg
xor
ret
push
shlb
inc
jo
insl
int3
dec
mov
lahf
add
push
add
or
and
and
jns
mov
leave
int
xchg
dec
cmp
lock
test
aam
rcl
aaa
add
aad
scas
negb
jp
mov
out
imul
mov
mov
ja
inc
cmc
adc
mov
adc
lahf
out
add
jb
dec
push
inc
cwtl
jmp
cmp
in
sti
adc
rcrl
mov
ljmp
pop
sub
fwait
push
mov
cmp
cmp
sti
int3
in
aaa
push
inc
sbb
test
rcrl
pandn
mov
ja
and
lret
and
test
pop
cmp
fdiv
pop
outsb
aam
or
xchg
cmp
pop
or
sbb
cmp
pand
jo
in
push
dec
stos
in
and
inc
rcrl
push
mov
loopne
push
inc
mov
mov
pop
fwait
dec
out
dec
jmp
leave
lahf
jno
in
or
shl
pusha
dec
inc
xchg
mov
xchg
icebp
hlt
mov
arpl
mov
push
pop
push
sbb
adcb
out
sbbb
mov
sub
and
push
xor
ja
imul
fstpl
jl
xor
andb
rorb
aas
pop
push
scas
ja
insb
dec
fidivrl
inc
divl
jle
sbb
insb
out
xor
jnp
mov
std
popf
adcl
adc
scas
movb
or
je
mov
jge
ret
fs
mov
dec
jmp
sub
pop
xor
sub
cltd
mov
xchg
add
sub
fs
ljmp
test
inc
inc
mov
loope
mov
jmp
add
or
mov
lret
dec
insl
sbb
push
dec
adc
pop
mov
cli
fsubrl
xchg
outsl
sub
ror
aad
inc
jmp
push
insl
sub
sbbb
test
pop
pop
scas
inc
rorb
loop
push
outsl
mov
inc
add
push
int3
mov
push
adc
lock
movb
mov
jns
lcall
sahf
and
jl
sbb
test
inc
mov
mov
mov
xchg
sub
mov
stos
aas
insl
leave
adc
pop
or
xlat
mov
sbb
fistl
fs
lds
fstpl
ja
or
jp
sbb
cmpl
mov
ss
daa
xor
inc
mov
iret
adc
inc
mov
fisubrl
outsl
jecxz
mov
jmp
inc
pop
cmp
fucomi
xor
insl
pop
dec
jle
lcall
xor
adcl
in
mov
std
fisttpl
in
mov
mov
lea
outsb
adc
out
push
ss
sti
subb
jge
dec
out
stc
loop
dec
aad
mov
xchg
jecxz
adc
sub
es
mov
cmp
adc
movsb
mov
xor
cmpsl
testb
jmp
test
int3
adc
cmp
dec
inc
iret
or
cmp
pop
xchg
loop
mov
scas
cmp
outsl
pop
sbb
cli
lock
loopne
mov
icebp
popf
xchg
pop
push
xchg
pushf
dec
mov
inc
mov
sub
cmc
jne
adc
push
jo
les
mov
test
or
shrl
cmp
pop
cmp
sbb
xchg
mov
aas
inc
adc
scas
rcr
or
ja
insl
adc
jge
pop
arpl
clc
aad
out
xchg
mov
jne
int3
sub
aam
mov
and
in
inc
xchg
push
scas
cwtl
sbb
in
aad
shrb
and
test
push
jle
test
repnz
xchg
pop
in
jmp
mov
cmp
xor
sahf
aaa
les
jg
fsubr
daa
sbb
std
jnp
cmpsb
bound
sbb
push
mov
xor
shr
into
xchg
cmpb
nop
daa
push
lahf
jl
sti
dec
or
popa
sub
mov
mov
adc
out
decl
cmp
in
daa
add
adc
scas
mov
aaa
and
popf
repnz
ret
push
lret
dec
dec
mov
daa
xchg
push
aad
xchg
in
add
xchg
sbb
popf
mov
xor
dec
ljmp
xorl
jno
sahf
std
daa
push
mov
jg
mov
data16
arpl
loop
mov
inc
xor
addr16
xor
out
adc
mov
add
mov
mov
icebp
aam
jg
cmpsl
aad
scas
negb
std
andb
mov
loopne
addb
orl
cmp
loopne
xrelease
stos
outsl
or
ds
pop
xor
and
xchg
xor
sbb
push
add
out
and
push
push
rcrb
mov
sub
loopne
je
repz
lods
pop
add
outsl
cld
jne
adc
jno
xor
sub
scas
adc
mov
adc
dec
hlt
test
mov
mov
push
push
sub
inc
movsb
call
leave
adc
jge
loope
lret
or
jnp
in
movsl
decb
mov
jl
inc
ja
mov
cmp
pop
xorb
jmp
mov
mov
cwtl
cli
data16
addr16
mov
out
mov
inc
and
daa
ljmp
addr16
lret
cmp
aam
aam
sbb
add
mov
mov
outsb
mov
and
repz
push
inc
out
in
xor
sub
push
mov
mov
xchg
xchg
stc
movsb
fdivrl
adc
sbb
pusha
imul
stos
and
jne
daa
rcr
aad
fists
js
hlt
or
sub
lods
or
cmpsb
jmp
xor
xchg
inc
xchg
pop
cmp
roll
add
or
mov
inc
gs
subb
aad
xchg
mov
lret
mov
insl
arpl
stos
outsb
loope
in
test
mov
aad
fsub
xor
aam
cld
mov
push
or
adc
negb
repz
insl
adc
mov
clc
xor
in
pop
sbb
xchg
popa
test
fisubl
pop
ret
sbb
jecxz
je
cli
out
jae
mov
or
xor
xchg
push
sub
sbb
sarb
js
adc
loop,pt
cld
jecxz
les
imul
mov
cwtl
stos
sbb
mov
cmp
or
mov
pop
mov
stos
pop
pushf
std
and
xchg
div
movsb
sbb
mov
add
push
cwtl
or
mov
push
or
icebp
inc
fwait
cwtl
mov
push
lcall
movsb
push
jmp
imul
pop
outsb
push
cli
jo
daa
pop
fs
and
mov
ficomps
in
mov
divl
outsb
inc
xor
cmp
pop
dec
xchg
fisubs
xchg
imul
in
pop
dec
add
xor
push
fsub
andl
fnstsw
movsl
cli
push
and
lret
jnp
add
mov
stc
sbb
sub
and
lods
push
aad
in
mov
pop
daa
aas
and
cmp
and
arpl
inc
out
aas
loopne
pushf
les
cld
mov
lds
jp
adc
add
xchg
mov
and
or
or
cwtl
call
aas
pushf
dec
sbb
push
lea
push
subb
popa
sub
dec
mov
hlt
dec
lret
push
loop
shr
jmp
mov
push
jge
push
xchg
rcl
das
jg
lods
sub
xchg
test
jle
repz
mov
rcll
loopne
dec
sub
and
push
pop
sbb
mov
push
aam
lret
mov
dec
fists
insb
sbb
cmp
mov
in
test
int
xor
add
test
lock
jecxz
mov
inc
xchg
jo
jnp
js
push
and
rcll
fstl
dec
jno
pop
push
inc
in
dec
dec
jnp
cmp
push
sbb
lret
mov
or
cmp
adc
adc
ret
daa
cmc
movsb
out
add
int3
lcall
fcompl
in
call
fldl
adcl
orb
iret
cmp
fwait
sbbl
xor
jno
aam
movsl
jge
insl
testl
jbe
or
popf
push
add
mov
dec
inc
inc
fmuls
sahf
sub
fsubrl
loopne
divl
enter
cmp
jne
cmp
add
cmp
cmp
sbb
lods
push
mov
ror
adc
mov
lock
push
fsubrl
adc
fistpll
sbb
or
pop
mov
add
dec
imul
or
orb
mov
insb
insl
repnz
mov
pop
push
sub
cmpsb
pop
incl
imul
jns
adc
sub
nop
stos
dec
add
mov
pop
xor
movsbl
dec
test
je
stos
adc
dec
dec
outsb
nop
and
mov
push
outsl
dec
ds
adc
adc
scas
jno
inc
add
cwtl
push
rcrb
imulb
dec
add
sbb
xor
int
and
pop
cli
mov
pop
shll
call
nop
cmc
fistpll
mov
test
cmp
cmp
and
aaa
sub
sbb
divl
fdivl
mov
shrb
test
add
jmp
rolb
jp
or
dec
test
dec
sbb
fdivl
out
pop
push
xchg
enter
add
pop
hlt
arpl
sbb
fisubrs
mov
sbb
push
sti
fildl
in
pop
mov
cmp
repnz
cmp
or
and
xchg
xchg
sbb
dec
mov
je
rol
fcomi
mov
pop
subl
gs
icebp
stos
aad
mov
test
mov
sarb
out
out
lods
cmc
mov
rolb
push
jae
fcoml
hlt
pop
add
mov
scas
cmp
je
pop
cmp
repnz
push
or
xor
addr16
arpl
inc
adc
fmul
pop
push
mov
shll
mov
adc
pop
inc
fbld
dec
orl
xchg
xchg
xchg
mov
loopne
mov
scas
gs
and
mov
push
fdivr
aad
jns
dec
and
sub
mov
pusha
dec
and
out
fwait
mov
das
mov
addr16
es
outsb
mov
inc
insl
das
cmp
lret
popf
cmp
stos
adc
sub
inc
cli
pop
xor
aam
mov
mov
sbb
add
stos
push
mov
test
jno
jnp
loope
mov
psllq
popa
pop
or
ret
pop
jbe
lock
loop
imul
push
insb
test
dec
cli
push
xchg
dec
mov
mov
icebp
scas
pop
mov
sarb
aam
arpl
call
daa
mov
std
insb
cmp
mov
mov
inc
enter
push
ja
out
push
pop
push
mov
or
lcall
inc
add
inc
xor
pop
pop
jae
xor
pop
sub
pusha
es
aam
lods
add
mov
mov
mov
xlat
arpl
jmp
gs
or
scas
jns
mov
lock
sub
movsb
push
dec
fucomi
shrl
dec
out
jne
pop
fmull
loope
fsubrs
sbb
inc
and
fwait
shrl
or
movsl
dec
xchg
jmp
xor
cmp
mov
js
jne
daa
xor
loope
clc
mov
cmp
fcomps
dec
inc
out
sbb
mov
sub
mov
pop
cs
mov
add
fnstenv
stc
mov
test
pop
adc
sarl
call
inc
out
sbb
jge
mov
xchg
outsb
out
stos
repnz
sbb
subb
into
dec
mov
adc
adc
lds
out
sarl
mov
cmp
aad
xor
test
sub
add
push
enter
in
in
call
bound
orb
fcom
popa
jl
inc
mov
popl
sbb
dec
sbb
jbe
push
mov
inc
and
scas
test
fs
jns
inc
cltd
mov
push
pop
jmp
cmp
sub
dec
aas
aam
push
shlb
fcmovb
cmp
popf
out
pop
aad
js
xchg
outsb
cmp
bound
mov
in
sbb
iret
mov
push
dec
xchg
add
hlt
ja
push
xor
mov
dec
adc
jle
repnz
iret
xchg
cmp
dec
jle
pop
sub
sub
jg
inc
or
and
xor
pop
cmp
sbb
paddd
push
inc
cs
adc
or
cs
mov
leave
lahf
cmp
out
loope
xorl
bound
cli
sti
adc
sbbb
mov
and
clc
sbb
jge
int3
inc
sbb
jbe
fnstcw
pop
scas
fwait
icebp
in
fildl
test
shr
mov
xor
mull
xchg
lcall
fdivl
add
push
rorl
adc
lret
mov
cmp
jmp
pop
adc
pop
cli
dec
into
daa
mov
mov
pop
xor
fs
dec
std
or
in
xchg
sbb
out
test
addb
aam
cmp
dec
pop
mov
push
dec
fmul
cmp
daa
out
xor
push
push
loop
dec
in
adc
mov
dec
cmp
lock
dec
cltd
packsswb
shlb
in
scas
das
pop
sub
jmp
mov
popf
pop
ret
dec
mov
mov
jecxz
test
jecxz
jmp
js
add
sahf
inc
mov
jg
loope
jae
xor
sub
lcall
add
push
in
inc
lahf
cmpsb
loope
mov
fistps
xchg
js
mov
add
cs
mov
fists
mov
jecxz
jl
je
mov
mov
pop
repnz
push
and
lods
mov
cmp
jle
xchg
dec
adc
shrb
fcompl
test
loopne
adc
movsb
xchg
outsl
ror
mov
add
mov
adc
jl
popa
mov
add
dec
fstp
popa
mov
add
xor
bound
aas
lret
jp
push
sub
ret
sub
cmp
loopne
ffree
testl
out
mov
les
mov
mov
rol
sbbb
xchg
sub
cmp
cli
daa
mov
sbbb
and
jp
or
push
fbstp
pop
xor
pop
mov
insb
nop
and
rcll
sub
call
test
js
sbbl
iret
orb
lahf
sub
arpl
cmpsl
rolb
std
dec
push
mov
mov
inc
iret
or
aad
dec
jmp
mov
or
fcmovnb
add
mov
js
jae
xchg
push
fxch
scas
adc
addr16
push
jg
inc
push
push
outsl
adc
out
mov
cmpb
outsb
hlt
popa
test
pop
xor
xor
push
xlat
movl
in
daa
push
or
sbb
cmp
pop
xchg
in
into
adc
xor
mov
mov
lret
push
mov
sbb
loope
fildll
call
ficompl
mov
mov
xchg
fidivl
lods
inc
insb
les
mov
push
and
cmp
add
dec
out
je
dec
aam
mov
xor
sub
pop
or
inc
outsl
dec
and
sti
into
jecxz
cmp
fmul
loope
add
test
adc
add
sub
test
dec
xor
imull
lock
mov
mov
mov
push
sub
int3
sbb
sub
mov
jecxz
jg
mov
insl
hlt
cli
imul
cs
scas
sub
subb
or
mov
mov
xor
xor
aam
jo
std
mov
rcrl
pop
xchg
aas
mov
leave
sbb
gs
sub
jl
mov
mov
ret
xor
push
push
cwtl
inc
jae
sub
mov
fsubrs
cmp
dec
pop
sub
dec
and
popa
imul
ror
imul
stos
enter
cmp
fisubs
xchg
mov
push
cwtl
push
add
stos
jecxz
mov
out
mov
mov
jecxz
and
out
pop
add
ret
jecxz
aad
mov
int
lahf
sub
stc
xor
fmuls
jnp
loop
lods
mov
or
or
or
adc
jns
fucomp
in
mov
jg
fimuls
outsb
pop
xorb
dec
in
pop
stos
push
lret
repz
pop
ljmp
shlb
shl
fists
nop
inc
mov
sarb
sbb
mov
xor
dec
jne
addl
sbb
and
cwtl
aaa
mov
stc
dec
jl
jg
negb
sub
outsb
pop
or
rcrl
in
and
les
add
addr16
inc
dec
adc
jmp
sbb
xchg
repz
adc
or
cmp
test
lret
push
test
ljmp
sbb
cld
jnp
sub
fldl
add
fwait
or
dec
pushf
decl
out
push
sbb
insb
lret
dec
sbb
test
xchg
test
sbb
fdivs
mov
mov
pop
push
dec
ficompl
scas
popaw
push
rdmsr
jb
pushf
popf
not
out
enter
sbb
js
jmp
xchg
sbb
or
jns
leave
jle
sti
push
imul
fiaddl
scas
mov
xor
mov
ret
add
mov
xlat
insl
cli
jle
dec
push
in
sbb
mov
imul
imul
mov
in
or
and
xor
nop
push
bound
out
popa
jno
inc
movsb
pushf
subl
idivb
mov
inc
and
push
pop
or
adc
sahf
push
add
or
aaa
dec
inc
sub
mov
mov
clc
cmp
inc
push
ret
pushf
inc
imul
and
or
pushf
cmp
mov
push
xchg
inc
xchg
cli
lods
clc
cmp
push
repz
loop
adc
mov
push
rorb
push
stc
enter
adc
mov
xor
xchg
mov
xchg
ljmp
jnp
inc
cmp
mov
mov
inc
pop
sbb
xor
xchg
aas
test
cmp
cli
push
not
cmc
or
sbb
ja
adc
push
pop
lods
xor
dec
jl
pop
and
jle
int
cli
xor
psubsb
mov
loopne
leave
in
xchg
out
mov
jge
adc
lcall
daa
outsl
jae
sub
out
aam
lock
pop
out
push
pop
dec
cs
xor
push
sbb
cld
js
in
cmpsl
in
fwait
mov
shlb
frstor
jae
inc
jbe
mov
cmpsb
shlb
jp
dec
fldenv
pusha
fcmovu
jg
mov
lahf
shlb
inc
pop
mov
test
mov
les
movsb
shrb
in
lods
jbe
out
add
jnp
mov
xor
mov
in
mov
pop
add
push
lret
cmp
or
inc
cmp
cmp
lock
clc
xchg
xor
and
mov
mov
ja
xchg
fwait
lcall
push
push
mov
pop
jnp
data16
pusha
jb
hlt
adc
jmp
ss
cmpsl
nop
shlb
pushf
mov
xchg
and
push
nop
leave
and
test
xor
sbb
daa
cmp
push
inc
sub
out
cli
add
subb
dec
insl
inc
out
pop
adc
mov
shll
fwait
aad
outsl
data16
aaa
mov
out
inc
pop
jb
push
pushf
sti
pop
add
data16
leave
push
inc
test
pushf
fs
cmp
xor
or
ret
fmul
pop
xchg
cmp
sub
xor
cmpsl
or
pop
lods
mov
jb
pushf
add
push
or
aas
and
jb
dec
xorb
ljmp
cmc
push
test
or
sahf
push
xor
cmp
pop
repz
std
push
dec
int
push
sti
xor
mov
mov
out
inc
mov
gs
ffreep
into
push
fidivrs
sbb
xchg
rcl
inc
xchg
fbstp
aas
jecxz
xchg
sub
cmp
sub
and
and
dec
enter
sub
lds
add
rolb
shld
test
jbe
cmp
out
imulb
xor
cmc
fsubr
mov
or
clc
dec
mov
or
nop
mov
jns
fs
push
loope
mov
int3
add
and
pushf
loop
mov
ja
movsb
cltd
push
xchg
jl
mov
orl
mov
xor
and
jge
inc
out
mov
fcmovne
cmp
movsb
nop
mov
mov
cmpsb
or
or
pop
adc
and
jne
mov
fs
xchg
fists
mov
push
sub
mov
push
jns
imul
jmp
mov
jl
pop
cs
xchg
and
and
add
sbb
mov
or
push
rorl
fnsave
jo
sti
negb
xchg
mov
dec
and
cmp
inc
adc
test
xabort
or
mov
jge
push
fdivr
inc
adc
stos
mov
or
pop
push
mov
aad
pop
cmpsl
mov
std
push
jns
mov
cltd
pop
lret
fdivs
push
mov
in
xor
rcll
mov
xchg
inc
inc
imul
lahf
test
sbb
add
cmp
add
pop
les
dec
xlat
aad
movsl
outsl
out
pushl
in
xchg
and
dec
loope
pop
clc
and
and
dec
mov
dec
sti
adc
lahf
cmpsl
pushf
xchg
xchg
jns
inc
xor
push
inc
in
ror
shl
sar
push
sbb
jo
ss
push
fwait
shrb
shrl
repz
in
les
xchg
xchg
stc
gs
adc
cmp
std
std
inc
mov
lods
lods
dec
lods
adc
cmpl
or
push
and
pop
add
cwtl
cmp
sbbb
in
cld
inc
jb
loopew
icebp
loop
std
add
cmp
imul
sbb
addr16
dec
imull
or
shl
mov
xchg
push
or
hlt
cmp
out
dec
mov
mov
cli
ficomps
inc
inc
or
ss
mov
xor
stos
sbb
jo
or
fldenv
mov
data16
sub
repnz
pop
movsb
pop
and
sarb
sub
aas
sbb
data16
push
cmp
inc
jbe
lcall
jg
call
int3
sub
push
lret
es
mov
ficoms
test
cs
inc
movsb
mov
hlt
mov
aaa
push
fisubrl
mov
insl
subl
sub
inc
out
and
push
jns
jg
mov
xor
pop
adc
in
cmp
add
scas
mov
loop
adc
popf
fidivl
push
xor
push
rcl
ljmp
ret
imul
shll
sbb
mov
cmc
or
cmp
push
orl
xor
jne
sbb
lcall
mov
mov
mov
enter
xchg
clc
sbb
std
jb,pt
into
jecxz
jg
rcrl
xlat
mov
cmp
scas
jge
pop
lea
or
inc
ss
jp
lea
loop
popa
and
mov
or
push
out
push
mov
mov
push
dec
or
jb
cmp
ja
cwtl
and
pusha
dec
iret
ror
movsb
test
mov
aad
outsb
mov
sbb
dec
arpl
cmc
aaa
add
xorb
cwtl
mov
mov
cmp
lods
cmpsb
adc
dec
insl
push
push
pushf
mov
xchg
mov
jb
jne
cmp
dec
pop
pop
ret
ja
test
add
mov
daa
cmc
iret
rorl
out
loop
add
push
push
clc
je
int
dec
lds
mov
in
insl
cs
lret
cmp
sahf
mov
mov
inc
mov
pop
mov
push
jne,pn
inc
loopne
fimull
and
aad
mov
or
inc
jge
mov
xchg
adcl
sbb
ficoms
ljmp
and
aad
sbb
movsl
jbe
mov
fwait
std
mov
out
imull
or
adc
cltd
cmp
add
out
aaa
fidivs
fsubrs
lock
div
cmpb
leave
lds
cli
shl
mov
pop
sub
adc
scas
sub
fs
test
das
mov
movsb
and
and
and
inc
jo
insl
push
int3
mov
scas
jne
add
pop
dec
push
test
sub
sub
jg
test
repz
in
out
mov
mov
sbb
scas
sub
xor
cmpsl
rcrb
and
cli
mov
test
ds
subl
sbb
inc
gs
sbb
mov
test
xor
adc
sbbl
push
loope
ljmp
lods
xor
or
dec
jb
out
test
sub
loope
push
or
subb
shll
dec
loope
lds
mull
add
notb
lret
int
jmp
xor
fsubs
push
pop
gs
cmp
sbb
jbe
cwtl
mov
xchg
in
shrb
cmp
mov
bound
insl
push
inc
push
dec
addr16
jno
testb
adc
fisttps
push
incl
push
fs
sub
out
cmp
push
jg
fdivl
add
pop
in
push
jge
xor
cmp
cmp
in
lcall
or
test
xchg
rorl
sub
sub
cmp
les
out
inc
jb
mov
sub
sub
sbb
in
mov
and
cmpsl
sbb
rcr
mov
lods
aad
sub
into
test
loope
or
pop
dec
in
jp
push
mov
xor
mov
and
into
pusha
sub
push
ret
jg
sbb
dec
test
sub
mov
pop
push
inc
dec
fisttpll
cs
fdiv
add
mov
pop
jge
das
idivb
jl
mov
stos
fidivrl
jecxz
bound
shl
mov
xor
xor
out
gs
test
sbb
ljmp
mov
movb
repnz
pop
mov
insb
shl
pusha
imul
in
and
jg
stos
and
rol
mov
fstps
sbb
sub
sarb
andb
mov
dec
or
mov
or
mov
idivb
dec
push
xor
sbb
jno
inc
sub
mov
mov
fisubrs
lods
pop
sub
inc
iret
lahf
push
mov
pop
into
ss
shll
mov
add
call
or
xchg
mov
shll
enter
push
fcmovbe
sarl
int
xchg
rclb
insl
in
out
and
xchg
lds
mov
mov
xor
pop
hlt
movsl
movsb
adc
nop
out
xor
push
dec
fs
out
dec
push
int
add
sbb
or
test
sub
pop
iret
inc
pop
xchg
sbb
ret
dec
mov
or
add
push
add
push
pushf
dec
inc
xchg
data16
lods
sbb
mov
mov
divl
les
mov
shr
fiaddl
jo
mov
stos
push
jo
pop
int3
adc
xor
inc
lahf
nop
addr16
and
repz
adc
xchg
add
sub
std
jecxz
fwait
cli
fs
xor
and
call
add
popa
push
xchg
mov
lcall
fs
testl
mov
xchg
push
xor
adc
sbb
add
inc
or
nop
addr16
stc
adc
in
push
sbb
or
lock
push
sbb
lods
test
or
cli
orl
in
inc
dec
mov
aas
cld
cmp
hlt
ret
xor
push
stos
fwait
fs
enter
adc
roll
jl
push
add
inc
fdivrp
icebp
xchg
push
ds
icebp
scas
mov
pop
mov
mov
addr16
adc
mov
imul
ds
and
stos
das
xor
mov
mov
sahf
mov
sti
jmp
imul
and
stos
outsb
movsl
daa
pop
adc
add
sub
inc
hlt
xchg
adc
aad
mov
into
pop
pop
outsb
cld
test
and
fwait
into
rcrb
dec
aad
mov
arpl
icebp
stos
outsl
jmp
xor
xchg
jmp
inc
js
ret
push
fs
mov
jnp
cld
mov
mov
repz
clc
dec
mov
daa
rolb
ret
pop
fnstenv
popf
inc
cmp
test
aaa
cwtl
iret
xor
or
and
mov
insb
dec
inc
cmp
cwtl
lea
xchg
sub
arpl
stc
mov
adc
push
cld
or
int
sbb
nop
push
sbb
aas
cmp
pop
int3
jl
rorl
pop
push
stos
mov
xor
sub
or
mov
lret
cld
popa
outsl
xchg
addr16
and
call
or
stc
ss
pusha
out
add
jmp
daa
add
outsl
out
adc
xchg
dec
push
fstpt
aam
clc
aaa
divl
fsubp
xchg
imul
and
sbb
cmpsb
jle
iret
pop
fwait
jo
stc
jl
add
jmp
iret
addr16
xlat
mov
ret
mov
xor
push
xor
sub
push
xchg
dec
jo
pop
mov
cld
mov
sbb
cmp
and
sbb
mov
and
dec
fimull
jb
loopne
sbb
aad
push
xchg
mov
adc
repnz
dec
lods
clc
and
mov
gs
adc
dec
cmp
icebp
mov
ljmp
mov
insb
pop
out
push
fcmove
and
sub
mov
std
and
lds
push
clc
push
pusha
push
cwtl
scas
jl
dec
xor
mov
in
scas
dec
repz
adc
fwait
pop
out
scas
and
dec
mov
ds
aam
das
push
insb
xor
enter
fiaddl
fdiv
dec
and
mov
call
xchg
mov
sbb
dec
outsb
arpl
mov
mov
fisubrs
in
dec
xor
lock
rcll
jl
jmp
icebp
mov
filds
dec
pop
mov
mov
jno
or
push
jno
imul
fs
push
insb
sub
sub
inc
out
or
xchg
and
inc
sti
push
test
leave
je
dec
fimuls
mov
test
xor
scas
out
data16
stos
push
add
or
pop
imul
icebp
adcl
jge
repnz
fiadds
nop
int3
scas
mov
push
push
loope
jge
dec
stc
in
push
jnp
xchg
imul
cmc
cmc
roll
cmovae
daa
pop
pop
mov
mov
jge
push
cmp
hlt
and
notb
inc
ret
iret
xor
add
jo
out
adc
fidivs
xor
sbb
les
outsl
lods
jle
xor
adc
imul
xor
sbb
xor
mov
sar
pushw
mov
xor
rclb
sub
lods
mov
bound
mov
pop
popa
test
jae
pop
xchg
nop
outsl
cmpsb
ret
or
stos
sbb
jo
insl
pop
jecxz
mov
ficomps
sub
jbe
fadd
test
cmpsl
cmc
les
lods
push
icebp
cmp
frstor
aam
push
ret
mov
xor
mov
or
inc
out
cld
sub
cmp
call
cmp
xchg
das
out
into
cld
xchg
push
sbb
jmp
aaa
cmp
adc
add
inc
xchg
xchg
mov
insb
js
decl
lds
int3
and
add
cmovbe
scas
xchg
icebp
add
xchg
les
mov
jl
test
mov
inc
dec
addr16
push
pushf
lret
sbb
jb
push
test
ds
int3
insb
xor
rcrl
xchg
xor
icebp
loopne
fxch
test
add
jl
movb
mov
shl
cmp
push
xor
inc
sub
outsl
sbb
pop
adc
sbb
hlt
pop
sti
mov
mov
pop
fs
jno
lods
pop
popf
hlt
mov
pusha
mov
inc
out
dec
sbb
mov
daa
aam
mov
xchg
dec
and
pop
in
sub
lods
shl
inc
and
jmp
cmc
mov
adc
mov
add
inc
xchg
cltd
lret
fsts
push
inc
sarl
adc
dec
lahf
das
bound
inc
test
or
or
fiaddl
or
cltd
push
hlt
jbe
and
push
rolb
or
jmp
dec
cmc
jl
cmpsl
xor
loope
stos
push
rep
and
inc
pop
rcl
fwait
jnp
add
and
hlt
imul
mov
dec
inc
ficoms
sbb
sub
icebp
nop
in
add
bound
sbb
mov
aam
ja
insl
test
pushf
aas
in
cmp
xor
jno
or
jae
dec
insb
pop
ret
jg
and
scas
adc
icebp
add
fsub
iret
mov
mov
lods
aam
dec
push
out
stos
mov
ljmp
dec
mov
pusha
test
xor
ja
dec
sub
sub
cmp
out
inc
add
add
pop
sbb
jns
call
outsl
scas
cltd
xlat
push
mov
repnz
cmp
enter
lock
gs
mov
lock
pop
push
and
mov
dec
dec
in
pop
popa
dec
ja
xchg
jnp
insb
jb
and
stc
xchg
or
cmp
iret
mov
ss
pop
clc
cwtl
jge
out
mov
xchg
sti
pop
push
dec
push
dec
pop
mov
sub
add
arpl
lcall
cmpsl
fwait
jo
test
xchg
repnz
add
sti
ljmp
lahf
xchg
pop
inc
stc
fwait
dec
inc
adc
and
clc
add
popl
hlt
repnz
ret
addr16
adc
pop
cmc
inc
cmp
xorb
jno
lret
fsts
dec
or
testl
adc
jge
xchg
mov
aad
sbb
jmp
inc
mov
add
cmp
hlt
pop
enter
rep
add
mov
rol
sbb
nop
icebp
dec
lock
daa
dec
nop
cmp
mov
dec
aas
mov
mov
mov
mov
popa
mov
lods
or
pop
stos
sbb
cmp
mov
xor
push
popa
dec
pop
mov
sub
mov
mov
mov
ficomps
add
test
stos
dec
mov
push
sarl
out
and
sbb
or
fnstenv
hlt
js
hlt
push
into
aaa
xlat
in
dec
mov
pop
testb
inc
xchg
cmp
add
popa
dec
in
jmp
xor
jns
jo
add
notb
addr16
push
mov
push
test
shll
in
sub
mov
aam
nop
xor
nop
mov
ret
mov
rcl
popa
or
stc
push
or
outsb
lret
cmc
jg
pop
iret
enter
lds
cmp
shrb
repz
daa
mov
nop
je
push
fidivs
adc
jmp
xor
pop
lds
cmpsl
popf
mov
ja
xchg
xchg
aam
adc
sub
pushf
les
push
dec
test
sbb
adc
cmpsb
push
adc
fdivs
mov
jnp
pop
xchg
jbe
push
ret
pop
jno
stc
add
cmp
leave
lret
xor
in
pop
mov
das
cltd
ja
mulb
roll
add
cli
mov
lret
das
divb
pop
pop
or
out
or
lock
mov
pusha
cmc
mov
adc
pop
push
mov
jne
cmpsb
or
imul
out
stos
mov
in
jecxz
ljmp
dec
jbe
stos
ror
popf
push
sub
mov
mov
mov
cmpsb
mov
jb
cmc
roll
mov
inc
mov
pop
jo
out
xor
xchg
add
clc
mov
or
jb
mov
inc
arpl
mov
out
mov
jle
aas
ret
lret
jno
pop
inc
sub
pop
xor
test
sbb
sbb
dec
iret
shlb
pop
std
pop
ds
mov
and
sahf
push
repz
mov
pop
pusha
sub
push
pop
ja
jbe
stos
or
js
nopl
mov
cld
pop
mov
dec
adc
push
insl
out
mov
jno
jbe
jo
insb
add
push
pop
adc
popf
pop
cmp
xchg
js
inc
cli
mov
scas
inc
cs
add
mov
call
out
sbb
sub
stos
adc
xor
out
sub
sub
sarb
add
mov
jge
ret
test
jmp
pop
mov
mov
xor
and
lods
aas
mov
or
jne
repnz
sbb
jo
in
adc
enter
mov
add
lahf
fs
ja
and
stc
lcall
lods
sub
stc
inc
jbe
jl
inc
loopne
das
pop
pop
fwait
test
lcall
std
or
mov
add
add
jb
and
add
pop
pop
inc
inc
fwait
in
jle
hlt
and
jg
loope
or
adc
cmp
mov
out
adc
xor
iret
fistpll
pop
inc
test
cmp
mov
push
mov
adc
ret
sub
popl
pop
pcmpgtd
clc
inc
jns
into
lea
gs
scas
inc
sub
push
jns
push
ret
push
call
and
jns
loop
dec
mov
push
and
pop
inc
xchg
loopne
pop
imul
dec
nop
incb
mov
ss
and
inc
shlb
test
sahf
aas
adc
inc
lret
mov
mov
cmp
sbb
push
adc
sub
push
icebp
jge
adc
loope
mov
cmp
dec
dec
dec
pop
std
mov
stc
test
jmp
vpand
dec
push
pusha
ja
sub
inc
pop
data16
std
sahf
cmpsb
jae
dec
push
fwait
xor
in
jne
jns
outsl
mov
cs
jecxz
outsb
jle
stos
scas
push
fiadds
test
sbb
inc
adc
movsl
test
mull
into
xor
addr16
pop
std
cmp
dec
mov
je
addr16
icebp
pusha
cmpsb
mov
lret
mov
push
aas
pop
out
fwait
mov
xor
and
push
ret
iret
ss
pop
and
jecxz
add
std
and
loop
jnp
xlat
or
bound
sbb
or
lcall
push
faddp
mov
test
add
fiaddl
sub
lret
adc
push
sub
mov
adc
mov
cmp
mov
roll
ds
dec
scas
cmp
ljmp
scas
mov
jp
xlat
rcll
push
mov
jecxz
not
dec
into
adc
cmp
lcall
clc
jb
stc
call
sbb
imul
jns
enter
gs
add
call
lock
lret
jo
lea
pop
lock
push
inc
in
jb
sahf
pop
cmp
loopne
xchg
jne
sbb
xchg
push
sub
fwait
lods
mov
dec
mov
rcr
xchg
pop
mov
sti
arpl
xchg
cld
mov
jecxz
jno
ret
scas
xor
cmp
mov
nop
xor
push
int3
mov
cmp
xchg
xchg
jp
and
sbb
jo
jno
xor
out
mov
outsl
mov
add
int3
test
pop
push
fcmovbe
mov
add
cli
test
dec
sbb
shll
imul
enter
pop
jge
xchg
sbb
sbb
loopne
lods
ljmp
clc
test
mov
mov
mov
dec
xchg
pop
push
add
enter
adc
leave
push
inc
scas
jbe
pop
pusha
mov
and
in
sti
clc
sbb
mov
shlb
mov
sbb
in
data16
jge
out
mov
xchg
sub
pop
inc
std
lods
xchg
mull
mov
inc
insl
in
fpatan
push
out
jne
add
inc
cli
mov
push
dec
mov
leave
mov
insl
xorl
int
mov
out
rcrb
xor
call
mov
cmp
out
cmp
sub
test
dec
int3
ljmp
jno
jns
fs
fwait
mov
jg
mov
mov
xchg
mov
add
xlat
jge
dec
adcl
std
std
adc
xor
pop
push
adc
sbbb
sub
mov
and
outsl
imul
shrb
lret
cmp
pop
pop
xor
jae
in
arpl
pop
nop
jo
dec
movsb
sub
xor
inc
test
inc
cmp
scas
or
cs
cmpsl
lret
nop
fsubrp
lock
aaa
mov
dec
cli
dec
aas
clc
cmpsb
lods
jnp
test
je
pop
bound
movsl
movsb
popf
cmp
xor
xchg
iret
dec
sub
jg
scas
inc
pop
and
lret
and
nop
jbe
stos
pusha
aam
out
lds
add
cld
push
pop
es
data16
add
xor
sub
aas
gs
roll
shr
inc
sarl
out
sbb
stc
pop
les
add
sub
int3
pop
pop
mov
into
mov
mov
pop
sti
out
dec
or
dec
mov
xchg
fadds
xchg
ror
shll
mov
out
mov
sbb
adc
add
outsl
xchg
sbb
subl
hlt
ret
movsl
push
fstps
sbb
push
cmp
subb
sub
and
dec
push
mov
ret
pop
jg
ss
gs
ds
xchg
mov
add
repnz
outsb
jecxz
repz
or
out
test
sbb
mov
jb
mov
dec
mov
shrb
sahf
je
xor
test
xchg
mov
dec
out
loop
pop
mov
lcall
mov
popf
shrb
push
sbb
arpl
pushf
hlt
stc
mov
sub
xchg
pop
and
dec
push
mov
inc
stos
or
aam
sub
dec
xor
and
jo
pop
das
mov
pushf
cwtl
leave
xchg
mov
mov
imul
out
int3
pop
data16
jecxz
shrb
icebp
xlat
cmc
push
xor
mov
les
test
mov
ret
xchg
jmp
outsb
aas
out
out
cmp
movsl
sbb
and
cmpsb
cld
fcom
ret
push
mov
dec
mov
pop
repz
xlat
inc
loopne
cmp
adc
ja
or
daa
push
pop
add
pop
pop
imul
scas
fabs
ret
lods
testb
loope
jecxz
inc
insb
xchg
sub
mov
mov
sbb
enter
loop
daa
fisubrl
insb
fs
int
jo,pt
mov
rcrl
rclb
loopne
sub
sbb
addr16
push
ss
out
dec
cld
push
jb
das
jg
imulb
sbb
and
ja
mov
sbb
in
cltd
pusha
dec
in
out
add
div
dec
sarb
mov
jb
xchg
scas
jb
fxsave
jmp
mov
pop
mov
orl
mov
outsl
ret
cmp
outsl
ljmp
mov
imul
inc
mov
jo
out
xchg
push
loope
add
aaa
in
mov
in
aam
imul
and
or
and
pusha
xorb
cmp
stos
adc
filds
in
cmpb
mov
fidivrs
lea
adc
loopne
pop
iret
xchg
lea
and
mov
insb
pushf
lods
pop
xor
mov
adc
sbb
push
push
push
xlat
or
dec
mov
mov
stos
in
and
mov
ja
mov
lea
push
fidivrs
xor
adc
insb
push
mov
jns
in
aaa
dec
gs
sbb
lock
xchg
pushf
lea
cmp
cltd
fdivl
out
mov
shr
push
xor
mov
mov
sarl
dec
outsl
in
pop
movsl
and
or
jg
mov
data16
mov
jg
faddl
enter
test
xchg
cmpsb
in
push
mov
pop
nop
insl
push
adc
fs
mov
into
inc
add
push
sbb
mov
rcr
imul
aaa
jno
mov
mov
out
jb
stos
xor
int3
adc
out
dec
cmp
mov
or
or
sbb
addr16
fcom
mov
dec
gs
xor
xchg
shl
mov
insb
call
add
mov
rol
std
cmc
fidivs
mov
in
leave
bound
xor
mov
ror
aaa
pop
aaa
cmp
lret
lea
mov
fisubrs
ds
push
int
pop
inc
sub
outsl
add
ret
test
jno
or
je
hlt
movsl
dec
jns
inc
fcomps
ret
movsl
or
lcall
rcrb
ja
in
xchg
adc
popf
lret
int
mov
out
cmp
push
lods
loop
rorb
loope
aad
andl
es
inc
push
lds
jbe
movsl
xchg
push
push
sub
xchg
sub
sub
in
call
xchg
data16
jb
movsl
shlb
scas
mov
lock
icebp
orl
sub
add
sti
jno
and
mov
into
fcomps
aad
pop
xchg
adc
sbb
into
xchg
stos
flds
cmp
stc
sub
nop
subb
lret
movsl
mov
insb
cmpsl
adcb
and
outsl
imul
test
jl
pop
mov
ficomps
es
push
int3
rorl
xchg
mov
jne
sbb
pop
incb
mov
and
add
addb
mov
lahf
aas
jg
fs
cld
loope
push
inc
test
xor
dec
sub
lret
add
inc
mov
insb
pop
inc
xchg
jle
mov
inc
fdivrs
sub
mov
in
stos
sbb
sub
or
push
lock
insb
and
mov
xchg
pop
sub
rcrb
pop
sub
je
push
les
lock
dec
fwait
popf
test
into
lret
outsl
adc
pop
and
xor
and
or
jno
sbb
pop
dec
jge
mov
jbe
xor
outsl
in
hlt
fcmovnb
lret
daa
in
add
call
fldenv
dec
shrl
idiv
daa
fcoml
or
jg
dec
mov
shl
dec
fwait
out
in
jne
loopne
movsb
lret
mov
mov
out
movsb
add
mov
mov
jl
add
sub
sub
cld
and
cli
aam
int3
xor
int
test
pushf
xchg
nop
push
stc
pop
or
gs
mov
or
addr16
nop
and
pop
pushf
fistpl
sub
pusha
xchg
xor
dec
fisttps
scas
cmpsl
dec
les
into
addl
pop
cmp
iret
cli
mov
push
repnz
arpl
mov
loope
popf
jno
push
and
scas
call
bound
mov
mov
lret
sbb
jns
xchg
enter
inc
outsb
push
inc
sti
sbb
inc
rorl
inc
mov
icebp
mov
jbe
aas
mov
fidivs
jae
mov
scas
loopne
adc
add
xchg
cmpb
data16
inc
push
add
mov
mov
test
testb
mov
fmull
lea
cli
icebp
push
pop
or
movsl
shr
xchg
pop
inc
xchg
push
cs
pop
cltd
dec
pop
shrb
xor
push
cwtl
jmp
mov
xorl
adc
iret
sub
pop
out
mov
insl
shrl
lret
dec
popa
pop
add
mov
adc
test
add
fisubrs
cmc
in
lock
sbb
or
sbb
data16
jno
jle
pop
mov
imul
pop
sahf
mov
ljmp
cli
in
dec
sub
mov
adc
xchg
outsb
mov
sbb
and
cmp
pop
lret
or
gs
jmp
jne
int
mov
pop
xor
in
sbb
xchg
nop
jae
int3
sarl
push
xchg
xchg
xor
clc
or
das
into
nop
or
sbbb
addr16
pop
in
lods
aaa
test
fadd
sub
push
or
mov
stos
inc
mov
iret
or
add
dec
lock
addr16
xchg
sub
das
push
pop
ficompl
stc
cmc
push
lods
sub
dec
mov
push
mov
fwait
mov
loopne
jnp
inc
jne
addr16
mov
dec
sub
rclb
jmp
push
dec
ja
mov
xor
cli
das
stos
push
xchg
add
in
fstpt
pop
pop
in
orl
shlb
dec
nop
mov
movb
and
push
xor
xchg
cmp
ror
dec
mov
push
addr16
lret
shl
pushf
adc
inc
mov
scas
idivl
gs
shlb
sbb
cld
and
jbe
dec
lods
xor
jae
aaa
push
mul
adc
add
loopne
lods
aad
rorl
test
xchg
push
lods
aaa
push
pop
nop
cltd
ljmp
mov
inc
rcrb
stc
jo
cmpsl
push
mov
push
in
push
aaa
dec
shl
sbb
adc
sbb
push
push
push
or
fcoms
cmpsl
std
xchg
jmp
les
mov
addr16
movsl
leave
rclb
mov
les
add
ja
xor
pop
outsl
sbb
movsb
jg
int
push
in
rorl
mov
adc
dec
and
hlt
pop
ss
mov
mov
aad
in
push
bound
xor
inc
sti
lods
pop
lea
clc
enter
mov
js
or
loopne
test
push
stos
insb
sarl
into
jmp
mov
and
dec
into
fsubrl
hlt
sahf
mov
xor
sub
into
push
push
loopne
sub
inc
mov
mov
cmp
addr16
mov
fs
shr
mov
popf
lcall
jl
pop
adc
jle
test
adc
test
mov
jnp
movsl
shlb
jecxz
add
arpl
adc
add
je
mov
dec
inc
out
fstp
jne
in
dec
xchg
xchg
imul
xchg
dec
das
stos
fldl
aad
mov
cwtl
fsts
or
xchg
rol
jecxz
jp
cmp
pop
out
jecxz
jp
mov
in
mov
push
sbb
mov
add
dec
xor
jne
and
mov
xchg
mov
fistpl
dec
add
cmp
fnstenv
mov
aam
js
mov
addr16
inc
arpl
scas
jl
sti
add
roll
jmp
jmp
dec
mov
icebp
lcall
test
hlt
jno
mov
mov
ret
call
add
int3
fxch
pop
pop
adc
ja
inc
cmc
nop
and
repz
loopne
in
mov
mov
and
rcrb
add
cld
xor
xchg
dec
shlb
pop
mov
mov
xchg
aam
inc
cmp
xor
gs
leave
fisubs
mov
pusha
or
loopne
dec
adc
jb
and
mov
cltd
lods
insl
xchg
xor
aas
je
dec
push
inc
popf
ror
or
arpl
mov
jp
inc
aas
popf
sub
pop
pop
enter
std
jmp
xchg
ret
int
or
ud0
loop
pop
inc
shl
outsb
outsb
or
xor
dec
test
fucomi
addl
jp
or
je
sbb
popf
dec
arpl
push
sbb
out
addl
mov
xchg
js
scas
xlat
sub
shrl
pop
mov
and
sub
dec
fdivrs
aad
out
inc
lock
sti
adc
sub
loop
inc
sbb
lds
dec
roll
jp
and
cmp
push
mov
and
adc
mov
imul
push
adc
lcall
jg
push
into
or
sahf
cmp
jne
cmp
cwtl
fdivp
mov
loop
std
out
sbb
push
xchg
dec
mov
test
testl
pop
cwtl
sbb
and
mov
cli
jne
add
add
in
sbb
and
pop
xchg
pusha
cmp
leave
and
push
out
in
add
sub
and
add
aad
inc
ja
sbb
jbe
enter
dec
xchg
cmpsb
bound
pop
adc
mov
mov
jmp
cltd
add
leave
int
shr
and
mov
scas
into
jne
mov
fists
mov
jns
push
mov
outsb
scas
aas
jne
into
stos
mov
jbe
xor
fildl
test
xchg
push
dec
sub
loop
jbe
mov
pop
push
mov
mov
notl
sbb
or
dec
mov
adc
mov
mov
pop
inc
and
aad
sbb
mov
or
out
iret
sbb
vpcomuq
hlt
inc
shlb
fwait
or
mov
and
push
jecxz
sysexit
jo
out
stc
fcomps
fsubl
ja
addr16
scas
adc
shlb
nop
cmc
jmp
sbb
mov
jo
xor
sbb
movsl
insl
sahf
cli
ja
mov
xchg
mov
movsl
add
fs
jo
push
rcrb
outsb
pop
xchg
lock
add
notb
iret
push
push
bound
lahf
push
push
xchg
repz
rolb
je
ds
mov
mov
dec
shll
cmp
jmp
mov
sahf
push
gs
sbb
sahf
pop
sbb
lcall
mov
or
jmp
fdivrl
push
ret
push
dec
mov
insl
rcl
cmpb
js
popf
into
mov
mov
mov
and
mov
cmp
mov
into
jne
lods
pminsw
fldenv
jno
out
sbb
or
add
je
les
sub
movsl
addl
add
jle
adc
mov
test
sbb
xlat
notl
iret
cmp
or
les
movsl
mov
bound
or
push
shlb
std
xlat
adc
dec
imul
in
dec
xor
inc
push
mov
in
push
cmp
jne
in
xchg
xor
and
sbb
test
stos
mov
mov
ds
fnstenv
lods
xchg
out
cmpb
idiv
insl
loop
lcall
inc
mov
mov
mov
mov
jle
lock
repnz
cltd
out
testl
rcrl
push
out
mov
mov
test
aas
lock
lcall
xor
inc
aas
lods
sbb
inc
sbb
push
mov
test
mov
popf
push
xchg
popf
sbb
push
repnz
rcrl
out
cmpsb
pop
insb
lock
jg,pn
sub
sub
xlat
jbe
dec
fidivrl
and
sbb
sbb
cmp
data16
pop
fiaddl
dec
xchg
and
cmp
inc
cmp
orb
imulb
fidivrl
jb
ja
xor
pop
pop
mov
mov
dec
mov
sub
add
and
or
insl
ljmp
jbe
mov
adc
out
and
repz
inc
xor
cltd
scas
xchg
movsb
cmpsb
mov
mov
mov
and
out
add
add
jae
adc
dec
jb
jae
cli
push
push
jle
jo
int
insb
jne
jmp
xchg
cs
insl
dec
pop
jl
dec
mov
mov
jo
push
pop
xchg
mov
in
push
xchg
sbb
aam
outsb
scas
sub
xor
add
lahf
iret
sbb
rcll
stos
fidivrs
pushf
pushf
in
js
pop
push
push
add
and
fwait
xchg
xchg
or
daa
pusha
and
xor
mov
mov
rol
stc
bnd
mov
insb
test
sbb
pop
jbe
push
sub
aad
into
lods
pop
fadd
outsb
mov
pop
mov
xchg
dec
cmp
xlat
push
mov
mov
loopne
fsubrl
xchg
push
mov
mov
mov
sbb
js
and
aas
pop
test
int
mov
pop
stc
fnstsw
icebp
lock
fs
repz
inc
jge
jne
iret
imul
pop
cmp
testl
add
cwtl
cmp
icebp
cmp
inc
sbb
inc
xorl
out
sahf
int
dec
sub
pop
repnz
imul
dec
jle
cwtl
jnp
xchg
pop
scas
lahf
arpl
or
sub
xchg
insb
fiaddl
pop
sbb
arpl
cmp
mov
int
mov
dec
nop
push
pusha
scas
pusha
movsb
sbbl
sub
push
xchg
and
arpl
aad
mov
push
and
xor
fistpll
add
mov
outsl
xchg
ret
mov
add
bnd
fstpl
xor
shll
insb
and
dec
sbb
mov
movsl
push
lock
sahf
push
mov
stos
aaa
push
out
and
mov
mov
ds
xor
or
add
mov
mov
pop
push
mov
out
aas
push
dec
xor
clc
push
into
fildll
and
aad
dec
in
icebp
mov
adcb
stos
inc
and
jecxz
sbb
lea
jno
mov
fwait
dec
or
and
push
cmpsl
mov
push
jb
pop
movsb
out
ss
xchg
and
cmp
je
and
bound
or
call
daa
or
mov
adc
cmp
sbb
fstpl
shl
in
mov
pop
push
mov
divl
cwtl
ret
adc
xor
jp
shll
pop
adc
in
popf
push
sub
aas
sub
sti
dec
test
mov
fstpl
or
adc
adc
aaa
pop
cwtl
or
ret
stos
jg
popf
or
xchg
sub
push
inc
and
clc
popa
cltd
or
es
popa
lds
in
sub
lea
mov
inc
addb
lahf
rcll
insl
imul
mov
lret
cmp
lock
adc
lahf
mov
mov
cmc
cli
xor
jge
lcall
lcall
add
xchg
fnstsw
aad
and
or
xchg
mov
je
movd
add
cmp
and
jmp
push
lcall
jg
push
adc
sbb
hlt
cmpsb
in
mov
ret
cmp
inc
rol
out
add
add
xor
mov
arpl
push
jle
std
jmp
and
sbb
into
cli
les
adc
popf
dec
sbb
jo
mov
xchg
lock
cltd
fisubrs
add
fstpt
je
int3
gs
push
dec
lret
fadds
cwtl
xor
and
add
adc
jne
test
sub
jb
sarb
xor
lret
xor
xchg
ljmp
add
andb
scas
mov
sub
ss
out
dec
iret
xor
or
imul
in
add
test
and
mov
xor
dec
mov
imul
xor
xchg
sbb
adc
mov
shll
fs
lret
dec
lret
or
icebp
dec
pcmpgtd
inc
mov
mov
outsl
mov
mov
test
outsl
and
shll
cmp
adc
adcl
lret
push
sub
test
sti
in
jnp
or
or
jbe
dec
test
sarb
gs
into
xchg
sub
and
and
and
sbb
xchg
ss
adc
add
inc
fwait
sbb
fisubrl
cmp
lcall
dec
pop
mov
rcrb
sub
cwtl
inc
xor
fildll
adc
or
jl
push
outsb
pusha
fsubp
mov
popf
push
xchg
cmp
mov
outsl
shlb
and
ljmp
fsubr
jmp
jo
adc
adc
mov
sahf
xor
in
or
fstl
push
iret
adc
ljmp
jnp
dec
ret
js
gs
inc
push
ffreep
push
pop
dec
push
mov
inc
xor
cmp
and
out
push
push
mov
iret
scas
add
jnp
pop
loopne
inc
jp
out
xchg
jle
mov
icebp
inc
jecxz
popf
inc
aam
out
pusha
stos
outsl
adc
iret
push
add
sti
mov
add
pop
push
inc
sub
inc
inc
mov
mov
push
fdivrl
xor
push
jecxz
lods
mov
xchg
adc
mov
mov
repnz
inc
repz
repz
pop
ror
mov
mov
sbb
push
movsl
test
jg
daa
xlat
mov
and
mov
pop
mov
xchg
iret
imul
in
mov
xchg
push
cmp
out
in
call
or
sub
hlt
mov
lods
cmp
inc
test
fisttpll
or
mov
push
outsb
frstor
cmp
cmpl
in
push
rcl
scas
sbb
shlb
bswap
mov
dec
or
lock
xchg
decl
add
int
sbb
stos
add
inc
lods
enter
fldl
adc
adc
inc
xlat
stos
adc
aad
jne
fmuls
adc
clc
ret
gs
mov
mov
subb
fists
mov
xchg
popa
jnp
rcrl
scas
in
push
sub
cmp
mov
jbe
pop
int3
sbb
arpl
xchg
or
mov
push
adc
lea
pushl
jo
aam
inc
aaa
mov
mov
inc
sti
jno
jne
push
stos
jnp
adc
nop
sahf
outsb
mov
cmp
xlat
adc
popf
lock
mov
test
outsl
pop
dec
xchg
add
fnstcw
xor
lods
out
jmp
push
cmp
ljmp
mov
movsl
ljmp
fildll
jbe
dec
mov
sub
pop
and
xor
jo
pop
mov
mov
in
ja
pop
icebp
adc
xchg
cli
and
and
ds
ret
scas
stos
or
cmp
scas
aad
add
pop
arpl
mov
lods
arpl
adc
push
in
or
mov
jmp
sub
adc
cmp
jnp
loope
cmp
jmp
inc
icebp
mov
faddl
mov
add
jge
xor
lret
dec
pop
insb
dec
imul
and
xchg
xchg
in
jle
fwait
sti
fstps
pop
imul
mulb
aad
adc
addl
mov
pop
jne
push
push
pop
loop
push
shll
sub
cwtl
cli
add
or
xor
add
and
push
and
add
fs
inc
insl
inc
imul
clc
and
jge
inc
jno
rorl
loopne
xor
or
outsb
or
popa
jnp
ficompl
add
call
shlb
out
xor
push
daa
mov
dec
cmpsb
xor
icebp
movl
jg
cmp
sarl
ret
div
sbb
test
pop
jae
sbb
div
lret
mov
stos
mov
sub
xorb
push
sahf
sub
stos
push
xor
loopne
dec
mov
push
sub
cltd
or
mov
xchg
cmp
inc
aad
mov
fdivr
out
lahf
sub
test
mov
xchg
loopne
and
std
inc
xchg
cmc
push
lods
and
pop
add
and
push
cmp
inc
sub
addr16
jg
jns
mov
div
cli
fidivrl
push
arpl
popf
or
movsl
pop
inc
icebp
rolb
mov
sub
ja
clc
fwait
sbbb
mov
dec
xchg
push
xlat
sbb
jb
pop
idivl
add
pop
enter
pop
push
stos
and
imul
jno
icebp
cltd
jnp
test
int3
or
pushf
jb
arpl
mov
sub
sub
and
xchg
xor
mov
or
push
cmp
xchg
pushf
mov
call
jge
loop
outsb
cmpl
add
aaa
mov
ficompl
dec
pop
in
enter
mov
xchg
push
mov
gs
imul
inc
add
scas
out
jge
pop
cld
inc
mov
dec
js
fs
jmp
cs
imul
mov
and
in
aas
push
jo
add
push
mov
dec
add
mov
xor
add
inc
or
enter
insb
movsl
push
imul
loopne
in
rol
inc
inc
rolb
hlt
sub
and
jno
sbb
dec
ljmp
sahf
xchg
pop
xlat
xlat
inc
hlt
test
jae
pop
dec
or
mov
jmp
push
push
pop
push
bound
dec
lret
dec
fwait
and
inc
js
and
in
mul
push
xor
test
data16
xor
shrb
push
leave
mov
not
mov
xlat
xor
jle
push
nop
imul
clc
aaa
ret
repnz
or
mov
stos
mov
xor
jmp
ficoms
int3
outsl
faddp
aaa
aad
fwait
in
jl
inc
pusha
push
dec
stos
loop
jne
pavgb
jnp
push
jns
inc
int
sbb
mov
pop
daa
rclb
aas
mov
test
daa
mov
movsl
dec
fidivs
shlb
dec
mov
jl
addr16
icebp
sbb
and
rclb
adc
sub
push
sub
jge
out
fidivl
aam
test
das
lods
mov
push
xchg
in
mov
loop
mov
jp
adc
push
js
add
add
inc
mov
lret
or
add
mov
cld
es
nop
cmp
cmp
notb
push
inc
pop
sub
jecxz
lret
xchg
dec
xrelease
out
push
or
pop
sub
lods
pop
jne
pop
cmp
punpcklwd
and
stos
cld
ja
mov
sub
push
or
xchg
pop
loop
mov
data16
rcl
out
int3
fsubr
and
ljmp
xor
sbb
pushf
or
mov
loope
or
mov
cmp
les
dec
cs
bound
mov
add
stc
adc
sbb
push
push
pop
daa
ficomps
xchg
sbbl
pop
push
or
stos
pusha
inc
pop
pushf
and
fdivp
and
enter
add
xor
lods
sar
push
mov
dec
into
jae
xchg
daa
dec
mov
sbb
rcl
mov
xchg
jle
loope
clc
mov
sbb
ret
and
repz
ds
push
mov
stos
pop
into
jne
std
lods
loope
lods
xor
xchg
daa
in
jmp
sub
pop
testl
imul
add
push
leave
fstps
int
pushf
mov
add
xchg
mov
and
mov
add
es
jmp
aas
inc
fdivr
out
enter
jle
loopne
or
icebp
dec
in
push
push
xor
inc
dec
popf
inc
je
mov
into
fildl
insl
adc
mov
pop
lds
mov
scas
jne
aaa
inc
lcall
lds
js,pt
icebp
imul
dec
aam
cld
mov
ljmp
xor
sbb
fs
mov
rep
xchg
clc
aad
int3
jg
cmpsl
mov
pop
bnd
stos
adc
sbb
stos
push
aas
add
pop
lock
cltd
test
movsb
lock
cmc
inc
dec
xchg
cmp
inc
hlt
mov
lcall
and
jmp
inc
lds
aas
jp
mov
jne
nop
adc
adc
or
inc
nop
imul
mov
aam
test
jecxz
cli
xchg
lahf
insb
jmp
mov
fmul
mov
into
push
addr16
or
or
push
dec
sarb
stos
pop
shll
out
aas
in
push
xchg
mov
inc
in
push
xor
push
sbb
and
out
in
imul
faddl
push
iret
inc
mov
enter
mov
dec
push
imul
dec
mov
adc
iret
daa
fimull
jg
cmc
ljmp
clc
push
fbld
shlb
outsb
fnstsw
lock
jecxz
rclb
xchg
ret
mov
inc
in
movsb
ljmp
mov
shr
leave
mov
push
or
dec
xor
pop
sub
mov
dec
pop
nop
adc
int
xchg
stos
push
xor
outsl
popa
push
js
int3
pusha
lcall
int3
pushf
jae
pop
or
or
shrl
dec
stc
dec
les
mov
data16
mov
push
jle
sbb
inc
mov
ffreep
mov
scas
std
daa
or
pop
push
and
xchg
xchg
cmp
or
iret
pop
psllq
pmaxsw
lea
and
lret
adcb
in
xor
mov
cmp
mov
lret
xchg
xchg
enter
cld
addr16
dec
lock
lahf
daa
movsl
outsl
sti
stos
shrb
mov
clc
lcall
mov
aas
dec
xchg
xor
jle
sbb
or
push
or
xchg
mov
sub
jno
jb
inc
movzbl
jo
or
int3
ret
xlat
push
ja
xchg
test
lock
and
clc
pop
mov
out
push
dec
fldcw
mov
cmp
sti
cltd
daa
mov
adc
mov
out
sub
cmc
movsl
dec
mov
mov
jns
push
push
imul
lock
imul
sub
add
in
shlb
fcompl
adc
and
mulb
xchg
add
jp
pop
cs
out
inc
roll
test
sub
cmpb
je
mov
das
sahf
dec
nop
cli
pusha
add
jbe
enter
lods
sahf
mov
push
in
mov
jae
sbb
or
inc
mov
dec
pop
scas
or
mov
mov
mov
mov
push
lea
push
or
das
or
add
push
jns
fcomip
mov
movsl
sub
xor
in
pop
in
push
pop
js
mov
or
out
mov
mov
jp
rcl
call
mov
loopne
lods
inc
fnstenv
lcall
or
or
lods
and
sarl
mov
mov
stos
loopne
rolb
mov
jmp
mov
dec
sbb
push
pop
sbb
inc
js
mov
in
push
push
jno
mov
cs
sbb
adc
mov
jp
pusha
arpl
or
rcl
lret
cmp
xchg
movsb
das
shlb
pop
in
cmp
inc
sbb
sbb
mov
mov
loop
cmpsb
lea
outsb
inc
add
mov
fcomi
rcll
and
and
cmp
xor
ror
mov
out
mov
cmp
jae
movsb
iret
or
das
sarb
sub
inc
sbb
sbb
inc
cs
xchg
add
sbb
pop
pop
inc
ljmp
cmp
mov
xchg
pop
dec
lahf
int
dec
mov
xchg
loope
or
xor
loop
push
sbb
xor
fwait
mov
and
insl
cmpl
xchg
cmp
adc
loop
cmp
les
bswap
sbb
pop
test
outsl
int
push
cld
mov
add
out
jl
push
mov
inc
stc
sbb
stos
jecxz
jl
ds
flds
pop
add
imul
fisubl
aam
fbstp
sbb
dec
sbb
mov
int3
fucomip
addr16
and
test
fldcw
mov
loop
in
dec
in
out
push
testl
int
fdivs
notl
push
ss
aam
jp
nop
test
outsb
fucomp
enter
lock
iret
dec
cmovle
fs
cmp
jns
adc
iret
aaa
mov
pop
sahf
insl
xchg
mov
adc
pop
rcrl
push
roll
nop
xor
icebp
filds
push
daa
xchg
insl
imul
or
arpl
add
xor
mov
sbbl
sarb
and
stc
js
mov
jmp
fs
jge
fisubrl
or
sbb
data16
sarl
or
push
icebp
xor
icebp
rcrb
mov
xchg
push
sti
filds
loop
lock
xchg
ja
ret
push
adcb
iret
or
fistpll
xor
clc
jbe
psllq
aas
dec
das
push
push
bound
enter
add
outsb
fdivl
dec
addr16
push
jbe
popf
mov
insl
movsl
push
shrb
jg
adcl
in
fstps
xchg
daa
movsl
mov
dec
mov
dec
pop
pop
in
xchg
dec
shl
ficompl
mov
push
mov
xor
add
jnp
mov
mov
and
testl
shll
mov
cmp
push
xlat
shll
insb
rclb
adc
aad
lods
lea
jo
test
pushf
dec
push
fcompl
pop
sub
aad
pop
xchg
shll
sub
or
jb
ret
sti
fcmovnbe
adc
xor
cwtl
lock
push
cmp
cmc
inc
call
outsb
dec
std
xor
add
iret
lret
dec
sbb
pop
xor
pminsw
and
lock
inc
out
mov
ds
jp
mov
fcomps
jg
mov
ss
sbb
pop
incb
movsb
push
cwtl
in
and
xor
dec
push
popf
or
mov
hlt
scas
xor
cmp
pushf
xor
xchg
loopne
mov
xlat
push
add
scas
xor
and
pop
popa
and
inc
jns
inc
ljmp
fiadds
cmp
jecxz
repnz
pop
stos
lret
sbb
cmp
rcl
mov
jbe
sti
lds
mov
jns
pop
shr
pop
inc
test
pop
cltd
sub
fdivl
daa
mov
fisubrs
repnz
mov
cmpsl
jmp
in
xor
fsts
mov
ds
jge
pop
dec
sti
push
push
sub
lret
or
in
sbb
sub
fidivl
add
inc
arpl
push
adc
or
adc
and
pop
loope
sarl
mov
and
test
add
ds
call
and
clc
fs
daa
cwtl
and
popf
jp
repnz
pop
xor
xchg
loop
icebp
aam
adc
add
bound
pop
pushf
loop
mov
ljmp
cwtl
dec
mov
cmp
add
inc
inc
pmulhuw
in
add
jne
jo
xchg
mov
sbbb
pop
push
xchg
rcll
imul
and
gs
sbb
pop
aas
not
lds
add
popa
mov
pop
neg
dec
push
stos
pop
dec
adc
lret
xchg
cmpsb
mov
sbb
mov
outsl
pop
cmpsl
adcb
stos
jnp
push
fdiv
aad
ret
add
jno
mov
cmc
and
arpl
aad
mov
and
stc
bound
jmp
imul
cmp
ret
jl
sti
push
inc
push
rclb
mov
sbb
sub
sub
aas
in
out
cmp
aam
jns
mov
decb
adc
pop
jo
adcl
sbb
fmull
jb
outsl
inc
cmp
sbb
sub
cmp
mov
sbb
dec
gs
sub
orl
sbb
adc
pushf
test
inc
cmp
mov
repnz
shll
push
icebp
xorb
mov
mov
push
scas
mov
xor
movsb
fsubs
xor
pop
ljmp
sbb
add
cld
mov
les
fldl
mov
mov
add
dec
outsb
and
je
loope
sbb
fst
aam
movb
mov
lock
ja
cmp
aaa
add
xlat
xlat
xor
ret
fcomps
push
repz
mov
pushw
test
and
push
xor
lret
lahf
jp
das
mov
push
sub
sbb
push
subb
sti
xchg
push
lret
mov
icebp
movsl
pop
adc
cmp
pop
movsb
adc
ret
pop
je
jecxz
and
rcll
movsbl
fcompl
jbe
jp
popf
xchg
shl
cmpsl
dec
out
loopne
pushf
iret
mov
dec
andl
pop
inc
pop
js
scas
in
sub
mov
stc
inc
enter
ds
push
xor
mov
insl
jns
mov
and
cmpsl
xchg
mov
js
adc
in
repnz
fwait
dec
divl
cwtl
das
cmc
imul
daa
test
push
sbbb
xchg
repz
mov
jo
add
arpl
pop
sti
js
xchg
pop
icebp
push
movsl
xchg
cltd
into
stc
add
in
sarl
push
jg
rcr
jle
sub
or
inc
dec
fnstcw
je
and
mov
loopne
repnz
andl
push
cwtl
aaa
jae
or
sbb
mov
icebp
pop
push
sarl
pop
shll
or
xchg
cmpsl
xchg
cmp
pop
flds
push
es
or
pop
sahf
les
xchg
out
insl
xor
shrl
dec
divb
faddl
in
dec
aad
cmpb
jno
sahf
or
pop
adc
xchg
out
ljmp
jecxz
pop
adc
out
dec
cmp
fnstenv
sbb
add
scas
mov
jb
lea
leave
ret
adc
test
pop
add
popf
or
cs
and
dec
xor
les
fisttps
push
insl
stos
push
frstor
popf
jecxz
ficoml
xchg
fisubl
iret
mov
or
inc
insb
mov
test
fwait
push
shlb
sahf
bound
loope
or
lret
xchg
or
pushf
scas
out
cmp
movsb
sbb
push
sar
addr16
sbb
cwtl
xor
xor
fstpt
adc
adc
sub
call
add
shlb
imul
out
rclw
lock
add
cmp
sbb
cltd
mov
bound
mov
int
lods
nop
mov
and
add
ja
int
pop
mov
in
filds
and
loopne
xchg
outsl
push
lds
inc
shrl
leave
mov
mov
mov
out
xor
sub
push
andl
pop
lret
add
hlt
cmpl
cli
push
jae
mov
sbb
mov
cmp
sbb
sub
clc
js
mov
dec
jno
test
dec
xchg
aam
arpl
stc
or
add
pusha
jno
push
and
iret
inc
sti
or
iret
xor
or
inc
out
mov
in
bound
cmpsl
xchg
mov
cld
ret
sti
mov
mov
adc
enter
les
inc
push
push
loopnew
test
lahf
or
cmp
sbb
cmc
fsubs
outsb
and
orb
test
rol
xchg
dec
repz
icebp
pop
push
fs
ret
ja
inc
jecxz
push
arpl
or
pop
sahf
mov
int
xchg
das
jle
mov
hlt
cmp
ja
jp
cmp
daa
cmc
cmp
stc
and
repnz
and
ja
adc
test
mov
out
jmp
mov
test
jae
adcb
scas
test
mov
adc
aas
stos
bound
add
sub
xchg
mov
dec
aas
out
dec
popf
lods
idivb
sub
push
lcall
iret
iret
jecxz
pop
mov
out
push
int
or
repnz
or
pop
sub
fsubrl
cwtl
cmpsb
cli
mov
ja
enter
xor
mov
stos
lahf
and
add
frstor
outsb
fimull
test
mov
iret
lcall
in
lret
gs
rclb
push
fsubs
repnz
cwtl
ja
ljmp
pusha
stos
push
jno
sub
add
sub
mov
add
mov
lock
pop
fcomps
or
mov
ret
pop
pop
dec
cmpsl
push
jnp
and
pushf
xchg
xor
addr16
test
sahf
test
pop
pop
cmp
xchg
mov
fildll
addb
adc
mov
sarb
dec
cmpb
sti
xchg
push
or
outsb
xor
adc
xor
xor
xor
mov
pop
lds
in
adc
lret
test
cltd
xchg
jno
inc
and
rolb
mov
jnp
push
pop
pop
decb
sub
iret
movb
aas
cmpsb
loopne
add
xchg
nop
mov
lds
lock
out
in
js
push
and
je
jmp
int3
bound
xchg
cmp
fidivs
inc
daa
pop
add
mov
shll
inc
bound
xchg
dec
mov
bound
shlb
cltd
neg
push
sbb
sbb
aam
and
aaa
fwait
dec
mov
mov
push
adc
jbe
out
jge
push
repz
pop
iret
xchg
aam
mov
mov
aam
lods
test
icebp
xor
xor
dec
or
adc
dec
test
adc
mov
inc
sub
push
adc
lods
lea
push
xor
cmp
pop
sti
mov
adc
ret
mov
enter
repz
jno
dec
jge
out
aam
sub
sub
iret
fs
mov
jmp
test
inc
mov
or
aas
adc
lcall
jg
xlat
ljmp
popa
mov
aaa
jecxz
div
lretw
sub
fildll
mov
mov
sub
xchg
add
out
insl
dec
xor
lcall
jg
add
sbb
inc
mov
sbb
inc
sbb
imul
roll
jns
sub
adc
insb
clc
loopne
ja
and
jns
ss
or
cwtl
inc
stos
cs
lahf
xor
aas
fcomip
out
mov
adc
sahf
and
test
sbb
lds
aaa
not
push
ret
std
out
mov
mov
icebp
loope
cltd
pop
pushl
xchg
or
dec
pushf
xchg
xor
jp
mov
insb
mov
mov
orl
insl
add
into
pop
push
iret
push
lods
mov
cmp
inc
sub
mov
mov
nop
jle
push
push
inc
stos
lret
scas
dec
sti
aas
jne
repz
xor
mov
pop
mov
sub
mov
add
xchg
ret
ja
incl
push
pop
mov
mov
les
mov
sbb
insl
or
lds
push
scas
add
mov
in
sahf
bound
aad
cmp
out
test
mov
repnz
test
sbbb
push
daa
push
sahf
rcrb
imul
pushf
aad
mov
outsl
mov
ja
imul
jnp
imul
cmp
mov
pushf
jo
decb
cmp
adc
push
jp
mov
test
mov
jle
cld
call
push
cmpsb
out
aad
test
jecxz
es
pop
inc
mov
arpl
sbb
popf
sub
fstps
jns
jmp
arpl
out
fimuls
adc
xchg
lret
jge
inc
lret
dec
sahf
xchg
inc
outsl
pop
fst
sbb
xchg
jg
cs
pop
push
sti
das
sbb
popa
cmp
xor
call
std
les
js
sahf
inc
iret
insb
cmp
addr16
or
or
push
pop
cmp
into
push
movsb
shr
cmp
aad
adc
inc
lahf
inc
insl
je
mov
arpl
aaa
and
xor
outsb
movsl
aad
enter
fildl
mov
xchg
outsb
aad
dec
jne
jnp
je
jle
sbb
lock
fldl
data16
js
into
inc
in
inc
cld
pop
push
data16
add
cmpsl
cmp
push
jbe
jle
jle
adc
sub
fmull
sbb
adc
adc
adc
push
jbe
insb
mov
fstps
ljmp
mov
repz
jg
cld
testl
nop
addb
jne
popf
push
loope
loope
insl
insb
mov
mov
das
sub
lahf
pop
aas
fldcw
inc
or
shlb
adc
hlt
test
cmp
es
sub
aam
test
lea
xchg
jmp
jle
adc
jno
sbbl
repnz
outsb
in
mov
and
mov
loop
and
dec
mov
cmp
imul
mov
pop
je
std
aam
ljmp
jb
outsb
dec
jp
sti
jne
ss
movsb
mov
inc
data16
jnp
js
pop
fnstsw
fimuls
pop
mov
test
xchg
shrb
out
pop
mov
push
xor
xchg
mov
mov
push
lock
add
clc
std
mov
push
loope
mov
fldt
mov
shrl
pop
mov
add
rcrb
dec
aaa
mov
mov
push
xlat
add
nop
push
jp
int3
ret
iret
cmpsl
jbe
movsb
pop
pop
mov
xchg
and
loopne
jge
daa
sub
es
cmp
jmp
fisubl
stos
xor
pop
bound
and
call
sahf
or
mov
lret
cli
roll
mov
sub
repnz
push
pusha
mov
pop
sbb
int
jmp
mov
xchg
jl
adc
adcb
and
sbbl
loop
rcrl
insb
push
push
cmp
loopne
jp
in
dec
outsb
pop
bound
mov
or
pop
mov
in
outsb
push
pop
dec
mul
add
mov
ds
mov
pop
push
out
shrb
lcall
add
mov
jmp
sahf
test
std
addr16
shlb
push
cmp
sub
adcl
in
iret
jns
jmp
sub
aad
je
jge
fimull
xor
inc
sbb
aaa
outsb
push
sub
rol
cmp
cmp
filds
jo
and
lock
stc
lret
pop
jnp
lahf
js
daa
test
mov
adc
xor
and
imul
inc
sub
repz
and
call
pop
or
testb
jge
fisubs
mov
data16
xchg
push
fstp
addr16
and
and
sbb
aas
mov
in
inc
xor
push
push
in
ja
jbe
cmp
jl
loop
call
mov
call
dec
and
mov
mov
lea
lret
pushl
popa
dec
lock
mov
pushf
pop
xchg
mov
loopne
pop
mov
in
in
add
dec
sub
inc
mov
xor
and
sub
mov
mov
out
aam
sahf
arpl
out
push
popa
mov
rep
loope
push
xchg
mov
xor
mov
ficoms
and
jno
test
cli
lret
inc
pop
xchg
out
mov
inc
mov
inc
stos
cmp
bound
cmp
in
test
mov
bound
aaa
push
sbb
xlat
stos
xchg
jp
fwait
mov
les
ret
out
dec
xchg
roll
jne
dec
sub
dec
pop
lcall
xchg
sbb
mov
mov
popa
mulb
mov
jnp
mov
scas
xchg
js
ja
mov
ficomps
test
adc
cltd
add
xorb
sub
inc
jle
test
fyl2xp1
cmp
pop
sub
loop
repz
cmp
mov
nop
and
insl
addb
mov
add
mov
pop
sahf
insb
mov
cmp
ja
jne
mov
inc
icebp
xchg
cmpsl
call
inc
dec
cmp
inc
and
add
lock
jge
outsl
lds
sbb
xchg
pop
cmpsl
fsts
lods
add
push
ret
imulb
push
cmp
pop
push
sbb
stos
sbb
mov
and
jl
cmp
push
cli
xor
mov
mov
push
sbb
in
add
fld1
nop
pop
addr16
push
ja
insb
mov
push
pop
call
push
mov
dec
xor
mov
call
sbb
or
mov
sbb
xchg
out
and
test
js
cmp
fnstsw
fiaddl
dec
xor
jmp
insl
pop
shrl
ljmp
jg
pusha
inc
cltd
pop
push
enter
mov
or
fcoms
out
mov
repnz
mov
and
dec
or
dec
push
rcrl
stos
sti
cmp
mov
push
and
sbb
insl
out
cld
xor
dec
push
nop
jp
pop
xbegin
ss
jno
jb
addb
or
xchg
cli
in
and
sbb
and
ret
jae
mov
xor
and
mov
add
out
nop
xchg
xor
push
add
xchg
jmp
testb
jae
inc
sbb
dec
cld
lock
out
loope
dec
sarb
push
pushf
fsubrl
jl
dec
inc
xchg
jecxz
mov
add
jp
aaa
std
sbb
pop
hlt
mov
ret
pushl
js
push
leave
sbb
repnz
imul
xchg
dec
lret
dec
data16
pop
adc
mov
orb
sarl
and
fs
dec
and
stos
cmp
loopne
mov
jmp
xchg
outsb
cli
mov
stos
pop
push
cs
call
mov
stos
or
sub
incl
or
mov
sbb
pop
or
inc
cmpsl
dec
std
push
mov
sub
icebp
and
mov
dec
es
cld
dec
pop
lods
div
mov
ja
mov
inc
cmp
out
bound
lahf
pop
rorl
add
scas
addw
lods
jg
psubb
mov
aaa
orl
push
fbstp
or
daa
jl
push
das
jp
xor
es
xor
pop
push
lcall
adc
cld
loop
imul
mov
push
xchg
push
xchg
mov
add
pop
dec
or
inc
pop
gs
add
sub
repnz
inc
imul
loop
scas
je
or
cmp
add
add
fidivs
cmpsl
pusha
cwtl
pop
lds
sbb
in
xchg
sbb
lds
ljmp
jno
jle
test
xchg
mov
arpl
add
idiv
lds
repz
inc
mov
rcr
cmp
mov
stos
repnz
popf
cmp
out
sarl
test
xor
xchg
xor
ret
scas
sbb
jbe
xchg
push
mov
cmp
cmpb
ficompl
dec
mov
mov
dec
mov
ret
lock
pusha
or
ja
mov
adc
out
mov
xorb
mov
add
dec
insl
mov
inc
leave
mov
daa
sti
in
inc
icebp
xor
inc
rcrb
xchg
in
clc
notl
nop
jecxz
xchg
jmp
xchg
cmp
fwait
xlat
and
icebp
std
into
mov
jno
aaa
mov
mov
dec
test
adc
jp
pop
mov
xor
movlps
mov
test
dec
mov
jl
test
leave
lahf
aaa
add
ja
mov
ljmp
inc
daa
xchg
imul
pop
std
lods
call
notb
xor
push
das
xchg
out
test
mov
adc
inc
jge
push
cmpb
out
sub
aam
and
cmc
orl
cs
mov
cs
lods
popa
jle
jno
sti
lret
movb
inc
fdivs
es
rcl
test
imul
xchg
in
add
cld
lock
loopne
dec
daa
xchg
les
mov
inc
out
mov
popa
nop
and
dec
inc
pop
popa
in
xchg
jnp
push
cmp
push
shll
in
dec
sarl
popf
aas
sbb
rcrl
fs
ljmp
hlt
movsb
daa
mov
or
test
pop
stos
insb
frstor
in
jmp
or
test
cmp
mov
fcomip
add
icebp
pop
xor
jmp
jno
lcall
outsb
adc
sbbl
cmovl
or
mov
xchg
out
shl
insb
cmpsb
inc
stos
pop
ret
and
stos
dec
test
pop
and
jg
cmp
cmp
fs
sub
push
icebp
inc
jno
repz
push
jp
and
sbb
imul
mov
testb
pop
sub
sahf
and
push
out
imul
fs
fs
xchg
mov
mov
pop
arpl
in
inc
xchg
sub
jl
jo
test
mov
lret
icebp
jmp
sub
inc
dec
xor
cmpsb
cmp
imul
xor
in
hlt
sub
jl
int3
das
mov
xor
fnop
test
ret
push
mov
jno
cmp
sbb
push
int
jno
pop
mov
repz
clc
lea
stc
ret
fiaddl
loope
or
jg
xor
add
adc
repnz
sub
xor
jge
insb
clc
fbld
insb
aad
movsb
in
jbe
cs
stos
outsb
add
or
insb
pop
ret
xlat
sbb
imul
or
les
inc
cmp
fimuls
adc
add
sub
data16
add
loop
outsb
mov
out
push
xchg
mov
sbb
or
sub
jp
popf
sbb
xchg
inc
sub
jb
popa
cmp
add
loop
shl
mov
mov
xor
sbb
pop
push
andl
sub
popf
out
push
cmp
stc
daa
addl
sub
mov
rcrl
std
jle
sbb
xchg
xor
cmp
in
popa
or
fwait
les
push
or
outsb
push
dec
popa
push
xor
xor
mov
dec
or
sbb
test
lcall
jns
xchg
mov
stos
pop
sbb
daa
and
lcall
arpl
inc
ss
cmp
inc
inc
lret
mov
jns
mov
and
loopne
lock
js
aam
getsec
aam
loop
lods
mov
call
lret
sub
jge
and
dec
test
bound
pop
mov
jb
jnp
lds
inc
lods
push
std
cltd
movsl
mov
imull
cmp
inc
test
jle
mov
pop
mov
pusha
and
or
das
aad
add
cmp
repnz
fbld
xchg
std
sbb
dec
pusha
jmp
dec
ja
mov
fidivs
sub
push
mov
jbe
mov
xchg
mov
push
or
arpl
jnp
shrl
adc
cli
mov
mov
push
jbe
mov
cmp
jg
dec
add
push
lods
push
or
insb
mov
cwtl
aas
cmpsl
inc
rcll
inc
sub
cmc
imul
bound
xchg
mov
inc
mov
xor
sbb
push
sub
adc
or
pop
add
scas
enter
add
cmpsb
test
bound
adc
push
cltd
adc
imul
jbe
inc
cmpsl
stc
cmc
daa
fistl
add
hlt
push
pop
mov
cmp
pop
mov
jl
js
loop
jb
sub
mov
popf
je
xor
fldl
inc
cmp
popa
js
test
mov
sub
pop
pop
or
dec
in
mov
std
test
int
jnp
push
xor
and
jo
add
hlt
xchg
mov
jp
test
aam
movsb
filds
addb
sub
fldenv
sub
pusha
sub
add
or
xor
sub
inc
fcoml
adc
inc
imul
insb
clc
and
jnp
push
adc
or
add
ljmp
jbe
and
test
lcall
sbbl
pop
push
mov
stc
xchg
cld
jb
sahf
insb
ljmp
outsl
mov
sub
jns
cmp
pop
or
mov
fldcw
outsb
roll
cmpsl
mov
jo
pusha
inc
imul
cmp
mov
mov
cwtl
xchg
arpl
lds
leave
stos
jecxz
in
add
push
mulb
pop
cs
lea
adc
pop
daa
xor
push
pop
out
cmpsb
int
push
sbb
push
incb
daa
adc
stc
cmp
xchg
sub
xor
dec
xchg
mov
iret
ret
jl
push
inc
iret
adc
and
out
cmpsb
out
pop
inc
xchg
and
jo
jmp
dec
insl
notb
loope
vcvttpd2uqq
inc
nop
cs
sbb
clc
mov
popf
mov
outsl
cs
lcall
cwtl
xchg
int3
mov
dec
dec
mov
stos
mov
arpl
shrl
cmp
repz
loopne
ret
sub
stos
mov
push
fdivr
in
mov
insb
and
mov
jp
xor
sub
sti
movsb
adc
out
sub
jge
push
pushf
sub
inc
cmp
iret
addr16
jne
mov
push
mov
mov
lcall
lock
sbb
inc
pop
push
notb
and
outsb
dec
pushf
dec
insb
daa
aam
sahf
lret
push
hlt
jp
cmpsb
into
out
xchg
out
adc
mov
hlt
in
mov
hlt
aaa
jnp
mov
pop
fwait
cli
mov
fcomps
cmc
inc
xor
or
xlat
mov
push
xchg
cmp
in
pop
filds
fs
cmp
dec
jl
push
sbb
ret
cmp
mov
nop
mov
arpl
outsl
repz
repnz
jmp
push
sub
mov
std
pushf
cmp
dec
jle
mov
mov
jb
inc
sub
or
mov
ja
adc
and
inc
aaa
movsl
mov
push
mov
faddp
test
sub
aam
cmp
or
hlt
call
mov
ret
xor
xor
jmp
or
js
dec
push
xor
sbb
lret
int
adc
add
add
add
cmpsb
scas
dec
sbb
xchg
arpl
sub
rclb
repnz
dec
push
sub
jno
push
add
push
fildll
pop
add
lahf
frstor
fisttpll
sbb
in
popa
fldt
lods
subb
sbb
pop
aaa
pop
dec
xchg
jbe
out
mov
push
in
and
push
sbb
repnz
call
xchg
in
or
test
inc
jl
notrack
mov
push
out
mov
xchg
imul
les
pop
add
fdivr
lret
mov
adc
fsubr
in
out
inc
jp
leavew
xor
orb
and
fisubrl
in
in
repz
fistps
adc
lea
bound
xchg
rclb
jnp
xor
mov
cmp
dec
or
clc
xor
sub
pop
aaa
stos
out
stc
cmp
mov
sti
js
fmull
cmp
pushf
mov
aam
and
pop
push
lret
sbb
shrb
xorl
xchg
mov
ret
je
mov
dec
sbb
cmp
aaa
pop
sbb
dec
in
lea
mov
jb
iret
jl
mov
adc
aaa
dec
into
and
cmp
idivb
xor
jmp
lret
adc
pop
das
call
test
mov
popa
cmpsl
sbb
repz
out
or
roll
mov
and
adc
ja
push
lock
out
shlb
sub
jbe
mov
icebp
rcrl
jmp
movsl
mov
fs
jo
mov
adc
lods
mov
inc
inc
xorl
jne
fadd
loop
sbb
xchg
adc
push
mov
addr16
sub
fs
push
fs
dec
in
mov
add
inc
fs
cmp
add
sub
jns
lods
repz
jnp
xchg
cmp
jno
in
lds
and
imul
push
imul
ja
adc
std
push
or
push
ljmp
std
jae
fisubl
scas
push
rcll
outsb
push
xchg
sub
orb
sbb
fs
push
pop
dec
repnz
jg
leave
jnp
loopne
mov
imul
je
inc
dec
sti
xchg
push
dec
sub
jne
lock
jo
jl
mov
inc
mov
jb
jmp
outsb
add
sti
mov
mov
shlb
lret
jne
icebp
ret
xchg
das
fiadds
cwtl
aaa
inc
mov
arpl
push
cwtl
or
pop
push
add
mov
insb
dec
push
jnp
in
ret
inc
repz
mov
jae
incl
and
ljmp
add
pop
and
fwait
hlt
adc
jno
addb
pop
insb
ja
call
repz
call
xchg
loope
inc
push
mov
fadd
fmuls
jmp
add
cs
aad
scas
shl
in
jb
test
cmpsb
pushf
sbb
xchg
inc
inc
mov
call
push
je
jo
jbe
js
addl
sbb
lods
fcomps
fs
sbb
mov
push
imul
xor
jo
imul
lods
mov
mov
mov
aam
pushf
adc
push
dec
ret
leave
jnp
inc
ljmp
popa
rcll
test
test
lods
pop
xor
inc
in
cmpsb
push
fistpll
sbb
add
sahf
je
cwtl
push
mov
iret
in
pop
or
das
and
fistl
adcb
mov
dec
sub
sti
out
mov
mov
rcrb
xchg
cld
stos
sub
mov
popf
inc
adc
mov
cmp
jnp
or
gs
outsl
adc
loope
cli
cmp
pop
jge
mov
sub
xchg
cs
cwtl
jg
push
and
dec
xor
cmp
test
mov
imul
mov
ret
lock
adc
jmp
iret
jns
insb
xchg
jle
dec
iret
fnstsw
push
sub
daa
call
jl
xchg
icebp
sub
mov
stc
dec
ljmp
sbb
ljmp
or
das
test
add
lret
pop
inc
add
leave
cmp
into
lea
push
xchg
shlb
insl
lret
xchg
or
pop
cmp
or
es
inc
ljmp
out
shll
or
jg
cmpsb
pop
inc
pop
push
xchg
mov
adc
mov
mov
push
jno
lock
jecxz
mov
popa
movsb
push
pop
jmp
cld
pop
xchg
xor
ret
ds
lea
mov
scas
ret
sbb
out
inc
addr16
ljmp
shrb
leave
fsubrs
xor
sbb
add
mov
mov
xchg
lret
add
lds
mov
sbb
mov
imul
outsl
in
outsl
outsl
pop
mov
ss
test
inc
jl
cmp
inc
push
jg
jmp
jbe
rcr
sub
lock
push
imul
iret
cli
arpl
xor
movzwl
pop
dec
xor
inc
push
cs
bnd
data16
ljmp
loope
xor
or
lahf
aaa
add
pop
fldenv
aaa
push
mov
in
jne
adc
add
sar
jns
dec
cltd
shlb
aam
sbb
rorl
pop
out
outsl
inc
pusha
frstor
adc
or
loopne
hlt
das
or
cmpl
cmp
pop
inc
aad
addr16
sbb
in
ljmp
insb
das
rcll
dec
out
pop
jge
lcall
cltd
mov
inc
dec
xchg
pop
and
adc
aam
xor
pop
mov
and
mov
mov
and
int3
loope
dec
cwtl
dec
fidivl
mov
adc
push
sbb
insl
lea
cmpsb
rcr
cltd
mov
cmp
or
mov
dec
mov
xor
fistpll
daa
je
fimuls
imul
daa
jne
fidivrl
fwait
lret
lock
dec
mov
inc
mov
btc
data16
mov
out
mov
repz
incl
stos
test
ss
mov
or
idivb
imul
out
rcrb
push
in
das
imul
into
mov
jmp
icebp
or
inc
push
addr16
sbb
aas
mov
pop
rcl
jb
or
mov
sbb
lahf
in
movsb
xchg
cmpsl
sarl
repz
lret
pop
mov
mov
and
mov
push
inc
sbb
shr
push
cmp
ja
sbb
mov
incl
pop
lret
dec
mov
into
shl
in
mov
sub
test
cmp
dec
mov
pop
mov
jnp
pop
mov
cli
scas
int
push
icebp
xchg
sbb
fs
pop
out
mov
mov
mov
inc
sub
and
or
shr
push
ret
or
push
push
in
mov
unpckhps
xchg
subb
int3
cld
push
dec
mov
cmp
loope
out
or
xor
mov
jnp
adc
mov
test
popf
and
imulb
pop
or
scas
in
xchg
test
sub
inc
sbb
mov
test
test
jg
and
xchg
inc
sbbb
or
test
jae
cli
scas
sbb
fimull
loopne
loope
pop
iret
jbe
movsl
push
aas
pop
test
movsl
dec
sbb
adc
lcall
hlt
or
fcomps
lock
inc
inc
test
xchg
int
or
push
loop
inc
xor
aad
jp
inc
mov
jle
jno
jae
pushf
xchg
syscall
in
lea
sbb
scas
rcll
lds
jnp
add
mov
sbb
sub
jne
jb
sbb
pusha
or
lahf
mov
enter
mov
popf
in
sar
inc
jecxz
inc
cmpsl
outsb
test
jl
addr16
shrl
push
fdivrs
fdivrs
inc
adc
fcmovbe
jb
stos
sub
mov
je
mov
int
adc
cmp
mov
icebp
mov
jl
hlt
dec
insl
lea
shr
or
loop
push
adc
mov
xchg
xor
cmp
iret
cld
out
sub
testl
adc
xchg
add
sub
out
into
mov
sub
pusha
jmp
mov
jmp
mov
fcmove
jecxz
pop
mov
mov
push
jmp
mov
iret
ret
xchg
movsl
dec
jmp
xor
mov
inc
adc
loop
cwtl
shlb
stos
icebp
add
push
push
into
sti
mov
mov
mov
fstps
arpl
push
jbe
xor
loop
out
loop
data16
fsubs
mov
lcall
jle
int3
arpl
cmp
or
xchg
push
xchg
test
test
fidivs
mov
rcrb
jne
ss
mov
cmc
add
in
js
pop
sub
lods
mull
es
inc
aas
adc
mov
xchg
frndint
add
pop
scas
dec
es
les
insb
pop
pop
mov
inc
les
jle
jbe
add
pop
fstpt
jmp
test
jl
divb
push
adc
fwait
daa
mulb
loope
sub
xor
jno
cmp
les
mov
jno
movsb
out
shrl
inc
jg
cmp
inc
cmpsl
les
cmp
and
xor
lods
arpl
jno
dec
popf
xor
mov
jbe
sbb
fcompl
enter
and
mov
push
comiss
movd
xor
adc
xor
rorb
outsl
test
jl
and
into
xchg
sub
jo
add
inc
pop
subb
pop
in
js
sub
cmp
sti
popf
jno
mov
inc
rclb
dec
sbb
add
popa
lret
or
loopne
dec
imul
mulb
adc
rclb
mov
es
testb
sbb
lret
push
xor
clc
or
gs
imul
inc
jne
mov
xor
in
mov
aad
cmovnp
pop
dec
sti
addl
pushf
cltd
mov
nop
jne
jns
popa
sarl
fsubl
into
rcr
ss
cli
js
fistps
sarb
rcrb
adc
push
pop
loop
ja
adc
test
ret
xchg
int
and
mov
test
je
or
add
out
lretw
add
mov
push
outsl
imul
xor
dec
cld
mov
aas
sub
cltd
adc
pop
sahf
sub
cmpsl
lret
cltd
ret
sbb
outsb
jne
int
movsl
es
stos
push
outsl
popf
mov
mov
sar
and
mov
push
and
cmp
xorb
sbb
loope
dec
dec
mull
repnz
jns
inc
inc
daa
push
data16
test
popa
pop
xor
add
xor
and
adc
mov
inc
dec
fxtract
es
dec
dec
sbb
outsl
out
insb
add
mov
jo
sub
lret
mov
hlt
popf
daa
push
int3
sub
and
or
bound
das
cmpsb
xchg
cmp
mov
lock
outsl
push
test
xchg
out
gs
daa
out
mov
dec
inc
outsb
dec
in
xchg
mov
adc
push
mov
daa
inc
pushl
add
xor
lea
insl
xor
jb
or
cli
ljmp
and
sub
lds
mov
adc
and
ficoml
inc
sub
xlat
cltd
and
je
data16
jecxz
mov
mov
iret
jns
jge
out
jno
mov
nop
mov
adcb
lret
gs
jae
cmp
fs
cs
repnz
push
andb
or
mov
outsl
lea
jecxz
popa
cmp
xchg
pop
mov
xor
testb
jecxz
sub
jne
xchg
mov
hlt
mov
cld
rcrl
cmpl
mov
jp
pop
and
or
fdiv
bound
into
pop
ret
mov
cmp
call
add
scas
jg
adc
dec
dec
dec
pop
ffreep
xchg
push
mov
xchg
mov
adc
mov
mov
lods
add
and
mov
add
lods
add
stos
inc
xchg
in
mov
test
sbb
push
stos
outsl
out
lahf
es
push
push
pusha
jb
loop
daa
mov
mov
mov
sbb
push
push
in
xor
fucomp
nop
mov
mov
or
jl
daa
pop
cwtl
push
add
add
add
cmp
ret
mov
jle
shrl
pop
push
icebp
scas
jl
stos
lds
lds
rclb
insl
sub
pop
imul
xor
mov
rorl
inc
xchg
call
dec
mov
xchg
add
dec
mov
pop
dec
jp
stos
icebp
jge
or
orl
cli
aam
pop
fadds
mov
pop
xor
push
mov
mov
or
adcl
push
adc
or
int3
jae
dec
test
loop
mov
cmp
sub
ja
leave
or
adc
call
lds
subb
je
scas
fstl
or
inc
mov
lret
insb
cmpsl
add
ficompl
lods
mov
sbb
mov
fdiv
push
sar
or
mov
jnp
outsb
orb
mov
stos
out
iret
adc
or
test
and
jle
mov
stos
dec
jae
scas
sub
adc
cmp
cmp
js
jl
lds
test
lcall
jmp
fidivl
loopne
adc
xchg
arpl
mov
mov
cmpsb
repnz
repz
arpl
pop
push
loope
inc
imul
fwait
cli
mov
inc
cmp
dec
fsub
and
pop
add
out
cmc
xor
outsl
cs
icebp
out
or
add
or
push
dec
adc
out
jmp
in
inc
je
std
rcll
loopne
pop
bound
arpl
mov
adc
movsb
sbb
daa
mov
sbb
cvtps2pd
imul
pop
mov
jge
ds
das
fs
jne
rorl
pop
and
movl
push
add
mov
or
adc
addr16
aas
test
xlat
leave
in
test
cli
pop
ds
sub
lock
lret
jmp
out
jno
mov
add
xor
mov
add
outsb
and
inc
jmp
bound
cmp
out
jge
out
sub
mov
fwait
push
inc
popa
cltd
jl
ds
mov
faddl
lahf
xbegin
loop
xchg
into
arpl
sbb
adc
idiv
push
adc
mov
dec
xchg
ss
setb
pop
inc
mov
js
xlat
lret
inc
aam
xchg
fdivl
loope
pop
pop
and
or
mov
std
mov
push
cmpl
cmp
sub
sub
xor
movsl
jo
iret
or
push
sub
es
sub
lock
and
push
shll
orb
cld
pop
leave
mov
adc
add
out
xchg
xor
mov
popa
bound
cli
cmp
stc
loop
into
ljmp
dec
push
jb
jno
js
fbstp
pop
ljmp
frstor
aas
xchg
repnz
mov
mov
jl
mov
mov
push
std
and
stc
jl
jns
pop
ret
shl
shlb
sbbl
outsl
out
in
push
or
sar
pop
lea
pop
adc
pop
or
xchg
out
push
dec
mov
movl
sti
cmp
mov
and
xchg
xchg
pop
aas
imul
mov
loop
xchg
cmpsb
fldz
cmp
adc
lret
scas
stos
jo
jg
and
dec
xchg
mov
jne
cmp
cmp
jge
cld
decl
test
test
mov
mov
movsl
sbb
cmc
test
enter
call
movsb
xor
out
int
mov
cmc
dec
push
cmpsb
jl
push
cltd
and
mov
sbbb
lcall
cmpsb
hlt
xchg
adc
aas
into
in
xchg
pop
call
repnz
pushf
fldenv
into
ret
cmp
sbb
pop
pop
dec
cli
mov
fisubrs
xchg
mov
gs
jne
xor
dec
cmpsl
sub
mov
addr16
sub
mov
adc
or
lods
loop
cmp
xchg
mov
in
xchg
inc
cmpsb
adc
repnz
jns
dec
enter
jp
notl
roll
insl
push
push
fcom
lahf
es
push
sub
leave
std
jo
dec
mov
sub
jb
add
fwait
pushf
cmc
adcl
dec
xchg
xchg
sbb
jmp
mov
js
lock
inc
pushf
popa
mov
inc
mov
xchg
inc
pop
jmp
push
pop
xchg
mov
mov
adc
adcl
dec
and
pop
ficoml
push
xor
stc
mov
lahf
lods
sbb
jle
adc
mov
hlt
push
pop
lods
lock
aam
mov
cltd
xchg
cmp
ds
fs
mov
mov
ja
xor
push
lods
mov
clc
lods
ret
or
scas
orb
sti
inc
imul
sub
mov
ficompl
mov
cs
aam
pusha
inc
add
mov
iret
lea
test
xor
aas
insl
jmp
add
lods
xchg
cld
xor
adc
in
das
xchg
sti
jp
sbb
adc
cmp
das
mov
adc
cmp
push
hlt
pop
leave
mov
dec
sbb
imul
xchg
fisubs
mov
sbb
add
xchg
sbb
fwait
std
push
adc
mov
icebp
cmp
adc
mov
rcr
repnz
idiv
sbb
jecxz
das
jge
loopne
div
jno
cmc
out
push
cld
ret
ds
sbb
inc
out
adc
mov
cltd
jle
scas
fisttpl
cmp
das
sbb
or
stos
orl
lock
mov
add
xor
jnp
xchg
es
jnp
push
mov
adc
gs
in
dec
cmp
js
icebp
test
cmp
fcoml
jl
dec
jp
fstp
sub
mov
lods
bound
pop
cmp
jle
push
sbb
sub
jne
ds
push
sbb
and
lea
push
scas
shll
pop
jno
data16
lahf
out
ljmp
rcrl
mov
sub
cld
into
mov
sti
ss
sub
fidivs
xchg
fnstcw
pop
stos
sti
shrl
pop
pop
xchg
mov
lret
mov
xor
mov
push
push
gs
mov
pop
sub
sub
sbb
and
mov
fcmove
pop
out
cmp
lds
lcall
pop
ss
mov
sahf
inc
or
fildll
mov
cli
push
inc
insl
sarb
cs
insl
icebp
ljmp
fdivl
cmp
out
jle
ror
push
adc
out
jecxz
push
inc
xchg
mov
push
and
lret
outsl
adc
fs
stc
or
in
ret
iret
sbb
mov
xchg
inc
rol
sbb
mov
daa
dec
out
add
stc
or
push
ds
mov
popa
int
mov
mov
inc
xchg
push
std
pop
out
cmc
fsts
mov
xchg
adc
popl
or
add
mov
notb
dec
mov
outsl
xor
adc
xchg
outsb
outsl
push
testl
mov
xchg
mov
scas
pop
xorb
dec
or
pop
daa
pop
sbb
mov
cwtl
fsubrl
rcrb
xchg
repnz
je
dec
daa
push
clc
lcall
xchg
loope
xor
mov
insb
jne
sub
popf
jbe
lret
push
add
mov
loop
je
imul
cmpsb
push
out
xchg
cmpl
test
imul
sbb
lcall
xchg
xor
fcomps
int3
lods
in
insb
pop
insb
sarl
ret
adc
jge
adc
xchg
pusha
mov
inc
stos
into
cmp
es
cmp
repnz
mov
adc
push
imul
lahf
and
out
jecxz
int
cltd
shlb
mov
mov
mov
es
lret
xchg
mov
jne
clc
rcrl
popf
xchg
insb
push
daa
je
in
test
lret
inc
pop
lock
cltd
and
and
dec
cmc
xacquire
and
inc
sub
adc
push
or
sbb
dec
in
clc
stos
cs
std
inc
hlt
sub
mov
add
or
inc
dec
push
xchg
jns
xchg
sti
adc
mov
insb
rolb
xchg
sbb
xor
clc
sti
lods
mov
mov
add
in
cs
out
dec
jb
gs
and
jp
cli
xchg
sbb
inc
int
or
lcall
or
sbb
pop
adc
popf
movsb
sub
mov
push
sti
xor
es
adcl
leave
pop
iret
lahf
sbb
in
jle
mov
int
xlat
cmpsb
cld
and
cwtl
xchg
subl
orl
mov
jp
cmp
jne
pop
aaa
out
clc
adc
fs
addr16
jle
jmp
xchg
mov
ret
in
sbbl
sub
dec
sub
into
mov
cmp
mov
imul
add
fiadds
pushf
out
ret
xor
faddl
inc
push
das
inc
mov
jg
bound
pop
bound
add
mov
add
push
mov
pusha
dec
fcmovne
fsubrs
sbb
jp
insl
cwtl
gs
jo
mov
lock
push
inc
leave
jg
aam
fsts
and
jge
lea
fstp
pop
popf
mov
repnz
stc
idivl
mov
xor
lods
push
add
xchg
mov
cmpsl
xchg
testl
sbbb
loopne
movsb
outsl
dec
test
push
cmp
push
ja
dec
mov
dec
add
sbb
jg
pop
gs
inc
icebp
sbb
rorl
and
and
pop
mov
cmp
cmp
lds
popf
push
movsl
xlat
inc
out
lret
ljmp
call
or
inc
push
adc
movsb
jns
and
push
push
fdivs
jb
sbb
mov
notb
lods
aam
ret
pushf
adc
fcmovnb
cmpsl
push
add
imull
pop
addl
cmc
sub
and
adc
loope
test
xchg
fisttps
in
mov
movsb
insl
faddl
push
dec
aaa
adc
mov
lea
jecxz
divl
pop
xchg
cmc
bound
sti
xchg
pop
jle
lret
ljmp
mov
mov
mov
push
dec
mov
and
cmc
jmp
push
popf
and
inc
shr
cld
in
stc
fcmovnbe
testl
in
ljmp
out
dec
dec
lcall
pop
repz
xchg
or
push
ljmp
push
push
cmp
inc
nop
and
testl
push
fdivl
rcrl
outsb
cld
repnz
fldenv
xchg
iret
pop
cmc
xchg
mov
loop
mov
sub
push
pop
add
fdivr
cmp
ds
push
mov
hlt
sbb
das
and
imul
lret
xchg
mov
mov
stc
mov
es
fmull
xchg
ljmp
xor
out
cmp
cmp
sub
loope
cmp
stos
popa
xchg
rorb
push
test
popa
jne
cmp
mov
outsl
call
sti
mov
call
or
pop
and
xchg
sub
test
cmp
popl
outsb
adc
shlb
movsb
mov
fdivrs
xorb
test
cltd
loopne
in
scas
jb
push
xorb
sti
jbe
inc
mov
mov
xlat
fsts
jmp
adcb
out
cmp
enter
inc
loop
lcall
pop
aas
or
stc
cs
sub
sbbl
cltd
add
mov
gs
mov
jo
mov
stos
jmp
inc
sti
adc
cltd
ret
mov
and
sub
mov
jge
orl
cmpsl
xor
push
es
jo
inc
js
insb
lret
dec
loop
mov
jmp
push
inc
adcb
xchg
mov
push
push
bnd
iret
mov
lods
bound
fidivrl
adc
fcoml
mov
push
lcall
inc
ret
out
mov
pop
mov
pop
out
gs
clc
adc
pop
lock
add
xchg
dec
test
cltd
shrb
lret
adc
or
mov
stc
test
cld
std
mov
data16
jmp
stos
cmp
or
iret
lret
loopne
dec
sti
loope
dec
lods
divb
aam
jb
mov
mov
fimull
jecxz
cmp
lret
push
mul
xor
in
xchg
pop
imul
iret
ss
cli
dec
push
inc
and
mov
dec
mov
in
sarl
pop
xor
mov
push
jns
xchg
ret
push
icebp
test
dec
cwtl
or
leave
clc
inc
in
mov
test
xchg
pop
jo
xlat
xor
inc
mov
dec
jge
mov
or
lea
fisubrs
scas
test
loopne
sti
inc
sbb
dec
outsl
popf
mov
aas
adc
fcom
out
mov
subl
pusha
mov
mov
repnz
repz
jns
push
xchg
dec
push
jne
mov
jne
js
cltd
or
jp
outsb
dec
cmpsl
xorb
scas
xlat
mov
xor
inc
pop
push
push
out
jbe
fisubs
xchg
cmp
xchg
sarb
push
aas
or
fucomi
popa
setbe
or
or
sbb
mov
sub
out
cld
adc
scas
sub
lar
add
stos
leave
add
pushl
pop
bound
cmp
movsb
jl
scas
sub
push
mov
std
cs
lret
push
add
cmp
mov
and
sub
fcmovnbe
xchg
jb
sbb
jmp
icebp
add
enter
stos
jbe
sbb
test
inc
push
mov
sub
ds
or
test
je
sbb
or
movsl
lahf
pop
inc
cltd
mov
cltd
scas
jle
dec
push
loop
lret
pusha
fnstcw
jno
out
imulb
push
inc
data16
mov
adc
mov
stos
jns
fs
cmp
ja
insb
xchg
loope
xchg
into
jbe
push
xlat
or
popf
push
push
ficompl
in
stc
dec
or
mov
inc
in
or
icebp
into
bound
mov
out
rcll
das
imulb
xchg
bound
lea
fnsave
fisttpl
lcall
cmp
sti
sub
mov
inc
cmc
das
mov
sbb
testl
jecxz
mov
lock
adc
add
cmp
mov
nop
out
les
mov
cmc
jmp
cmpsl
inc
in
aam
cld
sub
pop
mov
cmp
xchg
out
in
and
jmp
xsha256
cmpsb
pop
mov
mov
jmp
insl
adc
jnp
xchg
mov
xor
ss
adc
and
sub
movb
jne
cmp
bound
std
xchg
push
dec
das
roll
loop
lds
fiaddl
add
pop
stc
xchg
mov
jnp
bound
out
fwait
cmp
outsb
ja
mov
ret
push
dec
sbb
jo
xchg
xchg
mov
in
sbb
ficoml
ja
out
dec
mov
pop
lods
adc
mov
or
pushf
int
cmpsb
lret
pop
das
sarb
mov
jl
dec
sbb
fidivrs
push
xchg
jecxz
mov
mov
in
rol
push
xchg
push
xor
jecxz
pop
xchg
or
push
movsl
dec
mov
mov
sbb
in
pop
and
add
pop
aad
lods
jmp
clc
int3
push
jns
push
ret
xchg
mov
out
pop
sub
inc
sub
sarb
lock
or
jne
sbb
call
movsl
testb
xchg
push
shr
lret
test
push
inc
adc
das
xchg
scas
sbb
cld
mov
cwtl
pop
dec
test
test
mov
idivb
repnz
sub
cwtl
fwait
sbb
sbb
mov
jge
mov
sub
iret
rclb
jle
add
push
mov
and
add
adc
or
lods
push
mov
push
ss
out
sub
xchg
stc
fwait
mov
adc
fnstenv
adc
or
xor
pusha
sub
sub
gs
pusha
or
stc
mov
jns
shrb
test
bound
shrl
bound
adc
imul
sub
es
popa
sbb
fimuls
mov
aad
call
pop
insb
leave
add
loopne
add
adc
popl
gs
addr16
ljmp
cld
sarl
jl
dec
pop
popf
pop
jb
inc
mov
mov
xlat
sub
pushf
lret
int
push
outsb
lea
aam
jno
pop
leave
scas
pop
test
gs
mov
mov
adc
loopne
cmp
inc
les
and
adcl
das
pop
cmp
lret
and
stos
in
push
call
shll
aaa
and
ja
aam
mov
fisubs
mov
xchg
jle
addr16
cmp
movsl
repnz
aad
push
aam
popf
dec
or
lock
jp
aaa
not
dec
dec
movsl
push
test
popa
iret
scas
dec
roll
rcrl
mulb
inc
scas
push
int
sub
dec
push
test
test
dec
sahf
jecxz
jne
data16
popf
or
clc
adc
push
mov
mov
mov
enter
nop
cwtl
movsl
fwait
push
jl
fisttpll
int
push
or
jno
push
sub
cmp
push
andb
sarl
jns
sub
add
mov
orb
dec
fnstenv
std
pusha
fwait
jle
mov
test
adc
jp
gs
xor
jmp
adc
iret
mov
fidivs
jge
icebp
mov
sbb
shlb
cmp
add
jecxz
lock
add
add
lea
int3
outsb
sbb
aam
jo
jecxz
mov
dec
dec
movsl
dec
gs
jle
push
int3
fbstp
lock
dec
mov
pop
inc
imul
cmp
icebp
dec
scas
cmp
test
mov
mov
outsl
or
and
sub
out
popa
ljmp
outsb
iret
jnp
mov
gs
mov
stos
es
leave
xor
movsb
dec
test
mov
lret
test
leave
dec
jns
in
cli
ret
xlat
in
jb
mull
fcomi
dec
jne
mov
aas
dec
sub
lret
daa
out
in
bound
push
jp
xchg
dec
ret
fnstsw
je
mov
faddl
pop
inc
mov
int
push
inc
mov
sub
mov
dec
dec
into
in
or
in
and
std
pop
jo
push
push
fistpl
das
mov
push
fucomp
outsl
adc
jnp
mov
testl
cmp
call
pop
in
xchg
in
pop
sbb
call
inc
push
enter
into
cli
pop
pop
rcll
jae
adc
jg
cmp
or
pop
pushf
jp
inc
xor
push
mov
mov
inc
xchg
mov
cmpsl
fcom
movl
xchg
push
lret
stc
xchg
sub
movsb
shlb
sbb
jae
add
stos
fidivs
inc
in
fstp
push
jg
add
out
inc
inc
fmul
mov
cmp
push
xchg
sarl
jae
call
sub
sar
push
xchg
int3
shlb
repnz
add
inc
push
mov
add
pop
push
js
jmp
or
hlt
lods
pop
or
mov
mov
push
mov
iret
sub
shrl
ret
icebp
stos
in
cmp
rorl
jae
dec
mov
mov
packuswb
push
xor
pop
and
ljmp
fnsetpm(287
pop
inc
call
sbb
shlb
jno
fsubr
lret
out
lods
push
mov
dec
out
fsubs
lea
mov
pop
rol
jg
inc
xor
and
xchg
jns
bound
stos
jg
scas
lret
test
stos
sub
sbb
rcl
mov
in
xchg
dec
addr16
xor
nop
dec
repnz
fsubs
pop
mov
sbb
mov
fisubs
xchg
dec
jg
push
fistpl
scas
or
lret
jge
sbb
pushf
dec
xor
notb
xchg
xor
sub
xor
or
lds
dec
leave
loope
or
stc
mov
inc
pop
mov
rcl
lret
ja
pop
dec
add
insb
push
mov
sbb
pop
jl
sub
sbb
test
insl
and
inc
mov
lods
lods
adc
add
test
inc
insb
add
mov
push
and
lea
test
xchg
add
cld
inc
pop
in
sub
cmp
jp
jg
push
mov
inc
or
pop
push
ret
loop
sub
insb
and
xor
mov
adc
idiv
cmpsb
cmpl
scas
push
sbb
jb
gs
jecxz
hlt
outsb
outsl
ss
test
notl
and
mov
push
rcrb
fwait
repz
cmp
pop
xor
aaa
push
js
ljmp
popa
insb
push
fcmovu
imul
cmc
icebp
jb
stos
pop
ret
mov
mov
and
in
cld
mov
inc
mov
inc
xor
and
std
and
inc
out
out
add
add
rcrb
stos
xchg
jp
cmpb
dec
mov
jno
lcall
jl
mov
dec
xor
pusha
xchg
out
outsb
in
in
mov
jmp
cmp
pop
rclb
dec
xor
mov
test
in
pop
sahf
testb
stc
movntq
mov
mov
repnz
jecxz
sahf
cmc
inc
xlat
pop
xor
fnstcw
sub
outsb
cmpsl
in
lds
dec
pop
cmc
dec
mov
cwtl
popf
stos
mov
div
xlat
iret
mov
sbb
inc
clc
adcb
loope
push
andl
leave
pop
dec
data16
sbb
or
aaa
sub
roll
xchg
xchg
xor
fnstenv
and
inc
sahf
inc
and
movsb
push
cmp
push
xlat
dec
push
sub
inc
inc
fadds
rorb
loop
sahf
leave
push
xchg
loope
ja
mov
cld
ja
and
push
stos
stos
dec
mov
insl
shrl
fdivrl
sub
insb
repz
enter
dec
push
or
jecxz
outsl
cmp
lret
out
jae
das
add
sub
popf
in
xchg
sti
push
arpl
shll
dec
xchg
push
scas
jg
or
add
dec
fiaddl
cmpb
lret
pop
sub
xor
ds
iret
scas
push
stos
jb
lock
push
mov
ret
inc
push
loop
daa
jmp
out
test
add
dec
popf
sub
imul
jbe
sub
addb
mov
orb
dec
dec
aam
fidivrl
insl
enter
jb
mov
jl
sbb
fcmovb
dec
push
mov
enter
or
lods
or
add
mov
insl
cli
and
in
shll
sbb
pop
push
push
inc
in
pop
sub
or
sbb
in
and
dec
sbb
adcb
xor
cmpsl
pop
test
enter
xchg
lea
pop
scas
xchg
mov
add
loop
test
cmp
shll
cmp
sub
std
mov
mov
cs
jg
ljmp
pop
mov
enter
mov
scas
scas
int
rclb
mov
test
orb
inc
jne
mov
shl
adcb
sbb
cmp
fildll
loop
imul
outsl
das
pop
jns
cld
jb
rcrl
adc
mov
lods
scas
jmp
das
and
sub
sbb
incl
lahf
add
scas
push
xchg
in
fsub
pop
cmpsl
mov
adc
push
sub
rol
clc
pop
dec
sub
sbb
jb
sub
rcr
xchg
aaa
xor
sbb
stos
jge
adc
push
roll
inc
jnp
or
xchg
test
mov
pop
xchg
add
sub
lret
dec
in
pop
or
pop
add
inc
xchg
cmpsb
mov
mov
fisubrs
jle
aas
mov
mov
xor
xchg
sbb
mov
shlb
stos
jmp
jmp
loopne,pt
sbb
enter
out
into
sarb
xor
loope
subl
pop
rcr
pop
add
push
or
jecxz
in
push
pop
mov
jg,pn
cmp
sbb
cmp
rep
lahf
pop
in
xor
adc
data16
int
mov
and
pop
inc
push
fucomi
and
inc
popa
outsb
shr
mov
outsb
adc
adc
call
out
flds
adc
add
mov
dec
inc
nop
icebp
shll
std
lods
mov
mov
mov
sbb
mov
fwait
and
test
pop
mov
cmp
mov
jb
js
push
add
mov
insl
insl
push
or
pop
push
movups
jp
push
adc
jmp
xchg
outsl
testb
insb
inc
jbe
adc
ljmp
shrb
popf
mov
sbb
cmpsl
inc
sarl
mov
inc
mov
add
push
pusha
mov
stos
add
mov
into
sub
jmp
xchg
lret
jmp
jp
popa
out
sub
push
sbb
jns,pt
out
push
bnd
addr16
cmc
push
cli
jae
inc
sub
out
mov
inc
cmp
dec
inc
jmp
sbb
mov
bound
jnp
xor
pop
movsb
cmp
sbb
aas
mov
insl
sti
movsb
addb
pop
pop
xchg
mov
sub
dec
faddl
mov
jb
jp
mov
jns
loope
outsl
lods
in
jg
adc
jae
dec
mov
fldl
sub
jl
jne
loope
mov
test
daa
shrb
mov
cmp
out
cmp
sti
adc
pop
popf
add
fmull
clc
sahf
hlt
aas
xchg
or
adc
add
mov
gs
fsubs
adc
nop
mov
ret
push
faddp
push
xor
stc
pop
jno
aam
add
leave
and
push
ss
repnz
fwait
outsb
repnz
aas
jp
ret
inc
add
cmc
xchg
cmp
insb
and
int
adc
ja
mov
cmp
cmp
std
int
and
fisttpl
jbe
adcb
data16
cs
lret
cmp
test
sbb
test
cli
mov
lret
rorb
shll
inc
mov
xor
sub
jl
popf
push
adc
sbb
das
aam
push
add
lahf
in
js
jle
scas
xchg
jmp
xchg
sub
cmp
aas
cld
add
jne
push
daa
daa
jnp
xchg
jecxz
and
ret
mov
cmp
dec
fsubl
js
xor
add
pop
call
add
ds
or
mov
mov
sahf
jbe
loopne
sub
into
inc
or
xor
test
xchg
repnz
fidivrl
mov
cmp
dec
or
sub
into
ret
jmp
loop
adc
popa
in
mov
test
movsl
mov
mov
fcompl
jl
mov
es
xchg
out
pop
and
mov
mov
in
cmc
movsb
aad
orl
jge
or
rorb
daa
pop
insb
adc
adc
lcall
aas
mov
inc
cmp
out
mov
xchg
xchg
mov
cltd
inc
jecxz
push
shll
repnz
sbb
sahf
cmp
pop
and
lahf
push
and
insl
repnz
into
out
outsl
cmp
mov
xor
jp
mov
mov
dec
out
and
and
sahf
mov
inc
dec
mov
or
call
loope
sti
popf
repz
jp
jmp
data16
mov
shrl
xor
fmuls
dec
mov
mov
mov
in
les
clc
lret
pop
jle
orb
lea
mov
movsb
cmp
cmc
sbb
dec
testb
xor
or
pop
pcmpeqw
cld
addr16
push
xor
call
jno
push
cld
mov
cmp
imull
mov
dec
xchg
dec
icebp
adc
adc
or
lcall
in
push
dec
push
mov
adc
sbb
ljmp
mov
cmc
cmp
adc
xlat
mov
ret
enter
push
mov
sarb
dec
jb
imul
sahf
aam
xchg
xchg
insb
rolb
push
mov
je
mov
mov
outsl
lods
mov
pop
inc
pop
mov
push
hlt
mov
pop
sub
mov
mov
int3
hlt
xor
and
in
in
out
fnstsw
nop
les
out
sbb
ss
mov
push
cmp
icebp
adc
test
jecxz
add
test
addr16
test
popf
pop
add
xchg
mov
inc
jp
data16
mov
fimull
dec
jmp
int3
adcl
std
aam
aad
orl
int
pushf
sub
pusha
mov
push
sti
dec
adc
sub
popa
inc
repnz
arpl
call
ja
test
xchg
cmpsb
popf
sub
sbb
adc
sub
or
inc
sub
fidivs
out
mov
movsb
test
out
xlat
lods
mov
xor
ret
mov
mov
insb
pop
lret
in
push
movb
dec
or
adc
int3
add
push
ds
es
and
icebp
dec
xchg
and
dec
dec
sarl
add
ja
sbb
dec
ds
sbb
fstpt
push
lret
addr16
pop
mov
test
dec
jecxz
cmpsl
sti
fisubrl
ror
ret
lds
jne
addr16
lds
fs
out
xchg
inc
push
shll
add
jmp
or
xchg
popf
in
add
in
sbb
push
mov
stc
xor
and
and
loopne
scas
pushf
adc
mov
xchg
jp
stc
mov
xor
pop
dec
and
mov
push
cmp
and
out
push
mov
arpl
adc
hlt
inc
hlt
cltd
cmpb
scas
pop
fisubs
filds
test
cmpsl
ret
jns
cmc
adc
pop
or
dec
sbb
mov
adc
jnp
cmpb
lods
mov
dec
add
fucompp
xor
cli
int
call
inc
inc
inc
shrl
pop
or
sbb
mov
lods
mov
fs
fistps
mov
ficomps
mov
lods
test
push
push
dec
movsl
pop
adcl
in
cmp
fstl
icebp
push
mov
enter
or
sbb
repnz
lret
adc
test
scas
jmp
mov
inc
mov
rcrl
mov
and
lods
movsb
jbe
loope
out
jno
pop
jne
fnsave
lods
add
in
add
xchg
addr16
mov
jb
mov
fstl
add
repnz
cmp
pushf
fwait
add
jecxz,pn
push
in
sub
aas
pop
jmp
xor
lock
insb
shrl
xor
fdivr
sub
ficoms
or
jb
mov
xchg
sbb
inc
int
jae
rcl
mov
mov
in
aaa
out
and
and
jmp
out
mov
out
pop
ljmp
icebp
push
pushf
jecxz
push
or
mov
mov
cmp
adcl
and
je
push
cmp
ss
hlt
es
mov
fiaddl
jno
std
cltd
xor
dec
inc
stc
imul
outsb
test
dec
fsubrl
outsb
push
and
mov
mov
popa
or
cli
mov
pop
pop
xchg
xchg
cmp
ljmp
clc
dec
mov
shrb
adc
push
rcrb
data16
std
mov
imul
sbb
ss
xlat
fndisi(8087
hlt
jecxz
incb
daa
jno
gs
loop
pop
das
pop
lods
mov
mov
jmp
adc
adc
dec
repz
push
shl
sub
call
cwtl
neg
xchg
int3
xchg
stc
ljmp
jno
push
inc
lahf
or
aaa
js
xchg
sarl
push
fstp
sub
cmp
leave
movsl
sub
imull
icebp
mov
test
push
ror
outsl
repz
out
lcall
inc
fisttps
out
mov
imul
ret
mov
or
sub
mov
sti
mulb
mov
jnp
enter
xchg
ja
sub
xor
xor
cwtl
jle
sub
lret
push
mov
cmp
fidivs
pusha
lock
inc
cltd
stos
hlt
jp
mov
sbb
xorl
jge
cltd
mov
in
sub
out
int3
inc
test
mov
shlb
xchg
ficomps
dec
loope
xchg
loop
push
and
ljmp
in
pusha
xorb
mov
push
mov
jbe
dec
mov
mov
shr
mov
add
add
add
push
xchg
push
sbb
int3
test
cmc
and
popa
ja
pop
mov
dec
shrl
cmp
xchg
xorl
movsb
jmp
cmp
loopne
inc
cmpsl
shlb
outsb
xchg
sub
jo
add
in
mov
mov
dec
mov
int3
push
test
cli
xchg
daa
dec
repz
lret
in
mov
sarl
sti
add
fbstp
sbb
jge
data16
or
add
add
pop
inc
pop
popa
test
mov
cmp
mov
in
movsl
pop
cmc
add
mov
lcall
leave
mov
xchg
and
pop
xor
lods
dec
inc
or
js
xor
or
out
leave
or
cmp
mov
sbb
fidivrs
adc
add
stos
dec
mov
inc
leave
pop
push
aad
mov
into
fnstsw
pop
ss
sbb
xchg
dec
test
js
inc
in
out
ljmp
lock
in
cmp
roll
mov
andb
adc
fldcw
mov
mov
daa
inc
mov
js
mov
jmp
jg
xchg
mov
pop
cmp
ret
fdivr
in
pop
int
mov
xlat
lahf
xor
arpl
add
stos
sbb
test
adc
test
cli
cmpb
aas
mov
out
ss
or
ss
shll
outsl
mov
or
pmaddwd
cmpsl
xchg
outsb
mov
dec
shr
push
jecxz
sub
mov
xchg
push
jb
xchg
sbb
jae
push
mov
fnstenv
jl
pusha
push
sbb
movsb
jnp
xchg
mov
dec
out
loop
sbb
adcl
cmpsb
mov
xor
push
in
xchg
sarl
or
sub
xchg
je
sub
hlt
mov
add
cltd
xchg
jo
sbb
aam
cmc
stos
lea
or
loope
mov
ret
into
stos
lods
iret
sbb
xor
je
popa
in
sub
mov
scas
inc
xchg
or
lods
lcall
outsb
cmp
or
cmpsb
mov
xor
add
lret
and
jecxz
mov
cld
fs
arpl
sahf
xlat
mov
xchg
xor
mov
xor
push
int
mov
ret
aad
ja
dec
dec
cwtl
sub
outsl
mov
push
loopne
cmp
rcl
in
fs
imul
jae
inc
fildl
adc
push
inc
jb
xor
in
or
and
gs
test
in
dec
stos
mov
out
test
mov
pop
stc
shrb
jae
xchg
stos
outsl
sbb
data16
hlt
cmpsb
divb
stos
out
sbb
push
push
cmp
sbb
aaa
int3
repnz
cmpl
rcr
fcomp
dec
mov
int3
mov
xor
decb
cmp
push
psraw
mov
aam
ss
xchg
pop
ljmp
es
sbb
xchg
sbb
lahf
cld
pusha
cs
pop
and
jno
enter
icebp
xchg
mov
out
std
mov
and
test
xor
mov
push
mov
aad
inc
or
packssdw
das
sbb
clc
mov
adc
fildl
fisubs
mov
mov
cmp
or
xchg
ss
rcrl
xchg
arpl
jne
lahf
adc
ljmp
ret
sub
es
out
ret
push
sbb
stos
adc
xchg
insl
iret
push
adc
sbb
jge
add
sub
dec
popf
bound
jmp
mov
cmp
out
add
dec
imul
popa
pushf
or
push
cwtl
movsl
movsb
adc
cmpsb
lcall
xor
nop
div
int3
cmc
adc
or
jle
mov
and
outsl
lods
cmp
adc
pop
mov
out
fcoms
jne
out
lret
push
lock
arpl
das
popa
adc
xor
in
shlb
jno
push
mov
jmp
add
adcb
scas
loop
call
inc
cmpsb
sub
mov
lea
hlt
push
mov
mov
mov
push
pop
jle
mov
imul
dec
mov
dec
sbb
aas
inc
xchg
mov
add
loope
rcll
lds
sahf
sbb
fstps
notb
mov
sti
jecxz
jecxz
push
jg
ja
adc
sahf
pop
popa
fimuls
lahf
xchg
clc
adc
andl
fldt
rol
push
jbe
jb
notl
inc
in
cmp
cmpsl
jge
cmc
ja
mov
les
and
sub
mov
mov
sub
int3
mov
jle
cwtl
iret
add
sub
dec
std
cltd
es
mov
dec
in
adcb
push
lods
loopne
add
imul
mov
add
mov
sbb
lods
cli
push
mov
add
fcoms
popf
repz
inc
jo
nop
jecxz
stos
mov
int
enter
inc
xor
adc
adc
insl
repz
inc
icebp
mov
js
lret
in
mov
aad
xor
jns
out
iret
xchg
jnp
inc
inc
xchg
jg
fsts
adc
add
adc
cmp
fiaddl
jmp
sbb
dec
sti
int3
pop
test
popa
cs
arpl
and
sarl
dec
xchg
nop
jo
sbb
sbb
divb
push
js
or
movb
loope
push
and
jmp
shll
fidivs
mov
xor
ds
push
ret
sub
adc
pusha
push
mov
dec
xlat
xor
mov
flds
fisttps
std
mov
xor
mov
mov
and
enter
adc
cmpsb
xchg
cmp
subl
fiadds
add
push
aad
daa
xchg
pop
push
and
jmp
mov
sbb
pushf
fidivs
jnp
dec
pop
movsb
jg
lea
fstl
push
jne
mov
les
in
fmuls
fstpl
or
adc
xchg
cmpsl
inc
in
int
sbb
cmp
ljmp
shlb
sahf
xchg
cwtl
imul
repnz
lret
lret
jl
leave
add
lahf
outsb
sbbb
xchg
nop
les
stos
sub
adc
std
mov
and
sbb
xchg
out
in
mov
xchg
push
adc
outsl
adc
inc
mov
fistps
mov
mov
fsts
pop
add
or
outsb
scas
push
jl
fwait
sub
fadd
lret
arpl
mov
xchg
xchg
dec
xchg
sbbb
mov
and
repz
mov
inc
cmpsl
inc
mov
subb
pop
xor
out
popa
mov
es
mov
fldl
arpl
sbb
mov
mov
arpl
repnz
xchg
jbe
stc
cmp
ja
sub
iret
loope
gs
hlt
adc
pop
mov
sub
pop
in
cmpl
mov
js
pusha
push
xchg
in
stos
add
scas
jl
cmp
xchg
sbb
add
roll
adc
push
cmp
xchg
mov
movsl
cli
jb
mov
test
pusha
dec
dec
stos
sub
sub
inc
dec
and
daa
and
xchg
xchg
mov
mov
sbb
or
xchg
fimull
mov
and
pop
sub
inc
call
add
pusha
out
aaa
mov
les
popf
dec
lds
ret
cmp
insb
pop
lahf
cltd
jp
out
mov
dec
clc
jecxz
xor
dec
adc
not
pop
mov
in
mov
pop
and
lret
dec
imul
call
sbb
inc
aas
jb
pop
mov
inc
sbb
mov
sti
push
dec
pop
jecxz
mov
stos
cmpsb
adc
pop
add
lea
mov
pop
mov
jae
test
out
imul
aad
and
ret
mov
fimuls
xor
aas
cs
das
adc
outsl
fs
in
insb
pop
daa
pushf
test
daa
mov
ficompl
xchg
mov
testl
nop
sub
test
pop
sbb
push
in
mov
test
inc
push
xchg
sub
loope
mov
mov
shlb
add
call
cmp
cmp
cmp
push
mov
pop
sub
popa
imul
ja
mov
pushf
clc
lret
outsb
ds
fucomip
lcall
movsl
sub
rorb
cmc
mov
inc
inc
jne
sbb
rorb
inc
jae
ja
imul
cmp
mov
xor
jno
push
aas
sub
cmpsb
int3
fucompp
ds
stos
mov
fsub
cmp
pop
xchg
push
outsl
loop
cmpl
mov
push
lea
dec
push
sbb
fiaddl
dec
je
std
mov
mov
jae
jo
sub
dec
xor
sub
cld
jg
movsl
xor
outsl
lods
clc
aaa
push
add
subb
insb
cs
xchg
mov
push
or
dec
dec
jb
push
dec
and
js
loop
mov
out
in
mov
stc
icebp
out
and
dec
ja
scas
cli
negb
lea
cmp
inc
clc
dec
adc
jmp
push
adcl
sub
sti
aam
dec
mov
lods
mov
lea
ja
popf
in
mul
ss
xor
push
xorw
pop
imull
fwait
mov
mov
sar
and
mov
mov
lcall
xchg
adc
popa
jle
cli
jo
mov
inc
jb
clc
dec
pop
cmp
mov
mov
add
sbb
jmp
add
push
mov
rol
xor
out
insb
adc
lods
mov
xchg
dec
sahf
dec
cmp
dec
in
inc
ret
mov
adcl
xchg
insl
sbb
stc
xor
sarb
jae
test
hlt
mov
outsl
pop
mov
out
xor
dec
inc
mov
sub
dec
insb
nop
in
and
cmp
pop
inc
dec
push
push
aaa
fwait
jns
es
out
fdivrp
fs
stos
mov
xchg
push
sbb
xchg
cmpsl
into
fwait
jne
xor
jl
stc
out
insl
mov
xchg
push
mov
loopne
pop
aaa
in
or
aam
rcl
addr16
subb
xlat
inc
lds
add
inc
sub
jecxz
mov
out
jge
push
popf
out
repnz
subl
repz
arpl
in
bound
mov
mov
jne
mov
xor
push
xor
pop
push
pusha
cmp
cmp
xchg
sub
movsl
lods
xchg
mov
adc
inc
mov
lods
mov
adc
sub
mov
incl
mov
mov
pushf
mov
lock
repz
mov
add
mov
out
push
fidivs
cmp
repnz
sahf
xor
push
push
sbb
cld
cmp
rcrb
sub
sbb
push
ficomps
outsl
jge
lds
mov
mov
push
mov
mov
movsb
push
push
sbb
xchg
adc
add
arpl
or
and
inc
push
lret
jmp
test
mov
dec
sub
ret
test
icebp
xchg
mov
adc
cmpsl
jnp
rcll
in
jo
or
push
fsubs
sbb
mov
dec
mov
sub
sub
mov
lock
decb
dec
dec
push
mov
outsl
cmpb
sbb
sbb
repnz
inc
mov
inc
or
push
jle
shrb
int
addl
test
push
sub
add
shll
ficomps
xchg
push
push
sbb
and
outsl
cmpsl
test
push
add
or
adc
aas
xchg
mov
mov
fcmovnb
lds
xor
fs
stos
mov
add
xchg
and
xchg
xlat
mov
mov
add
sbb
push
testb
mov
stos
add
pop
adcb
jp
jl
dec
adc
cmp
jo
mov
popa
jbe
insl
mov
fninit
and
or
pop
mov
aad
mov
pop
out
ss
stc
insl
pop
mov
ljmp
std
fildll
xor
aad
ret
mov
and
outsb
outsb
shrl
outsb
jecxz
cld
sub
lret
out
sbb
dec
fwait
bound
mov
cmp
cld
and
pop
or
sar
pop
push
or
ret
mov
jge
imul
mov
cmpsb
jnp
inc
mov
leave
mov
sbb
mov
pop
cmpsb
xchg
mov
add
leave
into
xor
sub
not
outsl
xor
pop
aam
adc
xchg
mov
loope
pop
ret
je
pop
push
scas
adc
ja
das
xchg
pop
jge
dec
ss
insb
es
pop
push
cmp
dec
add
mov
ss
insl
push
and
cmpsb
popa
enter
cmp
pop
int3
dec
test
pop
dec
mov
lods
xor
jns
cmp
adc
arpl
inc
int
cs
test
ljmp
mov
adc
xchg
sub
jbe
test
aaa
sbb
inc
call
jo
ret
push
jns
aad
mov
jecxz
xchg
pop
and
mov
fwait
add
repnz
sbb
fwait
mov
test
movsb
push
or
lods
jge
ret
or
fistps
shll
fstpt
pop
xor
hlt
xchg
pop
je
adc
imul
in
lcall
inc
pusha
xchg
add
mov
mov
cwtl
adc
int3
in
popf
mov
ret
shrl
xchg
jbe
sub
add
jl
mov
xchg
sti
sbb
into
aam
loope
cmp
mov
sub
mov
fwait
xor
iret
jecxz
pushf
outsl
add
test
sub
mov
jmp
scas
pusha
pop
pushf
fmull
mov
inc
cmp
pop
insl
sbb
popf
int
or
and
adc
imul
xor
adc
push
cmpl
hlt
je
jne
hlt
adc
rolb
int3
push
xor
mov
in
arpl
addb
or
push
pop
pop
and
push
sub
xchg
shlb
adc
idivl
out
and
fwait
lds
inc
push
sbb
cmp
stc
cmp
adc
cltd
pushf
add
nop
icebp
roll
mov
mov
sbb
mov
mov
rol
divl
push
mov
pop
bound
xlat
push
out
pop
inc
cs
imul
data16
fnsave
inc
test
sub
shrb
add
xlat
ret
mov
lods
mov
push
in
mov
add
mov
imul
and
mov
pop
push
sti
loop
sbb
sub
jae
inc
imul
mov
mov
adc
imul
adc
cltd
in
cs
stc
xchg
scas
fs
sbb
std
xchg
pop
sub
movsl
loopne
adc
cmp
dec
xor
ss
jno
inc
and
inc
sbb
in
imul
cli
dec
sub
call
jo,pt
mov
push
sub
mov
dec
push
lods
and
xchg
jg
pop
xlat
jmp
loop
leave
mov
dec
push
arpl
push
paddb
mov
decb
push
push
lea
int3
mov
addr16
mov
addr16
cmpsl
dec
cmp
cmpsl
sbb
push
add
ss
pop
loope
sub
ds
bound
das
pusha
mov
push
mov
inc
popa
lds
mov
bound
in
divl
xchg
mov
cmp
bound
test
out
in
sub
addl
loope
jmp
pop
push
arpl
xorb
jmp
sub
ljmp
mov
or
inc
inc
in
and
fwait
xlat
insb
add
into
test
shl
in
add
lcall
jno
cmp
out
clc
out
cmp
sub
mov
mov
test
mov
mov
mov
add
iret
xorb
sbb
mov
cwtl
dec
ret
movsl
das
pop
stos
or
pop
fs
pop
add
jb
lret
jae
xchg
out
mov
push
insb
aam
push
inc
dec
call
adc
jle
lret
or
in
jecxz
hlt
inc
sbb
pushf
daa
jge
add
push
push
jo
mov
or
aas
push
mov
xchg
dec
pop
es
sub
sbb
ja
jb
sub
push
je
xor
mov
mov
cmp
aas
jg
in
aad
xchg
and
mov
jge
sub
mov
sbb
stc
stos
push
xor
adc
add
ret
push
xchg
push
daa
gs
jp
add
bound
lea
daa
icebp
dec
popa
icebp
xchg
notl
rcll
js
addr16
cs
sbb
cmpsb
inc
in
adc
jno
push
jecxz
sbb
repz
lcall
addr16
xor
mov
ja
or
mov
sar
mov
xor
jg
cmp
in
cwtl
xchg
xchg
cmp
shll
fnstsw
sub
add
imul
sahf
and
add
mov
sbb
push
mov
pop
xor
ljmp
mov
cli
testb
cmc
andl
int
sahf
mov
pop
xchg
in
inc
push
pop
mov
sahf
out
mov
mov
sub
stos
push
jmp
and
pop
fdivp
int
mov
jg
mov
test
sub
sub
stos
gs
out
fcomi
or
pop
pusha
jne
sub
icebp
add
out
clc
sahf
gs
pop
clc
mov
or
adc
icebp
xor
xlat
ret
fldenv
stos
cmpsb
popf
aaa
adc
sbb
xorps
sub
push
cld
shlb
or
out
pop
int3
adc
addb
inc
pop
sub
mov
pusha
std
fidivrs
jmp
lea
pop
mov
lock
out
push
movsl
mov
outsb
cs
je
ljmp
fidivl
push
cmc
stos
test
xor
mov
push
mov
mov
scas
ss
dec
jns
sub
sbb
jl,pn
lret
pop
lea
test
outsb
add
popf
pop
push
push
fisttpll
add
clc
lcall
sbb
and
sub
or
fimuls
xor
pop
add
shll
mov
sbb
sub
sti
sbb
jne
repz
pusha
mul
push
dec
xchg
xchg
pop
mov
shll
out
movl
add
cmp
shr
dec
push
pop
add
aaa
inc
mov
jmp
dec
xlat
leave
pop
fistpll
mov
aam
add
test
jb
mov
jbe
jmp
sub
and
sub
xlat
jns
or
int3
jb
push
mov
inc
push
dec
daa
mov
xor
mov
gs
out
dec
lds
add
adc
xchg
push
xchg
outsl
lret
int
mov
enter
dec
inc
inc
jmp
outsl
iret
xor
add
mov
mov
push
jo
pop
cli
mov
pop
add
add
cltd
lock
lcall
jmp
jmp
das
repnz
repz
icebp
fmul
lds
jp
pop
xor
rcl
add
fnstenv
cmp
ja
cmp
sbb
rclb
outsb
loope
cmp
ficoms
and
pop
les
pop
push
cmp
mov
movsb
rcrb
es
and
stc
nop
jnp
adc
fs
xor
shlb
cmp
pop
pop
ret
and
mov
sbb
push
sub
mov
jecxz
xor
cmpsb
xchg
sub
aas
jp
popa
lods
jle
subb
lret
xchg
cwtl
pop
ja
inc
std
sbb
cmp
cmpsb
fidivrl
or
push
inc
into
pop
int3
jno
xchg
arpl
dec
mov
and
outsl
pxor
test
imul
push
test
mov
mov
jl
sub
sub
mov
mov
and
in
dec
dec
jno
mov
pop
test
jle
lret
xchg
arpl
movl
sbb
insb
rolb
inc
push
xor
ficompl
test
dec
mov
in
jno
scas
iret
aam
pop
or
fildll
sahf
mov
movsb
dec
rolb
pop
pop
pop
in
xor
xor
cltd
sub
xor
sahf
pusha
mov
fs
outsb
arpl
popa
add
dec
aad
jae
ret
mov
shrd
sbb
mov
inc
xchg
jmp
adc
mov
inc
add
jne
roll
mov
adc
popa
sbb
scas
stos
or
adc
inc
pop
cmc
cmpsl
aam
add
inc
and
dec
hlt
sbb
sub
adc
and
mov
sub
mov
cmp
std
cmp
xchg
sbb
adc
pop
mov
inc
mov
lret
dec
sub
mov
mov
push
sbb
xor
cmpsb
add
jns
or
fisubrl
sub
imul
cmp
jae
xor
insl
nop
and
movsb
adc
add
mov
pop
cmc
in
cmp
stos
stos
daa
jnp
repz
stos
xchg
dec
ljmp
jmp
adc
imull
ret
push
xor
out
jno
or
fwait
push
jle
or
xchg
pop
inc
mull
sbb
mov
das
into
and
jp
out
xchg
pop
into
cmp
sbb
mov
or
repz
mov
cwtl
data16
or
sarl
aam
push
daa
pop
lock
inc
test
cmpsl
mov
jle
ret
lahf
subl
inc
or
xor
cmp
cmpsb
mov
lret
adc
fstpl
sub
or
aas
push
dec
adc
inc
jae
and
aad
gs
aas
fisubrs
ljmp
xor
into
in
scas
outsl
stos
rcr
xchg
pop
and
jns
adc
movsb
pop
jne
in
sub
inc
pop
leave
loopne
fcomp
xchg
jb
and
add
sub
jo
cmp
addr16
in
xor
outsb
movl
xchg
daa
jbe
push
or
arpl
mov
sbb
mov
inc
stc
or
add
xor
sbbb
adc
int
pop
cmp
test
ds
mov
xor
pop
adc
out
mov
cmpsb
ds
in
cmp
push
in
dec
sbb
dec
add
mov
rorb
roll
lret
add
add
jecxz
mov
in
mov
lea
mov
fs
dec
dec
pop
jmp
or
ret
mov
enter
stos
pushf
pop
ret
sarb
pop
cmp
sub
jno
sbb
in
mov
sar
add
sbb
mov
inc
or
push
ret
push
sbb
xrelease
jbe
mov
repnz
and
hlt
fadd
in
cmc
inc
jp
inc
pop
cwtl
fadds
mov
mov
adc
movsb
jl
scas
mov
push
daa
movsl
jmp
lods
xchg
xor
popf
sbb
xchg
mov
pop
and
push
cmp
jae
xor
lds
lret
xor
fists
mov
test
pop
inc
inc
stos
adc
sub
jae
jbe
test
xor
jb
or
and
or
dec
inc
fiaddl
fsubs
sbb
out
insl
mov
cmp
add
clc
inc
mov
clc
jne
push
pusha
mov
add
testl
shlb
sub
les
data16
xor
xor
int
cmp
fstpt
push
push
shrl
push
sbb
sarl
mov
cmp
or
ficoms
sub
nop
pop
repnz
or
insb
lahf
and
addb
fnstsw
lods
sti
mov
xlat
scas
sub
add
adc
push
lahf
dec
cli
out
pop
cli
add
or
addr16
inc
xchg
js
mov
jne
lods
and
pop
mov
stc
orb
sub
out
out
dec
int3
inc
cltd
sub
stos
push
hlt
cltd
cmp
ret
loope
add
ret
fistl
xor
mov
rcr
test
mov
pop
adc
and
mov
cmp
scas
nop
pop
adc
mov
dec
lcall
arpl
mov
inc
pop
cs
scas
mov
nop
push
xchg
dec
add
scas
sbb
push
jl
mov
popa
pop
aam
ret
ljmp
inc
xchg
es
sbb
or
lock
mov
popa
or
inc
cmpsl
out
fmull
jge
addb
push
dec
andl
xor
mov
inc
mov
push
dec
mov
lods
jne
pushf
xchg
jecxz
lret
into
or
add
and
fadds
jmp
loop
enter
push
push
or
scas
and
dec
inc
out
pop
test
scas
sub
adc
xor
and
cmpsb
notl
xchg
scas
inc
mov
notl
adc
xor
lds
add
dec
imull
xchg
shlb
mov
push
out
popf
fldenv
cs
outsl
cmp
pushl
repz
pop
xor
scas
sbb
cmp
shl
ja
sbb
xlat
test
mov
in
js
pop
pushf
aaa
jp
or
ds
dec
insl
cwtl
out
and
jle
mov
xchg
inc
dec
scas
lds
popa
xchg
or
cmp
movlps
jg
sub
jno
jle
ret
and
mov
and
cmpsl
push
pop
jae
insb
add
divl
fdivrs
mov
das
xchg
fmull
mov
jne
push
shlb
arpl
int3
mov
orl
cltd
testb
inc
ficoms
mov
out
test
sbb
mov
outsl
dec
andb
sets
lahf
scas
shr
mov
js
push
ret
and
movsl
je
add
and
aaa
dec
add
cli
pop
shll
or
push
loop
into
or
js
dec
movlps
shrl
scas
out
sub
outsl
mov
jbe
test
or
adc
into
mov
adc
cmpsb
sbb
enter
dec
xchg
pushf
mov
sbb
xor
pop
push
xor
mov
jmp
xchg
and
int
push
inc
or
pop
ficompl
dec
lcall
adc
sub
mov
jno
fmull
std
and
imul
xor
mov
pop
mov
test
pop
mov
pop
imul
shl
std
cmp
ror
xchg
add
sahf
cmc
fsubrl
jmp
xchg
lahf
cwtl
loopne
jae
inc
mov
xchg
mov
imul
call
sub
repnz
mov
mov
xor
inc
sbbb
jae
mov
data16
push
jmp
testb
lret
cmp
cmp
test
mov
lahf
insl
ljmp
repz
lock
test
adc
inc
fstl
push
movsb
mov
sub
outsl
in
outsb
pop
cmp
mov
lret
popf
inc
ljmp
push
cmp
pop
imull
xor
cmp
sub
or
pop
mov
lret
mov
scas
or
repz
test
aam
int
iret
icebp
ret
lock
out
sti
push
cmpsb
data16
jmp
dec
stos
push
faddl
jl
cmp
jp
xchg
mov
cmc
xlat
stc
pop
mov
xor
dec
xchg
shrb
sub
addr16
nop
xchg
sbb
clc
mov
mov
insl
mov
xor
stc
add
les
and
sbb
cmp
fs
lahf
cwtl
flds
dec
inc
stc
mov
lahf
sarl
jmp
das
mov
push
lret
and
dec
lret
sub
iret
enter
aas
inc
xor
cs
sti
cs
mov
and
je
pop
xor
xor
fistl
fcmovb
fisttps
ds
adc
push
out
and
xor
or
inc
outsb
xchg
and
mov
xor
js
pop
add
jns
sbb
jo
pop
xor
or
sbb
lahf
popf
xchg
scas
inc
push
aas
into
idiv
in
in
mov
xor
mov
xchg
xor
lahf
dec
in
jge
jnp
xchg
cmp
xor
fdivrs
mov
xorl
cwtl
psllq
mov
jmp
dec
shrb
or
cmp
addb
dec
outsl
cmp
call
addr16
xchg
jge
fildll
in
pop
stc
jle
push
lods
rcrb
out
jbe
jne
xchg
xor
addr16
pusha
mov
xchg
mov
mov
aaa
push
push
jae
lret
std
lds
shl
dec
test
lahf
sub
fwait
stos
mov
lahf
pop
aas
rorb
mov
push
bound
gs
aad
jmp
add
push
fadds
pop
lds
push
push
xchg
lock
sbbb
xor
fsubs
sub
inc
sbb
and
jne
cmpsl
mov
mov
addb
adc
rolb
xor
inc
cmp
out
das
push
je
inc
arpl
cmpsl
push
fsts
mov
lcall
movb
lods
out
xor
lods
mov
pop
inc
pop
push
sbb
push
xor
mov
loopne,pn
jo
xchg
out
fwait
mov
addl
test
aam
movntq
movsb
loop
push
jb
cmp
push
push
jl
imul
dec
inc
adc
cmp
mov
js
add
push
sub
mov
or
leave
xchg
out
clc
dec
and
es
push
inc
rcrb
pusha
lea
xchg
jns
clc
in
fadds
xorb
mov
push
inc
cmp
cmp
popa
or
jge
or
dec
and
jnp
arpl
dec
fildl
xor
cmp
decb
decb
cli
push
sahf
cmp
push
je
sub
cmp
leave
sub
mov
aaa
aaa
sub
mov
inc
rolb
xchg
and
xchg
ds
cmp
out
push
push
in
bswap
fs
loop
add
add
push
movzbl
inc
and
xchg
inc
dec
mov
or
xor
imul
inc
sub
imul
inc
lea
sub
dec
jne
dec
mov
add
movswl
pop
dec
sub
pop
and
sub
pop
inc
dec
dec
mov
add
sub
lea
add
dec
lea
mov
add
ret
push
push
dec
add
push
add
add
dec
sub
lea
lea
push
dec
dec
imul
mov
push
sub
mov
mov
dec
inc
sub
mov
push
mov
mov
movsbl
push
inc
movzbl
xor
inc
dec
push
inc
mov
push
movsbl
mov
pushl
dec
call
sub
add
add
lea
xor
lea
xor
dec
inc
pop
ret
imul
mov
imul
cmp
jb
sub
xor
and
inc
mov
lea
dec
mov
mov
xor
inc
add
inc
and
lea
xor
mov
dec
add
cmp
jb
imul
pop
sub
inc
lea
lea
add
dec
sub
dec
mov
lea
inc
dec
xor
imul
sub
xor
add
movzbl
mov
lea
dec
test
jbe
inc
add
lea
lea
lea
inc
inc
mov
inc
inc
mov
dec
and
xor
movswl
mov
imul
dec
movzbl
imul
sub
add
dec
dec
and
lea
dec
mov
imul
sub
mov
mov
inc
mov
imul
xor
mov
mov
movsbl
inc
dec
mov
imul
dec
jne
mov
mov
dec
movzbl
dec
or
mov
dec
add
dec
inc
mov
inc
lea
add
movswl
xor
inc
lea
dec
mov
mov
sub
test
jbe
imul
dec
movzwl
dec
inc
mov
mov
mov
sub
and
lea
add
mov
mov
sub
inc
movsbl
dec
mov
dec
mov
mov
and
mov
add
mov
add
mov
movzbl
and
inc
add
and
or
and
mov
inc
mov
mov
inc
movzbl
and
movzwl
mov
inc
lea
mov
sub
sub
movzbl
inc
add
add
lea
jmp
push
dec
lea
lea
inc
add
and
mov
lea
inc
inc
add
lea
imul
lea
lea
add
dec
add
dec
dec
add
lea
and
movswl
inc
add
add
sub
dec
mov
sub
sub
inc
xor
movzbl
and
sub
mov
or
cmp
je
imul
lea
add
push
lea
call
call
mov
add
call
call
imul
mov
sub
lea
mov
dec
mov
ret
dec
inc
pop
sub
ret
push
inc
lea
xor
add
movswl
push
dec
sub
push
sub
push
or
push
mov
sub
imul
dec
mov
call
mov
push
dec
inc
xor
sub
sub
add
neg
xor
inc
lea
movswl
mov
movswl
mov
imul
mov
mov
inc
lea
inc
sub
dec
dec
je
mov
lea
mov
mov
inc
add
mov
mov
inc
and
add
repnz
xor
dec
add
add
jmp
sub
mov
inc
dec
dec
add
imul
imul
dec
lea
mov
mov
add
lea
jmp
lahf
push
nop
push
bound
popf
mov
loop
sbb
jns
xor
stos
mov
cmp
dec
in
hlt
cmpsb
or
std
pop
scas
pop
jne
aaa
rcrb
jg
jne
add
sbb
popa
loopne
or
mov
mov
sahf
push
fwait
mov
push
fistl
icebp
stos
add
jnp
jg
xchg
jo
incb
dec
sbb
push
xchg
cmc
xchg
cltd
and
pop
in
sub
adc
jno
call
repnz
inc
or
mov
mov
fwait
mov
shll
and
xlat
jp
push
ds
pop
dec
pusha
xchg
cmpsl
inc
push
mov
adc
jae
jbe
fwait
ror
dec
mov
cwtl
push
ret
xchg
dec
ret
das
dec
push
pop
or
popf
sbb
pop
scas
pushf
jb
lds
dec
dec
rcl
ss
cmp
sub
mov
push
sub
ror
push
mov
add
and
jle
xor
lcall
mov
xor
sub
fs
out
daa
lahf
movsl
bound
cmp
cmpsl
in
pop
lret
cmp
in
pop
cwtl
enter
xchg
inc
test
fidivs
shrl
lods
mov
xor
stc
cmc
cwtl
adc
mov
int3
and
and
or
xchg
leave
daa
mov
jmp
fcomps
xlat
pop
rcrl
mov
fxch
mov
xchg
pop
into
and
test
out
xor
sbb
add
xor
das
mov
mov
cmp
jp
mov
push
pop
adc
mov
jbe
sbb
test
mov
sti
lahf
scas
ret
pop
movsl
js
scas
sbb
aas
mov
dec
push
adc
pop
loop
mov
and
int3
xor
enter
pop
out
icebp
jle
cmp
cltd
cmp
mov
pop
dec
xchg
test
adc
inc
inc
mov
push
mov
and
std
lea
mov
test
and
mov
add
data16
xor
insb
push
cs
aaa
fwait
mov
fsubp
test
push
icebp
add
call
xchg
add
push
jno
and
add
mov
jb
jae
movsb
push
iret
pop
das
adc
mov
movsl
add
shlb
cmpsb
sbb
add
mov
pop
std
mov
xchg
jns
sbb
push
imul
mov
and
xor
int3
mov
pop
mov
cmpsb
iret
add
adc
std
push
dec
jno
jae,pt
mov
xchg
pop
mov
add
and
es
std
pusha
cmp
xlat
out
rcl
dec
sbb
inc
iret
int
into
clc
adc
add
dec
loopne
cmpsb
fs
and
jb
cltd
jno
pop
int3
jmp
dec
jge
inc
xchg
or
out
xor
sbb
sub
dec
stc
and
sub
mov
push
mov
stc
popa
test
data16
fnstsw
and
lcall
jmp
sbb
sub
cmc
arpl
cli
xor
pop
testl
mov
inc
xchg
pop
pop
and
push
xchg
sub
ljmp
push
cmc
ljmp
inc
int3
out
std
adc
lahf
sbb
add
mov
sub
das
cmp
pushl
dec
cli
sbbb
cmp
movsl
stos
inc
lods
rcrb
sbb
cmp
dec
push
insb
mulb
pop
arpl
aam
lahf
mov
ficoml
mov
aas
mov
stc
xlat
mov
or
movsb
hlt
sahf
leave
jnp
int3
lea
dec
mov
in
mov
icebp
int3
adc
jnp
sbb
push
pop
orb
mov
push
jae
inc
jb
xchg
add
insl
dec
imul
cmp
mov
or
dec
out
inc
jne
sti
mov
sbb
test
sarb
inc
clc
pop
dec
mov
pop
xchg
mov
inc
movsb
dec
mov
out
pusha
jp
cmc
jbe
outsb
fisttpll
dec
arpl
push
xlat
pop
arpl
add
inc
cltd
mov
push
jmp
jns
lods
dec
pushf
sbb
xor
push
adc
pusha
cmp
int3
add
std
cmc
hlt
mov
iret
ror
mov
pop
insb
add
and
out
mov
imul
ret
or
inc
inc
mov
pusha
cmpsl
pop
fistpll
aas
movhps
xchg
in
cs
sub
xchg
jne
scas
pop
jg
movsb
lret
je
push
adc
into
adc
fwait
je
push
mov
xchg
mov
scas
mov
adc
jg
imul
push
dec
mov
mov
mov
and
ds
out
clc
sub
clc
mov
pop
adc
repnz
xor
dec
inc
sti
mull
inc
mov
inc
xor
rcll
in
sbb
lods
mov
pop
das
cli
cmp
test
test
sub
mov
inc
out
push
mov
loopne
js
inc
xchg
subl
sbb
shlb
popa
test
mov
xor
fabs
addb
aas
jmp
imul
into
rorb
adc
jle
in
sbb
dec
leave
cwtl
jo
xlat
xchg
das
fnstenv
sub
jmp
arpl
and
rclb
fcoms
xchg
stos
jp
nop
dec
fcomip
hlt
sbb
test
div
cmp
mov
popa
xor
mov
cld
lds
inc
dec
stos
cmp
dec
je
dec
xlat
mov
insb
int
lods
adc
mov
cmpsb
nop
sub
jle
addl
imul
adc
mov
ss
push
xchg
sarl
pusha
dec
arpl
push
sbb
test
pop
sub
mov
or
divl
repnz
loope
pop
sbb
jg
out
mov
jle
pop
imul
push
clc
aas
lods
lods
and
and
in
adc
mov
repnz
int3
dec
daa
popf
inc
nop
arpl
mov
and
xchg
adc
inc
pop
inc
leave
jp
push
add
fmul
xor
jno
int3
inc
dec
inc
mov
dec
call
push
sub
push
adc
push
pop
in
and
jecxz
mov
inc
xorb
aad
cld
jnp
ss
add
out
sub
push
ss
loope
lock
jecxz
notb
push
movsl
mov
jno
cmp
mov
inc
and
mov
cmp
adc
loope
fidivl
rcrb
or
mov
les
jl
mov
cs
jo
rolb
frstor
pushf
ficoms
lahf
pop
loop
shl
cmc
xor
push
in
fcom
xchg
adc
sbb
pop
dec
push
xchg
hlt
insb
out
sbb
add
push
mov
leave
mov
test
test
iret
push
sub
out
popa
rorb
or
rol
insl
test
out
daa
xor
test
push
cmc
es
push
pop
pop
stc
in
mov
xchg
nop
push
and
inc
pop
sbb
loope
dec
in
fistps
sbb
jno
jne
jg
cmp
adc
loopne
mov
xor
and
scas
add
mov
and
sbb
and
add
xor
pop
shrb
jmp
mull
addb
push
mov
stos
pop
xchg
adc
insb
jmp
stos
insb
cltd
and
out
jmp
sub
in
push
push
mov
dec
inc
cmp
fisubs
in
xor
das
clc
xchg
negl
inc
aad
daa
lahf
ficomps
push
and
fwait
sar
jmp
jo
fnstenv
addr16
pop
sti
xchg
cwtd
jle
test
in
sbb
sbb
aam
add
cmc
inc
test
je
pop
push
push
jecxz
jge
and
stos
adc
pop
pop
shrl
sub
dec
push
pop
xor
sbb
dec
push
pop
dec
stos
push
dec
into
ljmp
ss
cmp
enter
sub
sti
xchg
jl
xchg
subb
jae
inc
ret
sub
dec
jp
mov
scas
xchg
aam
adc
aaa
std
xchg
xor
jmp
adc
xor
test
adc
pop
je
add
stos
sub
xchg
arpl
pusha
or
les
lods
sbb
cltd
mov
mov
inc
xchg
sub
pop
lret
addb
call
sub
sbb
push
sbb
ds
sbb
dec
das
fbstp
adc
inc
dec
adc
add
rcrl
push
arpl
iret
cmpsl
sub
sbb
lret
cwtl
adc
jecxz,pn
dec
sub
cwtl
jmp
mov
add
gs
jbe
repnz
pop
mov
sbb
loope
in
pop
inc
jg
mov
sub
dec
popf
sbb
mov
bound
pop
mov
repz
pop
xchg
jns
lcall
push
sbb
ficoml
cmpsl
mov
and
xchg
inc
push
pop
adc
fsubrp
icebp
add
cli
pop
lret
mov
lods
lock
sub
std
cmp
mov
loop
out
ja
jns
and
ljmp
outsb
orb
xor
xchg
mov
test
add
lods
inc
mov
iret
xchg
adc
fsts
mov
hlt
loope
and
call
mov
je
push
arpl
mov
lret
test
cmovl
xor
push
outsl
lret
insl
popl
lret
or
cs
rclb
jl
test
lock
xor
xchg
jge
arpl
das
mov
fnstenv
adcl
int
cs
into
push
lret
lods
xor
sbb
stc
fsts
inc
sub
int
push
push
loop
daa
mov
mov
shrb
loope
sub
push
jge
add
xchg
sbbl
adc
fs
xchg
push
sbbb
mull
gs
arpl
loopne
pop
or
xchg
mov
nop
int3
ljmp
imul
mov
adc
outsb
xor
fildll
push
sub
imul
xchg
into
xchg
and
loop
mov
shrb
sbb
lahf
push
scas
mov
ss
fcompl
inc
jge
and
or
mov
inc
sarb
xchg
call
pop
test
mov
rol
mov
mov
test
sbb
cmpxchg
movsl
enter
add
mov
push
out
jge
mov
mov
lcall
or
push
pavgw
mov
pop
mov
insl
scas
or
dec
das
call
sub
xchg
jp
mov
dec
loopne
inc
das
push
adc
popa
ja
xor
push
push
cmp
lcall
ret
push
ljmp
pop
and
xchg
sbb
xchg
jecxz
mov
aas
inc
stos
inc
out
call
cmpsl
test
push
adc
push
shlb
pop
bswap
mov
jb
jmp
pusha
or
in
lcall
xor
adc
andb
xchg
repz
mov
jmp
mov
int3
mov
pop
popf
ret
iret
sub
ss
outsb
inc
cld
popf
call
push
xchg
cmc
push
and
cwtl
add
inc
mov
or
repz
pop
dec
xchg
pop
mov
movsl
shr
push
xchg
jmp
cmp
pop
xchg
and
cmp
cmp
dec
dec
stos
pop
adc
mov
test
xchg
mov
xchg
les
pop
xchg
roll
scas
adc
insl
das
push
js
fcomps
lret
mov
lock
orb
add
aad
xor
test
add
int
nop
push
testl
mov
js
cld
aas
push
mov
hlt
xor
and
mov
shll
iret
jno
test
sub
mov
hlt
lret
cmp
mov
repnz
aam
nop
icebp
xchg
mov
xor
insl
out
jo
imulb
mov
pusha
add
jno
ljmp
inc
or
add
sub
cmp
xchg
icebp
sbb
adc
popa
shll
loopne
pop
pop
push
int
sub
fscale
pusha
mov
adc
cmp
inc
loope
cli
call
add
xlat
adc
fnstenv
xchg
aad
ja
xchg
hlt
adc
mov
sbb
loop
or
mov
insl
cmp
or
xchg
out
insl
mov
shrb
and
mov
outsb
into
bndldx
mov
das
jno
loopne
mov
jmp
aad
mov
add
lock
xchg
imul
nop
rorl
and
mov
dec
hlt
xor
jp
cmp
stos
dec
shll
js
pop
outsb
jmp
lcall
jno
sub
dec
out
pop
mov
sarb
jl
fucomp
int
xor
je
or
pusha
popf
in
cs
jnp
dec
int
pusha
mov
push
movb
xchg
sbb
mov
cwtl
add
jecxz
adc
mov
popf
mov
push
mov
imul
stos
movsb
fiaddl
pop
sarl
lahf
push
lds
dec
es
shll
cmp
mov
mov
clc
movsl
pop
push
ret
ret
or
shrb
mull
push
mov
jp
sub
push
add
and
iret
push
xor
and
mov
xchg
add
add
cld
adc
sbb
pop
mov
test
inc
scas
int
xchg
pop
xor
loopne
pop
popa
sub
shrl
les
sti
and
sub
addr16
leave
wrmsr
inc
out
mov
jb
jg
sbb
movsb
dec
mov
dec
lcall
je
dec
movb
or
mov
mov
xchg
or
adc
cwtl
cmovp
inc
dec
rcll
jg
sbb
mov
in
ret
adc
or
jle
mov
push
mov
mov
movzwl
call
inc
mov
call
lea
push
inc
call
dec
and
or
dec
lea
call
mov
mov
mov
inc
mov
mov
sub
add
inc
inc
dec
inc
dec
inc
call
dec
add
mov
dec
inc
call
sub
dec
call
mov
inc
mov
dec
inc
xor
mov
dec
sub
pop
inc
mov
xor
add
lea
pop
dec
dec
pop
mov
lea
dec
and
pop
mov
lea
inc
mov
inc
xor
inc
movzbl
pop
mov
movzwl
pop
add
mov
mov
lea
inc
call
movswl
lea
lea
mov
ret
sub
sub
push
movswl
dec
push
imul
lea
push
movsbl
movswl
push
inc
inc
push
add
add
mov
dec
movsbl
push
dec
ret
push
mov
push
mov
sub
sub
xor
push
inc
inc
dec
call
pop
ret
jmp
add
dec
pop
pop
ret
push
mov
add
add
mov
lea
mov
mov
add
dec
dec
add
mov
inc
and
mov
sub
inc
mov
mov
or
and
add
movzbl
sub
inc
pop
ret
sub
imul
mov
inc
add
mov
movsbl
mov
mov
inc
xor
mov
imul
lea
xor
imul
lea
mov
and
lea
inc
dec
mov
mov
inc
inc
lea
cmp
jb
imul
push
dec
inc
push
and
lea
push
dec
dec
xor
add
sub
xor
and
sub
xor
inc
mov
push
mov
lea
push
lea
add
pop
dec
lea
inc
lea
mov
mov
mov
sub
inc
add
xor
add
mov
mov
and
mov
or
imul
movzbl
lea
mov
lea
inc
add
or
sub
add
inc
movzbl
movzbl
lea
add
lea
inc
inc
inc
mov
inc
inc
jmp
add
inc
add
add
add
adc
add
and
add
add
cmc
xchg
inc
add
jnp
add
adc
push
add
mov
stos
push
ficomps
dec
stos
fwait
out
prefetchw
jle
jmp
mov
sarl
leavew
rclb
sub
cmp
repnz
push
in
push
and
jb
packsswb
push
dec
inc
les
pop
inc
inc
inc
out
mov
add
out
nop
loopnew
sahf
scas
xchg
sub
arpl
mov
fldl
cmp
pop
test
test
cmp
out
cmpsb
cmc
imul
ss
sbbl
mov
cld
xchg
ljmp
mov
iret
and
adc
pop
mov
out
scas
aas
pop
xchg
arpl
nop
jl
shll
push
pop
test
aas
test
and
jecxz
jp
aaa
push
sbb
in
lret
data16
dec
cmp
or
sbb
mov
dec
pushf
testb
xor
jecxz
jl
in
into
cli
mov
lods
cli
push
les
push
pop
fisttpll
fstpl
mov
adc
xor
outsb
clc
lea
jle
push
lds
mov
call
scas
add
adc
jle
mov
add
or
iret
enter
cli
cmp
mov
ljmp
jbe
mov
aam
xchg
in
movb
jae
sbb
mov
out
inc
mov
inc
sub
aaa
mov
sbb
int3
adc
pop
arpl
xor
push
repz
fldt
icebp
cli
push
mov
mov
cld
mov
xor
xchg
dec
mov
xlat
dec
test
imul
xchg
adc
mov
and
mov
and
sbbb
cmp
inc
repnz
mov
xor
mov
lret
pop
pop
rorb
imul
cmp
sbb
adc
inc
aaa
dec
cs
fstps
jl
dec
pop
lea
pop
popf
jbe
mov
int3
nop
sbb
push
xor
aad
xlat
and
imul
ret
lods
lcall
sub
mov
mov
fstpt
shrl
cmp
add
dec
scas
loop
cmp
cld
jbe
mov
aad
in
xchg
out
mov
jo
mov
pop
push
pop
push
inc
jb
xorb
lods
out
cmp
inc
fcompl
imul
jno
adc
jl
jne
fisttpl
dec
rcrb
cmp
cmp
inc
arpl
cmc
dec
cmp
sarb
and
out
mov
push
shrb
not
movsl
outsb
leave
jp
js
xchg
gs
insb
mov
jle
mov
and
push
adc
popa
jb
inc
orl
scas
or
leave
pop
xchg
jae
xor
lea
cmc
pop
inc
pop
sub
inc
call
xchg
dec
imul
push
int3
jno
mov
xchg
mov
mov
inc
jp
mov
mov
and
push
sahf
hlt
ss
lret
out
aam
mov
mov
jns
cmpsb
lods
js
dec
xlat
fs
fwait
lret
pusha
sub
xor
icebp
inc
aam
aad
mov
out
cmp
jbe
mov
mov
fcomps
mov
loope
add
jle
ficomps
jp
xlat
cmp
lock
or
fwait
les
xor
inc
sub
stc
adcl
and
xchg
cwtl
loopne
insb
pop
test
out
mov
sbb
rclb
push
jge
jae
fimull
inc
aas
sub
shll
pop
js
mov
jmp
xor
sbb
frstor
arpl
mov
push
fs
mov
enter
cmp
xchg
aaa
add
sub
loopne
xlat
cmpsl
dec
dec
jle
pushf
jbe
lcall
cmp
cmp
test
dec
aad
loopne
dec
mov
xlat
inc
mov
jo
fldl
call
cltd
pushf
repz
push
xchg
sbb
cmpsb
fadd
mov
ret
sbb
pop
cmp
out
pusha
test
icebp
ljmp
sub
in
xor
mov
test
outsl
aam
repnz
lret
mov
pop
lcall
stos
add
or
pusha
add
push
ret
and
mov
pop
push
adc
out
pop
sti
jl
push
sub
sub
mov
aad
movsb
sbb
mov
xor
add
mov
das
xchg
sub
int3
cmpsl
stos
mov
das
jns
ret
cmp
inc
rol
ficompl
pop
cmc
mov
ret
mov
xchg
out
dec
adc
adc
cwtl
hlt
dec
mov
xor
int3
lret
add
sti
hlt
xchg
or
sub
pop
sahf
jno
rorl
jl
aad
cmp
ss
cmp
negl
fcoml
pop
test
rorl
ja
jbe
xchg
cmpsb
test
lds
cmp
add
cmp
outsl
les
inc
and
call
lahf
mov
adc
inc
adc
push
dec
sbb
loopne
push
sub
loopne
xor
nop
xchg
inc
sti
aam
mov
mov
rorl
popa
xchg
jno
dec
movb
leave
push
and
aam
adc
iret
dec
sub
es
gs
pop
int3
fsubr
rcl
std
sahf
push
push
jnp
mov
data16
sub
xchg
cli
inc
pop
mov
les
add
dec
mov
fiadds
cli
adc
les
mov
xchg
cmpl
add
outsb
fists
cld
cmp
aaa
mov
sti
mov
xor
ja
inc
adc
insl
in
sbb
in
xorl
rcrl
pop
mov
add
sbb
in
cmp
sub
out
jmp
std
fldl
add
add
shll
and
xorl
fildl
pop
push
dec
fwait
cmc
rolb
push
mov
subb
xchg
icebp
pop
or
cmp
bound
pushf
xor
cld
loopne
pushf
shl
inc
pop
jae
fiaddl
push
ret
pushf
scas
ss
lock
test
fsubl
outsl
jle
adc
mov
sahf
pop
sub
adc
popf
xchg
push
shlb
mov
aaa
mov
or
push
push
aas
mov
aas
sub
repnz
lds
setg
jo
call
xor
stos
cmpsl
sub
adc
mov
shll
sub
push
mov
aad
cmp
cmp
mov
repnz
xor
inc
mov
push
movsb
aam
ret
jnp
dec
lea
test
add
sub
in
jmp
test
and
sub
add
jp
add
add
int3
ljmp
cmc
inc
cmc
jns
test
xchg
sub
sti
pop
mov
clc
int3
and
addr16
mov
fsubrs
and
in
lds
sbb
fstpl
enter
jo
in
loop
shrl
ret
pop
lods
xchg
mov
mov
ljmp
push
or
mov
leave
aaa
mov
xor
test
mov
jne
mov
adc
mov
je
sbb
movsl
cmp
inc
adc
cmc
xchg
sub
cmp
in
out
stos
or
fucompp
mov
test
xor
std
xor
push
cmpl
ds
cmp
fistpl
std
stc
loope
insl
jne
lds
sub
push
mov
jmp
pushf
out
leave
cmp
adc
aas
push
pushw
sbb
pmaxsw
mov
popa
in
cmp
mov
sub
xchg
cld
push
or
pop
leave
jne
xchg
sahf
stos
and
stos
mov
sub
xlat
jp
jno
nop
pop
and
adc
lret
aam
leave
mov
sti
popa
mov
leave
xchg
mov
stos
sbb
jb
dec
push
scas
aam
shlb
jge
pusha
mov
idivb
popf
movsb
daa
add
outsl
xchg
repz
sbb
das
cmp
jle
mov
inc
mov
push
shrb
pop
jl
mov
fdivl
insb
sbb
notl
movsl
push
or
push
inc
fcomps
repz
inc
cmp
call
push
mov
ss
mov
jl
and
pop
ret
push
mov
imull
dec
fimull
push
inc
xor
push
jl
mov
sub
and
loop
into
mov
mov
jmp
add
sbbl
fs
aam
and
jmp
fsubrs
cmc
addb
loope
arpl
insl
test
das
mov
push
das
pop
and
inc
cmp
fsubs
dec
fucomi
inc
loop
addr16
scas
push
jne
test
inc
mov
in
jmp
bound
shl
pop
xor
cmpsb
imul
dec
and
orl
fsts
and
sarb
sbb
add
mov
inc
add
or
enter
and
push
mov
jae
mov
hlt
push
cmp
jmp
mov
or
mov
jecxz
jns
pop
pop
incl
mov
pop
dec
aad
pop
pop
sbb
push
test
mov
ffreep
lcall
mov
xor
pushf
lods
int3
mov
es
mov
add
aam
and
add
int
push
mov
test
jne
aaa
xor
int
inc
pop
lret
cmc
outsl
jp
imulb
inc
and
cmpsb
rclb
mov
inc
std
in
test
lret
xlat
jg
xchg
dec
mov
pop
sbb
aam
adc
and
push
jns
jp
jb
pusha
test
mov
mov
mov
jo
push
push
push
pop
push
out
push
dec
adc
mov
cmpsb
mov
aas
lcall
inc
inc
xchg
das
mov
adc
push
add
sub
ljmp
fadd
movsb
mov
xchg
subl
mov
sbb
sub
jp
xchg
jle
xlat
mov
xchg
roll
mov
into
cwtl
cmp
lea
movsb
inc
fadds
dec
test
pop
jbe
or
jmp
jns
mov
ret
jg
enter
sbb
dec
or
sub
jge
mov
orb
add
insb
das
jg
int
dec
mov
add
bound
push
xchg
test
pop
push
or
adc
push
fidivl
sub
addr16
je
add
jle
add
push
sti
cmp
loope
jle
xlat
mov
fcoml
shll
push
mov
addr16
xor
xchg
mov
int3
xlat
add
cwtl
jecxz
or
add
mov
pop
xor
and
push
into
cmp
mov
or
insb
dec
xor
mov
mov
loopne
ret
test
xor
push
push
int
jle
pusha
loopne
gs
mov
je
mov
mov
scas
add
test
aam
int3
outsb
lods
js
es
inc
jns
mov
popa
movsb
rcrl
dec
cmpl
mov
mov
ss
pop
jmp
jb
push
enter
adc
mov
inc
inc
add
stc
sbb
xlat
xor
cmp
gs
ret
fwait
pop
ja
push
push
pop
xchg
mov
jb
push
cmp
pop
inc
loop
daa
out
fcom
aaa
jl
pop
xchg
cmp
cmpsb
cmpsl
dec
push
push
lret
popa
sub
out
fs
dec
jle
stos
in
iret
outsb
jno
lea
adc
xchg
inc
xor
sub
mov
call
or
xchg
add
loop
sub
push
jp
and
and
jns
movsb
cmpl
lds
arpl
xor
in
cmp
mov
lods
push
lret
mov
rcrb
pop
fs
inc
add
shll
loopne
mov
sbb
sub
sub
jle
fdivrl
in
clc
scas
push
stc
xor
push
adc
imul
test
xchg
push
cltd
rclb
and
and
push
sbb
ja
mov
dec
jb
mov
inc
adc
pop
sbb
aad
andl
fldpi
imul
jae
fucomip
mov
push
jno
jle
rdtsc
mov
push
out
popf
aad
int3
iret
call
push
test
fwait
sbb
cmp
hlt
scas
push
or
unpcklps
xchg
ficompl
sbb
xchg
sbb
add
sub
pop
sub
popf
adc
aam
sub
mov
scas
adc
or
jmp
out
cli
cmp
lods
mov
imul
xchg
inc
inc
lcall
or
mov
rol
es
idivb
mov
xchg
inc
addb
xor
enter
jne
fistps
xchg
xor
adc
lods
xor
add
pop
aas
jg
loop
dec
and
int3
cli
fisubrs
jo
xor
inc
sub
add
arpl
jp
jle
xchg
jg
test
pop
scas
adc
std
push
mov
pop
jbe
fimuls
pop
pushf
mov
lcall
cmp
cs
femms
inc
andl
mov
fnstsw
out
pop
outsb
imul
push
jbe
imulb
jmp
xor
outsb
ret
xchg
xor
add
pushf
psrlq
cltd
add
pop
test
add
mov
and
cli
lret
scas
out
cmp
imul
jb
mov
out
mov
push
loopne
jae
into
loop
mov
xchg
stos
xchg
mov
ja
js
hlt
hlt
or
add
clc
cwtl
push
xchg
std
dec
pop
gs
sub
movsl
or
mov
andb
in
arpl
ficoms
out
add
mov
push
out
inc
pop
xor
test
dec
xor
test
push
pop
mov
jbe
jl
loope
xchg
in
add
repnz
mov
and
xor
pushw
and
xor
dec
push
shll
xlat
adc
xor
insl
in
push
loope
cmp
leave
xchg
jle
push
ja
and
cmp
lahf
push
inc
pop
inc
jmp
ret
stc
cmp
sbb
xor
lds
rcrl
cmpsl
inc
jnp
leave
mov
out
jl
mov
xchg
add
sub
pusha
lock
pop
pop
add
mov
dec
inc
call
xor
inc
fcmovnu
add
sub
adc
fbld
push
scas
sti
scas
shll
mov
daa
push
pop
loop
mov
fcmovne
or
mov
mov
adc
outsb
adc
xor
mov
scas
stc
fs
jp
mov
mov
xchg
out
lret
sub
sbb
bound
xor
loope
and
dec
cmp
pop
sbb
out
sbb
cmpsb
xchg
adc
sub
loopne
sti
cwtl
sub
sbb
lcall
enter
inc
test
insb
cmp
sbb
cltd
vmwrite
decl
add
push
xor
cmp
ljmp
das
test
cltd
xchg
jno
mov
cmp
stos
insl
dec
mov
aas
mov
push
adc
cmpsl
mov
cmp
loope
pmulhw
mov
std
add
rorb
leave
imul
jne
loop
call
jmp
loopne
or
insb
xor
dec
push
and
ds
sub
sbb
or
mov
pop
out
xor
and
mov
add
jb
cmp
pop
push
mov
stos
push
or
and
les
mov
int3
rcrb
or
mov
cmp
lock
push
sti
subb
mov
into
xchg
jnp
xor
inc
pop
inc
jmp
mov
mov
mov
add
mov
or
decl
xchg
jmp
int3
lock
mov
jae
iret
hlt
rcrl
and
cmp
inc
push
xor
rorb
cwtl
dec
insb
fs
pop
out
js
push
dec
lock
in
mov
mov
dec
mov
add
mov
aad
pusha
dec
sahf
dec
ljmp
sbb
add
sub
aas
push
mov
pop
inc
fidivrl
push
pop
add
mov
xchg
cmp
mov
in
sub
loope
xchg
pop
lea
aaa
sbb
xor
jnp
cltd
inc
sbb
push
ds
fwait
mov
jecxz
add
sub
jp
lahf
fdivrs
mov
cld
or
jle
adc
pop
jno
push
push
xchg
nop
inc
pop
xor
xlat
adc
imul
dec
push
or
pop
notb
mov
iret
into
adc
add
aas
dec
es
or
movsl
notl
fiadds
inc
push
outsb
jns
adc
sbb
lods
mov
mov
mov
int
pop
cmp
xchg
mov
jne
mov
scas
and
in
cmp
test
imul
jg
push
sub
pmaxub
mov
and
and
push
jl
pop
enter
push
adc
push
loopne
push
pop
and
dec
movsb
out
mov
aas
dec
mov
pop
cld
xchg
jae
sbb
lock
jp
dec
loope
xchg
mov
imulb
adc
sti
adc
xor
out
lret
sub
dec
arpl
dec
dec
je
push
std
dec
popf
cli
mov
shrb
pop
pop
add
jl
aad
cmp
nop
sbb
aaa
lock
fidivl
jns
fwait
xor
jns
outsb
jmp
mov
xchg
and
in
nop
fsubr
arpl
xchg
stos
out
rclb
inc
jb
ds
call
aam
lods
in
or
jbe
fistpl
mov
es
scas
sbb
decl
pop
test
int
sbb
cwtl
outsl
popf
push
lea
leave
jg
flds
cmpsb
sbb
mov
stc
lods
mov
flds
outsb
in
outsb
xchg
push
pushf
outsl
mov
and
roll
inc
xor
shlb
mov
mov
test
jnp
push
in
xchg
pop
cld
sarb
imul
pop
iret
hlt
push
mov
and
out
vunpckhps
adc
jecxz
push
jo
xchg
bound
add
inc
adc
loop
push
jae
int
lret
push
xchg
cmpsb
lret
iret
cmpsb
push
cli
out
popf
popf
mov
and
xor
sbb
jno
lea
or
or
adc
and
pop
add
and
and
mov
inc
jnp
jle
jae
in
subb
outsb
adcl
loop
xchg
stos
sbb
inc
push
bound
cmp
pop
aad
inc
jecxz
lock
fldz
mov
outsl
arpl
ljmp
enter
aaa
ss
test
pop
loope
sub
lret
sub
je
mov
inc
int3
dec
push
pop
dec
scas
xchg
mov
es
cld
mov
sub
cmp
jg
out
pop
movsl
out
xchg
dec
in
cs
jge
push
or
out
es
push
ficomps
jle
shll
aaa
sub
repz
stos
aaa
cli
call
dec
subl
or
sub
xchg
nop
cld
mov
insl
dec
ret
fisubrl
xor
faddl
cmp
jmp
cmp
mov
lret
repnz
push
add
cmp
bound
push
jle
in
iret
std
cs
mov
mov
adc
mov
loop
adc
or
cmp
ret
test
in
test
outsb
fmuls
cmc
mov
mov
jmp
inc
fstp
mov
push
cmpsl
lret
pop
stc
pop
mov
mov
data16
shrb
pop
pop
rorl
jnp
adc
adc
cld
loopne
in
pop
dec
daa
or
orb
jge
nop
std
mov
cmpsl
mov
aam
jmp
mov
aas
xlat
test
stos
push
sub
or
cmp
sbb
pusha
lret
scas
sti
hlt
int
data16
pushl
inc
sbb
or
cmp
es
jno
push
add
sbb
loopne
mov
jmp
lret
xor
push
or
std
sbb
pop
mov
arpl
mov
mov
push
pusha
or
repz
cmp
rorb
mov
insl
mov
mov
adc
jne
mov
sbb
xor
andb
rcrl
add
cltd
mov
pop
push
jnp
mov
cmp
imul
int3
fists
test
xchg
mov
stc
jns
mov
cmc
das
das
push
mov
inc
icebp
jp
xchg
and
add
movsb
add
pop
or
xor
add
repz
pop
xchg
and
jo
mov
std
test
jnp
rcrb
push
jbe
jmp
and
test
stc
inc
test
push
xchg
sbb
adc
mov
mov
mov
jno
mov
stos
cmp
xor
push
xchg
mov
stos
fs
dec
dec
loop
arpl
and
repz
sbb
out
fildll
iret
xor
mov
loopne,pn
call
daa
es
jnp
and
inc
jmp
insl
pusha
int3
clc
fucom
popf
cmp
nop
mov
push
cwtl
fsubs
cmp
pop
xor
clc
jge
fs
xchg
out
mov
repz
push
and
outsl
push
mov
iret
sahf
adc
sub
pop
push
pop
xlat
sbb
jecxz
cmp
jp
xorb
sbb
icebp
jno
fldcw
sub
push
into
push
lods
cli
stos
int
fstpt
lea
out
inc
cmp
adc
int
xchg
jbe
pop
sbb
xchg
pop
adc
call
dec
mov
jmp
push
sbb
push
pop
cmp
cmp
cmpsb
cmp
push
xchg
out
cwtl
in
js
movsb
sub
and
data16
or
mov
pop
out
xor
xor
push
shrl
into
or
jmp
mov
sahf
int3
das
rcll
jl
pop
dec
lret
cmp
push
xor
push
sub
mov
xor
bound
lahf
lahf
movsl
sub
arpl
out
jmp
add
cmp
jle
daa
ljmp
jb
ljmp
sti
test
push
mov
add
and
cmpsl
cmpsb
dec
rcl
insb
lahf
inc
sub
adc
aas
testl
adc
push
push
or
lahf
xor
ret
inc
and
dec
inc
mov
mov
mov
add
sbb
inc
sub
int3
sahf
stos
inc
xor
mov
loopne
lret
out
pop
or
repz
or
icebp
sti
outsl
stos
jmp
jle
push
add
cmp
call
mov
out
inc
and
sub
sbb
and
jbe
xchg
ret
mov
test
in
xchg
xor
lods
jecxz
jnp
loop
xchg
sbb
xchg
inc
clc
out
push
data16
push
sub
aas
cmp
xchg
jbe
mov
jbe
sti
mov
and
cmp
jns
jno
and
mov
cmpsl
cmp
push
dec
xlat
notl
sbb
push
into
dec
mov
gs
sarb
fisttpll
leave
pop
mov
bound
jo
push
insl
into
std
xchg
and
loope
cmp
mov
cmp
test
sbb
lock
inc
mov
xchg
aaa
fstpl
mov
ds
dec
jne
cli
add
xor
pop
sub
jo
push
ret
hlt
cwtl
data16
mov
mov
ljmp
sahf
adc
cwtl
add
test
or
enter
push
pushf
add
mov
jo
dec
pop
aad
push
test
push
mov
pop
jo
hlt
xor
filds
lret
mov
sti
ret
pusha
out
test
sbb
insb
sbb
push
sarl
jae
sbb
test
enter
fsubl
adc
and
sti
int3
mov
cmp
icebp
sub
cmc
xchg
lea
cmp
cld
test
sbb
dec
dec
fdivrl
xor
mov
dec
mov
lahf
call
sub
lcall
xchg
rorb
inc
sub
mov
push
sub
out
sbb
aas
mov
sbb
mov
adcl
insl
stos
daa
xchg
jmp
jnp
mov
inc
mov
pop
addr16
pop
xchg
jge
lahf
stos
cs
push
insl
xor
push
mov
push
xchg
or
cmp
movsb
jae
mov
or
daa
std
dec
fldt
leave
addb
insl
mov
inc
mov
inc
sarb
cmp
cmp
mov
stos
cmpsb
xor
rcl
sbb
dec
push
pop
jne
rcll
lahf
fidivrs
jne
xor
loop
inc
pop
cmp
add
sbb
test
fwait
das
hlt
pop
aad
clc
aaa
or
mov
sahf
test
rclb
dec
push
sbb
pop
dec
scas
cld
rolb
adc
test
cmpsl
dec
add
push
es
out
xor
imul
repz
imul
pop
test
mov
call
xchg
add
xor
mov
mov
xor
lods
sbb
test
or
bound
jecxz
mov
lock
arpl
ret
arpl
jbe
and
insl
jecxz
arpl
pop
or
mov
jecxz
mov
jnp
lods
dec
stos
jno
pop
rcll
jae
js
addr16
nop
xor
jl
call
pop
subl
cmp
fimull
add
test
lods
xlat
stos
adc
aam
cltd
cs
daa
aas
std
scas
mov
inc
dec
lods
sbb
xlat
mov
xor
mov
cs
adc
mov
mov
aad
sbb
mov
imul
into
sub
sbb
jno
mov
xchg
adc
xor
insl
add
imul
lret
lds
out
lret
jmp
fists
cmc
sub
std
out
stos
push
cmpsl
ljmp
xchg
lcall
popf
and
fimuls
jbe
or
mov
adc
and
testl
rclb
cmp
out
or
xlat
mov
loope
push
loopne
sbb
xlat
mov
jmp
mov
jl
dec
outsl
sbb
in
inc
in
inc
ds
lds
pop
cmp
stos
fsubl
orb
xchg
cltd
testl
outsb
sub
enter
repz
int
mov
push
pop
cmp
test
or
mov
iret
jo
shlb
test
testl
dec
call
clc
inc
sub
dec
scas
or
pop
fs
frndint
and
push
and
lods
mov
enter
dec
jo
or
outsl
lahf
inc
push
push
divl
jbe
int3
shrl
adc
xchg
mov
inc
ficoml
cmp
out
addr16
out
ss
arpl
mov
push
jno
mov
mov
cltd
jl
push
lcall
sub
sbb
int
cmp
nop
xlat
xor
jp
or
and
bound
or
inc
sub
bound
lret
add
mov
lcall
add
out
mov
pop
jg
loop
mov
loope
xorl
jge
cmp
test
into
and
pushf
mov
scas
sub
pop
and
in
mov
jecxz
in
pop
mov
cli
pop
mov
and
daa
ret
lock
arpl
dec
sub
pop
xchg
xor
sbbl
mov
jne
push
sub
add
lods
outsb
mov
cmp
push
pop
cmpsb
mov
mov
repz
sub
xlat
xchg
xchg
ljmp
mov
repnz
inc
rorb
xor
adc
out
push
push
mov
lock
mov
push
xlat
xlat
dec
call
fstpt
push
std
in
and
icebp
je
rorb
cmpsl
data16
add
cmp
loope
aaa
mov
aas
or
jne
and
pop
pop
addr16
push
pop
or
mov
in
adc
dec
or
xchg
int3
cmp
adc
ret
das
jns
lcall
jb
scas
mov
pop
cmp
ret
xor
jl
outsb
jo
sub
cli
mov
sbb
push
sahf
inc
cld
rol
sar
xor
cs
push
and
int3
add
jnp
fmull
xlat
xchg
int3
sub
rolb
test
mov
les
or
add
mov
stos
adc
lds
repz
jecxz
and
sbb
in
addr16
es
out
sbb
mov
imul
or
cli
add
and
sti
add
dec
xchg
lods
shll
push
and
out
dec
xchg
jle
fs
leave
out
mov
ss
notl
jns
mov
in
xchg
daa
xor
jne
mov
outsb
loopne
adc
xor
cld
mov
cmp
mov
cmpsb
pop
add
sub
or
in
stc
mov
mov
adc
dec
out
dec
arpl
scas
mov
push
rcrl
or
lret
and
fistl
mov
movsb
sbb
mov
mov
cmp
mov
pop
xchg
daa
mov
addr16
fsts
lock
leave
iret
arpl
lea
popf
stc
jge
push
lcall
sub
popa
out
mov
rorb
sti
sbbl
addb
cmpsb
in
mov
mov
arpl
cmp
movsb
cmp
cmpsl
sub
ljmp
xor
mov
loope
pop
inc
iret
xor
xchg
stos
jle
adc
out
cmc
lret
and
or
pushf
xor
fsubl
mov
les
jg
push
enter
insb
movsl
inc
adc
mov
push
inc
adc
push
in
daa
mov
sti
les
test
xchg
cltd
add
roll
inc
push
dec
sub
incl
cli
pushf
mov
pop
dec
sbb
xor
dec
pop
stc
stos
adc
and
addr16
sub
dec
and
pop
ret
neg
gs
ret
outsl
cmp
jmp
test
xor
popa
fidivrl
rorl
in
mov
pop
arpl
fs
dec
dec
sahf
lds
test
insl
es
mov
dec
shlb
je
jge
cmp
lret
dec
push
pop
dec
je
enter
in
leave
fisttpll
clc
adc
out
push
or
inc
sub
and
cmpsb
mov
sahf
repz
bound
pop
je
push
pop
lret
out
clc
xor
outsl
dec
push
daa
cmp
mov
flds
fwait
test
dec
mov
lret
push
jle
xor
dec
cmp
xchg
or
mov
test
mov
repz
cwtl
sub
stos
lret
jnp
aaa
sub
faddl
psraw
inc
ja
int
xor
cli
dec
push
jl
loope
lods
push
fwait
pop
sub
or
cmpsl
pop
clc
add
sbb
xor
in
repz
push
mov
lret
dec
and
mov
mov
or
push
mov
jne
dec
cltd
sbb
inc
shr
popf
jmp
pop
mov
es
dec
movsb
lret
mov
sub
sub
adc
dec
les
lret
bound
je
addl
fs
cmpsb
insl
loopne
mov
mov
inc
mov
or
or
mov
sbb
dec
out
loopne
arpl
dec
popf
pop
nop
nop
out
mov
cs
jl
les
data16
lods
xchg
sbb
addb
fidivrs
add
or
push
or
imul
push
add
pop
or
imul
lods
iret
jns
cmp
orl
mov
pop
cmp
jb
mov
sbb
sti
jmp
sbb
not
out
or
push
shlb
jp
in
je
mov
popf
adc
shlb
cmp
aaa
stos
pop
cmpl
loopne
test
xchg
fisubrl
push
mov
push
inc
int3
dec
orb
pop
sbb
fldenv
int
fnsave
xchg
sbb
out
mov
fdivr
mov
push
xchg
jmp
lret
pop
mov
mov
enter
pop
imul
xor
inc
mov
cmpsl
add
push
adc
and
mov
ljmp
stos
test
xchg
mov
mov
addl
idiv
xchg
testl
call
mov
sub
fdivrl
ss
push
cmovg
aam
jmp
and
ret
add
divb
lock
ds
jmp
cwtl
cwtl
sub
cmp
or
push
mov
sbb
xchg
scas
mov
imul
imull
mov
stos
or
insb
mov
jo
jge
xchg
lret
jecxz
cmp
popa
xchg
mov
adc
sbb
sub
fnstenv
sub
mov
push
mov
adc
imul
iret
xchg
sti
or
out
stos
adc
dec
xor
mov
xchg
push
and
test
aas
xchg
mov
nop
loop
xchg
add
lods
insl
xor
cld
mov
leave
xor
mov
jmp
push
arpl
test
mov
ss
mov
fwait
sbb
movsb
or
es
iret
in
orl
xchg
xchg
or
mov
pushf
cli
or
add
push
sarl
mov
popf
mov
nop
ljmp
in
into
pusha
jno
hlt
and
ljmp
cli
xchg
es
sub
mov
lods
and
scas
sub
ljmp
popa
leave
fcmovne
inc
mov
arpl
inc
xor
xor
fisubs
push
out
call
fwait
hlt
push
add
idivl
jns
popf
popf
je
pusha
mov
out
push
cs
fistl
test
enter
dec
add
and
rcr
push
mov
and
lahf
mov
in
inc
fs
push
stos
pop
xchg
add
shlb
dec
xchg
in
mov
fidivrl
je,pt
jb
mov
jg
and
mov
push
jae
bound
mov
lcall
sub
dec
daa
cmp
pop
divb
enter
fisubrs
faddl
out
mov
cmp
ret
push
mov
push
dec
insb
mov
ret
fisttpll
cmp
testl
sub
dec
jnp
or
div
fisttpl
fdivl
mov
inc
mov
ret
outsl
movsl
je
out
fs
pop
fs
and
cmc
testb
aam
lds
insb
mov
mov
rorl
divb
pop
or
loope
lods
pop
aad
in
mov
rorb
rclb
mov
stos
pop
je
movsb
mov
xchg
int3
mov
repnz
shll
insb
rcrb
cs
jbe
fldl
inc
leave
icebp
or
lods
cli
fstpl
sub
aaa
mov
adc
ljmp
pop
cmp
mov
jae
das
push
mov
xlat
test
out
sahf
es
pop
repz
or
mov
push
pop
xchg
imull
shlb
dec
cmc
in
leave
pop
imul
cwtl
mov
inc
dec
sti
cmp
sbb
jecxz
dec
mov
mov
mov
xchg
and
cmp
push
adc
cwtl
cmp
cmpsl
insl
or
jmp
fmul
fdivrp
insl
jl
ret
lret
cli
je
gs
imul
adc
mov
jecxz
icebp
dec
lds
and
or
mov
adc
adc
jg
mov
insl
fidivrl
insb
cmpsl
fs
xchg
xlat
fxch
fwait
inc
inc
dec
xchg
cmp
sahf
xchg
push
test
jmp
xor
pop
mov
test
mov
mov
xor
sub
mov
stc
adcb
in
daa
add
test
ffreep
pop
sti
mov
dec
jg
filds
and
aam
nop
mov
test
scas
aad
aas
push
in
ja
sub
pop
cli
loope
adc
jmp
xor
lods
add
jp
jno
ret
adcb
mov
cmp
xchg
xor
jmp
icebp
push
add
dec
dec
jmp
subb
jb
stc
out
lret
movsl
nop
sbb
and
es
sub
pop
dec
enter
sbb
inc
pop
fcoml
pop
imul
cmpl
sbb
test
inc
loop
mov
repnz
fdivrl
popa
arpl
jecxz
jae
outsb
sub
loopne
daa
repz
sbb
decl
out
or
mov
test
outsb
sarl
aaa
repz
jmp
xchg
cli
and
in
jne
add
mov
cmp
jmp
cmc
pop
in
inc
inc
fbld
jmp
add
loop
jg
add
test
or
mov
jmp
ret
inc
and
fcmovbe
push
jp
mov
mov
daa
nop
in
push
push
pop
lds
pop
or
sbb
in
dec
popa
and
int3
or
cmp
jne
lret
mov
cmc
sbb
repz
sbb
push
js
inc
pop
xlat
and
loop
mov
cmp
in
orb
mov
cli
or
aad
xchg
andl
out
dec
mov
cwtl
loopne
inc
aam
xor
add
inc
das
sub
test
aas
jge
mov
inc
mov
add
add
loop
nop
xchg
verw
pop
out
sub
adc
andb
push
mov
repz
adc
xchg
inc
and
push
mov
push
dec
and
lea
pop
ljmp
pop
mov
lock
enter
add
add
pop
loop
std
fnstsw
ds
out
rorb
and
aad
push
xchg
les
aaa
lods
sub
push
popf
mov
filds
movsl
das
push
out
es
cwtl
rcrl
clc
mov
dec
inc
jns
and
mov
dec
cltd
jmp
hlt
hlt
cld
and
fiadds
mov
pop
cwtl
xchg
data16
or
mov
sbb
jbe
push
add
call
adc
rolb
push
adc
pop
xor
mov
or
addl
inc
bswap
orb
stos
iret
cmc
cltd
lods
sub
xchg
dec
out
xor
jl
lods
or
mov
int3
push
lods
adc
xchg
cs
gs
clc
pop
andb
add
pop
xor
inc
pop
mov
pop
cmp
clc
lods
loope
mov
das
lret
sbb
mov
rolb
xor
fcomps
nop
sahf
cmp
clc
sub
mov
mov
inc
pop
cmp
test
fs
bound
adc
ljmp
and
jl
lcall
adc
mov
loop
push
and
loopne
fisttpl
adc
xchg
sub
xlat
fistpl
aas
xchg
sub
in
dec
adc
es
xorb
int
mov
dec
popa
fdivrs
dec
sub
in
inc
adc
pop
inc
pop
sti
out
pop
push
xlat
mov
add
sub
jne
mov
fldl
and
mov
dec
xor
xchg
mov
push
mov
xor
sub
jne
in
stos
push
sti
repnz
and
fists
lcall
call
dec
cltd
lods
incb
lds
pop
ja
cmpb
sbbb
pop
in
mov
mov
stos
dec
xchg
dec
add
push
or
mov
insb
xchg
and
arpl
mov
dec
mov
imul
in
cwtl
pop
or
lahf
mov
divb
push
aaa
add
or
addr16
adc
mov
shll
sub
mov
les
aam
jmp
xchg
jmp
mov
and
mov
fsubl
jle
add
lahf
stc
scas
adc
addr16
iret
out
jbe
int
test
and
jo
push
fmull
xchg
hlt
adc
and
pop
in
scas
fcomps
adc
fisubrs
xchg
dec
out
lcall
adc
cld
pop
adc
sub
cli
aam
jge
test
inc
aaa
lret
bound
fildll
xor
jae
mov
push
lret
jb
cmp
movsl
ljmp
rorb
ret
mov
push
adc
cmp
and
out
test
jl
add
clc
adc
mov
or
add
out
or
xchg
mov
or
jns
mov
mov
movsb
leave
add
insl
xchg
insb
jnp
std
inc
mov
cwtl
shlb
xor
xor
adc
imul
gs
cltd
jno
shrl
mov
inc
pop
cmp
cmp
jp
sti
ss
xor
fists
sub
icebp
xorb
sbb
in
filds
repz
push
negl
insl
adc
adc
cltd
rolb
jo
push
sub
xor
setl
int
popf
jne
je
stc
jmp
addr16
data16
into
fldcw
lods
aas
or
and
add
repnz
das
push
inc
shrb
dec
cmc
jne
mov
ret
gs
pop
ret
iret
pop
bound
pop
add
fisttpll
cwtl
or
jne
out
in
lret
adc
andb
pop
shrl
sbbb
xor
sarb
aaa
mov
sub
jo
repnz
adcb
sti
std
xchg
push
stos
inc
clc
push
lcall
loopne
lea
or
dec
testl
repnz
cmpsb
mov
jg
mov
int
dec
sub
cmp
cmpsb
cmp
push
iret
push
in
pop
pop
das
std
pop
test
and
dec
cld
push
sahf
test
add
jnp
lahf
fwait
pusha
mov
dec
fsubrl
je
insb
pushf
push
sub
sbb
xlat
in
xchg
inc
mov
xor
stc
pusha
outsb
popa
dec
stos
dec
sbb
clc
in
xlat
je
sub
xor
mov
fistps
cld
test
insl
mov
not
test
inc
sub
adc
jnp
fs
xchg
jecxz
dec
dec
fwait
lods
fcmovnu
mov
scas
cmp
les
aam
scas
insb
hlt
incb
xchg
push
das
mov
nop
sbb
dec
mov
cli
and
push
mov
cmp
sti
es
insb
cmp
arpl
sbb
mov
shl
jge
mov
aaa
gs
xor
flds
and
push
dec
enter
lods
sbb
mov
jae
mov
out
cltd
dec
testb
mov
push
test
aas
pop
pop
outsl
or
pop
pop
jl
iret
fcoml
in
add
shrl
xchg
aad
jo
addb
cmp
push
ret
push
xchg
jmp
mov
lcall
test
push
mov
clc
cmp
lds
xchg
sub
xor
mov
xor
adc
enter
sub
movsb
gs
and
jl
pop
mov
xlat
out
dec
and
sbb
pushf
cmpsl
xchg
aam
cmpsb
mov
and
dec
scas
push
roll
dec
aam
push
jecxz
mov
mov
jb
or
pushf
iret
lea
js
repz
jecxz
lock
in
push
jnp
mov
fnstcw
xchg
lds
enter
xchg
das
shr
sbb
negb
sbb
sub
or
imul
cmp
sub
mov
or
adc
ret
push
jecxz
dec
dec
xchg
adc
stc
movsb
pop
mov
inc
and
test
dec
jns
xor
aaa
xor
xchg
insl
mov
pop
aas
out
pop
dec
int3
mov
loopne
cmp
sti
js
call
pop
pop
jmp
push
mov
sti
int3
lods
shll
dec
outsl
and
sbb
mov
cmc
push
add
mov
sbb
data16
push
fbld
mov
sbb
pop
fisubs
and
loopne
or
mov
dec
mov
dec
cli
int
mov
and
daa
pop
add
ss
test
and
arpl
add
adc
pop
stos
pop
std
nop
or
pop
fdivrs
dec
pop
add
pop
aad
gs
xor
adc
cmpsb
mov
push
andb
out
repz
add
mov
scas
sbb
dec
movsb
pop
loop
inc
popa
add
inc
mov
fs
sub
push
das
mov
xor
std
push
inc
xchg
fmul
addb
scas
roll
in
enter
sbb
jmp
aam
dec
jmp
pop
push
add
mov
pop
in
in
pop
mov
fisubrs
mov
xor
fstpl
xor
addr16
testl
sbb
int3
popa
addb
ret
dec
jbe
add
lcall
enter
sub
int3
aaa
mov
pop
push
adc
xor
push
cmp
mov
push
arpl
lret
sub
cmc
addr16
fwait
jns
push
push
jnp
call
jecxz
mov
push
imul
stos
mov
sbbb
es
outsb
cld
test
push
dec
cs
scas
or
sub
sub
fistpll
xchg
test
arpl
fistpl
ss
jl
mov
aaa
sub
stos
xchg
in
jne
rcrb
adc
into
popf
xchg
adc
dec
hlt
mov
ja
dec
lret
cmp
cwtl
and
addr16
lods
pop
mov
jbe
push
adc
sub
in
clc
hlt
cs
in
ret
mov
xchg
fnstsw
adcl
sbb
mov
out
xchg
roll
mov
dec
or
into
xchg
xchg
mov
ss
in
ret
arpl
aad
call
add
arpl
fadd
inc
or
loope
popa
or
lods
shlb
lea
cli
ja
aam
sub
or
or
iret
dec
psrld
and
pop
adcb
and
jb
andb
push
pushf
dec
jno
je
aam
inc
adc
sti
sbb
lret
and
jbe
outsb
inc
dec
inc
pop
push
mov
incb
shrb
xchg
push
call
xchg
mov
lock
bound
testl
and
fcomps
shrl
addr16
fwait
mov
ds
xchg
shll
cmp
push
mov
or
icebp
jmp
cld
int
loope
mov
bound
fcmovu
pop
xor
jle
fcmovnbe
sbb
xor
sub
ja
scas
inc
lcall
jle
loope
and
xchg
test
test
sub
dec
jg
add
mov
xchg
jmp
dec
xor
mov
cwtl
loopne
jno
into
insl
mov
pop
mov
cmp
loope
idivb
xor
sub
adc
mov
mov
in
xchg
xchg
pop
daa
adc
inc
mov
daa
sub
in
in
push
jle
lret
dec
in
jae
cmpsl
cwtl
jbe
mov
ss
dec
lods
add
lret
push
jbe
les
mov
mov
in
inc
push
icebp
jg
jb
xchg
cmp
lret
push
leave
lods
addr16
fisubrl
dec
out
jo
pop
mov
lcall
push
incb
cltd
ror
xor
cmpb
fwait
mov
stos
sub
jg
cmpsl
aas
std
mov
insl
jmp
test
dec
cmpsl
addr16
rcrl
pop
dec
sub
xor
xor
les
sti
jmp
je
xchg
push
push
stos
cmp
out
dec
xchg
movsb
xor
xchg
inc
data16
js
dec
add
pop
mov
push
test
arpl
mov
icebp
jns
in
mov
adc
int3
lds
lcall
pop
sbbb
push
or
into
adc
call
pop
cwtl
pop
in
dec
mov
out
xchg
jo
bound
dec
or
mov
and
xchg
sub
xchg
add
lds
out
pushl
mov
or
jl
push
test
call
push
cmpsb
cmp
inc
lea
cmp
std
mov
sub
jmp
dec
inc
lahf
and
mov
and
inc
insb
daa
push
and
call
fdivr
imul
das
push
adc
push
lret
sbb
adc
frstor
mov
sub
cmpsl
xchg
sbb
cmp
popa
repz
mov
dec
repz
jecxz
push
mov
xchg
xchg
sbb
addr16
adc
rcrb
jbe
and
pusha
clc
push
or
add
pop
jmp
fisubl
push
inc
mov
in
sub
xor
or
jle
and
mov
popf
xor
add
insl
insb
incl
xor
or
sbb
clc
pop
lret
sub
mov
push
sub
dec
jge
sbb
repz
loopne
mov
mov
sbb
adc
in
decb
jge
andb
jae
mov
xchg
xchg
mov
sub
iret
mov
push
mov
push
sarb
sub
jne
in
pop
call
and
xlat
jbe
daa
aam
shll
add
ss
and
fnstsw
mov
jb
sti
cmp
mov
insl
ja
mov
pop
loope
repnz
pop
in
add
popa
fwait
addr16
and
and
mov
dec
lret
out
out
mov
int
or
nop
lods
mov
jg
fisubrl
xor
pop
and
add
dec
daa
add
adc
mov
ret
push
or
dec
lock
sub
loope
pop
and
je
jg
lock
pop
sbb
sbb
push
nop
mov
adc
testl
jg
cmp
sub
mov
notb
mov
pop
nop
xchg
lods
mov
jb
add
out
into
jg
mov
rorb
or
pop
pusha
lcall
pop
sahf
test
hlt
add
push
xor
wrmsr
call
sub
jbe
mov
aas
mov
xor
xchg
xchg
xor
mov
or
xor
pop
sbb
fnstenv
push
inc
das
adc
sbb
dec
pop
cld
imul
les
sbb
mov
shll
or
pop
lcall
sub
hlt
jmp
inc
imul
sub
mov
js
and
shr
jno
ljmp
inc
push
int3
sbb
js
mov
xchg
int
add
add
mov
pop
data16
jp
setae
gs
hlt
enter
sbb
shl
inc
push
dec
push
testb
std
clc
mov
add
sub
and
jmp
cltd
cmpl
and
mov
leave
je
mov
loop
and
int
lock
in
jp
out
cmpsl
jno
iret
inc
or
and
cltd
cmp
lret
xor
xchg
or
mov
lds
stc
or
pop
testb
mov
insb
add
test
pop
add
addr16
sbb
ret
xlat
repnz
scas
sti
imul
mov
jbe
es
lods
sarb
sarb
sub
adc
inc
rolb
lret
lods
add
dec
mov
out
shlb
out
fwait
in
push
insl
dec
push
sbb
jne
fcmovnbe
ljmp
adc
sbb
pmullw
ja
lcall
xor
addr16
and
xor
psubsb
lahf
jae
dec
mov
test
push
aas
dec
xchg
or
pop
jnp
call
pop
xchg
fsubrs
stc
in
xchg
addr16
pop
push
addl
inc
fs
xlat
into
bound
aaa
mov
out
stos
iret
outsb
adc
hlt
sbb
enter
pop
stos
stos
add
lret
mov
xchg
and
push
aas
mov
adc
sbb
sbb
loop
cli
out
pop
xor
ljmp
add
dec
add
mov
bound
jae
cmpsb
push
pop
cltd
cmpsl
shrl
aad
js
ljmp
pop
std
xchg
xchg
and
cwtl
daa
and
xorb
xor
sbb
cli
insl
out
xor
fldcw
sti
mov
mov
adc
arpl
rol
add
cmp
mov
lcall
and
test
dec
je
sti
fdivs
ret
stc
roll
cmp
sbb
cmc
std
push
jmp
lcall
sub
xlat
es
mov
dec
imulb
cli
out
ljmp
lret
pop
lods
faddl
cmp
xor
jl
test
outsl
cmp
leave
in
push
test
pop
adc
inc
jno
testl
xchg
in
mov
push
push
jbe
shll
mov
dec
imul
jb
ret
push
and
sbb
sbb
clc
lcall
jnp
fneni(8087
out
mov
jmp
orl
mov
loopne
jnp
arpl
lods
dec
add
mov
jl
cwtl
mov
mov
jl
sub
mov
andb
adc
or
mov
jl
xbegin
add
insl
rcrb
rcr
test
cmp
scas
jns
or
pusha
sub
jecxz
out
ret
hlt
pop
adc
mov
imul
add
pop
sbb
test
xchg
insl
inc
cmp
push
ss
ja
add
movsl
lcall
adc
ret
nop
jne
sbb
addl
popf
mov
inc
xor
jmp
push
sub
xlat
pop
cltd
sub
loopne
jge
push
dec
xchg
add
jmp
sarl
push
sub
mov
push
repz
jnp
pop
xchg
sbb
cmp
xor
sbbb
pop
movl
stos
imul
adcb
gs
cs
mov
mov
pop
addr16
mov
leave
loop
arpl
jmp
jae
add
add
jbe
mov
sbb
cmpsl
mov
dec
mov
popf
mov
mov
pop
sub
nop
repnz
dec
mov
dec
iret
outsl
fildll
xchg
and
insl
call
jmp
loope
out
jnp
pushf
push
mov
in
cmp
mov
clc
bound
push
jns
movsb
lds
mov
les
sub
mov
sub
repnz
adc
pushf
sahf
and
enter
shll
jmp
dec
xor
hlt
pop
cltd
cmp
pop
scas
pop
pop
and
jnp
pushf
daa
sbb
push
fsub
les
movsl
fbld
xchg
mov
lock
xchg
mov
aaa
flds
sub
jnp
xor
inc
mov
push
cli
scas
cmp
sub
fidivl
dec
add
pop
ljmp
inc
lea
or
fstpt
loop
pushf
and
lods
and
insl
movsl
xor
jmp
stos
xor
push
stos
inc
rclb
add
inc
ljmp
scas
cmc
ret
jnp
sub
fists
inc
shrb
xchg
or
pop
mov
loope
mov
inc
add
cmp
sub
and
dec
addb
fidivl
xor
mov
lret
adc
fmulp
inc
adc
mov
sbb
out
popf
cmc
pop
mov
popa
gs
pandn
insl
dec
mov
lea
xchg
or
loope
cmp
xorl
adc
pop
mov
cmovge
shlb
psubq
cltd
mov
cmp
add
das
outsb
in
pop
add
adcl
test
pop
cmpsl
in
lds
pop
xor
les
inc
outsb
into
dec
mov
stc
adc
jnp
mulb
mov
insb
movsb
test
mov
and
dec
ja
fdivrs
jo
xchg
xchg
lcall
lcall
adc
xor
das
nop
and
out
xor
mov
fmulp
sub
shl
pop
negb
adc
adc
xor
pop
push
in
ret
dec
jmp
stos
adc
adc
nop
dec
sub
adc
sub
aam
je
repz
sbb
dec
loope
jnp
loop
adc
lcall
lcall
pop
lahf
adc
lcall
repz
sub
xchg
je
xor
fwait
add
sub
sub
mov
fstpl
shll
mov
scas
call
into
out
mov
add
mov
insb
push
xchg
add
add
sub
fwait
dec
ljmp
jo
dec
mov
lahf
push
push
movsb
mov
fisubl
mov
pusha
fs
sub
pop
lea
jo
sti
mov
push
adc
lods
or
mov
iret
outsb
mov
lea
push
push
lods
enter
nop
mov
mov
cmp
cwtl
sub
popf
loop
mov
insb
inc
pop
xlat
sbb
xchg
pop
jnp
jecxz
xor
das
sar
enter
bound
je
jmp
fnstenv
adcl
push
sbb
movsb
cmpb
nop
dec
sarl
insl
jg
sti
sbb
sahf
xor
aas
sub
cmp
jae
and
mov
imul
inc
repz
push
push
dec
xchg
jns
nop
out
shrb
xor
xchg
fidivl
mov
inc
sbb
movsl
mov
jno
int
lret
lret
mov
fdivl
iret
popa
sbb
hlt
cmp
mov
jae
cs
cmpsb
mov
xor
aaa
push
iret
mov
mov
jg
aam
push
adc
push
sar
lds
cmc
adc
pusha
sub
cmpsb
repz
insl
sub
dec
mov
lret
fisubl
and
pop
pusha
imul
icebp
popf
xlat
fimull
jne
loope
push
scas
shll
xchg
rclb
bound
push
push
push
fwait
ret
nop
repnz
fiadds
dec
es
cld
pop
adc
sbb
int3
push
mov
xchg
fwait
insb
shrl
push
jp
lods
vcvtdq2pd
cltd
orb
in
dec
fbld
pushf
clc
xchg
outsb
in
mov
xchg
data16
std
mov
hlt
fldenv
mov
mov
push
sbb
and
lret
sub
xchg
test
insl
or
adc
popf
pop
out
fadds
xchg
icebp
pop
data16
pusha
jo
jb
mov
jmp
fnstsw
cmp
in
or
jno
sub
aaa
stos
bound
cwtl
add
inc
ret
push
stc
push
add
pop
mov
test
in
mov
xchg
push
in
fisttpll
clc
jbe
pop
jecxz
fstl
int3
ss
in
add
jl
enter
sbb
mov
inc
fldt
shl
dec
stos
fwait
add
xchg
cmp
xor
out
je
push
fwait
dec
dec
scas
adc
xchg
test
jb
sub
or
je
scas
sahf
inc
nop
pusha
sbb
ficompl
shlb
je
outsb
dec
mov
sbb
mov
int3
loope
fucompp
into
mov
push
pop
mov
sbb
inc
out
mov
fstpl
call
sub
push
jle
and
fwait
daa
xchg
jno
ljmp
fdivrs
push
and
in
mov
fadd
xchg
jle
fwait
icebp
sbb
mov
pop
cs
sbb
push
sti
push
aas
mov
push
cmp
or
ficompl
fidivrl
testl
ds
loope
das
aad
jle
fidivrl
and
and
fs
dec
and
rol
lret
cmpl
push
js
cmp
xchg
mov
imul
lea
sbb
inc
dec
mov
pop
fstl
hlt
jmp
sbb
incb
push
loope
pushf
mov
dec
gs
xchg
loope
inc
lahf
out
rcll
aas
stc
xchg
and
in
mov
popf
and
add
std
rcr
push
fucomp
mov
je
fnstsw
aaa
jp
shll
shrl
mov
out
scas
cmp
fldt
cld
enter
stc
imul
add
mov
mov
test
lahf
inc
jno
decb
enter
add
les
jmp
fstpt
pop
in
loope
mov
movsl
inc
orb
out
pop
inc
in
das
loop
xchg
push
or
hlt
daa
fisubrl
mov
cmp
jl
mov
sarb
add
lret
mov
aaa
push
cmp
ffree
dec
imul
shlb
jge
fbld
in
sbb
icebp
mov
bound
cmc
xchg
dec
push
ret
insl
push
or
fdivr
add
fnstsw
jg
adc
and
or
scas
fdivrs
mov
sbb
jno
pop
mov
jle
lcall
cmp
adc
push
pop
xor
sbb
push
fxam
ror
sahf
mov
pop
inc
outsl
ret
jbe
xchg
push
scas
in
test
ds
aas
inc
fcomp
in
rcl
call
sbb
ss
fidivrl
mov
fisubl
ret
pop
xchg
dec
xor
std
adc
fwait
pop
test
mulps
out
fwait
jnp
adc
dec
sbbl
sub
js
lods
faddl
sbb
jl
mov
jns
push
lds
enter
pop
jae
jmp
cli
insb
xchg
cmp
das
mov
clc
movsb
sbb
dec
cmp
daa
sarb
icebp
sbb
sub
pop
icebp
adc
cli
mov
repnz
daa
test
inc
lahf
mov
inc
xchg
data16
sub
int
jecxz
pop
push
cmpsb
cs
cmp
insl
jbe
or
pop
repz
sahf
pop
or
or
fldt
test
imul
into
lds
jne
rclb
push
jg
aas
shrb
mov
pop
xor
into
push
push
pop
push
les
or
test
xorb
mov
pop
scas
shlb
shrl
adc
sbb
iret
push
cmp
add
flds
add
fcompl
cmp
scas
in
cmp
dec
mov
mov
xor
out
add
pushf
imul
scas
js
add
icebp
xlat
rcr
xor
int3
or
dec
jae
sub
cwtl
cmp
nop
jnp
jg
mov
hlt
push
push
lea
inc
jnp
inc
jge
les
sti
jno
xchg
pop
add
push
mov
stos
and
icebp
pop
mov
dec
movsl
lret
push
ljmp
bound
push
mov
adc
push
and
insb
cmpb
jns
mov
cmp
or
adc
rcll
and
pop
ret
and
push
out
add
into
pop
ds
imul
fsubl
push
pop
lea
lahf
hlt
lret
xchg
push
addl
inc
popa
ret
mov
rclb
mov
cmp
ret
xlat
cli
data16
jl
pop
std
sub
dec
mov
aam
add
inc
adc
mov
in
xor
aam
jge
popa
hlt
or
sbb
xchg
xchg
adc
clc
dec
lods
sarl
or
nop
lock
insb
cmpsl
sub
jns
int3
or
in
lods
and
fld
cmp
xorl
call
repnz
rcrb
scas
mov
mov
cmp
sbb
nop
cs
sbb
ret
idiv
dec
xchg
sub
rcl
adc
dec
lods
mov
loop
les
xchg
out
cmp
test
or
dec
push
imul
or
mov
loop
push
cmp
fucomi
gs
cld
insl
xor
loopne,pt
cmpsl
fadds
adc
fs
sbb
stos
lds
inc
movsb
test
scas
scas
or
loop
mov
add
inc
adc
icebp
xchg
and
sub
sub
idivb
cld
dec
inc
popa
or
mov
sahf
mov
nop
cltd
hlt
hlt
sahf
rolb
jmp
test
out
add
cld
push
mov
stos
push
jbe
inc
test
int3
shlb
insb
mov
jp
in
repnz
lahf
fsubs
shl
stc
pop
imulb
imul
mov
cmp
shll
mul
xorl
fcompl
std
ljmp
mov
adc
stos
loop
in
add
dec
dec
xchg
mov
popf
imul
pushf
dec
mov
mov
push
cmp
roll
jge
stc
loop
adc
in
lods
int3
iret
cmp
inc
dec
sbb
dec
mov
jnp
ja
lret
push
xchg
adc
clc
dec
fildl
add
das
repnz
cmp
aas
andl
add
sbb
mov
cmp
leave
and
inc
add
hlt
mov
jae
sub
mov
cmc
mov
adc
jae
data16
sbb
addl
js
mov
adc
cmpsl
int3
in
lahf
pop
pop
inc
mov
adc
lahf
xchg
mov
sub
push
inc
mov
xlat
movb
int
sbb
pop
arpl
hlt
push
in
pop
test
inc
dec
add
mov
lods
jno
bound
pop
cmp
jnp
and
rclb
sbb
hlt
lahf
cwtl
sahf
jl
sti
adc
push
cmc
push
std
gs
icebp
popa
fstl
aaa
jb
int
adc
xchg
mov
pushl
outsl
jb
mov
aas
and
pop
cvtps2pd
and
in
xor
mov
mov
mov
cmpl
jmp
and
out
scas
adc
pop
popa
nop
repz
shll
sbb
inc
maskmovq
negl
jbe
testb
arpl
hlt
into
push
ds
sbbb
pop
insl
stos
jge
out
leave
daa
bound
and
and
sub
pop
or
mov
dec
pop
mov
push
lahf
push
into
pop
enter
enter
xorl
or
aas
sti
lea
pop
addb
aam
jb
ror
test
mov
inc
xchg
inc
popa
xchg
sub
roll
add
lea
cmpb
mov
xchg
or
adc
mov
cmp
jo
ror
repnz
jmp
dec
jge
fucomip
xchg
scas
pushf
xor
aad
sub
pop
test
pusha
repz
shr
sti
stc
and
jge
ljmp
es
fcmovne
jp
outsb
dec
sahf
jecxz
hlt
mov
mov
xchg
fiaddl
pop
vmovaps
test
test
push
cli
loop
jns
in
mov
scas
dec
sbb
xchg
push
xchg
insb
pop
ror
xchg
jecxz
test
lods
mov
andb
dec
or
out
enter
loope
dec
and
dec
mov
xchg
inc
pop
ret
dec
mov
lret
js
xchg
daa
adc
jg
xchg
loop
enter
or
jno
lea
scas
jo
subb
push
and
xchg
or
push
outsb
les
test
jbe
iret
sbb
inc
lock
xor
add
std
jl
mov
pop
mov
inc
test
lods
pusha
insb
gs
mov
inc
xchg
lock
dec
and
sub
xor
mov
mov
into
stos
jnp
mov
inc
or
sub
jl
sarl
cmp
push
ds
in
fcomip
outsb
add
xor
push
mov
mov
addl
xchg
sbb
add
aaa
repz
mov
and
or
jns
mov
sarb
lock
movsb
push
dec
outsl
adc
call
rcr
std
subl
in
test
out
test
clc
or
shrl
mov
add
test
adc
bound
js
std
adc
xchg
jbe
test
imul
scas
sbb
and
aaa
pop
rorb
fwait
sub
aaa
sub
mov
fldenv
cmp
cmp
adc
lods
adc
sub
xchg
lock
int3
cs
jle
mov
ret
out
shlb
xchg
shll
or
lret
stc
jo
or
add
addr16
inc
and
inc
cmp
pop
or
pop
std
pop
test
ret
jge
addr16
mov
fsubrl
mov
bound
inc
shr
xchg
or
arpl
and
sbb
addr16
sub
rcr
mulb
test
xor
in
mov
scas
and
js
not
insb
jne
mov
roll
stc
fsincos
pushf
xchg
leave
or
mov
cs
xor
jne
imul
mov
xor
fdivs
and
adc
xchg
jo
push
loop
sub
push
dec
aaa
and
cwtl
jl
es
out
and
je
outsl
imul
jnp
out
sub
push
pop
int
adc
sti
shll
dec
cwtl
test
jno
int3
cmp
adc
jb
das
or
push
push
ret
in
sub
shlb
xchg
push
sub
sub
cmp
enter
test
jae
and
add
jo
shlb
dec
inc
scas
jnp
loop
sub
or
popf
test
cmp
or
mov
cwtl
aad
and
int3
incl
fidivs
and
icebp
mov
or
std
lret
das
rol
push
inc
test
xchg
out
jmp
add
xor
mov
sub
mov
jno
mov
lcall
sahf
inc
inc
in
add
stc
rorb
push
mov
jne
lods
xor
in
repnz
cmp
mov
mov
xor
cmp
mov
ret
stos
cld
test
fsts
xchg
movsl
add
xchg
outsb
lock
mov
push
mull
mov
shr
push
je
scas
push
xchg
jecxz
ret
mov
xchg
ret
push
arpl
adc
fldt
addl
repnz
movsb
inc
loopne
cli
mov
cmc
mov
fucomip
notl
dec
fisubrs
jbe
std
dec
daa
in
sbb
pop
pop
out
cmp
dec
mov
xchg
adc
mov
xor
lock
stc
movsl
arpl
sub
pop
fcom
mov
mov
arpl
jle
in
or
imul
mov
push
mov
cmp
dec
lret
cmp
in
idivl
subl
mov
lret
fists
mov
fmuls
aad
mov
test
adc
xchg
roll
icebp
stos
mov
cmpsl
cmpsl
mov
outsb
mov
sbb
ss
pop
mov
sahf
les
test
sbb
fcomps
fs
mov
lret
or
dec
sarb
add
xor
inc
mov
and
cmpl
pop
add
cld
shrb
movsb
cs
and
jle
mov
mov
jle
int3
incl
fcomip
popf
jb
cli
insl
pop
arpl
imul
insl
fstl
mov
scas
xchg
inc
shr
fwait
pop
stos
push
shll
aaa
inc
repnz
shlb
mov
mov
cmp
dec
add
js
das
push
loope
mov
push
ljmp
xchg
jne
inc
pmulhw
call
mov
or
dec
cmp
cmp
push
pop
xchg
bswap
mov
lea
setle
adc
pop
or
dec
in
dec
jae
es
in
dec
pop
dec
js
add
je
insl
test
xlat
fs
dec
das
sub
and
or
push
loope
adc
mov
xchg
inc
faddl
dec
ljmp
fidivl
arpl
jmp
sti
in
adc
test
inc
inc
push
movsl
negl
lcall
lea
xchg
sbb
adc
arpl
pushl
sub
mov
sbb
hlt
lds
jp
dec
test
add
movsb
push
fucomp
repz
scas
jae
pushf
jle
add
and
mov
pop
adc
into
out
sbb
jecxz
push
ret
hlt
imul
iret
push
dec
aad
bound
pop
sbb
cwtl
stos
mov
outsb
mov
pop
mov
lret
dec
nop
fldt
into
jns
sub
mov
xchg
aam
and
movsl
movsb
popf
xor
dec
fidivl
daa
subb
into
addr16
xor
cmp
mov
cmpl
jno
xor
scas
mov
cmp
cmp
inc
js
mov
jae
inc
cmpsl
fsts
sbbb
out
mov
shr
xor
and
jbe
jle
das
shr
int
mov
mov
stos
test
sbb
rorl
scas
lods
loop
das
push
test
adc
sarl
add
fisttps
push
in
push
xchg
push
gs
stos
mov
or
sub
daa
add
dec
ret
lods
inc
aam
push
dec
mov
sbbl
pop
jbe
xchg
test
orl
testb
inc
mul
imul
aaa
xor
mov
imul
jmp
mov
xor
mov
aad
cmpl
dec
cmp
fisttps
jp
fucomp
cli
push
sub
pop
incl
cmp
adc
sub
ja
mov
repnz
mov
sbbb
sub
and
sbb
sbb
sarb
mov
les
lret
xor
mov
cmpsb
aam
gs
and
mov
add
push
cli
jo
scas
cld
leave
lcall
inc
inc
repz
xchg
iret
ss
mov
mov
inc
cmp
xchg
push
xchg
mov
sbb
dec
in
dec
lret
push
out
push
pop
movl
xor
pop
sbb
sahf
test
sub
lock
mov
push
in
adcb
in
fidivl
xchg
jge
loop
loope
jns
jae
dec
cmp
xor
imul
pop
jno
mov
dec
mov
mov
aam
aad
repz
adc
mov
into
ret
ljmp
clc
mov
popf
lds
test
add
push
jl
movsl
das
xchg
or
ss
lea
push
cmpsl
mov
rclb
call
jmp
rcl
push
jno
sub
movsl
les
xor
iret
scas
iret
out
xchg
andb
cmp
inc
mov
xlat
int3
stos
aas
lods
push
je
test
imul
xchg
jno
fisttpl
jnp
shr
rep
test
in
sbb
gs
mov
xchg
sarl
xchg
stos
add
mov
inc
scas
xor
mov
pop
icebp
pop
inc
sbb
xlat
iret
xchg
or
out
xchg
push
loopne
or
aas
repz
leave
or
outsb
xor
jl
sub
push
xorb
daa
and
aaa
movsl
mov
jmp
mov
or
add
mov
nop
es
dec
test
or
js
sbb
pop
ret
mov
sahf
mov
sbb
add
pop
fwait
call
and
dec
cmp
push
sbb
pop
sahf
jae
sbb
and
ret
dec
dec
and
sbb
push
cli
add
insb
adc
icebp
pop
das
mov
movsl
aam
pop
sub
lret
mov
outsl
enter
xor
mov
outsl
cltd
jge
add
in
fildl
pop
movl
mov
jecxz
stos
xor
cs
mov
sbb
xchg
sub
adc
loop
lock
inc
mov
xchg
pop
fmul
adc
push
int3
ret
xlat
cli
add
mov
mov
and
lock
mov
mov
nop
mov
adc
or
push
das
xor
shll
mov
data16
in
ds
fisubrs
sahf
jp
mov
xchg
fisubl
xor
les
xchg
fcomps
loop
cmp
arpl
cwtl
xor
insb
scas
data16
sub
test
testb
ja
jecxz
scas
and
movsb
fldl
cld
insl
in
or
or
hlt
inc
cmc
pop
scas
mov
xor
or
sbb
inc
aad
imul
mull
pop
ret
insl
and
idiv
add
mov
hlt
or
daa
xchg
shlb
inc
inc
loope
or
adcl
jb
adc
sarl
aam
shlb
xchg
jbe
push
and
and
mov
sub
scas
push
and
pop
mov
push
or
pop
mull
cmp
mov
mov
popf
cmp
inc
cs
mov
aad
jl
pusha
pop
mov
popf
lods
ret
push
stc
adc
mov
test
inc
sub
jg
mov
jo
xchg
sarl
scas
call
nop
mov
push
push
adc
in
lods
pop
sahf
popa
push
mov
sub
insb
adc
jg
cmp
pop
push
outsl
adc
popa
adc
repz
out
iret
xor
test
or
pop
popf
adc
in
das
jle
scas
xchg
xchg
dec
scas
fimull
or
or
repnz
adc
insl
into
or
or
mov
js
xor
setp
xchg
into
or
lcall
push
xchg
das
mov
pop
sti
xor
and
mov
clc
cs
hlt
stos
cmp
fiadds
push
push
cmpsb
lds
lods
jo
push
aaa
xor
mov
adc
pop
xor
mov
vmovntps
test
adc
mov
shl
pop
leave
adc
sarl
sbb
mov
nop
jmp
mov
adc
xchg
aas
jmp
jp
jo
mov
les
notl
inc
int
sti
pop
jo
lock
imul
out
imul
insl
popa
sub
push
outsb
clc
jmp
push
push
xchg
ljmp
sub
inc
paddsw
lahf
shl
ret
xchg
orl
adcl
and
fists
stc
sbb
outsl
cmp
jecxz
insb
mov
aam
push
push
inc
pop
adc
or
hlt
fcmovu
jo
dec
add
aaa
push
stos
fcompl
cli
stc
push
outsl
sahf
movsl
inc
imul
jl
scas
and
jg
jae
fidivrs
clc
mov
pop
fs
cmp
icebp
sbb
pop
out
repz
and
cmpsb
push
dec
cmpsl
repz
enter
fstl
mov
sub
hlt
testl
fsub
aam
xchg
cmp
popa
jns
pushl
add
dec
pop
cli
rorb
bound
andl
test
test
stos
push
fldcw
rol
repz
inc
dec
push
addr16
data16
xor
cltd
cs
and
adc
inc
push
outsl
popf
inc
push
pop
or
subb
jbe
adc
test
addb
inc
clc
push
imul
dec
stos
dec
adc
out
xor
popf
lret
push
out
cmp
call
adcb
movsl
jge
pop
pop
cmp
xor
fldcw
loopne
aam
cmp
sbb
mov
addl
aad
pushf
sbb
scas
repnz
mov
divl
or
lret
adc
mov
add
sbb
add
jno
dec
adc
popf
mov
inc
jmp
jge
push
pop
mov
stc
fildl
hlt
ret
mov
fistps
leave
jg
add
dec
and
and
icebp
outsb
pop
iret
sub
xor
ret
or
inc
inc
and
xor
sub
movsl
lods
roll
and
adc
int
rorl
insl
add
jp
sub
lods
enter
ja
jecxz
mov
mov
mov
std
xlat
cmpsb
xor
aam
sbbb
and
imul
or
sub
fsubrp
adc
int
test
icebp
icebp
int
push
addr16
push
daa
fbld
xor
cld
mov
cwtl
pop
or
loope
xlat
test
push
ds
xchg
les
cmpsl
stos
xchg
push
cmp
cmp
sbb
and
outsb
addr16
inc
pop
mov
adc
jp
push
mov
fstpl
data16
cld
add
std
mov
cmpsl
xorl
pop
sub
iret
ja
daa
pop
xchg
in
mov
xchg
aad
pop
loopne
int
pop
sarb
push
cli
outsl
mov
add
inc
mov
outsl
std
or
mov
mov
sub
mov
icebp
xor
icebp
or
repz
sub
rcrl
sbb
je
test
dec
mov
dec
ret
aas
scas
sbb
ret
fstps
sti
incl
daa
adc
mov
std
outsl
cmp
dec
and
js,pt
test
aas
push
pop
stos
push
das
adc
aas
adc
push
outsl
sbb
sub
xlat
mov
outsb
int3
lret
aam
pop
mov
fisubrs
push
hlt
xchg
mov
xor
add
add
and
mov
mov
dec
je
insb
jbe
mov
fistl
das
xor
mov
repnz
es
bound
out
fnsave
sbb
or
xchg
mov
fs
clc
cmp
ret
aam
mov
fcomp
mov
mov
inc
dec
push
js
decb
xchg
jmp
pusha
mov
xor
adc
insl
push
ret
int
xchg
fimuls
bound
stos
inc
divb
sarl
jns
jo
sub
cmp
loopne
shll
pop
xchg
sbb
loop
mov
jne
mov
mov
mov
pop
jmp
clc
add
js
leave
push
mov
mov
stos
push
aad
jle
adc
lret
add
add
pop
cmp
scas
test
lods
adc
push
or
pop
xchg
cld
push
xor
out
push
lret
jg
scas
nop
sbb
xor
inc
rcrl
dec
loope
and
test
mov
sub
sub
mov
mov
mov
andl
ds
push
subb
sub
xchg
jecxz
js
addl
push
ret
pop
rolb
sbb
shl
icebp
subb
pop
fidivl
mov
pusha
fwait
xor
das
sub
mov
sub
pop
add
jae
sti
xchg
hlt
hlt
mov
in
sub
sbb
inc
lahf
adc
in
imul
adc
test
iret
adc
bound
lea
pusha
or
dec
and
cmpsl
inc
gs
out
inc
fsub
test
fistpll
xchg
rclb
js
or
stos
repnz
adc
lods
and
ljmp
rorl
testl
add
fwait
loope
jmp
xchg
mov
arpl
hlt
das
hlt
xor
rclb
out
adc
repnz
stos
pop
mov
aam
push
or
mov
inc
fcoml
pop
and
sbb
repz
mov
out
daa
into
inc
xchg
and
push
push
push
add
dec
fwait
sub
mov
or
sbb
and
cmp
out
loopne
xor
cltd
xor
imul
pop
mov
inc
adc
or
in
sahf
push
sbb
adc
lods
push
nop
dec
lock
repnz
insl
and
addr16
jle
outsb
aad
lds
bound
push
dec
addr16
cmp
and
or
xchg
add
xchg
or
push
mov
rcll
pusha
sbb
loopne
jns
pop
daa
movsb
outsb
out
dec
xor
inc
xor
adc
lcall
daa
mov
insl
inc
mov
sub
scas
pop
dec
and
pop
bound
cmc
xor
in
js
xlat
ds
pop
lahf
aam
mov
and
imul
mov
pop
rolb
rorb
sbb
xor
or
inc
xchg
push
into
les
jno
sar
enter
les
jo
sahf
sub
out
lret
xorl
lods
inc
inc
mov
popf
fnstcw
es
cmpsl
jno
data16
out
jp
push
push
lock
lods
dec
es
aaa
jae
test
xchg
push
adc
inc
test
test
mov
adc
xor
jg
aad
add
add
pop
sbb
cmp
add
cld
push
inc
in
aaa
out
cltd
js
hlt
neg
cmpb
and
jle
scas
aad
cltd
rcll
and
std
jecxz
pushf
mov
dec
pop
sbb
adc
and
lock
pop
clc
push
stos
cmp
inc
jb
sbb
daa
jbe
dec
repz
int3
mov
scas
mov
stc
divl
and
movswl
dec
push
stos
pop
pop
sahf
add
dec
dec
ja
sbb
push
sbb
pop
fldenv
bound
std
call
clc
sbb
add
daa
je
push
pop
xchg
data16
cltd
mov
sbb
incb
pop
jb
inc
je
push
push
inc
jg
pop
dec
xor
cmpsb
leave
push
xor
jp
xchg
into
mov
mov
lahf
cld
xor
addr16
dec
std
adc
xor
enter
movsb
push
push
add
jg
loopne
pop
out
cld
mov
imul
fadds
xchg
pop
clc
bound
popa
outsl
out
aas
jne
cmp
pop
sahf
jbe
pop
adc
add
inc
ds
adc
aaa
sub
fwait
pop
jl
sub
cmp
xor
sbb
jns
dec
xchg
xor
cwtl
adc
and
mov
cmp
mov
mov
into
dec
lods
xchg
inc
bnd
xor
in
adc
adcb
push
out
adc
lock
xlat
mov
pop
dec
lock
push
out
frstpm(287
pop
mov
xor
fs
xor
loope
rorl
idivl
adc
sbb
jg
or
jle
xchg
testl
sub
lret
or
sbb
repz
das
popa
xchg
call
cmp
sbb
rolb
std
out
mov
jge
push
pop
xchg
mov
dec
cli
jne
lea
push
lea
popf
test
adc
adc
cs
sub
push
mov
lea
aaa
leave
jns
xchg
push
xchg
and
cmova
imul
pushf
ret
test
sbb
mov
cmp
and
xor
cmpsl
call
dec
sbb
add
cltd
and
lret
int3
out
xor
dec
hlt
xchg
in
out
mov
insl
call
jmp
dec
data16
nop
push
xchg
xor
mov
mov
xchg
mov
or
cmp
xor
mov
je
lods
enter
lahf
jo
sub
enter
mov
jecxz
pop
inc
push
mov
call
sbb
in
xchg
mov
loope
movsw
shrl
mov
pop
insb
fwait
int
lret
test
mov
int
pop
push
lea
or
xor
adc
dec
mov
das
sti
cmp
jecxz
sbbl
xchg
push
fcmovnb
aas
xor
and
fdivrs
test
sar
mov
inc
inc
movsb
jle
mov
jl
stc
mov
sub
pop
jecxz
push
inc
xor
xor
pop
mov
sti
sahf
mov
ss
stc
and
rclb
jg
mov
cmp
sub
test
pop
dec
movsl
repz
inc
pushf
pop
mov
ja
movb
sarl
push
setbe
cli
and
clc
mov
fisttpll
sub
mov
inc
or
mov
and
lock
xor
inc
pop
pop
sub
sub
jo
cltd
sarb
and
outsl
and
insl
fimull
aam
fadds
pop
shrd
mov
mov
rorb
lods
adc
rorb
add
dec
clc
push
xchg
adc
test
push
add
jle
jmp
loopne
xor
out
xchg
lods
dec
push
inc
popf
pop
adc
or
jne
mov
inc
jnp
ret
cmp
cli
mov
sti
or
das
fimull
stos
sub
xor
ja
pop
sub
mov
inc
pop
xor
mov
stos
pop
stos
stc
leave
mov
adc
dec
aaa
cld
aam
and
sub
sti
adc
imul
push
push
cmovae
les
xchg
jmp
dec
push
pop
call
into
mov
push
sub
mov
stos
testl
scas
aad
nopl
call
or
mov
sbb
mov
iret
lret
clc
xlat
lods
ja
inc
push
jl
ljmp
mov
test
mov
dec
cmp
loopne
in
mov
clc
adc
pop
cmp
sub
nop
addr16
cmp
sbb
jp
and
out
sub
mov
cwtl
cmp
pop
push
cs
push
or
pop
jns
loop
pop
int
xchg
pop
into
in
mov
icebp
aam
scas
mov
dec
das
push
dec
mov
sbb
xlat
pop
pop
sti
andl
inc
sbb
push
push
inc
push
shrb
pop
dec
pop
fs
or
inc
xchg
and
imul
xchg
adc
aaa
adc
xor
sahf
dec
test
inc
cmp
xchg
sbb
mov
sar
int
notb
lcall
lock
jecxz
incl
cmp
fwait
push
dec
subb
shrb
jno
xor
dec
in
adc
loopne
add
push
aad
cmp
mov
lods
mov
les
sub
xchg
or
jle
xchg
cmp
xchg
jg
pop
xchg
mov
testl
ss
enter
sti
push
jns
data16
xor
and
mov
xchg
jmp
outsl
ds
mov
mov
lods
push
imull
lahf
stos
and
mov
out
lds
mov
mov
lea
cmp
jno
add
test
jge
inc
cmpsl
leave
cmpsb
aam
dec
or
xchg
pop
add
mov
dec
ret
leave
clc
shrl
mov
outsl
lock
mov
jge
decl
loop
lret
int
cmc
out
cmpsb
add
sub
pusha
sub
push
inc
int3
out
jg
mov
fs
data16
mov
addl
cmp
loop
jnp
xchg
repnz
into
int
push
loopne
dec
cli
mov
movsl
sahf
jo
jns
call
cmc
mov
and
pushf
or
sub
xor
xchg
int
out
cmp
fldcw
lahf
dec
lahf
scas
fsubs
xchg
cmp
inc
addr16
jle
pop
arpl
stos
adc
lods
and
or
jne
mov
insl
dec
dec
add
aas
daa
mov
push
adc
aas
aas
and
mov
inc
jle
fdivr
xchg
aam
cmpsb
adc
sbb
inc
inc
rcr
xorl
push
imul
adc
xor
jns
jle
jbe
std
and
xor
mov
lock
lds
push
loop
js
in
lock
mov
add
lock
add
mov
mov
lods
sar
mov
xchg
mov
mov
cld
jb
xor
scas
xlat
push
sbb
lds
aas
cmpsb
popf
std
stc
aam
fsubr
sbb
inc
pop
fstps
sbb
aam
mov
aad
test
inc
mov
mov
add
aad
xor
movl
xor
lcall
inc
daa
fwait
mov
ja
sbb
cld
push
add
pop
inc
add
xorl
fsub
xchg
inc
cltd
cmp
sub
stc
outsl
addb
add
int3
ljmp
xor
mov
ja
sub
in
leave
jnp
push
adc
lods
sbb
or
dec
movsb
mov
repz
jnp
cmp
mov
ret
loope
into
fidivrl
and
jmp
cli
xor
subl
nop
sbb
lcall
data16
fwait
mov
in
subb
arpl
xor
mov
jnp
adc
lcall
out
sbb
mov
inc
mov
add
cmp
xchg
jnp
aad
dec
or
mov
xchg
mov
stos
lahf
adc
push
insl
std
fiadds
adc
xchg
mov
imul
mov
lock
test
jge
add
insl
data16
mov
mov
sti
or
or
sub
and
sbb
dec
mov
aas
cmp
shll
imul
mov
pop
testl
fnsave
add
fsubs
xor
addr16
shlb
and
dec
and
mov
or
hlt
stos
push
mov
orl
pop
pop
aam
stos
in
sahf
imul
push
insl
mov
dec
dec
outsl
inc
sub
and
in
and
cmpsb
addb
jl
cld
push
mov
cmp
fcoml
pop
aad
jle
ljmp
jg
leave
stos
pop
or
cmp
call
iret
sbb
incl
push
ds
push
orb
sub
cmpsb
adc
les
cmp
dec
xchg
and
xchg
arpl
mov
shrb
das
or
shrb
cmp
xlat
lahf
cmpsl
xchg
jns
rcll
into
es
mov
xchg
add
adc
outsb
popf
mov
nop
lahf
jbe
stc
shlb
jbe
xor
mov
push
sti
push
jo
data16
mov
xor
cmp
icebp
test
aaa
cltd
fsts
inc
fcmovne
xor
mov
inc
xchg
movsb
jecxz
pop
pop
dec
rcll
outsb
sbb
enter
into
add
jae
sbb
sahf
dec
xchg
push
and
xchg
or
and
sti
jp
xor
test
lock
jno
loopne
or
mov
out
shrd
push
adc
cmpsb
mov
and
leave
cli
jg
adc
push
bound
mov
cmp
int3
icebp
cmpsl
scas
adc
icebp
sbb
xchg
mov
inc
mov
xor
fdivp
mov
cli
and
insl
or
sti
mov
inc
cmpsb
stos
into
outsl
cmp
mov
in
mov
rol
and
adc
arpl
pop
mov
rol
jb
jg
push
int3
sub
clc
mov
and
movsb
or
mov
inc
or
pop
cmpb
cld
pop
mov
jp
push
pop
jno
mov
in
daa
cmp
adc
pop
xchg
pop
fdivl
add
inc
into
stos
mov
sbb
jmp
dec
xchg
add
shlb
xchg
in
jo
adc
sbb
pushf
dec
inc
mov
popf
xchg
sbb
fwait
cmp
xor
xchg
xor
sbb
and
mov
xor
jnp
sub
pop
pop
aad
lahf
push
clc
mov
inc
sbbb
sub
mov
xchg
gs
xorl
pop
push
fstpt
lret
ret
imul
gs
jbe
imul
rcl
imul
fwait
in
cmp
dec
sbb
xor
adc
pushf
or
jne
divl
movsl
nopl
into
xchg
mov
int3
leave
cmp
js
inc
enter
clc
pop
lcall
cmp
and
and
dec
pop
ljmp
or
je
mov
in
subb
jo
enter
cmp
nop
sub
int3
scas
sti
insb
sub
fs
decb
scas
mov
je
rorb
mov
jmp
outsl
push
js
addl
sub
in
adc
ret
mov
shlb
and
and
iret
pop
gs
push
clc
lcall
inc
mov
je
fs
mov
std
roll
xor
mov
sbb
dec
jns
xchg
adc
xchg
bound
cmp
iret
rcrl
sub
xchg
enter
fstl
mov
push
iret
fcoms
mov
aas
mov
out
in
and
sbb
xlat
cmpsb
std
repz
mov
repz
cmp
cmp
lods
addr16
xchg
insb
mov
and
icebp
les
into
xor
push
mov
or
push
pushf
or
lea
in
dec
fs
test
mov
retw
sahf
push
dec
movsb
stc
jno
cmp
mov
push
repnz
lea
mov
fs
outsl
push
xchg
fnstcw
adc
ret
das
out
mov
cli
imull
push
mov
mov
jl
inc
popf
arpl
in
sub
jo
jle
hlt
cmp
xlat
mov
inc
fiadds
and
dec
in
add
jecxz
mov
in
addr16
xchg
adc
push
xchg
mov
hlt
and
ffree
gs
outsb
pop
xor
insb
fld
jnp
jecxz
push
cmpsl
push
pop
insb
in
jecxz
mov
and
xchg
jmp
loop
pushf
push
dec
sbb
outsl
js
je
adc
mov
sbb
repnz
idiv
clc
xor
add
jbe
scas
jnp
pop
loopne
into
mov
icebp
lods
ljmp
push
fildl
dec
in
jp
insb
loopne
xchg
push
into
dec
mov
push
loopne
fidivrs
data16
test
or
add
out
inc
test
dec
in
inc
scas
ret
lret
push
aam
or
push
pop
pusha
test
loopne
jmp
fisttpll
cmp
adc
js
push
jmp
pusha
push
movsl
movb
mov
ja
sbb
aas
cmp
sbb
pop
loope
out
push
xchg
sti
outsl
cli
push
aam
jge
or
aaa
icebp
mov
stos
adcl
aas
and
lods
int3
push
and
adc
push
mov
pop
pop
test
sti
sub
adc
into
add
dec
shlb
xchg
repz
es
xchg
lods
jge
shll
insb
inc
sbb
icebp
inc
mov
xchg
lret
xor
std
test
mov
cmp
jle
add
lds
and
cmp
xchg
mov
adc
jns
cmp
rcl
mov
mov
out
pop
lret
sub
xor
cmp
das
std
pop
mov
xchg
mov
sbb
decl
int
push
dec
out
mov
mov
xorl
fstps
mov
in
bound
mov
mov
hlt
or
pop
push
sub
mov
mov
iret
and
shrb
sbb
loope
test
leave
pop
mov
jnp
int3
cmp
loope
roll
mov
notl
cmp
out
ret
pop
inc
out
shr
insb
pop
xor
iret
rcll
push
adc
inc
mov
pop
adc
mov
out
mov
adc
dec
iret
lods
loopne
mov
nop
push
sbb
mov
mov
add
xchg
adc
jne
add
sbb
xchg
outsb
add
mov
icebp
push
enter
mov
sbbb
sbbl
ret
sub
ja
testl
xchg
push
fwait
scas
mov
dec
out
je
and
xchg
pop
sbb
fisubs
nop
pop
loope
ficomps
xchg
in
out
jno
int3
das
iret
lods
push
mov
pop
jg
jg
cmp
push
and
xlat
xchg
xchg
mov
repnz
aas
aas
jl
data16
ss
popa
sbb
mov
loope
ret
adc
iret
ret
loope
mov
sub
mov
mov
mov
push
dec
inc
sbb
push
cmp
fmuls
sahf
mov
aad
xchg
xor
jns
jo
bound
movsb
out
xor
push
cmc
xor
push
in
cltd
aad
xor
aad
fbstp
mov
mov
cmp
arpl
mov
fiadds
ljmp
test
mov
addr16
cmp
popa
out
mov
popf
sub
dec
inc
rcll
xchg
cwtl
int
mov
xchg
pop
inc
daa
inc
out
cs
outsb
cltd
sbb
dec
jb
mov
ja
int3
add
hlt
cmp
lea
rep
add
xor
lret
hlt
outsb
jl
inc
pop
pop
out
les
push
dec
lret
popa
cmpsl
mov
mov
adc
fiadds
push
cmp
bound
orl
int3
xor
add
shl
and
mov
jmp
fcoms
mov
fldl
daa
fnstsw
movsl
dec
push
push
scas
rcr
repz
fdivs
xchg
outsl
xor
insl
mov
push
gs
test
or
dec
jmp
add
clc
or
test
outsb
repnz
lods
lahf
loop
add
mov
lds
test
mov
cmpb
aaa
cmpsl
xor
ljmp
jmp
sub
add
dec
loope
sbb
jmp
clc
pop
mov
loop
or
loopne
insb
push
cmp
movsl
jnp
lea
inc
ds
imul
xlat
jae
fdiv
ss
gs
nop
push
mov
or
push
aaa
pop
adc
out
sbbl
push
lret
movsl
cmp
out
mov
stos
ror
dec
cmp
or
cmp
xor
lret
push
ret
lret
sbb
sub
sbb
adc
in
ss
imul
out
fisubs
mov
jno
lock
pusha
imul
stc
push
xor
or
mov
adc
shll
scas
cmpsb
out
das
pop
nop
push
in
fistpl
stos
sarb
fnsave
sahf
pop
cmc
scas
or
roll
test
xor
adc
test
push
aaa
mov
fcomip
xor
and
push
fstps
jo
and
out
xchg
xchg
mov
xor
mov
xor
outsl
pop
cmp
mov
add
push
repz
std
ja
ljmp
mov
jmp
stos
cmc
lret
cwtl
push
adc
xor
cltd
lock
dec
fstpl
xchg
imull
cltd
loope
cmpl
imul
mov
jmp
mov
push
and
mov
mov
xchg
ljmp
push
pop
add
stc
dec
aaa
dec
push
dec
adc
int3
xor
outsb
sbb
mov
aam
pushf
icebp
arpl
scas
mov
pop
aad
mov
cmp
cmp
movd
xchg
sub
cli
jb
lds
xlat
mov
or
std
jns
add
and
lret
mov
add
ret
movsl
dec
mov
push
mov
pop
std
mov
loop
adc
rcrb
add
sub
jae
mov
inc
jmp
inc
inc
iret
mov
addr16
inc
fsubr
cmp
fisubrs
nopl
std
imul
jecxz
loop
dec
sbb
cli
shll
ror
inc
in
jp
test
push
mov
add
cmp
and
mov
jle
pop
stc
in
cmp
mov
sti
mov
insl
xchg
xchg
sub
xchg
mov
pop
mov
aas
out
shl
sbb
mov
fisubs
jb
loop
icebp
pop
jo
mov
sub
popa
cs
push
jns
dec
pop
in
iret
es
mov
adc
into
adc
sbb
sahf
lret
or
jbe
ja
adc
cld
or
sti
ret
pop
mov
rol
or
fsts
jge
jp
pop
fnstsw
jecxz
in
or
or
out
inc
outsb
cmpsl
in
or
mov
ds
and
shll
dec
adc
insb
bound
cwtl
stos
add
or
nop
scas
data16
mov
pop
dec
lret
jo
and
daa
sub
push
add
je
out
ds
add
push
addb
out
pop
add
xchg
mov
mov
into
insl
mov
pop
enter
mov
xchg
cmp
mov
or
gs
iret
movsl
mov
scas
jle
push
cmp
mov
pop
pop
sti
inc
sti
lods
pop
or
into
clc
jmp
push
xchg
insb
ss
popa
push
or
pop
xlat
inc
inc
adc
dec
jns
stos
rolb
out
mov
mov
mul
jmp
mov
cwtl
sbb
les
and
inc
das
pushf
cs
mov
test
adcl
sub
xchg
hlt
jmp
aam
outsb
xlat
xchg
xor
sbb
or
xchg
jp
sbb
xor
aam
push
leave
enter
mov
lods
stos
std
mov
lods
xchg
loope
adc
cs
xchg
push
mov
cmp
aad
aaa
jp
inc
ss
lahf
cld
pop
push
xchg
inc
cmp
cmpsl
popf
mov
push
xchg
idivb
cmc
movsl
popl
cltd
cltd
shrl
pop
daa
lret
setge
rcl
cwtl
jmp
aaa
jp
xchg
xchg
cmpsb
test
xchg
subb
mov
lcall
push
xchg
shll
loope
enter
cli
mov
xor
insb
stc
out
imul
inc
push
jle
sub
pusha
outsb
xchg
mov
mov
sub
mov
sub
push
arpl
adcl
cmp
std
in
mov
shrl
or
xor
add
inc
ljmp
out
fbld
mov
adc
mov
dec
jmp
fmul
clc
adc
lods
mov
xor
pop
fwait
popf
fldcw
mov
sub
adc
pop
sub
movsb
xor
jae
mov
push
sahf
stos
cmpsl
pushf
out
cmpsl
or
push
cmp
mov
out
xor
loop
push
lret
cld
mov
rcrb
pop
xor
jl
xchg
test
in
jle
xlat
or
xchg
jbe
ret
cmp
inc
inc
outsl
mov
push
sbb
xchg
imul
xchg
rcl
inc
lcall
test
dec
add
xchg
mov
pop
adc
pop
adcl
dec
pop
js
mov
in
xorb
pop
icebp
imul
int
ja
or
mov
ds
mov
and
ret
sbb
mov
cmp
mov
icebp
inc
fs
pop
fs
xor
xor
pop
pop
outsb
cwtl
mov
dec
push
xlat
cld
push
nop
cwtl
jmp
xor
ficoml
std
hlt
nop
ljmp
sbb
rcr
shlb
ret
xor
xor
pop
sarl
out
pop
sbb
pop
nop
arpl
jge
jg
mov
lret
cmp
repz
daa
stc
nop
loopne
sub
dec
addr16
cwtl
inc
and
lods
push
pop
aam
jl
lods
mov
mov
push
cwtl
adc
or
mov
out
insb
hlt
cwtl
dec
inc
dec
jge
mov
sarb
xor
mov
movsl
xchg
mov
repnz
xor
cli
jl
add
cmp
add
fldl
subl
dec
out
dec
push
jl
fdivs
adc
adc
jns
lock
jno
and
sub
sub
mov
pop
sbb
or
in
or
faddl
or
push
dec
push
fisubl
xchg
push
xor
movsb
pop
mov
sbb
xchg
out
push
in
add
out
mov
sub
or
mov
or
add
notb
cwtl
pop
int3
lods
bound
dec
std
pop
mov
mov
pop
mov
das
roll
pop
call
in
imull
mov
pop
sarb
sti
and
jo
pop
mov
fildl
pop
and
xlat
dec
mov
add
repz
inc
jne
ret
lock
ret
or
int3
jl
mov
rorb
pop
orl
fidivs
clts
xchg
push
sub
pop
jg
rcl
add
fs
mov
cmpsl
jno
push
imul
mov
mov
mov
iret
aad
xor
int
sbb
inc
adc
test
cs
shll
adc
xor
jge
add
ret
sbb
lret
lea
rorb
mov
decb
and
fimuls
xchg
lret
orb
popf
and
dec
jnp
cmp
push
dec
xorl
lret
cmc
aam
mov
push
das
repnz
jle
dec
cmp
scas
nop
jae
pop
or
lea
sub
cli
mov
movsl
sub
mov
sti
filds
and
add
popf
jecxz
sub
shufps
outsb
rcrl
add
test
pop
inc
shrl
add
cmp
shrb
addr16
ja
pop
sub
pop
xor
idivb
pop
mov
jne
mov
ds
cmp
adc
cmpsb
pop
xor
mov
sbb
ljmp
test
pop
xor
stos
icebp
mov
inc
aad
fidivrl
inc
cmpsb
dec
pop
repz
test
or
xor
xchg
dec
lcall
or
and
out
mov
call
mov
je
pop
lds
mov
mov
push
test
negb
repnz
out
int3
lea
addr16
clc
push
or
xchg
mov
add
jne
cmpsb
sub
adc
add
push
fs
mov
ror
push
jns
loope
push
faddp
add
add
es
cmp
dec
lret
setns
into
scas
pop
push
push
add
push
in
mov
rol
arpl
imul
mov
out
repz
mov
jmp
loopne
roll
or
xchg
inc
aad
aad
mov
jl
data16
je
pop
nop
jne
mov
insb
or
mov
jg
adc
lods
cltd
scas
cmpsl
clc
in
adc
aad
popa
les
nop
add
sbb
jb
add
into
cmp
nop
dec
notl
push
enter
sub
xorl
shrl
lahf
cmp
add
ret
popf
scas
xchg
cmp
lock
and
adc
sarl
jecxz
pop
jle,pt
repz
lret
sub
or
inc
lahf
inc
mov
xor
andb
movsb
fstps
cmp
inc
mov
jnp
daa
push
sbb
stos
xor
pusha
fnsave
jecxz
adc
push
mov
xlat
imul
jnp
cmp
cmpsb
into
imul
test
cmp
enter
mov
push
jbe
pusha
inc
inc
pop
xlat
mov
in
ja
cmp
mov
mov
cmpsl
or
ja
lods
push
inc
icebp
nop
sti
gs
pusha
iret
mov
mov
jb
push
stos
jnp
es
imul
xchg
lahf
shll
aad
outsl
adc
addr16
pusha
cmpsl
mov
loope
push
inc
push
push
push
hlt
fnstsw
mov
jnp
leave
mull
lock
dec
test
push
ret
jp
stos
into
mov
outsl
sahf
or
int3
sbb
xlat
sub
pop
imul
dec
and
mov
push
loopne
sbb
mov
ret
inc
in
push
rcrl
enter
mov
or
in
std
push
push
cmpsb
pop
leave
pop
fwait
iret
lret
inc
aam
stos
outsb
sahf
lea
jbe
mov
jp
sbb
ja
lds
aad
les
sbb
mov
cmp
adc
jle
jp
mov
nop
es
pushf
xor
adc
movsb
mov
in
xor
and
nop
into
andl
rcll
dec
out
adc
test
inc
sub
jecxz
cmpsb
mov
ljmp
jge
pusha
shr
jmp
into
mov
fldl
xchg
sub
fmull
clc
fdivl
add
pop
lret
xorl
clc
das
cmpsb
insl
ret
insl
mov
shll
fs
scas
js
cld
xchg
inc
dec
inc
dec
enter
push
push
ror
rcrb
sbb
cmpsl
jb,pn
stos
or
xchg
xor
xor
jge
mov
leave
int
sahf
or
ret
cltd
and
test
clc
pusha
daa
cli
adc
leave
outsl
lea
inc
adc
mov
popa
rcl
std
rcrb
scas
adc
in
push
mov
pop
fadds
sti
mov
mov
jle
and
cmpsl
js
jbe
cmpb
decl
xor
lock
aam
into
fxam
inc
lods
push
test
clc
push
and
add
out
test
dec
adc
push
and
mov
inc
rcl
lods
jo
push
test
outsl
sbbb
bound
int
ss
int3
dec
push
subb
xor
mov
mov
loopne
mov
jbe
xor
lock
aas
adc
dec
pushf
push
xchg
mov
cmpsb
push
shlb
jno
inc
ja
hlt
inc
mov
sti
lock
inc
pop
mov
push
cmpsb
jg
movsl
pop
and
hlt
mov
lea
inc
sub
loope
or
lea
rol
sbb
test
nop
or
roll
mov
push
repnz
sub
test
fldenv
mov
or
xchg
pop
xchg
pop
xchg
lret
pop
roll
add
daa
mov
jo
les
jp
mov
mov
pusha
jp
dec
dec
ljmp
xor
cltd
jmp
pop
repz
xchg
jnp
lds
shlb
jne
add
sub
and
xlat
sub
mov
jo
add
xor
mov
mov
push
gs
lods
outsl
flds
sub
jbe
into
mov
pop
xchg
cmp
mov
mov
cmc
jnp
cmp
imul
sub
outsl
pop
mov
pop
mov
lods
jns
testb
adc
xchg
inc
sbb
fcmovnu
insl
cld
shll
dec
mov
jne
negl
or
add
add
cmp
dec
push
ret
loop
fldt
shlb
or
xorl
xor
scas
jg
push
xor
add
lds
nop
mov
jge
dec
push
sbb
sub
aas
cmp
std
inc
push
arpl
lods
and
xchg
xchg
pop
dec
sbb
enter
pushf
mov
jmp
test
fidivrl
mov
cmp
lods
push
bound
cmp
jge
or
fidivs
gs
test
jb
pop
mov
arpl
enter
and
sbb
hlt
cltd
ljmp
cli
inc
repnz
mov
je
mov
and
mov
mov
push
ljmp
dec
aad
pop
pop
lods
call
mov
or
mull
cmp
add
aad
mov
aad
adc
mov
out
cmpsb
sbb
out
push
loopne
call
push
in
pop
scas
add
mov
aaa
ds
lahf
imul
and
mov
mov
lahf
jns
scas
adc
scas
jl
mov
inc
dec
arpl
xchg
add
push
dec
push
adc
push
lret
idiv
daa
clc
scas
dec
out
in
dec
inc
mov
out
mov
mov
xchg
out
dec
inc
movsb
xchg
sub
call
xlat
sub
loopne
xchg
jb
adc
xchg
xchg
ja
insb
add
push
imul
ja
movsl
and
push
mov
rorl
movsl
pop
push
sahf
iret
xchg
ror
test
jle
sub
test
test
pop
into
dec
jge
sub
out
enter
or
and
push
cmc
xor
fadds
fisubs
jne
sub
and
div
cmc
xchg
ret
mov
push
jo
mov
pop
cmc
int3
shr
aas
inc
adc
jmp
mov
mov
fdivs
sbb
xchg
and
std
xor
pop
pop
mov
les
xor
push
pop
xorb
cmpsb
jmp
iret
xor
loop
push
jb
and
lods
inc
xchg
in
mov
mov
inc
lock
jle
or
inc
push
sbb
xor
icebp
jg
mov
jmp
ja
addb
out
pusha
pop
andb
ljmp
push
inc
sbb
rcrb
mov
pop
test
aam
repnz
hlt
mov
loopne
dec
shl
insl
adc
out
mov
inc
je
notl
sub
mov
out
mov
movsl
subps
repnz
mov
ret
call
inc
mov
mov
mov
ret
loop
pushf
lahf
repnz
dec
add
fs
stc
adc
mov
fidivrs
cmp
mov
std
jno
test
cmp
lret
das
cs
cmc
xchg
pop
xor
movsl
push
mov
sbb
mov
in
aas
xchg
add
sbb
xchg
std
xchg
xchg
sub
test
ss
test
addr16
jge
sub
nop
push
add
stos
lods
mov
push
sahf
jmp
or
push
mov
sarb
push
or
or
sahf
repnz
mov
ljmp
jge
mov
pop
bound
xchg
mov
jo
cmp
cmc
aas
repnz
push
leave
xlat
mov
jmp
mov
xchg
orl
test
jle
clc
sarb
sub
adc
ret
jmp
imul
int
jl
lods
pop
or
rcr
xor
push
lock
mov
imul
pop
jo
in
fbld
mov
jne
lcall
pop
dec
roll
and
add
fmuls
jg
pop
pusha
mov
or
sbb
jnp
lcall
hlt
data16
imul
cmp
cwtl
ror
data16
sub
aas
push
std
aam
and
fs
scas
rcrl
pushf
sub
xchg
add
pop
push
test
mov
or
out
movsb
add
fdivrl
shll
xchg
dec
add
cmp
arpl
cmpsb
mov
int3
jle
mov
aas
cmp
ljmp
loope
lods
sbb
mov
mov
adc
mov
xchg
in
inc
mov
adc
std
es
xchg
addr16
cmp
pop
call
mulb
jl
imul
jmp
aam
in
jle
mov
ret
insl
in
push
xchg
jns
or
scas
jp
shll
inc
sbb
shrb
mov
push
add
push
pop
les
rcrb
mov
push
pusha
inc
dec
std
bound
stos
or
sbb
sub
movb
xchg
lods
adc
ljmp
or
push
aaa
cltd
push
jge
push
leave
and
outsl
lcall
ret
cmpb
add
push
mov
sub
add
sarb
shr
sub
push
aam
mov
loop
test
imul
shr
jo
mov
cmpsb
lret
les
int
nop
cmc
dec
into
xor
cwtl
mov
push
mov
fwait
pop
repz
pop
enter
mov
daa
rep
push
pop
sub
scas
inc
cld
jp
bound
mov
ss
jecxz
pop
cmc
jl
hlt
orl
repz
adc
mov
push
popa
mov
jmp
cwtl
jnp
cmpsb
pop
push
ficomps
pop
xor
sub
jge
into
push
dec
inc
ja
imul
arpl
dec
movsb
ret
leave
sub
cwtl
divb
jp
clc
adc
xlat
lret
push
jge
jp
and
mov
dec
add
pusha
jns
mov
cmp
pop
pop
sbb
jae
loope
out
and
and
ret
pop
dec
jl
ret
inc
sbb
cld
leave
cmp
jle
test
jne
mov
pushw
popf
jnp
mov
cmc
in
and
aam
pop
call
mov
pop
cs
std
sub
jmp
jp
xchg
test
mov
mov
lahf
sbb
pop
jno
jns
pop
lods
mov
pop
jbe
push
dec
scas
xor
push
pop
sarb
cmpsb
out
add
js
negl
or
mov
cwtl
fmulp
in
jp
negl
add
mov
jle
imul
pop
push
cmc
shl
mov
loop
mov
gs
sbb
dec
fucomp
ret
sub
subb
inc
pushf
popf
shl
test
clc
stos
loop
xlat
rcl
call
arpl
push
hlt
jl
mov
inc
outsb
mov
and
imul
cmp
sub
iret
hlt
pop
pop
cmpsl
lea
das
pop
imul
dec
daa
xchg
cmp
adc
xlat
aaa
mov
mov
pop
bound
jg
xlat
test
je
and
jnp
int3
or
push
dec
pop
mov
mov
in
mov
lods
scas
int
into
xor
lods
shl
and
mov
mov
popf
dec
popa
pop
daa
out
push
inc
enter
inc
out
icebp
push
lret
pop
leave
daa
das
push
enter
mov
pop
xchg
or
loopne
push
js
mov
add
ret
push
cs
mov
cld
jl
in
leave
rol
ljmp
inc
pop
scas
test
sub
lcall
leave
dec
inc
sub
in
mov
fcomp
out
sbb
push
lahf
jno
jns
sub
es
inc
mov
fistl
orb
jp
xor
stos
push
andb
dec
push
pop
in
pop
pop
into
xchg
lret
pusha
popf
jmp
add
rcl
lret
into
jbe
xor
inc
ret
add
cmovae
mov
mov
ljmp
pop
mov
inc
jo
stc
adc
loopne
cmpsl
inc
sbb
pop
imul
sub
sbb
popf
sahf
add
ljmp
test
subl
and
rorb
lcall
inc
pop
dec
pop
ljmp
movsl
and
dec
ret
cld
dec
pop
inc
lret
xchg
pop
mov
pop
jp
xor
pop
mov
rcrb
imul
push
add
push
pop
xor
jecxz
into
and
cmpsl
daa
insl
shrl
imul
jns
pop
sahf
pop
and
int3
aas
fidivrl
pop
xchg
xor
sbb
scas
stc
dec
mov
dec
stc
aaa
sbb
imul
lret
cs
test
jbe
js
jg
mov
mov
into
sbb
ret
fisubs
pushf
adc
movsb
rolb
es
shrl
jge
iret
sarb
pop
popf
sbb
scas
pop
in
fildl
icebp
xor
pop
lods
adc
pop
in
sbbb
fildll
adcb
insl
lahf
int3
daa
mov
push
push
pop
jecxz
mov
movsb
aaa
lahf
or
add
inc
fisubrl
and
mov
pop
jbe
lds
mov
push
xlat
fdivr
and
mov
out
cwtl
adc
test
pop
lret
mov
dec
aam
sbb
push
xchg
fnstcw
ss
jmp
scas
call
cmp
imul
leave
push
xor
xor
cli
mov
pop
xchg
push
lahf
inc
imul
xchg
lcall
push
jae
pushf
inc
jg
push
cmp
scas
mov
sarl
mov
cmp
ljmp
and
push
adc
push
lods
inc
mov
clc
push
mov
lock
in
addr16
gs
jp
repnz
add
inc
mov
lods
out
cmp
movl
mov
sbb
sti
push
xor
add
jl
insl
out
mov
ret
lahf
test
lahf
cli
fwait
push
jns
push
sahf
mov
sub
mov
clc
and
imull
out
imul
dec
push
sar
mov
push
lods
fwait
sbb
in
or
into
lea
jge
jae
mov
fisttpl
icebp
and
xchg
call
cld
in
lahf
xchg
mov
sbb
fwait
push
pop
mov
adc
pop
cmp
xor
scas
in
dec
xorl
ds
in
ds
stos
jg
fildl
cwtl
dec
jns
jge
imul
and
out
inc
add
and
sub
hlt
mov
cmpsl
and
ja
and
int
push
sbb
adc
sbb
xchg
sub
xor
jne
pusha
mov
aam
jl
arpl
pop
push
pushf
inc
sub
outsb
lret
xchg
and
jne
inc
xor
push
jb
inc
xchg
cmp
scas
lahf
rcr
and
insb
loop
aad
pop
ljmp
mov
pop
fldt
loop
mov
fcoml
sti
and
dec
push
adc
cmpsl
bound
push
loop
add
inc
ret
stos
mov
out
mov
add
cld
pop
mov
test
ljmp
cmp
pop
pop
in
inc
adc
mov
sahf
scas
mov
je
pop
sbb
mov
into
mov
leave
shrb
dec
out
or
imul
lea
stos
pushf
pop
sarl
pop
iret
aaa
inc
inc
cmp
enter
lds
xchg
and
adc
repz
mov
mov
xor
xor
mov
ljmp
pop
add
jle
popa
pop
cmp
cmpsl
fwait
icebp
nop
xchg
xchg
or
pminsw
mov
xor
and
sub
cmp
cmovge
push
or
loopne
jbe
das
dec
into
ds
push
leave
mov
cmpsb
pop
adc
and
or
popa
adc
out
jns
adc
cmp
fcmovne
push
jns
fistpll
jae
mov
or
xchg
je
push
add
mov
jb
xchg
ja
movsb
es
ja
out
and
ss
xor
push
sub
gs
pop
ss
aad
shrb
lds
jl
es
or
loop
lcall
sbb
out
pop
pop
popa
test
or
mov
sahf
mov
popf
cmpsb
xor
add
dec
jbe
out
xchg
popl
jne
in
or
xor
jae
dec
dec
fstl
pop
mov
js
cwtl
or
movl
jl
imul
or
mov
scas
sahf
movsb
sub
jp
and
xchg
insb
xor
or
daa
mov
imul
dec
push
or
dec
lock
add
mov
adc
push
insb
imul
dec
aaa
clc
mov
dec
mov
gs
sub
xor
fidivrs
sub
stos
mov
adc
mov
daa
stos
add
pavgw
xchg
dec
outsl
xchg
pushf
mov
popl
fbld
cmpsl
je
aam
into
rorl
ret
and
dec
test
sub
rorb
test
push
sbb
out
leave
dec
cli
scas
popf
scas
jge
push
sbb
sub
mov
out
or
test
inc
pop
in
push
dec
mov
daa
cmp
lahf
mov
lock
sub
js
pop
cmp
repz
dec
mov
push
mov
shll
cmpsl
push
nop
sub
and
mov
or
mov
mov
mov
mov
cmp
mov
aaa
push
dec
mov
adc
stos
lods
lahf
push
push
fistpll
sahf
ljmp
fnstenv
inc
push
dec
cmc
add
lret
fistps
rclb
cmpsb
push
hlt
mov
popa
das
push
xchg
nop
inc
cs
push
aad
repz
cmp
cmovbe
mov
lret
jge
mov
cwtl
mov
sub
cwtl
sub
add
pop
mov
lret
std
adc
lods
ret
pop
ljmp
push
outsb
xor
lods
das
sar
xor
xor
jbe
push
push
push
mov
in
adc
ja
das
jns
scas
stc
sub
loopne
insb
xor
mov
mov
push
out
pop
or
fdivr
pop
into
cmpsb
lret
jo
push
jbe
lods
les
pop
jne
jns
insb
jmp
fimull
in
inc
mov
xchg
add
aaa
xchg
cmp
std
mov
push
pop
int
test
pop
out
mov
push
cmp
add
pop
mov
push
ds
push
xchg
sub
dec
movsl
mov
push
mov
dec
aad
and
out
nop
stos
shrd
enter
add
cltd
jmp
jecxz
jo
je
mov
inc
adcb
das
cmp
mull
add
inc
out
mov
xchg
lea
sub
push
push
or
lcall
or
mov
in
dec
into
pushf
mov
push
lahf
and
inc
pop
inc
inc
fs
add
cmpsl
push
aaa
mov
or
out
mov
xchg
xchg
adc
test
pushf
xchg
gs
pop
push
jb
imul
mov
andb
sahf
xor
xchg
pop
pop
mov
xchg
cmp
mov
cmp
cltd
insb
loopne
mov
push
aam
push
mov
mov
adc
jb
or
pop
lds
sahf
xchg
ds
cmp
mov
inc
push
sbb
jo
cmpsl
lahf
adc
mov
leave
push
hlt
add
out
sbb
pop
cmp
adc
xchg
into
xchg
fdivrl
bnd
andl
icebp
push
rcrl
pop
inc
and
pop
mov
or
add
and
push
xor
push
insl
mov
sbb
js
outsl
out
cmp
jo
fisubrs
adc
sahf
jmp
sub
ret
mov
cmp
rclb
mov
and
int3
add
mov
jb
jp
imulb
xchg
rcl
movsb
movsb
imul
cli
int3
rorb
out
rcll
or
imul
push
or
jb
das
or
cmp
test
data16
pop
xor
push
scas
lret
jmp
and
aaa
ss
insb
mov
ud2
in
lock
mov
mov
cmp
imul
out
and
push
sbb
xchg
jle
push
mov
xchg
ror
es
test
mov
test
into
xchg
test
xor
pop
mov
xchg
cmp
pop
loopne
xchg
cli
mov
mov
jle
pop
hlt
fst
imul
andl
mov
call
mov
daa
mov
fwait
jnp
lods
lods
mov
es
mov
test
lods
mov
in
xlat
mov
aam
jns
stos
iret
xchg
fwait
jae
adc
in
aaa
inc
lds
int3
push
jb
mov
in
jo
mov
xchg
fisttpl
scas
pop
inc
je
in
sub
dec
mov
dec
aam
outsl
jp
sbb
sbb
int
adc
repnz
repnz
and
pop
aas
fmuls
lods
mov
loopne
rorb
and
dec
dec
and
pop
pop
in
aas
xor
add
popa
bound
adc
push
test
bound
sub
fucomi
ljmp
notb
aad
insl
sub
xchg
jp
fwait
pop
nop
sbb
icebp
lods
cmp
mov
inc
ja
fimull
mov
repz
sbb
sbb
das
add
aas
jne
mov
sub
jne
xchg
cmp
jbe
push
add
jno
adc
add
les
lods
test
xchg
sub
xchg
fldenv
push
push
sub
andl
mov
out
mov
or
xor
sub
imul
adc
mov
inc
dec
sbb
and
push
mov
xor
add
dec
mov
push
push
in
xchg
out
or
jb
fisubrl
addr16
cld
int
cmp
sbb
inc
dec
xchg
push
pop
adc
repz
cmp
cwtl
and
stos
dec
out
cmpsl
or
jno
xchg
push
jmp
les
inc
sbb
or
subb
push
mov
adc
push
xchg
aam
int
and
jo
roll
cs
mov
pop
mov
jmp
ss
inc
ret
push
lret
sbb
sbb
dec
movsb
outsl
mov
xchg
lock
cmp
scas
jne
mov
mov
std
in
push
add
out
js
add
jae
aas
add
cld
jb
lret
shlb
sti
adc
lock
sub
int
cmp
ljmp
insb
shl
adc
pop
push
dec
stos
inc
inc
mov
mov
sub
or
in
mov
call
or
adc
cmc
gs
add
daa
fnstcw
jns
loop
fnstcw
gs
xchg
adc
add
rol
repz
mov
cli
cmpsl
mov
inc
test
outsl
icebp
add
inc
jecxz
daa
movsb
lods
jnp
addr16
sub
jge
sbb
in
cmpsb
cmp
inc
clc
and
pop
pop
in
std
testb
hlt
push
daa
enter
fidivrl
movsl
sub
icebp
sbb
inc
xor
aaa
out
and
sbbl
movsl
mov
inc
fstpl
xchg
cmp
dec
and
es
scas
out
jge
mov
cs
mov
fdivl
sbb
pusha
movmskps
insl
iret
push
xchg
in
add
stc
insb
jns
das
or
push
xor
adc
mov
neg
inc
ret
xor
push
mov
adc
icebp
adc
enter
add
dec
jle
adc
iret
cmpsl
ror
pushf
lcall
and
inc
outsl
movsl
xor
jo
xor
sbb
sti
jmp
dec
scas
cmp
inc
jo
test
inc
mov
lds
pop
rorl
test
fsubrs
cmc
stc
inc
and
aaa
pushf
sub
movsl
sub
fldl
and
adc
mov
mov
call
pop
nop
inc
cmp
inc
jl
rorl
and
rcrb
sub
movsb
je
xor
inc
fsubrs
pop
dec
punpckhdq
push
sarl
outsb
mov
mov
test
adc
int
push
stc
cmc
aaa
sub
dec
push
sub
stos
flds
sub
rcll
xorl
lea
ja
add
idivl
jge
addr16
xor
jbe
test
test
sahf
repz
fistps
test
sub
or
out
ja
int
adc
mov
test
or
pop
call
sbb
push
outsb
je
cld
jae
ljmp
jo
pop
add
fnsave
xchg
xor
mov
insb
movsl
xlat
mov
pop
arpl
dec
sbb
mov
xchg
imul
jbe
lcall
testl
out
cltd
into
das
sub
ficompl
pop
inc
xor
scas
cli
lret
mov
loope
imul
mov
mov
sbb
and
and
mov
arpl
dec
sub
cmp
loopne
shll
fdivl
or
lods
xchg
aad
pop
push
push
icebp
inc
mov
lahf
cli
mov
pop
add
lret
test
lcall
sub
popf
xor
or
in
sub
scas
pop
je
mov
mov
pop
int3
rcrb
add
mov
insb
test
cmp
xor
mov
enter
je
sub
das
subb
lret
adc
jecxz
incb
xor
cmpsb
loopne
pop
dec
lods
in
xchg
rcll
add
lea
aaa
push
mov
popf
lods
data16
in
xlat
dec
ret
cmpsl
scas
in
test
call
fistl
scas
test
mov
enter
mov
ud1
mov
push
dec
sti
insb
dec
movsb
lret
insb
push
sbb
push
scas
mov
and
jge
mov
mov
or
rcrl
popa
into
mov
and
mov
mov
mov
cmp
xor
xor
sbb
addl
jbe
dec
xchg
mov
dec
outsb
and
sub
adcb
xor
cmp
pop
jne
popa
mov
fwait
mov
hlt
out
popf
ss
push
cltd
mov
stc
dec
popf
sub
in
mov
sti
mov
and
fldenv
mov
mov
xor
jg
mov
call
mov
or
inc
mov
cmpsb
iret
pop
add
xor
mov
pusha
loopne
pop
dec
mov
mov
inc
inc
mov
jo
mov
nop
mov
ljmp
jmp
mov
fmul
incb
cs
ret
aad
mov
mov
loopne
mov
insl
mov
sub
mov
stos
pop
jp
lock
int
sahf
inc
arpl
or
outsb
pop
jb
stos
dec
ljmp
mov
mov
xlat
in
cmpsl
insl
sub
cs
cmpsb
push
sar
push
xchg
cmp
cmp
sahf
mov
stos
pop
insl
imul
nop
xchg
mov
arpl
xchg
loope
xchg
dec
jle
mov
cmp
sub
sti
push
dec
sarl
popa
bound
loop
mov
sti
mov
jmp
push
jne
xchg
xchg
stc
jae
xchg
ja
andl
mov
scas
jecxz
push
je
push
pop
push
sbb
shll
adc
shrl
jg
xor
aad
jae
insl
mov
outsb
push
sbb
pop
insb
outsl
loope
aaa
ret
leave
repz
fstps
mov
pop
outsb
or
rcrl
out
pop
clc
push
shll
inc
mov
movsb
push
xchg
jne
sub
inc
movsb
test
cmc
and
adc
call
push
lahf
in
mov
data16
inc
ficomps
cli
sub
cmp
cmp
dec
sbb
mov
mov
mov
int3
add
push
xor
clc
lock
push
call
cmp
nop
sbb
cmp
in
pop
adc
fcoml
xchg
pop
into
shlb
jne
cmp
sbb
mov
pop
cmc
data16
inc
test
rolb
lods
in
sub
push
adcb
sub
cmp
xchg
mov
call
mov
jmp
subb
mov
sub
dec
dec
push
ja
inc
test
xchg
idivl
and
xchg
jp
into
stc
aas
mov
pop
xchg
mov
cmp
cmp
cmp
insb
adc
inc
sub
push
and
roll
xchg
outsl
vandnps
jecxz
cmpsb
sbb
pop
shlb
push
jg
sub
lods
faddl
fnstenv
add
cmp
int
mov
dec
adc
test
test
pushl
xchg
adc
fstl
faddl
gs
lret
mov
push
dec
orb
test
decl
sbbl
ss
inc
int
aas
or
mov
pushf
sbb
out
adcb
dec
pop
or
out
popf
xor
sub
cmp
inc
in
dec
frstor
rol
mov
lods
mov
rcll
sbbl
repnz
pop
pushf
ss
out
dec
pushf
scas
sbb
push
mov
cld
adc
sbb
fists
mov
fwait
rorl
roll
ret
inc
mov
jmp
repz
fidivs
jp
cmp
push
sarl
inc
xchg
xchg
shlb
enter
jmp
lea
lcall
loopne
cmp
pop
ret
out
lea
pusha
ret
imul
das
sti
mov
cli
or
insb
xchg
adc
xchg
cmc
mov
repnz
jbe
sub
hlt
decb
mov
rcr
mov
fidivl
nop
lahf
jmp
sub
int3
sbb
cmpb
shrb
jmp
push
icebp
adcb
push
cmp
xchg
jne
add
repz
push
jno
inc
in
push
cwtl
sub
mov
cmpsb
fcomps
xor
push
movsb
addl
jns
dec
mov
or
sti
lock
lcall
add
cmpsb
sbb
mov
inc
nop
loope
in
pop
jbe
sub
adc
stc
outsb
ret
std
dec
loope
and
pop
and
jmp
add
jno
sahf
lret
inc
jg
fidivl
push
xor
sub
xor
aas
pop
push
adc
adc
dec
bnd
dec
mov
test
ds
add
cmp
pop
leave
imul
cmpsl
sbb
ret
aad
pop
ds
adc
outsl
xorb
nop
and
add
mov
aaa
adc
push
lahf
fisubrs
jae
sub
cmp
in
pop
inc
mov
cld
rcll
pop
pop
mov
frstor
cmp
sti
int3
push
lods
jno
jp
popa
ss
xchg
xchg
in
sub
sarb
jmp
pop
mov
insl
stos
scas
pusha
out
sbb
mov
pusha
insb
mov
sti
or
gs
dec
int3
dec
and
mov
out
fs
cli
mov
loope
aam
xchg
push
inc
mov
and
lock
xorb
rorb
stos
xchg
cli
jo
js
xchg
mov
sarl
jmp
daa
scas
mov
out
add
jne
fwait
dec
mov
push
mov
mov
fidivs
fcoms
fmul
test
pusha
xchg
test
inc
outsb
mov
rcrb
add
pop
sahf
test
inc
into
call
fnstenv
test
jbe
push
mov
mov
push
adc
pop
movsb
add
xchg
mov
imul
mov
fmuls
or
hlt
cmp
lds
xor
inc
aaa
xchg
pop
cwtl
dec
clc
sub
sbb
mov
push
jl
jns
inc
into
repz
lods
ljmp
xor
into
lock
fiadds
xor
adc
xchg
mov
add
inc
or
andl
lds
sbb
nop
mov
xor
int
mov
fmulp
repz
sub
cmpsb
cmp
xchg
in
sub
arpl
sub
push
dec
daa
pop
pop
js
sahf
aaa
cli
hlt
hlt
pop
popf
lock
stc
sbb
pop
stos
jbe
cmp
add
cmpsl
inc
sub
lods
inc
add
xchg
lret
mov
fisubrs
cwtl
stc
scas
pop
es
rclb
push
mull
bound
insl
out
jp
clc
dec
cmc
sub
out
push
inc
sahf
pusha
inc
mov
add
dec
push
pop
or
adcl
mov
scas
and
fwait
aam
ret
and
inc
inc
or
in
xor
fcom
roll
xor
stos
stos
or
insl
push
jecxz
lcall
test
lret
test
push
dec
into
push
mov
test
data16
pop
mov
imul
inc
sub
mov
aaa
punpckhwd
shlb
shll
mov
push
mov
sbb
mov
cmp
imul
cmpb
dec
or
sarb
adcl
aad
rorl
jae
movsb
loopne
lods
push
out
add
xchg
lret
and
mov
xchg
mov
sbb
cltd
cmp
add
xor
adc
push
js
dec
popf
ljmp
icebp
xchg
jmp
push
imul
push
add
fdivrs
jo
jl
int3
test
sub
fcomp
dec
in
shl
add
stc
mov
pusha
dec
and
imul
or
imul
adc
hlt
test
into
sahf
mov
jbe
mulb
mov
sub
push
sub
and
lock
xchg
divb
jg
leave
adc
pushf
xor
lret
dec
leave
or
mulb
insl
divl
xchg
xorl
es
push
jp
jecxz
pusha
flds
jp
sbbl
dec
decl
and
inc
add
daa
sbb
movsb
test
iret
push
test
lret
push
xor
fidivl
and
insb
stc
out
int3
push
in
push
je
sti
cwtl
pop
jecxz
push
mov
shl
xor
aad
aad
sbb
jecxz
inc
test
insb
cmp
std
add
das
out
test
aaa
insb
cmpsl
jnp
mov
xlat
cltd
sub
jbe
mov
ret
clc
popf
inc
lcall
jg
pop
add
in
mov
adc
mov
call
cmp
es
push
bnd
adc
push
mov
push
lret
dec
bound
sbbl
aas
add
mov
xlat
jp
sbb
cwtl
mov
inc
mov
cmc
jp
lds
addb
nopl
repnz
pushf
jb
nop
lods
leave
gs
test
sbb
dec
aaa
daa
sub
cltd
xor
push
and
sub
sbb
dec
jb
aaa
sub
jg
loop
divb
sbb
outsl
movb
sbb
mov
inc
push
popa
xor
lods
push
or
daa
xor
sub
jno
fldl
insb
inc
or
aad
pop
mov
sbbb
sti
sarb
or
outsb
cmc
mov
out
pop
sub
mov
movsl
andb
pop
jne
mov
es
inc
xchg
xlat
aaa
popf
ret
sbb
pop
cmpb
jp
xchg
pop
pop
push
and
stos
loope
dec
mov
cmp
pop
jmp
loopne
mov
push
jnp
add
fs
mov
test
addr16
mov
cli
fnsave
and
mov
fimuls
hlt
mov
pop
push
rclb
pop
push
mov
mov
push
inc
into
mov
push
push
xchg
dec
inc
jb
fistpll
movsl
xchg
test
push
push
out
loope
mov
decb
mov
lcall
mov
xchg
lock
sbb
scas
push
fwait
sbb
jno
jbe
into
jnp
pop
call
cmp
mov
and
mov
mov
push
and
bound
push
sahf
dec
sub
cmp
and
repnz
daa
xorb
xchg
les
imul
lods
mov
outsl
stc
jb
mov
insl
lods
sub
fstpt
cli
mov
scas
xchg
testl
rcl
sub
lahf
call
dec
gs
and
cmp
dec
inc
jp
xor
fcoml
inc
mov
stc
sbb
xor
pop
cmp
rcr
popa
pop
push
push
out
dec
stc
cmp
xchg
add
aad
ljmp
mov
push
loopne
inc
arpl
int
xchg
into
out
xor
fdivp
jns
mov
and
lods
xor
pop
pop
xchg
push
xchg
mov
jae
sub
dec
push
in
inc
fisubs
lcall
cmp
inc
mov
subl
test
or
les
inc
mov
lret
js
inc
lods
inc
pop
pop
inc
lea
dec
insb
les
lahf
notl
mov
lock
add
int3
and
and
ljmp
imul
aas
sub
xchg
addr16
adc
add
mov
in
dec
push
pop
cltd
loop
loope
pop
ja
loopne
mov
and
dec
outsl
jmp
adc
negb
enter
aad
data16
hlt
loop
popf
cmpsb
je
jnp
dec
xchg
push
loop
out
daa
nop
push
xor
jo
rolb
push
xchg
cwtl
mov
in
test
adc
dec
pop
mov
or
jecxz
stc
orb
leave
loope
mov
scas
mov
imul
arpl
frstor
add
inc
std
frstor
or
mov
hlt
mov
sub
xchg
cs
add
xchg
orl
shr
jne
nop
dec
out
lcall
pushf
lods
call
sub
mov
int3
push
outsl
xchg
jnp
sub
dec
jecxz
adc
pop
fistps
dec
cmp
mov
xorb
mov
mov
negl
jle
jg
xchg
and
aad
cmp
fildll
pushf
cwtl
jb
test
faddl
adc
or
cli
cs
cmp
scas
push
xchg
mov
cmpsl
popa
dec
push
sbb
gs
aaa
rcl
enter
call
adc
jp
leave
rol
push
out
xchg
rclb
repz
jbe
aaa
fwait
sub
pop
sub
pop
lret
jmp
xlat
popf
cmp
mov
int
daa
cwtl
fdivl
jne
xor
mov
aad
mov
es
inc
fimull
pushf
iret
mov
push
add
mov
movsb
icebp
cmpl
jecxz
loopne
aas
loop
or
mov
mov
inc
and
movsb
sahf
in
fdivrs
pushl
pop
xchg
fcoms
fnsave
sub
call
sbb
pop
or
inc
pop
adc
sub
mov
loopne
inc
arpl
sub
push
mov
bound
fmulp
jecxz
push
push
jp
aad
jb
nop
jns
pop
fisubrl
sbb
push
xor
je
lcall
popa
popa
insl
xchg
add
pop
jbe
fdivl
pushf
jnp
insl
inc
fldenv
mov
into
dec
sbb
add
inc
or
jo
pusha
dec
and
cmp
sbb
dec
test
pop
inc
fwait
push
stos
push
imul
cli
out
mov
sbb
jae
mov
cwtl
fdivp
bound
movb
idivb
xchg
xor
mov
add
test
xchg
jp
xchg
adc
es
testb
cmpl
pop
das
pushf
pop
sbb
push
fcompl
adc
mov
adc
sbb
add
cmpl
cmp
sti
xchg
or
push
or
lods
xor
push
hlt
dec
sbb
push
movl
subb
aam
dec
in
fisttpll
stos
lds
test
push
sar
inc
repnz
sbb
repnz
inc
pop
cltd
jns
and
sahf
xchg
xchg
lret
mov
out
aas
or
pop
addr16
inc
fists
popa
icebp
xor
add
xlat
cmc
sahf
cmc
repz
mov
test
mov
out
rorb
sub
adc
and
stos
imul
xor
lea
adc
push
negl
ffree
popf
out
dec
xor
in
mov
inc
loop
xchg
dec
sti
xchg
xchg
add
mov
pop
ja
sub
test
out
ret
sub
ljmp
es
cmpsb
mov
out
mov
xor
cmp
xchg
jns
les
jl
sti
sbb
out
repz
enter
mov
sbb
sub
push
aaa
test
aam
repnz
leave
cmp
inc
push
xor
cmp
ret
xchg
shrl
jns
rcrb
and
sbb
pop
mov
cltd
sub
shl
dec
cmp
shlb
subb
jne
out
shl
xor
sub
pop
dec
sub
or
lods
and
je
nop
adc
movsl
xchg
shrl
or
push
outsl
inc
cmp
nop
nop
xor
fwait
lds
sub
or
xchg
cmp
gs
out
cmpsl
in
sbb
and
adc
outsb
aas
or
mov
mov
aad
mov
mov
jb
and
outsb
clc
or
pusha
pop
mov
pushl
jns
sbb
push
add
pop
xchg
mov
icebp
jecxz
sbb
lret
inc
xchg
enter
xchg
fsubp
hlt
fwait
stc
jmp
cmpsl
cmpsl
testl
dec
mov
test
mov
mov
adc
movsl
lods
nop
sub
or
adc
xorb
dec
mov
jno
fs
cmc
sub
stos
in
push
or
repnz
rorl
mov
orl
dec
push
cmp
into
pop
out
cltd
dec
outsl
cmpsb
adc
imul
lods
popf
pop
mov
pop
adc
sar
nop
mov
es
mov
add
sbb
jle
cmpsb
jae
lods
scas
cltd
ret
add
mulb
out
lods
jbe
imul
loope
ljmp
xlat
test
cmp
mov
add
dec
or
sub
clc
fisttps
mov
and
pop
arpl
or
push
movsl
dec
rol
pop
cwtl
fs
mov
jp
dec
stc
dec
mov
adc
push
hlt
fsubrs
mov
popf
sbb
sbb
jnp
pop
in
add
xor
arpl
cmc
cld
inc
aam
addr16
movsb
fadds
scas
adc
push
stos
dec
es
mov
pop
mov
fldenv
imul
push
push
push
xlat
or
and
mov
ret
jmp
nop
pusha
dec
push
fnsave
pop
and
cmp
test
pop
push
es
popa
ljmp
push
mov
pop
push
insb
or
aam
mov
cmp
iret
inc
mov
ljmp
enter
popa
jo
cmp
call
xchg
inc
rcrb
adc
xor
test
add
push
imull
sarb
lock
adc
adc
push
mov
rcrb
jge
cmp
jge
in
cmp
call
pop
push
stos
stos
adcl
sti
lds
push
lds
cmp
cli
incb
dec
push
xchg
sub
pop
lea
into
pop
jns
push
adc
jns
lret
mov
pusha
push
or
xorl
mov
mov
dec
filds
cmp
jo
roll
je
pop
ret
jnp
addr16
lea
and
bound
mov
stos
aaa
xchg
sahf
das
cld
mov
push
sub
loopne
stos
xchg
sbb
stos
es
or
fwait
jl
cs
cmp
dec
xor
cmpsb
loopne
jnp
mov
inc
push
mov
fwait
cs
adc
mov
cmp
cld
jg
jno
xor
mov
mov
xor
out
outsb
bound
lock
lods
mov
lea
or
test
or
sub
sahf
pop
dec
movsb
sub
cli
jmp
loop
sbb
fs
mov
xor
fiaddl
push
dec
add
push
inc
pop
nop
mov
ja
mov
cmpsb
mov
mov
inc
outsl
loop
push
adc
test
push
out
jg
add
imul
aam
imul
mov
mov
das
xchg
adc
hlt
mov
call
arpl
mov
adc
das
notl
sbb
leave
cs
push
and
imul
imul
push
sbb
repz
or
addr16
jne
xchg
mov
pop
adc
xchg
shrb
lock
arpl
jle
ret
shlb
aaa
nop
jmp
jecxz
ljmp
sahf
push
in
mov
loopne
mov
pop
aaa
sub
or
or
fnsave
clc
pop
sbb
dec
xor
jmp
pop
inc
dec
dec
pop
in
sbb
sbb
pop
jae
outsl
fneni(8087
jb
rorl
adc
jns
xor
repz
ret
mov
aas
add
popa
dec
dec
push
mov
or
and
mov
mov
cmp
scas
xchg
jno
dec
xchg
js
push
lahf
mov
test
push
and
repz
mov
bound
lret
inc
add
gs
mov
sbb
int3
or
fdivs
pop
in
shll
sub
outsb
out
xor
inc
xchg
jbe
in
push
cmp
cld
mov
call
mov
scas
das
lahf
shlb
fwait
and
push
imul
and
cmp
fs
push
adc
xchg
jae
xor
mov
jno
jmp
dec
loopne
cmp
and
pop
pop
mov
test
repz
jo
inc
stos
loopne
xchg
insb
sbb
jbe
dec
sbb
cmp
lcall
test
push
add
xor
rolb
repz
xchg
icebp
pop
adcl
and
sarl
lds
adc
push
mov
int3
arpl
loopne
aad
or
sub
mov
xorl
fcomi
mov
popf
aaa
lret
cmpsb
out
dec
loop
das
leave
scas
mov
xchg
lods
push
orb
jp
and
out
mov
mov
aas
and
loopne
mov
outsl
outsb
rol
jmp
jne
ljmp
mov
xchg
aad
insb
push
sarb
dec
cmp
sub
push
jmp
xchg
mov
test
cmp
mov
xchg
sbb
cmp
ljmp
inc
and
or
jmp
sbb
je
rcll
scas
or
and
hlt
sub
fdivrp
mov
test
xor
inc
mov
pop
loop
xor
outsb
pop
imul
jae
push
and
mov
pop
call
idiv
aad
jecxz
insb
cmpsl
testb
sbb
add
in
sbb
aad
xchg
scas
dec
in
out
sbb
pop
and
leave
arpl
cmp
mov
mov
or
sbb
adc
xchg
or
push
int3
aam
cmp
sub
cmpsb
mov
sub
int3
popa
cmp
sub
cld
mov
add
mov
sti
inc
mov
sahf
xor
xlat
lods
call
fldenv
iret
push
sarl
lea
jbe
jl
xchg
mov
adc
mov
pop
cmpsl
inc
mov
xchg
pushf
out
or
xchg
gs
adc
ds
out
fcomi
imul
sbb
pushf
test
je
ljmp
add
and
jns
mov
sarl
in
scas
pop
cmp
inc
fcoms
cmp
adc
insl
std
pop
lods
pushf
dec
mov
dec
xor
push
adc
and
dec
add
cmpsl
sbb
pop
inc
xor
inc
fwait
dec
adc
loop
das
pop
push
add
add
mov
mov
bound
mov
repz
clc
int
pop
jae
out
pop
inc
inc
addr16
je
jle
pop
call
xchg
aas
inc
sbb
mov
insl
test
xor
or
cwtl
pop
mov
dec
xor
jp
and
std
cwtl
pop
dec
pop
jp
and
test
mov
rcr
xchg
inc
or
jne
int3
mov
adc
push
or
cwtl
sbb
inc
bts
jbe
fwait
adc
lods
mov
xor
inc
out
andb
jmp
sbb
mov
add
int3
push
pop
jns
sbb
int3
bound
dec
jb
out
add
mov
in
lahf
mov
out
jl
lret
imul
les
dec
mov
loopne
mov
int3
pop
push
call
dec
shlb
mov
ret
xorb
mov
xchg
add
inc
pop
or
mov
shlb
lock
dec
in
bound
filds
xchg
in
repz
xchg
jbe
sbb
imul
mov
dec
into
in
stos
pop
test
js
add
sbb
ds
cmc
sub
or
loop
test
mov
dec
push
aam
push
subb
mov
aaa
ja
adc
kunpckwd
scas
sahf
xchg
cmp
pop
in
pushw
mov
mov
mov
shlb
add
pop
push
dec
addr16
idivl
sbb
jbe
fsubrp
jnp
add
test
icebp
pop
sbb
jbe
scas
andnps
cmp
sbb
or
or
mov
inc
sbb
ret
aad
sub
jmp
xchg
xor
addl
ret
loop
sarl
cmp
cld
std
pop
clc
int3
testb
idivb
mov
push
inc
dec
push
sub
cmc
movsl
dec
dec
adc
push
push
enter
mov
scas
aam
lfs
es
mov
jns
movl
lahf
sahf
cld
shl
ret
mov
pop
cmp
hlt
inc
xchg
mov
cmpsl
int
lret
mov
jp
pop
ficompl
gs
pushf
aad
ficomps
ror
jecxz
ss
aad
scas
cwtl
pop
int3
push
insl
inc
js
imul
es
add
stc
inc
push
xchg
and
andb
ss
jle
pop
sbbl
pop
lcall
xchg
mov
sub
add
jle
out
sbb
inc
movsb
stc
dec
jb
outsb
ret
mov
inc
loop
jge
jecxz
and
fldcw
dec
add
ret
pop
mov
and
or
aam
mov
mov
mov
lret
pop
jl
scas
xor
and
and
mov
orb
hlt
push
pop
scas
sub
mov
push
xchg
mov
adc
xor
mov
imul
mov
jbe
jg
cmp
mov
dec
jmp
pop
stos
cltd
fucom
xchg
cmc
insb
das
test
jp
stos
nop
in
int
dec
cmovge
stc
jo
cmp
adc
and
jo
stc
mov
imul
rorl
xchg
mov
xchg
mov
mov
leave
aam
decb
add
fcompp
lea
fisubs
push
jmp
sti
dec
fidivrl
push
loope
adc
or
fildl
mov
jge
lock
dec
sbb
mov
mov
add
or
rcll
sbb
inc
jbe
iret
jle
cltd
mov
call
jge
popf
insl
stos
cwtl
jecxz
mov
cmpsl
jl
mov
push
cmp
in
das
cmp
dec
lock
ss
scas
cmpsl
xchg
flds
ds
and
faddl
mov
push
add
adc
dec
sub
sbb
jl
mov
fsubs
lea
xchg
cltd
popf
inc
fcomp
stos
mov
bound
sahf
test
pop
and
idivl
jns
shr
jno
pusha
loopne
scas
and
or
xchg
insl
mov
dec
faddl
shl
sub
mov
xor
mov
insb
out
shlb
xchg
sub
mov
js
repz
xchg
ss
fnstcw
shr
mov
cwtl
fildll
xchg
mov
loope
daa
pusha
sti
push
js
jp
mov
int3
mov
les
jmp
pop
pop
lret
mov
pop
cmp
packssdw
xlat
push
ret
cmp
sbb
inc
loope
int
adc
and
out
ret
inc
ret
mov
mov
xchg
mov
pop
jne
jecxz
mov
pop
std
xlat
in
cmp
jle
push
lea
lret
xchg
mov
adc
neg
xor
add
adc
jp
pop
mov
jo
sbb
out
loopne
and
daa
cmpsl
sub
pop
mov
jp
loope
pusha
notl
jb
imull
shrl
push
cmc
add
stos
icebp
rorb
mov
test
hlt
push
sbbl
aas
ret
in
fimuls
int
lods
idiv
xor
xchg
shr
or
or
jl
and
mov
lret
lods
cmpsl
test
xchg
push
or
pushf
sbb
loope
outsl
or
add
lds
lods
mov
subps
push
icebp
cmc
mov
sbb
lds
and
flds
mov
push
lods
xchg
or
and
jecxz
fstl
sub
mov
ja
sbb
pop
inc
ds
and
stos
sub
add
sub
cmp
and
popf
insl
ret
cmp
outsl
jb
xor
mov
dec
xchg
pop
xor
xor
adc
jnp
mov
inc
nop
fadd
inc
xor
insb
negb
jbe
xor
sub
hlt
add
bound
add
bound
loopne
sub
pop
movsb
xor
stos
repz
push
cs
leave
adc
pop
idivl
cwtl
or
add
mov
test
insl
mov
and
cmp
cmp
daa
or
inc
mov
sarl
mov
xchg
nop
testl
loope
add
xor
pop
mov
out
das
or
mulb
and
inc
stos
sbb
sub
mov
xchg
add
push
sbb
call
std
mov
add
adc
lods
push
mov
inc
aad
pop
jl
xchg
pop
push
es
sbb
push
or
sbb
fs
fidivs
cwtl
int
mov
dec
mov
xchg
out
loope
movhps
jae
andb
lods
jb
ja
outsb
push
and
test
movsl
or
clc
mov
adc
mov
push
out
jg
in
sbb
dec
loopne
pop
test
ss
popf
cmp
xchg
xor
ss
dec
jnp
or
es
mov
pop
dec
xor
leave
aad
mov
insl
aas
aam
dec
push
mov
aad
adc
fiadds
mov
cmpsl
dec
adc
jbe
scas
jb
movsb
push
jns
push
jb
ja
arpl
pop
shl
and
xchg
pop
sahf
lock
outsl
out
push
cmc
lret
mov
ja
dec
int3
outsl
dec
dec
fcmovnb
inc
or
push
adc
sub
mov
push
sub
loope
xor
adc
xor
lret
cmc
andb
mov
rcr
shlb
fmuls
call
mov
sbb
cmp
stos
pop
cltd
xor
add
jae
out
mov
adc
push
ret
jb
mov
lcall
fidivs
neg
and
jle
inc
stos
xlat
arpl
dec
cmp
pop
sarl
cmp
inc
push
ja
xchg
pop
dec
mov
mov
outsl
and
jp
jmp
xor
das
testb
xchg
div
loop
sahf
leave
daa
mov
test
or
push
movsb
lods
test
je
orl
orl
mov
pop
adc
push
and
cltd
inc
xor
jno
mov
jmp
jns
dec
in
mov
inc
mov
pop
out
negb
lret
push
fisubl
cmp
ficompl
mov
dec
subb
dec
adc
push
rclb
xchg
es
into
mov
mov
xchg
jnp
push
adc
mov
mov
pop
in
clc
mov
mov
mov
popa
and
shrl
enter
push
loop
add
shlb
inc
sti
xchg
fwait
les
sbb
push
sbb
add
es
mov
adc
xchg
pop
adc
pop
sbb
les
pop
jno
mov
enter
sub
mov
lret
ss
pop
stos
or
movsb
pop
je
daa
icebp
push
add
call
xchg
push
ja
pop
xchg
fucom
fcmovne
inc
call
sub
mov
sub
cmp
push
outsb
orl
rorb
mov
cmp
or
stos
mov
sbb
out
xorl
jae
push
push
pushf
lds
lds
inc
inc
cld
enter
bnd
xor
lds
sub
aaa
add
jnp
xchg
daa
test
adc
arpl
jmp
fsubs
jmp
cmp
std
das
pop
cmpsb
mov
jge
mul
int
test
and
adc
cmp
das
movsb
or
push
xchg
sbb
outsl
add
inc
add
sub
pop
pop
pop
xchg
mov
repz
push
jbe
dec
pop
fildll
into
cli
outsb
outsl
fcoms
sbb
sbb
xchg
je
mov
mov
dec
sbbb
sub
fcmovnu
xchg
sub
mov
sub
mov
push
pop
push
xor
mov
pop
jg
pop
mov
cmp
std
stos
negb
xor
sub
sub
pop
jno
aaa
mov
jmp
xchg
mov
push
add
enter
push
movsb
sbb
rolb
nop
sbb
cld
in
icebp
aas
je
and
cmpsl
cmp
sub
xor
pop
mov
mov
add
push
mul
inc
int3
lods
clc
adc
add
rcr
pop
sahf
adc
xor
aam
xor
out
add
jbe
packuswb
fimull
aad
adc
popf
or
fisubrl
sub
dec
or
leave
das
loop
popw
idivl
dec
stos
bound
mov
mov
jmp
sbb
aas
adc
mov
jae
cmpsb
push
push
pop
lahf
add
orl
mov
icebp
dec
inc
xchg
push
fld
xor
lret
pop
mov
and
pop
push
mov
cmpsl
sti
push
mov
xor
mov
cmp
movsl
ret
inc
xchg
mov
mov
in
rep
fcmovu
int3
xchg
repz
mov
and
push
xor
inc
mov
repnz
testl
int3
cmp
add
pop
rorl
fsubrl
dec
cli
push
sbb
mov
shlb
fsubs
push
mov
mov
ja
sub
lret
mov
call
cltd
lcall
add
in
data16
mov
inc
cmp
cltd
push
pop
mov
stc
jg
lahf
add
sbb
sarl
imul
sbb
or
scas
out
shl
sub
fwait
jmp
out
cli
add
mov
imulb
add
xor
test
ja
xchg
lret
idiv
lods
cmp
add
or
lods
mov
mov
int
lods
int
inc
ret
jne
pop
mov
push
push
adc
cltd
mov
addr16
add
jb
dec
adc
clc
ja
jge
ljmp
pop
decb
mov
ret
sbbl
cmp
int3
js
or
fisttps
push
frstor
scas
push
test
sub
cmp
fisubrs
dec
sbb
inc
jge
icebp
imul
negl
pop
mov
nop
mov
fwait
push
leave
inc
data16
adc
mov
cwtl
ret
adc
repz
loopne
or
pusha
and
or
ror
shll
xchg
sub
jnp
push
mov
insl
out
outsl
jg
icebp
fnstcw
addl
ds
sbbb
cli
mov
push
aaa
stos
lcall
push
push
dec
mov
jmp
gs
sbb
add
cltd
jno
mov
mov
cltd
in
jle
xchg
inc
loop
jae
imul
mov
inc
in
mov
pop
jae
movsb
pusha
push
stos
and
mov
fldenv
sub
sub
scas
and
jns
pop
lcall
and
popf
xchg
xor
icebp
jle
adcb
jp
lods
jecxz,pt
cmp
sarb
mov
bound
lret
ja
jp
fdivs
iret
pop
cmc
sbb
call
mov
mov
mov
xlat
shl
xor
nop
lods
mov
dec
lcall
cli
call
addb
pop
rorb
movsl
cmp
push
lret
pop
imul
sbb
lcall
lea
inc
scas
pop
test
pop
pushf
pop
pop
insb
and
pop
sti
mov
xchg
sub
popa
inc
shrl
jecxz
jae
and
hlt
lods
pop
mov
rcl
divl
push
dec
adc
call
cmpb
pop
and
je
mov
mov
sbb
stc
iret
data16
outsb
in
repnz
xchg
sub
xor
and
js,pt
and
push
js
mov
pop
outsl
inc
cmc
jbe
push
or
sub
add
mov
dec
stc
sbb
popa
stos
clc
xchg
stc
xchg
and
dec
cs
jae
arpl
mov
test
xchg
lret
sbb
mov
cmp
stos
mov
shll
inc
push
mov
aaa
roll
dec
jle
test
rolb
jb
sbbb
mov
mov
icebp
fidivrl
lods
in
sti
xchg
mov
notl
cmp
vmwrite
cmc
dec
imul
jno
lret
and
sbb
cmp
mov
scas
push
cld
hlt
dec
mov
fimull
push
shl
mov
xor
sbb
jno
cmc
int
bnd
cmp
lcall
jp
jmp
nop
sbb
fiadds
dec
xchg
add
jmp
cmp
mov
mov
sbb
add
into
and
stos
inc
insb
data16
in
fstl
addb
hlt
cs
mov
shrb
mov
imul
in
pushf
out
movsl
insl
push
mov
xlat
jae
popa
repz
dec
jb
mov
leave
hlt
divb
mov
shll
sbb
adc
mov
dec
cmp
iret
out
fbld
aad
or
mov
dec
ja
ja
arpl
xchg
mov
xor
mov
inc
dec
in
out
sub
fbstp
xlat
mov
sbb
xchg
cmp
push
scas
in
lret
mov
jl
add
imul
insl
negb
add
pop
jp
xchg
pop
cmp
cmp
or
orl
mov
dec
push
cltd
test
adc
rcll
xor
je
sti
mov
mov
mov
shlb
test
mov
jmp
mov
xchg
aas
inc
aas
inc
stos
test
int3
ret
aaa
scas
cmp
test
push
cmp
adc
fisubrl
aaa
and
ljmp
mov
mov
pop
xchg
mov
test
pshufw
je
pop
add
icebp
rcr
cmpsb
add
mov
inc
xor
mov
lods
cmc
pop
js
in
dec
nop
sub
mov
cmp
mov
xor
loope
jecxz
xacquire
stos
inc
and
cmp
xchg
shlb
mov
paddusw
sbb
ds
movsb
adc
jl
fwait
jecxz
jl
adc
rcr
mov
jecxz
add
and
adcl
xor
and
divb
mov
xor
xor
into
loope
inc
add
repz
pop
mov
in
xor
das
sbb
push
insl
add
dec
jl
mov
das
adc
lods
int3
cmp
imul
out
xorps
xchg
lretw
pop
push
xchg
sbbb
test
push
cltd
mov
cld
push
cmpsl
mov
cs
xor
in
or
mov
ret
push
dec
jnp
arpl
mov
ss
lea
push
mov
xchg
je
and
jno
or
cltd
add
adc
je
and
js
add
mov
inc
pop
or
xchg
out
push
js
fwait
addb
inc
mov
das
fadd
push
cmp
pop
lods
dec
pop
arpl
loop
sahf
cmp
test
cs
fstpl
adc
outsb
push
push
imul
cmp
fcmovu
out
mov
push
hlt
mov
jecxz
in
add
pushf
add
jae
pop
repz
xchg
scas
mov
arpl
pop
mov
std
loop
fcmovbe
imul
mul
jns
xor
jecxz
fwait
sahf
dec
mov
loope
scas
and
sbb
enter
push
cmp
jae
jecxz
ret
pop
add
std
outsl
cltd
cmpsb
repnz
mov
std
aaa
mov
inc
in
add
fsubp
lahf
lods
in
outsl
mov
jns
in
repz
and
sbb
es
or
pop
call
insl
pop
cs
icebp
mov
push
insl
jns
mov
fcoml
mov
pop
imul
dec
push
jecxz
xor
pop
xor
outsl
and
test
ret
sti
adc
leave
lea
fisubs
sub
aad
loopne
sarl
add
jae
jg
jp
xchg
cmc
outsb
into
lods
add
inc
xlat
or
out
std
jbe
out
cmp
xchg
sbbb
jg
popf
xchg
sub
xor
outsl
loope
insb
in
xor
cmp
pop
push
icebp
jl
xor
into
cbtw
cmp
push
in
dec
imul
pop
test
xor
insb
hlt
rcrb
insb
xor
xchg
bound
test
cmc
arpl
cs
push
out
inc
xchg
incb
movsl
and
pop
mov
adc
mov
jns
pop
push
cmpsb
addl
add
in
lock
call
sbb
push
dec
int3
inc
movsl
cwtl
jo
sahf
imul
dec
xchg
cmc
nop
xor
ret
and
movb
fidivl
les
mov
lahf
fbstp
lret
sub
aaa
int
rep
xlat
fwait
gs
shrl
repz
out
mov
inc
into
xchg
xor
addr16
sti
ja
gs
lods
adc
lret
lahf
aad
push
icebp
add
add
ror
sbb
gs
hlt
and
pop
pop
xchg
mov
cmpsb
push
pusha
sub
xchg
shll
inc
outsl
in
push
mov
sbb
fists
aas
in
xchg
cmp
lret
int
mull
lret
ret
jne
push
mov
inc
or
and
xor
xchg
sbb
das
mov
jo
iret
pop
cltd
movsl
fs
xchg
addr16
mov
in
xchg
lods
aam
ret
ss
xchg
nop
xchg
push
cmpsl
movb
jns
inc
push
aad
dec
mov
nop
mov
call
pop
pop
xchg
imul
mov
lds
xor
cli
inc
xor
push
stos
sbb
jmp
jp
cmovns
in
clc
mov
dec
jle
mov
jge
adc
and
pop
gs
inc
lock
lock
out
dec
lods
inc
mov
dec
stos
stos
scas
xchg
sbb
xor
xor
mov
icebp
jae
loope
jl
ss
lret
das
in
add
clc
jbe
lods
out
das
ljmp
sbb
mov
pop
mov
add
adc
push
dec
inc
jecxz
mov
add
int
xchg
pusha
xchg
xor
cmp
sbb
leave
xor
mov
inc
addb
adc
jbe
ljmp
ljmp
inc
addl
sub
jecxz
inc
sub
stc
xchg
icebp
adc
fisttps
sub
cmpb
fstl
mov
pop
scas
push
cli
icebp
sbb
pop
cmp
adc
test
add
shr
fs
dec
faddp
lahf
ficompl
and
cmp
daa
xor
fisubl
pop
movsb
shl
fcoms
push
call
inc
popf
cmp
fnsave
arpl
test
inc
in
test
dec
ds
cmpl
push
stos
adc
mov
sub
or
cmp
loopne
add
bound
into
dec
leave
cmc
aad
mov
mov
daa
xlat
fsubl
pop
ret
repnz
pop
jbe
cmpb
scas
cmpsb
mov
jg
aad
shrl
and
sub
addr16
out
xor
cmp
sahf
aad
dec
testb
ss
daa
test
inc
std
xlat
cmpsl
mov
cmp
jle
or
jp
popa
adc
xchg
insl
push
stos
push
mov
les
aaa
inc
repz
mov
hlt
mov
lret
sbbl
ljmp
push
pop
jns
inc
pop
pusha
pop
jecxz
scas
call
mov
testl
orb
icebp
push
sub
outsl
push
mov
into
aam
jecxz
xor
fbstp
fdivrl
push
cli
ss
jl
push
jmp
and
rcrb
je
mov
fcmovnu
call
cmpsb
je
repnz
sub
enter
div
loopne
jp
jae
icebp
or
data16
jae
mov
call
int
repz
cmp
xchg
in
jns
inc
int3
icebp
jge
cmpsl
pop
push
or
dec
jle
pushw
cmp
ss
inc
popf
push
xchg
sahf
es
inc
hlt
lret
lcall
jne
daa
dec
mov
rolb
push
lea
mov
jne
xor
icebp
hlt
std
stc
ret
fnstcw
lret
add
xor
mull
sub
mov
test
popf
lcall
xor
jle
pop
sbb
stc
push
arpl
test
sbb
mov
and
or
push
and
ficompl
rcrb
add
dec
lahf
lods
mov
into
daa
fs
xchg
adc
cli
xlat
push
cmpb
fidivs
adcb
xor
and
leave
in
dec
enter
fs
std
lcall
int3
hlt
arpl
outsl
or
push
jns
pop
mov
cs
fsubrl
outsl
roll
mov
and
dec
pop
xchg
mov
dec
add
push
in
lcall
out
lahf
cs
mov
aam
fmull
sub
push
sub
push
adc
es
sub
jns
test
lret
stos
frstor
sahf
jno
lret
push
sbb
pop
and
mov
push
cli
mov
sbb
fdivrs
into
cmp
pushf
xor
push
sbb
mov
add
jnp
dec
mov
mov
push
fdivrl
loope
sub
cmp
mov
mov
cmpl
inc
xor
fwait
lret
shlb
push
popa
stos
inc
sbb
je
cwtl
jle
sbb
jno
movsl
mov
mov
pop
adcl
mov
xchg
stos
mov
xor
mov
dec
lods
lcall
aas
dec
add
test
inc
das
xchg
lods
sbb
sarl
and
jns
jmp
cmpsw
mov
mov
aam
call
arpl
lods
sub
mov
sub
sbb
ja
push
test
loope
pushl
shl
in
xchg
push
cld
cmp
mov
outsl
cld
jns
popf
dec
inc
arpl
mov
test
hlt
jl
leave
das
sbb
jo
mov
mov
cmp
xchg
jmp
cmp
sub
and
out
dec
inc
ds
jae
push
out
test
xor
gs
out
mov
inc
lcall
fcmovnu
mov
lahf
jmp
pusha
push
dec
adc
sbb
lahf
inc
cwtl
inc
push
ljmp
xor
outsb
cmp
mov
push
out
xorb
push
dec
cmpb
jg
int
add
arpl
adc
popa
push
insl
jno
sub
jo
rclb
add
aaa
ss
mov
cmp
pop
aas
mov
dec
jo
rcrb
daa
enter
xchg
cli
or
fidivs
movsl
adc
jo
cmpsb
or
int3
jmp
xor
mov
dec
fnstsw
xchg
loop
inc
push
mov
jb
jno
js
jns
aaa
repz
mov
cltd
cld
cs
pop
insb
cmp
imul
xchg
push
ret
mov
je
mov
cmp
insb
scas
aad
out
jne
mov
mov
stos
cmp
mov
and
mov
xor
add
or
test
add
lods
imul
sbb
scas
and
mov
mov
shr
scas
and
movsl
pop
daa
repnz
test
mov
gs
mov
incl
movsb
push
mov
mov
shlb
int
dec
cld
aaa
push
lea
inc
ja
sub
mov
scas
mov
jmp
stos
xchg
and
out
mov
fisubrs
xor
push
or
pop
pusha
filds
pop
negb
sbb
sar
pop
and
or
loop
push
or
dec
scas
add
je
add
gs
mov
add
jbe
shrl
or
pop
xor
das
out
push
loop
adc
leave
mov
pusha
not
test
into
xor
and
push
jbe
sub
xchg
fcmovnb
xor
ljmp
cld
gs
sub
dec
mov
ljmp
mov
and
and
and
adc
inc
jmp
pushf
push
scas
xchg
lea
pop
inc
movsb
movsb
push
cmp
jne
lcall
push
xchg
leave
testl
jge
aas
mov
stos
sti
mov
popf
sarb
cs
sti
jne
inc
sub
lret
ret
test
cmp
mov
notl
fs
sbb
inc
popf
out
fdivs
cld
imul
test
pop
test
outsb
loopne
enter
jbe
xor
lds
inc
fwait
mov
test
adc
movsb
addr16
inc
jns
push
cmp
mov
mov
mov
mov
lds
ret
cmp
dec
dec
cltd
and
mov
rcrl
loop
sbb
push
pop
cli
test
frstor
lret
clc
ds
lret
xor
sbb
jge
push
pop
testl
xor
mov
pushf
mov
sub
push
jbe
pop
mov
dec
jne
jl
lret
lods
pop
mov
imul
push
push
aas
loop
insb
sahf
leave
cmp
shl
push
mov
lea
xchg
add
jg
fistps
and
pop
ss
jl
outsl
and
cwtl
imul
sub
outsl
loop
jp
push
imul
jb
loopne
or
push
mov
sub
cwtl
or
mov
pop
xor
xchg
jb
les
xor
test
dec
xchg
into
sub
sbb
pop
ret
or
fprem1
mov
pop
jmp
mov
sahf
fdivr
das
pop
sbbl
adc
inc
mov
xor
pop
mov
jbe
mov
push
mov
inc
pop
mov
fwait
andl
xchg
jl
sbbl
lea
bswap
inc
sub
sbb
mulb
inc
mov
xor
in
imul
out
xor
ljmp
jno
fmull
mov
adc
fdivl
ja
cli
pop
mov
xchg
and
dec
add
loop
mov
jg
test
pop
repnz
in
sub
movsl
lret
inc
outsb
leave
out
dec
rorl
repnz
xor
adc
mov
mov
lret
xor
pop
sbb
lret
loopne
jmp
scas
popa
and
ljmp
push
xor
mov
xchg
and
lock
mov
and
push
and
jl
repnz
adc
scas
das
sbbl
cld
movl
xchg
dec
aam
xor
jo
mov
mov
cli
dec
add
jle
push
popf
aas
dec
jge
cmp
les
mov
xor
fmull
std
add
lea
jmp
sbb
push
or
push
mov
push
mov
push
addr16
mov
mov
mov
and
rcl
subb
push
stos
arpl
jge
pop
lds
dec
dec
in
cmp
xchg
arpl
sarl
and
jo
push
add
outsl
mov
arpl
pop
mov
popa
mov
adc
dec
mov
filds
push
mov
out
add
ret
loope
sub
loope
lcall
add
leave
shrl
pusha
nop
loope
mov
xor
js
cmpsb
xchg
addr16
es
xchg
imul
add
and
das
pop
jae
mov
les
jo
pop
int
cli
sub
pop
aas
jg
or
inc
xchg
adc
scas
jno
mov
pop
stos
test
mov
ret
push
cmp
adcb
pop
dec
aas
sbb
lods
fsubrl
icebp
movsb
ret
dec
loopne
jle
mov
mov
ret
sahf
out
sar
sbbb
clc
pushf
mov
sbb
adc
xchg
data16
cmp
imul
or
sti
xor
jno
movb
inc
scas
ljmp
data16
sub
leave
add
cmp
inc
sub
adc
pushf
pop
push
fwait
jecxz
sbb
mov
stc
or
mov
mov
xchg
xor
cmc
jge
mov
pusha
std
repz
pop
sbbb
cmp
mov
adc
mov
jno
sbb
mov
mov
sub
repz
pop
test
out
add
inc
add
icebp
cmc
sub
or
pop
stos
pop
js
push
mov
daa
dec
jg
sub
cmp
mov
sbb
loopne
movsl
xchg
push
into
xchg
pop
nop
les
add
scas
dec
pop
in
sub
enter
gs
ret
sbb
jp
cmp
repz
rol
jmp
or
lock
and
ret
push
adc
pop
and
add
lcall
xor
mov
cmp
xchg
scas
pop
setle
adc
push
hlt
cld
push
aaa
push
sub
cmpsb
cmp
pop
mulb
iret
pop
mov
cmp
cmp
clc
and
push
jecxz
sbb
aad
dec
and
dec
dec
hlt
fcoml
xor
mov
stos
add
jmp
jl
and
pop
test
outsb
mov
hlt
stos
inc
xchg
adc
push
cmp
pop
sbb
inc
adc
jecxz
cld
xchg
pusha
testl
jmp
out
mov
mov
clc
mov
push
pop
int3
dec
adc
leave
shrl
addr16
into
dec
or
mov
sub
enter
xchg
inc
inc
aam
loopne
pushf
fs
lss
testl
inc
fsub
push
pop
int3
cmpsl
enter
or
inc
lods
sub
add
pop
cmp
xor
fwait
xchg
push
pop
and
insb
mov
loop
dec
jne
or
adc
lds
mov
insl
and
push
loope
je
sbb
repz
clc
mov
mov
inc
mov
mov
push
aam
hlt
lds
mov
add
cmp
xor
scas
inc
xor
inc
jns
push
notl
popa
mov
arpl
push
xchg
mov
leave
or
xchg
outsl
sbb
out
sbb
ljmp
xchg
in
or
inc
inc
lock
lret
push
add
aam
pop
cmp
cmp
leave
cmpl
sti
loope
lea
loope
jmp
mov
aas
mov
add
ja
test
gs
int3
xchg
ja
mov
aam
lock
dec
xchg
jmp
mov
repz
dec
shll
popa
jnp
mov
and
cli
out
shlb
xor
call
inc
sub
jg
lods
rolb
xchg
cmp
and
xchg
std
mov
std
push
adc
test
loope
loop
mov
cmp
ja
fimull
jle
cltd
jbe
mov
sub
sub
push
loope
cmp
inc
movsb
jge
loopne
int3
into
pushf
sub
xor
fnstcw
inc
add
cmpsb
loopne
rol
xchg
jae
andb
mov
jle
sub
sarl
out
cs
mov
ja
sbb
addr16
xorb
xlat
xchg
mov
loope
dec
iret
xorl
icebp
data16
add
adc
xor
aas
mov
cmp
aad
jg
mov
in
mov
push
mov
addl
add
push
dec
scas
ret
jne
in
fidivrl
mov
inc
iret
cltd
or
fimull
jecxz
and
sub
outsl
or
das
sub
ficomps
movsl
clc
outsb
pusha
xor
in
push
lret
jg
test
push
mov
hlt
ficomps
jo
mov
and
lret
enter
scas
pop
mov
shlb
lods
les
xlat
dec
hlt
or
pop
cld
leave
shl
mov
sbb
mov
lcall
stc
stos
cmp
add
js
outsb
or
sti
xchg
insb
sub
arpl
arpl
push
ja
and
dec
inc
adc
fistpl
cmp
mov
xlat
test
lods
data16
xor
push
inc
loop
in
or
jg
out
flds
dec
inc
mov
jno
clc
in
clc
push
add
mov
repnz
outsl
add
jo
jecxz
daa
repnz
sub
mov
inc
sub
adc
or
mov
stc
dec
fs
inc
mov
popf
mov
aas
out
lahf
jmp
iret
sbb
pop
xorl
dec
test
adc
stos
jle
mov
int3
sbb
test
stos
enter
xchg
mov
mov
pop
insb
sarb
and
int
push
sbbl
test
movsb
xchg
sti
xchg
mov
cmp
mov
push
sbb
mov
add
js
add
and
filds
lds
push
pop
adc
and
fsubrl
cmpsl
or
mov
mov
fcoms
bound
icebp
sbb
pop
inc
test
dec
in
outsb
dec
roll
lret
adc
mov
aad
cltd
mov
add
xchg
xlat
fcomps
or
test
or
push
jmp
nop
test
lea
rclb
dec
cwtl
mov
push
fnstenv
dec
jns
inc
xchg
pop
cltd
push
dec
arpl
sub
decb
jo
movsl
repnz
out
in
lret
aas
mov
push
arpl
sahf
fildll
push
stos
fcompl
fcoms
popf
fisubrl
push
rolb
outsl
out
into
pop
popa
xor
add
dec
xchg
inc
mov
std
jg
dec
or
push
mov
mov
mov
loope
xor
jno
enter
incl
mov
sub
loop
cli
fisttps
lahf
jb
sub
cmpsb
inc
rorb
iret
xor
sub
into
js
in
mov
xlat
dec
divb
js
pop
cwtl
outsl
mov
std
fiadds
mov
insb
jp
aad
rcr
fcmovnb
ljmp
test
fdiv
cmp
aam
bound
dec
lcall
push
sahf
dec
mov
jmp
sub
inc
test
lock
or
xchg
push
sub
bound
aas
pusha
sub
and
sbb
fsubs
jg
or
push
nop
cltd
xchg
jne
int3
dec
arpl
cwtl
sahf
add
push
jmp
jbe
xchg
cmc
mov
dec
mov
push
xor
push
ja
mov
mov
cli
dec
and
pusha
lahf
icebp
fsts
lds
xchg
nop
xchg
sub
add
fs
aaa
int3
or
dec
in
adc
std
jbe
test
fsts
add
pop
pop
lcall
test
push
mov
loope
adc
push
mov
cmpsb
dec
pop
push
into
mov
lret
cltd
fsubrl
and
in
enter
in
imul
shll
push
xlat
stc
addl
mov
in
stos
xchg
sub
ds
ret
imul
jb
sub
in
mov
stc
test
push
test
jg
jg
imul
inc
dec
and
cltd
push
xchg
inc
bound
dec
int3
in
ret
test
insb
jno
xor
pop
lods
pop
cli
mov
adc
dec
mov
mov
es
xor
cmp
enter
loop
fcmovb
jmp
fsubrs
and
inc
cmp
popa
cld
sub
ret
gs
daa
inc
xor
lods
test
dec
fmull
adc
add
shll
and
mov
repz
mov
mov
xorl
add
mov
xor
jl
into
push
push
push
xchg
adc
ficomps
inc
or
in
int3
dec
nop
aad
xor
or
adc
and
pop
loopne
fstps
imul
ds
jp
cli
dec
mov
mov
movsl
shll
dec
aaa
pop
fstpt
dec
out
shrl
lahf
xchg
dec
pop
mov
or
daa
jo
jmp
cmp
mov
movsl
ja
lahf
sbb
xor
fnsave
ffreep
fld1
or
xor
sbb
in
jg
sub
xor
sbb
pop
cmp
in
mov
insb
orb
lock
adc
sti
push
sub
iret
call
lods
iret
mov
std
push
xchg
imul
sbb
push
sbb
gs
test
mov
in
mov
rorb
push
mov
clc
lret
jp
mov
out
je
sbb
fcoms
fsts
out
insl
sbb
xor
addr16
clc
mov
cmp
loope
out
xchg
ret
ret
mov
fs
push
pop
iret
cmp
icebp
in
fnstcw
or
out
cmp
shlb
inc
scas
pop
pop
adc
sahf
mov
dec
pop
sbb
notb
and
xchg
in
push
popf
imul
push
push
loope
nop
and
and
pushf
lahf
sbb
xchg
sbb
add
dec
add
clts
mov
push
aaa
and
jbe
ss
xor
pop
xchg
outsb
sub
jecxz
loopne
aaa
cmp
or
push
and
push
xlat
mov
xor
cmp
dec
js
sbb
lcall
insl
pop
push
je
out
outsb
aaa
xchg
cltd
xor
fiadds
mov
xor
aad
add
inc
xchg
aam
int
ja
mov
add
jb
mov
fldl
imul
fsts
xchg
sti
imul
mov
mov
xchg
and
addb
out
sub
cmp
mov
xchg
or
jmp
mov
imul
or
fcoml
mov
lea
icebp
xor
inc
inc
into
cmp
loope
lock
daa
push
subl
sbb
cmc
adc
fs
sub
adc
stc
fldcw
stos
push
lock
lcall
mov
push
cmp
sub
mov
push
out
adc
cmp
jns
push
cmp
repz
mov
mov
nop
lods
lods
dec
mov
sbb
fwait
out
ljmp
popf
icebp
cmpl
adc
je
or
or
or
out
xor
cmpsb
push
adc
fists
sbb
adc
xchg
data16
lods
push
clc
shrb
mov
mov
cltd
mov
idivb
jmp
jp
dec
push
pop
pop
mov
sbb
div
or
push
inc
sub
test
lods
sub
add
xchg
fcoms
lods
mov
push
push
push
jp
bound
fsubr
inc
mov
xlat
push
mov
adc
xor
jae
js
mov
pop
into
iret
dec
mov
or
and
scas
xlat
xor
cmpsl
or
test
sub
mov
loope
or
fcmove
bound
and
outsl
push
icebp
loopne
and
sbb
fucomip
push
dec
int
scas
mov
ja
stos
es
lret
addr16
mov
fcoms
pop
xchg
call
aam
pop
test
gs
mov
iret
dec
mov
fldt
jg
mov
pop
lea
adc
idivb
mov
daa
xchg
faddl
sbb
ret
dec
xor
inc
fbld
inc
std
pop
outsl
or
xchg
insb
int
or
push
jne
addr16
jnp
out
xor
incb
jg
pusha
pop
lea
xor
outsl
bound
xchg
sti
and
xor
mov
mov
xchg
adc
sbb
std
lods
repz
nop
cmp
sbb
in
jecxz
rcrl
sbb
push
fs
mov
mov
or
mov
clc
mov
ret
jge
mov
daa
and
push
xchg
repz
mov
and
sbbl
int
scas
cltd
push
loopne
lds
add
pop
addl
cwtl
mov
push
xor
int3
jo
stos
push
inc
dec
nop
mov
lret
enter
sub
ja
ljmp
sbb
lods
ja
lea
imul
jo
std
int3
mov
push
cmp
mov
xor
in
or
test
pop
inc
lcall
mov
sbb
push
scas
nop
cs
popa
xor
cwtl
jnp
xor
rol
lahf
or
dec
or
rcl
pop
and
cmpl
in
lcall
xor
add
outsb
add
leave
mov
in
arpl
lret
or
mov
mov
xor
je
inc
inc
icebp
shlb
rcl
xchg
rol
add
cwtl
cli
sbb
cmp
adc
dec
add
cmpsl
cld
loop
or
inc
loop
jge
ja
shrl
adc
mov
sbb
imul
mov
sub
pushf
outsl
clc
xchg
cmpsb
mov
xchg
mov
movsb
std
jp
icebp
adc
and
xchg
push
fidivs
fdivs
popa
nop
xchg
sub
jg
cmp
sti
cmc
cmp
add
fsqrt
cmp
and
mov
aam
mov
sbb
aad
xchg
lahf
dec
adc
jnp
cld
popf
in
mov
popf
scas
je
lds
leave
mov
imul
mov
inc
sub
mov
or
adcb
jne
and
test
xor
lods
mov
and
xchg
lret
jg
mov
lret
jo
imul
xor
ficompl
sbb
bound
aaa
call
dec
push
dec
push
push
fs
pop
xchg
cwtl
fidivl
ja
adc
add
ret
cmpl
mov
in
mov
jmp
or
out
les
dec
outsb
xor
sbb
mov
mov
or
jmp
sbb
dec
jo
add
cltd
icebp
bound
dec
push
sbb
jbe
adc
in
fstl
or
loopne
aam
popf
fldt
addb
sbb
enter
lock
mov
shlb
cmpsl
xchg
adc
stos
int3
cmp
mov
lods
xchg
imul
add
iret
sbb
fists
xchg
adc
adc
jl
jle
inc
and
xchg
mov
ss
cltd
subl
clc
or
push
sub
jne
mov
xchg
cltd
ret
insb
cmp
sub
or
or
hlt
or
inc
out
scas
je
fsubl
repnz
arpl
insb
test
jo
lahf
rcrb
inc
mov
inc
movsb
cmpsb
movsl
nop
mov
insl
cltd
jmp
dec
sbb
and
inc
mov
mov
sub
in
sub
ret
imul
cmp
imul
or
and
mov
mov
lcall
sahf
xor
mov
jmp
pop
imul
and
pop
repz
mov
xor
mov
or
mov
jne
ret
fmuls
cmp
cmc
inc
push
sbb
push
xchg
adc
mov
pop
out
pop
movsl
dec
sub
add
sub
dec
into
and
jo
sbb
jno
fwait
popf
and
adc
flds
mov
fsubrs
pop
and
out
lds
mov
fsubl
lea
pop
add
repz
mov
rorb
lods
lds
mov
inc
mov
subb
mov
mov
in
int3
stos
mov
inc
xor
dec
xchg
test
imul
jbe
jno
in
je
mov
push
or
testb
cli
pop
inc
push
jbe
loop
and
mov
jae
lahf
jmp
ss
push
test
clc
ficoml
mov
adc
cltd
mov
into
int
xor
nop
xor
push
repz
out
sub
int
inc
jmp
iret
test
test
out
push
sbb
out
data16
pushf
pop
out
out
loope
repnz
aas
mov
mov
sub
xchg
pop
dec
dec
mov
xchg
enter
jne
int
xchg
jne
cmpsl
sub
xor
dec
out
push
add
push
xor
fnstenv
in
jl
mov
daa
sbbl
aaa
popl
dec
adc
cltd
jecxz
adc
or
sti
ret
pop
mov
jns
lea
addl
mov
pop
es
ljmp
imull
xor
jl
pmaxub
aaa
xor
imul
xor
push
or
xor
in
adc
sub
add
xchg
pop
push
pop
push
jo
icebp
jle
sub
push
insb
aas
aad
data16
loopne
sbb
lds
lds
mov
fcmovb
outsl
subb
push
xor
mov
lret
pop
mov
fsubr
enter
xor
push
inc
outsb
shll
jo
int
lea
inc
lods
movsb
xchg
push
add
and
mov
fdiv
out
adc
lods
jg
rorb
sbb
lock
and
push
shl
iret
out
adc
jl
bound
push
cli
mov
pop
pop
negb
add
and
lods
rolb
hlt
dec
adc
xorl
orb
push
inc
pop
sbb
push
push
mov
xchg
popl
push
pop
inc
fucomi
or
adc
add
push
xor
not
dec
lds
mov
mov
pop
dec
xabort
fmull
adc
push
rorb
push
sbb
pop
movsl
add
movsb
shll
in
cmp
shl
cmp
sub
inc
dec
jl
mov
call
nop
loopne
outsl
inc
lcall
cmpsb
pop
shr
nop
jb
push
imul
test
stos
lea
in
cli
jmp
orl
cmp
mov
sbb
icebp
mov
cmp
addr16
mov
test
jmp
mov
xchg
rcrl
adc
inc
idiv
leave
jmp
xchg
jae
sbb
popa
stos
loopne
jo
push
jmp
dec
fidivl
movsb
stos
out
stc
ss
sbb
jns
cli
shl
imul
pusha
jb
test
popl
inc
cmp
subb
dec
loope
fsub
jg
das
jp
cmp
cmpsb
sbb
cmp
pop
xlat
adc
iret
add
mov
add
cmp
jg
int
dec
ljmp
mov
dec
imul
rcr
inc
pushf
mov
cs
sub
adc
jns
adc
mov
xchg
movhps
mov
sti
orl
mov
popa
lods
xor
int
cltd
mov
and
fdivrl
push
in
inc
test
into
xchg
mov
popf
pop
roll
mov
add
outsb
sbb
cmp
out
test
sbb
shrl
lea
ja
sub
inc
add
mov
sbb
pushf
and
ljmp
and
push
and
ficompl
jecxz
ss
aam
test
jl
jmp
test
mov
cmp
xlat
push
and
test
pop
xor
cltd
mov
adc
jmp
shl
ss
dec
mov
cmpsb
push
test
dec
in
pop
mov
xor
mov
mov
subl
push
shll
xor
leave
or
popa
add
daa
add
pushf
fmuls
jmp
and
xchg
out
fisubrs
sbb
push
rorb
mov
lahf
and
sbb
adc
out
push
inc
push
std
lret
inc
mov
or
and
mov
dec
mov
out
cltd
cmp
jmp
sbb
xor
notb
inc
push
fwait
add
divb
ds
xchg
cld
lcall
loope
outsl
mov
nop
lods
pop
js
insb
adc
jno
sbb
sub
aam
xor
arpl
jg
push
fbld
fidivrs
mov
fildl
aam
inc
out
ret
push
push
xlat
sbb
cwtl
jp
jp
mov
xchg
pop
pop
jbe
xor
sbb
loop
ret
test
xor
pop
or
pop
mov
sbb
inc
loopne
ficoml
notl
xchg
lahf
push
cmp
jg
ljmp
sbb
pop
mov
lock
lahf
lret
in
out
lea
xchg
pop
jg
dec
and
dec
lds
adc
fisubs
or
cmpsb
jno
ljmp
push
or
push
lcall
jle
xor
mul
or
popf
fcmovnb
jl
add
dec
cmpsb
call
cmp
inc
mov
dec
push
mov
mov
push
rcrl
xor
lcall
sbb
fists
imul
test
test
mov
inc
cltd
mov
cmpb
std
push
lret
in
pop
add
dec
scas
inc
mov
stos
cmp
adc
sbb
hlt
mov
and
jnp
push
push
int3
add
sbb
inc
mov
decb
cld
xor
mov
repnz
enter
cs
push
out
lcall
xchg
mov
and
scas
fmulp
push
fs
jle
andl
inc
pop
lahf
fadds
add
daa
xlat
push
sub
pushf
or
outsb
je
fidivs
je
sbb
scas
mov
lret
jle
int
jmp
stos
add
mov
loop
je
out
jno
test
push
and
bound
iret
js
lods
fdivrs
mov
xor
stos
adc
test
popa
cmpsl
adc
push
jo
xor
sbb
mov
and
and
jmp
mov
lods
daa
push
iret
leave
or
aam
mov
retw
fcom
jbe
sarb
mov
jl
pop
lock
add
push
mov
or
and
loope
insl
dec
pop
cmp
cltd
ja
lahf
mov
aas
xor
mov
out
adc
cmp
add
gs
mov
and
pop
sub
mov
mov
dec
sub
popf
pushf
inc
test
into
xchg
icebp
int
in
adc
push
sbb
push
addl
pop
inc
sub
mov
push
sub
pop
sub
inc
jne
sub
push
es
and
fnsave
js
stos
push
xchg
or
scas
cli
cmp
add
lret
mov
stos
test
mov
push
and
cld
and
outsb
testb
push
rol
js
pushl
mov
mov
xchg
hlt
stc
sbb
clc
dec
xor
dec
in
dec
mov
push
pop
gs
mov
addr16
rclb
lds
cmpsl
adc
and
std
jp
jo
call
jge
loopne
pop
jnp
dec
adc
test
test
mov
xlat
push
fld
xchg
jb
inc
and
outsb
xor
or
gs
adc
sub
sbb
cmp
xor
sbb
cwtl
fisttpll
xlat
lods
xchg
loopne
and
dec
sbb
rol
cmpsb
cmp
mov
cwtl
mov
sbb
lret
mov
pop
add
adc
leave
ss
arpl
or
mov
insb
lahf
jno
fistpll
inc
ds
pop
rcrl
add
add
add
push
scas
inc
adc
push
mov
inc
add
aam
mov
popa
enter
sti
pushf
dec
je
fldenv
test
mov
imul
stos
out
fs
sub
adcb
add
int
mov
pop
jo
pop
adc
mov
lds
in
outsl
addr16
pop
sub
and
lahf
or
xchg
pop
xchg
sti
adc
in
jp
cmp
push
ret
inc
mov
pop
or
hlt
or
mov
sbb
ss
pop
daa
push
xchg
and
call
cli
pop
into
jmp
test
pop
dec
sub
mov
inc
ret
xchg
loop
jecxz
aad
push
xchg
inc
cld
or
rclb
negl
clc
sbb
push
push
xor
js
fistpl
test
gs
rorb
mov
mov
dec
pop
lcall
out
cmpsl
mov
pop
cwtl
add
pop
int
loope
int3
xchg
leave
bound
fsubrl
push
lock
mov
popa
push
call
out
mov
mov
shrl
jb
popa
jns
cmp
mov
xchg
out
lods
lea
xor
fildl
push
dec
fs
xchg
xchg
lcall
les
cmp
and
cmp
adc
and
mov
xor
call
mulb
scas
call
push
mul
out
mov
push
into
outsl
xchg
inc
lahf
cs
repnz
scas
jge
addr16
lcall
xchg
xor
cwtl
push
sbb
push
mov
mov
sbb
pop
jl
mov
push
mov
inc
stc
cld
loopne
cltd
inc
fiaddl
add
int
mov
pop
cmc
push
or
nop
push
push
scas
outsb
jmp
and
jl
mov
add
mov
call
jecxz
fsts
cwtl
lods
jmp
out
ret
out
pop
xor
notb
adc
andl
mov
sub
sub
pop
or
cmpl
sbb
sbb
cmpsl
nop
mov
std
adc
mov
jnp
scas
mov
sbb
xor
in
pop
ljmp
sub
mov
lods
pop
jge
ficoms
xor
xchg
sub
rcr
xchg
jl
and
rcl
insl
push
mov
push
and
inc
jg
cltd
incb
xchg
and
mov
fisubrs
shr
pop
and
mov
arpl
addr16
mov
hlt
test
imul
mov
mov
mov
cmpsb
fimuls
mov
and
outsl
cmp
pop
test
jno
enter
cmpsb
int3
dec
jno
or
orl
push
pop
ss
shr
and
cltd
cld
push
enter
xchg
xor
and
and
mov
mov
cmp
sub
mov
mov
lods
in
cltd
push
fwait
add
push
mov
jmp
loopne
sub
cld
clc
push
mov
xor
outsb
mov
ret
jb
sbb
push
push
test
sbb
push
cld
mov
mov
pop
mov
dec
in
repz
mov
push
push
test
mov
popa
addr16
arpl
adc
add
mull
shrl
push
xor
out
loopne
push
sbb
pushf
dec
enter
jnp
sub
fistl
jmp
shll
lret
imul
or
sub
xor
aad
adc
add
mov
cs
iret
jge
popa
addb
ds
daa
jmp
mov
push
jne
sbb
sub
jmp
test
pop
sub
ljmp
inc
adc
popl
mov
mov
lahf
and
bound
flds
rcr
mov
adc
nop
mov
add
test
test
add
sahf
pop
in
add
mov
xor
xchg
or
aas
lods
push
dec
inc
push
pop
popf
nop
xor
mov
mov
pop
mov
repnz
jmp
out
sbb
push
rorb
pusha
jl
in
inc
or
loop
add
jb
rcrl
mov
pcmpgtw
sbb
imul
cld
sahf
sbb
shrl
into
add
mov
mov
mov
bound
push
pop
fisttpl
dec
sbb
xchg
dec
dec
sarb
dec
into
push
pop
push
jno
jg
adc
push
lahf
adc
imul
hlt
orl
addr16
test
rcll
pop
jno
rolb
mov
add
pushf
ja
mov
inc
mov
int
mov
jmp
int3
and
gs
add
push
bswap
loope
pop
clc
dec
sub
push
bound
and
lods
sub
daa
loopne
pop
js
test
outsb
mov
fstpt
adc
push
push
add
push
in
push
adc
xor
popf
push
mov
nop
push
cmpsb
cmp
mov
fcmovne
lcall
lcall
mov
jbe
sbb
inc
es
push
lods
inc
ja
test
scas
call
ja
ficoml
adc
mov
or
sti
push
rcrl
xchg
pop
lahf
mov
push
push
dec
jbe
add
push
inc
dec
push
pop
outsl
inc
mov
pusha
sub
mov
clc
lret
dec
test
or
pop
mov
mov
sub
sub
cli
std
fcomp
pop
mov
mov
cmc
je
in
jno
std
dec
jle
call
adc
push
cli
push
lea
xchg
sub
pop
dec
sub
mov
push
xchg
sbb
sub
mov
bound
mov
clc
push
jcxz
push
call
xor
enter
mov
jle
jmp
daa
icebp
les
outsl
ljmp
sub
inc
mov
outsb
sbb
dec
sub
aaa
push
mov
insl
clc
mov
pop
mov
inc
inc
xchg
ret
sahf
xchg
movsb
xchg
fldenv
jge
push
jno
mov
xchg
sbb
in
outsb
out
jp
xor
add
push
adc
xchg
mov
adc
xchg
loope
lret
dec
push
cmpsb
in
sbb
js
lds
les
out
jg
sbb
inc
adc
mov
das
pop
push
cmp
js
xor
loop
xor
adc
sbb
aam
cmpsb
scas
mov
fldcw
fcom
sbb
fcom
in
mov
jne
push
fstpt
push
cwtl
pop
sub
cwtl
mov
pop
and
test
push
movsb
adc
pop
push
push
enter
arpl
jl
movsb
cmpsb
dec
std
jg
xor
pop
or
dec
cmpsl
mov
dec
or
or
in
lret
out
fimull
cmpsb
pusha
xchg
pop
or
jecxz
mov
out
int
jae
std
push
sbb
daa
add
fs
ljmp
std
ja
xchg
test
int
scas
inc
push
xor
xchg
fiadds
push
inc
and
sbbl
cmp
xchg
pop
aad
popf
das
mov
jbe
ljmp
sahf
mulb
fxch
nop
or
xchg
sbb
mov
imul
bound
or
scas
jecxz
push
pop
add
inc
jae
cld
dec
in
jns
adc
stos
fs
shlb
sbb
sbb
lret
inc
xrelease
adc
das
subl
cltd
fisttps
ljmp
dec
dec
jnp
inc
or
fldenv
mov
sti
sub
push
sbbb
push
jne
mov
cmp
xchg
imul
xchg
adc
xchg
add
adc
ja
jl
or
xchg
mov
lea
pop
sbb
and
push
xchg
setne
xchg
mov
pop
push
xchg
mov
inc
out
aad
xchg
cmc
sbb
rcll
lock
stc
push
push
fstp
out
dec
xchg
lock
rol
sahf
insl
addl
cmp
pop
inc
cmp
arpl
xor
mov
push
aam
pop
xor
xlat
xchg
and
mov
cmpsl
add
mov
cmp
xor
dec
imul
int3
lock
rcll
cmpsl
loop
dec
add
xlat
lcall
les
mov
dec
cmpb
cmp
dec
pop
or
xchg
inc
lahf
pop
mov
or
fwait
in
iret
inc
sahf
jns
ljmp
repz
lret
jg
pop
jp
and
mov
in
or
ret
adcl
arpl
pusha
hlt
xchg
lret
cmpl
jle
dec
popa
lock
orl
icebp
sar
jae
rorb
scas
and
push
jns
inc
mov
pop
ret
rolb
pop
cmpsl
adc
cmp
push
push
out
mov
stc
ljmp
mov
stos
mov
shlb
fwait
xor
arpl
jge
int3
loope
jle
adc
xchg
mov
fs
xchg
dec
sbb
lcall
adc
ficoml
addr16
jle
pop
shrl
adc
add
or
fwait
add
mov
jno
fidivrs
imul
repz
push
and
into
xchg
push
pop
mov
mov
mov
pop
xor
jecxz
pusha
test
jl
and
xchg
cmp
xchg
aad
inc
in
test
test
std
xchg
sbb
jne
pushf
imul
fcoml
and
rclb
adc
xchg
js
xor
lods
mov
cmp
movsb
or
pop
icebp
mov
rolb
pop
mov
jb
ret
push
data16
sbb
mov
pusha
nop
int
pop
clc
sub
xchg
movsl
sar
push
mov
repz
std
mov
insb
out
mov
addr16
scas
sbbl
lea
scas
subb
ss
into
push
xchg
divl
std
xor
fcompl
orl
cmc
daa
sahf
sub
and
push
sbb
sub
ljmp
sbb
dec
dec
sar
repnz
or
inc
call
adc
loopne
sbb
jecxz
jae
pop
scas
mov
cmp
enter
pop
out
mov
rcll
rolb
pop
rolb
call
subb
mov
cmp
sbb
mov
mov
ret
xchg
test
or
test
sbb
js
mov
andb
mov
add
mov
jl
pop
lret
adc
ja
stc
xchg
in
inc
or
addb
and
mov
xchg
dec
aaa
add
ljmp
and
mov
mov
mov
fmull
daa
aad
mov
dec
imul
mov
movsb
add
pop
popa
decb
test
push
or
xchg
cs
mulb
rcll
mov
mov
dec
mov
fisubrl
nop
les
push
aas
pop
push
negl
mov
or
fidivl
in
jns
repz
xor
leave
xchg
jmp
cmpsl
into
add
sbb
mov
or
push
mov
mov
lods
mov
sub
xchg
sti
aas
lcall
mov
test
jg
test
push
or
xchg
mov
inc
mov
pop
loopne
fisttpll
push
xchg
mov
jmp
popa
hlt
mov
cmp
xorb
in
push
outsl
mov
sbb
aam
cld
dec
stos
lcall
cmpb
out
and
out
cmpsb
add
std
push
ja
clc
bound
lods
push
pushf
lahf
mov
dec
iret
mov
lods
fidivl
mov
cld
pop
sub
xor
dec
inc
data16
cmc
sarl
loope
sar
mov
or
mov
repz
sbb
push
mov
pop
adc
rorl
daa
pop
jae
push
addr16
es
lcall
jne
sbb
jns
rclb
leave
jno
in
stos
addr16
dec
jb
pop
cmpsb
andl
and
sbb
and
cli
mov
add
jmp
call
fdivrs
mov
and
test
outsb
adc
inc
push
or
gs
inc
mov
or
aas
hlt
dec
adc
fs
outsl
mov
cmp
push
mov
lcall
or
int3
or
jo
mov
inc
xchg
notl
sub
add
sub
push
cltd
fisubl
roll
pop
out
dec
lret
pusha
sbb
push
addr16
cmpsb
xorl
pop
xchg
imul
cmp
int
xchg
aaa
cmp
aam
push
or
push
adc
mov
add
fistl
and
inc
or
xchg
enter
sarb
fistpll
add
js
jb
jns
inc
shl
pop
jae
aaa
inc
push
mov
adc
xlat
add
mov
jo
dec
push
ret
jnp
inc
jns
je
cli
rcl
jnp
jns
std
sbb
shrl
add
lea
repnz
push
xor
bound
ret
ret
xor
mov
cmp
or
xchg
dec
jl
xorl
shll
dec
pop
cmp
pop
xchg
sub
sbb
adc
push
jae
aas
dec
xchg
sub
push
ss
sbb
es
lods
pop
rcll
popf
movsl
add
cmp
mov
adc
in
maskmovq
enter
fidivrs
cld
es
ficomps
dec
lods
test
bound
std
subl
test
hlt
or
push
add
je
lret
iret
in
jbe
dec
enter
das
or
or
mov
gs
dec
mov
je
adc
jo
testb
cmp
shrb
xor
fs
inc
pop
negl
push
or
sub
fists
ficomps
sahf
movsl
cs
fcoms
mov
lahf
mov
mov
insb
lds
push
mov
sbb
push
fiaddl
dec
gs
push
gs
adcb
sbb
jp
cmpsl
ret
or
clc
cmpsl
xchg
sbb
loopne
dec
inc
inc
xor
in
push
pop
out
xchg
ret
pushf
movsl
push
cwtl
pop
ljmp
adc
scas
mov
pop
dec
and
popf
adc
jp
jecxz
adc
addl
and
or
add
mov
fwait
loope
xchg
ja
in
arpl
mov
dec
scas
jmp
outsb
test
inc
sarl
xor
out
sbb
mov
clc
or
cmc
insl
pop
cmp
jmp
out
inc
xchg
push
xchg
mov
mov
jne
stos
sbb
xchg
test
mov
jecxz
inc
incb
je
repz
mov
std
sub
cmpl
test
or
pushl
mov
jle
arpl
call
and
mov
es
or
mov
xchg
mov
movsl
or
or
and
mov
daa
rolb
fstp
aad
mov
lret
aad
mov
mov
stc
dec
in
jae
rorl
aaa
pop
enter
xor
pop
dec
lods
inc
xchg
les
mov
fs
xor
jae
sbb
dec
mov
lahf
mov
insb
xchg
sub
inc
dec
pop
add
inc
mov
stos
into
daa
daa
repnz
mov
inc
scas
jp
jo
pop
lods
scas
jmp
add
mov
lret
mov
xchg
dec
push
mov
adc
sbbb
cmpsl
mov
xchg
inc
sub
popw
dec
hlt
add
in
or
mov
dec
mov
stos
add
inc
rcrl
cld
pop
aad
mov
xor
dec
ds
xchg
inc
cli
aaa
or
orl
daa
mov
jecxz
push
inc
mov
rorl
int3
in
push
movb
daa
fldcw
hlt
mov
mov
inc
mov
and
iret
jns
xchg
cmp
jl
mov
add
mov
sahf
test
pushf
lods
adc
dec
xlat
pop
sar
fsubs
lea
imul
push
jbe
popf
jne
orb
push
adc
mov
mov
fistps
lret
out
test
jmp
mov
int
out
loope
ss
and
loopne
cmp
mov
idivb
mov
and
sbb
aad
sbb
pop
imul
and
stos
arpl
int3
subb
or
add
lods
fldcw
sbbb
ret
xchg
add
xor
fisttps
mov
sbb
inc
mov
fsubrl
or
sub
jo
fisubrl
jl
orb
pop
mov
pop
fwait
sbb
push
mov
cmpsl
in
or
sub
rcrb
inc
imul
sarl
inc
sbb
or
xor
xchg
jmp
jnp
sub
mov
inc
push
icebp
xor
ja
mov
cwtl
mov
stos
mov
sbb
pop
mov
dec
lds
je
xchg
test
add
sub
aad
lret
cmp
insb
shrb
dec
dec
imul
sub
push
inc
mov
test
imul
push
mov
add
cmpsl
testb
jno
jae
dec
sbb
es
pop
mov
fadds
sub
xor
popf
std
adc
push
in
std
outsb
shll
mov
test
or
pop
test
sub
out
in
adc
call
jbe
pop
dec
dec
test
dec
xchg
mov
pop
int3
inc
fldenv
ds
scas
fimuls
lahf
ret
leave
lods
jp
pop
ficompl
arpl
mov
jbe
xchg
movsl
push
and
imul
push
pop
aas
jns
aad
insl
xchg
jg
in
xchg
aad
pop
lods
in
dec
out
call
push
cmp
mov
outsb
sub
loope
xchg
sbb
xchg
jo
imul
pop
dec
push
cmp
data16
sbb
cmp
sub
out
push
lods
jmp
pop
movsb
push
icebp
pusha
or
sub
loopne
aas
movb
and
jbe
sub
loop
outsl
xchg
movsl
lock
mov
sub
xchg
ss
xorl
inc
cmp
mov
add
pop
cmpb
sbb
pop
jg
dec
pusha
movsl
cltd
dec
lahf
mov
adc
jp
mov
daa
add
insb
dec
inc
push
lea
dec
and
sub
fwait
leave
test
leave
jmp
jmp
cwtl
pop
add
popf
push
pop
xchg
adc
stos
aam
push
popf
aam
or
lods
fildl
inc
mov
cmp
inc
imul
testb
xor
inc
pop
pop
das
int3
jle
jae
push
mov
pop
mov
mov
inc
cmp
add
into
push
add
cmp
adc
cmpl
nop
cltd
jl
cmpsl
ret
push
cmp
add
outsl
xchg
inc
sub
shlb
add
cmpsl
mov
mov
in
cld
sar
cli
sub
jmp
movl
pop
fmull
mov
scas
sbb
loop
xchg
adc
andb
jmp
imul
mov
aam
push
pop
sub
sbbb
xor
jge
pop
or
mov
pop
sub
cmpl
cwtl
cmpsl
adc
insb
sub
cmpsl
inc
stos
sbb
xchg
push
rdmsr
adc
fs
cli
pop
sti
inc
and
cs
or
inc
mov
xlat
mov
sub
sub
in
jg
insb
adc
insl
dec
or
add
insb
inc
lea
dec
fmull
insb
jae
xor
or
rorw
fdivrs
pop
fiadds
pop
out
das
ret
inc
adc
inc
pop
jns
push
xor
inc
shl
pop
nop
loopne
les
sbb
sbb
dec
lock
stos
aam
lock
scas
push
jmp
hlt
in
jb
test
xchg
xor
leave
pop
sbb
in
lcall
sub
popa
pop
mov
in
sub
or
mov
dec
in
je
sbb
mov
or
outsl
je
mov
mov
jne
push
jae
adc
cmp
fwait
outsl
insl
jbe
mov
push
das
mov
les
mov
push
inc
rclb
and
cmp
ja
push
fimuls
rorb
push
xchg
inc
sub
xor
mov
pop
inc
fidivrl
pop
aad
pop
sub
dec
sub
testb
push
mov
shlb
addb
adc
cwtl
test
pop
add
cmc
mov
mov
adc
icebp
scas
sarb
stc
sbb
das
filds
sarb
aad
add
pop
ret
insb
leave
adc
xor
cmpsb
adc
jge
repz
or
outsb
ds
xchg
sbb
insl
push
outsl
push
popa
in
lds
add
mov
lret
sub
xchg
adc
add
jmp
dec
repz
adc
cmpsb
scas
outsl
xlat
sub
lock
jnp
in
rcrl
into
in
mov
mov
in
pop
out
pop
repz
clc
inc
jp
je
cmp
insl
mov
add
or
outsl
fcmovnb
jecxz
dec
jge
data16
and
pop
scas
push
adc
rcr
and
dec
notb
repnz
xor
adc
mov
add
dec
pop
ds
pop
mov
push
andb
mov
inc
cmpsb
jge
and
sti
pushf
mov
mov
loop
or
dec
pop
stos
lret
loopne
sbb
shrb
or
movsl
push
out
shll
pushl
fbstp
xor
sub
or
and
sbb
pop
dec
mov
cmp
shl
arpl
pop
cmp
xchg
xchg
rolb
dec
fadd
adc
js
sub
jp
push
mov
test
sbb
bound
mov
or
mov
sbb
mov
mov
pop
sti
mov
adc
fs
sub
xorl
lds
sarl
mov
fwait
dec
jmp
inc
scas
add
sahf
adc
add
lcall
aad
aas
iret
mov
out
stos
jb
cwtl
push
pusha
movsb
jl
pop
roll
mov
cli
lahf
mov
fs
xchg
ljmp
js
popf
insb
fs
test
sub
fisubrl
sub
jle
cmc
enter
mov
nopl
je
sbb
xchg
loopne
mul
imull
imul
movsb
cwtl
jmp
fcoml
dec
jne
cmp
sbb
xor
cli
mov
inc
mov
xchg
push
mov
aam
mov
inc
int
sub
arpl
aad
test
inc
jecxz
seta
add
insl
pop
mov
lret
push
fcmovb
cmpl
sub
mov
scas
push
enter
mov
add
aad
test
sub
cmp
mov
mov
and
fldenv
int
sbb
inc
stc
fnstenv
cltd
lds
pushf
mov
xchg
or
xchg
sub
or
push
push
test
scas
gs
and
aaa
and
jb
inc
xchg
jo
jno
leave
mov
or
lock
mov
add
sbb
lahf
mov
ja
syscall
jge
adc
cmpsl
test
mov
push
cld
lods
cwtl
test
lods
aam
test
push
push
push
push
test
cs
xchg
mov
and
mov
out
sub
pop
in
fsts
ret
mov
inc
xchg
repnz
push
jmp
rorb
inc
mov
rcll
cwtl
pushf
xor
xchg
clc
lahf
xor
sub
mov
add
pop
test
arpl
lahf
jmp
repnz
mov
mov
sahf
mov
cmp
mov
mov
rcl
out
cmpsl
mov
pop
pop
cmp
arpl
dec
repnz
push
or
push
enter
or
jl
mov
subb
push
push
pop
leave
ffreep
sti
int
sbb
xor
xlat
jg
pushl
adc
xor
or
int3
push
jo
jge
lock
cmp
in
mov
dec
fcompl
stc
cs
out
loopne
popa
lods
lcall
les
scas
push
mov
push
adc
cmpsb
jecxz
mov
outsl
fwait
int3
pop
out
shll
dec
in
pop
int
add
inc
lock
or
test
push
jl
js
sbb
mov
fwait
xor
sub
shll
cwtl
cwtl
mov
es
pop
sbb
mov
push
in
in
cltd
push
imul
and
adc
dec
dec
fs
mov
push
dec
dec
sbb
call
test
sub
testl
xchg
aaa
sahf
lods
push
lcall
mov
pushf
jmp
mov
pop
pop
sub
lock
push
lret
mov
pop
lret
lret
test
jne
sbb
pop
mov
xor
mov
dec
adc
sub
and
pusha
adc
aaa
xchg
jo
mov
pop
scas
mov
js
inc
andl
and
or
xchg
pop
aaa
movsl
xor
addr16
mov
dec
mov
shrl
std
push
or
xor
cmp
and
push
jne
push
ljmp
sbb
jbe
sbb
sahf
jo
int
sub
push
pop
xor
xchg
das
movsb
cmc
jne
stc
sub
imul
jmp
dec
repnz
les
xor
clc
jne
in
jb
jmp
push
fidivrs
mov
stc
xchg
cld
jb
popf
jb
shl
in
dec
insl
jo
inc
lods
mov
sarb
pop
dec
mov
push
and
dec
int
arpl
mov
loopne
and
lock
push
es
cli
cmpsb
iret
repz
js
addr16
mov
sbb
jne
sbbl
mov
and
pop
std
fcom
sbb
or
inc
xor
adc
stos
lahf
test
shll
and
adc
fsubs
push
mov
add
xchg
clc
jb
mov
ret
sub
push
sahf
mov
ret
or
pop
add
adc
frstor
dec
pushf
pusha
out
lds
fucomip
imull
and
call
cld
aad
mov
or
loopne
stos
icebp
mov
push
les
ret
fistpl
iret
aaa
jnp
cmp
add
dec
xchg
in
test
lahf
adc
inc
or
pop
repnz
adc
adcl
jge
xchg
cli
inc
sbb
pushf
and
adc
jno
sbb
pop
sub
mov
sarb
mov
out
rcr
push
adc
call
inc
jmp
mov
adc
mov
into
xor
xchg
scas
xchg
loop
insl
jp
add
gs
inc
inc
ja
push
int
pop
xor
mov
test
push
jo
out
jae
pop
jmp
push
scas
pop
fisttpl
jg
stos
sbb
aaa
cmpsl
popa
jne
lock
adc
sbb
xor
xchg
xchg
jle
dec
push
test
pop
repnz
clc
mov
icebp
jb
or
jmp
subb
ja
or
xlat
in
and
mov
aaa
sarl
mov
decl
sbb
fcomi
pop
cmp
out
mov
testl
xor
xchg
add
out
gs
jae
pop
rcll
add
lds
lret
out
ja
mov
bound
pop
cmpsb
pop
js
mov
pop
cmpsb
les
push
int3
mov
icebp
or
aam
xlat
leave
mov
int3
cmp
xchg
fwait
or
hlt
push
cld
pop
push
mov
cmp
sahf
push
pop
jmp
adc
dec
mov
inc
mov
mov
std
sbb
jns
adc
das
push
push
and
push
jg
inc
in
xor
sar
inc
sub
and
sub
cmpsb
jmp
adc
pop
and
push
cld
jp
incl
dec
ficompl
cmc
inc
frstor
mov
xchg
fnstsw
mov
nop
test
inc
mov
dec
loop
es
data16
les
inc
gs
enter
aad
mov
fdivl
out
xchg
imul
mov
mov
sub
jo
stc
cmp
jle
popf
jecxz
lret
dec
sub
mov
fmulp
cs
xchg
dec
push
mov
je
ret
sahf
xchg
jg
sub
xchg
test
int
mov
test
gs
dec
dec
loop
push
mov
repnz
pushf
push
mov
inc
sbb
and
xlat
cmp
int
mov
jl
sbb
stos
movsl
mov
daa
mov
shl
iret
and
sub
js
sub
xor
mov
push
cmpsb
mov
insb
js
or
lods
mov
sbb
js
mov
pop
sub
jp
ret
lret
imul
adc
inc
jbe
lock
or
test
pushf
call
inc
pop
mov
add
aad
inc
push
stos
jne
mov
in
sti
adc
pop
mov
jae
lock
shrb
mov
nop
jnp
add
loope
pushf
lahf
adc
add
testl
cmp
adc
mov
push
push
cs
sub
xor
aaa
andl
mov
fdivp
push
imul
in
push
lret
ljmp
lds
pop
dec
mov
fwait
jae
in
daa
push
jge
imul
fwait
inc
adc
insl
inc
push
decb
mov
pop
scas
es
lret
popf
std
mov
mov
test
stc
mov
push
sub
arpl
cltd
mov
and
idivb
js
loopne
scas
rol
xor
mov
fldcw
xlat
cmpsl
sahf
push
push
add
dec
imul
inc
dec
outsl
pop
jl
aaa
sbb
or
sub
fdivs
sbb
sub
ret
inc
mov
push
mov
mov
sbb
js
mov
fst
xor
and
or
fsts
lahf
sub
std
ljmp
or
jo
std
push
jle
mov
xchg
sub
mov
push
adc
imul
call
xorb
push
mov
std
inc
and
cmp
mov
xor
stos
jp
loop
mov
xor
pusha
push
xchg
out
pop
adc
sarl
and
loopne,pt
es
hlt
mov
xchg
dec
jp
sub
xor
fdivs
iret
lock
add
shrb
dec
insb
fdivrs
sub
mov
jne
cmp
sti
xchg
cs
and
test
push
pop
lcall
out
sub
dec
lods
adcl
outsl
push
xchg
bound
out
movsl
out
gs
rcr
lea
cld
adc
mov
lods
nop
and
mov
lret
jns
pop
push
aas
cs
or
sbb
adc
ret
mov
fdivr
push
inc
mov
cmp
rcrl
dec
test
loope
mov
jl
push
adc
add
cmpsb
lods
lahf
mov
pop
leave
lahf
mov
enter
and
imul
jp
pop
or
imul
std
cltd
ljmp
jp
bound
call
shlb
cmp
add
dec
in
xorb
adc
jmp
fisttpll
ret
lret
xor
dec
test
jge
rorl
das
out
fldl
in
out
int3
add
dec
mov
in
dec
xor
leave
add
aam
mov
rclb
jp
mov
pop
fisubl
cmp
insl
sub
jb
jbe
pop
in
shrl
sti
add
js
data16
popa
jo
in
lcall
clc
pop
into
xor
lea
ficoml
pop
inc
les
imul
sub
cwtl
xor
movsb
ss
pop
iret
jno
sbb
in
push
mov
loope
jmp
aad
repnz
dec
into
push
mov
push
push
dec
insb
movsb
mov
and
sbb
out
cmp
out
icebp
sbb
rolw
fidivs
ffree
in
lcall
jge
je
mov
arpl
hlt
cltd
rorl
iret
lods
lods
mov
cmp
js
xor
roll
addl
jg
jae
out
imul
mov
dec
leave
jmp
cmp
mov
push
mov
jecxz
loop
cli
mov
add
mov
mov
in
add
cmc
ficoml
adc
add
fisttpl
add
or
jp
pop
xchg
call
sbb
inc
lahf
std
cltd
cmp
shll
insl
aaa
es
fs
add
jae
fcoms
push
pop
rcr
push
ret
fucomip
in
fmull
ss
rclb
inc
addr16
push
into
fstps
repz
xor
cmp
xor
cld
test
js
sbb
push
int
rol
mull
mov
jecxz
and
ret
cmp
repz
stc
repz
push
mov
or
dec
stc
imul
xchg
xchg
adc
stc
ds
or
mov
ret
jno
sbb
arpl
add
xchg
and
xlat
shll
in
popf
mov
fxch
std
pop
xor
jl
xchg
dec
push
pop
cmp
dec
pop
jg
add
jns
aas
mov
jp
stos
movsl
cmp
mov
mov
cld
out
lret
jmp
fld
dec
loop
xchg
sbb
and
adcl
pop
cld
fwait
push
pop
mov
in
push
lods
lahf
cmpsl
and
add
jae
jmp
sbb
cld
les
imul
xor
mov
push
adc
out
cmpsl
add
mov
and
jg
stc
sbb
clc
ss
les
pushf
jl
jge
push
sub
stc
fucomi
and
xchg
out
sub
mov
test
jmp
sbb
daa
cmc
test
xchg
out
add
mov
mov
ljmp
test
icebp
in
imul
addl
into
xlat
inc
ret
ss
out
lahf
arpl
inc
in
jnp
inc
mov
outsl
mov
push
out
ret
cli
loop
xacquire
xchg
jbe
xchg
xor
jmp
dec
mov
sub
ss
adcl
movsb
jge
mov
mov
jns
jo
shll
push
adc
sub
mov
js
push
adc
jmp
xor
out
cmp
gs
fucom
stos
push
out
dec
xlat
dec
outsb
cmp
fwait
and
into
sbb
sub
add
out
lret
hlt
rorl
popa
xchg
adc
cmpsb
pop
pop
divl
movsb
mov
add
cmp
and
push
cmp
frstor
js
adc
sti
sbb
xor
dec
jmp
inc
jle
sub
and
push
mov
dec
lods
sbb
mov
jno
popa
mov
pop
pop
in
pop
push
mov
ljmp
shrb
stc
shlb
dec
sub
sbb
out
cmp
add
cmpsb
je
fwait
sbb
ret
push
cmpsb
nop
popa
lcall
aam
sub
cld
mov
fbld
imul
sbb
and
adc
mov
mov
inc
mov
jne
mov
das
bound
ljmp
rcrl
scas
dec
movsb
in
xchg
or
add
and
and
pop
push
jmp
inc
xchg
jbe
mov
call
mov
shrb
inc
adc
jnp
adc
or
icebp
adc
push
ret
aaa
nop
mov
insl
lret
leave
pop
jne
arpl
pop
cmp
out
cwtl
push
inc
or
mov
xchg
and
aaa
and
mov
fwait
cwtl
jmp
and
fsub
and
roll
pop
mov
lret
inc
mov
xor
cld
rorb
loop
mov
cmpsl
shlb
fcoml
xor
sub
mov
dec
push
in
add
and
sub
arpl
mov
daa
js
imul
sub
push
es
jge
xor
loope
aam
jae
mov
or
xchg
daa
xchg
call
notb
mov
mov
adc
and
pop
mov
mov
jbe
xchg
out
or
enter
xchg
and
mov
xchg
jl
xchg
ret
cmpsb
cwtl
out
sbb
into
subb
jbe
stos
out
insl
repnz
adcl
and
lahf
iret
xor
shll
pop
adc
dec
lock
push
xor
enter
adc
pop
jle
push
push
mov
outsb
enter
iret
das
jae
pop
ljmp
xchg
xlat
les
or
idiv
dec
in
and
mov
out
lcall
vrsqrtss
jne
das
lret
dec
mov
pop
and
jae
shrl
cs
data16
sub
cwtl
pop
push
ss
cmpps
mov
es
fwait
jno
and
gs
sub
bound
inc
push
icebp
pop
mov
cmp
andb
or
push
push
mov
icebp
sub
loope
adc
jp
test
adc
andl
call
push
pop
push
cmpsl
mov
jl
dec
sbb
adc
das
ja
mov
int
out
xchg
int3
mov
stos
jecxz
xchg
lods
jecxz
add
addl
sub
sbb
sub
ss
xchg
ret
in
shl
std
xlat
pop
in
loopne
xchg
es
shrb
and
jno
pusha
pushf
sub
jae
jle
inc
push
verw
sub
jo
fstpt
call
push
mov
pop
shrb
repz
mov
loopne
xlat
fwait
push
into
adc
and
push
test
cmc
lret
inc
jecxz
hlt
cmp
xchg
dec
ja
out
gs
pop
test
inc
xchg
push
adcb
shrb
or
into
jnp
pop
push
cmpxchg
cwtl
push
pop
outsb
dec
filds
mov
out
jecxz
push
loope
scas
xor
xor
fisubrl
jae
mov
outsl
into
repnz
loopne
mov
jle
and
fsubrl
movsb
xor
cli
sbb
rorl
in
jl
jp
sbb
shll
and
cmc
push
dec
push
ds
xchg
popa
xorl
cli
pop
pop
pop
push
dec
push
sub
sbb
fsubr
into
fs
mov
movsl
loop
mulb
push
jle
and
dec
dec
add
jmp
lret
es
mov
aam
pushf
jge
fistps
xchg
fcmovbe
and
jp
jle
in
out
pop
jl
shlb
jecxz
lret
mov
negb
cmp
mov
dec
jb
stos
fadds
xor
loop
push
fs
sub
sbb
nop
or
adcl
add
or
fdivr
sbbl
pop
or
aam
int
xchg
cs
sti
testb
cld
loopne
push
iret
scas
jae
pop
mov
xchg
add
jge
pop
xor
xor
push
add
enter
jmp
bound
sub
dec
xor
scas
and
fists
xchg
loop
lea
mov
rorb
xchg
mov
clc
or
out
or
adc
xchg
cmpsb
cltd
fidivs
mov
sub
push
mov
lcall
jge
mov
add
subl
movsl
les
arpl
push
loop
iret
adc
mov
gs
shl
push
push
push
es
add
in
jg
adc
xor
jge
imul
aad
adc
mov
mov
in
mov
popa
xor
cld
adc
pusha
fdivrl
mov
and
inc
cwtl
popf
pushf
aad
mov
push
sbb
mov
xor
sbb
in
in
xor
sbb
roll
push
cmp
push
pop
notl
jno
std
dec
cmp
add
pop
inc
iret
dec
sahf
pushf
in
mov
push
dec
repnz
push
mov
in
lds
addr16
sarl
lds
cli
enter
and
push
bound
orb
in
xchg
add
add
int
enter
int
mov
fcom
mov
jmp
mov
data16
xchg
xchg
jbe
int3
ret
test
mov
or
mov
pusha
mov
xchg
jbe
mov
rorb
mov
xchg
mov
mov
jns
fucom
dec
xor
push
mov
xchg
jb
mov
sub
xchg
mov
cmpsl
lcall
subl
push
jge
daa
cmp
in
call
mov
cld
dec
mov
fwait
or
mov
xlat
mov
test
aaa
dec
mov
mov
pop
sbb
and
in
into
fsubs
fiadds
sti
xor
test
into
loopne
dec
push
test
mov
push
movsl
sti
sub
mov
repnz
lret
push
mov
test
int
popf
and
les
aam
mov
pushf
aam
int
fstps
mov
fidivl
pop
ret
push
push
jl
test
jnp
iret
mov
jno
aam
leave
mov
ficoms
adc
fidivrs
or
cmp
mov
aad
repnz
adc
adc
repnz
or
jmp
or
sub
push
addb
mov
cltd
mov
in
outsl
lea
mov
pop
mov
mov
mov
xor
push
mov
lret
mov
xchg
or
sbb
jns
lret
mov
or
test
test
push
andl
xchg
repz
pop
mov
xor
pop
and
call
push
cld
xchg
out
fdivl
cli
insb
sub
je
in
in
inc
test
lret
inc
stos
push
jae
cmp
cld
push
jbe
add
add
int
dec
int
mov
mov
mov
mov
mov
aam
scas
dec
scas
ss
fisttpl
jbe
jno
inc
lcall
adc
push
jp
inc
and
lods
xchg
inc
cld
or
lock
pop
cmp
in
push
xor
xchg
loope
cmp
repz
imul
test
pop
cmpsl
adcl
mov
lret
mov
sbb
cltd
mov
mov
rcl
inc
test
jbe
sti
frndint
sahf
or
add
fldcw
jl
xchg
pushf
hlt
xchg
aaa
stos
inc
fistl
movsb
xor
inc
mov
in
in
add
inc
lea
loopne
and
jnp
dec
xor
sbb
mov
jg
xchg
mov
movsl
xor
pop
inc
outsl
inc
out
sbb
add
jns
push
push
call
jns
cmp
push
sbb
cmp
or
xchg
jne
outsl
sub
add
dec
add
inc
dec
lret
mov
cmp
in
mov
jp
pop
jmp
sub
mov
popf
mov
pop
aad
mov
pop
repnz
fisttps
xchg
xor
mov
pop
xchg
in
outsb
pop
cmpsb
lods
cwtl
pop
add
outsl
xchg
mov
insl
jge
in
jnp
pop
fs
adc
and
aad
bound
or
sub
test
mov
dec
in
das
xor
jp
out
inc
inc
xlat
lret
mov
aam
aas
out
adc
mov
iret
test
test
popa
sbb
mov
movsb
in
loop
add
cwtl
or
and
jecxz
mov
dec
iret
insl
mov
jg
out
divb
push
sbb
int
in
cli
pop
subb
mov
inc
filds
insb
test
data16
inc
lea
dec
sbb
push
lods
add
cli
out
add
xchg
pop
in
xchg
push
repz
in
push
imull
nop
movsb
or
test
push
mov
insl
aas
pop
or
push
push
sahf
jmp
mov
mov
repnz
imull
pop
das
scas
xor
leave
dec
mov
loop
loopne
mov
jne
filds
lds
lods
jle
adc
movsl
or
in
leave
add
xorl
fdivl
xorl
fbstp
mov
fwait
loopne
les
test
push
adc
scas
testb
push
mov
aaa
in
imul
xor
cld
scas
cmpsl
enter
mov
jecxz
mov
fisubrl
add
fucomp
push
add
pushf
aaa
sub
or
icebp
scas
test
push
fwait
and
xchg
aaa
mov
fidivrs
dec
stc
mov
push
push
fbstp
fists
popfw
mov
addr16
pop
add
in
mov
inc
jmp
adc
cmp
adcb
and
jge
mov
out
jecxz
sbb
inc
test
mov
inc
int3
and
notl
push
pop
sbb
faddl
or
sub
dec
xchg
jae
arpl
xor
xor
mov
xchg
pushf
sbb
inc
cmpsl
sub
mov
jno
lods
mov
push
push
adc
out
mov
jbe
cmp
lods
pusha
xor
inc
hlt
and
pop
mov
jg
jne
sub
cld
lret
sbb
or
sbbb
std
aas
add
jecxz
popf
movsb
adc
js
add
cmpsl
sub
mov
mov
cltd
stos
insl
dec
adc
add
dec
cwtl
mov
mov
jne
mov
mov
jle
jns
dec
movsb
xchg
shll
mov
mov
mov
imul
shlb
jp
fstl
stc
rclb
inc
inc
mov
mov
dec
or
adc
out
push
mov
push
inc
jp
mov
xor
cmp
dec
iret
testl
mov
es
adc
mov
pop
ja
xor
loopne
sbb
jmp
inc
adc
mov
and
test
repz
lock
inc
adc
sti
jmp
add
call
pop
test
inc
movsl
cltd
pop
iret
ss
int
or
insb
adc
cmpsb
dec
rcrl
test
cmpsb
out
xchg
xchg
lods
cwtl
dec
arpl
in
push
lods
repz
test
mov
cmpsl
mov
add
loop
movsb
add
dec
cmpsb
orl
xor
dec
lahf
movsl
xor
cltd
inc
cmp
test
cmp
movb
mov
push
cmp
add
ja
mov
mov
xchg
shl
sahf
lcall
out
ds
cmpsb
mov
xchg
adc
or
cltd
add
addr16
adc
ljmp
or
pop
mov
cli
test
cmp
shlb
shrb
push
clc
jb
cltd
mov
dec
fldenv
xchg
mov
lock
fistps
sbb
les
pop
xchg
xchg
out
cmc
lea
jmp
xor
mull
inc
insb
mov
les
mov
xor
inc
imul
fs
lahf
and
mov
sahf
push
scas
stos
add
xor
mov
jb
popf
push
test
pop
daa
lods
mov
and
adc
test
sub
mov
adc
push
jnp
mov
sub
ja
push
xor
dec
push
loop
and
mov
pop
cmp
xchg
js
or
loop
jno
pop
insb
xchg
sbb
cmp
adc
icebp
iret
or
mov
jne
enter
sarb
push
int
pop
std
xchg
mov
mov
repz
inc
cmc
cmp
leave
xor
insl
xor
sub
push
and
push
outsb
out
lods
xor
mov
adc
adc
scas
mov
mov
xchg
lods
cwtl
sti
lods
xchg
jmp
ror
loope
sti
mov
ljmp
adc
and
dec
jo
lahf
pop
push
cli
insb
ja
xor
js
ret
icebp
xchg
gs
lea
cmp
sub
or
rolb
fsub
xchg
push
pop
aad
clc
icebp
mov
add
inc
mov
test
aad
xchg
ret
repnz
xchg
xchg
les
push
jbe
push
and
and
fcoms
push
or
in
outsl
mov
cmc
add
loopne
mov
sbb
cmpl
lds
ds
fs
into
sub
push
sbb
add
outsl
push
pop
add
les
leave
mov
xor
jmp
lds
push
cwtl
add
cmpsb
mov
hlt
mov
ficomps
insl
stc
jge
testl
pop
mov
sbbl
imul
cmpsb
jns
cmpsb
push
out
sbb
jle
or
sub
sub
outsb
lods
jns
push
fs
cmp
sbb
mulb
sub
mov
psubb
mov
mov
leave
movsl
lcall
lea
mov
mov
pop
addr16
dec
test
inc
insb
pop
outsb
jl
add
xchg
dec
sub
sub
adc
fsubrs
ds
jg
fdivr
push
xor
repnz
and
testb
std
mov
xor
sbb
xchg
cld
in
push
push
lock
out
jle
or
mov
rclb
pminsw
inc
add
xchg
out
nop
orb
add
cmc
pop
jae
mov
lret
imul
and
and
cld
sbb
xor
add
mov
hlt
xchg
int
inc
jo
popa
in
test
inc
rorl
mov
mov
bound
cmp
mov
mov
mov
dec
jnp
test
scas
mov
out
inc
mov
in
aaa
add
fldcw
int
or
addl
inc
hlt
jle
mov
out
fisubrl
or
mov
jno
mov
cli
jnp
pop
jmp
outsb
aad
pop
jne
cld
push
cmc
nop
add
test
push
mov
mov
push
jecxz
mov
shl
out
loop
cmp
and
inc
int
mov
lret
xor
and
jmp
in
push
mov
call
test
inc
imul
std
dec
jmp
rorl
add
push
sub
inc
mov
mov
push
fsubs
mov
sbb
rep
mov
pop
ret
push
mov
sub
jmp
cs
cs
testl
pop
adc
sbb
adc
lret
ret
add
scas
fldenv
jb
pop
push
outsb
fs
les
jae
sbb
jge
jno
outsl
mov
leave
adc
cli
shl
sub
rorb
scas
cmp
test
pop
sub
or
cmc
mov
out
push
test
jb
nop
push
test
dec
mov
rcrb
loopne
lcall
fucomip
ljmp
xor
cltd
outsl
in
test
loope
and
jp
xor
cmc
shll
bnd
in
cmp
fldcw
and
out
sbb
hlt
pop
xchg
mov
movsl
push
adc
xchg
add
add
jg
sub
jbe
mov
and
add
fsubrs
push
mov
xor
aam
jecxz
in
cmpsb
sahf
pushf
adc
out
addl
dec
leave
shlb
loop
adc
dec
dec
push
daa
jne
sub
mov
dec
cmp
jo
ret
dec
cli
int
xchg
stos
and
cltd
loopne
pop
sti
cmpsb
test
and
xor
cmpsl
fwait
inc
lds
sub
outsb
pop
dec
icebp
inc
mov
inc
jl
pop
mov
leave
mov
into
aam
fxch
dec
dec
imul
sub
or
in
loop
stos
stos
jmp
cltd
fs
mov
inc
in
stos
decl
stc
xlat
mov
or
shl
and
push
mov
mov
outsl
mov
cmpsl
repnz
jg
int3
lcall
jns
mov
imul
xor
pop
faddl
mov
or
out
inc
lea
xor
jp
xchg
testl
arpl
jae
add
mov
adc
sbb
push
push
cmc
ret
and
test
push
roll
dec
dec
mov
xchg
bound
sbb
aam
arpl
das
pushf
shl
ss
or
dec
bound
mov
sub
cmpsb
or
push
repnz
jge
popa
mov
scas
mov
cmpl
add
icebp
jge
lret
out
stos
mov
outsb
dec
mov
mov
xchg
sbb
popf
jno
or
mov
inc
push
daa
mov
aas
test
mov
mov
and
lahf
xor
call
ror
out
jbe
cmp
dec
push
dec
movsl
std
xchg
hlt
fildll
paddd
es
fwait
jp
jmp
out
xchg
ljmp
rorb
loope
loop
mov
aad
loop,pt
xchg
adc
mov
lods
or
lea
mov
data16
mov
xchg
rcll
loope
mov
das
shl
std
jb
pop
xlat
insb
sti
add
cmp
sub
das
xchg
arpl
clc
dec
sar
inc
inc
fwait
rolb
jno
call
fstl
push
lret
inc
pushf
lret
lods
or
loopne
and
cwtl
add
xchg
mov
jae
pop
call
jmp
push
cmp
in
or
mov
sbb
pop
cmpl
sub
hlt
shl
push
push
mov
and
mov
inc
ret
lret
cmpsb
fs
dec
mov
cwtl
xchg
cmp
fs
fwait
insl
ss
scas
push
int
test
adc
repnz
ss
add
vxorps
mov
mov
sbb
push
jmp
jne
call
dec
adc
lock
sarl
add
mov
sbb
pop
cmpsb
out
push
jg
jmp
cld
rcr
andb
testl
das
pop
rorl
clc
lea
gs
aaa
xchg
mov
out
pop
push
mov
xchg
lds
cwtl
in
or
sub
or
js
arpl
xor
adc
dec
push
mov
mov
mov
aaa
sbb
mov
and
add
dec
or
mov
push
fldl2e
bound
xlat
movsl
jl
roll
add
cmp
xchg
movsb
xchg
xorb
mov
scas
or
lcall
push
insl
sbb
test
fstps
inc
fisubs
subps
dec
mov
pop
lods
outsl
mov
lcall
xor
sahf
push
in
xchg
push
popf
mov
mov
loope
aas
mov
push
std
jo
pop
jp
test
pusha
adc
pop
and
fwait
cmpsb
in
jno
subb
or
and
in
pusha
nop
mov
and
ret
add
fwait
iret
hlt
int
cmpsl
inc
mov
add
fsubrs
pushf
sub
scas
pop
in
in
lea
jp
xchg
xchg
mov
jno
mov
push
dec
mov
cmp
jg
fadd
or
xchg
in
add
dec
inc
ds
mov
hlt
in
pusha
cmc
lea
fimull
movsl
inc
adcb
sub
das
rcrb
aaa
adc
inc
inc
das
sti
aaa
rorl
fwait
lret
icebp
xchg
out
cmpsb
mov
pop
scas
push
xchg
das
sbb
pushf
arpl
fdivrs
mov
fnsave
and
lcall
in
sub
xchg
icebp
push
adc
adc
test
out
cmpsl
es
lods
scas
pop
sahf
add
sbb
ficompl
lret
dec
pop
insb
test
lods
mov
push
lcall
imul
jg
pop
lods
cmpsl
dec
push
pop
arpl
adc
mov
and
inc
cmp
in
fists
jns
data16
andb
loop
push
fidivs
cs
arpl
xor
aas
push
test
flds
sub
stos
pop
sub
mov
cmp
sbb
testl
int
loopne
test
sub
test
push
or
and
sub
neg
inc
jmp
ret
jg
push
lods
mov
repz
cmp
movsb
xor
ficomps
inc
jp
std
jnp
sbb
inc
xchg
icebp
dec
les
adc
insl
and
ds
adc
jg
ja
sti
int
xor
inc
inc
mov
lods
lcall
sbb
enter
ja
cmpsb
jmp
popa
jl
fwait
xor
add
je
pop
lods
movsb
adc
out
pop
mov
mov
mov
jmp
inc
cmp
pop
xchg
in
jnp
jb
rcrb
iret
int3
push
sub
sbb
movsb
rclb
add
xchg
jg
jns
into
adc
jl
in
add
lahf
out
fs
data16
xchg
ds
push
mov
dec
packssdw
mov
jmp
ds
push
mov
popf
push
rcrb
cli
push
aas
xorb
lret
lea
pop
stos
mov
ud2
fwait
into
shll
lods
jmp
fwait
dec
data16
pop
add
and
xor
into
inc
mov
xor
ss
imul
in
in
push
call
ljmp
pop
sbb
frstor
sub
xchg
mov
lcall
push
dec
xor
push
jae
mov
mov
jp
arpl
out
and
sbb
aad
xchg
inc
cs
pop
lret
mov
aas
sbb
test
jnp
dec
jecxz
or
ffreep
scas
cmp
std
pop
adc
xchg
or
ret
xchg
ret
xchg
cmp
push
mov
jmp
mov
scas
push
dec
fstps
mov
mov
orb
je
or
pop
sbb
pop
mov
ja
xchg
shl
adc
mov
cmp
or
adc
lcall
inc
and
mov
xor
addr16
jle
cltd
lret
jo
stos
jge
xlat
pop
fucomp
addr16
adc
mov
sbb
dec
imul
les
sbb
icebp
jno
mov
pusha
dec
cmp
rcr
inc
jecxz
jg
es
jecxz
jns
push
sub
push
fsubl
pop
sarb
add
mov
mov
jecxz
or
cmp
jno
out
jne
sub
push
add
inc
xor
dec
mov
xrelease
sbb
xchg
ret
nop
loope
mov
insl
xchg
xchg
and
jmp
fmull
into
inc
int
mov
call
sbb
ret
js
cmp
xor
popa
outsl
test
stc
jne
in
cmp
jg
push
xchg
scas
adc
movsb
jmp
mov
mov
inc
in
pop
sbb
dec
sub
push
cmp
lcall
push
push
orl
cli
pop
iret
rcl
inc
lods
cmpsb
or
push
dec
sub
jne
or
jno
sbb
lods
ds
rcl
jo
xor
dec
jnp
addr16
xchg
repnz
in
pop
cmp
or
leave
shrl
mov
adc
les
add
dec
push
int
inc
movsb
adc
enter
je
cmc
rcrl
cmp
hlt
push
mov
rclb
push
xor
loope
addr16
mov
adc
sbb
repnz
xorb
icebp
fsubrs
mov
lret
add
mov
int
sbb
in
pop
loope
shl
push
and
lock
mov
mov
shl
aas
mov
pop
mov
add
test
icebp
cli
loope
inc
lcall
movsb
push
mov
arpl
and
repnz
fimull
mov
jecxz
sbb
jp
push
in
or
aaa
dec
cmp
mov
xchg
subb
inc
sub
les
xchg
hlt
lea
mov
push
xlat
out
addr16
jl
xchg
popf
jb
iret
iret
jp
xor
mov
mov
push
mov
rcll
mov
fildll
lret
out
out
stc
out
xchg
in
jg
xchg
cmp
scas
mov
jno
mov
stos
nop
shl
cltd
sti
cltd
insb
insb
into
xor
stos
xchg
movsl
jmp
adc
xchg
xor
cmp
arpl
pusha
and
mov
enter
push
push
xchg
subl
dec
mov
inc
jle
adc
sub
adc
cmp
test
xchg
fdivrl
push
sbb
xchg
mov
xor
nop
lods
fstps
fnsave
mov
jg
xor
jle
rcrl
scas
jle
lock
addb
lea
popa
or
hlt
pusha
jo
mov
jmp
cltd
mov
insl
jbe
fcomps
aaa
into
add
cmpsb
push
and
dec
jge
cwtl
fwait
inc
and
jge
mov
cmp
sarb
mov
andl
sbb
dec
xchg
or
mov
adc
setno
push
jne
adc
mov
leave
dec
adc
into
fwait
das
test
call
push
xchg
jg
cmp
negb
mov
sahf
xchg
subl
push
lock
adc
sbb
icebp
push
aaa
push
mov
pop
xor
addr16
cltd
clc
fadds
stos
ret
and
shlb
lock
rcrl
inc
icebp
sti
push
lods
cld
aam
mov
repnz
adc
orl
nop
enter
bound
les
test
scas
sbb
pop
dec
dec
shll
cmpsl
outsl
or
test
jae
dec
dec
js
push
pop
out
and
xor
mov
and
dec
mov
push
xlat
shlb
subb
in
icebp
stos
add
dec
into
sub
aad
arpl
xchg
jo
xchg
fldcw
iret
das
popf
push
inc
call
fucomip
lods
cmp
lcall
test
adc
insl
sbb
test
pop
ljmp
pushf
inc
push
arpl
test
pop
push
shr
aam
das
addr16
fwait
add
dec
stos
fadds
lods
dec
mov
adc
out
cmpsb
ficoms
dec
cmp
cld
outsb
xchg
jno
out
sub
and
lds
adc
pop
push
mov
xlat
testb
pop
push
sub
enter
push
jecxz
pop
mov
bound
test
pop
jle
xchg
pop
imul
aam
mov
mov
jne
negl
lea
insb
subl
rcll
mov
aas
add
hlt
int
cld
iret
lds
shl
add
pop
xchg
lock
shlb
mov
mov
mov
xchg
mov
cltd
cmp
std
sbb
cwtl
arpl
cmc
adc
xchg
adc
loopne
icebp
pop
add
jb
shll
js
dec
jae
mov
lcall
pop
cmpb
push
in
sbb
mov
aam
cmp
and
jbe
hlt
sub
js
jge
push
jl
add
popa
scas
mov
icebp
jbe
pop
mov
mov
dec
push
enter
and
outsb
sahf
fsts
push
inc
test
pop
add
cmp
dec
fdivl
dec
sub
mov
daa
jne
dec
gs
dec
and
mov
push
mov
fcom
xchg
dec
mov
imul
or
and
insl
or
lods
jge
les
enter
add
push
shll
imul
scas
rclb
jecxz
out
fwait
lods
imul
add
pop
cmpsl
pop
outsl
xchg
xor
out
jge
imul
inc
sbb
ror
lret
mov
add
insb
adc
loopew
stos
shll
ret
nop
lcall
jl
pop
xchg
inc
and
add
ljmp
insl
pop
dec
xor
sti
aad
cmpsl
shlb
jns
xor
scas
pop
and
stos
or
subb
cmp
pop
add
cwtl
loopne
lret
jno
ja
inc
mov
mov
xor
mov
or
sbb
inc
imul
jg
sbb
jge
or
pop
add
dec
imul
mov
mov
pop
add
shlb
adc
jp
cmpsb
pop
adc
mov
testl
inc
sbb
dec
jne
subl
pop
lahf
jmp
pop
ds
jns
rclb
div
pop
inc
outsb
cmc
push
out
fisttpll
fs
shll
mov
test
aam
mov
mov
fadds
dec
inc
inc
cmc
hlt
not
insb
daa
push
lahf
and
das
arpl
push
cld
cmpsb
test
or
and
stos
fucom
jb
popf
pop
mov
xor
lods
sti
xchg
out
dec
xor
sbb
pop
xor
push
negl
and
add
sbb
cmp
pop
mov
mov
lahf
or
call
ss
push
outsb
loopne
cmpsl
push
jbe
adc
mov
leave
cltd
and
pop
cmp
cmp
dec
jmp
jl
cmc
bound
dec
xlat
cmp
repnz
adc
xchg
lds
add
and
dec
sub
aaa
lods
icebp
lds
fisttps
and
adc
add
sbb
sti
and
xchg
jns
sbb
pop
fnstsw
dec
popl
mov
jns
xor
inc
movsl
mov
cmpsl
or
sbb
int3
add
xor
push
lret
mov
dec
inc
les
dec
and
popf
cmc
dec
jbe
rorb
fidivs
inc
lods
int3
in
dec
bound
mov
jne
mov
xchg
mov
push
lahf
daa
ret
push
lahf
mov
xor
or
ss
loopne
dec
fmull
sbb
ret
push
aad
mov
data16
push
inc
xlat
pop
push
lcall
call
push
cmp
fmull
movsl
or
std
sti
loope
in
push
mov
dec
shll
adc
or
inc
pop
arpl
rcrl
in
xor
jbe
adc
or
cmp
push
and
add
pop
and
or
lahf
int3
ljmp
into
testb
iret
ljmp
push
cmp
in
sub
xor
mov
jno
xchg
lods
pop
push
popf
imul
lret
mov
dec
adc
ja
dec
push
aas
in
push
leave
fdivrs
imul
out
mov
lcall
dec
lahf
adc
inc
jnp
pop
inc
jl
or
adc
adc
pop
fisubrs
xchg
jb
lea
out
inc
ret
out
pop
sahf
aaa
mov
imul
mov
movsb
addr16
pop
add
and
mov
mov
shrb
stc
mov
sbb
outsl
fsubr
mov
sbb
leave
inc
mov
dec
pop
cwtl
test
adc
pop
icebp
ljmp
mov
addr16
xchg
mov
out
mov
cld
sbb
xor
outsb
fsub
in
push
and
ljmp
lods
and
mov
and
xor
mov
das
bound
rcr
xor
stos
lods
sbb
push
jbe
je
aad
cmpl
push
movsb
push
xchg
in
add
add
xor
movsb
mov
inc
cmp
loop
shll
add
fnstsw
rcrb
mov
sub
cmovl
fists
data16
sub
adcl
lret
cmp
shlb
jnp
sub
movsb
sbb
jmp
jns
xchg
mov
xchg
popf
xchg
jno
add
out
rclb
sbb
mov
js
je
mov
decb
pop
add
cli
test
lcall
iret
aam
mov
xchg
jb
sub
dec
popa
clc
xchg
in
pop
loopne
loope
mov
cmp
sub
adc
int
push
imul
movsl
jae
mov
jae
fs
out
push
dec
pop
pop
popw
mov
inc
clc
mov
mov
jle
repz
stos
add
bsr
out
push
sarb
pop
cmp
lret
in
repnz
pop
in
mov
lret
aam
movsl
push
jl
stc
adc
mov
lahf
mov
test
das
xor
pop
xchg
jl
jno
dec
int
aas
mov
clc
jge
sbb
test
inc
add
jp
testb
mov
inc
shl
cs
out
lock
negb
dec
sbb
mov
je
fimull
mov
inc
inc
mov
push
addr16
mov
in
call
cmpb
xchg
mov
jno
cld
popa
pop
push
shll
movsl
xor
dec
push
sbb
push
subl
ficoms
xchg
jmp
jmp
out
mov
adc
push
pop
xor
inc
xor
push
mov
sbb
add
mov
outsb
shlb
or
sahf
mov
ss
loopne
aam
ja
rcrl
dec
jmp
arpl
scas
ret
jle
in
mov
xor
sub
fbld
mov
ret
and
test
jp
cltd
repnz
in
dec
movsb
or
aad
int3
or
pop
test
ret
scas
inc
adc
cmp
sahf
inc
ret
mov
rcll
push
or
push
mov
cmpsb
les
lea
ret
cltd
adc
dec
call
out
adc
jmp
inc
pop
jbe
ret
jbe
sub
scas
dec
clc
push
outsb
push
xor
cwtl
dec
movsb
xchg
shl
stc
push
in
push
lods
jno
add
call
scas
int3
es
mov
fbstp
pop
stos
cli
inc
adc
sub
inc
sub
test
pop
sahf
xchg
add
test
shlb
fimull
insb
inc
sbb
and
andl
mov
test
adc
sbb
pop
push
or
dec
cmpsb
xor
sti
iret
dec
cmp
push
pusha
std
mov
lret
inc
jns
or
mov
push
lds
xor
lcall
enter
and
lods
cmp
in
lods
cmc
push
mov
cli
sub
add
or
int3
sbb
insb
out
outsl
aam
xchg
fwait
ret
and
adc
scas
jge
test
xor
mov
das
enter
les
add
test
aas
shrb
or
sub
xchg
aas
cmp
and
rorb
sbb
adc
icebp
pop
inc
movb
cmpsl
or
dec
loop
adc
mov
push
loopne
pop
jo
rclb
mov
push
lock
mov
jo
cmp
sarb
xchg
iret
push
sbb
push
lret
lds
rclb
sub
ret
nop
in
push
lea
push
xchg
sbb
fs
pop
fldcw
mov
dec
rcll
scas
sub
ds
stc
cltd
xor
xor
out
in
lret
jo
rcr
mov
inc
scas
sub
dec
pop
ds
out
sarb
sbbl
jg
sub
in
imul
jno
repz
mov
or
gs
add
lock
stc
out
cmpsl
in
sub
push
aam
cmc
test
fiadds
cmc
push
movsb
inc
shrl
and
add
adc
pop
shl
enter
add
push
and
jno
mov
pop
mov
data16
ret
push
adc
das
adc
mov
mov
or
push
ret
push
rcrb
in
mov
jge
sbb
sub
mov
scas
cmpsl
jecxz
dec
int
xchg
xor
lock
mov
xor
imul
fimull
stos
or
mov
xor
scas
inc
push
and
outsb
shrl
jae
pmullw
fldenv
xlat
movsb
mov
adc
gs
fdivr
pop
sub
add
mov
mov
dec
repz
mov
in
xlat
sbb
and
adc
cwtl
push
mov
dec
insl
mov
mov
sbb
je
mov
stc
fisttpl
mov
fimuls
lock
jbe
aam
xchg
daa
rorl
sbb
mov
or
clc
and
sub
push
or
movsl
xchg
rorl
xor
mov
sarb
loope
xor
lock
pop
lock
imul
fadds
sbb
mov
jecxz
outsl
xor
add
mov
jae
dec
pop
sub
inc
sbb
insb
insl
pop
inc
sbb
xor
cmp
sub
fs
lea
int
andl
lods
pop
cmp
or
test
inc
adc
cli
pop
stos
xor
int
xlat
mov
pop
insb
mov
ret
sbbb
mov
hlt
pop
push
insl
in
dec
xor
dec
int3
stc
les
jo
sbb
push
dec
rclb
das
push
cmpsl
addr16
addb
fisttpl
inc
add
ja
and
xchg
inc
dec
mov
or
lcall
aas
sbb
sbb
addr16
lahf
cmp
jnp
insb
aam
iret
jp
loop
flds
jno
xchg
shll
out
jl
or
sbbl
movb
aaa
movsb
pop
mull
dec
and
jnp
mov
xlat
icebp
xchg
pop
jae
lcall
mov
testl
xchg
stc
out
je
add
xlat
test
dec
push
push
push
rorb
pop
xchg
xor
sub
inc
cmp
popa
jp
rorl
or
in
jmp
subl
imul
inc
mov
sahf
je
rorb
cmp
mov
out
enter
jae
adc
cltd
sub
mov
add
fmul
addr16
push
dec
pop
subb
adc
nopl
rorl
outsl
mov
repnz
jne
scas
push
fdivrl
pop
out
pop
clc
sbb
outsl
mov
adc
inc
mov
mov
xor
jecxz
xlat
xorb
mov
lock
lcall
add
adc
pop
fnstenv
das
stos
mov
mov
jno
jae
push
push
in
or
push
lahf
jle
fs
xchg
jg,pt
stc
push
xchg
cli
pop
pop
jge
sub
mov
add
aaa
popf
out
push
decl
mov
push
loop
pop
mov
out
add
aam
fdivl
adc
scas
adc
sub
insl
jbe
insb
popf
jae
addr16
sbb
cmp
ja
movb
inc
and
adcl
dec
frstor
leave
adc
pusha
add
ss
sbb
xchg
mov
fistps
add
mov
lret
jge
pop
xchg
leave
jb
push
pop
dec
sub
adc
inc
movsl
jne
test
testb
sti
shll
stos
cmpsl
pop
pop
std
fadds
test
cld
pop
in
stos
xchg
push
scas
jnp
outsb
mov
mov
jno
or
xor
call
cltd
adc
les
inc
push
and
std
xchg
or
xor
mov
cmp
sbb
cld
imul
cmc
int
mov
idivl
scas
cmp
je
inc
mov
pushf
addr16
jle
lods
push
xchg
jo
inc
int
loop
xchg
cli
dec
bound
addr16
mov
ja
mov
shll
icebp
daa
dec
mov
or
adc
or
daa
sub
jle
into
int
mov
jbe
inc
jge
mov
push
xchg
cmp
pop
lahf
shlb
xchg
rorl
add
sub
out
shlb
sbb
shl
mov
jle
adcl
jns
pop
insl
push
sbb
std
clc
enter
je,pt
pop
sar
xchg
xchg
xchg
sbb
cwtl
xlat
jns
out
dec
js
push
cmp
cld
fdivp
ret
mov
mov
lahf
imul
repnz
cwtl
add
sti
aaa
out
sub
push
xor
stos
push
sub
mov
xchg
mov
mov
push
mov
dec
inc
clc
out
out
cmp
mov
out
and
xor
insl
and
jg
daa
jge
loopne
arpl
scas
sarl
and
adc
popf
iret
push
je
insl
cmp
push
push
sbb
mov
cmpsl
or
mov
xchg
mov
aaa
test
push
jp
and
add
jp
aam
movsb
jns
jg
push
int3
insl
movsb
add
xlat
iret
inc
dec
lods
sarl
aas
push
aas
jg
pusha
cmpsb
fisubrs
arpl
or
jo
rcrl
add
in
mov
jl
jmp
stos
or
xchg
adc
push
test
mov
push
add
gs
ret
sarb
mov
sti
inc
push
pop
sub
add
cmc
or
aam
inc
fs
push
in
adc
dec
movsb
mov
xchg
loope
js
cli
loope
mov
pop
jl
xor
mov
andb
mov
jbe
pop
push
add
xchg
pusha
ds
and
stos
cmp
push
rol
push
std
inc
push
inc
sub
scas
push
push
popa
ljmp
sub
cmp
push
in
mov
cmp
push
imul
or
jge
mov
xchg
push
in
pop
js
pop
rcl
in
mov
inc
jmp
mov
in
inc
icebp
and
rcrb
icebp
fs
jns
push
inc
jb
sub
mov
js
data16
mov
mov
jnp
incb
pop
stos
pop
loop
ficoml
test
mov
out
mov
xor
fnstsw
test
inc
xor
ja
adc
mull
push
xorb
inc
add
out
fldcw
popf
jae
mov
pop
mov
in
push
fdivs
or
jo
fxam
test
stos
cmp
ljmp
in
out
mov
cmp
jecxz
mov
cmp
pop
jno
push
push
push
rcl
insl
stos
jmp
pop
ret
fists
pop
fdivrl
test
test
data16
adc
subl
paddsb
push
mov
push
aas
pop
movsb
lds
in
outsb
push
loop
testb
cli
ds
cld
in
mov
xchg
push
rcr
hlt
xlat
sbb
enter
les
sbb
aaa
jge
sub
pop
inc
dec
sub
sbb
pop
in
sbb
push
and
std
mov
ret
std
lret
sub
mov
mov
loop
cmc
dec
pop
mov
mov
jp
das
test
xor
stos
out
ret
rorl
mov
nop
inc
add
lods
push
push
bound
test
add
cwtl
pop
push
cmp
mov
insl
call
sahf
out
cmpsb
jo
cmpsl
insl
scas
push
fdivl
popa
cmpsb
jbe
sarb
int3
and
mov
test
push
and
mov
popf
fdiv
xor
dec
and
sbbl
sbb
lods
inc
sbb
mov
mov
jecxz
cmp
pusha
mov
push
stc
fdivrp
pop
into
out
in
push
push
cmpsl
xchg
mov
mov
mov
xchg
jns
push
mov
jl
dec
sbb
pop
popa
outsb
sbb
or
mov
cmp
xor
cld
or
xorb
add
adc
mov
cmpsb
in
or
insb
fcoml
outsl
lret
ss
inc
insb
in
imul
sbb
int
mov
scas
cmp
sub
push
adc
pop
jmp
xchg
or
mulb
loope
dec
sub
mov
xchg
fists
mov
fs
into
in
jae
cli
repnz
fidivrl
in
xchg
stos
movsl
mov
shrl
int
sbb
mov
imul
fsubr
jmp
ret
or
shlb
sub
pop
xor
inc
and
sbb
lods
cmpsl
adc
xchg
push
mov
sbb
into
lret
jno
and
js
into
mov
cli
adc
adc
stos
sub
cmp
dec
jmp
and
mov
repnz
mov
xor
cli
push
inc
xor
fwait
pop
gs
inc
out
imul
mov
mov
fldenv
jge
shl
aam
dec
mov
inc
in
cltd
call
pop
add
cmp
or
inc
dec
cmp
icebp
lods
mov
icebp
and
sbb
pusha
jb
mov
mov
cld
or
outsl
mov
jbe
int
jne
in
sub
decl
jae
mov
and
dec
xor
std
leave
dec
scas
fdivr
cmpb
push
sbb
fiaddl
mov
mov
mov
sub
cmc
sbb
test
mov
mov
arpl
mov
lret
or
dec
stos
scas
dec
cld
mov
jge
or
inc
shl
sbb
outsb
cmp
sbb
pushf
fwait
repnz
add
lret
addr16
dec
sbb
adc
and
stos
or
loope
test
jnp
push
aam
pop
stc
insl
nop
ret
xor
mov
jno
jge
sbb
aam
inc
jg
movb
mov
cmp
pop
fidivrl
xor
dec
sub
mov
ljmp
ljmp
pop
cmp
jmp
add
mov
fisubs
outsb
in
in
stos
scas
dec
inc
jns
push
test
jmp
enter
lret
es
pop
fstp
out
mov
mov
sub
or
mov
dec
in
or
xchg
je
adc
mov
movsb
insl
imul
jmp
cmp
mov
pop
lret
xchg
shlb
ss
es
jle
mov
pop
sbb
mov
gs
loop
sbb
sbb
sub
push
adc
imul
imull
inc
in
cmp
lret
lds
imul
stc
or
mov
test
leave
arpl
repz
and
imul
dec
dec
sub
inc
inc
add
aas
push
jb
jb
popl
cli
ljmp
insl
mov
test
fmul
mov
movb
jnp
xchg
xchg
xor
outsl
pop
cmp
jge
movsb
mov
dec
mov
dec
aaa
out
or
push
test
les
inc
dec
jb
mov
and
out
and
int
je
cmpsb
add
gs
or
mov
adc
add
mov
popa
and
dec
movsb
outsl
fsubl
shrl
mov
aam
pop
mov
mov
mov
cmp
out
inc
dec
dec
sub
cwtl
scas
iret
jg
or
sub
sub
add
pop
add
mov
hlt
push
cltd
inc
cmp
rcrl
or
ljmp
cmp
mov
shrb
pop
enter
mov
or
adc
mov
mov
mov
ds
fdivs
call
inc
mov
mov
fsubs
loop
gs
xor
clc
xlat
nopl
je
aas
scas
mov
std
mov
cmp
out
and
pushf
fwait
jne
push
out
and
lods
pop
inc
movsb
out
ficoml
imul
cltd
sti
mov
mov
aaa
scas
xor
or
ja
pushf
mov
push
in
xlat
xor
add
pop
jnp
pop
test
xor
push
ds
pop
stos
arpl
add
xchg
push
clc
mov
int3
out
in
jno
pop
cmp
xchg
fadd
dec
rcll
cli
sub
sbb
jns
mov
iret
sub
mov
cltd
and
adc
xor
scas
pop
jns
iret
sbb
imul
aaa
es
out
adcl
int3
adc
mov
pusha
shlb
cmp
sub
or
add
xlat
mov
push
mov
ret
dec
jp
movsl
mov
cmpb
lods
or
mov
add
add
icebp
inc
popa
adc
cmc
pop
stos
cmp
push
adc
jb
int
sub
outsb
aad
xor
int3
rorl
lcall
movsl
sti
jne
and
mov
and
push
pop
jle
xchg
fwait
out
div
adc
pop
push
mov
add
gs
inc
shl
out
sub
sub
lods
jbe,pn
js
idivl
in
xchg
or
jnp
inc
xchg
push
stos
and
mov
rcrb
loope
xchg
and
sub
or
loopne
jbe
les
cmpsl
sbb
int
rcrl
pop
inc
icebp
mov
mov
leave
loope
sbb
cltd
jg
je
pop
cmp
scas
xchg
or
and
test
mov
lds
sub
insb
imul
pop
daa
rcr
cmp
or
cld
es
cmpsl
les
fcmovnb
mov
add
cld
xchg
mov
jo
xchg
fldt
lods
scas
insl
xchg
into
outsb
std
mov
sub
mov
dec
dec
adc
pop
xor
jmp
mov
dec
cmpb
xchg
popf
adc
arpl
dec
ret
sub
aam
pop
movl
faddl
dec
fwait
jae
dec
dec
imul
jbe
fldenv
cmpsl
xor
xor
mov
push
xchg
cmp
or
inc
std
sti
pop
cli
xchg
ss
lahf
pop
xor
mov
xchg
fwait
dec
adc
xchg
testl
aaa
js
sbb
mov
jl
inc
ret
movsb
mov
and
mov
cltd
sbb
dec
nop
jmp
sbb
lock
lea
jmp
push
xor
icebp
cld
xchg
push
jns
mov
mov
cli
cmpsb
out
orb
lods
mov
push
ljmp
push
mov
jecxz
inc
pop
mov
sbb
pop
fbld
cli
lea
adc
js
cmp
pushf
stos
jp
xchg
add
sbb
ret
insl
and
rcrl
in
loop
jmp
lahf
ficoms
lods
sbb
jl,pn
in
flds
in
dec
or
jnp
mov
popf
or
and
loop
aad
inc
lock
xchg
movsl
mov
in
ja
es
pop
aaa
daa
scas
out
adcw
push
je
nop
outsl
pop
mov
repnz
or
lock
shll
add
out
les
test
mov
mov
cmp
nop
pop
inc
fildll
push
insl
test
sub
arpl
xchg
xchg
mov
xor
or
popa
push
or
xchg
mov
jne
xor
jnp
inc
add
mov
imul
adc
xor
xlat
arpl
sbb
jnp
cmp
aam
test
faddl
sti
sub
pop
and
mov
test
pop
rol
mov
dec
dec
xchg
push
outsb
sub
adc
test
jb
xchg
mov
mov
add
pop
sar
add
push
subl
aas
in
or
cmc
call
popa
jb
je
cli
call
fcmovu
js
fdivrs
add
and
aaa
mov
loopne
shrl
scas
mov
jo
icebp
es
leave
and
xchg
mov
lea
cld
push
sbb
inc
outsb
insb
xor
imul
into
mov
mov
fldl
mov
push
lods
test
xor
ret
fidivrl
push
or
addl
sub
mov
mov
dec
push
jo
dec
push
cwtl
out
mov
xorl
aaa
hlt
dec
inc
es
fsub
or
pop
std
mov
out
das
stos
arpl
inc
shrb
loopne
lds
and
int3
xor
mov
add
shlb
in
mov
popa
pop
or
pop
cmp
lods
hlt
scas
sbb
lods
inc
jbe
push
adc
push
jge
xor
mov
out
inc
ss
test
mov
dec
call
repz
test
add
push
stc
sub
inc
stos
data16
mov
jl
push
into
mul
addr16
jae
scas
xchg
in
lods
fiadds
das
movsb
pop
hlt
lahf
mov
and
xor
in
jl
mov
stos
pusha
inc
loopne
in
adc
fnsave
pop
aam
cld
shlb
add
xchg
dec
push
jo
and
push
jge
xchg
ljmp
fsubl
test
mov
hlt
fadds
mov
mov
leave
scas
or
movsb
lds
jge
fwait
es
in
lods
and
push
jl
movsb
lods
mov
pop
jo
xchg
jle
aaa
fadds
aas
fistpl
test
pushf
dec
jg
lea
bound
movsb
bound
insl
pushl
testb
cmp
mov
and
push
mov
sbb
cmp
mov
dec
andb
test
cs
jnp
aas
ds
ret
sub
mov
lea
sbb
aaa
jp
push
cmp
popa
inc
fimuls
fldcw
add
inc
out
xchg
lahf
push
pop
imul
dec
add
pop
push
pop
add
in
jae
dec
icebp
mov
imul
xor
stos
sbb
mov
inc
out
push
xchg
gs
inc
addr16
xchg
leave
scas
into
nop
or
ret
sub
mov
mov
fcom
mov
jl
iret
shr
mov
pop
inc
sub
clc
push
dec
stc
mov
stc
jmp
lods
push
pop
stc
aas
pushf
lds
and
xchg
fdivs
fisttpll
dec
in
sub
pusha
imul
dec
cmpsl
in
mov
and
xor
fdivrs
add
std
lea
popa
sarb
mov
idivl
loop
enter
pop
test
dec
xor
mov
lods
in
mov
inc
xchg
repz
jp
shl
add
sub
in
aas
popa
dec
inc
cwtl
inc
rcll
pop
iret
xlat
test
xor
xor
popf
push
js
jge
and
fnstsw
mov
inc
push
pop
sub
push
lds
cs
mov
mov
lods
sub
and
jb
dec
xchg
out
lods
daa
xor
fwait
sbb
push
and
notb
sbb
dec
xchg
mov
stos
andl
das
xor
mov
push
sbb
fwait
jno
lret
rolb
pop
popf
fidivrl
and
jno
xchg
mov
dec
dec
popa
sbb
jno
scas
xchg
mov
and
ret
outsb
hlt
outsb
lret
subl
xchg
pusha
jmp
xchg
repz
js
jns
adc
negb
mov
mov
ss
cmp
jl
ret
call
mov
cld
jmp
mov
mov
xor
adc
fildll
mov
lods
fcmovne
dec
out
sahf
filds
push
ret
enter
popa
mov
add
sbb
inc
lret
sbb
xor
xor
push
dec
adc
je
out
add
push
and
stos
jo
fst
jmp
lahf
mov
sub
in
call
push
loopne
push
cmp
jle
outsb
leave
mov
shr
sbb
dec
test
loopne
mov
rorb
sbb
dec
aad
add
push
cltd
or
sbb
adc
test
and
aaa
xchg
popf
xchg
test
fwait
push
inc
adc
out
std
push
dec
add
mov
sub
pop
ss
or
in
sar
fidivs
pushfw
push
icebp
ret
cmp
lea
imul
xor
pop
mov
repz
dec
sub
push
fwait
cmp
sbb
or
shl
nop
sbb
xchg
mov
mov
cmp
and
arpl
pop
dec
lea
xchg
js
lods
sbb
jp
add
in
dec
jns
push
pop
bnd
mov
js
and
push
rcrl
jne
test
es
std
in
jecxz
inc
lcall
mov
dec
outsl
jb
jg
in
jnp
mov
repz
jg
pop
adc
fcmovbe
xchg
sti
inc
cmp
test
filds
mov
xor
daa
lret
push
xchg
mov
int3
push
add
sbb
imul
add
testl
push
out
enter
jmp
lods
cmpl
fbstp
push
adc
gs
inc
push
jge
adc
or
sbb
bnd
addb
inc
leave
out
and
sti
imul
cli
dec
fistl
es
mov
mov
mov
mov
inc
arpl
jne
lcall
gs
in
ds
add
ja
jbe
int3
dec
rclb
pop
int3
cmp
mov
add
mov
cmpsl
adc
and
lret
mov
loope
out
jmp
push
outsb
add
clc
aam
add
push
jecxz
ret
mov
into
pop
cmpsl
cmp
sti
adc
ret
bound
leave
ljmp
mov
addl
mov
jp
add
jl
int
or
pop
popa
ret
dec
lds
push
jmp
adc
loopne
inc
outsl
iret
cmpl
push
cli
addr16
addr16
push
push
out
sbb
outsl
cmp
mov
mov
cmpsl
jl
inc
sbb
out
and
push
jecxz
sub
orl
jge
push
add
repnz
and
sub
adcb
adc
js
icebp
xchg
add
leave
mov
jle
ret
sub
mov
cmpsl
stos
imul
mov
pusha
ds
enter
mov
mov
mov
inc
test
stos
fcomp
mov
mov
inc
repz
fidivl
shlb
cmp
mov
jne
jb
pop
movsl
inc
lahf
pop
dec
xchg
cmp
cmp
lcall
dec
or
add
scas
adc
gs
in
push
sub
jnp
in
push
inc
and
cmp
daa
sahf
je
dec
jge
mov
mov
lds
adc
loop
xchg
adc
sti
jb
sarb
scas
leave
imul
ljmp
sub
or
add
int3
jp
mov
dec
jp
fdivrl
movsb
pop
jo
push
out
lock
shlb
mov
jmp
imul
adc
cmpsb
mov
je
xor
push
adcl
rorb
sarl
mov
les
mov
mov
fmul
push
scas
xor
fisttpll
fidivrs
nop
insl
inc
cmp
and
xchg
fstpt
pop
into
jmp
or
shll
lret
push
fstps
imul
mov
xchg
dec
sbb
mov
test
dec
js
xor
dec
push
jle
pop
mov
xchg
push
dec
mov
call
mov
lods
scas
lea
orb
imul
sub
mov
pushl
sbb
dec
push
sbb
xchg
sti
inc
cmp
jp
ss
mov
out
popf
push
push
pop
xchg
out
in
les
inc
mov
sbb
mov
shlb
cld
jge
jo
fwait
ret
push
sbb
test
xchg
aad
ss
repnz
mov
outsb
cmpb
in
icebp
ret
push
in
out
add
psubsw
call
mov
mov
mov
scas
xor
push
or
cli
xlat
lods
xchg
in
das
popf
or
cmp
and
adc
jmp
pop
add
push
sahf
fxch
loopne
aas
cltd
mov
shlb
out
test
inc
jge
test
es
ljmp
cli
out
cmp
sub
mov
adcl
adc
shr
cmp
jmp
incl
mov
jns
push
subl
or
push
ds
mov
push
xor
mov
test
mov
cmpsl
mov
movsb
jl
shrb
or
pop
dec
jmp
iret
popa
stos
test
pusha
test
jmp
mov
insl
add
stc
push
push
mov
push
xchg
inc
loope
sahf
pop
lock
jnp
mov
aam
xchg
mov
sub
gs
adc
pop
mov
in
js
rorb
insb
mov
cli
sbb
xor
popf
stos
cmp
xchg
inc
and
lahf
pop
cltd
push
test
pop
fcompl
lahf
stos
lret
sahf
jmp
movsl
rorb
fistl
jmp
push
stc
cmp
jp
pushf
xor
mov
fisubs
rclb
addr16
out
push
xor
adc
push
les
and
mov
pop
in
inc
sbb
out
push
test
mov
jg
lret
mov
sub
dec
stos
xchg
sbb
jecxz
mov
fcoml
sub
cmp
adc
mov
mov
adc
mov
mov
int
test
add
dec
into
addr16
mov
add
ss
and
insb
jl
jno
mov
xor
stc
add
arpl
or
sbb
cmp
mov
mov
orb
dec
push
pop
jle
out
cmpsb
jne
mov
popf
pop
jno
push
ljmp
into
out
fldenv
cltd
xchg
push
cmp
fidivrl
push
sarb
add
ror
adc
insl
stos
pop
xlat
mov
call
insl
inc
dec
and
pop
mov
cmp
outsb
add
inc
shlb
add
mov
lret
shr
lret
in
inc
xlat
push
jo
push
test
pop
sub
jecxz
bound
add
pop
cmp
and
dec
sbb
shll
ljmp
xchg
bound
outsl
cwtl
sub
into
mov
ds
xchg
fs
sub
sbb
or
in
ds
fnsave
in
add
cltd
cmp
shlb
dec
clc
call
loopne
out
pop
xsaves
in
into
icebp
sbb
lret
cli
or
add
and
pop
or
add
inc
adc
pushf
lock
xchg
loopne
inc
test
adcl
icebp
cmpsb
mov
jmp
orb
mov
in
int3
sub
ja
cmpsb
imul
pop
rorl
or
or
into
pop
ja
dec
data16
push
bound
cmp
repz
jge
mov
inc
test
mov
jne
dec
adc
adc
add
cwtl
out
stos
and
push
xchg
into
cli
mov
lahf
fistpl
pop
data16
adc
xchg
sti
cmpsl
pop
lret
subb
mov
test
out
mov
inc
in
sti
hlt
sbb
adc
jmp
movsl
out
mov
mov
mov
sahf
sbb
jle
and
leave
gs
aam
ret
mov
cmpsb
lods
sbb
loopne
test
fbld
sbb
add
xchg
out
cltd
divl
cmp
pop
ds
jmp
and
adc
iret
jecxz
or
inc
hlt
push
into
xor
mov
push
push
stc
test
and
std
mov
iret
pop
daa
movsb
sbb
mov
call
mov
out
inc
incb
lret
mov
popf
adc
daa
jb
jae
pop
pop
out
pop
mov
scas
mov
sti
popf
jmp
cmc
mov
cmpb
or
inc
insl
sub
push
shl
cli
mov
adc
jb
mov
sbb
mov
cmp
shlb
js
ror
fnclex
and
lock
add
add
mov
xchg
clc
pushf
inc
cmp
pop
ja
and
idivb
pushf
mov
pop
test
in
inc
les
fs
in
pop
aas
xor
out
sbb
sahf
dec
jp
xor
lods
jne
jne
add
jbe
push
repnz
gs
leave
test
mov
pop
add
lret
cmp
mov
sahf
mov
push
ficoms
jecxz
jmp
cli
xchg
aam
repnz
fwait
and
je
adc
mov
lret
ret
sub
dec
xchg
mov
lock
inc
mov
clc
jae
dec
dec
or
mov
mov
test
mov
cmpsb
test
das
hlt
mov
sub
imul
arpl
daa
xchg
add
rclb
jbe
pop
jecxz
out
jmp
add
into
mov
imul
cmpsb
loopne
mov
pusha
int
jp
fmul
cs
sub
sahf
pop
sahf
dec
aad
inc
test
xchg
inc
shrb
out
or
mov
ss
cmp
push
mov
lret
mov
dec
pop
rorb
cld
mov
lcall
rcrl
ret
ret
cwtl
mov
sub
and
repz
and
mov
ret
adc
cmc
mov
push
mov
dec
sub
lcall
sbb
mov
lcall
aas
xchg
fs
mov
xor
mov
adc
loopne
ss
cmp
insb
mov
sub
stos
jae
add
cs
in
orps
sbb
jne
jle
jecxz
or
mov
fistps
mov
fwait
scas
lcall
xchg
or
mov
mov
and
les
mov
cmpb
popa
cmp
insl
inc
jl
repnz
mov
inc
mov
and
mov
addl
repnz
pop
ds
xlat
pop
jmp
aam
mov
jo
mov
cmpb
test
test
roll
mov
outsb
sbb
movsb
mov
or
ficompl
xchg
jl
sub
or
rcr
inc
lahf
cmp
inc
pushf
adc
ljmp
iret
out
push
cwtl
sbb
xchg
aam
cli
popa
dec
xchg
ret
or
fnsave
cmp
test
js
cld
cwtl
push
jnp
ljmp
hlt
divl
inc
lods
outsb
cmp
dec
mov
pop
and
shrb
addb
mov
mov
jmp
add
mov
dec
jmp
sbb
add
clc
rcrb
xchg
push
movsl
mov
test
mul
add
sub
in
push
cwtl
addr16
aaa
cmp
mov
pop
ds
out
test
fldenv
test
clc
aaa
sti
cmpsb
pop
aad
pcmpeqb
outsb
movsb
repz
dec
or
fsts
cmp
aam
adc
fdivrs
scas
sub
mov
rclb
icebp
outsb
push
insl
ret
jb
push
inc
inc
xor
adc
inc
xchg
cmp
push
lods
push
cli
add
jl
add
ljmp
dec
mov
iret
test
sbb
push
xchg
dec
sbb
xor
ljmp
in
outsb
mov
xchg
pop
dec
pop
lods
push
nop
into
or
scas
lret
jle
inc
sbb
loop
pop
shr
lds
andl
arpl
xchg
sti
xor
mov
add
jno
adc
loope
fwait
inc
jo
ja
sub
xor
mov
xor
add
fisubrs
aam
add
dec
sahf
jbe
ja
test
push
xchg
cmp
push
lcall
cmpsb
dec
pop
ret
sbb
mov
jnp
in
mov
andb
sbb
push
in
mov
cmpsb
repnz
mov
hlt
jle
mov
movsl
cmpl
mov
mov
push
pop
jle
in
cmc
fwait
imul
adc
mov
dec
sbb
insl
push
and
jo
hlt
pop
mov
adc
mov
popa
test
cltd
addr16
jne
inc
mov
cmp
scas
pop
cltd
jns
ret
sbb
sbbb
xchg
dec
sbb
or
or
dec
jbe
jecxz
repz
jns
scas
push
movsb
rorb
jne,pt
cmc
stos
mov
sbb
leave
pop
test
sub
jge
xor
pop
cmp
loopne
testb
jmp
pusha
subl
mov
add
sub
enter
xor
jno
lock
lahf
adc
jo
mul
movl
add
fsubs
pop
push
and
nop
shrl
insb
cs
jae
xchg
mov
inc
nop
andl
lret
or
xchg
xor
in
xchg
rep
popf
mov
jle
push
mov
sbb
aam
and
popf
gs
add
movsl
aas
mov
jmp
lret
lret
adc
add
xchg
inc
mov
inc
je
dec
lods
enter
bnd
jo
inc
mov
ja
cwtl
inc
xor
cmp
out
mov
push
mov
dec
mov
fbld
in
dec
pusha
push
iret
and
xchg
xchg
jmp
dec
jae
push
inc
jne
mov
lret
test
rcr
test
mov
sbb
js
in
mov
jmp
mov
mov
aad
repnz
xor
cmpsb
mov
cli
jecxz
sbb
jae
sarl
lods
inc
aaa
dec
sahf
sti
imul
fimull
push
les
xor
sbb
fstl
fistps
sub
adcb
dec
test
jnp,pn
push
inc
jecxz
push
ret
mov
aad
pop
outsl
sbb
xchg
fmuls
or
or
or
mov
sbb
mov
in
dec
mov
mov
std
lret
loope
loope
test
dec
call
or
movsl
adc
jmp
mov
punpcklbw
jecxz
mov
bound
add
enter
ja
test
jne
orb
push
xchg
jo
gs
xchg
xor
enter
add
pop
mov
insb
clc
inc
or
push
adc
ret
push
adc
ret
in
fsts
in
cmp
pop
aad
ret
in
jmp
ss
dec
inc
lods
sub
and
push
and
push
xchg
leave
pop
stos
imul
jge
ret
incl
daa
out
or
pop
popf
cmp
fldcw
sbb
dec
sbb
in
mov
sbb
cmp
sub
das
insb
jb
aaa
mov
sbb
dec
pusha
dec
inc
mov
prefetch
cmpsb
inc
xlat
push
cmpsb
xor
mov
sahf
dec
cmpsb
dec
mov
stos
sub
mov
or
loop
mov
mov
push
jmp
popf
shr
adc
shll
stos
cld
lahf
adc
out
adc
mov
fmull
jecxz
test
push
cmp
leave
lahf
xor
sarb
sbb
mov
and
out
mov
adc
inc
mov
xor
cmpsb
clc
mov
jo
xchg
aaa
mov
es
push
sub
pop
nop
imul
push
inc
cld
psraw
sub
push
rolb
test
in
pop
imul
leave
push
movsl
arpl
push
sub
xchg
sbb
cmpl
ds
or
xchg
jle
xorl
sub
or
cld
sub
jl
negb
adc
test
jmp
test
mov
mov
mov
mov
add
xor
adc
imul
stos
fsubr
pop
cltd
sub
cmp
mov
push
fcoml
pop
fldt
sarl
in
clc
push
stc
out
movl
sub
test
mov
call
es
pop
in
shr
test
imul
lea
out
and
repnz
lcall
cmc
orb
rcr
jp
and
dec
pop
mov
icebp
cmp
xchg
xor
push
xlat
dec
inc
dec
cmp
cmp
push
gs
movq
cmc
pushf
jl
cmp
xor
dec
adc
rcll
mov
pop
jge
aam
repnz
popa
xchg
lods
jb
mov
jno
leave
mov
push
and
jno
jecxz
in
ror
inc
fnsave
jmp
jge
ja
sahf
mov
ss
pop
lahf
and
jl
push
aad
iret
mov
cwtl
jns
in
cmpsb
xor
lock
push
aas
or
inc
dec
push
mov
mov
insl
cmp
push
fcompl
inc
lods
sahf
and
jecxz
rcrb
mov
jb
mov
push
fdivl
fisubl
sub
jle
imul
sbb
in
adc
lret
pop
enter
sub
and
orl
sbb
cs
inc
int3
jb
mov
rclb
stos
jmp
das
test
into
mov
sub
fdivl
mov
mov
js
and
testl
jle
lock
lret
outsl
in
bound
cld
test
xchg
sbb
negb
stc
outsb
out
ja
sbb
sbb
xchg
push
mov
fsub
aas
push
loop
mov
or
ljmp
mov
xchg
push
in
add
pop
test
push
stos
xchg
add
in
cmc
sub
inc
adc
add
cmpsb
pextrw
push
addl
dec
stc
sbb
pop
jmp
add
bound
bound
pop
adc
js
hlt
or
adc
stc
xchg
hlt
and
cmpsb
int
out
push
jle
lds
or
das
hlt
mov
scas
fnstcw
cli
inc
cmpsb
jbe
pop
xor
jp
cmpsl
lods
js
fidivl
fdivrs
notb
sub
cli
pop
cmc
scas
mov
cltd
mov
and
mov
xlat
push
inc
imul
adc
adc
ror
test
xor
icebp
scas
shlb
jecxz,pt
mov
test
mov
mov
lret
push
mov
leave
leave
inc
mov
loopne
in
int
sub
shll
cmp
push
out
enter
orl
xor
jg
pop
and
fucomip
jb
outsb
ret
data16
adc
cmp
jge
mov
out
imul
mov
lods
adc
das
jmp
dec
sbb
pop
xchg
sahf
nop
and
inc
pop
xchg
mov
lahf
hlt
out
jecxz
int
enter
inc
pop
je
and
dec
rolb
jg
loope
mov
test
add
push
push
out
or
icebp
out
xchg
cmp
scas
sbb
loope
sub
mov
push
jb
push
outsb
pop
inc
aas
aas
inc
std
rcll
xchg
mov
stos
not
sbb
imul
lahf
jecxz
std
dec
lret
inc
shl
adcb
arpl
into
push
inc
inc
test
scas
adc
enter
inc
data16
pop
aad
in
cmpsb
xchg
out
test
cmp
xchg
sahf
and
stc
pushl
jl
lods
pop
xor
loop
aam
mov
cmp
mov
cmp
movsl
cmp
pop
outsb
sbb
xor
sbb
lea
test
mov
arpl
and
ja
fistpll
and
push
test
dec
std
mov
add
cmp
and
jbe
cmp
dec
outsl
movsl
jbe
lods
ljmp
sub
mov
dec
in
pushf
push
mov
push
sub
andl
leave
jne
xchg
ja
or
xor
dec
loop
cwtl
xchg
push
mov
push
adc
add
ss
int3
ja
sub
pop
in
fcoml
mov
push
xlat
mov
insb
or
sahf
jl
and
das
cmc
iret
or
ret
clc
jne
mov
push
push
sub
dec
lods
xchg
imul
rep
pop
mov
pop
xchg
fldlg2
dec
cmpsb
decl
pop
dec
movsl
sbb
outsl
lcall
fbld
sbb
jae
sbb
mov
scas
call
nop
mov
aad
loope
out
outsb
cmpsb
mov
xchg
cmp
subb
fmull
cltd
jge
jno
mov
cld
push
mov
mov
pop
mull
and
outsl
adc
push
or
les
mov
pop
fs
mov
test
pop
jge
push
cmp
pop
xor
into
and
mov
lahf
jnp
gs
dec
adc
mov
inc
outsl
bound
or
sbb
shlb
or
out
inc
mov
cmp
inc
imul
add
test
aad
mov
mov
cmc
es
orb
inc
in
cmp
cmp
popa
insl
xchg
xchg
mov
pop
fucompp
jnp
stos
test
pop
in
jecxz
fadd
adc
dec
or
inc
mov
xor
xor
pop
dec
mov
push
add
ljmp
add
loop
push
or
movsl
dec
test
adc
xor
pop
rol
sbb
jns
inc
ja
adc
pusha
lret
cs
movsl
pop
sbb
cmp
inc
pop
mov
dec
cli
push
push
nop
insb
pop
cmp
push
mov
add
lret
out
loop
add
loop
mov
jae
push
out
cmpsl
xchg
xor
std
jmp
and
xchg
adc
sub
fists
filds
inc
push
out
fstps
push
rcrb
or
bound
dec
jmp
ror
in
loop
pop
jmp
mov
mov
lods
popa
inc
xchg
jns
or
in
xchg
add
jae
dec
leave
ljmp
sbb
jb
cmp
pop
ljmp
mov
sub
lcall
in
xchg
sbb
push
incl
add
lret
jl
xor
mov
inc
cmp
cld
sub
mov
mov
je
sub
hlt
push
jg
pop
mov
repz
scas
fdivrs
stos
mov
fstl
pop
add
icebp
call
jae
es
and
jo
cmpsb
mov
fisubrs
xor
out
fidivrl
lret
and
xorb
mov
jne
pop
loop
dec
mov
loop
dec
aam
inc
mov
cmp
sbb
xor
je
mov
jmp
in
fsubs
ds
pop
jb
mov
jecxz
sbb
mov
lock
in
pop
call
sbb
aas
pop
shrb
or
ret
inc
dec
negb
or
je
add
cld
fcoms
mov
or
nop
push
popf
out
icebp
mov
insb
into
xchg
cmc
ds
jecxz
sahf
cmp
add
push
out
push
jg
scas
je
xchg
jl
movsb
mov
mov
ja
rorb
xlat
jnp
bound
and
in
jge
je
mov
inc
mov
inc
inc
mov
subl
cmp
xchg
add
add
dec
in
fidivl
dec
pop
cmp
ficoms
loop
mov
leave
mov
imul
or
movsb
mov
push
incb
dec
outsl
andl
mov
jmp
divl
sbb
cmc
dec
xor
cmp
and
mov
insb
out
push
add
jne
iret
push
jle
or
inc
lods
dec
fmuls
ja
dec
nop
adc
push
in
pop
cmp
mov
inc
cmp
repz
icebp
clc
mov
mov
mov
and
hlt
or
xchg
outsl
sbb
and
loopne
sub
fdivrs
ja
xchg
cmpsb
inc
test
sub
xor
lea
pushf
test
push
aam
cmp
push
jmp
js
pop
sbb
enter
push
test
loope
in
aam
stos
xchg
mov
fbstp
xchg
repz
mov
pop
xchg
or
jb
mov
mov
pusha
imul
and
test
push
bound
jg
mov
sub
xlat
hlt
dec
fucomp
in
cmp
sub
xor
xor
loop
mov
fmulp
in
gs
shrb
and
in
mov
ret
add
xor
dec
testl
jbe
sbb
push
repz
add
push
sarl
dec
popa
xor
xchg
pusha
addr16
addr16
fisttpl
xchg
push
push
inc
push
fmuls
push
add
push
mov
stos
jecxz
sub
or
scas
sbb
xchg
push
inc
or
les
rclb
jle
jns
cmp
lods
mov
adc
sbb
popa
cmpb
cwtl
cltd
cmpsb
mov
dec
mov
scas
loope
pop
or
aam
lret
push
push
and
mov
bound
jl
sub
lock
mov
mov
add
or
push
movsb
mov
mov
inc
rorb
in
cmp
pop
cmp
mov
rcll
jno
fcoms
jle
pop
or
mov
sub
dec
cli
mov
add
cwtl
push
aaa
imul
fmull
push
fsubr
xor
adc
cld
sub
pusha
add
movsl
jnp
ljmp
fbstp
lahf
cltd
push
shrl
dec
gs
pop
dec
mov
gs
lds
arpl
fadd
sbb
loopne
cs
push
sbb
loopne
jl
bnd
mov
cmpsl
push
adc
sahf
mov
pop
in
cld
push
pop
enter
cmpsl
xchg
jo
out
sti
ja
pop
dec
jo
out
jns
inc
fprem
cmpsl
out
mov
repnz
aas
js
xor
insl
mov
and
dec
push
sub
jecxz
add
subb
xchg
outsl
aas
int3
cmp
cltd
ret
jmp
mov
sbb
adc
and
lret
jle
push
int
in
clc
cmp
mov
loopne
push
pushf
cmc
pusha
lock
aas
mov
insl
push
pop
in
mov
mov
mov
cmp
push
or
push
dec
decl
and
xor
sbb
fdivrl
xor
and
dec
xor
dec
pop
pusha
adc
cmp
adc
adc
jmp
jmp
test
ret
jbe
imul
test
dec
daa
and
minps
dec
fs
out
ret
mov
mov
imul
and
shr
pop
jnp
fdivrl
xchg
divb
xor
add
jmp
rcl
xchg
sub
call
push
fcompl
sarl
clc
lea
into
cmpsb
cmp
imul
or
add
xchg
lahf
lods
loop
lahf
sbb
ret
cmp
in
sub
pop
xor
xchg
xchg
call
rcll
inc
jecxz
mov
call
cld
fwait
push
jp
daa
popa
jp
cmp
hlt
outsb
xor
and
pop
int
sti
rolb
push
addr16
and
ficoml
out
pop
mov
sub
js
imul
cmp
or
fcoms
add
mov
idivb
test
add
mov
mov
sub
sub
jae
in
mov
insb
sbb
jecxz
jo
in
in
mov
js
pop
cmp
xchg
dec
xchg
xchg
xchg
cmp
fwait
dec
scas
fidivrl
dec
cltd
cmpsl
sti
cltd
fadds
and
xchg
rclb
stc
inc
jo
ja
xor
inc
rorl
orl
in
stos
scas
sub
aad
or
xchg
jnp
pusha
loop
push
fistps
push
in
daa
push
shl
xchg
pop
xor
add
lahf
je
inc
mov
fdivs
rcrl
inc
or
add
dec
je
xchg
xchg
jmp
mov
mov
mov
or
push
xchg
add
dec
fisubs
add
out
sbb
pusha
mov
jbe
adc
call
xor
mov
or
sbb
call
cmpsb
stos
les
push
iret
cmp
mov
push
dec
fnstcw
test
scas
push
ljmp
in
filds
push
in
push
ss
jl
cwtl
es
pop
cmp
rcrb
jb
das
mov
out
pusha
dec
jae
pop
inc
jp
mov
or
mov
xor
inc
mov
mov
and
fs
out
das
sbb
cmp
paddsw
cmp
or
lods
aam
loope
push
jg
or
adc
dec
dec
mov
xchg
push
rcrb
mov
and
mov
add
inc
fcomip
lret
pop
fsubrs
out
pusha
in
insl
sbbb
ret
sub
mov
dec
ret
fildll
or
outsl
std
mov
sbb
ret
adcl
fs
rsm
cmpsb
loop
dec
test
shll
mov
pop
jl
jmp
mov
in
cs
insl
push
pop
cmpb
rcl
loopne
aaa
xlat
sbb
xor
add
adc
fwait
pop
aas
xchg
std
push
adc
cmp
in
fcmovbe
loopne
jg
pop
in
cmp
sub
push
shrd
and
inc
out
xlat
xchg
jge
jecxz
lods
das
jle
das
mov
fs
icebp
or
mov
xor
dec
push
lret
dec
test
push
std
push
bnd
mov
pop
movsl
dec
in
lds
add
lret
inc
xchg
dec
inc
mov
adc
inc
pop
mov
aam
mov
lea
popa
mov
lcall
xchg
lods
gs
sbb
jge
repz
or
imul
mov
out
mov
inc
stos
pusha
mov
dec
fs
inc
or
xchg
fnstcw
mov
dec
mov
lock
cmpb
scas
aam
adc
cmp
mov
sbb
mov
sbb
push
cs
mov
fisubl
mov
and
in
in
in
popa
cmp
push
add
push
push
je
dec
insl
pop
fistpl
out
mov
and
mov
scas
aad
adc
mov
inc
clc
cli
push
cmp
arpl
dec
and
fildl
and
xchg
dec
stos
mov
fs
xchg
mov
adcl
xor
xor
fdiv
insl
cmpl
sbbl
xor
or
gs
sub
xchg
in
adc
arpl
outsl
xchg
xchg
dec
adc
out
loopne
bswap
sbb
sub
scas
push
xchg
addr16
jg
mov
int3
popf
inc
pop
fistps
sti
cs
std
jae
xor
pusha
xchg
fcmovnb
in
shlb
addr16
sub
test
insl
mov
pop
pop
lock
stc
mov
jmp
lods
bound
sahf
fiadds
hlt
cmc
cs
xor
jnp
pop
cwtl
fcmovne
addl
lret
into
in
cmp
cmp
mov
clc
dec
into
sahf
fdiv
scas
fdivs
mov
gs
fldl
ljmp
jle
cld
fadds
sbb
mov
xor
sbb
mov
push
iret
leave
dec
or
cmc
pop
jne
repz
es
in
jl
dec
or
mov
mov
xor
add
sbb
and
xor
test
sub
push
xchg
xchg
pusha
repnz
mov
cmp
jl
lock
shl
jmp
push
or
jno
sub
mov
add
roll
sub
cmp
fcomps
lret
sahf
std
push
xor
jmp
sub
xor
push
jno
xor
repz
dec
jmp
mov
mov
pop
imul
dec
je
xor
lret
pop
aam
mov
popf
movb
sbb
adc
jbe
add
cltd
lock
jno
sub
sti
icebp
shlb
les
cmp
lcall
xchg
xchg
icebp
in
fiaddl
clc
es
pop
push
es
leave
adc
dec
xor
roll
mov
bnd
ret
out
mov
test
scas
mov
loop
xorb
mov
sbb
sbb
dec
mov
push
inc
xchg
sbb
movsb
mov
or
mov
jge
and
dec
mov
stc
mov
andb
inc
int
jmp
pushf
ss
movsl
pop
sbbl
xchg
rorl
or
orb
into
lahf
daa
fsubrs
dec
sbb
jl
inc
daa
test
sbb
jecxz
pop
push
andb
pop
xchg
leave
cmc
cmp
push
mov
js
xchg
add
movsb
push
and
insb
mov
ljmp
subl
pmullw
loope
orl
jns
or
daa
jnp
pop
mov
pop
into
sahf
fldcw
xor
pop
in
imul
sub
xchg
mov
sub
push
jmp
mov
jmp
inc
out
and
loopne
push
push
sbb
sbb
sub
lea
mov
scas
out
sbb
shlb
lds
xchg
push
cli
pop
mov
aad
test
lock
cmp
loop
sti
pop
ficoml
mov
ret
adc
pop
add
out
dec
pop
xchg
in
fdivrl
inc
cmc
pushf
and
lcall
push
insl
push
cli
jge
loope
push
enter
gs
fistpll
pop
lea
mov
arpl
insb
or
inc
jmp
fwait
sbb
arpl
loope
push
pop
and
js
cmc
lods
stc
add
lret
mov
es
mov
xor
jns
and
loope
sbb
mov
adc
or
inc
aam
test
shll
push
jmp
imul
out
sub
cmpsb
sub
loop
cltd
out
xor
adc
pop
stc
lods
dec
nop
rorb
andb
imul
fisubrs
mov
int
data16
sbb
jnp
add
mov
push
inc
adc
sbb
push
push
add
jecxz
mov
call
jae
or
cmp
and
mov
shlb
sbb
out
push
shll
pop
adc
repnz
fsub
mov
aaa
mov
cmp
lahf
clc
mov
add
mov
enter
std
and
divl
xchg
popf
call
jge
and
push
dec
mov
imul
add
xchg
xchg
dec
stc
inc
adc
mov
cs
push
into
lods
scas
idivb
ss
adc
das
pop
fs
cmpsb
out
arpl
push
xor
jge
nop
mov
fs
jl
fsubrl
rcrb
mov
out
xchg
je
and
pushf
aas
and
jbe
xlat
pushf
adc
enter
pop
test
push
iret
out
das
xor
pop
cwtl
dec
lods
stos
mov
add
mov
lods
in
jns
push
insb
cmpsb
push
pusha
cmp
xor
sub
mov
jg
mov
fists
push
mov
inc
cmp
es
or
loopne
jge
test
lock
jae
mov
or
push
adc
xchg
out
cmpsb
xchg
test
mov
loope
or
push
test
loope
sub
push
cmp
xor
mov
jnp
xor
stos
dec
shlb
insb
jbe
adc
cmp
subb
adc
ss
lods
push
xlat
and
fidivrs
das
lahf
stc
ss
and
in
cwtl
gs
fisubrl
mov
dec
das
and
mov
dec
push
cli
fs
dec
adc
iret
push
mov
lods
xchg
sti
mov
jmp
and
outsb
adc
mov
jnp
repnz
mov
pop
cld
mov
inc
daa
inc
push
or
ret
cmp
bndstx
cmp
js
xchg
push
and
call
push
sbb
jecxz
mov
outsl
mov
out
daa
cwtl
stos
pop
inc
clc
hlt
test
mov
fcompl
rol
pop
int3
loop,pn
xor
das
pop
mov
pop
xchg
and
pop
jp
int3
out
xor
sbb
dec
sbb
pop
fadd
dec
xchg
dec
mov
cmc
in
movmskps
fildl
js
in
mov
mov
sub
mov
mov
cmpsl
out
sbb
shl
dec
movntps
imul
jle
aad
mov
pusha
not
xor
arpl
xchg
xor
inc
shrb
in
repz
or
dec
push
movsb
jecxz
xor
mov
xchg
aam
inc
dec
push
pushf
sbb
add
in
jp
push
xchg
push
cmp
push
fcmovnb
jmp
pop
push
xchg
nop
pushf
test
jl
pop
cmp
lret
cmp
js,pt
xor
or
jle
mov
cltd
adc
xchg
xchg
fwait
mov
adc
cmp
jbe
aas
jmp
shl
xchg
xchg
data16
adcl
xchg
inc
jbe
add
addr16
cld
cmc
jecxz
pop
clc
lret
add
cmpsl
add
repz
cld
scas
cld
mov
mov
test
cmpb
in
mov
pop
add
dec
dec
out
int
aam
jecxz
dec
adc
pop
arpl
sahf
adc
mov
push
xchg
out
ds
dec
lods
jae
or
sbbl
push
sub
movsl
mov
jecxz
or
cmp
mov
and
mov
das
lds
xor
cmpsb
inc
icebp
repnz
dec
jmp
jnp
add
outsl
sbb
shll
add
and
lea
add
or
shlb
cltd
adc
je
lods
aas
je
sub
mov
ljmp
pop
add
xorb
std
popf
repnz
push
mov
inc
xchg
push
sbb
aaa
adcb
mov
sub
ljmp
or
arpl
sub
sbb
push
xor
cmp
jecxz
dec
add
cmp
mov
mov
dec
jmp
push
jmp
mov
mov
pop
mov
inc
hlt
push
or
cmp
mov
adc
subl
in
call
push
orl
in
je
stos
mov
daa
loopne
out
ss
jp
xchg
push
cmp
add
pop
xchg
movsl
lcall
dec
pop
iret
xor
xor
cld
test
ljmp
cmp
jo
dec
cmp
or
xor
dec
xor
int3
stc
or
fstpl
cmp
mov
sbb
jnp
and
dec
jb
fs
faddl
fadd
adc
in
out
lds
jb
test
repz
shll
and
fsubs
mov
mov
jg
push
push
filds
fstl
scas
outsb
cmc
shrb
jmp
xor
loopne
aam
xchg
and
dec
pop
test
xor
shl
cli
int3
and
arpl
jl
sbb
add
cmpsb
jae
or
jge
xor
mov
sbb
out
imul
int
in
push
dec
aaa
xor
cmpsb
inc
push
ret
push
xor
mov
lahf
xchg
fwait
insl
idivl
ja
int
sahf
popf
adc
loop
sar
imul
push
mov
sarb
sbb
pop
mov
dec
mov
xorl
cltd
dec
lahf
aaa
adc
sbb
call
mov
mov
jp
dec
jo
nop
jle
mov
popw
out
inc
mov
rolb
call
jle
test
addr16
xor
testl
nop
mov
pushf
cmp
mov
dec
dec
rcr
insl
push
jecxz
adc
add
fcoms
popa
cmpsl
mov
pushf
insl
scas
ljmp
dec
or
inc
push
pop
fdivrp
lahf
mov
test
cli
push
xchg
scas
or
aas
out
out
add
out
cmp
push
sbb
inc
xor
xlat
mov
insb
ret
pop
ss
ficoms
mov
out
imul
int
rcll
test
cmpl
mov
or
sub
pop
pop
push
fisttps
insl
lea
pop
cld
add
test
and
mulb
inc
sbb
fsubl
fmulp
push
std
fwait
cs
je
inc
pusha
loop
stos
cmp
shlb
mov
inc
cli
movlps
mov
sbbb
scas
mov
lret
pop
or
push
jo
and
repz
dec
adc
int
shrb
xor
inc
mov
pushl
out
leave
xor
push
jmp
stc
inc
aas
loop
pushf
cmpsl
adc
push
rcrb
jb
int3
xchg
filds
and
lods
inc
inc
xchg
mov
mov
mov
jge
pushf
iret
add
out
lret
and
adc
sarl
stc
push
jne
pusha
pop
imul
bound
mov
aad
mov
jle
imul
or
repz
inc
jnp
jle
sbbl
fcomps
dec
aaa
or
mov
and
sbb
mov
dec
ja
leave
ja
shl
repnz
mov
sahf
addl
incb
iret
insb
bound
add
sub
pop
leave
push
xor
outsl
ret
jecxz
push
das
je
sub
and
fs
imul
cmp
lods
add
out
add
or
inc
pop
idiv
sub
insb
mov
aaa
ret
inc
dec
push
pop
in
cmc
pushf
inc
xchg
movsb
bound
mov
fcoml
dec
out
andl
jp
je
jg
or
les
ret
imul
inc
outsl
and
cmp
sub
add
pop
mov
mov
push
xchg
sbbl
cmpsb
insb
or
add
mov
sbb
lods
push
adc
fdivs
std
inc
sub
sub
in
push
ljmp
inc
mov
sbbl
lcall
pop
mov
or
sbb
and
add
mov
mov
ljmp
push
bound
adc
jne
push
out
cmpsb
or
cli
pop
and
or
jmp
jne
jp
iret
cmp
pop
pop
test
inc
ds
add
repz
ds
cmp
aaa
xlat
dec
mov
xchg
rcl
and
ds
sub
fwait
xchg
in
mov
xchg
cmp
je
int
arpl
mov
mov
xor
in
inc
out
and
gs
andb
add
add
rorl
dec
iret
push
fs
dec
or
fmuls
jl
cwtl
mov
jmp
insb
lcall
mov
pop
arpl
xor
or
ljmp
outsl
std
cmp
sti
inc
fwait
jge
lcall
sti
fimull
divl
insb
fadds
mov
shlb
gs
je
out
mov
pop
and
xchg
add
push
inc
mov
shlb
fildl
loop
mov
sub
mov
ficoms
mov
dec
lcall
sub
mov
jno
sub
ret
mov
loope
xchg
push
cmp
cmp
jno
push
xor
pop
outsl
mov
lcall
add
test
jp
sbb
retw
mov
lcall
cmp
mov
les
push
pop
xchg
enter
jg
pop
out
pop
xor
test
inc
inc
jle
ret
xchg
or
cmp
test
dec
cmp
repnz
push
and
add
scas
jae
mov
or
subl
and
stos
dec
mov
add
dec
dec
xor
inc
je
xchg
pop
sbb
push
mov
adcb
mov
cmp
pop
in
pusha
mov
dec
jns
jge
mov
jno
add
xchg
scas
push
cwtl
xor
push
add
loope
inc
iret
dec
push
stc
movsb
js
pop
outsl
sbb
jg
or
jbe
adc
jle
mov
dec
ss
xchg
xchg
dec
aaa
sub
sub
es
xchg
mov
lcall
adc
cli
ljmp
popa
xor
into
adc
xor
lret
mov
pop
cltd
dec
mov
fadds
lret
push
outsb
add
stc
mov
inc
add
sbb
sbb
inc
mov
sbb
mov
push
sub
lahf
or
sub
ret
cli
clc
sbb
cmp
xchg
icebp
inc
and
adc
mov
sub
cmpsb
inc
push
pop
incb
movsb
dec
xor
in
jecxz
mov
add
mov
mov
or
sub
inc
pop
xchg
dec
push
idiv
fiaddl
mov
sbb
ret
push
dec
dec
into
scas
adc
mov
push
enter
leave
push
pop
xchg
sti
les
jp
push
fsubp
sbb
xchg
lahf
jl
add
jecxz
stos
popf
or
stos
mov
sbb
out
fdivrp
sbb
mov
xchg
push
jp,pt
lods
mov
push
addl
and
rorl
out
and
mov
mov
pop
add
push
stc
dec
inc
subb
add
repnz
mov
cmp
adc
andb
xor
lods
push
pop
cmp
test
lret
jg
mov
xchg
insl
jae
jne
mov
vmovaps
mov
inc
or
mov
int3
pop
mov
pop
rcrb
add
in
xchg
outsb
cmc
jno
iret
adc
lret
andb
paddusb
or
into
enter
add
or
mov
xchg
cmp
shrl
sbb
push
int3
in
jmp
pop
arpl
jg
adc
dec
or
inc
data16
divb
or
mov
jmp
and
andb
pop
sbb
fsub
sub
jp
and
push
insb
gs
das
and
xor
push
xchg
into
fistps
pop
and
sbb
bound
movsl
sub
cmp
bound
pop
or
mov
sub
movsb
add
movsb
adc
mov
push
fildll
adc
js
data16
js
vpmaxsw
fucompp
out
stos
cmp
les
aas
mov
mov
stc
shrb
and
xchg
jne
add
jp
les
xchg
mov
push
push
pushf
shl
mov
repz
das
and
push
test
scas
jmp
sbb
xorb
inc
pop
dec
cmp
add
imul
movsb
lods
dec
clc
mov
mov
jno
cltd
xor
out
testl
loopne
mov
scas
mov
icebp
dec
sub
fidivrs
in
test
pop
xor
ret
inc
rorb
das
cmp
cmp
repnz
cmp
cwtl
mov
cmp
cwtl
dec
mov
sub
jle
cmp
push
or
out
mov
fcmovne
cmp
popa
adc
ljmp
xchg
push
aaa
and
clc
in
push
mov
cwtl
push
xchg
mov
mov
xchg
loop
xchg
test
out
dec
add
pop
fbstp
pushw
popf
std
in
imul
fbstp
add
and
and
in
rol
or
pushf
adc
or
loop
mov
les
aaa
add
jns
test
aad
mov
mov
or
add
mov
push
cmpsb
scas
fwait
jbe
sbb
jg
jecxz
jnp
inc
arpl
movsb
jle
push
js
wbinvd
lahf
dec
mov
mov
ret
jb
or
cmc
lret
cmp
cmp
int
xchg
cld
mov
or
or
jb
pop
pop
int3
repz
sub
push
jne
mov
mov
sbb
insb
dec
testl
ret
insb
and
ljmp
clc
xchg
push
cmp
shrb
imul
out
int
insb
add
imulb
cmp
cmpsl
push
loopne
sbb
mov
xor
ds
mov
xchg
adc
mov
stos
movsb
imul
cmp
pop
or
cmpsb
mov
mov
add
cmpsb
popa
sub
dec
rolb
cli
das
popa
iret
dec
pop
push
dec
pushf
std
jno
test
push
sbb
cltd
out
test
jmp
jmp
popa
lock
shrl
nop
addr16
into
js
cmc
js
xchg
push
cmpl
cmp
push
push
mov
dec
sbb
orl
addr16
jnp
jmp
out
sub
or
stos
xchg
pop
int
sbbl
cld
imul
sarl
mov
mov
into
cmpsb
sarl
adc
aad
pusha
das
test
xorb
movsb
ret
cld
lret
inc
cs
fs
aaa
sub
push
mov
or
mov
xchg
mov
ret
pop
xor
cmpsl
lcall
jl
jg
sti
mov
jl
out
outsb
push
ljmp
inc
mov
ja
cmp
mov
or
add
jmp
sbb
inc
aad
jge
adc
xor
or
mov
xor
cmp
inc
xor
jno
mov
mov
or
cmp
xor
inc
icebp
cld
add
jp
dec
add
pop
in
hlt
sti
fst
stos
add
mov
cmpsb
push
mov
add
data16
mov
xchg
sbb
dec
fmuls
adc
lret
inc
popa
sti
sbb
mov
leave
out
xlat
lods
and
push
push
or
iret
pop
mov
xchg
xorl
aas
or
movsl
jno
cwtl
ret
test
pop
popf
ljmp
mov
jo
inc
mov
inc
fs
popf
loopne
push
testl
pop
push
sub
ret
jbe
and
inc
cmp
inc
seta
aaa
lret
or
adc
notb
out
mov
testl
mov
imul
mov
out
fdivrl
pop
pop
or
stos
stos
mov
adc
sub
jns
pop
ljmp
cmp
push
movsb
shlb
and
mov
outsb
add
cmpsb
fistpl
out
sub
xorl
sahf
ret
std
jbe
fisubs
mov
cmpsl
adc
cs
adcb
sbb
cmpsl
pushf
jl
lock
mov
sbb
out
popa
cmp
movsb
lret
mov
sahf
pop
or
and
jmp
sbb
aad
dec
adc
inc
mov
pushf
insl
push
xor
dec
dec
dec
mov
jmp
or
jo
xchg
mov
jmp
mov
movsl
cli
sti
add
popa
fistpl
jno
mov
mov
sub
repz
push
imul
hlt
xchg
xor
push
mov
lea
cmp
mov
mov
jle
jns
xor
test
mov
xchg
scas
repnz
mov
in
push
hlt
cltd
sti
xorl
pop
fisubrl
repnz
add
std
dec
hlt
and
mov
mov
jg
je
adc
mov
rcrl
ret
sub
addb
stos
sbb
xor
jp
inc
iret
mov
push
in
fs
mov
mov
cmc
sbb
imull
outsb
mov
xor
mov
sub
bound
scas
outsl
pop
jge
rcl
inc
icebp
je
jmp
aas
lods
sub
inc
and
out
clc
dec
pop
and
jbe
push
ret
and
pop
jo
push
mov
pop
mov
push
mov
and
push
fsubs
loope
xlat
js
xchg
popf
jo
push
push
imull
lods
dec
into
ljmp
push
fimull
test
jne
add
mov
push
out
scas
push
xor
lahf
xor
adc
sbb
mov
clc
outsb
lcall
into
adc
mov
test
dec
test
lods
out
push
mov
dec
sbb
jp
ja
aad
mov
daa
sbb
push
mov
sarb
mov
fcmovu
cmp
in
out
mov
sbb
cmp
daa
pop
mov
fwait
jecxz
xchg
mov
sub
mov
jmp
jp
popl
cwtl
xor
adc
jno
popf
aad
mov
cmp
addr16
xor
fiaddl
add
sub
xor
cld
sbb
hlt
aas
xchg
ds
xchg
dec
push
aam
test
inc
mov
icebp
push
bnd
pop
fsubp
inc
loopne
pop
adc
mov
and
jbe
pop
out
cmp
mov
inc
add
sub
or
int
mov
xor
jo
cmp
push
nop
mov
mov
gs
xor
std
fcmove
add
pop
pop
or
xor
pop
inc
dec
add
daa
cmpsb
add
into
daa
xchg
lds
inc
push
mov
xchg
xor
cmc
sbb
xchg
out
jmp
repnz
jle
and
es
push
movsb
ss
ja
and
push
cmpsb
xor
js
mov
fsubs
mov
out
out
in
mov
push
mov
bound
in
mov
inc
nop
inc
adcl
ret
jp
movsl
jae
shrb
movsl
push
lcall
jmp
dec
push
movntq
out
testb
push
into
sub
mov
stos
xchg
mov
xchg
and
pop
div
xchg
movsl
in
dec
adc
xor
sbb
test
nop
cli
add
inc
add
xchg
push
sarl
enter
jecxz
mov
sti
movsb
push
insl
xchg
pop
fs
add
add
iret
mov
bound
aaa
leave
dec
out
pusha
imul
ret
cmpsl
adc
xchg
mov
adc
adc
out
add
push
rcll
mov
push
pusha
and
and
push
pop
out
mov
ss
shll
cltd
popf
xor
stc
jne
inc
mov
inc
jmp
jle
push
clc
inc
or
call
mov
add
xchg
scas
dec
mov
lcall
ss
lahf
cltd
jge
lock
xor
imul
not
adc
fs
inc
lods
mov
pop
sbb
dec
out
dec
loop
orb
mov
xchg
sbb
xor
mov
mov
rorb
fld
push
imul
pop
sub
icebp
mov
lahf
out
clc
movsl
sub
inc
pop
test
add
xchg
enter
mov
xchg
pop
cs
inc
inc
inc
sahf
scas
fwait
int3
sarb
call
jne
shrb
pop
fwait
cmp
popa
mov
aam
aad
pushw
mov
ds
xchg
jne
test
jno,pt
xor
or
xor
mov
test
aad
xorl
push
lods
lods
test
adc
cmp
cld
in
pop
inc
push
dec
popf
out
xchg
push
sub
in
and
pop
sti
dec
mov
test
adc
in
outsb
dec
into
dec
sub
pop
pop
scas
mov
push
sub
push
mov
lea
fcompl
sti
jg
or
ss
push
pop
cmp
adcb
mov
insl
insb
in
stos
cmpsl
out
mov
jbe
add
nop
lcall
sub
and
pusha
dec
mov
mov
jo
xchg
lea
sub
jb
and
lods
mul
enter
adc
ret
arpl
cmp
fmul
sub
movl
ljmp
push
add
imul
mov
mov
mov
sub
dec
rcl
xor
add
xlat
hlt
sbb
ret
pop
mov
testl
cli
incb
cli
jp
stc
xchg
add
mov
ficoms
mov
movsb
sarb
xlat
mov
jge
ret
test
xor
lock
sbb
mov
lret
add
aas
test
mov
cmp
or
mov
int
add
repz
and
fcompl
adc
mov
imulb
inc
pop
dec
sbb
int3
shrb
pop
scas
jge
mov
ljmp
sbb
daa
popf
mov
xor
sti
xchg
stc
decb
leave
insb
cmc
mov
into
xor
leave
mov
divb
mov
mov
mov
pop
and
and
daa
jbe
enter
push
pushf
hlt
sub
pop
or
stos
sarb
xorl
lods
xor
pop
out
mov
data16
popa
repz
lods
rolb
roll
push
enter
dec
jae
loope
in
inc
mov
mov
sub
int
pop
out
cmp
cmp
repz
iret
idivl
dec
sub
adc
insb
jbe
fisttpl
insb
imul
enter
fistl
mov
jmp
adc
movd
adc
lods
sti
stos
shlb
sub
jb
loop
jp
xchg
pop
mov
fnstsw
or
cmpsl
mov
cmp
fistpl
sbb
cld
xor
cwtl
in
mov
sbb
lcall
mov
sub
aaa
adc
scas
rcrl
into
mov
das
fstl
xor
outsl
bound
inc
sub
xor
lahf
adcl
dec
call
pop
lods
inc
aaa
enter
xchg
rorb
push
inc
jno
push
cmp
sbb
add
xor
sub
out
jle
mov
sub
add
sarb
repnz
lods
loop
xchg
lret
sub
sub
cmp
and
jb
idivb
int3
loope
mov
mov
adc
inc
pushf
rcll
mov
imull
inc
push
inc
sahf
fs
test
xchg
test
add
ljmp
mov
sub
inc
imul
xor
pop
rcrl
gs
mov
xchg
imul
mov
lock
xchg
das
pop
and
and
scas
sbb
movsb
xlat
mov
push
cmpsl
rcr
and
leave
xor
mov
mov
lods
in
hlt
fimull
popa
jmp
pop
dec
popa
inc
loopne
stos
xchg
sti
ds
or
sbb
lods
cmp
xor
cmp
inc
pop
mov
add
jne
pop
lahf
adc
pop
cmc
pushf
jo
iret
call
xchg
add
jno
idiv
cs
sahf
cmp
xor
pop
popl
in
daa
roll
inc
sbb
fists
adc
sub
jae
push
pop
push
es
xchg
mov
inc
push
fisttps
push
mov
push
push
mov
cmp
out
mov
pop
stos
push
es
jecxz
push
cmp
lret
jns
push
mov
or
adc
fwait
mov
das
mov
xchg
adc
subl
jle
dec
mov
outsb
mov
mov
push
loop
dec
sub
aam
cmp
or
fcmovnb
lret
je
push
mov
jne
lea
pushf
push
fs
roll
mov
in
sub
into
mov
inc
or
sub
mov
rorb
xor
mov
mov
into
lock
arpl
or
das
scas
sbb
pop
scas
out
jg
add
pop
push
jl
xchg
mov
rcl
push
or
dec
je
ljmp
roll
dec
das
repnz
int
out
dec
dec
mov
cltd
pop
in
imul
add
sbb
int3
adc
int3
fisubl
sahf
shll
scas
pop
mov
test
cmp
mov
mov
mov
fnstsw
jmp
dec
js
jnp
das
adc
lds
mov
ret
in
cmp
cltd
mov
xor
ffree
scas
cmp
add
pushf
leave
addr16
pop
xchg
decb
test
cmp
fs
cmp
xchg
hlt
add
pusha
add
ret
pop
sbb
mov
gs
push
mov
mov
cs
xor
into
imul
mov
or
scas
jmp
in
lea
fwait
out
xor
out
push
add
mov
jecxz
add
xchg
daa
push
mov
ret
mov
pop
pop
push
pop
scas
mov
xlat
test
dec
js
xor
jp
push
out
push
mov
gs
add
nop
mov
push
lock
mov
in
or
and
push
lahf
mov
add
push
movsl
enter
push
jnp
sbb
and
add
mul
nop
xchg
into
mov
in
or
mov
add
ret
shll
sub
dec
jg
jle
dec
lock
mov
mov
daa
push
test
push
dec
dec
loope
fwait
cwtl
fdivs
insb
push
lods
xchg
pop
insb
mov
jne
sbb
hlt
inc
std
aam
xchg
nop
sbb
je
dec
leave
xor
xchg
icebp
xchg
addl
cmc
add
xor
jbe
xchg
icebp
imul
shrb
xor
push
jae
stc
sbbl
jmp
aam
es
adc
sbb
iret
fiadds
mov
pushf
imul
icebp
hlt
mov
xor
lahf
mov
xchg
mov
fidivl
cwtl
lret
jecxz
scas
pop
lods
jnp
shll
mov
pop
dec
push
sub
push
cmc
sbb
sbb
jae
ljmp
push
push
and
mov
rclb
pop
popl
lret
sub
inc
mov
in
mov
inc
adc
cmp
icebp
push
mov
and
int
call
outsb
pop
sub
sti
test
sbbl
arpl
cmpsb
or
jmp
mov
popa
jae
xchg
pusha
pop
sbb
fildl
pop
mov
sbb
rcll
mov
push
sarl
imul
or
std
cli
push
push
pop
inc
mov
lods
pop
popa
mov
jae
cwtl
mov
iret
xchg
mov
mov
pop
xchg
and
lret
lret
push
sbbl
clc
frstor
pop
mull
frstor
int3
test
inc
test
int
movl
sub
bound
test
out
outsb
xchg
ror
je
sub
stos
int
inc
lods
popa
pusha
testl
sbb
mov
ljmp
mov
test
push
xchg
xlat
mov
pop
adc
movsl
mov
adcl
cld
jnp
or
shrl
inc
into
and
sbb
sbb
lds
loopne
push
pop
sti
sub
ss
sahf
hlt
or
adc
movsb
mov
out
cmp
push
scas
stc
fldt
ficompl
jecxz
xchg
test
in
xchg
xchg
repz
iret
das
outsb
push
mov
jl
sub
out
and
jge
dec
and
push
xor
mov
push
aas
repnz
push
enter
add
mov
je
inc
mov
push
movsl
inc
jno
mov
leave
sub
mov
inc
es
idivb
outsl
xchg
insl
pop
mov
icebp
add
loopne
arpl
hlt
lahf
xchg
mov
jbe
pushf
notl
movsb
pop
scas
aad
out
mov
mov
je
xchg
loop
jp
mov
jmp
or
xchg
jnp
dec
xor
sub
bound
mov
scas
adc
arpl
fisubl
jecxz
loopne
rorb
adc
and
and
cwtl
add
add
and
aaa
aad
jl
adc
sbb
xchg
out
dec
loope
in
rcrl
and
pushf
popa
xchg
in
mov
lods
mov
das
pop
add
cmp
xchg
xor
aam
inc
aas
inc
mov
icebp
lcall
es
lods
sub
je
lret
nop
sub
cmp
les
into
jbe
pop
sub
lods
mov
sbb
or
ret
mov
movsb
pop
jp
popf
dec
cltd
inc
cwtl
jae
inc
jae
fimull
dec
jmp
jecxz
lret
jp
insb
lods
mov
addr16
js
js
repz
mov
shrb
aam
push
mov
mov
orb
rolb
stos
iret
test
and
sub
dec
out
enter
ljmp
mov
jmp
mov
or
sbb
in
rcll
jns
adc
gs
pushf
ss
push
sub
pop
or
push
jmp
call
fsubrl
pushf
aam
push
or
jp
loopew
ret
xor
mov
in
or
dec
or
cld
jge
mov
ljmp
aam
fld
and
sbb
or
dec
ljmp
stos
pop
cs
popa
jge
mov
push
cli
test
push
inc
xchg
mov
fimuls
sbb
cmp
loop
xchg
stc
fistl
stos
scas
sub
cmp
adc
lret
sti
mov
pop
mov
sbb
mov
ficomps
dec
lds
jmp
lds
add
jbe
movsb
call
fsubl
stc
nop
fnstcw
mov
jmp
imul
loop
movsl
jo
or
ss
mov
and
nop
xchg
ds
aad
mov
frstor
and
jmp
jmp
sub
movsl
lods
fisubrl
or
add
outsb
cmp
sub
je
imul
scas
rclb
sahf
mov
cmp
mov
int
popa
leave
popl
stos
inc
mov
arpl
inc
or
fimull
lea
repnz
mov
jbe
mov
ror
mov
in
mov
test
ficompl
repz
loopne
mov
daa
or
push
jbe
push
in
adc
inc
push
xor
push
mov
rcrl
or
lods
mov
xchg
mov
mov
outsl
insl
or
fldt
pop
sti
gs
pop
add
mov
mov
loop
arpl
mov
mov
push
test
pop
lds
jno
or
pushf
xchg
data16
sbb
ret
mov
loopne
hlt
das
xchg
xchg
movsb
jne
add
shrl
adc
fcoms
gs
mov
jno
in
xor
fidivrl
or
popf
mov
pushf
or
sub
push
in
and
ret
lea
xor
mov
ret
jg
mov
sahf
rcr
out
out
jbe
xchg
loopne
inc
push
in
shll
mov
pop
jbe
stos
push
aaa
aas
adc
pop
fiadds
das
aas
push
ror
mov
jecxz
mov
and
push
cmp
sbb
into
dec
in
rorl
push
test
push
xlat
jmp
pop
push
test
ret
inc
sub
inc
lret
cs
cmp
pop
cmp
jnp
push
jbe
sti
loopne
aaa
mov
sbb
sub
aam
fldt
inc
std
sub
mov
push
movsb
mov
inc
ret
push
fldln2
arpl
push
outsl
sub
int3
test
and
cld
xor
int3
cld
orb
int3
add
test
sahf
pop
cmpsl
pop
jmp
dec
cltd
mov
dec
btr
les
repnz
outsb
fldl
push
jge
xor
test
push
movsb
movsb
push
cmp
scas
jge
mov
ss
jno
cmc
xchg
push
lds
fmuls
jmp
daa
icebp
insb
divl
push
fisubl
xor
repz
cmp
inc
cmpsb
or
cld
sub
pop
cs
imul
iret
mov
push
pop
inc
dec
push
mov
inc
int3
std
inc
mov
mov
pop
mov
negl
es
push
jo
loop
cmp
and
sbb
pop
cmp
add
push
fwait
pop
lods
and
pop
stos
insb
xchg
fnstsw
push
jb
out
jo
aad
add
pushf
mov
sti
sbbb
xchg
push
xor
and
cmc
xor
dec
adc
cltd
sub
ss
and
cmp
mov
inc
mov
mov
dec
popa
cmc
decl
add
flds
mov
dec
fwait
aad
pop
pop
xor
testb
pop
xchg
adc
jbe
lcall
and
xlat
rolb
sar
sahf
push
jnp
dec
add
movsb
sbb
xchg
stos
popa
stc
cs
inc
push
cli
mov
add
jge
jnp
test
iret
movb
scas
into
mov
repz
pop
sub
lret
popa
jnp
imul
xchg
into
out
xlat
cs
bound
jbe
cld
inc
or
and
pop
inc
sbb
cmpsl
dec
push
lea
push
adc
xchg
pop
jnp
jne
xchg
out
rcll
incb
xor
cmp
or
incb
shlb
packssdw
mov
pop
movsb
cmpsb
daa
popf
aam
icebp
lods
scas
nop
jno
sbb
lea
xchg
call
sahf
cmpsl
or
add
push
add
cmp
int
cmp
jae
in
loope
data16
xchg
pop
jp
in
jl
in
shll
xor
mov
add
lock
pop
mov
jno
lahf
xchg
pmulhuw
test
nop
jecxz
mov
popa
out
or
pop
push
push
mov
fidivrs
mov
jne
shlb
addr16
in
mov
push
negb
xor
lcall
movsb
xchg
jns
push
fnstenv
mov
pop
enter
jl
mov
stos
mov
sub
cmp
xchg
test
xor
adc
popf
cmp
push
sub
daa
movsb
aaa
nop
shrb
xchg
cmpsb
shrl
andl
imul
add
adc
loopne
cltd
push
les
insl
dec
ljmp
ud1
filds
faddl
pop
push
repz
dec
cmp
popa
pop
adc
sub
jne
loop
and
stc
dec
outsb
ret
mov
mov
jno
sub
int3
shll
ja
es
cs
sub
jle
test
loope
mov
inc
pop
mov
cwtl
pushf
push
rolb
sbb
xor
add
push
lea
mov
test
adc
and
and
leave
imul
mov
or
leave
add
scas
adcl
in
cltd
pop
pop
lods
xchg
decl
pop
test
stos
cmp
pop
cmc
or
into
inc
pop
ljmp
sub
addr16
push
shl
mov
into
adc
cltd
mov
fwait
dec
adc
sahf
fstpl
xor
pop
test
lock
popf
push
rcl
xchg
cmc
dec
mov
cld
jno
mov
in
cmpsl
addr16
lcall
daa
enter
clc
adc
xchg
adcl
and
push
sub
lahf
rcrb
imul
lcall
jmp
xor
mov
inc
pop
sbb
lret
xlat
mov
xor
jb
movsl
into
rolb
xchg
mov
out
lods
roll
call
adc
lret
pop
std
daa
jle
sbb
pop
loop
vmovlpd
mov
sbb
push
clc
adc
pop
mov
and
sub
shll
gs
loop
aad
cmpsb
iret
push
outsb
std
data16
test
fsub
dec
cwtl
xchg
jns
sub
stc
jecxz
adc
ret
cmp
or
adc
mov
pop
xchg
cld
xor
js
scas
gs
cmp
inc
cli
and
push
dec
pushf
and
sbb
les
loope
aam
xchg
push
mov
sarl
in
sbb
jbe
push
mov
push
jns
inc
xchg
in
mov
push
fstpl
xor
mov
push
fld
and
mov
mov
sub
loop
movsb
data16
sbb
mov
add
jg
push
and
cmp
int
xchg
cltd
mov
jp
ret
push
pusha
test
xor
test
sub
fsubr
jne
mov
in
sub
sub
movsb
cs
lods
stos
scas
sub
cs
cmpb
jo
pop
out
outsl
sti
js
leave
nop
mov
es
aad
sbb
pop
xchg
pop
sub
dec
mov
clc
or
inc
andb
inc
data16
loop
test
jmp
push
imul
pushf
push
andb
ja
push
mov
push
fcompl
mov
dec
add
sbbl
pop
mov
ss
sub
pop
outsb
aad
mov
adc
sub
xor
or
jae
inc
mov
les
in
or
lods
rorl
outsl
adc
test
mov
inc
in
loope
jb
test
cmpsl
pop
loop
inc
int
adcb
fucomi
out
fwait
movsb
sbb
jno
add
or
push
loopne
sub
out
iret
sbb
test
in
dec
mov
leave
lock
fstpt
lds
inc
repnz
imul
dec
mov
lods
pop
icebp
inc
mov
jp
jecxz
jnp
pop
dec
rcrb
or
mov
jp
push
in
dec
pop
mov
int3
cli
cmc
jb
loop
roll
adc
push
mov
inc
outsl
jno
push
adc
enter
jmp
repnz
mov
imul
movsb
mov
xlat
insb
and
mov
mov
leave
insb
cmp
decb
cmp
mov
mov
jo
cmc
mov
std
pop
shl
fldenv
cwtl
and
out
xchg
adc
mov
testb
xchg
aas
test
add
adc
in
insb
in
cmpl
mov
das
leave
xor
pop
cld
cmp
mov
mov
cli
aam
insb
aas
mov
addr16
pop
out
xchg
mov
cmp
int3
push
push
rcll
lea
pop
jnp
xor
clc
fxch
ret
and
enter
dec
mov
fwait
and
push
pop
push
pop
fsubrl
popa
dec
or
icebp
sbb
shll
xchg
test
loopne
cmpsl
mov
stos
ss
cmp
dec
icebp
xchg
add
insb
and
das
imul
sub
adc
inc
lock
cltd
add
dec
xchg
mov
mov
mov
push
pop
add
adc
xchg
mov
or
jno
pop
xchg
ja
shlb
mov
testb
sub
mov
out
out
std
xchg
inc
xchg
shrl
int3
push
push
lret
mov
lret
in
mov
push
adc
sbb
mulb
orb
mov
call
scas
xlat
pop
insl
rcrl
xchg
in
test
push
bound
lods
into
es
mov
xchg
mov
ror
push
enter
push
pop
mov
les
xor
ret
dec
aam
adc
pmulhw
mov
push
fwait
xchg
or
stos
cs
pop
jbe
or
cmc
out
mov
mov
aas
mov
stos
inc
daa
lret
repz
mov
cli
jecxz
sub
inc
inc
fwait
push
pop
fidivs
mov
adcl
dec
cmc
pop
aad
cli
push
cmp
ret
xchg
insl
mov
shll
nop
inc
jl
enter
pop
pop
cltd
pop
cli
call
cmpsb
xchg
aad
pusha
lock
xchg
add
icebp
aas
ficoms
insb
mov
mov
xor
hlt
or
into
jecxz
enter
addr16
push
sahf
mov
push
gs
clc
mov
jp
push
push
daa
pop
ja
out
push
mov
call
loopne
jns
out
inc
mov
sbb
mov
mov
inc
shll
lret
jns
out
jnp
filds
dec
cmp
mov
iret
xor
stos
stos
pop
lods
repnz
or
iret
iret
sub
divl
adc
push
mov
add
sub
repz
push
dec
ss
pop
add
adc
lock
xchg
rclb
adc
dec
mov
add
rcrl
mov
dec
and
flds
jbe
shl
mov
jne
stos
jg
and
and
mov
sbb
mulb
ret
cmp
pop
xor
mov
shl
adc
iret
push
icebp
fcompl
out
out
lcall
movsb
addr16
or
cmc
lods
xor
bound
enter
pop
ror
aas
mov
mov
int3
sbb
mov
mov
into
lds
es
xchg
and
sahf
lods
sub
cmpb
and
call
add
pop
and
adc
repnz
pop
hlt
gs
ljmp
mov
fistl
adc
loopne
jae
pop
xor
push
js
push
lods
ja
mov
movsb
es
outsb
shrl
push
int3
xchg
cmc
hlt
aas
stos
push
fdivr
outsb
aaa
inc
pusha
push
pusha
subl
push
add
lods
repnz
sbb
test
push
xor
or
fwait
stos
loop
jb
test
push
jbe
out
cld
cmp
jl
inc
ds
jl
dec
stos
or
mulb
cli
ljmp
loope
xchg
gs
adc
jbe
jle
jns
sarl
push
add
cwtl
push
xchg
xchg
movsb
lds
sarl
std
adc
mov
shrl
jns
sub
imul
lahf
mov
xchg
inc
sbb
sub
dec
xchg
push
in
lahf
jo
dec
test
adc
mov
test
hlt
outsb
lcall
jecxz
jae
cwtl
loope
fninit
in
stos
xchg
xchg
repnz
inc
pop
pop
outsb
enter
dec
std
cmp
pusha
je
push
pop
jb
sbbl
jp
sarl
or
jnp
mov
sub
and
rolb
sbb
shl
pminsw
out
fistpll
xor
out
lods
sti
add
mov
sbb
jb
add
pop
cmp
call
sahf
loope
cltd
push
addb
dec
outsb
outsl
pusha
sub
leave
adc
icebp
xchg
jno
out
xchg
and
lock
cmpsb
dec
dec
sbb
jnp
add
mov
cmpsb
mov
adc
add
pop
rclb
sub
jbe
and
jl
sub
mov
xchg
rorb
fdivrs
int
loope
inc
mov
repnz
ljmp
in
and
push
and
in
mov
jl
popa
sub
sub
jg
jb
mov
inc
push
sbb
xchg
movsb
repnz
lahf
stos
sub
test
sbb
adc
jmp
sub
sbb
push
fmull
mov
aaa
dec
lods
mov
ds
dec
push
flds
dec
sub
stc
mov
cmpsb
in
mov
decb
push
loop
mov
and
mov
push
dec
lea
mov
xchg
sub
mov
push
cmpsl
in
sbb
or
or
pop
ss
jge
inc
dec
in
hlt
lahf
add
ja
decb
lods
lock
adc
subl
add
adc
cmp
cmp
xchg
push
dec
cld
push
scas
sub
add
adc
shl
sbb
stos
xor
imul
mov
push
imul
xor
gs
inc
push
push
push
in
mov
mov
frstor
push
test
jne
pop
mov
imul
cmp
jecxz
adc
sub
popa
loope
xor
mov
xchg
push
arpl
std
mov
pop
mov
mov
das
out
jecxz
movsl
jno
cli
lods
cmc
jle
test
and
clc
cmp
out
jp
cwtl
push
call
ljmp
jbe
mov
stos
shlb
shl
xchg
mov
xchg
xchg
insl
ret
push
test
daa
sbbb
out
mov
xor
subb
push
aas
outsl
sub
scas
dec
xchg
es
pop
xor
sbb
adc
push
inc
mov
data16
cmp
add
testb
push
jno
iret
push
jle
insb
adc
sbb
fadd
push
popf
mov
ret
cmp
insb
jo
cmpsb
inc
jge
mov
lds
inc
in
fcomip
fisubl
adc
pop
ficoms
fldenv
jle
pop
push
or
data16
flds
cmp
cmc
call
loopne
cmp
push
and
inc
mov
inc
and
pop
pop
inc
xchg
mov
in
out
jle
sbb
cmpsb
pop
adc
lea
adc
movsl
ret
test
xor
and
test
cmp
fs
sub
dec
repnz
aam
or
cmp
hlt
lock
andb
pop
addr16
sub
pop
add
cs
bound
repnz
scas
out
jecxz
das
add
mov
mov
mov
imul
or
inc
dec
mov
mov
or
shll
loop
and
mov
mov
lret
into
sbb
fcoml
aas
fdivrl
push
scas
imul
mov
jns
shrb
mov
in
int
loopne
int3
jl
in
stc
and
sub
cmpsl
aad
lds
sbb
jge
rcl
popf
in
mov
cmp
ficompl
lcall
mov
aad
icebp
or
fisttpll
lds
pusha
lahf
add
or
inc
es
cmc
sbb
mov
inc
sti
cmp
call
xor
pop
dec
lret
inc
push
cmpsw
inc
std
lea
iret
jb
das
int
out
mov
aam
mov
xor
shr
jp
add
hlt
mov
xchg
jbe
hlt
add
mov
jo
bound
dec
out
push
les
cmpsl
test
fcom
dec
and
adcl
push
ss
cmp
xor
fdivrs
iret
cld
cli
roll
mov
jns
notl
fisubl
loope
les
scas
adc
ljmp
inc
mov
adc
mov
sub
ret
adc
add
insb
imul
cmpsl
cmpl
es
or
jle
in
mov
std
or
jbe
icebp
addl
mov
out
and
mov
pushf
inc
rorl
and
stc
push
sub
mulb
jnp
and
adc
jae
jle
mov
jl
and
aad
test
xchg
mov
inc
pushf
dec
push
sbb
adc
jne
sti
leave
arpl
xchg
xchg
les
cwtl
mov
push
fdivrs
in
xchg
ret
jnp
scas
movl
gs
xorb
mov
and
scas
dec
xlat
pushl
dec
sub
clc
fxam
lock
testl
sub
jmp
xorb
mov
imul
mov
mov
jecxz
adc
aad
jmp
sbbl
nop
sub
cmp
mov
and
jno
mov
xchg
ja
fimuls
loope
mov
into
das
pop
or
lds
pop
test
cmpsb
fstpt
insb
es
inc
cwtl
fidivrl
fs
pusha
cltd
icebp
jmp
outsb
mov
sub
pop
cmp
push
mov
shll
jns
fldcw
loop
jb
pop
cmp
xlat
and
pop
dec
jge
xor
fucom
dec
int
sbb
push
sbb
mov
push
xchg
cwtl
mov
stos
stos
add
mov
mull
dec
jnp
xchg
adc
and
sbb
fsubrl
outsb
push
int3
int
scas
and
icebp
and
xor
xchg
cmp
repnz
dec
mov
sub
mov
mov
push
dec
xorb
test
add
mov
cltd
pop
lret
rcl
mov
mov
jb
cmp
fsubl
adc
add
push
mov
pop
sub
jge
sar
or
pop
fidivrs
arpl
mov
ror
mov
ljmp
dec
cmovns
cltd
dec
in
fsubs
push
xchg
stc
jl
fbld
popf
enter
cmpsl
fnop
fsubrs
cmp
pop
mov
xchg
sar
roll
int
test
and
aam
hlt
lcall
fldt
cmp
int
rorl
jae
mov
mov
jecxz,pn
int
cmp
and
push
or
mov
mov
outsl
sbbl
mov
stos
jne
jg
xchg
mov
xchg
sbb
jg
pop
rolb
call
jp
addr16
cwtl
lds
mov
pop
mov
pushf
sub
clc
mov
ret
mov
xlat
sti
ljmp
dec
or
push
sbb
mov
xor
cltd
clc
std
fwait
in
lock
sar
inc
jb
out
stos
or
xor
add
mov
mov
xchg
cltd
scas
stc
test
xchg
repnz
mov
xor
inc
xchg
movsl
push
xlat
rorb
orb
mov
adc
add
andb
pop
outsl
pop
sbb
test
hlt
mov
cmp
mov
dec
cmova
xor
sarb
or
xor
jne
mov
inc
icebp
out
ljmp
sbb
pop
outsb
mov
push
xor
cmp
icebp
jae
or
adc
popa
ret
movsb
add
mov
imulb
fists
xor
push
repnz
push
std
push
lods
push
jl
stos
cmp
popa
jo
popf
cmp
outsb
adc
xchg
adc
outsb
aaa
push
and
cmp
mov
adcl
or
in
andl
add
popa
divl
mov
into
fucomp
and
xchg
popf
mov
mov
xorl
xor
andb
jp
jg
adc
push
adc
mov
sbb
inc
pushf
ret
das
lcall
loope
pop
ds
stc
sbb
mov
call
cmpsl
mov
repnz
xchg
jge
test
fstpt
xor
push
repnz
inc
sub
loop
hlt
add
add
push
pop
fisubs
es
xchg
dec
pop
or
cli
dec
pop
and
in
hlt
orl
call
sbb
xor
ja
jp
lds
mov
adc
jo
pop
in
mov
cmc
cmp
or
mov
out
add
sahf
push
loope
xchg
mov
sbb
inc
jno
call
lds
insb
add
or
cmp
inc
fldcw
aam
add
sub
push
xor
sub
out
lea
loopne
lock
shl
and
sub
or
ffree
pop
mov
xchg
cmp
push
mov
cmp
mov
jne
arpl
jmp
dec
leave
and
jne
mov
adc
rol
jne
imul
sbb
xor
add
and
jns
sub
xor
pop
cmp
mov
jp
xor
and
adc
mov
xor
and
adc
insl
int
and
add
cmc
push
lret
daa
cwtl
cmpsl
pop
mov
in
stc
dec
ds
rcrb
sub
cwtl
aad
mov
leave
sbb
and
call
fwait
xor
fmuls
scas
bound
ss
adc
xor
mul
mov
lahf
std
jnp
mov
stos
popa
or
das
or
rcr
jns
movsl
jae
shr
out
mov
bound
aas
jle
cmp
aas
orl
test
imul
test
sub
jns
jl
cltd
mov
movsb
and
xor
pop
mov
dec
jecxz
or
pushf
adc
addb
dec
das
pop
cmp
mov
xor
push
mov
loope
in
push
out
xchg
mov
cmp
and
jmp
push
xor
pop
xchg
js
rcr
xor
dec
xor
jns
iret
into
or
sub
inc
mov
stos
pop
jnp
aam
js
xor
es
repz
xchg
sbb
xor
xlat
cmp
sub
lret
bound
sbb
add
je
ljmp
stos
or
aas
adc
mov
insl
sarb
add
cmp
lods
dec
mov
pop
js
ror
mov
lock
pop
ror
shrb
and
sbbl
xor
aam
lock
mov
mov
push
pop
cwtl
loop
mov
push
lret
and
mov
xchg
jnp
lcall
inc
es
jg
and
roll
sub
pop
mov
aaa
push
arpl
pushf
jecxz
xchg
out
jecxz
fidivrl
sbb
inc
jecxz
xchg
dec
add
mov
mov
out
mov
fidivl
inc
add
out
ljmp
daa
dec
mov
popf
rolb
mov
lret
mov
sarl
mov
nop
cwtl
xchg
xchg
xor
mov
cmc
mov
push
ret
push
fidivl
pusha
xor
cmc
mov
sbb
add
out
xor
or
push
jbe
pop
cs
arpl
xchg
pop
jno
add
or
jmp
push
push
cmpl
mov
movsl
stos
dec
gs
add
pop
lret
cvtps2pi
cmpsb
xor
inc
outsl
test
scas
lds
repnz
cld
adc
and
leave
mov
push
mov
cld
aas
pushf
cmp
and
sarb
addb
cs
pop
rcrb
mov
mov
cmpl
ja
lcall
sahf
cmp
das
sbb
sbbl
xchg
call
insb
dec
push
ror
xchg
sbb
movb
shlb
icebp
shrl
jecxz
notb
xor
dec
mov
repz
in
hlt
sbb
jb
dec
dec
cwtl
rcll
mov
insb
push
scas
insb
xchg
fcomip
and
sub
mov
and
inc
repz
push
fidivl
jb
pop
adc
jle
xchg
push
ds
stos
fs
pop
fdivr
rcll
imul
pop
sti
mov
and
xor
ja
loope
push
inc
aad
push
test
jne
divb
ficoms
push
xor
or
xchg
mov
or
cld
xchg
or
and
pushf
jo
xchg
imul
mov
xor
adc
cmc
ror
jecxz
test
push
adc
inc
loopne
jne
cmc
mov
jecxz
add
mov
daa
adc
push
mov
test
pop
call
adc
call
aas
push
mov
fdivs
mov
and
stos
ja
test
mov
inc
in
xchg
xor
sbb
movl
cmp
sub
insb
lock
jne
pop
mov
cs
mov
jecxz
int
aam
bound
pop
addl
loop
aaa
mov
subb
mov
cltd
push
inc
ret
xchg
fstpt
xor
cwtl
lods
add
cmp
jecxz
lcall
cmc
shrb
fstpt
icebp
subl
xor
adc
sti
mov
aas
imul
jae
xchg
sbb
add
fs
ret
lods
enter
cmp
jge
rolb
fucomip
and
mov
sub
shr
mov
fnstsw
pusha
daa
inc
insl
mov
inc
jae
outsl
add
jns
in
test
mov
pop
in
sbb
jecxz
loopne
sbb
popf
ret
outsb
movsl
rorb
push
dec
cmp
sub
fdivl
adc
hlt
mov
loop
loop
sbb
inc
add
loop
fnstcw
out
jle
scas
insl
mov
out
xchg
push
dec
lea
adc
pop
dec
inc
lds
adc
sarb
es
dec
ljmp
mov
sarl
popf
imul
sbb
outsl
fidivrl
pop
lock
cmp
mov
mov
gs
pop
jmp
mov
pop
mov
mov
ljmp
mov
rorl
and
mov
int3
mov
mov
xchg
fcomip
out
cmp
add
push
adc
push
aad
cmp
mov
das
pop
pop
xchg
cmpsl
push
pop
mov
in
daa
jae
lods
pop
jmp
fs
fsubs
scas
mov
or
fld
or
cld
mov
mov
js
jl
xrelease
or
xor
inc
xchg
jae
sub
and
pop
add
pop
ss
scas
push
dec
es
inc
out
popf
btc
mov
ljmp
push
daa
pop
xor
stc
jmp
add
aam
popa
rcr
inc
and
adcl
inc
mov
aaa
sbb
push
inc
xchg
and
icebp
push
insl
bound
icebp
fcmovnu
out
daa
mov
fwait
cmp
dec
faddl
push
jg
repnz
out
cld
popa
lea
push
adc
sub
mov
hlt
lods
outsb
fsubrs
mov
movsb
cmp
push
mov
cmp
xchg
cli
rcll
test
cs
lock
loop
cmp
cltd
dec
inc
mov
lock
outsb
cltd
adc
jns
insb
and
jns
add
mov
scas
ds
inc
out
xor
mov
daa
nop
push
jae
inc
jge
and
gs
rolb
xchg
pop
scas
arpl
adc
mov
scas
mov
mov
jle
pop
pop
mov
sub
pop
xchg
push
out
inc
int
addr16
lods
movl
mov
mov
fcompl
fidivrl
jbe
aam
cmpsb
cmpsl
mov
in
jp
and
push
mov
adc
insb
mov
push
push
stos
icebp
sbb
mov
inc
push
insl
mov
shl
inc
outsl
ljmp
mov
push
nop
dec
mov
js
sti
insl
mov
push
sub
outsb
xchg
stos
call
ljmp
cltd
sti
add
fwait
jmp
int3
xchg
xor
and
sbb
xchg
push
sti
sub
fs
inc
int3
movsb
jl
xchg
mov
repz
xchg
mov
mov
outsl
ljmp
loop
arpl
adcl
mov
adc
cmpsl
in
pop
mov
xor
js
mov
and
icebp
sahf
ss
mov
jl
mov
mov
daa
add
xchg
fadds
idivb
lock
and
pop
xchg
mov
sub
das
aam
jmp
pushf
cmp
lds
inc
push
fldcw
sbb
sub
cmp
call
pop
lret
jne
inc
fstl
sarb
out
xchg
gs
and
jecxz
ficoml
adc
loope
aad
pop
out
sub
outsl
testb
xlat
jg
incb
dec
xor
mov
lahf
shl
dec
lock
xchg
xchg
stos
inc
or
cmp
mov
xor
out
adc
push
pop
jns
mov
adc
inc
inc
mov
call
mov
out
call
bound
sub
xor
adc
fdivl
push
jecxz
andl
repz
pop
out
psubsb
iret
and
xchg
pop
lods
adc
aas
xchg
imul
fcomps
rorb
jo
dec
jp
sahf
jg
pushf
out
push
xor
ja
int
xchg
sbb
movsb
push
std
cltd
cmpsb
stc
xor
cwtl
sbb
mov
push
mov
jno
mov
out
imul
sub
data16
and
sti
call
into
int3
fdivs
decl
push
rorl
ss
andb
pop
xchg
pusha
add
fistl
cmp
xor
cmp
sub
adc
add
push
sbb
cmpsl
xor
dec
divb
jecxz
cmpsb
dec
xchg
or
and
fiadds
int3
dec
and
dec
stos
dec
inc
fsubs
dec
pop
dec
iret
pushf
mov
bt
adc
pushf
mov
bound
outsl
jne
stos
lea
test
xor
ss
movl
mov
aas
mov
js
mov
mov
dec
or
shll
sub
fs
push
sbb
fwait
lea
mov
mov
jnp
pop
idivb
mov
addr16
popa
xor
push
sbb
or
in
cs
nop
stc
sub
jge
iret
xchg
jle
inc
push
test
cwtl
mov
cmp
mov
adc
cmpsl
and
je
rolb
in
jnp
pop
xchg
fs
inc
cld
and
mov
and
mov
lcall
and
lds
cld
xchg
or
scas
cmp
xlat
clc
mov
cltd
mov
jb
add
adc
mov
sbb
lcall
mov
daa
cmp
outsl
pop
jle
ja
fcompl
imul
mov
sbb
loope
flds
xor
sub
aam
and
les
sahf
in
and
loopne
mov
and
adc
push
sub
fdivs
test
dec
push
fsubs
rcll
mov
xor
clc
sbb
iret
pop
ffreep
orb
cmp
int
aas
add
adc
xchg
or
imul
into
fcompl
mov
adc
or
jo
js
movl
std
mov
loopne
notb
xor
mov
les
jl
mov
addl
scas
ja
insb
negl
repnz
ret
leave
dec
fistpl
cmp
xchg
or
rcrb
mov
cmp
mov
cltd
xchg
adc
xchg
and
mov
sbb
and
js
and
pop
xchg
and
mov
rorl
dec
add
xchg
xor
filds
fldcw
and
jo
push
mov
popf
inc
inc
fisubs
test
mov
add
mov
scas
inc
sub
xchg
and
mov
loope
loopne
pushf
dec
out
xchg
rcr
aaa
pop
fsubrs
xchg
lods
jmp
adc
pop
test
adc
cmpsb
lods
inc
mov
pop
shlb
imul
data16
call
fcmovb
jecxz
sbb
xchg
mov
das
sbb
pop
insb
and
pop
or
xchg
in
lock
xchg
mov
add
mov
mov
sbbl
dec
test
lods
or
push
loop
xor
pop
movsl
out
push
adc
adc
mov
inc
sbb
lock
lret
sti
xor
ss
fmul
dec
push
xchg
xor
loope
rol
jo
fcoml
push
or
push
es
pop
out
jle
jl
adc
repnz
sub
movsb
stos
mov
loopne
or
mov
lea
cmp
loope
adc
sub
xlat
clc
sub
lock
jg
fisttpll
ds
dec
push
aaa
sub
sub
nop
xchg
sbb
rorb
ss
scas
ja
jl
test
out
insl
pop
test
mov
ficoms
sbb
repnz
xor
cs
and
xor
test
add
mov
push
sub
xchg
clc
inc
adc
shlb
sbb
dec
add
xchg
sahf
xchg
or
or
xchg
pop
pop
sub
cld
mov
mov
repz
pop
cmp
cwtl
inc
leave
sbb
cmpsl
or
dec
jl
inc
lods
shll
or
int
into
lods
sbb
ja
test
ja
out
push
jmp
adc
adc
dec
or
jge
jns
xor
popa
or
data16
outsb
mov
rcll
and
outsl
clc
pop
pushf
enter
in
dec
push
inc
ss
lret
mov
mov
push
inc
cmp
adc
icebp
mov
in
mov
stc
xchg
dec
mov
sub
pop
lds
inc
cmp
jmp
testb
or
cmpsb
shlb
roll
xchg
insl
dec
mov
out
gs
xor
out
push
inc
cmp
add
adc
in
ja
pop
mov
xchg
and
sub
inc
ss
fsubrl
mov
add
jne
sbb
add
xor
out
mov
dec
push
jbe
test
call
add
movsb
jbe
pushf
pop
jp
mov
stos
les
push
xchg
andl
imul
fwait
bound
es
mov
popa
mov
lret
xchg
test
cmp
mov
xchg
push
mov
sbb
jo
dec
push
sbb
loope
and
test
loop
lahf
hlt
add
scas
xchg
ficoml
sti
or
in
inc
movl
or
and
xchg
int
push
mov
divl
fisubrl
jge
dec
inc
repz
inc
jbe
shrb
fidivs
mov
jp
inc
jb
or
dec
enter
hlt
push
out
mov
rclb
jne
adc
fsubp
ficoml
pop
repz
mov
xor
inc
dec
dec
or
pop
dec
xor
xchg
mov
into
adc
ss
sarb
test
sarl
stos
sub
cmpl
adc
or
sbb
daa
xchg
pop
jl
cmp
mov
leave
mov
jl
dec
jbe
adc
push
sbbl
lods
in
or
ss
or
sbb
fdivs
imul
pop
faddp
or
imul
push
or
mov
add
mov
inc
hlt
sub
mov
neg
and
mov
add
jg
icebp
inc
out
add
jne
loopne
test
jo
mov
adc
test
mov
addb
cmpsb
das
xor
jae
mov
sbb
jmp
pop
orl
pop
pushf
push
loope
xchg
cmc
cmp
mov
xchg
pop
in
mov
lahf
mov
movsb
lea
push
add
inc
leave
xor
cs
adc
lods
sub
test
subb
pop
inc
pop
cmp
add
fwait
jne
or
popa
and
lock
enter
jmp
dec
in
push
popf
or
and
mov
pop
insl
or
lret
jo
bound
sbb
dec
das
jmp
adc
fldcw
fldcw
mov
add
dec
cmc
push
pop
data16
jge
popf
in
mov
lret
fistps
pop
ljmp
cmp
fldt
mov
dec
cmp
test
pop
sbb
lret
subb
pop
aas
jmp
mov
pop
subl
enter
orb
adc
fsubs
out
jg
xor
cli
xor
clc
pop
popl
je
xchg
push
inc
cli
xor
mov
push
imul
sti
outsb
xor
add
mov
adc
and
icebp
pop
test
frstor
aaa
push
into
push
adc
pop
push
mov
mov
icebp
lods
cmpsl
mov
add
jge
roll
or
arpl
and
mov
mov
xor
ret
inc
add
into
fwait
jae
pop
scas
orb
sbb
cmpsl
pop
fstps
shrl
lds
dec
stos
and
mov
mov
dec
dec
dec
jp
fidivs
pop
out
lods
dec
cltd
push
cmp
inc
mov
ja
jbe
ret
push
cmp
xchg
sbb
inc
sbb
inc
roll
into
movsl
add
xchg
or
or
mov
and
jb
sahf
cwtl
push
mov
sarl
inc
enter
leave
jae
cmp
lahf
fstpt
pusha
mov
lods
lahf
sub
or
jae
mov
xchg
mov
imul
jo
jmp
icebp
sbb
push
es
sub
or
stos
jmp
jl
mov
jno
mov
mov
das
and
mov
mov
sti
lahf
adcb
sub
fadds
pop
xlat
in
stos
jge
int
dec
fisttps
inc
ds
aas
mov
add
out
jp
sub
xor
aas
cmp
test
jecxz
repnz
or
sbbb
aaa
sbb
xlat
fwait
jb
lods
call
aam
cmpsb
xor
pop
lock
lock
insl
inc
repnz
mov
mov
ljmp
cli
add
hlt
pusha
mov
push
mov
hlt
int
inc
imul
out
push
inc
push
dec
movsb
mov
xchg
jb
adc
mov
fwait
mov
iret
lea
xor
push
xor
loope
mov
inc
cld
arpl
aam
pop
cmp
adcb
mov
aaa
sub
ss
sti
shll
add
and
cmc
pop
sbb
inc
jb
mov
add
jbe
cmc
xor
pop
cld
fsubrl
xchg
xorl
loope
sub
dec
mov
scas
and
es
fucomi
mov
pop
out
fistl
hlt
xchg
in
push
pop
push
ljmp
insl
ljmp
sbb
pusha
shlb
iret
sub
mov
mov
jp
jne
ja
test
lea
pusha
in
adc
nop
xor
ficoms
xchg
std
std
push
decb
jbe
in
cmp
xchg
rcrl
out
shlb
or
adc
mov
ljmp
aam
push
repz
jle
push
cwtl
mov
mov
aad
ror
movsl
dec
mov
mov
rorb
jb
call
scas
cmp
add
minps
push
mov
nop
outsl
add
inc
lods
in
jmp
add
xchg
dec
jecxz
nop
jg
out
ss
fcomps
or
js
sbb
repnz
sub
jbe
push
mov
icebp
pushf
out
dec
addb
pop
mov
lods
arpl
out
pop
mov
fiadds
push
lret
jg
dec
orb
or
cmp
popf
inc
aaa
pop
cmp
into
cld
repz
dec
pop
hlt
sbb
dec
lods
leave
mov
fdivrs
mov
stc
sub
dec
dec
sbb
ss
scas
jns
push
aaa
out
xor
jno
shll
clc
cs
jbe
clc
popa
jmp
mov
inc
lcall
cmp
in
sub
push
leave
push
pushf
dec
inc
lret
push
cmp
jecxz
cmp
imul
pop
sbb
popa
ss
out
pop
xor
push
aaa
mov
and
or
loopne
lahf
sbb
popa
inc
inc
popf
inc
inc
mov
jbe
push
mov
xor
push
and
inc
cli
fdivr
inc
sub
lret
inc
add
mov
push
xor
out
dec
es
mov
scas
in
testl
and
add
jne
in
pop
push
cwtl
insb
cmpsb
cwtl
lds
arpl
pop
pop
and
enter
inc
ret
ds
arpl
pop
mov
jge
adc
ret
push
lahf
add
sub
into
sahf
xor
push
addr16
jo
fidivrs
imul
lods
rorb
sarb
insl
lock
lds
test
jne
cmpsl
inc
pop
idivb
enter
cmp
dec
adc
jg,pt
push
vhsubps
vunpckhps
icebp
mov
push
nop
mov
loop
imul
mov
stos
repz
cmp
mov
rorl
or
mov
mov
push
mov
xor
pop
arpl
jge
in
dec
push
test
push
lods
addr16
sti
cwtl
lret
gs
push
sub
rol
out
mov
movsl
arpl
adcb
test
mov
inc
add
mov
and
xchg
and
add
lock
mov
sub
lea
xchg
cmpsb
test
xchg
cli
ds
dec
dec
adc
dec
in
pslld
ja
cli
outsl
loope,pt
sub
mov
sbb
movsl
into
addr16
test
dec
ja
leave
or
jge
lds
testl
leave
mov
in
jae
lock
dec
xor
lods
push
call
inc
jb
push
mov
int3
jmp
dec
dec
inc
sahf
hlt
lret
mov
mov
inc
in
pop
sar
sbb
adc
dec
daa
cmp
cmp
xor
rorl
in
cwtl
add
or
mov
repnz
out
mov
aad
insl
fists
push
dec
pop
mov
fisttpl
jne
adc
jecxz
xchg
sub
iret
js
xchg
cmc
inc
lock
sti
push
push
fstl
sbb
mov
mov
mov
sbb
mov
daa
or
dec
pop
or
clc
stos
or
loop
in
fcos
inc
leave
mov
faddl
sbb
enter
add
cld
stc
xor
dec
or
cmpsb
ljmp
test
stc
nop
dec
test
add
test
mov
add
sbb
pop
xchg
clc
push
mov
fsubp
sub
arpl
gs
cmp
jo
jmp
out
push
repnz
imul
test
xor
les
add
add
cwtl
sbb
sbb
mov
xchg
inc
scas
xor
add
inc
xor
xchg
mov
ljmp
fnstcw
push
aam
cmp
inc
ljmp
jecxz
cltd
lods
test
ret
cld
and
or
inc
jmp
mov
lock
out
jae
jmp
jle
call
pop
gs
aaa
sbb
cltd
ret
pop
into
in
or
out
xchg
jmp
shll
fmull
and
sbb
cmp
aaa
test
ja
cltd
or
mov
inc
cmpsl
cld
cmp
je
cmp
jl
sti
outsb
in
jecxz
mov
mov
mov
pop
test
call
out
push
sti
fwait
shrb
ret
fsub
sub
and
aam
push
and
xor
and
xchg
mov
cltd
test
push
add
adc
jp
inc
stos
mov
xchg
adc
dec
mov
add
rorb
add
push
push
cs
jmp
std
lret
xlat
out
movsb
inc
xchg
push
clc
cwtl
mov
inc
mov
ret
in
shlb
push
add
inc
jb
push
shll
aam
fidivl
ljmp
sbb
fisttpll
dec
pop
mov
mov
ss
cmpsl
cmp
fwait
lahf
into
pop
pop
pushf
or
test
cwtl
inc
inc
sbb
fisubs
mov
stos
pop
fdivs
ret
rcr
fisttpll
mov
cmp
inc
pop
ja
icebp
lea
enter
pop
jb
repz
je
sub
cmp
dec
idivb
cmc
pop
stos
ret
cmc
fcoms
jp
xchg
and
in
and
sbb
xor
lahf
imull
mov
in
bound
pusha
push
leave
mov
cmpsl
lods
xor
push
data16
dec
push
xor
jns
push
mov
mov
pop
lea
ret
pop
pop
rolb
lea
mov
pop
mov
sub
push
jmp
sub
and
mov
mov
cli
testb
xchg
out
not
movsb
push
lahf
lret
sub
cld
testb
push
push
lret
push
sbb
mov
cmp
clc
out
test
jb
sahf
sti
or
inc
loope
and
dec
insl
mov
imul
xchg
xchg
js
outsl
xchg
mov
inc
lods
jle
add
push
aas
sbb
mov
fucom
push
mov
lock
inc
dec
dec
dec
cmp
mov
pop
push
aas
enter
loope
jnp
jne
sahf
sub
mov
mov
repz
stos
mov
xchg
sub
js
lahf
fidivrl
mov
test
popf
mov
shlb
xchg
mov
sub
pop
mov
icebp
xchg
imul
movsl
lcall
jno
clc
cmp
jb
inc
jmp
jecxz
filds
outsb
stos
clc
pop
dec
cmp
xchg
ss
mov
pop
or
fwait
xor
lods
xlat
and
mov
jg
out
pop
out
frstor
adc
xor
xchg
sub
xchg
xor
lea
les
or
sahf
ret
mov
adc
xchg
cmp
and
fbstp
in
ds
rcll
dec
inc
js
xchg
sbb
adc
xor
mov
and
sbb
and
ljmp
xchg
in
jg
int3
or
cwtl
shll
int3
mov
inc
or
pop
push
mov
and
jmp
rclb
lds
push
cmp
sub
xor
aaa
clc
lret
ljmp
xor
push
lea
adcl
dec
data16
and
push
scas
popf
ljmp
xchg
repnz
sub
nop
xchg
stc
sbb
dec
or
dec
daa
inc
jg
in
jl
in
mov
clc
shrl
xchg
bound
sar
aaa
test
idivb
add
cmp
loopne
mov
mov
mov
nop
mov
daa
sub
cmp
hlt
mov
adc
rcrb
cmp
fistpl
cmp
mov
fists
inc
aad
inc
pop
mov
xchg
push
sbbb
mov
ja
and
jge
mov
sub
xor
insl
dec
jnp
pop
inc
enter
or
shr
pop
cmpsb
imull
cld
outsl
fdivrs
ret
cmp
cmp
add
lock
mov
popf
ss
push
rcrl
stc
or
add
icebp
add
pop
mov
adc
mov
das
jg
pop
or
icebp
std
xchg
outsb
push
mov
cltd
ds
clc
aaa
cmpsl
lock
jb
sub
jnp
aas
sbb
cmp
and
pop
cmp
and
push
das
int
cmpsl
cmc
sbb
and
lea
sarl
cmpb
fsub
pop
aad
lcall
int
and
xchg
adc
mov
adc
inc
scas
arpl
fsubrs
xchg
orb
jno
xor
stos
xchg
xor
xchg
imul
mov
les
pop
cmpsl
mov
cmc
mov
sahf
insl
nop
mov
jo
imul
dec
aas
rolb
aaa
inc
leave
pusha
in
xchg
cmp
mov
jmp
jmp
mov
sti
stos
mov
xor
add
fwait
imul
mov
xchg
insb
sub
xchg
jmp
shlb
jge
jbe
jmp
sub
add
andl
cmp
dec
pop
mov
fs
lock
pusha
inc
and
incb
fcompl
test
cmp
add
sbb
mov
out
not
sub
sbbb
loop
push
add
lods
out
pop
call
xor
mov
sbb
and
jo
push
xchg
pop
mov
cwtl
dec
xor
outsb
jg
sarl
shlb
rclb
pop
insb
arpl
int3
cmp
out
jo
mov
insl
mov
adc
popf
testb
xor
fdivl
mov
orl
add
aas
dec
ss
sub
pop
int
insw
outsl
iret
insl
cmpsl
mov
xorb
inc
add
out
mov
test
stos
push
fisttpll
or
ret
dec
mov
and
faddl
and
sbb
or
or
mov
mov
bound
lea
call
hlt
arpl
std
enter
xlat
jae
lods
cmpsl
enter
call
push
test
sbb
add
fsubr
int3
add
dec
adc
pop
jno
hlt
pop
push
pop
xor
out
add
sbb
cmpsb
arpl
pop
loopne
cs
dec
mov
test
pop
fmuls
add
and
imul
add
into
dec
outsb
or
repnz
inc
add
and
arpl
or
aam
nop
orl
stos
mov
push
rep
insl
outsb
mov
xor
and
cmp
into
cli
mov
leave
pop
js
scas
fcoml
call
fimuls
add
and
fs
inc
es
repz
jg
push
jl
les
xor
fisttpll
push
cmp
pop
icebp
test
out
ds
rcl
inc
pop
scas
pop
pusha
wbinvd
fucomp
sub
int
fidivrs
scas
sbb
jns
adc
call
cmp
mov
ret
add
in
mov
add
sti
insb
iret
jb
sub
sahf
or
repz
xchg
dec
pop
adc
outsl
shr
inc
cmp
pop
push
scas
and
test
lods
dec
into
or
stc
hlt
into
in
testl
out
sub
shr
sub
daa
and
repz
js
inc
xor
in
fldt
pop
jnp
add
push
test
cmp
push
pcmpeqd
arpl
pop
loope,pn
fdivl
jno
gs
sbb
test
sbb
push
add
xchg
and
lds
or
out
repnz
ja
cmp
sub
adc
mov
jp
jge
mov
fdivrp
mov
pop
xchg
testb
dec
add
cld
js
jb
int
pop
xor
and
xor
sbb
out
shll
adc
test
pop
test
mov
loopne
mov
sbb
sahf
mov
popa
sbb
inc
shl
and
call
lods
mov
fwait
shrl
sub
jg
mov
out
ja
xchg
stc
cmovs
enter
jp
movsl
fldcw
out
push
push
repnz
lock
insl
mov
adc
leave
push
mov
sahf
fisttpl
push
std
lods
ds
lods
call
insb
sub
jmp
repnz
int3
cmpsb
ja
mov
push
xchg
push
arpl
or
mov
mov
push
insb
fiaddl
pop
jge
je
mov
and
mov
pop
jnp
jns
das
inc
loopne
popf
ljmp
in
sub
xchg
jb
add
cmp
ret
or
push
gs
pop
nop
jecxz
test
lret
ret
jbe
orb
lods
or
nop
push
add
add
mov
repnz
add
push
xchg
sar
cld
cmp
incb
adc
nop
flds
mov
inc
and
or
fcom
insl
push
mov
adc
jecxz
xorb
test
test
hlt
movb
pop
sub
add
iret
repz
out
daa
and
or
jmp
repz
enter
dec
mov
mov
push
push
loopne
jle
sub
dec
xor
mov
adc
jnp
sbb
pop
repnz
xor
stos
inc
mov
ret
and
es
int
adc
mov
shr
aad
xor
lock
insb
jno
and
xchg
adc
cmpsl
adc
push
cmp
mov
mov
xor
rclb
ljmp
xchg
sub
out
movsl
xchg
sbb
or
sbb
cmp
icebp
out
ret
push
xchg
cmp
jo
arpl
ljmp
mov
les
inc
mov
xchg
stc
cmp
jge
leave
mov
sti
and
pop
cmc
mov
pop
cmp
add
cli
fs
adc
mov
sub
push
ss
lcall
into
jb
or
cld
out
fs
stc
inc
sub
and
adc
sub
push
lods
xchg
sbb
mov
cltd
xor
cld
ret
inc
or
lods
add
pop
mov
ds
mov
sti
push
jl
mov
mov
and
popa
test
dec
mov
adc
imul
fiadds
mov
or
mov
stos
out
inc
popf
outsb
fcoml
jp
addr16
sbb
xchg
pusha
pop
mov
xchg
mov
adc
pushf
lret
rcl
sbb
imul
jbe
sub
movsb
push
cmc
jmp
sub
and
ljmp
adc
enter
xor
dec
cmpsb
dec
jnp
or
push
clc
aaa
rcll
or
loop
and
mov
xchg
push
pop
pop
cmp
pop
int
test
inc
mov
and
lea
jo
mov
pop
xor
aas
xor
ds
xchg
xor
dec
push
adc
aam
adc
adc
into
nop
out
mov
fcoms
dec
dec
xor
cmpsl
mov
pop
xlat
or
inc
test
lret
cmp
pusha
jbe
add
mov
inc
xchg
pop
adc
mov
into
sub
inc
push
or
fcomi
xor
adcb
icebp
mov
xchg
aam
insb
add
movsb
inc
sbb
push
push
mov
daa
cmp
outsl
mov
mov
das
lods
xlat
xor
mov
cld
js
ljmp
pop
push
lret
rcll
call
push
stos
pop
sub
mov
fldl
mov
dec
lds
mov
call
and
push
lcall
fildl
std
mov
adc
mov
lods
xchg
clc
and
lea
adc
mov
std
test
pop
stc
clc
hlt
add
addl
or
xchg
in
lods
jp
scas
xchg
add
dec
hlt
imul
xorl
ret
ret
add
sbb
pop
pop
sbb
std
fldl
or
shl
xor
jns
push
leave
push
stos
idivb
lock
das
je
pop
shr
or
jae
sbb
pop
mov
lods
insb
or
add
sub
jg
jb
enter
pusha
aad
adc
ja
sbb
dec
pop
sub
lods
push
xchg
outsb
mov
pop
clc
fnsave
fnstenv
clc
jp
loop
adc
xchg
and
add
sub
das
cld
fmuls
dec
xor
mov
ljmp
fwait
cmp
mov
bound
xchg
pop
xchg
mov
push
xor
cmc
push
add
loop
enter
xchg
adc
xchg
repnz
mov
mov
lea
mov
inc
inc
push
jns
into
xchg
test
aam
test
inc
and
xor
fs
push
mov
outsl
jae
pop
out
pop
and
mov
sub
fcmovnbe
xlat
xlat
pop
ret
xchg
das
cmp
idivl
test
call
and
xchg
pop
ds
fisubs
inc
adcl
xorl
lds
popl
shll
leave
push
dec
test
popa
xchg
push
push
xlat
push
dec
xchg
xchg
adc
aad
xchg
sub
in
cmp
fwait
mov
test
out
push
jl
in
out
jl
adc
inc
sahf
ds
out
fdivl
or
jnp
daa
jnp
add
pop
frstor
dec
mov
dec
xor
pop
jmp
arpl
ljmp
dec
mov
insb
mov
sti
sti
insb
mov
pop
or
aas
mov
mov
ret
test
xchg
call
push
pop
icebp
insb
push
inc
shlb
mov
lahf
xor
gs
fisttps
inc
shrl
ss
xchg
pop
sbb
imul
sub
push
vaddsubps
loope
cmp
popf
in
mov
out
xchg
popf
cltd
adc
inc
pop
mov
test
push
sub
jmp
insb
and
push
mov
cmpb
mov
xchg
lea
iret
repz
xor
roll
inc
adc
nop
movsb
scas
daa
mov
enter
push
sti
push
mov
repnz
fnsave
stos
cmpsl
popa
mov
ss
inc
fwait
shll
or
adc
fistpll
mov
inc
mov
ja
test
iret
jl
shlb
push
shlb
ja
int3
jle
jp
outsb
dec
cmp
popa
mov
dec
test
aam
add
and
pop
aas
mov
cwtl
jno
scas
cmp
jp
fs
add
lret
testb
mov
mov
std
dec
vpslld
add
ficoms
inc
testb
rorb
sbb
rol
int
fcomps
push
outsl
mov
pop
mov
imul
xor
fstpt
sub
sub
dec
cmp
repz
or
mov
dec
pop
dec
rcrl
mov
cltd
cmp
ljmp
push
test
aad
test
pop
icebp
fcmovnu
push
push
jle
or
sub
sub
mov
pop
xor
lds
lahf
inc
rcrb
and
mov
pop
fcoms
inc
xchg
jnp
pcmpgtb
das
dec
insl
fcomip
cmpsl
xor
into
and
popa
push
sub
mov
adc
rcrl
sub
insl
push
sbb
loopne
test
mov
jo
and
out
in
je
into
cmc
emms
push
rorl
pop
add
pushf
leave
repnz
inc
dec
addr16
mov
pop
out
dec
test
mov
cli
in
mov
inc
in
repnz
xchg
pop
xchg
mov
inc
dec
jle
stos
mov
xlat
and
push
mov
push
hlt
pop
sub
mov
imul
xor
lds
out
adc
add
push
sub
iret
repz
mov
xor
sbb
cmpl
push
and
push
push
ficomps
repnz
sub
clc
aam
push
add
add
fsub
fbstp
pop
ds
fcom
test
iret
in
into
fcompp
test
pop
rolb
xchg
testb
xchg
add
jae
pop
jge
sbb
jl
and
pop
push
fildl
sbb
fcoml
shll
test
fstl
mov
cs
jno
jbe
lods
leave
sbb
mov
mov
jg
sub
cmpsb
outsb
sub
xchg
sub
xchg
mov
mov
xchg
fcomi
mov
sbb
cmpb
dec
inc
sahf
jl
pop
int
xchg
rcrl
pop
pop
sbb
popa
aaa
add
stos
xchg
and
nop
push
enter
mov
daa
daa
jbe
lret
xchg
std
mov
fcomps
int3
nop
ret
mov
pop
call
mov
cmp
popa
cmc
mov
sbb
sub
repnz
bound
mov
and
jns
test
xor
add
dec
push
inc
push
insl
push
mov
stc
outsb
je
push
out
mov
mov
adc
dec
aam
mov
insl
inc
xchg
dec
imul
aad
and
jae
and
into
pusha
mov
mov
rcll
test
jnp
scas
xchg
or
cmp
jmp
dec
inc
push
cmp
mov
repz
cltd
mov
push
dec
sub
shr
mov
mov
xchg
pop
cmp
ds
fbld
or
shl
pop
sub
test
out
sbb
lea
add
in
sbb
icebp
arpl
insb
xlat
pushf
ljmp
push
dec
mov
xor
jb
stc
jecxz
or
lret
xor
xor
fs
xchg
push
ja
mov
int3
leave
cmp
cld
gs
push
add
sub
and
cmpsb
call
pmaxub
enter
sub
mov
xchg
inc
scas
or
shll
push
pop
mov
scas
lahf
cld
popa
and
push
xchg
xchg
dec
xchg
sbb
cmpxchg
push
mov
fdivrp
test
mov
mov
loop
iret
popa
mov
bound
adc
outsl
test
hlt
jnp
addr16
rcrl
ljmp
jge
sti
push
jne
adc
inc
mov
mov
addr16
cmp
movsl
ucomiss
add
push
lods
lods
or
inc
sbb
push
enter
test
inc
add
cld
ficoms
ljmp
push
jg
imul
xchg
call
and
sub
lods
loop
out
dec
fisttpll
xchg
cld
inc
pop
inc
shr
xchg
adc
push
mov
xchg
jmp
ds
out
fwait
arpl
pusha
sbb
push
popa
sarb
lods
std
mov
jecxz
xchg
sub
mov
fsub
into
arpl
aaa
movsb
jo
mov
fwait
jb
cmp
js
int
inc
ja
nop
aam
fsubl
sub
iret
out
stos
in
dec
nop
and
lods
add
pop
gs
ret
xor
dec
lahf
dec
or
add
fisttpll
idivl
out
lcall
aam
pop
jl
sbb
in
dec
stos
dec
icebp
push
hlt
xor
inc
arpl
sbb
jbe
lds
dec
xchg
inc
dec
fwait
mov
stc
or
movsl
es
inc
xchg
daa
pop
inc
or
add
inc
bound
fs
push
mov
sti
sahf
sti
shlb
imul
mov
mov
push
jmp
popa
mov
into
mov
clc
dec
imul
loop
shlb
and
outsl
fucompp
imul
imul
pop
clc
inc
pushf
aas
sub
cmp
cmp
mov
movsb
inc
popa
sbb
mov
loope
mov
sti
ficomps
or
mov
push
mov
repnz
addr16
mov
xorl
flds
popl
test
mov
fst
std
adc
cs
inc
mov
outsb
jae
cmc
xchg
insb
pop
xlat
mov
ffree
or
jns
sbb
pop
es
jge
mov
aad
add
jno
inc
nop
adc
movsb
pop
outsl
pop
cwtl
jecxz
cmpb
sub
daa
sub
cmc
repnz
mov
sub
push
xchg
jmp
mov
shr
or
jmp
pop
inc
inc
clc
pop
sbb
xchg
adc
stc
pop
mov
addr16
mov
or
mov
inc
test
leave
shlb
push
mov
daa
dec
int3
pop
shrl
stc
gs
ret
call
mov
lock
pop
insb
int
mov
pusha
add
nop
cmp
xor
mov
test
arpl
mov
aas
pop
inc
call
jno
mov
xchg
fiadds
aaa
mov
dec
call
dec
sub
push
xchg
cmp
iret
mov
arpl
dec
xchg
dec
loope
pusha
mov
out
push
in
sbb
cmc
in
jb,pn
ja
outsb
mov
pop
sbb
mov
sbbl
addr16
popa
mov
or
push
stc
push
mov
arpl
out
scas
sub
xlat
jecxz
inc
inc
sub
lret
xorl
fdivl
push
inc
or
mov
pop
xchg
iret
or
mov
addb
stos
add
fisubrs
push
ret
fs
int3
sub
imul
mov
lahf
in
addb
ds
pop
insb
push
push
ss
and
dec
fs
inc
cmpl
adc
bound
cmpsb
sahf
loop
dec
cltd
out
push
xchg
xchg
mov
cmpl
xor
push
popa
das
pop
pop
sbb
cmpsl
xchg
push
sti
pop
das
push
in
cmp
ljmp
aaa
jg
and
cmpsl
push
inc
rcrb
inc
inc
add
xor
test
and
inc
or
xlat
repnz
mov
scas
ret
cmc
cmp
jge
test
adc
add
les
cmp
clc
add
cltd
scas
sbb
rclb
add
lahf
jno
cmp
jp
aaa
adc
mov
lret
mov
dec
xor
or
pop
inc
jbe
je
jl
add
add
daa
inc
push
cli
icebp
mov
arpl
adc
mov
sbb
lcall
ret
xor
inc
fsubrs
and
ret
inc
xchg
aas
stos
fs
aad
outsb
cs
lret
xor
mov
dec
les
cmp
xor
sahf
pop
dec
cmpsb
pop
jae
jmp
js
ja
inc
imulb
pusha
dec
mov
repnz
int
cwtl
jmp
xor
push
pop
dec
ljmp
push
push
or
xchg
aad
lds
jle
dec
shll
je
pop
ss
inc
mov
pop
rcll
dec
addl
sub
stos
in
mov
cltd
dec
les
imul
pop
cli
jb
jmp
cmp
dec
xchg
fidivl
inc
push
lcall
popf
mov
jl
arpl
clc
test
lock
not
les
nop
nop
sbb
das
inc
cltd
inc
and
nop
xor
shrl
push
mov
divb
repz
mov
repz
cmp
subl
sbb
int3
push
sub
jb
addl
cwtl
call
inc
xchg
popa
push
mov
adc
rcrb
inc
cmp
ror
jne
mov
and
jnp
fwait
inc
inc
movsb
mov
push
push
add
negl
xor
movsb
dec
imul
mov
sub
dec
lcall
push
pop
shlb
mov
in
mov
into
mov
out
xchg
and
stc
fistpll
xchg
dec
jb
jno
pop
stc
rclb
je
or
or
and
dec
pop
pop
fistpl
dec
idiv
lea
adc
lea
hlt
jns
enter
std
push
jno
push
lcall
dec
fstpt
rolb
push
pop
call
cmp
aaa
pop
add
adc
pop
xchg
jbe
push
js
jne
jp
into
js
pop
cmp
cwtl
ds
jmp
jne
xor
iret
xacquire
movsb
cs
lock
std
pop
pop
pushf
mov
int
stos
pusha
xchg
inc
jno
jecxz
lds
pop
jne
inc
out
ss
inc
xor
push
jae
adc
addr16
jp
push
loop
pop
xchg
mov
inc
jb
mov
ret
fisttpll
or
lock
repz
out
sub
sub
loop
sub
mov
or
stos
mov
lock
sbbl
mov
inc
ret
popa
sbb
or
dec
imul
and
loope
mov
addr16
outsb
add
data16
mov
or
fnstsw
push
pop
lock
fisttps
xchg
jno
mov
push
xor
and
loope
mov
fdivl
pop
ds
outsl
mov
iret
jnp
cltd
stc
ret
dec
jb
or
add
movsb
dec
fistps
jp
scas
sub
xorb
test
icebp
xchg
cmp
negb
mov
cwtl
mov
push
inc
inc
in
inc
and
pop
inc
and
pop
adc
and
cmpsl
cmp
aas
xorl
dec
pop
gs
pushf
jns
jecxz
xor
lock
mov
lods
addr16
pop
call
push
leave
repnz
int3
pop
sub
outsb
cltd
adc
outsb
push
push
add
cmp
inc
ljmp
sbb
xor
int
outsb
ljmp
in
xor
xor
mov
arpl
xchg
push
data16
jnp
mov
mov
dec
rcl
movsl
and
push
dec
mov
xchg
std
pop
xacquire
imul
sbb
test
in
pop
mov
fsubs
daa
popf
imul
pop
sarl
mov
cmp
push
and
out
cs
out
into
mov
add
int3
dec
aaa
or
adc
mov
icebp
imul
cmp
pop
jle
in
jl
dec
pop
xchg
imul
test
roll
decl
loopne
mov
mov
jns
mov
push
pop
lret
lock
mov
aam
dec
add
lret
sbb
loope
stos
das
add
sub
aad
sarb
stos
pop
pop
xchg
mov
or
cwtl
cmpsl
adc
xchg
mov
sbb
cmpl
adc
or
mov
fisubs
cmc
push
mov
dec
lahf
and
pop
lret
push
scas
add
movsb
fsubs
sub
out
sub
dec
adc
out
cmp
lock
adc
and
mov
std
lret
cmpsb
mov
xchg
jl
repz
push
sub
pop
xchg
xchg
sbbb
filds
mov
cs
adc
sbb
and
fwait
lods
add
push
movsl
enter
push
add
call
dec
add
mov
jecxz
add
pushf
push
fxch
pop
fisubs
fiaddl
ljmp
mov
pop
ret
push
push
xchg
push
test
pop
fldenv
scas
mov
ss
faddl
test
sbb
scas
mov
ja
ljmp
test
in
mov
out
xchg
out
cmpb
dec
out
inc
fimull
testb
pusha
mov
sbb
adc
cli
popa
jle,pn
dec
fadds
test
sbb
lahf
add
scas
push
mov
jns
hlt
stos
and
ret
adc
mov
adc
and
popa
add
popf
mov
in
and
xor
imul
imul
sub
int
pop
pop
pop
add
mov
or
fstpt
neg
into
test
int3
imul
movsl
insl
cmp
dec
pushf
xor
lods
sbb
add
cs
cld
cmp
sub
sub
or
ljmp
cmp
or
sbb
aad
roll
arpl
adc
jmp
pop
push
and
aas
dec
aaa
push
shrl
ja
imul
and
cwtl
or
lea
out
mov
hlt
push
loope
ds
cmp
add
iret
mov
xor
stos
outsl
pop
aad
xor
add
mov
push
cmp
sbb
js
pop
pop
and
pop
pushw
or
inc
fisubrs
xchg
cs
jns
clc
push
movsl
lcall
cld
subl
dec
ret
xchg
add
mov
mov
sbb
mov
adc
cmp
inc
ret
mov
pop
inc
inc
pop
pushw
inc
gs
rcll
mov
cmpb
lahf
popa
rcl
jmp
minps
in
mov
mov
mov
cmc
cmpsl
xchg
mov
jnp
lcall
mov
or
and
pop
or
insl
adc
sti
jne
andb
xchg
arpl
add
dec
sbb
sbb
popa
movsl
push
mov
push
cmp
dec
or
loopne
jle
pop
xor
stos
xchg
adc
jbe
jnp
roll
dec
js
dec
jne
sbb
in
pushf
in
into
sbb
js
jnp
test
jae
rclb
pusha
pop
jnp
dec
insb
or
pop
mov
and
pop
mov
fptan
insl
sub
in
ds
cli
xlat
and
sar
loopne
sbb
out
aam
movsb
adc
push
dec
rcrl
jmp
mov
test
xchg
dec
jp
pop
mov
test
inc
fisubl
mov
mov
or
add
mov
test
mov
ds
lock
sarl
in
adc
push
loopne
pop
inc
jae
std
pushf
mov
insb
adc
cmp
pop
jb
push
sbb
sub
xorl
mov
sbb
mov
leave
ds
push
das
fidivrs
aad
mov
adc
popf
das
jne
push
push
cmp
push
xor
das
xor
lds
pushl
cmc
mov
mov
sub
lahf
scas
enter
cmp
stos
outsb
in
cmp
xchg
xchg
hlt
movsb
inc
jge
shrl
mov
sbb
mov
pop
pusha
inc
fidivl
jne
pop
cmp
push
dec
je
fmuls
cli
sahf
fs
and
lods
mov
cmpsl
inc
mov
pop
lods
add
sub
mov
xor
xchg
int3
fildll
std
and
jbe
and
pop
loopne
mov
push
fs
pop
sub
fdivl
pop
xchg
repz
xor
js
jns
subb
xchg
dec
push
push
arpl
punpckhdq
xchg
loope
dec
enter
pop
cwtl
icebp
ja
xchg
cmp
fisubrs
in
ror
enter
int3
push
ret
iret
lock
xor
cs
xor
jle
or
xchg
test
cwtl
mov
and
leave
stc
cld
test
addl
aaa
fsts
mov
dec
call
cmc
push
inc
leave
dec
icebp
out
lret
into
jg
cmp
sub
mov
clc
clc
or
in
imul
outsl
jmp
push
add
xor
icebp
adc
jl
std
aam
cwtl
fistpl
push
dec
std
call
pop
cmpsl
in
int3
fisttpl
sub
js
fsubrs
jl
or
xor
jb
lret
testb
dec
mov
outsl
adc
add
imull
mov
or
data16
leave
pop
negb
fdivrl
dec
pop
test
lds
cwtl
popa
addr16
and
dec
in
xchg
sub
sub
lock
dec
dec
dec
cs
lods
aam
xchg
inc
or
push
push
add
in
push
cmp
cli
rcll
or
lret
aaa
imul
xlat
push
lea
adc
mov
mov
movsl
xchg
push
mov
jp
xor
jp
insl
mov
shrb
pop
jae
cmp
mov
mov
xchg
xlat
arpl
icebp
idivb
xchg
jb
es
stos
dec
and
call
mov
jno
in
and
add
mov
pop
push
jg
out
shrb
and
mov
ljmp
jl
sbb
jg
mov
icebp
push
mov
xor
jecxz
sub
dec
jge
pop
nop
cmp
movsb
sahf
pushf
inc
rorl
cli
mov
mov
pop
scas
pushf
jge
push
lea
mov
lds
aas
pop
movsl
sbb
ds
stc
adc
sbb
mov
inc
adc
daa
mov
mov
sbb
mov
jge
jbe
xor
push
jne
push
dec
ret
jae
add
or
xchg
call
and
incl
xor
aaa
mov
insl
sub
cmp
cmp
addr16
insb
lods
testl
push
movsl
inc
mov
mov
xor
and
loope
mov
or
shlb
and
outsb
std
repz
mov
or
call
dec
push
leave
jno
adc
push
sbbb
loopne
and
sub
fists
test
and
jg
dec
int3
outsl
xchg
les
add
adc
hlt
insl
loopne
cmp
mov
stos
ljmp
sbb
lods
mov
ret
and
sub
enter
test
icebp
mov
jns
pop
inc
lds
out
std
daa
and
leave
jae,pn
pop
insb
iret
std
pop
xor
test
pop
repz
sbb
das
insb
mov
shr
rorl
and
lock
testb
push
add
lods
sbb
jb
insb
adc
scas
xchg
leave
sub
jns
mov
cmp
test
pop
mov
push
and
xor
outsl
rcr
cmp
xchg
insl
fidivs
lds
loopne
adc
popf
pop
mov
test
mov
in
int
imul
or
dec
xlat
int3
cmpb
mov
stc
mov
jnp
add
ror
cmp
es
sbb
out
mov
in
cmp
insb
loop
arpl
movsl
in
fs
pop
les
test
out
jle
ficompl
imul
add
xor
pushf
call
inc
xor
enter
push
pushf
or
xchg
or
pop
push
repnz
test
lea
push
mov
ss
and
test
xor
orb
jns
pusha
pop
aaa
roll
jnp
mov
ret
addl
sar
xchg
bnd
and
cltd
ja
in
popa
mov
mov
add
outsb
xor
pop
out
push
sbb
adc
sti
mov
xor
shll
negb
dec
std
cmpsl
push
lret
xor
inc
out
jge
push
xchg
or
mov
outsb
outsb
in
pushf
inc
out
push
sarb
mov
pop
aaa
dec
ret
hlt
sbb
mov
cmp
mov
mov
xor
jnp
ja
jae
xchg
mov
pop
int
scas
movsl
adc
fwait
dec
cli
inc
pop
daa
lea
inc
xchg
rcrl
imul
push
fisttpll
push
add
dec
hlt
mov
mov
mov
inc
adc
mov
adc
imul
sbbb
pop
push
fcom
or
xchg
xlat
mov
test
lds
and
stc
push
or
test
mov
dec
clc
xor
xchg
ja
dec
leave
cwtl
mov
add
je
daa
mov
lods
fisubrl
jl
and
mov
test
addr16
addr16
loopne
ucomiss
sub
jmp
push
int3
imulb
mov
fisubrl
cmpsl
fisttps
out
pusha
mov
jl
sbb
js
xchg
dec
scas
adc
in
inc
and
push
dec
push
mov
pop
dec
push
pop
jecxz
outsb
sbb
dec
notb
mov
leave
daa
xchg
jmp
lea
cmp
jl
loope
add
add
push
repnz
imul
xor
fsubrl
pop
or
sub
pop
lock
xor
popa
rcrb
mov
lcall
dec
push
dec
ja
mov
rol
addb
mov
fstps
es
in
push
scas
push
std
aad
jbe
rorl
dec
push
adc
sbb
dec
and
std
je
xchg
ret
jge
aaa
test
dec
mov
and
les
cld
or
sub
push
jns
push
mov
clc
jno
shlb
adc
or
cmpsb
aad
xchg
mov
cmpsl
mov
sub
or
ret
pop
push
lods
jl
push
and
inc
pop
and
hlt
xor
pop
mov
and
out
sbb
sub
aas
cmc
xchg
frstor
sbb
inc
sub
insb
cmp
push
mov
rcrl
jno
ljmp
ret
dec
rcl
push
sub
cli
jmp
cmp
mov
mov
gs
inc
xchg
aas
and
ficompl
inc
push
mov
mov
pop
mov
dec
inc
outsb
arpl
xchg
pop
lock
test
out
fmull
cmpsb
inc
sbb
sbb
addr16
imul
cwtl
loop
orb
xor
out
xor
mov
lock
popf
outsl
ja
loop
enter
stos
and
outsb
nop
fcoml
and
sub
call
mov
xchg
fmull
sbb
icebp
mov
inc
sahf
mov
divb
repz
mov
rcrb
mov
pusha
or
mov
or
addr16
outsb
pop
sahf
inc
es
push
mov
rcr
sub
mov
bound
jbe
push
pop
xchg
xchg
pop
pop
mov
cli
dec
mov
or
adc
pop
adcb
adc
pop
test
int3
shlb
xor
ret
adc
std
std
pop
cmc
repnz
xchg
cltd
into
mov
sub
and
sub
in
nop
cmp
mov
sbb
dec
nop
adc
sub
fcomps
loop
xor
and
jbe
push
sub
cmp
pushf
mov
inc
call
lock
push
dec
rcl
sbb
cmp
ja
push
enter
pop
in
in
push
lret
mov
cmpsb
lods
jb
inc
je
sub
imul
les
icebp
pop
pop
loop
inc
cltd
add
or
mov
push
inc
push
sahf
sahf
in
ja
inc
pop
ljmp
scas
or
add
jg
xor
dec
fdivp
mov
or
fwait
cmp
adc
jb
mov
jge
cld
and
xchg
loopne
stos
sub
enter
inc
mov
cld
insl
adc
fcompl
dec
data16
push
add
mov
cmp
sbb
arpl
sbb
test
jl
jg
loopw
rorl
adc
in
push
xchg
mov
xorb
adc
out
xchg
stos
jo
add
and
in
lahf
add
aaa
pop
add
aam
loope
mov
xor
lods
push
push
jmp
cmp
inc
fidivl
mov
or
adc
mov
mov
xorb
cmp
push
dec
fdivrs
ret
loopne
fcomps
pushf
loop
mov
je
imul
in
pushl
test
sub
outsb
icebp
stos
pop
adc
xor
jecxz
dec
mull
mov
test
jbe
decl
idivl
cmc
out
lret
or
cld
outsb
aam
fisttpl
nop
cmpsb
in
sub
mov
pop
add
sahf
call
aaa
xchg
sub
sbb
mov
enter
stc
push
enter
jg
cmp
push
or
xchg
mov
je
insb
or
inc
xchg
das
or
cmp
data16
psubusb
ficomps
adc
push
or
push
mov
jns
cmp
daa
sbb
les
mov
leave
dec
rorb
in
pusha
mov
jb
xchg
pusha
pop
push
cltd
sub
scas
cmp
stc
cmpb
loop
mov
xlat
mov
ds
push
adc
or
mov
jae
ljmp
add
ss
push
cmp
cmc
mov
mov
sub
cmp
push
dec
jmp
sarl
dec
jne
pop
fildl
lock
lahf
adcl
jmp
mov
push
jb
rcrb
fistl
xor
and
sar
ja
ret
and
lcall
pop
aad
shll
lea
push
and
nop
mov
mov
push
inc
or
rorb
sarl
ja
or
imul
or
mov
push
xchg
pop
lds
jge
stos
or
mov
cwtl
pop
adc
cmp
in
adc
cwtl
repz
gs
mov
das
divb
stc
in
loope
aaa
popa
xor
popa
or
xchg
js
stos
pop
rclb
aad
mov
mov
out
mov
into
mov
mov
xchg
xor
xchg
add
mov
sbb
and
mov
or
jne
data16
test
arpl
out
jae
xchg
pop
xlat
shrl
jbe
inc
out
popf
filds
stc
imul
add
sbb
xchg
int3
mull
data16
fs
into
mov
in
jne
dec
scas
mov
lcall
pop
sbb
notl
inc
dec
ss
or
push
push
rorb
faddl
ret
lea
js
push
mov
in
out
je
inc
ja
xor
test
add
fadd
push
pop
mov
jecxz
dec
push
add
add
sbb
cmp
out
pop
push
cmp
cmp
lahf
pop
mov
ficoms
stc
sahf
ds
or
pop
dec
repz
add
cmc
xor
loop
ds
push
sbb
lds
cmp
pushf
movsb
les
lcall
roll
pop
loopne
pushf
imul
sub
pop
sbb
inc
cmp
in
or
lods
jp
mov
lret
xor
and
movsb
xchg
xchg
mov
cmp
sub
or
das
pop
xchg
out
cmp
pop
xor
enter
std
and
imul
cwtl
cwtl
lret
lods
popf
jno
jb
mulb
mov
or
xor
in
ja
fwait
push
cmp
jmp
nop
repnz
lea
jnp
les
movq
outsb
in
or
push
and
cmp
pushf
test
scas
fwait
pushf
rcll
call
mov
data16
jbe
shr
mov
lret
shll
cmp
sub
pop
and
aas
add
mov
jl
test
or
call
and
add
rolb
xor
xor
cmpsb
mov
mov
scas
xchg
in
fcomip
mov
lods
std
and
mov
sub
rclb
push
or
shll
out
repz
dec
movsb
ss
mov
inc
leave
pop
jb
mov
lcall
fs
jecxz
jns
scas
loope
xchg
into
xor
mov
cltd
das
insl
or
shll
lds
mov
push
int3
mov
enter
inc
xlat
loop
mov
xchg
mov
leave
or
dec
pop
in
out
push
movb
add
lea
xchg
cwtl
dec
fsubl
jne
cmpsl
sub
sti
outsl
xlat
mov
loopne
sbb
mov
into
popf
sahf
lods
push
fimull
mov
subb
inc
out
inc
cmp
push
test
mov
ror
inc
sub
xor
inc
adc
outsl
adc
outsb
and
in
ret
xchg
xchg
jge
cltd
push
xchg
jmp
cmp
and
stos
sahf
lods
add
mov
cmc
mov
adc
fs
int3
stos
iret
add
repnz
mov
inc
push
push
repz
jns
xor
das
outsb
inc
pop
ja
repnz
or
enter
divl
pop
je
xchg
movsl
xor
mov
jbe
pop
sbb
sub
notb
xchg
pop
xchg
mov
add
insl
dec
je
mov
xor
xchg
mov
ss
dec
fdiv
xor
jno
inc
fstl
jbe
aaa
jne
cmc
dec
mov
jl
jbe
shll
cmp
sub
popf
orb
out
and
mov
int
mov
mov
popf
and
out
mov
push
mov
cld
cmp
aam
xchg
mov
je
lea
jbe
xchg
popf
push
rcl
dec
dec
fistpll
stc
mov
mov
fcom
adc
fiaddl
movsl
lcall
or
imul
scas
hlt
xchg
fwait
ret
and
sub
jb
dec
into
xchg
push
sbb
cwtl
cmc
dec
xchg
lods
lret
xchg
or
pop
mov
add
sub
inc
in
xchg
mov
mull
sarl
mov
das
imul
lret
and
ret
push
out
jecxz
fldcw
mov
roll
pusha
pop
mov
aam
in
cmc
mov
jge
adc
mov
filds
dec
popa
loope
and
out
icebp
shll
push
or
test
jbe
jg
mov
inc
mov
xchg
rclb
sbb
pushf
cwtl
adc
dec
dec
push
xchg
nop
mov
pop
push
mov
add
pop
je
inc
push
pusha
sub
push
add
fisubs
ret
mov
mov
sub
push
xchg
dec
dec
push
sbb
xchg
and
fsub
mov
mov
in
push
push
lods
add
rol
dec
cmpsb
int3
xor
adc
cmc
adc
into
aam
mov
jnp
in
and
faddl
inc
lret
nop
cltd
cmpb
mov
pop
stc
lret
stos
push
sarl
xchg
test
rol
adc
in
gs
stc
xchg
mov
lret
mov
je
loopne
into
push
clc
mov
mov
lods
addb
movsb
loope
mov
ret
clc
jp
daa
push
jbe
test
bound
rorb
leave
jns
bound
sbb
pop
dec
int
aas
repnz
or
out
pushf
into
jge
dec
sbb
js
push
pop
jmp
dec
lahf
test
adc
sub
cld
cltd
or
add
movsb
adc
nop
sub
xor
inc
sbb
sub
je
sub
pop
adc
iret
jmp
dec
push
jae
jne
dec
ficomps
lret
cwtl
cmp
sti
sbb
or
out
or
enter
stos
call
imul
ljmp
shll
and
popa
addb
je
or
mov
mov
outsl
leave
add
repnz
dec
push
mov
cltd
push
xlat
lret
push
repnz
addr16
xor
inc
inc
mov
pop
fiaddl
jmp
enter
sub
lds
push
sbbb
jb
or
fistpll
cmp
pop
je
fistpll
jo
in
movsb
clc
faddp
sbbb
inc
aaa
inc
jnp
scas
dec
ljmp
and
xchg
jle
sub
fdivs
pop
jecxz
adc
mov
shlb
fldpi
jbe
jle
outsl
loopne
jns
popa
popa
mulb
sar
imul
mov
cmp
cld
sbb
clc
add
xor
dec
test
dec
idivl
push
mov
nop
dec
cmp
push
pop
cmp
pop
repnz
adc
cmp
ret
cli
adc
adc
mov
imul
inc
pushf
lock
jmp
jb
pop
mov
dec
mov
mov
test
pop
xor
sbb
shlb
shlb
insl
pop
movsl
fs
outsl
add
add
add
inc
mov
lds
cmpsb
rcr
inc
push
jl
out
and
scas
add
iret
xor
dec
popa
je
push
aas
mov
pusha
mov
popa
mov
imul
mov
dec
push
and
xor
aam
icebp
push
mov
pop
mov
sbb
in
or
lahf
and
rorl
pop
jp
int
push
sub
mov
cmc
cmp
aad
push
arpl
mov
xchg
or
pop
ror
add
push
sub
fs
jg
or
sbb
decb
mov
sarb
shl
icebp
sbb
fcmovnb
mov
mov
or
xor
jbe
inc
sarl
test
and
aad
and
and
xor
xchg
movsl
leave
inc
sbb
inc
ret
push
mov
sti
nop
and
jg
inc
mov
sbb
dec
adc
mov
xchg
dec
dec
cmp
mov
fsubs
and
shll
or
movsb
mov
push
dec
movsb
mov
cmp
insl
cmp
into
inc
pop
push
push
pusha
jmpw
mov
lret
sahf
imul
gs
cli
stos
out
jb
shlb
jecxz
cmp
icebp
jl
inc
xchg
cmp
xchg
sti
dec
pop
in
out
clc
jp
cmp
pop
mov
fcomps
sar
inc
in
jo
jns
cli
mov
mov
ss
push
push
out
cmp
inc
xchg
or
ficomps
mov
popa
xchg
mov
incl
pop
popf
repz
adc
lds
mov
in
mov
cmc
or
popa
bound
xchg
dec
rclb
mov
call
sbb
scas
and
cmp
lret
lahf
jl
pop
jb
stc
add
jmp
imul
xor
xor
into
cltd
test
repz
lock
or
iret
std
out
imul
or
sub
xchg
push
push
and
mov
pusha
lret
push
fidivrl
lahf
cmp
lods
xchg
pushw
or
jbe
in
dec
push
mov
vmread
fidivrl
mov
loope
mul
nop
ret
or
push
mov
leave
popf
and
pop
cmp
fcmovbe
mov
xlat
or
stc
sti
cmpsb
pop
hlt
or
shrb
inc
std
cmpsb
inc
dec
iret
lret
adcl
lahf
mov
xchg
int3
arpl
neg
cmp
addr16
adcl
jnp
test
orb
fbld
mov
dec
stc
aad
dec
ds
incb
or
dec
daa
imul
cld
in
outsl
aas
mov
sub
ja
mov
inc
jg
pushf
out
fs
das
fsubrs
inc
adc
aas
pop
adc
lods
movsl
jmp
repnz
data16
gs
mov
cmp
lret
sbb
jno
or
cmc
xchg
lock
adc
xchg
scas
push
aad
cmp
popa
jg
aaa
xchg
push
xchg
dec
pop
xchg
and
adc
cld
stos
je
std
mov
sub
or
jl
mov
fdivs
ficoml
lahf
pop
cli
xchg
lods
popa
mov
xor
sbb
cli
push
out
pop
and
jbe
pusha
les
ja
pop
rolb
flds
adc
sbbl
push
xchg
sub
jbe
jmp
sbb
ss
or
sub
add
pop
in
shl
and
sbb
or
xchg
scas
jb
xchg
in
xor
xlat
push
sub
dec
adc
dec
js
aaa
inc
outsb
sbb
sbb
xchg
pop
call
cmpsl
cld
in
mov
rorl
movsb
aaa
jmp
psllw
imulb
and
mov
push
repnz
adc
mov
inc
mov
leave
test
adc
mov
movb
fimuls
stos
and
cmc
xor
mov
adc
das
nop
fnstcw
pop
push
jno
jle
push
in
lret
mov
push
iret
insl
and
stc
orl
jl
pop
into
dec
bound
cs
adc
sub
in
aaa
test
fistps
fsubrl
int3
adc
imul
cmpsl
icebp
dec
add
iret
xor
add
fisttps
call
add
imul
jg
imul
cs
sub
bound
mov
or
les
outsl
xchg
imul
xchg
mov
mov
bound
iret
inc
scas
sbb
fs
mov
outsl
mov
push
jbe
movsl
mov
and
sti
and
dec
adc
mov
dec
jne
xchg
sti
fldt
cmp
ss
shl
mov
gs
pop
jmp
xchg
or
gs
push
lea
sbb
mov
mov
sbb
mov
adcb
test
xchg
push
in
mov
xor
mov
lods
inc
adc
sti
mov
adc
icebp
cmp
jecxz
enter
pop
fbld
mov
push
addb
mov
or
pop
mov
stc
jbe
pop
movsl
cmp
mov
out
mov
mov
stos
fimull
sub
jl
push
fcmovbe
pop
cmpsl
cmp
int3
sti
addb
rcrl
int
and
sarl
xchg
test
bound
movsb
arpl
sub
jne
out
sbb
and
fisttpll
fsubrl
test
push
add
mov
xchg
xor
push
into
imul
movsl
push
jmp
cwtl
into
loope
mov
inc
jbe
pop
rolb
push
cmpsl
mov
test
pop
adc
adc
inc
sub
add
lds
adc
push
jnp
or
add
dec
push
cwtl
or
lock
sub
lea
aam
cmp
adc
push
sbb
aam
stc
test
adc
xlat
cs
add
retw
mov
inc
daa
ss
ja
xchg
add
mov
in
loopne
imul
ss
xchg
adc
add
or
mov
roll
imul
outsb
jno
inc
sbb
cmp
xor
jl
cld
push
sbb
adc
mov
and
adc
inc
dec
cli
or
pop
test
pop
adc
sub
es
es
shrl
jg
popf
xchg
dec
in
push
in
stc
out
xlat
out
outsb
cmp
add
xchg
out
addl
dec
dec
imul
scas
cmp
rorb
pop
movsl
dec
inc
add
or
jne
push
jl
xchg
adc
gs
mov
push
cmpsl
pusha
loopne
mov
dec
arpl
jns
dec
jl
bound
and
ds
fidivs
movsb
jnp
jge
repz
lret
lods
jecxz
dec
ja
cs
push
add
inc
mov
ljmp
inc
cs
push
stos
in
lods
sbb
lret
mov
mov
arpl
or
dec
mov
cltd
dec
gs
aaa
rolb
jns
cmpsb
aam
xor
adc
sti
jnp
scas
or
pop
out
and
inc
add
push
xor
fildll
iret
stos
mov
movsl
leave
mov
jmp
sub
jb
or
scas
push
decb
mov
fidivrl
mulb
mov
lock
loop
mov
popa
jecxz
mov
fs
inc
push
jmp
lods
adc
fsubl
jecxz
push
popf
adc
cmp
adc
call
loopne
xchg
nop
pop
sub
js
xchg
dec
xchg
cmp
add
in
push
pushf
push
btr
sub
xor
mov
loope
in
ss
shlb
jp
adc
cmpsl
mov
xchg
int3
call
and
rcl
subb
aam
cld
cltd
xchg
pop
stos
clc
ret
out
mov
int
in
sahf
jae
mov
mov
aad
sarb
pushf
shll
mov
dec
rcrl
mov
or
mull
daa
lahf
popa
fwait
add
sub
pushf
cmpsl
cli
out
fdivrs
jl
call
cmp
ret
cmp
dec
shlb
add
add
icebp
nop
jae
xor
push
push
cbtw
push
daa
repnz
push
popf
jne
xchg
call
or
daa
andb
xlat
jb
popf
xchg
lods
in
pop
or
out
outsb
insl
sahf
inc
test
mov
adc
scas
adc
jp
xchg
repz
dec
add
and
add
inc
sub
xor
pop
dec
xor
mov
leave
scas
test
dec
pushf
aas
ffreep
aas
push
cli
cmp
jbe
clc
xchg
and
sub
icebp
lock
cs
cmp
int
inc
arpl
jns
adc
clc
sti
out
imul
mov
das
clc
add
lret
and
outsl
je
xor
ja
push
jge
shlb
hlt
adc
cli
mov
int
jecxz
addr16
xor
pop
xor
sub
xchg
xchg
jbe
xchg
daa
ja
popf
cmp
jo
jae
ret
inc
lds
xchg
test
push
icebp
addr16
bound
ja
add
or
pop
mov
repnz
and
push
mov
test
mov
jecxz
jge
or
pop
addr16
or
pushf
sbb
adc
js
jle
cmp
out
xor
cmc
scas
call
ret
mov
pop
out
mov
iret
sbb
sub
push
das
lds
mov
pop
in
ret
xor
andb
add
mov
inc
enter
push
xchg
jns
mov
je
cmp
daa
sbb
or
out
adc
adc
repnz
lret
jnp
mov
jmp
jbe
jecxz
dec
call
cli
inc
xchg
lahf
ud1
sti
fidivl
je
nop
pop
roll
mov
imul
push
mov
adc
inc
addb
into
insl
fldcw
add
or
sarl
xchg
outsb
inc
sti
dec
aam
lret
mov
inc
xchg
jmp
or
pcmpgtw
lds
cmp
cli
or
cwtl
pop
xor
jp
rolb
mov
cmp
inc
out
mov
fucomi
mov
fsqrt
fdivr
mov
jl
mov
dec
push
cmp
dec
dec
iret
push
jp
decb
mov
sahf
and
xor
cwtl
jmp
out
cmpl
mov
test
bound
mov
bound
pushl
insb
push
mov
out
cmpsl
adc
mov
je
push
sbb
mov
scas
out
test
add
push
cmp
es
insb
cmpl
pushf
das
not
push
test
mov
imul
adc
loope
mov
mov
js
push
xchg
cmp
pop
mov
cmc
sub
fistl
fiaddl
mov
enter
mov
dec
roll
std
xor
daa
cmpb
nop
mov
fsincos
jbe
fisubs
pop
inc
mov
in
sbb
cmp
or
cwtl
in
fs
cmc
mov
mov
gs
hlt
xchg
xchg
repnz
add
pop
inc
mov
adc
mov
cmpsb
jmp
out
arpl
jle
leave
mov
mov
aad
jo
fs
adc
mov
inc
daa
js
out
aas
pusha
iret
sub
mov
popa
repz
pusha
pop
push
iret
add
pushf
pushf
insb
cmp
mov
or
pop
ja
mov
arpl
pop
cli
jns
je
dec
cmp
mov
mov
mov
dec
shrl
mov
pop
add
or
icebp
movsbl
mov
mov
cli
inc
jle
aas
mov
cmc
push
jecxz
lret
xchg
daa
sub
xchg
mov
cs
push
jb
ret
repnz
mov
shl
je
mov
push
xchg
fnstenv
push
push
cmp
fstps
and
push
jecxz
jmp
sub
or
mov
jb
orb
into
inc
sbb
pop
push
std
xacquire
ja
test
cmpsl
xchg
insb
jg
mov
pusha
test
mov
xlat
decb
mov
adc
mov
icebp
mov
mul
ja
jmp
aam
int
cs
jno
vmovapd
mov
iret
xchg
push
push
cmpsb
push
testl
pop
rcll
test
and
lods
cmpsl
mov
inc
scas
sub
xchg
mov
ljmp
mov
je
fnstsw
test
ds
inc
adc
push
mov
rorb
mov
out
mov
vmovdqu
mov
loop
fucomi
fdivl
in
add
movsb
out
mov
mov
and
push
pop
lcall
mov
je
pushf
jmp
push
fdivl
stos
cmpsb
dec
mov
pushl
shrl
push
adc
mov
push
fwait
out
xchg
sbb
xor
push
jg
cmc
cli
add
out
adc
js
pop
enter
inc
dec
loopne
xor
dec
jp
push
ret
flds
popa
std
pop
adc
out
cld
fistps
xchg
mov
xor
lods
lock
inc
fisttpl
insb
xor
sub
sub
dec
dec
pop
stc
and
xchg
andl
loope
aaa
testb
dec
push
loopne
inc
add
xor
test
rcl
aad
fcoml
aam
mov
divb
les
addb
jns
pop
xchg
or
inc
cltd
xchg
push
jge
mov
ljmp
push
cs
stos
lahf
testb
int3
lds
mov
sbb
sbb
scas
movb
in
sbb
test
mov
addr16
or
ja
mov
cmpsb
je
scas
mov
std
lret
mov
jmp
sbb
rcll
leave
std
inc
pop
insb
sub
mov
cltd
push
xchg
jle
push
push
xchg
push
aam
movsl
shl
ljmp
loope
jp
sub
and
repnz
mov
adc
pusha
dec
push
sbb
adc
or
and
repz
movsb
mov
cmp
ret
pusha
filds
into
add
mov
or
test
aaa
shlb
xor
cltd
mov
out
fcmovbe
cmpsl
mov
sbb
ffreep
lods
lods
sub
int3
adc
mov
stc
sbb
fstps
push
dec
push
or
inc
je
hlt
sub
insl
mov
and
adc
pushf
testl
ret
add
cmp
xor
imul
in
enter
es
in
push
int3
rcrl
add
sub
mov
test
imul
mov
pop
sahf
mov
or
sub
inc
in
lea
adc
ja
movsb
ret
sbb
out
ret
add
mov
or
cwtl
mov
jb
xor
dec
mov
add
cmpsl
daa
repnz
mov
ljmp
sub
push
mov
lds
dec
add
push
ffreep
xor
fimull
pop
inc
push
movsl
sub
push
or
pop
lock
and
add
aas
hlt
sub
push
jecxz
mov
dec
sub
add
into
pusha
jmp
jae
imul
cmp
lea
stc
ljmp
loope
xor
cmp
mov
into
xchg
xacquire
pop
sbb
les
pop
pushf
add
in
push
andw
jl
mov
shl
int
lahf
sub
cmp
out
test
adc
and
out
jae
imul
or
jae
xchg
cmpxchg
push
push
ficomps
add
insb
fdivr
es
add
jbe
ret
sbb
sub
sbbb
or
adc
rolb
fwait
mov
push
inc
fs
mov
roll
scas
inc
dec
hlt
daa
dec
xor
fistl
call
sub
mov
xlat
pop
cs
daa
daa
push
or
sbb
imul
lods
dec
scas
test
xchg
fwait
ds
cmc
je
dec
aam
and
mov
ret
js
jno,pn
cs
pop
loope
inc
popa
adc
and
out
ret
dec
in
or
mov
ds
dec
mov
sbb
sarl
mov
xchg
into
invd
cmp
mov
psubusb
push
mov
mov
js
adc
lahf
repnz
cmpsb
xchg
cmp
mov
push
in
and
push
mov
popf
sub
into
or
mov
sub
sti
fistps
into
leave
in
movsb
dec
push
adc
and
mov
icebp
ja
mov
nop
das
xor
mov
rcrl
mov
das
push
mov
leave
pop
out
ror
inc
cli
jb
sahf
fdivrl
bound
mov
repz
nop
or
inc
aam
pop
cmc
test
js
out
les
out
push
mov
push
and
or
fldl
cmpsl
xor
and
enter
push
xchg
xor
out
shrb
ljmp
out
out
popf
dec
sbb
xchg
push
imul
fists
adc
cli
cmpsb
xor
cli
out
in
sarl
addr16
cmpl
xor
rorl
pushw
mov
cltd
xchg
rcrb
ja
stc
push
xchg
adc
outsl
iret
sub
cmp
mov
lds
push
ss
adc
adc
lea
in
shll
mov
fs
mov
sub
cmp
add
dec
fs
or
daa
jmp
mov
lahf
shlb
stc
nop
mov
add
pop
pop
rorb
and
ror
icebp
data16
andl
loope
aad
das
test
dec
inc
insl
rorw
pop
jno
movb
popa
push
fldcw
jbe
decb
push
add
insl
jnp
arpl
out
jbe
cs
or
fimuls
pop
mov
mov
mov
jle
jo
insb
stos
pop
push
inc
push
inc
addb
sbb
shr
sub
dec
mov
jmp
lock
pop
popa
jg
xor
add
aam
aam
imul
mov
lcall
imul
cmpsb
out
nop
lods
aad
loopne
stc
fwait
mov
sti
jg,pn
outsl
je
outsl
mov
cltd
aas
std
mov
sub
cmpsl
stos
jae
xor
mov
std
iret
test
mov
mov
dec
call
mov
xchg
pop
cmpsl
mov
mov
push
out
in
or
adc
jb
shll
pop
aaa
jmp
mull
and
loope
mov
jge
repnz
call
andl
pop
and
outsl
test
lds
add
lcall
push
sbb
sbb
jecxz
adc
aas
xor
pusha
jns
cmp
sbb
adc
clc
paddusb
mov
sahf
and
or
cmp
xchg
mov
inc
dec
sub
int
add
and
adc
test
or
aam
jp
cmp
xor
aas
inc
aas
pop
iret
icebp
inc
inc
inc
shlb
jmp
out
loop
aas
es
insb
xchg
pop
stos
insb
sbb
dec
lods
jno
inc
xlat
dec
adc
inc
pop
add
add
pop
cmpsl
pop
outsl
test
dec
push
push
mull
stc
fcomip
or
imul
in
sbb
ror
pop
mov
pop
push
mov
aad
jns
adc
mov
test
mov
push
cmp
xchg
xchg
out
ja
out
fmul
xchg
ucomiss
dec
or
testb
sub
xchg
cmp
inc
mov
xchg
jno
mov
dec
addb
push
fisubl
mov
mov
into
ret
shlb
xor
sbb
push
pop
add
push
aaa
mov
cli
out
cmp
in
sub
adc
loope
popa
mov
mov
jle
imul
loop
rcl
push
sub
dec
andl
sub
jl
xchg
stos
aad
dec
push
lock
fsubr
addl
jnp
push
es
in
sbb
stc
in
xor
pop
inc
jbe
cltd
cmpsb
add
popf
cwtl
in
sub
out
fsubs
pop
rcl
dec
push
push
sub
or
inc
fwait
into
sub
imul
inc
in
lahf
jo
dec
fildll
cwtl
mov
push
jl
mov
jb
mov
popa
sub
xor
push
fnstcw
icebp
cmp
shl
push
pop
sub
scas
xchg
jne
pop
mov
fiaddl
dec
bound
stc
movsb
push
xchg
mov
cwtl
push
mov
popa
jecxz
leave
or
sbb
out
xor
std
jmp
push
fistpl
pushf
insb
pop
and
mov
jns
ds
mov
dec
push
pop
push
ds
sbb
cmp
cwtl
imul
mov
xchg
loope
cmpsb
and
out
jno
loop
aaa
add
in
xorb
lds
rcrl
loope
mov
imul
mov
jg
rclb
and
xchg
sti
or
sub
adc
bound
jg
cmp
xchg
test
popf
inc
or
push
rcrb
js
and
push
cmpsl
pop
out
mov
popa
gs
mov
mov
jae
fbstp
dec
rolb
pop
pop
pop
in
mov
push
jae
jg
dec
ss
sub
or
mov
pop
add
pushf
hlt
rcl
mov
mov
mov
mov
leave
jnp
adc
das
mov
test
mov
pop
cmp
lea
inc
into
cmp
add
ss
mov
repz
shlb
or
lret
xor
sahf
cmp
dec
movl
mov
in
out
les
enter
cmpl
sub
cmpsb
cmpsb
into
js
adc
cmc
cltd
dec
dec
or
sbb
das
ret
cltd
out
pop
add
add
add
movsb
inc
cmp
jne
jbe
data16
test
lock
adc
xchg
movsl
add
mov
inc
cwtl
pop
pop
dec
les
mov
fidivrl
jbe
iret
jecxz
inc
xlat
icebp
jmp
test
jbe
add
mov
or
mov
push
call
js
orl
sti
fmulp
jge
aam
sbb
pop
or
std
add
push
loop
iret
or
shrb
and
cmp
pop
stos
add
mov
test
and
js
mov
lret
into
xor
and
inc
es
mov
adc
or
pushf
mov
sbb
lcall
cwtl
into
fnstenv
test
push
push
inc
test
movb
hlt
decl
lret
in
pop
push
sbb
cmpsl
pop
pop
in
push
or
sbb
add
jecxz
imul
and
mov
mov
xchg
inc
mov
mov
xchg
hlt
leave
mov
pop
jle
mov
push
mov
jo
jmp
pop
fadds
aad
mov
jg
mov
rolb
push
cmp
sbb
cld
pop
icebp
pop
repz
mov
pop
fdivrl
add
mov
adc
or
in
inc
pop
mov
int
jmp
lret
loopne
out
mov
cmc
call
testb
xchg
pop
repz
or
cmp
and
push
scas
add
xchg
inc
xchg
pop
mov
lahf
je
jmp
add
dec
mov
cld
mov
mov
loope
jmp
adc
xor
icebp
jl
ret
test
ss
jne
and
push
enter
jmp
pop
mov
hlt
sub
jno
subb
adc
mov
rclb
cltd
or
push
test
cmp
inc
push
scas
sub
pop
loop
setge
and
daa
push
sub
mov
inc
add
fstpl
sub
fldcw
lods
insl
jle
es
push
cmp
cld
sub
enter
aam
int3
and
inc
push
cmp
fwait
pop
pop
dec
stos
add
std
sub
jo
dec
pop
push
jne
fldl
mov
dec
imul
jns
and
dec
sub
sahf
arpl
out
lret
dec
dec
jl
test
jp
inc
lods
cmpsb
inc
jae
push
int3
inc
or
jge
or
add
pop
lret
enter
jmp
sub
js
test
add
stos
daa
clc
ds
add
dec
test
sbb
les
pop
aaa
lcall
mov
test
test
arpl
aam
push
out
insb
inc
and
and
or
aas
mov
xor
push
js
mov
mov
rcrl
arpl
inc
lock
lds
sub
jmp
in
sbb
in
xchg
dec
jge
inc
xlat
jb
sarl
and
in
repz
imul
sbb
add
test
stos
mov
in
int3
mov
and
mov
out
and
dec
inc
aas
stc
bound
fistl
dec
pop
lea
iret
push
sub
sbb
arpl
sub
loopne
pop
mov
cmpsl
inc
jp
imul
xor
cmp
das
mov
insb
lcall
cmp
cmp
out
add
je
insb
sbb
into
xor
cmp
push
inc
push
cmp
inc
les
lods
out
inc
ret
jbe
mov
adc
hlt
jb
call
add
cmpsl
cmp
test
xlat
fisubrl
xchg
into
in
rclb
in
xchg
mov
ljmp
inc
or
imul
lahf
xchg
orb
mov
pop
in
jno
push
loopne
test
test
xchg
inc
fiadds
jo
xor
cmp
fs
adc
mov
cmpsb
mov
popa
push
into
jnp
cli
fnsave
xchg
pmullw
push
push
and
in
sahf
andps
add
ret
imul
add
loop
ljmp
sti
gs
cmp
loopne
std
mov
and
ja
jo
int
arpl
adc
clc
cmpsb
into
jge
out
stos
and
mov
pop
mov
pop
sub
xor
cmpsb
and
adcl
mov
xchg
ds
add
push
fs
sub
cltd
push
aas
call
scas
cmpsl
and
inc
subl
sub
addb
xor
out
jne
pop
xchg
roll
jg
fisubrs
push
imul
adc
push
imul
or
ret
mov
mov
loop
in
pop
stos
clc
mov
cmp
and
sbb
mov
mov
loope
mov
rolb
mov
xor
shlb
jae
add
lds
mov
and
dec
lret
rcrb
pop
add
and
das
repz
sub
test
dec
and
inc
fwait
stos
and
cli
fwait
lock
push
push
xchg
cmp
into
mov
outsb
lods
or
into
add
lret
mov
sbb
mov
xchg
jnp
aas
or
xlat
push
inc
fisttpl
push
pop
imul
sbb
pop
mov
imul
mov
das
cltd
ja
mov
popf
add
int3
mov
incl
inc
xor
cltd
mov
push
cmpsb
cmpsb
mov
fucomi
out
adc
dec
jmp
adc
mov
gs
dec
cmpsl
lock
cwtl
cmpsl
pop
in
das
cli
xor
bound
scas
adc
int
ret
push
push
inc
lock
xchg
out
scas
enter
les
loopne
scas
xor
fisubl
and
pusha
mov
stos
test
sub
mov
lret
jne
sub
dec
push
dec
xchg
lock
fdivrl
mov
ja
mov
pop
cmpsl
xchg
mov
jecxz
sahf
dec
adc
movsl
aad
push
sub
notl
xor
dec
loop
fldl
xor
lret
and
dec
in
in
loope
xchg
jmp
addr16
add
aam
push
addb
fcoms
and
mov
or
bound
sbb
sbbb
lods
pusha
fidivrl
xor
cmpsb
cmp
sbb
into
pop
add
dec
or
sbb
enter
nop
mov
aaa
cmpsb
mov
fcomps
lret
adc
repnz
sbbb
xchg
in
popa
ja
sbb
sti
std
mov
pop
sbb
mov
inc
outsl
in
cmpsl
mov
add
leave
pusha
mov
not
rcr
sahf
lahf
xchg
dec
data16
les
and
ror
aam
mov
add
sti
in
ljmp
cmp
mov
rorl
xchg
jp
fnsave
mov
lock
shrb
xchg
cmpsb
cmpsb
xor
fistpl
ss
mov
mov
orl
stc
inc
lret
int3
shlb
or
and
add
cmc
ds
aam
int
push
pop
inc
sub
cmp
ret
leave
xchg
sbb
cld
dec
and
js
inc
test
sbb
push
ficomps
cmp
lahf
shlb
xchg
fcmovnb
mov
aaa
outsb
mov
add
hlt
scas
rorl
sbb
lock
outsb
pop
imulw
adc
lahf
pop
rolb
sub
xor
add
lods
pop
xchg
inc
add
mov
and
shl
sbb
lret
jg
jae,pn
xor
stos
lahf
jl
inc
mov
adc
mov
push
dec
out
or
das
gs
fildll
dec
int
aam
mov
decl
cmpsb
outsb
call
clc
cmp
fwait
mov
jne
mov
lock
test
mov
movsb
or
mov
fiadds
push
inc
in
or
xchg
xchg
pushl
pop
popa
out
cli
dec
fdivs
cs
mov
popf
ret
mov
pop
cli
mov
aam
out
insb
mov
or
jp
jne
mov
mov
ds
loop
dec
lds
jge
mov
aam
inc
push
push
sbb
scas
loope
sbb
inc
sub
pop
fidivrs
cmp
and
jae
push
arpl
pop
add
mov
mov
std
or
clc
fidivrs
or
arpl
adc
or
sarl
or
call
xor
pop
lret
stos
jle
xor
sbb
iret
mov
xor
pop
push
add
lds
inc
subb
push
aas
test
jp
int3
cmp
and
ljmp
mov
scas
shrb
outsl
ret
fsubl
imul
gs
rclb
je
and
cmp
sub
repz
and
imul
mov
aaa
aad
mov
sbb
pop
cmp
lret
xchg
iret
xor
into
in
mov
cmp
dec
add
jb
hlt
adc
fisttpll
sub
cmc
mov
stos
pop
xchg
cmp
insl
mov
xlat
jmp
int
aam
int
aam
scas
mov
add
int3
rcrb
inc
pushf
pop
daa
adc
in
and
inc
roll
call
das
rclb
add
mov
aam
fisubrs
push
out
jle
out
pop
mov
xchg
dec
je
sti
cmpsb
leave
inc
push
push
xor
dec
ret
mov
mov
mov
pop
stc
jnp
mov
inc
fs
mov
in
xor
push
test
test
sbb
jno
iret
pop
inc
cmp
add
add
xchg
push
cld
bound
pop
mov
push
mov
jle
mov
clc
xor
bound
add
jae
stc
lods
xchg
roll
ficoms
sub
fdivp
adcl
adc
mov
in
jno
loopne
mov
mov
fistps
mov
push
leave
repz
mov
icebp
mov
push
subb
adc
cmpsb
js
adc
loop
mov
xchg
fst
pop
mov
iret
mov
aad
mov
push
xchg
arpl
repz
ds
push
mov
or
roll
out
stos
mov
lds
shlb
mov
inc
mov
outsl
aam
cmp
in
ljmp
sbb
pop
stos
popf
dec
jo
or
add
pop
insb
fcmovnu
dec
dec
xor
arpl
stos
lret
or
subb
and
popa
stc
mov
push
jmp
add
mov
mov
mov
roll
mov
lcall
imul
inc
inc
stos
inc
mov
or
xchg
push
pop
sub
sub
push
call
xchg
aad
call
stos
repnz
dec
jecxz
jno
and
mov
sahf
mul
xorl
stos
inc
pop
dec
bnd
pop
lret
pop
ret
enter
data16
lods
jae
mov
jo
xchg
jbe
ss
sbb
mov
loope
cmp
cmpsl
sbb
pop
push
loopne
mov
mov
or
aad
test
out
mov
es
pop
sbb
mov
mov
sbb
mov
jle
inc
enter
mov
fidivrl
mov
mov
add
orb
movlhps
mov
mov
int
test
hlt
or
leave
dec
pop
leave
add
stc
sti
subb
jg
movsl
aaa
mov
xor
mov
lods
dec
punpcklwd
mov
sub
mov
inc
and
adc
mov
xor
popf
adc
adc
lahf
mov
stc
inc
test
scas
mov
shrb
jb
push
mov
subl
rcrb
mov
xchg
add
es
dec
pop
aad
dec
popf
fadds
cmp
jnp
dec
jnp
repz
sahf
into
sub
addr16
aaa
xor
mov
jecxz
and
mov
jp
inc
sbb
fwait
dec
adc
push
inc
cld
push
loope
adc
and
fs
repnz
xchg
lock
sbb
int3
js
pop
jmp
int3
dec
dec
jmp
lods
sbb
cmc
jne
out
and
add
mov
fidivl
or
jge
pop
sub
cmpsb
mov
cli
sbb
sahf
mov
in
rorl
repz
xchg
loope,pn
cmpsb
pusha
sub
sub
sbb
push
dec
outsb
cwtl
stc
pusha
jmp
lret
mov
sbb
pop
out
testl
andb
out
nop
rorl
mov
gs
cld
pop
pop
inc
or
je
and
cmp
xchg
sub
cmp
and
loop
push
xor
xor
pop
mov
cvtpi2ps
sub
mov
fnsave
adc
mov
fwait
fs
les
ljmp
and
and
outsb
js
lods
inc
sbb
mov
test
pushl
repz
pop
fnstenv
outsb
jge
mov
adc
jne
xchg
dec
int3
cmp
sub
inc
add
fstps
jns
cmp
push
push
jo
jecxz
jmp
adc
decb
fdivs
sbb
mov
dec
ret
jo
dec
sub
pop
loope
adc
mov
je
cs
lods
loope
push
cltd
and
or
pop
inc
mov
inc
jmp
lcall
jns
dec
sub
dec
ret
mov
jge
pop
addr16
lock
bound
sbb
fdivp
push
js
enter
jecxz
call
iret
push
pmaddwd
xchg
das
mov
cs
add
mov
shr
mov
dec
inc
pop
fistpll
mov
or
lds
xchg
xchg
test
mov
pop
cmp
les
in
sbb
test
mov
mov
add
lods
bnd
aam
mov
jne
cmp
lods
adc
stos
insb
lret
push
sub
or
push
loope
mov
jg
rol
jno
lahf
mov
mov
cmpsb
xor
xchg
xchg
sbb
and
inc
jae
mov
xlat
xor
int
pop
out
lods
xlat
mov
xchg
push
cli
jp
stos
mov
mov
das
data16
lds
xchg
lods
rol
cld
out
in
or
pop
adc
xor
push
std
fcomps
xchg
test
data16
test
outsb
loopne
gs
mov
pop
sbb
add
fcmovnbe
xchg
xor
xchg
loopne
pop
add
lds
lcall
mov
pusha
daa
rclb
pop
cwtl
xor
pop
inc
sbb
sahf
cmpsb
lods
fmull
or
mov
mov
imul
dec
das
lock
daa
in
cld
pop
sbb
fisttpl
mov
cmp
jns
push
pop
stos
call
in
int3
sub
cmc
pushf
push
cmc
das
mov
xchg
cmp
lods
sahf
into
push
ljmp
dec
cmp
int
lret
imul
lahf
loope
cld
pop
mov
pushf
imul
push
xor
lods
shl
roll
mov
test
fistps
xchg
out
imul
lock
mov
lods
push
ret
inc
in
push
enter
aad
test
out
daa
xchg
push
inc
decb
jb
mov
cwtl
data16
aas
mov
mov
mov
out
aam
mov
cmp
push
out
fsubrp
mov
dec
xchg
pop
adc
repz
push
test
push
add
aas
aad
push
pop
push
jmp
sub
sub
xchg
cld
fstl
mov
icebp
dec
popl
pop
mov
and
je
mov
inc
ja
jae
cmp
inc
dec
ds
mov
int3
cmp
insl
sar
sbb
sbb
jnp
cmpsl
stc
ds
and
push
loope
or
add
stos
or
and
xchg
push
mov
cs
mov
adc
push
pop
jmp
aaa
movsl
out
jl
mov
negl
cmp
push
stc
xchg
int
fs
pop
icebp
push
dec
jle
into
pop
mov
test
xchg
inc
jne
mov
ljmp
dec
mov
testl
lds
cmpsl
stos
fildll
and
fildl
push
mov
inc
stos
mov
xchg
gs
and
mov
jg
lods
sbb
pop
push
cmp
leave
fwait
adc
mov
xchg
xchg
inc
aaa
scas
add
xchg
xlat
into
inc
xchg
into
cmp
sbb
stos
sub
pop
jne
outsb
cmp
fwait
jg
lret
call
arpl
xchg
add
pop
sub
bound
and
stc
fistl
sbb
movsl
gs
cmp
xchg
loopne
icebp
jge
sbb
icebp
mov
addl
sub
and
into
cld
sahf
add
lcall
sub
pop
sbb
dec
sbb
and
cltd
iret
popl
sub
mov
loope
fdivp
out
push
pushf
xor
xchg
insl
ljmp
sub
pushf
xchg
call
adc
mov
hlt
cmpsl
int
push
adc
xchg
xlat
shll
jbe
stc
mull
dec
in
mov
ret
jle
dec
rcl
iret
or
and
lret
rcrl
mov
mov
mov
pop
lods
push
jge
fdivs
cmp
push
lret
mull
sub
mov
cmpsl
mov
sbb
aad
jo
in
movsl
out
pop
push
pop
or
repnz
inc
jb
lret
jecxz
and
call
jmp
xchg
lods
pop
jnp
cmpsl
dec
stc
lret
mov
stos
add
lret
push
int
pushf
sub
fmuls
outsl
jle
dec
adc
push
shlb
and
inc
push
daa
mov
ret
dec
mov
fnsave
or
pop
xchg
aad
repnz
sub
decb
das
insl
andl
sub
and
mov
loop
push
shl
or
add
adc
ja
add
cmc
enter
mov
cld
cld
cs
fstl
ja
faddl
jnp
xor
ss
popf
ret
pop
cmpsb
sub
aaa
cmpsb
sbb
hlt
jmp
sbb
push
xchg
notb
xchg
adc
adc
enter
jns
jmp
mov
iret
pop
sub
rcrl
daa
out
xchg
inc
fwait
push
sub
iret
push
sahf
test
inc
jp
clc
gs
pop
je
pop
outsl
adc
sub
xor
das
sarb
psubsw
mov
cmp
dec
js
xor
sbb
in
mov
divl
push
mov
and
or
ret
lock
fabs
mov
dec
mov
jp
lea
js
pushf
xchg
inc
lret
xchg
fucomp
decl
int3
ja
dec
movb
mov
cmpxchg
add
mov
enter
nop
data16
repz
cltd
mov
mov
div
es
fadds
int3
sub
mov
dec
mov
adc
pop
xchg
pusha
scas
xchg
push
xchg
nop
in
push
aas
mov
pop
push
stos
cmp
xor
and
mov
xchg
fisttpll
mov
fisubrs
std
xchg
out
test
mov
outsl
ret
jae
in
adc
mov
pop
sbbl
sahf
repz
mov
sub
xorl
fiadds
push
add
adc
outsb
mov
dec
cwtl
lcall
cmpl
mov
sbb
inc
push
lods
imul
push
test
mov
xchg
dec
fwait
int
pop
pop
sbb
daa
out
add
mov
pop
and
imul
cmpsb
repnz
pop
notb
dec
xchg
add
shl
push
cwtl
push
dec
adc
fwait
push
arpl
add
mov
ret
pop
out
mov
daa
out
xor
pop
in
insl
xor
lea
std
xchg
cmpsl
add
stos
cmp
push
nop
fdivrl
lods
pop
cmp
xchg
fsubs
adc
jl
addr16
mov
dec
push
adc
shlb
and
push
imul
push
jmp
ret
pop
or
and
shlb
out
divb
fsubrs
xor
aaa
imul
clc
loopne
mov
test
in
hlt
out
cmpsl
mov
ret
lods
ret
pop
dec
add
clc
pop
pop
enter
in
mov
jnp
dec
sbb
mov
push
dec
lahf
mov
fsubs
mov
pusha
cmp
nop
mov
add
stos
inc
xchg
imul
jmp
push
pop
lret
in
cld
dec
cmpsb
push
aam
pop
push
xor
and
inc
jno
jecxz
shr
add
dec
or
cltd
shl
adc
aam
jmp
ljmp
pop
xchg
lahf
sti
pop
jmp
pop
repnz
mov
inc
fistps
and
jne
pop
add
das
and
in
xchg
sub
jl
dec
xchg
push
xor
add
in
into
mov
push
inc
movl
push
add
add
jg
frstor
jp
stos
fwait
in
lret
int
enter
mov
xor
gs
insb
rcrb
test
pop
xor
pop
hlt
dec
js
xchg
push
sarl
fisubrl
loopne
mov
or
jb
xor
test
or
dec
fnsave
mov
dec
movsl
repnz
xor
vpshad
sbb
or
and
xchg
ret
add
mov
pop
push
cmp
fsubrl
cmp
inc
mov
mov
xor
movsl
lahf
cli
mov
jbe
pop
hlt
jbe
adc
xchg
jno
sbb
flds
lods
insb
in
mov
dec
cwtl
and
ljmp
rolb
shrb
outsl
xor
cmp
lea
mov
sub
jge
scas
notl
test
stc
mov
or
fnstsw
push
mov
fstpt
sub
xor
stos
aas
and
mov
cmp
xchg
test
push
jo
test
jo
or
mov
push
cwtl
and
fs
mov
sahf
and
adc
xchg
outsl
loopne
hlt
lcall
in
inc
fcmovnu
mov
or
rcrl
lock
nop
push
sbb
inc
xor
pop
mov
aam
xchg
sbb
mov
icebp
push
cmpsl
jg
push
stos
push
insb
sti
icebp
test
mov
or
jg
nop
int3
frstor
or
loope
pushf
jb
jmp
xchg
cmpb
ljmp
pop
fidivrl
fldenv
pop
sub
sub
xor
and
or
pop
idivl
testb
jo
cmpsb
movsl
jb
pop
jns
daa
xchg
hlt
lds
sbb
movsb
sarl
addl
pop
xorb
sub
imull
push
testb
outsb
call
jg
or
stc
nop
cwtl
cmpsb
xor
mov
and
stos
sbb
jae
mov
jp
and
mov
push
popf
pop
scas
outsb
repnz
dec
inc
pop
mov
lock
js
loope
jo
xchg
push
push
cmpsl
shll
mov
enter
fmul
push
sbb
lahf
call
bound
xor
test
inc
sub
mov
mov
jg
rcrl
and
sub
mov
idivl
adc
jl
xchg
movsl
sti
push
add
pushf
jl
lock
push
and
outsl
mov
push
mov
pop
fsubrs
push
ret
sub
jle
outsl
shlb
mov
sbb
dec
xchg
push
xor
pusha
and
mov
push
shrb
js
or
jne
imul
roll
sub
pop
cld
mov
arpl
lret
daa
mov
cmp
ret
rclb
pushf
addr16
mov
adc
jmp
jmp
adc
dec
scas
pop
icebp
fisubl
mov
addr16
loopne
daa
or
push
mov
mov
test
dec
pop
outsl
push
mov
cmpsl
inc
mov
loope
loopne
jl
lret
hlt
mov
es
fidivl
dec
shr
xor
mov
dec
jle
mov
and
hlt
and
mov
mov
sbb
ret
jl
rol
call
mov
shlb
pop
fmuls
outsb
xchg
movsl
sbb
call
fidivl
jmp
aas
push
adc
jmp
add
sub
xor
mov
les
jno
testl
test
shrl
pop
lods
popf
cltd
daa
inc
dec
stos
lds
gs
sti
dec
xor
jns
mov
sub
xor
arpl
hlt
sar
stos
sub
int
stc
and
push
pop
xor
xor
pop
lea
sub
ret
iret
shrb
sub
pop
lds
sub
in
dec
jne
adc
and
inc
sbb
or
pushl
mov
mov
outsl
loop
push
adc
movsl
aam
in
pop
mov
aas
repnz
bound
mov
mov
fldpi
sarb
lock
sub
mov
aaa
mov
test
mov
mov
fwait
loop
push
inc
test
shlb
inc
pop
movsb
stc
cltd
push
xchg
push
lret
pop
shrl
psrlq
jne
stos
jecxz
adc
insb
aas
es
pushf
pop
jp
int
cld
lret
xor
add
mov
or
leave
in
fwait
mov
jbe
cmp
mov
inc
mov
and
pushf
add
sbb
jb
xlat
xchg
xchg
and
jmp
adc
push
cmpsb
icebp
xor
or
push
or
mov
loopne
jno
and
push
fwait
int3
outsl
orb
out
jno
xchg
loope
or
mov
dec
popa
dec
inc
push
lock
push
cmp
sub
outsb
sbb
add
cmc
xor
dec
adc
mov
mov
dec
xchg
das
push
xlat
scas
pop
cmp
lock
repz
jns
cli
mov
aas
test
stc
ss
scas
adcb
xor
je
mov
mov
scas
cld
imul
mov
xchg
movsl
xor
adc
add
sub
sub
push
jp
sbb
mov
repz
fsubrp
push
ret
jp
push
aaa
jg
lods
add
adc
insb
xlat
divl
outsb
pop
cltd
adcl
sti
aam
inc
mov
jo
imul
push
mov
xor
or
movsl
imul
and
scas
jae
mov
in
jl
cmp
pop
and
test
xchg
dec
js
mov
add
je
sbb
pop
data16
out
shr
shrd
ja
push
js
mov
in
sbb
mov
mov
mov
test
in
mov
cmpsb
dec
mov
mov
cmc
mov
out
mov
stos
and
scas
inc
cmp
stos
lahf
pop
sahf
inc
loop
imulb
jnp
add
pop
add
lds
jbe
pop
pusha
mov
mov
push
dec
mov
into
iret
mov
stc
jp
mov
sbb
push
fs
test
pop
pop
arpl
decl
or
or
push
gs
lcall
pop
outsb
mov
jno
or
push
sub
iret
xchg
jl
bound
add
cmpsb
or
add
xchg
pop
loope
adc
jge
shl
cmpb
add
xor
pop
jmp
lods
leave
jne
test
outsb
testl
aam
shlb
mov
mov
cmpsb
adc
push
add
push
lods
je
popf
scas
shrb
loopne
cmc
pop
imul
add
dec
ret
fbstp
jo
xor
sbb
inc
insb
add
add
xor
idiv
out
rorb
jge
ret
dec
lcall
mov
lods
mov
adcl
mov
in
mov
in
ror
push
mov
cmp
lods
cld
adc
lods
into
xchg
scas
fsubl
js
mov
movsl
mov
pop
lods
jmp
or
fmul
shlb
out
push
lods
cmp
sub
mov
fs
xor
dec
and
mov
mov
imul
lret
outsl
hlt
dec
imul
and
lret
negb
xor
bound
jno
mov
add
pop
mov
rorl
out
add
scas
shl
rol
dec
push
dec
test
push
xchg
popa
aad
sub
or
fiaddl
outsb
sub
xchg
pop
sub
xor
inc
negl
jns
hlt
lods
clc
das
out
sahf
sub
hlt
mov
push
lahf
fidivrl
push
dec
mov
inc
mov
out
sub
jge
jbe
lods
icebp
lret
or
pop
xchg
mov
cld
popa
pop
and
lahf
push
inc
pop
xchg
nop
dec
mov
mov
lds
sbb
push
mov
sbb
pop
xchg
sahf
inc
and
sahf
das
scas
mov
mov
or
mov
mov
loope
push
or
inc
pop
push
ja
rol
push
or
dec
nop
psrad
je
jl
xlat
outsb
rol
adc
ret
mov
fldcw
pusha
mov
inc
ds
inc
xchg
push
mov
dec
cld
imulb
push
pop
ljmp
test
sbb
stc
loop
sbb
roll
test
out
jb
ljmp
test
fidivrs
mov
push
push
ljmp
iret
rcl
incb
aaa
adc
outsb
pushf
pop
adcb
inc
shlb
lea
fs
push
xchg
inc
mov
sbb
and
test
cmp
push
and
or
loop,pn
push
jb
xor
xchg
das
adc
xchg
push
cs
add
xor
xor
push
mov
stos
enter
cli
xor
xor
dec
out
sub
jmp
push
pop
xlat
xchg
inc
mov
int3
ret
rclb
dec
sub
je
std
ficomps
lret
jne
int3
sbb
push
inc
push
mov
mov
push
jl
inc
inc
sub
pop
ret
xor
daa
cld
out
flds
mov
lock
push
mov
nop
push
lahf
add
call
popf
movsb
xchg
sbb
scas
popf
add
dec
cs
adc
and
push
fmuls
filds
dec
test
lods
add
add
adc
rclb
nop
lret
scas
test
mov
lea
mov
data16
mov
pop
clc
add
frstor
mov
ss
mov
fists
sub
jecxz
int3
fistpll
xchg
and
xchg
insb
fnstcw
mov
mov
int3
imul
movsl
scas
cmp
push
int
push
pop
fs
cmp
pop
xlat
leave
icebp
inc
sbb
sahf
adc
push
xchg
cmpsb
jmp
cltd
cld
or
inc
sbb
cltd
mov
inc
cltd
mov
popa
repz
jnp
sbb
pop
sbb
scas
in
sbb
movsl
dec
cwtl
shrl
pop
jl
cmpsl
ja
test
jns
inc
xor
roll
jns
sub
dec
xor
arpl
sahf
icebp
popl
xor
imul
jg
jle
es
out
adc
mov
xchg
push
sub
shr
lods
xor
mov
push
subl
ljmp
out
jo
outsl
scas
mov
inc
mov
inc
and
cmp
in
mov
pop
mov
xchg
dec
push
bound
ret
xchg
mov
mov
sub
repz
rcrb
mov
mov
fisttps
inc
inc
mov
jo
xchg
lods
fdivrl
icebp
and
mov
xlat
insb
xchg
loopne
jo
cs
cli
iret
mov
xor
outsl
das
and
outsb
dec
mov
lds
mov
dec
adc
movsb
mov
xchg
mov
add
std
sti
and
into
mov
xor
clc
mov
push
pop
cld
inc
cli
pop
bound
cmp
mov
mov
push
nop
cmpl
mov
inc
xor
sbb
dec
xor
js
fnstcw
jmp
dec
jmp
xor
cmpsl
rolb
cld
js
call
das
jae
rorl
gs
sbb
cmp
xor
mov
adc
dec
clc
std
movb
testl
je
adc
jl
int
cmpsb
int
addr16
add
imul
js
andb
ds
lret
aaa
in
cmp
sarl
add
idivb
int
sahf
test
add
stos
push
test
out
xchg
mov
mov
es
sarb
and
leave
cmp
push
mov
xor
dec
pushf
adc
cmpsl
jl
inc
int3
sbb
popf
fmull
pop
push
orb
and
mov
lods
int
fwait
push
fcompl
sbb
mov
scas
shlb
stos
and
and
mov
and
cs
aaa
dec
xor
cwtl
mov
xorl
push
roll
scas
je
sbb
das
test
cmp
nop
test
inc
aad
clc
sub
sub
jbe
ja
pop
adc
cld
fsubs
mov
int3
or
sti
out
and
mov
stos
ljmp
outsl
out
mov
outsl
and
mov
gs
imul
out
stos
or
add
hlt
sbbb
and
and
sbb
mov
sub
aam
fadds
shlb
in
pop
fcmovnu
pop
push
pop
or
test
mov
jg
ret
sub
pop
ss
sti
and
xchg
movsb
in
xor
out
xchg
add
fbld
sbb
in
sbb
rol
xor
dec
and
and
mov
int3
bound
or
insl
cwtl
dec
je
loopne
dec
add
stc
fstps
add
and
int3
mov
lret
cwtl
lcall
je
pop
mov
fcmovne
xor
fldenv
cmpsl
ljmp
ret
sbb
jg
sub
mov
mov
xor
jns
jecxz
lahf
icebp
enter
jmp
cmpb
inc
mov
jl
aas
lds
pop
xor
push
test
xor
pop
xchg
jo
mov
ss
bound
or
arpl
lods
jl
jno
sub
jl
add
sbb
loop
pushf
in
jnp
in
pop
sub
out
cmp
insb
cltd
cld
repnz
xorl
ja
fnstenv
pop
out
sbb
and
push
jbe
int
sbb
jnp
pop
inc
or
scas
fnstenv
fcompl
add
rorb
sub
xor
push
inc
xor
xchg
cltd
xchg
sbb
jne
clc
xchg
adc
test
pop
scas
mov
inc
or
pushf
aaa
inc
pushf
mov
leave
or
gs
xor
lods
sbb
ret
inc
fwait
in
adc
inc
outsb
fisttpll
mov
cmp
xor
in
dec
jg
mov
jecxz
push
lds
les
mov
mov
push
mov
cmp
aam
aas
jb
mov
ret
sbb
push
sahf
mov
imul
xor
repnz
rcrb
pop
sti
jne
movsb
popa
pop
lcall
mov
xchg
les
sarl
fdiv
sti
ret
nop
addr16
jle
lds
push
popf
pop
mov
sub
cld
into
stos
fst
pop
mov
sarl
lock
and
loopne
ja
push
rolb
scas
add
imul
xor
enter
push
mov
mov
and
scas
xchg
sbb
decb
jns
jae
popf
xor
daa
data16
jg
push
lods
and
bound
out
dec
jb
mov
mov
mov
push
xchg
scas
xchg
int
imul
int3
jno
and
push
mov
lods
xor
xor
out
pop
pop
sbb
sbb
dec
arpl
dec
push
fcmovu
insl
addr16
mov
add
jne
repz
stc
cmp
popa
sbb
js
int3
push
pop
icebp
add
mov
xchg
fnsave
and
les
lock
and
or
cli
imul
fwait
mov
pop
flds
mov
push
add
jp
daa
nop
shrb
cmp
shlb
cli
mov
sbb
adc
mov
push
xchg
sbb
pop
lret
loopne
push
gs
clc
push
sbbl
xchg
repnz
jne
push
jle
dec
faddp
or
sub
sbb
cld
adc
add
mov
das
push
dec
out
dec
mov
jecxz
mov
cwtl
xchg
movsb
ret
or
lcall
jae
pop
or
int3
insl
fadds
inc
mov
loop
mov
orl
les
dec
inc
cmp
adc
outsb
shll
fnstsw
or
dec
fwait
xchg
xchg
xor
sbb
push
and
lock
jecxz
sbb
or
fistpll
push
add
jae
add
mov
fcomip
fisttps
xchg
jae
in
scas
shl
inc
cmp
push
rorb
and
out
inc
mov
ds
dec
idivb
xlat
in
fwait
sarb
jl
cmpl
mov
jmp
loop
xlat
jmp
popa
stos
imul
scas
pop
mov
fadds
pusha
in
cltd
lds
daa
push
pop
ljmp
pop
inc
pop
mov
jecxz
push
das
sti
das
loope
outsl
lods
ret
xor
mov
push
out
mov
jnp
jl
lods
mov
xor
scas
jb,pn
sub
mov
mov
stc
stos
fs
hlt
test
testb
out
gs
dec
sti
in
jecxz
mov
and
in
les
jnp
and
cmpl
test
dec
loop
pop
test
dec
imul
jg
inc
jp
mov
add
out
pop
ss
mov
ret
mulb
push
stos
fisttpl
xchg
pop
bound
ret
cld
or
ljmp
pop
mov
test
xor
jb
jo
push
pop
lock
fsts
js
pop
mov
fstpl
mov
out
ret
ss
in
sarl
cmpsb
mov
add
add
in
cmp
and
dec
push
loop
ljmp
or
xchg
mov
fisubrs
icebp
or
mov
pop
jo
flds
or
sub
and
in
and
xchg
cmp
icebp
in
mov
mov
arpl
sub
imul
in
inc
shrl
push
mov
lods
sbb
lahf
jecxz
jge
mov
loope
push
cmpsb
dec
stos
dec
mov
cmp
add
xchg
outsb
push
pop
insb
test
test
jbe
jp
lock
test
test
mov
and
push
movlps
and
andb
dec
fsubl
mov
sahf
aas
cli
int
pop
lahf
xchg
lret
sub
idivb
xchg
adc
std
pop
ds
nop
mov
mov
lock
jb
add
es
sub
cmc
add
cmc
mov
jns
cmc
mov
arpl
mov
ds
pop
out
stos
mov
repz
dec
jno
mov
or
lods
pop
push
sarl
arpl
or
int3
ret
or
in
inc
nop
pop
push
lahf
mov
xor
sahf
mov
mov
in
lods
inc
pop
int3
sbb
std
iret
clc
icebp
push
dec
hlt
das
push
add
cmp
fadds
dec
dec
sub
xor
shrl
imul
clc
arpl
outsl
pop
mov
or
faddl
andb
sbb
or
mov
or
cmc
mov
jl
clc
stc
push
cmpsb
xchg
aam
int
dec
push
push
mov
mov
mov
mov
mov
push
std
sti
in
hlt
nop
sbb
sbbb
scas
js
mov
pop
in
test
cmp
sub
xor
cmp
or
nop
add
sbb
cwtl
fs
push
push
inc
pop
mov
int3
mov
xchg
sbb
mov
outsb
mov
and
popa
mov
popf
mov
test
lods
popa
cli
int
mov
xchg
in
fidivs
cli
pop
dec
xchg
mov
dec
fs
mov
shll
dec
sub
repz
mov
andl
push
push
cmp
test
pop
adc
mov
mov
add
lds
int
inc
cmpsl
inc
stos
jns
dec
daa
sbb
mov
sti
stos
std
insl
mov
aam
int
imul
jnp
call
cmp
clc
sub
or
cmp
aaa
orl
pop
mov
out
sbb
clc
aam
add
mov
inc
cld
push
cmp
sbb
cmp
xor
sub
pop
out
imul
xchg
jg
rcrl
fildl
push
aas
jne
pop
cs
sarb
cmp
jns
int3
add
bnd
pop
lea
out
iret
out
jle
and
sub
sub
xor
cld
cs
pop
add
iret
test
pop
shrl
lret
lret
mov
out
ret
rep
lcall
mov
sahf
inc
fdivrs
sub
loop
in
inc
test
cmp
xchg
popa
fs
repnz
jmp
stos
in
popf
xchg
aaa
cmp
adc
fs
loope
popa
push
daa
daa
daa
les
addb
fucomi
cli
or
loope
inc
in
xor
sbb
and
mov
subl
mov
mov
push
xchg
popf
pop
sub
loopne
rcll
aas
inc
push
scas
popa
imul
scas
push
inc
sbbb
push
adc
push
lret
mov
inc
aad
movsb
arpl
test
dec
leave
pop
bound
or
jae
or
mov
lret
fistpl
sub
xchg
mov
dec
adc
or
orb
mov
dec
xlat
adc
jb
inc
or
dec
rorb
nop
test
xchg
icebp
lea
std
push
sub
mov
out
lret
cmpsb
aas
out
xchg
jae
adc
xor
ret
js
adcb
push
sti
jge
adc
cmp
pop
repz
sub
enter
xchg
and
cltd
cwtl
sub
mov
xor
popf
test
je
mov
adc
dec
mov
sbb
xchg
daa
lcall
loope
mov
pop
shll
cmp
mov
nop
arpl
cmpsb
loop
dec
fbld
mov
sahf
fisubl
lods
push
inc
ja
insb
out
mov
push
xchg
insl
or
nop
mov
dec
fldl
and
xchg
sub
das
popa
pop
xchg
test
xchg
bound
adc
scas
popf
add
inc
dec
repnz
ret
je
and
pop
daa
loopne
pop
adc
popa
or
sti
lea
mov
sbb
pop
rcll
sub
fwait
xchg
aad
les
into
lea
pop
lret
push
add
or
and
dec
adc
mov
in
clc
test
xchg
movsb
mov
incb
sub
mov
stos
mov
aad
adc
leave
and
cmc
es
fnstenv
aaa
dec
push
ljmp
add
ds
les
xchg
lretw
pop
sbb
pop
jne
in
repz
mov
insl
push
negb
out
lret
por
adc
fs
cmpb
loop
mov
jns
out
mov
loope
pop
push
inc
inc
xchg
jno
into
pop
cmp
push
sbb
lock
out
out
out
cli
fists
iret
jmp
mov
mov
in
xchg
rclb
pop
shll
fiadds
lret
roll
gs
pop
flds
cli
jl
ret
nop
cmp
faddl
cli
bound
add
dec
xor
test
adc
pop
inc
aad
imul
xor
aaa
mov
insb
jp
adc
aaa
jp
xchg
mov
push
mov
jb
mov
or
adc
loopne
loope
mov
xlat
jp
mov
das
scas
dec
mov
inc
mov
mov
imul
add
xor
jecxz
jl
fsubrs
xchg
xor
sbb
xchg
stos
stc
cmp
shlb
shll
mov
stc
mov
iret
rcrb
mov
adc
jno
xor
std
icebp
mov
jl
lods
cmc
mov
xlat
mov
cs
inc
hlt
mov
mov
xor
cmc
aas
xchg
push
dec
jl
adc
data16
pop
dec
xchg
mov
xor
xchg
fbstp
ret
cltd
adc
clc
mov
inc
sbb
rolb
es
add
out
lock
out
jae
sbb
push
dec
ljmp
in
xchg
add
or
out
add
mov
out
xor
iret
ds
clc
xchg
mov
cwtl
pop
dec
mov
lahf
adc
mov
push
in
sub
dec
gs
xchg
mov
sbb
or
sbb
lods
mov
pushf
daa
fs
dec
xor
ret
jle
rclb
add
xchg
rcrl
pop
sub
mov
loopne
xchg
ficompl
add
aaa
xor
outsl
rcrl
or
outsb
repz
xor
mull
cli
and
dec
push
lods
out
inc
dec
test
sbb
leave
rorb
enter
adc
push
sub
repz
les
fsubr
sbb
cmp
insl
xor
stc
mov
inc
incb
sbb
dec
inc
shlb
mov
out
add
mov
pop
ret
or
mov
les
popf
notb
dec
pop
cld
dec
dec
add
adc
gs
mov
popa
xchg
repz
inc
cmpsb
xor
mov
dec
and
lock
sbb
adc
cmp
bound
mov
icebp
mov
push
rclb
mov
mov
test
je
mov
add
mov
lahf
xchg
cld
pop
out
insl
movsl
and
sbb
mov
xlat
inc
fcmovnbe
aam
arpl
mov
cmp
test
jno
lods
frstor
scas
pop
cmp
ja
xchg
stos
add
hlt
cmp
adc
es
cmp
cwtl
jge
lods
push
imul
repnz
int
jbe
and
dec
mov
mov
pop
mov
pop
int3
dec
or
dec
mov
push
int3
cmp
xor
mov
aas
add
mov
repnz
add
jo
sbb
notb
jno
jge
movsb
addl
shll
lcall
mov
and
inc
mov
fildl
scas
add
fsub
in
pop
pop
push
daa
scas
mov
scas
add
scas
xlat
lcall
lea
int3
les
xchg
mov
cmc
ret
fstpl
sub
aam
call
push
lock
notl
addr16
mov
fs
clc
pop
jl
addr16
xlat
xchg
ffreep
dec
mov
test
fidivrl
add
and
aaa
push
test
insb
out
aam
arpl
adc
mov
nop
insb
iret
cltd
dec
sarb
jg
iret
cwtl
fs
sub
es
icebp
mov
mov
scas
or
lcall
inc
inc
in
shll
and
xchg
in
add
jns
aas
leave
xchg
les
adc
xor
jmp
sbb
mov
cltd
mov
pop
pop
loop
lret
inc
insl
cmp
lcall
mov
icebp
adc
addr16
int3
add
xchg
cli
or
ds
inc
std
sub
stc
divb
jp
jg
lcall
imul
inc
ficompl
sub
xchg
test
adc
mov
insl
sqrtps
push
push
enter
sbb
enter
pop
xchg
cmp
push
add
fmuls
cmp
sbb
pop
loope
lahf
pop
test
push
cmpsb
pop
inc
pop
add
sub
xchg
mov
or
mov
xchg
dec
insl
dec
fisttps
imul
das
mov
mov
ror
push
xchg
fdivs
ficompl
in
mov
lea
pop
lea
xor
sbb
push
lret
cmp
xchg
add
adc
daa
pop
in
das
repnz
add
pop
mov
notl
call
jbe
mov
push
inc
pusha
je
clc
mov
pop
mov
das
clc
bound
push
and
enter
dec
mov
xchg
add
cmp
test
pop
cmc
movsl
fiadds
in
cli
dec
inc
das
xchg
push
lret
push
cmp
shrl
mov
jge
sahf
or
inc
and
pop
mov
mov
imul
cltd
add
mov
xor
pop
rclb
cmpsb
jo
pop
cs
clc
sub
jnp
lcall
insl
jmp
pop
fnstenv
mov
outsl
add
adc
push
scas
xchg
or
into
cmc
stos
push
loop
cld
mov
sar
lods
xchg
add
lret
test
leave
add
sub
cld
clc
test
repnz
mov
sub
add
mov
push
pushf
ljmp
mov
sbb
xor
mov
mov
les
adc
sub
fldl
loope
mov
lret
sub
or
mov
mov
push
fs
lahf
pop
fildll
lods
hlt
aad
sahf
divl
ss
push
xor
and
xchg
cmp
pushf
jge
shrl
push
pop
das
cwtl
out
negl
inc
mov
shll
test
mov
das
popf
sub
and
into
adc
cmpsl
adc
inc
or
cmp
dec
add
sbb
insl
pop
or
mov
xchg
mov
frndint
xchg
daa
scas
mov
or
adc
xor
std
jns
mov
call
sbb
cltd
mov
test
jle
fcoml
in
je
pop
jl
repz
je
mov
xor
outsl
push
mov
push
jo
daa
or
adc
mov
mov
loopnew
xor
push
sub
std
std
loopne
mov
iret
out
filds
cmp
das
outsl
ss
out
je
sbb
shlb
fisubl
lods
stos
jb
pop
loopne
pop
sbb
mov
xor
jb
out
mov
adcl
jp
dec
aas
xor
cmpl
xchg
int3
fs
clc
jle
push
cmp
mov
inc
out
and
xchg
jle
mov
add
rolb
sbb
stos
arpl
or
test
out
arpl
orb
sub
push
push
aam
adc
and
and
fs
xlat
insb
mov
pushf
mov
xchg
bound
ljmp
lea
out
pop
xor
xchg
cmp
leave
pop
push
push
push
jne
push
popa
pop
and
repz
ds
mull
pop
mov
mov
xor
jnp
add
bound
sub
ds
shll
js
cmp
jae
xor
add
dec
add
dec
xchg
lcall
inc
mov
dec
lahf
inc
inc
fimull
jae
aas
cmp
mov
sub
mov
icebp
loop
cmp
ljmp
movsl
jle
mov
in
loopne
ds
popf
cs
cmp
hlt
pop
stos
xor
jbe
or
fwait
ret
jmp
sbb
push
ja
iret
addb
lret
je
sbb
pop
jle
pop
pop
inc
cs
in
rcr
gs
repz
je
mov
je
cmpsl
and
gs
mov
sub
imul
pushf
outsl
sbb
outsb
pop
out
xor
mov
add
mov
push
arpl
in
adc
rclb
fdivs
fistpl
mov
xchg
jbe
dec
ucomiss
iret
hlt
leave
pop
bound
push
fsts
xchg
push
pop
and
adc
jae
jmp
dec
ljmp
addb
dec
sub
stc
or
or
push
inc
mov
add
test
mov
iret
mov
addr16
xchg
sbb
ja
nop
ss
pop
xor
stos
dec
adcl
mov
sbb
jbe
adc
mov
mov
mov
push
push
mov
inc
pushf
inc
gs
pusha
enter
jno
and
dec
ljmp
sub
mov
in
or
and
iret
aam
leave
and
inc
xor
outsl
popf
sub
jle
sub
leave
adc
pop
jg
stos
add
mov
cld
pop
xchg
enter
loop
add
fisttpll
inc
adc
or
iret
sahf
push
repz
mov
add
test
sub
mov
ljmp
daa
inc
fs
add
mov
xor
mov
dec
cwtl
sbb
and
inc
filds
mov
sbb
inc
or
lea
add
shrb
or
push
push
aam
rol
lahf
out
pop
jmp
mov
pop
push
sbb
sub
sub
mov
cli
mov
mov
fcomps
sbb
cmp
mov
leave
nop
sub
aad
dec
inc
jge
inc
fidivl
aas
dec
in
adc
mov
aad
lods
lcall
dec
cli
shl
imul
aam
aaa
imul
sbb
push
sub
movups
loope
dec
js
jno
aam
bound
std
push
ss
pushf
ja
and
scas
adc
ror
dec
jge
jge
ljmp
les
xchg
push
push
jns
fs
push
jmp
inc
out
sahf
xchg
jmp
lea
cmp
fnstsw
out
xor
push
rorl
sub
cld
cmp
mov
das
push
push
jno
xchg
xchg
cmc
icebp
xchg
jno
and
cmp
addr16
xor
test
mov
cmp
clc
test
inc
sbb
in
push
mov
adc
add
push
xchg
insl
inc
cmp
xor
nop
and
in
cmp
fsubrp
aam
mov
inc
call
rolb
int
negb
ds
or
fcompl
hlt
call
lock
sub
fld
mov
loopne
and
insb
dec
inc
dec
xchg
xchg
mov
rcll
mov
into
push
and
push
roll
mov
pop
insb
sub
imul
push
jp
mov
xchg
jmp
sub
addr16
mov
push
or
mov
pop
popf
inc
sti
inc
mov
xchg
or
aas
enter
sbb
dec
xchg
cmp
addb
cld
push
jp
outsb
inc
cmp
mov
xchg
out
stos
dec
dec
pop
jp
adc
jae
add
add
mov
out
jae
ss
mov
pop
jb
lret
std
cmovb
pop
in
push
int3
fists
push
or
scas
xchg
ss
je
push
rol
push
in
mov
jo
cmp
fnstcw
mov
inc
inc
or
mov
lods
pop
fwait
in
into
mov
imul
mov
cmp
mov
notl
xchg
cmp
xchg
mov
out
dec
xchg
iret
fstps
ss
rcr
repnz
or
nop
mov
cmp
aad
mov
out
mov
adc
push
int3
ja
inc
inc
jp
enter
and
test
sbb
test
icebp
add
push
push
add
add
cmpsl
inc
repnz
in
out
popa
pop
mull
mov
lea
pusha
add
sub
add
xchg
add
orb
cli
xor
mov
inc
mov
sub
ret
mov
std
popf
adc
inc
add
mov
ficoml
loop
jge
pop
ja
mov
adc
mov
into
mov
mov
adc
mov
xchg
daa
dec
stos
popa
inc
push
push
mov
xor
repz
xlat
ljmp
cmp
mov
cmpsb
mov
mov
dec
jnp
push
jnp
adc
push
cmp
xchg
sbb
add
mov
aam
xchg
adc
jl
lods
loope
cmpsb
cmpsl
je
scas
movb
cmc
add
ret
subl
push
cld
pop
add
adc
cwtl
in
sub
jge
jns
out
lret
cmc
stc
pop
cs
in
or
mov
mov
clc
loope
push
push
div
add
push
lcall
lods
fnsave
xchg
dec
or
dec
pop
pop
push
gs
cs
adc
je
fildll
mov
jmp
mov
adc
mov
outsl
mov
mov
jecxz
xor
sbb
xchg
mov
lock
xorb
daa
jmp
mov
stos
mov
out
pushf
sbb
outsl
sarl
xor
push
es
in
sbbl
sub
xchg
sub
ret
pop
jle
pusha
push
mov
sti
mov
lret
fcomp
in
and
cmp
adc
out
mov
and
add
cmp
lods
cmp
inc
aad
outsb
mov
mov
addr16
in
scas
xchg
xlat
mov
dec
xchg
ds
in
ret
pop
movsb
cmp
adcl
push
or
lahf
movsl
or
test
data16
cld
sbb
movsl
shlb
fwait
adc
mov
mov
les
es
mov
mov
sbb
out
cmpsl
aaa
sub
sub
stc
insb
mov
sbb
lea
rcrl
xor
cld
jne
dec
std
jae
in
std
icebp
call
fcomps
mov
movsl
into
loope,pn
jmp
roll
mov
lods
test
jns
into
or
nop
testb
inc
mov
push
push
fcmovnbe
mov
jne
ror
pop
ret
jmp
xchg
mov
repz
rcrb
sahf
mov
cmp
test
stos
or
ja
faddl
lds
in
mov
and
mov
popf
mov
les
adc
xchg
pop
arpl
xchg
es
decb
mov
loopne
hlt
cmp
pop
adc
pop
mov
mov
andl
insl
cmp
pop
lea
rolb
or
and
pop
jno
popf
cmc
dec
jg
out
pop
pushf
jnp
stos
getsec
int3
cmp
or
pusha
sbb
dec
andl
add
nop
adc
sti
jns
test
dec
je
cmc
add
icebp
testl
lret
xor
addr16
js
test
enter
adc
pop
cltd
lret
push
push
dec
cld
clc
inc
and
cwtl
pushf
pop
or
arpl
fs
int
mov
mov
das
xlat
ss
std
sub
push
lret
rol
andb
int3
jae
imul
inc
pop
sub
pop
push
outsb
enter
lea
aam
push
and
jl
ljmp
mov
xor
gs
cltd
inc
and
sbb
or
adc
add
dec
jp
xchg
pushf
and
or
std
sti
add
dec
imul
cmpsb
mov
mov
into
add
sub
push
or
xchg
das
xchg
inc
cmpsb
lods
ficoml
hlt
or
and
inc
xchg
or
insb
jo
and
jno
jno
imul
push
fwait
repnz
mov
ret
mov
clc
es
leave
add
out
jmp
lret
push
push
or
jge
sub
fistpll
fwait
mov
dec
ss
call
jbe
movsl
shrl
in
mov
pop
rcl
push
lea
movsl
daa
cmovo
icebp
inc
or
push
into
push
test
cmpsl
sti
sbbb
xor
out
mov
imul
mov
push
jge
aam
dec
std
mov
out
dec
mov
sar
mov
pop
adc
call
or
gs
and
movd
lret
out
int
push
xor
pop
ja
mov
mov
fisttpl
mov
gs
mov
stc
shll
sbb
adc
sub
add
sub
daa
mov
clc
rol
mov
cmp
shl
pushf
scas
shrl
push
data16
xlat
pop
inc
mov
xor
jns
outsb
mov
addr16
dec
add
mov
mov
fcomps
and
imul
mov
stc
xor
aad
jne
clc
outsb
js
push
jne
shl
out
mov
push
push
and
push
lock
push
dec
iret
pop
mul
repnz
orb
out
insl
mov
loop
cs
push
test
jg
inc
out
lods
fdivs
or
nop
mov
mov
xchg
mov
or
xchg
rclb
inc
mov
sahf
cwtl
sbb
xor
mov
mov
into
dec
or
push
dec
pop
loopne
mov
jl
and
fisttps
adc
or
call
loop
dec
xor
rclb
pop
int3
gs
push
and
xor
in
and
pusha
jno
dec
fildl
mov
inc
in
jmp
push
pop
mov
ror
or
insb
mov
mov
loope
les
adc
pop
mov
jl
jl
pop
subb
adc
ret
push
lcall
out
test
xchg
xchg
outsl
push
mov
jmp
cltd
or
add
fmuls
sub
fisubl
icebp
out
shlb
mov
or
lods
inc
sbb
push
add
dec
xor
outsl
ret
mov
add
cmp
ret
sbb
pop
cmpsb
xor
fwait
ficompl
push
testb
mov
lods
or
addr16
xchg
or
sahf
xor
inc
pop
ret
add
xchg
and
aas
jge
xor
xchg
imul
in
sbb
jle
push
les
mov
jl
in
push
xchg
xchg
std
mov
lods
xor
mov
ljmp
inc
es
aas
mov
or
mov
stos
cmp
addr16
adc
imul
enter
fcomi
inc
jmp
jle
inc
lods
adc
out
push
insl
in
mov
lea
adc
mov
sbb
nop
xchg
cli
jae
jl
xor
cmc
add
jecxz
divb
or
pop
out
add
fisttpll
pop
movsb
es
jae
add
pusha
xlat
sbb
adc
mov
xchg
cmc
insertq
ds
aas
arpl
testb
jne
pusha
pop
adc
lods
inc
inc
ds
cmpsl
or
das
xor
xor
mulb
sub
inc
xchg
filds
inc
or
clc
mov
rorb
add
stos
pop
mov
mov
cmp
add
leave
dec
xchg
mov
lods
popa
je
js
xor
movsl
or
js
xchg
pushf
and
ret
aad
enter
cwtl
in
xorl
hlt
ja
rorb
jb
dec
mov
mov
cmpsb
push
ds
xor
sbb
mov
pop
rorb
out
push
loop
push
inc
mov
clc
std
jl
addl
test
cmpsl
fidivl
sbb
mov
lea
mov
subl
push
ret
xchg
dec
add
jle
clc
mov
mov
sub
cmp
xchg
pop
sbb
mov
popa
je
loop
mov
lods
xor
jo
jge
dec
std
xchg
mov
jo
push
pop
aad
ss
imul
jmp
push
loopne
lcall
mov
mov
sub
jl
jg
or
rcrb
sub
fdivrl
sbb
push
rcll
push
loope
sbb
data16
cld
outsl
cmp
push
leave
int3
push
fadd
xchg
popa
orb
out
lods
cmp
cmp
jnp
push
cmpsb
leave
loopne
jo
and
pop
out
pop
cwtl
shll
inc
push
mov
sub
roll
test
pop
mov
push
outsb
sbb
sbbb
sub
push
inc
mov
mov
sbb
xchg
jae
push
pop
popf
and
mov
push
aaa
mov
mov
jle
pop
lea
loopne
sbb
ja
into
pop
loope
faddp
push
sbb
insl
or
int
mov
ficompl
out
add
mov
idiv
or
rol
xchg
lods
add
shrl
push
push
ret
add
add
inc
popa
icebp
aad
addr16
inc
jno
jle
ficompl
xor
test
sbb
jmp
xchg
adc
push
sub
inc
test
stc
out
inc
je
cld
and
repnz
clc
add
jnp
fst
sub
dec
push
inc
popf
sbb
fwait
jle
inc
pop
rcll
xor
xor
arpl
jmp
cs
test
imul
leave
ret
add
mov
push
pop
fistps
cmpb
push
jne
stc
xchg
adc
pushf
push
stos
pusha
sti
sbb
ret
sub
aas
test
out
inc
adc
sub
gs
call
cmp
fsubrl
mov
fimuls
xor
adc
lahf
push
cs
pop
inc
inc
movsl
std
repnz
adcb
loop
jb
ljmp
test
loop
mov
mov
js
xor
push
push
mov
xor
sbb
addl
fsubp
and
adc
mov
insl
rorb
xor
cmc
sub
mov
lret
sahf
pop
lret
pop
mov
ret
cmp
xchg
or
out
jae
sub
mov
js
outsb
push
xchg
in
mov
adc
cli
jmp
jns
adc
xchg
adc
adc
iret
mov
out
mov
in
out
popf
add
rolb
and
sahf
imul
movsl
xchg
mov
out
sub
and
repnz
mov
loop
adc
fidivs
lret
stos
cmp
adc
pop
sahf
adc
adc
js
inc
lods
icebp
idivl
dec
imul
cmpsb
mov
jae
push
stos
jbe
sbb
jo
cmpb
das
mov
jl
test
scas
xchg
jnp
aaa
push
mov
aad
daa
mov
sub
add
xchg
movsl
nop
mov
or
xlat
dec
jg
sbb
mov
mov
aas
ud2
jnp
add
mov
pop
cmpsl
mov
mov
movsb
xchg
insl
hlt
xor
loope
xlat
jmp
ret
pop
clc
stc
xchg
leave
aad
mov
lcall
jmp
test
pop
popf
adc
mov
mov
push
aam
stos
sub
cmp
mov
sti
fs
or
xor
sub
push
sub
sbb
cmp
test
pop
xchg
and
addr16
mull
repz
cmp
pop
pop
add
and
mull
sbb
data16
sub
pusha
rcrb
push
data16
or
orb
loopne
sub
inc
xor
add
jg
loopne
iret
scas
mov
idivl
push
or
and
in
mov
jg
cmpsb
rcl
adc
mov
aas
addl
leave
movsl
iret
mov
cmp
lahf
push
jg
loope
mov
vpsubsw
mov
fisttpll
xchg
lahf
xor
ja
mov
sbb
movsb
jecxz
jns
scas
push
pushf
push
imul
jle
mov
arpl
or
insb
cltd
fwait
sub
sbb
xchg
xor
bound
sbb
sbb
popl
cmpsb
and
mov
cmp
mov
fstps
mov
test
pop
lcall
dec
cmc
and
aam
sub
mov
sbbl
cmp
fdiv
cmpsb
cmpl
mull
fbstp
sub
add
pop
out
loope
shll
mov
stos
adc
xor
out
dec
test
mov
dec
xor
or
pusha
and
lods
cld
jnp
testl
sbb
cmc
inc
movsl
fisubrl
aad
filds
adc
or
jae
in
push
push
xchg
in
fadds
lret
xchg
adc
ds
and
cmovnp
jg
pusha
in
data16
mov
aaa
idivb
lret
sub
outsl
clc
sahf
scas
dec
jmp
sbb
es
mov
cmc
and
sbb
adc
push
push
lret
dec
insl
mov
daa
mov
fldenv
lret
pop
jo
aad
xor
lret
roll
pop
jge
lret
sub
loopne
push
adc
stos
jno
pop
dec
test
aad
xchg
sbb
lahf
addr16
cmp
jmp
leave
popf
data16
inc
jb
daa
xchg
sub
ja
andl
fldenv
aad
mov
cmpsl
rcrb
aam
jbe
pop
mov
dec
mov
mov
mov
nop
aas
mov
lahf
pushf
fbstp
mov
pop
mov
xchg
ret
cld
adc
xchg
fwait
pop
fimull
or
sbb
test
adc
add
xchg
loope
inc
mov
push
sub
push
cmp
ja
cld
icebp
sahf
jle
dec
adc
mov
push
sbb
cmp
out
push
push
pop
jl
mov
ja
pop
push
add
inc
xorl
test
mov
add
sbb
aad
in
mov
push
sub
call
dec
and
les
xor
bound
jns
fisubrl
mov
pop
mov
std
cltd
jne
mov
gs
sarl
push
je
or
lods
pop
out
jg
inc
adcb
push
fsubl
cmp
loop
mov
cmp
ja
mov
aas
sbb
cs
shl
aad
shr
lret
stos
sbb
dec
inc
movsb
pop
inc
add
or
mov
dec
std
mov
mov
add
test
clc
mov
test
dec
mov
xchg
inc
mov
shll
mov
xchg
or
sarl
sub
sbb
call
mov
sub
loop
out
test
dec
xor
push
lock
lcall
push
ret
xchg
cmp
pop
sub
dec
arpl
cmp
dec
lea
or
xchg
stos
outsl
dec
and
jle
js
jb
mov
mov
mov
scas
mov
inc
outsl
xor
xchg
dec
add
jb
xchg
dec
icebp
add
push
and
rcl
cmp
lret
iret
mov
xor
mov
mov
jmp
fistl
xlat
or
lods
push
xlat
inc
sub
mov
decb
inc
data16
popa
mov
shl
and
mov
int
in
loope
or
test
aad
pusha
les
and
mov
mov
cmp
test
insb
jb
mov
lea
pop
jne
adc
subb
fadd
out
push
ret
sub
ss
ret
loope
and
add
test
sub
dec
or
ds
js
xor
iret
in
fildl
inc
dec
dec
mov
hlt
sub
in
xchg
cmpsb
clc
out
fs
lock
js
sbb
pop
xor
subb
int3
mov
cld
inc
mov
je
or
adc
jo
pop
adc
jmp
loope
jnp
or
cltd
das
imul
ret
sub
mov
daa
hlt
test
pop
rcrb
test
cmp
jecxz
pusha
push
mov
mov
sarl
xchg
cmp
xchg
rcr
stos
adc
ljmp
mov
jnp
add
sbb
int3
xlat
jl
scas
jecxz
lods
jecxz
out
dec
lods
dec
pop
loopne
imul
lret
pop
inc
dec
popf
cli
or
sbbb
lods
jle
sub
jle
dec
ljmp
js
lahf
cmc
repz
sarb
les
add
repnz
jmp
test
add
inc
movsl
mov
pop
stos
inc
xor
iret
jl
inc
loope
mov
mov
xor
adc
mov
cmp
jg
pop
cmp
xchg
aad
inc
dec
out
scas
sbb
mov
pop
sbb
sub
out
iret
mov
stc
arpl
in
mov
cld
mov
mov
stc
push
movsl
cwtl
test
hlt
xor
mov
cmpsl
add
cmp
cmp
pop
add
xchg
adc
jbe
mov
mov
cmp
aad
sbb
inc
out
arpl
push
xrelease
int3
lahf
js
das
inc
adcl
ja
mov
popf
sarb
pop
push
das
pop
pop
int3
outsb
adc
outsb
imul
pop
cltd
rolb
fists
lock
adcb
add
loope
jb
subb
pusha
mov
in
neg
in
mov
inc
int3
jmp
or
es
push
mov
push
sub
pop
ljmp
dec
push
ljmp
jb
fcomps
dec
jns
xchg
add
lods
pop
push
dec
adc
cmp
lret
insl
sub
pop
jg
divl
inc
out
jl
push
enter
xchg
lcall
lods
mov
or
jp
jnp
pop
arpl
imul
imul
ljmp
jl
dec
push
inc
aad
inc
divb
push
mov
in
and
mov
mov
mov
aam
mov
pop
ja
jb
push
and
jb
les
push
call
pop
push
ficoms
sbb
pushf
in
xchg
cwtl
mov
push
add
pop
notb
lea
ss
fwait
inc
push
loopne
jle
mov
addr16
mov
imull
call
into
bswap
xor
out
stos
mov
sti
icebp
leave
mov
mov
int
mov
push
mov
mov
stos
lock
aas
jne
dec
and
xor
ljmp
out
aam
pop
pop
sub
jbe
loop
pop
dec
fcmovbe
cmp
or
dec
jnp
sub
gs
mov
xor
out
jb
stc
inc
popf
cmp
jno
scas
fisubrs
out
mov
xor
push
addr16
add
cmp
inc
cltd
inc
and
mov
fistpll
out
mov
dec
shr
hlt
xor
and
es
cmp
inc
xor
mov
and
push
mov
fwait
push
push
and
cmp
jae
inc
test
mov
sub
jg
jg
sbb
pop
push
shl
and
movsl
rcll
dec
jl
xchg
sbb
ja
jp
bound
fmulp
sub
xchg
clc
out
add
dec
push
cmp
sub
mov
push
push
mov
jg
sar
or
pop
pushf
out
pop
gs
rclb
inc
mov
xchg
movsl
orl
loopne
addr16
and
bound
test
rorb
js
rclb
call
in
repz
mov
lea
scas
dec
gs
ret
addr16
sub
mov
xchg
pop
xor
pop
out
std
test
rcll
sub
aad
push
icebp
sub
xor
enter
xchg
scas
xchg
sub
and
aam
xor
push
adc
sub
imul
jecxz
mul
and
adc
lret
push
pusha
into
pusha
les
push
fdivrl
dec
pop
and
mov
dec
sub
mov
pop
and
in
sub
dec
shl
bound
xchg
dec
push
outsb
pop
mov
inc
test
fstp
cmc
mov
sbb
iret
push
mov
lret
cwtl
imul
jmp
mov
jmp
mov
xchg
push
cwtl
dec
xchg
mov
test
mov
sarl
inc
mov
mov
fldl
dec
cmp
jnp
cmc
in
dec
loope
mov
xchg
outsb
xor
iret
loope
fsubl
aam
and
dec
xor
negb
pop
dec
ss
mov
test
sub
pushf
pop
fisttpll
add
inc
mov
ficomps
outsl
lods
and
dec
jg
jecxz
push
imul
in
int3
add
test
sub
fs
ror
sbb
dec
adc
xlat
or
fsts
and
push
cmp
into
add
setg
and
dec
push
es
scas
sub
popa
jmp
inc
mov
movsb
sbb
shlb
jbe
in
mov
adc
or
jns
inc
and
dec
push
push
cli
xchg
fs
mov
xor
pop
mov
arpl
sub
loop
fwait
xchg
inc
mov
jmp
mov
jp
add
les
or
mov
pop
fisubrl
and
out
xchg
arpl
add
out
or
rorl
lcall
xor
push
loopne
xchg
sahf
sahf
push
test
and
orb
push
inc
lcall
cli
sbb
scas
inc
inc
sbb
ret
sbb
repz
popf
pop
sarb
es
shl
dec
add
dec
int3
call
push
das
pop
ret
rcr
repz
xor
aam
sub
sub
std
push
mov
jb
adc
sbbb
jne
fcmovu
push
push
pop
out
xor
fdivrl
sbb
lahf
loopne
lods
push
xchg
pusha
lcall
fadd
sub
pop
dec
sub
push
push
std
fs
push
scas
push
in
ret
push
sti
std
loop
ret
jmp
adc
pop
fwait
aam
aam
ficompl
dec
mov
cmp
lcall
addr16
mov
mov
jne
jnp
xor
mov
movsl
cmp
jns
inc
arpl
iret
out
sub
ret
mov
nop
call
jns
mov
jnp
mov
sbb
pop
mov
dec
adc
addr16
push
inc
mov
rcrb
sarb
sub
mov
pop
mov
mov
and
push
xchg
out
inc
bound
lret
cmp
sbb
and
mov
mov
lock
shl
jle
inc
ljmp
cmp
cmp
mov
leave
xchg
jne
and
mov
mov
dec
jne
test
mov
pop
and
enter
push
pop
lahf
popa
adcl
pop
cmc
mov
aad
test
jl
lret
add
addl
clc
and
and
arpl
lock
fwait
rcrl
clc
adcb
and
mov
fbstp
lret
push
cwtl
sub
xchg
push
inc
sub
jmp
jne
mov
mov
lds
jp
mov
push
sbb
stc
testb
ljmp
in
aas
sbb
shlb
inc
xor
cmp
das
dec
into
sub
out
push
and
stos
test
sub
mov
and
enter
hlt
dec
push
sub
rorl
jmp
push
mov
lds
pop
out
out
sarl
jb
lods
repz
leave
mov
xlat
inc
mov
mov
pop
adc
aam
in
add
or
or
inc
dec
addr16
in
pop
mov
aas
pop
mov
es
push
out
lahf
pop
out
fs
mov
xchg
or
xor
insl
sbb
adc
sbb
imul
test
mov
scas
mov
loope
mov
or
jmp
sub
loope
lea
cld
and
jb
or
movsl
test
mov
aaa
mov
div
jb
adc
movsl
adc
and
daa
dec
pop
ret
sbb
adc
loop
sub
cli
stc
cmp
stos
icebp
in
test
xchg
and
jo
xchg
out
and
clc
mov
mov
cmp
or
in
sahf
and
stc
jno
scas
push
lock
sbb
fstpl
cmp
rcl
xor
loop
in
cvttps2pi
xchg
mov
popl
xor
cwtl
bound
mov
cs
insl
mov
add
cs
cs
dec
shr
push
sahf
mov
lret
pop
adc
imul
mov
xchg
int
fsubs
data16
fistps
pop
mov
pop
inc
ret
dec
in
adc
dec
inc
adc
imul
fisubrs
sbb
pop
push
jmp
push
rcrl
mov
lret
xor
cltd
mov
addr16
das
mov
cmp
pusha
push
nop
rclb
das
adc
outsl
or
mov
sahf
cld
jl
fld
and
push
and
mov
mov
push
mov
mov
loopne
cwtl
pop
cmp
out
jb
lret
adc
pop
xchg
or
icebp
jb
loope
pushl
imul
mov
inc
add
fisttps
in
cmp
icebp
xchg
fsts
lds
pop
shll
or
xchg
mov
mov
cmp
sti
cmpsl
xor
ds
daa
jae
into
popa
shlb
mov
cmpsl
adc
mov
push
push
dec
js
lods
loop
or
jmp
or
adc
lea
test
jg
or
bound
fnstsw
push
lahf
push
pop
dec
cmp
jbe
in
dec
jno
adc
enter
mov
ret
cmc
pop
fimuls
iret
inc
fisubs
add
js
pop
scas
jne
pop
popl
loop
lcall
data16
jne
adc
jp
jnp
out
fiaddl
pop
shrb
xlat
rclb
nop
mov
xchg
mov
pusha
or
int3
add
dec
dec
add
mov
fwait
lahf
sub
imul
popf
pop
xchg
and
push
dec
jp
jo
lods
xchg
aas
push
mov
dec
outsl
mov
jge
adc
ficoml
fistpl
enter
mov
inc
fcomp
pop
ds
lahf
mov
or
lret
mov
cli
sbb
iret
pop
push
inc
and
icebp
push
rep
mov
adc
ds
mov
xchg
add
adc
jl
adc
lea
mov
outsl
and
adc
stos
loope
in
in
rclb
test
sbb
push
and
dec
xchg
xchg
pop
les
and
stos
pop
mov
adc
fmull
rcrb
or
sbb
dec
sbb
cmp
mov
mov
fcompl
imul
shlb
int
cs
fcmove
dec
lock
xchg
push
insb
cmpsb
pop
js
mov
sbb
jb
mov
dec
and
dec
pusha
cmpsb
aad
loope
sarl
stc
inc
dec
daa
and
push
jbe
cmp
loopne
bound
sub
in
and
lea
or
mov
rol
iret
dec
inc
ss
shr
frstor
gs
scas
mov
jbe
add
inc
out
mov
paddb
add
pop
mov
call
jmp
mov
dec
dec
jb
mov
int
mov
scas
aam
jbe
insb
iret
ja
dec
outsb
lret
or
dec
push
ret
imulb
fstl
pushf
add
orl
sub
aaa
lret
js
arpl
add
xchg
inc
cmpl
sbb
das
out
and
xchg
test
loopne
sbb
in
popl
sahf
daa
mov
mov
sub
imul
xor
dec
add
pop
pushf
cwtl
pop
dec
fwait
leave
push
test
lahf
lods
or
adc
sbb
xor
arpl
mov
popl
mov
push
jle,pn
pushf
lret
out
lahf
fimull
cmp
push
clc
xchg
fisubrs
out
imul
int
rdmsr
pop
lret
lahf
popf
shr
pop
xchg
ss
pushf
or
daa
xchg
jg
mov
adc
mov
sbb
push
jg
in
add
aas
repnz
xlat
cmp
icebp
pushl
ljmp
cmp
push
scas
jns
repnz
es
xor
or
add
mov
cld
jns
pushf
stos
call
pop
xchg
in
mov
fdivs
push
fsubl
sbb
idivb
cwtl
insb
fmuls
xchg
push
pusha
in
or
ds
add
pop
in
sub
jns
hlt
or
pushf
mov
dec
lods
sbb
or
mov
push
jge
loopne
pop
clc
fdivrs
xor
sbb
or
fisttps
cmp
test
inc
ficoml
inc
mov
push
mov
push
pop
rolb
loope
lock
push
cmpsb
popf
push
jae
insb
xchg
jnp
test
adc
stc
dec
lea
jecxz
hlt
cmc
fwait
dec
push
ret
fdecstp
sub
adc
popf
dec
jle
inc
cli
xchg
inc
clc
xor
mov
out
dec
cwtl
mov
sti
sbb
rcl
jb
repnz
sbb
inc
add
jmp
jnp
dec
repnz
inc
push
add
or
shrb
popa
fisubs
fsubrl
stc
clc
mov
add
jbe
mov
dec
mov
mov
jno
das
mov
sub
pop
lea
mov
ret
arpl
xor
mov
movsb
inc
iret
test
add
out
add
lds
mov
outsb
es
call
dec
fldenv
pop
ficoms
cmp
mov
sub
imul
sti
loope
xchg
xchg
mov
sbb
or
pop
vpand
lahf
xor
test
sbb
ljmp
dec
mov
movsl
push
fdivrs
sti
jmp
stos
xor
movsl
ds
or
add
ds
lods
gs
cmpb
enter
imul
mov
jmp
test
in
or
cmp
jnp
repnz
jmp
cmp
cmp
call
jg
push
jle
or
lods
mov
mov
fsubl
push
rcrb
inc
xchg
dec
xor
test
push
lret
pop
inc
jge
fisubl
stos
and
ret
push
mov
inc
mov
ds
sub
and
or
mov
dec
nop
test
dec
mov
daa
dec
mov
and
mov
add
xchg
imul
lods
fstl
push
out
add
imul
jo
fdiv
mov
loope
mov
test
adcb
daa
ds
mov
cmpsl
addr16
sub
scas
sub
pop
jb
cmp
push
leave
shll
aas
rorb
xchg
popf
and
inc
and
push
out
and
xor
fnstcw
ds
cs
dec
gs
std
pop
jmp
sub
jmp
loop
mov
push
leave
out
add
cmp
pop
xchg
lret
ljmp
data16
pop
fisubl
xchg
pop
cs
imul
test
stc
daa
add
fsubrl
cmpxchg
imulb
mov
cli
int3
ret
mov
pop
push
jnp
mov
adc
xchg
int3
sub
outsb
data16
mov
mov
insl
jg
loop
enter
mov
cmp
xchg
push
stos
lods
jp
js
add
stos
loope
addr16
scas
fisttps
xor
stos
sub
fwait
jge
sahf
sub
cli
and
dec
test
rclb
inc
xor
push
bound
aas
cmc
sbb
ret
std
leave
xchg
xchg
inc
pusha
xor
fbstp
jo
mov
je
leave
arpl
test
test
fidivs
ja
movsl
imul
xor
es
push
pop
hlt
xor
movsb
cmc
movsl
out
jecxz
enter
outsb
cmpsl
subl
mov
mov
mov
out
shl
outsb
adc
rcrb
mov
and
sbb
sarb
lret
movb
in
out
popf
movsl
jp
jecxz
mov
sbb
dec
loopne
mov
xchg
out
adc
rcrb
xor
test
mov
jmp
or
mov
fs
nop
std
leave
mov
das
xchg
mov
cld
int
hlt
sbb
ss
cwtl
push
stc
movb
sub
push
into
rolb
or
mov
or
aad
fmulp
jp
ret
gs
lret
mov
mov
adc
lods
in
cmp
adc
jl
mov
out
andb
cmp
pusha
adc
mov
aam
sub
fldl
ret
rclb
test
cbtw
mov
push
fwait
jb
pop
fcomp
jo
lcall
aas
jo
lret
cmp
mov
mov
aam
movsl
mov
add
or
xchg
stos
mov
and
sbb
push
add
add
mov
push
cmpsl
ja
mov
lods
insb
push
add
push
push
sbb
cld
addl
cmp
and
imull
fs
repnz
adc
xchg
jno
sahf
outsl
mov
insb
inc
mov
imul
mov
mov
out
jne
mov
jecxz
mov
rorb
sub
mov
outsl
test
ds
ljmp
mov
repz
mov
les
and
aam
adc
mov
mov
mov
fadds
add
mov
adc
push
push
pop
dec
mov
cmpsl
push
mov
ljmp
cmp
mov
call
jg
xchg
mov
and
xor
mov
jns
imul
push
frstor
lds
ja
stos
jns
icebp
cld
or
popa
xlat
pop
and
in
repz
ljmp
dec
pmaxsw
ret
xchg
add
push
mov
add
mov
jp
jbe
icebp
fdivs
lcall
decl
mov
ljmp
fisttps
test
inc
xor
test
xor
test
sbb
mov
ljmp
fstpl
push
pop
mov
pop
pop
xor
mov
dec
xchg
push
jns
insb
mov
mov
cmp
mov
aaa
jmp
ljmp
inc
cmpsl
mov
push
mov
enter
mov
push
adc
mov
shrb
std
std
cmp
dec
popa
int
mov
int
jp
mov
jmp
sahf
mov
rcrl
dec
fwait
sbb
out
adc
cmp
fistpll
pop
stos
aas
sbb
daa
mov
scas
xchg
iret
or
xchg
out
jg
and
pop
jp
fidivs
add
imul
lock
fnstenv
jb
mov
mov
jnp
mov
adc
rcll
mov
sbbb
add
dec
dec
and
dec
fwait
bound
ret
cmc
or
push
mov
ljmp
cltd
jp
jle
mov
pop
inc
cmp
pop
adc
xor
dec
xor
dec
push
jp
sub
mov
lods
insb
ljmp
sbb
sub
fdivrs
popa
loopne
jne
mov
out
int3
and
sub
daa
mov
inc
sub
in
nop
sbb
es
ja
divb
out
test
stos
popa
aas
test
int
jns
pusha
cmp
and
sub
lods
push
add
aam
add
insb
sub
cmp
add
push
push
jns
hlt
sbb
pop
cmp
inc
js
or
add
loope
adc
cmc
adc
stos
cmp
jne
ret
insb
repz
sar
sbb
cli
sahf
xchg
popa
mov
add
movsl
mov
movsb
xor
sub
int3
mov
scas
das
pushf
mov
arpl
mov
mov
in
xchg
icebp
pop
mov
les
stos
jns
sbb
aad
rcr
pop
and
lock
stos
or
sub
adc
cmpsb
xchg
or
pop
lea
sti
xor
mov
shrl
adc
rcr
pop
adc
dec
loope
out
or
adc
repnz
push
pop
mov
dec
inc
or
popf
cmp
leave
stos
sbb
lds
pop
out
and
call
rcl
lret
adc
push
sub
jbe
rol
inc
push
mov
movsl
inc
stos
dec
nop
loope
adc
jb
and
imul
shrl
std
lret
sbb
sub
mov
push
mov
out
dec
ds
and
pop
push
pop
or
push
sub
shl
test
jge
mov
mov
cwtl
stc
or
andl
sbb
cltd
inc
mov
loop
xchg
mov
jl
mov
ds
bound
clc
cmp
add
cmc
ds
fwait
je
loope
movsl
or
push
popa
push
pop
push
pop
and
dec
lods
mov
xchg
dec
push
and
nop
xor
dec
clc
mov
ss
xlat
adc
xchg
lds
mov
pushf
lcall
add
testb
fs
int3
lret
sub
jne
subl
inc
mov
subb
pop
outsb
push
pop
adc
add
pop
ja,pn
fidivrs
mov
in
cmp
or
dec
add
mov
add
es
and
ljmp
jmp
mov
jno
jmp
pop
sub
mov
adc
xchg
aam
loope
or
sbb
mov
dec
scas
jae
jmp
xchg
subb
xor
les
bound
lds
cmpsb
lea
pop
lods
and
sub
jns
jo
sub
js
arpl
sbb
push
filds
jb
xor
and
outsl
mov
ret
in
popf
push
and
ljmp
leave
mov
pop
cmpsb
xchg
xor
mov
mov
sti
data16
jo
lods
loop
stos
decl
xor
mov
mov
dec
idivb
ljmp
pop
pop
sbb
pushf
clc
pop
incb
mov
inc
lea
jb
pop
lock
mov
insl
sbb
mov
mov
sbbb
mov
pop
jl
testl
sbb
fld
in
fs
push
repz
stos
ucomiss
rorl
stc
mov
lods
pop
sarl
inc
lds
sbb
push
inc
pop
sbbl
mov
add
jae
xchg
adc
mov
pushf
cmpsb
mov
stos
jmp
loop
xorl
popa
stos
mov
divb
add
nop
sti
or
and
andl
xor
inc
clc
mov
push
cltd
insb
cmp
push
sbb
sub
iret
inc
push
fcmovbe
out
push
mov
adc
mov
shrb
jb
push
jo
mov
mov
mov
pushf
xchg
out
mov
mov
loope
int3
ja
lds
rol
mov
into
sub
dec
ja
fisubs
push
fwait
out
aas
jbe
or
or
bound
sub
mov
add
bound
mov
das
js
outsl
and
cmpsb
outsl
dec
inc
fnstsw
sub
jge
push
jecxz
pop
inc
and
bound
rorl
out
out
xor
xor
inc
lods
dec
fildl
stc
dec
or
mov
sbb
das
fucom
mov
or
lods
mov
out
adc
ja
cmp
out
push
cmp
pop
and
jnp
push
dec
shll
lret
icebp
dec
mov
jno
notl
shll
je
sbb
push
push
push
adc
lahf
fs
cmp
mov
ljmp
imul
pusha
mov
cmp
lea
test
sbb
test
gs
js
mov
cmp
arpl
sbb
xchg
scas
lods
sarl
mov
mov
bound
cmp
jnp
dec
lret
jns
gs
or
pop
out
insl
shlb
iret
adc
loope
push
jp
xchg
push
sahf
arpl
or
or
jb
pop
cld
leave
js
stc
js
xchg
inc
cmp
nop
insb
mov
push
xor
pop
aad
xchg
mov
pop
xchg
inc
dec
pushf
inc
cli
lahf
dec
push
pop
jge
mov
rcll
mov
loope
movsb
mov
pop
lods
ds
scas
cli
stos
and
ret
mov
pop
dec
fwait
mov
hlt
mov
sbb
cs
fistl
test
add
and
insl
mov
imul
test
jno
mov
or
xor
stos
fs
icebp
xchg
xchg
repnz
jne
ret
mov
mov
mov
adc
jo
sub
push
jo
pusha
shr
daa
add
es
push
adc
mov
jo
imul
push
cmp
dec
push
pusha
popf
lds
test
cmp
sbb
pop
movsl
scas
cltd
rcrb
dec
add
dec
push
into
sti
fdivs
xchg
mov
dec
and
jae
push
jmp
arpl
xor
imul
mov
in
push
rol
aam
test
adc
mov
sbb
mov
repnz
mov
add
mov
sub
pushf
in
xor
lods
shrl
jae
xchg
pop
sti
sahf
jbe
xchg
mov
xlat
cmpsl
lcall
imul
xlat
jae
lods
inc
sub
jmp
pop
and
adc
push
jle
scas
mov
dec
sti
sar
pop
push
mov
add
xor
push
sarb
mov
mov
frstor
shlb
add
imul
xor
jg
arpl
push
adc
mov
into
jecxz
insl
out
sbb
loopne
mov
dec
mov
mov
and
das
cmp
mov
lret
push
inc
sahf
cmp
push
sahf
cld
jno
cs
out
cmc
lret
mov
or
jno
jmp
add
add
fcompl
fsubrs
dec
fistpll
test
add
xor
or
int3
hlt
mov
xchg
outsb
xchg
das
mov
je
aas
rclb
push
mov
icebp
addr16
jecxz
xchg
sbb
or
jge
iret
push
lods
xchg
inc
xchg
lea
lock
sti
xchg
cli
shlb
out
inc
add
leave
xchg
inc
mov
test
lods
jecxz
sub
dec
dec
divl
and
popf
xchg
pop
aad
push
xchg
dec
enter
pusha
cmp
mov
dec
push
nop
fnsave
icebp
and
notl
rcrl
js
mov
fs
fadd
out
pusha
cmc
xchg
cmp
rcr
pusha
loop
data16
fsincos
lea
cmpsb
mov
xor
jmp
mov
xlat
cmp
dec
popa
inc
push
daa
mov
add
movb
pop
lods
mov
jne
add
cmpsb
mov
dec
add
push
ja
call
ficoms
dec
shl
sahf
cmp
in
and
jmp
mov
dec
or
cmp
aaa
fdivrl
xchg
push
out
leave
rol
enter
adc
jecxz
sub
loope
outsl
fmulp
lcall
xor
movsb
sti
and
or
ds
dec
mov
dec
negl
lods
adc
das
lock
pop
add
mov
shlb
into
sub
or
dec
pop
cmp
mov
lret
mov
or
stos
dec
fisubrs
ljmp
cmp
clc
push
cmp
out
xchg
adc
dec
mov
test
sub
mov
lret
psadbw
cld
xchg
movntq
in
shrb
dec
popf
and
cmpl
dec
mov
sbbl
iret
scas
and
pop
jno
sbb
push
orb
in
pop
push
leave
inc
shrb
out
cmp
cs
mov
rolb
jl
call
cli
pop
cmp
insl
mov
sbb
enter
lock
std
mov
repnz
out
sub
pop
mov
mov
popf
cmp
jg
sbb
popf
pop
popa
push
movsb
stos
roll
inc
lret
jno
cmp
andl
rorl
aaa
dec
shrl
test
imul
movsl
sbb
out
aam
ds
lock
test
fisubrl
and
imul
out
or
repz
repnz
sahf
add
ljmp
pop
ja
xchg
mov
sahf
cmp
lea
xlat
clc
pop
xrelease
stc
cmp
subl
adc
push
clc
sub
xor
jl
sbb
push
cmc
jecxz
mov
das
pop
push
mov
mov
lcall
xor
into
mull
lahf
movb
cmp
xor
adc
mov
jbe
cli
xor
subl
iret
aam
push
cli
cs
test
movsb
push
xor
int3
lret
and
hlt
adc
subb
js
or
push
sbb
ret
adc
cmp
ljmp
inc
push
push
fisubrl
jae
jno
scas
mov
kandnw
cmp
or
stc
gs
arpl
dec
lcall
pop
sub
jno
mov
into
and
adc
xchg
pop
ja
adc
and
jg
enter
mov
enter
into
scas
mov
push
pop
icebp
adc
mov
fwait
test
lahf
into
jmp
and
ja
in
shr
test
sbb
sub
loopne
js
sbb
outsl
jle
lret
or
mov
pop
outsl
push
jae
packssdw
jmp
cmc
fwait
into
in
and
ljmp
cmp
mov
mov
movsl
ds
push
mov
test
inc
add
mov
pop
pop
hlt
ret
xchg
sti
popf
lret
mov
leave
insb
and
jb
push
push
xor
sti
push
pop
adc
mov
xchg
sbb
pushf
mov
lret
mov
cmp
cld
rorl
in
xor
push
dec
inc
and
cmc
insb
nop
lret
daa
mov
aas
ja
jb
fadds
nop
or
pop
jp
lret
push
and
outsb
sahf
ret
les
xchg
js
insb
sub
call
pop
test
jno
les
out
outsb
mov
add
loop
hlt
ljmp
push
scas
dec
mov
mov
or
scas
xchg
add
jmp
hlt
jl
pop
lods
mov
into
enter
stos
icebp
sahf
or
mov
xchg
and
push
inc
imul
fcmove
hlt
in
xor
stc
pop
out
ljmp
test
ret
mov
mov
cmc
xchg
pop
or
fwait
data16
into
push
dec
and
push
or
jecxz
sbb
mov
xchg
shll
movsb
xchg
mov
push
push
jg
push
cmpsl
cmpsl
ljmp
and
stc
xor
lret
bound
inc
mov
cmp
pop
inc
sti
out
enter
add
push
xor
in
shll
aas
sbb
test
movl
testb
add
orb
xor
cmp
add
dec
stos
out
push
fwait
iret
mov
cld
cmp
push
cmpsb
pop
xlat
mov
imul
jl
dec
add
push
inc
sbb
mov
add
scas
je
jp
jne
aad
fcmovnbe
fnstsw
cld
mov
lock
call
cltd
jno
jo
shll
push
test
xchg
movb
int3
push
cmpb
pop
out
lock
sbb
lahf
push
mov
mov
xor
xchg
cmpsb
sbb
xor
icebp
out
loope
gs
int
cmpsl
adc
rolb
and
dec
and
and
mov
inc
cmp
sarl
test
fldlg2
dec
int3
repz
out
cmp
adc
mov
out
pop
xchg
xchg
scas
cmp
add
jnp
iret
mov
pop
test
inc
call
ret
dec
mov
cmc
popl
roll
cli
es
out
mov
mov
jl
fnstsw
adc
jae
outsl
jecxz
pop
jg
fidivrl
iret
push
sbb
decb
int3
iret
cs
popf
pop
sub
xlat
xchg
add
insb
aas
loope
xlat
testl
ljmp
bound
lcall
adc
stos
xlat
pop
cmpsb
popf
mov
xor
pop
loop
mov
push
loop
out
jg
pop
in
lahf
sbb
ss
and
scas
push
mov
push
sbb
mov
push
sub
sub
lock
shrb
and
aam
test
pop
imul
cmp
sbb
adc
js
inc
sbbl
ret
lcall
mov
mov
inc
push
mov
in
or
pop
xor
sbb
mov
and
mov
fiadds
sbbl
dec
in
xorb
mov
test
movsb
xchg
jp
ficoml
sub
jmp
mov
out
mov
xchg
lret
jge
imull
or
fidivs
mov
cmpsl
push
jno
imul
rcll
sbb
push
mov
and
call
sahf
dec
push
out
sub
fistpll
xchg
mov
dec
sbb
test
mov
mov
fisubrl
jecxz
fidivs
sar
mov
idiv
in
fldenv
outsl
test
dec
or
jecxz
leave
cmc
cmp
push
hlt
fists
push
in
push
jp
push
scas
sbb
cmp
sbb
mov
cli
push
popa
loop
dec
out
mov
jo
jp
mov
jle
daa
or
sub
add
insb
ja
les
nopw
sbb
cltd
iret
int
sbb
shlb
and
cli
shl
xchg
and
push
inc
mov
cmp
dec
mov
aad
jmp
mov
pop
in
and
adc
lret
stc
repz
and
jmp
jle
inc
fistpll
push
dec
mov
leave
jg
jb
dec
mov
icebp
sbb
mov
mov
ds
add
ret
mov
lods
push
or
xchg
cmpsb
pop
jne
lock
mov
jge
mov
divl
or
in
out
or
xchg
inc
daa
push
xor
ds
loopne
or
stc
jmp
cmc
inc
faddl
cltd
addr16
in
push
dec
rcrb
scas
inc
movsb
mov
push
mov
in
jb
cmc
cli
gs
adcl
loopne
push
mov
mov
and
cmp
bound
lods
js
test
push
enter
cltd
adc
xchg
fnstcw
cmp
dec
adc
fisubs
or
inc
fstl
cmpb
stos
push
imull
cltd
xchg
cwtl
pushl
aaa
into
pop
test
sti
mov
mov
mov
xchg
scas
call
or
pop
push
mov
test
pop
ds
adc
lods
mov
mov
mov
mov
and
mov
or
add
jb
mov
xchg
push
xchg
data16
ja
mov
add
push
iret
cmpsb
in
mov
scas
cltd
loop
lods
jl
movsb
out
dec
pop
bnd
mov
addr16
mov
je
dec
dec
pop
push
pmaxub
pop
xchg
mov
shrl
in
jle
mov
cld
js
cmp
bnd
mov
stc
movsb
xchg
xchg
mov
loop
fildll
xor
add
push
inc
pop
mov
add
clc
dec
push
push
adc
fmuls
adc
ja
sub
mov
imul
outsl
or
sbb
push
fnclex
mov
sub
push
popf
xchg
jnp
inc
in
add
xor
mov
sbb
stos
sbbl
fs
push
lea
cltd
pop
or
inc
sbb
pop
xchg
pop
aaa
cmc
jp
xchg
sti
xor
inc
in
dec
shlb
push
or
arpl
xor
and
push
stos
test
nop
mov
jns
sub
xor
mov
dec
mov
jge
inc
sbb
sbb
pop
cwtl
sbb
add
bound
lahf
repnz
inc
aad
push
lahf
adc
adc
inc
inc
test
mov
imul
rorb
aas
or
inc
sbb
xchg
xchg
jne
xchg
int
subb
cmp
mov
pusha
mov
xor
arpl
outsl
mov
jbe
xor
cmc
or
scas
adc
test
inc
je
insl
push
dec
pop
sbb
scas
enter
fisttpll
push
in
jmp
jae
imull
shlb
jbe
inc
xor
and
xlat
ror
push
imul
sahf
pop
cmp
dec
outsb
insl
jecxz
mov
enter
fcoms
shrl
test
loop
cld
inc
lods
cmc
lahf
sbb
dec
fisttpl
cs
popa
xor
cltd
sbb
push
push
push
imul
call
mov
mov
inc
out
push
jecxz
scas
dec
dec
push
push
aas
mov
in
sub
nop
adc
popf
jno
insb
xor
ds
mov
movsb
xchg
jae
lds
das
or
stos
mov
xchg
xchg
movsb
data16
adc
test
and
out
iret
iret
cmp
stos
lock
dec
jecxz
mov
jne
xchg
xchg
dec
repz
data16
bound
xchg
sub
inc
je
gs
iret
mov
jne
insb
stos
mov
jmp
dec
xchg
pop
ja
out
fs
std
scas
fimull
enter
setne
nop
test
adc
mov
mov
lret
dec
mov
dec
je
int
aas
cltd
lcall
jecxz
loopne
push
int3
je
cli
dec
repnz
pop
cwtl
fs
push
pop
pop
jp
mov
mov
dec
scas
mov
jno
ja
and
adc
push
sbb
ret
dec
pop
adc
rorl
adc
repz
out
pop
enter
scas
dec
inc
fisubrs
call
rcrb
xchg
or
out
in
sub
pop
aas
mov
mov
mov
aad
mov
add
lret
mov
pop
int3
dec
lds
push
xchg
inc
jae
sbbb
test
push
xchg
int3
bound
stc
aam
popa
roll
pop
push
add
xchg
out
adc
xchg
cmp
movsl
out
xlat
adc
loope
pop
test
push
mov
cmp
js
hlt
pop
pushf
incl
lahf
dec
pop
mov
pop
inc
lahf
and
mov
cmp
out
cmp
inc
push
aaa
push
icebp
adc
mov
adc
adc
jae
dec
iret
push
stc
sbb
movsb
mov
repz
mov
pop
or
aaa
mov
in
addb
mov
in
jle
add
sub
push
cld
adc
jle
repz
je
pop
in
rolb
and
push
xchg
ret
cmp
adc
xor
sub
in
cmpsb
add
add
imul
pushf
iret
popa
out
inc
popa
sub
dec
icebp
xor
lahf
inc
mov
jae
popf
hlt
mov
les
dec
push
jp
stos
pop
test
or
push
bound
stos
test
outsl
fidivs
push
mov
adc
test
pop
or
fcomip
arpl
dec
pop
fcoms
mov
xchg
addr16
inc
adcb
mov
dec
addr16
jp
stos
mov
divb
cmp
xchg
es
and
dec
andl
jno
mov
adc
imul
push
mov
test
mov
mov
mov
mov
cmpsb
adc
xlat
push
fisubrl
pushf
push
ficoml
and
and
sbb
xor
stc
add
repz
faddl
sbb
outsl
dec
lret
fisubl
and
outsb
dec
add
mov
jo
xlat
sub
call
inc
nop
add
xor
mov
push
pop
xchg
lock
loop
cld
inc
outsb
popa
cmp
fmuls
insl
xor
jge
dec
stc
leave
sbb
xchg
dec
nop
jne
pop
add
ret
rep
mov
push
int
call
xchg
aad
in
inc
ret
push
cmp
jbe
das
lret
xchg
nop
stos
dec
xchg
mov
mov
adc
andl
cmp
fsubp
push
mov
outsb
inc
xchg
push
adc
and
push
jp
jl
jae
adc
in
mov
pushl
mov
dec
mov
mov
fcoml
dec
mov
sti
stos
sub
cmp
mov
sub
cmp
popa
xor
push
and
mulb
es
imul
movsl
cs
rclb
sub
jmp
push
inc
loopne
xchg
sbb
xchg
push
cmc
mov
and
sub
sub
in
cmc
leave
cltd
push
test
pop
sub
xchg
ficoml
test
fdivl
sbb
in
xchg
mov
not
push
imul
sbb
pushl
imulb
daa
or
jae
mov
shll
in
pop
xorb
push
test
cld
xchg
sbb
push
insb
insb
movsl
imul
mov
lret
ret
push
ljmp
pop
mov
xchg
mov
data16
push
cmp
jmp
cltd
dec
movsl
mov
dec
dec
add
idivb
lods
pop
aad
add
in
arpl
stos
fcomps
mov
daa
loop
pop
pop
fnstcw
hlt
pop
test
adc
cmpsb
dec
rclb
cmp
test
in
cwtl
mov
push
adc
xchg
mov
push
lock
int
ljmp
adc
mov
mov
imul
sbb
xchg
je
addr16
hlt
mov
imul
test
cmpsl
xchg
lock
xchg
add
mov
fprem
xor
ja
loopne
sub
add
add
jg
stos
cltd
sahf
leave
jmp
pop
adc
imul
ret
addl
cmpsl
pop
sub
xor
pop
and
mov
fstps
movups
aam
cwtl
mov
pop
sbb
add
fcoml
cs
sbb
inc
loope
lret
cmp
outsb
xor
sahf
out
push
xchg
or
xchg
int
test
jl
xor
mov
sub
ljmp
insb
mov
sub
iret
add
jo
xor
xor
scas
adc
hlt
and
pop
lret
add
loopne
call
fdiv
inc
cmpsl
pop
sbb
mov
xchg
cmpsl
cld
frstor
das
in
cmp
xor
ficoms
out
negb
cmp
popa
dec
cmpsl
sarb
and
mov
stc
adc
ret
popf
scas
jns
mov
jns
int3
outsb
mov
aam
cmp
push
and
idivb
loope
sbb
int
push
daa
jae
movsl
aaa
in
sub
jnp
leave
push
jnp
incl
sub
sbb
sub
andb
in
lods
push
push
sbb
sbb
rolb
hlt
push
pop
popf
out
sbb
imul
mov
aam
adc
jo
js
stos
jg
mov
fs
mov
sub
xor
and
lea
in
inc
push
fstpt
jp
dec
inc
mov
pop
xlat
pop
lret
xor
sub
inc
lods
cs
test
cmp
mov
xor
jl
movsl
xlat
sbb
or
jp
js
mov
in
dec
sub
sbbb
sub
push
pop
imul
xor
test
shll
dec
pop
into
and
rcl
sbb
dec
mov
sbb
mull
xor
inc
jecxz
cli
push
ss
adc
push
jo
or
sub
dec
push
cwtl
jo
iret
repz
pushf
mov
ljmp
pop
add
jns
andl
int
bound
clc
dec
adc
out
mov
pop
aam
add
in
sub
ljmp
pop
jecxz
push
scas
and
push
push
fsubs
cs
xchg
test
adc
sbb
adc
popf
adc
stos
mov
sub
cld
mov
test
push
add
fisttpll
scas
aas
daa
cltd
mov
jmp
outsb
ss
mov
lods
push
out
sub
aas
sbb
push
xchg
mov
xchg
in
jo
xor
cmpb
repnz
cmp
mov
subb
pop
pop
push
iret
repz
sbb
or
out
dec
gs
jmp
xlat
push
lret
clc
fdivrp
cmp
leave
inc
repnz
repz
pop
xor
mov
decl
push
xor
sbb
sete
mov
xlat
movsb
add
out
jo
xchg
imul
out
out
inc
xchg
jne
mov
into
jns
jae
dec
jne
push
enter
mulb
popf
mov
out
clc
clc
sub
rclb
push
ret
pop
xor
jg
pop
jns
and
repnz
push
cmc
in
stc
jg
or
sub
daa
and
jb
mov
xor
mul
fimull
inc
xchg
lret
addr16
jmp
pop
xor
adc
add
mov
lods
xchg
inc
test
leave
insl
add
adc
lock
decl
mov
sub
rcr
sub
cmp
lods
add
jo
push
call
outsl
stos
out
dec
mov
pushf
cmp
lcall
cli
arpl
scas
fsubs
sbb
outsb
add
pop
push
popf
xchg
jp
and
repnz
sahf
mov
adc
mov
or
mov
dec
push
call
xor
mov
and
lret
jne
dec
cmp
pop
xchg
jo
mov
mov
imul
das
fcomip
je
pop
lods
ss
pop
popf
xchg
js
pop
lahf
mov
and
mov
fistpl
scas
call
call
orl
cwtl
lea
fmull
mov
repnz
test
test
jecxz
push
inc
fistpll
or
movsb
test
test
add
gs
mov
pop
mov
int3
xchg
dec
adc
insb
jo
lret
mov
mov
mov
ss
or
jecxz
mov
sbb
mov
mov
dec
fadds
sbb
mov
sbb
xor
xchg
out
pop
aam
lret
adcl
or
gs
dec
test
andl
jns
xchg
gs
in
mov
or
push
mov
adc
or
popa
adc
into
lret
outsb
wbinvd
mov
cmp
lcall
xchg
insb
push
shr
lcall
jmp
dec
pop
notb
fildl
cld
movsb
loop
push
cmp
repnz
add
cld
leave
jnp
outsb
ficoms
pusha
sub
mov
push
jle
jbe
sbb
ljmp
mov
ret
lock
out
cmp
bound
scas
xorb
push
aas
leave
add
and
outsl
test
enter
clc
mov
jecxz
cs
stos
adc
mov
sub
pop
jmp
lcall
jne
arpl
jno
fsubr
pop
sub
inc
add
fstl
iret
mov
pop
pop
jns
outsl
sbb
test
ret
and
es
jmp
outsl
cmp
ss
dec
mulb
jns
movsb
mov
jbe
rcr
sbb
leave
cmovno
mov
pop
sub
xor
outsl
mov
mov
int
mov
mov
ret
jmp
das
nop
ficoml
mov
nop
cmpsb
cmp
mov
movsb
sti
stc
popf
pop
mov
xor
pop
pop
inc
addr16
adc
cltd
in
gs
mov
mov
adc
dec
mov
ret
sbb
xchg
cmp
int3
sarb
daa
sbb
test
pop
dec
cmp
imul
mov
push
dec
inc
pop
out
xchg
fldenv
cmp
mov
fsubl
adc
cli
cmp
je
and
popa
xor
iret
or
mov
inc
cmp
inc
lds
insb
push
repz
out
out
push
js
push
push
cmp
sbb
imul
dec
ds
leave
imul
cmpsb
xor
jno,pt
mov
shll
lock
sarb
sub
or
push
or
negb
mov
pop
push
pushf
fistps
xlat
lea
xor
sub
sbb
sbb
add
lret
int3
push
pop
test
nop
sbb
popa
mov
pop
xchg
aas
out
ret
cltd
add
dec
imul
mov
cmp
test
push
rol
shll
iret
icebp
add
lret
dec
das
aad
addr16
stc
mov
lahf
inc
push
mov
mov
gs
mov
cmp
out
push
scas
mov
sub
and
pop
dec
cmp
pop
dec
mov
pop
sbbl
das
pop
and
ljmp
iret
sbb
sbb
add
and
pop
stos
xchg
cmp
inc
nop
aaa
xor
lcall
imul
inc
add
test
xchg
dec
cltd
jp
sar
aam
aad
and
or
les
ror
cmpsl
xor
pop
or
xchg
roll
pop
xchg
pop
inc
cmp
inc
cmpsl
shll
sbb
inc
mov
shll
sbb
jo
inc
xchg
loop
adc
or
pop
in
pop
and
test
jbe
mov
inc
xchg
das
mov
fimuls
and
push
inc
sbb
hlt
paddb
push
imulb
mov
pop
dec
mov
in
and
ljmp
repz
pushf
xor
mov
pinsrw
int
std
add
cmp
mov
test
pop
aam
pop
push
scas
lahf
inc
stc
insl
addl
ja
jecxz
cmpsb
mov
pop
gs
scas
test
cmp
dec
cmpsb
arpl
jno
push
and
xchg
sub
shl
jmp
scas
stc
push
push
arpl
call
push
lds
out
mov
sahf
popa
xchg
outsb
xlat
mov
mov
xchg
aaa
adcl
jns
jmp
dec
mov
decl
pusha
lret
mov
bnd
sbb
test
out
mov
stc
ljmp
lcall
mov
hlt
mov
int3
xorl
inc
repnz
in
shl
aaa
je
mov
jecxz
into
mov
cmp
jno
inc
sbb
pop
add
adc
jnp
test
mov
addb
pop
je
cld
sbb
imul
xchg
aam
cmpsb
inc
inc
cmc
pop
xchg
pop
adc
dec
sub
ret
or
lods
jnp
inc
and
insl
dec
into
aaa
pop
and
mov
mov
pusha
stc
clc
enter
mov
mov
or
xor
and
dec
loope
mov
enter
imul
push
fisubl
fldl
cmpsb
pop
test
lds
push
mov
nop
lds
das
idivl
pushf
test
popf
mov
aad
or
jns
lds
cmp
add
mov
dec
lahf
dec
ret
js
dec
clc
sub
sub
cmp
nop
in
adc
lret
dec
lock
add
push
addl
cmp
mov
mov
pop
push
sti
inc
pushf
outsl
push
cmp
loope
or
loope
shr
and
js
movsl
movsb
sbb
mov
cmp
das
les
push
push
or
sub
lds
pop
cmp
nop
icebp
jg
popf
mov
ret
pop
xor
dec
xchg
daa
xor
int
cmp
mov
sahf
sbb
lahf
cmp
outsl
scas
gs
adc
and
and
push
movsl
leave
sbb
inc
ds
pushaw
dec
dec
loopne
or
xor
xlat
test
xchg
or
in
jp
ret
js
dec
addr16
orb
sbb
add
fbstp
frstor
mov
into
xchg
ret
add
push
mov
setns
push
or
fisttpll
inc
lea
lods
and
xchg
dec
lods
testl
push
into
in
mov
mov
ljmp
add
insl
out
nop
rorb
incl
xchg
push
mov
mov
sub
sub
add
addr16
jbe
movsl
shl
and
xor
xchg
sti
lds
xchg
fsub
mov
or
aad
pop
fs
inc
xchg
xchg
mov
mov
jecxz
mov
leave
cmp
andl
fucomi
mov
cwtl
dec
sub
mov
jmp
insb
imul
pop
sub
test
or
sbb
ds
pop
outsb
movsb
cmp
add
jmp
pop
cmp
push
call
js
mov
add
sahf
xor
mov
jl
xchg
mov
inc
test
cld
mov
aam
pop
jp
mov
dec
push
jno
push
dec
add
mov
or
popa
dec
lret
out
mov
pop
fmul
adc
push
inc
jns
rol
mov
jne
push
lret
cmp
cmp
xchg
dec
int
xchg
ljmp
inc
cmp
jb
hlt
mov
rcll
lret
test
lods
sub
sub
mov
aaa
rcll
in
mov
rcrb
jmp
nop
adc
jp
dec
decl
pop
stc
mov
or
aam
dec
xchg
ffree
popa
test
ret
mov
push
mov
wrmsr
mov
imul
cli
lret
test
jno
pop
mov
shll
loope
xlat
test
sub
clc
lahf
in
cmp
mov
loop
dec
scas
ljmp
sub
sub
into
push
inc
jae
and
add
out
mov
xchg
xchg
and
jl
test
xchg
movsb
xchg
xchg
mov
andb
pop
dec
or
pusha
inc
sti
jns
repz
push
cmpsb
ffreep
stos
pop
cmp
adc
notb
dec
inc
fs
push
xor
jbe
loope
sub
mov
add
int3
xor
inc
push
ret
sub
aas
or
mov
pusha
push
xchg
or
adc
inc
push
gs
push
sub
sarl
addr16
out
mov
pop
xor
dec
jns
and
and
out
adc
jnp
fadd
divb
mov
pop
sbb
and
test
stos
mov
jb
jg,pt
and
ss
mov
lret
mov
and
lcall
and
rol
and
enter
lcall
jle
dec
push
in
dec
in
xchg
adc
into
hlt
cmp
xor
inc
inc
jl
inc
dec
pusha
inc
push
fdivl
int
jnp
adc
cs
scas
into
mov
mov
dec
insl
push
pop
sbb
cmp
stc
mov
ja
push
xor
xor
jl
mov
sub
iret
ds
cmp
loop
lret
mov
push
push
pop
imul
shrb
mov
rclb
stos
inc
nop
cli
ds
in
test
pop
mov
repz
andb
push
shlb
add
pusha
stos
fwait
push
xchg
das
fs
xchg
inc
outsb
lods
cmp
mov
xchg
cwtl
pusha
add
dec
std
pop
out
les
je
push
mov
mov
rorb
sbb
les
pusha
idivl
sub
sbb
jle
inc
dec
cwtl
mov
iret
pop
or
mov
mov
rsqrtps
adc
sbb
loop,pt
mov
sub
imul
lcall
push
in
xor
cmp
std
in
sbb
scas
dec
xor
push
out
mov
in
xchg
ficoml
xor
add
adc
fst
repnz
aam
jnp
xchg
rorl
into
popa
das
scas
mov
push
lea
aad
or
cmp
loop
pop
xchg
sub
sbbb
push
pop
inc
movsb
pop
jns
add
mov
fs
imulb
add
pop
fisubrs
data16
jns
mov
mov
pop
pop
jg
xor
mov
arpl
icebp
popf
adc
movsb
mov
shl
jp
loopne
rorl
xchg
int
pop
sti
fwait
inc
sahf
jb
cltd
hlt
jg
test
imul
leave
shrl
mov
cmpsl
je
insl
dec
test
lods
pusha
ficompl
jmp
lahf
mov
shll
cli
or
fistps
stos
pop
cmp
shlb
pop
sbb
push
imul
mov
out
xchg
inc
inc
and
aam
aas
lods
loop
push
xchg
add
jecxz
dec
mov
sahf
lock
pop
test
push
xchg
push
jo
leave
fcmovb
add
or
push
add
pop
in
cltd
sbb
out
inc
xchg
fdivl
mov
shl
xor
or
lods
and
jl
fwait
enter
in
xchg
fldcw
mov
mov
mov
fiadds
push
int
mov
test
dec
jnp
dec
xchg
add
out
nop
sub
dec
je
add
fdivrs
jae
les
jo
inc
sub
mov
aaa
or
mov
jns
xor
xchg
jbe
adc
in
stc
lret
mov
and
xchg
jno
xchg
xchg
fdiv
push
stos
and
mov
cs
inc
pop
lock
out
pop
and
jo
ficomps
mov
je
fistl
pop
and
mov
cmp
sub
sti
ja
stos
dec
pop
jmp
pusha
sbb
jp
sete
pop
jle
stos
outsl
push
jecxz
std
out
icebp
inc
add
pop
imull
repnz
outsl
stos
dec
and
aad
sub
xor
std
es
pop
popa
dec
cld
cwtl
mov
ja
test
pop
lret
nop
add
adc
bound
inc
lea
inc
sub
jl,pn
adc
xchg
loop
xchg
xchg
fmuls
mov
test
mov
arpl
add
jp
jp
testl
xor
imull
push
cmp
ja
pop
jge
add
jo
push
aam
and
ss
fs
cltd
inc
xlat
adc
jp
pop
dec
sahf
mov
dec
aad
mov
in
addb
leave
icebp
inc
and
mov
lods
test
sbb
lock
sti
pusha
ja
mov
fcomip
xlat
jmp
insl
mov
jbe
fdivp
jo
incl
sarb
shrl
inc
sbb
sbb
pop
sahf
rcrb
movsb
sbb
or
jp
push
sub
jae
mov
push
push
jo
inc
jns
rcll
dec
incb
push
adc
adc
fld
lock
xchg
int3
je
pop
or
jmp
xlat
fldt
scas
mov
and
into
jge
int
push
xor
mov
mov
push
std
cmp
push
das
jb
fcoms
std
jae
icebp
mov
lcall
or
jg
xchg
adc
dec
xchg
dec
jae
lods
or
lock
dec
ja
rcrl
sarb
outsl
xchg
sub
inc
mov
bound
ljmp
movsl
xchg
pusha
push
dec
pop
and
mov
lods
add
push
scas
push
jnp
js
pop
jmp
aas
xlat
xor
in
mov
and
pop
or
movsb
rcl
mov
add
push
rcrb
repnz
inc
jp
adc
add
xor
pusha
nop
arpl
sbb
push
in
lock
add
push
mov
pop
cmpsl
mov
leave
jne
lea
in
push
cltd
cmc
jne
xlat
push
pop
dec
into
and
dec
call
sub
fisttps
scas
and
cmpb
das
test
xor
mov
xchg
push
out
pop
rcl
loop
cltd
js
test
and
sbb
jns
shlb
push
and
cmpsb
movsb
jne
mov
xchg
incl
mov
mov
mov
jbe
xlat
test
mov
adc
mov
add
lret
sub
sub
xor
repz
add
cs
or
inc
out
push
nop
inc
mov
mov
cmpsl
jecxz
inc
hlt
mov
pop
pop
dec
inc
pop
cmp
push
adc
scas
inc
imul
loope
jl
iret
cmp
cmpb
ret
call
iret
inc
in
stc
or
jae
xchg
sbb
xchg
repnz
dec
dec
xlat
test
rolb
or
mov
call
adc
lock
insl
aas
mov
movsl
or
rclb
mov
adc
int
inc
insl
add
test
icebp
stc
adc
insb
jecxz
sub
xor
jmp
push
sbb
dec
jns
cwtl
or
pushf
mov
xchg
movsb
pop
les
icebp
aad
fnsave
add
fwait
das
std
mov
jne
loope
in
inc
add
inc
xchg
jl
lock
outsb
rolb
lods
rorb
es
iret
ss
popa
or
popa
mov
ret
into
fsubrs
sub
test
mov
rcrb
fbld
cmpsl
mov
inc
push
in
lods
stos
shlb
mov
test
js
mov
mov
icebp
stos
adc
sub
ret
out
adc
push
outsb
in
jmp
pushf
mov
call
xchg
mov
dec
loopne
and
scas
lods
aaa
mov
add
and
aam
xlat
adc
mov
dec
out
fisttpll
jb
add
nop
pop
xlat
and
popa
scas
inc
sub
jp
divl
sbb
lret
jecxz
push
cltd
cmpl
add
dec
mov
mov
test
sub
and
push
pop
test
outsl
paddsw
aas
push
add
push
scas
jp
cmp
inc
pop
cmpsl
hlt
or
or
fildl
cmp
add
dec
mov
shlb
test
jl
fnstenv
and
fistl
add
fidivs
xchg
rclb
sahf
into
jp
clc
or
aaa
fcom
inc
out
lcall
iret
adcb
fldenv
pop
xchg
cli
inc
push
xor
mov
inc
push
lcall
es
std
adc
adc
mov
cltd
add
xchg
xchg
adc
pop
ret
or
push
jne
les
jl
daa
arpl
in
hlt
cmpsb
add
out
lods
pop
jb
into
les
sub
dec
or
fisubl
movlps
and
cmp
push
lret
mov
adc
sti
add
sti
or
dec
cmpsl
int
and
jne
mov
inc
jecxz
adc
outsb
stos
xchg
xchg
clc
push
fisttpl
dec
push
mov
sub
insl
jmp
push
stos
push
pop
fcmovnbe
decl
dec
cmp
rcll
pop
mov
decl
mov
adc
sbb
inc
mov
cmpsl
ljmp
pop
push
shll
test
mov
dec
mov
xor
jp
push
push
stos
adc
xor
sbb
mov
ja
out
loop
pop
and
sbb
ds
call
ja
mov
pop
cli
aad
mov
inc
xor
dec
push
fisubl
cmp
outsb
push
stc
and
jb
jge
loop
lcall
outsl
dec
ret
lods
dec
test
xor
and
push
add
and
shlb
es
push
movsl
shlb
dec
addr16
pop
push
jge
imul
cld
clc
push
sbb
dec
lock
or
jo
das
aas
push
add
in
fimuls
lds
lret
dec
dec
adc
aaa
mov
mov
bnd
sarl
in
orb
or
mov
mov
jo
inc
test
scas
addr16
add
sbb
adcb
sarb
outsl
mov
xor
enter
int
push
lods
jecxz
fldenv
sub
mov
loopne
add
insl
lods
adc
scas
subl
bound
out
enter
addb
mov
jmp
lret
and
je
mov
adc
push
jo
fcompl
sbb
inc
mov
dec
mov
lods
xchg
xor
push
aam
sbb
mov
pop
xor
out
fstpl
out
jno
xor
jne
cmp
lahf
call
xor
test
out
sbb
aas
fisubl
aad
or
mov
data16
push
and
add
push
inc
xor
fisubs
out
cltd
lods
jp
lods
fimuls
mov
inc
je
arpl
mov
sub
jg
push
pop
dec
push
push
and
mov
sbb
inc
pop
orl
outsl
sub
outsl
dec
sub
pusha
rorl
testl
and
sub
jp
stc
push
jo
xor
adc
mov
test
mov
loopne
and
jo
test
clc
les
adc
stos
mov
int3
repz
cmp
push
fimuls
jae
aam
mov
add
test
mov
mov
inc
xchg
scas
call
lea
sarl
pop
pop
mov
loope
or
mov
lret
fists
inc
flds
fsts
into
enter
pusha
fsubs
fsubrs
pop
out
cltd
cmp
sahf
outsb
pop
enter
fcompl
push
dec
ds
sbb
mov
sbbb
sub
mov
icebp
mov
pop
add
rorl
adc
push
mov
aad
mov
test
or
pop
cli
xor
cli
imul
orl
ficomps
sti
insb
xchg
pop
ss
add
sbb
stos
xchg
cmp
sub
mov
aad
xor
push
push
fisubrs
xor
mov
cwtl
cmp
adcb
pop
push
in
in
push
or
fsts
cmp
rorl
dec
mov
insb
lods
aaa
or
int3
pop
rclb
xor
and
xchg
ja
xor
cmp
in
aas
imul
cmp
jae
jo
gs
das
jp
xchg
mov
data16
subb
jno
pop
jle
rcrl
cmc
fidivl
push
imul
push
inc
cmp
mov
and
inc
loope
mov
jp
cmpsl
sarl
mov
filds
stos
and
je
mov
rcll
xchg
aam
jecxz
xchg
in
push
fwait
push
ss
imul
nop
aad
mov
orb
lods
out
jl
xor
add
mov
outsb
pop
flds
jmp
cltd
loop
pushf
jge
cmpl
jmp
or
inc
mov
sub
push
insl
mov
inc
aaa
or
in
fwait
push
mov
sbb
sbb
push
int
or
stc
cmp
cld
das
je
pop
jae
mov
mov
movsb
jmp
inc
push
cmp
push
pop
popf
push
push
popl
lods
push
adc
inc
fcoms
push
mov
sub
out
icebp
add
pop
mov
push
pop
out
sub
add
push
cmp
pop
push
mov
inc
sbb
lds
add
cmp
xchg
out
clc
cltd
lcall
jp
daa
jne
loope
xlat
loop
cli
push
add
faddp
pop
mov
cmp
or
jb
jno
inc
stos
aam
push
sub
mov
jmp
push
pop
enter
ljmp
ficoml
leave
sahf
cmc
imul
lods
inc
or
xor
xchg
aaa
inc
lret
sub
and
outsb
repnz
sub
mov
fstpl
jl
mov
mov
shrb
adc
push
fdiv
int3
dec
dec
iret
ja
iret
mov
loope
jb
shlb
lahf
jno
dec
jp
cmpsl
cmp
ret
inc
dec
jb
test
cmp
jp
ret
daa
jb
lahf
or
sub
sbb
imul
xchg
repz
shr
in
push
in
mov
xor
cmpsl
sub
scas
xchg
push
fs
ds
and
pop
xchg
pop
xchg
mov
dec
jp
fdivrl
sbb
push
mov
fucomi
fcomps
mov
or
in
ficompl
sbb
lea
outsb
lods
mov
push
pop
ficoml
in
xchg
js
xor
psubb
hlt
imul
pop
mov
mov
movsl
movsl
sahf
push
push
jge
clc
jge
jbe
aas
pop
adc
or
dec
xor
cwtl
jnp
lods
and
jmp
ja
jl
dec
mov
jb
rcrl
repnz
pop
or
and
sub
xor
push
pop
pop
inc
xlat
add
leave
add
jmp
cmp
lods
or
nop
inc
cmp
mov
mov
fstps
mov
movsb
roll
popa
adc
and
xor
js
push
pop
ds
icebp
pusha
xchg
pushf
stos
cmpxchg
sbbl
dec
cli
dec
pop
xor
adcb
push
and
xchg
out
push
xor
rorb
inc
jmp
sahf
arpl
addr16
cmc
xlat
rolb
xor
jmp
stos
dec
jno
adc
adc
dec
and
pop
cli
adc
mov
int
je
push
insl
jp
std
adc
dec
mov
jmp
push
jl
mov
mov
shr
mov
cmp
sbb
or
adc
mov
stos
cmp
test
ficoml
lods
ja
mov
push
fdiv
lock
sbb
or
outsb
inc
aam
push
jne
jg
test
insl
mov
ljmp
movsl
out
enter
test
cmp
cmp
mov
aaa
cmp
sub
inc
inc
rcrb
scas
or
stos
push
sbbl
jb
pop
push
xchg
enter
sub
out
sbb
test
stos
lods
ret
pushf
sub
lods
or
add
ja
pop
in
addl
dec
ljmp
mov
xchg
loop
push
outsb
call
and
in
or
push
xchg
mov
push
cmc
aam
fcmove
xchg
test
loope
adc
enter
in
pop
and
aas
imul
outsb
mov
sahf
lds
es
xor
insb
cmp
adc
or
sbb
mov
adc
outsb
enter
xor
push
negb
mov
outsb
push
lret
inc
fcoms
icebp
xchg
lret
or
test
push
mov
jne
icebp
jnp
pop
inc
arpl
das
sub
cli
pop
arpl
arpl
pusha
pop
in
fidivs
loope
cmp
fidivl
pop
test
pavgw
cld
pusha
sub
lods
pop
cwtl
pop
xchg
push
push
pushl
push
lret
xor
pusha
mov
sarb
dec
dec
insl
popf
iret
addr16
push
mov
push
xlat
mov
sarb
pop
dec
mov
inc
pop
fmull
fisttps
mov
pop
inc
sub
xor
ljmp
add
mov
leave
adc
mov
nopl
dec
popa
imul
test
in
add
sbb
dec
fnsave
mov
test
xchg
xor
inc
loopne
or
or
lods
xor
add
jbe
push
push
js
popl
or
or
sub
sar
outsb
in
movl
jb
xor
pop
sar
mov
out
ficoml
inc
icebp
daa
jb
mov
sub
or
inc
cmpsb
into
push
push
lea
movsl
scas
xor
pop
rorb
xchg
add
pop
testl
shll
int3
mov
rcll
aam
inc
jmp
mulps
loope
mov
aam
pop
mov
push
addr16
mov
and
sub
dec
mov
dec
pop
sbb
sub
dec
jae
ljmp
fimuls
push
sbb
imul
jecxz
bound
fisubrl
adc
aad
xor
xor
cmp
push
mov
mov
cwtl
sbb
mov
cmpsl
sub
stc
loop
out
loop
jmp
stos
fldt
es
shl
stc
jno
dec
push
call
lcall
js
adc
ja
out
nop
jns
cmp
push
mov
mov
and
shrl
push
mov
sub
clc
and
enter
sahf
daa
rep
sbb
std
mov
jg
xchg
jbe
lret
cmpsl
inc
rcl
lahf
lea
rcr
xlat
push
xchg
in
sarl
test
xor
pop
or
xchg
aad
repnz
movsb
or
xchg
mov
sbb
jbe
inc
stos
insl
inc
fildll
mov
push
sbb
jle
mov
mov
cltd
loope
xchg
stc
sub
es
enter
adc
xor
ja
add
cltd
sti
sbb
mov
clc
repz
jl
lcall
rorb
stc
insb
ja
xchg
mov
pusha
lcall
imul
in
cltd
aaa
ret
or
push
imul
js
lret
fbld
mov
push
std
out
jo
dec
mov
dec
push
add
imul
and
pop
in
ja
sbb
jecxz
xchg
imul
popa
in
test
in
in
mov
adc
sub
test
arpl
popf
loope
into
movsb
adc
push
mov
mov
xchg
cmp
ret
xor
cmpl
xor
and
inc
inc
push
pop
outsb
cltd
insb
cld
aam
mov
pop
sbb
sub
loopne
fstps
pop
sub
dec
fisttpll
pop
push
mov
sbb
inc
out
clc
inc
sub
fdivp
cwtl
pop
divb
test
fwait
mov
sti
jl
add
sub
sbb
lds
in
dec
mov
dec
sbb
or
out
jp
stos
pop
mov
mov
jge
jmp
lcall
push
xchg
cmp
mov
jmp
sahf
jmp
in
mov
adc
adc
xchg
jg
inc
or
addr16
dec
cmp
jno
and
cmp
push
jg
mov
cwtl
xchg
mov
or
and
dec
mov
aam
aad
xor
push
call
movsl
mov
adc
ret
xchg
ret
ds
mov
cmp
shrb
out
inc
rorl
outsb
adc
mov
xor
or
mov
movsb
jmp
or
add
icebp
lods
leave
fdivrs
movsl
test
dec
xlat
push
mov
pop
aaa
mov
in
popf
aas
xchg
jl
jecxz
xorb
mov
shl
sbb
inc
sub
out
fildll
and
sbb
mov
out
lds
push
mov
xor
xchg
cmp
push
cmp
mov
outsl
imul
outsl
lcall
aaa
push
outsb
dec
test
call
in
sbb
out
mov
jbe
xchg
mov
lods
mov
xor
sbb
sbb
lds
lret
sbb
shlb
pop
xchg
adc
js
cmp
pop
iret
or
xlat
fstl
and
movsb
lods
pop
jbe
adc
and
dec
in
sti
jmp
cmpsb
xor
cwtl
leave
and
pop
ret
mov
mov
pop
cld
aad
dec
sub
imul
mov
movsl
mov
pop
sub
mov
shl
adc
pop
adc
mov
cmp
mov
in
xchg
sub
ja
add
mov
ret
lahf
sub
adc
scas
xchg
std
es
bound
bound
and
adc
mov
xor
scas
adc
cmpsl
push
addr16
das
nop
iret
pop
mov
into
clc
push
sahf
insl
scas
dec
or
into
xchg
ss
sub
ficoml
out
je
mov
fwait
cmp
mov
ret
cwtl
jno
imul
aam
fldcw
jl
jmp
push
cltd
lret
cmp
mov
inc
sub
or
or
xlat
popa
mov
cmp
adc
xchg
gs
fs
dec
js
mov
sub
xor
orl
mov
adc
call
fsub
lret
fs
mov
and
or
pop
add
mov
enter
cmp
fadd
pop
stos
or
arpl
stc
inc
ss
or
push
fstpt
pusha
jbe
xchg
xor
outsl
sub
ds
lock
sarb
movsl
fildl
fs
bound
shl
daa
negl
xor
cmp
aam
lods
stos
cld
clc
push
cld
ljmp
jmp
scas
pop
sub
mov
clc
inc
push
lods
lds
jle
adc
dec
pop
cs
xchg
popf
fsubrs
sbb
mov
orl
and
dec
scas
stos
jb
imul
or
sub
in
pop
fcoml
cs
add
cmp
test
mov
push
jae
xor
popaw
fisttps
add
adc
fldl
lret
jmp
inc
fwait
out
addr16
in
in
push
xchg
dec
test
iret
movsl
or
mov
dec
rorl
rcrb
imul
nop
in
xchg
add
mov
fnstsw
iret
call
gs
cwtl
mov
sbb
cmp
ror
aam
lcall
sbb
push
mov
popf
stc
and
sti
mov
int
push
aas
test
jno
int3
or
test
or
mov
mov
push
push
bound
or
nop
jmp
movsl
lods
jbe
sub
mov
lods
data16
out
cmp
into
out
or
ljmp
sbb
push
dec
sub
call
aaa
and
mov
ret
test
sahf
or
jl
ds
daa
mov
std
or
jnp
dec
addr16
and
fdivl
das
int
xor
orb
jp
lret
lahf
iret
mov
push
imul
cmpsl
popf
dec
adcb
outsb
loope
sub
push
out
lahf
ljmp
push
mov
les
jle
add
scas
les
fcomip
push
fsin
inc
jge
push
das
or
adc
jp
sub
hlt
push
mov
jbe
mov
or
mov
mov
addl
jo
scas
outsl
inc
sahf
in
aaa
stos
xchg
jp
stos
leave
addr16
adcl
int
or
mov
imul
jmp
mov
in
mov
test
mov
loopne
cmpl
dec
mov
out
mov
jge
je
outsb
fiaddl
int3
mov
pushf
mov
or
add
lcall
insl
in
inc
pop
xchg
cmpsb
dec
leave
jno
mov
pop
mov
mov
fwait
mov
sbb
sarl
jmp
dec
imul
sti
rcrl
sub
sbb
push
pop
pusha
mov
push
arpl
xor
test
mov
push
sub
pop
jnp
movsl
jno
scas
insl
pop
movsl
inc
jl
lret
add
pop
inc
ljmp
jnp
and
repnz
fcompl
outsb
cmp
inc
movsl
test
mov
movsl
fnstsw
cmp
sub
mov
sub
fadds
popf
xlat
push
adc
mov
sti
cltd
inc
clc
lock
ret
rorb
or
push
pusha
and
rorl
lcall
or
dec
mov
jmp
xchg
fstl
jle
decb
aaa
sahf
pop
xlat
lds
cltd
xchg
fists
cmp
int
into
push
loope
mov
dec
adc
int3
lret
cld
sub
xor
cwtl
mov
push
dec
loop
in
mov
mov
out
movsb
fiaddl
js
jge
push
ds
jno
cmpsb
ja
ror
notl
je
scas
pop
lock
mov
les
call
data16
scas
dec
scas
rcrl
les
sub
movsl
fs
push
aas
or
iret
push
xchg
mov
hlt
push
adc
jle
ret
xchg
jecxz
mov
adc
dec
in
loopne
push
push
shl
hlt
sbb
imul
xchg
jb
xlat
mov
or
outsl
jnp
test
dec
test
dec
dec
dec
cs
push
pop
sbb
in
mov
push
jg
mov
call
jae
mov
aam
pop
push
jmp
sub
pop
add
imulb
test
test
fsts
mov
xor
loope
movsb
pop
rolb
mov
fwait
ljmp
sbb
mov
pushf
mov
and
pop
pushf
xchg
mov
es
scas
cld
data16
or
jo
lock
sbb
outsb
jno
push
adc
add
in
cltd
popf
mov
pop
jg
jnp
and
hlt
in
ja
sbb
inc
mov
inc
sbb
inc
or
adcb
imul
pop
inc
pop
inc
adc
test
pop
jle
leave
ja
xchg
rcrl
fnstsw
adc
loope
fisubl
sub
stos
push
jecxz
pusha
inc
xchg
loope
test
dec
out
mov
add
lea
loope
loopne
mov
cltd
in
scas
imul
sbb
jae
sbb
xor
js
mov
pop
adc
pusha
push
xchg
or
mov
into
push
add
mov
cmpsl
xchg
adc
dec
inc
mov
or
lret
iret
and
dec
fcmovnb
sub
dec
or
xor
adc
aas
sub
or
sub
cmp
daa
rolb
xchg
sysenter
in
fildl
cmpsb
rcrb
pop
outsl
mov
sbb
inc
or
popf
adc
imul
in
jecxz
mov
pop
ret
or
icebp
and
in
inc
pop
add
xor
xor
int3
loope
cmpsb
sahf
adc
test
out
add
mov
mov
and
or
arpl
xchg
aaa
lcall
iret
mov
adc
mov
leave
push
dec
jge
xorl
rorl
jno
and
sti
sarl
add
push
sub
subb
push
pop
in
pop
out
sub
pop
and
mov
dec
aas
outsl
rol
mov
jnp
xchg
stc
mov
movsb
dec
sbb
lods
sub
ljmp
pop
mov
popa
dec
or
mov
xchg
sahf
shrl
jae
sbb
in
insl
or
xor
ret
scas
loop
pop
inc
call
sti
dec
inc
and
je
lods
push
push
dec
std
daa
xor
sbb
mov
xor
pop
lret
inc
sbbl
or
cmp
push
mov
pop
rorb
pusha
je
filds
sub
jecxz
nop
jmp
or
push
test
sbb
sub
push
add
aas
js
ret
mov
mov
pushf
xchg
adcl
cmpl
ja,pt
orb
or
cli
shlb
in
cld
cmp
jmp
xchg
xchg
cli
adc
imul
int3
jne
pop
mov
les
decb
fsub
pop
shll
mov
jno
and
repz
mov
or
mov
jp
inc
xchg
push
and
mov
cmp
xor
adc
cmp
mov
in
adc
dec
lock
icebp
mov
ret
cltd
adc
cmc
cmc
inc
sub
jae
sbb
lods
xchg
inc
call
jge
xor
xchg
push
pop
adc
movsb
sbb
fidivrl
dec
aaa
xor
adc
rcrb
loope
pop
sbb
dec
jbe
push
dec
push
in
setl
call
in
adc
test
xchg
cmpsl
js
push
or
mov
in
jg
test
ljmp
or
icebp
das
inc
mov
mov
cmp
add
cmpb
cli
inc
pop
loope
je
mov
orb
xor
lret
jp
in
aam
mov
das
jno
xchg
call
pop
jb
cmp
shll
lock
out
arpl
stos
pop
cmc
cmc
or
or
push
sbb
cmp
scas
enter
aad
xchg
and
sti
mov
jae
loope
dec
in
and
xor
jp
dec
dec
pop
stc
mov
cld
mov
jne
div
dec
jecxz
les
cmp
mov
mov
sbb
sub
je
xchg
leave
xor
rorl
xchg
and
shlb
pusha
push
mov
mov
loop
xchg
popa
lahf
gs
jle
in
cmp
shll
mov
push
test
sbb
jl
imulb
xchg
push
call
pusha
out
lcall
adc
in
pop
iret
xchg
in
call
lahf
add
adc
pop
imul
int3
xor
mov
sbb
pop
inc
test
pop
push
mov
lcall
cltd
arpl
jle
push
jbe
jecxz
mov
push
push
je
fisubrs
gs
and
sahf
pop
inc
mov
fs
test
jecxz
xchg
mov
xor
outsb
jecxz
das
push
sub
repnz
xor
int3
sub
decb
in
push
adc
rcll
push
pop
out
in
aam
jns
das
add
subb
aad
imul
imul
xor
sarb
mov
add
scas
ficomps
dec
mov
lret
push
sbbl
xchg
jne
mov
lods
lds
cmp
dec
xchg
xor
sub
inc
push
imul
cmp
mov
pushf
xor
add
xchg
dec
stos
int3
xchg
mov
mov
nop
mov
arpl
jnp
mov
in
xor
pop
adc
sub
add
sub
xor
adc
sub
fwait
lock
sbb
jne
cld
push
mov
mov
inc
inc
pop
or
push
inc
fs
mov
dec
test
cli
test
cmpsb
xor
xor
popa
dec
pop
stos
adc
bound
nop
dec
push
in
mov
in
enter
test
ds
popa
out
dec
mov
sub
call
push
cmp
aaa
mov
inc
jp
call
inc
jmp
xor
inc
push
jb
ret
insl
aaa
xor
fs
push
dec
sarb
jns
mov
xchg
lock
and
lea
cld
out
subb
ds
add
xor
clc
stc
cmp
ret
mov
lret
sub
rcl
mov
out
mov
movb
shlb
pop
pop
mov
or
das
jb
xor
xchg
fnstenv
and
mov
mov
mov
int3
cli
pop
xor
or
imul
mov
shll
xor
mov
into
or
push
pop
inc
icebp
mov
in
cmp
test
dec
jns
sbb
jo
ss
mov
pop
sub
jno
inc
dec
rcr
lock
xchg
pop
dec
iret
insl
sbb
xchg
mov
sbb
jns
ja
jno
sub
lea
loopne
js
cltd
or
push
imul
gs
sub
sbb
lret
ret
fnstcw
jle
cltd
jl
bound
sub
cwtl
cld
adc
xchg
or
outsl
or
mov
lahf
push
out
and
mov
imul
add
xor
jbe
insb
icebp
pop
or
push
mov
xchg
ret
call
pusha
push
xchg
xchg
dec
imul
fs
mov
loope
fcmovnb
lods
mov
hlt
out
movsb
scas
lea
jns
or
fnclex
and
fs
je
pop
into
add
mov
xor
popa
add
sti
out
in
lds
jno
xchg
lahf
fnstcw
jbe
add
cmp
mov
fcomps
cld
test
div
test
in
testb
push
pop
fimull
mov
imulb
jecxz
loop
pop
seta
inc
pop
cmp
mov
das
xchg
cmpsl
ja
mov
call
xchg
out
xor
jns
fsubrs
jp
jecxz
jl
push
test
fcom
test
lret
test
push
jae
sub
loope
in
pop
cli
hlt
jp
movsb
push
call
or
sub
rcrl
ljmp
sbb
dec
adc
test
sbbb
ss
sti
or
stos
pop
jp
je
test
mov
xor
or
lock
mov
ds
cli
divb
mov
inc
jno
xor
mov
mov
sti
xlat
jmp
aad
test
into
sbb
iret
test
inc
in
dec
adc
cmp
pop
cmp
push
sti
icebp
cs
imul
push
flds
daa
mov
adc
out
in
cmpsl
fsubs
xor
push
mov
or
cmpb
mov
sbb
add
subb
movsb
filds
xor
mov
sub
xor
mov
lds
and
in
repz
jns
jle
dec
arpl
sbb
lock
add
mov
add
test
imul
inc
outsl
jg
sahf
adc
or
xchg
aas
jmp
hlt
mov
sbb
addr16
inc
dec
loop
les
lret
inc
mov
imul
push
cmpsl
mov
stos
loopne
sub
pop
xchg
adc
push
dec
outsl
xchg
jo
sub
jle
inc
and
movsl
stos
pop
push
repnz
and
pop
cmpsl
fwait
mov
add
xor
sbb
mov
push
or
cmp
or
stos
xor
xchg
aam
test
or
xchg
cmc
xor
gs
xchg
scas
scas
fldt
add
adc
jg
mov
adc
and
stos
cmp
aaa
cld
test
idiv
or
xchg
aam
mov
or
mov
xchg
cmp
inc
in
push
loop
jns
push
sub
testl
jne
test
mov
out
scas
popf
push
xchg
and
mov
ret
test
in
movsl
cmp
sbb
mov
repnz
pop
les
nop
xchg
popf
shlb
xchg
outsl
out
xchg
scas
cmp
das
or
sub
loope
out
fidivl
test
rclb
push
aam
pop
jl
in
pusha
pop
sub
mov
jne
std
loope
pop
mov
nop
cld
push
