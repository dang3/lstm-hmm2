pop
push
pop
pop
or
mov
xorl
filds
dec
sbb
popa
add
filds
mov
mov
and
jns
rorl
jmp
pop
leave
adc
decl
push
mov
mov
adc
xchg
inc
push
sub
movl
cmp
mov
xchg
xchg
fistl
dec
es
int3
mov
dec
xor
xor
lret
fcomps
jle
ljmp
inc
in
jae
fcompl
fcoml
xchg
test
mov
sub
sahf
jae
cmp
out
mov
scas
pop
data16
xchg
lahf
mov
xchg
ljmp
mov
pop
lcall
mov
cmc
stc
test
imulb
cwtl
add
sbb
adc
mov
mov
bound
iret
push
and
xlat
or
adc
xlat
popa
fcoms
testl
mov
jecxz
cmp
add
stos
inc
int3
cmpsl
aas
cmpsb
xchg
enter
push
loopne
inc
dec
in
cmp
pop
pop
inc
test
add
inc
mov
pop
std
inc
outsb
mov
dec
mov
sbb
flds
or
add
andb
roll
lahf
dec
sarb
xorl
sub
into
in
mov
repz
mov
mov
xchg
in
outsl
mov
repz
outsl
ror
and
test
or
jmp
cwtl
sarb
ret
mov
imul
dec
sub
push
sti
xchg
mov
cs
jae
pop
faddl
ficoms
aaa
mov
clc
xchg
pusha
inc
mov
mov
jno
sbb
addb
repz
icebp
test
cmpsl
pop
test
dec
testl
mov
inc
fists
mov
enter
pusha
lods
outsl
popf
bound
sub
lret
sub
push
pushf
mov
dec
scas
ja
add
xor
fwait
sub
adc
jb
in
aaa
outsb
and
cwtl
pop
jne
xlat
inc
cmp
push
into
xchg
add
dec
stos
aas
add
cmp
push
fadds
mov
cmp
and
jno
cwtl
lods
fistps
push
xchg
ja
repnz
insl
mov
xlat
fisttpl
rcrb
pop
jo
aas
insl
mov
inc
push
jae
fbstp
adc
jnp
movsb
fucomip
push
shl
xchg
fsubs
sbb
xchg
add
std
fwait
dec
pop
outsl
jns
and
idivb
mov
push
jmp
rclb
mov
mov
ret
movsb
sbb
jl
cs
fs
aaa
nop
lcall
repnz
dec
into
js
mov
scas
add
adc
xchg
xor
jmp
xchg
loope
inc
scas
incb
popa
pop
movsl
daa
pop
cmpsl
ret
lret
sub
in
psllq
and
shl
into
push
mov
push
xor
mov
test
xchg
fiadds
xchg
aad
inc
cmp
push
sbb
push
ret
sub
xor
fwait
out
or
aad
rol
in
push
dec
dec
pop
daa
sbbl
and
pop
jno
sahf
cltd
pop
xchg
dec
inc
dec
dec
mov
in
imul
cltd
inc
cmp
mov
test
and
addr16
cmp
adc
paddw
dec
bound
mov
sbb
mov
testb
sbb
dec
rcl
xchg
xor
and
imul
cmp
test
gs
loop
call
xchg
rorb
cltd
repnz
shl
dec
sbb
cmpsb
nop
sti
cmp
xor
inc
sbb
adc
pop
or
push
and
out
stos
add
ja
es
add
mov
fnstcw
inc
jo
rcll
xchg
jnp
insb
imul
movsl
mov
cwtl
inc
pushf
push
or
pop
pop
jns
pop
andb
lods
call
fstpl
sbb
ds
lret
lods
push
ret
in
js
mov
xchg
xor
pop
inc
sbb
push
mov
dec
cwtl
add
inc
push
push
adc
dec
scas
call
jae
adc
mov
cmc
mov
fldt
pop
sahf
lock
enter
dec
mov
sbb
pushf
stos
ret
cwtl
jae
or
int
mov
push
cmc
jne
popf
mov
ljmp
loope
jl
and
and
icebp
jge
inc
jg
xchg
inc
adc
daa
sahf
pop
lods
lods
loope
repz
aaa
sbb
mov
rcll
ja
dec
xor
sbb
xchg
adc
sti
arpl
test
repz
or
jp
inc
mov
adc
lea
aam
push
je
mov
cs
inc
stc
daa
gs
inc
shr
mov
jmp
xor
and
push
ret
jnp
jmp
or
mov
cmp
mov
cmpsb
fsubrs
out
call
sbb
cwtl
sbb
mov
fucomip
xor
inc
inc
pop
loop
pop
stos
notl
or
or
int3
aad
jmp
dec
js
call
xchg
xchg
cs
leave
out
mov
inc
sbb
push
shll
pop
mov
mov
pop
push
pmullw
push
vrsqrtss
mov
fwait
imul
loopne
jns
push
mov
xchg
inc
push
cmpsb
repz
nop
sarl
fimuls
jae
daa
inc
in
arpl
dec
lahf
imul
push
jp
xchg
sbb
push
ja
xchg
bound
and
jno
int3
sbb
push
adc
mov
dec
les
dec
mov
cld
lods
mov
imul
xorb
fcmovbe
push
out
aam
inc
and
mov
push
fbld
inc
popa
aam
mov
and
or
mov
mov
push
add
jno
arpl
add
cli
sahf
and
xchg
push
ljmp
xor
push
out
or
sbb
andb
add
push
decb
mov
into
mov
push
pop
in
jo
lret
pusha
xor
lcall
mov
jb
xor
xchg
jbe
inc
sub
push
inc
adc
mov
in
adc
sbb
or
xor
stos
jmp
dec
lret
and
pop
add
inc
mov
dec
pop
outsl
adc
pop
add
cli
enter
push
stos
add
gs
push
sbb
mov
icebp
mov
rcrl
ljmp
sbb
popa
pushf
cld
daa
pop
inc
sub
mov
repnz
xor
mov
or
lret
fldenv
and
adc
jle
loope
adc
xor
mov
jmp
call
les
ja
cwtl
outsl
mov
cwtl
cld
cs
shr
scas
shll
gs
arpl
dec
daa
gs
jg
mov
dec
jbe
loope
bound
sti
in
mov
jge
es
mov
pop
inc
out
stc
cmp
popf
stc
pop
mov
adc
adc
mov
and
incl
pop
xchg
int3
iret
outsl
daa
enter
dec
jb
andl
insb
xorb
lds
stos
lods
testb
dec
shl
test
and
jno
pop
loopne
or
stc
push
push
inc
mov
sbb
inc
jns
into
jnp
les
push
jp
adc
or
test
bound
mov
xor
mov
and
add
iret
daa
lea
enter
add
pusha
adc
add
lock
inc
xor
insl
cmc
rcrb
outsl
js
jne
mov
add
jg
psubsw
mov
imul
pusha
mov
cltd
loopne
dec
stos
cmc
inc
cmpsb
ret
dec
das
sbb
sbb
inc
ds
mov
xor
sub
jb
dec
inc
mov
repz
rcrb
dec
push
dec
sub
adcb
movd
xorl
xchg
dec
xor
pop
int
jb
sbb
inc
cmpsb
mov
dec
aad
xchg
mov
lods
push
stos
icebp
aas
movsl
mov
mov
pushf
je
cltd
cld
fsts
lcall
add
sti
xchg
xchg
popa
setno
inc
scas
and
in
xchg
pop
movsl
dec
sahf
mov
jmp
pop
jno
loope
sub
out
sub
into
les
outsl
fistl
fadd
ljmp
add
mov
xchg
lods
xchg
jns
lret
stos
ror
or
pop
ret
dec
dec
hlt
pop
lcall
pop
loopne
jp
jnp
jmp
or
inc
pushl
test
test
jae
cmp
data16
std
mov
dec
pop
inc
pusha
cmp
lcall
mov
jecxz
xchg
cld
mov
and
mov
lods
xchg
sti
and
outsl
adc
pushf
adc
or
dec
xlat
into
xchg
and
push
sbb
rol
shrb
clc
jno
lret
test
push
jmp
and
das
aam
dec
dec
inc
sbb
sbb
cmp
in
xor
lock
loope
pop
inc
mov
subb
mov
movsb
or
insb
xor
push
out
add
outsb
dec
adc
xchg
jge
mov
mov
jl
ret
in
lock
jae
shlb
lods
mov
dec
push
shrl
pop
push
xchg
in
xor
push
sbb
sahf
pop
lahf
in
bound
jmp
mov
aas
xchg
pop
adc
fwait
jb
leave
aaa
test
out
sbb
mov
pop
jb
repnz
mov
dec
and
xchg
shll
stc
pop
test
and
adc
or
mov
repnz
mov
adc
stos
mov
aad
sub
mov
icebp
mov
pusha
andb
xor
lret
clc
andb
dec
das
inc
out
imul
hlt
sub
out
add
push
in
add
mov
xchg
push
adc
aad
lret
pop
pop
jo
jecxz
or
mov
dec
lea
xchg
add
repnz
mov
ljmp
clc
xor
andb
dec
and
into
adc
cmp
ret
in
orb
cltd
stos
int3
mov
loopne
sbb
lods
fdiv
data16
mov
xchg
ja
xor
aam
mov
push
bound
push
call
inc
ret
push
mov
sbb
lods
sub
inc
ss
jge
loopne
scas
adc
stos
xor
push
bound
mov
in
add
ds
inc
loop
mov
mov
sahf
mov
inc
ficomps
inc
add
loope
imul
out
repz
mov
in
out
dec
sbb
ss
push
lahf
jg
lret
and
mov
pop
sbb
push
and
mov
sub
repnz
push
jb
dec
cmp
stos
sahf
daa
dec
push
out
pop
jbe
mov
or
fidivs
xor
ja
je
inc
jle
loopne
jne
push
xor
adc
lods
xchg
push
clc
dec
cwtl
lock
arpl
dec
dec
xlat
dec
clc
and
dec
enter
inc
jns
sahf
pop
pop
sbb
adc
or
fdivs
jecxz
push
clc
xchg
jae
sub
enter
or
inc
pushf
cld
sub
jmp
inc
sbb
pop
mov
jge
xchg
pop
sarb
dec
ja
pop
xor
jns
jp
adc
fildl
sarb
lahf
xchg
inc
lret
push
lock
mov
lods
int3
lock
xor
sub
fadd
emms
pushf
cwtl
dec
ret
sbb
cwtl
cmpxchg
mull
mov
jecxz
jg
ja,pn
cmpsb
cmpsl
or
jg
pop
aam
or
cmpsl
xor
dec
sbb
ror
je
jp
add
jno
scas
stos
sbb
xchg
inc
lret
jb
clc
add
cmp
imul
jmp
mov
lock
push
mov
sub
pusha
test
sub
xor
jmp
in
aam
mov
add
jnp
jge
lock
mov
adc
arpl
pop
jl
xor
aaa
aam
cmc
xchg
jbe
outsb
fnstcw
iret
jb
push
out
push
xorb
jae
test
lods
xor
pop
test
jg
lods
icebp
mov
xchg
pop
dec
xor
pop
xor
pop
in
sub
sahf
xchg
dec
jno
fsubl
push
xchg
stc
cld
xchg
repnz
movsbl
pop
xor
mov
notb
jb
fwait
pop
cwtl
adc
xorl
push
outsl
ds
jecxz
pop
pop
mov
aam
push
jg
push
cmp
jge
add
xor
jecxz
jno
rorl
mov
pop
shl
lret
js
and
push
xor
add
mov
aam
mov
shrb
add
dec
inc
mov
pop
int
mov
add
fidivrl
push
arpl
icebp
mov
adc
pop
xor
sub
xchg
dec
cld
xor
cmpsb
pop
dec
mov
add
pop
movsl
rclb
jle,pn
mov
push
loopne
fbld
lcall
jno
jo
popa
lret
stc
enter
inc
sub
lods
loop
ror
scas
and
xchg
loopne
andb
fucom
cmp
sti
inc
mov
mov
fiaddl
or
in
imul
sbb
pop
add
push
xchg
fiaddl
inc
push
xchg
and
and
divb
daa
sub
js
shlb
ret
outsb
dec
out
or
and
sbb
add
jmp
and
pop
aas
cmp
cmpsb
cld
adc
pop
rol
xchg
lahf
sub
rcll
outsl
mov
pusha
lds
pop
call
pushf
push
mov
mov
sbb
and
out
mov
and
negl
inc
dec
ljmp
pop
sub
div
pop
ret
pop
ljmp
fadd
fstpt
push
mov
int
jmp
push
push
push
xchg
mov
xor
aaa
fcoms
inc
mov
repz
pushf
cmc
arpl
adc
mov
mov
insl
push
mov
dec
sbb
ret
lret
popl
movsl
mov
jg
scas
loopne
fldcw
mov
inc
movsb
mov
and
add
cli
shrl
stos
insb
sbb
stos
push
push
out
call
sub
jecxz
scas
int3
mov
or
jnp
or
inc
dec
movsb
and
scas
in
in
jle
in
dec
out
adc
pop
mov
jg
pop
push
xor
rorb
cmpsb
cmp
cmp
mov
and
aad
mov
sub
and
push
sti
inc
fs
mov
jnp
xchg
xor
ret
les
mov
and
inc
xchg
push
add
sbb
add
push
sbb
xor
fstl
jge
out
test
inc
mov
jmp
je
enter
out
cld
mov
fidivs
xor
inc
inc
shl
xchg
sbb
ret
mov
sbb
lcall
adc
mov
xchg
out
or
wbinvd
aam
push
jae
xor
inc
in
mov
imul
sahf
outsb
outsb
inc
add
sub
ss
inc
lea
mov
sbb
push
lret
inc
xchg
xchg
cmpsb
push
repz
repnz
scas
fsubl
sbb
cmp
enter
adc
or
andb
icebp
pop
sub
insb
or
hlt
dec
cmpsl
insl
dec
int
dec
and
push
mov
ds
adc
in
xor
leave
mov
lahf
cmp
push
gs
movb
sub
add
push
int
cmp
lods
cwtl
outsb
int
xor
xor
out
mov
cwtl
inc
cmp
scas
xchg
scas
adc
in
dec
mov
sub
in
mov
movsl
shll
outsl
jmp
fisubl
nop
mov
arpl
and
fcoms
outsb
mov
or
cs
das
movsb
add
mov
roll
sahf
sbb
mov
les
push
in
icebp
int
loope
fs
cmp
dec
xor
or
jbe
mov
xor
mov
shll
movups
push
pop
pop
dec
xchg
in
or
and
inc
lahf
fs
inc
push
adc
sarl
cmpsb
add
loope
jp
push
ret
lret
and
pop
mov
std
sar
addr16
pop
fxch
cmc
stos
mov
xor
or
adc
rcrl
movsl
and
call
and
stos
clc
icebp
shrl
roll
dec
push
fwait
lret
fnstenv
sub
daa
pop
or
test
dec
les
out
jae
pop
addl
or
sbb
sub
lret
gs
les
lcall
xchg
movsb
dec
pop
or
sti
data16
popa
fimuls
rorb
xchg
xor
mov
mov
sub
pushf
stc
pop
movsb
ja
bound
in
lock
outsl
stc
scas
in
cmpsl
popa
outsb
push
lcall
jne
outsl
ljmp
roll
xor
roll
stc
ss
nop
imul
mov
jbe
sub
jno
inc
in
jo
test
nop
mov
xchg
or
cmp
pusha
test
dec
mov
incl
or
sub
mov
outsb
jns
sbb
enter
pushf
fidivrs
ja
pop
das
mov
test
sbb
sub
pop
jg
mov
xor
and
xor
cmpsb
inc
xlat
aam
ja
frstor
fidivrl
sub
cmc
fwait
fwait
push
mov
jle
xor
push
stc
mov
loopne
lds
mov
inc
idiv
out
stc
imul
and
dec
fwait
leave
and
fisttpl
pop
dec
sbb
dec
in
mov
sbb
mov
inc
das
mov
sub
daa
rol
cmpsl
out
lods
js
aas
or
arpl
sub
pmulhuw
pop
sbb
mov
mov
inc
js
mov
shr
dec
insl
incb
push
cmp
pop
repnz
cmp
insb
jno
sbb
jecxz
inc
or
sbb
fildll
or
mov
movsl
out
mov
jnp
and
cs
shlb
dec
imul
arpl
cmpsb
mov
into
pop
clc
add
or
jbe
lods
jle
sub
jns
dec
enter
cwtl
jle
call
push
dec
or
xor
or
dec
sub
push
xor
jp
mov
test
push
sub
sbb
sub
inc
jbe
hlt
notb
push
adc
mov
out
pop
pcmpgtb
sbbl
or
sub
and
add
push
aad
jb
sbb
daa
mov
xor
je
and
mov
adc
fisubs
sbb
imul
ds
mov
mov
push
cmp
dec
mov
push
push
aaa
lret
jl
mov
push
sub
jp
and
test
push
cmpsl
iret
rcr
movsl
test
sbbl
pusha
les
cmp
add
out
imulb
push
scas
or
iret
lret
add
jecxz
sub
xchg
mov
fidivs
daa
xchg
ret
and
or
ja
loopne
rclb
pushf
xchg
fcomps
lea
pop
fsubl
jmp
or
rcr
fmul
xchg
inc
loopne
cmc
addr16
or
mov
cmp
cmp
jecxz
test
stos
mov
jmp
dec
stc
xchg
xor
sahf
rcl
es
and
jmp
push
lock
mov
xchg
and
sbb
pop
xchg
push
ret
stos
fistpll
push
xchg
jns
enter
int3
dec
fucom
or
xchg
fcmovu
std
out
cmp
xchg
lods
xor
ret
or
testb
sbb
decb
xchg
add
cli
adc
lock
dec
jle
mov
cmc
mov
xchg
xchg
fsubl
push
pop
mov
mov
call
loopne
mov
cmc
leave
inc
ret
mov
and
cld
push
xchg
sbb
into
sbb
gs
data16
sti
aas
lcall
xchg
sbb
and
jb
jno
xor
xlat
mov
jmp
mov
and
fwait
cmp
xor
pop
cltd
cwtl
lret
mov
xor
cltd
sbb
cmpsb
jecxz
adc
and
dec
add
mov
mov
sub
jle
mov
cs
test
pop
jb
or
dec
jecxz
sub
rcrl
cmpb
ret
iretw
or
sub
push
mov
mov
into
dec
xchg
clc
stos
pop
std
shlb
xchg
subl
scas
ret
fwait
mov
add
outsb
test
or
orl
dec
or
sub
or
sbb
ret
sub
xor
gs
xchg
call
xchg
js
cmp
hlt
and
xlat
das
dec
cmp
mov
ret
fldcw
inc
mov
cmc
push
mov
out
push
in
sbb
pop
mov
out
out
int
or
xchg
test
xor
sub
pop
and
in
inc
dec
inc
xchg
fucomp
sub
and
sub
mov
aaa
dec
mov
dec
mov
mov
add
aas
add
or
dec
andb
mov
repnz
or
mov
dec
imul
sbb
nop
je
or
out
mov
sub
adc
mov
addb
mov
clc
jb
ffreep
outsl
sbb
repz
rcrb
inc
and
addr16
and
pop
clc
xor
xchg
inc
sbb
arpl
sbb
xlat
das
cmp
mov
test
movsl
sub
sbb
lods
loope
cmp
sbb
mov
fbld
in
or
ret
shlb
testb
pop
insl
packuswb
inc
cmc
das
cld
sub
fsubrl
test
pop
jo
cmpsb
jecxz
pop
mull
mov
test
mov
push
pop
mov
shrb
aam
ljmp
aam
sbb
lea
lret
dec
add
sbb
pop
pop
mov
push
in
pop
jns
mov
jo
push
movsb
fucom
lds
imul
fwait
dec
push
xor
add
insb
jg
sub
adc
stos
xor
aaa
mov
hlt
xor
fnstsw
sub
mov
cmp
dec
cmp
jg
push
bsf
pop
dec
xchg
adc
arpl
mov
add
movsl
les
jle
imul
adc
sub
shlb
mov
inc
ljmp
rclb
mov
mov
mov
xchg
aam
and
std
push
add
cmpsb
xchg
in
and
or
adc
push
mov
leave
lods
pop
ljmp
shlb
cmpsl
fdivrl
mov
mov
lock
xor
inc
adc
xchg
jno
mov
cmp
cmp
lods
inc
andb
and
jo
scas
and
push
cld
ficompl
pop
jae
and
pop
popf
ret
push
push
dec
mov
mov
pop
adc
push
cmp
mov
adc
das
rcrb
mov
xchg
add
aad
ss
test
cli
aas
fcomp
push
int
aas
out
mov
das
or
in
shl
sbb
notl
pop
fs
rclb
jl
call
outsb
pop
fnstenv
adc
es
lock
movsl
inc
mov
shrb
push
push
pop
ud0
cmc
adc
sub
mov
sbb
jecxz
mov
pop
mov
movsb
add
mov
dec
out
sbb
xchg
test
lcall
cmpsb
and
dec
je
xor
std
push
jb
lea
pushf
inc
or
sub
das
scas
push
sbb
sbb
rorb
xlat
pop
hlt
dec
dec
mov
pusha
out
cmp
ret
xor
mov
sbb
fstpl
mov
mov
xlat
push
add
lock
cmpsb
push
and
mov
jne
mov
mov
xchg
std
ljmp
out
jle
in
mov
subb
xchg
mov
push
int3
popa
stc
ficompl
repz
and
xchg
mov
rorb
sub
jl
mov
gs
lcall
add
je
test
mov
int
xchg
pop
xchg
push
sbb
adc
dec
sub
xchg
adc
push
cmp
adc
je
xchg
aas
gs
add
sub
std
mov
cmp
mov
in
jmp
sbb
xchg
lods
xor
lret
dec
bound
adc
pop
push
lds
jp
popa
stos
call
in
add
in
addb
jo
test
push
sub
push
loop
jb
divl
cltd
pop
pop
jno
std
add
cmpsb
adc
fsubrs
sbb
mov
sbb
into
jecxz
js
or
dec
mov
imul
pop
cld
jne
cmpsb
int3
sti
xorl
ficompl
and
mov
mov
mov
ljmp
ljmp
xchg
adcb
subl
jecxz
shrl
sbb
jae
sbb
add
pop
mov
xchg
jno
fsubl
xchg
mov
ror
add
pusha
jg
pop
std
push
outsl
or
jne
std
add
xor
rorl
mov
adc
xchg
shrb
mov
inc
out
rorl
cmpsb
mov
ror
popf
xchg
adc
into
xor
xchg
addb
pop
lods
mov
mov
stos
pop
fwait
ja
aaa
loope
dec
pop
testl
pushf
pushl
insl
pop
sub
insl
arpl
insb
es
adc
mov
cmp
jecxz
stc
int3
outsl
mov
adc
hlt
cmpsl
lock
pop
testl
hlt
icebp
and
leave
sbb
pop
in
inc
add
and
inc
stc
cmpsb
imul
ljmp
lret
xor
hlt
loopne
sub
lea
mov
aam
or
mov
enter
jne
lods
aas
lods
jne
jg
or
mov
shlb
push
lea
test
xor
fwait
test
fwait
inc
cmc
sub
mov
icebp
jno
cld
jb
pushl
stc
in
jmp
cmp
inc
out
lret
aam
lea
fcmovne
mov
shr
cltd
hlt
dec
xor
inc
lret
dec
mov
mov
add
xchg
arpl
repz
xor
popf
lock
dec
std
fwait
xor
and
cmp
les
dec
sbb
out
jno
adc
lods
mov
jl
sbb
ja
lret
add
ljmp
imul
ljmp
bound
outsb
push
pop
pop
pushf
int3
lcall
fldt
cli
and
mov
lock
fistpll
test
and
add
aas
imul
enter
mov
inc
inc
ja
cld
push
dec
data16
enter
stos
xor
jb
jne
xchg
cmp
sub
and
xor
roll
das
clc
sub
mov
cmpsl
shrl
or
jae
insl
mov
in
inc
dec
icebp
mul
ljmp
xchg
sbb
inc
or
cld
lods
shll
push
insb
ret
xchg
lahf
int
mov
mov
cld
test
out
stos
rol
fsubrs
imul
lret
mov
scas
push
fsubp
xor
sbb
test
sahf
rep
add
adc
sub
xchg
pop
push
rcrl
fsubr
cli
jecxz
push
clc
nop
loope
jecxz
push
gs
daa
mov
es
push
scas
shlb
jae
mov
xchg
inc
movsb
repnz
scas
pop
jle
xlat
push
shlb
mov
insb
repnz
popf
pusha
aas
cmp
mov
pop
jne
loop
ror
mov
jle
xor
test
push
xor
in
cmp
inc
jge
mov
add
jb
cli
rcrl
ret
into
mov
hlt
ljmp
xor
test
xor
add
fidivrl
pop
push
popa
out
dec
pop
add
fdivl
sarb
sbb
mov
aaa
les
pop
das
push
jo
cmpsb
push
pop
xor
push
jge
out
dec
es
int3
cltd
les
sbb
mov
shll
push
pop
pop
mov
jb
ret
inc
sbbl
push
mov
rorb
in
dec
sti
stc
xchg
and
addr16
in
adc
out
and
fisubrs
cwtl
stc
rclb
popf
fdivrs
lcall
or
jge
mov
in
mov
shrl
jnp
push
jmp
pop
test
push
push
cmp
lods
push
cmpsl
sub
int3
cmc
test
push
and
and
jnp
push
mov
add
fwait
or
cmpsl
cwtl
popa
cli
mov
jo
cld
cmp
shll
sbb
mov
jg
pop
dec
stos
loop
sbb
xchg
inc
out
sbb
lods
mov
add
adcb
sar
dec
sti
call
dec
test
sub
in
leave
ja
into
mov
mov
clc
out
xlat
sub
mov
loopne
push
adc
cwtl
fmull
push
xchg
cmpsl
dec
add
cmp
test
add
dec
xor
sub
les
adc
and
adc
mov
je
cs
xlat
or
xchg
cmc
pop
sbb
ja
xchg
sti
jp
flds
adc
sub
fwait
or
push
insl
rcrb
out
insl
inc
jnp
mov
je
test
cmc
mov
insl
mov
sub
icebp
insb
scas
hlt
sub
mov
mov
js
cld
push
lret
adc
push
pop
test
adc
or
in
xor
xchg
push
mov
aam
mov
in
int3
push
das
andl
sub
add
sti
add
xor
fld
cmp
or
rolb
cmp
jmp
cmpsl
mov
fwait
mov
aas
mov
lret
mov
imul
pop
sub
add
mov
outsl
incl
sub
leave
push
inc
push
dec
inc
mov
sub
pop
arpl
loopne
in
mov
pop
dec
jle
mov
or
fdivrp
rolb
sahf
xchg
sbb
add
ss
push
loopne
pop
scas
jmp
push
cmpsl
fwait
ds
mov
and
les
imul
out
shrb
ret
add
push
push
lods
push
scas
and
rol
push
js
mov
push
clc
and
rcrl
or
inc
jae
cltd
loop
cmp
imul
addb
ja
mov
jno
imul
xchg
loop
cwtl
cmp
jns
popa
outsb
jp
rolb
stc
js
mov
mull
lcall
shrl
jge
and
mov
dec
inc
dec
popf
fbld
in
xlat
dec
inc
xor
jns
aaa
movsl
test
dec
inc
imul
mov
cmpb
hlt
icebp
xchg
mov
lahf
call
adc
lods
xchg
push
cmpsl
insb
cmp
xor
clc
or
xor
add
add
cmpsl
out
pop
and
mov
dec
mov
mov
pop
out
or
std
jnp
cmc
and
and
call
mov
push
das
push
sub
orb
filds
repnz
jle
add
mov
jp
cmc
mov
out
sbb
xor
xor
fwait
adc
sub
pop
cld
cmp
inc
jae
or
mov
cmp
xor
pop
jmp
sahf
loopne
pop
les
pop
shl
mov
cmp
sbb
or
and
adc
scas
jbe
test
movsl
push
xchg
shrl
call
adc
xlat
jecxz
movsb
gs
arpl
add
jns
xchg
sbbl
cltd
or
daa
push
jg
pop
dec
xchg
sub
popf
dec
pop
dec
repnz
adc
mov
add
add
pop
popf
xlat
sub
data16
lods
sub
dec
xor
jp
or
incl
nop
pop
popf
mov
push
loope
test
pusha
jecxz
mov
xor
dec
sbb
or
pop
add
pop
inc
orl
mov
mov
lahf
mov
mov
cmpsl
xchg
add
jle
std
and
add
leave
push
rol
sub
push
and
iret
vpavgw
pop
pop
adc
mov
fwait
or
int
inc
cmp
movsb
mov
mov
push
and
fst
inc
dec
jecxz
mov
fimuls
icebp
adc
pop
adc
and
push
pop
mov
and
fs
xchg
or
pop
ror
mov
xchg
mov
test
add
sbb
xchg
and
orl
cmpsb
mov
cmpsl
sbb
pop
sahf
dec
popf
push
push
nop
jmp
lret
out
add
enter
mov
outsl
xchg
xor
push
andb
cs
jae
add
cmpl
push
pop
push
mov
ja
dec
sarl
xor
xchg
jne
mov
jecxz
rol
leave
cs
mov
add
scas
cmp
mov
lds
stos
inc
int3
ret
push
inc
mov
inc
xor
std
inc
cmpsl
jo
jl
iret
jecxz
mov
addr16
cwtl
adc
pop
in
iret
ss
xchg
or
jnp
fistpll
sbb
jge
test
fsubr
out
in
inc
fcmovne
into
mov
or
test
pusha
lock
mov
pop
and
cmp
pusha
out
sbb
cmpsl
mov
shl
push
push
loop
cltd
testb
addr16
data16
pop
inc
pushf
push
daa
in
arpl
mov
dec
dec
inc
test
sbb
inc
cld
and
mov
push
jl
inc
and
roll
fsubl
incb
sub
xchg
fdivs
mov
ljmp
vmovdqu
gs
xchg
lret
psrlq
adc
mov
insl
sub
dec
movsl
lret
imul
add
mov
ficompl
cmp
xor
jecxz
inc
or
test
repnz
insb
cmp
cs
xchg
sub
inc
mov
add
or
into
lcall
leave
fidivrl
sub
hlt
nop
xor
movsl
bound
xchg
mov
push
mov
imul
out
cs
cld
in
lret
sub
push
adc
stc
mov
adc
add
pushf
push
lea
push
imul
out
popf
divl
xor
jae
in
popf
or
inc
sbb
hlt
push
sbb
movsb
xchg
pop
jnp
xlat
jae
or
jmp
testb
xchg
fsubl
cltd
stc
inc
add
fs
and
into
pop
xchg
test
fnstcw
xchg
fnstcw
jb
fsubrs
lods
test
sbb
fs
outsb
lret
lods
int
pop
dec
adc
pushf
rcrl
jae
addr16
call
std
bound
inc
mov
add
fdivs
xor
inc
arpl
test
leave
sahf
pop
test
pop
xchg
imul
test
adc
jl
js
sbb
or
out
mov
sbb
cs
adc
cwtl
dec
loopne
dec
movsl
jb
test
xor
jp
int3
jecxz
cmp
fisubl
lea
or
push
and
mov
test
jmp
and
add
or
xchg
ds
lcall
mov
int
pop
leave
adc
lahf
aas
push
and
aas
sbb
loopne
mov
test
jle
push
lods
rclb
and
add
cmpsl
les
mov
sub
sub
xor
dec
fisubs
pop
mov
mov
sub
addr16
arpl
xchg
scas
pop
mov
lret
jno,pt
inc
xor
cltd
xchg
jge
mov
push
mov
sub
inc
scas
push
leave
jbe
divl
inc
test
scas
test
inc
arpl
xchg
ljmp
lret
inc
mov
out
xlat
mov
jecxz
inc
call
in
lods
movsb
cmpsl
push
or
inc
test
out
addb
pop
stc
lcall
rcrb
cmp
jge
push
add
mov
mov
loopne
and
loop
insl
cltd
push
iret
push
jb
jmp
pop
gs
loopne
jnp
popa
lcall
setge
mov
adc
mov
insl
lods
bound
mov
leave
add
add
jnp
push
xchg
test
jae
andb
fstps
scas
and
stos
inc
les
pushf
mull
mov
mov
sub
mov
or
decl
lret
jb
pop
inc
cmpsb
test
mulb
lock
jl
addb
xor
mov
outsl
ret
push
jnp
mov
add
enter
fdivr
test
mov
pop
outsb
jb
sub
jecxz
mov
repnz
stos
sub
bound
iret
std
jle
lret
xchg
out
jle
scas
xorb
cmp
mov
ror
test
adc
push
add
jle
mov
gs
inc
ficoml
out
push
je
test
test
cmp
sub
addr16
aam
cmp
xor
jo
fdivl
jno
sbb
cli
ret
in
nop
cld
cmp
bound
clc
dec
pop
mov
sub
inc
sbb
sub
add
in
ds
insb
test
lods
push
adcl
jle
cmp
jmp
push
sbb
dec
lahf
into
or
jno
or
cmp
lcall
push
outsb
orb
das
into
xor
push
push
addr16
sbb
mov
push
icebp
popa
and
lcall
sti
jns
inc
or
xlat
mov
cwtl
pop
scas
and
subb
sbb
out
cmp
pop
sub
sbb
xchg
or
es
lahf
test
adc
test
or
ret
lods
cmp
cmp
cmpsl
dec
or
fwait
push
out
popf
out
shl
int3
leave
adc
ljmp
enter
xchg
repz
iret
mov
jns
inc
loop
xchg
pop
test
test
outsl
jo
adc
aaa
cwtl
dec
cmp
addb
cmpsl
sbbl
xchg
sub
xchg
sub
insl
jg
mov
cltd
push
aad
or
pop
adc
pop
stos
sbb
mov
lds
sub
das
mov
movsl
out
subps
pop
fsub
testl
outsl
in
push
cmp
rcrb
ljmp
ret
fwait
pop
jg
adc
pop
inc
popa
aas
imul
into
jecxz
push
dec
jecxz
aam
add
xor
mov
cmp
shrb
cwtl
push
test
mov
loop
lret
pop
loop
pop
nop
adc
cmpsb
mov
fs
bnd
add
push
lret
mov
cmp
sarl
mov
aam
in
lret
lock
fstpl
inc
in
or
jge
inc
xor
lock
dec
repz
sub
adc
cli
test
push
outsl
imul
pushf
push
ja
cmpsl
pop
push
fstl
jnp
push
xchg
mov
je
out
pop
addb
pop
push
sbb
push
into
inc
scas
xor
pop
dec
adc
cmc
or
testb
imul
dec
dec
out
insl
push
lahf
mov
aaa
add
mov
lahf
insl
andb
scas
vmovaps
adc
icebp
push
xchg
pop
or
jne
inc
adc
inc
aam
sub
popf
lahf
repz
loope
rcrl
sahf
jmp
mov
mov
sub
pop
mov
lahf
jno
pop
jnp
mov
sbb
repnz
jl
and
sbb
jns
fs
mov
dec
xchg
daa
enter
cmp
enter
clc
test
mov
sarb
add
cmp
insb
fcomip
sbb
sbb
std
xchg
loopne
cmp
mov
push
jge
cmpsb
lcall
pusha
js
and
and
pop
je
pop
mov
loopne
dec
call
ja
loope
mov
sub
jae
lret
and
fdivrs
push
xor
and
pushf
aam
pop
jge
cmc
sbb
in
ljmp
cwtl
add
fisubrl
mov
cld
addl
test
cmp
or
scas
pop
adc
ffreep
mov
aaa
lret
mov
jge
test
icebp
sbb
push
cld
into
inc
orl
pop
sahf
sarb
push
jp
out
jbe
cltd
mov
mov
in
inc
mov
das
rclb
pop
adc
ficoms
addr16
sub
ljmp
xchg
aam
sbb
lods
sbb
mov
dec
mov
stos
xor
stos
add
in
or
sbb
sub
outsb
in
mov
rcll
cmpsl
pop
and
adc
cld
sbb
push
pushf
sahf
adc
sub
and
mov
test
dec
mov
dec
insb
cmp
mov
mov
popa
mov
sbb
testb
test
divb
cmp
lea
and
or
fnstsw
enter
mov
xor
mov
mulb
test
pop
stc
mov
xor
lcall
pop
nop
mov
pop
inc
cmp
popf
push
jecxz
fldenv
out
push
mov
jecxz
daa
loope
jbe
aad
xor
in
mov
xor
inc
jg
sbb
pop
lds
mov
pushf
xchg
mov
shll
adc
sub
daa
std
aaa
out
pop
repz
xchg
inc
pop
push
mov
orb
aam
lea
push
mov
push
ss
das
push
addl
push
inc
or
sbb
mov
cmpl
xor
in
rcl
and
les
clc
mov
loop
sub
adc
cmp
enter
push
xchg
mov
push
mov
pop
sbb
negb
jbe
test
sub
push
push
pop
outsl
negl
push
pop
movsl
pop
mov
and
add
addb
inc
int3
cmp
sub
incb
xor
in
ret
pusha
pop
push
add
sbbb
sarb
or
mov
test
and
scas
jb
mov
cmpsl
rcll
xor
arpl
cwtl
adc
repnz
sub
lods
pop
outsl
push
inc
push
loop
ljmp
es
in
sub
fsts
push
and
jle
jns
cli
xor
sti
pop
insl
sbb
loope
idivl
mov
pop
jg
shll
xor
push
cmp
mov
fdivs
jg
cmpsl
daa
push
out
pop
aaa
dec
and
dec
lods
lea
inc
jge
into
jo
leave
cmp
sbbb
or
dec
iret
dec
sbb
scas
lahf
add
pop
loope
into
bound
xchg
inc
pop
xchg
int
pop
pop
es
icebp
inc
hlt
cltd
fldcw
stc
cmpsl
sub
jne
cltd
sbb
notb
loop
jecxz
sar
int3
fstpl
cmp
sbb
test
icebp
or
adc
fwait
fwait
mov
stos
icebp
sub
sbb
mov
cmpsb
lods
scas
sub
dec
inc
daa
pop
pop
xor
mov
xor
lret
inc
jg
cmc
sbb
dec
popa
xorb
xchg
mov
sbb
mov
je
into
mov
pop
fimuls
cmpsb
push
inc
or
cltd
repnz
enter
jle
test
es
dec
insl
pop
sub
cld
rcll
sub
xor
loop
mov
test
sbb
js
dec
popa
rorb
out
mov
idivb
push
sbb
and
cmp
mov
movsb
cmp
mov
mov
or
aaa
mov
cmp
iret
push
fstl
fs
or
dec
insl
cmp
add
insb
js
out
cmp
imul
mov
pop
inc
jl
cmpsb
ljmp
mov
enter
xchg
and
test
scas
cwtl
and
into
mov
mul
push
push
insb
imul
jns
cmc
push
inc
seto
cld
mov
or
aas
ss
fidivs
add
repnz
jge
scas
andb
sub
stc
adc
repz
sub
xchg
popa
mov
sbb
pushl
les
push
lods
push
mov
shrb
lret
and
xchg
push
int
dec
in
dec
arpl
dec
fsubs
sub
mov
repnz
pusha
pop
ror
cmpsl
or
xchg
imul
fnstcw
inc
stos
jmp
push
aas
jg
mov
add
inc
add
fists
mov
sbb
push
pop
and
data16
add
jecxz
sbbl
test
sti
ds
cld
in
sub
sbb
bound
cmp
outsb
cwtl
movsb
push
add
pusha
lock
notb
rorb
ja
mov
cs
dec
mov
mov
xor
cld
jbe
push
lret
push
xchg
sbb
fistpll
aam
lahf
jmp
clc
mov
adc
test
mov
test
jno
aaa
mov
arpl
fcomps
jp
int
dec
test
testl
mov
rol
jno
clc
xchg
inc
cltd
psubsb
mov
pop
cmp
and
adc
shr
xor
mov
cs
in
and
jmp
cmpsl
pop
mov
loop
cmp
add
lret
gs
addr16
inc
out
mov
out
dec
inc
xor
sarb
gs
xor
pop
ficomps
jbe
movsl
rcrl
sub
adcb
mov
sub
mov
mov
das
add
scas
pop
sbb
inc
ret
sbb
pop
dec
cmc
aaa
outsb
pop
jno
and
mov
clc
shl
ret
cmp
icebp
xlat
je
mov
arpl
enter
sub
jmp
and
adc
lahf
out
lock
or
out
lock
add
inc
es
and
scas
jne
add
inc
sbb
or
js
fisubrl
enter
into
mov
push
sbb
jno
mov
dec
dec
das
jo
and
stos
mov
dec
sub
imul
shrl
lret
cwtl
mov
addr16
mov
fstl
pop
fsubrs
push
cmp
jl
cmp
das
mov
lock
ljmp
push
pusha
lods
xor
movsb
sub
jecxz
iret
imul
fsubrl
dec
and
mov
push
dec
in
pop
les
sbb
icebp
mov
icebp
push
aad
int3
xorb
lret
orl
sbb
inc
adc
stc
stc
or
clts
and
rol
sahf
pop
push
add
and
xchg
mov
cltd
xchg
lock
and
ret
inc
mov
aad
cmpsl
js
outsb
inc
icebp
adc
out
and
add
out
sti
add
jp
cmp
hlt
push
stc
cmc
clc
xchg
lods
sub
std
push
aaa
dec
jp
lret
jecxz
call
sbb
mov
rcl
int3
or
enter
pop
jmp
int
out
xorb
xchg
xor
dec
cmpsb
jne
iret
or
xor
push
inc
icebp
nop
push
imul
fnstcw
xlat
cmp
mov
cwtl
lock
cli
mov
je
jle
cmp
adc
pushf
movsl
adc
outsb
pop
frstor
sbb
cmp
fstl
mov
ret
add
insl
push
daa
dec
adc
or
mov
or
shll
out
stc
push
cmpsb
dec
xchg
or
jnp
sub
xchg
mov
mov
popf
and
or
sub
inc
scas
ja
out
and
pusha
repnz
cmp
fucomi
in
jo
pop
push
lods
mov
inc
or
sub
shll
popf
stos
fnstsw
insl
and
ret
adc
mov
sbb
jne
push
les
push
dec
and
xchg
pop
into
je
scas
adcb
jl
incb
in
jp
dec
sbb
mov
imul
sarb
outsl
fisubrl
sbb
fcmovb
inc
shlb
push
mov
mov
xor
hlt
and
hlt
test
hlt
aaa
insl
and
movsl
mov
shrl
sub
and
add
sbb
mov
fiadds
dec
or
test
adc
and
pusha
push
xchg
and
mov
mov
xor
push
sbb
and
sbb
cmpl
pop
pop
cld
in
ret
ret
or
xor
sub
lahf
lret
or
mov
sub
jmp
xor
adc
push
popf
popf
int3
outsl
iret
dec
sub
sub
push
push
jl
out
inc
mov
mov
sarl
mov
xor
lea
pusha
aam
dec
mov
mov
push
and
pop
mov
mov
imul
add
push
fcmovu
adc
inc
lods
outsb
jge
pop
int3
lahf
popf
std
dec
jb
loopne
xor
add
out
fsub
mov
sbb
std
push
lahf
bound
inc
adc
addb
test
data16
sti
ret
push
shrb
aam
dec
mov
mulb
fwait
pop
mov
ja
and
and
or
adc
test
xor
inc
out
cmpsl
sbb
mov
pop
push
jmp
cmp
jo
shrl
movsb
mov
adc
enter
jae
adc
inc
das
ja
and
push
stos
and
ss
out
in
std
dec
mov
push
out
pop
out
sbb
xor
pusha
xchg
lds
and
inc
mov
pop
jp
inc
push
lods
fwait
aad
push
addb
mov
mov
mov
stos
idivb
sub
or
std
adcb
sub
ds
jl
je
adc
push
xchg
inc
or
push
adc
mov
gs
je
add
cmc
lret
out
jb
adc
xor
mov
leave
jae
fstps
jo
outsb
and
push
repz
subb
add
sbb
ss
ds
cmp
sbb
xor
and
xchg
jne
sub
idivl
hlt
in
jo
movsb
lcall
imul
loope
ja
mov
jmp
sbb
jne
sti
sbb
iret
incb
cmpsl
das
arpl
mov
jb
pop
daa
adcl
and
in
adc
js
iret
js
mov
cmp
lret
mov
sub
daa
cmc
loop
out
pusha
rorb
jg
test
fs
jnp
jge
aad
bound
jecxz
scas
sbb
fiadds
mov
xor
popf
insb
xor
aas
pusha
inc
adc
mov
jecxz
mov
xor
in
jg
scas
mov
notl
jae,pn
dec
pop
in
jne
mov
jns
push
mov
mov
add
ret
adc
stos
in
sbb
ljmp
xor
lock
fistps
lock
lea
pop
jnp
icebp
push
outsb
in
into
push
inc
push
xchg
push
mov
pop
push
dec
jge
shrb
inc
inc
lods
cld
lret
adc
fcmovu
xor
pop
add
shr
mulb
rorb
das
cmp
filds
es
dec
aas
jb
inc
inc
pop
xchg
bnd
shll
mov
rolb
mov
addr16
lcall
or
push
ljmp
loop
punpcklwd
out
outsl
insb
mov
das
xchg
or
xor
sub
hlt
ljmp
cmp
jne
pop
fidivs
into
inc
aaa
daa
call
fdivl
mov
iret
sub
out
ljmp
adc
scas
sarl
push
mov
inc
popa
je
ljmp
mov
subl
fwait
inc
sub
pop
mov
into
add
jo
push
pop
mov
and
mov
or
jl
rolb
xchg
mov
and
ljmp
mov
cmp
and
out
or
xor
lds
pop
fisttpl
in
sbb
ds
mov
lahf
ror
cmp
scas
mov
pop
rolb
mov
loop
dec
mov
jno
gs
jmp
pop
inc
push
push
std
jnp
adc
out
mov
iret
mov
mov
xchg
and
xchg
idivl
les
fdivr
mov
pushf
jnp
inc
add
xor
mov
inc
pop
push
shlb
into
inc
inc
push
sub
add
test
and
in
jbe
xor
mov
xchg
loopne
pop
aam
test
ror
aas
push
sub
add
pop
popa
jle
mov
test
push
lods
or
cmp
leave
mov
popa
cmpl
sbb
xchg
into
gs
jge
and
aad
jae
jge
sbb
clc
dec
mov
int3
xlat
dec
pop
mov
sbb
push
fxtract
ss
push
sbb
test
mov
push
cltd
cli
lea
aaa
push
jp
ljmp
rorl
dec
ror
push
mov
mov
mov
sbbb
dec
adc
daa
cmp
xchg
dec
out
pushf
add
dec
leave
mov
flds
xor
mov
daa
push
fmull
add
xor
and
fisubrs
push
pop
adc
bound
adc
lods
sub
xchg
adc
adc
adc
test
dec
in
push
lahf
enter
inc
xchg
je
ja
loope
test
and
jmp
shlb
xlat
insb
scas
pop
inc
push
and
frstor
das
sbb
mov
push
lods
cmc
sarl
cmpsb
cmp
inc
jmp
dec
inc
cmpsb
push
xlat
inc
mulb
ljmp
mov
hlt
lea
or
xor
int3
jle
mov
jnp
aas
cmp
in
mov
jae
sub
scas
out
nop
and
push
shlb
inc
aad
popa
add
and
xchg
aas
and
sar
rolb
inc
cmpsb
inc
pop
fs
or
adc
cld
jo
sub
roll
int3
ja
push
jmp
aad
data16
inc
sub
adcb
out
hlt
aaa
daa
add
pusha
loop
adc
lcall
xchg
add
fwait
rcrb
aas
add
dec
jno
add
sahf
push
out
mov
adc
iret
mov
lret
jb
movsb
cltd
stos
hlt
mov
sbb
add
gs
pop
pop
sbb
jmp
mov
xor
jae
out
jle
sbb
shrb
add
popa
leave
xorl
sbb
pop
and
or
mov
jb
fs
pop
sbbl
mov
movsl
in
mov
cmp
jbe
nop
rcrb
hlt
mov
push
scas
pop
sub
iret
pusha
push
popf
dec
fcoms
sarl
stos
jbe
test
xchg
out
lahf
xchg
mov
frstor
rorl
push
push
cmp
cltd
lret
adc
inc
and
add
xchg
jp
mov
mov
cld
rolb
cmp
mov
outsb
inc
pop
stos
je
int3
xchg
in
mov
push
ds
rorl
in
sbb
jo
push
rorl
push
movsl
jg
push
jbe
add
add
cmp
cltd
xchg
sbb
lods
mov
loop
pop
imul
loope
dec
in
or
scas
mov
movsl
testl
je
add
pop
in
cli
arpl
dec
and
xor
sub
daa
jle
cmp
or
mov
push
push
repz
je
and
sub
arpl
and
fcmovbe
or
shll
push
xchg
mov
je
fidivrl
lahf
mov
ja
ret
add
lret
fisttpll
test
gs
and
orl
jge
and
lret
add
lock
sub
inc
loopne
cmpsb
cmpl
push
cmpsb
dec
mov
add
fs
add
jmp
mov
dec
shll
movsb
push
inc
sub
sbb
int
movsb
sub
cmp
jge
orl
push
pop
jno
dec
shrl
fwait
adc
pusha
test
or
jne
or
in
cmpsl
rclb
and
stos
in
adc
xor
push
xchg
push
push
xor
stos
push
push
push
mov
jne
imul
mov
repnz
js
pop
shll
int
jp
mov
es
push
imul
outsl
add
loop
sub
stos
ret
lock
lret
xchg
insb
add
inc
mov
fucomip
xor
mov
and
mov
adc
cmp
sbb
jo
dec
or
movsl
scas
cmp
sub
push
add
mov
add
pop
in
gs
popf
in
and
pop
or
inc
mov
mov
pop
add
or
jb
sbb
add
dec
dec
pop
inc
sub
dec
add
mov
mov
mov
es
xchg
cmp
mov
jb
fists
jp
inc
xchg
sbb
js
push
ds
gs
fs
mov
int
test
nop
and
pop
imul
adc
push
cmp
mov
push
in
cmp
shll
sub
xchg
and
sub
adc
xor
shll
push
in
pusha
pop
pop
shlb
cli
repz
sbb
fisubl
and
xchg
loope
out
notb
xchg
sti
adc
mov
clc
nopl
popf
jmp
inc
or
inc
scas
call
sbb
xor
out
inc
in
pop
out
test
cli
fnstcw
mov
sbb
aam
or
xchg
jno
das
jo
daa
push
loop
xchg
cmp
ljmp
imul
cmp
dec
cmc
lret
push
bound
inc
ret
jecxz
loope
and
jb
bnd
cmpsb
test
outsb
fnstcw
cwtl
mov
and
test
sbb
jno
jmp
scas
jae
sar
fildl
xchg
fcoml
ret
ljmp
lcall
inc
jle
xor
sbb
mov
pop
cmc
sub
outsl
push
popa
dec
mov
imul
repz
cmp
jo
aaa
mov
dec
add
hlt
push
fcomps
into
pop
jecxz
pop
rorl
adc
dec
stos
out
push
inc
mov
xchg
xchg
adc
scas
subl
testl
addb
pushf
push
dec
jnp
movsb
sarl
sti
mov
pop
xchg
xlat
aam
cltd
jmp
adcl
cmp
stos
dec
push
repz
sti
icebp
and
sbb
inc
ja
stc
xchg
insb
jns
or
repnz
pushf
flds
push
cmpsl
push
mov
repz
ret
imul
aam
mov
inc
sbb
lret
pop
scas
enter
repz
pop
es
stos
outsb
jg
mov
int3
jg
arpl
lret
cmp
rorb
mov
loope
lret
dec
enter
pop
es
jbe
mov
popa
xchg
dec
cmpsb
pop
outsb
mov
cmp
shrb
jmp
out
jo
repz
and
adc
mov
imul
dec
roll
xor
add
dec
out
cmpsl
cwtl
cltd
mov
inc
into
movsl
push
dec
repnz
outsl
jae
inc
ds
rorl
outsb
bnd
dec
pop
shl
pop
jle
adc
or
xchg
lea
mov
outsl
leave
mov
int
add
jp
test
mov
adc
andl
and
xor
sub
test
enter
sub
shll
or
ret
lock
outsl
mov
add
insb
mov
xor
in
sbb
sbb
lds
pop
hlt
je
icebp
cmc
outsl
cmc
test
cmp
mov
fcomp
loopne
lods
aam
lea
push
cld
iret
shlb
pop
iret
sbb
pop
xchg
mov
aad
ret
addl
jg
pop
jg
mov
andb
xchg
pop
inc
inc
aam
push
movntps
ja
fcmove
push
dec
popf
mov
ds
mov
cs
jnp
test
jle
enter
or
test
cmp
loop
cmc
add
adc
out
xchg
adc
or
pop
fidivs
xor
jmp
daa
push
iret
in
inc
jl
push
or
fidivs
mov
shlb
mov
jae
push
insl
mov
test
lods
cmpsl
and
out
pop
inc
lea
lret
add
jp
je
lock
mov
sbb
or
leave
jns
cmpsl
fcmovne
stc
hlt
mov
mov
mov
test
add
cmp
scas
pop
mov
sbbl
cmc
and
xchg
stos
cltd
jmp
dec
inc
and
dec
dec
inc
cltd
sub
pop
int3
test
imul
jmp
mov
adc
repnz
test
stc
xor
lods
or
mov
xor
aas
insl
or
and
inc
dec
mov
ss
xchg
mov
stos
loop
and
push
jns
inc
cld
dec
mov
icebp
bnd
ljmp
push
adcb
mov
push
jo
adc
mov
test
jg
fdivrs
out
xor
xchg
fmul
dec
scas
popa
inc
mov
adc
rcrb
cmpsb
and
dec
xchg
lcall
pop
jb
fistl
cs
shl
out
jbe
cld
xor
test
lds
nop
cwtl
or
ja
mov
pop
jecxz
shrb
ss
adc
xor
clc
and
xor
fsubl
jbe
push
lods
sbb
cs
inc
sbb
pushf
add
add
repnz
dec
dec
es
jg
test
jo
jge
pop
mov
cmp
sbb
push
das
sbb
xor
repz
pop
or
mov
push
xchg
sbb
mov
and
movsl
pop
mov
xor
outsl
lret
popf
loope
push
sub
int3
push
adc
sub
jmp
xor
jbe
lahf
pop
hlt
cmovnp
adc
mov
push
pushf
push
aad
xor
repz
mov
jle
cmpsl
scas
cmp
cmpsb
lcall
sti
lock
jmp
xor
subl
sub
push
xor
mov
iret
mov
jle
mov
xchg
mov
xor
inc
cmc
sbb
and
mov
mov
pop
mov
adc
je
jb
or
sahf
jns
inc
pop
bound
push
sub
push
ud1
std
xchg
inc
mov
fistpl
cmpsl
fldenv
push
mov
xchg
out
and
sub
fs
cmc
bound
clc
push
add
gs
xchg
daa
std
pop
add
push
mov
popa
mov
jne
sub
or
lds
pop
mov
jbe
stos
jno
push
sbb
jmp
push
into
pop
lahf
cli
push
aas
clc
repnz
out
pop
insb
shll
push
loopne
mov
scas
sbb
repz
mov
dec
mov
imul
fldl
cmp
mov
into
fstpl
sub
mov
pop
inc
das
out
out
mov
popf
or
mov
jmp
xchg
cmp
push
loope
daa
out
clc
inc
out
push
xchg
daa
and
repz
dec
in
push
loopne
mov
js
mov
test
call
shrb
mov
sbb
add
jo
mov
sbb
push
pop
adc
push
mov
or
fwait
mov
push
pushf
add
push
dec
jns
xor
jmp
xor
fstpl
xchg
dec
fstl
das
in
loope
mov
and
out
xor
xchg
sub
pop
jmp
mov
and
ja
push
xor
ret
mov
inc
jp
lret
repz
dec
enter
cs
mov
mov
or
out
int
test
ds
fs
clc
fstpt
and
or
mov
and
sub
pop
cmpsb
roll
pop
mov
test
push
call
roll
pop
ljmp
sub
sbb
add
test
cmc
jge
pop
adc
jb
or
fs
std
gs
and
cli
mov
adc
ret
add
std
cmp
out
lods
cmp
dec
fsubs
ficompl
sar
xchg
in
fwait
pushf
sbbb
and
jle
cmpsb
xchg
add
cmp
push
je
idiv
mov
xchg
loope
dec
jne
repz
rorb
lock
jl
inc
and
ljmp
std
test
or
popa
adc
std
gs
jl
and
and
imul
incl
into
repnz
push
testl
or
pop
inc
cltd
js
xor
dec
fidivrl
cmp
or
pusha
leave
jae
xchg
add
test
pop
mov
mov
push
push
dec
dec
mov
sub
out
xor
inc
cmp
mov
sbb
push
iret
or
scas
iret
stc
mov
fildll
jbe
out
or
fnsave
aas
mov
or
mov
ja
in
clc
mov
std
or
lods
inc
inc
call
xchg
arpl
xchg
cmp
mov
mov
cmp
sub
cmp
jl
lock
sahf
mov
push
ret
xchg
int
pop
lds
and
outsb
adc
test
dec
into
mov
fsubs
dec
lods
mov
jne
test
pop
movsb
movsb
movsb
sbb
call
mov
insl
pop
mov
mov
mov
fisubs
mov
ljmp
mov
or
xchg
iret
mov
cmp
mov
adc
stos
mov
sbb
jne
push
sub
nop
sbb
cmp
jne
jae
lods
inc
sarl
fstpl
pop
and
lock
mov
push
jno,pt
test
shr
outsl
pop
cmp
out
mov
fs
mov
and
xor
aaa
addb
cmp
out
lock
divl
lods
cmpsl
push
push
push
add
aam
mov
fldcw
xor
mov
push
adc
cwtl
jne
int
test
outsb
push
inc
hlt
popa
xor
cmp
mov
mov
jbe
mov
ss
push
enter
dec
rorl
pop
sub
add
adc
mov
sub
das
rcl
lock
stc
daa
jmp
push
add
lods
aad
and
mov
xor
cmp
es
mov
idivb
scas
repz
pop
mov
ror
sahf
jo
pop
aam
and
sub
xchg
ffree
test
loope
push
or
pop
shr
or
pop
pop
add
push
lret
sub
lahf
sub
test
and
jbe
shrb
test
pop
lods
loopne
pop
lods
or
and
mov
adc
pop
dec
inc
scas
out
cli
sub
pop
lahf
ficomps
ds
lock
mov
enter
fs
push
addr16
loope
mov
int3
pop
sub
bound
insl
out
outsb
mov
cwtl
or
jae
inc
repnz
sbb
inc
icebp
xchg
pop
shll
mov
testl
test
adc
scas
adc
pop
ja
mov
sbb
mov
in
pop
mov
pop
in
into
mov
or
ljmp
rcl
out
push
mov
lock
ret
icebp
or
shlb
iret
sarb
sbb
add
aaa
mov
sahf
xchg
inc
test
mov
and
xchg
loopne
or
jbe
adc
xchg
in
fucom
adc
les
and
sbb
cli
jnp
mov
mov
xchg
cmp
or
stos
push
test
lret
cmpsl
push
xchg
daa
sbb
pop
fiaddl
jp
out
les
sub
push
fbstp
jecxz
nop
and
cmp
add
pop
mov
shlb
sti
repz
outsb
mov
cmp
jb
das
iret
pop
ljmp
inc
or
dec
xchg
das
orl
xor
sti
jmp
pop
pop
cmc
das
sbb
stos
fisubl
xchg
loopne
xchg
mov
or
sub
inc
test
jae
imul
adc
adc
push
or
rclb
push
pop
xchg
enter
fcmovu
out
ljmp
pop
sub
mov
push
or
push
push
add
das
inc
or
mov
adc
mov
mov
cmpsl
jbe
jmp
push
sbb
mov
mov
pop
mov
jne
cmpl
sub
das
inc
pop
jnp
push
cmp
pop
dec
call
cmpsb
xchg
adc
push
test
cmp
test
lahf
lcall
lods
ja
lcall
stos
ds
jmp
repz
orl
add
sbb
dec
adc
xchg
repz
mov
jae
jne
or
imul
mov
push
push
or
shlb
dec
and
sub
les
call
cmp
neg
jg
cmp
loop
loop
insl
addl
sahf
sbb
ja
mov
push
fidivl
mov
mov
mov
or
fdivl
ja
in
sarb
lret
negb
jl
pop
add
pop
cmp
fisttpll
pop
mov
mov
div
ret
adc
mov
xor
lahf
adc
nop
cmc
out
push
mov
dec
rcl
cmp
cmp
mov
xchg
jp
ja
cmp
mov
xchg
push
sub
cmp
and
lds
je
scas
xchg
pop
ja
and
push
sub
xor
sbb
sub
fptan
call
mov
jmp
es
xorb
stos
mov
mov
out
jg
xchg
lret
and
jp
push
pop
cld
mov
loop
dec
jecxz
call
sbb
call
stc
ret
mov
jmp
lea
jecxz
es
ficoml
mov
xchg
lahf
adc
or
xor
stc
mov
insl
outsb
add
lock
sub
push
push
imulb
cs
jp
repz
sbb
dec
cmc
sub
adc
stos
add
and
pop
mov
push
popf
mov
inc
jp
out
shlb
or
nop
pop
add
jnp
push
daa
jecxz
mov
clc
movsl
scas
sbbb
lea
fbstp
roll
movsb
push
xchg
rolb
jns
std
jnp
lret
adc
arpl
mov
test
ret
push
js
dec
push
pop
mov
mov
aaa
lds
jne
sbb
pop
fidivl
sub
movsb
movsb
sarb
add
mov
fdivs
mov
sahf
sbb
pop
sub
sub
dec
cmpsb
push
cmp
inc
inc
scas
push
mov
pmullw
push
add
adc
xchg
mov
mov
test
inc
pushf
jp
bound
sti
mov
add
jo
out
aad
lret
mov
jbe
pop
repnz
sbb
mov
inc
loop
inc
mov
jg
daa
add
std
ljmp
fidivl
in
cli
adc
jnp
push
imul
and
outsl
sarl
repz
push
popf
shlb
loop
aam
or
pop
push
test
bound
xlat
push
push
push
mov
dec
sbb
ss
out
mov
mov
loop
insb
inc
arpl
nop
aaa
sbb
pop
sub
insl
lds
adc
jp
push
dec
imul
pop
and
gs
mov
sub
in
lret
cld
mov
add
ja
idivb
scas
pop
cmp
lods
in
sub
sahf
push
outsl
pop
sub
sub
sbb
out
dec
jge
stos
mov
inc
jl
pop
fisubrl
rcll
cmc
gs
hlt
cmpsb
loop
pop
add
dec
push
shlb
stos
pop
mov
std
lock
arpl
mov
mov
dec
xchg
and
sub
push
data16
push
lcall
cwtl
push
lods
mov
lock
sbb
and
fwait
pop
add
push
mov
es
xchg
push
rcll
cmc
pop
jnp
push
lock
sub
bound
inc
imulb
pop
std
cmp
xor
push
inc
stos
mov
leave
out
mov
ja
sbb
andl
outsb
inc
push
pop
in
data16
dec
and
cltd
mov
test
sbbl
shll
rcrb
out
push
lods
lds
xchg
pop
or
arpl
push
cmp
in
mov
inc
sti
rcr
test
mov
inc
call
mov
push
icebp
shll
jle
jl
mov
in
cli
push
out
add
xor
shlb
rorl
stc
pop
leave
cmp
test
cmp
jnp
test
add
jp
jmp
lea
movsl
scas
jl
inc
insl
mov
jo
repz
add
sub
or
or
push
mov
jge
iret
aaa
in
xlat
test
andl
pop
xchg
scas
push
adc
arpl
lods
jns
maxps
adc
xor
push
add
adc
subl
sahf
mov
push
sub
cmpsb
sub
jg
imulb
xchg
call
adc
cmpsl
or
jnp
jno
xor
data16
mov
cmp
pop
cmp
gs
daa
mov
adc
ds
addl
pop
add
jne
popf
and
jo
fs
ss
outsb
clc
jno
or
add
loopne
cli
inc
mov
and
gs
add
fwait
cmpsb
cli
pop
call
popl
cmpsb
lret
inc
mov
xchg
add
movsb
cmpb
push
gs
dec
add
daa
mov
fmuls
sub
sbb
push
dec
aad
jo
hlt
push
xor
pusha
jnp
loopne
sub
sbb
iret
mov
imul
call
repz
test
sbb
rorl
insb
inc
inc
cmpsb
mov
cmp
movsl
mov
test
xor
pop
andl
mov
inc
out
push
shl
xor
andb
out
push
lret
mov
inc
call
pop
push
mov
in
and
pop
jl
jns
mov
adc
fwait
imul
inc
stos
mov
sbb
bswap
std
mov
cmp
icebp
neg
sti
jno,pn
pop
loope
hlt
sbb
mov
in
idivb
adc
shrl
dec
rcrl
inc
sbb
cmpsb
xorb
js
mov
test
sarb
hlt
or
add
nop
push
mov
mov
jo
fisubrs
add
pop
mov
pop
jg
and
jl
xchg
add
repz
ljmp
or
mov
jb
ret
sub
mov
xor
or
sbb
sbb
mov
xchg
sbb
sbb
imul
ljmp
mov
in
pop
les
and
lcall
inc
adc
sub
pop
lods
aaa
pop
fnstenv
int3
in
dec
out
adc
mov
mov
mov
mov
shl
ljmp
sub
inc
mov
test
xchg
xor
movntps
movups
adc
pop
aam
fsts
je
ss
test
inc
cmc
mov
ss
int
or
sub
push
push
fimuls
sub
mov
mov
mov
leave
xchg
pop
test
rclb
enter
imul
jb
test
mov
xor
frstor
stos
sub
cli
push
ret
push
and
sbb
lods
repnz
lea
cmp
jl
ljmp
rorl
aas
mov
lcall
dec
jnp
adc
pop
add
mov
fidivl
cmp
popl
sbb
inc
inc
push
pop
ljmp
repnz
and
xchg
ds
jb,pn
sbb
jne
iret
jb
aas
cli
sbb
xchg
sbb
popf
fs
xchg
call
add
pop
push
sbb
test
add
add
andl
xchg
aaa
jp
push
sahf
fmuls
bswap
sahf
repz
push
pop
xchg
sbb
dec
je
xchg
cmc
xor
adc
stos
add
jnp
es
hlt
sub
cmc
jl
or
in
dec
loopne
pop
sahf
mov
mov
push
sub
dec
jecxz
lcall
rcr
or
push
push
in
xor
adc
loopne
pop
xchg
mov
and
rclb
sahf
mov
sub
push
push
mov
push
popa
push
fiadds
stos
jg
movsl
lahf
jne
mov
jae
push
or
cvttps2pi
mov
stc
or
adc
or
sbb
cld
adc
or
or
push
ja
jb
roll
or
sti
pop
mov
aam
and
add
imul
sahf
sbbb
pusha
popa
jge
jno
xor
mov
sbb
inc
out
repz
out
mov
in
or
lods
dec
sahf
jns
in
push
xor
cs
mov
push
mov
dec
fwait
bound
fsqrt
dec
bound
lahf
shll
and
dec
pop
insl
sub
sub
fdiv
and
or
dec
xchg
out
push
and
push
push
aad
pop
xor
pop
xlat
sub
xchg
mov
outsb
aas
ret
or
xlat
stc
nop
xor
int
stos
jnp
lds
and
jmp
xchg
xchg
adc
jmp
in
out
pop
push
push
pop
mov
test
movsl
movsb
dec
xchg
pop
test
mov
sub
and
jae
xchg
jle
mov
or
dec
lods
scas
gs
or
mov
daa
dec
and
mov
jnp
add
jae
cmpl
xchg
stos
dec
lods
jp
arpl
push
outsl
push
mov
stos
outsl
rcrb
pop
lahf
add
add
jecxz
mov
mov
fistpl
icebp
das
iret
adc
shll
mov
and
lahf
lahf
hlt
cmp
sbb
out
das
jo
pop
mov
pop
pushl
sar
dec
push
push
mov
in
push
inc
mov
stc
mov
sbb
mov
pop
adc
jb
xchg
xchg
mov
jo
mov
push
rclb
daa
sbb
or
jbe
mov
scas
arpl
icebp
rcrl
jmp
call
pop
sbb
jo
xor
lods
arpl
outsl
mov
std
push
dec
pop
idivb
sbb
mov
dec
repnz
stc
cmp
xorb
mov
and
dec
and
iret
inc
les
ret
leave
outsb
and
dec
sub
xchg
dec
mov
loop
or
outsb
jae
repnz
pop
enter
push
add
sarb
sbb
pop
sbb
ja
hlt
cmp
and
movsb
dec
mov
scas
fcoml
push
jne
aam
loope
rclb
dec
pop
cmc
mov
mov
and
ja
xor
jo
out
add
push
fimuls
mov
lea
arpl
or
fwait
pop
xchg
xor
ljmp
iret
flds
mov
sbb
jae
mov
out
jecxz
mov
xor
cwtl
adc
test
adc
jg
pop
add
data16
cwtl
add
in
sub
mov
jno
xchg
xchg
push
call
push
fstpt
pop
push
sbb
xor
jbe
ss
out
jno
pusha
jo
je
in
movsl
add
dec
sbb
andb
stos
mov
pop
add
mov
aam
inc
pop
or
les
daa
inc
mov
aas
xor
pop
cmp
xchg
jo
adc
movsl
bound
shl
xor
jne
cmc
mov
fimuls
aas
out
inc
mov
roll
inc
xchg
rcrb
pop
jno
xchg
daa
out
push
mov
cmp
jb
inc
inc
inc
gs
adc
dec
mov
in
mov
into
les
lods
cmc
cli
loop
lock
xchg
test
mov
fistpll
or
mov
lret
popa
push
xchg
daa
mov
xor
mov
sbb
call
test
or
push
into
scas
dec
jl
stos
jp
cmp
pushf
sub
push
jle
sub
or
fstl
andb
push
xchg
jle
lret
add
adc
cltd
add
lods
push
pop
movsb
add
mov
lods
add
rcrl
test
jl
adc
xor
scas
sub
or
push
test
shrl
mov
adc
dec
sarb
ljmp
sub
es
pop
popf
repnz
in
push
cltd
sbb
mov
push
lds
xchg
xchg
repnz
repnz
mov
cmovle
mov
mov
iret
xor
push
pushf
stc
push
pop
xorb
xor
cmp
negl
aam
js
xchg
les
dec
fldl
je
shlb
mov
loop
pop
clc
xlat
outsl
test
xor
into
xor
enter
adc
test
mov
sub
pop
dec
mov
adc
ss
sti
rolb
movsb
out
pop
pop
xchg
cs
adc
mull
xchg
push
mov
rcrb
push
pop
xchg
fldl
or
sahf
inc
sarl
add
inc
or
pop
mov
add
dec
jne
jae
inc
int
int
or
mov
xor
mov
dec
pushf
push
call
inc
jns
push
xchg
cmpsl
cwtl
xchg
ret
cmpsl
xlat
imul
std
inc
mov
inc
lret
xlat
rol
test
pop
xchg
sbb
mov
sub
fwait
test
nop
add
xchg
popf
loope
and
or
je
lcall
bound
idivl
cwtl
mov
in
mov
test
dec
jne
adc
mov
push
mov
je
dec
or
mov
xor
add
sbb
lahf
push
bound
jg
sbb
add
xchg
xchg
dec
jae
pop
ret
sbb
fucom
int3
mov
mull
sbbl
insb
cwtl
sbb
popf
push
push
pop
jmp
push
test
and
fstpl
push
sub
aam
xor
xor
les
loopne
fldt
xor
fnstcw
cmp
andb
fidivs
lret
shlb
jmp
sub
mov
cmp
mov
xchg
xchg
jo
cmpsl
inc
ret
add
pop
inc
pop
inc
andb
lahf
cs
orl
xchg
mov
pop
mov
mov
in
push
nop
out
bound
jmp
call
aaa
pop
mov
out
push
fistpll
dec
mov
sub
xchg
fnstenv
aam
xor
mov
push
inc
imul
and
pop
testl
or
rclb
jecxz
and
lret
cltd
cmp
jp
mov
jae
arpl
insb
out
add
push
ljmp
aaa
sub
push
in
stc
pop
sbbb
scas
lock
div
jne
mov
in
jo
cli
addr16
or
insl
pushf
aaa
adc
loope
test
xchg
jmp
out
add
mov
pop
in
cmp
scas
sti
dec
jae
int
andb
fs
aaa
mov
out
addb
sbb
imulb
sub
push
lds
push
xor
xchg
rorl
ret
test
jnp
in
and
xor
lret
cmp
lock
loopne
call
in
mov
push
jp
xchg
je
stc
and
push
out
pop
or
popa
push
ss
shll
lock
lahf
mov
cmp
jg
pop
or
je
or
loopne
inc
jge
jne
add
pop
stos
sbb
xor
add
mov
pop
out
clc
mov
sub
test
outsb
push
loope
pop
shlb
mov
shlb
test
out
push
jmp
mov
mov
daa
scas
pop
pop
dec
mov
inc
and
mov
stos
setne
sahf
ret
mov
scas
dec
jg
pop
xchg
repnz
testb
lods
mov
mov
mov
gs
icebp
bound
or
cmpsl
pop
adc
scas
mov
lcall
pusha
inc
xchg
and
jmp
loop
mov
adc
ret
cmpl
add
add
jbe
jno
inc
mov
cmp
sbb
lods
das
jmp
mov
lods
nop
xchg
or
ljmp
cmp
mov
jp
jbe
pop
test
icebp
cmpsb
pop
scas
pop
lds
loop
jl
sbb
sub
mov
xor
push
push
nop
and
mov
hlt
mov
rcrl
push
rorl
add
sbb
pusha
test
lods
mov
inc
pop
mov
sub
add
jns
xchg
fidivrl
lahf
out
ds
mov
mov
push
jnp
cli
mov
sbb
adc
out
xchg
xchg
subb
cmpsl
pop
stos
mov
in
in
jns
cltd
mov
rol
fsubrp
adc
add
rcll
adc
jns
test
mov
imul
xor
aad
mov
fistl
adc
aam
ljmp
aam
or
inc
lret
xchg
lock
movsl
rorb
or
xor
lods
ror
ror
pop
jmp
das
jecxz
dec
test
pop
jle
cmp
lahf
outsb
test
insb
jle
jmp
cmp
lods
cli
into
sbb
std
das
sbb
pop
out
pop
xor
enter
inc
xchg
shrb
leave
mov
fcmovb
lcall
and
sbb
xchg
pop
addr16
out
gs
call
mov
pop
pop
adc
mov
rcrl
add
mov
ror
std
pushl
sbb
cltd
sub
cwtl
mov
xlat
add
inc
push
inc
cmpsb
adc
pusha
adc
lcall
ror
stos
loop
xor
cmp
xor
decl
jl
mov
and
std
fldt
repnz
mov
cltd
inc
pop
pop
inc
push
adc
mov
in
cmp
loop
and
popf
jp
mov
fsts
test
adc
and
sar
mov
jl
jmp
pop
mov
cmpb
sti
fstpl
pop
repnz
lods
xchg
push
scas
cmpsl
or
nop
xchg
lock
add
pop
mov
inc
inc
cld
push
stos
aas
shrb
mov
mov
sahf
or
sbb
xorl
rolb
loope
repz
push
movb
adc
lds
mov
or
in
or
sbb
outsb
test
das
mov
mov
dec
das
cltd
std
nop
dec
sahf
hlt
dec
shrb
fnstcw
xchg
xor
jns
jle
add
xchg
xchg
jp
outsl
pop
lods
mov
cld
movsb
inc
ret
lds
pop
jmp
movl
push
leave
xor
and
enter
cwtl
out
pushf
das
mov
adc
cmp
adc
sbb
jns
mov
mov
and
push
cmp
mov
imul
js
cli
lds
cmp
sub
rorb
pop
imul
movsl
aad
mov
or
xchg
sbb
cmp
xchg
arpl
mov
aam
sbb
xchg
jecxz
aam
sti
cmp
fisttps
dec
test
push
mov
jo
or
daa
xor
add
add
xor
mov
xor
pop
or
cli
cltd
xchg
push
les
adc
ret
push
jle
lea
cmp
repz
mov
hlt
out
sub
daa
jl
xchg
mov
fwait
sub
jno
cltd
sbb
aaa
mov
mov
cli
jae
adc
pop
dec
loop
push
cmp
jno
mov
dec
imul
xchg
sarb
inc
sbb
or
pop
arpl
outsb
adc
mov
xor
in
ficomps
adc
popa
mov
ret
test
add
rcll
stos
push
mov
les
fdivp
jge
mov
hlt
daa
psubd
push
mov
pusha
addr16
icebp
adc
and
add
call
lea
fsubr
push
insb
adcl
rorb
push
out
inc
lods
lahf
rorb
and
rcl
push
loope
add
shll
xor
pusha
sub
cs
and
xor
push
cmpsl
adc
mov
jns
rcrl
mov
mov
imul
cld
sbb
dec
std
pop
ret
stos
inc
cmp
push
xor
jl
imul
mov
ljmp
jge
xchg
jb
mov
mov
mov
sbb
add
mov
sbb
ret
mov
fadd
mov
and
cmp
insl
movsb
loopne
testb
fmul
dec
sub
aad
lahf
adc
push
pop
xchg
loope
xor
fldenv
and
into
mov
out
and
je
nop
in
or
dec
push
xchg
inc
cmp
les
jnp
in
test
push
loopne
in
stos
int3
mov
ja
jg
fnstenv
pop
cmpsb
push
add
insl
sarb
jo
xlat
cltd
sbb
mov
out
push
mov
stc
mov
daa
cmp
cwtl
pop
xchg
fisubrl
xchg
push
dec
out
sbbl
sbb
mov
and
cmp
repnz
xchg
mov
shll
mov
xchg
in
jge
ss
and
aas
stos
rclb
pop
dec
jmp
push
sbb
fldcw
clc
xchg
add
inc
jo
subb
ret
aad
cli
std
mov
mov
sub
hlt
push
int
xor
cli
imul
js
add
dec
cwtl
lea
fmuls
dec
inc
test
outsb
ds
leave
jl
ja
in
lods
insb
dec
or
xchg
scas
jmp
jo
imul
into
sbb
sahf
test
roll
negl
push
lea
push
cltd
push
xchg
gs
adc
inc
pop
imul
subb
aad
cmp
push
mov
test
xchg
xor
fadd
sub
mov
cmp
xorb
imul
lret
cmp
repz
push
stos
mov
mov
aas
lods
sahf
sub
xor
jge
add
and
sbb
mov
pushf
or
mov
push
pop
and
push
out
pop
jne
adc
scas
bound
xor
inc
jno
shll
xor
push
jbe
add
add
sahf
enter
push
inc
cmp
dec
sarb
repnz
mov
jp
jle
scas
popa
daa
sub
and
es
add
jae
dec
mov
shll
pushf
loopne
mov
fwait
push
popa
adc
inc
pop
leave
cmp
icebp
lds
in
dec
std
inc
add
mov
loope
mov
adc
inc
test
fstpl
clc
push
adcb
stos
loop
push
sbb
mov
and
loopne
pop
adc
pop
jl
push
xchg
add
repnz
rorl
fimull
dec
pop
xchg
insl
push
shlb
pop
out
push
out
and
out
imul
fdivrs
jbe
test
cmp
ret
pop
pop
lock
out
repnz
inc
xchg
sub
shlb
pop
sbb
sbb
cltd
dec
sbb
ja
sbb
push
xchg
lds
ds
aaa
repnz
pop
rol
out
scas
les
pop
sub
pop
jge
lret
fnstsw
out
adc
and
cltd
insl
ret
pop
dec
mov
jge
scas
sbb
not
loop
lret
push
bound
loopne
shlb
std
mov
dec
jno
aas
lcall
xor
push
data16
rcrb
mov
gs
xorb
adc
and
loopne
les
decl
imul
test
test
push
in
jle
push
test
es
fsubr
sbb
dec
popf
test
mov
test
fcompl
movsb
test
shlb
test
aad
cmpsb
cltd
ja
outsb
jmp
clc
jmp
push
aaa
scas
ret
es
popa
dec
push
inc
inc
sti
mov
xor
ljmp
push
in
dec
or
std
adc
sti
sub
imul
mov
enter
sbb
lea
mov
xchg
incl
and
jns
inc
inc
sbb
loop
xchg
jle
fdivrl
in
insb
rcrl
mov
mov
fucom
jecxz
int3
roll
fwait
inc
cs
into
push
inc
movsl
mov
fwait
push
jnp
xchg
sbb
or
pushf
jecxz
or
cmp
xchg
outsb
pop
or
jbe
test
pop
and
cmpsl
mulb
dec
lret
aad
pop
cmp
mov
sub
mov
shll
jp
test
add
cmovs
pop
stc
pop
mov
push
shlb
xchg
lods
imul
frstor
cltd
mov
adc
xor
pop
cmp
cmp
iret
mov
repz
test
lock
mov
cld
mov
mov
sub
cmc
pop
xchg
add
adc
scas
pusha
ds
mov
or
sbb
ja
xor
lcall
xchg
scas
mov
mov
sub
arpl
mov
icebp
xor
mov
outsb
xor
add
ljmp
cmp
add
enter
imul
push
ret
aad
lds
lds
popa
loopne
jecxz
sbb
pop
xor
or
cmp
jno
xchg
cmpl
mov
xchg
push
dec
iret
xor
sbb
and
inc
insb
push
insb
sbb
icebp
pop
incl
xchg
das
idivl
loope
jnp
xor
mov
call
cmp
sub
jmp
pushf
shll
adc
xor
push
dec
or
jmp
mov
mov
jmp
mov
test
mov
and
xchg
les
mov
lods
xor
cs
push
hlt
ljmp
mov
testb
jae
out
or
adcb
inc
in
data16
cmp
push
daa
lret
test
adc
and
scas
gs
aam
adc
jg
or
pop
arpl
fdivrs
jnp
push
jno
cmp
adc
out
shrb
scas
lds
mov
xor
test
xchg
sbb
out
cmp
lahf
jg
movsl
shrb
mov
jl
mov
repnz
sbbl
pushf
lds
loope
fs
ds
lods
icebp
sub
movsl
and
test
add
adc
sti
les
stos
inc
sbb
cs
out
add
in
mov
inc
cmpsb
sbb
and
inc
mov
roll
push
push
rorl
jne
ret
cmp
in
xchg
mov
xchg
imul
leave
cs
mov
push
ret
std
ljmp
roll
mov
inc
push
push
dec
loop
jmp
insl
loope
xchg
add
add
cmpsl
or
xor
popf
in
jl
and
cmp
cmp
mov
hlt
mov
jnp
fdivs
cli
or
xor
loope
shl
faddl
dec
fmul
jp
inc
sbb
mov
and
mov
lret
fistps
data16
repz
cli
iret
mov
xlat
fiaddl
imull
ljmp
shrb
inc
cmpsb
dec
stc
dec
aas
mov
or
or
jl
imul
add
jl
pushf
pop
scas
sub
push
test
stos
ds
add
mov
andl
sub
mov
test
xchg
xchg
xchg
inc
and
repz
push
dec
fdiv
sbbb
stos
clc
push
lods
or
mov
cmp
mov
or
mov
or
push
repz
xchg
inc
push
or
out
push
aad
addr16
xor
jo
je
fs
add
push
inc
std
repnz
jge
jecxz
daa
inc
stos
mov
xchg
pop
icebp
xchg
test
jmp
pop
mov
call
inc
jle
ljmp
test
adc
ret
jnp
cmp
insl
or
inc
repz
repz
jnp
aas
popa
push
pop
inc
mov
inc
pop
sbb
push
mov
cltd
test
iret
je
bound
std
das
pop
sbb
add
fst
add
dec
cli
lahf
xchg
push
addl
cmp
xchg
mov
movsl
lods
aas
inc
addr16
scas
jno
addr16
push
aam
add
cmp
int
iret
add
out
push
xchg
xchg
inc
lea
mov
bound
xchg
out
fsubl
test
leave
push
dec
jge
iret
adc
mov
mov
ret
sti
shl
mov
shll
insb
cmpl
xchg
or
loopne
hlt
or
lea
dec
test
mov
mov
test
cmp
or
push
ds
ret
stc
sbb
into
sub
push
jmp
popf
lods
test
jl
mov
sar
push
int3
ljmp
jg
push
in
add
cmp
scas
mov
push
fisttps
fldcw
cli
jb
stos
test
movsb
rcrl
repz
add
out
outsl
in
ss
mov
and
dec
imul
jmp
push
loope
mov
cmp
in
xor
movl
pop
and
cmp
repz
cmp
lahf
mov
ss
dec
lods
and
xchg
pusha
sarb
loope
sub
xlat
push
test
repnz
fisubrs
pop
push
aad
fnstenv
add
push
icebp
xor
cli
mov
pop
sub
jl
loopne
mov
in
and
jo
out
push
jle
les
popa
pusha
fistps
mov
or
mov
push
lret
callw
xchg
lret
mov
xor
mov
mov
sbb
fwait
lds
add
test
mov
gs
xor
xchg
out
ja,pt
loopne
sbb
in
push
icebp
mov
xchg
xchg
sub
test
adc
pop
fwait
sbb
cmpb
inc
xor
sub
sti
int
test
cmp
repz
mov
out
cmp
dec
into
dec
je
xchg
in
and
lock
jle
jae
mov
pushf
repnz
fisubl
movsl
mov
pop
popf
jb
mov
pop
shlb
mov
outsl
mov
pusha
jnp
adc
cli
pop
in
icebp
push
lcall
xchg
lods
jo
xor
loopne
in
sbb
pop
aaa
in
popf
outsl
jbe
sbb
mov
mov
push
add
repz
sti
jo
imul
push
fnstsw
mov
imul
add
aam
lds
add
in
into
mov
fildll
aad
dec
pushf
loope
fcoml
jl
adc
mov
or
popf
pop
shlb
test
mov
insb
rorb
push
ret
dec
ja
out
sub
ret
sbb
fdiv
popa
sub
jne
mov
or
jecxz
pop
mov
repnz
push
enter
movsb
dec
adcl
mov
and
lret
popf
adc
add
loop
push
in
std
adc
pop
pushf
or
cmc
adc
jp
cwtl
scas
mov
push
lock
daa
and
test
sub
sub
pop
clc
data16
add
in
cmp
clc
mov
into
in
dec
push
lahf
and
inc
fmul
aas
mov
adc
fisttps
out
cmp
pushf
lret
push
cltd
fildll
outsl
xchg
mov
shl
mov
xor
bound
nop
push
out
daa
cmp
popf
push
jns
mov
cmp
jns
loop
inc
lret
shlb
ljmp
jp
mov
inc
and
push
mov
ffreep
mov
mov
clc
xor
mov
aad
sbb
adc
imul
dec
dec
enter
jp
sbb
ljmp
and
mov
loope
ja
inc
sub
mov
add
aas
cmc
add
call
ja
pusha
subb
cmp
xor
fnstenv
gs
aam
dec
sbb
ret
icebp
es
shrb
imul
fadd
push
dec
inc
dec
loop
out
das
xchg
push
dec
into
out
mov
fcompl
fisubl
inc
imul
xchg
inc
xor
lahf
stc
mov
inc
mov
adc
mov
insb
mov
mov
pop
lahf
stc
adcl
enter
lret
sbb
push
cmpl
mov
pop
sbb
es
call
inc
imul
lret
js
jmp
pop
gs
mov
xor
stos
mov
ds
and
es
test
jno
add
out
in
ljmp
jae
es
adc
push
mov
jbe
js
sti
aad
in
mov
sbb
aaa
and
iret
and
scas
cmp
adc
inc
jle
lods
xor
in
mov
cs
sysret
inc
insb
fmul
in
dec
jns
faddl
movsl
dec
pavgb
iret
or
mulb
fwait
pop
add
sbb
mov
loope
aam
rcr
cs
fdiv
or
mov
mov
mov
fadd
and
sbb
pop
add
jle
jge
add
mov
push
xchg
pop
lds
pop
sarl
data16
xor
in
or
push
add
leave
aas
adc
xor
ret
inc
sbb
jl
sbb
fisubl
adc
jecxz
and
mov
jne
add
mov
in
inc
lea
sbb
xchg
mov
aad
mov
in
popa
sub
jb
pop
loopne
mov
mov
xchg
and
in
mov
and
inc
es
fistpll
dec
cmc
das
enter
ror
jnp
movsl
movsb
aam
jp
andb
adc
pop
inc
or
mov
mov
push
aaa
xchg
rcrb
sub
aam
jns
bound
call
mov
mov
sti
mov
adc
imul
stc
sub
arpl
jmp
sbbl
mov
push
lea
or
ss
jl
daa
add
lods
out
scas
xchg
fmul
dec
pop
cmpb
aad
pop
aam
ds
aad
inc
stos
push
mov
xchg
cmp
inc
dec
es
popf
mov
lret
xor
pop
cltd
movsl
aaa
inc
dec
mov
popf
xchg
and
xor
xor
add
cmp
rclb
and
ja
dec
add
mov
call
xchg
sbb
mov
repz
mov
lfs
add
in
fildl
mov
sub
add
and
mov
xchg
in
loopne
mov
sbbl
je
popa
loopne
call
xor
inc
in
ret
add
fstpl
mov
psubd
aam
dec
lahf
out
bound
enter
inc
push
jns
lret
mov
gs
pop
add
sbbb
mov
xor
movsb
and
ret
adc
divb
inc
or
sub
call
mov
and
sbb
adcl
iret
notl
jge
test
add
xchg
pop
jge
pop
fs
movsl
cmp
push
ja
push
fs
sub
adc
and
and
bound
adc
nop
daa
ljmp
repnz
cmp
xrelease
jmp
pop
inc
xchg
pop
imul
sub
fs
je
and
xor
in
cmp
out
cmc
sbb
test
ja
rcll
out
adc
mov
jg
mov
jg
mov
ja
pushf
xchg
sub
or
out
pop
sbb
cs
aad
jbe
sub
lods
mov
dec
shr
lret
mov
es
fcomp
mov
push
mov
test
jno
pop
adc
dec
mov
insl
pop
sbb
jle
fdivl
imul
mov
push
pusha
es
sbb
test
sbb
stc
arpl
lock
call
mov
cld
inc
cltd
mov
pop
int
push
mov
mov
push
push
xor
das
mov
sbb
pop
mov
or
xor
lcall
pop
add
sti
xchg
cmp
sbb
push
or
lcall
ret
sbb
gs
lock
dec
stos
or
mov
aad
mov
data16
jmp
or
xchg
jge
mov
jne
inc
mov
lret
jne
dec
jmp
insb
mov
inc
sub
sub
test
repnz
jbe
or
dec
and
orl
push
popl
mov
mov
lahf
adc
in
push
and
push
push
in
adcl
adc
or
rorl
push
das
inc
cs
sbb
and
and
add
cmp
xor
cmp
ret
sub
inc
mov
mov
adc
jno
jg
cli
push
push
mov
pop
scas
sub
out
mov
into
outsl
mov
into
inc
ret
and
cmpsl
out
adc
mov
mov
dec
cmpsb
pop
test
stos
mov
repnz
jge
mov
sbb
arpl
mov
into
sub
movsl
add
call
shll
cmpsl
push
jmp
aam
and
adc
xchg
fs
jns
rclb
adc
mov
adc
xchg
je
andl
lret
sub
aad
adc
sub
xchg
lret
push
pop
jns
test
pop
pop
cmp
imul
and
ljmp
push
dec
or
push
xchg
aad
jb
nop
cmpsb
dec
xor
dec
mov
push
jp
jg
dec
out
ds
sub
mov
sbb
add
int3
leave
push
in
mov
cmp
imul
lds
pop
lock
sbb
push
cmpsb
or
test
arpl
mov
loope
sbb
mov
xchg
pusha
cmp
in
pusha
push
popf
imul
or
jge
mov
jl
push
in
mov
in
inc
lret
addb
or
test
mov
repnz
xor
lcall
cmp
or
out
or
dec
mov
je
push
inc
pop
mov
arpl
das
xlat
insl
stc
cmc
loope
and
add
add
adc
addr16
ret
fwait
aas
push
and
cmp
and
sbb
mov
jnp
add
fsubs
daa
mov
jmp
cld
adc
in
add
cmpxchg
scas
cld
mov
sub
gs
adc
sub
rcrb
in
and
jg
sub
xor
clc
ret
gs
out
xchg
dec
inc
or
push
mov
loop
jmp
xchg
and
gs
inc
or
mov
insl
and
lods
int
mov
dec
cmovge
add
cltd
sahf
add
mov
cmp
pop
sbb
fistpl
xchg
adc
jmp
sub
push
into
jmp
pushf
jnp
sub
aad
jns
xchg
movsl
mulb
dec
dec
add
or
ja
push
gs
push
fmuls
and
mov
ds
pop
cli
push
jle
mov
dec
loopne
mov
sub
int
repz
comiss
imul
in
mov
cltd
hlt
stos
fisubl
das
sub
loop
bound
stos
into
js
push
jmp
push
sti
push
inc
mov
loope
sub
sub
pop
std
lea
fcomps
popa
inc
xchg
mov
popf
sbb
or
mov
popf
cld
out
mov
iret
push
outsl
movsb
push
sub
int
arpl
leave
dec
pusha
inc
push
pop
ret
push
in
sbb
push
sub
jns
lock
cmc
dec
inc
adc
movsl
xchg
pop
xor
int
add
push
push
sub
fsubrs
or
mov
mov
xor
adc
loopne
test
repnz
push
inc
mov
lock
add
mov
mov
aaa
sub
inc
clc
fadds
sub
push
int
sti
or
pop
jmp
clc
imul
pop
dec
mov
push
mov
or
mov
xlat
bound
mov
push
xchg
arpl
or
mov
divb
mov
shll
pusha
mov
xor
xlat
push
pop
insb
insb
ljmp
pop
or
int3
push
xor
pushf
sahf
loope
repz
repnz
mov
fsubl
or
push
sub
fsubrs
pop
sbb
stc
push
jle
imul
and
pop
dec
roll
inc
xor
ljmp
add
push
push
popa
jl
lahf
fs
inc
mov
or
fld
sbb
lods
or
sub
pop
pushf
nop
aaa
add
imul
pop
fsubr
xor
jo
and
ljmp
popa
outsb
add
clc
je
mov
or
jbe,pn
outsl
adc
xchg
sub
dec
add
sub
adc
cmp
pop
mov
pop
pop
fstps
lods
or
cli
mov
dec
mov
mov
fildll
sub
aam
or
es
vphsubdq
push
popf
pushf
inc
dec
push
cmc
pop
shl
push
xor
lcall
xchg
xor
sub
pop
aad
aam
cmp
out
cmp
mov
cmp
adc
enter
out
fisubs
jae
cmc
add
loop
clc
pop
inc
jns
push
xchg
cmpsb
sarl
adc
sbb
ja
mov
fcompl
sub
adc
lods
test
adc
inc
dec
in
aas
icebp
out
cmc
xor
adc
push
sub
test
sbb
dec
clc
int3
outsl
inc
sub
jae
dec
jbe
out
clc
test
sbb
stc
les
pop
mov
sti
std
pop
and
stos
cltd
xor
addr16
mov
call
jp
adc
jo
mov
push
jno
sarl
push
mov
add
dec
mov
mov
movsb
fisttps
mov
mov
pop
and
or
pcmpeqw
aas
shl
pop
cli
add
ret
cmpsl
xchg
rcrl
lahf
cmpsb
cmp
mov
fwait
rol
addr16
hlt
faddp
stos
xchg
cld
push
movsb
xlat
imull
cmp
jge
shl
cmpsl
ss
sub
xor
jl
fnsave
pusha
sbb
and
cmp
jbe
loope
mov
xchg
ljmp
mov
xor
leave
lds
push
push
xchg
push
jp
adc
mov
or
xlat
mov
fiadds
leave
cmp
push
jnp
xchg
loope
leave
dec
xchg
ljmp
mov
divl
push
add
es
jnp
bnd
out
xchg
sbbb
ret
sti
jae
mov
jnp
aas
adc
test
inc
xchg
cli
pop
cli
and
mov
xorb
xor
imul
data16
inc
cmpsl
outsl
mov
test
xchg
and
sbb
pop
push
mov
cmp
mov
push
into
pushf
and
xor
arpl
test
rcl
lret
mov
repz
cmpsb
rolb
out
and
pop
xor
cmp
adc
dec
call
out
xchg
bound
push
sti
xor
addr16
fcompl
mov
sbb
adc
aam
cmp
pop
jnp
jb
adc
popf
xchg
pop
dec
test
in
outsl
ret
shlb
and
jl
outsb
es
mov
pop
jmp
or
imull
ret
mov
push
pop
sbb
pop
insl
cmp
xchg
xor
popf
enter
stos
clc
or
pop
ror
add
jge
dec
cmp
pop
pop
rcrl
imull
fisttpl
call
push
cmp
clc
shr
sub
xor
cwtl
inc
pop
in
jbe
fisttpll
ljmp
pop
sti
sbb
aas
sbb
add
mov
adc
cmc
fistl
pushf
stc
xor
popf
mov
cs
pusha
pop
jbe
xchg
and
mov
leave
sub
mov
cmp
xor
adc
xor
add
xor
insl
pop
subps
pushf
lods
enter
aaa
jmp
add
push
hlt
enter
stc
mov
or
mov
arpl
test
pop
push
cmc
push
in
das
mov
inc
mov
sbb
pop
pop
orb
addr16
rclb
addr16
loope
outsb
dec
xchg
sbbb
mov
insb
ljmp
inc
ljmp
cmp
mov
sub
jmp
fs
and
je
or
adc
xor
sarb
fcom
adc
inc
cs
loope
and
pop
nop
repz
test
add
in
xchg
ss
mov
sub
jge
pop
mov
loopne
push
jp
xor
cmp
fstl
test
out
clc
dec
adc
cmp
dec
adc
inc
and
test
cld
xlat
inc
xchg
sub
jns
lock
add
mov
cmc
push
jo
push
or
ljmp
pop
jge
lods
ffree
cmpsl
and
clc
insb
sbb
rcrl
pusha
pop
mov
push
ret
call
int
pop
mov
adc
rcr
movsl
cmp
dec
decl
cld
das
testb
jb
mov
mov
adc
add
mov
mov
jae
loopne
jae
in
ljmp
pop
add
sbb
jno
xchg
and
cltd
add
xrelease
xchg
dec
jbe
dec
xor
mov
ret
mov
stos
xchg
in
cmc
outsl
icebp
ja
repnz
adc
imul
mov
daa
xchg
stc
or
test
gs
jmp
into
mov
jmp
mov
in
pop
pushf
pop
inc
je
add
movsl
jecxz
out
das
jns
xlat
xor
mov
mov
out
imul
xchg
les
xchg
sub
movsl
daa
cltd
pop
sub
aaa
test
push
mov
adc
xor
mov
mov
sub
jecxz
add
pop
rorb
hlt
jle
sub
inc
inc
jmp
insl
xchg
out
xor
ret
mov
mov
mov
sub
in
mov
fisubs
hlt
cs
sahf
imul
inc
xor
sti
or
cmp
jne
xor
cmpsb
lcall
or
dec
and
xchg
cmp
popf
ds
cli
in
pusha
lret
cmc
cmc
fistl
jmp
shll
fmulp
jne
mulb
aaa
scas
rcrl
aaa
rorl
jl
test
pop
xor
dec
mov
aad
aad
cli
cmp
inc
ljmp
sbb
fisttpl
sbb
inc
leave
xchg
pop
dec
mov
dec
sarb
cmpsl
bound
movb
xchg
outsl
mov
arpl
inc
xlat
imul
mull
dec
imul
std
insl
fnsave
push
push
inc
sbb
xchg
lock
dec
dec
pushf
jnp
into
fnclex
adc
mov
xor
adc
jns
xor
stos
stc
jb
push
sahf
pop
cmp
push
or
jae
scas
add
and
mov
mov
jns
xor
cmp
pop
ss
push
inc
pop
loope
jp
push
cli
mov
in
je
sbb
imul
inc
xlat
shlb
fidivl
push
sbb
sub
mov
lcall
add
lock
lods
fcomps
sbb
inc
mov
sub
scas
nop
addl
cmp
ljmp
fs
cmpsl
cmp
or
add
repnz
orl
nop
rcrb
mov
mov
pop
inc
sub
mov
and
fildll
sub
incb
push
pop
aam
movl
push
iret
outsl
sbbl
jecxz
in
fwait
std
inc
dec
mov
mulb
rcl
aaa
loop
mul
enter
into
iret
shrl
and
aad
push
mov
cmp
xchg
in
fs
xchg
daa
stc
lock
pop
repz
dec
mov
pop
movsb
push
das
loop
aaa
push
sbb
ds
pop
es
dec
fcompl
pushf
jne
mov
mov
imul
in
fistpll
mov
mov
insl
adc
loope
push
rcr
arpl
repnz
or
pop
mov
or
hlt
pop
pop
ljmp
adc
cmp
add
push
fcmovbe
mov
imul
ljmpw
mov
mov
mov
or
addr16
imul
in
enter
or
xchg
and
cmpsb
inc
push
xchg
in
pop
fsubrl
negl
loope
jne
sbb
sbb
mov
std
and
stos
les
into
sub
dec
inc
mov
jg
out
enter
adc
jmp
rcr
and
aas
sub
or
xor
xchg
mov
xchg
in
cwtl
or
dec
jae
icebp
pop
and
ljmp
mov
int3
or
fwait
pop
mov
push
lret
pop
add
push
data16
in
sub
push
ss
popf
inc
dec
sbb
pop
fprem1
inc
lret
lahf
adc
add
push
icebp
rclb
shll
imul
sbb
shrb
pop
fmuls
push
mov
cmp
ret
cltd
data16
mov
cmp
dec
xchg
jno
es
popf
scas
mov
push
int
push
mov
adc
jae
xor
dec
push
jnp
mov
cli
and
ljmp
mov
pop
push
loopne
and
push
inc
scas
xchg
rcrb
cmp
push
add
dec
mov
pop
mov
mov
cs
adc
sarl
rcrl
adcl
out
xor
ficompl
addr16
cmc
stos
shrb
leave
xor
pop
iret
loop
insl
cmp
iret
bound
cltd
push
fbld
sahf
push
mov
jg
pop
adc
subb
arpl
mov
clc
shrb
dec
jecxz
ret
dec
outsl
pop
sbb
ret
idiv
xchg
mov
scas
dec
cmp
out
repnz
push
jbe
push
mov
jns
in
jmp
xlat
mov
jo
sarl
push
mov
popa
pop
adcl
adc
cltd
cmp
icebp
stc
jb
test
mov
ljmp
arpl
and
inc
out
push
out
xchg
push
xor
adc
mov
push
sub
pop
push
out
ljmp
add
sub
push
dec
dec
add
repnz
movsb
popa
inc
mov
or
cmpsb
xchg
or
sti
imul
stos
jae
xor
add
pop
or
movsb
jg
jo
adc
int3
lret
enter
mov
push
cli
push
push
xchg
xchg
call
loop
and
lods
lret
cmp
lcall
push
xchg
faddp
cmpsb
xchg
dec
inc
or
pop
stos
dec
mov
cld
fwait
jg
sub
inc
or
sub
jp
pop
dec
dec
scas
dec
push
lock
push
out
test
bnd
add
xorb
aaa
repnz
inc
inc
xchg
shlb
jmp
imul
and
mov
ljmp
fbld
pusha
jmp
and
mov
leave
out
and
mov
lret
xchg
sbb
sbb
fcmovu
mov
arpl
push
les
sbb
incl
mov
lods
xchg
dec
adc
xchg
repnz
scas
cmpsb
inc
sub
call
dec
shll
clc
fwait
lds
xchg
sbbb
jg
aad
loopne
sbb
mov
in
pop
push
imul
shrb
lahf
addb
bnd
loope
mov
cwtl
rcl
xor
aad
add
mov
cmp
mov
movsl
mov
mov
leave
sbb
fbstp
stc
sahf
inc
pop
add
bound
ret
xorl
adc
pop
pop
dec
aad
int
cmpsl
test
add
das
mov
jbe
adc
aam
rclb
gs
cltd
jb
mov
push
rorl
push
push
add
pop
add
sub
sbb
mov
ret
and
les
pop
fsubrs
jbe
roll
push
ss
add
lret
fwait
sbb
pop
cs
sahf
or
add
mov
jecxz
popf
pmullw
mov
mov
and
jmp
sub
jb
jle
cmp
lcall
jg
int
lahf
jbe
je
fnstsw
push
sbb
pmaddwd
les
and
mov
cmp
add
jne
mov
dec
and
cwtl
cwtl
adc
aad
xchg
fwait
insb
dec
sub
adc
dec
dec
rcll
sbb
xor
pusha
pop
imul
xchg
ja
iret
fldl
cmpsl
xor
add
mov
cmc
mov
inc
int
cltd
jmp
and
cmpsb
xchg
sub
pop
jb
mov
lahf
stc
lock
nop
inc
insb
inc
daa
sub
and
push
outsl
inc
mov
iret
outsl
push
add
inc
int
aaa
sbb
sysexit
cltd
loope
shl
mov
mov
cltd
fcom
shll
in
cmpsb
push
add
add
das
sahf
xchg
mov
lods
cmpsl
mov
int3
negb
daa
and
test
sbb
jbe
dec
pop
mov
dec
adc
push
xlat
aaa
dec
mov
scas
sbb
and
cli
mov
cmp
lret
cmpsw
adc
and
gs
mov
adc
jne
add
dec
push
pop
pop
popa
inc
dec
jle
mov
mov
sub
inc
and
xchg
js
popf
xor
adc
outsb
lock
xor
sub
ja
push
cmp
cmp
mov
pop
inc
lcall
insl
rcrb
ss
mov
out
mov
dec
fstps
cltd
mov
fisubrl
fwait
xchg
xchg
out
xchg
cmpsb
jle
lods
adc
outsb
jnp
adc
daa
mov
daa
insl
insl
jp
aad
fwait
pop
or
fisttpll
sbb
out
test
repnz
divb
dec
jae
sbb
iret
out
lss
lahf
xor
cmp
sbb
xchg
sub
inc
into
xchg
inc
test
and
xchg
sbb
cs
cwtl
add
or
pop
mov
insb
push
xor
stc
out
test
mov
rcrl
add
push
ds
push
arpl
icebp
lea
jne
std
adc
push
cwtl
inc
inc
ret
push
ret
js
cmpsl
enter
add
rcl
mov
pop
jmp
cmp
std
mov
pop
rcrb
sub
cmpsb
loopne
and
push
scas
rorl
push
test
testl
jae
addr16
push
std
test
jmp
or
mov
cltd
xchg
mov
insb
push
or
fxch
leave
xchg
mov
sarb
shl
and
fwait
add
and
pop
push
pushf
inc
repz
sarb
stos
ret
std
mov
shrl
fsub
jo
jne
daa
pop
and
int3
fmuls
xchg
fsubrl
dec
in
loop
jmp
add
lret
push
jno
cmp
mov
jg
mov
push
mov
push
xchg
inc
pushf
loop
test
test
push
xchg
xor
and
out
add
sti
cmp
dec
loopne
mov
add
mov
data16
mov
jl
in
fsub
mov
fdivr
stos
push
adc
and
push
shll
das
lret
adc
dec
push
jl
jnp,pn
imul
mov
pop
stc
push
add
bound
pop
jl
cmp
popf
adc
and
sbb
ja
sahf
out
fwait
popf
arpl
push
xchg
xor
cmp
lds
aas
mov
push
adcb
mov
cmp
loope
sub
sub
mov
sti
jge
stos
loop
in
xlat
stos
inc
pop
int
imul
push
add
jge
sarb
test
nop
insl
leave
pusha
and
das
xlat
scas
flds
outsl
add
loopne
pop
ds
dec
ds
push
aaa
ret
xchg
and
fsub
jnp
jp
cmp
and
out
mov
or
xor
xlat
xor
incb
das
mov
sub
insb
cwtl
adc
inc
mov
pop
lea
shll
xchg
repnz
sub
mov
push
mov
dec
jne
imul
dec
cwtl
xchg
lahf
mov
in
aad
inc
clc
sbb
mov
dec
adc
and
das
and
cmp
mov
in
lret
mov
faddl
xor
xchg
call
xchg
lret
mov
cmp
stc
gs
mov
fldcw
push
sub
test
lret
into
add
xor
and
mov
dec
inc
fldl
out
push
mov
xor
pop
outsl
push
iret
nop
data16
icebp
loop
rol
push
jno
pop
mov
popf
icebp
push
out
sub
push
mov
push
jb
movzbl
outsl
es
int3
mov
jmp
xchg
jae
test
into
nop
mov
js
pop
pop
push
or
sbb
cmp
das
pop
data16
add
xor
xchg
pop
scas
adc
jne
mov
adc
cli
mov
adc
cwtl
imul
cmp
in
orb
adc
mov
xchg
sarl
push
cmp
cld
divl
cmpl
cwtl
xor
fisttps
jnp
in
adc
lods
push
mov
lret
not
inc
or
cmp
mov
popf
xlat
fmul
stc
aam
rol
mov
aas
addl
and
xor
jbe
lret
push
inc
in
fmuls
lret
adc
imul
fdivrs
xchg
pop
and
jl
mov
je
in
inc
or
iret
ds
ja
aaa
outsb
sub
int3
xchg
sbb
cmc
push
shlb
sahf
or
enter
mov
sub
das
mov
adc
out
aam
and
jo
xchg
fisttps
mov
mov
pop
mov
clc
mov
jecxz
cmpsl
icebp
inc
mov
push
data16
sub
mov
mov
jne
push
lret
sbb
int3
repnz
push
es
dec
sbb
pop
mov
jbe
and
or
test
push
adc
jae
xchg
fisttps
add
mov
gs
test
xor
jb
loopne
lret
add
mov
mov
test
pop
pop
cwtl
ret
pop
push
push
out
lods
cmp
stc
lahf
push
fwait
add
and
lahf
mov
mov
mov
mov
pusha
dec
rolb
lea
scas
sbb
xor
sbb
and
fiadds
mov
cmp
fwait
test
jl
push
and
movsb
decl
mov
inc
shrb
xchg
mov
ljmp
xchg
and
pusha
out
scas
imul
pop
in
cli
push
pushf
inc
push
add
jns
jge
daa
jbe
ret
xchg
mov
ljmp
stos
movsl
push
push
add
into
jno
sbb
mov
imul
pop
mov
xor
lods
pop
addr16
xor
std
test
mov
inc
repz
jle
hlt
gs
push
sub
xchg
ret
sub
or
or
xor
sub
xor
insb
mov
es
jmp
imul
dec
add
push
mov
adc
lods
push
mov
cmovg
pop
shll
xchg
and
fnstcw
test
fnstenv
pusha
je
ret
mov
dec
lret
pop
lock
and
jnp
fcom
outsb
xchg
rorl
or
les
cmp
mov
mov
pop
shlb
js
mov
cmp
jnp
push
sti
imul
lods
push
rcrb
sbb
dec
out
pop
ret
icebp
push
inc
adc
jns
push
loope
mov
inc
mov
dec
cli
mov
iret
xchg
addb
mov
int
in
mov
testl
xchg
sbb
mov
inc
popf
dec
or
push
adc
add
cltd
sub
out
fcmovnb
mov
or
scas
scas
adc
inc
stc
mov
insl
pop
adc
jl
mov
add
gs
ret
mov
fsubr
jae
mov
jne
xor
hlt
sbb
je
xor
push
sbb
xchg
or
dec
aaa
sub
cmpsb
out
iret
push
insl
and
and
inc
xor
mov
sub
imul
jmp
jne
cli
mov
adc
sahf
or
nop
add
xlat
in
cmp
ret
dec
adc
inc
jno
sub
ret
imul
out
mov
sti
xchg
push
pop
lahf
rol
sub
pop
sub
aaa
mov
mov
pusha
cmp
jg
and
bound
sbb
lods
xor
call
cmc
sub
ja
push
sub
outsb
stos
mov
loop
addb
push
pop
inc
or
pop
sub
mov
mov
sub
jae
mov
mov
push
sub
divl
and
sahf
dec
out
sbb
push
and
mov
arpl
lea
dec
and
cltd
in
adc
lods
test
out
stos
in
repnz
sbb
aad
in
or
sub
mov
sbb
cmp
jne
mov
xchg
inc
shr
add
mov
test
shrb
outsl
push
scas
cmpsb
aam
loop
push
std
in
inc
xor
cmpl
dec
mov
bound
clc
jle
stos
sti
cmp
mov
cwtl
or
ja
pusha
int3
and
sahf
mov
jl
or
jp
push
push
push
and
jne
mov
xor
mov
iret
pop
ljmp
mov
dec
sbb
mov
dec
inc
push
dec
sbb
inc
data16
jne
xlat
jno
jp
dec
and
push
or
rcrb
ljmp
ret
add
ret
inc
mov
call
adc
and
int
mov
sbb
sbb
in
push
mov
jnp
sar
sti
jecxz
stos
pushf
or
xchg
shr
repz
jbe
cmp
push
push
jmp
call
inc
call
push
cmp
lcall
enter
adc
flds
stc
int3
dec
lods
inc
aaa
insl
lret
into
outsb
pop
sbb
pop
lods
aad
pop
mov
inc
hlt
inc
or
lret
sub
add
mov
xchg
mov
iret
add
movb
shlb
fcompl
mov
or
cmp
iret
mov
xchg
mov
loopne
adc
popa
or
fs
fisubrs
adc
push
sarl
mov
mov
or
btc
jno
cmp
or
inc
or
sbb
pop
ja
sahf
pusha
mov
jo
movl
movsl
xor
cmp
rcll
jb
and
adc
jns
jle
mov
call
push
cwtl
cmpb
test
push
pop
mov
xchg
jns
aaa
sub
cmp
cli
lcall
fadds
inc
call
int
xor
cmp
and
mov
cs
add
lret
rcr
or
decb
scas
pop
xor
popa
push
dec
into
adc
ss
pop
cltd
xchg
push
imul
and
adc
mov
or
xor
sbb
je
push
push
xor
sbb
int
dec
mov
stos
add
out
je
fs
mov
xorl
iret
lret
push
pop
xchg
sbb
in
shr
mov
aaa
aaa
cld
fimull
rorb
mov
aam
pushf
movsl
fwait
imul
mov
ss
andl
rcll
push
mov
lahf
outsb
xor
fs
xchg
adc
mov
lahf
adc
xor
xor
sbb
out
sbb
mov
int
ret
mov
test
cmp
out
xchg
push
outsl
popf
jge
cmc
mov
dec
adc
gs
pusha
test
jmp
sarl
movsl
sub
sub
cmp
cwtl
mov
rclb
or
mov
imul
mov
fwait
xchg
scas
jge
push
and
not
cwtl
push
and
test
mov
icebp
mov
cltd
aas
pushf
sbb
cld
add
orb
mov
and
add
in
xor
lcall
mov
pop
pushl
jp
mov
imul
inc
mov
push
and
and
inc
cmp
xchg
mov
jne
lds
hlt
jae
sub
out
pushf
xchg
je
lock
mov
xor
int
jae
xchg
adc
loop
mov
bound
mov
mov
daa
stos
dec
or
sbb
fnstcw
dec
pop
cmpsl
inc
sbb
push
mov
ds
jp
add
pop
aas
add
cmp
adc
pop
test
repnz
push
roll
shlb
push
loope
stos
inc
mov
jbe
pop
xor
test
in
sbbb
movsl
stos
in
and
call
dec
or
outsb
pop
adcl
rcrb
loopne
ds
inc
mov
push
dec
sahf
adc
dec
or
mov
mov
xor
daa
outsb
test
push
aaa
jg
jns
adc
lods
jecxz
out
mov
fwait
pop
xchg
fld
jbe
test
mov
mov
mov
sbb
enter
mov
mov
enter
dec
inc
fwait
insl
loopne
or
dec
aaa
push
stc
testb
adc
lods
sti
dec
aad
out
rcl
roll
jns
or
clc
sub
mov
and
push
pushf
cmp
push
or
flds
inc
clc
jge
cmp
push
clc
mov
jg
outsl
sti
in
jge
jb
or
sub
pop
push
push
les
ret
repnz
rolb
out
jle
pop
lea
mov
mov
lods
and
lret
mov
mov
and
ja
imul
cmp
dec
mov
sub
sbb
jge
cli
push
hlt
into
push
ficoml
fcmove
fiaddl
and
adc
imul
sbb
jb
into
pop
push
xchg
rorb
jle
and
cltd
adc
mov
push
cmc
and
sbb
scas
popf
ja
iret
es
mov
jb
xor
test
cmc
ret
nop
int3
push
sbb
rcll
jmp
mov
hlt
and
mov
sub
cmpsl
adc
inc
aaa
mov
insb
and
push
shr
push
je
mov
repnz
mov
sbb
push
test
lret
outsb
push
imul
gs
jo
jae
popa
cld
sbb
adc
in
cmp
jae
push
mov
clc
sub
or
stc
in
stos
inc
jecxz
jp
jl
test
adc
pop
or
inc
rorb
xchg
test
push
adc
dec
shll
mov
lahf
lods
mov
gs
cld
cmp
jmp
daa
out
inc
jne
cli
fs
je
int
sub
stos
cmpsl
mov
add
les
mov
pop
dec
pop
or
adc
xlat
jno
inc
popa
test
fwait
cmp
shrb
push
and
and
mov
test
stc
andb
adc
push
fsubl
xchg
fidivrs
jno
push
push
mov
xlat
jp
pop
inc
andl
push
sbb
jo
xchg
xor
push
stc
int
fnstcw
inc
jmp
jmp
jo
rolb
and
inc
iret
lret
and
outsb
or
mov
out
fwait
or
out
jl
test
push
sub
cmp
jg
xchg
pop
xchg
fisttpll
adc
jg
or
repz
insb
xor
add
push
outsl
movsl
jle
cmpsl
pop
inc
cli
jecxz
dec
dec
dec
add
stos
sbb
xchg
ss
sbb
sub
nop
fs
inc
dec
pushf
mov
scas
jno
ljmp
movsl
aam
out
pop
inc
inc
cltd
lcall
fdivrp
dec
mov
xchg
ldmxcsr
and
shl
insl
sti
js
in
cltd
test
stc
pop
and
sbb
jecxz
cmp
or
outsl
insl
lock
sub
insb
inc
arpl
cmp
cmpsb
cmpsl
cmp
cwtl
pushf
das
fistps
test
mov
scas
fsts
lods
rorb
mov
aaa
or
mov
sub
fdivr
sub
je
dec
cmp
jg
fisttps
xchg
movsl
pop
loopne
pop
popa
fbld
pop
xor
cmp
cmpsl
aas
fisttpll
imul
lcall
pop
popf
test
push
mov
jecxz
lds
xor
cmp
add
mov
sub
xchg
sti
sbb
push
push
xor
mov
ds
or
mov
cmp
lods
push
jmp
jno
pusha
loopne
shlb
mov
outsl
mov
popa
adc
iret
pop
out
shl
in
mov
xor
ret
sbb
push
cltd
hlt
out
fdivrl
xor
fsubs
xor
inc
mov
popf
stos
pushl
sub
jbe
sub
lods
add
lcall
scas
cmp
inc
popf
repz
fcmovbe
xlat
and
fbstp
or
push
or
loop
ficoms
inc
mov
test
cmp
and
test
setbe
lds
scas
incl
mov
cmp
mov
fcoms
jg
sbb
dec
dec
jg
mov
loop
sub
push
call
mov
pop
pusha
sahf
pop
arpl
push
int
mov
arpl
add
mov
in
insl
sbb
or
lock
and
inc
push
sub
outsl
sub
rsm
testl
cli
cmp
out
sahf
jnp
xchg
sub
cmc
adc
mov
fnstcw
ret
outsl
lahf
test
xor
mov
pop
ljmp
push
pop
fistpll
or
dec
or
sahf
sbb
repnz
or
shll
shrl
call
pushf
jge
outsl
dec
sti
mov
jp
dec
inc
fs
cld
fmuls
fnstsw
fwait
mov
cmp
fildl
movsl
mov
add
rcl
dec
push
and
push
jo
inc
movsb
lock
sbb
aas
fadds
andb
in
adc
int
push
lret
fdivl
insl
loopne
xchg
pushf
jbe
pop
test
jmp
cmpb
shlb
add
inc
addr16
adc
pop
les
stos
into
xor
mov
sti
cmc
add
cmpsb
test
add
jl
dec
add
rclb
dec
lea
sti
sar
mov
fidivrl
pop
ljmp
lock
movsl
lret
mov
das
mov
push
xchg
ficomps
jb
outsl
imul
lahf
and
adc
mov
xchg
mov
xchg
in
xchg
inc
es
mov
cmp
out
popf
test
hlt
shlb
cmp
shl
mov
dec
test
xor
jne
test
fwait
ror
mov
jmp
lds
ret
dec
inc
inc
inc
in
sub
jae,pt
in
int3
sbb
or
incl
pop
or
mov
dec
xchg
mov
int
stos
cmpsb
mov
push
inc
shl
nop
lcall
movsb
insl
rolb
jl
sbb
push
aam
fisttpl
lock
pushw
or
mov
xchg
js
clc
or
mov
pop
cmpsl
adc
xchg
sahf
fucompp
jl
or
mov
sbb
mov
dec
mov
arpl
in
loop
lea
mov
xchg
cmp
adc
or
js
fs
or
mov
jns
mov
add
mov
iret
xor
or
imulb
nop
xchg
pop
adc
test
push
jno
adc
test
sub
and
insb
cltd
inc
shr
insb
data16
fdivs
add
push
iret
fcomp
shrl
adc
inc
xor
jmp
add
adc
dec
push
add
sbb
out
adc
jbe
sbb
mov
pop
pop
psllw
mov
mov
popa
push
es
jp
jbe
rcrb
sti
sbb
dec
xor
loop
mov
sbb
dec
cs
cmp
idivb
push
dec
jl
jo
inc
mov
push
adc
xchg
adc
jecxz
lods
outsl
jo
pause
pop
xor
dec
jnp
icebp
fsubl
and
push
aam
ds
mov
cmp
dec
andl
mov
xchg
jb
push
fidivrl
push
mov
push
lds
shlb
xor
gs
ret
xlat
in
jo
je
cmp
rcrl
aad
add
shll
test
imul
scas
sbb
or
add
push
js
arpl
cmpsb
add
mov
test
lcall
mov
pop
popf
sarl
xchg
pushf
rcrl
xchg
int
je
dec
cli
ja
add
js
test
cmp
cmp
xchg
mov
push
lcall
mov
jmp
js
fldcw
sahf
aad
nop
cmp
inc
pop
rol
push
or
js
mov
inc
jno
pop
sub
dec
lret
cmp
push
insl
push
push
fstp
add
jg
pop
xchg
cltd
jns
dec
int3
out
fstpl
aas
jbe
inc
jmp
xchg
cltd
rorb
test
dec
lock
repz
sahf
push
stos
out
iret
bound
pop
jmp
dec
jb
push
mov
dec
addr16
inc
sbb
mov
jns
jmp
add
pextrw
cmp
cli
xchg
and
sysret
adc
xchg
jmp
jg
pop
sub
or
jo
test
movb
call
jle
dec
adc
adcl
out
hlt
lahf
ja
in
xchg
call
popl
popf
jp
mov
cmp
test
xchg
sub
sbb
test
in
dec
add
movsl
hlt
ja
imul
or
push
insb
fisubrs
xor
insb
jbe
xchg
jne
mov
pop
aaa
aaa
mov
ret
jb
shll
mov
and
pop
aam
dec
sub
lds
xor
test
inc
pop
loop
push
adc
nop
or
or
add
popf
into
push
iret
leave
into
dec
pop
xchg
or
inc
inc
aad
sbb
lcall
jbe
sbb
fsubr
adc
mov
test
jnp
outsl
imul
cvttps2pi
lahf
cltd
cmp
js
cld
test
dec
adc
cmpsb
xchg
jp
jg
push
unpckhps
test
adc
sub
push
loopne
push
push
shlb
scas
arpl
lock
xor
cmp
fildl
mov
pshufw
adc
lret
xchg
cld
or
cmp
mov
lret
and
shl
xor
cmp
stos
pusha
aad
pop
jg
cmc
ret
cs
shll
lock
pop
mov
lock
sub
push
or
xor
mov
or
in
into
jne
cmp
pop
aam
dec
pop
lret
push
or
movsb
roll
push
mov
jnp
popa
mov
mov
stos
lea
int
pop
cmp
mov
popa
dec
mov
in
stos
divb
in
push
cmp
add
out
out
mov
mov
mov
into
cmpl
enter
dec
jmp
sbb
out
sarb
push
inc
lcall
jge
add
in
sbbb
push
loopne
mov
jnp
jg
call
jle
pop
adc
lcall
and
mov
ret
in
add
pop
xor
mov
loope
mov
add
loopne
inc
aam
insb
pop
cmp
xchg
sub
and
orl
mov
mov
lock
push
out
xor
pop
mov
xchg
push
rcrb
adc
sti
add
dec
cmpsl
in
sbb
push
inc
adc
fisttpll
dec
push
cmp
mov
vmwrite
lods
cltd
add
leave
jg
xchg
jmp
jae
iret
cmp
pushf
mov
scas
mov
and
out
gs
test
and
jne
push
add
out
pop
stc
imul
add
into
xor
sbb
mov
adc
and
aaa
in
inc
inc
ret
dec
xlat
xor
shll
jge
pop
adc
call
xor
stos
ss
push
addr16
fdivrl
shrl
mov
notb
sbb
pusha
xor
pop
add
jg
dec
test
jnp
xlat
dec
inc
pushf
adc
mov
rolb
push
pop
inc
int3
push
out
sbb
cmp
lods
xor
fisubrs
dec
ret
andl
subl
lcall
mov
test
xchg
jmp
push
sbb
push
test
imul
mov
in
dec
xlat
dec
jno
sbb
jbe
xlat
int3
mov
lds
mov
cld
sarl
cmc
xchg
out
mov
lcall
gs
scas
jo
shl
out
test
push
les
pop
add
sbb
js
fistpl
test
cltd
xor
pop
loopne
inc
cmpsb
jecxz
out
nop
inc
cmp
jl
mov
lds
xor
decl
push
scas
adc
mov
adc
lods
cmpsl
mov
fisubs
push
push
outsl
xchg
js
insb
insb
subl
sub
iret
xchg
push
std
in
cmp
sbb
inc
mov
and
mov
shl
hlt
clc
xchg
sahf
outsl
in
es
push
outsb
std
sub
leave
or
in
flds
jne
das
imulb
mov
js
pop
sub
inc
or
xor
test
adc
and
les
stos
or
and
in
movsl
loopne
popf
jg
sub
push
jae
mov
fcmovne
outsb
push
arpl
lock
dec
mov
cmpsl
fcomip
cmp
xor
nop
fcoml
ljmp
lahf
xchg
sti
sub
pop
push
in
stos
aas
push
pop
fsubrl
xchg
pop
push
data16
test
pusha
ja
jae
dec
insl
out
cmp
scas
insb
fimull
out
mov
fidivs
pop
inc
rorl
into
in
mov
shlb
and
push
jno
sub
leave
push
mov
jbe
stc
shll
jae
aaa
and
sarb
mov
cmp
dec
lods
mov
enter
shll
xchg
or
dec
rol
xchg
cli
inc
mov
int3
loope
loope,pt
lods
adc
xchg
jle
subb
xor
push
push
sub
enter
and
mov
jl
stos
gs
jmp
xor
insb
stos
dec
fldcw
cmp
xchg
ljmp
adc
imul
std
insb
ljmp
incb
xor
cmp
sub
mov
mov
push
jp
shlb
int3
pop
shrl
icebp
jne
mov
jae
jno
js
lahf
testl
fwait
into
mov
inc
in
pop
and
in
inc
out
mov
and
shll
sub
in
add
in
sub
mov
ret
ret
stos
out
imul
shr
movsb
xchg
or
lods
data16
fldl
mov
push
jbe
pop
mov
bound
fs
mov
jp
popf
mov
addr16
cmp
aam
dec
pop
test
mov
outsb
aad
xchg
mov
inc
ljmp
sub
add
addr16
daa
icebp
lret
and
pop
daa
rorl
push
das
in
ljmp
cld
sbb
xchg
add
xchg
test
mov
push
jl
pop
outsl
cmp
sub
repz
fldcw
aas
cltd
xorl
xlat
inc
cmp
push
mov
xchg
fistpll
mov
xchg
out
mov
in
push
xor
cmp
out
jne
and
arpl
stc
inc
jp
xchg
xchg
jge
xor
xchg
push
inc
popf
mov
hlt
in
int
out
lret
sub
jae
nop
xor
dec
shll
cmpsb
ja
or
mov
dec
lock
mov
cmpsb
or
xor
xor
pop
ljmp
gs
mov
cmpsb
outsb
rolb
ret
ret
and
testb
out
and
sahf
lock
xor
in
fisubs
into
dec
sub
jle
push
or
in
inc
in
pusha
lret
jmp
out
mov
hlt
xor
fisttpll
lret
mov
movsl
xchg
xchg
je
push
dec
lock
outsl
sub
adc
mov
call
pusha
adc
sub
jae
fs
repz
in
or
push
sti
data16
jmp
xlat
cmpsb
sbb
jb
xchg
sbb
push
ja
mov
mov
pop
jo
lahf
push
xlat
loopne
cmp
jae
cmp
aaa
divl
push
sbb
sbb
aam
mov
jne
mov
nop
jno
sbbb
push
jo
push
lds
icebp
ss
lcall
ja
jle
sbb
xchg
addb
fwait
adc
fsubrl
push
cmp
fstpt
icebp
and
mov
and
inc
sbb
inc
pop
aam
adc
jmp
test
mov
movsb
call
pop
insl
mov
cltd
lea
pop
cmp
lea
popa
addl
nop
pusha
test
sub
pop
inc
stc
push
out
lock
xchg
or
jge
js
scas
adc
cld
mov
ss
addb
jmp
pop
jnp
movaps
mov
int3
inc
or
sub
mov
hlt
dec
pop
and
stc
jl
dec
add
jb
xorb
popf
stos
lret
pop
pop
xchg
fwait
nop
mov
mov
push
mov
outsl
out
mov
push
xchg
mov
pusha
mov
lret
jl
shlb
shll
std
clc
mov
loopne
es
sbb
jb
aam
ret
add
jp
out
sahf
sbb
adc
aas
enter
popf
sahf
cld
mov
idivl
inc
xchg
ret
sbbb
mov
dec
stos
aad
jne
aas
insb
call
fs
or
pushf
negb
and
pop
sarl
jl
loop
sbb
sub
daa
cli
stc
nop
add
loope
cld
pop
leave
cwtl
aad
cli
cmp
clc
xor
pop
lds
mov
enter
das
nop
sbb
leave
pushf
jnp
push
cli
std
lea
shlb
dec
and
pop
mov
ja
ja
ljmp
rol
mov
push
movsl
shrl
inc
ret
sub
mov
add
push
pop
loope
push
dec
cmp
add
add
mov
fcomps
test
mov
cmp
xchg
fwait
insb
rcr
addr16
bound
dec
jecxz
or
push
insl
pop
push
inc
adcb
xor
lds
dec
mov
aaa
sub
pop
aad
test
adc
push
test
adc
popf
or
lock
add
lock
mov
loope
dec
mov
inc
mov
lods
enter
movsl
test
es
dec
jnp
daa
jns
mov
or
push
sti
shrb
imul
jbe
dec
sahf
test
mov
and
enter
aam
mov
aam
sbb
add
and
pop
add
jns
cmpsb
daa
adc
and
out
xlat
push
sub
gs
dec
and
mov
orb
out
movsb
or
pop
mov
cmpsl
nop
add
sub
sbb
in
xchg
xchg
and
mov
lahf
push
ja
popa
stos
mov
fs
mov
jp
idivl
pop
hlt
sbb
outsb
add
dec
inc
cwtl
add
cwtl
push
mov
add
push
loop
push
ss
shrb
jg
jb
push
jmp
sub
fs
hlt
shl
arpl
leave
popa
sub
popf
fsts
mov
addl
jecxz
jo
mov
in
and
xor
sbb
cmp
and
jo
fwait
daa
incb
cmp
and
cmp
sub
jne
xchg
sbb
xor
and
xchg
sub
pop
insl
sub
aad
enter
test
jno
sbb
mov
jb
jne
loop
cmpsb
jge
push
and
sbb
adc
mov
push
jle
xchg
pusha
mov
sti
in
jl
gs
xchg
pushf
sbb
xchg
inc
ret
aaa
test
outsl
aad
loopne
mov
push
inc
iret
sbb
clc
push
adc
subl
and
mov
xor
cmpsl
xchg
test
mov
fidivl
lahf
cmp
cmp
loop
mov
rorl
jno
fwait
push
xchg
mov
or
dec
loop
int3
xchg
xchg
hlt
insl
addb
daa
sbb
lods
orl
xor
divb
movl
push
xchg
jle
test
mov
add
xor
mov
test
rcl
push
fwait
or
fcompl
mov
mov
sub
jo
mov
dec
pop
mov
push
mov
enter
sbb
fcompl
fs
mov
int
add
mov
fs
xor
test
je
imul
push
mov
cmpb
pop
mov
mov
mov
aaa
lret
sti
aad
stc
sbb
pop
aaa
xchg
adc
lret
push
fldl
mov
cmp
stos
adc
inc
rclb
insl
stos
sub
fs
mov
mov
push
aaa
sbb
or
inc
sahf
aam
negl
dec
lods
scas
mov
arpl
into
sarb
sbb
lea
scas
mov
pop
or
sbb
ret
push
cmp
xchg
out
pop
mov
fdivrl
lcall
in
mov
inc
call
push
ror
fcmove
test
fidivrl
xlat
dec
das
fisubs
into
jmp
pop
mov
or
add
adc
xchg
adc
xchg
and
mov
test
subb
stc
jecxz
push
push
push
ror
lret
test
aad
and
jecxz
aad
cld
inc
lods
imul
sbb
xor
mov
jns
push
outsb
cmp
push
shlb
addr16
imul
fmulp
fstpl
movsb
fwait
jbe
cmp
insl
loop
subb
lret
int3
js
enter
daa
cmc
mov
clc
add
sahf
sbb
lods
mov
andl
test
xchg
je
js
mov
ss
outsl
sbb
movsl
rorl
insb
lahf
push
jne
mov
fs
aam
repnz
dec
jle
xorl
sbb
sbb
mov
testl
in
pop
addr16
fnstcw
loop
lods
psubsw
and
std
sti
and
stos
pop
push
xchg
xchg
lret
data16
dec
adc
push
int
cmp
lock
dec
jg
jb
or
xchg
cld
stos
fiadds
mov
xchg
sbb
mov
sub
jmp
pop
jno
loop
test
pop
mov
dec
sub
sub
es
xchg
in
jl
repnz
fdivs
inc
fists
into
icebp
lahf
dec
dec
ret
cmp
fldenv
cmpsb
push
aad
loop
dec
or
inc
push
mov
dec
jmp
push
push
test
mov
out
cli
cmpsb
mov
cwtl
pop
push
and
push
mov
arpl
push
mov
mov
cmpsl
jp
in
adc
pop
and
data16
movsl
push
loop
dec
sub
in
sub
rol
mov
jecxz
lods
sbbl
mov
gs
aas
pop
lds
mov
es
inc
fmull
cmp
sub
fidivrs
cli
xor
sub
mov
je
adc
aas
loopne
cld
int3
cmpsl
sbb
in
jl
mov
push
cmpb
ficoml
mov
sub
cld
and
ret
andl
jae
stc
fs
push
mov
int
add
enter
mov
out
sti
mov
pop
je
mov
loope
xor
mov
scas
push
lods
mov
xor
mov
mov
sti
std
and
cmp
sub
mov
push
dec
into
imul
xor
fsts
and
xchg
pop
cmpsb
lock
mov
int
test
sub
sub
sbb
repnz
loopne
cmp
lods
jge
or
lcall
jle
push
dec
mov
fucomi
sbb
jae
repnz
sbb
stos
inc
push
es
insl
xchg
mov
enter
adc
lds
repnz
addr16
stc
sub
xor
sbb
or
xor
inc
out
mov
xor
push
sbb
push
cli
pop
vaddsubpd
out
loop
sub
aaa
add
mov
loop
lods
jle
lods
add
mov
jb
inc
faddl
inc
cs
push
fistpll
stos
int
dec
cmp
aad
stos
ljmp
pop
lods
in
insl
packuswb
xchg
ret
imull
pop
push
daa
mov
iret
and
data16
pushf
test
fisttpll
cmpsl
mov
or
out
xor
sbb
dec
sbbb
mov
adc
icebp
push
lods
shl
les
dec
xchg
fidivl
xor
push
repnz
pop
xchg
mov
outsb
js
or
icebp
and
push
xchg
mov
ja
xchg
cmp
xchg
movsl
sub
jb
adc
xor
clc
divl
push
pop
adc
in
testl
fwait
repnz
scas
in
inc
addr16
mov
lahf
lahf
mov
jb
rcrb
fdivs
xchg
inc
inc
xor
movsb
sbbl
adc
repz
shl
aaa
dec
push
mov
dec
jp
cmp
and
cmp
lods
xchg
jne
inc
roll
pop
cltd
cmp
adc
mov
inc
insl
hlt
stc
adc
in
cmpsl
into
mov
aad
out
inc
mov
cmp
insl
or
inc
xor
adc
jae
or
cmp
das
je
mov
jmp
mov
push
push
enter
and
stos
in
imul
sub
add
xchg
xchg
lret
out
cli
ficompl
ret
repnz
cmpsl
pop
imul
sub
jecxz
mov
jp
pop
and
jbe
std
fsubs
movb
aad
dec
ret
nop
fisttpll
fnstsw
rdtsc
inc
cmp
ljmp
cli
js
or
sub
stos
cmp
jmp
std
mov
cmp
dec
dec
loope
or
ret
cwtl
vmaxps
into
jo
adc
and
aad
lret
inc
lock
sub
stc
movsb
in
test
addr16
mov
fs
imul
push
xor
push
fdivl
push
jnp
jp
pusha
andb
movsl
pusha
sahf
insb
or
imul
or
xchg
das
in
fdiv
inc
lret
jns
faddl
add
fldt
in
push
jne
adc
cmpl
push
ficoms
and
les
shl
xor
mov
xor
cmpsb
jno
push
stc
jne
cmc
cmp
cmc
and
and
imul
mov
fmul
mov
push
ds
repz
xchg
divl
jo
add
mov
stc
shrl
lret
adc
jno
push
mov
mov
and
icebp
cli
ljmp
or
scas
pop
or
fnstcw
mov
sbb
xchg
cmpsl
lods
push
sbb
mov
repz
std
jle
cmpsb
or
dec
or
insb
fwait
sbb
lret
rcll
in
in
aaa
mov
cmpsb
sbb
push
or
aam
mov
cmp
xchg
ja
sbb
dec
add
inc
push
dec
scas
inc
inc
jo
push
push
orl
pop
insb
add
movaps
movsl
ljmp
jae
jbe
cmp
sub
dec
inc
adc
pop
daa
sbb
pushf
mov
iret
inc
lods
adc
scas
sub
xchg
jb
inc
lret
sub
nop
scas
shrb
rcrl
and
and
loope
add
mov
inc
cmp
push
outsb
stos
roll
xchg
pop
sub
pop
movhps
dec
jp
mov
adc
xor
jmp
push
jns
movsb
sti
jbe
daa
lret
orb
mov
loopne
add
cltd
jl
cmpsl
push
lds
pop
push
outsb
push
jae
ja
or
and
sbb
shlb
out
sti
jl
inc
inc
repz
jmp
pushf
shlb
push
nop
mov
int
into
sub
inc
add
outsl
hlt
aas
das
out
sub
rcrb
or
lret
mov
lcall
into
imul
pop
mov
test
push
add
out
mov
jns
dec
divb
cmp
out
jbe
sub
and
shll
sbb
popf
ds
jb
xchg
pop
and
insl
pop
out
out
mov
adc
pop
ret
sub
test
pusha
push
dec
pop
enter
scas
imul
sbb
xchg
cld
leave
into
sbb
sbb
push
out
and
sub
inc
out
dec
lods
cwtl
cmp
and
jle
jmp
mov
inc
adc
ss
xchg
mov
sub
dec
mov
test
pop
pusha
push
pop
sub
cmpsl
mov
test
jecxz
push
xor
dec
mov
push
loop
mov
jecxz
call
jg
pop
add
popa
push
aam
xor
jl
mov
xor
das
sbb
imul
gs
jp
mov
mov
popf
test
outsb
mov
mull
and
and
xchg
xchg
pusha
jmp
pop
bound
leave
lock
mov
add
popf
fildll
iret
aaa
enter
ljmp
dec
mov
insl
repz
mov
xor
push
mov
inc
cwtl
dec
sub
mov
mov
mov
inc
sti
aas
xchg
idivb
cld
mov
ror
testl
adc
sbb
xchg
pop
adc
and
test
pop
divl
cltd
hlt
dec
icebp
or
dec
jbe
lods
xchg
cli
mov
mov
outsl
lcall
and
push
mov
jl
xor
fldenv
dec
mov
icebp
shlb
dec
sbb
movsl
push
jmp
push
movntps
and
dec
mov
daa
sub
lods
mov
dec
xchg
xor
lea
in
mov
push
daa
xor
out
xchg
in
roll
mov
gs
jns
push
call
fld
mov
mov
pop
pop
pusha
cmpsb
lods
lahf
lods
gs
pop
imul
mov
shlb
idivb
arpl
in
cmpsb
mov
into
mov
ljmp
clc
xor
push
roll
and
xchg
cmp
mov
jno
mov
lea
in
pusha
scas
or
xor
in
mov
add
or
int
les
jae
or
cmp
mov
rcrb
cmp
pop
mov
cli
dec
clc
sub
adc
cmpsb
inc
push
xor
pop
fwait
xor
stc
sbb
bnd
mov
mov
test
push
lea
or
das
test
ret
les
push
movsl
add
mov
call
xchg
cltd
xor
and
subl
fldcw
and
int3
or
push
movsl
inc
adc
dec
cltd
mov
push
icebp
push
stos
out
ss
inc
mov
or
xor
mov
mull
clc
jg
hlt
mov
icebp
ds
pop
sahf
movb
cwtl
xchg
sub
repz
or
push
stos
jno
cmc
nop
sub
jecxz
adc
cmp
mov
test
add
mov
dec
jl
lcall
hlt
push
lea
orb
jnp
aaa
push
and
insl
inc
mov
scas
add
cmp
mov
mov
xchg
nop
adc
sbb
int
jle
push
into
and
frstor
mov
arpl
popf
ljmp
mov
xchg
sub
sub
mov
mov
nop
sahf
imul
scas
das
notl
cmp
push
pop
lcall
sti
frstor
mov
leave
in
ja
push
shrb
xor
flds
popa
bound
xchg
out
jnp
adc
aam
out
mov
iret
rorl
jnp
and
xchg
lea
outsl
mov
push
into
ret
negb
aaa
mov
icebp
pop
xor
daa
jmp
cli
jp
mov
test
sar
lea
cwtl
mov
or
push
popf
fmull
loope
jnp
negl
lock
pop
xchg
insl
xor
sub
into
les
repz
jb
xchg
xor
add
mov
jge
fimull
dec
and
xor
cmpsl
xchg
dec
pop
xchg
aaa
clc
lds
mov
je
jo
xchg
mov
pop
imul
push
mov
or
mov
mov
fucomip
mov
jne
scas
in
dec
movsl
xchg
inc
push
aas
and
and
imul
rorl
cmp
cld
mov
imul
pop
push
inc
push
xchg
mov
hlt
jnp
pop
xchg
push
cmp
les
out
lock
lds
mov
jmp
or
outsl
aas
dec
nop
dec
add
mov
aaa
xor
fdivrp
adc
sub
mov
imul
je
mov
dec
les
in
fcmovnbe
subl
jo
mov
or
jb
ds
jl
mov
clc
lods
int
lea
sbb
ret
sub
push
lcall
lret
cli
cwtl
xchg
pop
pop
mov
lds
iret
imul
les
and
mov
incl
or
mull
mov
cmp
jne
lret
clc
push
hlt
xor
mov
insl
enter
nop
ja
xchg
mov
shrb
jmp
push
pop
or
inc
pop
test
incb
or
inc
rcrl
cmp
adc
sbb
mov
shll
divl
dec
sbb
xchg
inc
xchg
fiadds
movsb
ret
movb
cmp
jnp
stos
ficomps
sub
shr
pop
adc
push
xchg
adc
mov
mov
nop
ror
dec
repnz
and
mov
push
adc
shrb
test
popf
pop
dec
stos
sub
sti
repnz
int
rcll
aam
call
add
or
js
mov
xchg
shr
test
and
push
xchg
pushf
add
inc
clc
push
or
inc
sti
fisubrl
or
iret
xchg
and
sub
call
fidivrs
fcoml
sti
pminsw
mov
sti
pop
jo
add
jo
push
jo
iret
inc
out
imul
cmp
mov
arpl
mov
pusha
inc
or
push
iret
inc
rcl
or
mov
cmp
inc
mov
inc
push
sbb
mov
outsl
xchg
cmp
mov
sub
inc
cmp
add
sub
js
adc
push
mov
jle
dec
xor
fcmovnu
mov
sub
jge
ds
repnz
jg
cld
mov
add
scas
dec
pop
pop
lret
mov
ret
clc
inc
push
jne
aas
roll
out
movsl
stos
lds
ss
loopne
popf
out
cmp
loop
shll
jle
mov
dec
mov
push
xchg
sbb
add
mov
jb
mov
push
jne
outsb
imul
sub
out
fdivr
rolb
sub
jae
mov
aaa
fldt
sahf
mov
or
fnsave
ja
lods
fs
pusha
stos
inc
rcl
call
adc
js
xchg
jns
pop
jo
hlt
adc
fists
dec
or
test
push
adc
pop
fstps
sbb
rolb
mov
fnstenv
ficoml
mov
or
add
test
sub
popa
sbb
pop
fucomip
and
fs
fs
ficomps
inc
lock
sbb
fimuls
inc
cltd
iret
push
push
inc
mov
cli
rcrl
jg
cmp
sbb
enter
mov
sahf
push
aam
lret
jno
icebp
pop
dec
decb
inc
cltd
push
nop
in
les
cmp
jge
std
sbb
mov
loope
cld
or
mov
cmp
mov
pop
push
adc
in
and
fcomi
fs
sub
push
and
mov
dec
pop
loop
mov
in
and
fdivrp
sarb
push
imul
movsb
sti
out
dec
ljmp
mov
ret
xchg
xchg
into
jp
inc
bound
mov
lret
adc
push
xchg
imulb
pop
dec
sub
lea
stos
push
mov
jp
scas
sbb
fldt
sbb
scas
outsb
xor
mov
cmp
aaa
outsl
pushf
out
sub
xchg
mov
repnz
inc
push
subb
mov
out
or
out
mov
pushf
push
dec
xchg
mov
cwtl
aaa
dec
insb
sbb
add
or
aad
addr16
pop
dec
iret
into
dec
in
scas
push
pop
dec
fsubl
aaa
popa
out
push
cmp
push
pop
les
ljmp
add
pop
out
dec
into
push
jae
pop
dec
lods
add
push
or
ss
jo
or
js
mov
je
or
popa
cld
es
jne
testb
jne
jmp
sub
popa
add
push
add
jne
add
iret
add
and
sub
aaa
sub
mov
sbb
into
out
loope
mov
push
and
popl
push
hlt
mov
pop
fwait
ret
lock
xchg
cmpsl
inc
pop
mov
dec
and
lea
std
mov
dec
pop
hlt
mov
push
mov
add
nop
pop
out
cmp
cmp
pop
mov
sbb
fdivs
jl
movsl
into
or
call
cmp
lret
xchg
jge,pt
mov
dec
ljmp
lock
and
pop
xor
ret
mov
lods
add
or
mov
or
mov
repz
aad
cmp
push
add
pop
or
test
imul
fnstenv
jecxz
push
test
std
bound
imul
gs
mov
addr16
mov
rcl
cltd
movsb
xor
rcrl
push
fdivrs
inc
out
jge
sub
repnz
push
and
sbb
mov
iret
jg
sbb
pop
pushf
or
lods
cmpb
fsts
out
push
cmpsl
lock
jno
cs
cld
loop
lea
mov
mov
imul
fnstsw
pop
loopne
cmp
mov
and
xchg
xchg
pop
or
mov
pop
pop
mov
push
xor
mov
outsl
sub
xchg
leave
outsl
ljmp
shrl
in
popa
and
jbe
pusha
mov
cmp
cmp
popf
push
lods
fisubl
ljmp
xchg
sets
mov
enter
xchg
dec
insl
lea
movsb
fwait
fs
rorb
scas
movsb
out
testb
push
subl
adc
adc
js
lea
sub
test
repz
ret
loopne
gs
jbe
aaa
loopne
xor
or
xchg
ja
mov
push
sarb
inc
loope
loop
jl
popf
dec
add
sarb
pop
jnp
adc
arpl
add
clc
mov
shlb
sbbl
sbb
dec
add
aam
pushf
cmp
cmpsb
mov
mov
inc
sub
scas
cmp
jecxz
shl
das
cmp
arpl
adc
je
jecxz
daa
jne
pusha
adc
clc
cs
mov
stos
mov
jnp
jnp
jno
pushf
out
in
mov
adc
outsl
mov
adc
dec
sti
les
flds
repnz
aas
inc
inc
loop
add
jl
mov
ficoms
stos
push
fstps
cs
inc
push
imul
mov
movsl
push
lahf
cs
dec
dec
nop
in
testb
out
jp
testl
in
orl
jl
ror
mov
lods
pop
shrl
js
outsb
out
outsb
loopne
inc
cmp
xor
vmread
xchg
inc
ljmp
sub
mov
xchg
mov
adc
mov
jp
xor
fwait
fwait
push
mov
movb
or
xor
xor
js
ja
faddl
pop
popf
mov
push
mov
xor
pop
movsb
shrl
xchg
js
and
sbb
xchg
push
popa
push
or
mov
movsb
xor
lods
jg
imul
lea
jmp
sub
mov
mov
mov
std
pusha
mov
enter
popa
xor
push
ficoms
pop
pop
pop
jmp
mov
adc
fildl
fsts
mov
sti
gs
in
es
pop
sbb
sbb
cmp
lock
rcl
mov
mov
inc
and
sti
xchg
add
roll
mov
lahf
push
push
xor
push
dec
xchg
imul
mov
adc
lea
inc
sub
and
xor
repnz
push
push
leave
mov
loop
scas
mov
add
cmpsl
mov
loopne
cmp
enter
cmpsl
dec
out
call
in
xchg
jecxz
mov
addl
fbstp
jmp
push
cmp
cmc
and
inc
pop
mov
xchg
xchg
dec
xchg
sub
das
gs
js
addr16
cmpl
cmp
adc
or
mov
pop
mov
roll
jl
bnd
mov
mov
scas
sbb
ja
icebp
mov
ljmp
mov
lahf
add
pop
ja
cld
jae
fidivs
test
and
dec
das
pop
sbb
jb
pop
mov
lcall
inc
fucomi
pop
les
imul
sbb
daa
in
shlb
jge
mov
js
push
int3
pop
inc
jae
repz
mov
test
mov
inc
push
negl
jo
jns
mov
fcmovu
fsubs
in
xchg
mov
scas
xchg
test
cmp
mov
xor
xlat
sub
hlt
push
adc
inc
std
es
test
int
adc
fs
fcomps
out
push
or
in
aad
fbstp
idiv
xchg
js
decl
sub
stc
xor
xchg
mov
cli
shlb
aad
add
cmpsl
xor
push
repnz
test
cld
ljmp
hlt
ds
nop
pop
mov
outsl
jae
fisttpll
mov
pop
xor
mov
add
jns
pop
cmp
push
cwtl
mov
es
repz
cmpb
mov
aas
jno
ds
jg
nop
add
pop
jne
iret
lods
mov
push
in
lret
adc
shlb
pop
out
pop
inc
sbb
int
pop
loopne
lahf
add
jmp
jne
fdivl
clc
mov
ljmp
inc
cmp
cmp
sahf
testb
mov
inc
adc
pop
fwait
xor
sbb
int
fisubrs
mov
in
sahf
je
sub
mov
test
xchg
inc
addr16
cmpsb
jbe
leave
and
out
inc
xor
sub
je
outsb
inc
jmp
inc
outsl
sbb
sub
mov
xlat
cmpsl
xor
mov
aad
repnz
lea
iret
mov
sub
shlb
imul
jns
fs
jae
mov
test
outsb
pushl
jno
mov
push
push
lods
cli
xrelease
add
adc
push
add
loopne
cmp
mov
lret
mov
les
cmc
mov
sbbl
inc
out
fistps
mov
xor
shll
ja
and
test
test
out
mov
mov
xchg
dec
pushf
js
xor
test
sub
jne
push
dec
pop
xchg
shrl
jns
leave
jne
jne
loop
sbb
jbe
inc
das
jbe
cmp
lock
test
stc
insb
shll
mov
sub
cmp
loope
iret
aas
push
mov
add
outsl
cmp
lahf
xchg
mov
jmp
mov
adc
xchg
out
jno
sti
push
inc
cmp
and
sub
testl
andb
cmp
adc
dec
std
lahf
jg
xchg
adc
mov
das
jae
sbb
inc
cmpsb
aas
inc
addl
mov
aad
jg
cwtl
cmp
dec
xor
add
leave
in
mov
cmpsl
dec
rolb
push
inc
nop
or
adc
push
or
sub
loope
shrl
inc
popa
cmp
mul
in
das
push
mov
mov
push
sbb
sahf
xor
mov
mov
add
add
fdivrs
mov
adc
mov
mov
xchg
inc
add
movzbl
add
xor
inc
lea
inc
mov
inc
mov
inc
dec
jne
sub
mov
mov
inc
pop
dec
add
pop
lea
movsbl
pop
mov
mov
lea
xor
inc
dec
mov
movswl
dec
or
movzbl
add
ret
push
push
inc
mov
push
mov
add
dec
mov
mov
dec
push
mov
and
sub
mov
push
imul
sub
dec
add
mov
inc
lea
push
inc
mov
dec
push
lea
movsbl
xor
dec
movswl
push
and
dec
push
add
add
pushl
lea
call
add
add
dec
add
sub
lea
inc
movsbl
mov
pop
ret
lea
lea
cmp
jb
sub
xor
and
dec
mov
mov
mov
and
movzwl
inc
mov
dec
mov
imul
lea
dec
mov
lea
sub
cmp
jb
dec
pop
dec
dec
movzwl
lea
inc
inc
add
inc
sub
xor
dec
xor
mov
dec
xor
inc
xor
mov
dec
and
test
jbe
lea
mov
lea
inc
imul
inc
inc
or
mov
mov
movswl
lea
and
and
sub
mov
mov
lea
movzbl
add
and
add
imul
and
sub
mov
mov
lea
movzwl
mov
add
lea
mov
mov
sub
mov
sub
mov
mov
inc
sub
mov
dec
jne
mov
mov
imul
mov
movzbl
imul
sub
dec
dec
lea
inc
mov
add
add
sub
sub
inc
mov
and
inc
mov
or
mov
test
jbe
xor
mov
lea
add
inc
inc
and
add
lea
lea
inc
sub
lea
dec
and
inc
dec
lea
inc
add
mov
mov
and
add
add
mov
add
mov
movzbl
and
mov
add
or
dec
and
inc
add
mov
or
xor
movzbl
dec
imul
mov
lea
dec
mov
dec
mov
movzbl
lea
inc
add
mov
jmp
push
movzbl
mov
mov
dec
inc
lea
inc
dec
sub
xor
sub
lea
and
dec
inc
or
mov
mov
movswl
dec
dec
dec
xor
mov
add
inc
add
sub
mov
mov
dec
lea
dec
dec
mov
sub
imul
add
xor
cmp
je
add
inc
dec
push
lea
call
call
sub
lea
call
call
mov
add
inc
sub
mov
or
mov
ret
inc
mov
pop
mov
ret
push
sub
inc
lea
movzbl
dec
push
mov
mov
push
inc
push
inc
push
mov
and
lea
mov
dec
call
sub
push
lea
mov
xor
inc
sub
mov
neg
xor
dec
inc
add
sub
add
mov
dec
mov
mov
dec
lea
inc
inc
lea
dec
je
add
sub
movswl
mov
inc
xor
mov
dec
mov
add
mov
repnz
dec
inc
add
inc
jmp
inc
inc
inc
lea
imul
lea
and
lea
add
dec
dec
dec
lea
inc
jmp
mov
shlb
or
cmp
loope
mov
je
add
dec
stc
fwait
stc
mov
or
sbb
push
sbb
roll
mov
mov
es
mov
pop
int
add
dec
in
iret
push
xor
in
push
xor
mov
movsl
dec
imul
add
xchg
cmp
adc
out
ja
or
imul
test
jp
inc
mov
aam
inc
push
mov
cmc
pop
shl
loop
inc
in
push
or
ljmp
mov
dec
lods
adc
repz
sub
adc
sub
lret
daa
push
pop
cltd
mov
sbbl
and
pop
sahf
mov
in
add
push
inc
mov
sub
stc
ljmp
ja
ds
in
sbb
movsb
stos
cwtl
std
into
jg
mov
dec
xlat
mov
sub
push
push
dec
faddl
xor
add
loope
pop
jno
mov
call
test
mov
lods
add
outsb
fs
lret
add
aaa
in
out
fisubrl
mov
adc
call
fdivr
add
lea
arpl
nop
je
clc
dec
xor
divl
rcl
icebp
dec
jno
mov
test
pop
push
sbbl
sub
in
lret
je
pop
pop
seta
ljmp
cmpsl
lcall
mov
ret
test
lods
in
xlat
xchg
jp
int
or
iret
shrb
cmp
mov
inc
shl
sub
xor
dec
mov
ljmp
dec
add
cmp
repz
mov
pop
cmp
dec
cmpsl
out
int3
stos
ds
fstps
sub
sti
pop
jecxz
leave
dec
sub
inc
cmp
pop
lea
rcl
add
push
int
out
mov
xchg
cwtl
imul
fsts
mov
jmp
in
push
cmpl
jge
jmp
aaa
cmpsl
push
xor
outsb
call
test
hlt
push
outsb
mov
cli
fnstenv
add
test
jecxz
xchg
push
cmc
push
mov
xchg
lods
mov
add
push
in
stos
push
inc
pusha
or
clc
or
in
jg
xor
scas
nop
inc
push
arpl
pop
mov
push
cmp
inc
or
xor
cmpl
push
pop
xchg
test
repnz
mov
rolb
stc
clc
inc
aaa
out
jae
xlat
adc
pop
add
xchg
push
sbb
mov
mov
sti
dec
in
sbb
inc
pop
add
fmul
fldlg2
jecxz
lcall
mov
adc
adc
mov
in
cltd
or
push
pop
jns
or
incl
rorl
or
xchg
scas
stos
cmp
push
es
inc
into
or
push
pop
jae
scas
push
int
dec
fcomp
fistpl
lahf
lock
aad
fadds
or
ret
push
out
mov
fsubs
insl
adc
mov
push
jecxz
out
lahf
std
push
adc
jbe
lods
js
loop
jge
testl
negl
imul
inc
popa
mov
cmc
mov
mov
jp
loop
sahf
adcb
rclb
mov
fidivrl
enter
ljmp
shlb
sbb
dec
adc
ret
adc
adc
call
jp
pop
mov
int
lds
pop
or
stos
bound
je
jge
mov
inc
out
xor
les
loop
push
out
pop
sbb
aad
std
jl
sub
dec
sbb
leave
push
mov
stc
cmp
dec
lret
dec
movsb
or
adc
daa
loop
or
movsb
shl
sub
movsb
jae
test
cmpsb
dec
test
xchg
xor
push
mov
enter
cmp
push
mov
or
testb
outsl
popa
icebp
sbb
clc
insb
adc
xor
and
mov
aaa
out
push
dec
xchg
xorl
cmp
cltd
decl
sti
shl
decb
addr16
jge
stos
dec
or
xchg
out
xchg
dec
inc
adc
ljmp
xchg
xchg
push
imul
mov
gs
xchg
jecxz
fisttpl
sbb
add
pop
lret
cld
ror
jno
xchg
and
mov
das
gs
sub
rcr
cmp
fadds
dec
into
mov
xchg
insl
pop
push
sahf
mov
mov
imul
pop
cmp
and
cmc
inc
mov
sbb
fistl
mov
pop
sbb
jae
stos
jmp
and
sarb
fwait
and
rol
add
mov
adc
inc
iret
in
jg
lahf
outsb
mov
rorl
mov
aad
mov
xchg
inc
scas
pop
ficoml
fwait
sbb
fidivrl
es
jb
out
push
push
popf
cmc
push
ja
fisubrl
cltd
cmp
cli
icebp
outsl
orps
iret
movsb
sbb
pop
arpl
jle
dec
fmuls
jb
pop
cmp
lahf
mov
shll
xchg
or
and
pop
sarl
dec
push
lods
xchg
fs
push
hlt
pop
jge
sub
in
lahf
dec
add
shll
stc
xchg
les
push
cmp
lods
and
mov
lahf
sbb
dec
sarb
bound
stos
rcl
in
mov
scas
test
jns
lock
loopne
or
iret
clc
xor
aas
dec
mov
push
popf
xchg
push
xchg
mov
cmovnp
insb
lock
insb
cwtl
stos
std
push
pop
add
test
repnz
mov
rorb
cmp
xor
jl
and
out
pop
out
je
xchg
shrl
loope
lea
rcrb
pop
je
sub
imull
sub
lock
and
and
lret
dec
add
pop
sub
mulb
xor
xchg
push
sbb
or
pop
pop
cmp
xor
sub
and
mov
loop
jb
test
xor
xor
out
inc
popf
xchg
and
cld
push
out
stos
andb
stc
int3
ljmp
mov
push
lods
inc
dec
jmp
jb
movl
jbe
fcomp
sub
shll
pusha
adc
rcrb
ss
push
inc
push
jns
cld
and
fcompl
das
or
fdivl
push
aaa
sub
xchg
ss
jb
inc
adc
movsb
dec
testl
push
out
cmp
and
sbb
adc
test
jg
cltd
cmpl
mov
das
and
out
jle
jns
sub
push
loope
pop
push
call
jmp
or
xchg
test
scas
or
xchg
push
int3
push
scas
mov
movsb
jbe
ror
clc
and
stos
mov
std
or
data16
jg
iret
mov
lods
pusha
ljmp
cmp
mov
int3
cwtl
and
mov
test
loopne
mov
int3
mov
adcl
lods
cmp
jp
mov
cwtl
shrb
insb
adcw
ljmp
pop
pop
push
popf
lods
test
rcll
movsb
pop
add
lahf
ret
inc
mov
ljmp
or
adc
stos
shrb
adc
test
daa
shlb
imul
in
aaa
sbb
jns
and
lahf
mov
jb
nop
jnp
movsl
outsb
push
dec
jmp
fsubs
pop
mov
mov
rolb
sahf
xor
jp
js
sub
mov
push
pop
xchg
in
sbb
dec
out
addr16
push
xor
int3
or
xor
inc
insb
mov
subb
or
sbb
aas
insb
push
add
sbbl
pop
frstor
mov
pushf
sbb
ret
adc
fwait
sbb
ffreep
xlat
ret
cmp
jae
sahf
shll
cmpsb
in
fstps
xchg
pop
push
sti
shlb
sub
mov
enter
int
lahf
and
addr16
mov
dec
lds
push
add
inc
lret
mov
cmp
jmp
sti
sub
call
xchg
mov
pop
je
adcb
fstpl
xchg
sub
out
sahf
cmp
dec
push
push
xchg
add
jbe
test
lock
and
push
cmp
js
incb
xchg
xchg
pop
pop
dec
mov
pop
test
mov
lods
sub
sbb
cltd
ja
mov
sbb
fsts
cmc
aas
insb
aas
jnp
fsubrl
inc
pop
fdivrp
testb
mov
out
mov
les
xor
sbb
shlb
daa
repz
or
adc
fimull
loopne
and
jne
bnd
clc
jl
push
jmp
and
imul
enter
ret
xchg
sub
mov
outsl
sub
mov
enter
into
fdivrl
sti
pusha
add
sub
and
pop
mov
sti
mov
add
push
pusha
aaa
subl
mov
pop
pusha
lret
in
cmp
or
push
iret
dec
push
movsl
imul
test
xchg
nop
ds
dec
cmp
jge
pop
and
push
mov
fwait
stos
mov
dec
jmp
pop
mov
jecxz
push
xchg
into
fldcw
repnz
xor
shr
lcall
push
loopne
push
inc
cltd
je
xor
xor
imul
rcll
loopne
jno
mov
or
sub
leave
or
outsl
adc
mov
rcrb
xor
loope
decb
aas
outsl
fs
add
movsl
lret
lods
lods
or
add
push
push
das
loope
fistps
add
rcll
pop
sbb
cmp
cltd
out
mov
addr16
icebp
sub
popa
adc
sahf
rolb
xchg
arpl
xor
xchg
sub
pop
repnz
in
or
imul
test
mov
leave
and
or
xor
shr
addr16
cs
popf
es
test
dec
and
hlt
cmp
lds
movsl
xor
mov
adc
xchg
lahf
or
insl
repnz
sub
inc
lods
fnstenv
dec
fisttps
loop
lods
jecxz
push
ret
stos
test
xchg
lods
lahf
cld
lahf
lock
add
or
popf
add
outsb
mov
scas
add
add
sbb
rclb
mov
movsb
sahf
scas
cmpsl
mov
dec
sbb
or
pop
xor
negb
mov
sbb
push
and
inc
jb
andps
hlt
imul
arpl
imul
cmpl
sub
xchg
adc
and
pop
xchg
or
pop
fimull
inc
dec
std
inc
and
sbb
rcr
mov
pop
repnz
mov
sbbl
shrl
sbb
mov
fidivl
mov
test
push
xchg
aad
pop
scas
test
fxtract
int3
idivb
cmp
sahf
sti
adc
adc
mov
out
adc
out
mov
cwtl
push
rcll
filds
aam
inc
cltd
or
popa
arpl
into
jb
scas
mov
push
xor
and
xchg
mov
mov
mov
dec
movsl
xchg
jmp
test
outsb
push
pop
push
cmpsl
pop
mov
mov
dec
xchg
mov
mov
xor
mov
cmp
sahf
sub
int
fs
mov
xlat
stos
ret
mov
xchg
jg
test
lds
pop
jnp
dec
js
push
jno
popl
data16
fidivrs
pop
inc
xchg
or
add
xlat
adc
jnp
or
out
call
inc
sub
cmc
jp
sub
testb
dec
xlat
mov
cmp
cmp
scas
das
pop
cltd
inc
adc
out
outsb
orb
pop
sub
mov
mov
iret
leave
pop
mov
outsl
sbb
or
sar
stc
pop
pop
cmpsl
arpl
fdivs
js
mov
push
cs
cmp
cmp
insl
data16
adc
lea
lds
div
jbe
mov
jns
icebp
imul
aas
fwait
int3
adc
jmp
xor
jmp
or
cmp
mov
fildl
mov
jns
push
push
shrb
xor
add
xchg
movsl
pop
xor
push
call
xchg
jbe
mov
call
push
push
mov
adc
push
adc
bound
dec
stos
pop
rorb
call
jg
out
and
loop
cmp
outsb
mov
aam
cwtl
hlt
nop
lods
add
xchg
sti
pop
adcl
es
and
lret
mov
loopne
sbb
cwtl
xchg
jg
pop
bound
xor
aaa
sahf
sub
aam
insl
jl
jbe
daa
xchg
movsl
mov
int3
jl
ljmp
popf
dec
mull
mov
fs
test
cmp
fidivrs
pop
sbb
in
push
mov
mov
mov
jecxz
mov
cmp
mov
mov
dec
fs
vgetmantsd
sbb
repz
mov
sbb
and
mov
frstor
repnz
dec
insl
div
imul
inc
lret
lea
ja
aam
mov
ljmp
das
cli
cmp
fadds
mov
movsw
mov
scas
fisttpl
dec
pop
inc
imul
insl
push
jl
jae
sub
xchg
arpl
jge
inc
and
leave
mov
ret
mov
push
jmp
fstps
push
xchg
jmp
mov
sub
js
jae
pop
add
subb
scas
add
cmpsl
cmp
notl
mov
std
ja
mov
add
pop
pop
and
dec
insb
cmp
jmp
mov
pop
mov
ljmp
xchg
mov
lsl
inc
or
pop
faddl
dec
sbb
icebp
lock
mov
lret
mov
cltd
adc
aas
aam
mov
and
or
in
pop
orl
sub
call
mov
lea
call
dec
push
add
call
sub
add
sub
dec
mov
imul
call
add
sub
mov
or
lea
sub
mov
movzwl
sub
mov
and
inc
or
lea
call
dec
add
mov
xor
or
call
mov
mov
call
add
dec
add
dec
xor
dec
mov
dec
pop
dec
inc
sub
add
or
pop
mov
mov
pop
dec
lea
mov
mov
pop
mov
mov
inc
inc
add
and
mov
lea
pop
add
dec
pop
sub
inc
mov
mov
imul
call
mov
lea
imul
inc
ret
inc
add
push
lea
mov
push
dec
dec
push
movzbl
dec
push
lea
mov
push
mov
mov
and
mov
push
inc
ret
push
movsbl
push
movsbl
lea
dec
push
movsbl
inc
add
call
pop
ret
jmp
lea
dec
pop
pop
ret
push
mov
dec
movsbl
imul
sub
inc
lea
mov
lea
mov
add
mov
dec
add
inc
mov
sub
inc
mov
movzwl
add
mov
imul
lea
xor
imul
inc
lea
pop
ret
sub
inc
mov
sub
mov
mov
mov
mov
mov
sub
movzbl
mov
mov
lea
xor
inc
or
mov
mov
inc
inc
inc
mov
movzwl
dec
dec
add
cmp
jb
inc
push
imul
mov
push
xor
sub
push
dec
dec
xor
dec
inc
xor
inc
sub
xor
mov
lea
push
add
mov
push
mov
dec
pop
xor
movswl
dec
imul
inc
add
lea
imul
mov
mov
xor
xor
movsbl
mov
imul
movzbl
mov
xor
inc
movzbl
dec
xor
inc
or
add
xor
dec
add
movzwl
inc
movzbl
dec
lea
dec
mov
dec
imul
inc
dec
add
mov
inc
xor
dec
jmp
add
inc
add
icebp
inc
add
adc
add
ret
add
filds
inc
add
int
add
add
popl
addb
mov
out
pop
mov
outsl
fs
jbe
sub
clc
push
push
cmp
push
sbb
mov
xchg
inc
rol
arpl
and
outsl
mov
repnz
addl
and
sub
inc
xchg
icebp
adc
stos
xor
repz
testl
and
enter
aam
jp
xchg
loope
pushl
mov
pushf
outsb
repz
xlat
push
in
add
add
mov
inc
fnsave
mov
pusha
shll
or
std
cmp
mov
xchg
cs
jmp
mov
out
push
jae
mov
ret
cwtl
scas
ds
mov
js
cltd
xchg
mov
cmc
mov
mov
push
test
in
inc
and
lods
or
mov
jbe
cmp
mov
push
xchg
mov
mov
stos
test
push
outsb
xlat
mov
in
pop
ret
cld
sbb
mov
mov
inc
pop
inc
jl
je
iret
pushf
mov
pop
mov
sti
dec
xor
loope
mov
cwtl
aad
inc
mov
adc
xor
popf
pop
lock
jg
lret
imul
xchg
in
xchg
jno
roll
ret
faddl
sub
je
sti
out
out
inc
push
lret
dec
and
lcall
cld
mov
lods
dec
dec
scas
xchg
dec
pop
ds
pop
lcall
xchg
mov
push
push
dec
fsubrp
jmp
cwtl
dec
mov
xchg
and
sti
sbb
int
push
xor
stos
sahf
std
mov
mov
jo
das
lret
lock
cmp
or
in
sub
add
sahf
xchg
xchg
iret
cli
inc
mov
jo
pop
scas
out
daa
lods
enter
lret
filds
sti
enter
mov
jp
add
orl
lret
xor
or
jae
movsl
jl
stos
repnz
or
dec
cs
push
outsl
or
in
leave
fadd
add
jmp
sub
adc
popf
add
push
repz
decb
push
adc
mov
cmpsl
mov
lds
orb
mov
dec
add
xlat
loop
xor
xchg
inc
pop
cs
iret
mov
movsl
rcrl
std
call
sbb
rcll
dec
pop
push
enter
imulb
inc
gs
push
pop
inc
mov
mov
scas
js
bound
xor
adc
scas
hlt
push
adc
sbb
xor
mov
pop
pop
nop
pop
add
out
outsb
xchg
or
adc
mov
cmpsl
imulb
push
and
rolb
pusha
loop
jmp
bound
cli
or
in
mov
push
testl
sub
push
cmp
lret
pop
sbb
frstor
pop
lea
out
xorl
pop
pop
add
push
in
cmp
and
mov
shl
mov
mov
cmp
int
mov
jnp
pop
push
fidivrl
dec
cltd
push
lret
hlt
dec
mov
fisttps
fs
lret
mov
sub
nop
sub
push
mov
mov
adc
adc
cmc
xchg
dec
pushf
jae
adc
xor
shlb
clc
pop
in
pop
xchg
push
jge
nop
mov
jp
das
push
adc
enter
mov
fs
xchg
pushf
adcb
dec
jb
jecxz
fwait
mov
mov
andl
adc
loopne
imul
dec
test
mov
xchg
out
push
fbld
cmpsl
jbe
xchg
call
sub
sbb
mov
mov
jp
mov
dec
pop
call
loop
fistl
mov
cmp
sub
xor
in
or
out
push
sbb
xor
ret
xorb
push
mov
adc
mov
adc
and
scas
imul
insb
sbb
lock
mov
cli
mov
pushf
pushw
test
bound
lods
shr
ret
push
andb
dec
and
fistpll
mov
pop
inc
adc
sbb
xchg
fdiv
in
cld
into
mov
sbb
je
in
mov
jmp
push
mov
jle
xchg
lock
sarb
sub
dec
cmp
sub
outsb
fidivrl
sub
popf
repnz
xlat
pop
insl
xor
insl
push
push
jecxz
cwtl
sbb
dec
repnz
or
sub
push
xor
gs
and
and
leave
adcl
or
cltd
aad
push
mov
aaa
sbb
int3
scas
sbb
fs
loopne
sbb
cld
pop
punpckhdq
mov
dec
outsl
cmp
lods
insb
stc
push
push
mov
push
inc
or
imull
sub
xor
dec
push
push
in
push
sbb
jnp
cltd
jge
dec
pop
jb
loopne
lret
imul
cmpsl
leave
call
push
jmp
sub
repnz
jle
pop
jnp
loopne
and
jnp
out
pop
add
imul
les
sbb
cltd
jmp
sbb
repnz
xchg
or
into
pop
push
in
and
sub
icebp
cld
adc
and
loope
sbb
in
lcall
jl
mov
sbb
xchg
jl
aad
push
cld
nop
or
push
jle
cmpsb
xor
je
mov
xor
inc
add
hlt
cmpsb
or
repnz
les
push
imul
inc
lahf
daa
inc
lock
push
ret
jns
sub
jl
les
aaa
mov
rorb
loopne
jb
sbb
mov
push
jmp
mov
add
jne
push
xlat
cmp
mov
or
mov
pop
mov
ret
mov
fmuls
orl
lahf
mov
in
or
pop
mov
inc
push
mov
mov
lcall
add
cwtl
jg
in
mov
shll
jne
out
push
enter
lcall
xor
or
pusha
push
xor
dec
aas
dec
mov
in
mov
push
repz
xor
das
jg
into
stc
in
or
test
mov
mov
andb
pop
inc
sub
push
decl
repnz
dec
aam
mov
push
sub
xchg
sub
xchg
mov
sti
push
push
dec
out
push
fidivs
iret
mov
sbb
jecxz
xor
inc
cwtl
mov
or
movsl
add
xchg
mov
adc
call
fnstcw
movsb
iret
dec
bound
std
mov
xor
and
mov
fstpl
gs
dec
dec
leave
pop
lcall
loop
shll
ja
xchg
inc
inc
mov
lcall
pop
int
out
jl
or
cmp
push
inc
das
imul
inc
push
outsb
int3
jo
rcrb
lret
sbb
push
jg
rorl
and
or
push
icebp
std
add
ss
test
inc
or
mov
fsubrs
aam
adc
sbb
xbegin
xchg
int3
mov
mov
add
daa
add
movsb
lds
sub
xchg
shll
ret
ret
out
out
sub
jne
loope
xor
andb
aad
cli
aad
cmp
ds
cmp
cld
popl
lret
repz
push
mov
ret
add
fcomi
test
dec
pop
sub
dec
enter
testb
pop
cmp
mov
imul
rcrl
out
sub
js
xchg
pushf
mov
jle
sahf
sub
jmp
inc
dec
cmp
loope
cli
andl
repz
fisubrs
dec
adc
xor
fsubr
push
xchg
decl
loope
mov
inc
and
std
push
and
mov
shlb
cmpsb
sar
xchg
add
mov
xor
fbld
and
inc
sbb
lds
sub
xchg
aad
loope
popa
fldcw
sub
pusha
xchg
push
scas
loope
roll
add
xchg
mov
lahf
aas
pop
xorb
andl
dec
repz
jbe
fcoml
mov
pop
mov
add
pop
inc
jle
cld
lret
daa
and
aad
stos
push
out
cmc
test
mov
sahf
movsb
test
or
lods
mov
mov
in
divb
add
jno
sub
dec
sti
sub
loop
dec
pushl
dec
in
mov
lods
xchg
cltd
mov
inc
stos
test
aad
insb
inc
adc
mov
or
mov
cs
aas
sbb
imul
adc
mov
loopne
mov
mov
outsl
sbb
mov
lods
dec
mov
outsl
xor
sbb
add
and
push
mov
decb
and
xchg
scas
cmpsl
mov
fwait
sub
mov
push
adc
mov
outsb
mov
jg
mov
inc
imul
lds
sbb
lods
inc
stc
or
mov
aam
push
dec
cmp
cmp
mov
ficoms
mov
and
jb
sub
fdivrp
or
das
push
int
and
cmp
inc
jo
sub
xchg
mov
jecxz
aam
nop
jecxz
loope
mov
jo
flds
loopne
loope
and
cmp
sbb
mov
ds
ror
cltd
jl
fwait
push
lcall
stos
ret
adc
dec
or
sbb
inc
leave
roll
add
push
es
sahf
mov
pop
enter
lea
pop
xor
pop
xchg
xchg
jbe
adc
jecxz
cmp
shlb
in
or
cs
cmpb
jg
jle
and
mov
sub
jnp
mov
or
and
or
dec
iret
pushf
iret
pop
scas
test
jl
cmpsb
imul
movsb
inc
lret
add
push
int3
scas
sbb
insb
dec
icebp
pop
add
and
imul
inc
sbb
cmp
xor
out
jae
mov
and
call
test
jae
pop
adc
call
stos
dec
movsl
xchg
les
push
mov
lret
test
jmp
rclb
outsb
aaa
popf
sahf
pop
pop
jns
jmp
dec
fistpll
mov
out
shr
daa
lcall
popa
out
sti
jo
call
int3
inc
test
insb
pop
xchg
push
nop
mov
cmc
add
sbb
lret
fwait
push
lahf
sbb
cmpl
xor
and
pop
fs
rcl
scas
or
jns
scas
lods
cld
jns
mov
mov
adc
mov
testb
adc
dec
and
sub
test
test
jp
in
out
popa
movsb
ljmp
rolb
or
lock
test
push
loopne
adc
dec
push
repz
xor
inc
fadd
jp
inc
inc
call
das
jecxz
dec
xor
jo
ficompl
jns
cmp
sbb
es
xchg
aad
xor
cmc
xchg
inc
push
scas
imul
fldl
iret
sub
and
dec
push
mov
push
xor
icebp
out
cmc
push
shl
in
popa
cltd
mov
scas
dec
or
int3
mov
imul
push
and
fcmovnbe
xchg
inc
pop
out
dec
jns
adc
inc
repnz
outsl
lods
iret
sbb
ja
pushf
aam
std
addr16
loop
stos
sub
sbb
mov
inc
xchg
xlat
loope
in
inc
test
ljmp
cmpsb
stos
scas
push
inc
sbb
or
mov
ljmp
xor
mov
add
in
jge
fcmovb
xchg
insl
mov
jb
jge
or
mov
aas
loopne
push
popa
pusha
ds
into
ror
sbb
xchg
decb
stos
sbb
mov
mov
mov
push
dec
mov
call
fnstsw
mov
outsl
lea
add
int
pop
jl
mov
push
pop
into
aas
data16
xor
sub
mov
mov
jne
rep
insl
mov
jmp
scas
loop
jne
jne
jns
into
movsl
and
rclb
out
sahf
push
das
mov
or
cld
aam
mov
mov
jbe
aam
mov
in
fucomp
stc
mov
pop
jmp
and
push
lahf
insb
sti
mov
pop
popa
jmp
arpl
lcall
test
add
in
sub
mov
orb
xchg
mov
or
inc
call
mov
hlt
in
cmp
ficoml
xchg
sub
cmp
jp
sbb
test
dec
or
ret
fldenv
hlt
push
xchg
rcrb
in
jp
adc
ja
xchg
mov
shrb
xchg
xchg
cmp
fs
add
pop
add
mov
pushf
out
sub
push
jno
les
cwtl
nop
and
and
add
xor
jecxz
mov
jae
sti
mov
add
dec
pop
pop
lea
pop
inc
jns
lret
xchg
fs
inc
or
leave
or
xlat
imul
clc
stos
push
fisttpl
subb
outsb
adc
push
les
mov
sahf
loope
push
push
rcll
loop
cmp
inc
ret
or
fsub
push
push
or
cmpsb
and
les
lahf
mov
fdiv
adc
lock
loope
adc
aam
add
xchg
mov
mov
lds
jnp
rolb
lea
jns
in
jp
inc
or
add
xor
push
or
xor
je
popf
sub
sbb
stos
stc
xor
and
push
bound
dec
xchg
cmp
pop
lds
inc
inc
loope
inc
mov
je
sub
xchg
outsb
out
jb
divl
cwtl
popa
cmc
andb
repz
in
mov
lahf
stc
iret
fdivs
push
in
dec
mov
pop
xchg
jbe
add
and
pop
fmulp
outsb
cmp
jge
inc
add
insl
xchg
jb
push
dec
sub
jae
jmp
push
das
sub
stos
sub
or
cmp
sarl
jp
jp
rcrl
push
pop
movl
out
cmc
fldl
mov
add
aas
jecxz
jns
int3
adc
arpl
mov
stos
sbb
insb
or
adc
and
sub
out
cmp
xchg
xor
bound
jnp
jl
push
fs
std
inc
into
jmp
stos
xor
cmp
xchg
and
add
sbb
scas
das
cmp
xchg
fistl
insl
xchg
dec
mov
stc
adc
aam
jnp
xchg
sbb
push
inc
int
adc
fimull
or
mov
cmpsl
popf
ljmp
ss
push
fildll
and
cli
pop
or
and
aas
mov
jmp
shlb
das
sub
jmp
adcl
mov
fstpt
loope
jb
icebp
add
or
shl
dec
mulb
adc
imul
or
add
inc
repz
lods
sbb
mov
mov
into
outsl
nop
loop
dec
mov
repnz
call
jmp
cmp
push
jg
xchg
inc
sub
stos
and
xchg
cwtl
jns
jnp
dec
mov
fidivs
aas
roll
out
xchg
push
addb
push
jmp
int3
adc
sub
dec
and
push
xchg
push
stc
shlb
daa
push
loope
lahf
imul
dec
jg
movsb
mov
inc
mov
or
jae
lods
jbe
or
cld
dec
daa
add
jle
rcrl
adc
adc
sub
mov
ja
mov
mov
xorl
cli
xor
push
dec
sbb
mov
push
scas
gs
sub
push
xor
sbb
movsl
loope
cli
fwait
push
ficoms
movsl
mov
in
loop
push
aas
add
inc
inc
ret
imul
mov
mov
int
outsl
imulb
mov
xchg
in
les
dec
enter
outsl
ret
add
cmp
jmp
cmp
das
movsb
loop
push
movsb
pop
stc
cmc
repnz
cltd
or
iret
mov
faddp
mov
imul
sub
pop
pop
mov
sbb
adc
dec
add
int3
icebp
mov
mov
xchg
push
push
fs
cli
xor
lods
xor
pusha
setns
test
mov
mov
pop
mov
bound
stos
iret
sbb
push
add
mov
out
and
out
leave
add
les
mov
cmp
rorl
loopne
mov
aaa
and
jae
jmp
mov
xchg
push
sbb
jb
push
lds
cltd
mov
xchg
pop
dec
das
in
push
mov
scas
or
loope
mov
jl
mov
test
sahf
mov
xorb
loop
jg
aad
call
mov
es
push
lock
cmp
adc
jnp
sahf
sarl
sub
push
mov
je
cmp
adc
aaa
push
into
dec
cmp
jle
test
insb
sbb
xchg
cmp
xchg
jmp
jl
dec
int
test
mov
test
adc
mov
into
add
sbb
aad
fmull
jle
ss
addr16
dec
lahf
inc
fwait
sti
enter
iret
pop
mov
lret
ljmp
xchg
push
add
lea
ret
stc
xchg
das
jmp
adc
outsl
icebp
adc
sbb
in
clc
xor
mov
dec
mov
cld
mov
test
pop
pop
enter
test
in
or
movsl
imul
gs
dec
jle
inc
cwtl
xchg
jle
cmpsb
xchg
shrl
pop
sbb
and
jo
mov
push
cld
cmp
push
mov
fldt
fldenv
rclb
fcompl
dec
inc
jl
fldenv
rclb
shlb
repz
fs
rclb
js
mov
aam
lcall
xchg
popa
adc
and
lret
xor
add
aam
xor
insl
mov
sub
mov
out
lahf
out
clc
lret
xor
sub
lret
xor
xor
cmp
mov
dec
xor
lret
xchg
ret
push
fsub
pop
iret
push
mov
inc
scas
jbe
andb
dec
dec
mov
int
clc
insl
mov
aad
jo
roll
shll
push
pop
das
fwait
sbb
loop
scas
mov
movsb
sub
cmpsl
mov
outsl
int
scas
shr
ret
add
ljmp
push
ret
add
and
jno
xor
and
ljmp
xlat
aas
aas
dec
mov
push
pop
cmpsl
mov
fs
inc
mov
xchg
mov
outsl
pop
xor
test
push
stc
xorl
movsb
iret
mov
in
jle
pop
sbb
jl
xor
insb
inc
and
inc
out
adc
nop
mov
gs
add
cmpl
syscall
popa
xchg
mov
jnp
or
enter
xor
lock
aad
cwtl
out
jle
mov
cmpsl
rolb
push
adc
ds
cmp
lret
mov
lea
sub
dec
mov
cld
cmpsb
pop
dec
push
dec
test
les
outsb
xchg
ja
mov
je
push
ret
jo
dec
mov
leave
mov
or
iret
adc
lods
sbb
cmp
push
adc
dec
cmp
sbb
loopne
iret
div
and
xor
mov
mov
cli
dec
fwait
push
movsl
mov
pop
dec
test
mov
mov
lock
push
xchg
adc
inc
cmp
mov
xor
cmc
bound
sub
push
mov
jb
test
das
icebp
fldenv
fsubs
jp
imul
inc
lock
repnz
loop
test
mov
sub
inc
jecxz
push
xor
in
jle
out
lahf
popf
jnp,pn
inc
push
inc
cmp
je
push
jmp
fisubl
test
mov
ja
clc
nop
dec
push
rcrl
outsl
push
dec
mov
arpl
shll
pop
pop
or
lods
push
xor
mov
hlt
call
daa
xlat
lcall
xorb
mov
loopne
movsb
aas
test
push
mov
cmp
mov
cld
into
mov
jp
popf
add
es
lret
mov
mov
mov
sbb
xor
inc
or
inc
inc
sub
aaa
and
pop
jo
inc
loop
jne
ja
cmp
and
add
mov
scas
adc
xlat
jb
pop
add
xor
xchg
imul
mov
mov
stos
inc
loope
movsl
cmp
popl
scas
aad
clc
mov
and
cmpsb
sub
mov
daa
jge
movsb
sbb
filds
gs
gs
jno
cmp
mov
test
testb
adc
mov
mov
fldcw
enter
clc
test
jg
lods
es
and
test
lock
mov
mov
pop
rclb
push
in
push
mov
iret
add
cs
mov
xor
aad
daa
je
inc
inc
sub
pusha
adc
in
out
jecxz
fidivrl
lret
mov
mov
fnstsw
das
dec
nop
cmp
mov
pop
push
mov
sub
stc
sbb
mov
ljmp
scas
sbb
push
arpl
cmc
std
enter
fnsave
lretw
sub
jg
xchg
out
jle
aam
adc
outsb
in
movsb
push
call
xchg
and
ds
push
mov
cmp
test
int
push
cmpsl
adc
rcrw
xchg
cmp
xor
outsb
ret
imul
mov
fsubl
fmul
cmpl
mov
lea
testl
test
cmp
shrb
mov
shrb
sub
inc
cli
adc
push
in
dec
jne
jns
cmc
jne
sbb
inc
jne
mov
sti
nop
sarb
rorb
jnp
add
sub
or
rcll
fcoms
fstl
jp
outsl
sar
ja
or
mov
cld
mov
add
xchg
xchg
hlt
fidivrs
imull
rorl
hlt
std
not
adc
add
aad
lods
daa
sbb
loopne
ja
add
test
shr
fidivrs
jnp
lods
int
mov
pushf
sub
fiadds
loope
adc
push
cmp
push
xchg
outsl
aas
add
jns
mov
push
pop
pushf
aad
xchg
xlat
outsb
rclb
outsb
into
jmp
out
test
sti
call
repnz
xor
btr
aaa
push
push
inc
shufps
cs
mov
aaa
mov
cmc
sbb
cltd
loope
push
test
mov
popa
inc
adc
push
imul
idivb
cmp
push
push
shll
dec
andl
in
hlt
add
in
outsl
push
dec
mov
cmc
xchg
repnz
push
ffreep
mov
ss
push
xchg
ret
aas
xchg
mov
divb
lret
pop
js
js
mov
mov
inc
pop
jne
sbb
leave
add
dec
push
lret
hlt
iret
adcl
xor
cmpsb
inc
adc
sub
movsl
out
add
xchg
mov
bound
cltd
adc
cmpsb
xor
xlat
ljmp
insb
aas
fdivrl
loop
xor
lret
fldcw
stos
dec
ja
test
lcall
shlb
shr
int3
lods
xor
cmp
mov
jmp
mov
out
dec
adc
mov
mov
cwtl
jns
xchg
paddusb
icebp
mov
mov
lock
ljmp
shll
inc
movsb
loop
cmpsb
std
in
jmp
repnz
pop
mov
sar
jns
out
or
xchg
xor
dec
push
into
mov
or
lret
pop
jae
outsb
sub
add
mov
dec
outsl
test
daa
inc
jns
push
xchg
mov
cmp
add
mov
mov
add
and
lcall
out
lods
sub
push
pop
mov
out
fsubrs
jb
jns
jno
ret
inc
test
pushf
repnz
mov
imulb
add
pop
jno
push
je
mov
sti
dec
arpl
in
push
out
jmp
mov
mov
adc
xor
sbb
rcrb
lret
jmp
xorl
lds
loopne
cs
push
add
clc
in
or
mov
inc
push
fs
pop
insl
push
cmp
sub
imul
cmp
fucom
shrb
popf
dec
in
jmp
mov
cld
aaa
lds
data16
cmp
lods
push
cmp
ret
test
cli
movsb
test
pop
cmp
es
cld
mov
repz
aam
pop
sub
insl
bound
jg
xchg
repz
mov
daa
or
imul
sub
adc
arpl
scas
int
mov
and
mov
stc
mov
leave
push
sub
cmpsb
inc
shr
sub
jo
xchg
ljmp
inc
int
mov
sub
pop
sub
ficompl
sub
mov
sti
rcrb
in
cmp
aaa
push
jno
stc
dec
add
pop
mov
and
call
and
cld
push
sub
cmp
out
mov
or
ss
pop
adc
movsl
pop
pop
jne
push
or
cmp
imul
lret
cmpb
mov
mov
popf
mov
inc
xchg
jae
loope
in
xchg
add
cmpsb
pop
xchg
dec
insl
outsb
or
dec
mov
cmpsl
lcall
add
in
adc
mov
push
outsb
std
sbb
push
or
pop
dec
inc
xor
stc
mov
rclb
pop
cld
jae
cmp
mov
int3
push
sub
orl
fiaddl
mov
popf
jo
in
mov
lcall
push
sub
fidivrl
test
test
cmp
test
cmp
pshufw
arpl
jmp
mov
mov
dec
pushf
xchg
loopne
scas
lret
ljmp
cmp
jne
ret
jge
lock
cmp
xchg
rclb
push
and
adc
push
push
push
scas
xchg
lods
test
aaa
std
xor
test
stos
add
aam
fisubs
xchg
sbb
scas
fisubrs
push
repnz
and
test
lea
jnp
bound
cmp
mov
lds
testl
cmpsl
dec
sub
pop
or
mov
push
iret
push
ret
push
xchg
xor
test
getsec
xchg
sub
movsb
out
iret
ss
loop
cmpsb
sub
movsb
push
rorl
and
icebp
mov
mov
imul
in
lock
xchg
ja
sub
xchg
loop
enter
xor
jp
ret
sbb
in
addr16
xchg
fsts
mov
push
imul
inc
mov
aad
repnz
or
xor
xchg
mov
es
iret
rolb
pop
aas
cmp
mov
jb
jbe
sbbw
or
push
pushf
adc
add
and
pop
push
add
or
cmpsb
inc
inc
mov
mov
adc
lock
ss
or
arpl
mov
add
push
lea
dec
dec
cmp
xlat
mov
or
or
in
fisubrs
leave
lret
roll
jle
fisubrs
mov
cmp
add
or
jo
cmp
cmc
push
adc
push
in
push
ja
push
imul
outsb
lret
mov
cmp
int3
cmp
jp
sarl
xor
xor
repnz
push
cmp
push
sbb
add
sbb
cmpsl
hlt
or
push
outsb
cmp
lret
test
in
pusha
jl
mov
jae
test
or
dec
fadds
jnp
es
jno
popa
repnz
jo
out
mov
call
test
inc
addl
clc
jmp
into
orb
out
and
sub
lret
push
cmpsl
loop
movsl
ss
sar
lret
push
xor
inc
popa
movsb
cmp
pop
sub
jns
xchg
jmp
dec
lret
call
stc
fldenv
loop
push
or
jnp
adc
fsubs
adc
loopne
inc
sub
enter
jno
mov
or
cs
sub
pop
inc
sbb
or
pop
cmpsl
cmpsb
lods
jo
es
seto
and
mov
mov
mov
xchg
cwtl
jge
mov
jno
xor
shlb
aad
inc
lods
and
gs
sub
cmp
adc
cmc
mov
push
cmp
gs
aaa
pop
adc
movsb
jbe
cli
rcll
cwtl
mov
mov
cmp
lahf
clc
ja
cs
addr16
jp
add
add
sub
mov
fidivl
movsb
sahf
push
jnp
push
cmp
mov
test
adc
xchg
pop
ljmp
xor
lea
xchg
bound
test
sub
mov
mov
mov
repz
lock
mov
push
cmp
out
stos
xlat
xchg
sbb
test
or
scas
loopne
arpl
mov
sahf
insl
sub
popa
add
dec
jle
add
iret
add
add
arpl
roll
mov
xor
test
out
dec
dec
fldenv
icebp
xor
fbstp
cmp
popf
dec
pop
and
sarb
sar
repnz
fldt
sbb
dec
outsl
push
aas
ror
cltd
xchg
testl
jno
leave
jno
sub
push
cmp
mov
out
out
scas
mov
xor
jp
hlt
inc
add
std
leave
xchg
and
faddl
arpl
movlps
out
sbb
or
adc
sub
cmc
outsl
stos
out
sub
pop
sub
js
push
push
lret
jmp
out
sub
push
adc
add
and
addr16
jp
insb
push
arpl
sar
jl
pop
test
ret
adc
pop
mov
hlt
inc
adc
les
adc
iret
cmp
inc
in
imul
jb
jne
adc
jp
sub
cmpsl
jnp,pn
fnstsw
and
push
sub
mov
inc
mov
pop
fistpll
stos
jnp
pop
daa
inc
movsl
ret
mov
add
fstpt
mov
inc
xchg
scas
xchg
out
jmp
add
jae
cwtl
sbb
mov
mov
mov
mov
das
mov
adc
ret
sti
pop
shl
mov
pop
dec
sub
cmp
mov
ficoml
cmpsl
xchg
pop
aas
aas
or
mov
std
ss
dec
jo
inc
clc
inc
pop
lods
pop
cmpb
jne
popf
jmp
mov
in
push
dec
inc
ret
fwait
jle
roll
dec
cmp
call
sub
fwait
adc
dec
sub
insb
dec
loop
lahf
fcom
lcall
inc
test
and
or
mov
inc
mov
ret
sub
push
fimull
cltd
gs
add
leave
cmp
pop
in
aaa
gs
cltd
push
mov
movsl
rorl
mov
inc
das
and
cli
mov
ret
mov
cs
enter
sbb
in
scas
mov
stos
adc
rorl
inc
shll
mov
lret
sbbl
mov
je
mov
push
cmpsl
xlat
sub
inc
test
cmp
loope
jge
mov
gs
cs
cwtl
pop
lret
dec
imul
std
rcrb
or
sbb
sub
data16
pop
in
ret
stos
test
sub
mov
leave
xor
and
sti
adc
std
sbb
and
decb
insl
outsb
js
inc
out
add
or
cld
pusha
cmp
mov
pop
cmp
mov
mov
push
sbb
mov
dec
add
das
push
std
dec
or
movsl
movl
pushf
idiv
roll
pop
push
lcall
std
out
scas
inc
movsb
sarb
inc
push
dec
xor
cmp
push
sub
or
dec
push
shr
scas
insb
in
jbe
test
sbb
mov
roll
out
mov
pusha
xchg
clc
sub
mov
xor
mulb
adc
cmp
push
into
ret
lret
lods
sub
pop
cs
jmp
divl
lock
xchg
incl
out
lock
dec
adc
mov
xchg
pop
int3
mov
adcb
cmp
mov
xchg
mov
jae
je
cmp
and
cwtl
dec
pop
cmp
aad
loope
lret
inc
icebp
mov
dec
bound
mov
je
jnp
cmp
xchg
add
rcrb
sar
insb
lock
pop
mov
mov
inc
fsubrl
or
jb
mov
add
xor
jle
repz
mov
test
jne
dec
and
movsl
sbb
dec
sahf
hlt
test
sbb
push
movsl
xchg
xor
xor
out
repz
out
dec
dec
jbe
push
xlat
sbb
xchg
xchg
ss
mov
lcall
sub
xor
xchg
shl
into
mov
scas
adc
mov
xor
push
sbb
sbb
push
cs
pop
dec
or
popf
std
test
jae
cmp
fcomps
xor
cmp
inc
push
sarl
pushf
pop
je
rorl
out
int
mov
outsl
ret
inc
orl
lahf
enter
rolb
xchg
repz
bnd
jge
mov
into
lcall
outsb
imul
mov
adc
cmp
movsl
imul
sbb
sbb
push
inc
mov
and
data16
add
inc
rcrb
or
test
das
and
fcmovu
cli
xchg
iret
sahf
sub
loopne
adc
push
pop
out
adc
cmp
xchg
sbb
mov
jb
test
bound
or
fnstenv
xor
dec
push
loope
push
data16
xchg
roll
dec
sub
fsubs
into
pusha
push
and
mov
lods
push
ja
mov
repnz
in
sub
jns
in
in
inc
inc
xor
ljmp
and
int3
loopne
dec
xor
scas
gs
sub
jae
or
test
mov
xchg
inc
mov
xor
orl
jns
fdivrs
sub
mov
and
xchg
jns
mov
rcrb
mov
pop
sarb
mov
mov
xorl
mov
xchg
dec
ds
ss
mov
add
iret
enter
in
pop
roll
xchg
xlat
cmp
xchg
sbb
xlat
fistps
leave
rclb
xchg
iret
addr16
sub
in
mov
xor
in
xor
mov
idivb
mov
cld
js
inc
mov
xor
mov
inc
stc
cmp
lods
das
test
mov
add
inc
or
inc
push
call
inc
sarl
scas
lcall
in
std
jae
dec
popf
cs
push
les
mov
adc
jg
lds
or
pop
repz
mov
cmp
movsb
jle
in
mov
jp
leave
stc
and
pusha
fistpll
push
mov
sub
outsb
les
int3
mov
push
jae
mov
adc
pop
std
xchg
or
pop
jmp
xchg
aad
stc
jecxz
movsb
lret
jecxz
loope
or
test
rorl
insl
pop
imul
sbb
mov
rcl
popa
adc
mov
icebp
je
mov
jl
aas
pop
mov
inc
push
xor
pop
cld
xchg
pop
fwait
sbb
loope
mov
scas
ficoms
insl
lcall
mov
nop
sub
dec
testl
mov
repz
cmp
pop
aam
gs
aam
leave
out
xchg
pusha
cmp
cld
inc
arpl
popf
stos
adc
xchg
loopne
mov
mov
sbb
xchg
ja
mov
add
cmp
push
dec
xchg
jmp
mov
je
mov
mov
add
jb
inc
push
movsl
lret
stc
mov
aas
push
jcxz
pop
or
xor
sbb
push
daa
cmp
fldenv
incb
les
rcrb
fwait
insb
sub
rclb
push
push
mov
sub
lahf
mov
adc
add
cmp
mov
test
aas
ret
into
sbb
les
xchg
pop
adc
push
and
pop
mov
lcall
mov
jg
push
stos
aaa
jo
cmpsl
mov
stos
mov
sahf
mov
loope
pop
mov
cs
icebp
out
inc
dec
orb
adc
cmp
sub
lahf
movsb
lock
inc
adc
cltd
daa
mov
lahf
and
xchg
shrl
cmp
jne
xchg
adc
sbb
clc
mov
cmp
adc
popf
bnd
gs
and
fwait
data16
divl
inc
ret
push
mov
imul
in
into
iret
pop
cmc
pop
arpl
jp
mov
mov
jnp
enter
addr16
pop
call
aad
xor
mov
clc
adc
negb
push
mov
push
xor
cwtl
add
ret
out
xchg
jmp
xor
stos
lds
out
pop
mov
stos
push
and
adc
sub
sbbl
adc
ret
xor
hlt
aas
cmc
fcmovnbe
ret
pop
or
push
aaa
loop
push
and
ss
add
adc
mov
hlt
mov
movsb
adc
xor
xchg
sbb
dec
pop
jg
inc
in
jl
xor
xchg
push
mov
js
xor
mov
aas
aas
movsb
mov
add
popl
cwtl
fadds
lret
pop
dec
lods
cmp
add
sub
inc
sub
cmp
cld
xor
outsl
mov
dec
xor
bound
lret
stc
push
lret
in
scas
clc
movsl
popf
pop
or
loopne
xchg
push
xor
and
jmp
push
push
cmc
je
adc
jle
cs
loop
pop
dec
sub
push
dec
lahf
pop
cmp
mov
nop
sub
repnz
push
xor
lods
push
jns
andl
sub
mov
cmc
jge
push
mov
push
in
and
lcall
and
mov
adc
inc
fwait
idivb
nop
imul
loopne
mov
add
mov
les
cmpsl
pop
hlt
mov
in
ret
in
mov
imulb
push
nop
daa
xor
sbb
shl
push
adc
jg
in
mov
fiaddl
cmpsb
or
enter
pop
mov
inc
les
aam
or
cmpsl
adc
jo
mov
clc
lea
cmp
sbb
cld
jmp
icebp
mov
mov
stc
repnz
mov
int3
cmpsb
mov
jge
or
jle
sbb
mov
dec
cwtd
iret
sahf
mov
sbb
adc
sar
insl
in
push
idiv
aaa
xchg
or
pop
pop
pop
xchg
shll
je
movsl
sbb
cmp
aas
push
push
ret
push
push
xchg
add
dec
jle
arpl
xor
mov
mov
dec
sub
jmp
add
mov
loop
test
fimull
fwait
push
push
ss
or
push
cmp
loopne
cltd
pop
xor
popa
or
shrl
sub
inc
loopne
cwtl
notb
xchg
js
push
movsl
in
lds
leave
dec
in
cmpl
inc
jecxz
sub
mov
jae
push
sub
shll
movsl
sarb
cmpsb
gs
push
cmpsb
mov
cmp
sbb
mov
js
xor
arpl
aaa
fwait
dec
jle
dec
pop
cltd
cmc
sti
scas
jns
mov
push
jb
sub
dec
or
mov
mov
cmpsl
sub
repz
xchg
fisubrs
and
hlt
mov
pop
cmp
dec
aam
push
in
rorl
cs
adc
iret
les
cmp
call
push
out
movsb
lret
mov
cmp
jne
add
xchg
adc
add
mov
push
dec
sbbl
std
dec
mov
std
dec
push
fcoms
cli
mov
gs
or
repz
pop
inc
fcompl
les
repz
mov
jne
pop
shll
es
hlt
out
sbb
inc
inc
imul
scas
xchg
cmp
imul
pop
inc
mov
and
or
fadds
ret
je
les
inc
mov
xlat
es
lods
mov
int
stos
movsb
dec
cli
in
add
xchg
daa
aam
mov
loop,pt
cli
mov
mov
sbb
in
push
movsb
jge
pop
add
pop
adc
out
fs
or
movsb
add
leave
popa
imul
jno
xchg
sti
xchg
data16
jp
ret
sbb
or
ds
notl
mov
adcb
jecxz
xorl
jae
sbb
and
in
fldt
add
mov
and
xor
sbb
xor
movsb
add
scas
aas
fwait
pop
out
out
and
in
mov
mov
jne
out
xchg
sti
sub
mov
jl
lcall
cmpsl
pop
test
push
outsl
adc
mov
push
imul
pop
cmp
rolb
add
fistpl
lahf
mov
cmp
mov
cmp
mov
pop
or
iret
dec
cmp
or
pop
lods
lret
movsl
jle
mov
xchg
jl
push
push
adc
sub
dec
and
xor
je
lock
outsl
fsubrl
lock
pop
mov
mov
js
mov
mov
ffree
fidivrs
shlb
lahf
rcrl
pop
dec
int
and
dec
pop
xlat
pop
cmp
ljmp
test
jne
fcmovnb
xor
cwtl
icebp
mov
int
sbb
and
ljmp
xchg
xor
out
add
inc
lods
int3
in
in
ljmp
mov
fstpt
mov
scas
in
xchg
mov
cltd
das
sti
cld
add
dec
or
jle
bound
xor
inc
and
inc
sub
mov
shrb
jne
sbb
mov
enter
sub
hlt
jno
in
loop,pn
cwtl
rclb
xchg
cmpsb
pushf
les
cmp
mov
les
insl
aas
adc
inc
setne
sahf
jno
icebp
cmp
dec
loop
or
and
or
mov
aaa
out
jne
xchg
insb
insl
inc
lods
xchg
xor
push
aaa
push
js
jecxz
mov
xchg
sub
and
les
icebp
xchg
xchg
rorl
pushf
insb
les
sbb
pop
xchg
mov
lock
and
aaa
popa
push
in
jae
scas
xchg
and
mov
inc
cmp
or
in
push
sub
jae
pop
lea
dec
dec
pop
rcl
scas
push
jae
xchg
into
in
dec
mov
scas
cwtl
push
add
xlat
dec
dec
push
out
and
imul
pop
imul
xchg
sub
in
cwtl
int
inc
xor
inc
cmpsb
dec
and
mov
push
or
sub
mov
pop
jno
loop
dec
call
inc
cmp
xchg
arpl
nop
jno
mov
arpl
jb
dec
lcall
imul
test
push
pop
mov
push
clc
sub
or
jge
call
shlb
sub
pop
push
xchg
fnstenv
fisubs
negl
dec
mov
rorb
imul
jp
adc
roll
sub
rolb
cmp
fisubl
wbinvd
negl
push
and
sbb
sub
jns
pop
arpl
pushf
dec
jno
mov
sub
jp
mov
cmovp
bound
cmp
mov
ljmp
xchg
mov
movsb
dec
sub
pop
jl
inc
push
sbb
ljmp
add
adc
stc
lret
sbb
repz
dec
out
mov
ds
xchg
iret
mov
aam
shrb
mov
pop
testb
jae
inc
lret
in
lds
jge
pusha
pop
cmpsl
test
fstps
sti
add
sub
pop
insl
adc
cld
jnp
loop
pop
xor
jg
sub
cmp
shr
les
jbe
mov
jb
pop
stos
in
adc
mov
jno
bound
xchg
mov
bound
add
pusha
mov
loop
xor
repz
lcall
jp
cmpsl
sti
and
mov
jg
ret
jns
clc
push
dec
push
sub
pop
inc
xchg
cli
pop
cmp
call
aaa
cmp
jl
cmp
and
and
scas
rcr
dec
adc
adc
decb
sub
adc
fstps
ds
jmp
add
ja
shrl
loope
ret
sub
cmp
jl
fstps
mov
sub
scas
push
insb
adc
ss
ret
mov
adc
push
mov
outsl
das
outsb
xlat
adc
or
sbb
jmp
jg
pop
xchg
lods
sarb
cmp
into
mov
fs
xor
leave
ss
outsl
fisttps
std
xchg
fadds
inc
add
testb
insl
xchg
movsb
stc
push
jg
cld
jge
pop
sti
outsl
dec
pop
sahf
mov
pop
dec
in
cmpsb
subb
inc
mov
xor
cmc
dec
xchg
mov
jmp
mov
out
testl
jmp
out
cmp
js
push
inc
and
jp
cmp
sbb
adc
fs
jl
test
cmpsl
xchg
das
sbb
sub
lcall
cmc
pop
jmp
jbe
outsb
push
mov
inc
outsb
dec
pop
mov
push
in
mov
push
sbb
out
add
mov
push
inc
addb
fcompl
cmp
lods
loop
pop
xchg
mov
dec
in
outsl
loop
mov
sahf
ret
ds
repnz
fstpt
cmp
cli
clc
pop
or
sub
sub
lret
cmp
fdiv
mov
cmp
mov
popf
movsb
fimuls
pushf
test
pop
rcl
push
pop
aad
inc
cld
stc
icebp
lods
sbb
out
nop
out
movsl
ljmp
cmp
movsb
mov
lcall
mov
std
bound
and
in
loope
lcall
cs
cld
mov
mov
aam
cmp
lahf
pop
mov
shrl
xor
iret
mov
lods
enter
scas
mov
sub
jae
out
out
fistl
push
or
xlat
insb
es
inc
lods
jne
push
push
and
test
mov
stos
inc
hlt
pop
jb
fsubr
int
adc
ficoml
mov
or
fimull
fdivr
push
dec
mov
or
into
jle
call
push
inc
out
mov
add
sbb
fisttpl
mov
repnz
inc
data16
cmp
lods
pop
xor
jbe
orb
push
imul
sbb
cmp
lods
push
push
inc
sub
fwait
and
enter
outsl
ret
in
mov
dec
mov
vmovd
cmp
es
add
ja
xchg
sub
ficompl
mov
insb
cld
pop
sbb
negl
pop
in
loope
dec
out
sbb
fildl
inc
shrb
mov
jle
mov
aas
jl
out
push
jge
sbb
push
pop
movsl
mov
add
sarl
sbb
mov
ja
sub
shlb
and
stos
pushf
pop
test
push
lcall
scas
mov
xchg
or
shrb
icebp
xchg
cmp
and
xchg
in
pop
hlt
shl
sub
repnz
xor
push
data16
int3
lea
pop
fcmove
mov
inc
sbbl
loopne
cmp
ffreep
clc
and
cwtl
std
cmp
jnp
mov
mov
icebp
jmp
rorl
leave
dec
mov
mov
gs
cmpsl
pop
cmp
mov
inc
and
fdivl
pushf
cmp
lret
dec
xchg
cs
fnstcw
pop
imul
cwtl
sbb
fstl
mov
push
mov
jo
mov
and
outsb
push
inc
dec
lods
jmp
or
inc
xlat
xchg
inc
inc
dec
addb
loop
sti
push
inc
push
xchg
popf
cmpsl
cmc
loope
and
les
xor
mov
and
adc
cmp
insb
dec
inc
jne
push
adc
in
lret
xlat
insl
xor
jo
add
fs
shrl
imul
jnp
mov
ljmp
insl
adc
fwait
pop
je
xchg
ror
inc
je
inc
mov
mov
cmp
cs
sbb
jnp
lret
loopne
xor
mov
lret
mov
xchg
xor
pushf
shlb
jg
add
sub
push
test
sub
cmpl
cmp
lret
jle
movsb
adc
and
aad
adc
pop
sti
cmc
mov
sbb
pop
jne
movsl
adc
mov
xlat
nop
mov
sbb
or
xor
push
xorl
fsubr
xchg
ljmp
insb
jle
dec
lret
and
jmp
inc
pop
out
ret
aad
sahf
out
inc
mov
loope
and
ljmp
sub
rorb
test
les
pusha
cs
rol
push
loope
into
fwait
movsl
f2xm1
xorl
fcmovu
jae
ret
scas
fcom
mov
fld
mov
fwait
lret
js
arpl
and
xor
daa
mov
mov
cmp
movsl
adc
cwtl
push
push
xchg
mov
addr16
imul
fwait
je
rcll
mov
cs
andl
shrb
aad
iret
xor
std
jns
ret
cld
pop
push
cmp
shll
stos
adc
push
stc
imul
jge
mov
jno
adcb
jecxz
sbb
lods
test
enter
mov
add
sub
mov
xchg
rcrb
mov
repnz
fisttpl
and
lea
push
or
adc
ret
ljmp
fstpl
jae
pop
imul
mov
scas
mov
mov
mov
cltd
insb
jp
sub
into
push
in
adc
mov
dec
dec
in
lret
sbbl
iret
and
mov
in
push
in
enter
iret
or
pusha
and
dec
jecxz
aaa
or
pushf
fildll
jge
mov
sbb
inc
aaa
jns
in
cmp
adc
fnstcw
das
sbb
aas
cmp
mov
into
call
xor
aam
addr16
daa
roll
adc
xchg
jge
mov
sti
data16
or
add
pushf
les
sub
and
push
imul
leave
ljmp
sar
mov
orl
ds
sbb
les
loope
push
leave
jbe
jp
mov
jmp
mov
adc
nop
mov
inc
add
sti
jne
pop
fnstenv
addr16
cmc
leave
pop
ja
jo
add
sbb
leave
movsb
out
out
ja
je
movsb
pushl
push
out
lret
mov
push
lods
inc
ret
cmpsl
shll
xchg
push
push
int
mov
cmpsl
jnp
je
lcall
mul
sbb
mov
mov
add
call
lahf
mov
dec
test
push
fildl
mov
out
mov
adc
and
dec
jbe
stos
jge
iret
test
stos
mov
mov
mov
rcrl
sti
enter
sub
mov
sub
cltd
push
mov
ret
mov
repnz
sahf
pop
adc
sub
ljmp
in
lahf
sbb
sbb
lock
insl
bound
mov
loop
outsl
jle
ret
mov
in
add
aas
lds
ja
loope
mov
jle
jecxz
sbbb
js
dec
adcb
sti
es
cmc
dec
das
sti
mov
sub
push
push
xchg
push
into
or
xor
loope
jg
sbb
or
sub
orl
push
enter
add
mov
int
das
or
xchg
mov
dec
inc
sub
lock
dec
and
call
pusha
lea
sbb
mov
negl
sarb
jno
xchg
or
out
mov
imul
mov
fadd
adc
xchg
int3
ljmp
shrb
push
lods
and
mov
mov
push
push
jecxz
cs
stc
ja
jl
and
jno
cmc
fidivrl
daa
jg
inc
ss
inc
push
xlat
inc
cmpsb
pop
lods
pop
roll
subb
jl
lock
jl
pop
xchg
jle
out
addr16
dec
or
sub
jmp
dec
lock
daa
lret
sbb
les
inc
mov
xor
jmp
inc
mulb
fiadds
sub
mov
dec
xchg
or
fwait
out
pop
xchg
xor
push
aas
pushf
imulb
or
xchg
dec
jp
add
mov
xor
scas
pop
jle
push
mull
and
jb
pop
mov
hlt
fstpl
jp
leave
add
pop
frstor
push
xlat
inc
fisttpll
cmp
icebp
or
mov
inc
xor
cmp
insl
cmpsb
mov
lds
mov
and
push
test
dec
loope
call
int3
or
cmp
dec
fs
fadd
xor
or
sub
lds
les
mov
in
addl
lret
jno
rcrb
dec
xchg
push
sbb
mov
out
add
xor
incl
loope
mov
js
pop
mov
scas
out
mov
ljmp
mov
test
dec
stos
les
jbe
cmp
mov
push
addl
test
sub
mov
in
xor
daa
xor
scas
test
pop
ss
or
in
push
shrb
scas
scas
push
fsubp
int
push
add
or
es
jb
lds
lret
xor
outsb
clc
add
cmp
int3
xchg
fdivrp
mov
ret
jge
xor
jle
adcl
jnp
or
cltd
mov
sub
sub
cmp
xchg
push
out
out
fnstenv
push
lret
les
cmc
inc
mov
sbb
mov
mov
shrb
cmpsb
scas
mov
sbb
mov
jb
jge
fimull
fwait
xchg
loopne
jl
adc
addl
lds
ds
shlb
aam
nop
mov
call
movsl
mov
jmp
movsb
test
cmovg
mov
dec
jnp
outsl
xchg
popf
dec
cmp
mov
cmc
sub
xchg
cmp
push
lock
adc
sbbb
in
js
sbbb
aam
mov
sbb
out
fwait
adc
add
and
or
inc
dec
mov
push
fistpll
std
lahf
cmp
ljmp
push
into
lcall
mov
and
outsb
mov
call
pop
mov
gs
sbb
pop
js
mov
and
jne
add
das
cmpb
hlt
push
add
or
xchg
mov
pop
lcall
inc
pop
mov
xor
js
sub
stc
adc
or
das
xor
out
xchg
lret
lret
test
aaa
cmp
cmp
jnp
aas
es
insb
sub
fsubs
mov
out
insl
mov
dec
dec
dec
mov
loope
sub
or
or
sbb
loopne
nop
sub
aad
add
loopne
pop
jae
into
aas
insb
cmp
push
or
faddl
sub
mov
rol
mov
inc
pop
cmpb
mov
shlb
xchg
mov
cmpl
fwait
push
shrl
pop
mov
jae
repnz
fisttps
adc
cltd
ds
or
mov
popf
and
addr16
xchg
lods
movsb
xlat
nop
dec
add
mov
nop
push
sahf
dec
or
mov
test
mov
and
xchg
rorb
je
test
imul
lret
sbb
adc
ds
xchg
jbe
mov
ss
jmp
outsl
rcr
mov
cld
sub
test
jne
push
push
or
aam
cmc
je
mov
insl
push
sub
sbb
outsl
sub
fstl
mov
push
mov
sub
stc
ficoml
ljmp
inc
xchg
std
push
mov
popa
mov
xchg
mov
fwait
sbb
pop
les
scas
imul
insb
mov
jecxz
xchg
das
pop
push
inc
faddl
or
popa
addr16
cs
push
lea
push
cs
ljmp
push
push
or
mov
std
or
out
lahf
push
aam
jl
jecxz
adc
and
ljmp
fabs
andl
pop
inc
cmc
pop
bound
xor
fildl
xchg
das
jo
sub
sahf
sub
popa
call
testb
jle
sub
mov
or
sub
rolb
cmp
in
jp
je
das
cmp
sub
aam
mov
sub
scas
aas
imul
popf
inc
je
and
cmp
lret
and
pop
jecxz
xlat
ret
push
inc
arpl
dec
mov
sarl
jo
push
push
pushf
cwtl
test
jno
scas
and
sbb
out
fsubs
inc
inc
out
jae
in
push
mov
push
adc
inc
add
mov
xor
out
je
or
add
xchg
jmp
or
pop
lock
test
jl
mov
sarb
mov
jge
jns
xchg
sbb
ds
es
xchg
test
popf
lds
data16
xor
cltd
xchg
or
insb
adc
jecxz
sbb
cs
xor
dec
lret
or
cwtl
xchg
and
push
mov
mov
mov
rcrl
cs
fidivrs
and
ljmp
or
fdivl
xchg
adc
aad
jecxz
cwtl
jns
adc
add
pop
in
pop
and
pusha
das
xchg
push
lods
push
lret
test
add
imul
jno
mov
push
mov
fsubrs
iret
or
cwtl
lock
add
aad
test
add
ret
adc
mov
movsl
les
aas
fsubrp
call
lods
pop
lret
jmp
jg
nop
mov
ss
sti
pushf
or
ret
mov
cmc
jge
adc
aam
pop
ljmp
mov
pushf
mov
jge
fistpl
xorl
and
add
sbb
sti
pop
and
dec
dec
not
and
repz
fcmove
es
popf
mov
sub
xchg
aam
leave
ljmp
fs
fsubs
imul
mov
dec
and
fcmovu
sbb
mov
popf
andl
xchg
xor
push
mov
mov
inc
dec
ret
mov
xchg
adcb
xor
fdivl
jle
jl
adc
dec
into
push
rorb
or
sahf
bound
sahf
out
dec
xor
hlt
jp
out
js
bound
cmp
aaa
icebp
lret
push
ds
jb
iret
ja
jbe
sbb
jle
nop
adc
cltd
ds
cwtl
push
stc
mov
and
out
dec
outsb
and
and
jb
outsb
mov
push
pop
mov
arpl
es
in
add
jecxz
or
inc
and
xor
jns
mov
add
sub
jl
cmpsl
dec
adc
adc
call
addr16
cmp
push
sub
xchg
bound
mov
dec
lea
pop
out
pop
mov
daa
pusha
das
sub
mov
adc
mov
jp
sbb
aas
xlat
cmp
sbb
std
pushw
cmp
sahf
or
push
scas
dec
rep
test
xor
sub
ret
pushf
mov
cld
jno
pop
sub
push
sub
mov
aad
aad
push
mov
cmp
cmpsl
adc
mov
jnp
xchg
daa
xor
adc
gs
insb
mov
fdivl
test
insb
movl
shl
insl
sahf
dec
cmp
jne
fnstenv
adc
sub
inc
jae
xchg
jle
add
les
jecxz
mov
call
adc
xchg
sahf
push
movsb
scas
cmp
aam
inc
cmc
and
loopne
decb
mov
mov
scas
add
jecxz
jle
repnz
das
aam
xor
scas
mov
adc
ljmp
rcrb
pop
sbb
and
out
neg
pop
pop
lds
xchg
pushf
or
or
cs
in
jne
mov
insl
sub
xchg
in
or
push
mov
lea
shl
mov
ja
cmp
cmp
sub
or
and
pusha
xchg
insb
outsb
test
push
sahf
and
imul
jp
push
dec
mov
fdiv
push
dec
inc
shl
fwait
sub
cmp
pop
fnsetpm(287
pop
xor
mov
push
sub
or
sbb
dec
hlt
pop
mov
cmp
xchg
sub
in
mov
aas
sbb
imul
push
sbb
lods
ds
in
sti
mov
cli
iret
jb
jle
js
cld
daa
pop
sahf
loop
sbb
xor
daa
iret
mov
sbb
fld
loope
std
jp
shl
fwait
sub
push
and
dec
cmpsb
shlb
and
cmp
jno
push
push
call
in
cmp
lea
loope
lea
xlat
sysexit
jle
jl
mov
cli
mov
clc
ja
or
mov
mov
jo
std
xchg
pushf
mov
xor
icebp
xlat
fldt
or
sub
push
cmp
fs
jle
movsl
xor
repz
enter
enter
jae
movsl
sahf
ret
ret
xchg
jge
dec
out
xor
in
into
xor
sbb
lock
insl
shrb
xchg
lret
jmp
jne
mov
jg
jp
xchg
in
aad
pushf
xchg
adc
cmp
daa
test
pop
sub
popf
push
cwtl
push
outsl
add
mov
sbb
lcall
in
xor
cmc
in
adc
in
ss
jmp
rcrb
cwtl
dec
adc
lcall
mov
inc
cs
push
movsl
iret
jl
jo
jecxz
sub
mulb
popf
mov
dec
imul
inc
out
test
xor
mov
sub
decl
and
addb
sarb
cmpsb
aas
bound
dec
popa
in
cmp
and
add
mov
cmp
loopne
push
inc
dec
fdivrl
jae
scas
in
xchg
mov
xchg
and
xchg
xchg
xchg
lods
in
mov
shll
add
jmp
data16
or
shll
xor
or
hlt
lods
js
push
outsl
ret
xlat
and
push
mov
sbb
insb
popa
push
push
sub
push
popa
pop
sub
lcall
and
dec
jecxz
les
repz
test
push
call
mov
mov
std
call
jns
cmpsb
push
add
or
dec
push
ficompl
and
jg
out
xor
sbb
adc
xlat
lds
les
cmp
out
imul
xchg
mov
xor
mov
loopne
pop
in
cmp
insb
push
es
in
dec
stos
out
aam
push
in
jo
mov
addr16
pop
jp
mov
stos
and
push
pop
jo
and
mov
xchg
or
cld
push
inc
ror
cmc
sub
xchg
mov
and
sub
mov
sub
xchg
push
int
mov
pop
outsb
popf
xchg
bnd
inc
cltd
xor
out
stos
xor
repz
mov
push
shrl
jmp
hlt
inc
adc
sbb
ds
lds
cmp
dec
add
xorb
mov
mov
jbe
sub
roll
movb
add
int3
ljmp
and
mov
pop
movsl
or
and
push
xor
stos
mov
inc
and
xor
into
adc
test
push
push
rclb
sub
xorl
and
mov
add
aaa
mov
adc
mov
imul
rorl
cmpsb
sub
fcoms
jo
inc
inc
shl
xchg
xor
dec
sbb
mov
mov
or
sbb
popa
lods
add
adc
lea
dec
inc
mov
js
stos
push
cmp
sti
cld
mov
data16
xchg
add
shrb
or
std
fidivrl
mov
clc
test
ja
jne
lret
mov
sub
sbb
test
cld
jno
imul
dec
inc
sbb
mov
xchg
adc
in
out
fisubl
push
sbb
repz
pop
fs
cmp
or
sbb
xchg
cmc
dec
xchg
addl
shl
or
xchg
and
sbb
push
loope
or
es
outsl
pop
sarb
add
mov
dec
sub
mull
jl
in
lods
or
xor
jo
dec
xchg
cmpsl
test
in
mov
popa
xchg
sub
fucomp
push
xlat
imul
gs
inc
mov
test
xchg
push
loopne
scas
cmp
js
mov
jae
ljmp
aaa
cld
call
xchg
mov
dec
pop
pop
push
mov
xchg
or
das
jno
pushf
inc
mov
mov
shlb
negb
pop
test
jbe
dec
or
push
cmp
lahf
test
jno
aam
testl
push
in
push
xchg
aas
dec
iret
fs
out
pushf
icebp
mov
repnz
adc
pop
and
jae
xchg
xchg
adc
imul
cmpb
ds
cs
outsl
push
and
jae
stos
or
std
std
sub
lret
leave
imul
cmp
sbb
mov
sbb
pop
cli
lret
add
ja
lods
xchg
mov
sbb
sub
sbb
insb
js
test
stc
cmp
mov
int
add
mov
xchg
add
insb
insb
rclb
ljmp
adc
push
shrl
or
negb
addr16
pop
dec
or
icebp
sub
lahf
sub
and
call
inc
imul
mov
je
sub
outsl
repnz
arpl
popa
add
stos
bound
xchg
fnsave
adc
or
fidivrl
jae
xor
lds
aam
pop
cmp
outsb
mov
lds
cmpsb
out
shlb
xchg
ljmp
or
hlt
xor
test
add
sub
pushf
sti
sub
cmp
jns
cmp
jecxz
out
ljmp
out
pop
inc
stos
push
push
popa
cmp
jge
ret
xor
jne
movsl
pop
sub
outsl
xchg
sbb
dec
jne
testl
fistpll
hlt
sti
out
or
push
or
mov
xor
popf
or
movb
and
mov
add
or
push
xchg
jg
stc
gs
scas
mov
mov
cltd
divb
js
ret
aas
xorl
sar
pushf
push
pop
jmp
sbb
repz
xor
xor
inc
in
ss
adc
push
add
mov
ljmp
cmp
push
mov
ds
pop
scas
cmpsb
enter
pop
pop
repz
or
gs
xor
mov
inc
cltd
repnz
aaa
fwait
scas
pusha
jmp
repnz
clc
test
shll
pop
filds
pushf
sub
inc
aad
insb
vfrczps
cld
push
inc
xor
mov
push
imul
jo
adc
clc
dec
cmp
stos
push
daa
adc
insl
mov
in
sub
xchg
out
mov
sbb
xlat
xlat
loop
lea
ret
ljmp
ljmp
push
xor
fwait
mov
jno
icebp
xchg
jp
jae
rcll
or
stos
or
ljmp
aam
imul
es
or
pop
bound
mov
fsubrs
push
pushf
pop
nop
ja
sub
aam
fsub
pop
js
es
fs
adc
cmc
int
stos
pop
mov
adc
lahf
sbb
and
mov
push
lcall
jge
push
lods
pop
push
xor
lret
sub
fdivr
pop
cmp
jns
call
sub
dec
mov
mov
lods
stos
int
pop
inc
aad
push
orl
testl
nop
jnp
sbb
cmpsl
pop
gs
jle
lahf
ret
mov
add
daa
jl
fstpl
jo
cmp
pushf
shlb
popa
rcrb
cmp
cmp
outsb
and
dec
mov
and
ss
inc
push
jle
adc
shrl
cmp
in
xor
movsb
sbbl
and
out
push
sbb
shll
ss
lea
subl
iret
out
aam
stc
scas
pop
sbb
fmull
pop
mov
mov
mov
mov
cld
adc
adc
cmp
cmp
lds
cmp
mov
mov
lock
pop
jle
fstpl
dec
dec
cltd
adc
add
adc
or
lret
imul
xchg
insb
xchg
pop
cmpsb
jb
pop
push
sub
mov
shll
test
incb
pop
push
mov
cli
pop
mov
mov
mov
lods
arpl
sahf
pop
sbb
add
jg
xchg
dec
mov
or
popa
aaa
das
mov
ja
xchg
sub
lods
pop
push
or
pusha
inc
leave
sbb
outsb
xor
or
push
cmpsl
hlt
rorl
pushf
sbb
or
mov
lds
adc
and
inc
clc
sub
dec
jp
or
out
cmp
les
jp
arpl
cmp
sbb
out
loop
popa
sbb
hlt
out
sbb
or
push
stos
jmp
fsubr
int3
stos
ds
xlat
xor
call
arpl
rcl
xchg
inc
cmp
jo
mov
leave
data16
sahf
and
mov
clc
enter
movsb
pop
test
arpl
fnstenv
ficoms
mov
lcall
shlb
jl
out
test
xchg
push
fwait
sarl
hlt
mov
xlat
mov
out
int3
mov
int
cmc
jl
imul
mov
dec
and
scas
sbb
or
and
cmp
ret
inc
jl
faddp
inc
mov
jne
xor
cli
cmp
adc
mov
imul
add
pop
fs
or
xchg
loope
or
mov
push
out
fnstenv
adc
add
mov
mov
adc
sahf
push
jb
jb
xor
sub
jmp
sbbl
arpl
pop
push
inc
inc
decl
sbb
xchg
mov
inc
cwtl
out
xchg
into
fsubs
stos
lret
cmp
xor
rclb
xor
and
cmpsb
push
sub
mov
lods
xor
rclb
mov
fs
cmpsl
addr16
pop
sub
aas
or
xlat
out
pop
xchg
ds
push
or
or
shr
lahf
xchg
nop
ljmp
push
fwait
stos
test
or
xor
ret
cmpsb
cli
sahf
movsl
cmpsb
adc
clc
mov
sbb
dec
lcall
iret
es
push
mov
pop
out
xchg
arpl
pop
inc
test
sti
stos
xchg
cli
push
or
pop
inc
sub
in
jb
stos
arpl
stos
jecxz
lret
cmp
mov
dec
cmpsl
cmpsb
mov
test
fwait
jge
jl
pop
insl
xor
das
outsb
pop
or
push
xor
jne
loop,pt
or
packssdw
pop
jns
mov
jg
sbb
mov
push
adc
cmc
push
call
push
pop
adc
push
ja
rcl
das
fwait
movsl
jecxz
mov
mov
outsl
scas
dec
push
add
adc
loope
xlat
mov
cmp
std
loopne
aam
jmp
in
sub
cmp
dec
sbb
jmp
cmpsl
fmulp
insl
mov
push
stos
pop
inc
lods
dec
push
mov
push
ds
pop
repnz
mov
ret
inc
dec
js
sahf
sub
inc
cmp
rorb
insl
xchg
pop
mov
mov
mov
adc
xchg
data16
add
sub
loope
mov
dec
jo
sub
pushf
sbb
push
lahf
leave
out
bound
and
ja
test
push
jmp
out
scas
stos
xor
cmp
adc
ss
enter
adcb
xor
cmpsl
cwtl
ja
or
xchg
loope
ljmp
pop
xchg
pushf
xlat
inc
sti
sahf
mov
sub
pop
ror
push
or
sub
jp
lret
je
sbb
cld
push
jae
add
xlat
xor
adc
shl
enter
icebp
pushf
loop
daa
jp
xlat
test
jmp
sbb
repz
jo
ja
sahf
xchg
ret
mov
loop
push
cmpsb
ret
nop
pop
xor
inc
imul
lods
js
jmp
jecxz
push
mov
movsl
jmp
add
cmp
xor
mov
mov
mov
dec
lcall
cmpsl
jns
push
push
sbb
cld
dec
out
inc
mov
dec
or
mov
mov
pusha
mov
xlat
sbb
mov
mov
mov
out
xchg
bound
sbbb
inc
out
xchg
fisubl
imulb
dec
cs
cmp
jbe
xor
mov
sub
mov
jmp
insb
stos
sub
jle
outsl
mov
sarb
mov
xchg
inc
out
inc
shl
dec
sbb
sub
imull
cmc
pushf
iret
in
decl
lods
cmp
mov
jl
mov
out
push
jmp
lock
fldln2
mov
jae
testb
push
jbe
hlt
mov
xor
fnstcw
in
or
cs
dec
push
ljmp
cmp
insl
add
add
sbb
lret
jno
push
in
testl
cmp
sbb
pop
insl
push
aam
int
push
jmp
pusha
xchg
leave
outsl
jo
pushf
shrl
jb
add
lcall
cmp
call
xchg
add
push
sub
mov
sub
imul
adc
out
mov
mov
push
arpl
pusha
adc
xchg
lret
xchg
push
pop
dec
dec
adc
sarb
adc
sub
xchg
jecxz
pop
adc
sbb
mov
inc
cld
movhps
jno
push
fcoml
and
mov
and
jns
jnp
sbb
jb
fistps
pop
lret
imul
sub
dec
pop
push
mov
and
add
jecxz
sbb
mov
dec
mov
xchg
outsb
test
stos
sbb
jbe
popa
sbb
push
xor
push
sub
test
jg
addl
bswap
adc
mov
and
dec
inc
and
cmpsb
lods
ds
test
fsts
pop
or
lret
sub
fwait
sti
imul
dec
pusha
nop
stos
mov
call
jge
push
imul
cmp
leave
out
fcom
mov
fcmovb
pop
sub
push
sar
ljmp
xor
pushf
nop
gs
pop
adc
mov
in
mov
das
movsb
pusha
inc
jp
pcmpgtb
test
nop
add
or
ds
xchg
mov
add
scas
xlat
ret
mov
jnp
std
sbb
popa
ss
inc
data16
mov
fbstp
and
pushl
mov
adc
insb
dec
loope
xlat
int3
push
add
or
jg
nop
jmp
insl
sahf
sbb
pop
adc
pop
lret
adc
lret
test
leave
pop
jb
and
enter
xchg
cmpsb
add
ret
dec
push
jb
in
adc
add
mov
xlat
pop
out
mov
or
pop
cmp
jno
in
or
pop
adc
rorl
lahf
sub
lods
adc
imul
lods
cmp
inc
popa
das
pop
les
xor
loopne
cwtl
xchg
ret
ja
sub
jns
lahf
push
mov
mov
sbb
shrb
je
or
fmull
frstor
scas
nop
std
add
pop
std
clc
hlt
sahf
xor
icebp
and
jp
xchg
xchg
test
neg
xchg
mov
or
jl
jecxz
subb
cmp
sub
fisubs
and
xor
fwait
cmp
into
repz
inc
fists
mov
mov
sbb
xor
hlt
and
aas
and
pushf
lods
push
and
mov
push
gs
fsub
in
daa
js
cs
fsubrl
and
fildl
add
scas
or
fisubrs
sbb
xchg
mov
xchg
dec
sub
pop
adc
aam
dec
add
pop
dec
lods
jg
adc
push
mov
bswap
das
or
pop
cld
push
xchg
repz
aas
xchg
or
fwait
lock
cltd
dec
lret
add
in
cmp
sbb
mov
dec
xchg
mov
loope
mov
inc
xlat
in
push
xchg
pop
sub
les
int
push
and
push
cmp
daa
sbb
mov
cmpsl
enter
xchg
stc
and
cmc
fdiv
jne
inc
test
sub
jmp
xor
call
pop
lret
add
jmp
clc
sbb
mov
aaa
mov
add
sbb
add
or
sar
adc
mov
repz
out
and
jecxz
xor
test
push
pushf
aad
inc
mov
push
push
imul
fcomps
movsb
test
popa
add
in
cltd
sub
pushf
inc
lock
cmp
push
loope
jno
fisubrs
ret
std
mov
fldl
cmp
aam
dec
pop
sbb
dec
clc
mov
add
push
inc
cmp
lock
aam
sub
out
sub
push
and
repnz
push
jg
pop
mov
mov
jbe
pop
jmp
lea
mov
loop
fstl
stos
add
frstor
mov
sub
mov
std
sub
pop
icebp
sar
jge
dec
dec
add
ss
and
fiadds
xor
pop
sbbl
jnp
rorl
lcall
push
push
fdivrs
pop
inc
sub
xor
sub
sbbl
xor
ja
and
imul
xor
mov
repnz
inc
mov
jmp
mov
xchg
out
mov
inc
je
sub
test
sbb
push
jg
pop
inc
jns
push
sbb
dec
xor
sbb
push
dec
pop
jmp
hlt
jp
movsl
cli
repnz
lods
sti
pusha
lock
dec
mov
rcll
cwtl
stos
jle
loope
push
cs
xchg
or
jb
xchg
movsb
and
and
movsb
cmp
inc
mov
mov
add
lds
xlat
sbb
js
mov
push
ficoms
jbe
orb
sti
cmpsl
sbb
enter
mov
or
adc
jp
mov
insb
xchg
repz
sbb
jne
arpl
lcall
sahf
xchg
adc
in
jp
sysenter
pop
jbe
lcall
mov
int
popf
pusha
daa
repz
frstor
rolb
push
sbb
xlat
inc
sbb
ss
sbb
in
filds
jns
mov
fs
inc
jg
adc
dec
push
add
ljmp
cmp
stos
jge
dec
fisttps
mov
push
fistl
mov
jno
aaa
stc
push
inc
sub
sbb
bnd
mov
aaa
popf
jg
mov
xchg
cmc
inc
mov
iret
js
or
inc
in
or
and
lret
popa
and
mov
mov
in
inc
jecxz
mov
add
or
std
dec
and
mov
cli
pop
xchg
cmpsl
prefetch
or
add
or
jg
mov
jle
in
das
int3
and
mov
sbb
jo
ds
std
mov
push
insb
pop
notb
push
adc
inc
andl
leave
movsl
in
inc
inc
outsb
add
dec
mov
fcomps
repnz
inc
repz
aad
fidivl
xchg
jo
xor
jnp
outsb
push
loopne
call
data16
xchg
jne
loop
rclb
xchg
push
cmpb
pop
push
xor
aaa
push
push
xor
push
and
jg
mov
cmp
mov
loope
inc
movsl
inc
rorb
fldt
outsl
daa
sbb
popa
in
mov
mov
aam
inc
mov
mov
inc
pop
inc
dec
mov
inc
sbb
loope
movsl
sub
aad
iret
xor
jl
inc
ja
popf
xor
pop
leave
rcll
and
sahf
aam
call
push
pop
aad
rcr
int3
loopne
jmp
sbb
cltd
fsts
xchg
jmp
sub
fwait
shrl
test
cmc
jae
mov
inc
pop
std
ja
add
dec
loope
cmpsb
adc
mov
movsb
pop
push
pop
in
jg
push
jecxz
leave
ret
dec
sbbb
fisttpl
out
and
mov
shrb
std
clc
ret
loopne
rcr
mov
fsubl
mov
ret
jno
pop
xchg
cmpsb
insl
adc
nop
in
jb
aaa
hlt
or
push
jmp
ret
jo
cmp
pushf
scas
pushf
xor
add
shl
add
inc
pusha
leave
jae
dec
inc
out
add
sub
mov
enter
ret
out
cld
lods
mov
dec
sbb
in
mov
sahf
in
xchg
mov
andb
sbb
push
adc
mov
sbb
inc
sub
cmp
bound
addr16
in
xchg
shrb
adc
gs
and
xor
xchg
loopne
mov
mov
fimuls
pusha
data16
push
sub
inc
adc
xchg
cltd
xor
and
sarl
cld
jns
arpl
les
lock
jle
sahf
iret
mov
ret
pop
loop
notb
int3
test
rorb
push
dec
inc
push
insl
jmp
push
fbld
xchg
and
cmpsb
mov
mov
fwait
jb
into
test
xor
frstor
clc
cmp
nop
mov
popf
push
fmull
lcall
pop
fcmovnb
ss
adcl
pop
pop
cs
inc
add
lcall
pop
push
mov
and
sti
icebp
jge
mov
mov
popa
pop
popf
jmp
push
sub
lods
fisubrl
clc
dec
xchg
mov
push
fs
mov
jp
and
mov
cmpsb
mov
pop
dec
adc
sub
mov
clc
nop
out
adc
inc
xchg
aam
es
mov
lcallw
and
shrl
or
ljmp
out
adc
push
adc
ficomps
lds
jp
xor
dec
jo
pusha
movsl
mov
jns
scas
sub
or
push
and
push
mov
fimuls
lret
xor
lods
sub
jge
adc
inc
jge
testl
mov
loope
call
aaa
push
sub
loope
scas
add
aad
pop
fnstenv
pop
mov
add
rcll
mov
sbb
ret
mov
pushf
lods
jecxz
adc
arpl
jl
or
addr16
jle
jl
bound
testl
mov
mov
fs
int3
dec
push
movsb
loop
ss
cmp
mov
rcll
add
cmpsl
or
jo
in
pop
cmp
mov
jmp
pop
imul
cltd
or
loope
xor
js
jle
scas
pop
push
fistpll
mov
xor
test
cltd
adc
mov
and
scas
test
xchg
fiaddl
push
test
push
in
stos
in
and
or
mov
pop
push
mov
and
aam
dec
dec
pop
je
push
mov
out
jmp
call
cmpsb
add
pop
cmc
mov
xchg
adc
pop
dec
ds
xchg
cltd
and
push
bound
mov
push
adc
xchg
sbbl
inc
scas
sub
scas
test
add
nop
scas
shlb
mov
add
ss
sbb
out
movsl
and
clc
fsts
adc
mov
ret
or
add
push
mov
std
pop
cmp
mov
adc
sbb
mov
push
out
or
rolb
imul
fstl
dec
push
pop
mov
sub
xor
divb
movsb
mov
arpl
shl
movsb
sbb
pusha
pop
cmp
xchg
fs
test
jno
and
andl
sbb
jnp
adc
add
in
add
lret
mov
xor
mov
jo
and
cmp
popf
bound
into
lea
or
push
std
push
cmp
enter
jbe
dec
in
jbe
jne
stos
mov
adc
ss
mov
mov
add
das
add
push
loop
repnz
aaa
sub
aaa
aaa
adc
xor
rorb
lock
inc
jns
mov
jb
rcll
out
out
imul
pop
nop
enter
repz
popf
mov
mov
mov
add
fisttps
push
out
mov
orb
jmp
xchg
mov
and
shl
lahf
add
les
sti
jmp
push
dec
pop
cs
outsl
movsl
jnp
mov
js
in
leave
loope
push
adc
inc
stos
jns
cltd
cmp
insl
jle
scas
fcompl
fs
pop
imul
dec
ret
clc
cmp
jg
and
dec
push
in
aad
lods
leave
jne
jp
add
imul
dec
cld
gs
xchg
inc
xchg
fsubrl
and
jl
stos
and
mov
xorl
sahf
adc
pop
jae
fsts
stos
fisubs
aas
in
loope
test
popf
in
fucomip
pop
mul
in
jbe
or
or
or
loope
arpl
mov
mov
mov
push
xchg
or
pop
sbb
stc
iret
cmp
inc
lock
cmc
push
push
es
and
jmp
jl
adc
enter
xchg
fsubl
out
xor
clc
and
mov
imul
cmp
mov
in
jg
outsl
js
adc
cmp
subl
xor
into
or
dec
fwait
ret
icebp
and
add
cmpsl
imul
or
sub
mov
mov
ss
push
frstor
addr16
aas
mov
mov
ja
cwtl
sti
repnz
and
dec
sub
xor
mov
hlt
dec
leave
dec
adc
inc
dec
pop
dec
jmp
xlat
mov
xchg
adc
inc
mov
and
adc
jae
pop
aaa
inc
mov
xor
jo
outsb
jge
scas
divb
xchg
bound
pop
repz
or
aas
cmp
loop
out
mov
mov
nop
mov
sarl
movsb
out
fimuls
in
fisttpll
pop
in
cmp
movaps
dec
adc
inc
sbb
aaa
push
sub
ljmp
ja
jo
fcmovb
pusha
sahf
xchg
cmpsl
ret
leave
xchg
sbb
mov
outsb
aad
lock
or
push
repnz
aad
pop
pop
daa
ja
pop
xchg
imul
mov
sbb
fstl
mov
addr16
rorl
test
fildll
mov
xor
das
cwtl
add
add
sbb
mov
icebp
mov
xor
add
rcr
movsb
je
mov
jmp
jge
leave
lds
pop
fwait
pop
pusha
mov
push
into
xchg
popf
stc
mov
jo
jle
pushl
leave
mov
scas
mov
clc
jecxz
fwait
fs
aaa
les
fnstcw
xorb
rcll
xor
addb
out
mov
stos
mov
xorl
and
push
push
mov
push
std
add
int3
ficoml
hlt
data16
and
jo
mov
imul
or
push
ss
icebp
imul
sub
in
sbb
or
cld
cmp
pop
push
pop
push
into
push
adc
inc
and
movsb
sbb
out
fisttpl
cwtl
pop
mov
xchg
fcomip
lds
fnstcw
stc
push
mov
fistpl
cmp
nop
sbb
fiaddl
cmpb
jnp
gs
cmpsb
movsb
mov
xor
ret
adc
mov
inc
bound
dec
ret
test
xor
push
push
aas
aam
daa
sbb
stos
xor
test
push
aaa
lods
xchg
int
cld
test
jle
aad
jne
pop
or
stos
mov
dec
mov
shrl
test
mov
cmp
xchg
ljmp
sub
out
lds
jge
ljmp
sbb
xchg
or
sbb
bound
adc
ja
dec
shlb
rcll
inc
mov
and
aaa
rsqrtps
inc
fcmovb
out
push
and
pop
add
mov
test
jnp
xor
sbb
inc
leave
push
fadds
test
test
xor
aas
xor
test
sbb
xchg
repz
mov
jle
xchg
xchg
mov
push
ret
iret
je
out
sub
ret
or
jp
cmp
pop
enter
add
xchg
pop
sbb
subl
in
test
inc
jbe
repz
filds
xchg
xchg
arpl
jmp
hlt
sbb
loope
idivb
mov
fisttpll
fwait
add
push
les
sub
jae
adcl
imul
push
mov
pop
sahf
subl
adc
test
ret
cmp
add
adc
mov
fisttpl
xchg
push
dec
push
sub
xor
xchg
cltd
mov
fstl
test
fdivl
dec
lret
addb
xor
mov
ret
loope
fwait
mov
mov
call
sub
sub
enter
ds
idivl
cmc
addr16
lret
mov
js
fcoml
ret
and
inc
or
leave
loope
popf
lret
jo
sti
xchg
push
adc
jmp
inc
rol
cmp
mov
test
cmc
xchg
sub
push
test
xchg
jno
sbb
inc
xor
or
in
mov
shlb
adc
mov
outsl
divb
mov
or
add
jg
lret
nop
inc
pop
add
push
adc
cli
hlt
mov
imul
jnp
inc
addr16
in
fildll
cmpsl
fisubs
cmp
or
dec
test
dec
movsb
pop
into
pop
pop
and
popf
xchg
dec
inc
in
cmpsb
sub
cmc
adc
es
hlt
cmp
or
shrl
inc
insb
push
pusha
cld
add
stc
dec
das
rorl
push
stos
aad
ss
hlt
sbb
cmp
outsl
out
inc
fisttpl
sbb
jnp
and
shrl
xchg
xlat
mov
and
stos
daa
xor
popa
mov
sar
mov
in
sti
pop
fstpl
lock
sar
xor
fwait
aam
xor
cmpsl
mov
jge
lds
inc
cmp
mov
adc
outsb
stos
lahf
stc
data16
push
jo
mov
pushf
push
mov
sbb
cmpsl
fists
mov
jns
call
mov
mov
jno
push
pop
push
sub
out
loop
cmc
aam
dec
out
ss
mov
jecxz
std
inc
pusha
mov
mov
adc
push
xchg
or
daa
cmp
mov
pushl
scas
cmpsb
xor
and
jbe
leave
ret
xchg
nop
loopne
xorb
push
lcall
out
mov
sub
or
nop
enter
sub
jo
dec
cmp
cld
insl
test
jo
xchg
lea
xor
cmpsb
push
cmp
pop
icebp
xchg
sarl
jo,pn
dec
dec
popa
outsb
or
stc
lcall
xchg
dec
mov
jge
mov
fdivrl
shrl
imul
pop
inc
inc
in
lcall
lret
inc
sub
sub
jnp
pop
push
mov
sbbl
scas
mov
jle
mov
inc
jge
fmuls
cmpsb
jne
call
sar
jecxz
add
repz
pop
outsb
sub
rorb
sbb
mov
dec
cwtl
es
cmp
stos
jge,pt
out
dec
inc
ficompl
mov
mov
push
test
xor
lock
jae
or
pop
daa
xor
adc
xchg
movsl
and
lahf
popl
jne
out
std
cmpsb
test
and
ja
test
inc
hlt
jnp
rcr
inc
mov
mov
mov
les
addr16
out
add
cmpsl
inc
clc
cmp
mov
xor
aam
pop
aaa
mov
outsl
push
fcompl
imul
mov
push
or
dec
or
dec
leave
icebp
ficoms
mov
test
popf
xor
xor
xor
test
lods
outsl
xchg
je
fcomp
pop
cld
into
lods
in
dec
xor
mov
mov
sbb
adc
or
xor
loop
lret
sbb
add
idivl
mov
movsl
adc
lcall
lods
and
ret
popf
push
and
mov
leave
loop
mov
sbb
call
movsl
outsb
in
insl
cmpsl
dec
pop
das
xlat
sbb
into
push
push
xchg
mov
jle
jns
aas
sbb
jmp
js
fcoml
fadds
inc
pop
dec
stos
cmpsl
outsl
pop
xor
movsl
mov
int3
jmp
jno
in
cwtl
and
and
mov
inc
or
subl
jne
jbe
xor
inc
mov
aaa
in
cmp
inc
call
mov
and
push
insb
and
scas
mull
enter
outsl
je
pushf
sbbb
and
fmull
sbb
insb
leave
adc
addr16
call
push
or
popa
push
add
or
lret
jp
fwait
ja
loope
mov
ljmp
mov
and
jae
mov
jecxz
and
bound
mov
jp
iret
loop,pt
rcrb
inc
mov
ret
add
and
inc
pop
aas
adc
out
push
sarb
incl
or
jns
mov
in
mov
sbb
rolb
loop
pop
push
mov
movsl
xchg
mov
aam
out
repz
mov
pop
push
outsb
mov
adc
mov
leave
mov
popa
int3
popf
jg
adc
scas
xchg
lds
and
insl
stos
xor
push
mov
xchg
in
push
dec
cmp
sub
pop
jmp
addr16
mov
jge
int3
fistpl
adcb
int3
adc
jg
or
push
xor
xchg
mov
fcoms
cmp
addl
ret
popf
popf
dec
mov
sahf
mov
aad
bound
adc
out
or
push
aas
and
cltd
imul
pop
lret
repnz
cmp
xor
mov
mov
repnz
pushf
xor
imul
aaa
cmp
mov
outsb
ret
cmp
mov
int
jmp
mov
loopne
cmp
mov
mov
shlb
mov
sub
xor
push
call
subl
and
mov
sbb
mov
pop
mov
mov
in
pop
movsl
sti
les
jo
repz
mov
or
ds
je
repz
daa
pop
adc
xor
pop
cmp
aas
pop
xor
jo
push
pop
add
inc
ficoms
sbb
xchg
xchg
mov
adc
rep
fs
ret
xchg
cltd
pop
adc
arpl
jl
pop
push
test
pop
dec
mov
pop
aaa
add
pop
add
stc
jnp
daa
adc
mov
mov
xor
mov
mov
mov
decl
out
insb
repnz
ss
jnp
aad
mull
insb
into
dec
cld
pop
dec
adc
insb
int3
test
cwtl
sub
aas
es
mov
je
cli
pop
in
cmova
pop
nop
or
adc
jmp
rorl
mov
adc
push
sbb
inc
or
clc
push
gs
pop
arpl
push
movsb
enter
cli
ja
and
mov
inc
call
lds
loop
sti
out
out
cli
mov
loop
ret
repz
xchg
pusha
pop
cmp
xchg
cmp
mov
and
push
aam
push
mov
push
mov
and
popf
std
fsts
sbb
cmpsl
into
dec
mov
ss
ds
xor
movsb
xor
sub
mov
dec
mov
dec
and
fcom
pop
mov
mov
or
pop
xchg
cwtl
loop
or
cmpsb
and
sbb
mov
nop
pop
cltd
dec
cld
ret
xor
clc
std
push
pop
fwait
insl
push
jne
pop
mov
xor
jg
inc
out
lcall
stos
mov
sbb
cmp
divl
leave
push
cmp
cmp
js
jp
cmpsb
imul
loopne
fstl
xchg
ret
test
mov
out
and
test
push
push
repnz
or
pop
push
jp
mov
dec
lods
jo
out
inc
and
mov
fdivs
add
pop
jno
jo
push
test
jo
mov
out
and
jle
int3
inc
lock
jl
std
rcl
cwtl
stos
ja
lods
jmp
scas
jmp
adc
inc
xor
pextrw
scas
andl
xor
cli
aam
data16
xor
jo
jnp
mov
push
jg
out
in
mov
push
loope
mov
in
popf
and
dec
rcrb
push
xor
dec
loopne
add
test
mov
nop
xchg
pop
jle
lret
sbb
mov
xchg
jbe
xchg
push
lret
mov
dec
int
jecxz
lods
mov
popa
fsts
mov
cmp
push
ret
push
xor
bound
aas
pop
andb
bsf
cmpsl
rcll
hlt
mov
test
push
cmp
xchg
jle
decb
fildl
mov
lcall
hlt
je
mov
mov
dec
les
xchg
cmp
xchg
adc
and
testb
enter
sti
jns
scas
cs
xchg
and
iret
int3
gs
sbb
cmp
and
loopne
inc
cltd
ret
cmpsl
cmpsl
jbe
cltd
sub
mov
xchg
data16
sarb
jae
sbb
seto
aas
rolb
shl
xor
xor
aaa
clc
pop
xchg
repz
popa
and
bound
inc
leave
adc
jnp
cmp
cmp
sbb
mov
sbb
jb
insb
movsb
lea
ret
inc
sbb
xchg
xor
sarb
jge
les
xor
adc
mov
dec
std
push
subl
fimull
roll
cmpsb
js
outsl
in
shlb
lock
mov
jo
jg
jmp
push
addr16
sbb
xor
xchg
fadd
stos
scas
sahf
mov
jl
add
lods
call
dec
xchg
pop
sbb
xchg
in
mov
sbb
adc
jle
mov
insl
repz
jl
and
add
inc
shl
cmp
sbb
mov
mov
and
movsb
int
bnd
dec
or
ud0
js
inc
pop
cmp
addr16
push
repz
pushf
movsl
xlat
pop
cmp
jecxz
mov
inc
xchg
stos
loope
scas
cmp
mov
dec
sub
xchg
and
ja
push
add
cmp
mov
push
jle
pop
pop
lea
outsl
sbbb
jnp
adc
cmp
mov
inc
adc
insb
lcall
add
pop
cmpsl
adc
js
pushf
pop
jo
inc
outsb
cmp
xor
out
int3
loop
add
imul
data16
push
cltd
cltd
inc
sbb
mov
fsub
add
fwait
cmp
mov
or
shll
out
aad
lea
xchg
call
pop
jbe
pop
xlat
sub
leave
push
lock
jbe
arpl
adc
repz
mov
psubsw
fidivl
in
loope
add
int3
xchg
in
jae
and
cwtl
dec
scas
jl
data16
dec
mov
add
or
add
push
add
cwtl
clc
xchg
inc
inc
mov
sbb
aas
xchg
mov
shlb
ds
aad
lcall
adc
shll
inc
movsl
jecxz
pop
push
add
sbb
inc
mov
add
or
inc
cmpsb
cmp
cwtl
imul
ret
adc
add
iret
adc
fdivs
pop
ffreep
cwtl
into
call
outsb
mov
dec
stos
jle
add
bnd
std
popa
ja
cmp
adc
rol
sti
push
sub
lret
test
jle
cld
aaa
sub
outsb
popa
cmc
cmc
jg
mov
pop
cmp
or
xchg
adcl
mov
sbbl
rcr
js
jbe
cmpsb
pextrw
xchg
ss
int3
cltd
push
mov
dec
shlb
pop
xchg
pop
pop
jbe
bound
incl
fsubrs
xchg
cltd
cmp
aad
ljmp
js
mov
xor
push
or
cmp
cli
in
movsb
mov
mov
mov
dec
mov
pop
sbbl
sub
push
pop
popa
or
out
jbe
loope
mov
or
mov
pop
mov
sti
xchg
pop
adc
and
mov
stos
pop
lock
jle
push
movsl
cmpsb
fimuls
rolb
out
mov
icebp
bound
pop
mov
and
inc
add
cli
adc
loopne
imul
push
scas
int
inc
or
xchg
dec
and
lcall
mov
std
imul
xor
bound
cmpsl
cmp
test
aas
stos
arpl
push
jno
pop
pop
cmp
sub
or
jne
nop
mov
adc
jae
push
adc
enter
dec
outsb
std
fcmovnb
movsl
xor
xchg
sahf
cld
adc
data16
movsb
or
lcall
push
mov
loope
mov
pop
loopne
iret
in
dec
mov
in
dec
sahf
mov
mov
cmp
pop
xchg
fwait
push
jge
shrl
in
icebp
and
add
pop
pop
sbb
jb
mov
mov
cld
jo
orb
dec
enter
lods
inc
sub
pop
loopne
lods
push
xchg
adc
out
sbb
push
push
mov
sbb
xor
std
jge
dec
scas
and
mov
aaa
inc
enter
push
push
and
jmp
js
jp
xor
lret
loop
xor
cmp
cmc
pop
clc
push
scas
add
mov
sbb
loop
test
sbb
stos
in
outsl
lcall
les
xor
cwtl
mov
pushf
push
imul
lret
insl
pop
cld
jae
and
pop
add
repnz
aad
mov
pop
inc
retw
mov
jecxz
inc
int3
mov
or
or
in
btrl
pushf
push
sub
in
jl
in
push
pop
pop
mov
test
movsb
fwait
cli
jp
mov
jg
fldenv
or
jae
inc
xchg
xor
hlt
jbe
mov
out
mull
orl
xchg
outsl
fwait
scas
xor
sbb
insl
fisttpl
cmp
stos
aas
mov
push
sub
xchg
mov
data16
jl
arpl
pop
je
inc
pop
bound
jecxz
add
loopne
xor
jecxz
sahf
out
aad
mov
cmp
inc
mov
lcall
inc
mov
clc
and
fnstsw
mov
jp
cmp
call
lcall
imul
jge
cmp
into
hlt
out
int3
xchg
jno
nop
das
push
subl
jae
xchg
cmpsl
mov
lea
dec
cmp
dec
dec
lea
jb
repz
int
scas
es
lock
lock
add
pop
mov
fcoml
ljmp
mov
jnp
mov
shll
jle
jo
rolb
add
data16
int
or
jmp
pop
movsl
pop
aam
cmpsb
jb
adc
les
sbb
push
jae
stc
ja
mov
testb
inc
call
sbb
add
aaa
or
and
and
mov
daa
loopne
xchg
xchg
mov
movsl
ss
sahf
pop
subl
addr16
dec
push
call
mov
lock
ss
inc
sbbb
sub
add
incb
stc
sbb
roll
pop
mov
jns
sti
int
xorb
mov
mov
push
call
out
popf
sbb
cs
mov
jle
mov
cmp
mov
mov
adc
aaa
imul
scas
mov
fildl
scas
jo
in
jle
add
mov
sub
leave
lods
sarb
xlat
inc
out
es
add
sub
push
lret
xlat
mov
push
sub
rcr
inc
adc
scas
and
cmp
mov
mov
add
ds
sahf
aam
test
cs
adc
sbb
aaa
or
loopne
mov
sbb
insl
idivl
cs
mov
pop
out
insb
cmpsl
xor
std
push
or
hlt
fmulp
mov
mov
shufps
xor
roll
xor
dec
mov
rcll
lcall
jbe
adc
sti
xor
or
ficoms
fisttps
inc
mov
popl
add
outsb
dec
mov
je
xlat
xchg
ja
xchg
jecxz
adc
lcall
cmc
or
push
cwtl
adc
hlt
mov
mov
xor
inc
aas
xor
sbb
xchg
sub
jno
cwtl
add
repnz
lcall
ljmp
pop
fisubrs
fwait
jp
repz
adc
dec
mov
jno
xlat
je
out
lea
loop
adc
mov
push
das
mov
mov
cli
inc
adc
pusha
push
jae
push
sub
push
push
cmp
or
dec
xchg
popf
sbb
xlat
mov
icebp
aas
lcall
xor
mov
data16
std
lcall
and
xchg
test
cmp
cmp
icebp
and
je
adc
add
add
imul
rcrb
cli
sbbb
pop
and
stc
in
loopne
lods
mov
and
rcrb
cmp
ficompl
out
or
dec
jg
in
leave
inc
mov
mov
mov
dec
push
inc
dec
sbb
mov
cltd
pop
mov
dec
daa
mov
enter
xor
sub
xor
dec
jns
shrl
jecxz
lds
shl
nop
out
test
icebp
jbe
adc
or
imul
shlb
and
sbb
leave
fdivl
add
in
mov
cmpsb
mov
jb
inc
cmp
stos
and
cltd
out
and
xchg
jmp
test
and
fadds
pop
push
testl
shl
mov
shl
dec
dec
jge
mov
hlt
ret
and
xlat
rorl
or
repz
dec
or
lcall
mov
push
test
clc
cmp
in
and
pop
xchg
push
data16
inc
out
jns
and
and
xchg
xor
arpl
or
icebp
pop
mov
clc
popa
mov
jno
push
fcoms
sub
inc
repnz
mov
pop
pushf
mov
and
outsl
pusha
mov
loope
pop
push
jne
popf
insb
enter
sar
or
lahf
lea
pushf
data16
jns
mov
fldenv
jnp
fstps
pop
xchg
rolb
lahf
adcb
popf
xchg
in
dec
mov
jecxz
cmp
jne
jecxz
out
repz
jg
add
sahf
nop
inc
lock
in
or
or
xlat
and
mov
stc
and
xor
xchg
pusha
or
dec
add
jbe
push
mov
fdivs
sbb
leave
mov
sbb
call
test
push
inc
jmp
roll
add
pop
jle
cwtl
lods
or
loopne
nop
add
mov
aad
out
sbbb
rclb
xor
ljmp
mov
push
inc
cmpsb
bound
mov
cmp
xchg
insl
data16
mov
pop
xchg
sbb
cmp
rolb
sbb
les
popa
cltd
subl
fldenv
mov
cli
cmp
int
lret
cltd
cltd
sub
mov
jle
mov
loop
mov
pop
cli
leave
inc
mov
inc
xchg
in
cld
pusha
jmp
xor
inc
dec
inc
das
js
ja
popf
xor
adc
xchg
add
aad
inc
scas
movsl
sub
mov
repnz
mov
dec
push
push
xchg
jmp
repz
orl
inc
inc
pop
cld
int
ret
sub
lods
aam
xchg
mov
xchg
in
movsb
jno
sbb
stos
push
out
cld
mov
cmp
pand
hlt
and
xchg
push
xchg
or
add
mov
xchg
adc
cs
cld
jl
cltd
mov
and
sbb
jae
je
aam
lea
jmp
jnp
in
inc
rcrl
push
vphaddudq
mov
add
rcrl
add
movsl
dec
and
mov
jbe
movsl
xor
hlt
in
insl
jg
movsb
int3
mov
and
sti
hlt
sbb
lret
dec
ss
in
dec
leave
lds
mov
and
dec
sub
jo
clc
daa
popf
xchg
xchg
hlt
call
fwait
dec
add
push
dec
sub
sub
ja
leave
ficompl
xlat
ret
mov
mov
cmpsl
jnp
push
adc
divb
loopne
fmuls
int3
sbb
dec
ret
pop
mov
insl
bound
ss
into
sbbb
inc
cmp
xor
cwtl
cmp
dec
dec
enter
pop
jg
jl
push
std
sahf
lahf
lcall
mov
pop
jb
les
xchg
jmp
outsb
adc
insb
cwtl
mov
repz
into
mov
jbe
das
leave
dec
mov
and
ret
inc
lret
fcmovnu
pop
push
hlt
stc
inc
pop
jo
in
outsl
dec
stos
mov
inc
jb
xchg
or
ljmp
outsb
fimull
jg
cmp
push
cmp
xor
pop
test
sbb
jnp
or
fincstp
hlt
lcall
mov
clc
iret
xchg
gs
hlt
sti
and
insl
fmuls
int
xor
xchg
or
and
out
jbe
push
push
sbb
bswap
rcrl
cmp
inc
mov
pop
mov
inc
notb
fs
dec
cmp
jle
addl
cmp
idiv
mov
lds
pushf
xchg
lds
popa
or
and
jp
push
dec
mov
xchg
pop
test
jne
fisubrl
stos
pop
mov
cmp
fldt
in
pop
cltd
sbb
jbe
je
mov
pause
ja
push
mov
cmp
or
in
jecxz
jge
add
stos
pop
mov
mov
stc
call
fidivrs
test
jl
test
xchg
cli
lea
adc
movsl
sbb
cmp
xchg
lds
push
ss
cwtl
sti
lret
punpcklbw
add
faddl
rep
push
adc
push
cmp
inc
fsubl
lods
xchg
xlat
loope
mov
sbb
sbb
lds
push
sbb
dec
add
lcall
jo
addb
int
add
outsl
xchg
jnp
aad
mov
push
jmp
outsb
mov
cmpsl
pop
cmp
jnp
sahf
test
dec
adc
call
ds
out
adc
lods
lret
mov
iret
ljmp
mov
sarb
cmp
add
cmp
dec
push
sbb
jp
sub
stos
repz
cmpsb
and
ljmp
fbstp
cltd
pusha
and
movsb
mov
fisubs
push
sub
mov
shl
jg
shlb
in
sub
ss
mov
jl
nop
cmp
xor
jno
lret
xor
dec
shlb
ss
add
mov
jae
sub
stc
lock
push
xor
into
jb
sti
inc
mulb
dec
pop
lods
hlt
mov
repnz
mov
fsubl
sbb
and
and
in
mov
fnstcw
cmp
mov
daa
in
inc
or
cmc
std
xlat
rorb
mov
shlb
insl
adc
pop
fs
mov
jb
sub
fldl
push
test
and
cltd
pop
into
mov
ljmp
nop
in
frstor
lock
bound
popf
lea
sahf
push
js
lds
enter
addr16
ret
inc
jg
aas
or
dec
xchg
shll
lahf
cs
mov
loope
or
mov
aaa
xchg
add
pop
cld
add
cmpsb
movsl
movsl
add
dec
mov
jns
sbb
repz
xor
and
test
mov
push
sub
inc
ljmp
cltd
notl
jmp
xlat
ret
push
cld
pop
cld
inc
push
pop
and
and
cmp
mov
adc
jle
jecxz
mov
pushl
fists
xor
inc
insl
or
mov
subl
adc
add
ss
repz
jae
mov
in
lea
pop
stc
sub
out
dec
sbb
lahf
push
out
pop
stos
dec
adc
jo
int3
mov
std
jg
scas
stc
lods
adc
lock
add
jl
pushf
xchg
mov
cmp
xlat
push
push
pop
in
jns
jb
pop
sti
enter
mov
nop
or
xlat
add
dec
sbb
cmp
xchg
daa
cld
sbb
push
lods
stc
das
insb
cmp
jge
es
pop
push
sub
pop
xchg
sub
mov
std
xor
outsl
sahf
pop
pop
mov
imul
mov
jno
inc
cmp
sub
iretw
add
push
mov
ss
xor
adc
stos
fisttps
adc
inc
addr16
ss
sub
ret
lods
pop
fwait
mov
push
pusha
aad
loope
int
in
adc
mov
jle
mov
lret
and
sub
mov
mov
and
lcall
outsb
pop
inc
push
scas
pusha
aaa
cmp
push
pushf
add
loop
add
sbb
fsubrs
popf
or
jle
jnp
sbb
ljmp
inc
or
and
loopne
jmp
enter
jae
jl
nop
enter
or
aas
push
pusha
pop
testb
bound
and
jp
or
fsubp
ret
inc
mov
xor
mov
xchg
cmp
mov
into
imul
shll
pop
jmp
mov
js
mov
movsl
sub
sbb
pop
and
test
adc
jl
mov
xchg
or
movsb
movsb
adc
lahf
outsl
xchg
fwait
loope
pop
sbb
jae
lods
sbb
or
push
xchg
sti
add
adc
jge
ds
test
test
dec
xchg
push
pop
add
jle
push
cmp
fiadds
lods
js
and
mov
and
pop
jnp
divl
in
sti
in
std
out
mov
push
or
int3
es
jo
push
movsl
lahf
sbb
stos
js
sub
push
and
shl
roll
add
cmp
mov
fs
jp
mov
cld
ret
add
outsb
mov
pop
inc
ja
pop
cld
gs
mov
xor
negb
and
ja
loopne
xor
lcall
rclb
or
sbb
add
shrl
insl
push
cmpsb
jns
ret
xchg
test
sub
or
dec
adc
and
mov
sbb
popa
into
sbb
in
decb
movsl
lret
out
jb
ret
popa
sbb
ficomps
popa
cwtl
int
gs
dec
imul
stos
sbb
sub
fs
rcll
push
push
fld
mov
and
leave
xchg
jns
or
in
push
sbbl
bound
fsubrs
ljmp
xchg
jg
fists
js
pushf
ja
out
sbb
addl
faddl
sbb
ret
xor
and
add
pop
adc
fdivs
shrb
push
push
sahf
jle
stos
xchg
aad
scas
and
or
push
subl
andl
pushf
push
insl
stc
fcmovnu
xchg
dec
jo
dec
mov
scas
jl
mov
mov
pop
icebp
mov
popa
adc
and
nop
rol
xchg
dec
mov
mov
std
xchg
push
int3
std
adc
insb
scas
mov
cld
push
inc
mul
mov
push
into
mov
mov
gs
pop
pop
cmp
xor
bt
loopne
std
fwait
out
jmp
out
push
imul
repnz
sub
xchg
xchg
outsl
ret
pop
jmp
test
lods
pop
addr16
adc
fists
fisubs
xchg
push
das
mov
xchg
js
movsb
stos
mov
lods
sub
sub
push
out
adc
aad
sub
movsl
aad
daa
jnp
jnp
pop
adc
inc
daa
add
in
or
clc
jnp
les
pushf
repz
sbb
nop
shrb
out
negb
cmpsl
xlat
adc
mov
and
dec
cli
fdiv
mov
stos
jne
lcall
xchg
cmc
sub
bnd
cmc
push
stos
bound
popa
sbb
push
insb
or
sub
jb
mov
add
lea
jle
jb
xchg
outsl
pop
std
adc
lcall
shlb
enter
fcomps
sbb
add
out
jne
jmp
push
xor
rorb
jp
jnp
push
and
into
mov
mov
dec
sbb
xchg
nop
inc
inc
jl
xchg
adc
or
push
es
stos
jne
xlat
sbb
mov
inc
pop
jmp
sbb
into
jl
test
inc
cmpsb
aam
das
xchg
ljmp
ss
push
adc
xor
jb
sbb
jnp
addl
repnz
aad
inc
je
gs
fidivl
pop
mov
cltd
xchg
cmpb
and
pop
scas
pop
jne
fcmovb
or
aad
mov
xlat
ss
and
mov
cmp
mov
addr16
mov
sbb
cltd
sbb
das
imul
aaa
rcl
push
movsl
fcoml
in
or
mov
jns
rcl
jo
test
mov
sarl
mov
jb
and
movsb
cld
push
push
sti
sub
jnp
pop
mov
sbb
sbb
pushf
in
xchg
pop
mov
adc
add
or
jae
push
inc
ret
aam
jns
subl
js
movsl
jbe
mov
cmp
add
pusha
and
cs
hlt
call
jmp
mov
adc
repz
xor
fwait
cmpsl
idivl
repz
mov
enter
add
add
addr16
mov
add
xchg
insl
addb
sub
xor
lods
mov
pop
dec
push
popf
into
bound
gs
fistpll
and
adc
pusha
fisubs
push
sbb
test
fwait
xor
sbb
and
mov
orl
dec
jbe
sbb
in
imul
enter
jge
mov
xor
push
dec
aad
jae
sti
call
leave
inc
ljmp
int
std
mov
mov
mov
xchg
jns
cmp
add
mov
xchg
jnp
add
es
push
out
stos
xor
mov
les
fnstenv
nop
test
sahf
fdivp
lret
xor
jns
jecxz
jno
push
sbb
imul
aad
subl
mov
cli
fdivr
fistpll
jo
fxch
mov
push
dec
lcall
test
fcompl
fnsave
and
rcl
mov
push
mov
xor
test
js
mov
aam
rorl
adc
shrb
movsb
add
and
fdivrs
push
int
add
sbb
and
inc
rcr
lods
pop
dec
repz
pop
cmp
aad
pushf
jl
dec
je
je
int3
xor
in
xchg
xchg
repz
iret
out
movsl
bound
mov
dec
sbb
mov
adcl
pop
xor
incl
jecxz
lret
xchg
call
and
mov
inc
repnz
mov
orb
pushf
cli
mov
lahf
cmp
or
cwtl
rcrb
in
cmp
or
stc
mov
bound
dec
or
orl
into
sti
shll
jno
rorb
push
jg
mov
cli
test
mov
xchg
inc
xchg
xor
cli
loopne
movsl
ss
add
call
jmp
sbb
adcl
sub
mov
in
mov
das
adc
and
lods
dec
scas
std
fcompl
cmp
mov
mov
inc
testb
sub
mov
push
fwait
dec
faddl
popa
jo
pop
mov
inc
push
fcoms
push
ficompl
lahf
ficomps
xchg
cltd
loop
add
lds
lds
mov
repz
imul
cs
mov
cwtl
testb
xchg
fwait
dec
lret
mov
cmpsb
cltd
fldcw
or
mov
movsl
push
cmpsb
xchg
int3
jge
vshufps
hlt
jnp
cld
inc
push
fimull
mov
push
jae
mov
push
imul
mov
stos
mov
or
sbb
stos
out
adc
push
sbb
sub
fs
inc
lcall
repnz
inc
arpl
dec
movsb
mov
das
xchg
pop
lds
popf
push
mov
sbb
popf
mov
xchg
push
stos
test
imulb
xchg
aas
jb
lods
test
jl
ljmp
push
stos
std
sbb
pop
push
aas
cli
ficoml
loopne
mov
cltd
lock
sub
ljmp
aas
add
andb
or
je
rolb
dec
out
je
and
fbstp
adc
call
cmp
test
dec
mov
scas
pop
jl
stos
sbb
test
jl
fisubrl
or
dec
pop
insb
aaa
xor
daa
mov
lea
xorb
lret
pop
pop
jne
push
pop
and
jmp
xchg
xor
enter
push
sar
add
mov
aas
fisttps
xchg
add
popf
decl
dec
shlb
sbb
pop
pop
inc
pop
fs
imul
out
aam
pop
test
mov
rol
dec
rol
enter
jp
in
shrl
in
jne
push
ret
loopne
lcall
add
or
insb
xchg
xchg
mov
jns
in
xchg
int3
fisubrl
mov
sbbl
stos
arpl
dec
jmp
jmp
mov
mov
fwait
imul
out
pop
test
jge
enter
adcb
sar
mov
push
lret
fcomi
pop
or
mov
xchg
aas
dec
xor
mov
mov
mov
push
cltd
jbe
pusha
add
hlt
push
lods
ds
inc
cmp
mov
inc
fimuls
fisubrs
ret
movl
or
xchg
adc
or
pop
add
bound
add
mov
mov
out
int3
jo
lcall
xchg
repnz
adc
arpl
es
lods
or
mov
mov
outsl
jg
cld
xchg
stc
mov
sbb
mov
dec
jbe
sbb
xchg
pop
cltd
ret
ljmp
dec
mov
jge
push
jno
push
bswap
xor
adc
and
lock
inc
sub
push
mov
push
cmp
cmp
stos
repz
dec
mov
cmc
xchg
xchg
mov
xchg
fcomps
inc
in
addb
stos
ja
jmp
inc
ret
pop
outsl
icebp
mov
push
mov
out
xor
and
imul
int3
adc
cmc
xchg
imul
js
faddl
rol
push
mov
ja
push
mov
inc
mov
jnp
hlt
or
aad
push
xchg
dec
or
mov
pop
inc
sbb
pop
jbe
cmp
shrb
cld
push
lock
push
in
decl
aam
ja
mov
test
mov
pusha
rcrl
xor
mov
inc
daa
push
or
hlt
dec
fdivl
jno
push
mov
cwtl
mov
sbb
shrl
ds
orl
pop
and
jecxz
add
aam
sub
inc
flds
pop
lds
das
loope
pusha
cmc
inc
push
gs
aaa
inc
and
lods
xlat
jp
sub
aaa
insl
push
outsb
inc
ret
scas
in
lods
cs
sti
cltd
adc
scas
xchg
movsb
es
push
pop
loop
mov
test
sub
enter
inc
pop
pop
out
xor
nop
cwtl
lahf
int3
pop
in
test
push
notl
aad
inc
aaa
and
loop
and
pop
imull
push
bound
add
jge
hlt
jo
or
je
mov
push
pop
stc
or
shrb
nop
pop
dec
dec
addr16
inc
lahf
jae
inc
push
das
outsl
ja
mov
popa
in
fisubl
adc
jno
movsl
int3
or
xchg
mov
test
imul
push
add
lock
pop
lret
call
stc
mov
movsl
jp
cmp
xchg
xor
loop
jle
adc
imul
cld
mov
add
xchg
in
loop
pop
nop
cmpsb
xchg
mov
scas
bound
dec
popf
hlt
adcl
lock
jecxz
addr16
es
jns
fadds
repnz
stos
enter
aas
push
aas
mov
aas
dec
in
jmp
push
sub
cmpsl
mov
dec
cli
ficoml
and
rcrl
rcrl
cmpsb
and
repz
push
shrb
xor
nop
mov
popf
mov
mov
push
or
es
shlw
pop
sbb
mov
sub
push
push
lret
nop
lcall
dec
out
sub
aam
out
push
add
push
scas
sub
int
mov
lcall
jae
pop
xchg
jg
pop
jne
addb
jg
insb
loopne
cltd
push
hlt
xor
inc
or
in
inc
pop
cmp
psubw
fdivr
nop
or
adc
movsb
xor
sarb
mov
or
sub
xor
mov
mov
jno
orl
pop
xor
push
out
and
cld
sbb
hlt
cmpsb
xchg
xor
pop
jg
xchg
sub
ds
jge
inc
cmpsl
push
xchg
xor
cmp
ds
insl
and
scas
popf
mov
xchg
jb
adc
ret
mov
xor
lret
test
bound
fs
or
es
push
adc
cmp
adc
add
movsl
lods
lahf
sahf
mov
cmp
mov
xor
cmpsb
je
sub
mov
jp
sub
hlt
jo
xor
pop
mov
mov
lea
iret
out
loope
mov
mov
mov
cs
sub
push
push
daa
and
ljmp
test
bnd
push
xorl
divl
shll
or
out
xor
hlt
out
push
dec
sar
cmp
jge
or
out
movsl
add
ret
fstpl
inc
pop
insb
xchg
lahf
push
fisttpll
or
imul
mov
std
out
in
sahf
arpl
jp
and
push
or
mov
mov
xor
rcr
arpl
lock
adc
in
out
adc
sub
ljmpw
push
cmp
push
cmovp
pop
and
mov
data16
ds
push
nop
push
mov
ja
test
jae
out
pop
mov
sbb
and
mov
mov
iret
ja
subb
push
mov
push
dec
imul
mov
movsl
es
jecxz
jnp
dec
push
stc
fucom
test
cltd
aam
or
sub
sahf
and
dec
pop
push
outsl
xchg
neg
add
jecxz
imul
sbb
ret
jb
pop
sahf
testl
pop
das
test
outsb
in
clc
jbe
inc
std
mov
fdivrl
adc
stos
mov
movl
jecxz
insb
push
pop
xor
jge
fcomp
or
adcl
lret
sub
cmp
aas
pop
imul
jle
movsb
mov
cmpsl
xlat
xchg
push
test
test
std
cmp
icebp
imul
or
cmc
pop
rcrb
dec
stc
xchg
xor
hlt
or
ljmp
jl
mov
push
or
mov
aaa
cli
stc
popf
or
movsb
frstor
lods
dec
dec
imul
enter
test
xor
lds
iret
pop
mov
pop
sbb
addr16
jecxz
cmpsb
mov
inc
add
jle
sub
ja
pcmpeqd
aad
rcrb
lcall
mov
testb
data16
into
mov
mov
or
inc
test
dec
sub
fs
ja
xchg
add
pushf
call
pop
fadd
pop
movsb
loope
sahf
sbb
test
fistps
das
cmp
add
ret
add
mov
push
sbb
shrl
sub
and
cmp
xor
cmp
pusha
jp
bound
test
fsubl
loope
cltd
mov
popf
xchg
jae
aas
inc
xor
shll
xchg
insb
daa
adc
or
rcl
push
test
mov
pop
mov
mov
add
fwait
cmc
xor
dec
std
push
sbb
mov
inc
pop
xchg
lahf
sub
inc
data16
int
insb
mull
icebp
aad
ret
fistpl
xchg
test
dec
xchg
rorl
pop
xchg
in
loopne
int
cmp
xor
cmpsl
xlat
aam
test
imul
stc
outsl
lahf
cltd
xor
jecxz
inc
das
mov
add
das
out
outsl
sub
pushf
out
popa
lods
pop
xor
sub
cltd
scas
inc
outsl
inc
inc
in
adc
add
push
shll
mov
bound
mov
xlat
xor
inc
loop
xchg
test
ret
cmc
pop
xchg
sub
sbbb
jp
mov
mov
pop
adc
cmc
pop
adc
fidivl
pop
pop
mov
movl
fcmovbe
xchg
ffreep
mov
cld
lods
jl
cmp
inc
jmp
popw
fisttps
mov
mov
sbb
mov
mov
xchg
imul
repnz
mov
and
or
mov
faddl
dec
xlat
and
dec
mov
jb
and
out
scas
leave
adc
das
in
incb
mov
fsts
mov
adc
xchg
xchg
stos
sub
jp
push
dec
insl
jnp
cmp
mov
push
testb
js
cmp
icebp
gs
test
xor
xchg
jno
ret
cltd
xor
fs
jp
pusha
xor
iret
leave
mov
ret
jns
or
fildl
jnp
add
add
dec
stos
imul
out
shrl
cmp
add
sti
data16
std
xor
test
popf
je
pop
fisttpll
sbb
int3
sub
cmp
cmp
mov
jo
sub
or
out
or
mov
pop
xchg
mov
rcll
pop
pop
in
das
movsl
jmp
je
cmpsl
push
scas
jns
out
cmpsb
pop
rorb
cmp
mov
xlat
mov
sub
push
shlb
and
mov
cltd
aam
aas
ret
add
dec
and
cmp
test
mov
and
mov
clc
lret
enter
imul
cmp
push
fstl
jbe
aas
jno
xor
sub
cmp
cmp
ret
cmp
lock
scas
push
lods
lahf
imul
mov
cmp
adc
mov
dec
insb
bound
addr16
cmp
or
push
outsb
cmp
lret
pop
nop
aad
inc
arpl
icebp
popa
or
or
or
and
mov
sbb
sub
lret
jmp
hlt
adcb
adc
idivb
sbb
pop
push
mov
movsl
aaa
or
add
popa
out
jo
xor
sbb
cltd
aam
stos
cld
lret
xor
in
aas
xor
mov
jmp
clc
insb
sub
ret
pop
adc
popf
lods
xchg
mov
xor
aam
lods
aam
das
call
test
jo
scas
jge
and
adc
inc
into
scas
dec
out
mov
ret
pushf
pop
cmp
repnz
push
arpl
jge
xchg
dec
inc
add
xor
sbb
mov
mov
repz
mov
ds
push
mov
mov
fs
jl
jno
cli
xchg
iret
test
inc
fs
xor
add
xchg
das
xchg
xchg
dec
sbb
aaa
mov
add
sbb
iret
enter
cmp
lahf
stos
mov
rol
xlat
xor
adc
sbb
and
or
ror
add
sub
and
shrl
or
sbb
pop
xchg
jae
arpl
leave
dec
sbb
enter
push
cmp
dec
jmp
popf
popa
popf
pushf
movsl
dec
or
je
call
inc
push
repz
jno
bound
pop
out
mov
inc
mov
pop
cmpsb
je
out
fcomps
push
dec
ljmp
mov
dec
fsubs
sub
out
iret
xor
pop
push
jg
pop
and
adc
call
or
sbb
out
jns
sub
cmp
in
push
jne
out
ss
es
adc
xor
jle
or
fdivr
movsb
jno
stos
inc
aam
divl
mov
xchg
cwtl
test
xchg
ret
add
jl
insl
cmp
mov
push
dec
push
test
adc
repnz
sbb
xor
fucomi
clc
outsl
push
inc
popf
sub
dec
or
js
jo
dec
adc
stos
cmp
mov
xor
call
xchg
fwait
pop
mov
imul
lcall
sbb
hlt
pop
push
fld
adc
sbb
mov
pushf
punpcklbw
into
loop
in
fsubp
jb
shlb
push
int3
repnz
enter
stc
popf
in
out
ror
jmp
ret
pop
xor
outsl
cmp
mov
pop
arpl
push
mov
mov
mov
sub
jl
fnstsw
fwait
adc
dec
mov
xchg
sbb
mov
sbb
je
xor
or
cs
sbb
arpl
adc
cli
ja
push
xchg
mov
sub
out
pop
insb
add
clc
stos
cmpsl
gs
add
lcall
out
pop
lcall
dec
cmp
jbe
hlt
scas
push
mov
or
movsl
xor
outsb
adc
daa
lock
int
stc
pusha
xchg
loopne
test
and
cwtl
out
nop
aam
adc
push
dec
outsb
jnp
mov
mov
mov
imul
in
sub
aas
xchg
sub
mov
jo
cli
cmp
lcall
jae
sbb
iret
scas
dec
sbb
cld
das
push
rcrb
das
push
sarb
rorl
dec
sti
dec
dec
dec
mov
push
cltd
div
arpl
adc
mov
cmp
dec
pop
cmc
and
adc
fistl
test
inc
std
adc
sbb
scas
sti
lods
insb
cmp
or
add
push
pop
cmpsl
int3
add
cmp
shll
imul
mov
adc
ret
jnp
in
mov
hlt
fstps
bound
mov
dec
into
adc
pop
adc
cmp
xor
cmp
test
fdivl
cmp
push
mov
mov
cmp
fistps
add
je
fisubs
push
in
push
xor
mov
mov
sub
pushf
inc
test
sub
pop
sub
push
fwait
rol
fnstcw
or
inc
mov
add
into
inc
xchg
shlb
xor
mov
fisubs
adc
insb
es
fwait
pusha
xor
sahf
push
gs
aaa
xor
pop
dec
push
sahf
xchg
push
and
add
dec
imul
mov
cmpl
or
dec
fwait
addb
popa
andb
mov
sub
jl
pop
test
xchg
or
sti
jns
imul
ljmp
or
inc
adc
cltd
mov
repnz
push
test
or
pop
inc
cmp
jne
cwtl
mov
inc
sahf
push
pop
mov
popa
movsl
sbb
mov
cmc
insb
gs
shl
pop
and
pop
rorl
inc
jmp
pop
push
ljmp
call
push
dec
xchg
push
jne
xchg
cmp
xchg
jl
and
xorb
mov
push
sbb
sub
xor
jmp
add
mov
sub
fld
mov
rcll
ret
ja
inc
inc
sub
fs
subl
ret
mov
mov
mov
lea
pop
scas
mov
aaa
push
daa
in
pop
jo
sbb
aam
pusha
imul
sahf
jno
lods
ds
inc
das
ljmp
out
adc
sar
mov
push
loope
into
enter
sarl
adc
add
mov
out
push
mov
andl
jb
push
outsl
xchg
test
sahf
xchg
loop
xchg
xchg
push
lods
or
adc
xor
test
adc
leave
pusha
fs
sti
das
inc
or
inc
pusha
cmp
cmpsl
faddl
stos
mov
in
in
out
lods
cli
rcll
xchg
adc
mov
xor
push
xchg
insb
mov
mov
repz
mov
cs
lea
jge
test
cltd
rorl
mov
cmc
in
adc
sbb
les
cmpsb
pop
pop
call
into
hlt
popf
pop
mov
xchg
maxps
in
xor
xor
push
xor
repz
mov
scas
lret
cmpsb
outsl
repz
mov
in
lcall
lods
push
insl
inc
dec
mov
sub
jno
stos
adc
dec
xor
xchg
jg
dec
movsl
jbe
inc
push
pushf
lcall
stos
adc
xor
xor
push
mov
incl
hlt
sub
call
lahf
outsb
loop
lock
fcompl
and
imul
xchg
mov
icebp
int3
stos
jge
xor
push
ret
sbb
test
arpl
adc
push
imul
shlb
cli
mov
insb
cmpb
movsb
cs
popa
movsb
aam
push
fbld
js
out
push
fs
adc
fistpll
ljmp
scas
xor
into
lahf
push
mov
jmp
adc
adc
mov
cwtl
aam
or
movsl
popa
loop
hlt
push
rolb
xchg
daa
test
xlat
cmp
mov
mov
mov
cmp
lods
adc
cmc
jno
mov
or
push
push
ds
adc
mov
fistpl
popl
mov
xor
out
aad
push
cmp
pop
nop
enter
popf
icebp
int
sbbl
adc
loop
mov
stos
ja
sahf
mov
inc
xor
fiadds
cli
xor
adc
push
rolb
mov
stc
fucom
call
setle
cmp
mov
dec
xchg
xchg
sub
jl
jp
jle
xchg
ss
fcmove
insl
mov
add
mov
fnstsw
clc
jecxz
adc
in
push
test
and
or
dec
lds
pop
xor
lea
bound
lahf
push
dec
loop
fs
push
inc
inc
lahf
sti
jbe
pop
adcb
jno
cmp
push
loopne,pt
test
and
out
les
push
jge
mov
dec
pop
mov
cmpsb
push
repz
push
push
fwait
mov
add
dec
mov
aam
adc
insb
xchg
in
hlt
sub
jmp
or
ftst
out
mov
mov
loope
fcmovb
shlb
fs
adc
push
lcall
cmp
inc
test
fisubrl
fwait
pop
lcall
or
xlat
mov
and
dec
sbb
into
xchg
repnz
jg
jmp
mov
test
mov
sub
test
mov
fidivrl
shll
lret
dec
jge
jns
sbb
lret
cmp
xchg
jae
inc
or
sub
add
pushf
pop
sahf
cmp
mov
push
adc
movsb
pop
gs
sarl
loop
adc
xor
push
xchg
xor
or
ds
pop
push
add
cmp
push
adc
sub
and
adc
adc
les
or
in
decb
out
lret
mov
sub
leave
outsl
xor
ret
ss
leave
icebp
call
enter
cmpsl
dec
arpl
lcall
push
adc
or
xchg
and
cmp
mov
movl
cmp
mov
jl
sub
stos
cwtl
scas
jmp
xor
jno
and
jns
mov
cmc
outsl
and
sbb
dec
add
emms
cltd
or
sar
sbb
pop
cmp
jg
pop
mov
sbb
mov
fdivrl
mov
xlat
imul
lods
adc
sbb
shrb
pushl
pop
sub
mov
add
lds
stos
inc
movsb
stos
or
push
xor
jno
scas
jae
outsl
pop
daa
jnp
mov
mov
or
jne
cmp
cmp
xchg
insb
adc
pop
xor
test
xchg
xchg
xchg
rorb
in
lock
pop
xchg
fwait
inc
jp
push
sub
pop
sub
xor
mov
mov
outsl
sub
in
mov
mov
push
or
xor
jge
pop
dec
aad
scas
sub
dec
pop
or
shrl
cmp
int3
or
rolb
mov
xor
in
jno
or
mov
mov
jb
repz
xchg
mov
test
je
outsb
nop
xor
clc
add
mov
lock
mov
cmpsb
inc
cmp
stc
lds
mov
jae
lds
and
nop
or
or
inc
movsb
pop
fistpl
sub
jecxz
pop
add
xor
adc
subb
ret
neg
repnz
mov
xchg
jmp
mov
xor
test
sbb
rcll
shll
filds
push
cmp
pop
mov
jo
xchg
xchg
dec
lock
mov
loopne
push
in
pop
testb
mov
xor
aas
sbb
xlat
mov
mov
inc
les
lea
inc
jne
push
je
lret
outsb
in
fsubrl
enter
paddw
mov
inc
mov
fwait
dec
mov
insb
cli
sarl
pop
mov
loopne
dec
sub
mov
dec
cs
cli
fmulp
pop
lahf
jns
mov
push
adc
test
out
add
dec
lret
adc
rolb
sahf
sub
xchg
call
pusha
bound
shl
sarb
mov
ja
dec
xchg
lods
hlt
fbld
dec
push
xlat
vmovdqu
push
mov
and
and
int
mov
xchg
push
ja
loope
fdivl
and
add
sub
test
pop
ja
in
stc
out
cmp
lahf
sahf
mov
sbb
insl
repnz
hlt
sbb
loop
imul
and
and
mov
xchg
sub
out
jnp
jg
arpl
popa
outsb
pop
shl
inc
lret
das
push
daa
ret
fnstsw
xchg
scas
and
adc
mov
in
add
call
mov
mov
les
cmp
jp
test
mov
lret
sahf
cltd
push
and
jbe
lret
repnz
insl
jecxz
add
add
jne
xchg
and
pop
in
xor
cmpsl
xor
mov
insb
and
mov
sub
dec
das
jge
mov
push
push
push
dec
ss
push
loope
inc
fisubrl
movl
mov
mov
int3
mov
dec
mov
mov
pop
push
pop
in
or
pop
xor
sub
std
jbe
mov
sub
xchg
sub
mov
jno
inc
inc
aam
pushf
lret
sub
or
mov
leave
xchg
into
movl
mov
pop
mov
cmp
je
mov
mov
jbe
push
shlb
loop
jmp
fstl
es
cld
lcall
jge
das
ficoml
fcoms
dec
fcmovne
jg
test
mov
xor
sub
xor
movsl
lds
rcr
sub
pop
lret
or
or
mov
push
cmpb
aam
shll
mov
fisubl
xor
mov
les
mov
punpckhwd
shlb
enter
shrb
inc
jg
and
lret
mov
push
push
xchg
dec
mov
adc
sbb
push
into
adc
mov
inc
adc
pop
pop
adc
mov
jecxz
les
add
sti
fwait
mov
sarb
mov
mov
mov
or
out
iret
daa
fistps
push
xchg
pop
mov
xchg
shll
inc
adc
xchg
dec
xchg
mov
push
mov
call
adc
jle
mov
stos
mov
std
and
cld
fsts
cli
sti
rdmsr
pop
test
popf
cs
jnp
push
jns
icebp
movsb
or
adc
xchg
aas
into
cmpsw
mov
mov
loop
pop
lods
dec
jp
push
mov
int3
add
outsl
dec
rcrl
es
loop
je
xchg
addr16
and
mov
push
loope
loope
sub
inc
xor
jecxz
jecxz
jge
dec
scas
stos
lret
daa
out
out
fidivs
insb
cmpsl
shlb
ljmp
int
push
lret
or
fwait
rcr
push
lea
pop
mov
cmc
add
clc
loopne
lret
sti
cmp
imul
das
inc
clc
es
fadds
and
xchg
loope
cltd
ja
xchg
cmp
cltd
push
cld
mov
pop
es
dec
stos
push
jnp
add
cltd
aaa
push
cs
mov
adc
mov
mov
jno
mov
imul
pop
pusha
lret
mov
push
add
test
jle
inc
xchg
es
outsb
and
xor
sarb
arpl
adc
push
roll
or
xchg
out
int
push
pusha
push
sub
sbb
dec
call
mov
insl
xchg
dec
mov
mov
jecxz
jb
mov
mov
repnz
outsb
inc
xor
and
std
stc
push
add
loop
mov
test
xchg
das
dec
cmc
jp
adc
je
cs
jo
cmp
add
sub
stos
xchg
pop
xchg
xor
inc
enter
gs
add
sbb
jne
loop
ss
push
dec
mov
sbb
jnp
scas
outsb
cmp
arpl
mov
sbb
les
or
into
pop
ret
cmp
xchg
sub
dec
loopne
mov
lock
pop
push
idivb
inc
adc
push
mov
icebp
loop
enter
out
push
xor
adc
mov
sbb
add
shll
loope
sub
in
add
sti
int
and
xorb
scas
stos
push
test
insl
cltd
aad
pushf
jns
popa
dec
jo
mov
sub
ljmp
data16
jecxz
push
jb
jp
and
lea
and
inc
fidivs
pushf
jl
push
jp,pn
outsl
test
aam
xchg
in
shlb
push
or
lcall
les
into
sub
imul
sar
pop
mov
insb
ljmp
xchg
xchg
cmpsl
cli
addb
mov
aaa
pop
xlat
mov
jecxz
std
lods
pop
filds
adc
cmp
cmp
in
iret
mov
mov
pop
in
mov
int3
cmp
pop
mov
inc
cmp
es
xor
dec
adc
outsl
adc
outsl
mov
repnz
ficomps
pop
out
and
cmpsl
sub
test
mov
push
mov
cmp
stos
loop
sub
imul
xchg
jge
sub
in
lods
xlat
ljmp
pop
pusha
hlt
jmp
daa
sub
incb
xor
jg
mov
add
or
push
js
pop
mov
sahf
popa
ret
test
jns
imul
pop
mov
adc
out
nop
push
dec
inc
mov
mov
push
or
pop
imul
in
sub
sub
andb
outsl
dec
mov
fiadds
pop
mov
movsl
or
and
in
fbstp
and
jecxz
insb
mov
and
mov
mov
mov
lcall
mov
daa
dec
dec
arpl
push
sub
push
decl
dec
adc
inc
push
lds
pop
or
repz
push
test
jg
push
cmp
shll
aad
pop
push
shr
fsubrs
jb
fwait
push
mov
jne
jge
imul
push
jo
js
out
test
cmpsl
iret
popf
xchg
mov
out
mov
rolb
sub
idivb
cmp
push
test
fs
les
gs
clc
mov
enter
rcr
sbb
fldcw
nop
je
ss
test
mov
test
adc
lea
addr16
out
mov
mov
imul
hlt
push
outsb
out
arpl
test
jge
jg
dec
dec
rclb
pop
lret
sahf
loopne
ret
push
repnz
das
cmp
sub
cmp
xchg
pop
pop
enter
xor
push
cmp
sbb
lret
aas
pop
cmp
and
dec
push
cmp
mov
and
loopne
add
mov
hlt
lea
xchg
stos
loop
outsl
inc
test
aaa
mov
jnp
xchg
jnp
xchg
enter
mov
or
sti
mov
insb
xchg
ds
js
xchg
aam
pop
pop
fisubl
mov
inc
out
mov
mov
cmp
sbb
dec
cmp
jecxz
gs
fidivrs
xchg
mov
inc
mov
movsl
cltd
lods
shlb
sbb
incb
cmc
sbb
int3
mov
xor
xlat
xor
paddsw
out
icebp
adc
mov
sub
fldl
add
pop
add
xchg
dec
push
jno
or
xchg
fcom
mov
insb
jns
das
hlt
xor
jnp
fsub
repz
jb
xchg
push
lcall
mov
cmpsl
sub
mov
xor
dec
dec
test
movsl
stos
mov
rorb
jp
add
popa
xchg
sub
pop
add
bound
addr16
dec
and
sbb
xchg
mov
pop
adc
cli
movsb
mov
dec
sahf
jbe
test
mov
enter
dec
mov
pop
xor
pop
xor
pmulhuw
pop
jbe
mov
xor
inc
push
ljmp
mov
int3
push
mov
push
mov
enter
or
stos
ret
sub
pop
mov
stos
push
hlt
inc
sahf
into
inc
movsb
shlb
sbb
pop
movsl
rcl
or
pushl
iret
fldenv
xchg
fcomip
test
test
cmp
add
xchg
ss
movsl
ss
or
dec
jb
negb
push
dec
inc
stos
test
pop
pop
mul
icebp
xchg
push
popa
xor
push
dec
mov
sbb
dec
repnz
mov
cmp
test
icebp
fildl
or
ja
and
nop
jbe
ljmp
rorb
iret
pop
sar
negb
jl
mov
inc
mov
testb
jno
mov
cmpb
in
in
mov
in
mov
repz
xor
sub
mov
adc
xor
sub
scas
out
ret
mov
fsts
popa
xor
subb
xchg
xchg
adc
cld
roll
mov
dec
in
popa
dec
jg
mov
inc
cmpsl
mov
aas
sub
std
xchg
cltd
jg
popa
mov
int3
imul
mov
xchg
shll
cmp
outsb
andb
pop
sub
pop
xor
add
xchg
lods
imul
inc
ss
push
imul
lret
cltd
inc
fmull
lds
pop
sub
enter
dec
movsb
push
out
jnp
pop
ljmp
out
xchg
inc
mov
test
jp
shrl
mov
test
movl
pop
and
jmp
paddusb
mov
mov
xor
pop
cwtl
xor
or
or
sbb
xor
add
mov
ret
xchg
xchg
mov
loopne
pop
adc
mov
enter
hlt
xchg
cltd
out
add
mov
daa
mov
xchg
mov
push
subl
cmp
pop
pop
sbb
in
or
adc
adc
xchg
adc
cs
adc
andl
jp
cmpsl
dec
dec
dec
pushf
push
fisttpll
xlat
daa
popf
les
mov
ja
in
mov
les
and
insl
push
sub
cmp
mov
fidivrl
pop
jne
out
test
call
shr
ret
addl
dec
xor
cld
sarb
insb
mov
mov
sbb
cli
mov
cmp
push
pop
cmpb
inc
sub
fucompp
outsl
dec
lea
mov
and
sub
adc
fimull
or
lahf
fs
push
jge
test
flds
inc
xor
loop
xchg
leave
cmpb
mov
jbe
jp
pop
add
movsb
mov
mov
xor
ljmp
mov
add
loop
xchg
aaa
hlt
lahf
mov
mov
jo
fmul
popa
lods
repnz
test
pop
div
sub
xchg
mov
jae
loop
push
hlt
mov
jns
sbb
adc
cmc
mov
pop
movsl
ds
xchg
cli
pop
dec
mov
stos
dec
incl
cld
xor
cmc
mov
or
adc
mov
dec
fnstenv
imul
js
jg
sbb
jecxz
les
mov
stc
test
into
pop
sbb
es
push
pop
lahf
lods
in
je
ss
sti
fdiv
cmc
mov
cmp
rcrb
adc
lret
or
xor
arpl
mov
and
push
loope
xchg
aam
xchg
inc
shlb
popf
aaa
inc
push
sbb
mov
les
loop
xor
push
sbb
rol
and
jg
inc
xchg
out
test
imul
jp
sahf
das
call
and
mov
sub
xor
sub
and
inc
aam
aad
ret
jecxz
and
pop
xchg
jb
mov
mov
mov
or
fsubrl
scas
xor
sub
push
push
loope
pop
and
fstl
mov
incb
movsl
xchg
mov
paddq
mov
clc
out
dec
or
mov
loop
jge
jo,pt
adcl
fxch
call
icebp
adc
popa
mov
jle
dec
mov
inc
or
sbb
push
jl
push
jns
orl
insl
cmp
nop
push
xchg
repz
repnz
add
cmp
std
js
push
popf
cmp
jae
jo
mov
adcb
inc
cmp
ljmp
jmp
xchg
add
mov
jmp
mov
xor
add
outsl
in
xchg
aas
mov
call
sbb
in
push
pop
shrb
cmp
int3
stc
dec
daa
push
mov
inc
aas
lods
aam
test
mov
call
jbe
inc
out
aad
stos
pop
cmp
shl
out
push
pop
fwait
jo
adc
lds
jo
jl
jb
adcb
lahf
add
mov
shlb
cmp
sbb
cmc
lods
out
inc
test
mov
jp
scas
cmpsb
mov
lods
fs
test
rclb
mov
push
test
or
shlb
cld
imul
pop
cltd
popf
jo
cmp
mov
pop
stos
xchg
jge
xor
andb
push
into
outsb
outsb
lds
xor
aas
inc
or
sti
or
repz
rolb
mov
lret
jo
lods
leave
xchg
call
gs
imull
adcb
pop
sbb
mov
mov
mov
stos
aam
test
lods
sbb
push
out
roll
or
mov
mov
sub
repnz
mov
add
cmp
insl
sub
clc
mov
or
inc
add
or
das
or
push
xchg
push
mov
repnz
fnsave
adc
loopne
mov
mov
adc
push
xchg
mov
jle
imul
aam
xchg
vpandn
out
jl
jne
pop
push
pop
push
lsl
lea
mov
inc
insl
cmpsb
mov
imull
add
mov
xchg
sti
mov
mov
or
sbb
int3
or
mov
mov
jecxz
cmp
dec
outsl
add
dec
cltd
sub
movsb
into
push
fsubs
shll
sbb
pop
pusha
jne
mov
int3
mov
cmp
gs
ficoms
loope
std
aaa
dec
rol
sub
cli
sbb
cs
filds
insb
lds
dec
push
add
mov
xchg
pushf
cmpsb
xchg
inc
js
insl
cmp
stc
arpl
xchg
loopne
mov
sarb
push
shrb
in
xchg
add
fsubrs
in
in
push
xchg
aad
pop
mov
fstp
xchg
xchg
sbbl
jae
insb
inc
imul
cmp
test
loopne
mov
ja
and
leave
push
sbb
insb
sbb
adc
addr16
pop
jmp
loop
in
and
mov
inc
daa
mov
gs
outsl
push
dec
movsl
in
test
cmp
pop
sti
hlt
mov
lock
outsl
xchg
mov
pop
enter
iret
mov
pop
cli
lret
cmp
sbb
insb
mov
cmp
mov
push
lds
out
sub
xchg
sbb
mov
add
dec
sbb
xchg
mov
scas
cmp
fadds
push
mull
sub
jb
test
lea
addr16
add
cmp
dec
imul
push
lret
mov
xor
clc
sarl
dec
pop
xchg
ret
movsb
lods
in
dec
jecxz
inc
scas
stos
repnz
aam
aam
cwtl
pushl
inc
add
adc
outsl
das
mov
hlt
aad
mov
or
movl
adc
int3
mov
pop
shlb
or
scas
das
mov
xchg
in
or
neg
gs
scas
out
mov
shrb
pusha
in
cs
and
mov
cli
pop
lret
push
jbe
mov
insl
lea
or
loopne
xchg
push
mov
push
or
pop
aaa
fdivp
cmpsl
hlt
push
aad
push
pop
sub
mov
lcall
arpl
shll
sub
jae
lret
push
push
xchg
ds
add
sbb
adc
xchg
xchg
cmp
shlb
push
inc
add
xchg
lods
shl
cwtl
jae
xchg
movsl
sbb
out
xor
not
fcomps
call
push
adc
and
xchg
and
inc
test
and
inc
out
lock
adc
test
or
cmp
sbbb
push
jge
push
cld
pop
roll
dec
and
jl
mov
cmovbe
fstpt
xchg
pop
push
arpl
adc
dec
or
cwtl
adc
sti
int
dec
dec
pop
nop
rorb
call
jge
pusha
test
int
iret
or
mov
rorb
sub
jecxz
jns
inc
inc
leave
pop
fwait
js
fnstsw
daa
repz
xchg
push
xchg
or
test
cmp
hlt
cmp
lock
scas
hlt
mov
xlat
mov
sbb
repnz
and
dec
or
xorb
ja
orl
jne
cmp
mov
cmpsb
jne
push
mov
pop
adc
adc
in
mov
inc
cmp
addr16
sbbl
push
sbbb
test
and
in
insl
in
pop
rolb
test
pop
je
inc
mov
daa
add
and
mov
leave
out
test
mov
inc
pop
jmp
xorb
or
sarb
or
addr16
loopne
arpl
ljmp
das
pop
out
pop
in
imul
sbb
lea
jl
mov
push
mov
shrl
cmp
mov
xchg
clc
shlb
sbb
pushf
or
adc
add
and
repz
dec
jne
cmp
mull
mov
lret
jb
es
sarb
fbstp
movsl
test
iret
mov
daa
sbb
fidivrl
push
jle
cmp
xchg
inc
addl
mov
clc
cmpsb
add
mov
sahf
hlt
sbb
push
fmul
mov
lods
cmp
pop
mov
aam
mov
cld
loopne
mov
pop
std
pushf
iret
xchg
ret
push
or
sub
outsb
or
mov
push
mov
cwtl
es
test
mov
adc
dec
pop
mov
inc
jmp
cmp
imul
mov
pop
xor
repz
xor
ljmp
mov
dec
xchg
and
add
fildl
test
into
push
lds
test
fidivrs
jno
xchg
dec
and
ss
lods
sub
ret
add
jb,pt
testb
mov
clc
mov
mov
and
cmc
pop
mov
lcall
or
xorb
mov
mov
fstl
mov
inc
test
jle
and
imul
jl
scas
gs
insl
sbb
xchg
pusha
fimull
lcall
or
dec
cltd
sub
aad
adc
aas
or
xor
jno
sub
lock
mov
outsl
pop
jmp
mov
cmp
jecxz
ss
mov
sub
sbb
fnstenv
mov
stos
fadd
sahf
addl
hlt
pop
fsts
mov
push
and
jp
fisubs
dec
dec
cli
pop
xchg
sub
imul
stos
jo
adc
pop
dec
hlt
inc
jns
mov
in
insl
imul
bswap
insb
add
jno
cmpsb
lahf
sbbl
and
les
lret
or
lods
scas
stos
fwait
xchg
repnz
hlt
test
stos
sub
add
shl
inc
shll
getsec
xor
hlt
push
jae
sub
xchg
int3
fildll
mov
pop
add
jge
sub
xchg
jge
or
adc
xor
scas
or
jae
gs
ja
leave
jb
lret
mov
call
movb
es
mov
lahf
ljmp
fwait
xlat
push
scas
mov
je
fstl
push
adc
mov
pushf
shl
dec
pop
stos
in
or
mov
push
scas
dec
mov
scas
sub
jmp
outsl
fwait
js
or
add
xchg
inc
dec
and
ret
fistps
pushf
push
rolb
stc
push
sub
add
sbb
lea
adc
not
out
pop
lahf
jbe
les
loope
cmp
mov
jbe
adcb
mov
test
leave
or
mov
fmull
xchg
mov
daa
push
cmp
push
imul
fdivrs
and
loopne
sbb
lds
jmp
adc
leave
out
leave
sub
mov
dec
dec
daa
aad
sbb
icebp
les
dec
mov
dec
xor
sub
and
ficoms
das
movsb
jbe,pn
rorl
fildll
or
orl
test
das
cmp
aas
adc
lods
aaa
mov
mov
test
dec
cwtl
inc
outsl
push
cld
jl
fcomps
out
sbbl
inc
jmp
std
add
inc
sub
loopne
cmp
fs
mov
add
ljmp
scas
lahf
inc
xor
push
aam
insb
sbb
out
addr16
push
mov
cltd
jp
mov
xchg
scas
in
idivl
cmp
je
fisttpl
aam
push
sub
gs
repz
adc
jecxz
scas
repz
and
xchg
ss
adc
xchg
jns
xor
js
or
mov
add
xor
ja
lahf
test
je
fcmovnbe
pop
mov
pop
test
mov
inc
push
or
pop
mov
xor
leave
insb
in
enter
adc
fnstenv
cmp
adc
mov
cltd
pop
cwtl
dec
das
mov
psubsb
int3
sar
mov
sub
subb
cwtl
xchg
and
out
jl
inc
fidivrs
mov
push
xor
mov
sub
jl
cwtl
loope
mov
cmp
add
or
fstpt
iret
fists
push
push
cwtl
push
mov
insl
mov
xchg
aaa
leave
pop
fisttpl
loopne
mov
cmp
and
icebp
test
pop
dec
rclb
mov
fs
pop
pop
into
testb
mov
mov
push
sbb
daa
sbb
push
js
test
or
adc
ljmp
pop
cs
xchg
xchg
fldl
clc
stc
int
pop
adc
jae
adc
popf
mov
mov
mov
sub
xlat
lock
sub
jne
fldenv
out
cmp
cmp
add
insl
stos
arpl
in
js
repnz
cmp
pop
in
or
push
hlt
sub
iret
dec
cmp
inc
bound
cltd
fdivs
and
and
aaa
mov
jg
adc
lods
push
jo
adc
mov
enter
dec
lret
cmc
imul
loope
int3
js
xchg
repz
jo
jmp
sbb
repz
xchg
test
jg
mov
dec
pop
or
push
cmp
push
into
sahf
mov
jmp
in
xor
mov
nop
testb
adc
mov
add
out
and
add
dec
jl
loopne
sbb
jo
cmp
popf
push
test
stos
fwait
jbe
fimuls
and
push
sbb
mov
inc
or
nop
je
leave
push
dec
xchg
mov
and
cwtl
ret
dec
mov
fisubs
movl
fidivs
and
cld
xor
mov
jg
push
dec
dec
insl
xor
inc
xor
nop
cmp
adc
jo
pop
aas
sbb
call
pop
sar
jp
movb
mov
in
addr16
or
clc
out
jne
fldcw
mov
inc
and
out
iret
or
test
loopne
adc
repz
loopne
aad
xor
rcrb
negb
repnz
in
push
push
scas
adc
inc
xchg
loope
pop
popa
bound
in
fdivrl
test
fildl
xorl
stos
xlat
push
ljmp
or
and
into
sarl
push
lds
fdivs
shl
push
push
repnz
and
in
jp
or
mov
pusha
dec
fdivrs
pop
test
jns
pop
sbb
xor
sub
movsl
jp
pop
scas
loop
insb
stos
repnz
lret
add
loope
mov
daa
mov
mov
xchg
popa
add
addb
push
dec
xchg
xor
mov
push
repnz
sbb
push
pop
push
gs
sarl
sbb
mov
push
xchg
mov
push
lock
mov
pop
lods
mov
gs
dec
sub
xchg
inc
cltd
sbb
cmp
xchg
ss
shrb
mov
adc
mov
into
mov
loopne
jnp
stos
jnp
aaa
sub
lahf
or
aam
add
mov
loopne
inc
push
in
pop
cmpsl
outsb
sbb
js
cmp
pop
mov
pop
sbb
push
cli
xchg
sar
jmp
fstps
jb
scas
inc
jno
xchg
lahf
mov
mov
imul
pop
out
test
test
rcr
jl
popf
sbb
mov
in
mov
fwait
mov
rorl
fmuls
sub
std
or
cwtl
sbb
fildll
ss
loop
xchg
sbb
cmp
jl
jb
cmp
aaa
shlb
shlb
jp
arpl
cmpsb
xchg
rcll
ds
sbb
cs
and
or
or
push
addl
loopne
lret
jge
repz
outsb
insb
fdivrl
xlat
ds
out
xchg
and
aam
inc
arpl
andb
xchg
fwait
sbbb
xor
push
dec
pop
out
jmp
inc
cwtl
cli
mov
sbb
dec
fwait
cmp
xchg
cmp
mov
outsb
je
inc
jae
pop
adc
rcrl
cmp
xlat
mov
adc
mov
call
and
loop
mov
addb
ficomps
cmp
adc
stc
nop
stc
ljmp
add
add
pop
sub
push
mov
mov
lods
mov
imul
lea
and
sbb
lods
sti
cmp
or
popl
pusha
pop
add
mov
popa
push
loopne
adc
shlb
mov
mov
mov
orb
pop
in
sub
pushf
pop
rol
sub
les
and
dec
or
hlt
sbb
shlb
pop
xlat
dec
xchg
sbb
aas
mov
sbb
popa
inc
clc
icebp
fisttpl
mov
pusha
das
mov
repnz
out
cmp
gs
mov
dec
adc
jno
mov
or
jnp
sbb
loop
cmpsl
lea
adc
cmp
xchg
or
cmp
add
sbb
scas
pop
shll
adc
jle
xchg
call
daa
xor
mov
push
insl
test
es
dec
push
add
lcall
push
xor
push
xor
or
into
imul
adc
dec
out
jae
xor
and
adc
mov
xchg
and
sub
loope
inc
mov
stos
fimuls
inc
mov
movsl
adc
and
adc
sub
pop
fsubrl
xor
sub
jmp
jns
int3
lret
cmp
jo
push
jle
lret
jns
pop
incl
sbb
jecxz
mov
mov
pusha
xchg
out
adc
jle
clc
roll
in
cwtl
push
cld
xchg
pushf
enter
jecxz
movsb
sbb
adc
sbb
sub
sub
lock
xlat
ret
mov
mov
rcrl
pushf
sbb
sti
fs
xor
dec
sahf
imul
xchg
add
mov
pop
sub
movsl
adc
mov
cs
push
add
insl
inc
into
push
inc
imul
add
in
lds
aas
adcb
cmp
inc
movl
movsl
data16
ja
cmp
and
mov
lret
push
and
inc
mov
cmc
mov
aam
fldenv
es
inc
cltd
adc
add
mov
arpl
mov
mov
data16
aaa
sti
push
test
mov
sub
and
inc
frstor
out
and
clc
test
mov
xor
jp
xchg
xchg
cld
popa
lret
mov
inc
push
dec
push
cli
fisttpll
fwait
out
js
mov
mov
xchg
pop
sub
mov
roll
cld
addl
and
add
jecxz
sbb
xchg
scas
rorl
cltd
or
pushf
sub
popf
mov
pop
iret
or
stos
xlat
jecxz
loop
aad
mov
pop
loop
inc
aaa
and
lahf
and
insb
mov
ds
enter
cmp
mov
int3
stc
sahf
pop
push
lods
pop
test
push
cmpsl
in
pushf
les
mov
in
add
mov
mov
mov
dec
roll
stos
insb
out
push
rcrb
jle
stos
jne
movsb
lcall
shlb
mov
testb
lahf
and
ret
mov
push
pop
jo
adc
sub
sub
mov
dec
ret
int3
mov
inc
push
lods
xchg
rcrl
ss
ret
adc
inc
push
pusha
divb
aaa
mov
xor
adcl
mov
and
and
out
cmp
sbb
push
or
int
push
ds
sbb
or
xor
ds
jns
lods
data16
imulb
or
rclb
mov
push
dec
cmp
leave
lahf
arpl
cwtl
adc
insb
sbb
mov
pop
loope
int3
sbb
fbld
pop
or
xor
imul
push
and
push
scas
mov
xchg
or
cmp
insl
add
int3
xor
and
imul
xchg
sub
jbe
jge
sbb
ficoms
sub
pop
insl
xor
stos
mov
iret
dec
xchg
sbb
add
bound
sub
jl
push
mov
adc
decl
into
int
or
fwait
mov
push
out
fdivp
pushf
pop
iret
fdivrl
mulb
in
add
push
ja
scas
fimull
mov
pushf
test
jge
popf
cltd
iret
lret
or
scas
pusha
sbb
or
icebp
xchg
inc
adc
jg
xchg
jbe
push
mov
sbb
mov
adc
cmc
cld
lret
mov
mov
and
fsubl
mov
adc
pop
push
sarb
fcomps
pop
ret
mov
out
sbb
mov
cwtl
xlat
xor
and
adc
xchg
ljmp
inc
adc
call
pop
popf
add
fucomi
js
dec
out
push
or
push
adc
push
cmp
das
insb
mov
ljmp
dec
pop
addb
sbb
add
enter
rorb
inc
jae
in
fwait
mov
inc
sarl
cmp
inc
xor
movsb
inc
push
hlt
les
or
mov
mov
arpl
dec
xchg
sbb
lcall
stos
xor
out
call
mov
int
push
leave
sbb
jbe
sbb
dec
or
pop
jmp
pop
mov
mov
ds
push
push
add
outsb
shlb
or
xor
sbb
loopne
hlt
pop
imul
inc
jmp
pop
xchg
adc
clc
lea
into
cltd
repnz
subl
fiaddl
out
fstpt
movsl
pop
mov
and
push
or
fstps
pop
push
jno
push
lahf
insl
repz
ss
data16
iret
clc
jp
xchg
aam
fwait
sub
rcrl
stos
shll
xchg
jbe
mov
cmpsb
rclb
or
imul
mov
xchg
loope
mov
lock
mov
add
cmp
xlat
gs
icebp
cmp
mov
ret
cld
jp
jne
sbb
inc
in
and
fldcw
hlt
or
push
lahf
mov
sbb
jg
mov
in
mov
pop
enter
mov
sbb
dec
in
xlat
out
mov
in
mov
nop
fisubs
mov
in
fsubrs
sbb
test
out
dec
push
sbb
mov
adc
mov
daa
inc
loope
cltd
call
inc
repz
inc
or
cmp
out
jb
xlat
negb
xchg
idivl
mov
or
repz
add
pop
mov
das
jbe
aam
xchg
mov
push
sub
sbb
dec
ficomps
xor
push
ds
pop
in
lds
inc
cmp
dec
out
fldenv
add
mov
add
sarb
shll
gs
in
cmp
cltd
je
xchg
xchg
fwait
dec
popf
push
push
mov
xchg
test
out
jne
pop
insb
jmp
cmp
lahf
shll
aaa
rcrb
cmp
pop
inc
popa
sub
call
adc
pop
push
mov
je
ja
shrb
sub
fnstsw
sub
sub
jmp
divb
adc
jle
repz
xchg
mov
cmp
adc
push
testb
cmp
sti
add
and
jns
sub
ljmp
aad
iret
dec
push
ss
dec
pop
in
pop
shll
es
and
xchg
mov
inc
sbb
add
dec
add
aaa
gs
lahf
push
fidivs
popf
xor
clc
iret
into
xor
or
in
fmuls
pop
xchg
pop
lcall
xor
test
test
ja
aad
dec
sbb
das
adc
imul
pusha
arpl
dec
stos
and
out
scas
dec
rolb
mov
cli
add
jnp
std
inc
sbb
rcrl
sqrtps
pop
push
pop
ljmp
jbe
and
pusha
sbb
xchg
inc
jmp
mov
mov
gs
xchg
mov
into
adc
lea
in
push
pop
push
lahf
imul
jbe
test
inc
sar
mov
sbb
mov
dec
repnz
jle
xor
dec
sub
or
insb
notb
test
xchg
sar
pop
mov
cmp
inc
inc
jge
repz
cmp
stos
mov
mov
inc
enter
mov
retw
and
in
mov
lods
mov
cld
push
fs
cmp
push
xchg
les
je
mov
orl
call
insb
andl
or
mov
imul
sub
jmp
sub
insb
dec
insl
xchg
out
lea
sbb
clc
adc
stos
idiv
adc
add
add
push
ss
mov
pop
xchg
out
jno
xchg
pusha
jl
cli
in
aaa
fdivs
fld1
push
lahf
jecxz
pop
pop
xorl
pushf
and
or
jp
push
add
sarl
push
bound
ljmp
insb
mov
pop
mov
cmp
pushf
ret
cmpsl
loop
mov
fwait
scas
xchg
imul
les
xchg
cmpsl
scas
sub
scas
mov
and
fcompl
adc
and
lahf
sub
cmp
xchg
icebp
repz
dec
sbb
mov
sub
fdivrl
icebp
dec
fldenv
pop
fisubrs
aad
xchg
inc
test
shll
idiv
lahf
inc
xor
adc
js
ret
adc
mov
mov
fcomip
sub
add
pop
push
jge
mov
insb
jg
aas
arpl
lods
test
dec
add
cli
pop
pushl
ljmp
pop
mov
inc
mov
inc
sarl
ret
cmp
out
push
sub
cltd
lret
out
dec
inc
lods
mov
mov
pushf
mov
mov
and
mov
mov
inc
fcmovnu
rcrl
outsl
push
jle
push
test
jl
pop
or
inc
stos
lcall
jnp
mov
cld
mov
mov
je
or
fcoml
or
js
mov
cmpsb
xchg
pusha
push
rcll
ja
dec
nop
ret
pushf
xor
popa
mov
minps
mov
sbb
rcrb
or
lock
nop
out
rcrb
stos
push
xor
addr16
mov
or
ljmp
mov
xor
cwtl
mov
outsb
and
add
xchg
iret
mov
jmp
cmp
inc
std
ret
hlt
pop
push
and
aas
pop
popl
movsb
mov
push
lods
pop
clc
sbb
lods
iret
pop
jecxz
jecxz
dec
mov
and
mov
addr16
cltd
sar
movsl
add
cmp
arpl
jmp
sbb
push
adc
clc
mov
jne
push
dec
dec
adc
fldcw
nop
in
test
ret
lods
mov
fdivrl
shll
sub
dec
fbld
cmpsl
shl
mov
outsb
xchg
mov
adc
arpl
xchg
jge
push
xchg
push
cmp
xor
mov
pop
mov
rorl
xchg
pop
jne
ja
add
popf
aad
xor
inc
ret
sbb
sub
bound
dec
cmp
mov
lahf
arpl
jbe
daa
mov
fdivrl
pop
inc
jns
push
dec
out
add
jnp
mov
lret
aas
pop
dec
pop
fldcw
push
or
mov
adc
mov
adc
xchg
pop
inc
sti
sti
pop
inc
inc
rclb
mov
jnp
jbe
cmp
sub
adc
push
push
scas
test
ret
sahf
shrl
adc
mov
sub
movsb
movsl
pop
jle
add
lods
adcl
lock
out
call
je
fsubrs
inc
mov
int3
mov
jns
push
cli
xor
ret
cmpsl
lds
or
jp
stos
das
adc
vpaddd
mov
sbb
lods
sbb
mov
fcomps
adc
inc
sub
icebp
and
push
outsb
jp
adc
loopne
lds
lmsw
or
dec
mov
adc
mov
fwait
cli
xchg
shlb
sub
cmpsb
sub
aaa
outsl
pop
daa
adc
fadd
rolb
adc
setge
xor
jp
nop
je
sub
cmpsl
orb
xlat
loope
in
icebp
mov
mov
or
ljmp
jp
and
jb
loopne
outsb
vhsubps
mov
lea
mov
dec
out
inc
inc
sub
or
cltd
xchg
push
jae
jno
aam
push
add
inc
popa
add
mov
lods
mov
adc
sahf
mov
cli
cmp
ss
push
mov
movb
mov
cli
inc
dec
popa
jecxz
xlat
jge
movsl
mov
jp
into
mov
fsqrt
les
lret
addr16
jnp
sti
sarb
jae
push
and
gs
lret
divl
adc
sbb
pop
in
ss
test
or
jg
fwait
sub
cld
outsl
cmpsb
and
pop
mov
les
lods
fistl
aad
jns
repnz
out
or
shlb
xchg
or
inc
add
stos
leave
sarl
shll
sub
mov
rcrb
jbe
cmp
adc
inc
fiaddl
daa
mov
test
fwait
stos
outsb
sbb
push
shll
lock
cli
into
les
xlat
ret
xor
inc
cltd
fcompl
xor
enter
cwtl
lcall
outsb
in
pushf
lahf
loope
jp
rorb
push
out
test
or
jo
test
lcall
rcrl
iret
out
test
fcmovnu
mov
push
aad
nop
lock
mov
lret
lea
push
std
jae
lea
je
gs
jae
pop
push
subb
mov
cmpb
icebp
stos
pusha
xor
sub
push
adc
cld
add
sbb
jae
and
ret
mov
jo
or
xor
push
leave
movsb
or
xor
mov
cmp
addr16
int3
inc
dec
pop
test
stc
jbe
xor
lea
nop
adc
mov
ret
fisttps
xor
dec
sub
push
test
push
insl
loope
imul
dec
sti
push
leave
dec
shl
rolb
cs
fistpl
lea
sbb
sub
lds
movsb
dec
mov
addb
xchg
sub
leave
lock
outsb
add
sbb
mov
daa
in
or
and
xchg
push
add
push
enter
sahf
imul
rcll
push
xor
and
negb
in
push
mulb
bound
js
shlb
test
jo
ret
mov
stos
dec
add
sub
mov
jg
mov
mov
xchg
cmpsb
dec
in
cltd
es
scas
test
xor
push
sbb
adc
out
out
js
or
shll
xchg
mov
push
or
sbb
mov
add
dec
mov
add
mov
jns
fsubrl
dec
sub
xlat
pushf
and
icebp
fs
jns
mov
bound
mov
loop
gs
out
xor
sbb
out
pop
pop
dec
and
push
sbb
filds
ss
sbb
cmp
hlt
pop
mov
dec
loop
jbe
xchg
repz
cmp
xchg
pop
iret
jg
std
sti
sub
lahf
cmpsl
aas
arpl
std
cmp
inc
adc
push
sarl
arpl
xor
loop
push
stos
aad
mov
jne
pop
lret
xchg
cmp
in
mov
cmp
in
mov
scas
pop
fdivr
idivb
xchg
sti
and
sti
push
push
sar
jge
dec
mov
inc
add
enter
imul
test
sub
cwtl
adc
adc
sarb
add
addr16
andb
xchg
cmp
xchg
xchg
cmp
pop
and
fisttpll
cmp
pop
push
clc
lret
pop
test
ja
lods
mov
aam
push
or
adc
cli
fmull
lahf
mov
enter
push
shrl
pop
sbb
adc
mov
std
ret
lea
cmp
out
add
mov
aas
sbb
test
std
add
clc
pop
int
out
aam
inc
mov
jbe
loop
adc
pop
call
xchg
jmp
lods
jle
sbb
movsb
mov
push
mov
add
dec
sbb
jno
call
insl
int3
insb
sahf
testb
xchg
or
dec
jno
cmp
mov
stos
fucomip
enter
and
xor
cmp
cmp
adc
fcoml
xor
mov
shl
mov
xchg
pushf
jns
fnstenv
mov
pop
mov
call
rcrb
xchg
test
adc
int3
dec
add
out
mov
sti
test
push
cmp
push
add
mov
or
addr16
sbbb
cmpl
push
push
pop
mov
push
jae
xor
push
pop
add
xor
rolb
and
cmp
mov
stos
sbb
mov
push
out
sbb
sbb
pop
sbb
xchg
and
inc
adc
mov
fdivp
lock
mov
stos
unpckhps
mov
shlb
ljmp
cmpsb
sbb
jmp
lahf
sbb
fisttpl
ficomps
lea
pop
hlt
jb
mov
addr16
push
cs
ret
pop
insb
js
aam
in
dec
cld
mov
and
cmp
pop
mov
xchg
adc
scas
fistl
bound
push
loop
xchg
pop
cld
cmc
dec
jne
into
data16
pop
lret
mov
lcall
push
mov
cltd
stos
jp
mov
push
sti
pop
push
mov
mov
sti
or
loopne
test
xlat
mov
dec
test
andb
dec
cmp
and
jne
jns
push
insl
enter
arpl
cld
divb
mov
mov
insl
sub
jnp
push
mov
jle
fcmovne
les
pop
jo
cmp
dec
xlat
inc
imul
cmp
nop
mov
and
xor
fidivrl
enter
sahf
cmp
rclb
mov
test
mov
test
fildl
adc
out
lds
ljmp
aas
outsl
sub
mov
pop
pop
cltd
adc
imul
pop
push
jmp
ss
inc
pop
push
sbb
xorl
xchg
in
pop
jmp
rcrl
jg
lea
shufps
sbb
add
jns
fwait
push
clc
sub
push
bound
lret
sbb
std
sub
mov
inc
mov
in
xchg
and
mov
arpl
sbb
test
xor
je
lods
sbbl
cwtl
sbb
mov
dec
lds
jno
dec
pop
sub
lret
testb
testl
cwtl
mov
ficompl
dec
fstps
mov
xor
ljmp
fisubl
or
scas
mov
clc
mov
dec
mov
add
stc
aaa
sbb
and
aas
lods
adc
jge
lret
stos
std
movsb
bound
rcl
fnstenv
pop
pop
mov
fldl
lahf
push
test
movsl
xor
dec
cmp
lret
pop
xchg
cmp
mov
sbb
nop
xorb
lahf
popf
dec
lods
aaa
fdivrs
fndisi(8087
es
aas
pop
inc
mov
ret
clc
jl
out
sarl
push
inc
pop
outsl
add
into
adc
dec
aad
inc
dec
rdtsc
mov
stos
push
sub
out
div
push
mov
or
mov
js
pop
inc
lock
in
pop
push
daa
gs
hlt
sar
add
xchg
dec
popf
mov
notb
sub
outsb
pop
out
lahf
cmpsl
test
xor
mov
lods
inc
mov
vmread
sbb
mov
sbb
and
sub
lods
pop
pop
cwtl
mov
cmpsl
fistpl
aad
cld
imul
fwait
mov
aas
add
je
and
jne
sti
xchg
call
fdivp
fdivr
sbb
iret
jmp
loopne
sub
and
xor
xchg
mov
fcoms
fwait
push
cltd
in
in
mov
out
jp
lods
mov
arpl
dec
mov
inc
cmp
aaa
mov
inc
cmpsl
ret
mov
repnz
cld
and
int3
ss
movsl
jl
arpl
scas
dec
dec
push
and
mov
push
dec
cmpsb
cltd
pop
cld
loope
aam
mov
arpl
xchg
dec
push
cltd
xor
mov
xchg
jns
lret
add
filds
cli
cmp
aas
mov
or
inc
mov
ficomps
mov
fdivl
mov
repz
cmp
xorl
or
ficomps
es
add
ficoml
mov
push
ret
je
adc
mov
mov
repz
cmpsl
addl
out
mov
push
mov
and
xchg
in
push
enter
mov
mov
addb
lret
movsb
mov
dec
call
ret
cmc
sbb
fnstcw
nop
std
ret
mov
repnz
jae
mov
and
imul
call
push
push
ja
pushf
sub
adc
sbb
cld
lea
std
inc
push
xchg
and
sbb
lock
dec
mov
inc
mov
test
pop
jl
aam
lcall
in
out
jmp
in
xor
and
sub
jmp
aad
loopne
ret
ljmp
jmp
push
push
aad
cmpsl
mov
popf
stos
lea
popf
xchg
or
neg
sbb
add
jbe
repnz
mov
xchg
pop
sub
cmp
mov
lods
push
int3
cmp
mov
mov
sarb
call
repz
lret
outsb
add
aam
outsl
push
cmp
inc
pop
mov
pop
lods
push
mov
andb
sub
push
cld
in
sbb
ljmp
in
jnp
and
dec
mov
fsubrl
cmpsl
jne
fldl
sub
jae
fnstcw
push
je
stc
push
bound
lea
dec
pop
mov
jp
fsubrs
adc
std
pop
lds
pop
jnp
and
mov
sbb
cmc
imul
jp
inc
and
adc
cmp
push
add
mov
std
add
stc
fnstenv
cmp
std
and
test
jp
xor
incl
add
jl
cmc
sub
lahf
push
ret
dec
mov
test
mov
dec
push
loop
data16
clc
add
mov
xchg
push
imul
test
repz
popa
leave
inc
repz
lods
lods
fildl
or
mov
mov
mov
adc
sbb
sarb
mov
push
rorb
jb
mov
mov
mov
out
add
fisttpll
mov
popa
out
pop
adc
lcall
push
cmpl
addr16
pop
pop
jl
and
gs
ffree
adc
test
clc
mov
inc
orl
pop
das
lods
lcall
prefetch
or
or
js
pop
jno
dec
sub
out
cmpsl
push
xchg
mov
dec
jo
iret
xchg
nop
subps
xor
arpl
int
mov
test
and
xchg
icebp
cld
xchg
aad
push
pop
fcoms
pmaxub
jb
mov
mov
pop
push
lods
addl
cmc
pop
negl
jbe
pop
pusha
sti
loop
cmpsl
test
push
rorb
and
pusha
cs
jle
sbb
dec
mov
pop
es
aam
mov
and
in
int
push
cs
mov
scas
aad
mov
xor
nop
test
inc
mov
push
mov
sbb
jb
sbb
and
sar
lret
dec
pop
mov
hlt
and
push
nop
lahf
dec
jnp
ja
inc
xchg
repz
aas
push
add
movsb
gs
push
pop
mov
dec
xchg
mov
inc
mov
mov
cmp
out
in
movsb
movsb
dec
fidivs
dec
shrb
rcrb
inc
int3
sbb
jp
in
sbb
cmp
sub
into
pop
psllq
adcl
push
imul
fidivl
and
rolb
lods
or
imull
cwtl
incb
adc
pop
cmp
daa
add
inc
insl
fisttps
sub
pop
fs
sti
push
sbb
jl
int
jno
call
xchg
push
lock
push
or
xlat
movsl
inc
adc
dec
mov
aaa
fcmovnu
xchg
fimull
das
sub
mov
lea
enter
and
lods
ljmp
loope
xchg
adc
subl
fmul
jle
fidivl
gs
push
pop
in
mov
aas
test
les
push
push
xchg
xor
adcl
addl
lds
add
sar
cmc
lcall
add
adc
pop
adc
jno
jmp
sahf
pop
repz
jo
xchg
lahf
add
in
ret
add
pop
test
mov
mov
lock
dec
add
outsl
inc
cmpsb
sahf
je
arpl
fsub
cld
shr
gs
mov
das
xor
inc
daa
loopne
push
sub
mov
and
add
dec
mov
shrb
insb
push
mov
pop
lret
gs
and
lds
sbb
xchg
adc
clc
negl
ror
fnstcw
leave
jns
jno
lret
lock
mov
push
inc
cwtl
ja
lcall
fistps
aaa
cmp
cmp
dec
cld
push
aam
cmp
mov
bound
adc
and
sbb
sbb
into
icebp
mov
sbb
lret
int3
mov
cmp
push
mov
mov
push
out
in
add
cli
and
imul
adc
dec
and
rcr
cmp
mov
cmp
cmpsb
jp
cmpsb
xor
jl
bound
jge
add
mov
scas
adc
sub
cmp
bound
mov
test
and
out
mov
fstpl
sbb
out
adc
icebp
dec
inc
xor
mov
mov
jecxz
push
add
xchg
in
cmp
mov
push
dec
mov
pop
mov
sub
out
sub
xor
mov
dec
xchg
pop
icebp
enter
rorl
aas
xor
pop
mov
push
fmuls
inc
mov
les
push
sbb
repz
fs
jnp
mov
xchg
sub
xor
dec
push
loope
js
inc
int
jns
mov
gs
or
add
add
cld
jb
pop
mov
mov
cmp
xor
in
dec
mov
cltd
insl
andb
mov
dec
inc
mov
mov
add
test
adc
adc
les
gs
loop
xchg
loope
loop
imul
scas
scas
mov
daa
sub
jno
fldt
mov
sbb
cmp
pop
add
subl
pop
cli
push
sbb
and
out
je
cmp
jne
in
lock
mov
adc
pop
cmc
mov
sbb
shll
in
cmp
xchg
insw
mov
sti
xchg
lahf
cmpsl
clc
mov
sbb
lcall
or
inc
aaa
mov
sbb
sbbb
mov
mov
push
mov
mov
nop
pop
mov
jae
loop
jae
cs
aad
mov
repnz
in
repz
mov
push
inc
mov
mov
adc
or
mov
adc
loope
mov
and
xor
sub
lcall
sub
lret
or
dec
leave
xchg
push
push
jge
pushf
fstl
add
jno
addr16
push
jo
and
fstl
pop
xor
pop
adc
icebp
bound
jno
cwtl
fstpt
fwait
imul
aam
pop
popf
and
push
xor
pushf
ja
jl
push
add
shrl
mov
and
pop
addr16
idivl
mov
xchg
xor
mov
daa
sub
push
add
addr16
xadd
jae
mov
jb
fnstenv
adcl
gs
sub
out
xor
lret
push
fstps
inc
mov
scas
mov
adc
imul
sbb
xor
leave
push
inc
sbb
fisttps
sbb
mov
int
data16
cmpsb
cltd
dec
dec
lahf
jnp
add
push
pop
jg
mov
pushf
sbb
jne
sub
pop
inc
fiaddl
lret
push
dec
adc
dec
mov
jne
adc
inc
cmp
arpl
jno
lahf
pop
insl
mov
scas
negb
mov
push
hlt
mov
xor
push
addr16
mov
aaa
or
fimuls
lods
push
addr16
rcl
mov
out
sbb
cmpsb
jmp
inc
cltd
mov
and
aad
sub
cli
fldcw
mov
dec
mulb
xor
out
clc
mov
in
push
andl
insl
icebp
fistpll
dec
andb
and
jecxz
stc
testb
jmp
sarl
aad
in
or
mov
out
xchg
stos
sub
mov
jl
addb
loopne
mov
bound
or
adcl
add
or
push
jecxz
inc
add
stos
iret
mov
inc
or
shrb
stos
cli
sub
lock
add
es
lret
cmpsb
jo
notl
jb
movsb
or
xchg
mov
mov
jnp
mov
pmulhuw
cld
and
sbb
imul
push
mov
lods
cmc
pusha
mov
push
jge
pop
mov
xor
adc
fdiv
xchg
pop
push
pop
inc
fcmovu
push
fldenv
ss
movsl
and
fildll
sti
rorb
jb
insl
dec
dec
mov
push
dec
pop
jo
inc
push
arpl
push
daa
push
xchg
push
xchg
fimuls
sub
mov
pop
stos
sbb
js
addb
fs
xor
dec
or
testb
ljmp
pop
mov
mov
adc
pop
pop
rcl
ja
jp
inc
jo
mov
rclb
push
out
jne
adcl
cmp
pushf
sub
ljmp
es
lock
add
cmc
or
sbb
fsubs
scas
incb
jbe
xchg
popf
cmc
sbb
mov
jo
pop
dec
mov
les
fldt
hlt
mov
icebp
test
iret
enter
jne
xchg
lret
mov
adc
mov
adcb
scas
lret
dec
sahf
or
std
push
jge
cmpsb
pushf
cmpl
fisubrs
test
xchg
aad
je
xor
jmp
ja
cltd
pop
cmc
sub
cmp
adc
cld
arpl
xor
jne
jo,pn
clc
jmp
cmp
inc
in
addl
pop
jbe
sbb
sub
pop
lock
mov
pop
int3
movsb
mov
aaa
xchg
mov
xchg
je
dec
loop
out
lods
loopne
rorb
push
or
pusha
pop
push
jo,pt
push
inc
ss
rcrl
cmpsl
mov
in
iret
test
ss
jp
in
pop
xlat
push
cld
dec
ja
cmp
cmp
xchg
popl
mov
shrb
aaa
lcall
pushf
out
out
xchg
jns
xchg
clc
cmp
or
inc
push
dec
jge
shlb
fiadds
mov
out
or
dec
xchg
push
mov
ja
inc
imul
and
arpl
cld
repz
adc
xchg
icebp
jmp
js
call
clc
mov
lahf
imul
repnz
xor
mov
sbb
call
and
xor
addr16
jecxz
je
inc
mov
mov
xchg
aad
loopne
int
sbb
pop
icebp
fmul
mov
and
aam
jp
test
aad
ds
cmp
cmp
dec
xchg
xchg
dec
push
rolb
cli
dec
xchg
daa
roll
xor
pusha
lahf
xchg
out
cmp
subb
dec
in
jo
rcr
xchg
mov
repnz
mov
adc
setg
mov
addr16
pop
pop
inc
inc
stos
push
cld
mov
outsl
jbe
pop
xor
ret
xor
jnp
mov
rcrl
add
iret
dec
andb
stos
and
inc
sub
lock
das
xor
sbb
repz
mov
sbb
lock
pop
cs
or
and
and
nop
xchg
roll
cmp
dec
and
pop
ret
idivl
ja
stc
and
ljmp
scas
mov
lahf
faddl
repz
scas
ds
cmp
cwtl
leave
dec
and
loopne
add
fdivs
pop
mov
insl
jne
cmpsl
cmp
xchg
sub
mov
ss
add
cld
loop
sub
push
lds
or
or
pop
adc
test
mov
or
mov
mov
xchg
es
cmp
cmp
ror
xor
push
or
add
sahf
xchg
push
pop
xchg
inc
mov
pop
xchg
add
mov
int3
je
lea
inc
in
xchg
ljmp
push
call
and
jp
call
xor
jnp
call
in
or
jo
xchg
sti
pop
push
lods
leave
xchg
or
loop
ret
fwait
mov
outsl
pandn
pushf
stos
adc
dec
xchg
jne
adc
add
xchg
clc
xor
in
xchg
sti
pop
fsts
cwtl
out
inc
sub
or
pop
ja
push
mov
xor
add
add
pop
pop
addr16
je
xor
fists
mov
test
test
js
push
sbb
fnsave
push
les
xor
sbb
popa
in
in
inc
add
arpl
iret
cmpsl
inc
sub
mov
jle
mov
into
aaa
mov
xor
loopne
ficomps
movsl
sub
daa
aaa
dec
mulb
pop
nop
out
adc
out
int
inc
pop
jno
hlt
mov
adc
jp
ja
fcmove
sub
out
sbb
mov
xchg
push
lods
xchg
jae
bound
or
je
call
cli
roll
clc
mov
mov
cmp
jb
clc
cmp
mov
std
push
fs
cs
dec
inc
and
xor
add
xchg
jge
cltd
aam
xor
dec
xchg
insl
push
iret
ret
push
fadds
and
inc
mov
stc
hlt
es
adc
mov
in
pop
or
hlt
push
xor
pusha
inc
shrb
inc
sub
pop
jne
jae
mov
sti
lcall
jp
mov
push
mov
sub
leave
xor
push
loopne
pushl
in
xchg
lahf
mov
aaa
push
mov
xchg
inc
or
popa
imul
pop
fisubs
sbb
sub
ja
adc
jne
push
lcall
push
jp
jl
dec
dec
shr
js
cmpsl
xorb
jecxz
rcrb
decb
add
cmpsb
xchg
cmova
jo
mov
xor
inc
popa
lods
std
stos
rcrl
push
daa
lods
or
pop
out
inc
push
outsl
cmp
sarb
clc
mov
clc
dec
ljmp
sarl
inc
enter
repz
cmpsb
push
and
shlb
mov
aad
xor
dec
aas
push
mov
lret
testl
cmp
mov
jb
sbb
or
inc
sub
and
std
sbb
adc
dec
push
std
dec
adc
lods
gs
adc
js
in
push
movsl
outsl
cmp
pop
mov
mov
xor
cmc
add
loopne
xor
sub
cld
scas
lods
das
lock
lea
adc
add
inc
xchg
adc
xchg
repz
push
cmp
call
stos
rolb
inc
xchg
in
and
sub
mov
adc
subb
push
dec
ret
add
in
mov
add
sub
jo
push
or
lcall
fsubrl
fnstcw
mov
mov
mov
enter
sub
mov
sub
pop
jb
pop
aam
mov
dec
test
lahf
cltd
push
or
xlat
xchg
mov
cmp
ret
mov
sub
mov
enter
scas
inc
fidivs
xchg
mov
das
inc
adc
in
dec
xchg
addr16
jp
imul
jmp
mov
xchg
jbe
dec
push
sub
pop
rolb
sbb
fbld
mov
mov
or
cmp
cmp
cmpsl
addr16
dec
shrl
jbe
outsb
js
and
dec
imul
bswap
mov
shrl
cmpb
lods
sub
jg
gs
dec
push
cmc
outsl
jle
sbb
ret
xchg
in
add
push
push
ds
jge
rcll
fnstenv
mov
call
inc
lods
loop
adc
pop
inc
fnsave
enter
or
test
jno
add
rorb
repnz
jp
cs
scas
mov
jns
jne
ror
test
das
mov
sub
addr16
add
dec
jge
icebp
or
xor
shl
xchg
addr16
xchg
and
mov
scas
jnp
xchg
ljmp
mov
decb
shll
push
cs
pop
popa
dec
cmp
and
lds
add
adc
jp
lahf
push
add
ja
pop
and
clc
mov
mov
insb
sbb
in
mov
incl
sbb
jg
inc
dec
out
stc
sbb
adc
or
add
cmp
ss
fwait
mov
sub
dec
test
cmp
push
or
xchg
sub
pop
or
insb
int
jbe
push
or
stos
pop
jecxz
xor
xchg
dec
sub
mov
mov
push
jg
sub
mov
inc
stc
mov
call
cmp
xor
out
call
movsb
outsl
push
xchg
jo
jns
pop
jecxz
iret
adc
inc
js
into
mov
iret
xchg
pop
lods
cltd
jno
rclb
fisubrl
scas
dec
sub
lret
pop
hlt
mov
and
dec
das
push
daa
mov
ss
cmp
inc
movsl
or
std
push
inc
lods
pop
mov
inc
outsl
popf
and
add
jmp
xor
push
push
xor
add
xchg
mov
sbb
cmp
jle
xchg
sbb
imull
sbb
mov
and
dec
imul
sahf
hlt
sub
mov
push
ja
xchg
cmp
mov
add
lock
in
cltd
pop
fists
daa
or
repnz
cmc
fwait
adc
xor
and
aas
push
push
lods
out
flds
jmp
daa
add
mov
imull
jle
pop
jmp
add
testb
jp
out
add
xchg
jnp
repz
das
fnstcw
mov
scas
in
mov
aas
and
jecxz
mov
jle
mov
pop
sbb
lcall
pushf
xchg
xchg
iret
sbb
inc
leave
fnsave
subb
xor
int3
clc
push
inc
lock
push
nop
inc
mov
les
scas
fadds
enter
test
fxch
mov
dec
es
sub
in
popl
stc
in
pop
cmpb
mov
stos
rorl
add
mov
pop
pushf
in
mov
inc
cmp
sbb
sti
fisttpl
jno
lods
dec
fcomps
mov
mov
cmpsl
mov
aaa
lea
outsl
cwtl
and
push
loop
outsl
push
scas
in
shl
push
sub
cld
cli
adc
sbb
jns
fildl
jb
ror
into
nop
orl
dec
lcall
adc
adc
xchg
pop
dec
outsb
popf
jae
or
arpl
fidivrs
mov
inc
xchg
icebp
sbb
in
out
pop
add
xchg
xchg
and
stos
add
inc
lods
adc
and
mov
fs
jp
arpl
xchg
popa
mov
lret
mov
fs
repz
gs
ret
cmp
sbb
lahf
inc
lods
xchg
stc
outsl
and
and
or
jnp
add
imul
xlat
scas
cmp
push
or
imul
enter
das
cmp
dec
push
push
mov
fisubrs
and
daa
shll
mov
add
into
pop
jbe
sbb
mov
stos
mov
clts
xchg
rcrb
xchg
jmp
repz
testl
lea
arpl
push
xor
pop
in
cmp
mov
rclb
jne
popf
movb
test
pusha
sbbb
mov
inc
pop
es
addr16
push
inc
popa
cmc
lock
push
fiadds
dec
mov
sti
push
repnz
lahf
lods
roll
fstpt
add
pop
dec
push
jmp
popa
push
mov
lahf
mov
mov
push
mov
cmp
ljmp
filds
out
xchg
shlb
je
xor
jnp
pop
xchg
push
in
dec
gs
int
scas
js,pn
hlt
shll
cltd
push
sbb
mov
aam
sbb
jns
pushf
cmpsl
ljmp
inc
push
cmpsl
mov
insb
mov
cmp
popa
inc
rol
jns
insl
es
adcl
stc
lods
xchg
rorl
add
mov
out
jno
push
rcrl
xor
std
cli
mov
int
sub
adc
cld
cmpsl
je
aas
mov
and
dec
stos
or
rclb
pop
sub
icebp
and
loopne
int3
cmpsl
out
cli
xchg
test
cwtl
shl
mov
sbb
adc
cwtl
push
mov
out
mov
cmpsl
sub
arpl
mov
add
sahf
pop
cmpsb
pop
xchg
lds
jg,pn
or
enter
cmp
pop
cld
in
or
inc
rcl
jmp
daa
ret
sbb
cld
or
ja
or
xor
sub
xor
jecxz
mov
dec
adc
cmp
addr16
pop
add
sbb
pop
jbe
inc
add
subb
shll
and
cli
cmpb
cs
cmpsb
xchg
les
sub
pushf
mov
pushf
fcompl
jle
push
movsl
ss
lcall
sti
test
xchg
push
mov
outsl
mov
int3
out
add
mov
in
push
xorl
incb
cs
jge
pop
mov
xchg
mov
icebp
jmp
add
mov
sti
in
mov
test
jle
inc
stc
fcomip
adc
dec
cld
pop
test
iret
push
ja
inc
and
fistps
adc
fsub
fwait
roll
jle
shlb
std
scas
sbb
fstps
and
data16
jnp
in
daa
int
lcall
push
sub
push
je
mov
adc
cltd
loope
xchg
pushf
enter
pusha
pushf
in
sbb
and
cmc
xor
cmp
movsb
test
add
fnsave
xchg
mov
addr16
clc
cs
xchg
sub
mov
sub
pop
xchg
mov
fcoml
pop
mov
pmaxub
jnp
xchg
dec
pop
fsts
add
cmp
call
dec
repz
mov
shrl
test
mov
jo
dec
test
sbb
ds
mov
and
out
and
inc
gs
xchg
loop
push
clc
xor
inc
push
adc
addl
xchg
inc
popa
mov
lcall
mov
mov
mov
orl
ss
add
movsl
cmpsl
cmpsb
movl
outsb
pusha
jae
push
xchg
mov
in
in
jo
add
outsb
xor
bsr
lock
mov
iret
cmp
cmp
stos
xor
inc
mov
addr16
cmpsb
rdmsr
mov
rclb
call
ljmp
int
xlat
popf
add
xchg
jecxz
push
push
cld
lcall
stos
popa
or
xchg
jp
popa
out
imul
dec
xor
testb
hlt
loope
sub
ja
ljmp
and
pop
or
inc
fs
or
mov
lods
xlat
lahf
fstpl
jl
in
out
loope
cmp
ljmp
lret
mov
enter
pop
loope
aaa
call
adc
lock
cwtl
les
xor
jmp
popf
mov
push
or
ret
aad
lret
mov
adc
insb
add
or
pop
adc
cmp
dec
pop
leave
pop
mov
add
out
sub
movsb
repnz
inc
in
push
xchg
push
inc
mov
xchg
lods
fisttpl
lret
jl
push
push
ss
push
fisttps
es
orb
push
test
jae
adc
xchg
mov
mov
dec
mov
mov
cltd
scas
enter
iret
movsb
in
enter
sbb
sbb
aad
dec
imul
into
loop
xchg
mov
lock
fisubrs
dec
cli
dec
std
push
repnz
inc
sub
and
ret
lret
in
xor
jmp
ds
lock
fdecstp
jg,pn
leave
ss
shlb
lock
mov
leave
mov
lahf
leave
add
mov
sub
stos
and
sti
mov
mov
or
dec
pop
shrl
sub
outsl
push
adc
sbb
xchg
mov
xchg
sbb
add
sub
ret
pop
icebp
push
pop
xchg
sub
adc
dec
popa
jecxz,pt
bound
fdivrs
jl
push
scas
insl
or
shll
das
scas
or
xchg
cmp
pop
and
mov
inc
pop
or
fsubp
push
sbb
xchg
and
pop
and
rol
pop
fnstsw
cld
pop
jle
xchg
xlat
sbb
js
gs
cmp
inc
mov
sub
push
sbb
gs
pushf
repz
pop
into
mov
mov
cmc
loopne
sbb
rclb
lock
xlat
jecxz
mov
loop
into
pop
push
xor
daa
push
repz
lea
jmp
xor
mov
out
or
adc
popf
mov
ja
push
leave
insl
pop
jge
mov
leave
push
xchg
mov
xor
fildll
insb
test
and
loop
mov
jmp
cmpsb
push
call
xchg
mov
cld
jmp
mov
cld
xor
jecxz
testb
jl
xor
shl
jo
loopne
call
hlt
loop
sti
xor
xchg
jl
cmp
push
out
xor
ror
stos
insb
fldenv
fs
mov
in
mov
mov
out
sti
call
sbb
hlt
test
or
int
int
gs
ds
aaa
gs
jne
cwtl
push
inc
stos
aas
daa
inc
outsl
xchg
sbb
icebp
dec
push
lret
or
pop
mov
lahf
sbb
jae
aaa
aad
gs
add
insb
out
inc
jb
pop
shll
dec
mov
or
or
dec
add
push
dec
aam
leave
hlt
inc
sbb
lods
es
mov
aam
cltd
jo
xchg
cmpsl
push
imul
mov
sub
bound
cli
mov
push
push
ficoml
lret
sbb
pop
sahf
cmp
and
push
out
fisubl
push
mov
rcrb
popa
nop
stc
dec
movsb
aaa
or
aaa
scas
divl
rcll
pop
ljmp
xchg
ficompl
shr
outsl
mov
and
fists
pop
loope
jg
push
adc
pop
outsl
icebp
mov
push
jnp
mov
sbb
leave
cmp
repnz
inc
xchg
pop
inc
xchg
jp
mul
pop
out
into
and
lods
and
inc
outsl
aas
lock
iret
out
lea
fwait
and
rcl
jmp
add
ljmp
cld
jmp
jb
jns
test
mov
jb
mov
push
sti
sbb
pop
flds
jae
cmc
adc
fs
or
push
gs
sbb
in
adc
mov
stos
add
pop
mov
movsb
shrl
push
testl
add
cmp
jbe
or
jl
dec
je
cmp
shrl
cld
sahf
cmp
mov
or
push
mov
fstps
iret
loop
movsb
push
fisubrl
subb
jge
aaa
jbe
stos
fmul
mov
cmp
icebp
or
pushf
js
xchg
or
rolb
cmp
ficompl
mov
add
imul
mov
xorb
cmp
or
dec
cmp
mov
inc
dec
jg
jb
jge
sub
faddl
out
push
ljmp
popf
xor
in
lret
dec
cld
mov
test
mov
fwait
rcrl
mov
imul
sbb
fs
xor
xchg
jb
imul
out
fstp
stc
iret
cmp
es
loop
pusha
adc
jnp
stos
adc
jnp
cmp
xchg
inc
pushf
or
mov
mul
mov
popf
cltd
dec
xchg
or
push
xor
xchg
clc
pop
cli
mov
adc
test
cmp
arpl
out
out
fsubl
pop
xlat
cld
and
mov
fistl
mov
xor
mov
aaa
add
mov
mov
movsb
out
inc
mov
push
sub
inc
data16
das
out
pop
pop
pop
lcall
sbb
dec
je
pop
aad
pop
adc
addr16
pop
cmp
scas
out
les
ljmp
jo
and
sbb
mov
xor
mov
add
cmpsb
cmpsb
pop
xor
stc
test
sbb
cmp
les
sub
inc
test
xlat
test
fdivl
rcrb
popa
xchg
scas
sub
adc
fs
mov
push
jno
dec
insl
pop
add
adc
xor
cltd
xchg
jmp
test
or
pop
lods
adcl
int3
add
mov
push
ret
sbb
imul
dec
dec
push
pushf
dec
ss
in
jecxz
xchg
icebp
fcoml
jo
add
out
mov
js
mov
xchg
std
pop
pop
jg
push
fisttps
popa
dec
dec
ficoml
imul
jmp
cmp
movb
adc
inc
arpl
addl
scas
cmp
xor
pop
testb
ljmp
dec
jmp
fwait
xor
lods
or
fs
mov
add
cmpsb
cs
aaa
mov
xor
fsts
pop
push
push
sub
out
mov
sub
aas
mov
out
out
test
jmp
jg
lahf
push
pop
cmp
mov
imul
in
lods
xchg
mov
pop
mov
out
sarl
hlt
adcb
ja
popa
mov
jmp
pop
imulb
pop
repz
jno
xor
adcl
mov
cmpsb
lds
mov
and
sbb
into
xchg
jbe
test
fists
addr16
xchg
out
mov
adc
xchg
jl
call
sarb
push
mov
pushf
push
scas
scas
orl
xchg
mov
int3
pop
push
aas
mov
push
shll
pop
add
mov
cmp
sar
adc
rcl
push
mov
and
jl
into
sbb
repnz
in
or
cwtl
push
enter
sbb
insl
out
outsb
in
push
std
dec
dec
xchg
adc
stos
scas
stos
add
pop
mov
add
cmp
xor
punpckhbw
pop
mov
int
dec
pop
push
jmp
xchg
cli
mov
xchg
pop
maxps
fsubl
enter
inc
cwtl
xchg
add
push
mov
gs
jne
mov
jl
push
mov
lcall
pop
pop
xchg
xor
xor
nop
call
sbb
sbb
pop
or
xor
jns
lods
ret
xor
test
fidivrs
les
add
lods
mov
mov
out
mov
cmp
mov
or
fs
gs
dec
ljmp
push
inc
movsl
add
pop
push
mov
add
adc
enter
js
push
mov
sub
sti
lahf
xchg
movsb
cmp
outsb
or
out
dec
mov
ret
aad
dec
insb
jbe
dec
fcomps
je
cli
xchg
movsl
sub
sub
add
sbb
jb
mov
daa
mov
add
pop
in
loopne
add
adc
popf
and
xor
push
mov
push
js
rcll
or
ret
cwtl
movsb
clc
add
orl
gs
cmp
bound
out
ljmp
cld
idivb
or
fimull
addr16
jns
int
or
push
ret
lock
and
push
loope
insb
mov
scas
mov
movsl
dec
paddw
sbb
fnstenv
scas
xor
inc
jb
es
jl
rcll
call
nop
call
lcall
and
adc
mov
ret
jmp
cmp
pop
push
or
sub
psrad
pop
ja
mov
cli
inc
iret
aad
es
insb
icebp
mov
mov
pop
sbb
stos
and
leave
push
mov
or
push
xchg
mov
mov
sub
and
inc
repz
and
mov
iret
cmp
data16
outsb
sub
fisubs
ljmp
ret
or
xor
sbb
add
mov
add
xor
andl
aaa
call
xor
cli
aaa
xchg
int
subb
lds
in
sbb
add
add
and
sub
orl
das
repnz
mov
mov
ret
and
push
jnp
mov
mov
mov
into
imul
inc
cld
dec
dec
int3
jg
xchg
fs
mov
cmc
sub
add
imul
dec
mov
dec
outsl
cmp
stos
and
ljmp
dec
sub
xor
call
mov
inc
jne
arpl
mov
mov
dec
in
and
xlat
nop
dec
fcmovu
inc
lret
mov
or
dec
mov
fisubl
ss
gs
and
adc
mov
sbb
add
cli
out
push
sub
pop
push
imul
in
push
mov
ljmp
sbb
outsl
xor
mov
or
ds
push
fimull
repz
push
dec
test
ret
repz
cli
inc
mov
cwtl
outsb
bound
or
mov
pop
sub
std
mull
xor
pushf
push
sub
cld
out
gs
cmp
jecxz
xchg
nop
aad
notb
inc
enter
shrb
jl
movsb
lcall
mov
xor
inc
push
xor
mov
js
das
cmp
cli
mov
aaa
popa
xchg
sub
lret
imul
scas
out
fwait
cmp
cmp
es
andb
pmaxub
sbb
cmp
imul
mulb
dec
or
xchg
lods
outsb
pop
mov
mov
and
lods
cmp
fldt
xor
sbb
das
and
jnp
xchg
in
mov
cmp
mov
inc
xchg
xchg
cmp
ja
dec
out
mov
outsb
xor
pop
lea
into
push
sub
xor
jecxz
mov
mov
mov
cmp
cmp
jnp
stc
test
adc
ljmp
jne
push
mov
lcall
inc
xchg
incl
popa
dec
push
push
test
mov
xor
sbb
xchg
xlat
test
jb
stos
mov
jge
mov
mov
popf
or
push
cmp
loope
or
jle
dec
fstpl
mov
dec
mov
jg
data16
sti
pop
jg
cmpsb
add
mov
mov
insw
insl
fs
and
mov
test
rcrb
addr16
jno
frstor
das
inc
jb
cmp
xchg
leave
sbb
mov
idivl
and
repnz
fucom
xchg
and
sub
inc
pop
adc
pop
ret
add
repz
into
ss
push
push
sbb
jo
dec
lods
push
xchg
ljmp
gs
xor
and
sbb
add
xchg
sub
mov
imul
adc
nop
dec
hlt
jp
sbb
mov
push
cwtl
fsubrp
pop
sub
nop
jl
cwtl
popa
pop
sub
lods
adc
push
push
stos
ja
dec
or
cmp
into
mov
pop
or
mov
sar
in
int3
dec
lock
sbb
cld
cmpsb
mov
cmc
mov
mov
mov
lahf
cli
cmp
popa
into
mov
cs
mov
int
pop
inc
push
divb
dec
pushf
pop
loopne
addr16
in
pop
loop
addr16
lea
xlat
rorb
test
sti
or
add
mov
pop
rol
test
ja
and
cmp
movb
cmp
in
pop
xor
out
mulb
adc
push
or
or
xor
fildl
lcall
add
dec
push
nop
fcompl
cmp
mov
adc
pusha
and
aad
in
and
push
push
adcl
loope
push
test
push
into
out
sbb
push
outsl
rcr
xor
lret
cmpsl
mov
jne
xchg
xchg
jmp
add
adc
xchg
mov
adc
testl
pushf
cwtl
cmp
and
and
scas
lahf
es
repz
xor
push
out
ret
mov
xchg
push
push
add
and
or
mov
jb
ljmp
xchg
adc
std
pop
pop
shlb
jnp
or
popf
popl
xor
mov
and
aas
xchg
fildl
fstpt
adc
push
bound
lods
xor
outsl
mov
es
div
mov
stos
add
mov
es
aad
push
xor
loop
push
int
and
in
leave
jnp
push
sahf
gs
scas
test
adc
mov
roll
test
sbb
mov
shll
loop
jmp
push
mov
cmp
call
mov
adc
int3
in
test
adc
shlb
pop
and
push
popa
es
test
fst
jecxz
and
xchg
and
mov
xchg
insb
js
mov
mov
push
jb
or
cmp
xor
push
test
hlt
xor
adc
lock
sub
int3
hlt
ds
stos
fiadds
es
cmp
into
rcrl
lea
cld
inc
jl
push
rcrl
int3
sub
mov
stc
or
push
subb
mov
rclb
jmp
dec
incl
fbld
sbb
int
adc
mov
push
pop
mov
inc
pop
imul
stc
imul
xorl
jge
clc
stos
outsl
cld
add
les
lret
add
fistps
loop
mov
pop
addr16
pusha
mov
aaa
mov
cltd
dec
pop
lret
sbb
push
push
adc
inc
hlt
ljmp
xchg
push
jge
sti
xchg
icebp
mov
mov
mov
add
in
adc
cmpl
fwait
popa
push
sbb
sbbl
in
jp
ja
fwait
dec
jp
sti
dec
jne
jecxz
loop
pop
xor
pop
call
or
ljmp
int
mov
lret
dec
scas
push
dec
and
mov
push
lods
rorb
rcrl
into
inc
mov
mov
jle
pop
lret
insb
xchg
pop
inc
jne
pop
lcall
insb
dec
pop
movsl
adc
int3
or
test
push
cmpsw
add
out
mov
enter
sbb
std
clc
and
aad
cmpsb
rcrb
outsb
fs
or
rcr
lods
repnz
rcll
inc
fwait
movsb
lods
lds
jmp
mov
sti
pop
push
fs
in
cli
pop
cmp
mov
test
fidivrl
or
mov
test
mov
cs
xchg
out
clc
jne
stc
push
daa
jge
fdivr
dec
lods
fisttpll
push
or
pusha
shlb
add
sub
dec
add
pusha
add
icebp
push
pop
fwait
jae
sub
sbb
notl
add
icebp
sahf
cld
sbb
fsubrs
lcall
cmpsl
gs
ds
and
push
jns
sbb
dec
or
orl
push
ret
mov
jmp
push
out
adc
cmp
in
dec
sbb
push
call
push
xchg
cwtl
push
mov
jns
xchg
xchg
adc
imul
xor
add
loope
cmp
inc
mov
fyl2xp1
or
inc
sbb
mov
add
sbb
mov
mov
lret
test
aam
movhps
popa
pop
loopne
int3
jl
jnp
mov
invlpg
arpl
aaa
mov
enter
push
jmp
in
push
fsubl
add
sbb
aas
movsl
ljmp
ss
cltd
loop
lods
mov
inc
jge
cmc
adc
dec
sbb
push
orl
or
mov
sub
xchg
dec
pusha
mov
xchg
inc
sub
pop
dec
in
imul
nop
sub
rcrl
call
fwait
pop
or
lds
xor
mov
insb
jg
rcll
fwait
mov
add
dec
call
test
sub
inc
repnz
xchg
loop
cmpsl
and
xchg
jne
push
dec
mov
int
sub
movsl
xchg
daa
mov
mov
mov
xchg
mov
pop
xchg
arpl
iret
bound
push
ja
stos
cwtl
xchg
cmc
pop
or
test
dec
mov
in
cmpsb
push
out
incb
cwtl
mov
rcrb
adc
dec
add
xor
xor
call
shlb
or
push
bound
incb
jo
test
pop
push
jecxz
pop
ljmp
into
mov
pop
adc
mov
hlt
mov
xchg
ljmp
push
adc
ret
test
gs
push
add
add
mov
jno
sub
sub
xchg
fwait
push
push
sub
rol
enter
into
imul
rorl
loopne
clc
seta
test
jno
cmc
cli
or
sbb
xchg
movsl
pop
mov
loopne
insb
cmp
lcall
mov
adc
popa
xorl
cmpsb
pop
mov
sahf
add
adc
dec
xchg
inc
sub
fcompl
bound
and
enter
insb
mov
mov
sub
and
test
pop
and
jo
push
dec
out
add
add
js
frndint
push
sbb
xchg
mov
sarl
xor
ljmp
mov
add
das
iret
out
lods
xor
add
sbb
fnstenv
mov
roll
adc
and
sub
push
ret
and
faddp
in
push
fwait
rcrb
outsl
fiadds
dec
aam
out
shlb
mov
xchg
mov
xor
adc
enter
cmp
adc
adc
shrl
jmp
pop
sub
jmp
into
pop
dec
and
adc
sbb
fmul
mov
inc
jns
outsl
mov
stos
push
in
inc
aaa
clc
js
xor
pop
mov
add
out
or
je
jp
or
daa
jp
inc
add
cwtl
push
shlb
push
roll
sar
mov
cmp
fldlg2
sbb
mov
enter
or
rolb
dec
inc
xchg
and
cmp
or
push
cmc
insb
out
cmp
enter
push
pop
jno
mov
fmull
aad
popa
ret
mov
icebp
jecxz
out
add
mov
adc
rol
cmp
dec
xor
mov
xor
fneni(8087
xchg
clc
inc
add
je
divb
xor
aas
repz
dec
les
push
xchg
or
fs
dec
xorl
jno
lods
loopne
add
xor
fisubl
push
xlat
in
mov
inc
push
call
das
aad
fidivrs
jg
aam
iret
aad
scas
mov
sbb
sbbl
mov
cli
pop
push
movsl
ret
inc
inc
loopne
pop
lret
sub
enter
popa
xchg
aam
outsl
in
mov
sub
movsb
pop
cmp
and
adcb
dec
flds
getsec
les
push
pop
js
cld
stos
dec
cmp
or
xchg
nop
ja
cmpsb
sub
push
cmc
lods
pop
les
xchg
jno
dec
adc
in
jge
shrb
cmp
sarb
rclb
xor
mov
push
lock
outsl
in
and
mov
enter
mov
and
and
mov
push
mov
aam
xor
dec
cld
xchg
xchg
outsl
mov
inc
repz
jg
inc
adc
fwait
push
sub
pop
push
sub
jbe
add
add
lret
sti
push
and
pop
pop
pop
push
loop
xor
in
lret
test
insl
fisubrs
cwtl
lods
mov
paddsb
cmp
rorl
out
int
mov
out
es
test
sub
inc
das
movsl
stos
sarl
cwtl
push
mov
dec
shll
sub
addl
add
mov
adc
add
scas
daa
cmp
mov
and
std
fsubrs
loop
mov
cwtl
push
inc
dec
and
mov
sbb
adcb
scas
lss
sarb
in
enter
dec
lods
mov
repz
ds
loopne
mov
and
jnp
adc
pop
mov
cmp
pop
pushf
or
std
repz
mov
outsl
cltd
adc
std
ret
in
int
sti
sub
js
repnz
inc
xor
mov
pop
or
sub
add
and
outsl
int
int3
int
nop
cmp
decl
scas
sbb
movsl
fisubrs
scas
insb
outsb
dec
in
enter
in
fwait
enter
in
mov
les
adc
mov
jns
sti
pop
and
jns
lcall
push
test
call
mov
add
sub
subb
adc
sub
nop
mov
je,pt
aas
sbb
sbb
rcll
vfrczss
dec
testb
test
xor
cmp
dec
inc
and
cmp
xor
inc
dec
arpl
cmc
cwtl
fdivrs
mov
lea
aas
rorb
mov
jne
and
lret
push
pop
stc
idivl
mov
insl
push
push
push
es
xor
fdivl
stos
and
cli
inc
jl
cmp
loop
cmp
push
lret
mov
insl
popf
aad
xor
addr16
mov
ret
cmpsl
popa
inc
roll
iret
add
xor
xchg
cmc
test
xchg
mov
aam
adc
rclb
dec
jp
push
jmp
push
incl
int3
icebp
mov
add
mov
inc
arpl
int3
sub
jmp
call
jne
shlb
mov
mov
mov
xor
ret
loope
push
sbbl
shll
or
sub
andb
pop
push
in
sub
pop
push
xchg
and
add
int3
je
add
hlt
adc
scas
cmp
jge
lret
mov
push
mov
int3
daa
inc
mov
aad
jne
mov
testl
icebp
or
push
and
shrb
xor
fnstcw
inc
jg
dec
push
inc
dec
mov
sbb
jg
adc
sbb
pushf
xchg
push
push
dec
aaa
xchg
ljmp
jns
popa
dec
xchg
ret
ja
lea
inc
popf
dec
pop
enter
into
sub
sbb
daa
les
andb
fstpt
in
notb
mov
jb
xchg
cld
in
dec
gs
jge
jbe
pusha
adcb
sar
mov
sbbb
call
je
push
ss
jno
aad
lds
push
mov
out
mov
mov
inc
jmp
jae
mov
test
inc
out
clc
xchg
sub
sbb
mov
imul
shl
dec
pop
clc
cwtl
imul
dec
and
lods
xchg
or
jmp
mov
dec
fcompl
adc
lahf
ja
cmp
pop
cmp
mov
lds
dec
pushf
scas
pop
dec
adc
or
push
imul
or
mov
movsl
rolb
mov
sub
and
sub
pop
xchg
pop
mov
pop
xor
xor
adc
dec
fidivrs
xchg
lcall
xlat
mov
add
lret
fiadds
jae
cmp
adc
enter
mov
mov
popa
push
jnp
mov
lret
jmp
aas
cmc
ljmp
adc
lret
andb
enter
out
inc
cmp
mov
inc
lret
outsl
xor
sbb
jmp
mov
xchg
xorl
jnp
gs
lods
mov
inc
into
fidivrs
movsl
mov
mov
cs
jl
adc
push
iret
into
mov
cmp
incb
mov
mov
or
adc
rorb
inc
mov
add
cmpsl
ss
jp
test
clc
mov
pop
cmpsl
sub
jnp
pop
inc
cmp
sub
xchg
insb
xchg
adc
hlt
cmpsl
test
pop
sub
jl
xchg
add
xor
stos
adcl
in
aas
mov
push
aaa
test
iret
arpl
cmp
mov
repz
mov
dec
dec
cld
fisubrs
mov
add
repnz
fnstcw
les
aas
popa
xor
bsr
fdivl
hlt
cmp
adc
mov
data16
cmp
dec
out
jg
lods
inc
xor
mov
lods
push
push
lea
in
jnp
and
jb
bound
xor
add
clc
addr16
lea
jecxz
je
call
or
roll
adc
sbb
loop
sbb
out
popa
test
mov
mov
aam
arpl
pop
mov
jge
sub
add
stos
fwait
sub
mov
testl
and
roll
add
call
lcall
leave
mov
mov
jmp
push
cmp
cmp
outsl
xlat
in
jge
mov
mov
aas
stos
andl
in
sbb
ss
fsubr
push
and
popa
nop
loop
fimuls
adc
ljmp
push
pop
sbb
and
out
daa
stos
sahf
in
sub
pushf
imul
push
mov
push
cmpsb
mov
rcrl
inc
xor
lds
mov
sub
add
sub
xorl
mov
sub
js
add
or
push
pop
in
dec
cld
adc
and
daa
in
clc
pop
inc
push
add
push
movntq
out
mov
pop
add
cmp
xchg
mov
sub
int3
test
dec
test
xor
sub
imul
mov
sub
data16
mov
ds
test
into
addl
or
ljmp
jge
or
lret
arpl
jae
sbb
add
and
sub
sbb
lret
scas
mov
clc
mov
or
cmp
jne
jmp
pop
pushf
and
out
add
pusha
jne
xor
insl
lea
outsl
and
dec
xor
push
mov
out
fsubrl
stos
lret
adc
cmp
outsl
add
mov
sub
fs
and
in
and
xchg
es
aaa
xchg
cmpsb
or
push
dec
mov
xor
js
adc
xchg
bnd
push
movsb
lea
pushl
xor
xchg
and
pushf
xlat
test
mov
adc
sbb
stos
sub
push
int3
xchg
add
adc
mov
lds
push
imul
clc
push
mov
mov
subl
daa
aam
adc
iret
cmp
shll
test
jg
mov
lods
lods
and
shrb
lods
inc
xor
in
mulb
mov
mov
dec
add
in
cld
adc
repnz
cmp
cmp
jae
addr16
add
je
xor
pop
sar
scas
adc
out
adc
aas
dec
push
xor
jmp
divl
jecxz
adc
shrb
add
or
pop
shl
mov
repnz
xor
pop
mov
hlt
andl
in
xor
es
jo
test
movsb
in
sub
sti
or
mov
adc
outsb
pop
and
xchg
push
mov
adc
inc
dec
stos
loope
dec
mov
lea
cwtl
inc
inc
pushf
pop
xor
daa
adc
xor
sbb
push
sub
xchg
sbb
lret
push
inc
push
dec
loope
inc
push
je
pop
out
inc
in
mov
loop
repz
mov
mov
test
adc
inc
pop
pop
or
faddp
sti
fsubrl
push
std
ficoml
or
mov
adc
mov
jno
lcall
dec
pop
cltd
je
je
mov
hlt
shrb
es
sub
cmp
add
aad
pop
mov
std
push
pop
cmpsb
jl
cld
fistpl
jae
scas
xchg
push
out
push
jmp
pop
jp
sbb
push
lds
cwtl
xchg
cmpsl
and
data16
stos
sar
outsl
xor
fistpll
xchg
sahf
jo
push
mov
sub
cmp
add
or
add
jne
dec
js
inc
cwtl
dec
pop
mov
mov
fwait
or
gs
icebp
cs
das
cmp
add
xchg
sbb
inc
std
lahf
cmc
cmp
iret
cli
inc
leave
cmp
iret
icebp
outsb
mov
cmpsl
pop
shll
les
test
xchg
sbb
push
jl
or
in
sub
hlt
push
orb
adc
dec
bound
scas
test
popa
cmp
xor
fstpl
das
mov
pop
je
mov
push
fbld
imul
adc
mov
fcoml
ficoms
ret
mov
rol
add
dec
rep
loope
mov
repz
sub
js
jl
inc
push
mov
xor
bound
pusha
mov
push
sti
dec
fmulp
and
jns
das
or
aas
xchg
idivb
outsl
sti
mov
add
mov
push
imul
or
insl
sub
or
adc
rcll
pop
cmp
jae
pop
setge
insl
cmpsb
pop
and
filds
rclb
sbb
mov
or
dec
das
add
test
or
sbb
mov
lcall
int
xchg
lods
mov
cltd
mov
and
aas
pop
in
movsl
push
mov
xor
mov
popa
mov
or
sub
shl
ret
adc
mov
inc
cmp
inc
mov
loop
mov
mov
or
icebp
popa
sahf
mov
jecxz
or
push
in
jl
cmp
dec
jmp
push
in
pop
cs
or
inc
dec
repnz
pop
jo
ljmp
xchg
rcll
popa
adc
aas
push
push
push
loopne
and
int3
and
ffree
inc
stc
adc
pop
push
pop
cmp
lret
inc
mov
xor
pop
das
sub
xchg
popl
insl
je
lea
shlw
xlat
mov
mov
imul
mov
push
xor
mov
fstpl
ja
out
mov
lret
push
jmp
sbb
dec
dec
sub
testl
xor
xchg
pop
daa
imul
mov
mov
fdivr
idivb
enter
push
pushf
ja
mov
cs
push
push
nop
rorl
les
xchg
push
mov
in
in
ret
mov
push
gs
and
pop
pop
ret
inc
sbb
fdivs
es
fdivs
jae
and
test
sbb
rolb
mov
imul
mov
inc
jns
xor
scas
sub
das
in
pop
cmp
add
and
jl
sbb
es
inc
dec
mov
xor
sti
jbe
dec
outsb
aad
mov
mov
repnz
adc
cmp
ror
cld
xor
inc
fs
inc
clc
popf
loopne
inc
mov
pop
test
pop
je
pushf
lods
pop
inc
arpl
es
add
mov
bound
mov
and
pop
sbb
jae
repz
mov
gs
das
xor
push
jno
aaa
dec
fwait
sub
scas
jno
xchg
sbb
into
adc
or
mov
call
xchg
xor
ret
sbb
fisubrs
push
push
push
mov
mov
aas
xchg
mov
inc
adc
mov
push
out
insl
sbb
pop
test
jno
ss
addr16
pop
jp
mov
jecxz
cltd
mov
add
daa
ret
mov
push
loopne
jmp
stos
lret
mov
and
mov
push
scas
and
dec
push
jge
imul
lea
mov
subl
adc
test
fwait
aas
jge
clc
aas
add
sbb
je
and
inc
xchg
and
mov
in
icebp
in
cmp
gs
xor
mov
sub
dec
fdivr
dec
lock
sub
cli
inc
rcr
ljmp
fdivrp
scas
psrlq
test
les
xchg
sub
jne
fdivrl
dec
add
adc
dec
icebp
dec
push
xchg
xor
jb
insl
test
mov
dec
cwtl
add
mov
or
cmpsl
fiaddl
mov
and
or
adc
jo
cmpsl
mov
mov
negb
push
and
loop
adc
into
fs
imul
cmp
pop
inc
repnz
dec
cmpb
xchg
jmp
jle
fbld
xor
push
popf
mov
add
push
lret
lock
mov
inc
movzbl
push
pop
jnp
cmp
sbb
xchg
shrl
addb
insb
or
sbb
in
sarl
adc
lahf
pop
decl
rorb
mov
xor
jecxz
lret
jmp
sub
std
mov
lret
ffree
repnz
mov
pop
xchg
jns
add
sub
scas
push
arpl
mov
shr
add
mov
stos
testl
shrl
mov
lods
xor
scas
mov
push
mov
mov
pop
cmp
inc
mov
insl
scas
and
add
daa
mov
stos
mov
pop
add
mov
call
mov
insl
popl
sbb
inc
ja
leave
dec
sub
movl
sub
and
pop
aas
nop
xchg
dec
mov
cs
sahf
push
fiadds
es
dec
xchg
push
and
shrl
aad
enter
in
push
pop
add
in
jmp
mov
pop
inc
cmp
push
pop
std
movsl
xchg
sub
js
and
repz
jno
push
mov
loopne
fsts
push
pop
sub
or
or
int
jae
shll
pop
lods
test
xchg
addl
inc
popa
shl
mov
pop
imul
sub
mov
xchg
fcomps
pop
xor
sub
aaa
pop
dec
jg
lahf
inc
mov
xor
jecxz
sub
mov
jmp
insl
mov
test
daa
pop
xor
sbb
leave
jmp
lods
pop
les
jns
or
out
and
cmp
xchg
mov
daa
sti
mov
loopne
sbb
movsb
es
fidivl
ss
mov
or
push
outsl
xchg
and
daa
jns
jno
push
push
loope
xchg
mov
dec
mov
pop
xor
rcrl
fs
xchg
xchg
xchg
outsb
dec
hlt
lahf
sbb
sbb
stc
adc
jecxz
loop
push
std
sub
loope
mov
xor
jg
faddl
push
movsl
add
pop
or
sub
int
rorl
jp
and
jle
mov
mov
cmp
out
iret
std
mov
out
loopne
movl
sub
test
int
or
lods
lahf
cmp
ret
out
ds
cmpsb
cmp
movsb
cli
mov
jne
or
js
ljmp
jmp
out
pop
sarl
jge
and
mov
test
mov
fstp
dec
cmc
arpl
cmp
mov
iret
dec
paddsb
jne
cmpsb
lahf
push
repnz
test
mov
jne
jno
mov
iret
fsubp
sub
xor
jae
enter
popf
sahf
sub
pop
jp
popa
xor
xchg
ret
jbe
bound
inc
lock
inc
add
sbb
sahf
int
push
popf
rolb
iret
mov
loopne
add
xchg
jg
jae
pop
adc
aam
sub
stc
fs
jb
xor
rcr
stos
push
mov
mov
push
mov
lods
mov
push
cmp
fmul
insb
adc
and
loope
dec
adc
add
pop
test
jl
sbb
xchg
and
in
in
outsl
pop
mov
adc
cli
xlat
idiv
mov
add
int3
fsubs
test
cmp
add
pusha
rorl
or
repnz
aaa
rolb
adc
pop
iret
addr16
jmp
mov
jp
ja
inc
negb
sub
pop
ds
jg
pusha
imul
mov
sbb
xor
arpl
hlt
or
cli
mov
stc
outsb
add
scas
sti
ret
rcl
inc
rcl
roll
shll
fsubl
inc
or
jae
ret
jle
fisubrl
pop
cmp
cltd
imul
movb
es
sub
jb
roll
aas
ret
popf
aam
pop
xchg
sarl
inc
sbb
mov
adc
push
pop
xchg
or
fisubl
icebp
lds
jnp
adc
mov
cmp
gs
enter
aam
sub
mov
dec
sbb
aam
jno
push
pop
mov
pop
xchg
rclb
imul
outsl
rolb
dec
sbb
loope
sbb
lods
xchg
mov
out
add
mov
je
js
aaa
out
adc
ret
fcoml
mov
ja
push
adc
jge
out
xchg
cmc
push
cmp
mov
push
jecxz
pop
out
jmp
out
push
dec
xchg
cmp
dec
and
insl
das
scas
mov
stos
cmpsb
xchg
dec
sar
cmp
add
sub
sbb
xchg
xchg
sar
pop
jg
rcrb
add
in
mov
mov
and
push
cmpsb
loopne
sbb
jno
and
or
pop
idivl
push
cmpsl
mov
mov
and
xchg
mov
ljmp
aam
push
xor
sbb
pop
dec
pop
not
and
loop
xor
xorl
cmc
sbb
jl
jecxz
xchg
push
sub
int
cli
sub
dec
xor
add
call
loop
push
cs
push
jle
mov
mov
lds
mov
xchg
fwait
jnp
sub
ja
dec
fnsave
andl
inc
mov
or
scas
mov
test
bound
rcrb
in
insb
inc
or
aam
je
xlat
mov
mov
fucomi
add
add
shll
mov
mov
fsubrs
xchg
mov
mov
arpl
lcall
mov
addl
ljmp
cmp
ljmp
push
cmpsb
vminpd
xor
mov
sbb
or
cmp
in
pop
es
inc
mov
cmp
xor
clc
movsb
mov
pop
shr
stos
movsl
xchg
daa
xchg
aaa
mov
dec
fwait
shll
add
jmp
pop
nop
inc
hlt
and
jg
sub
and
mov
cmc
mov
ror
aam
test
push
shl
out
push
pop
testl
arpl
inc
adc
sub
orb
and
sbb
dec
xor
xchg
dec
arpl
xor
rolb
xor
or
or
cwtl
or
scas
mov
loope
xchg
aaa
dec
fmulp
scas
dec
arpl
push
repz
cmc
or
bound
addr16
add
int3
dec
mov
pop
sbbb
mov
fwait
aas
pop
adc
or
fwait
jle
lods
xchg
xchg
or
and
inc
sub
jl
jno
in
sub
adc
sub
jae
sbbl
pop
or
cmp
fsubrl
cltd
out
jne
rcl
add
and
hlt
xchg
cli
push
outsl
pop
mov
dec
out
mov
sbb
imul
mov
sbb
xor
mov
dec
pop
stos
mov
mov
sbbb
mov
ljmp
inc
jecxz
hlt
pop
sub
aaa
cmp
inc
ljmp
add
mov
mov
add
adc
ret
add
sbb
xchg
fisttpl
mov
mov
sub
jg
mov
adc
mov
in
sub
fwait
in
dec
ja
xor
sub
movsl
flds
int
adc
imul
mov
mov
push
cmp
cmp
push
push
inc
cmpsb
and
add
ss
cmc
or
adc
jmp
fldcw
jbe
adc
fwait
les
pusha
or
repnz
add
dec
lds
push
sbb
into
adc
xor
jnp
mov
repnz
jmp
jnp
bound
lret
pusha
mov
mov
mov
cli
ja
mul
lock
add
adc
sbb
mov
sub
push
adc
mov
int3
sub
add
in
mov
inc
dec
into
cmp
xor
imul
test
or
lcall
fcompl
pop
stos
lret
test
mov
xchg
push
movsb
stos
mov
ror
xchg
xor
push
ds
ret
and
nop
jl
hlt
aam
jo
mov
js
mov
dec
cmp
das
jl
sub
shl
lret
test
lods
pop
in
mov
scas
jnp
dec
repz
lods
inc
mov
push
jge
pop
aad
add
loope
inc
adc
jmp
mov
inc
jle
xor
pop
pushf
std
mov
sti
test
add
pop
mov
xchg
adc
push
push
xchg
jns
test
mov
inc
or
cmpsb
hlt
dec
jne
push
mov
popf
stos
les
jge
enter
xchg
iret
sti
xchg
push
scas
dec
fdivrl
lret
cmp
jg
les
ja
in
jae
adc
mov
or
jle
movsb
std
inc
sbb
cli
adc
push
mov
jmp
lret
xchg
divl
jmp
std
loopne
add
rorl
lods
out
insl
stc
popa
insl
mulb
inc
mov
jp
inc
xchg
mov
jle
add
mov
ret
in
inc
xor
xchg
add
sarl
popa
pop
xor
clc
pop
dec
dec
mov
movsl
or
jo
mov
or
adcl
mov
pop
js
xor
fbld
aad
fcmovbe
push
push
out
lods
sti
sub
add
cmp
ja
or
in
hlt
mov
inc
enter
outsl
daa
cmp
stc
push
outsb
xchg
xor
clc
rcrl
lret
push
mov
or
mov
int3
pop
sub
js
les
lods
pop
xchg
xchg
sbb
stc
in
rcl
repz
jmp
movsb
mov
mov
mov
push
jns
jg
mov
incl
stos
test
les
movsb
cli
mov
repnz
loop
adc
test
or
adc
sti
lcall
push
xor
es
fstps
icebp
arpl
pop
shll
fs
jg
fisubs
fwait
jns
std
xchg
jb
inc
jne
mov
imul
icebp
pop
loopne
jnp
cmp
mov
int
je
and
add
in
jae
pop
sub
xchg
cmp
pushf
mov
push
pop
mov
test
lods
insl
es
std
and
xchg
sub
xchg
sub
movsb
pop
mov
sbb
call
mov
xchg
mov
xchg
lock
fsubrs
test
mov
or
pop
pop
jge
inc
cmpsl
fdivrs
out
call
aam
xor
push
cli
inc
push
scas
out
adc
mov
imul
xor
jb
adc
fptan
fisttpl
mov
mov
inc
add
sub
je
cld
mov
cli
push
add
or
jmp
js
out
leave
xor
ret
and
jns
xlat
adc
sbbb
xchg
inc
adc
in
shll
mov
cs
mov
mov
lahf
pusha
xchg
pop
mov
flds
rol
xchg
dec
icebp
bound
jecxz
adc
xorl
push
and
icebp
cmp
jge
inc
push
jp
pop
lcall
test
xchg
leave
jbe
sub
lock
rorb
inc
xchg
xchg
imul
sub
jle
pop
jb
ret
sub
or
popa
pop
aad
xor
adc
xchg
sub
fstpl
mov
stc
and
aad
js
shlb
loop
inc
cwtl
and
cmp
cmp
pop
test
into
fistps
xor
pop
dec
mov
clc
sarl
out
mov
insb
lcall
cmpb
or
je
lcall
sahf
ljmp
lea
adc
cltd
jb
pop
inc
or
out
cs
mov
pop
lret
inc
and
aam
pop
pop
test
movl
rclb
add
mov
fcomps
inc
dec
mov
imulb
ljmp
fidivs
pop
cld
arpl
dec
shlb
outsl
fnsave
test
call
pop
cmp
sbb
xchg
sbb
inc
pop
int3
jmp
sub
fstpt
push
test
lret
cld
mov
jae
movsbl
jl
int3
lods
jmp
cmpl
out
gs
push
sbb
outsb
gs
xor
jg
mov
jg
dec
pop
pushf
rcrl
sbb
out
and
xchg
jno
stos
sub
in
mov
mov
cli
or
ds
test
pop
jmp
xchg
pop
test
iret
out
lret
cmc
xchg
imul
and
loop
push
imul
mov
push
jge
mov
fsubr
mov
fs
push
inc
mov
inc
stc
aam
repnz
es
in
xchg
outsl
sub
movsl
xor
lods
arpl
add
push
aam
cmpsl
sahf
pop
push
imul
dec
pop
push
jge
jge,pt
mov
sub
cmp
ret
cmp
add
out
cli
ret
int
push
jns
ds
arpl
dec
sub
cmc
fbld
out
xchg
sbbb
sub
adc
push
pminub
mov
clc
sub
jmp
lahf
jne
cmp
jmp
mov
xchg
inc
cmpsb
mov
or
sbb
xchg
add
repnz
mov
dec
push
icebp
push
sub
xchg
jne
xor
lea
sub
decl
add
jns
sub
xlat
mov
test
push
dec
jnp
inc
sub
scas
mov
dec
imul
ret
and
or
jl
sub
and
imul
push
mov
xchg
repnz
xchg
or
push
sub
or
hlt
lods
dec
mov
dec
or
mov
sub
mov
vmread
enter
dec
stos
cmp
repz
mov
mov
add
ljmp
inc
mov
std
push
pop
shlb
cld
fbld
inc
std
mov
push
push
inc
xchg
lods
push
rolb
movsl
lock
in
add
push
xor
mov
xchg
lock
cmp
ja
and
mov
push
cmp
xchg
sbb
pop
out
push
scas
lret
ret
out
inc
pop
xchg
cmp
arpl
dec
inc
push
loopne
mov
hlt
mov
movsbl
xor
pop
ret
stos
push
scas
out
ss
clc
sahf
lahf
pop
aaa
iret
shlb
cltd
push
bound
negl
aad
dec
push
jp
pop
or
jo
push
enter
adcb
jge
out
sbb
mov
push
jo
rorl
adc
fwait
and
fnsave
cli
push
xchg
push
shlb
or
into
jp
pop
into
call
pop
dec
mov
daa
iret
fsub
stc
mov
add
lds
pop
xchg
xchg
imul
imul
cmp
xchg
sbb
push
jne
lea
push
mov
xchg
jno
add
addl
cwtl
pop
fs
adc
adc
pop
negb
mov
mov
or
cmpb
aam
bound
dec
mov
adc
ror
ja
push
aas
rorb
xor
adc
sbb
dec
in
cmp
sbb
pop
or
xorb
sbb
sub
xor
cmpsb
cmpsb
jle
mov
cmp
in
loopne
dec
scas
cmpsb
stc
scas
dec
subb
xor
aaa
aam
dec
cmp
addr16
je
sbb
lea
out
in
rorl
mov
shlb
mov
cmp
pushf
add
cmpsl
jp
or
mov
inc
aaa
mov
movsb
jnp
orb
movsb
inc
sub
fcmove
test
fldt
mov
adc
aaa
push
xlat
movsl
sarb
sub
lods
xchg
jmp
mov
xlat
xlat
xor
adc
dec
mov
in
stc
stos
pop
lods
dec
call
mov
repnz
cmp
ljmp
or
aam
mov
stc
xor
sub
addr16
mov
jne
push
jb
adc
jp
mov
adc
out
or
mov
pop
lods
mov
int3
daa
or
stc
fldl
cwtl
inc
loop
daa
cmc
int3
int3
pusha
testb
pop
push
xchg
push
lahf
cmp
pop
insb
mov
in
ret
int
notl
clc
pop
push
or
cmpsb
addb
test
pop
sub
addr16
mov
xchg
imul
ror
icebp
ret
cmp
aas
xchg
mov
inc
jg
aaa
inc
xchg
xor
rcrb
mov
les
movsl
add
in
push
pop
xchg
data16
fcoms
mov
cmpsl
repnz
sbb
hlt
or
push
inc
sahf
imul
xor
popf
sti
lods
test
xchg
rorl
lods
add
jb
xchg
nop
imul
std
mov
cltd
inc
or
xchg
imul
out
jb
int3
dec
lds
popa
hlt
out
sti
out
daa
cmp
fdivrl
mov
in
mov
mov
push
mov
insb
int
xor
rcll
jne
add
mov
stos
daa
cmp
sbb
jmp
aad
out
mov
cmp
cmp
cld
xorl
addr16
cltd
pop
lds
push
xchg
jge
sbb
in
and
sarb
push
xor
inc
aaa
in
in
dec
inc
sub
cmp
xchg
hlt
xor
mov
add
xor
scas
fwait
sub
jecxz
inc
xor
cld
int3
add
lods
pusha
cmp
mov
test
stos
das
int
xor
xchg
es
mov
push
aaa
jo
sbb
jge
xorl
mov
std
xchg
outsl
mov
cwtl
xor
repz
mov
aaa
mov
jno
inc
or
xor
aas
adc
arpl
cmp
push
or
xchg
cmpsl
sub
lret
jmp
inc
push
mov
faddp
xlat
jns
adc
or
pusha
out
dec
in
jecxz
aaa
cmp
lahf
sub
out
jmp
mov
mov
movsl
dec
sub
rcll
gs
shlb
inc
lcall
js
rclb
jnp
shlb
mov
fptan
int3
xchg
mov
inc
jnp
into
outsb
out
cmp
dec
sub
mov
insl
dec
cltd
add
out
std
mov
addr16
adc
not
stos
fildll
cmpsl
in
mov
dec
pop
or
push
and
dec
lods
scas
outsl
shr
and
mov
jo
outsb
sbb
cwtl
cwtl
lds
mov
in
adc
sub
pop
ficompl
icebp
adc
xchg
cmpsb
xchg
sub
insl
xor
sub
test
lret
and
mov
in
pop
mov
lcall
jae
push
addr16
insb
in
aad
sbb
imul
fs
jne
or
add
pop
outsl
ffree
insl
nop
cmp
and
into
push
sar
xor
xchg
sarb
cmp
pop
shrl
mov
pop
xchg
xor
pusha
scas
nop
lods
mov
or
mov
cmp
ds
mov
ja
or
cmpsb
insb
mov
add
add
pop
and
mov
clc
xchg
pop
hlt
jns
lods
sub
adc
test
pop
sahf
mov
sti
push
push
mov
sub
mov
push
ss
xchg
push
jno
jl
rolb
mov
mov
fldl2t
push
or
mov
sub
push
inc
inc
sub
xlat
or
test
cmp
push
ja
cwtl
lahf
adc
loopne
mov
push
push
fldenv
dec
cmp
int3
xchg
cltd
inc
adc
lret
movsl
sub
int
xlat
adc
iret
idivb
xor
movsl
adc
sbb
aas
add
dec
mov
dec
mov
jmp
jne
scas
out
imul
es
test
jns
ret
jecxz
fisubrl
or
add
add
loopne
repz
cmp
pop
xor
xchg
stos
push
inc
movsl
lea
pop
cmpsb
pop
das
lods
sbb
jnp
int
mov
das
rorl
sbb
jbe
mov
sbb
cltd
pop
mov
arpl
arpl
lods
push
xchg
mov
sub
sbb
je
sub
rclb
mov
fnstcw
loope
add
popf
sar
daa
movb
aaa
mov
push
xchg
jecxz
shrb
push
int3
mov
gs
and
adc
clc
lahf
fabs
in
daa
pushf
jge
test
sbb
pop
jnp
add
popa
ficompl
cltd
xor
xchg
out
jne
mov
repz
andl
dec
gs
or
testb
jns
clc
cmp
mov
icebp
and
stos
lret
bound
aam
loop
pop
pusha
rolb
mov
bound
mov
ret
stos
negb
ss
jno
xchg
fldcw
push
jb
jge
add
adc
nop
mov
call
pushf
rolb
ds
mov
add
mov
add
jne
js
dec
jmp
divl
movsb
jle
ret
and
mov
scas
xor
fistpl
shll
imul
xchg
aas
push
xor
sub
mov
adc
jno
add
ds
sub
iret
jns
in
ja
or
sub
jo
pop
imul
jl
hlt
sub
mov
lds
push
adc
loopne
gs
ds
jle
pop
mov
lahf
lahf
fldenv
mov
xor
arpl
push
xor
adc
shrb
shlb
aas
or
outsl
lods
das
mov
dec
sbb
mov
or
mov
jne
xlat
adc
fs
mov
jb
scas
pop
lahf
cmp
pop
push
push
or
out
cli
cli
jae
dec
pushf
adcb
addr16
btr
and
push
ret
sbb
int3
push
je
stos
jge
sbb
gs
jne
out
stc
stos
cmp
lahf
test
mov
push
fwait
and
imulb
insl
jge
aad
push
sub
mov
or
mov
in
xchg
sbb
xchg
xor
int3
shll
hlt
mov
lea
pushf
lahf
scas
fwait
xchg
ret
xor
inc
lods
ja
add
call
cmp
push
gs
out
jb
imul
adc
mov
outsl
mov
dec
loop
mov
cs
mov
arpl
sbb
sbb
sub
inc
add
pop
aad
mov
push
push
ror
movsl
addb
mov
cmp
hlt
mov
clc
dec
pop
pop
xor
leavew
dec
adc
loopne
push
lock
aaa
rcrb
mov
xor
sbb
in
stc
jbe
repz
mov
push
stos
sbb
cmpsl
sbb
leave
cmp
mov
cli
xor
imul
aad
ds
aam
jg
dec
or
in
cmp
test
cmpsb
cmpsb
pop
das
outsl
and
jle
aas
xchg
or
lds
mov
push
cmp
push
ja
fwait
dec
les
addb
int
outsb
adcl
cmp
bound
decl
test
negl
pushf
test
jl
or
xchg
sub
std
fwait
int
test
jne
adcl
je
mov
xor
lods
cld
mov
adc
sub
dec
into
aas
xchg
test
mov
nop
and
sysenter
mov
and
lahf
shrl
mov
mov
adc
mov
cmpsb
xchg
add
mov
test
js
xlat
sarb
xchg
arpl
sti
ss
test
movsl
lahf
clc
pop
add
lock
dec
pop
fistl
das
les
push
cs
add
mov
ljmp
movsb
fmull
movb
push
jecxz
leave
lds
cmpsl
fisubl
call
fdivrs
or
sahf
jg
push
imul
push
cwtl
test
filds
mov
and
mov
inc
mov
or
pusha
jno
cmp
call
and
xor
mov
int3
aam
sbb
out
scas
inc
cld
in
mov
cmpsb
mov
mov
cltd
cmpsb
je
mov
subl
push
nop
sub
je
dec
mov
jle
xchg
imul
mov
rol
es
aam
mov
dec
fsubrs
jle
mov
jmp
mov
xor
in
mov
xchg
mov
xor
dec
or
xor
push
lcall
inc
in
test
inc
leave
test
and
push
mov
mov
xlat
mov
pusha
test
dec
daa
sub
fsubrl
add
sti
sbb
mov
mov
push
mov
cli
loope
icebp
into
scas
test
scas
js
and
xor
xlat
or
sub
enter
fs
das
sub
pop
rclb
decl
jno
lods
sbb
sub
hlt
mov
pusha
push
popa
in
imul
dec
push
and
xor
push
inc
mov
lock
out
inc
push
das
or
std
scas
imul
dec
or
stc
pop
xchg
pop
cmpsl
mov
push
gs
xchg
mov
leave
sbbb
sti
jl
inc
call
add
sub
and
inc
xchg
cmp
mov
aaa
cmp
sti
pop
out
pop
add
inc
jo
cmpsl
aaa
movsb
inc
mov
jb
mov
push
cmp
inc
movsb
js
imul
test
pop
jl
pop
xchg
ljmp
xor
popf
or
xchg
push
add
data16
push
or
loopne
mov
mov
mov
xor
subb
inc
jnp
fiadds
fisubs
in
cltd
xor
jnp
sbb
add
das
aaa
pushf
rcrl
cwtl
out
dec
andb
sub
adc
adc
add
js
dec
sahf
jmp
cltd
xor
jle
dec
in
pop
out
mov
mov
fdivl
sbb
pop
lret
insl
mov
into
ja
mov
jns
stc
mov
js
adc
lds
jp
inc
je
in
aas
inc
out
jg
xor
ret
cmpsl
jp
pop
pop
cmpsl
mov
fldl
lret
in
clc
and
mov
int
std
lods
sbb
xor
imul
mov
jb
mov
rcrl
mov
movb
clc
sbb
and
repz
mov
callw
push
mov
lds
ret
scas
and
dec
mov
mov
adc
aam
xchg
inc
dec
pop
inc
js
inc
cmpsb
jns
mov
mov
lret
mov
pop
pop
or
sti
fists
mov
in
dec
das
jmp
xchg
int
mov
jl
mov
dec
jne
cmp
or
cltd
fisttps
jno
aaa
sti
pop
insb
ja
imul
cwtl
out
push
xchg
sbb
sbb
pop
push
mov
movl
rcrb
pop
sbb
inc
jl
xor
fdivrl
xchg
push
and
mov
cmc
popf
mov
daa
cmp
xor
or
insb
enter
out
daa
jb
out
dec
adc
pop
pop
ret
or
enter
cmp
sub
adc
aam
adc
xor
repz
call
sbbl
xor
in
sbb
rcr
mov
pop
mov
mov
push
lahf
xor
and
xchg
into
add
ljmp
dec
popa
movsl
dec
mov
xchg
sbbl
sbb
sub
xchg
jno
jbe
dec
mov
mov
rorb
cmpsb
jg
adc
add
testb
add
ret
mov
pop
in
leave
jl
mov
sbb
pusha
mov
movsb
inc
pop
dec
mov
jno
shll
aad
mov
jecxz
dec
jo
mov
inc
pop
mov
testb
aam
pusha
mov
xor
pop
fnstcw
std
push
dec
ret
sbb
sbb
sti
fnstenv
sbb
add
in
cmp
inc
inc
mov
test
add
stos
jg
push
lods
lcall
push
and
lahf
jnp
clc
movb
lcall
cmp
sub
xchg
pop
ficoml
pop
mov
or
iret
popf
stos
pop
cmp
imul
sbb
inc
add
lret
jae
stc
out
cmp
and
fs
xor
push
adc
and
push
js
scas
test
hlt
jne
enter
mov
jg
icebp
add
lcall
add
filds
xorb
cmp
xchg
jae
push
roll
loopne
sbb
jns
lret
lret
ret
mov
fmulp
int3
sub
sub
mov
add
or
scas
call
pop
lahf
dec
fidivrl
aad
mov
jno
push
sub
sti
sbb
les
xor
mov
inc
lods
cmp
nop
xchg
aad
pop
mov
sbb
jne
or
pop
out
mov
cltd
jne
aaa
cmp
insb
pop
jp
or
cltd
inc
push
xchg
sub
cmp
xor
jo
jecxz
pop
or
cltd
jae
loop
rcll
sub
testb
xor
xchg
js
loop
sbb
mov
nop
rcrb
fildll
test
sub
jno
jo
and
loop
xlat
xor
or
scas
mov
push
cmp
xor
movsb
ds
jb
inc
nop
fucomip
in
hlt
mov
fdivrs
dec
jl
in
sti
adc
sbb
jp
call
lods
mov
nop
push
or
fistps
lret
movsl
out
cmp
xorb
jp
inc
sbb
data16
add
push
jnp
xchg
sub
xchg
sbb
inc
sub
or
mov
mov
pop
cltd
movsb
scas
fisubs
push
and
jns
insb
mov
ret
outsl
ds
mov
mov
testl
enter
jo
jmp
sub
pop
sbb
and
mov
movl
fcoms
out
insb
xchg
ret
xor
and
xchg
jmp
fsubl
xor
mov
inc
into
mov
dec
shrl
movsb
xchg
inc
mov
push
cmc
jp
aam
push
movzbl
add
rclb
ljmp
add
enter
jnp
mov
mov
adc
fistl
push
push
and
nop
loope
pop
push
dec
das
repnz
push
mov
int
adc
mov
idivb
inc
pop
inc
in
imul
enter
test
arpl
inc
sub
mov
enter
dec
fimuls
lds
add
orb
cmp
add
cmpsb
inc
int
loopne
mov
add
cld
and
dec
fcom
xchg
aas
in
or
fimuls
xchg
cmp
or
add
push
pop
pop
add
test
sbb
inc
movl
scas
enter
mov
pop
jecxz
aaa
cmp
cmpsb
cmp
add
mov
rclb
and
movsl
loope
ljmp
and
lret
lret
imul
xor
imul
cltd
adc
or
sbb
in
sbb
cmp
mov
and
subb
jne
and
xchg
sbb
jbe
andl
arpl
idivb
ljmp
fs
gs
adc
and
jbe
in
and
xchg
pop
sub
sub
cmp
sahf
and
push
or
addr16
popf
cmp
xchg
bswap
add
repnz
jnp
ljmp
movl
pushf
sub
xlat
sti
mov
inc
mov
daa
push
lods
cmp
pop
dec
fcmovbe
out
or
or
dec
je
clc
pop
into
and
cltd
push
ja
xchg
test
sub
dec
jecxz
and
test
mov
in
cs
in
adc
xchg
mov
out
mov
adc
jecxz
jbe
sbb
xchg
in
fisttps
or
fdivr
inc
pop
and
lea
cs
sbb
mov
test
aas
xor
or
fwait
cmp
mov
mov
xor
inc
insl
jg
push
cmp
push
ss
cmp
aaa
inc
push
mov
stc
jecxz
fmull
push
fnsave
arpl
cli
cmp
pop
sub
xor
push
or
outsb
cmc
add
or
ret
or
icebp
aas
cld
roll
pop
adc
movsl
xchg
sti
popf
out
jae
xchg
or
icebp
into
push
jl
jns
jb
repz
ret
pop
ss
iret
jl
cmp
das
mov
pop
cmp
and
mov
and
xchg
jle
arpl
int3
pop
int
cmp
mov
in
xlat
xor
into
sub
mov
je
fiaddl
das
iret
push
or
insl
mov
hlt
int3
pusha
dec
insb
add
lods
in
mov
push
test
sbb
cmp
in
das
fwait
push
jbe
mov
mov
jbe
icebp
jecxz
pop
and
sbb
test
push
cmpsb
jg
push
popf
add
in
add
call
or
xchg
mov
je
into
adc
xchg
mov
add
roll
outsb
mov
out
add
je
jecxz
pop
mov
xor
xchg
jl
cld
js
pop
push
imul
loopne
sub
bound
jle
jo
sbb
cmpsb
dec
push
cmp
pop
fs
mov
inc
push
ds
jl
dec
nop
sbb
mov
mov
inc
aam
xchg
mov
inc
sub
stc
ret
pop
push
orl
test
test
bound
xor
cld
pop
loopne
or
jge
lret
stos
cmpsb
jl
scas
scas
add
and
into
inc
mov
adc
loopne
and
out
movsb
mov
push
push
jge
pop
fbld
arpl
fisubs
jmp
gs
sti
ljmp
les
arpl
icebp
pop
es
ja
out
das
stc
std
fstl
divb
pop
scas
xchg
shll
lcall
xor
and
jne
and
xorb
push
mov
pop
add
into
cmp
ret
mov
icebp
sub
out
les
insb
jo
and
sbb
into
clc
sbb
jl
xchg
clc
cli
fstl
inc
cld
sub
pop
xor
dec
popa
dec
pop
and
pushf
jno
sbb
dec
mov
sub
call
out
das
fstl
inc
int3
mov
clc
rcll
mov
cmpsl
inc
jns
mov
or
jnp
dec
xor
std
adc
sbb
fcmovnbe
xchg
dec
dec
jge
push
xorl
imul
mov
cmpsb
mov
jp
sbb
dec
lret
or
sbbl
xchg
or
pop
jmp
test
clc
xchg
fsubrl
add
out
pop
push
or
lahf
jl
in
out
stc
jmp
xchg
mov
xchg
mov
ds
cwtl
cmc
or
dec
add
jne
sbb
jmp
dec
incb
push
jmp
push
inc
xchg
or
cmpsb
js
sbb
insb
lcall
repnz
popa
into
stos
les
into
pop
mov
das
sets
or
adc
pop
out
push
xor
mov
jmp
jg
mov
jae
inc
rcrl
fcoms
in
and
mov
or
jnp
cmp
in
dec
arpl
xchg
jmp
mov
lods
sbb
roll
jne
xchg
fldenv
mov
imul
loop
sbb
push
addr16
in
rolb
aaa
pop
jae
call
inc
xchg
add
push
in
xchg
decb
popf
movsl
stc
cmp
adc
aaa
push
mov
xchg
and
inc
jge
bound
aas
jns
sbb
adcb
or
jg
mov
pop
xor
mov
jmp
lods
xchg
xchg
jnp
sub
ja
mov
and
mov
lock
fisttps
pop
mov
ja
fcmovnu
add
leave
xor
imul
sbb
sub
mov
adc
xor
sbbl
sub
insb
cmpsb
lds
mov
out
loope
fwait
stc
push
enter
imul
cmp
in
mov
or
ljmp
popf
jae
je
add
push
je
imul
add
xor
repz
filds
cmp
lcall
cwtl
sub
in
push
repnz
jno
rcrl
dec
dec
ret
jns
push
pop
xor
fwait
punpckhwd
popa
das
xor
mov
je
and
int3
roll
into
push
sbb
das
ja
aad
xor
dec
dec
and
int3
inc
xor
jns
and
sar
cmc
dec
mov
add
fs
das
inc
and
ds
sbb
push
xchg
sub
cmp
jmp
or
mov
call
push
sub
shlb
dec
int
sbb
mov
sarb
test
inc
mov
stos
inc
into
sbb
cli
inc
rcr
imul
pushf
sbb
sub
rcl
cmc
jnp
sbb
data16
xor
xchg
rclb
test
inc
xchg
out
mov
pop
push
divl
jno
or
push
insl
push
jle
push
xchg
in
sub
xor
insb
xlat
test
das
fisubl
lods
jecxz
add
mov
rcl
adc
mov
inc
insb
pop
dec
sub
jne
xchg
adc
jmp
out
inc
lods
aam
cltd
dec
sub
pop
mov
mov
pop
jns
mov
cmp
stc
sbb
jecxz
les
mov
stc
mov
popa
loopne
push
std
loope
lods
divb
fldl
ret
in
stos
jmp
nop
ret
insl
push
arpl
add
js
ret
outsb
push
xchg
stos
push
add
inc
and
je
dec
push
dec
adc
in
repnz
push
jae
xchg
daa
notl
dec
outsl
je
inc
jbe
adc
jp
mov
movsb
jg
sub
cmp
push
mov
dec
jg
lcall
sahf
jmp
pop
out
sub
pop
or
or
cli
test
ljmp
jb
or
mov
inc
mov
pop
fidivl
add
push
jmp
adc
out
jecxz
test
or
gs
outsb
mov
xor
mov
sub
inc
xor
sbbl
xor
jecxz
loopne
int3
data16
mov
sub
hlt
adcl
aad
cmovbe
test
rcl
ds
and
movsl
popf
sbb
movsl
push
enter
out
xor
inc
icebp
lods
in
movsb
lret
dec
or
lea
mov
out
pop
pop
xor
inc
mov
dec
inc
jno
mov
ja
jbe
pop
inc
and
dec
std
or
mov
or
pop
xor
jbe
mov
jb
iret
add
mov
xchg
imul
push
dec
dec
pop
pop
pop
js
in
lret
or
xchg
pop
push
xchg
push
sub
faddp
sbb
mov
cmc
jp
sbb
jp
adc
scas
push
sub
out
sbb
in
rcrl
cltd
jp
pop
and
aam
cmova
fucomip
int
insl
nop
xchg
in
sub
cld
cmpsl
inc
adc
or
lret
imul
sub
lock
adc
int3
or
and
les
js
push
lret
pop
fwait
push
add
ljmp
ret
cmp
ss
sub
not
jae
stc
in
movsb
push
cmp
push
mov
cmpsl
outsb
pop
push
xchg
mov
mov
push
mov
out
gs
jecxz
adc
pop
loop
cmpsb
imul
insb
sub
punpckhbw
jecxz
movl
ja,pn
bound
loop
inc
push
adc
jae
pop
cld
pusha
xorl
adc
pop
xor
hlt
jg
inc
xchg
mov
jp
inc
mov
ljmp
sub
loope
ss
mov
xchg
in
xlat
andl
push
xor
pop
icebp
push
inc
insb
jl
fisubl
andl
sub
pop
sub
mov
and
push
inc
mov
pusha
jecxz
dec
dec
jge
jno
sbb
repz
fst
lds
xchg
mov
fsubrl
pop
shlb
fwait
and
out
mov
pusha
add
cld
inc
inc
xchg
sbb
or
sbb
clc
lcall
adc
sbb
jae
subb
jno
adc
xchg
inc
inc
ss
dec
mov
sub
lods
mov
cld
sub
ja,pt
and
jge
vmulss
pop
shrl
mov
push
dec
out
pop
mov
in
in
sbb
ss
push
mov
push
push
cmp
ss
and
jae
sbbl
mov
and
ret
xchg
pop
and
xchg
fildll
add
das
dec
fs
pop
mov
daa
and
stc
push
push
dec
mov
lods
xchg
sbb
pop
pop
mov
movsb
insl
jg
ss
lret
shll
push
addb
cmpl
shl
xor
sbb
xor
mov
pop
orb
mov
jg
sub
and
jl
out
pop
in
ss
or
mov
adc
fcomp
xor
sub
pop
push
movsl
scas
cld
imul
in
mov
nop
jmp
inc
mov
cmp
push
cwtl
and
jne
mov
popa
sbb
ja
test
mov
cmpsl
push
adc
cmp
pop
mov
xorb
xor
pop
mov
fbstp
popf
pop
xchg
rorb
cld
test
pop
jno,pn
loope
xor
cmp
daa
and
push
arpl
dec
jg
mov
popa
mov
lret
es
daa
not
out
insl
add
ds
jl
cmc
imul
fcomps
int3
push
int3
mov
mov
int
xor
arpl
add
test
pushf
pop
xor
pushf
sub
cs
ficomps
pop
call
mov
mov
std
ss
jno
mov
cmpsl
and
test
call
test
mov
mov
sub
pop
data16
push
adc
insb
mov
faddl
mov
mov
xchg
xor
sbb
lcall
hlt
xlat
inc
xchg
push
xchg
loopne
xor
fistpl
inc
fwait
jno
fwait
lret
cmpsb
fcoms
das
mov
push
adc
mov
cmpsl
sbb
iret
popa
xchg
fucomi
xchg
pushl
test
fldt
test
dec
insb
mov
fildll
loopne
jl
mov
fimuls
popa
or
mov
fdivrs
inc
xchg
pusha
mov
ljmp
icebp
ss
jl
inc
jge
int3
add
shlb
mov
les
sarl
sahf
jno
jl
cld
or
adc
adc
lahf
push
push
ds
inc
lret
mov
out
cli
cwtl
mov
das
addr16
adc
idivl
repz
fwait
pusha
jecxz
jns
xchg
mov
loop
iret
ret
mov
push
cmp
aaa
insb
lret
out
or
inc
aad
dec
fistpl
movsb
fadds
push
jne
in
rcl
cmp
xlat
or
movsl
jb
ror
and
std
mov
lcall
movsb
jb
iret
add
std
cld
xlat
cmp
aas
insl
lods
jae
cmp
lcall
jmp
or
xchg
out
mov
mov
and
xor
dec
and
mov
xor
xchg
aas
xchg
popa
icebp
addr16
dec
fsts
pushf
mov
xchg
rolb
push
ds
sub
fucomi
adc
addb
retw
mov
push
dec
loopne
repz
sbb
xchg
jo
enter
dec
mov
and
out
sbbl
mov
stc
lret
xchg
mov
loopne
in
pop
xchg
lcall
mov
out
add
outsl
ljmp
movsl
aaa
push
jbe
ficomps
pop
testl
dec
pop
sbb
dec
jne
pop
mov
daa
xor
fwait
test
das
das
int3
pusha
sub
jb
dec
rorl
xchg
push
xor
push
stc
dec
sub
sbb
dec
std
jae
pop
mov
inc
loope
inc
mov
cmp
lock
insb
adc
jb
or
jecxz
xchg
push
pop
cs
sub
xchg
mov
xor
xor
in
dec
loopne
fld
bound
aaa
subl
lret
ret
adc
frstor
sub
shll
int3
ja
cmp
jae
nop
jp
inc
aas
mov
insb
jle
shr
xor
jbe
in
add
pop
mov
iret
stos
lret
xlat
ret
xchg
mov
mov
ret
xor
insb
hlt
mov
int
dec
mov
and
jl
clc
test
jo
mov
push
sti
sbb
sbb
mov
cs
push
pop
adc
jo
inc
xchg
stos
scas
mov
dec
pop
test
mov
xchg
jecxz
dec
gs
lea
es
frstor
adc
lock
pop
arpl
lahf
mov
push
mov
push
jae
int3
aad
adc
out
dec
mov
inc
xchg
shrl
sbb
leave
fcompl
imul
jle
ret
push
inc
imul
lcall
pop
enter
cld
sbb
adc
cmc
dec
sahf
lret
sbb
dec
xchg
pushf
int3
jg
insl
gs
inc
fwait
stc
shrl
push
test
mov
iret
push
stos
testb
pop
inc
and
jno
push
or
mov
in
fsubr
jne
adc
inc
cmpsb
sbbb
fldcw
fidivrs
inc
sbb
adc
dec
jmp
or
dec
xchg
out
or
mov
inc
push
aas
jo
loop
enter
or
cmp
adc
fdivp
andl
sbb
out
xchg
cmp
cmp
xorl
mov
or
add
clc
push
and
rclb
sub
sub
push
adc
mov
scas
and
xchg
call
lret
or
aaa
inc
out
fsubrl
add
repz
mov
movsb
arpl
sub
shll
ds
pop
int
adc
jnp
stc
adc
outsl
and
aas
mov
mov
dec
jne
imul
sub
pusha
addr16
pop
or
lods
cltd
cmpsb
push
icebp
ljmp
mov
inc
jmp
sbb
xor
ret
dec
lret
lahf
ds
ljmp
aam
jbe
data16
adc
or
xchg
sub
jae
mov
mov
add
inc
ret
cmp
mov
adcb
xchg
mov
leave
xor
stos
and
inc
leave
lods
xor
mov
xchg
jns
push
mov
ret
and
push
pop
lret
and
inc
pusha
stos
sub
cwtl
fs
add
dec
push
or
test
in
push
addr16
add
and
in
dec
mov
insl
fsts
int
xorl
int
imul
imul
xchg
adc
mov
cli
add
sarb
sub
jbe
adc
test
insb
dec
cmpb
rcrl
stos
stos
sbb
mov
dec
into
jmp
and
add
lds
ror
mov
or
jge
dec
es
fmuls
dec
xchg
push
sbb
shll
jle
push
lods
push
lock
aaa
adc
adc
in
fwait
call
push
pop
adc
inc
mov
push
fwait
jl
dec
repnz
pusha
pop
xor
int
jae
inc
xor
adc
sub
out
sub
test
mov
xor
lahf
jmp
out
inc
std
xchg
dec
mov
jns
lods
push
ss
jle
iret
fnstsw
pop
sub
xchg
add
imul
out
out
call
adcl
int
push
sub
jnp
into
fimuls
andb
pop
icebp
xchg
xchg
fs
adc
jl
or
or
cs
mov
sub
out
lods
imull
sub
push
aad
adc
mov
push
pop
movsb
rol
es
cld
xor
repnz
aaa
cmp
mov
push
iret
pop
cs
imulb
jmp
lahf
clc
lds
cmp
imul
cli
bound
push
adc
push
mov
adc
mov
push
mov
insb
push
jl
mov
sahf
aas
inc
shll
mov
mov
out
shrl
mov
roll
dec
add
hlt
flds
or
hlt
movsl
loop
mov
and
xor
or
mov
or
repnz
add
dec
outsb
push
rorl
pop
jnp
iret
push
inc
das
inc
andb
jno
dec
lahf
xor
sub
int
int
jmp
sbb
mull
aas
or
jge
fidivrl
ret
int
pop
xchg
sahf
mov
lock
push
inc
inc
insb
push
push
ja
pop
aad
addl
mov
data16
sub
aaa
jns
inc
mov
aaa
mov
pop
fdivl
punpcklwd
mov
push
xorl
cmp
lahf
fwait
cmp
das
insb
xor
pop
xchg
adc
insb
push
ret
mov
in
inc
fs
sti
das
sbb
jnp
pushf
cmp
movsl
sbb
incb
aas
popa
imul
xor
dec
scas
xorps
add
fidivl
out
xchg
jg
push
js
fimull
out
sub
dec
movsb
sub
xchg
cmp
jecxz
iret
mov
mov
scas
pusha
push
movsb
ja
xorb
pop
jno
fistps
bound
and
jae
movsl
clc
btc
cli
outsl
pusha
dec
cli
stos
xchg
push
jnp
sahf
pop
mov
jle
and
iret
xor
sbb
cmp
sbb
adc
xor
dec
pop
jecxz
lcall
adc
jmp
cltd
push
stos
xchg
in
jl
inc
out
mov
mul
and
xchg
mov
adc
cmp
pop
inc
mov
mov
sub
lahf
or
movsb
insl
cmp
sbb
aam
cmpsb
arpl
or
sahf
xchg
mov
aaa
push
mov
pop
rep
inc
test
dec
sub
dec
movsb
push
fldenv
jecxz
testb
shrb
push
pusha
mov
stos
and
cmp
rol
cwtl
rorb
xchg
sbb
je
dec
jne
in
pop
push
mov
mov
dec
hlt
cmpl
inc
orl
addr16
adcl
pop
add
adc
int
sub
add
cmpsl
fdivp
add
and
add
sti
jb
arpl
dec
aaa
outsl
fcomps
stc
cmpsb
push
and
push
cmp
jb
adc
dec
xlat
popf
dec
in
es
test
xchg
aam
mov
cmpl
add
cmc
out
hlt
pop
jg
ds
iret
fistps
in
push
xchg
and
scas
clc
jecxz
adc
aad
loope
lahf
movsb
jo
repz
adc
in
movsl
call
clc
fisttps
fiaddl
jbe
mov
lods
pop
sbb
test
push
scas
xor
push
sbb
cmp
pop
mov
test
sarb
lock
jnp
add
adc
cmp
mov
ret
inc
inc
inc
pop
outsb
sub
nop
xor
pop
js
pushf
shrl
icebp
nop
fists
clc
iret
scas
push
jae
xchg
dec
imull
mov
lods
sub
inc
into
out
popf
scas
cmc
mov
pop
test
or
jns
cmp
mov
mov
and
xlat
lods
test
cmp
xchg
sbb
and
jbe
ja
mov
xchg
mov
cld
loopne
sbb
loope
inc
xchg
pop
rcr
jecxz
push
ds
jl
icebp
mov
mov
add
call
mov
and
xchg
lret
jno
jnp
mov
mov
jge
and
and
add
pop
cmpsl
mov
and
xor
insb
xlat
sahf
push
loopne
loop
pop
orb
stos
int
add
fmul
negl
dec
or
jg
add
repz
adcl
inc
movsl
cmp
out
mov
dec
xchg
rorb
mov
ja
or
add
mov
inc
or
xor
push
push
cmpsl
mov
pop
sbb
das
rcrl
out
dec
cmp
cmp
jmp
and
xchg
movsl
jmp
stos
shll
adc
mov
cmp
mov
xor
sub
pop
inc
adc
sbb
arpl
xchg
pop
test
or
das
cmp
repnz
loope
idivl
repnz
imul
mov
lahf
pop
test
push
pop
bound
mov
cli
xchg
movsb
or
cmpsb
push
dec
fwait
pusha
or
jne
mov
imul
jno
movsl
lret
outsb
inc
dec
or
jo
sbb
in
in
mov
imulb
sbb
cmp
ljmp
test
and
lret
mov
push
jnp
fmulp
dec
jne
mov
popf
jle
pop
icebp
or
mov
out
fs
inc
lahf
in
xchg
not
mov
jne
jp
dec
scas
js
leave
repnz
scas
insb
scas
sti
mov
inc
pop
movsb
mov
stos
adc
push
fistl
data16
pop
in
testl
rclb
outsl
adc
jmp
sub
pop
pushf
rolb
fmuls
cmpsb
jmp
icebp
push
sub
sub
call
sub
push
add
ret
ret
jae
aaa
iret
mov
js
out
mov
and
test
ds
inc
inc
inc
push
pop
lods
sbb
imulb
dec
negl
mov
or
lcall
mov
cmp
fistpll
xchg
dec
punpckhwd
xor
std
jno
and
fwait
xchg
lods
push
loop
lret
add
cli
jbe
and
mov
outsl
scas
inc
or
gs
in
pop
inc
or
fs
dec
pop
sub
lods
mov
mull
ds
push
loope
ljmp
scas
mov
outsb
xchg
fists
mov
xor
icebp
rcrl
mov
sbb
cmpb
les
sub
leave
and
adc
mov
mov
pop
dec
pop
arpl
mov
ret
xor
shll
or
add
cmpsb
add
jae
lcall
leave
jle
jp
jo
in
mov
jne
pop
fiaddl
je
cli
push
push
add
cmpsb
push
loopne
xchg
out
loop
shll
cld
stos
push
pop
xor
xchg
pop
or
cmp
pusha
dec
dec
cmp
mov
sub
stc
xor
lcall
xchg
loopne
mov
xor
adc
xor
call
int
push
jae
in
lods
int
sbb
mov
or
push
ror
scas
loope
arpl
jne
pop
xchg
jb
jno
and
pop
push
cmp
inc
hlt
adc
or
pop
aam
test
outsb
fmull
cmpsl
loopne
mov
je
outsl
nop
cmc
out
je
loopne
popf
jb
clc
pusha
sub
dec
js
add
icebp
inc
sub
mov
push
insb
mov
lcall
push
sbb
jge
ret
adc
jae
sub
jg
fs
push
adc
subb
test
pop
repz
mov
xchg
cmpsb
sbb
cmc
incb
fstps
insl
repnz
sbb
jb
sbb
add
pop
ja
push
out
sub
or
mov
call
cli
scas
orl
imul
xchg
adc
jbe
sub
pusha
fcmovnb
jb
pop
aaa
adc
pop
test
idiv
ret
pop
lcall
fidivrl
xchg
sbb
add
fs
mov
les
xor
pop
sbb
jecxz
hlt
xor
pop
sbb
pop
and
sbb
or
jne
pop
xor
xor
ljmp
adc
lods
je
mov
push
loope
insl
in
and
cmp
and
leave
icebp
ret
rcrb
push
jecxz
pop
lahf
cmp
cwtl
loope
xchg
rcrl
sbb
iret
jl
lea
imul
mov
hlt
popa
jp
jecxz
clc
test
xchg
jb
je
dec
loop
int
cmp
pop
popf
scas
lds
xor
add
stos
push
sub
adc
sub
xchg
jbe
xchg
cmp
xchg
imul
xchg
pop
jmp
iret
mov
sub
dec
mov
aas
sbb
or
add
adc
movsl
out
mov
mov
stos
popl
and
stos
cmc
loop
jecxz
adc
dec
mov
jl
ljmp
push
pop
add
daa
fdivp
jb
lds
fbld
add
enter
jnp
cmpsb
xchg
inc
daa
arpl
inc
es
mov
adc
and
and
test
mov
and
icebp
xchg
or
adc
jb
leave
jecxz
fldenv
jmp
adc
jb
aaa
je
xorl
cmp
cltd
outsl
sbb
imul
aaa
jo
cmpsb
movsb
jle
pop
jmp
rcrb
jo
jo
pusha
and
sub
add
push
je
aaa
aaa
iret
lcall
inc
aam
adc
in
push
test
arpl
mov
dec
test
xchg
lahf
push
leave
scas
add
push
dec
loop
mov
xor
pop
ret
stos
fs
push
js
stos
and
sahf
ret
ret
xchg
mov
mov
sub
pop
fwait
jecxz
shll
push
aad
xchg
cmp
lahf
mov
jae
and
dec
add
lods
lret
ficompl
adc
mov
pushf
sti
adc
mov
inc
ret
or
adc
rcll
mov
sarl
dec
pushf
rclb
lods
xor
or
add
aam
clc
inc
shlb
notb
mov
dec
inc
aaa
mov
push
stos
fsub
cs
jecxz
sub
adc
mov
xabort
adc
imul
jecxz
and
or
aaa
or
cwtl
out
mov
inc
add
pop
push
sub
cmp
sbb
aam
mov
inc
shll
iret
out
shrl
es
and
or
mov
sub
std
loop
xor
pop
xchg
adc
cltd
ret
xor
rorb
adc
add
xor
aad
rorl
xor
inc
lahf
or
or
stc
mov
adc
dec
ja
mov
xchg
fs
fmul
daa
ss
push
jno
xchg
push
mov
cmp
popf
fsubs
push
bound
push
iret
adc
cmp
in
cwtl
cmp
xchg
out
lahf
push
pop
daa
mov
mov
or
fwait
mov
ss
adc
js
pop
adc
decl
aad
pop
fs
insl
into
push
arpl
ret
cmc
fs
mov
lret
mov
mov
jmp
dec
and
icebp
mov
sub
daa
xor
xchg
into
inc
fadd
xor
push
imul
out
cld
outsl
mov
fstps
cltd
add
insb
into
mov
xor
sub
mov
adc
and
pop
les
mov
sbb
cmp
cli
sub
mov
push
lods
xlat
js
cltd
push
sub
cwtl
lahf
cli
inc
sarb
adc
sahf
enterw
ja
xor
outsl
sbb
mov
pop
fadds
sbb
out
cmp
xlat
add
add
sahf
in
xchg
in
into
lcall
or
std
mov
push
stos
cmp
sbb
pusha
mov
fldcw
loope
addr16
add
adc
outsb
pusha
cmp
data16
loop
push
and
add
aam
jecxz
test
js
push
push
lds
or
test
mov
xchg
mov
inc
test
add
sti
out
or
aaa
mov
or
orb
and
shll
inc
jl
sbb
fmuls
xor
lcall
inc
cmp
mov
movb
lds
ljmp
test
sbb
iret
push
in
push
ja
xchg
mov
jg
cmc
pushw
jmp
daa
push
cs
xlat
or
stos
subb
sahf
in
inc
cmpsb
data16
loope
xor
in
pop
add
insb
mov
jne,pn
jg
sbb
mov
xor
loop
lods
into
pop
leave
jl
cs
cmp
pushf
push
add
pop
addr16
aaa
mov
dec
fucom
shrl
cmp
insb
push
adc
xchg
popf
push
xor
adc
jo
xchg
rcrb
in
mov
lds
dec
loope
and
movsb
xchg
pop
insl
mov
sbb
daa
add
data16
mov
in
dec
clc
movsl
xor
mov
sar
pop
dec
xchg
cs
mov
jmp
scas
mov
clc
mov
shr
xchg
iret
xor
out
add
fidivrs
clc
in
jmp
test
xchg
jb
lret
mov
lret
enter
bound
les
lret
push
mov
cmp
mov
sbb
inc
sbb
test
mov
mov
jecxz
stos
jnp
movsb
mov
xor
iret
push
pop
les
ret
inc
test
xor
pop
outsb
test
stos
cmc
jns
jbe
mulb
push
pop
inc
dec
mov
jge
movsl
fsubs
cmp
mov
out
unpckhps
jl
lods
sbb
and
enter
xor
sub
xchg
fmull
stc
push
and
jl
sahf
mov
inc
jle
jae
fidivl
adc
adc
jp
fsts
add
std
lods
divb
jno
pop
scas
mov
jo
lods
add
push
push
mov
xor
fcomps
xchg
mov
xchg
push
add
jle
fiadds
cli
in
fwait
sub
jbe
in
push
mov
shrl
jo
ds
jbe
add
xchg
test
xlat
xor
into
mov
out
lret
push
adc
inc
fs
inc
in
call
cs
pop
inc
test
out
cld
inc
loopne
sbb
add
shl
pop
mov
cld
pop
pop
push
aas
aad
inc
lea
push
shlb
push
and
test
inc
arpl
push
push
outsb
mov
enter
push
lock
mov
push
and
adc
xor
push
iret
cmpsl
popa
repnz
push
fnstcw
fbstp
xor
test
test
push
inc
out
sbb
xchg
bnd
fildl
adc
sbb
jp
pop
or
mov
in
jno
out
jle
adc
sbb
mov
add
jle
insl
xchg
stos
pop
or
out
daa
cli
or
or
arpl
sub
mov
mov
xor
adc
jno
push
ss
jne
cmp
std
scas
mov
ljmp
xchg
mov
inc
cld
or
mov
mov
xor
mov
out
dec
jg
sub
sbb
xchg
fidivl
mov
xlat
in
outsl
jg
dec
mov
cmpsb
pop
lcall
scas
push
lea
pop
ds
pop
adc
dec
popa
ret
push
mov
arpl
fcompl
cmp
sbb
push
push
popa
or
xchg
add
aaa
push
dec
stos
sbb
outsl
or
ljmp
lret
cmp
inc
cmpsl
fdivrp
negb
out
aaa
sub
sub
cld
adc
in
xchg
imul
mov
mov
xchg
sar
lods
orl
and
mov
mov
adc
ljmp
add
ja
in
outsl
lods
add
sbb
pop
pop
mov
mov
int
in
xchg
sbb
push
inc
pop
push
aam
mov
ja
popf
hlt
sbb
pop
mov
mov
shl
ret
mov
jge
in
push
push
ret
or
mov
jae
addl
icebp
pop
shll
cmp
icebp
or
pop
mov
mov
mov
inc
stc
rorl
push
adc
add
in
pop
lds
xchg
in
pop
push
movsl
push
ret
inc
icebp
push
or
out
stos
push
jge
insl
icebp
and
icebp
flds
mov
inc
dec
xchg
lret
or
xor
inc
push
les
inc
insl
sub
incb
inc
lahf
mov
pop
stos
movsb
mov
push
icebp
cwtl
mov
cmp
lret
inc
mov
dec
je
insl
call
sub
and
add
int
xor
jo
and
inc
lahf
sub
push
cld
fbstp
mov
jae
gs
ljmp
sbb
lea
je
cltd
and
ja
and
into
and
or
fwait
mov
cmp
mov
inc
in
out
jg
xor
int
and
sbb
int
clc
jne
repnz
rorb
lret
add
das
jo
jnp
mov
cmp
xchg
mov
pop
je
shl
jge
mov
push
push
std
mov
frstor
adc
inc
js
sub
sbb
push
mov
pop
fildll
bound
xor
cld
pushf
jge
dec
mov
cmpsb
fisttpll
bound
mov
mov
loope
inc
cli
fmull
xchg
test
lds
cmp
icebp
mov
mov
fadds
cmp
ret
push
orl
cmc
xlat
jp
push
inc
call
mov
shr
pop
mov
mov
test
xchg
dec
or
inc
cmc
lahf
ljmp
fdiv
push
addr16
nop
inc
loopne
ss
cmp
mov
imul
ss
and
fistl
call
xchg
mov
js
mov
jge
xor
mov
adc
aam
and
loopne
out
or
clc
or
lret
xor
test
pop
xor
leave
movsl
outsl
adc
push
pop
lods
rcrb
cmp
cmp
pop
or
cmp
push
or
and
lods
movb
jmp
aas
aaa
jbe
mov
daa
sbb
jae
popl
mov
ret
jb
adc
jge
shrl
pop
sbb
rclb
sbb
push
incl
adc
in
addl
sahf
sub
xor
hlt
sub
and
sub
fwait
add
paddsb
rcrb
xchg
adc
pop
push
inc
enter
mov
decl
test
pop
lods
inc
xchg
andl
arpl
stos
mov
scas
xor
push
in
push
lret
jnp
xchg
lret
or
lcall
jmp
enter
add
fucom
jecxz
xchg
scas
leave
shll
cli
adc
or
iret
xor
xchg
mov
int3
push
add
jp
mov
xchg
mov
leave
cmc
sub
cs
dec
and
mov
into
sub
fwait
mov
inc
mov
lods
cld
inc
cmp
jbe
cmpsb
pop
inc
xor
les
sbb
push
jl
sub
mov
or
sub
adc
or
mov
pop
pop
pop
sti
xor
mov
rcrb
xor
ljmp
lret
dec
frstor
mov
mov
xchg
sbb
jno
std
andb
adc
popf
test
mov
cmp
mov
inc
pushf
das
fisttps
jno
cld
inc
shrb
ljmp
jne
notl
mov
outsl
or
or
push
aaa
pop
xor
adc
jno
shll
adc
jle
sbb
xor
pop
icebp
mov
jmp
xchg
int3
mov
idiv
shrl
pop
and
out
shrl
aas
push
aaa
mov
jbe
mov
hlt
ja
cld
mov
or
shrb
mov
mov
cmpsl
jp
jo
mov
mov
insl
or
push
add
push
inc
insb
pop
pushf
cli
sbb
dec
insl
call
jle
jnp
les
add
dec
sarb
gs
mov
pop
push
rorb
jno
or
inc
gs
lahf
add
sub
out
add
push
outsl
cmpsl
cld
sub
mov
rorl
fidivrs
int3
and
or
dec
test
jae
test
adc
push
iret
jg
call
jecxz
out
dec
xchg
sub
rcrb
push
dec
mov
das
xlat
push
sbb
test
sub
icebp
or
dec
xchg
ljmp
inc
mov
push
mov
insb
stos
test
cmpb
fldl
pushf
shrb
xor
popa
lods
push
cmpsb
testl
mov
xchg
and
int
stos
je
iret
scas
cmc
stos
xor
shlb
sub
int
imul
sbbl
std
lods
xchg
cmp
cmc
jo
xchg
push
int3
sbb
mov
sbb
sar
test
mov
stc
mov
movsb
cmp
pop
fidivrs
dec
xor
fldl
jb
or
enter
push
cmc
scas
push
push
xor
mov
mov
xor
mov
jne
int
pop
push
mov
xor
rcrl
js
leave
lcall
subl
outsb
jl
imul
out
mov
xlat
xorl
cmp
popa
rcll
pop
stos
lods
adc
jne
cmp
xchg
testl
ja
push
ja
in
jmp
test
sub
inc
bound
aam
jp
arpl
aaa
push
xchg
or
adc
and
imul
repz
jecxz
bound
jno
or
adc
cmc
push
fcomps
mov
pop
dec
and
lods
cmpsb
pop
sub
sahf
cwtl
dec
test
movsb
lidtl
xor
push
mov
push
pop
and
mov
sbb
sbb
roll
cmc
inc
clc
push
pop
iret
stos
inc
ss
xchg
ss
adc
xchg
lods
push
mov
or
sbb
sbb
and
lret
rol
mov
out
xchg
push
sahf
lret
push
jb
jge
mov
outsb
outsb
cmc
popa
xchg
pop
sbb
scas
popf
push
rorl
push
xor
sub
push
push
push
dec
js
sub
jecxz
jo
nop
inc
loopne
sub
mov
divps
popf
jg
sbb
mov
jne
je
sub
cmp
cmp
popa
scas
xor
mov
into
repz
ljmp
push
dec
or
pop
jae
sub
scas
mov
and
jb
dec
mov
fstl
out
fwait
imul
testb
sub
ret
loop
mov
pop
imul
dec
fdivrs
es
movsb
jae
ss
lock
pop
insl
sbb
in
inc
lds
imul
lahf
lods
adc
sbb
and
pop
fnclex
or
mov
stc
lret
add
xor
jne
mov
xchg
ret
sub
mov
xor
mov
cmp
jo
outsb
out
push
sub
sbb
fst
aad
fnstcw
mov
ret
and
insl
mov
outsb
push
bound
inc
push
jmp
mov
pusha
mov
in
nop
ficompl
hlt
or
cmp
movsl
fnsave
mov
sbb
mov
loope
aam
addr16
lock
out
lret
mov
xor
aad
add
decb
jge
cli
out
inc
mov
gs
and
mov
mov
pop
sbb
sbb
push
cmp
orb
dec
mov
mov
bound
les
xchg
xchg
test
fdivr
repnz
insl
lods
mov
and
adc
adc
iret
js
dec
xchg
cmp
aam
test
cltd
leave
and
pop
lret
cmp
mulb
pop
shlb
je
movsl
nop
ds
cwtl
test
xchg
cs
mov
xchg
sub
dec
sti
and
and
rolb
xchg
cltd
sti
pop
adc
repz
mov
cmp
fmull
notl
or
push
jno
stc
mov
cmc
test
jge
mov
sub
pop
adc
dec
addl
push
and
sub
movsb
mov
cltd
xchg
mov
je
mov
aam
dec
shl
jl
fcoms
repnz
push
cmp
jecxz
mov
ret
imul
jo
bound
in
inc
xchg
xchg
insb
cmpsb
in
cld
sub
fcmovnb
rcrl
scas
inc
inc
xchg
in
adc
xchg
push
gs
mov
andb
scas
jb
test
rorl
inc
cmp
sbb
xchg
hlt
pop
int
dec
lds
ret
out
xchg
push
cmp
aaa
mov
sbb
mov
and
jbe
xor
sub
adc
lea
adc
xlat
sbb
negb
add
into
push
stos
pop
dec
sub
aaa
pop
sub
imul
fstl
xchg
jl
sub
cltd
mov
push
repnz
mov
dec
stc
mov
cmpsl
jns
push
sbb
mov
stc
nop
fcomi
rcll
cld
test
cmp
loope
mov
movsl
out
jbe
sbb
cwtl
mov
sbb
je
lds
cld
add
xchg
mov
fadd
mov
bound
sbb
xchg
cmp
push
insl
push
pusha
sbb
fbstp
or
adc
mov
shlb
jge
mov
pusha
nop
xchg
jecxz
repz
mov
in
jae
lret
cld
add
lcall
out
push
push
sti
xor
sub
mov
and
notl
adc
in
mov
fisttpl
lea
inc
jmp
popf
push
add
sub
sub
mov
or
inc
loope
jmp
cmp
and
push
jno
cmp
xchg
dec
mov
xchg
shrl
xchg
sub
pop
add
mov
sbb
sbb
or
cmc
testb
or
adc
out
mov
jg
insl
inc
sub
push
xor
stc
lcall
in
cmpl
test
fwait
outsb
arpl
rep
add
inc
sub
fs
cltd
sbb
push
jae
scas
push
adc
dec
mov
add
jne
clc
add
pop
ja
test
cmp
push
xor
out
scas
hlt
or
out
pop
cmp
cmp
cmc
and
dec
sbb
cwtl
aad
test
adc
hlt
in
ret
sub
push
jecxz
jno
loopne
loop
movsl
aam
or
adc
outsb
or
dec
xor
jbe
nopl
pop
loop
adc
sub
dec
dec
lret
ljmp
push
mov
insb
in
pop
nop
sub
pushf
jmp
loopne
adc
sbb
fldl
mov
out
nop
mov
clc
sbb
movl
rcll
shll
mov
scas
in
hlt
fisubl
addr16
jge
ret
fsubs
insl
dec
jg
jns
sub
out
cwtl
push
loope
jns
arpl
cltd
repnz
add
aad
lret
ljmp
cmp
js
outsb
xor
movsl
ljmp
popa
in
mov
push
scas
add
jae
gs
imul
into
push
bound
fsubrs
ret
xor
loopne
sar
xor
mov
clc
movsl
lods
jg
inc
sbb
clc
inc
adc
mov
jmp
in
movsb
movsl
sbb
and
lret
adc
push
xchg
in
jns
dec
inc
cmp
mov
sbb
or
imul
std
mov
mov
imul
or
stos
jp
mov
pop
mov
enter
daa
pusha
ret
in
outsb
ret
cmp
mov
dec
aam
sub
jns
xor
cmpsb
es
pop
jecxz
enter
testl
int
sahf
inc
dec
ja
jmp
jg
sbb
add
cmp
sub
mov
sbbb
movsl
cmp
aaa
test
add
sbbb
cld
mov
or
sbb
and
scas
pop
in
jns
mov
push
pop
in
daa
addr16
outsl
gs
xlat
cli
mov
stc
incl
lret
cmp
mov
fwait
sbb
loope
clc
fmul
pop
xor
sub
bound
xor
sbb
mov
xchg
sub
movsb
and
and
in
das
movsl
cwtl
repz
mov
mov
lods
hlt
dec
xor
lock
dec
rorb
xor
cmp
xchg
movb
jmp
in
adc
pusha
pop
xchg
daa
test
mov
jae
test
cs
mov
pop
int
je
sub
je
fldl
jns
call
stos
mov
jnp
and
pop
pop
das
ds
pop
mov
mov
dec
sbb
mov
lock
push
ss
loope
inc
xor
test
ror
test
push
lds
movsl
jecxz
pusha
xchg
pop
in
pusha
shl
lahf
cmp
adc
sub
ljmp
loop
insl
loope
les
sbb
popa
lods
dec
or
loop
sahf
xor
ret
ffree
imul
cmp
cmp
mov
in
in
addr16
mov
pop
inc
pushf
cmp
lcall
xor
cmp
push
jl
inc
pop
dec
xchg
xor
pop
inc
or
clc
sub
push
fidivs
jo
xchg
fcomi
cld
ret
dec
dec
pushf
mov
jo
movsb
aaa
add
rcll
lods
adc
out
push
push
shll
lods
push
mov
xor
js
cltd
in
in
das
jle
push
or
inc
cmp
mov
arpl
and
scas
push
sbb
int3
dec
sub
in
xor
cli
mov
mov
mov
lods
insl
stos
sbb
pop
sarb
pushf
lods
dec
dec
sub
push
push
hlt
mov
popf
pop
mov
push
shl
mov
aam
outsb
pop
add
int3
ds
loopne
jmp
cmp
cmp
aad
sbb
pop
inc
sarl
popf
out
adc
pop
in
dec
mov
cwtl
dec
inc
mov
pop
lret
mov
pop
push
shr
std
mov
jmp
loopne
sbb
add
add
gs
pop
bnd
sbb
inc
jne
lods
roll
push
cli
dec
ficoml
jo
ja
cmpsl
sub
lahf
adc
xor
and
test
loope
and
sarl
jmp
push
loope
clc
mov
xchg
adc
xor
ds
jmp
out
mov
ficomps
movsl
cwtl
outsl
mov
and
dec
push
sub
and
xor
imul
pop
popf
cmp
movsl
rolb
mov
mul
enter
out
imull
xchg
sub
das
out
insb
mov
xor
dec
mov
pop
lock
and
mov
sub
add
mov
jmp
fabs
and
sbb
and
das
addr16
adc
lock
xor
lods
popf
add
scas
popa
sub
flds
or
cld
cmp
cmp
jle
ret
or
arpl
fcomi
outsb
pop
and
das
inc
icebp
inc
mov
sub
ffree
es
and
sahf
push
iret
leave
sbb
push
xchg
push
dec
xchg
jno
jno
push
into
outsb
dec
pop
jb
xor
adc
jae
es
push
sbb
sub
sub
sbb
sahf
test
mov
cmpsb
fldenv
xor
inc
inc
adc
inc
adc
test
adc
mov
adc
add
addr16
xorb
xor
lahf
cmp
push
out
test
xchg
or
lock
sbb
test
mov
out
insl
jecxz
ret
xor
pop
pop
shl
pop
jg
jmp
aaa
scas
pop
into
mov
dec
imul
mov
inc
jmp
push
xor
sub
mov
xor
lods
adc
mov
das
push
push
xor
ljmp
sub
and
cmp
adc
jb
sub
in
testl
lcall
push
sbb
sbb
adcb
syscall
sub
push
push
cld
hlt
sti
in
jb
leave
sbb
sahf
int
stos
mov
pop
fcoml
inc
add
xchg
or
pop
sbb
mov
cmp
xchg
and
push
lea
mov
cmp
jle
dec
sbb
in
cs
ljmp
cmpsl
aaa
nop
fnsave
aaa
sub
ds
aas
xor
and
repnz
incb
cs
ficompl
and
xor
sbb
add
push
and
fsqrt
add
in
cmc
mov
lret
lock
enter
sub
cmp
ja
scas
fsin
xchg
cs
xchg
dec
mov
fistpll
scas
mov
mov
scas
and
inc
loop
fbstp
adc
test
fadd
pop
pop
cmp
jle
outsl
or
std
test
in
sub
mov
pop
jmp
mov
lods
jecxz
lds
pop
int
loop
cmpsl
std
es
jle
inc
push
leave
mov
inc
loop
dec
popa
insl
lret
push
out
jmp
out
push
jo
pop
jo
inc
lods
xor
pop
dec
adc
arpl
push
addr16
aaa
lcall
push
fstpl
iret
pop
add
xchg
pop
jp
sbb
sbb
xchg
mov
jnp
dec
jbe
leave
loope
pop
shll
movsb
jbe
gs
jo
leave
jmp
add
aad
shll
mov
notl
daa
mov
fwait
scas
jl
cmp
inc
jmp
mov
xchg
add
rcr
movsb
xlat
push
adc
hlt
filds
jne
sub
insl
pop
mov
xchg
pop
imul
aad
in
mov
out
sub
push
in
push
cmp
roll
sub
jae
iret
cwtl
cwtl
jno
sbb
cmpsb
jo
inc
or
push
cmp
or
mov
fstpt
jge
mov
imul
cmp
xor
cwtl
ss
cmp
inc
mov
xchg
incb
roll
sub
mov
sbb
xchg
and
push
js
sbb
pop
mov
fnstcw
cmpsb
pop
repz
jno
cwtl
imul
scas
cmpsl
fsubr
stos
ja
mov
adc
jmp
xor
popf
push
inc
jl
mov
daa
into
push
ljmp
ret
jmp
cmp
sub
mov
xor
sahf
pusha
mov
jle,pn
ret
mov
insb
cmpsl
inc
or
loope
shlb
daa
mov
adc
xor
mov
aad
sub
fwait
call
pop
lret
fisubrl
xchg
adc
pop
test
mov
xlat
add
sub
jns
cmp
inc
dec
cld
inc
cmp
pusha
cmp
add
push
ss
push
mov
cld
pushf
xchg
out
sahf
jbe
mov
loopne
decl
cmc
sbb
faddl
pop
test
lret
dec
dec
arpl
out
sub
cmp
inc
int
mov
push
and
adc
fs
pop
pop
icebp
dec
or
cld
pop
push
in
mov
cmp
pop
stos
jle
cmc
jbe
pop
or
mov
and
int
in
nop
insl
cld
push
les
mov
sub
js
xchg
loope
pusha
push
aas
out
nop
adc
jns
loopne
sbb
pop
adc
pushl
add
inc
lds
leave
and
jbe
cwtl
or
stos
mov
push
sarb
daa
ret
push
inc
sub
btr
cli
xor
enter
mov
fst
inc
mov
mov
cmp
xor
int
add
jnp
pop
xor
sbb
loope
iret
push
hlt
popa
bound
pop
pop
ljmp
ficomps
arpl
dec
arpl
push
das
rclb
cmpsl
push
cs
adc
jle
cmp
fs
pop
cwtl
test
adc
xchg
loopne
and
les
or
movsb
jl
xor
sub
or
mov
cmpsl
cwtl
mov
lret
sbb
rcl
add
xorb
and
jae
dec
jge
movsb
adc
xlat
and
mul
pop
enter
fwait
push
sarb
push
div
add
push
test
mov
scas
push
aas
test
cmp
xchg
ljmp
lea
push
enter
xor
stc
mov
andb
in
adc
mov
sbb
xchg
and
adc
fistl
lea
out
push
movsb
push
push
jp
stos
mov
pop
sbb
jns
lock
push
in
in
jbe
pop
sub
xor
sub
stc
and
idivb
hlt
repnz
sub
mov
mov
mov
cltd
cli
cmp
lret
inc
xor
lret
dec
ficomps
xlat
out
dec
fistpll
dec
jge
nop
add
shl
mov
imulb
cmc
mul
mov
out
jge
int3
scas
push
pop
xlat
mov
hlt
or
into
xlat
das
inc
je
push
pop
adc
jle
repz
jecxz
mov
sbb
pop
fmul
mov
mov
sub
adc
dec
mov
pop
and
enter
dec
jg
xchg
lds
mov
fbld
add
dec
dec
push
jbe
outsl
xor
jg
mov
dec
push
jecxz
mov
divb
adc
dec
fisttpl
fsub
test
mov
stc
lock
je
add
pop
hlt
dec
adc
jp
cli
push
sub
es
cmpsl
jns
vmread
mov
and
test
sub
imul
stos
jns
testb
js
mov
paddusw
xorl
jbe
jae
cs
push
mov
mov
test
pusha
push
insb
out
cli
ret
fcmovnb
ret
outsb
and
mov
lods
cmp
sbb
mov
int3
or
sbb
ret
push
push
loope
cmpsb
int
cmp
mov
push
fidivrs
insb
mov
ret
sarb
pop
or
inc
push
push
push
mov
and
addr16
out
mov
pop
bound
inc
in
xor
mov
lods
mov
push
ljmp
mov
ds
mov
sub
mov
cmc
dec
inc
hlt
and
push
aaa
xchg
movsl
cmc
cmp
pop
push
in
xchg
push
mov
incl
add
sbbl
and
push
shlb
jo,pt
dec
fadd
das
aam
adc
sub
mov
ja
dec
ja
mov
sbb
sub
xor
cmpsl
stc
enter
jle
pop
mov
leave
testl
adc
insb
mov
adc
vmulss
fdivr
in
add
dec
cwtl
pop
jecxz
adc
in
mov
sti
or
xchg
jecxz
inc
loopne
repnz
sbb
dec
xchg
popf
cmp
pop
mov
stos
or
out
pop
cmp
add
mov
fsub
out
aaa
fcoms
cwtl
mov
jecxz
in
add
xor
fcmovb
pusha
sbb
xor
push
pop
pop
hlt
jae
push
daa
push
dec
cmpsb
aad
sbb
test
mov
das
js
mov
ja
mov
repz
push
jb
adc
fwait
cmpsl
jnp
jae
mov
dec
xor
mov
push
lahf
mov
imul
int3
xlat
mov
inc
sub
leave
je
je
divl
sub
xlat
xor
aas
sbb
sub
call
xchg
mov
mov
in
push
mov
push
shlb
dec
stos
stos
inc
enter
push
push
sbb
jg
mov
jle
std
and
and
hlt
jnp
cmpsl
jle
add
push
pop
fwait
dec
inc
pop
cmp
inc
and
movsl
jg
and
dec
jmp
and
loop
in
call
gs
lods
gs
cmpsl
testb
or
push
aaa
mov
cmpsl
jb
jmp
mov
sbb
and
add
xlat
fstp
jne
adc
xchg
xchg
xchg
mov
inc
xchg
scas
mov
mov
mov
add
cmp
jne
sbb
pop
and
dec
addr16
jbe
subl
jnp
fs
aad
adc
fcmovbe
mov
call
imull
mov
add
jae
insb
inc
jmp
push
enter
fstpl
xor
or
pop
jge
movsb
iret
mov
shrb
pusha
dec
mov
dec
fistpll
out
adc
ljmp
imul
mov
sbb
imul
arpl
stos
dec
mov
sub
scas
ror
mov
cli
pop
clc
int3
mov
test
lds
or
jl
pop
andb
inc
outsl
mov
add
outsb
pop
fstpt
fisttpll
mov
outsb
sbb
clc
push
mov
and
lahf
fwait
ss
cmpsl
jg
add
sbbl
adc
push
out
and
push
movsb
add
out
into
cmp
dec
dec
xchg
ret
add
and
and
xor
mov
in
cwtl
xchg
mov
repz
dec
je
lock
jb
jne
mov
bnd
psubsb
lret
imul
movsl
mov
ja
inc
loope
mov
push
sub
arpl
jnp
mov
daa
or
mov
jb
adcb
or
scas
push
daa
push
pop
mov
jl
je
adc
push
push
mov
into
fwait
push
stc
mov
jb
imul
or
sarl
fisttps
cmp
cmp
test
mov
movhps
loope
jb
and
jbe
fbld
inc
enter
cmc
inc
dec
insb
scas
stos
add
addr16
xchg
int3
int
push
mov
call
cld
repnz
ljmp
push
xchg
test
test
daa
mov
mov
arpl
sarl
inc
mov
pop
stos
cmp
sub
inc
jae
std
shl
or
out
clc
add
inc
xchg
fs
push
xor
jnp
push
rcrl
jb
mov
fsubs
fmul
call
test
clc
cmp
das
test
arpl
into
lret
cld
dec
inc
mov
push
mov
les
or
mov
inc
clc
mov
mov
loop
fcmovne
mov
cmp
sbb
xor
jecxz
jg
mov
loopne
xchg
pop
out
in
test
pop
mov
stc
inc
and
cmpsb
push
sub
add
push
mov
jl
inc
test
sti
mov
fwait
popf
mov
xchg
push
mov
jl
jbe
push
jbe
les
adc
lret
shr
cmp
dec
push
mov
enter
cmp
or
jg
xlat
jb
imul
push
popf
mov
loope
sub
dec
or
inc
cmpsb
ss
mov
adc
xchg
idivl
push
sahf
out
adc
rolb
push
pop
push
pop
sbb
leave
in
lods
sbb
and
sub
xor
cmpb
idivl
dec
or
fimuls
outsl
lods
mov
fisttpl
and
dec
test
arpl
arpl
sahf
jg,pt
repnz
cmp
and
aas
test
les
outsb
popa
mov
addr16
mov
push
jae
or
mov
push
cmpsl
push
mov
out
mov
mov
push
mov
pop
push
mov
imul
loopne
outsl
and
leave
cmp
mov
ret
sub
js
or
jno
jb
mov
fstp
and
mov
ljmp
dec
faddl
popa
sub
xlat
sub
shrb
push
dec
int
cld
pop
jno
dec
inc
add
dec
inc
ret
std
jmp
mov
insb
cmp
cmp
mov
outsb
xchg
stc
int
cmp
jns
nop
pop
das
lods
mov
mov
movsl
pop
sti
cli
stos
rcll
dec
lods
es
popf
je
xchg
insb
rep
sub
adc
pop
mov
stos
pusha
dec
rcrb
xor
dec
pusha
sub
xchg
push
dec
aad
mov
icebp
cmc
addr16
xor
push
scas
mov
adc
rcrl
repz
jg
sub
stc
dec
into
stc
sbb
cmp
add
jnp
adc
repz
aaa
adc
ljmp
rcrl
setae
jg
test
das
test
and
int
ds
mov
dec
mov
jnp
enter
xchg
iret
cmp
lock
scas
sbb
into
mov
dec
mov
ja
push
mov
divl
popf
cmp
into
loop
xor
in
pushf
sbb
mov
lahf
clc
ret
lds
arpl
xchg
mov
sti
test
and
sbb
inc
add
xlat
out
call
cli
sbb
mov
mov
outsl
imull
ficomps
stc
or
pop
push
xchg
mov
into
daa
fisttps
xor
mov
stos
mov
mov
inc
jb
movsb
lods
sbb
mov
jae
push
imul
jbe
dec
ss
sbb
faddl
dec
sub
xchg
fbstp
jnp
call
test
xor
in
cmp
imul
or
fs
or
or
push
cwtl
add
sub
push
push
int
cmp
aas
movsl
pop
dec
add
ss
bound
scas
dec
push
ja
xor
pop
hlt
imul
in
imul
jbe
cmpsl
cmpsl
imul
out
test
or
mov
push
hlt
enter
xor
mov
lcall
movsl
pop
imul
dec
pop
dec
loopne
int3
pop
or
sub
pop
adc
cs
div
leave
data16
push
insb
arpl
dec
inc
cmpsb
jae
jle
in
inc
or
ja
mov
bswap
loope
out
les
leave
outsl
push
xor
dec
fcomip
sub
mov
xchg
xchg
pop
jnp
jbe
inc
sub
dec
aas
push
inc
inc
sti
jge
adc
popa
xchg
pop
cld
or
icebp
int3
push
lahf
les
xlat
mov
stos
mov
jno
pop
nop
sbbl
sti
xor
test
mov
cmpsl
mov
leave
push
ljmp
jecxz
out
or
add
lcall
aaa
cli
sub
lret
aas
sub
inc
outsb
jae
bound
test
jae
inc
paddq
repz
adc
movb
jae
movsl
icebp
ret
sbb
test
lret
leave
jbe
cmpsl
dec
add
xor
pop
scas
cmpsb
filds
movsl
ret
xor
out
sbb
xchg
mov
push
or
les
xor
adc
dec
mov
cmp
mov
movsb
lds
in
pop
cwtl
lret
dec
rcll
imul
in
push
xlat
adc
jbe
cwtl
pop
jecxz
dec
jmp
and
rcr
mov
mov
inc
dec
fidivs
out
add
adcl
add
ret
fsubrs
jge
push
test
mov
jo
aas
adc
pop
xchg
inc
aad
hlt
fisttps
mov
xor
iret
push
int
call
sbb
dec
jne
bound
out
pop
repnz
enter
idivb
push
test
ss
cmp
mov
pop
insl
mov
stc
push
ret
sahf
jne
dec
insl
lret
mov
ljmp
je
add
test
jnp
cs
divl
mov
xor
loope
lret
mov
iret
or
pop
in
sub
stos
add
jp
pop
lcall
fwait
pop
pop
fwait
sbb
inc
push
xchg
mov
fcoms
cs
jecxz
add
xchg
or
nop
aas
and
out
jge
push
add
mov
sub
imul
mov
std
sbbl
add
stos
add
mov
mov
adc
test
xchg
adc
stos
test
ret
xor
test
test
mov
popf
int3
insl
mov
add
fsts
sbb
push
or
inc
add
cmp
push
lcall
lods
dec
mov
insl
jo
jbe
jmp
test
js
or
push
xor
in
dec
cmc
mov
inc
jmp
pusha
in
xor
and
push
adc
lret
cmp
fcomps
push
add
or
rorl
adc
add
or
movsb
push
xor
int3
mov
xchg
int3
daa
ds
jbe
pop
inc
cltd
sbb
pop
mov
sbb
push
jge
data16
mov
jne
cmp
scas
jbe
xchg
push
in
incb
sub
loop
js
inc
aad
cmp
xor
pushf
lahf
dec
popf
in
cli
mov
orl
fwait
lahf
lea
inc
and
mov
jno
or
mov
push
jge
lock
stc
movsl
lea
int
inc
push
cmp
ficompl
inc
mov
les
lahf
xor
stos
in
out
adc
xchg
subl
jp
xchg
push
insb
sahf
mov
inc
jle
push
fwait
js
dec
xor
sarb
scas
xchg
sbb
fstl
adc
std
clc
sbb
fcom
cli
and
addr16
dec
jmp
pop
push
add
mov
add
ret
les
pop
add
cltd
repnz
push
sti
test
or
and
adc
mov
fimull
mov
adc
clc
sbb
neg
mov
enter
ss
sub
jmp
or
jns
aad
adc
xor
aas
push
cmpsl
jl
aas
push
aad
mov
jl
sahf
in
pop
aaa
mov
aaa
push
rcrb
jp
xchg
and
in
or
js
push
out
mov
xor
scas
push
and
mov
jge
and
or
aaa
out
cwtl
add
adc
sub
fcmovnu
lahf
add
push
pop
sarl
addr16
jp
mov
shrl
mov
xchg
push
int
push
lahf
out
xor
scas
andb
or
aad
sub
sub
lods
inc
sbb
out
mov
stc
push
adc
lcall
shlb
ss
inc
hlt
imul
dec
cld
push
sbb
fs
addb
into
mov
add
fistps
repnz
and
data16
sti
cmpsb
movsb
or
push
sar
fdivrl
inc
dec
xor
push
lds
mov
movsl
outsl
push
push
mov
push
js
bound
call
test
movsb
add
dec
into
pop
jge
jg
subl
xchg
loop
mov
fs
push
push
fistps
inc
push
add
dec
lods
outsb
ret
loopne
mov
lcall
pop
mov
lret
shll
jae
jp
pop
xchg
mov
mov
add
ja
enter
add
test
lock
movl
dec
pop
faddl
jmp
stos
test
insb
flds
inc
sbb
sub
push
test
xor
pushf
scas
mov
leave
sbb
sub
ret
test
cmpsb
notb
repz
pop
sbb
movsb
call
cli
sub
add
lret
mov
sti
leave
mov
sbb
test
sti
mov
pushf
outsl
aam
int3
mov
jnp
cmp
adc
inc
or
mov
mov
sub
aam
mov
fcmovnb
jp
ficoms
xchg
loope
mov
or
sub
mov
imul
jecxz
mov
mov
fstps
movsb
cltd
shll
ss
add
imul
imul
add
and
push
das
repnz
call
jo
ds
push
pop
lods
lcall
dec
xchg
stc
mov
pop
lea
cmc
cmpsl
sqrtps
into
ret
inc
xor
jg
aad
xchg
cmp
lahf
sbbl
arpl
ss
lea
shrl
dec
lret
cmp
popf
aad
mov
out
xor
jmp
pop
sub
xor
movsl
cmpsl
add
pop
jno
and
out
dec
inc
xorb
jno
imul
shlb
and
lock
popf
cmp
mov
xchg
mov
sub
jne
repnz
inc
pop
sub
fisubl
lahf
std
dec
bound
push
sub
jbe
ficoms
scas
std
cmpsb
nop
in
ffree
andb
xchg
mov
or
jo
in
xchg
fiaddl
mov
xor
stos
add
cmp
pop
inc
push
sbb
dec
sarb
aad
mov
test
sub
xchg
push
addr16
loopne
push
push
aad
fdivs
outsb
pop
es
jp
fwait
subl
push
mov
xor
dec
pop
mov
aad
ret
sub
cmp
repnz
jmp
mov
xlat
xchg
cmp
ja
xchg
roll
ja
test
cmc
mov
sub
insl
mov
cld
dec
pop
inc
je
dec
mov
mov
jnp
add
xor
jge
xor
cmp
jl
rorb
dec
cmp
fiaddl
lcall
xchg
or
bound
sbb
cmp
in
adc
xor
es
cmp
fdivrl
incb
divl
cli
adc
xchg
add
or
push
and
loopne
inc
mov
mov
daa
push
adc
mov
iret
mov
inc
xor
mov
mov
popa
dec
and
pop
mov
andl
packuswb
hlt
xchg
xor
or
adc
negb
xchg
test
cmpl
aad
bound
xchg
sub
sbb
int
aaa
adc
sbb
push
dec
lds
fisubrl
xchg
test
imul
mov
cmp
test
inc
sbb
adc
movsb
lds
mov
testb
outsb
jns
cmp
xchg
test
add
lock
add
test
addr16
in
dec
shrl
or
or
lcall
rcll
pop
scas
jecxz
push
mov
sbb
mov
xor
stos
mov
dec
adc
push
data16
sub
jne
inc
in
call
pop
subl
and
out
jmp
cmp
mov
inc
inc
insb
push
xchg
pmullw
stos
ja
inc
and
cmp
mov
pop
jbe
stos
enter
jo
jb
je
sbbb
jmp
mull
test
mov
add
xor
bnd
cmpb
jl
std
push
pop
clc
and
xchg
mov
add
scas
int
icebp
sub
nop
mov
sti
lret
dec
imulb
clc
sbb
lods
loop
aaa
mov
ret
call
fistpll
sbb
jecxz
xchg
xor
lods
lock
test
shll
ficoms
sub
pop
dec
inc
lahf
adc
dec
dec
sbbb
jne
test
stos
jae
adc
ljmp
daa
pop
jge
ja
sbb
and
rorl
in
add
mov
inc
and
mov
cmp
lret
cmp
mov
inc
push
dec
test
xor
add
push
fldcw
or
in
cmp
mov
sahf
imul
repz
mov
sbb
aas
ja
pop
pop
outsb
les
jp
inc
ja
inc
cmp
loop
inc
push
add
lcall
adc
std
es
out
pop
mov
mov
mov
xchg
and
push
dec
adcb
sub
jg
pusha
sbb
and
clc
pop
xchg
adc
pop
or
iret
cli
outsl
dec
ljmp
in
jno
sub
xlat
data16
into
xchg
repz
sub
push
jmp
arpl
inc
les
push
int
xor
data16
fisttpl
adc
push
movb
sub
or
pop
repnz
inc
adc
jg
scas
in
int3
pushl
call
sti
cmc
inc
out
and
arpl
push
ljmp
add
call
loopne
and
cmpsl
out
ret
push
jae
mov
jg
push
cmp
daa
mov
and
and
fldcw
xlat
jns
xorl
loopne
ds
stc
sub
push
loopne
pop
lahf
rcrb
jl
cltd
cmp
std
jl
cmc
dec
mov
imul
mov
mov
ljmp
ds
sbb
cmp
in
inc
sarl
outsb
xor
sub
mov
and
mov
sub
pop
dec
mov
into
sub
jae
sub
jp
pushf
in
fstl
xor
fisubs
jp
shrd
push
das
push
push
sbb
cmpsl
es
dec
test
adc
fs
fnstenv
adcl
test
jo
dec
lret
and
adc
adc
in
jmp
in
mull
std
sub
stc
je
mov
xor
popa
xor
loop
inc
dec
add
jecxz
xchg
xor
pop
pop
sub
inc
and
xor
pop
jo
mov
fimull
leave
imul
jne
and
fisubl
loop
ja
fcmovnb
lahf
dec
adc
lea
pop
loope
movsb
sti
cmpsb
sbb
aas
push
inc
pop
xorb
fmuls
les
and
mov
mov
sub
call
int3
jb
aam
sub
lock
inc
xchg
adc
xorl
xchg
pop
cmp
shl
push
mov
sbb
in
push
xchg
push
mov
adc
cmp
sbb
out
fisubrs
aad
lods
push
pop
ss
inc
mov
std
dec
push
xor
aad
inc
mov
dec
sar
in
jecxz
lcall
mov
add
mov
adc
call
fnstsw
std
xchg
lock
jmp
or
arpl
xor
mov
lods
xchg
js
addr16
cmp
out
dec
cmp
test
int3
jae
lea
push
sbbl
fstpt
sbb
mov
fcoms
lea
fiadds
inc
enter
xor
or
shl
sub
pop
jb
scas
sub
push
push
pop
jbe
mov
subl
mov
fistpll
ljmp
adcl
enter
jbe
xor
dec
es
mov
or
call
add
adc
jg
xchg
aaa
clc
insl
loop
sub
fidivrl
cltd
adc
pop
outsb
fidivs
shrl
pop
jns
cld
sbb
inc
fldl
push
fwait
jecxz
and
fwait
xchg
cmc
pop
jg
es
es
pop
fdivrp
sub
pop
cmp
scas
movb
mov
test
test
dec
cmp
rep
xor
fildll
xchg
jns
push
mov
push
cli
mov
fidivrs
cltd
add
xchg
push
mov
pop
push
fisttpl
jno
add
lds
mov
adc
popa
jge
jge
jo
jns
rcll
pusha
pusha
sub
sub
shll
hlt
cltd
ss
das
jae
add
popf
bound
xchg
xlat
cmp
adc
aad
mov
clc
orb
inc
divl
xchg
add
ja
das
add
stc
loopne
pop
leave
lds
pop
arpl
sarl
imul
mov
or
rol
adc
cmp
push
cs
xchg
shll
ljmp
rcrl
cwtl
fisubl
mov
cmp
cmpsl
xor
inc
mov
xchg
sub
mov
add
jb
pop
bswap
xchg
mov
and
movsb
pop
jmp
mov
leave
xchg
inc
cmp
scas
push
leave
jo
sub
jo
adc
mov
push
pusha
and
jl
push
lret
rol
xchg
cltd
mov
pop
cmp
popf
call
mov
cli
sbb
pmaxub
push
cwtl
mov
ja
flds
popf
add
bound
push
jo
ret
in
sbb
insl
testb
incl
inc
add
sbb
add
roll
bound
pop
xor
hlt
mov
into
dec
mov
mov
in
je
xchg
loopne
mov
cld
into
mul
mov
pop
mov
sbb
and
arpl
xchg
sarb
pop
pop
push
out
push
cmp
fadds
pusha
fcom
inc
or
sahf
inc
mov
data16
aaa
in
test
leave
stos
xchg
addl
and
dec
sub
outsb
lock
daa
or
outsb
jge
xorb
pusha
mov
sub
add
mov
cmpsl
inc
jg
loop
fisubrs
and
inc
test
subl
lods
nop
pop
ds
ret
outsb
mov
dec
sbb
or
mov
int
sub
adc
nop
inc
inc
jne
jnp
test
das
mov
push
and
repz
adcb
pop
push
jae
xchg
sahf
mov
mov
xchg
lock
shrb
dec
sub
addr16
adc
inc
xlat
xchg
shll
xor
pmaxub
or
mov
mov
mov
sarb
mov
xchg
mov
rolb
sbbl
in
test
sbb
andl
xor
mov
in
adc
pushf
xor
cmp
jae
ret
aas
movsl
ja
xor
mov
test
dec
in
jo
and
cmp
ret
hlt
fnstcw
stos
imul
push
and
inc
sbb
adc
adc
mov
cmp
mov
add
pop
das
pslld
repnz
dec
cmp
dec
cmp
ret
nop
ds
mov
xor
daa
std
xchg
adc
jp
jl
cmc
push
clc
call
sbb
fcomp
dec
add
jo
fwait
int
push
adc
dec
add
cmc
sub
leave
loopne
js
das
sub
negb
idivl
adc
xchg
sbb
xchg
adc
sbbb
mov
xchg
mov
jnp
lock
in
push
pop
out
push
add
loop
sbb
imul
jnp
unpckhps
int
cmp
xchg
addb
aas
int
mov
mov
cmp
xchg
mov
in
xchg
or
xor
outsb
sti
xlat
inc
mov
mov
cmp
sub
inc
cmp
and
xor
jnp
shrb
jo
jmp
mov
divb
push
mov
mov
add
je
or
jle
jo
mov
testl
xchg
addr16
xor
mov
inc
mov
sahf
jp
inc
das
out
jecxz
dec
xchg
push
mov
pop
sarl
adc
test
sub
leave
lret
or
aas
imul
loopne
xchg
pop
inc
mov
xor
popf
out
pop
and
int
nop
mov
jmp
jb
and
mov
sbb
fdivl
mov
sub
movsb
jo
imul
cmp
sbb
cmp
mov
lods
sbb
nop
push
hlt
push
jb
sub
pop
or
adc
das
pop
jns
dec
push
inc
clc
cmpsl
outsb
lret
dec
in
test
sahf
jne
int3
mov
mov
out
je
mov
pop
or
hlt
sbb
mov
sbb
inc
stc
lock
out
pop
jo
scas
cwtl
xchg
xlat
pop
out
push
mov
outsl
and
mov
xor
pop
sub
mov
les
push
inc
push
jle
lret
sub
jp
cmpsb
arpl
ss
xchg
popa
jp
lock
jg
aam
fidivrs
pop
loopne
cmpsl
aaa
or
lret
mov
jp
jge
pop
push
pop
pop
popf
jo
push
aad
fidivrs
sub
cmp
testl
shlb
xor
arpl
mov
and
ret
cwtl
cmp
cmpl
ja
xchg
stos
sbb
ret
test
dec
push
sub
sub
xchg
inc
mov
leave
xchg
adc
pop
sub
cmp
test
into
add
ds
pop
popa
clc
fdivrs
xor
dec
dec
and
aad
inc
cli
adc
imul
jae
out
in
dec
repnz
xorl
mov
gs
repnz
in
and
push
pop
pop
sub
je
push
subl
xlat
sbb
ds
jl
dec
xor
mov
cmp
out
cmc
std
push
gs
push
adc
or
stos
jo
xor
enter
sbb
sti
xchg
adc
mov
je
pop
test
ja
cmpsb
adc
sbb
jl
insl
sbb
fsubrp
in
mov
push
xchg
testl
push
adc
sub
adc
and
mov
sbb
data16
push
xor
lcall
sar
lds
cmovns
ds
rorl
add
in
mov
idiv
add
add
push
imul
dec
xchg
lcall
xor
ja
pop
iret
xchg
mov
sbb
mov
cmpsl
aas
popa
int3
cmp
inc
and
jb
push
add
inc
icebp
cmp
popf
inc
push
xchg
jmp
pop
lret
or
jns
insl
repnz
jg
std
xchg
pusha
push
outsl
stos
ja
xchg
sbb
sub
out
cmpsb
shrb
test
cwtl
dec
ja
js
cmc
arpl
adc
push
xor
icebp
dec
jne
out
push
ret
sbb
mov
xor
dec
adc
add
daa
push
pusha
sarb
mov
dec
jmp
sbb
adc
pop
popa
aas
inc
fildl
cmp
dec
add
sub
pop
mov
ja
decb
addr16
jecxz
dec
mov
imul
dec
icebp
rcrb
int3
mov
sti
xchg
add
frstor
pop
out
push
sub
int
mov
aam
mov
jl
hlt
sbb
popf
movsb
hlt
xchg
cmp
and
test
inc
mov
out
dec
sbb
loopne
dec
mov
adc
popf
repnz
cmp
sub
clc
lea
cltd
jo
ret
xlat
repnz
iret
cli
mov
jo
pushf
mov
adc
mov
add
in
or
sbb
ds
imul
rcpps
