shr
add
not
add
mov
mov
mov
mov
jmp
mov
lea
or
je
mov
not
mov
adc
jmp
shl
and
xchg
neg
shr
mov
mov
ror
xor
ror
shl
mov
jmp
lea
lea
mov
and
pushl
and
mov
lea
pushl
lea
xchg
shl
call
xor
shr
xchg
lea
mov
not
mov
jmp
mov
xor
add
shrl
mov
shl
xor
xchg
neg
mov
xor
jmp
call
rcr
mov
mov
and
xor
rcl
not
xor
xor
mov
lea
lea
call
mov
jmp
lea
xor
neg
adc
mov
shl
and
mov
mov
not
xor
xor
jmp
lea
xchg
lea
popl
xor
shr
add
xor
neg
mov
jmp
xor
add
neg
call
push
lea
xor
not
xchg
neg
pop
xor
xor
and
neg
jmp
xor
neg
mov
not
push
add
rcl
and
rol
lea
mov
mov
ror
shl
xchg
jmp
xor
mov
mov
push
call
jmp
adc
xchg
rcl
neg
shr
adc
shl
lea
xchg
shr
lea
lea
lea
jmp
xor
and
mov
xor
lea
and
lea
lea
xor
shr
mov
rcl
neg
shr
xor
jmp
adc
not
xor
and
xor
xor
shr
mov
not
mov
jmp
lea
xchg
xchg
add
neg
lea
xor
ror
shr
neg
mov
xor
and
push
xor
jmp
adc
xor
rol
ret
xor
rcr
mov
neg
lea
mov
and
shl
jmp
neg
rol
xchg
mov
xor
shl
neg
jmp
xor
rcl
not
mov
mov
neg
xor
rcr
mov
xor
not
not
and
rcl
and
lea
neg
lea
shr
adc
xor
mov
not
adc
mov
mov
jmp
rcr
mov
rcr
not
mov
mov
mov
xor
jmp
xor
and
mov
lea
add
xor
rcl
lea
mov
push
xor
xchg
xor
push
jmp
ror
not
neg
neg
neg
not
jmp
mov
xor
shl
and
not
lea
decl
jne
not
and
mov
xchg
lea
and
jmp
push
mov
sub
push
push
push
not
rcr
lea
push
shr
lea
xor
shl
mov
jmp
xor
cmp
je
mov
adc
jmp
shr
neg
and
lea
not
xor
xor
xchg
push
and
jmp
rol
mov
add
rol
rcl
ror
ror
mov
jmp
xor
lea
xor
not
mov
lea
movl
mov
rol
mov
rcl
movl
ror
jmp
not
add
mov
xor
add
mov
ror
cmp
je
jmp
push
mov
fsubrp
or
cld
in
or
fsubrp
or
mul
or
aad
loope
push
pop
adc
sbb
pop
test
push
jp
mov
sub
inc
in
in
jge
push
pop
cmpsb
xchg
and
pushl
in
out
dec
push
cmp
xchg
fcmovnu
sub
add
sub
cmp
imul
push
add
push
fisttpll
loope
pop
in
push
mov
jne
push
lahf
cmp
in
or
mov
sub
mov
fsubrp
or
test
jmp
mov
je
cli
pusha
mov
cmpl
nop
jecxz
mov
cmp
mov
pop
mov
scas
adc
out
dec
fstl
jo
sbb
nop
cld
pop
fucomp
or
jae
lret
dec
cmp
adcl
dec
dec
push
and
xor
out
pop
sbb
ds
or
fs
shll
in
pop
push
adc
ss
push
and
in
push
pop
push
outsb
int3
sbb
in
clc
push
and
jl
xchg
push
stc
push
fsubrp
or
leave
xchg
rcrl
pop
mov
shrl
mov
ficoms
jge
mov
pusha
stos
shll
add
inc
adc
push
push
test
push
adc
loope
pushw
in
sti
inc
push
mov
subl
test
mov
jo
fildll
pop
mov
fsubrp
or
js
jge
push
outsb
js
sahf
in
xor
stos
xor
hlt
loop
lea
mov
shrl
xchg
shrl
lods
es
jecxz
ljmp
sahf
in
andl
push
and
xlat
jnp
mov
out
out
add
cld
imul
loope
jp
into
push
jp
roll
mov
push
jp
push
push
xchg
mov
loop
mov
add
jnp
add
jne
test
mov
pop
out
lea
lock
jge
xchg
jg
xchg
lods
xchg
outsl
mov
xchg
das
add
mov
popf
mov
pop
jbe
faddl
icebp
lcall
ret
test
movsb
sbb
dec
jp
push
mov
mov
addl
and
cmp
mov
and
mov
pop
and
cmc
imul
or
in
in
cmp
ss
xchg
cmpsb
ljmp
jnp
jnp
add
push
icebp
push
lea
add
jbe
dec
add
add
mov
jp
int
push
test
jo
icebp
test
dec
xlat
mov
jp
data16
cmp
stos
push
pop
xchg
mov
jns
pop
dec
pop
xchg
out
mov
fs
jb
mov
test
mov
or
mov
icebp
fs
test
test
mov
sub
jp
std
clc
dec
inc
pushw
mov
out
mov
or
cmp
push
push
mov
in
pusha
ret
push
jp
movsl
lds
cwtl
dec
jp
mov
push
and
out
lds
inc
mov
movsb
mov
jp
mov
mov
add
je
jge
or
or
add
jnp
add
stos
and
add
std
mov
mov
jno
test
jno
or
and
push
lods
xchg
outsl
mov
xchg
das
add
mov
subb
sti
mov
push
push
mov
in
add
push
xchg
mov
sub
xchg
into
push
and
xor
jp
lea
repz
cmp
mov
jp
fbld
les
mov
data16
test
xchg
je
mov
icebp
cmc
jb
aaa
jo
rcll
jge
testl
jno
idivl
adcb
mov
adc
pop
repz
lea
or
jno
or
out
push
xor
out
jbe
icebp
repz
add
js
mov
fnsave
icebp
inc
or
pop
cmp
mov
sub
data16
xchg
dec
jp
or
das
addb
cmp
xchg
mov
xor
int3
sbb
iret
sbb
lds
xor
icebp
or
jno
jb
mov
test
push
icebp
cmc
xchg
jns
mov
xor
jge
icebp
aad
or
xor
add
nop
fcomps
cmc
xchg
jb
int
xor
inc
iret
xchg
mov
inc
push
lock
lcall
jnp
push
and
dec
es
inc
jno
mov
adc
adc
data16
or
push
jp
call
push
jp
roll
icebp
sti
addb
sbb
or
or
test
out
dec
mov
in
jno
icebp
pop
add
add
lea
xchg
jne
jle
or
into
pop
sub
out
gs
inc
out
jne
icebp
and
gs
dec
lcall
aad
or
dec
cld
fisubrs
xor
sbb
shrl
jp
cli
xor
std
xchg
jp
mov
pop
addb
stos
popa
insl
sub
and
mov
push
subb
outsb
mov
loopne
int
or
jp
or
xor
icebp
dec
mov
jp
rolb
jp
sti
push
icebp
mov
sub
into
dec
cld
xor
push
icebp
test
rorb
xchg
push
movsb
mov
jp
fadds
mov
mov
push
jp
lea
add
add
cli
sbb
orl
mov
push
sbb
mov
sti
push
test
in
in
das
jp,pt
mov
jbe
push
icebp
fldl
or
mov
test
mov
adc
aad
outsl
mov
dec
int3
jle
in
adc
pop
pusha
jmp
test
and
mov
sbb
mov
or
mov
sbb
jae
adcb
jo
mov
jnp
dec
add
loopne
jge
xchg
jl
out
jmp
dec
adc
sarl
jmp
mov
rcll
add
lea
in
jmp
ja
test
ss
add
mov
icebp
xchg
mov
ds
test
xchg
loop
jp
inc
scas
insb
clc
insl
adc
cmpsb
subb
fimuls
les
cmp
pushf
dec
out
jge
popl
stos
clc
pop
push
lock
add
mov
adc
fcompl
gs
and
das
add
push
sub
add
pavgb
mov
mov
imul
enter
cli
mov
sbb
imul
adc
sbb
into
lcall
mov
cmp
xchg
cmpsb
std
mov
mov
push
or
lcall
mov
jns
fidivrl
push
mov
push
cli
int
add
xorl
shlb
femms
mov
ret
in
lcall
negl
maskmovq
mov
cmc
mov
sub
mov
imul
dec
pop
paddsb
jle
pop
out
movsl
mov
imul
sub
lret
jge
mov
inc
stc
in
bnd
dec
js
add
into
dec
ja
adc
jp
xor
jl
xchg
push
mov
mov
inc
inc
data16
sub
pop
pushf
cli
xor
outsb
sbb
pop
jno
sbb
adc
cmpsb
repnz
shrb
dec
add
dec
xchg
jnp
or
clc
mov
in
lock
icebp
jo
out
dec
iret
mov
xchg
mov
aas
pop
pop
lods
ret
jle
scas
push
fildl
push
lods
dec
inc
dec
add
xchg
cld
xchg
sbb
imul
dec
int3
sbb
jne
out
pop
add
repnz
push
lret
scas
or
cmp
mov
and
cmp
fidivrl
or
pop
cmpsb
xchg
gs
cmp
stos
fiadds
jb
cwtl
pop
sbbl
paddw
mov
or
inc
sub
outsb
jno
xlat
and
xchg
imul
jne
mov
dec
cmpsl
wbinvd
cmp
push
test
jo
addb
xchg
js
fstpl
int
pop
pop
loop
inc
inc
adc
sub
imul
push
mov
xchg
xor
pop
cmp
clc
fcmovb
jbe
lahf
pop
xchg
nop
fidivl
xchg
mov
xchg
or
jnp
popf
pop
mov
repnz
ds
or
push
and
sub
fwait
pop
jge
scas
or
or
add
test
pop
rorl
ret
push
pop
jp
testb
cwtl
into
mov
dec
ficomps
jge
xchg
mov
in
outsb
push
testl
mov
out
pop
std
xor
lret
push
cmp
enter
pop
xchg
push
loopne
inc
aas
mov
movsb
mov
js
dec
mov
in
mov
fwait
cld
jb
dec
cmp
lahf
pop
test
fdivs
mov
xor
xor
pop
cmp
and
sbb
rcl
adc
push
pop
mov
test
ret
mov
fnstsw
add
cmc
dec
cld
mov
fdivrs
xchg
mov
loopne
lods
dec
test
inc
bound
pop
jo
dec
lcall
xchg
mov
loop
sub
sbb
flds
mov
lds
popa
cld
jo
call
mov
incb
add
enter
mov
dec
xor
mov
sahf
dec
dec
jns
sahf
adc
clc
cmp
inc
ret
pop
fwait
sbb
or
mov
dec
add
fmul
dec
stos
out
aaa
add
sub
jo
pop
mov
loop
cmp
out
push
arpl
arpl
lret
cli
data16
outsb
jae
jo
push
dec
pop
mov
ds
or
sti
add
repnz
xor
sbb
bound
inc
jo
int
xchg
cmp
dec
xchg
cli
dec
xchg
mov
lods
pop
jl
xor
inc
int3
test
loope
fwait
loope
mov
xchg
lret
sub
stos
int3
pop
stos
outsl
mov
mov
pop
xor
xor
push
sub
push
push
lea
xor
inc
push
test
icebp
dec
mov
mov
cli
xor
imul
dec
fmull
sbb
jp
lods
out
pop
ljmp
xchg
add
cmc
cmpsl
dec
pop
jb
hlt
fildl
push
shl
test
mov
out
or
mov
call
mov
jne
sub
dec
and
cmp
push
dec
add
push
xlat
sbb
in
add
andb
sub
sbb
icebp
inc
push
hlt
ds
jp
mov
pushf
add
jb
sahf
inc
xor
fnstcw
lea
jno
test
add
repnz
dec
es
jg
sahf
sbb
mov
jbe
xchg
mov
inc
cld
cmc
push
nop
jns
pop
sub
and
xchg
sbbb
add
lcall
sbb
sbb
push
out
insb
jo
popf
add
lods
push
rclb
fcmovu
test
ljmp
sarb
add
repz
jns
lea
test
push
repnz
dec
cmp
mov
xchg
mov
push
and
inc
mov
add
mov
jecxz
in
cs
pop
in
enter
mov
pop
into
inc
xchg
clc
pop
loop
mov
pop
cmp
cld
cld
int
sub
pushf
insb
mov
sbb
jne
sbb
repz
add
stc
mov
mov
les
lea
mov
adc
mov
mov
dec
add
addl
jmp
lret
pop
sub
xchg
jge
pushf
xor
pop
xorb
not
jp
orb
sbb
test
dec
stos
pop
mov
and
in
rolb
push
pop
add
pop
jns
xchg
lret
lahf
jbe
pop
lcall
sub
sub
mov
push
jno
add
and
rcrl
jle
fimuls
imul
jb
or
bound
mov
sub
sbb
cld
dec
les
insb
mov
loop
push
push
add
bswap
std
xchg
jle
and
jo
sbb
aad
push
or
pop
mov
test
inc
mov
push
lods
loope
xchg
mov
or
into
out
jb
push
and
shl
jmp
lods
sbb
ret
lret
rolb
xor
test
cmp
aaa
push
pusha
loopne
mov
xchg
cmc
stos
push
jmp
data16
in
jbe
out
add
push
add
pop
int3
movd
mov
in
adc
sub
lret
xor
out
scas
jmp
or
les
mov
push
mov
ja
inc
add
idiv
ficomps
sub
xor
cli
jno
push
cltd
adc
mov
jo
jns
inc
sbb
call
call
mov
ljmp
cltd
inc
iret
jno
mov
imul
bt
add
dec
sbbb
or
es
pop
cmp
