mov
xor
cmp
je
inc
inc
cmpb
jne
ret
push
mov
push
push
andl
push
call
lea
mov
test
jbe
mov
mov
mov
and
rol
movzwl
dec
lea
mov
jne
testl
je
push
mov
and
or
add
mov
pop
mov
leave
ret
push
push
mov
mov
push
pop
movzbl
xor
mov
inc
and
rol
imul
inc
mov
sub
mov
mov
not
mov
add
not
shl
imul
sub
imul
dec
decl
mov
jne
pop
mov
pop
ret
push
push
mov
mov
mov
mov
mov
mov
mov
cmpb
jne
cmpb
jne
pop
pop
ret
push
mov
mov
mov
sub
add
push
mov
test
jne
xor
jmp
mov
add
mov
push
mov
mov
mov
push
mov
add
add
add
mov
mov
test
jns
and
sub
cmp
jae
mov
jmp
xor
mov
cmp
jae
jmp
mov
mov
mov
mov
add
mov
call
cmp
je
incl
mov
cmp
jb
mov
mov
mov
cmp
je
movzwl
mov
add
test
je
mov
add
cmp
jae
cmp
jb
xor
cmpb
je
inc
cmpb
jne
push
lea
push
push
mov
call
add
lea
push
mov
movb
call
mov
test
jne
xor
jmp
lea
call
push
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
mov
add
mov
sub
test
je
andl
push
lea
lea
cmpl
mov
je
push
mov
mov
add
push
mov
call
mov
andl
add
cmpl
mov
je
mov
mov
test
jns
and
jmp
lea
push
pushl
mov
call
incl
mov
mov
lea
cmpl
jne
mov
incl
mov
mov
imul
lea
lea
cmpl
jne
pop
pop
xor
inc
leave
ret
push
mov
push
mov
movzwl
movzwl
andl
add
je
push
mov
push
lea
testl
je
mov
mov
and
add
push
push
pushl
call
jmp
mov
mov
add
add
movzwl
movzwl
incl
add
add
cmp
jb
pop
pop
pop
pop
ret
mov
add
mov
test
je
add
add
add
add
add
push
mov
push
lea
xor
cmp
jbe
add
inc
cmp
jb
mov
add
xor
cmp
jbe
add
inc
cmp
jb
pop
pop
xor
inc
ret
push
xor
cmp
jbe
push
lea
mov
add
mov
mov
add
inc
add
cmp
jb
pop
pop
ret
push
mov
push
push
mov
mov
mov
mov
mov
push
add
push
mov
add
push
push
lea
push
mov
call
add
mov
mov
mov
mov
push
popl
sub
lods
xor
stos
sub
sub
rorl
sub
dec
jne
mov
mov
neg
add
add
sub
add
mov
imul
add
mov
imul
add
mov
mov
mov
add
and
add
movl
mov
pushl
lea
push
push
mov
call
mov
add
xor
add
add
decl
mov
jne
addl
pop
pop
leave
ret
push
mov
cmpl
push
push
jb
mov
mov
mov
pushl
popl
sub
lods
xor
stos
sub
sub
rorl
sub
dec
jne
pop
pop
pop
ret
push
mov
sub
andl
lea
push
movb
mov
mov
mov
mov
rep
pop
push
push
rdtsc
mov
mov
test
jne
mov
jmp
mov
not
ror
not
movzbl
lea
cmpb
jne
push
pushl
movb
pushl
call
pushl
mov
call
push
pushl
mov
pushl
call
mov
mov
cmp
jne
movzbl
push
pushl
pushl
call
pushl
pushl
pushl
call
xor
pop
inc
pop
leave
ret
push
push
push
push
mov
push
mov
call
push
mov
call
push
mov
call
push
mov
call
add
xor
mov
push
mov
call
mov
push
mov
call
push
call
mov
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
pop
pop
push
mov
call
push
mov
call
call
push
mov
call
push
mov
call
push
call
push
mov
call
push
call
pop
pop
pop
pop
pop
pop
ret
push
mov
sub
push
xor
push
mov
mov
mov
cmp
jne
push
mov
call
push
lea
push
push
mov
push
mov
mov
call
mov
call
cmp
je
xor
jmp
push
push
push
push
push
mov
call
mov
mov
mov
mov
push
sub
mov
call
push
call
lea
push
push
push
push
call
call
push
lea
push
push
mov
call
lea
mov
add
lea
push
mov
call
cmp
je
cmpl
jne
mov
call
cmp
jne
lea
call
pushl
mov
pushl
pushl
push
call
mov
sub
mov
mov
add
push
mov
and
add
push
add
call
mov
mov
mov
mov
add
mov
add
movzwl
lea
add
mov
movzwl
lea
mov
mov
sub
xor
mov
mov
mov
cmp
je
mov
cmp
je
add
mov
mov
mov
jmp
mov
mov
mov
cmp
je
add
lea
mov
mov
mov
mov
add
push
push
push
call
or
sub
mov
mov
mov
sub
push
push
call
call
test
je
cmpl
je
mov
mov
call
movzwl
xor
xor
mov
cmp
jae
mov
mov
addl
push
pop
rep
mov
mov
mov
add
add
mov
mov
movzwl
inc
cmp
jb
mov
mov
mov
add
mov
pushl
mov
pushl
mov
mov
push
pushl
call
pop
pop
pop
leave
ret
push
mov
call
mov
mov
dec
jne
mov
cmp
jne
push
pushl
push
mov
call
jmp
cmp
je
test
jne
testl
je
cmp
je
push
push
push
xor
call
push
mov
call
xor
ret
fs
adc
add
add
add
add
lods
xchg
dec
in
add
js
push
pushf
sbb
movsb
xchg
mov
ja
jmp
mov
inc
sub
ljmp
jle
es
int
cmp
imul
push
pop
pop
mov
cmp
jb
aas
jb
call
pop
push
fsubrp
loopne
cwtl
jp
shrb
jno
push
inc
sub
push
ret
cmp
aaa
adc
je
fwait
jecxz
xchg
push
pop
sub
and
divb
cmp
mov
repz
lods
dec
loop
sbb
mov
jb
loope
sbb
pop
mov
xorl
popa
xor
adc
fcoml
out
jbe
imul
push
dec
lret
mov
cld
add
lock
ds
jp
mov
enter
outsb
movsb
xor
sub
mov
mov
outsl
or
fimuls
shlb
icebp
push
cmpsb
rorl
jl
push
adc
imul
add
imul
or
sub
and
and
mov
pusha
xchg
mov
push
lods
inc
dec
pop
out
fisttpll
add
loopne
shll
leave
adc
cmc
mov
dec
lock
sub
and
fimull
ja
mov
aas
into
rclb
daa
call
loope
xchg
sub
cs
xchg
sbb
orb
jmp
inc
fidivrl
and
push
shll
dec
push
push
xchg
es
aaa
ds
outsl
jno
xor
and
std
rolb
mov
std
hlt
and
jne
ret
imul
jo
push
inc
aas
enter
push
popl
xchg
and
insl
or
out
addb
dec
mov
in
sahf
sbb
pop
pop
popf
adc
cld
push
ficoml
aaa
cmp
mov
sub
es
movsl
mov
dec
cmc
mov
cs
mov
fadd
ljmp
adcb
xchg
add
and
and
in
nop
int3
adc
add
mov
push
push
mov
inc
ss
mov
push
mov
cli
aaa
imul
mov
mov
add
loope
insb
pop
stos
xchg
xchg
addr16
imul
pushf
rorl
mov
jno
aaa
push
jne
or
sti
cmp
mov
mov
cmpsl
sbb
bnd
dec
jge
fcmovnu
lret
aas
out
inc
mov
push
inc
call
mov
xor
call
cmpb
jecxz
lds
cmp
sbb
dec
push
out
or
lods
jbe
pop
mov
jnp
mov
leave
push
add
xchg
ret
adc
and
ror
stc
inc
dec
outsb
mov
push
cmp
adc
pushf
push
daa
adc
hlt
xor
sub
push
jge
fisubrs
push
les
mov
fiaddl
sti
repz
loop
mov
jnp
mov
dec
xchg
sub
pushf
jmp
and
or
xchg
inc
lock
in
and
das
push
inc
leave
xor
std
jne
rolb
fidivrl
push
push
inc
sahf
mov
mov
cmpsb
lret
push
loop
ret
mov
xor
mov
in
dec
fistpl
cmpsb
lcall
sbb
test
xchg
js
cli
fstpl
imul
xchg
mov
jne
jns
xorb
cmp
or
dec
aaa
mov
insb
or
adc
xchg
cwtl
daa
or
clc
sbb
dec
dec
dec
fimuls
pop
dec
roll
sbb
data16
pop
shll
xchg
xorb
out
sbb
dec
outsl
cmp
adc
pop
sub
neg
adc
ret
push
sub
stos
leave
cmp
test
or
mov
mov
or
and
test
pop
xchg
pop
add
xor
add
jl
nop
mov
push
mov
aas
jl
mov
adc
int3
shlb
sub
pop
scas
xchg
loope
adc
and
adc
fstps
mov
push
xchg
pop
out
leave
fwait
test
fildll
fisubrl
popf
popa
scas
ja
cmpsb
xchg
jp
rclb
jns
rorb
out
add
lock
aad
je
dec
mov
lret
push
jmp
jo
mov
sarl
pop
jl
orb
pushf
add
iret
cmpsl
mov
sarl
xchg
inc
add
lods
dec
push
sbb
dec
addr16
jae
pop
add
mov
call
xor
push
pop
jle
xchg
and
inc
mov
push
lods
cld
loope
test
dec
or
aam
pop
push
incl
jmp
cmp
cs
or
add
lret
fsts
insl
loopne
mov
out
sub
sbb
enter
out
or
xrelease
fsubrs
sub
xchg
lods
mov
xchg
outsb
mov
arpl
test
xchg
ja
xor
and
jl
loop
mov
sub
les
fstl
roll
add
dec
popa
mov
sbb
insl
jne
cld
xchg
inc
xchg
jbe
dec
jnp
dec
ljmp
and
stos
int3
inc
and
sbb
out
clc
pop
pop
inc
pop
movsb
inc
xchg
sbb
stos
mov
stc
jb
jl
push
sbb
into
push
clc
scas
cmp
lea
cli
inc
push
jl
fsubrl
fisubrl
xchg
and
fistps
lret
lret
pop
sbb
jno
xor
dec
inc
pushf
orb
fcmovnbe
icebp
cmp
mov
cwtl
loop
pop
iret
sub
mov
jns
push
shl
call
and
popf
xchg
iret
mov
ret
and
mov
rorl
mov
mov
aaa
fimull
shrl
pop
pop
xchg
test
pop
adc
mov
sbb
das
mov
test
add
dec
roll
dec
into
jge,pt
sahf
pop
test
mov
daa
sub
gs
faddp
add
pop
aaa
xor
jmp
aas
and
xchg
cmpsb
xchg
sbb
pop
in
sub
lea
loopne
repz
loopne
sub
test
sbb
in
cltd
mov
or
mov
in
jo
jge
and
and
xlat
les
jmp
push
mov
xor
pop
xchg
jne
dec
shl
sbb
lret
xchg
sub
inc
mov
xlat
xchg
cmp
sahf
fstp
sub
mov
inc
mov
sbb
arpl
subb
pusha
mov
fimull
inc
lea
lahf
sbb
sbb
jbe
xchg
in
aas
stc
lds
xor
inc
jmp
sbb
cmp
add
push
mov
jmp
insb
outsl
jnp
cmp
test
push
inc
sub
inc
dec
aad
xlat
nop
mov
es
in
adc
push
nop
add
stc
xor
xlat
and
mov
xor
mov
mov
pop
dec
xchg
dec
movsb
fcoms
mov
dec
out
sub
in
xorb
imul
daa
dec
inc
and
xor
ret
outsl
cmpsl
jp
push
mov
xchg
inc
push
pop
sub
ror
mov
add
and
imul
pop
stos
negb
out
lea
cs
enter
inc
addb
lock
aad
lret
dec
sbb
lea
xorb
xor
mov
clc
inc
out
dec
fxch
bound
mov
repnz
in
mov
imul
fsubp
mov
out
jg
fisubrl
mov
mov
ficomps
into
mov
add
lods
popf
jbe
bound
daa
pop
cmp
js
add
ljmp
rcrl
mov
pop
enter
in
and
pop
fidivrl
adc
mov
push
pushf
test
dec
or
mov
data16
push
cmp
pop
fsubrs
inc
dec
jmp
push
push
call
sbb
push
inc
cmpsb
push
jno
mov
xor
push
lahf
dec
xor
adc
rclb
in
dec
inc
push
adc
sub
jle
rcr
inc
mov
jecxz
jle
jae
adc
dec
leave
bound
mov
testl
cltd
adc
insl
cmp
mov
cmpsb
sub
das
pusha
xor
jae
push
outsl
lcall
or
fidivs
jge
xchg
mov
jmp
mov
ljmp
aam
mov
int3
push
add
push
xor
pop
or
stos
iret
xor
cmpsb
push
inc
jae
pusha
fwait
dec
int3
jae
shl
int
fwait
loope
jbe
and
lahf
sbb
test
pop
mov
lock
loopne
out
sbb
push
xchg
std
xchg
lods
push
sub
sbbb
add
into
dec
mov
lret
pop
push
lret
leave
mov
mov
aad
xor
das
jg
mov
jne
lret
insl
pop
shl
lcall
pop
pop
out
or
lahf
lahf
fmull
in
add
into
adc
xchg
jo
out
xchg
cmpsl
jo
cs
data16
subb
addr16
mov
jae
in
cmp
je
and
or
mov
mov
aam
ja
lret
js
mov
xlat
arpl
cmp
jbe
sarl
mov
mov
mov
push
pop
out
les
gs
mov
fdivs
mov
xchg
pop
xor
sbb
or
pop
mov
lret
ret
jne
add
dec
xlat
cmpb
ja
mov
mov
rcll
lcall
dec
cmc
sub
push
mov
icebp
sub
ds
adc
movsl
stc
cmc
xor
push
cmpsb
in
sar
push
mov
sub
cmp
cmp
cs
mov
mov
sub
sbb
loop
fisubrs
push
mov
xchg
xor
jl
xorl
sbb
fadds
jnp
rcll
jl
or
leave
sbb
ljmp
lods
push
cmp
mov
xchg
xor
fildl
mov
jbe
mov
jns,pn
fld
stc
ret
iret
or
xor
loopne
jo
jge
int
sub
daa
pop
dec
sti
out
stos
or
sbb
jae
fldcw
les
xor
aaa
mov
sarl
cmpsl
pushf
aad
mov
jae
or
or
imul
aas
xchg
sub
mov
cmp
inc
call
dec
addr16
or
mov
add
pop
sub
xor
filds
add
fldcw
cmp
testb
in
out
cmp
fmull
fldcw
lret
adc
add
and
sub
mov
push
lea
popa
xlat
sub
xchg
push
push
mov
stos
dec
xchg
sub
push
cwtl
aas
xor
or
aas
xchg
sub
dec
loop
test
lahf
adc
cmp
mov
outsl
decl
lods
xchg
fistps
jle
xchg
mov
and
sub
data16
pop
sub
sbb
add
rorl
je
jp
gs
mov
mov
js
dec
dec
in
pusha
subb
into
or
sbb
call
js
pop
xchg
ja
stc
jne
test
cmpsl
mov
mov
dec
pop
bound
jg
cmpsl
ss
shl
push
stos
push
pop
pop
cwtl
add
mov
and
rep
inc
insb
sub
test
inc
cmp
push
pop
inc
imul
jp
in
adc
adc
popf
dec
dec
roll
call
aaa
push
lahf
push
push
push
pop
inc
pop
and
sbb
or
cmc
cwtl
adc
and
sbb
push
dec
lods
fdivrs
neg
hlt
sbb
jae
adc
fs
test
sbb
inc
pop
out
or
mov
xchg
imul
pop
shlb
ds
cmp
mov
lcall
xor
adc
xor
loop
sahf
inc
xchg
loop
jbe
jns
xchg
cli
dec
push
jecxz
adc
cltd
jae
gs
sub
mov
test
in
jg
scas
outsb
enter
insl
cld
fsubrp
stc
mov
jo
stos
mov
sbb
or
fwait
arpl
bound
xor
loopne
mov
sbb
push
test
mov
pushf
in
sub
inc
lds
imul
repnz
sbb
and
out
loop
into
xor
int
fsubs
mov
xchg
push
mov
test
jmp
mov
mov
mov
sub
and
out
push
pop
mov
sbb
xorl
mov
add
test
push
inc
aam
lods
insl
daa
jne
pushf
jl
sub
lret
inc
aam
icebp
loope
imul
xchg
jl
mov
rolb
pusha
fdivr
mov
insb
xor
sub
leave
ret
mov
fwait
sub
sbb
xchg
idivb
dec
out
lret
jae
decb
and
sub
pushf
sarb
xorl
cmp
push
dec
test
scas
sub
cmp
les
les
cmp
je
add
lcall
pusha
rcrb
cwtl
push
and
test
ret
mov
idivl
push
sub
sbb
pop
dec
into
aaa
adc
in
std
stos
movsb
pop
lea
inc
loop
hlt
push
gs
arpl
or
call
sub
popa
pop
test
aam
push
and
addr16
add
xor
into
xor
fldt
jmp
inc
les
sti
pop
icebp
mov
inc
jg
add
push
into
insl
mov
sub
mov
outsb
pop
test
lahf
dec
lods
sbb
sbb
shll
xchg
lock
mov
pop
adc
inc
pop
adc
aaa
lods
call
sub
out
hlt
pop
cwtl
jno
lcall
xchg
sub
add
lcall
das
scas
mov
pop
cli
imull
mov
xor
jnp
pop
stos
sub
ljmp
outsl
sbb
vpsrld
incl
addl
push
fs
cmpsb
mov
bound
scas
mov
arpl
jo
add
jmp
addr16
lods
mov
enter
pop
mov
mov
sbb
dec
into
fimuls
mov
shlb
ret
add
jb
aas
stos
cli
mov
lock
js
and
mov
sbbb
les
lret
sbb
bound
jnp
es
sub
dec
fsubrl
aaa
pop
jae
sarl
xchg
sahf
pop
jae
inc
pop
scas
lcall
sbb
es
fs
mov
sbb
mov
gs
ror
pop
dec
iret
xchg
push
rcr
jmp
xor
jne
push
jnp
imul
incb
xor
push
aam
push
inc
adc
fwait
mov
inc
adc
popa
je
jge
or
daa
and
push
in
add
leave
rorb
adcb
push
inc
mov
xchg
sti
mov
call
lret
xor
pop
rolb
cs
mov
fsub
sbb
int
pop
in
shrb
inc
rol
popa
cs
stos
test
flds
xchg
inc
aam
decb
push
addr16
sub
sbb
xor
fsts
jp
std
push
inc
pop
dec
lahf
add
cmpsb
inc
insl
lcall
fcmovnu
fbld
mov
add
popa
mov
std
rcrb
and
mov
into
pop
lods
sbb
xor
inc
aad
movsb
lea
out
icebp
add
imul
push
fwait
ja
and
adc
inc
out
daa
imul
mov
xor
mov
add
dec
cmp
jns
movsl
fimull
adc
into
and
inc
jl
aaa
scas
fs
loop
mov
insb
imul
adc
dec
inc
jb
xor
pop
add
jmp
xor
adc
xchg
jg
ja
push
xor
andb
mov
popa
jg
fdivl
idiv
mov
fisubs
pop
out
sbb
mov
sbbl
adc
dec
pushl
aas
filds
in
sub
fs
mov
pop
push
push
dec
add
ljmp
iret
push
sub
fbstp
mov
subl
cmp
sbb
sub
pop
pop
stos
push
call
int3
in
sbb
insb
push
outsb
mov
sbb
push
stos
in
testb
jge
jl
jnp
daa
cmpl
sub
loopew
enter
loope
fsubs
pushf
sub
mov
xor
js
sub
sub
sar
mov
push
adc
or
adc
into
jnp
jge
sbb
inc
repz
jge
dec
pushf
push
jbe
adc
dec
pushf
jns
aaa
out
mov
cmp
adc
pop
cmp
mov
ficompl
jb
addr16
cmp
fsubrs
rorl
dec
or
aaa
mov
mov
pop
pop
xchg
ret
mov
sub
xchg
scas
cmp
adc
pop
sbb
inc
adc
xor
jmp
inc
mov
xchg
jecxz
add
mov
sub
scas
jno
in
pop
mov
fidivs
out
das
nop
stos
push
int
cld
and
and
sub
ss
in
scas
lahf
repnz
mov
adc
xchg
mov
push
fldt
mov
rep
fcoml
jge
jb
jge
push
jne
xchg
xchg
push
lahf
pop
lds
dec
jno
iret
sbb
mov
in
loop
out
and
add
ret
mov
push
or
fistpl
xor
repz
lret
aaa
nop
adcb
push
pop
test
or
mov
js
cmp
cmp
dec
jns
sbb
or
es
or
push
xor
mov
jo
mov
popf
xor
inc
xchg
loope
xlat
mov
dec
out
in
cmp
pusha
add
stc
and
xchg
mov
fisubs
push
cmpsb
sbb
mov
in
lret
sahf
mov
jecxz
jp
sbb
mov
jg
xor
push
push
cmp
icebp
adc
sti
ret
lea
or
inc
inc
pop
dec
data16
cmp
mov
imul
int
dec
jmp
fwait
pop
lods
push
sub
xlat
shlb
gs
fisubrs
pop
xchg
gs
loop
sbb
lahf
push
ret
jb
mov
cmp
lret
pop
rclb
lcall
sub
jne
daa
adc
test
pop
dec
sub
xchg
enter
jp
cmp
dec
jmp
jbe
lcall
jle
out
js
dec
sbb
lret
out
xor
push
pop
movsb
movsl
pop
add
insb
gs
inc
adc
and
addl
add
int3
fs
dec
pop
adc
mov
mov
int
adc
test
es
cmpsl
imul
sub
pop
mov
jle
push
and
sbb
dec
adc
std
fucomi
inc
cmp
adc
lahf
and
pop
cmp
inc
movsb
jl
mov
sub
pushf
cmp
jl
pop
sbb
jge
inc
mov
push
jge
pop
popa
into
fst
push
xchg
push
push
push
push
hlt
lahf
mov
shrb
aam
and
sbb
cmp
jmp
push
mov
out
add
mov
and
popf
push
push
std
out
call
fdivp
aas
jno
dec
jo
pop
lahf
lret
push
push
lret
rcll
pop
cmp
cmpsb
lahf
add
push
push
mull
clc
inc
adc
shrl
mov
or
add
dec
je
add
enter
xchg
push
pop
adc
sub
pop
cwtl
cld
add
pop
pop
mov
sub
sbb
sub
out
xchg
jne
or
testb
xor
js
lcall
pushf
packsswb
sbb
movsb
std
jnp
lcall
jo
or
dec
or
pop
mov
mov
cmp
mov
sbb
dec
mov
push
xchg
int
mov
imul
punpckhdq
xchg
xor
sub
and
aaa
dec
or
mov
push
int
add
adc
dec
push
dec
aaa
movsb
sbb
pop
out
stos
mov
pop
xchg
js
adc
xchg
jecxz
dec
int
push
idivl
dec
mov
into
lea
je
xchg
movb
int3
add
dec
inc
lcall
add
movsl
mov
jb
mov
add
push
cmpsl
loope
xchg
mov
or
shlb
sub
sub
push
cmpsl
push
or
add
fs
jmp
aas
pop
adc
mov
cmp
xchg
mov
orb
lahf
mov
scas
xor
repz
scas
pop
in
movl
and
outsb
sub
lret
push
jae
cltd
popa
cmp
inc
pop
shll
push
sub
inc
sbb
cltd
bound
fcompl
ss
or
adc
lods
dec
imul
push
int
into
outsl
pop
mov
jmp
push
jle
xor
jb
aad
rcll
cmpsl
xor
sbb
outsb
movsl
xchg
cli
pop
mulb
jno
ljmp
or
xchg
out
inc
mov
mov
jnp
subb
in
pusha
push
notl
cmp
rol
fadds
push
add
dec
daa
or
adc
add
call
add
jmp
mov
sub
cmp
pop
insb
xchg
hlt
adc
outsb
push
je
pop
pusha
mov
int
inc
leave
les
mov
and
jge
rolb
jb
lods
jae
push
test
lcall
mov
aas
imul
nop
jecxz
jp
out
or
jg
jae
lahf
mov
xchg
inc
shll
pop
pusha
js
or
imul
repz
mov
mov
orb
push
dec
mov
jg
imul
js
jle
and
sub
rorl
dec
mov
and
add
lsl
ficoml
lods
das
inc
sbb
in
jl
fldt
cwtl
pop
pop
add
jne
sub
sub
add
jbe,pt
int3
pop
jg,pt
xlat
sarb
dec
in
mov
sti
jmp
cmp
xchg
mov
jbe
mul
test
dec
cmpb
mov
mov
mov
cmp
fidivs
pop
sub
in
xor
pop
jno
and
dec
pop
cmp
mov
xor
mov
fs
and
cmp
outsb
sub
and
testb
pop
and
or
jns
stc
mov
cmp
and
lds
or
scas
mov
decl
cli
out
mov
sarl
xchg
repz
fadds
or
xor
and
adc
fsts
fists
and
pusha
int3
lahf
outsb
inc
outsl
jns
jp
cmc
repz
xchg
or
push
in
or
push
mov
faddl
sub
or
adc
outsb
cltd
jo
xchg
cmp
xchg
add
xchg
add
fcompl
bound
outsl
and
arpl
cmp
jno
cs
dec
push
ja
es
js
push
push
insl
pop
and
fwait
cmp
mov
sub
mov
sti
mov
cmc
vcvttss2si
imul
hlt
xchg
mov
pop
fistpll
xor
pop
jl
mov
ret
stos
mov
push
inc
push
pushf
mov
ret
in
lea
adc
scas
sub
jg
or
adc
xchg
nop
ss
jmp
daa
mov
aas
pop
aaa
out
test
ss
pop
and
cs
add
add
