push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
push
mov
sub
mov
push
push
push
push
mov
movl
call
andl
movl
mov
movl
mov
mov
movl
mov
mov
mov
mov
mov
imul
xor
add
incl
mov
push
push
mov
call
mov
mov
mov
mov
mov
xor
mov
div
mov
mov
mov
mov
sub
not
add
xor
mov
mov
incl
add
cmpl
jb
cmpl
je
mov
mov
jmp
push
call
mov
mov
mov
xor
push
push
push
push
call
movl
mov
push
shl
push
add
incl
push
push
call
mov
mov
test
je
push
call
mov
push
push
call
mov
call
add
cmpl
je
cmpl
jne
lea
push
push
pop
add
xor
div
push
pushl
push
call
mov
push
push
push
push
call
lea
mov
lea
add
lea
add
mov
mov
mov
mov
and
call
mov
mov
mov
call
mov
mov
push
push
mov
xor
push
push
mov
mov
call
mov
lea
push
push
push
lea
push
pushl
movb
pushl
movb
push
call
push
push
push
call
mov
call
mov
call
test
je
pushl
mov
pushl
pushl
pushl
call
cmpl
mov
jne
push
call
test
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
mov
push
mov
sub
mov
push
mov
push
push
lea
mov
call
lea
xor
call
test
je
test
je
cmpb
je
mov
push
call
mov
push
mov
call
mov
lea
push
call
mov
test
je
push
push
push
push
call
add
push
call
test
je
push
push
push
call
mov
test
jge
push
push
push
call
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
call
mov
mov
pop
pop
pop
call
leave
ret
push
mov
push
push
mov
imul
push
mov
cmp
jb
mov
push
call
mov
add
imul
push
xor
pop
div
mov
mov
mov
mov
sub
mov
test
je
mov
sub
push
mov
call
xor
divl
mov
add
cmp
jae
mov
mov
imul
xor
divl
xor
mov
sub
imul
div
mov
cmp
jae
mov
sub
push
pushl
pushl
call
add
add
add
add
cmpl
jne
pop
pop
pop
leave
ret
mov
mov
ret
push
mov
sub
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
jne
inc
jmp
andl
push
push
lea
lea
cmpl
mov
je
mov
jmp
mov
mov
add
xor
nop
movb
mov
mov
inc
cmp
jb
mov
test
je
lea
movsbw
mov
add
inc
mov
test
jne
lea
push
call
mov
test
je
mov
add
andl
cmpl
je
mov
mov
mov
test
jns
and
jmp
add
add
push
pushl
call
mov
test
je
incl
mov
lea
cmpl
jne
mov
incl
mov
imul
add
lea
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
push
mov
testl
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
pop
ret
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
test
je
andl
mov
sub
add
mov
mov
mov
lea
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
cmpl
mov
je
or
sub
mov
mov
sub
add
mov
mov
mov
lea
push
push
push
call
mov
mov
mov
sub
add
mov
movzwl
add
lea
movzwl
lea
mov
mov
mov
andl
xor
cmp
jae
lea
mov
mov
addl
push
lea
pop
rep
mov
add
movzwl
add
incl
cmp
jb
mov
mov
add
pop
mov
xor
pop
inc
pop
leave
ret
mov
push
mov
push
mov
xor
mov
test
movl
je
push
call
pushl
call
mov
xor
inc
pop
pop
ret
mov
mov
mov
mov
rol
imul
add
mov
mov
mov
ret
push
lea
sub
mov
push
push
push
push
push
push
mov
call
push
push
call
test
je
push
xor
push
call
push
mov
call
mov
cmp
je
lea
push
push
call
mov
mov
mov
mov
push
push
mov
call
cmp
jne
movl
push
push
call
push
push
mov
call
xor
cmp
setl
mov
mov
cmp
mov
je
mov
cltd
sub
sar
mov
push
push
call
mov
neg
sbb
and
add
push
mov
call
push
mov
call
movzwl
push
call
pop
pop
push
push
push
call
push
push
push
call
push
push
lea
push
call
lea
push
call
mov
mov
mov
movzwl
xor
jmp
cmp
jne
cmpw
je
inc
inc
mov
cmp
jne
jmp
xor
inc
lea
push
movl
movl
call
mov
push
pushl
call
push
push
push
push
push
pushl
mov
call
cmp
mov
mov
jne
xor
push
pop
lea
rep
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
movl
movl
movl
mov
movl
movl
call
test
je
mov
push
mov
imul
cltd
pop
idiv
push
push
mov
mov
add
mov
lea
mov
mov
shl
mov
lea
push
call
mov
mov
sub
sub
mov
cmp
mov
mov
jle
mov
push
pushl
neg
push
push
pushl
sbb
push
push
push
and
add
push
push
push
push
call
cmp
mov
je
lea
push
call
push
push
push
pushl
call
test
jne
call
xor
jmp
call
pushl
call
pushl
pushl
call
pushl
call
push
pushl
call
mov
xor
cmp
sete
push
call
cmp
je
call
cmpl
je
cmpl
je
push
push
push
pushl
call
xor
inc
pop
pop
pop
add
leave
ret
push
call
pop
ret
mov
push
mov
sub
mov
push
push
push
mov
mov
mov
push
mov
lea
push
pushl
pushl
call
lea
xor
test
je
push
push
push
call
add
test
je
push
add
push
call
inc
pop
add
cmp
pop
mov
jl
mov
mov
pop
pop
mov
pop
call
leave
ret
push
mov
mov
mov
mov
mov
mov
cmp
jb
push
push
mov
mov
mov
lea
xor
test
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
mov
mov
lea
ror
lea
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
mov
inc
cmp
jb
pop
pop
pop
ret
mov
push
mov
xor
cmp
jne
mov
jmp
mov
push
mov
mov
test
je
mov
inc
inc
decl
jne
cmpl
pop
jne
dec
mov
movb
pop
ret
jmp
mov
push
mov
push
mov
test
je
push
mov
test
je
andl
push
call
push
call
push
call
test
je
push
call
push
call
mov
push
call
push
call
pop
pop
pop
ret
jmp
push
mov
sub
mov
mov
mov
sub
mov
je
mov
test
je
push
mov
add
test
je
push
push
mov
sub
mov
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
addl
decl
jne
mov
test
jne
pop
pop
pop
xor
inc
leave
ret
push
mov
sub
push
push
mov
xor
cmp
je
mov
cmp
je
cmp
je
cmp
je
add
push
lea
push
push
call
mov
add
add
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
sub
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
mov
mov
lea
ror
mov
lea
add
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
cmp
jb
mov
mov
test
je
mov
sub
mov
mov
inc
dec
jne
pushl
mov
pushl
pushl
pushl
pushl
call
mov
mov
mov
call
mov
add
push
pushl
pushl
pushl
call
add
pop
jmp
xor
pop
pop
leave
ret
mov
push
xor
cmp
je
cmp
push
mov
je
push
call
jmp
push
push
push
pushl
call
push
push
push
pushl
call
push
push
push
pushl
call
pop
pop
ret
push
mov
sub
push
lea
push
push
movb
call
lea
push
call
add
cmpb
jne
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
mov
jmp
mov
leave
ret
add
cmpsl
inc
mov
jle
aad
push
or
xchg
addb
adc
xor
adc
inc
jne
iret
push
xor
aad
ret
aam
stos
sub
loopne
loope
imul
and
dec
pop
stos
or
leave
pop
sub
fists
popf
out
jne
cmp
fsubrp
fisttpl
enter
mov
jno
int3
ret
sti
negl
mov
lods
mov
jo
jg
cmp
lahf
insb
fdivrl
xchg
fabs
dec
dec
loop
pop
outsl
lcall
push
mov
add
notl
add
add
cmp
insb
jl
mov
cmp
movsb
pop
js
adc
mov
mov
cmp
adc
push
pop
mov
aam
into
in
cmp
xchg
pusha
pushl
andb
jnp
mov
sub
push
push
fdivs
fcomps
xor
cmc
mov
jo
or
cli
inc
pop
sbb
cmc
add
and
sub
popa
inc
jne
stos
mov
add
adc
cltd
inc
or
outsl
lcall
int
cwtl
cmpsl
in
push
push
fs
cli
test
fldl
lods
push
xor
in
push
jl
dec
pop
sbb
lret
sub
je
sarb
pop
xchg
add
ret
fs
cltd
mov
dec
jo
notl
ret
cmpsl
aad
fiaddl
add
add
dec
mov
ds
outsl
loopne
xchg
mov
jno
imul
arpl
add
into
imul
pop
lods
and
popf
mov
pop
and
sbb
ja
pop
andb
inc
add
inc
dec
shrb
enter
mov
sub
lods
sti
pushf
push
jae
pop
data16
adc
movsl
or
inc
cmp
push
add
das
add
mov
pop
mov
ret
rcll
jne
aaa
inc
popf
pop
push
adc
pop
out
stc
jl
sub
aas
jnp
insb
leave
pop
and
into
dec
fsubr
daa
mov
fnstenv
sub
shrb
mov
add
divb
adc
leave
inc
dec
sarl
xlat
mov
mov
mov
adc
push
dec
cmp
jno
inc
push
cmp
jl
addr16
xchg
icebp
push
xchg
fnstsw
mov
dec
mov
jle
jecxz
sub
add
add
sbb
add
mov
and
mov
addr16
loope
mov
adc
cmc
outsl
lods
lock
in
mov
dec
jae,pn
sub
ljmp
enter
pop
stos
je
decb
xchg
cmp
or
scas
out
pop
lea
xlat
sub
add
mov
or
xor
or
add
add
ror
je
inc
xor
mov
add
sub
pop
mov
pop
push
hlt
vmovntpd
push
add
cltd
xchg
stos
xchg
or
mov
pusha
mov
push
in
xchg
in
daa
mov
xchg
clc
mov
jmp
sub
mov
dec
les
or
inc
push
leave
rorb
mov
imul
mov
mov
scas
repz
imul
add
push
lea
sahf
scas
movsl
dec
fimuls
test
xchg
pop
sbb
out
sahf
or
jg
push
enter
sub
sbb
mov
xchg
jno
js
ss
adc
aas
into
jle
mov
push
xor
in
mov
jp
sbb
push
pop
test
int
or
sbb
sbb
dec
and
popf
roll
sbb
push
pop
push
inc
pop
mov
pop
fisttpll
add
add
add
xchg
pushf
jecxz
syscall
fcmovnb
push
sbb
fildl
shrb
or
bound
mov
int3
out
nop
xchg
dec
ret
mov
test
out
notl
js
sbb
dec
dec
out
cs
push
ret
and
andl
fnsave
adc
push
xchg
dec
aam
sub
dec
idivl
adc
cli
cltd
mov
ss
shll
sarl
add
inc
ret
mov
add
mov
rcll
movsl
push
pop
stc
sub
mov
cmp
es
popa
movsl
push
aaa
add
fimull
xor
xor
pop
jno
add
mov
inc
sbb
sub
lahf
movsl
mov
cmp
sub
inc
push
cld
test
pusha
test
dec
inc
mov
push
out
ds
jge
inc
imul
mov
pinsrw
outsb
jo
cmp
push
or
mov
dec
jb
inc
xchg
andl
cmp
inc
add
pop
jg
jecxz
push
xor
fstl
std
xchg
mov
sahf
pushf
loop
aaa
ret
or
mov
iret
xlat
popf
jl
inc
cltd
xor
cmpsb
adc
dec
filds
pop
es
movsl
dec
jno
fldt
lret
or
and
shlb
pop
aaa
cmc
xor
fildl
add
movsb
add
je
pop
sbb
sub
add
insl
push
or
inc
sbb
lahf
orl
lahf
addr16
je
or
cmp
xlat
xchg
mov
fcomp
add
rcrl
adc
add
sbb
in
push
add
ror
xlat
fsub
xchg
add
je
lret
test
and
sub
aam
push
dec
mov
add
xor
inc
data16
cs
fimuls
jge
mov
iret
or
sub
cld
xchg
pop
add
aaa
inc
sbb
lcall
cmc
or
icebp
adc
mov
js
sub
jae
jnp
shr
xchg
mov
sahf
xchg
push
mov
into
xchg
mov
mov
mov
ficoms
shl
pusha
ss
scas
sarb
add
add
loop
and
adc
sahf
cli
pop
inc
pop
negb
test
pop
xchg
sbbb
ret
or
mov
pop
pop
jnp
inc
aaa
imul
imul
lea
outsl
push
andb
mov
scas
xchg
cli
ljmp
jno
sub
dec
rorb
xchg
pop
dec
xorb
iret
and
cmpsl
cmp
push
inc
aaa
inc
adc
add
xchg
sub
sub
pop
pop
fsubrs
popf
test
jle
orb
filds
negl
es
push
pop
jecxz
mov
cmp
xchg
movsl
int3
push
and
adc
js
sbb
jbe
sbb
setae
addr16
mov
cwtl
sbb
ret
imul
pop
fisttpl
jl
jmp
ja
fwait
adc
shufps
jno
sub
popa
sbb
popf
ret
scas
cld
sub
mov
xchg
loopne
sbb
mov
js
jno
movsb
push
ja
mov
inc
cmp
sbb
xlat
sub
popf
lds
dec
popa
outsl
pop
lock
or
sahf
inc
imul
dec
aas
xchg
lock
dec
xchg
loop
pop
or
push
pop
addl
xchg
int
push
push
xchg
mov
xor
out
movsb
xlat
lahf
jb
lods
jnp
add
mov
sbb
adc
aad
pop
inc
popa
add
xchg
and
repnz
fldl
nop
inc
xor
repz
shrl
pop
fmul
ret
mov
jl
jmp
ror
xchg
es
not
push
jmp
or
test
jecxz
mov
pop
fcoms
cmpsl
iret
xor
add
jae
lds
xor
outsl
mov
andl
add
add
dec
test
inc
xor
orl
fs
sbb
dec
jle
aas
mov
inc
out
bound
jmp
sub
jle
lock
rcl
loopne
lea
cmp
lods
loopne
mov
sbb
or
loope
rorb
out
movlps
jno
addr16
test
fdivl
iret
add
xor
mov
jbe
shll
jne
aas
repnz
pop
popl
add
add
xor
and
sub
rclb
fs
pop
fdivs
in
fldt
push
push
mov
cmpsb
add
or
fnstcw
sub
arpl
mov
stos
ss
jmp
pushf
and
pop
js
adc
negl
repz
imul
popf
scas
scas
ror
sbb
jno
fiadds
jg
sahf
push
aaa
push
sbb
das
mov
or
push
ret
pop
ss
jae
xchg
lret
push
fsts
mov
cld
lds
xchg
mov
mov
stos
xchg
lock
add
push
stos
pop
out
sbb
repz
xchg
std
sub
cmp
ret
out
sub
lcall
push
push
inc
lods
fucom
mov
rclb
imul
pusha
xlat
arpl
test
jl
jg
inc
call
sub
leave
cmp
inc
fsubrs
stos
add
fadds
sbb
push
stos
dec
or
push
inc
int
xor
ret
in
in
pop
leave
gs
insb
gs
fiaddl
std
xchg
dec
cwtl
int3
add
push
fisubrl
jle
mov
sub
call
movsl
or
cli
jge
push
insl
mov
pop
aaa
mov
imul
jbe
enter
jge
pop
rolb
add
icebp
push
ror
mov
xlat
mov
xchg
lret
mov
andb
icebp
out
stos
addr16
lock
add
jp
lods
dec
stc
rcll
pop
loop
adc
movsb
push
jnp
out
mov
arpl
enter
push
pop
das
aad
and
dec
adc
dec
les
cmp
pop
sbb
xchg
push
movsl
test
and
mov
jle
inc
mov
ret
xchg
add
mov
ret
push
pop
sub
cli
aas
inc
pop
bnd
cmpl
cmpsl
pop
imul
pop
inc
dec
lret
std
gs
jecxz
arpl
jbe
lds
sub
in
push
dec
mov
test
stos
cltd
inc
or
adc
sub
or
call
cmc
aam
aad
data16
adc
xchg
jnp
xchg
cmp
jecxz
jp
lock
andb
adc
clc
gs
xchg
movsb
insb
mov
add
inc
or
push
stos
jmp
stos
or
out
lahf
loop
data16
pop
mov
adc
lock
lock
ret
jmp
pop
and
shr
in
push
or
pop
out
enter
lods
fstps
clc
adc
cmpsl
clc
int
pop
fwait
pop
jo
adc
mov
mov
or
std
outsb
mov
push
xchg
inc
push
pop
filds
add
rorb
mov
push
js
cld
lcall
fcomps
ret
dec
sub
jmp
imul
pop
push
cmpsb
jmp
pop
dec
mov
out
adc
push
arpl
jp
mov
add
aam
rorb
ja
decb
mov
pop
mov
nop
jg
sti
pop
xor
cmp
daa
repz
and
xchg
out
pop
or
repnz
add
add
popa
adc
sub
xchg
es
in
mov
xchg
xchg
push
ss
lods
fcmovnb
enter
je
sti
imul
cmpsl
cmp
inc
and
test
inc
push
push
iret
dec
mov
jmp
mov
pushf
inc
idiv
std
mov
mov
repnz
out
mov
or
inc
cmp
mov
icebp
add
xor
cmp
mov
adc
subl
jmp
xchg
and
movsb
es
sub
and
or
adc
pop
out
loopne
fcomp
negb
fbld
xchg
enter
and
ja
dec
push
in
and
jno
repnz
in
xchg
sub
and
add
call
movsl
iret
sub
adc
mov
and
and
pop
xor
mov
xorl
jbe
lods
dec
xchg
jecxz
lock
bound
or
pop
sub
push
push
fnstenv
or
xchg
addr16
add
push
bound
enter
das
dec
nop
jecxz
sbb
xchg
cld
push
inc
cmp
and
dec
xor
js
xchg
cmp
add
add
fsub
dec
jae
mov
add
adc
push
xchg
xchg
lret
fucom
in
popf
stc
pop
cwtl
push
les
stos
fnstenv
hlt
fstpt
and
mov
push
lea
dec
out
lods
inc
dec
mov
adc
xlat
pop
ljmp
insl
cmpsb
fdivrp
push
push
mov
ret
and
jae
loop
je
int3
or
sub
out
push
pop
loope
shll
in
dec
or
pop
sar
outsl
push
lods
pop
add
inc
iret
mov
xchg
adc
inc
xor
pop
mov
in
fbld
pop
mov
gs
cmp
daa
sbb
sub
adc
sbb
mov
xor
aam
cmp
fistl
aam
mov
inc
jge
push
adc
lods
rsm
fsubs
dec
adc
sub
aam
je
jnp
sahf
add
or
popa
push
sbb
flds
cmpsl
xchg
sbb
ret
movsl
mov
and
cmp
pop
rcrb
add
add
dec
stos
xchg
push
outsb
mov
mov
xchg
cs
rol
mov
jmp
xor
cmpsl
das
insb
or
sbb
enter
mov
jp
dec
inc
mov
pop
inc
std
xchg
ret
mov
mov
addr16
sub
sub
popf
insl
daa
pushf
jne
mov
fs
sahf
inc
pop
out
cmp
push
out
fimuls
pusha
xchg
push
pop
or
fcomps
mov
add
add
enter
push
fcompl
pop
xchg
xchg
adc
rclb
mov
rorl
lret
pop
sub
dec
add
jge
or
xchg
ficoml
ret
loope
rcrb
in
xchg
sub
or
outsl
das
xlat
or
in
cmc
outsb
dec
and
imul
and
xchg
aad
mov
lea
or
enter
xchg
mov
ret
psubsw
pop
sahf
hlt
cld
pop
sbb
out
out
dec
mov
push
xlat
inc
and
int
mov
and
in
imul
push
fstp
push
xchg
mov
or
sub
lds
pop
or
mov
jge
aad
lods
and
icebp
jo
adc
add
cmpsb
data16
push
jb
cmc
and
sub
sar
xchg
jle
mov
int
cli
cmp
sbb
add
add
test
pushf
clc
xchg
xchg
mov
xor
xlat
paddd
pop
imul
cmp
dec
sti
inc
inc
fildl
rorl
sarb
adc
pop
sti
adc
dec
inc
in
dec
pop
adc
adc
add
jb
or
add
lcall
leave
movsb
adc
mov
and
xor
unpckhps
insl
arpl
or
add
pop
jnp
pop
inc
rol
or
sub
inc
xchg
adc
push
xchg
sbb
push
in
jp
test
int
fwait
mov
mov
lock
ja
inc
mov
push
andb
aad
pop
adc
arpl
fdivrs
cmp
jbe
loopne
add
xchg
sahf
xchg
lahf
add
addl
or
loop
ja
fcomi
mov
add
add
in
enter
movsb
xor
notb
xchg
cmp
in
mov
jae
out
adc
rclb
call
aas
mov
xchg
dec
call
pop
iret
into
test
in
add
mov
pop
mov
jge
inc
aam
out
outsb
dec
out
push
stos
clc
and
inc
test
dec
movsb
fsubrl
std
and
sbb
add
loopne
lods
fistl
xorb
push
jo,pt
add
out
popf
mov
in
push
mov
sahf
xlat
test
mov
rcrb
mov
addr16
nop
popa
stos
mov
fsubr
cmp
fsubrs
or
add
filds
push
arpl
and
mov
je
pop
jp
xor
sbb
cmpsb
xchg
sti
sbb
stos
popa
ret
loope
mov
test
add
nop
dec
test
push
jg
in
ja
or
xor
jmp
or
insl
insb
loope
adc
xchg
js
xor
jge
dec
push
fwait
test
sub
pop
sahf
clc
mov
jge
fs
iret
into
outsb
fistps
mov
lea
add
ljmp
push
dec
sub
jnp
pusha
out
pusha
stc
popl
xchg
add
add
addl
stos
cli
lret
shrl
adc
in
lods
cmp
mov
pushf
fs
fs
or
mov
in
fs
fcomps
and
pop
mov
xchg
mov
shrb
sub
popf
inc
pop
icebp
mov
pop
pop
stos
fcomps
or
adc
jp
imul
in
les
jl
leave
pop
repnz
pop
or
jmp
adc
add
add
or
test
movsl
outsl
daa
mov
test
imul
jle
mov
int3
loop
mov
push
sbb
cs
dec
fstp
add
addl
add
aas
insl
ss
xor
pushf
jp
out
subb
cwtl
adc
xlat
imul
rorb
and
movsl
stc
bound
ds
adc
jg
pop
add
mov
lods
scas
lock
mov
inc
fstp
iret
xor
mov
dec
inc
fcomi
jno
loope
dec
pop
dec
mov
repz
fwait
inc
xchg
mov
scas
aad
xchg
sbb
pusha
movsb
repz
inc
or
sub
mov
jnp
out
fistpl
mov
mov
imul
lahf
jnp
adc
mov
gs
icebp
add
jns
cmc
lods
xor
int
fildl
add
add
outsb
sbb
fisubrl
fadd
ss
jno
out
inc
mov
xlat
hlt
pop
xchg
mov
sub
fwait
test
clc
mov
dec
mov
insl
je
xor
pcmpeqw
pop
sub
xor
or
in
rcl
addl
leave
pop
notb
push
in
pop
test
call
stos
pop
cmp
sbb
lret
in
sub
add
loopne
into
mov
repnz
fidivl
sub
jns
fidivl
mov
jecxz
ret
mov
lods
mov
rorl
bound
dec
out
std
cmp
sbb
cmp
jno
sti
aam
je
enter
pop
scas
jbe
aam
cmp
cmpsb
inc
add
clc
inc
int3
add
std
or
cmp
aas
jae
fsts
insb
pop
mov
popa
mov
push
adc
cmpsb
dec
scas
xor
adc
pop
add
rep
movsl
dec
pop
mov
js
xorl
in
mov
xor
xor
add
ret
or
pop
cwtl
mov
test
cmpsb
fs
xlat
xchg
jne
mov
in
add
rclb
pushf
jno
sbb
jl
dec
push
addb
in
flds
lret
sub
mov
gs
lods
out
cs
xor
inc
jle
push
lds
mov
add
fimuls
js
test
or
sbb
add
rcrb
push
cmpsb
add
add
push
out
aas
xlat
jle
fcmovne
shll
jg
jl
scas
cmp
mov
out
stos
pusha
mov
dec
loope
jge
repnz
jae
hlt
int3
loopne,pn
mov
push
add
pop
iret
jge
repnz
sub
inc
loope
jmp
or
cmp
add
add
scas
add
adc
stos
mov
bnd
test
in
ss
outsb
ret
xor
outsb
xlat
lea
mov
pop
rcll
insl
ljmp
push
mov
pop
cld
clc
or
inc
sbb
mov
add
or
add
adc
jl
dec
pusha
fbld
mov
mov
in
js
movsb
orb
fnsave
push
xchg
insl
xor
mov
add
inc
sbb
stos
in
mov
stos
add
mul
outsl
cmp
mov
xor
jno
addr16
enter
xor
lcall
test
push
stc
fisttps
bound
sbb
mov
cmp
adc
sub
leave
mov
fnstenv
repnz
in
push
jb
mov
xlat
cmp
push
cmp
insb
xchg
mov
call
pop
mov
add
stos
psubq
lret
xchg
push
js
lret
or
push
xor
popf
add
jl
cld
cwtl
repz
push
inc
push
fwait
outsb
inc
xchg
jmp
xor
clc
dec
xor
pop
add
mov
out
add
inc
vpminsw
mov
and
pop
aad
std
and
xor
cmpsl
mov
jo
sbb
insb
test
aad
arpl
cmp
pop
cmp
add
add
add
mov
or
jb
je
pop
lods
stos
sti
mov
je
mov
aad
lea
pop
data16
mov
sub
mov
mov
jo
adc
arpl
pop
xchg
mov
std
jns
sub
js
push
pop
out
in
xchg
add
lea
flds
in
inc
xor
mov
loop
aam
xchg
int3
loope
mov
xchg
dec
jne
push
jo
push
icebp
inc
lods
out
inc
idivl
push
imul
les
sub
mov
cli
loopne
mov
lds
jo
add
sub
out
pop
xor
inc
cltd
dec
cs
movsb
inc
jne
dec
inc
mov
pop
or
das
lret
xchg
adc
xchg
inc
nop
mov
xor
fcomp
adc
inc
jns
repnz
mov
gs
or
pop
mov
jmp
push
daa
inc
dec
pop
dec
push
popf
test
cld
incb
ret
lcall
add
push
dec
or
stos
xchg
fidivl
data16
push
fists
out
or
iret
jmp
sub
or
movsb
or
repnz
loopne
xchg
push
mov
cld
test
roll
xor
sarl
out
not
and
dec
push
sbb
imulb
and
lcall
test
jbe
cld
cltd
lods
fs
scas
test
push
jb
add
xor
out
shlb
insb
jg
mov
fnstcw
sub
xlat
push
xchg
mov
inc
dec
mov
sub
in
andl
jg
adc
shlb
adc
inc
xchg
ret
ja
das
xorl
enter
xor
xchg
nop
repnz
enter
loop
in
push
test
aad
inc
xor
jmp
dec
gs
sbb
adc
imul
pop
ss
repnz
daa
dec
nop
lods
ljmp
add
jo
dec
add
mov
cld
xchg
je
mov
or
mov
adc
xchg
repz
sahf
jmp
fldl
sub
sub
mov
ljmp
aaa
jg
jmp
push
mov
inc
stc
out
rcl
mov
pop
push
jb
int
add
mov
addr16
les
jnp
sbb
sub
add
sbb
pop
dec
clc
loopne
jmp
xchg
pushf
or
jnp
sub
sub
fwait
nop
sarb
sbb
mov
lret
jnp
lret
pop
xchg
sbb
push
into
jmp
sub
lods
push
push
mov
mov
call
out
lea
mov
leave
rcrb
addr16
daa
mov
xchg
nop
imul
xchg
f2xm1
pop
inc
sub
jbe
rcrb
mov
out
lods
imul
mov
adc
les
test
adc
ss
rcrb
ja
int
lcall
test
fdiv
loop
fwait
vcvtss2sd
clc
mov
xchg
imul
add
mov
shld
ss
fidivs
int
mov
jb
inc
mov
rorb
mov
fildl
mov
mov
jae
dec
lds
add
int
cmp
push
jae
shrb
sub
jno
jl
fs
scas
divb
jns
into
add
orl
xor
push
fdivrp
sbb
sbb
test
jge
sbb
cmpsb
jns
push
sbb
aad
nop
mull
cld
sbb
push
pushf
stos
inc
adc
movsl
flds
sub
cmp
dec
addb
stos
inc
out
push
addr16
outsl
in
jmp
or
mov
jmp
pop
push
push
nop
jb
dec
and
jmp
jp
gs
out
ja
lcall
or
inc
jg
int
mov
inc
dec
jle
sub
rorb
mov
pusha
fsubs
mov
loope
push
pop
sbb
in
fs
popf
pop
inc
sbb
pop
or
push
add
push
push
int
imul
test
or
test
cmp
cmp
mov
add
add
sub
pop
mov
or
inc
repnz
mov
push
dec
gs
addr16
cmp
inc
push
push
stos
add
or
es
lods
fdivl
shll
jo
mov
test
fisubs
mov
inc
mov
pop
mov
jno
outsb
jl
mov
xchg
hlt
data16
mov
push
lea
rcl
mov
push
push
fists
and
aas
and
je
xchg
jbe
aam
mov
repnz
sub
sub
push
in
or
cwtl
iret
dec
mov
imul
mov
push
arpl
add
add
ret
ja
jmp
inc
xor
repnz
or
dec
sbb
mov
and
fdivrs
mov
jbe
nop
pop
mov
jo
sbb
inc
aam
mov
aam
leave
push
xor
jge
push
mov
push
loope
sti
xchg
clc
add
mov
mov
mull
rorl
xchg
les
or
lods
jns
js
orb
push
enter
sbbb
or
or
imull
pop
mov
sbb
adc
sbb
stc
mov
lea
lods
add
mov
cmp
dec
sbb
pop
add
mov
fadd
mov
mov
lahf
addb
jmp
jno
clc
mov
arpl
fistps
pop
lret
xor
pop
stos
pop
insb
psllw
pop
cltd
dec
xor
scas
out
add
pop
int
pop
jb
ret
xor
lods
outsb
std
lret
jl
xchg
cmpsl
push
shrb
outsl
push
push
aam
jne
and
jge
jne
lahf
fbstp
mov
inc
or
add
add
xor
decb
jnp
pop
movsl
add
dec
test
adc
popa
mov
and
xchg
inc
mov
in
jns
lock
pop
and
fnstsw
sahf
rcrl
sub
dec
insb
cmpsb
sub
movsb
jp
rolb
out
loop
fdivs
xchg
sbb
add
jmp
into
jbe
mov
lock
xor
shlb
sbb
pusha
outsb
xchg
cmp
lock
pop
je
cmpb
or
push
dec
xor
ds
enterw
imul
not
add
pop
andl
cmp
sbb
outsb
dec
mov
pushw
sub
adc
ror
jmp
das
jns
les
cmp
add
mulb
int
test
xchg
pop
jl
insb
mov
push
sahf
push
outsl
sbbb
pop
dec
or
mov
jmp
xlat
mov
popa
arpl
sbb
scas
inc
cli
faddl
das
adc
and
xorl
out
mov
inc
or
ds
or
in
cmp
test
int
pop
jg
call
add
xor
test
inc
jne
mov
roll
or
push
xchg
xchg
rcrb
adc
mov
out
es
xchg
addr16
pop
sbb
fwait
scas
stos
inc
xchg
add
cmp
cmp
scas
fildll
stos
adc
xor
hlt
rcll
push
int
and
fiadds
or
sbbl
insb
pop
add
js
add
push
inc
loopne
or
loope
mov
inc
mov
mov
data16
scas
ljmp
stos
push
jge
mov
xchg
popf
push
ret
dec
loopne
pop
inc
jl
jle
add
shll
lds
std
xor
repnz
bound
into
sbb
ja
mov
mov
stc
aas
xor
test
stc
sub
sub
sbb
xor
pop
lds
cmc
ss
add
sub
push
rcr
xor
mov
in
fists
enter
and
scas
add
mov
mov
add
push
imul
pop
push
jo
sub
outsl
ss
in
inc
call
pop
lods
xchg
xchg
stc
inc
xor
ret
cli
pop
add
fnstenv
rclb
cmpsb
fstl
mov
es
stc
rcr
add
in
cmp
popa
add
test
jecxz
mov
xor
test
dec
int3
negb
repz
mov
mov
lret
and
movsl
push
push
inc
loope
mov
xchg
fdivrp
cltd
sub
jne
fildll
inc
jnp
aam
dec
mov
ret
test
out
sbb
mov
dec
xchg
in
jp
mov
ds
mov
xchg
lcall
std
pop
xor
lret
call
fldenv
cs
dec
dec
scas
mov
add
jmp
xor
pushf
sbb
or
pop
leave
enter
std
jmp
mov
adc
in
jle
push
pop
lahf
pusha
mov
loope
mov
mov
mov
cmovbe
bound
jns
ret
test
