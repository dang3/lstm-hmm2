push
mov
sub
push
push
push
mov
mov
shr
and
mov
mov
lea
push
xor
mov
and
add
rcr
mov
xor
xor
xchg
lea
rcl
xor
ret
mov
mov
xor
xchg
adc
xor
xor
rol
mov
rcl
lea
xor
shl
lea
neg
mov
not
neg
neg
mov
call
mov
lea
neg
mov
xor
shl
lea
xor
not
lea
mov
lea
rol
mov
rol
neg
neg
call
mov
not
shl
xchg
neg
mov
add
and
shl
xor
rcl
mov
neg
shr
not
lea
rol
lea
lea
push
rcr
mov
shr
rcl
and
xchg
rcr
rcr
mov
push
mov
mov
neg
mov
mov
call
push
neg
mov
xor
mov
xor
mov
adc
pop
xor
lea
ror
mov
neg
shr
and
lea
mov
neg
shr
xor
and
mov
not
and
lea
shr
xchg
rcr
lea
xor
lea
adc
mov
rcl
cmp
je
mov
lea
lea
and
or
je
mov
xor
xor
neg
not
lea
xor
ror
neg
neg
adc
xor
lea
xor
and
mov
ror
lea
mov
shl
shr
shl
xor
mov
lea
add
lea
xor
adc
add
ror
rol
lea
mov
mov
mov
lea
and
lea
xor
neg
mov
lea
not
add
xor
mov
not
xor
mov
shr
rcl
and
neg
lea
add
mov
rol
cmp
je
xor
lea
shr
add
mov
shr
mov
not
rcr
lea
mov
add
mov
adc
shl
mov
adc
neg
ror
not
xchg
mov
lea
push
call
xor
xor
mov
rcr
mov
xor
xchg
shl
xor
rcl
xor
not
lea
mov
mov
rcr
neg
not
ror
mov
neg
mov
lea
mov
lea
not
xor
movl
xor
ror
rcl
rol
movl
and
shl
mov
adc
xor
not
mov
lea
not
mov
and
mov
mov
ror
mov
not
lea
mov
lea
mov
lea
mov
neg
not
xor
rcl
mov
mov
mov
push
rcl
mov
xor
xor
not
ror
neg
rol
push
mov
mov
mov
mov
neg
not
neg
add
mov
pushl
neg
mov
lea
mov
shr
pushl
mov
rcr
adc
rcr
xchg
lea
call
xor
mov
xor
not
xchg
lea
neg
xchg
rcl
not
lea
rcl
lea
xor
xchg
add
mov
shrl
not
mov
mov
mov
add
neg
mov
shl
xor
adc
shl
xor
mov
mov
not
shl
xor
xor
rol
mov
shl
xor
push
shr
xor
rcr
mov
xchg
mov
mov
xor
xor
lea
not
mov
mov
mov
xor
shl
rol
rol
popl
xor
and
mov
xor
rol
rcl
mov
xor
add
adc
shl
neg
add
ror
mov
mov
lea
neg
and
mov
neg
xor
xor
decl
jne
not
mov
xor
xchg
rcr
mov
xchg
not
add
not
add
xchg
neg
xchg
mov
add
xor
add
mov
neg
xor
xor
not
mov
and
mov
mov
xor
shr
lea
xor
rcr
jmp
xor
adc
lea
rcr
and
neg
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
enter
ljmp
in
loopne
in
aam
in
rorb
cltd
andb
pop
and
xor
jae
popf
popa
cmp
shlb
repz
nop
xor
and
xor
sarb
xchg
int
hlt
data16
sub
mov
cmp
in
divb
mov
push
push
and
mov
fstp
aam
enter
inc
mov
test
pop
in
inc
jle
ret
sub
call
mov
inc
call
mov
bound
es
mov
and
aas
andb
or
mov
cwtl
cmp
mov
outsb
adc
xchg
flds
lods
out
movsb
stc
inc
xchg
and
aam
gs
pop
nop
xor
sbb
adc
mov
sbb
adc
cmp
jmp
and
call
aam
or
rcl
sbb
outsb
and
mov
sbb
and
in
insl
nop
ror
subl
popa
xchg
in
in
ljmp
test
and
in
ljmp
mov
outsb
dec
jbe
movsl
enter
mov
mov
in
adc
mov
or
inc
scas
sub
push
pop
push
inc
test
dec
movsb
mov
daa
inc
inc
mov
pop
test
dec
dec
xchg
movsl
enter
popaw
add
dec
xchg
movsl
enter
enter
outsb
mov
pop
inc
imul
mov
xchg
sub
jae
xchg
movsl
enter
mov
push
push
mov
pop
test
sub
pop
xor
sbb
imul
mov
loope
mov
jb
xor
adc
jae
push
xchg
add
xlat
jae
mull
jae
jle
add
xor
jae
mov
pop
es
mov
mov
push
or
mov
lds
xchg
sar
aas
add
add
sub
add
pop
aaa
shrl
mov
jl
push
mov
push
mov
loop
xlat
jae
mov
in
stos
xchg
jl
out
cli
xor
jae
popf
jge
cld
lock
jle
xor
incb
pushf
jmp
test
jmp
xorb
push
pop
shlb
push
test
mov
dec
cmp
fwait
add
push
dec
mov
pushf
fsts
addb
fdivrl
clc
das
xor
jo
mov
and
hlt
xor
jae
xor
adc
mov
mov
iret
xchg
fdivp
repz
mov
iret
out
incl
mov
clc
xchg
mov
xor
add
xchg
push
jmp
push
mov
xor
jnp
push
sub
mov
push
repz
push
pop
push
sti
mov
push
inc
sub
fs
pop
xlat
jae
inc
and
fdivs
outsl
lock
sub
xor
add
adc
inc
and
cmp
xor
popa
aaa
inc
and
enter
pop
jge
jae
sbb
out
xchg
jae
xor
pop
loope
pop
mov
mov
jnp
xlat
jae
xor
repz
test
cmc
jno
out
cmc
fs
mov
jae
sbb
aad
xorb
mov
stc
xchg
fwait
sbb
sub
iret
sub
add
sbb
shrl
mov
jl
push
mov
push
pop
call
mov
iret
jge
pop
hlt
js
cmpb
fwait
divl
xlat
jae
sbb
ror
xlat
sub
shll
xor
jo
cli
mov
xor
jae
popa
mov
mov
or
pop
or
xlat
clc
mov
pop
ds
or
ret
jae
je
ljmp
pop
xchg
xor
iret
fs
pop
jecxz
mov
or
jo
jl
jbe
jae
iret
mov
mov
out
dec
dec
aas
aam
iret
sub
mov
fdivl
divl
pop
mov
iret
sub
jecxz
xor
aas
push
addr16
xor
and
iret
in
lock
xchg
jae
mov
jno
xor
mov
xlat
jae
ret
jae
enter
mov
aam
call
xor
loope
lcall
fs
mov
ss
fwait
int
sub
inc
and
cmp
cltd
dec
jl
addl
imul
inc
jnp
jl
inc
ret
incb
mov
mov
js
mov
ss
inc
aaa
ret
jl
mov
mov
and
cmp
scas
outsb
push
mov
rcrb
mov
pop
mov
and
sub
xor
divl
aam
mov
mov
and
inc
fsubs
or
fdivl
jp
push
dec
pop
xchg
sub
and
mov
push
pushl
stos
jnp
cmp
pop
jmp
insl
sub
shlb
cmp
sbb
das
stos
mov
or
cwtl
sub
pop
es
mov
jmp
movsb
add
and
xor
jae
xor
pop
enter
hlt
xorl
xor
dec
mov
loope
nop
rcrb
jle
movl
mulb
xchg
sbb
ja
divl
aam
push
xor
jae
shlb
divl
xor
jl
pop
jae
xor
push
mov
push
mov
popa
mov
iret
mov
xor
repz
clc
setg
xchg
xchg
sti
jae
xor
not
jae
xor
clc
sarl
jo
cmp
cmp
pop
loop
fdivl
call
jae
xor
push
dec
pop
adc
mov
xor
jae
jo
clc
mov
pop
cmp
mov
iret
pop
lock
mov
jo
cmp
jmp
mov
stc
in
xor
pop
sbb
out
aas
adc
iret
sub
iret
push
dec
hlt
push
aad
incb
repnz
repnz
jb
bnd
cmp
jge
mov
jae
cmp
push
dec
xor
sbb
mov
xchg
pop
push
adc
xlat
mov
pop
jmp
aaa
mov
pop
mov
fnstcw
xchg
push
std
mov
pop
mov
mov
das
mov
fistpll
push
xchg
mov
sbb
mull
mov
fwait
jb
cmp
cmp
pop
aaa
or
jg
sub
imul
fstpt
cmc
xor
xchg
sti
cmp
fstp
jl
and
push
iret
mov
jg
imulb
repnz
cmp
out
dec
mov
xchg
adc
push
movsl
pop
xchg
inc
jns
cmp
xchg
std
cmp
je
xchg
lock
pop
popa
out
es
pop
jmp
xor
add
mov
or
xor
mov
icebp
fs
mov
je
fcoml
jl
push
sbb
aas
popf
cmp
mov
cwtl
pop
xor
fwait
ret
lret
sbb
mov
in
mov
decb
out
je
mov
ja
xor
ljmp
pop
ds
aas
popa
bound
pop
push
inc
daa
mov
lods
icebp
aas
jnp
mov
xor
push
push
movl
xchg
mov
in
xchg
jecxz
test
xchg
int3
aaa
div
lock
inc
or
daa
inc
test
out
push
mov
jne
fsubs
jae
btc
and
aad
test
xchg
push
sti
ja
push
jecxz
into
xor
and
stos
out
jg
mov
xor
jo
cwtl
add
xor
aas
add
push
sti
pop
shll
fs
push
push
ret
jo
int3
out
pop
cmove
push
mov
pusha
aam
movsb
mov
rorl
mov
pop
int
daa
sub
mov
and
jne
shlb
test
add
mov
outsl
xchg
fwait
leave
mov
fwait
inc
into
jne
std
lcall
mov
icebp
shll
nop
xchg
add
add
mov
ss
cmc
mov
inc
stos
daa
out
negl
jp
jg
sarb
nop
push
inc
fdivl
cld
mov
sti
leave
mov
test
jl
or
pop
or
xchg
jp
mull
mov
outsl
pop
mov
and
mov
xchg
notb
sahf
xchg
lahf
adc
fiaddl
addr16
push
iret
push
test
sub
push
aad
les
imul
mov
add
stc
int3
icebp
add
ds
jb
and
dec
mov
or
pop
inc
pop
and
xor
fldenv
je
jecxz
mov
cli
sbb
insb
ss
sbb
xor
stc
out
push
mov
xor
fwait
add
dec
dec
pop
push
mov
or
shlb
add
inc
push
sbb
inc
and
sbb
mov
mov
movb
lret
mov
and
in
loopne
jge
jne
push
add
jl
ja
stos
imul
mov
jae
cli
sub
sub
repnz
out
and
inc
jbe
arpl
pop
fistpl
add
enter
jmp
sub
jg
xchg
iret
ss
nop
xchg
sahf
in
push
jbe
and
mov
lds
or
flds
sub
es
jb
add
mov
dec
jl
popf
jge
sbb
inc
shll
ja
mov
lret
subb
jno
jo
mov
push
push
mov
mov
into
inc
outsb
xor
and
dec
cmp
rcrb
frstor
data16
lcall
mov
and
fstpl
rcrb
scas
and
push
add
outsl
lods
fidivs
into
aad
xor
das
das
xlat
push
aam
and
sub
adc
jg
pop
hlt
jg
sbb
dec
wbinvd
xchg
push
sub
loop
push
sbb
add
out
jno
aaa
ss
call
jp,pn
mov
faddl
mov
jecxz
mov
aam
ja
mov
sahf
rorb
aam
fstpt
notb
inc
add
xor
cmpsl
fdivs
mov
mov
out
push
cs
ss
dec
cld
mov
jbe
push
adc
xchg
push
bound
mov
push
out
sub
mov
sub
or
sahf
in
jge
pop
xchg
movsb
xchg
mov
scas
pop
out
cmpl
lds
js
add
xchg
ret
loope
sbb
jno
mov
das
ljmp
and
mov
sbb
jmp
fistpl
pushl
stos
xchg
xor
out
or
aaa
xor
inc
sti
aas
pusha
xor
fists
out
and
idivb
addr16
pusha
fistpl
fdivrl
testb
xor
stc
lock
jb
inc
adc
data16
jl
shrb
sub
popa
ja
jmp
add
hlt
mov
outsb
cld
xor
xor
popf
cmp
nop
mov
jmp
icebp
shrl
fs
shll
cmp
fs
jle
jns
cmp
les
sub
ja
rolb
mov
xchg
jle
imul
inc
sub
pop
push
cs
jo
es
mov
divb
imul
xor
mov
fwait
aad
pop
aas
mov
fldenv
sti
