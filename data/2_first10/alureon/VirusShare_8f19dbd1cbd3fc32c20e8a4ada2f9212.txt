lock
nop
mov
mov
dec
sahf
enter
jmp
scas
sbb
cs
jno
out
ret
mov
push
aaa
loope
sub
pop
leave
xchg
loopne
in
loopne
xchg
pcmpgtw
test
or
icebp
in
push
pop
xchg
or
mov
leave
divl
cmp
fsub
cmp
pop
sub
jmp
mov
mov
mov
stos
or
insb
test
fisttpll
pavgb
mov
adc
xlat
imul
inc
mov
inc
and
mov
or
or
mov
int3
int3
adc
pop
xchg
outsl
and
or
and
data16
loopne
test
je
xchg
sbb
cmp
jle
aad
enter
jmp
or
int
cwtl
imul
jg
jns
cmp
ret
cltd
insl
mov
push
xlat
xor
stc
xchg
ljmp
clc
fstpl
negl
xchg
push
repnz
add
sti
or
les
sbb
insb
dec
test
or
ret
mov
fwait
and
sub
xor
pop
movsl
or
int
testb
fldl
jbe
pop
ror
xchg
mov
andl
jne
arpl
xchg
insb
mov
cmp
sub
nop
add
add
xor
outsb
rcl
hlt
sub
and
pusha
pop
gs
int3
pushf
std
call
movsl
inc
jae
test
xor
cmp
and
ret
lods
xor
inc
or
cmp
inc
int
sbb
dec
outsb
mov
loop
add
jnp
mov
and
outsb
jno
add
xchg
int
mov
subl
and
sbbl
int
cltd
je
push
adc
dec
mov
xor
in
rorb
int
jno
pop
das
cmp
rcr
push
or
cmp
dec
leave
repnz
push
jge
and
cltd
lss
cld
push
fwait
movzbl
mov
mov
fadds
push
dec
mulb
jp
movsl
jp
cmc
mov
mov
mov
sub
scas
jg
fiadds
push
jg
jmp
enter
add
cmp
and
movsl
xorl
shlb
movsl
lds
in
in
outsb
insl
or
rorl
hlt
bound
cmpsb
pop
les
jle
loope
test
sub
jg
xchg
pusha
add
pop
out
mov
test
cmc
pop
fisubl
out
jb
in
ret
mov
xchg
fwait
jo
inc
icebp
push
add
out
xor
mov
pusha
sub
mov
lods
mov
mov
movl
pop
addr16
scas
mov
jns
lret
shrb
sbb
push
into
jge
sub
sarb
arpl
cmp
push
sbb
dec
lret
sub
and
push
movsb
xlat
mov
inc
lods
sbb
push
push
out
leave
nop
aam
push
inc
dec
pop
lcall
out
adc
push
int3
cmp
lods
or
loop
aas
lods
out
adc
or
mov
daa
mov
jb
test
push
sbb
out
adc
push
jmp
cmpl
out
pushf
jns
fsts
out
and
es
push
mov
leave
sbb
ljmp
mov
or
dec
in
lret
push
mov
mov
cs
hlt
jns
outsl
pushf
fadd
adc
pop
push
adc
lcall
sub
cmp
push
test
xor
leave
sbb
adc
div
scas
add
sti
fmull
inc
fmul
sbb
in
xor
mov
or
and
fwait
mov
inc
incl
inc
cmpsb
jl
inc
fdiv
jecxz
imul
jmp
push
rcrl
fdivl
pop
jge
cmp
inc
das
sbb
popf
inc
or
jbe
xchg
fs
leave
jo
lods
mov
fildl
lds
mov
push
mov
nop
dec
mov
cmpsb
gs
test
push
push
ret
imul
test
gs
pop
mov
pop
jbe,pt
data16
pop
cmp
pop
jl
cmp
mov
cmp
sbb
add
push
js
orb
xchg
jb
rcrl
adc
sub
dec
je
jecxz
xor
lea
xor
dec
push
jnp
or
mov
out
jp
xchg
sti
mov
push
out
movsl
mov
mov
bsr
test
jp
ret
mov
add
push
pop
and
mov
insb
mov
jnp
mov
test
sbb
xchg
xchg
xor
cltd
or
pop
adc
xor
call
jmp
inc
pop
jno
jle
repnz
or
cmc
inc
xor
or
cld
jnp
or
or
cmpsl
sbb
cs
lcall
outsl
cmp
sbbb
lahf
push
dec
out
rcrl
pushf
mov
or
sub
jnp
xlat
pop
and
fcompl
add
hlt
stc
addl
bound
cmp
add
je
rcl
cmp
movsb
mov
test
popf
xor
out
mov
mov
jp
sub
adc
jle
fidivl
dec
add
ja
mov
jp
ja,pt
xchg
sub
lods
scas
mov
arpl
inc
mov
mov
dec
out
and
das
and
leave
sbb
fbstp
inc
into
add
jbe
andl
into
repz
pop
sub
pop
dec
enter
dec
and
xchg
inc
xchg
sbbl
sbb
xstore-rng
cmpsl
inc
mov
icebp
lcall
sub
repnz
pushf
xchg
mov
cmp
subl
push
sbb
push
cli
jl
pop
ds
dec
lret
jl
jmp
ds
adc
ljmp
push
andb
into
mov
lret
jbe
sbb
or
popa
into
push
mov
xchg
bound
mov
lock
jge
lcall
nop
cli
push
push
loop
add
sub
add
cmp
mov
or
lcall
jg
cld
adc
xchg
ret
or
and
repz
jmp
cmp
lahf
or
jge
sbb
inc
mov
roll
mov
sub
mov
sub
sbb
sbb
lret
xchg
call
mov
pop
pop
mov
ret
inc
in
inc
pushf
dec
sbb
sub
test
add
mov
in
movsl
and
mov
ficoms
ja
inc
xchg
sbb
adc
pop
jecxz
xchg
test
push
xorl
clc
xchg
repnz
jnp
out
adc
xchg
daa
fstps
jp
jae
test
jmp
pop
ja
mov
sarl
aad
dec
adc
xchg
fisttpll
int3
or
test
pusha
or
shll
ss
inc
scas
inc
divl
inc
mov
cld
pop
popf
jp
aas
xor
std
pushf
cmpsb
ja
xor
js
adc
xor
gs
dec
loopne
stc
and
or
faddl
insl
or
push
test
into
sbb
push
sub
push
inc
stos
ret
repz
push
dec
xchg
push
mov
inc
push
mov
mov
addb
and
sahf
hlt
popa
test
cmp
dec
hlt
xor
aas
and
lock
popf
dec
pushf
pop
mov
jns
cmp
shll
jne
sti
push
push
outsb
int3
mov
xchg
out
addl
test
pop
test
cmpsl
cwtl
cmp
sbb
sub
cmc
mov
jo
mov
or
mov
jb
loopne
pop
or
adc
clc
push
push
mov
aaa
xchg
pop
and
pop
lea
sub
daa
mov
jl
mov
int
cld
sub
mov
jo
es
pop
shrl
add
js
jae
addr16
pop
jae
stos
mov
popa
cli
hlt
pushf
jge
add
dec
cld
dec
lds
mov
inc
lods
push
lock
jmp
fwait
adcb
lahf
rolb
fisubs
call
movsl
pop
lds
lds
push
and
fwait
jmp
jge
fcmovnb
cli
xchg
jge
sbb
adc
clc
jecxz
cltd
test
mov
mov
mov
lds
dec
and
add
mov
out
pop
ficompl
arpl
dec
lods
xchg
leave
adc
popf
mov
mov
iret
scas
sar
mov
push
push
push
pop
mov
ss
cli
ret
push
mov
pop
imul
pop
jge
addb
rorb
cwtl
lcall
aaa
aad
mov
mov
sbb
push
stos
cmp
adcb
jle
int3
jge
push
das
div
ror
iret
xor
cli
inc
push
in
into
cmp
test
mov
cli
shrb
and
test
cwtl
add
adc
sbb
out
or
movsb
mov
xchg
sub
rcrl
lock
jbe
xchg
xchg
add
imul
mov
jmp
fsub
push
mov
adc
cmpsb
sub
mov
pushf
cli
xchg
and
sbb
fistpl
cmp
in
xchg
xchg
addr16
mov
ss
dec
ret
jecxz
mov
jmp
icebp
xchg
jno
xchg
out
fistl
inc
lea
push
cs
dec
pop
jno
add
push
xor
push
cmp
mov
fs
or
push
dec
dec
mov
xor
dec
jp
adc
mov
jbe
lea
xchg
mov
pushf
push
mov
test
sarl
dec
fcomps
add
jb
mov
mov
js
mov
xchg
mov
addr16
aas
xchg
fstpl
arpl
cmp
add
sti
jae
or
ss
cs
mov
sub
sbb
sub
xchg
cmp
add
cmpsl
clc
fwait
xchg
sbb
andnps
mov
in
dec
outsl
adc
push
and
sbb
mov
inc
jp
mov
lods
in
push
sub
clc
fdivl
subl
fisubl
cmp
mov
mov
mov
xchg
addr16
dec
sub
inc
ds
cld
into
stc
scas
xchg
fildll
cmpsl
dec
adc
jno
sub
mov
pop
xor
adc
mov
stos
inc
popf
jae
mov
jmp
testb
jecxz
sbb
xchg
push
cmc
dec
cmpsl
push
xor
add
das
push
pop
sub
out
add
cmc
and
jmp
sbb
jno
sbb
push
mov
cmp
ss
mov
adc
pop
pop
add
neg
dec
call
std
repnz
mov
cmpsl
sahf
mov
mov
adc
lret
enter
out
stos
test
jl
imulb
dec
pop
xor
pop
sti
test
cmpsb
dec
enter
popa
je
mov
cmpsl
mov
push
pop
gs
hlt
cwtl
xor
push
adc
adc
fildll
mov
cmpsl
cli
call
fs
adc
aas
sbb
movsl
lods
cmpl
sub
mov
fadds
sbb
cmp
sub
or
dec
sub
jns
inc
adc
pushf
test
mov
ret
and
lds
pop
sbb
adc
add
aas
icebp
push
pop
aaa
mov
jne
rcl
ret
loope,pn
test
or
mov
jle
mov
mov
jnp
sbb
ret
out
in
addl
out
mov
ret
fldenv
cmc
xchg
cld
out
mov
stc
inc
loopne
pop
xor
sbb
xor
pop
int
xchg
jp
jno
cltd
adc
mov
jae
stc
adc
pop
lcall
push
lahf
scas
add
push
dec
lds
aaa
pop
inc
mov
mov
and
pop
imul
lods
rclb
mov
mov
fnstenv
pushf
xor
loopne
bound
test
aad
das
in
xchg
jle
por
pop
sbb
icebp
ja
cli
int3
mov
mov
sbb
je
stc
das
xchg
push
mov
and
lea
xor
mov
inc
inc
add
add
inc
add
lea
imul
add
add
add
add
dec
jne
or
mov
lea
mov
pop
inc
dec
pop
sub
dec
pop
sub
lea
imul
add
add
add
inc
add
lea
mov
inc
add
ret
push
dec
sub
add
or
lea
mov
inc
dec
push
push
push
push
add
add
or
push
lea
mov
add
inc
inc
dec
and
lea
mov
mov
add
push
sub
inc
xor
sub
add
push
lea
imul
push
sub
inc
pushl
dec
call
inc
add
add
lea
mov
add
dec
add
add
pop
ret
mov
mov
dec
sub
inc
inc
dec
and
lea
mov
dec
mov
dec
add
cmp
jb
dec
mov
or
lea
xor
mov
dec
xor
dec
sub
pop
dec
add
test
jbe
lea
mov
add
inc
dec
sub
and
lea
mov
dec
sub
dec
sub
sub
lea
mov
dec
inc
inc
dec
inc
or
lea
mov
and
inc
add
mov
add
dec
movzbl
add
lea
add
mov
inc
and
dec
inc
mov
dec
or
mov
lea
imul
mov
inc
dec
mov
sub
add
add
lea
movsbl
inc
dec
jne
sub
mov
sub
add
add
lea
mov
sub
inc
dec
add
and
mov
lea
mov
inc
dec
inc
dec
xor
lea
mov
movswl
inc
test
jbe
dec
inc
inc
sub
lea
mov
add
inc
dec
inc
and
lea
mov
inc
add
inc
dec
inc
and
lea
mov
inc
and
sub
add
mov
add
sub
movzbl
lea
mov
add
inc
inc
and
add
sub
mov
xor
lea
movzbl
imul
inc
mov
add
sub
mov
inc
xor
movzbl
lea
mov
add
dec
dec
and
dec
add
movzbl
or
jmp
sub
lea
mov
add
dec
dec
dec
and
pop
ret
push
sub
lea
xor
mov
add
inc
dec
add
xor
dec
add
lea
mov
dec
inc
dec
dec
add
lea
imul
sub
inc
inc
pushl
inc
sub
pop
lea
mov
pushl
sub
sub
inc
inc
or
lea
mov
sub
sub
dec
inc
sub
lea
movsbl
add
dec
pop
inc
inc
add
lea
cmp
je
call
call
mov
pop
sub
ret
push
sub
push
add
sub
push
xor
push
lea
push
imul
dec
push
add
dec
inc
sub
lea
call
movzbl
push
inc
add
dec
mov
dec
mov
sub
lea
mov
mov
inc
test
je
inc
mov
dec
dec
xchg
add
lea
repnz
mov
inc
xchg
inc
inc
add
or
lea
mov
inc
add
dec
inc
and
lea
add
mov
jmp
push
push
mov
movswl
inc
inc
dec
add
xor
lea
mov
dec
sub
dec
pop
add
add
xchg
lea
call
mov
add
inc
inc
inc
xor
lea
mov
inc
inc
inc
dec
call
sub
lea
call
imul
inc
dec
dec
add
or
call
lea
mov
call
inc
inc
dec
push
dec
call
xor
lea
imul
dec
call
sub
dec
inc
pop
or
lea
mov
add
dec
pop
dec
sub
pop
inc
xor
lea
mov
pop
inc
dec
add
inc
sub
lea
mov
inc
pop
add
dec
pop
inc
add
mov
lea
imul
call
dec
dec
inc
dec
ret
add
lea
push
mov
dec
push
inc
inc
push
dec
add
push
lea
mov
push
inc
inc
mov
dec
inc
push
sub
ret
push
lea
mov
add
inc
inc
inc
or
lea
mov
dec
dec
dec
inc
and
lea
mov
dec
inc
inc
dec
jmp
jmp
add
dec
inc
dec
xor
lea
imul
dec
add
sub
dec
sub
pop
pop
ret
push
lea
push
mov
add
add
inc
inc
and
push
lea
call
pop
ret
sub
movzwl
mov
add
inc
mov
add
inc
mov
add
lea
mov
mov
dec
xor
add
dec
mov
sub
add
inc
lea
mov
add
add
dec
inc
cmp
jb
add
push
lea
mov
push
inc
dec
push
inc
dec
mov
add
lea
xor
imul
inc
xor
inc
dec
xor
dec
xor
push
lea
mov
xor
dec
sub
mov
inc
add
mov
add
lea
movzbl
dec
inc
dec
add
sub
add
add
lea
mov
movzbl
dec
inc
sub
dec
and
lea
sub
inc
add
add
mov
inc
sub
lea
dec
add
cmp
jb
add
xor
add
add
mov
lea
jmp
lcall
mov
jmp
jmp
inc
cwtl
push
cs
lret
xor
sub
iret
push
or
mov
lds
cmp
mov
pop
add
cmp
and
cmpsb
out
pop
sub
lods
inc
xor
outsb
add
sbb
addr16
mov
loop
add
add
les
imul
xchg
call
insl
add
pop
leave
xchg
jge
stos
xchg
mov
or
int3
sti
adc
imul
ret
ret
adc
or
jle
inc
cltd
leave
faddl
cli
int3
inc
jne
xor
dec
adc
mov
mov
push
fcompl
je
stc
sar
adc
sub
ficoml
mov
push
sahf
ss
xorb
xlat
sbb
and
retw
aas
mov
rclb
pop
add
push
bound
jo
popf
mov
gs
std
aad
jbe
jecxz
mov
jecxz
out
mov
sarl
shlb
insb
or
jp
ret
popa
adc
pop
repz
dec
aaa
cwtl
dec
inc
cwtl
stos
jmp
lods
lahf
enter
pop
mov
lods
aad
cmpsl
xlat
bound
mov
scas
mov
lods
cwtl
call
xor
adc
cmp
jnp
mov
cmpl
mov
sub
aaa
push
adcb
loop
inc
popf
cmp
rcrl
xchg
adc
pavgb
and
scas
push
sbb
int3
cwtl
dec
fs
add
test
or
in
jae
aad
mov
mov
jecxz
cwtl
jle
fstpt
test
rorb
negb
int
ret
lret
stos
xor
pop
push
lea
pop
fnstenv
xor
into
aaa
and
or
sub
cmp
inc
iret
stos
mov
push
mov
pop
pop
sti
xor
mov
mov
je
mov
sahf
sbb
bound
add
ret
std
mov
and
stos
ret
xchg
adcb
cltd
lret
lds
sub
iret
sub
dec
scas
mov
shlb
adc
aaa
and
sbb
inc
cwtl
and
pushf
mov
fs
or
icebp
cmp
jg
cmp
fstps
sub
inc
aam
int3
cmp
idivb
xchg
imul
xor
pusha
inc
sub
push
stos
xor
dec
push
mov
inc
sub
inc
daa
cmp
pop
mov
push
inc
cmp
ss
out
in
leave
rclb
repz
stc
popa
push
imul
cmp
enter
jge
sub
cmp
orl
sbb
jl
test
sub
push
add
shrl
inc
into
int3
jbe
pop
push
test
out
sbb
notb
aaa
sbb
sbb
pop
and
push
vdivss
jae
leave
xor
and
les
xchg
lods
aaa
mov
push
aam
in
and
inc
in
jg
mov
loope
out
pop
or
jg
in
and
test
lret
jecxz
and
or
push
jmp
xchg
lcall
rorl
mov
inc
jnp
fdivrs
mov
arpl
push
pop
pushf
dec
add
and
fucomi
jno
dec
xor
inc
push
out
add
or
clc
in
in
mov
je
cwtl
and
xchg
mov
pop
cmp
scas
or
lret
popf
inc
mov
adc
push
cltd
pop
out
out
or
push
rorl
xor
adc
cs
adc
stc
mov
ret
mov
in
mov
in
mov
cmp
scas
mov
lret
push
jb
mov
lcall
pop
mov
push
out
sbb
nop
andl
scas
jl
mov
adc
aas
test
shrb
xchg
push
sbb
lahf
aam
mov
aaa
mov
cmp
test
iret
js
pushf
or
and
jns
rcl
lods
data16
das
xor
rol
xchg
test
pop
outsb
mov
xchg
adc
imul
pop
bound
std
cld
js
aaa
inc
xchg
mov
jmp
mov
test
cmp
iret
icebp
stc
pusha
cmc
sahf
mov
add
and
xchg
loopne
ja
loop
popa
ret
test
mov
out
mov
inc
jae
mov
call
push
ficompl
loopne
cmp
mov
cmp
popf
inc
inc
dec
pop
cmp
jmp
out
ror
pushl
sbb
imul
add
pop
push
mov
decb
sahf
test
push
jl
add
add
sbb
cmpsb
mov
dec
movsl
or
das
jg
in
or
mov
inc
push
push
jo
dec
inc
daa
sub
pop
gs
and
jne
mov
cmp
mov
in
fwait
mov
dec
ret
jno
xor
or
cld
or
loopne
lods
or
inc
js
xor
jne
xchg
dec
mov
scas
fwait
loope
dec
lcall
adcl
mov
test
push
push
or
push
mov
push
mov
sbb
jae
xor
ret
add
jmp
add
push
mov
jge
sahf
add
repnz
gs
or
jnp
sbb
adc
mov
push
fsts
lock
fnsave
jne
addr16
in
add
std
mov
lret
cmpsb
jbe
jb,pn
fldenv
xchg
pop
sub
mov
addb
aad
decl
mov
into
addb
loop
daa
adc
pop
jnp
push
jae
js
divb
push
popf
xchg
lret
rcr
cmp
xchg
stos
lea
mov
pop
lock
sti
aaa
js
in
mov
mov
mov
lods
mov
xchg
fwait
nop
add
pusha
daa
dec
arpl
and
pop
mov
cmpsl
pushaw
push
popa
mov
cs
adc
into
ror
imul
pop
mov
jmp
dec
inc
fs
lahf
das
add
dec
xor
sbb
testl
ucomiss
call
push
cmp
push
repz
jmp
mov
jl
mov
ljmp
jo
dec
xchg
pop
pop
fsubrs
sbb
mov
pusha
fiadds
pop
cwtl
dec
push
ljmp
or
sub
and
push
out
outsb
jecxz
cmp
test
es
ds
cli
pop
mov
movsb
movsl
enter
sub
xchg
or
fstpl
addb
call
insl
enter
scas
icebp
cmp
push
mov
jl
mov
dec
ret
jecxz
mov
mov
lods
mov
cmc
jnp
push
inc
test
int3
push
dec
dec
dec
icebp
insb
mov
mov
sub
pop
imul
xor
adc
fimuls
or
and
sub
or
insl
jmp
pop
out
mov
mov
cmp
pop
jp
outsl
sbb
mov
ret
cmp
xchg
aam
sub
out
cmpsb
in
arpl
mov
add
mov
lock
sbb
xor
gs
push
sbb
sbb
jnp
nop
cmp
aam
mov
pop
iret
out
cmc
xor
dec
rcr
movsb
cmc
push
hlt
test
xchg
mov
push
scas
mov
lret
mov
inc
repnz
push
ffreep
fdivs
xchg
push
mov
or
out
cmc
dec
sarl
movsb
pop
aaa
rolb
out
push
repnz
es
mov
ffreep
nop
pop
mov
xchg
jo
xchg
rorb
dec
ss
imulb
aaa
lcall
cmpsb
mov
lar
inc
addr16
adc
cmpsl
les
cmp
inc
push
xchg
hlt
xchg
popl
lahf
sar
lret
je
or
add
adc
mov
xchg
out
je
mov
push
sbb
jmp
int3
scas
sub
aam
divl
addb
int3
inc
repz
adc
inc
int
jp
add
mov
mov
js
adc
adc
mov
jb
sbb
fwait
jns
mov
test
adc
adc
mov
mov
lock
test
mov
mov
fwait
and
add
ss
enter
xor
mov
cmp
jnp
or
inc
sbb
cltd
into
sbb
push
scas
and
js
aad
test
mov
test
adc
lea
sbb
or
inc
mov
or
xor
pop
push
pop
cmp
test
and
jg
shrb
or
lock
push
imul
scas
pushf
pop
inc
lret
adc
add
mov
shl
xor
loop
or
add
push
cmpsb
movsb
dec
dec
adc
mov
mov
dec
fidivs
sbb
enter
fadd
sbbl
js
jbe
xor
jmp
cmp
lret
jne
xchg
adc
push
dec
and
ss
pop
add
ficompl
mov
mov
xchg
dec
push
sub
xor
push
in
frstor
mov
rcrl
loopne
out
inc
mov
loopne
pop
roll
stc
jl
test
push
push
add
inc
loop
mov
lcall
pop
mov
and
les
mov
pusha
add
xchg
or
in
add
xlat
xchg
cmp
and
xor
xchg
in
mov
and
push
jmp
fmull
clc
shll
outsl
push
mov
push
adc
mov
loop
jmp
jns
adc
push
fwait
push
or
push
and
out
imul
shll
dec
xchg
in
mov
aad
inc
push
jo
test
and
sbb
inc
jb
rcll
push
xlat
aas
lds
push
sub
pop
dec
jge
mov
inc
imul
xorb
icebp
mov
xlat
std
push
cmc
and
or
inc
mov
mov
mov
sti
jo
xor
les
jb
push
xchg
push
mov
or
and
aas
lock
insb
add
movsb
cwtl
pop
cmp
inc
xchg
or
popa
adc
repz
fwait
inc
and
test
mov
and
dec
mov
mov
adc
xor
push
jg
fdivp
lds
xchg
pop
lds
and
rcrl
mov
shl
xor
scas
dec
add
pushf
mov
arpl
cli
and
add
adc
push
mov
cmc
sti
jp
loope
mov
lea
cltd
xchg
fidivl
test
xor
mov
sbb
les
adc
or
pop
cmpl
and
dec
cmc
test
inc
imul
int3
je
push
stos
jae
push
mov
jmp
mov
push
lds
and
fs
inc
mov
stos
imul
mov
or
mov
adc
jg
jp
stos
jb
inc
cmp
adc
xchg
push
inc
repz
loope
jb
inc
fcompl
mov
add
adc
arpl
mov
stos
sarb
lret
popa
out
lock
sbb
aad
mov
push
out
mov
mov
add
jbe
cmpsb
or
push
lahf
sbb
xor
cmpsb
lds
sahf
jns
xor
outsb
push
loop
dec
or
jns
mov
inc
and
push
mov
movsl
jge
or
push
adc
mov
jmp
jle
clc
and
dec
test
icebp
sti
mov
ds
mov
js
cs
jo
push
xor
pop
lret
xchg
mov
sub
push
into
pop
lret
push
out
aaa
test
test
in
pminub
repnz
and
xor
mov
out
mov
mov
lods
pop
cmpsb
sbb
inc
dec
xchg
xor
in
sub
inc
add
arpl
dec
sbb
dec
outsl
in
adc
and
mov
shll
push
pop
xor
inc
scas
add
pusha
fsts
or
add
lock
add
imul
pop
cltd
pop
fadds
leave
sbb
adc
and
jae
sbbb
cmpsl
xor
dec
jmp
fists
adc
and
ja
jo
scas
insl
push
and
out
mov
lret
ret
mov
ljmp
cmpsl
sbb
pop
enter
and
inc
imul
push
aaa
cmpl
push
sub
aad
lea
sbb
inc
gs
inc
js
fwait
pop
repz
push
movsb
or
pop
adc
pop
inc
loope
pop
mov
ja
loopne
icebp
ffree
pushl
inc
and
stos
cwtl
sub
cmp
or
les
filds
into
scas
push
mov
push
jg
mov
jo
cvtps2pd
ret
fdivrl
pop
out
cmp
sbb
jbe
mov
cli
out
add
std
sti
or
enter
gs
push
sub
inc
arpl
or
cmpsb
or
add
push
popl
out
loop
xlat
aad
dec
add
add
sbb
or
aam
test
inc
mov
pop
lret
mov
xchg
call
inc
cltd
ja
or
testl
jp
sbb
push
imull
dec
scas
in
cmpsl
push
push
mov
call
out
add
jnp
cwtl
jo
mov
loopne
or
pushf
ja
and
hlt
shll
lea
add
leave
jmp
lock
out
mov
pop
mov
jnp
in
inc
aaa
mov
inc
xchg
sbb
mov
jne
nop
fwait
or
fisubrl
ds
add
daa
push
mov
mov
add
jb
xor
aas
arpl
lcall
outsl
inc
xchg
outsb
pop
fdivl
mov
xchg
out
cwtl
lcall
dec
ror
stos
outsb
pop
jp
mov
or
pusha
adc
sbb
rdpmc
push
inc
dec
pusha
mov
sarl
insb
dec
jbe
xchg
push
fmull
sbb
xchg
cmpsl
and
inc
sub
push
sbb
icebp
pop
gs
mov
mov
jl
pushf
add
lret
incb
jbe
cmpb
mov
cli
jge
outsb
dec
ret
fldenv
mov
shrb
test
std
lcall
jmp
shrb
loop
fisubl
and
sahf
leave
ds
sbb
and
jae
push
sbb
dec
fsubp
xchg
mov
cmp
cmp
mov
push
pushf
push
pop
gs
pop
xchg
ja
in
xorl
test
mov
and
push
sbb
jne
outsl
dec
aad
mov
push
pop
pop
add
outsl
ret
push
or
mov
stos
pop
cmc
inc
scas
cmp
cmp
add
jns
hlt
sbb
cmp
mov
test
movsb
cmpsl
cmp
inc
les
adc
sar
mov
inc
sbb
sub
xor
fidivl
call
cmpsl
in
push
sbb
test
jns
mov
jmp
pop
cmp
dec
decl
sti
mov
lcall
sbb
pop
and
shlb
sbb
loopne
mov
dec
in
push
mov
dec
mov
aaa
in
call
or
adc
and
inc
sub
aam
mov
pop
pop
mov
jmp
push
cmp
xchg
aam
jl
mov
xor
inc
pop
mov
insb
std
push
loope
cwtl
js
lods
adc
mov
or
push
ja
cmp
je
mov
adcb
test
sub
ret
jecxz
outsb
add
xchg
add
hlt
mov
mov
pop
xchg
ret
sub
pop
data16
inc
mov
mov
in
cmp
pop
push
sbb
push
sbb
push
loope
and
dec
cmp
xchg
xchg
sub
aas
jmp
loop
out
rcrl
loop
paddusb
mov
test
movsb
js
mov
push
mov
sub
mov
mov
test
push
loope
cmp
pop
pop
icebp
popa
pop
andl
pop
cmp
inc
jbe
rcrb
dec
mov
sub
xchg
adc
sarl
xor
inc
lods
or
adc
pop
pop
pop
lahf
pop
cltd
sbb
cmp
pop
loope
ss
cmpsb
shr
decl
xchg
add
sbb
imul
xor
in
jp
mov
shlb
push
pop
cmpsb
lods
xor
in
das
sbb
mov
jo
in
jne
and
push
mov
pop
fildll
arpl
inc
lods
add
into
std
and
inc
and
push
and
dec
jae
xchg
jbe
xchg
inc
xchg
cld
mov
push
add
adc
mov
out
lea
mov
and
jmp
push
dec
inc
pop
mov
jp
insb
push
or
fmul
mov
mov
or
sbb
pop
hlt
sub
or
and
mov
push
xor
mov
sub
sub
aas
inc
mov
testb
mov
sbb
or
shrl
pop
fwait
dec
xchg
mov
mov
dec
pushf
dec
dec
hlt
mov
lahf
push
xlat
outsl
test
push
mov
pop
push
fdivs
cwtl
pushf
pop
outsl
mov
and
jae
inc
lea
mov
push
and
pop
mov
mov
sbb
mov
into
lret
mov
mov
ds
jmp
push
jae
mov
push
adc
xorb
push
mov
sbb
xor
cmp
cmp
repnz
testb
pop
not
sub
addr16
jmp
xchg
rorl
les
ljmp
inc
cmp
mov
lret
enter
cmp
sarb
cmp
cmc
pop
arpl
in
dec
ret
js
pusha
or
fcoms
cld
ljmp
xchg
mov
hlt
out
or
loop
sub
jo
test
sbb
xchg
lea
inc
aaa
fcmovnu
pop
sbb
and
mov
mov
fstl
scas
test
inc
lret
and
out
subb
test
inc
jbe
roll
dec
sbb
pusha
dec
lret
leave
loop
fimull
mov
mov
add
lret
mov
mov
shlb
test
push
push
test
mov
sar
and
xor
fdiv
out
and
and
cwtl
stos
xchg
sub
imul
in
jle
add
icebp
test
popf
scas
call
sbb
inc
mov
aam
mov
xchg
push
cmp
cmp
fmul
movsb
xor
shrb
cltd
mov
in
cmp
add
xlat
fbstp
ljmp
cli
sti
or
gs
ret
leave
push
pop
pop
ret
sbb
dec
ret
xchg
gs
lock
mov
arpl
shll
in
aad
mov
adc
mov
xchg
cs
mov
rcll
mov
dec
push
iret
ret
aaa
xor
pop
ficoml
sbb
push
repnz
sub
mov
and
push
in
add
bound
cmp
add
jns
repnz
sbb
in
cli
add
or
xor
adc
repz
fadd
repnz
fsubr
and
sbb
push
push
jo
test
inc
push
mov
shlb
subb
ja
or
pushl
out
les
xchg
mov
outsl
in
lea
ret
pusha
ret
xchg
and
push
mov
test
adc
mov
hlt
cmc
mov
and
movsb
insb
or
sbb
push
and
gs
orl
jmp
or
inc
xchg
call
fwait
mov
ss
and
neg
out
add
pop
stos
mov
lock
push
inc
stos
cmp
incb
jo
pop
add
pop
mov
cmp
cmp
dec
add
je
leave
jg
pop
dec
aad
ljmp
das
sub
cmp
and
adc
cmp
push
movsb
push
in
scas
xchg
sbb
sti
jbe
push
mov
xchg
xchg
mov
mov
stc
insl
adc
jo
adc
lret
dec
push
sub
loopne
clc
xchg
outsl
ljmp
scas
pop
jecxz
xor
push
out
aam
out
fbstp
pop
rdmsr
mov
in
push
mov
addb
mov
hlt
mov
sbb
cmp
lds
fadd
scas
fsts
hlt
or
scas
xor
xor
pop
push
push
push
or
mov
movsb
in
cwtl
subb
xchg
xchg
sbb
cmp
mov
dec
lods
nop
jnp
nop
pop
mov
push
dec
enter
or
ja
mov
mov
iret
inc
mov
mov
push
mov
lret
mov
leave
shll
nop
out
bound
cmp
pop
mov
aaa
mov
sbb
outsl
mov
js
lcall
or
cwtl
mov
push
mov
sbb
aaa
mov
mov
pop
scas
sub
pop
js
roll
xchg
xor
ret
shlb
fstps
sahf
cld
cld
in
incl
repz
ret
pop
cs
ja
jbe
mov
push
icebp
leave
cmp
cmpsb
leave
das
push
mov
test
lds
rcrl
add
sub
add
scas
rclb
sbb
outsl
pop
fdivs
das
iret
test
test
incb
fs
mov
clc
out
push
sub
push
gs
sti
in
stc
sbb
popf
pusha
add
mov
scas
cmp
outsb
outsl
mov
push
jge
subl
lea
ja
cmp
lock
rcrb
test
mov
fmull
pop
pop
scas
push
loopne
testl
fimuls
aaa
mov
aam
dec
rclb
addr16
mov
in
sbb
jb
xor
out
sarl
call
shl
mov
cltd
cmp
lret
adc
sbb
and
pop
xor
aas
sub
lret
mov
pcmpgtd
inc
lods
ret
aaa
pop
js
mov
push
inc
mov
add
sbb
in
push
outsb
jle
pop
ss
mov
les
shrb
xor
int3
jl
popf
or
in
mov
repnz
and
test
sahf
pusha
jne
jae
call
push
in
out
addl
mov
out
mov
or
xlat
inc
das
aam
lock
movsl
stos
cmpsl
repz
loope
cld
clc
pop
dec
pop
lock
add
jb
ss
je
mov
bound
or
cltd
leave
add
sbb
xchg
ljmp
push
mov
out
aas
js
adc
dec
jl
inc
pop
bound
inc
test
lcall
push
mov
addr16
mov
mov
fnsave
pop
mov
mov
add
push
call
test
jbe
dec
daa
test
jg
out
pop
sbb
pop
pop
pop
and
sti
jl
jg
jecxz
cmpb
sub
mov
inc
int3
xor
ljmp
insl
cmp
xchg
push
sub
mov
daa
push
popf
popf
stos
js
pop
mov
cmp
ret
scas
ret
mov
shr
mov
jl
fdivrs
lret
push
rorb
jns
mov
xchg
cmp
push
dec
cmp
push
fisttpll
pop
push
nop
inc
sbb
xchg
add
xor
push
fldenv
stos
mov
adcl
pop
adc
cmp
push
jmp
inc
gs
pop
pushf
test
mov
push
fistpll
push
popf
mov
push
mov
es
xchg
push
or
or
sbb
jg
lea
test
sub
or
adcb
xchg
stos
mov
test
stos
pop
pop
sahf
cli
lahf
xor
dec
inc
stos
fcompl
push
mov
mov
xchg
pushf
lret
mov
inc
mov
cwtl
lds
test
lahf
add
sub
mov
jno
test
pop
sub
rcrl
xor
jle
aaa
jp
insb
movsb
fnstcw
sub
int3
adc
rcrb
sub
inc
clc
push
pop
xchg
mov
jp
cmp
jbe
xorb
mov
xor
jecxz
dec
and
adc
fistpl
loope
fdivrl
cli
popf
lods
dec
xchg
jns
xchg
test
addr16
jb
or
cli
adc
cwtl
lcall
sub
inc
arpl
or
push
sub
adc
jbe
out
repz
lds
push
lods
adc
ret
inc
push
pushf
add
lcall
ffreep
addr16
jp
das
test
jae
push
es
dec
movsb
popf
movb
nop
fisubrl
lods
data16
inc
push
mov
adc
cmovne
xchg
stos
inc
outsb
sbbl
je
or
test
cmp
lock
and
or
icebp
out
mov
fsts
jns
push
cmp
mov
popa
adc
inc
repz
jbe
push
mov
or
mov
cmp
test
andb
pusha
adc
mov
or
adc
sub
and
and
aas
out
imul
stos
adc
imul
iret
test
cmp
fcmovnu
dec
movb
fldcw
mov
dec
push
ret
xor
insb
push
filds
out
cmp
loope
test
stos
pop
in
and
jbe
dec
fwait
jle
ss
adc
xchg
sub
in
sbb
jae
xor
mov
scas
test
loope
xor
inc
adc
pop
pop
xor
mov
std
push
nop
pop
jne
sub
or
stos
js
adc
cltd
inc
and
scas
roll
popa
pop
add
mov
cwtl
inc
pop
jbe
sbb
and
ret
mov
movsb
fs
les
mov
mov
test
loopne
repnz
adc
sbb
lods
dec
or
fldenv
push
divb
shrl
push
int
jge
inc
sahf
push
lahf
clc
jb
mov
dec
std
leave
jo
jo
cmp
das
js
push
aaa
mov
and
mov
imul
sub
mov
ss
xor
dec
sbb
int3
cmp
mov
cmp
iret
inc
push
dec
stos
cmp
sbb
mov
and
scas
adc
insl
fnsave
cmpsb
sub
shl
cli
sub
jmp
inc
insb
popa
inc
push
icebp
jae
push
jo
cmpsl
mov
dec
lret
jmp
ss
sarb
imul
out
arpl
jecxz
fdivrs
dec
loope
test
int
jmp
out
add
sbb
rcrl
fildll
add
mov
notb
cmp
enter
jnp
inc
push
pop
dec
aam
popf
dec
adc
movsb
push
jno
icebp
and
pop
jbe
adc
lea
mov
fwait
js
dec
fildll
xorl
dec
push
inc
add
inc
loop
ret
or
pop
inc
out
xchg
fildll
xchg
ror
decl
lock
mov
dec
and
adc
pop
es
shr
mov
or
pop
sub
imul
sbb
sub
sbb
mov
scas
jbe
lret
push
stc
loop
shr
cmp
popa
repnz
cmc
sub
dec
stos
push
jl
xchg
jmp
test
ja
mov
fdivrs
mov
push
pop
mov
in
adc
das
jp
movsl
or
jbe
fwait
sub
fsubrp
inc
dec
xor
add
gs
push
outsl
cmpsl
popf
sbb
ret
xchg
fildll
cwtl
fdivrp
test
cmp
sahf
sub
mov
jns
repz
std
sbb
cmp
jb
push
dec
dec
inc
or
test
out
push
sub
fidivrs
addb
inc
inc
push
jbe
fadds
loop
push
movsl
adc
sarb
adcl
in
fstpt
and
add
jno
push
cs
xchg
loopne
jge
add
out
dec
inc
xlat
ja
or
adc
xchg
sarb
push
int3
fsubs
and
lods
xor
jne
mov
mov
or
lahf
aas
fiaddl
int3
call
scas
out
jge
dec
scas
das
fnstcw
insb
adc
pop
fimuls
orb
mov
faddl
in
inc
xchg
std
pop
jge
js
aad
sahf
cmp
or
aam
adc
xchg
push
pop
xor
cmp
lret
or
pushf
nop
mov
test
mul
inc
fists
lea
cmp
or
es
dec
lret
das
mov
inc
add
adc
ret
repz
or
jl
jno
mov
addr16
lock
and
jo
daa
dec
fsubr
xlat
mov
pop
mov
fmul
mov
sub
dec
mov
insl
lods
je
mov
lods
ljmp
in
inc
dec
push
ss
dec
xchg
cmp
add
mov
jns
inc
pusha
jns
into
orl
sti
outsl
in
pop
xor
lret
xor
jge
ja
xor
aam
cwtl
adc
inc
lods
scas
and
jb
push
in
push
mov
dec
mov
xchg
pop
mov
scas
int
dec
pop
insb
rorb
adc
insl
add
in
xchg
adc
jmp
nop
mov
mov
and
cmp
dec
scas
xchg
mov
out
pop
ljmp
jnp
cmp
fs
sbb
inc
sub
push
mov
call
ss
repnz
mov
lahf
rorl
in
popf
xchg
stos
jno
pop
enter
sub
ss
xchg
pop
lock
lock
pop
fucom
loopne
fistl
call
aaa
push
popf
lock
inc
jp
mov
repnz
or
cmp
addr16
push
shll
or
ss
xchg
fadds
mov
fildll
push
add
add
fildl
jmp
lods
sub
lret
and
jecxz
iret
pop
sbb
fstpl
jne
pminub
rcrb
sbb
push
jl
popa
inc
pop
test
repz
ds
sub
fdivrp
into
cmpsb
sbb
mov
data16
jo
lret
mov
mov
xchg
or
jo
lds
sbb
add
movsl
xor
sbb
out
cmp
stc
jg
pop
push
cmc
sub
adc
mov
popf
stos
add
arpl
outsb
xchg
out
jbe
das
or
sub
fnstenv
dec
jnp
push
ret
mov
iret
add
dec
inc
add
test
xor
mov
pop
and
adc
test
repz
sbb
inc
or
hlt
mov
dec
push
or
outsb
add
mov
xchg
imul
jl
inc
aaa
scas
push
lcall
das
or
and
dec
cwtl
cmp
cs
mov
adc
xor
and
ficoms
je
xchg
ja
int
lods
jmp
adc
xchg
or
mov
rcll
test
insb
jge
scas
incb
jge
ljmp
roll
mov
cmp
cmp
xor
sub
sub
sub
add
out
loope
adc
inc
or
aam
mov
movsl
repz
or
mov
punpckhbw
mov
into
or
or
in
popa
in
or
icebp
adc
inc
sbb
sub
push
sti
xor
sbb
lret
sub
enter
mov
test
enter
loopne
fnstsw
out
jg
jbe
in
and
jo
and
cwtl
mov
movsl
and
cmp
cmp
mov
insb
mov
and
mov
mov
push
lds
mov
aas
clc
and
mov
ret
pusha
xchg
cs
cmpsl
ficompl
mov
or
mov
insl
clc
lret
inc
sub
mov
mov
push
imul
arpl
pop
repz
sbb
add
call
sbb
cs
data16
sahf
xor
filds
aaa
rcrb
ss
mov
or
dec
and
fcmovnu
mov
mov
cmc
mov
jl
xor
mov
loop
adc
decb
dec
or
es
inc
xchg
sbb
adc
or
cld
int3
cmp
xchg
inc
loop
cs
add
dec
pop
adc
hlt
mov
xor
sbb
sbb
dec
dec
imul
rol
outsl
loope
gs
out
stc
dec
jge
test
rclb
push
into
inc
sahf
call
pop
add
push
or
and
jb
pop
cmp
xor
fisttpll
lds
xor
xchg
xor
sahf
pusha
cmp
push
xchg
pop
push
mov
sbb
inc
fadds
test
daa
lretw
sub
pop
sub
jecxz
add
cmp
rorb
bound
in
out
inc
lret
lahf
jne
daa
out
mov
mov
lret
out
add
cmpsl
push
insl
sbb
sub
jno
lret
test
int3
add
sbb
inc
push
push
adc
xchg
loop
sub
push
mov
sbb
jg
and
xor
jecxz
xchg
jb
pop
mov
out
repz
xchg
cltd
inc
nop
jno
je
or
pop
cmpsb
sysexit
jecxz
push
mov
xor
into
jg
mov
xchg
push
inc
adc
sub
sti
jne
sahf
push
pop
mov
add
shrd
xor
push
aas
fsub
dec
dec
lds
pop
or
and
push
cltd
xchg
inc
fistl
push
inc
jo
hlt
sbb
pop
inc
fnstsw
cltd
dec
xchg
jmp
ret
lret
daa
stc
xor
add
insb
out
push
sub
inc
mov
insb
xor
popa
push
fbld
lcall
push
lcall
adcb
inc
sbb
in
mov
mov
add
xchg
push
mov
fsubrl
mov
lods
rorl
enter
sub
lea
mov
sbb
js
jo
cmp
inc
lcall
pop
out
shr
inc
and
aam
mov
insb
xor
out
dec
push
lret
in
pushf
shlb
cmpsb
inc
pop
lret
dec
packssdw
dec
cwtl
cmp
divb
test
test
bound
sub
shll
in
in
adc
adc
ja
fcoml
push
sbb
subl
push
push
incb
xor
jne
cltd
jae
xor
in
xor
mov
xor
movsb
cmpsb
leave
dec
xchg
jp
push
stos
insb
or
in
test
jo
das
movsl
mov
ja
adc
push
push
cltd
xchg
inc
data16
or
mov
mov
rolb
push
imul
daa
into
addb
fs
cmpsl
push
sub
loope
xchg
add
xchg
insl
mov
addr16
jae
sub
dec
dec
enter
mov
ffree
inc
nop
aad
or
adc
mov
test
repz
movsl
lret
lahf
loope
mov
jnp
std
lret
cmpsl
mov
ljmp
mov
adc
mov
sti
cmpsl
xchg
sbb
std
fs
mov
add
mov
xchg
or
cmp
push
jecxz
or
mov
sub
lock
mov
xchg
jnp
addr16
mov
pushf
push
sub
cmp
xchg
xchg
lcall
adc
sbb
out
xor
adc
mov
les
inc
jmp
lods
inc
mov
popa
mov
mov
adc
jae
lods
test
repz
lret
push
adc
jae
mov
jbe
add
xchg
xchg
adc
out
xchg
and
mov
adc
fcomip
push
dec
mulb
addr16
dec
mov
jecxz
lods
ret
sub
inc
lods
push
arpl
sbb
stos
jp
sets
ret
es
dec
pop
ljmp
sub
push
out
faddl
lods
xchg
mov
and
mov
insl
outsl
xor
gs
cmp
popa
test
jno
cld
push
or
xchg
fmull
movsb
ds
in
push
aad
iret
cld
add
repnz
pushf
xor
ss
fld1
scas
cwtl
dec
lods
jle
test
pop
xor
clc
xor
pusha
jge
lods
sbb
or
and
add
push
in
inc
pop
dec
push
out
addl
mov
lret
xchg
mov
push
cmp
divb
ljmp
dec
add
and
int
mov
mov
pop
mov
stc
sti
addb
jbe
dec
mov
fsubs
pop
xor
popa
inc
imul
sub
cmpsl
lret
lahf
lods
les
ret
int3
sbb
test
mov
xor
xor
or
add
pop
adc
shr
sahf
xchg
clc
fwait
jae
jb
pop
ficoml
nop
inc
mov
xor
es
sbb
cmp
pop
mov
xchg
xchg
mov
stc
jae
jno
icebp
out
sub
sti
enter
jne
insb
stos
popa
mov
xor
pusha
lahf
pushf
js
push
jo
in
sbb
or
fdivrs
push
popa
push
insb
das
adc
sbb
adc
fnsave
and
mov
insl
call
jecxz
cltd
pop
sahf
icebp
negb
jno
outsb
sub
sub
dec
push
aas
xor
sub
inc
mov
jo,pn
mov
mov
xlat
lds
xchg
es
out
int3
daa
les
pop
dec
dec
imul
push
mov
addr16
sbb
jns
xchg
push
movsl
or
sbb
xchg
push
pop
xorb
clc
test
mov
mov
push
outsb
mov
adc
popa
shr
outsb
mov
fimuls
out
out
aas
ljmp
mov
dec
or
pop
or
adc
cli
inc
sub
add
or
cmp
insb
pushf
pushw
adc
in
and
pop
inc
mov
in
inc
or
outsl
fadd
js
mov
mov
pop
lds
inc
inc
fucomp
ss
jnp
xor
or
fidivl
cmp
jl
in
std
sbb
fsub
ficoml
jnp
sbb
mov
daa
scas
pushf
push
cmp
xor
enter
and
mov
mov
scas
pop
add
add
repnz
xor
jbe
cli
in
call
mov
pushf
fcmovu
lods
add
outsl
mov
add
push
xor
add
aas
out
mov
aas
xchg
push
fidivrl
push
ret
ret
dec
or
rcrl
or
push
lods
push
jg
cs
dec
jne
ret
lock
add
daa
ds
sub
stos
insl
ss
stos
inc
and
mov
mov
cmp
inc
adc
out
xchg
gs
lahf
sub
icebp
push
jmp
sti
add
in
scas
pop
mov
ds
mov
xchg
scas
push
mov
pop
cltd
cmpsb
loop
xor
shrl
es
dec
mov
loope
std
push
xor
cs
fbstp
dec
push
jbe
mov
shrl
mov
pop
nop
push
adc
gs
xor
sbb
cltd
mov
shrb
fcoms
xor
jg
scas
or
stos
in
aas
lret
pop
sub
shlb
ja
and
and
sti
std
cmp
xor
sub
pop
pop
nop
dec
faddl
mov
outsb
add
loopne
clc
popa
xor
dec
dec
xchg
mov
daa
xor
mov
and
fs
outsl
cld
orb
dec
mov
cltd
bound
mov
and
xchg
insl
mov
cld
int3
add
les
dec
or
gs
fildll
sbb
mov
pop
push
stos
outsl
shl
push
sbbl
addr16
inc
loopne
add
in
pop
js
dec
test
imul
in
popf
cmp
fsubrp
gs
mov
pop
inc
mov
sub
gs
jne
test
clc
movsl
cmp
insb
out
pop
dec
xchg
xor
call
dec
cmpsb
inc
sbb
mov
into
ja
xor
cltd
xlat
push
jbe
and
mov
mov
cmc
jae
inc
pop
mov
push
jb
mov
lock
inc
stos
fiadds
lds
dec
inc
inc
pushf
dec
icebp
insl
push
ljmp
jae
es
inc
jne
mov
imul
lahf
out
dec
imull
ja
dec
dec
pop
push
test
mov
push
jg
jecxz
cmp
leave
jnp
adc
mov
test
xchg
and
jg
aam
imul
scas
mov
sub
jl
aad
lcall
sub
xchg
mov
sbb
push
xor
adc
ret
jns
pop
mov
dec
jp
and
xchg
jmp
sbb
adc
bound
pushf
jnp
pusha
cs
sub
add
sub
ds
cmc
pop
repnz
sub
xchg
cmpsb
mov
jb
stos
inc
add
jecxz
loop
daa
mov
dec
mov
popa
mov
fdivrl
sub
mov
jno
xchg
and
insb
xchg
decb
clc
ja
dec
ficoml
sub
mov
mov
insl
mov
fstp
push
sbb
cmc
cmp
cmp
je
fwait
add
inc
hlt
push
cmc
lea
mov
or
out
or
adc
mov
inc
mov
xor
cmpsb
mov
xchg
xchg
jb
mov
or
notl
add
int
into
xchg
push
insl
fiaddl
sbb
mov
or
pushf
jmp
jne
adc
sti
mov
insb
sbb
aad
imul
sti
inc
mov
repz
sbb
out
xchg
cld
sbb
cmp
dec
jl
sbb
dec
mov
cmp
ds
data16
insl
mov
sahf
mov
stos
mov
pop
pop
out
in
out
movsb
push
mov
imulb
lret
and
jbe
adc
push
xor
lods
or
inc
push
mov
mov
cltd
int
pop
imul
jecxz
mov
sub
sub
cmpsl
xchg
adc
sbb
rcrb
xor
inc
mulb
test
mov
push
mov
dec
into
jmp
ljmp
test
add
and
dec
les
subl
mov
and
xor
ret
mov
int3
push
and
inc
sbb
pushf
mov
popa
sarb
pushf
mov
sar
sbb
arpl
int
fildl
pop
daa
outsl
outsb
or
aaa
pop
aad
push
pop
cli
out
sub
shlb
mov
add
mov
aad
iret
jp
pop
int
in
gs
pop
push
inc
ljmp
mov
ret
or
cmpb
ret
mov
fiadds
dec
dec
push
push
inc
sbb
lret
add
repz
repz
je
bound
fadds
inc
test
das
loope
fwait
dec
std
cmpsb
inc
sti
mov
out
sbb
stos
stc
mov
ljmp
out
rorb
xchg
lahf
sub
mov
jb
pop
divl
test
inc
mov
cmp
adc
jecxz
mov
stos
adc
pop
aad
jbe
mov
popa
inc
fnsave
dec
cmpsl
decl
insb
mov
fbstp
pop
aam
mov
lahf
call
sbb
and
cmp
mov
leave
aaa
inc
ds
and
mov
sbb
ss
call
cmpsb
mov
movsb
fcmovnb
fbstp
iret
scas
push
test
cmc
hlt
nop
xor
push
push
sahf
inc
xchg
sbb
ret
cmp
je
or
push
inc
dec
lcall
movsb
aaa
sbb
rcr
dec
jle
sub
jp
in
dec
adc
out
xor
sbb
test
dec
loope
rcrl
mov
or
mov
push
xchg
sarl
sti
jecxz
in
rolb
push
add
int
xchg
fisubrs
sbb
sahf
dec
fcoms
insb
pop
shll
cmp
and
fisttpl
cmp
push
and
pmaddwd
sbb
sbb
push
dec
mov
xchg
mov
daa
test
daa
add
idivb
inc
ds
inc
fwait
jo
cli
xor
sbb
add
push
cld
and
push
and
sub
mov
cmp
sbb
adc
mov
rorb
mov
lret
mov
or
push
adc
decl
jnp
add
daa
mov
pop
dec
ss
inc
pop
imul
into
or
cwtl
push
mov
mov
xchg
mov
mov
cmp
pop
inc
adc
je
add
pop
test
inc
jmp
scas
ror
fisttpll
icebp
sub
mov
add
lret
xchg
sti
pop
cmp
sub
inc
out
pop
loope
out
sub
xchg
push
push
loope
in
mov
dec
pop
ficompl
aad
cli
mov
ljmp
xchg
mov
clc
ljmp
lock
jne
out
fdivrl
mov
insl
add
xor
aad
nop
shlb
dec
scas
sub
test
in
mov
fnstcw
rorb
xchg
cs
mull
stos
enter
dec
clc
pop
inc
aad
sub
dec
repz
jb
push
cltd
xchg
pusha
in
xlat
cmp
icebp
jl
dec
mov
aad
out
mov
push
loope
lea
or
mov
and
lret
mov
cwtl
aas
sbb
mov
sbb
push
mov
push
ss
icebp
add
inc
jns
sub
popf
mov
xchg
inc
or
jmp
bound
out
scas
adc
xchg
and
push
addb
fsubr
data16
sbb
or
cmpsb
mov
xchg
jge
in
push
mov
inc
adc
cmc
xorl
xchg
sbb
xchg
jmp
nop
adc
xchg
hlt
mov
add
ret
daa
xchg
push
fmulp
cmp
pop
xchg
sbb
mov
jge
jp
push
push
pop
pop
int
add
or
outsb
scas
dec
lret
dec
adc
js
inc
ljmp
mov
cmp
ss
stc
xchg
idivb
dec
mov
cmp
push
gs
add
or
push
nop
pop
scas
sub
dec
mov
push
xchg
jp
cmp
in
sti
lahf
loopne
xor
mov
lods
loop
cmp
movb
test
mov
and
push
adc
in
out
mov
les
or
jmp
adc
jns
dec
push
dec
lods
xor
jmp
popf
hlt
test
sbb
xchg
int3
ljmp
xchg
pop
sarl
push
sbb
push
mov
shl
gs
mov
aaa
cltd
lcall
movsl
sbb
fiadds
xor
or
mov
out
adcl
out
mov
fs
mov
cmp
xlat
mov
mov
sub
in
clc
fsubs
push
or
push
mov
icebp
scas
push
or
out
inc
ljmp
out
xchg
imul
xor
popa
and
fs
adc
into
inc
inc
gs
sub
insb
dec
out
sub
bound
xor
add
sub
ljmp
leave
incb
out
scas
mov
inc
fsubrl
les
or
scas
clc
out
fisttps
loope
mov
jno
mull
imul
fs
test
movsb
mov
push
cmpsl
les
mov
pop
fcmovnbe
dec
icebp
add
push
bound
jnp
test
icebp
pop
adc
mov
out
pop
insb
dec
cmp
cs
rcl
sub
sub
movsb
xor
addl
je
xchg
xchg
cmp
jp
push
nop
in
push
jno
cmp
outsb
mov
out
lahf
inc
cmp
lahf
cmp
inc
invd
xor
sbb
sbb
pop
pop
std
mov
pop
test
mov
push
rcrl
aas
lods
js
push
mov
sub
xchg
incl
mov
ret
test
sbb
or
push
sbb
je
movsb
stc
sahf
hlt
repnz
pop
or
xchg
sub
xchg
pop
loope
loope
push
jge
pop
jo
fsubp
mov
jo
int
jnp
and
out
int
popf
into
sahf
mov
fiaddl
pop
xchg
lret
lds
lea
and
push
sub
ret
je
mov
dec
jmp
pop
inc
fdivrl
ljmp
fsubl
or
mov
mov
aas
sbb
aaa
mov
loope
mov
mov
cmpsb
nop
jl
insb
stc
pop
or
inc
mov
rcl
pop
dec
dec
xor
adc
add
sub
xor
pop
popa
repz
sub
fildl
iret
loop
test
je
pop
push
sub
cmp
imul
cmpsl
cmp
addb
sti
ficoms
push
mov
mov
xchg
inc
sbb
je
mov
icebp
jl
outsl
mov
mov
fmuls
dec
xchg
std
rcr
lcall
sar
test
imulb
pop
and
mov
add
shl
xchg
test
or
stc
jne
mov
stc
aad
das
mov
jl
cmp
leave
xchg
mov
rorb
dec
fbld
sbb
mov
push
jle
ja
sub
pop
addr16
hlt
gs
jecxz
pop
mov
add
and
inc
es
fistps
push
and
or
je
out
pop
sbb
inc
jne
test
mov
gs
dec
mov
sarl
adc
or
mov
jp
mov
adc
cmp
loop
jo
jb
or
mov
fdiv
jecxz
jo
hlt
sub
push
inc
mov
lock
shlb
out
cmp
sbb
jnp
inc
jg
mov
out
lcall
mov
dec
leave
xchg
xchg
stos
shlb
or
mov
xchg
insb
add
mov
inc
jo
pop
fdivrp
mov
in
decl
test
sbb
aad
hlt
popf
or
in
sbb
and
inc
xchg
lcall
mov
push
mov
ljmp
inc
adc
daa
in
lock
mov
mov
aad
loop
and
mov
mov
pop
rclb
push
pop
push
mov
inc
leave
mov
mov
xlat
scas
jo
dec
and
jmp
inc
dec
bound
mov
in
jp
sub
dec
sub
cld
loop
gs
mov
push
addb
notb
mov
cltd
fdivs
or
lock
pushf
add
inc
scas
cmp
loopne
stos
sbb
push
lcall
sbb
sub
mov
sub
ds
icebp
test
jge
adcb
dec
ss
adc
sarl
inc
pop
ljmp
jo
dec
push
test
jl,pn
ja
xchg
out
mov
xor
sub
xchg
repnz
pop
stos
dec
js
push
iret
ss
movsb
outsb
test
sub
jo
cli
sbb
push
mov
inc
cmp
jnp
push
mov
ljmp
bound
pop
jl
or
movsb
mov
and
push
fdivs
mov
aas
mov
in
lods
movsb
je
ret
out
inc
call
jo
stc
popf
mov
jle
arpl
je
movsl
loope
mov
add
lret
sub
xchg
ljmp
incb
jge
icebp
out
loop
sbb
pop
inc
xchg
push
push
push
in
cmpsl
sti
popa
sbb
insb
sti
daa
cmp
jne
repz
inc
mov
or
repnz
in
pop
insl
dec
inc
into
jg
jne
and
into
and
and
loope
aam
jl
test
mov
fcmovu
sub
movsl
call
add
pop
dec
inc
loop
adc
rcrl
cmp
shrb
das
lock
mov
jge
test
out
loop
or
es
mov
int3
push
fisubs
test
ret
sbb
testl
xchg
mov
je
push
push
sbb
lret
sarl
pop
xor
push
shll
and
ret
xchg
cmp
adc
add
and
jp
xchg
lret
in
test
std
pop
rcll
sub
xchg
ret
les
ret
dec
mov
ja
push
push
sti
gs
leave
call
rcrb
inc
leave
bnd
inc
inc
cmc
jmp
fisubrs
push
xchg
std
xor
cwtl
negl
add
jno
nop
je
ror
pop
repz
lcall
icebp
rol
out
or
test
pop
scas
loopne
sub
fildll
pop
adc
mov
in
arpl
mov
xchg
lds
xchg
xchg
aam
sbb
xchg
xchg
xchg
sbb
xchg
dec
int3
mov
push
daa
je
mov
xchg
cmp
int
rol
lods
push
idiv
fmul
sub
outsb
pop
pop
imul
sbb
scas
jle
adc
dec
ja
sub
cmp
es
jp
in
mov
adc
mov
push
divb
inc
mov
jo
cmpsb
add
push
ss
mov
addb
xor
inc
jmp
mov
pop
pop
ret
aam
xlat
lock
pop
rorb
cld
shlb
xor
mov
cmpsb
xchg
mov
subl
fcoml
pop
xchg
sbb
inc
fistl
loope
cld
mov
and
lock
sti
xchg
inc
daa
loope
mov
mov
cmp
mov
pop
xchg
arpl
mov
inc
dec
mov
fsts
fdivrl
or
repz
adc
lock
fisttps
ds
jno
repnz
divl
inc
xor
cmp
lahf
pop
decl
and
aad
mov
out
pusha
sub
stc
mov
aaa
pop
ss
lea
gs
jns
xchg
jne
es
xlat
cwtl
cmp
into
or
push
test
sbb
in
xchg
adc
cmp
push
out
or
mull
sub
and
mov
mov
popa
pop
lods
mov
cmp
dec
mov
jnp
pop
stos
lods
enter
cld
jo
daa
aas
in
add
pusha
xor
cmp
pop
insl
mov
data16
push
outsl
sahf
fmuls
leave
mov
sbb
call
push
mov
mov
hlt
std
outsl
push
bound
and
test
leave
inc
js
popa
sub
ret
jg
mov
dec
inc
add
jle
outsb
pushf
fmuls
pop
mov
popa
cs
scas
lret
jg
xor
ja
mov
pop
ljmp
jnp
fs
rorb
movsb
negb
in
and
fadds
jg
xor
mov
clc
std
xor
inc
pop
mov
xchg
dec
sbb
in
add
repz
faddl
cmpsl
int3
into
mov
insb
repz
fwait
push
xor
adc
ds
xchg
outsb
cmc
movsb
outsl
test
pop
jle
pop
das
xchg
ja
adc
fsubs
ror
or
push
jo
ret
mulb
rcrb
enter
rorl
aas
cmp
and
or
andl
scas
push
loopne
nop
ss
mov
dec
or
call
mov
push
mov
jne
mov
lcall
cmova
lods
mov
mov
addr16
mov
div
push
aaa
sarl
cltd
cmpsb
aaa
xchg
and
mov
lahf
lcall
decb
cwtl
inc
push
push
push
pop
aas
pop
pushf
lock
sbb
cltd
leave
out
repz
pop
pop
insl
mov
ja
mov
inc
imul
mov
mov
or
push
mov
and
fiaddl
mov
inc
call
mull
xchg
cmpsl
inc
cmpsl
cmp
sub
cmp
lock
add
bound
xchg
shll
mov
push
std
rcrl
dec
jg
cmp
mov
lcall
inc
mov
or
xchg
inc
adc
xchg
mov
and
popf
ficoms
add
bound
pop
sbb
jl
push
pop
xlat
add
and
dec
xchg
pop
data16
std
mov
pop
in
decl
or
mov
lret
mov
inc
mov
cmp
lret
aas
fst
dec
test
push
push
gs
pop
cli
or
into
mov
adc
pusha
shr
and
pop
popa
inc
xchg
sub
pop
jg
adc
add
xchg
xorb
jp
iretw
insl
rclb
xchg
cmp
adc
mov
and
mov
sarl
xor
scas
fldcw
inc
cmp
pop
push
pop
cwtl
icebp
cmpsb
mov
lret
lret
mov
cs
loopne
dec
aad
lret
mov
add
adc
add
mov
pop
mov
lret
ffree
cmpsb
out
cmpsl
push
mov
stos
dec
jae
outsl
mov
push
xlat
lock
outsb
or
loop
je
xor
faddl
outsl
mov
stos
sbb
or
add
adc
test
jo
jge
xchg
xor
push
pushf
push
je
mov
repnz
insl
jns
sub
and
pop
mov
aaa
lods
mov
or
mov
scas
imul
testl
out
bound
std
scas
xchg
xchg
je
cld
jg
adc
inc
sti
push
xor
add
xor
and
mov
sbb
lahf
sarl
or
mulb
xchg
dec
ret
sbb
xchg
nop
loopne
addr16
aaa
sahf
cwtl
cmp
gs
shl
sbb
push
dec
sub
pusha
sbb
dec
pop
aam
lahf
iret
xchg
lock
outsb
pop
xchg
test
jecxz
sarb
fldt
and
ret
dec
sbb
je
sbb
mov
sub
aad
adc
in
sub
imull
and
or
push
jbe
jmp
dec
cwtl
data16
dec
or
imul
mov
sbb
mov
sbb
loope
outsl
mov
in
pop
clc
fdivrs
out
or
clc
aaa
add
sbb
mov
inc
jp
jle
dec
insl
pop
mov
jecxz
shrl
pushw
inc
mov
jno
adc
imul
insb
aad
enter
push
sahf
cwtl
cwtl
push
jns
fstp
vpaddd
add
mov
jmp
pop
cld
int
scas
inc
movsl
setle
xchg
dec
imul
scas
xchg
sahf
jns
lcall
sbb
jmp
adc
addr16
arpl
outsl
mov
icebp
mov
push
in
jbe
mov
insl
insb
pop
sti
fdivrl
jle
pop
dec
inc
pusha
push
mov
das
pop
cmp
cld
adc
mov
dec
sbb
lea
pop
pop
rcr
adcl
mov
push
mov
push
mov
mov
add
jg,pt
push
and
adc
hlt
call
ficoml
scas
test
les
push
sbb
cmp
jo
jb
pop
in
sbb
in
lcall
mov
shrb
int
push
xchg
jge
pop
jle
sti
out
inc
adc
dec
mov
ja
arpl
dec
mov
call
mov
rorl
inc
jge
mov
fldcw
pusha
xchg
and
jnp
jg
pop
push
push
pushf
rcrb
cmp
std
or
sarl
sub
enter
insb
sub
push
mov
stos
sub
fdivs
mov
shll
mov
jge
cmp
xchg
in
mov
xchg
outsl
popa
push
into
ljmp
mov
stos
ficomps
xchg
imul
lret
scas
cmp
call
inc
pop
cmc
lcall
jne
mov
jo
fistl
jmp
subb
pop
push
cs
jae
mov
cld
add
or
shlb
int3
roll
clc
outsl
mov
scas
addr16
int3
or
loope
aad
loop
inc
aas
andb
aam
test
lock
sahf
mov
out
ja
inc
xchg
mov
cmpsb
lods
jle
pop
xchg
das
sub
jp
icebp
out
adc
adc
mov
sbb
push
stos
test
xor
jo
outsb
incb
hlt
adc
lock
cmp
pop
push
mov
mov
scas
stos
push
loopne
inc
jno
mov
outsb
pusha
int
int3
int
loop
jne
shrl
push
jg
sub
pop
jg
jl
cmp
inc
jns
adc
inc
sub
ror
sbb
mov
les
and
xchg
xlat
inc
dec
in
fldl
sbbl
dec
in
cmc
outsb
sub
mov
sub
push
mov
mov
dec
fs
and
or
dec
fcoms
mov
lods
push
scas
je
sahf
add
dec
sbb
sarb
aaa
imulb
mov
and
lock
shl
cmp
cmp
loopne
adc
jle
sbb
test
add
and
pop
adcl
adc
xor
pop
pop
out
mov
ret
dec
push
dec
mull
sub
clc
lcall
stos
pop
or
adc
lods
jg
dec
fnsave
cmp
pop
sbb
mov
add
xchg
imul
fstpt
pop
adc
or
xchg
jle
push
adc
push
mov
sub
ss
subl
aad
std
dec
ret
rcll
adc
inc
je
dec
jle
inc
xor
nop
mov
mov
xchg
xchg
es
mov
fcomip
push
ret
cmp
out
jno
sarb
adc
ss
imul
lcall
sbb
dec
insb
ret
lret
jns
loop
imul
shl
or
dec
mov
cmpsb
dec
or
fmull
mov
sub
std
inc
push
dec
dec
push
mov
sti
fistl
sub
push
scas
ss
inc
dec
sub
imul
pushf
and
add
ja
lcall
mov
cmp
lods
enter
mov
pushf
xchg
add
cld
neg
fsubp
stc
mov
in
daa
and
test
pushf
jge
call
in
testl
or
out
jge
and
xlat
adcl
xchg
in
adc
dec
ror
xchg
cmp
and
frstor
pop
inc
loop
test
push
outsl
xor
repz
or
shlb
decb
cmp
cmp
fisubrs
sbb
jp
fnstcw
mov
mov
jecxz
mov
jge
mov
lea
jns
lock
mov
adc
add
jl
push
shr
pop
mov
jp
out
ss
leave
add
les
pop
xchg
xchg
popf
jns
add
jge
pop
ret
xor
sbb
or
xlat
sub
dec
int3
xor
outsb
jb
push
adc
xchg
mov
sbb
add
add
mov
lds
out
ret
loope
cs
pop
jo
and
xchg
sbb
addl
cmc
push
jl
mov
adc
xchg
pop
std
pop
scas
xchg
adc
xlat
hlt
out
ds
rolb
pop
hlt
inc
loopne
push
inc
shrl
cld
stos
mov
push
das
and
dec
dec
das
inc
cmp
and
sbb
fcompl
icebp
cmc
pop
scas
jnp
fs
add
pusha
test
dec
addr16
xor
xor
add
add
cli
sub
pop
and
das
push
pop
jp
push
adc
xor
das
jne
inc
sbb
push
inc
nop
cmc
or
iret
int
mov
push
cmp
addr16
xchg
push
cwtl
cltd
divb
inc
scas
adc
sub
jecxz,pt
or
xchg
adc
mov
mov
mov
mov
lret
mov
popf
dec
out
lea
push
dec
jp,pn
ror
sbb
cmpsb
sub
das
imull
pop
pop
push
mov
hlt
in
mov
lods
add
xchg
jecxz
aam
jp
or
cmp
sbb
xor
insb
mov
push
dec
inc
xchg
or
cmp
fwait
into
repnz
out
push
jg
scas
xor
sbb
inc
pop
ja
jp
jmp
mov
flds
or
negb
pop
xchg
jge
jl
jns
adc
xchg
inc
insb
mov
adc
mov
pop
popa
xorb
into
pop
adc
dec
movsl
cld
sub
dec
daa
mov
cmc
mov
sbb
sbb
xor
ret
xor
mov
sbb
inc
adc
popf
adc
jae
xchg
cmpl
jb
cmc
pop
mov
dec
fcom
icebp
lock
mov
add
push
cmp
movsb
cmpsb
aam
mov
add
loope
push
fnstenv
imul
nop
addl
movsb
out
enter
idivb
arpl
clc
divb
dec
sub
and
lret
dec
push
jg
add
inc
push
shr
daa
jne
clc
mov
add
mov
or
pusha
dec
or
sahf
pushf
rcr
cmp
sbbl
jbe
es
and
pushf
cmpsb
and
xor
in
repnz
fisttpl
mov
das
int
or
insl
mov
or
stc
dec
or
and
xchg
sub
fsub
add
insb
imul
or
iret
inc
sahf
cld
fisubl
mov
lods
pop
fnstenv
subl
jno
into
fs
jge
aas
gs
pop
mov
dec
mov
dec
adc
mov
shrl
dec
xchg
adc
cmp
cmpsb
mov
cwtl
dec
pushf
jo
shr
add
pop
xor
mov
popa
jno
cmp
jne
push
clc
adc
je
push
mov
mov
mull
cmp
pushf
and
jnp
jp
and
sbb
push
clc
cmp
or
mov
aad
and
xor
lret
popa
les
cmc
add
int
inc
add
cmpsl
push
pop
mov
cmpsl
sub
or
les
pop
inc
imull
mov
jmp
rcl
adc
test
dec
dec
aaa
outsb
pop
clc
fistpll
imul
mov
std
nop
ds
cmpsl
stos
test
subb
jae
or
ficoms
or
aad
fdivs
lret
mov
fdivl
xchg
mov
movsl
sub
je
cmc
mov
add
popf
out
orl
mov
fdivp
div
xorb
das
into
std
jp
jmp
push
or
adc
xchg
xor
aaa
mov
mov
and
repnz
inc
jnp
xchg
pop
jae
cli
mov
insb
jb
int
shl
sub
mov
xor
jo
pusha
outsb
sub
dec
in
in
jbe
pushw
decb
iret
inc
imul
sub
dec
jp
dec
xor
mov
lods
fnstsw
cltd
out
les
jmp
jne
or
std
test
sub
xlat
cmpb
pop
call
pop
mov
sub
aad
int
testb
mov
mov
ljmp
sub
aas
sbb
shlb
fmuls
mov
push
or
je
lock
stc
pop
out
mov
and
and
stc
xchg
setg
icebp
mov
cmp
pushf
outsb
fxch
and
inc
pop
scas
mov
stos
xorl
jns
dec
adc
insl
fimull
xchg
stos
cmp
int
lahf
ja
mov
add
repnz
fs
jne
out
leave
js
pushf
hlt
in
mov
and
adc
in
scas
leave
sub
cmpl
cs
jne
inc
sbb
popf
imul
nop
outsl
fwait
or
inc
mov
dec
or
shr
push
lcall
icebp
jbe
add
inc
stos
fisttpll
aam
sbb
ret
mov
inc
pop
mov
mov
push
in
outsb
mov
or
int3
stos
dec
dec
mov
and
xchg
or
scas
pop
shll
inc
aad
sbb
aam
arpl
and
adc
or
xor
lcall
or
xchg
mov
movsb
stc
mov
test
out
mov
cwtl
mov
imul
mov
test
insl
cmp
scas
lds
dec
xchg
jae
jns
mov
sbb
out
call
xor
pop
test
jbe
push
ljmp
sub
dec
jge
sub
mov
pop
test
push
push
sub
xchg
jb
test
shrl
mov
xor
push
or
lret
mov
call
subb
scas
ds
jne
jp
stos
xchg
adc
data16
loopne
mov
sub
sahf
pop
out
aad
or
inc
in
outsb
imull
lock
icebp
sbbl
mov
stos
lahf
stc
jns
fst
mov
cmpsl
stos
xlat
sarb
inc
sahf
in
ret
push
shll
test
adc
ds
mov
sahf
fists
xchg
imul
insb
cmpsb
pop
loop
daa
inc
xchg
or
sub
jge
lret
call
or
adc
lds
and
aam
rcr
popa
dec
stc
sub
or
mov
mov
fdivrs
and
lahf
cli
adc
notl
xlat
aam
mov
adc
mov
dec
test
inc
adc
dec
loop
mov
aas
call
dec
jge
lahf
enter
xor
add
jg
inc
sub
clc
xchg
pop
sbb
xlat
and
mov
loopne
jge
push
push
sahf
cli
sbb
xchg
dec
push
outsl
xchg
repnz
mov
je
fcomps
rcrl
fcomi
cwtl
test
adc
movsl
popf
xor
push
jb
push
pop
mov
lock
push
cld
or
rclb
aam
adc
jns
daa
cmp
in
xlat
ss
jns
cmp
pushf
lret
outsl
rcrl
and
jmp
push
jae
sub
pop
dec
fadds
jmp
lret
push
test
insl
pop
sar
jmp
dec
adc
imul
add
xlat
push
in
dec
mov
xchg
mov
xor
iret
imul
adc
mov
daa
and
shl
fcoms
fidivrs
addl
insb
fwait
scas
inc
ret
jns
mov
push
mov
add
xchg
mov
out
jnp
rcrl
and
cs
inc
sub
jmp
or
popf
arpl
jp
orb
bound
icebp
ret
enter
xor
aas
sub
jo
mov
notl
test
cmp
mov
stos
ds
jp
push
cld
sub
loop
cld
ljmp
jmp
mov
jmp
jbe
jp
test
stos
insb
fstp
nop
fcoms
or
dec
push
push
xchg
rol
inc
xchg
shlb
xchg
aam
das
sub
cmp
xor
inc
push
lods
inc
mov
fmull
inc
fmull
xor
push
pushf
lea
ljmp
sub
mov
mov
cmpsb
cmpsb
inc
sbb
mov
movl
dec
std
and
jo
jmp
or
lds
shrl
lds
mov
js
jbe
or
mov
fs
and
lods
mov
out
add
les
and
and
out
push
lock
cmpsb
push
xorb
mov
data16
out
and
aam
jbe
iret
incl
or
pop
dec
lods
int3
sbb
pop
jmp
push
jae
shr
sub
cwtl
or
mov
pop
mov
popa
xchg
inc
and
mov
imul
out
ds
pop
xchg
mov
sbb
pop
ljmp
push
cmp
add
mov
push
enter
movsl
sub
lret
div
bound
out
sub
fucomi
aad
jbe
test
in
sbb
aaa
inc
stos
je
push
ss
data16
icebp
push
or
shlb
outsl
mov
sbb
xlat
loop
add
loope
push
jnp
xor
sub
pop
popa
or
and
cmc
mov
ret
dec
mov
repz
std
jle
or
pop
xchg
sbb
cmpsl
outsb
or
xor
jno
es
cld
shlb
inc
adc
push
fcoml
cld
dec
sti
pop
mov
les
mov
ffree
push
dec
sbb
pushf
rolb
jmp
jb
sub
push
and
dec
inc
push
pushl
sbb
test
into
cs
mov
xchg
pusha
jmp
sbb
cmp
dec
xchg
addl
lds
xor
ja
adc
sub
push
rclb
cmpsb
push
xchg
mov
adc
addr16
je
pop
loop
sub
leave
int
int3
test
iret
clc
jb
mov
mov
jae
sti
mov
jge
jmp
sahf
lcall
mov
cmp
ds
and
mov
push
mov
add
imul
mov
repnz
lods
adc
jo
je
icebp
adc
xor
dec
jg
cld
dec
ja
xchg
adc
cmc
popa
push
xchg
imul
loop
adc
cltd
stc
and
sub
add
xor
imul
push
jmp
or
xchg
mov
add
test
add
push
jae
out
roll
arpl
sti
cwtl
sub
cmp
out
xchg
jno
adc
pop
stos
cli
lcall
push
or
cwtl
lods
inc
nop
fwait
sub
inc
lds
jae
scas
push
or
sbb
sub
xor
or
repnz
js
dec
mov
ds
out
and
stos
cmp
mov
push
jp
dec
push
sub
jecxz
mov
mov
aam
xor
mov
xor
bound
sbb
pop
xor
call
push
sbb
xchg
jno
outsb
mov
test
pop
dec
outsl
cmp
enter
xchg
dec
test
xchg
cmpsl
or
mov
negl
mov
insb
cmp
arpl
ret
std
imul
pop
pop
inc
sub
ljmp
ficoms
mov
cmc
jge
movsl
ds
mov
cltd
jae
mov
xor
stos
out
mov
cmc
cmp
leave
adc
daa
pop
pop
pop
scas
popl
add
dec
pusha
out
imul
fcoms
divl
push
negb
adc
adcb
testl
popa
dec
loop
add
xchg
nop
aam
out
cltd
repz
push
push
cli
dec
push
dec
xchg
stc
sub
clc
push
mov
loopne
call
push
cli
and
cmc
jl
leave
jno
xchg
pop
push
aam
sbb
stos
push
sbb
lret
mov
enter
xchg
sbb
movsl
test
int
gs
sub
dec
in
lret
pop
push
jbe
scas
jo
or
mov
popf
mov
lret
sub
lds
mov
cmpsl
xchg
clc
iret
adc
xor
xor
push
daa
fisttpl
shr
push
lea
in
xchg
push
jne
pop
insb
xchg
xor
in
rcrl
fwait
mov
aad
out
mov
cmp
js
shll
cmc
cmp
fistps
mov
jle
adc
aam
jle
sbb
adc
mov
dec
call
outsl
out
dec
or
pop
mov
lock
fldenv
adc
mov
insb
push
pop
xor
test
xor
adc
fwait
xchg
ds
lcall
xor
test
dec
cmp
in
and
cmc
inc
jle
sub
pop
or
cmp
adc
outsl
int
mov
test
xor
icebp
push
dec
call
push
and
or
cmp
cld
mov
call
test
loop
cwtl
stos
out
mov
and
sbb
aam
pop
ret
cmp
mov
mov
jo
outsb
add
pop
or
iret
or
inc
add
adc
add
pop
add
xchg
jl
add
push
add
xchg
push
inc
add
add
stos
adc
testl
jbe
inc
push
jno
movsl
add
push
inc
int3
cmp
cmp
orl
mov
in
icebp
mov
push
inc
test
xchg
and
xor
hlt
pop
sbb
or
mov
mov
cmpl
fnstsw
daa
mov
jne
imul
mov
mov
mov
push
push
call
mov
jg
rorl
push
adc
cmp
in
arpl
bound
mov
outsl
lods
hlt
mov
xchg
and
or
hlt
add
dec
jns
add
mov
push
sub
out
sahf
ret
in
jne
add
rcrb
aam
cwtl
xor
popa
xor
pop
jmp
loopne
mov
xchg
mov
push
xor
pop
lcall
ror
jge
lds
pusha
mov
pushl
jmp
in
pop
sub
xchg
stos
je
xchg
movsl
in
fldt
pop
jnp
pop
inc
push
cwtl
push
mov
test
sub
mov
pop
jmp
and
test
ret
gs
push
icebp
push
aam
andb
mov
adc
ret
cld
add
adc
jg
fisubl
jl
cmpl
push
xchg
jae
mov
mov
cmp
xchg
add
xor
lods
push
xchg
dec
pushf
adc
shll
jnp
cmp
add
inc
jns
fisubrl
xchg
xchg
fistps
lods
ljmp
mov
aas
mov
enter
xor
xor
cltd
push
or
dec
add
fcmovne
ljmp
movsl
or
ds
jmp
sbb
jb
add
addb
and
dec
shll
jbe
adc
push
lds
jno
lea
fisubs
xchg
jnp
adc
lret
insb
xchg
imul
imull
jo
sar
cmpb
loopne
push
or
jne
inc
ss
push
lods
jnp
shll
scas
xlat
jno
pop
inc
xchg
ret
mov
sub
push
pop
mov
repz
jmp
stc
ud1
adc
and
pop
dec
fbld
test
es
pushf
enter
mov
jp
push
inc
shlb
scas
xlat
cmp
and
push
out
pop
add
stc
pop
add
mov
loope,pn
mov
mov
std
xor
test
loopne
add
orb
out
jp
mov
cmp
mov
mov
hlt
jo
popa
mov
pop
push
pop
or
into
int3
sar
jns
xlat
cmp
cltd
imul
pop
repz
rolb
jne
mov
test
nop
test
idivl
loopne
cmp
mov
andb
sti
mov
popa
adc
mov
roll
ds
orl
inc
imul
sbb
repz
push
sub
pusha
loopne
jecxz
pop
insb
stc
jle
xchg
pop
push
daa
jne
les
inc
aas
mov
mov
sub
leave
je
xchg
iret
push
xchg
lds
mov
push
jbe
sbb
ds
mov
gs
xlat
into
lret
and
xchg
pop
mov
into
xchg
push
nop
shlb
shl
inc
das
out
mov
xchg
in
jmp
push
inc
repz
daa
jle
fistl
xor
cmp
push
sarl
loope
pop
pop
ror
sub
inc
cmc
and
sbbb
jmp
xor
mov
xor
dec
adc
das
sub
rolb
and
sbb
sbb
mov
cld
xor
js
flds
js
pop
test
test
adc
pusha
rolb
dec
xchg
aaa
add
jmp
mov
mov
js
jmp
adc
xorl
scas
pop
cmp
adc
push
pop
sbb
sti
pop
sub
in
push
mov
push
jae
push
lock
fs
xor
xchg
loopne
cmpsb
fstp
scas
xchg
lock
adc
jmp
pop
loope
or
fidivs
into
lods
jo
mov
mov
or
xor
push
mov
shrb
in
ds
rcll
mov
sub
in
or
dec
ffreep
es
pop
mov
jno
cmpsb
fcoml
in
push
repz
cmp
ja
imul
fdivr
and
sbb
sub
shrl
in
dec
lahf
fxtract
push
xchg
sub
jmp
fwait
adc
and
mov
loopne
flds
fwait
repnz
pop
dec
lods
popf
in
cli
andl
aas
imul
jge
loop
jns
jns
scas
sbb
pushf
ret
es
pop
fists
repz
addb
test
imul
loope
fisttpl
mov
cmp
jl
arpl
arpl
lret
xor
arpl
add
gs
mov
dec
pop
fdivrl
pop
into
cs
into
enter
imul
cs
xor
push
cmpb
jg
xchg
xor
add
mov
push
std
test
gs
lcall
adc
jae
aad
mov
sub
inc
jmp
lods
das
lea
aaa
sbb
cmp
add
rolb
pushf
gs
xor
inc
enter
and
repnz
and
and
xor
adc
mov
nop
inc
fbld
imul
inc
mov
pop
push
and
rorb
adc
cmp
add
dec
push
cmp
fsubl
mov
push
inc
shlb
jb
loopne
call
fwait
js
inc
lock
jg
in
jns
fcoms
nop
xor
mul
movsl
ficomps
test
xor
dec
jns
lcall
leave
shll
push
xchg
insb
mov
pop
mov
ds
dec
add
int
gs
outsl
in
push
gs
loopne
xchg
imul
fcom
cld
push
mov
bound
clc
daa
les
mov
mov
mov
sbb
int3
xchg
stc
xor
inc
adc
mov
xor
sbb
adc
in
xchg
aaa
cmp
push
in
les
fs
xor
test
pusha
rclb
test
sbbb
push
test
push
fildl
test
test
imul
mov
or
xor
movsl
adc
hlt
les
mov
clc
clc
js
sbb
push
fnstcw
popf
jno
cltd
out
sti
cmpsl
cmp
pop
xchg
out
pop
xchg
stos
inc
shrb
repnz
sar
sub
lret
bound
fsubp
sti
push
push
or
shl
fstpt
jo
cltd
icebp
jp
or
xchg
enter
mov
xchg
filds
movsl
sbb
pop
in
push
popa
sbb
shl
pop
xor
call
pop
pusha
ds
in
adc
xor
adc
cmp
arpl
popa
and
std
ja
mov
dec
push
aas
jmp
gs
enter
fs
out
aas
mov
clc
ljmp
adcl
call
jo
and
sbb
scas
les
icebp
adc
lods
pop
jo
inc
rcr
inc
imul
and
inc
loopne
xor
daa
aam
inc
xor
iret
adc
dec
push
xlat
sti
std
sti
mov
in
rorb
lcall
jl
fcom
and
subb
cmp
add
stos
popa
and
fistps
push
scas
adc
arpl
and
lret
mov
mov
pop
xchg
nop
imul
add
inc
roll
rolb
bound
dec
add
mov
out
adc
fstpt
ret
mov
iret
xor
mov
fcoms
out
cwtl
iret
out
pop
rcl
mov
and
movsb
fdivs
lods
mov
cvtps2pd
pop
pop
push
test
stos
mov
lods
add
sbbb
movsl
and
test
mov
rcl
xchg
cmpsb
mov
loop
int3
lods
in
xchg
adc
sbb
cld
jecxz
pop
lods
dec
inc
repz
test
lods
inc
mov
cltd
imul
repz
lcall
sahf
cmp
xchg
inc
cmp
adc
jge
push
in
imul
mov
fildll
pop
add
and
lods
into
cmpsl
les
cmpsl
pusha
cmpsb
xor
es
push
push
pop
js
lret
push
clc
sub
shll
stc
xchg
or
arpl
push
mov
les
fidivrs
sub
loope
int3
cmpsl
repz
lahf
frstor
pop
addl
cmpb
ss
dec
pop
add
outsl
xchg
cmc
out
fcompl
sub
or
xchg
imul
cs
jmp
mov
pop
jp
cmp
nop
dec
lods
ss
mov
addr16
inc
dec
cmpsl
fs
test
mov
scas
or
in
cltd
aaa
sarl
in
mov
loopne
dec
push
lock
jp
or
cmp
ret
movsl
inc
pop
jns
inc
dec
and
in
cld
inc
fistpl
bound
sub
stos
jmp
loope
rcrl
inc
push
shl
or
jge
add
pop
jle
jbe
mov
mov
xchg
push
pop
pop
cltd
dec
push
adc
jl
pop
dec
in
jno
push
xor
cmc
shl
loop
sbb
jle
cmp
and
pushf
movsl
fwait
mov
and
icebp
das
in
sbb
sub
fwait
xchg
jmp
fisubrs
ret
lods
test
scas
jno
pop
je
loope
into
push
ret
push
ja
out
jl
add
fucomp
inc
sbb
repnz
lea
inc
sub
sti
repnz
pop
pop
cmc
push
xor
test
fmul
call
jne
or
pop
pop
push
mov
aas
inc
cld
xor
int3
shll
popf
mov
pop
inc
outsb
xlat
sbb
repnz
dec
in
movb
int
icebp
xchg
hlt
stos
sbb
jl
pop
outsl
in
xor
mulb
out
out
push
roll
xorl
je
sete
popa
ss
jns
cs
popf
mov
icebp
push
xor
jp
add
jl
xchg
or
mov
orl
adc
mov
ret
mov
jb
cmp
or
mov
and
xchg
jne
orl
jp
xchg
xor
mov
mov
and
lahf
ret
add
push
sbb
mov
jne
inc
daa
outsb
or
lods
jg
mov
mov
jo
daa
jp
stos
imul
pop
scas
push
rorb
mov
das
and
cmp
pop
ja
pushf
aas
aad
dec
sub
leave
scas
mov
push
push
cmpsl
jmp
mov
inc
in
adc
mov
dec
ror
inc
les
arpl
lea
or
fcmove
inc
xor
inc
or
shr
pop
mov
inc
adc
mov
jecxz
stos
outsl
scas
enter
cmp
das
lahf
daa
test
pop
jno
mov
cmp
or
pcmpeqw
out
mov
inc
std
pop
mov
inc
and
repz
sub
mov
je
popa
in
data16
lods
loop
scas
xor
rcr
or
lock
xchg
sbb
push
or
aaa
jmp
xchg
sub
push
xchg
clc
xor
adcl
mov
enter
ss
in
filds
inc
inc
mull
sub
test
ds
sub
mov
inc
rorl
add
mov
stos
ljmp
cmp
enter
loope
mov
or
test
lret
add
cltd
int
popf
adc
cmp
mov
pop
cmpsl
not
sti
xor
fs
add
xchg
adc
and
xchg
mov
xchg
inc
stos
mov
bound
dec
movsl
adc
dec
stc
dec
jo
dec
push
mov
sub
jg
lock
fadds
or
jle
jo
xchg
test
andl
cli
push
dec
sub
rorb
sbb
gs
sbb
aad
jecxz
mov
in
popf
fadd
stos
lret
xor
dec
pop
push
scas
popa
sub
sub
out
ds
sbb
out
ret
pushf
mov
into
daa
pop
in
cmp
ret
xchg
xchg
adc
addr16
std
gs
xchg
arpl
push
xchg
test
xor
adc
in
mov
test
hlt
dec
fs
lret
cld
fadds
das
ljmp
stos
outsb
or
and
or
shrl
popa
jge
ret
adc
dec
adc
and
pop
pop
aam
xchg
imul
negb
jne
dec
lahf
xchg
in
lahf
adc
sarb
adc
pusha
push
fistpl
lahf
out
aaa
cmc
gs
xor
loop
adc
jns
notl
and
imul
push
sub
js
jo
mov
lahf
dec
in
iret
int
iret
xchg
push
mov
movsb
out
in
test
inc
xor
push
push
aas
mov
push
into
lahf
es
inc
ficomps
fcomps
in
mov
pop
js
ds
push
rcrl
and
jge
icebp
repz
les
inc
push
into
jge
aaa
fs
jns
sbb
insb
int3
lret
mov
jmp
iret
jp
out
push
dec
aam
aas
add
aad
jnp
xchg
out
scas
cltd
movsl
jle
push
mov
dec
sahf
mov
or
arpl
cs
aaa
in
inc
ficoml
jl
dec
rcrl
jo
mov
mov
push
xchg
jecxz
mov
xchg
aaa
mov
lock
fimuls
lock
cmp
pop
inc
xor
or
jnp
adc
sbbl
ret
jno
sbb
std
or
in
les
js
daa
push
mov
addl
stos
ret
adc
test
add
adc
adc
jle
jecxz
push
cmp
in
sbb
std
dec
pop
fucomi
out
cs
faddl
xchg
cmp
dec
cmp
test
notl
push
push
xchg
rcrb
das
pop
out
or
sub
stc
mov
xor
xchg
and
inc
add
sbb
fisubs
call
cltd
inc
lcall
es
repnz
push
pop
sub
loop
test
and
fdiv
addb
cwtl
or
mov
rcll
mov
add
lret
clc
mov
es
shl
add
mov
setbe
and
leave
mov
stos
pop
add
push
int3
pop
divb
cmp
aas
arpl
push
mov
js
insb
mov
test
jl
xor
inc
je
orb
pop
push
out
arpl
mov
cmp
xorb
enter
xor
and
mov
icebp
icebp
iret
imul
xchg
popl
lods
ss
aad
cmpsb
and
mov
sbb
add
movsl
into
je
lods
fisttps
pusha
out
push
add
sbb
popa
ret
lahf
mov
cmp
rclb
dec
cld
mov
orl
hlt
pop
push
add
jne
stos
dec
imul
xchg
sub
jne
sbb
jo
xchg
scas
add
rol
jae
adc
lret
inc
lahf
out
mov
shlb
fcomps
xor
sbb
and
pop
sub
lock
test
aad
out
sbb
aad
and
scas
pop
push
add
call
jb
rorl
pop
sub
in
scas
mov
out
xor
loope
fidivl
movsl
sub
push
aam
mov
xor
mov
or
sbb
loopne
setbe
or
mov
jmp
mov
ds
rcll
add
push
sub
mov
cs
leave
fs
popf
push
lret
mov
ret
mov
in
mov
stos
dec
jae
mov
stos
fs
push
pusha
ljmp
mov
movq
loope
gs
out
aam
bound
dec
push
pop
cmp
rclb
cmp
int3
idivb
sub
std
sub
inc
and
in
das
pop
dec
ret
adc
mov
es
mov
dec
test
mov
jg
test
cmpsb
mov
sbb
mov
inc
aad
cltd
cs
fisubrl
pusha
dec
mov
pushl
add
jae
ret
xor
ja
mov
subl
inc
dec
sbb
sbb
repnz
and
test
decb
lret
int
mov
cli
test
outsl
xchg
jbe
outsb
icebp
in
jp
cmp
mov
or
mov
clc
adc
xor
nop
sbb
sbb
or
add
inc
ljmp
movsb
xor
rolb
pop
imul
sub
mov
loopne
or
int
dec
aaa
cmp
xchg
es
push
pop
pop
sub
jo
movsl
es
xor
adc
in
adc
xor
and
in
pop
cmp
lods
add
scas
popf
sbb
shrl
mov
lds
in
push
dec
push
shrl
lret
sub
xlat
cli
insl
and
push
xchg
cmpsl
jbe
clc
adc
dec
inc
jno
cwtl
push
mov
jge
jns
dec
jge
je
stos
xor
sbb
incl
aam
xchg
test
adc
pop
dec
mov
pushf
inc
lret
cld
inc
cld
mov
scas
in
scas
xchg
cld
sbbl
hlt
mov
int
cmp
stos
sbb
dec
lahf
out
fnsave
cld
scas
lcall
xchg
fwait
dec
incb
cmp
and
and
mov
and
ss
inc
lods
outsl
cmp
cmp
int3
xchg
std
or
stos
inc
pusha
ljmp
add
out
sub
and
leave
xor
fistps
ret
add
rcr
mov
add
push
movsl
xchg
out
leave
and
dec
js
push
mov
or
add
pusha
testb
js
cwtl
hlt
dec
push
xchg
dec
jmp
push
push
stos
xchg
lret
aad
cmp
xchg
cmpsb
and
repz
insl
pop
add
mov
lahf
xchg
sub
ret
add
mov
arpl
das
mov
sbb
cld
sub
mov
movsl
mov
sub
pop
xchg
xchg
cmp
movsw
inc
inc
sub
clc
clc
pop
push
fistpl
sbb
adc
test
mov
jp
addps
push
adc
sbb
mov
bnd
sub
push
bound
jns
mov
ror
mov
inc
aad
dec
push
pop
cmp
sub
das
std
cwtl
sti
out
rcll
mov
shll
dec
cmp
sub
sbb
int
mov
mov
dec
push
dec
sbb
add
cli
les
repz
nop
lcall
enter
pop
loope
xor
es
xchg
jnp
mov
cli
fists
data16
and
mov
add
inc
push
and
movl
adcb
xchg
push
xor
fidivl
gs
jle
sbb
stc
aam
iret
imulb
adc
push
sbb
cmp
les
fdivr
in
jo
dec
xchg
sub
aaa
fwait
mov
pop
mov
mov
mov
shlb
jle
sahf
mov
outsl
push
push
pop
push
mov
sub
adc
mov
inc
imul
xchg
add
fistps
and
or
or
scas
addr16
mov
xchg
addb
push
mov
nop
jmp
imul
xchg
fwait
pop
or
ljmp
popa
mov
push
inc
or
cld
xchg
mov
cmpl
test
mov
fldl
mov
mov
fs
out
mov
mov
sub
xor
divl
addr16
mov
dec
cmpsb
rcr
mov
es
xchg
sub
ljmp
les
ret
lret
sub
and
out
cli
testl
fcomps
xchg
jecxz
stos
lods
and
sbb
mov
add
loope
lret
enter
adc
xor
mov
loope
and
int3
add
jbe
fcom
add
gs
jb
cli
mov
push
imul
dec
cmp
xor
and
inc
mov
lea
inc
ss
mov
jp
mov
pop
dec
movsb
lcall
outsb
push
mov
push
mov
addb
lcallw
fimuls
push
aad
inc
ljmp
test
nop
xchg
cmpsb
mov
xchg
jmp
jo
ret
add
sbb
fldcw
dec
sbb
jns
test
add
pop
icebp
sbb
insb
clc
jmp
pop
mov
pop
hlt
or
popa
push
and
lcall
and
ljmp
je
dec
into
add
sub
imul
mov
ds
fstl
aas
or
pop
sbb
xchg
mov
ficompl
lret
or
out
scas
int3
cmp
push
movb
leave
or
icebp
cld
or
test
jns
push
inc
out
mov
push
insl
and
jns
mulb
fsubl
mov
ret
sbb
fdiv
mov
xor
mov
in
and
lea
notl
ds
int3
sub
jne
popf
pop
rclb
dec
push
push
popa
inc
dec
out
dec
mov
cmp
mov
push
outsb
mov
xor
movsb
jmp
rolb
adcb
xor
scas
push
jmp
xorb
xlat
jp
mov
imul
pop
jo
iret
mov
stos
sub
cmpb
xor
xor
dec
xchg
rcrl
or
out
repz
xchg
enter
push
sbb
lret
emms
sahf
push
jb
mov
shlb
cltd
cmpl
daa
jo
ret
shrl
das
lock
fildl
adc
sbb
insl
cli
pop
mov
pshufw
mov
xor
imul
cmp
pushf
push
decb
mov
call
mov
mov
loope
mov
sbb
or
ret
jns
jle
rolb
cmpsb
inc
or
scas
adc
nop
inc
and
mov
notw
clc
popa
push
out
and
xor
or
pop
addb
adc
and
mov
clc
sbb
lahf
lret
adc
fiadds
adc
mov
mov
test
fldenv
mov
cmpsl
pop
xchg
pop
cmc
jg
iret
fdivrs
cmp
push
jp
addl
xlat
xor
adc
mov
mov
cmp
xor
adc
jnp
into
push
and
aaa
adc
int
add
fwait
push
lret
sbb
hlt
shr
sub
rorb
xchg
push
mov
popf
mov
pushf
lods
loop
or
cmp
mov
adc
ds
or
xchg
hlt
xor
mov
xlat
fmuls
cmp
sub
rolb
jg
push
adc
pop
push
jge
dec
sbb
pushf
pop
xor
scas
add
or
int3
imul
push
dec
popa
std
out
cmp
jl
test
add
add
pop
dec
test
add
add
mov
push
inc
loope
xchg
ss
adc
popf
push
int
dec
fmul
std
jns
pop
stos
and
xor
and
lock
mov
nop
jns
std
hlt
aam
daa
push
loope
xor
adcb
rcrl
cs
std
lock
sbb
jge
sbb
sub
aas
scas
cmp
data16
sbb
call
mov
mov
push
mov
and
push
mov
cmc
or
dec
adcl
in
dec
xor
adc
jge
cld
mov
push
js
pop
int3
cmp
in
js
sbb
pop
pusha
in
daa
push
cmp
and
int
lret
fldt
addr16
lcall
or
das
mov
mov
loope
lcall
or
xor
fs
or
cmp
mov
fdivrs
mov
and
mov
push
mov
inc
or
ret
xorb
negl
mov
lret
inc
stos
jl
aam
aas
xchg
jmp
cwtl
data16
or
scas
jo
mov
cmp
mov
push
cmc
pushf
outsb
or
pushf
add
scas
iret
inc
lcall
flds
lea
popf
fnstsw
scas
adc
scas
mov
inc
test
das
iret
inc
ds
test
mov
xor
jb
stos
inc
pushf
xchg
js
fsubl
dec
pop
cmpsb
dec
dec
cwtl
sub
jno
and
gs
push
mov
lods
in
fisttpll
pusha
mov
ja
flds
repz
add
pop
ret
imul
mov
out
cmp
leave
add
pop
enter
bnd
lcall
nop
sbb
jae
or
mov
mov
push
ret
jecxz
aas
dec
and
movsb
inc
cmp
dec
xor
orl
and
xchg
and
and
in
inc
pushf
js
add
sbb
xchg
push
in
lea
repnz
inc
ret
stc
cmp
sbb
out
mov
test
jmp
in
int
push
in
lds
adc
loope
mov
xchg
outsb
stc
add
mov
mov
in
push
and
arpl
ret
and
cmp
adc
mov
push
mov
rcl
mov
mov
add
lock
dec
sub
call
dec
xchg
pop
or
int3
push
push
or
mov
pop
movsl
xor
or
add
pop
mov
inc
fwait
pop
icebp
fcoml
pop
sti
andb
sbb
mov
fmull
in
popa
sbb
in
in
pusha
jae
jb
aaa
sub
mov
mov
ret
mov
xchg
push
ret
dec
pop
jb
mov
add
fwait
shlb
and
call
dec
fs
movsb
adc
sub
in
out
jmp
les
sahf
dec
inc
or
iret
sbb
es
dec
imul
xchg
jne
sub
add
cs
stos
cld
lahf
jl
in
imul
jbe
rcr
mov
and
jns
add
cmc
xor
test
jae
fisubrl
mov
adcl
pop
push
pop
mov
int3
pop
mov
push
les
into
std
movsl
mov
loopne
inc
sub
jecxz
sbb
pop
in
inc
sub
mov
int3
jecxz
dec
cmpsl
mov
sub
mov
mov
sahf
bound
jg
bound
and
xchg
xor
jg
int
fcmovnu
js
pusha
fsts
sahf
sub
clc
xor
shrb
sar
mov
adc
fistpll
loopne
mov
daa
cwtl
lods
rclb
out
mov
outsb
fwait
add
sbb
adc
xor
mov
adc
or
mov
data16
sbb
imul
xor
fistl
popa
and
pop
xchg
xchg
xchg
sbb
insl
arpl
mov
cmp
jno
jae
pop
stos
mov
adc
pop
push
xchg
in
xchg
daa
sbb
rorb
or
adc
fimull
movsb
jns
adc
xor
imul
icebp
cmpsb
jmp
or
push
scas
push
hlt
imulb
jge
pop
cmp
add
sahf
in
xchg
fdivrs
hlt
push
and
add
enter
mov
push
test
nop
sub
mov
pop
imull
mov
int3
jno
lock
xchg
out
jecxz
cmpsl
js
mov
or
mov
enter
sub
mov
dec
and
mov
mov
push
xlat
pop
xchg
xchg
push
sti
stos
arpl
das
xchg
mov
xchg
inc
sub
out
rol
gs
stos
or
xorb
add
mov
in
js
xor
and
pop
test
stos
aas
inc
adc
xchg
insl
pop
pop
sti
lods
pop
inc
bts
add
mov
icebp
int3
ljmp
xchg
dec
add
fisttps
mov
scas
aad
cmp
sub
push
jae
decb
mov
xor
cmp
pop
add
clc
bound
add
cs
jl
xorl
push
insl
cwtl
xor
mov
add
push
in
sbb
mov
sub
paddsb
rorl
xor
dec
nop
ret
dec
sub
dec
mov
pop
sahf
cltd
movsl
movsb
bound
ret
xchg
push
pusha
hlt
cmp
or
dec
ja
fbstp
sbb
jno
enter
mov
outsb
lahf
sbb
incl
hlt
notl
fidivs
jl
dec
sbb
test
out
adc
call
fstp
rcrb
mov
cltd
mov
leave
sbb
jns
adc
cmp
jmp
ficoms
fidivrl
iret
or
dec
stc
and
cmp
test
stos
dec
dec
sbb
cli
cmp
insl
jnp
push
ja
sbb
pop
sub
cmp
subb
sub
and
lds
xchg
lcall
out
pop
push
xchg
xchg
and
cmc
les
divl
or
adc
sahf
push
add
inc
xchg
push
fisubs
jb
ja
in
sbb
sub
jecxz
inc
scas
push
jg
pop
sub
fimuls
in
dec
scas
mov
arpl
repz
popa
add
dec
sbb
rcll
movsb
mov
push
add
xor
jo
mov
xor
es
leave
cmp
stos
mov
push
sahf
inc
icebp
pop
xchg
pop
mov
jnp
xor
inc
push
sbb
fisubs
and
add
cmp
addb
int3
pop
inc
and
out
add
in
push
add
xchg
jb
aad
adc
lock
and
jge
or
repnz
inc
bound
sbb
pop
fwait
pop
xchg
jnp
push
ja
icebp
mov
inc
fadd
push
jbe
add
xchg
out
gs
add
sbb
xor
jg
popl
cmc
xchg
inc
mov
cmc
add
mov
outsb
aam
jmp
loopne
mov
pop
push
sti
out
and
mov
push
adcl
sbb
sbb
and
int3
lock
outsw
adc
out
das
sbb
in
icebp
out
push
outsb
cmc
leave
xor
and
insb
and
or
push
loopne
xor
ret
jb
push
add
aam
mov
inc
shr
pop
jle
out
inc
pop
jge
mov
orb
int3
mov
push
lock
mov
rclb
adc
mov
cmpsb
inc
sbb
cmp
sti
push
enter
je
inc
stc
mov
sbb
aaa
xchg
fwait
lret
notl
sbb
into
push
xchg
xor
mov
mov
sbb
lahf
fistps
jne
jne
jo
es
sbb
inc
icebp
jg
in
mov
pop
clc
jecxz
mov
std
popf
inc
shll
cld
cmp
ljmp
add
adc
adc
bound
push
mov
sbb
lock
xor
in
jg
rcrl
jge
test
js
push
mov
ficomps
inc
xchg
out
add
xor
xor
mov
mov
inc
xor
mov
add
sbb
daa
ljmp
inc
pushf
pop
push
jbe
fidivrs
xchg
xchg
push
popf
or
and
xchg
mov
repnz
inc
fcmove
scas
adc
addr16
xchg
mov
dec
clc
push
xor
push
scas
xor
in
shlb
jmp
mov
roll
add
lret
aaa
jg
jae
inc
cwtl
cmpsl
jbe
and
add
fistl
out
add
ret
push
inc
movsb
push
jl
mov
add
loopne
test
in
test
pushf
rorb
and
outsl
insl
int3
hlt
stc
add
shll
cs
mov
lcall
nop
pop
push
fs
xor
movsb
cwtl
sbb
add
mov
adc
repz
dec
push
mov
inc
inc
add
add
xor
xchg
or
cmp
pop
aaa
xchg
mov
mov
scas
adc
add
lret
je
leave
and
mov
int3
adc
sub
lret
pop
sbb
pop
dec
aas
ret
jno
fs
or
push
bound
aam
ret
pop
mov
loop
cli
dec
daa
inc
add
or
or
nop
dec
inc
xchg
ds
hlt
aaa
adc
mov
popf
dec
sbb
mov
mov
add
mov
mov
pop
mov
or
das
cli
daa
das
clc
mov
cli
scas
cs
repnz
mov
stos
inc
roll
xlat
repnz
inc
xor
cld
pop
repz
jmp
mov
add
outsb
rcrl
lret
cmc
in
popa
imul
fwait
cmp
or
popa
fcomps
sub
in
insb
mov
aaa
js
adc
data16
ja
cs
mov
pop
shrb
popa
jl
int3
or
sbb
mov
sbb
dec
je
loopne
and
fdiv
jb
ljmp
test
out
cld
gs
xchg
mov
fs
in
push
icebp
adc
push
mov
push
loope
sti
xor
lcall
cmp
stc
mov
push
out
sarb
and
stc
fidivrs
add
sarb
mov
adc
lret
cmp
int
or
inc
ss
cmp
mov
mov
in
inc
jmp
add
mov
cs
push
in
pop
pushf
jae
xchg
add
addl
out
dec
and
add
lahf
insl
adc
jne
inc
call
xchg
cli
cmp
push
push
mov
loopne
arpl
sub
xor
push
push
imul
out
mov
pop
pop
call
in
mov
pop
mulb
lock
je
mov
jo
mov
add
pop
arpl
jbe
int3
ljmp
mov
fisubs
repz
sub
dec
xchg
mov
clc
mov
ret
lock
sub
adc
call
out
hlt
sub
mov
mov
push
imull
fstpt
out
cmp
cs
jbe
ljmp
push
daa
decb
sub
nop
mov
push
enter
mov
and
call
push
loop
or
xor
sbb
mov
add
stos
jecxz
adc
mov
pusha
xor
mov
xchg
repz
daa
in
or
out
pop
dec
ret
les
lds
aaa
lret
loopne
jle
into
cmp
std
popf
inc
out
enter
or
loope
jecxz
push
or
out
or
test
icebp
jns
mov
fs
neg
testl
sti
xor
popf
jnp
test
jmp
ds
and
jb
ds
jmp
or
cli
mov
pop
jne
sub
jno
sub
pusha
loope
repz
jmp
inc
sbb
mov
push
add
jnp
ss
imul
add
xorb
inc
xchg
add
mov
and
psubusb
shlb
stos
je
sbb
mov
jmp
cmpsb
adc
mov
xor
jno
aas
lock
pusha
jbe
jbe
push
rcrl
jp
jnp
add
push
shl
pop
push
xchg
aas
jmp
mov
inc
pop
adc
mov
adc
lea
cmp
dec
mov
jge
pop
lds
mov
imul
mov
xchg
imul
outsl
mov
fs
lcall
int
dec
and
ja
xor
sbb
popa
dec
data16
loop
xchg
cmc
pop
aas
jno
push
xchg
test
in
xchg
lods
xorl
push
mov
daa
leave
or
mov
push
ds
mov
inc
orb
xchg
push
dec
mov
mov
fwait
adc
clc
and
fildl
mov
jl
inc
cmp
add
jnp
pop
add
cld
mov
adc
scas
adc
scas
movsl
dec
cs
jo
jae
jmp
pop
sub
fstps
jl
inc
sub
loopne
mov
out
and
pop
mov
and
test
cs
out
inc
je
jmp
aam
int
ljmp
push
pop
jecxz
popa
inc
dec
pop
stc
xchg
mov
xor
pop
mov
call
mov
add
popa
fcomps
jb
popf
jge
mov
or
add
je
jmp
ficomps
mov
mov
sbb
loope
sub
lods
mov
cmpsb
out
add
cli
cwtl
add
inc
pop
pop
pop
cmp
int
sub
and
cmpsl
add
mov
out
xor
cmpsb
call
pop
insl
or
pop
data16
sbb
orl
insl
sbb
push
xchg
add
fnstcw
scas
mov
stos
test
sbb
adc
dec
pop
fnstcw
inc
aad
clc
push
jl
add
mov
inc
pop
mov
inc
jmp
lods
inc
mov
das
adc
ss
sub
mov
push
addr16
xor
test
cmpsl
shll
sub
bound
popl
push
enter
pop
xchg
mov
hlt
out
mov
ja
and
xchg
ds
mov
jecxz
and
lret
shlb
popf
fs
inc
cli
repz
push
movsb
and
sbb
cmp
xor
addl
jl
cli
ss
push
xor
aaa
pop
jbe
jo
add
xor
mov
cmpsb
std
or
sbbb
and
sahf
ds
mov
enter
xor
push
jle
scas
mov
xor
lea
in
sahf
push
je
cmpsl
push
jnp
shlb
dec
clc
adc
sub
insb
pop
jnp
cmpsb
or
mov
push
int3
out
mov
push
into
push
je
popf
pusha
decl
fwait
mov
jl
andb
loope
daa
loop
scas
mov
cltd
idivl
daa
jl
arpl
or
int
pop
adc
mov
adcl
lods
add
loop
rcrb
ret
loopne
pop
push
mov
pop
or
retw
test
loope
ss
fldenv
int3
clc
addb
imul
mov
inc
inc
push
and
scas
xor
inc
dec
lods
dec
out
xchg
push
mov
dec
jp
in
fsts
lods
mov
lret
dec
xchg
dec
dec
dec
pop
mov
pop
test
xchg
adc
iret
pop
je
orb
call
mov
or
cltd
pusha
or
pop
add
flds
xor
divb
les
cmp
push
mov
test
xor
sbb
and
test
adc
sahf
xor
test
movsl
insb
sub
mov
cmp
mov
std
ja
cwtl
mov
xchg
es
std
mov
test
and
adc
inc
sar
dec
movsl
jmp
push
ja
xchg
inc
das
in
mov
cmp
pop
add
dec
mov
je
inc
jle
xor
repz
div
ds
inc
add
inc
shrb
or
or
xchg
or
popf
lret
lcall
int3
insl
pop
xor
sub
cmp
xor
cmp
mov
fdiv
xchg
loopne
sub
aam
clc
xor
jbe
bound
push
push
sbb
js,pn
push
cmp
xor
loope
xor
xor
mov
loopne
cwtl
xchg
push
ss
jmp
mov
add
mov
jb
jp
adc
cs
pop
or
sbb
clc
dec
sbb
int3
jmp
sub
rclb
and
jecxz
or
fsubr
xor
push
push
adc
jbe
mov
scas
pop
mov
mov
mov
adc
xor
in
test
add
pop
add
ficoms
sti
es
stos
lock
mov
loope
pop
in
xchg
xor
adc
popa
push
lret
xchg
dec
ret
cmp
xor
lcall
cmp
cmp
xor
cld
loope
xchg
out
jp
jnp
or
jmp
sbb
mov
jae
mov
sbb
or
mov
mov
scas
push
aas
pushf
cmp
dec
sbb
inc
in
roll
xchg
cld
pop
incb
sbb
fdivs
aas
xor
insl
leavew
xchg
mov
outsb
adc
or
jl
in
stos
mov
xchg
push
add
inc
xchg
or
adc
push
pop
adc
dec
je
insl
js
hlt
lds
das
orl
leave
aad
shll
cmpsl
adc
cmp
push
stos
adc
ja
lahf
jecxz
jno
iret
push
xchg
pop
cmpsl
inc
dec
fdivrs
iret
jge
inc
push
scas
packssdw
mov
in
sub
idiv
inc
scas
mov
jb
inc
fdivrs
popa
fs
out
aas
je
test
inc
out
mov
outsl
xchg
gs
daa
or
std
popa
inc
xchg
push
xor
mov
push
scas
movsl
dec
pop
sub
ljmp
pop
xchg
out
mov
aas
cwtl
inc
fdivr
mov
dec
and
sub
xchg
out
cwtl
arpl
jmp
mov
mov
cmp
imul
and
inc
iret
imul
push
test
pop
outsl
mov
push
addr16
sbb
inc
fsubl
rcl
add
out
fimuls
movsl
jne
aaa
loopne,pt
adc
xor
int
mov
shlb
cld
sahf
scas
push
iret
mov
xor
push
rep
scas
pop
shl
mov
in
pop
or
out
adc
cmp
mov
jbe
mov
test
xchg
hlt
fstpt
fcomps
xchg
push
xor
adc
dec
xchg
jns
mov
test
sbb
cmp
sbb
push
test
mov
gs
push
popa
push
movsb
outsl
pop
cmp
insb
mov
dec
dec
push
cmp
xchg
pop
js
push
pushf
lcall
sub
dec
bound
imul
inc
adc
cld
fldl
add
pop
and
pop
xor
pusha
mov
mov
shlb
sbb
sbb
imul
jl
aas
sbb
jp
push
sub
daa
ret
mov
inc
sub
cmp
ds
sub
push
push
mov
dec
lahf
push
mov
ljmp
add
lret
push
cmpsb
lret
jno
dec
test
sahf
fistpl
sbb
cmpsb
stc
cmpl
sub
subl
outsb
pop
sbbl
mov
mov
insb
pop
sub
mov
dec
orl
test
jmp
repnz
ss
cmp
adc
lcall
pop
xlat
push
call
cmc
movsb
sub
mov
loopne
adc
dec
sbb
bnd
sbb
ja
dec
cmp
scas
sahf
adc
pop
add
adcl
cmpsl
int3
pop
fdivs
sub
orb
std
das
cli
out
sti
rorb
fbstp
push
ret
push
stc
ja
leave
divl
sbb
rorl
js
sbb
mov
and
or
in
xchg
mov
bswap
adc
inc
adc
jge
imul
adcb
movsl
lret
pop
mov
gs
mov
mov
into
pop
mov
js
jmp
test
pop
fwait
sahf
sarb
jl
push
push
mov
into
xchg
or
mov
stos
or
inc
jne
in
jmp
pusha
mov
adc
sysret
lahf
add
pop
inc
mov
mov
xor
mov
push
push
push
aaa
mov
adc
cmp
gs
lock
nop
xchg
shlb
inc
jo
je
loopne
add
mov
into
ret
ds
xor
rcr
sub
xchg
pminub
ja
cmp
push
repnz
ljmp
add
cmpb
fstps
bound
testb
pop
and
ljmp
lret
cmp
jae
ljmp
push
adc
lods
outsl
cmpsl
push
inc
cmp
sarl
push
les
sub
jne
mov
shll
out
adc
cmp
xchg
dec
fcompl
std
arpl
sub
mov
out
xchg
jp
sti
out
roll
mov
daa
rorb
or
lea
jno
je
movsb
lock
shl
mov
movsb
cmc
cwtl
ss
sub
orl
ds
jae
adc
mov
out
pop
addb
dec
xor
mov
cmp
fildl
std
mov
inc
je
cltd
push
sbb
mov
push
cmpsb
inc
imul
ja
adc
lods
push
int
add
or
add
subb
mov
les
pop
mov
loopne
test
jmp
xlat
mov
pop
rorb
push
mov
ret
pop
xor
pop
aad
cmp
inc
pop
gs
scas
sbb
push
hlt
es
or
and
shll
fwait
adc
mov
sbb
je
push
jae
jne
fadd
cltd
rcll
cld
or
cmp
ret
mov
dec
ret
fstpl
icebp
pop
push
dec
hlt
das
cmpsl
xchg
cmp
mov
sub
sbb
xchg
push
lods
cmp
lahf
insl
and
call
add
sub
pop
iret
and
inc
fcmovb
push
xrelease
and
push
xor
ficomps
pop
push
lea
mov
adc
sub
pop
subl
lods
sub
cmp
inc
mov
rcrl
out
add
jle
shll
je
lret
out
bound
mov
pop
inc
popa
jno
ss
push
xor
ss
repz
push
test
cmp
es
pop
and
test
clc
test
imul
mov
add
mov
sub
pop
xchg
dec
int
das
xchg
add
lods
mov
pop
test
je
jecxz
add
push
test
or
or
xor
fdivr
push
push
lods
movsb
push
call
mov
in
mov
lret
sti
inc
xor
cld
pop
sub
inc
adc
add
add
lret
fdivr
push
addl
out
ljmp
push
mov
jmp
jo,pt
nop
push
in
pop
loop
pop
test
xchg
or
jno
notb
push
xchg
cmp
add
outsl
imul
dec
pop
cltd
jmp
or
cmpsb
test
mov
lcall
in
xor
cmp
mov
xchg
frstor
iret
scas
int
push
iret
mov
movsl
pop
ja
test
ja
pop
or
in
addr16
cmp
jp
shlb
sub
je
pop
in
aaa
fmull
in
xor
inc
aaa
cmp
ljmp
sti
cli
sbb
cwtl
mov
xchg
ds
add
and
jo
add
bound
sub
pop
cmp
aad
inc
or
mov
sbb
jg
mov
xchg
pop
jecxz
or
jge
rorb
pushf
mov
subl
data16
jns
rolb
rcll
mov
xor
mulb
arpl
sbbb
pusha
insb
shr
shlb
notl
cmp
add
inc
rol
push
dec
call
jb
sti
xor
mov
pop
or
jg
push
sub
add
mov
push
mov
mov
lret
and
inc
cmp
ds
jb
loop
out
test
jecxz
add
idivb
std
daa
cmp
ljmp
xor
or
and
mov
mov
mov
xor
test
data16
or
call
iret
sbb
out
out
sub
inc
pop
push
rcl
jle
sub
adc
faddl
or
outsb
jl
xchg
pop
xor
in
cli
lahf
push
push
int
lret
icebp
out
decl
popf
push
pop
inc
dec
or
jns
add
push
mov
repz
xchg
adc
sub
push
xchg
rcr
stos
xchg
imul
fmuls
mov
add
testl
enter
jns
je
dec
sub
and
add
sbb
popf
repz
mov
cmp
xor
jnp
pop
adcb
cmp
daa
push
pop
or
pop
and
cmp
shll
hlt
lcall
or
inc
jno
aad
push
fisttpl
pop
sub
inc
jmp
repz
pushf
pop
inc
fwait
and
xor
fs
push
push
xchg
addr16
mov
dec
xchg
push
mov
aad
sbb
sub
mov
mov
push
sbb
push
mov
push
or
in
jbe
cmp
push
js
pop
sbb
xchg
mov
rcrl
jnp
stc
inc
int
sarl
jecxz
add
fildll
push
adc
into
wrmsr
sbb
repz
sbbb
fildll
push
xor
xchg
mov
jmp
mov
adc
inc
in
in
ja
xchg
xchg
cwtl
pop
xchg
cmp
icebp
dec
insl
mov
or
je
adc
mov
dec
enter
mov
xchg
pop
imul
lds
mov
mov
frndint
mov
pop
lds
and
inc
lcall
ds
push
lock
cmp
loop
inc
mov
xchg
push
test
mov
hlt
adc
inc
xchg
push
adc
lods
stos
inc
mov
adc
push
mov
lahf
insb
enter
mov
and
pop
popf
nop
adc
pop
dec
js
inc
hlt
clc
out
aam
daa
stos
out
xchg
fisubrl
mov
clc
test
pop
ss
pop
and
push
jno
sbb
aam
out
imul
add
dec
sub
cmc
sub
mov
cmpb
pop
or
fisttpl
pop
loop
or
fimuls
xchg
cmpsb
mov
jecxz
outsb
inc
cmp
cld
jb
xor
fstcw
ja
jbe
hlt
xor
pop
in
mov
sub
or
aad
pop
pop
out
test
bound
mov
ret
adc
cmp
jne
adc
xchg
inc
pop
into
fidivs
jns
push
test
dec
scas
fcmovne
ret
lods
dec
jge
dec
cs
and
es
and
mov
fldenv
mov
xor
mov
push
in
xchg
mov
push
hlt
adc
cmc
jbe
mov
loopne
mov
sub
adc
xchg
mov
icebp
inc
sahf
mov
xorl
pop
mov
imul
add
push
push
loope
and
push
mov
mov
idiv
xchg
pop
mov
or
pop
mov
bound
inc
lods
sbb
add
sahf
imul
call
gs
in
jle
fistpl
out
add
or
add
xchg
adc
push
out
xor
jl
imul
adc
lahf
jg
rorl
sbb
cmp
pop
cmpb
in
jae
dec
pop
jno
dec
into
test
in
add
sbb
xor
mov
scas
adc
les
fbstp
movsl
andb
insl
jne
jmp
aam
daa
scas
int
aam
push
negl
mov
cmpsl
in
inc
cmp
xor
mov
push
mov
nop
jnp
les
xlat
in
stos
std
xor
shrb
add
xchg
mov
faddl
movsb
repz
jg
rol
rorb
adc
xchg
cmp
fstl
dec
xor
mov
and
rolb
inc
mov
pusha
xchg
sbb
sbb
pop
sbb
adc
std
outsb
dec
jo
and
lcall
sub
pop
fidivrl
aaa
adc
fildl
cmpsl
fldcw
xchg
sahf
cmp
mov
loopne
out
mov
imul
out
mov
cmpsb
vmovdqa32
sarl
je
mov
push
push
add
movaps
mov
imul
pushf
sub
and
add
aam
out
lcall
xchg
repz
push
push
and
push
cltd
jns
push
rcr
xchg
lods
fs
cmp
xchg
mov
loop
fisttpll
insl
imul
push
inc
stos
pop
pop
sub
xchg
hlt
inc
mov
daa
cltd
lahf
out
fidivrl
imul
addr16
mov
dec
fcoml
test
dec
mov
movsl
push
push
xchg
shlb
jnp
test
insb
aad
fisttpl
in
gs
pop
mov
mov
add
daa
mov
adc
int
in
aaa
inc
jb
mov
push
mov
pusha
xor
scas
fisttpll
fistpll
push
ficompl
outsl
fsubrl
movsl
scas
sub
loopne
sub
jnp
mov
fbstp
es
in
dec
add
jg,pn
or
out
jg
stos
addr16
mov
les
adc
adc
outsl
ss
mov
fldt
in
rclb
cmpb
push
mov
inc
push
sub
push
cmp
mov
add
cmpsb
jecxz
sbb
imul
sub
ss
shrl
test
cld
add
cs
aas
cmpsb
shrb
test
jge
mov
std
adc
xchg
addr16
enter
adc
lods
imul
add
jae
das
mov
loope
iret
mov
push
dec
loop
sbb
stos
lods
aam
lea
and
movsb
movb
icebp
sub
xchg
leave
test
pop
push
cltd
cmp
adc
inc
adc
pushf
mov
cmpsl
pop
xchg
sub
ret
cli
xchg
pushf
into
insb
or
xchg
repz
adc
mov
ljmp
fsubrs
cli
push
fsubrs
add
jmp
cmpsl
sti
lahf
and
std
mov
cmp
icebp
mov
or
sub
pop
sub
test
jmp
push
in
les
insl
pop
hlt
movsb
add
mov
add
pusha
adc
mov
mov
in
mov
or
pop
pop
daa
stos
inc
lahf
jbe
push
mov
add
cs
aaa
neg
test
sbb
pop
jge
xchg
idiv
stc
sbb
pop
pop
cmpsl
xchg
insl
insb
inc
and
fwait
sbb
aaa
pop
gs
lods
inc
fbld
and
aaa
mov
int3
repz
icebp
sbb
dec
mov
addl
lea
movsl
cmpsb
call
lods
stos
sbb
mov
dec
xchg
adc
and
sbb
mov
add
lods
mov
push
ljmp
dec
mov
fistps
sub
pop
push
stc
imull
sub
test
jle
sbb
push
sbb
pop
adc
fcomi
rcrb
mov
inc
daa
and
lods
mov
fwait
push
or
fsubl
mov
aam
jmp
pop
rorl
out
imul
xchg
xchg
cmpsb
ljmp
dec
iret
pop
cmp
out
xchg
lcall
enter
mov
or
cmpsb
std
dec
mov
sarl
clc
aas
addr16
xchg
and
in
adc
into
mov
cmp
addl
push
jl
add
xor
and
repz
loope
je
inc
push
and
or
mov
lock
xchg
mov
push
push
pop
insb
loopne
xchg
les
pop
add
push
icebp
test
and
mov
adc
adc
push
pop
int
or
jmp
push
push
bound
mov
dec
sub
int3
cmp
mov
sbb
sub
sti
movsb
pop
add
movl
in
clc
sub
test
in
mov
sti
inc
add
fstpl
aaa
or
lods
movsl
daa
cmp
icebp
pop
fcoml
sub
dec
loopne
ficoml
xchg
pop
dec
lds
insl
dec
mov
sub
bound
inc
in
cli
mov
push
and
sub
iret
push
std
inc
or
addr16
jmp
fsubrs
fldcw
jae
outsl
jp
les
push
ret
movsl
fstp
mov
or
cmpl
mov
mov
xlat
stos
pop
bound
loope
and
sub
mov
dec
mov
ret
imul
sub
or
mov
jb
aad
sub
shll
dec
nop
mov
cli
dec
mov
mov
in
inc
popf
xorb
adc
mov
mov
add
ja
xchg
cmp
push
mov
mov
inc
mov
dec
mov
dec
fsubp
mov
dec
pop
cmpsl
inc
fimuls
call
xchg
mov
leave
movsb
cmpsb
cltd
iret
cmp
add
and
pop
sbb
mov
mov
es
dec
mov
aaa
push
and
lds
inc
das
jl
mov
pop
scas
sbb
shl
out
addl
mov
cmpsl
sbb
int
inc
notl
jle
es
sub
jae
int
pop
jae
rorl
or
adc
fimull
ljmp
fcoml
cmp
fisttpl
ljmp
dec
outsl
dec
push
lds
ss
imul
push
aam
and
xor
pop
mov
lret
cmp
stos
cmpsb
scas
pushf
fsub
outsb
mov
mov
out
sub
out
sti
divl
out
inc
push
popa
push
fistpll
in
jmp
cmp
add
xchg
jnp
mov
cmovge
mov
xor
jae
out
sub
scas
loop
push
repnz
inc
sub
shl
and
pop
popa
insb
test
xchg
push
stos
into
add
ror
ret
pop
mov
lods
call
or
insl
add
arpl
lock
jbe
adc
mov
orb
ror
cmovae
pop
xor
std
inc
les
es
or
int
aam
jo
mov
xchg
rcll
imul
cmp
inc
mov
aaa
fwait
dec
jp
dec
mov
insb
pushf
jne
cmp
xchg
jae
ds
push
es
push
loope
jmp
movsb
mov
sahf
stc
cmp
xchg
ljmp
in
mov
xchg
or
push
pop
jecxz
mov
and
mov
add
adc
sbb
les
push
mov
xchg
pusha
cmp
pop
cltd
xchg
mov
and
shll
push
ficoms
mov
mov
mov
xor
jmp
and
sub
ja
sti
in
mov
mov
dec
gs
dec
pop
sub
stos
cmp
jecxz
ss
test
pop
sbb
cmp
stos
in
sub
movsl
xchg
push
das
fimull
sbb
jle
jp
mov
test
inc
mov
xchg
enter
push
push
xchg
movsl
cmp
in
or
ret
leave
push
in
outsl
cld
js
pop
lds
pop
jecxz
cmp
sbb
sarl
adcb
xchg
fwait
xchg
adc
and
push
adc
mov
loop,pn
orl
xor
pop
push
out
inc
in
in
mov
fildl
sub
cmp
mov
mov
mov
push
dec
aas
cmp
xor
inc
lods
adc
inc
ds
lret
insb
sbb
dec
cltd
cwtl
and
jbe
popf
and
imul
dec
jb
test
addr16
xorl
mov
in
or
jae
cli
adc
cmp
pop
dec
pop
sub
icebp
loop
pop
mov
fcomps
mov
mov
sbb
stc
mov
cli
xor
sbb
mov
imul
push
and
xchg
jb
adc
mov
in
cmp
push
dec
addr16
rcl
mov
pop
movsb
fsts
or
dec
ss
pop
jns
addb
call
sbb
jb
push
sbb
sbb
cmp
out
into
ja
mov
sbb
cmp
jno
pop
ret
cltd
lret
ret
cmp
movsb
in
pop
std
outsb
mov
add
loop
paddd
test
sbb
xlat
cli
iret
insl
fisttpll
and
pop
stos
push
fcomip
faddp
xor
aas
loopne
xor
pop
mov
sarb
jb
in
push
outsb
mov
js
lods
dec
lea
out
mov
mov
ret
rolb
xchg
lret
xor
ror
mov
out
cmp
jg
xor
cltd
mov
jg
in
lret
jo
inc
or
jo
xor
sub
and
daa
pop
mov
mov
adc
or
cmp
out
ss
cs
mov
mov
pop
push
mov
adc
or
sub
inc
push
pop
scas
mov
xchg
xchg
xorb
fdivl
mov
mov
pop
dec
aam
aas
notl
mov
lea
xchg
mov
out
loop
xchg
in
dec
pop
scas
lret
cld
lods
push
sbb
lods
cmp
shll
or
out
idiv
xor
hlt
jge
push
add
aas
fwait
enter
int
in
xor
sbb
cmp
adc
cli
push
cmp
push
test
sbb
inc
cmp
push
inc
clc
fidivs
in
mov
das
shl
int3
enter
outsl
jno
ljmp
mov
push
test
sbb
jl
jnp
scas
sahf
lock
push
jb
xchg
inc
fistps
mov
jmp
push
fcompl
es
push
lret
into
in
fsts
fwait
cmp
mov
in
leave
inc
mov
aam
xchg
ret
and
adc
xor
insl
inc
xchg
ds
test
jl
or
mov
sbb
jo
loop
addb
aas
ret
clc
adc
cmp
push
mov
adc
outsb
push
shlb
insl
mov
cmpsl
nop
repz
mov
and
sar
leave
leave
pop
mov
xor
or
mov
addl
jno
inc
ss
add
xchg
pop
xchg
mov
mov
push
aas
lcall
in
sbb
xor
push
insl
das
cmp
sar
movsl
jl
xchg
clc
cmp
icebp
jle
fxrstor
fwait
jg
jb
push
mov
mov
popf
ss
pop
shl
add
mov
pop
roll
mov
sub
mul
cmp
test
or
loope
mov
frstor
scas
xchg
xchg
cmp
pop
clc
jl
std
push
dec
lcall
sbb
xchg
mov
push
int
hlt
lds
adc
js
dec
nop
arpl
jno
or
jle
fistpll
aam
lods
shrl
inc
in
outsb
out
xor
adcl
pop
call
jecxz
es
dec
sub
add
push
cwtl
and
cmp
and
mov
lret
mov
fcoms
inc
mov
out
push
mov
repnz
fcmovnu
mov
mov
xor
cwtl
int
jne
or
jg
push
test
push
cmpsb
movsl
mov
hlt
movsl
cld
dec
aaa
insb
and
or
bswap
or
scas
fsubrl
jne
ss
sbb
adc
das
ret
arpl
lret
out
pop
rolb
xor
sar
adc
sbb
arpl
ret
jp
push
lcall
fistps
daa
pop
push
rcll
movsb
cmp
in
xlat
add
mov
stc
les
mov
cmp
mov
icebp
fsubrs
stc
dec
mov
pop
je
jg
add
cmp
xchg
push
dec
jnp
or
adc
sub
mov
mov
and
ja
clc
and
push
repnz
add
out
sti
call
and
pop
xor
lods
xchg
pop
mov
dec
xor
scas
pop
gs
cmc
sbb
daa
leave
rcl
lock
and
cs
movsb
jo
xchg
into
sti
bsr
mov
fsubrl
jae
pop
cmp
fwait
dec
xor
adc
inc
and
sbb
push
lods
into
call
xchg
repz
xchg
mov
sbb
mov
popf
fdivr
mov
out
inc
stos
int3
or
add
mov
clc
xchg
xchg
cmpsb
addl
mov
push
push
or
cwtl
lods
cmp
xchg
dec
sub
jl
aaa
fwait
aad
cmpsl
mov
movsl
sbb
jne
pop
out
lret
stos
inc
outsl
call
inc
adc
inc
mov
das
xchg
lock
out
jle
xor
movsb
out
adc
jecxz
mov
lods
ret
popf
jnp
mov
scas
fistpl
sub
mov
xor
adc
mov
push
hlt
in
lret
jb
mov
pop
add
inc
scas
pop
mov
ja
ljmp
aad
or
fisttpl
sbb
scas
push
movsl
sbb
and
loopne
and
and
xchg
sub
sbb
pop
and
lcall
frstor
cmp
cmp
mov
fdecstp
subb
cltd
call
out
fstps
sub
bound
aas
lds
xor
sbb
mov
add
hlt
ljmp
or
push
mov
cmp
add
dec
das
gs
jl
lret
std
xchg
adc
daa
aad
or
pop
jns
xor
add
mov
mov
sbb
and
mov
pop
cmp
mov
out
repnz
into
add
shl
jp
cmpsw
mov
loope
adc
or
idivb
repnz
outsb
inc
fwait
dec
mov
repz
mov
bound
jb
scas
xchg
mov
bound
or
sub
test
sbb
mov
inc
test
cmp
or
lret
and
xchg
mov
icebp
in
nop
lods
pop
je
vcvtdq2ps
test
inc
xor
sub
bound
mov
adc
out
inc
mov
dec
sub
inc
lea
rolb
aaa
rcrl
push
and
mov
sbb
popa
and
idivw
jnp
sbb
sub
arpl
add
hlt
jne
insb
push
arpl
mov
adc
test
stos
lea
sbb
xor
fstpl
mov
jle
inc
mov
sbb
push
sub
inc
pop
and
jle
pop
imul
cmp
pop
xchg
push
sub
leave
and
dec
pop
fmulp
sub
das
or
cli
jbe
jl
out
sahf
jb
xchg
xchg
push
leave
jno
das
fucomp
push
add
into
iret
dec
mov
ret
iret
mov
shlb
lods
fisubrs
xor
lock
xchg
lods
mov
cmp
dec
das
mov
and
rclb
sbb
pop
cmp
jns
or
shrl
mov
lahf
inc
inc
inc
loop
jge
mov
loopne
dec
push
mov
pop
and
cmpl
repnz
sub
lock
popa
cmp
ror
daa
cmp
iret
lock
incl
mov
in
mov
cmp
lods
fwait
add
adc
scas
outsb
lds
cmp
mov
mov
adc
aas
fistpl
cmp
call
dec
call
mov
fwait
rcrl
or
dec
jno
leave
hlt
sbb
sbb
fmuls
add
jle
int
int3
imul
add
imul
nop
xorl
xchg
shll
mov
xchg
loop
pop
mov
call
push
and
xchg
xchg
lcall
jne
mulb
movsb
lods
pop
mov
stos
es
stos
jne
out
cmpsb
inc
lods
xchg
test
ja
scas
pop
iret
sub
push
inc
adcl
cmpsl
mov
add
jge
jl
mov
add
icebp
std
sub
sub
xchg
pop
push
rcll
loopne
push
dec
mov
pop
inc
outsb
rolb
fdivl
pop
xchg
xchg
cmp
mov
jg
mov
pop
xor
and
sahf
sub
mov
push
mov
adc
lcall
mov
inc
sub
lret
mov
into
xchg
fisttpl
scas
fs
test
sbb
je
and
xor
push
or
dec
mov
dec
dec
push
sub
andb
repnz
js
pushf
popa
fisubs
ret
stc
xchg
sub
mov
inc
sti
test
or
xor
addr16
loope
aad
push
out
xor
pop
outsl
enter
cmpsl
popa
lahf
inc
push
xchg
mov
adc
stos
lcall
fcoms
and
popl
fdivs
test
lret
xor
pushf
add
notl
or
clc
rolb
fildl
and
js
das
test
das
lods
mov
leave
lret
xor
data16
aad
and
lods
mov
shlb
jb
sbb
push
cmp
jae
pusha
sbb
fsubrp
cmp
jge
fisttpl
mov
pop
bnd
aas
nop
sub
push
mov
pop
out
fcoml
pop
add
sub
add
jae
mov
loop
sarl
inc
scas
or
pop
pop
adc
rcl
push
ret
pop
inc
and
xchg
pop
loopne
mov
rcl
bts
ljmp
icebp
push
leave
bound
mov
out
dec
addb
dec
shll
mov
cld
jo
adc
cli
scas
lret
stos
push
ror
jns
xchg
mov
leave
xlat
ret
test
mov
test
out
adc
inc
xor
in
and
pop
andb
sbb
sub
xor
jle
mov
cli
ret
xchg
movsl
jbe
or
nop
jecxz
fisubrl
out
xlat
mov
cmc
cmp
adc
mov
mov
insl
jb
out
pop
pusha
sbb
mov
dec
cltd
pop
or
mov
aam
lea
out
add
testl
nop
mov
loope
lock
cmp
push
mov
cmpsb
cmp
inc
fcom
push
sbb
ret
ds
int3
loopne
je
pop
dec
adc
test
test
fdivl
mov
or
inc
add
int
pop
and
mov
add
into
mov
stc
insb
loop
inc
dec
push
repnz
jae
popa
rcrb
repnz
lods
lea
outsb
sete
ljmp
xorl
mulb
dec
xchg
ret
add
fldenv
dec
aad
xor
dec
out
repz
imul
mov
push
out
fdivs
dec
mov
mov
fwait
test
imul
jbe
mov
lock
shll
inc
mov
loopne
inc
movl
mov
push
fcompl
repnz
dec
push
jle
in
jge
movl
jp
lods
aaa
lret
jbe
sbb
adc
adc
cmpsb
mov
pop
jno
mov
mov
subb
fwait
out
int3
sarb
dec
notl
lea
js
jle
mov
xor
xchg
sub
jmp
jmp
add
xchg
push
in
outsb
popf
flds
and
pop
xor
pop
out
popa
in
jae
pop
xor
stc
or
push
ret
add
test
stc
sti
js
add
test
pop
mov
mov
mov
insb
inc
fdiv
and
scas
cmp
ret
mov
adc
ficoml
out
dec
pop
jno
cmp
sbb
jle
xor
out
add
xor
cmp
mov
movsl
repz
cmove
and
into
rcr
rcrl
or
cmp
stos
mov
dec
inc
mov
cmpsb
push
xorb
aaa
mov
out
xchg
xchg
adc
je
mov
xorb
shr
push
ret
popf
mov
jmp
push
push
pop
cmp
test
out
cltd
xor
in
cmp
scas
cmc
int
xor
scas
lret
outsb
addr16
stos
mov
rcrb
loope
ficompl
shlb
mov
es
cmpsb
sbb
aad
lds
dec
ret
mov
xchg
out
jg
pop
sub
js
mov
lahf
rcrl
or
in
cmpsl
mov
inc
push
xchg
dec
jg
negl
cmpsb
divb
sbb
stc
jecxz
sub
cmp
sbb
lret
push
xorl
clc
cltd
jo
mov
or
jbe
dec
mov
jg
push
pop
push
lods
push
out
adcl
roll
jo
mov
adc
or
insl
ret
push
sbb
ja
mov
fidivl
inc
mov
mov
andl
mov
loope
lock
push
ret
ljmp
push
sahf
adcl
mov
inc
stc
mov
push
andb
loop
jne
mov
xchg
insl
gs
lock
cmp
jne
mov
in
xacquire
lret
jle
fwait
fs
mov
jnp
mov
mov
bswap
int
in
inc
add
icebp
push
lods
stos
test
mov
inc
xor
scas
cmp
mov
mov
jecxz
sbbl
loopne
inc
jg
ss
in
lret
xchg
add
or
mov
or
jae
sahf
xlat
aas
cmpsb
imul
loopne
or
push
mov
mov
outsl
xchg
inc
cli
cmp
loop
mov
fcoms
ret
cmp
sbb
cs
xchg
repz
ret
fdivp
push
fisubrl
xor
inc
fdivr
mov
or
ja
sbb
add
mov
popl
lret
and
cmc
jne
cmpsl
xor
sub
jb
clc
out
xor
ret
xor
loopne
mov
gs
mov
sar
repz
cmpsl
test
xor
adc
add
jne
mov
jbe
fisubrs
sbb
inc
mov
in
and
cmp
push
divb
movsb
jle
xor
sti
pushf
addb
pop
mov
xor
jae
dec
sub
cmp
mov
out
aaa
push
fwait
fs
int
xchg
adc
std
mov
pop
inc
adc
pop
cmp
and
xlat
adc
fnstsw
aaa
lea
lods
cmc
call
lret
jmp
pslld
sbb
sub
mov
lret
add
pop
adc
xor
mov
xchg
es
push
enter
in
pop
outsl
mov
jbe
int
adc
cmp
call
je
sahf
lods
insl
or
push
sub
int3
sbb
cmp
inc
pop
addl
dec
sub
cmp
xchg
nopl
orl
xor
call
ret
mov
add
lret
bound
lret
scas
int3
nop
fsubrl
pop
cmp
pop
sub
mov
inc
cmpsb
loopw
jp
lods
test
jmp
ljmp
pop
into
mov
sbb
das
enter
jb
test
push
sub
ja
push
lcall
xor
sub
ret
add
imul
enter
jno
repnz
dec
jmp
lods
jns
xchg
dec
add
pop
and
jmp
add
test
stc
adc
jb
mov
sbb
sbb
add
dec
cltd
ror
lock
xchg
or
dec
sahf
jo
nop
sbb
mov
push
push
sub
or
sub
or
shrb
add
insb
fcompl
in
js
adc
mov
add
fdivl
sbb
cmp
xor
xor
fistpll
xchg
lcall
inc
sarb
out
into
mov
mov
xor
adc
fildl
popa
adc
adc
ljmp
outsl
test
ja
mov
xlat
xor
fistpll
leave
inc
aam
out
pop
or
jnp
add
or
std
enter
push
out
std
or
sbb
insb
jbe
stc
mov
and
outsl
cmpsl
cmp
ds
add
adc
cmove
pop
dec
xchg
lds
nop
jge
lea
lock
mov
add
jmp
pop
jae
lods
mov
xor
in
imul
xor
mov
jns
rclb
andl
leavew
xor
push
sbb
ss
pop
mov
cmp
xor
push
int3
fstl
sbb
iret
push
scas
inc
or
adc
jl
xor
dec
lea
fdivrs
adc
and
pop
repz
xchg
pop
jg
or
push
test
outsb
add
shr
popa
pop
or
cmp
mov
pop
andb
insb
pop
insl
push
push
pop
pop
divl
or
xchg
jp
cmpsb
mov
xchg
pop
xor
mov
pop
inc
jecxz
std
push
or
push
ljmp
add
hlt
cmp
xchg
cmp
cmp
mov
dec
sahf
inc
pop
iret
int3
in
jo
and
dec
mov
push
and
repnz
adc
adc
ftst
insb
and
sub
bound
push
adc
pop
push
pop
ss
movsb
mov
js
popf
std
or
xlat
stos
notl
jne
popa
push
xor
or
push
or
mov
pop
sbb
stc
sub
sbb
lahf
or
jl
mov
or
dec
das
jmp
idivl
jae
test
jmp
or
cmp
or
inc
and
mov
inc
fisttpl
jl
push
arpl
test
or
ficompl
daa
dec
shl
aas
fisttpl
pop
nop
hlt
bound
repz
adcb
push
imul
jmp
jae
pop
pop
cmp
add
aaa
lock
std
mov
and
fldl
adc
dec
mov
jno
cld
pusha
js
inc
mov
leave
adc
inc
xchg
arpl
xchg
push
xchg
out
push
push
cmc
cmpsb
stos
fldt
in
jne
out
ss
sub
cld
pop
xor
mov
jmp
pushf
in
adc
and
sti
sbb
mov
inc
out
icebp
rclb
sub
jp
popf
pop
aam
push
xor
jecxz
adc
imul
cwtl
mov
jns
dec
jno
mov
push
push
adc
and
outsb
xor
sbb
mov
sub
pusha
push
sbb
stos
das
test
mov
adc
fldl
pusha
xchg
add
push
cmpb
lds
data16
fidivl
repnz
test
icebp
test
cmc
adc
inc
shrl
orb
pop
push
push
mov
popf
inc
pusha
push
aad
cld
bound
and
dec
mov
jns
adc
cs
mov
arpl
arpl
rcrl
std
loop
adc
sbb
movsl
dec
mov
mov
pop
fiadds
inc
movsl
xchg
ja
jnp
mov
dec
xchg
sahf
std
mov
test
push
ffree
dec
lds
and
sub
icebp
cld
loop
sbb
cmpsl
xchg
leave
imul
jb
jbe
add
les
cltd
lds
insl
je
aam
and
or
push
in
inc
daa
add
into
push
and
xchg
push
adc
movsl
add
or
inc
out
mov
cld
iret
bound
inc
enter
lods
stos
mov
lcall
mov
sub
jnp
mov
mov
xlat
sbb
cmpsl
xchg
ror
js
pop
push
andl
xor
loopne
or
loopne
xchg
sub
jg
sarl
xor
and
call
xor
loop
pop
inc
arpl
or
inc
std
and
cmp
sbbl
das
ret
mov
les
out
sub
into
iret
ja
sbb
mov
cmp
ss
sbb
cli
mov
adc
xbegin
loope
mov
imul
outsl
repnz
enter
push
mov
roll
mov
jecxz
cmpsb
jg
jge
mov
push
inc
mov
dec
lea
pop
call
mov
add
push
nop
out
sub
mov
xor
testb
cmc
loopne
jne
jo
xor
lahf
stos
cmp
mov
pop
xchg
fbld
sub
rcll
push
xorb
add
aas
aad
imul
cmp
es
imul
xchg
mov
sbb
out
ss
adc
in
xchg
aaa
add
mov
cmpsl
movsb
inc
push
int3
lcall
inc
filds
xor
push
popf
cmp
pop
stc
imul
iret
dec
and
leave
sub
mov
loope
int3
adc
xchg
add
fcomps
pop
stos
mov
jle
add
jl
cld
dec
popa
push
inc
push
test
dec
pop
lret
adc
add
add
push
icebp
adc
mov
test
xchg
xchg
sbb
mov
push
leave
dec
cmp
test
fisttps
popf
lcall
pop
mov
stos
clc
push
rcrl
cmp
mov
jae
cmp
fisubrl
test
cmc
adc
sub
xor
jecxz
es
xchg
lods
jle
stos
in
leave
mov
cmpb
push
xor
out
out
sub
xchg
inc
cmp
xlat
mov
or
leave
dec
jbe
imul
out
leave
stos
fmull
mov
icebp
and
gs
das
jg
sub
lret
shrl
pop
dec
lods
add
mov
je
mov
out
out
and
data16
arpl
and
cs
out
mov
sbb
insl
xor
xchg
or
jg
incb
rorb
or
loopne
mov
test
mov
inc
hlt
xchg
mov
dec
cs
js
adc
or
es
mov
inc
pop
xchg
xchg
jo
push
pushl
jb
cmpsb
add
cmc
mov
setbe
mov
jmp
lock
xor
xchg
mov
xchg
jo
push
fdivrs
mov
jbe
jecxz
adc
stos
daa
lahf
data16
fcmovnb
fadds
dec
mov
cld
negb
aam
sub
fwait
pusha
sub
out
loop
out
in
adc
jbe
cwtl
ljmp
in
hlt
scas
add
in
or
jge
roll
push
sub
xor
lcall
insb
sub
popf
add
adc
or
fcmovnb
pop
jmp
imul
fstpl
sahf
out
adc
inc
lds
dec
stos
fldl
ljmp
call
imul
mov
xor
pop
mov
loope
loope
in
pop
mov
adc
out
subb
push
es
mov
fcmovbe
xchg
push
fucomp
push
in
lret
lock
daa
xor
sti
test
daa
mov
push
jl
mov
and
sub
insl
in
xchg
and
ficoml
andb
adc
pop
sub
ret
divl
or
loope
inc
sbb
sbb
cltd
inc
push
sub
mov
xchg
cmpsb
out
scas
ret
jle
xchg
cli
adc
punpckldq
add
sarl
push
cmovs
jne
push
add
cs
ss
add
cmp
cmp
jecxz
sub
mov
test
mov
rclb
gs
in
aaa
pop
xchg
sarl
sbb
mov
mov
repz
jl
xchg
sarl
fldenv
dec
daa
inc
fnsave
inc
jmp
rcr
data16
popa
outsb
mov
idivl
jge
jmp
sti
rorl
xchg
es
cltd
outsb
inc
jp
loop
pop
mov
add
clc
xchg
addr16
add
insb
fsubp
push
lcall
jbe
pop
xchg
test
lds
mov
sub
shll
js
sbb
inc
ds
xchg
jb
std
xchg
fs
int
inc
mov
xchg
inc
inc
clc
mov
mov
call
push
gs
xor
jbe
sbb
js
sub
jg
leave
scas
cltd
or
call
icebp
mov
pop
sub
test
xchg
mov
je
mov
mov
rcl
outsl
ret
or
sub
push
xor
inc
fnstcw
xchg
mov
iret
mov
inc
mov
add
dec
mov
xchg
dec
adc
lea
sbb
stos
xor
xchg
mov
pop
out
xor
out
push
movsl
mov
mov
mov
inc
arpl
std
rol
jnp
lods
pop
std
add
xchg
or
mov
add
data16
fstpl
pop
in
repnz
jb
jns
pushf
xchg
dec
or
pop
gs
push
pop
icebp
testb
pushf
stos
xchg
leave
pop
cld
push
stos
pop
hlt
mov
js
fstl
push
lret
fcomps
leave
and
cltd
jb
xchg
xchg
sub
lcall
xchg
jbe
push
test
dec
test
insb
shrb
push
inc
inc
in
mov
pusha
pusha
mov
add
mulb
adc
or
sahf
push
and
stos
dec
xchg
xchg
aam
lcall
aam
adc
movsl
repz
add
and
dec
les
popa
jo,pn
ror
fcoml
pop
mov
popfw
test
or
push
push
cmp
adc
push
push
xor
flds
cs
mov
call
pop
nop
jg
arpl
mov
test
mov
inc
xlat
nop
in
fldt
mov
xchg
aad
push
pop
in
push
mov
iret
mov
loopne
xchg
loope
aad
ss
insl
test
and
push
iret
stos
add
mov
dec
insl
scas
loopne
fmul
sahf
add
pop
mov
push
fidivrs
mov
ljmp
mov
lret
in
push
jmp
xchg
lods
mov
xchg
xchg
push
popf
out
into
sbb
jmp
jo
inc
or
xchg
fbstp
in
jge
push
xchg
push
xor
lock
popf
nop
and
stos
mov
call
icebp
dec
loopne
mov
inc
insl
mov
cmpsb
pushf
xchg
or
pop
sarl
les
xchg
sarb
bound
cs
clc
pop
mov
add
add
cmovns
cwtl
cli
loope
stos
insb
repnz
jno
test
sbb
scas
lret
sub
repnz
popf
lds
inc
sub
adc
fs
test
and
lods
sub
mov
mov
loop
int
and
sahf
inc
std
and
push
rcrl
add
insb
aaa
iret
pop
pop
fcom
or
into
mov
pop
push
insl
mov
sub
or
xorb
push
lock
test
jnp
insl
mov
adc
mov
testb
mov
mov
add
fwait
arpl
add
cwtl
add
push
adc
iret
cwtl
sbb
inc
cmp
inc
aaa
push
stc
mov
popa
addr16
push
jecxz
ret
mov
xor
stos
mov
call
sbb
inc
cmp
hlt
jmp
lahf
fwait
test
shll
mov
or
mov
fs
arpl
or
jmp
clc
push
ret
push
mov
sbb
jmp
xchg
call
lea
pop
std
stos
sbb
xchg
mov
mov
cmp
negl
insb
mov
mov
add
jmp
push
js
rcrl
shrl
jmp
pop
dec
inc
andl
scas
dec
add
cmp
rolb
lcall
leave
pop
cs
mov
mov
add
jns
loop
add
add
jle
adc
loopne
in
jno
push
jno
push
push
sbb
sbb
jae
mov
movsb
sbb
sub
jmp
jbe
cmpsl
testb
xlat
jne
cmpsb
sbb
push
out
test
into
xchg
mov
xor
imul
je
test
cld
inc
int3
insb
test
sbb
data16
out
bound
jae
sbb
xorl
dec
jp
stos
test
mov
or
mov
imul
add
sahf
cld
sub
test
inc
xchg
mov
lock
mov
popf
sbb
in
or
adc
jae
pop
mov
pop
xchg
in
add
mov
push
ret
imul
shl
loope
xchg
popf
insl
xchg
add
je
xor
pop
fwait
aas
aam
jge
adc
and
addb
push
xor
loope
and
fistps
push
xchg
and
nop
sahf
lahf
and
fistpl
stos
fidivrl
adcl
ds
in
inc
add
fidivrl
sbb
or
mov
mov
jb
les
rcl
inc
rclb
lahf
outsl
jmp
adc
cmp
cmp
ljmp
xchg
fisttpll
cmp
add
mov
sarl
pusha
xchg
rcrl
jmp
iret
adc
jno
loope
ret
lcall
push
aas
add
inc
ja
lahf
test
mov
mov
in
dec
lods
daa
in
mov
sti
cmp
jg
mov
lret
pop
dec
jne
lahf
arpl
fmuls
shrb
or
mov
fldl
mov
hlt
add
or
repz
dec
jnp
repz
or
ret
stc
js
or
mov
adc
lcall
lock
les
dec
sub
mov
mov
mov
lods
addr16
and
or
pop
pop
dec
scas
push
in
and
inc
repnz
xor
mov
cwtl
push
fwait
dec
outsb
js
sub
mov
mov
jno,pn
mov
rcrl
mov
mov
pop
push
std
mov
clc
outsl
test
mov
popf
push
jne
inc
gs
icebp
nop
jp
mov
out
inc
aaa
shlb
daa
insb
iret
xor
jne
cmc
sbb
orl
jmp
pop
ss
subb
mov
push
jge
xchg
lahf
repz
dec
mov
mov
push
fincstp
ror
ret
sub
mov
aad
inc
call
punpcklbw
mov
xchg
ss
fistpll
test
pop
mov
das
movsl
mov
mov
adc
sub
adc
and
jl
test
push
sti
pusha
iret
pop
movsl
or
in
mov
pop
xor
testb
dec
stos
stc
fs
aas
mov
push
and
sbbl
ljmp
bound
inc
imul
test
imul
scas
or
jb
imul
movsl
sbb
pop
or
and
xor
xor
repnz
push
ds
insb
push
and
add
mov
inc
xchg
inc
push
and
xor
movsl
aad
andb
add
adc
loop
jmp
cmpsb
dec
dec
mov
cmp
imul
jl
mov
popa
aad
ret
out
or
adc
mov
add
or
sub
mov
jmp
pop
dec
add
les
clc
in
cmp
dec
sbb
aam
repz
scas
push
out
in
lret
das
mov
repz
xor
and
data16
cmc
inc
xor
popf
pop
jae
add
and
cmpl
add
notb
jmp
jnp
or
pop
and
or
test
loopne
sub
mov
pusha
xor
loope
fimull
popf
add
fistpll
int
inc
shlb
scas
aam
jg
cmp
push
push
pop
mov
sub
test
je
or
mov
add
xor
bound
rcr
scas
push
add
flds
jnp
or
aad
fsts
push
or
lock
push
ljmp
insl
imulb
inc
adc
popa
out
adc
mov
mov
test
pop
faddp
les
and
jl
and
and
dec
ds
enter
mov
push
adc
clc
push
push
push
inc
cmpl
aam
inc
sti
sti
cwtl
mov
cmc
xlat
sti
stos
pop
loop
dec
aaa
lcall
call
and
mov
nop
addl
js
xor
aad
mov
pop
push
js
mov
xlat
sbb
push
push
leave
out
push
in
insb
es
sar
dec
decl
icebp
jb
jns
loope
xchg
ljmp
pop
sahf
cmp
insb
and
xor
mov
cmpsb
repnz
shrb
xchg
ds
loop
xor
int3
dec
in
jae
mov
lret
js
mov
push
daa
mov
lcall
test
lcall
nop
pusha
inc
mov
popf
xchg
in
push
loopne
pop
inc
addl
push
nop
cmc
jp
inc
add
adc
jmp
je
xorl
jl
push
mull
add
sbb
inc
push
push
inc
sub
fwait
xor
jle
out
cmp
scas
scas
push
mov
lahf
dec
cmp
ja
add
movl
and
cmp
dec
ljmp
push
loopne
outsb
jmp
cmp
add
mov
repnz
fwait
push
xchg
cmp
cmpsb
mov
inc
dec
dec
fistpl
mov
jmp
adc
or
in
push
xchg
inc
dec
xchg
int3
mov
xor
xlat
mov
xchg
movb
push
lock
imul
sarl
icebp
hlt
jmp
mov
sub
stos
test
xor
mov
push
rcl
add
cmp
jmp
cmp
outsl
ja
mov
fistpll
cmp
sti
fsubrl
rorl
and
mov
inc
lea
push
add
movsl
xchg
mov
mov
or
into
lods
in
jg
dec
push
mov
insb
bnd
stos
int
pop
and
jle
add
pop
int3
call
sbb
dec
xlat
push
rcr
das
xor
out
aaa
cs
pop
inc
fdiv
lods
mov
aad
cltd
cmpsb
cmp
sbb
enter
in
xchg
pop
jecxz
mov
xor
mov
inc
push
lods
add
cmp
jns
cltd
mov
inc
inc
rcrl
mov
popf
xchg
ja
mov
sarl
add
adc
aam
sbb
scas
scas
fimuls
lret
sbb
pop
popa
sti
mov
sbb
lods
js
xor
mov
mov
lcall
shll
xorl
pop
rcl
pop
fsubrs
sbbl
cld
cmp
scas
aas
lea
push
inc
push
jge
repnz
mov
mov
pop
shlb
bound
add
sub
mov
ret
xor
xor
xchg
jbe
testl
xor
cmc
add
scas
add
fstl
jnp
sti
sbb
test
pop
xchg
sarb
xchg
loope
cltd
fisttpl
jns
mov
insl
adc
push
insl
xor
and
scas
jl
stos
xchg
adcb
pusha
cmp
sub
push
push
push
loopne
jl
xchg
mov
pop
neg
dec
lods
cmpsb
pushf
adc
imul
jp
jns
mov
adcb
gs
xorb
loopne
lcall
incb
stos
add
push
adc
sub
jne
and
icebp
sbb
ljmp
xor
mov
into
daa
mov
mov
and
pop
jg
jne
fs
mov
lret
jle
adc
cs
cs
nop
jl
or
push
loop
push
int
xchg
sbb
inc
or
insl
xlat
mov
xchg
cmp
loopne
aad
insl
pop
mov
fistpll
adc
lcall
xchg
cmp
les
and
stc
aam
sub
mov
xlat
movsl
inc
inc
or
jmp
testb
mov
and
stos
sub
out
add
xor
cltd
popa
and
inc
test
cmpsb
rolb
data16
dec
ja
push
add
pop
lret
mov
ja
cwtl
mov
mov
ljmp
inc
loop
sbb
mov
push
popf
push
pop
push
das
icebp
in
pop
fdiv
addr16
jne
lock
test
jmp
mov
add
jp
cmp
xor
sti
cld
xchg
rcrb
pop
sub
jne
ljmp
sbb
xchg
or
test
inc
insl
pop
xor
pop
push
lcall
mov
inc
mov
aam
nop
sub
pop
push
add
in
or
insb
cmpl
mov
sti
dec
xchg
rcrl
mov
xor
cmpsb
xor
mov
push
mov
xchg
ds
enter
sub
add
ret
movb
mov
xor
push
sahf
lods
pop
movsb
ds
lds
lock
cli
sbb
lret
add
jmp
in
push
jl
lods
inc
out
pop
mov
adc
dec
mov
xchg
iret
cmp
push
inc
leave
or
push
mov
out
insl
mov
mov
push
das
lret
les
mov
push
rol
das
fs
cmp
push
scas
sub
das
test
sti
push
insb
clc
xchg
or
fbld
lcall
stc
mov
pusha
call
cwtl
test
scas
clc
icebp
sbb
hlt
and
jo
pushf
push
dec
shl
push
ret
fwait
mov
ficoml
xchg
jns
scas
movsb
xchg
cmc
shr
pop
jae
shl
int3
aas
inc
rcrb
mov
loop
jbe
hlt
dec
popa
lret
sub
fmul
stos
rcr
lock
inc
notb
mov
xlat
fwait
stos
mov
sbb
inc
lock
std
outsb
out
jo
dec
sarl
mov
lods
in
push
iret
cs
lock
pop
test
mov
outsb
or
sbb
push
adc
mov
lea
mov
fwait
repnz
movsl
jb
stos
andb
mov
ror
dec
pop
pop
adc
mov
into
and
jecxz
fildll
stc
inc
pushf
jl
paddusw
test
push
add
lock
outsb
xor
dec
mov
xchg
imul
cmp
lcall
pop
cmc
daa
adc
loopne
adc
cli
jo
inc
repnz
dec
add
inc
fistpl
mov
push
xchg
push
leave
pop
or
dec
push
cmp
mov
fidivl
xlat
iret
adcb
movsb
insl
dec
jge
add
in
mov
out
dec
repnz
push
push
sbb
mov
imulb
sbb
repnz
fdivl
addr16
sub
mov
negl
jecxz
fistl
cwtl
sub
cmp
mov
je
fldln2
fs
mov
out
mov
in
xorb
es
sti
sub
test
xor
mov
lret
bnd
in
movsl
jle
pushf
push
stos
out
sub
roll
inc
mov
jg
fwait
icebp
or
sub
in
sbb
test
inc
mov
dec
std
je
cmpsb
decl
mov
mov
icebp
push
jl
jg
in
push
arpl
andl
push
cmp
aad
add
pop
mov
stc
cmp
and
dec
in
adc
ljmp
or
pusha
xchg
adcl
mov
shll
cmpsl
enter
or
cwtl
js
loopne
jns
mov
pop
stc
imul
roll
gs
outsb
movsb
dec
das
inc
out
les
add
iret
stc
or
leave
pop
push
fcmove
jb
lea
cs
out
fisubl
push
ja
aam
sub
test
sbb
mov
ret
popa
pop
mov
or
mov
gs
push
fincstp
pop
mov
mov
gs
mov
fldenv
imul
scas
jb
jnp
adc
movsb
fcompl
push
fwait
cld
shr
imul
data16
pop
push
in
push
dec
and
jo
pop
mov
add
pop
adc
jno
mov
call
je
pop
lahf
fbstp
fstpl
mov
pop
hlt
bound
cmpsl
mov
movsl
ljmp
je
mov
inc
test
dec
inc
jl
add
cmpsb
pop
mov
aaa
pop
into
mov
push
call
lds
sti
or
pop
orl
jmp
fistpl
and
pop
xorl
pop
mov
lods
cld
dec
mov
movb
shll
mov
nop
sub
lret
out
ror
mov
enter
pop
addb
sub
fistl
mov
mov
mov
jmp
pop
xor
add
pop
push
jecxz
push
mov
nop
vorps
add
js
sub
repz
push
bound
jnp
mov
fcomi
sbb
repz
jl
pop
or
divl
or
fnsave
mov
popa
pop
xacquire
push
cmp
loop
add
sarl
jg
loop
or
pop
and
fcomps
sbb
into
lahf
jg
imul
and
and
mov
xchg
into
popa
out
popf
push
jmp
adc
mov
push
or
mov
decl
sti
andl
cli
mov
or
pop
lcall
cmp
or
cmc
xchg
decb
xchg
cltd
xlat
inc
mov
push
xor
adc
je
les
xor
adc
and
push
pop
shrb
out
push
loopne
ds
enter
jecxz
mov
cs
mov
in
movsb
popa
rcrb
stos
push
pushf
jno
adc
jbe
xor
popf
push
cmpsl
in
inc
push
test
ret
adc
movsb
xchg
jae
scas
mulb
mov
add
lock
jns
movsl
add
jle
inc
pushl
dec
stc
mov
int
adc
inc
sti
mov
jno
cmp
jg
enter
sar
lods
idiv
cmp
or
push
push
loope
dec
cmp
dec
mov
jp
dec
jl
test
test
fwait
test
loope
dec
push
or
adc
and
cmp
fs
add
jns
and
mov
xchg
insl
lcall
dec
jne
aas
inc
int
xor
notl
pop
sbb
cmpsl
leave
hlt
xchg
push
in
fwait
adc
fmull
test
inc
iret
inc
mov
sbb
cwtl
insb
popf
dec
and
cmp
cwtl
jne,pt
loop
movsb
incl
out
xor
dec
clc
xchg
mov
bts
aas
lahf
push
sbb
subb
ljmp
adc
lcall
cmp
sub
dec
pop
int3
mov
dec
sbb
jo
imul
mov
pop
jge
arpl
into
outsl
dec
cmpsl
sub
test
in
dec
push
xor
in
mov
lock
rolb
in
mov
test
and
jo
sbbb
andb
shl
push
test
adc
rcl
push
mov
ret
or
push
mov
repz
push
and
xchg
ljmp
and
insl
fsubrs
add
aaa
cmpsl
and
leave
popa
hlt
aam
dec
dec
dec
cmp
insl
test
cmp
adc
push
mov
in
ret
and
pop
lea
inc
lods
jns
imul
movsl
pop
add
sahf
xor
cltd
sub
inc
xor
pop
dec
adc
push
cmp
jmp
xchg
and
dec
mov
inc
imul
add
popf
jno
adc
mov
lock
nop
aas
sbb
and
mov
push
and
sub
lahf
mov
repz
jbe
loopne
idiv
mov
data16
or
aam
jmp
adc
dec
popa
cmp
lds
pop
pushf
scas
pop
jmp
push
xchg
orl
pop
mov
je
test
popa
js
xor
mov
pushf
out
out
and
test
and
cltd
jb
push
fiaddl
add
mov
aam
popa
sub
flds
iret
xchg
pusha
enter
xchg
pop
xchg
ja
movsb
pusha
dec
xchg
fldl
pop
fwait
mov
dec
aam
sub
ret
cli
sbb
add
loop
push
pop
lds
dec
stos
into
sub
cmp
clc
fnsave
pushf
aaa
and
testb
stc
cli
xlat
xorb
andb
lods
outsl
pop
and
es
and
sub
mov
dec
or
dec
push
add
xlat
jg
or
mov
in
push
orl
and
loope
arpl
inc
mov
in
in
or
rol
cmpb
cmpsb
jno
add
mov
cli
mov
in
sahf
cltd
lds
mov
loope
nop
xchg
repz
lret
cmpsb
inc
jp
clc
pushf
ret
cmp
stc
jp
and
les
sub
xchg
jp
fwait
and
mov
stos
jae
inc
jle
mov
mov
imul
lret
mov
scas
das
mov
movsb
add
sbb
mov
int3
push
mov
push
into
out
filds
push
jnp
fsubrl
add
shl
push
out
jbe
mov
sbb
inc
and
inc
xor
add
stos
dec
xlat
jecxz
sbb
in
insb
pop
or
xchg
je
loop
push
lahf
cmc
sub
add
stos
je
jbe
push
jmp
xor
xor
fdivrl
cwtl
adc
sbb
lret
aam
pop
cwtl
xchg
dec
nop
daa
rsqrtps
xor
or
xchg
repnz
mov
jbe
cmp
push
cmp
mov
adc
inc
and
add
mov
pop
sarl
cmc
inc
xor
loop
mov
push
mov
xchg
mov
dec
pop
mov
inc
shl
data16
enter
mov
lods
loopne
lahf
inc
pop
dec
dec
fdivrl
idiv
int3
pusha
insl
imul
add
mov
dec
dec
pop
lahf
cli
add
adc
das
pop
dec
and
cmp
es
fdivrl
aaa
outsb
jp
in
jge
movsb
fisubrl
jecxz
sub
jbe
mov
icebp
jge
pop
push
dec
mov
xchg
cmpsl
mov
dec
mov
sub
ljmp
mov
shlb
iret
enter
movsl
mov
mov
mov
dec
loop
adc
repz
notl
nop
push
test
lods
hlt
pop
mov
adc
pop
in
cmpsl
mov
adc
xchg
lods
xor
push
jle
or
mov
ljmp
xchg
push
push
pop
fs
outsb
jg
pusha
rcll
test
push
fstpl
cmp
repnz
in
imul
mul
lds
adc
and
rcr
dec
data16
ds
mov
xor
sub
jb
mov
cmp
fstpl
or
aaa
xchg
insb
pop
adc
ja
sbb
js
lea
int3
mov
pop
add
aad
inc
mov
adc
xor
jg
orb
rep
lcall
jo
in
push
sbb
jecxz
dec
call
jne
adc
ss
mov
xchg
xchg
je
js
pop
mov
jle
inc
cmp
push
add
lahf
sti
filds
fwait
jmp
push
jae
or
jge
add
xchg
mov
mov
sub
push
xor
xor
and
dec
xor
mov
bound
negb
dec
jmp
out
push
fcom
mov
push
mov
lock
daa
test
aam
sti
cmp
das
outsl
inc
mov
loop
das
aam
stos
adc
lods
inc
mov
sti
dec
fistps
cs
pop
push
and
and
out
in
dec
mov
adc
mov
dec
mov
or
xchg
outsb
cmc
push
ds
rolb
adc
stc
lea
dec
mov
cmpb
gs
push
clc
enter
inc
xchg
mov
ja
jns
dec
cmp
imul
jle
cmpsl
inc
and
sbb
dec
subl
cmpb
mov
mull
lret
sub
int3
pop
jns
ja
std
aam
int3
and
and
test
stc
popf
xor
fidivl
leave
jo
arpl
mov
push
adc
jl
loope
dec
pop
sub
xchg
pop
push
decb
mov
int
xchg
fwait
add
outsl
jno
or
xor
test
sub
mov
xlat
mov
add
add
push
xchg
mov
loopne
xor
movsl
jbe
js
or
insb
fldz
sbb
xchg
divl
add
and
test
sahf
sub
push
dec
push
push
fs
popa
faddl
ret
xlat
es
sbbb
fwait
mov
nop
or
add
mov
jae
mov
outsb
into
rcll
mov
xor
mov
stos
mov
xchg
sub
pop
leave
inc
stos
into
decb
xchg
xchg
mov
or
filds
int3
loopne
enter
mov
sub
mov
pop
jge
pusha
adc
adc
fsubl
mov
leave
in
push
cmp
mov
push
adc
hlt
lea
orb
das
inc
jecxz
cmp
scas
movsb
lahf
mov
es
dec
mov
xor
mov
fdivrl
iret
sbb
test
out
adc
sbb
adc
gs
cmp
scas
call
ja
pop
sub
and
inc
nop
scas
jle
icebp
in
int
mov
data16
xchg
and
bound
jae
pop
stos
movsl
pop
pusha
and
pop
dec
and
or
pop
mov
adc
test
lret
push
pusha
xchg
adc
jbe
jb
lods
mov
test
pop
add
test
adc
enter
inc
imul
daa
mov
push
fs
jg
pop
adc
iret
dec
in
dec
pop
in
aaa
push
int3
sahf
in
push
jne
movsl
aas
jne
inc
or
insl
mov
call
pop
rcll
call
or
sbb
sub
mov
fstpt
in
fistpl
fwait
inc
or
xor
movb
out
movsb
add
dec
push
rcrl
roll
push
adc
xchg
scas
dec
ret
fwait
xor
push
rcrl
test
dec
and
aam
jae
jns
je
nop
iret
add
dec
sbb
dec
popa
movsb
add
daa
notl
aaa
das
stos
sub
dec
shlb
cmp
pop
push
popf
push
add
pusha
stos
dec
hlt
fmull
push
dec
rcrb
mov
mov
adc
or
fs
inc
dec
dec
decl
in
dec
inc
push
sub
mov
dec
sbb
mov
pop
ret
lock
jg
sbb
fwait
int
in
cmovne
sub
push
sub
push
and
clc
mov
into
mov
dec
daa
mov
loop
jecxz
dec
cwtl
jne
into
cld
cwtl
jb
xchg
xlat
push
faddl
mov
imul
fisttpl
fwait
xchg
aad
movl
push
pop
cs
xorb
test
sti
orb
xchg
bound
cmc
test
mov
xlat
jle
push
cmp
cli
lcall
and
rcrl
stos
mov
lock
add
out
sub
lods
cmp
js
loop
mov
fcoms
xorb
jnp
aaa
mov
jp
mov
out
cmp
fildl
push
lahf
inc
mov
dec
mull
addb
fldt
ljmp
in
cmc
push
and
mov
std
das
push
out
ja
ss
sub
lcall
sbbb
sbb
fistl
popf
adc
inc
clc
inc
inc
dec
cmp
xor
cmp
adc
inc
cmp
es
mov
inc
sti
pushf
mov
std
or
adc
mov
add
and
sbb
out
ja
fstp
push
fdiv
or
inc
sbb
test
repnz
push
test
sbb
push
andb
lock
fldenv
mov
dec
and
sbb
test
in
out
mov
adc
mov
cmc
ss
cmpsl
adc
adc
lods
push
jno
repz
mov
repz
adc
dec
xchg
and
in
push
xchg
mov
mov
and
gs
xchg
mov
mov
dec
mov
scas
mov
jo
int
scas
sbb
xor
xchg
les
fwait
fwait
das
shrb
icebp
dec
fstl
or
pop
das
jp
xor
cli
divb
jle
enter
jne
aad
cli
add
sbb
push
pop
aaa
movsb
outsl
jnp
jnp
outsl
into
popf
or
add
lret
inc
mov
stos
test
ds
sbb
adc
std
rcll
insl
fisubrs
xchg
pop
fs
xchg
xor
movsl
push
pusha
out
mov
mov
mov
lock
inc
push
and
daa
push
scas
sub
inc
bound
cmp
jge
push
cwtl
push
or
pusha
inc
mov
mov
inc
pop
imul
mov
lods
sbb
mov
xchg
in
add
sub
xor
pop
jmp
ret
shlb
sbb
jp
or
cmc
mov
xor
call
push
dec
push
dec
push
insb
test
sub
pop
pop
and
pop
mov
fsubl
icebp
cmpsl
adc
add
or
arpl
fninit
iret
pop
aas
dec
rclb
xchg
inc
movlps
mov
pop
adc
sbb
inc
pop
stos
arpl
cmpsl
adc
and
aad
mov
rcrb
xorb
pop
xor
mov
dec
xlat
sub
mov
xchg
mov
pop
inc
mov
jae
mov
mov
in
scas
inc
dec
subb
gs
addr16
mov
scas
cmpsl
push
add
mov
mov
and
and
outsb
mov
lea
mov
hlt
je
lds
adc
nop
xchg
pop
xchg
jl
or
inc
mov
movsb
sub
aad
lret
enter
cmp
xor
not
aam
mov
sub
fsubrs
lock
push
out
adc
mov
hlt
pushf
js
sub
cwtl
ja
aas
bnd
sbb
push
enter
xchg
lods
dec
mov
cmpsl
popa
sub
cwtl
rorl
pop
pop
inc
ljmp
inc
pop
mov
inc
mov
xchg
dec
add
loope
jno
fstpt
or
inc
lea
pop
add
call
mov
pop
mov
es
jg
out
mov
daa
cwtl
outsl
movsl
setl
mov
pop
sub
xchg
inc
rorl
add
sahf
sbb
les
dec
arpl
lret
add
cmpsl
xchg
mov
xor
mov
pop
fcmovne
xor
add
test
xchg
mov
iret
inc
jbe
pop
aad
rep
mov
xor
gs
mov
or
mov
ja
mov
movb
inc
mov
testb
sub
sbb
cmp
push
mov
xchg
add
outsl
ret
mov
dec
in
mov
dec
out
mov
or
clc
imul
mov
movl
inc
cmpsb
push
mov
addl
rorb
xchg
push
jbe
mov
jbe
insl
xchg
add
xchg
rorb
in
mov
negl
mov
in
jle
sbbb
aas
or
ret
adc
push
lahf
out
fidivrl
or
cli
mov
cmp
and
push
mov
inc
sbb
sbb
fs
test
mov
inc
sbb
cmc
xor
or
ja
xchg
mov
scas
jae
inc
repz
pushf
pop
mov
push
xor
fwait
cs
push
pop
add
ss
arpl
repnz
xorl
ret
pop
or
mov
aam
adc
dec
out
sub
rclb
push
and
imulb
cmp
cmp
lods
imul
xchg
xor
shlb
lea
pop
add
andl
test
stos
jae
lock
jo
loopne
in
sub
cmpb
daa
out
jbe
dec
fsubr
ds
lret
inc
and
adc
or
int
shll
ds
test
fdivl
cmpsl
mov
mov
das
dec
mov
pop
outsb
insl
push
xorb
rolb
cmpb
aad
xchg
push
popf
lods
mov
scas
insl
push
mov
adc
stos
fmul
or
les
cmc
aam
xchg
xor
jb
and
cmpsl
stc
js
jecxz
xlat
enter
lds
dec
fdivrs
imul
jb
lret
bnd
adc
mov
mov
lret
and
cmpsl
push
lods
testb
cmp
fstps
add
xchg
pop
orb
cwtl
ss
ss
das
inc
jnp
in
sbb
xchg
sbb
int
mov
jae
cmp
dec
xchg
and
sub
std
adc
cmp
popf
pop
scas
cmpsb
push
inc
imul
aas
outsb
inc
inc
hlt
sbb
push
lcall
push
adc
fbstp
lea
mov
lods
and
xchg
sub
xor
sbb
sarb
cmpsl
data16
push
inc
adc
lret
adc
shll
cmpsl
push
test
lcall
iret
xchg
cmp
std
movlps
lods
insl
cmp
push
xchg
dec
sbb
cmp
pop
sti
mov
leave
stc
fisttps
cmp
fimull
jns
cmovb
mov
push
jge
fcompl
mov
notl
push
add
fisttpl
rcll
jbe
add
push
sub
xchg
inc
mov
cmp
mov
outsb
sub
insb
adc
std
in
add
dec
lahf
xchg
push
mov
xchg
loope
mov
pop
je
stos
add
lock
cltd
outsb
lahf
fistps
cmpsb
imul
out
inc
dec
outsb
mov
jns
push
jb
and
dec
xor
gs
jbe
fisubl
xlat
push
cmp
scas
aad
fistps
xor
mov
inc
xor
ja
mov
inc
dec
into
adcl
gs
repnz
seto
ja
fs
rol
adc
sbb
pop
xchg
and
outsl
mov
inc
dec
addr16
jge
pop
and
aaa
xchg
pop
jle
pushf
jmp
add
mov
inc
sbb
push
movsb
push
fmulp
mov
add
jg
xchg
gs
mov
insl
das
mov
in
push
mov
cs
iret
dec
out
mov
push
bound
lds
je
insb
rorb
sub
jmp
pop
sub
mov
push
add
lret
mov
fsubrs
fidivs
out
lcall
aaa
jmp
sahf
je
push
adc
js
inc
adc
sbb
hlt
imul
mov
add
mov
add
cmpsb
scas
fwait
pusha
dec
or
inc
cmp
das
cld
pop
stc
mov
and
mov
loopne
xchg
jne
mov
movsl
xor
les
mov
lret
jo
add
mov
jns
and
pop
sub
lea
dec
notb
and
xor
push
mov
cmp
xor
int3
popf
arpl
push
insl
mov
cmp
sbb
test
pop
lret
xor
andl
and
fiadds
and
test
pop
jg
mov
sbb
jcxz
js
fdivrl
push
mov
lcall
xor
sub
jae
ret
inc
hlt
jge
sbb
faddl
rcll
sbb
inc
les
and
jmp
inc
jno
push
call
inc
jbe
std
xor
mov
subl
and
xchg
cmp
xor
ss
and
inc
xchg
test
sbb
ficoms
aas
ret
dec
fdiv
hlt
inc
pop
out
dec
and
fwait
in
stos
push
xchg
das
testl
popf
cltd
pop
fnstsw
or
sub
pushf
and
call
nopl
add
jecxz
xchg
pop
lahf
lods
inc
jg
mov
inc
mov
fbld
fdivrs
and
mov
in
jmp
inc
aam
in
jbe
xchg
mov
mov
adc
adc
pushf
lahf
das
sub
adc
mov
int
fldenv
sub
int3
xor
xor
inc
lcall
cmp
mov
sbb
and
lods
mov
pop
inc
iret
sahf
push
adc
ja
pop
ret
movsb
jns
sbb
scas
pop
sub
jne
cmp
fimull
icebp
xor
sub
mov
and
scas
fisttpl
ret
out
icebp
xor
stos
test
add
test
sub
cmp
cmp
ljmp
mov
push
ficomps
mov
dec
shll
pextrw
fadd
stc
jno
adc
out
out
and
test
mov
inc
je
sbb
or
psubb
jl
inc
sub
ja
mov
xor
and
loop
ds
mov
cmp
cs
lcall
pop
cmovs
cld
xchg
mov
xchg
es
js
mov
add
stos
inc
ret
loope
add
mov
jnp
mov
imul
and
cmp
cmp
test
sub
xor
cmp
sub
roll
jge
scas
in
orb
jge
cld
outsl
insb
in
std
or
shrl
scas
test
push
insb
in
mov
cmpsb
incl
sahf
sub
outsl
add
mov
ja
pop
xor
imul
hlt
lret
stos
sub
loope
mov
jp
mov
fidivl
int3
out
mov
add
mov
push
ds
orl
loopne
pop
scas
je
and
js
inc
loop
cmp
jmp
pop
and
fstl
mov
jmp
inc
push
hlt
addr16
notb
pop
pop
sbb
inc
insb
dec
aas
or
or
icebp
cli
sub
adc
lcall
mov
xchg
jnp
in
cltd
xchg
aas
cmp
inc
mov
sub
movsb
inc
dec
dec
and
fwait
cwtl
dec
hlt
xor
fwait
test
imulb
aas
pop
sub
sub
jecxz
xchg
sbb
push
pusha
cltd
scas
jecxz
xor
inc
and
dec
or
sbb
xchg
xchg
cli
std
pop
cwtl
leave
int
mov
jae
inc
adcl
sbb
data16
sub
loope
es
mov
clc
stos
lds
xlat
push
mov
sub
negb
push
jo
jecxz
stc
xor
mov
jge
pusha
mov
pop
dec
pushl
cmp
rcrb
mov
rcrb
cmp
mov
xchg
fiadds
lds
jnp
xchg
lea
add
ss
push
mov
cwtl
rcrb
pop
push
js
and
and
loope
sbb
cmpsb
ret
ret
sar
cmp
icebp
outsb
bound
pusha
fnstenv
loope
in
insb
fstpl
subb
xor
cmp
fs
mov
dec
clc
xchg
cmp
out
xchg
ret
sbb
push
mov
push
enter
sti
stos
jns
or
xchg
xchg
push
jge
imul
popa
cmpsl
xor
jmp
repnz
inc
xor
loop
mov
jne
test
xlat
inc
and
mov
and
mov
mov
aam
mov
push
jne
cli
popa
adc
jl
mov
ret
iret
jecxz
dec
cmpsl
push
sub
xchg
aaa
jg
pop
cmpb
cmp
inc
call
frstor
outsl
test
pop
ret
mov
jns
int3
cmpsl
jmp
cltd
leave
sbb
xchg
pop
insb
push
mov
sahf
stos
jmp
addr16
in
lret
test
mov
test
xadd
inc
inc
cmp
cmp
jge
dec
testl
or
dec
ds
aaa
sbb
test
shlb
mov
loopne
mov
ss
ss
mov
mov
add
push
adc
lret
xorb
lahf
pop
insb
dec
mov
outsl
lock
adc
mov
push
push
push
mov
and
push
and
push
pushf
insl
icebp
inc
rorb
int
in
push
mov
jo
or
push
popf
dec
jne
out
inc
pop
inc
xchg
mov
xor
cmp
mov
inc
xchg
lcall
pushf
add
repnz
inc
sub
inc
pushf
out
dec
sahf
in
leave
cld
std
cmp
loop
addr16
lea
jle
je
sbb
pop
test
test
add
sub
jae
aam
sub
cmpsb
adc
sub
aas
imull
inc
sub
push
mov
cmpl
push
jno
mov
out
xlat
adc
jge
cltd
push
aas
push
jnp
mov
loopne
mov
pop
leave
jl
arpl
mov
sbb
aam
lock
cs
push
xchg
push
xchg
iret
cmc
scas
sarl
mov
pop
dec
or
ja
sub
mov
add
pushf
dec
lds
jmp
movsb
pop
push
int
adc
adc
pushf
pop
hlt
les
test
jl
jns
outsl
xor
xor
xchg
add
lods
stc
cmp
jge
movsl
and
mov
add
push
popf
lret
dec
mov
mov
cmpsl
sahf
mov
sahf
ljmp
fwait
inc
cmc
aam
push
sbb
stos
gs
pop
and
je
lods
pop
pop
aad
xchg
xor
pop
repnz
sub
test
fidivrs
push
mov
jle
mov
cmc
aas
das
mov
inc
cltd
xchg
sbb
sbb
les
mov
and
les
add
jns
aas
push
push
cmp
movsl
sub
negb
sub
jns
jbe
fimull
xor
cmovne
inc
pop
loop
xchg
inc
sub
sbb
push
lret
pop
jns
fmul
push
dec
lea
adc
cmc
fwait
rcrb
dec
cs
rorb
pop
pushl
jne
mov
xchg
int
and
or
mov
inc
js
push
pop
cmp
pop
sbb
mov
leave
push
jmp
sti
add
cmpsb
and
pop
add
mov
out
mov
xor
add
push
mov
or
add
pop
sbb
ror
fadd
sub
testb
push
imul
lods
jle
and
scas
sub
ret
sbb
jmp
mov
cld
adc
mov
popa
inc
add
out
pop
js
pop
subb
fstps
mov
imul
sbb
movsl
fwait
rcll
push
pop
aad
inc
icebp
add
inc
lret
aad
aam
jo
jb
xchg
push
fldt
outsl
mov
sub
pop
pop
mov
fidivs
aad
cmc
jge
add
test
and
adc
or
push
mov
xchg
dec
push
add
xor
inc
push
xchg
xor
movntq
loop
mov
pop
pop
aas
fstp
dec
pusha
lahf
push
dec
mov
mov
popf
lret
adc
rclb
in
outsb
cmp
pop
pop
out
mov
cmp
ljmp
sbb
in
sahf
lret
ret
andb
in
addps
sub
jle
pop
mov
dec
mov
and
idivl
fnstcw
push
pop
filds
test
in
adc
andl
and
cmp
mov
push
push
add
test
in
mov
orb
cmp
xor
popa
sub
jge
sub
leave
cmove
adc
pop
add
xchg
lret
pop
mov
mov
js
stos
in
sbb
stos
mov
and
jnp
add
xor
dec
mov
mov
dec
add
scas
leave
js
stos
xchg
bound
xor
rcr
mov
pop
push
hlt
stc
sub
in
loop
sub
imul
xor
int3
pop
xchg
ja
pop
mov
pop
lret
dec
sbb
xor
sbb
jp
cmp
xchg
sub
or
lods
adc
mov
sti
push
and
fdivrl
test
or
mov
mov
std
or
sbb
cltd
ljmp
repnz
add
inc
jnp
leave
ds
lods
test
shll
mov
stos
iret
leave
sti
clc
xchg
sbb
xor
push
jp
stos
mov
sub
or
xchg
push
and
xchg
inc
pop
in
xor
inc
bound
cmp
xchg
cmp
or
ljmp
and
jg
fildl
inc
cmp
or
test
test
repz
inc
dec
dec
test
dec
imull
lret
dec
movsb
fwait
lds
cli
sub
add
xchg
stc
arpl
pop
leave
jecxz
push
lcall
icebp
push
push
cmp
fwait
fwait
mov
int
xor
mull
imul
insb
cltd
push
lock
push
neg
pop
mov
sbb
xchg
shll
xchg
inc
mov
mov
flds
push
mov
loop
repz
jmp
test
mov
imul
dec
add
push
mov
jne
shrl
in
xor
push
mov
adc
adc
dec
nop
inc
adc
xchg
icebp
fildl
inc
ss
pushf
xchg
cltd
nop
loop
cmp
jecxz
insl
out
rcrb
inc
jp
mov
insb
adc
gs
and
cwtl
loop
lock
enter
insl
scas
js
shl
sub
lods
ficoml
iret
aad
jmp
jae
roll
out
mov
jp
icebp
pusha
sub
imul
sub
xchg
cmp
mov
pop
arpl
xchg
and
xor
mov
or
insl
scas
cmpsb
pop
xlat
lcall
stc
popf
add
scas
mov
jno
out
cmp
dec
stos
sub
jp
mov
add
ds
out
mov
and
mov
pop
fcmovbe
mov
loop
int
shrb
movsb
or
inc
jp
xchg
fnsave
stos
pop
mull
fs
mov
in
mov
push
repnz
push
in
fildll
pop
add
cwtl
xor
jae
sbb
sarb
shll
mov
aas
lds
orl
lock
fstps
stc
pop
test
bound
leave
adc
pop
mov
aam
fimull
xchg
mov
jbe
flds
cwtl
cmpsl
inc
lcall
inc
mov
jge
sarl
mov
imul
movsb
and
shrb
out
cs
xor
sahf
ffreep
cmp
mov
and
add
xor
mov
daa
pop
jle
stos
inc
test
mov
or
daa
add
das
xor
add
dec
or
mov
sarl
out
popf
aaa
pop
pop
outsb
xor
jae
lock
and
adc
xor
lcall
add
js
add
mov
loop
faddp
sbb
icebp
and
inc
dec
je
add
and
das
xor
sbb
mov
leave
test
shr
cmp
out
mov
inc
jl
xchg
xchg
cmpsb
pop
sbb
test
inc
insb
push
ret
ret
or
in
data16
xor
fistpl
mov
fcomi
cmpsb
iret
cmc
les
push
and
int3
sub
mov
in
push
pop
push
rorl
cmp
enter
rcrl
ds
fs
punpckhwd
in
lock
in
jb
je
test
out
push
mov
ja
push
or
mov
xor
in
fdivrp
repnz
ljmp
sbb
fnstsw
mov
mov
and
mov
mov
mov
push
pop
jbe
pusha
add
aam
push
xor
jne
pushf
jmp
les
shr
arpl
std
iret
sub
pop
das
fldt
push
and
call
test
aaa
mov
push
test
sbb
negl
inc
cmp
push
lods
movsl
loope
fldl
lret
lea
icebp
cltd
mov
lds
mov
aad
movsl
push
in
cmp
in
cmp
cmc
add
repz
sub
inc
stos
add
mov
dec
xorl
nop
xchg
hlt
je
icebp
cmp
in
int3
es
mov
in
xchg
add
add
xchg
jae
push
ds
or
mov
inc
sub
and
aad
xchg
repz
andb
mov
mov
sub
test
es
mov
pusha
mov
dec
mov
cmpsb
lods
es
faddp
jge
scas
in
iret
sbb
jp
hlt
or
outsb
movsb
insl
xor
out
adc
and
fidivl
push
xor
cs
mov
pop
arpl
sbb
jne
mov
loope
aad
push
test
push
leave
popa
mov
cmpsb
int3
cld
and
aaa
in
je
jge
ljmp
mov
insb
xchg
insb
insl
add
das
sub
call
addl
sbb
add
dec
mov
adcl
mov
and
and
lods
and
push
sub
sahf
imul
mov
and
mov
test
xchg
in
mov
notb
mov
inc
adc
jbe
aas
repnz
adc
mov
push
mov
fldl
sbb
jns
sbb
dec
icebp
es
inc
mov
mov
repz
jbe
cmpsb
push
movsb
pop
imul
mov
popa
push
mov
cld
adc
or
inc
mov
push
gs
and
les
dec
mov
jo
xlat
orl
mov
add
push
dec
sahf
dec
in
jne
shll
ret
sti
push
push
adc
cs
jmp
enter
adc
adc
inc
adc
popf
aaa
dec
jo
cmp
insb
movsb
xor
std
or
lds
bound
repnz
popf
incb
fwait
mov
pop
and
inc
lds
add
sti
jmp
jae
jae
je
es
fwait
cmp
subl
lret
jle
mov
jecxz
inc
mov
sbb
adc
mov
cmp
push
inc
sbb
into
imull
add
pop
xchg
push
adc
data16
ror
int3
cmp
sbb
movsb
testl
push
jae
into
lret
das
into
xor
adc
pop
jge
rorl
sub
lcall
or
mov
mov
arpl
add
addl
push
rcl
das
add
out
scas
xor
sub
pop
or
popa
mov
mov
jmp
pop
sbb
sub
repnz
dec
or
fwait
inc
nop
inc
mov
ficoms
push
shlb
test
arpl
test
jg
pop
inc
fcomps
push
cltd
jbe
adc
pop
add
jp
sbb
frstor
outsb
int
jle
lods
mov
mov
fldenv
inc
cmpsl
rorl
das
jp
aad
shll
popa
inc
fimuls
push
add
arpl
dec
ljmp
adcb
mov
sahf
ds
xor
push
or
adc
dec
inc
or
outsb
fs
sbb
xchg
push
stos
push
sbb
lret
hlt
jns
add
int
test
mov
cmp
faddp
insb
lahf
mov
pushfw
hlt
and
pop
test
adc
arpl
lret
jnp
into
inc
mov
pop
mov
push
push
lods
mov
in
das
add
xor
sar
outsb
mov
pop
adcb
dec
dec
jmp
xchg
mov
popa
daa
notl
or
test
out
pop
or
in
jb
dec
sub
mov
jo
jns
loop
cmpsl
popf
stc
lea
mov
mov
insb
je
xchg
cmp
shl
test
push
jle
popa
test
es
and
mov
push
fiadds
dec
cmpsl
pop
jl
mov
sahf
push
stos
jbe
rorl
and
js
cltd
dec
pop
out
js
arpl
std
sbb
pop
inc
lahf
mov
sbb
je
inc
pop
call
or
sarl
mov
lods
xchg
or
ret
adc
xor
sbb
pop
repz
test
lahf
cmp
loopne
gs
adcb
stc
cld
nop
stos
inc
ja
jb
sbb
stc
cmp
mov
fiadds
jmp
pop
add
out
movsl
cltd
lds
lret
cld
push
ljmp
or
outsb
sbb
inc
pop
clc
sbb
adc
jo
xchg
or
and
cmpsl
jge
and
mov
inc
mov
inc
sbb
dec
mov
add
sti
cmc
xchg
rcpps
dec
ffreep
clc
mov
xor
xchg
arpl
cmp
inc
sbbl
mov
adc
cmp
in
inc
je
push
es
inc
mov
jle
mov
xlat
mov
ss
sbb
aaa
push
push
pop
das
aaa
push
cs
inc
add
cmp
cli
lds
and
sub
scas
push
cwtl
mov
fdivrs
stc
out
mov
in
cmp
outsb
dec
dec
mov
mov
sbb
xor
idivb
movsl
lea
pop
dec
scas
dec
mov
divps
cltd
shll
notb
bound
add
push
insl
cmpsl
xchg
outsb
mov
dec
and
inc
push
arpl
fstpl
in
loope
rcr
or
das
sub
mov
fldt
cmp
xor
xor
call
pushf
in
jl
cmpb
inc
and
aaa
xchg
in
jo
sarl
inc
filds
mov
rcl
mov
mov
xor
call
test
dec
xor
insl
mov
jns
xchg
push
sahf
push
or
stos
xchg
int3
data16
mov
es
adcb
ss
cmp
aaa
mov
mov
adc
popf
scas
shl
xor
sarb
pushf
adc
push
repz
sbb
outsb
mov
int
sbb
xchg
cwtl
push
sbbb
push
cmp
cmp
divl
ja
inc
dec
xor
loope
scas
popa
sub
stos
jns
sub
cs
jo
mov
pop
dec
into
add
pop
cmpsl
loop
sub
movsb
xor
mov
jge
aaa
leave
and
mov
mov
jo
add
in
addr16
mov
sub
jne
lcall
mov
call
enter
mov
add
mov
sahf
push
pushf
jl
mov
mov
push
insb
fwait
in
jb
icebp
cwtl
cs
mov
xor
inc
push
mov
aam
cld
outsb
in
frstor
xor
xchg
incl
shrl
les
adc
push
adc
test
idiv
push
or
pop
mov
movsl
fcoms
aad
or
and
shrd
inc
sarl
fmulp
mov
or
push
push
and
sahf
insb
mov
nop
mov
inc
lock
add
aam
ret
cwtl
xchg
mov
cmp
mov
sbb
in
or
push
cwtl
pusha
lret
xchg
scas
inc
repnz
add
fwait
or
je
dec
daa
fdivr
dec
adc
push
jne
ljmp
nop
mov
pop
mov
xchg
out
in
dec
fdivrs
idiv
je
mov
test
test
mov
adc
mov
jbe
push
rcl
ss
cmpsl
add
cmp
xor
jl
fiadds
mov
arpl
cmp
int
jmp
add
xor
and
hlt
pop
ror
loop
aaa
test
dec
cwtl
scas
fmull
push
pushf
imul
ret
push
xchg
sub
adc
push
ljmp
xor
dec
jecxz
aam
in
sahf
mov
and
test
addr16
test
adc
xor
adc
je
adc
or
dec
xchg
xchg
jecxz
sarb
fstl
push
pop
cltd
leave
jp
faddp
add
mov
and
int3
mov
jo
ret
rolb
sub
mov
in
sarb
in
repnz
in
xchg
dec
ret
data16
in
cmp
ficoms
das
push
push
stc
aad
or
sbb
pxor
mov
mov
pop
and
addb
cmp
movsl
mov
add
dec
mov
psubusw
inc
xchg
in
movlps
es
enter
gs
cmp
int
fs
push
inc
dec
cmp
pop
arpl
pop
mov
sahf
sahf
xor
xlat
lret
rcrl
sbb
das
out
or
xor
std
add
cmpsb
push
or
jp
push
in
or
cli
scas
inc
test
add
adc
pop
addr16
mov
cmp
dec
ret
aam
rcrl
stos
sbb
mov
imul
add
ror
sbb
xor
cld
jns
clc
xchg
enter
ljmp
ret
je
mov
jbe
outsl
xchg
push
imul
cltd
cli
cvtps2pd
sub
adc
lret
dec
push
loop
xchg
cmc
xchg
fcomp
fs
div
jl
jo
fwait
pop
int3
adc
stc
fcmove
mov
pop
enter
inc
outsb
jp
ret
cmpsl
xchg
orl
lods
push
aas
les
or
fistl
je
in
repnz
cmp
imul
addb
jecxz
cmpsl
sub
enter
xor
leave
gs
push
movsb
adcb
add
and
jns
pop
int3
xor
pop
mov
je
iret
jp
out
sti
sbb
mov
cltd
xor
cmp
pop
aad
cli
leave
sbb
jo
ret
sub
jecxz
mov
inc
jne
popf
out
sub
or
mov
fwait
aad
push
mov
xor
jge
bound
sbb
mov
cwtl
mov
xor
sbb
push
xor
arpl
sub
or
mov
mov
dec
push
jmp
add
imul
ss
shld
fsub
lret
mov
dec
or
mov
mov
inc
dec
out
das
vpcmpeqd
xor
scas
cwtl
js
push
frstor
or
mulb
jge,pn
push
xchg
xlat
aad
hlt
mov
sbb
mov
ds
fcompl
daa
ja
mov
outsl
jbe
and
rolb
aas
stc
ret
xchg
adc
add
orl
push
inc
sub
mov
addb
scas
cmpsl
cmp
sahf
xor
push
rorl
inc
shrl
in
mov
pop
add
and
dec
mov
rolb
aas
ss
push
inc
or
push
cli
rolb
adc
insb
jb
into
push
int3
movsb
mov
add
call
inc
jl
stc
data16
jae
and
jo
fistl
pusha
pop
xchg
in
in
mov
mov
stos
std
nop
xchg
enter
push
sub
mov
leave
sub
xor
imulb
imul
inc
daa
dec
es
jbe
add
ja
cmpb
std
xor
imul
ljmp
lret
inc
and
sub
mov
test
or
adc
cmp
fsubrs
lods
outsb
arpl
fcmovu
sbb
cld
cmp
jmp
mov
sub
pop
mov
sbb
adc
jbe
imull
jne
inc
icebp
outsl
jg
jns
mov
pop
dec
inc
xchg
outsl
insb
lods
sub
push
and
mov
mov
push
mov
jbe
roll
addr16
sarl
daa
es
stc
add
mov
enter
sbb
int
add
and
jno
pop
mov
pop
std
inc
mov
push
fidivrl
jg
fistl
icebp
dec
data16
repnz
insl
incl
fwait
or
std
and
xlat
and
mov
or
xlat
or
mov
jle
or
push
js
int
and
and
aas
es
jbe
je
and
icebp
ds
mov
daa
aaa
sbb
mov
cmp
xchg
mov
daa
jecxz
push
add
fadd
out
out
mov
mov
xchg
push
xchg
and
outsb
insl
adc
or
cmp
xlat
cmpsb
adc
adc
pop
test
lods
inc
mov
push
jo
decb
das
inc
and
stos
jp
xchg
add
cmp
pop
mov
xchg
shll
mov
sbb
pop
lock
sarl
add
xchg
mov
mov
add
cwtl
and
fwait
push
lahf
mov
hlt
push
push
mov
push
out
sub
aas
test
cltd
jl
bound
jnp
out
xor
loopne
cmp
dec
orb
iret
test
mov
mov
cs
inc
aas
repnz
lds
loop
add
mov
ljmp
fcomi
into
lahf
jbe
push
cwtl
fcoml
fs
mov
pop
ja
or
clc
in
lahf
inc
sub
leave
or
adc
sbb
in
inc
out
popf
sahf
mov
dec
sub
sti
cli
xlat
or
and
repz
pop
out
mov
shll
push
test
xchg
push
dec
and
or
inc
movsb
xchg
rol
out
push
push
mov
pop
add
insb
gs
movsb
cmp
jne
pop
std
lds
shrb
adc
daa
push
lret
addl
push
hlt
imulb
sub
loop
dec
jmp
sbb
cmp
lods
adc
loopne
ficompl
cmp
mov
mov
test
xorl
std
dec
je
sbb
mov
or
stos
clc
stos
out
enter
xor
das
mov
xchg
xor
lret
and
not
call
push
mov
or
add
and
pop
push
out
popf
in
add
int3
into
add
add
ja
or
aaa
dec
xchg
push
imul
cmp
sub
xor
dec
sahf
hlt
xchg
add
aad
ja
nop
push
and
divb
mov
or
mov
pushf
dec
mov
in
dec
xor
inc
aaa
pop
mov
mov
mov
dec
jg
jge
and
adc
jae
inc
hlt
pop
jmp
loop
lret
push
and
jp
sub
clc
push
jb
sti
mov
test
dec
or
daa
mov
in
adc
movsb
add
out
push
push
xor
sti
mov
in
pop
test
lds
dec
stc
sbb
xchg
mov
imul
test
mov
test
popf
je
mov
lods
leave
mov
and
loope
ja
push
push
bound
or
or
outsl
pop
and
popf
lret
push
movsb
lret
fs
or
cmc
in
jnp
cwtl
lods
in
js
pop
cld
adc
pop
stos
adc
stos
or
push
outsb
std
push
in
ret
adc
dec
inc
int3
jge
mov
push
and
das
inc
adcb
mov
pop
repnz
fucomi
ss
xchg
push
out
loope
mov
inc
xchg
jp
inc
bound
std
cmp
mov
pop
dec
pop
les
data16
mov
test
arpl
inc
push
lcall
add
nop
sbb
pop
xchg
mov
cmp
or
dec
xor
dec
in
repnz
mov
or
cmp
push
fwait
inc
xor
insl
sbb
jo
addr16
test
stos
jno
push
outsb
mov
iret
sub
adc
pop
call
cs
sub
push
cmpsb
dec
mov
xor
daa
sarb
add
pop
sub
inc
xor
and
push
lret
push
mov
or
xor
cmp
pop
inc
adc
and
pusha
xor
adc
sahf
add
jmp
push
mov
insl
clc
insl
sbbl
pop
jae
popl
and
loope
or
sub
lret
add
add
cmpsl
xlat
cmp
lea
jg
and
rcl
ljmp
les
fscale
cmpl
out
adc
inc
mov
jnp
leave
daa
adc
push
push
es
mov
xchg
cmp
rolb
mov
andl
das
hlt
xor
cmp
int3
mov
jl
xor
cmp
jbe
fcmovb
xor
outsl
mov
lcall
and
repnz
insb
ret
in
mov
and
fisubrs
scas
jae
fbstp
push
jmp
sub
push
fs
fucom
repnz
push
and
jecxz
sub
inc
int3
add
lcall
xlat
gs
cmp
ljmp
jl
push
shl
pop
je
loope
sbb
and
jno
enter
stos
lret
dec
pop
ror
cmp
dec
jno
fiadds
fsubl
jno
mov
test
mov
fwait
lret
stos
rorb
adc
and
pop
mov
mov
cld
stos
std
sub
sbb
adc
mov
rclb
xchg
test
iret
popa
jns
sub
ljmp
test
jmp
xchg
fdivs
mov
sbb
imul
cmpsl
cwtl
into
imul
adc
out
sub
aad
and
out
cmp
xchg
outsl
movsb
mov
or
test
in
cmpsb
ds
mov
cmpsb
xchg
push
xor
adc
push
xchg
mov
cmp
xchg
pslld
jns
push
dec
imul
movsb
mov
jmp
xlat
jae
cmp
adc
stos
mov
jns
repnz
add
daa
imul
mov
adc
scas
push
mov
aam
lock
and
sub
adc
jb
pop
cmp
scas
inc
popa
mov
push
popa
das
dec
sbb
jg
test
xchg
icebp
xor
inc
jbe
movsl
sbb
popl
hlt
sub
ja
pop
int
sti
push
sti
fwait
push
in
frstor
ljmp
in
pop
jo
in
inc
fbstp
test
xchg
xor
lea
clc
js
push
pop
push
repnz
js
push
mov
out
jp
je
jecxz
insb
clc
adc
pop
addr16
cmp
sub
add
sbb
or
das
push
lock
fnstsw
incl
push
mov
fdivl
mov
sbb
test
fsubrs
fmul
icebp
int3
xchg
cmc
sbb
ret
fnstenv
into
leave
jmp
popf
mov
inc
mov
jb
mov
lods
mov
or
cmp
sbb
sbb
xchg
mov
or
dec
inc
xchg
push
add
push
test
dec
js
out
in
aaa
repz
adc
inc
jnp
std
dec
push
push
mov
stos
cmp
addb
call
icebp
enter
je
push
xor
je
pop
shll
aad
iret
jbe
clc
loopne
add
insl
repz
push
ret
outsb
mov
jae
sbb
popf
or
add
addl
popf
movsl
sbb
into
pushw
or
insl
xchg
push
arpl
shlb
cmp
push
es
mov
xor
ret
shlb
cli
push
pushf
xchg
mov
pop
out
out
inc
push
mov
test
pop
or
jle
sti
cmp
jmp
dec
adc
jge
hlt
cmp
jmp
lcall
inc
xchg
mov
push
les
lret
addr16
dec
and
add
iret
add
leave
pop
ljmp
mov
inc
aam
ljmp
fmul
ret
cli
adc
push
js
sub
pusha
push
aad
enter
popa
dec
add
test
add
lret
jo
scas
jle
subb
cmp
mov
dec
adc
out
push
pop
out
pop
mov
insb
push
in
daa
sbb
inc
inc
int
cmp
mov
fistpll
outsb
xlat
sbb
rcrl
outsl
loopne
mov
and
repz
dec
dec
jp
xchg
mov
sbb
lods
cmp
out
mov
cmpb
aaa
enter
arpl
das
jo
repnz
jbe
inc
cmp
cld
fistl
cmp
fdivs
addl
int3
flds
out
out
dec
pop
jle
inc
pop
dec
call
inc
inc
push
lods
add
test
rcl
fadds
mov
andb
jl
xor
repz
ja
cli
in
inc
dec
sub
rcrl
lea
sub
sarb
mov
mov
scas
mov
add
in
mov
fidivs
enter
dec
cmc
aaa
loop
std
mov
inc
mov
cmp
mov
push
xchg
pop
push
sbb
pop
fsubs
sbb
lods
loopne
mov
push
add
lret
xor
mov
fisubl
xor
test
test
cmp
xor
movsb
inc
hlt
jae
mov
hlt
loopne
sub
pop
notb
lea
scas
jb
test
push
and
pop
lcall
mov
dec
mov
data16
dec
jl
out
jecxz
pop
sub
xchg
test
mov
lea
dec
dec
push
mov
xor
ret
and
push
jne
scas
aad
mov
scas
inc
cltd
out
push
ret
xor
dec
push
and
lock
testl
sub
mov
in
mov
mov
jae
imul
outsl
filds
ss
or
cmpsl
add
mov
xor
addl
push
lahf
js
adc
add
pop
inc
xor
add
sub
enter
sub
rclb
xchg
inc
cs
test
push
cbtw
daa
shll
cmp
mov
add
lods
shl
pop
xchg
int3
adc
adc
pop
push
xchg
pusha
je
ret
mov
xchg
pop
jecxz
insb
stc
out
mov
test
push
mov
push
sbb
mov
negl
mov
je
enter
jl
or
add
cs
jae
sbb
dec
decl
add
movsb
dec
in
lds
pop
xor
add
cmpsl
test
mov
das
xor
or
repz
outsl
inc
scas
lahf
mov
call
lcall
loop
mov
test
sarb
jmp
cmp
fidivrs
xchg
aas
pop
adc
pop
fucomip
popf
sbb
xchg
mov
aaa
pop
inc
pop
movsl
jg
mov
cs
xor
jns
cwtl
sbb
lods
movzbl
out
out
mov
and
adc
xor
xchg
into
cld
stos
lret
push
or
pop
out
xorl
pop
insb
push
xorb
repz
dec
insl
imul
cmpsl
mov
push
sti
adc
add
push
ret
pop
shlb
dec
in
push
xlat
xor
ret
sub
xchg
jb
fwait
loop
dec
jle
push
int
or
or
in
clc
mov
jae
dec
sbbb
cmp
adc
mov
out
movsl
insb
dec
mov
mov
fsubs
shll
add
mov
ret
mov
dec
xchg
pop
mov
enter
and
or
ja
outsb
inc
xchg
xchg
and
inc
daa
inc
pop
movsl
sub
mov
sbb
jbe
pop
lahf
ljmp
push
push
out
or
push
mov
jg
or
pop
mov
hlt
aad
es
mov
and
cs
dec
sbb
inc
xchg
insl
imul
test
mov
popf
mov
dec
sub
cmpl
lret
jmp
cltd
shlb
fdivrl
mov
pop
insb
pop
sbb
or
fcomp
movsl
dec
dec
push
imul
arpl
mov
jge
sub
mov
push
pop
aaa
lock
daa
repnz
dec
mov
adc
fstpt
out
xchg
loope
negb
or
out
sbb
sub
sbb
inc
pop
bound
repnz
pop
into
xchg
push
cmpsb
pop
insb
sub
add
ss
jb
rol
jns
xchg
scas
lods
xor
mov
xchg
inc
jb
call
mov
mov
dec
sub
mov
cmp
int
cmpl
xchg
mov
shrb
fcoml
cmp
mov
xorb
or
jnp
cld
out
xchg
fwait
jg
mov
test
into
gs
mov
pop
xchg
sub
lock
sub
jo
mov
sbb
ficomps
popf
iret
add
mov
data16
lea
insl
iret
movsb
fists
inc
cmc
xchg
mov
orb
ja
or
mov
sub
int3
das
push
sbb
jbe
jp
xchg
jae
out
adc
jbe
jecxz
sub
inc
mov
std
scas
jae
dec
arpl
sbb
sbb
mov
sbb
jg
mov
sbb
sub
pop
push
add
ret
je
xchg
mov
push
pop
mov
cs
scas
and
insl
pop
stc
mov
js
mov
dec
fidivrs
outsl
mov
push
out
push
sbb
push
inc
cmp
outsl
data16
mov
divl
pop
scas
movsl
out
dec
dec
test
jbe
and
call
add
icebp
adc
mov
es
pop
stc
mov
mov
jns
insl
mov
xor
or
iret
jle
stos
cmp
xchg
test
sahf
imul
dec
add
jnp
push
les
jns
dec
dec
pop
sbb
inc
in
test
fwait
sti
cmpsb
pop
or
xchg
or
loop
xor
sti
cli
and
xor
cmc
pop
arpl
cmp
push
inc
push
mov
cmp
mov
aam
adc
mov
sub
dec
add
arpl
jae
sbb
xchg
add
inc
adc
or
insl
stos
sbb
add
sti
loop
ljmp
mov
les
xchg
inc
pop
rorl
mov
pop
div
leave
sub
je
xchg
add
iret
gs
mov
jb
jne
inc
test
cli
mov
push
or
test
mov
mov
dec
ljmp
push
nop
lahf
in
daa
sbb
inc
sub
into
cmc
fnstcw
sbb
add
sbb
icebp
sub
out
pop
add
scas
sbb
pop
pop
movsl
mov
cmpsb
out
adcl
and
imul
inc
adc
clc
das
shrl
into
adc
push
mov
xchg
or
into
push
pop
lahf
push
sbb
adcl
repz
mov
adc
lret
les
adc
jp
test
sub
cmp
in
push
fsubrl
inc
pop
idivb
add
jle
fsubs
xchg
out
adc
push
out
push
pushl
or
and
push
ret
iret
cs
mov
xchg
daa
sub
and
jle
pop
int3
das
stos
push
jg
jmp
leave
fs
aam
adc
pusha
push
mov
jl
push
adc
add
fidivrl
push
icebp
sub
stc
mov
cmc
movsl
mov
mov
pop
inc
inc
xor
mov
adc
adc
push
xlat
jmp
std
mov
cmp
mov
jecxz
or
test
xchg
mov
je
xor
pop
sub
mov
add
dec
imul
adc
mov
dec
sbb
dec
xor
negl
int
gs
cmc
mov
cltd
push
lds
test
cli
mov
ret
jle
mov
out
mov
std
and
jns
mov
pop
mov
push
icebp
icebp
fsubr
push
int
enter
xchg
notb
mov
and
or
or
and
pusha
mov
shll
movsb
sbbb
xchg
pop
test
fidivl
insb
jnp
adc
notl
negb
push
test
call
repnz
jle
dec
cld
ss
xchg
test
test
push
testl
movntq
xchg
pop
stos
sahf
adc
mov
and
mov
aam
push
aaa
pop
cmpsb
mov
xor
out
xchg
loope
sub
sub
jne
jl
pop
pop
jl
lcall
das
add
lds
imul
loopne
inc
jno
lcall
mov
mov
adc
loopne
mov
imul
jno
jmp
fidivl
lods
loop
adc
call
divps
lods
push
xor
bound
jle
jp
cltd
into
lret
xchg
aam
mov
xchg
les
or
and
pop
sahf
jg
add
pop
add
stos
pop
scas
xor
jae
jnp
mov
lods
sub
ds
dec
push
movsl
jg
into
cli
jo
inc
stos
mov
xor
mov
cmpsw
xlat
sub
xor
add
inc
adc
add
add
arpl
add
jne
add
xchg
add
lcall
add
adc
add
adc
add
adc
add
adc
add
add
xor
add
inc
adc
add
add
adc
add
add
mov
add
fwait
adc
add
add
int
add
ficoms
add
out
adc
add
adc
add
adc
add
adc
add
adc
add
add
push
adc
add
add
incl
add
add
add
add
add
mov
incl
add
add
adc
add
add
aad
add
incl
add
add
add
je
add
jmp
incl
add
add
adc
add
add
add
jb
gs
xor
cs
insb
add
gs
xor
fs
insb
add
jbe
jb
cs
insb
add
imul
insb
add
add
je
popa
jo
push
outsl
jae
je
outsl
outsb
add
add
outsl
bound
push
imul
gs
outsl
insl
insl
popa
outsb
fs
imul
inc
gs
push
dec
outsl
arpl
add
je
popa
insb
inc
insb
insb
outsl
arpl
add
inc
gs
jne
jb
outsb
je
jb
arpl
jae
sbb
dec
outsl
jbe
inc
imul
add
outsl
arpl
jae
xor
js
add
bound
push
imul
gs
jne
jb
outsb
je
push
dec
add
push
jae
jb
gs
jne
je
popa
outsb
addr16
inc
add
inc
js
je
jb
arpl
jae
inc
add
je
outsl
outsb
jae
insb
gs
jne
jo
je
push
add
add
imul
je
push
jb
imul
je
outsl
outsb
push
add
inc
jb
ja
outsb
jne
popa
jb
push
add
je
outsl
jne
gs
outsl
jbe
push
outsl
imul
scas
add
fs
imul
add
je
imul
js
inc
add
add
gs
je
push
jns
je
insl
push
push
jae
push
push
jo
popa
je
push
imul
add
je
imul
js
inc
add
add
je
insb
je
popa
bound
outsw
add
jb
outsl
ja
jb
jne
push
add
add
je
imul
outsb
addr16
add
popa
insb
imul
je
adc
pop
jae
ja
jb
outsb
je
add
add
jo
gs
lods
add
insl
arpl
add
gs
outsl
outsb
imul
insb
outsl
addr16
imul
gs
jb
popa
je
inc
outsb
je
gs
imul
insb
imul
outsb
je
je
je
inc
js
test
insb
imul
add
adc
add
add
add
arpl
add
jne
add
xchg
add
lcall
add
adc
add
adc
add
adc
add
adc
add
add
xor
add
inc
adc
add
add
adc
add
add
mov
add
fwait
adc
add
add
int
add
ficoms
add
out
adc
add
adc
add
adc
add
adc
add
adc
add
add
push
adc
add
andb
adc
add
add
add
add
add
add
add
add
addr16
add
jae
ja
jbe
cs
insb
add
add
add
add
add
add
add
add
adc
add
pop
add
inc
pop
add
repnz
add
adc
add
add
add
add
xchg
add
adc
add
adc
add
adc
add
add
add
jo
fs
jns
add
je
jae
addr16
imul
imul
dec
jo
outsb
inc
jae
imul
popa
add
jo
ja
js
push
gs
fs
addr16
ja
js
add
gs
je
dec
push
push
addr16
