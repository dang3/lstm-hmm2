ljmp
out
mov
pop
xlat
out
mov
adc
sub
and
idivl
fs
cmpsb
lret
fwait
xchg
cltd
push
stos
jb
enter
inc
xor
xchg
or
xchg
cmp
loop
inc
lods
push
popf
sahf
out
je
popa
jl
push
sarl
push
daa
aad
dec
popf
hlt
push
dec
xchg
repz
mov
and
mov
cmpsb
jns
in
arpl
push
shlb
adc
cwtl
fwait
xchg
insl
lea
in
pop
mul
jno
ficomps
aad
push
cmpl
inc
add
stos
pop
sbb
mov
pushf
fwait
mov
jle
sub
pop
dec
sarb
push
pop
clc
xor
xchg
inc
cmp
loope
mov
xchg
movsb
pushf
ret
stos
jb
movsl
mov
out
xchg
rolb
jecxz
lret
jmp
mov
mov
rcll
std
adc
jno
or
notb
pop
rorb
dec
add
loope
pop
xchg
fistpl
mov
fwait
ret
fs
addr16
pop
jns
add
fs
xor
mov
mov
ja
jmp
call
ret
sub
decl
in
jne
lret
mov
mov
push
inc
add
dec
shrl
leave
call
insl
xor
cld
push
int
pop
cmp
cs
pusha
and
fiaddl
stos
push
inc
roll
notl
pop
mov
jecxz
repz
mov
pop
testl
jmp
cmp
lock
xor
pop
push
adc
push
ficompl
test
cmp
cld
mov
sbb
mov
xor
jg
addl
add
getsec
push
sbb
lods
mov
out
jb
push
js
ja
rorl
movl
out
cmp
dec
xchg
push
icebp
jge
dec
mov
and
imul
iret
call
call
psadbw
cmp
ja
and
or
hlt
jecxz
mov
sbb
mull
or
mov
fistpll
in
cltd
cwtl
xor
xor
stc
mov
cmp
mov
pop
xor
pop
cmp
imul
xchg
gs
mov
or
xlat
dec
rcl
push
inc
inc
pop
out
mov
jb
jg
mov
mov
pop
push
pop
inc
cmp
mov
jb
ret
in
jle
add
mov
jge
ret
mov
into
stc
pop
or
fs
movsb
dec
xlat
or
clc
jmp
inc
adc
out
fs
lret
pushf
push
sub
pusha
popa
imul
stc
ror
mov
dec
enter
roll
lods
push
popf
jbe
dec
out
sarb
jnp
jle
inc
or
add
sbb
jmp
or
fwait
mov
loope
mov
push
mov
fidivrs
repnz
jmp
fwait
inc
sbb
pop
aam
jle
repz
dec
nop
add
decl
orb
je
jbe
mov
jno,pn
addl
sub
jecxz
sbb
icebp
int3
jns
push
mov
test
movsl
call
test
mov
notb
cltd
fucomp
mov
adcl
dec
and
cmp
xor
sub
das
dec
xchg
out
ret
inc
xchg
aas
rcl
sbb
cld
lods
lock
mov
mull
xlat
add
movsb
add
fsubl
in
inc
mov
sub
je
hlt
adc
lret
jecxz
fxch
sbb
dec
scas
bound
shl
fnsave
or
cmpsb
in
jp
scas
shrl
pop
sbb
lock
fildl
mov
into
push
xchg
pop
das
push
stc
sub
or
fistpl
ss
sub
mov
fimuls
arpl
fiaddl
mov
lret
je
or
lret
das
pop
or
dec
rclb
or
sbb
lods
test
dec
sarl
jmp
mov
in
sahf
movsl
mov
sub
divb
imul
outsl
jle
int
mov
jnp
push
movsl
cltd
jmp
bswap
add
adc
test
push
test
pop
mov
popa
pop
out
repnz
adcl
sarb
adc
add
leave
test
adc
data16
int3
push
f2xm1
inc
inc
out
push
inc
shrl
mov
dec
hlt
idivb
adc
idivl
clc
je
loop
xchg
mov
inc
mov
mov
push
dec
outsl
fldt
xor
in
subl
js
ret
repnz
cmc
push
dec
stc
hlt
mov
sbb
cmpsb
inc
jne
and
loopne
push
aad
test
mov
dec
leave
test
cmp
xor
sbb
push
xchg
jp
sbb
sbb
sub
lcall
fcoms
add
js
fiaddl
add
pop
mov
jecxz
lret
push
sbb
icebp
sub
xor
cmp
subb
ja
push
lea
mov
les
sbb
push
mov
push
xor
jp,pt
mov
data16
jae
sti
pusha
mov
inc
imul
arpl
or
inc
loop
repz
mov
mov
shll
mov
lds
add
mov
add
lock
cmp
mov
or
adc
jge
fwait
mov
push
inc
aas
xor
mov
and
sub
jmp
jb
xor
icebp
mov
and
xchg
xchg
xlat
mov
add
arpl
cmp
in
icebp
arpl
in
mov
mov
cmp
out
movsb
out
sbb
xor
mov
dec
cmc
mov
test
or
and
xor
jo
scas
xor
jo
data16
movsb
add
imul
cld
scas
arpl
inc
mov
lods
call
scas
inc
icebp
dec
xor
jb
mov
mov
leave
and
arpl
dec
sahf
les
mov
jno
dec
fdivrl
bswap
test
stos
mov
lods
addr16
nop
jg
pushf
test
dec
movl
sub
push
mov
negl
repz
inc
lahf
inc
jnp
gs
mov
clc
mov
loop
sti
lods
stc
xor
scas
fiadds
stos
nop
push
lret
add
add
or
pop
popa
pop
mov
push
pusha
mov
cmp
mov
stos
mov
imul
and
mov
sarl
push
sub
imul
xor
push
lret
daa
scas
jmp
and
in
nop
insl
cltd
aas
aad
xor
mov
sub
mov
adc
cmp
xchg
fs
inc
lcall
and
mov
or
add
cmp
pop
aas
push
add
xlat
xchg
push
mov
cmpsl
cmpsl
or
sbb
xlat
leave
sbbb
dec
mov
sub
roll
int3
mov
ljmp
inc
out
dec
bt
xchg
pop
bound
repz
push
dec
inc
jmp
and
mov
scas
push
add
lods
lods
outsb
sbb
outsl
push
outsl
and
jg
xor
dec
jb
test
mov
mov
in
push
or
adc
pop
pop
fucom
aas
or
mov
and
cmp
add
xchg
push
icebp
lock
aas
cmp
cmpsl
xchg
and
mov
and
add
xlat
push
cltd
stos
xor
jnp
and
mov
mov
cmp
out
push
lods
test
dec
invd
loope
sbbb
data16
or
pop
pop
sbb
jbe
stos
out
in
call
fisttpll
adc
mov
or
cltd
sbb
icebp
insb
mov
scas
adc
dec
or
dec
xchg
adc
iret
xchg
xchg
call
or
lods
mov
scas
mov
xchg
cmp
mov
pop
aad
test
mov
into
cmpsl
insb
dec
mov
push
jbe
xor
jne
cmp
jae
pop
sbb
mov
pop
mov
xor
pop
ret
inc
faddl
cmpsb
lcall
jb
xchg
mov
into
stos
mov
push
mov
dec
sub
pop
adc
aam
call
js
in
lret
repnz
mov
or
sarb
fs
jae
mov
sub
inc
test
stos
int
imul
or
inc
dec
and
add
adc
movsl
cmpl
inc
dec
jbe
xchg
add
or
or
mov
enter
stc
add
inc
pop
aad
test
jmp
add
in
rcrl
repz
add
ror
loope
jbe
aas
call
insb
pop
fwait
add
bound
dec
dec
jmp
pop
mov
mov
loopne
push
pop
pop
sbb
or
dec
xrelease
pop
repz
lret
lcall
pop
cmc
call
imull
fisubs
or
mov
add
cmpb
pusha
enter
adc
push
in
and
mull
push
hlt
jle
pop
sub
mov
es
cli
or
xorl
in
adc
adc
js
ljmp
insl
insb
sahf
stc
pop
xor
inc
jns
cwtl
xchg
xchg
test
popf
sbb
daa
xor
xchg
cld
and
mov
ljmp
cs
dec
mov
adc
cwtl
jns
scas
popw
mov
lahf
divb
pop
movsb
lods
push
bound
mov
push
aaa
pop
cli
adc
in
cmpl
cmpsb
or
aad
mov
dec
fwait
add
test
lds
stos
loope
imul
mov
ret
mov
in
out
push
jp
cltd
dec
xor
aas
sarl
iret
imull
out
repz
std
ret
pop
mov
lcall
push
aad
dec
cmc
adc
test
fstpt
mov
inc
rol
and
mov
adc
xchg
mov
clc
aas
ret
mov
inc
les
jp
xchg
sbb
ja
aaa
mov
sub
insb
or
xchg
insb
add
cld
add
mov
mov
icebp
push
push
jbe
out
rorb
xor
lcall
cltd
sub
jno
jg
clc
pop
dec
mov
cmp
repnz
and
push
cld
sub
and
xor
jmp
dec
sbb
cmp
in
cld
add
fldt
sbb
inc
push
pop
xchg
dec
xor
mov
test
push
je
fldcw
js
cld
das
adc
mov
sbb
loopne
fisubl
mov
lods
sub
pop
jg
jle
mov
dec
cwtl
add
add
clc
xor
inc
fcoms
adc
jb
cmp
inc
or
and
dec
rorb
je
hlt
xlat
or
sub
lods
mov
xor
sbb
cwtl
das
adc
dec
inc
mov
popf
jno
rcll
push
sub
xor
loopne
push
jne
les
ret
jecxz
pusha
jno
jl
cld
mov
int
cmpsb
mov
es
out
adc
fisttpl
movsl
sub
mov
outsb
cli
fisubl
sbb
loop
sub
xchg
aas
mov
insb
mov
ja
mov
fwait
ss
push
in
mov
xchg
ljmp
xchg
scas
shll
sub
fstl
sub
in
mov
xchg
adc
or
mov
stos
dec
lea
push
jle
dec
in
mov
fwait
loope
push
mov
insl
and
out
call
in
scas
or
cmp
jns
fimull
dec
imul
shr
cmp
dec
add
inc
fwait
gs
pop
xor
rorb
aaa
lods
es
insb
aaa
sub
and
lea
pop
and
dec
mov
subb
xor
mov
inc
inc
and
mov
mov
outsl
adc
cmpsl
xchg
cli
or
in
pop
or
jle
pop
lret
sbb
push
in
std
pop
push
jns
dec
sbb
sbb
mov
sbb
mov
xor
gs
xor
push
jmp
dec
push
out
or
ds
outsb
stos
pop
es
out
jp
adcl
fldcw
jge
aaa
out
ret
xchg
pop
jo
pop
mov
mov
xchg
mov
pop
cmp
xor
push
xor
not
popf
mov
sbb
shl
mov
xor
adc
mov
push
adc
out
mov
call
repz
jno
fsubs
ss
bound
movsl
and
push
adc
jne
inc
loope
shrb
insl
and
jp
xor
lahf
in
fmuls
lds
psrld
lock
adc
imul
xlat
push
pushf
mov
or
sbb
stc
sbb
aaa
jmp
test
xor
add
mov
clc
jne
fwait
sub
orl
dec
filds
imul
dec
mov
add
pusha
jbe
cmp
jecxz
orb
push
dec
hlt
stos
mov
dec
mov
jl
icebp
xchg
fsubl
jp
or
pop
jne
dec
cmp
movsb
sbb
inc
insb
int3
inc
fst
jge
aam
inc
popf
jnp
repz
es
lret
mov
repnz
icebp
push
pop
in
jecxz
daa
fdivp
mov
xchg
sub
mov
or
leave
xchg
mov
push
mov
inc
movswl
call
inc
inc
call
dec
push
dec
call
mov
inc
sub
imul
mov
and
call
inc
inc
mov
add
inc
movswl
mov
inc
mov
lea
lea
dec
mov
mov
call
lea
add
and
xor
call
lea
mov
call
inc
lea
sub
dec
imul
inc
lea
dec
pop
imul
inc
add
add
pop
dec
add
pop
imul
mov
inc
or
pop
lea
xor
inc
dec
sub
inc
or
add
pop
sub
inc
pop
dec
movzwl
mov
mov
dec
call
mov
lea
add
inc
ret
add
lea
push
add
dec
push
inc
movswl
push
add
movzwl
push
movzwl
movsbl
push
lea
mov
mov
imul
sub
push
add
ret
push
lea
inc
movswl
mov
mov
movswl
push
inc
mov
add
call
pop
ret
jmp
mov
mov
dec
and
mov
dec
mov
movzbl
dec
dec
add
add
dec
and
imul
dec
movzbl
inc
inc
xchg
mov
imul
xor
dec
xor
dec
lea
xor
mov
inc
dec
inc
dec
jne
mov
mov
dec
lea
pop
add
inc
pop
movsbl
mov
pop
dec
dec
or
sub
dec
add
inc
lea
mov
add
mov
add
ret
push
inc
and
mov
add
inc
lea
dec
sub
push
push
push
push
inc
mov
lea
push
mov
add
mov
add
mov
imul
dec
imul
dec
mov
add
push
sub
lea
xor
inc
mov
push
dec
movzwl
push
or
inc
pushl
add
call
lea
add
inc
mov
inc
imul
mov
lea
movsbl
pop
ret
add
mov
imul
inc
movzwl
dec
mov
imul
sub
lea
lea
cmp
jb
dec
xor
add
inc
mov
inc
inc
mov
movswl
sub
inc
add
sub
dec
lea
add
dec
mov
mov
dec
cmp
jb
or
mov
inc
add
xor
lea
xor
xor
imul
mov
pop
sub
sub
test
jbe
movsbl
sub
imul
sub
inc
mov
and
sub
xor
inc
add
dec
and
add
dec
lea
lea
inc
add
lea
mov
mov
inc
and
inc
mov
mov
add
movzbl
dec
mov
add
inc
mov
and
inc
inc
mov
lea
lea
mov
and
sub
mov
xor
xor
mov
sub
add
and
add
dec
sub
dec
jne
dec
mov
imul
sub
lea
inc
imul
mov
inc
or
dec
sub
mov
mov
lea
and
imul
dec
inc
inc
lea
mov
movswl
mov
test
jbe
lea
lea
sub
inc
add
mov
mov
dec
or
mov
mov
sub
add
dec
inc
inc
dec
sub
xor
mov
sub
lea
and
imul
add
mov
inc
mov
movzbl
inc
and
add
mov
sub
and
dec
lea
mov
add
and
movzbl
or
jmp
push
inc
dec
mov
and
and
mov
inc
sub
inc
and
movzbl
mov
lea
lea
add
mov
or
inc
lea
inc
dec
mov
mov
add
add
mov
imul
movzbl
add
dec
inc
and
mov
dec
add
inc
mov
dec
inc
sub
add
dec
dec
mov
and
imul
add
sub
sub
dec
mov
dec
movswl
inc
mov
lea
mov
inc
mov
add
add
and
mov
or
mov
add
dec
add
mov
imul
inc
inc
dec
lea
mov
add
lea
cmp
je
call
call
sub
ret
dec
dec
pop
sub
ret
push
and
movzwl
inc
dec
dec
push
sub
mov
push
sub
push
add
push
inc
dec
push
inc
lea
sub
add
mov
call
dec
push
imul
push
lea
pop
mov
inc
mov
dec
dec
mov
mov
or
inc
mov
lea
dec
je
inc
inc
dec
lea
mov
lea
mov
dec
mov
mov
mov
dec
mov
inc
jmp
mov
xor
mov
repnz
add
dec
add
inc
jmp
add
mov
lea
lea
dec
movzwl
mov
or
imul
imul
dec
lea
movzwl
inc
add
add
pop
pop
ret
push
xor
add
mov
add
inc
lea
mov
dec
imul
inc
mov
sub
dec
inc
movzbl
sub
mov
inc
sub
dec
lea
mov
dec
sub
and
mov
dec
pop
ret
sub
or
mov
add
imul
mov
inc
sub
mov
sub
add
mov
add
inc
xor
dec
or
mov
mov
add
inc
dec
movsbl
dec
dec
mov
movswl
cmp
jb
or
push
inc
add
push
imul
add
push
mov
sub
mov
dec
imul
xor
add
imul
xor
inc
mov
xor
inc
mov
push
imul
xor
sub
sub
mov
or
lea
mov
dec
movzbl
imul
dec
inc
dec
add
movsbl
add
add
dec
inc
movzbl
inc
dec
lea
jmp
call
outsb
call
jp
cmp
lret
mov
cmp
sbb
mov
cmp
fiaddl
clc
mov
xchg
hlt
loopne
lds
nop
lods
mov
push
rcrl
jnp
imul
sub
into
adc
mov
push
movsl
enter
push
sub
cmp
in
in
out
es
lds
test
push
mov
adc
lret
pop
in
mov
fistps
std
push
push
sbb
xor
inc
xor
jae
insl
pop
divps
dec
jns
or
mov
sub
jns
sub
jbe
mov
rclb
pusha
sub
aas
dec
mov
fldz
imul
mov
scas
fistl
in
bound
out
shl
push
jp
popf
sbb
sbb
sbb
inc
jecxz
pop
jb
push
lea
test
fnstcw
cs
shlb
fadd
xor
add
push
stos
push
in
lcall
lock
xchg
add
loope
rcrb
push
pop
insb
data16
nop
loope
sbb
mov
outsl
fsubrs
ss
shl
sbb
jecxz
mov
mov
and
movsl
jecxz
add
out
jno
filds
xlat
decl
pop
lret
pop
hlt
adcl
mov
xchg
or
adc
insb
jo
add
in
mov
jle
sbb
sbb
lcall
or
pop
fsts
inc
loope
cmp
xchg
xchg
or
inc
jo
shlb
scas
and
jle
inc
jbe
xor
in
scas
jl
clc
inc
or
aaa
arpl
push
pushf
cmp
xchg
xchg
subb
mov
testb
fstl
sub
dec
enter
hlt
sub
std
adc
pop
pavgb
ljmp
fnstsw
cmpb
les
ljmp
scas
outsb
inc
cmpsb
loopne
repnz
ljmp
dec
mov
jmp
loop
pop
mov
orb
and
xchg
je
mov
insl
je
loop
sahf
loope
jg
and
lret
lret
xor
and
mov
scas
jo
xor
mov
aad
lret
sbb
mov
or
mov
push
test
dec
mov
add
push
imul
pop
sbbb
ds
add
pop
jno
dec
cmp
jns
and
mov
test
inc
jnp
out
lea
jecxz
inc
jns
adc
adc
ror
dec
push
sbb
cmp
icebp
fwait
shrb
or
jecxz
xchg
mov
ret
add
cmp
dec
stos
push
pushf
add
lahf
push
xorl
sub
push
xchg
stos
test
das
das
sub
mov
cmpsb
sbb
xchg
sub
mov
outsb
mov
sti
js
mov
scas
jns
pop
test
xor
out
out
mov
les
ret
clc
js
fs
or
sub
xchg
fwait
jns,pn
fistps
xchg
dec
cltd
scas
and
cmp
pop
sti
test
insl
aad
add
mov
push
dec
jne
xchg
and
xorb
repz
test
aad
ficoml
sbb
movsl
fsubrp
inc
andb
mov
mov
negl
mov
hlt
dec
dec
push
jnp
insl
adc
jb
clc
adc
push
pop
paddb
ds
in
ds
cld
dec
lahf
call
push
ds
cmp
aad
pop
mov
ja
popa
xchg
sbb
das
fnstenv
pop
and
fcom
mov
sub
and
mov
es
cs
push
int3
inc
mov
popa
jo
into
ja
sbb
lret
mov
push
mov
cs
mov
lock
pop
jecxz
dec
outsl
cli
inc
sub
adc
lds
jle
inc
ret
out
push
test
or
sahf
pop
push
jp
pushf
pop
daa
movsb
adc
lods
pusha
sub
xchg
sti
int
mov
jnp
lret
inc
sar
std
clc
in
mov
mov
cmp
divb
mov
xchg
pop
dec
jle
ret
movsl
mov
add
iret
inc
mov
xor
movsb
movsl
sbb
push
adc
ds
sub
jg
xchg
outsl
lcall
sub
adc
fiaddl
xchg
nop
mov
add
lcall
push
add
mov
outsl
mov
lret
sahf
dec
or
icebp
adc
sbb
and
dec
lahf
mov
lods
cmp
push
aam
pop
jbe
stos
pusha
sub
push
mov
sub
xchg
cmp
sub
punpckhdq
out
jno
dec
ret
adc
hlt
mov
mov
lcall
lods
mov
mov
xor
jle
aas
push
sarb
daa
imul
lcall
adc
mov
cmp
les
es
or
xchg
pusha
sub
bound
sahf
out
sarl
push
gs
into
add
push
mov
mov
loop
cwtl
and
scas
and
fs
and
mov
dec
mov
test
pop
dec
mov
xor
xor
sbb
pusha
cmp
sbb
push
xor
daa
scas
dec
out
pop
ja
or
push
mov
jg
cmpsl
cmp
cs
cwtl
xchg
sub
and
mov
fisubrs
insb
xchg
and
jb
pushf
pop
cmpsl
js
pop
ss
in
cmp
pop
push
lret
cmp
mov
inc
push
aaa
jbe
in
outsl
outsb
pop
sbb
movsl
outsb
test
push
fdiv
mulw
add
dec
fstpt
imul
push
ja
sub
sub
mov
and
fcompl
es
mov
xchg
out
adc
out
inc
cld
fisttps
loop
aam
lods
pusha
pop
pop
int
mov
ret
mov
sbb
fcomp
jae
push
inc
inc
sbb
aas
call
loope
lcall
push
fnsave
pop
jle
gs
cmpsl
insb
mov
xchg
cmc
into
push
inc
push
sub
mov
and
out
out
fisttps
and
jo
imul
xor
clc
xor
lea
fstl
insb
sub
lds
xchg
cmp
aas
pop
sahf
cmpsb
fnstsw
repz
aam
in
push
cltd
scas
mov
das
insb
andl
mov
aam
add
mov
scas
mov
sahf
sti
insb
inc
fwait
pop
jp
call
out
xchg
mov
xor
shlb
sbb
dec
lret
gs
or
jno,pn
shlb
cli
dec
and
xchg
orb
jb
stos
add
loope
fistl
push
repz
adc
pop
enter
pop
and
jmp
jne
xchg
xor
add
out
cwtl
lcall
addr16
dec
adc
mov
inc
sub
negl
sbb
popa
loope
aaa
jle
inc
add
sti
test
dec
call
dec
mov
mov
mov
cmp
popf
xor
mov
jnp
loope
mov
xor
loope
xchg
cli
pushf
and
push
jnp
push
pop
xchg
push
inc
stos
in
in
fsubrl
jle
rcrl
mov
pop
add
xor
lock
push
fistpll
es
leave
loop
push
ljmp
cmpsl
stos
push
movaps
enter
pushf
add
ljmp
and
movsl
sbbb
imul
testl
xchg
xlat
mov
xor
aam
lcall
pop
sub
adc
dec
cmpsl
mov
in
test
push
pop
mov
push
sub
addb
mov
pop
int
in
scas
adc
lret
ja
outsl
mov
adc
mov
jecxz
hlt
push
add
es
cli
xor
jp
out
adc
shr
and
push
or
mov
ja
mov
mov
cmp
and
pop
cli
scas
mov
dec
dec
pop
push
rcrb
lahf
jmp
mov
xor
or
push
cmp
dec
repnz
pop
and
int
arpl
dec
or
adc
cmp
push
aaa
pop
cltd
xlat
inc
int
jae
mov
ret
mov
movsb
insl
int3
outsl
imul
cmp
mov
inc
lock
lds
pop
cs
mov
addr16
or
out
mov
fucom
sub
nop
pandn
pop
sub
dec
jmp
lcall
mov
push
mov
movsb
out
cmp
hlt
dec
bnd
push
shll
push
sahf
cmp
test
bound
push
mov
outsl
loope
int
and
or
jbe
sub
pop
add
and
jae
loop
std
xchg
repz
ljmp
mov
sti
jmp
test
or
jge
outsb
shll
sub
inc
arpl
cmp
mov
inc
mov
mov
sub
mov
in
sahf
pop
outsl
adc
xchg
jmp
movsb
lret
mov
stos
rcrl
and
gs
xchg
dec
addr16
test
sbb
jnp
mov
fxch
xor
aaa
jp
adc
pop
pop
jnp
add
inc
sub
popf
testb
xchg
scas
scas
xchg
pop
and
dec
dec
cmc
inc
in
or
mov
dec
push
mov
mov
lea
mov
lods
mov
int3
outsl
in
pusha
jg
jl
pop
sar
lods
add
stos
sbb
rcr
push
adc
daa
xchg
mov
mov
clc
pop
decl
jmpw
pop
xchg
lcall
mov
mov
mov
insl
dec
fbstp
or
fisttps
ss
filds
push
aas
int3
stc
sar
push
cwtl
push
push
cmpsl
lret
fwait
out
ffree
int
movsb
movsl
pop
jb
adc
shl
mov
cwtl
cs
cmp
adc
aad
out
mov
iret
push
adc
mov
sbb
sbb
into
and
jmp
add
sub
popa
lret
adc
outsl
enter
movsl
cwtl
int3
imul
mov
js
loop
mov
stos
sub
stos
fimull
and
dec
sub
or
sbb
push
inc
test
fisttpl
fdivrl
cmp
sahf
subl
push
lahf
adc
pop
fwait
mov
imul
cltd
push
fs
cmp
and
jecxz
cld
sahf
dec
outsl
scas
cmp
pop
or
call
jecxz
cwtl
cmpsl
ds
inc
aas
pop
add
xchg
xorb
cwtl
or
pop
out
leave
jge
add
leave
fisubrl
push
jno
mov
inc
jno
pop
fwait
prefetchw
xor
mov
je
sbb
loopne
cmp
addl
fistl
fs
inc
in
and
cltd
cltd
in
xchg
bound
xor
add
xor
cli
dec
cmp
sub
mov
fstpt
pushf
pop
sbb
es
sub
inc
fistl
dec
mov
int
and
fldl
adc
leave
popa
test
test
pop
dec
subl
push
push
es
xor
inc
sbb
dec
xchg
mov
pusha
movsl
lds
jno
push
mov
sub
jle
ljmp
pop
std
sub
pop
jno
test
add
orl
xor
stos
xchg
testb
out
dec
mov
shrl
xorb
xchg
mov
adc
mov
mov
dec
in
jae
out
test
nop
add
xchg
mov
aad
dec
std
out
je
mov
scas
add
mov
jle
or
aad
lods
and
scas
push
sub
test
out
sub
mov
iret
ja
mov
clc
std
and
inc
dec
xor
rol
cmpsb
movsl
roll
or
sbb
fs
insb
int3
jnp
fabs
xor
mov
outsl
loope
xchg
dec
inc
lods
clc
xchg
xchg
jl
in
mov
test
sbb
jge
hlt
mov
xchg
and
push
rcrb
mov
jle,pt
inc
push
aam
enter
mov
jbe
mov
insb
sbb
add
push
scas
divl
jmp
insl
and
xor
rorb
xchg
cmpb
mov
cmp
add
or
cwtl
int
test
das
cmp
inc
adc
adc
jmp
fistpll
mov
and
jmp
push
mov
insb
stos
add
pop
mov
gs
sbb
mov
cmc
arpl
jb
jae
pushf
adc
in
pop
adc
jl
dec
daa
xchg
rolb
xchg
mov
movsl
or
out
cmp
lods
icebp
inc
lods
xchg
in
xchg
xchg
jae
test
js
mov
sub
cmp
rol
jb
xchg
jns
addr16
loope
jne
nop
mov
dec
cs
das
push
xchg
adc
mov
jno
sahf
in
mov
ret
mov
jne
jae
aas
xchg
leave
pop
dec
notb
loopne
lret
and
jne
aam
rcr
shrl
fwait
jb
xchg
imul
and
xchg
xor
out
adc
jmp
lcall
loopne
pop
fisubs
inc
xor
sahf
outsb
dec
stos
sahf
adc
nop
out
jmp
imul
shlb
push
jmp
aas
add
mov
xchg
cmp
inc
dec
xchg
out
and
fsubl
pop
jbe
adc
pop
sbb
out
sti
jne
out
mov
imul
mov
es
insb
into
dec
shr
loopne
das
jecxz
into
jg
push
push
jne
cwtl
push
pop
repz
int3
mov
cmpsl
es
mov
sbb
xchg
sbb
sbb
jecxz
fcoms
jo
push
hlt
mov
mov
test
lea
push
cmp
sub
inc
add
popa
cmp
adc
aaa
mov
idivl
hlt
aam
push
add
out
xor
push
je
test
push
jno
xor
ljmp
das
and
orl
or
add
push
test
sbb
jne
xlat
mov
cmpsl
inc
dec
ljmp
popa
cs
add
popa
sarb
mov
xchg
shrb
xorl
push
dec
lret
cli
dec
test
mov
sbb
mov
andl
shlb
mov
pop
shlb
ja
push
rcll
nop
pop
sarl
jbe
push
mov
jl
test
leave
cli
rclb
xor
xchg
into
mov
cmp
mov
lret
xor
dec
imul
inc
push
mov
inc
sub
ffree
pusha
sub
push
xor
push
mov
popf
scas
int
or
pop
sub
push
cli
lcall
in
mov
mov
cmp
call
jle
lahf
pushw
xchg
and
int3
mov
into
pop
adc
and
insl
mov
iret
push
neg
call
or
in
sbb
out
xchg
inc
in
decb
gs
sbb
ret
dec
mov
negb
xor
jge
scas
mov
lahf
ds
outsl
bound
movsb
cmc
mov
mov
lea
popa
shlb
adc
cli
sbb
das
xor
add
push
out
push
and
cmp
dec
cwtl
jns
das
cmpsb
das
adc
sub
shl
inc
ss
mov
mov
jmp
xor
push
mov
fcoml
xchg
mov
inc
pop
xlat
adc
dec
pushf
aas
movsb
jbe
xchg
call
xchg
repz
notb
arpl
mov
add
insl
inc
xchg
clc
js
cmpsb
shl
pop
out
jg
sti
or
cmp
pushl
movl
test
mov
and
pop
aam
ss
mov
fucomip
dec
pop
mov
popa
stos
cmp
out
bts
xchg
dec
mov
dec
fstpt
pop
aas
add
mov
imul
cmp
mov
cli
in
cmp
daa
jo
xchg
cmpsl
and
repnz
mov
push
rcrl
or
mov
loop
stos
loopne
insl
dec
clc
nop
fidivrs
cmp
jg
fists
es
push
lret
dec
xchg
pop
scas
fs
inc
or
jne
les
aam
stos
or
or
push
dec
pop
stos
mov
mov
or
mov
mov
outsb
pop
add
pop
jmp
mov
fbld
in
fbstp
imul
subb
ficoml
fdivr
mov
arpl
mov
std
add
cmp
mull
mov
inc
sub
mov
adc
push
data16
xchg
xchg
mov
outsl
xor
jbe
dec
bound
mov
insl
lcall
dec
pop
mov
lea
sub
or
insb
fbstp
sbb
das
imul
lcall
fwait
ja
push
pop
mov
es
sbb
lcall
bound
push
inc
mov
cmp
stos
lock
stos
popf
imulb
repz
sub
dec
das
rcr
fdivr
push
arpl
push
repnz
sub
wbinvd
sub
dec
int3
ret
neg
cmp
loopne
subb
loope
push
rcr
sbb
jbe
sub
inc
fstl
add
lret
mov
inc
xchg
fdivs
and
dec
cmpl
insb
push
xchg
add
jge
lahf
dec
test
ret
mov
push
call
mov
mov
vpmaxub
add
adc
pop
out
aam
fdivs
mov
in
jl
cmp
les
je
in
pop
xor
or
das
jmp
xor
adc
jbe
pop
into
adc
sbb
icebp
xchg
inc
pop
xor
push
adc
adc
xchg
cmpsl
aam
mov
xlat
mov
into
sbb
sbb
cli
arpl
cmp
test
push
divb
jbe
jge
incb
push
cmpsl
cmpsl
adc
addb
psraw
mov
add
xchg
mov
test
mov
jmp
ljmp
push
cld
stos
xchg
out
leave
out
jp
or
test
frstor
xchg
mov
push
mov
jae
in
mov
xor
les
iretw
ljmp
xchg
cmp
les
mov
mov
in
sbb
fcoml
clc
arpl
iret
dec
mov
xchg
fcompl
mov
xor
mov
pop
and
pop
push
sbb
je
dec
push
adc
lret
and
push
xchg
ror
dec
out
jge
dec
jae
inc
popa
sub
dec
cmc
mov
adc
ss
lahf
mov
js
sbb
xor
inc
dec
xchg
arpl
or
xor
add
outsb
mov
jnp
add
aas
js
aam
pusha
xlat
jo
into
cli
movsb
inc
push
mov
daa
clc
rcrb
testl
cltd
std
cld
lret
dec
scas
jbe
ret
sbb
and
pop
icebp
jb
mov
push
js
pop
adc
jp
js
cld
mov
sub
loopne
inc
pop
js
push
mov
add
pusha
fists
mov
mov
lret
stos
sbbb
jno
fldt
and
js
fldl
dec
sahf
mov
sub
mov
mov
add
call
popa
sbb
mov
sub
adc
jg
mov
push
repnz
or
mov
inc
out
fs
and
sbb
inc
in
mov
int
sub
repz
ja
gs
add
xchg
xor
mov
sub
jae
xor
sub
inc
push
popa
std
mov
xor
fwait
bound
loopne
imul
dec
push
ss
aam
stc
mov
call
xchg
in
inc
dec
xor
sub
dec
mov
push
out
imul
out
insb
ficomps
mov
pop
je
sub
sbb
ficoml
test
stos
inc
mov
add
add
jb
movsb
imul
xchg
out
cli
lret
sub
adc
pop
ds
js
xor
pop
mov
clc
loope
or
fsubrs
xor
sti
in
insb
ss
scas
into
pop
add
lcall
in
jns
pop
mov
cmp
loop
fs
icebp
aas
mov
sub
fnstcw
into
mov
and
xchg
mov
in
mov
and
test
jns
push
stos
pop
or
scas
mov
lods
mov
test
out
mov
adc
filds
and
cmp
in
aam
mov
idivb
cs
rorl
mov
bound
arpl
lea
mov
jmp
inc
mov
and
popa
mov
lret
jmp
ret
shr
lods
in
jg
fsub
and
mov
ret
imul
stos
lds
xchg
jno
mov
inc
rolb
je
sbb
inc
and
adc
xlat
dec
enter
notb
adc
dec
movsl
inc
mov
xchg
sbb
mov
or
imul
mov
add
lret
sbb
dec
mov
cltd
inc
div
sub
lea
enter
bound
cmp
mov
sarb
inc
and
mov
aas
add
sub
idivl
std
out
test
pushf
addr16
filds
mov
fld
insl
pop
or
mov
lcall
inc
adc
sub
sub
push
cwtl
inc
bound
cmpl
pop
mov
fidivrs
ds
dec
cmpsb
mov
xchg
jp
or
andl
sbb
dec
loop
rorb
in
adc
ljmp
mov
mov
xchg
ljmp
mov
mov
mov
mov
sub
and
gs
leave
pop
addb
cmp
in
enter
ja
jmp
mov
add
mov
inc
cmp
sbb
mov
dec
jle
jl
push
pushf
mov
jecxz
movsl
imul
in
rcrb
fisubrl
dec
xchg
jno
push
xor
test
and
pushf
out
ror
lret
cmpsb
mov
xor
popl
ret
cmpsb
mov
sbb
adc
push
test
pushf
out
adc
push
scas
lret
cmc
dec
pop
movsl
jp
in
lods
fdivr
fidivl
ret
cmp
xor
jo
mov
loopne
ret
or
in
add
add
mov
orl
cmpsb
lods
cmp
leave
fadd
outsb
dec
sub
leave
insl
cmpsl
daa
inc
or
mov
int3
cmp
add
test
lcall
inc
inc
fistps
mov
popf
leave
inc
pop
movsl
mov
xor
mov
aam
stos
icebp
mov
sub
cmp
popf
insb
xchg
imul
pop
in
ss
addb
cmp
push
fistpl
aaa
sahf
ss
ret
lahf
rcl
loop
mov
push
leave
ffree
fsubp
pusha
loope
loopne
sub
ret
jne
xchg
adc
sub
insb
jne
mov
dec
jnp
sarl
mov
lock
cltd
or
lock
lret
adc
jbe
xchg
pop
inc
and
das
sahf
inc
push
jmp
sbb
cli
int
sub
dec
jmp
rcrb
pop
mov
enter
push
addr16
inc
out
insl
mov
daa
jp
addr16
les
pop
push
mov
loopne
xchg
loopne
popa
mov
push
in
and
testb
pop
js
mov
pop
idivl
sub
mov
cmp
pop
push
mov
cli
nop
imul
leave
cld
test
jnp
pop
test
loope
sub
dec
pop
jecxz
je
sbb
arpl
iret
and
dec
mov
add
xor
xor
jp
movb
popf
cmp
into
or
jne
push
inc
pop
sahf
mov
sbb
adc
add
mov
inc
js
mov
lods
add
push
insb
inc
shrb
xchg
test
fwait
outsl
xlat
jg
jae
mov
aad
adc
repz
xchg
ds
sti
push
lea
push
popa
movsl
xor
inc
push
dec
push
repz
cld
lods
ss
push
dec
cmp
or
repz
int
xor
repz
stc
or
adc
xchg
stc
mov
pop
xchg
daa
imul
mov
insb
mov
sbb
and
mov
iret
xor
pop
sub
les
bound
ret
dec
into
xchg
or
adc
jmp
outsl
cwtl
add
movsb
imul
cmp
inc
aad
adc
ret
imul
mov
nop
push
xchg
fldt
inc
mov
test
pop
cli
jno
mov
add
aaa
call
jecxz
adc
outsb
sbb
push
push
or
sbb
pop
stos
adc
pusha
stos
js
mov
push
lcall
push
movsb
aas
push
les
insb
sub
lcall
into
add
les
jmp
jo
lea
test
push
fistpl
pop
sti
fsubrs
mov
adc
mov
pop
jns
xchg
sbb
shll
xchg
imul
mov
xchg
jnp
or
dec
std
inc
nopl
xchg
stos
push
pushf
push
ss
lock
inc
aas
push
and
int3
fidivs
in
xchg
sbb
inc
cmc
mov
mov
push
int
cltd
push
sahf
xchg
jl
adc
xor
out
sub
pusha
mov
stc
and
daa
int
xchg
dec
pusha
push
imul
mov
aam
mov
insb
pop
clc
push
inc
xor
pop
test
repz
lret
pop
pop
mov
gs
pop
cli
xor
or
int3
daa
inc
iret
imull
add
xchg
lret
outsb
mov
mov
or
dec
mov
push
call
xlat
sub
or
add
cld
sarl
xchg
mov
scas
sbb
les
dec
into
insl
or
jo
aad
sub
repnz
es
shl
jbe
inc
or
scas
cwtl
dec
imul
popa
cwtl
mov
and
jmp
mov
mov
pop
cmp
mov
mov
dec
nop
pop
popa
mov
cmp
rclb
push
and
pusha
icebp
adc
mov
cli
mul
daa
or
sub
in
and
lds
push
cmpsl
pop
fsts
mov
incb
inc
dec
mov
fs
xor
jae
xchg
fildl
icebp
iret
stos
ja
mov
dec
mov
nop
int3
fisttps
sub
sti
fmull
out
push
shl
mov
xor
pop
ja
fsubr
movhps
ljmp
push
cld
add
ja
xor
jno
call
and
inc
xchg
aam
lcall
or
jge
cmp
push
pop
in
gs
fisubs
inc
pop
xchg
in
dec
adc
inc
cmpsl
add
adc
mov
adc
mov
mov
ret
push
and
js
int
or
test
test
cmp
ret
rcll
mov
stos
xchg
mov
ret
test
push
movzbl
test
xchg
orl
mov
int
into
jo
in
mov
mov
sub
shrl
push
sbb
adc
addr16
adc
ret
les
bnd
je
ss
jmp
popa
sbb
dec
das
cltd
lcall
push
popf
fsts
in
dec
dec
cmp
scas
dec
inc
sub
call
idivb
or
stos
jecxz
adc
lea
adc
ljmp
adc
xor
andb
jno
cmc
pop
rcr
js
jecxz
je
js
js
lret
add
sahf
aaa
rcr
dec
insb
orl
clc
mov
push
addr16
loopne
in
dec
rol
lea
jnp
dec
outsl
pop
stc
cmp
sbb
and
rclb
add
sub
inc
lcall
and
outsl
xchg
popa
mov
sbb
add
pop
or
movsl
inc
cmpsl
dec
gs
sbb
and
mov
push
jne
or
sti
push
aam
and
jge
fiadds
push
cmc
clc
aaa
inc
mov
subb
and
aaa
adc
cld
xchg
loop
or
into
jmp
jb,pn
and
fwait
jmp
stos
or
repnz
ret
sbb
aaa
loopne
sub
cmp
lea
sub
or
int
ja
in
loop
push
sub
aas
cmpsl
or
jle
cmp
push
inc
inc
subl
cmpsb
dec
pop
test
sub
dec
or
lods
lcall
inc
xor
pusha
sbb
fcomps
outsb
inc
mov
pop
roll
addr16
lret
mov
jb
leave
cs
ljmp
loope
es
mov
push
sub
xor
push
cmp
dec
pop
push
inc
cmp
mov
movsb
inc
cwtl
inc
mov
push
push
cltd
out
jmp
xchg
imulb
int
sahf
add
test
je
pusha
ds
and
sbb
jg
ss
aad
in
clc
xchg
loope
scas
sub
stos
popf
scas
adc
mul
aam
push
inc
std
subb
stc
mov
popf
sti
test
test
sbb
xchg
andb
push
mov
fidivs
fs
test
mov
shrl
jp
inc
in
rcll
test
mov
xchg
incb
sub
loopne
xchg
push
js
dec
push
sbb
mov
mov
pop
pop
sbb
rorl
out
cmp
mov
call
test
dec
mov
pop
adc
ss
test
popa
pop
xor
test
xor
xchg
lret
sub
mov
les
pushf
scas
mov
sub
in
addr16
cmpsl
in
xor
xor
cmp
inc
aas
mov
cli
ret
into
cli
mov
adc
cmp
xor
into
xor
inc
sbbb
daa
daa
loopne
popa
xchg
enter
hlt
addr16
push
jno
hlt
pop
mov
mov
mov
repz
pop
ds
add
into
out
jmp
mov
mov
dec
outsb
repz
jmp
out
pop
inc
popa
adc
jo
fmull
xor
mov
adc
fldenv
test
inc
sub
fmul
adc
lock
xor
mov
repz
sbb
push
out
enter
mov
add
adc
stc
popf
cmp
mov
loopne
sbb
outsl
movsb
loop
mov
or
mov
clc
cwtl
and
addr16
jl
lock
cmp
sbb
dec
or
cwtl
cmp
std
jp
add
inc
test
outsl
sbb
mov
and
aas
jo
shlb
inc
pop
movsb
sbb
jmp
fidivl
xor
mov
gs
add
movsb
outsl
jle
es
mov
les
cli
shll
ret
sub
jo
test
fs
and
mov
add
jg
sbb
sub
xchg
jns
mov
movsb
push
fidivl
jle
loop
or
lock
sbb
stos
jl
cld
adc
push
rol
ret
fildll
lods
xchg
adc
lods
das
cltd
inc
orb
xor
lret
sahf
aas
dec
enter
imul
cmp
movsb
jne
push
imul
inc
mov
xor
cld
xchg
adc
out
jg
inc
lret
loope
je
mov
sub
push
adc
pause
inc
and
std
cli
cmp
jecxz
mov
xor
mov
jg
cmp
in
les
add
pusha
inc
xchg
insl
xchg
xchg
dec
jl
inc
cwtl
inc
push
aad
fsubr
rcl
jnp
int
inc
adc
xchg
fists
xchg
movsb
in
loope
andl
and
cwtl
bound
out
mov
leave
mov
rcl
sbb
mov
sbb
ljmp
and
sbb
jecxz
sub
mov
js
or
sbb
xor
xchg
xor
and
dec
out
cmpb
in
push
es
xor
popf
add
or
xor
push
dec
mov
xchg
add
in
mov
xor
pop
mov
adc
out
lea
and
outsb
dec
int
jle
inc
inc
stc
mov
loop
lahf
out
scas
push
loope
dec
scas
jns
sbb
lock
fdivl
fdivr
clc
movsb
push
test
frstor
xchg
out
push
adc
xchg
pop
or
loopne
in
enter
pop
in
or
mov
sub
sbb
pop
sahf
cmc
inc
adc
test
xchg
mov
cmc
hlt
xchg
or
inc
inc
mov
dec
and
out
jbe
push
dec
icebp
inc
dec
jne
inc
mov
adc
mov
sarb
lcall
insb
mov
cld
or
out
fs
push
adc
pop
loop
lahf
adc
inc
xchg
add
jl
and
pop
cli
icebp
add
or
in
mov
push
add
test
mov
mov
int3
cli
cmp
sar
xlat
xchg
addb
aam
mov
outsl
cmp
jo
sbb
dec
jl
repz
sub
out
loop
sub
or
ds
pop
insl
dec
jo
add
adc
cmpsl
stc
sbbl
xlat
ja
bnd
gs
ret
cld
loopne
into
pop
jecxz
daa
sub
pop
dec
adc
xchg
cli
push
outsl
jge
add
mov
push
push
test
inc
mov
loopne
jecxz
mov
mov
cmp
dec
jbe
lret
loopne
in
jp
shrl
dec
ja
cld
rcr
and
inc
popf
mov
cmp
out
lea
xchg
jle
cmp
rcrb
push
js
push
add
pop
xchg
jecxz
ret
or
xchg
mov
in
mov
pusha
pusha
addr16
cltd
push
js
lods
out
in
inc
movsb
xor
cltd
test
ja
mov
xchg
dec
sbb
ja
shlb
xchg
lea
inc
push
xchg
adc
cmp
or
sbb
lret
or
inc
cmp
adc
inc
add
scas
jae
xor
xchg
lret
es
jmp
sub
out
bound
sar
in
movsb
les
mov
jg
test
in
outsb
fbstp
mov
out
pop
add
sbb
mov
push
adc
out
dec
jbe
loopne
test
inc
jl
pop
or
pop
sub
inc
cli
inc
icebp
and
jne
jl
sub
mov
pop
stos
cmc
into
adc
or
xchg
sub
jae
push
push
pop
test
stc
loope
jne
cld
push
aam
xchg
and
mov
fidivrl
pop
out
insl
push
icebp
push
std
lods
xor
sbb
aas
std
sbbl
cmpsl
ljmp
pop
jl
into
jne
loope
mov
jg
mov
push
or
inc
aam
jg
sbb
add
int
xlat
scas
cs
sub
mov
lods
jne
lcall
xchg
iret
adc
xchg
mov
pop
sbb
sbb
aam
cmp
sbb
pop
jns
cli
int3
out
xchg
int
mov
pop
popf
jnp
stos
add
xchg
sub
mov
lcall
mov
adc
aad
outsl
push
div
cmp
frstor
xor
divl
lret
add
gs
adc
jno
jmp
cmp
loopne
stos
xor
test
push
jecxz
lods
mov
test
jns
sbb
jnp
cmpsl
leave
pop
xchg
ds
fwait
iret
jp
out
mov
cmpsl
loopne
cwtl
scas
or
add
push
imul
inc
lahf
lock
sub
xchg
out
das
pusha
leave
mov
mov
mov
loop
mov
or
stos
aam
out
pcmpeqb
add
shl
ficoml
xchg
pop
mov
mov
sub
push
sub
mov
and
je
das
nop
jmp
xchg
nopl
cwtl
mov
jne
mov
dec
inc
adc
cmp
mov
ret
inc
bnd
mov
lods
sbb
test
int
inc
pop
fucomi
idivb
sub
xor
jp
cwtl
mov
and
mov
sbb
mov
in
push
adc
fmuls
leave
pop
adc
lret
cli
cmp
mov
pop
mov
xchg
mov
pusha
fmul
aaa
stc
lret
cwtl
shl
or
imul
or
mov
adcb
je
xlat
popf
fists
sub
mov
adc
pop
leave
clc
sti
fimull
jecxz
divb
ja
add
flds
scas
dec
xor
cmp
cwtl
repnz
mov
xchg
and
leave
mov
fiaddl
pop
cmp
fs
daa
push
xchg
outsl
imul
stos
flds
adc
mov
mov
inc
pusha
aaa
or
mov
add
sahf
mov
push
mov
pop
pop
adc
add
jnp
mov
jmp
jb
scas
or
inc
sti
in
stc
pop
jecxz
pop
jle
rcr
add
loope
mov
xlat
cltd
insb
or
mov
ret
out
fisubrl
mov
dec
jmp
sub
movsl
mov
mov
mov
cmp
jbe
fcoms
xor
mov
dec
push
call
adc
mov
es
sub
icebp
sbb
mov
mov
sbb
push
test
adc
xlat
jno
mov
in
enter
imul
fwait
jne
addl
fisubs
lds
dec
test
sub
jle
mov
sbbl
imul
push
aas
aad
outsl
jp
ficoml
sub
aaa
inc
das
or
je
jo
jecxz
xor
jbe
add
ja
nop
xor
fldl
int3
inc
add
inc
movl
stc
into
test
or
leave
xchg
xchg
fsts
lods
push
aas
jp
push
fimull
sub
gs
or
xchg
xchg
mov
or
cmp
ret
jle
popf
add
repnz
jmp
daa
lret
inc
fistps
cmp
imul
shr
adc
jns
ds
mov
add
sub
mov
sbb
imul
rcrb
pop
add
vxorps
cmp
imul
lret
jl
int
or
insb
imul
je
sub
jp
mov
dec
pop
sbb
add
fsin
pop
scas
jg
cs
xor
adc
sub
dec
dec
jmp
mov
enter
ds
add
ret
or
rcr
mov
push
mov
mov
jmp
sahf
gs
leave
mov
callw
div
in
cltd
jb
cwtl
shrl
jle
mov
sahf
xchg
mov
dec
int
popa
pop
int
adc
mov
adc
loope
fwait
sub
aaa
shll
or
mov
mov
ficompl
jbe
jno
inc
cltd
inc
mov
daa
loop
scas
sub
cs
pop
sti
inc
pop
xor
lock
mov
test
cmp
ljmp
and
lahf
out
inc
push
icebp
subl
les
inc
mov
stos
shlb
loope
es
fisubrs
xchg
in
movlps
and
imul
pop
push
adc
cmp
adc
xchg
sbb
push
dec
popf
fnstenv
jp
rorl
cmc
push
lret
lret
addr16
sub
test
or
rorl
rorl
pop
xchg
daa
fists
gs
test
push
fcmovnb
dec
xor
push
push
scas
inc
fstl
es
mov
pop
aam
lock
jl
test
mov
pop
mov
fmuls
pop
jbe
js
fimull
sbb
andb
and
call
and
lods
mov
dec
or
leave
rorb
push
dec
popf
pop
mov
mov
jecxz
mov
test
fimuls
js
aad
imul
repz
fcomps
adc
movl
sbb
in
ret
push
je
mov
ret
sbb
pushf
imul
mov
pop
sbb
xor
xchg
jae
int3
test
or
dec
jns
clc
inc
shll
cmpl
push
inc
pop
cmp
sarb
sbb
loope
lahf
out
add
sti
in
addr16
add
popa
imul
mov
sub
mov
mov
or
pop
and
hlt
popa
add
mov
jp
xchg
xchg
or
out
mov
int3
mov
inc
push
not
or
push
adc
pop
ficompl
popf
or
aam
and
ret
std
lcall
outsl
ret
inc
mov
adc
mov
lret
sbb
xchg
mov
add
lea
xor
imul
pusha
fidivl
out
sahf
divl
icebp
andps
sub
imul
sub
lods
push
lods
mov
or
cmpsl
bound
xor
aam
mov
in
out
jp
sbb
xchg
test
mov
mov
sbbb
les
sbb
imul
out
mov
nop
mov
movhps
jns
aas
cltd
sub
mov
addr16
lock
mov
sbb
adc
negl
dec
pop
aam
jge
pop
orb
add
testl
movsb
cmp
subb
fstpl
mov
lret
pusha
ss
clc
jg
aad
mov
jl
sub
ret
jg
les
lret
mov
sub
cwtl
stos
xchg
and
and
mov
dec
mov
sub
pop
sub
mov
xchg
sahf
add
addr16
sbb
add
inc
aad
fsubl
inc
les
sbb
mov
fdivl
loop
xchg
mov
fildll
lcall
lret
nop
fsts
xor
leave
xchg
xchg
in
sub
cltd
jp
jbe
push
repz
idivb
clc
fildll
push
aaa
les
in
int3
dec
into
in
repz
pop
or
push
mov
pop
hlt
aam
and
and
jne
das
mov
cmp
and
jne
sti
into
sub
mov
jle
push
jp
xchg
sbb
cmp
cmp
dec
adc
jne
in
imul
js
or
xchg
cs
jecxz
popa
ret
push
loope
das
pop
ss
adc
fcoml
shll
in
xor
scas
jno
sbb
cmp
pop
test
jne
sarl
xchg
cmc
jmp
test
sbb
mov
in
xchg
test
pop
jb
mov
inc
mov
shlb
and
xorb
arpl
mov
movsb
and
out
lahf
scas
mov
leave
insl
fcompl
hlt
pusha
sahf
stos
dec
cmp
lock
popa
cmp
in
mov
fnstenv
push
sub
cmpsb
daa
add
inc
mov
and
int3
bound
pop
and
inc
adc
lea
int
decb
pop
fadds
xor
xor
mov
push
cltd
mov
sbb
lcall
mov
push
hlt
adc
scas
add
scas
cmp
cmp
push
je
push
enter
mov
pop
or
ret
mov
push
push
mov
dec
inc
mov
popf
add
mov
popa
sub
bound
dec
es
cmpsl
out
add
mov
mov
loope
push
xchg
and
ja
je
movsb
cs
outsl
sahf
and
mov
mov
dec
mov
xchg
out
mov
adc
or
jb
outsb
mov
or
xor
mov
js
adc
ds
mov
mov
pushf
fidivs
sahf
mov
mov
add
lds
jl
jl
test
mov
dec
sub
cmp
mov
adc
lcall
call
fstl
mov
jle
cmp
aad
pop
pop
mov
movsl
xorb
pop
jno
push
loop
lret
dec
push
and
add
xchg
or
call
add
push
rorb
cmp
pop
mov
and
popf
in
arpl
mov
pop
add
jle
rorb
xor
inc
and
shll
or
scas
sbb
lods
jb
out
dec
outsb
mov
xchg
loopne
cmpsb
mov
jl
and
mov
push
inc
and
leave
jb
cmp
mov
fsubrp
sbb
pop
sti
aaa
add
push
cld
xchg
pushf
mov
gs
loop
pop
ret
mov
dec
dec
jl
push
fbld
push
and
frstor
jecxz
and
clc
loopne
sbb
in
pop
or
cmpsb
sbb
lcall
jmp
out
sub
dec
add
dec
jns
push
mov
pop
or
sahf
mov
mov
mov
add
test
fwait
push
frstor
mov
ret
dec
stos
test
push
andl
fbstp
sbb
dec
mov
xor
mov
jae
dec
lds
inc
cltd
out
xlat
xor
pop
sbb
jp
push
mov
dec
out
das
inc
xor
int
insb
ja
popa
push
clc
pop
shll
pop
add
pop
sahf
int3
ds
outsb
stc
adcl
dec
xchg
and
pushf
scas
dec
jo
jmp
scas
push
push
ret
add
pop
sub
stos
je
pushl
and
mov
data16
mov
sbb
push
test
cli
lods
out
push
shll
adc
lods
jmp
and
adc
sldt
mov
adc
add
add
nop
xor
add
push
adc
xor
add
cmp
add
cmc
dec
xchg
movsb
jne
sub
push
clc
daa
mov
xchg
and
sti
pop
fisttpl
xchg
pop
xor
imul
push
push
xor
adc
out
xor
xchg
and
scas
cld
pusha
iret
es
fwait
and
aaa
pop
add
loop,pn
cli
and
xor
xchg
jge
mov
sbb
jne
rcrw
inc
adc
je
into
in
cld
mov
cltd
sbb
jns
xchg
inc
nop
mov
mov
lret
out
and
flds
adc
pusha
xchg
sbb
or
ss
ja
int3
sub
ret
shlb
push
or
aam
mov
push
push
sbbb
inc
in
push
outsl
lods
xor
call
dec
pop
pop
arpl
test
sub
add
shl
test
add
fldt
icebp
lea
add
add
cltd
xchg
imul
jae
sbb
std
leave
dec
popa
mov
inc
xchg
cwtl
cmc
lcall
andb
popf
pop
cld
or
ret
xchg
xor
jno
cmp
pop
cld
rcrl
push
jno
data16
es
and
xor
fucomi
pop
cmp
push
test
hlt
insl
hlt
insl
jl
outsl
fnsave
mov
insl
add
std
push
mov
sbb
nop
test
pop
or
popl
jae
inc
loope
dec
mov
xchg
mov
add
leave
ficompl
hlt
mov
add
jmp
outsb
and
rcl
out
out
adc
adc
mov
pop
fs
adc
ss
add
sbb
movsb
pop
dec
pop
xchg
stos
mov
nop
mov
movsb
xchg
addr16
jbe
pop
cmp
insl
cmp
sub
jb
push
jmp
xor
lock
inc
inc
mov
sub
jmp
push
in
leave
mov
mov
xor
aad
or
int
imul
ljmp
lods
adc
mov
lcall
pusha
pop
inc
push
adc
push
ljmp
adcb
ret
push
cmp
fldt
leave
xchg
adc
mov
jo
xor
bound
fnsave
pop
repnz
movsb
or
or
sub
and
decl
cmpb
stc
add
lock
div
outsl
xor
cmpl
mov
push
sbb
fiadds
mov
xlat
fs
adc
mov
les
inc
add
fldenv
shrb
into
repnz
in
mov
inc
pop
rcr
adc
push
ds
and
pop
xchg
bound
jg
mov
gs
shlb
les
jmp
pop
loopne
les
mov
test
xor
ds
mov
push
jl
popf
icebp
out
sbb
lret
xchg
bswap
add
adc
jecxz
sbbl
sbb
js
nop
inc
loopne
pop
adc
mov
cli
jbe
adc
mov
cltd
sti
aam
jl
daa
inc
or
in
lods
ja
outsb
test
cmp
adc
mov
dec
sahf
xor
jnp
int
xchg
xchg
dec
xchg
inc
cld
sbb
adc
stos
mov
loope
jecxz
lret
pop
pop
mov
push
push
shrb
mov
push
repnz
and
fisubrs
divl
rorb
cmc
clc
xor
inc
sub
cmpb
and
jne
cmp
jg
andb
stos
mov
or
sbb
or
stos
bound
loope
fildll
dec
imul
mov
in
test
fldcw
mov
xchg
xor
decb
inc
mov
xchg
xlat
mov
xor
adc
lret
mov
and
mov
pop
xor
bound
loopne
jl
popf
das
mov
repnz
mov
in
in
mov
arpl
lcall
jp
xchg
int3
or
pop
imul
dec
fs
pusha
push
cmp
xor
adc
mov
mov
out
in
movsb
andl
push
xchg
cwtl
xor
out
push
and
jbe
test
push
jb
xchg
test
sbb
mov
lahf
mov
mov
fs
arpl
mov
xor
or
and
int
or
xor
lods
fdivl
push
jno
shrl
arpl
mov
mov
stos
xchg
call
pop
cld
or
cmp
sub
faddl
repnz
push
sahf
stc
pop
popf
in
aad
jle
pop
push
jmp
pop
in
aaa
fisubrl
xor
add
call
les
sbb
call
pop
insl
dec
pop
int3
xor
jp
sar
xor
and
mov
pushf
dec
mov
jp
xor
jnp
icebp
rcr
dec
dec
cld
lcall
pop
jle
push
xchg
fs
mov
adc
sub
mov
dec
lods
lea
mov
pushf
pop
inc
fldt
imul
xchg
ljmp
ds
mov
movsb
xor
lahf
stos
xchg
sbb
movsl
mov
cli
xchg
bound
mov
hlt
dec
sysenter
xor
cmp
inc
mov
out
push
in
clc
mov
and
or
pop
outsb
pop
stos
or
mov
enter
mov
add
and
xor
scas
pop
inc
xchg
xchg
xchg
cmp
lods
cmp
das
enter
mov
or
test
mov
in
cli
adc
call
ss
add
mov
daa
sub
jle
or
xchg
mov
sub
and
in
mov
shrl
nop
shlb
xor
repnz
jb
jmp
sub
rcrb
cmpl
data16
imul
mov
inc
sub
mov
loopne
repz
mov
pop
xchg
ret
clc
jecxz
out
in
out
jo
mov
daa
push
cmp
inc
inc
movsl
sub
jb
xchg
pusha
jnp
sbb
push
aaa
popa
mov
pusha
pushf
xor
jae
xchg
ja
int
or
cmp
cmp
mov
das
sahf
ficoml
sti
pushf
ds
sahf
xchg
lods
out
jae
imul
cltd
leave
lret
push
call
dec
xor
add
and
mov
daa
notb
dec
adc
vmread
xchg
sbb
and
fwait
or
es
adc
mov
test
ret
cmp
dec
stos
bound
xor
int3
mov
scas
jmp
cli
xchg
sub
cmp
fwait
jecxz
pusha
lods
movsl
push
std
jl
mov
lods
push
outsl
cli
inc
lahf
or
mov
addr16
jbe
repz
sbb
and
or
out
inc
jecxz
cmp
test
or
mov
adc
push
rorl
in
mov
mov
sub
push
xor
stos
fwait
inc
pushf
fimull
mov
hlt
and
fistpl
out
popa
jmp
pushf
and
in
jl
aas
sbb
sarl
and
or
out
cmp
inc
cmp
xor
mov
push
dec
ljmp
rcll
push
sub
inc
aam
and
sbb
fmull
test
aad
fucomi
leave
dec
fistl
mov
pop
out
sbb
iret
shl
jecxz
and
stos
outsb
inc
shlb
aam
data16
xchg
and
push
inc
xchg
sub
orl
jo
sti
inc
movsl
aam
mov
dec
or
inc
jmp
sub
lret
mov
and
mov
cmpsl
jbe
mov
shlb
sub
test
mov
sbb
mov
pop
push
pop
push
fmul
in
mov
dec
test
outsb
dec
in
popa
insb
cltd
sbb
lret
movsl
mov
mov
cs
mov
jno
push
mov
adc
or
div
mov
adc
push
popa
lods
subb
fisubrl
scas
outsl
icebp
mov
pop
lock
pop
loope
cmc
mov
imul
negl
fs
lock
leave
jle
jmp
mov
push
or
adc
jge
icebp
dec
int3
mov
fistpl
jbe
lret
jno
rcll
mov
adc
adc
pop
jne
data16
jmp
pop
jne
stos
clc
adc
aam
cmp
jnp
dec
xor
jo
jo
outsl
push
icebp
sub
imul
or
xchg
sbb
and
outsl
movsl
lahf
dec
divb
mul
mov
test
outsl
mov
pusha
inc
mov
pop
iret
pop
arpl
in
xchg
jb,pn
mov
dec
adc
push
xchg
push
jbe
mov
aad
mov
pop
pusha
test
fstps
in
arpl
pusha
mov
cwtl
xchg
adc
fmull
or
popa
or
xchg
sbb
lock
das
test
inc
or
mov
sub
dec
in
lret
pop
jge
call
push
pop
adc
ja
sbb
aas
add
clc
push
xor
push
scas
mov
and
test
push
pushf
loop
or
xchg
idivl
cli
jl
jp,pn
cmp
sbb
mov
or
mov
and
push
jno
xor
mov
das
and
mov
in
pop
stos
add
push
int3
mov
lock
dec
cmp
cltd
push
out
lret
pop
mov
adc
mov
jnp
and
inc
bound
stos
idiv
int
xchg
push
add
into
xor
movsb
repz
pop
nop
cli
aad
ret
decb
sahf
sub
popa
sbb
mov
or
xchg
mov
enter
mov
popa
xchg
pop
pop
mov
test
andl
sti
shrb
and
mov
dec
sbbl
jb
jmpw
pusha
popa
cmp
stos
jo
pop
popa
inc
inc
imul
cmp
mov
pop
and
leave
out
dec
pop
into
mov
sarb
jp
jge
cmpsl
aad
jo
cmp
jmp
push
out
ljmp
and
mov
push
push
xchg
fisttpl
test
call
add
loopne
fists
jg
scas
rolb
xchg
cmp
jns
je
and
fwait
sub
push
out
imul
movsb
xor
sbb
aam
xor
insl
and
rorl
mov
shlb
jb
call
aaa
pop
xor
cwtl
mov
and
int3
sbb
iret
arpl
or
xchg
sbbl
push
adc
or
outsb
add
xchg
adc
rcll
and
pop
pop
lock
sbb
stos
call
nop
jbe
mov
nop
jnp
adc
push
dec
mov
loopne
faddl
jmp
repnz
lock
sti
lahf
jmp
lcall
and
inc
xchg
push
leave
cmp
jle
push
add
xchg
add
sub
cmc
cltd
les
xchg
lods
pop
pop
stc
icebp
filds
cmpsb
mov
mov
pop
loop
insb
cmc
addb
adc
mov
xchg
imul
adcb
xlat
jne
add
enter
subl
xor
mov
jo
loopne
hlt
popa
incl
sti
pushf
sub
scas
xchg
jecxz
jmp
std
scas
imul
jae
sbb
fwait
push
aaa
mov
inc
jmp
mov
repnz
fdivs
mov
sub
cltd
jo
mov
sbb
in
stos
mov
lods
repz
xor
mov
das
stos
fwait
fs
mov
jnp
add
cmpsb
das
or
testb
in
ds
testl
jns
pop
pop
dec
pop
insb
jae
orb
test
pop
jnp
les
mov
out
stos
jmp
sub
mov
mov
rcll
pop
cltd
mov
enter
test
xchg
in
adc
hlt
mov
repnz
or
lahf
dec
add
in
dec
adc
xchg
scas
fsubrs
add
adc
rorb
test
std
rol
sub
mov
inc
filds
mov
hlt
or
sub
inc
repnz
std
out
adc
sub
cmp
dec
xor
imul
lock
jp
sbbb
repz
jb
data16
es
popa
int
sbb
sbb
sub
lret
push
decb
push
arpl
enter
enter
mov
push
or
push
jecxz
mov
dec
jg
adc
inc
aad
and
xchg
mov
inc
dec
push
test
dec
test
pop
or
les
dec
inc
xor
fwait
lret
add
inc
sub
push
es
inc
jb
lret
sbb
loopne
imul
cs
lds
and
out
jae
aad
int3
outsl
pop
hlt
fsubrs
or
xorl
xchg
jbe
mov
pop
iret
mov
fimuls
xchg
sahf
cmp
or
fucomip
out
mov
mov
std
insb
mov
imul
dec
cli
cmovae
test
sub
shrl
movsb
test
fmuls
sub
fnstcw
sbb
repnz
push
cmp
in
pop
xor
dec
cltd
inc
jge
and
sarl
push
stc
insb
push
outsb
inc
add
in
xor
push
aas
adc
or
or
idivl
dec
cmp
jnp
out
sahf
stc
pop
xor
xchg
lock
mov
negb
stos
aad
mov
xor
sbb
sbb
out
call
test
aas
sub
add
dec
data16
xchg
mov
scas
xchg
in
mov
push
andl
push
jne
pop
loop
adc
sbb
inc
mov
pop
xor
pop
test
add
test
mov
xor
push
cwtl
sbb
xor
xchg
adc
hlt
mov
mov
ret
daa
xorl
lcall
lret
arpl
or
lds
mov
ds
mov
inc
xchg
push
subb
sub
push
dec
sub
cmp
push
xor
cmp
xor
enter
jg
bound
sti
lret
in
mov
sbb
jnp
movsl
add
cmp
lahf
fsubr
insl
addr16
enter
pop
cli
out
cld
scas
movsb
aad
lods
mov
mov
lea
mov
mov
push
mov
add
adc
mov
or
pop
frstor
popw
cmp
out
sbb
out
ljmp
dec
stc
pop
dec
push
sub
lret
adc
imul
fwait
movsl
mov
lret
loope
leave
daa
imul
js
shlb
pop
xchg
outsb
rorl
add
iret
xor
pop
dec
dec
in
cmp
and
rcll
inc
dec
mov
mov
mov
xchg
jne
push
jns
aad
inc
jne
loop
out
movsb
xchg
rolb
mov
xor
sahf
cmp
std
cmp
cmc
mov
lods
ljmp
arpl
and
mov
mov
jl
cmc
xchg
lret
ret
mov
cmp
mov
xor
sub
pop
xchg
dec
mov
or
idivb
lods
sbbb
jmp
xor
xor
aad
cmp
xchg
lcall
jge
xor
testb
cltd
out
pop
pop
inc
sub
inc
popf
sub
ja
adc
fdivl
pop
cmc
fmull
popa
loope
add
pop
sub
jl
mov
or
fsub
jae
jnp
fsubl
cwtl
ret
ret
sub
xor
jg
pop
lods
push
or
in
push
outsb
in
adc
sub
dec
sbb
jmp
and
sahf
insl
lahf
fsubrl
inc
mov
mov
push
mov
add
and
adc
pop
mov
adc
pop
adc
addr16
movsb
idivl
sub
test
inc
pop
and
mov
pop
sub
sub
fcomp
push
push
loop
and
f2xm1
iret
xchg
jne
mov
and
push
push
lds
jbe
sub
and
inc
mov
cli
pushf
andl
ret
fsub
jmp
out
inc
mov
sbb
cmc
bnd
adc
and
mov
xchg
in
inc
fists
pop
push
xor
mov
mov
stc
cmp
push
lea
scas
imul
stc
int3
pop
out
mov
popa
rolb
cmp
jl
ja
outsl
mov
ret
xchg
sub
insl
sub
and
and
sbb
push
fmul
jecxz
pop
andl
call
jns
dec
mov
bound
mov
fadd
xor
fidivs
xor
jno
insl
scas
jns
xchg
cmp
mov
gs
es
fmuls
pop
je
idivb
jbe
mov
and
mov
add
pushf
xchg
out
xchg
data16
popf
or
mov
lret
xchg
fnsave
inc
mov
cld
xor
inc
cli
jo
inc
fldt
dec
sub
je
scas
and
bound
pop
jnp
add
outsb
xchg
mov
divl
mov
pushf
fs
inc
cmp
fimull
push
push
lret
inc
arpl
jno
ljmp
mov
push
rorl
es
and
orb
loopne
popf
mov
xlat
rolb
xlat
or
mov
mov
xchg
subl
xchg
xchg
push
movsl
sub
add
dec
xor
mov
sahf
adc
mov
aad
push
mov
in
out
pop
fistpl
js
xchg
add
repz
or
daa
adc
sub
aad
mov
in
jo
xchg
fistpl
add
mov
and
popf
lret
xor
movsl
add
xchg
shll
push
xchg
mov
adc
push
and
xchg
jne
push
std
sbb
ret
in
or
into
pusha
neg
jbe
in
inc
daa
sub
pusha
ljmp
cmpsl
cmpsb
sahf
inc
mov
aas
push
popf
arpl
jns
and
or
int3
scas
fnstcw
jmp
mov
popa
xchg
bound
mov
push
fcmovu
shll
daa
pop
xchg
cmp
add
jecxz,pt
mov
sahf
sub
jmp
inc
cwtl
mov
mov
mov
bound
jne
and
adc
push
sub
cld
loopne
jp
push
or
push
dec
gs
xchg
lcall
mov
sbb
std
js
aad
pusha
adc
outsb
imull
jo
cmpsl
jle
testb
into
push
popa
mov
outsb
rcrb
push
sbb
test
sub
or
inc
lcall
cmp
daa
inc
or
dec
decl
jne
ret
adc
imul
push
dec
scas
lock
push
xor
push
aaa
mov
stos
sbb
jae
cmp
mov
mov
pop
stos
dec
mov
outsb
out
pop
xor
lds
loop
test
mov
out
call
je
sbb
in
cmp
fistps
and
jae
orl
sbb
mov
hlt
mov
inc
or
push
js
out
clc
mov
push
imul
mov
mov
dec
dec
in
cmpsb
mov
cli
test
lods
inc
push
sbbb
ret
mov
adc
lret
dec
outsl
push
aas
popf
mov
fistps
rorl
dec
pop
sub
mov
cltd
andb
dec
pop
add
push
lock
push
sbb
xchg
stos
movsl
dec
dec
inc
movsl
scas
cli
mov
mov
xchg
pop
mov
mov
jmp
js
inc
or
popa
cmp
pop
push
in
loope
sbb
pop
mov
testb
lcall
xchg
sbb
inc
and
js
nop
pop
push
xor
repz
addl
pop
jl
lcall
lock
jmp
dec
lods
pop
cmp
jecxz
into
les
daa
mov
mov
and
push
and
push
imul
div
repnz
filds
std
push
xchg
cwtl
jmp
pop
mov
scas
pop
mov
ret
repz
adc
iret
imul
inc
repz
divl
gs
outsb
movl
mov
cs
or
dec
lock
pop
lock
test
call
jmp
lods
xchg
test
leave
cwtl
cltd
xor
mov
pop
sbb
push
sub
xor
adc
xlat
xchg
int
xor
mov
movsl
lds
inc
mov
pop
ss
and
push
jne
dec
test
or
lahf
inc
dec
test
and
or
mov
sbb
fwait
hlt
fwait
or
xchg
pop
andl
adc
out
pop
xchg
jns
hlt
mov
enter
or
cmc
jle
push
fimull
lods
fs
aaa
xchg
inc
aad
int3
das
fcoml
jge
lret
in
xchg
sub
test
popa
xchg
adc
jne
iret
adc
mov
notb
dec
fstps
enter
pusha
movsl
flds
mov
push
adc
div
jbe
icebp
mov
rorl
mov
jp
jge
pop
mov
push
shlb
mov
mov
fwait
sub
in
in
cmp
cmp
jbe
insl
push
dec
fistpl
jmp
add
cmp
cmc
xor
dec
or
sahf
jae
inc
mov
cs
pop
arpl
ljmp
lcall
cs
mov
gs
pop
inc
jmp
hlt
adc
daa
out
fcompl
je
cmp
inc
cmp
mov
pop
xchg
mov
and
call
mov
mov
in
cmp
jbe
addr16
les
xor
jbe
repnz
sub
xchg
icebp
dec
mov
jmp
pop
mov
mov
repnz
jo
lods
pop
arpl
std
sub
fnstcw
dec
mov
imul
jecxz
dec
cmp
sbb
xor
aas
and
rorl
mov
inc
mov
mov
inc
rcl
out
jo
dec
sahf
jmp
aad
push
adc
push
iret
stos
dec
push
mov
pop
inc
scas
loop
inc
in
pop
cmc
sarl
enter
or
xlat
psraw
xlat
pop
add
dec
adc
repz
shlb
data16
out
imul
out
dec
inc
cli
mov
mov
cmp
lock
add
in
aaa
add
dec
add
pop
xor
dec
cs
cs
repnz
inc
fldln2
inc
cltd
idivl
scas
or
in
test
cmpsb
sub
pop
cmp
cltd
lret
dec
jl
gs
add
out
push
iret
mov
sbb
cwtl
xchg
repnz
in
mov
xchg
push
outsb
ret
js
and
mov
xor
nop
popa
mov
lret
mov
add
arpl
cmp
xor
mov
popa
xorb
pop
xor
jg
inc
enter
mov
iret
and
xor
xchg
rol
repz
and
lock
ja
popl
test
testb
stc
in
fstpl
ds
icebp
mov
in
jns
outsb
pop
sbb
and
cltd
les
and
cmp
iret
les
push
cmpb
aaa
xchg
xchg
les
xor
dec
push
xchg
stos
fimuls
sub
mov
shlb
push
rcrl
inc
push
sbbb
jle
cs
lock
lret
test
pushf
jae
adc
push
cmp
mov
add
mov
pop
insb
leave
add
add
push
ret
fidivrl
nop
push
mov
pop
faddl
xor
nop
pop
xchg
mov
jns
jo
and
xor
call
imul
mov
scas
fwait
into
inc
std
cmp
mov
sub
hlt
std
push
push
mov
cmp
jno
cld
xchg
repnz
jo
lds
pop
add
lock
sub
and
pop
jbe
ja
insb
aaa
les
mov
dec
cld
or
add
cld
push
movl
ja
pop
inc
lods
jl
cmc
outsb
and
clc
push
aas
loop
pop
pushf
xchg
push
xchg
movsb
mov
flds
das
mov
pop
pop
xor
add
mov
xchg
sti
repnz
movsl
sub
jne
sbb
lock
jg
xlat
loop
loope
aam
xor
dec
out
jle
adcl
aam
adc
lea
jnp
call
out
inc
sbb
ja
jp
mov
cs
inc
mov
adc
mov
mov
mov
xlat
and
popa
movsb
mul
inc
inc
out
jbe
shlb
mov
popa
cmp
inc
iret
mov
mov
pop
and
xor
push
int
adc
adc
sti
rcrl
mov
mov
or
cmp
je
xor
repnz
xlat
pop
mov
movsl
or
std
and
sub
dec
stos
nop
les
fwait
pop
adc
repz
scas
sub
pop
push
mov
jecxz
or
jge
add
imul
leave
sarl
lret
add
sarl
lahf
sbb
dec
les
cmp
outsl
iret
int
mov
jp
mov
in
shll
cs
mov
imul
jmp
popf
rcll
rol
mov
bound
cmpsl
jl
sbb
pusha
jp
fmull
mov
push
icebp
cmp
les
mov
sub
pushf
and
push
adc
adc
mov
test
incb
jp
push
imul
or
dec
subb
popa
int3
aas
pop
cli
cli
jp
dec
pusha
sbb
movb
add
mov
xchg
jl
rorl
jg
addr16
icebp
ds
sbb
stos
sub
sarb
js
sbb
lcall
lock
imul
outsb
fwait
std
or
jecxz
sbb
mov
lods
loope
inc
cmp
mov
xor
push
dec
inc
or
sub
xchg
mov
jo
shlb
xchg
orl
mov
cmpsl
push
xor
rorl
negb
leave
push
jge
jnp
scas
les
adc
and
or
or
popf
push
inc
clc
mov
jne
pop
xchg
add
aad
dec
loopne
push
mov
xor
mov
iret
pop
popa
push
orb
and
and
mov
mov
dec
imul
dec
sbb
iret
jp
js
cmc
push
dec
jb
mov
cwtl
xchg
movsl
push
dec
jb
scas
scas
loop
dec
jp
mov
xchg
cmpb
lods
call
adc
cmp
loop
dec
push
arpl
pop
cmp
dec
pushf
xchg
lock
jae
inc
out
ficompl
cmp
mov
mov
cld
lds
add
ror
imul
xlat
mov
mov
enter
in
mov
out
ljmp
xchg
sbb
mov
ret
or
sub
insb
addr16
pop
dec
jle
push
xchg
pop
gs
sarb
popa
scas
mov
call
pop
dec
add
sub
arpl
std
jns
jp
adc
cmc
dec
icebp
fdiv
and
dec
xor
adc
ficoml
lahf
mov
int3
mov
mov
sub
xor
mov
jb
clc
js
jecxz
sbb
dec
sbb
push
push
pop
in
pop
orl
cli
adc
cmpsl
xchg
cmp
mov
divl
xchg
das
and
cltd
adc
xchg
ret
push
jne
out
pop
mov
pop
pushf
mov
xchg
aam
adc
xchg
pop
fimull
xchg
shrl
idivb
jmp
adc
cs
pop
addl
and
xchg
jns
sub
rclb
mov
pop
fbld
shlb
sbb
cli
mov
pop
sbb
mov
xchg
add
test
in
jae
mov
aam
add
aam
mov
xchg
out
add
inc
add
sbb
xchg
lret
lods
jl
lock
out
pusha
jl
pusha
pushf
xchg
xor
jno
xor
fbstp
push
fnstsw
jp
mov
xlat
sarb
test
add
mov
dec
xchg
push
sbb
lret
push
pop
mov
popa
pop
mov
jbe
lcall
mov
mov
jecxz
mov
outsb
jo
mov
mov
enter
aaa
pop
pop
sahf
and
sbb
xchg
add
jo
xchg
fstl
fldenv
int
stc
fstpl
or
xchg
push
push
add
xchg
cmp
ret
sub
ffreep
pop
push
inc
jle
inc
lea
hlt
jne
loope
mov
mov
push
jae
dec
and
xor
sbbb
dec
xchg
shll
outsl
icebp
xor
push
repnz
and
adc
loope
mov
loope
out
mov
cmp
jmp
int3
in
sub
ja
cmp
rorb
xor
outsl
pop
fxch
lcall
dec
jecxz
and
roll
cwtl
lret
popa
in
ror
out
add
pop
cli
and
mov
in
orl
sub
jbe
push
into
leave
push
add
add
mov
cmpsl
dec
or
lcall
pop
movsb
out
or
pop
inc
orb
outsl
cli
push
insl
xlat
das
scas
clc
ss
dec
es
pop
or
pop
ret
test
push
jmp
sbb
in
aam
jle
inc
mov
pop
push
daa
sarb
inc
les
je
jne
dec
cmp
ja
in
loopne
jg
out
mull
mov
repz
dec
fldcw
dec
pop
push
jl
adc
mov
mov
jp
sub
cmpsb
push
loop,pn
es
xchg
mov
fnstcw
jnp
xorl
repz
fs
js
lea
in
push
lret
pop
push
jmp
lahf
push
mov
mov
mov
stos
subb
not
push
push
cmp
xchg
xchg
mov
lea
push
push
mov
add
dec
xor
repz
mov
xor
ss
pop
jns
cmc
das
je
scas
lock
enter
push
and
adc
cmpsl
scas
mov
sub
mov
mov
pop
mov
mov
and
mov
mov
mov
or
test
push
std
pushw
add
xchg
inc
mov
inc
xchg
js
push
xchg
jno
movsl
push
out
ljmp
iret
pop
push
vpsubb
notl
pop
or
add
adc
in
pop
cld
add
adc
mov
cmp
stos
and
or
adc
mov
cwtl
mov
sbb
pop
xchg
pop
ja
push
int
int
xchg
lea
ja
insl
mov
jae
repnz
push
repz
fildl
jo
arpl
push
pushf
cmp
push
imul
cmp
mov
jl
mov
xor
adc
test
jg
cmpsb
dec
mov
jp
push
or
pushf
movb
pusha
sbb
icebp
sbb
jmp
inc
push
add
and
cmp
push
int3
lds
into
roll
pop
es
cmp
mov
in
pop
mov
jmp
cli
out
adc
loopne
pop
mov
mov
pop
mov
aam
cmp
jmp
jg
or
es
xchg
fisubrs
adc
adc
movsl
add
out
sub
mov
scas
out
inc
or
and
mov
ja
adc
or
inc
dec
cltd
push
out
xchg
cmp
lock
push
dec
or
insb
push
jmp
ret
leave
fmul
or
int
leave
xchg
shrl
int3
pop
dec
push
outsl
and
cmpsl
hlt
aas
pop
xor
jnp
mov
mov
stc
pushf
adc
sub
divb
xlat
mov
adc
addr16
jbe
addr16
notl
mov
lret
push
fcmove
aam
fimuls
push
stc
and
test
jne
cmpsb
or
lea
loop
dec
pop
dec
bswap
fsubrs
data16
outsb
call
and
fidivrl
sbb
push
ja
enter
out
filds
sbb
dec
push
test
divl
cmp
mov
adc
testb
popf
imul
adc
mov
mov
dec
xchg
push
push
daa
rcrb
in
cmc
mov
sub
test
push
add
in
sub
ficomps
test
insl
dec
add
xchg
popa
cwtl
inc
sarl
out
aam
outsl
fst
xchg
push
pop
push
push
sub
sub
dec
mov
in
lret
outsl
push
in
ds
sbb
iret
cmp
shr
pop
stos
mov
adc
inc
in
xor
aaa
cmp
fisubs
push
jne
xchg
in
imul
loope
aam
jae
andl
leave
out
xchg
bound
sbb
dec
call
xchg
ret
inc
mov
add
sub
sub
movsl
loop
sub
cmp
cli
jg
cmp
mov
fdivrl
pushf
sbb
inc
pop
sbb
push
lret
ror
shll
jecxz
adc
jmp
push
xchg
push
xor
jg
insl
into
add
dec
sahf
sbbl
mov
mov
jmp
or
scas
faddl
into
add
xchg
mov
jle
sbb
xchg
add
aaa
sti
and
ds
call
jns
push
xchg
loopne
add
push
call
in
ljmp
insl
sbb
cs
jae
insl
les
push
sahf
repz
std
inc
xchg
cmpl
adc
pusha
add
sarl
sbb
pop
push
jnp
adcl
jecxz
push
fidivl
subb
sub
insb
mov
xlat
out
mov
loopne
mov
out
and
out
push
cmp
push
popa
dec
ror
scas
lret
in
int
jl
add
fsubrs
data16
std
imul
pop
cmp
xchg
sub
or
cmp
jbe
in
sti
mov
sub
cmp
adc
cmp
jns
push
fcoml
les
loop
bnd
add
bound
pop
popa
sub
dec
jno
mov
and
lret
mov
or
dec
aas
sub
adc
sbbb
lahf
or
push
test
in
in
enter
mov
push
pop
out
mov
mov
inc
das
sub
scas
sub
xor
jecxz
ja
jbe
fwait
outsb
adc
js
call
pop
rcrb
cmpsl
lock
push
out
push
push
sbb
push
mov
cmp
insl
push
jae
imul
rcr
jg
ds
les
xor
hlt
sbb
push
test
shlb
mov
push
js
adc
or
stos
adc
loop
cld
psraw
mov
pop
xchg
jg
dec
cmp
movsb
inc
push
cli
lods
mov
lcall
addr16
mov
icebp
xchg
iret
sbb
sti
in
cmp
leave
hlt
and
adc
sbb
leave
jbe
xor
sub
xchg
pop
js
sub
loope
pusha
jp
shrb
pusha
mov
sub
icebp
test
pushf
stos
inc
jp
adc
adc
mov
inc
mov
stc
xchg
iret
sub
clc
push
aas
lods
adc
lods
test
lods
mov
push
xchg
xor
cmp
dec
push
dec
ss
js
jmp
ret
fistl
xchg
adc
bound
or
mov
sahf
pushf
aas
jns
sbb
call
daa
and
pop
mov
cwtl
addl
lods
mov
in
mov
cs
xchg
leave
repz
nop
sarb
add
imul
pop
inc
ret
insb
popf
lahf
cmp
push
dec
aam
xchg
out
mov
fucom
call
mov
test
sub
fiadds
cmp
repnz
dec
fistpl
or
aad
mov
in
pop
xor
xchg
rorb
cmp
in
je
test
inc
jl
jg
stc
push
mov
mov
iret
leave
add
and
push
sbb
push
push
lcall
inc
sub
out
aas
jns
ja
int
and
or
pop
out
cmp
mov
and
sbb
push
cmp
fnstcw
fimull
sub
adc
sbb
int3
sbb
mov
jae
aaa
xor
aaa
xchg
repnz
gs
push
imul
leave
stc
nop
cltd
scas
sbb
inc
and
xchg
xor
jecxz
ss
sbb
shrb
in
adc
lods
or
xchg
lds
dec
in
inc
jne
stos
ds
fstl
movsb
lea
std
ret
mov
imul
iret
and
jb
mov
cmpsl
xchg
add
iret
stos
jno
inc
leave
mov
fisubrs
mov
inc
jb
cltd
push
jns
xchg
cmpl
pop
xorl
clc
push
sub
lret
cmp
das
nop
add
and
and
cs
lahf
mov
sub
stos
aad
sub
fimuls
int3
out
xchg
lds
inc
and
mov
insb
movsl
xchg
and
xchg
mov
adc
fdiv
mov
adc
pop
dec
stos
sbb
add
push
xchg
ss
sub
dec
jmp
frstor
jno
loop
adc
and
mov
push
xor
mov
fldcw
mov
push
out
cmp
fstpt
dec
xor
xchg
fs
xchg
mov
test
arpl
lods
mov
mov
xchg
add
sub
out
cmpsl
stos
decl
iret
shll
shll
dec
mov
inc
inc
sbb
je
adc
or
xor
sub
mov
clc
orl
aas
int
insb
xor
jae
cwtl
popf
hlt
dec
test
mov
scas
dec
mov
xchg
addl
bound
push
mov
mov
or
pop
or
mov
sub
mov
in
jg
in
xchg
sbb
addb
mov
mov
lret
inc
jae
sub
addb
cmp
xchg
jns
mov
cli
daa
mov
and
cs
repnz
jne
dec
std
adc
sub
push
sbb
lods
fstps
cltd
aas
add
or
test
inc
or
dec
out
ffree
sbb
les
fldz
xor
fwait
push
pop
mov
bswap
jge
xchg
jecxz
mov
lret
xchg
push
add
lock
outsl
movsb
push
jecxz
inc
sub
and
push
aam
rcrb
fadds
movsl
xlat
cltd
mov
dec
inc
fs
fistl
xlat
pop
mov
lcall
push
lahf
nop
mov
add
pop
sub
mov
sbb
adc
pop
cmpsl
push
cld
fnstsw
push
jo
out
ljmp
int
mov
mov
daa
jge
mov
roll
sbb
int
inc
lea
mov
ja
pop
inc
jp
dec
nop
out
jb
loopne
inc
push
pusha
cmpsb
pop
mov
mov
or
jle
jl
andb
pop
shlb
test
cmpsl
in
test
pop
cwtl
pop
cmc
pop
jnp
jbe
cmp
xor
dec
jge
mov
cltd
xlat
cmpsb
js
arpl
cmpsb
xor
out
add
mov
rorb
scas
xor
jl
stc
xor
lcall
negw
pop
lahf
mov
dec
inc
mov
test
scas
mov
mov
xchg
sbb
sar
or
cmp
test
xor
lahf
mov
dec
rcrl
sub
test
jb
push
ret
in
jns
aaa
push
mov
popa
fadds
popf
loop
leave
mov
push
out
xor
pusha
dec
stos
sub
xchg
push
dec
mov
iret
add
add
adc
and
add
mov
xor
xor
shrb
hlt
push
or
outsl
push
push
stos
lret
jg
push
ss
xchg
mov
sbb
loope
out
mov
les
pop
pop
mov
aas
jl
ljmp
shrb
mov
mov
add
sub
mov
das
or
aam
cld
add
out
hlt
test
add
and
push
mov
pop
mov
test
mov
or
dec
xchg
loopne
imul
add
fmul
xchg
mov
mov
repnz
inc
push
add
fisubs
sub
jle
out
sub
jge
push
iret
mov
int3
in
lds
cmp
add
adc
gs
jo
pop
or
mov
and
cmp
cmp
sbb
stc
xchg
adc
pop
cltd
sbb
test
lea
xor
push
and
pop
popa
shrl
dec
push
jae
mov
test
in
cltd
pop
push
pop
movsb
mov
fstpl
cs
into
test
xlat
sub
outsl
mull
mov
sub
cld
shr
jp
or
dec
in
pop
aaa
scas
push
fnsave
jl
das
fidivrs
xor
pop
andl
push
rolb
iret
in
lods
out
xchg
data16
fxch
cmpsl
cli
rcrb
pusha
lahf
sbbb
xor
int
mov
sbb
and
bound
test
mov
jmp
pop
mov
xorb
fcmovnb
mov
fsts
fistpll
repnz
sub
add
or
xchg
dec
and
and
cwtl
mov
test
stos
push
cs
cmp
adcb
sti
in
mov
int3
sub
aad
sahf
das
xor
insl
push
es
or
das
pop
inc
pop
loope
push
adc
dec
xor
dec
rcl
lods
mov
rorl
stos
dec
hlt
cmc
fiaddl
or
mov
arpl
insl
out
popa
test
out
out
insb
sbb
cltd
sub
pop
test
mov
fwait
mov
idivb
arpl
cmpl
cmpsb
cmp
sub
imul
sahf
jne
inc
mov
xor
imul
push
pop
outsl
mov
mov
shl
mov
and
addr16
xlat
clc
and
add
and
aas
sti
out
sub
push
inc
imul
nop
cltd
cmp
push
sub
stos
inc
addr16
sbb
shll
imul
std
aad
aam
xchg
mov
mov
mov
push
adc
shrl
rclb
adc
xchg
jg
adc
imul
jecxz
sub
test
ret
jecxz
xlat
inc
bound
rcl
pop
push
pop
jecxz
daa
dec
dec
push
xchg
je
bound
mov
mov
ja
inc
loopne
loope
ljmp
test
sub
aad
cmp
stos
out
inc
outsl
or
shlb
add
jge
lods
xchg
jne
sub
mov
sbb
movsb
hlt
add
xor
push
dec
xor
ja
daa
pop
and
add
insb
jp
xor
inc
add
test
outsb
pushf
cmp
mov
fdivr
dec
bound
mov
mov
xchg
les
mov
clc
inc
inc
pop
dec
pop
mov
jg
cltd
jbe
inc
or
and
iret
notb
repz
sub
and
movsl
out
mov
dec
cmpsb
cld
ret
push
rcrl
aaa
lods
cmp
movsl
jno
xchg
fdivrl
xchg
push
push
loopne
xchg
add
pop
sbb
push
push
pusha
jecxz
leave
xor
sub
pushf
sub
mov
clc
mov
arpl
lea
femms
lahf
cltd
push
inc
add
inc
xor
shlb
push
ret
fists
sbb
iret
mov
jbe
out
jge
sbb
and
sbb
stos
mov
iret
jno
out
pop
mov
mov
outsb
push
jne
or
fwait
sbb
mov
push
jno
lahf
es
push
jae
sti
adc
scas
cmp
into
int3
pop
lret
xchg
xchg
inc
xor
enter
or
and
mov
sbb
jp
push
push
xor
cmp
jb
movsb
ja
pop
jle
jl
les
push
fadds
cmp
nop
sbb
gs
sbb
adc
lcall
std
jno
and
repnz
push
pop
pop
out
int3
leave
sbb
push
fmuls
dec
pop
sti
mov
aad
cmc
sbb
stos
lds
mov
or
pushf
and
mov
mov
jmp
dec
mov
ja
fidivrl
mov
lea
xor
pop
ljmp
mov
mov
repz
lret
pop
sbb
lret
movsl
adc
fs
sahf
pop
pop
jge
loope
scas
getsec
and
sarl
xor
int3
je
sbb
pop
cli
mov
pop
adc
sub
push
inc
mov
mov
or
pop
sbb
pushf
orl
loope
loop
mov
dec
push
js
xchg
dec
in
pop
clc
jns
jg
shll
inc
dec
sub
adc
mov
hlt
outsb
sbbb
das
inc
mulb
insb
movsb
push
xchg
or
lods
out
pusha
inc
mov
lock
aaa
mov
mov
clc
mov
orl
pop
stc
or
ss
cmp
repz
cmpsl
movsb
mov
out
dec
in
pop
mov
sub
xchg
push
push
adc
sarl
fcoms
mov
lds
rorb
loopne
lods
cmp
and
out
jmp
movsb
mov
xchg
sbb
stos
push
inc
adc
ds
int
and
xchg
icebp
dec
mov
loope
adc
fisttps
jle
pop
je
inc
mov
jl
ljmp
jmp
dec
or
addr16
loopne
ret
push
sub
cmp
xchg
push
mov
ficoms
dec
cmp
push
adc
mov
or
adc
movsl
add
insb
inc
movsb
rorb
and
arpl
pop
dec
dec
push
fs
fs
cmpsl
push
test
push
inc
xor
add
push
jae
cli
xchg
hlt
ret
mov
and
mov
sub
mov
nop
subl
lock
nop
movsb
adc
int3
icebp
inc
data16
adc
xchg
out
cmc
mov
ja
xchg
pop
or
inc
mov
data16
fists
rorl
mov
imul
mov
imul
mov
or
pop
testb
push
pop
push
repz
sarl
test
push
clc
push
dec
cs
pavgb
add
lods
je
ds
mov
mov
inc
xchg
nop
adc
xor
xlat
mov
xor
int
das
adc
dec
cmc
jae
stos
stc
or
sub
add
ss
pop
sub
lcall
xchg
adc
sub
pushf
jb
in
and
std
xlat
jp
pop
popf
cmp
or
mov
lods
sahf
fmul
incl
movsb
in
push
push
mov
cmp
cltd
imul
and
xor
xor
or
rol
out
push
scas
mov
cmp
jno
in
stc
fdiv
orl
cmovbe
push
xor
mov
int3
in
xchg
fdivs
mov
fimuls
pop
scas
ret
lods
push
pop
and
and
fmulp
jmp
ss
cltd
pop
dec
rcrb
lcall
xchg
imul
mov
ja
roll
mov
xor
mov
iret
mov
push
aad
mov
cmc
pop
fs
movsb
inc
fistps
shlb
jp
sbb
dec
aas
pop
nop
xchg
test
fistps
pop
cmp
sub
rcrb
jo
jnp
outsb
jne
rorl
lods
int
lods
sbb
push
lret
movb
mov
sbb
outsl
iret
insb
jle
dec
xchg
mov
xchg
jecxz
add
gs
sbbb
jl
sub
call
jmp
jae
and
lcall
jno
dec
cmc
cmp
std
xor
jl
iret
ud1
movb
adc
jl
jmp
movsl
jge
call
pop
daa
sbb
push
push
mov
imull
test
push
inc
dec
or
insb
mov
out
popf
and
out
mov
add
adc
mov
add
add
aaa
jmp
cmp
push
arpl
cmc
adc
into
cld
stos
push
sbb
js
pop
outsb
ficoml
sti
pop
fdivl
jo
or
lds
lock
push
dec
dec
push
mov
push
insl
shl
add
movsl
sub
dec
cmp
fbld
lcall
dec
pop
aas
fsubl
inc
sub
or
xchg
cmp
lgs
jp
jns
jge
mov
sbb
insl
dec
mov
adc
xchg
ffree
cmp
shl
sbb
movsl
xchg
pop
loop
cld
mov
in
cmp
or
jbe
jg
fsubr
mov
mov
dec
add
push
mov
daa
pop
rorb
push
add
ss
js
rclb
or
jae
cmp
imul
ljmp
je
es
ret
pop
call
int
test
and
jnp
dec
xlat
push
sarb
mov
push
fnstcw
fcmove
shlb
push
or
stos
nop
cmp
movsb
sub
sarb
fs
lcall
rcl
mov
jno
int
or
sub
inc
mov
outsl
ljmp
pop
ss
push
outsl
in
cs
push
push
aas
pop
mov
or
xchg
sbb
cmp
xor
test
inc
lcall
hlt
cmpsb
add
and
dec
pop
into
fistl
fsubrl
lcall
cmp
push
mov
mov
lods
out
mov
in
add
lret
imulb
sub
callw
aad
cmp
sbb
inc
int3
das
aaa
cmp
mov
xchg
lods
dec
aas
xorl
push
les
fistl
or
push
out
mov
rcll
js
xor
mov
inc
sbb
mov
xor
cmp
mov
test
mov
aaa
cli
cltd
adc
pop
popa
push
mov
add
sbb
sbb
lock
lods
xchg
jo
fldenv
jge
adc
sub
ss
out
lods
push
sbb
incb
push
inc
hlt
and
adc
mov
sbb
out
pop
cmc
mov
lret
jnp
mov
fmul
test
sahf
jae
and
loop
mov
pop
out
xlat
mov
mov
sahf
cmpsb
sbb
into
into
leave
and
cli
ljmp
dec
jo
insl
xchg
cli
sarb
call
jmp
test
mov
dec
out
enter
cmpsl
dec
movsb
mov
adc
jle
in
enter
lcall
push
add
inc
insl
sti
adc
pusha
lods
addb
popf
sbbl
pop
inc
ljmp
mov
daa
test
gs
stos
adc
cmp
or
leave
sbb
ss
rorl
aas
loopne
sbb
cmp
xlat
fwait
push
cmp
push
add
xchg
xor
mov
lock
sbb
or
loopne
mov
fnsave
inc
mov
mov
cmc
push
or
cmpsb
call
pop
jb
jnp
sahf
jnp
pop
xor
stc
stos
ds
and
shrl
mov
jbe
jmp
imul
mov
pop
add
or
inc
dec
mov
mov
cltd
outsl
cmc
loop
out
popf
rep
push
movsb
push
fidivrl
xchg
into
inc
repnz
pushf
cmp
inc
xor
or
fwait
jns
jmp
add
jae
sbb
push
cmp
pop
fwait
data16
mov
xlat
lds
add
cmp
ja
push
fistpl
lods
lock
cmpsb
pop
sub
cmp
shll
mov
sti
repz
es
cmp
js
mov
lret
lock
std
xor
int3
and
dec
jns
push
insb
inc
dec
sub
js
xor
lcall
inc
cmpsb
dec
andl
lahf
cmp
in
inc
jecxz
shrb
xor
jge
sbb
cwtl
inc
pop
pop
mov
insb
nop
push
scas
hlt
inc
in
pop
jno
dec
xlat
mov
pop
bound
loope
mov
arpl
lds
sarl
mov
jae
iret
xchg
lods
jbe,pt
mov
and
nop
insl
in
sbb
mov
std
lret
jp
mov
xchg
or
mov
mov
jns
adc
sub
jge
adc
inc
insb
fisttpll
add
add
or
sub
jecxz
ret
lret
adc
xor
sbb
arpl
outsb
mov
xchg
lods
dec
fcoml
stc
pushf
pop
arpl
es
sub
push
incl
xchg
push
mov
and
loope
fucomi
sub
sbb
sbb
push
sub
aaa
cld
jnp
into
pop
shll
iret
rcrb
mov
xor
loop
in
in
in
mov
lret
nop
iret
repnz
fdivs
cmp
aam
movsl
adc
stos
in
js
ljmp
testb
mov
push
sub
adc
or
movsb
andb
ljmp
imul
pop
xchg
sbb
cmpb
pop
enter
jge
pop
test
mov
js
test
sbbb
daa
sbb
pop
jbe
adcb
repnz
dec
pop
in
push
pop
mov
push
icebp
push
pop
fwait
and
dec
imulb
inc
test
sub
jbe
mov
sbb
mov
std
out
fldcw
xor
aam
jns
mov
mov
in
js
repz
les
jnp
aaa
ds
int3
mov
dec
and
push
aad
pop
es
popf
dec
ljmp
mov
add
push
sub
cmp
push
push
ret
xor
inc
shlb
push
in
fstps
adcb
mov
mov
pop
cwtl
in
mov
sahf
and
mov
ret
dec
push
push
leave
xchg
push
fidivs
cmp
in
inc
xor
jecxz
rclb
xlat
mov
cmp
cmp
jnp
movsl
inc
pusha
or
pop
and
aam
cwtl
mov
add
imul
or
daa
test
jo
jb
push
das
jmp
ror
movsb
pop
fcompl
xchg
jle
jo,pn
adc
mov
inc
in
push
mov
mov
stos
gs
fistl
mov
mov
xchg
call
jnp
stos
ja
aad
insb
cltd
adc
jmp
test
in
ret
xor
aaa
lods
push
jno
cmc
mov
pushf
jo
xor
xchg
daa
aaa
mov
cmp
push
gs
sahf
push
mov
inc
stc
xchg
jle
insb
leave
jge
xor
popf
push
sbb
adc
jns
ret
push
mov
or
ljmp
int3
clc
in
xlat
test
hlt
inc
pop
lods
aaa
jge
xchg
push
jae
xchg
imul
mov
mov
ds
adc
inc
xor
xchg
outsb
push
lahf
pop
push
mov
dec
mov
iret
mov
push
and
pop
push
call
mov
xor
dec
and
daa
cld
xchg
mov
int3
pop
push
ret
loopne
test
call
or
xchg
pop
jl
pop
and
mov
dec
cmp
xchg
icebp
sbb
add
jge
test
xor
sub
out
or
loop
jcxz
inc
fists
ds
dec
pop
lods
push
js
cmp
inc
hlt
dec
bound
dec
inc
loope
aam
into
filds
testl
jmp
scas
sub
mov
gs
scas
sbb
lds
mov
je
mov
mov
lret
and
test
ja
rol
mov
ja
mov
sbb
inc
bnd
out
jne
jbe
push
jo
jp
jnp
lea
cmp
or
ret
out
les
mov
rorb
or
ret
jae
cli
sahf
jp
pop
sub
xorb
or
cmp
nop
xchg
iret
push
insl
and
xchg
gs
popl
stos
lret
pop
dec
jl
mov
mov
lret
pop
outsl
cld
adc
sub
cmp
movsb
pop
mov
cwtl
fs
xor
enter
push
rcl
fisttpll
push
js
mov
insl
mov
test
in
sbbb
inc
leave
mov
adc
leave
lcall
sbbb
push
xor
xchg
jne
adc
stos
mov
inc
inc
ljmp
add
adc
in
call
nop
push
inc
sub
ljmp
xor
enter
mov
cmp
call
sub
ret
jl
xor
arpl
xchg
insb
jg
mov
dec
imul
dec
add
jbe
rcr
es
mov
rorl
or
xchg
aaa
sub
push
jp
sar
push
or
sar
sub
push
sti
mov
adc
sbb
je
cmpb
std
adc
mov
movsb
ret
loope
xor
rcrb
dec
movsl
mov
xchg
movsl
rolb
pop
inc
jae
lods
sub
dec
rcrl
push
in
mov
mov
mov
and
fs
scas
cli
mov
negb
or
pslld
lods
mov
jb
ljmp
add
xchg
jle
mov
pop
pop
mov
pop
and
add
cmp
inc
lea
xor
sbb
data16
fcmovb
inc
test
std
and
mov
test
mov
sahf
stos
jecxz
pop
push
int
aad
hlt
mov
sub
nop
shlb
mov
mov
xlat
enter
or
or
stc
mov
adc
xor
inc
jb
pop
imul
outsl
pop
sbb
xchg
jae
pop
lock
xor
rol
insl
fstp
mov
cmpsl
out
lret
lods
and
push
cld
sub
aad
xor
lods
dec
mov
cmp
mov
dec
scas
adc
fwait
dec
mov
xor
insb
push
iret
filds
popf
movsb
repz
ds
filds
int3
or
stc
stos
sbb
push
sub
in
in
xor
sbb
mov
testb
in
test
in
sub
pop
xchg
aaa
mov
dec
push
fidivrs
in
arpl
dec
les
fwait
std
push
test
fldcw
xor
ficoml
stc
sub
cmp
push
fbld
imull
cltd
out
xchg
jnp
jg
push
aad
push
inc
xor
push
shrl
xor
mov
add
xchg
mov
cmpsl
ret
push
push
pop
mov
movsl
pushf
add
pop
sbb
test
cltd
cmp
jle
loop
xor
cmpsb
je
fldcw
mov
rorl
nop
mov
mov
mov
pop
mov
jmp
sbb
adc
xlat
out
push
mov
fisubs
jo
push
test
or
xchg
fsub
or
mov
jne
sub
lea
push
push
mov
cltd
pop
cld
lret
push
and
lret
imul
cmp
mov
shlb
rcl
push
int3
jmp
popa
fcomip
call
or
cmp
orb
jmp
mov
pop
inc
lahf
jl
imul
in
insb
aas
stos
xor
jl
lahf
imul
and
mov
dec
ret
adc
push
add
mov
cmp
sub
addl
data16
orps
cmc
mov
repnz
add
pop
cld
and
out
or
fs
popf
and
clc
jle
jge
cmp
fdivrs
cmpsl
lds
pop
les
in
loop
lret
mov
xlat
sbb
and
lock
push
mov
fs
daa
jae
jns
dec
dec
aas
sahf
ficompl
mov
js
jbe
pop
ret
mov
and
pop
inc
in
sub
push
int3
push
pop
cmpsl
jne
addr16
int3
les
in
xlat
lcall
jns
mov
ret
andb
jecxz
lret
and
inc
inc
mov
out
ds
inc
adc
fstpl
dec
sub
aaa
mov
cmc
mov
sub
cmp
sahf
inc
iret
popf
push
push
xchg
hlt
fnstcw
and
imul
lahf
jae
out
out
dec
pop
inc
sbb
cmove
jecxz
cs
fnsave
xor
jmp
nop
pop
push
rol
pop
aad
cli
cltd
into
mov
xchg
jnp
mov
ss
fildl
xor
mov
sub
xor
test
pop
pop
mov
cmp
pushf
adc
mov
testb
add
jl
sahf
hlt
fisubrl
jmp
adc
das
push
push
addr16
or
sbbb
lock
andb
dec
in
movsl
jb
jg
lock
lahf
sub
out
cmpsl
inc
fistpll
sarb
sbb
lret
mov
mov
xor
aaa
add
fwait
xlat
sub
fsubs
jmp
std
sub
mov
insl
inc
sbb
daa
pop
push
add
adc
jp
rcrl
jecxz
imul
jmp
adc
jge
leave
insl
mov
jg
add
xchg
pop
sub
mov
mov
shll
mov
scas
mov
orb
or
adc
icebp
mov
jl
das
mov
pusha
inc
stos
xor
aaa
shll
xchg
jne
sarb
sahf
push
lock
repnz
int
mov
add
in
ljmp
dec
push
std
subb
jbe
mov
js
add
or
out
xor
jbe
push
jl
repz
xrelease
dec
in
flds
mov
decl
mov
movsb
or
mov
daa
mov
push
jle
cmp
mov
or
ss
clc
loopne
mov
push
inc
jne
cld
inc
iret
ds
push
pop
enter
sbb
add
fisttps
out
ret
adc
xor
cltd
dec
ja
xchg
inc
add
add
or
xchg
sub
rep
cld
test
mov
arpl
adc
jno
xchg
ljmp
loopne
out
enter
mov
stc
xchg
pop
sub
into
inc
test
icebp
sub
int
out
dec
xchg
aas
mov
cwtl
jmp
dec
in
sbb
push
ret
push
push
xor
fisubrl
dec
je
mov
test
inc
dec
xchg
lret
pop
and
ret
les
sahf
aam
mov
icebp
jnp
mov
rcrb
pop
lea
arpl
jge
fsubl
int3
ljmp
or
das
jl
loop
int3
push
sub
xchg
adc
mov
in
std
add
je
cmp
shl
fnstenv
mov
ficoms
xchg
gs
pop
ljmp
mov
loope
lahf
jbe
outsl
xchg
fnstcw
add
outsb
ja
cmp
mov
pop
int3
iret
xor
mov
xchg
iret
mov
lret
js
dec
inc
jo
movsb
fsubrl
xor
mov
data16
daa
lock
lods
dec
adc
das
subl
sub
jo
mov
or
es
add
cld
sbb
sbb
lds
jnp
hlt
and
int3
rcrl
add
shr
mov
mov
pop
sub
lret
imul
gs
push
push
xchg
sbb
mov
dec
cmp
xor
lahf
loope
and
cli
xchg
pusha
sbb
fstl
push
loopne
xchg
cwtl
mov
mov
faddp
ds
pop
xor
insb
inc
mov
cltd
cmp
mov
jg
subl
pop
aaa
lods
sub
mov
push
adc
call
sub
mov
cmpsb
sbb
mov
adc
es
fstl
in
fisubs
add
sub
addr16
arpl
inc
dec
clc
and
divb
aas
mov
out
mov
ds
mov
scas
mov
lods
inc
jle
icebp
cmp
dec
stos
or
cmpl
xor
add
jecxz
jg
out
pop
ret
nop
sbb
push
dec
push
jge
addr16
xor
and
fdivr
pop
roll
sbb
and
imul
dec
pop
and
loope
int
sbb
test
cmp
arpl
cmp
pusha
stos
enter
mov
add
dec
stos
cmp
mov
insb
sbb
ffree
dec
xlat
sub
lods
int3
icebp
out
arpl
sbb
push
mov
jo
test
mov
div
fsubp
sbb
andl
xlat
mov
les
ss
icebp
cmc
add
inc
aam
pusha
jge
jp
or
mov
mov
add
mov
loope
rclb
sbb
lcallw
push
in
mov
fistpl
ret
push
inc
push
aam
dec
call
xchg
inc
pop
dec
cmp
sti
or
andl
jbe
insb
jne
and
lahf
cwtl
loop
push
pop
mov
ja
outsl
js
sub
int
dec
insb
test
sub
sbb
xchg
lock
div
lea
dec
jnp
pop
cli
sub
loope
xchg
inc
sarl
dec
je
fwait
sarb
adc
shll
adc
mov
pop
dec
loopne
outsl
out
cmpsb
movsb
iret
das
test
gs
lret
cltd
mov
cld
push
mov
dec
loope
sarl
jbe
xlat
jbe
xor
daa
fsubs
das
jp
pusha
mov
pop
popa
push
add
mov
pop
mov
aad
stc
scas
xor
vmptrst
mov
arpl
movsl
pushf
sahf
xchg
xor
push
imul
call
and
cmpsb
adc
repnz
movsb
fstpl
out
and
mov
inc
scas
pop
mov
dec
and
cs
fsubrs
xchg
jle
add
mov
cmp
add
sbb
and
bound
sbb
daa
nop
mov
lret
dec
out
stc
dec
nop
outsl
cmpl
test
pop
lds
mov
loop
mov
cmpsb
add
testb
sub
mov
in
cwtl
push
test
mov
xchg
jbe
pop
rclb
push
ja
cmp
jg
push
sbbl
cmp
push
add
push
fdivrl
int
popa
pop
add
cmp
stos
bound
mov
aaa
jp
jp
js
outsb
testl
or
outsb
scas
pop
test
add
daa
mov
dec
je
insl
out
jae
movsl
gs
int3
addl
jge
and
lahf
cmp
mov
sbb
and
push
mov
lods
test
in
sbb
loop
push
pop
cmc
xor
movsl
jecxz
sbb
xchg
pop
repz
adc
mov
pop
xor
pushw
es
aad
dec
mov
repnz
ret
je
lods
repz
or
jle
pop
mov
loop
xchg
xchg
sarb
lea
out
mov
rorl
mov
ret
fisubl
ja
clc
hlt
insb
cld
add
sub
mov
push
int3
mov
and
in
lcall
in
xlat
pop
ds
adc
push
add
sub
adc
enter
in
xchg
pop
mov
push
lret
cltd
mov
scas
xchg
cld
pop
insb
lods
jo
loope
ret
shll
into
xor
imul
data16
mov
cmp
imul
popa
push
mov
xchg
bound
fs
push
out
cli
shl
mov
sbb
jnp
loopne
add
dec
cmp
popf
or
and
and
je
addl
push
mov
and
test
adc
lcall
ss
mov
xchg
push
outsl
enter
or
dec
das
add
inc
les
sbb
out
inc
jo
pusha
stc
mov
jae
or
scas
idivb
ret
dec
push
movsb
pop
das
lds
or
mov
lret
pop
jae
xchg
adc
and
cmc
jg
loopne
jno
inc
sbb
pop
or
in
mov
lcall
lret
repnz
mov
clc
xchg
mov
xchg
repnz
hlt
inc
movsl
daa
out
adc
int3
sbb
lret
repnz
fsubrs
je
inc
add
enter
xchg
push
aas
sub
jb
pop
outsb
fcmovnb
mov
sbb
jns
cmp
stos
cs
repnz
xchg
mov
fwait
iret
incb
mov
scas
outsl
dec
xor
mov
cmpb
jmp
sub
mov
popa
sbb
cmp
pusha
rclb
aas
push
xchg
mov
and
stos
fstpl
fldcw
xchg
cmp
inc
pusha
scas
push
mov
jo
insl
fidivrl
and
loopne
push
in
mov
xchg
cld
in
inc
daa
std
pop
fdivr
fisubrs
fwait
inc
push
cmpl
fisubrs
xlat
lret
popa
mov
stos
in
lds
mov
inc
cs
cltd
cltd
push
mov
sbbl
scas
cmp
cmp
mov
push
pop
rorl
mov
and
cmpsl
scas
lods
sub
and
imul
test
shrb
sub
or
dec
jg
daa
hlt
or
jp
inc
sub
roll
pop
rcrl
push
push
xchg
mov
popf
addr16
or
pop
cwtl
push
xor
test
jecxz
xchg
cmpsl
adc
popf
inc
movsb
test
in
call
or
out
sbb
mov
add
mov
test
idiv
inc
push
mov
scas
dec
ss
pop
and
rorl
ds
sbb
sbbl
jge
je
pushf
ret
imul
inc
out
cli
sti
sbb
movsb
pop
or
xchg
inc
mov
pop
clc
gs
jae
lds
sbb
adc
adc
cld
xchg
push
sub
addb
sub
dec
and
sbb
aam
sbb
xchg
stc
jne
xchg
and
dec
jg
sbbb
sub
mov
scas
ret
add
xor
jbe
js
and
jo
data16
mov
adc
push
sahf
into
bound
push
xchg
push
cmpsb
mov
repz
leave
and
add
sub
pop
addr16
mov
jb
dec
mov
bound
stc
jns
ret
sbb
mov
out
loop
dec
pop
pop
in
add
imul
in
addb
sub
lret
psrlw
mov
xor
ljmp
jae
kmovb
and
jle
aas
inc
fldt
mov
fdivr
mov
lahf
xchg
jnp
adcb
mov
xchg
adc
aam
fstps
sbb
xchg
and
mov
scas
cmc
pop
lret
shll
or
in
out
lods
stos
pop
lret
sub
shll
and
imul
mov
lret
or
sti
inc
dec
push
lods
rorb
or
pop
ja
insl
hlt
scas
push
xor
add
jge
or
and
ljmp
fwait
and
nop
lods
cmp
repz
aad
in
insb
lcall
push
sbb
cmpsl
fisubrs
stos
fldl
inc
insb
cs
and
dec
mov
loop
sub
dec
cmp
aas
xchg
sbbl
test
add
fprem1
bound
xor
adc
jb
movsb
mov
addb
loopne
xchg
push
dec
enter
rorl
scas
arpl
add
mov
xchg
lods
adc
addr16
pop
ret
sbbb
pop
jns
mov
pop
sub
sub
aad
ljmp
or
dec
push
mov
and
icebp
addr16
pop
outsb
sahf
lret
nop
dec
fdivrl
cltd
push
loop
add
or
in
andl
je
fstpt
or
dec
imulb
xor
scas
sub
cmc
pop
sub
mov
adc
ss
push
fwait
imul
push
dec
cld
or
movsb
iret
clc
rorb
lods
adc
into
mov
subl
rcrl
lods
dec
sub
in
sbb
pop
mov
hlt
sbb
add
mov
cmp
xchg
adcl
sahf
cmp
dec
js
popa
and
sti
jp
out
push
push
shrb
pop
sub
or
inc
sbb
popa
insb
scas
fwait
out
jns
cmp
iret
repnz
rclb
jmp
and
xchg
loopne
cmp
loop
imul
sub
push
pop
ja
dec
add
inc
mov
mov
faddl
je
lods
pop
addr16
out
fcmove
decb
cld
outsb
fsubrl
rolb
adc
rclb
xchg
jmp
push
xchg
mov
sbb
xor
xchg
arpl
fwait
mov
enter
ficomps
dec
aam
in
lock
push
cmp
lods
push
mov
inc
jecxz
xor
movsb
pushf
and
movsl
push
aad
or
ja
movsl
push
cmp
movsl
dec
jo
dec
cli
lock
ljmp
push
and
adc
jbe
mov
mov
gs
movsl
bound
xorl
bound
jle
xchg
fsubrs
insl
sbb
xchg
inc
push
divl
in
pop
fwait
adc
gs
xchg
cs
lock
adc
pop
xchg
cmpsb
fldenv
mov
jp
push
ficoml
out
add
fistl
or
mov
mov
and
push
mov
daa
stos
testl
rcr
fstpl
daa
icebp
mov
mov
or
mov
loope
in
hlt
jge
or
in
mov
xchg
push
cli
sub
fldcw
aad
add
push
sub
insl
xchg
out
pop
hlt
or
xchg
stos
cli
xorl
in
leave
cmp
stos
in
inc
scas
outsl
in
lcall
ficoms
scas
jg
decl
sbb
mov
sbb
rol
mov
mov
cmc
stos
xchg
xor
decl
sub
jns
push
in
xor
stos
shrl
pop
sbb
outsl
daa
sub
in
push
es
cltd
addr16
inc
jno
and
or
imul
shll
jecxz
shrb
pop
pop
inc
sub
mov
sub
or
sbb
mov
add
xchg
sub
pop
jge
int3
sbb
push
loop
mov
sub
out
fs
dec
mov
insl
dec
adc
cmc
aaa
mov
outsb
stc
and
sub
out
dec
dec
sbb
stc
out
mov
pop
test
repnz
insb
or
sbb
outsb
add
mov
sub
mov
es
and
ljmp
jcxz
sub
and
daa
mov
sub
pusha
test
or
xor
jo
aas
loopne
sub
xchg
pop
pusha
or
adc
xor
cmp
push
mov
push
push
fisttpll
mov
sti
cmp
fisttpll
gs
lock
inc
xchg
cmc
std
mov
inc
push
dec
jmp
aas
out
push
bound
fs
in
cmp
push
jb
cmp
inc
sub
add
mov
nop
ljmp
cmp
lods
sbb
and
xchg
cmp
mov
out
mov
or
lock
inc
movl
cmp
mov
test
push
sbb
push
stos
add
aam
push
dec
lahf
dec
fs
lret
xchg
jmp
jecxz
aas
scas
and
xlat
cltd
ljmp
mov
in
lods
dec
or
add
xchg
imul
cld
sbb
sti
fldl2t
fistps
sbb
cmpsb
add
mov
out
orl
jecxz
nop
ss
sbb
cmp
pop
inc
push
xor
addr16
jbe
jnp
mov
scas
adc
pop
xchg
lock
and
ficomps
and
xchg
cmp
dec
ljmp
sahf
pop
xchg
mov
fxch
adc
das
mov
shll
fbld
xchg
clc
pop
mov
mov
xchg
into
or
orl
xchg
mov
lahf
mov
clc
push
xadd
mov
aaa
lret
mov
les
push
daa
loop
negl
and
mov
movl
adc
mov
xrelease
fisubl
adc
js
mov
in
mov
jp
ljmp
mov
cmp
es
jg
loope
into
or
add
iret
aaa
jbe
xor
or
mov
and
mov
call
bndldx
sbb
mov
out
enter
adc
movsb
xor
pop
ds
adc
jg
jl
xlat
sbb
or
cltd
int3
int3
adc
mov
hlt
and
aaa
sarb
cmp
jae
jb
mov
cmp
shrb
int
sar
in
dec
sbb
popa
jns
popf
push
or
sbb
sub
sub
lock
int
sub
inc
push
push
mov
mov
lcall
outsb
es
inc
dec
inc
xor
mov
mov
sub
or
or
ret
fsts
in
cmp
sub
mov
inc
dec
cwtl
jp
aaa
insl
ds
jge
int3
es
jnp
gs
lahf
mov
xor
and
sbbb
push
push
inc
jne
dec
mov
inc
jmp
enter
loope
jg
fucom
data16
pop
xchg
stos
loopne
xchg
mov
add
fnstcw
in
fstl
in
xchg
ficompl
or
add
je
lahf
je
mov
jle
add
push
sub
nop
mov
jmp
push
test
and
pop
adc
sub
je
fs
adc
jae
imul
inc
push
dec
fiaddl
fsts
fldl
push
test
mov
rorl
and
jo
ja
jg
insl
push
push
push
mov
push
mov
fbstp
jmp
jno
out
out
jecxz
or
pop
out
inc
int
lret
mov
rorl
jno
popa
inc
outsb
fnstenv
cmp
dec
lods
fwait
xor
insb
inc
cltd
sti
inc
inc
icebp
xchg
push
push
xchg
jb
mov
iret
xchg
and
xorl
jecxz
dec
cmp
dec
adc
jo
inc
enter
stos
sub
loope
popa
imul
sbb
inc
cmpsb
das
push
in
adc
aas
mov
inc
xchg
das
xlat
add
int3
aaa
dec
idivb
mov
pop
xchg
not
fsubrs
push
jbe
lcall
pop
aas
sbb
inc
aam
test
idivb
dec
aas
clc
push
push
mov
xor
mov
mov
mov
or
add
lds
mov
xor
sbb
jecxz
test
jnp
aam
inc
in
sub
sahf
popf
loop
sub
imul
mov
loope
add
inc
inc
xor
enter
inc
clc
inc
lods
addl
pop
xor
or
sbb
leave
out
pop
insb
sahf
mov
aad
test
push
adc
jnp
pop
jae
testb
leave
add
cs
outsl
jnp
lcall
cmp
stos
in
dec
imull
add
push
xor
in
fiadds
jb
pop
cltd
cmp
gs
sub
pop
cmp
fmull
mov
xor
pop
and
mov
mov
jmp
xchg
das
cmp
inc
icebp
dec
pusha
inc
arpl
lahf
lock
testb
push
jp
xchg
rorb
push
in
xchg
and
xor
jno
lods
nop
ret
scas
cwtl
dec
jb
out
shll
sti
dec
push
sbb
push
pusha
lods
lea
push
jge
sarb
cld
sub
and
lahf
jb
icebp
cld
xor
loopne
lcall
imul
xchg
lcallw
push
cmpsl
lea
test
mov
mov
fisubl
test
mov
mov
mov
lock
fcompl
cltd
sub
in
sub
jl
fcoms
in
shlb
pop
rsm
dec
inc
adc
pop
jnp
sbb
adc
aam
test
and
out
ds
stos
dec
push
mov
mov
call
xor
lret
es
aaa
push
scas
loope
add
les
cmc
aas
test
pop
inc
int
cmp
fsts
jae
xchg
xchg
fidivl
shrb
aam
dec
cmp
sarb
dec
push
xchg
push
jbe
in
mov
or
inc
push
sbb
hlt
outsl
dec
dec
aam
sbb
imul
and
fwait
jp
rol
pop
lock
dec
add
push
or
shrl
orb
and
jp
lds
push
push
mov
in
mov
lods
inc
add
xchg
add
push
inc
addr16
jns
sub
pushf
jne
sbb
testb
add
out
in
sub
cld
test
push
push
insl
int
out
iret
add
inc
jp
movsl
mov
std
mov
mov
jg
scas
jns
fistps
gs
sbb
xor
test
std
movsb
push
pop
adc
dec
rorb
adc
inc
aaa
adc
mov
pop
popf
push
cmpsb
cmp
or
xor
ret
pop
call
or
rol
xbegin
mov
sbbl
pop
adc
lds
out
push
popf
imul
or
mov
ss
int3
fimuls
mov
cmp
sbb
and
repnz
gs
es
repz
mov
aas
jecxz
mov
popf
outsl
cli
pop
lods
sub
aas
cmpl
mov
pusha
dec
mov
adc
incl
dec
and
adc
test
dec
jecxz
mov
ja
aam
xor
roll
pop
lahf
cwtl
in
jmp
data16
in
rcrl
imul
in
jle
cwtl
mov
cmp
xchg
dec
mov
sti
pushl
pusha
dec
cmpsl
fisttpl
mov
or
and
xchg
sbb
push
icebp
jl
out
add
push
lods
and
insl
mov
sub
insl
leave
pop
pushf
cmpl
rcrb
imul
mov
fcomp
inc
push
add
lock
add
loopne
test
mov
sub
ficompl
loop
fadd
xchg
hlt
out
repnz
push
mov
push
dec
pop
sbb
popf
mov
into
push
xlat
push
hlt
shrb
movsb
sub
jg
mov
sti
sub
xchg
stos
mov
dec
or
jmp
jae
insl
nop
icebp
sarl
lahf
cmpsl
test
mov
xlat
aaa
dec
or
shl
push
xchg
test
xchg
pop
pop
inc
jl
xor
imul
mov
mov
fsubrs
arpl
imul
mov
mov
xor
jb
xor
loopne
sbb
xchg
aaa
inc
loopne
push
in
popl
add
incl
mov
mov
pop
std
inc
add
lcall
cmp
in
mov
in
testb
cmp
cltd
out
hlt
addr16
lcall
in
inc
loopne
fbstp
jae
test
les
es
sub
sar
lea
or
cmp
ja
dec
push
jne
pop
loope
int
mov
or
in
xchg
mov
cltd
cmp
imul
add
outsb
or
imul
cmc
sbb
jmp
mov
addr16
xlat
cmpsl
iret
pushf
mov
mov
jl
std
mov
les
aad
pop
pop
ja
push
fldl
ljmp
adc
push
in
ss
sub
test
jmp
and
and
insl
mov
fimuls
test
lcall
andb
dec
gs
mov
mov
cli
add
jmp
mov
scas
fcomps
xlat
lds
xchg
xor
jmp
or
mov
rcrl
mov
add
mov
sar
movsl
pop
dec
and
out
repnz
loopne
pop
fildll
cltd
jle
xchg
or
xor
stc
push
xlat
add
or
push
loop
imulb
imul
insb
xor
shrb
out
push
cmp
subb
imul
sbb
mov
sub
jge
mov
movsl
mov
xchg
sarl
nop
movsl
push
jb
mov
mov
push
or
inc
icebp
stc
stos
test
outsl
mov
jb
cmp
dec
in
push
dec
jecxz
cs
insl
pop
xchg
gs
aas
js
das
sahf
popf
iret
sub
daa
cmp
shld
push
inc
das
mov
push
adc
adcl
adc
xor
bound
movsl
outsl
push
ret
adc
popa
cltd
adc
mov
xchg
test
push
sbb
xchg
movsb
sbb
inc
test
adcb
leave
jmp
fisubrs
jnp
pop
xchg
cmc
inc
movsb
pop
pop
lds
mov
sub
aaa
xorb
mov
xchg
sbb
mov
mov
cmp
xchg
inc
xlat
pop
subl
pop
xchg
dec
outsl
mov
dec
mov
stc
xlat
sub
dec
push
xchg
nop
dec
jno
scas
push
movsl
add
mov
gs
das
add
mov
adc
das
les
sbb
cwtl
and
cs
cmc
and
dec
lds
jae
bound
popa
sbb
xchg
dec
and
dec
div
push
sbb
in
rcrb
lds
test
int
outsl
outsb
stos
lock
pusha
sub
sub
jne
dec
repz
mov
movsl
push
test
jle
fldl
pusha
lods
mov
mov
and
mov
les
hlt
mov
inc
push
fs
add
adc
pmaxsw
pusha
test
or
fwait
int3
inc
in
sub
sub
addr16
xchg
pop
jge
adc
inc
rorl
push
cmp
mov
jmp
out
mov
jno
sbb
xchg
bnd
nop
test
movsb
jb
sub
push
cmp
iret
dec
dec
inc
aam
and
sti
aad
or
mov
ret
cld
add
int
pop
mov
jecxz
pop
daa
sbb
sbb
sbb
xchg
imul
iret
sbb
gs
cmpsl
sbb
pop
push
enter
and
cwtl
aaa
loopne
sub
inc
popf
out
inc
and
jle
adc
fldl
mov
add
cwtl
je
add
hlt
xor
dec
jae
cmp
loope
dec
rclb
popl
out
rolb
cs
rcll
mov
out
jg
sarb
mov
pop
or
xchg
outsb
sub
mov
cmpsb
pop
sbb
xor
aaa
das
pop
pop
repnz
and
pop
mov
repnz
jo
nop
pop
push
adc
dec
test
adc
cltd
stos
dec
inc
add
or
mov
jno
fadds
icebp
out
shll
push
mov
rcrb
sahf
pop
mov
cmpsl
pop
ja
cmp
or
js
cmc
adc
out
mov
xchg
aas
icebp
lods
movsb
mov
push
dec
scas
ja
cmp
adc
nop
push
push
icebp
mov
fstpl
dec
xor
call
push
test
cmp
dec
cmp
rorb
push
or
or
mov
mov
sub
scas
lock
cmc
test
imul
testb
in
in
add
bound
inc
or
xchg
cmp
xchg
jp
lcall
in
mov
push
add
iret
fcoms
imul
inc
xor
or
gs
sahf
stos
xlat
sub
mov
mov
sub
jb
push
leave
nop
ja
les
pop
in
sbb
dec
xor
inc
cld
dec
adc
inc
push
pop
jl
sub
jge
test
lahf
pushf
mov
stc
add
pushf
enter
mov
cmp
xchg
in
xor
mov
out
aas
push
cmp
enter
or
pop
test
dec
inc
inc
setle
mov
xchg
pop
clc
es
fimull
icebp
repnz
pcmpgtw
fdivr
inc
and
and
xlat
cmp
popf
and
test
lahf
fldenv
sub
cltd
idiv
jb
jbe
jg
jl
or
cmpsl
add
adc
psrlw
pop
insl
fadd
mov
dec
repnz
pop
jnp
inc
lods
sti
mov
imul
jle
lods
inc
pop
xor
mov
xchg
push
sub
add
imull
test
bt
push
ljmp
icebp
jmp
mov
fsts
jbe
inc
inc
in
sahf
test
cs
push
lods
loopne
mov
xlat
imul
mov
ret
push
icebp
test
and
icebp
jmp
dec
ret
jp
imull
push
push
ret
jo
inc
bound
fwait
push
sub
xor
sbb
push
loop
stos
fnstenv
pusha
xorl
lahf
cmpsl
pop
xchg
xchg
dec
mov
loop
add
fldt
add
lret
xchg
pop
sbb
rcrl
dec
je
xchg
out
mov
pop
mov
hlt
sub
pop
xchg
loope
in
lea
pop
lea
inc
stc
clc
sbb
mov
xchg
ljmp
cld
movsl
cld
adc
fnstcw
inc
cmp
or
cmc
sub
xor
testb
jg
jmp
xor
clc
jp
ds
xor
adc
bound
je
outsb
mov
sub
das
mov
or
into
mov
sbb
pushf
pop
jae
mov
and
ret
ret
inc
jp
ds
loopne
mov
scas
or
cltd
lock
fisubs
movb
and
cltd
xchg
lock
addr16
mov
sbb
imul
pop
repnz
shll
mov
and
mov
mov
cld
adc
test
jmp
movsb
jl
addr16
fmull
cld
xchg
adc
mov
or
xchg
xor
stc
jbe
ss
xchg
mov
jno
mov
lret
sub
mov
pop
je
mov
mov
stos
loope
mov
aaa
dec
and
jnp
aam
es
inc
mov
les
dec
xchg
jne
xlat
adc
das
data16
inc
popf
lret
fiaddl
loop
pop
pop
fstpl
test
dec
sbb
mov
dec
shlb
mov
pop
xchg
push
jns
into
pop
push
scas
loop
add
pushf
sahf
pop
xor
lret
jecxz
shrb
inc
cmpsb
jmp
xchg
pop
shl
pop
gs
out
leave
sub
push
jl
mov
xlat
out
ljmp
test
call
je
inc
mov
gs
adc
xchg
dec
jmp
and
ljmp
ja
and
test
add
nop
pusha
jg
repz
dec
push
push
hlt
add
rcl
xor
cmp
repnz
subl
fidivl
repnz
loop
fs
mov
pop
lock
pop
mov
pop
xchg
xor
sbb
xlat
jb
repnz
mov
shrl
jp
lahf
lret
pop
test
or
mov
cwtl
lahf
mov
sbb
push
rorl
and
fwait
in
xchg
push
jmp
sub
sub
inc
ret
mov
push
push
shlb
rcrb
shl
inc
mov
mov
mov
push
cmp
repnz
fldl
repnz
fadds
mov
inc
int3
das
cltd
popf
push
add
aas
xchg
sub
pop
jae
outsl
push
inc
add
or
pop
leave
cmp
inc
mov
lods
mov
jge
mov
jmp
pop
out
subb
adc
in
inc
fwait
xchg
mov
inc
lret
fsubp
add
xor
sub
aas
lds
add
jb
loope
leave
mov
mov
xlat
pop
inc
jns
ja
cmp
pop
pop
mov
sbb
sub
or
and
xchg
cmp
out
sbb
roll
je
pop
pop
push
push
mov
xlat
jp
xor
sub
sbb
je
xor
jae
mov
or
mov
stc
pop
lods
stos
fabs
mov
fmull
out
ja
mov
xor
shlb
xlat
jb
xchg
add
adc
cmc
cld
pusha
jmp
add
jmp
inc
cli
int
data16
cltd
pop
mov
mov
pop
sub
in
je
lcall
jnp
adc
pop
or
cmc
cli
cmp
fists
mov
insl
out
xlat
das
insb
xlat
pop
rep
fcomip
mov
xchg
push
movsb
into
sbb
ret
or
cwtl
scas
dec
or
pushf
loop
pop
jns
js
sub
jl
in
arpl
jnp
xlat
and
pop
subl
xchg
sub
mov
push
shlb
sub
fistl
enter
insl
or
dec
xchg
out
and
shlb
outsl
sub
lret
bound
xchg
sbb
scas
notb
pop
adc
sub
imull
push
js
mov
cmc
inc
xor
push
dec
add
push
dec
pop
cmc
aam
and
mov
mov
or
out
push
movsl
mov
cmp
adc
jle
shl
aad
loopne
or
iret
jns
repz
or
loopne
or
addl
sub
inc
add
lds
bound
in
outsb
jp
jmp
jge
insb
mov
ss
lds
push
jns
popf
mov
adc
ret
push
xchg
sbb
dec
jb
sub
fbstp
lock
mov
ds
mov
popf
scas
xchg
jo
out
gs
bound
cmpsb
pop
dec
roll
xor
sub
mov
orb
rcrl
mov
shl
pushf
mov
pop
ja
das
sbb
cmp
imull
sbb
in
ljmp
mov
testb
xchg
add
and
lahf
mov
xor
mov
jg
test
stos
xchg
std
aas
push
adc
add
insb
scas
mov
imulb
lcall
jbe
aad
rcrb
clc
mov
push
bound
outsb
mov
xchg
mov
imul
xchg
or
xchg
sub
jb
pop
test
jg
push
inc
test
nop
cwtl
ret
adc
movsl
fnstsw
inc
fildll
ljmp
daa
add
cmpsb
sub
inc
pop
sub
test
pop
inc
fisubs
stc
rcrb
imul
mov
jne
pop
jb
movb
jmp
mov
jle
sbb
gs
arpl
not
outsl
orb
lcall
cmp
jmp
loope
adcl
jo
rcll
mov
jl
mov
cmp
incb
push
cmpsl
pop
fs
hlt
cli
loope
repz
inc
mov
sbb
ret
cmp
xor
mov
mov
add
cmpsb
jo
fisttpll
jecxz
push
cmp
and
or
sbb
jo
jno
push
insl
jno
xchg
fbld
stos
cmp
cmc
push
out
add
adc
fmull
xchg
in
xlat
mov
jcxz
xchg
jecxz
ss
notb
dec
lods
sarb
ret
and
cs
jg
xor
adc
jb
add
mov
test
cmpsl
push
push
jmp
loopne
inc
xor
jge
and
xchg
jle
ret
daa
clc
int
out
adc
cmp
cmp
cmp
loop
pop
fwait
popf
aam
sahf
jo
outsl
sub
sbb
int3
sti
pop
add
hlt
sub
cmc
pop
inc
add
cltd
sub
repnz
popf
xchg
or
mov
stc
sbb
sbb
dec
enter
push
sub
mov
ret
add
sub
pop
out
sbb
sbb
mul
inc
xchg
cs
loope
cwtl
lds
cmc
das
shll
lods
mov
jno
aad
fs
inc
and
loope
xor
lahf
jg
loope
sub
or
jmp
ret
clc
int
aaa
mov
lods
adc
mov
jle
pop
fwait
mov
call
lret
inc
outsl
imul
inc
mov
pop
mov
dec
mov
xchg
test
into
or
rorb
inc
pop
out
push
xchg
or
xchg
xor
add
push
out
push
mov
cmp
stos
inc
call
push
pop
mov
into
inc
fwait
lods
pushf
ret
cmp
lret
test
call
pop
jne
data16
inc
pop
cmp
cld
loope
aad
out
icebp
pop
inc
scas
pushf
cmc
leave
cmp
int3
inc
repnz
push
inc
out
les
push
js
and
or
jbe
lods
mov
mov
fdivrl
aad
pop
cld
or
dec
jo
fwait
jg
adc
add
mov
sbbb
movsb
and
mov
cmp
push
outsl
sahf
xor
cwtl
loope
out
icebp
jmp
fucomp
daa
inc
mov
and
or
sbb
sbb
xchg
mov
mov
mov
or
int3
inc
jbe
cmpsl
xchg
clc
popa
sub
adc
add
dec
les
xchg
push
add
inc
test
pop
fwait
lret
fwait
pop
scas
sbb
and
movb
scas
bound
hlt
cmpsl
mov
lret
or
inc
test
fsub
xor
stc
mov
cld
push
movsb
mov
or
xchg
pop
mov
das
les
and
iret
mov
cwtl
cmp
lret
notl
dec
push
jnp
xor
insl
xchg
testl
push
test
out
cltd
sbb
jge
adc
jnp
testl
inc
sub
mov
mov
push
pop
out
scas
mov
pop
out
les
mov
loopne
and
cmp
mov
stc
push
imul
into
cmpsb
rorl
adc
imul
mov
popa
pop
btr
loopne
jae
mov
inc
lcall
pop
mov
aas
mov
and
jmp
dec
or
out
lods
fldcw
lahf
in
dec
jb
mov
push
xor
add
mov
lret
sbb
ja
fnstenv
insl
lds
in
cli
sbb
fs
sbb
add
shll
mov
jle
inc
test
jmp
ljmp
repnz
push
out
gs
cmc
cltd
lret
dec
cld
mov
mov
or
pop
jl
icebp
je
insl
arpl
addr16
xor
sub
cmc
cmp
clc
cs
sbb
jecxz
lret
mov
sbb
into
outsl
loop
inc
in
fstps
cmpsl
mov
xor
mov
lret
lock
pop
xor
outsb
dec
cltd
xlat
mov
push
add
stos
std
scas
ror
push
ja
sub
adc
cs
and
inc
loop
daa
dec
jo
into
pop
outsb
add
add
rol
pop
sbb
inc
lods
push
pop
push
cmp
or
aad
enter
test
xchg
movsl
sbb
test
scas
clc
imul
push
iret
xchg
xchg
repz
add
out
rcl
cmp
shlb
or
int3
sbb
popa
pop
aaa
paddq
lcall
xor
ja
xchg
and
mov
cmpsl
lcall
mov
mov
push
pop
add
inc
scas
xor
or
scas
xchg
and
inc
push
insl
mov
sti
cmpsl
cli
sbb
lret
pop
movsw
push
bound
jo
jp
sub
mov
or
in
insl
cmp
push
inc
and
inc
cltd
jmp
addr16
je
rcr
loope
inc
lsl
mov
jp
ret
adc
adc
xchg
aaa
lahf
inc
push
or
push
psrlw
fwait
movsb
dec
jl
ret
sub
leave
and
repz
pop
inc
push
sbb
clc
cmpsl
fldenv
insl
xlat
scas
cmp
scas
jbe
sbb
jle
jns
addr16
loopne
sub
ss
jo
or
pop
ss
icebp
push
sub
jns
dec
cmc
jns
push
insl
mov
xchg
push
add
mov
pop
or
in
data16
mov
test
push
ret
testb
mov
push
imul
bound
lds
xor
cld
pop
into
push
add
lock
fdivr
xchg
ds
pushf
add
lret
xor
xchg
xchg
inc
filds
ficompl
xchg
mov
add
pop
psadbw
mov
push
ret
jae
faddl
out
in
ss
adc
test
lock
mov
pushf
and
in
scas
inc
in
sbb
mov
mov
xlat
xchg
sahf
adc
imul
daa
sub
jmp
cli
push
inc
mov
lock
loop
push
and
mov
sub
das
movsb
pop
add
mov
in
mov
pop
pushf
aad
std
rcrb
pusha
xchg
sub
repnz
mov
mov
mov
aas
or
jbe
in
or
pop
sub
push
xor
inc
push
pushf
leave
and
cmp
sub
adc
lods
orb
imul
cmc
push
cltd
mov
cmp
sub
xorb
adc
das
sbb
mov
jae
pop
jl
xchg
aad
add
jb
fsubrl
cli
sbb
outsl
xchg
fadd
out
jmp
loop
pop
push
or
movsl
mov
fidivrs
adc
xchg
xchg
cmc
lds
stos
nop
jb
cltd
and
cltd
xchg
insb
mov
imul
jle
xchg
jb
and
mov
stc
shll
nop
xchg
insl
push
cmc
push
test
dec
rcll
xrelease
imull
cld
or
xchg
inc
je
rorl
rcrl
cmpl
jl
xlat
pop
mov
xchg
int
mov
adc
aas
dec
in
into
mov
scas
outsb
mov
popf
popa
sbb
sbb
push
int3
shr
xchg
cmp
jo
cmp
or
notb
lods
cmp
xchg
fnstcw
es
add
fs
push
into
mov
pop
adc
or
in
add
push
movsl
mov
pop
lods
fldl
shll
leave
mov
add
test
hlt
mov
pop
cmpxchg
dec
clc
mov
mov
cmp
cmp
add
ljmp
sahf
inc
in
sub
and
in
and
sub
sbb
lock
pop
fdivp
lret
mov
iret
aas
push
and
add
gs
aas
pop
scas
icebp
mov
sub
ja
pushf
pushf
or
mov
adc
inc
loope
test
cmpsb
cmp
es
cltd
ret
sub
mov
ljmp
add
and
add
adc
cmp
stos
or
es
ds
pop
jnp
jmp
insb
hlt
mov
lret
ror
push
iret
dec
shrb
xor
inc
or
mov
sbbb
xchg
dec
sbb
mov
data16
mov
inc
sub
dec
loop
dec
les
jl
jae
test
adc
fildll
push
aam
out
outsl
mov
lahf
sub
jns
xchg
aam
add
inc
xchg
mov
jg
lret
mov
jp
xlat
dec
fsubl
xchg
repz
jbe
out
inc
rcll
add
lock
push
mov
push
add
push
push
cmp
ret
daa
subb
sub
pop
jle
lods
or
ljmp
cmp
lret
mov
insb
in
push
outsb
xlat
scas
inc
roll
mov
outsb
xorb
sub
pop
push
lret
arpl
lea
cmp
sbb
loope
xchg
pop
mov
ljmp
inc
sub
insl
mov
in
sti
leave
fcoms
xor
aad
or
std
mov
jo
inc
rcrb
xor
gs
inc
lcall
cli
xchg
dec
dec
imul
clc
mov
or
ret
outsb
inc
push
pushf
inc
adc
mov
xchg
pop
push
cmp
mov
gs
jb
fs
movsb
mov
scas
lods
push
hlt
pop
mov
xchg
lret
sbb
adcl
sbb
sub
stc
sbb
iret
jp
leave
in
inc
jp
adc
mov
xor
xchg
or
out
xchg
or
mov
jns
popa
scas
fmul
repz
pop
mov
sbbb
or
frstor
mov
xchg
out
pop
cmpsl
mov
adc
xchg
jl
in
ds
jle
cli
and
jbe
sbb
sahf
hlt
sbb
int3
jns
lods
add
mov
xchg
leave
stos
imul
lds
sub
pop
cmp
imul
pmaddwd
shll
test
xor
das
pop
in
cld
jmp
in
pop
dec
sbb
data16
add
mov
fmulp
scas
dec
sub
sahf
xchg
adc
xlat
pop
cmc
xlat
lods
in
adc
aaa
push
adc
fcoms
fbstp
and
push
jl
jge
mov
pusha
ja
sub
pop
cwtl
push
out
mov
mov
mov
andl
divl
inc
push
inc
jmp
jns
inc
in
shll
cli
pushf
test
pop
or
das
add
or
mov
or
mov
cltd
mov
loop
addr16
jnp
cmp
jle
jl
lret
add
ss
ds
into
rolb
aas
inc
mov
into
and
xor
mov
cmp
lahf
out
adc
xchg
add
push
xor
push
sbbl
lds
fmull
xor
int
mov
jbe
jecxz
lea
mov
inc
adc
adc
imul
repnz
or
cltd
call
sub
cmpsb
insl
inc
fwait
xor
loop
add
ret
pop
int
push
xchg
xchg
mov
lock
pop
test
sbb
jecxz
add
add
adc
add
in
xor
dec
xor
xor
xor
add
pusha
add
adc
add
xchg
cmp
cmp
