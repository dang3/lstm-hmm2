mov
jg
xor
jecxz
push
das
inc
lds
into
push
xchg
mov
mov
dec
into
or
enter
jecxz
xchg
clc
mov
insl
xchg
sbb
adc
decb
lods
fwait
aaa
movsl
mov
and
rcrb
imull
gs
repz
and
loop
jnp
xor
lock
lahf
fnstenv
outsl
cmp
das
aas
jecxz
inc
push
faddl
jmp
shrb
jp
ja
cmp
filds
add
sti
fcomps
mov
mulb
aaa
lahf
or
dec
call
les
adc
or
stos
add
scas
inc
test
lcall
sbb
pop
das
pop
push
dec
push
xor
mov
jae
or
pop
leave
cmp
or
dec
test
mov
adc
jl,pt
xchg
sub
pop
shrb
mov
push
mov
adc
pop
and
add
push
xchg
lahf
test
in
subl
xchg
fstps
rclb
dec
xor
mov
mov
insl
push
orl
iret
out
stc
mov
xchg
sbb
push
add
pop
dec
lods
mov
aas
imul
and
mov
sahf
lret
push
cltd
in
sub
je
pop
mov
dec
inc
mov
xor
fstl
stos
jmp
insb
inc
repnz
or
sbb
cmp
imul
xor
lods
enter
aad
and
sub
mov
sbb
jge
fwait
and
lock
ret
add
outsb
sub
xor
lods
loopne
test
ss
je
xchg
rcrb
and
je
shrl
insb
inc
or
out
sub
xchg
es
ror
aam
mov
xchg
repnz
das
xchg
mov
sub
and
les
jp
outsl
rclb
outsl
lret
add
dec
lahf
call
xchg
dec
dec
loope
jmp
and
negl
jl
mov
ficoms
sar
or
mov
push
pusha
sbb
in
js
inc
jle
lods
mov
orl
dec
ret
jbe
jmp
insb
dec
xchg
xor
aad
xchg
test
loopne
lret
adc
jnp
or
xchg
frstpm(287
adc
pop
mov
mov
pop
scas
stc
movsl
jnp
imul
lret
dec
dec
js
negb
cmc
push
out
clc
mov
out
or
orl
pop
stos
jle
sbb
enter
mov
cld
rcrb
js
pop
cli
add
int3
sub
and
mov
adc
pop
fnstenv
imul
or
xchg
cmpsl
out
sahf
push
aad
xor
lds
leave
and
insb
outsl
ljmp
sbb
filds
jg
stos
je
inc
dec
dec
es
cs
in
jbe
insb
popl
sbb
pop
jae
push
call
dec
jg
andl
loope
pushf
stc
rcrl
loop
subl
mov
push
shl
mov
ss
lods
pop
xchg
jb
adc
adc
fsubrl
dec
lret
xchg
adc
pushf
adc
out
sarb
nop
push
sub
pop
lret
test
pop
adc
xor
popa
lret
sbb
es
mov
stos
nop
popf
in
push
fldenv
jnp
dec
adc
push
enter
xor
rorb
imul
push
daa
cli
jae
mov
mov
xchg
fs
sub
ret
pop
flds
fs
cwtl
and
pop
mov
bound
sahf
pop
mov
call
add
xor
out
adcl
daa
lods
stc
cli
test
cli
adc
jp
inc
push
fs
sub
fdivrl
pop
cmp
fnstenv
fsubrs
dec
cmpsb
clc
mov
mov
or
cmp
loope
ret
loope
or
inc
push
lcall
or
cmp
or
push
sti
mull
dec
cli
jge
in
loop
add
cli
sub
ss
mov
fwait
adc
lcall
loope
sub
xchg
jnp
jbe
adc
mov
jl
cmp
cmpsb
mov
lahf
dec
int3
and
or
stos
push
out
popf
aaa
clc
out
jg
in
cmovns
jmp
ret
dec
sbb
xorl
icebp
pop
in
insl
and
cmpsb
ja
arpl
inc
movsl
pop
cld
fdiv
orb
pop
jb
and
inc
jge
roll
fldt
and
into
inc
fsub
xor
insb
sti
stos
test
lahf
mov
cmpsl
shl
scas
repnz
add
pop
add
popf
jl
add
test
enter
xor
inc
mov
stos
xlat
mov
adc
xlat
jmp
adc
sub
addb
mov
or
imul
mov
addl
lcall
add
xchg
inc
push
arpl
mov
clc
push
mov
test
lea
sbb
xchg
leave
cwtl
dec
addb
mov
sbb
je
int
mov
imul
repz
out
pop
in
sarb
add
cmp
dec
test
test
dec
mov
movsb
scas
shlb
loope
test
pop
jecxz
ret
movnti
in
and
imul
insb
pop
push
fwait
inc
je
test
mov
sub
subb
xchg
jno
mov
imul
add
xor
ja
dec
add
jl
and
mov
add
cltd
adc
push
sub
scas
mov
or
call
sub
ja
arpl
adc
xchg
frstor
add
add
flds
repz
popa
lock
testl
mov
cli
jmp
dec
aas
rcrb
mov
jg
jb
gs
das
cli
ja
dec
cltd
xor
pop
pop
pop
sarb
mov
fchs
sub
push
lock
push
xor
sbb
cltd
cmp
jecxz
lods
jb
enter
addb
stos
ja
ret
jns
xchg
std
mov
xor
lahf
mov
adc
inc
cmp
dec
xchg
and
push
int
push
orb
jo
add
adc
mov
imul
jns
cmp
iret
cwtl
xchg
dec
mov
inc
ljmp
out
loope
loopne
jle
pushf
imul
leave
movb
stos
pusha
bound
js
pop
inc
fs
jmp
shlb
insb
fndisi(8087
pop
dec
mov
cmp
mov
mov
xlat
test
add
cwtl
jp
jmp
or
jo
arpl
sbb
pop
out
cmpsl
xchg
lock
ret
pusha
push
jbe
add
fdivs
int
lret
xor
jecxz
sbb
test
sahf
sbb
push
jbe
shrl
mov
imul
and
inc
push
or
andb
lcall
xor
sbb
xor
push
xchg
divb
fmull
imul
addb
jmp
es
sbb
xchg
aam
inc
mov
fstpt
call
and
movsl
pop
pslld
sbb
pusha
mov
jo
mov
or
addr16
jo
sub
push
cmp
sub
sbb
adc
inc
add
add
aas
out
or
pop
fwait
decb
jae
jb
pop
pop
pop
xchg
lahf
cmpsb
mov
imul
xchg
mov
xchg
adc
jo
cli
ret
inc
inc
testl
xchg
mov
int
jae
jmp
lahf
insl
pop
or
testb
sbb
xchg
bound
dec
subb
pop
call
popf
and
cmpsl
sub
das
mov
loop
rorl
jne
mov
sub
rorb
jmp
lea
test
cmp
testb
cmp
inc
sarb
and
testl
mov
cld
xchg
push
sbb
or
lret
mov
cmc
sbb
adc
jge
inc
inc
mov
cltd
or
and
xor
lods
sub
btr
out
loopne
subl
ret
addr16
xor
out
pop
in
push
clc
inc
mov
lret
sbb
sbb
and
pop
xchg
cmp
cli
lods
test
pop
or
mov
aaa
inc
imul
adc
mov
sbb
push
lcall
ljmp
cmp
in
xchg
xor
mov
xchg
fs
out
adc
leave
dec
sar
pop
cmp
pop
mov
jnp
xor
xchg
push
mov
out
arpl
jecxz
inc
jmp
mov
ret
xchg
nop
fs
stos
sub
in
rcl
ja
jmp
jge
fnstenv
rclb
int3
pop
sub
sbb
sti
mov
add
jecxz
es
or
ja
jmp
hlt
and
mov
and
pop
orb
mov
sbb
inc
push
mov
mov
mov
jge
sbb
aaa
mov
jge
dec
sub
es
js
inc
pop
dec
sahf
js
adc
inc
jne
js
sub
repnz
and
scas
mov
xchg
pop
adc
inc
mov
cmp
in
js
xorl
adc
cmp
push
loope
dec
imul
xchg
or
add
inc
mov
ja
call
repz
inc
cmpsb
repnz
imulb
insb
addl
sti
inc
pop
andb
xchg
mov
jp
jp
or
mov
ror
out
push
shll
sti
rolb
out
std
aaa
push
sub
negb
in
adc
cmpsb
or
xor
dec
xlat
insb
sbb
out
jbe
add
xor
aas
add
dec
ds
push
adc
dec
cmp
inc
cmpsb
xlat
dec
push
movsl
jmp
pusha
jmp
mull
mov
loop
inc
mov
aas
not
or
repz
sbb
and
xor
enter
in
jg
jae
mov
xchg
cmpsl
cli
pop
in
jae
jmp
scas
push
int3
dec
sbb
mov
lea
sbb
sub
icebp
shrb
les
in
aaa
loop
loop
pop
adc
xor
mov
or
push
xor
xchg
sbb
std
int
aad
cmc
loopne
mov
daa
xor
add
scas
fimull
xor
inc
jb
aas
sub
nopl
pop
or
cld
aam
and
imul
and
mov
dec
enter
aaa
cmp
dec
cmpsb
negb
loopne
jno
pusha
ljmp
sub
test
sbb
rcll
push
cld
cmpsb
scas
or
inc
sbb
xor
mov
inc
popa
or
dec
orl
pop
and
stos
fcmovu
mov
test
ljmp
icebp
call
lret
mov
lret
inc
fcom
mov
adcb
sbb
or
sbb
loope
or
dec
pop
hlt
orb
shlb
daa
std
movsb
mov
in
arpl
stos
aas
cmp
loopne
cmpsb
iret
pop
mov
fisttpl
jg
push
push
into
mov
or
cmpsb
pop
je
fistpl
push
mov
xor
dec
and
faddl
dec
fadds
jp
push
mov
les
rcr
es
test
xor
mov
adc
xchg
dec
rolb
inc
pop
stos
add
icebp
jg
arpl
xor
incl
pop
sbb
xor
fadd
sub
shlb
subl
push
adc
pop
xor
xor
stos
adc
insl
or
adc
repz
loop
mov
imul
jo
test
adc
add
mov
das
pop
add
int
mov
sbbl
jne
ljmp
loope
out
dec
xor
pop
mov
jae
fsubs
repz
call
inc
popa
push
xchg
or
into
int3
add
cltd
sbb
and
and
push
jo
mov
jb
push
outsl
jns
xor
movb
out
sub
nop
pop
pushl
iret
pop
mov
out
mov
cvtdq2ps
out
push
cs
push
cmp
pop
in
adc
adc
sbb
clc
out
faddl
adc
lea
xchg
test
mov
in
dec
scas
sahf
lock
add
inc
sub
cld
mov
xor
dec
xchg
das
pop
mov
push
adc
rol
or
mov
sbb
pop
outsl
cmp
xorb
stos
pop
xchg
lock
repz
push
mov
sub
inc
call
inc
inc
call
inc
push
mov
call
mov
inc
mov
add
dec
add
call
movswl
mov
lea
dec
sub
inc
mov
imul
inc
mov
sub
mov
call
add
dec
or
xor
call
inc
inc
call
dec
mov
dec
mov
dec
imul
imul
dec
add
pop
imul
inc
mov
add
mov
pop
imul
movzwl
pop
mov
dec
inc
inc
pop
mov
movswl
add
movsbl
dec
inc
mov
mov
pop
inc
inc
pop
xor
or
mov
dec
inc
call
xor
lea
sub
dec
ret
sub
mov
push
sub
dec
push
mov
mov
push
lea
dec
push
dec
push
inc
lea
mov
inc
sub
push
ret
push
mov
inc
sub
imul
mov
add
dec
push
inc
or
add
call
pop
ret
jmp
mov
mov
sub
dec
movzbl
mov
add
add
mov
lea
and
mov
inc
movzbl
mov
add
xchg
add
inc
imul
inc
xor
and
mov
add
imul
inc
inc
sub
dec
jne
lea
mov
lea
and
pop
movswl
lea
pop
add
dec
pop
sub
movswl
inc
mov
dec
add
dec
inc
add
imul
and
add
ret
push
dec
mov
add
sub
dec
add
inc
mov
push
push
push
push
add
sub
dec
push
sub
sub
add
add
mov
mov
movswl
lea
dec
mov
mov
push
dec
xor
xor
mov
add
push
or
add
push
inc
lea
pushl
lea
call
add
add
mov
mov
movzbl
and
add
mov
dec
pop
ret
lea
mov
lea
inc
inc
dec
cmp
jb
lea
xor
inc
mov
imul
and
mov
add
inc
inc
add
inc
dec
imul
mov
inc
cmp
jb
and
pop
and
mov
dec
and
imul
inc
mov
inc
inc
add
inc
movsbl
inc
xor
inc
inc
xor
mov
mov
inc
inc
test
jbe
and
dec
mov
sub
inc
inc
mov
lea
imul
lea
and
add
and
inc
sub
mov
movzwl
add
movzbl
inc
inc
add
imul
and
or
sub
mov
lea
inc
mov
xor
inc
mov
inc
mov
mov
mov
mov
dec
lea
dec
dec
jne
dec
mov
lea
dec
and
movzbl
lea
inc
sub
add
imul
mov
mov
mov
inc
sub
lea
mov
sub
mov
dec
mov
add
imul
test
jbe
imul
add
inc
mov
movzbl
dec
imul
imul
mov
inc
inc
add
mov
inc
or
inc
mov
mov
dec
mov
sub
lea
and
dec
lea
mov
dec
sub
movzbl
sub
mov
add
sub
inc
and
inc
mov
mov
imul
lea
movzbl
mov
imul
mov
movzbl
jmp
push
mov
dec
add
inc
mov
dec
lea
dec
dec
xor
add
mov
add
lea
inc
add
mov
mov
inc
dec
dec
xor
imul
mov
add
mov
and
add
mov
imul
add
inc
mov
lea
dec
imul
dec
mov
dec
cmp
je
call
call
mov
dec
mov
inc
mov
dec
lea
mov
inc
lea
mov
inc
mov
sub
call
call
movzbl
ret
add
lea
pop
xor
ret
push
and
inc
imul
mov
lea
push
dec
xor
push
dec
push
sub
push
mov
xor
dec
mov
lea
lea
mov
dec
sub
call
inc
push
add
push
lea
pop
dec
dec
mov
sub
sub
mov
and
xor
inc
sub
mov
dec
je
dec
inc
mov
dec
inc
inc
sub
lea
inc
mov
inc
imul
mov
or
dec
lea
dec
repnz
mov
inc
add
sub
jmp
mov
dec
jmp
mov
imul
dec
lea
add
mov
mov
mov
movzwl
xor
lea
mov
dec
dec
pop
pop
ret
push
mov
mov
movzwl
mov
or
mov
mov
add
mov
dec
lea
inc
sub
dec
dec
movzbl
xor
mov
movswl
mov
add
dec
or
mov
or
dec
mov
sub
pop
ret
sub
dec
mov
mov
dec
mov
sub
mov
mov
inc
lea
mov
inc
mov
xor
mov
mov
mov
sub
or
inc
lea
inc
imul
mov
movsbl
dec
cmp
jb
movsbl
push
add
or
push
mov
or
push
inc
inc
xor
add
imul
xor
sub
dec
xor
dec
mov
push
mov
lea
mov
dec
or
xor
or
add
mov
xor
mov
or
imul
movzbl
sub
lea
dec
add
add
lea
mov
add
dec
add
movzbl
dec
sub
inc
imul
imul
mov
or
add
inc
imul
jmp
sub
jle
aas
push
push
xlat
cmpb
loop
lock
addr16
dec
sub
sahf
rorl
in
lea
dec
sbb
mov
in
or
jg
in
push
clc
adc
xchg
xor
and
mov
in
sbb
fidivs
and
add
add
xor
mov
cwtl
stos
lret
aam
dec
in
xchg
call
push
outsl
xchg
cmp
test
sub
jecxz
inc
xchg
mov
pop
nop
or
lret
xor
xor
movb
testl
jle
loop
xchg
sub
xor
stos
arpl
pop
orl
dec
dec
pop
sbb
xor
jmp
mov
jb
pop
imul
leave
xchg
jp
pop
les
lcall
inc
popf
sbb
xchg
test
dec
setp
in
cli
sbb
pop
or
cpuid
xchg
in
int3
pop
sbb
or
cmp
or
xchg
adc
mov
iret
jnp
scas
mov
fcoml
sub
cmp
popf
cmp
mov
push
inc
adc
add
out
jl
outsl
test
fnstsw
mov
pop
cld
pop
push
in
rcrl
stos
sti
cli
sub
movl
cmp
jae
cli
mov
xchg
rclb
pop
test
dec
imul
repz
pop
lods
push
insb
cmp
into
pop
fstpt
mov
rcll
in
pop
inc
popa
pop
lahf
xchg
int3
test
aaa
jb
in
imul
and
push
and
and
inc
jae
push
not
mov
repz
dec
add
fs
xor
lret
xchg
and
jns
int3
pop
int
out
pop
dec
sti
ret
cs
ret
mov
lahf
in
cmc
lock
aam
aad
mov
mov
out
push
pop
adc
cmp
leave
dec
les
shll
das
sub
out
and
adc
pushf
test
mov
add
gs
lds
mov
dec
out
push
mov
cli
lods
mov
out
mov
shll
sub
insb
testb
shlb
pop
emms
dec
mov
ja
jo
inc
das
stos
lcall
jno
and
gs
pop
iret
xor
arpl
mov
xor
mov
mov
fwait
jge
mov
cmp
xlat
sbb
add
and
lods
ret
mov
fstpt
into
pop
scas
push
pushf
xlat
ja
movsb
jb
lret
mov
mov
inc
pop
xchg
adc
test
outsl
inc
xlat
repz
cmp
into
hlt
xlat
cmp
fs
cmp
or
insl
loope
and
in
inc
je
sub
in
sub
mov
add
push
cmpsl
adc
pop
loopne
ja
shr
jecxz
sbb
adc
jbe
dec
test
xchg
xchg
push
fcompl
add
out
test
ret
ret
mov
add
enter
faddl
jns
ret
das
mov
js
daa
mov
xchg
das
mov
movsl
andb
mov
sti
mov
mov
fwait
xor
push
jge
sub
inc
and
jp
cld
das
cmp
jp
jl
loope
cmp
mov
rclb
xlat
xor
fwait
xchg
icebp
dec
cwtl
jg
pop
mov
adc
inc
push
fimuls
testl
inc
mov
addr16
movsl
sarl
mov
movsb
cmp
rsqrtps
iret
enter
and
cmp
mov
adc
mov
lods
sub
stos
jns
cmp
push
sbb
add
jecxz
push
mov
sbb
jecxz
push
push
ljmp
sub
adc
cmp
push
pop
out
lods
cmp
and
lods
daa
outsl
xor
inc
pop
dec
mov
addr16
add
jl
sub
add
push
push
jmp
icebp
xor
pop
cmp
and
xor
inc
xchg
push
add
mov
push
and
cmp
sbb
inc
enter
jbe
pop
or
mov
jo
test
mov
add
inc
mov
movsl
shl
jl
xor
dec
sbb
fs
mov
inc
insl
xchg
out
aas
adc
xor
mov
test
in
inc
dec
mul
mov
jle
xchg
xor
test
pushf
fsubs
xchg
add
mov
ds
dec
fwait
call
es
jbe
popf
shll
xor
inc
jmp
ja
fiadds
mov
xor
or
push
pop
inc
int
mov
dec
xchg
xchg
xchg
ret
jnp
ficoms
in
hlt
mov
and
push
dec
inc
std
adc
mov
divl
int
add
sbbb
sbb
or
test
jmp
outsb
jb
pusha
daa
int
push
lea
cltd
dec
jge
or
bound
daa
xchg
sbb
mov
out
push
lret
adc
pop
cmp
scas
cmc
cmpsl
icebp
adc
rcrb
flds
das
jp
fstl
inc
es
inc
sub
inc
xchg
incl
repz
adc
push
xlat
mov
out
xchg
into
adc
jo
in
int
js
pushf
test
out
xlat
xchg
mov
push
jle
into
mov
xchg
pop
adc
mov
fisttpl
jmp
jmp
js
mov
push
ja
aam
or
loop
xlat
out
cs
jmp
pop
sahf
scas
xor
jl
push
ss
adc
roll
push
mov
insb
test
xchg
sbb
mov
jp
stc
sbb
pop
insl
aam
subb
mov
sub
push
push
jl
es
aad
xchg
int
push
sub
sub
xlat
out
mov
jle
imul
xor
test
out
out
xor
roll
xchg
mov
mov
iret
mov
cld
inc
mov
js
inc
test
mov
in
mov
imul
push
cwtl
icebp
inc
add
jnp
sarb
loopne
or
bswap
bound
ljmp
mov
jae
in
cmp
rolb
cs
jge
jge
cltd
and
clc
repnz
into
mov
xor
outsb
push
ret
sbb
aas
into
fstpl
mov
mov
push
movsb
pop
mov
mov
divl
lret
mov
xchg
push
inc
aad
push
and
cmpsb
pop
roll
dec
nop
adc
mov
jecxz
jnp
out
sub
ret
ficoml
inc
lret
pusha
lods
or
push
sbb
outsb
mov
xor
repnz
cmpsl
push
and
testb
insl
js
push
arpl
out
repnz
mov
mov
into
std
add
sub
dec
cld
test
xlat
cmp
jae
int3
and
jecxz
movsl
push
fwait
and
fistl
test
adc
js
popa
imul
fsubp
pop
dec
ficomps
mov
cmp
and
ss
sub
cs
and
pop
mov
outsl
cmp
xchg
inc
lahf
adc
xchg
inc
les
cwtl
adc
sarb
loop
fmuls
push
mov
cmp
fistps
xor
jo
out
orb
out
inc
scas
and
push
fldcw
mov
jns
sub
movsb
fwait
add
push
mov
in
outsb
mov
dec
pop
lret
inc
addl
sbb
lock
insb
ret
push
sbb
and
cli
jo
movsl
lock
jl
push
mov
fbld
and
push
mov
subl
pop
xchg
cmp
cmp
test
jp
inc
mov
aam
les
push
jge
insl
and
xchg
sbb
push
repz
loop
adc
es
mov
mov
sbb
jno
cmpb
daa
sti
aas
jp
push
mov
and
sub
and
js
cmp
in
ficoms
mov
lahf
jo
cmp
xchg
call
xchg
lock
dec
sub
jp
repz
mov
aad
xor
lret
and
inc
cld
test
rcr
add
imul
sbb
mov
ja
je
fcoml
sub
arpl
stos
sub
pushf
add
aaa
scas
jecxz
mov
xchg
mov
push
dec
inc
jp
jo
rorb
nop
xchg
or
dec
push
ds
pop
push
mov
out
xchg
repz
push
mov
dec
daa
or
dec
dec
or
iret
xchg
add
out
adc
dec
adc
stos
push
inc
sahf
and
out
subl
jo
pop
dec
mov
xlat
pusha
cmp
mov
adc
xchg
sub
push
clc
dec
xor
and
dec
repnz
stc
ljmp
lock
mov
mov
xor
xor
push
stc
push
pop
in
mov
xlat
mov
es
notb
les
push
mov
cmp
xchg
jmp
xor
dec
out
push
add
pop
cltd
sti
fwait
pop
jmp
adc
frstor
cmp
aaa
test
ror
dec
adc
sti
testl
mov
cmp
push
ficoms
lods
push
pop
iret
enter
xchg
and
lds
int
mov
mov
xor
and
out
test
cmc
mov
push
adc
jno
jbe
fstpt
pop
push
outsl
cmp
out
xchg
mov
pop
mov
inc
mov
shrl
xorl
outsb
popa
rolb
les
push
xchg
push
jo
and
fs
in
push
outsb
mov
sbb
mov
jne
cmp
test
pop
enter
jae
sub
pop
adc
jo
stos
test
xchg
or
sbb
repnz
or
adc
stos
jbe
pushl
std
mov
cltd
xor
popa
sub
lcall
shll
jb
js
push
or
mov
mov
push
vprotd
iret
rolb
adc
sbb
xchg
or
insb
outsb
sub
pop
add
dec
inc
fistpll
and
decl
repnz
jns
fsubrl
push
es
jecxz
movl
idiv
mov
les
push
cmp
lahf
and
lea
adc
adc
push
pushf
inc
iret
mov
sti
and
dec
pop
mov
ret
jnp
addl
out
lock
sbb
in
ret
cmpsb
test
iret
mov
maxps
and
cmpsl
lcall
dec
addb
mov
cmpsb
jno
iret
outsb
mov
cmp
push
sub
aaa
test
outsb
jo
push
xchg
push
xor
mov
insl
faddl
in
stos
movsl
gs
mov
xchg
imul
or
jg
out
or
xor
das
scas
test
outsl
xor
mov
nop
lcall
jge
leave
push
push
pop
pop
lds
rorb
push
jg
mov
dec
test
mov
rcl
scas
sub
lea
insb
cmp
xor
mov
popa
pop
push
test
imul
xchg
mov
popf
out
iret
sbb
cmp
cs
xchg
fcmovb
stc
dec
addl
dec
mov
fwait
pop
imul
into
and
push
push
sbb
push
je
mov
or
iret
xor
loopne
mov
xor
mov
shrb
testb
lock
incb
pop
out
jp
xor
fiadds
lods
scas
subb
lcall
sar
in
sub
or
jle
add
sarl
sbb
js
xor
and
xchg
pop
add
jp
data16
mov
fildl
jne
inc
ss
out
mov
xchg
push
ljmp
adc
int
cmp
mov
push
outsb
xor
lods
js
xor
rorl
sub
jae
rolb
loopne
pop
insb
stc
mov
mov
xlat
and
int3
push
xchg
sbb
stos
out
mov
add
dec
scas
pop
cmp
cmpsb
cmpsl
stos
adc
xor
jae
dec
mov
insb
push
xchg
test
icebp
sub
imull
inc
mov
nop
lock
and
arpl
lods
pop
pop
mov
xor
mov
sahf
mov
movsb
lods
xor
decb
xorb
ficomps
aas
add
js
dec
or
jnp
sbb
fldt
mov
lret
addr16
repz
addr16
stos
jp
mov
repz
jno
int
repnz
or
pushl
pop
mov
inc
sahf
loope
loop
mov
imul
aad
lea
jns
pop
pop
ret
lods
lahf
aad
pusha
shr
push
pop
push
mov
xor
fwait
adc
xchg
and
sub
cltd
push
leave
mov
jbe
dec
scas
and
mov
lret
xor
mov
xor
sub
xor
sub
ds
shrb
ret
ja
aam
cld
push
popf
add
adc
fs
subb
arpl
or
in
xor
lret
repnz
mov
mov
sbb
mov
loopne
sahf
adc
jecxz
mov
mov
add
adc
pop
mov
and
add
inc
int3
add
mov
pop
sub
ljmp
orl
pop
insb
dec
not
sbb
sbb
sbb
jns
imul
pop
std
push
jns
test
mov
je
hlt
rol
jge
mov
mov
xchg
jnp
mov
sbb
pop
or
jnp
ljmp
nopl
cmp
lods
jmp
push
xor
shll
adc
mov
mov
mov
mov
cmp
add
pop
pop
inc
jmp
mov
inc
mov
mov
jmp
sub
test
add
cmp
push
shlb
sti
call
or
cmpsl
mov
inc
jae
sti
xchg
push
test
nop
inc
xor
and
sbb
loopne
cld
xor
insb
loope
and
sbb
or
bound
nopl
add
inc
clc
sarb
scas
mov
repz
push
cmp
sahf
push
xor
push
pop
popf
push
ret
in
iret
xor
mov
leave
loop
dec
nop
lock
cli
test
mov
dec
push
lea
add
in
ja
adc
cmp
in
test
pop
rorb
or
aad
inc
jp
dec
shll
adc
jmp
rcrl
sbb
sahf
cmp
mov
inc
adc
mov
out
scas
pushf
dec
push
xor
sti
ret
imul
inc
daa
and
pop
mov
leave
nop
or
aaa
fiaddl
push
push
xchg
lea
or
and
in
jne
rcrl
inc
xchg
fimull
jge
lods
jae
cmp
into
and
cmpsl
xchg
nop
cltd
sub
push
add
cld
jae
xchg
sub
fildll
cmpsl
mov
push
xor
sbb
leave
mov
inc
stos
jge
adc
jae
popf
loopne
pop
lret
sub
adc
pop
inc
fildll
lahf
xchg
lds
or
jmp
shll
leave
push
mov
aam
or
dec
push
mov
outsb
cltd
add
cmp
or
inc
adc
adc
pop
ret
jle
sbb
cmpsl
sti
adc
minps
and
movsl
or
fldenv
pusha
mov
xchg
sbb
divl
push
mov
or
push
pushf
or
push
fdivrs
gs
subb
or
cs
jae
lock
nop
mov
inc
xchg
pop
inc
and
and
xchg
dec
lock
jecxz
or
push
in
xchg
fadd
jnp
imul
pusha
test
fcmove
adc
dec
mov
outsl
sub
sub
jb
popa
xchg
lea
mov
fiadds
dec
push
xchg
das
fdivrl
sub
lahf
mov
jb
xchg
dec
in
and
xor
mov
inc
leavew
sahf
arpl
xor
cltd
jbe
mov
xor
push
ret
ja
cmp
add
call
dec
mov
cwtl
fdivr
stc
add
lock
mov
mov
cmp
cmc
push
sahf
fwait
xor
frstor
adc
fwait
push
pop
mov
movl
stos
xor
sub
mov
add
sti
cld
movl
aam
xor
xor
call
enter
mov
inc
dec
insb
aam
mov
shll
cmp
adc
push
in
lcall
push
addr16
mov
mov
inc
inc
fnstcw
decb
jge
sub
sbb
cmp
xor
xor
addr16
adc
rolb
sub
cwtl
adc
mov
or
pop
cmp
arpl
inc
and
insb
mov
cwtl
mov
push
in
sar
fcom
test
mov
loop
add
mov
pop
idivl
out
dec
aam
js
mov
stos
stos
mov
push
fs
sbb
loope
out
aas
xor
enter
xor
sub
in
pushl
mov
mov
xor
in
pop
popf
cmpsb
mov
lock
dec
cmpsb
inc
bound
out
aam
pushf
inc
mov
ret
adc
popa
js
xor
pop
ret
pushf
push
add
daa
rcll
mov
push
leave
arpl
add
push
sub
mov
add
rolb
and
ret
sbb
cwtl
ds
mov
addb
sbb
inc
into
out
pushl
loopne
shrl
dec
fidivs
gs
dec
mov
test
mov
mov
mov
iret
testl
mov
pusha
or
adc
xchg
adc
inc
jns
fnstcw
loop
shlb
inc
repz
mov
ret
jl
subb
and
sahf
icebp
outsb
xlat
cld
jmp
pop
push
imull
jno
loopne
lret
xlat
scas
fsubs
repz
scas
scas
call
pop
lret
xchg
outsl
lret
xchg
fistpl
clc
dec
addr16
sub
cltd
add
and
dec
cmpl
jbe
and
mov
or
cmp
out
mov
push
test
aaa
mov
dec
pop
push
jns
movsl
xchg
cmp
xor
sbb
adc
push
mov
pop
iret
shll
xor
jbe
in
clc
ds
mov
ljmp
cltd
inc
pop
mov
repz
cmp
div
add
adc
iret
dec
in
es
pop
cltd
or
test
movsb
call
jae
push
ss
push
in
inc
xchg
inc
inc
jg
test
loopne
or
push
mov
sbb
mov
cmp
dec
inc
sub
xor
insl
push
sbb
mov
imul
aam
sbb
testb
xchg
notb
or
aad
adc
ss
pop
xchg
stos
or
cmp
xchg
lock
cli
xor
inc
js
sub
int3
inc
and
into
cwtl
xchg
push
test
mov
or
cmp
aam
out
mov
add
xchg
icebp
push
sub
ror
dec
fdivr
fs
sub
stos
mov
sti
out
lock
push
subl
int3
sbb
push
stos
adc
xor
in
cmp
sub
roll
pop
cmp
mov
xor
addl
lret
sbb
fnstsw
dec
popl
and
and
add
lock
or
cmp
xchg
mov
inc
das
sbb
xchg
mov
and
movsb
jl
push
es
lods
test
repnz
lock
mov
pop
stos
dec
adc
pushf
cmp
loope
adcb
or
or
mulb
jne
mov
dec
jns
movsl
sahf
dec
lret
pushl
jle
xchg
cwtl
in
mov
test
or
mov
dec
sub
adc
cltd
add
push
xor
xorb
dec
inc
sbb
or
cmp
sub
push
imul
out
xchg
push
cmp
stc
jbe
scas
mov
add
add
pop
sbbl
mov
jecxz
push
mov
pushf
lods
lret
aaa
rcr
push
dec
cmp
mov
cmp
stos
cli
js
jle
fldl
xor
test
mov
sti
add
push
mov
or
and
ret
xchg
repz
aad
inc
lret
lahf
mov
mov
rol
xchg
sub
dec
inc
or
nop
jg
adc
push
lea
cmp
insl
xor
xlat
outsl
mov
stc
cmp
ret
filds
pop
mov
sbb
cmpsb
in
mov
sub
int
adc
popf
dec
jne
enter
or
addb
nop
clc
lret
in
sbb
cmp
pop
pop
jnp
jle
dec
push
loop
cmp
push
sub
subl
mov
imul
ret
out
imul
sbb
add
test
fsubl
lock
dec
jge
notb
cmpxchg
ret
lea
loop
xchg
push
xlat
orb
jns
pop
adc
mov
push
or
push
scas
cmpsb
fs
xlat
loopne
xchg
pop
pusha
mov
or
repnz
sub
dec
inc
pop
add
stos
and
sbb
sbb
inc
sahf
xchg
movsb
outsl
pop
in
push
mov
and
inc
data16
fnstsw
lea
lods
or
out
cmpsb
dec
mov
dec
push
nop
add
push
sbb
adc
aaa
out
or
cltd
in
test
and
incl
fidivs
cmp
stc
cmp
or
pushf
popa
in
mov
cmp
insb
fcoms
fldenv
xor
mov
inc
mov
or
jp
popa
mov
push
pop
mov
rorb
in
or
cli
pop
cmpsl
int3
or
lods
hlt
xchg
push
bound
xor
leave
test
jae
cmp
jmp
xor
or
fcmove
xor
enter
call
mov
mov
out
sub
sub
out
pop
mov
add
jmp
jns
rolb
iret
jle
pop
call
push
push
and
xchg
test
sub
cld
lcall
mov
aas
sbb
testl
push
scas
pushf
and
dec
pushf
cwtl
ret
in
inc
subl
mov
imul
add
mov
xchg
add
test
aam
inc
lret
xchg
leave
fcmovbe
adc
int
pop
test
xor
repnz
mov
cld
pop
js
sbb
bound
jge
lods
scas
push
leave
or
push
mov
push
sbb
pusha
pop
stos
adc
inc
repz
jnp
mov
std
push
mov
movsb
fbstp
test
ss
into
inc
bound
test
dec
push
inc
push
push
int
mov
je
sbb
mov
out
mov
aas
pop
add
xorl
test
mov
or
jmp
bound
xchg
lea
adc
sbb
dec
push
std
push
pop
call
cs
outsl
cmp
loop
icebp
jp
insb
lcall
dec
sbb
pop
adc
aam
inc
sub
xchg
jg
sbb
mov
and
mov
xchg
loop
mov
mov
and
pmaxsw
cmpb
push
jb
mov
fdivrs
outsl
add
scas
mov
mov
push
outsb
into
enter
fsubs
insb
pop
test
sub
rcr
into
inc
movsb
jnp
xchg
push
mov
es
and
mov
pop
jl
inc
shlb
fildl
dec
stc
jge
fwait
or
into
shrl
dec
loop
add
mov
hlt
sub
push
outsl
je
dec
sub
pop
pop
sbb
push
pop
or
inc
dec
pop
fimull
outsl
mov
pop
cmp
int3
mov
rol
mov
sbb
iret
jb
xor
ja
stc
aad
inc
jbe
test
push
sahf
insl
sub
popa
roll
ret
in
mov
lods
xchg
std
add
xchg
jae
jmp
xchg
jae
push
lcall
into
imul
out
mov
fdivrs
push
ds
jmp
push
in
loopne
mov
jno
popa
add
jg
lret
ret
movsl
les
bound
push
ja
leave
or
xor
and
inc
rclb
or
repnz
lret
lret
flds
and
aas
insl
push
jo
jno
es
jbe
cwtl
push
mov
jno
inc
push
aam
js
scas
nop
xchg
lock
jle
adc
sbb
ficomps
push
cmp
sbb
inc
push
xchg
sbb
xchg
imul
sarb
push
out
repz
inc
push
scas
jecxz
xchg
js
insl
jns
aas
in
ja
testb
mov
jge
cmp
sub
lret
lret
adc
adc
negl
mov
fistpll
nop
xchg
arpl
adc
jae
xchg
ja
mov
push
jecxz
addr16
pop
xor
movsl
sbb
mov
out
lods
push
faddl
pop
xor
inc
jne
insl
jb
or
mov
adc
faddl
xchg
fnstenv
mov
and
cwtl
cmp
sbb
pop
icebp
leave
fldz
dec
sti
scas
out
ds
jmp
xchg
fildl
loopne
cmc
adc
fisubs
pushf
sbb
adc
sub
or
sub
mov
rcrl
pop
mov
jnp
mov
mov
ljmp
fadds
add
mov
js
fdiv
push
sti
pusha
add
jae
or
jecxz
stos
lds
sub
scas
lock
out
dec
xor
js
leave
pop
lret
scas
sbb
xor
movsb
test
xchg
clc
pop
stos
mov
pop
les
movsb
popa
pushf
negb
pusha
xchg
inc
mov
jne
cmpb
sbb
jmp
cli
sub
shlb
mov
sbb
pop
out
stc
aad
mov
or
rcll
insb
cmc
mov
jns
into
mov
aaa
adc
push
jo
mov
in
in
test
add
and
jno
pushf
dec
sub
inc
in
mov
sbb
repz
repz
jno
addl
repz
insb
cmpsl
sub
xor
pop
icebp
bound
popa
notl
lret
call
iret
popa
push
and
push
pop
outsb
addr16
test
repz
mov
fcomp
jo
imul
pop
jnp
xchg
mov
cmp
mov
mov
cmpsl
mov
push
mov
cmpsl
insl
mov
gs
dec
jae
pop
mov
jno
fisubrs
and
inc
xchg
hlt
mov
xor
shlb
sbb
sub
mov
jg
pop
xchg
outsb
xor
rorb
jbe
ja
imul
mov
xchg
inc
lret
daa
repnz
cmc
int
repz
fisttpl
icebp
pop
clc
xor
xor
jp
pop
dec
push
clc
mov
adc
jp
jo
inc
push
ret
es
xchg
out
adc
add
sbb
sarb
rol
mov
aaa
repnz
dec
shrl
and
xor
xor
push
ret
fimull
or
movsl
mov
addb
vcvttps2dq
or
push
sbb
mov
jne
cmp
adc
sub
and
push
pop
in
scas
xor
testl
insb
jecxz
xchg
rorb
stc
xor
popf
test
shll
pop
bound
adc
or
fisubrl
stc
fadd
inc
cmp
in
hlt
add
aaa
fwait
dec
int
or
hlt
out
in
outsb
pop
push
mov
jl
mov
ja
pop
negb
mov
xor
jmp
out
cmp
andl
mov
cmp
cmp
pmulhuw
jae
out
pushf
push
and
insb
inc
push
pop
sbbb
cs
out
push
dec
or
leave
shl
push
rorl
cltd
xchg
jno
pop
jae
rclb
adc
xchg
adc
int
pop
in
movsl
lods
or
mov
cmp
mov
dec
inc
push
imul
push
icebp
mov
xor
out
js
lret
jle
repz
mov
jp
lcall
cmp
mov
xchg
add
out
aad
push
iret
call
sbbb
xchg
test
pop
js
aad
div
popf
sbbb
fadd
and
lahf
inc
loopne
pop
add
fimuls
mov
xor
xchg
jmp
mov
sbb
cs
sbb
push
sar
pop
std
ret
add
jb
int
test
inc
dec
adc
push
or
mov
sbb
push
imul
push
bound
daa
pop
fwait
adc
push
pop
cmp
push
imul
repnz
sub
addl
fstpt
out
mov
pusha
add
addr16
jbe
mov
jle
out
jns
jnp
rorb
dec
outsl
in
popf
lret
daa
out
gs
repnz
push
push
mov
rcr
jns
das
cld
and
push
xor
jbe
out
bound
mov
mov
lods
mov
mov
jbe
icebp
scas
out
mov
push
in
cltd
fsubs
loopne
aam
stc
call
adc
cmp
fcmovne
ss
in
shr
jle
lods
movsl
add
mov
lods
call
imul
inc
xchg
sahf
xor
jp
dec
sub
stos
mov
cmp
and
pop
cmp
repz
out
cli
fistl
xor
out
sub
rorb
lods
cmp
push
mov
or
psubb
push
jg
cmp
lods
mov
xor
stos
outsb
cmp
push
aaa
leave
ds
xor
sti
gs
xor
clc
sbb
push
test
sbb
cli
sub
sub
fsubs
adc
sti
xchg
xchg
out
in
add
xchg
mov
es
notl
fidivrl
mov
mov
jmp
add
dec
sbb
xchg
add
scas
jg
cltd
lret
or
and
jbe
aad
sbb
sub
mull
lahf
mov
jbe
frstor
jno
inc
mov
mov
push
ret
mov
aad
mov
in
jbe
push
ss
ret
mov
loopne
sarb
sub
fidivrs
cmc
xlat
movsb
not
xchg
inc
ror
scas
lret
xor
adc
hlt
push
add
mov
das
nop
das
stc
outsb
orb
std
xor
out
jle
sbb
or
dec
jb
push
sub
cmp
enter
outsl
sub
pop
push
or
ds
fcoml
ljmp
or
mov
dec
mov
xor
push
mov
cmpsl
mov
xchg
out
xor
pop
push
sti
out
jne
or
lcall
mov
mov
push
inc
add
lret
aad
in
mov
js
add
pusha
sub
sbb
clc
inc
shl
or
xor
repz
int
lret
fbstp
lock
int3
out
rclb
jl
sbbl
loope
fistpll
call
test
push
test
mov
push
mov
cmp
mov
dec
xchg
cmp
push
test
mov
mov
movsl
inc
fimull
sbb
movsb
and
jecxz
inc
mov
sarl
fs
dec
nop
jno
loopne
in
xchg
mov
or
pusha
inc
notb
lock
xor
jge
xchg
bound
xchg
arpl
lock
xor
or
insl
jae
mov
sub
add
in
fwait
iret
imul
adc
fldt
push
jecxz
fstps
add
ret
push
addb
xchg
lret
movsl
clc
gs
stc
jne
xlat
adc
rcll
push
pop
pop
aas
in
lret
test
mov
adc
or
sbb
dec
loopne
inc
jle
imul
subb
das
testb
movsl
add
fs
lret
inc
popl
push
mov
scas
pop
data16
fwait
or
mov
outsl
jmp
or
add
jp
dec
mov
into
xchg
mov
popf
das
je
inc
push
xor
addr16
xchg
cwtl
mov
fmuls
dec
pop
mov
push
call
in
push
add
and
cmpsl
ret
push
xchg
out
mov
sbbl
loope
addr16
push
out
push
into
jbe
pop
fucomip
jg
jmp
sbb
cld
cmp
push
das
mov
out
out
fnstsw
hlt
xor
or
xchg
fsubs
push
scas
rorb
push
stos
rcl
or
dec
clc
add
mov
insl
pop
lret
hlt
sub
je
test
jp
xor
mov
mov
ja
mov
mov
jno
sub
mov
out
mov
insl
inc
mov
or
jne
jae
ja
icebp
or
out
fstpl
pop
in
dec
cmc
std
lock
sbb
retw
inc
int3
mov
dec
aaa
cmpsb
dec
pop
std
add
dec
cld
push
cmp
gs
leave
dec
pop
fiadds
ljmp
mov
cmc
enter
mov
mov
popf
mov
rol
shlb
out
sti
ss
pop
push
pop
in
pop
je
out
cmp
leave
sti
aam
and
iret
xchg
std
aas
jl
shlb
xchg
or
jle
inc
fstp
out
test
rcrl
dec
sub
pop
insl
insl
xor
cmp
fisttpl
cmp
inc
cld
mov
xchg
fstpt
dec
cmp
push
inc
mov
out
fmuls
cmpsl
xchg
stos
sub
mov
movsl
mov
leave
xchg
cli
mov
push
xchg
xchg
ficompl
and
fbld
shrb
xchg
pop
fstp
in
mov
push
pop
lods
dec
movsb
push
or
cmp
mov
adc
leave
aaa
cli
and
mov
dec
ret
cs
inc
and
pop
mov
pop
xor
sbb
int
mov
in
rep
jno
dec
dec
hlt
push
mov
ficoml
cli
shll
cmp
out
mov
add
mov
es
cmp
mov
lret
xlat
idivb
sbbb
sbb
and
dec
mov
jo
cmp
fstpl
je
ljmp
inc
push
lds
in
adc
in
sbb
push
add
icebp
imul
cmp
add
stos
and
dec
fstl
fimull
xchg
cmp
shll
mov
cmp
mov
push
jg
bound
ret
clc
pop
inc
das
pop
add
in
lods
rorb
cltd
push
psubb
lcall
lea
jne
and
cmc
mov
mov
xor
sub
loop
inc
imul
jnp
shlb
call
mov
sarl
cld
cmp
neg
add
scas
fwait
iret
jnp
popa
outsb
dec
sub
outsl
mov
xchg
fwait
stc
adc
adcl
sbb
sahf
int3
movsb
aad
clc
cmpsl
mov
das
mov
inc
data16
sub
stos
in
xchg
andl
imul
call
or
adc
subl
xor
mov
cs
inc
cmp
jle
or
xor
cltd
repnz
and
aam
repz
xchg
add
std
xor
inc
leave
mov
jl
out
aas
call
cmp
mov
jmp
rcrb
fidivrl
xchg
cld
jl
push
pop
push
push
push
stc
jo
pop
dec
jbe
xchg
or
cmp
icebp
pop
jge
adc
ljmp
xchg
or
pop
into
cltd
cmp
cmc
call
cmpsb
pop
fstl
outsb
fwait
push
sahf
enter
popa
cli
inc
mov
adc
ljmp
imulb
lds
jbe
int
test
in
add
daa
cld
xchg
mov
jae
sub
mov
push
popa
subl
inc
dec
or
pop
xchg
dec
shrl
aam
in
sbb
bound
inc
add
or
fisubs
aad
js
out
pop
xchg
cld
or
sbb
and
sub
mov
jecxz
scas
xlat
or
inc
pop
icebp
push
nop
aaa
push
sub
xchg
dec
mov
aam
movsb
sbb
loop
xchg
out
aas
cli
jle
jo
jl
andb
inc
mov
push
xor
popf
mov
jmp
out
xchg
fidivrs
add
jno
mov
test
pushw
and
nop
orl
sbb
fidivs
push
test
cmp
jae
imul
or
lahf
idivb
les
and
ja
mov
inc
dec
push
dec
or
add
loopne
jecxz
ljmp
pusha
cmc
mov
pop
sbb
adc
dec
js
cmp
cmp
popa
cmp
mov
adc
mov
out
push
push
mov
movsb
cwtl
pop
and
int3
cmp
fsubrs
test
pop
leave
push
jecxz
cmp
in
call
inc
sbb
lea
pop
or
shrb
or
pusha
bnd
mov
jbe
imul
pop
mov
adc
loopne
mov
nop
les
pop
popf
push
es
cmc
dec
and
lret
jae
mov
lahf
in
arpl
repnz
mov
andb
subb
shrl
fadd
inc
adc
mov
mov
je
or
dec
push
xor
mov
dec
mov
add
ss
push
push
lcall
mov
mov
stc
fs
arpl
dec
pop
adc
test
adc
jmp
push
jl
and
push
neg
fcmovnbe
xor
and
test
cwtl
int
scas
shlb
add
or
fs
add
in
shlb
cli
jb
and
lea
loopne
mov
pop
sub
loop
stos
shl
adc
loop
and
outsb
outsl
shlb
adc
nop
add
add
repz
inc
add
loopne
jle
push
loope
shr
int
mov
mov
or
fistpl
xchg
mov
sub
hlt
push
insb
add
xchg
es
mov
pop
lcall
cld
ss
loope
sub
ret
jns
push
xchg
cmpsb
pop
imul
mov
ret
or
lret
inc
mov
loope
ljmp
sub
cmpsb
cmp
ds
je
adc
aam
fistpl
push
ljmp
or
sbb
pop
lods
fildl
fbld
pop
fsubs
aam
mov
fsubp
and
jecxz
lret
das
dec
or
or
jge
test
and
xor
xchg
dec
mov
fldenv
stos
imul
test
xor
movsb
dec
cmp
mov
in
scas
mov
xor
bound
aam
sub
or
cmpps
xchg
sub
sub
xchg
push
fistpll
scas
inc
popa
pop
fidivrs
aad
cli
incl
out
add
imul
adc
push
sti
pop
outsb
loopne
and
sub
iret
jp
ja
jecxz
pushf
inc
imul
mov
je
or
aam
flds
mov
cmpsl
add
push
jnp
out
or
enter
sub
ja
jnp
outsl
jl
pop
sbb
nop
aam
xor
jo
stos
sahf
fsts
xor
push
jmp
jbe
xor
inc
ss
jmp
arpl
insl
call
jle
in
lcall
pushf
mov
addr16
insl
jge
mov
ljmp
pop
scas
or
and
cmpl
repnz
sarb
jo
jne
mov
lods
cmp
sti
loopne
pop
pop
mov
scas
sbb
test
jl
pop
int3
and
sub
and
test
mov
xchg
sub
push
ret
rcll
daa
popa
push
dec
lds
add
xchg
push
mov
in
mov
ds
out
cwtl
inc
ds
outsb
adc
cwtl
shll
inc
ja
enter
into
sub
or
cltd
cmpsb
mov
mov
dec
jnp
pop
sbb
orb
int
lods
xor
push
xchg
pop
shrl
pop
jle
call
mov
sub
insl
pop
mov
scas
adc
sub
sbb
dec
xor
fidivl
nop
stos
ret
cld
aas
pop
xchg
rcl
fldlg2
mov
testb
dec
inc
int3
push
push
add
test
push
adcb
test
jp
sbb
xchg
xchg
inc
cltd
inc
sbb
arpl
dec
cmpl
inc
xor
xchg
orl
lock
pop
sub
cmp
xchg
xor
das
in
pop
idivb
insl
or
xchg
and
pop
inc
rolb
movsb
nop
pop
xor
mov
dec
sbbl
sub
mov
mov
shll
cmpsl
ss
mov
lahf
iret
ds
xchg
fwait
mov
stos
sub
jnp
pop
mov
cmp
xchg
out
and
or
call
test
lods
push
adc
jl
test
inc
pop
push
mov
out
jecxz
xor
cmp
aad
mov
loopne
jecxz
lcall
ljmp
lods
and
aaa
iret
pop
push
aaa
xchg
cmp
icebp
sub
es
leave
adc
mov
rolb
and
sysenter
enter
jl
adc
ljmp
push
push
test
or
int
add
jno
mov
cmp
popa
adc
push
mov
aam
movsl
dec
and
fwait
pop
dec
out
pushl
aad
and
xchg
cmpsb
scas
mov
incl
imul
stc
aaa
inc
gs
and
pusha
es
fiadds
cld
test
push
out
jl
aad
cmpsb
movsl
adc
mov
adc
jns
dec
lea
test
cwtl
enter
and
cwtl
or
dec
popa
sub
sbb
in
lret
sub
cmc
dec
mov
fsts
sbb
sub
fidivrs
les
mov
inc
ds
frstor
jno
mov
xorl
fimull
jecxz
adc
push
adc
cmp
xchg
loopne
cli
cmp
mov
jae
hlt
repz
xchg
insb
sbb
mov
xor
push
mov
js
nop
mov
lret
xlat
jbe
adc
insb
push
jbe
dec
mov
xor
mov
mov
push
push
enter
mov
push
xor
mov
dec
jbe
adc
mov
and
xor
pop
and
rcll
pop
roll
popf
cltd
mov
cmpsb
mov
ret
mov
addr16
push
and
pop
push
popa
sub
std
arpl
pusha
inc
or
test
dec
mov
rclb
push
int
cwtl
mov
sbb
test
sbb
ss
lods
inc
cmpl
xor
das
data16
xchg
jo
cs
movsl
mov
jl
adc
cmpsb
lock
mov
adc
push
sub
data16
push
sub
pop
movsl
test
cmpsb
pop
lahf
in
cmp
rcll
cmpsl
es
nop
adc
aaa
fcompl
jnp
cmp
mov
add
jle
test
inc
jl
adcb
shl
cmpsb
mov
enter
jmp
add
imul
xchg
imul
mov
cmp
or
pop
add
js
mov
cmp
mov
js
xlat
ret
and
or
pop
dec
mov
pop
mov
cli
xchg
je
cmp
sbb
cmpsl
inc
cs
lds
stos
arpl
push
test
dec
mov
push
pop
jb
cmp
mov
aaa
mov
ret
roll
popa
ret
pop
or
test
xor
notrack
cld
imul
adcl
clc
aad
sub
xor
divb
stos
xchg
sahf
dec
aas
dec
movsww
mov
jl
shlb
jmp
loopew
push
adc
jb
sbb
mov
add
repnz
add
jno
icebp
in
pop
mov
jae
xchg
insl
push
jl
jl
enter
int3
mov
sbb
ss
push
jecxz
xlat
pop
js
cmp
imul
hlt
movsb
push
pop
dec
push
push
inc
xor
jb
les
mov
loope
jge
cmp
les
jge
ret
cmp
pushf
cmovne
xor
xor
test
sti
test
xor
in
mov
adc
xchg
shlb
xchg
dec
out
int3
in
xchg
insl
inc
cmc
inc
cwtl
mov
adc
test
or
mov
dec
movsl
ja
in
daa
mov
cmp
xlat
movsl
nop
cli
mov
fisubl
and
xchg
adc
cs
pusha
mov
push
inc
addl
cmp
xor
inc
int
enter
mov
daa
lret
pop
inc
fistl
and
fs
roll
cmp
jp
sub
in
das
sub
ret
push
mov
pushf
xchg
mov
popl
rorl
aad
das
lret
roll
mov
shll
jp
out
inc
addb
or
mov
stos
aaa
inc
out
jno
std
mov
rcrb
and
cmp
xchg
sbb
test
ss
mov
fiadds
sbb
enter
scas
rorl
adc
cmc
xchg
add
jno
in
repz
jnp
filds
ds
xor
add
js
mov
test
add
push
je
or
mov
jbe
fildl
fldcw
out
add
test
mov
daa
jle
std
or
inc
loope
pusha
dec
je
sbb
scas
mov
lret
leave
lcall
xchg
xchg
nop
sbb
jbe
xlat
stos
sub
ret
mov
sub
inc
adc
addr16
fnstcw
das
push
dec
cltd
stos
ret
shll
stos
stc
pushf
pop
dec
aam
jecxz
or
ficompl
mov
adc
push
aas
push
pop
pop
ja
call
repnz
mov
xor
aaa
data16
jmp
push
inc
sub
fstpl
adc
pop
jle
stos
adc
nop
and
aas
and
xchg
ss
sub
aas
jno
mov
dec
xchg
jecxz
sbb
in
jnp
add
js
and
add
add
imul
xorb
fdivl
mov
add
or
out
arpl
jle
leave
sbb
add
push
push
outsb
pop
sub
add
jge
aam
jnp
iret
xchg
in
movsl
sbb
xor
out
in
aad
xchg
out
outsb
mov
js
add
cmp
repz
mov
sub
adc
sub
pop
jle
movsb
jp
stc
sub
sahf
js
movsb
mov
shlb
sub
fldl
es
fs
inc
call
arpl
test
jp
mov
cmpsl
mov
data16
nop
push
enter
addr16
cmpb
in
cmp
push
aam
and
sub
jnp
sti
mov
stos
pop
mov
sub
ljmp
aad
and
leave
xchg
push
ret
sbb
shll
test
into
mov
ljmp
cmp
std
andl
xchg
pop
adc
iret
pop
xchg
adc
push
into
inc
or
and
test
cmp
outsb
xchg
jb
jmp
pushf
inc
and
mov
xchg
mov
jle
cmp
ljmp
push
and
test
xchg
push
push
pop
nop
jbe
mov
mov
add
fstps
hlt
test
mov
jecxz
pop
xor
and
jb
sub
mov
or
test
inc
lcall
or
jb
dec
pop
mov
xchg
addr16
fisttpl
inc
pusha
into
jae
dec
push
jbe
inc
mov
fimuls
xchg
xor
cmp
sub
mov
push
cmp
pop
sbb
or
lret
and
add
xchg
cmp
mov
xchg
add
enter
pushf
jae
sbb
or
clc
pop
je
icebp
stc
inc
xchg
popa
adc
or
aad
jp
push
jmp
jo
xor
mov
into
and
fistl
in
pop
xor
bound
cs
cmp
es
movsb
push
adc
out
or
inc
lods
mov
data16
mov
js
mov
dec
mov
sbb
nop
mov
mov
sti
fucomip
cmp
jmp
mov
mov
jnp
inc
dec
push
cltd
pop
add
je
int
jnp
in
repz
add
in
test
lret
ss
shll
pushf
sahf
sub
lcall
iret
push
sti
dec
fiaddl
mov
sbb
dec
pop
add
cwtl
jo
pop
lods
enter
sbb
icebp
dec
inc
mov
dec
rorl
fldcw
pop
hlt
push
mov
mov
sbb
cmp
jns
gs
and
sub
out
mov
sub
cli
in
dec
fdivrs
sbb
lret
or
inc
or
cmp
std
mov
xor
sub
adc
pop
adc
lret
loop
sub
fcmovnbe
shrb
jnp
scas
cld
movsl
lock
popa
cmp
out
jl
shl
cmp
add
mov
adc
jl
mov
lahf
cmc
nop
decl
cmp
aad
test
xor
cmpsb
and
dec
sbb
dec
int3
cs
in
jne
xchg
roll
sub
js
imul
and
lahf
jge
loop
aam
insl
fiadds
out
dec
xor
sbb
loop
lods
shrb
push
stos
cmc
xor
ret
xchg
lds
mov
sub
inc
cmpsb
jnp
and
sahf
repnz
fnop
jmp
mov
cmp
mov
scas
nop
iret
scas
or
shl
dec
rorl
hlt
cmp
test
aad
js
inc
aam
adc
jge
repz
mov
or
push
in
into
jmp
std
xor
xor
sti
fdivrs
shl
lret
lods
sbb
insb
push
test
cmp
cmp
scas
jne
lods
shrb
adc
mov
rorb
lods
dec
negb
xchg
push
fnstsw
push
movsb
fwait
lods
fwait
loope
enter
lret
add
add
jbe
add
icebp
mov
add
pusha
xor
adc
cmp
add
add
je
add
icebp
mov
adc
add
or
mov
jg
fucomi
popf
mov
sub
ja
sahf
lods
lahf
pop
push
cli
mov
adc
icebp
pop
clc
in
sbb
sbb
shll
lret
inc
or
or
xor
jae
bound
xor
pop
inc
fdivrs
mov
xchg
int
xor
inc
bound
test
in
mov
fcmovnbe
vmaxsd
in
inc
adcb
ja
sbb
pop
dec
lahf
xor
mov
cmpsb
push
xlat
inc
call
js
std
pusha
pushf
outsl
mov
cmp
movsl
lret
mov
sub
cmp
jl
sbb
xchg
icebp
sahf
jo
pop
sbb
xor
sbb
sbbl
cld
lea
add
fmuls
cli
movb
jno
push
or
fcomi
fiaddl
and
dec
loop
test
mov
das
enter
xchg
lods
stos
popa
es
pop
sbb
mov
mov
mov
popf
into
or
xchg
pop
fisubl
mov
iret
gs
test
adc
or
ds
maxps
xchg
testl
arpl
xchg
xchg
dec
dec
loop
fisubs
jmp
mov
push
ss
fs
add
xor
gs
and
stos
mov
cmpsb
cmp
stos
in
movsl
lock
sbb
test
imul
cs
into
jl
jnp
and
jnp
jecxz
idiv
divl
pop
push
mov
divb
ja
lea
sbb
xchg
push
sub
js
fildll
mov
divb
dec
xor
adc
add
scas
icebp
lods
fildll
clc
out
aas
leave
jmp
xchg
mov
jle
xchg
or
hlt
rclb
aad
pop
inc
xor
mov
sahf
popa
adcb
icebp
pop
outsl
ret
aas
outsb
jl
neg
dec
lret
and
or
aas
test
das
sti
jno
ds
cli
mov
mov
imul
lea
mov
pop
jb
pop
hlt
xor
loopne
repz
ss
pop
fsub
mov
xchg
outsl
stos
sub
int
loope
lods
mov
shll
sub
popf
xchg
pop
insl
add
pop
mov
testl
jmp
jp
mov
sub
int3
sbb
xor
sbbl
add
repz
ss
pop
movsl
and
mov
les
pop
pop
pop
pop
imul
jo
push
cmp
call
test
sbb
call
dec
pop
int
pop
sbb
hlt
mov
dec
lcall
push
dec
sub
outsl
inc
xchg
xchg
mov
clc
rorl
jns
pop
cld
jecxz
sarl
jno
addr16
jecxz
pop
pop
fistpl
ljmp
out
loop
cltd
jp
adc
push
add
pop
in
xchg
cli
push
jl
js
pop
sub
pop
fistpll
mov
ja
int3
lahf
mov
sub
insl
jne
out
jns
jl
mov
or
inc
cmp
leave
mov
shr
cmpsb
cmp
jae
add
pusha
int
inc
push
jbe
cmp
arpl
xor
xchg
aaa
bound
fsubl
sbb
imul
jns
mov
fcmovnu
idivb
xchg
out
lock
sti
inc
ret
movd
int3
add
in
sbb
add
jmp
mov
fistl
pop
out
les
push
sub
xchg
cli
jno
adc
fcmovb
or
pop
and
push
enter
in
stos
std
movsl
mov
mov
shll
push
add
pop
xlat
mov
cmpsl
mov
cmp
mov
push
icebp
aam
repz
stos
pushf
push
cld
and
push
insb
mov
arpl
lahf
sahf
jb
adc
repnz
rcr
push
in
push
sub
adc
fistps
mov
fisubrs
pushf
test
and
int
add
push
jg
sub
mov
sbb
adc
cld
mov
and
ja
repz
aaa
aam
cmp
hlt
leave
jge
js
stc
or
sub
xchg
mov
mov
dec
clc
pop
xchg
xchg
test
adc
add
cmp
mov
dec
sbb
cwtl
movntq
push
les
jmp
int3
jne
addr16
sbb
inc
outsl
in
xchg
jl
add
xchg
adc
icebp
adc
testl
daa
mov
loop
add
andb
xchg
insb
scas
adc
and
arpl
aad
jge
jmp
push
adc
iret
adc
push
iret
or
repz
add
push
sub
and
pop
push
xor
mov
lock
sti
xchg
sub
outsl
stc
in
mov
jge
jg
in
scas
fldt
pop
mov
jo
nop
xor
ja
fildll
push
pusha
add
add
aas
sub
icebp
outsb
mov
sti
inc
push
and
xchg
or
mov
and
ds
adc
sub
aaa
dec
repz
in
lahf
fisubrs
outsl
repz
ljmp
imul
cmp
and
loop
dec
shlb
pop
push
push
inc
sarb
insb
les
mov
mov
mov
fadd
pop
mov
jp
xor
pushf
cltd
maskmovq
testl
xchg
sbb
pop
ja
mov
add
in
add
repnz
cld
cmp
movsb
mov
push
jle
addl
inc
sbb
das
ljmp
lods
cmovnp
jg
in
jb
cs
pop
and
push
cmp
fcomps
inc
push
insb
jne
stc
and
sub
dec
push
ret
call
arpl
aam
jle
jb
mov
and
call
test
in
out
dec
in
clc
mov
cmp
pop
rorb
jge
je
insb
fwait
cmpsl
imul
xchg
xor
sti
jmp
or
dec
repnz
sbb
xchg
jbe
jnp
stos
add
cld
or
mov
pop
sub
es
dec
adc
outsb
loope
lea
push
aam
cmp
push
dec
pusha
loopne
pop
sar
fldl
xchg
sbb
repnz
inc
lcall
mov
sub
dec
mov
cwtl
pop
or
sub
arpl
je
add
lretw
and
loope
pop
mov
inc
loope
xchg
add
dec
imul
je
cmp
xchg
xor
adc
adc
or
dec
test
mov
rcl
insb
bswap
test
mov
dec
arpl
loopne
repz
movsb
int
or
inc
pop
lret
fisttpll
adc
and
push
ret
dec
bound
jmp
pinsrw
fwait
out
jge
test
clc
cs
dec
stos
cmp
add
or
lock
ret
outsl
cmp
xor
or
push
jno
sbb
out
xchg
scas
mov
scas
in
test
sbb
inc
inc
mov
jne
dec
adc
mov
pop
rcll
mov
movl
push
rorb
xchg
insl
shll
push
mov
loop
sub
mov
mov
rolb
in
fwait
lds
mov
ret
mov
leave
rcrb
jo
enter
fwait
shlb
jnp
sub
mov
pop
jne
or
inc
jmp
mov
xchg
mov
rcrl
into
clc
ljmp
popf
dec
xchg
out
popa
popf
push
adc
push
sbb
add
jmp
int3
loop
insl
aad
inc
jo
sbb
out
xlat
lret
push
addl
jmp
insl
fsubl
push
bound
mov
das
jmp
fwait
pusha
loope
adc
dec
and
jae
push
iret
dec
aam
mov
mov
mov
or
arpl
xor
adc
or
xor
shll
sbb
fstl
test
adc
mov
sub
test
stc
pop
mov
mov
ficompl
mov
dec
pop
mov
cmpsl
xor
xor
fwait
jb
sbb
pop
lods
push
or
sarb
xchg
inc
movl
inc
sub
or
sub
loopne
cmp
outsl
lods
fidivl
test
pop
out
mov
sbbl
lret
push
fnsave
mov
push
cmp
in
and
movsl
in
daa
xchg
fistl
jae
cld
jl
inc
dec
xor
push
jg
icebp
or
shr
test
or
scas
movsl
rcl
fstpl
jge
in
ficompl
int
out
jnp
cmpsl
fimull
pop
xchg
pop
jg
inc
inc
or
addr16
sbb
inc
rcr
or
push
push
adcl
mov
pop
lahf
mov
out
cltd
lea
sbb
add
sub
cmp
rorl
lret
bound
and
orl
aas
dec
xor
adc
mov
adc
in
inc
pop
inc
lock
pop
jle
sub
inc
negb
dec
cs
jb
adc
out
es
outsb
daa
adc
in
shrb
jl
adc
sbb
insl
mov
or
adc
iret
pop
aad
add
fstps
xchg
fisubrs
fdivs
mov
lock
scas
xchg
sbb
lahf
jb
sub
imul
fs
cmp
xor
fs
imul
add
in
inc
cmp
in
jle
cs
mov
cmp
or
fdivrl
out
jle
sbb
and
push
pushf
mov
out
jne
movsb
or
fsubrs
dec
jbe
dec
pop
inc
adc
aam
ljmp
jae
or
out
aad
cmp
incl
leave
inc
adc
jne
lret
sub
rclb
test
mov
jge
xor
add
insl
or
mov
pop
inc
mov
or
mov
xchg
inc
loopne
movsl
cmp
ficoms
scas
push
gs
mov
push
out
jne
leave
test
lods
mov
pop
lahf
mov
leave
mov
in
lret
or
and
int3
in
mov
into
es
enter
insl
cmp
or
and
stc
std
adc
int3
fwait
sti
in
sahf
and
sub
daa
imul
mov
popa
fiaddl
js
mov
mov
loopne
dec
inc
jecxz
pop
arpl
in
popa
sti
or
pop
add
sub
mov
push
or
mov
out
sub
cs
fnstsw
adc
sub
lock
or
fsubrs
ret
out
inc
gs
test
and
loope
enter
aad
mov
lods
dec
mov
mov
jmp
lea
mov
movsl
fsubrs
and
gs
adc
mov
xor
or
jne
inc
insb
sbbb
push
scas
fcomps
repz
pusha
mov
dec
aaa
and
in
jecxz
jl
aad
jge
clc
cmp
psubd
mov
pop
std
jl
pop
push
adc
mov
je
adc
jne
and
and
stc
sbb
pop
pop
mov
sub
add
push
dec
xorl
jg
lea
mov
sbb
lds
and
jns
mov
push
jae
repnz
pop
fistl
mov
mov
push
mov
cli
fimuls
lods
push
push
sarl
fimull
sub
je
mov
popf
jl
inc
dec
inc
scas
or
mov
repz
or
lea
jge
sub
inc
ficompl
jno
cmc
iret
adcb
int3
imul
push
jno
sarl
add
sbbl
cmp
sub
out
mov
rcrb
loopne
popf
push
rclb
pop
xchg
push
aas
jb
push
rcr
scas
or
popa
inc
ja
mov
mov
add
xor
ret
cli
pusha
mov
inc
dec
aaa
test
lods
xor
nop
mov
pop
sbb
push
subps
mov
mov
xor
movsl
sti
cwtl
cmp
push
xchg
inc
scas
cmp
imul
lods
fiadds
mov
sbb
lock
jb
lret
popa
push
jno
loop
loop
push
sahf
xchg
add
mov
stos
mov
adc
mov
inc
mov
ficoml
adc
xor
fcoml
pop
fldcw
inc
repz
cwtl
jno
fcomp
sahf
xchg
dec
sqrtps
fsub
loop
push
mov
repz
inc
xor
cltd
mov
push
mov
jge
add
push
inc
sahf
dec
shll
cwtl
dec
push
push
popa
jns
mov
inc
sbb
mov
or
ja
jne
enter
add
in
or
mov
decl
add
cmp
adc
inc
aam
adc
imul
loop
outsb
xor
or
lahf
ror
cmpsb
jecxz
sti
jae
xchg
std
pop
cmpsl
mov
or
insb
in
sub
insl
aaa
addr16
shlb
mov
and
sahf
ficomps
sahf
aas
xor
cmp
test
push
ss
or
sahf
adc
jne
in
bound
enter
xlat
jle
jle
call
sbb
push
cwtl
cld
mov
mov
sti
or
push
fstpt
push
int3
cmovl
xor
xor
adc
xor
jo
jle
out
loope
ja
test
add
sbb
in
cmp
pop
subb
mov
in
out
iret
stos
jae
scas
add
pushf
ja
dec
jbe
lahf
jb
xor
push
out
cltd
pop
cmp
ror
arpl
pushf
es
mov
mov
pop
xchg
jecxz
movups
mov
insl
rcrl
cmp
jns
in
dec
enter
xor
sub
jecxz
ret
sbb
cs
enter
push
cmpsb
lret
inc
cmp
pop
imul
push
pop
dec
cmp
mov
sbb
je
mov
cld
jle
inc
repnz
and
mov
jmp
popf
repnz
pop
fldcw
and
stos
cld
dec
and
jbe
xchg
nop
cltd
mov
loope
mov
jle
jbe
fisubrl
pop
cmp
push
repz
mov
mov
inc
cmp
jo
mov
daa
test
or
adc
repnz
push
cmp
cmc
xchg
lret
mov
icebp
es
or
pusha
stc
testb
xchg
popa
add
push
testb
ret
cmpsl
daa
jno
lods
pop
and
ljmp
aam
xchg
dec
xor
mov
cmp
arpl
pop
js
cmc
push
inc
pop
add
mov
and
cmp
inc
cltd
int
pop
pushf
fisubs
xorl
mov
clc
xchg
sti
fisubl
and
loope
or
ljmp
cmp
jnp
stc
sub
sub
pusha
cwtl
mov
cwtl
adc
movsl
in
sbb
enter
mov
push
cmp
mov
repz
sbb
mov
mov
sbb
in
pop
fnstenv
dec
mov
mov
sub
std
adc
iret
data16
push
cmp
xchg
jae
sub
cmp
adc
mov
lcall
and
dec
imul
test
push
mov
pop
repnz
cmp
or
sbb
ljmp
pop
push
outsb
data16
jcxz
dec
enter
negl
ja
lcall
push
mov
lods
jp
or
ja
sub
ss
mov
data16
xchg
push
adc
push
push
add
xchg
or
cmp
mov
xchg
movl
shrb
fcmovnb
fs
scas
in
dec
popf
and
lea
inc
loope
jb
cmp
or
adcl
arpl
outsl
adc
ja
out
incb
icebp
loop
into
push
push
jp
das
cmp
mov
push
arpl
add
dec
aad
aad
insl
cmpsl
loop
dec
inc
mov
inc
and
sub
repnz
movsb
lods
fstpl
fdivrl
insl
or
sahf
pop
lcall
add
or
jo
pop
dec
add
das
out
jmp
xor
mov
pop
cmpsb
stos
dec
mov
or
out
mov
push
pop
aaa
ljmp
pop
das
fdivs
push
arpl
int
cltd
inc
aad
pop
mov
ja
iret
xor
sbb
cmp
or
mov
stc
stos
stos
pop
and
cmc
mov
push
dec
cmp
inc
xchg
inc
ret
aaa
and
adc
out
iret
dec
enter
jns
push
jae
add
sub
mov
ret
enter
loop
aaa
sub
fstpl
mov
or
mov
mov
sahf
push
dec
jp
or
sub
aaa
and
inc
dec
ret
icebp
pop
inc
push
push
mov
fldenv
pop
imulb
mov
jl
jmp
adc
mov
mov
cmp
inc
mov
xorw
and
jp
xor
xchg
stos
popa
fists
outsb
dec
pop
jmp
pop
loop
fwait
sub
les
cmp
cmpsl
mov
and
mov
pop
jp
xchg
sub
sbb
add
ret
pop
sub
cmp
iret
into
int3
inc
jno
dec
leave
add
notb
enter
outsl
sti
sub
aam
movsb
xor
dec
call
in
jl
inc
or
cwtl
and
xchg
mov
shl
lods
inc
push
mov
mov
sub
stos
mov
sarb
cld
test
dec
mov
push
xorb
fdivl
xor
fisttps
xor
xchg
cmp
inc
mov
mov
mov
xchg
xor
and
sahf
aam
addr16
out
pop
jge
sbb
push
out
sahf
je
adc
cmp
mov
rorl
jmp
jmp
rorl
ljmp
ret
sbb
cmpsb
mov
or
js
xor
push
push
pop
lock
fmuls
xchg
sbb
je
jb
cmc
repnz
push
dec
stc
xchg
pop
outsl
jle
lock
leave
xlat
mov
xor
or
dec
cld
negb
out
pop
int3
mov
push
test
call
cs
or
pop
pop
pop
pop
leave
repz
fnstsw
int
pop
sub
adc
xor
xchg
sub
and
jb
fisttpl
stc
lea
xorl
push
inc
add
insl
dec
sub
push
mov
je
add
or
insb
xchg
aad
pop
movsb
xor
sub
xchg
cld
out
inc
jnp
rcrb
fcoml
jl
adc
pop
in
pop
sbb
sub
push
push
cli
popa
jmp
popf
jae
mov
ja
xorl
pop
ret
sub
inc
clc
dec
mov
jo
xchg
dec
sbb
xchg
std
je
push
arpl
stos
icebp
mov
or
xchg
xor
push
aam
sub
out
push
cs
xor
or
icebp
sbb
cwtl
push
repnz
mov
sub
mov
adc
shlb
insb
lock
in
xchg
pop
push
leave
cmp
cmp
jle
xor
sti
mov
fidivrs
push
xor
jbe
xchg
push
jne
xchg
lds
stos
int
mov
ljmp
pushf
xor
xadd
jmp
jmp
xchg
jnp
mov
adc
inc
scas
sbb
mov
iret
fisubl
dec
lods
addr16
push
outsl
int3
test
mov
sahf
into
out
mulb
int
dec
in
pop
flds
xor
fdivr
jae
mov
outsl
push
xchg
cmp
fdivl
inc
bnd
inc
jo
or
decl
in
mov
xorb
je
push
mov
fimull
lods
cmp
dec
repnz
mov
mov
mov
scas
mov
mov
pusha
dec
das
int3
sub
out
cmp
xor
sub
sub
xchg
mov
add
repnz
dec
hlt
or
inc
jb
inc
insb
xor
sarl
pop
jg
fwait
or
ret
mov
inc
imul
or
sub
sub
in
mov
shl
je
lods
cltd
test
and
ret
mov
jns
mov
loop
scas
ss
mov
pusha
mov
ss
arpl
adc
adc
mov
fnsave
sub
lods
ss
test
cmp
cmpsl
les
jmp
push
sbb
scas
imulb
pushf
or
mov
or
shrb
cld
out
shlb
je
dec
fsubrs
mov
js
rcl
fsubrl
add
sub
adc
jl
adc
xor
pop
mov
in
mov
int
push
mov
xchg
push
shrb
int3
mov
mov
repz
mov
jns
loope
dec
cmc
sbb
xchg
in
push
pop
js
xchg
jmp
dec
sbb
dec
les
fisttpll
mov
aam
shl
mov
pop
repz
repnz
xchg
ja
or
loop
dec
sub
mov
js
dec
xchg
addr16
cmp
mov
add
mov
call
dec
mov
push
adc
cli
aas
mov
adc
add
lret
insl
dec
pop
xor
push
imulb
outsb
jp
lds
out
mov
lret
lock
adc
xor
pop
fdivrl
sub
dec
sbb
push
call
pop
mov
fldt
pminsw
lcall
xchg
and
xchg
push
pushf
pusha
test
push
or
repnz
sub
imul
fcoms
sub
leave
or
inc
daa
leave
push
out
iret
addl
subb
jl
std
pusha
adc
push
pop
jnp
push
xchg
xchg
sub
and
insl
les
scas
arpl
dec
lods
add
popa
mov
popl
mov
add
outsb
mov
aad
ja
lds
mov
add
ljmp
pushf
call
int
mov
enter
cmp
subb
ja
mov
adc
rcr
testb
cld
leave
xchg
sbb
clc
sbb
mov
fdivr
xor
cmp
pop
cmp
inc
and
jg
and
xor
xor
mov
fcomi
fst
lods
out
lds
out
imul
sub
ficoml
xor
jne
jbe
loopne
mov
out
push
mov
ja
cli
pop
call
xchg
adc
into
pop
test
hlt
mov
cli
int3
push
es
jo
cmc
or
sbb
sub
lds
inc
sti
push
lods
push
push
lods
xchg
loope
leave
mov
std
nop
mov
push
daa
pop
pop
or
push
fcoml
ljmp
test
xchg
sbb
scas
pop
je
addr16
cmpsb
aam
add
mov
bound
lret
and
outsb
in
stos
orb
fistpl
adcl
cltd
jecxz
pop
les
mov
in
cld
imul
add
cmp
sbbb
push
pop
cmp
adc
addr16
ss
push
and
js
or
dec
push
nop
or
adcl
test
jb
cli
cmpb
lods
jno
dec
add
sbb
ljmp
aam
ret
fwait
lret
cmpsl
add
fimuls
bound
mov
xor
scas
lcall
mov
xchg
xlat
bound
divl
divl
lds
cli
stc
aad
xchg
cs
xchg
dec
cmp
ret
or
or
mov
mov
push
push
push
xor
and
jb
aam
mov
cmp
push
inc
lea
ss
mov
inc
faddl
ret
xor
pusha
cld
push
lds
in
pop
testb
adcb
xor
jae
aaa
sub
push
addl
pusha
imul
int3
imul
in
lods
inc
test
xor
jb
push
and
add
mov
popa
outsl
mov
xchg
lahf
nop
je
sbb
sbb
jo
push
add
cld
repnz
xchg
push
jo
fisttpll
pop
lret
imul
push
std
sarb
lret
int
sub
pop
jne
lcall
push
jbe
xchg
inc
leave
leave
xchg
adc
jo
pop
mov
dec
push
in
or
push
adc
sbb
lret
lahf
mov
sub
jecxz
sbbb
jp
or
imul
mov
cmp
jnp
sahf
rcll
xor
pop
cmp
in
addl
nop
inc
xchg
int
loopne
pop
adc
arpl
pop
test
sbb
adcl
push
jmp
dec
imul
testl
outsb
pop
and
add
arpl
sbb
and
add
sahf
mov
test
cmp
mov
sub
lods
push
xor
into
mov
test
xor
and
hlt
loop
jbe
sub
out
mov
mov
lahf
push
popf
pop
insb
dec
or
add
pop
jnp
out
or
sub
pop
popf
outsb
pushf
mov
sub
insb
loop
out
lds
shlb
shlb
add
cmp
mov
push
inc
shrl
lret
out
jg
out
push
cmp
sbb
mov
pop
mov
inc
rol
lods
cmp
scas
xor
cmc
in
ljmp
push
adc
subl
ljmp
outsb
stc
sbb
xor
or
leave
jns
jne
subb
scas
pop
out
gs
sbb
rorb
hlt
stc
xchg
and
dec
mov
les
subl
out
arpl
stos
sub
sbb
rolb
ret
mov
mov
jecxz
es
aaa
jg
std
lods
cmc
jo
inc
mov
mov
inc
out
fstpl
xor
xor
lock
xchg
and
pop
adc
adc
aad
or
pusha
sub
xor
imulb
xchg
cltd
bound
mov
out
push
push
push
hlt
cli
loop
incl
pop
jmp
in
test
lahf
daa
aaa
frstor
test
insl
mov
or
push
cmpsb
push
pop
xchg
mov
push
mov
mov
xlat
andl
daa
mov
add
lret
pop
add
shl
sbb
call
bnd
loope
lcall
sahf
pusha
jp
xchg
add
lahf
jle
sbb
mov
or
xor
rolb
ss
lds
iret
stc
roll
pop
jns
iret
stos
jg,pn
in
loopne,pt
fstpt
sub
int
cmp
fmuls
jnp
push
pop
add
and
lret
lret
jl
outsb
inc
adc
mov
add
sub
call
outsl
sbb
and
dec
add
jge
jg
mov
sahf
inc
mov
sub
or
sbb
adc
dec
and
xlat
lcall
stos
mov
in
aas
cmp
insb
sub
fidivrl
sub
repz
cvtpi2ps
ret
or
cwtl
in
in
xchg
xchg
jmp
or
mov
cwtl
or
push
pop
es
mov
ret
pop
dec
sbb
cmp
inc
daa
inc
inc
sbbl
popf
xchg
push
pop
pop
mov
sbb
sub
mov
dec
ret
imulb
mov
jmp
dec
sti
jnp
and
push
adc
in
mov
pop
sti
xor
pop
dec
adc
dec
hlt
mov
cmp
imulb
push
dec
cmp
leave
or
or
mov
jo
or
mov
jae
mov
xchg
sbb
sar
xchg
push
cmp
dec
cltd
inc
out
lds
xchg
pop
test
add
fistpll
push
push
aad
mov
jl
sbb
in
inc
pop
movsl
cmpsb
lret
jecxz
lret
sbb
push
and
fstl
xchg
loopne
pop
lock
add
cltd
test
outsl
jge
sahf
loop
sub
sbb
popf
pop
lock
add
sub
int
popa
mov
rdtsc
jbe
jp
inc
imul
inc
movsl
insb
lds
es
push
pop
dec
mov
or
cs
add
out
mov
add
mov
std
jmp
cmp
jns
adc
pop
movl
push
ljmp
xchg
sub
rcrb
es
push
clts
insl
lods
fs
sbb
xchg
mov
or
cwtl
cmc
into
cmp
fsubl
cmp
mov
push
out
xor
mov
push
daa
fdivl
mov
movsl
jnp
xchg
jnp
pop
sub
push
lret
int3
mov
adc
sub
inc
mov
sub
jmp
xchg
nop
adc
push
mov
or
inc
and
pop
inc
push
sub
test
mov
jb
mov
push
push
pop
push
push
jne
mov
rorb
inc
sbbl
pop
add
outsl
subb
ljmp
xor
movsb
insl
rorl
aaa
pushl
lods
mov
cli
outsl
adc
cmp
xor
aas
es
mov
out
leave
test
fiadds
push
gs
push
gs
into
cli
lods
out
add
lods
cltd
out
test
pushf
rorb
dec
mov
jmp
imul
rcrl
push
pop
mov
icebp
dec
cmp
fidivrs
daa
jmp
hlt
cmpsl
fisubl
out
in
add
rorw
inc
add
mov
inc
adc
jnp
div
mov
sbb
and
mov
pop
xor
mov
test
cmpsb
dec
sbb
xlat
icebp
sbb
andl
add
add
xor
sub
push
cli
cmp
and
push
inc
sub
mull
pushf
inc
pop
dec
cmp
xchg
loope
xor
sbb
cmpsb
push
mov
cmp
data16
or
mov
sub
test
xchg
or
cmp
mov
clc
jb
ljmp
mov
and
push
ds
ds
cmc
push
xor
fisubl
cwtl
jg
testl
aas
pop
jp
jl
push
sahf
dec
fimuls
mov
dec
mov
movl
lods
fildll
pusha
and
mov
xchg
decb
dec
adc
addr16
movq
xor
push
sti
cltd
push
push
shlb
popf
sub
stos
stos
add
adc
dec
mov
mov
inc
aam
dec
cmp
scas
in
loop
arpl
pop
sti
int3
xchg
add
int
pusha
aaa
inc
jae
mov
lret
jl
jb
ss
lods
cltd
int
fucom
out
ljmp
ret
jno
call
ja
cmp
aaa
cmp
pop
sbb
fsubl
jl,pt
push
mov
pop
lret
inc
or
mov
cli
add
and
sub
or
or
dec
or
and
xchg
jmp
fs
les
or
sbb
mov
decl
jmp
into
fbstp
lods
add
fnstenv
mov
ffree
adc
jle
or
adc
int3
inc
sbb
ficoms
scas
loope
mov
std
jnp
jp
rolb
sub
stos
pop
jb
cwtl
mov
cmp
mov
popf
das
and
xor
xor
jns
leave
lock
lret
lret
inc
push
push
es
inc
test
pop
jo
hlt
inc
dec
fmulp
loop
jnp
imul
xor
dec
ret
xlat
pop
call
les
pushf
ss
jecxz
fisttpl
cmp
dec
lods
inc
dec
rcrl
fbstp
test
mov
jle
sbbb
into
dec
mov
xlat
and
dec
ret
ret
imul
das
fsts
nop
sahf
mov
out
cmp
push
aaa
in
mov
scas
in
cld
inc
sub
out
jns
out
aas
loope
imul
mov
dec
sub
mov
add
pushf
out
loope
mov
cmpsl
iret
mov
cs
xchg
and
les
adc
dec
jae
xchg
incl
mov
inc
jmp
mov
push
add
hlt
mov
scas
rorb
rolb
inc
call
dec
mov
add
mov
dec
pop
cs
sbb
push
dec
es
fwait
or
add
scas
pop
adc
insl
sar
push
ret
ffreep
xchg
inc
repz
and
into
sbb
sbb
dec
lret
xor
roll
lret
mov
ja
rcrl
xchg
sub
shrb
aas
icebp
adc
dec
sbb
lds
xchg
jno
out
mov
mov
mov
arpl
push
inc
aam
and
in
or
dec
mov
xchg
repz
rolb
vphaddubw
cli
fisubrl
cwtl
cld
xor
in
lds
leave
negl
inc
mov
pop
lcall
sarb
xchg
xor
loope
dec
sbb
lret
jo
jnp
dec
lahf
icebp
stos
ja
inc
xor
dec
sbb
xor
xor
insb
sbb
stos
hlt
loope
pop
mov
test
pop
lock
xchg
mov
sbb
data16
xchg
sub
jecxz
sub
mov
clc
xor
test
scas
cld
pushf
sub
xor
cld
sbb
outsl
iret
adc
cmp
pushf
mov
or
leave
inc
jo
pusha
push
push
xchg
pop
sbb
rcr
into
stos
aad
pop
jg
lea
sbb
jne
cmp
xchg
sub
mov
nop
pop
xor
cmp
inc
mov
int
and
pop
mov
xor
int
lret
insb
iret
dec
repnz
sbb
xchg
clc
aas
bound
call
push
sub
mov
xchg
jg
int3
and
pop
push
jno
loope
xor
mov
xor
add
mov
adc
inc
sbb
lods
and
loope
jge
add
adc
adc
test
or
sub
pop
shl
jnp
xchg
or
sbb
mov
call
mov
in
sub
adc
clc
dec
or
bound
frstpm(287
dec
ret
push
mov
mov
push
mov
movsb
fs
push
mov
add
mov
lods
cwtl
jl
lahf
dec
push
jmp
add
and
and
pop
into
add
hlt
faddl
inc
dec
aam
rorl
fidivrl
jg
stc
dec
cmpsb
xlat
movsb
dec
jnp
sbb
xchg
pusha
jp
push
bound
jg
cmp
adc
adc
add
insl
ljmp
sbb
stos
mov
mov
sbb
inc
stc
notb
push
fiaddl
pop
scas
mov
aas
jns
jg
neg
jmp
push
arpl
ss
sti
inc
ret
nop
andb
loop
push
jo
mov
push
xchg
les
sbb
repnz
ss
outsl
mov
lods
lods
jno
imul
jle
adc
cmpsl
lock
adc
or
push
dec
in
ds
cmp
std
lock
adc
adc
sbb
decb
dec
xchg
push
add
sub
mov
stos
arpl
jg
dec
pop
push
movb
in
icebp
bound
fidivrs
insl
mov
clc
mov
loopne
rep
outsl
adc
in
push
aas
inc
push
mov
add
pusha
mov
jne
push
mov
cmp
lcall
xchg
add
pop
loopne
dec
dec
sub
stos
dec
stos
test
push
lds
mov
pop
or
cmp
popa
ret
js
lret
sbb
mov
cltd
bound
push
xchg
in
mov
fisubrs
mov
es
fsubrp
rorb
out
mov
jbe
inc
out
jb
cmp
mov
sbb
xchg
mov
test
xchg
push
jl
or
loop
out
push
mov
call
std
lods
xor
lods
or
jmp
fadds
scas
int
scas
outsl
push
addr16
aas
repnz
jp
scas
mov
sbb
dec
pop
mov
xchg
and
repz
pop
and
rcll
orl
loopne
fsubr
sub
or
outsb
sub
icebp
test
ret
jmp
mov
fistps
lds
sub
mov
lea
add
rcll
xor
aad
mov
scas
jne
pop
pop
jno
push
fidivs
pop
push
sub
sbb
lret
fbstp
pop
inc
dec
outsl
cwtl
sub
leave
xlat
iret
adc
in
out
or
scas
pop
mov
or
cmp
mov
adc
cwtl
or
fidivrl
test
fistpl
mov
stos
push
mov
add
xlat
inc
sbb
jbe
aad
mov
push
mov
sub
js
lahf
xchg
add
xlat
mov
mov
add
sub
jge
nop
out
sub
mov
inc
das
mov
xor
sub
fmuls
xor
jmp
pop
dec
mov
ret
js
mov
jno
inc
xchg
loopne
cwtl
nop
inc
mov
test
fucomi
lsl
dec
adc
mov
xor
mov
mov
mov
lcall
push
adc
lods
in
cmpsb
je
and
sbbl
addl
or
popa
xor
call
pop
fnstcw
ret
cmp
xor
scas
jmp
outsb
mov
inc
lds
into
mov
out
stc
shrl
scas
pop
add
popa
ficoml
jle
clc
iret
popa
mov
pop
lcall
flds
mov
lret
sahf
mov
xchg
cmpsl
and
nop
mov
fldt
insl
icebp
ficoms
aam
nop
mov
test
test
shll
sahf
lret
fldl
push
stos
mov
cmp
test
and
mov
and
push
add
dec
les
loop
inc
inc
adc
sub
in
stos
push
sbb
mov
je
fdivl
sbb
pop
mov
ret
data16
xor
mov
adc
shrl
lock
popa
outsb
js
mov
dec
nop
fidivs
leave
icebp
jp
sub
mov
out
inc
hlt
jl
push
pop
addr16
rclb
xlat
mov
fisubrl
jecxz
lea
pop
jno
add
xchg
pop
cmp
inc
adc
adc
jne
sub
inc
inc
data16
lods
lret
int3
mov
and
jp
and
mov
adc
add
into
js
xor
mov
sahf
xchg
sub
xor
psllq
sahf
inc
jmp
xlat
xor
inc
cmp
bound
mov
iret
out
pop
inc
repnz
and
push
xchg
aas
test
faddl
xchg
mov
cmp
xchg
mov
lods
sarl
ret
dec
push
cwtl
ss
test
lods
mov
pop
mov
cmp
inc
repnz
cmpsl
xor
sti
mov
stc
mov
popl
xchg
adc
inc
shlb
add
arpl
cs
imul
cmp
dec
arpl
and
mov
mov
dec
loop
in
insl
lea
movsb
or
aam
pop
fidivs
mov
dec
nop
leave
imul
push
add
jnp
add
dec
sbb
dec
repz
popf
test
test
in
push
ret
and
in
jns
je
lds
sub
cmp
cmp
push
outsl
xor
popf
lret
pop
ljmp
loope
push
dec
pop
cs
adc
and
push
cs
jl
push
mov
cmpsb
aad
sbb
dec
stos
adc
mov
vcvtusi2ss
adc
jecxz
sbbb
loopne
icebp
jle
mov
sub
dec
adc
ret
arpl
in
imul
sub
push
cmp
mov
clc
mov
sbb
pop
dec
int
arpl
sub
mov
fcmovb
into
mov
repz
movsl
cmp
mov
xor
mov
jg
dec
pop
mov
cmp
jns
std
adc
mov
ret
pusha
xor
aam
adc
jmp
lahf
lcall
in
mov
mov
push
sbb
test
mov
je
adc
icebp
cltd
cmpsb
cmpsl
ja
adc
pop
lahf
push
std
pop
ja
fisubl
rorb
daa
loop
hlt
jle
pushf
mov
or
sub
in
fbld
mov
pushf
mov
stc
hlt
movsl
movsl
in
sbb
cmpsl
sti
jbe
lahf
push
add
popf
or
jge
sbb
scas
or
daa
and
cmp
stos
pop
or
add
dec
ret
test
lret
outsb
xor
xor
dec
inc
daa
fisttps
fsubs
sbb
movsb
mov
in
nop
dec
mov
fwait
push
fistpl
mov
mov
pop
mov
mov
sti
mov
cmp
inc
xchg
dec
ret
xchg
sub
fisubs
clc
aaa
adc
or
neg
popf
dec
in
cld
outsl
imul
cmp
int
aas
loopne
sbb
push
xor
test
or
dec
dec
daa
outsb
insb
push
xchg
sbb
loope
pusha
out
filds
lds
jb
sbb
xchg
hlt
add
sub
xor
jnp
sar
xchg
ja
sbb
andb
int3
gs
lcall
fcmovb
jno
fdivl
ror
lcall
icebp
data16
pusha
inc
pushf
and
push
jp
xchg
loop
clc
push
or
aad
xlat
dec
pop
aad
ret
or
mov
bnd
cmpsl
aaa
jb
inc
xor
jecxz
mov
jae
jl
inc
hlt
push
pop
push
test
inc
xchg
std
mov
imull
dec
mov
jns
xchg
cmp
aas
adc
push
orl
jo
cmpsl
insb
shrb
icebp
or
xchg
repz
mov
jae
sbb
mov
xor
sub
fistpll
cmpsb
cmp
mov
dec
ret
add
fstps
cmp
jp
inc
ss
inc
cmp
loopne
sub
mov
pop
lea
mov
lods
lock
xchg
fs
mov
xchg
leave
push
pop
sbb
fsubr
jmp
decl
pop
xchg
xor
and
push
rcll
jge
es
jo
stos
sti
xchg
jg
les
mull
adc
push
push
push
daa
rolb
ss
and
loope
movhps
push
sub
xor
int
cmp
xchg
out
mov
cmp
mov
cmp
cmp
jnp
adc
xchg
jae
lahf
inc
inc
mov
repnz
sbb
ss
mov
dec
xchg
pop
outsl
in
iret
and
cmp
jne
and
pop
sahf
shlb
loope
sub
into
and
jge
adc
pop
outsb
xchg
push
loope
fsubp
inc
or
in
adc
push
or
in
jge
pop
jnp,pn
or
ss
outsb
jnp
and
lret
inc
jno
push
hlt
dec
stos
imul
call
xchg
push
test
stos
fcomp
mov
xchg
pop
int
push
cmp
sti
push
cwtl
push
pop
mov
mov
and
aam
rcl
cmp
movsb
adc
insb
add
gs
lahf
fs
dec
mov
imul
fisubs
loop
push
aas
ljmp
fidivrl
out
and
inc
movsb
in
popa
rcrl
mov
xor
int
movsb
mov
lret
scas
iret
mov
or
xchg
sbb
and
mov
js
adc
stc
cwtl
outsl
xchg
loopne,pn
mov
repz
daa
ret
movd
insb
ret
clc
arpl
adc
add
sub
js
sub
dec
test
iret
add
dec
not
stos
cld
pushf
mov
out
cli
mov
pop
insl
loope
xor
mov
and
call
add
push
sub
cmpsb
jnp
pop
lods
sub
lret
les
les
out
sbb
pop
fisttpl
clc
out
jecxz
dec
jne
xchg
out
int
xchg
aas
mov
dec
test
push
xor
sub
testl
mov
inc
push
xchg
mov
jl
push
out
pop
lret
adc
adc
daa
nop
mov
pop
cmpsl
adc
ljmp
or
fdivrs
shll
fucomp
rolb
lret
sub
test
mov
push
cmp
out
orl
and
mov
jns
or
cmpsb
mov
sub
pusha
xchg
add
inc
xor
jmp
dec
mov
mul
mov
pop
jecxz
imul
xor
mov
les
add
add
outsb
xor
cmpsl
mov
jecxz
arpl
arpl
lds
sbb
or
in
repnz
mov
mov
inc
jge
sbb
jl
ljmp
shrb
push
jecxz
jno
and
lods
mov
es
and
ja
mov
inc
sti
popa
add
dec
dec
in
pop
mov
std
cwtl
ja
push
and
cwtl
into
cmp
out
jg
sbb
push
out
mov
adc
inc
inc
insb
insb
jae
pushf
add
cs
cmpsl
xor
das
popa
xorb
jge
mov
push
xlat
cld
push
push
ret
ret
scas
mov
arpl
adc
pop
cmp
sbb
dec
adc
jnp
and
fildll
or
xchg
adc
stos
inc
or
imul
jnp
push
or
mov
cltd
or
and
dec
scas
pop
mov
xor
push
push
cs
or
ja
shr
push
pop
mov
sahf
adc
movups
xor
psrlq
cmpl
faddl
jae
scas
inc
push
popa
add
push
test
imul
ljmp
xor
push
xchg
adc
lods
mov
repnz
or
clc
orb
icebp
fwait
sbb
inc
adc
shr
push
cltd
mov
rorl
outsl
pusha
insb
dec
mov
cmp
frstor
pusha
divb
push
dec
sbb
dec
inc
movsb
ja
jbe
data16
push
push
and
cmpsl
jbe
insl
les
popf
fiadds
arpl
ss
nop
ja
add
jbe
mov
mov
ds
and
aas
sbbl
test
inc
in
jg
mov
cli
jnp
mov
mov
push
adc
out
lods
cli
ret
bound
xor
mov
std
and
mov
popf
cmpsl
orb
cmp
shll
ljmp
fsubrs
in
pop
inc
push
xchg
jno
mov
xor
lods
jne
into
int3
xchg
pusha
loop
inc
lods
jae
movb
pop
jae
jbe
fidivs
icebp
dec
cmp
cmp
out
mov
and
push
fiaddl
nop
push
inc
mov
sbb
mov
es
jnp
iret
mov
stos
stos
or
jb
fcoms
aad
xchg
stc
pop
mov
mov
dec
jl
or
sbb
ljmp
cmpsb
in
mov
outsb
or
ja
mov
popa
inc
xchg
jecxz
mov
sub
fmull
or
mov
mov
popf
movsl
mov
lahf
lock
clc
adc
rolb
cmp
push
inc
popa
cmpl
sti
call
je
in
inc
jl
cmp
mov
popf
push
scas
adc
xchg
movsl
lds
cli
pop
jbe
push
inc
inc
sbb
inc
push
fisubl
cmp
and
cmpsl
push
or
loopne
mov
xor
cmp
inc
roll
add
cwtl
mov
mov
cmp
sti
pop
inc
pusha
rolb
add
adc
aaa
push
insl
inc
out
rcl
add
add
fcmove
xor
sub
inc
addb
out
jae
jp
xchg
lds
out
repz
insl
or
pop
push
lods
lcall
ret
jle
call
loop
adc
mov
in
shrb
xor
dec
xchg
cld
jae
outsl
rcll
add
mov
je
cmpsb
xor
or
call
adc
jecxz
enter
std
scas
dec
popa
das
xchg
push
ljmp
pop
mov
dec
decl
jmp
hlt
push
test
imul
mov
adc
jne
and
in
jne
jp
cli
mov
mov
pop
ja
mov
sub
arpl
add
cmpl
out
jle
int
jo
sahf
lods
into
cli
test
lret
push
pop
rclb
xor
cmp
aam
or
sti
or
dec
inc
jo
jbe
enter
xchg
lret
xor
lcall
sub
or
lret
pop
dec
add
xchg
sbb
adc
or
and
adc
jmp
xchg
adc
enter
and
nop
xlat
mov
fwait
lock
adc
sahf
ds
sbb
pop
call
cmp
or
outsb
lea
jmp
mov
fwait
push
shl
arpl
adc
add
sub
stc
push
inc
mov
xchg
mov
jns
das
js
ja
outsb
ret
shl
mov
mov
cmp
adc
in
pop
test
jmp
fucomi
dec
js
emms
pop
xchg
xchg
cltd
ds
repz
repz
nop
lods
orb
fbld
push
push
fimull
adc
cmp
ja
inc
sub
pop
repz
xchg
cwtl
add
ror
lods
mov
mov
dec
push
nop
imull
clc
testb
inc
push
sbb
add
test
fs
push
mov
push
imul
data16
mov
jp
js
cmc
and
inc
fimuls
fistl
mov
and
ficoml
dec
mov
loopne
call
mov
sahf
mov
mov
xchg
int3
aam
jp
jbe
fmuls
cld
gs
sbb
int3
pop
sbb
add
sbb
push
dec
subb
fnstsw
scas
in
icebp
imul
pop
mov
mov
and
lock
ffree
xlat
cld
out
sbb
adc
cmpb
jle
jle
inc
iret
adc
push
ficomps
shrb
sbb
imul
and
jecxz
add
xchg
mov
aad
mov
xor
mov
popf
jmp
iret
mov
dec
jge
daa
mov
cmp
inc
outsl
xor
pop
cli
lahf
loope
push
sbb
pop
aad
dec
pusha
cmp
cmpsb
pusha
dec
add
push
mov
jno
xor
fwait
push
xchg
rorb
mov
inc
or
jle
repnz
dec
into
insb
lods
shlb
pop
int3
push
and
or
xor
and
addr16
fisttpl
jmp
fldt
mov
mov
sub
in
ja
pop
inc
pop
aaa
cmp
xchg
les
inc
stos
and
iret
insb
test
fnstcw
iret
sub
outsb
dec
clc
mov
cmp
xor
add
ss
push
push
or
rorb
rcll
cmp
xchg
cmp
push
sbb
or
inc
mov
sub
insl
cmpl
and
in
cwtl
pop
or
repnz
dec
cmc
sbb
add
mov
hlt
and
stos
push
pop
lds
test
movsl
bound
cmp
push
adc
inc
or
and
mov
aam
xchg
repz
ret
data16
cli
sar
scas
pop
test
mov
outsb
mov
push
int3
rclb
sahf
jo
jmp
mov
mov
xchg
mov
cmp
mov
mov
test
mov
lcall
mov
inc
jns
sub
fisttpl
sti
inc
sub
pop
fs
stc
mov
fistpll
cs
rolb
pop
push
aas
xchg
add
aas
xor
aaa
push
je
mov
ds
in
dec
cmp
add
mov
xlat
mov
popf
adc
inc
sahf
add
nop
pop
int
push
inc
icebp
jl
pcmpeqw
inc
push
xchg
shlb
popf
sub
xchg
pop
jae
cs
ss
or
mov
push
pop
lds
cmp
xchg
dec
or
jle
sub
bound
mov
scas
sub
xor
dec
test
mov
push
lcall
mov
shlb
idivl
and
push
mov
push
xlat
bound
out
lods
lock
call
pop
repnz
pop
test
in
pop
lods
mov
js
sub
cwtl
inc
mov
or
into
push
pop
add
sti
jge
dec
xor
fmull
ret
xor
dec
mov
sub
mov
loope
sti
pop
push
cmpsl
mov
adc
outsl
pushf
adc
data16
xor
lods
xor
aas
enter
orl
xchg
sbb
cmp
das
mov
int3
lods
sub
pop
fsubp
scas
je
add
adc
das
jno
xchg
iret
or
int3
pop
xchg
lods
test
repnz
xchg
icebp
insl
lods
repz
in
sub
stos
mov
jne
imul
inc
aaa
sub
jge
inc
xchg
hlt
pop
mov
cmpl
or
mov
inc
push
sbb
mov
mov
mov
icebp
addb
xor
or
int
icebp
jle
mov
push
fisubrs
jmp
pop
adc
aaa
inc
sarb
sbb
cwtl
pop
es
iret
lret
pop
pop
aam
jecxz
test
or
ljmp
push
jg
inc
fcoms
or
dec
push
inc
and
add
into
outsl
mov
adc
inc
daa
jne
inc
mov
mov
popa
fcmovbe
addr16
add
ja
add
xchg
inc
stos
rorb
stos
dec
das
push
into
loope
cmp
outsl
push
xlat
and
mov
sbb
test
lret
test
jg
orb
add
fsubp
movsb
pop
mov
cmp
addr16
pop
scas
cmp
outsb
adc
cmc
mov
and
ja
push
xor
xor
xchg
loope
sahf
aas
jnp
loop
fnstenv
cwtl
lea
dec
in
add
fsubrl
cs
lods
add
mov
mov
xchg
ret
mov
push
call
das
das
pop
lds
repz
in
sub
jno
pop
fimull
add
push
les
cmc
push
jl
cmp
hlt
pop
lods
pop
roll
xchg
dec
and
sub
icebp
push
mov
pop
arpl
mov
add
sbb
xchg
icebp
and
std
loop
sti
mov
add
fiaddl
push
jg
int3
scas
xchg
clc
mov
daa
xchg
push
jg
ja
cmp
iret
popa
xchg
filds
das
cmp
mov
sub
mov
mov
cmp
mov
mov
lret
mov
add
repnz
ss
iret
jp
inc
les
daa
stc
and
or
enter
mov
fisttps
dec
add
dec
mov
stos
aaa
lahf
in
and
cmpsl
imul
in
popf
push
or
dec
loop
aam
jo
mov
sub
je
push
push
mov
test
leave
lods
iret
mov
int3
les
cmp
pop
psubw
xor
cmp
ja
mov
inc
imul
pop
xor
xor
mov
outsb
lods
xor
cld
test
sbb
push
mov
fisttpll
mov
stos
inc
xchg
pop
xor
popa
push
rcrb
aad
setnp
clc
and
outsb
faddl
rcrb
push
sub
testl
lcall
pop
or
int
dec
sbb
sbb
push
dec
push
jo
fnstsw
daa
test
ss
imul
mov
daa
jne
xor
jns
cltd
inc
pop
arpl
cmpl
inc
int
cmpsb
lock
fsubr
lret
es
jae
rcrl
test
or
jmp
jns
jecxz
faddl
add
cmpsb
fwait
test
fistps
pop
xor
cmpsb
scas
push
ret
xchg
andl
mov
sbb
mov
mov
movd
sbb
divl
and
jmp
mov
push
fildll
test
rcr
je
mov
push
std
aas
nop
lea
cmp
pop
mov
dec
xchg
mov
test
jae
popa
inc
fnstenv
inc
test
cmp
mov
pop
xchg
popa
stos
test
inc
bound
inc
stos
imul
fs
jo
das
aaa
arpl
mov
and
mov
pop
pop
add
adc
add
lret
cltd
lret
lock
or
and
mov
or
imul
and
adc
mov
pop
js
dec
iret
stc
jae
mov
loop
aam
notb
sbb
outsl
adc
add
dec
popa
in
xchg
sbb
icebp
push
or
and
push
mov
je
mov
dec
lret
sbb
push
pop
cmpb
mov
daa
pop
aam
test
gs
mov
sbb
adc
pop
push
xlat
pop
aad
test
push
out
out
test
pushf
popa
es
clc
fmull
sti
notl
enter
jns
arpl
mov
xchg
cld
pop
fwait
dec
mov
fists
stos
cmp
mov
rcr
push
les
loop
aas
xchg
mov
cmp
aam
out
pop
ljmp
lcall
cmp
jmp
fmulp
out
sub
cmp
aas
rclb
pop
xor
std
nop
adc
frstor
dec
cmp
jns
adc
shll
lahf
imul
sbb
adc
xlat
std
mov
cmp
lods
adc
ror
std
loopne
mov
sahf
int
mov
lods
and
xchg
pop
nop
ljmp
mov
mov
sbb
sahf
mov
mov
in
sub
inc
pop
fldenv
xorl
hlt
lret
sub
inc
dec
pop
or
loope
test
push
adc
jg
mov
lahf
outsb
push
dec
pushf
test
xchg
dec
or
add
adc
xor
shl
aad
sub
cmp
xchg
dec
negb
into
inc
jne
cmp
repz
mov
test
jle
out
inc
jb
mov
jp
push
xchg
iret
fildll
adc
insl
cli
imul
jb
sub
xchg
fdivp
cs
adc
and
mov
xor
sub
dec
jg
shll
rolb
pop
adc
cmpb
jmp
sub
test
je
fstps
es
and
cwtl
or
daa
fmuls
jg
mov
xor
mov
cmp
xor
js
movsb
js
sbb
outsb
ret
cmp
sti
es
fimuls
sbb
mov
jle
pop
lods
and
aaa
fisttpl
mov
mov
cmp
jb
cs
mov
push
pop
sub
inc
or
fwait
jne
sub
cmp
cmovne
dec
push
and
jno
push
mov
xorl
xchg
out
rolb
adc
loope
mov
leave
mov
out
or
dec
cli
cmpl
test
cld
hlt
dec
insb
cmp
add
jno
test
push
jae
and
push
cli
out
mov
lcall
dec
dec
mov
or
lds
add
jmp
pop
loope
stc
cmp
ret
test
sub
ljmp
lahf
popf
out
js
in
test
es
js
scas
and
and
inc
pop
out
fnstenv
push
mov
out
mov
sbb
cmc
mov
out
in
leave
movb
inc
dec
or
cmp
cmp
jg
pop
or
sahf
push
mov
std
mull
inc
je
dec
jmp
cli
adc
xchg
jge
sbbb
in
jno
sbb
cmp
sub
jb
add
add
or
mov
sub
and
adc
mov
lcallw
ljmp
dec
loopnew
mov
sub
daa
test
dec
in
cmp
inc
jae
mov
xchg
xor
aad
imul
testl
mov
fldl
pop
jl
xchg
shrb
inc
xor
mov
sbb
stc
mov
xor
fmulp
jmp
mov
int3
xor
inc
mov
popa
push
enter
imul
cmpsb
dec
stos
inc
or
je
xor
daa
in
mov
cmp
imul
add
or
adc
push
sub
outsb
arpl
pop
mov
and
cmp
add
add
lock
mov
mov
in
pop
inc
je
mov
and
jns
push
inc
loopne
movsb
in
xor
cmc
sarb
or
sub
roll
adc
sbb
insb
mov
insl
pop
cld
cmp
aam
pop
cmp
or
jno
inc
stos
mov
mov
mov
sub
sbb
xchg
in
sbb
dec
loop
fdivs
std
negb
lods
movsb
js
mov
pop
and
iret
movl
call
pop
mov
and
and
ljmp
aad
bound
stos
xor
clc
mov
mov
adc
lods
ret
xor
or
ljmp
fmull
push
xchg
mov
inc
mov
mov
aad
ja
hlt
dec
inc
jmp
in
in
sbb
push
pop
pusha
outsb
inc
enter
insl
fmulp
jb
addr16
xchg
cmp
cmp
es
andl
mov
loopne
les
je
jno
xor
repz
sub
and
cmp
pushf
cmc
xchg
cltd
loop
pop
xchg
and
shl
mov
jl
pop
stc
pop
mov
iret
outsb
cltd
sbb
cs
lock
jo
rcr
loopne
cli
mov
dec
cld
out
sarl
adc
cmp
cmpsb
out
in
xor
int3
idivl
mov
pop
push
xchg
imul
and
sub
inc
mov
loopne
mov
mov
scas
push
xor
ret
mov
sbb
ss
push
bound
sub
cwtl
int3
imul
mov
push
xchg
and
xchg
out
notb
push
sub
and
das
jns
mov
xor
push
jmp
scas
jbe
bound
cmp
nop
rorl
cld
hlt
das
sbb
adc
fs
xor
sub
in
rolb
jb
imul
enter
adc
xchg
outsl
adc
or
std
or
jno
push
lea
movsb
stc
aam
lea
stos
in
fldt
sbb
fldenv
mov
jbe
jmp
outsl
cmp
push
mov
pop
test
movsb
in
fldenv
fcoml
xor
shlb
stos
dec
scas
gs
lret
jne
aad
mov
imul
jbe
inc
mov
inc
mov
ret
push
lret
xchg
mov
dec
cltd
pop
pop
inc
divb
push
enter
and
cmp
call
sbb
arpl
inc
inc
loop
adc
cli
mov
pop
mov
dec
out
add
ljmp
rorb
mov
dec
or
mov
jg
cmp
int3
cmp
xchg
pop
lret
shl
mov
xlat
xor
xchg
sahf
lock
nop
hlt
cmp
stos
ret
rorl
or
mov
clc
push
add
dec
enter
push
sahf
test
imul
shlb
add
or
lea
inc
int
dec
adc
xchg
fiaddl
jo
in
push
lahf
dec
mov
fisttpll
xchg
lea
clc
imul
shl
adc
ljmp
push
jmp
das
adc
out
notb
mov
out
and
pop
ja
cmp
in
pop
add
push
inc
jmp
xchg
xchg
imul
dec
pop
lods
jo
inc
mov
cld
les
and
cmp
testl
jne
movsl
fcomps
sub
mov
xchg
cmp
nop
lcall
mov
lods
sbb
fnstsw
jle
inc
sub
adc
pop
sahf
mov
das
push
sub
test
xchg
inc
scas
nop
xchg
dec
jg
das
jecxz
insl
fucom
negl
pop
leave
or
std
fistl
ljmp
mov
adc
pop
hlt
leave
fcoms
fdivs
stos
das
daa
mov
mov
fucomp
test
daa
pusha
mov
in
test
in
pop
sub
into
jo
mov
cmpsb
in
aam
sbb
push
test
pop
mov
jno
fs
jl
or
push
cmp
into
add
fstps
les
aam
not
mov
dec
inc
fmulp
mov
add
sbb
outsl
imul
movsl
rorl
dec
adc
inc
mov
mov
xchg
pop
or
inc
xor
mov
cmp
cwtl
mov
imul
inc
sbb
in
aaa
and
sahf
dec
push
fs
fs
divb
dec
and
out
outsl
loopne
test
push
push
mov
push
inc
out
shl
test
pop
cmp
or
or
mov
dec
add
rol
addl
imul
push
mov
jne
mov
xlat
adc
leave
outsl
shll
fcoml
jecxz
movsl
jle
dec
jl
inc
lock
and
xchg
cmc
jno
jns
sbb
push
scas
cmp
scas
hlt
sbb
push
sbb
push
mov
subb
fbstp
or
cmp
push
mov
enter
outsb
outsb
mov
mov
fldt
fnstsw
add
fistpl
fdivrs
rcl
subb
mov
out
into
dec
test
xchg
mov
ljmp
add
popa
andb
sub
icebp
stc
inc
push
sbb
fidivl
lds
jg
xor
movsb
xchg
fwait
and
popf
popa
pop
test
inc
push
xor
dec
shll
ret
jmp
dec
jae
daa
pop
jne
int3
aam
pop
out
test
xor
dec
xchg
mov
inc
mov
push
out
push
negl
mov
or
jmp
dec
clc
and
fbld
xchg
cwtl
fmuls
daa
inc
cmp
sub
push
js
loopne
dec
mov
sbbl
rorl
jo
add
cmp
xor
rcrl
mov
pop
mov
iret
lcall
gs
mov
andb
pop
mov
stc
cmp
xor
push
push
stos
icebp
inc
cs
loope
or
pop
cmpsb
lods
xchg
pop
je
adc
fwait
cltd
or
cltd
jecxz
aad
pushf
aaa
in
add
dec
out
movsl
mov
insb
or
pop
push
fucomp
test
jb
cwtl
push
sahf
xchg
adc
jg
sbbl
outsl
inc
pop
rorb
and
pop
pop
push
mov
sbb
mov
insb
gs
enter
mov
sub
sbb
adc
int3
call
int
pop
xchg
mov
in
les
lret
call
and
lock
sub
subb
adc
or
in
lods
xchg
out
lcall
ret
push
fdivs
cmp
fnstcw
into
fcmovbe
and
xor
add
movsl
mov
jbe
and
out
and
inc
and
mov
cltd
mov
pop
xchg
out
iret
cmp
shll
adc
jo
lcall
push
pop
push
mov
jle
cld
dec
jmp
mov
nop
inc
out
cmpsl
imulb
adc
jge
sbbb
pop
inc
cmp
pop
mov
daa
mov
cld
and
mov
cwtl
fnstcw
jl
call
sub
cmp
insl
lcall
test
mov
sub
push
pushf
lea
mov
scas
mov
push
push
add
jo
iret
sub
addb
out
mov
icebp
out
mulb
loopne
rorb
aas
jmp
in
test
dec
adc
lret
xchg
mov
ret
adc
js
fcmovu
adc
dec
bound
pop
gs
jnp
mov
adc
enter
es
gs
gs
jns
push
faddp
cmpsb
out
jae
push
sarb
dec
jmp
inc
shrl
outsb
das
xor
push
std
sbb
fiaddl
sub
shll
push
jmp
push
std
stc
outsl
leave
int
test
test
test
je
inc
xchg
subb
or
mov
insb
imul
xchg
loopne
fcmovnu
fs
out
dec
out
inc
push
mov
or
rcrb
mov
and
mov
and
mov
inc
add
pop
xor
pop
jl
pusha
stos
inc
sbb
out
dec
xor
mov
fcompl
pop
pop
addr16
mov
add
add
fisubrs
xor
test
xchg
mov
sbb
or
ficompl
mov
inc
jnp
pop
sub
stos
or
std
pop
std
rolb
iret
inc
pop
rolb
sub
lea
cmp
sub
insl
and
mov
xor
push
sbb
fs
lods
iret
pop
jl
sub
xor
insl
jo
repnz
addr16
pop
in
and
cmpsl
addl
call
scas
inc
and
cs
pop
hlt
repz
adc
mov
ret
ljmp
fbld
mov
fldcw
jno
stc
inc
std
dec
ret
mov
cltd
mov
bound
repz
mov
mov
cmpsl
out
jns
jecxz
ret
or
test
add
xor
or
int
or
cmpsb
pop
mov
mov
push
ljmp
icebp
mov
shrb
gs
adc
movsb
and
lods
or
jb
movsl
ljmp
test
call
ljmp
clc
xchg
push
jns
es
out
jbe
loop
push
lret
xor
hlt
addl
xchg
add
popf
arpl
out
lret
cli
inc
movsb
daa
xchg
loopne
cmp
icebp
loopne
shll
mov
in
add
out
ffreep
lret
adc
cmp
jae
ljmp
pop
aaa
lcall
insb
cmc
dec
or
movsl
jbe
out
push
ds
je
and
or
or
loop
mov
push
push
into
pop
mov
rol
mov
lock
iret
xchg
mov
or
add
cmp
out
mov
fwait
xor
and
ret
inc
jp
loopne
pop
stos
jl
xchg
sub
aam
mov
inc
loope
int
mov
mov
mov
fbstp
aam
or
mov
sbb
pop
mov
cwtl
aad
movl
std
mov
push
push
insb
stc
stos
sub
pop
out
mov
aam
out
xchg
das
pop
push
or
popf
shlb
lea
mov
xchg
fisttps
xchg
jecxz
xchg
mov
cmpb
cltd
lret
adc
icebp
lahf
popf
adc
insl
pop
pop
iret
pushw
mov
aad
std
push
sub
or
or
nop
pop
loop
cmpsl
mov
and
repnz
leave
arpl
mov
xchg
xchg
jle
or
dec
fisubs
cld
sbb
int
pop
stos
or
and
imul
push
aas
int3
mov
loopne
or
dec
fistl
dec
sub
dec
push
mov
ja
js
ret
repnz
je
in
pop
sub
stos
adc
push
push
jp
mov
sbb
addr16
lock
gs
pop
sbb
mov
adc
push
push
sbb
lahf
push
in
sbb
int
andb
xchg
mov
jnp
in
fcoms
and
lret
lds
mov
push
scas
and
mov
imul
mov
add
push
xchg
xor
adc
sub
sbb
mov
and
sbb
or
jmp
jge
cltd
jge
jbe
lret
sbb
sub
jmp
div
test
jecxz
adc
outsb
rolb
mov
lock
sbb
clc
fisttpll
mov
dec
sarb
sbb
sbb
or
jb
rorl
pop
out
sbb
mov
push
or
dec
mul
fdivs
cltd
pusha
and
icebp
sub
pushf
loop
faddl
add
mov
adc
sbb
jg
lock
jl
push
cmp
stos
mov
syscall
add
flds
jl
xor
mov
mov
enter
fsubl
and
add
dec
inc
jmp
adc
mov
mov
js
idiv
inc
cmp
or
jns
xchg
icebp
sbb
sbb
mov
outsb
add
pop
cli
xchg
rcll
or
aad
dec
fsub
mov
inc
push
test
cli
hlt
movsb
sahf
out
cmpsb
xor
pop
jg
push
sub
lret
push
pop
sbb
jae
cld
popf
iret
jg
mov
dec
ret
out
jle
mov
cmp
inc
daa
cmp
sub
rcr
sbb
mov
ja
xor
xor
dec
mov
lret
pusha
dec
fs
incl
adc
mov
lahf
adc
arpl
lea
aas
clc
jbe
add
push
rorb
cmc
jmp
xchg
scas
cmpsb
fisttpll
mov
or
ds
inc
push
xchg
icebp
push
je
aas
push
push
mov
stos
scas
fidivrl
pop
jp
add
stc
and
imul
outsb
push
lea
adc
cmp
shll
dec
inc
shll
mov
sbb
cmp
adc
out
mov
adc
sub
inc
cmp
mov
xor
jno
int3
inc
or
mov
and
adc
pushf
push
cmpsb
xor
shrb
jo
je
xchg
fwait
insb
jge
addr16
scas
push
pop
mov
jge
sub
or
xlat
lret
xchg
mov
adc
loopne
imull
out
push
mov
adc
inc
cli
stc
jmp
test
mov
mul
hlt
and
mov
and
mov
and
xor
inc
add
mov
mov
xchg
sub
xchg
notb
jle
fstpt
out
addr16
mov
fwait
xlat
xchg
or
xchg
js,pt
rorb
imul
push
rcll
outsl
mov
std
call
pop
ss
sub
push
aas
cmpsl
js
dec
fists
inc
in
stos
loopne
mov
inc
aad
pop
inc
jmp
jne
lret
mov
movaps
xchg
mov
xchg
xchg
jno
dec
jle
mov
pop
jae
ffreep
mov
and
pusha
push
les
ja
ficompl
sub
fs
push
inc
clc
cmp
movsl
icebp
pop
cli
into
inc
push
mov
and
cs
mov
cmpsl
arpl
dec
mov
add
push
push
outsb
shll
arpl
mov
jae
inc
aad
or
stos
cmp
sbb
jbe
aam
loope
xor
out
adcb
pop
ss
pop
xor
movsb
xchg
leave
lods
ret
push
adcl
fwait
sub
cmpsb
and
or
mov
ret
cli
cmpsb
mov
cmp
mov
mov
inc
and
and
mov
in
cli
int
insb
pop
insl
push
out
pop
out
jbe
sub
cs
in
movb
xor
push
jle
fisttpl
lcall
popf
test
cmp
jno
lods
xor
jne
push
or
arpl
adc
pushf
dec
insl
insw
dec
pcmpeqd
push
popf
es
adc
ds
inc
mov
test
out
sti
mov
cwtl
push
lock
test
sbb
fwait
jl
lods
in
cmp
sbb
xor
inc
icebp
addl
push
mov
test
lret
shl
in
addl
add
repz
jecxz
in
dec
xchg
jne
gs
add
rorl
sub
jo
pop
psrlq
xchg
in
fcomp
sahf
arpl
xchg
adc
iret
pop
icebp
xorl
int
cli
repz
scas
mov
or
test
fcmovu
mov
fcomip
mov
js
mov
pusha
je
xchg
jae
add
push
pushf
leave
out
lea
xor
test
lret
sbb
jle
scas
imul
stc
cmp
xchg
movsl
lea
cmp
fldl
in
or
repz
out
mov
inc
enter
cwtl
jnp
call
fcmovnbe
arpl
andl
pop
mov
in
test
inc
cmp
push
stos
int
add
mov
les
sub
sbb
test
inc
ljmp
add
out
mov
les
in
jnp
push
fmul
sbb
mov
std
test
popa
cmpsl
push
or
xor
xchg
push
divb
xchg
cwtl
movb
in
mov
jmp
dec
and
adc
cld
or
pop
xchg
fisttps
loope
push
cwtl
cmp
lcall
inc
lahf
cmc
mov
mov
mov
icebp
push
sbb
dec
lret
add
scas
or
jl
mov
ror
push
mov
sti
loop
loope
lods
inc
mov
mov
icebp
sbb
dec
cmovg
stc
sbb
aad
inc
or
mov
rol
jp
fdiv
pop
and
popf
in
cmp
test
dec
xchg
lcall
jb
push
jne
add
inc
xor
mov
les
notb
add
push
lods
pop
mov
in
out
jle
imul
adc
arpl
mov
ficompl
pop
ds
xorl
dec
or
xchg
mov
mov
lcall
lcall
les
repz
lods
aaa
aam
in
xor
sub
rolb
imul
leave
sti
jg
push
test
xor
cltd
sti
sbb
dec
sbb
adc
cmpb
bound
and
lods
pop
lcall
mov
sbb
push
out
jecxz
pop
push
shl
jmp
popa
jmp
or
jecxz
and
mov
sbb
mov
xchg
fistpll
push
cwtl
negb
cmpb
adc
arpl
and
jl
push
or
outsl
cltd
daa
adc
ss
pop
pop
xchg
mov
mov
mov
jle
jno
daa
in
movsl
xchg
jae
and
cmpsb
inc
cmp
mov
push
cli
test
stos
dec
cmpsl
inc
cmpsb
dec
jno
cwtl
stos
mov
cmpsl
push
ds
pop
sub
xchg
or
repz
pop
jecxz
mov
into
cmp
daa
push
into
movsb
scas
sbb
sbb
jnp
xorl
outsl
or
xorl
mov
test
pop
lods
leave
mov
add
sub
iret
in
xor
or
adcl
sbb
std
sahf
aas
stos
dec
pop
xor
arpl
inc
popf
aam
movsl
ja
arpl
pusha
or
lods
pop
adc
adc
je
cltd
clc
repnz
cmpsl
sub
jg
rorl
filds
stos
lcall
mov
and
or
adc
mov
orl
push
or
mul
cmp
roll
mov
dec
dec
into
pusha
outsb
xor
std
outsl
repnz
add
xchg
out
adc
pop
bound
mov
mov
add
inc
push
sub
scas
push
outsb
movsl
std
cmp
hlt
clc
popf
pop
adc
mov
sbbb
ret
stc
mov
stos
add
push
dec
fnsave
out
xchg
and
mov
ret
imul
dec
sarl
push
movb
stc
hlt
shr
sbb
es
push
sahf
sbb
ds
int
push
sti
jnp
pop
inc
jmp
addr16
movsl
sub
enter
xlat
aas
push
sub
imul
or
aaa
lret
push
xchg
stos
mov
add
aam
adc
into
lret
aam
lods
cmp
shlb
add
scas
mov
negb
ret
pop
fsubl
subb
scas
imul
out
stos
int3
es
cs
sbb
or
add
insl
mov
stc
xchg
stos
lcall
insb
xor
dec
shrl
push
or
in
shll
mov
mov
fiadds
sub
pushf
mov
pop
fsubl
push
adc
movsl
pop
fucomip
push
jp
push
cwtl
lea
xchg
mov
je
decb
and
fsub
add
jbe
xchg
add
js
xchg
outsb
gs
bound
test
je,pn
adc
or
xchg
into
inc
ss
xor
fwait
xorb
popf
aam
js
stos
std
jb
push
cwtl
mov
imul
data16
outsb
scas
gs
fwait
pop
inc
cmpb
dec
and
push
sbb
insb
mov
or
into
xor
arpl
mov
pop
rolb
mov
jbe
inc
jecxz
sub
ret
pop
lds
arpl
pop
sub
mov
hlt
inc
adc
test
sub
scas
repz
xchg
mov
sbb
les
cmc
sub
push
pop
stos
sbb
paddusw
scas
in
cmp
lret
shll
and
mov
loope
test
fs
imul
lret
xor
push
fidivs
xchg
mov
scas
sub
out
ja
cmp
sbb
cmp
cld
cli
bound
cmpsb
mov
cltd
stc
push
mov
or
xor
pop
add
outsb
or
push
addr16
mov
bound
adc
jl
mov
cmp
movsl
and
and
mov
loope
jns
xchg
test
cwtl
mov
and
mov
adcb
lret
push
inc
xor
sub
mov
shlb
shrl
or
jl
mov
push
jbe
nop
jbe
mov
mov
imulb
fwait
cwtl
enter
in
pop
stos
xchg
ficoml
cmp
rcll
in
push
adc
push
test
fcoml
dec
es
ret
mov
cmp
jns
lock
jmp
js
fmuls
mov
cwtl
sub
or
out
xchg
int
repnz
push
jl
les
mov
ds
insb
jg
cmp
sub
mov
mov
add
push
sbb
inc
cmp
mov
mov
push
popa
sub
data16
mov
jmp
and
repz
nop
mov
lcall
stc
arpl
jb
jle
test
mov
xor
ds
iret
mov
es
jl
popf
dec
and
pop
clc
fiadds
hlt
movl
scas
pop
xchg
shrb
jge
fidivrl
sub
cmp
repz
ss
push
add
xor
stos
mov
and
rolb
scas
pushf
sbb
jmp
mov
fstpt
out
lea
pusha
adc
lret
mov
add
test
push
cmp
popa
xchg
jno
in
sti
xchg
shll
mov
imul
jo
add
je
sbb
inc
dec
outsl
popf
cmpsb
or
dec
jmp
rcl
adc
inc
outsl
nop
xor
mov
test
push
push
cmpb
dec
shll
fwait
mov
and
js
scas
mov
adc
jmp
mov
jne
mov
addb
enter
aaa
dec
bound
test
lcall
sub
xchg
xchg
nop
mov
pushf
lds
in
cmpsb
cmp
adc
vpcmpgtw
insl
js
sub
jno
push
enter
sti
mov
sub
std
sub
push
and
and
imul
hlt
jno,pn
inc
push
insl
call
scas
pop
ret
xchg
mov
movsb
dec
push
xor
mov
and
or
mov
dec
pop
fsubs
jne
pop
fnstenv
sub
icebp
adc
jl
cmp
test
sti
scas
inc
xchg
xor
clc
inc
inc
jo
xchg
lea
ror
out
rorl
cmp
lahf
ret
into
lea
xchg
adc
test
lahf
lret
in
push
push
stos
pop
pop
dec
mov
adc
js
mov
dec
sub
testl
and
mov
dec
mov
fwait
push
sbb
dec
movsb
inc
aam
or
sub
cmp
mov
xor
pop
or
cmc
test
aas
mov
js
or
pusha
mov
iret
cmp
or
repnz
rorl
imul
fwait
jp
pop
or
shll
lods
outsl
lock
arpl
mov
mov
mov
test
cmp
loopne
or
insb
sub
xchg
cltd
data16
or
mov
scas
sahf
stos
or
pop
lods
mov
pop
lret
ss
ja
fstl
xchg
call
and
iret
testl
orl
out
jge
pusha
pop
push
sub
imulb
cld
mov
int3
push
jl
add
add
scas
fsub
js
xlat
pop
sub
stc
test
cmp
pop
imul
icebp
fldl
sub
cmc
mov
xchg
fstp
mov
jbe
push
out
bound
jno
pop
lea
and
adc
jo
out
popa
fimull
mov
or
push
or
popa
test
pop
in
jbe
loopne
xchg
push
adc
xor
rol
pop
mov
pop
arpl
scas
cmp
or
mov
xchg
adcb
push
addr16
sub
loop
pusha
inc
loope
inc
into
xchg
push
jle
es
les
mov
cmc
push
xchg
jnp
xlat
cld
or
cli
cmpl
or
adc
inc
xchg
lahf
fmull
int
aad
push
icebp
mov
pushf
mov
add
fnstsw
xor
in
push
push
test
add
hlt
inc
shlb
fsubrl
sbb
mov
ja
xchg
stos
jle
sbb
repz
inc
inc
daa
mov
lret
dec
mov
inc
pop
ds
cld
xchg
pop
mov
pusha
fdivs
fdiv
fisubl
or
out
inc
mov
iret
lods
add
jo
ljmp
outsb
mov
pop
enter
popa
call
add
stc
or
repz
push
cmp
jno
xchg
stc
jge
xchg
sub
mov
int
dec
or
ds
mov
aam
add
xchg
rorl
scas
dec
sbb
push
dec
mov
mov
loop
rdtsc
cmc
mov
outsl
dec
xchg
jo
xchg
enter
fs
dec
test
stc
je
int3
or
fadds
outsb
adc
mov
leave
imul
std
fcompl
stc
jle
xor
jo
or
fcompl
int
jle
fucomi
pop
mov
fildl
inc
loope
mov
jle,pt
pop
das
cmp
adc
pusha
push
fdivrl
ja
push
dec
cld
push
loope
or
inc
fisubs
push
push
decb
sub
je
xor
jnp
and
xlat
insb
repz
sbb
xchg
mov
mov
in
ja
cmc
insb
inc
pop
in
pop
push
mov
daa
xor
dec
or
lret
add
dec
xchg
xor
or
push
xor
fidivrs
jecxz
jnp
xor
mov
adc
jmp
push
out
sbb
jp
and
enter
call
in
repz
cmpsl
jmp
inc
clc
push
cmpsb
ja
push
lahf
or
or
lods
ret
mov
jge
dec
rcll
lea
hlt
mov
sub
out
push
in
and
mov
sti
adc
aam
xor
ja
cmp
fdiv
dec
pop
nop
fcoml
pop
movsb
stos
jb
pop
aam
fdivl
xchg
fwait
lods
cs
mov
cli
aaa
aad
mov
fidivrs
iret
insl
jns
mov
add
jmp
mov
xchg
dec
imul
in
xchg
jmp
test
fisttpll
jno
pop
sbb
lret
mov
negb
into
repz
das
pop
aam
sahf
pop
insb
jbe
or
nop
stc
aad
jmp
sahf
jb
loop
dec
movsb
push
movl
out
inc
insl
ret
sarb
jne
add
pop
out
mov
pop
mov
xor
mov
fdivrl
sbb
es
mov
inc
lahf
fst
jp
ret
jb
cmc
xcrypt-cbc
cmpsl
push
mov
or
fwait
xchg
jmp
shll
ret
push
pop
inc
scas
pusha
out
add
inc
add
std
mov
ljmp
fsts
mov
lahf
mov
dec
jle
out
pop
cmp
in
adc
lcall
pusha
or
fcoms
int
jle
loopne
adc
jo
add
push
shr
lret
inc
adc
lock
xchg
and
jecxz
mov
sbb
sarb
adc
jecxz
push
or
jp
sbb
into
loopne
and
mov
cwtl
nop
sbb
les
mov
jmp
aas
or
imul
jae
pop
pop
sbb
lds
ljmp
jp
and
jp
inc
negb
sub
mov
inc
inc
cmp
pushf
jg
mov
ss
in
push
add
push
and
sbb
sahf
bound
mov
cli
fnstsw
ror
cmp
cmp
mov
mov
scas
mov
leave
fmulp
loop
lcall
insl
mov
stos
shlb
xor
sahf
lret
push
movb
dec
push
dec
add
jle
sbb
dec
ret
sbb
lds
dec
push
xchg
add
into
cs
sahf
stos
mov
sbb
lcall
inc
and
std
xchg
or
or
push
sbb
int3
cmp
dec
dec
les
or
popf
dec
mov
xor
and
xor
adc
cli
sub
jle
dec
jb
call
mov
mov
fcoml
inc
lret
sub
shl
pop
mov
dec
pop
mov
jle
decb
ljmp
push
sub
pop
in
sti
loop
xor
push
into
pop
lods
xchg
xchg
insb
sbb
mov
imull
imul
xchg
dec
pop
out
ret
enter
cli
out
es
pop
push
jbe
push
lret
jne
out
cmp
je
inc
mov
pop
jge
sbbl
js
or
mov
fistpl
ss
inc
adc
repnz
iret
addl
jle
sbb
xchg
push
lahf
data16
aam
test
pop
leave
lretw
cmp
popa
inc
std
xor
xchg
iret
xor
subl
push
add
add
out
adc
sub
data16
mov
in
int
mov
pop
pop
das
xlat
jns
dec
int
pop
je
in
cmpsl
addr16
insb
icebp
sub
xchg
add
imul
sbb
sbb
repz
in
shlb
mov
adc
mov
cmp
and
pop
into
sub
rol
push
fldenv
add
int3
pop
pop
add
xchg
jb
cmp
xchg
loope
cltd
cwtl
jl
jl
orb
ss
fcmovne
call
daa
add
jno
xor
cmp
sub
cli
xor
push
inc
ss
cmpsb
lahf
sti
push
sbb
loope
js
pop
mov
xor
or
adc
push
xchg
fdivrl
repnz
or
repz
mov
cmc
sahf
hlt
int
pop
dec
mov
inc
outsl
adc
loopne
in
aad
lea
xlat
lods
enter
mov
xchg
mov
ljmp
aam
or
mov
pop
lea
outsl
fistl
push
mov
or
mov
xchg
rcr
std
and
xchg
mov
cmp
or
into
imul
fwait
cwtl
pop
dec
mov
cmp
inc
ret
jno
or
jecxz
test
sbb
cli
mov
inc
cmpsl
lds
pop
push
sub
cs
dec
lahf
les
nop
test
and
pop
xchg
inc
outsb
cmpsb
and
test
xor
aad
mov
push
pop
xchg
fisttps
cwtl
movsb
jle
jae
mov
scas
cmc
ret
xor
rorl
inc
inc
es
loop
movsl
jmp
xor
add
mov
push
mov
mov
out
movsb
jmp
loope
inc
xchg
gs
push
jl
mov
adc
lea
gs
mov
shll
clc
and
mov
add
lds
movsb
mov
mov
lock
add
pop
mov
xchg
mov
sub
mov
es
pop
jae
cmpsl
pop
xchg
jl
lret
sbb
sti
or
push
push
xor
ds
popa
cmp
imul
xchg
dec
dec
push
out
or
fsubs
sti
cmpsl
push
sub
and
aaa
pop
jmp
cmpsb
inc
xor
fsubs
push
ficomps
dec
sbb
ss
cli
clc
out
fwait
mov
and
lods
loope
mov
xor
xor
sub
es
ss
int
icebp
push
adc
fisubrs
cmp
jo
clc
push
mov
in
xchg
inc
push
movsl
aas
pop
add
rolb
pop
fwait
outsl
aad
inc
mov
js
gs
add
imul
out
lods
push
push
idivl
add
push
pop
les
mov
mov
mov
jmp
iret
jo
flds
push
cs
push
and
test
inc
cli
leave
stos
mov
call
repnz
in
cltd
inc
cmp
enter
mov
jge
sti
pusha
mov
jg
jbe
rclb
sbb
sahf
sub
pusha
mov
repnz
xchg
push
fsubs
mulb
fs
repz
add
stos
sub
xor
mov
xor
adc
arpl
jne
aad
inc
and
lret
xchg
mov
sahf
and
test
mov
call
mov
pop
lahf
iret
cmp
adc
lods
sti
sub
mov
cwtl
cmp
sub
and
fstpt
jg
cmp
fmuls
or
lret
aas
mov
rorb
lret
aaa
jmp
ficoml
xorl
jp
push
cld
add
shr
je
in
out
push
xlat
imul
xor
mov
ss
dec
test
mov
test
push
mov
add
cltd
xchg
adc
jmp
mov
pop
roll
bound
jecxz
sbb
loope
movsl
dec
cmp
pop
aas
test
or
xor
sbbb
outsl
mov
mov
loopne
pop
imul
aas
cmp
or
jge
repz
push
inc
cmp
out
mov
mov
insb
imul
jo
test
pop
jp
jno
cltd
enter
out
test
mov
lret
ja
mov
ror
cld
xchg
nop
mov
or
fwait
adc
loop
nop
cli
lahf
mov
inc
rorb
cmp
add
xchg
jecxz
xor
mov
inc
sahf
push
inc
pusha
nop
push
add
add
jle
cmp
ret
dec
xchg
jmp
fucomip
xor
scas
mov
push
les
orb
cmc
arpl
and
adc
ret
bound
addr16
fcomps
loopne
mov
xor
stos
and
jl,pn
lock
insl
jb
insb
lret
xchg
addr16
jae
int3
ja
add
insb
mov
and
shlb
or
sub
addl
shll
aad
xchg
loop
out
sbb
cmc
test
xchg
sti
adc
inc
scas
push
daa
pop
jae
xor
test
aas
scas
or
iret
push
in
lods
sbb
out
jns
sbb
sub
inc
pop
jle
push
mov
jmp
cmp
xchg
gs
test
inc
ret
pop
cmpsb
cmp
jne
mov
js
xchg
pop
into
add
and
and
repz
in
and
sbb
xchg
mov
sub
shrl
pop
inc
pop
xchg
push
pusha
and
or
leave
test
xchg
adc
sbb
ja
fildl
or
jae
push
popa
xchg
sub
jo,pt
adc
add
lds
scas
add
lret
sub
subl
fwait
loopne
pushf
in
push
enter
adc
mov
cs
mov
push
mov
cwtl
mov
sbb
sbb
scas
mov
xchg
imul
arpl
xchg
pop
xor
cli
xchg
scas
ja
jle
inc
lahf
mov
test
xor
outsl
mov
dec
loopne
mov
jb
adc
xlat
ja
pop
cmp
shll
sub
ja
jne
jmpw
sbbb
pop
add
movsl
jp
push
mov
insl
imul
outsb
subl
add
out
cltd
stc
clc
jb
adc
mov
cmp
bound
pop
xorl
push
adc
in
cmpsl
les
inc
dec
aam
scas
inc
stos
mov
xor
lods
jl
fsubl
mull
cmp
pop
fcoml
pop
mov
dec
emms
or
or
mov
test
ljmp
xchg
pop
mov
jae
mov
xchg
loope
sbb
call
je
das
data16
aas
repz
add
mov
xchg
adc
push
cli
jmp
out
mov
inc
inc
sbb
mov
sbbl
inc
lods
ja
stos
add
int3
outsb
in
mov
fsubrs
lds
les
or
lret
jge
jne
xchg
loop
imul
pop
pop
leave
int
or
clc
lret
mov
inc
xchg
mov
imul
or
lret
sub
aam
jp
mov
adc
stos
je
add
mov
adc
fdivrs
push
pop
xchg
push
subl
inc
adc
xor
xor
push
and
leave
inc
mov
mul
jmp
xchg
into
ss
or
add
xchg
xchg
les
ja
hlt
mov
jbe,pt
sbb
aam
jg
and
xchg
mov
mov
filds
insb
jecxz
fbstp
ficompl
fwait
xchg
rcr
and
pop
test
sub
shl
les
stos
xor
xchg
xlat
leave
ret
ret
popa
incl
push
cmpl
les
das
dec
loop
ljmp
push
add
movsb
xchg
repz
pop
jno
sbb
pop
mov
mov
xlat
xchg
ret
mov
mov
adc
into
dec
jae
push
icebp
and
out
xabort
sbbl
ret
mov
and
cmp
mov
cld
sbb
mov
mov
stc
lret
fimull
cmp
xchg
stc
xor
je
int3
mov
xor
shl
pop
in
xlat
insb
jno
mov
and
xchg
mov
int3
fs
cltd
es
inc
sbb
add
jl
jle
mov
insl
outsb
add
dec
cmpsl
adc
pop
dec
push
fildll
or
sahf
mov
cmp
adc
mov
test
in
pop
dec
sti
mov
inc
jmp
dec
movsb
daa
adc
pop
cmc
fcmovnbe
xor
iret
icebp
pop
mov
roll
sub
mov
and
xchg
cltd
popf
les
aad
push
cmp
mov
add
mov
cs
mov
loope
dec
push
or
or
leave
movsl
xchg
xchg
adc
shlb
lahf
popf
gs
and
enter
inc
pop
stos
outsl
xchg
cmpsb
sbb
push
sti
push
xorl
cmpsl
into
fildl
leave
jb
mov
push
call
pop
ja
or
cmpsl
or
dec
clc
movsb
icebp
mov
int3
jo
dec
imul
cmp
pop
xchg
cmp
jl
outsb
stos
hlt
pop
fdivrl
std
cmpsl
mov
jmp
adc
and
xchg
adc
sub
data16
sti
fisubs
sbb
cmp
jge
test
test
adcl
sub
and
or
popf
sahf
mov
ds
int
cmp
fst
adc
ret
or
cmpsb
loope
loope
sub
add
mov
mov
inc
pushf
sub
cs
inc
mov
test
mov
dec
mov
lods
out
leave
pusha
movl
inc
repnz
sub
push
fsubrl
les
xor
jo
enter
mov
inc
cmp
add
and
adcb
and
and
mov
aaa
test
pop
lcall
pop
push
js
sub
pop
data16
or
fldt
add
or
lret
aaa
lret
inc
jnp
push
push
push
cmp
out
and
jns
shrd
dec
add
push
or
jg
fistpll
lahf
ret
sbb
daa
addr16
sub
mov
inc
and
mov
mov
jo
and
std
movsb
and
xchg
xchg
lods
fmuls
cltd
nop
mov
lods
mov
mul
pop
mov
sbb
cs
test
adc
or
aas
movsb
vmwrite
and
loopne
sbb
cmp
xor
shr
repz
jbe
or
shl
xor
push
js
outsb
imul
adc
xchg
mov
addb
mov
add
insl
sbb
jl
test
jne
data16
push
cmp
test
mov
lock
pop
add
mov
into
cwtl
mov
sti
dec
popf
push
subl
cltd
cmc
push
out
out
popf
pop
imul
cmpsb
outsb
insl
loop
sbbb
in
mov
xor
aaa
push
es
sahf
js
add
cld
out
xor
mov
inc
leave
jge
jae
cmc
cld
fcmovne
iret
icebp
dec
xchg
xchg
subb
or
mov
mov
addl
push
cmc
xor
cmp
movsl
subb
sub
leave
mov
dec
pop
fxch
cmp
and
lahf
mov
jo
jle
adc
int
scas
dec
inc
lcall
jae
adc
sti
icebp
std
xor
dec
sub
pop
lock
cld
push
sbbb
mov
and
cmp
clc
out
lods
sti
imul
mov
sbb
pop
adc
imul
fmull
rclb
jo
ljmp
mov
in
fxrstor
jge
mov
xor
sub
sti
roll
mov
test
pop
fldl
imul
pop
add
les
lahf
fsubp
ret
inc
sub
pop
pop
sbb
fmull
outsb
repnz
unpckhps
lds
xchg
jo
sar
fimull
inc
mov
add
mov
xor
mov
or
je
sub
ljmp
xor
push
stos
xchg
dec
ja
dec
xor
adc
mov
outsb
dec
xchg
xchg
rolb
cwtl
inc
xchg
aam
fnsave
shll
push
rcr
push
addr16
push
icebp
imul
mov
les
call
decl
xchg
mov
jle
sbb
jmp
jne
dec
mov
shl
dec
jbe
into
and
mov
sbbl
and
fs
cmp
pop
mov
ljmp
sbb
sub
push
adc
xchg
dec
movsl
mov
adc
cmp
data16
daa
orb
xchg
scas
iret
shll
js
sbb
