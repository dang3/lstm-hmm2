push
lea
sub
mov
push
push
push
push
push
push
mov
call
push
push
call
test
je
push
xor
push
call
push
mov
call
mov
cmp
je
lea
push
push
call
mov
mov
mov
mov
push
push
mov
call
cmp
jne
movl
push
push
call
push
push
mov
call
xor
cmp
setl
mov
mov
cmp
mov
je
mov
cltd
sub
sar
mov
push
push
call
mov
neg
sbb
and
add
push
mov
call
push
mov
call
movzwl
push
call
pop
pop
push
push
push
call
push
push
push
call
push
push
lea
push
call
lea
push
call
mov
mov
mov
movzwl
xor
jmp
cmp
jne
cmpw
je
inc
inc
mov
cmp
jne
jmp
xor
inc
lea
push
movl
movl
call
mov
push
pushl
call
push
push
push
push
push
pushl
mov
call
cmp
mov
mov
jne
xor
push
pop
lea
rep
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
movl
movl
movl
mov
movl
movl
call
test
je
mov
push
mov
imul
cltd
pop
idiv
push
push
mov
mov
add
mov
lea
mov
mov
shl
mov
lea
push
call
mov
mov
sub
sub
mov
cmp
mov
mov
jle
mov
push
pushl
neg
push
push
pushl
sbb
push
push
push
and
add
push
push
push
push
call
cmp
mov
je
lea
push
call
push
push
push
pushl
call
test
jne
call
xor
jmp
call
pushl
call
pushl
pushl
call
pushl
call
push
pushl
call
mov
xor
cmp
sete
push
call
cmp
je
call
cmpl
je
cmpl
je
push
push
push
pushl
call
xor
inc
pop
pop
pop
add
leave
ret
push
mov
mov
mov
mov
mov
mov
cmp
jb
push
push
mov
mov
mov
lea
xor
test
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
mov
mov
lea
ror
lea
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
mov
inc
cmp
jb
pop
pop
pop
ret
push
mov
sub
mov
push
push
push
push
mov
movl
call
andl
movl
mov
movl
mov
mov
movl
mov
mov
mov
mov
mov
imul
xor
add
incl
mov
push
push
mov
call
mov
mov
mov
mov
mov
xor
mov
div
mov
mov
mov
mov
sub
not
add
xor
mov
mov
incl
add
cmpl
jb
cmpl
je
mov
mov
jmp
push
call
mov
mov
mov
xor
push
push
push
push
call
movl
mov
push
shl
push
add
incl
push
push
call
mov
mov
test
je
push
call
mov
push
push
call
mov
call
add
cmpl
je
cmpl
jne
lea
push
push
pop
add
xor
div
push
pushl
push
call
mov
push
push
push
push
call
lea
mov
lea
add
lea
add
mov
mov
mov
mov
and
call
mov
mov
mov
call
mov
mov
push
push
mov
xor
push
push
mov
mov
call
mov
lea
push
push
push
lea
push
pushl
movb
pushl
movb
push
call
push
push
push
call
mov
call
mov
call
test
je
pushl
mov
pushl
pushl
pushl
call
cmpl
mov
jne
push
call
test
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
mov
push
xor
cmp
je
cmp
push
mov
je
push
call
jmp
push
push
push
pushl
call
push
push
push
pushl
call
push
push
push
pushl
call
pop
pop
ret
mov
push
mov
sub
mov
push
push
push
mov
mov
mov
push
mov
lea
push
pushl
pushl
call
lea
xor
test
je
push
push
push
call
add
test
je
push
add
push
call
inc
pop
add
cmp
pop
mov
jl
mov
mov
pop
pop
mov
pop
call
leave
ret
push
mov
push
push
mov
imul
push
mov
cmp
jb
mov
push
call
mov
add
imul
push
xor
pop
div
mov
mov
mov
mov
sub
mov
test
je
mov
sub
push
mov
call
xor
divl
mov
add
cmp
jae
mov
mov
imul
xor
divl
xor
mov
sub
imul
div
mov
cmp
jae
mov
sub
push
pushl
pushl
call
add
add
add
add
cmpl
jne
pop
pop
pop
leave
ret
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
mov
push
mov
sub
mov
push
mov
push
push
lea
mov
call
lea
xor
call
test
je
test
je
cmpb
je
mov
push
call
mov
push
mov
call
mov
lea
push
call
mov
test
je
push
push
push
push
call
add
push
call
test
je
push
push
push
call
mov
test
jge
push
push
push
call
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
call
mov
mov
pop
pop
pop
call
leave
ret
push
mov
sub
mov
mov
mov
sub
mov
je
mov
test
je
push
mov
add
test
je
push
push
mov
sub
mov
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
addl
decl
jne
mov
test
jne
pop
pop
pop
xor
inc
leave
ret
mov
push
mov
push
mov
test
je
push
mov
test
je
andl
push
call
push
call
push
call
test
je
push
call
push
call
mov
push
call
push
call
pop
pop
pop
ret
push
mov
sub
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
jne
inc
jmp
andl
push
push
lea
lea
cmpl
mov
je
mov
mov
jmp
mov
mov
add
xor
nop
movb
mov
mov
inc
cmp
jb
mov
test
je
lea
movsbw
mov
add
inc
mov
test
jne
lea
push
call
mov
test
je
mov
mov
add
andl
cmpl
mov
je
mov
mov
testl
je
push
call
mov
and
push
pushl
call
push
jmp
push
call
push
call
mov
add
add
push
pushl
call
push
mov
call
cmpl
je
incl
mov
mov
lea
cmpl
jne
mov
incl
mov
imul
add
mov
add
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
jmp
mov
push
mov
push
mov
xor
mov
test
movl
je
push
call
pushl
call
mov
xor
inc
pop
pop
ret
mov
mov
ret
mov
mov
mov
mov
rol
imul
add
mov
mov
mov
ret
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
test
je
andl
mov
sub
add
mov
mov
mov
lea
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
cmpl
mov
je
or
sub
mov
mov
sub
add
mov
mov
mov
lea
push
push
push
call
mov
mov
mov
sub
add
mov
movzwl
add
lea
movzwl
lea
mov
mov
mov
andl
xor
cmp
jae
mov
mov
mov
mov
mov
mov
addl
add
push
pop
rep
mov
add
add
incl
mov
movzwl
cmp
jb
mov
mov
add
pop
mov
xor
pop
inc
pop
leave
ret
push
mov
sub
push
push
mov
xor
cmp
je
mov
cmp
je
cmp
je
cmp
je
add
push
lea
push
push
call
mov
add
add
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
sub
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
mov
mov
lea
ror
mov
lea
add
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
cmp
jb
mov
mov
test
je
mov
sub
mov
mov
inc
dec
jne
pushl
mov
pushl
pushl
pushl
pushl
call
mov
mov
mov
call
mov
add
push
pushl
pushl
pushl
call
add
pop
jmp
xor
pop
pop
leave
ret
mov
push
mov
xor
cmp
jne
mov
jmp
mov
push
mov
mov
test
je
mov
inc
inc
decl
jne
cmpl
pop
jne
dec
mov
movb
pop
ret
push
mov
push
andl
push
lea
push
push
call
add
cmpl
je
push
pushl
call
pop
pop
test
jne
push
mov
push
call
push
call
push
call
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
push
call
push
call
push
call
mov
pop
jmp
mov
leave
ret
push
mov
testl
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
pop
ret
push
call
pop
ret
add
add
fldl
cmp
lods
popf
xchg
fcompl
mov
testl
sub
sahf
js
loopne
and
and
cmpl
jmp
fsubs
mov
or
xor
mov
xorl
push
out
jbe
inc
xor
lods
out
dec
dec
iret
dec
add
mov
fcmovbe
pushf
adc
repz
enter
insl
mov
pop
xchg
lret
cmp
test
pop
movsb
aad
call
jp
int
adc
fsubrl
mov
sahf
xchg
add
add
dec
mov
iret
push
dec
int3
aad
arpl
ror
xlat
sub
not
mov
montmul
cmpsb
inc
adc
or
xor
and
std
dec
shrl
outsl
in
inc
into
lret
fistl
mov
aas
out
loop
sbb
popw
pop
stc
xor
pop
pminsw
inc
out
push
jnp
rcrb
jle
sub
outsb
pusha
mov
cmp
ds
cwtl
sbb
add
jno
add
mov
mov
jp
dec
pop
ljmp
insl
xchg
fucomip
jo
dec
lods
data16
xchg
cmp
pop
mov
jle
out
dec
push
xchg
in
push
pop
sbb
mov
xor
data16
out
dec
data16
rcll
test
mov
sub
shlb
sti
mov
add
add
fs
or
dec
popf
in
stos
movsb
xlat
iret
xchg
mov
dec
xchg
movsl
mov
aam
sbb
cltd
mov
add
test
shl
cmp
jns
mov
jno
orl
mov
mov
js
xor
jno
nop
ret
scas
int
push
sub
ds
repz
imul
test
loopne
mov
fs
pushf
sti
and
add
add
mov
mov
jae
int
std
adc
pushf
mov
stc
cmp
or
idivb
jp
aad
sub
rcrl
cmp
imul
add
xchg
cltd
push
outsl
push
lods
inc
jge
les
dec
loope
push
pop
or
enter
mov
dec
in
push
dec
add
mov
jo
cli
mov
ds
sbb
popa
cmc
loope
pop
cmpsl
fidivrs
repnz
and
jg
pop
inc
enter
adc
jae
out
movsb
cld
test
roll
mov
cwtl
mov
jge
dec
aam
ds
dec
cmp
das
push
aad
push
mov
push
mov
push
jmp
cmpsl
mov
xchg
decl
and
jle
insl
int3
push
aad
dec
rcrl
add
stos
or
mov
pop
push
outsl
lds
movsl
cmc
mov
adc
add
divl
repz
lret
jno
test
push
jp
daa
mov
mov
test
es
push
clc
test
sbb
inc
insb
dec
inc
jl
in
mov
xor
cmp
push
and
xor
bound
out
loopne
pushf
jnp
pop
test
mov
add
lods
or
aas
pushf
add
add
sbb
mov
sbb
xchg
adc
out
call
mov
mov
in
or
pop
ds
stos
xor
repz
aaa
lea
mov
outsb
sarl
jno
push
push
data16
scas
dec
mov
fsts
sbb
pop
sub
xchg
cli
fs
outsb
cmp
jo
inc
push
jp
lock
stc
jl
xchg
jg
mov
mov
xchg
rcr
out
aaa
incl
out
adc
addr16
pop
push
adc
and
or
inc
rclb
mov
sbb
cmc
sbb
loop
aam
dec
xor
hlt
push
clc
push
test
mov
adc
pop
adc
pop
orb
jecxz
cmpl
sbb
lea
loope
xor
call
and
add
les
and
push
mov
mov
xorb
cld
mov
xor
xchg
adc
pushf
loope
scas
mov
out
sti
outsb
addr16
mov
stc
enter
cmp
add
aas
and
nop
mov
in
out
inc
mov
adcb
add
dec
pop
xchg
stc
inc
mov
mov
mov
jb
dec
mov
test
adc
add
jae
scas
out
lret
lods
mov
lea
sub
cmp
sub
sub
jno
pusha
mov
fnstenv
adc
decl
ljmp
add
inc
cmp
xlat
add
xchg
aaa
inc
jg
sti
aaa
cmc
dec
mov
mov
cmpsb
cmp
popa
lret
jle
adc
or
pop
cli
movsl
add
pop
mov
mov
inc
or
call
xor
xor
mov
add
add
xor
xchg
imul
lret
int
and
dec
sub
inc
jbe
adc
lds
xor
imul
push
pop
cmp
mov
push
xor
les
cltd
adc
pop
testl
add
adc
or
fadd
ss
cld
mov
lock
and
fmull
push
xchg
into
aad
mov
add
add
test
addb
dec
add
jmp
sarb
mov
sub
test
cmp
insb
jbe
push
cmp
jae
pmullw
add
xchg
pop
mov
mov
inc
dec
cmc
outsb
popa
fwait
add
rorb
add
pop
cmp
in
push
push
jns
sub
add
adcl
add
add
daa
aaa
mov
xchg
roll
shrb
inc
adc
ss
inc
push
int
or
aam
or
aam
adc
sub
cmc
adc
das
inc
nop
in
push
adc
lods
ljmp
gs
mov
ja
cmpsb
inc
jp
or
rolb
inc
out
test
sbb
or
xlat
mov
mov
sub
ljmp
push
repnz
push
xchg
sub
cmp
cmc
fiadds
add
leave
sbb
in
popa
push
xchg
jnp
sub
cmp
cs
and
lods
dec
mov
xor
aaa
sub
and
daa
ret
mov
dec
inc
adc
fcomps
loop
pop
add
in
int3
dec
mov
sub
push
ja
jl
mov
cmpsl
pusha
test
jns
andl
xlat
frstor
sub
mov
stos
enter
mov
int
dec
inc
xlat
shll
add
cld
repz
jo
loope
lahf
or
pusha
sahf
ss
mov
inc
mov
dec
push
fistl
fwait
cmp
jmp
mov
inc
jmp
je
xchg
lds
fsubl
push
or
pop
add
movsl
cmp
xor
repz
add
into
clc
jmp
xchg
jo
xchg
scas
jae
mov
insl
je
cli
adc
dec
mov
dec
xchg
xchg
aaa
outsl
stc
adc
adc
fmuls
les
pusha
and
xchg
loopne
cmc
pop
jno
flds
pop
rorb
stos
rorb
xor
in
in
jns
mov
pop
icebp
mov
lahf
js
out
data16
add
add
add
adc
xchg
out
xchg
jbe
push
pop
push
pop
pop
sbbb
ss
in
jecxz
rdmsr
mov
and
adc
enter
jno
push
cmpsl
dec
mov
xchg
aas
sub
idivl
pusha
stos
mov
xor
cmp
aad
cmpb
in
cmp
add
mov
aas
push
inc
stos
mov
adc
push
cld
add
add
add
mov
xor
sbb
dec
mov
push
xchg
lret
push
jnp
mov
int
pop
adc
jb
mov
push
out
pop
mov
sub
cltd
mov
push
movswl
jae
and
lcall
test
or
pop
mov
pushf
pop
test
not
sahf
fcompl
jmp
mov
scas
arpl
loopne
add
js
fistpl
fs
adc
in
movsl
pop
push
add
xchg
xor
js
lods
push
jecxz
push
jnp
decl
rcll
fimuls
fwait
cwtl
sbb
sti
inc
loope
sbb
cs
push
add
mov
push
add
pop
mov
inc
loope
dec
sbb
shl
loopne
adc
ss
jg
jl
lcall
push
add
pop
xchg
test
dec
pop
xor
mov
adc
dec
xor
dec
insb
jg
jle
stos
popf
aam
pop
popa
push
aas
mov
shlb
inc
adc
jns
mov
jle
scas
outsl
dec
pop
popa
adc
cmp
in
add
or
pop
inc
rclb
decb
out
jle
cmp
sbb
mov
add
add
insb
movsl
sub
sti
fidivrl
mov
mov
or
ds
in
shl
inc
cld
das
adc
xchg
cmp
jo
jp
daa
clc
in
sbb
mov
add
fdivl
cmp
push
call
movsl
aam
jns,pn
aam
add
mov
push
mov
push
jns
rcrb
mov
call
pushf
push
hlt
pop
cmpsb
sub
nop
jmp
jne
aas
popa
clc
fwait
sbb
add
xchg
not
out
in
cmpsl
sbb
fdivr
mov
mov
dec
fs
xchg
push
cmpsl
rol
out
stos
sbb
popw
lds
push
mov
rorl
in
fdivrs
ljmp
stos
ret
test
stos
out
lret
aad
cmp
fistps
or
cmp
xchg
add
int
movsb
adc
pop
add
push
dec
cmpsl
mov
jecxz
xor
filds
ret
scas
lds
nop
loope
jno
hlt
lock
lds
mov
push
and
into
or
jl
or
sbb
mov
push
sbbl
into
es
mov
in
or
cs
inc
stos
mov
sti
mov
aaa
jne
lret
mov
mov
pushf
outsl
xor
clc
xor
imul
pop
loope
fprem1
push
stos
popf
popf
push
add
cmp
jb
dec
push
frstor
lret
lods
mov
int3
inc
mov
pop
shlb
ds
stos
loope
push
or
and
repz
lods
xchg
shl
bound
push
lock
xchg
or
in
jge
mov
mov
cmovle
sbb
popf
cs
dec
mov
nop
aas
push
in
jp
mov
pop
bound
add
jns
sub
push
xchg
inc
push
cwtl
sub
sub
sbb
adc
mulb
sbb
add
rolb
mov
mov
pop
xorb
add
lea
lock
sbb
xchg
jg
outsb
rorb
leave
jle
mov
push
int3
jb
cmp
rcl
jo
ss
popa
xchg
cli
mov
nop
ja
ljmp
mov
imul
add
add
shl
xorl
inc
mov
add
std
sbb
movsb
daa
sti
add
xlat
cltd
or
jo
andb
roll
pop
xchg
xchg
dec
mov
std
ret
and
stos
push
bound
push
imul
xchg
out
rorl
fidivs
xchg
cmpsb
loop
enter
icebp
xchg
and
orl
push
cmp
sbbb
xchg
scas
dec
xlat
int3
add
lds
ljmp
and
hlt
test
sub
push
pushf
dec
cmpsb
mov
jae
pop
insb
inc
lea
mov
fs
lret
clc
or
add
lret
xchg
in
fcmovu
fdivr
mov
pop
cmpsl
or
sub
mov
cmp
sbb
jne
and
mov
into
lahf
push
mov
ss
cmpb
neg
push
pop
movsl
dec
jg
jbe
cs
push
xchg
daa
xor
hlt
out
xor
lret
inc
into
daa
inc
sbb
inc
shrl
add
test
inc
pushf
cmp
xor
mov
addr16
ret
push
inc
sbb
mov
inc
xor
out
out
push
jo
ret
or
pusha
mov
sub
andl
sub
clc
mov
stos
xchg
xchg
jmp
movsb
arpl
icebp
cmpsl
pushl
out
and
xchg
imul
jl
push
rcrb
add
inc
lret
loop
and
jnp
stos
dec
xor
adc
sub
iret
insb
lods
adc
mov
or
popf
add
push
lret
sbb
cs
popf
mov
test
movsb
pop
icebp
arpl
mov
test
jge
mov
mov
cmp
cmp
pop
xchg
repnz
mov
leave
add
sbb
xor
cmc
mov
sbb
aam
mov
dec
or
out
adc
push
inc
jne
or
movsb
pop
jle
add
or
inc
jbe
inc
mov
mov
lods
mov
push
fadds
pop
mov
mov
push
jo
arpl
movsb
out
cmp
jle
adc
in
pop
mov
jmp
jp
jbe
add
lods
and
ud1
dec
sti
out
cmp
dec
les
cmp
negl
gs
out
lea
insl
add
and
xchg
pop
jmp
out
mov
imul
jecxz
jmp
mov
rcr
adc
nop
hlt
lock
rclb
dec
add
enter
in
or
mov
push
mov
and
and
sbb
pop
pushf
ret
lods
push
inc
andl
add
jg
cmc
jne
jl
lcall
out
cmovl
cld
jnp
pop
pop
or
xchg
mov
xchg
mov
pusha
js
mov
and
cmc
dec
sahf
inc
call
mov
add
or
inc
xor
outsl
addl
mov
mov
pop
lock
adc
sbb
out
dec
sbb
sarl
movsl
jmp
adc
add
les
push
mov
in
push
push
std
mov
jns
lods
jno
test
cmpsb
add
int
imul
and
call
stc
jo
add
push
in
mov
jno
jno
mov
nop
or
add
stos
pop
xchg
push
mov
adc
dec
and
mov
add
xor
lods
adc
mov
pop
xlat
sbb
push
jecxz
and
adc
arpl
hlt
rcr
dec
add
inc
cli
adcl
or
dec
add
cli
sbb
scas
insl
in
sbb
sbbb
cmp
pop
jo
adc
testb
pop
dec
fs
cmpsb
mov
mov
std
icebp
push
repnz
std
inc
cmp
jns
push
mov
push
outsb
aam
lret
mov
jns
std
orl
cmc
sbb
jp
push
loopne
cli
dec
rolb
imul
sahf
hlt
mov
lea
and
jbe
test
popf
dec
jle
pop
cmp
int
mov
mov
imul
sbb
addr16
adc
jnp
incb
inc
mov
mov
adc
addr16
outsl
inc
repz
xor
nop
cmp
fidivl
in
sti
lea
xor
mov
stc
cld
addr16
xchg
pop
push
ja
or
fstps
or
jle
jmp
aam
or
out
enter
push
pop
sbb
scas
pop
out
and
fstpt
ret
inc
or
les
xchg
or
loopne
sbb
lret
jnp
pop
cmpsl
add
add
addr16
mov
mov
fdivl
xchg
imul
aas
push
mov
pop
lret
out
cmp
dec
xor
xchg
loope
test
sub
incb
test
jge
sbb
mov
popa
adc
outsb
pop
dec
fildll
pop
mov
je
xchg
rcll
or
mov
add
cmpsl
cmp
imul
pop
xchg
push
sbb
and
add
inc
xchg
jb
cmp
mov
or
les
mov
out
pusha
fcmovne
pop
sub
fldl
out
int3
scas
pop
or
sti
cmp
icebp
cmp
pop
sbb
loopne
insl
pop
lcall
mov
das
cwtl
mov
dec
pop
mov
insb
add
add
sar
cmpsb
pop
ffreep
adc
sub
test
cli
mov
in
mov
push
push
insl
fistps
insl
add
inc
pusha
mov
pushf
subl
movsb
jecxz
xor
sbb
ret
jle
shrl
pop
hlt
mov
je
adc
sbbl
shl
push
aad
fistpll
je
mov
mov
adc
fucomp
aam
adc
fldl
pop
xchg
jno
xchg
inc
loop
sbb
pop
stos
xor
imul
out
aad
jns
lods
loopne
sti
cltd
and
dec
aam
cmpsb
shl
add
add
add
movsb
pop
fs
jecxz
adc
sbb
jmp
add
cltd
mov
sbb
xchg
mov
sub
cmp
mov
jle
jecxz
mov
rolb
and
mov
push
cmp
scas
ja
mov
inc
dec
ja
lcall
mov
xchg
add
jno
mov
in
out
add
inc
lock
shlb
shll
jnp
adc
call
in
loopne
shlb
cmp
mov
lods
pop
int
fs
adc
pop
movsl
mov
sbb
test
jg
jne
lea
xor
push
sbb
inc
cmp
popa
mov
mov
les
push
xor
jb
orb
or
adc
daa
sbbb
fwait
xchg
jle
mov
add
xchg
lret
mov
mov
fwait
mov
insb
or
pop
adc
cmpb
in
adc
adc
dec
daa
cwtl
sub
sti
xor
pop
push
leave
and
jecxz
rol
cmpsb
or
aad
outsl
xchg
cmp
pop
pop
insb
je
dec
test
sbb
inc
inc
dec
rclb
inc
adc
inc
xlat
test
jge
xchg
mov
adc
sbb
sbb
or
add
lods
cli
jge
int3
out
ret
sbb
jg
add
repnz
mov
sahf
popf
stos
mov
fstps
sub
lcall
outsb
mov
and
adc
inc
jmp
dec
stos
cmpsl
mov
fidivs
filds
jg
idivl
sub
xchg
js
mov
dec
cmc
lret
jnp
fistps
jmp
out
outsb
aad
mov
popa
outsl
imul
xchg
mov
sbb
jno
add
test
and
bound
mov
push
adc
jnp
pop
rcl
lods
xor
fsubr
pop
mov
call
cmpl
jns
sbb
cmp
jns
dec
xchg
outsl
aaa
xor
jle
push
test
mov
lret
shll
nop
aas
imul
lcall
add
scas
pop
fidivl
jmp
add
add
into
inc
aaa
push
mov
and
dec
add
xchg
lea
scas
sub
mov
or
sbb
cmpsb
insb
or
cmp
push
ror
loope
hlt
fcoms
xchg
mov
icebp
jo
jnp
pop
push
push
sub
jbe
push
loope
pusha
pop
xchg
movl
dec
rorb
jns
dec
push
sub
and
fisubs
xor
add
lock
mov
out
inc
dec
lods
mov
mov
adc
test
mov
mov
adc
push
cmpb
andb
lds
addb
dec
pusha
inc
cld
std
sbb
inc
in
or
mov
xor
int3
lea
pushf
pop
add
xchg
sbb
and
add
das
push
pusha
cmp
daa
dec
mov
daa
push
adc
add
add
adc
sbb
or
out
inc
adc
mov
out
adc
mov
sub
mov
sub
cmpsl
mov
cltd
mov
es
inc
push
xchg
test
sbb
in
push
ret
xorb
push
jg
and
add
push
lea
ficomps
add
push
flds
mov
clc
push
jne
or
jb
xor
add
mov
add
clc
mov
rorb
in
mov
jns
or
mov
lahf
xor
shll
mov
imul
lahf
cld
nop
push
xor
xchg
adc
jl
stc
xchg
fsts
roll
xor
test
inc
fldt
dec
rorl
ja
adc
jb
popf
push
mov
inc
xchg
cmp
sub
and
lods
add
jg,pt
mov
insl
lods
xor
pop
push
nop
nop
adc
idivb
fadds
repnz
addr16
xchg
cltd
testl
cld
jge
mov
sub
dec
out
cmp
mov
idivl
pop
add
mov
add
and
imul
fsubp
sbb
jbe
xor
mov
aam
adc
mov
das
pop
shl
mov
mov
aaa
cmp
aad
mov
scas
shll
pushl
add
mov
cs
cltd
and
mov
bound
push
jne
dec
add
pop
xor
das
sahf
pop
add
jl
movsb
popf
add
fnstenv
mov
push
xchg
sbb
cmp
pop
sbb
out
jg
ds
lds
push
inc
cmp
test
add
in
mov
sub
sub
push
mov
leave
mov
and
and
add
add
decb
mov
pop
sub
icebp
cmp
pusha
jns
mov
adcl
shll
lea
add
std
popf
xchg
fbld
inc
lret
xor
jo
lea
adc
lea
pushf
sbb
mov
add
test
stos
cs
jge
mov
push
add
adcl
dec
mov
movsb
lahf
imul
push
imul
sbb
movsb
mov
xor
inc
pop
lods
ds
mov
jecxz
lcall
push
fimull
push
adc
in
insb
cltd
jo
cld
push
mov
cmp
movsb
xor
xchg
xchg
xor
mov
cmc
fsubp
ret
pop
popf
or
enter
cmpsb
std
add
add
add
out
loope
push
stos
mov
inc
loope
out
push
andl
addl
push
inc
cli
push
dec
xchg
fstpt
xchg
int
insl
cmp
mov
mov
jle
xchg
pop
fstp
push
fsub
inc
lret
push
repnz
pop
lds
push
out
cmc
and
out
pop
mov
xchg
into
push
insb
push
and
add
nop
ja
enter
sbb
leave
cmc
and
xchg
dec
push
pop
mov
pop
jp
pop
mov
movsb
add
popa
jp
pop
fildll
mov
es
inc
push
xchg
in
xor
sbbb
mov
enter
cmp
lods
test
inc
mov
and
inc
out
js
sarb
sahf
add
pop
cmc
in
sbb
xor
fimuls
pop
add
add
mov
push
incl
popf
pushf
aam
loope
dec
jle
hlt
adc
into
outsl
push
dec
mov
insl
jne
mov
dec
pushf
jo
sar
fstl
mov
test
outsb
scas
fmull
adc
jo
xor
je
mov
and
mov
sub
fistps
xchg
inc
push
push
fists
sbb
pop
xlat
mov
dec
lcall
add
sbb
fmuls
test
mov
daa
test
mov
adc
add
xchg
andb
shll
or
aaa
sbb
dec
jb
daa
movsl
cmp
add
in
and
int3
adcb
or
mov
clc
repnz
shll
stos
sti
rcll
pop
mov
jl
jb
add
add
jno
adc
cli
dec
ficomps
mov
ja
insb
mov
pusha
scas
arpl
iret
rolb
cmc
pop
fisubrl
mov
dec
lret
jp
mov
push
dec
lods
pop
jle
scas
leave
ds
xchg
xor
xchg
sbb
addl
daa
pop
mov
mov
sub
idivb
lds
pushf
or
push
and
ja
lret
ret
test
add
add
sub
insl
add
adc
fbstp
ficomps
dec
xchg
dec
jne
in
iret
sub
inc
mov
outsl
pushf
push
lods
addb
xor
add
xchg
adc
or
mov
jecxz
or
mov
popf
test
aam
pop
xor
iret
xchg
jnp
push
test
and
loopne
dec
xor
mov
jb
test
pop
add
paddw
ficompl
mov
stos
test
and
pop
or
loope
cmpsl
inc
cmpsb
arpl
fs
daa
cltd
mov
movsb
insl
xchg
outsb
xchg
pop
imulb
shrb
push
inc
sbb
cmp
bound
sbb
les
add
push
in
enter
add
mov
sbb
xor
cwtl
dec
jno
rcll
out
pop
inc
sbb
dec
add
add
add
js
and
in
push
in
sbb
lock
out
or
sub
adc
mov
cltd
jno
push
inc
aaa
cld
cwtl
mov
and
cmpxchg
fs
add
out
lahf
icebp
imul
iret
bound
push
jge
push
sub
cli
rclb
push
lea
push
mov
dec
dec
sub
test
arpl
add
mov
cmpsl
adc
call
sbb
xchg
lock
pop
pop
lods
xor
roll
mov
sub
dec
cmp
bound
imul
stos
push
ja
mov
sub
inc
mov
push
push
les
lret
adc
vpslld
push
mov
and
lret
xor
cld
xchg
lods
repz
mov
adc
insl
scas
lods
jl
xchg
bound
pop
and
aas
jge
aam
out
add
add
adc
aaa
jmp
test
sub
movsb
adc
mov
je
inc
adc
xchg
out
adc
or
cmpb
mov
fwait
jecxz
mov
push
loopne
push
adc
jmp
push
lods
xchg
cmp
sub
and
jnp
xor
inc
repz
xchg
sbb
dec
jbe
imul
xchg
mov
sub
xor
cmp
mov
pop
aaa
cmpsb
push
adc
repnz
mov
repnz
mov
add
insl
fisttpll
inc
mov
xchg
sub
fdivrs
dec
out
or
push
das
or
ljmp
movsl
xchg
cld
lret
out
dec
dec
sub
cmp
inc
int
pop
mov
sbb
js
sub
test
sbb
and
dec
pop
repnz
hlt
or
ret
adc
pop
out
add
add
jge
push
leave
and
adc
adcl
cmp
cmp
sarb
les
mov
imul
jno
lcall
adc
sub
ja
xlat
cs
out
fsubs
mov
push
dec
dec
out
movsl
fdivl
inc
sub
push
inc
popf
andl
loopne
test
cmp
or
push
scas
jbe
jmp
and
mov
int3
xlat
jo
ret
test
repz
or
outsb
movsl
pop
or
mov
xor
bswap
andb
roll
fistpll
pop
push
pop
xchg
mov
inc
mov
mov
lds
mov
lahf
sub
int3
cwtl
fwait
aad
outsl
fstpl
jbe
shl
and
cmp
out
mov
vaddss
cmpsl
loopne
sbb
jle
xchg
cmpsb
insl
adc
daa
filds
add
sub
or
or
mov
int
repnz
xor
pop
mov
mov
test
xchg
mov
dec
mov
adc
ss
into
mov
sub
dec
inc
clc
mov
xchg
cmp
jecxz
pop
sbb
lock
gs
bound
pop
push
test
mov
nop
enter
inc
scas
xor
push
out
das
mov
daa
pop
sbb
and
add
fldenv
mov
dec
and
bound
push
cmp
jle
mov
pop
sti
mov
popf
mov
scas
faddp
mov
add
add
jnp
lea
leave
movb
in
dec
mov
or
cmp
dec
loope
test
inc
jno
pop
mov
shrl
mov
stos
dec
fsubs
push
pop
pop
inc
cld
addb
add
add
in
mov
ret
jo
pop
sbb
shrb
lds
mov
jns
fdiv
aaa
loopne
daa
lcall
or
cwtl
xchg
sbb
frstor
lcall
test
push
add
in
xchg
inc
ret
push
aam
outsb
inc
int
and
jb
fidivl
mov
and
pop
adc
popf
xlat
jno
