lea
mov
xor
shr
neg
lea
ror
xor
push
not
adc
add
jmp
rol
neg
lea
rol
mov
mov
neg
decl
jne
xor
adc
neg
neg
lea
lea
jmp
adc
mov
xor
mov
lea
xor
lea
xor
xor
ror
mov
adc
jmp
mov
shr
lea
lea
lea
xor
shr
jmp
movl
mov
neg
movl
lea
mov
neg
add
mov
jmp
cmp
je
mov
neg
rol
mov
xor
mov
xchg
shl
xor
lea
rol
mov
jmp
and
push
call
push
neg
mov
jmp
leave
call
call
xor
and
lea
adc
xor
neg
mov
neg
not
lea
jmp
lea
mov
lea
xor
adc
shr
xor
popl
xor
xor
mov
add
not
jmp
mov
rcr
shr
adc
add
mov
jmp
not
lea
neg
mov
lea
pop
pop
pop
jmp
mov
lea
mov
rol
mov
not
mov
and
mov
jmp
mov
ror
neg
and
push
shl
not
adc
lea
xor
rcl
xor
xor
lea
jmp
add
lea
mov
xor
neg
xor
jmp
push
mov
sub
push
push
push
jmp
xor
neg
lea
shr
mov
lea
mov
xor
lea
jmp
lea
push
call
lea
ror
xor
neg
jmp
adc
adc
shr
add
add
xor
lea
push
push
pushl
pushl
call
jmp
rcl
ret
mov
neg
lea
xor
jmp
xor
pop
shl
lea
mov
cmp
je
jmp
neg
mov
not
rcr
and
add
rcr
add
lea
shrl
not
mov
mov
rol
jmp
mov
dec
and
xchg
inc
jno
xorl
add
hlt
add
repz
xor
js
or
cmp
sbb
inc
lcall
add
xor
mov
or
sbb
out
mov
aas
or
fprem1
add
es
xchg
cld
rcr
pusha
mov
jo
out
xchg
mov
add
cmp
pop
mov
mov
repz
or
xchg
loopne
dec
cmp
shl
mov
in
iret
je
aam
outsl
jne
notl
jg
cwtl
push
jo
xchg
subl
inc
mov
mov
pop
ja
jae
icebp
rolb
mov
mov
subl
scas
pop
mov
shl
xor
loopne
js
cli
push
mov
add
cltd
xor
std
sub
sbb
loopne
cmpsb
leave
or
shl
jo
pop
repz
push
mov
testl
sub
or
std
sbb
push
mov
push
adc
inc
push
pop
mov
fnstenv
aaa
ljmp
push
lret
cmp
sub
adc
outsb
add
repz
and
je
ret
add
repz
ret
inc
cmp
lahf
repz
adc
mov
add
sbb
dec
sarl
push
inc
mov
shl
xor
add
xorb
sub
mov
inc
xor
pop
add
repnz
jmp
xlat
jns
inc
shlb
xor
mov
in
sub
sbb
std
sub
fmuls
cli
jp
es
xchg
cld
rcr
pusha
mov
jo
divb
repz
xchg
mov
lahf
test
les
shl
xor
sbb
divl
sbb
cltd
jne
rol
xor
push
sti
or
pop
lret
std
sub
inc
adc
jg
js
cli
shrl
fsubl
push
mov
add
out
jne
sub
repz
add
lret
jo
sbb
icebp
xor
sbb
ret
lods
sbb
inc
es
cmc
or
sarb
push
test
xchg
cld
sub
ljmp
shl
gs
cmp
std
sub
mov
or
sarb
or
mov
es
ja
mov
je
shll
push
mov
in
dec
es
mov
or
push
sub
pushf
xor
cmp
lret
std
sub
js
negb
ss
out
js
push
and
pop
outsb
fldl
fldl
pop
xchg
sbb
dec
push
pop
mov
jge
sbb
add
xor
test
lods
mov
not
mov
adcl
shrl
pop
popa
cmp
enter
mov
loope
js
adc
xor
jno
clc
ret
jbe
lock
or
xchg
push
mov
sbb
rcrb
and
ja
js
add
pop
ds
cmp
shll
gs
mov
sbb
sub
sub
rol
xchg
mov
lock
ds
mov
cmp
lcall
add
lock
in
lock
or
xor
xor
cwtl
scas
mov
push
stos
rol
inc
or
or
add
repnz
xor
mov
shl
xor
add
enter
js
shl
xor
ret
xor
dec
fdivrs
adcl
fwait
add
outsb
mov
loopne
or
mov
lcall
repz
add
repz
mov
repz
mov
cwtl
or
xchg
push
cmpsl
sti
lret
sbb
data16
xor
push
pop
mov
mov
lret
cmpsb
hlt
mov
ja
js
sub
scas
cmp
pop
xchg
cld
xor
xor
add
jecxz
ljmp
outsl
xchg
ljmp
std
push
dec
notl
adc
cmp
fsubr
cli
rolb
iret
repz
xor
adc
popa
push
adcb
mov
pop
test
xchg
pusha
mov
cli
ja
imul
dec
push
rcrl
cmp
pop
repnz
jbe
cmp
cmp
ret
mov
cli
pop
jnp
push
repz
mov
mov
jg
and
cmp
mov
push
pop
adc
fcom
clc
adc
fsubp
xor
or
sub
adc
xor
jb
xchg
cmp
lcall
cli
lock
mov
stos
pop
repnz
sbb
stos
cmp
movsb
cmpsl
mov
hlt
sbb
xchg
inc
sub
jns
xor
cmp
fstpt
and
fld
cmp
cli
in
lcall
sub
lret
ror
jns
fiaddl
xor
pop
and
ret
push
xor
lret
cmp
sbb
pop
push
push
jnp
sahf
cltd
dec
or
xor
roll
add
push
dec
fsubr
shlb
dec
cmpsl
sbb
leave
mov
sub
xor
scas
sub
push
rolb
cmp
mov
xor
xchg
roll
jbe
subl
jmp
lock
jo
push
jbe
je
mov
ja
ror
and
mov
aam
gs
sub
inc
hlt
pop
js
enter
xchg
inc
adc
ret
and
cltd
jmp
cmpb
testl
xor
xor
cmp
cmc
ss
mov
xchg
inc
rolb
fcompl
int
xchg
ljmp
aad
adcb
mov
rcll
dec
aam
repz
mov
bound
inc
adc
mov
mov
mov
xor
or
pop
xchg
sbb
cmpsb
shlb
sbb
test
clc
push
sbb
popa
jbe
std
mov
negl
mov
adc
sti
add
jne
mov
cmpsl
and
dec
push
fucom
mov
adc
pop
stc
cmp
sti
mov
std
movsb
cld
mov
loop
leave
add
mov
or
pop
pop
or
inc
and
add
cltd
xor
fwait
pop
pop
cvtps2pd
push
sbb
xchg
popa
addr16
cmp
mov
in
insb
or
fisubs
bound
xor
sbb
xchg
cmp
hlt
xorl
in
mov
bnd
and
mov
into
dec
stos
xchg
cmc
jb
or
cmp
fsubl
jne
lcall
sub
inc
push
mov
dec
add
jns
inc
push
and
stc
cmc
repnz
sbbl
lahf
pop
xor
popa
dec
into
aad
lea
cmp
push
loop
and
sub
fsubl
loopne
loopne
dec
fwait
inc
mov
jae
popa
push
push
jbe
hlt
test
jae
test
rclb
inc
sti
repnz
jecxz
mov
mov
push
test
xor
push
ror
fidivrl
push
outsb
popa
inc
push
jp
push
sub
xor
dec
jecxz
push
out
js
negb
stos
jb
cmp
xchg
stos
enter
jne
cmp
fwait
imul
cmpsb
lret
mov
inc
sbb
rcll
subb
jno
mov
pop
push
pop
lret
and
xchg
cld
and
inc
repz
test
mov
sub
adc
jg
or
xchg
pop
sub
cmc
and
lock
roll
imul
pop
dec
mov
pop
adc
repnz
adc
sbb
fnsave
xchg
or
fbld
js
outsb
fisubs
push
fsubrl
mov
sub
adc
cmpsb
lahf
fcomi
repz
rorb
pop
jmp
shrl
xchg
push
jmp
jg
dec
shl
jp
ffree
jp
fldenv
adc
int
xchg
call
adc
bound
pushw
adc
mov
frstor
inc
lock
sbb
push
in
dec
xor
out
subb
fidivrl
mov
jecxz
xor
mov
stc
mov
fwait
push
mov
roll
sbb
xchg
xchg
mov
mov
xchg
bound
dec
cmpsb
hlt
add
jle
std
jecxz
test
sub
mov
mov
testb
adc
adc
mov
fistpl
icebp
shll
xchg
adc
sub
sub
jns
insb
mov
movsb
mov
insl
push
cs
or
leave
dec
jo
jns
mov
push
movsb
popa
add
loop
cmp
sub
push
enter
and
fwait
sti
fistpl
xchg
inc
sbb
lcall
test
int3
jecxz
inc
clc
mov
add
cmp
ficoml
gs
jbe
push
movsb
out
mov
push
frndint
inc
or
mov
mov
cli
mov
repz
pop
mov
inc
xchg
std
push
ficomps
lea
psraw
shl
xor
pop
stc
mov
add
sbb
push
cmp
adc
cmc
in
movsb
push
push
arpl
add
dec
fwait
dec
mov
stc
sub
or
or
shlb
adc
and
lret
std
push
dec
jl
mov
mov
push
dec
inc
lods
sbb
cmp
push
scas
les
cmpsb
cmp
fdivrs
inc
nop
jmp
ja
mov
pop
mov
pop
out
andb
mov
loopne
cmpsl
mov
mov
jns
lods
adc
cwtl
loop
xor
mov
test
xchg
jmp
xor
adc
mov
js
enter
ja
movsb
sbbl
mov
fstpl
pop
inc
mov
add
jl
fsubrp
lahf
mov
mov
bound
cmpsb
pop
cmp
push
lret
xorl
fsubp
dec
lods
mov
out
ret
mov
out
mov
test
push
inc
movsl
push
adc
mov
hlt
jge
inc
jbe
mov
inc
scas
push
testb
in
add
aaa
fs
ljmp
lahf
push
fsubp
out
out
sarb
sbb
push
jg
stos
jl
push
int
lock
sbb
or
push
inc
jmp
pop
add
scas
enter
shlb
ja
bound
jb
cmc
xlat
xor
xchg
sbb
negb
loopne
icebp
pop
xor
inc
popf
jb
pop
lock
jp
cld
rcll
and
out
cmpsl
je
mov
xchg
and
lcall
sub
xlat
iret
push
insb
fsubs
and
jns
mov
pop
arpl
nop
leave
sub
fwait
cld
add
xchg
imulb
pop
xlat
push
in
testb
push
lcall
xchg
mov
push
fchs
icebp
mov
jns
ret
cmpsb
mov
testb
dec
mov
test
mov
cli
std
push
push
mov
gs
movsb
adc
adc
pop
pop
xor
jno
bound
int3
push
pop
enter
mov
jge
out
and
jae
lea
dec
loopne
clc
pusha
mov
cmc
out
dec
fs
jecxz
jne
lahf
xchg
fs
mov
mov
mov
cld
mov
ja
pop
shl
mov
inc
rorl
mov
push
cmp
inc
mov
sbb
in
mov
adc
ss
pop
ljmp
or
out
jp
loope
mov
cmp
and
icebp
lods
jge
xor
fwait
xor
sbb
mov
xchg
add
xor
cmp
out
sahf
adc
loope
adc
xchg
xor
shr
xor
mov
std
xor
hlt
es
cs
push
pop
sti
xchg
outsl
jle
lcall
lret
adc
insb
adc
movsl
or
lcall
sbb
sbb
movsl
pop
xorb
mov
mov
add
sub
shrl
push
cmp
ljmp
fisubrl
loope
jmp
sub
mov
jae
xchg
mov
jae
adc
jecxz
ljmp
xchg
loop
jge
loop
fwait
sbb
inc
lock
adc
mov
push
dec
addr16
sub
mov
mov
mov
into
jno
sbb
ss
or
push
push
pop
insl
or
shlb
sbb
pop
push
pop
dec
test
xor
stos
push
push
xchg
stos
jge
arpl
adc
arpl
stc
push
into
rorl
and
pop
sahf
push
stc
rclb
mov
dec
sub
pop
xor
xor
and
dec
aad
xchg
lret
sbb
outsb
fldenv
addr16
sub
out
push
xlat
lret
imul
rcl
sbb
mov
testb
lock
xchg
jo
sbb
in
rorl
daa
cmp
fs
mov
mov
cs
ja
pop
jmp
jge
jecxz
pop
ljmp
mov
divl
aas
ljmp
mov
add
lret
xlat
cld
jbe
xchg
sbb
aam
clc
rolb
add
out
add
orl
incb
or
pop
cmp
sarb
mov
leave
jb
xchg
mov
popa
xchg
xlat
push
mov
cmp
icebp
arpl
inc
mov
and
aam
movsl
stos
je
adc
dec
movsb
sbb
xchg
jp
push
pop
jg
cmp
jnp
es
out
std
mov
shlb
incl
push
leave
dec
aaa
inc
nop
shl
loopne
popf
pushl
push
cmpsb
adc
movsb
ja
outsl
sbb
push
ljmp
push
stc
sti
pop
movsl
in
mov
inc
insb
shl
and
paddd
test
fisubrs
lret
jno
adc
jl
daa
lret
out
pop
xor
fbstp
sbb
cmp
adc
or
jp
adc
fidivl
add
pop
sub
push
cli
stc
dec
jle
movsl
and
adc
cmp
divl
adc
xlat
int
aam
cmp
ss
mov
mov
mov
mov
sub
sub
stc
adc
cli
or
cmpsb
mov
xchg
inc
jle
arpl
rcrb
aam
xchg
push
xorl
mov
stos
push
data16
jge
dec
andnps
pop
mov
lods
fwait
push
into
mov
shlb
push
add
nop
add
out
rorl
lret
int3
adc
outsb
mov
cmpsl
dec
int
xchg
pusha
push
sahf
xchg
inc
push
mov
sbb
xchg
add
lahf
pushf
popa
mov
ljmp
mov
jb
xor
xor
cmp
jle
and
pop
push
in
lahf
loope
clc
mov
add
xchg
mov
ja
or
stc
imul
out
cs
ret
and
push
dec
aam
sub
mov
xchg
sub
dec
sbb
adc
push
push
push
lds
xorb
xchg
clc
ss
cli
cmp
xchg
jmp
mov
lret
repnz
arpl
cmp
pop
xlat
lret
pop
das
repnz
cmpsb
subl
push
xorl
xor
mov
pop
pop
mov
adcl
cmpsl
sbb
dec
aam
in
and
insl
in
xchg
push
ret
or
jno
incb
in
push
adc
out
add
arpl
cmc
lahf
xor
scas
aas
adc
cmp
cld
nop
and
es
and
shl
and
idiv
cmc
testl
adc
sbb
sti
mov
push
mov
stc
jl
sub
add
popa
hlt
and
pop
jbe
or
test
loop
pop
lcall
cmpb
mov
js
aaa
fists
xchg
mov
int
cmpsl
push
inc
mov
aaa
lock
jo
movsb
sti
aaa
xchg
div
push
test
shlb
mov
mov
push
imul
int3
inc
pop
dec
dec
cltd
test
addb
push
ficoml
xchg
mov
add
imul
jle
loopne
ret
mov
pushf
mov
mov
mov
mov
and
jge
lods
xor
jae
pop
movsb
push
push
xchg
fwait
je
repnz
and
scas
adc
xchg
mov
dec
xor
aaa
inc
push
andl
xchg
fbld
out
mov
cli
jbe
notl
and
pusha
push
pop
xchg
push
les
inc
xchg
popa
shll
pop
js
inc
ret
cmp
jb
cwtl
sub
mov
jae
mov
inc
shlb
xorl
in
outsb
push
cmp
add
pushf
mov
adc
adc
mov
xchg
cmpsw
push
push
test
cmp
cmpsb
push
add
lahf
mov
cmp
cltd
mov
and
cmp
movsl
ret
push
add
inc
rclb
or
orl
cmp
dec
inc
stos
and
or
mov
neg
add
inc
jno
cld
push
inc
fcoml
jbe
mov
movsl
inc
push
mov
pop
sbb
xchg
lret
mov
add
mov
mov
push
mov
mov
jbe
int3
dec
pop
test
push
ss
mov
and
pop
negb
mov
push
cmc
fistl
jg
andl
test
mov
dec
into
mov
dec
xor
stos
inc
sti
gs
shll
pop
gs
fwait
icebp
incl
adcb
pop
stos
aad
or
scas
inc
push
mov
fidivs
call
cli
ret
enter
cwtl
sbb
push
push
jbe
or
ljmp
mov
jbe
lcall
dec
add
imul
loopne
inc
and
jno
and
jb
and
lret
mov
jbe
pop
and
xchg
icebp
rorl
jl
mov
mov
imull
shll
and
mov
mov
adc
es
xor
inc
lret
jns
mov
dec
adcl
adc
es
and
jbe
jecxz
push
jae
mov
jb,pn
out
out
fsubl
fwait
mov
roll
pop
xor
and
jl
inc
daa
ret
xchg
cmp
cmp
iret
sbb
fiaddl
sti
out
mov
rcl
aad
or
and
lea
xor
xchg
in
sbb
add
dec
add
xlat
shlb
mov
sub
or
or
je
stc
cmp
cmp
push
and
xchg
cmp
repz
sbb
mov
pushf
aam
add
add
xor
test
in
movb
mov
mov
repz
jae
into
jp
cmp
sub
divl
sub
aam
fdivp
repz
or
xor
pop
out
enter
xchg
mov
adc
cmove
dec
or
popa
lret
dec
pop
enter
inc
arpl
cmp
fisubl
rcr
xor
push
das
push
push
fisttpll
add
cmpsl
xor
cli
push
add
push
mov
out
std
cli
sbb
add
sub
out
lcall
repz
xchg
and
mov
mov
cmc
jbe
pop
in
mov
inc
shlb
jg
mov
test
in
and
xchg
sbb
lea
shr
dec
insl
add
popf
rolb
mov
imul
ret
sub
push
xchg
out
inc
pop
ss
mov
mov
push
out
pop
les
cli
repnz
jo
cwtl
jnp
add
ret
push
arpl
mov
cmp
mov
bound
out
cmp
cld
repz
test
pop
mov
push
pushf
mov
jmp
add
popf
aam
mov
test
stos
mov
scas
repz
jge
jb
adcl
mov
add
xchg
inc
pusha
scas
out
push
lcall
out
push
repz
leave
pop
and
and
xor
adc
lcall
mov
inc
adc
push
xor
ljmp
out
mov
add
pop
jb
push
insb
jnp
push
push
jne
mov
rclb
mov
xchg
push
or
pushf
pop
nop
xor
mov
test
push
popf
dec
inc
adc
insl
inc
gs
adc
mov
js
mov
inc
popf
popl
mov
add
data16
repz
daa
adc
jle
mov
inc
xchg
mov
inc
xchg
pop
jl
lcall
and
movsl
jl
shl
test
xchg
inc
adc
mov
jno
rorb
pop
popf
xor
inc
repz
mov
sbb
mov
ja
xchg
push
push
sahf
add
fwait
lods
bound
enter
mov
arpl
insl
repz
ret
adc
icebp
adc
xor
sbb
dec
dec
repz
inc
and
out
fimuls
sub
xlat
loope
push
roll
xor
pop
fsubr
rcrb
mull
ret
or
das
or
aaa
add
divb
add
fcos
cmp
loopne
pop
in
add
jmp
sub
rcl
pop
and
adc
stc
icebp
insb
dec
test
or
ds
int
inc
xchg
ret
jge
xlat
mov
hlt
mov
les
cmp
mov
testl
imul
notb
lret
inc
jl
xchg
addr16
push
push
pushf
insb
aad
jo
pop
stos
out
cmpb
xchg
push
rcl
add
jo
xchg
add
mov
mov
xchg
imul
lahf
mov
inc
out
add
xchg
or
mov
ss
mov
int3
inc
sbb
cmp
xchg
lret
pop
add
inc
cwtl
jne
pusha
outsb
add
or
sarb
inc
inc
inc
arpl
sahf
lock
add
les
inc
adc
mov
sbb
ret
push
dec
repz
lcall
cmp
xor
jne
ret
mov
push
ss
sar
int
jnp
shl
in
adc
and
rol
or
sub
repz
xor
rcrl
repnz
xor
push
fnstsw
out
lcall
push
rclb
xlat
rcrb
mov
or
and
repz
repnz
xchg
xor
or
or
adc
adc
inc
fidivrs
aas
dec
sti
outsb
rol
stos
cmp
daa
out
rclb
add
xchg
imul
ret
daa
rorl
inc
out
ss
adc
add
in
faddl
sahf
stos
shrb
out
xor
cmp
and
jae
xor
inc
popa
ds
ds
inc
dec
add
pop
int
push
test
jo
cmc
push
jecxz
mov
scas
fdivs
xor
incl
repz
sub
mov
int3
and
pushf
test
popf
mov
xchg
jo
int
pop
or
adc
inc
mov
test
or
adc
scas
xor
lcall
jae
or
xor
push
les
add
rclb
pop
out
int
or
lcall
adc
jmp
cmpsb
jb
cmp
or
loop
daa
call
sub
test
cmp
test
fnstenv
sbbl
out
xchg
xchg
in
scas
lods
cmp
xchg
out
out
sbb
xchg
sbb
push
pop
xor
lock
repz
cmpl
mov
inc
jne
push
cmp
fcmovu
test
sarb
mov
ffree
jecxz
arpl
xchg
inc
jl
insl
lock
sbb
in
mov
test
xchg
add
mov
dec
add
push
stc
lret
dec
rorl
mov
and
cwtl
push
inc
mov
inc
cli
insl
insl
xor
mov
outsb
fbstp
or
xor
movsl
mov
call
sbb
push
cmpsb
cmp
testl
mov
fisttps
cmp
xchg
pop
movsl
addr16
in
std
icebp
and
lods
add
mov
iret
ret
xor
repz
rcrl
jp
repz
mov
mov
pop
scas
repz
pop
push
shrl
push
scas
xor
loope
test
or
in
mov
icebp
jl
insb
jp
icebp
pusha
xor
inc
dec
push
mov
dec
loope
jle
das
mov
mov
push
fadds
arpl
call
rclb
test
xor
cld
bound
adc
imul
inc
jns
mov
xchg
ja
stos
scas
xrelease
dec
pmaxsw
add
jno
or
clc
add
cmp
dec
data16
mov
in
push
push
cmpsb
out
dec
mov
jl
adc
sbb
gs
pushf
clc
out
mov
rcl
movsl
out
in
sub
inc
xchg
mov
add
add
fstpt
cmp
insl
fstl
aam
in
popl
mov
ret
repz
lret
mov
in
bound
ret
and
jb
add
loope
dec
shl
add
sub
sbb
jp
cmpsb
leave
mov
pop
shl
inc
cmp
push
rolb
mov
push
sub
jo
pop
xor
pusha
sub
mov
stc
push
mov
aad
faddl
pop
push
mov
mov
addr16
xrelease
sub
cli
pop
mov
inc
out
jbe
add
mov
outsl
sbb
stos
data16
cmp
pop
adc
mov
popa
jg
es
or
xor
adc
sbb
repz
leave
repz
mov
and
scas
insb
fnsave
mov
mov
clc
mov
daa
out
sti
mov
xor
xchg
push
mov
insb
jg,pt
repnz
inc
dec
fcompl
pop
shrb
adc
repz
out
pop
jns
nop
popa
and
jne
pop
inc
add
mov
sbb
arpl
data16
mov
sbb
sbbb
data16
sub
mov
out
add
repnz
popf
scas
add
sarb
test
pop
hlt
mov
xor
mov
adc
repz
dec
lcall
shlb
jmp
push
ret
pusha
mul
enter
sahf
repz
sbb
cmc
jl
xor
cmp
test
cld
push
dec
repz
add
sbb
and
add
add
jae
cmpsb
cmp
xor
cmpsb
xor
inc
inc
push
mov
sbb
popa
mov
jns
or
int3
add
mov
mov
mov
and
ljmp
push
cs
pop
mov
and
xor
xor
push
test
sarb
jmp
push
sbb
int3
aam
add
adc
shll
ja
das
sbb
push
loope
call
add
jl
sbb
and
add
clc
pop
xor
call
mov
and
add
insb
data16
inc
xor
sub
icebp
test
fs
dec
xor
sub
call
xor
dec
std
out
or
and
cmc
shlb
fildll
xchg
jae
lret
leave
cmp
sub
dec
push
jb
sbb
mov
lcall
sub
leave
cmp
xchg
fimull
ficoml
cmpsl
jno
sbb
adc
rorl
test
mov
lret
mov
shlb
xchg
mov
or
leave
mov
repz
cmc
mov
inc
push
inc
sub
cld
mov
std
arpl
lcall
ja
inc
cmp
adc
adc
out
int3
lea
xchg
clc
fld
push
add
sbb
shlb
ror
and
enter
repz
divl
sbb
in
out
dec
pusha
xor
std
jmp
into
js
or
pop
inc
xor
mov
mov
cli
iret
jbe
jne
hlt
enter
dec
mov
push
repnz
mov
dec
inc
cmp
scas
aad
pop
or
pusha
scas
stos
adc
into
mov
dec
fistl
fcomps
aad
xor
je
push
sarb
lahf
ss
inc
leave
inc
push
gs
inc
imul
js
mov
mov
in
dec
xchg
in
pop
add
sub
fimull
scas
xor
dec
sti
pop
add
adc
cmpsl
aas
pusha
inc
scas
inc
fcomip
rclb
sbb
dec
xor
and
sbb
sbb
ret
xor
movsl
xor
outsl
and
insl
xor
xchg
cmpsl
loope
popa
shll
lods
mov
fdivrs
jnp
and
cld
dec
sub
shlb
jbe
inc
and
iret
sarb
lret
imul
outsb
jb
push
sub
test
mov
out
fistps
subb
inc
add
loopne
fs
test
cmp
fdivs
mov
dec
cmp
add
pop
cmp
cld
bound
adc
adc
ds
cli
xchg
mov
cmp
push
std
out
pop
add
cli
xor
cmp
push
les
dec
outsl
rcrb
pop
ja
loopne
gs
or
das
jp
rclb
push
adc
pop
lahf
and
cwtl
xor
cmp
inc
addr16
pop
std
push
lods
fwait
add
jo
addr16
jae
stos
xchg
idivb
repz
lods
clc
test
inc
ss
int
fwait
div
jns
lcall
ljmp
sub
mov
and
mov
pop
mov
mov
xchg
sub
mov
xor
in
dec
inc
inc
add
test
sbb
rorb
push
mov
xchg
cld
inc
mov
cld
movl
call
lds
or
sbb
out
lods
adc
adc
adcb
or
xor
out
loop
lds
in
jns
xor
aaa
sbb
int
xchg
daa
xor
jmp
sbbl
mov
add
pop
jb
faddl
xlat
in
xor
aaa
loopne
shlb
mov
sbb
stos
dec
add
fcomps
inc
lock
or
and
ja
mov
call
movsl
adc
in
outsb
loop
pushf
call
das
xor
sbb
xor
xchg
dec
add
cmp
mov
jns
xor
jge
gs
repz
daa
scas
in
xchg
push
sub
xor
out
inc
push
jae
repz
xor
adc
xor
pop
adcb
repnz
xchg
clc
add
sarl
icebp
xor
dec
sbb
sub
cmp
rolb
nop
xor
sub
iret
dec
cmpsb
testl
mov
aad
sti
add
ds
sahf
jne
jno
shll
push
ljmp
xor
jne
test
jnp
pop
sub
imul
xor
adc
pushf
xor
inc
cmp
jbe
lock
fpatan
shrl
xor
adc
cmc
adc
cs
lods
pop
lcall
mov
pop
xor
and
sbb
inc
inc
loop
es
mov
out
add
jmp
outsb
sbb
pop
add
inc
sbb
aam
sub
jge
cmp
mov
fidivrs
xor
leave
decb
dec
xor
mov
je
dec
inc
rorb
mov
scas
inc
push
xor
dec
push
lcall
add
in
jbe
pusha
sbb
mov
fs
xor
mov
les
add
lock
aas
aad
mov
xchg
cmp
leave
and
fisubrl
lcall
sub
enter
popa
mov
fcmovb
cltd
fstl
cmpb
mov
ljmp
cltd
add
push
sub
cmp
or
adc
mov
in
fidivl
insl
repz
jp
popa
xor
push
sti
pop
bound
add
shrb
fisttpll
fisubl
mov
iret
mov
test
les
xor
jo
add
add
and
lret
mov
out
in
xor
mov
push
addr16
add
repz
shrb
test
xor
stc
mov
lret
in
imul
push
repz
hlt
xchg
shrl
mov
mov
xor
cmp
lds
das
rorb
or
jo
inc
sti
mov
cmp
repz
cld
repz
sarb
insb
cmc
in
aaa
cmpb
cmp
push
jl
loopne
in
negb
mov
popa
or
xor
mull
cmc
xor
adc
jmp
shl
mov
adc
in
pop
stc
dec
or
gs
pop
xor
adc
jl
sbb
mov
push
cmp
sti
sub
lss
xchg
in
repz
ret
les
pop
or
bound
loope
and
cmpsb
rcr
scas
jbe
xor
lds
lods
or
sbb
ds
push
sub
push
dec
ja
mov
add
cmp
mov
shll
mov
aam
jbe
or
repnz
or
int
subl
movl
movsl
in
mov
xchg
rcl
xchg
add
pop
mov
jno
mov
popa
add
subl
rclb
xchg
push
pop
adcl
aad
imul
jns
popf
sti
push
mov
int
ficoml
push
sub
fistl
inc
cmp
test
xchg
cs
loope
std
stc
pop
or
and
lret
jmp
fsubs
jecxz
adcl
rcrb
imul
call
nop
xchg
adc
lea
shlb
imul
in
out
push
imul
cmpsb
sarb
dec
pop
bound
popf
sbb
lds
jl
jno
inc
push
jo
stos
cmp
add
sarb
idiv
ljmp
ja
negl
repz
adc
inc
jb
xor
lea
mov
sub
jns
xchg
sti
lahf
test
mov
into
sbb
xor
jae
adc
mov
or
dec
mov
jp
mov
adcl
xchg
fdivr
popf
call
jns
xor
dec
aad
leave
aas
mov
fdivrl
and
sub
push
dec
or
jo
cld
hlt
movsb
in
shll
pop
lods
inc
xor
mov
inc
repz
inc
lods
xor
and
mov
imul
notl
add
xchg
insb
gs
jge
shl
dec
and
in
sub
lock
fbld
fnsave
xor
xchg
scas
loopne
or
xor
and
mov
stos
jbe
loop
and
sahf
rol
push
dec
push
shl
std
xor
push
repz
mov
jbe
or
add
push
xchg
cmpsl
mov
mov
mul
test
inc
les
and
in
ss
or
push
xor
pop
stos
lret
mov
adc
dec
fisttpl
andb
add
test
imul
clc
inc
xchg
add
mov
add
pushl
adc
sti
xor
push
jnp
cltd
xchg
mov
or
xor
push
mov
xchg
jae
arpl
aad
cli
out
je
arpl
mov
pusha
repz
pop
roll
mov
push
mov
mov
cmc
mov
lret
sbb
hlt
pop
cmpsl
cmp
xlat
nop
pop
xchg
dec
adc
subb
mov
inc
icebp
cmp
mov
into
aad
sub
or
test
hlt
repnz
cmc
int3
mov
lea
aas
dec
ffreep
scas
mov
dec
push
add
in
cld
mov
lock
push
pop
repnz
push
lret
adc
xor
cmp
out
test
insl
fnstsw
fisttpll
ret
repz
jp
pop
je
repz
jmp
xor
ss
pusha
rol
sbb
xchg
push
sub
xchg
xchg
into
lret
ss
or
push
mov
fcompl
xor
cmp
fdivrp
add
lcall
in
imul
shr
outsl
jle
sbb
es
cmp
int3
and
xor
arpl
pop
push
mov
dec
leave
pushf
cltd
jb
cs
and
xor
dec
and
mov
bound
shrb
pop
xor
dec
mov
mov
or
push
test
push
xor
sbb
repz
cmc
xchg
push
js
jmp
mov
xor
add
xor
adc
repnz
hlt
sub
shll
lods
push
mov
das
xchg
movsl
dec
push
outsb
add
dec
add
hlt
fsubs
lods
mov
ret
xlat
jbe
repz
jl
dec
stc
enter
add
push
lods
or
add
loop
mov
mov
lret
cltd
aad
push
mov
fdivs
push
sbb
xor
fs
icebp
adc
sbb
dec
mov
add
leave
or
lock
adc
jo
adcl
add
test
cmpb
clc
sbb
jne
mov
sbb
mov
xchg
cmp
rorb
iret
add
or
fs
pop
xor
and
mov
popf
inc
xchg
jb
fsubrl
mov
mov
insb
add
loopne
mov
mov
mov
repz
dec
xchg
popf
imul
ss
sbb
popf
enter
cli
jbe
cwtl
sbb
xor
btr
add
test
xor
popa
mov
addr16
repnz
mov
or
push
addr16
or
popf
add
test
es
jg
add
repz
pop
jecxz
stos
jp
or
call
mov
pop
add
push
xorl
xchg
ret
nop
sbb
out
vrcpps
out
clc
and
mov
cli
inc
movsb
stos
sbb
int
das
shr
sub
mov
jae
imulb
movsl
adc
push
mov
mov
imul
xor
mov
jmp
or
ret
shlb
mov
pop
dec
lods
sbb
mov
xor
jns
in
aad
rcl
sarl
push
rorb
cmp
and
pop
mov
sahf
add
stos
mov
iret
in
and
icebp
loop
and
test
mov
test
cmpsb
int
cmc
mov
int3
icebp
or
mov
xor
mov
loopne
repz
lret
adc
inc
dec
fcom
pop
pop
mov
xchg
lret
ja
push
addr16
test
pop
jge,pt
inc
mov
inc
sbb
inc
pushf
js
popa
test
pusha
fidivrs
fistps
xor
cmpsb
mov
push
pop
sbb
add
jae
jo
aam
jp
jnp
scas
xor
jbe
rorl
int3
cs
mov
xlat
xchg
jp
fnstcw
sbb
lea
push
daa
enter
test
mov
daa
add
addr16
shlb
mov
and
dec
clc
dec
ret
xchg
push
xor
pushl
movsl
add
or
xchg
lock
mov
aad
testl
out
lock
shlb
pushf
mov
sub
mov
ret
add
popa
push
dec
fmull
int
xchg
shlb
jmp
es
aas
jb
call
dec
hlt
mov
inc
inc
aaa
dec
repz
push
iret
cwtl
xor
jns
shll
sarl
jnp
xchg
sub
addl
rcll
mov
pop
out
pop
aas
repz
dec
subb
in
xchg
xor
aad
mov
sahf
lds
mov
rorb
or
scas
scas
repnz
out
xchg
stos
pop
mov
xchg
or
jb
jo
arpl
out
loope
mov
out
push
ja
int3
int
out
inc
rolb
insb
fwait
mov
add
mov
adc
lea
shrb
jl
int
xchg
add
push
pop
fbld
in
js
mov
cmp
test
je
loopne
mov
inc
fimuls
add
enter
je
popa
sar
insl
adc
lcall
insl
into
call
movsl
fsubs
sbb
cld
ret
jae
scas
lcall
rcrb
mov
xchg
mov
cld
jmp
sub
jp
xchg
push
add
jle
jnp
dec
xchg
daa
shrb
in
mov
out
pop
inc
cmp
stc
cmc
and
add
cmp
das
mov
adc
push
in
std
int
shl
ficoml
adcb
pushf
jmp
mov
xchg
ss
fnsave
pop
ror
add
dec
add
sub
adc
fisttpll
adc
add
jo
je
inc
lcall
outsb
push
xor
mov
negb
mulb
cli
mov
repz
cld
pop
xchg
mov
add
pop
rep
insl
sub
xchg
js,pn
sub
sbb
xchg
adc
std
iret
in
hlt
pop
sub
mov
or
cltd
dec
cltd
fs
push
in
adc
lcall
call
add
cmc
push
lds
jge
mov
aam
dec
mov
aad
std
pop
out
test
or
aas
jb
mov
cmp
mov
out
xor
jae
iret
jbe
push
inc
mov
inc
loopne
sub
pusha
lret
sub
xor
sbb
fstps
ret
and
adc
jp
xchg
or
jle
adc
sti
mov
adc
sbb
shll
jge
add
sbb
jne
insb
sub
jg
movsl
rclb
test
ret
std
iret
add
js
cs
jno
shrb
fcomp
sub
out
out
xor
mov
and
mov
xor
insl
xlat
ss
repz
ret
mov
popa
stc
xchg
cmc
fs
fisttps
ret
int3
xchg
push
cli
pop
movsb
rcr
sbb
inc
mov
jp
repz
adc
push
pop
icebp
pop
xor
ja
adc
add
push
iret
test
int
xor
xchg
stos
mov
add
xchg
in
lods
shl
dec
mov
repz
sbb
sbb
xor
mov
adc
sbb
mov
cwtl
xchg
push
subb
jb
dec
add
add
loopne
subb
add
out
out
shl
pop
andl
cmpsl
push
shrb
xor
xor
enter
jecxz
repnz
dec
or
mov
dec
rcrl
in
lods
mov
mov
mov
lock
in
ljmp
jbe
dec
sbb
adc
xchg
aam
xchg
insl
sar
cli
push
mov
push
loop
je
add
jno
rcrl
shl
xor
hlt
mov
mov
aas
bound
xor
jmp
xor
ds
inc
sub
cmp
sarb
pop
or
and
sbb
leave
xor
mov
lret
mov
adc
clc
in
int
stos
es
jne
mov
pop
shrl
loop
ja
jmp
or
imul
jno
mov
xchg
das
mov
iret
scas
stos
cs
dec
dec
pusha
xor
sar
xchg
lods
sub
push
and
and
xchg
jae
mov
icebp
repz
dec
test
add
adc
into
adc
cmp
js
inc
pop
push
hlt
inc
cmp
pop
xor
and
push
out
jg
xlat
mov
xchg
shlb
cmp
popa
add
dec
and
xor
shll
push
les
in
dec
jle
pop
dec
cmp
fwait
cmpsb
sub
pushf
push
mov
lret
mov
in
rcr
cltd
movsl
mov
sub
adc
fsts
cmpsb
test
dec
addb
mov
inc
rolb
push
or
outsl
sub
inc
lret
xor
and
push
pop
add
jecxz
rcrb
andb
mov
cmp
pop
mov
dec
jno
add
test
jo
es
lods
mov
repz
adc
xor
ficoml
test
push
mov
popa
mov
jmp
lahf
xor
pop
push
push
aas
clc
dec
repnz
scas
pop
xor
xchg
fisttpll
or
int3
xchg
add
push
sub
stos
pop
fwait
mov
pop
jmp
rolb
lock
xchg
add
dec
les
fs
shrb
addr16
std
cmpsb
mov
idivl
ret
mov
xchg
mov
pause
fstl
sbb
in
xor
or
call
pop
add
nop
jbe
push
mov
es
xor
jmp
ljmp
inc
jbe
or
fidivl
fsubrs
repz
push
leave
aas
in
xchg
popa
xor
lods
mov
push
jg
movsb
cli
in
pop
lahf
orl
cmpb
and
jne
jmp
leave
xor
push
test
and
xor
and
lret
fabs
dec
gs
xor
ja
xor
sub
add
add
data16
and
bound
inc
lds
jp
jge
inc
stos
cltd
mov
mov
push
push
cmpsl
add
inc
adc
loop
mov
lret
loope
inc
out
fs
pop
xor
cmp
or
shl
pop
and
shrl
movsl
hlt
lea
xlat
loope
mov
push
xchg
cltd
or
push
cmp
lcall
sbb
mov
aad
add
gs
loop
or
lock
adcl
test
mov
mov
cld
jbe
jp
xor
fxam
pusha
xchg
add
adc
mov
mov
test
push
mov
xchg
ds
pop
fldpi
js
add
mov
std
and
xrelease
adc
dec
popa
xor
lcall
add
pop
ret
push
dec
enter
outsb
lock
pushl
mov
dec
push
imul
pushf
mov
rclb
mov
hlt
ds
iret
mov
scas
lock
xorl
les
mov
gs
ret
sbb
and
pusha
xor
push
in
repz
adc
divl
stos
adc
inc
cmp
sub
push
popa
or
pop
rcr
push
pop
enter
and
add
push
and
clc
xchg
jmp
in
in
push
jo
les
add
sub
pop
in
clc
xor
adc
bound
std
fucom
cmp
jne
add
add
sbb
popf
rclb
add
data16
notb
pop
je
push
mov
lods
test
in
movsb
out
mov
fs
xchg
jl
lahf
inc
jae
xor
insb
les
testl
ret
sar
inc
cmp
in
mov
loope
fsts
or
dec
fcmovbe
movsb
push
pop
hlt
outsl
fimuls
lret
adcb
daa
pop
icebp
mov
mov
push
adc
ja
sbb
sub
and
ret
mov
dec
imul
dec
add
jnp
ja
loop
ret
fdivp
xor
push
shrb
jl
std
repz
xchg
out
ret
xor
fildl
out
add
ss
sub
fiaddl
scas
push
pushf
sbb
shrl
pushf
mov
std
scas
rcr
push
dec
cwtl
add
fisubl
sub
jmp
or
sub
push
and
add
push
je
jle
xor
cs
and
pop
add
mov
mov
pop
sbb
inc
call
or
or
pop
mov
ss
jg
loopne
pop
call
inc
mov
dec
pop
aas
pop
inc
aam
out
rcll
or
or
xchg
add
mov
scas
in
xor
adc
repz
xor
mov
fs
outsb
bnd
mov
push
push
sbb
gs
push
je
pop
aam
shlb
mov
push
xor
sbb
mov
mov
adc
push
add
add
pop
dec
in
iret
pusha
lds
dec
xor
or
outsl
lds
int3
in
pop
pushl
loopne
sti
rolb
and
add
outsl
adc
cmpsl
sub
sarl
xor
mov
roll
sub
xor
and
pop
faddl
jp
xchg
shll
jp
inc
movsb
es
arpl
pop
andnps
push
and
cld
rol
fisubrl
mov
xchg
mull
adc
ja
int
xchg
shl
cmpsl
push
ja
sbb
cmp
mov
jne
mov
fadd
mov
mov
icebp
and
fisttps
mov
andl
fisubs
jae
adc
cmpsb
or
pop
dec
pop
jae
aad
mov
iret
xor
jecxz
push
or
cltd
jge
scas
inc
mov
mov
fdivp
mov
mov
cmp
jp
sbb
cli
mov
inc
cld
lret
popf
mov
mov
pushf
clc
into
xor
push
sub
jae
push
loopne
dec
cmpsb
in
and
mov
xor
sub
in
pop
stc
shl
out
data16
cmp
shr
sahf
aam
cmp
jbe
sbb
jl
lds
fdivl
adc
adc
xchg
jnp
arpl
mov
sbb
push
nop
xor
xchg
sub
or
xchg
push
inc
shlb
mov
push
cmp
push
scas
rol
dec
repnz
test
lock
adc
mov
dec
push
adc
scas
sub
hlt
inc
jb
in
xor
es
icebp
das
mov
sti
mov
push
es
pop
cli
adc
orb
fwait
aaa
scas
ret
mov
shlb
mov
inc
mov
stos
mov
push
and
fwait
inc
popa
mov
mov
lcall
addr16
shll
pop
test
mov
lcall
mov
pop
movsl
mov
dec
scas
mov
inc
icebp
xchg
adc
jae
mov
mov
hlt
xor
cmp
outsl
push
cmp
lds
cmp
ror
push
sbb
pop
sub
data16
clc
cmc
xor
aam
push
mov
jb
fdivs
xor
xchg
into
sub
cld
mulb
adc
push
out
cwtl
push
std
in
push
fxch
outsb
repz
cmp
call
popf
sub
xor
and
int3
int3
sub
cld
int
and
imul
or
rolb
aam
and
leave
cmp
in
fstl
repz
scas
push
out
lahf
mov
inc
inc
mov
jle
popf
lods
cs
mov
mov
dec
insb
mov
or
movsb
test
push
or
pop
inc
aad
inc
sub
js
rorb
push
inc
mov
test
lahf
scas
xor
xchg
mov
inc
mov
mov
push
scas
gs
mov
ja
aad
adc
mov
jle
jo
pop
fcompl
sub
sbb
push
sbb
shll
