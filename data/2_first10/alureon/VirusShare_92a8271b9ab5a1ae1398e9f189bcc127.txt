mov
push
mov
push
lea
push
xor
lea
push
push
push
push
push
push
pushl
pushl
call
test
jne
pushl
call
inc
push
pushl
push
push
push
pushl
call
pushl
mov
neg
sbb
inc
call
mov
pop
pop
ret
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
mov
add
mov
test
jne
inc
jmp
andl
push
lea
mov
jmp
mov
add
xor
nop
movb
inc
cmp
jb
mov
test
je
lea
movsbw
mov
inc
inc
inc
mov
test
jne
lea
push
call
mov
test
je
mov
andl
add
cmpl
je
mov
mov
test
jns
and
jmp
add
add
push
pushl
call
mov
test
je
incl
mov
lea
cmpl
jne
incl
mov
mov
imul
lea
lea
cmpl
jne
xor
inc
pop
pop
leave
ret
xor
jmp
push
mov
sub
push
push
mov
push
mov
rol
xor
mov
mov
xor
push
call
push
call
pop
call
push
push
call
inc
pop
pop
cmp
jb
cmp
je
mov
mov
jmp
push
call
mov
mov
mov
add
mov
movl
mov
push
shl
push
add
incl
push
push
call
mov
mov
cmp
je
mov
mov
pushl
push
push
push
call
push
call
push
push
push
pushl
call
incl
cmpl
jb
mov
push
push
push
push
push
push
push
push
push
call
mov
call
add
mov
cmp
je
cmpl
jne
push
call
lea
push
mov
push
pop
add
xor
div
push
mov
pushl
pushl
call
push
pushl
push
pushl
call
mov
mov
lea
mov
lea
add
add
mov
pushl
mov
mov
call
pushl
mov
mov
call
pushl
mov
lea
mov
call
mov
add
push
lea
mov
mov
mov
push
mov
xor
push
push
and
mov
mov
call
mov
lea
push
push
push
lea
push
pushl
movb
pushl
movb
push
call
push
push
push
call
mov
push
call
test
je
xor
pushl
mov
pushl
pushl
pushl
call
mov
cmp
jne
push
call
cmp
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
andl
andl
andl
push
push
mov
push
movl
call
push
mov
call
push
mov
call
push
pushl
call
cmpl
pop
pop
je
test
mov
jne
movl
xor
inc
ret
push
push
push
push
xor
push
push
mov
push
call
mov
lea
push
push
call
mov
cmp
jne
push
push
push
push
push
push
call
call
mov
jmp
push
push
push
call
test
jne
push
push
push
push
push
push
call
push
call
movl
jmp
push
push
call
test
jne
push
call
xor
inc
jmp
push
push
push
push
push
push
call
push
mov
call
cmp
jne
mov
jmp
movl
xor
pop
pop
pop
pop
ret
push
mov
push
push
push
mov
mov
call
mov
mov
add
mov
add
test
je
andl
mov
sub
add
mov
mov
mov
mov
add
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
mov
add
lea
add
cmpl
je
or
sub
mov
mov
sub
lea
add
mov
mov
mov
mov
add
push
push
push
call
mov
push
mov
call
xor
pop
inc
pop
leave
ret
mov
push
mov
push
andl
push
mov
mov
test
je
push
lea
push
push
pushl
call
mov
test
jl
lea
push
pushl
pushl
pushl
pushl
call
mov
mov
test
je
mov
push
call
mov
pop
pop
leave
ret
cmp
jb
push
push
lea
xor
test
jbe
push
xor
inc
sub
mov
mov
mov
mov
ror
lea
imul
xor
mov
mov
mov
inc
inc
cmp
jb
pop
pop
pop
ret
push
mov
sub
push
mov
lea
push
movb
call
push
call
push
call
mov
push
call
pop
pop
pop
test
jne
mov
push
call
pop
test
je
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
mov
jmp
xor
inc
leave
ret
push
mov
sub
push
mov
push
test
je
mov
test
je
cmpl
je
mov
test
je
push
lea
push
lea
push
push
call
add
push
pop
pushl
lea
add
call
mov
test
jbe
mov
sub
mov
mov
inc
dec
jne
pushl
mov
pushl
mov
pushl
pushl
call
pushl
mov
mov
call
mov
add
push
pushl
pushl
push
call
add
pop
jmp
xor
pop
pop
leave
ret
push
mov
mov
sub
push
mov
mov
imul
cmp
jb
mov
mov
mov
add
imul
push
push
xor
pop
div
mov
mov
mov
mov
sub
mov
test
je
mov
sub
push
mov
mov
mov
mov
rol
xor
imul
add
mov
divl
mov
add
cmp
jae
mov
mov
imul
xor
divl
xor
mov
sub
imul
div
mov
cmp
jae
mov
sub
test
jbe
mov
mov
sub
mov
mov
mov
inc
decl
jne
add
add
add
cmpl
jne
pop
pop
pop
leave
ret
jmp
testl
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
ret
push
mov
sub
mov
push
mov
add
mov
mov
sub
mov
add
movzwl
lea
mov
movzwl
lea
mov
mov
mov
mov
xor
xor
cmp
jae
push
push
mov
mov
addl
push
pop
rep
mov
mov
add
add
mov
movzwl
inc
cmp
jb
pop
pop
mov
add
pop
mov
xor
inc
leave
ret
push
mov
sub
mov
add
mov
sub
mov
je
mov
test
je
push
mov
add
test
jbe
push
push
mov
sub
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
add
addl
decl
jne
mov
test
ja
pop
pop
pop
xor
inc
leave
ret
mov
push
mov
push
push
push
push
mov
push
mov
push
lea
push
call
mov
cmpw
je
push
lea
call
push
call
push
pushl
mov
call
pushl
mov
call
push
call
lea
cmpl
jne
push
pushl
call
mov
push
push
push
lea
call
mov
cmpw
je
push
lea
call
push
call
mov
push
pushl
call
push
mov
call
push
call
add
cmpl
jne
push
pushl
call
mov
pop
pop
pop
leave
ret
add
add
scas
dec
pop
push
jnp
movsl
mov
stos
sbb
jp
xchg
add
mov
adc
pop
adc
mov
mov
enter
mov
aas
test
sbb
dec
push
scas
dec
pop
push
jnp
iret
pushf
repnz
jb
stos
sbb
jp
xchg
add
mov
cmp
cmp
mov
notl
movsb
or
nop
xor
lret
mov
inc
repnz
mov
ret
sbb
cmp
fcomip
sbb
out
jmp
pop
movsb
out
dec
in
jne
pop
xor
sub
stc
or
movsb
rcr
jbe
jl
out
fstl
jbe
mov
pop
add
jg
fs
fcmovbe
lret
repnz
stc
pop
shrb
jno
push
push
aaa
and
xor
pop
into
test
xlat
mov
test
mov
cld
jne
ficoms
and
push
mov
jae
or
pop
and
outsl
loop
xchg
xor
push
fsubs
add
xchg
cwtl
in
inc
cld
ret
movsb
or
xchg
jne
jmp
push
aam
add
mov
mov
mov
pop
pop
jnp
int3
push
jbe
fwait
in
cli
cwtl
cld
in
insb
mov
sub
and
lods
in
and
inc
cltd
ret
inc
jecxz
or
cmpsl
sub
inc
adc
sbbb
movb
fists
lock
addb
push
daa
sbb
sbb
movsb
lahf
shl
cmpb
push
mov
dec
add
and
sub
aam
lock
test
cs
gs
add
add
inc
jno
aad
mov
jae
shlb
sub
fiaddl
cmp
orl
dec
mov
xor
push
mov
mov
loop
loope
hlt
xor
mov
aaa
movsb
mov
iret
cmp
scas
mov
or
mov
mov
sub
test
add
jp
loop
test
inc
andl
sub
and
push
add
add
sbb
aad
xchg
ja
xor
les
push
xchg
std
sbb
mov
lods
jb
add
dec
out
fsubs
inc
mov
or
push
sbb
test
adc
shl
mov
cmc
xchg
rcrl
push
mov
sub
cmpsl
stc
cmpsl
jne
fistps
out
jmp
jmp
xchg
or
lret
loopne
out
in
xchg
popa
stc
imul
gs
inc
fistpll
xchg
add
add
sbb
pop
sbb
cmp
dec
or
fisttpll
cmpsl
dec
push
lcall
in
cmpsb
pop
sti
mov
push
cmp
popf
frstor
ja
lods
call
xchg
incb
fimull
loopne
dec
cmc
mov
out
cmpsb
xchg
adc
jecxz
clc
push
aam
addr16
mov
sbb
adc
lock
cli
adc
add
stc
or
pushf
sub
xor
mov
or
cmp
push
sub
leave
or
adc
imul
lock
lock
cmp
adc
aam
cmc
cli
in
mov
ds
imul
adc
subl
fidivl
fdivs
daa
test
push
mov
orb
sub
loop
mov
fsubl
pop
jbe
add
add
mov
dec
lds
or
test
fimuls
pop
jge
lods
fwait
idivl
xchg
pop
lahf
jmp
or
dec
pop
in
adc
inc
mov
icebp
xchg
pusha
sbb
add
sahf
xchg
or
inc
pop
xor
pop
stos
and
sbb
pop
gs
or
jnp
icebp
test
push
test
inc
arpl
shrl
add
add
add
add
inc
mov
inc
and
pop
jnp
pop
out
adc
sbb
adc
xchg
out
frstor
in
popa
rolb
push
mov
sub
aas
adc
rorb
addr16
loope
adc
mov
jo
or
leave
or
xchg
or
lods
sahf
add
push
adc
loope
cmpsb
jg
int
inc
fsubr
sbb
mov
inc
das
movsb
pop
addl
add
add
add
aas
out
bound
leave
push
xor
movsl
into
cli
xchg
push
test
adc
sub
cwtl
sti
cmpb
sbb
filds
sbb
mov
add
jbe
mov
dec
sbb
andb
add
sbb
lods
fildl
jp
sub
cltd
dec
or
aaa
das
fwait
ret
repz
add
add
add
add
femms
in
cmpsl
lea
push
mov
jp
jne
test
ss
into
sub
xor
int
cmp
dec
sub
enter
dec
add
fistpl
ja
cmc
xchg
add
sub
sahf
arpl
rcll
push
iret
xor
xchg
sti
add
int3
push
insb
push
js
adc
push
ret
fs
adc
add
out
sub
fs
out
icebp
call
jno
pushf
rcl
rcl
add
ret
int
jle
lret
rcrb
jno
mov
sbb
inc
nop
mov
jp
call
add
push
hlt
stc
jns
mov
jg,pt
out
jmp
jnp
push
add
in
repz
lret
xchg
jne
addl
jnp
loopne
xchg
pop
cld
lock
test
sub
mov
add
adc
push
xchg
or
push
out
cmpsb
or
mov
sbb
mov
fmull
mov
pop
into
jb
jge
sub
mov
push
lock
rorb
dec
push
xor
inc
lods
imul
loop
ds
adc
nop
rcll
ss
sbb
xchg
add
mov
pusha
ficoml
cltd
xor
mov
jae
dec
xchg
add
add
out
xchg
pop
daa
pop
xchg
adc
popf
repz
cltd
sbb
mov
stc
out
and
outsb
jg
fs
stos
jb
inc
jp,pt
xchg
mov
xchg
push
bound
and
inc
cmp
or
jbe
fucomp
shll
out
and
inc
inc
mov
pop
add
rolb
aaa
rol
mov
xchg
aam
jbe
imul
cmpsl
je
lock
push
mov
add
jae
cmp
or
shrb
enter
std
inc
add
imul
dec
inc
in
jge
ljmp
insl
mov
add
push
dec
arpl
push
xor
stc
and
adc
gs
xor
xchg
pusha
enter
in
dec
call
inc
shrl
mov
pop
add
add
dec
loopne
xchg
and
das
adcb
test
push
xchg
mov
xchg
dec
imul
mov
jge
fdivl
fmull
inc
scas
push
jecxz
cmc
sub
punpckldq
lds
mov
lret
inc
inc
ret
cmp
out
rcr
stc
inc
cmp
aad
mov
call
push
dec
add
stos
jno
mov
push
cmp
jno
inc
cmpsb
sub
and
inc
cli
xchg
decl
dec
cmp
mov
daa
inc
jo
mov
mov
mov
jle
stos
jge
icebp
sbb
fldl
divl
push
mov
das
pop
inc
inc
cltd
test
mov
xchg
jp
push
mov
dec
push
mov
mov
jnp
jle
or
add
bound
lahf
dec
rcr
cmovns
dec
or
les
add
add
add
adc
adc
sar
xchg
mov
jbe
std
cmpb
mov
mov
or
lods
movsb
sbb
mov
add
outsb
lcall
test
mov
xchg
adc
mov
and
and
sti
xorb
mov
fimuls
aas
cld
dec
jo
push
sahf
lods
stos
push
insl
outsb
sub
xchg
add
xor
out
aad
jp
jecxz
pop
inc
mov
inc
sbb
icebp
pop
mov
sarb
mov
cbtw
pushf
push
loope
fneni(8087
or
shll
es
test
int3
sbb
cmpsb
jl
into
sbb
push
mov
dec
dec
adc
push
adc
pusha
movsb
sub
fs
pop
call
daa
aam
je
push
cmp
mov
add
push
gs
gs
add
cmp
loopw
call
out
jo
es
jge
xor
sbb
jae
xchg
pop
inc
iret
daa
sub
cmp
sbb
mov
xor
jge
mov
cltd
jmp
inc
pushl
lcall
adc
sbb
dec
bound
sub
or
inc
xchg
aam
int3
xorb
mov
xor
xor
popa
test
aam
xchg
scas
mov
push
imul
add
add
dec
pop
pop
dec
ss
shlb
inc
mov
jg
mov
mov
insb
jnp
adc
stos
fabs
test
cmpsl
popa
xchg
mov
loop
fildll
into
add
inc
fldcw
or
sbb
lock
orb
pop
je
or
fdiv
mov
jne
jae
sbb
mov
cmp
push
out
xor
lahf
inc
andl
and
flds
add
add
add
add
xchg
xchg
push
cmpsl
push
ficompl
sub
andl
mov
pop
add
pop
push
lret
sahf
push
sub
jnp
mov
lds
pop
fldt
add
jl
les
out
or
xor
xchg
les
sbbl
std
xchg
test
pop
cmp
das
jmp
out
fdivr
loope
xchg
inc
rcrb
pop
cmp
jae
out
leave
test
and
push
les
add
add
add
add
shl
adc
clc
mov
jp
dec
mov
and
cltd
sti
shlb
push
das
out
pop
adcl
xlat
cli
in
repnz
push
sbb
pop
mov
pop
sti
mov
loope
jp
and
loope
ja
jb
filds
xor
jmp
ja
xor
xchg
ljmp
adc
push
sti
ja
jne
add
xchg
aam
iret
in
xchg
loop
add
add
push
dec
dec
iret
mov
fsubs
movntq
inc
lock
fidivl
mov
or
sti
in
jg
jae
cmpsb
xchg
dec
push
sbb
fwait
pop
loopne
ror
pop
rorl
loop
lods
cld
aam
xchg
sarb
adc
lds
cmp
enter
xchg
ljmp
mov
cmpsl
ret
add
pushf
dec
push
xchg
dec
mov
pop
test
movl
xor
sbb
and
in
pop
fcoml
mov
jb
stc
sahf
and
jne
pop
mov
stos
pop
rolb
jbe
mov
xchg
test
repnz
repz
fsub
in
repnz
pop
das
add
sbb
aam
inc
es
sub
sub
lret
lock
inc
push
jmp
add
inc
and
rcr
jbe
lret
or
xchg
cmpsl
jne
add
lahf
add
imul
push
mov
add
pop
sub
adc
pop
pop
les
cwtl
inc
mov
push
lds
lcall
mov
rcrl
divb
push
lods
sbb
pop
mov
loopne
call
adcb
and
lahf
add
aas
adc
stos
xchg
or
or
fdivp
or
or
icebp
inc
out
mov
decb
and
cwtl
fistpll
sarl
inc
mov
pop
mov
mov
push
mov
enter
dec
mov
aaa
es
inc
inc
jl
mov
adc
jecxz
in
jl
mov
movsl
or
sbb
or
jle
loopne
stc
cmp
mov
pop
das
mov
icebp
ds
test
test
scas
das
fwait
les
cmp
add
dec
cmp
lret
or
mov
jp
push
fwait
lods
test
ret
sub
mov
cld
pop
not
dec
es
pop
punpcklwd
mov
rclb
cld
mov
push
xor
xchg
sbb
fadd
pop
dec
jl
outsb
test
dec
fs
scas
xor
sub
add
pop
orl
and
mov
test
inc
add
out
jae
test
fldcw
inc
stc
jne
cmc
inc
ficomps
inc
cmc
sar
jp
aas
lods
push
pop
das
inc
lea
das
or
enter
scas
bound
sahf
xchg
jo
andl
add
push
cmp
lds
icebp
stos
insb
xor
cmpsl
pop
mov
stc
dec
xor
imul
jp
fdivrs
pusha
mov
xchg
fldl
add
add
adc
push
fs
hlt
fnsave
in
lods
in
mov
mov
xchg
cmp
push
xor
cmp
jg
cmpsl
adc
sub
loope
aad
dec
cmp
fs
mov
loope
inc
mov
mov
cmp
outsb
push
adc
xchg
aam
push
popa
push
push
push
adc
mov
push
add
out
cwtl
xchg
outsl
sti
fidivl
inc
or
add
pop
sub
aas
lret
into
rcr
mov
mov
adc
arpl
jns
mov
and
cmp
iret
mov
sub
sub
mov
xor
nop
fucomi
dec
add
lock
inc
pop
stos
sbb
into
mov
mov
popa
scas
ss
mov
pop
mov
inc
inc
ja
adc
mov
add
add
scas
push
movsb
ss
xor
mov
insb
inc
push
jg
jg
cmp
fs
lcall
cmp
icebp
and
inc
push
hlt
arpl
dec
repz
mov
aad
cmp
stos
sbb
test
lock
add
das
mov
jne
xlat
or
addr16
push
xchg
mov
add
xor
pop
std
sbb
xchg
outsl
pop
jg
pop
imul
adc
mov
movsl
push
je
int
daa
shl
std
adc
adc
dec
sub
adc
push
test
jp
clc
and
outsl
sub
and
xchg
fdivrs
sbb
daa
pop
test
fists
test
jmp
sub
push
loope
outsb
rolb
push
mov
frstor
nop
cmpsb
dec
add
add
bound
int
ret
jecxz
shrl
and
mov
adc
lret
mov
push
ss
lds
xlat
insb
rcr
adc
pop
or
adc
int
xchg
das
push
sub
jle
mov
push
inc
mov
fcom
sbb
ret
add
or
dec
aam
mov
xor
iret
aad
xor
sbb
sub
ret
add
outsb
loope
push
test
es
imul
add
add
add
add
ja
sub
scas
mov
mov
xchg
mov
add
aam
sahf
scas
jns
lods
shl
push
xchg
sub
aaa
daa
push
sub
sahf
scas
cmp
jno
out
stos
ror
sbb
into
cmp
and
mov
enter
and
rolb
add
sbb
lcall
cmp
clc
rolb
orl
cmp
pop
rcrb
pushw
jno
cli
add
add
daa
inc
add
insb
andnps
jns
mov
aam
loop
std
pushf
jl
es
mov
lahf
inc
dec
bound
jbe
outsb
xor
mov
sbb
in
jae
outsl
jmp
rorl
push
cmp
repnz
shlb
repnz
stc
ljmp
and
pop
sbb
clc
shlb
jne
jbe
cli
push
add
sarl
push
mov
add
sbb
adc
and
adc
hlt
mov
jle
xchg
xorl
dec
and
mov
inc
inc
in
xlat
sbb
aad
pop
mov
add
dec
inc
les
xlat
imul
push
xor
jge
or
xlat
decl
std
sbb
std
and
sub
es
cmp
lahf
fcompl
xchg
ficoms
or
add
cli
ret
mov
sarb
mov
aaa
out
repnz
sbb
cli
std
jb
add
mov
mov
xchg
sbb
sbb
addb
ss
fildl
push
pop
pushl
pop
push
movsb
jge
adc
data16
or
shl
fisubl
sbb
pop
call
cwtl
aaa
jae
in
insl
addr16
test
jnp
add
loopne
aaa
in
dec
cmp
jmp
push
mov
lock
das
lcall
js
lcall
mov
pop
and
leave
ljmp
lret
fisttpl
xor
aaa
icebp
rolb
fildll
pushf
pop
scas
repnz
sahf
imul
rorl
push
push
leave
push
push
adc
push
in
cmp
xor
and
call
ja
sbb
cmp
addl
pop
add
test
fldenv
xor
cli
ja
lret
fldl
hlt
add
fstp
imul
pop
rcrb
test
roll
jo
push
sti
or
pop
mov
data16
pushf
ja
add
in
in
cmp
loope
ja
mov
pop
sbb
push
lcall
out
rol
jnp
adc
sbb
idivl
add
inc
dec
cmp
inc
arpl
pop
pushf
movsl
cmpsl
cwtl
fwait
aas
cmpsb
insb
loopne
clc
xor
loopne
push
pop
dec
dec
add
hlt
mov
es
jns
lcall
push
lods
mov
add
dec
mov
xlat
jo
mov
sub
cmp
cmpsb
div
mov
lds
mov
dec
jp
leave
addr16
pop
mov
clc
add
lret
dec
add
dec
daa
ljmp
add
ret
rorl
sub
rcll
jae
je
and
and
push
fistps
xchg
cmpsb
out
arpl
aad
cmc
fstpl
mov
pop
fistpl
mov
lcall
pop
xor
mov
mov
cmpl
mov
inc
insb
xchg
sbb
fcmovnbe
push
jl
cwtl
sbb
dec
out
add
add
sahf
fsub
sbb
push
ja
adc
fimull
insb
insb
fcoml
mov
add
das
push
das
mov
dec
popa
xchg
rcrl
add
jnp
imul
dec
push
jo
cmp
and
adc
mov
xchg
inc
test
in
dec
or
add
mov
cmp
fs
test
lret
cmp
rclb
dec
jp
leave
lea
int3
lock
mov
pop
add
add
add
add
jnp
jg
ss
imul
fs
mov
fstpt
sbb
das
jl
push
add
mov
lods
xchg
sub
mov
mov
dec
xor
add
popa
jne
test
push
adc
scas
test
mov
add
aaa
ret
mov
adc
ja
push
xor
mov
ss
or
aaa
fstpt
add
ret
add
enter
mov
shll
loop
pop
mov
pusha
sub
cmp
das
jg
dec
sbb
fisttpl
lcall
shrb
cmpsb
dec
jo
test
or
scas
xchg
mov
inc
pop
jg
clc
sti
stc
popa
stos
aad
cld
mov
pop
pop
repz
rorb
and
mov
lahf
xor
std
aaa
pop
aad
mov
sbbb
adc
add
add
sub
idiv
and
bnd
add
into
push
mov
sbb
adc
out
mov
pop
xchg
rcl
js
mov
repz
lcall
cld
mov
add
cltd
lds
mov
sbb
mov
adc
xchg
in
jl
out
pop
fcmovne
divl
lahf
repnz
add
enter
fstl
xor
add
ljmp
out
filds
enter
inc
add
imul
pusha
xchg
jle
xlat
xchg
jecxz
and
pop
cmp
inc
mov
shl
inc
ret
cmpsl
popf
shll
lock
icebp
xchg
xor
jns
mov
loopne
inc
nop
popa
pop
push
movsl
in
xchg
fldcw
xor
mov
cmp
and
adc
lahf
add
jae
or
sbb
std
out
cli
xor
popf
add
mov
gs
cmp
fwait
cmc
movsl
adc
das
mov
push
cli
inc
sti
xor
jl
xor
adc
add
sarl
gs
adc
pop
test
sub
pop
daa
jo
clc
movsl
pop
in
sub
jle
mov
or
hlt
imul
or
mov
mov
jns
jp
jl
add
fnstenv
rcrb
test
imul
add
out
loopne
test
nop
mov
outsb
lcall
inc
mov
ret
aad
dec
xor
shll
mov
mov
jge
inc
movsl
popf
xchg
hlt
or
shll
add
ret
into
leave
ret
aaa
data16
xchg
out
jecxz
push
ror
int
and
fiaddl
ret
stos
pop
adc
sub
clc
lods
leave
push
mov
add
sub
subb
mov
test
fldl
add
add
faddl
adc
mov
movsb
pop
cmp
inc
fmuls
mov
and
jp
sti
sbb
loopne
scas
add
push
jge
scas
std
loope
or
pop
out
xor
inc
pop
jo
sbb
ja
cltd
test
dec
cmp
lods
mov
dec
inc
mov
sub
jnp
cmp
sub
push
jbe
sub
push
into
call
mov
mov
faddl
jne
in
aam
mov
rclb
cmpsb
dec
lds
cmp
lcall
iret
mov
jnp
xchg
add
repz
std
mov
or
jl
or
sub
pop
add
out
or
int
imul
dec
dec
pop
jo
and
sti
jmp
movsl
iret
xchg
sbb
push
mov
add
ret
call
inc
pop
xchg
xchg
or
stos
mov
outsb
sahf
push
or
lock
push
push
mov
call
add
add
add
add
das
mov
mov
sbb
and
std
hlt
dec
pusha
pop
xchg
je
xlat
adc
aam
dec
cmp
xor
in
std
mov
mov
cmp
jno
push
jns
mov
out
jg
mov
lahf
or
mov
mov
inc
mov
push
cltd
mov
in
daa
add
ja
mov
shll
daa
or
ret
jmp
stc
mov
cld
sub
or
add
lea
inc
push
movb
cltd
int3
sub
fs
xchg
inc
daa
cmpsl
mov
cltd
dec
and
xor
aas
std
adc
sqrtps
leave
cmpsl
fs
push
and
add
adc
in
jl
pop
into
cs
mov
adc
mov
and
pop
cld
xchg
into
mov
cmpsb
rorl
push
push
inc
adc
js
xlat
addl
or
sahf
loop
mov
sub
add
add
mov
addr16
jp
push
out
mov
mov
sbb
hlt
xchg
cmp
stos
cs
add
lret
add
mov
lret
jno
js
enter
imul
or
mov
pushf
fs
push
pop
icebp
mov
test
sahf
sbb
and
mov
es
mov
pop
sarl
arpl
into
mov
rclb
add
sahf
lea
call
ficoml
lods
fstpl
and
ret
adc
mov
int3
out
adc
in
pop
into
sub
push
pushf
sbb
or
and
mov
sbb
rol
push
movups
push
push
sahf
push
js
mov
xchg
imul
movsb
pusha
xchg
add
ss
sbb
pop
xor
add
add
add
add
cmp
jp
pop
cmp
fstl
push
out
shrl
outsb
mov
in
lahf
push
xchg
push
lock
es
scas
loop
push
jp
xchg
cwtl
sub
icebp
push
or
cmp
pop
cli
inc
lahf
outsb
mov
cmpsb
jmp
jns
cli
push
sub
cli
inc
xchg
ret
dec
mov
mov
xor
pop
xor
subl
xor
push
test
lahf
add
add
dec
jmp
stos
mov
or
repnz
dec
cwtl
and
and
lods
out
jmp
add
bound
out
xor
insb
rolb
jbe
inc
xor
enter
mov
enter
pop
mov
aam
mov
jmp
xor
iret
xlat
mov
cmp
mov
movups
mov
fbld
xchg
in
das
mov
mov
jno
jmp
ja
mov
or
pop
add
pushf
insb
in
lods
jbe
xor
add
stos
mov
and
dec
lods
inc
inc
add
iret
pop
testb
jge
ja
push
orb
imulb
jl
es
add
cmp
push
incb
jnp
cmpsb
pop
xchg
dec
lds
inc
add
out
stc
add
add
sub
sbb
fcom
mov
sbb
rclb
es
pushf
sbb
xlat
insb
or
rol
sbb
push
cmpsb
mov
adc
mov
out
lcall
or
jae
xor
mov
cli
aam
jmp
push
popa
cmp
push
cmp
cmp
xor
scas
call
flds
adc
movsb
jbe
xor
push
mov
add
in
adcl
stos
aas
int
andl
ret
cmp
movsl
jl
or
xchg
outsl
jnp
mov
pop
das
xor
add
and
and
leave
lock
ret
mov
stos
jl
aaa
stos
and
pop
rorl
cmp
push
clc
hlt
mov
sub
cld
mov
add
ss
pop
pop
scas
push
imul
jmp
cmp
add
add
inc
imul
into
add
jl
lock
dec
ss
xchg
dec
decl
sub
add
inc
xchg
shll
mov
movl
mov
xor
stos
pop
or
mov
ret
jne
push
xchg
mov
sbb
mov
mov
adc
lret
sbb
add
sbb
push
call
repnz
mov
std
xchg
sub
and
sbb
pop
inc
into
mov
dec
rorl
cwtl
mov
xor
addr16
mov
aad
fistl
enter
int3
int
dec
add
movsb
adc
jp
mov
ljmp
pop
xchg
cld
pop
rolb
scas
lret
ret
xchg
ljmp
inc
or
inc
adc
jp
loopne
cmp
ret
add
add
xadd
cmpsb
mov
cmpsl
loope
and
addb
loop
test
mov
xor
adcb
pop
mov
jmp
jbe
and
orl
out
inc
cmp
add
pop
and
dec
inc
xchg
sub
and
xchg
ja
jg
jmp
inc
scas
inc
mov
inc
mov
mov
lds
inc
pop
scas
jbe
hlt
mov
sbb
adc
cltd
cmpl
jns
incl
jp
add
add
pop
popa
or
ret
scas
cwtl
aaa
sarb
jbe
ret
popa
shr
mov
insl
movsb
in
insb
int3
stc
dec
or
xor
pop
jne
mov
push
lock
push
nop
adc
mov
dec
subl
repnz
push
lret
sbb
xor
sahf
adc
test
mov
xchg
mov
dec
das
adc
clc
sti
xchg
shlb
add
add
or
jb
jo
leave
pop
pop
adc
pop
insb
sahf
lcall
dec
push
gs
and
adc
push
push
jle
or
inc
fisttpll
lods
xor
sub
outsb
lret
push
xchg
add
ficoml
loope
mov
in
lds
pop
lcall
dec
sub
adc
sub
inc
lret
or
push
lods
add
xchg
leave
mov
fdivp
sbb
jns
test
loopne
mov
xorb
sub
scas
cwtl
mov
pop
jae
jge
pop
xor
add
sbb
adc
mov
and
popa
iret
mov
iret
push
xlat
scas
mov
sbb
scas
jne
shrl
sbb
or
out
mov
outsb
jmp
or
loop
jecxz
xchg
lea
pop
loopne
faddl
add
dec
mov
adc
pop
jno
cmpsb
adc
and
cmpsl
test
xor
dec
mov
xor
cmp
push
mov
clc
pop
xchg
vpaddsb
xor
mov
insb
enter
push
fwait
movsl
insl
mov
adc
inc
lcall
mov
inc
mov
jg
rcrl
or
add
vpminsw
mov
aaa
jbe
push
in
add
add
xchg
adc
fsts
sub
movsl
pop
pop
addr16
pop
pop
je
ret
cli
daa
dec
js
iret
push
lret
ds
insb
mov
insb
std
sbb
add
daa
or
xor
mov
push
sbb
jns
adc
mov
sbb
aam
scas
das
dec
out
jle
xchg
mov
xchg
cmpsb
mov
mov
or
pop
push
add
rorb
jb
sbb
dec
fstl
cmp
ja
sbb
jg
mov
fistps
es
addr16
ret
mov
sarl
pop
icebp
sahf
lods
lds
mov
iret
sub
in
pop
inc
push
sbb
jno
dec
aam
jns
jl
push
ljmp
or
and
fst
mov
scas
add
insb
jecxz
mov
outsl
add
test
xchg
xor
outsb
or
xchg
jnp
adc
jnp
adc
ret
test
fsub
xchg
cs
or
pop
and
test
nop
out
pop
test
cltd
or
shlb
scas
addr16
mov
scas
rcll
mov
lcall
test
add
outsb
jo
inc
into
xor
sub
stos
test
mov
aad
or
sbb
notl
cmp
jno
jg
stos
lea
sarl
fnstcw
add
add
jb
nop
nop
lret
inc
rol
lods
mov
mov
cs
pusha
test
jg
push
jge
xchg
fwait
aas
mov
sub
negb
cmpsl
dec
clc
add
test
push
jmpw
vpunpcklqdq
push
out
cmp
scas
shrb
bound
sub
insb
shlb
mov
cmp
dec
push
test
enter
mov
add
jno
adc
xor
xor
mov
add
xchg
jl
imul
xor
scas
icebp
insl
cmp
jne
das
cmp
shlb
jmp
add
lea
sarb
call
std
sub
fstpl
sahf
addl
sub
je
inc
lock
dec
inc
lret
and
ds
jmp
push
pop
adc
hlt
in
outsb
or
add
add
add
add
scas
mov
ret
dec
adc
mov
stos
stc
je
sti
pop
mov
add
shr
and
jge
fadds
daa
cmpsl
in
pop
mov
loope
std
mov
rorl
add
shr
pop
addb
dec
sbb
push
fdivs
fimull
pop
iret
sbb
push
loope
pusha
test
xchg
push
add
and
or
mov
fstp
loopne,pn
mov
adc
mov
out
push
and
mov
mov
jbe
inc
xor
test
in
add
or
je
jl
ljmp
arpl
lret
mov
rcrb
test
mov
ror
sbb
ja
f2xm1
jno
ss
mov
lods
jl
add
rclb
mov
inc
add
add
cwtl
mov
ja
out
out
in
data16
pop
pop
adc
jp
mov
pop
ljmp
jecxz
xor
inc
pushf
push
xchg
add
in
push
imul
pop
repz
cmp
imul
aad
dec
adc
mov
cmp
push
mov
hlt
xor
imul
adc
adc
out
mov
xchg
mov
dec
mov
aas
jo
jg
pop
jecxz
aad
scas
add
add
daa
repz
or
lods
cmpsb
popa
dec
mov
gs
pop
cmp
or
lcall
sarb
jl
fstpl
sub
ss
push
ret
jmp
xchg
add
mov
cmp
mov
or
xlat
out
int3
mov
enter
rolb
fnstenv
xchg
icebp
jl
xchg
add
cli
lret
mov
xchg
lahf
jns
adc
and
cmpsl
dec
out
fdivl
es
sbb
clc
mov
jle
icebp
aaa
imul
and
pop
mov
adc
dec
pop
sbb
mov
cmp
test
and
int3
jne
cmp
mov
std
inc
sub
arpl
fcompl
mov
in
inc
insl
in
pop
push
jo
popa
popf
fsubr
icebp
inc
lret
stc
cwtl
addr16
add
cmc
orl
ja
cmp
inc
lods
push
ljmp
cmp
sbbl
hlt
ljmp
add
add
add
inc
adc
bound
imul
add
adc
and
adc
xor
shrb
push
sbb
iret
imul
repnz
jg
pop
jmp
sbb
nop
sti
sar
pop
adc
out
xor
or
data16
aam
fnstenv
stc
mov
addl
lods
push
cmpsl
ret
pop
sub
xor
mov
sbb
add
test
push
out
xorl
shll
pop
xor
cmp
cmp
adc
jle
cmp
insb
inc
les
cmc
shrl
dec
inc
sahf
mov
fldcw
cmp
xchg
sub
and
fsin
jo
push
pop
aam
popa
xor
sbb
inc
jge
push
mov
scas
add
negb
jl
xchg
mov
out
daa
in
aam
sbb
dec
push
es
or
mov
mov
iret
add
orl
lds
dec
ljmp
lret
mov
jp
cmpsl
pop
dec
insb
lods
mov
push
xor
jo
xchg
imul
xchg
or
dec
jb
imul
xor
sub
jmp
movsb
adc
pop
jge
les
leave
push
mov
push
repz
pop
push
loope
ja
orb
iret
mov
mov
add
cmpsb
cmp
cmp
mov
int3
mov
sub
fnstcw
add
ljmp
inc
xor
or
dec
push
jecxz
icebp
lcall
and
fdivrl
test
xorb
popf
sub
