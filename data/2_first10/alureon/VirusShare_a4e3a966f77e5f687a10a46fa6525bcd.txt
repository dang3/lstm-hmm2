add
jecxz
xchg
lock
ss
popa
mov
mov
push
arpl
adc
push
call
out
leave
scas
shll
shr
jbe
mov
sar
ror
and
scas
jns
cmc
jbe
icebp
mov
test
mov
lret
subb
movsb
fisubrs
rorl
addr16
pop
mov
mov
inc
xchg
dec
sbb
sbb
decl
pushf
mov
or
int3
adc
in
push
and
ss
into
popa
cli
adc
jmp
pop
cmp
ja
dec
mov
push
fsubrl
inc
inc
dec
ljmp
cld
repz
pushf
scas
dec
fmuls
adc
pop
js
arpl
and
enter
inc
dec
stos
ret
addr16
and
lcall
add
mov
enter
mov
add
in
sbb
mov
add
push
xor
in
cmpl
scas
mov
sbb
sub
sbb
push
stos
push
inc
icebp
mov
test
ret
aam
and
lret
fidivrl
jmp
mov
aam
testl
push
outsl
movsl
lea
mov
xor
and
dec
imul
das
mov
leave
sbb
cs
lahf
scas
sub
jne
jb
mov
adc
insl
fnsave
cmc
mov
sbb
push
fsubrl
mov
add
pop
add
mov
cmp
insl
cltd
push
jo
orl
js
sti
push
cmp
scas
movsb
cli
fisubrs
or
push
dec
into
jbe
lret
loopne
cld
cli
or
arpl
dec
cmc
dec
icebp
mov
jecxz
mov
ret
ret
push
dec
xor
pop
or
sbb
dec
pop
push
cmp
cli
mov
and
das
jns
negb
lods
jmp
repnz
xor
ljmp
das
frstor
jp
imul
sub
test
out
jle
push
xor
or
jns
sbb
pop
dec
dec
cmp
jl
mov
sbb
mov
dec
icebp
mov
outsl
fmull
sub
call
mov
fcmovbe
jl
xor
pop
add
cmp
jge
sub
fcoml
xchg
shll
jne
pop
std
daa
out
and
rcrb
inc
ret
jns
sbb
push
repnz
lret
cli
dec
pavgb
inc
pop
gs
cs
sub
jge
jecxz
push
outsl
outsl
xlat
mov
add
sbb
in
jo
mov
bound
fsubs
into
stos
pop
fdivs
imul
mov
cwtl
adc
jmp
cmpsl
ja
or
or
add
cmp
mov
inc
mov
xor
dec
cmc
aam
jns
jns
push
ret
das
cmp
insl
ljmp
repnz
adc
arpl
popa
cmpsl
sub
out
lcall
mov
push
xor
in
xchg
add
out
sahf
cmpl
sub
push
lds
lock
lods
xor
push
sub
jb
fwait
and
orl
inc
xor
jo
int3
movsb
xor
cltd
mov
repz
scas
js
adc
and
test
mov
jle
mov
cld
mov
imul
push
mov
jp
outsl
pop
lds
inc
sahf
push
lcall
ljmp
enter
push
or
pop
leave
cmp
or
in
xchg
cmp
clc
data16
repz
outsl
test
aam
out
lods
cld
jo
imul
push
repz
icebp
mov
arpl
daa
ret
mov
lds
pop
jmp
jp
xchg
cmp
fwait
dec
add
addr16
mov
leave
mov
fldenv
sub
fwait
mov
roll
loopne
es
aaa
cmp
mov
cmp
and
sbb
mov
dec
mov
lret
js
nop
xorl
cmpb
mov
call
in
int
mov
push
das
xor
and
ljmp
jb
jmp
and
rcrl
scas
mov
xor
or
sarl
or
mov
mov
and
and
cld
std
xor
add
sti
mov
inc
mov
ret
push
jmp
insb
fistpl
es
adc
add
push
dec
rcrb
imul
push
js
rorb
lret
test
xchg
rcr
dec
sbb
sti
into
pop
jl
sahf
xchg
or
or
addl
lret
or
fildl
scas
or
push
cmp
add
fistl
les
hlt
les
ret
or
jecxz
push
lods
and
sub
loope
xchg
push
push
andb
popf
lods
mov
push
cmp
or
iret
arpl
push
leave
aas
jmp
xchg
or
lret
jp
dec
pop
das
add
bound
stos
sbb
jne
pop
les
sbb
xchg
add
dec
cmp
dec
insb
xchg
xorb
fnsave
push
test
dec
into
push
iret
cmc
pusha
xor
es
nop
push
test
dec
push
jle
xor
push
mov
mov
xor
movsb
inc
push
mov
or
testb
daa
jmp
das
insl
xchg
fiadds
xchg
pop
mov
jb
cmp
cmc
cwtl
cld
and
sub
sarl
arpl
dec
out
push
les
push
cmp
adc
push
adc
icebp
aam
mov
lahf
add
adc
pop
jge
xchg
addr16
inc
lret
cmpsb
inc
pop
adc
int
fcoms
cmp
cmp
pop
xchg
cmp
or
clc
out
out
add
jae
sub
push
sbb
inc
test
fsubs
stos
adc
and
je
int3
mov
jmp
scas
lds
pushf
pusha
mov
jo
xor
iret
jl
sbbl
pop
adc
xor
mov
push
push
pusha
out
fs
test
imul
outsb
cmp
push
out
mov
adc
sbb
lret
or
ret
lock
mov
rcl
jb
cmc
std
jbe
push
loope
mov
or
movsl
jg
gs
pop
or
mov
jb
sub
push
shrl
xor
loop
mov
ret
mov
ss
lcall
sbbb
push
xchg
test
movsl
xor
adc
dec
jl
jge
inc
sbb
mov
shll
push
outsb
pop
sub
sub
cmpsl
mov
sahf
cmpb
fiadds
loope
rorb
push
xor
add
int
pop
mov
scas
pop
icebp
inc
adc
test
cs
adc
in
addr16
add
mov
in
aas
and
add
ret
or
pop
or
clc
int3
out
cmc
das
xor
dec
xor
push
adc
push
rorb
mov
push
cmc
mov
jecxz
stc
cmp
testb
cmp
cmc
jle
cmpsl
test
xor
pop
cmpsl
addb
in
std
cltd
fwait
sub
js
stos
dec
negb
push
cmp
push
or
add
es
xor
mov
les
push
jnp
int3
or
mov
add
stos
mov
cmp
or
xchg
jns
mov
insb
mov
std
sarb
lcall
inc
iret
dec
pop
mov
fincstp
rolb
dec
sub
cmp
popl
sbb
int3
sub
and
testb
adc
out
cmc
and
inc
pushf
or
addr16
push
clc
cmp
mov
div
push
mov
movsl
cli
jle
pop
out
ja
mov
dec
sbb
add
call
dec
xlat
jns
outsb
mov
jbe
adc
push
or
inc
mov
js
xchg
repz
repnz
mov
loop
cmovns
pop
fwait
sub
repz
xchg
ret
xorb
aaa
andb
add
xor
lea
cli
lea
pop
in
or
push
aas
ret
lcall
push
xor
inc
and
sbbl
lahf
sbb
imul
ret
stos
scas
pop
ss
lea
xchg
mul
add
mov
imul
and
sub
xchg
sahf
fiaddl
or
jbe
cmp
test
sub
lds
xor
sbb
aaa
mov
adc
jo
cld
arpl
xchg
int3
pop
nop
mov
ret
rolb
xor
cmpsb
out
jl
inc
mov
mov
ljmp
mov
push
mov
dec
jno
je
bound
fsubl
push
insb
mov
in
jmp
push
insl
shlb
pop
lods
dec
or
inc
jg
fdivr
xchg
pop
rclb
inc
daa
in
pushf
sbb
lret
mov
call
xor
dec
mov
dec
mov
adc
cwtl
js
push
jae
lods
xchg
out
jge
push
or
ficompl
cmp
sbb
bound
pop
pop
pop
jb
movb
cmc
xchg
pop
push
lret
imul
jb
sbb
jmp
sbb
cmpsl
pop
jmp
faddl
jno
cmpsb
sub
dec
fadd
scas
cmp
sub
xor
out
lcall
mov
mov
icebp
or
lcall
and
push
out
in
imul
sbb
mov
jno
mov
lahf
jp
and
add
std
popf
pop
sti
inc
daa
or
push
ljmp
lock
adcb
push
sbb
clc
daa
lahf
mov
xchg
push
shrl
jno
sub
lcall
call
or
psrld
iret
pusha
loope
xchg
lods
sub
fdivr
outsb
insl
pop
mov
push
xchg
adc
or
in
outsb
pop
mov
push
adc
and
jle
xchg
cwtl
imul
push
cmpsl
adc
pop
test
daa
in
jl
shrl
fimuls
mov
mov
int
sbb
adc
adc
jmp
pop
ss
js
out
ss
ret
add
fdiv
gs
cltd
or
hlt
jne
rorl
fistl
mov
add
and
in
insl
cmc
hlt
fwait
cmc
fnstcw
rcrl
lods
mov
lea
fistps
push
lods
sub
fnstsw
ror
stos
and
sarl
lods
insb
mov
push
leave
push
lods
popf
sti
cltd
aad
hlt
pop
xchg
dec
mov
mov
mov
ret
mov
rcrl
mov
mov
push
loope
pop
popf
mov
add
mov
cmp
repz
into
jmp
inc
mov
aaa
xor
test
push
or
inc
mov
aaa
popa
in
cli
pop
cmp
and
mov
hlt
cmpsb
sub
dec
and
out
pop
pop
std
pop
push
sub
insl
jae
js
dec
dec
cmp
sub
popf
int
lret
imul
shlb
xchg
push
lret
and
pop
mov
dec
ljmp
rol
nop
mov
into
stc
stos
frstor
insl
lcall
dec
jecxz
stos
ljmp
add
bound
pusha
mov
fsts
scas
fildl
nop
out
data16
ljmp
ret
inc
fstps
xchg
in
add
lcall
and
pop
and
mov
sbb
f2xm1
leave
das
shlb
xchg
dec
out
scas
and
mov
mov
lret
aad
mov
mov
lcall
mov
rclb
xlat
add
fsubr
lock
push
push
or
outsl
repz
fistps
dec
inc
push
sub
add
lahf
pop
int3
add
jo
cmp
cmp
push
outsl
or
pushf
aaa
cld
xor
cmp
popa
dec
test
clc
cltd
test
cmc
or
adc
jmp
mov
mov
sti
add
mov
cwtl
addr16
jae
sub
pop
lcall
andl
nop
cmp
stos
sahf
roll
mov
pop
stos
xchg
inc
out
mov
mov
in
insl
xor
aas
xor
or
sbb
mov
out
xchg
pop
mov
xchg
incl
enter
int
adcl
repnz
push
pop
xchg
push
gs
adc
lods
call
sub
jmp
mov
xor
mov
pop
out
cli
push
pushf
gs
xor
mov
jbe
dec
xchg
or
xchg
pop
les
aam
and
sti
cli
roll
loop
fsts
stc
popf
fbld
dec
gs
test
mov
cwtl
cmp
cmp
mov
repz
jecxz
push
xchg
es
adc
pushf
mov
xchg
aas
add
dec
or
stos
in
dec
or
xor
inc
rol
pop
fwait
in
fs
sbb
adc
fwait
subl
xor
cwtl
xor
push
dec
out
aas
mov
aad
lret
mov
clc
testl
std
js
mov
cld
pop
int3
lock
cltd
push
rorb
insl
push
inc
stc
xchg
and
das
mov
mov
out
dec
add
insb
inc
or
fs
jle
xor
sbb
cwtl
pop
adc
inc
xchg
inc
jne
mov
mov
ja
aam
stos
sbb
xchg
lahf
cwtl
xor
xor
lds
dec
loop
sub
xor
pop
in
mov
int3
pushf
and
fld
out
cmpsl
xchg
sub
mov
fisubrl
or
jmp
aas
fimull
out
pop
js
lcall
pop
dec
mov
fdivrl
fwait
mov
in
push
fistps
add
dec
js
add
out
cld
int3
push
pop
or
xor
test
or
loopne
pop
push
rcl
insl
mov
xchg
fnstcw
bound
push
pop
sub
jecxz
sbb
clc
rcl
testl
pop
or
dec
in
xchg
mov
ljmp
dec
mov
outsb
mov
rcll
jo
je
pop
loopne
or
nop
mov
std
imul
pop
out
sbb
add
inc
add
pop
test
cmp
daa
xchg
dec
lcall
mov
mov
mov
movsl
fcompp
pop
jne
cltd
lcall
outsb
xchg
xor
jge
sub
or
pop
fiadds
test
lret
mov
push
add
jg
rorl
or
push
cmpsl
jl
ret
lcall
adc
popa
push
idiv
pop
adc
mov
scas
ficoms
add
push
push
andb
shl
lret
adc
adc
scas
mov
pop
cmpsl
ljmp
mov
insl
sahf
pushf
push
sti
outsl
lcall
xor
clc
sbbb
out
fiaddl
pop
test
test
pushl
int3
sbb
push
jbe
mov
adc
imul
jge
pushfw
or
arpl
pop
aaa
stos
icebp
xor
xor
movsb
imull
hlt
aad
test
ss
cwtl
test
xor
mov
das
outsl
stos
repz
fisubl
inc
mov
shll
sti
imul
pusha
mov
stc
xchg
jo
cltd
push
xchg
lcall
fisubrs
mov
insb
in
adc
mov
decb
cmp
das
lods
sbb
in
stos
jmp
ljmp
and
pop
push
aad
cmp
into
push
int3
inc
lods
xor
push
inc
popw
add
scas
int3
pushf
push
adc
jecxz
cwtl
sbb
das
dec
push
and
out
push
shl
adc
mov
pop
push
dec
fistpll
inc
idiv
cli
out
cmp
gs
into
add
dec
leave
test
cmp
call
inc
aaa
xchg
sub
cmp
jecxz
jle
mov
push
mov
mov
sbb
psrlw
and
mov
pop
xchg
cmp
sarl
fdivr
jns
xchg
mov
mov
movsb
add
in
push
add
ss
push
mov
push
aad
fsub
push
jns
push
mov
pmulhuw
add
cmp
je
stos
xor
sbb
shlb
divl
jl
xlat
sar
pop
stc
cmpl
xor
mov
add
xchg
jno
fs
mov
pop
addr16
loope
outsl
arpl
xchg
push
mov
outsl
jns
int
jne
push
daa
outsl
cwtl
xchg
mov
mov
cld
add
fs
mov
scas
test
outsl
fldt
and
outsl
mov
mov
aad
sbbl
inc
inc
pusha
push
lret
jns
call
pushf
pop
add
arpl
addb
mov
out
fstpt
ds
cmp
mov
and
aas
ljmp
jg
jno
shll
xchg
lds
imul
sbb
imull
cmp
orl
jmp
adc
sarb
mov
test
inc
jmp
dec
pop
mov
pop
lahf
adcb
inc
cmc
adc
mov
nop
and
lahf
push
flds
mov
fmul
push
sub
test
fstl
leave
and
mov
dec
les
mov
loope
and
mov
sbb
pop
or
adc
or
jmp
in
fwait
xchg
mov
add
test
xchg
je
dec
jle
and
in
xlat
in
aas
out
add
pop
adc
jns
xor
mov
adc
mov
dec
notb
ljmp
enter
dec
mov
xor
in
push
leave
pop
std
xlat
inc
inc
push
push
popf
push
xor
fwait
dec
insb
cmp
xchg
addr16
dec
scas
loope
mov
pop
lahf
pop
push
outsb
sbb
js
jbe
mov
sub
or
push
sbb
xor
hlt
push
daa
mov
mov
aad
cltd
jb
out
mov
adc
popf
lock
mov
xor
lods
aas
loope
cmc
dec
movsb
gs
bound
fiadds
adc
stos
push
les
bound
pop
jae
mov
xchg
pop
dec
shr
cmpsl
xchg
out
cld
data16
pusha
adc
and
movsl
inc
mov
movsb
xor
xchg
outsl
xor
push
std
cmp
repz
fstpl
lcall
xchg
pop
negl
fldenv
pop
aaa
dec
loopne
movsb
push
loop
xor
pusha
sub
cmc
jnp
pop
push
jo
shlb
add
xchg
das
test
fstl
in
or
add
in
cwtl
push
int3
xlat
cmp
cli
and
movsl
idivb
push
xlat
mov
jns
jnp
arpl
mov
cmp
ficompl
push
cmpsl
and
mov
cmp
mov
in
adc
add
subl
fiadds
sti
cli
pop
inc
dec
xchg
push
loopne
push
xor
and
pop
fwait
mov
xlat
pop
mov
dec
mov
dec
shl
mov
in
scas
pop
mov
sarb
xorl
add
add
pusha
cmp
xlat
lret
gs
fistpll
sbb
add
iret
popf
jmp
cmpsl
or
or
pop
inc
xchg
arpl
test
std
dec
popf
dec
or
cmp
enter
pop
int3
xor
xchg
aaa
js
sub
imul
xor
adc
clc
cmpsb
cmp
into
jg
push
jle
and
rcrl
jae
inc
jns
bound
pop
cltd
lcall
das
test
add
ficomps
sub
add
mov
and
repz
loopne
aas
pop
adc
pop
daa
sbb
or
inc
jno
enter
sub
xchg
dec
xchg
ss
dec
dec
add
je
mov
shl
aaa
inc
repz
push
jmp
mov
repz
xor
mov
jno
or
pop
sahf
nop
pop
aaa
pop
sbb
xor
mul
inc
daa
xchg
xchg
jne
ljmp
mov
and
fisubl
adc
js,pn
outsb
jno
inc
xchg
divl
mov
adc
mov
int3
popa
je
xor
mov
mov
mov
inc
cmp
and
push
xchg
int
sahf
pop
test
cld
xor
leave
mov
cmc
iret
repnz
push
dec
push
aaa
mov
stc
lret
pop
cltd
nop
repnz
inc
xchg
push
lock
jle
xchg
out
fsubrs
push
sbb
add
lahf
adc
xor
cmp
pop
xchg
stc
icebp
dec
aaa
in
mov
sbb
sbb
into
mov
shrl
ret
jl
push
mov
cmpsl
cmpsl
fisttpl
sub
testl
lcall
fstpt
lock
popa
cmp
inc
scas
mov
mov
add
mov
out
cmp
mov
lahf
dec
out
les
cli
xlat
clc
scas
loop
adc
push
pop
rcll
xchg
dec
adc
push
dec
jle
dec
iret
outsb
mov
xchg
adc
pop
repz
ds
jge
fwait
push
ds
xor
push
xchg
pusha
pop
int3
call
ljmp
shrb
repz
fistpll
repnz
adc
outsl
push
add
push
insb
lods
into
sbb
adc
les
mov
jno
adc
pop
fwait
xor
js
push
int3
adc
dec
out
daa
mov
inc
sub
mov
jns
addr16
pop
sbb
or
scas
lods
xor
lods
repz
push
mov
ret
test
mov
jno
xchg
xor
mov
and
push
and
mov
inc
xchg
fucomp
cmp
dec
test
jno
or
jle
scas
mov
clc
and
add
fistpll
push
push
add
mov
jo
sub
fbstp
in
lret
pop
nop
push
push
hlt
jge
iret
data16
dec
lss
pop
addr16
dec
out
mov
rclb
mov
and
daa
sbb
imul
leave
pop
jns
fdivl
push
xchg
fs
psubw
js
xchg
out
in
shll
pop
jne
add
std
mov
jmp
sbb
rolb
push
xor
xchg
lock
inc
pop
cmp
js
mov
adc
push
and
in
loop
or
push
pop
mov
jle
lahf
sbb
enter
mov
call
mov
aas
mov
test
out
and
fcomp
mov
pop
outsb
adc
pushf
add
gs
scas
sbb
cmp
mov
and
pop
std
std
xlat
mov
ljmp
outsb
movsl
xor
and
cmp
fistl
outsl
lret
lcall
push
js
dec
push
sbb
loop
sbb
xchg
mov
mov
cli
clc
add
xchg
sbb
xlat
out
pushf
iret
lock
cmp
flds
addl
or
fdivl
mov
cmp
mov
test
and
dec
loop
flds
mov
mov
dec
stos
push
sub
lret
push
js
arpl
jae
xchg
repz
scas
jle
lock
push
push
pushf
pop
cmp
lock
jno
stos
jle
or
dec
or
out
hlt
xor
jae
js
pop
xchg
sub
aaa
out
inc
arpl
sbb
in
cli
adc
insb
cmp
cmp
stos
outsb
mov
adcb
add
jno
sbb
shr
mov
out
imul
push
jae
push
mov
fimull
pop
das
mov
xorl
add
inc
ljmp
inc
enter
loopne
and
es
dec
mov
idivl
cmpb
jge
jae
jne
pop
push
stos
sahf
negb
rorl
pop
cmp
mov
mov
mov
iret
jmp
pop
loopne
sbb
aas
mov
daa
cmc
stos
repnz
xchg
cld
jb
adc
pop
test
ja
clc
mov
mov
mov
fucom
inc
xor
add
sbb
jmp
das
es
mov
jbe
jae
lcall
pop
sbb
adc
sbb
mov
out
clc
mov
std
sti
outsb
mov
imul
enter
je
adc
ret
xor
pop
and
dec
push
popf
or
cmp
or
outsb
jae
jg
and
dec
push
dec
lock
sbb
jp
inc
cmp
ljmp
lahf
ror
jmp
mov
loopne
sub
sti
xchg
pop
pop
bound
js
or
scas
movsb
pop
aad
hlt
mov
push
in
orb
imul
push
dec
lcall
arpl
loopne
addb
jnp
sbb
in
sbb
jl,pt
inc
xor
hlt
sbb
or
sbb
stos
mov
in
cli
mov
xchg
emms
and
stc
sti
adc
and
dec
ja
xchg
mov
inc
stos
adc
subl
cltd
lock
mov
fildl
sbb
fs
notl
push
outsb
cmp
lds
pusha
push
sub
jae
nop
inc
gs
pusha
mov
pop
push
cltd
sbb
push
xor
jb
jns
lock
xchg
js
hlt
mov
movsb
inc
cmp
popf
sbb
mov
mov
lds
add
icebp
and
mov
add
sbb
popa
pop
add
cmpsb
or
fucom
push
lcall
lret
cmp
sub
xor
fistpl
lods
sbb
stos
repz
or
adc
hlt
jo
mov
xchg
push
mov
into
xor
jb
data16
xor
xlat
push
insl
mov
mov
fdiv
scas
and
insl
fwait
sub
mov
or
dec
push
dec
push
loope
push
jno
xchg
test
dec
push
dec
cs
inc
ja
or
rorl
jae
cwtl
or
sbb
ja
xorl
out
adc
xor
inc
call
inc
or
pop
mov
inc
cmpsb
or
scas
stos
lahf
addb
add
std
jae
fwait
stos
adc
pushf
sbb
leave
dec
xchg
cmpsb
imul
cmpsl
ss
dec
movsb
fadd
movd
outsl
ljmp
push
jno
jmp
sbb
jnp
cs
leave
outsl
jo
sti
dec
repnz
loop
add
or
lcall
jb
push
jge
dec
dec
pusha
sarb
fwait
loope
es
test
test
testl
mov
adc
shr
mov
cmpb
jp
jne
cwtl
or
sub
push
fnop
fistl
mov
jb
jecxz
or
adc
daa
sti
pop
pop
test
sbb
inc
arpl
stc
sbb
sarl
dec
lret
and
in
iret
inc
dec
pop
push
outsl
call
mov
ljmp
jnp
push
cmpsb
rclb
ss
inc
adc
ret
mov
fdivr
ss
xor
incb
fists
fcom
in
ds
ss
pop
mov
and
fnsave
sti
xchg
in
mov
sarb
cmpsb
xlat
mov
mov
popa
push
test
int
adc
test
push
inc
add
adc
pop
fisubl
lahf
int3
jge
xchg
lods
add
in
jmp
shlb
mov
inc
push
cmp
int
ja
sbb
repnz
sbb
popa
ds
data16
mov
xor
xor
inc
cmp
or
xlat
mov
pop
lahf
xlat
mov
xchg
lcall
sbb
shrl
inc
add
push
or
lret
shrl
std
jno
cmp
ret
or
jmp
orl
dec
adc
sbb
mov
lret
adc
ja
scas
and
in
fstl
mov
out
jmp
add
dec
inc
test
sbb
arpl
divl
loop
lret
mov
jbe
mov
icebp
bndstx
movsb
loope
lock
adc
and
push
xor
inc
pop
cld
out
sbb
dec
flds
and
push
inc
lods
loope
xchg
cld
enter
xor
sti
cwtl
mov
adc
xorl
mov
cli
xor
ss
in
sbb
push
fidivrs
inc
into
and
xor
inc
icebp
or
sub
or
test
pop
xchg
push
in
ljmp
pusha
popa
js
fstl
lock
lret
es
aas
fldcw
mov
aam
test
and
or
fcoms
bound
lahf
inc
fmuls
jo
iret
mov
aaa
shrb
outsb
ja
scas
and
loop
pop
mov
js
in
test
add
ficoms
adc
pop
icebp
test
jo
rcrb
cli
cmp
dec
push
dec
jns
repz
insl
cmp
lret
rcll
inc
mov
push
xor
jmp
movzwl
dec
cli
mov
sbb
push
or
pop
push
mov
xlat
es
mov
fstpt
enter
popa
pop
xchg
mov
fstps
xchg
fwait
push
js
push
shl
xchg
jnp
push
movsl
cmpsb
jp
testl
sti
pusha
and
adc
daa
cltd
dec
lcall
mov
pusha
sti
nop
test
pop
test
bound
jp
sub
sub
ret
jp
and
xchg
subl
mov
ffreep
enter
mov
add
out
cltd
rolb
jp
faddl
sub
mov
repz
mov
dec
sub
cmp
pop
adc
cmp
mov
inc
cmp
mov
cmpsb
and
jbe
mov
mov
and
fcmovnu
xchg
jno
xor
push
push
stos
test
mov
sbb
mov
in
fmull
jg
int
popf
addl
or
jecxz
push
lret
push
inc
mov
andb
xor
sbb
stos
mov
mov
push
sbb
mov
mov
mov
jge
rdtsc
jne
ret
dec
jno
inc
int3
cld
cmp
in
loopne
cmpsl
or
aaa
rcrl
fisttps
xchg
dec
in
add
lods
in
add
add
add
inc
fisttps
mov
dec
xor
pop
cmp
loopne
jnp
imul
mov
lahf
sti
shll
mov
fsubl
aas
and
std
loopne
sbb
pop
sbb
imul
mov
jo
sahf
add
into
xchg
data16
inc
clc
lahf
fimuls
mov
stc
pop
leave
cmp
xchg
mov
daa
dec
stos
lds
clc
imul
into
xchg
out
int
in
dec
inc
pop
dec
mull
xor
cmp
popf
leave
and
cmpl
sbb
sub
inc
into
and
and
jno,pn
pop
mov
cltd
or
pusha
pushf
aaa
or
push
enter
adc
sar
out
les
stos
scas
shll
stos
push
vpavgb
fwait
idivl
jnp
xor
nop
sub
cmp
jge
xchg
xchg
shlb
mov
mov
outsl
mov
stc
cltd
dec
mov
es
add
pop
mov
or
loope
sbb
cmp
mov
and
cmpsb
test
xchg
test
outsb
shlb
or
out
sbb
adc
push
clc
outsl
sub
sbb
push
mov
into
scas
mov
out
sbb
arpl
pop
push
mov
icebp
pop
inc
lea
mov
in
mov
dec
arpl
add
pop
call
ljmp
jp
mov
and
cltd
cs
sub
imul
loope
dec
push
jg
sub
shlb
loope
sub
je
or
xorl
insb
mov
mov
movsb
sub
mov
outsb
sti
or
mov
mov
loop
add
dec
sub
mov
test
call
mov
out
mov
gs
mov
jle
imul
and
jbe
fstl
mov
adcl
fnstcw
fwait
xlat
fstl
pop
ja
cltd
xor
push
test
sbb
add
cltd
cmp
cmp
mov
into
testb
outsl
out
jle
mov
mov
jecxz
xchg
cmp
mov
fisubs
fdivl
sub
dec
ljmp
aad
or
sub
sbb
mov
fimull
mov
pop
rorl
jmp
lods
inc
mov
je
cwtl
or
in
cwtl
add
rorl
or
dec
fidivl
aam
pop
sarl
dec
mov
sahf
stc
jp
add
ret
push
mov
ret
or
jbe
push
arpl
adc
and
cmpsl
mov
rcrb
stos
cmpsl
cwtl
scas
lea
idivb
dec
inc
jl
aas
jnp
xor
dec
cmpsl
cmp
cmp
mov
adc
xor
aam
fdivl
daa
mov
mov
icebp
loopne
xchg
add
fldenv
push
mov
xor
popf
xchg
pop
pop
popf
adc
dec
sbb
rorl
ds
pop
ret
test
push
repz
lret
les
in
add
es
add
loope
cmp
mov
sysenter
dec
sub
mov
jo
pop
mov
mov
mov
xchg
shlb
push
pop
pusha
add
sub
dec
aad
mov
in
sbb
push
and
inc
pcmpgtb
imul
mov
mov
movsb
sub
dec
push
out
rolb
mov
repnz
in
loope
loopne
push
mov
imul
xchg
mov
adc
scas
jmp
mov
orb
push
dec
and
roll
repnz
cmp
fisubs
outsb
jbe
dec
push
je
call
push
insb
pop
shlb
call
ret
push
jne
imul
cmpl
call
xchg
push
or
aam
jecxz
xor
xor
cmp
mov
xor
dec
sbb
addr16
pop
bound
sti
cwtl
fbstp
mov
mov
adc
fiadds
xchg
mov
cmp
jecxz
xorb
dec
stos
icebp
fwait
lret
cwtl
push
cmpsl
stos
push
fists
fcoms
push
inc
je
fnstcw
adc
xchg
push
lock
inc
dec
pop
sub
pop
pop
pop
mov
aas
add
gs
push
out
add
mov
ret
lods
out
push
test
idivl
dec
cmp
dec
sbb
out
test
xchg
jl
adc
add
pop
xor
dec
jp
out
inc
sahf
popa
inc
fadds
mov
pop
imul
jne
dec
add
popf
and
lahf
jnp
ljmp
fs
pop
arpl
and
sub
test
popf
mov
leave
popf
adc
xchg
and
adc
and
imul
pop
xchg
pop
sbb
add
popa
pusha
das
inc
add
out
lods
sbb
out
sub
imul
pop
mov
jmp
push
cmp
cmp
das
aad
mov
mov
lcall
adcl
and
aam
sarl
inc
test
jp
xor
addr16
or
lcall
fwait
adc
mov
test
cmpb
rcll
add
call
insl
fsubs
pop
rorl
adc
xchg
insb
mov
pop
insl
into
mov
jg
xchg
push
mov
jb
dec
lahf
das
outsb
pop
and
stos
out
mov
pop
scas
sub
cmc
pop
push
jg
hlt
fisubrs
ss
push
in
mov
sbb
dec
and
loop
and
das
dec
and
lahf
imul
mov
jmp
cli
add
out
jbe
mov
dec
fdivrl
cwtl
mov
daa
mov
out
push
cli
xor
jle
or
ret
sbb
dec
mov
and
and
mov
push
or
ss
xor
inc
into
arpl
repz
push
inc
js
out
rcrl
adc
out
jno
arpl
pop
pushf
adc
fwait
sbb
gs
adc
mov
inc
jmp
gs
adc
fldt
jb
dec
mov
fldenv
sbb
cmp
adc
leave
jl
outsb
imul
dec
std
adc
push
and
jmp
cmp
jmp
cli
dec
mov
jge
ja
and
lret
jb
adc
fldt
test
stos
mov
sbb
add
mov
mov
mov
xor
mov
cmc
mov
test
nop
jecxz
movsb
idivb
sub
mov
faddp
push
mov
test
shll
mov
jae
push
sahf
inc
jb
lret
push
test
insw
or
jnp
scas
sbb
mov
push
popa
fimull
loopne
andl
and
pop
cmp
repnz
es
andb
jp
cmpsb
outsb
cmpsb
into
dec
or
inc
cmpb
xchg
int3
lods
jns
rol
mov
cltd
ret
shrl
push
mov
mov
fs
add
pop
sbb
cld
jne
repnz
loope
mov
jbe
ret
sbbb
cmpsb
outsb
out
lcall
cmc
movsl
push
or
adc
inc
stc
test
sti
and
fs
not
inc
test
jnp
call
cmc
cmp
xor
out
ds
cltd
adc
pop
mov
push
cmpsl
sub
ficompl
out
push
out
sub
mov
std
dec
lock
sahf
ror
ljmp
and
mov
xchg
push
fistpll
cld
pop
fs
in
pushf
lahf
daa
ror
pop
test
sahf
mov
ljmp
and
sbbl
je
or
int
mov
loope
subl
adc
fldt
inc
popa
fnstenv
cmpsl
mov
int3
cmp
fbld
mov
in
scas
aam
ljmp
inc
fdivrl
and
xchg
jno
lahf
pusha
pop
xchg
lcall
inc
sahf
inc
in
ret
daa
xchg
cmp
movntq
xor
jmp
add
test
aam
mov
mov
fwait
sub
or
sbb
je
ljmp
or
jne
jle
jge
and
jbe
pushf
int3
in
xor
push
out
jne
add
push
lea
sub
sti
xchg
push
insb
repz
mov
outsl
insb
mov
insb
mov
add
orl
mov
movb
sub
adc
cmp
push
jl
sbb
or
mov
test
out
inc
dec
pop
cmp
jecxz
jge
leave
ret
icebp
jg
les
sub
mov
xchg
mov
in
int3
dec
out
stc
mov
adc
sbb
cmpsl
out
mov
pop
sarl
popa
sub
in
inc
push
lea
test
jle
and
xlat
xchg
dec
call
sbb
movsl
addb
mov
cmpsl
ljmp
mov
pop
adc
fwait
sub
mov
hlt
fucom
mov
push
xor
mov
pop
rcrb
add
adc
inc
popf
and
loop
clc
mov
pop
movsb
add
dec
add
pop
sbb
je
lcall
dec
jge
mov
sbb
lods
sbb
sub
pop
imul
into
jle
adcl
mov
jge
xchg
mov
dec
in
and
pop
sub
ljmp
mov
cmp
jae
sub
cwtl
imul
aas
mov
mov
jbe
shlw
jae
out
inc
test
fcoms
loop
pop
pop
inc
push
sbb
dec
or
dec
cmp
sar
jmp
addr16
add
cmpsb
addr16
cli
cmp
idiv
mov
aaa
add
sub
adc
int
pop
nop
in
jge
mov
mov
jb
ds
xchg
mov
fnstenv
movsb
cmc
fcoml
jbe
pop
pop
dec
iret
popf
and
jmp
mov
outsl
icebp
sub
nop
pop
daa
cmp
in
decb
std
xchg
sub
xor
push
jno
stc
cmp
jae
jno
cmp
sbb
outsl
daa
mov
pop
push
pop
andb
popa
bound
cmpsl
sar
sub
scas
ja
jg
mov
sbb
addl
cld
mov
xchg
repz
dec
es
js
and
mov
add
roll
nop
or
in
scas
pop
or
inc
sbb
xor
dec
push
sub
mov
xor
cld
jae
out
xchg
push
dec
sti
inc
mov
push
mov
inc
in
pop
xor
out
sar
cwtl
mov
xchg
jo
pop
mov
repnz
jbe
mov
dec
push
inc
mov
scas
push
inc
inc
adc
sub
jl
data16
repz
xchg
pushf
pop
out
and
repz
add
jb
and
imul
mov
into
xchg
iret
clc
arpl
int
jmp
mov
in
iret
pop
leave
scas
mov
xor
mov
leave
out
mov
icebp
mov
stos
out
mov
mov
aaa
scas
shlb
pop
cwtl
cltd
dec
imul
push
sbbb
lock
push
test
sarl
out
mov
mov
xor
bound
mov
push
in
cmc
push
adc
rorb
popf
fsubp
and
jmp
xor
lods
pop
popf
sarb
push
nop
and
outsl
je
mov
or
in
movsb
test
mov
push
stos
jne
imul
sbbb
mov
cmpb
inc
out
sub
sbb
pop
hlt
dec
fisubs
or
jle
jb
popf
xor
sbb
in
inc
iret
cs
pop
out
ror
mov
jle
mov
imul
push
add
inc
cmpsl
adcb
lock
mov
lods
sub
sbb
mov
int
imul
pop
inc
popa
shll
dec
sub
mov
movsl
popa
pop
and
lock
arpl
adc
in
adc
insb
lea
add
adc
cs
add
dec
sbb
out
xor
aad
add
inc
cmp
sbb
xorb
xor
out
inc
outsb
sbb
sbb
rcrl
or
lret
xor
shlb
adc
adc
leave
xchg
aad
shl
xor
ja
inc
jae
inc
inc
cmp
push
dec
out
inc
push
push
mov
repz
inc
push
and
or
dec
iret
mov
sub
adc
pop
pop
test
test
ret
xchg
xor
or
push
xor
jp
and
lcall
xchg
imul
push
jnp
lcall
xor
dec
test
incl
push
push
les
lret
fisttpll
insb
test
mov
cmpsl
testb
dec
outsb
sub
repnz
mov
lea
sub
xor
ljmp
imul
into
inc
popa
dec
in
fsubl
and
and
aaa
jmp
sbb
ljmp
scas
icebp
scas
mov
pop
add
repnz
inc
dec
lds
cmp
inc
in
xchg
jl
add
hlt
adc
int3
ficomps
imul
push
call
push
xor
adcl
mov
push
push
and
adc
xor
ss
xor
xchg
adc
cmp
dec
nop
sub
ret
dec
shl
dec
inc
sbb
fisubs
sbb
test
subb
ds
dec
cmp
cltd
push
mov
cli
adc
sahf
push
mov
repz
insb
or
mov
mov
idiv
outsb
sarl
adc
sub
cli
sahf
movsl
pop
add
xchg
divl
fwait
jns
pop
cmpl
sub
lods
int3
leave
mov
in
cmp
mov
sti
inc
mov
std
mov
std
push
pop
leave
sub
xor
dec
xor
sbb
add
dec
pop
jo
pusha
jae
cmpsb
mov
xor
cmp
push
incb
xlat
xorl
add
in
adc
dec
js
cld
in
pop
add
cmp
jb
test
add
jecxz
push
or
dec
popa
dec
in
mov
jle
int3
jp
or
mov
mov
dec
adc
push
cwtl
push
jae
repnz
aaa
mov
bound
movsb
ljmp
pop
adc
xor
cmp
int
insb
testb
xchg
pop
fisubrl
mov
jo
cli
xor
push
ss
xor
cli
adc
pop
js
in
jno
fxtract
dec
pop
cmp
leave
lret
test
jecxz
sub
inc
ftst
fdivs
sbb
call
icebp
in
mov
mov
sub
mov
arpl
sub
pop
sub
or
fcoml
scas
xor
std
dec
cmp
gs
ret
push
jbe
or
mov
ljmp
pop
setl
out
dec
jp
or
mov
dec
movsb
and
jnp
ret
stos
inc
adc
mov
lock
mov
inc
xchg
enter
pop
lock
inc
jb
cwtl
sbb
or
sub
push
xor
dec
mov
lcall
mov
and
inc
imul
fwait
push
stc
maxps
jl
dec
xchg
mov
push
clc
sub
add
mov
int
jmp
aaa
jo
pop
fists
movsl
xor
mov
pusha
mov
outsl
test
xchg
and
sbb
dec
mov
inc
ficoml
mov
in
fwait
or
insl
pop
sbb
insb
ficoms
faddl
loop
adc
mov
daa
push
add
stos
mov
jle
call
xorb
out
test
add
mov
mov
out
add
std
rclb
mov
cmpsl
ja
inc
or
mov
lods
pop
and
jno
loop
dec
hlt
in
ds
jbe
inc
jbe
mov
daa
imulb
das
sar
lds
out
add
sbb
test
mov
cs
std
lods
out
xor
std
xchg
xor
sbb
shll
movsb
mov
mov
pusha
aas
pop
dec
shrl
dec
pop
adc
in
and
inc
xor
pop
incl
cmp
jl
ret
rclb
and
in
cmpsl
inc
adc
icebp
sub
xchg
fs
pop
inc
fsub
pop
or
jle
pop
cmp
xchg
es
out
sub
int
pop
mov
pop
xor
andps
movsl
cmpsb
bound
push
mov
ljmp
inc
mov
pop
jge
dec
adc
xor
ss
leave
and
movsb
add
sbb
in
push
inc
cmp
in
sub
pop
repnz
pop
cld
jo
xchg
mov
sti
push
xor
ss
or
push
leave
push
mov
add
mov
sbb
movlps
subl
or
cwtl
out
sbb
or
orb
push
jge
and
dec
out
lret
pop
pop
adc
dec
inc
push
test
mov
inc
out
stos
in
pop
mov
jmp
lahf
out
je
outsl
pop
out
lods
add
jmp
ficoml
or
and
scas
stc
shll
aam
rcrb
and
aaa
or
pop
fwait
aas
rcll
add
orb
nop
arpl
hlt
cmp
loop
xchg
repz
cmc
mov
push
jg
sub
into
inc
sbb
lds
pop
mov
icebp
mov
push
and
sbb
sbb
pop
ret
cmp
das
dec
icebp
or
js
xor
push
mov
mov
xchg
sub
inc
mov
push
cltd
dec
push
jo
mov
insb
dec
or
mov
imul
mov
lahf
loop
or
dec
push
pop
stos
mov
in
jb
mov
mov
lods
mov
fs
loope
inc
inc
in
mov
pop
stc
or
push
inc
cmpsl
jbe
sbb
addl
aam
and
mov
lahf
pop
gs
dec
nop
xor
inc
xchg
mov
scas
mov
pop
mov
mov
jg
sbb
jb
push
or
lock
lock
pop
cmp
lods
data16
rolb
fcompl
and
gs
or
daa
cmp
mov
popl
test
mov
out
bnd
fists
jg
clc
sub
fistps
fbstp
je
imull
dec
subb
cli
cld
push
sub
mov
daa
jnp
orl
mov
mov
push
fstl
rclb
jl
jne
pop
push
cs
rclb
fmull
shlb
pop
cmpsb
sub
xchg
rclb
mov
jp
int3
xor
xchg
mov
pop
bnd
repz
outsb
jge
sbb
pop
bnd
call
lods
jge
ds
int
inc
lcall
adc
mov
pop
and
test
lods
add
lods
cmpsb
cmp
cmp
inc
pop
lret
xor
addr16
dec
in
mov
icebp
pop
add
adc
std
daa
shlb
ret
imul
xor
or
xchg
arpl
es
and
bound
push
sub
jmp
pushf
lods
jl
pop
mov
in
sub
into
roll
fdivrs
pop
mov
aam
stos
popa
mov
lock
mov
mov
es
pusha
sbb
push
cmp
push
lods
out
gs
movl
in
fnsave
pusha
fistpll
jmp
movsl
push
test
lock
xor
sub
jnp
cwtl
js
mov
sub
inc
roll
jbe
adc
test
add
mov
movsl
aaa
xchg
cmp
scas
unpcklps
xor
jns
jp
pusha
push
dec
cmc
push
fisttps
into
rcr
jo
popf
push
pop
jl
loop
cmpsb
cmpsl
jle
sbb
dec
cmp
or
mov
mov
sub
or
inc
dec
adc
dec
movsl
sbb
clc
and
inc
inc
xchg
mov
xor
iret
dec
and
mov
add
popf
mov
pop
arpl
scas
jp
test
in
cmp
in
mov
cmpsl
js
fistps
xchg
out
imul
push
mov
insb
int
mov
fwait
in
sub
or
fxch
xor
or
push
xlat
adc
mov
push
cmpsb
dec
mov
sub
xchg
cltd
sbb
je
push
pop
aaa
in
inc
jg
dec
adc
frstor
jl
mov
xor
xchg
jno
dec
hlt
cltd
aad
in
inc
push
lahf
push
push
cwtl
or
xor
repnz
pop
lret
adc
xchg
and
xchg
test
sahf
sub
xor
mov
mov
jae
iret
popa
push
cld
hlt
or
sub
dec
lret
incl
cmp
sti
loopne
pop
jbe
jge
xchg
std
imul
js
push
icebp
rolb
in
xor
arpl
insb
push
add
imul
push
sbb
jae
push
dec
push
jp
push
outsb
dec
scas
push
imul
add
in
int3
cmpsb
jno
mov
adc
les
jae
inc
dec
fsubr
and
mov
push
jmp
nop
jns
jmp
rcll
inc
out
jbe
jle
sbb
cmp
aad
out
and
xchg
xorb
cld
dec
add
loope
mov
sbb
fcomps
int3
sarb
sbb
in
jo
push
mov
mov
lcall
outsl
or
jns
sbb
jmp
push
mov
aam
scas
mov
mov
sub
jae
xor
arpl
insb
mov
nop
adc
xchg
shrl
leave
xchg
sub
test
add
mov
push
xor
xchg
lcall
xchg
mov
das
lods
add
pop
cltd
mov
sub
and
xchg
call
icebp
out
arpl
jecxz
mov
loope
shrb
xchg
lock
xchg
push
sbb
xchg
test
jg
mov
jge
fisubrs
inc
ret
xchg
sti
fsubrp
popa
arpl
xor
imul
out
add
les
std
in
adc
ds
pop
js
mov
jmp
cmc
xchg
lahf
iret
call
imul
cmp
push
sbb
add
push
out
outsb
cmp
push
jns
je
pusha
push
test
mov
xchg
aaa
mov
icebp
pop
xlat
cli
hlt
in
add
mov
add
or
adc
jle
imul
rolb
mov
mov
fmull
inc
bound
pop
add
cmp
lcall
repnz
ja
jae
ds
sbb
adc
sbb
fdiv
inc
inc
cld
into
push
loopne
inc
xor
leave
jo,pn
and
dec
std
ss
test
mov
xor
fdivs
adc
inc
mov
jno
adc
dec
adc
push
xor
mov
fidivrl
iret
iret
cwtl
jmp
aam
mov
aam
pop
popa
shrb
pusha
rcll
andl
or
cmpb
xchg
arpl
flds
stos
dec
xor
inc
inc
push
dec
xchg
cmpsb
inc
xor
aaa
or
cltd
xor
out
jl
pushf
lods
js
mov
shll
jno
aaa
mov
in
mov
jbe
and
int
pop
xchg
shll
push
cld
sub
dec
adc
arpl
into
je
jge
cld
out
movsl
shl
movsl
loop
aaa
push
mov
adc
sbb
lds
pop
cmpsl
xchg
mov
push
sub
inc
dec
mov
push
lcall
out
jne
int
sbb
pop
jo
push
stos
repnz
or
cmp
shr
mov
hlt
xchg
add
inc
lea
orl
jecxz
pop
inc
lods
add
andb
pop
loopne
insb
sarb
out
stc
mov
sbb
es
xor
mov
mov
leave
mull
test
xchg
adc
rorb
insl
aam
lods
or
mov
test
add
ds
pop
inc
xor
jmp
add
call
push
mov
fcoml
int
push
pop
jmp
push
fistpl
scas
pop
mov
xor
fisttpll
sbb
inc
out
lods
out
sbb
filds
pop
int
fnstenv
inc
int
xchg
cmp
shll
sahf
inc
jp
or
popf
xchg
mov
iret
sar
pop
push
mov
jbe
lock
dec
test
xchg
roll
sbb
push
xorl
das
xor
cmp
scas
xchg
insl
sub
pop
dec
push
fstpl
ficompl
pop
xchg
adc
les
adc
cwtl
or
mull
mov
cmp
cmpsb
ficoms
cmpsb
dec
popa
push
cmp
mov
bound
outsl
dec
jae
stc
pop
pop
pop
xchg
rcr
movsb
in
mov
lret
jecxz
dec
test
scas
push
add
or
outsl
pop
subb
add
xor
std
inc
fwait
xlat
mov
xchg
and
xchg
mov
lds
or
lds
push
push
pop
ja
mov
xchg
sti
movsl
ficoms
xchg
adc
jo
imulb
mov
out
push
push
in
imul
pop
call
push
fs
jp
lret
cltd
shl
aas
int3
rcl
mov
sti
pop
cwtl
cltd
cwtl
add
sbb
test
add
xchg
and
mov
xor
xchg
in
mov
and
sub
fisubl
lods
jne
inc
dec
pop
and
or
xlat
popa
mov
movzwl
shl
inc
cmp
sub
jne
push
daa
mov
xor
xchg
pop
inc
push
sbb
fwait
jae
mov
outsl
cmp
fcomip
lods
or
pop
sub
fsubs
mov
jo
xchg
xlat
mov
xor
in
and
popl
loop
stos
push
repz
out
add
cld
and
sbb
int3
pop
mov
or
stos
fsubs
stc
fcomi
test
or
daa
jge
pop
mov
fisubs
fcompl
sbb
push
mov
and
hlt
and
mov
jg
or
push
sub
std
or
mov
ja
dec
test
push
nop
sarb
jo
mov
sbb
enter
jo
popa
roll
mov
inc
mov
push
in
adc
jp
popa
xchg
mov
ret
fwait
icebp
jmp
push
call
push
sbb
enter
dec
xchg
enter
jne
mov
scas
xchg
mov
les
das
mov
aas
xchg
xor
lods
xchg
adc
int3
cmp
mov
loope
mov
add
mov
mov
stc
inc
push
cmpsl
mov
lahf
push
pop
js
clc
mov
dec
movl
aas
loope
jne
subb
add
movsb
mov
xchg
jo
push
jg
mov
adc
pop
add
jmp
jmp
dec
jg
sbb
test
das
lods
jl
push
cmp
fiadds
movsl
and
addr16
test
inc
subl
push
insb
push
jmp
jle
imul
js
and
pop
add
insb
jae
mov
xor
and
roll
repz
pushf
lret
push
jne
mov
hlt
sub
insb
sarl
lea
dec
or
mov
orl
adc
inc
gs
int3
xlat
jg
out
fisubrs
std
cmc
dec
iret
xor
in
loopne
mov
test
jb
call
pusha
rolb
ficomps
add
adc
xchg
xchg
or
push
dec
lret
cmp
in
inc
jbe
push
jne
xchg
adc
mov
dec
test
div
push
mov
inc
ja
fisubs
clc
pop
xchg
dec
sub
pop
outsl
pop
jecxz
fldpi
stos
ja
mov
ret
mov
fstp
lock
ja
mov
cmp
out
addr16
mov
inc
fcompl
outsb
inc
lahf
cmp
popa
pop
jnp
insl
or
push
dec
outsl
ljmp
or
cmp
mov
lea
push
sub
daa
adc
rclb
pop
pop
ficoml
jno
cmp
loope
loopne
out
or
les
pop
aad
push
popa
test
in
push
jl
xchg
xchg
repz
stc
sub
std
stc
add
xor
push
jl
int
xchg
leave
pushf
jo
stos
rcll
popa
jmp
push
orl
mov
pop
dec
push
adcb
hlt
imul
jne
loop
sbb
jle
or
sub
out
js
inc
mov
mov
ret
movb
adc
fsubrp
mov
mov
jmp
repz
bound
into
push
mov
xor
add
ror
jbe
dec
test
sbb
adc
or
push
pop
call
jno
inc
pop
iret
xor
aaa
dec
pushf
inc
test
jae
cmp
dec
pushf
fs
movsl
mov
add
push
fisubs
ds
add
sub
into
addr16
jge
data16
push
lods
enter
push
pop
fdiv
mov
lcall
loope
outsb
jns
addr16
mov
les
mov
add
mov
push
or
mov
and
mov
jno
cmc
xchg
inc
in
pop
cmp
test
add
mov
ret
mov
hlt
clc
push
jae
pop
es
in
rcl
negl
lret
shll
adc
pushf
lret
lods
add
pop
push
cmc
mov
mov
jnp
das
popf
sbb
aad
sub
mov
sub
sub
aas
and
loop
loopne
xlat
push
xor
cltd
add
jb
jl
sti
lahf
ljmp
sbb
or
in
push
fs
movsl
xchg
ret
ss
enter
rcrl
cmpsl
jg
pop
das
add
mov
fisubs
movsl
jmp
into
mov
aas
dec
mov
cltd
sbb
test
movb
add
push
sub
inc
dec
lahf
adc
mov
nop
popa
jp
decl
fists
sub
xor
jg
fistpll
out
movsb
jl
aad
pop
or
lahf
and
inc
test
inc
add
add
fsubrl
jmp
xchg
mov
mov
cmpsl
dec
clc
stos
popa
popa
jne
orl
je
jo,pn
cmp
fcom
pop
mov
mov
cli
dec
sti
mov
ret
sahf
adc
xor
rclb
pop
mov
jns
add
cmpsb
hlt
xor
ds
aam
out
sbb
xchg
xor
add
inc
sub
xor
mov
fld
mov
push
push
into
dec
or
pop
lods
xor
popf
or
mov
out
sti
mov
mov
xor
out
mov
sahf
call
cmp
rcl
outsb
sub
out
or
adc
scas
push
call
jp
inc
or
pop
jecxz
loope
mov
mov
and
mov
inc
mov
es
sahf
iret
int3
lret
in
ficompl
sub
add
sbb
mov
stos
pop
jb
int3
or
lods
enter
cld
pop
mov
jne
cmp
push
mov
and
lahf
xorb
in
cmp
int
or
lea
ret
push
jno
std
pusha
dec
sti
push
aam
pop
movsl
nop
jbe
push
aaa
inc
push
call
cmp
mov
or
adcb
rol
aas
cld
and
dec
and
imul
mov
mov
mov
push
push
mov
adc
xor
sbb
sbb
int3
arpl
imul
jg
jnp
push
dec
outsl
mov
inc
pop
push
inc
inc
ja
sub
add
fdivrl
cwtl
sbbl
iret
and
mov
push
and
outsb
leave
mov
jae
add
mov
xchg
in
loop
lods
lahf
mov
idivl
movsl
cmpsb
idivb
loop
xchg
mov
repnz
jge
xor
mov
lock
pop
mov
push
in
inc
stc
jle,pn
mov
inc
popw
das
cmp
movsl
ficoml
jbe
scas
loop
cmp
push
dec
push
out
dec
orl
push
aaa
mov
jl
icebp
jae
cmc
cmp
cmpsb
mov
mov
inc
jl
or
sub
scas
push
and
stos
dec
test
enter
push
aam
sub
jnp
int3
lock
outsb
cli
fisttpl
push
imul
out
addr16
das
cmp
push
daa
jmp
dec
adc
arpl
ss
cmp
xchg
pop
xchg
out
dec
mov
mov
or
fwait
shll
shll
pop
inc
xlat
scas
imul
stos
or
sbb
cmova
stos
push
rclb
add
sub
lock
mov
jb
mov
mov
inc
in
adc
inc
push
inc
or
mov
mov
push
or
loopne
add
rcrl
in
clc
pop
fnstsw
pop
shl
mov
fdivl
jno
jge
imul
fisubrl
mov
jmp
daa
push
mov
mov
enter
ljmp
adcb
dec
out
loop
shr
loopne
in
and
push
or
cltd
daa
mov
sub
cmp
add
sbb
add
std
jle
mov
iret
in
bound
insb
mov
mov
or
dec
or
adc
push
or
pop
movsl
xchg
xor
or
lret
sub
push
pop
sub
int
cmc
adc
lahf
jno
pop
xor
ljmp
das
sti
outsb
inc
mov
ja
mov
filds
in
or
push
pop
adcb
sbb
push
ljmp
add
sbbb
xchg
mov
insl
push
outsb
xlat
enter
cmp
sub
rolb
push
cmp
sbb
jmp
or
aam
pop
dec
call
mov
pop
push
icebp
dec
fisubrl
mov
push
pop
data16
inc
test
xchg
push
aad
pop
repz
xchg
imul
or
out
sbb
sahf
insl
jne
mov
push
mov
cmp
push
and
jne
mov
rol
xorb
popfw
out
mov
lds
jle
xor
popf
mov
call
lods
cmp
or
aaa
inc
xchg
in
jmp
es
fstpl
xchg
jle
dec
int
imul
cmpsb
mov
je
insl
sub
and
mov
or
scas
push
cmp
jo
jbe
jnp
arpl
pop
and
fs
jecxz
or
mov
adc
pop
add
repz
mov
outsb
ja
test
das
xchg
andl
sub
iret
or
rcrl
or
dec
push
clc
mov
jg
aam
mov
sub
jae
rorb
out
push
or
push
push
fsubr
lds
nop
stos
mov
lods
pop
cmc
dec
aam
lods
sbb
sbb
mov
in
mov
cmp
repz
jge
les
call
and
imul
xor
iret
jge
mov
cmp
fcmove
inc
pop
das
mov
repz
sbb
xchg
cmpsb
sub
dec
lods
fnsave
insl
sets
cmp
lret
fs
out
fwait
repz
or
addr16
pop
pop
mov
inc
push
and
test
outsl
add
pop
adc
xchg
call
in
loope
sub
in
or
enter
push
inc
and
sarb
les
mov
push
jg
rclb
into
push
and
mov
mov
jecxz
pop
loope
roll
std
stos
mov
std
inc
test
rol
jb
pop
clc
ret
or
add
push
lock
rclb
xchg
mov
aam
mov
cmpsb
or
inc
lds
fiadds
mov
iret
dec
inc
icebp
lret
sbb
push
jb
pushf
insl
dec
or
or
jno
sub
pusha
lahf
popf
lcall
or
filds
xchg
das
push
adc
fistps
cmc
jp
scas
push
add
call
sbb
ret
cld
mov
mov
and
cmp
cmp
and
loope
js
ret
mov
scas
incl
pop
adc
dec
mov
filds
mov
xchg
jnp
setb
pop
fistps
adcb
stc
ljmp
dec
pusha
fs
mov
outsb
test
and
fists
pop
dec
jle
mov
pushf
addr16
add
mov
mov
and
nop
push
add
hlt
mov
dec
mov
mov
sub
aam
jl
sub
adc
dec
inc
push
lea
dec
pop
enter
lods
out
ret
pop
sti
jge
sarl
jb
or
pop
pop
mov
daa
fnstsw
rclb
test
cmp
mov
adc
mov
pop
dec
jp
adc
lds
repnz
xchg
pop
sahf
and
mov
jns
and
lcall
xchg
cmpb
jle
or
mov
sub
out
dec
add
mov
mov
pop
stos
mov
or
shll
pop
and
or
dec
movsb
js
test
pop
xor
aad
xchg
sti
repnz
sub
xchg
scas
aam
rcrb
add
jnp
ret
js
push
push
adc
xor
adcl
cmpsb
lahf
lret
insl
pop
jns
imul
pop
xchg
mov
das
dec
daa
daa
adc
inc
lods
push
pop
movsb
xor
mov
aas
sub
sub
sub
fisubs
dec
lods
ljmp
mov
lea
insb
cs
fnstenv
dec
std
sbb
push
xchg
loop
and
mov
cmp
dec
mov
popa
jl
jns
icebp
jns
adc
int3
mov
out
fwait
cltd
xchg
clc
mov
xlat
xchg
pop
ljmp
mov
ret
js
inc
imul
mov
lods
mov
bound
mov
jecxz
das
mov
test
pcmpgtb
cld
bound
fcoml
aaa
add
sbb
iret
movsl
cmp
mov
xchg
outsl
or
pop
xor
loop
jae
pop
je
insl
mov
mov
cmp
cwtl
pop
ljmp
add
jno
dec
hlt
pop
pusha
sbbb
sub
test
jmp
inc
iret
xchg
push
lock
pop
scas
cli
rcrb
aam
cmp
cmpsl
xchg
fs
or
loop
repnz
mov
inc
mov
jb
xchg
mov
outsl
pop
pop
loope
loopne
mov
bound
movsl
mov
or
mov
call
out
ret
outsb
stc
jns
outsl
mov
dec
push
xchg
sub
sarb
push
cli
mov
cmp
in
orb
sti
jo
add
inc
data16
sbb
xchg
mov
cwtl
cwtl
fcmovb
in
push
sbb
add
jbe
rdpmc
push
cmpsb
lods
inc
fs
cmp
out
imul
cmp
or
mov
xor
inc
test
and
cmc
imul
rorl
call
xchg
addr16
xor
nop
and
rcll
pop
cltd
pop
icebp
mov
mov
subb
mov
and
or
inc
pop
int3
or
or
xor
and
or
fwait
in
mov
mov
or
mov
outsb
lea
aas
fxch
fwait
sbb
cmc
xor
xchg
outsb
jecxz
pop
mov
pop
int3
mov
mov
and
sub
enter
ljmp
jle
fcoms
insl
repnz
mov
aas
ss
stc
js
xchg
mov
rolb
scas
scas
add
loope
gs
xor
jb
xor
and
mov
rcll
sub
ret
stc
cmp
adc
adcb
lds
jb
xor
lods
add
imul
push
hlt
inc
push
ljmp
add
push
int3
daa
sbb
rorb
shrb
or
and
inc
xchg
and
push
inc
push
and
inc
es
ljmp
clc
loopne
shlb
fsubrl
cmp
and
movsb
inc
push
add
loop
add
loopne
sub
subl
adc
cmp
xchg
push
icebp
push
adc
push
xor
and
fisubrs
adc
test
pop
cmp
sub
xor
aam
cmp
call
pusha
xchg
rcrb
jnp
cmc
ficoms
ds
dec
lahf
repnz
pop
mov
sub
adc
push
adc
jns
sahf
test
stc
xor
pop
pop
sub
repz
sub
ljmp
mov
sbb
sti
imul
sbb
push
in
pop
cmp
push
fdivl
insl
cmpsb
cld
push
dec
cmpsb
sub
xor
jbe
addr16
mov
fstl
mov
ljmp
mov
aam
imul
xchg
inc
fwait
inc
mov
inc
clc
out
inc
es
sub
mov
dec
xchg
inc
loop
pushf
pop
call
sbb
mov
push
sub
ret
imul
hlt
js
stos
lret
test
mov
or
dec
jno
xor
cmpsb
dec
das
push
subl
jb
and
mov
push
jae
lcall
adc
fists
test
mov
jno
call
push
mov
push
mov
sub
enter
adc
jle
dec
ja
sbbl
sarl
cld
out
push
pop
jp
inc
sbbb
and
in
ja
movsb
sahf
iret
push
mov
lock
ss
push
adc
mov
stos
xchg
dec
lods
xor
aam
dec
insl
dec
jle
jne
loopne
outsw
sub
icebp
mov
dec
stos
icebp
repnz
clc
shrl
sbb
jne
outsb
mov
gs
inc
jl
rorl
scas
rorl
lods
fwait
and
push
xor
or
push
jae
adc
sbb
aam
pop
inc
cmp
add
mov
inc
test
rcll
out
aaa
aaa
jnp
cld
adc
in
into
pop
sub
shlb
fwait
mov
ja
jmp
scas
lcall
loope
nop
insb
bound
mov
adc
fsubr
nop
mov
fldl
clc
aas
xchg
mov
mov
or
je
ds
xchg
push
je
adcl
cmc
test
sti
fcmovbe
pop
cs
lods
xor
lahf
arpl
xor
push
jno
jno
mov
xchg
loope
out
add
adc
push
inc
es
jecxz
dec
call
lcall
icebp
sub
xchg
mov
mov
ds
adc
mov
pop
inc
shll
popa
repz
dec
add
and
cwtl
add
imul
aad
sub
sbb
stos
not
mov
pusha
mov
inc
xor
popf
test
push
xor
lea
fsts
nop
shrb
lock
sbb
pop
and
out
jmp
jo
add
lds
pop
cmp
xor
loop
xchg
cmp
into
orl
int
adc
mov
xor
sbb
bound
cmp
into
aaa
and
jecxz
jbe
lcall
xchg
std
xchg
dec
fistpl
xchg
subb
cmp
data16
fstl
cs
out
mov
add
rcrb
notl
sbb
das
inc
jne
cmpsl
aaa
mov
adc
leave
mov
mov
rcrb
jmp
mov
xchg
roll
pop
jnp
xchg
leave
lcall
push
stos
les
mov
repnz
jg
lahf
dec
sti
xchg
xchg
in
xor
out
movsb
stos
xchg
push
mov
lret
inc
sbb
adc
mov
mov
push
and
decl
pop
mov
mov
xchg
and
jecxz
jnp,pn
add
incl
push
cmp
clc
add
stc
mov
pop
jbe
add
or
test
pop
push
push
mov
int
or
push
call
fwait
aam
js
adc
jmp
and
sbb
push
inc
je
lods
int
jae
xchg
aad
fmull
pop
loop
xchg
cmp
ds
jbe
sbb
cli
or
mov
mov
inc
push
pushf
mov
sti
loop
push
push
xchg
popa
pop
mov
pusha
xor
int
mov
jnp
mov
sar
push
stos
mov
pop
sbb
cmp
repz
stc
lock
out
jno
or
xchg
repz
cmpsb
adc
sbb
inc
push
jae
sti
mov
scas
std
sub
rorb
sbb
pop
xor
scas
push
mov
aas
sbb
ss
out
dec
out
fucomip
mov
xor
call
cmpsb
fstpt
jmp
loopne
adc
movsl
out
jmp
lcall
add
cmp
pushf
xchg
cltd
xchg
mov
mov
popa
pop
mov
fildl
out
rorb
in
jl
mov
sub
subb
inc
out
enter
sub
outsl
cmp
cmp
xor
data16
stos
xlat
outsl
arpl
jnp
dec
sub
ret
addb
xlat
pushf
or
rorl
fsubl
fdivrl
and
mov
push
fldenv
mov
adc
pop
das
je
cmp
dec
and
jnp
mov
call
jle
in
mov
popf
jmp
push
cmp
sub
xchg
out
mov
mov
movsl
inc
xchg
fmuls
or
adc
insl
fldcw
and
testl
inc
or
lcall
cltd
lret
xor
xor
push
dec
xchg
in
test
xchg
mov
outsl
push
or
shlb
sub
jbe
mov
xchg
out
inc
sbbl
int3
adc
pop
daa
push
xor
and
std
xchg
mov
cmp
icebp
ds
xor
ss
gs
inc
add
add
lds
cmp
mov
add
lret
ds
cmpsl
or
cmpsb
enter
repz
nop
add
add
dec
dec
push
fstl
icebp
imul
out
out
sarl
sub
or
fsubrl
mov
ljmp
aad
repz
cmp
lret
inc
mov
enter
outsb
sub
and
sbb
pop
xchg
in
dec
stc
insb
test
lds
call
jo
movsl
out
out
add
ja
icebp
loopne
xchg
adc
lahf
call
pop
aam
int3
ret
js
cmpl
dec
mov
ret
mov
test
cmp
cs
pop
cmp
gs
cld
int3
pop
mov
mov
jge
sbb
in
cltd
jnp
mov
lret
pusha
mov
lods
mov
jns
and
daa
dec
push
pop
ljmp
lds
test
cmp
inc
xor
adc
or
xlat
pop
mov
adc
sub
icebp
jno
icebp
loopne
and
mov
dec
pop
mov
mov
loopne
mov
xchg
popf
inc
and
loope,pt
or
sti
and
dec
and
pop
fstpl
repz
ficoms
inc
aaa
std
xchg
push
shrb
mov
adc
out
mov
push
rorl
mov
dec
shll
loop
es
aas
lahf
inc
or
daa
mov
fdivrp
sbbl
sub
pop
mov
call
sub
sbbl
adc
pusha
push
je
testb
je
sti
sahf
mov
insl
ds
jo
out
decl
mov
add
xor
aas
inc
outsb
fldcw
mov
std
ret
rcr
jbe
aaa
adc
ret
pop
and
int3
jo
pop
outsb
sbb
mov
and
popa
divb
mov
and
push
out
jb
les
push
in
dec
enter
mov
ret
imul
pop
pop
aam
imull
mov
jb
adc
sbb
sub
sahf
sub
fwait
insl
pushf
ds
push
push
std
mov
imul
jge
iret
lods
push
adc
xchg
insl
dec
sahf
sbbl
aas
dec
adc
ret
jmp
xchg
push
or
lret
xor
and
out
icebp
and
pop
add
insb
cmpsb
pop
rorl
ds
sub
enter
add
repnz
lret
add
cmp
test
pop
mov
mov
pop
sbb
sarb
mov
jecxz
stc
stos
divl
push
sub
add
dec
enter
adc
icebp
clc
sahf
or
lds
jbe
jns
add
flds
imul
shrb
dec
mov
adc
mov
push
cli
adc
xchg
dec
inc
loope
mov
push
leave
loope
lock
and
fadd
jae
lea
mov
dec
insb
adc
clc
or
pop
xlat
dec
aam
xlat
sbb
rcrl
push
mov
and
scas
je
dec
pop
sub
jae
in
mov
mov
or
outsl
repnz
fisubl
pop
ret
andb
jp
or
push
jb
push
mov
outsl
mov
bound
std
cmc
and
sbb
out
cmpb
xchg
mov
jle
mov
test
xor
fisttps
add
aas
iret
popa
mov
adc
jl
mov
jb
cli
add
jbe
int
adc
pusha
sbb
and
stc
cmp
frstor
insl
clc
out
lcall
inc
mov
scas
inc
or
pushf
mov
mov
xor
mov
das
inc
clc
pop
sbb
cwtl
push
mov
dec
and
jns
rcrb
add
jmp
pop
add
bound
lock
data16
aas
or
leave
mov
xlat
sub
sub
nop
shlb
xor
mov
in
idivb
into
insb
pop
popa
call
sub
inc
jge
and
push
in
xor
insb
testl
sarl
subl
jbe
in
fwait
cmp
ss
sbbb
repnz
cs
sbb
xor
outsb
pop
push
or
adc
lahf
and
pushf
out
iret
sahf
loopne
dec
xor
jmp
sbb
enter
sahf
scas
lahf
js
mov
js
mov
adc
sub
and
pop
push
ret
dec
imul
sti
les
mov
insl
outsb
mov
les
cli
adc
popf
jnp
or
repnz
push
mov
ja
inc
pop
rcrl
dec
in
xchg
int
sub
gs
popf
popa
sub
jg
cmp
xor
and
stc
mov
stc
loopne
pop
aaa
ja
cld
test
jecxz
add
or
cmpsb
ja
and
dec
aas
les
repz
xchg
pop
or
aad
sbb
mov
jge
inc
mov
into
pop
scas
cltd
fstpt
ret
outsb
cmpsb
fwait
cmp
cmc
add
cld
cmp
sub
addr16
and
xchg
mov
ret
in
mov
lcall
or
push
clc
frstor
sbb
test
mov
daa
sub
mov
mov
mov
imul
sbbb
les
js
cmp
cmp
loop
cmpb
popf
mov
je
mov
mov
lds
xchg
fmull
xlat
sub
cs
sarb
test
and
lahf
mov
jmp
stc
xor
mov
pusha
jbe
paddusw
adc
inc
movsb
jecxz
fs
movsl
xor
inc
mov
in
push
sub
lock
ljmp
inc
mov
dec
dec
bound
cld
lds
adc
push
mov
popl
xor
lods
sub
cmp
je
fdivrs
push
cmpsl
out
sbb
push
jl
imul
xchg
pop
and
movb
jne
hlt
jg
cmc
xor
jnp
insb
pop
test
imul
or
xlat
cs
in
xor
shrb
mov
imul
sub
ss
pop
test
push
sbb
xor
pop
jmp
xor
add
xor
jns
mov
andl
dec
add
nop
mov
mov
adc
jle
rclb
jae
mov
movsb
lahf
ffreep
fsubrl
cltd
testb
mov
dec
xor
test
pop
xchg
jbe
cmp
rclb
mov
fwait
push
xor
fldcw
ss
andb
hlt
lds
and
push
js
xor
es
sbb
mov
aas
mov
popa
jmp
stc
popf
xchg
dec
dec
testb
xchg
aaa
push
mov
repnz
pop
stos
js
mov
xor
sti
sub
adc
sub
add
out
xchg
dec
rcll
mov
jmp
push
inc
es
push
xchg
subl
dec
mov
int3
push
sbb
xor
adc
jns
sub
add
out
mov
aas
jmp
sbb
cmpsl
daa
into
in
mov
sbb
insb
scas
adc
or
add
dec
jg
sub
xor
ljmp
inc
daa
cmc
loopne
sahf
jmp
daa
movsb
loop
mov
xchg
ja
pushf
add
xor
in
inc
sbb
arpl
pop
add
nop
lods
push
xchg
popf
adc
sub
outsb
add
fsubl
cld
jae
sti
mov
mov
sub
push
mov
dec
add
inc
adc
lods
push
loopne
mov
stos
and
sbb
movsb
push
add
mov
dec
std
inc
fadds
mov
fisubrs
cmpsl
iret
in
not
sub
mov
xchg
adc
and
adc
cmp
fadds
push
test
imulb
fidivrs
lret
stc
sbb
mov
mov
pop
clc
popa
and
bound
mov
fldcw
test
fwait
adc
stc
mov
jno
arpl
pop
mov
ja
xor
fcoms
add
inc
adc
popf
mov
repz
ret
and
push
dec
cli
push
pop
xchg
lods
std
mov
jae
jg
mov
test
jg
test
icebp
sti
dec
clc
sbb
or
pop
aaa
nop
pusha
dec
dec
mov
jg
adc
inc
xchg
dec
fldcw
inc
pushf
push
in
test
jl
leave
add
cmp
inc
push
jecxz
push
out
cmp
push
sbbb
dec
or
jge
inc
jne
js
fbld
adc
jl
outsb
jb
aam
scas
jb
clc
jbe
test
pop
xor
push
adc
pusha
shll
cmp
mov
ljmp
xchg
jno
or
pop
shrb
fndisi(8087
cld
jmp
jmp
dec
pop
add
jl
int
out
jmp
jl
sub
adc
clc
jbe
shlb
into
jg
mov
arpl
stc
adc
pop
add
lret
mov
cltd
inc
push
out
fldl
xchg
mov
ja
jecxz
shl
jl
or
aad
push
shrl
sbb
dec
jp
sbb
fiadds
or
push
dec
inc
add
and
push
mov
xchg
dec
sub
sub
mov
fisttps
icebp
pop
or
lcall
popf
push
ret
out
and
cmpb
push
aam
mov
push
cwtl
jns
movsl
adc
test
test
jb
and
aad
clc
add
sbb
sub
pusha
or
jne
sbb
ret
lock
aas
add
out
jmp
jno
jo
jge
xor
xchg
xor
push
jg
aad
rolb
pop
lods
lock
ds
nop
mov
lock
aad
jle
push
sbb
add
mov
dec
mov
sub
xlat
icebp
mov
pop
ror
jle
xlat
ljmp
add
cmp
pop
and
lea
adc
in
inc
xor
jge
add
pop
jg
push
xor
fsubs
fidivrl
inc
pop
jle
xor
push
ljmp
adc
add
mov
lods
out
mov
push
ja
dec
jno
cltd
es
inc
jb
std
add
sub
xor
and
inc
stos
and
push
data16
loope
arpl
aam
jnp
mov
push
mov
lret
dec
bswap
jne
mov
mov
dec
out
stc
add
leave
sub
pop
shrd
pop
sub
loopne
test
cmpsb
adc
int3
push
fsubr
es
or
je
insl
jecxz
and
outsl
andl
clc
ret
and
mov
popf
push
cmp
sub
xchg
inc
ds
imul
push
jle
jg
xchg
inc
shlb
ficoms
mov
mov
popf
jns
cmp
xchg
repnz
push
out
shll
xchg
shl
fxch
cmp
lcall
or
mov
out
mov
pop
fmull
dec
and
mov
bound
lock
jbe
fstps
xchg
and
lds
pusha
in
mov
mov
out
ljmp
push
sti
js
data16
jg
cld
mov
inc
pop
std
cmp
sub
lods
inc
fisubrs
pop
cli
out
lods
fcoml
ds
outsl
pop
repz
adc
mov
sub
addr16
mov
aas
push
and
mov
mull
mov
jmp
push
jge
mov
sbb
xchg
arpl
cmp
cmc
jg
lcall
cs
addr16
push
push
stc
push
fstps
hlt
or
push
jne
insl
sahf
das
fists
mov
push
jbe
add
jbe
lahf
add
fdivl
cltd
jp
xchg
mov
sub
cmp
icebp
bound
data16
push
pop
pop
out
xchg
xchg
repnz
ss
push
or
into
jns
dec
mov
testb
in
jg
fstpl
test
cs
cmp
mov
sbb
push
sub
pop
and
fwait
or
pop
ja
out
inc
xchg
clc
fsub
jecxz
adc
psubsb
sahf
cltd
pop
pop
mov
pop
fdivrl
add
push
sub
in
sbb
sub
fsubl
add
pop
sbb
jmp
pop
lods
scas
outsb
push
popf
xor
daa
inc
ds
stos
pop
mov
in
push
cwtl
inc
and
jp
inc
push
iret
mov
or
lock
xchg
inc
cmp
pushf
ret
scas
inc
xchg
in
outsb
test
xchg
sub
movsb
test
jb
xchg
shll
je
lods
cmp
xor
add
inc
push
shlb
lock
inc
outsb
cmp
dec
dec
xlat
mov
dec
xchg
cs
sti
sahf
ss
or
cmp
sahf
pop
in
cmp
and
dec
scas
jnp
loope
and
inc
cmp
pop
subl
push
cmp
inc
xchg
mov
repz
cmp
add
pop
addl
popa
lds
fs
leave
outsl
inc
mov
test
mov
test
mov
ficoms
sbbb
sti
add
lods
mov
hlt
add
push
outsl
pop
ds
fs
shlb
flds
fisttps
jnp
push
jle
inc
pop
rolb
fidivrl
fdivr
mov
cmp
rcll
gs
ja
xor
out
inc
inc
stos
push
or
lret
sbb
xor
cmp
out
movsb
test
pop
cmp
xor
lock
cld
insl
sbb
outsl
gs
jne
outsb
pop
inc
imul
insl
xchg
sbb
jmp
aas
jns
cmc
mov
out
sbb
mov
jg
sbb
ja
in
lcall
insl
sub
and
mov
out
jmp
sbb
push
jae
lock
icebp
ljmp
inc
popa
dec
adc
pop
faddp
xorl
xchg
out
mov
stos
or
out
into
paddb
cmp
sub
repz
ljmp
xchg
adc
pop
mov
fidivrl
lahf
inc
xor
cmp
jle
aad
xlat
lret
sbb
cs
dec
inc
add
cmp
clc
push
add
fucomp
pop
jne
push
js
cmp
fimull
jge
sbb
scas
xchg
sbb
jnp
sbb
cmp
ljmp
push
das
int3
clc
arpl
push
dec
addr16
sbb
stos
mov
iret
sbb
lea
adc
push
lea
jb
addr16
imul
into
pop
pop
out
cmp
adc
aad
jg
xchg
shl
orl
scas
or
push
add
or
xor
call
inc
push
and
iret
sub
mov
in
sti
jo
mov
int3
xor
cld
add
pop
sub
jnp
xchg
push
cld
push
stos
outsw
addb
xchg
push
pushl
and
imul
xor
inc
xsaveopt
jae
lock
hlt
dec
cmovb
cmpsb
inc
sbb
sbb
cmovne
xchg
xchg
sub
or
inc
xor
jo
adc
cli
push
rcll
imul
cmpsl
pop
sbb
xor
push
sub
rol
pop
ret
divb
mov
ret
push
or
ljmp
cmp
xor
inc
cmp
sub
adc
cmp
aaa
sbb
out
sub
or
icebp
mov
pushf
out
hlt
in
mov
inc
sub
mov
pop
setp
pop
inc
aas
and
dec
cmc
inc
imul
xchg
movsl
sub
ljmp
dec
lea
mov
int
daa
popf
push
adc
pop
sub
cltd
sbb
int
xor
rcll
jnp
hlt
pop
jmp
add
cmp
loope
imul
xchg
sub
push
flds
stc
inc
add
xor
xchg
pop
popf
xorl
ficoms
cld
cltd
fs
lahf
push
rcrb
push
ss
test
sub
and
pop
vunpcklpd
dec
mov
ret
sub
pusha
mov
xor
fcmovnb
pusha
int3
inc
lret
stos
stos
or
mov
fcmovnu
shll
jnp
scas
mov
sysenter
jp
xchg
cmpsb
bound
movsb
mov
mov
ficomps
outsl
xchg
mov
cltd
sbb
stos
test
inc
and
ffree
aad
cltd
lds
xor
jmp
xchg
imul
int3
or
stos
push
jno
cli
or
inc
jne
repnz
adc
aaa
leave
lea
dec
dec
push
lcall
std
mov
jp
iret
cmp
mov
xchg
add
pop
sub
mov
int
adc
test
arpl
stos
stc
or
ds
and
in
into
inc
shr
aam
testb
fldenv
sub
xchg
pop
cmp
je
add
pop
scas
dec
pop
add
das
xor
je
mov
cmp
mov
or
push
lahf
shl
xor
popf
push
sbbb
jp
or
mov
dec
shrb
testb
insb
pushf
or
pop
filds
fistl
arpl
mov
xchg
add
mov
sub
sub
push
push
push
mov
inc
jmp
and
sbb
rorb
xor
mov
add
in
add
adc
idivb
aaa
add
cmp
test
mov
pop
rclb
cmpsl
cmpsb
jne
dec
mov
rorb
mov
jmp
test
or
sbb
cmpsb
in
pop
mov
in
sahf
inc
mov
mov
orl
arpl
and
mov
mov
inc
stos
aam
test
cld
mov
fidivrs
or
pop
loope
inc
add
into
mov
and
adc
cmpsl
mov
dec
and
dec
add
xchg
sub
push
mov
sub
rcr
leave
xchg
stc
clc
xor
push
out
lods
mov
cli
out
jl
cwtl
push
mov
dec
xchg
insb
dec
incb
cmp
nop
and
fadds
or
rorb
stc
inc
push
jbe
push
std
dec
mov
in
mov
mov
add
enter
inc
das
lea
inc
inc
lret
pushf
lock
pop
push
mov
nopl
xor
mov
cmp
jnp
mov
sbb
cmc
push
sub
ret
mov
mov
arpl
je
cli
ljmp
sbb
adc
mov
sub
and
cli
sub
in
lods
cmp
inc
not
or
xor
in
mov
cmp
adc
inc
sub
in
add
inc
add
shll
out
fists
sub
insl
jno
mov
sub
insb
adc
xlat
movsb
and
mov
jmp
imul
cwtl
test
push
cmc
adc
dec
out
cmp
divl
sub
sbb
add
into
out
inc
sbb
dec
push
into
cmp
mov
cwtl
and
in
add
mov
mov
adc
ja
mov
cld
repnz
sti
xchg
das
fistps
pusha
loopne
mov
lods
jle
mov
shlb
inc
inc
mov
xlat
insl
mov
repz
adc
xchg
dec
fdivrs
xchg
jnp
mov
xchg
pop
test
xchg
int3
mov
mov
imul
insb
jno
addr16
cltd
aam
mov
fcoms
test
xchg
scas
sub
in
out
jp
arpl
jge
pop
fistps
adc
and
ljmp
cmp
in
sub
aad
lcall
cs
fisubrl
mov
test
mov
negl
inc
mov
in
lds
mov
pop
jecxz
jb
pusha
scas
push
enter
cmpsl
fsubs
loopne
stos
cmp
das
ficompl
mov
in
xchg
loop
aaa
outsb
mov
enter
mov
pop
pop
out
mov
lock
mov
jp
inc
xchg
xchg
test
jp
adc
jecxz
test
lahf
icebp
fdivp
int3
xchg
imul
jnp,pt
xor
mov
cli
or
xlat
sbb
lea
xchg
cmp
sbb
loop
cld
fcoms
dec
or
xor
cwtl
mov
fcompl
sti
cmp
das
pusha
cld
xor
inc
std
les
mov
int3
sbb
scas
adc
insb
cmp
cmovbe
jae
add
add
enter
ficoml
insl
jns
mov
shll
jp
rcr
lea
js
mov
push
aam
inc
push
daa
out
mov
pop
mov
cld
sbb
daa
icebp
mov
cwtl
mov
fsubl
mov
xor
add
mov
in
int3
out
dec
aad
icebp
pusha
sti
jle
push
inc
push
inc
cmp
inc
add
in
or
xchg
mov
push
add
mov
cmpsl
dec
fcmovb
xchg
orl
xchg
mov
mov
in
push
push
sub
pop
aam
lret
mov
ss
outsl
mov
rolb
push
mov
iret
cmp
mov
fisubs
mov
xchg
stos
add
inc
xor
outsl
cmpl
jl
jne
jecxz
xchg
pop
adc
push
dec
mov
and
jb
or
adc
movsl
cvtdq2ps
dec
fidivrl
lock
in
pusha
dec
fsubs
xchg
mov
xchg
or
mov
inc
xchg
cmp
jmp
stos
gs
pop
add
pop
jo
ret
aas
sahf
push
test
cmp
das
jno
mov
jns
push
in
mov
cld
dec
test
stos
fld
loop
sbb
movsb
push
daa
ljmp
test
sub
inc
or
cmp
lea
out
xor
add
outsl
sti
ret
jg
ljmp
sub
in
fisubs
or
imull
xchg
xor
sub
sarb
mov
int
outsb
adc
jmp
add
cmp
mov
pop
cmp
cmp
mov
and
adc
xchg
bound
scas
neg
loope
in
inc
sub
jae
add
jmp
mov
mov
repz
fcoms
and
or
sarl
xchg
rep
adc
lea
mov
jo
fnstcw
mov
fildl
jne
ret
add
mov
loopne
inc
test
dec
mov
jp
xchg
or
push
cmc
mov
imul
mov
mov
call
mov
mov
insb
and
add
xor
inc
sbb
sbb
fidivl
aad
fwait
pop
stos
pop
scas
xor
sub
pop
pop
jp
pop
dec
jmp
repnz
movsl
add
mov
rorb
imul
lock
lea
dec
mov
in
loopne
sub
xchg
call
orl
rcr
hlt
mov
inc
mov
lock
jo
xchg
jbe
das
adc
shlb
jbe
icebp
fs
nop
or
add
push
repz
dec
jno
sbb
sti
sti
daa
aas
ljmp
ljmp
dec
outsl
xchg
jnp
mov
mov
ret
xor
jbe
popl
mov
fnstsw
lods
lret
movsb
lock
pusha
leave
in
jae
push
cmp
test
mov
adc
outsl
shl
lds
xor
mov
push
insb
lcall
rorb
cmp
push
mov
imul
jecxz
dec
cwtl
push
imul
call
addr16
fisubrs
mov
lds
cmc
daa
mov
cmc
insl
hlt
pop
xor
push
pushf
test
leave
imul
inc
cmp
jmp
in
mov
cltd
dec
fwait
repz
rcl
add
je
test
pop
xor
xor
jno
pop
mov
pop
fdivr
or
mov
jno
push
fstpl
fucomp
mov
pushf
sbbb
and
dec
ja
push
sbb
out
jae
mov
es
rorl
jg
testl
jo
inc
shrb
jl
sub
and
gs
add
jb
xchg
or
jle
movsb
and
jne
clc
ficompl
jg
fdivl
sbb
int
pusha
xor
adc
push
imul
jmp
adc
mov
cmp
mov
mov
movsl
nop
jle
mov
sbb
clc
fsubs
imulb
and
rol
stc
jne
ljmp
lock
sbb
leave
jno
and
or
pop
add
push
mov
pop
pop
fs
lahf
scas
js
pop
fadd
in
lds
in
adc
ret
push
sbb
mov
lret
add
cmpsb
and
sub
sub
pop
out
push
bswap
jecxz
mul
int3
cmp
mov
jne,pt
popl
stos
push
repnz
adc
or
mov
repz
sar
pushf
push
push
mov
mov
test
in
ljmp
xchg
subb
inc
pop
pop
pop
bnd
or
xchg
or
sahf
mov
loope
xor
push
adcl
jnp
fnstenvs
mov
push
daa
std
gs
jecxz
out
aad
pop
xchg
cltd
xchg
mov
je
cs
add
ja
das
jns
lods
lds
cmc
inc
push
xor
pop
inc
lret
jmp
ret
test
insl
add
or
add
js
lea
xchg
ss
jne
xchg
push
cmp
icebp
xchg
loope
jg
inc
out
and
jns
jl
addr16
jle
xchg
negl
mov
mov
test
xor
jecxz
lahf
mov
push
jns
mov
adc
jge
push
sti
add
mov
popa
into
bound
insb
mov
ret
and
cmp
or
sub
cmp
outsb
stc
mov
pop
jge
mov
pop
inc
aas
add
dec
lret
insb
lcall
xchg
pop
jecxz
dec
jmp
or
mov
mov
xchg
mov
or
cmp
fmul
or
aaa
push
loop
add
mov
js
jno
ja
ret
push
xor
loope
ds
les
xchg
cmpl
lret
out
pop
popf
xor
pusha
cs
test
fists
pop
out
add
subl
dec
dec
aaa
pop
fwait
jns
stos
mov
fcmovnu
inc
dec
pusha
addr16
ficomps
scas
cmc
mov
mov
mov
jbe
es
add
shlb
push
je
jo
cli
mov
shlb
lret
test
or
cs
sub
mov
iret
cs
imul
je
lds
pop
pop
jno
popf
xor
or
jne
sbbl
lret
fdiv
lea
sub
jo
in
pop
sti
cltd
mov
mov
and
pushf
add
sti
push
test
pop
pop
cmc
jge
add
mov
push
loopne
and
test
sbb
jmp
xacquire
arpl
js
cmp
lcall
cmp
push
gs
fnstcw
imul
jle
out
cmc
mov
xchg
js
sub
or
adc
jg
nop
scas
mov
ret
cmpsb
ja
push
mov
ret
jnp
inc
mov
int3
sub
sub
mov
mov
jo
push
inc
lods
push
inc
pop
xchg
mov
cs
push
sti
or
cmp
jecxz
and
sbbl
xor
push
inc
xchg
inc
insb
fsubl
in
fdiv
adc
mov
or
and
data16
imul
sub
insb
std
sbb
pop
push
test
fimuls
push
mov
in
add
push
sbb
daa
or
mov
pop
mov
pop
mov
push
fucomip
sub
mov
fwait
sbb
lds
push
loopne
cmovae
pop
call
cmp
popa
push
repnz
mov
imul
shlb
subl
mov
in
test
xchg
addl
push
push
sti
mov
outsb
incb
int
std
adc
je
lods
xchg
jnp
lock
or
xchg
push
cmp
mov
sub
ljmp
mov
cmc
cltd
movsl
movsb
push
mov
movsl
stos
bound
rcrb
fs
cmp
scas
bound
aaa
pop
ss
aam
mov
vsqrtps
dec
inc
gs
sbb
or
lahf
fists
in
dec
dec
dec
cmp
mov
xchg
jmp
push
mov
fistps
push
sbb
addr16
jp
testb
cmp
inc
pop
fadd
notb
jl
test
inc
ficomps
js
cmpl
adc
mov
adc
mov
loop
pushw
ficompl
aaa
jae
jo
enter
xor
fadds
mov
and
nop
outsb
mov
jcxz
cmp
mov
repz
sub
sbb
stc
ja
push
inc
xchg
add
push
mov
add
repnz
xor
mov
pop
mov
dec
push
frstpm(287
mov
fsub
lods
jb
add
mov
out
mov
dec
jecxz
imulb
ja
in
lods
outsb
jb
rol
pop
sub
push
sub
mov
push
hlt
arpl
ljmp
fxam
jl
das
sbb
sbb
je
fwait
mull
adc
pop
lret
in
daa
aam
and
orl
and
push
std
push
dec
mov
and
push
in
and
fld
fs
mov
add
cmp
mov
movsl
xor
cmp
movsb
mov
es
sbbb
mov
adc
sar
shr
mov
pop
loope
and
sahf
mov
loopne
xlat
sbb
xchg
xchg
test
mulb
add
jo
sbb
push
test
out
insb
xchg
lahf
test
mov
cmp
adc
imul
add
lods
sub
xchg
dec
aas
pop
int3
loop
inc
fwait
pop
in
test
outsb
addr16
mov
lock
mov
sub
inc
out
dec
lret
out
sub
outsb
sub
loop
das
sub
push
bound
jg
dec
inc
aad
lods
xor
adc
test
cmp
adc
fldt
aad
pop
jno
fucomip
aaa
lock
pop
adc
sub
cmp
test
jle
mov
jmp
into
arpl
cli
add
jnp
shrl
aad
popa
mov
icebp
mov
ss
mov
add
aam
xchg
int
sub
mov
mov
lea
mov
dec
jb
insb
and
mov
lcall
push
cmpsb
cld
sbb
push
push
ljmp
fadd
enter
sub
or
sbb
stos
mov
sub
test
pop
push
push
nop
xor
les
in
js
push
mov
inc
gs
insb
sub
ret
lock
cmp
cmp
jg
rcll
outsb
and
insb
push
imul
sbb
das
shrl
aam
lret
fistpl
aas
out
mov
push
fdivrs
xchg
push
jmp
adc
dec
leave
pop
inc
pop
sub
or
pop
cmpsb
das
pop
mov
mov
push
scas
dec
imul
mov
inc
call
ja
imul
push
ss
and
shl
mov
rol
sbb
sbb
add
add
pop
inc
test
mov
push
pop
pop
cmp
ljmp
movsb
push
call
ds
fidivrs
loope
aas
out
dec
or
jbe
je
xor
mov
dec
mov
cmp
ds
push
pop
sbb
sbb
and
lock
sahf
mov
scas
add
std
mov
out
xchg
and
mov
cltd
add
jae
jmp
mov
xor
or
pop
fisubrl
aaa
data16
ret
or
sub
sarl
lods
out
cmp
inc
xor
dec
mov
ja
lds
bound
jg
mov
jecxz
cmpsb
xor
jo
dec
or
pop
jmp
mov
fstpt
pop
stos
sbb
lods
push
pusha
mov
add
sbb
pop
imul
fmuls
imul
je
out
mov
fidivrs
push
dec
xor
sub
daa
fiaddl
data16
pop
repz
push
addr16
dec
xlat
cmpsb
jle
jmp
out
jmp
movsb
mov
loope
pusha
out
not
rcll
std
je
cs
cmc
jo
pop
pusha
loope
sbb
scas
stc
test
out
inc
add
add
fsubrs
iret
pop
dec
and
in
sbb
enter
dec
aaa
test
lea
or
inc
shrb
movsl
repnz
dec
cltd
shrl
out
comiss
or
into
ret
insl
add
enter
mov
sub
stos
test
push
fsubp
dec
sbb
dec
mov
mov
fisubs
sbb
dec
fistl
addr16
movsb
clc
mov
pop
fidivl
in
mov
std
call
in
mov
popa
jns
and
add
mov
or
cld
and
inc
add
mov
jne
cmp
cmp
stos
push
cmp
in
cmp
xchg
stc
cmpsl
sti
popf
in
pop
lods
jns
jge
lock
les
pop
push
cli
ljmp
ss
sub
cmpsl
fdivs
jmp
inc
mov
idivl
push
adc
or
push
sbb
cmc
sahf
lds
cmp
xchg
inc
cwtl
push
cltd
push
movl
jne
fsubr
xlat
in
cmp
lock
xor
adc
or
xchg
inc
inc
hlt
mov
adc
pop
lea
mov
mov
xor
subb
cmp
ljmp
dec
nop
into
lcall
ret
pop
cmpsl
mull
dec
cmc
xor
fiaddl
and
mov
pop
adc
add
sub
testl
lock
cmc
adc
add
sbb
rol
mov
jl
sub
add
cmpsb
std
adc
add
dec
mov
xchg
or
xor
jae
mov
adc
iret
mov
repz
je
ja
pop
and
push
sub
leave
and
and
pop
sub
jmp
and
pop
das
arpl
pop
sbb
mov
out
xchg
xor
inc
call
in
jmp
xchg
in
or
mov
inc
into
xchg
cmpsl
scas
idivl
orb
hlt
jg
mov
addl
xor
pop
or
cwtl
cmpsb
sub
pop
out
icebp
jmp
cmp
daa
push
subb
daa
inc
out
enter
xchg
xchg
xchg
dec
std
sub
push
or
out
lret
jbe
loope
fistpl
pop
cli
popa
sbb
sub
hlt
popf
dec
pop
inc
jl
loopne
pusha
mov
cmp
movsl
ds
xchg
mov
loop
stos
mov
mov
out
pop
daa
sub
lea
adc
fwait
test
push
mov
cmp
std
dec
xchg
test
popf
hlt
pop
les
stos
push
arpl
lods
mov
xchg
ja
push
in
cwtl
insl
cmpsl
cmp
add
je
ror
xchg
aam
cli
adc
addl
mov
test
add
out
jne
pop
jae
pop
loopne
push
lds
jno
pop
mov
xlat
repz
dec
fsubl
adc
aam
fsubr
rorl
sub
test
pop
dec
int
sub
cmp
push
rol
inc
dec
mov
ja
js
addr16
out
or
cmp
mov
mov
stc
out
xacquire
adc
je
jle
ljmp
lods
in
sbb
jp
adc
push
test
sub
xor
dec
rcl
aaa
pop
test
inc
fisubs
int3
aam
loope
and
push
ds
cwtl
clc
pop
push
mov
dec
or
out
inc
inc
in
mov
or
ja
enter
mov
mov
jbe
lcall
and
sub
cs
cli
and
mov
or
mov
adcb
call
ret
add
mov
or
or
or
ds
adc
adc
cmp
pop
rorl
pushf
shll
dec
sub
leave
xor
or
gs
cs
fisubrl
cmp
daa
mov
mov
icebp
mov
dec
enter
cwtl
dec
and
sub
jbe
je
fcomps
lock
cmp
test
or
shlb
inc
popa
xor
mov
jns
stos
in
add
mov
repnz
push
mov
repnz
rorb
jmp
cmpsb
hlt
aaa
xchg
or
sub
push
push
jo
daa
das
mov
pop
add
cmp
imul
xchg
pop
loope
gs
dec
or
arpl
mov
pop
mov
dec
push
pusha
data16
xchg
bound
rcrl
xor
mov
int3
sti
loopne
cmpsl
mov
stc
rolb
stos
xchg
add
pop
scas
movsb
mov
insb
pop
movsl
jne
fisubl
or
aaa
repz
mov
cmp
outsl
mov
or
or
mov
add
outsl
adc
hlt
int3
enter
sub
mov
es
add
fmul
add
hlt
xor
jo
aad
cmp
pusha
iret
out
pop
adc
in
mov
jmp
lcall
in
addr16
and
pop
pop
xchg
jo
mov
cwtl
fnstcw
and
pop
cs
je
clc
test
sub
lret
adc
ljmp
mov
sahf
pop
jecxz
mov
dec
out
jle
cmp
outsb
or
outsb
outsb
cmpb
mov
jno
pop
adc
pop
gs
pop
test
mov
mov
cld
nop
cmp
int3
cltd
jae
stos
add
shlb
dec
mov
or
and
dec
pop
pusha
adc
test
lds
bound
repz
push
repnz
fcmovne
mov
fistl
and
fstpt
scas
add
push
inc
xchg
inc
popa
push
mov
repz
xchg
lods
and
xchg
subb
addr16
adc
js
jns
lahf
andl
scas
loopne
adc
pop
push
jg
push
aaa
test
std
je
inc
cmp
outsb
pop
lods
push
sti
cmpb
jmp
mov
xchg
jb
popa
dec
xor
or
mov
aam
jb
daa
pop
lods
mov
dec
fsts
test
jg
xor
into
lock
push
add
cwtl
mov
cmp
dec
jns
loope
or
daa
js
and
push
and
and
or
push
inc
mov
pop
sub
dec
lods
int3
ja
jo
jbe
jbe
mov
inc
shll
aam
je
rcr
out
mov
xor
insb
adc
pop
sbb
push
rcr
mov
dec
jmp
in
cmpsl
popa
clc
test
add
js
inc
sbb
adc
xchg
ret
jle
sbb
jmp
arpl
add
mov
outsl
movsl
loopne
ret
out
enter
add
aaa
or
xchg
dec
out
mov
jae
loop
js
repz
or
nop
insb
mov
xor
popf
inc
sub
or
and
mov
sbb
scas
add
and
jg
jg
or
mov
add
mov
pop
stc
or
pop
cmc
test
sbb
pop
mov
push
bound
addr16
in
push
movsl
and
cmpsl
js
mov
imul
js
shlb
sbb
mov
dec
push
mov
out
shlb
pop
call
out
push
adc
sarl
fisubrs
sub
sub
cmp
psllw
jle
sti
pop
loop
es
sbb
repnz
mov
cltd
bound
mov
sahf
adc
dec
dec
jl
xor
inc
add
or
int
cmp
inc
inc
cmp
sub
lcall
cli
lock
xchg
push
cmp
fdiv
repnz
leave
mov
lret
inc
lods
inc
call
mov
test
jg
fdivs
inc
mov
jle
or
jge
cmp
data16
sahf
jns
loope
push
fwait
js
out
shlb
mov
sbb
xchg
lahf
pop
outsl
sbb
rorb
mov
iret
xchg
testb
mov
add
popf
jae
bnd
or
mov
adc
xchg
push
subb
jo
into
int
stos
dec
lcall
cli
je
dec
sbb
ret
pop
rcrl
inc
fwait
add
mov
or
pop
jl
xor
xor
xchg
jo
aad
cmp
andl
fisttpll
lds
xor
mov
xlat
pop
lods
sub
or
aaa
sub
xchg
sti
fistpl
icebp
sbb
mov
sbb
xchg
xor
xchg
int
xor
sbb
ss
inc
dec
xor
adc
les
ret
sub
psubsw
stos
repnz
into
pop
push
std
push
lods
cmp
mov
jns
in
push
fcmovnbe
into
pop
cmp
and
xchg
imul
dec
sbb
testl
pinsrw
push
in
adc
or
rolb
sbb
loop
mov
inc
lahf
jmp
pop
xchg
add
pop
adc
insl
sahf
jb
jp
or
push
imul
shlb
lcall
jge
mov
jns
push
jmp
mov
inc
cld
mov
xchg
or
negb
xchg
out
mov
sti
inc
ret
pushf
out
cmpsl
and
jg
jecxz
xor
sahf
cmp
push
test
sub
pop
call
xchg
leave
inc
xchg
ja
pmulhw
ss
icebp
aam
test
cmpsb
mov
cmp
rcrb
repnz
push
pop
scas
sti
push
mov
ret
loope
jae
rcr
mov
or
push
fldcw
fs
movsb
mov
mov
add
xchg
push
aam
call
sahf
push
fsubp
int
ret
jecxz
inc
fs
inc
add
push
cmpb
add
adc
adc
mov
call
add
inc
pop
jns
call
mov
orb
ja
out
dec
sbb
pop
out
loope
or
js
ljmp
mov
shll
jecxz
popf
ret
and
js
std
pop
fs
clc
movsl
daa
dec
scas
or
repz
andb
xchg
out
mov
push
mov
fistpll
jnp
mov
jl
push
jae
imul
mov
je
jg
in
lret
xorl
daa
stc
popa
and
rcll
xor
shlb
fiaddl
push
add
and
push
mov
push
test
pushf
lahf
mov
fsubrs
xchg
cmp
pop
inc
mov
lds
decl
scas
xorl
fs
or
inc
sbb
xchg
loop
lahf
jns
sar
mov
mov
ret
pop
in
xchg
icebp
ljmp
dec
cwtl
dec
cltd
pushf
xorl
push
sub
sub
jecxz
stos
inc
lds
divl
jl
test
push
stc
lret
out
mov
xchg
and
inc
or
pop
mov
les
inc
jl
lds
adc
fisttpl
jmp
popa
insl
test
xor
or
cli
cmpsb
cmp
sub
icebp
shlb
push
ret
cmpsb
into
fiadds
sub
dec
mov
or
mov
dec
lret
rol
lea
push
xchg
push
insl
fcmovu
push
push
sbb
loopne
sub
sbb
push
in
test
sub
int
dec
dec
cmp
cli
aaa
in
out
and
lock
stos
and
xchg
sti
aas
adc
xlat
mov
sbb
pop
or
push
andb
or
cmp
push
out
add
stc
dec
jae
stc
inc
cmpsb
fidivs
out
adc
outsb
lods
aam
dec
add
lret
pop
dec
xchg
cmp
jecxz
fidivrl
bound
hlt
xor
jmp
test
test
mov
movsl
bound
and
pop
scas
lret
add
mov
dec
and
xchg
insb
mov
cmp
sti
enter
icebp
mov
dec
push
xchg
xchg
sbb
addr16
inc
push
pop
push
not
rcr
jns
sub
movsb
andb
or
ljmp
mov
add
dec
jecxz
and
lea
jg
pop
sbb
fbld
ja
xchg
mov
add
bound
xchg
adc
int
test
pop
sbb
xchg
data16
lea
test
mov
rclb
inc
in
arpl
and
rcrl
mov
jno
jbe
pop
ffree
xchg
or
xchg
pop
nop
fildl
pop
int3
popl
dec
fnstcw
adc
push
pop
sbb
lock
add
les
insb
inc
mov
push
or
popa
shrb
je
pop
cmpsl
xor
mov
inc
ss
ficompl
cmpsl
inc
add
mov
daa
cmp
je
dec
xchg
sbb
dec
int3
inc
pop
cmpsl
and
cmp
jb
inc
orb
inc
popa
mov
dec
or
add
or
outsl
push
pop
inc
lods
lret
ljmp
std
fstps
and
iret
dec
filds
push
sub
es
scas
jno
sbb
out
ficoms
add
or
sbb
cmpsb
and
iret
and
repnz
jae
xchg
dec
std
notb
cmp
and
add
scas
xchg
fwait
dec
sarl
data16
insb
sbb
ret
mov
push
test
ss
xchg
scas
sti
jnp
insb
mov
push
sahf
mov
sub
cmp
mov
mov
mov
mov
lret
pop
dec
outsl
in
ret
jle
add
mov
out
cmpsl
pop
rorb
push
loopne
mov
pushf
bound
xchg
dec
shll
lods
mov
sbb
stos
dec
rorb
pop
mov
push
int
push
int
pop
adc
mov
nop
jge
ret
xchg
int
fs
inc
pop
aas
or
out
shll
pop
sbb
and
out
and
pop
cwtl
stc
add
mov
stc
lret
mov
mov
and
mov
pop
mov
and
mov
pop
push
lods
sub
popa
test
dec
dec
and
fcoms
cmp
test
adc
jle
aam
scas
sbb
dec
sub
mov
cmc
dec
push
adc
push
mov
sbb
sarb
inc
fimuls
bound
cmpsb
push
inc
daa
add
cmp
aad
mov
xor
mov
sti
xor
xor
xor
push
imul
push
into
push
enter
pop
mov
lahf
xorps
mov
ljmp
aad
push
adc
mov
jp
xorl
lahf
mov
int
xchg
ss
in
jle
lret
iret
lock
jmp
loope
arpl
inc
or
jae
or
push
pop
fisttpl
push
ficoml
sarb
pop
stc
enter
rclb
out
sub
imul
addr16
jno
pop
add
or
in
push
jo
pop
lock
cltd
or
jbe
shl
jne
push
xchg
adc
or
sub
pusha
std
je
ljmp
mov
ficoml
mov
gs
adc
xchg
call
filds
sbb
mov
jo
repz
add
xchg
mov
cwtl
hlt
sti
xchg
incb
insl
bound
xchg
mov
pusha
ds
xchg
add
push
les
pop
dec
cmpsb
pop
sub
sbb
cmp
lds
imul
mov
jle
cmp
fsubrs
adc
add
fistpl
sbb
imul
mov
sahf
xchg
mov
fwait
nop
jg
sarb
xchg
pop
ss
stos
les
repnz
inc
les
iret
les
rcl
imul
dec
push
xor
and
notb
dec
mov
xchg
dec
xor
sbb
cmpsb
lock
in
aam
ljmp
mov
cmp
insl
or
sub
add
sti
mov
popf
test
jp
mov
popa
xchg
pop
vcmppd
jns
xor
and
jp
adc
jb
stos
loop
test
arpl
cmp
es
jmp
cmp
fidivrl
loop
sbb
stos
loop
lret
into
popf
dec
scas
sbb
push
cmpsb
nop
xor
sub
call
mov
dec
cmp
mov
movsb
dec
sbb
xchg
push
mov
dec
in
push
fcmovnbe
xchg
pop
enter
fidivrl
sub
adc
std
popf
adc
data16
or
mov
mov
shrb
stos
sub
mov
dec
cmp
insl
insl
mov
rcrl
frstor
push
mov
xchg
xchg
push
adc
test
iret
lods
dec
add
push
ja
gs
adc
xchg
sub
sub
test
ret
pop
fstps
mov
stos
xor
nop
push
push
add
mov
and
add
sar
cmp
sahf
nop
xchg
cmp
shrl
jl
sbb
movsl
int3
std
addr16
ret
mov
inc
test
icebp
jecxz
mov
stos
cmp
mov
inc
mov
adc
aam
out
xchg
push
mov
icebp
xchg
or
fucomip
mov
getsec
pop
jae
popw
in
jne
inc
push
xchg
int3
adc
pop
aad
int3
repnz
mov
imul
imul
dec
ljmp
mov
stos
rorb
fidivs
repnz
in
lret
in
push
aam
faddl
cltd
push
sahf
lods
pop
js
sbb
adc
in
mov
push
sbb
xlat
mov
jl
lods
mov
int
rcrl
push
popa
or
add
arpl
pop
pop
pop
push
jp
leave
pusha
and
mov
xor
cs
inc
xor
test
in
shl
jnp
add
addr16
sbb
popa
sub
cwtl
push
cli
or
xor
mov
shll
ja
inc
leave
ret
test
push
push
clc
cli
sub
lds
xor
fistpl
dec
xor
push
jne
cltd
pop
int
xchg
xchg
or
sbb
cmp
pop
movsl
lods
popa
outsb
add
jecxz
and
or
aas
push
jno
mov
cld
pop
repnz
popa
push
sub
jo
movsl
js
push
cli
loope
and
mov
cmp
sysenter
push
mov
add
mov
sub
fwait
mov
inc
xor
and
cmpsb
bound
int3
stc
or
xor
call
scas
jbe
push
hlt
xchg
mov
dec
stc
mov
add
mov
jp,pt
dec
add
out
push
sub
jo
movsb
loope
mov
test
sub
mov
push
insl
sbb
insl
insb
and
ljmp
fistpl
lret
mov
andb
jp
lds
and
dec
faddl
ret
das
scas
jl
loope
sbb
out
ljmp
cltd
adc
push
popf
int
cmp
loope
icebp
sarl
mov
add
popf
jnp
shll
divb
js
dec
es
jl
jge
pop
daa
mov
rol
xchg
adc
cmpsl
aas
rep
aam
xchg
sub
das
lret
fildl
insl
xchg
adc
leave
xor
rclb
sbb
mov
mov
je
xor
pusha
pop
jo
or
cwtl
or
inc
push
rcll
add
jb
jnp
daa
loope
inc
xchg
lahf
cmp
sub
shrl
data16
rcrb
out
rorl
xor
into
sbb
stos
inc
movsl
mov
sub
xchg
mov
dec
popf
mov
loop
sbb
iret
jae
push
sbb
or
repnz
pop
pop
cmp
je
mov
addb
test
repz
dec
popa
xor
imul
pushf
call
fcomps
push
test
icebp
jmp
push
xchg
addr16
xor
nop
jle
cld
stos
jae
sarl
addr16
arpl
jmp
and
xchg
ss
adc
ljmp
pushf
or
ret
jb
fisubrs
mov
cmc
push
xchg
call
cmpsl
leave
sbb
mov
mov
xchg
add
lcall
arpl
aam
adc
sti
pop
or
aad
ficoms
jl
dec
xor
insl
or
lock
scas
or
cmp
mov
test
mov
dec
mov
mov
scas
lods
xchg
cmp
jb
xchg
mov
sbb
xchg
mov
daa
pusha
or
xorb
xor
xor
fs
jne
or
jl
lahf
inc
or
push
int
pop
pop
push
jns
in
jp
mulb
popf
ds
mov
xchg
jne
addb
push
out
nop
push
push
xor
xchg
test
add
pushf
iret
cltd
mov
jmp
xchg
add
popa
in
sahf
mov
lods
lcall
cltd
fiaddl
notb
cmp
push
add
adc
or
push
test
cmp
cmp
adc
repnz
xchg
sarl
add
loope
mov
add
or
sbb
lcall
xor
scas
and
orl
and
mov
ljmp
cld
jnp
lock
add
clc
cmp
pop
icebp
filds
fstp
es
fsts
das
push
popa
cmp
or
in
aam
lahf
push
enter
pop
pop
fnstcw
jnp
ss
and
lods
sti
pop
sub
mov
pop
dec
scas
js
jnp
or
rcrb
rolb
out
iret
sub
mov
movsl
and
sbb
jo
mov
dec
mov
pop
out
data16
cmpsb
int3
and
fisubrs
or
cmp
out
sub
scas
bound
mov
add
mov
push
jecxz
ds
dec
sub
xchg
shll
dec
push
ljmp
mov
sti
cli
fidivl
dec
fisttps
xlat
inc
jae
mov
scas
leave
mov
lret
call
adc
adc
scas
xrelease
ja
dec
lahf
xlat
dec
dec
arpl
fldenv
fdiv
mov
data16
roll
xchg
mov
into
out
das
pop
inc
nop
outsl
mov
mov
xor
aas
dec
mov
dec
lcall
fs
pop
flds
xor
in
xchg
lahf
scas
aam
shrl
nop
mov
adc
in
or
add
jo
out
into
frstor
mov
dec
xchg
or
dec
dec
sarb
or
mov
add
or
and
or
or
and
pushf
jno
sub
f2xm1
das
js
cmp
cli
xchg
shl
mov
push
dec
lock
push
fdivl
test
xchg
imul
pop
push
xchg
movsl
sbb
push
daa
push
lcall
repz
out
push
inc
stos
push
pusha
jp
inc
push
out
cmp
pop
xchg
push
icebp
jb
mov
std
out
test
inc
cltd
pushf
mov
loop
pop
lcall
scas
mov
leave
iret
adc
pop
mov
xor
adc
and
filds
jecxz
mov
and
sub
pop
or
loopne
inc
pop
sub
xor
push
and
pop
mov
insl
inc
fists
stos
add
daa
dec
cmp
push
pop
add
shl
scas
bound
pop
inc
xor
int3
incl
inc
mov
ret
sbb
fwait
sti
stos
or
cwtl
or
scas
mov
ret
lock
lret
rcll
and
or
inc
mov
xchg
hlt
int3
sub
clc
add
add
push
fwait
das
jl
push
or
subb
cmc
push
in
sbb
sbb
mov
mov
ss
fcoms
vmwrite
pusha
in
add
mov
adc
aad
stos
mov
pop
cwtl
cmp
mov
outsl
std
xchg
repnz
enter
lods
jge
scas
dec
rolb
movsb
jb
std
jbe
or
dec
popf
sbb
mov
xchg
enter
adc
gs
mov
ljmp
aaa
dec
gs
push
lahf
cmp
daa
out
mov
mov
shl
jecxz
repnz
repz
popa
icebp
lock
add
and
addr16
orl
and
mov
fisttpl
add
popa
ljmp
repz
push
jbe
jb
pop
push
sub
pop
adc
test
pop
jmp
add
decb
pop
icebp
xor
sbb
int3
ret
push
mov
scas
stc
cld
popa
fwait
lahf
fwait
xchg
nop
arpl
mov
fisttpll
outsb
push
jns
dec
mov
or
xchg
add
or
jo
push
sbb
add
in
dec
es
lods
push
lods
xlat
push
lahf
leave
test
pusha
jo
dec
inc
fs
xchg
into
sub
cmp
rorl
hlt
xchg
pop
push
jg
daa
push
repnz
mov
add
cmp
push
sub
stos
lcall
inc
fisttpl
pop
dec
jae
jge
adc
lock
adc
leave
mov
mov
repnz
or
aad
pop
push
in
mov
cmpsb
jnp
sub
jnp
gs
test
mov
or
out
xor
dec
mov
stc
daa
cmp
push
loopne
imul
push
rcrb
jecxz
shl
movsl
mov
mov
sbb
push
repz
jae
push
mov
or
adc
dec
nop
xor
rcrl
ds
sbb
mov
pop
sub
mov
mov
sub
les
dec
imul
jmp
daa
push
loopne
mov
jge
movsb
cmpsl
xlat
mov
jecxz
or
nop
fcoml
or
xchg
daa
cli
or
lea
cld
pop
arpl
mov
gs
test
sarb
lods
xor
js
mov
pushf
xor
xor
rcr
cmp
add
daa
mov
mov
jbe
jge,pt
popa
cmp
push
rorb
andb
sub
push
jbe
jbe
mov
cmp
ret
fwait
test
out
push
arpl
pop
lahf
and
jns
and
add
mov
add
cld
pop
add
fisubrl
imul
jae
les
rorl
sub
shr
sbb
in
ret
jle
mov
jge
pop
pop
cmpl
sar
call
pushf
sub
inc
sti
jg
mov
or
mov
xlat
mov
leave
dec
mov
in
cltd
xchg
fs
push
push
out
xor
lods
adc
lea
mov
sub
lcall
pop
sbb
mov
inc
push
push
sub
adc
cli
mov
ret
jle
pop
mov
arpl
dec
sub
sbb
movsl
mov
js
aaa
out
mov
les
dec
enter
daa
fistl
add
jl
sub
movsl
adc
fisttpl
je
repnz
fistpll
rolb
and
pop
xlat
cmp
ficomps
repz
out
mov
pop
jmp
sub
cmp
leave
das
push
dec
push
mov
jns
into
fwait
push
xchg
mov
mov
icebp
testb
into
add
mov
loopne
push
mov
ss
and
cmpsb
mov
repz
inc
out
repz
jg
lret
ret
and
jo
fstps
pop
mov
xchg
or
lcall
adc
push
pop
add
in
nop
mov
mov
out
sbbb
push
loop
aaa
add
mov
pop
add
and
push
mov
cmp
push
mov
call
adc
jg
ja
and
inc
test
test
cwtl
int
and
loopne
scas
jge
hlt
cmp
or
rcr
mov
loope
add
jb
pop
in
rcrl
iret
cltd
mov
sub
sbb
into
ror
or
out
ret
cmp
cmp
int3
and
enter
push
mov
movsb
inc
lods
lcall
mov
outsl
cli
or
adc
pop
xor
pop
imul
rorb
out
cld
xchg
mov
mov
gs
or
mul
push
cmpsl
fadds
and
data16
push
inc
sbb
pop
dec
and
lret
add
ja
ficoms
popf
sbb
inc
xchg
inc
rol
xor
sarb
scas
add
cmp
outsl
out
xor
add
and
pop
or
dec
jno
out
rcll
dec
out
loop
adcb
mov
lods
inc
jnp
or
in
jb
fsubrl
insl
add
sbb
mov
xor
stos
aas
fldt
fidivs
popf
mov
arpl
pop
pop
dec
orb
popf
dec
mov
in
sbb
and
je
int
fcom
xor
test
imull
inc
inc
mov
loopw
xor
lds
adc
bound
mov
push
pop
in
scas
cmc
xchg
cltd
rolb
mov
mov
hlt
daa
xor
leave
aaa
lods
sub
fisttpl
mov
fmul
sbb
iret
inc
mov
add
fs
popf
pop
and
dec
pop
mov
and
cmp
das
das
lcall
cs
push
jno
xchg
mov
xlat
pop
cli
test
icebp
shlb
xorb
int3
jnp
mov
loopne
out
ror
jns
or
push
dec
cmpb
outsl
and
test
hlt
gs
cmp
mov
add
add
mov
and
or
and
cmp
xor
jbe
mov
fdivs
dec
aaa
sub
lds
inc
ret
mov
mov
iret
sub
into
fwait
lock
incl
aas
call
and
mov
loopne
xchg
cli
je
adc
movsb
pop
pop
pop
imul
and
fstl
ja
arpl
or
jg
mov
sub
in
jno
cmpsb
test
outsb
add
in
pop
scas
mov
out
xor
fchs
xchg
jecxz
popf
jnp
imull
stos
and
xor
in
test
add
or
movsl
mov
inc
push
outsl
les
dec
jnp
lock
lods
pop
scas
or
icebp
pop
addl
bsr
pop
fdivl
aad
push
adc
in
outsb
dec
sub
decb
aam
pop
ljmp
scas
into
mov
mov
inc
or
bnd
insb
sbb
les
push
mov
daa
pushf
arpl
jmp
ret
xlat
xor
test
inc
cmp
sub
jg
jae
mov
adc
mov
leave
rep
arpl
inc
jecxz
pop
ja
in
mov
xchg
fsts
xor
int3
call
cli
pop
cs
rclb
cmp
push
dec
mov
and
mov
test
pushf
push
xchg
lcall
sbb
movsl
ss
add
cmp
into
xor
aaa
cmp
imul
loope
lods
adc
faddl
mov
xchg
jp
mov
int3
xchg
or
mov
pop
or
fadd
and
fidivs
outsb
les
std
loope
je
or
or
mov
push
ds
fs
xor
sbb
das
dec
int3
and
cld
sbb
fisubs
pop
outsl
cmc
dec
adc
or
inc
shlb
lds
push
out
push
cmp
rclb
aas
or
test
jo
or
add
mov
mov
ret
clc
rolb
adc
fnstcw
lea
xchg
cmp
adc
into
shlb
jnp
xor
xor
cmp
dec
popa
lret
jge
test
dec
loope
mov
icebp
jo
shlb
and
mov
movsb
imul
mov
movsl
rcr
or
ds
push
test
xor
pop
xchg
push
out
and
jno
or
dec
sbb
enter
cmp
push
xorb
shl
jmp
pop
out
in
sbb
bound
adc
add
sbb
ja
ljmp
mov
pop
loop
scas
push
mov
mov
fimull
addr16
bound
sub
nop
sbb
sbb
stos
enter
or
mov
cmpsb
sub
rcl
or
rolb
cmp
lock
cmc
out
loope
out
mov
test
repnz
pop
xchg
rolb
jnp
or
ret
dec
movsl
sbb
sub
or
inc
popf
in
mov
mov
insl
push
out
mov
inc
push
fabs
dec
push
xor
jo
mov
dec
jbe
aam
pop
test
in
scas
or
stc
sub
pop
sti
aas
add
fidivl
lea
or
cwtl
mov
bound
dec
xchg
sub
icebp
pop
add
xchg
mov
sub
push
rcrl
lret
jmp
adcb
cmp
rorl
adc
mov
sub
push
std
mov
push
adc
std
jecxz
pop
push
lret
dec
cmp
or
rorb
sbb
push
sbb
mov
push
nop
mov
lcall
push
xchg
adcl
fprem
and
jmp
xlat
loop
push
inc
enter
inc
dec
mov
xor
fwait
pop
jg
popa
fistps
adc
jmp
rolb
sbb
xor
outsb
xchg
in
pop
fildll
cltd
pop
xchg
cmp
xlat
adc
or
and
bound
cli
aas
mov
movsl
icebp
mov
outsb
jae
gs
bound
nop
xor
sbb
jnp
xchg
sub
sbbl
int3
gs
std
hlt
daa
xlat
ljmp
fidivrs
xor
inc
or
dec
pop
inc
stos
push
cmp
test
jge
dec
sbb
xchg
mov
and
dec
sbb
pop
call
or
fiadds
mov
cmp
xlat
stos
ret
ja
dec
inc
bswap
lods
into
aas
aam
jo
fisttpll
xor
mulb
repnz
test
in
ds
cli
repnz
mov
aam
dec
pop
call
jle
negb
cld
ss
ret
mov
push
subb
cmpb
inc
pop
sti
inc
nop
leave
push
xorl
lods
js
sbb
or
inc
data16
and
pop
test
popa
insl
lock
sbb
mov
and
dec
mov
bound
mov
xchg
jb
push
adc
loop
sub
push
adc
and
or
cmp
push
outsb
ds
xchg
mov
cs
mov
sbb
jbe
push
adc
jp
ja
xchg
sbbb
ret
sbb
lods
sbb
fmull
aaa
js
inc
pop
mov
dec
mov
jp
pop
jge
ja
lods
add
in
add
push
push
xor
lea
xlat
jmp
subl
in
fstps
or
and
subl
aas
or
rep
outsb
jno
lahf
sbb
pop
mov
inc
mov
loop
aaa
lcall
insb
cmp
lods
sub
mov
loope
pop
push
sbb
stos
sbb
lds
or
xchg
inc
mov
sub
xor
arpl
out
cmp
adc
cmp
adc
popf
inc
test
js
fiaddl
adc
cmp
movsl
fidivrl
mov
xor
cmp
adc
or
or
pop
push
orl
mov
dec
std
jmp
pop
scas
sahf
pop
push
in
ret
sub
stc
popa
add
jp
hlt
das
lock
lahf
jmp
out
outsl
scas
pop
mov
push
aaa
cld
lock
adc
xor
clc
je
test
xor
jnp
sub
pop
jno
cmpsb
xor
inc
sbb
stc
mov
fnstenv
mov
lret
sub
shll
inc
aam
test
or
jne
rcrl
pusha
push
iret
xchg
mov
cmp
leave
clc
jo
push
or
pusha
int
lods
pop
inc
stos
lods
inc
lret
lods
xor
test
jno
mov
pop
aas
repnz
push
sbb
sbb
outsb
dec
xchg
mov
sbb
inc
sbb
sub
enter
rolb
pop
fmul
lret
cmc
pushf
test
movsb
and
into
iret
scas
jg
mov
mov
lea
adc
mov
cli
dec
pusha
insb
pop
add
adc
das
out
scas
sahf
sbb
sbb
es
pop
mov
pop
aad
inc
push
mov
hlt
enter
aad
sahf
add
subb
or
or
mov
mov
test
xchg
inc
inc
xchg
xlat
lds
lea
sub
mov
push
pop
jae
lret
sahf
adc
add
out
adc
push
mov
cmp
ror
insl
sti
stos
pop
fisttpl
lods
ret
test
pop
movlps
xor
mov
add
hlt
fwait
jno
and
shrl
mov
sti
mov
inc
jp
lcall
enter
in
sbb
push
xor
ret
and
aas
xchg
inc
jp
lahf
shll
sbb
sub
in
mov
lret
ret
mov
data16
xchg
test
mov
fs
fs
sti
in
es
xchg
and
xor
sbb
push
in
stos
push
dec
stc
subl
loop
cli
xor
sahf
ljmp
xchg
scas
push
or
shll
les
pop
hlt
fadd
mov
cmp
mov
popf
jmp
data16
push
xchg
push
jp
dec
adc
faddl
ret
xor
call
in
adc
cltd
mov
push
clc
xchg
push
frstor
xchg
rorb
int3
imul
imul
cmc
jbe
xor
cmc
jns
fiadds
and
sbb
in
lret
add
inc
lret
pushf
inc
cmp
or
mov
or
and
mov
out
rolb
inc
aaa
mov
cmp
sub
sbb
mov
popf
cmc
lret
sti
dec
out
mov
add
gs
and
aas
cmpb
test
adc
xchg
aas
lret
ret
inc
fcomip
dec
cmc
and
adcl
dec
xchg
and
js
dec
xor
lea
outsb
repz
and
int
sbb
pop
or
push
cmpl
fmul
lock
aad
fiaddl
adc
xlat
xchg
or
repz
int3
add
dec
repnz
xchg
sbb
out
mov
scas
fwait
push
icebp
jb
sbb
pop
pop
mov
clc
aam
push
call
jae
fcomip
jnp
jns
fs
adc
clc
and
iret
pop
sub
call
loop
mov
adc
movsb
push
lea
xor
mov
daa
jb
cmp
les
das
jmp
loopne
into
dec
aad
jl
add
test
int3
inc
and
pusha
std
mov
mov
pushf
mov
xor
std
rorb
ret
xchg
ja
or
push
sub
out
pop
lcall
add
pop
sbb
inc
jl
int
pushf
pop
cmp
inc
inc
in
xchg
inc
mov
fldt
adc
sbb
shrb
aam
cld
shl
sbb
cmp
imul
cmpsb
fstpl
mov
add
arpl
gs
js
dec
fisttps
into
xor
or
mov
rolb
mov
sbb
jp
je
mov
cmp
pop
dec
ja
test
and
aad
add
mov
add
bound
dec
adcl
push
les
cmpsl
xor
mov
cmpsl
mov
int3
aas
inc
dec
pmaxub
jge
ret
adc
push
and
shlb
mov
ret
jmp
mov
add
pusha
dec
imul
push
call
mov
fldt
aam
sub
rolb
sub
loopne
scas
mov
inc
outsl
sbb
test
adc
push
shrl
iret
iret
mov
and
rcll
cmp
aam
jmp
mov
arpl
ficoms
test
jmp
pop
aaa
and
mov
mov
add
push
xchg
adc
inc
or
out
in
aam
repnz
mov
test
pop
xor
fnsave
hlt
inc
lcall
scas
les
pop
pop
add
and
pushf
xor
add
js
fs
or
fisubl
int
dec
les
mov
cld
lds
call
sahf
and
mov
mov
int
loop
dec
inc
pop
jns
xchg
xchg
pop
aaa
sbb
fsubrs
out
aam
push
xchg
repz
out
mov
add
cmc
mov
cmpsl
pop
mov
ljmp
hlt
shlb
in
inc
fdivrs
add
inc
pop
jmp
sbb
xor
xchg
mov
inc
xor
sbb
xchg
xchg
out
xorl
in
test
pop
mov
xor
outsl
xchg
xchg
xchg
out
cmp
popa
xor
repnz
insl
jle
sub
lahf
xor
into
lahf
call
jecxz
inc
addl
loop
mov
andb
and
xor
sti
pop
sub
lret
and
popf
mov
mov
cmp
imul
ss
mov
push
mov
icebp
lea
push
lcall
test
and
and
adc
test
inc
mov
mov
lods
aam
aad
or
push
xchg
arpl
xor
push
xor
pop
mov
xchg
mov
jp
inc
inc
orb
push
popf
js
mov
xchg
movsb
pop
add
sbb
jl
xor
dec
mov
pop
mov
or
mov
ss
enter
jge
aam
test
pop
pop
nop
popa
push
sahf
fistps
shll
shl
jae
sub
inc
mov
sti
roll
jecxz
and
std
or
addr16
das
and
dec
pop
test
adc
xor
pop
ss
pushf
in
mov
mov
ret
xchg
lahf
push
dec
ss
xor
or
clc
movsb
cwtl
cli
test
xchg
ds
mov
rcr
mov
int3
call
in
cwtl
xchg
xchg
scas
xlat
bound
sbb
mov
xor
push
bound
sub
fsts
outsl
addr16
movsl
pop
cmc
pop
push
push
cli
mov
roll
sub
add
repnz
out
lahf
jg
add
rcr
into
mull
imul
lea
pop
lock
mov
sbb
push
sbbb
jo
push
pop
add
jae
or
shlb
jmp
cwtl
sahf
repz
pop
push
xor
shl
shrl
mov
adc
loop
mov
iret
es
mov
and
cmp
subl
js
xchg
popa
std
xchg
mov
dec
push
mull
cmp
movsb
stos
jno
push
lock
pop
sub
sti
test
xchg
sub
and
jle
push
jg
fists
sbb
adc
pop
mov
imul
fldcw
pop
push
les
mov
aam
not
dec
ja
dec
mov
dec
fiadds
in
push
jns
xchg
insb
jae
mov
inc
mov
insb
int
lods
xorb
push
addr16
push
mov
jp
pop
add
cwtl
inc
lcall
aam
cmp
es
pop
ss
cmc
shll
mov
mov
in
push
jbe
sahf
lds
call
xchg
ret
push
sub
mov
jnp
add
push
pop
sbb
ret
popa
stos
push
and
aas
movsb
orb
sub
pop
jge
addr16
lret
or
in
push
loop
fnsave
clc
cmp
pop
test
mov
rcll
pushf
cmpsl
cmp
std
push
lods
dec
ds
jno
or
mov
subl
scas
sbb
cld
in
in
rcll
pop
mov
ljmp
les
mov
adc
push
lock
and
adc
bound
xor
mov
push
and
into
enter
fstp
call
or
pop
or
and
arpl
mov
filds
xor
pushf
jg
inc
cmp
lcall
mov
push
push
sbb
and
cmp
or
outsb
cmpsb
mov
mov
outsb
lock
jg
jnp
dec
sub
pop
and
fsts
adc
cmp
js
jmp
test
ja
sub
sahf
and
sbb
adc
add
inc
imul
cld
sub
ficomps
outsb
add
mov
rcl
clc
adc
andb
into
imul
mov
das
xor
pop
fwait
mov
lds
pushf
adc
mov
push
outsb
jl
sub
mov
pop
insl
and
jno
pop
cli
xchg
jae
int
ret
leave
rcrl
push
popf
inc
js
xchg
int3
or
mov
subb
lret
cwtl
dec
push
out
mov
jb
pop
push
frstor
sbb
ds
in
mov
out
shll
add
xlat
mov
pop
push
jge
push
mov
mov
idiv
cmp
aam
arpl
and
xchg
das
in
insl
cltd
repnz
mov
daa
xlat
xchg
and
in
mov
rolb
xlat
push
jnp
jmp
ja
fs
mov
pop
stos
nop
cmpsb
scas
ljmp
cld
and
mov
mov
addr16
mov
or
lret
pop
pop
mov
dec
sbb
cmc
insl
testl
subb
rcll
test
iret
mov
rcrb
xchg
jo
pushf
mov
push
movsb
pop
cmpb
jb
mov
pop
inc
ss
inc
mov
xchg
sbb
lahf
stos
jl
in
bnd
fmull
jp
mov
add
rcrl
mov
xor
inc
mov
xor
aas
into
enter
fisubl
mov
fidivs
sahf
int3
shr
int
jb
dec
lret
cmp
mov
pusha
je
lds
into
shrl
sahf
ljmp
lret
cld
sub
add
das
adc
push
pop
popf
mov
into
inc
dec
dec
and
aam
cmp
imul
xchg
jns
data16
sbb
fisttpl
es
mov
aam
xor
mov
mov
stc
and
cmp
js
pop
push
adc
fmulp
mov
cmpsl
jne
leave
dec
xor
jecxz
in
or
ss
shlb
les
push
mov
mov
adc
imul
push
dec
push
shlb
or
xchg
mov
fs
sub
stos
mov
dec
mov
jmp
xor
cwtl
insb
sbb
notb
lock
rclb
rol
mov
test
push
sub
cmp
pop
pop
pop
mov
push
outsl
lret
outsb
inc
push
ds
sti
mov
rcr
mov
mov
movsb
cmpsb
dec
in
mov
push
xor
pop
cwtl
push
adc
in
lock
aaa
ror
rcll
fwait
xchg
xor
fisubrl
sbb
push
jl
outsb
clc
dec
jne
aam
sbb
sbb
in
mov
outsb
shl
cwtl
fcoml
mov
mov
sbb
fsubl
inc
out
pop
js
daa
mov
mov
inc
idivb
enter
lahf
sub
loop
xor
scas
mov
lods
pop
hlt
jge
mov
lret
sahf
test
out
pop
scas
loop
mov
xchg
cltd
lahf
pop
push
xchg
push
es
sub
test
ja
mov
dec
std
push
rolb
pop
outsl
xor
sub
out
mov
mov
fidivrl
scas
leave
sahf
mov
dec
mov
mov
and
test
mov
gs
or
and
movsl
sub
pop
cld
jl
jle
in
pop
lcall
int
inc
adc
dec
popf
loopne
dec
xchg
cmp
cwtl
adc
jge
pop
push
inc
fwait
loop
pushf
jae
out
mov
lret
mov
cmp
mov
pop
push
mov
test
roll
xchg
jmp
sub
rclb
aaa
out
aam
daa
iret
lea
out
mov
iret
cs
and
inc
mov
inc
xchg
outsl
mov
sti
pop
fimuls
imul
xchg
popa
xor
mov
inc
jp
or
mov
mov
sbb
or
cmc
mov
dec
and
jne
xor
sub
popl
mov
sub
in
pop
orb
out
out
mov
in
pop
adc
data16
call
xor
and
mov
mov
jg
in
inc
gs
mov
fimuls
pushf
push
mov
stos
mov
lea
int
push
xchg
inc
fnstsw
repnz
fimuls
mov
aaa
mov
xor
fidivrs
push
fwait
nop
push
ret
lods
sub
gs
or
imul
sbb
xchg
cmp
add
dec
lcall
lods
xchg
push
iret
or
dec
push
cld
rcrb
fcom
xchg
push
cmp
mov
sbb
add
push
xor
mov
xchg
mov
xor
xchg
nop
in
pop
hlt
mov
push
jp
dec
adc
bound
sarb
and
ljmp
sbb
mov
fists
out
rcll
pop
pop
pusha
pusha
mov
pop
dec
ja
addb
jp
sub
or
ljmp
xor
push
cld
jle
outsb
cmp
jmp
and
push
push
pop
sbb
mov
aam
ljmp
jns
sub
xchg
push
roll
idiv
xchg
cmp
and
mov
adc
popf
movl
and
push
xchg
cmpsb
lea
add
mov
mov
mov
aaa
cmp
adc
iret
aas
sahf
call
fdivrl
jo
sbb
loop
xor
mov
testl
in
testl
or
lcall
add
enter
lahf
dec
xor
fbstp
cld
lcall
mov
mov
xchg
daa
mov
push
xor
test
sahf
add
lahf
test
adc
pop
stc
iret
jl
push
fdivl
lds
loope
fstpt
cltd
cli
jne
and
pop
sub
mov
shll
cmp
sbb
add
mov
pslld
push
dec
push
pop
pop
testl
jle
dec
xor
mov
sahf
mov
iret
pop
mov
popf
shrb
sti
movsb
push
adc
sbb
xchg
sub
rol
dec
push
rcl
jmp
and
das
popa
adc
rorb
mov
sbb
cmp
push
iret
out
dec
adc
jle
mov
fisubs
adc
xor
scas
push
dec
and
ret
popf
adc
mov
pop
fcoml
popf
xor
int3
xchg
stc
jl
test
pop
lods
mov
jae
mov
dec
sub
push
jae
stos
pusha
push
aad
and
into
inc
xor
fisubrs
mov
jle
cmp
pop
xchg
mov
push
jns
jns
xchg
rorl
and
sub
out
adc
lods
roll
loop
add
add
lcall
mov
jecxz
sbb
push
lods
sub
fisttpll
xor
ret
pop
dec
dec
adc
addl
andl
add
cwtl
lret
jbe
shlb
lret
fmuls
insl
ss
mov
dec
insb
call
mov
xor
fimuls
cli
bound
cmpsb
hlt
call
lock
mov
mov
jb
and
push
jmp
xchg
or
push
sub
outsl
nop
ret
inc
mov
ja
test
ret
popf
int
out
xchg
pop
notl
sub
in
ss
lea
notl
subl
xor
xorl
ret
sbb
sbb
test
fiaddl
shr
dec
test
faddp
and
mov
lods
scas
and
xor
shl
and
or
fwait
mov
adc
push
addr16
adc
imul
and
lea
out
ja
jmp
ret
addl
ds
sub
stos
es
iret
in
xchg
jnp
or
cmpsl
pop
je
andb
and
jns
movsl
les
leave
mov
adc
xor
xchg
in
ds
xor
jmp
push
bnd
imul
nop
inc
mov
fiaddl
pop
xor
jmp
ret
jp
pushf
pop
mov
movsb
stc
stc
mov
sub
jge
xchg
sbb
xchg
pop
js
insl
mov
cmp
or
in
fistl
xchg
mov
jbe
inc
jae
sub
insl
or
clc
fwait
daa
jge
mov
aas
inc
stos
and
pop
jecxz
pop
sbb
cmc
pushf
mov
add
in
cmp
dec
outsl
mov
bound
inc
je
test
lock
push
xchg
rcll
into
sbb
xchg
les
sarb
mov
gs
cs
sub
sub
xchg
mov
pop
aad
xor
inc
mov
mov
out
push
dec
ret
adc
cmc
dec
jne
daa
pmulhw
add
push
sbb
mov
or
int3
cwtl
aam
or
jae
mov
iret
jns
psadbw
push
arpl
xchg
pusha
pop
lods
push
jl
xchg
test
pop
in
mov
or
call
adc
nop
int3
cmc
notl
ss
pop
mov
jmp
pop
aas
or
stos
xchg
jo
cmpsb
cmp
xor
mov
dec
sbb
pop
and
inc
fsubs
aaa
dec
pop
arpl
inc
pop
lock
aaa
jecxz
cmpl
pushf
arpl
ljmp
lcall
shlb
sahf
and
movsl
jge
cli
je
out
sub
mov
cli
sbb
cli
pop
jbe
pop
lahf
je
loope
cmpsb
push
pop
jne
sbb
out
leave
dec
mov
cltd
test
aaa
div
jge
cwtl
xchg
je
sub
in
call
mov
or
ljmp
mov
imul
movsl
pop
and
push
pop
iret
js
jecxz
orb
cmc
sbb
add
sti
xor
aad
cwtl
sbb
test
ret
outsb
ret
mov
sahf
fs
cltd
xlat
inc
adcb
out
push
rcl
in
push
enter
mov
outsl
sbb
mov
cmpsb
add
inc
adc
pop
stc
mov
cmp
rolb
frstor
adcb
cld
push
sub
out
sbb
popf
and
ret
loop
cmp
jg
mov
adc
outsl
cmp
or
mov
lods
loopne
mov
orb
fildll
pop
and
xor
cli
xor
mov
jl
mov
icebp
mov
adc
mov
mov
fistpll
cwtl
xor
sbb
push
arpl
loop
les
in
mov
std
lahf
lock
idivb
or
or
fsubrs
dec
jl
push
sub
icebp
lahf
sub
int3
aam
mov
iret
daa
push
xchg
jae
aaa
add
das
lahf
in
cmp
mov
imul
neg
mov
loop
ja
fsubrs
xor
orb
movsb
cmpsb
jecxz
jo
pop
jo
je
mov
mov
std
out
dec
ljmp
mov
aaa
xor
and
mov
xchg
mov
or
and
imul
test
xchg
push
fisubl
pushf
and
sti
pop
lret
andl
ret
popf
jmp
dec
adc
test
das
scas
xor
add
push
fxch
pop
fcompl
xchg
lret
test
dec
lock
cmp
pop
adc
and
subb
cmp
xchg
xchg
xchg
dec
or
mov
addl
xor
gs
imul
mov
jb
icebp
pop
sub
in
pop
pop
jle
stos
xor
mov
pushf
push
pop
mov
hlt
sbb
jo
mov
mov
aaa
cld
sar
jg
or
outsl
lret
mov
mov
andb
push
pop
fcmovb
mov
cltd
or
orl
or
pop
add
add
rol
movups
iret
sbb
mov
cmp
jo
push
mov
lods
pop
pop
addr16
xor
cmp
fistpll
sbbb
xchg
test
inc
fcomps
jge
loopne
imul
jg
cmpb
aas
mov
sti
addb
and
jnp
mov
jnp
xchg
and
fsubs
push
jb
shlb
and
adc
cmpsl
xchg
lds
fcmovnb
push
push
dec
lahf
lods
inc
jecxz
sbb
xlat
repnz
dec
les
jns
fsubrl
dec
add
push
fnstcw
xchg
jmp
mov
mov
push
inc
xor
mul
mov
sbb
addr16
adc
or
cmpsb
ja
jmp
aam
or
mov
sub
mov
cli
inc
inc
push
dec
mov
fucomip
sub
out
dec
lods
mov
addr16
popf
add
adc
sbb
sbb
xor
dec
pop
jo
addl
add
sahf
test
hlt
loope
jecxz
mov
add
mov
test
mov
xor
xor
mov
je
push
aas
xchg
inc
popa
in
rolb
test
ret
and
add
shlb
icebp
loope
movsl
hlt
inc
popf
mov
adc
lret
sbb
mov
jmp
pop
xchg
testb
shl
and
jbe
lcall
inc
mov
scas
cmp
xor
sub
out
jo
mov
insb
mov
inc
push
push
and
push
fisubs
aas
test
scas
jbe
mov
inc
mov
lahf
pushf
adc
push
sbb
lret
add
nop
cmpl
mov
pop
fwait
and
addl
sbb
aam
inc
jmp
cmpsl
rclb
popa
insl
xchg
xlat
sbb
es
aam
push
stos
int
and
dec
std
leave
add
loopne
loope
dec
imul
sub
lods
push
inc
xor
sbb
jp
cmp
inc
sbb
arpl
mov
sbb
lret
xchg
out
add
mov
nop
lea
test
out
ds
cmp
jo
rorl
aaa
cmp
adc
or
stos
cltd
xor
push
sbb
mov
scas
in
or
call
cmc
push
or
jno
loopne
cmpsb
mov
adc
adc
pusha
xor
inc
iret
loope
loope
mov
jo
xchg
aas
inc
sbb
xchg
dec
mov
scas
stos
mov
and
sbb
pusha
xor
or
sbb
jbe
push
cltd
mov
or
add
sub
aas
and
add
dec
mov
outsl
enter
sbb
test
ljmp
and
xchg
addr16
cmc
lahf
fcoml
or
rclb
cmp
ret
jmp
xchg
lret
add
pop
inc
call
add
mov
cmp
mov
mov
cld
scas
inc
mov
adc
inc
ret
inc
cltd
inc
lahf
mov
outsl
movsl
jge
lcall
inc
or
daa
dec
mov
xor
lahf
and
pop
xchg
clc
fldcw
js
scas
leave
mov
or
addb
jns
xlat
xchg
ret
cmpsl
mov
inc
call
pop
gs
shr
mov
cmp
cs
sbb
add
pop
negb
dec
and
xor
inc
scas
jns
jb
jl
mov
mov
pop
cmpsb
xchg
adc
movsb
es
xchg
dec
test
and
and
pusha
adc
fisubrl
in
popf
inc
push
mov
xor
cmpsb
pop
repnz
orb
inc
inc
jmp
pop
shll
mov
data16
add
outsb
jne
adc
out
cmp
cmpsb
mov
cs
test
add
cld
sahf
push
jb
lods
lock
push
jae
xor
arpl
aaa
and
dec
xchg
repz
pop
daa
je
aaa
test
rclb
pop
test
rcl
and
icebp
or
and
ds
shrb
stc
cmp
cmpsl
insb
pusha
cmp
mov
push
sub
std
pop
jmp
cli
jb
sahf
scas
aas
pop
and
sub
ljmp
dec
and
lcall
repz
repz
in
mov
fldt
mov
aam
rdpmc
xor
inc
inc
dec
shll
push
js
ljmp
push
pop
mov
out
add
std
xchg
push
push
repnz
push
xchg
sub
cmp
leave
stc
clc
mov
xchg
ja
loop
ror
testb
add
imul
andb
sbb
cmc
lahf
and
inc
aaa
lods
cmp
sbb
mov
sbb
push
shrl
add
insl
cwtl
aaa
mov
inc
push
mov
mov
mov
orl
stc
xabort
xlat
ja
stc
mov
or
scas
ds
mov
or
or
rcll
popf
dec
scas
js
dec
rclb
jne
imul
mov
insb
clts
in
xchg
mov
xchg
pop
in
sub
mov
sbb
add
mov
or
fcomi
lcall
sbb
aaa
in
pop
mov
push
cmp
pop
dec
sbb
test
outsl
ja
shll
cmp
mov
js
pop
xchg
xor
je
scas
das
adc
add
mov
fdivrl
rorl
outsb
rcrb
mov
fcoms
pop
add
insl
cltd
fiadds
push
cmp
mov
jb
push
std
pushf
push
cmp
push
add
jo
pop
fs
dec
rcr
leave
ret
cs
dec
jecxz
jno
mov
cmp
test
ds
sub
in
fistpll
icebp
and
mov
div
lret
mov
in
clc
ret
in
icebp
xor
xchg
testb
jnp
jp
cmp
icebp
xor
insl
mov
mov
sbb
or
mov
int
or
loopne
sub
ljmp
stos
aas
push
inc
std
loope
sbb
xchg
xchg
mov
leave
insl
sbb
mov
xor
sbb
jo
fildl
iret
frstor
imul
pop
cmp
lahf
mov
shlb
out
daa
cmp
mov
or
or
lods
mov
shll
or
cmpsb
arpl
ljmp
sbb
xchg
insb
lods
mov
bound
or
ljmp
out
sub
test
cmp
test
jmp
sub
inc
pop
les
sub
push
jbe
mov
clc
fwait
sub
popa
sahf
daa
cs
jle
push
pop
ss
xchg
jmp
das
arpl
xor
cmpsl
repz
mov
jno
jl
dec
fists
mov
test
sbbl
jle
xor
iret
pusha
iret
inc
outsb
inc
xor
stos
xlat
xor
cmpsb
push
xor
movl
inc
scas
dec
mov
fcmovnb
out
js
data16
cmc
add
rorb
stc
nop
pusha
fwait
ds
js
mov
jg
lahf
lret
stc
cld
xor
cwtl
adc
loop
dec
push
xlat
push
in
inc
llwpcb
and
cmp
mov
test
dec
outsl
inc
hlt
mov
mov
xorb
sbb
push
scas
cltd
fcoml
or
movsb
rcll
fimuls
xor
xchg
mov
dec
fbstp
test
jge
loope
inc
arpl
out
mov
lahf
mov
sub
pop
inc
pushl
out
mov
push
push
pop
mov
push
leave
pop
test
sub
and
adc
or
out
pop
je
pop
imul
cmpl
out
bound
sbb
mov
sahf
ds
sarb
sarb
push
adc
cmpsl
lods
adc
cmp
cmp
pop
repz
jl
andb
lcall
iret
jae
mov
sahf
pop
push
push
mov
push
lods
stos
sub
add
cmp
add
loopne
inc
in
sub
mov
and
adc
stos
cmp
mov
scas
or
jno
pop
aam
iret
dec
ss
js
mov
cmp
pop
push
jmp
movsb
andl
push
dec
inc
neg
in
scas
jmp
sbb
xor
inc
fcom
nop
aas
negb
imul
aas
roll
add
inc
scas
idivb
pop
inc
addl
data16
mov
inc
rcrl
imull
push
inc
adc
scas
add
mov
movsb
jnp
mulb
gs
sub
push
or
jmp
mov
stos
int
shl
aam
arpl
pop
jo
inc
jg
sarb
jmp
push
loope
cmpsb
cmp
xchg
adc
cmpsl
dec
fisubl
adc
cmp
cmpsb
aas
xor
sub
pop
xchg
sti
jo
dec
jle
cli
pop
dec
inc
out
loop
sahf
sbb
inc
pop
mov
push
lret
gs
pushf
jmp
mov
mov
push
ss
inc
pop
xchg
cs
dec
or
jb
dec
sbb
clc
add
cmpsb
dec
icebp
adc
push
jg
inc
arpl
xor
adcl
push
add
int
push
mov
or
mov
push
and
push
dec
mov
iret
cmpsb
test
xchg
jnp
dec
xchg
dec
fdivl
or
or
push
pop
xor
in
or
es
xor
adc
hlt
pop
mov
das
sub
xor
xchg
loop
call
cmp
hlt
testb
xor
dec
lret
out
cmpsb
pop
sub
clc
push
inc
push
aam
cs
xor
sahf
nop
and
mov
shlb
push
mov
push
xchg
push
push
jmp
adc
out
test
movsb
inc
inc
push
in
jno
arpl
lods
or
jmp
neg
adc
loope
fnstenv
imul
mov
xchg
dec
out
xchg
not
push
xchg
or
pop
leave
icebp
lods
shr
mov
add
push
mov
js
fcom
inc
mov
stc
das
mov
lahf
or
cs
int
in
addr16
rclb
fwait
mov
xchg
in
cli
jb
mov
lods
and
call
je
add
dec
push
add
mov
test
mov
pop
add
pminub
call
or
ss
int3
pop
sbb
or
dec
ja
inc
popa
push
fcompl
sti
push
inc
inc
mov
fcomip
fwait
xor
repnz
mov
jo
repnz
cmp
cld
mov
push
sub
sbb
das
cmp
cwtl
jae
int
psubsw
in
test
imul
movsl
push
mov
sbbl
sub
add
cmp
imull
xor
xchg
and
lahf
pop
xor
mov
cli
jle
push
mov
ljmp
je
aaa
call
cmc
popf
or
push
and
pop
sarb
dec
sbb
jmp
inc
or
rcrl
add
push
lods
mulb
arpl
sbb
fcoml
push
pop
push
push
lds
gs
nop
adc
cmc
lods
dec
inc
movsl
cmpsl
adc
xor
aaa
dec
int3
push
push
nop
dec
pop
jg
pop
push
push
cmp
push
pop
or
stos
add
xor
sub
addps
test
add
xchg
mov
mov
dec
sub
sub
or
sarl
pushf
pop
std
or
and
call
cmpsl
rol
lods
jp
ja
mov
test
lret
stos
fldcw
ret
call
dec
imul
arpl
pop
pusha
jmp
adc
cmp
lock
pusha
xor
push
in
dec
mov
xor
out
cli
xchg
std
loope
mov
sbb
pop
dec
daa
jl
sub
cli
cmpsb
call
ficompl
ja
or
jo
popf
movsb
ja
sbb
jge
jb
and
mov
les
daa
outsb
push
mov
movsb
fmul
or
sbb
cmp
or
sbb
lea
lock
mov
cld
imul
push
inc
stos
dec
push
xchg
mov
imul
out
data16
xor
cmc
xchg
mov
cmp
in
jl
sarb
dec
outsl
ffree
pop
lods
mov
mov
inc
sub
xchg
lcall
xor
int3
cmc
jb
popf
and
fisubs
nop
mov
cltd
mov
ret
jae
and
ss
adcl
insl
lret
or
ljmp
mov
jecxz
aad
pop
orl
cmpb
pop
mov
ror
rolb
sub
jb
aas
cmpsl
jb
aam
sti
popf
or
sub
enter
lods
call
fisttpll
out
ja
mov
loope
mov
inc
push
leave
imul
ficoml
jno
push
cld
xlat
mov
inc
push
jp
mov
repz
mov
mov
in
pushf
ljmp
addr16
fsubr
movsb
cltd
repz
lahf
inc
mov
pop
xor
xchg
push
test
adc
and
lock
sti
ljmp
das
mov
mov
pop
or
add
hlt
cmp
mov
mov
xor
add
icebp
xchg
mov
mov
call
sub
aad
or
adc
je
adc
sahf
stc
ljmp
and
jecxz
xchg
sbb
add
push
add
push
jp
orl
mov
fiaddl
mov
cld
enter
dec
stc
sarl
test
rcll
inc
inc
mov
sub
inc
jo
xchg
movsb
fidivl
int
push
push
push
out
insb
and
xchg
outsb
fldl
aaa
stos
adc
scas
addr16
aas
sbbb
clc
je
mov
rorb
push
mov
call
xchg
mov
lods
outsl
int3
jmp
mov
sbb
lods
dec
xor
jle
add
jb
rcr
negl
inc
inc
fucomi
sub
popa
push
stc
stos
aad
les
idivb
pop
inc
dec
xor
push
lret
arpl
fdivrs
jle
pop
jbe
rcrb
dec
xor
dec
push
cmp
jo
dec
sub
fidivs
std
int
je
shl
mov
iret
push
push
pop
ret
sub
jmp
jge
mov
lret
inc
xchg
int3
pop
mov
jbe
je
iret
and
mov
fwait
lods
nop
adc
aaa
dec
scas
xchg
outsb
or
arpl
and
sub
cmpsl
loopne
divb
dec
push
xchg
inc
daa
and
sti
or
cwtl
cmp
imul
nop
pop
subw
ficoms
movsl
jmp
mov
mov
pop
push
bound
movsl
adc
jle
mov
and
jle
fldt
out
test
xchg
in
xor
shl
jae
xchg
push
je
loope
pop
add
push
lods
daa
adc
jb
mov
xchg
mov
insb
iret
cs
add
and
xor
mov
pop
sub
mov
xchg
xchg
pop
ffreep
hlt
dec
inc
imul
jo
add
pop
mov
mov
mov
inc
scas
dec
and
imul
sbb
xchg
and
push
aam
insl
clc
lock
fldt
inc
and
xorl
in
iret
test
cmp
andb
dec
add
int
pop
adcl
cltd
sbb
std
pop
lret
or
movsl
mov
cwtl
push
mov
xor
call
inc
rorl
mov
ss
jg
lret
dec
add
imull
pop
xchg
in
cld
sbb
or
mov
shll
mov
rorl
sub
pop
nop
mov
scas
je
adc
pusha
fcmovu
push
sbb
pop
movsl
aaa
fnstenv
jge
lea
clc
jmp
cwtl
scas
js
clc
mov
sub
mov
xor
cmp
ds
lret
scas
xor
or
jge
jo
test
daa
xchg
xor
mov
outsl
lock
out
pop
rolb
add
scas
cmp
xchg
imul
mov
imul
jmp
fidivrs
fidivl
sti
into
or
mov
adc
xlat
in
les
dec
loope
mov
insl
add
insb
cli
jbe
shrl
fidivs
inc
jp
jne
cmp
mul
sbb
rcll
mov
cs
shll
sti
or
imulb
pop
push
and
fcmovnbe
xor
fs
and
mov
push
cs
push
jmp
cwtl
or
aaa
sub
pop
enter
push
add
sbb
js
sub
in
or
fs
sub
jo
ret
jmp
adc
sub
inc
sub
imul
xor
data16
test
pop
or
pop
jecxz
shl
adc
lcall
cld
pop
push
data16
mov
and
in
cli
out
adc
or
mov
xor
xor
je
imul
fisubl
cli
stos
push
imul
pop
hlt
jge
jp
lret
andb
mov
jae
and
mov
adc
dec
mov
scas
push
js
aaa
add
jle
mov
dec
nop
sbb
movsb
movsl
ret
or
pop
jne
xchg
sub
jmp
out
es
mov
mov
dec
xchg
jmp
xchg
inc
add
push
ret
push
fidivrl
cmp
aam
test
add
add
inc
adc
aad
nop
xchg
mov
popa
lcall
fmuls
outsl
gs
jl
inc
push
test
or
nop
stos
insl
cmp
pop
inc
cs
mov
xchg
es
add
xor
and
outsl
sub
int3
aaa
pop
jbe
or
out
lret
jl
fildl
clc
xchg
loop
stos
fdivs
add
adc
lea
xor
inc
pusha
repz
xorl
cmc
mov
and
in
cmc
ficomps
out
je
loope
lahf
inc
push
pop
jno
stos
adc
pop
insb
mov
out
and
adc
lret
in
cmp
pushf
push
daa
cli
xor
jae
ljmp
adc
lock
mov
mov
lcall
cmpsl
les
cld
test
setg
imul
stos
jge
jns
sub
inc
aad
xchg
call
xchg
sbb
fldenv
jle
shrb
mov
jb
or
mov
stc
adc
icebp
cmp
mov
hlt
push
sbb
or
mov
or
addr16
dec
int3
pop
ds
push
ljmp
sahf
cwtl
push
xchg
mov
and
imul
jbe
lret
sub
pop
popa
sti
add
pusha
and
inc
adc
fldenv
fisubl
sub
push
xchg
adc
stos
dec
fidivrl
jp
int3
pop
push
mov
mov
sti
add
divl
repnz
dec
fisubs
mov
adc
in
xchg
mov
cmp
mov
ljmp
ret
sti
mov
lea
scas
sbb
jb
data16
mov
ret
or
clc
in
rclb
cld
stos
push
cmpsb
mov
mov
int3
stc
mov
jl
add
subl
in
xor
and
jmp
sahf
mov
daa
adc
mov
cwtl
bound
jnp
and
js
push
pop
xchg
xor
pushf
sub
pop
stc
jae
fnstsw
cli
fists
inc
mov
or
scas
dec
bound
orl
mov
testb
icebp
add
xchg
pop
cmp
or
or
adc
cmpsb
int3
rclb
int
xchg
orb
pop
mov
jmp
pop
adc
dec
mov
jo
fisubrs
or
icebp
jae
push
lods
xor
ljmp
inc
xchg
shll
mov
mov
mov
inc
adc
fisubrs
or
xor
xlat
call
xorb
mov
jo
shrb
adc
imul
pop
movsb
sbb
push
mov
mov
mov
lahf
dec
push
inc
shll
scas
mov
jnp
pusha
cmp
push
mov
testl
pusha
mov
jmp
mov
aaa
jno
add
add
shrl
sub
iret
mov
inc
popf
sahf
shl
or
mov
test
mov
add
jno
int
clc
jns
mov
jne
sub
insb
mov
lahf
mov
int
lcall
sub
shrb
push
cmp
and
jg
hlt
addr16
movsb
pop
add
sbb
adc
lret
das
jl
rcll
adc
inc
dec
cltd
imul
aaa
into
pushf
sti
movsl
sbb
mov
push
xchg
mov
pop
fstpt
ljmp
fidivrl
xchg
xor
shrl
mov
daa
adc
mov
stos
int3
xchg
inc
pop
ljmp
xchg
sarl
addr16
push
mov
mov
jb
sahf
mov
movsb
dec
mov
sbb
lahf
mov
jle
mov
sbb
xchg
or
aad
push
mov
jl
xchg
loopne
stos
hlt
imul
push
insl
stc
cmp
sbb
insb
ret
sub
pop
lea
ret
jnp
push
cs
pop
push
push
in
dec
test
inc
ljmp
mov
xchg
dec
mov
pop
insb
std
hlt
mov
popf
stos
cmp
jo
lahf
imul
loopne
ret
mov
in
jle
in
mov
rolb
and
orb
xor
jle
ret
push
adc
stos
popa
dec
pop
adc
out
lcall
sbb
push
scas
dec
sub
sbb
add
push
xor
test
xor
pop
aad
add
insb
dec
in
inc
mov
gs
pop
pushf
adc
mov
pop
cmp
clc
add
js
int3
lds
dec
cs
into
push
stos
add
sub
test
and
pushl
fdiv
adc
xchg
and
sub
pushf
loop
mov
push
lea
int3
int3
ret
cwtl
pop
sbb
mov
and
sbb
cwtl
in
mov
or
sbb
cltd
out
dec
les
or
xchg
and
sub
push
push
addr16
rcrb
ret
pop
xchg
adc
jbe
sub
add
bound
add
xor
mov
pop
test
xchg
mov
inc
add
pop
fs
pop
add
shr
inc
mov
lcall
cs
loop
nop
dec
xchg
sbb
push
pop
xchg
cmp
and
scas
into
xor
jge
ljmp
data16
popa
mov
push
xchg
movsl
cmp
pop
push
push
mov
xchg
mov
jno
lods
push
sbb
test
jne
push
leave
jp
lods
add
scas
cmpsl
aad
push
push
dec
fwait
or
idiv
lret
into
fs
mov
xor
push
xlat
mov
testb
addr16
aas
dec
push
cmpsl
outsl
inc
mov
or
enter
adc
nop
std
xchg
jbe
ljmp
push
adc
fstps
add
aad
jle
sbb
xchg
jb
repnz
pop
in
push
loop
push
add
pop
jb
aad
xchg
cmpsb
sub
and
pop
or
mov
cmpsl
and
fsub
jp
ret
cmp
mov
cmpsl
lea
xor
xor
fisubrl
stc
mov
mov
gs
test
cltd
lods
aam
fsubp
stc
std
in
pop
mov
imul
mov
into
pop
test
test
or
out
ret
xor
jae
dec
mov
in
lods
add
add
into
js
mov
jb
shrb
outsl
cwtl
je
rcrl
ret
sahf
jmp
mov
and
mov
and
int3
pop
fcompl
fdivs
mov
cs
into
test
sub
jns
pop
mov
popf
mov
fimull
cmp
hlt
ljmp
inc
in
mov
lahf
dec
lods
jns
lahf
xchg
or
out
pushf
lret
roll
lahf
fstpl
pop
add
fisttpl
xchg
insb
loop
xor
les
pop
cwtl
cli
push
xchg
dec
shr
mov
into
daa
jmp
insl
xchg
loop
inc
daa
into
popa
lods
sbb
lret
fwait
add
popf
in
xchg
lds
jle
add
or
ret
xor
ljmp
cmp
outsb
int
dec
lock
sub
cmpsl
cmp
imul
mov
cli
std
out
xchg
repnz
sub
stos
pop
push
mov
shrl
mov
pop
mov
lretw
lret
push
mov
and
scas
lret
pushf
add
mov
push
insl
fisubs
imul
xchg
push
rcrb
idivb
into
adc
jb
fisubs
and
fmulp
cmpsl
or
jno
sahf
lahf
pop
fninit
hlt
xor
adc
fwait
push
sbb
mov
xchg
iret
mov
outsl
push
in
out
int3
xor
or
pop
and
mov
leave
test
daa
xchg
dec
dec
pop
push
mov
lds
xor
mov
lds
jns
test
jb
xor
pusha
je
cltd
jmp
add
ljmp
push
mov
stc
faddl
dec
xchg
sahf
mov
bound
inc
cs
gs
cmp
imul
pop
push
outsb
gs
sub
xchg
mov
repnz
subl
add
popa
mov
inc
cmp
mov
and
inc
lea
js
and
mov
sbb
loope
and
inc
lods
orb
andb
sub
jae
gs
cld
cmp
mov
dec
rorb
movsl
jmp
insl
aaa
aad
jae
ljmp
mov
clc
mov
cmpsb
in
sbb
es
adc
and
ljmp
add
jno
std
std
sti
pop
rcll
push
sbb
test
cmp
pop
cs
dec
sti
xor
and
lea
icebp
cmp
push
lret
mov
jmp
clc
or
idivb
pop
into
mov
mov
mov
xchg
jae
shrl
and
cmp
xchg
sbb
dec
aaa
test
mov
mov
cmp
lret
mov
jns
outsb
in
cmp
fwait
add
std
pushf
pop
call
test
or
xchg
lret
adc
inc
xchg
mov
cmp
loopne
pop
xor
dec
inc
repnz
xchg
movsl
mov
popa
jg
xor
pop
cmpsl
lds
jbe
enter
cld
loopne
dec
jno
cltd
es
lods
mov
adc
mov
out
pusha
mov
jg
loope
pop
lret
insl
sti
enter
mov
ret
popf
or
or
in
add
cwtl
adc
push
stc
sti
testb
addr16
lods
shrl
inc
adc
jmp
pop
lcall
mov
imul
bound
ret
cmpb
loop
cmpsl
lahf
into
lret
fwait
xor
fs
loope
push
xor
sub
cmp
addr16
jg
nop
mov
ja
ss
jge
jbe
idivb
adc
sub
shll
cmp
jmp
jp
mov
fmul
dec
add
push
fsts
adc
out
jmp
out
push
leave
in
and
jl
jne
outsb
or
pusha
jmp
sub
sub
mov
addl
js
jnp
jns
mov
loop
pop
pop
rolb
aas
ficomps
sub
cmp
fstps
pop
fstl
in
gs
pop
jp
push
mov
inc
adc
sub
icebp
push
arpl
jbe
in
sub
sub
fldcw
push
mov
cmp
adc
sbb
add
mov
movsb
mov
sub
cmp
cmc
xor
dec
jle
ljmp
enter
loopne
popa
fistps
mov
cmpsl
and
push
rcr
push
mov
dec
mov
and
in
fwait
sbb
in
aam
mov
jecxz
sub
daa
xchg
fsubr
addl
cs
shll
stos
daa
mov
clc
inc
repz
in
mov
icebp
test
cld
popaw
xor
dec
and
loopne
cmc
jl
xor
in
sbb
sti
fmulp
stc
mov
daa
or
sub
test
rclb
xchg
int3
mov
ljmp
pop
scas
xchg
pushl
sub
push
call
fisttps
fimull
int3
push
mov
insb
jb
fisubrs
outsb
nop
sub
cmp
and
sbb
xchg
xor
loop
arpl
dec
xor
inc
cld
insb
orb
dec
adc
data16
adc
in
out
dec
cltd
and
adc
xchg
popf
sarl
cli
imul
shlb
popf
and
pop
jns
and
test
dec
aad
movsl
and
pop
fdivl
or
shrl
and
mov
cmp
leave
popf
pop
push
adc
mov
dec
hlt
xor
leave
repz
xor
sbb
mov
mov
je
mov
dec
ret
cmc
shlw
xor
in
arpl
clc
dec
push
sub
movsb
xor
test
call
arpl
jp
push
push
fisubs
js
push
add
inc
lea
js
sbb
adc
test
sbb
ljmp
fwait
cs
dec
add
jne
pop
fbstp
sub
ss
xor
lock
ljmp
jbe
ljmp
sub
xor
popf
into
js
stos
xchg
xor
sahf
dec
btc
adc
xchg
mov
addr16
mov
pop
cmp
ja
jp
rcl
mov
bound
popa
xchg
outsb
fcoms
pop
adc
jbe
mov
dec
iret
xchg
popf
pop
add
or
js
xor
jne
movsl
iret
jnp
arpl
adc
ds
push
fcomi
dec
sbb
push
pop
out
xchg
xor
jp
push
movsl
inc
into
andl
test
cmpl
dec
cmp
mov
ds
sub
fildll
and
sbb
cmp
arpl
movsb
sahf
or
cmpsl
and
xchg
testb
sbb
in
cmp
jp
movsl
push
or
pop
mov
lods
dec
jns
in
stc
gs
mov
lds
mov
jg
lret
mov
dec
xchg
mov
jg
add
cmpsl
ja
decb
and
lds
dec
mov
imul
sub
or
xchg
inc
rorb
rolb
mull
fstpl
dec
push
mov
std
mov
xchg
rcrb
xor
fisttps
xchg
je
adc
mov
jb
js
popa
xor
adc
sbb
xchg
shrl
xlat
xchg
aam
outsb
mov
sbb
ret
scas
adc
je
xchg
dec
inc
xor
sbb
hlt
push
jp
adcl
enter
or
sub
lods
pushf
inc
sub
lea
jnp
and
inc
xor
mov
xchg
or
lret
add
inc
sbb
dec
insl
jo
push
push
push
or
add
repz
pop
dec
push
scas
dec
adc
pop
das
mov
xlat
inc
xchg
cmp
orl
pop
call
out
or
cmpsl
call
andl
mov
mov
mov
cld
jns
es
jge
sbb
outsl
rcl
cld
push
not
pop
xor
jge
pushf
dec
aad
add
imul
xchg
adc
ret
and
sub
add
sbb
cmpsl
cmp
add
inc
dec
push
test
pop
test
mov
ljmp
mov
or
je
repz
mov
negb
xlat
inc
test
insl
mov
mov
bound
fcmove
mov
mov
cmp
mov
call
mov
xchg
lds
fsubrs
aaa
add
xchg
ds
in
dec
add
add
add
out
pop
sub
add
out
popf
or
xchg
in
lods
sub
jp
in
test
aaa
int
imul
data16
jnp
sbb
insb
mov
inc
clc
subb
ss
repnz
das
dec
mov
add
mov
into
out
test
sbb
sti
jae
add
xor
push
sub
add
xchg
call
rol
fwait
xchg
push
sar
push
data16
or
out
pop
popa
sbb
jne
and
dec
inc
sti
fs
pushf
mov
iret
mov
mov
pop
jno
testb
mov
xor
xchg
xchg
in
push
stos
pusha
lcall
inc
iret
sbb
fisttps
loop
xor
xchg
aaa
adc
sub
dec
lea
add
cmp
icebp
sbb
ficoms
adc
sub
icebp
push
addr16
mov
scas
arpl
out
lret
sub
add
add
das
ret
or
arpl
or
push
sti
mov
mov
mov
mov
clc
pop
fs
mov
dec
push
mov
inc
fnstcw
in
out
xor
out
mov
pop
xor
pop
loopne
outsl
xchg
jb
les
dec
jmp
scas
mov
in
sub
gs
cli
and
fcmovu
add
loopne
add
out
mov
xor
cld
std
and
xor
out
mov
mov
xor
leave
fdiv
inc
iret
adc
cmpsl
adc
mov
test
data16
rorl
popa
fmul
jmp
popf
sahf
and
jb
inc
orb
sbb
inc
pop
jecxz
loop
dec
mov
fadd
cmpsb
mov
mov
pop
and
mov
inc
das
cmp
inc
push
cld
adc
dec
test
out
push
sbb
daa
call
hlt
push
fucomi
movsl
add
or
lds
inc
pop
mov
mov
mov
and
lret
insb
xchg
iret
push
fldcw
shlb
pop
das
xchg
fidivrl
rol
lahf
mov
scas
sub
push
call
pusha
pop
add
les
fwait
xor
cli
sti
xchg
dec
scas
data16
shrl
insl
fdivrl
xchg
sbbl
and
cmp
mov
jge
adc
xchg
ljmp
jbe
mov
stos
cmpsl
repnz
xorl
stc
loopne
inc
scas
aas
dec
ror
daa
sub
add
lahf
mov
cmp
subl
push
mov
imul
push
pop
and
insb
pop
outsl
test
je
add
adcl
aaa
add
stos
mov
sub
pop
aam
into
shlb
adc
test
cmpsl
pusha
adc
or
jne
loopne
push
jecxz
mov
ret
pop
adc
and
or
loope
addr16
ret
das
adcl
ret
imulb
mov
fwait
movl
lds
mov
xor
cmp
iret
imul
pop
incl
cmp
xlat
bnd
sub
push
cmp
cmp
push
gs
mov
xchg
mov
je
loopne
or
xor
mov
ror
hlt
cmp
das
mov
cld
in
adc
xor
add
insb
pop
inc
and
inc
jo
inc
iret
mov
adc
jle
aas
fs
push
mov
mov
cmpsb
lret
dec
or
sub
fdivrs
xchg
in
mov
mov
mov
adc
push
arpl
dec
adc
faddl
adc
mov
or
add
je
aad
pop
adc
test
xlat
push
ret
adc
inc
cmpsl
movsl
mov
xchg
dec
idivl
pop
neg
mov
xor
jno
jae
in
pushf
sub
out
inc
outsb
pop
loop
xchg
mov
jnp
jnp
pop
fistl
and
in
sbb
pop
mov
dec
hlt
ss
repz
sbb
mov
aas
or
or
add
ds
adc
push
aaa
orl
shlb
cmc
pop
sbbl
movlps
subb
andb
push
dec
enter
sub
xchg
add
cmp
in
cmp
dec
fimuls
xchg
int3
pusha
stos
int3
imul
fwait
mov
pusha
popf
push
adc
or
les
aam
ss
sbb
jmp
jo
mov
or
xchg
adc
cmp
xorl
in
adc
popa
sahf
test
movsb
lret
scas
sub
push
cmp
rcll
imul
push
ror
movsb
inc
mov
xor
jle
pushf
and
pop
test
cmp
daa
inc
aam
popf
sbb
or
sbb
cmpsb
ljmp
rorl
sub
std
pop
mov
mov
jbe
sub
lret
dec
imul
in
in
fsts
pop
jmp
shrl
das
and
test
pop
popa
push
sarb
pop
push
add
fiadds
into
adc
movsb
in
push
mov
sbb
or
shrl
clc
xchg
jno
push
sub
xchg
das
sahf
cmpb
pop
scas
psrld
add
sbb
fiaddl
rcrl
mov
int3
les
mov
ljmp
xor
push
push
sbb
mov
mov
lods
enter
sub
idivb
aaa
mov
mov
inc
push
sbb
cs
mov
call
enter
or
jb
push
aas
clc
cmp
mov
adc
jo
xchg
and
sbb
mov
pop
dec
repz
adc
movsb
fs
adc
inc
sub
xchg
lock
push
sbb
aas
nop
mov
imul
xchg
repz
dec
sbb
jecxz
cmp
sub
cmp
adc
ds
in
or
push
mov
inc
icebp
cmpsb
pop
adcb
shrb
mov
add
inc
rcrl
popa
mov
mov
subb
daa
fucomi
and
test
sti
fsubs
sub
jae
cld
int
pop
xchg
sbb
inc
lahf
xor
mov
das
inc
cmp
jp
cmp
mov
mov
push
shrb
in
add
std
andl
mov
sbb
add
lahf
cmp
jecxz
mov
mov
rol
cli
adc
scas
test
aam
sbb
mov
das
dec
or
out
in
leave
or
push
leave
xor
movsl
scas
fldl
fistps
or
xorb
adc
sub
scas
lds
jae
lcall
sbb
jp
jg
dec
inc
pop
mov
dec
push
popf
mov
add
scas
push
push
sub
gs
das
call
fbstp
xchg
add
fistpll
sti
push
leave
sar
cmp
insl
sub
lret
pop
xor
js
rcrb
mov
cltd
jns
sbb
xor
outsb
dec
push
outsl
or
call
mov
test
xchg
ljmp
mov
sbb
mov
ljmp
fisttpl
mov
leave
sbb
xor
jl
ds
push
cmpsb
mov
lds
loope
dec
add
addl
lods
mov
adcb
mov
mov
aad
imul
xchg
jg
xchg
fs
out
sbb
mov
repz
pop
aaa
jge
sbb
push
scas
leave
mov
cltd
or
jne
jbe
or
jne
cmpsl
sbb
jb
inc
dec
rcrl
cmpl
xchg
fwait
add
mov
repz
xorl
das
mov
jge
sub
jae
mov
int3
dec
cmp
jns
pop
aam
mov
dec
ret
mov
subl
sbb
das
sbb
and
dec
adc
cmp
outsl
jbe
push
adc
lahf
push
jle
loope
cmpsl
add
sub
xor
xor
inc
out
outsb
fwait
stc
movsb
jae
push
sub
xchg
in
js
sahf
inc
mov
or
pop
mov
pushf
jge
dec
adc
mov
imull
in
rolb
mov
pusha
pop
addr16
jle
inc
push
ds
shr
sub
imul
jp
push
jno
outsl
outsl
stos
push
push
ja
loopne
ret
test
fstl
sbb
fdivrs
push
xchg
pop
movsb
cli
pop
push
cmc
popa
pop
sub
pop
or
and
clc
cmp
dec
cld
loopne
movsb
jns
and
adc
movsl
sbb
inc
js
mov
mov
mov
daa
push
adc
out
xor
subb
data16
add
sub
pop
ret
aam
push
lret
add
push
or
mov
adcl
and
lahf
ljmp
push
int
divl
pop
test
cmp
lahf
sahf
push
cmpsb
add
aam
xchg
lods
mov
inc
fimull
lcall
pop
popa
adc
rolb
sub
push
outsl
cmp
inc
cwtl
cwtl
aas
outsl
ja
pop
aad
jno
ja
or
sub
lret
sbb
xor
orb
sbb
pusha
gs
les
std
push
sub
mov
adc
repz
aad
sbb
or
in
pop
push
jge
lods
inc
jnp
fwait
jle
rolb
xchg
lret
pop
cmp
jecxz
out
jmp
test
imul
mov
jne
lock
ret
push
sbb
jnp
pop
icebp
xchg
or
movsl
cltd
cwtl
xor
ds
test
lock
enter
adc
xchg
outsl
adc
cmp
dec
push
add
xor
xlat
inc
inc
add
ljmp
int
lcall
pushf
ret
pop
cmp
adc
inc
daa
in
mov
push
fldcw
mov
pop
pusha
push
jp
mov
cmpsb
or
dec
xchg
fisubrl
adc
nop
sub
div
data16
or
jl
fcmovnbe
jnp
dec
adc
loopne
stc
clc
add
mov
repz
out
pop
mov
in
mov
sub
stc
movsb
or
rorl
mov
scas
push
rcll
sbb
inc
or
test
mov
js
fisubl
sahf
pop
xor
outsl
jp
scas
xchg
scas
xchg
push
inc
xor
and
jne
clc
push
pop
jg
adc
pop
cmp
rorb
mov
dec
pop
xchg
ja
add
xor
cwtl
dec
scas
in
mov
pop
pop
pop
les
jge
je
stos
xchg
popf
and
mov
lods
and
fnstsw
ret
stc
es
and
mov
mov
repz
mov
test
adc
daa
jmp
mov
mov
add
xchg
xchg
lret
imul
popa
adc
pop
and
fimull
outsl
out
xchg
fnstsw
push
add
ret
xor
cs
bound
int
loop
fwait
lds
lds
xorb
aad
jae
xchg
in
fnclex
mov
add
adc
dec
and
jp
loope
out
icebp
insl
push
pop
cltd
cmp
fisubs
mov
negb
das
js
ret
int3
mov
jmp
jmp
sub
pop
and
sbb
dec
lods
add
call
mov
mov
movsb
jle
push
bound
insl
xor
aad
cmp
mov
jae
xchg
lods
movsb
data16
pop
pop
out
div
push
fdivr
jbe
xor
pop
divb
ja
aad
pop
dec
xchg
or
xchg
push
mov
nop
pop
daa
inc
test
je
mov
cmp
loop
pop
mov
sarb
movsb
and
xchg
cmp
std
xchg
repnz
sub
xlat
loope
mov
xor
addr16
dec
mov
sbb
std
jo
cmpsb
add
add
sbb
xchg
out
call
mov
mov
lret
inc
shrb
add
rclb
and
loop,pt
aas
rorb
xlat
mov
test
or
daa
xchg
pop
cmp
loope
lds
sub
sub
out
lds
dec
jno
pop
orb
in
ljmp
xchg
testb
or
mov
fisubs
out
dec
jmp
xlat
aaa
mov
jmp
mov
gs
stos
jge
push
jecxz
push
pusha
or
in
adc
and
nop
loope
sub
outsl
insl
decl
xchg
xor
outsl
dec
adc
inc
sub
icebp
add
jb
jle
dec
fstpl
rclb
add
fsub
clc
xchg
jo
inc
nop
les
jnp
push
push
loopne
mov
or
xchg
jg
aas
mov
sbb
cmp
aaa
popf
pop
sbb
sahf
mov
jl
inc
jnp
pop
sbb
sbb
stos
or
dec
clc
mov
rcll
mov
jae
enter
popf
xchg
inc
xchg
inc
mov
sbb
adc
dec
mov
inc
lcall
dec
fldenv
or
test
or
adc
outsl
fs
das
movnti
dec
movsl
and
sub
jmp
pop
popa
jne
mov
push
jns
or
add
jbe
ror
xchg
mov
xor
cmp
inc
add
pop
push
rcrb
push
jae
push
jno
jle
std
jmp
lahf
xchg
add
pop
stos
fistl
jp
roll
lods
jns
cmp
or
sbb
cmp
fmull
dec
inc
or
data16
jnp,pn
shr
inc
cld
xor
mov
sti
out
loopne
loope
outsl
pop
sbb
scas
shll
mov
cmp
sbb
icebp
andb
adc
xchg
jnp
pop
dec
or
sub
and
jns
push
sahf
sar
push
hlt
push
int3
jnp
popf
sti
mov
lock
shl
insb
test
iret
ficoml
xchg
mov
xor
repz
xchg
xor
das
inc
and
pop
push
xor
pop
jecxz
mov
mov
daa
out
lods
cmp
inc
cmp
push
and
pop
cmp
scas
xor
cmp
fisubrl
jg
testb
bound
pushf
jle
ss
mov
leave
inc
shlb
test
xor
mov
mov
cmc
or
std
repz
bound
push
cltd
aam
out
aam
fcmovb
or
xor
mulps
mov
sub
sub
push
xchg
mov
les
sub
cmp
pushf
inc
leave
push
cli
xchg
inc
fnstsw
cltd
fwait
fs
push
shr
rolb
je
mov
inc
pop
fwait
jns
stc
rcl
pop
fisttps
inc
pop
in
ss
push
jb
cmp
sub
cmp
test
and
ss
mov
pop
fldt
lcall
gs
sbbb
ja
xor
pop
lret
cli
mov
pop
dec
push
ds
bound
or
int3
push
bound
icebp
fdivr
ds
jbe
add
stc
mov
rclb
push
add
pusha
cmpsb
sbb
mov
imul
push
in
test
mov
std
push
sbb
sarb
aad
mov
sbb
jnp
shrl
fildl
pop
sbb
out
add
dec
scas
jmp
xor
and
jne
mov
push
cmc
pop
dec
cli
push
mov
data16
ret
jecxz
xor
rclb
pop
movsb
jmp
jp
arpl
adc
push
sub
scas
sbb
sub
cmp
xor
nop
lds
xchg
aam
das
dec
and
cmp
ja
pop
push
sar
or
adc
pop
sub
pop
addb
xchg
xchg
call
int
in
aas
ret
jge
jecxz
dec
cltd
and
jmp
cli
nop
mov
or
jb
mov
gs
pop
pop
and
notb
sar
push
pop
sub
andb
mov
jecxz
sahf
in
adc
pop
jmp
inc
and
cmp
adc
jnp
mov
xchg
inc
rcrl
push
int
insl
push
enter
mov
add
je
add
mov
pusha
outsl
sbb
jmp
movsb
popa
dec
xchg
pop
sub
mov
sahf
push
push
imul
mov
imul
ss
mov
inc
cld
pop
fwait
mov
divb
pop
xchg
lock
adc
jbe
xor
mov
xchg
mov
xor
mov
xchg
xchg
inc
outsb
xchg
jne
xchg
pop
mov
sub
pop
fcmovnu
jecxz
dec
dec
cmp
dec
xchg
adc
jae
push
and
xor
insl
or
mov
sbb
pop
insl
ljmp
mov
pop
clc
adc
repnz
mov
cld
lret
sbb
xor
lea
ret
add
mov
mov
pop
imull
nop
movsl
inc
ficomps
and
xchg
adc
es
sub
push
fstl
neg
jle
aam
pop
inc
aam
jmp
sub
das
divb
in
lock
and
xor
jmp
cli
jg
ret
mov
adc
sarl
faddl
xchg
orb
jns
inc
add
insl
cld
cmp
dec
or
push
push
repnz
pop
lea
mov
lods
jb
xor
jle
inc
sbb
ret
psllq
add
cmc
sub
js
loop
xor
outsl
xor
xor
cld
cmp
mov
popa
lret
push
test
fisttpl
ficomps
jb
loop
dec
mov
inc
jno
push
inc
imul
cli
bswap
scas
cmp
add
push
xchg
push
jbe
popa
push
loop
cmp
mov
mov
data16
sbb
mov
or
ret
sub
mov
aaa
js
ss
subb
jo
aaa
inc
aad
imul
xchg
xor
pushf
pop
push
cmovnp
mov
jecxz
leave
push
push
and
sbb
iret
push
sbb
push
pusha
cmp
lods
je
adc
ss
lods
lods
jecxz
mov
rclb
mov
adc
sub
subb
mov
or
pop
push
jecxz
in
addb
push
xor
dec
repnz
dec
xchg
xchg
jp
pop
imul
jge
stos
inc
cs
in
aas
inc
and
or
mov
mov
mov
out
sbb
aad
or
pop
xchg
or
dec
shrl
xchg
cli
push
xchg
xor
and
sbb
pop
aad
add
ficoms
mov
lret
stos
sub
or
push
shlb
sarb
insb
in
sahf
in
fistpll
mov
testl
sub
pop
inc
xor
ret
js,pt
pusha
aaa
lods
push
popf
das
dec
ljmp
fstps
mov
inc
push
jl
movsb
psubb
decl
std
xchg
sahf
cmp
movsb
mov
jno
into
sar
rorl
and
add
cmc
into
nop
dec
adc
or
insb
jo
mov
mov
adc
sbb
clc
add
orb
popa
fdivrp
jl
cmpsb
lds
repz
sti
mov
scas
push
and
adc
int
lret
es
sbb
pop
mov
dec
pop
add
dec
and
add
mov
push
movsb
jns
sahf
gs
cmp
adc
mov
mov
outsl
fistpl
pop
ljmp
mov
clc
add
mov
adc
mov
shr
pop
cmpsb
arpl
cmc
sbb
mov
je
xlat
test
jo
stos
test
mov
lods
in
mov
xchg
xor
int3
gs
push
mov
fidivl
lods
and
xor
pushf
xchg
pop
aaa
lcall
and
insb
inc
cmc
ret
jae
fsub
dec
lcall
cmc
mov
pop
pop
and
add
sub
fs
adc
rorb
jno
into
cmp
pop
scas
sbb
repz
dec
fldcw
insl
frstor
pop
into
mov
das
scas
repnz
sti
add
xchg
popa
xor
pop
movsl
sbb
icebp
inc
and
sbb
popa
sbb
in
add
and
shrl
pop
dec
cmp
popa
les
sbb
loopne
lods
push
cmp
adc
or
imul
hlt
push
lods
xlat
mov
sbb
hlt
lds
mov
inc
push
jbe
adc
fsubp
aas
jg
jecxz
sub
dec
movsb
xchg
push
xor
sti
clc
leave
jnp
ss
xchg
incb
int
aad
and
and
negl
jle
cmp
dec
pop
lcall
lea
stc
fimuls
xchg
cmpsb
mov
pop
clc
jp
cmp
xchg
push
gs
pop
jns
push
movsb
js
and
jae
mov
mov
mov
mov
and
dec
adc
out
fwait
scas
loop
cmp
xchg
frstor
jl
in
xchg
aad
jge
movsb
in
mov
fwait
jbe
nop
or
mov
orb
mov
mov
sti
stos
pop
in
imul
jl
rcll
outsb
xor
fwait
loop
mov
test
pop
mov
ret
jmp
icebp
pop
jb
out
fcoml
daa
clc
sbb
mov
and
enter
ret
jns
push
fwait
cmp
lcall
popf
cs
fsubl
outsl
mov
add
xchg
loopne,pn
loopne
inc
and
or
inc
push
add
dec
aas
cmp
std
in
pusha
pop
leave
mov
or
test
dec
repnz
or
xor
cli
add
rcrl
movsl
jp
and
pop
cmc
jecxz
fistl
cltd
dec
and
les
mov
out
les
in
out
or
inc
rcrb
jg
or
xor
sub
mov
cmp
and
mov
sbb
or
xchg
ret
data16
mov
outsl
je
mov
ljmp
mov
movb
or
mov
jne
lea
mov
dec
cld
inc
popa
enter
pop
add
pop
sub
imul
incb
lock
arpl
push
jne
cs
add
repnz
adc
fists
xchg
aaa
scas
xchg
xchg
add
rcrl
xor
out
stos
push
mov
jmp
icebp
inc
or
cmp
add
jmp
sbb
inc
dec
loopne
and
rol
jnp
aas
push
sbb
inc
mov
call
mov
adc
sarb
mov
and
adc
jecxz
push
decl
dec
pop
mov
mov
rolb
dec
pop
fucomp
orb
and
jl
insl
orl
out
jg
add
nop
add
fdivl
pop
aad
mov
xchg
cld
lahf
inc
adc
jg
add
sbb
rcrb
xchg
ret
mov
ja
iret
mov
cmc
arpl
cmpsb
adc
inc
or
and
test
xor
add
test
iret
fldcw
lret
mov
jnp
and
orb
xchg
sbb
pop
pushf
mov
add
orb
movsb
jo
sub
das
sub
or
pop
xlat
outsl
cmp
push
xchg
imul
mov
lahf
sar
add
lcall
out
and
sbb
pop
cmp
pop
scas
popf
jp
hlt
orb
ljmp
bound
cmp
or
push
xchg
pop
stc
jmp
or
pop
push
sbb
inc
aad
popf
inc
fistl
fstpl
je
mov
lock
mov
push
add
imul
mov
xchg
mov
mov
push
dec
hlt
jno
lds
in
stos
pop
pop
jmp
sub
cmpb
xchg
add
test
xchg
sarb
rolb
push
cwtl
outsl
repz
fldcw
inc
cwtl
mov
fwait
push
aad
xor
adc
jnp
aam
test
dec
bound
cmp
push
xchg
and
xor
jno
loopne
jecxz
mov
add
xor
imul
mov
lcall
cmpsb
fildll
jecxz
jno
imul
or
cmpl
loop
mov
pop
sbb
push
mov
ret
mov
fsubs
test
stos
mov
sub
dec
js
aad
fsubs
lods
xchg
pop
mov
push
xchg
iret
xor
leave
push
cmp
fwait
jbe
xor
mov
jecxz,pt
and
cmpsb
xchg
fnstcw
rolb
lret
or
nop
lods
loope
imul
orb
pusha
mov
aaa
mov
fcom
inc
shrb
mov
lret
jb
jg
jbe
clc
leave
mov
loop
scas
dec
sub
pop
adc
dec
sbb
leave
stos
out
xlat
cmpb
mov
test
lea
rorl
cmpsb
test
xor
movsb
das
imul
jno
mov
fcompl
sahf
and
cmp
ror
ds
push
mov
cmp
fldt
lock
jmp
popa
mov
jo
into
aad
lret
insb
lahf
pop
dec
aas
test
data16
std
xor
je
mov
fcmovne
cld
cltd
cmp
xchg
popf
mov
or
and
inc
sti
dec
push
ljmp
sbb
mov
shl
push
lock
dec
insb
lock
mov
push
lods
popa
stos
cli
xchg
lods
mov
jecxz
and
out
jns
rcrl
or
lahf
cmp
push
mov
sti
xor
xchg
ss
movl
je
and
mov
gs
lret
pop
repz
out
insb
andb
xor
jae
shrb
cmp
fstl
rsm
aam
stos
hlt
shl
jg
dec
lea
test
out
push
adc
and
aas
inc
jae
pop
dec
std
adc
loopne
add
popa
cs
xchg
push
sub
mov
xchg
inc
das
mov
inc
push
popf
fdivrs
and
push
in
pusha
insl
or
pop
push
std
aam
or
rcrl
sbb
push
jb
pop
pop
sub
jg
and
cmpsl
fwait
mov
inc
scas
sub
jle
and
lahf
mov
inc
push
xchg
cmp
setbe
jmp
lcall
mull
cltd
lret
movsb
or
iret
cmp
jns
push
xchg
fwait
ret
lret
inc
inc
out
stos
lds
scas
inc
push
leave
push
ffree
rol
sbb
popa
cmpsl
mov
mov
push
sbb
push
ja
loope
icebp
sub
ret
aas
sbb
pop
cs
std
sub
mov
mov
sub
jnp
dec
fadds
shll
call
imul
sbb
jbe
and
xor
fldt
cmp
sti
lods
mov
cmpsb
pop
rcll
mov
in
es
cwtl
arpl
pop
cmp
sub
pop
stos
leave
outsl
pop
push
dec
inc
sub
mov
das
jp
dec
xor
add
push
ret
xor
js
cli
fistl
inc
sarl
aam
or
pop
clc
push
mov
rcrb
mov
sbbl
jmp
addb
pop
xchg
adc
pop
je
mov
adc
cmpsl
jbe
rolb
mov
fidivs
arpl
std
or
fnstenv
xor
jp
dec
mov
pop
mov
sbb
pushf
rorl
repnz
dec
shl
insl
push
sahf
nop
frstor
jg
sub
add
loope
ljmp
dec
enter
and
lcall
mov
xchg
out
pop
stos
bnd
ss
sahf
mov
mov
push
popf
pop
pop
mov
lret
icebp
fldenv
aad
ret
mov
loop
mov
fisubrl
lahf
cmpsl
push
hlt
sbb
mov
mov
inc
clc
gs
fsubs
ja
scas
pop
jge
leave
in
or
or
push
add
hlt
iret
pop
cmp
jb
mov
lcall
shll
xchg
inc
push
and
test
inc
insb
fnsave
cmp
pop
cmp
adc
sbb
fstpt
xchg
and
outsb
test
xchg
pusha
stos
outsl
stc
jg
jle
arpl
inc
leave
shrb
aaa
sub
fldcw
popa
dec
pop
ret
jne
mov
out
push
int
adc
dec
inc
dec
incl
add
icebp
test
shlb
mov
frstor
call
paddw
xor
sub
xlat
loop
loopne
inc
pushf
out
jns
mov
jbe
repnz
daa
cli
pop
mov
popa
or
pop
fstpl
pusha
sahf
and
adc
pusha
mov
insl
mov
lds
adc
xchg
cltd
filds
xchg
std
ja
outsb
dec
sub
jmp
jns
addr16
mov
rorl
pop
mov
push
fdivs
out
sbb
xchg
push
adc
push
jns
pop
scas
adc
push
pop
lea
xchg
arpl
push
mov
out
out
aad
inc
popf
pop
ds
cmp
add
lahf
lods
insb
pop
jo
sbb
jge
and
inc
test
cs
jae
xor
dec
leave
mov
das
sbbl
imul
push
stos
call
ret
scas
jle
sub
xor
or
inc
xchg
aam
add
js
push
nop
ss
inc
pop
jno
nop
pusha
inc
adc
and
test
mov
repnz
or
inc
or
add
mov
mov
dec
sarl
or
pop
aaa
xchg
xchg
outsl
pop
test
xchg
arpl
dec
enter
lds
pop
movsb
adc
pop
inc
sub
push
jp
dec
mov
pop
inc
stos
gs
lcall
xchg
popf
stos
xor
ja
mov
sub
sub
cmovne
sub
out
into
call
sbb
dec
sub
ficoms
cmp
adc
jbe
int
in
pusha
pop
inc
and
add
xlat
sbb
jne
enter
jbe
jmp
mov
adc
cwtl
imul
shr
xor
sbb
aas
push
jbe
insb
jne
pop
das
ja
in
pop
xchg
add
dec
jo
out
imul
push
adc
test
xor
jns
repz
pop
xchg
idivl
pushf
jp
jno
arpl
imul
rorl
ficoms
mov
jmp
test
or
pop
pop
sub
es
add
aas
pusha
rcrl
push
sub
jge
lret
xor
add
pop
or
cs
sbb
pop
dec
adc
es
jno
adc
xlat
lret
rcl
sbb
xor
inc
sub
je
push
jl
hlt
bound
fwait
mov
es
push
pop
and
mov
push
pop
push
out
pusha
arpl
sbb
jge
pop
aad
lahf
jmp
lret
arpl
jae
push
stos
add
xor
inc
jo
and
pop
mov
and
adc
decb
not
pop
fsts
es
jp
mov
or
in
jecxz
ss
dec
shll
lahf
jle
lds
sbb
aas
fdivr
and
inc
aaa
es
sub
xchg
and
jmp
sbb
lcall
and
dec
xchg
xor
hlt
push
mov
sahf
fcoml
push
inc
cmp
addl
lods
nop
mov
mov
cli
call
jp
and
inc
fcmove
adc
and
ds
fsubrl
fdivr
mov
icebp
stos
sbb
sub
xor
in
jns
mov
lds
and
and
int3
xor
iret
mov
sbb
sti
repnz
popa
subb
mov
and
movsb
and
dec
cltd
and
sahf
das
lods
pop
cmpsl
aam
push
cmc
mov
adc
mov
bnd
fbld
jmp
jb
cwtl
cld
push
jp
push
repnz
lock
imul
rorb
mov
repnz
jl
cltd
mov
outsb
add
mov
sub
adc
xchg
adc
cmp
in
pop
subl
neg
loopne
jo
popf
loop
mov
shll
fistpl
adcl
scas
mov
shlb
and
cltd
xchg
jge
xor
movsl
pminsw
mov
jg
incb
das
dec
mov
divl
jnp
fildll
test
or
inc
lret
lret
ror
repz
nop
adc
adc
inc
cld
mov
cmc
or
iret
ljmp
push
dec
iret
leave
cmp
push
add
shl
in
xchg
lret
ja,pn
repnz
rol
aaa
addl
xor
imull
pushf
push
adc
xchg
mov
xor
lahf
jl
loopne
adc
std
stc
loopne
and
lea
mov
and
loope
add
adc
xor
push
push
outsb
inc
jnp
fcoml
xchg
jl
repnz
ds
test
xchg
movsb
xor
mov
cltd
lret
mov
imul
or
xor
dec
sbb
dec
xchg
pop
sarl
aam
xchg
jle
xlat
mov
jecxz
sbb
inc
adcb
jmp
jae
lds
leave
mov
shrl
cmp
lahf
lock
mov
loope
inc
fidivrl
mov
sahf
jp
jne
out
popf
add
in
add
test
aas
addb
scas
std
dec
fidivs
jns
idivl
adc
cmp
aam
mov
jmp
cmp
fxam
inc
jp
inc
jg
rcll
push
in
sbb
inc
push
and
push
mov
in
icebp
cmp
adc
xlat
jo
sub
int3
call
in
cmp
jb
lock
mov
scas
int
or
insb
mov
cmp
mov
scas
daa
jbe
fsubs
test
mov
jecxz
inc
daa
and
pop
dec
call
pop
inc
inc
lds
pusha
aaa
and
mov
aas
aad
stos
cmpsl
sub
mov
xchg
js
push
fildll
sbb
jne
loope
in
fistpl
mov
add
xor
mov
inc
dec
push
and
mov
mov
pop
dec
jno
fwait
and
jb
icebp
fidivrs
cld
or
pop
enter
sar
add
ds
ljmp
sbb
loope
inc
pop
shrb
or
popl
mov
loop
jg
push
outsl
pushf
adc
ds
mov
jge
fmuls
inc
insl
mov
test
ja
pop
imul
mov
cmp
xor
pop
mov
mov
adc
sbb
sub
jp
cwtl
inc
mov
inc
sbb
push
into
fiaddl
mov
xchg
js
push
fwait
shrb
add
ficoms
adc
into
ret
xor
push
movsb
cwtl
cltd
inc
inc
ja
jno
pop
in
xor
xorl
stc
xor
loopne
std
mov
ret
mov
pusha
aad
outsl
xchg
sub
add
jl
sub
hlt
add
fwait
push
sbb
and
inc
inc
push
fiadds
or
negl
push
int
or
xchg
stos
data16
xchg
enter
and
callw
pop
add
mov
push
and
insl
out
push
pushf
and
sub
mov
fists
and
pop
popa
lahf
test
and
loopne
pop
or
jecxz
jb
inc
ret
nop
xchg
mov
and
jno
cltd
aas
adc
sbb
or
insl
jle
in
xchg
or
clc
adc
jp
xchg
je
pop
jbe
push
mov
or
daa
aas
test
fcomps
dec
mov
push
fdivrs
leave
mov
add
mov
rcrb
xor
mov
sbb
cli
and
mov
mov
aam
add
push
das
adc
fbstp
sbb
inc
cmpb
inc
mov
bound
mov
xchg
test
outsb
cwtl
loop
movsl
pop
xchg
lcall
sbb
ja
mov
jbe
adc
out
test
aaa
adc
jle
repz
jnp
std
mov
outsb
mov
mov
jne
fs
mov
adc
gs
test
mov
ss
inc
push
pop
push
inc
push
out
into
cwtl
scas
mov
aaa
cli
cld
fnstenv
mov
dec
add
in
js
jmp
dec
push
xchg
jle
cwtl
mov
mov
lock
mov
adc
out
and
dec
dec
pop
shl
lcall
or
mulb
push
cmc
leave
dec
add
mov
and
jl
xor
ret
lods
xor
daa
xorb
fiadds
hlt
jo
pusha
mov
sti
xchg
pop
mov
push
sahf
mov
mov
fst
xchg
mov
cmc
sbb
jecxz
aas
xchg
xlat
cmp
dec
pop
dec
sahf
sbb
mov
lods
pop
jg
fsub
cmp
test
push
cltd
stc
mov
rorb
loopne
lret
mov
mov
pop
ret
jbe
mov
jg
add
inc
inc
inc
xchg
cmpsl
sbb
lahf
add
sub
repz
jg
cmpsb
fstpt
mov
in
add
pop
stos
sbb
std
pushf
adc
les
pop
add
and
adc
mov
pop
nop
and
mov
jno
loope
xchg
ja
jl
sti
mov
inc
aam
insb
cmp
int
push
les
mov
fwait
jno,pt
popf
mov
mov
pop
imul
inc
cmp
mov
pop
shll
mov
inc
imul
mov
arpl
out
jns
push
ss
mov
mov
pop
fildll
push
jae
jo,pt
inc
adc
fs
push
bound
add
sbb
int
push
add
mov
fdivr
pop
inc
xchg
xchg
stos
mov
jmp
enter
adc
int3
ja
push
cmc
sbbb
icebp
mov
movsl
xchg
in
jecxz
inc
int3
jno
mov
mov
in
pop
mov
test
or
jae
mov
cmp
lods
cmp
push
insb
inc
mov
test
and
mov
outsb
dec
out
add
lods
test
loop
jg
iret
ja
xor
call
inc
lahf
cmp
jl
push
mov
jns
mov
pop
and
push
inc
ret
or
xchg
sbb
outsl
mov
lret
xor
push
js
sbb
jle
mov
xor
or
lret
push
into
mov
sbb
pop
fwait
roll
stc
movsl
int3
dec
add
icebp
mov
pop
mov
cmp
xor
pop
sub
fiadds
fcomp
or
aaa
popf
adc
orb
cltd
fcoml
sti
xchg
cwtl
sarl
cmp
adcl
or
add
inc
dec
das
jge
test
test
jge
notb
imul
mov
adc
out
sub
xchg
mov
or
sahf
popa
inc
adc
xchg
add
dec
mov
and
inc
xchg
xchg
mov
int3
rolb
cli
mov
jns
repz
push
sub
xor
fisubl
int
faddl
movsb
scas
jl
lahf
stos
cli
xorb
fiadds
or
adc
nop
cmp
stc
and
xchg
pop
das
scas
mov
mov
cltd
insl
mov
mov
inc
mov
sub
or
and
and
cmc
sub
es
ljmp
or
or
pop
push
inc
dec
cwtl
cli
imul
xchg
mov
fstpl
les
lods
test
jbe
stos
mov
fwait
inc
out
adc
insl
addr16
clc
shl
fnstsw
rcrl
aas
inc
push
or
stos
xor
mov
jl
lret
movsb
fisubrs
sub
movsl
aas
pusha
inc
cmc
call
jne
leave
jge
inc
cwtl
inc
mov
out
scas
pop
addr16
divb
cwtl
or
and
or
in
sbb
or
mov
dec
mov
dec
cmp
cmp
aaa
cmp
mov
mov
test
xchg
push
ficomps
ret
lea
pop
xor
vmread
jle
push
notl
lock
repz
pusha
icebp
pop
xchg
push
daa
insb
clc
popf
push
es
je
loop
inc
sarb
fbstp
cmc
cli
mov
mov
mov
dec
jecxz
pop
add
addl
mov
jecxz
in
mov
adc
ss
and
cmp
fcoml
xchg
mov
add
imul
and
pop
and
xor
or
fdivs
push
mov
pop
adc
scas
mov
cmp
test
in
aaa
cs
add
cmp
and
add
dec
cmpb
xlat
pop
cmp
test
mov
hlt
nop
mov
pop
iret
cmp
std
ret
mov
into
testl
testb
push
adc
push
push
pop
lret
in
mov
sub
ret
jo
ret
hlt
sahf
fst
jge
mov
adc
push
push
ret
push
les
pop
mov
xchg
xchg
or
cmp
or
pushf
int
xor
pop
shll
test
pop
dec
lods
push
push
jb
sbb
iret
test
sub
in
cmp
stc
add
aaa
pop
mov
xchg
mov
sbb
out
aas
adc
lcall
dec
cli
mov
fisttpl
in
xchg
adc
push
dec
cmpsl
das
sub
movl
jp
loop
xchg
push
or
jo
inc
add
jnp
movsb
orl
mov
mov
push
dec
lret
rcll
imul
test
sbb
idivb
aam
ljmp
roll
mov
pop
adc
inc
inc
test
push
inc
add
sbb
sub
jno
neg
fdiv
mov
inc
pop
pusha
scas
adc
sbb
push
loop
loope
stc
pop
mov
xchg
add
sub
push
add
mov
or
cmp
rcr
mov
repz
nop
jmp
lea
push
je
mov
sbb
jae
pop
jbe
cmp
fcomps
int3
inc
aas
out
out
out
jns
mul
push
xor
mov
decl
cwtl
sub
sub
jne
or
mov
fnstsw
imul
cs
pop
and
push
mov
xchg
nop
fdivs
ljmp
inc
push
inc
imul
aad
pop
and
cmpsb
rorl
fcoml
scas
jns
mov
push
imul
std
push
sbb
mov
adc
or
cmp
cli
lods
jecxz
cwtl
mov
movsl
cwtl
mov
sub
fnstsw
cmp
test
inc
mov
push
mov
mov
fldenv
outsb
daa
jo
mov
imul
push
scas
push
daa
or
stos
in
pop
inc
scas
xor
loop
icebp
movsb
or
or
mov
mov
into
adc
es
xchg
dec
mov
cmc
cltd
cmp
push
xchg
pop
mov
jle
mov
xchg
pop
mov
xor
jmp
inc
inc
lcall
arpl
pop
push
iret
cwtl
daa
loope
jo
fs
daa
jg
push
insl
mov
mov
pop
pop
push
jb
out
repz
bound
or
out
and
mov
pop
jo
ret
xchg
sub
lret
push
pop
int3
stc
mov
push
inc
lahf
mov
cli
fcmovu
and
mov
pop
lea
inc
or
xor
pushf
push
int
sbb
repnz
lods
pop
loop
xchg
imul
arpl
pop
push
xchg
addr16
mov
movsb
sbb
push
add
dec
add
je
popf
push
sub
inc
mov
add
jns
xchg
fs
dec
inc
jge
push
das
mov
mov
cmp
lock
mov
int
out
inc
jne
mov
push
insl
add
call
test
addr16
cli
call
adc
mov
pop
pop
test
xchg
bnd
loopne
cmpl
pop
pop
loope
hlt
dec
pop
rclb
cmpb
outsb
int
nop
aad
adc
dec
sub
in
aad
mov
inc
jo
imul
clc
jne
xor
cmp
inc
mov
shll
xchg
jmp
inc
and
xchg
cmpsl
outsb
push
xor
mov
imul
mov
jl
std
sbb
dec
outsb
pusha
xor
mov
pop
in
add
iret
mov
movsb
pop
and
xor
jne
mov
daa
jbe
loope
cmp
dec
adc
xor
add
outsl
cmpsb
dec
mov
adc
pop
adc
pushf
lds
inc
mov
test
or
cmp
aaa
jno
inc
cmp
fs
push
mov
jbe
cs
and
out
mov
ret
pushf
aam
xchg
push
push
cltd
test
mov
xchg
and
cmpsl
jae
push
push
push
or
jmp
ret
mov
mov
dec
or
pop
push
test
loopne
push
outsl
aam
out
out
mov
into
jge
ljmp
shr
add
xchg
inc
jne
xchg
into
mov
int3
and
adc
mov
dec
or
mov
inc
jmp
ljmp
push
push
pop
pop
xor
cmp
mov
mov
outsb
dec
jo
cmp
stos
inc
repnz
shlb
shrb
mov
in
jnp
and
or
dec
pop
dec
sub
je
push
mov
rcll
dec
gs
ret
mov
insb
inc
ds
fidivrs
bound
fdivs
data16
and
scas
xor
hlt
cmpsl
sub
dec
pop
ds
sub
or
outsl
sub
xor
hlt
iret
mov
pop
cmp
scas
in
mov
lea
ret
insl
mov
mov
mov
imul
mov
in
pop
gs
bound
pop
sub
mov
push
movsl
add
fxch
dec
push
jns
adc
pop
add
jle
xchg
out
scas
repz
shlb
test
push
push
das
dec
mov
popf
add
xchg
and
xchg
loopne
out
arpl
pop
fsubl
jbe
rcrl
popa
loope
push
mov
and
xor
adc
in
pop
push
xlat
lcall
inc
or
xchg
cwtl
xchg
adc
dec
xor
mov
mov
rcll
push
hlt
mov
and
mov
pop
pop
loope
cmp
push
jp
test
mov
pop
xor
push
push
sbb
jecxz
in
mov
roll
add
mov
rcll
and
cwtl
test
gs
jb
and
inc
test
imull
in
xor
es
in
pop
mov
ljmp
sbb
or
xchg
jns
imul
sti
fstpl
pop
stc
add
adc
enter
pop
repz
mov
in
cltd
jo
sub
push
xor
jae
cmp
jo
enter
ss
mov
pop
ss
repnz
cld
aad
fstpt
nop
xchg
mov
and
add
lods
mov
mov
jmp
call
dec
or
lret
push
add
and
mov
add
push
ds
sub
cmp
jbe
addr16
scas
add
rcl
push
dec
and
loope
xchg
sbb
lock
and
adc
xchg
mov
in
lock
je
dec
sbbb
push
ret
out
mov
inc
hlt
lods
and
mov
push
pop
and
and
and
push
lea
pop
shrl
xchg
ds
into
je
fistl
sahf
jmp
stos
iret
mov
out
cld
aas
jmp
xchg
lods
dec
scas
das
into
hlt
fnstsw
outsl
lcall
pop
fiadds
out
enter
rcr
aaa
mov
stos
stos
jns
test
jb
xchg
inc
pop
pop
lret
loope
movsl
scas
sti
cmp
loop
mov
add
aam
mov
cld
push
testb
mov
icebp
addr16
xchg
rcl
fstps
inc
stos
xchg
hlt
into
jmp
sbb
sub
adc
xor
jo
adc
and
or
dec
fmull
insb
sub
arpl
mov
or
mov
mov
and
cmpsb
and
push
adc
pop
inc
pop
test
sub
lret
dec
imul
xchg
mov
sbb
aad
test
stc
inc
pop
adcl
xchg
lahf
inc
lea
push
popf
fs
rcrl
dec
data16
jo
dec
rcrl
mov
mov
xor
call
cmp
ret
and
sub
xchg
cli
pop
hlt
or
pop
jge
clc
sbb
or
ja
push
fnstcw
mov
push
psubq
nop
mov
mov
hlt
cmpsb
in
cmpsl
add
cmp
in
rorl
pop
pop
inc
dec
aad
xor
push
and
xor
cmc
cmpsb
scas
pop
out
inc
xlat
xor
loop
or
dec
and
int3
jnp
inc
adc
jl
and
aad
pusha
add
mov
inc
lahf
mov
cwtl
sbb
adc
sti
rorl
sbb
lock
or
jle
push
fidivrs
adc
pushf
push
adc
rcrl
dec
rcrl
rcrl
mov
mulb
dec
fisubl
out
imul
mov
in
mov
shrb
lea
mov
pop
xchg
fwait
mov
jns
pop
sbb
in
loop
call
cmp
icebp
outsb
paddw
out
lret
stc
adc
lret
sub
loopne
sti
sub
cmc
stos
push
imul
cmp
lahf
push
sbb
lods
cmpsl
frstor
jge
outsb
mov
scas
mov
lcall
jg
mov
xchg
addr16
adc
cmc
jne
jge
fwait
jl
movsl
repz
movsl
ret
jg
jne
fildl
loopne
pop
xor
call
dec
cmp
push
movsb
jmp
xchg
fwait
subb
mov
sub
js
sub
sub
int
pusha
subl
cmp
mov
popf
add
and
inc
dec
xor
pop
push
or
test
pop
jbe
xchg
jp
push
mov
sbbl
jg
loope
push
lock
xchg
push
inc
xchg
adc
stos
arpl
pop
push
cmp
pop
test
jle
xor
push
in
jp
and
xor
sub
pop
mov
add
pop
je
pop
mov
jo
inc
and
adc
sub
pop
mov
pop
mov
cmc
scas
jg
dec
pop
push
jg
fnsave
cmc
jp
push
mov
movsl
sahf
test
jno
sbb
sarb
pop
pop
and
mov
fbld
into
int3
rorl
repz
outsb
data16
out
mov
and
sarb
mov
insb
inc
in
scas
aad
push
or
out
inc
mov
sub
jl
and
rolb
jo
inc
decl
gs
sahf
fsts
mov
dec
sti
ficompl
vmulpd
or
jp
adc
aaa
lds
mov
loope
xchg
into
mov
in
repnz
lds
jl
xchg
ds
divl
xlat
xor
mov
sbb
stos
and
pop
lds
pop
test
pop
mov
add
mov
dec
jecxz
xor
xorl
dec
jne
pop
mov
icebp
rorb
cmp
push
pop
sub
jae
inc
subl
stc
inc
shlb
outsl
div
cmp
jb
inc
mov
pop
icebp
sbb
rcrb
outsl
in
sub
testb
dec
mov
lea
ss
mov
pop
xor
push
idivl
aaa
jnp
imul
jecxz
or
push
or
mov
out
push
int
mov
push
stos
pushf
xor
imul
cmpsl
popf
jno
xchg
call
insl
loope
jbe
arpl
push
fadds
add
or
cmp
fcomp
dec
sub
adc
cmpsb
or
xchg
mov
mov
test
push
mov
out
aam
cmc
add
das
push
incl
lods
ljmp
je
cmp
pop
adc
int
sub
jmp
sbb
loope
mov
stos
add
hlt
push
dec
dec
and
psrad
insb
inc
fisubrs
push
loopne
into
popa
lods
push
inc
in
pop
nop
test
test
push
je
hlt
stc
imul
push
sub
adc
add
iret
nop
inc
hlt
popf
rorl
xor
sti
clc
leave
push
and
pusha
push
lcall
mov
mov
xor
ret
fsub
daa
jge
fcompp
outsb
fsubrp
loop
int
in
dec
jnp
cmpsl
aas
js
addr16
lock
cmp
cwtl
in
fisubs
ret
mov
jl
dec
lahf
js
or
and
mov
xchg
fwait
in
lods
jns
jmp
mov
pop
jecxz
fisubrl
pop
jecxz
push
inc
mov
or
jns
daa
outsl
adc
add
mov
mov
fistl
xchg
cmc
xchg
outsb
out
loope
cmpsb
aas
icebp
dec
jg
outsl
xor
jo
in
js
cltd
cmp
cmc
cmp
mov
jl
adc
pushf
sub
ljmp
pusha
sarl
es
insb
sbb
mov
andb
lcall
xor
mov
popf
and
cmpsb
jl
jnp
add
xor
and
imul
or
mov
testb
push
pop
xchg
mov
sti
add
outsl
sub
mov
test
add
cmp
xchg
ret
cli
inc
mov
aam
push
push
xor
push
nop
insb
sub
xor
sbb
je,pt
sub
mov
cmp
movsl
test
adc
cmpsl
call
rcll
adc
xchg
fsubr
adc
rcl
mov
stc
mov
scas
xchg
inc
push
cmp
or
dec
nop
pop
xchg
fwait
xchg
lods
sbb
jb
cmp
mov
inc
mov
jmp
xacquire
adc
btsl
lods
je
push
jecxz
stos
orl
jge
jb
mov
pop
scas
test
pop
xor
mov
mov
jmp
dec
sub
cmc
mov
fbld
subl
stos
lret
daa
test
lods
sti
add
push
test
pop
push
lds
stos
xchg
arpl
idivl
adc
add
xlat
out
rcl
push
xor
movsl
mov
icebp
sub
sbb
mov
jmp
testl
data16
in
xor
jno
mov
out
adc
jmp
ficoml
mov
out
dec
cmp
insb
les
cli
and
mov
cli
addr16
dec
movntps
mov
mov
lock
shr
movsb
add
outsl
hlt
and
sub
cmp
outsl
negl
iret
xchg
jmp
add
test
daa
ljmp
out
test
negl
cmpsl
leave
stos
mov
imul
movsb
aaa
sub
scas
popf
mov
mov
jmp
xor
push
data16
mov
cmp
fnstenv
push
lds
rcll
mov
jp
pop
pusha
orl
fbld
add
mov
adc
lret
lahf
xlat
jecxz
test
mov
lods
gs
aas
mov
jge
push
in
adc
cmp
int
xor
mov
test
in
int
pop
idivl
mov
pop
and
stos
je
push
pop
ja
or
roll
inc
fwait
out
push
imul
mov
je
push
push
lds
std
imul
push
js
idivb
ds
and
les
add
xor
push
and
insl
pop
add
andl
adc
adc
push
add
push
or
cwtl
ret
cmp
arpl
fimuls
jle
les
add
or
lahf
mull
in
stos
jne
lcall
ror
cmp
js
ds
push
or
xchg
js
sbb
popf
xor
fs
iret
das
cmp
cltd
jbe
loop
pusha
loope
les
scas
mov
fldt
fs
aam
sbbb
icebp
jg
or
loop
lds
arpl
xchg
in
shrb
add
mov
dec
mov
dec
cltd
insb
andl
adc
sbb
test
or
stos
imul
ds
lret
fisubl
pop
jns
cmpl
dec
mov
cmp
lahf
sbb
fcoml
mov
shr
aaa
out
adc
jge
mov
stos
out
and
mov
mov
jecxz
pop
lods
in
inc
sub
push
cli
push
or
inc
test
ljmp
mov
jge
pop
xchg
or
call
nop
push
testl
push
mov
xchg
daa
lods
inc
pop
enter
pusha
xor
inc
test
sbb
mov
arpl
rcr
ljmp
pop
or
repz
mov
jo,pn
adc
sub
mov
dec
xchg
fldenv
jae
inc
sbb
mov
fists
add
xor
add
clc
xor
mov
ja
jnp
cwtl
dec
lock
les
and
mov
sti
int3
shr
inc
xor
pop
add
push
ljmp
mov
xlat
sbb
imul
out
and
add
stos
fdivrs
add
movsl
xor
dec
ljmp
jo
cmpsl
pop
dec
addl
inc
ja
sbb
stos
fdivl
or
adc
inc
aam
int3
andb
adc
test
lahf
cmp
mov
mov
sub
movsb
cmp
int
into
xor
and
outsb
stos
fidivl
fwait
mov
stc
stos
cld
mov
xorb
pop
outsl
xchg
xchg
mov
cmp
mov
aas
and
ret
test
fs
shll
jge
aas
daa
mov
pop
push
push
sub
outsb
mov
fwait
shrb
push
test
subb
pop
jecxz
pmuludq
cmp
mov
xor
stos
loopne
loopne
or
decl
or
outsb
scas
inc
add
jp
or
mov
dec
and
mov
shll
mov
cs
xor
xor
mov
jo
sub
jbe
adc
push
jb
aad
shlb
xorb
fwait
mov
movsb
push
mov
insl
cmc
cwtl
adc
fnstenv
inc
fucom
mov
xchg
sub
notb
add
sbb
jae
or
sbb
xor
push
loop
add
inc
mov
cmp
or
daa
leave
data16
call
aaa
jmp
sub
and
clc
mov
mov
out
jae
mov
lahf
sub
dec
addl
mov
aaa
addl
mov
jnp
cmc
inc
and
ret
hlt
pop
daa
cmp
jmp
jo
cmc
cwtl
mov
cmp
ret
cmp
scas
mov
and
dec
adc
cmp
cmp
int3
dec
jg
in
jmp
xor
sub
fstpt
mov
aaa
pop
xlat
xchg
sbb
lret
push
xchg
fsubl
inc
jl
jmp
pop
dec
dec
cmp
jecxz
clc
adc
mov
xchg
ljmp
inc
sub
mov
mov
pop
or
jne
hlt
cmpsl
lcall
push
dec
mov
xor
pop
inc
cmp
fdivs
dec
push
cli
out
dec
pop
push
in
fs
mov
std
dec
and
icebp
mov
fsubr
out
shlb
sbb
cltd
or
ficoms
jle
in
xchg
mov
sub
loope
dec
cld
xchg
sbb
mov
data16
in
dec
sbb
shll
enter
push
out
arpl
jecxz
cmp
pop
popf
loope
shrl
add
insl
mov
cmp
in
pushf
rclb
xchg
ljmp
add
test
push
imull
mov
push
push
jmp
push
xchg
lcall
pop
into
stos
stos
dec
inc
mov
int3
loopne
jae,pn
mov
jno
pop
mov
stos
stc
out
fisubrl
and
push
cmc
lods
or
in
sbb
dec
scas
push
aam
cwtl
inc
pushf
jae
sbb
pop
lods
outsb
hlt
mov
sub
fldenv
pop
dec
or
lahf
outsb
loopne
mov
add
inc
pop
out
cltd
inc
es
cmp
dec
leave
inc
mov
subb
dec
cmpsl
sub
add
movl
mov
and
aad
dec
jnp
mov
outsl
daa
sbb
sub
insl
fidivl
loopne
jo
mov
stos
fsubrp
sub
enter
mov
js
cltd
add
ficoms
push
testb
cmpsb
xor
fsubrl
xchg
and
cmp
push
es
pop
aas
jno
shlb
or
dec
call
loop
push
mov
decl
fistps
lret
push
pop
int3
out
loopne
push
fisttps
int
push
in
dec
je
aaa
lcall
test
lea
imul
shll
cmpsl
xchg
adc
cmpsb
push
or
into
or
lret
push
jb
jne
adc
stos
imul
cli
mov
push
test
jge
and
and
xor
sub
xchg
xor
inc
xchg
sarb
mov
ffree
xor
loope
icebp
mov
xor
cwtl
out
xchg
das
out
mov
int3
jne
adc
fwait
jae
xchg
test
subb
stos
cmp
jae
mov
loope
add
dec
inc
and
scas
pop
mov
cli
cmp
clc
out
dec
aas
inc
and
mov
pusha
repz
pop
mov
mov
push
mov
leave
lcall
mov
pushf
or
pop
outsb
movsb
imul
xchg
lret
push
cmp
pop
push
adc
pop
mov
movsb
fninit
lahf
rcll
adc
rol
mov
data16
add
xchg
aaa
icebp
dec
je
add
adc
imul
mov
aaa
add
jno
xchg
jne
in
xor
jp
roll
sub
js
adc
dec
adc
ret
shlb
addr16
call
movl
sahf
hlt
flds
mov
shrl
aam
pop
orl
mov
jmp
mov
or
xchg
fnstenv
sub
repz
mov
dec
sbb
inc
sub
sbb
gs
or
jnp
addr16
pop
pop
cmp
rolb
mov
int
into
pusha
out
cltd
call
ret
shlb
and
push
pop
in
mov
xchg
mov
rcl
cmp
js
in
xchg
or
stc
mov
xor
cld
cs
fcomps
lret
aad
stc
movsl
dec
cmp
pop
xor
call
arpl
push
or
inc
jnp
mov
mov
mov
iret
fs
and
movsl
cmpsb
je
dec
jp
aaa
sub
jle
lods
int
out
adc
popa
adc
inc
aad
popa
in
fistpl
sub
xor
lcall
loopne
pop
mov
movsl
mov
xor
mov
xor
push
movsl
mov
leave
mov
lea
inc
or
or
jae
push
loope
lock
mov
adc
nop
addl
pop
mov
xchg
jmp
icebp
pop
jbe
roll
add
jmp
dec
add
sub
pop
daa
xchg
sub
cld
rorb
fstpt
sti
xchg
cmp
jae
js
mov
add
sti
xchg
out
in
mov
enter
and
andl
data16
jo
mov
xlat
cltd
insl
sub
xchg
mov
pop
cmp
mov
cs
pop
adc
ficoml
or
add
stc
add
data16
inc
mov
mov
add
out
and
es
rorb
sbb
popa
add
in
and
inc
popa
or
mov
rolb
addr16
or
pop
inc
sub
sub
cmp
sti
nop
inc
or
ljmp
fimull
hlt
adc
mov
mov
xchg
jne
and
aaa
cmp
sub
scas
dec
push
fwait
jmp
sub
sub
push
sub
pop
mov
js
pop
sti
mov
call
mov
das
pop
mov
add
int3
test
pop
or
iret
nop
ss
dec
mov
test
lock
mov
js
enter
dec
and
in
ds
push
mov
push
fildl
cmp
movsl
pop
add
inc
frstor
cmpsl
pop
xchg
popa
pop
add
mov
imul
jmp
int
call
cmp
inc
and
sbb
cltd
loope
aas
test
cli
push
movsb
ljmp
loope
push
sub
mov
mov
loope
jp
dec
jnp
out
movsl
pusha
or
inc
dec
and
inc
or
cld
int3
aas
push
push
dec
loop
xchg
and
jmp
jnp
xor
in
movsb
pop
xor
dec
or
call
cwtl
les
bound
mov
lds
pop
xor
arpl
sbb
sbb
ret
xchg
dec
sub
fistpl
loop
cmp
insb
fsubrl
popf
adc
aad
rolb
jg
xor
push
daa
mov
leave
mov
push
inc
insb
fistps
mov
jns
push
mov
daa
push
lcall
and
stc
mov
repnz
popa
lret
lea
sahf
fdivl
jnp
pop
cli
arpl
dec
dec
pop
mov
mov
nop
xchg
fimuls
add
dec
dec
pop
inc
stc
inc
popf
dec
push
repz
adc
mov
inc
flds
adc
fisttpl
test
stos
cltd
sub
fildll
lahf
add
add
gs
pop
pop
out
mov
cltd
aad
out
mov
pop
and
bound
jnp
cs
pop
cs
mov
stos
or
push
daa
les
and
cmp
lret
add
outsl
out
pop
pop
xor
test
push
out
mov
xor
jp
lds
adc
jle
xor
cwtl
adc
adc
mov
ss
ja
add
mov
icebp
cld
mov
add
jle,pn
ss
aam
sub
mov
add
sbb
mov
test
jb
adc
lea
loop
add
dec
inc
in
arpl
push
xchg
sbb
inc
dec
pop
out
xchg
loopne
cwtl
popf
out
ret
rcr
adc
dec
sti
mov
dec
hlt
scas
int
aaa
repz
into
sbb
fsubl
mov
ret
jg
pop
dec
jp
je
ror
inc
mov
and
imul
fnsetpm(287
mov
testb
jmp
mov
loop
daa
leave
dec
out
cmpsl
popf
in
mov
ljmp
cltd
sbb
mov
in
clc
cmpsb
in
stos
push
pop
jecxz
je
dec
shrl
jmp
mov
inc
jge
sbb
rorb
test
or
pop
incb
xor
and
bound
push
xorl
ja
adc
imul
lods
popa
mov
fs
dec
xor
inc
test
dec
cmc
and
sub
jns
daa
dec
ds
test
popl
lock
lret
mov
pop
push
andb
adc
and
inc
sbbb
sub
shrb
or
mov
dec
fisubrl
movsl
lea
cmpsl
cli
and
lret
inc
xor
lods
jg
enter
rorb
jno
mov
cmp
repnz
lock
outsl
and
ret
fsub
hlt
mov
rcrl
cwtl
js
dec
ljmp
cs
cmpsl
adc
jo
jle
in
and
imul
hlt
xchg
std
mov
push
sbb
stos
sbb
pop
jnp
push
dec
xor
and
addb
jns
dec
jae
sahf
sbb
loopne
stos
cmc
or
pop
xchg
divl
sub
xlat
lods
ss
cli
cwtl
lea
pop
xchg
insl
add
test
mov
int
add
sti
sbb
jecxz
data16
frstor
sahf
dec
cmc
inc
pop
sub
push
mov
jne
mov
andb
mov
movsl
pop
imull
jne
mov
fidivl
inc
mov
ret
jp
pop
and
mov
sbb
cmp
das
out
stos
adc
jecxz
mov
popf
les
xor
xchg
ret
les
push
shl
add
les
dec
jl
ficoml
push
inc
pop
mov
dec
sub
pop
test
mov
pop
sub
dec
mov
scas
push
push
sub
jg
insl
popf
leave
mov
push
mov
mov
pop
pop
cmp
mov
sub
adc
sti
inc
decl
stc
fldl
pop
sub
addr16
or
andb
andl
mov
leave
lods
gs
daa
inc
or
aaa
inc
pop
out
aas
or
or
ja
xchg
mov
es
adcb
inc
sub
bound
test
sbb
cmc
fucomi
cmpsb
sbb
cmp
fiadds
inc
jge
push
push
mov
and
insb
pop
lcall
push
or
inc
insl
adc
iret
dec
and
or
cmpsb
repz
dec
ss
fcomps
mov
dec
adc
lock
jne
push
xor
je
sub
and
add
add
sti
jbe
enter
and
cs
pop
jnp
sbb
icebp
inc
mov
ljmp
push
jb
stc
outsb
mov
push
and
push
dec
or
mov
mov
push
push
push
inc
in
jbe
in
jbe
incb
dec
insl
movsl
and
add
cmp
data16
add
and
movsb
or
push
xchg
sub
mov
xchg
and
push
mov
loopne
add
jge
xor
jge
jo
stos
lds
shlb
pop
bound
sahf
mov
jp
push
sbb
daa
pop
mov
js
addl
sbb
adc
mov
les
sarb
scas
scas
gs
xlat
xchg
xor
fldcw
inc
clc
cli
addr16
push
in
mov
stc
pop
mov
jae
lcall
sub
jnp
fcom
stos
adc
scas
orl
iret
divb
xchg
js
push
rcll
test
enter
pop
and
and
andl
std
add
test
sbb
push
xchg
icebp
jecxz
inc
or
mov
jecxz
push
xchg
popf
jg
add
xor
cmpsb
test
push
add
outsb
pop
hlt
push
dec
push
mov
int3
pop
jg
rcll
mov
sbb
out
sub
pop
adc
les
repz
lods
pusha
fs
ss
add
adc
cmp
jge
inc
adc
scas
adc
stos
lahf
push
push
jmp
in
jo
xchg
mov
ds
mov
jne
test
in
mov
addr16
das
adc
inc
inc
or
cmpsb
sbb
je
and
movsb
add
adc
mov
mov
lock
pop
rol
mov
lods
dec
or
cli
mov
mov
xor
enter
mov
push
movsb
incb
adc
test
call
jmp
and
mov
adc
add
cmp
sub
push
mov
imul
mov
xor
and
roll
mov
jo
test
jmp
cwtl
mov
imul
xchg
and
sub
dec
les
popa
jbe
add
mov
fimuls
jl
sahf
cmpsb
movb
inc
leave
push
inc
addb
pop
push
addl
push
inc
pop
mull
addr16
dec
jecxz
add
dec
pop
and
push
xor
ja
in
fldenv
inc
inc
mov
shl
xor
cltd
lock
and
popa
stc
xchg
flds
inc
pop
fisttpll
lret
ret
add
inc
jl
movsb
inc
pop
xchg
dec
adc
adc
add
cltd
mov
mov
add
subb
loope
mov
xor
lahf
movsl
dec
sub
dec
enter
pusha
cli
or
jne
dec
jp
push
push
pop
mov
out
aam
repz
jne
xor
aam
sbb
pop
int
iret
mov
dec
pop
shlb
std
cmp
mov
mov
rcrl
rcrb
sub
jge
jecxz
and
push
jb
popa
mov
adc
pop
enter
inc
sahf
mov
xlat
daa
dec
imul
ds
mov
fwait
pop
sti
out
sarl
pusha
xchg
imul
in
mov
jae
lret
add
inc
pop
mov
inc
pop
daa
mov
jae
fisttpl
add
scas
inc
rol
loop,pt
pushf
dec
fwait
sarb
rcl
hlt
pop
aam
divb
fs
sbb
adc
mov
mov
shll
into
jl
out
jnp
jp
mov
adc
ret
movsb
mov
add
pop
inc
lahf
and
add
mov
cmp
pop
xchg
lds
mov
popa
iret
jp
xchg
sbb
dec
or
test
inc
fsts
add
fwait
movsl
add
sub
les
arpl
insl
adc
push
xor
xor
ret
test
sub
jae
pop
adc
mov
mov
leave
and
pop
in
or
inc
push
dec
ljmp
add
popl
js
in
subl
aaa
leave
cmp
mov
shlb
ret
jne
jle
lret
cltd
dec
adc
cmc
mov
pop
add
shr
repnz
mov
dec
pop
test
jmp
lret
out
fiadds
xchg
test
pop
bound
enter
adc
mov
movl
cld
scas
outsl
repnz
xchg
sbb
mov
xchg
call
sbb
mov
add
addr16
mov
stc
lods
es
shrl
jnp
dec
out
jmp
cmp
mov
mov
cmp
push
hlt
lock
fsubr
es
popf
je
xor
cmp
imul
lret
push
gs
pushf
mov
sahf
add
ror
and
shr
out
push
inc
or
push
mov
push
push
and
and
loope
mov
cs
mov
jg
mov
out
xchg
jge
cmp
enter
adc
dec
movsb
mov
nop
pop
jp
cmpsl
dec
lds
xchg
pop
adc
loope
mov
imul
sbb
jnp
sbb
cmp
xor
jl
xor
sub
mov
adc
loopne
fnsave
and
and
fsubr
lea
insl
and
pop
andb
fcmovb
cmp
je
les
out
scas
ja
jns
test
roll
cmp
lret
push
lock
repz
or
icebp
testl
dec
cmpsb
fs
pop
popf
or
jbe
xchg
mov
or
xor
and
mov
lea
pop
xor
mov
pop
mov
outsl
cs
andl
or
dec
add
test
dec
roll
sbb
push
loop
jb
push
fimull
bound
mov
sbb
xchg
ss
imul
adc
lock
int3
inc
xchg
cwtl
and
and
jb
add
adc
ret
mov
ror
in
sub
jno
ja
inc
mov
sbbb
clc
jns
mov
stos
out
jmp
cltd
loopne
mov
pushf
inc
js
push
push
xchg
pushw
mov
movsb
movsl
push
xchg
outsb
jecxz
fsts
mov
mov
push
lcall
adc
mov
test
data16
inc
inc
addb
fisttpll
test
repz
sub
mov
cwtl
add
cmpsl
pop
ror
sahf
int3
push
push
fwait
mov
mov
jp
ficompl
pop
mov
aas
and
rclb
inc
pop
fnsave
call
xchg
sete
int3
sahf
nop
subl
outsl
cltd
outsl
xor
mulb
leave
adc
and
sti
lods
call
imul
push
jo
or
inc
pop
out
sbb
cli
inc
sti
push
mov
in
fbld
test
ret
inc
ror
xor
and
lea
lcall
or
fsubr
iret
rolb
mov
jae
mov
cltd
mov
pop
out
adc
ds
in
inc
hlt
push
lods
fstl
mov
add
adcl
icebp
out
out
andl
and
popf
xor
cltd
shr
jecxz
in
in
ficompl
rolb
call
std
jecxz
sarl
fnsave
mov
pop
dec
and
xchg
int
mov
xor
mov
jg
fbld
pop
addl
sub
lock
icebp
push
mov
hlt
movsl
mov
test
adc
push
xchg
int
and
pop
push
fcomps
sbb
pop
sub
jns
mov
clc
push
lods
loop
add
xchg
rcrb
shlb
push
and
pop
sbb
lret
aaa
add
mov
and
or
push
fadd
rcrl
lret
pop
xchg
sub
sub
lods
bound
pop
aad
xchg
push
fsubs
pop
cld
xor
sti
jns
sub
or
jno
imul
adc
dec
sub
cmpsb
mov
sub
mov
and
fs
ds
push
jb
orl
jecxz
jns
xor
sahf
mulb
std
sti
push
or
aas
or
sarb
sub
jecxz
fbld
in
cmp
or
fmull
mov
adc
or
das
iret
shll
scas
xor
push
aas
add
mov
mov
jo
frstor
sbb
and
mov
push
inc
iret
fprem
dec
dec
pop
mov
adc
stos
xchg
dec
inc
cmc
mov
lret
mov
sbb
rorb
loop
in
sbb
push
in
sbb
orb
inc
inc
lods
rcll
jl
out
cli
add
imul
shrb
pop
lock
imul
ja
mov
push
cmpsl
fxch
and
push
jl
push
sbb
xor
ss
out
std
out
pop
je
mov
inc
arpl
mov
shlb
repnz
add
scas
mov
bound
cmp
clc
dec
lcall
cwtl
das
push
mov
add
jmp
mov
xchg
dec
enter
lods
aam
sbbb
mov
mov
fninit
ljmp
or
ja
add
mov
nop
out
decb
in
or
sbb
fsubl
out
stos
mov
out
push
cmc
fdivl
stos
cmp
sub
jg
outsb
fs
ss
sbb
pushf
xchg
imul
adc
inc
out
mov
dec
jecxz
cmpsb
inc
xlat
lock
ret
pop
sub
inc
xchg
out
fcmovne
jecxz
inc
sub
imul
xchg
out
pushf
cmp
jb
mov
pushl
mov
sbb
lods
outsl
sub
idivl
mov
cld
or
xchg
in
xchg
xorb
cli
dec
aaa
mov
jns
add
shlb
inc
inc
cltd
call
xchg
cltd
insb
jg
push
test
arpl
les
xlat
icebp
ja
repz
std
mov
fisubrl
xor
in
sahf
pop
in
shl
push
mov
mov
frstor
mov
or
cwtl
outsb
cmpsb
mov
add
mov
or
loope
jb
add
add
cmp
and
push
adc
dec
jl
ljmp
stc
loop
lret
cmp
fnstenv
pop
cs
push
mov
test
adc
test
stos
sbb
ret
xchg
lods
and
sub
sub
leave
xor
and
sbb
inc
push
js
ljmp
hlt
in
xchg
jmp
fbstp
cmpsb
pop
add
mov
jo
imul
movsl
and
cld
or
mov
enter
adc
pop
push
repnz
je
and
imul
mov
enter
cwtl
lea
out
inc
lcall
outsl
pop
adc
push
dec
xchg
loopne
cmp
mov
hlt
sbb
dec
mov
xchg
and
rol
int3
cwtl
or
and
mov
js
xchg
pop
daa
or
or
adc
insl
xor
inc
xacquire
dec
add
sti
mov
lock
cmpsl
push
xchg
jl
mov
dec
popf
fwait
push
mov
scas
mov
sub
addr16
out
jl
mov
ret
lods
stos
push
ds
je
movsl
ja
inc
pop
xchg
or
or
fstps
and
ret
ja
jns
xlat
fidivs
in
jg
xchg
rolb
lcall
ja
cmpsb
sub
rol
sub
jp
or
xchg
aas
sbb
insl
sub
sub
cmp
xor
sub
sbb
adcl
jg
fisubrs
lcall
sbbl
jl
sub
fiadds
mov
xchg
loopne
or
scas
ret
push
stos
imul
sub
shlb
shll
les
pushf
xor
adc
and
shlb
jmp
xor
int3
adc
mov
xchg
mov
lods
cwtd
lcall
jmp
repz
sbb
cmp
mov
pop
xor
stos
push
mov
popf
or
into
xor
cmp
cmp
jecxz
clc
outsl
push
jnp
int3
rcrb
mov
or
cs
ljmp
cmpsb
shlb
sbb
mov
ss
ror
in
pop
cmpsb
imul
or
cmp
test
repz
push
jae
mov
ss
sti
hlt
das
shrb
fidivrs
mov
mov
or
jno
jns
adcl
sarl
cwtl
pop
cmpsl
rcll
dec
pop
sahf
sbb
mov
add
aam
jecxz
loopne
arpl
std
cmp
jl
mov
jle
push
imul
stc
test
fistpll
inc
and
shlb
int3
mov
sahf
mov
mov
push
movsb
or
sbb
adc
mov
adc
push
push
dec
mov
push
xlat
sbb
sarl
xor
out
jnp
outsb
pop
or
push
dec
xor
dec
dec
inc
test
clc
add
pop
add
xor
sbb
inc
xchg
sub
pop
rol
in
sub
dec
push
jecxz
pop
pusha
mov
and
sub
int3
mov
add
rcrl
or
pop
sub
adc
cmp
sbb
in
dec
cmp
mov
int
inc
punpckldq
pop
je
rcll
dec
sub
pusha
fdivrl
ja
test
sub
sbb
jo
addl
mov
jge
adc
xchg
xor
outsb
clc
pop
cld
adc
jge
xchg
xor
in
leave
jo
enter
lcall
outsb
pop
scas
inc
addr16
scas
mov
inc
mov
cli
cwtl
insl
andb
mov
dec
push
pop
add
adc
xor
repz
push
fwait
dec
mov
lods
stos
add
push
sub
nop
mov
ret
cmp
push
mov
aam
test
lds
or
add
inc
lods
sub
mov
push
cmp
andb
outsl
cmc
adc
nop
rcrb
bound
icebp
jg
push
daa
loop
out
adc
js
push
into
orl
jns
outsb
cmc
les
out
lods
mov
cmp
push
jae
pop
or
repnz
outsl
xchg
sbb
int
in
jg
jmp
mov
mov
xor
push
outsb
sub
lods
adc
xlat
in
pop
or
aad
nop
add
push
stos
lret
sbb
and
and
mov
test
pushf
fistpll
sub
data16
cmpsl
scas
mov
mov
pop
adc
inc
mov
pop
adc
les
inc
and
pop
add
dec
popa
cmp
in
idivb
fst
cmp
mov
or
and
or
fidivrs
neg
test
mov
fcompl
insl
repz
sbb
dec
add
sbb
int3
shll
pushf
decb
push
pop
mov
cvtps2pd
xchg
xchg
dec
sub
rcrb
mov
pushf
pop
xchg
lds
aam
cmc
enter
push
xchg
push
mov
and
xor
sbb
ror
mov
sbb
inc
aas
mov
stos
or
insl
js
push
lcall
int
sub
jecxz
cld
movsb
mov
cmp
jle
popf
xor
ja
es
roll
mov
aad
out
add
push
cmp
or
gs
filds
inc
add
shll
jns
adc
stos
out
out
int3
insl
bound
adc
sarb
daa
fbstp
test
negb
lret
dec
xor
shlb
cmp
pop
nop
jmp
add
push
add
dec
pop
popa
out
push
popf
jae
scas
or
push
rcr
outsb
test
pop
push
loope
loop
fisubs
insl
repnz
test
aas
pop
scas
loop
call
fistpl
or
inc
notl
mov
roll
and
jle
add
mov
movsl
xor
mov
jo
jp
push
xor
mov
lcall
inc
xlat
xchg
aaa
xchg
iret
loopne
in
pop
jmp
mov
popa
mov
push
jp
sti
pusha
xchg
dec
pushf
int
mov
jecxz
push
mov
adc
std
push
pop
cmp
mov
and
pop
dec
js
mov
scas
adc
aam
xchg
lret
lods
leave
rolb
bnd
mov
push
mov
dec
jns
push
cmp
pushf
mov
mov
or
adc
jle
mov
cmpsb
call
movsb
out
jg
pushf
add
outsb
sbb
xor
jb
pop
shlb
jp
fsubrl
cmpsl
shlb
and
icebp
scas
stos
andb
daa
shrb
push
sub
fmuls
inc
in
sbb
lds
es
jbe
push
loop
adc
inc
pusha
jp
add
insb
pop
push
fisubl
push
fs
jecxz
cmp
dec
push
cmp
sbb
das
ja
sbb
mov
sub
fwait
adc
popf
mov
fdivp
loope
dec
mov
mov
bound
xchg
or
in
nop
sub
ja
mov
mov
push
and
xchg
test
stos
inc
lcall
scas
mov
ret
pusha
sub
push
scas
mov
jae
sub
inc
adc
mov
inc
mov
loop
aas
out
mov
cmpsb
jbe
xchg
lods
aam
inc
lret
mov
aad
mov
mov
mov
not
call
rorb
stos
pop
adc
mov
mov
push
lahf
stos
xor
cmp
sub
add
inc
mov
mov
adc
dec
pop
daa
lods
ljmp
cs
xor
mov
test
test
aam
mov
adc
ror
push
lods
ja
les
and
rcrl
stos
gs
pop
push
dec
sub
in
add
pop
or
gs
sub
ja
lods
mov
outsl
inc
sbb
mov
hlt
shll
add
outsb
fwait
jecxz
mov
cmp
pop
pop
orl
jp
push
leave
call
xor
enter
testb
shlb
inc
mov
fnstsw
ret
mov
mov
pop
jno
mov
adc
inc
sbb
leave
cmpsb
in
stc
sahf
jb
nop
and
ss
es
lret
mov
xor
lds
in
fildll
sub
sub
aad
inc
lahf
pop
xchg
aad
mov
subl
dec
mov
stos
add
cmpsb
adc
sbb
mov
sub
mov
sub
repz
adc
sub
loope
aad
sub
mov
stc
in
xchg
dec
js
pop
in
mov
add
xor
cwtl
iret
movsl
cwtl
mov
stos
push
jbe
jne
icebp
adc
pop
push
sub
dec
add
sahf
xor
jp
lock
ds
lret
rorb
sbb
push
sub
push
jo
push
or
imul
sbb
jae
or
cmp
add
mov
dec
or
idivl
test
mov
aad
push
and
pop
xor
orl
stos
sbb
xorb
nop
mov
cmp
xchg
lea
repnz
push
xchg
or
ds
pop
aam
movsb
or
scas
mov
movl
pusha
xchg
xchg
mov
push
dec
stos
jb
lea
repnz
pop
mov
dec
imul
adc
out
jg
lret
push
insl
xchg
cmp
mov
rcll
xchg
mov
adc
cmp
lods
add
mov
pop
push
jge
xor
jecxz
lods
fsub
sbb
ljmp
adc
imul
pop
mul
mov
je
out
pop
lods
aas
pop
mov
lds
xor
mov
mov
in
pop
mov
add
sbb
push
daa
loopne
xor
dec
sbb
mov
js
sub
lret
mov
negb
mov
lret
push
test
insb
out
and
outsl
addr16
and
bound
sti
mov
pop
jo
aam
cmp
mov
stos
bound
sub
xor
aas
add
mov
scas
jge
sbb
jl
jns
mov
test
out
sahf
xchg
pusha
mov
xor
sbb
pushl
rclb
pop
sub
addr16
jecxz
fs
jmp
xor
push
fisubrl
into
ss
mov
xor
jmp
or
mull
mov
mov
cli
std
mov
in
dec
aas
xor
insl
pop
icebp
imul
push
frstor
xchg
and
adc
mov
aaa
js
mov
push
test
mov
cs
popf
inc
ret
or
xor
shll
mov
push
push
dec
push
lock
les
xchg
insl
add
imul
xor
mov
incl
mov
mov
sti
jb
cmp
push
jg
inc
mov
hlt
xchg
mov
add
dec
xchg
roll
cmp
pop
lret
movsl
stos
cld
ret
adc
sub
test
incb
inc
leave
shr
cmp
clc
sbb
dec
in
pop
pop
adc
aaa
push
dec
pop
dec
mov
cwtl
pop
inc
jmp
mov
jg
push
or
pusha
hlt
aas
cmp
xor
ss
mov
dec
out
or
add
mov
cs
and
popa
loopne
in
push
mov
pop
mov
int3
in
mov
pop
scas
jg
dec
mov
stos
pop
jecxz
mov
sahf
rcrb
in
aas
xor
inc
push
fdivrp
mov
push
jns
pop
loope
out
or
in
ds
mov
add
daa
jl
outsl
cmp
popf
xlat
cmp
sub
mov
pop
cmp
idivb
std
je
test
pop
push
sar
push
mov
jle
daa
sub
jae
or
cmc
nop
or
cld
adc
aaa
jb
lret
mov
xchg
mov
xlat
mov
jl
inc
xor
sahf
push
or
loopne
lea
bnd
adc
or
mov
ljmp
mov
enter
lcall
rorb
pop
in
adc
insb
push
inc
and
repz
inc
inc
adc
into
movsb
stos
xlat
loop
xor
pop
mov
cmp
js
cwtl
add
dec
loopne
rorl
mov
xor
addr16
mov
xorl
cs
sbb
ljmp
mov
dec
rcrb
mov
jp
lods
out
aad
and
add
mov
jge
mov
les
xchg
mov
out
xlat
and
das
xor
lds
push
shrl
aam
rcll
cmpsl
jp
out
imul
in
sub
adc
mov
push
xor
push
mov
in
add
mov
xor
adc
or
imul
cmp
cmp
scas
adc
cmp
pop
dec
imull
xchg
sbb
pop
xchg
or
dec
push
imul
cmp
mov
orb
loop
test
xchg
pop
adc
idivl
sbb
adc
cmc
mov
ds
mov
mov
test
and
push
test
push
xchg
ljmp
push
movsb
stos
loope
dec
cltd
cli
mov
jb
pushf
mov
loope
insl
xchg
push
ja
call
mov
adc
stc
sub
mov
mov
mov
add
std
xchg
inc
and
iret
ret
mov
stc
popf
fmuls
out
mov
scas
orl
mov
daa
lret
aad
dec
xchg
push
leave
xor
cmp
popa
mov
and
iret
pop
push
jecxz
icebp
subl
pop
fwait
cmc
shrl
adc
jge
xor
fwait
icebp
popa
call
call
lret
add
or
push
cmp
das
mov
mov
mov
xchg
cmp
loopne
dec
jnp
mov
loop
in
sbbl
jle
and
notl
mov
inc
mov
push
das
out
xor
jl
sbb
sub
jnp
xchg
dec
pop
sarl
cmpsl
sub
fadds
pushf
into
clc
inc
sub
fstps
sbb
pop
push
jns
or
add
mov
and
int3
ror
outsb
data16
clc
sub
test
pop
das
daa
lcall
lea
xor
push
inc
xor
xchg
fwait
lret
es
movb
lahf
inc
or
sbb
dec
into
or
pop
sbb
jbe
call
jmp
xchg
ret
loope
mov
sti
jg,pn
xchg
shl
iret
mov
std
cmp
std
jge
aam
pusha
push
jbe
adc
jns
push
jle
push
lea
push
mov
jo
aas
or
sbb
loop
sbb
pop
or
sub
adc
adc
inc
jnp
xor
paddusw
sub
inc
xchg
dec
xlat
push
jmp
sahf
lret
mov
lds
or
mov
sti
xchg
push
scas
sub
push
cmc
cwtl
into
cli
int
popf
dec
or
ret
xor
inc
xchg
imul
adc
sub
repz
or
call
jno
faddl
sti
cltd
fdivrl
sarb
jmp
pop
jle
add
clc
adc
mov
popf
jne
cltd
mov
int3
push
mov
call
pop
or
cmpsl
xchg
and
imul
mov
xchg
ds
stos
mov
mov
mov
clc
ret
addr16
and
sbb
fs
inc
xchg
push
xchg
scas
shll
es
mov
pop
add
sti
pop
fsubrp
xchg
xor
mov
icebp
pop
iret
in
jae
orl
stos
pop
call
xor
xchg
scas
dec
aas
movsl
mov
mov
test
mov
mov
movsb
sbb
add
insl
or
lahf
cli
adc
xchg
and
aam
hlt
pop
push
into
lcall
outsb
push
subw
test
test
mov
into
gs
push
aaa
in
mov
xor
pop
pop
mov
sub
push
add
fwait
mov
xchg
sti
adc
repnz
add
and
push
or
push
iret
in
push
mov
insl
mov
cmp
push
adc
push
jb
mov
jb
inc
dec
sub
pop
mov
push
mov
push
leave
insl
add
shl
xor
add
jno
ficoml
push
dec
out
pop
loopne
xor
pop
pushf
leave
dec
mov
lds
pop
pop
shl
fs
lea
pop
mov
and
adc
mov
in
xchg
sbb
sbb
mov
mov
xor
mov
jo
mov
push
and
xor
ljmp
xor
shll
sbb
sbb
ljmp
xchg
inc
test
and
fwait
adc
or
xor
jmp
test
sbb
dec
adc
cmp
sub
dec
pop
sub
add
leave
inc
frndint
dec
push
cmp
mov
jbe
ljmp
cmp
test
cmp
mov
cli
cmp
add
xchg
mov
inc
out
mov
cmp
push
aas
into
popf
scas
cs
pop
bound
xor
rorb
mov
mov
pop
mov
mov
xor
aas
jmp
pop
es
xchg
dec
fwait
mov
xchg
fistl
cs
adc
je
xor
fs
in
int3
push
test
lcall
xchg
mov
enter
add
xchg
xor
stos
stc
push
xchg
push
jmp
or
xchg
icebp
inc
inc
cmp
pusha
and
clc
pop
sbb
cli
ja
stc
sar
lret
or
push
ss
jbe
pop
and
jb
std
nop
pop
jg
imul
xor
test
inc
jne
mov
add
mov
xchg
push
je
inc
pop
fdivrs
jne
lahf
cwtl
mov
fisttpll
iret
xchg
dec
daa
jle
and
pop
cmp
addl
out
jns
lret
out
jbe
movsl
pop
lods
pop
lea
mov
out
xchg
pop
cmpsl
nop
pusha
push
je
add
push
xchg
pop
add
xchg
dec
inc
repz
mov
outsb
and
sbb
adc
mov
into
cmp
jge
jge
xor
out
push
outsl
xchg
int
mov
pushw
push
iret
and
pop
inc
sub
loopne
mov
and
ret
cmpsb
xor
clc
mov
add
xor
adc
push
cmpsl
jnp
sbb
gs
out
ljmp
jmp
inc
jno
adc
gs
test
aaa
push
ja
cld
inc
inc
sub
cmp
jo
int3
cmp
cmp
sahf
dec
jp
push
jecxz
push
cmpsl
cmp
add
cmp
loop
inc
dec
xor
add
push
or
pop
call
cltd
pushf
xchg
and
adc
imul
adc
mov
lock
bndldx
sub
inc
push
bound
in
or
xor
movb
faddl
sbb
push
and
and
insb
dec
cmp
jecxz
jle
sub
sub
xchg
and
xchg
xchg
jmp
inc
dec
leave
mov
xchg
inc
adc
mov
jo
inc
mov
or
adc
fldenv
pop
lods
call
lods
cwtl
mov
rcpps
dec
outsl
jg
in
adc
push
mov
jmp
dec
loopne
inc
jl
dec
add
test
sbb
xchg
outsb
mov
jns
loop
mov
lock
je
xor
xchg
iret
bsf
and
into
mov
push
aad
pop
in
stos
sbb
sbb
loope
xchg
push
in
aam
and
mov
dec
clc
adc
insl
dec
xchg
mov
subl
push
adc
ja
inc
xor
dec
mov
jl
cwtl
jmp
dec
and
jge
mov
aam
mov
xchg
push
mov
icebp
xlat
inc
loope
std
lds
push
repnz
dec
xor
add
lret
in
push
fisttps
xchg
pop
std
mov
dec
in
cmp
dec
sub
aam
out
scas
ffree
or
inc
lret
mov
ds
inc
jmp
out
inc
cli
and
mov
lret
xor
push
and
mov
out
ret
fs
lods
fcmovnu
pop
xor
das
mov
pop
inc
aaa
push
lods
dec
icebp
rcll
cwtl
ljmp
mov
mov
jb
daa
jne
loopne
loopne
insb
hlt
addb
xchg
dec
out
mov
fstps
jmp
lods
leave
daa
mov
mov
and
cs
in
push
lds
mov
push
pop
sahf
adc
and
xchg
and
sbb
fucomip
clc
jg
pcmpeqw
xor
mov
scas
sahf
mov
in
adc
in
push
das
inc
ret
xorl
push
sbb
mov
xor
cmp
std
sub
negb
xor
inc
push
mov
push
lahf
pop
fcmovnbe
pushf
dec
dec
aam
addl
stos
add
rorb
mov
inc
inc
fadds
sub
sub
dec
std
test
mov
xchg
dec
mov
mov
jge
pop
iret
fsubl
or
fimuls
sahf
cmp
mov
jb
int3
stc
ds
out
daa
mov
call
cwtl
adc
jo
push
fnstsw
xchg
dec
add
enter
leave
inc
and
mov
jne
add
popl
add
es
or
frstor
les
mov
push
inc
dec
add
insb
push
test
mov
outsb
inc
movsb
mov
iret
pop
push
imul
push
mov
jg
cmp
test
add
pandn
cmp
mov
ljmp
mov
daa
inc
or
jecxz
mov
xor
xor
inc
mov
cmp
xor
loop
mov
loope
into
or
dec
ficomps
ljmp
mov
pop
and
out
mov
dec
sbb
test
mov
hlt
outsl
pusha
adc
into
jb
lods
mov
sbb
cmp
mov
pop
mov
popf
inc
jno
add
iret
mov
mov
cmpsb
dec
jp
mov
and
push
adc
int
or
pop
je
push
jl
cltd
jb
std
xor
xor
pop
adc
out
test
mov
jns
push
fwait
sub
sbb
insl
out
xchg
test
into
mov
jns
fsubrp
ficompl
int3
imul
fisttpll
pop
shl
sbb
pop
idivb
leave
fisubrl
mov
jge
mov
xor
das
xor
outsb
cli
mov
and
pop
js
mov
aad
lcall
hlt
callw
das
sbb
int3
xchg
adc
cmpsb
int
push
xor
ret
outsl
or
loope
icebp
mov
in
mov
xchg
jecxz
or
repz
call
cwtl
ss
and
les
popf
mov
iret
imul
ret
int3
push
adc
insb
fldcw
sub
xchg
sbb
mov
mov
stc
mov
fidivl
cmp
ljmp
je
push
inc
in
insl
scas
fwait
sub
ret
dec
int3
cmp
jl
fs
xchg
pop
push
lret
and
fsubl
gs
pop
xor
jo
pop
jmp
rclb
push
push
sub
arpl
and
mov
cmp
sub
test
inc
lret
or
adc
aad
mov
push
mov
dec
cmpsl
mov
js
js
cwtl
jb
mov
sbb
stos
xchg
mov
enter
mov
sbbl
or
hlt
call
adc
ret
jae
sub
pop
adc
xor
ljmp
mov
mov
das
push
jl
and
loope
test
shll
adc
mov
aaa
test
cmpb
sahf
pop
mov
clc
stos
sub
addr16
push
iret
testb
fwait
inc
repnz
mov
in
repnz
sbb
mov
sti
in
xor
inc
pop
sbb
dec
and
jge
test
inc
hlt
mov
adc
push
sarl
add
pop
cmp
adc
lret
mov
call
fxam
sahf
ja
push
mov
cmc
stos
imul
fxch
ljmp
push
xchg
shll
testl
and
mov
xchg
pop
adc
and
in
mov
xchg
add
loope
and
lods
sarb
popa
and
jno
in
stos
stc
mov
inc
lds
jg
data16
xchg
xchg
dec
fsubs
addr16
test
or
mov
call
mov
and
push
jmp
jmp
push
or
pop
sub
mov
pushf
sarl
mov
add
das
cmpsb
fidivrl
cmpsl
add
sahf
mov
dec
inc
xor
push
mov
sahf
data16
xchg
cs
ret
jae
mov
icebp
mov
fwait
test
mov
add
xor
xchg
in
add
sbb
mov
sbb
inc
xchg
test
pop
xchg
dec
mov
lret
pushf
pop
jle
dec
jmp
cmp
outsl
in
aas
clc
and
push
xor
adc
jge
sahf
adc
ror
push
dec
jg
push
xchg
test
fistl
or
jg
std
out
jp
andb
push
mov
lods
xlat
xchg
andl
incl
jno
mov
push
cmp
out
mov
push
and
mov
sbb
in
mov
add
and
out
add
inc
xor
bound
jge
sub
sub
xor
fmuls
inc
inc
mov
test
dec
lret
push
lds
jge
xor
mov
clc
cmp
sub
pop
xor
xchg
xchg
mov
vpmaxub
and
ljmp
mov
cmpsl
sub
lcall
addr16
cltd
loop
movsb
dec
mov
push
push
sbb
sub
push
shll
xor
sbb
xchg
inc
adc
mov
jns
cmp
cmp
in
dec
push
sarl
jge
jnp
adc
mov
fwait
pop
pop
lea
add
test
inc
das
stos
inc
jl
cmpsb
pop
xchg
push
test
or
sbb
and
andl
cs
lock
pop
adc
stos
ljmp
lahf
push
push
adcl
pusha
jl
repz
adc
cmp
mov
and
mov
out
xchg
lods
pushf
xchg
mov
pop
outsb
or
lret
cs
hlt
dec
icebp
xor
xor
lock
mov
inc
add
stos
add
int3
and
into
fstps
push
lea
inc
cltd
ljmp
out
xchg
rcll
sub
leave
stc
shrl
or
dec
dec
jae
mov
mov
outsb
test
fldcw
mov
jp
movsb
sti
mov
ror
sti
mov
push
push
sub
cmp
cs
xor
movsl
sub
push
or
dec
dec
fldt
push
push
int3
jecxz
out
int
sahf
adc
mov
jg
scas
std
cli
fdiv
cmpsl
sub
js
mov
lea
test
stos
xlat
fimull
insb
sub
arpl
push
repnz
lock
fists
movsb
or
jo
cld
lret
pop
stos
push
adc
je
popf
repz
jmp
xchg
inc
ficompl
mov
inc
test
dec
std
mov
xchg
gs
dec
mov
leave
xchg
pop
pop
mulb
adc
sub
idiv
cli
push
fwait
int3
mov
cmp
mov
outsb
andb
test
pop
ljmp
rcrl
lds
dec
popf
xor
aaa
jle
xchg
sub
and
pop
sahf
mov
xchg
mov
push
dec
dec
bound
out
test
lea
jmp
adc
xor
nop
jp
lea
xadd
adc
clc
and
addb
cmp
fbstp
jb
add
adc
xchg
iret
std
clc
fcomps
popf
data16
outsl
xchg
cmc
stc
add
push
inc
mov
add
inc
sub
js
or
inc
xchg
gs
mov
enter
call
push
pop
into
insl
faddp
mov
xchg
sbbb
pop
mov
dec
xor
popa
adc
dec
fdivrp
adc
push
arpl
xor
mov
jmp
imul
mov
cmp
cmpsl
xor
js
call
cmp
out
mov
ljmp
mov
dec
imul
pusha
push
cmp
mov
fs
xor
stc
jle
lahf
push
sbb
in
scas
cmpsl
test
in
jl
jg
sahf
inc
push
push
lock
sub
pop
gs
stc
repz
push
fcmovnb
or
sbb
sbb
daa
sbb
in
add
cmp
jne,pn
cmp
xlat
add
je
push
inc
andl
call
cmpsl
inc
pusha
add
mov
pop
movsb
push
push
movl
mov
adc
fimull
sub
sub
mov
les
clc
fadds
pop
cwtl
aad
daa
mov
stos
mov
int3
pusha
rolb
jb
mov
and
pop
sub
cmc
or
xor
addr16
lods
daa
and
cmp
jp
bound
pop
aaa
sbb
pushf
adc
and
sti
mov
insl
mov
jns
shl
sbb
loopne
out
push
xlat
inc
cmp
pop
adc
push
js
das
xchg
pop
test
pop
int3
cmp
mov
cmp
aaa
lods
or
out
dec
push
aas
outsb
jg
xor
xchg
stc
sbb
imul
mov
jbe
cmp
mov
add
popa
add
and
stos
fwait
mov
inc
shlb
shlb
int
sub
dec
cmpsw
iret
outsl
mov
call
mov
loope
into
mov
cmp
fisubl
or
fiadds
cwtl
cmp
cwtl
lods
dec
int3
imul
cmpsb
ss
inc
subl
cmp
leave
out
rol
jp
pop
jnp
pusha
out
in
lahf
mov
inc
inc
call
pop
imul
lea
lods
sbb
test
add
xlat
sub
ficompl
insl
cltd
nop
mov
ja
jnp
dec
mov
call
out
mov
repnz
pop
das
jo
mov
idivb
or
mov
pop
cmpsb
push
adc
icebp
lock
and
mov
out
mov
jae
push
add
mov
ss
stc
or
and
popf
dec
sahf
xchg
add
xchg
daa
jle
sbb
std
push
negb
jb
scas
aam
ds
int3
xorl
sbb
push
fsubp
mov
test
sbb
push
adc
arpl
scas
adc
mov
test
outsb
sub
in
fsts
mov
mov
out
subb
out
mov
rcll
pop
aas
sahf
cmpsb
inc
dec
pop
sbb
das
jae
xchg
popa
mov
pop
or
dec
mov
jecxz
push
lods
xlat
negl
ds
std
mov
inc
out
pop
mov
jg
xor
nop
iret
cmp
xor
and
fmul
mov
int3
mov
aaa
lahf
mov
scas
cmp
sbb
or
lods
das
shl
xor
add
fnstenv
mov
int
cs
add
and
push
les
dec
lahf
xchg
into
loope
ficompl
insl
xchg
jmp
cmp
ljmp
inc
psadbw
or
shrb
negb
scas
xor
mov
ret
out
les
fistpl
aad
into
xchg
aad
adc
xchg
adc
adc
idivl
inc
push
testl
loope
jne
add
lret
mov
inc
push
mov
test
cmpl
stc
out
and
cmp
cmp
inc
mov
adc
stos
icebp
jo
out
mov
mov
adc
test
pop
jb
push
call
test
fcmovnu
and
push
xor
pop
cmc
cmc
push
pop
loope
mov
pop
pop
lret
cmp
movsl
ret
roll
xor
add
aad
mov
call
sub
adc
mov
pop
mov
push
sub
hlt
lea
jg
adc
xorb
xchg
xchg
cmpsb
jbe
mov
movsb
mov
imul
mov
lret
stos
and
out
sar
or
imul
pop
popa
sub
mov
dec
pop
imul
repnz
or
test
xchg
mov
pop
or
sahf
ljmp
popf
sbb
add
out
insb
sbb
xchg
xchg
inc
or
pop
sub
pop
jl
xchg
dec
sub
push
push
rorb
mov
push
mov
sbb
and
adc
fnstenv
lret
dec
addr16
or
lcall
xor
push
and
mov
insl
xchg
xor
dec
or
mov
gs
imul
sub
jl
mov
cmp
stc
icebp
jle
int3
sub
jae
cmc
mov
ljmp
les
ja
daa
cmpsl
outsl
and
bound
xlat
add
in
sbb
jne
mov
sub
and
push
lret
inc
scas
lahf
dec
out
push
out
dec
push
pop
out
xchg
negl
or
mov
inc
insb
push
push
ror
sub
inc
pusha
daa
mov
lcall
faddl
std
push
and
mov
scas
cmp
cmp
fistpll
pop
jae
in
and
ss
lods
inc
dec
jno
lods
aad
mov
adc
jno
sbb
cmpsl
and
mov
stc
dec
xor
and
shll
add
icebp
cs
ret
lret
and
mov
dec
movzbl
imul
movsbl
xchg
mov
lea
sub
xor
xor
imul
movswl
inc
inc
inc
mov
dec
dec
jne
add
mov
add
mov
pop
lea
inc
pop
mov
add
pop
sub
dec
dec
sub
inc
sub
and
inc
mov
mov
mov
add
ret
push
push
inc
lea
push
add
inc
add
add
mov
add
push
movzbl
inc
mov
mov
push
mov
lea
mov
movzbl
dec
add
and
push
add
mov
mov
push
dec
add
xor
sub
mov
push
mov
dec
push
inc
inc
pushl
dec
call
sub
add
dec
sub
dec
mov
inc
imul
lea
pop
ret
lea
sub
movsbl
cmp
jb
dec
xor
inc
mov
inc
dec
mov
lea
lea
inc
dec
mov
movzbl
and
or
mov
dec
dec
cmp
jb
inc
pop
mov
sub
inc
dec
mov
inc
lea
sub
add
mov
sub
lea
xor
dec
movzwl
xor
inc
dec
mov
inc
mov
test
jbe
mov
movsbl
inc
dec
add
inc
add
imul
sub
movswl
add
dec
and
inc
lea
mov
dec
mov
movzbl
dec
inc
add
inc
add
and
dec
mov
mov
and
mov
mov
inc
mov
movswl
add
mov
add
inc
imul
movzbl
add
dec
dec
jne
mov
mov
inc
lea
mov
lea
lea
or
mov
dec
dec
mov
lea
dec
inc
dec
sub
sub
sub
lea
mov
dec
dec
test
jbe
and
mov
mov
mov
inc
inc
dec
mov
mov
mov
mov
imul
mov
or
dec
inc
movswl
or
lea
add
mov
dec
and
mov
mov
mov
imul
imul
movzbl
or
mov
add
inc
dec
and
mov
mov
mov
dec
movzwl
movzbl
inc
and
mov
inc
mov
mov
mov
lea
movzbl
add
mov
add
lea
jmp
push
mov
dec
add
and
add
lea
inc
and
add
dec
add
mov
inc
and
sub
inc
mov
mov
inc
inc
dec
mov
inc
and
inc
inc
mov
mov
imul
mov
mov
add
inc
inc
dec
add
add
add
inc
cmp
je
dec
lea
inc
push
inc
call
call
inc
lea
call
call
inc
lea
imul
mov
lea
sub
movzbl
ret
sub
mov
pop
inc
ret
push
add
xor
mov
inc
add
push
mov
add
push
movsbl
push
mov
push
and
sub
inc
sub
mov
call
inc
push
dec
and
xor
add
sub
xor
neg
mov
sub
mov
add
add
inc
mov
mov
dec
mov
sub
mov
inc
dec
mov
dec
je
dec
sub
add
mov
or
add
mov
movzwl
inc
sub
lea
repnz
mov
inc
add
dec
jmp
inc
or
sub
dec
mov
dec
mov
add
inc
mov
lea
imul
mov
inc
jmp
lea
push
loop
add
or
push
in
sub
scas
mov
xor
decl
stos
xor
jo
adc
push
mov
daa
mov
je
cs
xor
in
dec
aad
loope
mulb
pop
cmc
mov
add
inc
mov
cmp
push
sti
mov
pop
add
lds
push
loopne
xor
dec
adc
outsb
push
es
testl
pop
insb
mov
sbb
mov
pop
aam
xlat
out
pusha
pop
out
push
cmp
loopne
loop
mov
mov
and
xchg
movsl
pop
cmc
rorl
push
out
xchg
mov
mov
cmpsb
push
add
scas
xchg
push
icebp
push
pop
fistl
lea
outsl
push
data16
std
jbe
out
int3
adcb
sti
rol
mov
xchg
lea
scas
xchg
je
bound
sub
sahf
les
je
sub
xchg
fbld
pop
cmp
lcall
push
shrl
mov
aad
in
and
sbb
add
jo
push
rcrb
mov
adc
sub
and
hlt
in
jae
and
lea
jnp
sbb
cmp
fdivrs
loop
bound
test
pop
sub
rolb
mov
adc
dec
orb
ds
adc
push
adc
gs
jbe
out
jmp
les
jecxz
mov
cld
and
jae
jp
adc
sbb
add
outsl
dec
pop
and
ds
cwtl
xchg
loop
pop
jo
cmpsb
fildll
mov
xchg
and
arpl
pop
mov
repnz
es
jo
mov
mov
jnp
inc
sub
and
mov
popf
dec
aas
dec
fdivrl
mov
ret
xchg
jmp
mov
mov
or
rcl
xor
jle
pop
add
pop
les
repz
dec
mov
inc
cltd
into
push
inc
push
enter
ss
sbbl
je
flds
push
inc
xchg
jbe
jnp
leave
int
inc
icebp
pop
jbe
adc
mov
jg
dec
xlat
cwtl
in
cmpsb
ret
lods
mov
mov
fisttps
hlt
out
lock
xchg
push
lods
in
fisubl
or
sub
mov
xchg
aam
insb
dec
xchg
sbb
dec
outsl
bnd
das
cld
sarb
cmp
adc
ljmp
shlb
movsl
data16
lods
push
adc
jle
add
jp
and
mov
push
notb
out
jge
mov
jne
xchg
or
sbb
loope
mov
push
into
add
repz
jb
inc
nop
cmc
pop
jecxz
mov
jo
negb
mov
push
inc
push
pop
mov
ja
je
addl
add
test
lret
lret
xchg
xchg
sub
movsb
pop
jecxz
decl
cli
or
imul
rcrb
sti
xlat
out
jns
inc
mov
daa
jmp
fsubrp
sbb
rcl
enterw
insl
push
push
or
dec
pop
sbb
popf
pop
outsl
enter
pop
ds
lahf
mov
sahf
ja
and
inc
mov
aad
jmp
cmc
leave
arpl
or
stc
int
in
mov
pop
pusha
xchg
enter
jg
mov
inc
mov
mulb
call
sbb
iret
mov
add
sub
adc
mov
out
dec
cwtl
pop
loop
add
iret
xor
jne
cwtl
xor
xlat
xor
movsb
daa
out
xor
jle
mov
and
repnz
adc
mov
nop
dec
sbbl
mov
and
push
stos
out
pop
xchg
inc
add
stc
jg
mov
mov
push
sub
fmuls
push
sbb
std
mov
inc
fsub
dec
icebp
dec
daa
in
push
rcrl
lret
push
push
orl
int
sub
xor
sbb
sbb
pop
faddp
cwtl
or
dec
daa
push
lret
sub
sbb
cmp
repz
clc
jb
lahf
jmp
xor
out
lds
ljmp
repnz
or
or
jg
dec
subl
lcall
loope
mov
ja
and
xor
sub
mov
mov
xlat
nop
push
mov
or
stos
sbb
fs
stos
push
jle
push
xchg
mov
inc
xchg
or
sbb
sub
outsb
add
in
int3
or
outsb
push
mov
inc
sub
jae
arpl
cmpl
pop
fisttpll
jnp
pop
xor
mov
mov
call
mov
js
jl
mov
sbb
xor
call
addr16
rolb
sbb
add
sub
bound
loopne
sbb
mov
and
mov
mov
push
or
xchg
jp
movsl
repz
sub
mov
push
sbb
dec
pop
inc
daa
pop
mov
bound
jg
rolb
leave
xor
test
mov
cwtl
das
fdivrl
gs
sub
sbb
fst
xchg
jp
movsb
faddl
xor
fwait
out
or
shll
or
push
inc
push
lods
xor
leave
push
int3
or
lock
arpl
inc
inc
jle
pop
or
into
fsubrl
pop
xor
mov
xchg
inc
rolb
sbb
rcrb
aaa
pushf
xlat
js
in
xchg
popa
pop
cmpsl
sub
push
mov
sbb
int3
sbb
lods
cltd
xor
adc
mov
xor
or
sbb
mov
mov
pop
outsl
mov
shl
arpl
stos
sbb
fstpl
inc
dec
xor
add
lahf
imul
mov
or
mov
cmpsb
popl
ret
xor
inc
dec
inc
add
out
aam
sub
xor
lock
xor
push
out
push
mov
fsub
inc
fistps
xor
sbb
ret
push
bound
push
pop
stos
mov
push
mov
inc
inc
int
add
pop
cwtl
jle
inc
loop
popf
aam
lcall
fstpt
push
imul
clc
or
mov
push
aam
mov
push
dec
inc
inc
repz
cmp
sub
stos
sbb
pop
sub
inc
mov
jmp
mov
das
movsl
sub
insb
hlt
movl
nop
rcr
stos
and
lods
scas
jnp
sbb
push
dec
in
push
add
test
dec
mov
xor
scas
cltd
fsubrs
jl
cwtl
es
lock
gs
mov
cmp
gs
mov
fwait
adc
lea
scas
clc
andl
and
nop
push
out
mov
jnp
push
ficompl
sti
ret
into
cmpsl
lea
cmpb
push
mov
ret
adc
es
leave
fadds
repz
xor
inc
sbb
aad
xor
cmpsl
mov
cwtl
cmc
cmpsb
test
je
lock
dec
xchg
aas
or
mov
fcomi
cli
das
pop
add
das
roll
adc
push
or
test
push
jp
jl
pop
and
xlat
push
aas
jo
cmp
xor
jmp
mov
mov
insl
mov
les
dec
sub
addl
mov
daa
pushf
aam
stc
cmp
ss
mov
add
arpl
jns
xchg
cmp
or
imull
push
sbb
loop
mov
mov
adc
inc
mov
ds
jae
test
testl
add
push
shlb
mov
cmp
push
xor
das
outsb
jmp
lea
mov
mov
jmp
outsb
inc
push
dec
cmpsl
pop
and
mov
push
mov
std
add
fmull
pop
and
push
mov
stos
jecxz
scas
outsb
sbb
xor
pop
je
and
testb
aas
iret
inc
sarb
in
push
je,pn
push
sub
push
pop
jb
push
and
xchg
popf
cltd
mov
fdivs
adc
sbb
cltd
cmpsb
mov
xlat
fists
jl
sub
lods
xchg
mov
sbb
movsl
pushf
enter
lods
mov
lods
mov
jno
inc
or
mov
xchg
aas
jmp
stos
dec
pusha
inc
xor
je
dec
stc
push
mov
inc
xchg
push
dec
in
xor
xchg
push
pop
push
loop
mov
jns
fistl
das
dec
out
sbbb
cs
xor
push
cmpsb
outsb
mov
dec
mov
adc
sti
int3
inc
adc
mov
sahf
add
sbb
pop
lods
mov
es
add
ficoms
hlt
data16
push
sti
mov
out
mov
cmp
and
or
xchg
add
shl
mov
out
ret
jo
cwtl
dec
mov
lods
inc
rcrb
lods
sub
mov
js
dec
lahf
pusha
xor
shrb
repz
mov
sub
jl
pop
mov
or
das
call
out
mov
jge
mov
sarl
mov
rol
lods
jno
fwait
xchg
jl
cmp
jle
lret
push
cli
nop
mov
lret
sbb
lret
mov
arpl
inc
aaa
movsl
xchg
rorl
push
dec
cmpsl
xor
jnp
add
dec
inc
dec
lcall
lods
jg
mov
mov
subb
xor
sahf
paddd
or
sbb
lods
and
push
lret
ljmp
add
adc
mov
mov
push
sub
and
popf
in
call
pop
addr16
pop
inc
sub
subl
mov
push
popf
mov
xchg
pop
dec
sbb
ret
mov
ja
mov
leave
test
out
outsb
leave
cmp
stos
fwait
cmp
pusha
inc
cmpl
cmc
stc
inc
mov
push
shll
out
mov
pop
pushf
ja
in
inc
jno
push
or
roll
cld
push
imul
fsubl
inc
push
jle
sbb
sbb
les
shll
mov
xor
sahf
xchg
in
lcall
mov
push
and
in
and
enter
and
push
and
enter
inc
jmp
mov
mov
fdivr
and
call
popf
in
jg
add
inc
outsb
or
int3
mov
pop
cmp
in
shlb
mov
xor
lret
mov
mov
jp
jb
mov
jbe
sbb
nop
cwtl
dec
add
sub
jl
cmpl
mov
xor
inc
pop
pop
subb
mov
adc
iret
dec
sub
imul
movb
int3
mov
lahf
call
add
cmp
pop
test
pop
xchg
adc
call
mov
lock
xchg
adc
mov
mov
out
repz
push
cltd
pslld
shll
push
fisubl
lret
imul
mov
jae
cmp
lods
xlat
test
and
xor
push
push
fsqrt
sub
mov
daa
dec
scas
stos
fwait
cmpsl
pop
imul
xchg
adc
mov
add
xchg
push
pop
iret
fdivrl
cmp
jmp
and
jg
scas
adc
push
into
sub
repz
xchg
out
pop
add
mov
inc
lods
pop
test
fstps
lods
inc
inc
jnp
test
sub
xchg
push
pop
arpl
pop
test
mov
inc
imul
popa
scas
das
iret
call
push
jno
repnz
in
pushf
cmp
cmpsb
rcll
pop
es
pop
repnz
pop
ret
lret
mov
xor
imul
fs
test
rcl
xchg
seta
stos
mov
jb
jb
mov
push
es
mov
movsl
pusha
mov
cmp
stc
inc
rcll
push
cmpb
cld
jae
xchg
int3
xor
inc
insb
out
ljmp
inc
lret
mov
xor
sbb
cmpsb
imul
xlat
in
xlat
dec
aas
stos
out
ljmp
dec
xor
or
add
push
sbb
push
mov
outsb
dec
mov
repnz
mov
ljmp
repz
cmpsl
push
jge
paddw
mov
lret
sahf
repz
pusha
mov
mov
outsb
repnz
mov
ja
cwtl
cmpsb
and
fistps
xor
sub
sbb
stos
add
sbb
das
out
insl
in
in
lods
dec
ds
jo
mov
push
js
sbb
xchg
and
xor
aam
test
sbb
xor
inc
and
sbb
or
sbb
das
int3
pushf
push
stc
jge
es
int
shll
imul
ds
movsl
cltd
shll
fidivs
scas
subl
and
inc
inc
mov
and
sbb
or
shll
pusha
movsl
out
pushl
mov
ds
inc
mov
mov
sub
inc
jae
movsl
inc
loope
xor
xchg
mov
jnp
cltd
push
sbb
mov
mov
shrb
cld
cmpl
mov
movsl
or
cmp
scas
sub
lods
sbb
sub
insl
mov
daa
data16
andb
adc
pushf
jecxz
fdivrs
add
dec
insl
jne
push
inc
out
stos
push
sbb
into
fwait
ret
cmpl
loope
add
push
cld
pop
imul
fdiv
push
and
mov
cs
icebp
add
add
mov
loopne
dec
imul
ljmp
or
out
inc
sub
in
cmp
push
mov
rcr
loop
rclb
adc
subb
mov
pop
scas
push
sbb
xlat
repz
push
test
dec
xchg
sbb
mov
push
mov
lea
lea
call
inc
mov
call
inc
push
sub
call
inc
sub
mov
sub
inc
lea
call
or
inc
lea
mov
dec
mov
sub
inc
inc
mov
inc
call
dec
add
lea
inc
and
call
and
add
call
sub
dec
inc
add
and
inc
inc
inc
pop
and
inc
dec
add
add
pop
and
mov
pop
or
xor
add
add
pop
sub
mov
add
lea
mov
inc
inc
inc
pop
inc
imul
pop
or
inc
mov
mov
dec
call
imul
inc
movsbl
mov
ret
inc
inc
push
mov
sub
push
mov
xor
push
mov
imul
push
inc
inc
push
mov
dec
mov
dec
or
push
movsbl
ret
push
xor
push
sub
mov
lea
mov
push
inc
xor
imul
call
pop
ret
jmp
mov
sub
pop
pop
ret
push
dec
imul
sub
mov
lea
dec
sub
lea
imul
dec
imul
sub
or
dec
mov
mov
inc
inc
sub
movzwl
dec
movzbl
sub
lea
movswl
sub
pop
ret
sub
imul
mov
lea
inc
mov
imul
lea
mov
mov
inc
mov
mov
or
xor
sub
add
mov
mov
dec
inc
mov
add
add
dec
inc
mov
cmp
jb
mov
push
inc
lea
push
dec
mov
push
mov
xor
xor
lea
mov
xor
movzbl
inc
xor
add
mov
push
lea
add
push
inc
or
pop
add
sub
inc
sub
movswl
sub
lea
sub
sub
and
xor
add
imul
mov
add
mov
inc
inc
movzbl
dec
imul
inc
add
mov
lea
add
add
movzbl
add
inc
inc
add
lea
inc
mov
imul
mov
inc
imul
dec
jmp
add
inc
add
push
add
mov
adc
add
es
add
popf
inc
add
add
mov
inc
add
add
add
mov
or
iret
outsb
in
fidivl
stos
jns
lea
jecxz
add
push
xor
xchg
adc
pop
stc
and
ret
movsb
adc
pop
pusha
and
test
jbe
xor
pop
cmp
in
aam
pop
sbb
mov
push
and
repz
xchg
add
adc
add
std
sbb
decl
stos
dec
sbb
gs
shrl
jb
popa
push
call
adc
sbb
adc
mov
iret
xchg
mov
faddl
mov
xor
fs
lret
push
outsl
xchg
pop
add
adc
mov
xor
jno
out
push
jecxz
adc
cld
push
cld
and
xchg
fs
repz
fiadds
mov
pushf
or
xor
movsb
mov
js
imul
pop
mov
fsts
inc
pop
dec
sub
movsl
fsub
pop
mov
ljmp
dec
enter
and
fdivr
mov
shr
lods
fistpll
jge
sub
jle
dec
fldenv
sahf
scas
dec
bound
xor
inc
imul
pop
push
cmp
pop
mov
int
mov
pop
cmp
pop
adc
fwait
push
ficoms
mov
cmp
dec
movsl
repnz
mov
outsb
in
mov
nop
aam
adc
stos
jge
sbb
or
fildll
iret
ret
mov
cmpl
mov
sub
aas
dec
in
fucomip
jp
add
push
pop
mov
lea
sbb
adc
jle
stos
mov
mov
add
and
xchg
pop
inc
sub
fcoms
lret
push
jmp
addr16
rcll
or
jbe
data16
lods
push
lcall
jae
inc
mov
repz
ds
gs
or
insl
outsl
incb
call
and
xlat
js
xor
leave
lcall
or
sahf
iret
xor
xchg
jp
rcrb
cmp
fscale
or
clc
jnp
std
xchg
xor
lea
jne
fdivs
adc
and
push
xor
adc
clc
loop
mov
mov
loop
sbb
imul
xor
sar
sub
mov
negb
call
pop
mov
insb
push
rorl
ffree
xor
xor
cwtl
sbb
sbb
mov
dec
xchg
mov
mov
test
inc
jle
cmc
pop
mov
and
psadbw
inc
cs
xchg
mov
mov
stos
cwtl
mov
jmp
xor
or
inc
adc
cmp
inc
add
lea
test
clc
mov
dec
fwait
mov
push
popa
pop
es
dec
stos
push
and
adc
aas
fstp
jmp
sbb
sbb
xor
and
lret
stc
dec
mov
lock
int3
jns
sbbl
fcmovb
mov
mov
xor
mov
xchg
pop
pusha
dec
push
push
cwtl
into
std
ljmp
inc
push
test
mov
mov
cli
mov
jge
cmp
fcompl
pushf
jge
cwtl
adcb
cmp
popf
pop
stos
pop
dec
fidivl
xchg
mov
popa
cwtl
and
icebp
push
xchg
cltd
es
cwtl
pop
fisubrl
adc
cltd
fsubrl
shlb
fmuls
push
sbb
bound
cmp
or
icebp
xor
loope
mov
mov
sub
sub
negl
lea
dec
cmp
push
or
dec
nop
imul
and
cmc
ret
mov
cmp
jnp
mov
cwtl
lock
inc
jge
sbb
jl
clc
fcompl
ss
movsl
push
movsb
loope
push
jge
insl
add
ss
stc
pop
outsb
and
pop
push
loop
fcompl
add
pop
stos
pushf
outsb
mov
dec
fcomps
es
cmp
sub
in
xchg
mov
daa
rcll
mov
sub
cmp
or
add
inc
lods
cmp
lods
pop
ror
fsts
xchg
lret
mov
cmp
js
loope
js
adc
add
cld
ss
in
cs
inc
inc
mov
mov
pop
test
fdivp
clc
or
bound
push
dec
loopne
pop
imul
jp
fadds
dec
cld
push
jp
ror
rcrl
jne
addr16
and
scas
inc
and
ds
pop
jno
adc
movsb
das
pop
cmp
xor
jns
pop
fimuls
cmp
cmpsb
sti
and
jl
mov
popa
push
dec
outsl
xor
mov
fidivrl
jp
xor
xchg
cmp
call
faddl
addl
mov
or
js
mov
dec
fstpl
xchg
lds
and
mov
xchg
adc
xor
das
in
sub
jmp
test
lds
pop
out
push
insl
push
mov
jns
je
andb
mov
sahf
push
jmp
andl
mov
sub
mov
loope
add
xchg
addr16
or
cltd
jns
mov
cli
repnz
xor
and
jle
insl
lcall
les
ret
out
push
ja
dec
or
push
push
push
push
mov
jbe
xchg
xchg
test
nop
lock
jno
call
leave
jecxz
into
cwtl
pop
cmp
sub
cmp
dec
das
and
mov
aam
mov
rcrl
mull
rorb
jne
repz
and
add
mov
sbb
daa
xchg
xor
xor
sbb
jle
mov
xchg
push
into
hlt
sub
pop
sbb
xchg
jbe
cmc
add
pop
sbb
faddl
mov
inc
test
inc
icebp
push
fmul
icebp
push
add
insb
sub
les
dec
test
loopne
or
imul
cmp
jne
xchg
ds
cwtl
icebp
xchg
pop
out
js
and
jno
in
pusha
data16
inc
cmpb
test
rcrl
out
ss
push
ret
dec
fistpl
imul
pop
mov
adc
push
xchg
cmp
mov
mov
or
sbb
sub
xchg
sbb
loope
mov
ss
mov
lods
push
in
jmp
inc
test
jp
in
mov
das
mov
sbbl
dec
movsl
or
mov
cmp
push
cmp
in
sbb
in
mov
int3
sbb
into
xchg
push
repz
popa
stc
push
int
mov
std
js
xor
std
cmp
stos
dec
loope
cmp
aam
outsl
gs
push
jae
mov
jno
bound
jp
or
push
sbb
mov
mov
cmp
inc
ficompl
mov
mov
aaa
inc
inc
nop
insb
jmp
pushf
dec
dec
pop
fs
push
je
xchg
push
subl
jnp
icebp
hlt
add
out
rdmsr
pop
jb
push
enter
roll
cmp
mov
jp
fnstenv
pop
loope
mov
shlb
xor
xchg
add
jge
loopne
push
add
pop
in
je
scas
pop
test
mov
mov
mov
xchg
mov
leave
sahf
bound
jns
mov
jo
adc
ss
rclb
stc
fldl
xchg
or
and
inc
repnz
cltd
xchg
sub
insl
mov
xor
push
rol
add
shrl
mov
cmp
sti
cltd
fs
je
roll
stos
dec
push
ret
or
cmpsl
xchg
add
bound
cli
cwtl
ja
xor
adc
adc
mov
dec
lret
ret
cmpsl
mov
sbb
testl
lods
les
jae
mov
cltd
mov
inc
or
pop
imul
xchg
xchg
test
adc
lock
repz
mov
and
imul
mov
andl
fisttpll
push
std
xor
jl
gs
or
push
gs
jecxz
cs
icebp
addr16
gs
pop
loope
mov
sbb
jno
lods
notb
xchg
out
das
cmp
mov
sub
jge
and
and
ja
aad
in
pop
aad
orl
ret
loope
pop
int
mov
jae
jne
and
mov
pop
mov
inc
push
aam
adc
dec
jg
mov
cltd
or
add
out
push
adcl
je
mov
test
ja
pop
lds
dec
cmpsl
sbb
shll
movsl
aam
cmp
jle
outsb
mov
mov
push
pusha
in
lds
cltd
nop
mov
repz
push
or
ret
cmpsb
mov
movsb
iret
xlat
clc
cs
rolb
popf
aad
jae
clc
xor
sub
push
mov
push
push
xchg
out
sti
loop
mov
clc
mov
test
shl
push
shl
push
dec
leave
in
mov
aaa
and
mov
adc
and
stos
push
outsb
mov
or
sbb
mov
mov
hlt
fisubrl
jg
pusha
jmp
or
ficomps
lods
push
scas
push
jmp
aas
lods
pusha
sti
aad
fwait
dec
pop
call
out
xor
adc
sub
stos
scas
sub
xchg
sbb
sbbb
xchg
dec
stc
arpl
inc
leave
push
mov
sbb
jnp
lods
lods
lock
mov
and
arpl
push
pop
sarl
loope
jnp
cmpsb
adc
cli
lods
cmc
mov
mov
aad
push
push
in
sti
sub
jecxz
lds
js
inc
mov
mov
mov
xor
mov
push
ret
and
repz
pop
mov
mov
gs
lahf
int3
imul
js
ret
push
push
xor
adc
mov
xor
xchg
fdiv
scas
sbb
adc
lea
fidivs
xchg
movsl
xor
sub
mov
push
into
aad
andb
lods
jae
mov
addr16
cli
push
sbbb
shl
push
cltd
mov
jp
test
xor
lret
cmpsb
incl
sbb
out
pop
pop
cmp
or
leave
sbb
xorl
pop
sub
mov
test
add
xor
and
shrl
data16
push
jp
cmp
mov
ret
outsb
jge
sar
fs
movsl
hlt
and
fistl
xchg
mov
scas
or
xchg
mov
pushf
jns
add
test
mov
sub
sbb
inc
fmuls
fidivs
push
stos
dec
xchg
mov
ret
es
cmc
fwait
or
xlat
ja
idivb
fwait
out
adc
cmp
and
mov
sahf
add
test
cmc
das
pop
cmc
cmpsb
insl
or
pop
or
or
dec
lcall
push
cmpsb
data16
lcall
push
pusha
xor
movl
clc
jle
sbb
pop
loopne
cmp
push
jl
cwtl
mov
ret
ljmp
arpl
cli
jnp
jno
mov
or
out
mov
and
jne
cld
pop
ja
cmpsl
inc
out
pop
adc
inc
xor
inc
pop
ficompl
ret
test
out
dec
arpl
shlb
push
pop
fwait
adc
fstpt
je
jb
mov
push
cs
inc
inc
lret
loope
movsb
out
jb
ja
ljmp
xchg
xchg
push
xor
call
push
add
adc
jne
lods
mov
cli
in
add
and
xor
ret
adc
and
add
out
push
mov
das
add
sub
add
sub
loop
sub
test
fistl
test
pushf
hlt
flds
icebp
bound
test
sub
ja
in
inc
mov
or
mov
or
mov
sub
push
mov
test
and
pop
adc
pop
jbe
scas
pop
lock
loop
fimull
stc
add
pop
sbb
daa
shlb
jmp
inc
xchg
and
xchg
pop
push
xlat
cmp
scas
dec
jbe
and
ret
and
andl
std
lds
movsl
jno
out
mov
pop
inc
pop
xor
sahf
mov
out
stos
mov
push
push
jmp
adc
sub
jbe
add
add
push
jp
and
es
mov
inc
enter
icebp
sub
or
and
sub
jecxz
mov
lret
stos
pop
aas
imul
sbb
push
sub
mov
inc
mov
cmp
es
xor
and
popa
rcrb
mov
xchg
out
mov
scas
jb
out
pop
dec
call
out
jae
sub
sub
in
mov
sbb
fs
pop
lock
mov
sar
imul
rclb
out
in
push
jle
add
sbb
aad
xchg
jne
inc
inc
mov
cmp
stos
js
rcll
pop
mov
dec
je
jbe
mov
fs
divb
push
mov
stos
loopne
add
movl
repnz
or
jge
and
imul
in
test
popf
fldt
inc
test
fisubs
out
ret
shr
bound
clc
push
adc
or
scas
dec
sub
cmp
mov
xor
push
adc
dec
dec
or
inc
push
stc
ds
aaa
int
daa
push
lret
test
fcomps
xlat
push
xor
cwtl
xlat
push
ret
cld
mov
xchg
notl
rcll
sti
fwait
arpl
fidivrs
inc
add
std
push
dec
lods
jl
push
out
jo
xor
sbbb
dec
lret
std
in
ret
mov
sbb
push
push
jmp
stc
jo
mov
rcrb
arpl
adc
jns
mov
or
cltd
xchg
pop
int
fs
fimull
gs
in
inc
and
mov
xchg
push
cmpb
pop
scas
jns
je
inc
pop
hlt
push
jg
cs
inc
pop
test
int
sub
mov
xchg
push
cmp
and
inc
stos
repnz
cmpl
inc
jp
adc
imull
rorb
dec
lods
imul
mov
fwait
adc
mov
or
add
xor
xchg
push
sbb
lods
xor
test
mov
inc
dec
xlat
inc
mov
addr16
pop
lods
fimull
sub
push
add
addr16
pushf
adc
jb
fldenv
inc
enter
scas
jmp
lea
push
aas
pop
or
idivl
fisttpl
pop
pushf
mov
adc
fnstsw
jge
mov
ss
icebp
xchg
adc
adcb
mov
lcall
ds
pushf
incb
inc
jmp
mov
stos
mov
inc
mov
scas
inc
or
notb
sub
test
xor
clc
xchg
out
and
and
mov
adc
insl
test
mov
or
push
lcall
add
or
fimuls
jg
mov
add
sub
push
add
mov
inc
pop
fs
dec
xorl
push
in
aam
add
xchg
notb
fcoml
popa
pop
mov
push
mov
jl
mov
ja
or
adc
and
shr
call
lods
sub
sub
mov
data16
adc
iret
sub
mov
sahf
outsl
jae
cltd
loop
cmp
xor
mov
pop
je
adc
push
out
popf
rol
jle
and
stos
push
mov
mov
inc
cmp
pop
lret
aad
adc
cmp
fstps
push
xor
add
mov
scas
adc
imul
mov
sahf
add
adc
lock
mov
sbb
sahf
cwtl
add
jge
sub
fsubrl
pop
pop
roll
ljmp
jns
repz
inc
add
fcmovbe
fidivrs
ret
dec
pop
jecxz
ret
xchg
xchg
mov
insb
repnz
fisttps
mov
push
movsl
cmpsb
shl
push
pop
sti
pop
aaa
xor
sbb
jo
bound
popa
mov
jge
shll
les
mov
fists
clc
mov
out
test
and
out
repz
in
push
pushf
and
les
into
or
mov
cltd
add
insb
cmp
sbb
fisubrs
xchg
lret
repz
mov
push
dec
sbb
adc
leave
fs
aaa
mov
mov
jle
cmp
sti
pop
bound
movsb
jno
jl
jmp
in
adc
mov
imul
dec
sub
mov
or
enter
insl
es
into
mov
dec
movsl
aaa
mov
jbe
movsl
out
pushl
adcl
das
push
shlb
std
and
sbb
jmp
jg
mov
pop
xor
into
mov
xchg
adc
inc
mov
dec
xorl
xlat
ljmp
xchg
mov
scas
inc
cmc
mov
inc
lea
imul
mov
ret
mov
push
and
cltd
cmp
ss
lock
push
cmc
pop
sub
into
ja
push
add
add
mov
add
pop
lahf
cmc
dec
inc
cmp
ljmp
pop
dec
cmp
fwait
adc
pop
js
decb
addb
dec
cmpsl
movsl
dec
or
and
sbb
sbb
in
mov
sti
test
gs
jae
sbb
inc
sbb
inc
jmp
cmp
xor
pop
lret
ss
add
mov
lods
sbb
rorl
cmp
push
in
inc
add
nop
cmp
ja
sbb
adc
neg
movsb
pop
into
stos
add
mov
xchg
sbb
jg
mov
lea
xor
mov
cmpb
out
push
jg
rorb
or
jnp
push
enter
xor
cmp
sbb
dec
jmp
xchg
adc
rcrl
scas
adc
shll
mov
inc
sub
fmuls
rclb
dec
rorb
jp
out
jbe
dec
cmp
push
ret
cmpsl
or
and
imul
cmp
xor
lods
push
ret
test
andl
cwtd
mov
fistps
nop
xchg
das
sbb
mov
push
jns
and
mov
andl
add
mov
push
stc
imul
mov
outsl
std
arpl
outsb
jne
mov
dec
mov
lahf
jbe
je
lods
icebp
clc
jae
stos
out
adcl
clc
cmp
cli
dec
cmp
lcall
testb
rolb
mov
movsb
mov
orb
push
mov
stos
xor
inc
orl
lds
es
pop
aaa
and
ss
mov
xor
sahf
bound
push
jo
mov
pop
lea
mov
mov
jle
lds
adc
clc
lahf
xchg
std
adc
sbb
in
roll
popf
fldl
lods
fistpll
pusha
stc
add
pop
clc
adc
jmp
adc
adc
push
adc
xchg
scas
pop
in
jb
sbb
imul
mov
mov
ss
pop
mov
push
bound
push
sbb
sbb
ds
aad
pop
push
arpl
push
mov
xchg
push
cmc
loope
inc
xor
add
out
jae
mov
data16
add
inc
mov
negb
jmp
cld
dec
jne
xlat
stos
data16
xchg
repnz
cmp
fwait
add
fstp
shlb
sbb
xor
adc
sarb
adc
cld
icebp
xchg
test
and
test
ficompl
popf
out
xor
es
sub
cmp
sti
xchg
aam
xor
and
lods
fnstsw
xchg
rcrb
pop
test
mov
mov
inc
sti
pop
xlat
xchg
push
das
jnp
pusha
jmp
add
cmp
hlt
push
loopne
aaa
push
fistpll
inc
idivb
pop
sti
xlat
cmc
pop
xor
jns
scas
movsl
nop
mov
int
stos
in
mov
sti
pop
jo
rclb
addr16
cmp
mov
int3
xchg
pop
fs
adcl
mov
push
stos
ror
mov
push
loopne
loop
jecxz
pop
rorb
adc
cmp
or
cmp
in
jae
mov
fs
jge
rep
mov
orb
lret
jb
stc
add
push
adc
into
test
ds
xchg
adc
int
jmp
idiv
pop
fmull
cmp
jne
jp
sub
jnp
jle
cmp
inc
inc
cmc
and
mov
mov
in
xor
cmp
pmuludq
and
and
pop
stc
cmp
jg
sahf
mov
push
inc
ljmp
imul
add
mov
sbbb
xor
pop
ret
popa
jg
je
sahf
xor
fstpt
arpl
sbb
add
aad
pushf
sbb
jns
test
or
fisubrl
lcall
test
or
dec
push
or
cmpsb
dec
cltd
repz
pop
sarl
psrld
add
pop
sahf
and
push
inc
cld
test
inc
in
sub
lds
aam
sbb
imulb
mov
loop
pop
ljmp
push
jb
and
pop
jae
mov
pop
insl
add
mov
pop
add
dec
mov
ret
dec
fdiv
lods
aaa
cmp
shlb
enter
loop
xor
xor
jae
out
push
addr16
cmp
xchg
scas
ret
mov
in
fisubl
inc
iret
loopne
xchg
lcall
xchg
cmp
je
add
sti
mov
aas
daa
test
lock
add
push
add
mov
xlat
mov
xchg
pushf
cmp
mov
dec
mov
test
adcb
addb
dec
cmp
mov
fnstsw
ss
ffreep
or
jg
aas
stos
xchg
adc
jns
jae
cmp
push
fsubl
pop
push
enter
in
pop
mov
pushfw
and
out
and
stc
and
repz
bound
mov
pop
enter
xor
xlat
jbe
insl
aad
shl
cmp
push
mov
mov
mov
outsb
hlt
lods
insl
push
int3
in
cmp
jmp
cltd
mov
or
mov
cltd
mov
push
or
mov
pop
outsl
ja
shr
pslld
lock
fxch
push
dec
fcmove
adc
imull
add
subb
or
cmp
sbb
repz
inc
xchg
aad
pop
mov
adc
mull
dec
push
and
sub
cld
leave
add
icebp
cmp
imul
mov
pop
int
xchg
testl
shlb
push
and
lahf
fistpl
xor
into
dec
out
imul
sub
pop
and
iret
jne
and
push
inc
xor
in
jne
push
cmpsb
push
hlt
incl
fcmovu
mov
mov
cld
insl
jg
mov
ret
fists
fistps
in
fildll
push
jle
xlat
ret
adc
add
popf
in
mov
dec
rclb
aam
aam
mov
std
mov
or
fnstsw
popf
lea
inc
ret
xchg
outsb
sub
mulb
int3
lea
add
jl
mov
jns
sbb
dec
cmc
inc
roll
ljmp
jno
xor
cltd
adc
test
aas
pop
ss
jge
cmp
jecxz
jge
popa
pop
jecxz
fisubl
inc
rcrl
outsb
movsl
cli
cmpsb
fcmove
movsl
xor
push
insb
popa
push
xchg
cs
mov
outsb
sbb
mov
testl
or
push
add
pop
stos
mov
mov
je
xor
sub
mov
mov
das
sbbb
out
sbb
xor
mov
jo
std
pop
insl
mov
push
ror
xchg
pop
mov
fiadds
ret
and
lods
push
mov
xor
shlb
scas
ficoml
lret
and
dec
and
push
hlt
pop
jne
fists
and
mov
mov
mov
cmp
mov
test
ljmp
sbb
pop
adc
bnd
movsb
pop
ds
or
call
cmp
sbb
and
in
xorb
ja
jl
lret
adc
pop
xor
and
push
cmp
into
dec
test
push
pushf
mov
pop
jne
mov
mov
push
push
pop
pop
cmpsl
pop
stos
dec
and
pop
xchg
stos
jle
cmp
pusha
mov
push
xchg
rclb
arpl
orb
mov
fisttps
cmc
std
lods
jnp
iret
jnp
adc
jecxz
and
cltd
test
aam
sbb
push
lahf
mov
test
push
sahf
jno
or
fsub
fwait
leave
clc
sti
push
push
std
clc
jb
pop
adc
inc
push
xchg
js
loope
fdivs
mov
cwtl
push
fmul
pop
mov
leave
pusha
outsb
fisttpll
add
add
stos
xor
movsl
pop
push
pop
ret
mov
xor
subb
pop
cmp
push
outsb
add
enter
pushf
or
stc
inc
rorl
dec
cmp
push
je
out
mov
add
iret
xor
mov
mov
adcb
testl
lahf
adcl
push
add
or
jns
xchg
pop
dec
out
and
mov
test
call
or
inc
jnp
pop
pop
xor
cmp
pushf
inc
lods
scas
jmp
sub
xchg
inc
inc
outsb
pop
popf
shll
xchg
dec
pop
push
mov
icebp
repnz
add
repz
push
aaa
mov
out
xchg
out
out
iret
push
push
jge
xchg
xchg
fildll
in
and
test
inc
xchg
or
cmp
sub
jecxz
sti
mov
push
xor
movsl
cmp
cmp
daa
sub
mov
cmp
jecxz
pop
out
fisttpl
pop
shlb
movsl
data16
xchg
xor
in
mov
cmp
mov
lcall
and
and
adc
shl
rcr
adcl
ret
ds
pop
insb
push
dec
or
add
into
add
xchg
adc
mov
shlb
jle
lods
imul
stos
mov
pop
jo
shll
adc
pop
in
stos
mulb
pop
dec
jge
shlb
dec
mov
add
fisubl
cld
std
sub
sub
cmpsb
pop
cmp
out
mov
cmc
xchg
push
cmc
sahf
cld
or
idivl
push
leave
pop
and
mov
loop
inc
cmp
ss
out
and
sarb
jl
xor
xor
pop
push
shrb
loop
jmp
subb
je
push
jge
push
in
adc
add
test
out
sub
fstl
mov
adcl
dec
addr16
mov
push
cmp
inc
test
push
andb
xor
int3
lods
mov
js
lds
xlat
clc
push
xchg
jb
call
jnp
lret
in
stos
lahf
in
cmc
fmulp
stos
sbb
sub
pushf
cs
out
pop
lcall
sbb
loopne
imulb
sub
push
pop
shrl
les
inc
ss
aas
xor
add
pop
xchg
and
jae
inc
rorl
lock
mov
mov
lds
lret
call
repz
sub
pusha
sbb
mov
fcom
dec
xchg
push
add
push
mov
insb
jne
dec
std
sbb
ret
jb
cltd
rclb
and
xchg
jb
lock
and
cli
loopne
inc
jmp
xchg
jnp
cmpsb
add
les
mov
movl
test
fcoms
popa
or
or
test
inc
xchg
pop
xchg
dec
int
stc
or
imulb
adc
push
out
xor
inc
hlt
adc
mov
jecxz
jbe
stos
cmp
subb
pop
or
in
js
xor
dec
jno
int3
inc
pop
xchg
outsl
sbb
ret
ljmp
ss
fmul
aaa
pop
jb
rorl
in
sbb
cmpsb
cmp
lds
and
pop
xchg
pop
or
lods
ret
lods
cmc
mov
imul
cmp
push
push
loope
or
je
mov
repnz
rcrl
jbe
addb
pop
sahf
mov
mov
mov
subl
out
inc
jge
test
mov
scas
pop
lret
mov
mov
frstor
or
and
mov
cmpsb
fistps
leave
nop
cmp
mov
add
inc
movsl
addr16
sbb
mov
dec
xchg
inc
or
sbb
mov
inc
xchg
sbb
in
popa
popa
stos
scas
bound
adc
mov
xchg
or
std
das
dec
fstpt
jb
clc
dec
mov
popf
ljmp
movsl
lock
mov
out
push
insl
in
scas
loopne
dec
test
xchg
push
test
mov
in
test
hlt
lods
jmp
fadd
jo
lds
sub
sbb
stc
xchg
and
pop
out
imul
pop
lods
mov
mov
insb
test
in
jnp
bound
pop
xchg
scas
lock
inc
call
test
js
mov
shl
pop
pop
mov
lea
add
inc
push
push
cmp
cmp
jo
ret
push
cld
iret
cwtl
pop
and
push
push
lods
add
test
imul
xor
stos
ss
imul
pop
ss
push
push
lea
xchg
inc
pop
and
cli
push
jae
sbb
pop
push
lret
and
lods
scas
imul
sub
push
push
jbe
xchg
mov
cmpsb
and
test
adc
scas
xor
bound
daa
jae
or
mov
aaa
jns
mov
xor
push
adc
cmp
xchg
insb
mov
outsb
jb
xchg
fsubrs
or
sbb
jmp
je
cmp
testl
dec
jmp
add
in
repz
sbb
movsl
xchg
loopne
aas
stos
pusha
dec
xor
xorb
mov
dec
std
mov
inc
clc
lea
sbb
mov
cltd
dec
and
not
mov
sub
mov
rcrb
inc
add
jb
lods
cmpsb
lods
mov
push
jge
jp
jle
loope
fsts
dec
arpl
inc
mov
sahf
cmp
inc
ret
inc
xchg
push
push
loope
ss
add
jge
fnstsw
pop
add
decl
xchg
or
mov
and
out
movsl
inc
pop
mov
mov
aad
fwait
bound
add
aam
hlt
sub
sti
mul
mov
addr16
xchg
sub
inc
and
or
movsl
fstpl
lods
lcall
inc
mov
stos
cmp
cmp
xchg
in
cmp
mov
lods
loope
loop
mov
push
mov
sub
fdivrl
sbb
xor
out
sub
je
jnp
daa
insl
adc
cwtl
pop
xchg
pop
popa
mov
pop
dec
or
js
sbb
ljmp
and
popf
call
jno
adc
movsl
test
xchg
lret
fbstp
pushf
cmp
in
xchg
xor
lahf
add
dec
mov
stc
orl
sub
pop
mov
ret
and
jns
inc
rcr
pop
popf
inc
xchg
es
mov
xor
das
pop
mov
adc
loop
icebp
lea
sbb
push
cmp
mov
xor
cmp
repz
out
mov
jns
fidivrl
dec
hlt
add
xor
add
js
inc
setg
xor
xchg
xchg
stc
push
or
pop
mov
cltd
icebp
int3
jns
mov
adc
push
insb
mov
or
ss
or
roll
cmpsl
lahf
push
mov
xchg
lahf
xor
addr16
mov
cmc
roll
jbe
test
push
sbb
sub
aas
pop
jle
andl
es
cmp
and
push
push
pusha
push
xchg
ljmp
xor
test
add
loopne
frstpm(287
mov
push
pop
mov
cmc
cmp
addl
jp
clc
mov
das
cmpsl
lds
inc
pop
sti
sbb
dec
xor
stos
mov
inc
lods
sbb
dec
pop
pop
mov
xacquire
push
push
popa
dec
inc
and
mov
outsb
divb
pop
mov
daa
mov
and
mov
sbb
js
mov
sub
and
test
xchg
mov
mov
mov
sub
xor
xchg
mov
sbb
pop
fmulp
add
jle
cmpsb
sbb
dec
hlt
sbb
or
scas
cmpsl
not
adc
xor
repnz
es
popf
outsb
and
out
adc
sub
int3
mov
mov
adc
or
xchg
fsubr
test
push
inc
or
fimull
lock
jle
shl
mov
xor
mov
inc
fstpl
iret
hlt
mov
push
jge
adc
cmp
mov
lcall
sbb
aad
push
adc
jb
jns
pop
sti
or
dec
xchg
push
mov
push
push
xor
les
xchg
jae
pause
lods
lcall
rcll
jno
aaa
xchg
divb
lahf
repz
push
out
xchg
les
ljmp
lods
jmp
and
mov
out
adc
mov
loope
jno
and
sbb
lock
test
push
rolb
pop
rcrl
sub
dec
in
or
xchg
mov
pop
rclb
and
aad
shl
pop
pop
mov
mov
xchg
xor
sbbb
xor
stc
and
xchg
cmc
aas
xchg
ss
fstps
and
inc
jmp
js
cmp
test
pop
addr16
test
mov
dec
mov
cmpsb
pop
es
fadd
in
push
aam
inc
stos
lahf
push
push
xor
faddp
pop
cld
adc
sbb
ja
inc
lahf
dec
pop
sub
popf
pushf
sub
push
dec
fxch
loopne
pusha
test
inc
sbb
xlat
sub
jecxz
mov
adc
insb
cmp
mov
fcomp
aaa
xchg
aam
xchg
jmp
inc
out
push
movsl
adc
stos
xchg
add
jl
add
ds
jmp
and
repz
popa
sarl
push
loop
mov
push
add
xor
stos
push
xchg
loopne
or
jle
and
lods
xor
adc
fs
jecxz
cmp
out
mov
call
fwait
adc
iret
cmpl
adc
fs
jnp
mov
fldl
in
mov
in
xchg
in
mov
lock
sbb
add
jbe
adc
rcll
test
pop
outsb
mov
insb
and
outsb
shl
stc
push
mov
jp
adc
jae
jnp
pop
adc
inc
or
sub
sarb
xchg
lret
fisubrs
fdivr
lret
pop
xchg
inc
je
mov
mov
pop
pop
insl
rclb
jnp
cmp
jp
rol
sahf
lds
lock
cli
inc
test
out
outsl
inc
mov
push
scas
les
repz
call
outsb
stos
das
loope
jle
sub
add
loope
pop
mov
xor
idivb
ljmp
in
xchg
mov
repnz
test
repnz
out
outsb
lahf
popl
dec
ds
mov
ja
mov
fstp
mov
out
mov
xorl
jnp
or
fsubrl
mov
pusha
icebp
lret
rolb
pop
mov
mov
sub
add
push
mov
in
out
pop
lds
push
jb
scas
or
popf
mov
sbb
lock
cmpsl
cs
cli
xchg
mov
push
cs
push
lret
fstpl
call
xor
hlt
aas
jmp
push
push
push
fcompl
cltd
fs
adc
insb
lcall
mov
jne
inc
push
push
xlat
aam
cmp
fisubrs
xlat
in
clc
jb
std
pop
sub
push
xchg
clc
dec
ret
lods
sub
subl
dec
adc
scas
mov
loop
addr16
cmp
jns
sbb
and
lret
pop
and
xchg
mov
cld
xor
jo
adc
jmp
loopne
addr16
push
add
testb
je
lahf
adcl
jecxz
popf
test
aad
inc
imul
lret
xchg
in
sub
sahf
mov
inc
and
popa
xchg
lcall
push
rolb
mov
mov
in
cmp
mov
mov
sub
cmpsl
push
lods
stc
data16
dec
imul
or
xor
add
or
aam
mov
cmp
sub
movsl
push
das
push
fcmovnbe
push
inc
rolb
add
sbb
movsb
pop
sub
scas
iretw
ret
in
xchg
loopne
jbe
mov
sbb
insb
adc
jl
imul
divps
mov
jnp
mov
mov
ja
xlat
sbb
cmp
jp
in
adc
xor
fidivrs
out
or
rcrl
pop
lods
push
dec
xchg
push
push
xchg
ljmp
bnd
lcall
in
pushf
pop
or
cwtl
loop
aaa
fwait
xchg
flds
gs
mov
inc
pop
iret
stos
movsb
push
pop
jbe
lods
test
sbbb
aaa
out
jmp
out
mov
push
and
int
out
aas
jb,pt
les
in
call
jne
pop
pop
insl
bound
ss
dec
xor
outsb
cmpsb
movsl
std
sbb
cwtl
xchg
push
add
stc
adc
pusha
lea
mov
repz
in
dec
xchg
sbb
icebp
psubb
or
cmp
sub
sti
scas
lret
adc
dec
push
push
dec
vphaddwq
aaa
mov
xchg
jbe
adc
jnp
xor
xchg
sbb
sub
cmp
add
imul
imulb
mov
fbstp
fisubl
aam
in
lret
push
mov
cmp
push
rclb
or
cmp
cwtl
pop
repnz
mov
cmpsb
mov
repz
ljmp
push
or
push
out
push
push
lods
jecxz
xor
lret
out
mov
pop
sub
push
sbb
inc
dec
insl
wrmsr
lahf
aaa
addl
out
scas
or
xchg
cmp
push
xchg
jne
lcall
push
push
xor
out
mov
push
cmp
adc
inc
in
sub
out
jl
imulb
aas
cmpsl
dec
aaa
jecxz
jb
cld
push
inc
add
jecxz
adc
mov
inc
or
inc
std
ja
fsubr
push
mov
inc
in
pop
pop
push
fistpl
lcall
sbb
xlat
xor
std
cs
jne
icebp
or
and
data16
sbb
inc
shl
inc
pusha
nop
into
sub
jmp
lcall
xor
fcoms
xchg
movsb
mov
cmpsb
or
xchg
sub
inc
iret
sbb
jl
test
jmp
push
and
cmp
pop
jmp
push
push
fsub
jne
fwait
ret
jp
jle
scas
nop
jb
vrsqrtss
jo
push
inc
popa
test
stos
enter
mov
into
xchg
jnp
cmc
inc
cmp
cwtl
push
push
sahf
push
in
xchg
push
pop
iret
rolb
mov
pop
test
push
mov
sbb
push
aam
mov
aad
loope
insb
stos
movsl
sub
fdivl
mov
xor
or
push
add
lds
push
fidivs
cmp
sub
sahf
sbbl
mov
inc
in
je
filds
dec
jmp
mov
pop
add
mov
cmp
lods
inc
mov
ljmp
xchg
je
stc
mov
inc
rol
push
inc
sbb
ds
jg
dec
xchg
fisttpl
inc
fwait
adc
daa
lds
test
fcoms
pop
xchg
xchg
stos
cli
mov
arpl
and
mov
mov
ss
lret
sahf
cli
and
pop
stc
stos
shl
fwait
repnz
dec
inc
mov
fdivrs
clc
push
mov
push
movsl
jp
cmp
xlat
scas
into
sub
test
loop
push
or
jp
movsb
and
test
sub
std
xor
xchg
mov
lea
push
push
xchg
insb
movsl
in
xlat
imul
jecxz
call
sub
in
divl
dec
sub
sub
lcall
push
push
sbb
sub
jae
repnz
and
shll
add
cmpsb
xchg
shll
ret
stos
movsb
dec
stc
jmp
aas
xchg
ficoms
pop
rclb
xchg
pop
mov
mov
mov
ret
sbb
lea
in
jb
adc
cmp
push
sbb
mov
adc
xor
jmp
ffree
sub
outsb
hlt
out
mov
add
adcb
mov
xchg
jnp
xchg
jle
xor
push
fiadds
mov
cmp
addr16
xor
scas
mov
jnp
mov
adc
data16
add
into
rorb
int3
pushf
adc
jnp
cmp
add
ja
xor
rorl
inc
testl
inc
dec
pop
cwtl
xchg
jo
pop
addr16
jmp
in
mov
lea
push
loope
ss
pop
shr
lds
ljmp
pop
mov
pop
jp
xor
add
and
aaa
mov
push
and
inc
test
icebp
lret
dec
js
or
orl
jge
mov
lahf
pop
push
pop
xchg
and
mov
sub
dec
lret
xlat
adc
cmp
mov
jo
mov
jp
cmp
aas
xchg
push
jle
dec
mov
popa
lret
loop
mov
stos
mov
add
sbbb
jnp
sbb
and
dec
fidivrs
mov
outsl
sub
and
outsb
clc
scas
push
add
test
clc
test
loope
shlb
push
jb
adc
popf
add
cmpsl
enter
test
test
xchg
xchg
push
outsb
cmpsl
es
mov
add
jae
jge
inc
mov
out
mov
cwtl
lds
jb
mov
pop
pusha
xor
stc
sub
inc
cwtl
xchg
xchg
jge
dec
pop
jge
das
add
jns
hlt
xor
mov
pop
pop
xchg
shrl
int3
mov
mov
bound
loopne
addb
mov
mov
cmp
aaa
cmp
push
daa
push
idivb
push
addl
push
pushf
push
dec
in
mov
and
mov
add
das
int
mov
cmp
imul
outsb
mov
adc
pushf
addl
and
icebp
inc
test
dec
icebp
mov
dec
int
pop
inc
test
mov
push
jmp
mov
xor
es
adc
and
mov
fimuls
xor
loop
and
jmp
les
dec
add
push
mov
ja
jb
adc
jae
xchg
inc
movsl
jo
test
into
cmp
xchg
push
test
push
clc
push
jnp
cmp
push
sarb
out
rorl
or
pop
jp
and
lock
xchg
lds
imul
in
test
arpl
bound
xor
and
out
dec
ds
xor
cmc
jmp
fldl2t
aas
outsb
dec
or
mov
jg
sbb
adc
hlt
cmp
mov
dec
sub
or
arpl
out
pop
aam
mov
ljmp
pop
call
stc
jg
mov
jbe
leave
mov
dec
mov
add
add
add
cmp
aas
insl
testb
idiv
call
push
push
test
ds
pop
xor
outsl
test
loopne
icebp
adc
testb
repz
pop
lock
cmpsb
mov
jle
add
mov
adc
leave
add
out
aam
xchg
fistpll
mov
xor
xor
mov
and
out
sarl
push
mov
daa
pop
dec
add
in
das
pop
dec
rorb
mov
xchg
adc
pop
dec
add
rcll
xchg
imul
bound
adc
sub
daa
out
mov
push
gs
out
dec
cs
add
push
mov
popf
mov
add
std
cs
jnp
in
mov
rcrl
jo
lds
push
jg
call
xchg
not
mov
jp
mov
ret
dec
adc
mov
jae
das
jne
or
dec
xchg
xchg
mov
icebp
cmp
lods
pop
test
sbb
xchg
stc
jnp
xchg
hlt
in
stc
test
lea
cmpsl
arpl
add
inc
inc
negb
dec
sbb
pusha
lret
cld
inc
xor
in
jae
mov
out
int3
lea
inc
sub
cmp
jmp
add
mov
cwtl
rcr
push
pop
xchg
adc
lahf
mov
js
fcomp
div
push
mov
pop
jl
dec
fisttps
push
xor
ret
and
in
pop
leave
aam
rorb
in
addr16
cmp
lahf
add
stos
dec
stc
jbe
lret
or
add
pop
sti
imul
loop
sub
sub
int
mov
xorl
push
jg
mov
lock
jnp
sub
insl
sub
push
pop
fsubl
jg
cmpsb
xor
fisubrl
cmpsl
mov
fs
das
icebp
in
sbb
push
popa
cmc
loopne
test
cmc
jmp
popf
xor
pop
das
pushf
add
or
iret
dec
and
or
in
sbb
jne
jbe
out
mov
repnz
xlat
hlt
jp
xchg
lret
lock
mov
jecxz
mov
xchg
popf
push
xor
in
dec
ja
test
mov
aaa
fs
out
cmp
mov
or
adc
mov
clc
out
xor
dec
mov
popf
and
jl
mov
in
add
add
out
cmpl
sbb
fists
cs
cmpsb
sahf
inc
jmp
pushf
push
inc
outsl
xchg
inc
scas
adc
inc
sbb
mov
pop
lret
and
cmp
popa
int3
test
inc
lods
jge
sbb
inc
outsl
call
xor
psraw
and
xor
stc
mov
out
sub
inc
push
lds
add
xchg
pop
call
das
inc
sub
mov
add
mov
pop
cld
mov
mov
out
mov
int
push
or
and
push
je
movsl
rclb
add
inc
xor
movsl
or
stc
out
mov
or
cmp
je
pop
mov
push
sbb
pusha
cmp
push
mov
je
push
lcall
dec
ja
loope
sub
add
imul
cmp
shrl
jge
fstl
lahf
fcmovbe
jb
add
inc
leave
bound
jo
sbb
test
popl
add
cmpl
jbe
cltd
nop
popf
cs
cmpsl
xchg
xchg
scas
aas
mov
pop
cld
sahf
or
jmp
jo
call
adc
and
mov
test
jb
stos
out
sar
sti
adc
bound
lds
jns
imul
sub
insl
jo
cltd
and
scas
ds
xchg
repnz
aas
pushf
dec
iret
shlb
subb
loope
gs
mov
out
and
push
popf
inc
push
ljmp
lock
mov
sbbl
std
clc
mov
pushf
orl
rcll
and
icebp
incl
xchg
pushf
add
inc
xchg
mov
loop
sbb
mov
fists
pop
pop
or
movsb
mov
adcl
mov
adc
and
cmp
popf
inc
mov
jne
cmp
lahf
js
jbe
es
and
data16
cmp
stos
xchg
cwtl
std
dec
xorl
pop
lea
xchg
xchg
arpl
jmp
push
sahf
clc
add
lahf
decl
xchg
shl
rcl
jecxz
pop
pop
jg
push
inc
fisubs
jecxz
daa
movsl
jle
aad
mov
sbb
ljmp
ja
xor
loopne
out
mov
push
or
jns
bsf
mov
dec
popf
xor
sbb
jle
mov
cs
out
dec
push
xor
jbe
call
xchg
cs
xchg
adc
bound
ret
and
xor
scas
add
and
adc
push
loop
fildl
xor
xchg
xchg
jmp
pop
mov
jle
out
pop
sub
dec
pop
cmp
push
jmp
jg
push
mov
repnz
roll
push
xor
sub
mov
clc
xchg
xor
dec
adc
in
loope
xchg
out
dec
pop
cmc
push
sbb
cmc
xchg
or
sub
sub
ret
lods
xchg
pop
push
repnz
lds
cwtl
sub
mov
das
mov
inc
mov
mov
or
sbb
les
sub
sub
pop
sub
popa
js
js
cmp
jno
add
into
imul
divb
mov
xor
mov
push
insb
xchg
stos
pop
popf
and
mov
mov
lods
push
lock
xchg
or
out
bound
add
iret
sbb
cs
orb
push
push
push
call
push
ficompl
bound
sub
punpckhwd
push
std
and
mov
dec
and
frstors
push
andb
mov
fcmovb
ret
mov
repnz
stos
inc
aam
mov
jl
cmpsl
jnp
daa
pushf
sbb
stc
sub
dec
movsb
inc
push
jbe
cmp
outsb
xor
push
andb
mov
mov
adc
jae
shl
stos
xchg
mov
jo
lock
sbb
mov
repz
mov
pmaxsw
push
outsl
cmc
popl
push
mov
mov
jne
jle
dec
xchg
add
into
es
imul
mov
hlt
sub
mov
repnz
cs
add
pop
aam
test
lcall
lret
and
sahf
fcoms
ret
pop
fs
fldcw
dec
hlt
mov
cmpb
test
adc
movb
int3
mov
rcrb
in
test
push
sti
or
xor
xchg
imul
ret
xchg
out
les
jnp
ja
mov
imul
jecxz
xchg
js
push
dec
inc
fdivrl
pop
push
and
adcb
adc
out
jo
shrl
pop
and
add
jns
jne
adc
mov
add
cmp
xchg
or
or
idivb
lret
loope
xor
jmp
mov
movsb
ss
pop
mov
lds
inc
and
ror
xor
jbe
mov
pop
fs
xchg
in
lock
mov
jg
pop
push
dec
dec
sbbl
lock
inc
popf
cmp
push
subl
or
cmp
and
or
mov
insb
imul
mov
pop
xor
jno
pop
ja
jp
and
add
hlt
jnp
cmp
lret
push
mov
addb
enter
pop
fs
add
rol
out
pop
sbb
dec
dec
sub
inc
enter
mov
aad
mov
pop
lret
push
xor
das
mov
mov
jno
ds
and
xchg
aaa
fwait
es
lods
rcll
inc
add
imul
fbld
push
shl
jecxz
fisttpl
jmp
and
ss
jns
jo
jnp
hlt
add
das
mov
pop
outsl
or
aaa
fwait
lea
cmp
dec
mov
mov
jmp
or
push
jp
push
cli
ljmp
xchg
outsl
mull
sbb
adc
xchg
sub
rcl
cld
int3
mov
sti
stos
ja
xchg
push
in
movsb
dec
jecxz
bound
sbb
mov
insb
hlt
xchg
xchg
dec
or
push
jbe
test
xchg
sub
add
jmp
cmp
push
pop
addr16
ljmp
mov
lahf
pop
mov
stc
aad
aam
popa
pop
xor
jo
xchg
outsl
incb
jp
and
ds
repnz
xchg
mov
movsb
roll
jmp
or
push
inc
push
adc
jo
cmp
cmc
hlt
std
jge
xchg
out
jle
dec
rclb
pop
push
mov
push
jno
gs
push
xor
xor
shr
fidivrs
pop
inc
dec
ja
roll
out
jnp
lcall
inc
pmaxsw
jecxz
mov
mov
xor
test
aad
pop
jp
ror
push
mov
adcl
test
inc
shrb
cltd
stc
pop
inc
cmp
pop
shrl
out
mov
js
je
mov
or
rol
add
ljmp
je
movsb
dec
sti
mov
jl
sub
add
arpl
insb
xor
pop
mov
adc
lret
add
mov
jns
dec
jns
movsb
push
mov
mov
push
xor
popl
cmpsb
jecxz
addr16
sub
push
out
sub
xor
sub
fdiv
movsb
xor
int
rcll
inc
aam
pop
mov
clc
and
repnz
inc
out
es
and
shrl
xchg
or
push
paddw
pop
into
pop
in
int3
movsl
xchg
movsb
push
push
push
ss
cmpsb
mov
aas
mov
sahf
push
loop
lahf
test
inc
in
ljmp
fstl
xchg
inc
or
lret
scas
mov
lds
xchg
pop
std
icebp
sbb
mov
push
lock
aad
adc
repz
sbb
sarl
imul
fimuls
wrmsr
in
jmp
aad
addr16
xor
lret
and
mov
inc
pop
dec
pop
push
dec
inc
sbb
push
sbb
xchg
push
enter
xor
shl
in
fstl
cmc
mov
adc
xor
dec
loopne,pn
pop
lds
jle
mov
xchg
mov
sub
ja
je
mov
mov
add
pop
push
adc
leave
int
dec
mov
xchg
pop
clc
push
imul
aas
cmovp
or
push
sahf
xchg
js
adc
inc
and
aaa
cwtl
test
cmc
ja
and
cmpsl
out
dec
fwait
mov
pusha
movsl
movsb
pop
lcall
dec
rcrb
mov
add
daa
outsb
fistps
pop
xchg
shll
push
inc
xor
dec
push
int
out
scas
pop
dec
push
jne
mov
pop
and
sahf
jb
out
inc
orl
xchg
and
pop
lock
inc
adc
lcall
dec
ja
mov
and
and
repnz
and
sbb
jae
adc
xchg
fdivrs
sub
and
xchg
loope
adcb
jbe
rcr
rcl
shl
out
jae
pop
negb
or
jbe
lcall
dec
mov
inc
jle
sub
mov
scas
jae
mov
mov
or
add
sbb
and
jae
in
mov
mov
rep
sahf
out
sbb
icebp
popa
shlb
mov
push
or
xlat
insb
jp
inc
hlt
sbb
pusha
gs
push
in
pop
inc
decb
ljmp
jne
repnz
dec
sbb
sbb
inc
sbbl
subl
dec
pop
mov
int
mov
rolb
outsb
jne
idiv
inc
cli
loopne
int
mov
mov
mov
in
mov
iret
mov
push
pop
movsb
mov
mov
stos
cmp
scas
popa
xchg
test
xor
mov
mov
cmp
sub
loop
inc
imul
adc
mov
stos
pop
or
aad
mov
enter
aaa
aaa
repnz
loope
jae
cmp
xchg
lret
shrb
ret
xchg
int3
or
insl
jne
xchg
jo
pushf
push
dec
pop
cwtl
adc
adc
adc
out
dec
shlb
and
inc
jo
push
in
add
mov
push
push
adcb
mov
jmp
js
popa
mov
adc
loopne
sub
lahf
stos
insb
sahf
xchg
cmp
push
push
push
sbb
mov
addl
faddl
repnz
fidivs
lds
hlt
jmp
rol
aas
lea
jg
out
leave
cmp
cmpsb
dec
adc
stos
xor
jo
add
cmpsb
addb
sub
in
mov
roll
or
popf
mov
add
inc
iret
ja
addr16
std
sbb
sbb
cwtl
scas
shl
add
mov
inc
inc
mov
dec
or
add
in
test
jb
push
cmpl
xchg
lds
push
push
outsl
test
loopne
in
fs
pop
pop
xchg
cmc
test
dec
mov
push
hlt
inc
call
or
movsl
inc
jb
dec
cld
fiaddl
xchg
es
push
xorl
rcll
fisubl
std
hlt
dec
and
aaa
and
insl
inc
insb
aam
push
imull
mov
in
sarb
sbb
outsb
dec
rolb
mov
dec
xchg
add
int
cmp
fs
dec
sbb
and
fadd
les
add
nop
aam
fstpl
mov
or
jbe
xor
push
lea
lods
adc
sub
pop
pop
xor
dec
loope
and
or
xor
idivl
shll
divb
fucomp
loope
outsb
loopne
loop
sub
enter
pushf
mov
mov
cmpsb
ljmp
adc
cmp
fsubrl
in
xor
pop
add
push
or
test
int
repnz
gs
push
sbb
mov
inc
sbb
scas
or
call
dec
rolb
or
or
xor
popf
pop
fstl
outsb
cmp
fisttps
int
stc
iret
pop
sbb
xor
ljmp
outsb
in
loope
dec
mulb
lret
adc
xor
aad
es
loope
jl
xor
inc
repz
jg
test
push
or
xor
push
add
xchg
movsl
mov
pop
lret
lods
cltd
mov
mul
sbb
adc
lods
mov
mov
daa
arpl
pushl
pop
xlat
mov
mov
movsb
pop
js
inc
imul
or
jnp
out
jg,pn
lods
mov
mov
movsl
inc
in
pop
sti
push
idivl
add
sbb
xor
jbe
jnp
mov
xlat
lret
or
int3
mov
dec
push
pusha
fldl
stc
jnp
std
filds
jg
mull
enter
push
jp
fldt
xlat
xor
std
test
xchg
or
lods
xlat
jo
sbb
push
mov
shl
add
adcl
dec
lret
imul
scas
daa
sub
daa
enter
cmpl
pop
scas
loop
scas
push
scas
stc
dec
daa
push
das
cmp
adc
jle
aaa
push
mov
loopne
ffree
arpl
addb
adc
push
add
mov
stos
aaa
int3
jl
cs
es
idivb
cmpsl
and
xchg
cmp
pop
add
mov
add
sahf
out
adc
xchg
mov
mov
cmp
add
cmpsb
or
and
pop
stos
add
jl
mov
hlt
or
sti
lods
pop
ret
adc
push
arpl
inc
loope
push
mov
adc
in
sar
inc
cmp
xchg
in
fwait
aas
rcll
inc
or
push
ror
addr16
sub
dec
push
adc
mov
sti
pushf
pop
sti
dec
inc
jl
ret
cmp
adc
rorb
cmc
call
adc
test
loopne
loope
rorb
test
pop
leave
daa
fldenv
push
xchg
jo
movsl
mov
pop
lret
in
mov
sbbl
push
cmp
icebp
dec
maxps
lcall
add
loopne
arpl
stc
dec
out
xchg
insl
test
push
mov
daa
je
xor
cmc
pop
arpl
sub
and
shl
push
jle
inc
aam
xor
pop
sub
stc
stc
cmp
mov
and
lcall
int
sti
mov
or
aam
mov
ret
push
lds
inc
adc
jbe
jb
push
cmp
and
xchg
scas
sub
shll
xor
rcrb
inc
cmc
mov
es
xchg
pop
scas
push
gs
ds
aaa
adc
xlat
mov
lahf
cmpsb
movsl
xchg
adc
dec
std
xchg
in
fsubrs
jae
xor
int
inc
dec
or
fcomip
xchg
enter
mov
xchg
push
dec
addl
mov
adc
add
dec
cmpsb
into
xor
inc
insb
fsubp
gs
dec
cld
addr16
cmp
push
cwtl
dec
test
arpl
mov
pusha
mov
push
cltd
orl
mov
repz
mov
add
fstpl
add
mov
inc
repnz
aas
cmp
lret
in
xchg
in
ret
popa
popa
adc
xor
xchg
and
inc
out
pop
cmp
loope
in
inc
mov
icebp
loope
mov
aam
lds
pop
lock
pop
lret
fs
xchg
dec
dec
xchg
xor
jae
cltd
testb
test
out
and
ficomps
out
pop
jmp
dec
inc
xor
insb
cmp
mov
push
push
or
movsb
lods
fildl
push
push
push
repz
inc
add
in
vpmulhuw
sti
fisttps
test
inc
mov
mov
inc
aad
add
pop
adc
mov
sahf
xor
cli
and
out
mov
nop
sbbl
cltd
push
xchg
test
pusha
push
xlat
sbb
mov
push
repz
xchg
jno
dec
or
adc
xchg
subb
flds
cmp
arpl
jg
mov
sbb
mov
lods
fdivl
sti
stc
and
fwait
into
sub
loope
cmpsl
jge
test
push
push
inc
mov
sbb
lret
stos
scas
mov
mov
pcmpgtw
jmp
xchg
mov
rcl
pop
imul
or
sbb
xchg
repz
popf
or
fstpt
jbe
les
pop
repz
mov
inc
xor
xor
cld
in
hlt
int
div
je
sbb
test
cld
aam
clc
pmaxub
imul
sbb
or
push
dec
pop
xchg
xchg
cmp
sbb
xor
inc
les
and
test
iret
es
fs
fldcw
xchg
ja
pop
jp
fwait
rclb
push
bound
clc
jo
imul
fs
xor
or
into
pusha
and
andb
popa
add
push
lods
movsl
aam
mov
sahf
adc
cmpsb
sub
mov
mov
out
fldenv
dec
push
int3
scas
icebp
mov
mov
aas
jb
ret
insl
aaa
push
fidivl
mov
je
xor
test
aad
sub
jge
iret
xlat
nop
or
jns
dec
dec
add
mov
adc
and
jb
pushf
mov
push
sti
sbb
fdivl
imul
push
sbb
or
fldcw
xor
mov
insb
push
or
cmpsl
push
ljmp
xchg
jmp
mov
test
cmp
dec
bound
xchg
push
in
mov
sub
or
sbb
ljmp
test
out
or
mov
idiv
inc
mov
mov
inc
pop
mov
dec
add
push
sub
test
sub
inc
gs
mov
or
adc
add
lock
fst
out
sub
add
sub
cmp
aas
adc
jmp
xchg
or
sbb
push
mov
or
xor
xchg
loope
in
jns
dec
daa
xchg
out
cli
or
xor
mov
jns
add
mov
sahf
scas
popa
sub
mov
insb
add
int
jbe
in
adc
sub
dec
mov
inc
add
scas
mov
push
cmp
push
inc
jno
mov
push
sub
std
mov
addr16
lods
or
xor
cmc
fs
enter
js
icebp
xchg
aam
fldenv
rcl
or
jle
adc
dec
lods
pop
xchg
add
mov
enter
sahf
sarb
mov
push
stos
adc
mov
aaa
js
jge
pushw
pushf
jge
iret
daa
in
cltd
jno
xchg
add
stos
faddl
sbb
push
pop
sbb
repz
hlt
fdivs
mov
outsb
dec
pusha
inc
insb
xchg
push
xorl
jb
ds
mov
push
cld
cli
xlat
cmc
lods
movsb
inc
mov
push
aas
pop
cmpsl
mov
pop
sbb
psubusb
in
push
cmp
imul
jge
ljmp
mov
ja
scas
cmp
loopne
gs
pop
cmpsl
in
mov
orl
push
outsl
in
mov
int
repz
in
fcoms
lods
hlt
adc
mov
into
dec
add
cmp
stos
xor
xchg
call
jle
dec
sbb
movsl
es
es
pop
add
rcrl
adc
stc
gs
fdivl
in
or
es
cld
cld
test
mov
mov
sub
inc
add
sbb
ja
bound
pop
dec
test
cs
shlb
xor
mov
pop
ds
call
hlt
stc
dec
dec
aam
icebp
add
mov
dec
xchg
mov
adc
sbb
lods
jne
sbb
mov
inc
cmpl
mov
call
xchg
adc
or
mov
call
xor
cld
daa
ljmp
dec
fs
push
fs
stc
ss
sub
dec
in
mov
xchg
sub
outsl
mov
mov
push
pop
inc
jo
movsb
adc
add
ja
ss
loopne
xchg
in
sar
roll
sub
ss
pop
xchg
pop
pusha
inc
mov
xor
test
xchg
test
in
bound
das
sub
stc
fsubrl
pushf
out
insb
faddl
pop
loopne
mov
in
repz
mov
ds
inc
pop
loop
pushf
cmc
pop
add
idivl
cli
sti
roll
hlt
lock
xchg
rcll
jns
insb
sub
jns
cmp
push
in
loopne
dec
xchg
fldcw
cmp
and
test
sub
fmull
ds
mov
xor
icebp
daa
push
sti
rolb
fiadds
repnz
insl
js
add
jns
mov
add
mov
xchg
pop
dec
out
adc
int3
movsl
adc
jl
imul
call
pop
fisttpl
jmp
pop
in
popa
cmp
test
in
in
xor
stos
xchg
movsb
lods
cmp
cmp
sbb
mov
sub
add
arpl
scas
rorb
dec
jb
and
hlt
mov
fdivr
movl
add
or
test
jecxz
push
shr
movsb
xchg
pop
ds
das
or
std
cmc
es
std
ds
cmp
mov
xlat
mov
imul
or
xor
cmp
stos
or
aas
mov
push
dec
cmp
jbe
xchg
into
mov
inc
scas
sbb
adcl
sub
cmpsb
insl
sbb
popa
cs
and
or
stos
and
jge
shll
push
dec
sbb
jb
lock
mov
mov
lahf
mov
hlt
call
xor
out
and
push
into
mov
push
mov
idivl
popa
adc
fisubrs
cmp
adc
jmp
mov
sbb
or
ret
mov
jbe
enter
mov
mov
and
xlat
pop
hlt
arpl
push
out
les
mov
int
ret
xchg
cmp
and
and
sahf
jae
stc
notb
daa
in
sarl
xchg
mov
sarb
test
and
or
out
in
stos
loope
loope
outsl
jno
inc
sbb
push
popf
mov
push
jnp
sbb
pop
cltd
das
cltd
jmp
xchg
mov
bound
mov
push
dec
dec
aad
dec
cmp
inc
push
sbb
inc
cmp
ss
push
lahf
xchg
jbe
mov
lea
push
mov
mov
repz
jae
mov
fwait
sub
sbb
fldcw
scas
mov
jns
or
xchg
pminsw
shll
sbb
bound
push
xor
sbb
ja
xlat
cmpsl
push
push
fdivrs
sbb
adcb
in
jl
mov
jmp
jp
cmp
jno
mov
xor
adcl
test
rcll
lahf
sub
cmpsb
add
xchg
pop
sub
xchg
push
xchg
addr16
insb
lcall
outsl
dec
inc
pop
push
inc
insb
cmp
cmp
ss
jno
pop
inc
insl
cmc
lahf
adc
insl
dec
fiaddl
or
daa
fs
dec
pop
pop
mov
insl
and
or
sub
std
xor
rclb
push
jp
jp
jle
daa
in
adc
dec
cltd
cmpsl
dec
pop
dec
test
sub
lahf
in
push
sarl
aam
jnp
xchg
std
js
xor
xchg
fistl
shrl
jg
cmp
das
cmpsb
jmp
bound
push
sbb
cmovno
dec
hlt
mov
sbb
scas
rclb
mov
dec
fucomp
cld
repz
xor
iret
test
ja
sub
inc
cmp
dec
mov
dec
orl
mov
nop
out
cmpsb
pop
in
inc
add
test
in
pop
xor
and
outsb
fildll
scas
inc
cmpsb
sub
push
push
mov
push
pop
movsl
xchg
inc
xor
scas
repnz
test
and
xor
push
push
pop
sub
mov
movsb
sub
cs
test
ss
cwtl
in
cmp
cltd
out
sbb
mov
cmpsl
mov
push
mov
stos
fsubl
mov
jle
push
cld
push
push
jb
cmpsl
mov
call
pop
stc
mov
test
dec
pusha
pop
cmp
or
out
cmpsl
ds
stc
mov
mov
inc
lcall
jb
out
ret
xchg
fdivs
aas
pop
xchg
inc
in
rcrb
jae
lahf
and
add
dec
push
scas
loop
push
lahf
dec
add
cwtl
fnop
xor
fistl
push
movsb
out
xchg
dec
adc
add
inc
adc
pop
jge
aam
test
cs
insl
out
js
movsl
and
push
push
mov
jg
in
jb
dec
add
xor
in
stc
cmpsl
std
lret
add
call
ljmp
xor
lcall
cmp
mov
xor
fldl
inc
push
push
insl
xor
mov
dec
push
hlt
imul
sahf
jg
fcmovnu
push
cmp
adc
or
cmp
cmp
mov
ljmp
into
xchg
lret
dec
cmp
sub
subb
and
sbb
sbb
mov
sbb
arpl
xor
push
mov
decl
test
imul
mov
lods
push
rcrl
xor
xor
cmpsb
into
jbe
mov
cmp
test
sbb
xorb
mov
out
mov
movsb
jo
int
jo
mov
bswap
pusha
sub
xor
push
insb
jmp
add
mov
jle
bound
mov
lods
xchg
push
add
mov
test
sbb
mov
dec
fildl
or
push
icebp
inc
shrb
xor
sarb
or
sub
adc
stos
and
lcall
leave
inc
adc
ja
xor
notl
movsb
dec
mov
jns
pop
les
fidivrs
in
imul
inc
jmp
lods
pop
in
sbb
inc
xor
fldenv
aaa
test
shll
call
jg
insb
movsl
pop
subl
xor
dec
add
adc
leave
fsts
adc
dec
test
mov
inc
out
mov
cmp
or
fisubrl
jno
mov
sbb
mov
or
mov
adc
outsb
lods
add
dec
in
test
fwait
xor
cmpsb
testb
iret
in
jo
inc
scas
js
xchg
push
fmull
test
pushf
add
adc
add
pop
imulb
xchg
int
pop
loopne
pop
sbb
iret
ret
dec
inc
cmpsb
dec
inc
cmc
jb
mov
insl
jg
xor
ret
notl
sub
js
in
pop
cld
int
mov
xor
fbstp
mov
mov
pop
or
ret
icebp
lret
sub
jo
xlat
nop
repnz
mov
idiv
xchg
dec
scas
lea
cmp
cld
ss
daa
lods
cmp
jmp
std
push
stc
je
xchg
mov
or
mov
dec
and
out
aas
push
jp
mov
les
andb
je
mov
lcall
xchg
dec
dec
cmp
pusha
jle
lds
sub
subb
and
fimuls
lret
shll
sbb
jl
es
sub
xor
adc
jle
fs
punpcklbw
lock
adc
adc
mov
add
add
outsl
pop
negl
xor
scas
aaa
jno
imul
les
fs
pop
dec
pop
or
rclb
dec
sbb
sub
das
xchg
test
mov
nop
addr16
push
aaa
ret
in
loopne
fstps
pop
outsl
adc
fmull
call
int3
adc
cmp
cld
movsl
sub
lret
dec
cmc
shrl
pop
add
cmp
ds
imul
jnp
xchg
std
or
mov
xchg
test
cmc
mov
jo
xor
gs
xchg
adc
xor
inc
jae
jp
pop
dec
lret
and
dec
add
and
xchg
push
lods
pop
es
addr16
sbb
dec
iret
test
adc
adc
cmpsb
add
pop
adc
sbbb
dec
cltd
stc
sbb
mov
mov
clc
in
pop
mov
mov
jmp
pop
push
xor
stos
out
jne
xor
mov
int3
pusha
jo
pop
mov
jnp
jb,pn
or
xor
jnp
in
into
dec
mov
mov
jp
mov
sub
enter
stos
daa
mov
addr16
jmp
lods
mov
popf
sbb
jae
xor
mov
popa
pop
in
push
adc
addr16
sub
loopne
and
in
and
or
and
shll
daa
and
mov
mov
ficompl
inc
stc
xchg
in
push
pop
push
mov
add
lods
loopne
pop
mov
jno
mov
and
pop
mov
add
cmp
and
cmp
mov
in
outsb
ds
gs
jg
in
icebp
lret
jmp
mov
cs
ljmp
jmp
outsl
es
adc
push
test
adc
mov
cmc
push
dec
mov
scas
mov
imul
dec
hlt
lds
mov
in
out
popa
flds
cmpsb
pop
lock
fiadds
shll
enter
push
mov
out
inc
mov
cmp
out
popa
fimull
pop
dec
icebp
lret
mov
inc
and
out
push
push
jno
pop
pop
add
imul
adc
je
pop
xchg
js
pop
popa
pop
sarl
xor
cmpb
inc
and
insl
cmp
and
iret
mov
lret
add
mov
dec
fistps
sub
inc
cli
ffree
movsl
data16
sti
mov
in
jmp
pop
add
cmp
lcall
pop
adc
aaa
inc
std
dec
mov
dec
sbb
push
sub
test
gs
mov
cmp
das
in
jl
or
repnz
mov
mov
sub
inc
aam
add
shll
arpl
xor
and
sub
dec
jbe
cmp
stos
lods
nop
jmp
push
mov
jae
fldenv
xor
mov
stos
call
into
dec
flds
adc
pop
pop
aaa
out
push
pop
cmpsl
sbb
daa
push
mov
repnz
rorl
mov
lea
in
fs
test
insb
popf
or
shll
sub
or
fnstsw
and
leave
pusha
nop
dec
insb
lahf
std
fwait
mov
loopne
xchg
mov
push
nop
cmpsb
adc
js
lods
mov
push
xchg
inc
repnz
fmulp
rep
or
imulb
sub
xorl
pop
pop
and
or
in
xor
lret
fisubs
xor
enter
adc
and
movsb
pop
std
cmp
pushl
hlt
xchg
jp
fldenv
pop
inc
mov
sub
dec
xchg
outsb
gs
xor
ret
mov
fcmovbe
push
pop
mov
push
out
cmp
sbb
mov
inc
sub
mov
mov
pop
mov
mov
sub
cmp
movsb
movsb
jmp
dec
jnp
adc
pusha
dec
ds
lret
and
mov
pop
fimull
popf
loop
sti
insb
jo
lcall
mov
iret
push
inc
pop
out
pop
pusha
mov
add
aas
out
sub
push
lea
dec
ficoml
xchg
arpl
mov
pop
gs
mov
mov
clc
arpl
repnz
movsl
aad
or
nop
mov
sbb
cli
lock
std
jge,pn
popa
push
add
mov
dec
lret
push
movb
sub
push
imul
mov
mov
mov
xchg
sbb
jmp
push
sub
jns
addb
sub
or
hlt
pop
ja
clc
out
out
push
jmp
sbb
lods
into
fbstp
ljmp
jae
add
mov
rorb
dec
push
stos
xchg
or
outsb
pop
dec
enter
mov
pop
fsubrs
pop
dec
loop
outsl
jg
dec
sub
aam
xchg
clc
add
and
lea
jnp
jae
aaa
or
cltd
outsl
jg
cmpsl
mov
dec
xchg
cld
ret
test
jnp
push
icebp
ja
icebp
mov
fsts
iret
add
dec
movsb
jo
scas
in
out
and
imul
hlt
or
lds
mov
and
push
adc
jg
pop
sbb
repz
add
shlb
pusha
inc
sbb
cmpl
mov
fmuls
loope
and
leave
fucomip
cmp
adc
push
inc
jmp
pop
jno
inc
dec
into
sbb
sub
fcompl
and
push
js
andb
popa
stc
int3
mov
addr16
inc
lods
xlat
push
mov
mov
cwtl
mov
ss
mov
inc
outsl
test
mov
loop
int
sbb
and
subl
cld
sbb
bound
lea
cs
adc
rolb
fidivrl
stos
push
and
insb
jns
push
icebp
xor
testl
inc
push
insl
or
mov
ror
imul
lods
insb
jo
scas
adc
adc
in
mov
and
mov
test
repnz
leave
push
jmp
jns
xor
add
cmp
jo
repnz
leave
add
and
pushf
in
mov
ja
xchg
dec
nop
mov
imul
push
inc
scas
cmpsb
mov
mov
adc
lea
mov
js
arpl
idivl
xchg
mov
je
mov
dec
inc
cmp
adc
xlat
or
jle
and
dec
sbb
sbb
add
jno
loop
call
pop
adc
jno
fs
jle
jne
pop
repnz
cmpsb
mov
inc
sub
push
popa
sbb
or
xor
sub
leave
jecxz
and
or
mov
dec
mov
inc
jmp
into
pushf
ljmp
leave
scas
or
xor
mov
shrb
jo
mov
lods
push
mov
test
test
push
lock
ja
lea
je
push
adc
jno
dec
addb
lahf
adc
or
js
test
push
adc
add
push
ret
inc
lock
push
add
arpl
call
pop
cmp
or
xor
hlt
das
jnp
sub
lret
jns
inc
sbb
ljmp
sbb
in
xorb
scas
imul
xchg
add
insb
push
js
sbb
andl
stos
lods
xchg
into
or
pop
mov
in
pop
setg
jmp
loopne
adc
pop
pop
lock
push
int3
mov
and
aaa
sbb
and
or
mov
mov
sbb
cmp
movsb
out
jns
add
scas
lret
xchg
pop
out
clc
mov
int3
or
repz
push
movsl
cli
gs
xchg
bound
inc
jne
pop
xlat
cltd
jb
sti
in
sti
adc
xchg
mov
pop
jne
lea
popa
iret
inc
out
sbb
sub
inc
xorl
orb
cmc
mov
rcrb
cmpl
mov
pop
xchg
ficoml
fcompl
mov
pop
out
fcomps
testb
dec
dec
xor
les
mov
aaa
adc
mov
push
aaa
cmp
stos
jp
idivl
ficoms
jno
test
mov
imul
les
into
jno
and
pop
mov
movsb
adc
fsubrs
aas
push
sti
pop
adc
fiadds
pop
xchg
sbb
push
in
push
or
rclb
ss
jle
in
mov
cmpsb
adc
and
insl
orb
cmp
sub
sub
mov
je
in
adc
imul
fidivrs
pusha
mov
push
popf
jae
jno
pop
inc
jb
fdivl
push
cmp
in
test
push
int
cwtl
sbb
or
xlat
lock
and
xor
mov
dec
ret
in
sub
rorl
neg
testl
xchg
xor
out
mov
xchg
xrelease
mov
imul
sbb
dec
movsb
or
add
sar
ds
dec
push
in
and
ficoms
mov
mov
inc
leave
movsl
sbb
sbb
sub
inc
lahf
or
push
cmp
push
arpl
sub
pusha
cltd
mov
sbb
mov
jbe
xor
inc
and
cmp
test
frstor
mov
mov
hlt
cmp
pop
lods
ljmp
idivl
xchg
jge
xchg
ud0
inc
pop
push
push
movsl
lret
mov
leave
pop
ss
pop
mov
sbb
psubsb
daa
fcmovnu
xor
out
or
sbb
lret
pop
bound
fs
dec
xor
fstl
mov
movsl
out
cld
pop
in
insb
jp
pop
imul
out
mov
pop
data16
in
push
insb
cwtl
fdivl
popf
or
filds
and
push
repnz
cmp
popa
dec
andl
push
aad
sub
adc
xchg
leave
fadd
cmc
sbb
adc
mov
mov
popa
ret
push
jo
addr16
clc
xchg
jno
push
popf
dec
dec
fcomip
cmp
shlb
sub
mov
xor
pop
dec
aaa
lret
in
xchg
sbb
ret
add
dec
jb
jp
pop
add
jge
adc
jl
cmp
f2xm1
mov
leave
aaa
xchg
and
cmpsl
sub
pushf
mov
jne
pushf
pop
mov
sahf
adc
xor
mov
push
orb
or
lret
mov
push
roll
mov
adc
into
sbb
cmc
cmp
push
hlt
mulb
or
std
push
lahf
sub
inc
ret
push
ficomps
pop
xchg
das
sti
mov
pop
and
int
movb
mov
and
jle
outsb
ljmp
pop
jmp
jno
sub
inc
imul
mov
cwtl
xlat
out
push
jne
iret
cltd
jg
mov
inc
add
imul
push
sub
lret
mov
leave
mov
scas
sbb
xchg
push
test
push
pushf
sub
fildll
push
rclb
out
mov
out
into
out
call
sub
cmpsl
les
mov
leave
sbb
aad
orb
push
icebp
mov
xchg
pop
jnp
add
cmp
add
call
adc
mov
sar
call
ffree
scas
push
enter
xor
cmp
xchg
and
jbe
mov
cmp
add
inc
stos
in
outsl
mov
fstpl
xchg
cmp
push
or
outsb
inc
loopne
xlat
dec
js
repz
pop
push
jo
pop
and
leave
xchg
cmpsb
or
mov
xchg
sub
hlt
cmp
add
inc
or
shlb
mov
pushf
sub
sbb
dec
push
mov
sub
cltd
push
xorl
cmp
xchg
scas
and
cmp
push
push
mov
dec
outsb
mov
sarb
int
imul
cmp
insl
dec
xchg
cmp
add
stc
out
and
dec
sbbl
notl
mov
jo
inc
loop
xchg
cltd
and
sbb
fsts
or
cltd
sub
or
loopne
mov
icebp
fucom
ficoml
mov
add
mov
inc
xor
cli
xchg
pushf
sahf
imul
mov
pop
sti
pop
adc
es
or
imul
mov
jae
sub
fldenv
stos
imul
imul
rcll
aaa
push
lock
and
mov
adc
pop
mov
jno
or
movsl
inc
rorb
mov
mov
push
sbb
ret
xchg
xchg
rorb
xchg
sbb
or
aaa
fmuls
ljmp
jg
push
mov
mov
gs
push
mov
push
mov
mov
movsl
lods
sarb
inc
aas
jg
jmp
lea
addr16
stc
xor
xchg
mov
shrb
pop
xchg
std
xchg
jb
xchg
enter
into
mov
and
pop
dec
outsb
sub
xor
ficoml
enter
dec
pop
roll
inc
fldl
pop
xchg
adc
lret
leave
mov
jge
inc
fnstenv
lret
jne
or
int
or
test
out
jns
lahf
and
adc
adc
add
or
mov
mov
vpcomw
pop
xor
ret
push
xor
loopne
aaa
insl
or
inc
mov
jl
and
and
movsl
sub
aaa
sahf
out
and
push
and
mov
push
mov
sub
orl
pop
out
jo
cld
inc
mov
stc
cmp
outsb
xlat
popa
or
inc
xchg
rol
rclb
pop
sub
pop
xchg
movsb
ljmp
bound
outsl
loope
sub
and
add
add
out
inc
cmp
xchg
std
xor
jns
inc
jae
inc
jp
or
jo
jle
sbb
insl
daa
jmp
cmp
out
movsb
mov
or
mov
mov
addr16
adc
pop
and
in
popl
rorl
fnstcw
mov
aad
xchg
test
jmp
test
mov
xor
insl
mov
mov
aam
push
ficoms
mov
in
outsl
push
cwtl
out
loopne
cmp
xorb
add
adc
push
aam
mov
aaa
push
jle
sub
cmp
mov
cmp
and
ds
inc
jg
mov
add
fdivl
cmpb
sbb
sbb
rcrl
mov
call
insl
in
and
or
push
sbb
or
cmp
cltd
inc
shr
scas
pop
cli
jge
mov
in
bound
xchg
jo
bound
dec
lret
lods
in
int
pop
iret
mov
push
loopne
add
jne
adc
push
cmp
pop
divb
shlb
fwait
push
inc
mov
fcoms
aaa
adc
jp
dec
ror
out
aaa
or
test
ss
or
mov
scas
inc
mov
sti
xchg
lahf
xchg
test
ljmp
divl
jns
into
dec
mov
pavgusb
pop
push
imul
or
pop
frstor
stos
pushf
mov
xchg
ljmp
out
outsb
inc
jne
test
mov
sub
jbe
stos
jno
fdivrl
dec
mov
adc
xchg
xchg
pop
sbbl
jb
pusha
int3
push
jmp
inc
and
mov
rclb
jb
xchg
loop
shll
insb
test
int3
sub
xchg
popf
mov
test
in
sub
fiadds
subb
push
xor
xor
ret
sub
jne
insl
clc
aaa
mov
int3
adc
cs
cmpsb
sub
lret
mov
jbe
pop
sbb
in
or
test
jnp
mov
cmpb
xor
in
pusha
mov
add
ja
mov
insb
jecxz
lock
push
and
ja
sahf
xor
insl
ret
xor
mov
fadd
mov
and
or
repz
fs
insb
and
mov
pop
or
adc
icebp
add
inc
movsl
or
and
fstpt
cli
daa
xor
inc
sbb
cmpl
pop
push
cmp
lods
std
popf
sub
data16
nop
push
dec
sbb
pop
jecxz
mov
mov
ret
push
push
loopne
aaa
xchg
mov
rorl
rclb
push
aad
or
call
js
mov
movsl
cmp
jne
lea
lods
dec
shrb
leave
addb
ficompl
shrb
inc
jg
lock
cli
sbb
xchg
mov
ljmp
aad
out
sbb
mov
cmc
loopne
sahf
push
sub
stos
add
enter
cmpb
stos
aad
and
mov
push
push
dec
sbb
xchg
jmp
stos
jmp
aaa
mov
push
pop
lds
dec
push
int
cmp
mov
xor
aad
mov
jnp
rolb
adc
add
push
xorl
sub
pop
dec
jle
and
fcmovb
pop
jp
mov
mov
stos
adc
aam
mov
dec
sbb
or
xchg
xchg
push
jl
rcrb
push
imul
jnp
xchg
test
push
pusha
mov
outsb
add
mov
jbe
mov
sbb
je
sub
fdivs
stc
cmp
pop
inc
call
nop
push
pop
mov
ljmp
lret
lahf
int3
test
or
fwait
or
cmp
sub
rclb
sub
or
fisubs
jecxz
xchg
mov
mov
loope
fdivl
in
mov
push
push
ljmp
push
adc
cmp
ja
shll
ljmp
xor
notb
subb
and
aas
repnz
lcall
fmull
mov
add
andl
cmp
dec
push
adc
outsb
sub
mov
sbb
inc
push
in
movsb
movsb
ljmp
xor
jecxz
sub
mov
adc
pop
pop
inc
pop
fs
fwait
mov
push
push
pushf
add
mov
and
sarb
out
andb
jb
inc
testl
stc
inc
stc
and
jnp
xlat
fisttpl
add
fists
adc
out
testl
dec
fwait
cmp
lret
fcmovb
add
cmpsl
leave
mov
xor
out
push
mov
jns
jne
stc
and
cltd
xchg
shr
out
mov
sub
imul
and
rcl
adc
mov
sub
or
xchg
lods
movl
lret
pop
ja
mov
ret
dec
fcoms
xor
inc
ljmp
rcl
ja
push
sbb
xor
dec
xchg
xlat
push
clc
mov
mov
dec
sub
notb
jb
pop
mov
stc
push
jecxz
xchg
iret
out
cmpsl
jl
or
or
in
aad
and
das
mov
pop
shl
in
punpckhbw
lret
or
das
dec
inc
shr
pop
xchg
out
ss
fwait
and
adc
push
lock
in
scas
xor
daa
lods
int3
mov
mov
xchg
adc
cli
or
sbbl
xchg
jp
xor
lret
push
push
std
fadds
pop
ds
dec
push
mov
or
shl
dec
inc
add
push
sub
xchg
xor
fdivl
negb
lret
fstl
pop
pop
scas
sub
mov
cld
xchg
stc
mov
mov
pop
xor
inc
jge
jl
add
mov
lea
mov
add
push
jle
push
cmp
lret
push
ja
cwtl
push
fwait
or
dec
or
cmp
mov
or
cmc
xor
cmp
sbb
pop
test
cld
cmp
mov
and
clc
outsb
sbb
jg
xlat
inc
jge
adc
push
inc
xor
dec
add
push
out
xchg
mov
mov
test
insb
clc
xchg
pop
rclb
into
sub
push
cld
mov
fildll
cmp
push
sbbb
push
mov
insb
pop
pop
repnz
xchg
les
pop
scas
call
xchg
out
fcompl
les
shl
add
pusha
xchg
imul
in
stc
dec
push
movsb
pop
in
xor
js
lods
and
cli
push
loopne
ljmp
sbb
scas
je
jne
xchg
sub
add
mov
add
and
adc
clc
rorb
inc
int
jne
out
mov
icebp
in
pop
fnstcw
test
add
insb
sti
inc
fwait
dec
xchg
push
add
clc
inc
dec
xor
xlat
mov
bound
dec
xor
fadds
aaa
insl
mov
or
cltd
leave
sti
jo
popf
inc
and
xchg
mov
push
inc
incb
in
add
es
arpl
jne
mov
sbb
push
outsl
dec
ret
out
pop
leave
dec
loopne
pushf
xchg
loop
les
rorb
add
pop
imul
js
das
inc
mov
inc
jae
add
sbb
outsl
adc
pop
pop
push
cmp
out
int3
cltd
inc
adc
xlat
cmp
mov
cmp
dec
push
out
and
or
jmp
push
lods
adc
lds
pop
fs
lret
ja
jmp
add
int
in
out
mov
iret
fiadds
enter
xor
pop
mov
jecxz
pop
loope
scas
adcl
lods
sbb
mov
cmpsb
add
inc
clc
or
mov
push
enter
rolb
ret
leave
jg
push
or
mov
repnz
push
sbb
popf
das
push
mov
dec
jp
orb
loop
cmp
hlt
dec
xor
mov
out
ret
sarl
adc
test
mov
push
jo
mov
call
pop
mov
mov
bound
cmp
mov
push
push
xchg
loope
push
mov
scas
mov
add
sbb
loope
push
sbb
jecxz
aad
loopne
sahf
in
sbb
add
je
mov
pop
add
fwait
data16
outsl
cld
addl
imul
adc
cmp
inc
sarl
dec
or
jb
rorl
inc
addl
xor
push
jne
adc
mov
push
les
pushf
ret
sub
and
out
int
rorb
movsb
sbb
std
mov
sti
jecxz
jmp
pushf
push
rorl
mov
and
lock
dec
popa
push
pop
in
mov
out
mov
std
test
inc
pandn
sbb
popf
sbb
lods
jmp
pop
xchg
subb
inc
mov
xchg
cmp
pop
scas
ds
ja
sub
inc
add
mov
fstl
mov
stos
pop
stos
dec
inc
add
repz
and
test
sub
inc
sub
add
shrb
mov
mov
push
push
in
outsb
test
jmp
pop
and
outsl
push
jne
dec
jb
push
ljmp
inc
inc
aam
mov
stos
cmc
sbbl
testl
out
sub
dec
dec
test
aaa
cld
add
mov
rorl
jecxz
add
lods
out
and
stos
imul
loop
in
aad
jno
jmp
test
pop
scas
arpl
sub
sub
or
jno
cmpsl
add
fstps
insl
and
sbbl
hlt
stos
mull
clc
mov
popl
adc
shll
jle
dec
xchg
jmp
inc
cmc
and
xlat
dec
xchg
adc
rcr
and
repnz
pop
jl
into
test
sti
outsl
push
adc
dec
ljmp
push
pop
add
loop
aas
sub
push
js
xchg
push
cmp
fistps
dec
rorb
pop
xchg
adc
pop
fidivrl
icebp
daa
mov
popf
imul
out
sub
pop
jno
jge
mov
movsb
movsb
ljmp
leave
in
or
mov
push
mov
leave
popf
xchg
dec
xlat
push
shll
out
mov
or
sub
cmp
pop
jno
stos
stc
mov
dec
cmpsl
mov
ret
ljmp
loope
push
fidivrs
mov
add
xchg
std
add
loope
ret
cld
cmc
je
sbb
outsb
mov
push
lods
add
andl
mov
out
add
sbb
pop
jbe
jo
lcall
mov
stos
bound
orb
mov
nop
inc
iret
and
mov
inc
incb
mov
out
pop
in
sbb
adc
in
leave
push
cmp
ss
dec
mov
sbb
popa
adc
xor
fsubrs
ffreep
mov
jge
cmpsl
push
sahf
jo
loope
out
daa
and
jbe
and
test
push
adc
cld
sbb
xchg
push
pushf
mov
jecxz
aam
test
push
cmpsl
enter
out
xchg
popa
sbb
rorb
dec
shrl
nop
xchg
cmp
or
push
dec
aad
push
ret
cmp
icebp
pop
cli
and
push
or
mov
sub
push
inc
std
or
leave
and
xlat
popf
cmp
push
mov
mov
iret
pop
adc
sahf
adc
jp
push
cmp
dec
daa
pop
sbb
mov
or
pop
mov
cmc
jno
stc
enter
adc
aaa
add
outsl
inc
xchg
cltd
das
xor
xchg
shl
loop
pushw
out
cltd
push
in
sti
dec
repz
ret
jmp
or
push
pop
xchg
sbbl
cmp
mov
adc
fistpll
adc
push
scas
imul
cmp
dec
xchg
push
cs
lods
movsl
cs
xlat
cmpsb
jns
fcoms
xchg
jbe
test
outsb
mov
xor
push
out
push
ds
iret
sbb
xchg
je
leave
lret
std
mov
and
ret
cmc
mov
add
gs
sub
and
lods
xor
out
in
fisubrl
inc
mov
mov
xchg
scas
cli
jbe
outsl
sub
call
adcl
mov
mov
ret
xor
fdivp
inc
xor
cli
popa
into
shlb
fsubr
push
xor
pop
imul
jo
sub
jno
xor
mov
call
dec
pop
dec
sahf
rcll
jle
int
mov
or
movsl
lods
xchg
cmp
mov
stos
adc
push
in
mov
add
pop
jecxz
aas
or
insl
cli
jg
loope
mov
pop
mov
or
lods
mov
bound
or
mov
mov
fstpl
cmpsb
das
fs
inc
mov
mov
les
fiadds
data16
inc
xor
or
lods
xlat
mov
cli
mov
adc
adc
mov
xchg
lahf
lea
sub
adc
mov
jo
cmpxchg8b
lcall
outsl
sbb
jle
cmp
cmp
orb
rcr
xchg
pop
mov
add
mov
push
add
stos
or
dec
lahf
and
aas
orb
push
pop
xchg
pop
jmp
adc
dec
sti
adcb
mov
push
call
dec
repz
in
mov
das
sub
pop
sub
loop
push
data16
fwait
ret
loopne
push
pop
xorl
out
ret
dec
jbe
mov
loopne
pop
int3
fnstcw
cld
imul
out
lods
add
inc
add
stc
push
sub
sbb
repnz
mov
int
sub
sbb
xchg
lret
jp
inc
je
out
adc
sub
ret
adc
loopne
pop
repz
in
and
jb
add
adc
xchg
mov
jl
sbb
push
xor
sub
cmpsl
and
orl
insl
add
int
cmpsb
inc
pop
out
ret
mov
test
shl
mov
sub
or
les
ret
xor
xlat
mov
xchg
cld
pushf
bnd
jle
bound
pop
or
mov
mov
es
out
add
lret
pop
inc
iret
pop
xchg
push
dec
sub
pop
mov
mov
orl
mov
jl
loopne
and
in
mov
mov
or
inc
data16
out
cld
mov
xchg
push
cmp
push
xchg
repnz
ret
xchg
popl
mov
ja
mov
push
lcall
add
jb
mov
xchg
icebp
adc
pop
mov
ja
adc
push
mov
call
mov
dec
dec
add
jge
push
jmp
int
in
push
ret
dec
hlt
push
and
or
je
mov
sarb
lret
ret
mov
ds
enter
and
mov
dec
cmp
adc
cltd
xlat
mov
ret
mov
xor
lds
add
cmp
xor
addr16
lahf
cmp
shlb
mov
push
in
jb
dec
lret
stos
mov
mov
adc
push
stos
mov
pop
mov
data16
or
mov
ret
sbbl
mov
push
pop
jl
cmpsl
lret
dec
fildl
or
pusha
jo
int
pop
insl
inc
shrl
sarl
mov
inc
es
test
fbld
sub
pop
jno
xorl
mov
cwtl
fprem1
insb
and
mov
aad
orb
stos
hlt
enter
out
mov
adc
and
adc
mov
inc
insl
pop
fiaddl
mov
mov
push
pop
cmc
imul
cmpsl
xor
mov
cmc
and
inc
lea
mov
dec
mov
aaa
jne
loop
call
inc
fistps
and
xchg
mov
lds
cmp
fidivs
pop
jne
mov
add
jno
adc
mov
and
add
cmp
int
into
addb
mov
push
sbb
add
mov
shl
pop
push
dec
xor
fmull
push
insl
xor
int
sub
sbb
movsb
mov
mov
sub
out
mov
icebp
push
loop
sbb
rcrb
stos
xor
ljmp
gs
lcall
sti
pop
shl
mov
and
xor
jb
orb
das
mov
fldcw
neg
ffreep
data16
sub
popf
mov
fnclex
lock
cmp
imul
gs
xchg
outsb
cmp
pop
push
loopne
imul
add
jne
sub
lds
fiaddl
xchg
inc
ror
push
insb
out
cmpsb
mov
aam
cmp
out
notl
push
fucom
insl
and
movlps
lds
push
test
or
pop
dec
ret
jno
cmp
cmp
dec
sti
es
or
dec
push
lods
rol
rcrb
sub
lods
pop
test
jge
sub
iret
jecxz
pop
pop
adc
rcll
or
or
sub
les
push
inc
jmp
xlat
cmp
mov
lret
imulb
fcmovne
or
pop
pushl
jne
les
mov
stc
push
push
push
lret
dec
shlb
test
inc
repnz
int3
clc
es
adc
clc
jno
sub
mov
mov
cmpsb
push
pushf
lret
and
imul
xchg
push
fmull
and
cmp
fisubrs
sbb
shrb
xor
pop
pushf
out
lcall
cmp
adc
cltd
cmpsl
and
arpl
hlt
jmp
outsb
ljmp
rolb
out
xchg
inc
mov
xlat
mov
add
sbb
xchg
inc
or
hlt
inc
xchg
aam
andl
enter
dec
and
pop
pop
pusha
push
mov
arpl
dec
sbb
mov
jle
push
enter
outsl
jp
cmp
sub
push
cltd
out
cmc
push
stc
in
movsl
sub
pop
and
jb
in
dec
mov
scas
shll
aaa
push
pop
gs
mov
lock
xchg
cs
jmp
add
mov
jbe
jg
imul
mov
inc
hlt
aam
sub
jb
pushf
insl
add
mov
daa
idiv
cmc
js
shl
jno
stos
push
push
adc
lahf
fwait
jo
push
dec
stos
xchg
mov
ja
or
pop
bound
or
or
or
ja
mov
bound
jg
xchg
or
push
popa
xchg
mov
pop
inc
xchg
loop
mov
push
test
push
sbbw
bound
and
add
frstor
sub
push
test
dec
push
stc
dec
or
inc
sub
js
mov
mov
inc
cmp
or
cmpsl
dec
stos
or
mov
in
sarl
outsl
xchg
out
push
in
in
sub
imul
sbb
xchg
lret
shll
jg
shrl
clc
fistpll
mov
sti
negb
fbstp
cmpsb
sbb
xor
cltd
cld
pop
mov
adc
es
addr16
and
dec
jge
cmp
scas
push
xchg
xchg
stc
data16
int
dec
mov
sbbb
pop
repnz
dec
mov
jecxz
and
dec
jo
shll
movsb
aad
les
or
jle
call
in
push
pop
addl
xor
bnd
enter
or
inc
inc
mov
cs
out
push
cmp
rol
xchg
fwait
xor
or
dec
adc
lcall
lret
xchg
cmp
ds
mov
mov
mov
xchg
xor
adc
addl
out
cli
pop
loope
fxch
jl
test
stos
in
sub
jnp
mov
add
in
popf
mov
cmp
inc
mov
jl
jge
arpl
lods
mov
cmp
pop
test
inc
push
into
pop
jne
mov
mov
mov
sti
cs
and
lret
jmp
cmpsb
jge
push
push
jbe
out
adc
out
sbb
test
mov
inc
stc
and
in
pop
xor
mov
dec
js
xor
or
cmp
bound
call
inc
mov
or
in
xchg
aaa
imul
mov
iret
mov
mov
xchg
inc
pop
into
in
add
out
jne
xorl
pop
push
sbb
insb
lds
push
inc
shlb
jmp
add
lods
push
jns
in
out
xor
adc
hlt
xchg
mov
das
nop
push
lods
mov
icebp
xchg
xor
mov
push
sti
xchg
mov
in
push
push
jge
adc
cwtl
pop
mov
xbegin
test
dec
out
mov
push
mov
shl
mulps
mov
cmc
and
int3
sub
mov
pop
mov
negb
adc
pop
ss
cmpb
lods
cmp
fsubl
sub
mov
orb
incl
rcr
div
mov
jne
in
lods
xorl
inc
insb
jbe
add
push
jle
leave
pop
lds
or
outsl
cmp
jnp
cltd
popa
and
leave
inc
fsts
sub
mov
mov
or
jbe
in
js
decb
sub
ficoms
push
and
mov
popa
adc
jnp
mov
adc
test
cmpsl
lahf
add
xlat
in
pop
mov
lea
enter
add
fsubl
cmc
inc
xchg
xchg
call
mov
data16
sub
xorl
fldenv
cwtl
add
cmpsb
enter
js
mov
aas
insl
xor
sub
cmpsl
jne
gs
mov
movsb
or
jne
lret
inc
mov
mov
jne
pop
push
fbstp
pop
jg
inc
out
and
sbbl
test
xlat
cmp
pop
mov
adc
jmp
icebp
pop
add
popw
cltd
push
and
daa
mov
or
push
xchg
movsl
test
rolb
mov
pop
add
daa
inc
lods
ret
in
das
pop
inc
lret
fs
add
fwait
ss
adc
push
push
xchg
nop
pop
fisttpl
insb
popa
or
rcrl
andb
add
popf
sbb
ljmp
dec
push
mov
jbe
stos
rclb
repnz
lock
scas
push
push
inc
test
mov
or
xchg
cmp
fisubl
lahf
push
or
mov
into
pushl
push
cmp
cmp
ja
les
add
xor
adc
mov
inc
xchg
sbb
jo
fcoms
and
push
inc
aam
popa
jne
lods
mov
and
mov
arpl
jge,pt
sub
test
ja
fwait
mov
mov
inc
imul
pop
xchg
mov
or
inc
mov
into
add
mov
icebp
push
mov
clc
aam
adc
es
push
outsb
pop
cmpsb
xor
fnsave
jge
cld
in
stos
movsb
pop
jo
imul
mov
popa
jns
adc
icebp
cmpb
or
jp
jns
pusha
cmp
shrb
add
push
clc
cmp
xor
xor
mov
xor
jp
pop
cmp
test
ret
jae
daa
hlt
and
dec
inc
pop
sbb
cmp
mov
adc
lret
incb
adc
loope
icebp
stos
outsb
mov
or
decl
xchg
pusha
jecxz
xchg
test
xchg
jne
jo
popa
bound
sbb
flds
aam
push
arpl
push
add
mov
movsb
push
xor
or
sbb
les
and
pop
ret
ss
xchg
pop
xchg
xchg
movsl
cmp
and
repz
out
cmp
push
mov
cmp
xor
lret
sbb
mov
loope
or
mov
mov
pushf
scas
ret
mov
push
jbe
mov
or
in
roll
ret
jecxz
cmp
cmp
mov
sub
push
cmpl
icebp
jl
mul
xor
mov
or
and
out
dec
imul
fs
int3
jne
xchg
mov
adc
ret
pop
out
jno
in
ljmp
in
cmp
arpl
roll
jno
int3
inc
sub
je
jge
sbb
mov
sub
sbb
sub
lods
inc
xlat
hlt
jnp
out
pop
repz
sbb
sub
ss
push
inc
add
movsb
fdivrs
cmp
inc
jecxz
imul
adc
sub
mov
push
pop
xchg
pop
popf
pop
jno
adc
and
xchg
and
sub
repz
adc
push
ja
and
lret
sub
in
out
movsb
popf
lods
and
dec
sbb
or
jg
jno
xchg
mov
add
scas
mov
fmulp
loopne
jns
adc
scas
aaa
insb
push
xorb
adcl
jo
cmp
mov
int
aad
push
aaa
cwtl
sbbl
xor
xchg
push
movsb
icebp
push
sbb
jo
mov
nop
push
xor
and
stc
inc
cmp
shlb
and
xlat
push
imul
cli
dec
jg
lock
or
pop
xor
pop
enter
pop
iret
pop
adc
sub
mov
jle
mov
sbb
push
jle
xchg
leave
jecxz
pop
ja
xor
ss
inc
mov
sbb
jno
bound
add
or
or
in
loop
iret
icebp
sbb
enter
in
mov
les
lret
add
aas
push
cld
add
xchg
aam
lea
jo
and
mov
in
jecxz
xor
push
mov
push
std
clc
in
test
cmp
incl
jle
cmp
pop
sub
add
aad
or
push
fimuls
inc
xchg
cmp
jl
xchg
cmpsb
arpl
decl
lds
cmp
push
imul
add
cmpb
cs
xlat
sahf
mov
cli
dec
push
mov
outsb
pop
mov
into
fcompl
jl
repz
lea
push
push
testl
xchg
pop
minps
jp
cmp
or
decl
insl
sub
pop
dec
dec
mov
sahf
cmp
jl
dec
iret
xlat
jns
addr16
mov
sub
mov
or
rorl
mov
mov
sbb
mov
add
mov
push
pop
js
scas
xchg
rorl
and
cmpsb
insb
dec
mov
orb
mov
and
incl
cmpsb
pop
icebp
xchg
or
ret
mov
jns
fwait
icebp
ja
movsl
lret
and
xor
nop
sub
lods
in
push
loop
cmp
jne
or
loope
mov
ss
subb
repz
test
mov
popa
mov
pop
cmp
sbb
loop
mov
in
mov
cmp
xchg
test
lds
lods
adc
insl
sbb
mov
movsb
mov
ret
mov
sahf
xchg
gs
cli
movsl
icebp
push
aam
cltd
and
xor
jmp
dec
andb
xor
in
jb
lret
xor
mov
ss
mov
add
sarl
call
es
sub
jmp
xchg
mov
mov
cmp
mov
push
es
outsb
into
xchg
and
inc
lret
or
pop
push
inc
inc
lahf
notl
add
in
loope
repz
fisubrl
loopne
mov
aad
xchg
dec
les
hlt
jno
jge
int
fstps
and
or
pop
mov
xchg
push
addl
cmp
jns
into
push
ss
cmp
and
aad
fsubs
inc
inc
pop
cli
sub
aam
push
push
and
push
jae
clc
jmp
add
sbb
xor
mov
mov
sahf
mov
data16
and
icebp
test
test
jo,pn
mov
data16
xchg
and
fsubrp
add
daa
cmp
sub
popl
pop
adc
out
add
or
push
cmpl
aas
pop
lea
mov
test
leave
sub
jmp
movsl
adc
mov
cmp
fwait
mov
jmp
xchg
in
rcrl
mov
out
shll
popf
pop
inc
or
mov
push
test
add
test
mov
lahf
dec
dec
ret
sti
out
insl
push
or
icebp
es
dec
and
ljmp
mov
or
ret
adc
in
adc
aas
std
mov
lret
mov
mov
lods
xor
sub
jbe
mov
fbstp
mov
dec
jo
bnd
sub
rcrl
sahf
or
pop
mov
outsb
test
pop
cmp
xor
fisubrs
xchg
pushf
xor
movsl
mov
mulb
xchg
mov
leave
add
xor
je
mov
std
stos
subb
repz
orl
lds
push
adcb
outsb
jbe
pop
push
bound
jnp
jns
or
stc
and
add
jge
cmp
lret
test
repnz
nop
add
mov
add
inc
popf
push
push
adc
jmp
int3
movsl
gs
popa
imul
cli
das
pushf
scas
push
stos
adc
sbb
add
mov
iret
mov
scas
lahf
jl
pop
out
push
adc
sarb
leave
std
in
rol
cli
mov
adcl
pop
loope
sbb
adc
jp
aas
adcb
cmc
cmp
aad
mov
pop
lods
clc
jo
fstl
jne
inc
cmp
mov
imul
mov
ret
dec
inc
sbb
sub
adc
sahf
mov
sbb
pop
fidivrl
adc
or
jl
out
in
iret
mov
test
jnp
out
or
pop
push
out
lea
mov
hlt
mov
bound
mov
cwtl
jns
add
jg
je
sbb
push
test
push
sti
in
fcoml
rcr
push
out
or
adc
push
es
pop
or
mov
cmp
hlt
jb
aam
sbb
xchg
fistl
mov
and
iret
mov
mov
clc
xor
scas
adc
sti
orb
ss
xlat
cmp
gs
mov
aas
push
pop
test
shr
out
daa
in
dec
jecxz
enter
inc
xorb
jp
pop
pop
adc
loopne
out
fdivrs
pop
lock
and
xor
xor
mov
ror
outsl
add
icebp
jo
lds
mov
inc
frstor
adc
add
fisttps
ffree
outsl
sti
cmp
mov
out
xor
leave
cmp
out
dec
sbb
andb
test
fidivl
dec
leavew
pushf
dec
into
push
movsl
mov
sbb
jg
jns
or
sbb
imul
adc
sbb
or
out
fmul
add
adcl
push
push
imul
xorl
in
je
adcl
lea
dec
mov
or
divl
mov
rorl
arpl
lock
outsb
or
sti
int3
sahf
fstpt
jge
mov
pop
in
data16
and
fmull
enter
shrb
test
xchg
ret
jo
in
add
or
pop
fimuls
mov
push
mov
ret
push
int
and
push
dec
adc
lahf
test
xchg
fcompl
xchg
enter
dec
sbb
mov
cmp
ds
xchg
inc
ljmp
fsubl
adc
cli
sub
pusha
pop
ljmp
js
popa
or
fisubl
cmpsl
packsswb
pop
adc
outsl
mov
or
xor
cwtl
push
lcall
inc
in
scas
jb
pop
xor
mov
je
sbb
jecxz
mov
loope
add
push
mov
push
pop
pop
add
insb
dec
js
sti
out
dec
mov
out
sbb
push
jl
or
cli
mov
push
lods
jmp
in
adc
xor
packssdw
mov
push
xor
insl
jg
xor
xchg
and
dec
out
dec
fldl2t
out
xchg
lock
out
insb
mov
cmp
dec
xlat
je
mull
mov
fisubrs
das
dec
dec
cmp
pop
xchg
out
sub
push
jle
xor
add
xchg
pop
popa
xor
stos
aas
push
inc
jl
test
aaa
lcall
mov
and
cmp
sub
fmuls
out
pop
je
pop
mov
shlb
xchg
adc
and
mov
das
mov
aad
adc
cs
in
xchg
dec
test
add
and
sbb
testl
pop
aad
stos
push
or
mov
and
jb
mov
les
lret
mov
pushaw
mov
test
mov
outsl
int
sub
insl
fcomps
adc
add
jnp
cwtl
inc
bound
fldt
sub
xchg
or
lds
fsubl
and
je
cmc
and
cmc
push
sub
lahf
or
xchg
cli
pop
push
sbb
jmp
jae
xor
shlb
pop
adc
add
ja
orl
std
adc
nop
sbb
ja
push
xchg
vmread
lahf
and
mov
in
push
data16
or
xor
call
mov
cmp
adc
dec
pop
xchg
dec
insb
rclb
sub
sub
rolb
in
jecxz
outsl
std
iret
cmp
sbb
mov
in
push
and
in
or
int3
jae
sahf
jbe
popf
sbb
push
cwtl
sub
pushf
aas
sub
or
scas
add
pop
jl
jo
int
lods
xchg
inc
lds
xor
jg
mov
in
repz
inc
rcrb
out
and
cmpsb
dec
test
insl
ljmp
push
inc
pop
mov
mov
iret
test
adc
xchg
shl
icebp
sub
test
mov
mov
lods
xor
lods
or
and
push
out
sub
add
addl
insb
jl
inc
xchg
repz
or
pop
out
mov
dec
pop
mov
push
mov
lock
push
adc
rcll
int3
loop
fstpl
gs
jnp
push
jno
sar
or
xchg
into
and
cld
outsb
xor
pusha
repnz
xor
jmp
jecxz
push
pusha
out
mov
aaa
stc
mov
lahf
movsb
add
rcrb
mov
mov
or
mov
stos
lock
dec
es
repz
sbb
loop
xor
popf
dec
gs
add
ret
pushf
dec
stos
pop
nop
bound
pushf
ljmp
xchg
adc
mov
mov
insb
pop
sub
jb
push
add
lods
sub
inc
jne
mov
mov
lahf
or
sbb
push
insb
arpl
aaa
mov
mov
lcall
in
mov
test
pop
andps
inc
loope
push
mov
arpl
and
mov
insl
and
aas
jle
dec
insl
cli
add
inc
mov
xchg
pop
or
out
mov
mov
sbb
leave
cmc
arpl
cmpsb
adc
jge
clc
lret
mov
mov
adc
mov
dec
push
jnp
mov
lret
and
add
mov
sbb
cltd
int3
fcmovnu
lods
or
xchg
cmpsl
ja
and
cmpb
scas
icebp
xchg
test
divl
adc
xor
leave
or
sub
je
aam
mov
imul
sbb
lret
push
into
inc
xchg
or
sahf
mov
stos
dec
loopne
loop
push
and
dec
leave
fs
lahf
int
scas
xchg
fwait
repz
iret
int
incl
fwait
rolb
xor
mov
icebp
dec
pop
mov
loopne
sbb
sbb
and
xlat
mov
outsb
test
push
push
or
push
xchg
roll
dec
jbe
sub
adc
out
icebp
pop
sub
dec
out
int
mov
dec
into
pop
push
dec
ret
cld
jae
mov
sahf
or
jnp
imul
call
shrl
loope
mov
loope
fmuls
xchg
cmpsl
jl
out
scas
out
fnstenv
xchg
daa
jecxz
iret
mov
insl
imul
jge
push
jnp
mov
out
insl
push
mov
mov
fsubs
hlt
lods
dec
push
sbb
stos
xor
pop
or
out
in
ficoml
xchg
mov
cli
test
or
dec
shlb
adc
lods
rcll
sbb
fcomip
call
sbb
push
pop
cmp
ds
pop
fnstsw
xchg
cld
and
push
sub
adc
stc
cmp
imul
push
dec
jbe
cwtl
xchg
out
mov
insb
hlt
loop
roll
scas
popf
lret
idivb
jbe
cmp
xor
popa
xchg
and
aam
ss
push
movsl
hlt
test
in
std
sbb
insb
repnz
dec
inc
inc
les
add
cmpsb
xchg
bound
push
out
or
xchg
or
int3
stos
push
mov
in
ja
cmp
fidivl
mov
enter
xchg
pop
sub
test
pop
push
cs
test
jecxz
je
sbb
into
insl
leave
mov
mov
push
lock
test
sahf
iret
jmp
pusha
sub
fstps
cwtl
fldenv
mov
movsl
out
xor
mulb
dec
xchg
popf
sahf
mov
xor
push
icebp
cmp
push
fs
addl
shlb
mov
les
and
into
jp
pop
mov
hlt
ret
push
mov
push
shlb
and
mov
dec
and
mov
xchg
imul
or
iret
push
and
xor
xor
mov
mov
jp
xor
popf
push
ret
mov
les
std
sub
fnstenv
js
pop
gs
stos
cltd
fsubrs
fldenv
add
pop
lcall
in
sahf
lds
mov
push
into
cmpsl
repnz
iret
push
cmp
lret
adc
push
test
in
sub
mov
and
int3
or
pop
xchg
add
or
aam
push
add
and
add
repnz
dec
adc
xchg
add
aad
jno
orb
pop
cmp
pop
std
push
xchg
aaa
xchg
dec
pop
fnstenv
mov
roll
cmp
cmp
addr16
xchg
rcrl
adc
mov
scas
enter
aaa
sub
cli
aad
test
cmp
jae
xlat
cmp
out
mov
sub
cmpl
push
xchg
or
push
or
xchg
cmp
cmp
hlt
sbb
stos
jns
xchg
mov
sub
sbb
aas
push
mov
rorl
js
in
lods
xlat
popa
or
fs
push
test
data16
lock
out
repnz
pop
and
and
jae
aaa
and
cmc
pop
jno
jbe
dec
aaa
dec
cmp
inc
outsl
jge
mov
mov
imul
mov
in
inc
xor
pop
push
jl
call
add
das
repnz
xor
fdivrp
enter
xchg
jmp
cmp
xor
cmp
push
cmpsb
into
or
push
push
ljmp
inc
insl
movsb
sahf
sbb
mov
nop
scas
pop
fs
ja
pop
mov
mov
aas
adc
mov
aam
repz
dec
das
shrl
jbe
aas
imul
inc
or
fsubr
lds
mov
push
xor
sbb
out
fmul
aam
dec
sbb
xchg
sub
jmp
cmpsl
lods
in
add
or
fnstenv
jg
nop
out
int3
jp
xchg
aad
loop
inc
cwtl
adc
lret
out
push
lcall
rclb
scas
xor
xor
shrl
inc
jae
pop
icebp
or
pop
xchg
cmp
inc
sub
rol
inc
inc
cmp
dec
and
imul
push
outsl
mov
mov
iret
lcall
rclb
test
add
out
cmp
and
sub
insl
jo
std
jns
test
aas
test
xorl
dec
in
fisubrs
ficoms
sahf
or
xchg
adc
and
mov
test
notl
sahf
data16
mov
mov
jmp
dec
xchg
mov
and
push
add
dec
sub
mov
xor
jb
push
lahf
mov
dec
test
push
cld
xchg
es
sahf
bound
xchg
sub
xor
aad
enter
mov
cmc
inc
xchg
test
out
xchg
fwait
jg
test
push
call
dec
lahf
fs
cmpsl
jl
and
and
in
lret
and
mov
xor
or
sub
ss
sbb
sbbb
stos
test
adc
lock
dec
and
xchg
push
pop
sahf
mov
mov
test
arpl
pusha
bound
vpacksswb
shlb
jle
sahf
loopne
ds
test
std
fcomps
stos
jge
inc
ss
or
inc
add
outsl
add
sbb
mov
fisubs
jo
xorb
outsb
comiss
cmc
pop
push
out
out
adc
fs
push
and
push
pop
stc
or
xor
mov
jbe
sti
xor
mov
dec
rolb
push
push
test
orl
dec
mov
xor
movsb
xor
dec
lcall
test
sti
jecxz
ljmp
jae
lcall
add
negl
imul
jge
adc
in
fbld
sub
mov
andl
xchg
arpl
insb
rcrl
mov
bnd
lea
xchg
xor
out
or
loopne
xchg
jle
and
xchg
mov
inc
inc
adc
add
outsb
mov
xchg
iret
xor
nop
jmp
inc
popf
sbb
jl
adc
iret
lahf
mov
push
sub
add
cmp
popf
movsl
shll
sbb
outsl
cmpsl
jmp
inc
xchg
dec
scas
ljmp
cmc
add
cld
shl
call
lock
lret
int
lcall
lret
test
jle
mov
cmp
xchg
mov
mov
sub
cld
mov
xor
mov
cmp
dec
mov
sbb
mov
inc
mov
insb
sub
lcall
adc
adc
fildl
or
xor
cmp
pop
enter
enter
fs
mov
adc
lods
push
in
imul
scas
jae
ret
cmp
dec
mov
jmp
pop
cmp
push
out
std
in
fsub
cmp
dec
cmpsb
push
fistl
xchg
pop
lret
jg
shl
daa
mov
or
sbb
lcall
xchg
and
xor
int3
jg
pop
int
adc
imul
xchg
jb
pop
popf
xor
rcl
adc
ss
sbb
in
data16
sbbl
mov
into
loop
ja
test
scas
push
movsl
mov
aam
sbb
inc
pop
jge
adc
pop
insb
in
pop
aas
or
clc
jb
push
fcom
loope
insl
lods
test
inc
pop
adc
mov
push
inc
inc
int
mov
jl
outsl
or
jae
pop
pop
fistpll
push
mov
out
inc
dec
sub
pushf
jne
push
leave
mov
jg
stos
enter
ss
push
out
xchg
imul
jb
roll
inc
add
into
dec
fwait
addr16
repz
test
sbb
xchg
in
sub
dec
gs
ljmp
mov
pop
aas
dec
mov
emms
hlt
push
aaa
mov
push
aaa
jns
jne
pop
jnp
insb
loopne
push
push
pushf
out
add
push
lcall
dec
jne
sub
aas
iret
in
add
adc
dec
jp
lea
fidivrs
dec
sar
mov
mov
cmc
repnz
or
pop
cmp
pop
jae
pop
mov
outsb
daa
sarb
scas
ja,pn
push
popa
adc
sub
adc
std
out
imul
or
aaa
adcb
mov
lret
dec
inc
in
es
idiv
rcrb
dec
sahf
setp
mov
fcoml
fwait
stos
loop
xor
sbb
xor
add
push
sub
call
fwait
lcall
cli
dec
cmpsl
stc
xchg
xchg
mov
imul
sbb
inc
xor
add
sbb
push
mov
cmpsb
xchg
adc
sbb
cmpsl
leave
imul
and
hlt
mov
addr16
shrl
pop
pop
out
mov
pop
sahf
jbe
jnp
and
ja
stos
cmpsb
push
loopne
shlb
aam
aad
stc
repz
in
or
js
xor
in
push
rcll
cli
mov
daa
pop
cld
jbe
out
fisttps
mov
sbb
pusha
repnz
inc
or
mov
and
mov
lcall
pop
dec
stos
sahf
xchg
pop
pusha
out
xor
and
aaa
test
loop
pushf
mov
ret
loopne
addl
mov
insb
popa
pop
loopne
inc
lcall
xlat
xchg
sbb
loopne
pusha
cltd
inc
sub
cltd
push
xor
out
decb
or
mov
and
xchg
gs
aas
mov
xor
mov
pop
add
xor
pop
shll
into
dec
mov
rolb
pop
xchg
sbb
pop
mov
pop
mov
scas
pop
dec
pushf
ficoml
cmp
adc
push
push
sbb
aas
fnstsw
sbb
add
out
hlt
sahf
mov
fs
cmpsl
push
xchg
aad
pop
test
xorb
xchg
bt
lret
add
mov
outsb
fidivl
mov
lret
adc
sub
pop
sub
mov
lret
add
ja
mov
addl
and
cmp
push
scas
xchg
or
mov
sahf
dec
das
lret
stos
add
popf
xchg
icebp
and
aad
repz
sbb
or
cmp
or
mulps
lea
jle
jl
movsl
inc
inc
imul
add
out
cmpsb
aas
mov
outsl
xor
test
imul
arpl
pop
xchg
mov
push
push
sub
and
clc
ljmp
paddb
xchg
dec
jecxz
ja
jge
jo
and
inc
adc
mov
stc
ds
xchg
out
test
jo
lea
mov
ja
and
ja
pop
cmp
shr
test
push
dec
xchg
sub
pop
lcall
aaa
xchg
mov
sbb
dec
xor
scas
jle
in
dec
rcrl
outsb
pop
push
mov
fisttpll
pop
xorl
push
pusha
push
insb
icebp
out
inc
sub
push
stos
cmpsl
in
xchg
fdivr
shl
add
mov
add
test
sbb
jo
das
xor
jle
shlb
lock
cmc
iret
cs
mov
xor
dec
hlt
mov
daa
aaa
push
push
ss
adc
stc
outsb
lcall
jp
fsubrl
pop
adc
fiadds
add
xchg
inc
test
sbb
push
dec
xor
pop
cmp
out
ret
or
shlb
ljmp
addr16
xchg
xlat
add
xchg
mov
stos
adc
orb
xchg
cmpsl
ss
adc
rep
das
and
icebp
subl
mov
xor
cwtl
cmc
mov
pop
xlat
jb
pcmpgtb
cs
popf
paddusb
xchg
push
shrb
push
cltd
xor
outsb
mov
lds
std
pushf
lods
movsl
xchg
std
push
add
xchg
push
add
jnp
call
pop
sahf
ljmp
loop
push
mov
add
inc
inc
dec
and
outsb
cli
hlt
mov
add
enter
inc
mov
ja
push
movsl
mov
jnp
xchg
push
pop
inc
pop
sub
push
adc
leave
dec
cmp
repnz
outsl
push
aaa
filds
mov
adc
xchg
mov
cmp
jp
std
mov
push
out
sarl
push
std
ret
popa
dec
mov
xor
push
andb
or
les
sahf
or
std
push
sub
lock
inc
xchg
adc
outsb
inc
cmp
enter
xor
mov
cwtl
jmp
loopne
incl
push
jmp
out
std
addr16
xchg
test
std
xlat
push
pop
or
push
adc
jae
push
aas
ret
stos
inc
ljmp
xchg
int3
jnp
dec
and
pop
jge
ljmp
cmpsb
mov
inc
jle
xor
not
es
aaa
and
mov
inc
and
orb
jns
imul
hlt
inc
pop
nop
sub
sub
jp
shl
xchg
je
mov
test
int3
loop
ss
aad
pop
xchg
push
dec
dec
shr
divb
mov
cmpsl
ljmp
cmc
dec
or
mov
addr16
lret
add
inc
scas
add
dec
inc
xchg
insl
jbe
xlat
sub
inc
cs
mov
mov
mov
call
mov
mov
test
aaa
inc
push
fisubrs
lock
dec
jg
rcrb
inc
inc
dec
xchg
stc
sti
leave
inc
mov
pusha
push
push
xor
push
loopew
mov
jb
ret
add
sub
lods
add
or
mov
mov
hlt
sbb
sub
mov
xor
jp
cwtl
ss
push
cmp
mov
xchg
fidivl
and
jbe
xor
push
fcompl
pop
dec
add
xor
movsb
aas
inc
add
push
sbb
sahf
mov
loop
sbbb
pop
adc
stos
call
push
push
adc
insl
enter
les
loope
push
cmp
or
fwait
cltd
pop
not
or
loopne
sahf
stos
xlat
ja
jae
and
fistps
jnp
adc
or
xor
repnz
jge,pt
fnsave
aam
mov
jge
lods
mov
push
mov
mov
in
fcomip
mov
mov
add
mov
iret
mov
out
pop
rol
jle
ja
jne
xor
out
adc
mov
adc
in
leave
or
hlt
out
mov
jnp
cmp
leave
je
int3
test
jno
push
subl
jnp
test
cmpsl
dec
std
mov
mov
or
mov
fidivl
in
sbb
mov
aad
jp
jle
xchg
dec
mov
scas
test
movsl
pop
sub
in
and
gs
in
lods
or
jle
jmp
rcrb
mov
xchg
mov
jg
cmp
repz
aas
push
push
shll
fwait
push
rorl
icebp
dec
rcrl
mov
jb
out
mov
mov
ja
sbb
inc
enter
mov
shl
jge
sbb
aas
test
push
clc
mov
clc
inc
or
stos
lahf
mov
loopne
push
das
rcrb
lds
ficoml
jecxz
pop
mov
outsl
mov
adc
loop
rcrb
sarb
jno
jmp
add
push
nop
push
inc
jae
mov
aad
mov
jl
scas
pop
cmp
mov
push
or
in
dec
mov
imulb
ret
lock
cmc
mov
xor
stos
lcall
mov
inc
cmc
ja
out
xchg
push
lret
loope
inc
mov
add
aaa
loop
inc
clc
and
je
in
sbb
vminpd
paddsw
adc
xor
xchg
ds
jmp
fidivs
or
dec
push
leave
repz
jl
pop
fcmovnbe
mull
repnz
xor
cli
jbe
mov
gs
and
insb
int
fiadds
notb
push
aad
imul
mov
or
imul
das
sub
sub
scas
popa
ja
mov
jae
pop
add
fwait
call
jle
jno
jle
jecxz
out
ja
pop
stc
imul
add
pop
dec
pushf
jnp
xor
jns
lods
inc
add
icebp
sbb
add
or
and
call
mov
test
pusha
pop
daa
or
sub
cmp
lods
call
or
std
fcmovb
loope
fbld
jbe
ljmp
ret
cltd
js
pop
push
mov
sbb
jp
cmp
pop
push
stos
stc
mov
out
sub
jae
clc
test
mov
lock
cmp
mov
pop
xchg
or
testl
fs
insb
mov
out
xor
mov
fldt
rol
sbbb
and
into
fiadds
ljmp
cmp
push
in
loope
mov
testb
dec
dec
int3
out
jns
cmp
xor
xchg
out
xchg
stos
outsb
fcoms
and
jb
pop
lahf
adc
and
add
jecxz
fwait
xchg
mov
aad
lret
sub
sbb
push
adc
lock
subl
subl
lahf
es
jp
out
or
or
inc
jg
insl
jae
aad
push
sub
outsb
xor
fdivrs
sbb
cmp
sbb
mov
dec
repnz
pop
pop
daa
inc
xorl
cmpb
test
mov
bound
out
adcl
in
outsb
ret
icebp
or
pushf
mov
mov
bnd
cmp
mov
inc
sub
test
movsl
rcrl
out
cmpl
fbld
and
adc
push
loop
adc
mov
test
dec
jb
mov
mov
mov
push
or
xchg
je
pop
fiaddl
clc
sub
jb
jmp
adcl
pop
inc
loop
fsts
jne
outsb
add
rolb
dec
jmp
lods
arpl
subb
cmc
test
psubw
fstpl
and
outsl
clc
sbb
sub
sahf
mov
test
dec
add
mov
aaa
call
dec
data16
add
mov
mov
jecxz
rcrb
pop
inc
mov
mov
inc
lock
mov
sbb
jno
jle
ss
mov
and
in
roll
in
jp
adc
loop
mov
out
or
or
out
push
mov
cmp
inc
xor
inc
push
lock
dec
add
xlat
cmpsb
dec
inc
sub
push
sti
pop
xor
insb
dec
adc
adc
stos
push
inc
mov
cmp
mov
jnp
sbb
push
ret
in
out
cli
and
lret
fwait
dec
inc
mov
cmp
push
xchg
test
xchg
mov
sarb
mov
cs
iret
test
ja
and
cmpsb
enter
push
aas
sbbb
sti
std
mov
lds
icebp
and
mov
pushf
frstor
push
ljmp
mov
incb
fwait
mov
icebp
icebp
or
pop
mov
mov
dec
mov
loope
in
mov
lods
lret
mov
testb
sbb
ja
int3
push
insl
mov
or
cmp
push
cltd
aaa
lds
scas
or
jle
push
in
ret
jbe
cltd
dec
xor
mov
mov
push
add
jbe
lahf
aad
xor
rcr
xchg
dec
scas
pop
dec
stc
lahf
jns
and
push
jnp
adc
inc
fisttps
jle
push
push
call
or
xchg
adc
sarb
gs
and
test
push
in
out
dec
cli
outsl
pop
sbb
clc
xchg
jns
pop
inc
mov
mulb
pop
and
sub
mov
sub
mov
and
in
sbb
or
repz
cld
mov
pusha
mov
sbb
gs
dec
cmp
rorl
das
adc
movsl
cmp
adc
scas
mov
cmpb
imul
and
add
rcll
lret
shll
sub
imul
jmp
mov
mov
daa
das
sub
add
not
xor
xchg
pop
mov
mov
outsb
cld
repnz
insb
filds
insl
and
filds
jmp
inc
cmp
mov
mov
movsb
xchg
jl
push
lods
mov
xchg
add
and
or
push
fwait
mov
jo
push
add
cwtl
mov
pop
mov
loopne
inc
shr
lret
jmp
fcmovnu
ret
fldenv
inc
mov
sbb
xchg
sbb
push
adc
push
jo
jb
test
mov
mov
jno
mov
cmc
inc
xchg
and
and
xchg
sar
dec
push
cmp
mov
sbbl
gs
lahf
rcll
cmpsb
inc
pop
jle
cltd
leave
add
mov
imul
inc
xorb
pop
or
mov
push
push
xor
les
adc
cmp
mov
add
subb
jno
sbb
xchg
xor
stos
mov
call
lcall
mov
ss
dec
gs
dec
aas
mov
sub
inc
sub
inc
and
into
dec
insb
mov
sbb
loopne
jmp
gs
mov
lret
gs
jp
int3
daa
cmpsl
js
imul
ss
dec
add
push
popf
jecxz
out
pop
jnp
jl
cmpsl
pop
mov
jnp,pn
int3
add
mov
shrb
sub
int3
push
pop
gs
adc
or
jb
in
and
loop
adcl
arpl
enter
pop
movsb
pop
xchg
divb
gs
gs
or
dec
mov
mov
rolb
mov
test
out
and
jo
test
mov
jmp
and
mov
xchg
leave
cmp
cwtl
jmp
dec
mov
sbb
dec
jb
dec
sarl
out
mov
push
add
stos
arpl
pop
ja
mov
int3
sub
adc
pop
inc
dec
push
or
dec
cmp
inc
add
xor
push
mov
repnz
aad
inc
call
dec
sbb
add
jecxz
pop
iret
cltd
adc
push
pushf
push
mov
sbb
in
or
stos
pop
scas
mov
dec
pop
cmpsb
nop
nop
mov
push
inc
es
push
jg
xor
lret
sub
insl
idiv
pop
cmp
arpl
fdivrp
jp
aas
ds
pushl
dec
add
pop
daa
daa
es
jns
inc
icebp
clc
nop
add
sbb
das
jl
push
daa
aas
repnz
xchg
push
movl
jbe
mov
aam
stos
xchg
iret
int3
mov
scas
xor
fs
faddl
fnstenv
sbb
jb
sub
jecxz
dec
or
lret
xchg
mov
jo
inc
adc
cmpb
movsb
hlt
xor
aaa
inc
rcll
cmpsl
add
int3
add
mov
out
nop
mov
cltd
sti
loopne
insb
sub
xorb
sub
outsl
cmp
push
fldt
std
or
lods
aam
or
mul
mov
xchg
in
mov
test
jo
int
cmovnp
mov
stos
cmc
xchg
inc
iret
jns
mov
dec
mov
xchg
mov
sbb
pop
pop
addr16
in
popf
aas
jbe
xor
and
mov
test
sub
jo
rcrb
cmp
stc
push
inc
sub
cs
inc
aaa
jne
dec
roll
xchg
jae
or
xchg
and
fsubrl
leave
cmp
jns,pn
push
out
cmp
jns
inc
jg
xor
lcall
xorl
in
mov
push
push
and
mov
sti
cmc
in
inc
jge
inc
adc
ds
ja
pop
stc
sub
int
jl
mov
icebp
jmp
mov
cmp
mov
or
dec
popa
mov
mov
add
inc
lret
mov
imul
jle
loopne
or
outsl
subb
sub
movb
es
xor
xchg
loope
ficompl
and
cmp
shl
dec
mov
lds
sarl
sbbb
loop
js
lods
int3
adc
cmp
sub
in
adc
mov
xchg
les
testb
test
or
enter
sbb
add
into
lcall
repnz
jnp
psllw
test
sbb
out
lods
mov
or
mov
mov
add
xchg
lods
lock
mov
das
cmc
cmc
adc
pop
fnstenv
pop
inc
lds
add
xor
shlb
and
or
inc
push
xor
or
sbb
jmp
jno
cmp
lods
test
inc
cmpsl
stc
ret
icebp
xchg
jae
aaa
pop
adc
sbb
out
jg
or
push
mov
add
fistl
test
int3
xchg
xlat
xor
and
xchg
and
popa
mov
pop
pop
icebp
add
fistpll
inc
popf
mov
inc
mov
pop
popa
popf
sbb
pop
fidivs
loop
adc
adc
adc
mov
int3
xor
repz
inc
dec
lds
sub
inc
clc
jle
pushf
xchg
test
into
inc
jge
sub
mov
out
push
xor
or
insb
negl
push
int3
sub
xchg
roll
jle
rcl
mov
add
mov
dec
lret
or
repz
jo
repnz
in
push
mov
nop
pop
add
inc
stc
loope
in
shll
push
inc
sbb
cmp
divb
fmuls
push
dec
mov
inc
repz
jns
add
cmp
aad
inc
fildl
je
lods
fisttpll
testl
mov
test
pusha
iret
mov
adc
mov
je
push
cltd
xchg
fs
mov
mov
and
xchg
and
aam
loop
dec
jl
jae
fcmove
mov
push
inc
hlt
lea
mov
ss
lret
lea
stc
or
dec
test
jle
sub
ja
jmp
sbb
mov
shrb
jecxz
nop
mov
mov
or
fdivs
cmovp
pop
iret
xchg
andb
add
imul
mov
enter
movsb
xor
outsb
sbb
dec
das
mov
fninit
aaa
sub
mov
ss
inc
mov
je
imul
jo
test
aaa
cltd
dec
loopne
imul
push
push
cmp
sub
sbb
sub
xor
movsb
xor
repz
xchg
xchg
inc
test
xchg
pop
paddusw
pop
add
les
pop
fldcw
leave
mov
cld
pop
add
cmc
lret
sub
shrw
add
out
js
movsl
das
cli
mov
xorb
xor
cwtl
jnp
shll
adc
push
jno
jae
lret
pusha
out
clc
xor
call
idiv
fnstcw
pop
shr
mov
fwait
int
orl
cmpl
clc
dec
jge
xchg
push
sub
mov
mov
mov
test
xchg
mov
and
push
lahf
push
outsb
mov
jecxz
adcl
inc
cld
int
fisttpl
mov
sub
and
add
ljmp
or
pop
ljmp
cltd
add
xor
outsl
dec
xor
loop
js
mov
fistl
fsubs
mov
inc
in
sub
sbb
cmp
cmp
mov
and
or
fwait
lods
ja
mov
cltd
xchg
call
inc
int
inc
pop
test
arpl
push
lahf
dec
adc
or
lret
ds
mov
pop
in
bound
aad
andb
pop
js
and
rolb
dec
scas
enter
xor
sub
jg
mov
mov
test
hlt
mov
cmp
jb
stc
scas
and
push
or
fwait
lret
out
loope
xchg
xchg
xchg
add
push
fsts
daa
repz
fldt
push
mov
mov
insb
cwtl
add
jmp
sbb
sbb
setb
sbb
insl
push
rolb
and
sub
adc
aam
in
dec
xchg
mov
dec
rcr
popl
gs
xchg
testl
shl
out
loop
addr16
lds
dec
add
jl
ljmp
adc
in
out
mov
movsl
fs
jp
fcmovnu
or
xor
sbb
dec
mov
ss
test
arpl
pop
pop
sub
cli
jae
ret
cmp
je
mov
push
adc
nop
aam
push
inc
push
push
mov
pop
or
loopne
ret
shll
pop
mov
jmp
scas
xchg
xor
mov
jbe
popa
add
imul
add
mov
imul
loopne
push
rcr
cli
repz
je
pop
jae
xchg
aad
repnz
stos
inc
xor
das
aas
repnz
cmp
add
leave
repz
cmpsb
neg
adc
sbb
and
in
lock
mov
adc
sub
jmp
or
pusha
pop
mov
mov
inc
aam
jle
pop
pushf
sbb
pop
add
pop
jns
mov
push
xchg
scas
xor
inc
or
push
test
xchg
scas
jecxz
int
inc
ret
dec
ja
scas
pusha
loopne
int
cs
sbb
pop
xor
dec
mov
dec
mov
popa
mov
aad
imul
subl
mov
jl
dec
jnp
and
cmp
mov
jae
out
cmp
mov
or
outsl
lods
pop
pop
push
mov
hlt
ret
or
mov
jae
sub
mov
jg
addr16
or
les
test
and
imulb
pop
pop
xchg
add
adc
inc
stos
push
dec
mov
and
adc
jl
nop
pop
je
bound
xor
test
daa
adc
mov
lcall
jb
mov
mov
sbb
or
loopne
dec
dec
mov
cmp
or
aaa
fbstp
int
inc
out
mov
add
fcompl
mov
sub
sbbb
dec
inc
in
mov
icebp
and
add
insl
push
cmpsl
mov
jle
loope
jp
popf
pop
sbb
fimull
xor
inc
dec
add
ss
dec
push
xchg
jno
loopne
out
sarl
jp
jns
movsb
adc
cmpb
sbb
or
and
cli
leave
dec
mov
jmp
mov
loopne
aad
fiaddl
iret
daa
ret
adc
enter
dec
mov
popa
test
pop
and
and
out
out
inc
repnz
xorb
fstl
mov
sub
lret
jne
mov
xchg
sub
inc
push
sarl
dec
or
repnz
das
adc
js
xlat
mov
int3
pop
sar
rol
pop
cmp
mov
es
inc
inc
shlb
mov
ljmp
iret
jae
push
cld
and
cmp
lcall
dec
mov
xchg
jne
adc
popa
mul
xor
jne
bound
inc
pop
out
inc
fldl
push
cmpsl
cld
rolb
lahf
push
mov
cmpsl
and
lods
jb
pop
cltd
dec
enter
ljmp
insl
mov
rcrl
lret
mov
shl
sbb
xchg
dec
aad
xor
lcall
pop
out
sub
add
popa
bound
mov
mov
bound
jbe
jg
lock
xchg
popa
data16
fisttps
or
repnz
jecxz
pop
in
daa
mov
mov
cmp
add
in
jns
in
mov
xchg
push
jns
add
test
jmp
std
sub
jbe
sub
sbb
leave
mov
xchg
adc
int3
mov
repnz
xor
adc
jecxz
insl
je
pop
inc
lea
je
cmp
cmp
dec
xchg
icebp
cmpsb
sarb
das
imul
mov
push
out
jge
inc
push
mov
aam
xor
push
pusha
std
push
cmp
xor
pusha
fwait
jne
add
fucomp
mov
jnp
xchg
xor
mov
inc
dec
cmp
mov
imul
xchg
jno
jae
insb
push
rcrb
sbb
leave
push
sub
gs
sub
inc
mov
dec
repnz
fsts
out
inc
int3
jae
js
cmp
or
cltd
sar
cli
mov
cmpsl
les
mov
mov
test
cmpl
call
mov
jbe
fdivs
leave
fs
nop
xorb
in
rolb
pop
imul
mov
cmp
xor
out
add
sbb
loopne
imul
out
pop
jle
sbb
pop
aad
cmp
rcrb
xchg
lock
test
push
scas
cltd
cmc
std
jmp
sub
fnstsw
jae
stos
sub
ret
pop
add
dec
push
sub
orb
mov
sub
std
in
bound
aas
mov
pop
or
fstps
cmp
lcall
aas
and
xor
xchg
ds
push
pop
sbb
jb
scas
icebp
xchg
cmpsb
test
icebp
inc
aam
lcall
ja
daa
sahf
jg
mov
jbe
and
leave
and
je
mov
les
mov
push
push
test
test
mov
jae
test
and
dec
xchg
dec
pop
adc
add
xor
inc
and
jmp
out
xchg
dec
jecxz
jae
neg
clc
sbb
sub
lods
je
xchg
dec
aam
dec
leave
xorl
ret
imul
cmc
in
hlt
mov
adc
cmpl
sarl
push
mov
mov
xchg
mov
xchg
daa
sub
ss
jnp
clc
pop
mov
loop
mov
fwait
inc
bound
outsb
fisttpl
jno
in
push
jb
push
cli
ja
fimull
mov
xor
ja
adc
adc
mov
or
add
bound
or
enter
cmpsl
dec
scas
jl
push
xchg
mov
and
cmp
xor
mov
cmpsb
fnstcw
lret
outsl
mov
xor
out
pop
stos
jno
push
popf
shll
cmp
lea
add
xchg
test
fcomi
xlat
or
dec
icebp
js
lcall
lahf
shl
push
movsb
fsts
push
sub
jg
mov
add
xor
jne
cld
int3
jbe
jecxz
stos
jmp
ljmp
mov
out
sub
mov
inc
test
popf
lret
cmovns
xchg
sbb
add
push
inc
and
movl
cmp
adc
jb
pop
push
xorb
pop
outsl
outsl
push
push
pop
sbb
outsb
nop
jne
std
jo
jle
scas
loopne
fdivl
popf
push
xchg
les
sub
xchg
daa
sti
lds
dec
mov
cmp
shl
repnz
inc
sbb
pop
fs
std
xor
aam
sarb
push
and
mov
outsb
aad
jo
mov
push
rclb
mov
and
add
mov
ret
out
mov
push
push
lds
mov
and
and
mov
test
sub
push
fcmovu
inc
loopne
cld
inc
inc
mov
jle
inc
adc
push
dec
gs
gs
setno
xchg
jnp
xchg
outsl
pop
inc
fdivrl
fcomps
pop
test
jg
jb
fidivl
xor
ss
mov
push
repnz
mov
and
sbb
ds
sbb
add
jmp
lods
loope
icebp
xorl
push
in
shr
insb
fsubrp
jne
aaa
pop
out
js
fidivrl
and
out
pop
enter
add
mov
add
test
adcb
sub
cltd
ror
jae
sbbb
ljmp
pop
out
jnp
push
and
out
mov
push
sbb
add
scas
cmp
shll
daa
pop
jne
daa
sahf
lds
inc
mov
mov
pop
inc
insl
push
pop
add
mov
in
lock
mov
fisttpl
fnstsw
sarl
pop
xor
jae
jo
sti
callw
inc
orl
int3
or
scas
fdivs
and
push
daa
insb
xchg
pop
mov
popf
mov
push
mov
and
xorb
mov
pop
ljmp
inc
mov
xlat
gs
js
fwait
dec
cld
mov
sbb
dec
cld
jg
das
in
icebp
int3
mov
and
sub
xor
or
and
mov
xor
xor
sarb
dec
fcomps
adc
mov
push
pop
mov
sub
lcall
sarb
pop
pop
push
mov
mov
lahf
sub
xlat
or
or
test
cmc
scas
sarl
xchg
call
and
das
addr16
shrb
pushf
sub
pop
mov
xchg
aaa
rcrl
test
pusha
shll
mov
imul
xor
mov
icebp
xchg
icebp
imul
es
js
arpl
add
push
movsl
lea
lods
loop
call
popf
fwait
inc
and
out
andb
jge
cmp
dec
jne
mov
cs
sub
pop
pusha
cmpsl
or
imulb
ljmp
das
or
or
or
or
fnsave
jno
lods
data16
enter
pop
imul
mov
aas
jns
clc
sub
cld
pushf
xchg
hlt
adc
adcl
sbb
lock
mov
cld
cmpsl
out
mov
adc
and
push
sub
stos
xchg
insl
xchg
xchg
jmp
jnp
or
xor
dec
cmpb
push
rol
and
jns
cwtl
sbb
icebp
or
push
pop
lock
sbb
nop
mov
jg
outsl
adc
pop
shll
jge
jmp
jns
mov
xchg
xlat
sub
cmpsl
fdivl
mov
cmpsl
test
mov
mov
clc
lds
cs
ret
cltd
cmp
loopne
pop
sub
or
fcompl
inc
cmp
flds
cmp
mov
outsl
addl
movsl
add
loop
push
mov
sbb
insb
out
xchg
pop
mov
pop
ljmp
sub
in
sub
push
jo
mov
push
or
and
jno
adc
out
sti
test
sub
enter
sbb
inc
sub
popa
ficompl
aas
pop
and
iret
arpl
jo
out
adc
sbb
fs
leave
xchg
dec
in
dec
push
inc
or
ficompl
add
xchg
jle
or
ret
leave
shlb
rcll
pusha
adc
dec
fsubrl
fwait
in
mov
cmc
ror
and
shlb
mov
cmp
xlat
or
repnz
xchg
mov
xor
setbe
pop
jae
mov
test
add
in
mov
sbbb
insl
addr16
cmp
fisubl
xor
adc
add
mov
out
sbb
outsl
fiaddl
cmp
mov
cmc
out
mov
xchg
mov
sub
lods
out
fcomps
stos
push
nop
insl
or
pop
test
lret
xchg
lret
bound
shlb
add
ret
hlt
pop
mov
add
xchg
pop
test
insl
fistl
xchg
rcrl
and
jo
imul
xor
repnz
pop
push
or
scas
rcl
ficoms
repz
pop
in
nop
pop
mov
ja
repz
dec
mov
mov
inc
imul
int3
xor
or
out
ret
ret
mov
test
inc
je
jecxz
aaa
insb
js
mov
mov
xchg
jo
movsl
pushf
sub
rcr
xchg
pop
cmovle
jno
sub
out
imulb
or
dec
loopne
pusha
xchg
or
pop
es
mov
sub
arpl
jno
cmp
xchg
out
nop
mov
cmp
push
mov
addl
pop
repnz
popf
sbb
pop
lock
and
pop
xchg
push
icebp
lock
sbb
dec
push
inc
mov
mov
fadds
dec
jp
push
scas
insl
dec
pop
es
jnp
sbb
ja
fmuls
cmpsl
lea
les
cltd
das
lods
int3
mov
jmp
cltd
hlt
cmp
dec
cmp
cmp
push
mov
cmp
inc
mov
std
or
mov
and
jmp
cmpb
cwtl
shl
fimuls
outsl
jno
scas
in
lret
inc
daa
xchg
lret
xor
push
mov
sub
fildl
lea
in
sbb
mov
mov
xchg
out
xchg
test
mov
sahf
outsl
sbb
push
and
sbb
cmp
imul
insb
jge
sub
cld
repz
out
pop
mov
jb
or
sbb
inc
mov
je
sub
inc
or
dec
jnp
inc
mov
xchg
pop
mov
lret
lret
pop
xor
or
pop
stc
and
jae
dec
out
jl
push
scas
pop
sbb
iret
adc
jle
pop
bound
call
sbb
cli
test
xor
or
shll
repnz
scas
or
or
add
xchg
mov
mov
xor
adc
lock
mov
sbb
dec
sbbb
repz
pop
xchg
jmp
and
inc
subb
jge
jne
in
lods
addl
mov
or
je
jae
lcall
lock
addr16
push
loope
sahf
cmp
in
dec
test
hlt
or
fldl
pop
insl
lret
push
cmp
push
mov
add
jge
out
dec
jle
cwtl
inc
dec
gs
inc
add
lods
inc
lods
adc
subb
lea
dec
mov
sub
xchg
jne
push
test
jne
push
xchg
pop
push
mov
incl
fidivl
jmp
xchg
mov
daa
inc
iret
out
fdivr
cmp
fists
addl
jae
cmp
pushf
rcll
jl
inc
dec
out
push
daa
adc
mov
mov
fwait
sahf
inc
insl
lock
inc
pop
mov
xchg
or
add
inc
mov
add
enter
mov
test
jae
out
pop
in
push
adc
daa
aad
or
ret
popf
popa
out
ljmp
popf
jno
mov
sahf
pmaxub
fmull
mov
fsubl
pop
inc
xchg
mov
in
xchg
inc
cmpsb
jp
mov
nop
xor
sbb
fdivs
pusha
scas
xchg
cmp
or
or
inc
xchg
call
decb
loopne
mov
rorl
xchg
rolb
out
leave
sti
lret
adc
cmpb
sbb
outsl
les
dec
or
and
jne
insb
mov
push
cmp
or
lahf
cmc
inc
dec
push
adc
test
mov
mov
xor
bound
or
fdivs
leave
inc
loopne
pop
mov
int3
jle
stos
jecxz
std
push
pop
mov
mov
rorb
fs
das
mov
js
mov
mov
movsb
dec
pop
pop
or
xchg
mov
cmp
xchg
xor
out
sti
in
and
jmp
pop
in
xchg
cld
mov
jne
data16
push
or
xor
shlb
aad
push
adc
ffree
clc
jns
jno
ljmp
or
mov
popa
movsl
adc
imul
inc
add
cmpb
jnp
popf
pushf
ljmp
fucomp
mov
aam
push
jo
das
inc
cmp
add
rcrl
or
inc
lods
fwait
iret
ret
pop
rorl
adc
pop
dec
xor
rcl
or
orl
pop
loopne
dec
rcl
outsb
jno
insb
jecxz
inc
fbld
or
xchg
nop
add
sbb
push
mov
mov
cmp
test
ret
or
jns
mov
mov
mov
test
jbe
cli
jo
movsb
pop
cmp
fbstp
pop
mov
xchg
adc
mov
pop
repnz
les
popa
xchg
xor
pusha
dec
lret
add
dec
imul
dec
dec
xchg
lods
test
ret
xchg
repnz
jmp
inc
mov
lcall
sub
xor
jnp
and
mov
icebp
jae
pop
add
sub
fwait
int3
dec
rcll
out
sub
adc
cmp
cmp
mov
leave
adc
in
inc
inc
xchg
xor
pop
subb
jcxz
imul
dec
loopne
xor
popa
mov
test
fwait
jbe
mov
mulb
sbb
out
add
xor
mov
push
je
and
movsb
or
scas
and
mov
and
out
cmp
dec
movsb
mov
lods
sub
cmp
pusha
jae
loope
jb
cmp
jne
cmc
repz
adc
mov
add
iret
mov
pop
pop
cs
jne
sbb
pop
adc
jno
in
in
sub
test
pop
pop
pop
call
mov
pushf
mov
and
jge
les
lods
or
shrl
sti
out
popa
mov
sub
sbb
scas
add
xchg
inc
dec
filds
or
add
mov
push
idiv
jb
mov
ss
fwait
aas
mov
jo
lock
pop
sbbl
roll
xchg
jmp
aad
mov
add
mov
sub
test
jp
pop
nop
inc
fcmovne
lahf
xor
jno
insl
jg
jge
sub
stos
sub
pushf
sub
data16
cli
movsb
ja
xchg
jge
in
jno
fs
mov
push
stos
cmp
mov
ret
jmp
mov
and
jbe
inc
fcomi
movsb
outsl
testb
shrb
push
dec
mov
add
aas
fadds
cwtl
cmc
pop
dec
pop
adcb
iret
gs
dec
push
aas
dec
dec
and
dec
into
ret
sub
into
jns
and
pusha
ja
getsec
rorl
enter
add
jecxz
xchg
push
lret
mov
add
movsl
sbb
lret
adc
mov
mov
sub
adc
mov
xor
aad
lahf
and
imul
ljmp
fdivl
out
mov
movsl
in
sbb
stc
aas
in
sbb
stos
movsl
mov
stos
add
jae
push
jno
bound
cmp
out
sarb
lahf
push
inc
sbb
or
xlat
mov
test
and
push
and
mov
lods
lock
roll
sub
xchg
add
mov
mov
cmp
pop
mov
fcoml
push
mov
lahf
cwtl
out
jg
push
cmc
inc
adc
push
xchg
cmp
cmp
mov
enter
data16
cmc
mov
mov
sbb
fwait
sbb
lcall
cmpl
das
fadd
scas
inc
mov
mull
ljmp
psubd
je
sti
ljmp
jb
in
or
pop
inc
not
mov
and
pop
popa
gs
filds
scas
pop
xchg
mov
mov
push
mov
inc
push
jns
aas
xchg
int
or
movsl
xchg
and
dec
sub
push
dec
je
cld
mov
inc
dec
dec
cmp
in
inc
inc
push
pop
adc
lods
lret
xlat
loope
sub
add
and
les
int
or
xor
pop
loopne
dec
insb
lods
add
fcomps
jno
mov
cmp
jle
xchg
scas
dec
sbb
cmp
xor
inc
push
cwtl
jno
leave
inc
cld
out
mov
jg
and
mov
fistpl
in
cmp
ja
sub
nop
inc
xchg
mov
js
sub
and
loopne
fbld
mov
aaa
aaa
pushf
jnp
push
push
fisubs
aad
clc
loopne
push
mov
gs
fdivr
mov
push
dec
xchg
mov
mov
ss
and
jmp
mov
dec
aam
adc
dec
stos
mov
pop
sbb
andb
jle
fstl
pop
sbb
lahf
dec
fnstenv
push
and
arpl
jae
out
pushf
xor
fbstp
cwtl
xor
xor
mov
sbb
xor
sub
rorb
filds
xorb
movsb
xor
mull
daa
push
out
lds
xchg
loope
repz
xchg
mov
xchg
aad
lahf
mov
inc
mov
je
mov
lret
dec
mov
sbb
xor
cwtl
cmp
ds
jmp
cmp
jp
dec
adcb
jle
iret
pusha
lods
lcall
dec
cmpb
or
rclb
push
inc
xchg
cmp
shlb
xchg
cltd
movsl
lret
push
shr
sub
js
lret
int3
fucomip
inc
inc
jge
shll
mov
nop
push
cs
add
pop
inc
sbb
ljmp
stc
xor
je
ja
xchg
lods
fsubl
inc
scas
cltd
out
and
xor
ret
adc
mov
icebp
xchg
jle
stos
mov
outsb
pop
lods
inc
ja
inc
fs
mov
movsl
jmp
stos
sbb
pop
lret
adc
push
and
testl
jmp
adcb
popf
mov
loope
mov
push
adc
cmp
push
or
ss
dec
mov
dec
loopne
in
mov
pushf
push
daa
push
int
nop
outsb
loop
sub
adc
repnz
sahf
loop
test
dec
xor
adcl
fsts
hlt
add
sub
push
cli
jns
ds
mulb
pop
imul
shl
mov
or
mov
push
mov
mov
ret
aaa
out
mov
hlt
iret
outsl
sub
cwtl
pusha
push
adc
xchg
ror
mov
mov
popa
mov
data16
stos
push
adc
and
cmp
outsb
scas
stos
lret
nop
dec
xchg
sub
rcl
xchg
or
mov
test
jmp
adc
mov
pop
fdivr
ret
jp
movsb
test
sahf
mov
adc
btr
xor
dec
jl
out
dec
hlt
sub
fadds
xor
pop
cmp
movb
ss
and
mov
clc
stc
xchg
sbb
push
push
les
icebp
movsb
int3
pop
dec
and
cmc
mov
pop
in
mov
pop
out
shll
push
mov
xor
dec
cmpb
loopne
aad
cmc
mov
jno
sbb
int3
add
xchg
pop
sbb
es
pop
outsb
mov
push
adc
orb
shlb
cltd
in
cld
add
push
sbb
push
pop
push
sarl
cli
into
dec
mov
jno
adc
inc
stos
rcll
pop
fisubs
ficoml
fwait
jecxz
cmp
arpl
out
stos
stos
cmp
mov
std
mov
cmp
jl
das
fstps
sbb
js
ds
sbb
fcmovu
sbb
xchg
cltd
out
lea
push
xchg
push
loopne
mov
sub
aaa
mov
popf
cld
dec
insb
and
insl
lahf
jge
lods
push
pop
outsb
addr16
inc
xlat
stos
sub
cmpsb
mov
loope
lret
jbe
dec
adc
rorb
jecxz
adc
fst
push
stos
jmp
rcll
jg
not
inc
mov
popa
dec
xchg
xor
push
insb
cld
lock
jle
adc
xchg
fwait
sub
inc
mov
dec
mov
outsl
push
cmp
stos
pop
pop
pop
lock
adc
sub
mov
js
lcall
fsts
ret
popf
int3
mov
or
push
fstl
cwtl
jae
sbb
mov
cltd
rorb
pushf
jnp
mov
ret
jae
pop
add
mov
adc
sbb
jge
lods
or
add
pop
xchg
mov
icebp
dec
pop
add
pop
aad
sti
add
adc
push
cmc
inc
lret
pusha
or
jbe
lret
cmp
sub
fstpl
inc
add
adc
hlt
addr16
in
ret
jmp
sub
and
jbe
popf
xchg
push
pop
xor
xor
push
xchg
adc
idivl
outsb
push
jo
or
inc
dec
pushf
rcll
push
cli
stc
cmpsl
mov
jne
push
leave
xlat
mov
inc
jne
sub
sub
mov
dec
les
in
pop
push
dec
cmp
cmp
lcall
insl
sahf
lret
pop
xorl
add
fs
pop
fldenv
testb
leave
pop
sbb
lcall
lahf
xchg
mov
mov
pop
xchg
aad
push
cmpsl
out
rolb
mov
add
push
jo
xchg
stos
push
pop
stos
pop
fidivrs
imul
in
aam
inc
in
das
sarl
mov
ds
push
inc
push
mov
mov
mov
or
cmp
or
iret
or
shlb
mov
jae
lock
lret
into
pop
pop
sahf
cmp
shlb
cmpsl
mov
xchg
push
and
pop
pop
fdivr
pandn
insb
pushf
das
fcmovnu
jmp
or
inc
dec
jge
fstl
push
pop
push
loopne
cmp
nop
clc
dec
insb
movsb
lods
scas
xor
jmp
xchg
and
repnz
orl
mov
xchg
das
mov
jmp
loope
inc
and
mov
inc
jge
jmp
fucom
adc
mov
inc
popf
mov
stc
stos
fmulp
or
outsl
dec
adc
ljmp
popf
cld
mov
jecxz
jg
jo
mov
fnstsw
dec
mov
jl
inc
mov
pop
cmp
in
mov
pop
jmp
into
adc
fbstp
xchg
pop
push
cwtl
std
idivl
movsb
mov
mov
pushf
cmpsb
enter
lahf
adc
mov
insl
iret
inc
add
jne
pop
cwtl
xor
sahf
push
fdivrp
fsubrs
pop
and
incl
cmpsl
dec
jns
cltd
and
xchg
clc
add
pop
mov
inc
ljmp
fdivr
sub
pop
push
jl
dec
lods
or
outsl
mov
cltd
jmp
push
pop
adc
adc
adc
xchg
orb
mov
add
push
mov
and
xor
jno
inc
ljmp
push
lods
or
insl
push
scas
wbinvd
dec
loopne
shrl
inc
xchg
in
cmp
int3
jae
ss
sbb
movsb
ficomps
xchg
inc
stos
mov
addr16
cmp
and
rclb
add
into
mov
rolb
xor
dec
xchg
daa
pushf
mov
je
ja
bound
int3
dec
push
cmpsb
mov
mov
sbb
mov
sar
cmp
pop
out
and
and
int
in
scas
pop
aaa
loope
mov
inc
addb
sub
jl
dec
incl
fcmovbe
insw
mov
push
faddl
in
sarl
and
fwait
addl
xchg
add
aaa
into
icebp
ss
addr16
mov
into
sahf
mov
das
mov
pop
sub
movsb
xor
imul
pop
ds
jne
push
es
lea
loop
mov
pop
sbb
lret
movsl
repnz
xor
in
and
pop
adc
jno
jmp
ffree
js
lods
push
out
scas
add
neg
daa
mov
inc
mov
mov
dec
add
fsubrs
iret
lahf
mov
inc
call
into
lea
sahf
fdivl
cmpsl
adc
push
insl
mov
mov
imull
adc
push
dec
sbb
cmpsl
loopne
lcall
out
push
xor
in
jp
cs
mov
jecxz
lds
shll
and
xor
adc
data16
aam
jno
movsb
dec
xor
enter
and
adc
mov
icebp
int
add
adc
dec
fstl
arpl
mov
add
sbb
push
rcll
xor
mov
inc
xor
es
push
sbb
jge
cmpsl
add
fistpll
cmc
and
and
aas
aas
ljmp
sbb
out
mov
mov
inc
ja
fldcw
and
mov
ret
ret
fdivr
ljmp
cmpsl
fdivs
cmp
xor
xchg
add
push
adc
jae
pop
mov
fxtract
in
adc
cmp
fisubs
mov
lret
mov
xchg
sbb
xor
fidivrl
iret
xor
scas
dec
and
or
ret
imul
xor
aas
jo
test
out
filds
jg
fidivl
dec
das
or
inc
xchg
jle
je
sarb
push
iret
fdivr
sti
pop
rol
hlt
mov
adc
sub
jecxz
sbb
and
xchg
sahf
rorb
xchg
test
int3
arpl
lock
ja
fwait
out
std
push
mov
push
jns
sub
xchg
xchg
dec
mov
adc
nop
cmp
cmp
aaa
adc
ret
sbb
mov
push
mov
cmpsl
lahf
push
jne
insl
pop
cmpsb
mov
sbbl
xchg
mov
rcrb
adc
cmc
mov
sarb
or
jl
push
sar
inc
popf
loope
js,pt
jg
out
test
popl
stos
inc
push
repnz
add
mov
rcrb
cld
mov
iret
loop
xchg
mov
cmp
mov
pop
loopne
rorb
in
sub
xor
ffreep
ret
push
or
andb
dec
rep
xchg
or
out
mov
xor
jecxz
sub
cmp
dec
xchg
insb
les
xor
xchg
test
inc
push
sub
mov
pop
cwtl
lods
push
loopne
xchg
clc
insb
fwait
mov
scas
and
push
pop
cmp
test
mov
adc
pop
dec
in
push
xor
dec
arpl
pushf
dec
stos
dec
icebp
stos
mov
mov
mov
lcall
or
sub
loope
ss
movl
call
cmpsb
xor
testl
out
inc
jge
test
popf
push
mov
mov
test
test
enter
incb
movsb
mov
shr
fsubrl
call
xlat
jmp
jecxz
js
xor
in
adc
daa
inc
jno
and
dec
jl
add
or
mov
mov
inc
or
jl
and
cmp
jbe
xchg
repz
iret
scas
in
sub
pushf
cmp
adc
jb
adc
sub
pushf
cmp
jae
pop
mov
cmp
pusha
cmp
jne
mov
imul
cmc
jle
lret
shlb
dec
repz
jg
sbb
repz
into
addl
cmp
add
mov
orb
cmp
jnp
jge
sbb
cs
sub
bound
ljmp
push
ss
mov
popf
jae
lods
out
mov
leave
xor
scas
or
out
lea
fldt
data16
jge
dec
out
jge
mov
mov
test
fcoms
sub
and
jp
shll
imul
lret
mov
fnsave
sbb
and
sbb
inc
xchg
cmp
xor
aas
shl
in
and
pop
and
js
mov
fwait
sub
jg
jmp
pop
subl
inc
pop
shll
inc
jo
mov
inc
pop
data16
jp
icebp
outsl
mov
xchg
cmp
outsb
xor
in
stc
pushf
mov
fbstp
xchg
push
movsl
adc
cld
xor
dec
inc
fimuls
insl
out
iret
mov
cmp
sbb
mov
shlb
aas
lods
rolb
mov
push
lea
cmpl
mov
push
aas
add
jg
ljmp
or
jbe
cli
roll
daa
rol
sbb
cmc
stos
mov
xchg
leave
or
pop
mov
xchg
ret
push
jmp
das
xchg
jo
in
nop
adc
add
mov
popa
inc
leave
add
jmp
xchg
fildl
sub
adc
mov
into
adc
xchg
push
out
add
shll
pop
bound
or
insl
inc
sti
xchg
dec
jae
jnp
sbb
adc
popa
push
cmp
xor
xchg
mov
or
lea
inc
pop
push
pushf
dec
add
inc
int3
mov
jg
addr16
sbb
inc
movsl
push
pop
mov
ja
out
pop
xlat
pop
sbb
push
add
xlat
pop
lods
jge
ss
pop
fcmovne
test
mov
inc
xchg
and
dec
cld
mov
push
and
cmp
xchg
and
aaa
in
add
ret
js
sti
sub
adc
test
and
sahf
pop
or
or
xorb
jl
punpcklwd
movsb
cli
test
pop
xor
adc
std
lock
repnz
jae
cmp
inc
int
adc
mov
or
add
ret
out
ret
cltd
mov
lret
xchg
pop
inc
scas
jmp
inc
cmp
adc
adc
bound
jge
sbb
cmp
jp
pop
iret
loop
call
push
jmp
dec
push
sbb
push
and
jno
mov
into
std
or
lret
test
lds
mov
sbb
int3
jl
int3
fiaddl
lret
arpl
xchg
orl
out
mov
adc
push
mov
cmpl
orb
mov
enter
mov
rep
ljmp
lds
or
lea
aam
jae
lret
dec
dec
jno
xchg
stos
mov
in
mov
xlat
ficoml
enter
add
scas
sub
xchg
mov
ss
lock
inc
sbb
xor
add
jnp
and
mov
sub
pop
clc
mov
les
and
rcl
leave
sbb
fwait
xlat
xchg
faddl
inc
test
ja
xchg
inc
ret
push
dec
or
aaa
je
push
leave
inc
popf
adc
pop
fistpll
sub
test
lcall
sti
pop
push
in
sbb
push
dec
aaa
or
mov
xchg
mov
pop
mov
cltd
jmp
jl
shl
out
sub
xlat
mov
inc
scas
je
sub
in
jl
ret
sbb
pop
xchg
bound
orb
loop
lods
sub
es
scas
loope
mov
mov
mov
adc
jl
sub
sti
inc
sub
sbb
push
cs
and
addr16
out
mov
sub
sbb
scas
loop
sbb
dec
or
pop
cmp
cmc
jmp
pop
and
xchg
and
fs
bound
jbe
pop
fadd
mov
repnz
je,pn
sahf
inc
adc
sahf
call
into
mov
xchg
repz
testl
ja
or
bound
mov
adc
sbb
mov
mov
adc
mov
or
dec
shrl
cmovp
mov
or
sub
ljmp
mov
cmp
push
das
xchg
adcb
lcall
jns
mov
or
add
sti
fs
pop
push
mov
jb,pt
cltd
int
hlt
inc
in
gs
nop
push
sub
xchg
xchg
shll
clc
and
das
jae
and
sub
aaa
and
jge
shlb
mov
mov
mov
xchg
fmull
std
ja
ftst
sub
sbb
movsb
xchg
inc
test
push
dec
cli
lret
dec
and
call
scas
xchg
out
dec
inc
sub
test
sub
cmp
mov
mov
and
lock
add
cmp
pop
call
push
jo
iret
rclb
dec
out
dec
mov
jge
ds
cmp
scas
add
jbe
pop
rol
push
outsl
add
int
add
xor
sub
ror
mov
xchg
push
lahf
mov
outsb
fsts
outsl
fistps
pusha
outsb
jp
imul
cmp
adc
cmp
test
int
and
pop
push
ss
xor
xor
mov
mov
pushf
lds
jb
and
seta
popa
xchg
jge
jo
xchg
lcall
fadds
jl
aas
and
or
mov
or
xor
mov
push
dec
outsl
add
idivl
int
and
ss
cmp
mov
xor
inc
fdivs
int3
in
mov
xorl
popf
xor
add
jge
fs
mov
pop
loope
sub
sub
pop
ljmp
fcmovu
vmovaps
lea
push
popw
or
je
outsl
mov
add
cmc
scas
clc
mov
mov
shlb
shll
pop
sbb
and
dec
imul
xchg
mov
inc
in
xor
decb
jl
jns
fstl
xchg
cld
add
push
add
jmp
pop
push
xor
aas
push
and
jnp
je
fdivl
adc
cli
cmp
lret
mov
icebp
sub
push
scas
mov
push
lods
lret
out
test
jg
jp
adc
fwait
outsb
loope
repnz
jge
cmpsb
xor
inc
adc
mov
cmp
cwtl
jecxz
xlat
add
cmp
leave
jge
int3
in
pop
movsb
push
addr16
push
push
out
jae
call
xchg
inc
nop
inc
cwtl
xorb
movsb
inc
pop
ret
inc
mov
fstps
lahf
nop
push
mov
loop
loopne
mov
fmul
or
mov
shll
push
xor
roll
xchg
adc
xor
or
pop
mov
lock
mov
push
xchg
cld
lret
out
pop
dec
pop
jae
pop
hlt
outsb
pushl
xchg
jp
scas
mov
leave
shrl
inc
test
sbb
adc
xchg
sub
dec
pop
push
aam
loop
stc
mov
out
aad
es
jne
add
movb
fwait
lret
inc
test
fwait
xchg
ljmp
cmp
pusha
dec
insb
movd
mov
stos
jne
mov
cmpsb
mov
xchg
dec
stos
xor
ja
mov
push
cld
and
in
popf
ret
cmp
pop
mov
out
sti
jbe
pop
push
xor
stc
jo
aaa
lret
lahf
ret
xchg
sub
sub
push
psubsw
nop
lods
sbb
pop
mov
mov
pop
sbb
out
lret
ja
fsubrp
jne
or
xchg
push
push
jns
jns
cmp
mov
ret
pop
invd
and
ja
stc
push
jbe
mov
or
sub
sub
xlat
pop
push
add
add
xchg
mov
dec
stc
mov
push
mov
iret
inc
sub
jecxz
in
dec
pushf
inc
xchg
ret
pop
lock
loopne
mov
xchg
cmp
mov
lcall
cmpsb
mov
adc
jp
stos
cmpsl
sar
cmp
push
dec
imul
jl
jo
pop
mov
daa
inc
dec
test
xor
jb
dec
mov
shl
stos
lea
xor
stc
cmp
and
leave
cmp
dec
inc
add
or
rorb
xor
movsl
fdivl
data16
inc
mov
mov
popa
and
aad
jne
ficompl
push
aam
test
testl
popa
xchg
jle
dec
repz
adc
and
push
inc
pusha
fstps
lret
fwait
enter
dec
pop
rcr
sbb
inc
lods
and
adc
test
add
lods
cmp
stos
outsl
mov
pop
in
repz
scas
test
xchg
pop
mov
add
push
insl
mov
ret
jae
jb
gs
push
popa
sti
sub
outsb
and
stos
ficomps
in
adc
xor
out
cs
xchg
frstor
and
repz
and
stos
andl
lock
and
repz
lfs
aad
std
mov
push
test
mov
loopne
icebp
and
or
xchg
and
fistpl
bound
out
push
lods
pop
test
cmp
sbb
mov
out
jecxz
aam
xor
insb
sbb
cmpsl
and
pop
cli
test
xor
popf
mov
jb
into
loope
and
jle
push
test
xchg
movsl
add
leave
gs
pop
pusha
popa
into
mov
sbb
in
jnp
addr16
jae
xorb
cwtl
push
jo
xchg
dec
cmp
add
test
xchg
cmpsb
push
cmp
les
inc
xchg
mov
push
mov
cmp
xchg
mov
add
xchg
xchg
jae
sub
sbb
leave
mov
mov
push
int
cld
add
sbb
push
lods
loop
pop
mov
mov
xrelease
orb
clc
dec
push
aaa
mov
dec
out
data16
rcr
loop
rclb
in
or
mov
push
std
repnz
out
fwait
daa
xor
pop
pop
nop
iret
adc
xor
pop
push
sarb
ljmp
push
mov
pop
jecxz
testb
mov
lret
pop
pusha
push
shrb
ret
push
dec
xchg
subl
mov
repz
or
testl
inc
cs
xchg
mov
int3
cmpsb
stos
outsb
xchg
test
push
push
in
cmp
fidivrl
aas
pop
in
mov
fwait
jae
fdivrs
push
mov
aas
mov
xchg
fs
fnstsw
and
loop
outsb
push
cwtl
mov
inc
push
lds
and
jb
xor
or
repz
add
mov
jmp
push
test
inc
jp
push
pop
notb
fs
add
adc
scas
mov
lcall
ljmp
ljmp
and
mov
push
iret
inc
and
js
and
xchg
mov
or
cld
sub
jmp
sti
movsl
mov
cli
xchg
mov
mov
popf
or
lahf
xchg
push
std
aas
add
lahf
pop
aaa
push
shll
jg
lods
in
push
scas
test
sub
int
stos
movsl
js
adc
xchg
test
pushf
popf
jge
das
jne
pop
rorb
mov
and
xchg
mov
call
aas
jbe
xchg
cld
pop
cli
pop
in
add
into
imul
fisttps
jb
js,pn
stos
fsub
push
or
negl
mov
pop
sti
in
mov
pop
jae
lods
jnp
mov
xchg
nop
out
sbb
cld
popf
mov
mov
test
push
or
xchg
xlat
xlat
xchg
pop
sarb
addr16
cs
mov
or
inc
add
ds
xor
loope
in
pop
or
xor
add
pop
xchg
dec
nop
inc
dec
imul
sub
or
sti
out
mov
mov
or
lcall
push
mov
in
sub
xchg
les
jecxz
jmp
enter
test
call
adc
mov
sbb
test
or
cmp
imul
xor
mov
lret
add
stos
outsb
xchg
mov
jns
je
out
insl
fdivs
adc
jno
pop
and
xor
push
add
cmpl
outsl
mov
gs
xor
jb
or
loopne
add
jbe
repnz
jp
cli
mov
or
jne
sbb
fistpl
js
adcl
andb
cmc
in
xorl
xchg
inc
push
repz
dec
or
sahf
inc
push
in
mov
fwait
insb
orb
stc
decb
xor
lds
adc
lcall
pusha
fdivrl
rolb
lods
in
push
or
and
mov
pop
dec
jge
enter
push
sub
into
test
into
ret
jge
pop
jne
fs
mov
inc
pop
mov
xchg
xlat
lea
and
xor
inc
dec
fildll
xchg
cld
cmc
leave
enter
lods
mov
dec
mov
lret
mov
jb
in
in
cmp
inc
int
dec
popa
sub
test
ljmp
cld
nop
mov
jno
ds
push
cltd
inc
and
pop
rolb
xchg
faddl
cltd
enter
inc
inc
xlat
adc
pop
out
jo
inc
dec
pop
mov
cmc
ret
jbe
insl
push
imul
jb
movsb
loopne
sahf
lods
outsb
cmc
or
bswap
pop
adc
lcall
fxch
xor
sub
inc
fnsave
pop
cmpsl
dec
fs
enter
incb
stos
dec
mov
sbb
lods
add
int3
fisubrl
jo
mov
pop
loop
cltd
sub
test
fcomip
push
adc
inc
dec
loope
movsl
cmc
jne
mov
fs
popa
cmpsb
idivb
mov
idivl
inc
ret
sub
std
dec
mov
sbb
push
pushw
adc
arpl
inc
and
fnsave
cmp
mov
cmp
inc
or
jo
sbb
ja
sarl
adc
pop
fldenv
out
lock
shl
jge
nop
sub
xchg
mov
cli
pop
shrl
xchg
sahf
sub
imul
stc
mov
push
xchg
adc
insb
and
dec
ret
out
push
rcrb
sub
imul
flds
mov
rcll
int
std
addr16
mov
shr
cmp
jae
cmp
pop
in
daa
jae
xchg
xchg
or
sbb
insl
test
inc
and
push
movsl
jg
sbb
mov
mov
dec
or
xchg
aas
ds
pop
mov
scas
dec
ss
or
xchg
xor
loop
cmp
xchg
stos
in
xor
pop
jg
xor
shlb
mov
mov
adc
add
mov
imul
nop
pop
push
or
push
fldt
pushf
mov
mov
pop
and
add
scas
imul
sub
scas
sbb
jg
cmp
and
xchg
clc
insb
or
xchg
sub
lret
add
push
xchg
xchg
loope
addr16
std
lret
hlt
pop
sbb
ljmp
jge
xchg
in
in
or
pop
adc
cmpsb
adc
ja
fcoms
xchg
inc
popf
imul
xchg
or
or
gs
cmp
das
xor
in
push
sub
jp
das
mov
nop
outsb
mov
and
and
js
bnd
das
cmp
insl
sub
xor
fistpll
lret
push
mov
leave
jge
dec
ret
enter
xlat
lahf
mov
jbe
mov
push
xchg
int3
pop
sahf
mov
push
cld
jnp
mov
add
mov
std
imul
xor
mov
or
cmp
xchg
movsb
jge
sub
mov
dec
outsl
imul
lret
daa
lea
xchg
into
sbb
jnp
lret
out
les
daa
jae
rcrb
xor
outsl
inc
in
xchg
aas
testl
ficompl
in
pop
xlat
pop
out
popf
clc
rcl
loope
pop
icebp
push
jp
pusha
sub
ror
lea
or
cltd
aad
dec
or
and
mov
jg
outsl
icebp
scas
xchg
sar
daa
xchg
sub
adc
sbb
jl
inc
add
adc
dec
sub
dec
push
sbb
jb
xlat
lret
adc
in
mov
aaa
leave
mov
and
pop
jle
mov
jle
and
jecxz
sahf
sub
jns
dec
rorl
sbb
inc
lods
add
stos
je
add
jae
sbb
std
cli
xchg
pop
and
jnp
ret
cmpsl
shlb
or
mov
pop
mov
es
addb
mov
dec
insb
daa
les
add
mov
and
lea
cmp
das
fdivrl
xor
inc
cmp
insb
js
inc
decb
loopne
pop
pop
fnsave
dec
or
jno
inc
sub
ja
aas
mulb
jmp
mov
lret
or
dec
jl
insb
mov
icebp
and
or
or
inc
into
add
es
xchg
andnps
negl
in
sbb
mov
fstpl
popa
sbb
das
ljmp
mov
inc
ljmp
icebp
std
stc
fs
call
test
inc
iret
jmp
jo
les
aam
pop
rcrb
fs
mov
adc
js
xor
xchg
xchg
lods
and
jo
sarl
xor
push
ds
movsb
pop
testl
cmp
iret
repz
clc
ds
and
xchg
data16
lock
pusha
mov
inc
inc
xchg
xchg
sub
outsl
lret
jecxz
fwait
out
jmp
lea
sub
cmp
cmpb
adc
jns
push
and
shlb
aaa
jg
mov
pop
test
outsb
repnz
sbb
outsl
mov
sub
add
popf
mov
int3
cltd
pop
insb
call
push
or
in
cld
or
xchg
adcb
mov
or
jbe
sbb
mov
mov
add
push
jmp
bound
sub
sbb
mov
xor
scas
xor
add
sbb
es
fs
sbb
or
inc
mov
fsubs
adc
or
mov
jle
inc
or
push
or
dec
mov
pop
or
pop
cmpsb
push
jge
sbb
bound
and
std
or
test
cmp
pop
out
jg
repnz
pop
pop
aam
add
xor
clc
cmp
les
movl
fmuls
loopne
pop
and
add
push
lods
mov
mov
into
sub
mov
jbe
pop
and
out
mov
lock
jns
pop
adc
nop
iret
mov
jo
pop
xchg
and
add
xchg
call
xor
out
insb
daa
or
cli
fldl2e
mov
test
xchg
inc
mov
xor
jg
xor
out
ficoms
sbb
mov
in
and
popa
popf
inc
cmp
jge
or
bound
dec
xor
push
addl
xor
xchg
adc
xor
test
inc
in
pop
xor
lods
test
mov
out
xor
or
xchg
cmp
scas
adc
cmp
mov
stos
sub
mov
andl
mov
int
lock
sbb
sub
xchg
jle
add
stos
adc
call
pop
mov
out
std
xchg
addr16
push
mov
dec
rcrl
aad
in
fcoml
push
mov
shlb
mov
lods
neg
jp
xor
add
mov
pop
je
jmp
nop
ja
push
repnz
adc
cs
pop
pop
mov
dec
mov
add
iret
mov
dec
xchg
aas
adc
adc
add
lods
jno
jmp
mov
loope
pop
es
mov
addl
test
and
cmp
sub
mov
jecxz
enter
enter
gs
out
push
call
orb
mov
scas
push
sbb
push
xor
pop
hlt
and
pop
or
testl
dec
cmp
pop
add
aas
cmpb
ds
nop
lds
test
das
fld
adc
mov
sbb
pusha
loope
pop
mov
imul
or
cmp
mov
and
sbb
pushw
lods
cltd
xchg
pop
pop
mov
popa
movsl
movsb
into
lds
dec
add
jg
xlat
rorb
stos
xor
push
cmp
fnsave
push
xchg
add
popf
xchg
add
fs
mov
xor
popa
hlt
sbb
and
cmp
sbb
jl
push
jbe
adc
in
sbb
xor
mov
dec
inc
insb
fs
jo
mov
popf
sbb
test
push
fdivrl
addb
cld
jp
mov
jl
mov
sbb
cmpsb
jo
inc
lret
push
mov
pop
js
mov
and
inc
int3
jno
xchg
jl
out
popf
fsub
popf
cmp
inc
shll
bound
pop
adc
out
push
pop
mov
or
xlat
sti
test
sbb
add
push
adc
sub
imul
or
stos
je
push
mov
aad
and
daa
dec
or
repnz
cld
rolb
jge
aaa
lods
ret
xchg
fisubrl
cmp
lret
mov
mov
loopne
dec
mov
pop
sub
add
aam
mov
fadd
or
mov
dec
aad
pushf
out
xchg
cmp
and
outsb
jns
mov
sbb
jne
aam
xchg
lret
mov
stos
inc
pop
subb
push
mov
pop
or
pop
iret
cmp
jns
xchg
outsb
mov
sub
shl
dec
shll
sub
js
dec
xor
movsb
xchg
inc
lods
mov
sahf
jecxz
clc
push
outsb
cli
pop
les
jl
adc
add
ret
testb
jno
fs
push
movsb
ja
inc
popa
fstps
test
daa
mov
lcall
add
pop
pop
loope
leave
cmp
xchg
sub
aad
cli
in
push
gs
lds
mov
dec
cwtl
shl
mov
cmp
push
and
or
mov
push
andb
cmp
dec
jae
rcrb
imul
mov
stos
and
imulb
das
inc
fldl
or
jno
push
ja
in
test
movsl
fisubrl
xlat
andl
pusha
mov
fadds
out
popa
jbe,pt
imul
lret
add
xchg
lds
push
or
sbb
cmpsl
dec
fucomp
mov
aad
jmp
push
enter
mov
adcl
xchg
testb
xor
loop
and
xchg
push
ss
xor
imul
cmp
fnstcw
sbb
push
dec
imul
push
inc
fidivrl
xor
pop
ljmp
call
xchg
je
or
mov
lods
dec
pop
fstpl
dec
xor
cmp
mov
adc
repnz
arpl
repnz
push
mov
in
imul
mov
inc
push
jp
lods
push
js
shr
out
ror
mov
in
add
mov
test
sub
and
sti
stc
notl
test
test
iret
fwait
add
nop
mov
xor
faddl
in
sbb
int
aam
pop
xchg
jne
and
pop
aaa
or
pop
insl
sub
inc
push
pushf
jnp
mov
pop
mov
dec
scas
out
imul
add
inc
mov
icebp
clc
inc
sbb
mov
mov
or
mov
pusha
adc
ret
stos
mov
add
in
push
aam
cmp
and
jg
loop
jb
sub
inc
insl
pushf
push
xchg
mov
int
jmp
inc
pop
cmpb
dec
ret
lcall
lods
popf
int
push
inc
mov
pusha
xchg
iret
or
add
xchg
xor
mov
lret
lods
xchg
cmp
mov
data16
pushf
cs
out
test
fwait
adc
inc
nop
sbb
xlat
insl
or
cli
and
xlat
es
lods
repz
sub
lds
rcrb
icebp
xor
sub
xorl
arpl
mov
xchg
scas
movsb
sbb
shr
out
cmpsl
cmp
and
cltd
and
xchg
adc
sbb
jne
and
mov
ficoms
repnz
bound
sbb
daa
dec
neg
sbb
push
sub
dec
sbb
in
sar
push
insb
cs
fimuls
pop
aaa
mov
movsb
std
pop
dec
in
push
jo
jmp
test
loop
dec
xor
shrd
addr16
or
mov
jecxz
addb
mov
xor
fisttps
mov
das
ss
stc
sbb
loopne
xor
fwait
out
dec
mov
push
fldenv
sbbb
adc
jp
inc
mov
adc
jae
ds
idivb
add
xchg
aas
cltd
addr16
xchg
sbbb
sbb
mov
lea
jge
add
inc
stos
sub
mov
scas
mov
push
notb
sub
xor
mov
lahf
inc
sbb
roll
xor
test
push
sub
decb
jg
je
jp
sti
sub
dec
cld
mov
iret
repz
rcrl
ja
mov
mov
or
cs
and
fs
mov
sub
jne
and
lds
ja
ds
sbb
stos
aam
sbb
test
in
int3
add
xor
in
and
jp
cmp
lea
shr
pop
or
sbb
mov
jecxz
mov
mov
push
movsb
fwait
inc
cmpsl
out
pushf
in
fcmovne
enter
or
inc
lea
mov
imul
sub
clc
or
insl
js
xor
mov
test
repnz
imul
sbb
mov
into
mov
movsb
jmp
cmp
jbe
iret
outsb
shlb
push
and
out
sbb
push
pop
lahf
xchg
vmwrite
push
jmp
mov
push
mov
inc
push
or
mov
or
aam
aad
aas
fwait
arpl
frstor
shrb
xchg
xchg
mov
lods
sbb
fsub
cmp
inc
mov
push
jns
pop
sti
and
aam
ss
shll
ja
cmp
sub
fcomps
sub
dec
mov
out
pop
test
mov
sub
xor
jmp
into
jns
mov
and
test
insl
into
lcall
and
push
in
mov
mov
jnp
je
inc
data16
test
xor
movsl
mul
dec
inc
fsubrp
ljmp
lret
pop
xchg
fnstcw
lock
bound
loopne
cmp
jle
adcl
sarl
mov
gs
daa
and
sub
and
adc
pop
xor
push
orl
xorb
adc
jle
mov
dec
bound
xchg
call
stc
cmpsl
or
stc
rcrb
xor
mov
adc
repnz
int3
push
sbb
hlt
lods
out
or
cmp
ljmp
fldl
into
divl
loop
popf
pushf
bound
pop
popa
lds
ss
popl
pop
pmullw
mov
cs
jo
inc
jo
mov
shl
cmp
iret
adcl
fsubrl
jbe
imulb
sub
sub
jo
cmp
jae
fdivl
mov
test
push
inc
out
cmp
mov
aaa
ja
push
cmp
dec
sahf
fiadds
xchg
incl
pop
push
add
sub
gs
out
ficomps
fwait
shr
jp
cmpsl
add
cmp
enter
sbb
xor
lret
adc
sbb
fidivs
xlat
push
and
sbb
add
mov
jg
lcall
out
adc
push
mov
fwait
xchg
sub
nop
push
repnz
push
xchg
shlb
ja
or
negb
das
ljmp
cmpsb
add
lods
xchg
aas
mov
adc
pop
imul
stos
xchg
pop
in
daa
inc
arpl
dec
or
xor
push
int
adc
adc
inc
jp
bound
imul
ret
into
clc
aas
inc
in
and
aam
std
out
mov
push
fcoml
jg
xor
cwtl
jp
dec
adc
ss
cmp
sbbb
int3
imul
pop
nop
rcrl
lahf
mov
push
out
and
stc
pop
pop
dec
ds
gs
inc
xor
mov
xchg
mov
or
insl
jmp
movsl
jns
cmp
inc
pop
rcr
out
mov
sbb
popf
stos
mov
punpcklwd
aas
adc
dec
aas
push
dec
lods
les
test
pop
push
sub
imul
lcall
add
cmp
int
fwait
stos
push
mov
mov
outsb
and
adc
push
pop
xchg
pop
std
testl
or
shr
pop
addr16
hlt
cmpl
icebp
gs
mov
dec
lcall
dec
jne
dec
add
jo
filds
lea
cmpsb
or
pushf
xchg
outsl
je
shll
push
mov
pop
pop
dec
cltd
sub
adc
aaa
xchg
xor
sub
cmp
adc
testb
ret
test
out
negl
imul
xchg
adc
mov
cld
sbb
dec
sti
ret
xlat
push
dec
pop
inc
mov
mov
out
and
push
xchg
shrb
xchg
mov
pop
lods
mov
cmpb
mov
inc
addb
aas
xchg
cli
dec
and
ficompl
gs
jnp
ss
out
jnp
mov
adc
adc
movsl
nop
out
pop
push
push
jle
cld
insb
mov
pop
lock
sbb
std
das
sbb
sub
movsl
testb
in
lds
inc
xor
cmc
adcb
and
inc
add
mov
repnz
dec
adc
hlt
leave
lds
mov
mov
into
loop
inc
mov
shrl
mov
dec
jns
in
inc
pop
mov
mov
scas
xchg
movsb
xlat
inc
mov
push
xchg
nop
das
pop
mov
mov
adc
loope
fdivs
andl
andl
or
inc
sub
jne
mov
rcr
pop
xor
or
cli
sbb
xlat
mov
push
iret
or
ds
push
sbb
mov
lods
push
mov
lahf
sbb
cmp
ret
cwtl
cmpsb
dec
shrb
in
sub
xchg
jno
jne,pt
shll
sbb
fidivrl
shrb
push
xchg
and
mov
mov
and
or
or
lret
adc
and
or
inc
dec
mov
leave
daa
mov
push
icebp
mov
scas
push
sub
sbb
xchg
bound
orl
cmc
and
js
popf
xlat
stos
jns
les
and
addr16
inc
pushl
sub
test
push
popf
lcall
mov
pop
int3
cmp
addr16
pop
into
cmp
mov
jp
xchg
cmp
jbe
sarl
test
push
mov
insl
adc
dec
add
and
icebp
icebp
sarl
xlat
pop
in
aaa
jecxz
arpl
push
cmc
mov
xchg
mov
mov
xchg
repnz
dec
xor
sahf
popa
shlb
mov
fisubrs
mov
mov
fidivl
in
mov
jns
cli
cld
cmpsl
pop
imul
sub
popa
dec
in
or
lods
pusha
mov
add
lret
push
pop
cmp
mov
out
inc
mov
mov
inc
inc
clc
repz
and
ljmp
jl
pop
popa
push
dec
sbb
cli
adc
or
in
dec
les
mov
or
xchg
xchg
fistl
pop
mov
dec
xchg
out
or
dec
mov
dec
xor
jecxz
push
cmp
rorb
daa
push
in
xor
leave
sahf
jge
pop
call
repnz
sbb
sbb
movsb
rorl
add
popf
dec
stos
jo
pop
cmp
mov
pop
add
aam
inc
hlt
lret
add
dec
inc
cli
jns
outsb
pop
pushw
or
jns
clc
ja
xor
mov
push
shrl
pop
xchg
push
push
inc
pop
inc
lods
cmp
add
pop
mov
cmc
and
icebp
insl
mov
sub
push
cli
jl
aad
ret
jmp
fists
pop
js,pt
or
idivb
pop
repz
sub
xchg
outsl
pop
sbb
scas
popf
repnz
ja
scas
or
fldt
xor
stos
fwait
xor
sahf
es
pop
cmpl
push
and
add
dec
mov
sbb
sub
aaa
enter
push
test
scas
sti
rcll
push
adc
int3
inc
jbe
cmc
sahf
fisubs
xchg
sbb
ret
jbe
lea
cmp
mov
hlt
jns
fstp
movsb
loopne
repz
or
movsb
xor
mov
mov
mov
test
negl
dec
rcrl
rorl
loop
mov
in
dec
lahf
subl
or
sbbb
push
cli
adc
aaa
jbe
pusha
cmp
dec
xchg
fcmovu
das
xchg
ss
iret
notb
fwait
mov
fstps
jbe
pusha
pusha
jmp
jg
fsubrl
or
clc
xlat
repnz
pop
hlt
ja
pop
inc
sti
xorb
ljmp
ucomiss
xchg
jne
sbb
fcomps
sub
pop
sub
jmp
pop
add
dec
adc
jecxz
push
inc
or
orb
test
inc
push
int3
iret
imul
inc
bound
je
mov
xor
dec
arpl
cmpsb
push
mov
cmp
xchg
jbe
not
mulb
loopne
xchg
pop
out
xor
out
adc
movsb
call
and
mov
and
add
inc
in
cmp
sarl
xor
mov
push
sarl
inc
mov
int
sub
in
mov
cld
and
xor
enter
jno
pop
push
adc
shll
dec
xchg
adc
inc
rcrb
xchg
pop
sub
rol
sub
lahf
ffreep
xor
jmp
aas
in
lcall
jno
fcompl
jle
shrl
mov
scas
dec
lods
inc
xlat
sbb
jl
pop
mov
mov
jmp
pop
cmpsb
iret
mov
fistps
jge
mov
add
loope
or
pusha
pop
inc
movsl
lret
pop
orl
popl
inc
sbb
mov
cli
ljmp
stc
mov
mov
xor
add
cmp
cmp
lcall
jp
dec
push
jge
sbb
mov
dec
pop
shll
xor
fnstsw
fs
mov
push
mov
push
fisubrl
call
dec
dec
jno
cli
fidivs
sub
fldenv
aad
mov
push
or
mov
fwait
and
push
cmpsl
rcrb
out
andl
les
and
adc
add
mov
push
loopne
movsb
jl
mov
mov
and
add
rcr
adc
repz
push
dec
cmp
int
sub
test
jl
sbb
or
sar
pop
xchg
arpl
inc
cs
mov
inc
adc
and
mov
in
nop
or
mov
movsb
push
xor
or
insl
rcl
movsl
mov
mov
fstps
xlat
and
and
jae
mov
dec
lds
call
or
cmp
pop
dec
insl
and
subl
cwtl
imulb
xchg
lret
add
cmpsl
dec
cmpsb
mov
xor
int3
pop
or
sub
aad
outsb
jne
shrb
push
inc
push
mov
lds
fsubs
mov
xchg
clc
jbe
lods
push
ret
inc
imul
xor
push
lahf
or
das
ss
bound
outsl
cld
push
mov
insl
stos
jg
inc
imul
mov
icebp
jns
imul
out
push
pop
inc
xor
sbb
jl
inc
fistpl
mov
popa
mov
lret
push
jb
push
cmp
push
test
mov
adc
sbb
mov
sbb
cmpsb
adc
pop
xor
jbe
sub
mov
adc
fdivrs
das
xorl
sbb
fistl
dec
lret
cltd
ret
and
std
test
iret
lods
cmp
into
jecxz
or
lret
dec
push
inc
cltd
jns
lods
mov
cs
mov
adc
daa
or
lea
repnz
movl
into
inc
mov
aad
mov
inc
mov
in
push
jo
jecxz
and
jmp
cmp
dec
aas
mov
hlt
mov
in
add
int3
pop
mov
in
nop
orl
jl
stc
jnp
std
sub
fistpl
ret
jnp
cmp
sub
xchg
pop
dec
xchg
cmp
lock
or
or
mov
inc
mov
sbb
sbb
sub
int
mov
cmp
mov
lods
pop
stos
nop
cmp
ficoml
inc
stos
xor
sbb
mov
xor
inc
sbb
cmc
jae
hlt
or
sub
stos
mov
std
adc
shl
dec
icebp
jnp
dec
mov
pop
js
sub
cmpb
cmc
xorl
xchg
movsb
pop
mov
push
repz
andl
and
cmc
cltd
iret
lret
push
or
inc
lods
inc
jne
inc
je
dec
out
xor
call
test
repnz
xchg
dec
insb
test
pop
lods
xor
pop
movsl
sub
lods
or
stos
mov
insl
push
sbb
repz
insl
jbe
pop
lret
push
mov
xchg
ret
and
shlb
cmc
out
adc
dec
shlb
lods
insl
push
mov
int
xor
dec
test
adc
add
js
repnz
jg
xor
lods
test
push
arpl
hlt
es
int3
mov
add
vdivpd
mov
in
bound
fldl
fsubrs
or
dec
ss
sbb
jne
aam
ret
movl
ds
add
cmpsb
lret
ror
push
lods
or
mov
jae
pop
daa
neg
rcrb
loop
and
sbb
xorb
mov
in
mov
jo
push
add
aas
scas
and
aad
xchg
ds
fdivrs
ljmp
sub
mov
ss
sub
cmc
ret
jb
out
and
inc
jbe
sbb
adc
xchg
shl
xor
jge
push
pop
push
xchg
add
and
pop
cmc
inc
jno
adc
mov
mov
pop
cmp
xchg
cmp
imul
imul
adc
mov
dec
xchg
iret
cld
lods
dec
flds
push
and
mov
popa
mov
jno
sbb
lcall
sahf
cld
repz
sarb
out
lods
cmp
icebp
sub
mov
or
add
cmpsb
inc
mov
iret
dec
fwait
xor
fidivrs
cmpsl
or
repz
and
in
nop
and
adc
imul
adc
push
fdivrs
push
pop
adc
mov
popa
or
xorb
cwtl
sub
insb
xchg
imul
loop
leave
mov
inc
inc
mov
sahf
rolb
pop
popa
stos
pop
jae
mov
fwait
dec
and
outsb
aaa
insl
in
out
aad
pushf
inc
sub
mov
pusha
xchg
push
sub
xlat
bound
lcall
add
cmc
jge
xchg
ja
loopne
fsub
lret
or
stos
cld
movsl
adc
fwait
xchg
movsl
pusha
and
cltd
rolb
into
sahf
jecxz
push
call
jl
adc
sub
inc
leave
mov
lcall
cli
add
cs
and
mov
mov
and
shlb
mov
les
hlt
adc
jnp
inc
scas
xor
in
cltd
push
mov
out
sar
imul
lds
xchg
shlb
and
xor
xchg
jge
mov
push
aad
xchg
icebp
cmp
insl
aas
jne
test
sarl
into
jns
call
and
mov
dec
xchg
xor
jp
mov
nop
pop
rcl
jp
scas
jo
xchg
sub
insl
in
mov
lcall
cmp
mov
or
jo
mov
sbb
mov
fcoms
insb
lds
rorl
mov
sub
inc
sbb
mov
mov
popa
mov
adcb
out
mov
xor
xor
out
imul
sub
xor
ret
inc
xor
add
pop
cmpsb
pop
in
pop
xchg
aam
sub
ja
scas
arpl
jge
test
xor
ret
jl
mov
cmpsb
cmpsl
sub
push
push
scas
sarb
sub
cmp
daa
imul
adc
leave
out
pop
add
popa
out
imul
mov
cmpl
dec
sub
or
and
sbb
loopne
addr16
enterw
pop
popf
jnp
addr16
mov
orb
sub
lds
js
hlt
rclb
repnz
pop
lret
gs
sbb
lea
dec
jo
jle
mov
test
data16
mov
jo
loopne
xchg
loopne
xchg
dec
pop
sub
xchg
xor
inc
sbb
push
mov
daa
shrb
xor
rcrb
orl
xor
outsb
pop
mov
out
sub
jno
push
mov
icebp
enter
add
pop
mov
mov
add
sub
mov
arpl
icebp
fldl
mov
les
les
jno
fwait
xchg
cmpsl
mov
aaa
add
sub
push
test
xor
cmp
adc
or
lock
sbb
test
test
xchg
push
idivl
ljmp
add
ret
fwait
cmc
nop
aad
repnz
int
adc
sbb
inc
xchg
jae
and
insb
into
incb
sbb
dec
test
xchg
rcrl
aam
idivl
mov
mov
mov
lahf
inc
insb
aaa
jl
xor
in
cs
out
sbb
mov
negl
pushf
jmp
in
xor
adcl
push
ret
xchg
pop
btc
push
xchg
or
pop
mov
fwait
mov
push
mov
mov
test
in
and
aad
into
ss
add
pop
sbb
jp
push
push
inc
decl
xchg
dec
inc
jns
sti
dec
dec
clc
cmp
xchg
rcr
push
push
adc
lahf
mov
fiadds
or
pop
test
jmp
xor
stos
cmc
mov
lea
iret
pushf
or
jg
pop
addr16
sarl
pop
mov
idivl
sbb
addr16
nop
in
iret
and
jb
jecxz
mov
out
add
cli
add
movsl
pop
pop
mov
pusha
dec
out
cmp
pushf
xlat
fwait
ja
in
inc
pusha
xchg
mov
data16
fistps
sbb
jbe
xor
mov
adc
jbe
out
scas
inc
lcall
cmc
and
push
sub
dec
test
gs
in
mov
leave
stos
xchg
jge
in
sbbb
xchg
out
rcr
ljmp
mov
ljmp
mov
mov
dec
adc
fwait
push
mov
inc
jns
stos
sbb
mov
add
int
mull
pop
or
sub
sti
ss
pop
mov
leave
lahf
mov
add
xchg
inc
adc
ffreep
inc
sub
push
shrb
xchg
pushf
int3
pushf
push
jmp
aad
js
lock
push
or
filds
iret
filds
mov
clc
mov
xor
stc
mov
xchg
loopne
dec
xor
enter
inc
cmp
ret
xor
lcall
add
inc
repnz
adc
pop
loopne
mov
fwait
jle
cli
inc
cld
orl
xor
jno
cmp
scas
adc
mov
repnz
out
inc
cmp
push
imul
flds
dec
mov
and
iret
inc
roll
cmp
int3
sbb
das
adc
push
sbb
lods
xchg
jb
pop
and
mov
rol
cli
cwtl
jae
mov
and
stos
sbb
pop
fdivrl
pop
mov
es
push
lds
lret
mov
mov
movsw
xchg
dec
xchg
das
bound
cwtl
cltd
cmpsb
push
inc
xchg
mov
js
jo
lea
jo
insb
cs
push
jne
leave
jge
mov
inc
or
jmp
out
push
imul
lret
pop
lret
mov
rcrl
dec
dec
xchg
or
loop
xchg
cmp
add
sub
mov
test
jo
clc
xorl
push
adc
out
xor
jge
popf
iret
pop
jne
fidivrl
lret
rcll
dec
js
ret
dec
test
gs
jnp
data16
jae
sub
mulb
push
dec
adc
test
iret
ds
jbe
mov
mov
ja
test
xor
sbb
sbb
cmpsl
mov
mov
dec
pop
mov
movsb
mov
das
mov
rclb
xchg
push
call
in
mov
xor
xchg
movsl
mov
xor
jbe
fwait
rcr
xchg
into
test
pushf
cltd
mov
movsl
mov
or
inc
and
cmpsb
sub
mov
cli
add
fwait
arpl
add
mov
mov
or
pop
xlat
sbb
call
cmp
push
les
dec
in
mov
aam
mov
add
shll
push
test
fcomps
pusha
mov
adc
pop
push
jno
iret
std
sbb
repnz
pop
hlt
in
pushf
push
add
repnz
adcl
je
aam
fsubr
mov
mov
mov
lahf
adc
loopne
out
aas
or
cmp
xor
xchg
cld
fildl
ljmp
mov
xor
testl
dec
out
mov
cmpsb
repnz
push
cmp
leave
lods
jl
imul
cmp
popa
mov
adc
andl
dec
push
movsl
std
iret
dec
sti
jbe
or
cmpsl
gs
js
stos
pop
lods
repz
jne
push
jmp
or
fwait
jle
cmc
push
rcl
mov
testb
outsb
cs
out
mov
leave
and
dec
aaa
fistl
sbb
rcrl
pop
call
sub
repnz
xlat
pushf
inc
xor
not
xchg
and
mov
and
test
sub
adc
sub
outsb
jb
fiaddl
fistpl
push
cmp
push
mov
idivl
cmp
push
jae
push
cmp
lret
adc
mov
add
lret
mov
test
cmp
or
out
imul
repz
scas
cmc
jmp
lahf
pop
sti
lret
mov
mov
es
push
cli
dec
dec
cmpsb
icebp
or
cli
sahf
add
sbb
int
rorl
xchg
adc
outsb
jo
nop
je
inc
xchg
stos
sub
xor
out
inc
push
add
mov
mov
mov
adc
mov
mov
shrl
fsubrl
fdivs
push
out
outsl
clc
mov
pop
jb
mov
ret
or
adc
call
rolb
adc
cmp
dec
lds
test
rorl
lods
fnsave
loope
sub
or
cmc
nop
clc
dec
cmpsb
sbb
jmp
xor
push
ss
popf
js
mov
push
xor
jge
inc
arpl
push
cmpsl
jno
adc
and
add
lds
xlat
insb
and
mov
aas
adc
cld
jnp
mov
rol
xor
mov
scas
and
cmp
loope
and
xor
xchg
dec
popa
fdivp
inc
mov
push
sbb
inc
jge
sarl
mov
lods
cmpsb
mov
int3
mov
roll
call
fstpl
mov
cld
les
fwait
pop
shrl
or
add
xor
push
clc
mov
mov
sbb
and
sub
adc
xchg
mov
sahf
push
hlt
iret
test
mov
add
dec
hlt
ror
aaa
push
mull
xchg
ret
sub
imul
inc
mov
popa
int3
lcall
push
shll
stos
dec
jae
test
push
lds
dec
xor
nop
push
test
xor
sbb
or
fidivrl
fwait
arpl
dec
fistl
addr16
ss
repnz
or
cmp
adc
pop
xlat
rcrl
in
dec
arpl
adc
jp
out
sbb
pushw
into
into
pop
aaa
insl
out
and
gs
aas
add
iret
xchg
adc
jo
lock
pop
cmpsl
cld
outsl
sub
repz
pusha
or
mov
push
adc
imul
lods
pop
mov
rcr
daa
or
inc
jl
ljmp
sbb
add
fwait
outsl
lret
xchg
dec
mov
insl
mov
subb
fisttps
sbb
mov
jmp
or
xchg
lods
repz
mov
push
or
dec
mov
cwtl
jo
add
aad
out
fiadds
add
inc
in
sbb
repnz
das
jecxz
shll
fisubs
mov
aaa
adcl
xlat
cmp
add
lcall
popf
into
ror
loope
inc
ret
jns
in
jl
mov
mov
add
mov
hlt
xchg
loop
out
shl
pop
sbb
mov
and
dec
in
movsl
push
ret
nop
fwait
out
adc
roll
inc
or
sbbb
ljmp
in
fsubrs
adc
add
aam
mov
add
mov
mov
add
or
mov
add
rcrb
popa
mov
daa
nop
sti
rorb
push
push
cs
out
lahf
sbb
xchg
adc
add
push
call
fstpl
xor
push
and
ret
inc
mov
push
xchg
popa
rolb
xchg
mov
xchg
sub
mov
jo
xchg
imul
jecxz
pop
inc
imull
cmp
mov
fs
imul
aam
fcmovnu
test
xchg
jae
adc
sub
iret
ret
cwtl
sub
and
jmp
xchg
push
cmp
int3
cmp
inc
sbb
daa
dec
sarb
xchg
leave
arpl
test
adc
push
push
iret
push
cmpsl
mov
cmp
inc
lock
push
dec
adc
cld
out
insl
sahf
xor
jno
pop
add
in
lods
cmc
jp
push
sub
mov
or
loope
push
pop
mov
andb
iret
jp
jl
sub
outsl
fisubrs
das
or
sub
vsqrtss
xor
ss
lret
xorl
enter
fcompl
sbb
mov
insl
int3
xor
rcrl
lea
stos
push
sub
movsl
mov
cwtl
mov
lea
and
mov
and
jno
enter
int
dec
sub
or
call
pop
mov
aad
sbb
inc
jmp
lods
aad
pop
dec
rorl
dec
mov
decb
shrb
out
arpl
xchg
add
jne
nop
adc
pop
lds
sbb
dec
pusha
cmp
lock
jl
jp
xchg
hlt
push
pop
adc
cs
imul
into
aam
jns
mov
cmp
movsb
test
fcmovnbe
lcall
sub
add
js
cmpsl
or
repz
mov
dec
outsl
into
dec
mov
xchg
mov
or
sti
push
js
or
aad
cmp
loope
push
in
pop
pop
js
mov
push
mov
and
cmp
xlat
push
adc
mov
sub
daa
pusha
jl
sahf
mov
rcr
mov
xlat
push
leave
cmpsl
pop
insb
lea
dec
sub
ds
mov
cmp
mov
xchg
sub
imull
dec
loope
and
call
and
fsubs
loope
cmp
and
add
pop
xchg
inc
mov
stos
outsb
es
insl
loop
cltd
cli
pop
hlt
jnp
lret
scas
lret
ja
push
int
push
iret
cmp
xchg
and
shlb
push
mov
pop
ret
outsb
out
inc
std
fwait
scas
fmull
lock
or
mov
lahf
hlt
daa
xlat
jo
je
insb
ljmp
xchg
enter
push
out
cmp
jecxz
popa
leave
scas
popf
xchg
xchg
inc
dec
cmp
jp
xchg
rol
fiadds
add
test
sub
les
pop
loop
incl
int3
lds
imul
nop
cmp
lds
push
xor
mov
ret
bswap
jl
inc
dec
cli
rclw
mov
xor
pop
mov
loopne
arpl
mov
or
imul
inc
xlat
fistps
sarb
mov
je
scas
push
jmp
and
xchg
pop
loope
and
mov
call
sbb
mov
js
xchg
push
shr
enter
jg
xchg
cmp
repnz
or
negl
or
int3
or
pop
and
sbb
xchg
push
push
dec
nop
xor
fdivrp
mov
imul
and
aas
lahf
mov
movsb
mov
jbe
dec
fstps
test
add
popa
in
pushf
cvttps2pi
sub
gs
lods
rcll
ret
insb
sub
outsl
popa
dec
inc
movsb
ljmp
push
lret
not
fwait
pop
in
dec
in
push
sbb
xchg
in
pop
sarl
push
sbb
or
leave
sub
leave
mov
dec
dec
jo
lcall
js
sub
add
xor
xor
sub
cmp
lahf
fsubs
mov
ja
or
mov
test
push
mov
mov
add
test
in
lahf
mov
push
scas
and
and
and
movsb
lcall
nop
cmp
xor
and
adc
mov
inc
jnp
lret
inc
add
repnz
jmp
sub
jne
push
lahf
mov
pop
in
inc
sbb
shlb
jl
int3
jo
aaa
pop
xchg
jg
pop
fdivl
je
stc
xor
fs
in
xor
xor
movsb
int
push
mov
push
loop
fcoml
lock
sub
pop
mov
dec
data16
jmp
cmp
rolb
bound
cwtl
push
and
or
test
jl
xchg
or
xchg
push
cmp
or
dec
push
dec
mov
dec
inc
lds
or
rorl
test
jno
imul
push
arpl
lods
adc
xor
popf
mov
cmp
push
jo
iret
bound
aam
rcrl
pushf
imul
in
lret
mov
push
sbb
add
add
int
test
stos
lods
inc
sub
fnsave
cli
mov
bound
fildl
add
stc
mov
in
xor
not
mov
addr16
pop
mov
xlat
push
sbb
shrl
faddl
push
in
jle
aas
inc
jle
inc
and
dec
cmp
xor
mov
mov
fisubrs
insb
arpl
fmull
push
insb
xchg
jns
pusha
sbb
popl
sub
ficomps
jg
jne
xorl
mov
mov
out
adc
imul
sbb
aaa
sub
jl
mov
data16
mov
hlt
rcll
xchg
or
jae
xor
aas
loopne
push
and
rcrb
cmpsb
popf
pusha
sub
es
bound
push
sti
call
fadds
sub
push
ja
mov
xor
frstor
sub
cld
ja
pop
or
jns
outsb
repz
enter
or
fldcw
mov
xchg
xor
jp
and
mov
jns
mov
sub
add
test
cmp
stos
stos
inc
cmp
hlt
icebp
jmp
bnd
imul
repz
ret
mov
and
dec
mov
mov
scas
lcall
sbb
or
test
xchg
les
arpl
lret
icebp
push
sbb
cwtl
xchg
dec
in
adc
and
and
jge
lea
lcall
lods
clc
lcall
mov
pop
movsl
rcrl
mov
mov
jge
adc
cs
sbb
lock
aaa
aas
test
je
sub
mov
push
dec
call
jns
ss
mov
ljmp
ss
mov
lcall
repz
xchg
pop
add
call
mov
inc
xchg
sbbb
pusha
or
loopne
dec
fsubrl
cmp
lahf
sub
jmp
pusha
cmp
sbb
dec
mov
scas
and
xchg
xor
rcll
nop
pop
add
pop
inc
cmp
orl
testb
jle
inc
push
sbb
pusha
cld
pushl
je
mul
bound
xor
pop
fists
mov
js
cld
adc
movsb
mov
or
mov
fidivrs
mov
bound
push
inc
xchg
jmp
dec
fadd
in
outsb
xchg
pop
daa
lret
xadd
aas
jl
pop
cmpb
fnstsw
xchg
sub
pop
cmp
sbbb
arpl
push
pop
ljmp
and
lret
movsl
daa
in
inc
mov
mov
nop
shl
into
pop
gs
jecxz
cmp
mov
mov
cli
inc
dec
mov
mov
roll
xor
mov
dec
jmp
movsb
orl
jno
negl
or
jnp
jle
pushf
pop
pop
xchg
adc
mov
jp
insl
rcrl
ja
pop
loope
mov
fs
mov
or
sti
xor
xchg
mov
dec
mov
sahf
les
pop
cmp
push
popf
sub
dec
dec
into
ja
movsb
les
cmp
mov
das
sbb
sub
mov
cwtl
or
nop
jb
popa
scas
or
sti
xchg
movl
scas
loope
shl
call
add
or
out
int3
and
inc
xchg
lahf
ds
fucomp
sub
fildl
mov
imull
into
cmp
lods
cmp
ficoms
data16
push
xor
xchg
push
and
fnstcw
pop
js
call
cmp
test
push
or
lret
mov
aad
push
js
icebp
les
lock
fs
call
mov
xchg
xchg
movsl
pop
punpckhwd
pop
pop
xchg
mov
jge
test
cmp
push
sub
lock
mov
adc
orl
xchg
adc
lret
adc
and
mov
in
mov
roll
pushf
jne
in
imul
pop
jle
add
pop
filds
xchg
dec
mov
inc
aam
ret
xlat
mov
xchg
dec
add
dec
icebp
mov
xchg
sarb
mov
adc
imul
adc
imul
jnp
shr
out
lods
in
inc
mov
lahf
repz
mov
sbbb
subb
imul
adc
jle
addr16
sbb
lret
inc
sub
cmpl
subb
mov
pop
push
shr
popf
imull
imul
imul
into
pop
leave
into
push
dec
jmp
xor
mov
xchg
inc
int
xor
mov
jmp
cmpsl
int3
mov
std
les
int3
pop
movsb
inc
iret
imul
push
jae
xor
fstpt
sbb
cld
jo
xlat
adc
or
fistpll
daa
xchg
pop
jp
les
ljmp
jno
mov
mov
arpl
jo
fldln2
mov
fimull
add
cmp
and
ljmp
push
or
imul
repnz
rcl
xor
cs
xchg
and
mov
aaa
in
addl
popa
das
cmp
fistl
pop
iret
xchg
xchg
push
and
pop
cmp
adc
xchg
push
sbb
fwait
mov
xor
lret
add
bound
out
mov
xlat
and
lods
or
lods
cmc
outsl
jo
or
roll
xchg
push
fiaddl
lods
imul
sub
jbe
sahf
mov
int
or
repz
ljmp
jp
out
mov
test
adc
popa
sub
jmp
xchg
cmp
hlt
or
dec
popa
data16
cmpsb
test
add
ret
and
xor
mov
jecxz
mov
push
movsl
iret
mov
mov
dec
add
jb
inc
sbb
mov
jb
int
lods
es
sahf
adc
addb
add
idiv
lods
movsl
stos
test
shl
stos
ret
add
call
inc
and
xchg
xchg
sub
ss
and
outsb
mov
dec
sub
aaa
jge
outsb
decl
out
cmc
rcr
sbb
jmp
and
sub
test
leave
je
std
pop
mov
in
int
cli
aad
rcrl
mov
int
adc
and
mov
push
mov
mov
nop
lret
mov
adc
xor
xchg
cmpsb
ficomps
les
cld
pop
dec
and
rcrb
out
aam
inc
xor
dec
or
cmp
or
xchg
add
push
ds
xor
dec
repz
std
mov
inc
loop
mov
leave
xchg
adc
inc
fs
and
mov
dec
mov
andl
mov
sbbb
push
in
mov
add
and
push
pop
loop
cmpsl
ds
jo
add
loope
fs
ret
push
lea
fsub
decl
pop
add
dec
and
icebp
sub
enter
jge
inc
sub
cmpsb
inc
jl
mov
in
into
ds
test
or
xor
pop
out
add
stc
inc
xchg
outsb
xchg
or
pop
add
out
out
loop
cmc
sub
xchg
pop
inc
outsb
ljmp
mov
mov
mov
imul
outsl
jl
cmp
jl
mov
sub
mov
mov
jl
in
push
arpl
test
dec
repz
xor
mov
pop
imul
cmp
mov
iret
sbb
mov
push
movsb
aaa
jnp
addr16
xor
xor
jecxz
imul
sbb
aas
fldt
nop
mov
repnz
mov
hlt
mov
imul
out
xor
into
jae
sub
xchg
xchg
mov
rcr
fcoml
sub
and
test
cmp
jbe
and
out
jmp
push
lahf
icebp
push
pop
scas
jbe
xchg
push
jmp
rorb
das
sub
outsb
xchg
out
xchg
jnp
adc
out
cmpsl
int3
call
aad
push
bound
dec
fdivrs
gs
ljmp
push
out
cmc
ljmp
enter
add
lcall
aas
push
nop
call
es
pushf
inc
punpckhbw
push
in
mov
aad
test
gs
ss
mov
push
dec
shll
inc
insb
pop
pop
and
mov
sub
mov
call
dec
push
mov
pop
mov
pushf
lcall
push
lret
sbb
aaa
mov
mov
push
repz
dec
jnp
or
mov
mov
push
lea
dec
adc
push
je
ja
test
ret
adc
mov
dec
mov
xor
or
cltd
and
std
inc
push
dec
or
pop
imul
or
sbb
mov
jecxz
mov
adc
adc
dec
popa
pusha
mov
adc
xorps
mov
add
insb
mov
mov
dec
das
lret
out
and
cmpsl
test
cmpl
and
cmpsb
cli
cmp
vsubsd
or
roll
sbb
sub
js
movsb
out
push
je
sub
mov
cmovno
rcr
fistps
dec
rcr
ds
xchg
adc
xchg
int3
jl
inc
fld
jo
xchg
lock
jo
cmp
sahf
scas
aad
popa
sub
imul
cmp
xor
into
lds
andb
jbe
dec
aas
or
orl
pop
xor
test
cs
jb
pop
dec
cli
cmp
int
roll
ret
in
sbb
iret
stc
repz
cs
pushf
mov
add
xchg
adc
pop
loop
fdivl
jmp
mov
bswap
pop
mov
lahf
lahf
cmc
sti
outsb
inc
in
data16
sub
sbbb
and
pusha
adc
daa
jp
push
jne
movsl
inc
or
sub
xor
inc
fidivrs
sti
jnp
add
ljmp
sub
lods
sti
scas
push
repnz
pusha
or
mov
add
sbb
sbbl
push
adc
test
xchg
mov
pop
inc
dec
pop
in
sub
mov
dec
cmc
pop
dec
xchg
scas
outsl
cmp
outsb
sbb
adc
mov
xchg
aas
lods
mov
cmp
sbb
cmp
repz
insb
fdivl
pop
shll
ds
and
test
add
fsubrs
lods
loop
lods
je
arpl
cltd
xchg
mov
mov
test
iret
les
xlat
rcll
mov
lds
lret
or
inc
mov
fidivs
frstor
out
pusha
daa
mov
jecxz
and
in
scas
in
das
jns
pop
jp
xchg
ficoms
cwtl
dec
xor
mov
xor
sub
xorl
and
test
pop
aas
leave
pop
mov
fld
icebp
cmpsl
xchg
imul
inc
loopne
sbb
fmuls
adc
fsubrp
or
jbe
sbb
push
imul
mov
xchg
ror
aad
mov
sbb
pop
sub
jl
or
lahf
xchg
jle
pop
test
repnz
add
mov
jmp
sahf
ret
pop
imul
mov
test
test
push
ss
mov
test
arpl
xor
in
lcall
cs
adc
push
and
lahf
call
pop
add
aam
in
je
sub
stos
mov
test
popa
cmc
mov
in
loopne
push
loop
xor
adcl
mov
push
std
xlat
insb
cmpsb
mov
dec
movsl
mov
adc
jb
dec
dec
mov
in
into
or
cli
inc
leave
push
les
fs
iret
pushf
dec
lret
and
scas
push
jns
sti
bound
sarl
sahf
arpl
cmc
js
inc
push
cmpsl
test
mov
push
lds
sub
lods
pop
ja
shl
je
add
xchg
mov
xchg
shrl
outsl
std
ljmp
call
jle
subps
sarb
pop
cli
jecxz
rcrb
xor
fs
xchg
ret
jno
jp
cmp
es
ljmp
subl
lods
sub
xlat
mov
es
jno
mov
and
shlb
addr16
push
stos
cwtl
ss
in
and
cltd
jp
mov
push
jo
iret
stos
mov
mov
out
icebp
xchg
loop
cmpsl
or
pop
push
sub
xchg
popa
xor
xchg
rol
flds
and
adc
mov
cmpsb
add
or
outsl
mov
jle
and
mov
outsl
leave
inc
cmp
ret
cmp
or
mov
pop
lret
sahf
jb
push
mov
jge
sbb
xlat
arpl
rcrb
scas
adc
lahf
pop
xlat
inc
push
push
cmp
mov
test
pop
and
loope
adc
cmc
lret
scas
filds
in
dec
in
sti
int
int
jbe
push
xchg
lock
xchg
push
cwtl
inc
mov
push
je
sub
adc
fistps
ret
adc
inc
xor
sub
rclb
xor
or
or
pop
xchg
inc
inc
cmpsl
push
push
jmp
jge
sbb
adc
ret
cli
mov
lods
push
xor
fdivp
add
push
xchg
sbb
je
sbb
xor
mov
aaa
sbb
dec
dec
inc
adcb
cmp
mov
mov
into
sbbb
fadds
fidivrs
das
inc
jne
mov
imul
adc
and
or
pop
sub
push
jb
je
in
das
repz
pop
stc
ret
push
mov
bound
push
mov
out
push
add
mov
xchg
cmc
stos
lret
xor
push
mov
jge
fwait
mov
adcl
pusha
nop
aam
faddl
ss
sbb
imul
dec
pop
or
ficoml
daa
add
mov
or
mov
out
mov
clc
popaw
jb
rcrb
out
or
push
mov
aam
jbe
jne
frstor
loope
add
pop
fldl
jb
sub
jne
imul
fmull
js
push
or
and
dec
jl
inc
jg
je
adc
push
out
lock
int3
shl
add
cs
inc
ds
push
nop
xchg
mov
add
cmp
scas
bound
int3
clc
push
xchg
fcomip
inc
movsb
imul
add
shlb
cmpsl
lahf
inc
sbb
push
jp
or
outsl
inc
jecxz
and
adcl
pop
mov
lret
pop
or
cwtl
shll
sbb
or
mov
rcrb
in
lret
fisttps
mov
in
mov
adc
stc
jl
mov
imul
mov
xchg
cmp
mov
cmpsb
mov
int3
ret
aam
incb
pop
add
cli
adc
dec
stos
mov
cltd
push
enter
data16
in
imul
or
ss
push
mov
xor
fldl
mov
lods
cvtps2pi
jmp
in
loope
and
sti
popa
or
pop
rcrl
repz
xorb
xchg
test
cmp
ljmp
rolb
sub
shll
cmp
fs
mov
inc
xchg
notl
mov
aam
cli
aad
insb
push
jbe
sub
and
sub
xchg
adc
cmp
and
mov
pop
sub
jno
roll
fldl
push
pop
cmpsl
ret
stos
xor
movsb
es
xor
in
in
inc
mov
add
ljmp
in
xor
imul
dec
popf
imul
or
dec
xchg
lret
inc
aas
jnp
xchg
xor
stos
mov
subl
jae
xchg
cmp
jg
xor
push
jle
add
sbb
lret
sub
sahf
pusha
mov
jo
push
mov
push
out
js
jmp
mov
pop
daa
jl
int
leave
imul
aad
jecxz
in
add
call
outsl
es
mov
xor
dec
stos
cmp
dec
gs
stos
in
sub
shlb
pop
cmpsl
pop
xchg
movsb
push
inc
pushf
adc
jecxz
test
scas
mov
call
pusha
mov
ficompl
frstor
fistl
in
sub
pushf
push
adc
test
lds
mov
cmp
aas
mov
loop
sbb
sarl
push
pop
mov
aas
xchg
and
out
mov
paddb
push
dec
lods
mov
lds
dec
mov
push
mov
push
push
and
jg
pop
pop
cmp
add
inc
wbinvd
jb
push
sbb
push
dec
jmp
mov
cmp
fnsetpm(287
stos
jg
dec
ljmp
and
pop
cld
int
dec
std
pop
mov
jp
pop
divb
mov
gs
testl
sahf
dec
adc
inc
cli
adc
xchg
mov
adc
cmp
mov
ror
rorb
outsl
jecxz
je
adc
jg
mov
xchg
or
push
stos
add
mov
cmpsb
mov
pop
pop
dec
sbb
in
and
mov
pop
adc
mov
shl
mov
in
dec
xor
fdivp
loop
shlb
popa
pop
aam
mov
inc
test
imul
pop
dec
int3
jl
push
cmpl
loope
fsubl
inc
xchg
mov
sti
sub
xor
jp
mov
push
roll
out
jl
in
inc
mov
ds
mov
out
add
cmc
test
mov
scas
sbbb
pop
mov
xlat
push
sub
or
sbb
dec
inc
mov
stc
aad
mov
pop
loop
je
leave
jno
xor
ja
dec
testl
insb
addr16
add
shl
cmpsb
call
jb
fsubp
mov
test
push
sti
cmp
andb
xor
cmc
pop
lret
daa
sub
push
push
pop
xor
sub
outsl
adc
stc
mov
enter
mov
loop
out
jbe
and
mov
test
sbb
das
xchg
bound
inc
sbb
sarl
pop
repz
mov
sbb
jle
inc
popa
jno
out
lock
mov
dec
jne
cwtl
repz
mov
cmpsb
mov
int
pop
mov
fdiv
shr
loop
sub
fiaddl
andb
adc
ds
testb
int
lds
xchg
insl
roll
lahf
sbb
jne
push
clc
cmpb
mov
pop
loopne
cmc
rcrl
cmp
pusha
repnz
test
stos
lds
inc
or
ret
rcrb
pop
cmpl
addl
cmp
mov
inc
sbb
sub
repnz
fbld
test
jns
clc
cmp
mov
sub
mov
cs
cmc
bound
jg
mov
push
lret
pop
icebp
dec
cli
pushf
cld
push
loop
in
in
popl
bound
in
sbb
or
pop
sub
adc
lock
or
aaa
sahf
mov
pushf
dec
rorb
addr16
lahf
push
mov
sbb
mov
cmp
sub
mov
xchg
mov
mov
rorl
dec
push
incl
cmp
mov
jecxz
in
dec
xor
xchg
mov
cltd
sbb
out
push
xor
test
add
mov
sti
xlat
jle
cli
arpl
ret
addr16
or
call
xchg
xor
in
pop
movsb
jbe
mov
mov
mov
push
aaa
push
xor
repnz
dec
xchg
rcrb
inc
fists
mov
cmpl
push
imul
xor
adc
fidivrl
ret
dec
movsl
nop
mov
xor
call
mov
call
inc
dec
jbe
outsb
mov
mov
ds
call
push
pop
sub
xor
xchg
and
in
fnstenv
scas
dec
pusha
stos
mov
or
dec
idiv
xchg
pop
ljmp
and
dec
push
aas
andb
leavew
pop
outsb
pop
pop
scas
in
lret
je
adc
iret
je
jo
push
andl
sti
dec
adc
jmp
push
je
mov
mov
add
xchg
mov
sbb
xchg
jp
ja
test
faddl
push
popa
jbe
xchg
ss
movsb
imul
shll
lcall
pop
enter
nop
in
out
xchg
ret
pop
outsl
shr
or
cmp
popf
cmp
pop
mov
inc
mov
mov
jmp
pop
int3
sub
push
sbb
sbb
stos
dec
jbe
in
inc
or
in
scas
ss
and
fwait
test
int3
shl
jnp
add
std
nop
cmc
lcall
pusha
inc
sub
push
gs
cld
ja
cltd
xor
insb
inc
pop
xor
loop
ljmp
xchg
mov
mov
sbb
and
nop
cltd
mov
test
fistpl
and
and
mov
mov
push
push
enter
aas
das
pop
cmp
xchg
scas
lahf
or
addps
fsubs
or
fsubr
es
mov
and
push
jb,pt
je
mov
lret
repnz
movsl
cs
lret
or
add
sbb
mov
popa
add
pop
jp
xchg
out
nop
invd
lock
data16
mov
or
enter
cmp
shll
jae
call
push
sar
ja
ss
sub
rcll
push
or
add
ret
mov
jp
inc
lods
jo
xor
add
push
dec
mov
enter
cmc
stos
bound
add
pop
fidivs
out
cwtl
rclb
test
mov
push
call
stos
jbe
mov
add
jae
stos
movsb
inc
or
xchg
mov
pop
add
jbe
pop
jmp
mov
and
and
adc
iret
test
sbb
into
decl
cmc
xchg
pop
pop
or
insl
cmp
xor
jg
out
xor
imul
in
mov
cmp
jmp
sbbb
xchg
mov
mov
mov
enter
leave
mov
pop
or
leave
sub
and
je
push
mov
jp
cltd
or
add
pop
fwait
cwtl
mov
and
xchg
mov
mov
or
popf
adc
mov
mov
std
gs
push
arpl
push
xor
dec
pop
pop
sub
js
or
lea
and
into
arpl
les
pop
inc
shlb
mov
cmp
lahf
sti
sbb
movb
popa
dec
and
xchg
jne
pop
aas
dec
xchg
repnz
jno
rcrb
push
xchg
negl
leave
fistpl
pop
mov
jmp
scas
and
cltd
shr
push
iret
mulps
outsl
test
loopne
add
ss
out
lahf
sbb
daa
push
lcall
push
push
dec
sbb
dec
mov
pushf
fwait
inc
ret
lcall
push
arpl
mov
inc
pop
adc
lods
test
push
shrb
stos
dec
jl
dec
push
repnz
dec
mov
jmp
lds
data16
jmp
xchg
inc
mov
or
test
pop
test
jmp
and
shr
sub
xchg
pop
or
lret
fdivl
jp
mov
and
daa
ljmp
lret
in
push
adc
cs
mov
or
lea
into
lahf
mov
outsb
fisubrs
movsb
adc
fimuls
push
xor
adc
cltd
push
and
xor
xor
daa
rcrl
imul
mov
mov
rorl
jecxz
dec
xchg
mov
lret
push
sub
mov
jnp
sbb
lahf
add
and
cmp
cmp
sbb
jle
mov
loope
dec
inc
shrb
push
repz
lret
pop
or
ss
sub
mov
popf
arpl
faddl
outsl
mov
adc
repz
adc
sbbl
or
call
push
ds
lods
pop
jbe
dec
xchg
and
dec
sbb
rorb
add
iret
sub
dec
mov
adc
adc
mov
fucom
fistl
inc
mov
add
cmp
sbb
mov
popf
addr16
push
std
idivb
mov
xchg
xor
rcrb
ss
push
xchg
enter
sbb
rcrl
mov
sti
and
xor
sub
pop
jp
or
int
lea
inc
pusha
shlb
sbb
fmull
enter
sbb
jmp
pop
vcmpss
push
test
iret
xorb
adc
adc
stos
pushf
push
mov
cmp
mov
adc
jne
scas
push
popa
pop
inc
adc
or
leave
push
ss
add
js
filds
jo
aad
push
dec
daa
or
sbb
pusha
add
imul
in
mov
xchg
pop
pop
push
cmp
xchg
imul
lahf
sbb
dec
add
or
fiaddl
iret
jo
pop
sub
data16
cwtl
imulb
shll
jle
popf
pop
scas
or
ljmp
nop
lcall
cmp
jb
cmpsl
push
mulb
aas
inc
mov
mov
fldl
push
xchg
sbb
dec
js
lock
mov
mov
and
mov
xchg
inc
mov
or
outsb
jle
test
and
xorb
loop
xchg
es
dec
cwtl
mov
dec
fwait
inc
rclb
and
pop
mov
sti
push
mov
xor
dec
ds
jbe
pop
and
jp
pop
stos
lcall
sbb
xchg
cltd
gs
pop
cmp
push
cmp
xor
aas
sbb
jg
xchg
repnz
cmpsb
push
sub
cli
arpl
dec
push
mov
popf
test
mov
xchg
lds
insl
mov
lock
cld
pop
jb
mov
sub
fcomps
sbb
lahf
aam
ds
sub
dec
imul
jp
leave
dec
ljmp
insb
cmp
hlt
xor
stc
sbb
dec
pop
dec
push
mov
mov
mov
icebp
insb
loope
fnstcw
clc
dec
dec
pop
sti
in
orb
jp
ss
or
add
inc
ljmp
xlat
ja
lret
xchg
jae
aad
pushf
jns
dec
and
mov
cmp
out
decl
addb
test
xchg
adcl
adc
and
sub
lock
out
mov
or
pop
dec
vcvtpd2dqy
aad
rorl
cmp
ret
mov
xor
push
pop
scas
push
dec
dec
pusha
lret
mov
in
or
clc
mov
add
push
pop
cmp
hlt
lds
jl
int
or
sub
pop
dec
dec
jp
cltd
loope
mov
pop
pop
mov
lods
lock
movsb
fs
push
mov
cmpsl
push
jb
lret
out
mov
and
jae
push
xor
push
push
iret
pop
lds
pop
jno
stc
inc
or
jle
inc
leave
inc
insl
sbb
xchg
mov
sbb
jne
and
mov
mov
shll
das
mov
lcall
les
xchg
dec
pop
xchg
mov
sbb
mov
in
sub
fs
cmp
stc
movsb
frstor
movl
or
push
sbb
cmp
push
lea
sub
jp
or
adcb
inc
lcall
jp
or
fcmovnu
mov
ja
dec
push
and
hlt
inc
push
int3
jne
push
inc
idivb
fdivrs
and
jno
add
or
lcall
test
dec
adcl
and
dec
mov
xor
rolb
out
das
fbstp
dec
jmp
inc
sbb
lea
sbb
iret
dec
aad
push
mov
test
inc
cmp
jle
repz
aad
mov
xor
daa
inc
lds
into
or
push
mov
jno
jne
xchg
or
mov
decb
pushf
cld
adc
adc
dec
push
icebp
into
fistl
ja
int
ss
xchg
inc
jb
dec
pushf
push
jbe
and
in
shlb
xchg
push
pusha
push
xor
insl
ret
aad
dec
aam
jge
adc
cmp
es
pop
bound
xchg
push
inc
imul
push
js
js
jg
and
inc
add
addr16
adc
daa
ljmp
mov
push
pushf
adc
stos
and
or
add
xchg
outsb
push
pop
lods
pop
orb
or
push
loopne
pop
in
jp
into
push
xor
mov
and
add
ja
mov
xor
xchg
sub
dec
or
iret
js
mov
je
repz
xchg
pop
jo
iret
popa
jae
sub
rcrb
add
add
dec
xchg
cmp
dec
add
jecxz
je
mov
leave
iret
xchg
je
cli
sub
inc
dec
xor
in
push
sbb
sti
add
dec
jl
fistps
inc
in
or
aas
pop
cmp
sahf
xor
mov
loope
xor
fldt
sub
int3
shlb
sbb
sbb
mov
mov
adc
xor
push
cwtl
xorl
ror
mov
pushf
jle
fldz
js
sar
ret
icebp
ds
mov
lret
dec
or
ror
mov
pop
push
in
cmp
sub
in
pop
or
mov
dec
push
inc
mov
into
push
sbb
or
sar
mov
sub
test
xor
xor
jnp
pop
xchg
or
inc
jns
push
sbb
repz
xchg
aaa
inc
pop
inc
aad
cmc
ret
xor
test
and
cmp
repz
sub
insb
gs
xchg
jl
pushf
jmp
cli
push
hlt
fs
ret
fstpt
cld
lahf
sbb
or
push
fldt
in
loope
scas
jmp
lret
xchg
mov
jp
fldenv
fsubrs
loopne
dec
add
out
loopne
pop
or
jns
scas
imul
lret
xchg
pop
mov
xchg
or
jp
div
inc
pusha
fsubl
out
lock
adc
xor
outsl
cmpsb
jo
jl
test
jle
jmp
ret
pop
cmp
cmp
xor
out
sti
test
cs
outsl
lds
jge
inc
or
inc
hlt
sub
into
jbe
jmp
in
mov
push
push
mov
rcll
and
sbb
dec
mov
insb
nop
or
ret
cld
sbb
sbb
test
sbb
adc
shll
sbb
test
pop
ret
jne
mov
imulb
mov
popf
adc
test
adc
out
pop
ret
out
sub
cmp
stc
fcomps
jnp
mov
loopne
or
dec
pop
or
pop
das
mov
push
mov
mov
inc
testl
xor
pop
inc
aam
in
inc
inc
fwait
xlat
lods
cli
dec
mov
jne
fsts
sub
repz
dec
or
inc
std
pop
xchg
cmpsl
inc
es
xchg
aas
inc
cmp
addr16
xor
je
and
jbe
ja
leave
jbe
mov
test
addb
mov
test
lret
mov
pop
push
mov
mov
mov
imul
jp
jno
mov
clc
jae
aas
lods
add
rorl
repz
outsl
jge
and
ljmp
xchg
adc
push
jecxz
inc
mov
imul
inc
pop
sbb
insl
mov
and
pop
and
ret
mov
or
ficoms
cli
mov
jp
es
mov
push
mov
test
pop
insb
sub
pop
pop
mov
xchg
fists
into
pop
outsb
cmp
dec
test
jge
jnp
inc
cmp
sbb
mov
std
fsubrl
scas
sbb
ret
jo
pop
jmp
dec
call
out
scas
out
push
cmp
dec
xor
xor
dec
hlt
outsl
cmpsl
pusha
dec
cmp
shll
mov
push
adc
dec
lcall
stos
inc
adc
mov
pusha
scas
mov
shll
jb
jge
or
mov
test
stos
bound
inc
test
xor
cmp
iret
sbb
dec
xchg
dec
dec
cs
flds
mov
cmp
in
fidivs
and
push
out
mov
iret
rorb
negl
sub
push
add
mov
xor
aad
sahf
ret
add
dec
xchg
mov
sbbb
xor
adc
mov
addb
test
push
hlt
loop
or
push
xor
mov
jne
stos
js
nop
repz
jnp
pop
push
mov
hlt
mov
mov
cmp
push
stc
lcall
in
adc
stos
iret
add
mov
repnz
mov
xchg
dec
lods
gs
dec
jae
int
std
out
pushf
add
sub
mov
stos
lret
fcmovnu
push
xor
leave
dec
sbb
mov
mov
mov
pop
push
inc
sbb
or
and
sbb
fisubrs
std
je
enter
xchg
test
cmp
cmp
pop
push
dec
bnd
mov
push
jnp
adc
loope
pop
xlat
fstpt
cmc
dec
aaa
gs
inc
sbb
jp
cmp
push
hlt
jns
and
push
aaa
addb
pop
dec
push
xchg
sbb
loopne
mov
inc
repnz
push
mov
shll
in
cmpsl
xchg
pusha
lret
mov
jno
add
subl
adc
inc
fdivrp
inc
jno
int3
ljmp
cmp
in
mov
cmp
dec
rcrl
fcmovu
push
pop
lret
mov
or
movnti
mov
xchg
out
imulb
push
aas
or
xchg
dec
push
nop
imul
mov
xor
mov
into
pop
sbb
dec
push
add
xchg
cmp
xor
mov
dec
fdiv
push
sbb
adc
loop
push
push
jp
mov
pop
mov
adc
inc
sahf
jl
and
jl
iret
inc
xchg
jne
loopne
sbb
into
in
in
and
shl
pushf
xchg
adc
or
fisubl
add
jmp
test
and
add
inc
mov
mov
imul
lds
adc
adc
cwtl
cmp
in
push
in
mov
arpl
pop
js
xchg
sub
mov
dec
movsb
mov
mov
addr16
add
pop
les
fsubl
ljmp
hlt
push
stos
addl
push
xchg
jo
mov
ret
imul
pop
ret
mov
fstps
insl
ds
xchg
pop
imul
fs
mov
sbb
sub
pop
cld
add
cli
and
fadd
inc
jmp
lods
jl
bound
xchg
dec
jecxz
or
dec
push
cmpsb
imul
mov
nop
mov
cmp
lods
sbb
test
add
jo
outsl
sub
or
aas
jecxz
cmpsb
lock
mov
rolb
scas
xchg
adc
cltd
int
mov
and
sbb
pop
push
std
rorb
mov
out
in
cmpsl
sub
xchg
imul
test
jne
push
mov
ret
cmp
cmp
repnz
popf
and
js
sbb
xor
loopne
mov
stc
mov
fdivrl
mov
mov
push
push
into
cmp
add
mov
jns
repz
or
hlt
jl
dec
sub
mov
or
xor
adc
out
jbe
push
test
loop
inc
shlb
or
cmp
sbb
sahf
je
cld
dec
lods
lret
or
sub
nop
out
mov
add
adc
inc
adc
arpl
xor
cmp
push
add
test
jg
push
push
adc
aas
jle
es
fwait
divb
scas
pop
or
shll
sbb
sbb
addb
jb
aas
mov
sbb
jg
mov
dec
mov
das
inc
sbbl
cmpsl
mov
and
sbb
mov
push
adc
adc
jmp
popa
loop
test
pop
xor
xchg
mov
inc
xchg
sbb
std
ds
and
andl
out
clc
push
ret
xor
fisttps
cmp
repz
aad
mov
outsl
dec
pop
fwait
lea
in
inc
rol
mov
xor
scas
push
in
add
mov
nop
jmp
add
add
mov
gs
mov
ret
mov
dec
fnclex
sbb
mov
lods
mov
fidivrs
testl
adc
jmp
sub
icebp
stos
sbb
sbb
inc
mov
or
inc
add
loope
pusha
les
faddl
nop
xchg
xlat
gs
gs
dec
ret
sahf
jns
mov
jp
sub
stc
aas
sub
aad
sti
and
dec
and
lret
xlat
ja
ljmp
adc
adc
imul
ss
xchg
cmp
inc
sbb
mov
loop
movsl
addr16
push
je
cwtl
ret
xor
mov
push
nop
jle
pop
dec
cmp
je
pop
fwait
out
mov
cmp
mov
or
and
dec
sahf
test
sub
pop
mov
test
xlat
cld
add
fsubl
xor
into
push
inc
dec
hlt
adcl
int3
jp
add
in
mov
dec
and
cmp
outsl
dec
mov
scas
mov
xchg
push
fs
jmp
out
roll
das
insb
cmpsb
adc
mov
push
sbb
addr16
xor
mov
jo
or
adc
jns
rcrl
ror
mov
push
inc
adc
add
mov
in
subl
xchg
addr16
cmc
repz
sarb
adc
into
jecxz
sahf
add
into
popa
aaa
inc
push
push
or
cmp
mov
outsb
xchg
inc
bound
test
lea
sbb
pop
in
ljmp
pop
adc
or
push
dec
jge
xchg
sbb
and
fistps
scas
ljmp
enter
in
daa
insl
dec
fwait
add
sbb
sbb
leave
pop
xor
pop
lock
inc
sub
test
std
stos
stc
and
cld
dec
cmp
and
mov
or
or
inc
mov
xor
and
mov
outsl
push
mov
sbb
movsb
sbb
or
out
scas
fxch
jo
mov
int3
insl
ljmp
mov
xchg
imul
repnz
xor
idivl
testb
into
fwait
cmp
mov
mov
mov
cs
inc
push
push
and
xlat
pop
insl
gs
in
inc
mov
pop
in
frstor
and
dec
dec
mov
and
dec
push
pop
push
dec
xchg
xchg
sahf
aaa
and
jnp
mov
popa
mov
mov
xchg
lcall
pop
stos
cmp
mov
add
mov
or
fstpl
fstp
or
mov
int
in
push
inc
mov
clc
ljmp
mov
loope
jnp
push
stos
iret
scas
sub
lods
ja
nop
ret
pop
addb
sub
stos
push
push
movsb
sub
xorl
sub
inc
adc
idivl
mov
lock
or
mov
pusha
jl
push
ss
sbb
inc
addb
loop
dec
lods
lret
inc
mov
pop
mov
cmp
xchg
mov
mov
inc
daa
mul
mov
add
test
push
adc
jne
cmp
ficoml
fimuls
mov
xor
mov
adc
jnp
or
inc
pop
insl
aaa
push
dec
dec
nop
mov
add
or
stos
pop
in
inc
popa
sbb
scas
idiv
push
lea
sbb
cmp
jg
movsb
push
sub
scas
xor
xor
idivl
and
mov
inc
jecxz
into
lret
add
mov
push
mov
mov
push
outsb
repz
pushf
xchg
or
repnz
cmp
or
xchg
push
test
insb
orl
cmp
int3
push
cmp
jl
loopne
xchg
sub
mov
sbb
mov
or
sub
cmp
dec
fucomp
adc
jle
out
call
daa
call
add
aam
icebp
push
adc
sub
pushf
mov
inc
push
sub
dec
sbb
lahf
push
mov
insb
out
push
sti
dec
loop
out
sbbb
scas
add
enter
loop
loope
mov
repz
pop
cld
fsts
out
out
lods
mov
fs
rcr
sub
ss
cs
std
mov
jbe
gs
push
and
int
or
popa
call
sahf
pusha
dec
shrl
dec
fsub
shll
push
dec
jnp
jo
xchg
mov
stos
dec
dec
das
repz
inc
das
scas
daa
or
cs
inc
pusha
ret
repz
lods
mov
shll
sar
jg
lods
xchg
dec
mov
mov
xchg
fldl
out
orb
ja
inc
addr16
rclb
cmp
jecxz
sbb
or
pusha
inc
shl
mov
or
aaa
mov
mov
mov
pop
cli
insl
inc
scas
push
aas
adc
or
jnp
push
gs
inc
filds
and
sbb
push
pop
int
push
fs
test
inc
dec
div
pop
aam
scas
subb
push
cmp
xlat
cmp
pusha
or
xor
mov
xor
out
mov
mov
pop
xchg
mov
inc
xchg
mov
xchg
xchg
inc
dec
fcompl
icebp
add
mov
shrb
pop
nop
jp
repz
leave
inc
dec
add
ja
cmpsl
inc
xor
cltd
repz
lret
cmpsb
and
jecxz
pop
in
xchg
mov
imul
aas
xor
or
adc
aaa
dec
pushf
cld
lods
cmp
ret
in
subb
xor
imul
and
addr16
enter
les
push
cmp
subl
jecxz
outsb
out
sbb
repnz
in
cmc
cli
mov
lock
call
inc
pop
fdivrl
cwtl
daa
aas
mov
jg
adc
gs
shrl
rorl
cmpsl
push
jo
mov
sub
push
aaa
dec
mov
gs
adc
or
jnp
stc
lea
add
xor
and
lahf
xor
leave
xor
xchg
jle
pusha
mov
sbb
call
mov
popf
sub
andl
mov
inc
in
fidivs
mov
subb
inc
in
jge
test
adc
mov
scas
iret
sbb
xchg
fs
lret
jno
stc
je
orb
fists
mov
nop
rorb
mov
mov
sahf
sti
sub
sub
fcoms
shrl
sub
mov
icebp
xor
add
pop
aam
popa
int3
in
mov
std
decb
xlat
jae
push
out
clc
int3
hlt
push
jns
jne
scas
jmp
mov
adc
rol
pop
sub
sub
movsb
fs
mov
xor
aaa
mov
shll
sbb
adc
mov
out
repnz
xchg
sahf
xchg
es
pop
sbb
lock
mov
push
sbb
ret
test
fmuls
inc
das
pushf
stos
lods
sarb
mov
fmuls
aas
sub
jle
shrb
mov
lods
dec
xchg
out
sbb
gs
imul
or
test
cmc
jmp
cmc
push
dec
je
add
and
sub
xor
sub
rolb
pushf
push
movsb
xchg
iret
sbb
cs
xchg
je
enter
add
xor
jl
std
add
xchg
xor
xchg
icebp
sub
movsb
cmp
jbe
iret
outsb
dec
jo
sbb
xchg
icebp
sti
sub
add
rcll
in
data16
out
push
and
es
rolb
add
jae
pop
mov
mov
mov
jg
rol
pop
adc
cmp
fmulp
mov
push
int3
addl
icebp
dec
push
pushf
mov
setns
dec
hlt
ret
arpl
test
jnp
cmp
sbb
jne
iret
add
cmp
dec
add
lahf
fdivrs
push
repz
push
out
sub
xchg
lea
inc
xor
in
pop
aaa
loope
enter
xor
leave
and
in
xchg
test
or
inc
faddl
cmp
inc
or
pop
dec
adc
mov
push
addl
je
ret
sub
ljmp
jns
aam
out
mov
mov
mov
mov
es
dec
jo
mov
jp
dec
xchg
push
roll
aaa
push
repz
jg
mov
daa
enter
xchg
adc
fwait
dec
sub
jns
cli
sub
sahf
cmp
cmp
aam
je
testl
movsb
push
lods
mov
repnz
mov
fdivrl
sub
mov
lock
cmp
shlb
lret
mov
mov
adc
adc
clc
pop
push
mov
xchg
lea
inc
lods
cmpsl
xchg
arpl
test
mov
outsl
sub
ss
clc
fstpl
cmp
pop
insl
shlb
bound
jge
xor
in
inc
jmp
dec
loope
je
insb
scas
mov
add
sbbb
mov
test
leave
mov
dec
imul
push
push
out
xchg
pusha
test
sbb
in
fistpl
movsl
inc
repz
mov
cmpsb
sbb
pop
jg
aas
jns
xor
add
or
sbb
jl
push
lods
ja
ds
lea
and
stos
mov
mov
sbb
pop
fsubrl
cmp
scas
out
sahf
mov
inc
retw
clc
scas
jnp
inc
add
ret
rcrb
mov
leave
mov
popf
js
in
mov
inc
xor
sub
push
negl
ds
xchg
inc
sub
xchg
scas
dec
adc
sbb
sbb
sbb
mov
lods
idivb
cld
sbb
test
insl
lods
lods
mov
sbb
mov
jge
movsb
xor
cmp
cmp
xchg
jbe
xor
inc
iret
mov
mov
add
pop
outsb
sbb
jns
repz
cmp
pop
cmp
sub
push
inc
fnstsw
pushf
adc
repnz
mov
pop
mov
std
cmp
and
dec
xor
testb
bound
inc
dec
cmpsb
mov
jnp
adc
push
popa
ffreep
aam
adc
fidivs
mov
pop
inc
mov
push
mov
imul
mov
in
scas
lock
xlat
add
out
jmp
aam
imul
mov
mov
and
or
xor
mov
mov
aam
adc
jo
in
les
sub
push
pop
pop
dec
mov
paddsw
sub
popa
cs
ficoml
lcall
popa
sarb
aas
sbb
cmp
push
xchg
cmp
sti
sub
call
jp
lods
into
fdivs
addl
and
pop
clc
push
push
cltd
pushf
push
icebp
or
les
aaa
cmp
inc
jns
lea
out
scas
lock
mov
jns
sbb
loope
into
ds
data16
addb
jl
scas
lahf
and
std
cmp
js
inc
loopne
mov
push
xchg
mov
cltd
icebp
push
adc
fcompl
dec
cmp
int3
adc
repnz
mov
test
adc
aad
test
es
sbb
dec
xchg
mov
inc
jb
push
movsl
mov
or
lods
pop
jge
jecxz
add
and
xchg
sar
xchg
lret
or
out
gs
xor
mov
lcall
lds
lock
add
imul
fcoms
or
decb
lds
lret
repnz
push
mov
inc
pop
push
and
loopne
pop
xchg
ljmp
movsl
call
adc
jb
add
fistpl
daa
out
int
dec
pop
popf
sub
mov
mov
jb
add
in
adc
test
enter
and
or
ljmp
jg
mov
xchg
mov
mov
setno
dec
cmp
mov
mov
popf
sbb
shlb
sbb
neg
cmpsl
jnp
out
add
inc
cmpsl
cwtl
loop
pusha
mov
stos
sub
xlat
lret
mov
pop
ja
sub
jge
out
addb
ja
mov
fildl
xor
int
mov
ret
xor
jp
imul
gs
pop
mov
roll
mov
xchg
mov
jmp
dec
and
movsb
push
or
sub
iret
mov
pop
ficompl
dec
pop
outsl
cltd
sbb
imul
cli
mov
insb
out
xchg
mov
cmpsl
ficoms
int
sbb
aad
int3
ljmp
mov
cli
or
jnp
dec
pop
divb
pop
xchg
imul
adc
push
enter
sbb
pop
lahf
mov
cmpsb
cld
mov
sub
and
lods
sbb
jle
jecxz
stos
xor
fdivrp
pushf
mul
jbe
fsub
pop
shrb
mov
sahf
sub
cwtl
xor
aas
mov
aaa
push
mov
loopne
negb
mov
mov
hlt
push
mov
inc
jmp
imul
sbb
push
loop
ficoms
xchg
xchg
adc
xchg
xchg
lahf
xchg
sub
cmp
fstps
cmp
repnz
out
cwtl
xlat
scas
or
daa
bound
call
xchg
pop
sub
insl
push
sti
mov
cld
arpl
iret
pusha
leave
fsubrl
je
sub
loop
movsb
xchg
pop
enter
fadds
add
adc
shrb
mov
fdivl
push
push
cld
jg
aad
movsb
test
nop
wrmsr
aaa
enter
scas
enter
and
sbb
sub
xchg
adc
out
mov
iret
test
out
mov
pop
dec
out
jmp
jns
and
cmpsb
xchg
cmpsl
mov
pop
mov
frstor
in
xor
inc
gs
std
and
mov
sbb
pop
pop
sub
xor
jae
je
inc
jl
movl
mov
jecxz
adc
cmp
lcall
cmp
out
testb
or
push
out
enter
xchg
cmp
in
xchg
iret
xor
ficompl
mov
mov
sub
push
testl
inc
movsl
addr16
jnp
mov
pop
into
imul
int3
jge
mov
adc
or
mov
fwait
push
mulb
push
dec
xchg
push
pushf
mov
insl
and
sbb
scas
sbb
daa
das
sbb
nop
mov
push
mov
fldt
inc
pop
and
mov
out
ret
lcall
fwait
mov
sbb
adc
jae
mov
clc
in
sbb
sub
mov
sub
adc
popf
jecxz,pn
mov
callw
mov
jg
push
xor
clc
jo
fldcw
xchg
lcall
or
popa
fldl
pop
or
in
scas
jecxz
xor
sub
dec
push
jl
jb
dec
aas
lds
xor
or
icebp
enter
in
or
jmp
pushf
jl
xor
test
out
in
mov
in
out
sub
icebp
ffreep
sarb
xchg
filds
popf
test
inc
dec
or
pop
sub
cmp
out
mov
call
sahf
and
lea
fidivrl
inc
pop
mov
cmp
mov
pusha
mov
movsb
cmpsl
shl
pop
xor
sub
xor
cltd
jbe
adc
mov
lock
dec
shll
dec
lret
xor
rorl
repz
inc
pusha
sarl
push
push
mov
shl
adc
ljmp
les
adc
dec
fucomip
cmc
or
cmpl
jmp
xor
or
inc
pop
shll
dec
xchg
scas
inc
add
mov
mov
push
loop
xchg
lods
icebp
fistpl
cmp
add
xchg
xchg
jmp
xchg
xor
or
movsb
mov
fisttps
push
jnp
push
imul
ljmp
jae
mov
and
pop
stos
call
adc
xor
sub
adc
bswap
mov
gs
mov
rcll
cmp
and
xor
xchg
sub
push
paddb
mov
jmp
pop
std
jge
jmp
mov
lret
pop
shll
or
inc
outsb
bnd
imul
xchg
lock
jo
cmp
push
ret
fwait
ret
xchg
in
pusha
iret
pushf
aad
cmp
add
jnp
cmpsb
fnstenv
stos
out
cld
add
repz
mov
push
in
shll
sub
xchg
stos
in
pop
lods
addb
scas
inc
aad
jecxz
dec
mov
mov
pop
lods
lods
push
in
fcom
sbb
xor
push
rol
push
daa
xor
cmp
rorl
sub
add
insl
ret
daa
push
shrl
xchg
or
add
pop
push
cmp
adc
dec
push
rol
test
and
sahf
push
insb
dec
in
xchg
xor
insl
iret
pop
nop
cmp
dec
icebp
mov
sti
pop
inc
loop
cmpb
fdivl
add
icebp
push
and
mov
cli
in
push
sbb
insb
inc
sub
sub
sahf
mov
sbb
es
mov
mov
leave
pminsw
cmp
mov
or
test
or
mov
jmp
scas
push
mov
adc
hlt
or
test
imul
fisubs
cmpsl
mov
push
xchg
mov
in
aam
popa
jecxz
test
add
je
dec
lds
push
sbb
das
xor
adc
iret
das
xchg
dec
incb
mov
icebp
les
lret
pop
les
enter
fsubs
pop
push
in
push
push
pop
mov
push
pop
pop
mov
push
imul
testb
daa
dec
cs
xchg
add
lea
cmc
addr16
clc
mov
xor
add
insl
popl
aam
mov
pushl
mov
push
xchg
insl
push
negl
mov
jb
js
sbb
push
cmc
mov
pusha
shrb
aaa
cltd
adc
add
xor
cmpsl
cli
pop
or
jo
insb
fwait
or
and
mov
or
ret
dec
addl
xor
mov
mov
sbb
mov
jp
data16
push
mov
xchg
push
jnp
scas
lcall
test
popa
or
push
sub
in
int
lret
inc
mov
mov
sub
stos
sti
dec
leave
jbe
adc
xor
xorl
test
xor
jecxz
lcall
jge
inc
jmp
push
jmp
push
fistps
cld
sbb
incb
sti
add
aas
sbb
negl
ret
or
jmp
jge
dec
add
outsb
jb
jg
mov
pop
movsb
mov
mov
mov
adc
mov
push
xchg
mov
imul
xchg
or
in
xlat
lea
add
cmpsb
data16
mull
mov
jge
enter
ljmp
sub
clc
stos
in
mov
push
int3
xorb
mov
xchg
xor
mov
clc
jo
sbb
ds
sbb
mov
stos
adc
push
cltd
in
sti
nop
mov
push
cld
inc
hlt
aam
sbb
adc
pop
push
enter
ja
in
mov
add
mov
iret
nop
mov
mov
loopew
mov
imul
ja
arpl
sbb
in
scas
lahf
aad
fsubs
int3
sahf
sarl
rcrb
push
jmp
xchg
fisubl
adc
lock
mov
mov
sti
xchg
test
lcall
out
inc
lea
test
shrl
mov
outsl
dec
outsb
mov
cmp
enter
or
sbb
cmp
xor
scas
jne
and
int
stos
mov
or
jae
out
mov
xchg
sub
and
inc
rclb
sub
or
pushf
pop
xchg
fcompl
dec
push
push
inc
fwait
call
out
pop
and
adc
int3
dec
jno
mov
cmp
imul
in
push
pop
mov
inc
sbb
sahf
pushf
divl
sub
jnp
mov
dec
push
jno
adc
and
sti
mov
pop
jns
jp
jl
stos
popa
xchg
and
fcoms
ja
ja
jmp
pop
aam
lret
pop
xchg
int
cld
aad
or
push
push
pusha
in
loop
outsl
or
jmp
cmpsb
cld
mov
insb
push
stc
fldt
inc
imul
arpl
jg
mov
cmpsl
mov
adc
clc
pop
enter
pop
testl
rorl
test
hlt
mov
fidivl
outsl
inc
push
mov
cli
stc
lret
inc
ret
arpl
icebp
mov
cmc
dec
aas
hlt
sub
mov
xor
mov
out
dec
arpl
mov
xor
ljmp
icebp
iret
lock
pusha
out
out
push
add
jnp
add
mov
jge
push
adc
sub
jns
mov
jns
popa
out
repz
test
sub
outsb
and
das
mov
stc
rcrb
bound
sub
sbb
test
xor
loope
addl
pop
gs
cwtl
fs
mov
out
and
aaa
std
lock
imul
sar
shll
push
or
mov
fbld
sub
call
cld
jmp
or
ficompl
adc
ret
or
nop
imul
imul
mov
pop
mov
inc
mov
jg
int3
sbb
mov
icebp
dec
inc
and
xchg
xchg
addb
insb
or
dec
cld
sti
mov
mov
int
jl
xor
inc
mov
mov
mov
mov
shlb
cmp
pusha
es
inc
push
es
sbb
les
insb
cmp
adc
pop
adc
rclb
mov
in
sbb
add
dec
push
cmp
lods
push
das
inc
das
ret
into
xor
fwait
add
mov
or
sbb
and
xchg
movsl
mov
mov
pop
add
inc
hlt
insl
out
or
out
mov
inc
pop
add
mov
dec
test
adc
test
mov
inc
pop
cmp
cmp
out
or
loope
subl
or
out
jno
rcrb
pop
dec
jo
aas
das
push
mov
dec
in
iret
xor
lret
cmp
jl
outsb
adc
sub
int3
lcall
cmp
lret
sbb
leave
and
sub
and
inc
movsb
jnp
int3
mov
hlt
push
dec
test
cltd
inc
loope
pop
scas
cmpsl
jge
and
orl
addb
mov
gs
call
fsubl
xor
sbb
pop
adc
or
push
das
dec
mov
push
in
lret
cltd
icebp
std
mov
lcall
lret
pop
hlt
aas
dec
xor
adc
sbb
pop
sbb
cwtl
cli
cmp
test
daa
or
push
pop
jns
pop
cld
fisubs
or
xchg
mov
xchg
push
pop
shrl
mov
aad
pmaddwd
insl
jb
loopne
loopne
dec
and
dec
test
add
loopne
dec
cmp
lret
into
cmpsb
mov
xor
dec
jae
jb
jne
mov
fld1
out
xor
pop
loop
push
sbb
sti
sbb
xchg
mov
sbb
xchg
loope
outsb
lea
aam
roll
fucom
icebp
and
rorl
frstor
inc
adc
lahf
xchg
and
mov
es
lahf
out
stos
add
bound
push
or
pop
push
rol
lret
aaa
imul
xchg
mov
aam
daa
adc
je
into
jns
cwtl
or
imul
aaa
inc
dec
push
add
lea
sub
cmp
sub
jle
icebp
xor
or
fsubrs
add
das
loope
cld
and
xlat
jns
jg
fnstsw
nop
shl
ljmp
jnp
xchg
mov
outsl
cmpsl
jle
daa
or
push
mov
movsl
test
mov
xchg
outsl
mov
enter
lahf
jge
jle
loop
xlat
mov
jno
dec
mov
inc
mov
adc
ja
lahf
jno
ljmp
jle,pt
ret
jae
cmpsl
das
adc
notb
scas
idiv
jl
adc
add
mov
loopne
add
sahf
sbb
cmp
daa
lret
xchg
adc
testl
test
adc
push
inc
pop
push
ret
je
inc
jp
xchg
mov
je
mov
sti
mov
push
jns
lods
or
or
adc
or
pop
imul
int
aam
push
orb
fidivl
dec
push
data16
mov
add
not
sub
ret
test
int
lods
fdivs
and
cmp
mov
jno
pop
out
adc
adc
xor
lret
mov
lods
pop
int3
and
out
int
mov
push
jnp
lock
xor
jns
mov
in
adc
nop
lret
imul
jmp
and
hlt
cmp
pop
orb
xchg
scas
mov
scas
xor
sub
add
jge
mov
je
cld
inc
jg
rcl
clc
xor
pop
daa
daa
push
or
andl
mov
outsb
mov
and
fucom
and
inc
lea
mov
sub
pop
xor
lods
sbb
jecxz
mov
lret
nop
adc
fsub
mov
adc
das
cmp
test
sbb
stos
ss
test
imul
cwtl
dec
jmp
push
push
mov
fldl
jnp
xchg
subl
int3
adc
xor
jns
cmp
mov
enter
pop
push
xchg
sti
mov
sarl
mov
xchg
es
popa
std
inc
mov
sbb
dec
pop
cltd
mov
jnp
stos
add
stos
jnp
mov
ss
js
sbb
push
pop
cli
test
pop
mov
mov
dec
sbb
int3
jge
mov
aas
mov
mov
mov
repz
ret
in
pop
jo
loop
es
xor
cwtl
rclb
out
in
jg
inc
xchg
inc
adc
pop
or
sub
cmc
mov
ffreep
fstpl
and
xchg
shll
iret
xchg
data16
sti
shlb
test
add
sbb
inc
inc
jnp
adcb
mov
adc
mov
cmp
xor
adc
adc
dec
nop
enter
pop
mov
fs
out
adc
mov
xor
and
sbb
aad
ret
or
lock
pusha
lods
mov
push
popf
inc
mov
or
pop
aad
in
orps
xchg
cltd
or
fcmovb
stos
ds
fwait
ret
movsb
jo
sub
add
mov
pop
sub
cs
sub
ficoms
sub
call
stos
xchg
push
ret
repz
pop
jne
and
mov
jl
aam
int
mov
shrl
jnp
jl
decl
adc
jns
mov
jp
adc
push
lret
fisubl
mov
inc
jmp
cmc
push
jno
mov
cld
or
loop
jl
ljmp
icebp
sbb
lret
adc
cltd
pop
inc
jne
sub
pop
add
fdivrs
jmp
std
push
hlt
jg
pop
push
xchg
mov
cmc
loop
sub
stos
out
jae
daa
aad
inc
lock
lods
or
mov
lods
mov
test
out
mov
push
jp
hlt
pop
mov
xlat
int3
das
out
nop
test
mov
clc
fcmovnb
mov
pop
test
enter
cmp
inc
adc
aam
imul
push
push
sbb
add
in
repz
es
add
dec
push
cmp
mov
imul
clc
jl
sahf
inc
lds
mov
cmp
xchg
push
jns
insb
ss
clc
mov
sbb
ret
xchg
add
and
xor
xor
test
adc
je
repnz
js
lea
adc
dec
cmp
push
lea
repz
jle
test
cmp
add
mov
jp
dec
add
cmp
and
sbb
sub
out
pushf
add
jno
add
pop
scas
and
pop
pop
mov
imull
mov
inc
es
movsl
mov
sqrtps
cmpsl
jg
fsubrl
dec
test
shlb
mov
xor
adc
or
jle
popf
lea
je
cmp
mov
xchg
adc
or
jmp
push
lds
sbb
and
repnz
aad
xor
add
or
jmp
xor
xor
rcrl
sbb
movsb
cmp
mov
aaa
pop
push
test
adc
in
mov
cltd
xchg
divl
push
lahf
push
sub
enter
mov
cli
leave
and
fildl
aaa
push
call
lahf
push
rol
sbb
pop
js
test
jmp
ficoms
jmp
mov
ret
dec
mov
cld
mov
aad
repnz
adc
ret
stc
loope
adc
mov
pop
pop
repz
lods
mov
dec
aas
cld
outsb
and
push
pop
cld
lret
out
xor
movsl
sbb
fs
rcrb
sub
js
and
inc
into
jp
cmp
jmp
stos
xchg
pop
sbb
mov
push
jmp
loope
xor
movsb
clc
and
shll
pop
pop
mov
sbbb
in
loop
mov
aaa
ret
int
dec
xor
std
xchg
lret
gs
sub
imul
adc
mov
imul
adc
or
jg
or
sub
mov
ljmp
lea
dec
push
std
adc
imul
test
xchg
fs
leave
cmpsl
aas
push
jo
and
push
lods
adc
xor
lahf
add
jno
sbb
adc
ss
add
out
mov
aaa
stos
ret
test
xorb
int3
sub
out
fcomi
aam
data16
pop
in
sub
scas
cmp
cmpsb
inc
lock
cmp
pop
and
outsb
rclb
test
jg
dec
cwtl
int3
loop
inc
and
data16
or
shl
icebp
inc
push
test
pusha
popa
aas
mov
fcomip
sbb
xchg
sbb
pop
mov
xlat
ja
out
mov
jmp
inc
in
xor
mov
lcall
add
add
mov
mov
outsb
scas
pop
ja
sub
dec
push
xlat
loop
cmpsb
ss
pop
xchg
dec
cmpsb
or
jb
sarl
xlat
aad
ds
mov
js
xchg
sub
mov
push
test
or
cmc
or
cmp
lock
jne
push
jae
mulb
je
and
in
push
cltd
xlat
popf
sbbl
icebp
adc
call
dec
or
cmpsl
inc
push
aas
xchg
sahf
outsb
es
cmp
arpl
nop
cmp
cltd
xchg
data16
mov
in
jae
fidivl
int
aam
inc
push
jecxz
and
push
inc
lods
jl
out
cmp
mov
add
hlt
xor
xchg
test
push
loopne
cmc
push
shll
sbb
std
pop
out
cmpb
pop
sbb
mov
cmpsb
inc
gs
test
sti
fdivr
lret
loope
inc
cmp
lret
inc
xchg
push
leave
inc
mov
loop
ret
or
jno
mov
push
jge
sub
fcompl
aam
sarb
imul
or
ficoms
call
push
movsl
into
or
dec
or
inc
sbb
add
pop
scas
or
aam
imul
xchg
test
dec
ror
lcall
xor
fst
scas
xor
sub
inc
in
ss
inc
mov
fwait
add
fiadds
out
insb
sbb
dec
add
hlt
jnp
dec
xchg
jno
adc
inc
imul
push
inc
add
xor
mov
int
lret
call
push
js
outsl
ds
and
push
iret
ljmp
stos
pop
jb
jle
add
pop
lahf
cmp
mov
scas
pop
movb
test
test
add
dec
dec
push
dec
mov
leave
in
jg
xchg
jge
fcmovnu
lds
push
stos
pop
cmp
dec
cvtdq2ps
xchg
add
mov
xchg
mov
xchg
or
cmc
ljmp
test
lods
dec
mov
fdivl
and
jae
cmpsb
adc
xchg
inc
jg
pop
mov
and
jle
push
insb
gs
stc
lret
push
jg
mov
jne
loop
and
popf
test
faddl
out
inc
sbb
xchg
pop
push
pushf
or
adc
or
rorl
aam
pop
xchg
into
popa
shlb
push
nop
jle
dec
xchg
call
push
sbb
sub
stc
mov
repnz
jmp
sub
or
lret
ss
insl
pop
inc
sti
or
xor
inc
pop
and
pop
mov
lcall
cmp
aaa
repz
fsubr
adc
mov
sti
mov
lods
xchg
mov
mov
xchg
push
jbe
pop
jp
call
or
daa
mov
stos
sbbl
jmp
xor
push
addb
jns
jb
add
dec
lret
pusha
loopne
es
and
ficomps
adc
ror
pop
xchg
test
xor
or
jnp
nop
insl
or
aaa
std
cmp
mov
adc
scas
push
cmpsl
insl
jne
push
sbb
cld
das
or
dec
pop
ja
int3
mov
adc
jmp
mov
sarl
pop
ret
ret
outsl
shll
ds
push
daa
jge
xchg
adc
pop
pop
sub
inc
in
flds
adc
xchg
popa
sub
push
dec
xorb
mov
mov
subb
mov
orl
mov
push
pop
and
rolb
test
popf
das
lds
aaa
adc
lea
mov
and
aam
pop
cld
xor
and
pop
dec
notb
xchg
xchg
test
in
cmp
jbe
loope
adc
sbb
cmp
dec
inc
cwtl
das
cmc
mov
jle
mov
dec
jns
pop
in
cli
subl
sbb
loopne
mov
scas
int
or
or
jb
stos
and
and
sbb
jne
mov
jne
test
divl
jmp
subl
push
inc
out
cmpb
and
ss
add
call
sbb
adc
sbbl
mov
fstl
scas
push
insl
push
sub
cmc
mov
leave
mov
mov
cmp
jmp
mov
push
inc
stos
pop
hlt
int
pop
shll
jge
pushf
in
jo
mov
jecxz
scas
pop
inc
sarl
sbb
aas
fdiv
insb
push
out
scas
in
push
jbe
sbb
sbbb
shll
mov
aaa
add
cmp
test
mov
sbb
or
and
test
js
jl
mov
loopne
xchg
clc
inc
ficoml
pop
repnz
mov
test
push
push
cmpl
adc
add
iret
xorl
std
fistpll
je
fdivl
adc
mov
data16
push
loop
es
fildll
out
call
xor
clc
mov
lcall
subl
or
lea
cmp
or
mov
and
xor
lcall
add
out
in
xor
decb
leave
or
mov
imul
lret
mov
xchg
cs
dec
ljmp
test
std
dec
popa
arpl
cwtl
cld
jp
mov
mov
int3
cmpsb
dec
pop
sbb
stos
test
arpl
aas
and
and
je
and
cld
sbb
xlat
lds
stc
iret
sbb
or
sbb
addr16
inc
int3
sbb
mov
rcl
pop
movsb
inc
mov
clc
int
fistl
pusha
and
addr16
push
dec
inc
push
mov
cmpsl
xor
push
inc
push
jo
ljmp
sbb
pop
inc
cwtl
mov
pop
jb
xor
fcomps
aaa
cmp
rolb
lcall
cmp
jns
cmp
push
daa
lret
decb
dec
in
hlt
mov
mov
sbb
cmp
loop
push
imull
out
pop
shll
mov
ja
scas
mov
call
add
mov
push
std
jp
gs
pop
les
push
out
cmpb
sbb
xlat
pop
test
mov
pop
mov
cs
mov
stos
lods
rclb
lret
add
pop
or
dec
push
or
out
das
fstp
push
mov
mov
or
loopne
testb
incl
je
pop
pop
leave
inc
int3
mov
lods
shrb
jle
les
xor
daa
add
push
int
jne
mov
jecxz
int3
cmp
cmp
add
andl
adc
mov
in
sbb
sti
stos
xor
jp
iret
jecxz
aam
sbb
sbb
jecxz
in
clc
fisubl
dec
mov
cmp
xlat
and
cmp
into
pop
push
int3
std
fs
mov
dec
mov
dec
sub
js
aad
lcall
ja
xchg
mov
or
aas
aaa
in
inc
xchg
adc
jecxz
call
xorb
and
push
es
push
jb
aam
xchg
push
test
mov
and
sbb
mov
scas
in
mov
enter
or
mov
pop
pop
fmull
jle
jo
dec
inc
mov
iret
fsubl
call
mov
out
jae
inc
mov
push
mov
pop
out
outsl
jo
fwait
cltd
cmp
mov
xchg
mov
test
sub
fistpl
or
mov
and
test
lds
sub
pusha
out
mov
push
in
and
aam
inc
fisubs
jp
cld
xchg
and
mov
mov
mov
xor
pushf
inc
and
stc
dec
imul
mov
lret
not
out
scas
shll
push
jns
or
data16
dec
sbb
xchg
aas
sbb
in
fs
add
mov
andl
fidivs
lret
stc
pop
test
loop
ss
xor
pop
lods
or
jnp
and
add
mov
fwait
jg
xchg
add
gs
clc
cmp
adc
loope
andb
push
sub
push
and
rcll
inc
iret
stos
mov
mov
dec
das
xchg
cmp
jb
rclb
sbb
inc
out
aad
cmp
or
push
frstor
sbb
in
lret
std
cmp
andb
mov
lods
jp
pop
xor
mov
pop
sti
add
mov
adc
adc
push
and
sub
jbe
out
mov
inc
pop
mov
mov
mov
push
hlt
nop
adc
testb
enter
movsl
and
test
fs
xor
inc
aas
cmp
scas
sbb
push
mov
mov
nop
dec
mov
aas
es
rcrb
cwtl
xor
daa
leave
dec
scas
sbb
out
jnp
fisttps
mov
xor
mov
cld
mov
pop
ret
mov
pop
js
cmpsb
adc
sub
push
scas
das
jecxz
mov
lret
cmp
pusha
jecxz
push
or
mov
jae
xchg
cmpsl
call
mov
aad
lods
out
ret
mov
loope
mov
int
fdivrs
stos
mov
jnp,pn
mov
cmpsl
inc
test
inc
push
movsb
dec
or
xor
mov
add
in
cwtl
inc
in
pop
sbb
mov
int3
cmp
push
sbb
jae
inc
cwtl
aam
cwtl
daa
dec
sub
nop
add
jb
repz
or
lds
sbb
popl
xlat
xchg
daa
sbb
sbb
cmp
mov
scas
mov
xor
imul
xor
xchg
leave
sub
mov
scas
mov
pop
inc
mov
lcall
rclb
dec
test
cld
iret
stc
jmp
cmp
out
rcl
inc
test
jmp
ja
out
mov
add
sbbb
mov
push
sub
cmp
orb
and
dec
lahf
mov
mov
mov
inc
test
xor
outsl
xchg
out
inc
mov
popa
fwait
popf
xchg
push
call
jnp
insl
in
in
push
push
cs
stos
adc
sbb
and
push
or
xchg
fnstsw
or
mov
mov
lea
add
jo
sbb
sub
lret
leave
cld
decl
mov
add
lock
push
std
cmp
pushf
pushf
adc
lcall
flds
jp
mov
sub
cmp
aad
sti
sbbb
rcll
push
cltd
addl
xchg
push
cmc
pop
push
fnstcw
xor
jae
mov
and
sub
mov
lret
cmpsb
mov
cmp
shrb
sbb
or
jo
sbb
mov
fdivrp
xchg
push
outsb
or
jl
or
add
ljmp
dec
mov
ds
sbb
cld
rorb
pop
mov
xchg
and
xor
mov
hlt
add
stos
jno
sub
divb
fcmovnbe
dec
push
mov
or
bound
stc
push
lea
xchg
data16
out
imul
jge
or
push
in
jl
mov
pop
test
jo
adc
xchg
js
mov
mov
pusha
and
fistpll
ss
xor
cwtl
push
inc
mov
sarb
repnz
in
mov
dec
out
jne
stos
push
out
mov
cmp
fstpt
cmp
jle
out
inc
mov
scas
out
mov
xor
int
mov
mov
sbb
jns
push
xor
or
sub
and
dec
loop
and
sub
inc
pop
sbb
xor
out
adc
push
pop
jno
ss
scas
out
std
insl
push
xchg
cmp
jmp
mov
test
sub
jb
mov
bound
cmp
pop
mov
jle
lods
push
rol
hlt
stos
inc
push
mov
mov
mov
sub
mov
in
mov
scas
dec
push
and
arpl
mov
popf
es
jno
push
ret
and
sarb
sub
xchg
cmp
sbb
testb
fstps
add
xchg
fisubrl
cmp
fstps
ret
mov
jne
std
and
sti
lods
push
jecxz
subl
xchg
sbb
pop
daa
cmpb
jecxz
mov
repnz
out
inc
sahf
cld
adc
or
aam
clc
in
cmc
cmp
movsb
xchg
mov
ret
roll
imulb
hlt
mov
in
jmp
jno
or
and
fimull
pop
lcall
dec
aam
cwtl
xor
subl
mov
stc
lcall
mov
mov
lods
or
pusha
scas
xchg
dec
ror
stc
sub
jge
xor
pop
sub
pop
push
das
xor
jmp
sahf
pop
sti
out
es
iret
mov
inc
cmp
mov
stos
sbb
dec
mov
test
int3
popa
out
loope
push
xor
test
mov
fdivrl
adc
cmp
push
insl
adc
sub
dec
lahf
jbe
sbb
fiadds
lahf
arpl
dec
fiadds
ja
push
ss
out
or
bswap
ret
daa
movsl
jg
test
in
pop
pop
cmp
mov
pop
pop
lods
lret
scas
cmp
test
loopne
ja
xor
fisubrl
stos
outsl
add
popf
xor
jno
inc
and
das
sub
fs
loopne
mov
sub
dec
addr16
jne
out
sub
hlt
adc
jne
popa
cmc
inc
push
test
mov
mov
fildll
in
es
jp
adc
fs
xor
in
jb
xchg
pusha
stos
adc
into
out
lahf
in
call
inc
jne
pop
addr16
inc
repnz
dec
add
cmp
push
jb
cmp
mov
or
mov
lret
pop
int
push
cmpsl
pop
pusha
cs
jge
mov
cmp
or
lahf
sahf
cmp
xor
or
jne
es
sbb
mov
mov
shl
fsubl
orb
pop
sbb
aad
pop
fisubrs
roll
mov
enter
mov
xchg
addr16
dec
pop
push
pushf
inc
sub
insb
pop
repz
mov
shll
cmp
cltd
fcmovbe
jmp
imul
stos
add
je
clc
test
shlb
enter
and
xor
stc
push
in
mov
add
fisttps
in
std
push
call
dec
pop
and
ror
ja
fwait
mov
mov
push
outsl
mov
pop
xor
xchg
pop
test
enter
mov
js
ljmp
xor
sub
jbe
mov
cmp
insl
mov
cmp
insb
and
repnz
leave
lock
incl
adc
inc
add
fiadds
imul
icebp
idivb
mov
int
cmp
inc
fs
sub
mov
xchg
test
mov
and
mov
inc
sbb
adc
mov
mov
fdivrs
fadds
push
mov
pusha
or
dec
mov
and
xor
cmp
clc
adc
jo
sbb
xor
out
pop
dec
fnstcw
mov
in
push
and
xchg
shl
xor
insb
dec
push
dec
or
pop
shrl
es
aad
insb
mov
subl
out
cltd
jg
jae
add
xchg
or
int
cmp
push
mov
mov
xor
iret
iret
movsl
aam
or
shr
mov
cmp
cmpsb
xor
mov
pop
cmp
test
insb
mov
jl
xor
adc
sub
das
xor
pop
daa
out
adc
ds
ret
cltd
dec
inc
cwtl
call
jge
pop
cwtl
ficompl
inc
sarb
js
icebp
xchg
ljmp
stos
rcr
fucom
push
xchg
xor
and
int3
pop
add
aad
mov
pushf
out
cmp
std
rorb
repz
and
adc
cmpsb
mov
hlt
ds
inc
xchg
out
mov
scas
stos
or
scas
xchg
mov
jae
test
ds
jns
jecxz
les
inc
stos
add
push
xchg
std
imul
push
xchg
and
lea
xor
push
xchg
add
mov
mov
pop
popa
cmp
jp
push
inc
push
std
xchg
decl
or
jmp
mov
adc
scas
cmp
jnp
stos
jmp
sbb
mov
in
dec
push
mov
or
inc
inc
bound
adc
cmp
nop
cmpsl
pop
mov
scas
add
punpcklwd
lea
and
sahf
dec
lea
ret
popf
inc
push
fidivrl
sbb
iret
jo
lods
xchg
xchg
pop
inc
repnz
jp
outsb
enter
jne
pusha
lds
push
int3
pop
push
pop
imull
or
pop
fildl
jbe
dec
mov
mov
fcompl
lds
iret
inc
push
int
imul
lret
fwait
add
inc
stc
stos
aas
mov
in
fimull
xchg
lods
inc
pop
jne
push
in
rcr
fdivrl
fcomps
mov
stos
out
or
pop
lret
mov
and
mov
int3
or
mov
pop
mov
sbb
xchg
retw
cli
insb
pop
adc
lods
mov
dec
gs
xchg
mov
lods
push
nop
xchg
and
stc
mov
add
jle
pusha
sub
ss
mov
xor
jne
dec
sbb
movsl
imul
jmp
push
bswap
inc
sub
sub
add
imul
out
neg
gs
cwtl
scas
decl
adc
add
fs
ljmp
jns
dec
addr16
sub
mov
inc
loop
flds
inc
jge
int3
xchg
add
std
adc
pusha
sahf
mov
test
dec
xchg
sbb
and
iret
push
cmp
cmp
inc
fs
shlb
mov
jo
mov
popa
sub
sbb
cmpsb
sub
arpl
or
dec
enter
dec
fstpl
jb
jns
lock
xchg
pop
mov
adc
loopne
shll
aaa
add
fstl
dec
aam
sbb
inc
jmp
mov
andl
push
push
push
sub
je
ret
inc
in
int
mov
add
xchg
pusha
nop
imul
pop
es
and
inc
push
dec
pop
enter
xor
sub
sbb
xor
jne
call
xor
mov
movsb
xchg
mov
inc
add
sbb
cmp
or
push
roll
xchg
lahf
xchg
or
pop
repnz
sbbl
test
jp
fnsave
cmp
je
mov
imul
inc
leave
mov
fldenv
dec
test
out
jp
lods
cmp
lea
loopne
xor
sub
inc
test
cmpsb
imul
mov
add
jo
push
movsl
aas
jno
sbb
cmp
cmp
fwait
jne
push
and
push
dec
jmp
xchg
add
jge
out
dec
sbb
clc
popa
cmp
out
push
fadd
dec
and
out
repz
jmp
push
in
addr16
pop
scas
lods
inc
jge
popf
in
mov
outsl
mov
mov
aas
xor
or
and
cltd
loopne
outsb
out
jnp
pop
jmp
xor
mov
xchg
ja
nop
fisttpl
js
das
nop
or
in
pop
fcoml
or
dec
movsb
xchg
out
sub
scas
dec
test
rolb
pop
jp
frstor
mov
inc
pop
cmpsl
stc
dec
cmp
stos
shr
push
lret
gs
enter
dec
jo
jge
filds
add
sub
sbb
cld
lahf
sti
jae
imul
inc
xor
push
out
cs
sbb
shll
cmpsl
mov
cmp
mov
jl
das
into
lcall
xchg
xorl
dec
shl
adc
popa
xchg
jbe
pop
sub
inc
and
adc
add
test
cmpsl
fisubrl
inc
lods
ss
and
sti
dec
mov
imul
pop
mov
jp
xchg
or
fimuls
dec
popf
pop
mov
mov
xchg
jae
pop
push
aad
push
adcb
outsb
push
xchg
mov
jae
repz
mov
cmpsb
xchg
sarl
fdivp
push
pop
inc
rolb
push
jge
ljmp
and
lea
adc
into
or
and
rorb
addr16
jg
or
lock
aas
insl
mov
dec
gs
xchg
stc
test
pop
and
inc
stc
mov
jecxz
rcll
jg
cld
sbb
xchg
sbb
out
testl
arpl
push
ss
xchg
mov
xorl
dec
xchg
sbb
jns
mov
imul
sub
pop
sub
out
dec
sub
scas
pop
push
jle
movsb
inc
cmp
leave
mov
mov
jg
xor
int3
stos
jmp
push
repnz
dec
popl
movsb
cld
lahf
sbb
or
fpatan
into
leave
fldl
adc
inc
imul
xchg
push
mov
in
xchg
es
test
sbb
xchg
cmpsb
aad
shll
add
ret
nop
insb
out
dec
cmp
pop
jp
xchg
sub
sbb
push
add
and
mov
iret
int3
dec
mov
ja
std
xor
xor
aas
mov
dec
into
mov
push
repz
or
lret
andb
dec
mov
and
or
xchg
pop
out
insl
mov
xor
push
or
or
test
xchg
sub
push
insb
aad
sbb
mov
cmc
scas
roll
mov
add
jns
lds
insl
cmpsl
inc
in
dec
or
add
adc
or
aam
cmp
or
ljmp
cld
je
jg
das
mov
test
mov
lahf
mov
mov
dec
lds
dec
ss
fistpl
push
cwtl
les
jae
or
push
or
idivb
fistps
fisubs
push
cmp
arpl
xor
jmp
movsl
jbe
movsl
in
push
pop
mov
mov
aad
mov
lahf
sbb
fs
xchg
aad
sbb
cwtl
fnstcw
movsl
dec
xchg
mov
jb
cmpxchg
xor
add
inc
jnp
lahf
mov
nopl
dec
mov
mov
mov
sub
mov
mov
nop
testl
shlb
add
lea
ret
ss
mov
je
out
cli
jl
es
out
xchg
add
cltd
nop
push
jae
adc
push
sbb
mov
cmp
jns
ljmp
mov
xchg
jge
inc
out
adc
jb
add
add
pop
arpl
stos
test
pop
pshufw
movsb
sub
add
mov
lock
mov
cli
push
lea
mov
mov
sbb
inc
sbb
pop
xchg
mov
mov
mov
sarl
cmc
clc
ja
lock
xchg
add
inc
dec
xor
push
xlat
push
cld
out
mull
aaa
popf
pop
gs
jecxz
daa
sbb
adc
adcl
ror
dec
push
fcomps
cmp
push
sbb
int3
push
adc
sbb
insb
stos
test
xchg
addb
push
or
adcb
imulb
push
scas
sbb
adc
out
scas
sub
ret
stc
mov
out
mov
popa
add
pushf
and
pusha
test
mov
out
ljmp
inc
inc
lret
lcall
cmp
xchg
sub
rorl
lock
fsub
pushf
iret
sbb
cmp
xchg
and
fidivs
ds
adc
xor
xchg
jnp
adc
sub
das
mov
xor
aad
sbbl
mov
lret
sbb
mov
das
inc
lods
out
cmp
xchg
inc
outsb
insb
xor
cmc
repnz
push
sbb
mov
ret
pushf
jbe
lea
push
xchg
lret
fmuls
dec
ds
xchg
insb
popf
lcall
add
ret
mull
pusha
or
mov
sub
lods
pop
sti
add
push
xchg
clc
cmpsl
gs
push
aas
faddl
push
insb
and
dec
out
and
mov
or
enter
xor
cmpsb
pop
out
test
or
sub
loop
pushf
out
add
or
xor
dec
push
adc
pop
sub
pusha
jmp
neg
idivl
sahf
push
pushf
cwtl
out
sbb
shll
popf
and
and
jne
inc
push
pop
into
xor
xchg
xor
sub
scas
das
add
mov
js
nop
push
or
jbe
sub
mov
mov
lret
sub
mov
mov
mov
mov
jge
test
dec
inc
mov
jae
fwait
xchg
mov
vmovlps
mov
xor
mov
icebp
push
aas
cmp
es
xchg
and
lcall
stc
enter
sbb
nop
cmp
or
adc
mov
mov
fs
push
sub
cli
nop
mov
push
pusha
add
cmpsb
push
lods
mov
out
lods
xor
sti
cmp
push
repnz
push
jl
rcrl
aad
lahf
push
add
sahf
or
cmp
das
ror
jne
fiaddl
mov
add
lahf
push
add
jnp
enter
cmp
xor
mov
addl
fistpll
aas
roll
fstl
pop
pop
dec
js
dec
cmpsb
jg
nop
insl
pop
scas
lret
outsb
pop
xlat
add
mov
mov
inc
jbe
sub
or
mov
in
cmp
loope
insb
ret
pop
sbb
mov
dec
and
push
mov
shr
lret
roll
addb
adc
jl
mov
outsl
sti
inc
add
or
cltd
test
addr16
shlb
cmp
in
les
pop
jns
sarl
in
mov
subl
fs
push
xor
mov
jge
insl
dec
stc
icebp
test
xchg
cwtl
cmp
push
jno
jae
dec
shll
test
lahf
out
mov
shl
adc
bound
shlb
lock
push
fcmovu
out
and
loop
mov
js
rolb
jno
loop
loope
pop
sub
pop
or
sbb
cmp
xchg
inc
mov
lahf
sti
lock
cmpb
sub
mov
loop
loop
mov
jb
enter
scas
adc
sub
sub
popf
or
ja
rol
int3
in
popf
push
pop
inc
sub
arpl
and
push
cwtl
sbb
out
adc
cli
xlat
sbb
cmpsl
loopne
in
sarl
sub
xor
xchg
cmp
shl
inc
xchg
mov
jno
pop
insb
mov
cmp
stos
adc
mov
loop
setns
into
dec
leave
push
lahf
clc
xchg
std
mov
sbb
cmc
stos
dec
sbbb
dec
xor
cltd
iret
jg
repz
ss
xchg
js
jl
test
pop
das
cmp
mov
data16
push
jae
in
push
int3
addr16
pushf
mov
fidivrl
movsb
xchg
mov
sub
out
xor
fsts
sbbb
push
jbe
mov
dec
dec
out
fucomp
out
lods
jge
inc
jbe
testl
out
sbb
ret
popa
xor
fs
cmc
cltd
imul
in
outsb
leave
mov
push
dec
cmp
out
push
outsl
add
push
pop
jbe
sbb
mov
arpl
movsl
pop
and
lcall
jmp
mov
cwtl
loope
insl
sbb
push
cmp
xor
outsl
movb
out
ret
in
dec
xchg
iret
push
or
sbb
bound
cld
sbb
sbb
sbb
or
xchg
icebp
ja
or
ds
je
add
mov
add
ljmp
jmp
mov
xchg
cmpsl
and
mov
fildll
push
mov
mov
mov
push
das
pusha
repz
adc
mov
or
sahf
adc
pop
add
ret
cmpsl
sbb
sub
mov
mov
into
hlt
mov
daa
in
dec
lods
lahf
pop
xchg
lahf
test
add
stos
pop
out
ret
mov
out
push
push
cmp
jb
mov
loopne
sub
xchg
xchg
fwait
jmp
popf
mov
mov
xchg
fiaddl
filds
add
data16
out
and
or
int
xchg
inc
jno
lret
repz
jbe
inc
nop
enter
sti
iret
pop
and
jne
cmp
or
fimuls
adc
pop
out
push
in
pop
in
sbb
pushl
add
popf
and
pop
or
and
std
sbbl
jmp
jno
mov
mov
adc
or
inc
jg
mov
hlt
xlat
dec
or
cmp
push
insl
xchg
lea
dec
push
loope
decb
and
repz
jecxz
jns
aam
clc
mov
mov
pop
mov
dec
stc
lahf
xchg
dec
add
jne
fadds
ljmp
out
mov
icebp
mov
cmp
addr16
dec
stos
jo
cmpsl
js
push
rcrl
test
test
xor
push
lods
adc
mov
jmp
mov
xor
push
lock
jno
jl
mov
sbbb
jb
arpl
jmp
xchg
lret
ss
in
add
loopne
lods
imul
outsl
repnz
push
cld
jl
adc
outsb
testl
cli
imul
sub
leave
cmc
xchg
fucomip
mov
jg
pop
gs
out
shlb
jne
sub
sub
ds
in
out
and
in
shrl
mov
aad
inc
pop
rcl
js
sub
adc
mov
stos
not
cli
dec
mov
jbe
xchg
jno
call
or
ficomps
and
or
outsb
sti
fsts
pop
cs
imulb
cmpsl
shl
mov
int3
int
rcll
daa
test
stos
pop
mov
ja
xlat
dec
std
aam
cmp
dec
xor
xor
sbb
rcrb
loope
adc
xor
mov
iret
dec
adc
imul
xchg
lahf
add
push
sub
outsb
movsb
repnz
movsb
test
adc
int
or
dec
loope
scas
xor
jns
in
and
lock
jae
and
out
lcall
es
out
enter
mov
das
nop
jle
lret
scas
pusha
mov
xchg
push
insl
shll
adc
xchg
sti
lea
xchg
add
mov
jmp
pushf
add
stos
inc
pop
insb
gs
lds
insl
sub
pop
push
rolb
je
stos
xchg
mov
mov
dec
f2xm1
jne
mov
in
outsl
les
fcomi
inc
and
out
icebp
push
mov
mov
insl
out
dec
mov
es
into
xlat
outsb
lods
test
and
into
imul
insb
aas
adc
push
push
mov
cmpxchg
and
lods
outsl
sub
dec
or
jmp
sub
xchg
push
pushf
test
ds
add
out
dec
and
aad
and
dec
xchg
shrb
loopne
rcrl
push
je
scas
data16
loop
adcl
shlb
sbbl
ret
add
sbb
movups
xchg
shlb
es
inc
fwait
mov
mov
ljmp
mov
rcll
add
jg
jl
insb
in
pop
push
mov
xchg
inc
xchg
addr16
lret
cmp
cltd
pop
xor
adc
subb
aam
cmp
mov
sbb
fcomip
mov
outsl
jmp
push
stos
cli
ljmp
xchg
imul
jae
mov
mov
xchg
sub
cmpsl
loopne
cmp
out
pushf
lock
fs
mov
test
mov
fcmovu
xchg
ror
pop
push
jae
lret
sahf
jge
adc
int
loope
xchg
adc
inc
or
add
pop
adc
rclb
movsl
push
arpl
imul
mov
mov
fwait
daa
or
rorl
test
jmp
sahf
repnz
or
xor
xlat
pop
pop
test
push
xor
daa
mov
inc
mov
mov
cmp
mov
ss
loopne
in
pushf
shl
and
mov
data16
sarl
movsl
insl
or
xor
sbbb
jns
test
adcl
mov
jle
in
cmpsb
xchg
je
add
cmp
les
mov
lret
fsubr
sub
lea
roll
fistps
jmp
adc
pop
adc
leave
int
lods
adc
hlt
pop
and
lea
dec
xchg
cmpsl
scas
or
mov
daa
push
lcall
out
dec
mov
shl
cld
negb
cmp
stc
popf
mov
mov
mov
push
testl
in
mov
and
enter
pop
maxps
xor
inc
hlt
loop
sbb
sarl
ljmp
iret
hlt
sub
mov
xchg
cli
sub
repnz
mov
jge
lret
lds
xor
push
sbb
mov
jl
jecxz
test
dec
test
jmp
add
xor
ljmp
xor
rcll
and
popa
stos
inc
addr16
dec
xor
sbb
and
or
gs
adc
arpl
or
push
add
fs
je
xchg
and
adc
lret
dec
mov
call
lcall
sbb
xchg
dec
xchg
xchg
jmp
jge
push
sub
and
sti
sub
loope
js
sti
adc
sbb
jb
js
cmp
pop
stos
pop
push
subl
mov
mov
cwtl
push
or
or
fmull
pop
fildl
lret
call
aam
lea
and
lahf
testb
ja
add
iret
outsl
shll
cs
pop
xchg
pop
dec
or
lock
arpl
push
cmp
pusha
loope
push
jo
ljmp
pop
mov
shll
push
jnp
aam
adc
and
sub
xlat
adc
ja
xchg
test
pop
testl
xchg
out
loopne
xchg
pusha
jecxz
or
dec
popf
dec
lock
or
lcall
mov
in
xchg
push
inc
scas
xlat
mov
xchg
cmp
popf
pushf
mov
fdivrs
stos
add
cmc
lret
repz
mov
cmp
mull
in
sub
mov
mov
mov
mov
mov
stc
cs
sub
and
add
pop
outsb
xor
enter
xor
adc
mov
frstor
xor
sti
std
scas
dec
push
shll
fidivs
push
adc
jmp
mov
in
fcmovb
scas
cwtl
ljmp
clc
sbb
out
pop
scas
xor
pop
fiaddl
adc
hlt
sti
inc
pop
ljmp
dec
jp
mov
and
out
test
loopne
jns
scas
dec
mov
cwtl
fs
pop
inc
jb
mov
add
jae
or
stos
sbb
mov
push
add
adc
hlt
sub
cmp
cmp
test
fmuls
add
mov
xor
pusha
dec
movsl
outsl
mov
xor
inc
mov
and
add
arpl
push
pop
iret
sbb
into
or
mov
sarb
stos
mov
sbb
jmp
enter
sarl
push
lds
addb
mov
mov
popf
xchg
jg
mov
xchg
pop
mov
popf
jle
mov
sub
push
push
popa
mov
fists
js
dec
xorb
mov
sub
cs
cs
push
loope
stc
xchg
adc
dec
lea
mov
sti
fwait
xor
sub
sbbb
movsl
dec
mov
addl
mov
sbb
out
aad
imul
push
dec
outsb
aam
pop
pushf
mov
sub
jnp
mull
loope
dec
subb
push
sbb
in
stos
jmp
inc
int3
inc
jmp
sub
insb
push
pop
xor
into
pop
iret
repz
push
loop
fld1
add
mov
dec
or
lods
into
hlt
int3
mov
ret
mov
mov
add
ret
aad
sbb
sub
dec
sbb
clc
xchg
call
test
test
fidivrs
fbstp
sbb
push
fmul
cmp
or
pop
lea
into
mov
push
xchg
rcll
ficompl
movsl
repnz
shlb
add
inc
cmp
cli
test
add
sahf
mov
test
mov
mov
es
and
roll
addr16
arpl
xor
cmpl
add
pop
stos
out
mov
xchg
mov
inc
scas
inc
xlat
pop
dec
sbb
sub
loop
into
in
jge,pn
cmpsb
int
mov
jl
leave
inc
insb
mov
lret
scas
xlat
xor
sti
pop
sub
out
mov
arpl
shrb
xchg
dec
dec
jb
mov
ret
push
push
test
sbb
adc
sub
and
and
or
jg
lea
test
test
test
pop
sub
cmp
out
add
or
nop
pop
push
pop
pop
and
mov
mov
mov
lahf
pop
mov
aad
add
stos
jb
xchg
adc
inc
add
not
mov
xor
sbb
les
lods
push
neg
ss
js
hlt
lock
pushf
cwtl
xchg
sti
and
lret
insb
js
leave
cltd
xlat
and
or
inc
push
dec
cmc
mov
loopne
xchg
jb
out
test
and
ret
mov
cmp
mov
iret
mov
push
popa
gs
aam
inc
pop
lods
push
insb
hlt
idivb
mov
push
mov
jae
mov
sti
or
cmpsb
push
mov
in
xchg
mov
out
mov
clc
mov
insb
popf
lock
shrl
push
inc
mov
fs
lods
mov
sub
andl
add
lods
loope
mov
jmp
pop
mov
jnp
loope
arpl
stos
mov
bound
int3
adc
cmp
popa
nop
scas
adc
notb
call
cmp
pop
push
xor
ljmp
lcall
xlat
pop
scas
jg
pop
mov
jp
cli
clc
jge
adc
inc
fstpl
pop
adcl
dec
inc
cmp
mov
jnp
xchg
lock
xor
sbb
ficompl
adcl
jmp
xchg
cmp
aam
pop
sub
ss
adc
push
xor
jg
inc
arpl
inc
inc
and
pusha
mov
lahf
iret
nop
xchg
dec
ss
loop
dec
mov
dec
xchg
setle
inc
stos
imul
rol
rolb
push
lcall
add
ret
adc
sahf
rclb
inc
push
sahf
iret
pop
or
iret
repnz
test
jae
or
loop
stos
jo
pop
std
sti
cli
or
push
int
enter
and
xor
gs
xor
cmp
scas
sub
and
push
jmp
push
rcll
xor
push
lahf
jbe
xchg
mov
cmc
pop
xor
pop
into
fs
inc
scas
lea
pop
stos
mov
lahf
movsb
mulb
sbb
mov
xchg
push
movsl
push
in
clc
push
push
mov
cmovl
ja
sbb
sbb
ffreep
cmp
rolb
fisubrl
pop
ds
dec
jno
testb
mov
ret
test
push
call
sub
pusha
call
xchg
sti
sbb
sub
aaa
pop
xor
imul
outsl
mov
and
sub
lods
cld
sub
out
rcll
xchg
hlt
scas
push
iret
stos
and
dec
stos
orb
adc
or
jecxz
rcll
dec
mov
mov
mov
test
js
mov
or
lret
sbbb
movsl
xchg
les
sbbl
hlt
xchg
pop
mov
inc
arpl
cwtl
mov
push
sub
push
or
mov
mov
test
pop
jne
push
add
out
xor
cltd
jge
adc
push
xor
sbb
stos
and
xor
hlt
mov
aas
jecxz
scas
scas
mov
loop
mov
xor
shl
lahf
cmp
movsb
loope
lds
scas
out
mov
iret
push
mov
outsb
cmp
add
inc
cmp
les
filds
push
adc
xchg
lods
xor
out
call
cmpsb
gs
lret
mov
movsl
xor
push
push
mov
and
adc
jno
jle
aaa
or
jge
sahf
dec
adc
push
cs
adc
cmp
pop
lret
fs
repnz
and
scas
add
mov
rcr
xchg
subb
cmp
adc
mov
sbb
iret
adc
adc
mov
adc
dec
add
testb
mov
pop
es
out
sub
xchg
in
inc
lret
add
xchg
jb
push
inc
sbb
ljmp
neg
xor
mov
out
les
mov
pushf
add
xor
add
pop
sar
scas
dec
jae
xor
pop
bswap
cmp
mov
push
jbe
dec
mov
ljmp
xchg
fnstcw
sub
dec
push
sub
adc
mov
cmp
pusha
pop
mov
cmp
mov
xor
int3
pop
cltd
jae
rol
enter
movl
lock
mov
test
jbe
arpl
imul
mov
das
aam
out
cli
sbb
in
push
cmc
xchg
inc
add
test
pop
or
mov
int
out
push
fwait
in
cwtl
push
jecxz
jb
aaa
hlt
xchg
inc
pop
shll
dec
sti
mov
leave
out
cmp
scas
rclb
mov
shl
subl
fcoml
jbe
dec
push
mov
subl
fcomps
push
sub
add
test
mov
push
push
fimull
stc
mov
push
insb
fsubrs
test
out
lods
loopne
movsb
sarb
test
mov
inc
aas
insl
mov
and
push
add
mov
rolb
mov
mov
add
sub
jmp
lea
mov
push
jno
in
jmp
mov
or
in
mov
fnsetpm(287
adc
add
sub
das
push
xchg
add
out
jp
mov
lds
test
or
imul
int
mov
movsb
jo
sbb
jge
push
sti
mov
hlt
test
xchg
pop
push
push
adc
jle
fwait
aam
popf
xor
sub
or
xor
es
mov
sbb
cmp
add
subb
inc
gs
or
test
ljmp
shlb
ffreep
pushf
fmuls
xchg
jno
imull
adc
std
ficomps
xor
mov
and
inc
outsl
in
in
cmpsb
test
sbb
mov
add
mov
inc
push
lret
xor
inc
inc
adc
xchg
mov
insl
outsl
rcl
jo
adc
mov
mov
rcll
adc
cmpsl
and
in
and
in
fs
ja
bswap
popf
dec
daa
xor
mov
jge
shlb
loop
or
mov
xor
ret
pop
or
lret
or
push
lods
loopne
ljmp
dec
out
and
add
leave
jge
mov
negl
test
sub
sbb
es
sbb
pop
jbe
les
sbb
mov
scas
jle
mov
push
mov
cli
mov
xbegin
icebp
dec
stc
lock
xlat
fstps
cltd
push
mov
nop
cs
mul
loop
sbb
into
pop
imul
clc
cli
mov
sbb
test
sbb
xor
mov
and
inc
into
imul
daa
push
out
pop
repnz
or
stos
cmp
push
mov
mov
pop
das
pop
cs
pop
mov
fistps
int
adcl
and
icebp
ja
cmpsl
mov
fistpll
les
lret
push
add
lds
jmp
add
sub
pushf
push
daa
scas
scas
arpl
sub
pushl
hlt
pop
pop
lret
mov
xor
fwait
movsb
cltd
cli
push
xor
jno
xor
je
jbe
mov
mov
dec
aaa
outsl
mov
test
aad
push
xor
xor
arpl
fidivrl
outsb
das
fdivp
mov
mov
packssdw
mov
lock
stos
dec
loope
fneni(8087
pusha
cmp
bound
dec
inc
sbb
shrl
mov
or
push
sub
mov
dec
sahf
fwait
xchg
fs
loopne
sbb
or
aam
add
fisttpl
and
aaa
out
test
jl
pop
stos
adc
xor
into
fidivrl
mov
xorb
or
push
out
and
pop
imul
push
icebp
sub
dec
inc
add
inc
ja
fiadds
fsubrs
imul
lret
mov
inc
enter
popa
sbb
add
xor
pop
aaa
fs
jge
jecxz
or
rclb
aaa
jge
add
dec
dec
jns
out
xchg
cmpsl
sbb
adc
add
mov
scas
imul
mov
sbb
or
insl
nop
fistpll
out
cmovno
int3
sub
out
jmp
inc
mov
hlt
cmp
pop
jbe
push
loop
push
ret
jg
push
push
adc
int
lods
ret
mov
push
cmp
in
push
pop
or
mov
pop
cmp
and
xor
outsl
in
add
hlt
das
xor
nop
pop
movsb
in
imul
outsl
cmp
sbb
inc
pushf
enter
cmp
xor
divl
jle
mov
sbb
ss
cmp
jmp
inc
shlb
lret
push
rorl
mov
mov
ror
adc
adc
aad
pop
lret
mov
adcl
adc
jbe
fldl
or
xchg
jmp
or
xor
dec
mov
cltd
mov
ret
or
and
jge
push
dec
pop
test
add
hlt
sahf
repnz
cmp
mov
lock
mov
xlat
leave
push
std
addr16
nop
aad
mov
or
testb
cmp
mov
add
inc
ljmp
addr16
pop
mov
test
xor
iret
clc
roll
pop
loope
test
mov
lock
aas
xor
sbb
pusha
scas
aaa
test
std
inc
mov
daa
iret
jnp
add
mov
push
fcoml
mov
push
xor
mov
fdivrl
addr16
sub
pop
sub
add
in
insl
sub
pop
das
sbb
push
xchg
sbb
xor
test
test
mov
xchg
xchg
cmp
pop
sub
push
inc
into
lea
fwait
push
andb
xchg
popf
push
mov
pop
mov
mov
pop
int
inc
add
inc
cli
in
fistpl
inc
pop
dec
andl
xchg
pop
lret
mov
sub
and
mov
inc
in
xor
jno,pt
in
mov
rcl
cltd
add
sub
pop
cwtl
push
xchg
and
scas
out
popf
notl
xchg
jmp
bound
cmc
arpl
mov
pop
pop
add
sub
ficoml
and
testb
xor
jne
push
repnz
pop
inc
xor
cltd
mov
cmpl
jo
mov
jmp
cmc
loope
inc
shlb
aaa
mov
icebp
pushf
or
push
repz
lcall
mov
mov
or
in
pushf
sbbl
adc
ffreep
inc
sti
sbb
test
xchg
mov
sbb
xor
mov
dec
jae
pusha
scas
lea
sub
in
pop
ds
mov
call
in
not
cmpsb
sub
inc
adc
fildl
ljmp
sub
outsl
enter
sahf
mov
lods
dec
xor
mov
inc
je
popa
mov
xchg
push
push
push
push
pop
mov
pop
mov
xor
int
shrd
jge
mov
mov
sub
push
push
jge
movsb
or
scas
sbb
cmp
and
adc
cmp
fs
xor
cmpsl
mov
or
dec
sbb
idivl
je
add
add
insb
or
cmpb
addb
sbb
jl
mov
es
add
cmp
shl
inc
jno
repz
test
loope
cltd
mov
rcrb
popf
stos
xchg
mov
sub
sub
sbb
insb
in
aaa
out
lahf
or
loope
test
nop
dec
cmp
pop
xor
adc
gs
push
add
fcompl
ds
sti
mov
push
sar
in
repnz
cli
incl
mov
icebp
leave
fistps
test
inc
push
sub
test
dec
inc
pop
jns
cld
popa
fsubrs
in
dec
mov
sbb
xor
arpl
cli
adc
push
xchg
jno
mov
or
push
shll
aam
adc
cmpsb
shll
jb
sbb
ficoms
inc
and
das
sahf
flds
out
sbb
pop
xlat
mov
dec
sbb
sarl
and
mov
mov
movsl
xchg
ljmp
pop
test
lods
sbb
pusha
jg
out
mov
inc
mov
pinsrw
out
adc
push
mov
xchg
jae
loope
cwtl
or
dec
or
movsl
cli
fmulp
cltd
jp
cmp
add
mov
ljmp
les
sbb
in
fs
inc
icebp
cmp
jbe
mov
sub
icebp
ror
mov
add
insb
cmc
into
push
cmp
mov
sbbb
xor
mov
pop
loop
sub
repnz
push
clc
inc
dec
jmp
in
push
sbb
sub
mov
test
mov
sbb
sub
sub
adc
fldt
cmc
std
aam
test
mov
sub
xor
cld
sbb
or
pusha
dec
pushf
mov
adc
jecxz
xor
into
inc
dec
lods
mov
add
inc
fcompl
dec
loop
sbb
lds
or
imul
pop
aas
mov
jmp
test
lds
or
or
fdivrp
in
adc
mov
movsl
xchg
mov
out
dec
inc
inc
ret
xchg
lcall
sbb
xor
and
pop
cmp
sbb
mov
sbb
shrb
imul
jecxz
mov
add
add
repnz
inc
shll
push
ficoml
dec
sub
iret
xchg
pop
pop
add
mov
imul
pushf
cmpsl
lods
outsl
notb
xor
adc
mov
daa
xor
mov
int3
rcr
sub
sarb
pop
push
cmpsb
sbb
fwait
int
addr16
out
ds
jmp
icebp
icebp
aam
sti
push
xchg
cmc
jo
inc
push
pop
loopne
int3
pop
mov
pop
adc
int
jp
sbb
sti
shlb
adc
mov
xchg
int3
xlat
push
mov
les
pop
dec
call
std
push
jno
jno
in
sbb
ror
jecxz
push
out
jnp
mov
push
subl
inc
outsl
xchg
push
and
jno
movsb
insb
pop
rorl
dec
shrl
sbb
in
push
and
dec
pusha
cmp
jb
div
jecxz
mov
mov
jbe
test
sbb
inc
jle
jge
jmp
fisttpl
ret
test
inc
sub
in
negl
xacquire
or
inc
jg
aas
ret
leave
ljmp
cmp
in
xorl
mov
shll
cmp
cmc
dec
icebp
aas
pushf
je
in
pop
sbb
inc
xchg
dec
push
dec
push
adc
xor
fsubs
inc
movsl
mov
push
sub
xor
cmovs
loopne
shr
les
or
inc
push
mov
sub
jnp
jmp
cmp
adc
rcl
shll
loop
aam
pop
mov
jbe
aas
rcr
shlb
inc
shlb
pop
xchg
icebp
scas
icebp
dec
inc
imul
mov
add
addr16
cmp
dec
adc
xchg
je
and
cmp
mov
jo
lods
mov
movsl
cmc
pop
jb
inc
fimull
mov
sbb
popa
push
xor
fdivrs
outsl
dec
jmp
cmpsb
sub
leave
pop
and
ss
pusha
lock
roll
mov
push
xchg
lock
jo
xlat
xor
loope
clc
lret
jecxz
rcll
jb
pop
iret
sahf
addl
inc
or
mov
pop
xor
popa
orl
push
cmp
jge
add
sub
xor
arpl
decl
xor
jnp
cmp
dec
scas
adc
sub
stos
pop
inc
jae
and
xchg
and
and
push
jmp
mov
popf
call
sbb
push
stos
mov
rolb
mov
jb
enter
add
jmp
xchg
popw
push
inc
fidivl
jbe
adc
jecxz
jnp
push
mov
mov
roll
mov
mov
add
repz
adc
push
sbb
mov
inc
popf
mov
out
repz
xchg
xchg
jp
popa
xchg
test
pop
filds
data16
shrl
loope
js
repz
push
mov
shll
cmp
add
les
adc
fidivrl
movsl
mov
cld
sbb
hlt
push
repz
xchg
inc
jmp
ljmp
fdivrp
movl
into
test
mov
test
fs
push
jmp
inc
sahf
push
rcll
lock
aam
cmp
xor
dec
js
test
andl
xchg
stos
fs
sub
pushl
jmp
xchg
stos
xchg
pop
mov
cmp
nop
push
jo
xchg
jle
movsb
mov
push
push
adc
clc
fistpll
cwtl
rolb
mov
dec
out
mov
imul
mov
mov
loope
test
cmpsl
clc
repnz
inc
mov
xor
subb
icebp
and
mov
ret
pop
jp
push
adc
aaa
xchg
out
stc
add
mov
ret
scas
rorl
insb
sbb
lods
pop
add
xchg
ficompl
jmp
jae
mov
add
fldenv
movsb
mov
jmp
jo
inc
jae
aaa
xchg
outsl
fwait
dec
into
push
das
cli
sbb
cmp
dec
push
shrl
push
movsl
int
jnp
sbb
jne
andl
stos
or
sub
pop
adc
loope
mov
pop
push
fsubs
mov
and
mov
cmp
xor
add
sub
pop
insl
aaa
notl
mov
mov
cmp
test
outsb
and
inc
scas
aas
insl
gs
pop
rcrb
xor
dec
jae
in
aas
imul
and
leave
aaa
add
mov
pop
fldcw
pop
jne
push
jmp
mull
xchg
cmp
nop
inc
out
jns
push
cld
xchg
jp
outsb
mov
jae
cli
xchg
inc
xchg
xchg
outsb
inc
adc
mov
or
in
push
popa
fistpll
jb
gs
rcr
xor
xorps
xor
stos
test
scas
push
push
push
adc
movsl
lahf
and
xor
sbb
mov
mov
movsb
push
inc
pop
das
or
aas
mov
stos
outsb
lret
fmull
and
fldl
lea
gs
cld
sti
xchg
test
push
stc
test
push
loope
inc
js
xchg
subl
into
sarl
add
shrb
inc
fisubrs
sahf
mov
mov
push
scas
in
outsl
sbb
ja
adc
movsl
jne
into
xchg
inc
jge
sub
mov
pop
mov
mov
daa
hlt
dec
jbe
or
pop
out
mov
jo
jo
mov
stos
clc
fcoms
addl
pop
sbb
adc
cmp
sahf
adc
fisubl
jecxz
pop
xor
out
rcll
jl
sahf
push
divl
lds
enter
addl
outsl
inc
gs
or
xor
js,pt
and
std
mov
sti
aaa
jb
ror
xor
mov
or
pop
mov
lcall
pmuludq
pop
std
hlt
cmp
pop
mov
or
pop
adc
jg
sarl
add
mov
leave
and
stos
mov
sbb
mov
xor
xchg
jecxz
faddl
add
jbe
adc
in
xor
scas
popa
cmpsl
jno
cmp
sbb
jbe
call
in
es
mov
mov
xchg
add
jle
fwait
mov
loope
lret
enter
scas
leave
aas
pop
rcr
gs
xor
sbb
out
je
aas
cmp
jo
adc
and
or
sahf
shr
out
mov
leave
mov
ret
fs
aam
or
lret
inc
insl
clc
roll
popa
cmp
mov
cli
adcl
aaa
fcoms
mov
or
jne
inc
mov
wrmsr
fsubl
pop
push
inc
shlb
sub
insb
lock
jbe
mov
mov
xor
add
dec
sahf
rcll
xchg
xor
sub
jmp
dec
in
xor
push
jl
pusha
sub
sbb
pop
call
in
call
pop
inc
jno
xor
sbb
lcall
iret
stc
inc
testb
aas
and
jmp
insb
mov
out
scas
xchg
pop
push
adc
adc
cmp
ficomps
in
cmp
sub
jg
sub
out
mov
test
mov
in
lret
in
mov
and
out
cmp
ss
ror
dec
loopne
cmp
xor
std
test
xchg
sub
out
mov
sbbl
fnsetpm(287
jns
add
lahf
mov
and
fcomp
in
psubsb
pop
push
int3
sbb
cwtl
lods
sub
and
test
sbb
ljmp
dec
mov
pop
loop
mov
jg
ljmp
mov
cld
mov
mov
jbe
aaa
notl
xchg
sarb
xchg
pop
call
aaa
lock
jno
icebp
insl
clc
pop
arpl
mov
pop
jno
call
int
insl
jl
loopne
repz
and
jp
inc
mov
shll
test
out
ss
pusha
rolb
inc
shrl
mov
adc
cltd
push
xor
and
mov
aad
dec
sub
cmc
ret
daa
mov
popf
call
in
pop
fimuls
arpl
data16
stos
cmp
and
imul
js
es
jecxz
cmp
fisttpl
aaa
mov
insl
fsubs
jge
call
std
outsl
cmp
nop
and
imul
loopne
inc
add
xchg
out
mov
mov
dec
sub
dec
inc
add
push
push
xor
mov
jl
mov
ret
push
imul
stc
add
sahf
lea
and
jns
pushf
or
pop
inc
mov
iret
in
mov
pop
filds
mov
sub
jecxz
int
fldcw
jb
mov
mov
outsb
aam
jns
aas
divb
out
push
cmp
insl
ljmp
iret
iret
mov
rolb
popf
xchg
mov
rcrb
mov
xor
dec
jmp
mov
sbb
mov
scas
and
and
inc
std
or
jecxz
lods
gs
dec
ja
cmpsb
outsl
sbb
xorb
bound
mov
xchg
sub
ljmp
loope
scas
cmp
push
and
addr16
mov
popa
test
cwtl
shll
out
mov
sub
scas
ss
pop
jbe
ja
test
stos
sub
jecxz
iret
sahf
out
lahf
mov
inc
rorb
or
or
and
out
les
out
inc
leave
pop
push
fstps
sbb
sbbb
cltd
pop
mov
in
loopne
push
stos
mov
out
push
push
int3
jne
lods
aad
dec
or
cmp
sub
es
lcall
gs
jle
mov
je
dec
fsubr
hlt
loopne
dec
sub
call
cmp
pop
xor
int3
out
jecxz
lcall
imul
add
in
ljmp
das
hlt
add
addl
pusha
mov
cli
cmp
pop
pop
xor
gs
push
mov
movsb
lea
cmc
rorl
movl
lea
push
cs
ds
ja
and
xchg
xchg
add
stos
xchg
ljmp
ljmp
or
mov
dec
xchg
mov
stc
or
sahf
bound
sub
jns
leave
mov
xchg
enter
sti
hlt
mov
rcrb
repnz
fcompl
mov
sub
inc
mov
lcall
jo
sub
jo
outsl
mov
sub
sub
and
fbld
and
stos
cs
mull
lds
lods
jg
fnstsw
adc
xor
mov
in
or
outsl
jb
push
or
cmp
stos
mov
cmpsl
movsb
sub
movsl
testl
into
mov
pop
scas
in
mov
aaa
pop
fsubp
imul
push
dec
adc
shll
leave
popa
and
sbb
lea
cmpsl
jbe
inc
outsb
pop
stc
jle
jle
test
jns
adc
cltd
push
push
test
jg
xor
rclb
sbb
xchg
and
pop
nop
push
add
sbb
mov
dec
stc
cwtl
je
xor
adcl
mov
in
lret
mov
push
or
outsl
xchg
pop
cmpsb
lods
les
jb
hlt
mov
outsl
repz
js
int3
sti
out
pusha
cli
arpl
mov
cmp
inc
xchg
cltd
pusha
jnp
clc
sbb
or
and
in
test
lret
cltd
mov
and
xor
xor
xchg
cmp
ss
sub
sbb
cmp
pop
or
lcall
loopne
lods
insb
jle
and
ret
andb
mov
std
aad
popf
scas
or
jmp
jecxz,pn
movsb
and
inc
out
jmp
int3
test
scas
xchg
cmp
cli
pop
pop
inc
out
pop
ss
pop
mov
cmp
jnp
mov
adc
mov
inc
mov
fcmovnbe
xchg
rolb
aam
inc
ja
sub
ret
stc
sbb
enter
xchg
testb
add
adc
xchg
mov
rcrl
pushf
pushf
rolb
popf
jbe
dec
ljmp
jecxz
xor
add
loop
je
jo
inc
sub
mov
adc
cmp
repz
xor
pushl
or
inc
movsw
jns
nop
xchg
mov
adc
imul
push
pop
in
cmp
int3
movsb
and
mov
jno
or
sub
cmp
dec
jp
pop
push
xchg
rcr
mov
stc
add
je
and
xchg
fwait
rcrl
dec
mov
mov
mov
xchg
test
jg
cli
test
shl
cwtl
movsl
imul
pushaw
ljmp
xor
adc
aaa
mov
xor
dec
mov
sete
and
out
icebp
jo
dec
decb
mov
sti
and
sbb
out
jbe
sbb
aaa
bound
in
mov
dec
stc
cmpsb
jnp
iret
add
or
mov
inc
dec
adc
in
cmp
js
mov
in
add
xor
pusha
in
cmp
pop
lret
adc
js
dec
mov
aas
mov
enter
mov
sub
fptan
xchg
iret
jp
push
xor
or
and
out
pop
sub
lods
fsts
mov
aas
jns
insb
xchg
xorb
imul
daa
mov
out
inc
cmc
pop
addr16
clc
mov
js
and
icebp
inc
push
int3
scas
inc
pop
push
or
add
in
in
loop
xchg
add
outsb
dec
sub
aad
scas
aad
iret
adc
push
aad
das
inc
mov
enter
adc
int3
inc
fwait
mov
mov
dec
mov
push
mov
mov
jae
sbb
aas
cwtl
mov
and
mov
or
pop
dec
dec
add
dec
filds
sub
or
push
jb
daa
pop
cmp
push
mov
jg
cltd
lods
and
mov
xchg
dec
gs
cmp
inc
outsb
dec
fnstsw
iret
xchg
and
adc
cmp
cs
mov
pop
xchg
xlat
cmp
mov
dec
icebp
fisttpl
stos
mov
call
mov
mov
xchg
outsb
or
fistpll
inc
inc
popa
test
lret
mov
addl
lock
test
pop
icebp
ljmp
cmp
aaa
push
fidivrs
cmp
out
cmp
adc
cld
cmc
push
mov
pop
xor
jno
mov
xor
rorl
jae
test
xchg
xchg
jecxz
out
popa
cmp
outsl
mov
in
or
enter
and
cmp
cmp
cmp
vpsrlw
jl
cmp
js
ret
mov
mov
fdivl
adc
data16
jp
add
inc
sti
xchg
adc
inc
pop
mov
sbb
or
cmc
stc
dec
shll
xor
mov
sub
xor
int3
pop
jle
xchg
int3
and
sbb
out
sbb
inc
add
enter
sbb
enter
lods
inc
xlat
rcrl
loop
fcomps
cltd
adc
in
popl
sbb
test
cs
mov
mov
and
ret
sbb
rcr
jae
inc
pusha
bound
shrd
cmpsb
insb
lahf
out
sbb
fistps
mov
cs
ficoms
and
pop
or
into
mov
sub
das
jmp
mov
sub
fs
aaa
notb
sbb
mov
imul
inc
loope
mov
pop
mov
mov
int
push
adcl
xor
pushf
lods
push
sahf
push
ljmp
xor
fdivl
aaa
pop
cmp
sub
leave
cmp
sbb
ret
lea
mov
or
adc
cmp
loop
enter
lods
ljmp
mov
jnp
test
aas
cmp
xchg
in
add
nop
mov
stos
iret
push
mov
jno
xchg
aaa
inc
add
cmp
out
mov
push
adc
inc
cli
add
lret
push
loopne
push
and
add
jl
sbb
test
arpl
adc
inc
or
inc
cld
pop
push
adc
outsb
jb
mov
jno
gs
xchg
cwtl
mov
xchg
mov
push
enter
add
iret
mov
je
push
cld
rcrb
gs
pop
mov
push
lods
mov
xchg
sub
mov
and
jmp
jne
lods
shrl
nop
push
cmp
sbbb
push
ret
jno
xchg
rcrb
fcmovnb
cld
xor
cmp
sub
mov
jo
fwait
mov
xchg
les
dec
clc
mov
jl
mov
dec
xchg
popa
stos
add
pop
xlat
mov
movsb
lgs
test
push
out
add
sbb
push
daa
loope
cmpsb
mov
mov
movsl
int3
and
imulb
jb
mov
xchg
add
push
cmp
mov
test
addr16
mov
aam
mov
jp
jbe
inc
popa
adc
movsl
into
xlat
mov
inc
imul
das
inc
shlb
fwait
jmp
in
cmp
sahf
les
subb
popa
movsl
cwtl
and
or
and
shl
jo
and
mov
scas
scas
in
insb
fstps
leave
push
push
mov
mov
clc
clc
mov
pushf
or
dec
push
cmpsb
inc
mov
jge
roll
add
clc
sahf
inc
mov
push
clc
inc
int3
arpl
fldcw
shld
fs
call
fimull
and
mov
jno
pop
xchg
add
add
xchg
inc
fiaddl
xor
pop
mov
xor
inc
adc
mov
data16
pop
fimull
imul
mov
sbb
inc
jbe
sub
popf
fisubrs
lods
in
cmpsb
mov
movsl
dec
sub
jle
dec
hlt
mov
cmp
int
adc
nop
mov
mov
xor
js
adc
inc
sahf
inc
dec
jle
and
mov
imul
jl
xor
js
dec
imul
clc
ljmp
pop
out
mov
mov
xchg
jecxz
lret
mov
mov
pop
pop
out
pop
sub
sbb
jmp
jp
inc
pop
stc
aam
push
aaa
push
lcall
jecxz
jle
pop
sub
push
xor
das
lret
push
inc
lcall
push
mov
icebp
dec
aaa
and
rolb
out
test
and
das
push
scas
pusha
imul
pop
dec
mov
xor
xlat
add
jp
mov
jnp
sub
aad
mov
cltd
js
lahf
push
jmp
rol
xchg
fs
clc
sbb
je
jno
inc
adc
xor
test
inc
inc
rcrb
movl
out
inc
sub
dec
aas
mov
ret
xlat
arpl
loope
fidivrs
cmpsb
push
inc
stos
xor
jae
xor
sbb
pop
xchg
out
fcoml
pushf
data16
jge
add
out
push
jecxz
test
xchg
pop
mov
mov
into
jmp
add
divb
int3
push
mov
ud2
mov
loop
or
pop
and
mov
sti
push
incb
sbbb
lods
jns
js
push
int3
mov
dec
jo
mov
fs
jp
and
imul
mov
rorl
sarb
push
lahf
xchg
xor
sbb
insl
xchg
push
adc
adcb
imul
or
sbb
cwtl
cmpsb
mov
sub
mov
rcl
jl
imul
pop
push
adc
shrb
subl
cmp
dec
pop
push
and
push
mov
in
lds
lods
pop
or
stc
cmpsb
notb
leave
and
add
jecxz
sub
push
pop
arpl
mov
jle
jne
xchg
xchg
movsl
push
fisttpll
cmpsb
cmpsl
cmp
mov
lahf
mov
insb
sbb
push
loop
mov
xchg
fs
nop
add
or
cmp
loopne
mov
and
cmpsb
sub
jg
test
movsw
sbb
adc
xchg
jl
push
out
icebp
lret
adc
inc
cmpsl
mov
cmpsb
into
sub
and
sti
inc
inc
sahf
cmpb
lock
pop
out
pushf
js
lret
adc
sub
addr16
xchg
pusha
dec
cmp
inc
xor
mov
jmp
add
cmp
loop
aas
adc
sbb
xor
jl
cmp
movb
fwait
mov
xor
mov
outsb
mov
jp
push
mov
into
mov
add
and
out
mov
push
ds
icebp
clc
mov
pusha
mov
push
or
xorb
mov
cs
push
out
or
xor
ss
xor
add
popa
pop
mov
add
sti
jge
orb
cmp
aad
icebp
ja
adc
negl
ja
test
and
jge
adc
jae
fbld
sbb
leave
cmp
mov
mov
sub
push
mov
outsb
mov
and
lods
lods
cmpb
int3
scas
dec
arpl
arpl
repnz
fdivp
lods
mov
sbb
sub
outsb
repnz
fstl
mov
xchg
add
sbb
addb
cmp
push
push
push
call
adc
cmp
outsl
and
frstor
jp
fstps
stc
fistps
xchg
push
sub
xchg
imul
lods
ja
popa
push
add
mov
fs
aam
jo
movsb
leave
insl
out
in
dec
lea
or
dec
push
std
mov
mov
lret
aaa
mov
adc
lods
xchg
xchg
cmp
lret
or
rcl
add
subb
pop
in
sahf
dec
add
inc
leave
push
jns
xchg
mov
inc
sbbb
and
xor
ret
ja
or
scas
inc
loop
mov
outsl
loopne
scas
lret
out
pop
rorb
bound
mov
repnz
and
aas
in
and
xchg
xchg
mov
mov
inc
mov
mov
add
iret
dec
add
pop
shll
mov
repnz
movsb
jl
and
jle
inc
fnstcw
loope
sbb
mov
push
mov
cmc
in
ret
addl
or
xchg
nop
insb
jecxz
jb
loope
in
imul
out
fisttps
fwait
scas
outsl
cmp
aaa
sbb
popf
jne
mov
stos
rcr
in
outsb
xor
pop
popa
pusha
pop
mov
and
pop
xchg
adc
inc
cmp
in
adc
sub
sbb
repnz
testb
loop
push
test
fidivs
mov
adc
pop
mov
jbe
lds
lret
les
cli
mov
xor
jb
rcrl
sbb
lea
out
push
inc
lods
dec
fcmovnbe
daa
sti
mov
sub
xchg
scas
mov
jb
cmp
jo
in
xchg
pop
add
pop
adc
mov
divl
or
push
ret
adc
leave
popa
pop
mov
imul
xor
mov
push
mov
add
lods
pop
adc
xchg
scas
lahf
adc
jmp
push
loop
pop
xor
shll
dec
xchg
mov
mov
negb
scas
adc
es
dec
cs
sbb
add
add
fs
push
lret
sub
cmpsl
or
push
fsubrs
lret
add
cmp
psubusb
movsb
les
lea
fldt
daa
icebp
incl
push
jno
sub
mov
adc
rcll
xchg
arpl
ja
mov
rcll
imul
js
pop
add
cmp
mov
aad
rcrb
cmc
add
xor
dec
cmpsb
jae
outsb
inc
push
aas
mov
loopne
icebp
out
lods
pop
test
int3
mov
sarl
aas
and
push
push
and
xor
add
inc
lds
mov
out
cmp
test
jmp
mov
jno
fs
mov
mov
push
pop
insl
insl
test
leave
std
mov
mov
pop
daa
movsl
mov
push
cmp
iret
repz
push
mov
or
add
cld
insl
mov
or
rcrb
arpl
in
sbb
loope
sbb
mov
ror
int
loope
dec
adcb
mov
pop
add
mov
in
push
mov
xchg
sub
adc
idivl
fistl
jns
mov
adc
push
jbe
mov
xor
sub
repnz
xchg
xor
fnstenv
jmp
icebp
add
cmp
scas
jecxz
mov
aaa
repz
jo
or
mov
aad
repnz
xor
icebp
test
addr16
push
test
xor
imul
jns
push
jl
js
popf
and
adc
xlat
lret
xor
mov
xlat
or
jmp
jno,pn
sub
call
cld
popf
sbb
and
dec
sbb
jb
mov
test
pop
outsb
or
mov
jp
lea
jmp
mov
add
add
and
das
push
adc
lea
frstor
mov
rcr
ret
subl
in
imul
test
arpl
and
fsubrp
adcl
sarb
fsubs
mov
into
bound
movsb
xchg
fcompl
dec
cmpsl
dec
xchg
aad
sbb
fdivrs
dec
mov
cmc
push
inc
fldl
dec
mull
push
jl
sbb
shlb
dec
ss
gs
loop
or
insb
push
nop
lock
shrd
mov
ffreep
loope
in
out
out
repz
push
push
push
stos
ficomps
jae
jmp
inc
add
xchg
sub
and
inc
mov
pop
lcall
enter
bound
jbe
jae
lea
popa
ljmp
push
mov
fdivs
lods
xchg
jmp
call
dec
sub
out
cmpsb
xchg
loop
lret
mov
push
lcall
js
dec
push
test
mov
mov
aas
cmpsb
shrb
arpl
loope
pushf
cmp
iret
cmpb
dec
lods
in
mov
das
push
cmp
out
pop
sbb
mov
ficompl
mov
push
xchg
test
subl
jnp
call
lods
lret
add
loop
sub
adc
mov
adcb
push
xor
lret
insb
sub
jmp
stc
inc
pop
cmp
jbe
ss
ds
pop
lds
xchg
jbe
add
push
jmp
push
dec
aaa
shll
push
bound
dec
cli
xchg
aas
sbb
loop
ljmp
jnp
outsb
pusha
mov
mov
push
stos
cmp
out
pop
dec
stc
and
or
fs
and
mov
pop
cld
inc
sbb
sahf
adc
cwtl
sbb
add
sbb
mov
loopne
mov
dec
movsl
pop
sub
ret
repnz
adc
stos
xchg
inc
into
add
or
scas
add
mov
ljmp
ror
icebp
js
rcrb
ficompl
dec
mov
addb
imull
and
add
or
dec
dec
and
int3
int3
sti
push
cmpsl
mov
add
aas
ja
cmpsb
cmp
push
loop
das
xchg
imul
test
cmc
push
in
shrb
das
or
lock
mov
fdivrl
mov
cld
je
xor
xor
jmp
cmp
mov
dec
notl
pop
xchg
sbb
mov
cmp
lods
fs
pop
add
test
out
and
push
mov
jle
jmp
and
repnz
jne
ja
inc
pop
sbbb
cmc
out
loope
pusha
xchg
jb
dec
xlat
fisubrl
and
mov
sub
cli
jg
iret
add
in
push
xor
add
cmpsl
mov
and
in
and
mov
mov
xor
pop
mov
jo
push
movsl
into
cltd
mov
pop
add
ds
xchg
scas
add
fbld
mov
mov
mov
jb
lret
add
add
movsl
faddl
rcrb
int3
mov
pop
push
dec
add
inc
dec
sbb
fadds
adc
int3
xchg
aaa
subl
fstpl
cmpsl
bound
xor
iret
aaa
jo
mov
xor
mov
je
sub
and
ljmp
xchg
inc
or
fdivrl
jl
or
insl
adcb
xchg
fs
xchg
inc
or
and
sub
insl
outsb
fldt
idivb
adc
mov
inc
mov
loop
movsl
pop
sub
pop
and
mov
sbb
sub
jg
sbb
lock
mov
das
ror
addr16
adc
sub
dec
jg
les
jmp
sub
cwtl
int
sub
aaa
push
lcall
mov
lods
out
movl
insb
mov
xchg
out
dec
pop
cltd
push
add
add
xchg
cs
in
mov
out
mov
xchg
shll
jnp
or
popa
in
push
test
dec
jnp
movsl
xor
add
mov
jmp
lahf
mov
pop
shlb
icebp
dec
cmovg
iret
add
adc
out
xor
gs
or
jnp
inc
mov
mov
int
scas
les
loop
mov
jmp
xchg
orl
pop
popf
add
mov
fsubrl
out
jae
faddl
and
push
jecxz
adc
mov
lods
in
jg
cmp
int
aam
int3
addl
popf
sub
mov
sahf
imulb
sub
lods
xor
pop
pusha
enter
int3
fwait
iret
sarl
inc
or
dec
xlat
dec
mov
jmp
lahf
das
orb
cwtl
loop
or
adc
inc
push
cmp
inc
loop
loope
push
aas
out
lahf
movl
mov
jae,pt
fs
iret
push
sub
outsl
dec
rcl
mov
mov
jg
test
aas
mov
enter
xchg
and
fcmovb
mov
dec
xor
popa
mov
lret
jno
icebp
shll
insl
dec
cwtl
push
xchg
adc
cmp
sub
jmp
das
sbb
repnz
mov
sbb
inc
dec
pusha
xchg
pop
xchg
fcomp
and
dec
push
mov
xchg
xor
push
cmp
je
inc
or
inc
push
outsl
jg
lret
in
push
inc
mov
test
loope
jl
bound
movsb
imul
in
fisubrs
sub
jmp
xchg
cltd
adc
gs
lahf
dec
mov
or
imul
shrb
pop
fcoml
and
sbb
cld
pop
jbe
mov
or
push
adc
push
sbb
aas
sahf
and
mov
xchg
sub
sub
addl
jb
dec
dec
cli
fwait
in
sub
sub
bsf
sbb
adc
xchg
scas
xchg
sbb
lds
gs
inc
sbb
fldt
out
jmp
and
xchg
insl
inc
push
mov
adc
hlt
lcall
cltd
arpl
xor
outsb
add
xchg
mov
in
mov
in
movsl
sbb
inc
or
les
loop
clc
inc
sbb
pop
cmpsl
and
jne
or
ljmp
mov
daa
adc
xor
mov
mov
mov
sbbb
and
cmp
sbb
lcall
and
jle
int3
daa
mov
out
mov
xor
leave
ror
inc
ret
mov
add
adc
xchg
push
jl
adc
and
movsb
ret
imull
mov
cltd
shrb
sti
inc
sbb
scas
fcmove
pop
fsub
pop
push
xor
sub
jbe
jo
je
jb
test
cmp
cmp
loopne
rclb
dec
dec
inc
xor
test
fmul
sti
mov
fidivl
bound
imul
out
pushf
insl
xorb
pop
sub
scas
loopne
mov
mov
bound
mov
or
mov
mov
and
mov
daa
adcl
sbb
or
ret
cwtl
mov
jp
xchg
mov
cwtl
in
jge
icebp
sub
or
adc
cmp
sbb
xchg
setg
push
add
movsb
stos
ja
or
xchg
test
addr16
inc
cmp
lcall
cmp
add
xchg
mov
fldt
pusha
push
out
mov
sarb
xor
pop
jl
or
mov
jns
leave
je
in
xchg
daa
mov
out
push
fadd
arpl
arpl
js
push
lock
jbe,pt
push
cmp
xchg
xor
mov
mov
mov
and
orb
notl
and
test
sub
push
mov
cmc
jbe
hlt
enter
nop
dec
loopne
mov
and
into
push
dec
dec
sub
and
and
pop
in
pop
pop
or
sbb
mov
or
mov
pop
xchg
push
fs
mov
fs
dec
jnp
cs
shrb
sbb
fwait
mov
leave
mov
cmp
cld
cs
hlt
mov
ret
in
inc
js
xchg
lea
jne
cmc
push
mov
add
test
arpl
repnz
push
les
mov
lret
movsb
scas
daa
movl
xchg
mov
addr16
push
push
cltd
jbe
pop
push
jne
cs
stc
cld
pop
insl
out
xor
push
push
mov
add
test
mov
cli
je
test
test
fdivr
xor
rcrb
sub
or
jno
mov
idivl
adc
mov
pop
inc
push
lea
pop
cli
push
inc
inc
fistpll
xor
xchg
out
sub
loop
push
and
cmp
loopne
les
aad
scas
inc
mov
and
stos
or
xchg
ja
ja
das
out
mov
andl
es
mov
push
in
fidivrl
jns
aad
mov
out
es
push
or
outsb
ret
cmp
in
cmp
dec
aam
push
adc
mov
jle
mov
cli
test
inc
push
mov
int
lcall
pop
mov
pop
jl
sbb
push
sub
negb
incl
adc
adc
mov
mov
mov
add
mov
mov
test
mov
cld
mov
mov
inc
call
cld
cmp
aas
adc
jmp
adc
jmp
pop
inc
popa
mov
push
jmp
or
lock
and
jae
dec
jecxz
in
addr16
inc
inc
movsl
add
mov
and
push
fidivs
ficoml
mov
xor
add
fwait
adc
pop
cmp
imul
lcall
test
fs
inc
movsb
popf
test
mov
daa
xchg
and
sbb
xchg
or
clc
mov
pushl
cmpsb
add
fnstcw
xor
loopne
mov
pop
sti
gs
adc
push
mov
stos
dec
fsubl
push
jmp
push
mov
test
adc
jp
ljmp
or
ret
nop
jb
loope
std
aad
xor
repz
or
mov
mov
xchg
flds
pop
cmp
pop
dec
out
xchg
sub
fcomps
mov
mov
push
mov
hlt
repz
test
cmc
lds
adc
xchg
es
push
out
cmp
inc
les
lahf
jo
hlt
xor
fmull
xchg
stos
test
push
push
mov
stc
sarl
in
xchg
inc
mov
and
xchg
mov
xchg
mov
js
push
outsl
push
add
das
adcb
mov
cs
xor
jp
sub
dec
or
andl
test
sbb
pop
fimull
arpl
test
sub
push
pop
adc
push
jmp
adc
stos
rcrl
mov
enter
repz
mov
push
movb
mov
xchg
test
pushf
mov
or
or
xchg
mov
inc
cltd
jl
aam
jnp
jge
or
push
call
fcmovu
cwtl
lods
and
aaa
dec
xchg
popf
aas
and
jno
push
mov
fdivs
dec
push
fs
adc
lret
jae
push
and
pop
enter
xor
mov
mov
mov
ja
sbb
adc
lea
mov
into
xlat
je
loope
test
and
add
pop
mov
out
add
sbb
sub
sub
or
dec
xchg
adc
sub
fs
mov
mov
mov
mov
ret
adcb
fisttpl
push
sub
ja
mov
ret
out
adc
icebp
movsl
push
pushf
sbb
roll
rcrb
mov
mov
cmp
leave
sarb
and
lock
jo
mov
xor
into
cmpl
aad
and
inc
sbb
or
pop
pop
ret
addb
mov
repnz
pop
shr
incl
imul
cltd
jmp
push
into
shrl
lahf
stc
nop
jne
ja
xchg
inc
cwtl
pushf
insl
cld
adc
pop
push
mov
subl
cs
mov
mov
jl
push
pop
pmulhuw
xchg
sti
cmpsb
mov
sbb
sahf
insb
add
cmpl
movsl
testl
inc
xchg
push
mov
jno
cmp
push
adc
sub
push
fnsave
adc
and
add
add
inc
xor
cmp
pusha
adc
pop
sub
outsl
test
test
and
and
daa
cmpsl
cwtl
fsub
pop
andb
add
jae
adc
pop
scas
pop
rep
sbb
lock
push
cwtl
fidivl
cmp
das
lret
rcll
cmp
repz
ret
adc
dec
mov
jne
cmp
in
mov
enter
pop
stc
cs
sub
mov
movsl
mov
fstpt
cltd
leave
mov
mov
fistl
pushl
movsb
fadds
cmp
push
sbb
jge
fildll
fs
cmp
aad
mov
mov
xor
adc
lahf
dec
popf
xchg
cmp
loopne
mov
push
push
push
ljmp
movsb
jno
les
repz
or
push
into
mov
les
sub
sbb
scas
cs
sbb
in
dec
cs
push
mov
into
push
daa
mov
fwait
adc
arpl
rep
lods
sub
sarb
or
xor
pop
mov
scas
add
inc
jb
sub
pop
xchg
movsb
sahf
xchg
dec
loop
outsb
arpl
fwait
pop
cmp
sub
push
mov
aaa
add
lahf
imul
jle
inc
inc
shlb
ss
or
shll
and
jmp
adcl
scas
dec
ss
xchg
pop
ret
jle
xor
scas
push
jmp
mov
bound
not
push
lock
imul
push
add
ja
add
inc
lret
xor
sbb
movsb
popa
push
cs
push
sbb
or
cltd
movsb
pusha
sbb
dec
jmp
in
sbb
in
mov
add
xchg
xchg
ds
shl
iret
add
jg
cwtl
pop
or
push
sti
aad
sbb
gs
sahf
mov
cmp
fs
sub
rcr
int3
cltd
jne
adc
in
mov
sub
pop
sbb
push
inc
ss
inc
ret
dec
mov
xor
outsl
mov
cltd
roll
jb
mov
mov
cld
jne
push
in
adc
xor
xor
sbbl
lahf
sbb
test
lock
xchg
xchg
mov
sti
js
xchg
lods
shr
push
jmp
adc
pop
sub
xchg
out
es
pop
mov
inc
pop
nop
pop
pop
decb
fucomp
mov
dec
dec
addr16
std
add
mov
and
xchg
scas
into
mov
fs
push
pusha
push
xor
js
subl
pop
ret
xor
pop
or
cmp
call
and
fdivrp
loop
inc
andb
test
test
lea
add
adcb
push
jl
jp
pusha
les
add
cmp
xchg
mov
sub
pop
push
mov
bound
lock
add
sbb
jmp
xor
out
fistl
out
call
push
shlb
arpl
inc
inc
scas
cmpsb
test
mov
in
cmp
movsl
je
shrl
fisubrl
adc
mov
ss
push
jp
nop
sbb
or
mov
push
inc
sbb
sbbb
fcoml
cmp
pusha
inc
arpl
cmp
ss
stc
iret
ss
mov
imul
dec
cmp
pop
jae
pop
inc
lods
and
imul
inc
cld
dec
popa
mov
out
jo
scas
mov
and
or
ret
adc
lret
mov
stos
rcrl
imul
pop
rcrl
sub
mov
das
or
push
ret
aas
mov
out
clc
inc
cmp
xchg
in
xor
shlb
jecxz
push
mov
rclb
pop
mov
out
lods
popf
leave
pop
fisttpll
mov
and
fs
in
test
cld
xchg
pushw
pop
fwait
add
push
push
lds
sahf
lods
and
inc
xor
sub
adc
or
hlt
rcll
sti
mov
dec
loope
aas
push
leave
pop
js
xchg
roll
inc
sbb
add
insl
fwait
xor
push
jge
jp
xchg
add
add
lea
leave
push
push
cmp
push
sub
mov
scas
mov
xchg
cmpsl
pop
xor
sub
leave
ret
sub
lret
mov
sbbb
fisttpl
sbb
mov
out
mov
xchg
jae
inc
in
sbb
out
scas
inc
add
push
jae
push
lcall
inc
adc
mov
call
out
dec
add
aas
jle
xchg
inc
js
sub
sarl
cmp
pop
jb
pushf
bound
dec
loop
cmpsl
cltd
shrb
push
lods
cmp
jle
fdiv
pusha
xchg
popf
xor
push
fmull
rcll
inc
sbb
adc
jae
test
cmp
and
xor
cmp
jnp
sbb
loope
mov
mov
fidivrs
lahf
push
jmp
fisttps
or
stc
pop
cmp
pusha
cmp
daa
mov
lods
aad
mov
pusha
xchg
adc
fmuls
out
cmpsl
add
das
into
aam
ds
push
fisubrl
inc
insl
movsl
sub
pop
dec
mov
pop
les
test
outsb
sbb
daa
fisttpll
cmp
imul
clc
into
jnp
cmpsl
inc
imul
jmp
and
mov
sti
movsl
jo
and
scas
dec
out
sbb
add
push
pop
pop
cmpsb
add
jp
cmp
inc
iret
push
mov
in
in
rclb
insb
xchg
mov
xchg
push
pop
mov
imul
push
cmp
jo
push
stos
sub
push
push
or
into
ja
jp
mov
test
mov
sbb
mov
or
adc
test
fcompl
adc
add
xor
xchg
ret
cmp
icebp
push
push
sbbb
out
jp
and
aad
lock
rorl
push
push
add
add
test
out
xor
adc
imul
xchg
jno
dec
aad
arpl
movsl
std
popa
adcl
cli
movsl
push
test
mov
test
lret
jo
jbe
sbb
cwtl
jb
repnz
pop
pop
rolb
out
in
shlb
lds
fnstenv
sbb
push
push
adc
frstor
imul
out
push
inc
call
cmp
xor
in
and
or
cmp
xchg
movsl
icebp
cmp
rorb
mov
mov
nop
cs
ja
les
cmp
imull
stos
dec
mov
scas
sbb
sbb
popa
sub
fwait
xor
mov
pop
push
or
out
inc
push
xchg
idivl
xchg
jge
fisttpl
movsl
divb
iret
xchg
in
lahf
pop
loopne
cmp
mov
insb
cmp
sahf
sub
pop
cltd
jne
or
mov
lcall
movsl
mov
sub
in
mov
push
dec
cs
adc
fnsave
clc
adc
adc
popa
push
lock
mov
gs
adc
push
in
das
mov
rcll
push
popf
in
mov
inc
fcoml
jo
out
mov
push
leave
cmpsl
mov
and
mov
mov
and
daa
jle
std
ss
jnp
lahf
mov
scas
sbb
add
movsb
and
push
fstps
ret
add
push
xor
pop
lods
cvtps2pi
lea
mov
mov
sbb
lahf
out
push
sbb
and
xchg
adc
outsl
rorl
mov
int
fucomp
inc
xchg
adc
fildll
jmp
sbb
ret
fisubs
daa
push
jnp
adc
aas
sbb
and
outsb
stos
sbb
test
arpl
or
mov
pusha
mov
mov
xchg
mov
pop
sub
nop
pop
insl
pop
sbbb
movsb
nop
push
fisttpl
sub
in
adc
mov
ljmp
push
movsb
xchg
stos
in
jae
dec
sub
pusha
xor
dec
and
cmp
dec
mov
push
pop
push
ret
and
and
and
test
pop
ja
scas
adc
inc
pusha
dec
sbb
dec
imul
cmpsb
stc
inc
aam
pop
push
aad
and
enter
jae
mov
rcrb
mov
adc
loopne
xor
push
icebp
mov
pusha
repnz
dec
or
push
cld
stos
xchg
test
sahf
push
jp
mov
push
addr16
shll
lahf
lock
mov
mov
stos
mov
mov
jmp
ror
push
jge
push
mov
mov
push
and
addr16
dec
fwait
cmp
subl
mov
inc
fstpt
mov
test
mov
add
jae
je
out
fwait
sbb
clc
cmp
dec
mov
movsb
call
pop
mov
dec
ret
mov
shll
xor
cltd
and
xor
cwtl
ja
int
or
push
dec
pop
xchg
add
pop
sahf
lret
das
call
jmp
or
jl
aas
lods
cmp
adc
sti
ja
xchg
pop
int
ret
cmp
fistps
pop
push
cmpb
mov
dec
rcl
dec
data16
sub
mov
or
adcb
sub
ja
xchg
xchg
cmpl
sub
loop
xchg
dec
test
or
jle
shll
sbb
fistpll
cmp
xor
push
adc
ds
jecxz
dec
fwait
insl
lods
jns
and
sbb
sub
stos
iret
xor
inc
sti
mov
mov
and
lahf
lret
iret
xchg
repnz
jmp
push
rorl
cld
pop
mov
sub
xor
inc
sbb
repnz
xchg
fisttpl
pop
jne
pop
mov
sti
inc
ja
xchg
nop
adc
fucom
push
inc
pusha
ss
stos
std
pop
xchg
loop
cmp
push
xor
inc
scas
loop
mov
push
jecxz
push
outsb
push
and
notl
mov
lock
add
lret
fwait
cltd
fadds
mov
dec
cmp
xorb
pop
jmp
shrb
add
dec
aam
scas
jo
push
mov
scas
add
lret
ss
aad
stos
xlat
lock
icebp
lock
jae
dec
data16
int
add
fnstenv
sbb
das
scas
sbb
lret
lock
clc
push
add
fldenv
cmpsb
push
add
sar
adc
fdivrl
bound
loope
in
outsb
and
test
es
pop
js
jae
inc
repnz
in
dec
sub
enter
fstpl
fistpl
pop
test
cwtl
mov
or
in
push
mov
sbb
mov
mov
push
lods
mov
nop
jmp
xchg
pushf
cmp
push
rorl
xor
adc
scas
fs
mov
cmp
ss
int3
aas
mov
in
test
ret
inc
sbb
in
mov
mov
xor
mov
or
in
dec
fsubrp
sbb
mov
mov
out
and
sbb
xor
jge
loope
adcl
cltd
xchg
mov
cmp
sub
prefetcht0
sbb
sbb
inc
es
bound
cmp
xchg
mov
dec
pop
loop
lahf
dec
push
pcmpeqb
sub
cmpsb
dec
inc
mov
jmp
pop
test
mov
movsl
cmc
inc
cmpsl
pop
roll
fdivrl
pop
int3
jb
adc
std
push
xchg
fldl
in
mov
add
nop
insb
cmp
add
dec
icebp
fwait
xor
test
mov
lea
fnstcw
jns
dec
cmp
mov
add
sahf
or
bound
mov
xchg
call
mov
loopne
inc
xchg
pop
das
repnz
add
dec
pop
mov
call
push
push
add
dec
xor
push
inc
out
adcl
fidivl
add
cmp
call
iret
jo
mov
and
xchg
xlat
sti
mov
lahf
stos
jg
mul
inc
add
mov
and
push
les
in
addr16
inc
mov
js
loop
push
into
addr16
xchg
xchg
in
dec
faddl
or
inc
arpl
mov
dec
xchg
mov
add
sub
lods
inc
dec
sbb
sti
push
and
inc
sbb
notl
pop
ret
pop
outsb
jp
add
in
and
adc
xlat
pop
cmp
test
mov
shll
xor
sarl
mov
jmp
addr16
push
dec
xchg
rcr
shr
cs
inc
test
std
aam
cmp
dec
test
ret
cs
adc
mov
loopne
stos
aaa
or
jns
xchg
out
sbb
in
push
push
movb
inc
scas
ja
fstpl
out
or
mov
out
lret
jge
or
or
and
add
out
outsb
shlb
dec
pop
cmp
test
out
or
loop
add
inc
insl
lea
mov
lret
jbe
push
add
orb
roll
ljmp
xchg
aas
push
jle
scas
js
aaa
and
jge
mov
dec
push
mov
inc
dec
jg
lahf
sbb
dec
inc
imul
push
mov
arpl
fldt
mov
xchg
dec
xchg
out
iret
clc
push
cltd
movsl
mov
imul
test
int3
pop
ret
sbb
fs
push
imul
sbb
neg
sbb
adc
stc
inc
mov
and
out
aas
cltd
hlt
into
iret
mov
adc
xchg
roll
jno
iret
mov
pop
mov
pushl
or
push
jg
cmp
xchg
mov
add
jno
mov
mov
mov
inc
std
sbb
mov
int3
pop
jmp
sahf
cli
pop
fistl
lods
repz
cltd
orb
mov
iret
or
sti
pop
int
stos
clc
imul
mov
push
divl
pop
outsb
sbb
adc
mov
cmp
and
popa
es
movsl
jae
jmp
mov
shll
mov
jns
in
xor
arpl
rorb
lret
popa
dec
push
inc
xchg
inc
or
imul
rolb
addr16
into
shll
jbe
xchg
aas
lods
pop
push
icebp
scas
cmc
pop
push
dec
jmp
inc
sub
push
mov
cmp
sbb
loopne
mov
adc
test
mov
dec
mov
jmp
in
adc
dec
dec
xor
mov
icebp
test
adcl
das
popf
and
sahf
popf
arpl
mov
sbb
jnp
dec
and
dec
jecxz
icebp
bound
sub
sub
push
mov
scas
xchg
jb
sbb
stc
cli
pop
or
mov
cmp
mov
xor
xor
push
inc
mov
pop
je
jne
daa
adc
sbb
aas
sbb
or
mov
addl
dec
jnp
cli
mov
push
sahf
xchg
lea
xchg
xor
clc
nop
rolb
imul
or
sbbl
cmp
jmp
add
add
dec
test
fcmovnbe
push
loop
nop
xchg
mov
pushf
mov
int
jb
jbe
push
cmpsl
jmp
mov
jl
int
jg
push
pop
mov
xor
test
popa
or
jb
jp
inc
lea
insl
or
nop
inc
hlt
pop
ja
inc
inc
cmp
in
pop
xor
mov
xchg
lcall
xchg
int
fcomip
xor
and
push
jnp
or
dec
mov
dec
lahf
jb
out
inc
jne
mov
dec
lret
mov
or
mov
mov
in
cmpsl
sar
push
xchg
cs
scas
test
sub
adc
sub
pop
add
int3
inc
jmp
es
jno
leave
int3
pop
ja
or
sub
sub
in
test
add
sub
jp
mov
jno
cmpl
add
push
sahf
pushl
mov
insb
test
loope
inc
imul
in
int
int
inc
lods
jns
pop
jp
dec
pop
test
push
mov
in
sub
cmp
jge
sub
adc
jbe
stos
rcrl
xor
pop
mov
enter
daa
loopne
cmpl
mov
adc
sub
or
popf
ret
sub
and
lea
das
dec
mov
xlat
mov
test
adc
adc
jle
and
movsb
xchg
rcrb
add
dec
stos
add
ja
cmp
fimull
test
gs
pushf
nop
nop
add
hlt
xor
fimuls
outsl
js
jne
outsl
and
dec
ds
xchg
mov
push
mov
arpl
push
dec
aaa
mov
lods
cli
cmp
xlat
into
push
pop
push
jg
repnz
cwtl
and
and
mov
jp
insb
aad
adc
lods
fiadds
mov
inc
lock
jecxz
mov
xor
xor
cwtl
jle
jo
arpl
mov
hlt
sbb
cmc
xchg
adc
sub
in
push
adc
and
mov
push
sub
jmp
adc
aas
sbb
das
fdivs
mov
jbe
insl
loop
int
scas
mov
add
xor
mov
jecxz
inc
repz
jo
jno
in
orb
daa
cltd
add
js
nop
pop
lock
into
adc
mov
loope
mov
add
and
mov
mov
dec
add
jne
in
xchg
or
shlb
movsl
clc
ja
jmp
mov
ficoms
and
andb
jmp
inc
cs
push
aas
xor
add
outsl
enter
mov
jg
and
or
mov
out
notb
pop
repz
fdivrs
enter
sub
pusha
cli
mov
pop
inc
inc
mov
clc
repnz
jbe
sbb
stos
clc
neg
mov
ds
mov
lret
std
xlat
jmp
or
out
lcall
and
or
pop
loop
shll
xor
daa
mov
incl
or
in
add
cmpsb
inc
mov
js
xorb
flds
iret
inc
mov
leave
lock
mov
icebp
sbb
mov
jecxz
sbb
shrl
sbb
push
mov
sbb
add
cmc
adc
adc
mov
lea
add
jp
rcrl
je
aad
test
mov
aas
cmp
jns
and
scas
shlb
jle,pn
stos
test
push
scas
in
je
cmc
icebp
mov
jno
movsb
out
test
sbb
pop
sbb
movsl
adc
add
pop
mov
icebp
loope
xchg
or
mov
mov
sbb
add
ja
push
fimuls
ret
xchg
fists
push
int3
lret
movsl
outsb
cmc
iret
decb
test
mov
xchg
sbb
je
jne
ret
pop
cs
je
lcall
push
filds
into
dec
lods
aad
ret
das
scas
pop
out
js
hlt
sbb
add
sbb
scas
sub
mov
bound
pushf
mov
nop
add
jno
mov
sbb
cmp
roll
mov
js
rorl
xchg
cmp
loope
cmp
mov
and
dec
mov
jnp
lret
ret
cld
imul
push
lds
pop
outsb
inc
repnz
and
sbb
ds
xchg
mov
mov
or
adc
mov
adc
inc
and
sbb
add
popw
jecxz
pusha
mov
imul
jmp
mov
rcll
ret
inc
ss
add
push
repz
test
push
aam
add
push
mov
mov
mov
frstor
xchg
stc
jge
fwait
pop
xor
jge
sub
lods
sti
adc
movsb
mov
or
xor
hlt
xor
mov
push
fucomi
out
in
stos
or
add
mov
sub
icebp
adc
pusha
mov
lods
out
cwtl
jp
movsl
adc
popf
pop
fs
xchg
fiadds
fsubp
xor
enter
lock
add
cmpsl
stos
in
stos
pop
lods
mov
fwait
in
fsub
push
cmpsl
add
and
sub
mov
mov
into
push
sbb
inc
icebp
sub
test
jnp
imul
pop
and
and
and
ljmp
inc
mov
hlt
aad
mov
bound
jo
xchg
jmp
fisubrs
cmp
xor
shlb
bound
mov
shlb
pop
push
jmp
or
mov
ss
cli
pop
in
jne
arpl
fwait
or
pop
int
sbb
push
je
and
subb
mov
mov
lods
mov
loop
mov
cwtl
xchg
fs
fbld
inc
call
xchg
pop
test
fwait
mov
push
ret
sub
cs
lods
adc
cmp
fcmovnu
pop
out
aas
pop
dec
adc
dec
pop
lret
call
inc
adc
xor
cmp
mov
mov
fdivl
lds
xchg
lds
test
fs
mov
idiv
add
mov
sarb
jg
add
lahf
daa
xlat
scas
sbb
xchg
callw
mov
jb
insb
xor
fdivl
mov
jl
mov
sbb
into
adc
mov
ljmp
das
inc
dec
sub
mov
mov
icebp
or
mov
ds
sbbl
sbb
dec
rcr
lret
pop
or
aad
and
sti
push
test
xor
push
clc
fisubs
mov
jbe
push
jp
xor
or
adc
dec
add
es
push
mov
inc
sarl
outsl
shll
add
inc
inc
sbb
add
ficoml
push
mov
push
jmp
jo
mov
out
cmp
dec
mov
or
push
cmp
or
inc
negb
jp
and
pop
push
mov
scas
jmp
cmp
pcmpeqd
scas
cmpl
xlat
in
pop
mov
lock
cld
shrb
pop
or
mov
dec
enter
lret
movsl
jo
cmpsb
call
adc
mov
sbb
cltd
sbb
fs
in
sub
mov
ret
push
daa
and
xor
sbb
mov
aam
in
sahf
sub
inc
int
ret
and
repnz
xchg
insl
inc
xor
rcr
or
andl
mov
sahf
popa
test
ljmp
lahf
mov
inc
jno
movsl
push
pop
add
xor
push
fsubl
pushf
test
mov
add
testl
addr16
bound
push
test
push
jl
js
pushf
clc
fwait
jno
dec
loopne
repnz
adc
push
out
rclb
and
insl
fildl
insl
adc
mov
pop
cmp
cmpsb
jno
xchg
jb
push
shll
jl
shlb
mov
outsl
aaa
hlt
push
rclb
les
ficoms
fstp
xor
pop
push
adc
mov
iret
es
test
push
les
or
test
lcall
enter
pop
mov
mov
xchg
adcl
adc
fsubl
cmp
nop
jno
dec
outsl
cmc
mov
cmp
mov
dec
out
test
nop
sbb
in
movsb
out
xor
xor
mov
jl
inc
push
mov
lds
jo
int3
cmp
mov
sub
mov
rclb
enter
pop
xor
mov
mov
stc
xor
cmp
xchg
adc
in
lret
movsl
xchg
aam
insb
push
rorl
xlat
pop
or
int3
dec
sti
pop
inc
mov
mov
cmc
pop
add
sarl
or
cli
shll
jo
xor
call
lods
out
pop
test
int
cwtl
int3
mov
insl
int
add
mov
xchg
mov
jo
pushf
cwtl
jp
mov
xor
sub
pop
pop
lret
dec
mov
mov
mov
leave
lea
xchg
stos
mov
std
add
jo
jbe
stos
loopne
stc
sbb
lcall
mov
in
test
sahf
inc
push
ljmp
test
mov
mov
mov
stos
mov
popf
push
mov
out
dec
cs
in
add
pop
sub
push
and
leave
rcrb
xor
inc
into
lods
enter
push
dec
pop
sahf
and
loopne
add
pop
ds
imul
jb
mov
fimuls
mov
js
jns
xor
mov
nop
adc
add
jo
rcrb
adc
push
andb
or
out
mov
sub
bound
sbb
push
inc
orl
or
xchg
int
mov
mov
cmp
sbb
xlat
aaa
jb
fs
mov
fisubrl
inc
and
ja
pop
pop
rclb
pop
cwtl
testl
in
out
push
hlt
sbb
xchg
sub
adc
arpl
mov
xchg
dec
jae
xchg
testl
pop
adc
jnp
xor
xor
data16
cmc
mov
scas
decb
and
call
mov
adc
push
mov
add
push
mov
cmp
mov
push
lret
mov
xor
out
call
jbe
iret
into
fbstp
sarl
jbe
stos
pushf
cmp
push
mov
jne
fwait
jbe
pop
insb
in
daa
mov
outsb
ror
popl
fdivr
cmp
pop
pushf
sbb
imulb
cmp
xchg
xlat
rcl
xchg
xor
pop
in
es
push
mov
and
sbb
aam
inc
xor
mov
aam
add
mov
push
call
sbb
scas
push
add
pusha
mov
add
insl
xchg
or
aas
stos
ja
int
test
ljmp
add
pop
imul
jae
stc
mov
xchg
push
mov
lods
sahf
fs
or
popa
mov
pop
scas
jo
jp
mov
stc
jp
test
dec
add
movsb
lret
addr16
aas
fimuls
push
out
fcoml
in
std
ljmp
data16
xchg
mov
and
mov
dec
jbe
scas
int
ret
cld
loopne
sub
adc
repnz
xchg
mov
fstpl
jmp
pop
push
pop
cmp
sbb
jo
psubw
and
cmp
sarl
imul
mov
mov
stc
jb
cs
pushf
outsl
and
in
lds
movsb
and
addb
sub
rorl
jg
mov
pop
mov
mov
push
insb
stc
mov
xorl
xchg
mov
push
jnp
mov
pop
cmpsl
xchg
inc
out
or
xor
repnz
iret
out
aaa
push
mov
in
xlat
js
or
call
fwait
push
repz
pusha
cwtl
hlt
dec
adcb
pop
xor
dec
sahf
xchg
cli
loope
and
mov
out
rep
pushf
push
push
add
fsubrl
in
jo
nop
pop
mov
or
mov
stos
lfs
lods
mov
inc
push
daa
ja
aas
jp
mov
fsub
mov
in
jl
cwtl
mov
jg
adc
movsb
jo
jp
or
mov
push
push
rcrl
xor
out
mov
arpl
dec
leave
leave
out
inc
adc
and
mov
jno
rcll
dec
arpl
and
lods
int3
xlat
mov
sub
lds
push
loopne
sub
pop
lea
pusha
mov
scas
and
pop
jb
xchg
and
and
pop
repz
push
sbb
pop
pop
das
rolb
arpl
inc
test
xorl
adc
inc
decb
pop
outsl
loop
dec
adcl
xor
add
addl
jno
and
stos
int3
cli
outsl
imul
mov
sbb
cmp
xor
mov
jp
adc
pop
cs
cmp
and
std
mov
add
mov
adc
rclb
insl
pop
andl
push
mov
sbb
sub
sbb
pusha
aaa
xchg
pop
push
xor
jae
adc
faddl
cmp
loope
sbb
mov
sti
cmpsl
fcmovne
in
lds
cltd
popa
int
aam
lcall
xchg
in
stos
cmpsl
xchg
sub
imul
pop
repz
mov
jle
inc
insl
inc
mov
jle
in
push
ja
inc
sbb
movsb
int3
lods
cwtl
jl
add
xor
sub
jle
mov
ja
push
pop
rcrl
outsb
cmp
cmpsl
ss
insl
or
sub
xor
xor
mov
repz
pop
push
jge
insl
sbb
pop
rclb
dec
lods
imul
out
mov
and
pop
xor
imulb
jmp
lret
jmp
cmp
push
popf
sub
pop
mov
fisubrl
add
sub
pop
mov
and
jns
in
mov
iret
je
inc
adc
jle
fstpl
mov
movsl
inc
iret
imul
cmc
loop
dec
sub
je
fidivl
outsl
pop
aad
in
aas
sub
lods
cli
movsl
stos
fbstp
fwait
jg
cmc
jle
ss
aad
pop
mov
scas
pop
hlt
mov
xchg
loopne
mov
loop
test
roll
dec
psrad
icebp
out
pop
lret
sarb
add
and
mov
lock
xor
divb
dec
cmp
xchg
xorb
rclb
int3
fwait
xchg
stos
xlat
xor
rclb
jecxz
out
std
pop
add
ljmp
xor
enter
sbb
add
add
icebp
test
mov
inc
stos
addr16
aam
fwait
addb
and
movsb
mov
pop
fwait
addr16
fcoms
movlps
nop
mov
icebp
cmpsl
test
test
call
cmp
inc
xchg
jno
xchg
lods
fidivrl
data16
xchg
std
lret
shll
call
or
ror
mov
fnstenv
cmp
mov
out
dec
dec
imul
jp
cmpsl
adc
fcomip
out
or
incl
out
inc
push
pop
mov
stos
jnp
pop
xchg
arpl
mov
cmp
or
adc
push
xchg
mov
cmpl
adc
scas
iret
in
adcb
cmpsb
stos
nop
pop
cmp
or
ret
nop
sbb
fnstenv
xchg
int
arpl
adc
pusha
xchg
cmp
or
out
aaa
fdivp
std
xchg
push
mov
adc
dec
inc
js
repnz
fnstenv
cmp
jmp
sub
jmp
in
into
mov
imul
sbb
pop
mov
push
rcl
push
and
mov
loope
fiaddl
mov
mov
pop
shl
int3
cmpsl
call
je
rorb
jb
iret
xor
or
out
lods
std
mull
scas
out
jns
adcl
lahf
push
mov
repz
js
jmp
mov
loop
push
notb
loopne
in
lret
cltd
xor
or
push
fwait
sbb
or
push
cwtl
inc
enter
arpl
movsb
dec
jno
push
mov
sbb
fdivrp
insl
out
cmpb
adc
mov
sub
stos
mov
xabort
adcl
sti
lods
les
cli
mov
mov
mov
sbb
bound
out
call
push
std
mov
sub
popa
jbe
jns
iret
aam
scas
push
call
cmp
inc
jmp
mov
jmp
and
xor
push
incb
rcl
fdiv
pop
mov
int
andl
test
xor
or
cs
fcom
in
dec
cs
adcb
mov
push
loope
xor
push
jo
or
test
in
adc
cmp
cmp
mov
jns
add
fsubs
push
mov
sbb
insl
sbb
or
xor
int
mov
lds
xor
and
push
das
push
xor
jl
in
jb
lock
cmpsb
test
mov
mov
xor
and
mov
xchg
aad
cmp
sbb
adc
pusha
dec
popa
dec
sub
mov
in
pushf
xchg
dec
push
fisubs
mov
jg
mov
stos
xchg
adcl
adc
int
outsl
pop
pusha
daa
test
push
xchg
shll
push
push
pop
mov
loopne
mov
movsl
clc
xchg
es
mov
adc
mov
popf
ljmp
hlt
dec
or
call
mov
imul
mov
outsb
ds
and
xchg
mov
add
dec
test
out
mov
loop
xchg
cmpsb
dec
rorl
rclb
pop
arpl
lods
pop
fs
or
jecxz
cli
bound
mov
out
sub
cmc
cmp
mov
and
push
adc
adc
rorb
lods
and
fildl
cmp
jbe
inc
jne
sahf
sub
stc
shrl
lea
mov
in
fmuls
adc
aam
cld
inc
mov
out
fstpl
pop
insl
bswap
pop
aas
or
and
jmp
mov
cmpsb
push
inc
xchg
push
xor
add
cmp
and
mov
adc
ret
or
ljmp
adc
and
aas
push
popa
xchg
sub
sbb
movsb
inc
cmp
ss
cmp
xchg
push
popa
orb
xchg
mov
inc
lods
mov
xor
jl
pop
pop
inc
in
rclb
cmp
out
pop
cli
outsl
ss
in
leave
pusha
test
popa
or
inc
loop
adcl
enter
add
out
hlt
xchg
repnz
sbbb
inc
push
or
scas
mov
std
push
in
mov
mov
xor
loopne
dec
mov
repz
dec
cmpsb
in
mov
jge
sub
out
lods
xchg
adc
test
sub
cwtl
movl
xchg
out
loopne
cwtl
ds
mov
fcoml
insl
mov
push
in
xor
sbb
js
aam
or
pop
adc
jecxz
fnstsw
jge
xor
lcall
rolb
xchg
cltd
mov
add
subl
push
jbe
test
stos
mov
fs
repz
cmp
fnstsw
not
gs
mov
jo
js
enter
dec
mov
sarl
sub
mov
loop
or
ja
adc
test
adc
aaa
pop
pop
lds
jns
pushl
pop
popa
cld
mov
inc
jae
push
loope
mov
sub
push
dec
test
icebp
cmp
mov
adc
mov
mov
adc
jae
ret
inc
cld
imulb
int
add
out
xor
cld
rcrl
fcoms
jecxz
jne
testb
inc
addr16
mov
decb
ret
mov
cmp
mov
add
sbb
fcmovne
add
arpl
jmp
and
insl
push
cmp
sar
xlat
dec
or
ss
data16
cmpl
popa
sbb
insb
addr16
xchg
sbb
negb
sub
add
in
addr16
shrb
test
mov
and
mov
fisubs
jb
sub
sar
mov
push
push
cmp
adcl
nop
push
adc
imul
and
xlat
dec
jno
jp
and
inc
rcl
stos
mov
inc
jae
mov
sbb
sub
rcll
add
adc
movsb
rcrb
mov
jae
js
push
orl
dec
movsb
jp
dec
imul
fsubl
pop
cmp
inc
icebp
fisubs
icebp
rcr
or
cltd
xchg
into
call
imul
sarl
scas
xchg
cwtl
mov
pop
aaa
jge
pop
outsl
scas
or
mov
rolb
dec
popf
and
sub
movsb
jmp
dec
xor
mov
addl
iret
xchg
xorb
stos
shll
xor
mov
cwtl
inc
mov
stos
js
orb
test
mov
inc
add
inc
dec
add
push
pop
jb
in
in
inc
fidivrs
mov
xor
and
inc
cmp
cmpsb
lahf
addr16
or
push
repz
cmpsl
ds
jo
fstpl
mov
pop
std
movsb
and
movsl
cmp
mov
bound
fisttpll
xorl
negl
mov
inc
cmp
je
jecxz
dec
pop
pop
data16
cmpsb
out
fisubs
xor
mov
lea
pop
mov
insl
mov
scas
mov
lahf
ret
das
aad
mov
mov
mov
mov
ljmp
es
xchg
mov
loopne
in
js
loop
adc
daa
pusha
xchg
cmp
mov
loop
lods
jo
stos
xchg
push
std
or
or
push
add
popa
cmpsl
adc
fildll
lret
xlat
mov
add
pop
in
push
scas
in
inc
data16
sub
adc
aad
scas
dec
sbb
cmp
push
aas
mov
in
adc
sub
test
stc
loope
loope
loopne
or
mov
xchg
add
sub
jle
cli
fidivrl
xor
or
scas
pop
mov
sbbl
and
scas
and
push
sub
mov
fadd
std
cmp
ljmp
jmp
xchg
rcrb
jno
mov
pop
leave
inc
xchg
add
dec
sbb
mov
push
or
pop
leave
int3
adc
mov
mov
xchg
js
push
cmp
arpl
stc
jecxz
sahf
sbb
inc
xchg
xchg
dec
jae
fs
inc
jne
sub
add
pop
ljmp
fstl
inc
negb
stc
mov
mov
and
mov
ljmp
sbb
sub
rcll
adc
cmp
sbb
fildll
in
adc
mov
jnp
or
test
pop
sub
mov
out
and
or
loop
xor
mov
nop
movsb
out
addl
mov
clc
sub
inc
sbb
mov
aaa
aam
mov
insb
data16
dec
and
std
insb
mov
ret
insb
imul
in
repnz
in
push
mov
mov
jb
out
mov
add
movsl
xchg
dec
insl
inc
push
test
xor
sub
fisttpl
jae
movb
ds
sub
cmpb
fldenv
xor
mov
lret
mov
jbe
xor
adc
into
scas
insl
in
stos
xor
mov
pop
mov
in
inc
fdivs
addb
jbe
push
mov
cs
test
fists
in
sbb
mov
pushf
inc
or
mov
aaa
push
xchg
pop
orb
mov
rcll
lea
rol
jmp
ss
hlt
push
dec
jp
mov
bnd
or
adc
imul
jle
dec
popf
jecxz
xor
lea
adc
pushf
fistps
popf
out
sbb
lods
add
or
pop
cmpsl
jae
add
adc
test
jp
mov
lcallw
shll
sarb
loopne
mov
mov
jp
mov
push
push
fidivs
ret
and
popa
jne
sub
lea
mov
daa
bound
popf
mov
cwtl
xchg
in
hlt
inc
mov
jg
xor
movsb
adc
xchg
mov
push
and
push
es
in
sahf
mov
cwtl
adc
shr
popf
adc
xor
jge
popf
repz
mov
ret
shlb
insb
gs
pushf
adc
test
and
sub
adc
fstpt
push
sbb
push
stc
out
lock
push
and
movd
lret
sub
sbb
subl
das
ljmp
fwait
sub
addb
jecxz
ret
testl
movups
aaa
dec
jg
roll
push
jne
mov
in
fidivl
adc
notl
jmp
repnz
sub
sub
idivl
aad
lods
scas
repz
outsl
pushf
cld
cmp
fldcw
loopne
jmp
dec
mov
lods
in
gs
inc
ja
xlat
test
cmp
inc
mov
dec
int
enter
mov
pop
mov
subb
test
or
mov
sub
pop
lock
add
and
jle
push
and
movsl
mov
adc
fcmovnu
jbe
and
aas
mov
jbe
int
dec
xchg
testb
pushf
sbb
cld
movsl
test
ficoms
add
sub
mov
inc
movsl
stc
push
lahf
dec
insl
pushl
ds
das
mov
mov
roll
cmc
add
bnd
mov
adc
lcall
nop
repz
mov
mov
pusha
cld
jnp
add
mov
movsl
push
push
jle
xlat
sarl
xor
sar
and
dec
inc
adc
push
out
outsb
or
adc
jne
fisttpll
scas
sbb
pop
fimuls
flds
push
dec
arpl
mov
jl
inc
mov
arpl
dec
adc
xchg
jae
xchg
adc
clc
and
add
into
lds
mov
insb
cmp
xor
jb
or
dec
push
sbb
dec
test
insb
imul
call
pop
pop
jl
xchg
xor
in
shll
xchg
scas
cmp
lds
pop
mov
pop
adc
into
inc
out
mov
aaa
and
jl
jl
pop
dec
jae
in
insl
clc
cmc
mov
cmp
mov
cmp
ds
jmp
negl
in
ja
jo
jmp
sbb
repz
or
scas
lock
push
std
add
in
sbb
in
imul
mov
imul
jmp
or
test
sbb
push
inc
mov
js
test
ret
lcall
push
dec
xor
nop
lods
sub
test
out
shll
fxtract
cmpsl
pushf
mov
sub
push
aad
shrl
pop
cmp
adc
rcrl
dec
mov
xchg
stos
dec
and
movsl
dec
mov
ja
pop
les
jmp
sub
and
cmp
addr16
jle
mov
ss
movsl
pop
mov
cltd
out
xchg
sub
sbb
cmp
mov
mov
loopne
jbe
insl
call
ret
cmc
fcomps
cmp
ret
in
mov
icebp
inc
int3
xor
mov
inc
les
jb
xor
stos
sar
mov
add
inc
mov
dec
jno
pop
es
adc
xor
adc
andb
roll
mov
pop
and
mov
fildl
mov
push
jne
fsts
xchg
add
pop
ljmp
and
out
xor
xchg
ss
test
fld
shlb
push
push
pop
dec
and
daa
mov
ss
fidivrs
loope
pop
hlt
pop
pop
xlat
jbe
jnp
sub
pushf
inc
sbbl
cwtl
jp
sbb
popa
shll
subb
pop
and
xchg
lret
add
cld
cmpsl
adc
movb
jno
mov
fldcw
sub
lods
mov
xchg
fcomps
aam
fcomps
sub
addl
aam
cwtl
sub
fchs
adc
aad
and
adc
push
cmp
mov
jle
sub
xchg
pusha
and
and
pop
frstor
cmp
jnp
andl
sbb
xor
jbe
sbb
push
aaa
dec
mov
mov
fdivl
fsubs
lods
adc
push
in
adc
push
mov
loope
jmp
lret
filds
mov
shlb
jg
sub
push
dec
mov
test
call
add
mov
mov
out
pusha
cmp
xor
mov
inc
nop
mov
push
sbb
jl
or
aaa
das
or
popa
into
inc
adc
scas
adc
mov
or
mov
mov
imul
hlt
aas
icebp
fadds
inc
fdiv
ret
xor
sbb
in
popf
push
lods
mov
mov
std
xor
pushf
and
or
loopne
popf
sti
push
in
jge
bound
and
cmp
les
jb
pop
mov
cmp
inc
adc
fs
icebp
cltd
mov
push
xor
add
mov
pop
int3
testb
lea
les
outsb
jo
loopne
icebp
gs
dec
dec
push
xchg
inc
pop
and
and
cmp
xor
out
sbb
or
mov
lock
daa
addb
pop
lock
sti
rolb
add
lea
and
push
ret
mov
mov
cltd
inc
add
repz
shll
pop
cmpsb
pushf
mov
and
pop
and
lahf
int
sbb
pop
mov
xor
clc
mov
pop
std
dec
ja
mov
movsb
adc
negl
sahf
xor
das
sti
xchg
and
sbb
xlat
popa
jecxz
or
pop
push
addr16
cmpl
arpl
push
xchg
xor
adc
repnz
enter
js
add
and
sbbl
aaa
mov
outsb
es
push
jb
lahf
and
xor
loope
aad
xchg
or
fidivl
cli
adc
pushf
mov
nop
mov
ret
test
jge
sbb
push
je
sub
mov
bound
shrb
adc
mov
lods
pop
xorl
imul
cmpsb
mov
inc
mov
mov
jmp
add
ret
dec
pushf
js
inc
pop
aad
jl
movsb
dec
push
push
clc
push
lahf
shrl
and
bound
icebp
cmp
mov
loope
xchg
adc
cld
das
out
mov
push
cmp
je
mov
inc
enterw
adc
pop
movsb
insb
cli
dec
ret
pusha
mov
inc
push
pop
insb
cwtl
and
lahf
imul
cmp
xchg
int
and
jbe
add
xor
test
inc
dec
and
data16
cltd
fisubl
aaa
scas
jae
arpl
jg
loopne
sar
repz
add
sbb
push
sub
sub
mov
adc
push
sbb
pop
jo
cmpl
cmpsb
enter
outsl
dec
and
fsts
sub
js
inc
insl
movsl
bound
popa
add
into
dec
and
and
pusha
repnz
aaa
dec
inc
mov
pusha
es
xor
decb
push
js
mov
pop
adc
popf
inc
fldenv
scas
fnclex
test
push
into
mov
jl
cmp
arpl
fdivl
pushf
les
sahf
xchg
xchg
stos
push
push
adc
je
xchg
repnz
imul
push
and
mov
lret
pop
mov
inc
jb
int3
cmpsl
dec
test
xchg
lret
out
xor
cmp
jbe
fs
ret
lods
orps
stos
pop
mov
or
enter
decl
pushf
and
cmpsl
faddl
test
xchg
js
push
mov
pop
or
xlat
scas
dec
jns
pop
shll
scas
jnp
inc
adc
dec
ljmp
dec
test
enter
push
aas
pop
or
pop
add
lods
rolb
popf
mov
inc
adc
cmpsl
out
out
and
mov
out
scas
jno
mov
loope
pop
lret
nop
inc
aam
daa
popa
in
xchg
outsl
popl
je
mov
jne
xor
fsubs
mov
lcall
dec
mov
push
fistpll
cmp
cmp
cmc
inc
mov
loopne
testl
negl
ret
jae
mov
icebp
mov
pop
in
pusha
ds
mov
loopne
in
fdivrl
ret
and
add
xor
gs
shl
add
bound
inc
test
mov
mov
into
ret
ljmp
stos
or
sbb
mov
jne
jmp
cmp
ret
test
and
in
xlat
xor
scas
xor
or
rclb
push
lods
imul
push
mov
push
das
fcom
mov
ljmp
jmp
in
pop
jae
mov
dec
and
mull
mov
test
inc
dec
push
mov
push
xor
hlt
dec
gs
inc
inc
loope
ret
mov
xchg
in
cmp
cmc
dec
mov
hlt
cmp
mov
mov
dec
and
mov
cli
inc
repz
xchg
call
xchg
pop
fimuls
mov
int3
sub
jp
js
adcb
ficoms
xor
loope
xchg
pusha
iret
mov
rolb
dec
sti
mov
idiv
test
call
push
push
daa
or
pop
inc
push
mov
mov
mov
notb
sbb
js
push
roll
lods
push
cltd
cmc
and
movsl
cmc
clc
push
mov
scas
push
dec
fldt
xchg
add
xchg
mov
add
rcll
xchg
and
add
mov
jl
paddb
movsb
sub
in
divb
loope
pop
cwtl
outsb
xchg
mov
dec
imul
ds
cmova
not
popf
mov
repz
sahf
mov
sub
js
pop
mov
fbld
pop
cmpsl
jle
xchg
jbe
cmp
mov
push
ret
cwtl
or
mov
divl
dec
fbld
add
mov
in
in
repnz
xchg
insb
dec
stos
sbbl
fdivp
jbe
adc
je
push
xchg
outsl
inc
add
enter
or
mov
sahf
lea
orl
mov
rcl
cmpsl
jb
xor
bound
push
and
mov
dec
orb
mov
sbb
mov
outsb
inc
hlt
lods
pop
insl
cmp
mov
fisubrs
pop
repnz
jns
out
mov
mov
pop
lds
aad
or
add
cld
and
jle
or
mov
add
push
ret
nop
incb
push
ret
lds
rcrl
ret
lahf
xlat
fstps
aas
push
sub
iret
in
cs
stc
xchg
xor
lahf
fidivs
movsb
or
rcll
call
mov
inc
pop
xor
jnp
in
cmpsb
and
divw
xor
mov
add
lret
out
push
add
push
inc
sarl
push
movsb
mov
test
andb
mov
les
jb
sbb
daa
vpackssdw
and
pop
in
pushf
fwait
mov
cmpsb
cmp
roll
pop
inc
cmp
ljmp
in
cwtl
movsl
sbbl
jo
pop
sbb
mov
and
xor
fsubr
dec
call
daa
daa
mov
or
sub
sbbb
sbb
insb
sbb
cmpsb
sbb
cmp
test
mov
sbb
xchg
push
mov
xchg
mov
sub
inc
mov
mov
imul
outsl
cmp
adc
push
mov
sbb
pop
fmull
xor
dec
sbb
fidivrs
dec
add
or
lcall
daa
negl
rep
lcall
push
jmp
int
pop
sbb
dec
and
or
pop
icebp
adc
movsl
jl
add
cltd
cmp
repz
push
mov
cmp
das
int
call
xchg
dec
jne
xchg
pusha
movsl
cwtl
jnp
rolb
cmpsb
in
andl
sahf
xor
call
or
pop
sub
jnp
cwtl
lret
cmp
jl
and
test
dec
or
cmp
in
arpl
push
arpl
xchg
dec
mov
loop
insb
adc
daa
jecxz
stos
adcb
mov
insb
mov
jle
cmpsl
sbb
stos
sarb
and
pop
sbb
jecxz
jl
adc
mov
xchg
lods
adc
stos
dec
push
xor
lock
fcoml
fwait
dec
lock
repnz
scas
push
popa
jmp
jg
lock
imul
and
jecxz
movsb
js
xor
push
mov
fcmovu
push
filds
les
popf
nop
arpl
cmpsl
pusha
mov
clc
mov
cmpsb
xlat
cmpsb
jle
xlat
push
addb
mov
xchg
adc
or
outsb
pusha
sbb
mov
mov
rol
jae
cmc
call
sar
push
pop
jp
call
fwait
mov
jg
imul
jp
and
push
xchg
jp
lea
xchg
inc
lret
jo
jle
and
ret
cli
adc
test
sbb
les
loopne
rclb
sbb
scas
push
in
pop
pusha
imul
test
xor
or
movsb
imul
jmp
add
test
ficoms
jmp
in
f2xm1
call
ds
pop
test
mov
aas
add
adc
sti
push
out
dec
mov
xchg
int3
jbe
xor
jbe
fs
cld
dec
sbb
inc
cmp
movsl
mov
mov
or
gs
jle
loopne
mov
push
sub
xor
push
setbe
dec
pop
cmp
out
cmpsl
shlb
hlt
das
xor
lahf
jne
sar
xor
test
mov
in
imulb
add
adc
not
rorb
sub
arpl
sti
js
inc
loop
xchg
lods
push
xor
jnp
xchg
mov
imul
cmpsl
push
sbb
aaa
push
mov
sub
jb
pusha
cmp
or
xchg
out
xchg
cmp
lock
out
pop
cmp
add
xor
dec
jle
mov
lret
div
negb
xchg
subb
jg
in
movsb
and
neg
iret
inc
mov
jp
mov
sub
dec
mov
in
and
cli
imul
jnp
outsb
rcr
xchg
sbb
imull
stos
mov
setno
hlt
cmp
mov
pop
repnz
mov
fmuls
pop
dec
dec
imul
aad
push
iret
pop
jg
inc
fisttpll
rolb
ds
sub
lods
jne
sub
xchg
loope
out
xchg
adc
rol
add
aaa
dec
xchg
rcll
push
add
pop
shrl
stc
pop
pop
lods
arpl
loope
ss
cmp
mov
imul
xchg
or
and
mov
inc
pop
add
dec
dec
loopne
push
call
jmp
jae
test
push
jmp
inc
int3
jg
or
icebp
push
push
testb
xor
inc
movsb
mov
pop
fisubrl
jnp
sahf
dec
push
mov
lods
xorb
xchg
mov
adc
les
lret
mov
sar
rep
test
mov
imul
pushf
mov
loope
or
sub
loop
ret
add
ljmp
mov
xchg
push
push
stos
and
mov
add
push
fwait
jae
mov
pushf
mov
pop
xor
test
aam
in
insb
dec
inc
xchg
or
orb
and
dec
call
mov
pop
mov
xchg
cmp
cli
or
push
imul
test
push
jl
xor
iret
mov
mov
jnp
push
adcb
jle
jl
ret
test
js
cmp
and
popf
sarl
int3
pusha
push
arpl
stc
xor
add
cltd
aas
push
popa
incl
mov
lods
stos
movsl
stos
mov
cwtl
pusha
mov
jne
cltd
mov
outsl
xchg
mov
or
pop
fisubrl
adc
dec
pusha
sbb
lods
loope
movsl
imul
aaa
xorb
call
imul
mov
push
hlt
leave
pop
push
mov
stc
add
add
outsb
lds
sub
sub
mov
in
pop
sbb
fwait
divb
stos
insl
cltd
adc
jge
aad
adc
popa
mov
loopne
sub
fwait
addr16
arpl
orb
push
scas
sbb
dec
imul
movl
mov
xchg
sub
jno
or
xchg
lret
enter
loopne
ss
out
mov
sti
pop
ret
jbe
ljmp
repnz
pop
aad
and
dec
xchg
cmp
lds
push
loop
or
cmp
jae
push
cli
dec
clc
and
and
out
cmpsl
jo
mov
sub
mov
mov
mov
pop
ljmp
mov
lea
push
cli
mov
xor
jns
int
mov
mov
mov
add
xlat
in
xchg
pop
insb
pop
and
lret
jb
ret
add
pop
sbb
and
movsl
mov
inc
popa
loope
dec
lea
sti
push
ljmp
pop
les
in
inc
jmp
push
jno
mov
mov
mov
mov
adc
lcall
xor
inc
cmpsb
sub
testl
mov
testl
fldl
jmp
push
dec
mov
adcb
scas
jo
and
pop
addr16
pop
mov
cmpsl
js
dec
add
jae
inc
pop
pop
push
ret
shlb
fs
insl
lea
sub
std
imul
or
pop
xchg
pop
push
stos
inc
call
cli
mov
xchg
cmp
fisubl
xchg
jecxz
lds
dec
gs
xor
movb
mov
movsl
adc
dec
jp
pop
mov
or
ss
ja
jge
or
addl
cmp
mov
leave
test
loopne
jae
jno
pop
jmp
popf
xlat
vpmaddwd
shlb
mov
ret
xor
sbb
mov
mov
xor
lcall
xor
movsl
mov
mov
mov
or
xor
popa
or
adc
cmp
pushf
mov
cmp
and
inc
loope
add
mov
jecxz
jo
addr16
inc
cld
xor
push
ficomps
mov
push
sbb
imul
lcall
xchg
addr16
mov
sar
adc
and
cmpsl
inc
pop
int3
mov
push
clc
inc
jo
sub
fcompl
jb
les
push
cmpsb
inc
popa
and
testl
pop
lds
push
hlt
insl
dec
jbe
or
scas
stc
xchg
stos
rcr
xchg
xchg
nop
or
or
lahf
add
in
adc
xchg
mov
add
into
and
clc
aam
insb
std
pop
adc
shlb
iret
pop
outsl
sub
in
and
in
adc
jbe
add
sub
mov
pop
arpl
cli
cli
xchg
jp
addr16
js
xor
rcr
stos
loope
out
mov
in
cld
in
jae
mov
mov
cld
mov
cltd
jg
lret
int
lahf
jno
fisubrs
cmove
pusha
xchg
jmp
push
std
push
sub
xchg
sbb
mov
icebp
in
outsb
scas
xor
mov
dec
loop
fcompl
lock
push
push
incb
repnz
in
jp
mov
ret
stos
and
or
icebp
das
mov
jl
mov
sbb
mov
addr16
pop
push
mov
cli
pushf
mov
arpl
fldz
cs
jo
int3
pop
out
aam
sub
ljmp
dec
mov
xchg
dec
jmp
push
loop
and
int
cltd
inc
adc
movsl
mov
sbb
cmpl
mov
clc
in
or
fs
xchg
gs
mov
inc
test
aaa
loope
out
std
fdivrs
ror
and
fdivrl
jno
movsl
cmpb
lods
sbb
rcll
sub
mov
stc
mov
jb
cwtl
jmp
mov
push
in
or
mov
mov
xlat
xor
idivb
mov
stos
leave
pop
fbstp
fdivrs
mov
bound
not
les
dec
xchg
aam
movsl
js
es
add
ret
adc
scas
adc
insl
fimull
aas
or
in
jge
adc
cmp
enter
stos
xor
sbb
adc
pop
inc
mov
dec
loop
cmpsl
orl
aam
pushf
sbb
cmp
jmp
mov
xor
or
call
icebp
mov
sub
pop
jns
sbbb
adc
rcl
sbb
xchg
dec
push
jno
in
push
mov
jb
pop
popf
or
mov
mov
jnp
jb
push
fsubl
pusha
in
test
lret
int
pop
mov
in
or
cwtl
pop
out
sbb
and
imul
test
movsl
cli
dec
cmp
dec
icebp
and
in
bound
das
jnp
adc
dec
mov
push
lahf
stos
aam
in
dec
xchg
pop
cmp
jge
pusha
lea
mov
out
rorl
add
xor
mov
sub
movsb
subb
addr16
or
adc
xchg
cmp
data16
sub
xchg
and
fidivl
mov
push
inc
push
mov
pop
push
call
sarb
imul
lcall
cmc
jecxz
fiaddl
les
lods
sbb
mov
or
fdivrs
sub
ja
and
inc
in
das
int
cltd
test
pop
xor
cmc
jnp
and
jl
in
cmpsl
pop
in
mov
xor
lret
or
imul
mov
jp
and
mov
lds
push
fsubs
es
sub
lcall
dec
mov
jne
mov
and
mov
loope
stos
push
or
add
fwait
pop
mov
push
jg
shlb
lock
pop
inc
jl
fldl
cmp
lcall
cmp
addr16
mov
movsb
mov
cltd
cmp
out
sbb
fs
loop
mov
popa
sarb
out
ja
mov
ss
adc
jg
cmp
inc
pushf
mov
xchg
or
int
movsb
pop
fstpt
or
mov
pop
xor
cs
cmp
xchg
popa
loopne
enter
aam
jge
and
cmp
jne
xchg
aas
mov
dec
or
pushf
scas
jae
mov
sbb
mov
test
les
fs
mov
mov
cmpsb
test
mov
loopne
loopne
pop
enter
adc
dec
or
call
loopne
jbe
xchg
xchg
popf
dec
ss
stos
stos
mov
sbb
add
sbb
sub
adc
adc
outsl
and
cltd
fisubs
mov
lret
pop
cmp
outsb
popa
mov
inc
sbb
cmp
add
push
jnp
adc
insb
aad
arpl
mov
add
xor
mov
cmc
mov
jg
mov
cli
pop
arpl
sub
inc
push
faddl
inc
jno
mov
and
lods
notl
das
stos
mov
test
stos
push
add
mov
mov
adc
mov
mov
outsl
leave
jl
dec
add
nop
repnz
push
xor
pop
insb
femms
xor
lods
fdivrs
lds
jno
mov
jmp
insb
and
test
nop
cwtl
fstl
pop
sti
cmp
inc
js
dec
fcomp
mov
clc
imul
sbb
add
addr16
insb
sbb
mov
sbb
mov
xchg
test
add
lds
shl
test
or
sbb
inc
scas
repnz
mov
lcall
and
mov
mov
mov
inc
cmc
xor
sub
pop
jge
outsb
pop
sub
int3
mov
shll
push
shlb
sbb
ss
xlat
sub
jne
in
clc
movsl
xchg
sub
push
ror
addl
daa
jle
mov
sarb
mov
push
jns
imul
mov
jae
jb
push
mov
jp
sbb
inc
das
je
and
jp
xor
xchg
or
mov
inc
add
in
adc
lock
lcall
adc
sbb
pop
adc
in
and
js
pop
cli
scas
adc
fisttps
in
sub
test
and
lea
ficoml
cli
ficoms
loopne
lock
ss
mov
sbbb
add
push
mov
in
je
mov
inc
shll
jle
repnz
or
mov
inc
js
je
and
imul
sbb
and
xchg
sub
mov
jp
xchg
add
movsb
outsb
aad
mov
xchg
jge
dec
bound
cmp
add
jl
cli
jg
xchg
dec
adcb
pop
cmpb
jb
enter
lcall
cwtl
or
pop
es
pop
out
xchg
iret
lods
xchg
sbb
inc
dec
inc
popa
aas
imull
jnp
loopne
mov
aad
aas
test
sub
sub
sbb
add
mov
pop
jo
ss
xchg
out
in
jmp
sub
and
jp
jae
jbe
ds
insl
mov
mov
daa
pop
pop
mov
rcrb
popf
jmp
pop
pop
jl
ret
icebp
test
mov
lahf
daa
xchg
mov
xor
add
add
pop
xchg
aam
pushl
sbb
loop
mov
fstpt
ss
movsl
pushf
add
imul
insl
dec
jb
nop
shll
ljmp
test
jno
imul
inc
jns
fdivs
inc
in
movsl
scas
jecxz
daa
adc
in
push
push
pusha
mov
sbb
cltd
aaa
jno
scas
pop
and
das
test
imul
xchg
cs
and
js
std
pop
xchg
push
sarb
jmp
adc
gs
cld
lret
push
xor
loopne
and
mov
inc
inc
inc
mov
xor
negl
mov
sarb
xor
faddl
mov
mov
or
lret
cmpsb
fadds
mov
mov
or
sbb
add
bound
out
test
pop
xor
out
push
pop
cmp
rorl
dec
jecxz
out
jmp
inc
shlb
sub
les
stc
mov
movsl
jae
add
shrl
and
push
push
ljmp
xchg
pop
test
sbb
scas
add
rcrl
sub
pushf
and
jae
inc
push
cwtl
jg
outsl
xchg
shlb
push
inc
add
xlat
pop
stos
cli
xchg
or
xchg
js
lret
ds
jbe
or
fsubl
push
cmp
lods
push
cmp
mov
test
or
aaa
or
sbb
call
loop
push
inc
add
movsl
stc
mov
imul
clc
cmp
clc
add
or
jb
pop
scas
cmp
push
insb
xor
jo
daa
in
out
mov
xchg
dec
pushf
push
shl
mov
mov
ret
hlt
pop
and
xor
mov
sbb
dec
mov
adc
adc
ljmp
dec
inc
sub
ss
in
or
mov
xchg
inc
fs
sbb
shll
and
mov
push
icebp
int
scas
adc
lahf
ret
sbb
stos
or
movsl
repz
mov
xchg
aam
into
ljmp
es
jge
pop
mov
or
pushf
xor
dec
repnz
popa
cld
lahf
adc
mov
mov
jecxz
mov
mov
push
sub
popa
push
insl
sbb
xor
lret
mov
add
and
cld
jbe
push
ret
pop
jl
test
xchg
pop
rorb
mov
xor
xchg
outsl
mov
mov
xchg
test
jno
push
cld
leave
gs
loope
adc
out
xor
push
ds
mov
push
test
add
sbb
mov
push
les
mov
mov
mov
loope
mov
push
lds
push
xchg
mov
dec
aam
arpl
sti
sub
sbb
hlt
aad
pop
inc
lods
aam
shll
mov
out
lret
repnz
xor
jb
out
mov
lods
and
arpl
jo
jmp
imull
xchg
lahf
inc
jb
inc
inc
sbb
fidivl
nop
leave
xor
shll
jmp
mov
push
test
pusha
mov
and
mov
in
cs
mov
pop
cmpsb
pop
xchg
ret
popf
xchg
adc
cmp
aaa
pop
pop
jp
fiadds
sub
pop
mov
insl
int
sbb
fstpl
xchg
stos
cli
mov
xor
mov
je
mov
xor
push
pushl
mov
cltd
mov
outsb
aas
inc
add
xlat
lret
xchg
popf
add
xchg
mov
call
inc
test
inc
notb
test
dec
adcb
mov
lcall
mov
jbe
in
jae
mov
sub
mov
in
xchg
pop
cs
out
or
pop
inc
jp
mov
jle
adc
popf
call
sti
mov
mov
lods
sbb
pushf
daa
lock
jmp
hlt
jmp
push
rol
cmp
daa
add
cmp
les
push
dec
aas
push
pushf
filds
or
repnz
dec
shl
in
cmpsb
das
ret
sub
cmc
loop
cmpsl
iret
xlat
dec
xchg
pop
je
inc
bound
sub
lea
inc
mov
aam
out
data16
dec
andl
mov
jb
loop
xor
pop
mov
mov
mov
imul
cs
pop
out
repnz
aaa
int
fists
xchg
push
mov
add
test
lret
out
inc
aad
sub
inc
and
or
ljmp
in
add
movsb
jo
sub
lret
xchg
add
nop
mull
or
repnz
push
pop
cmp
fistpl
jecxz
push
repnz
bound
inc
dec
or
nop
add
fcoml
lret
jg
arpl
pop
pop
or
adc
ljmp
xor
das
push
or
fwait
ret
lret
mov
adc
inc
nop
pop
adc
cmc
push
add
cmp
push
shll
inc
dec
mov
fs
xchg
aas
das
push
in
out
pop
mov
lods
mov
lods
loope
popa
push
inc
adc
dec
inc
cmp
cmc
aad
mov
pusha
fimull
repz
cmpsl
sub
inc
andl
insb
rcr
fisubrs
inc
insb
push
out
mov
test
sub
cwtl
or
cltd
out
test
lret
packsswb
lret
bound
or
je
out
stc
dec
and
jg
sbb
jnp
gs
aaa
adc
mov
adc
cmp
stos
or
inc
and
loop
add
test
jmp
push
ja
roll
cmp
xchg
adc
icebp
pop
addr16
das
xor
loopne
imul
jns
out
xor
push
sub
add
sub
mov
add
stos
mov
cmp
inc
clc
mov
call
cmp
sub
xlat
push
or
in
mov
sahf
rorb
loopne
adc
filds
cmc
inc
adc
bswap
dec
or
adc
out
int
addr16
mov
dec
or
sbbb
les
mov
mov
jb
std
les
push
cli
aad
and
sub
cmpsl
aad
mov
bnd
aaa
adc
cmp
push
clc
jmp
pop
mov
lcall
sbb
xchg
mov
push
jb
or
rolb
popa
shr
ja
int
and
xchg
in
lahf
pop
jecxz
and
lret
mov
and
pop
jne
jg
mov
hlt
cwtl
push
jge
rclb
cmp
pop
sbb
out
push
add
subl
add
inc
shll
pop
xchg
mov
sub
cmp
add
sbb
xchg
addr16
jbe
jge
hlt
insb
jns
ss
std
pop
aaa
sti
push
mov
fidivrl
sub
sub
shlb
shlb
psubw
cmp
out
loopne
fs
shrl
or
xor
jbe
rorb
int
int3
jne
add
xchg
mov
xor
cmp
negb
imul
ffreep
push
sbb
sub
dec
test
jne
pop
inc
and
hlt
hlt
loop
leave
in
lock
add
sbb
pop
insb
out
test
out
int
sbb
push
dec
add
inc
lock
les
adc
cmp
aad
pop
imul
adc
lret
pop
inc
add
neg
jno
lds
adc
iret
or
push
jno
cmp
sbb
and
xchg
dec
pop
mov
jno
push
aaa
inc
pop
test
dec
push
sub
ja
loop
rcl
fsub
les
pop
push
fists
xchg
and
out
dec
pop
aas
push
xor
pop
vmaxpd
xor
testb
add
lods
dec
leave
pop
or
lds
stos
mov
iret
insl
pushl
jg
or
adc
adc
int
mov
lahf
sub
jl
and
cmpsl
sub
cltd
mov
shlb
pop
xchg
push
add
ss
add
in
sti
xchg
or
adc
call
and
mov
or
pop
sbb
mov
mov
push
and
ror
bound
imul
sbb
xchg
rolb
pop
pop
mov
xor
jecxz
mov
or
mov
fcoms
mov
jno
inc
mov
sub
and
out
mov
push
mov
cmp
outsl
xchg
mov
add
mov
xlat
sub
add
xchg
or
lcall
stos
cs
cmpsl
pusha
enter
mov
mov
mov
push
mov
inc
xor
jb
sub
ja
int
dec
fimuls
mov
jl
pop
add
jp
inc
push
sahf
mov
mov
bound
repnz
jle
lret
imul
test
fdivrs
roll
pop
testl
inc
xchg
pusha
mov
xchg
jge
test
fstpt
sbb
outsl
pop
xor
sbb
fiadds
aas
add
mov
movsb
out
pop
pop
adc
lcall
nop
data16
gs
sbb
std
inc
xchg
addb
test
sbb
sbb
mov
push
sbb
sbb
adc
orb
inc
testb
xchg
xor
mov
push
jno
mov
mov
mov
test
cmp
or
xchg
clc
iret
inc
jno
pop
loopne
call
xchg
aad
dec
mov
pushf
push
fimull
mov
lahf
push
test
ljmp
inc
cltd
sub
xor
push
movsl
enter
jbe
dec
mov
cmpsl
fldcw
ds
pop
jge
js
xor
fldenv
cmpsb
add
lcall
push
mov
mov
iret
repnz
inc
dec
cmc
sti
clc
js
adc
je
dec
mov
fildll
push
push
inc
mov
scas
xchg
mov
add
jmp
pinsrw
add
inc
aaa
ljmp
push
shll
xchg
in
fidivl
xorl
xor
sbb
jnp
push
cmp
in
pop
push
std
add
dec
shrb
sub
sub
adc
jae
stc
and
jno
cmpb
enter
mov
push
dec
jge
cmp
jmp
jnp
mov
or
outsl
jp
mov
push
dec
fbld
mov
cli
pushf
popa
inc
cmp
out
pop
add
add
adc
std
nop
scas
mov
pop
fdivrs
lcall
jo
cld
pop
xchg
into
inc
mov
push
lods
mov
cld
in
or
and
shrb
mov
sub
cwtl
pop
loope
xor
icebp
push
iret
xor
mov
addl
ret
ljmp
aaa
das
push
cs
sbb
sbb
mov
out
sub
and
mov
mov
orl
xchg
int3
outsb
adc
adc
xchg
sbb
sahf
xor
faddl
sub
jb
jl
into
leave
sbb
cmp
or
mov
shrb
jl
mov
andb
pop
shll
mov
jne
sub
push
push
fmuls
in
cmp
jmp
push
mov
idivb
or
mov
jbe
jl
lcall
sub
pop
push
in
fwait
rcl
jg
notl
test
out
pop
loop
addr16
xor
mov
mov
test
loope
or
fmull
shrl
cmp
inc
dec
push
js
std
sbb
inc
bswap
or
xchg
jecxz
movsb
mov
jmp
leave
in
jl
insl
insb
int
ljmp
add
xchg
lods
adc
jne
mov
xchg
adc
mov
inc
cmpsb
sti
jmp
mov
lock
sbbl
push
movsb
add
addr16
stos
lds
xor
inc
mov
pop
repz
aas
pop
jmp
lret
cwtl
test
jecxz
ja
fwait
mov
imul
ror
subb
adc
stos
pusha
ljmp
push
sbb
dec
mov
std
push
stc
push
xchg
cmp
sti
dec
sbb
add
ret
lods
mov
fistl
notl
cltd
aam
ret
cmpb
push
pop
lret
ret
ror
ja
fwait
pusha
cmp
out
sbb
add
add
jge
or
std
xchg
jecxz
ljmp
inc
leave
ja
popf
insl
xchg
data16
aad
xchg
mov
jmp
fstps
out
push
rcrl
int3
rcrl
es
or
iret
adc
lods
rcrb
mov
jge
and
adc
push
push
push
mov
test
enter
mov
jecxz
aam
call
pusha
mov
fcompl
ds
in
fisttpll
push
xor
xchg
add
stos
pop
in
xor
cmpsb
jp
mov
jmp
inc
std
mov
pop
sub
stc
decb
clc
int
lret
jns
inc
push
test
mov
out
mov
or
test
fsubrl
sbb
and
push
xor
pop
dec
icebp
dec
gs
ljmp
lock
or
imul
setns
cmc
mov
testl
jle
push
scas
cmp
adc
and
and
mov
push
leave
mov
addr16
mov
push
shll
xchg
test
pusha
mov
in
popa
test
orl
adc
cmp
mov
mov
addl
lods
repz
mov
pop
push
mov
test
das
add
push
mov
clc
in
iret
lds
loop
cmp
or
xchg
aad
jne
insb
shrb
jge
mov
cmp
fs
xchg
xchg
or
adc
int3
lcall
clc
test
push
and
mov
xlat
jg
inc
adc
xchg
popf
in
aam
mov
rorl
xchg
in
and
out
in
xor
sti
jne
add
push
outsl
out
lock
pop
fldcw
mov
test
lods
hlt
loop
decb
ds
mov
aaa
or
outsb
sbb
adc
orl
loop
daa
push
daa
mov
stc
xchg
imul
jae
pop
and
iret
push
jno
push
aaa
in
inc
push
cld
shrd
mov
mov
jne
leave
pop
adc
test
add
push
pop
mov
jp
sbb
pop
mov
jae
jmp
and
push
adcl
cwtl
popf
fmuls
dec
pop
insl
push
jle
js
mov
clc
out
add
push
roll
lods
sbbl
loope
cltd
dec
andb
dec
jb
adc
push
call
and
mov
dec
mov
add
push
cmc
ljmp
das
leave
test
insl
add
dec
sub
movsb
leave
outsb
add
and
add
dec
jno
shll
pop
adc
lahf
jg
xchg
jno
cmpsl
mov
insl
pop
cld
roll
in
xchg
pop
fnstenv
test
out
push
xchg
mov
xchg
cmp
frstor
or
lret
rolb
std
pandn
mov
fs
lret
mov
scas
dec
out
inc
lcall
push
or
xchg
stc
mov
dec
xor
outsl
test
mov
sub
pop
push
cmp
cltd
shll
out
or
movsb
pop
sub
into
ljmp
leave
sbb
leave
push
repnz
mov
outsl
pop
jnp
mov
mov
scas
out
or
sbb
lea
sbb
xor
mov
mov
leave
andl
push
xchg
out
xlat
sub
loop
int3
stos
insl
push
lods
mov
add
add
jo
cmc
inc
xchg
dec
js
mov
std
or
push
add
sbb
xchg
mov
test
dec
push
xor
dec
inc
mov
pushf
aas
jnp
mov
xor
lea
es
fnstsw
daa
js
xchg
mov
insb
sbb
into
jae
lahf
int
ss
ret
and
sarb
rorb
clc
mul
stc
jmp
aad
sbb
mov
push
loop
pop
cmp
sbb
mov
addb
xchg
icebp
insb
jge
mov
pop
and
jg
in
pop
jae
hlt
dec
xchg
pop
rorl
test
pop
xchg
cmc
jno
sbb
fdivrl
dec
cwtl
inc
push
cli
adc
stc
ret
mov
clc
fistl
movsb
in
lret
enter
int3
ljmp
shl
mov
jns
jmp
or
in
inc
sbb
punpckhwd
xchg
movsl
push
mov
inc
mov
sbb
insb
inc
pop
and
mov
insl
jge
cmp
dec
dec
inc
movsl
fimuls
cmpsb
sbb
cmp
dec
bound
sarb
in
sti
leave
sub
push
dec
scas
sbb
xchg
mov
cmc
outsl
aaa
cmc
jmp
scas
pop
incb
shlb
xor
mov
mov
mov
sub
and
lcall
sub
or
mov
mov
leave
lds
data16
xor
ss
sarl
nop
dec
inc
jno
lock
data16
mov
aaa
dec
mov
sbb
mov
xchg
adc
inc
mov
or
or
push
push
fsubrs
lret
movsl
std
push
cld
daa
out
mov
mov
push
pop
fldenv
adc
lcall
in
adc
add
push
mov
xchg
popf
sbb
jne
pusha
sub
rolb
mov
xor
jl
dec
lret
test
cli
fwait
sbb
push
jnp
jbe
leave
adc
cmpsb
mov
adc
inc
in
adc
clc
push
rclb
arpl
mov
push
popa
pop
mov
scas
fsubrs
arpl
mov
notl
sub
or
scas
dec
xchg
outsb
inc
ds
test
push
sbb
daa
cmp
jg
inc
pushf
pushf
test
mov
push
mov
jmp
test
push
pop
inc
add
pop
std
mov
dec
sbb
and
je
sbb
icebp
mov
lret
inc
mov
inc
xchg
pop
scas
pusha
dec
add
jl
mov
add
or
imul
ds
mov
into
xchg
stos
adc
cltd
les
mulb
sarl
mov
pop
sub
in
inc
dec
cltd
aam
cmp
add
ret
push
mov
push
inc
jmp
sbb
popa
push
popf
fsts
lahf
out
cmp
pop
and
cmp
pop
out
mulb
dec
mov
mov
enter
mov
pop
cmp
xchg
lcall
xor
subps
rcrb
mov
mov
in
or
rcr
jb
xor
and
mov
jbe
cmp
jecxz
js
pushf
inc
push
pop
dec
sahf
cmp
stc
mov
es
pop
inc
test
cmp
sbb
cmp
inc
adc
mov
das
lea
mov
dec
mov
push
test
sbbl
dec
add
jp
and
add
sub
xor
push
cltd
xor
cmp
rcll
mov
and
add
paddw
pop
cmp
paddsw
pop
ja
enter
pop
cmp
mov
mov
pop
xor
lcall
negl
jno
push
push
sbb
add
dec
xor
and
pusha
aam
and
sub
call
gs
add
lret
jg
mov
repz
sub
mov
xor
test
sub
add
cltd
adc
inc
adc
lock
or
jmp
loop
sub
lret
rcll
mov
dec
int3
add
jle
je
dec
xchg
push
insb
adc
mov
ret
sahf
sub
scas
fs
aam
mov
push
cmp
daa
mov
jle
pop
imul
testl
sar
adcb
mov
test
push
mov
lea
aad
adc
mov
xor
into
adc
dec
xor
shll
mov
data16
ss
test
repnz
pop
jb
push
out
push
push
lods
sub
adc
ljmp
inc
inc
adc
out
mov
lcall
mov
pop
dec
xchg
mov
jbe
xor
mov
andb
bound
je
js
fs
pusha
add
mov
clc
movsb
xor
cmp
test
sti
xchg
ret
movsl
popa
xorl
sub
mov
rcr
xchg
mov
lret
fchs
fistpl
mov
insb
lods
movsl
aad
cmp
and
mov
xlat
ret
adc
xchg
xor
jb
mov
ljmp
pop
test
mov
insb
fucomip
push
jl
cmpsl
bound
sbb
mov
scas
sub
cwtl
push
xchg
cld
jecxz
je
dec
leave
mov
aad
jp
inc
mov
call
xchg
cmp
mov
movsl
cmp
jne
and
jo
into
lods
enter
mov
out
pop
int3
and
push
fisttps
sahf
scas
aam
push
pushf
fists
cs
cmp
rcrl
cmpsl
jno
adc
cmp
or
in
mov
les
xchg
in
xchg
cmp
fnstsw
add
inc
lcall
stc
jns
rcl
push
out
xor
push
sbbb
inc
outsb
test
shlb
add
imul
inc
mov
xor
fldenv
addr16
je
or
push
pop
lahf
pushf
push
jle
int
xor
fstpt
xchg
mov
test
clc
nop
sti
xchg
ret
repz
enter
cmp
add
mov
mov
mov
fists
test
inc
sbb
adc
xor
mov
ja
jmp
add
mov
movsl
lods
cmp
add
loope
ds
mov
push
xorl
fiadds
xchg
rcrb
mov
movsl
sub
call
add
inc
jne
push
dec
es
pop
cltd
mov
scas
lea
pop
inc
push
xchg
xchg
pop
jmp
or
sub
add
in
cltd
xchg
fcomps
pop
and
xchg
pop
push
iret
insl
int
pop
xchg
inc
inc
repz
xchg
lods
adc
das
mov
out
stos
lock
popa
xor
sub
pop
push
sub
push
sub
aas
and
cmpsb
mov
das
loopne
negb
xchg
xchg
xchg
push
sub
out
pop
test
popa
dec
subb
enter
jp
movsl
loop
cmc
mov
arpl
in
push
outsl
sbb
push
jl
in
inc
out
sbb
movsb
nop
lds
mov
test
mov
jne
cmp
xchg
aaa
mov
sahf
xor
mov
lar
jnp
insb
rcll
jo
repnz
push
adc
push
mov
stos
pushf
mov
xor
addr16
lock
fcomp
test
enter
es
xchg
icebp
adc
fsincos
jns
inc
and
test
mov
lret
out
mov
add
mov
mov
hlt
loope
xchg
pop
fimuls
sub
or
stos
icebp
lods
pop
movsl
out
pushf
lahf
add
mov
inc
dec
aaa
adc
add
fldcw
dec
adc
mov
mov
fildll
jl
movb
jecxz
adc
mov
cmp
ss
or
mov
mov
fisubrs
adc
cmp
xchg
leave
mov
cmovo
repnz
ret
xor
pop
add
and
repnz
pop
inc
arpl
xchg
or
cmpsb
icebp
lcall
or
call
or
ljmp
push
xlat
inc
cmp
int3
icebp
sub
jg
mov
or
add
addr16
cmc
insb
add
out
cmp
cmc
stc
mov
aaa
inc
les
add
jno
popf
xor
pop
adc
mov
adc
dec
gs
xchg
push
cmp
mov
push
int
mov
pop
and
sbb
xchg
lds
cmpsb
testb
pop
push
cmpsl
in
div
rcl
xchg
sub
test
jl
daa
jno
sbb
fwait
shrl
shll
pushf
or
sbbb
dec
in
mov
cmp
adc
adc
mov
sub
mov
xchg
sti
in
inc
inc
dec
ja
jge
cmc
push
popf
pop
cmp
out
arpl
mov
inc
mov
push
adc
ja
fs
mov
adc
or
mov
stos
popa
inc
fbstp
imul
jl
jb
je
test
ret
imul
sub
jnp
jge
adc
fsub
out
mov
dec
sub
notl
jo
shll
adc
mov
jp
sub
sti
scas
cmp
sbb
rolb
cs
xor
je
mov
dec
pop
scas
jmp
jnp
inc
ficoml
xchg
push
sbb
loop
sub
and
repnz
nop
jae
subl
movsb
pusha
popa
pop
adc
jns
add
in
enter
lods
loopne
pusha
bound
out
iret
movsb
sbb
mov
pop
sti
push
loop
mov
sbb
add
clc
mov
ret
mov
in
jns
add
xor
out
or
fcoml
push
add
sbb
fs
inc
push
insb
ret
mov
in
aaa
push
xchg
inc
inc
jb
and
xor
adc
adc
std
xchg
call
add
jae
mov
mov
loope,pt
pop
cmp
fildl
call
xor
cmp
push
mov
aam
add
xchg
inc
push
stos
cmp
push
iret
out
shl
nop
cmpsl
jo
cmp
or
int
jae
sahf
insl
fdivrl
shl
xlat
xchg
fistps
or
or
ja
outsb
stos
mov
cli
fisttpll
popa
sbb
and
mov
or
aam
sbbl
stos
hlt
in
popf
popf
sar
dec
add
sbb
ret
pusha
pop
sbb
fcmovne
adc
mov
jns
mov
push
data16
dec
push
inc
or
shl
sub
mov
cli
and
sub
jle
cmpsl
and
mov
dec
into
loopne
out
cs
aaa
mov
cmp
mov
leave
lds
mulb
test
in
lods
loope
mov
aam
in
push
ds
add
addr16
ss
sbb
jg
repnz
loopne
loope
sbb
mul
xlat
mov
or
jg
stc
outsb
dec
sub
lods
ja
pushf
clc
test
add
loopne
push
pop
hlt
xchg
repz
jmp
sbb
wbinvd
shrb
push
mov
mov
inc
and
iret
enter
stos
jge
inc
mov
fnstenv
andl
stc
insb
insl
mov
push
adc
jne
jmp
fs
mov
push
roll
fistps
scas
xchg
mov
rcll
es
sahf
cli
jno
rolb
jno
je
xor
push
es
das
mov
jg
mov
ds
aam
mov
mov
call
rcrl
xchg
xchg
scas
mov
jp
pop
sub
sbb
jne
mov
jns
push
cmp
loopne
pop
xor
rclb
rcl
xor
push
cld
mov
cltd
lods
repz
and
pop
cs
sahf
or
jmp
push
add
cmpsl
shl
jl
fiaddl
mov
out
xchg
and
into
loop
loop
dec
imul
pop
push
sub
push
faddl
jle
xor
lret
inc
fldenv
mov
and
fcompl
rolb
add
xor
aaa
add
out
ljmp
push
mov
jne
lahf
shll
jle
adc
xorb
jmp
mov
arpl
orb
and
sub
jmp
jae
inc
icebp
xchg
sbb
or
xor
dec
xor
dec
shlb
loopne
adc
cmpsb
sbb
adc
mov
jne
or
mov
bound
test
jmp
in
andb
dec
cld
mov
ud1
push
sbb
cmpsb
jb
fxch
or
dec
sti
imul
nop
movsl
xchg
js
sub
jp
inc
jae
or
mov
push
mov
xor
cmp
repz
jo
mov
hlt
pop
cwtl
cmpb
mov
push
daa
cmp
sbb
sub
inc
in
inc
inc
push
sahf
aas
mov
xchg
pop
adc
and
push
xchg
cld
addr16
mov
mov
sub
xchg
repz
sub
mov
orb
cmp
xchg
flds
dec
lds
cli
sub
ljmp
dec
lds
xor
rcrl
inc
dec
jmp
pop
nop
daa
push
and
fbld
aaa
in
lock
repnz
aad
scas
stos
ljmp
and
cwtl
adc
sub
btc
sub
sub
dec
sahf
mov
push
fidivs
jns
inc
mov
icebp
fstpt
mov
or
insb
lds
inc
gs
gs
cmp
pushf
les
in
out
xor
call
bswap
mov
inc
scas
mov
adc
inc
mov
dec
das
jnp
mov
xchg
loop
push
rcrb
inc
and
push
cmp
lret
lret
fucomi
loope
mov
je
cmpsb
stc
inc
clc
jmp
fmull
xchg
mov
adc
movsb
movsb
les
stos
mov
mov
shrb
aas
dec
push
rolb
test
nop
mov
stos
cltd
cmp
das
or
cs
and
test
fisubs
cmp
insb
or
es
xor
shll
jg
jge
lret
jns
xchg
fs
imul
shll
mov
cmp
test
pop
ret
add
inc
arpl
mov
mov
popf
daa
out
cmp
push
aam
out
pop
mov
push
cltd
mov
cmpsb
icebp
mov
imul
dec
or
mov
ljmp
push
adc
insb
or
cwtl
dec
xchg
js
popa
pop
pop
shrb
push
popa
lcall
fs
jb
mov
cld
jo
mov
ret
adc
mov
ljmp
fisttpll
lcall
sub
and
cmpsl
jmp
out
mov
or
add
lret
sub
xchg
xlat
and
aas
push
xchg
sub
mov
inc
mov
int3
adc
rclb
pop
mov
leave
scas
rcl
push
sbb
into
cwtl
pop
mov
sbb
sbbl
pop
cmp
rorl
inc
jge
subb
rcrl
call
xchg
mov
push
aad
out
and
sbb
xchg
ljmp
push
out
jg
xchg
cmp
ret
or
adc
and
jae
push
sub
js
mov
jne
add
inc
cmp
out
adc
cmp
mov
imul
or
adcb
in
insb
xchg
fsubrs
mov
adc
cmc
outsl
adc
dec
aaa
mov
addr16
jge
aam
mov
push
add
mov
xor
pop
push
mov
imul
jl
into
cmpsl
pop
rorb
cmp
mov
and
mov
mov
imul
xor
and
orl
xchg
mov
sbb
out
xor
or
xor
push
shr
adc
sub
cmp
stos
or
cmp
pop
push
mov
insb
xchg
jmp
int
inc
jno
xchg
cld
mov
push
mov
mov
jle
or
das
xchg
xor
imul
adc
jecxz
shlb
jb
int3
jne
mov
mov
fcmovnb
mov
sub
stos
sahf
adc
insb
lds
sbb
mov
je
push
das
inc
pop
mov
aad
shl
mov
push
jbe
xlat
mov
and
or
aaa
call
cmp
mov
xor
leave
loopne
aam
daa
lahf
loope
loop
divl
mov
ljmp
insb
imul
mov
in
aaa
call
cmpsb
cwtl
pop
sbb
add
xchg
and
add
inc
pop
xchg
cli
dec
popf
frstor
sub
adc
sbb
lods
mov
xor
popf
movsl
cwtl
ds
adc
ljmp
add
repz
clc
push
popa
rcr
cmp
divb
imul
and
test
push
lds
jecxz
add
cmp
fwait
mov
daa
arpl
sbb
xor
push
xchg
mov
cld
dec
jecxz
inc
sbb
inc
rorb
push
xlat
lock
and
or
std
xor
lds
dec
sub
sub
push
enter
pop
daa
jne
aam
clc
sub
popf
add
add
dec
xor
cwtl
jne
jl
mov
add
negl
fcoml
fcomip
xor
inc
into
movsw
shrb
call
jno
or
das
xchg
cmc
adc
adc
cltd
in
mov
jb
imul
mov
jno
push
call
and
sub
in
jg
shlb
cmp
fcmovne
adc
add
or
xchg
xor
push
lea
in
js
shll
cmp
mov
mov
inc
fimull
rclb
xchg
inc
sti
nop
fdivp
mov
or
decl
inc
nop
push
out
sti
pop
addb
movsl
mov
jo
dec
xor
cmp
fnstcw
orb
je
loop
pop
jp
out
fnstcw
ds
dec
cmpsl
mov
add
in
mov
pop
getsec
icebp
inc
repz
loope
xchg
jp
sbb
mov
sti
movsb
cld
cmpsl
mov
push
mov
and
call
adc
scas
sbb
jne
in
imul
and
or
lret
shll
push
in
insb
clc
and
cli
sti
push
pop
lock
stos
cmp
or
jns
xchg
pop
xor
outsb
aad
mov
mov
rorb
gs
fcmovu
lock
insb
mov
int
loopne
fidivrs
adc
add
pop
mov
addr16
sbbb
adc
jl
push
aas
mov
jns
adc
sub
inc
loopne
subb
sbb
add
scas
jo
hlt
xchg
loope
and
and
cltd
dec
cmp
push
call
mov
pop
add
outsb
push
je
enter
ljmp
pusha
mov
and
pop
cwtl
in
call
push
test
int3
xchg
hlt
rorb
and
adc
imul
pop
out
dec
push
std
out
les
lods
adc
and
mov
jns
lcall
dec
inc
movsl
sbb
mov
scas
mov
lds
shlb
fbstp
mov
insl
sbb
loopne
insb
xor
es
mov
cmpsb
cmp
sbb
dec
or
int
test
cmpsb
jnp
sub
stc
sbbb
loopne
in
test
idiv
fwait
ja
xchg
int3
in
xor
xchg
jnp
out
out
inc
adc
sahf
xor
jae
and
xor
sub
gs
sub
push
negb
adc
cs
fdiv
mov
pushf
push
add
cmp
popa
test
ror
call
int3
ljmp
or
inc
rcl
xor
dec
fldenv
ja
ficoml
jno
cmp
incl
lods
lea
std
inc
sti
sbb
lds
clc
lods
dec
mov
cli
ds
adc
lcall
cmp
pop
dec
and
pop
push
inc
xor
fisttps
ja
inc
xor
stc
pop
es
push
or
xchg
pop
dec
xor
pop
cmp
xor
mov
scas
gs
sbb
in
sbb
ja
icebp
jnp
out
les
jb
movsb
fadds
pushl
enter
popf
arpl
cmc
iret
sbb
or
sbb
or
push
mov
sbb
dec
shrl
inc
test
ss
jecxz
mov
and
cmp
pushf
lret
xlat
sbb
mov
data16
xchg
les
insb
cmp
ret
call
xor
mov
fidivrl
and
jle
andb
divb
jns
xchg
int
mov
out
cmp
cld
cmp
sbb
rolb
mov
push
cmp
dec
pop
mov
adc
mov
pop
xor
xor
pop
push
xorl
adc
rcll
aaa
fcoms
dec
stc
mov
sub
mov
mov
fsubl
repnz
iret
int
jl
std
movsb
pop
cli
mov
mov
mov
cmp
repz
scas
es
lahf
push
mov
mov
pop
mov
pop
mov
or
xchg
inc
push
mov
das
mov
movsb
leave
out
movsl
inc
inc
add
pop
std
and
jl
mov
inc
pushf
add
xchg
cli
mov
jnp
lods
outsb
cmpsb
jg
lods
lcall
mov
cli
jle
push
sbb
mov
pop
popf
addb
pop
cwtl
js
movsl
repnz
pusha
inc
call
in
jg
stos
imul
xor
pop
shlb
into
fldt
not
jbe
inc
jno
dec
aaa
inc
jnp
and
add
les
sahf
pop
scas
std
scas
clc
push
rol
popa
pop
int3
loopne
pop
inc
ds
xchg
add
cs
dec
sub
adc
fs
xchg
pop
sub
arpl
lods
dec
in
push
push
xor
jns
sbb
jb
testl
inc
xchg
stos
orl
sub
ficoms
stc
stc
mov
jns
testl
cmp
pushf
sbb
adc
sub
mov
jle
ds
sub
out
movsl
or
adc
test
push
scas
leave
jbe
mov
enter
loopne
cmp
dec
jge
fwait
jnp
ffreep
xor
rcrl
and
sarl
mov
mov
cltd
or
sbbb
xchg
inc
cmp
or
mov
sarl
mov
cmp
out
cmp
mov
fcomp
andl
je
aas
jg
lret
and
mov
je
jb
call
repz
stc
iret
mov
pop
out
rolb
and
pop
adc
mov
dec
popf
rclb
mov
jecxz
jmp
adc
aas
in
test
clc
inc
imul
into
adc
mov
dec
mov
insl
pushf
add
adc
jb
sbb
stc
push
pop
imul
pop
jno
dec
enter
jne
lock
cli
cmp
xor
adc
jo
sbb
and
movsb
mov
cwtl
imul
adc
mov
int
xchg
adc
mov
imul
and
dec
ja
xchg
ss
out
mov
jnp
cmc
cmp
inc
std
push
fcmove
inc
pop
push
or
fisttpll
xlat
frstor
and
sub
icebp
sub
into
and
jmp
sbb
jae
aad
mov
mov
jge
sbb
jecxz
or
xor
xchg
cltd
shrl
mov
sbb
sbb
or
cltd
cld
popa
mov
jbe
ficoms
dec
ljmp
repnz
xchg
cmpsb
xchg
cltd
sbb
jl
push
iret
push
mov
jnp
cwtl
add
xlat
ds
pop
jo
jg
xchg
push
imulb
or
cmp
inc
pop
push
ficomps
cmp
xor
add
and
jg
pop
adc
jle
std
adc
sahf
dec
pop
fcmovnb
lahf
push
sub
mov
push
cmp
stos
lahf
pop
adc
jmp
jle
mov
aam
rdmsr
jbe
sar
jl
popl
mov
adc
xchg
jns
sub
arpl
cmp
repnz
push
or
stos
pop
es
add
fsubrs
xor
xor
xchg
je
add
out
dec
sub
xlat
cmp
push
div
push
popa
lret
xor
cli
gs
ret
and
inc
je
cmp
enter
scas
cwtl
add
mov
int3
lods
test
lea
cltd
adc
add
dec
call
xor
inc
pop
pop
cwtl
out
pop
into
pop
push
pop
ret
idivb
and
mov
add
popf
sar
xchg
push
mov
cmpsl
les
mov
arpl
mov
add
lods
sbb
aam
push
cmpsb
cmpsl
mov
lahf
xchg
xlat
bound
add
xor
int3
cwtl
testl
insl
pop
pop
popf
inc
add
xchg
pop
js
mov
mov
ret
mov
mov
fcmove
arpl
cmp
jle
imul
xchg
jne
add
les
inc
clc
push
jns
mov
inc
and
faddl
loopne
fadds
stc
jns
jle
aas
iret
and
jno
jle
sub
out
roll
pop
fsubr
dec
push
hlt
cwtl
and
ja
dec
or
xor
fnstenv
loopne
add
pop
cwtl
sub
nop
push
fadd
xchg
addr16
ror
daa
aad
sub
fisttpl
bound
sbb
fsubrl
ljmp
push
and
mov
lea
sbb
xchg
add
jns
pushf
dec
mov
scas
dec
mov
mov
or
imull
mov
pop
leave
inc
add
out
xor
not
xor
cmpsb
enter
xchg
sbbl
sub
ss
and
mov
pop
scas
cwtl
add
hlt
push
mov
add
add
out
fwait
xor
aad
dec
insl
push
add
adc
popa
pop
mov
xor
rorb
divl
mov
cmpl
jp
push
ret
rcr
pushf
xchg
stc
aad
inc
cmp
dec
xchg
les
aaa
sub
or
out
jne
test
add
and
push
sub
xor
inc
cli
mov
loope
shlb
sti
push
push
outsl
out
dec
xor
mov
stos
push
fisttpll
add
fstpt
xchg
aaa
ret
push
outsb
je
jge
adc
jg
test
pop
gs
testb
add
pop
pop
and
pop
andl
push
mov
cmp
sub
dec
test
out
dec
sbb
or
ds
ficompl
call
cmpsb
stos
fdivrl
xor
jbe
mov
imul
mov
and
mov
notl
repz
in
into
cltd
popa
inc
fstps
push
or
mov
daa
aaa
lret
ljmp
sti
aaa
dec
cmp
inc
ljmp
lods
stc
jb
push
mov
sbb
mov
pop
lcall
inc
ds
pop
ror
dec
in
xchg
xchg
mov
jbe
ficoms
pop
fldl
into
div
cs
jecxz
jae
and
pop
cmp
cmp
int3
dec
pop
dec
aad
xlat
movb
mov
pop
je
jmp
hlt
test
sti
fdivrp
js
mov
mov
or
and
daa
mov
test
in
int
xor
int
xor
data16
jb
xchg
mov
inc
dec
mov
mov
mov
int
jmp
sarl
cmp
call
mov
xchg
nop
nop
mov
xlat
js
ss
xlat
out
push
ret
data16
in
mov
mov
xchg
mov
rclb
inc
pop
movsb
sub
xor
incl
hlt
xor
xchg
pop
xor
or
int
sub
mov
stc
jmp
adc
inc
mov
imul
or
pop
ljmp
scas
fadd
push
sbb
cli
out
or
lcall
add
jno
push
pop
shl
outsb
sub
outsl
rcll
mov
cmp
repnz
xor
pop
nop
ret
pop
adc
push
out
xor
call
jecxz
fxtract
xchg
andb
fidivl
mov
or
mov
popa
mov
and
das
test
xchg
aad
test
call
jge
adc
out
sub
jmp
pop
xor
push
jg
mov
and
xchg
pop
daa
lea
sbbl
xor
stos
push
and
mov
mov
jecxz
testl
sbb
jg
cmp
pop
jecxz
scas
adc
out
cmc
push
mov
or
pop
pop
jp
mov
adc
lret
nop
and
jnp
sbb
cmpsl
mov
adc
xchg
push
xor
jge
mov
loope
sbb
jle
fidivl
shll
cmp
lock
mov
mov
pop
lret
stos
and
notb
mov
leave
inc
shrb
push
andl
xchg
aam
imul
lcall
idivl
dec
mov
sarb
cwtl
loop
mov
andb
xchg
or
cltd
push
orl
int3
and
mov
adc
fstpt
add
cli
cwtl
and
jl
pop
es
xlat
sub
int
imul
push
and
fdiv
sbbb
mov
pop
jle
dec
inc
fwait
test
scas
jb
mov
outsb
cmp
outsl
inc
push
mov
fadds
rcll
or
lock
cmc
and
dec
test
repnz
pop
push
xor
imulb
adcb
orl
icebp
in
stc
dec
hlt
cli
mov
jns
mov
xchg
pusha
in
or
leave
fstp
lds
aad
cltd
call
mov
dec
cmpsl
mov
fwait
out
test
testl
mov
add
mov
cmp
roll
dec
and
test
gs
pop
sub
jb
fsubl
lcall
notl
add
in
repz
or
xor
mov
dec
pop
dec
dec
ret
loop
fidivrs
xlat
xor
or
mov
fbld
mov
test
stos
stc
push
js
xchg
outsb
sbb
add
pop
test
pushl
jae
push
lds
mov
loope
lds
ss
and
lock
leave
lods
fsin
sahf
lock
xlat
icebp
mov
sbb
add
cld
loop
push
std
aam
outsl
ja
pop
pop
sbb
jno
cli
mov
lods
das
imul
fcmovbe
sbb
pop
inc
std
xchg
mov
xchg
out
nop
xor
dec
outsb
nop
sbb
mov
adc
and
inc
negl
add
iret
push
sub
push
imul
jns
or
pop
cld
and
push
pop
add
xchg
addr16
fdivrl
sub
pop
stos
adc
sbb
sub
fcoml
mov
add
inc
aad
xchg
mov
xor
lds
sahf
stos
fmul
add
repnz
pop
add
lods
mov
ror
es
mov
inc
jo
sbb
inc
subl
in
popa
dec
cmp
xor
adc
push
xor
dec
fimull
pop
mov
inc
sbb
jge
enter
pop
pop
int
dec
adc
addr16
movsl
adc
push
push
jg
lods
cmpsb
int3
mov
pop
mov
ss
cmp
dec
icebp
sti
movsl
insb
pop
mov
push
push
lock
in
dec
xchg
inc
dec
dec
pop
das
jge
clc
mov
in
addr16
and
arpl
mov
sbb
loope
lds
push
loop
daa
push
mov
mov
popf
imul
shlb
sub
les
adc
decl
xlat
dec
dec
cmc
frstor
fldenv
fs
shrl
addr16
roll
mov
orl
sti
mov
mov
out
in
fiadds
flds
add
push
scas
push
push
rcrl
mov
and
xor
add
pop
test
scas
push
adc
push
mov
int
lods
shll
mov
testb
test
sub
cwtl
repz
mov
in
cmp
adc
jp
dec
sbb
add
call
idivl
mov
int
and
or
mov
into
push
js
in
mov
js
fistpll
mov
jae
mov
push
lret
push
sbb
lods
icebp
cmpsl
lcall
inc
mov
or
bound
ss
sbb
sub
in
push
dec
sti
imul
faddp
lods
ljmp
inc
push
sbb
dec
cltd
jle
dec
sbb
test
lahf
jb
aam
cmp
ja
je
mov
pop
xor
or
movsb
rorl
inc
subl
les
xchg
sahf
divl
dec
dec
jmp
or
push
rorl
jno
jne
scas
mov
fstps
sbb
xor
push
push
aaa
cmp
jp
imul
pop
and
faddl
inc
outsl
xchg
push
jns
mov
das
psubsw
inc
xor
mov
mov
inc
jecxz
pop
adc
sub
mov
dec
push
cld
add
adc
lea
lahf
dec
movsb
jecxz
push
idivb
insb
jecxz
rcr
sbbb
cmpl
mov
aaa
or
jnp
mov
jnp
mov
fmull
data16
and
push
cmp
xchg
xchg
ret
int3
xorb
lahf
fs
sub
sub
test
add
mov
jl
popa
inc
sarb
mov
mov
das
sbb
jne
cmpsb
shr
stos
pop
xor
fs
insl
adc
ljmp
xchg
adc
mov
dec
stos
add
sub
aam
nop
inc
push
dec
mov
jl
lock
inc
pop
sbb
add
in
push
mov
cltd
arpl
je
add
insl
lods
addr16
xchg
jg
inc
mov
outsb
out
lods
jne
dec
push
aaa
pop
mov
mov
jo
insl
pop
jo
inc
aas
jmp
lock
jg
mul
fs
popa
clc
lret
mov
sub
sub
jns
insb
in
orl
jbe
or
sarl
jp
lret
jmp
mov
jp
popa
test
hlt
fnsave
enter
mov
popl
or
leave
jecxz
mov
lcall
add
push
or
stos
rolb
mov
rorb
das
cli
or
out
dec
rclb
rorb
enter
mov
sahf
inc
jecxz
or
jmp
xor
ja
sub
iret
push
stc
insl
inc
rcll
shrl
fcom
mov
ret
mov
ds
ficoms
js
cmc
jp
xor
cmp
xchg
mov
stos
lea
mov
pop
nop
loop
push
xlat
pop
call
mov
push
pop
cmp
arpl
pop
add
bound
ss
jae
aam
mov
or
stc
pop
xchg
sar
xor
jle
mov
sub
rorb
les
aad
inc
test
jbe
test
mov
push
cmpsb
jae
mov
dec
shrl
stos
jge
scas
ret
shlb
testl
insb
cld
divb
pop
testb
jg
sahf
stos
dec
cmc
cltd
aaa
inc
sbb
out
es
call
mulb
insl
mov
nop
insl
sbb
sbb
int
dec
pop
enter
inc
je
lock
and
ja
loop
ret
or
cli
pusha
jo
jmp
imul
cli
dec
and
test
jl
in
inc
scas
out
and
xchg
lret
icebp
jl
loopne
jae
push
cmp
rol
dec
leave
dec
pop
test
jae
and
dec
outsl
sbb
ss
lds
or
push
cltd
fistpll
mov
mov
push
push
or
and
into
movsl
sub
rcrl
iret
dec
pop
xchg
stos
xchg
out
fwait
mov
andb
sub
cmp
inc
test
rorl
pop
mov
jg
pusha
push
aad
mov
lcall
adc
push
out
cmp
push
test
jb
sub
jb
sub
in
sbb
mov
xchg
fwait
push
xorl
mov
ja
sub
shl
fldcw
sbb
lret
dec
fsubp
xor
movsl
pop
adc
call
inc
in
xchg
stc
std
pop
xor
testl
pop
shll
ljmp
adc
and
jno
sbb
test
sub
mov
pop
and
xchg
ljmp
pop
jbe
dec
aam
adc
lds
pop
mov
test
or
repz
jle
dec
scas
loope
out
mov
mov
or
inc
sub
ret
shll
jbe
repz
sbb
in
mov
jb
inc
pop
add
sbb
pop
les
rcrb
xchg
or
cltd
ljmp
adc
gs
out
arpl
or
insl
sub
cltd
loope
sbb
push
xchg
pop
repnz
fsubrl
adc
dec
fmuls
add
cltd
xor
inc
and
cmp
loope
sub
mov
xchg
push
fistl
je
mov
ds
mov
arpl
sahf
js
push
scas
sub
fcoml
dec
gs
add
pop
addr16
pushf
into
hlt
mulb
push
inc
mov
inc
inc
inc
jns
ja
mov
test
inc
pop
inc
rcr
cmovno
hlt
xor
test
cmp
pop
pop
outsl
loope
cs
cs
jae
jle
shlb
push
ret
mov
popf
clc
lret
push
push
jae
cmc
or
fiaddl
rorl
outsl
in
xchg
pusha
sub
fiadds
shlb
in
ja
imul
sbb
inc
add
fmull
fdivr
xor
test
inc
in
stos
mov
mov
inc
adc
rcl
xchg
jnp
iret
out
pusha
or
mov
push
sbb
out
push
rcrb
arpl
fsubr
add
push
xor
dec
add
inc
fmull
cmpsb
in
js
or
int3
stc
in
call
mov
call
in
xchg
cmpsb
out
push
arpl
dec
fldcw
pop
enter
mov
pop
mov
mov
cmp
mov
push
mov
out
mov
mov
aaa
sbb
mov
outsl
test
adc
stos
xor
pop
pop
movl
xor
sbb
push
jl
mov
push
nop
test
mov
inc
jle
repz
xchg
push
xor
sub
imul
nop
and
mov
scas
icebp
addb
mov
scas
cli
push
loope
out
push
dec
test
add
jp
jae
sbb
mov
dec
lcall
xor
jmp
out
fsubl
push
adc
sbb
adc
sub
decl
adc
lcall
jl
jne
fadds
sub
pop
scas
popa
mov
roll
cmpsb
mov
pop
je
sub
and
ja
mov
jnp
divb
cmp
sti
push
add
daa
add
repnz
pop
ret
outsb
mov
stc
adc
push
mov
xor
push
subb
jge
jl
enter
fs
mov
mov
mov
mov
cmpsb
xor
daa
pop
out
xlat
and
xor
push
pop
in
std
and
sbb
push
or
pushf
ja
leave
cli
repz
out
lods
mov
pop
inc
andl
dec
iret
push
mov
sub
hlt
pop
push
jbe
dec
sub
lock
push
add
das
mov
mov
rol
nop
push
push
mov
fdivp
test
inc
fwait
mov
pop
jmp
in
cmp
popa
push
mov
or
ret
mov
jo
add
arpl
out
bound
stos
push
push
inc
repnz
push
punpckhwd
xor
shlb
mov
inc
sahf
inc
rclb
push
out
loope
rorl
aaa
lock
and
loop
add
mov
and
lock
sub
xchg
cmp
mov
insl
mov
add
sbb
mov
cmp
xor
ljmp
ret
jl
cmc
xchg
iret
inc
push
stos
fbstp
adc
rclb
xchg
sbb
mov
xchg
or
in
jb
push
jg
out
push
incl
js
std
dec
push
inc
inc
jne
jbe
in
cli
ficomps
mov
cld
jb
or
adc
pop
xchg
sub
js
aas
push
and
sti
jns
and
cwtl
sahf
dec
outsb
insb
add
nop
clc
and
jne
push
xlat
inc
lock
xor
adc
jb
lods
push
mov
fstpl
cmpsl
pop
stos
push
push
loop
enter
pop
incl
and
inc
mov
dec
cmp
add
in
cmp
nop
inc
and
gs
test
xlat
cmp
adc
dec
clc
or
xor
dec
std
fwait
dec
ffreep
jge
ret
rorb
sarl
push
xchg
xchg
ja
test
xchg
out
adc
push
dec
repz
filds
pushf
xchg
push
shll
enter
loope
ljmp
gs
adc
rorb
sub
stc
mov
mov
cmc
into
orl
loope
cmp
dec
hlt
jo
pop
stc
pop
sbb
lock
xor
pop
mov
mov
or
ds
and
roll
clc
scas
xchg
repnz
pop
fbstp
push
push
push
add
adc
shl
jb
and
js
jae
sbb
cmpb
rcll
push
inc
std
nop
xlat
fisubl
int
insb
xor
adcl
xchg
xchg
add
clc
jnp
fistl
jmp
jno
mov
test
fisttpl
sub
or
dec
jbe
les
call
inc
ret
cltd
sarb
dec
nop
sbb
lcall
inc
or
pcmpeqd
sbb
imul
mov
aaa
mov
mov
or
js
ja
dec
xchg
fildll
cmp
nopl
test
aas
dec
imul
out
push
lds
jae
mov
loop
xchg
scas
and
push
out
jecxz
xchg
jbe
mov
mov
cli
fdivp
pop
mov
cmpsb
repz
adc
fisubs
mov
sub
pusha
sti
adc
sbb
mov
mov
movsb
xor
sahf
sbb
movsb
mov
add
push
or
mov
mov
fidivl
jae
push
inc
fimuls
add
test
inc
push
adc
pop
dec
lret
mov
aad
addr16
mov
jg
addr16
lcall
imul
testl
xchg
and
mov
add
mov
dec
push
dec
test
xchg
das
ljmp
push
or
xchg
testl
adc
je
aam
adc
subb
inc
jmp
jbe
mov
fdiv
adc
mov
pusha
outsb
ja
popf
loop
push
std
mov
je
cwtl
push
dec
mov
mov
in
jbe
aas
outsl
or
cmpsb
adc
cmp
mov
cs
les
in
ljmp
xor
pop
testl
cltd
xor
into
shrl
scas
mov
jb
rolb
push
inc
in
cli
test
xchg
mov
out
pop
nop
es
xor
into
lahf
mov
fcoml
adc
sub
adc
adc
subl
jno
push
inc
pop
movsl
pushf
push
fstpl
clc
xor
xchg
push
pause
insl
and
inc
leave
pushf
aad
inc
lods
dec
lcall
xor
stc
outsl
xorb
mov
add
push
stos
add
xlat
dec
shll
pop
cmpsl
fistps
jle
mov
shlb
cmpsb
stos
sub
dec
loop
push
inc
mov
inc
and
idiv
adc
jp
xor
xchg
xchg
lahf
cmpsb
jl
xchg
xchg
decl
sub
mov
jl
aam
out
inc
jo
lcall
enter
mov
xchg
pop
lock
add
out
roll
sbb
lahf
test
pop
sbb
lods
sbb
push
arpl
jmp
pop
pop
and
lods
xor
mov
push
inc
jl
jnp
pop
lret
pop
out
sahf
mov
sub
ss
cwtl
cmp
cmpb
inc
push
or
mov
xor
and
and
in
std
xor
push
jecxz
int3
repnz
mov
pop
outsl
jge
iret
sbb
and
adc
movsl
jns
push
mov
pop
pop
xor
xchg
adc
pop
outsl
and
push
insb
aad
ficomps
cmc
jns
cwtl
hlt
mov
or
and
pop
xor
xor
nop
mov
cld
jns
dec
rolb
sub
cmp
pop
cs
out
js
jae
pop
sbb
lods
pop
rorl
adc
outsb
or
push
xchg
mov
jo
leave
loop
mov
mov
mov
pop
fcomps
repz
mov
les
sbb
sbb
ljmp
push
pop
or
jmp
cld
hlt
ret
mov
in
mov
pop
rclb
jle
push
inc
loop
mov
lock
xchg
mov
in
scas
rcr
loope
push
adc
out
pushf
push
lret
dec
jb
mov
push
mov
adc
or
push
jno
add
mov
addr16
out
push
int3
mov
test
xchg
sub
or
jno
sbb
je
aas
int3
push
lahf
jbe
out
cmpsb
jl
or
sub
add
mov
adc
mov
outsb
mov
int
sarb
dec
fiadds
mov
lcall
cld
loopne
insb
jecxz
lahf
cmp
mov
cmpsl
adc
inc
lret
fidivrl
mov
ucomiss
cmp
xchg
mov
fisttps
mov
xor
jg
insb
inc
fisttps
jne
clc
and
je
or
jecxz
xlat
dec
mov
and
dec
scas
test
inc
jo
shlb
dec
mov
fprem1
pop
jno
pop
test
das
jae
add
mov
adc
mov
push
sbb
lret
sbb
cmp
fs
pop
inc
in
out
shlb
in
repz
das
xor
add
dec
mov
stos
adcl
push
jg
push
test
outsb
out
xchg
cmp
ror
or
jmp
push
cmc
scas
out
insl
test
push
mov
dec
cmp
mov
ret
iret
mov
mov
pop
sarb
or
jb
insb
jle
fs
xlat
and
xchg
fildl
cmp
cmp
inc
cmc
icebp
adc
ja
popa
nop
and
pop
sub
jl
testb
inc
popf
and
icebp
pop
jae
inc
popa
inc
jmp
stos
sbb
in
outsl
xchg
inc
pop
push
inc
leave
sbb
call
xchg
mov
in
or
loope
add
and
lock
dec
mov
mov
adc
test
fucomip
sahf
sbb
cs
mov
adc
imul
setle
inc
daa
push
mov
shl
shl
adc
cmovge
das
inc
mov
cwtl
outsl
in
cld
lret
and
mov
or
add
inc
mov
pop
and
push
stc
adc
add
jle
cmp
jge
push
jg
mulb
inc
xchg
pop
ljmp
add
mov
sub
mov
clc
out
mov
iret
xor
add
pop
pushf
rcrl
sub
mov
addr16
xorl
jne
mov
fwait
hlt
pushf
lahf
pop
push
dec
xor
subb
cltd
clc
loopne
and
mov
fistpl
push
xchg
pushf
insl
mov
and
sub
lds
insl
dec
and
aam
jl
dec
pop
mov
xor
cli
mov
add
loop
lcall
repnz
cld
and
in
mov
sub
lcall
pusha
aad
inc
and
out
in
rdmsr
ja,pn
pop
sahf
gs
pushf
pop
int3
add
sub
xchg
rclb
jae
hlt
jno
repnz
adc
push
je
cld
iret
jno
fstl
xchg
and
mov
lret
fcompl
sub
xchg
outsb
icebp
sbb
lea
add
mov
push
cmp
mov
add
jecxz
inc
lahf
mov
mov
push
ret
rclb
das
sti
push
loop
stos
sbb
and
andl
cli
push
out
enter
testb
sbb
notl
scas
cli
addr16
enter
enter
push
cmc
or
or
xchg
gs
divb
test
push
xchg
and
xchg
dec
icebp
in
mov
mov
imul
inc
pushl
data16
test
enter
adc
xchg
jmp
fimull
fnstsw
test
mov
mov
imul
aaa
arpl
mov
adc
push
outsl
mov
lock
enter
adc
sub
xor
add
dec
cmc
shrb
sbb
sti
pop
enter
and
loop
jecxz
dec
sub
lods
lret
lret
pushf
jle
pop
vminss
sbb
int
das
mov
jge
cmp
cmp
mov
sub
test
fwait
scas
ret
pusha
rcrb
lret
sbb
cmc
sub
cmc
mov
ljmp
repz
cmpsb
testb
mov
mov
ficoml
jb
out
jle
and
push
insl
idivl
add
mov
jle
es
lods
inc
jge
push
or
mov
out
scas
outsl
leave
jmp
xor
scas
js
xor
iret
or
iret
imul
rclb
pop
lods
push
pop
jmp
loope
push
add
fldl
adc
jnp
xchg
call
repnz
lods
cmpsl
sbb
pop
adc
adc
push
loop
in
sbb
adc
and
jp
shrb
and
adc
scas
shrd
pushf
jne
jmp
xchg
aam
add
dec
push
or
stc
sbb
cmpsl
fisttpl
ret
sbb
pushf
out
iret
in
pusha
inc
rorb
xchg
jg
fmuls
sub
mov
subb
push
or
sub
ficoml
fisttpll
lret
dec
subl
imul
jne
stc
jg
mov
or
clc
sahf
push
cs
mov
dec
or
and
imul
sbb
inc
arpl
cmp
xchg
and
jecxz
scas
cwtl
rol
std
inc
lods
inc
jge
lods
jo
or
pushl
pop
xchg
fwait
jmp
cmovge
cmpsl
outsb
jns
loop
or
scas
adc
push
out
pop
mov
sti
fdivl
das
cvttps2pi
sub
inc
rol
add
adc
adc
and
lret
int3
sbb
popa
fstl
mov
jge
sub
leave
cmp
lods
shll
lods
nop
mov
cltd
stos
mov
mov
loop
push
mov
xchg
jbe
xor
mov
push
cmc
jp
mov
outsb
mov
lret
nop
les
push
stos
movsl
add
pop
cmp
dec
stos
push
xor
xchg
in
xchg
loopne
js
es
das
mov
scas
add
sti
and
mov
in
pop
clc
insl
in
jae
pop
lea
in
arpl
jg
daa
lcall
sub
and
fidivrs
shl
or
rcr
xchg
out
cmp
out
loop
cmp
cmp
add
ret
sarb
repz
ret
xor
fists
mov
sub
and
jp
scas
xchg
and
imul
fdivl
adcb
hlt
cmpsb
fwait
fwait
add
jo
popa
jne
outsl
movl
mov
lods
mov
dec
lret
mov
in
in
loopne
push
outsl
scas
cmpsl
fwait
clc
xor
aas
ja
ret
iret
jne
aam
jne
in
inc
movsl
dec
dec
aaa
pop
enter
fsubl
imul
jns
or
pop
jge
rolb
mov
lret
in
xor
lods
mov
pop
xor
lea
mov
or
ljmp
adc
mov
scas
sbb
mov
stc
rcll
dec
adc
ss
mov
mov
mov
lcall
cltd
mov
and
movsb
and
push
and
ret
lds
adc
dec
sub
scas
sbb
or
mov
inc
add
push
inc
test
inc
lahf
sub
daa
mov
hlt
inc
mov
inc
add
sub
inc
mov
push
xchg
int
cmp
sahf
nop
lea
lcall
lea
test
xchg
mov
lretw
out
xlat
cmp
outsl
and
into
pop
loop
xor
push
xchg
call
sub
cs
sti
mov
cs
sbb
movsb
cmpsb
mov
jmp
cmc
inc
sub
test
test
add
cmp
cmp
and
mov
out
and
inc
cltd
pop
add
sub
pop
sahf
mov
jmp
or
sbb
push
push
pop
pushf
and
and
and
in
push
shll
loop
lret
cltd
xrelease
xchg
imul
pop
orl
rclb
adc
nop
das
gs
jns
std
ja
rol
les
cmpl
or
iret
es
push
push
mov
gs
mov
std
jns
test
push
inc
dec
insb
push
mov
mov
sub
add
out
cmpl
cltd
cmp
cmp
and
imul
out
jge
add
pushf
out
mov
pop
movsl
jmp
mov
lods
mov
std
pop
adc
out
xor
mov
sub
orl
lods
xor
inc
pop
push
js
aas
adc
shlb
push
pop
lret
fnsave
inc
imulb
xchg
mov
sub
jb
in
cmpsl
or
dec
sbb
fwait
dec
lds
rolb
dec
xchg
dec
cld
aaa
sub
adc
mov
mov
cmp
pop
stc
ret
inc
aaa
mov
mov
stos
jmp
xchg
pop
xor
and
sbbb
int
cmpsb
imul
jl
add
xor
xor
int3
jbe
fdivr
jmp
scas
loope
fisttpl
or
push
cvttps2pi
mov
lret
sarl
decl
mov
imull
rcrl
cmp
in
xchg
jp
testb
loope
sbb
fwait
sbb
js
sbb
enter
inc
xchg
popa
mov
inc
add
insl
call
cwtl
lcall
stc
int3
shll
pop
add
add
inc
push
sbb
enter
jno
inc
mov
scas
pop
mov
andb
addl
jmp
pushf
sbbl
pusha
cmpsb
push
xor
mov
mov
cmp
ss
push
cmp
push
push
sahf
das
jnp
movsb
leave
mov
lcall
jo
mov
subl
pop
cmp
sbb
rclb
ja
dec
lods
mov
cmc
sub
xor
out
add
std
mov
or
push
jp
and
jmp
aaa
push
pop
push
xchg
push
push
out
mov
rorl
inc
mov
ja
xor
dec
adcl
cwtl
imul
mov
mov
cli
ja
das
inc
mov
xchg
fwait
jne
cs
jp
movsl
jge
mov
add
add
adc
lods
ficoms
mov
cltd
and
les
idiv
scas
outsb
loopne
out
test
push
xor
mov
push
lret
in
jbe
xchg
or
imul
fsubrp
add
pop
sub
in
add
jo
add
sti
leave
push
pop
ret
xlat
cmp
sub
out
mov
pop
mov
adc
adc
mov
subb
pop
xchg
inc
dec
ljmp
stos
and
addr16
subl
dec
cmp
ret
insl
in
xor
jp
mov
lcall
fcomip
rolb
push
test
sub
gs
adc
cmp
xor
xchg
inc
inc
insl
push
or
mov
and
movsb
inc
xchg
xor
scas
push
mov
sbb
ds
jl
xchg
out
push
mov
and
add
ret
add
std
push
outsl
adc
sub
into
dec
out
andb
out
dec
insb
leave
mov
push
add
pusha
std
sub
sub
sbb
cmp
in
in
push
sub
cmc
adc
pushf
cmp
paddusb
push
cwtl
adc
imulb
mov
sub
jmp
scas
or
adc
xchg
loop
cmp
mov
dec
push
mov
add
pop
decl
inc
sub
push
lods
fs
mov
push
popf
hlt
jbe
movsb
and
mov
lods
lret
mov
lods
add
divl
fsubrl
add
sbb
repz
aas
loope
fdivs
push
nop
sbb
fisttpl
rorb
fcomi
cmpsl
loope
cmp
pop
mov
andl
dec
clc
pop
xchg
hlt
cmpsb
ljmp
fs
adc
pop
adc
pop
ljmp
inc
icebp
sub
insb
sbb
orl
mov
lret
int
sbb
stos
sbb
dec
jnp
repz
insb
fimuls
inc
sbb
jmp
mov
mov
loopne
unpckhps
fincstp
mov
pop
jno
adc
jns
shrl
xchg
call
xor
inc
xchg
mov
cmp
sbb
inc
ljmp
push
xor
cmp
cmc
xorb
fwait
mov
data16
popf
loop
shll
mov
jl
push
test
cmp
enter
cltd
adc
cwtl
jno
and
lock
and
shrb
addr16
jle
push
bound
outsb
xchg
dec
inc
ds
insb
add
and
mov
and
rorl
mov
xchg
cmc
jmp
mov
xor
push
js
and
data16
popf
pop
leave
add
jl
movsb
adc
scas
test
cmp
inc
jae
cmc
jle
ss
or
dec
jb
and
out
aam
push
dec
pop
xor
out
xchg
adc
add
out
lret
jae
jge
mov
cmp
cwtl
in
cmc
js
mov
in
lock
daa
test
mov
cmp
mov
lea
fsubrl
xorl
fildll
ds
cmc
dec
jg
xor
scas
pop
fsubr
sahf
mov
lods
push
scas
cmp
jnp
pop
xchg
je
sbbl
pop
xor
repnz
and
dec
push
int
xchg
add
lds
pop
inc
add
inc
cmpsl
fcoml
rolb
cld
test
and
inc
shl
lahf
aas
inc
in
adc
jo
adc
lea
inc
mov
sub
jle
pop
push
sub
cmp
gs
out
fcompl
mul
dec
mov
xor
jnp
bound
or
dec
lahf
cmp
pop
outsl
mov
mov
out
mov
push
inc
xlat
in
xchg
fisubs
ror
mov
enter
cmpsl
leave
aam
rclb
jmp
push
dec
mov
cli
mov
push
mov
leave
arpl
xchg
sti
out
xchg
xchg
rcrb
xor
push
xchg
mov
imulb
sbb
aad
ds
ds
fldt
sbb
xchg
aas
cmpsl
adc
popa
fcomip
or
xor
cwtl
test
ss
aaa
stc
jo
rcll
pushf
orb
filds
hlt
imul
mov
xor
in
and
in
push
repz
jl
and
push
inc
aas
add
mov
push
stos
sbb
or
jnp
jns
nop
mov
mov
movsl
xchg
jecxz
add
sbb
pop
mov
mov
data16
fwait
shl
call
mov
cmp
jmp
fwait
sti
ficompl
jp
mov
pop
push
repnz
jg
cmp
lahf
xchg
mov
sbb
push
or
bound
stos
push
jae
xchg
sub
mov
sbb
pop
loopne
loop
xlat
sub
jle
push
ds
in
adc
jmp
dec
xchg
fidivs
les
jnp
ret
sub
jb
cli
adc
sub
or
sbb
sbb
mov
clc
xchg
push
in
lods
dec
xorb
mov
loopne
xchg
push
nop
cmpl
les
movsl
sti
leave
fidivrs
lret
fwait
into
or
loop
mov
add
pop
aas
sbb
or
stos
fmull
fcmovu
pop
sti
testb
in
rolb
cmp
pop
cmp
adc
push
or
or
xchg
cmc
ds
bnd
jecxz
jmp
subl
adc
shld
jbe
sahf
mov
sub
mov
lret
and
shlb
aam
fwait
jo
testb
nop
bswap
push
scas
xor
cmc
xchg
subb
dec
dec
daa
ret
out
xchg
std
movsb
stos
mov
sahf
lret
cmc
xchg
insl
adc
aam
cmp
rol
call
push
xor
cmp
aad
mov
jp
sub
xchg
xchg
xor
sub
fpatan
add
mov
cmp
stc
mov
jp
or
repnz
lea
stc
or
lods
testb
push
or
sub
cmp
mov
sahf
in
xor
stos
mov
jmp
sahf
adc
data16
inc
push
jp
cmp
rcrb
adc
pop
shll
cld
push
xchg
stos
and
xchg
adc
imul
outsb
sbb
pop
mov
pop
arpl
jp
jg
cmp
fs
push
inc
sub
xor
adc
aam
mov
sbb
cmp
inc
xchg
scas
pop
cmp
mov
lds
js
divb
aam
xor
mov
lds
push
inc
popa
gs
iret
sbb
test
pop
cmpl
xchg
xlat
loop
xchg
pop
jecxz
in
dec
sub
sbb
mov
sub
xlat
xchg
mov
push
pushf
mov
fdivr
mov
pop
stos
xor
loope
movsb
iret
fs
push
sbb
in
adc
push
lret
mul
jne
xchg
shrl
mov
incl
jae
into
cld
inc
pop
ret
data16
test
pop
loope
dec
push
pop
mov
ficompl
sub
inc
xchg
pop
mov
ret
adc
cmpl
add
hlt
in
xor
ror
sbb
mov
inc
enter
dec
adc
and
lds
loope
xor
inc
outsl
pop
shr
sub
rorl
stos
cmp
ret
shll
or
mov
test
cmp
dec
xchg
shll
shll
rolb
or
push
sarl
inc
hlt
mov
loope
push
loopne
push
sbb
cmp
mov
ljmp
pop
nop
outsb
les
pop
les
popa
dec
xlat
mov
das
sbbl
xchg
jns
std
jle
xor
jl
cs
lods
addps
out
xchg
das
and
loop
xchg
add
daa
leave
xor
cmp
das
fldcw
das
repz
mov
xor
xor
mov
stc
cmp
int
mov
fs
push
aad
jb
shrb
pushf
sbbb
add
test
mov
lods
cmpsb
mov
dec
sbb
and
mov
clc
ret
mov
cld
mov
call
arpl
adc
pop
mov
xlat
mov
sbb
cmp
adc
imull
xor
mov
std
fiadds
sub
lods
adc
jne
imul
testb
shlb
pushf
cmpsb
inc
rcrl
mov
es
cmp
xor
jno
fcomip
ret
mov
lret
cmpsb
iret
and
insl
pop
loop
testl
pop
hlt
push
popf
pop
xor
iret
in
inc
jecxz
rcll
scas
lret
inc
aaa
icebp
shlb
xorb
aas
xchg
leave
or
mov
adc
mov
aad
adc
mov
add
pop
xor
cmp
add
xlat
nop
loope
sbb
sbb
movsl
ss
lds
outsb
xchg
mov
sar
jb
xor
mov
cmp
aad
jmp
push
mov
push
add
addr16
dec
stc
mov
jns
sub
lods
adc
cmp
cs
stos
lret
icebp
inc
mov
int
jg
cld
pop
dec
divl
mov
xor
aad
jp
cld
pusha
lahf
jmp
mov
gs
xchg
cs
icebp
int3
std
inc
js
loopne
adc
addr16
jp
sub
lock
clc
add
daa
dec
mov
fildll
repnz
iret
and
pop
rol
mov
lret
sub
pop
mov
loopne
xchg
scas
bound
mov
stos
int3
sub
pushl
fstpl
outsb
cmp
in
dec
fldt
sub
and
xchg
jl
sub
xor
data16
ss
outsb
jmp
hlt
dec
cwtl
stos
cs
popa
jns
std
aam
and
addr16
shrl
sbb
pusha
dec
addb
out
pop
loopne
int
addr16
in
dec
aas
lcall
mov
jno
xchg
shll
add
imul
lock
sub
cmp
andl
cmp
mov
and
popf
jae
in
cltd
mov
dec
mov
aaa
pop
cld
pusha
or
jp
pop
lcall
popf
pop
mov
sbb
jb
xchg
es
mov
inc
in
jno
imul
lret
ds
adc
or
sti
xor
jno
orl
int3
and
or
aaa
sub
jns
sub
movsl
and
sbb
mov
dec
out
pop
stos
dec
out
or
lcall
lock
mov
addr16
inc
insb
pmulhuw
insl
int
mov
jp
add
and
iret
or
or
xor
int3
cmpxchg
push
and
add
jnp
push
jecxz
fdivp
sbbl
ret
add
or
or
mov
cmp
daa
jp
pop
cmp
mov
xchg
int3
mov
adc
pop
inc
outsl
dec
xchg
pusha
jmp
cmove
outsb
rolb
push
lret
ss
aad
icebp
fstpt
test
dec
scas
fcom
clc
js
into
lret
xor
add
adc
ret
lea
dec
pop
movsl
shll
cmp
mov
out
pop
and
and
xchg
cmp
das
sub
inc
mov
ret
gs
adc
xchg
pushf
jge
adc
adcb
jne
pop
or
stos
movsb
subb
lcall
push
insl
pop
and
popa
and
xor
test
movl
fyl2xp1
mov
push
and
sbb
mov
inc
jle
call
int3
mov
test
jmp
in
dec
jmp
mov
adc
test
adc
sbb
sbb
xor
add
and
imul
mov
inc
or
xor
adc
aaa
or
in
ss
js
xchg
mov
mov
jmp
shlb
imul
test
sbb
dec
jecxz
cmp
test
data16
nop
pop
mov
adc
jmp
scas
test
arpl
imul
cld
adc
imul
jl
sbb
jg
je
orl
lret
cmpsl
sti
pop
jge
adc
and
cli
mov
mov
sbb
jnp
inc
arpl
int3
loop
add
pushf
sub
add
scas
add
mov
clc
xlat
or
jbe
pop
repz
xor
mov
adc
in
enter
inc
out
mov
jle
xchg
mov
dec
add
ret
cli
gs
cwtl
bnd
mov
dec
pop
sbb
or
ret
mov
cltd
xor
js
cmc
cmp
and
outsb
adc
add
jle
dec
lahf
fwait
in
fadds
push
cltd
pop
in
pop
int
rcrl
xchg
cmp
push
arpl
call
fidivs
fldt
fildll
loop
cmp
ret
mov
stc
pop
imul
lods
add
insl
hlt
out
mov
test
js
nop
adc
lock
addb
and
dec
sahf
cmp
jp
add
in
jl
jecxz
out
fsubrl
subb
ss
test
arpl
mov
cmpsl
addb
cmpsb
cmp
or
js
xchg
and
xor
push
call
lahf
xor
lock
loope
or
pop
push
hlt
inc
inc
mov
cmc
pop
call
out
mov
cmp
pop
fiadds
stc
call
push
jo
fcompl
push
shrl
ss
xor
and
xchg
mov
cmp
dec
js
xchg
orb
fs
das
push
mov
dec
dec
fildll
xchg
mov
cmp
push
mov
or
ret
lret
pop
jbe
and
sbb
test
daa
dec
pop
inc
out
int
inc
jb
and
adc
or
jbe
and
scas
lahf
xchg
rorl
gs
popa
pop
jecxz
popf
cmp
and
enter
add
push
std
xchg
sub
mov
push
inc
arpl
insl
movsb
cwtl
stos
out
mov
add
dec
shlb
jb
cmp
cli
stos
xchg
cwtl
jecxz
es
clc
jl
inc
scas
stos
test
es
add
cmc
xchg
xchg
loop
idiv
lret
jl
mov
fidivrl
jp
cmp
lods
lds
pop
sub
push
stos
adc
mov
push
jl
lahf
jb
ljmp
ljmp
or
idiv
pop
dec
sub
dec
or
adc
mov
dec
dec
es
xor
xchg
cmpsl
mov
shll
sub
sahf
push
adc
dec
stc
pop
iret
cmpb
adc
mov
imul
mov
and
mov
xorl
xchg
xchg
add
ret
lret
adc
xor
mov
jg
sub
subb
jnp
aas
or
popf
jne
mov
ret
add
scas
loope
ljmpw
lods
push
push
aaa
adc
lds
dec
rolb
mov
pop
mov
loopne
lret
fstp
test
mov
jne
or
adcb
xchg
in
aad
fnstcw
push
sub
sub
sub
sbb
ds
into
ret
in
testl
xor
idivb
repz
fisttps
sti
mov
inc
je
pop
lock
adc
or
orl
out
adc
leave
push
mov
sti
aas
mov
imul
push
mov
xchg
push
sbb
xchg
xchg
jbe
call
jge
out
leave
nop
addr16
add
jp
push
in
adc
sti
mov
mov
out
xor
out
and
lea
mov
test
fwait
push
stos
scas
adc
push
dec
and
dec
fisubs
pop
pop
inc
cmp
mov
fsub
push
mov
out
sbb
mov
cmp
je
ret
or
orb
shlb
pop
sbb
or
add
xor
mul
ss
clc
fldcw
stc
jmp
cmove
jge
add
call
mull
xchg
addr16
push
add
aam
adc
inc
jne
outsl
aad
jge
ljmp
mov
mov
jb
pusha
and
sbb
test
jge,pn
lods
cld
nop
popf
mov
sahf
enter
xor
mov
jne
nop
pop
mov
add
pop
movsl
mov
or
sub
lods
outsb
push
stc
and
repz
insl
or
sarb
pop
shrl
fwait
pop
jo
adc
push
inc
sbb
fcmovnb
jnp
pop
cmp
pop
cli
push
cmpsl
inc
pop
rolb
jle
mov
popa
push
ss
add
in
adc
je
xchg
inc
jge
push
cmp
dec
or
mov
jg
push
mov
inc
int
xchg
mov
cmp
pusha
data16
mov
ret
cmp
xchg
lds
std
pop
sbb
cmp
or
out
popa
repz
loop
test
cmp
and
add
dec
and
insb
mov
shrb
add
or
in
adc
push
maxps
pop
mov
mov
sbb
sub
cltd
aam
dec
rolb
stos
inc
call
adc
aad
jge
sbb
mov
and
mov
inc
push
bound
sahf
daa
push
dec
ljmp
mov
xchg
in
outsl
stos
or
in
and
pop
inc
push
ss
ret
popa
rorl
or
es
shll
xor
push
inc
leave
jnp
xchg
sub
out
repz
pushf
sbb
lret
gs
bswap
xor
dec
outsb
test
jns
push
and
je
adc
xlat
and
jo
lcall
inc
add
pop
or
fxch
mov
fstpl
mov
cli
jnp
dec
in
push
jb
mov
sub
scas
pushf
in
popf
lods
sbb
xchg
pop
dec
mov
and
xchg
sub
sbb
push
je
daa
inc
adc
xor
add
cmp
into
sub
and
arpl
push
loop
pop
sbb
out
mov
cs
cmp
push
pop
push
xchg
or
or
and
dec
and
incb
add
fwait
cmp
pmaxsw
loopne
jg
mov
mov
push
dec
mov
and
out
jne
in
pop
and
stc
jae
sbb
mov
psllw
inc
insl
mov
outsb
test
mov
mov
inc
dec
aam
outsl
push
jnp
aad
hlt
add
stc
stos
popa
insb
jo
xor
ja
sub
cmp
inc
outsl
dec
sub
ljmp
push
jp
cmp
scas
fwait
push
lds
or
pusha
hlt
jmp
movsb
inc
cmp
xor
mov
cli
clc
je
jnp
xchg
jne
mov
mov
pop
mov
sbb
aaa
adc
and
jb
add
stos
mov
lods
loopne
stos
xchg
pop
mov
pushl
jns
jns
dec
hlt
mov
fcom
call
in
push
iret
mov
fsubl
into
lret
out
fdivrl
inc
test
jae
stc
inc
mov
mov
lods
cmpl
stos
pop
push
xchg
and
mov
repz
fiaddl
adc
sbb
ja
fidivrs
xchg
lcall
cltd
outsb
data16
loopne
cmp
xor
mov
jnp
jno
pop
and
pop
mov
xchg
fisttps
xchg
xchg
xor
add
icebp
xchg
imul
mov
push
jmp
aad
test
or
push
adcb
sbb
push
mov
cmp
adc
popa
cltd
cmpsl
fwait
push
fs
cs
pop
andl
imul
jp
sbb
lods
sub
mov
and
xlat
or
outsb
insb
loopne
iret
mov
test
mov
cmp
in
les
popa
or
sbb
std
sbb
enterw
ljmp
enter
mov
cli
test
push
nop
inc
xchg
dec
push
mov
mov
push
inc
jb
jge
ss
dec
cltd
mov
or
mov
push
push
rcrb
push
lods
stos
mov
jl
mov
aad
adc
push
xor
pop
decl
jbe
push
jl
bound
pop
sub
inc
hlt
lret
gs
mov
andb
and
pop
jp
push
cmpb
push
cmp
mov
orb
add
mov
pop
lock
mov
aaa
push
mov
sub
inc
adc
sbb
jp
or
adc
test
decl
dec
js
xchg
loope
inc
or
iret
cmpsl
addb
imul
push
push
pop
loopne
sbb
jmp
inc
mov
sahf
jmp
stos
shlb
mov
cmp
mov
movsl
leave
cli
pop
and
mov
sub
test
adc
push
xchg
cmp
sub
stos
jne
cmp
adc
and
xchg
or
rorl
hlt
push
mov
imul
lods
or
loopne
rclb
cmpb
out
push
cltd
out
pop
dec
ss
push
dec
cltd
or
cvtpi2ps
daa
mov
or
sub
pop
fsubrs
cmp
aad
pop
imul
xchg
pusha
jl
jbe
sub
xchg
mov
repz
test
cmp
mov
insb
lock
test
fs
xchg
or
mov
jmp
jmp
jns
leave
push
mov
lods
or
adc
push
mov
xlat
xchg
daa
push
sub
imull
jno
dec
sbb
push
or
hlt
fdivl
sub
jecxz
enter
stc
pop
insl
ds
div
jle
inc
sbb
xor
pop
dec
sar
movsl
xchg
jb
sub
mov
stc
outsl
cmp
mov
lds
mov
out
stos
push
add
jge
fsubrl
lret
lea
loope
jno
jo
mov
pop
push
iret
stc
stos
pop
leave
jns
add
mov
leave
xor
add
and
faddl
fildll
fbstp
xchg
pop
sub
dec
leave
insb
in
or
ss
sbb
push
les
fidivl
mov
cmp
adc
sbb
cmp
aad
sub
stos
inc
loope
nop
mov
out
icebp
shlb
push
adc
lds
cmc
pop
pop
xchg
aam
pop
test
mov
enter
test
mov
popa
jp
rdmsr
pushw
pop
and
pop
cmpsl
rcrb
jne
les
cmpb
in
test
or
sbb
ret
mov
pop
fisubs
push
xchg
add
std
cmpsb
out
mov
xchg
mov
pop
scas
jne
push
dec
fnstenv
cmp
push
aas
mov
imul
fdivl
mov
sbbl
ljmp
outsl
lret
mov
pop
jge
roll
aad
ret
lret
jmp
repnz
fisubl
and
cltd
jge
dec
popa
dec
popf
lods
cmp
les
andl
stos
jo
inc
push
jne
pusha
cwtl
cmp
jb
popl
imul
push
xchg
push
sub
nop
xchg
mov
insl
in
lods
sti
mov
lret
jp
lret
jl
scas
jns
fisttps
and
testl
cmc
pushf
scas
sbb
dec
ds
and
pop
mov
mov
sub
mov
add
enter
ficoml
in
xchg
mov
movsl
adc
push
test
int3
fucomip
arpl
sti
mov
xchg
sbb
pop
mov
adc
cmpsb
push
js
rorl
and
sbb
test
cmp
mov
inc
jecxz
adc
jo
aaa
inc
mov
adc
mov
mov
mov
push
ja
aam
xor
imul
addr16
mov
mov
pop
adc
xlat
out
xchg
push
mov
in
or
pop
sub
iret
sbb
shr
cmp
nop
push
ljmp
popa
inc
cwtl
cmpsb
and
sbb
iret
ficompl
push
jge
gs
jns
std
xchg
sub
and
or
adc
dec
dec
jb
stos
movsb
rorl
mov
fidivrs
popf
xlat
test
cs
sbb
inc
dec
popf
inc
cmp
sbb
push
loopne
push
sbb
push
push
xor
sbb
scas
inc
mov
add
dec
xor
pop
popf
in
mov
lock
sub
imul
in
jecxz
cmp
mov
ret
add
add
mov
fnstcw
insb
mov
clc
imul
sbb
rcrl
jb
out
xchg
fdivr
ss
mov
or
jle
add
outsl
jne
aaa
loop
ss
lea
and
cli
and
aas
pop
mov
cmc
aaa
test
test
testb
mov
test
inc
dec
sub
daa
movsb
push
sbb
sub
nop
xor
addr16
sub
push
push
mov
rol
or
sarb
imul
sbb
les
cmp
xchg
mov
xor
les
cmp
stos
mov
xchg
add
fstps
mov
pop
adc
or
sub
imul
or
jb
mov
xlat
dec
movl
xor
xor
imul
inc
mov
jae
mov
push
nop
xchg
jecxz
frstor
lahf
ror
mov
xchg
xchg
loope
repnz
imul
sbb
dec
jns
mov
iret
imul
in
xchg
icebp
dec
mov
pop
imul
xchg
call
mov
leave
sub
jmp
and
inc
jbe
js
add
inc
shl
mov
mov
mov
lods
mov
dec
icebp
loope
lret
jno
iret
mov
dec
fisttpl
pop
dec
rcll
mov
xor
hlt
addr16
in
push
mov
mov
lcall
jae
xor
outsb
jb
into
cmpsb
popf
jnp
scas
push
or
inc
lods
or
jne
dec
lods
jmp
mov
xor
leave
push
mov
xor
enter
pushf
and
sbb
cmp
mov
mov
icebp
cmp
int
sub
jne
or
stc
fisttps
add
loopne
movsl
popf
jno
loope
orl
push
dec
add
or
pop
push
mov
ja
sbb
call
dec
inc
nop
add
test
push
ret
icebp
dec
sub
aaa
adc
adc
in
push
xchg
xor
in
imul
insl
add
insb
dec
rcll
test
jo
cmp
outsl
in
dec
sub
jecxz
test
inc
xchg
jmp
jecxz
push
xchg
adc
pop
xchg
adc
cld
fnsave
dec
lret
and
insl
sub
push
in
nop
adc
lds
xchg
pop
insb
xor
sub
psubw
xchg
repz
ja
mov
shrb
stos
clc
aaa
xchg
add
xchg
adc
addr16
incl
ja
pop
pop
test
sti
hlt
daa
pop
adc
outsl
sarl
jle
test
movsb
ret
xlat
rolb
dec
or
test
add
dec
xchg
leave
shlb
mov
xchg
xchg
out
in
in
cmpsl
pop
orl
outsl
cmpl
fstl
in
ficompl
ficoms
les
nop
call
jo
stos
mov
mov
ss
pop
mov
hlt
ficompl
xchg
pop
aam
sti
outsb
xor
or
adc
icebp
lods
pop
and
mov
sbb
mov
xor
ss
stos
jae
pop
xchg
out
ja
sub
outsb
js
lock
adc
inc
in
jne
jns
xchg
inc
popa
or
xchg
popa
push
rcl
xchg
movsb
enter
clc
aad
mov
imul
xor
mov
outsl
xor
and
jnp
pop
pop
cmc
cs
add
repnz
or
push
fs
and
sbb
cmpsb
jo
mov
aad
inc
jle
inc
pop
mov
cwtl
add
jl
jb
scas
out
inc
mov
jle
les
lea
sub
call
mov
fcmovu
and
push
in
push
and
add
adc
sbb
les
pop
stos
add
push
in
sbb
jo
pusha
jnp
dec
mov
jae
call
cs
jb
movsl
call
add
cmc
in
lea
dec
dec
loopne
hlt
test
jp
gs
test
dec
push
xchg
sar
add
xor
shrb
lds
sub
xchg
and
fildl
jmp
movsb
fs
add
jge
scas
pop
xlat
xor
fs
lret
sbb
fiaddl
mov
inc
xchg
das
outsb
int3
adc
stc
mov
inc
daa
push
mov
out
mov
xchg
push
clc
data16
je
mov
mov
fildl
jno
mov
lcall
mov
aas
push
aam
out
fcomip
push
mov
mov
jle
xor
mov
mov
imul
push
inc
sti
movsl
int
cwtl
push
push
lds
outsl
inc
lds
gs
andl
les
movsl
rolb
push
sub
test
inc
push
push
pand
sbb
or
inc
in
jp
mov
adc
in
loop
stos
enter
inc
xchg
mov
sub
sub
xor
andl
lahf
sbb
test
call
arpl
popa
mov
ja
aam
mov
xchg
push
lea
shll
mov
lods
mov
sahf
xlat
lods
mov
inc
int3
inc
in
aas
in
sub
xchg
xchg
inc
pop
aad
push
into
lods
adc
mov
inc
outsb
je
sub
push
aad
popa
cmc
jecxz
cmpsb
jne
cmpsl
pop
mov
dec
ficompl
scas
stc
cmp
lcall
mov
lret
jbe
dec
xchg
fxch
bound
mov
popf
pop
repnz
ret
inc
and
push
xchg
pop
and
imul
push
int3
cli
not
xor
lahf
test
xchg
fwait
inc
xor
arpl
push
sbb
pop
mov
icebp
sbbb
in
arpl
rorb
pop
push
mov
adcb
shl
push
jne
dec
daa
fwait
jno
ljmp
mov
fidivrl
jns
pop
adc
arpl
mov
shr
outsl
mov
xchg
cmp
cmp
inc
rcr
loop
or
loope
arpl
pop
pop
sbb
inc
or
xchg
cmpsb
iret
mov
clc
in
jge
aam
dec
enter
daa
lods
mov
push
jnp
fdiv
jne
ret
fs
mov
or
cs
lds
mov
push
inc
test
mov
imul
icebp
stc
test
xchg
repnz
roll
lods
pop
or
jmp
ss
mov
jge
xor
lods
mov
mov
jae
insl
jno
push
jl
dec
mov
mov
insb
enter
push
xorb
pop
jg
mov
jg
cmp
mov
jb
or
dec
movsl
mov
aas
jl
mov
pop
mov
leave
iret
idivl
insb
arpl
in
iret
jmp
cmp
insb
xchg
movsb
test
or
stos
dec
jns
pop
inc
mov
sbb
mov
into
sti
pop
or
sub
and
push
cmp
sub
or
add
test
sbb
inc
outsb
aas
and
sti
movsb
jecxz
int
inc
and
out
sbb
adc
xchg
dec
cmp
jl
mov
ret
aad
dec
adc
aad
sub
hlt
jle
jnp
loop
bsf
std
sbb
and
mov
or
fisubs
pop
cmp
mov
imul
mov
lcall
roll
xor
xchg
lret
xchg
dec
scas
push
inc
js
xor
stc
inc
dec
incl
push
lds
pushf
test
mov
or
jns
pop
dec
insb
icebp
popw
cmpsl
test
sbb
add
dec
adc
xor
adc
push
pop
dec
add
and
xor
push
fstl
mov
xlat
loopne
std
cld
sub
mov
cmpsl
bound
aas
out
pop
dec
mov
data16
repnz
ffreep
pop
int3
sbb
or
dec
or
cmp
mov
jecxz
inc
or
insb
inc
inc
push
cmp
test
ss
arpl
andl
dec
or
mov
repz
adc
insl
roll
or
cli
cmc
or
push
outsl
aaa
sub
xchg
xor
out
jae
fstp
sti
adc
push
push
mov
fmulp
rcrb
test
mov
loop
xor
adc
mov
xlat
int
cli
loope
lret
sub
lahf
sub
in
out
pop
mov
scas
mov
dec
cmp
ja
jmp
adc
push
pushf
hlt
push
ljmp
fdivs
adc
je
and
es
push
sbb
xchg
out
push
sub
loop
mov
mov
sbbl
push
jmp
mov
rcrb
xor
fbstp
add
dec
jb
out
out
jg
mov
aad
xchg
sbb
fstps
xor
sbb
imul
sarb
dec
xor
mov
inc
sub
push
out
pop
lahf
xlat
xor
jge
cmp
adc
pop
into
dec
test
rcll
mov
cmp
dec
sbb
jnp
cmpsl
mov
pop
cmpsb
roll
cmp
push
push
xchg
lcall
inc
push
push
and
jno
lahf
test
mov
dec
push
sbb
adc
dec
push
in
inc
es
mov
push
leave
jge
addr16
and
outsb
outsb
bound
loop
fst
xchg
push
cmp
shlb
int
test
imul
in
mov
rcl
mov
sti
xchg
stc
out
test
aad
das
test
jns
jecxz
das
adc
inc
mov
and
push
xchg
movsb
loop
out
jnp
pop
icebp
inc
mov
mov
pmaxub
out
and
jae
jnp
add
inc
inc
sbb
dec
mov
mov
pop
shrb
cmpb
outsl
lods
cmp
cmp
dec
sbb
addb
jp
pop
push
ss
in
cmp
cmp
adc
shl
add
mov
inc
adc
sub
sbb
jne
loop
xchg
into
adc
add
repnz
pop
push
inc
xchg
ror
mov
cmpsb
rolb
sub
mov
dec
insb
in
lret
fcomps
dec
fwait
test
push
int
les
or
nop
jmp
cmpsl
adc
dec
adc
outsb
rclb
mov
sbb
es
push
test
lea
jnp
adc
in
sub
nop
inc
in
push
negl
out
push
dec
rcr
testl
adc
push
scas
jno
pop
xchg
or
inc
stos
jbe
insl
jne
mov
sub
les
fdivs
dec
jecxz
iret
shll
fsubs
xchg
inc
mov
jmp
dec
les
es
jle
push
adc
add
popf
sbb
mov
push
adc
mov
cld
or
pop
outsl
mov
add
cmp
andb
mov
xor
das
mov
cmp
or
lea
push
fwait
xchg
and
cmpb
test
call
daa
ret
mov
hlt
sub
mov
jno
iret
inc
cli
xor
push
and
push
xor
mov
insl
mov
mov
or
das
pushf
insb
push
scas
cmp
push
loope
cmp
arpl
lret
incb
dec
fdiv
into
sub
cwtl
inc
dec
xchg
add
and
cmpsb
xor
dec
aam
push
xor
gs
loop
test
pusha
shrl
push
mov
mov
incb
inc
sub
scas
pop
stos
pop
test
or
xlat
or
sub
in
push
fcompl
and
lret
rol
xor
cmp
cmpsl
mov
fcmovb
xchg
in
enter
stos
rorb
or
push
fucomp
push
lds
aad
sbb
cli
inc
dec
mov
add
fistl
cmp
jl
scas
addr16
jbe
adc
rol
shrb
jmp
fs
les
dec
flds
aaa
inc
out
testb
fstpl
addr16
xor
nop
push
mov
test
cmpsl
into
xchg
push
in
js
testb
or
in
push
and
fmulp
and
cli
pop
mov
ds
or
inc
dec
ret
push
cld
sub
xchg
dec
out
fnsave
push
dec
inc
pop
jb
inc
and
adc
dec
dec
xor
imul
int3
and
stc
xlat
in
pop
in
rolb
push
iret
sbb
daa
adc
ljmp
daa
mov
insb
sbb
cmpsl
mov
adc
pop
mov
mov
scas
daa
les
mov
fmull
jge
outsl
sub
dec
scas
lods
call
nop
sahf
adc
test
aam
adc
mov
xchg
dec
imul
and
sbb
rclb
loope
clc
adc
push
fs
xchg
xor
xchg
aad
dec
rcl
mov
cs
or
dec
inc
out
insl
scas
inc
test
aad
pop
cmpsl
sbb
cwtl
mov
lods
enter
xchg
cld
daa
pop
inc
inc
std
inc
nop
nop
mov
sub
fwait
pushf
sub
sbbl
fs
adc
jae
pop
sbb
ds
lods
xchg
sub
pop
pop
pop
cltd
loope
sub
test
outsl
adc
clc
jo
shl
scas
mov
mov
inc
xchg
pop
push
pushf
popf
movsl
rcll
and
jle
in
shlb
push
push
bound
addr16
push
adc
xlat
ljmp
popl
push
or
mov
mov
push
and
cwtl
add
outsb
iret
inc
mov
push
fst
inc
pop
leave
mov
and
cmovle
inc
inc
jmp
int3
xchg
cmpsb
ljmp
cmp
inc
test
sbb
movsb
dec
loop
sbb
arpl
movsb
inc
std
and
and
add
test
jns
jae
clc
lcall
push
mov
push
scas
out
cmp
sbb
jae
cmp
mov
sbb
sbbl
lock
and
cmp
adc
popa
add
flds
iret
pop
nop
adc
cmp
fistl
jge
movsl
stos
cmpl
mov
lods
pop
das
enter
rcrl
sahf
xor
push
insl
xor
divl
sub
out
movsl
cmp
pop
pop
xchg
mov
out
or
xorl
mov
mov
jno
pop
cmpsl
icebp
dec
xor
in
adc
pop
mov
cs
inc
cmp
pop
adc
adc
leave
sub
add
sbb
flds
enter
fldl
adc
cli
incl
test
pop
add
sub
int
rcr
jmp
mov
ljmp
sbb
addb
daa
icebp
and
push
cmpsb
insb
pop
mov
push
sub
sbb
jle
push
cltd
fsub
scas
adc
sub
andb
or
mov
aam
pushf
test
sar
cld
mov
std
dec
jae
push
jle
popf
fwait
add
xor
push
lcall
adc
out
rcrl
sbb
push
xlat
movsl
in
jb
push
mov
and
js
xor
aam
xor
hlt
push
sbb
push
out
dec
sub
aas
or
mov
cmp
cmc
leave
inc
cld
cmp
int
or
and
sub
xor
popa
mov
cmp
mov
pop
lock
pop
mov
outsl
mov
shll
movsl
frstor
les
shl
and
ljmp
out
cs
adc
xchg
sahf
jl
nop
sbb
mov
adc
mov
xchg
repz
fadds
xchg
cmp
sub
enter
out
inc
mov
fs
add
mov
lock
movsb
stos
je
out
adc
les
pushf
inc
std
add
mov
and
or
xor
inc
push
xorl
int3
cmpsl
xchg
inc
daa
xchg
test
xchg
aam
les
dec
in
or
pop
sub
cld
pop
mov
mov
inc
es
and
pushf
sbb
push
les
mov
sub
or
hlt
repnz
fdivp
xlat
adc
xchg
push
mov
lret
cmp
sub
lret
loope
jle
into
sbb
fisubrs
jns
loopne
lds
pop
cld
cmp
es
jmp
lcall
mov
test
mov
stos
mov
fldt
sbb
jecxz
sarb
out
mov
or
cmpsb
mov
xchg
sbb
cli
cmc
popa
mov
xchg
mov
push
inc
inc
ljmp
popa
adc
sub
out
aas
outsl
adc
loop
add
lcall
xor
outsb
int3
mov
into
icebp
sbb
ds
and
pushf
bound
test
mov
and
cmovge
repnz
inc
jg
mov
jnp
icebp
adc
push
or
dec
clc
push
and
dec
cmp
mov
sbb
dec
lcall
xor
stos
mov
jbe
mov
xchg
jne
jb
lret
pop
dec
mov
insl
adc
fnstsw
inc
or
inc
dec
push
rclb
rcrl
jnp
gs
rcrl
hlt
xchg
lret
push
insb
push
addb
lcall
enter
addl
push
mov
inc
jle
pop
ds
imul
cld
pop
dec
lock
subl
fs
movsl
addr16
mov
cli
mov
jne
clc
and
push
pop
jp
cmp
add
sub
aam
sbb
mov
xor
mov
push
mov
or
out
cli
dec
mov
out
sub
jmp
out
add
cltd
pop
jg
stos
pushf
adc
mov
cmp
adc
cmp
mov
mov
jno
jp
and
outsb
es
inc
lret
sbbl
pop
sub
loop
repz
inc
xchg
roll
aas
and
lret
dec
ja
mov
lcall
fcmovnu
cli
sbb
cmp
cmovge
pop
notb
aam
dec
pusha
int
pop
mov
inc
ja
xor
adc
adc
sbb
clc
insl
or
imul
add
jg
ret
cmpsb
cmp
mov
aad
std
dec
inc
fsubr
fisubrs
dec
lds
int3
das
ja
cmp
sub
rorb
inc
add
and
xchg
cmp
dec
inc
adc
inc
pop
call
xor
mov
iret
xor
lea
cmpsl
add
mov
shll
out
hlt
lea
sbb
pop
test
push
cmp
fsubrs
mov
fs
xchg
jb
fstpt
cmpsb
xchg
pusha
mov
cwtl
jl
sub
add
adc
sbb
movsl
mov
les
sbb
imul
iret
cmp
out
outsl
icebp
cs
cltd
shrb
inc
sub
outsb
fldl
shrl
push
imul
add
dec
pusha
dec
lret
add
repnz
mov
or
insb
addr16
mov
or
std
pop
lock
aas
daa
daa
adc
adc
sbb
or
mov
int
dec
jns
lcall
and
roll
pop
idivb
mov
dec
dec
mov
aaa
imul
out
lods
lods
and
mov
jecxz
cmp
pop
and
arpl
push
sbb
xchg
loop
pop
rclb
shr
cmp
inc
jnp
xchg
sub
xor
mov
rol
ds
call
mov
in
push
sub
std
pop
sub
mov
repz
lods
adc
loopne
out
std
repnz
and
and
ljmp
in
jl
ret
inc
ja
repz
cmp
aad
leave
jbe
adcl
mov
fsubrs
or
push
int
fstps
jae
aaa
mov
lret
push
and
jecxz
xchg
pop
mov
inc
gs
aaa
or
pop
imul
imul
inc
loop
std
nop
outsl
adc
jg
push
imul
int3
call
push
mov
dec
lea
jg
lea
sbb
in
xchg
mov
xchg
int
mov
lahf
or
xchg
mov
pop
bound
addr16
inc
aaa
dec
lcall
push
adc
jg
fistl
insl
lret
adc
inc
or
sub
int
ret
push
cmp
icebp
rolb
adc
dec
inc
dec
ja
jp
dec
mov
add
testl
cmp
mov
cmpsl
shrb
je
xchg
pusha
dec
cmp
pop
sti
movsl
in
jle
insb
adc
inc
cltd
addr16
jne
jbe
or
cmc
lds
ret
push
xchg
mov
mov
aas
push
xchg
in
aaa
fdivl
push
push
mov
sub
outsb
mov
mov
ret
in
jmp
sbb
rclb
pusha
push
jns
icebp
push
adc
mov
dec
das
sub
or
lret
es
inc
add
in
in
mov
mov
dec
ss
popf
repz
pop
push
add
sbb
testl
rorb
lahf
lret
test
adc
adc
jns
cmp
lods
and
inc
out
and
cmpsl
pop
ficoml
mov
cltd
shrl
sahf
or
imul
aam
aaa
out
pop
mov
mov
push
add
jge
adc
inc
jecxz
nop
mov
xchg
in
imul
mov
push
cmp
stos
ljmp
jns
mov
push
dec
std
mul
cmp
xchg
push
push
push
fcoml
les
mov
sub
pushf
in
mov
outsb
repnz
pop
shll
and
ss
sbbb
inc
lcall
call
pop
js
sar
and
and
mov
and
inc
fisubrs
test
ja
aad
or
sar
inc
cltd
xchg
pushf
mov
push
mov
sub
fs
push
mov
leave
jg
lds
cmp
adc
mov
ds
sbbl
lods
ja
xchg
stc
jo
lods
pop
int3
sbbb
push
jge
lcall
test
ja
xor
sbbl
mov
sub
ds
lahf
outsl
add
add
insb
or
mov
bound
fwait
inc
hlt
cwtl
cltd
sub
lcall
ljmp
loope
lcall
scas
and
mov
push
jge
loope
lea
ffree
pusha
jp
mov
inc
daa
cmp
movsb
bound
gs
das
sbb
popf
sub
and
fadd
mov
outsl
dec
inc
arpl
jno
dec
jl
cmp
repnz
loope
andb
enter
mov
sub
ss
fs
inc
in
adc
clc
sarl
ss
pusha
or
adc
imulb
cmp
inc
out
push
outsb
mov
je
cmp
and
xor
insb
sbb
arpl
rorl
mov
mov
push
add
push
push
stos
psubsb
xchg
sbb
mov
adc
movsb
or
orl
inc
add
in
fldl
test
and
push
mov
sti
clc
fs
dec
push
aam
sub
mov
pop
outsl
mov
rcll
iret
addl
jne
ss
sub
cmpsb
or
je
jmp
movsb
push
push
or
push
popf
js
enter
sub
icebp
js
dec
sbb
insl
dec
call
orl
xlat
scas
outsl
xor
imul
aas
fwait
xchg
popf
push
dec
cmp
rorb
and
push
mov
and
pop
dec
and
pop
test
test
cmp
sbb
call
repnz
push
xor
dec
adc
int3
dec
in
aaa
ljmp
insb
icebp
push
scas
imul
push
mov
cs
xchg
push
cmpsb
add
notb
cmp
push
mov
lea
sbb
sbbb
sbb
sbb
ja
xchg
aad
adc
nop
adc
dec
cs
sub
and
into
jnp
pop
or
jno
sar
pop
jae
stc
mov
jo
sti
std
repz
add
cld
insb
xlat
sbb
dec
sahf
dec
ffree
and
jo
xchg
outsb
sub
jb
aam
popf
dec
call
shr
stc
xor
cmp
paddusb
jnp
int
enter
movsl
pushw
lret
pop
xchg
push
cli
jbe
inc
lcall
mov
into
fisubs
mov
cmc
call
sub
mov
cmp
leave
aam
shrb
jno
lahf
xor
xchg
lret
je
adc
and
push
pop
xor
fsubrs
ss
adc
xchg
stc
pop
roll
aaa
sub
movsb
scas
inc
jbe
cmp
push
popa
leave
sub
xchg
push
scas
jp
fildl
aad
sar
jp
mov
fwait
and
loope
icebp
jl
lock
aad
insl
cwtl
cmp
jge
fistpl
lcall
mov
xchg
sahf
dec
ds
xchg
repnz
cmpb
les
xor
mov
lcall
aam
lea
xchg
mov
inc
jmp
scas
sub
lea
fildl
mov
pop
sub
repnz
cmp
dec
pop
popl
push
sbb
sarl
mov
pop
jnp
jo
lcall
or
dec
adc
inc
stos
cmp
lods
mov
hlt
mov
xchg
cmp
popa
mov
leave
push
mov
mov
pop
cmp
sti
aam
ljmp
enter
adc
lcall
cld
fldl
inc
mov
adc
push
dec
aad
xchg
es
push
and
pop
lea
in
and
xlat
shll
out
or
mov
sbb
jae
lea
cmc
sbb
in
jg
setno
out
fs
push
mov
shlb
xor
test
mov
bound
fnstenv
mov
fisubs
aam
add
loopne
shrb
push
test
add
fisttpl
outsb
xchg
or
dec
inc
popl
loopne
xor
sub
cld
sti
or
jbe
jp
fists
insl
fucom
lock
push
test
mov
cltd
xchg
aas
std
test
sbb
pop
hlt
rcll
in
shl
mov
inc
in
sahf
add
in
push
pusha
cmp
stos
mov
jns
pushf
stos
jbe
sbb
mov
fldcw
out
ret
mov
push
push
inc
dec
fs
dec
into
loope
xchg
or
adc
dec
cwtl
adc
bound
pop
inc
push
mov
lahf
pop
orb
sbb
jo
int3
add
icebp
std
mov
cmp
test
clc
scas
cwtl
jp
push
ss
call
or
sbb
cld
stc
add
int3
fisubs
lret
sub
test
xchg
test
mov
fsubrs
gs
test
dec
xchg
push
jp
pop
movsl
jo
imull
in
add
xor
sub
xchg
shlb
scas
push
inc
insb
add
xor
enter
lock
divb
jne
movsl
lahf
cli
pop
std
add
inc
addb
int
dec
push
mov
xor
mov
mov
inc
testb
cmp
insl
mov
arpl
mulb
idiv
adc
add
es
out
nop
add
or
insb
cld
or
xchg
sub
int3
into
pmulhw
mov
cmpsb
popa
mov
dec
add
es
ljmp
inc
pop
fisttpll
xchg
mov
jns
and
les
loop
imul
sti
push
jb
pop
push
mov
inc
dec
push
mov
outsb
jge
lahf
dec
add
mov
push
stc
mov
cs
cwtl
lret
jb
in
jle
xor
push
enter
fidivl
jne
sbb
insl
mov
clc
cltd
call
jle
arpl
sub
iret
add
repnz
pop
in
stos
xchg
in
jge
fidivrl
test
or
aaa
or
fisubs
cmc
adc
adc
pushf
out
mov
clc
mov
dec
pop
mov
push
dec
out
leave
xchg
sbb
mov
daa
xor
aaa
add
mull
sarl
push
hlt
dec
or
adc
lds
addr16
cltd
insl
shr
mov
daa
and
ficompl
dec
mov
add
ret
movsb
inc
repz
subb
mov
rol
and
aam
stos
sub
stos
inc
out
lock
lea
ds
outsb
popf
mov
pop
mov
mov
lret
mov
mov
pop
lds
in
test
push
shll
orl
push
mov
outsl
gs
sub
xchg
popf
push
lcall
enter
push
fcmove
iret
or
andl
rcll
xchg
add
push
idivl
std
fisubrl
jne
leave
push
xor
mov
movsl
push
xor
mov
lret
sub
xchg
jp
es
and
fsubrl
sbb
sbb
in
jb
sbb
mov
movsb
mov
mov
mov
int3
nop
cmp
leave
loopne
jne
or
sub
jg
mov
add
rcr
xchg
out
repz
fildl
popf
cmp
mov
inc
dec
push
repnz
xor
mov
movsl
jmp
nop
clc
dec
xchg
addr16
xchg
cmp
dec
push
xchg
mov
or
lcall
sbb
imul
cmp
or
xor
scas
int3
xor
xor
and
mov
fs
dec
arpl
xor
into
and
sbb
mov
push
data16
call
jbe
xchg
mov
pop
cmp
mov
cltd
inc
mov
sbb
push
push
pushf
sbb
scas
sub
sbb
or
or
or
notl
fs
lahf
xchg
sbb
mov
lahf
and
enter
loope
int3
sub
xor
popf
aaa
push
into
out
jne
lcall
movl
sbb
xchg
jbe
in
ds
mov
das
adc
pusha
sub
mov
jge
pop
mov
mov
mov
lods
or
inc
sbb
mov
int3
sub
mov
xchg
mov
js
push
out
aaa
clc
imul
cli
in
mov
std
orb
cmpsl
loop
mov
and
sbb
mov
inc
sahf
lcall
movnti
pop
and
lret
call
push
jbe
lods
or
gs
outsl
lcall
dec
jmp
js
cld
dec
or
xchg
xchg
mov
pop
loopne
ret
push
jle
or
sbb
lahf
out
sbb
das
pop
push
rclb
pop
inc
cmp
sbb
stos
ss
sbb
ja
test
call
rorb
jne
mov
ret
mov
mov
sub
or
es
inc
mov
push
mov
pusha
inc
pushf
dec
pop
mov
ret
stc
mov
roll
push
int
xor
push
dec
push
inc
jg
push
sub
stos
aaa
xorl
shl
cmp
mov
jnp
pop
pop
jbe
adc
mov
sub
pop
mov
pop
push
add
pop
stc
pushf
test
adc
fstl
leave
cmovo
jno
xor
dec
cmp
add
divl
push
add
cmp
push
sub
sbb
js
out
mov
movsl
or
int
cltd
inc
sahf
add
jecxz
mov
xchg
sbb
mov
cld
popf
cltd
xor
aas
push
mov
aad
subb
xlat
punpckhdq
loope
mov
rcrl
jle
or
scas
or
push
int
or
mov
dec
insb
gs
rcrl
dec
jecxz
ret
fld
cld
xchg
jns
or
sbb
mov
repz
adc
sub
fadds
bound
cld
in
mov
push
ret
jp
cmc
xchg
insl
pusha
clc
sahf
push
xor
push
imul
add
pop
iret
jp
mov
shrb
sbb
sbb
mov
cmp
mov
ja
ja
push
ss
test
push
and
sahf
popf
shlb
inc
push
lds
pop
cs
sub
cmp
xchg
ljmp
je
xchg
lea
ja
sub
dec
fwait
dec
adc
jo
cmp
rorl
or
popa
inc
pop
ljmp
sbb
fcompl
mov
call
loopne
arpl
test
or
push
cmpb
inc
decl
pop
cltd
push
sub
in
ljmp
ror
jno
cli
leave
jo
rcll
dec
dec
ss
adc
fcmovnu
jmp
imulb
or
enter
inc
aam
nop
sub
daa
mov
xchg
loopne
jnp
mov
mov
nop
loope
test
stc
outsb
adc
repnz
mov
icebp
icebp
inc
pop
pop
add
cmp
inc
loopne
mov
mov
or
and
fs
les
xchg
repnz
push
loop
mov
cmp
test
imul
addr16
gs
lods
shll
mov
imul
xchg
cmp
sub
sti
enter
arpl
popa
negb
pop
jae
into
in
push
js
js
insb
push
arpl
cmpsb
out
dec
jl
sub
fcoms
ljmp
test
xchg
push
ret
adc
mov
push
adc
sbb
push
es
adc
push
push
sub
push
inc
data16
mov
stc
sbb
aaa
sarb
ffreep
lret
xchg
and
gs
mov
lods
inc
mov
pop
iret
push
push
pusha
jp
pop
xor
mov
hlt
js
pop
les
add
mov
pop
adc
jnp
test
sub
hlt
les
daa
pop
je
and
ss
sub
pop
insb
out
mov
in
jl
daa
and
jl
mov
mov
daa
ret
cmp
add
jmp
sbb
inc
pop
nop
insl
sub
imul
pop
outsl
outsb
daa
dec
addr16
scas
add
and
aam
sbb
aaa
xor
xor
insb
shlb
pop
and
xchg
lahf
scas
shrb
pop
xchg
pop
sub
cmp
sbbl
fs
cs
cmp
sub
pushf
fists
pop
test
out
sub
adc
gs
lcall
pop
data16
push
icebp
jno
pop
inc
add
jl
rclb
sub
push
ret
xor
in
xchg
out
in
fldl
fs
sar
xchg
lret
ja
jecxz
test
mov
lcall
add
adc
add
stos
fnstsw
push
jle
movsl
dec
sub
fwait
aam
outsl
icebp
xor
push
mov
inc
jmp
repz
xchg
push
mov
mov
jne
shlb
dec
dec
rcr
push
rclb
and
sub
push
sbb
adc
mov
inc
push
popa
and
cmpb
fiaddl
add
roll
pop
xchg
test
into
xor
pusha
js
mov
mov
cltd
mov
shll
cmp
call
sbb
jbe
insb
les
push
test
idivl
sub
pop
fs
ror
xchg
rorl
test
arpl
jb
aas
mull
es
or
fs
scas
or
pop
hlt
xchg
enter
mov
in
xchg
pop
je
lret
mov
insb
jnp
mov
cli
or
mov
cmp
pop
jg
repz
adc
inc
push
fwait
orb
cld
sbb
xchg
fstpl
ret
icebp
shl
cmp
lahf
cmp
xchg
loopne
int
sub
es
pusha
pop
mov
inc
sub
xor
jb
pop
adc
dec
sub
ljmp
adc
pop
mov
sbb
push
or
scas
arpl
mov
mov
xchg
stos
in
ficoml
pop
cmpsb
pop
in
mov
cmp
loopne
cmp
in
mov
xor
and
mov
int3
lahf
jb
add
inc
jns
push
sbb
and
bound
adc
cmp
mov
adc
push
shlb
mov
and
std
cld
dec
adc
mov
nop
stos
out
movsb
popf
pop
inc
lret
ret
mov
pop
mov
ljmp
pusha
push
mov
fidivl
sub
mov
fsubrs
inc
pop
jb
js
mov
sti
jmp
or
sub
fcoml
add
sub
push
push
or
out
inc
mov
or
add
sahf
les
insb
rol
jp
xchg
iret
imul
xor
xor
xchg
mov
cmp
mov
cmp
xor
inc
cs
fucom
lea
xor
inc
dec
jle
das
mov
jno
icebp
adc
fst
xchg
push
imul
sbb
scas
xchg
fwait
sub
sahf
pop
or
out
in
jp
aam
out
sbb
std
pop
add
push
push
jge
fdivr
add
stos
sbbb
sub
decb
mov
pop
cld
iret
scas
divl
cmp
lahf
in
push
js
xchg
aam
pop
aaa
cmp
xor
mov
cmp
pop
pop
mov
inc
cmp
aas
dec
jne
mov
les
repz
push
jmp
outsl
inc
fcmove
stos
or
pop
push
jmp
fwait
add
icebp
nop
inc
jmp
mov
cmpsb
jp
mov
lods
adc
lret
lock
jl
popf
out
mov
sbb
jle
cmp
cmp
cmc
pop
ror
rcrl
pushf
jo
jo
sub
paddw
xor
mov
daa
hlt
push
push
out
jbe
dec
xlat
fisttps
jp
fisttps
enter
mov
and
jo
sbb
mov
dec
ret
stc
adc
mov
loop
ja
mov
rcrl
xor
imul
cltd
divb
adc
mov
pop
fldt
decl
mov
jecxz
add
add
jne
mov
cmp
xor
loop
lcall
fcmove
outsb
adc
pop
xlat
jmp
bnd
out
pop
pop
addr16
rclb
imull
out
lods
dec
push
cmp
out
jg
or
adc
sbb
ficoms
xlat
push
or
sub
shlb
cli
daa
les
cmp
push
xchg
dec
jnp
ffree
cmp
rorb
rorb
ret
cltd
fdivl
jge
dec
add
adc
push
xchg
aaa
mov
out
scas
cmp
mov
fisttps
in
lods
int
add
mov
js,pt
mov
rorl
sbb
rcl
faddl
ja
sahf
inc
loope
jno
ds
adc
lahf
rcrb
jecxz
outsl
mov
pop
fildll
test
test
loope
fidivs
pop
inc
iret
sti
mov
push
inc
pushf
adc
shrb
mov
jne
push
ret
loop
mov
push
insl
movsl
imul
aad
or
out
roll
add
mov
sub
push
pop
loopne
pop
cmp
insl
loop
adcl
mov
lret
negl
jecxz
or
mov
push
lods
and
cmpsb
jae
inc
xchg
or
xchg
jbe
stc
sub
sub
lea
in
mov
and
cmc
loope
xchg
sub
pop
cli
push
mov
aaa
pop
push
dec
jbe
lock
cmc
adc
enter
int
insb
arpl
shr
shll
rcrl
xchg
inc
movsl
adcl
sbbb
or
in
andb
out
mov
mov
mov
xchg
mov
pop
xchg
fs
fisubrs
ds
jge
push
outsb
dec
fistpll
xlat
cltd
cmp
mov
jae
bound
adc
ja
out
mov
sub
mov
inc
and
mov
ss
fs
push
fildl
iret
push
push
ja
push
fimuls
imul
shr
or
cmpsb
jp
cmp
sbb
xorb
sub
pushf
sbb
dec
push
push
sbb
je
mov
adc
jmp
aaa
in
push
dec
push
jb
ljmp
movsb
mov
sahf
xor
cs
push
cmp
outsl
inc
scas
mov
sub
fs
ret
ror
xchg
fdivl
mov
mov
mov
cmp
fldenv
out
adcl
sbbl
sbb
or
pop
scas
xchg
sub
insb
clc
out
sbb
scas
push
pop
mov
ret
mov
xor
sbb
in
out
pop
outsb
push
je
mov
filds
inc
sub
jb
push
clc
std
sbb
outsb
pop
fisubrs
das
data16
jb
mov
scas
add
test
pop
out
inc
mov
ffreep
fprem1
loopne
and
ss
adc
fstpl
mov
xor
jmp
pushf
sbb
pop
fisubrs
mov
dec
pusha
xor
ficompl
xchg
sbb
imul
aad
pop
push
xor
mov
cmp
cwtl
std
ljmp
pop
xor
rol
xchg
mov
outsl
or
push
pop
xchg
jecxz
mov
mov
hlt
jbe
jae
add
push
push
cli
inc
in
inc
mov
dec
mov
pushf
mov
adc
jge
pop
mov
cld
or
inc
das
sub
push
addr16
mov
nop
repnz
outsb
fsubrp
in
dec
pop
push
ret
sbb
push
test
xor
out
add
adc
hlt
rorl
lds
inc
mov
xchg
mov
aad
mov
enter
mov
cwtl
in
sbbb
push
outsl
or
sarb
je
out
pop
dec
sub
in
ss
jg
push
inc
xor
iret
xlat
inc
fxch
dec
mov
adcl
sub
inc
andl
mov
sbb
pop
jge
mov
or
push
in
cmp
imul
sub
prefetchwt1
or
xor
je
sub
loopne
loopne
dec
dec
movsb
popf
or
cld
lahf
inc
push
pushf
iret
mov
pop
sti
imul
jnp
outsb
cli
sbb
xor
fnstenv
jmp
test
cmp
ljmp
xchg
push
into
clc
mov
dec
add
lods
out
fs
int
adc
dec
jecxz
cmp
icebp
sbb
cmp
or
dec
leave
shrb
add
sub
outsl
mov
sub
ljmp
enter
push
call
cmpsb
mov
mov
scas
sbb
shrb
mov
xchg
cmp
mov
cmp
ljmp
repnz
inc
aam
cwtl
xlat
cmpsb
mov
or
divl
enter
jbe
add
loop
pop
mov
flds
rolb
and
cwtl
sarl
into
pop
push
xor
xor
push
push
jnp
leave
sub
mov
ror
jnp
sub
call
sbb
dec
cmp
cmp
xchg
fs
fstpl
and
fisttpl
mov
or
and
js
and
outsb
leave
addl
mov
push
arpl
jl
out
stc
cmp
add
cli
inc
push
push
insb
je
pop
mov
hlt
loope
add
aas
xor
arpl
xor
movsl
adc
and
pop
mov
aas
ljmp
rolb
jns
mov
cwtl
inc
adc
mov
xchg
lods
arpl
sub
mov
xchg
jne
xchg
sbb
scas
stos
in
scas
fadd
shll
add
xor
int
ss
jl
mov
sbb
ja
push
jbe
inc
mov
lds
ljmp
insl
sti
jl
or
xor
jbe
sub
or
xchg
pop
adc
mov
mov
mov
and
adc
push
inc
pop
les
in
cwtl
aas
mov
notl
adc
out
sub
push
sub
rorb
test
test
shll
inc
test
inc
jbe
mov
js
rcll
xor
adc
and
push
shl
fadd
mov
pop
lcall
jne
mov
cmp
sbb
cmpb
mov
mov
push
and
lahf
mov
subl
lock
shll
push
pop
inc
fdivr
xor
add
fistps
mov
fistpl
jb
cwtl
sub
test
dec
mov
pusha
mov
movsb
sub
dec
lea
jbe
add
cmp
inc
mov
les
fwait
mov
pop
repz
aad
and
jb
cmc
pop
cs
pop
cmpsl
push
jo
sub
repnz
insl
test
lods
adc
xchg
cmp
lods
scas
stos
mov
dec
xchg
scas
test
lahf
sub
scas
mov
cltd
loope
int
dec
mov
ds
and
mov
pop
or
mov
out
icebp
movsb
jns
fisttpl
outsb
aaa
dec
mov
xor
test
sub
mov
addl
enter
stos
and
sbb
in
int
sbb
sbb
lahf
jns
fldenv
mov
xchg
adc
cwtl
js
or
addr16
or
mov
jp
addr16
push
lret
mov
popf
adcl
in
lcall
std
aas
jmp
and
out
mov
sub
xchg
incb
fdivl
adc
jg
loope
popf
cmc
mov
mov
jmp
push
push
add
mov
mov
xor
push
xor
dec
inc
sub
push
pop
sahf
loopne
fdivrp
repnz
or
movl
in
jae
or
out
or
sbb
push
mov
lds
inc
cmp
sbb
bound
add
orl
ds
inc
test
push
loope
and
jge
dec
jl
mov
mov
cli
out
mov
test
and
iret
js
clc
mov
mov
filds
adc
inc
fs
or
dec
iret
nop
push
rcr
test
jo
dec
mov
call
adc
mov
pop
cs
mov
lcall
hlt
jno
pusha
movsb
sbb
sbb
imul
mov
add
xchg
stc
xchg
xchg
push
xor
and
push
and
dec
test
cmp
sub
call
iret
imul
rorl
scas
xchg
mov
into
cmp
cmp
test
out
push
xchg
sub
xchg
in
add
lods
into
fimuls
das
sbb
pop
pop
mov
jno
push
and
dec
cltd
movsb
inc
aas
pop
xchg
xchg
subb
push
jle
sub
pushf
mov
mov
mov
sub
stos
shll
pop
sub
insl
sub
push
test
jne
inc
add
icebp
lods
bsf
faddl
mov
popl
das
cmp
or
cmc
inc
cmpb
es
inc
test
mov
mov
pusha
adc
test
push
inc
insb
jmp
adc
shl
psllw
xor
ja
imul
pop
lods
pop
mov
dec
mov
filds
inc
sbb
pop
fdivr
xchg
mov
cld
lcall
dec
cmpsl
jno
inc
ret
xchg
lods
push
push
or
dec
arpl
ljmp
mov
ficomps
test
inc
push
dec
xlat
xor
jb
imul
ja
loop
rcrb
addr16
add
inc
inc
sbb
xor
xchg
popa
js
mov
cli
add
pop
xchg
mov
pop
cmp
adc
pop
shll
push
aad
dec
in
mov
jmp
cli
push
push
mov
loop
rcr
xchg
jmp
rcl
mov
inc
push
mov
add
lock
xor
pop
and
inc
xchg
adc
mov
adc
pop
pop
push
rorb
into
mov
xlat
divb
test
xor
imul
pop
mov
sbb
repz
lods
cmp
imul
int
shl
dec
xchg
incb
xchg
lock
mov
add
sub
pop
pushl
mov
sbb
jbe
das
sub
sbb
lock
pop
and
pop
adc
push
cmp
jle
or
jnp
or
aam
leave
mov
imul
mov
sub
cmpsb
enter
jecxz
xor
outsb
dec
inc
add
lods
jmp
pop
ljmp
leave
shlb
ja
ret
cmp
dec
push
mov
mov
out
jmp
adc
fildl
push
shlb
inc
push
lock
pop
or
inc
xor
repz
loop
popa
add
idiv
loope
lds
and
dec
mov
mov
inc
inc
push
push
icebp
cmp
add
inc
mov
in
pop
mov
sbb
mov
mov
ss
sub
fsts
inc
adc
adc
rcr
cmc
hlt
bound
push
push
sbb
xchg
pop
mov
xor
pop
outsb
inc
xorl
push
mov
xor
fucomip
fdivrl
dec
orl
fdivr
int
cmp
rorl
and
out
sahf
jno
mov
xchg
stos
cmp
or
cmp
repz
xlat
bound
out
aam
cmp
rcrb
xchg
pop
add
mov
pop
out
repz
outsl
sbb
xor
and
push
push
out
js
jle
jle
iret
xor
negb
mov
adc
shrb
mov
xchg
sbb
outsl
in
js
daa
mov
scas
sarl
mov
pop
dec
xchg
push
into
pop
adc
push
xchg
add
aam
cmp
jno
loope
or
mov
adc
adc
jg
cwtl
mov
mov
add
ss
idiv
dec
enter
xchg
popa
adc
ljmp
mov
int3
dec
aaa
icebp
enter
repz
sub
xchg
mov
mov
sbb
dec
rorl
mov
mov
mov
arpl
or
mov
in
jg
fwait
int3
popa
pop
popa
jg
and
cli
cmpsb
inc
in
out
test
das
dec
xchg
iret
sbb
pop
push
xlat
sub
lret
jo
hlt
pop
lock
cmp
xchg
pop
sbb
add
mov
adc
aad
aam
lods
addr16
lods
shlb
or
enter
mov
jno
aam
jbe
out
dec
jb
popa
cld
xor
add
movb
mov
test
ror
leave
aas
into
sub
rclb
adc
and
repz
rcrl
pop
je
movsb
out
or
push
xor
cld
cld
lods
int3
xchg
out
popf
popa
lds
das
ret
jmp
inc
and
cmp
scas
cmp
or
frstor
stos
mov
mov
xor
mov
add
push
test
xchg
cmpsb
cmp
push
and
add
pop
jge
sbb
mov
or
in
lea
rcll
dec
ja
rolb
inc
mov
mov
pop
sbb
sub
std
sbb
shl
in
inc
rol
ljmp
jne
addr16
pop
and
push
and
sub
aam
or
push
mov
arpl
mov
sbb
and
fchs
je
or
xor
push
pop
mov
cmp
push
fidivrs
nop
gs
sbb
cwtl
adc
jb
fwait
lds
in
xchg
xchg
pop
ret
idiv
sub
adc
xor
fs
and
or
and
cmp
ss
imul
ror
cmp
call
mov
ljmp
jge
cmp
mov
sub
push
leave
add
cltd
js
sub
outsl
out
mov
test
mov
push
cmp
jb
add
loope
pushf
xchg
aam
imul
js
mov
fidivrs
ficoml
loop
outsl
mov
out
sahf
xor
mov
xor
fnstenv
add
or
lods
jecxz
loopne
jb
hlt
es
lods
outsb
dec
sarl
popf
repz
test
hlt
fimull
and
imul
dec
inc
pop
cs
push
data16
rcrb
add
push
push
pop
out
pop
jl
or
scas
shrb
out
sub
or
sbb
dec
push
jmp
lock
or
pop
pop
ficompl
fwait
sahf
dec
fcoms
cmp
xor
in
ljmp
mov
pop
loopne
pop
fists
pop
in
stos
ror
jl
cwtl
shlb
xchg
fdivl
idivb
mov
inc
in
popl
cwtl
sbb
dec
mov
inc
inc
fstpt
adc
fidivrs
dec
into
dec
scas
in
jae
push
sub
dec
in
sbb
fwait
jne
loopne
loop
sub
scas
xchg
fstl
lods
fnstsw
and
ficoml
jp
mov
mov
lea
arpl
aas
lahf
lret
push
test
xchg
or
cmp
jns
inc
repnz
cltd
je
cmp
sub
daa
xchg
imul
stos
or
dec
mov
cmc
mov
popa
stos
xor
incb
lcall
mov
push
mov
mov
cmp
popl
outsl
fucom
add
add
push
mov
cmpsb
aam
push
jp
or
xor
dec
repz
pop
sub
cmpsl
xchg
xchg
call
cmp
jne
ja
fnstsw
out
iret
cmp
outsl
inc
pop
mov
jg
movsl
jbe
xor
cwtl
mov
lods
inc
scas
lods
jge
std
test
pop
add
jno
pop
add
popf
jne
adc
addb
cmpsb
fistpll
jne
cltd
rcrb
xchg
xchg
ret
xor
mov
xor
dec
pop
das
mov
rcr
test
imul
scas
sub
aas
data16
les
sahf
sub
out
push
arpl
stos
push
sub
int3
rclb
cltd
xor
inc
jle
push
lret
popl
aam
ljmp
xor
test
mov
or
adc
dec
lock
std
push
xchg
cmp
test
aas
mov
fwait
cmpsb
jecxz
outsb
pop
daa
stos
mov
mov
mov
xchg
idiv
daa
call
stc
out
scas
mov
mov
ja
imul
ret
jns
add
lret
dec
or
stc
test
dec
and
and
jno
mov
jmp
enter
pop
inc
pushf
xor
and
xchg
cmp
aaa
xchg
outsl
pop
pusha
mov
gs
out
jbe
push
xchg
cmp
mov
mov
scas
sub
sub
je
jns
fucomp
jns
incb
xor
fwait
movsl
lods
popf
add
jae
xor
cmp
cmpb
mov
mov
stc
lcall
mov
shlb
fdivrl
jno
ret
jbe
popf
dec
out
sbb
bnd
out
add
adc
xchg
les
outsl
cmp
xchg
sub
cmpsl
xor
sbb
repz
aam
notl
fwait
sti
pop
push
sub
jno
add
push
scas
stos
rolb
add
subl
dec
pop
loop
lea
jp
pop
adc
shlb
pusha
loopne
pop
xor
mov
or
aam
pop
or
outsl
int
jnp
mov
dec
ja
ja
push
push
and
jge
test
das
pop
push
aas
popf
test
mov
pop
sbb
test
add
lock
jecxz
es
sub
cmp
js
sbb
scas
push
punpckhbw
fucomi
or
data16
dec
push
xor
pop
or
call
arpl
jbe
xchg
push
fbstp
mov
andb
icebp
lahf
lret
mov
cmp
mov
movsl
cli
or
jno
inc
lcall
lock
mov
lods
gs
andb
add
xchg
nop
fdiv
nop
sub
ja
pop
call
data16
or
mov
xor
loopne
loopne
mov
ds
ss
dec
ljmp
adc
fisttps
inc
lock
pop
sbb
mov
daa
inc
mov
andl
mov
pop
jo
popf
popf
pop
sub
cmp
stc
and
cmp
and
out
pop
sbb
and
sub
xchg
push
stos
hlt
into
push
or
mov
jne
cmp
lret
mov
push
lret
sbb
inc
pop
mov
inc
dec
adc
pop
xchg
out
jae
jl
addr16
xchg
inc
xchg
inc
call
stos
rclb
imul
mov
jno
std
pop
icebp
xchg
dec
inc
dec
push
fistl
xchg
ss
scas
clc
popf
enter
test
cmp
popa
xor
sbb
mov
fiadds
mov
mov
addl
inc
or
outsl
decl
stc
dec
bound
out
cmp
ljmp
pop
xor
ss
adc
pop
cmpsb
lock
jno
in
lds
test
arpl
lock
mov
sub
ficompl
mov
into
mov
push
xor
in
dec
mov
xor
or
dec
push
scas
push
mov
push
jbe
sub
daa
aaa
daa
and
jmp
ret
lods
imul
or
packssdw
sub
hlt
lods
fldl
int3
mov
call
mov
aad
inc
or
xchg
sbb
lcall
inc
in
jno
mov
jmp
jo
cmp
fnsetpm(287
fists
fidivl
push
xlat
or
and
add
xchg
adc
sub
scas
pop
iret
ret
jge
xchg
and
leave
idivl
dec
xor
push
dec
add
repnz
out
es
cmpsb
rolb
into
insl
into
pop
and
jg
imul
stos
cmp
cmp
jg
inc
xchg
jae
jb
sbb
out
ja
sub
mov
mov
or
icebp
cli
out
sub
sbb
xchg
push
push
repz
adc
and
test
mov
arpl
dec
mov
cmp
in
add
and
sbb
mov
push
inc
lea
popf
lret
xchg
ds
lock
fidivl
ljmp
push
mov
shrb
test
mov
mov
pop
enter
xchg
mov
push
jmp
or
xor
mov
mov
pop
stc
rcrb
outsl
inc
lock
subb
adc
or
pop
addr16
cmpsl
and
aam
pmulhuw
outsl
sahf
movsb
mov
push
add
and
pushf
ja
jae
loopne
cmp
pushf
enter
inc
mov
clc
cmp
jl
mov
test
fwait
ljmp
scas
dec
mov
sub
xchg
add
xorb
xor
inc
std
filds
or
and
or
into
xor
jge
xchg
pop
inc
cli
mov
lahf
hlt
xor
outsb
mov
pop
sub
and
ljmp
popf
int
push
cld
daa
data16
outsl
sub
mov
add
cmp
gs
mov
dec
mov
pop
mov
shll
xchg
dec
pop
ret
mov
test
jle
sub
in
out
sub
mov
mov
in
jbe
cmp
cmpsb
jb
arpl
fs
mov
xchg
in
in
rorb
pop
in
mov
dec
jmp
dec
lods
xor
adc
je
push
jecxz
aad
xlat
rolb
sbbl
push
cmp
inc
inc
dec
jb
mov
inc
jo
or
mov
mov
jmp
mov
pop
mov
xor
call
inc
hlt
int3
dec
pop
mov
daa
hlt
sbb
insb
into
or
xchg
jle
sbb
cmp
lahf
push
jo
jbe
mov
stos
fldcw
mov
inc
lahf
std
xor
lret
insb
out
jp
mov
cli
xchg
xchg
cmpsl
test
fcomps
movsl
fldenv
sbbb
mull
pop
cmp
andb
loop
cmc
mov
iret
push
add
mov
adc
sbb
pop
xchg
and
movsl
xor
in
popf
lcall
fsubs
mov
inc
xor
mov
lods
out
cmpsl
fs
xchg
iret
ret
xchg
fdivl
mov
fcmovbe
les
loopne
iret
pop
cmp
mov
shrl
lret
dec
mov
push
sub
pop
mov
je
imul
leave
mov
mov
mov
xor
add
lret
aaa
out
pop
xchg
mov
fstps
fwait
jne
and
mov
cli
mov
test
test
mov
sbb
insl
les
andb
mov
or
ret
js
xor
out
xor
cmp
xchg
jae
mov
and
outsb
push
rcrl
addr16
push
cmp
mov
call
pop
sbb
mov
mov
scas
cmpsb
pusha
pop
push
mov
mov
ret
lods
push
xor
in
inc
and
je
xor
pop
mov
addb
jle
push
enter
fdiv
pop
mov
cmp
jb
nopl
popf
and
push
pop
inc
xchg
jno
pop
add
fnsave
out
jge
xor
jl
xchg
sbb
mov
rcrl
ficomps
sbb
ret
pop
push
xor
push
mov
out
adc
add
insl
push
mov
adc
adc
repnz
dec
xchg
outsb
mov
push
and
mov
and
adc
call
scas
addr16
repnz
shrl
add
sarb
mov
cmp
or
jmp
add
ret
and
and
push
xor
inc
dec
mov
mov
aas
sbb
ss
adc
ret
dec
int
jl
xchg
addl
add
dec
adc
xlat
and
lods
and
mov
stos
popa
ret
xorb
pop
and
jae
fdivl
cmp
fcmovnu
pop
fdivr
sub
test
mov
xor
mov
outsl
mov
mov
test
mov
imul
push
jbe
cwtl
insl
lcall
push
mov
ror
push
push
push
sub
fisttps
call
push
mov
aad
scas
xchg
pushf
jg
inc
mov
test
inc
pop
das
push
ror
cmp
push
mov
cmp
into
loopne
negl
icebp
xchg
or
cmp
xchg
vmovhps
fldl
xor
aam
fchs
and
mov
add
sbb
jp
jbe
fld
push
mov
mov
rcrl
lret
or
pop
xchg
push
xor
lock
mov
adc
inc
test
cmp
adc
data16
and
flds
jle
push
jmp
mov
lret
add
int
pop
lods
push
dec
ds
inc
cli
std
je
rep
loope
je
mull
add
icebp
pushf
xchg
ret
cld
movsb
les
int3
sbb
mov
xor
cmp
and
pop
push
les
testb
int
fwait
xor
pusha
fistpl
cltd
scas
roll
shlb
pop
inc
test
mov
xchg
out
pushf
nop
pop
jbe
rolb
mov
aaa
std
imull
lds
inc
jb
xor
mov
popf
pushf
packuswb
loopne
xchg
lock
pop
outsb
push
dec
out
test
xor
cmc
decb
and
data16
inc
dec
mov
sahf
jae
add
dec
jle
mov
ss
outsl
sub
outsb
pushf
sub
lods
loop
cmp
out
ljmp
jge
je
push
add
minps
scas
jb
hlt
inc
mov
dec
adcl
xchg
mov
pop
mov
dec
sbb
cmc
mov
inc
jb
jns
gs
jmp
mov
mov
outsb
repnz
xchg
std
inc
add
ja
mov
xchg
mov
xchg
push
int3
xor
in
xchg
jle
sbb
xchg
sbb
test
cmpsl
mov
iret
inc
jae
inc
jg
loopne
out
mov
inc
push
fistps
mov
cltd
adc
jecxz
lock
push
shll
or
lock
fldt
xor
clc
pop
push
popa
jge
mov
nop
sti
jecxz
ret
rcll
and
xchg
in
imul
mov
mov
popf
jge
adc
add
adc
fmuls
imul
pushw
int
pushf
cmp
push
mov
in
inc
mov
mov
mov
adc
ficoml
sub
outsl
das
movsb
sub
pop
mov
jae
cs
push
ds
jg
pop
gs
outsb
shrb
sti
lahf
js
lods
insl
sarl
mov
sbb
ret
push
xchg
movsl
rclb
jge
outsl
fcoms
arpl
mov
lret
je
push
xchg
mov
push
jae
mov
arpl
mov
stos
mul
sbb
inc
pop
push
mov
sub
rcl
mov
ss
cmpsl
and
lcall
adc
xchg
add
or
in
andl
insb
lahf
push
stos
pop
divb
add
ja
dec
shrl
movsb
sub
popa
sbbb
outsl
mov
push
lods
scas
mov
sbb
push
pop
rolb
or
pusha
mov
or
mov
cmp
fdivs
mov
daa
push
adc
push
sbb
mov
jbe
cli
lret
vhsubps
lea
test
fisttpll
and
jne
fld
dec
sbb
dec
rorb
int3
pop
adc
and
sub
xor
pop
out
push
lds
inc
and
jnp
popa
popf
adc
jp
loop
mov
pop
mov
mov
xlat
xchg
cmpsb
cmp
mov
pop
cmc
cli
lret
adc
addr16
popf
jne
in
dec
lcall
repz
mov
loopne
cmp
imul
das
dec
jbe
popa
dec
push
inc
add
insl
fwait
pusha
jbe
fdivl
mov
fcmovnbe
push
and
xor
mov
lea
fs
pop
mov
call
daa
or
fucom
pop
inc
xor
repz
ss
ss
xor
mov
cwtl
movsb
or
mov
xchg
lcall
add
push
popf
sub
mov
push
push
push
mov
mov
sub
push
sub
jle
fld
xchg
movsb
popa
xchg
jb
jl
mov
push
adc
repnz
cld
mov
lcall
hlt
fbstp
and
call
ljmp
dec
xchg
inc
es
and
cmp
jbe
xchg
sub
nop
das
adc
movsb
dec
and
lds
aam
lods
cmp
xor
and
push
and
cmp
xchg
adc
fnstcw
lods
xchg
dec
je
and
sbb
test
in
inc
inc
xchg
sbb
mov
ret
and
sub
stos
xchg
and
adc
sub
sub
sti
shll
andl
add
test
push
jp
lret
stc
lds
out
push
pushf
adc
xchg
lods
push
fsubs
cwtl
gs
jns
outsl
fwait
cwtl
aam
in
test
mov
add
push
or
cmp
leave
into
adc
add
pop
jmp
dec
rorb
dec
jb
into
mov
xchg
jnp
aas
xor
push
sub
lcall
xor
rclb
and
ss
test
movsb
jecxz
dec
shl
cld
inc
roll
test
subb
mov
xor
mov
cmp
lret
mov
outsb
push
sub
lods
xor
lahf
push
cli
mov
and
scas
xor
xchg
pop
cmp
in
pop
lret
cs
pop
cli
sub
xchg
fucomi
sub
pop
rcr
nop
push
bound
icebp
outsb
lods
push
pop
js
mov
dec
stos
mov
stos
arpl
jmp
divb
popf
subb
jp
iret
pop
fisubrs
cmp
mov
call
not
xlat
aas
mov
ljmp
cld
icebp
inc
lcall
sti
shl
jge
xor
lods
call
repz
and
rcrb
inc
out
enter
jne
xlat
insl
out
imul
notb
pop
cmp
and
add
and
xchg
scas
mov
in
mov
jge
inc
jb
xchg
int3
jae
sbb
imul
jle
ljmp
ljmp
inc
jmp
movsb
push
lods
cmpsl
and
mov
or
add
xor
insb
lret
cmp
daa
sbb
pop
push
sbb
ret
out
xor
xor
mov
jmp
mov
stc
imul
cmp
out
mov
sub
push
cmpsb
push
sub
hlt
jne
mov
jmp
repz
out
cmp
mov
lret
jb
imul
dec
arpl
cmp
mov
mov
lret
addr16
rcr
test
xchg
dec
push
adc
mov
cltd
jns
fnstsw
lahf
test
int
pushf
pop
cli
adc
das
or
lds
dec
xchg
dec
cwtl
ljmp
divl
xchg
xchg
mov
sbb
sti
cmp
cmpsb
das
addr16
ljmp
cwtl
add
and
inc
sbb
jnp
jo
inc
mov
and
loope
in
out
insl
or
fiaddl
das
js
popa
cmpsl
adc
sbb
test
rcrl
mov
push
pop
scas
fildll
pop
bound
pop
lods
jb
push
repz
jno
test
lods
out
sbb
movl
repz
sarl
rcr
icebp
pop
mov
inc
and
jp
cmp
mov
mov
xchg
stc
pop
stos
daa
insb
xor
push
mov
mov
loop
outsb
imul
jo
or
dec
inc
sbb
lahf
rcrb
dec
dec
jae
adc
cmc
cwtl
call
jl
into
lcall
ss
adc
lahf
hlt
jae
add
sbb
pop
pop
jge
decl
test
les
lcall
hlt
je
imul
cmp
enter
push
sub
dec
sub
or
sbb
pop
jns
fstpt
sub
mov
sti
imul
mov
rcrl
or
mov
mov
dec
sahf
xor
and
inc
cmpsl
mov
and
inc
jg
jns
pop
arpl
jl
fcomps
and
cltd
mov
pop
mov
ljmp
insw
cmp
dec
jp
inc
jmp
mov
repz
lret
push
leave
ds
mov
outsl
push
pushf
mov
and
dec
dec
fidivrs
push
mov
mov
mov
lea
fcmovne
jle
dec
roll
jle
call
enter
dec
jbe
add
push
lods
xor
lods
sti
sub
mov
xchg
test
insb
inc
flds
clc
add
inc
into
push
dec
jp
pslld
sbb
mov
and
mov
mov
or
push
add
lret
lock
mov
inc
or
mov
int
lods
xchg
cmc
shll
sub
loop
in
adc
and
cwtl
or
mov
lock
jne
sbb
jle
loop
fcomps
mov
fistpl
jne
leave
cmp
jo,pt
xchg
cli
notb
mov
jl
xchg
adc
and
mov
mov
test
in
xor
gs
fisttpl
xor
pusha
jge,pt
je
cmp
mov
adc
dec
pop
and
bound
gs
and
je
jmp
push
xlat
jle
or
pop
bound
icebp
in
aam
faddl
cmc
sbbb
mov
loope
and
out
sarl
rep
mov
jecxz
aam
js
cmp
movsl
mov
flds
push
out
das
jae
cmc
punpckhdq
cmp
clc
dec
repz
loopne
cli
pusha
mov
xchg
stos
aad
add
and
out
xor
movsb
jo
dec
in
mov
push
cmp
movsl
testl
popa
push
jg
loope
rcrl
push
add
out
fsubrs
nop
mov
inc
dec
lods
les
mov
imul
aam
outsl
std
inc
shl
mov
adc
xor
mov
bound
popa
jbe
xchg
mov
push
dec
mov
ja
inc
push
or
inc
scas
sarb
aaa
xchg
daa
shll
scas
je
shll
add
sub
sub
sub
dec
lret
cwtl
push
js
fisttpll
mov
and
shll
mov
dec
xchg
out
sub
scas
mov
mov
insb
addr16
insl
or
adc
repz
inc
inc
test
rcrl
add
pop
cmpsl
aaa
orb
lret
adc
push
mov
push
rorl
test
popa
jne
mov
xor
mulb
lods
or
stos
call
bound
xchg
jle
or
mov
fs
dec
movsl
inc
inc
cmpsl
scas
test
das
mov
lock
jl
test
pop
fisttpl
jmp
sub
int
stc
jp
push
xchg
cmp
pop
xchg
xchg
sbb
fiadds
jle
or
ret
and
adc
bound
rolb
sub
je
mov
push
pop
mov
cwtl
jbe
out
in
imulb
leave
sbb
xor
loop
add
icebp
mov
fcomp
lret
ret
dec
ficoms
mov
pop
stc
xchg
ss
cmc
pop
sarl
out
and
dec
pop
fidivrl
mull
push
je
or
stos
cmp
out
sub
mov
aam
pop
push
cltd
lock
cmp
nop
imul
test
mov
sub
insl
es
pop
push
mov
test
mov
jo
pop
sbb
add
lcall
sbb
daa
hlt
gs
mulb
ret
and
push
out
adc
xchg
mov
jae
icebp
adc
xchg
loop
xor
sbb
out
mov
inc
fcomp
xor
int
sar
dec
sbb
pop
das
sub
pusha
xor
dec
xor
out
pop
insl
repz
xor
ucomiss
sbb
aaa
xchg
imul
add
andb
fcoml
mov
das
xchg
clc
