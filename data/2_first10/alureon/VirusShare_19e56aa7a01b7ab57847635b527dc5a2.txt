neg
mov
or
je
ror
xchg
lea
mov
rol
lea
jmp
je
not
lea
xor
xchg
lea
add
lea
rol
rcr
xor
adc
rol
add
shr
jmp
push
mov
sub
push
push
push
rol
neg
mov
neg
neg
push
jmp
mov
mov
rcl
neg
xor
neg
adc
not
xor
call
ror
mov
mov
xor
jmp
shrl
mov
lea
mov
mov
rol
mov
and
jmp
neg
rcr
shl
shl
xchg
neg
xor
lea
neg
mov
xor
mov
not
neg
xchg
jmp
mov
lea
lea
mov
rcl
mov
xor
xor
neg
lea
push
xchg
shr
mov
mov
mov
jmp
add
ror
not
and
rcr
lea
lea
push
xchg
and
mov
and
and
neg
neg
mov
xchg
push
adc
jmp
xor
xor
mov
xor
lea
not
xor
lea
lea
rol
and
push
lea
jmp
neg
neg
mov
lea
shl
decl
jne
jmp
and
lea
add
call
shl
mov
mov
xor
rcr
rol
ror
mov
mov
mov
jmp
neg
mov
lea
mov
lea
movl
xor
rol
not
neg
movl
lea
rol
jmp
xor
mov
neg
lea
xor
rcl
neg
adc
xor
mov
mov
not
shr
not
lea
jmp
mov
rcl
not
mov
adc
rcr
mov
neg
shl
cmp
je
mov
xchg
neg
jmp
xor
xor
lea
xor
lea
adc
mov
xor
add
call
add
xor
xor
lea
jmp
mov
xchg
xchg
xor
not
xor
and
mov
lea
rcr
not
jmp
not
rol
mov
push
shr
mov
xor
mov
jmp
neg
neg
rcr
lea
xchg
xor
shl
xor
lea
jmp
rol
xor
lea
push
call
lea
mov
jmp
mov
ror
call
push
neg
neg
xor
pop
xor
mov
rcr
jmp
xchg
shl
xor
lea
xor
xor
rcl
lea
mov
not
jmp
shl
and
mov
mov
lea
adc
lea
mov
not
xchg
jmp
mov
shr
xchg
shr
lea
mov
mov
xor
ror
mov
jmp
lea
jmp
not
mov
xor
mov
popl
rol
neg
add
rol
lea
xor
mov
mov
jmp
mov
neg
lea
xchg
xor
mov
shl
lea
ret
xor
adc
lea
mov
not
xchg
jmp
mov
lea
neg
mov
ror
lea
mov
xor
mov
cmp
jmp
pushl
mov
xor
mov
lea
lea
pushl
jmp
mov
and
add
shr
not
xor
jmp
neg
not
rol
rcl
xor
jmp
jge
mov
lret
into
out
sti
and
int
and
out
sti
and
mov
and
daa
shll
jg
adc
cmp
push
and
icebp
add
fdivrl
test
out
outsb
ret
push
les
mov
les
aam
popa
jge
sub
mov
push
push
fldl
sbb
stos
mov
out
pop
sub
pop
mov
inc
cli
lret
and
out
jo
ret
das
inc
std
jbe
sub
ja
sti
and
mov
test
cmp
or
sti
and
sbb
mov
push
pop
popf
std
pop
xchg
cwtl
stc
daa
out
inc
sbb
dec
xchg
sbb
stos
popf
xchg
push
or
enter
adc
rcrl
mov
sti
push
popa
fs
arpl
fs
push
shlb
xlat
ja
sti
and
inc
clc
loopne
or
inc
fdivl
adc
arpl
cmp
mov
add
mov
mov
pop
or
dec
and
psubw
mov
jo
int
jb
ljmp
jbe
add
movb
fdivl
adc
movsb
lret
addr16
out
jo
lret
xor
popf
mov
int
adc
inc
stos
repz
into
out
sti
and
fistpll
insb
fwait
cmp
out
clc
mov
inc
stos
add
xchg
adc
out
add
ss
dec
test
xor
fdivl
mov
xchg
pop
scas
jge
fisubl
fs
shrl
scas
sub
test
stos
sub
insb
xchg
cmp
out
jo
cmp
jo
inc
pop
xchg
cmp
out
stos
lcall
mov
push
shrl
and
int
fwait
cmp
out
jo
stos
lock
mov
inc
xchg
pop
test
pop
cmp
int3
fdivrp
mov
jo
xor
js
shrl
lcall
jp
stos
int3
int
lock
dec
dec
mov
push
pop
xorb
icebp
outsb
fs
push
popa
mov
icebp
ret
and
arpl
scas
aad
ss
movsb
or
in
dec
sti
mov
xchg
test
imul
aaa
es
or
adc
jb
leave
cmp
fistpl
and
pop
cmp
sub
movsb
mov
mov
jp
adc
icebp
add
jbe
jp
test
or
and
icebp
arpl
dec
repz
cmp
and
jl
ret
mov
loop
add
stos
jb
cmp
jo
ret
push
xchg
ja
dec
test
xchg
imul
inc
push
sub
popf
jo
mov
pop
mov
jp
daa
jns
mov
test
int
push
and
icebp
test
cli
pop
out
mov
std
sahf
push
cli
fstpt
push
out
icebp
push
int3
pop
push
cli
fildl
mov
push
and
daa
insb
or
in
cmp
lods
jge
sbb
xor
and
jp
fisttpl
sbb
push
cli
in
mov
aad
out
jp
inc
mov
or
mov
repz
dec
cmp
add
int3
pop
icebp
add
in
stos
add
xchg
cmp
add
push
into
test
mov
and
add
int3
jnp
add
cmc
roll
sbb
xchg
sbb
and
icebp
cmp
icebp
add
and
xchg
inc
xchg
gs
mov
mov
push
scas
into
xlat
popf
scas
out
stos
cmp
jo
mov
inc
ss
ss
js
jmp
push
push
in
rcll
cli
fcmovnb
xor
adc
and
pop
cmp
sub
movsb
mov
mov
mov
add
add
fistpl
cmp
insb
rolb
mov
sbb
or
stos
mov
daa
mov
sbb
cmp
fcoml
insl
and
icebp
add
outsb
xor
or
int
cli
mov
js
mov
std
daa
out
fcmovnbe
popf
jl
mov
fnstcw
daa
mov
fisttpl
cmpsl
in
test
sahf
sbb
cmp
subb
fisttpl
fwait
inc
dec
or
sti
fcmovnb
js
shlb
xor
mov
mov
push
jae
push
sti
fcmovnb
lret
and
pop
and
mov
cli
fildl
jb
cmp
cmp
add
scas
idivb
add
mov
inc
mov
sub
insl
add
xchg
mov
jp
sarb
mov
outsl
movb
or
adc
js
mov
icebp
scas
div
dec
sbb
jp
sub
stos
cmp
mov
adc
push
stc
mov
mov
es
clc
sbb
pop
stc
add
pop
xor
test
daa
inc
stc
testb
adc
fisttpl
mov
in
or
icebp
out
mov
test
icebp
push
jns
jp
sub
pop
jno
cmp
mov
push
push
in
cli
push
dec
mov
les
shrl
fcmovnb
jp
scas
inc
loope
pop
xor
jo
mov
push
push
xor
js
xchg
cli
lds
mov
daa
jl
inc
imul
in
rcrl
scas
iret
out
xor
push
mov
jp
sub
stos
cmp
push
jno
pop
mov
insb
mov
icebp
add
sub
inc
movsl
and
icebp
mov
cmp
int
and
push
pop
test
xchg
xchg
lods
and
test
and
in
xlat
jp
sub
jb
and
icebp
push
cmpsl
popf
icebp
add
out
mov
shll
out
mov
lds
icebp
push
push
xor
and
incl
fs
shlb
sbb
fadd
push
mov
fimull
scas
rcrl
pop
push
sub
icebp
mov
ss
and
icebp
add
in
icebp
add
push
xor
pop
push
in
loope
popa
xor
cli
push
xor
aad
rcrb
popa
test
icebp
add
scas
jns
mov
push
sub
mov
add
shlb
stc
mov
pop
and
ss
cmc
add
mov
aam
inc
lds
cli
imul
xchg
pop
and
cmp
xorl
adc
icebp
clc
sbb
es
std
and
clc
enter
dec
in
movsl
insl
dec
dec
rorl
push
dec
sahf
bound
pushf
addb
sbb
push
addr16
xchg
jo,pt
mov
push
daa
push
sahf
popa
inc
pop
cld
mov
sbb
cmp
pop
icebp
pop
pop
or
cmp
or
das
lcall
pop
dec
mov
add
pop
cltd
lea
repz
mov
or
fbld
sub
jne
and
xor
test
sub
or
orl
insl
adc
jno
fcompl
testb
sbbb
imul
shll
xchg
push
xchg
xor
addr16
nop
jno
cmp
js
sti
iret
sub
lods
imulb
add
ror
pcmpgtb
or
xor
pop
lock
xchg
xor
and
in
repnz
jo
loope
pop
cmp
ja
cli
movsb
mov
mov
outsl
sub
xor
cmp
xor
dec
call
outsb
dec
pop
sbb
cmp
inc
movsl
shlb
inc
sub
sub
test
mov
or
xchg
stc
ret
fistpl
adc
mov
sbb
inc
dec
mov
add
push
jae
pusha
push
in
mov
push
stc
ret
and
jbe
add
mov
mov
fisubl
sub
add
lret
sbb
push
pop
call
xlat
fstpt
mov
xchg
jns
jp
stos
scas
fiaddl
cmp
int
iret
movsb
dec
cmp
arpl
mov
jns
ds
mov
push
fmull
push
jb
shlb
push
cltd
ficoml
pop
mulb
insb
jns
ret
scas
and
leave
xor
cs
xor
mov
xchg
rolb
arpl
aaa
or
dec
sbb
sbb
in
xchg
movl
movsl
pop
mov
xchg
cmp
sub
or
and
push
scas
mull
adc
outsb
cmp
mov
int
push
pop
cli
sub
cmp
fnstsw
incb
movsl
ds
jecxz
add
lods
mov
std
jnp
push
lea
fidivl
ja
jl
fsubrl
outsl
and
sbb
jno
decl
test
pop
or
aam
into
jne,pn
repz
icebp
xor
repz
ret
mov
jne
std
out
test
insl
add
ror
push
pop
cmp
scas
std
dec
cmpsl
or
xor
movb
jns
mov
fcompl
xor
sbb
mov
mov
mov
adc
push
rcr
je
sbb
movsb
xor
les
ret
sti
andl
mov
pop
pop
loopne
push
bound
fildll
jne
sub
push
mov
ret
aas
hlt
shl
das
sbb
xor
xor
stc
arpl
or
adc
mov
push
lcall
mov
or
or
bound
lods
adc
pop
cwtl
addr16
cmp
adc
mov
je
ja
mov
pop
ret
or
ds
mov
ret
lret
sbb
les
xorb
nop
push
cld
in
jbe
xlat
mov
dec
sub
mov
jp
dec
outsl
mov
ljmp
jnp
cmp
leave
int
scas
jae
or
call
cmp
sub
jns
adc
js
divb
jl
scas
popf
jae
sub
mov
push
jno
shlb
sub
test
bound
das
out
lock
jb
les
dec
cwtl
mov
test
add
xchg
dec
insl
fsubrp
push
jge
ljmp
popf
inc
popa
int
xchg
mov
cmp
aam
shll
repz
pop
rcr
adc
std
notb
movsb
popa
iret
std
sbb
push
xchg
cmp
ret
sbb
cmc
adc
jae
nop
in
sbb
inc
add
push
xor
push
sbb
sbb
or
add
mov
lds
dec
add
insl
mov
and
faddp
addr16
gs
add
pop
mov
xchg
test
and
and
les
rcrb
ret
call
test
add
push
jbe
mov
out
mov
dec
jl
fldenv
dec
inc
shll
aam
or
add
mulb
fsubs
push
call
lahf
sub
push
xor
dec
fwait
orl
aaa
xchg
or
repz
sub
or
and
jmp
mov
mov
mov
mov
loopne
jne
xor
sub
mov
jp
movsb
ret
mov
es
sub
stc
sbb
and
je
jae
in
add
mov
mov
pop
cs
in
xchg
