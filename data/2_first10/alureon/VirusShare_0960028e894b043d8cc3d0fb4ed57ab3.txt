xchg
push
mov
pop
sub
mov
sub
mov
mov
pop
xchg
sub
mov
mov
pop
push
push
pop
pop
mov
sub
mov
mov
pop
push
mov
pop
sub
push
mov
pop
sub
mov
mov
pop
sub
mov
xchg
xchg
call
jmp
pop
nop
sahf
xor
add
pop
xchg
cmpsl
ja
adc
addr16
ret
add
cmp
jo
mov
aas
and
fisttpll
or
inc
lods
and
add
or
xchg
adc
mov
push
ljmp
xor
pop
pusha
out
out
hlt
inc
add
xor
je
dec
cmp
mov
or
aam
popa
jb
mov
adc
scas
sbb
imul
daa
sub
pop
xlat
inc
scas
mov
outsl
int
in
adc
stos
stc
adc
aas
inc
sub
outsl
dec
xor
arpl
lcall
dec
adc
cmpsl
xchg
mov
outsl
cmc
adc
and
icebp
aad
rclb
add
or
push
mov
leave
xor
xor
add
and
inc
inc
call
std
pop
mov
rcrb
or
push
mov
cmc
testb
adc
or
jo
or
cmp
inc
das
fstps
pop
and
daa
push
pop
ret
push
clc
rcll
push
fisubs
and
mov
xor
sysenter
add
mov
push
andl
jnp
xchg
xchg
cmc
outsb
sub
lock
xor
push
imul
scas
rcl
add
divl
push
fnstsw
cmp
ja
sub
call
clc
test
pusha
pop
cmp
jbe
std
pop
push
jne
filds
jmp
adc
aam
or
add
pop
sub
insb
jns
lock
inc
and
adc
xor
mov
hlt
mov
std
in
addl
ja
rcrl
and
xchg
aaa
leave
cmp
adc
jbe
mov
mov
movsb
arpl
or
divb
sbb
fdivrl
add
or
add
incl
cld
add
dec
and
and
scas
out
sub
push
jmp
incb
inc
pop
mov
pop
mov
adc
int3
adc
xor
inc
js,pn
out
ret
inc
push
push
mov
ja
not
or
push
lock
arpl
pop
sub
mov
adc
push
test
jo
addr16
sub
push
into
icebp
callw
xor
pop
fs
add
sbb
shll
xor
popa
adc
push
cmp
pop
aaa
push
push
repz
push
mov
dec
das
adc
test
or
je
bound
pop
mov
je
adc
sub
pop
mov
xor
push
jp
push
xor
jno
sub
xor
pop
std
dec
outsb
sarb
or
dec
test
cmc
or
popa
test
cwtl
das
je
icebp
mov
pop
mov
mov
je
out
add
into
inc
lea
xchg
pop
add
xchg
imul
add
jle
inc
xor
jns
cwtl
rorl
sbb
scas
xor
into
mov
push
sbb
ds
push
lock
inc
dec
fisubrl
xchg
pop
addl
addb
jb
scas
sub
outsb
xor
mov
mov
in
imul
aaa
movsb
fists
jne
xchg
inc
mov
mov
xchg
fbstp
ss
fldcw
out
pop
pop
and
xchg
les
dec
xchg
fildll
sub
jo
sub
rcrb
fs
push
pop
mov
repnz
pmaddwd
xchg
lods
sub
add
fimull
test
std
pushf
dec
jp
jle
repnz
call
les
daa
mov
pop
cltd
fucomp
sbb
lsl
sub
mov
leave
jne
std
sub
dec
in
mov
sbb
dec
rorl
movsl
cmp
testl
cmp
sub
fsubs
ss
insb
mov
push
repz
pop
push
pop
test
jno
sub
push
push
xchg
jne
inc
lods
lods
inc
xchg
out
cmc
gs
ljmp
mov
xchg
jbe
dec
iret
pop
jmp
or
xor
mov
mov
inc
add
ja
mov
scas
mov
jp,pn
push
addr16
ret
ret
cmp
repz
cmp
cwtl
mov
or
incl
subl
lret
xor
nop
into
mov
out
or
or
call
jecxz
or
or
xchg
aas
xlat
push
mov
outsb
ficoml
scas
in
sbb
jp
es
and
movsl
aad
roll
in
fistps
ljmp
cmp
nop
mov
mov
cmp
repnz
imul
shlb
cmc
push
xor
mov
inc
and
int3
shll
inc
pop
cmp
repnz
clc
push
hlt
mov
call
or
add
bound
test
push
popw
sub
into
xor
cmp
ljmp
data16
int3
xor
push
pop
cli
pop
sbb
sbb
jo
or
cmp
cmp
and
push
mov
or
xchg
jno
mov
mov
jno
inc
movsb
jne
adc
add
dec
enter
mov
jnp
fsub
mov
bound
jbe
insb
xchg
pop
addr16
call
mov
mov
movsl
sbb
add
and
ds
fmull
test
mov
and
inc
add
sar
xchg
daa
mov
andl
imul
adc
add
nop
inc
cmpsl
mov
push
sub
lret
adc
out
mov
push
xlat
sbb
cmpl
mov
test
pop
mov
adc
daa
cmp
pop
imul
repz
sarl
pop
mov
stos
push
nop
xchg
jne
xchg
mulb
sbb
jo
xchg
pop
nop
sar
cwtl
fs
fs
xchg
sub
sbb
and
adc
sbb
inc
mov
or
push
aas
dec
test
mov
xor
mov
push
mov
push
sahf
xor
xchg
and
ss
fsubl
ss
or
xor
mov
mov
ret
cld
push
mov
mov
int3
sub
xor
pop
shlb
enter
dec
sub
cmp
inc
xchg
sbb
push
shrb
add
sarl
add
es
call
mov
inc
ret
adc
faddl
movsb
xchg
insb
fwait
stos
sbb
or
mov
adc
sbb
add
and
scas
scas
popa
push
lea
enter
call
adc
iret
daa
mov
popa
mov
popa
ret
das
pop
sub
push
daa
push
mull
lea
mov
ds
cmp
in
std
in
jle
xchg
adc
push
add
neg
mov
addr16
jnp
mov
mov
int3
mov
sbb
or
push
mov
popa
loope
bndstx
popa
jo
xor
xchg
push
es
cltd
pop
jge
add
stc
and
ficompl
jae
sub
in
iret
lcall
outsb
test
and
xchg
pop
xchg
mov
add
pusha
xorl
sub
mov
rcl
xchg
faddp
gs
cltd
push
xor
xchg
mov
or
dec
inc
inc
lea
out
inc
dec
hlt
outsl
lock
push
pop
lahf
rol
outsl
in
jge
fisttps
adc
lret
and
add
movsb
cmp
push
push
pop
fiaddl
enter
mov
cmp
sbb
adc
test
mov
sbb
insl
loopne
cmpsb
fistpll
cmp
inc
jbe
add
adc
ds
jnp
fwait
mov
cmp
popf
lret
loop
repnz
sub
ljmp
pop
rcll
ss
mov
inc
imul
mov
push
jb
dec
in
ret
mov
ss
sbb
mov
mov
hlt
out
daa
push
in
cli
adc
jb
in
fbstp
test
adc
mov
adc
mov
movsb
sbb
add
mov
add
mov
pop
mov
cs
mov
enter
lret
into
and
into
iret
sbb
dec
mov
jae
in
insb
jp
cli
add
push
repz
out
test
lret
test
icebp
filds
or
loopne
and
daa
adc
dec
test
pop
pop
xor
xchg
cmp
mov
or
or
dec
test
inc
mov
pop
xor
or
jmp
ret
fisttpl
int3
sub
je
ja
dec
sbb
scas
push
or
mov
adc
xchg
sub
and
push
les
dec
pusha
lret
ret
icebp
pop
mov
adc
sti
mov
unpcklps
sbb
dec
xchg
repz
mov
nop
loopne
add
sbb
lock
popf
xchg
dec
or
lods
clc
jno
or
add
pop
or
cmpsb
dec
call
out
xor
movsb
pop
mov
cmp
mov
mov
cmp
stos
lar
mov
cmp
push
sub
out
pop
lock
imul
mov
or
rcr
sub
call
pop
mov
je
arpl
add
mov
xor
dec
xor
xchg
lods
daa
outsb
scas
in
addb
mov
rcr
dec
popa
adc
pop
je
xor
and
in
adc
cmpsl
xchg
push
ds
cmp
xchg
mov
adc
cli
adc
push
aaa
cmc
mov
inc
call
lcall
jge
insb
pop
xchg
int3
icebp
mov
test
enter
movlps
push
dec
push
xchg
mov
and
sub
add
aas
push
add
mov
mov
mov
push
jae
call
repnz
dec
and
pop
adc
cmp
push
xchg
xchg
pop
dec
sub
sbb
adc
js
arpl
xlat
addb
xchg
adc
scas
and
mov
pop
mov
adc
or
and
push
add
push
cmp
call
and
into
mov
popa
cmp
sub
inc
imul
repz
pop
outsb
rclb
inc
sub
test
pop
xchg
sub
pop
or
pusha
xchg
icebp
push
lods
mov
fs
mov
js
push
sahf
jo
inc
test
aas
xor
fs
pusha
lret
scas
inc
int3
jecxz
pusha
or
lret
mov
mov
adc
sarl
popa
ja
sub
xchg
cmp
inc
shl
mov
push
pop
dec
ss
push
and
icebp
lcall
outsl
insb
xor
xchg
ds
shll
xlat
adc
repz
pop
pusha
push
inc
out
call
pop
xorb
je
sbb
pop
dec
mov
and
xchg
cmp
lea
mov
add
add
cs
sub
bound
mov
call
pop
mov
add
scas
inc
sbb
mov
cli
sub
sti
add
mov
mov
jb
adc
enter
mov
movsl
inc
sahf
mulb
xor
mov
neg
leave
and
cltd
imul
mov
test
dec
insb
and
daa
pop
xor
push
fldl
inc
stos
cmp
sahf
cmpsl
mov
xchg
mov
pop
lods
mov
push
imul
clc
cmp
jle
xor
xchg
lods
out
inc
mov
je
cmpsl
andb
push
add
test
push
add
pop
xchg
ds
popa
sbb
mov
add
add
dec
mov
dec
pop
jmp
add
das
test
icebp
fcmovnbe
sahf
imul
push
loop
adc
or
into
add
mov
inc
into
or
xor
xor
cmp
push
in
xor
mov
icebp
std
inc
push
in
bound
push
scas
inc
add
xchg
jae
push
or
dec
push
fs
js
lock
or
cmpb
pop
or
scas
shld
jmp
aas
dec
aas
mov
das
mov
repnz
in
cmpsb
mov
xor
ds
push
jns
adc
jl
cltd
mov
cmpsl
or
mov
jno
xchg
inc
sbb
mov
mov
jae,pn
mov
pushf
and
sbb
xor
in
add
lock
ret
mov
cmp
sti
mov
inc
add
inc
dec
add
gs
push
xor
pop
inc
jb
push
sbb
out
pop
or
xor
push
cmpsb
inc
sub
cmp
cmpl
xchg
xchg
leave
inc
mov
inc
sbb
into
jecxz
lea
sbb
lods
xor
test
mov
mov
stc
inc
and
imul
dec
mov
pop
adc
dec
jmp
push
xchg
mov
mov
negb
dec
sub
add
hlt
mov
dec
sbb
imul
xchg
jp
es
jbe
pop
mov
or
dec
cmpsl
int
adc
mov
sbb
in
add
add
mov
das
jne
push
iret
leave
shrb
out
fidivrl
xor
push
cmpsl
movsb
mov
cmp
sbb
addb
mov
lret
cmp
push
arpl
test
sub
fdivl
add
pop
cmpsb
adc
pop
call
imul
hlt
lock
xchg
xlat
call
jl
dec
pushf
xchg
pop
mov
cmp
and
scas
xlat
je
and
or
in
ljmp
in
daa
jb
jnp
push
add
adc
push
mov
cwtl
in
dec
mov
push
pop
push
adc
mov
mov
jle
cmp
into
or
mov
movsb
les
cmp
push
mov
mov
jae
cmp
and
hlt
push
ds
popa
push
lcall
lods
inc
mov
jl
popf
mov
add
icebp
cmp
mov
mov
or
test
xlat
filds
xchg
pop
negb
xor
hlt
mov
notb
push
or
or
pushf
es
lahf
adc
test
inc
dec
jl
cmp
insl
cld
jle
sbb
jl
gs
or
push
test
sub
jmp
mov
lods
adc
cmp
cld
add
jl
movups
xchg
subb
sub
jg
jmp
dec
ret
cmp
or
jae
je
sbbb
push
sbb
mov
daa
pop
xchg
adc
cmp
int
pop
test
aam
and
push
rcrb
sub
or
jae
push
xchg
nop/reserved
cmp
mov
out
push
sub
mov
adc
xchg
inc
loopne
and
int3
xchg
in
loope
lods
cmp
mov
adc
sbb
sbb
dec
pop
cld
shlb
ret
es
cmpsb
mov
mov
push
cmp
fildl
mov
adc
out
dec
push
add
addr16
sub
pop
push
movsl
xchg
sbb
std
das
aaa
jle
test
test
or
inc
and
cmc
cmp
mov
in
jo
scas
sub
icebp
cmp
add
dec
xchg
pop
div
addl
xor
mov
sub
or
lahf
pop
add
inc
adc
mov
es
pushf
xbegin
push
shrb
daa
mov
pusha
pop
hlt
shlb
repnz
mov
ret
mov
inc
icebp
or
add
adc
add
push
xor
push
movsl
ja
sbbb
inc
icebp
and
add
je
data16
xchg
lock
shlb
imul
sub
xchg
pop
xor
xchg
cmpsb
or
clc
mov
scas
cwtl
mov
dec
out
int
jecxz
xchg
lret
lods
sub
pop
bound
lahf
fistpll
orl
dec
adc
jnp
push
push
mov
sub
mov
push
and
sub
inc
sub
mov
cmpb
pop
push
clc
cs
pop
adc
jg
enter
test
fisubrs
push
cmp
adc
popa
push
adc
adc
out
push
cmp
and
pusha
xor
xorb
stos
out
cmp
mov
cmpl
add
fs
imul
in
or
pop
pop
add
pop
or
jmp
cmp
mov
rorb
test
data16
fcomps
pop
push
push
pop
sub
repnz
leave
gs
or
xor
pop
jp
cmp
sub
adc
ror
adc
sbb
mov
fstps
cmpsb
inc
aam
aas
out
mov
call
and
xor
mov
fisttps
mov
xor
sahf
test
mov
sub
out
mov
ds
rolb
xor
mov
call
and
pop
lret
das
nop
daa
pop
rcrb
mov
push
push
ret
icebp
aad
icebp
repnz
pop
jmp
jbe
sbb
ret
icebp
pop
sub
arpl
cmp
or
jge
mov
test
dec
inc
push
adc
cmp
dec
into
jg
push
adc
ljmp
addr16
icebp
inc
push
xchg
lcall
push
mov
cwtl
fs
lret
sbb
movsl
jle
popa
je
pop
adc
fs
jmp
push
xchg
repz
jne
idiv
aad
cmc
stos
lods
inc
mov
push
daa
decb
ret
idiv
lea
inc
push
aam
dec
cltd
mov
in
xor
push
pop
sub
cmp
adc
xchg
shlb
sub
hlt
xor
adc
cmp
sbb
sbb
cmp
scas
cmpsl
or
sub
pop
negl
idivb
mov
es
adc
inc
call
cmc
add
out
outsl
hlt
movzwl
pop
orb
adc
jmp
push
mov
std
jmp
xor
pop
and
ja
push
movsb
mov
mov
lods
add
adc
test
out
cltd
loopne
and
and
jp
test
dec
cmp
mov
xor
scas
je
call
xchg
gs
dec
push
adc
mov
inc
and
and
xchg
push
pop
call
sub
sahf
insb
mov
xor
or
fildll
data16
or
movsb
pop
aad
mov
ret
push
xchg
in
push
jns
hlt
je
lods
fistpll
xor
iret
adc
cs
sub
push
aam
xchg
sub
divl
adc
xchg
cwtl
sbb
pushf
cld
test
dec
hlt
push
loope
pop
mov
push
and
push
push
insl
and
jno
inc
lcall
xchg
out
mov
adc
test
rolb
dec
into
addr16
mov
pop
mov
hlt
les
push
cmpsl
push
jecxz
popa
xchg
das
ret
or
xchg
or
cmp
jno
mov
or
notb
mov
mov
mov
pop
cld
jno
movsb
jp
fisubrs
in
adcb
mov
cmp
int
mov
out
arpl
push
pop
pop
scas
mov
pop
stos
pop
pop
jnp
xor
test
or
mov
cld
push
lahf
xchg
pop
sub
sbb
leave
icebp
xor
in
mov
xor
inc
mov
das
imul
jl
shl
pop
lcall
mov
sbb
push
loopne
xor
cmp
js
into
imul
and
or
xor
inc
subb
mov
mov
push
cmpsl
mov
jbe
mov
test
xchg
inc
mov
mov
push
hlt
je
inc
sub
push
lock
je
pop
clc
pop
xchg
lretw
roll
fidivs
dec
mov
repz
sub
pop
push
pushf
push
lock
sub
int
push
pop
cmpsb
push
inc
jb
adc
push
mov
test
mov
mov
jge
out
cmp
lcall
and
rcrl
push
xor
jne
leave
sub
push
jmp
imulb
push
test
adc
adc
inc
inc
adc
dec
push
xchg
sbb
mov
in
jmp
push
rorb
push
inc
or
jge
adc
and
gs
movsb
mov
rclb
xor
pop
fiadds
stos
lock
mov
add
xor
adc
and
pop
test
lahf
push
jg
pop
cmp
pop
dec
ljmp
pop
movsl
add
movntps
pop
jns
pop
and
mov
pop
sbb
xchg
cmp
movl
adc
push
movsb
aad
inc
mov
push
mov
jbe
lret
adc
lahf
mov
mov
cmpl
inc
mov
or
or
shlb
in
mov
into
dec
xor
xor
pop
mov
out
cmpsl
push
xorb
pop
sbb
dec
mov
xorb
fbld
lock
sahf
push
stc
gs
mov
cs
mov
or
jbe
and
mov
mov
out
and
cmpsb
mov
pop
and
cmc
data16
lcall
xor
test
dec
and
test
js
aad
arpl
inc
or
lods
iret
call
pusha
out
sbb
xor
xor
xchg
jle
call
add
insl
aaa
adc
nop
or
pop
adc
call
lret
les
cmpsl
push
call
movsl
add
call
jns
leave
mov
jmp
sbb
cmp
lcall
cli
adc
push
cmp
inc
and
aam
scas
pop
fs
lock
lret
mov
cmp
and
fimuls
mov
inc
out
push
or
pop
jl
sbb
adc
add
gs
loopne
rcrl
jae
adc
nop
nop
xor
jg
cmp
or
or
push
ds
orl
mov
shlb
orb
inc
icebp
and
jge
les
movsl
shlb
xor
rolb
ja
push
cwtl
xchg
mov
mov
scas
nop
mov
dec
sub
pushf
pushl
sbb
sbb
add
mov
push
scas
outsb
scas
push
xchg
lret
leave
dec
dec
mov
sbb
test
push
je
xchg
pop
dec
jp
xlat
mov
xor
dec
pushf
fisttpl
cmp
or
cmc
jnp
call
jns
sbb
das
outsb
pop
sbb
ret
in
imul
add
adc
push
pusha
aaa
stos
inc
add
xchg
adc
jl
int3
xchg
add
sbb
fdiv
xor
lcall
imul
out
sub
call
push
mov
out
pop
xchg
push
test
cmp
addr16
add
add
sbb
mov
arpl
xchg
scas
in
and
daa
or
mov
and
out
pop
xchg
jle
ss
movsb
jb
or
mov
mov
inc
cmpsl
cmp
add
and
jae
and
cltd
test
add
mov
outsl
and
test
cmp
cmp
scas
xchg
and
mov
push
dec
or
pop
je
xor
aam
jle,pt
push
add
notb
rol
or
push
add
inc
pop
arpl
push
fs
push
pop
imul
shll
stos
sub
add
jae
jb
inc
gs
push
adc
repz
jp
and
iret
add
cltd
sbb
je
arpl
pop
addr16
push
mov
loopne
pop
sub
sub
jbe
sub
push
outsl
sub
pop
jno
lret
push
dec
adc
mov
out
add
iret
test
pop
pop
jle
in
adc
enter
rclb
xor
aad
lret
inc
bound
adc
leave
popa
mov
inc
ficoms
lret
mov
cwtl
outsb
lret
out
push
lods
sub
stos
stos
pop
push
inc
adc
sbb
je
imul
call
sbb
filds
fldlg2
cmpsl
outsb
xlat
cmp
or
loop
mov
jbe
inc
roll
inc
push
lret
bound
jbe
mov
filds
mov
decl
repnz
inc
hlt
jb
push
leave
adc
add
lret
dec
cwtl
cmp
pop
push
jp
jbe
mov
dec
cld
sti
push
dec
mov
add
rcrb
xchg
es
xchg
pushf
sarb
rorl
imul
lret
jo
outsb
mov
testb
stos
das
rclb
cmpsl
xchg
rorl
and
jge
and
jmp
popa
fwait
cmp
imul
mov
outsl
xor
push
jp
mov
push
and
sbb
nop
out
lds
aaa
inc
insb
movsl
jae
arpl
jns
insl
ret
fisttpl
ss
ds
inc
jmp
pop
aaa
aam
xchg
je
sub
push
inc
mov
and
push
and
push
adc
jne
jne
test
dec
xor
mov
mov
mov
fdivr
call
gs
push
fildll
test
push
xor
mov
jecxz
sahf
dec
mov
cmp
sbb
rcrl
imul
rorb
push
notb
mov
js
enter
mov
mov
insb
imull
dec
sbb
xchg
cmpl
test
or
add
pop
cmp
ja
cmp
stos
aam
sub
mov
cmpsb
std
xor
fcmovnu
push
mov
test
imul
mov
xor
in
dec
cmpsb
shll
mov
shlb
push
mov
add
sbb
int
in
and
jbe
popf
pop
ja
fcompl
xadd
subl
in
ret
xchg
and
das
cmp
push
and
jo
push
test
mov
mov
push
add
arpl
adc
js
enter
in
insb
insl
fwait
jae
xchg
mov
add
jb
hlt
lret
or
clc
push
push
sbbl
movsb
movsb
scas
enter
popa
jne
inc
test
ds
test
push
xor
xchg
or
xor
xchg
add
idiv
dec
jmp
jle
dec
pushf
jecxz
sub
dec
pop
stos
jae
mov
jo
enter
cmp
loop
out
and
mov
or
and
pushf
add
fimull
push
loope
adc
movsb
xorb
les
xchg
les
into
push
xor
xchg
push
mov
pop
xchg
pop
sub
out
adc
sub
fs
pop
add
mov
mov
cwtl
inc
mov
jp
adc
rorl
cli
ds
scas
in
sub
xor
rcll
je
inc
mov
mov
dec
xchg
lret
cmp
push
shl
dec
es
pop
pop
push
push
fsubl
aas
fiadds
inc
and
inc
roll
ds
roll
sbb
lock
adc
mov
and
pop
sbb
pop
gs
stos
test
arpl
bound
stos
gs
pop
lds
xchg
int
pop
cmp
jns
jg
scas
in
push
cltd
orb
inc
enter
arpl
popf
push
stos
stos
jecxz
dec
ss
fs
push
pop
ret
std
sahf
sbb
loop
es
int3
je
ljmp
pop
inc
push
mov
das
call
adc
cs
mov
iret
add
sbb
push
out
ror
xchg
jo
mov
or
lods
js
pop
xchg
push
or
mov
lahf
mov
into
xchg
std
jge
pushl
pusha
dec
push
jno
jne
sbb
push
mov
leave
mov
mov
dec
mov
cmp
rcr
pop
dec
nop
push
push
outsl
jmp
scas
xor
xchg
xchg
aam
outsl
push
lds
repnz
cmc
lock
jbe
mov
pop
xchg
test
and
mov
out
subps
rorb
fs
and
jbe
imul
scas
inc
fcoml
ja
cld
inc
shl
xor
xor
mov
lds
bound
sbb
lahf
daa
or
filds
decl
movsb
sub
push
leave
pop
lcall
xchg
es
inc
inc
dec
andb
sub
jns
gs
push
addb
push
jns
mov
mov
adcl
mov
sti
cld
xchg
xchg
pop
sti
dec
cmp
and
scas
movups
fs
hlt
fwait
sub
jo
ret
or
mov
or
lahf
inc
test
lods
xor
enter
sarb
add
mov
jne
outsl
addr16
and
outsl
xchg
es
mov
shl
mov
and
push
hlt
aad
outsb
arpl
sbb
sub
sub
enter
cmp
mov
pop
xchg
stos
pop
or
cs
dec
icebp
das
rol
inc
jg
jae
popa
cwtl
cmp
jnp
es
pop
adc
jno
fs
aad
cltd
pop
mov
sbb
jle
sub
push
and
pusha
into
push
cmp
ret
dec
loopne
js
cmp
bound
adc
aam
mov
scas
cmp
sbb
and
jnp
loope
or
or
lods
mov
push
test
shlb
call
mov
xor
add
jae
popa
data16
fstpl
push
pop
mov
add
imul
inc
jb
inc
data16
hlt
push
fs
xor
outsl
rorb
push
or
pop
dec
rclb
xor
aad
pusha
jne
mov
jno
sub
xchg
push
jp
gs
adcb
je
insb
push
pop
mov
mov
addr16
jbe
ljmp
aam
and
cmc
jo
lcall
test
test
and
icebp
scas
sub
bswap
movaps
dec
dec
nop
ljmp
jne
xor
inc
jns
jo
push
test
ret
inc
into
push
and
or
push
jmp
or
xchg
inc
pop
lods
idivb
sbb
scas
cmp
leave
cli
dec
cs
out
cmp
js
inc
fbstp
jno
repz
insl
cmp
pop
faddl
dec
push
mov
mov
jnp
jns
mov
add
ret
sub
jb
repnz
dec
inc
scas
inc
outsb
xchg
xchg
ret
popf
shl
rcrb
rclb
fmull
cltd
jns
sbb
mov
xchg
into
test
outsb
pushf
inc
mov
push
stos
inc
dec
cmpb
jae
fbstp
mov
bswap
rorl
jb
loop
test
hlt
pop
pop
dec
pop
ja
outsb
outsl
push
and
jecxz
fdivr
jns
jns,pn
mov
movsb
inc
xchg
sub
cmc
addr16
ljmp
scas
cmpsl
scas
dec
and
or
inc
inc
mov
pop
sbb
xor
and
jnp
popa
loopne
xchg
in
addb
js
dec
xlat
and
out
jbe
push
test
push
and
testl
out
push
push
jg
mov
fcmovnb
xor
popf
push
and
push
enter
rclb
inc
mov
repz
fnsave
pop
ja
xchg
jb
mov
jg
jnp
imul
jmp
cmp
sbb
push
push
add
je
mov
cmp
daa
mov
and
scas
xor
pop
pop
ljmp
sub
fstpl
jl
jecxz
arpl
ljmp
and
fucomp
mov
jl
dec
jae
inc
add
lods
les
dec
pop
sub
pop
repnz
cmc
add
inc
mov
sbb
ror
adc
fsubr
mov
mov
andb
cld
mov
push
cmp
mov
sahf
les
shlb
out
or
sub
pop
adc
inc
test
cmpsb
inc
jbe
fimuls
jnp
dec
jge
fnstenv
test
sub
add
movsl
xchg
add
mov
sarl
pop
xor
cli
push
and
fcmovb
imul
rcr
xlat
jmp
xchg
cmpsl
jecxz
cwtl
insl
clc
aad
jp
lahf
add
mov
mov
addr16
into
imul
test
lahf
call
cwtl
loopne
aad
in
cmp
out
fmulp
lret
jle
push
cmpsb
repnz
sub
mull
cmp
pop
xlat
adc
movsb
xor
adc
lods
sub
or
cmp
adc
inc
pop
idivb
sub
add
xchg
and
sub
add
xor
addb
sub
aas
inc
divl
add
jb
inc
jle
dec
cmpsb
jnp
dec
jmp
xor
pusha
aam
cmpsb
imul
xor
imul
inc
fdivr
ss
xchg
cwtl
aas
lods
fwait
pushf
cmp
sahf
lahf
push
xchg
mov
cmpsb
add
mov
add
mov
adc
mov
shlb
ret
incb
lret
mov
add
fcmovu
jp
inc
jno
add
ljmp
out
repnz
mov
and
pop
inc
jno
ja
insl
scas
cmp
adc
mov
push
pop
sbb
jge
outsl
jp
arpl
pushf
aad
sbbb
cs
xchg
lcall
cltd
testl
test
les
movsb
mov
push
add
xor
ficomps
subb
out
cmp
cli
add
scas
dec
and
xchg
andl
xor
push
xchg
aam
ds
xorb
dec
inc
lock
aaa
cmc
imulb
mov
add
mov
and
sub
movsl
add
mov
dec
push
xor
fimull
sbb
jbe
push
outsb
mov
sbb
out
ret
xor
mov
sub
adc
mov
adc
mov
jbe
enter
add
cmp
sub
aas
cmp
je
hlt
pusha
imulb
cmpsl
and
lds
pop
cmp
jl
inc
aad
inc
mov
filds
jecxz
jecxz
leave
fsubp
dec
add
inc
mov
and
cld
pop
dec
xorb
pop
or
add
dec
imull
adc
mov
jns
cwtl
cmp
out
pushf
nop
inc
fcoml
mov
mov
jo
fwait
cmp
xchg
xchg
fldcw
dec
mov
mov
daa
je
cmpsb
sahf
adc
cmp
xor
fmulp
mov
ret
add
push
or
pop
mov
clc
pushf
aaa
push
jno
add
ret
ltr
cmp
lea
add
cmp
out
or
sbb
inc
push
js
clc
clc
cmpsb
loope
aaa
test
into
xor
cmp
lea
mov
cmpl
cmpsb
sub
inc
inc
sub
jno
aaa
pop
adc
adc
ffreep
fmull
add
int3
test
pop
mov
and
pop
xor
push
dec
mov
or
shlb
fdivs
xor
and
ss
ljmp
mov
fcmovnbe
cmpsb
adc
int
dec
cmc
leave
and
daa
clc
arpl
cld
addr16
add
mov
mov
sbb
idivb
lods
shll
jns
movsl
adc
sahf
pushf
pop
sbb
mov
add
inc
ljmp
sar
add
les
outsb
aaa
outsl
add
cmp
data16
into
xor
inc
stc
sbb
aaa
jno
cmpsb
stos
dec
je
push
jmp
jne
xor
imul
fsub
inc
aaa
push
inc
lods
icebp
add
push
cmpsl
mov
inc
dec
mov
or
or
adc
insl
cmpsb
mov
inc
dec
btl
sbb
sub
lcall
pushf
test
xchg
nop
xchg
inc
adc
call
push
jg
jo
insl
add
filds
rolb
mov
fldcw
mov
xchg
jge
xorb
add
adcl
mov
add
jmp
push
mov
xchg
cmp
insl
and
roll
adc
jl
adc
test
out
xchg
xlat
inc
bound
ljmp
mov
xchg
cmp
mov
and
mov
mov
jl
xor
jmp
jl
cmpsl
sub
fldl
into
inc
sbb
push
jbe
add
lahf
sub
nop
jno
add
jecxz
xchg
movsb
cmp
js
nop
and
xchg
add
icebp
adc
clc
out
fidivl
fcmovu
cmpsb
pushl
out
pop
aaa
push
cli
add
cmpsb
sbb
addl
pop
lcall
test
and
push
ja
mov
das
jae
in
data16
push
cmp
push
add
icebp
dec
mov
lds
cwtl
jecxz
add
push
fldenv
aaa
fimuls
sub
bound
repz
cmpsl
stc
stos
xor
out
push
and
sub
inc
cmc
xor
js
pop
mov
add
cmpsl
or
ljmp
and
aaa
lcall
cmp
inc
xlat
mov
jne
gs
lcall
xor
cmp
add
pop
add
mov
jp
ss
int
xor
jge
dec
sub
mov
push
mov
inc
xchg
out
sbbb
add
adc
testl
lock
cmp
push
shrb
pop
mov
or
ret
adcw
push
mov
icebp
add
xor
adc
test
cmpsb
sahf
scas
pop
cmpl
shlb
inc
repnz
popf
cmp
and
inc
pop
sbb
mov
push
xor
add
mov
mov
add
rcl
mov
push
add
dec
dec
mov
inc
mov
je
scas
and
imul
adc
lret
incl
mov
ja
stos
mov
loop
test
sbb
andl
int3
sub
mov
leave
add
pop
rcr
xchg
mulb
outsl
std
outsb
into
sub
mov
or
mov
sub
testl
xlat
mov
sub
mov
jmp
adc
xor
cmpsl
inc
ror
mov
pop
test
lret
lahf
popl
cmpsb
jb
mov
xor
xchg
ds
add
mov
out
call
sahf
dec
pop
cmp
jae
sbb
mov
inc
mov
lock
lods
sbb
cmpsb
push
loopne
dec
lret
mov
aaa
mov
xchg
jns
lret
sar
xchg
jns
repnz
divb
frstor
sbbb
loope
mov
aam
inc
arpl
aas
cmp
adc
xchg
cmp
enter
ficoms
inc
sbb
mov
into
sbb
sub
add
sahf
xchg
pop
jbe
mov
push
adc
fs
add
mov
mov
out
xchg
ret
pop
and
in
jb
pop
cmpsl
jecxz
push
sbb
cmp
add
or
mov
xchg
add
mov
sub
mov
sub
jo
imul
stc
ret
shll
add
xor
test
out
mov
pop
loopne
aaa
into
dec
mov
jp
cltd
lock
jge
test
add
lock
aas
cmpsl
cmpsb
in
call
push
pop
pop
cmp
cmpsl
cld
sbb
pop
subb
adc
cld
stos
jae
add
into
aad
sub
jle
aaa
test
add
pop
cwtl
jno
fldl
lret
ja
mov
sub
pusha
push
out
add
inc
fdivs
out
aaa
ret
aas
shrl
xchg
dec
inc
lods
into
jno
add
sub
iret
cltd
add
clc
mov
xor
or
sti
mov
xor
mov
mov
mov
sarb
ja
outsl
adc
test
xchg
dec
dec
jb
pop
jns
scas
out
push
hlt
sbbb
cmpsl
shrl
stc
incb
in
cmp
and
add
jp
fsubs
out
add
xchg
imul
andl
filds
or
inc
or
sub
dec
or
into
fimull
inc
daa
adc
fildll
cmpsb
mull
mov
popl
push
stos
movsl
imul
xor
push
jo
push
sub
adc
xlat
mov
adcl
push
jmp
sub
out
test
jg
cmpsb
in
or
int
repz
xor
mov
sbb
adcl
add
jmp
xor
pop
mov
jb
adc
sbb
out
fs
mov
jle
addr16
mov
cmp
mov
into
bound
add
sbb
xchg
aas
xchg
add
pop
pop
testb
mov
shrl
jns
sub
ljmp
push
mov
add
testb
arpl
mov
insl
fwait
lahf
fbstp
pop
insb
mov
fcoms
and
mov
lahf
xor
fisubrs
push
add
mov
or
out
or
add
mov
mov
cmpsb
mov
nop
cmp
jg
sbb
add
or
aaa
test
mov
xor
cmc
adc
cmp
add
push
mov
std
xor
mov
or
lea
loop
roll
nop
call
sub
cmpsl
mov
ja
enter
out
imul
sub
lret
lods
sub
fbstp
jle
mov
pop
xchg
push
jge
addl
pop
xchg
ror
mov
cmpsl
mov
push
adc
inc
jno
shll
mov
sbb
ja
sbb
lea
add
adc
mov
ss
add
sbb
repz
paddusw
and
or
movl
ja
push
sub
lcall
pop
mov
outsl
push
add
dec
lods
adc
inc
push
xchg
scas
aad
pop
out
xor
add
and
stc
dec
xor
pop
and
xor
cmp
cs
and
call
fidivrl
add
mov
mov
test
imul
shll
shll
xor
sti
cmpsl
pop
les
xor
xor
insl
fcomp
push
dec
or
cmpsb
dec
cmpsb
add
and
push
shrl
cmpsb
mov
jle
aaa
aaa
mov
or
sti
adc
push
cmpsb
xchg
cmp
popa
add
and
pop
sub
adc
aaa
movsb
push
jne
cld
add
push
mov
add
inc
scas
xchg
xlat
mov
cld
test
lds
dec
pop
lret
xor
rcl
cmpsb
stc
sbb
sti
mov
and
or
loop
mov
ljmp
sbb
rclb
dec
aaa
cmp
sahf
enter
xorl
das
int3
es
aaa
or
repz
mov
aaa
cmp
pushf
out
xor
jnp
iret
imul
xchg
add
int
sbb
or
scas
cmp
mov
in
add
bound
pop
cmpsb
xor
mov
repz
add
cmp
push
sbb
push
stos
jge
mov
inc
std
jg
les
sub
sti
ret
lahf
mov
pop
cld
fiadds
clc
sub
fnstsw
jg
scas
jae
lea
daa
jp
iret
push
xchg
out
cs
sarb
push
and
pusha
iret
enter
and
popf
cmpsb
add
xchg
jge
stc
lahf
add
xchg
add
jno
xor
adc
push
xor
or
push
jnp
inc
es
cmpl
push
sbb
sbb
inc
xchg
in
add
out
sbb
adc
pop
popa
jno
dec
in
xchg
adc
sub
cs
dec
fnstcw
inc
mov
rcll
in
dec
sahf
es
pop
movsl
fmull
adc
sub
test
inc
aaa
push
mov
pop
cmp
mov
out
iret
into
lea
pusha
cmpsb
sub
test
push
cli
sbb
add
cltd
in
rorb
lahf
nop
cmpsb
aaa
data16
lret
outsl
in
add
mov
out
add
aam
xlat
inc
xchg
lods
sub
popa
js
arpl
xor
lods
sub
sub
out
fwait
inc
push
add
icebp
clc
add
mov
dec
mov
xchg
loope
das
daa
aaa
cmp
test
dec
add
xchg
inc
cmpsb
and
jmp
incl
clc
daa
add
ja
lods
fisubl
cs
add
inc
es
xlat
xor
jmp
cmpsl
je
pop
pop
jp
inc
js
pop
out
add
push
inc
jb
dec
ss
inc
push
inc
stc
and
and
inc
and
cwtl
mov
mov
or
mov
cmpsb
cli
mov
iret
cld
enter
sub
sbb
shlb
outsb
xorb
push
cwtl
scas
dec
aaa
add
cmpsb
inc
add
pop
jbe
jae
mov
icebp
arpl
cmp
mov
cs
push
sub
push
lcall
jg
das
incb
stos
mov
mov
ja
add
scas
ret
xchg
lods
add
sahf
inc
xorb
xor
pop
sub
aaa
push
fwait
andb
push
or
inc
das
je
sub
jle
xchg
cmpsb
xor
mov
mov
inc
sbb
rolb
outsb
xchg
or
jmp
pop
cmpsb
inc
inc
pop
mov
comiss
es
cs
shll
rolb
and
aad
test
aaa
jbe
outsl
aaa
xor
mov
aaa
xchg
aad
ja
xchg
mov
adc
sarb
ret
aaa
and
push
or
lahf
test
cmpsb
sbb
mov
imul
aam
outsl
pop
in
dec
bound
or
push
outsl
add
jge
addr16
sub
clc
jne
outsl
inc
cmp
add
mov
and
push
mov
aad
jbe
mov
mov
das
rol
rolb
dec
xor
int
jae
xlat
pop
add
pop
sbb
pop
pop
pop
addr16
fwait
arpl
push
jl
xchg
add
subb
xchg
dec
out
push
xchg
xchg
sbb
dec
xor
or
pusha
int
cmp
and
inc
dec
cs
add
jne
push
orb
adc
inc
adc
test
cmp
sbb
mov
sub
inc
aaa
fs
stc
sbb
sbbb
mov
rolb
push
pop
mov
mov
clc
mov
xor
sub
or
aaa
cmpsl
mov
jbe
mov
leave
shll
insb
add
ret
sub
add
lock
sub
cmpsb
cld
xorb
cld
aam
add
mov
dec
xor
and
xchg
daa
les
out
insl
imul
mov
inc
call
sub
adc
cmpsb
ss
repz
idivl
cmpsb
loope
or
out
jae
mov
push
pushf
lahf
pop
imul
cmpsb
xor
push
aaa
test
cmpsb
fwait
mov
movsl
xorb
adcb
jne
add
scas
rclb
cmp
and
inc
and
icebp
or
sti
bound
sub
aaa
push
cmp
fcompp
fidivrl
adc
ret
imul
shlb
jno
dec
cmpsb
aaa
jl
test
or
push
cmp
jle
adc
les
pop
mov
in
insb
add
push
add
dec
fldl
cmpsb
lds
push
mov
pop
mov
xchg
adc
test
call
push
call
adc
add
aaa
push
cld
orl
jnp
mov
testl
mov
test
xor
pusha
add
add
push
nop
cmpsb
mov
sub
stos
neg
xor
sarl
pop
call
mov
push
mov
dec
addl
and
xchg
mov
inc
jno
sbb
cs
mov
sbbl
mov
subb
xor
aaa
pop
cmpsb
sub
dec
nop
mov
add
aaa
cli
scas
dec
mov
inc
pop
call
arpl
movsl
test
inc
adc
ret
add
aaa
ror
dec
fisubrs
add
nop
add
aaa
and
js
aad
jne
mov
ss
test
push
aaa
and
adc
mov
cmpsb
out
out
test
call
jecxz
out
or
mov
popf
sbb
xchg
aam
push
or
and
movsb
ss
inc
stos
add
add
xor
ja
and
push
test
sbb
push
pushf
add
aam
xchg
aaa
cmp
xor
push
jno
dec
cmpb
inc
adc
imul
or
fbstp
add
sbb
fdivrs
imul
xchg
mov
ljmp
mov
movsb
imul
push
mov
das
or
cmpsb
xor
fwait
push
add
cli
cmc
add
xchg
out
pop
in
andl
pop
icebp
data16
adc
jns
fs
mov
pop
cmp
test
jmp
or
sarl
into
aas
add
aaa
int3
push
bound
fcoms
dec
mov
cmp
adc
add
lea
cmpsl
add
xlat
aad
mov
and
xor
xchg
push
ror
ja
mov
cmp
add
ds
push
add
mov
cltd
pushf
cmpsb
or
jecxz
push
add
mov
pop
jecxz
mov
jp
cmpsb
rcrl
push
mov
ror
push
cmp
jbe
aaa
or
stos
pop
mov
jo
mov
rcll
push
mov
ja
cmpsb
cmp
sub
incb
dec
add
fisttpl
pop
shlb
cmp
inc
dec
jbe
add
ret
cmp
dec
mov
ss
js
roll
adc
pop
adc
push
jecxz
xchg
shl
gs
adc
ss
bnd
mov
sub
add
pop
sub
inc
test
mov
adc
mov
inc
ljmp
cmp
jp
add
aaa
or
or
popa
mov
jno
jo
xor
cmp
dec
cmpsl
shlb
sbb
and
stos
cmp
add
imul
pop
jbe
push
jno
pop
mov
inc
test
outsl
int3
dec
pusha
add
lret
cmpsb
lea
cld
push
adc
xchg
rorb
shrl
xchg
aad
inc
mov
cmpsl
pop
cmpsl
call
pop
add
movb
loop
push
movsl
sbb
xor
push
pop
add
or
xlat
pop
out
add
jne
inc
sub
iret
or
shll
inc
jns
add
imul
adc
push
cmpsb
out
and
rcll
pop
data16
in
cmp
movl
jg
lret
insb
cmp
popf
sti
pop
sarb
xor
movsb
or
ss
xlat
add
lods
and
mov
pop
sub
imul
mov
setge
ss
pop
hlt
fnstcw
push
or
dec
xchg
push
int3
ficomps
mov
imul
addr16
imul
rorl
aaa
add
adc
jo
pop
xor
add
add
pop
mov
adc
and
fwait
outsl
jns
cmpsl
mov
lret
add
push
pop
dec
rolb
aam
mov
pop
shrl
test
xor
pusha
cmpsb
cmpsb
in
aad
sbb
cmpsl
push
aaa
mov
sti
or
xchg
nop
cmpsb
aaa
xor
fdivl
add
sbb
sbb
add
inc
mov
sarl
add
outsb
out
xchg
pop
idivl
add
sub
leave
pop
mov
movsb
inc
cld
add
or
jns
mov
and
or
add
xchg
add
jb
adc
mov
orb
pop
inc
xorb
sbb
jno
xchg
pushf
lds
psrld
cmpsl
scas
lcall
aas
push
out
add
push
add
gs
push
outsb
cld
adc
scas
cmp
cmpsb
xor
add
jbe
pop
movsb
jnp
mov
shlb
push
ss
sti
add
jbe
mov
push
decb
out
xchg
lods
mov
repz
aaa
cmp
jl
nop
nop
ret
or
cmpsb
aas
fdivs
cmp
sub
dec
cmp
imull
mov
fxtract
mov
adc
sbb
fisubl
pop
fdivrl
xor
in
lock
add
loope
inc
or
add
and
xor
shll
dec
mov
push
cmpsb
xor
cmc
fwait
mov
jbe
iret
cli
and
xor
sbb
aaa
dec
clc
subl
mov
lea
cmp
jecxz
shr
cwtl
add
xor
mov
xorb
movq
je
inc
inc
icebp
mov
dec
fisubrl
jno
cltd
loop
movsl
popf
pop
ret
movsl
nop
shll
lahf
popf
cmp
jl
cmpsb
aaa
cmp
inc
imul
sbb
adc
xchg
jge
jl
int3
mov
adc
ja
stos
jg
sbb
stos
mov
mov
mov
lcall
imul
sub
data16
mov
xchg
mov
ds
cmp
popf
es
add
and
cs
jb
dec
and
pop
jno
add
xchg
cmpsb
sub
ret
pop
pusha
adc
out
lock
pop
ljmp
pop
jbe
sahf
add
push
addr16
push
and
push
mov
movsb
jb
repnz
cmp
sub
add
adc
or
sub
lea
sub
jns
push
xor
add
mov
cmp
in
ret
ret
sbb
data16
test
lods
out
xchg
push
aaa
add
movsb
add
inc
push
jb
inc
in
xchg
mov
enter
add
cmpsb
aaa
icebp
xchg
decl
js
or
dec
push
stos
mov
ss
andl
addb
out
add
imul
sbb
pop
mov
cmpsb
outsl
clc
js
jle
add
aad
mov
por
stc
pop
or
ds
mov
inc
adc
add
or
inc
xlat
mov
sub
cmp
aaa
rcrl
mov
push
fsubp
aaa
imul
lcall
dec
mov
jo
add
cmp
es
call
por
sbb
movsl
mov
push
push
inc
push
or
mov
scas
cltd
dec
cmpsl
aaa
fistps
cmpsb
sub
sub
cltd
jne
fwait
add
lret
cmp
fmulp
movl
add
sub
add
addr16
push
mov
test
lea
fiaddl
scas
xchg
ja
jno
add
xchg
inc
or
cmpsb
xor
daa
stos
xor
push
ja
push
cmp
and
xchg
fiaddl
movsl
or
mov
cmp
xchg
xchg
jns
aas
cmpsb
or
inc
jmp
test
mov
sbb
add
mov
push
pop
ja,pt
out
cmpsb
sbb
dec
fucomi
jmp
adc
cmpsb
aaa
shll
cmpl
inc
imul
xor
and
test
xchg
adc
sahf
bound
in
sbb
bsr
adc
mov
add
fwait
or
lret
and
pop
cmp
aaa
shll
cmpsl
sub
mov
sub
cli
addb
mov
shll
popa
push
icebp
out
mov
addr16
in
movl
jmp
mov
mov
sarl
mov
and
cli
push
addl
fdivr
shlb
popl
in
popf
adc
fwait
add
push
add
mov
popa
adc
and
ja
pop
mov
xchg
loopne
adc
aaa
add
sub
pop
add
enter
loopne
xchg
jecxz
sbb
push
movb
cmpsb
fdivrs
scas
int3
add
movsb
out
jno
mov
pop
add
fs
repnz
aaa
lds
pusha
int3
add
pop
or
push
xor
add
lock
xchg
adc
loopne
mov
dec
hlt
cmpsb
xor
fucompp
xor
xor
cli
lods
imul
repnz
aaa
pop
out
xor
cli
aam
push
aaa
insl
add
cld
inc
adc
push
mov
jo
stos
test
xor
mov
scas
repnz
sbbb
cmpsb
dec
outsl
jo
cli
add
inc
cmpsb
adc
pusha
add
roll
out
aas
test
movsb
jp
add
aaa
jmp
pushf
ret
outsb
insl
lret
xchg
mov
add
mov
mov
and
bound
add
mov
jp
or
mov
out
data16
xor
push
je
add
jge
xchg
mov
enter
int
jae
jb
push
adc
test
push
add
loope
out
push
add
xchg
ret
mov
cmpsb
aaa
je
cmp
add
movsb
call
clc
cmpsb
xor
icebp
stos
scas
push
movsb
aaa
xchg
cmpsb
mov
or
or
xchg
adc
add
movsl
pop
and
jno
mov
xor
adc
cmp
mov
lret
leave
dec
dec
add
imul
add
cli
nop
add
hlt
dec
mov
push
inc
jl
add
repz
jle
rcrl
ret
aad
outsl
mov
aas
pop
lds
pop
and
mov
cmpsb
aaa
cmp
mov
mov
push
popa
push
push
mov
xchg
add
aaa
lods
scas
mov
xchg
adc
mov
xchg
cmpsl
aaa
mov
push
imul
xchg
add
add
sbb
inc
xlat
add
and
or
insl
out
add
and
dec
fwait
cld
cmovb
jecxz,pt
shl
jb
xor
push
std
pop
add
ss
pop
ret
sub
mov
or
mov
ja
sbb
ja
add
xchg
cmpl
aad
and
pop
mov
cld
jnp
movsb
dec
cmp
orl
gs
push
dec
cmp
xor
sarl
pop
cmp
pop
sbb
fisubrs
push
popf
inc
ss
push
add
jg
sub
je
out
lahf
pop
scas
add
fisttpll
adc
or
jbe
call
int
hlt
divl
aaa
xchg
add
sub
adc
fisubrs
xchg
push
lcall
mov
jbe
pushf
cmp
sets
ljmp
inc
jns
sub
jp
roll
icebp
jns
and
or
into
push
cmpsl
jo
xor
in
pop
aaa
push
cmp
hlt
bswap
fldcw
push
sub
sbb
mov
mov
in
xor
dec
cmpsb
sub
sbb
fnstsw
and
pushf
jl
cltd
sbb
sub
or
add
int
pop
jl
cmp
pushf
test
mov
addr16
add
jno
shl
jne
jg
popa
and
test
pop
je
jle
cmpsb
ja
add
aad
gs
mov
jmp
aaa
add
dec
cmp
mov
sahf
add
aaa
outsl
lods
pop
daa
mov
or
movsl
adc
ja
lods
or
in
data16
out
pop
add
aaa
jle
or
add
add
and
inc
lahf
sub
addr16
mov
lret
pop
add
sbb
ljmp
bound
mov
fisttpll
or
adc
add
fs
add
ror
add
mov
rorl
decl
movl
mov
xor
and
loop
cmpsb
xor
add
cmp
add
scas
xchg
test
jae
mov
xor
jp
ja
mov
in
sarw
inc
leave
lea
pop
daa
jno
add
js
push
adc
std
leave
add
aaa
inc
push
cmpsb
in
mov
out
inc
aaa
dec
or
inc
shl
aaa
cmp
mov
icebp
push
andb
insb
xor
jle
test
sub
add
ljmp
repz
lock
jo
dec
add
xor
pop
dec
push
cmp
jmp
inc
xlat
or
popf
push
mov
jo
mov
cmp
roll
push
aaa
add
daa
xchg
add
shl
lds
and
fisubl
fcoms
popf
test
call
or
and
dec
jp
or
pop
cmp
add
xchg
cltd
ret
inc
add
lcall
add
push
mov
fiadds
add
pushf
xchg
jbe
aaa
sbb
std
xor
cmp
xchg
insl
scas
add
xchg
cmp
dec
aas
mov
imul
pop
mov
push
dec
dec
xchg
pop
push
and
inc
inc
aaa
rcrb
pop
jle
aaa
jge
std
fistl
mov
aaa
out
or
ret
lea
mov
cmp
pop
or
or
shrl
cmpsl
test
test
in
add
aaa
cs
pop
push
cltd
sub
add
sbb
add
insb
push
cmpsb
mov
cmp
cmpsb
mov
mov
or
push
pushf
cwtl
xchg
mov
aad
or
or
cmp
and
add
cmp
jecxz
aas
pop
pop
cmp
aaa
bound
cmp
pusha
aaa
mov
insl
mov
enter
cmc
in
cmp
mov
nop
push
out
mov
inc
xor
lods
jp
fsubr
fwait
xor
pushf
add
fsubrl
cmpsb
and
add
cmp
or
add
dec
lea
mov
jg
inc
adc
lret
mov
pop
push
flds
sbb
mov
pop
inc
outsb
jbe
ds
scas
js
cmp
sub
add
ds
js
ffreep
xchg
pop
mov
pop
clc
sub
jg
cs
sub
push
scas
add
xchg
pushf
xor
inc
inc
cmpsb
adc
sahf
stos
cs
xchg
and
jno
mov
inc
xor
xor
jb
mov
or
pop
ret
call
aaa
stos
dec
sbbl
push
les
andb
rolb
xor
fs
lock
add
inc
push
sbb
dec
pusha
rcrb
iret
incl
scas
xor
add
mov
cmc
push
cmpsl
xchg
cwtl
bound
xchg
and
xchg
pop
cmpsb
mov
cmp
lret
push
test
sub
fmuls
mov
ss
popf
orl
sarl
push
arpl
loope
ret
xchg
add
xchg
pop
mov
les
or
mov
add
mov
add
jle
add
push
outsl
pop
mov
pusha
lods
dec
push
sbb
push
rclb
aaa
shr
and
in
sbbl
or
jne
and
add
push
push
imul
adc
dec
in
adc
test
adc
lahf
sub
and
aas
xor
mov
test
cmpsb
mov
in
cwtl
sarl
adcb
dec
adc
gs
arpl
adc
lds
insl
test
dec
dec
pop
aaa
add
or
fsubrs
mov
cmp
add
cmp
add
and
movsb
push
bound
xor
adcb
add
das
sub
nop
lds
cmpsb
inc
cmp
notb
faddl
cmp
ret
dec
aas
loopne
and
cli
scas
into
xor
stos
icebp
filds
inc
aas
out
pop
cmp
add
pop
pushw
nop
push
inc
cmp
mov
mov
out
dec
cwtl
cmpsb
ss
cli
mov
cmpb
sub
faddl
mov
add
scas
sarb
and
ret
push
aaa
sbb
xchg
jge
pop
clc
mov
cmpsb
cmpsl
pop
fildl
es
ss
idivb
daa
stc
or
add
or
mov
cmpsb
ljmp
xchg
in
adc
jle
adc
into
fildl
mov
bound
fisubs
push
dec
insl
into
aaa
pop
lods
test
adc
lcall
movsb
pop
xor
push
negb
xor
jnp
aas
inc
cwtl
test
add
sub
cmp
out
faddp
jbe
aaa
cmp
mov
add
test
cmpsl
aaa
jl
fnstcw
dec
cli
add
adc
xorl
je
arpl
stc
sahf
sbb
ja
xchg
enter
mov
and
ds
imul
test
sbb
flds
xchg
sahf
jmp
add
sti
sbb
push
lcall
enter
xchg
and
stos
mov
out
mov
dec
out
sahf
cld
ds
aaa
dec
fidivrl
adc
incl
sbb
xchg
fidivs
dec
lea
pop
xor
xor
shll
xor
aaa
mov
shrb
cmp
add
or
jb
lock
imul
lock
jge
xorl
cmpsb
addr16
sbb
xor
ja
jbe
add
pop
jno
push
cmp
fs
add
push
or
xchg
dec
out
adc
and
in
roll
loopne
mov
add
outsb
and
jmp
add
sysenter
loope
data16
ds
clc
jp
mov
mov
aaa
mov
movsl
call
adc
ljmp
add
ds
fisubl
mov
mov
ret
ret
ficoml
push
mov
adc
mov
mov
clc
orl
cmp
pop
subb
pop
ret
out
fwait
adc
cli
or
mov
fiaddl
mov
lea
fs
push
sbb
add
insb
popl
das
sbb
and
cmp
or
adcl
outsb
cld
pop
int3
push
dec
adc
shlw
pop
addr16
hlt
mov
push
and
mov
jmp
out
push
push
shlb
add
lret
stc
cli
push
or
cmpsb
pop
cmp
movsb
mov
add
test
dec
mov
or
mov
aas
cmp
outsl
ss
mov
push
adc
aaa
or
daa
xor
ss
xor
sbb
xor
das
inc
xchg
sbb
mov
aam
inc
add
sti
and
ljmp
dec
jns
andb
add
in
inc
push
pop
pop
aaa
add
cmpsb
pusha
ja
in
jmp
int
pop
sub
mov
add
filds
mov
sub
pop
add
movsl
xchg
mov
sbb
add
test
cmpsb
add
dec
fistpll
cmpsb
aaa
xor
lcall
inc
ss
adc
dec
push
xchg
or
mov
add
mov
subl
movb
lcall
mov
imul
mov
daa
lret
lahf
push
add
aaa
xlat
aaa
push
inc
call
lds
popa
lock
mov
or
mov
sbb
je
test
sub
or
cmp
stos
fs
push
cmp
xchg
mov
adc
push
add
or
adc
cmc
stc
mov
inc
dec
cmp
jo
or
cli
movsb
add
add
mov
push
dec
cmp
push
add
lret
jo
sbb
das
das
aaa
mov
mov
inc
push
cwtl
les
sub
push
lods
jo
pop
cwtl
fimuls
fisttps
xorb
lret
popf
lds
movsl
ret
xchg
out
add
repz
push
mov
pop
jecxz
xor
pusha
add
mov
imul
inc
inc
xlat
add
sbb
jbe
leave
sbb
adc
data16
jle
dec
push
push
cmp
sbb
leave
dec
fiadds
arpl
incb
xor
loope
aas
pop
aas
cmpsb
int
cmp
xorl
cld
pop
cmp
add
psraw
add
cmpsb
aaa
inc
aas
imul
fdiv
or
cmpsl
jmp
add
add
adc
adc
and
adc
sbb
shrb
inc
movsb
jb
mov
jmp
push
mov
pop
je
imul
lods
addl
jo
push
mov
dec
fstpl
cmpsb
pop
insb
dec
mov
and
jmp
jle
jns
inc
fmuls
or
mov
or
jae
mov
mov
xor
adc
fisubl
jle
pop
pop
mov
add
imull
cmpsb
jle
mov
add
add
mov
add
inc
loopne
mov
fisubl
dec
mov
cmpsb
adc
loope
cmc
call
aaa
lret
add
jne
sbb
cmp
add
repz
mov
cmpsb
mov
shll
out
mov
jns
cltd
jge
fdivl
int3
shlb
aas
and
cmpsb
les
dec
cmpsb
sti
dec
mov
push
aaa
adc
push
cmp
cltd
mov
fldenv
or
or
or
inc
mov
mov
jno
ljmp
mov
fcoml
sub
fwait
call
jecxz
loopne
add
rep
adc
dec
lods
add
pop
or
mov
mov
adcl
add
dec
add
push
jmp
movsl
popa
aaa
xchg
mov
mov
and
shll
lds
ss
sub
mov
mov
jb
cmp
in
jno
inc
mov
cmp
inc
lds
mov
xor
mov
add
into
push
ret
rcrb
sbb
ljmp
add
mov
orb
hlt
sub
fldenv
cmp
inc
sub
cmp
add
and
out
add
xchg
cwtl
js
out
cmpsb
xor
xchg
jmp
add
mov
aaa
pop
das
mov
gs
pushf
test
inc
aaa
xor
dec
and
mov
scas
jae
rcrl
jno
jecxz
cmpsl
add
jb
add
seto
pop
aad
pusha
add
lcall
int3
or
add
sub
or
add
int3
mov
out
push
add
int
lahf
mov
sub
inc
imul
jnp
jno,pt
mov
add
mov
xchg
cmpsb
movsb
jmp
mov
rcrl
push
xorb
cmc
ss
add
fwait
sarl
andb
stos
psadbw
ret
jg
lock
aam
sahf
out
les
stc
fwait
jle
out
jae
or
stc
lret
mov
aaa
sbb
aam
test
mov
outsl
inc
je
sbb
or
add
imulb
mov
add
jg
pop
mov
ret
add
mov
or
xor
dec
inc
cmp
scas
insb
cmpsb
les
mov
cmpsl
push
mov
push
push
add
mov
push
fwait
jno
add
jle
lds
jb
pop
int
or
cmpsb
outsb
pop
shlb
or
inc
sbb
or
loop
adcl
mov
dec
clc
add
imul
lahf
dec
jle
add
inc
shlb
cmp
mov
pop
add
lahf
pop
loopne
adcl
cmp
xchg
adc
adc
xor
sahf
xlat
or
ja
mov
or
mov
add
repz
in
and
xchg
fsts
sbb
rclb
sar
add
and
ja
out
add
loopne
mov
iret
mov
test
aaa
or
fiaddl
push
lret
test
mov
pop
sbb
add
sub
cmp
mov
adc
fwait
xor
sahf
xchg
inc
lret
jle
mov
movsb
out
xlat
sbbl
and
cmpsb
push
or
sub
sbb
in
in
sub
mov
jo
add
inc
and
add
cmpsb
arpl
pop
iret
cmp
pop
sub
push
and
adcl
add
lds
clc
adc
imul
xchg
jp
dec
pop
or
mov
sbb
outsl
add
sub
jns
ja
icebp
das
fnstenv
sbb
pusha
cmpsb
xchg
sub
mov
xor
out
xorl
sbb
scas
xlat
jae
pop
inc
cmp
stc
out
inc
add
idivl
pop
subl
add
dec
push
mov
mov
gs
mov
jl
mov
or
jo
inc
add
sbbl
cmpsb
or
add
add
xchg
jmp
mov
repz
cltd
call
xchg
in
data16
mov
sub
test
aad
sub
aaa
sahf
adc
push
add
and
cli
inc
mov
test
lahf
data16
ljmp
push
iret
and
add
popa
jl
in
dec
icebp
cmpsb
lret
xor
cmpl
lea
ret
fs
addl
lods
mov
mov
les
lcall
push
popa
inc
scas
add
xchg
pusha
push
and
add
cmpsb
sbb
add
xchg
or
out
cmpsb
jecxz
shll
dec
dec
xchg
fbld
aaa
icebp
xchg
jbe
pop
test
push
and
js
gs
push
aaa
add
aam
pop
adc
in
cmp
add
lret
mov
add
imul
cmpsb
mov
add
xor
push
pop
bound
push
jne
test
add
mulb
cli
xchg
aaa
push
out
add
jns
ficoml
sbb
sbb
mov
and
and
icebp
out
jae
iret
add
ret
cmp
movsb
jbe
dec
mov
jo
aad
cld
mov
adc
iret
add
enter
aaa
mov
pop
add
aaa
push
or
popa
sti
scas
shlb
cmp
sbb
adc
add
push
cmpsb
aaa
lcall
stos
cmpsb
dec
push
aaa
sbb
sbb
divb
add
pop
lahf
in
cmp
ss
push
ret
cmpsb
jge
into
xor
dec
inc
clc
mov
push
jns
sbb
sub
adc
jge
pusha
addr16
inc
call
subb
jge
push
inc
or
add
fidivrs
lods
pop
add
pop
cmpsl
dec
dec
adc
sahf
dec
movl
cwtl
mov
push
sbb
add
sbb
test
cmpsb
adc
sbb
btc
sbb
cmp
lds
test
add
fs
push
cmpsb
jl
sbb
cmp
pop
cmp
data16
dec
adc
cltd
pop
jbe
push
add
in
adc
pop
jnp
addr16
ja
pop
xor
add
aad
icebp
adc
pop
ret
cwtl
xor
or
fidivs
or
and
adc
lahf
add
in
mov
cltd
dec
in
scas
cmpsb
or
inc
aaa
lea
ss
push
cmpsb
mov
mov
sbb
jg
mov
dec
test
sub
mov
pusha
adc
inc
aaa
inc
and
stc
xchg
push
scas
aam
cwtl
inc
pop
pop
inc
mov
add
out
enter
push
mov
arpl
dec
adcb
mov
fbstp
inc
cmp
in
cmp
and
xor
sbb
mov
mov
mov
mov
dec
shl
add
pop
int
cmp
aas
in
test
bswap
push
loop
lea
addr16
push
add
mov
mov
pop
andb
mov
arpl
ljmp
push
fldt
push
add
repz
aaa
insb
loope
ret
add
dec
mov
add
aas
dec
jae
adc
add
aaa
add
lret
andl
clc
cmpsb
aaa
mov
lcall
cmp
arpl
das
or
mov
mov
push
inc
popf
cmp
adcb
in
mov
in
pop
xor
repnz
cmp
hlt
inc
dec
lods
jmp
sbb
adcb
dec
lea
add
and
inc
sbb
insl
jmp
cwtl
xchg
pop
test
movl
cltd
lods
aas
pop
push
push
dec
scas
repnz
xor
dec
test
dec
test
mov
repz
adc
xor
xchg
psubw
fsub
jno
es
mov
sub
xor
lea
inc
mov
lds
ret
pusha
gs
cwtl
add
or
aas
aad
adc
insb
les
outsl
add
cmp
pop
inc
movl
sbb
shlb
aaa
insb
ss
dec
insl
push
mov
add
ja
das
loope
sbb
fisttpll
lahf
cmpsb
cmp
jnp
pushf
je
xorl
aam
mov
rcll
xor
rolb
or
pushf
jno
add
pop
xor
sbb
aas
xchg
movsl
out
xlat
outsb
out
mov
jmp
scas
in
push
out
push
mov
push
ret
add
bound
lock
faddl
mov
leave
cmp
lock
lds
jno
fldlg2
pop
es
jl
mov
je
and
repnz
cmpsb
into
clc
adc
push
mov
cmp
scas
data16
jl
xchg
out
mov
jo
xchg
cmp
testb
shrb
mov
dec
repnz
push
insb
out
inc
xchg
cwtl
cmpsb
cmp
rclb
pop
mov
es
stos
pusha
xchg
mov
out
jl
outsb
movsl
enter
in
addb
mov
data16
fstps
mov
ljmp
push
insl
jmp
mov
ds
xor
push
jg
add
scas
add
xchg
add
sbb
scas
in
xchg
mov
mov
bound
ds
push
scas
xorb
add
out
cmp
add
repz
arpl
je
aaa
add
sub
negb
add
mov
add
mov
clc
add
aas
stc
jne
sbb
data16
jne
lds
rorb
mov
outsb
or
jb
aaa
xlat
lods
pop
sti
push
push
xchg
popa
cmp
and
movsl
or
add
aaa
push
or
sbbl
xor
or
cmpsl
push
pop
loopne
aam
xchg
mov
or
add
es
imul
lahf
add
mov
jp
sub
mov
xchg
add
icebp
fs
aad
enter
cmpsl
mov
sti
imul
arpl
pop
jecxz
fdivs
push
add
jnp
add
ret
and
call
xor
fwait
lock
ficoms
adc
sub
xchg
fistps
insb
mov
cmp
movsl
inc
and
sub
mov
push
add
or
cmpsb
dec
aam
cmpsb
incl
ja
leave
dec
jmp
es
fnstcw
outsb
sub
orl
cmpsb
jns
mov
pop
lock
aaa
mov
add
ret
test
lods
movsb
adc
push
pusha
add
cld
add
push
gs
lahf
rclb
or
lods
sub
or
mov
mov
pop
sub
add
pop
popf
addr16
iret
outsb
data16
add
out
xor
bound
add
mov
jbe
xchg
stos
inc
add
jb
jne
aaa
mov
pop
data16
pop
add
adc
lock
mov
and
sub
aam
pop
andb
fdivs
movsb
pushf
lea
xor
js
jae
xchg
xor
pop
aaa
add
in
mov
mov
das
mov
jns
xor
cld
add
cmp
inc
xor
imul
cmpsb
fmull
sbb
pop
jo
cmpsb
cmp
clc
icebp
xchg
jo
fildll
fisubrl
pop
aaa
je
loopne
inc
push
xchg
inc
pop
aaa
add
adc
in
mov
cmp
inc
xchg
pop
mov
inc
outsb
add
ja
and
test
inc
aaa
stc
js
aaa
xchg
xchg
ja
push
mov
scas
jmp
cwtl
sub
mov
in
je
or
jno
jne
mov
add
and
mov
in
add
mov
cmp
aaa
insl
or
jecxz
push
push
shlb
cwtl
add
aaa
dec
mov
daa
xchg
add
adc
cmpsb
jbe
jb
aam
aas
cmpsb
aaa
pop
mov
cmpsb
femms
loope
movsb
jns
pop
sldt
pop
cmp
and
xchg
mov
or
popa
daa
scas
fwait
pushf
xor
fnsave
adc
add
cmp
lret
bound
jnp
cmp
ret
add
sub
xlat
add
je
in
repnz
push
adc
add
cmpsb
hlt
adc
lock
gs
aam
add
insl
adc
hlt
add
or
cmp
sub
mull
push
jmp
pop
mov
shlb
add
call
push
xchg
stos
sub
setne
stos
lret
adc
cwtl
sbb
in
sub
jmp
jns
cmpsb
or
sti
cmpsb
mov
mov
push
out
add
imul
getsec
xor
mov
cmpsb
lahf
pop
ja
sbb
xchg
lds
shll
and
cmpsb
mov
cmpsb
jno
jno
ret
push
mov
sbb
aad
add
jg
cmpsb
jnp,pn
ja
fwait
mov
lods
sbb
or
add
sub
fwait
or
jo
movsb
aad
push
push
scas
cmc
cmpsl
aaa
inc
dec
or
add
add
ljmp
push
and
sub
cmpsl
fistps
inc
add
movsl
pop
cld
sbb
fstpt
mov
mov
jbe
pusha
cmp
mov
scas
or
pop
mov
hlt
adc
inc
jo
outsb
add
scas
loop
xchg
jne
add
xor
ds
mov
aas
out
movsb
popa
mov
cmpsb
mov
ljmp
mov
mov
inc
shrb
lds
or
or
xchg
add
mov
imul
cmp
or
insl
outsb
sbbb
push
outsb
cmpsb
fwait
add
push
mov
das
mov
cmpsb
dec
sub
movsl
mov
lods
and
xor
pop
mov
scas
mov
cltd
add
aaa
add
rcll
inc
sbb
lret
mov
cltd
rcr
add
arpl
out
aaa
adc
xor
sub
sub
inc
sub
sar
loope
ret
cmp
data16
sub
sahf
lock
and
ret
js
push
mov
sub
and
add
fdivs
dec
mov
fwait
mov
cmpsb
adc
fsubs
or
ljmp
ror
lret
insb
sub
pop
ja
sbb
or
add
jg
add
outsl
sbb
jno
lods
mov
cmp
aaa
add
jle
add
lcall
add
pop
insl
add
mov
xor
add
sbb
mov
pop
lcall
aaa
xchg
inc
outsl
dec
add
loop
mov
mov
dec
or
or
and
mov
loope
push
daa
adc
imul
jb
jnp
mov
shrb
or
xor
leave
pop
les
add
inc
fisttpll
inc
push
in
push
jp
xchg
ret
add
js
cld
and
xlat
or
cmp
or
cmp
cltd
mov
add
sbb
mov
pushf
pop
data16
push
fistpll
adc
jbe
jmp
and
adc
hlt
outsb
cmpsl
aaa
sub
xor
insb
add
loope
test
add
sub
cmpsb
cmp
iret
daa
mov
mov
test
inc
in
je
stc
sahf
add
pusha
xor
fisubl
jo
aaa
or
aaa
dec
andb
ud2
pushl
adc
in
cltd
xchg
xor
sbb
aam
adcl
movsl
cmpsb
mov
add
add
or
ja
mov
popf
add
push
and
or
aaa
stos
inc
xchg
xchg
mov
inc
loope
aaa
xchg
fcoml
in
ljmp
subl
and
loopne
fwait
aas
jp
xor
decl
lret
and
sbb
scas
jge,pt
mov
mov
aaa
jnp
xor
dec
lcall
xchg
fisubs
std
dec
sbb
and
add
daa
mov
into
and
xor
das
add
cmpsb
pop
clc
js
aaa
inc
or
dec
scas
push
aaa
add
cmp
fbstp
dec
xor
push
mov
rclb
aaa
out
adc
fwait
add
pop
and
sub
add
lds
adc
rorb
cmpsb
xor
cmpsl
std
scas
aaa
addb
inc
add
fstpl
add
xchg
fwait
pushf
mov
es
aaa
pop
test
fwait
loopne
add
mov
movsb
mov
cli
repz
add
adc
adc
cmpsb
in
add
pusha
jae
mov
sub
psubsw
imul
sbb
rolb
and
sbb
neg
movl
push
ljmp
aam
jecxz
les
pop
inc
jae
pop
xchg
add
inc
cmp
roll
lods
stos
mov
push
lds
fists
mov
jae
mov
xor
and
jmp
andb
xor
sbb
xacquire
cmp
or
inc
dec
jnp
inc
loop
rcll
adc
xchg
xchg
out
jno
cmpsl
ljmp
xchg
pushf
pop
jns
inc
arpl
pop
adc
cltd
push
add
pop
imul
cmp
idivb
aaa
push
xor
inc
add
and
lea
add
ret
mov
add
cmp
ljmp
mov
in
mov
mov
xchg
adc
setl
bound
push
xor
add
fldt
add
sbb
jg,pn
decl
loopne
add
lahf
shr
imul
out
fildl
enter
mov
sbb
lods
xchg
cli
fiadds
fildl
test
dec
or
adc
xor
pop
movsl
lock
mov
mov
push
sbb
or
ss
mov
pop
xor
movsl
adc
sub
cmp
sbb
mov
add
mov
mov
dec
nop
add
int3
dec
mov
xchg
shlb
or
lds
fstl
mov
xchg
add
or
fidivs
add
shll
jmp
out
jnp
cmpsl
inc
pop
and
fidivl
adc
xor
adc
sub
lock
xor
sti
cmpsb
aaa
sbb
jmp
jae
xor
sbb
out
int
jp
in
pop
popa
adc
add
pop
xor
cmp
mov
cmpsl
lret
sub
popf
pusha
add
stc
and
add
pop
inc
cmpsb
out
sub
addl
xchg
dec
loopne
cmpsb
clc
xor
mov
int
dec
aaa
or
and
je
hlt
inc
add
sub
rclb
ds
add
icebp
cmp
pop
dec
icebp
jb
ds
sbb
push
incb
mov
aaa
add
jno
mulb
mov
xor
daa
mov
xchg
sub
xchg
add
out
cmp
cmpsb
mov
jg
insb
ret
outsl
data16
adc
orl
jle
js
pop
or
inc
cmp
int3
xorb
cwtl
cmpsl
andl
xchg
and
dec
lock
cmp
push
inc
lods
cld
cmp
insl
inc
xor
jns
adc
cmp
add
movsl
cwtl
dec
mov
xchg
mov
notl
dec
and
lock
icebp
sub
push
mov
fcoms
aaa
cmp
test
dec
add
movsb
aaa
rol
push
aaa
fists
xchg
and
cmp
xorb
cwtl
inc
cli
sub
negl
mov
add
daa
push
xor
lahf
testl
sahf
and
xchg
out
hlt
mov
dec
pusha
mov
xchg
in
push
adc
sub
add
xchg
push
int
imulb
push
dec
aaa
cltd
ret
pop
mulb
mov
jp
add
jl
test
mov
mov
jo
mov
insb
pop
insb
lods
aam
arpl
popf
fwait
cmp
lea
sub
add
mov
pop
fs
iret
stos
mulb
mov
stos
in
add
dec
dec
add
es
adcb
test
fcoml
mov
shrl
pop
jg
aaa
icebp
sub
xchg
sub
pop
aaa
add
loopne
fdivrl
xchg
out
addb
sbb
loopne
lds
cmpsb
jae
jmp
mov
add
jecxz
sbb
pop
cmpl
cmpsb
mov
ficomps
ret
add
xlat
add
push
sarl
mov
ret
sbbb
add
cmp
add
mov
ss
xchg
xor
repz
aaa
inc
xor
inc
add
leave
loopne
add
sbb
xchg
cmp
addl
mov
sbb
push
add
jp
insl
add
insb
jp
mov
add
scas
mov
add
scas
ret
mov
clc
jmp
lahf
xor
cld
ss
aaa
dec
jne
and
push
addr16
jns
outsb
sti
sub
mov
aam
ret
add
jmp
roll
rolb
pusha
add
fiadds
aaa
rclb
sbb
cmpsb
test
mov
xorb
test
jp
add
lods
in
xor
mov
sbb
push
inc
mov
add
sbb
js
test
gs
out
addb
push
insb
pop
call
int
and
dec
adc
neg
roll
ret
movsl
adc
mov
js
add
mov
mov
lea
add
aad
cmpsb
xor
pop
add
xor
or
add
mov
andb
dec
outsl
stos
jbe
dec
sarl
adc
push
fs
aas
add
xor
xlat
sbb
cltd
lcall
add
sub
push
cmp
cli
pop
adc
hlt
xor
addb
mov
and
mov
add
xchg
adc
pop
arpl
popf
cltd
pop
xchg
movsb
rorl
or
sub
and
and
sbb
add
aad
xchg
int
jg
jnp
or
sti
add
add
stc
rcl
inc
outsb
xor
andb
out
pushf
cmpsb
loopne
stos
inc
out
jmp
pop
imul
cmp
out
xor
fldl
jmp
mov
fcomps
call
dec
cmpsb
lahf
pop
adc
jnp
js
xchg
pop
inc
es
jbe
or
xchg
aam
sbb
xlat
or
sahf
mov
push
aaa
add
adc
pop
test
mov
add
sub
adc
jns
inc
add
cs
jno
cmp
sub
in
pop
loope
cmp
add
fstpl
jo
aaa
add
push
jb
add
jo
lods
cmc
mov
xlat
adc
or
aaa
pop
xchg
std
xchg
mov
xchg
add
loope
adc
mov
daa
mov
cli
pusha
cmp
xchg
sub
pop
or
sbbl
pop
push
loopne
es
xor
push
mov
add
ficoml
sar
mov
push
sahf
ljmp
push
add
mov
repz
rolb
sbb
int
push
dec
fsubrl
mov
cmp
scas
repz
mov
inc
shll
call
mov
adc
add
aaa
adc
jmp
xchg
sbb
cmpsb
xchg
add
or
add
daa
adc
addr16
lahf
pop
lea
mov
out
loop
aaa
add
imulb
arpl
bound
add
int
lods
push
sub
je
aaa
out
hlt
scas
xchg
xchg
lods
dec
jo
inc
mov
push
add
es
or
imul
andb
shl
adc
push
aaa
push
pusha
sub
aaa
aaa
add
jno
mov
push
add
movsb
ss
jbe
sub
add
pop
mov
scas
mov
cmpl
fs
rorl
or
aaa
add
xor
dec
lret
imul
cmpsb
mov
fcmove
arpl
addl
cmpsb
mov
adc
rolb
shlb
stos
xlat
inc
xchg
push
leave
push
mov
xor
andl
loop
in
or
or
or
cmpsb
and
es
lock
sahf
pushf
into
jae
rcr
adc
add
push
push
mov
dec
sahf
aaa
jae
mov
mov
or
clc
mov
push
or
push
or
popa
add
push
popf
add
cmpsl
in
push
icebp
iret
jbe
cmpsb
dec
mulb
test
add
add
int
jg
movsb
adc
lret
stos
jle
push
call
lret
mov
xor
mov
cmpsb
aaa
popf
pop
xchg
add
movsl
and
nop
sub
xor
or
aaa
cld
test
fiaddl
add
lock
push
add
mov
add
aaa
dec
or
jne
nop
cmp
pop
xchg
pop
jmp
arpl
pop
out
inc
pop
imul
cmp
add
dec
mov
clc
adc
sub
mov
xor
add
jp
xlat
xchg
push
cmpsb
adc
stos
aaa
ss
add
adc
loopne
xor
sbb
push
xchg
inc
aas
lock
inc
popa
bound
mov
cmpsb
and
sarl
aaa
test
xchg
insb
push
mov
stos
add
add
mov
cmpsb
ljmpw
add
divl
bound
lods
imul
popa
dec
addl
mov
pop
test
daa
add
test
sbb
fstl
popf
lods
stos
xor
inc
or
sbb
repz
push
xor
xchg
xchg
data16
xchg
out
fwait
inc
xor
sbb
out
bound
mov
jbe
fistl
mov
std
sbb
push
aaa
mov
cmpsb
jmp
mov
out
hlt
push
xor
std
andb
js
or
xor
fcmovbe
fadds
adc
cli
orl
xchg
aaa
inc
cmp
es
mov
shll
jnp
lahf
es
cmpsb
int
adc
sahf
xor
cmp
and
test
mov
jae
jp
and
inc
sbb
cmpsb
fmull
sub
fnstsw
out
lods
jge
scas
shl
sti
xchg
add
ficomps
outsl
xchg
out
xchg
in
push
mov
pop
aaa
lahf
pop
lahf
dec
push
cmp
jno
mov
arpl
daa
movsl
pop
pop
add
nop
inc
fisubs
hlt
mov
aaa
int3
mov
xor
sub
test
sbb
xchg
add
jmp
mov
daa
lods
ret
fs
daa
aaa
cmp
aaa
daa
sub
clc
sbb
add
jns
adc
push
cmp
jo
cmpsb
jg
xorl
cmpsb
ds
dec
jmp
add
lret
dec
dec
push
add
dec
xor
cmpsb
adc
testb
adc
jge
or
sti
popf
mov
jecxz
add
jne
xchg
adc
loopne
sbb
ja
adc
add
mov
mov
and
cmpsb
push
or
xor
mov
ret
repz
nop
add
loopne
add
pop
insl
loop
adc
sub
nop
loopne
loop
jb
hlt
add
out
mov
leave
dec
jl
ja
sahf
ljmp
or
cmpsb
stos
es
jge
or
repnz
inc
adc
aaa
cmpsb
pushf
orl
shlb
lahf
add
dec
scas
add
mov
popf
and
and
push
jp
icebp
cmpsb
jmp
dec
test
jle
jne
aaa
push
xor
add
push
mov
outsl
add
or
add
jbe
aam
les
adc
or
cmpsb
fst
cmpsb
and
enter
or
mov
out
dec
fsubrl
aam
adc
test
adc
cmpsl
aam
add
mov
adc
cmpsb
rorb
adc
jbe
cmp
jnp
cmpsb
sub
ret
pop
jno
in
xor
mov
shrl
push
test
in
jge
aaa
push
aaa
call
bound
jb
cmpsb
shr
loope
testl
and
iret
fistps
aaa
add
es
imul
adc
loop
movsb
iret
mov
std
mov
dec
add
stos
das
xchg
dec
mov
sahf
aaa
pop
mov
mov
out
rorb
aaa
or
ljmp
iret
pop
stos
ret
out
repz
add
out
push
cmp
xor
sub
pop
scas
ljmp
es
repz
in
pop
xor
in
push
mov
insl
jg
cmpsb
sti
movswl
push
mov
stc
testb
sbb
dec
arpl
cmpsb
mov
mov
add
pop
push
rol
lea
sub
jne
dec
cmp
sub
and
xchg
cmpsb
pop
insl
push
icebp
bound
pop
xorl
mov
lods
addl
leave
ss
cmp
jl
pop
add
xor
dec
pop
out
pop
scas
pop
add
add
inc
dec
movsb
mov
mov
aaa
enter
jae
cmpsb
out
mov
into
and
jbe
pusha
roll
fsubs
dec
addb
inc
dec
xchg
xor
add
pop
adc
add
sti
mov
outsl
lods
mov
jmp
aaa
sub
jae
add
pusha
cmpsb
lret
daa
pop
int
aaa
sbb
lods
fucomp
add
lds
in
andb
jnp
add
adc
xchg
cmp
add
out
or
imulb
jne
pop
add
es
sub
push
cmp
push
pop
jns
das
jl
movsl
lret
sbb
mov
add
add
pushf
sub
ja
mov
mov
jns
dec
aas
movsl
or
push
dec
addb
xchg
movsl
movsb
in
xchg
roll
wrmsr
add
aaa
jne
shl
push
movsb
mov
movsb
sbb
pop
incl
enter
es
js
jae
adc
outsl
movsl
xchg
imul
ret
push
add
test
pop
xchg
mov
cmpsl
scas
stc
mov
andb
mov
inc
and
fdivrs
inc
fidivs
pop
cmp
xchg
add
es
lret
mov
add
aaa
add
push
ficoml
jge
int3
out
popf
aaa
adc
mov
movsb
adc
outsl
adc
mov
jnp
in
out
sbb
add
mov
daa
push
adc
pop
adc
daa
mov
mov
sbb
dec
sub
mov
xchg
jno
cmpsb
dec
pop
push
clc
push
sub
mov
add
pop
xor
jb
fldcw
add
adc
pop
fisubl
outsb
add
mov
je
mov
mov
cmpsl
std
roll
lret
pop
xor
cmc
mov
fiaddl
dec
xor
mov
stos
add
ds
xchg
mov
mov
dec
andb
add
cmp
movsb
lahf
pop
in
xor
mov
lock
add
icebp
xor
pop
dec
add
jl
and
mov
add
dec
add
shll
fidivl
add
popa
add
or
cmpsl
sub
add
fimull
cmpsl
stc
or
cmpsb
ret
inc
push
inc
ja
mov
or
xor
js
es
inc
mov
inc
sbb
ja
mov
inc
in
jmp
out
sbb
pop
dec
stc
dec
aaa
les
inc
lds
mov
sti
aaa
cmpsb
push
mov
sti
jno
movsl
xchg
or
xor
lret
mov
xchg
cmpsb
or
add
popf
add
movsl
scas
mov
mov
mov
out
adc
sub
cwtl
and
int3
mov
fs
push
pop
dec
popa
leave
push
outsb
and
aaa
lock
pop
jp
int3
xor
pop
aad
repz
outsl
out
jbe
dec
std
bound
stc
push
ja
sbb
cmp
cmp
pop
es
das
lea
in
mov
xor
and
sub
ss
cmp
outsl
or
mov
cmp
pop
mov
push
mov
sahf
cmp
sub
fdivrs
mov
add
mov
aaa
adc
iret
aad
mov
stc
push
rol
dec
dec
jecxz
fs
pop
mov
call
les
iret
jge
xor
cmpsl
dec
in
shll
jle
lret
fdivrl
jecxz
add
mov
in
test
adc
lea
stos
popf
hlt
addb
mov
or
mov
mov
and
mov
test
mov
mov
add
nop
xchg
adc
scas
add
in
inc
jno
cmp
insl
cld
pop
xchg
dec
nop
add
inc
sbb
xor
jp
addl
sbb
dec
ds
outsl
jnp
loopne
popa
aaa
fisttps
jp
inc
jno
sbbb
cmpsb
jae
push
sub
stc
inc
ud2
pop
adcl
or
cmp
add
or
add
stos
cmp
movsb
pusha
push
repz
daa
pop
jbe
es
pop
clts
sbb
hlt
testb
xchg
and
pop
shrl
cli
pop
fst
incb
aad
sahf
jle
add
add
arpl
into
loope
push
jecxz
dec
fcmovbe
inc
cmpsb
shll
add
aaa
mov
pop
leave
rcl
js
cmp
jge
mov
xchg
es
mov
adc
mov
add
mov
and
orb
fcmovbe
out
add
xor
and
lea
push
les
push
mov
push
imul
push
add
outsl
dec
mov
or
movsl
arpl
sti
push
lock
jmp
mov
cmpsl
or
pop
cmpsl
push
js
inc
dec
add
jne
cmp
lods
adc
adc
test
ja
popa
divb
add
mov
and
xchg
add
movsb
sbb
ret
cmpsb
sub
ds
jb
add
loop
movsl
add
int3
popa
xor
in
mov
push
xchg
dec
mul
out
push
out
lock
xlat
add
push
scas
cltd
lahf
cmp
xor
les
rcl
jne
loopne
or
sarl
ja
cmc
mov
pop
inc
jmp
int
xchg
mov
xchg
and
sti
add
mov
mov
mov
mov
xchg
add
adc
sahf
call
and
stc
cld
pop
pop
sbb
xchg
pop
test
mov
push
jnp
dec
dec
add
push
inc
icebp
lock
movsb
fidivrs
imul
cmpsl
dec
and
out
outsl
inc
dec
in
dec
insb
pop
aaa
dec
xor
add
clc
cmp
jns
inc
leave
add
or
inc
pop
cld
pop
cmpsb
jl
sub
sbb
xor
mov
add
xchg
sbb
jo
or
push
add
add
sahf
and
or
dec
jne
mov
sbb
scas
inc
push
jg
aaa
repnz
shl
mov
pop
fistl
lret
je
ret
inc
test
mov
repnz
scas
or
xchg
xchg
testb
out
lds
in
outsb
repz
outsl
into
xlat
fbstp
mov
adc
js
rol
in
icebp
and
xlat
add
mov
loop
subb
sahf
test
mov
out
push
mov
and
adc
aaa
mov
xorb
pop
push
xchg
idivl
ds
push
xchg
pop
je
add
dec
outsl
repnz
push
arpl
inc
adc
mov
jo
cmpsb
jne
jl
push
push
repz
add
adc
lret
mov
jle
add
imul
pushf
pop
cmp
mov
mov
jo
fs
add
xchg
or
cmp
sbb
cmp
rorl
stos
cmp
addb
jno
fldcw
add
inc
xor
movsb
add
adc
cmp
dec
xor
shrb
mov
out
dec
leave
cmc
xchg
push
and
jmp
fadds
aad
mul
fadd
sbb
aas
iret
insb
aaa
enter
rcl
data16
hlt
adc
cli
fldenv
cmc
ret
xor
or
mov
cmpsb
sahf
rcrl
adc
inc
in
or
push
adc
xor
stos
mov
mov
sbbl
sbb
pop
or
inc
jbe
sub
fimuls
call
aaa
add
push
out
jmp
pusha
and
inc
loop
push
cli
roll
std
push
jnp
pushf
pop
push
inc
xchg
pop
adc
adc
pop
shll
mov
xchg
adc
lcall
add
cmpsl
xlat
pop
or
xor
and
add
xchg
xor
mov
inc
sbb
jo
movsb
andb
int
pop
repz
fwait
push
std
arpl
data16
cli
movsb
fsubr
pushf
cmp
sahf
jmp
rcl
dec
cmc
movb
popf
stos
mov
fcmove
popa
jb
sbb
cmpsb
idiv
fdivs
inc
sbb
mov
mov
fsubrs
jle
mov
addl
mov
fisubs
aaa
mov
test
ds
mov
adc
xchg
mov
or
mov
in
imul
insb
into
arpl
imul
shrl
mov
xor
aad
dec
andb
and
add
std
pop
xor
inc
pop
add
jns
pop
js
add
or
sub
stos
cmp
dec
adc
xor
add
mov
or
lods
inc
or
mov
pop
imul
adc
rcl
aaa
cmp
dec
insb
jle
shll
mov
fiaddl
add
jecxz
jns
out
movsl
shl
push
out
cli
dec
jb
decl
data16
rorl
or
jbe
out
jne
clc
push
aaa
push
mov
add
test
add
int
stos
cmp
orb
mov
mov
fwait
cmp
xor
and
mov
nop
inc
cltd
cli
sti
sbb
add
rolb
rcl
pop
lods
cmp
inc
in
push
add
or
cmp
mov
sbb
push
clc
dec
aam
call
jg
xchg
add
xor
stc
inc
lock
in
adc
cmpsb
aaa
aaa
mov
inc
pop
mov
or
cmp
outsl
pop
dec
std
and
aaa
test
and
test
aas
push
sbb
mov
or
adc
lods
cmp
or
icebp
ror
sbb
fwait
cmp
fnstenv
std
pop
cmpsb
popf
stos
add
nop
xchg
xor
or
add
loope
add
add
nop
inc
or
insb
xchg
test
sub
cwtl
cmc
push
add
dec
push
sub
push
cmp
xchg
sti
dec
cmpsb
jo
scas
aas
mov
mul
aaa
xchg
scas
xchg
fidivrl
sbb
add
sub
lcall
mov
imul
dec
rclb
ds
and
movsb
imul
popa
lods
mov
add
lret
xorl
imul
in
sbb
add
pop
sub
mov
inc
repnz
rol
jmp
jo
cmpsb
add
cwtl
dec
daa
fndisi(8087
js
lcall
iret
inc
dec
cmpsb
adc
push
push
iret
fwait
cmp
test
cmp
jle
add
lods
jb
add
test
or
add
and
cmp
jbe
in
outsl
mov
out
push
flds
iret
into
xchg
arpl
cmp
add
add
pop
push
and
mov
push
sub
loopne
xor
jle
add
lret
fnstcw
or
orl
divl
pop
inc
jbe
ljmp
jg
or
je
mov
sub
sbb
inc
push
pop
test
outsl
fidivl
addl
xor
mov
adc
pop
cmp
sti
out
cmpsb
mov
test
adc
or
lock
mov
pushw
out
push
daa
das
inc
add
mov
mov
into
lcall
xor
aas
data16
push
popf
enter
cmpsb
jmp
and
sahf
rcll
cltd
cmp
outsl
add
cmp
mov
dec
int3
cmpsb
in
inc
in
sub
pop
mov
jmp
pop
cltd
sbb
xchg
rclb
je
mov
fsubs
or
cmp
lods
es
insl
mov
jo
mov
filds
sub
int3
jno
or
js
cmpsb
jg
mov
sub
jne
adc
cmpsb
int3
add
push
mov
call
sub
fcmovbe
add
sbb
mov
cld
xlat
xor
sbb
stos
push
mov
or
shrb
ret
sub
push
jb
sub
das
adc
in
gs
aaa
xor
icebp
in
lea
xchg
mov
sbb
loopne
mov
sbb
sub
stos
or
mov
roll
sbb
pop
aas
pop
or
ds
and
testb
insb
out
aaa
rclb
dec
xor
insl
xor
jae
sarb
scas
add
stos
adc
add
hlt
aam
jae
leave
cmpsb
leave
arpl
int3
lea
fst
jns
cmp
test
and
jmp
sbb
in
lcall
xor
lds
divl
es
push
sub
outsl
dec
int3
fwait
ret
cld
rol
push
xchg
add
pusha
cmp
test
iret
and
pop
cmpsb
mov
lods
lahf
idiv
into
mov
sbb
push
jmp
movsl
shrb
sbb
enter
les
lret
js
push
mov
addr16
mov
mov
push
hlt
lahf
jg
mov
out
pop
sbb
fmul
mov
shll
ret
dec
cltd
add
xor
test
repz
dec
pop
dec
mov
add
jge
insb
add
jb
dec
mov
mov
stos
aaa
outsl
mov
movsl
pop
mov
jo
idivl
getsec
aas
mov
loop
rol
dec
es
push
push
add
adc
aam
aaa
in
mov
sub
or
xchg
add
sbb
daa
loopne
and
pop
cmpsl
ds
sub
push
mov
test
js
movsb
mov
inc
cmpsl
aaa
and
inc
mov
sbb
cltd
lods
add
dec
pop
bound
bswap
pusha
mov
cmpsl
pop
add
xchg
mov
ds
push
cmpsl
orb
xor
add
mov
call
add
sbb
sub
movsl
and
cmpsb
pop
push
adc
cmp
mov
lret
nop
pop
jp
adc
add
xor
pop
push
mov
loop
mov
nop
xor
ss
aam
cmp
fisubrl
push
inc
add
scas
icebp
jae
popa
mov
testl
xor
test
dec
mov
push
cs
sub
add
aaa
loop
inc
and
dec
test
aas
rcl
pop
loop
add
loop
adc
and
pop
iret
lock
cmpsb
or
lcall
cmpsl
adc
cmpsl
lods
cmp
sub
js
ja
jecxz
data16
mov
shl
cmp
testl
and
and
mov
in
push
and
pop
aam
clc
jg
add
ds
xor
jge
test
jge
fnstenv
incl
out
push
mov
int
mov
subb
add
ficoml
xor
add
and
and
xchg
pop
cmp
aaa
out
in
push
pop
inc
lcall
jle
add
rclb
stos
add
mov
sub
out
xchg
push
mov
mov
jnp
dec
cmp
sti
mov
lahf
mov
imul
pop
sub
dec
jns
inc
mov
jne
mov
cmpsb
jno
mov
adc
sub
mov
lahf
es
arpl
add
jnp
pop
cmpsb
mov
lahf
sub
inc
ja
es
sbb
in
adc
xchg
fstpl
movsl
fiadds
hlt
fiaddl
cli
jno
aad
cmp
cmpsb
sti
outsl
push
xorl
lea
call
jmp
dec
repnz
xchg
add
push
jbe
add
or
test
or
push
xor
pushf
mov
xchg
jmp
cmpsb
shll
sbb
movsl
test
nop
scas
call
cmp
test
xchg
push
arpl
mov
mov
add
sub
mov
fisubs
loop
mov
jg
xchg
lret
cmpsb
jnp,pt
xor
out
dec
sbb
loopne
in
iret
fsubl
in
pop
add
jl
addr16
mov
ljmp
mov
jge
add
icebp
popa
mov
push
cmp
out
insl
test
pop
icebp
or
or
mov
adc
add
jns
dec
dec
sub
and
loope
mov
ret
cmpsb
pop
xor
lahf
dec
sti
xchg
sti
aaa
shrb
push
das
push
mov
addl
inc
js
push
add
push
mov
sbbl
sbb
imul
aaa
push
lret
xor
or
adc
fs
pop
cwtl
icebp
pop
ss
dec
xor
sbb
loope
dec
and
andl
ljmp
faddl
pop
sbb
mov
imul
das
xchg
and
push
iret
mov
out
lahf
sub
xchg
stc
push
stc
jne
jmp
test
addr16
sbb
xlat
sbb
sti
add
pushf
ret
mov
push
dec
add
les
pop
cmpsl
fdivr
popf
sub
fadds
add
mov
aaa
popf
fildll
add
in
cmp
loop
popf
mov
jg
dec
sti
pop
stc
jl
cmp
xchg
fistpl
ret
nop
pop
push
sbb
xor
test
cmpb
hlt
xor
add
je
lret
add
xchg
adc
lahf
movsb
out
pop
lret
subb
and
mov
aas
es
insb
jne
cli
dec
das
cmpsb
fadds
and
ds
push
cmpsb
insb
mov
sub
push
ds
cmp
fcoms
shll
cmpsb
roll
lcall
adc
jp
dec
add
add
rcr
and
aaa
clc
jmp
jbe
mov
sbb
subb
xchg
lahf
sub
cli
cmp
and
lcall
mov
cmp
addb
xor
lods
mov
nop
dec
rcl
movsb
add
stos
mov
or
shlb
mov
aaa
push
or
inc
cld
sbb
add
daa
mov
pop
dec
mov
mov
int
mov
jae
pop
xor
mov
jbe
ljmp
mov
stos
loope
cwtl
adc
add
les
cmpsb
xor
fucomip
add
mov
aad
jge
jle
pusha
mov
jns
adc
mov
push
stos
sub
popa
add
and
sub
lock
mov
or
scas
cmpsb
mov
cmpsl
pusha
sbbl
loop
add
inc
sbb
cmp
lds
cmpsb
clc
notb
xchg
les
dec
inc
ss
fbstp
inc
inc
lcall
inc
lret
and
out
ror
inc
test
lcall
push
push
ljmp
int3
ds
mov
rcrb
inc
movsb
and
xor
test
hlt
cmp
sbb
pop
sbb
add
mov
mov
xchg
es
inc
flds
ljmp
insb
dec
push
mov
scas
aaa
sbb
jg
fiadds
pop
inc
sti
sahf
push
and
add
add
stos
fwait
or
subb
pop
jl
dec
ret
add
mov
mov
je
insb
pop
insb
or
add
inc
stc
test
add
cmpsb
mov
pushf
dec
rolb
dec
cmp
and
daa
clc
ds
sahf
divb
add
inc
cli
mov
faddl
jns
outsl
test
das
sbb
cmpsl
cmpsl
sbb
dec
lret
dec
jne
add
test
mov
pop
inc
push
push
das
push
js
jno
pop
ds
or
movsl
je
jg
loop
loopne
lds
add
insb
xor
sarb
add
ret
xchg
mov
sti
push
iret
cli
inc
test
and
pop
rcll
loope
cmpsb
mov
cmpsb
ret
pushf
scas
frstor
push
mov
jb
scas
jbe
cmpsb
inc
mov
movb
and
dec
in
filds
or
mov
es
data16
sub
ljmp
mov
leave
in
js
sti
cmpsb
je
push
mov
aaa
pop
scas
push
mov
sbb
es
cmp
pop
or
xchg
mov
inc
sbb
add
cmp
jns
add
aam
sarl
pushf
cmpsb
je
orl
insb
mov
hlt
add
rcrb
adc
inc
shrb
mov
jl
mov
jp
loopne
scas
aaa
scas
aas
sbb
sbb
mov
cmc
inc
pop
rcrb
outsl
pop
into
mov
adc
outsb
sub
ja
out
fldenv
aaa
aad
sahf
rcrl
outsl
pusha
jbe
cmp
xor
add
cmpsl
jnp
movsl
xor
outsb
mov
push
shl
roll
xor
repz
daa
addb
adc
pop
stos
and
mov
ljmp
lods
lods
mov
add
clc
or
push
mov
fwait
mov
fbld
in
cmpsl
sub
cmp
inc
mov
jle
inc
adc
out
pushf
add
imul
xlat
mov
jns
dec
pop
cmp
loop
cmp
mov
addl
popa
fisttpl
mov
or
add
mov
jl
mov
and
push
xor
adc
test
lret
push
push
insb
xor
fcmovb
cli
cli
fldcw
mov
add
or
shrb
and
jns
add
xlat
push
les
cmovo
cmpsl
cwtl
pop
subb
les
cmp
xor
int
out
daa
push
xchg
push
aad
test
outsb
movsb
cli
shr
ljmp
fldl
xchg
dec
jle
fbld
jne
cmpsb
and
xchg
jl
dec
mov
in
cmpsb
push
or
ret
je
pop
and
mov
out
daa
mov
addr16
in
inc
fldenv
sub
xor
sbb
addl
into
adc
mov
adc
movsb
push
push
lds
aad
add
aam
shll
xchg
mov
repz
add
cli
les
mov
xchg
pop
mov
inc
cmpsb
push
or
xchg
add
push
bound
jno
pushl
inc
lock
aas
add
inc
out
enter
test
clc
mov
andb
idivl
movb
test
cmp
out
clc
scas
aaa
xlat
nop
shl
push
insl
xchg
push
adc
daa
or
dec
lcall
xchg
push
mov
pop
and
imul
ja
adc
clc
ja
in
gs
add
rclb
add
sbb
pop
std
mov
cmpsb
add
xchg
fisubs
fldt
jo
mov
inc
adc
ds
cmp
mov
push
shl
pop
dec
mov
lcall
outsb
mov
cmp
sub
ss
mov
xchg
push
add
popf
or
ja
lahf
jns
and
stos
pop
push
jmp
cmpsb
mov
xchg
push
fwait
call
shl
push
or
add
lret
in
aaa
jns
lods
push
mov
xchg
daa
pop
mov
loopne
andb
push
xor
inc
push
loope
js
push
mov
and
inc
and
enter
pop
adc
sbb
aas
push
pop
xor
mov
aam
cmpsb
sbb
mov
aaa
mov
inc
mov
stc
or
xor
xor
out
inc
inc
push
mov
xchg
pop
push
out
add
sbb
in
cltd
mov
movsl
pop
xchg
jns
test
fisttpl
add
and
cmpsl
cmpsb
and
test
aaa
movsb
leave
mov
xchg
mov
adc
js
xor
pushf
icebp
push
std
mov
push
mov
pop
shlb
sbb
lds
gs
rclb
sub
ja
or
pop
mov
or
mov
mov
ss
shll
pop
adc
or
call
pushf
xlat
xchg
inc
or
ret
push
outsl
add
push
mov
jb
adc
push
inc
fistpl
data16
xlat
fmuls
add
mov
mov
rcl
mov
push
test
test
inc
xor
pop
inc
mov
popf
mov
jns
xorb
push
xor
mov
adc
dec
adc
cmpsb
rcl
cwtl
xchg
gs
xor
dec
js
xchg
cli
push
mov
jne
nop
js
sahf
out
inc
loopne
mov
cmp
adc
sti
nop
mov
sbb
dec
sbb
jl
jmp
cmp
addr16
pminub
frstor
lods
lcall
sub
mov
pop
fs
lahf
arpl
and
push
add
or
std
mov
fcmovne
add
jp
push
add
inc
dec
dec
movsl
adc
or
mov
lock
lock
mov
fisttpll
dec
repnz
lods
ss
outsl
out
cmpsb
adc
loopne
imul
cmpsb
rclb
loope
aaa
outsl
daa
test
mov
fs
fwait
arpl
rorl
add
mov
fpatan
push
insl
inc
std
push
cmpsb
imul
aas
aad
repz
cmpsb
pop
cmc
jns
in
das
xorl
xor
ficoml
pop
lret
mov
mov
pop
aaa
or
inc
mov
dec
sahf
jbe
cmpsb
data16
or
pop
push
lretw
sbb
add
shll
mov
outsb
sbb
inc
or
bts
cmpsb
xor
fisttps
je
pop
and
stos
push
pop
mov
sub
and
sbb
jp
movl
sbb
push
or
pop
loopne
out
add
loop
fs
outsl
push
imul
lea
cmc
pushl
or
fnstcw
out
and
mov
mov
aaa
movsl
in
leave
pop
pop
add
repnz
mov
ret
cli
fstpl
cmp
dec
inc
jae
adc
sbb
cmp
pop
add
ds
jg
gs
loop
dec
mov
fdiv
imul
test
rcrb
jmp
push
add
pusha
roll
adc
push
test
or
or
nop
xor
cmp
stc
push
and
mov
add
sarb
sub
cmpsb
out
jb
xor
mov
sbb
test
cli
push
loope
shll
mov
dec
mov
aaa
lret
rcrl
lds
mov
pop
adc
cltd
push
repnz
and
or
icebp
xchg
xchg
test
pop
ds
aaa
adc
xor
cmp
and
ljmp
cs
jecxz
enter
push
dec
fdivp
outsl
pop
test
dec
push
fwait
push
cmp
jbe
lea
jle
inc
mov
rcr
xor
fmull
and
shll
adc
nop
clc
push
xchg
pop
out
shll
jecxz
cli
cltd
xchg
sub
jg
jle
sti
add
cmpsl
dec
mov
movsl
ds
jne
mov
lods
sti
xchg
or
js
ret
rcr
push
mov
mov
and
cmc
cmpsl
in
vaddsd
cmc
enter
or
mov
into
mov
lods
loope
push
cmpsl
sbb
inc
cmpsl
add
cld
roll
inc
fsubs
iret
ds
jnp
in
lock
add
push
enter
leave
les
outsb
out
js
ss
jmp
negb
mov
lods
mov
rorb
out
aaa
or
es
pop
add
add
movsl
fsubl
sbb
fisttpll
add
and
push
cmpsb
xchg
add
movsl
bound
fmuls
lods
sub
mov
add
cmp
xlat
inc
add
jne
dec
sub
sbb
lods
lret
stos
xchg
cmpsb
jmp
outsb
sub
cmp
xchg
mov
lods
push
sub
andb
jo
dec
cld
and
jae
inc
and
mov
ret
loopne
mov
adc
imul
sub
into
addr16
sub
cmp
mov
add
inc
add
cmpsb
clc
enter
repnz
aaa
scas
add
xor
dec
mov
in
sbb
flds
sarb
out
push
bound
and
repnz
jg
aaa
orl
imul
push
pop
lahf
addb
repnz
jb
add
pusha
mov
fadds
xchg
dec
pop
xchg
int
xor
xchg
cmp
mov
iret
mov
repz
arpl
pop
push
inc
cmpsb
mov
int3
add
mov
sub
add
fmul
sub
cmp
dec
mov
les
mov
int
jmp
add
adc
sbb
iret
repz
rolb
int3
mov
sbb
cs
add
aas
cmp
cltd
xorl
int
push
xor
xor
pop
or
movsl
inc
cmpsb
pop
sbb
imul
flds
daa
shlb
cmp
in
out
jbe
xor
or
aaa
clc
in
out
mov
repz
xchg
loope
cmc
sbb
stos
pop
ret
push
jle,pt
add
shlb
icebp
int
add
or
add
popa
insl
push
out
sbb
xor
push
aad
mov
fistl
out
mov
jle
cmp
inc
aaa
pop
mov
mov
push
aaa
add
pop
sbb
mov
iret
inc
xchg
sub
cmp
fildl
lahf
pop
xchg
sbbl
cwtl
notb
cmp
in
mov
shrb
aas
cmpsb
sbb
arpl
enter
fisubs
pop
aaa
loop
xchg
js
cmc
mov
push
inc
push
ud0
fadds
adc
mov
jbe
outsl
inc
test
and
mov
jp
aaa
push
dec
xchg
shrl
jl
dec
mov
adc
or
jo
jne
aaa
imull
mov
aam
std
fadd
inc
cmp
push
std
and
cltd
rcrb
add
aaa
xor
ret
int3
fnstenv
imul
mov
rol
movsl
lea
mov
test
add
gs
ja
dec
out
pusha
test
cld
bound
loopne
filds
inc
and
mov
push
daa
xor
sbb
add
inc
cmp
repz
jo
cwtl
sbb
fcoml
xor
push
aad
sbb
inc
lock
notl
add
test
stos
and
scas
ds
jo
jge
cmpsl
pop
test
xchg
faddl
jle
insl
cmp
sbbb
cmpsl
or
add
andl
mov
ret
ljmp
adc
fimuls
add
jge
push
push
push
push
jecxz
out
dec
jae
mov
push
jecxz
bound
lcall
push
aaa
cmp
in
cmpb
adc
das
or
sbb
jp
ret
jge
cli
add
inc
adc
loopne,pt
mov
test
aam
xchg
push
aad
repz
cmpsb
sub
jae
insl
fdivrl
xchg
inc
xchg
fwait
xor
or
pop
shrb
sub
loopne
jg
enter
rorb
cmp
fisubrs
mov
sub
mov
inc
in
xlat
pop
pop
cli
iret
cltd
add
ficomps
push
aaa
lret
add
mov
cmp
iret
mov
fbstp
and
inc
ret
jne
mov
rcll
mov
fs
mov
outsb
cmpsb
cs
mov
aaa
inc
push
lock
jle
arpl
in
jecxz
adc
sbb
mov
jo
dec
add
int3
pusha
ljmp
and
roll
cmp
mov
es
jbe
cmpsb
jge
icebp
xchg
pusha
aam
push
aaa
data16
aad
std
push
add
or
inc
outsb
scas
outsl
add
and
pop
sbbb
jno
sub
cmp
adc
fprem
adc
in
rcrb
push
mov
mov
sub
cmpsb
ja
inc
inc
xor
stos
inc
cmp
cmp
and
mov
js
ljmp
xchg
inc
test
jnp
xchg
decb
pop
cld
adc
mov
test
fisttps
or
push
sbb
xor
out
push
lea
lods
int
aaa
scas
jecxz
mov
cmp
add
dec
push
pop
xchg
in
sub
pushf
mov
stc
xor
mov
push
mov
add
out
xchg
mov
add
sarl
fs
mov
pop
mov
adc
add
ffree
in
cmpsb
ds
cld
inc
adc
pop
daa
pop
aam
js
add
not
xor
ss
xchg
rolb
imul
push
iret
mov
fsubrl
add
xchg
dec
test
push
roll
xchg
mov
jb
cmpsb
popa
into
mov
lods
jg
imul
fsubl
insl
cmp
loope
aaa
std
mov
mov
dec
scas
clc
sbb
imul
in
jo
or
out
jo
push
cld
jae
inc
xor
fistl
pop
cmpsl
lods
cld
jmp
mov
aas
stos
cmc
cmp
cs
add
inc
xor
xchg
sbb
sarb
pop
bound
insb
mov
mov
jns
fcmovnbe
add
xor
xor
xlat
cmpsl
insb
mov
dec
rclb
div
les
pusha
lret
xchg
mov
mov
ljmp
into
sar
dec
sbb
inc
insb
jne
mov
stos
movsb
add
adc
adc
sti
push
add
xchg
push
cmp
je
sbb
ret
pop
push
lcall
out
jbe
pop
aaa
clc
loop
lret
sub
cmpsb
jo
push
xor
jecxz
cmp
pop
jae
std
lea
mov
pusha
sub
je
xchg
clc
call
aaa
mov
adcb
mov
mov
mov
fidivl
jle
push
cmp
xrelease
xchg
push
pop
add
push
cvtdq2ps
jg
add
ror
add
lret
jecxz
jbe
cmp
cltd
and
xchg
xchg
aaa
mov
leave
sub
add
push
dec
mov
stc
lods
add
icebp
pusha
push
inc
movsb
add
sub
add
mov
data16
lods
jmp
mov
sbb
fdivr
xor
test
ss
aaa
popa
je
pop
mov
cmp
arpl
in
ss
dec
cmc
add
xor
out
lods
mov
jno
out
das
push
mov
popa
xorl
daa
mov
dec
decl
and
jne
orl
pop
pusha
pop
jne
addb
addr16
fistpll
das
add
dec
cmp
jmp
inc
clc
mov
or
jge
and
adc
push
cmpsl
cmpsb
ret
pushf
insb
dec
pop
pop
mov
test
fists
jl
cmpsb
ss
mov
pusha
and
std
inc
push
les
frstor
rcl
pop
mov
cs
sub
add
xor
lret
cmpsb
jmp
inc
arpl
cmpsb
addb
push
fwait
jp
adc
fstl
jb
push
aaa
mov
fldl
or
add
sub
in
push
add
xlat
jbe
cmpsb
push
dec
popa
xor
inc
in
xchg
adcl
sbb
add
push
rcrl
stos
test
scas
sarl
out
or
je
outsl
mov
add
sub
ss
lds
dec
jl
inc
jno
xchg
cli
imulb
aaa
scas
je
dec
xchg
stc
adc
stos
push
daa
cli
aaa
push
mov
cmp
clc
sbb
stc
add
mov
test
jge
adc
aaa
cmpsl
aaa
mov
das
mov
mov
push
fsubrl
jmp
sarl
add
lcall
jmp
adc
cmpsb
mov
cmp
or
imul
push
fists
add
mov
sub
cwtl
stos
pop
add
mov
jae
inc
pop
pop
das
mov
cltd
popl
cmpsb
ja
mov
divl
dec
into
xor
cltd
pop
sbb
add
inc
es
xchg
mov
stos
cs
scas
faddl
dec
cltd
or
popf
les
movsl
jbe
movsl
add
out
cld
add
pop
es
fwait
int
orb
sub
cmp
jnp
jg
aas
jp
and
sbb
add
xchg
andb
movsl
div
push
outsb
inc
lret
hlt
lret
iret
adc
repz
xlat
cmp
dec
and
cmp
insl
mov
je
cmpsb
dec
fs
mov
cmp
sti
sbb
fmull
outsl
mov
ss
jecxz
adc
nop
mov
pop
out
pusha
or
out
jb
lahf
xchg
sub
jo
inc
aas
ds
sbb
jmp
mov
mov
and
jo
jbe
sub
cmpsb
cld
push
add
inc
add
dec
xchg
loope
shl
xchg
repnz
dec
pop
mov
push
sbbb
addr16
rorb
adc
mov
cli
lret
sbb
inc
fs
mov
mov
lret
mov
mov
xchg
dec
cmpsb
add
insb
mov
cmp
sti
jno
jb
out
and
pop
cmpsb
jae
mov
push
ficomps
aaa
sub
inc
or
js
fmuls
shl
int3
add
mull
add
std
sbbb
test
pop
cmpsb
xor
pop
or
inc
cltd
enter
cld
dec
stos
insl
cmpsb
lahf
ret
mov
int3
xlat
addr16
inc
dec
dec
aaa
cmpsb
push
fmull
in
adc
sbb
rclb
int
jo
aaa
push
jg
sbb
or
fiadds
cwtl
sub
cmp
cld
in
mov
dec
xchg
ljmp
add
rcrb
mov
pusha
cmpsl
ret
pop
int3
addl
lds
das
scas
into
repz
xchg
cmpsb
sahf
push
les
adc
femms
jge
mov
cmpsb
xlat
push
dec
popf
in
push
aaa
push
xchg
or
fnstcw
pop
fsubl
mov
dec
add
adc
push
sub
lods
out
pop
sub
xchg
aaa
mov
jle
push
icebp
jmp
fucom
incl
mov
aaa
clc
push
dec
fadds
push
push
or
mov
mov
push
mov
je
xor
adc
aaa
lret
movsl
mov
fidivl
movb
repz
lods
andb
out
nop
dec
mov
push
pop
cmpsb
stos
mov
fcomps
gs
movsb
lret
stc
lock
jg
mov
xchg
mov
into
movsb
xor
add
push
sti
fs
add
sbb
or
fistpll
mov
lods
pushf
insb
loop
add
daa
int
cmpsb
ja
sbbb
lret
sub
or
leave
mov
inc
out
lock
daa
jp
dec
push
aaa
push
cmpsl
and
lcall
adc
aam
xor
and
scas
popf
add
xlat
dec
das
pop
push
sub
mov
aam
add
imul
pop
outsl
test
sti
pop
jp
aaa
or
xchg
sbb
adc
cmpsl
or
iret
dec
xor
add
out
jecxz
fldcw
movsl
iret
and
or
pushf
rorb
add
mov
call
insb
cmp
popa
push
xor
imul
push
in
ljmp
loop
test
aaa
mov
lret
xor
mov
push
addr16
scas
imul
enter
adc
lcall
add
push
aaa
push
xchg
add
hlt
daa
inc
pop
add
stc
dec
jecxz
lods
stos
cmpsb
loope
jnp
or
insl
aaa
sahf
bound
femms
out
sbb
ds
dec
aaa
sahf
mov
dec
cwtl
add
das
cld
mov
or
mov
jecxz
fs
je
sti
jge
lods
xorb
sbb
xchg
xchg
mov
cmpsb
mov
adc
mov
inc
xchg
add
inc
or
into
fnop
sub
or
cmp
fcmovnbe
lcall
mov
in
std
add
cmp
fisubs
mov
scas
fchs
sbb
xor
sbbl
lods
push
jnp
fsubl
ret
push
ds
popa
aaa
adc
movsb
or
lea
adc
lahf
imul
js
jmp
shll
sub
pop
dec
daa
rorl
loope
jp
je
mulb
cmpsb
or
add
lret
insb
add
sub
sub
in
cmpsb
lcall
aas
push
or
cmpl
mov
rep
pop
shl
loopne
outsl
mov
nop
xor
xor
sub
jp
xchg
or
stos
aad
sub
add
roll
icebp
sbb
add
cmpsb
sub
notb
shrl
sbb
inc
push
add
inc
xor
add
pusha
push
xchg
dec
mov
pop
jmp
adc
les
pop
jmp
pop
cld
add
jbe
das
loop
aaa
aaa
mov
xchg
mov
test
lcall
jbe
xor
add
aas
sub
add
ja
loop
aaa
mov
orl
fwait
dec
xor
pop
inc
pmuludq
add
out
rcrl
lods
xchg
push
std
jno
ss
cmp
mov
rcr
pop
mov
fwait
adc
test
ljmp
cmp
pop
dec
popf
pop
data16
sahf
push
fildll
mov
in
jne
cmpsb
jle
stos
xchg
jecxz
fs
aaa
add
add
cmp
shrb
add
clc
xchg
inc
div
aaa
pushf
xchg
mov
pop
into
mov
adc
jo
jge
push
int3
loope
mov
pop
xor
dec
or
fmul
fldl
lret
add
je
adc
movsl
cmpsb
push
jle
in
outsb
rol
aaa
das
cmp
sbb
jle
push
lret
or
add
or
lret
ja
jl
jg
into
inc
repnz
aaa
lahf
mov
loope
xor
inc
cmpsb
sbb
sbb
jge,pn
xlat
aaa
push
jbe
movsl
xor
adc
or
add
aaa
inc
inc
xor
insl
jl
test
and
xor
pop
mov
filds
xor
xchg
js
aaa
push
data16
lahf
and
xchg
loope
mov
add
shll
dec
stos
cmpsb
cmpsl
adc
mov
fnsave
jns
pop
mov
shrb
dec
cmpsb
mov
inc
mov
aaa
insb
test
test
or
aas
inc
mov
cmc
inc
add
mov
daa
mov
mov
cmpsb
lock
outsb
daa
add
movsb
and
lcall
ret
xor
add
stos
pushf
aad
add
fdivp
mov
sub
or
jl
push
add
inc
xchg
lock
enter
hlt
sub
jbe
movsl
xchg
aad
rolb
add
push
into
adc
imulb
and
push
pop
es
popf
pop
movsb
inc
out
mov
xchg
cmpsl
dec
shll
add
dec
stos
loop
xchg
jno
inc
ret
ja
adc
cmp
les
sbb
ja
and
mov
cmovno
test
rol
pop
dec
ja
push
mov
cld
out
ss
cmp
in
xor
mov
shlb
cmp
sub
mul
mov
gs
cmp
repnz
ds
jge
cmp
je
test
xor
push
je
jbe
mov
ss
and
cld
sti
mull
add
mov
movsl
adc
or
lods
enter
add
ror
jo
adc
xor
cld
aad
adc
cmp
adc
sub
jmp
mov
adc
mov
add
addb
test
jo
jae
lcall
pushf
add
push
jl
adc
aaa
xor
jo
mov
mov
dec
flds
imul
inc
aas
lods
mov
mov
mov
adc
cmpsb
add
mov
pop
aaa
inc
inc
add
sub
sar
cmp
dec
pop
cmpsl
sub
cltd
and
sysexit
jle
jp
cmpsb
cmc
jo
jo
cld
lret
push
std
sti
xchg
pop
or
imul
aad
sub
cwtl
insl
sub
add
xorl
cmp
xchg
jecxz
mov
movsl
dec
icebp
cs
cmp
mov
dec
ret
dec
mov
push
aaa
fsubr
mov
stc
mov
inc
sub
mov
neg
stos
lods
add
adcl
lret
pop
dec
cmp
jp
dec
xor
xor
mov
stos
fs
dec
or
insl
cmc
fimuls
cmpsb
xchg
pop
out
outsl
cs
addr16
sti
mov
jg
push
dec
out
popa
and
sarl
mov
mov
adc
pop
mov
ja
stc
stos
or
pop
outsl
pop
clc
inc
adc
cmpsb
icebp
lods
jp
cli
pusha
inc
nop
add
js
cwtl
fiaddl
daa
or
enter
push
pop
xchg
ret
cmpsb
repnz
lea
jae
and
add
outsb
or
repz
movq
inc
stc
in
mov
je
add
ja
jmp
sub
mulb
jmp
inc
sbb
loopne
test
add
jmp
cmp
add
mov
cltd
dec
out
add
xor
pusha
leave
lods
push
in
sub
movsb
sbb
dec
xor
ljmp
push
push
jb
and
inc
aaa
stos
test
sbb
xchg
mov
mov
sbb
xor
jp
inc
fistl
and
call
jle
inc
and
cmc
clc
dec
pop
lods
jae
pop
movsl
xchg
jle
inc
test
aaa
mov
add
xchg
push
and
sti
push
lods
iret
in
add
mov
push
xadd
adc
rolb
roll
and
add
mov
sub
sub
je
add
dec
aaa
ficompl
popa
push
fiadds
jp
mov
movsl
cmp
mov
or
or
add
leave
ja
sbb
or
add
pop
pop
data16
cmp
sub
jne
lahf
add
mov
sbbl
lcall
lds
ljmp
push
idiv
pusha
mov
pop
les
xchg
or
inc
sbb
fsts
clc
push
nop
mov
mov
xchg
icebp
cmpsb
std
and
fidivs
dec
mov
xchg
mov
fldenv
sbb
scas
popf
sub
push
inc
cmpsb
fbstp
xor
dec
pop
or
pusha
rcll
lret
add
jno
icebp
sub
cmpsw
clc
pop
addr16
aad
inc
pop
add
inc
jnp
jnp
cmp
add
aaa
mov
add
mov
out
cmpb
jl
jno
xchg
adc
cmp
outsl
push
pop
in
or
sbb
fdivrl
push
aaa
mov
lods
mov
add
insb
pop
rcrl
loopne
xor
clc
lret
and
jns
andl
lock
xchg
insl
cltd
push
pusha
add
dec
stos
orl
xchg
lds
shll
jns
xor
mov
mov
mov
lret
cli
sub
cmpsb
icebp
mov
fs
mov
aas
aaa
aad
inc
jb
xchg
int3
sbb
push
or
sub
fidivrs
aaa
loope
xor
and
sub
mov
scas
add
jns
imul
cwtl
mov
stos
test
pusha
shrb
or
mov
push
xor
mov
lret
xor
sub
jl
mov
mov
pop
gs
sub
jg
push
pop
sahf
adc
aaa
out
stc
scas
pop
fs
push
or
push
xlat
repz
add
pop
fwait
cmp
inc
lahf
aaa
fimull
pop
es
add
inc
outsb
sbb
mov
inc
iret
inc
add
movsl
cwtl
jmp
cmpsb
add
push
cs
jl
and
xor
aaa
stc
shrb
add
fstl
or
mov
mov
cwtl
and
int
adc
push
adc
in
sbb
lret
sahf
add
sub
sbb
sub
xor
cwtl
mov
bnd
sub
xchg
mov
or
lret
jg
add
xor
inc
jo
jno
adc
roll
add
sbb
jnp
stos
pop
mov
jmp
cmp
mov
fcmove
dec
pop
xor
add
sub
sbb
cmpsb
or
jne
and
fwait
aaa
push
or
push
jmp
xor
pop
mov
jo
aaa
mov
out
add
fadd
lods
daa
add
insl
notl
cmp
lds
scas
inc
lea
nop
xorps
and
bound
mov
cmp
dec
cld
cmp
add
scas
lea
call
push
pop
popa
outsl
jle
xor
or
rcr
adc
stos
add
inc
adc
test
pop
add
bound
jp
jg
fucomi
mov
inc
sbb
mov
mov
mov
cmp
cs
in
or
push
mov
sbb
dec
mov
lahf
stos
stos
inc
xchg
test
add
push
mov
mov
ficomps
xrelease
rclb
aaa
ret
pop
or
push
jmp
es
int3
daa
into
cmpsl
aaa
or
cmc
sub
es
jmp
or
cmp
fildll
aam
movb
push
xchg
xor
sub
and
push
mov
arpl
xchg
andb
add
xchg
into
and
mov
clc
aas
mov
lahf
aad
mov
sbb
add
sbb
push
fnstsw
out
push
mov
jle
rol
pop
add
cmp
inc
fisubs
es
mov
mov
dec
pop
stc
xchg
out
out
repnz
sti
lea
mov
je
decb
lret
test
pusha
jnp
shlb
sbb
sub
mov
push
jbe
aaa
stc
int3
leave
lret
dec
fimull
aad
xchg
out
sarl
outsl
arpl
cmp
push
ficoms
xor
lock
xchg
dec
popa
mov
daa
enter
and
xor
jp
jmp
testl
push
jo
sub
pop
sub
inc
sets
in
dec
sbb
inc
xchg
dec
sbb
add
scas
addl
cmc
repz
cmp
push
sub
inc
cmp
je
lret
push
push
jne
subb
mov
pop
fs
int3
scas
cmpsb
push
lret
ljmp
andl
sub
jp
add
or
or
testl
cltd
testl
pop
fcomps
pushf
push
insb
and
cmp
cmpsb
sbb
mov
arpl
movsl
shrb
push
adc
mov
cmpsb
rolb
mov
js
das
int
cmpsb
out
cmp
dec
fwait
mov
xor
fistpl
dec
fisubl
or
push
cmpsb
inc
adc
rorb
test
mov
inc
adcl
in
pusha
sahf
sbb
sahf
addr16
inc
add
sbb
inc
add
dec
mov
mov
pushl
sahf
in
pop
cmp
in
aaa
sub
mov
sbb
inc
pop
pop
orl
sahf
mov
xchg
dec
pop
xor
pop
sub
cwtl
mov
push
jg
stos
mov
out
popa
andl
clc
shrl
enter
add
out
hlt
leave
pop
jns
cmpsb
cli
xor
andb
shlb
dec
rcrl
data16
jp
mov
sub
pop
inc
cmpsl
mov
aas
cmp
lret
loopne
xchg
test
bound
add
add
jg
popf
int
cmpsb
sub
push
lcall
push
adc
mov
add
jecxz,pn
cmp
xor
pop
mov
mov
push
testb
sbb
inc
pusha
xor
test
add
out
aam
js
out
sarl
cmp
nop
mov
inc
push
add
fwait
inc
stc
inc
in
iret
pop
or
sets
add
jnp
and
loopne
icebp
xchg
cmpsb
js
aas
outsb
pop
add
ljmp
or
aaa
jns
and
ss
shrd
out
jo
xchg
jns
dec
xchg
push
neg
sbb
jmp
mov
cli
and
outsb
xchg
rcrl
mov
adc
dec
add
fsts
das
insb
sub
bound
mov
in
or
sub
es
pop
lret
test
cmpsl
inc
pop
xchg
lcall
clc
xor
inc
inc
ret
push
xchg
outsl
add
aad
fwait
sub
stos
push
xchg
push
test
add
das
mov
inc
hlt
adc
inc
mov
push
ja
add
ss
lea
aaa
cmp
add
xor
loope
dec
mov
cmp
ret
mov
adc
jae
dec
jge
mov
shlb
cmp
mov
cmc
and
dec
push
add
test
das
repz
sbb
out
xchg
outsl
pop
add
push
sar
xor
mov
jle
push
aad
add
lods
aam
push
jle
sbb
mov
rcll
cmpsb
push
inc
inc
or
cmp
xor
and
push
mov
xor
ds
sbb
je
adc
xor
and
xchg
hlt
add
cmpsb
cmpsb
sub
jge
mov
fdivs
mov
and
cmpsb
arpl
dec
inc
pop
out
inc
mov
mov
pop
or
in
sahf
jmp
cmp
inc
push
pop
and
pushf
inc
int
cmpsb
movsl
or
daa
aaa
mov
movl
mov
mov
loope
int
dec
adc
cmp
bound
add
or
mov
cmp
push
into
es
scas
shlb
push
adc
dec
mov
pop
cmpsb
xchg
hlt
into
movsl
repz
xor
mov
fnstenv
cmpsb
imul
stos
or
aad
mov
orb
dec
pop
inc
cmp
popf
jo
pop
push
and
aaa
sahf
faddl
cmp
or
xor
stc
mov
xorb
xchg
cwtl
movsl
sahf
mov
add
add
sbb
push
in
je
xchg
cmpsb
shrb
daa
sub
in
cmp
xchg
cmp
lock
xor
mov
jnp
mov
in
aaa
xor
cmp
pop
outsb
into
and
fs
rep
xor
aaa
ds
fadds
icebp
add
mov
movl
cmpsl
or
jmp
les
mov
sarb
adc
popf
pop
lcall
adc
mov
inc
jle
mov
xchg
mov
lret
push
out
mov
mov
out
add
lea
inc
jns
ret
mov
add
inc
xchg
mov
cmpsl
mov
mov
push
movsl
outsl
mov
pop
mov
pop
xchg
gs
es
pop
fldenv
in
outsb
ja
or
mov
fists
adc
add
jg
add
in
imul
lahf
insb
pop
mov
pop
pop
push
cwtl
xchg
outsl
call
push
in
pop
adc
jecxz
cmpsb
dec
scas
lods
sahf
xchg
and
mov
sub
sahf
and
pop
pop
push
into
sbb
sub
shll
mov
lock
cmc
xchg
add
and
int3
pushfw
mov
mov
pop
pop
ja
inc
pop
filds
add
popf
fcompl
outsl
call
mov
clc
mov
mov
add
cmp
icebp
test
clc
insl
jp
pop
cmp
jae
cmpb
inc
es
repnz
cmpsb
popa
push
fidivrl
xor
push
push
js
add
cmp
and
lds
add
mov
mov
push
testb
jae
aaa
mov
push
pop
pop
js
js
inc
divl
imul
push
xor
lret
sbb
scas
cmpsl
fstpl
sti
mov
xlat
push
outsl
add
jmp
mov
dec
pop
jmp
cmp
iret
mov
dec
add
mov
test
das
fnstenv
push
mov
push
out
mov
gs
addl
stos
jp
pushf
jecxz
pop
pushf
xchg
bound
mov
pop
inc
sbb
inc
mov
cmpb
fistpl
sbb
or
sbb
mov
jbe
xchg
sbb
mov
and
pushf
lds
add
nop
xchg
ljmp
test
ss
imul
inc
icebp
testb
jl
aaa
jns
rorl
test
cmp
sbb
mov
cmpsb
mov
sub
test
pushf
sub
cmpsb
das
insl
cmp
loope
push
aaa
mov
sub
ret
fbld
push
adc
inc
popf
cmpsb
xchg
adc
insl
cmp
sbb
inc
jae
jl
lods
inc
in
add
ja
add
dec
jnp
mov
std
and
add
cmp
or
int
stos
pusha
je
ss
dec
push
jge
in
mov
lret
mov
adc
loopne
nop
inc
sub
arpl
pop
les
xchg
insl
ds
pop
and
add
into
xchg
gs
jae
pusha
mov
pop
cmp
mov
int3
pop
push
lea
mov
pop
ret
shrl
add
dec
pusha
inc
test
dec
lcall
nop
jg
sub
push
movsb
jecxz
mov
add
sbb
mov
shl
daa
pop
fstl
fcomps
cmc
aaa
ss
xor
mov
test
ja
xor
adc
insb
inc
roll
push
push
add
ficoms
ret
sahf
mov
shrb
nop
lds
aaa
andl
bound
inc
xor
cli
inc
jno
xor
xor
push
sub
shrb
xchg
cmp
add
push
sarl
cmp
cmp
jne
mov
insb
fdivs
jne
mov
mov
aaa
add
ds
push
adc
std
mov
jno
pop
xlat
pop
push
loop
adc
cld
sbb
dec
lret
jns
push
pusha
je
push
in
push
jecxz
jg
pusha
rolb
jns
xor
inc
mov
lahf
cmpsb
ds
inc
int
push
inc
aaa
icebp
movsl
xor
inc
ja
sbb
lahf
xchg
inc
lahf
cmc
xchg
movl
or
test
and
add
sub
test
push
jno
sub
out
lahf
push
cmpsb
mov
pop
lods
in
leave
es
repz
dec
aaa
decl
loopne
push
lret
out
inc
leave
rolb
ret
add
mov
pop
adc
push
and
out
test
clc
lock
or
cmpsb
or
xor
cmpsb
and
out
cmp
dec
aaa
mov
pop
xor
mov
mov
lret
push
sub
aaa
inc
rclb
xor
xchg
adc
popf
ja
out
ljmp
ror
push
or
add
xchg
shll
and
shl
push
add
and
outsl
in
aaa
dec
ficomps
repnz
push
orl
enter
lea
bnd
pop
ret
adc
addr16
cmp
mov
aaa
gs
lea
out
mov
mov
mov
or
xor
dec
sub
jge
xor
out
pop
out
shrb
xor
movl
in
cmpsb
push
inc
push
add
adc
xchg
aaa
jo
add
or
aam
test
add
sahf
std
rcrl
stc
mov
and
das
iret
jno
inc
jo
adc
jbe
cmp
adc
mov
cmc
andl
or
mov
add
ja
sahf
push
nop
fidivl
mov
add
daa
dec
add
cmpsb
add
xchg
sbb
aaa
pop
pop
or
inc
pop
mulb
mov
jno
mov
push
pusha
xor
cmp
cmpsb
jl
inc
xor
aaa
adc
loopne
push
jns
mov
test
arpl
cmpsl
mov
cmp
adc
xchg
js
test
inc
daa
insl
mov
inc
push
inc
pop
pop
incl
movsb
cmp
fimuls
dec
fiaddl
rcrb
loopne
aas
pop
jl
mov
and
es
adc
movsb
mov
divl
add
cmp
inc
cmpsb
push
pop
shrl
cmp
loope
iret
inc
pop
cmpsb
stos
push
mov
mov
out
testb
pinsrw
das
add
push
pusha
popa
in
hlt
push
jg
call
out
clc
pop
fisubs
pop
push
pop
lahf
aaa
fxtract
xchg
fimuls
mov
sbb
sti
mov
out
xor
xor
cmp
cmpsb
loope
aas
cmpl
jg
orl
fisttpl
adc
popl
clc
pop
push
test
add
push
popf
add
mov
add
and
mov
aam
add
mov
adc
xchg
jg
movsl
or
loope
sbb
shrb
repnz
pop
inc
addr16
xor
fmuls
mov
inc
and
fs
push
nop
les
inc
add
lahf
shll
cmpsb
aad
lods
in
inc
jl
mov
jle
cltd
clc
sub
insl
mov
mov
loop
lock
imul
dec
mov
mov
mov
push
xor
add
js
jge
es
inc
xor
dec
sub
sub
push
xchg
sbb
loopne
xchg
aaa
mov
les
add
xchg
mov
add
loop
sbb
shll
cli
dec
rorb
jmp
cli
fisubl
cltd
aam
repz
mov
pop
add
out
dec
iret
movsb
cmp
mov
xchg
jae
sbb
mov
fs
sub
adc
sub
aad
cli
add
mov
lods
enter
fbstp
sub
jnp
cmpsb
lods
xor
ja
aaa
xchg
leave
cmp
mov
verr
int
hlt
push
pop
mov
push
lcall
mov
add
xor
sarb
fadds
xor
insb
push
cmpsl
cmovo
mov
scas
lea
add
int3
rorl
adc
push
fildl
pop
pop
js
aaa
fwait
cwtl
add
push
mov
incb
add
in
sahf
jnp
cmpsb
add
mov
aaa
dec
sbb
add
in
in
dec
dec
pop
out
aas
aaa
sahf
aam
xchg
cmp
loopne
jp
inc
pushf
mov
add
dec
mov
decb
add
adc
stos
lds
pop
aaa
out
gs
andl
push
and
and
and
or
lret
xchg
mov
out
adc
inc
push
fwait
add
jl
or
fwait
add
xor
xlat
repnz
add
out
mov
in
push
adc
cmpsb
mov
adc
aaa
mov
rorl
add
dec
xchg
and
cmp
xchg
or
call
mov
lock
sub
aaa
aaa
dec
fsubr
pop
inc
jp
add
shl
adc
inc
xchg
sbb
jb
out
sbb
into
out
fstl
aaa
push
jp
bnd
xor
dec
mov
mov
push
out
sub
fwait
in
dec
and
xor
repz
fbld
pop
mov
and
push
fnstenv
cmp
mov
push
out
sahf
push
scas
adc
stos
cli
push
jns
cmpsb
out
daa
aad
add
mov
sbb
xchg
and
pop
sub
lahf
jo
push
fldcw
push
bound
icebp
xlat
sub
cmpl
pop
cmc
mov
push
mov
mov
sbb
inc
adc
mov
gs
mov
sbb
xchg
aam
outsb
pop
xchg
cmp
add
andb
jmp
rcr
jge
fidivrs
jnp
xor
dec
lock
push
fwait
js
cltd
fnstenv
daa
sti
insb
loopne
pusha
lret
call
iret
xor
inc
add
adc
jo
xor
test
push
pop
adc
leave
push
test
inc
repz
pop
sahf
add
jl
insl
shrb
xor
pop
xor
xchg
aam
mov
int
clc
sbb
dec
dec
mov
sbbw
add
rcl
std
fiadds
in
inc
sub
clc
xchg
negl
dec
cmpsb
inc
adc
mov
clc
sbb
loope
or
sub
pushf
int3
aaa
mov
inc
add
je
mov
popf
xchg
cmp
push
dec
js
dec
aam
mov
stos
dec
addr16
pop
insb
out
aaa
mov
stc
loop
cmp
fdiv
adc
cmpsl
out
add
std
xchg
adc
add
lea
push
cmp
repnz
test
jge
push
lret
lahf
in
aaa
fmuls
test
mov
adc
cmpsl
adc
inc
in
mov
outsl
into
fcoml
bound
pop
das
dec
stos
jns
femms
add
or
jg
push
subl
shlb
fisubs
test
jne
cmpsb
or
mov
popf
jle
pop
inc
adc
add
pop
jl
cmpsb
cmpsl
incb
and
shll
aad
xchg
xor
int3
or
lret
lcall
or
testl
sub
sti
pusha
lahf
shll
pusha
fnstenv
aaa
push
xchg
loopne
jnp
fs
add
or
bsf
mov
sbb
cmpsb
or
jl
aad
popa
or
daa
fsubp
pop
imul
or
enter
add
add
or
jge
in
jge
sbb
aaa
js
add
mov
out
out
dec
cmpsb
and
ret
mov
xor
sub
test
mov
out
fnstcw
imul
push
jns
pushf
pop
movsl
cli
mov
test
xor
scas
mov
and
fadd
add
jl
xchg
cmp
and
mov
mov
sbb
pop
cmp
add
sbb
stc
shrl
mov
mov
mov
and
mov
or
pusha
adc
mov
insl
xchg
jae
and
out
cmp
mov
jmp
lods
int3
and
flds
cmp
mov
lods
add
mov
movsl
sub
repz
cmpsb
sbb
outsl
adc
out
or
pop
or
leave
into
or
xchg
ret
mov
push
mov
mov
or
xor
mov
xchg
clc
pusha
lret
and
cmpsb
dec
jo
inc
pop
out
out
jbe
mov
add
mov
popl
ljmp
and
pushf
enter
cmpsb
cmp
add
jns
fcomps
sub
ljmp
sbb
lret
fwait
add
mov
aaa
push
mov
mov
stos
test
xchg
lret
rcrl
or
mov
xchg
imul
aaa
xor
push
pop
test
xchg
aaa
jnp
hlt
out
lahf
sub
imul
push
sbb
jbe
xchg
push
movsb
je
daa
pushf
and
or
int
xchg
cmp
insb
loop
jne
adc
xchg
int
jns
aam
add
cmp
cvttpd2dq
adc
dec
addr16
je
dec
xchg
scas
push
fs
jp
lock
enter
in
popa
pop
loop
push
pop
xor
or
push
ss
loope
mov
push
ficoms
sbb
in
aas
jbe
fwait
push
push
jle
rcrl
xchg
mov
cmpsb
cmpsl
rcrl
mov
je
aaa
ror
inc
push
jmp
into
dec
out
daa
mov
fldl
cmp
cmpb
jle
adcl
pop
rorb
push
adc
xchg
es
cmpsb
adc
or
movsl
jno
hlt
cmp
aam
inc
sbb
out
add
hlt
decb
inc
out
xchg
or
mov
movsb
lahf
add
add
and
lock
add
cmpsl
adc
xorl
loopne
mov
mov
add
and
or
repz
ret
daa
push
ss
mov
les
sbb
decl
xchg
pop
outsb
lret
adc
fs
xchg
bound
outsl
mov
xor
hlt
and
dec
enter
add
pop
stos
xchg
and
mov
int
jmp
xlat
bound
popa
mov
incb
test
xor
aaa
lret
push
inc
add
sbb
push
notl
rcrl
mov
add
stos
add
push
lcall
test
out
xor
push
add
cmc
icebp
daa
ljmp
into
insl
pushf
mov
int3
dec
and
dec
adc
mov
xchg
mov
mov
mov
jg
push
iret
push
fistpl
push
daa
movd
add
repz
add
icebp
jmp
jnp
pcmpgtd
jbe
nop
insb
mov
mov
cltd
push
mov
sbb
add
inc
or
dec
mov
stos
push
aaa
std
ret
adc
incl
dec
push
ja
pop
jne
push
sbb
cld
pop
sbbb
test
or
dec
daa
cmp
in
sti
je
outsl
inc
push
dec
add
in
rcll
test
cmpsb
inc
mul
inc
subl
push
aaa
pop
lods
xchg
dec
mov
cmpsb
movsb
stc
xchg
mov
sub
mov
mov
pop
inc
ret
jns
pop
xsave
aaa
ss
and
fisttpll
outsl
out
in
test
mov
movsb
sub
lock
fnstsw
xor
sub
mov
inc
test
mov
mov
add
xor
push
push
cmp
xchg
mov
jne
mov
xorb
jbe
xchg
sbb
adc
hlt
xchg
daa
daa
jno
xor
push
cli
add
cs
aam
push
add
imul
lahf
aaa
jns
mov
movb
mov
push
push
mov
mov
stc
push
add
mov
xor
movsl
mov
fs
push
add
dec
mov
movsl
movsl
int
add
mov
sahf
cld
pop
mov
and
xchg
or
leave
push
add
into
mov
cmpsl
jnp
xchg
mov
add
ret
cmpsb
jmp
and
mov
clc
fwait
dec
push
cld
mov
in
cmc
mov
negb
in
test
test
jo
aas
cmp
iret
ljmp
add
push
sbb
daa
shlb
xor
add
cmpl
jno
arpl
ss
insb
push
pop
mov
xchg
adc
orb
dec
cwtl
inc
inc
hlt
push
pop
or
adc
cld
xor
test
inc
out
push
or
add
sub
xor
fsubs
ret
fistpl
add
mov
fucomp
mov
popf
ret
and
or
aaa
daa
lods
or
add
dec
fstpl
pop
lret
imul
cmpsb
dec
loop
add
fwait
lods
xorb
fsubrl
pop
pop
mov
negb
orb
push
clc
sarb
push
xchg
or
inc
inc
icebp
out
testb
and
xchg
lcall
dec
cmpsb
imul
mov
movsl
adc
int
pushf
pusha
cmp
in
add
xor
inc
xor
cmpsb
in
repz
pop
xor
sbb
add
cmpsb
pop
push
mov
mov
pop
aaa
test
outsb
pop
pop
add
lods
rclb
sbb
out
or
or
aaa
mov
dec
mov
shl
fdiv
popa
pop
adc
adc
ss
mov
cmp
fbld
divb
repz
cmpsb
sub
mov
scas
jecxz
inc
pop
movsl
push
cmpsb
test
fldt
stos
shr
aaa
je
mov
mov
cmpsb
cmp
xor
pop
cmp
pop
mov
add
rcrb
loope
mov
daa
pop
or
push
gs
pushf
outsl
movl
jbe
lock
add
or
dec
movsb
and
cmpsb
jnp
cmpsb
push
outsb
aam
loope
and
add
dec
loopne
lcall
adc
fstpl
mov
call
fldenv
mov
cmpsb
sahf
add
mov
mov
push
or
mov
cmpsb
cwtl
repnz
xor
cltd
pop
aaa
push
xchg
cwtl
es
dec
cli
add
mov
cmp
fldenv
cli
jb
cmpsb
sbb
ret
mov
mov
and
enter
int
lods
add
add
bound
mov
lret
sub
xchg
and
iret
add
sti
out
nop
cmpsb
stos
mov
mov
dec
out
dec
loop
and
add
push
insl
inc
popa
cmpsb
pop
fcoms
jecxz
sti
mov
inc
xor
pop
addb
xor
mov
aam
ljmp
in
add
push
jmp
insl
pop
cmpl
add
lcall
push
push
ret
or
add
or
xor
fs
xlat
mov
add
repz
mov
push
movsl
sahf
sarl
adc
rep
out
push
cmpsb
mov
add
push
add
add
into
cmp
pusha
pop
add
mov
out
mov
stos
insb
push
cmp
pop
clc
repnz
hlt
jecxz
mov
addr16
cmp
je
inc
xchg
pop
mov
inc
pop
push
mov
add
cmp
je
lret
stc
jl
push
neg
enter
and
mov
jge
push
aaa
test
jne
and
data16
jge
add
imul
push
bound
push
add
pop
pmullw
aaa
fistpl
jl
adc
lret
incb
sub
cmp
es
test
fistpl
cld
add
out
xchg
xor
les
daa
lcall
push
add
sub
dec
lcall
xchg
add
or
push
inc
loop
ja
mov
outsb
sbb
fwait
cwtl
cmpsb
rcrl
xor
les
xor
fstpt
lds
outsb
fldl
push
movsb
jge
cmpsb
les
shll
cmp
and
fneni(8087
cmpsl
dec
or
push
sub
adc
and
cmp
pop
inc
dec
arpl
add
rol
les
xor
fisubl
popa
les
imul
shrl
lcall
ljmp
sub
add
jg
adc
add
les
push
pop
gs
mov
ljmp
leave
sbb
xor
sarb
add
dec
daa
mull
push
jne
aaa
lods
jns
inc
adc
cmp
mov
lahf
popa
and
aaa
pop
and
cmpsb
pop
dec
mov
fnstsw
or
add
add
es
std
cmpsb
ret
shll
ss
jge
xlat
push
popa
add
jbe
sbb
pop
push
push
mov
xor
negb
mov
sbb
mov
cmpsb
mov
xchg
mov
mov
sub
xchg
scas
jnp
cld
cmpsb
test
cmc
test
mov
aaa
dec
add
mov
fdivrl
or
add
cwtl
fisubrs
pop
xlat
cltd
andb
mov
or
cwtl
pop
dec
add
jns
mov
cmp
bound
or
add
mov
bound
cld
xchg
mov
mov
lea
xchg
push
sbb
or
mov
int3
je
iret
push
xor
inc
in
scas
mov
jns
add
or
scas
dec
movsl
inc
es
or
lods
jge
adc
mov
jmp
pusha
stos
cmpsb
test
xchg
bound
mov
repnz
push
sub
outsb
mov
xorb
jle
xor
mov
sbb
dec
aad
mov
jmp
negl
or
es
call
popa
add
sbb
cmpsb
mov
loope
mov
nop
pop
jne
ds
out
sbb
or
and
rcr
dec
fmuls
mov
mov
mov
stos
loop
push
enter
sub
daa
xchg
mov
aaa
out
cmp
mov
jl
pop
into
imul
add
leave
xor
adc
jo
push
in
cmp
push
xchg
mov
dec
cmpsb
fldcw
test
pop
mov
jge
cmp
and
repnz
add
sahf
cmp
fldt
inc
push
push
pusha
cli
jno
cmp
cwtl
add
repnz
push
movsl
enter
push
cmpl
mov
pop
sbb
and
fstl
mov
inc
data16
clc
jbe
bound
add
cmpsb
pop
test
insl
cmpsl
mov
ja
rorb
sub
test
push
or
add
cwtl
pop
push
dec
push
xlat
cmp
add
cmp
add
ds
cmpsb
jnp
clc
mov
jns
rorl
leave
movsb
push
jp
adc
ljmp
mov
call
jne
ja
repnz
pop
jge
cmpsb
rcr
push
out
loope
in
jecxz
addl
in
in
sahf
cmpsb
cmp
mov
xor
xor
js
dec
inc
cmpsl
ljmp
mov
arpl
addl
aam
scas
mov
mov
fidivs
pop
insl
andb
cmp
pop
cmpsb
adc
daa
mov
xor
jo
jecxz
test
sub
mov
mov
push
adc
inc
addr16
mov
ret
fs
inc
ffree
and
iret
sbb
int3
jbe
stc
add
push
pop
pop
out
cwtl
ds
es
int3
mov
add
in
sarb
jbe
shl
dec
mov
fists
ds
jl
sub
dec
xor
dec
call
inc
clc
push
push
ja
adcb
hlt
add
jp
sub
arpl
rolb
mov
add
jno
mov
push
xor
bound
sub
jp
int3
jbe
rcl
add
sahf
mov
add
les
fsubs
sbb
jne
aaa
es
add
popa
pop
leave
sahf
jle
in
xchg
sub
xlat
sbb
xor
xor
xor
xchg
mov
mov
pop
insl
and
imul
sub
push
push
test
pop
jl
loope
or
add
popl
inc
xchg
sbb
leave
aaa
in
call
or
lret
scas
sbbl
stc
mov
std
rolb
in
push
inc
adc
loopne
push
cmp
mov
adc
sbb
jne
xor
mov
movsb
add
sub
cld
ficoml
cmp
out
out
cmpsb
sub
or
sub
rclb
mov
es
notl
or
lods
push
mov
bound
std
or
sbb
out
or
lret
jg
xchg
pop
addl
loopne
out
hlt
mov
mov
neg
xchg
and
test
pop
mov
aaa
invd
and
add
pop
pop
aas
mov
xor
pop
dec
jg
iret
and
insb
ss
js
push
cmpsb
inc
shll
xor
dec
shlb
mov
inc
and
cmc
push
adc
sbb
push
adc
repnz
pop
cmpsb
test
std
loopne
bound
outsl
inc
les
inc
in
cmpsb
adc
jmp
stos
fimuls
push
fsub
xchg
and
xorb
fnstenv
xchg
xchg
add
cmp
iret
jge
lods
mov
xorb
ljmp
decb
add
jle
jbe
pop
cmpsl
outsl
dec
mov
imul
shr
cmp
lock
int3
daa
xor
repz
sahf
inc
xlat
cli
pop
add
dec
add
pop
sahf
mov
push
mov
mov
in
int
aaa
mov
add
mov
lock
dec
das
aam
and
sub
lret
fstpt
cmpsl
add
xor
dec
jns
add
iret
dec
xchg
and
nop
lcall
xchg
cmpsb
rcrl
add
aaa
mov
aaa
out
movsl
jle
aaa
idiv
jecxz
add
rclb
cwtl
enter
sbb
push
repz
mov
int
mov
je
mov
enter
out
mov
pop
fwait
mov
outsb
add
xor
adc
cmp
sub
add
aaa
repz
rcrb
add
inc
jecxz
add
and
cmpsl
aad
mov
into
push
pushl
mov
add
stos
mov
test
iret
leave
mov
out
push
cmp
hlt
dec
aaa
dec
ret
jmp
mov
sti
add
insb
fstpl
js
mov
out
sbb
add
imul
clc
add
add
push
jge
cmpb
add
std
adc
xchg
add
jge
xchg
leave
push
pushf
into
test
inc
cmpsb
test
inc
lret
add
fistl
ficoml
jl
mov
add
pop
adc
les
pop
dec
jbe
cmpsl
pusha
inc
mov
cmp
repnz
mov
xor
add
imul
enter
lock
jbe
loopne
lahf
sub
push
mov
dec
dec
ffreep
cwtl
push
and
mov
push
mov
fisubs
aaa
or
outsb
jmp
inc
fsubs
push
cld
push
mov
adc
aam
and
sahf
es
mov
or
pushf
sbb
pop
xchg
fwait
pushf
mov
icebp
vshufps
ficomps
into
leave
stc
jmp
loopne
and
jmp
inc
cmc
add
lret
cmp
ret
jl
push
mov
xchg
inc
mov
sub
add
outsl
push
pop
mov
inc
lret
inc
or
jmp
mov
cld
movb
stos
test
fildl
pop
cmc
push
popa
adc
cmpsb
icebp
sbb
xorb
ss
dec
push
jo
lock
das
inc
movl
aaa
cmpsl
mov
setns
jns
and
es
pop
aaa
mov
scas
fstl
fdivs
mov
jmp
cmp
mov
cmpsb
nop
mov
or
xor
add
and
sub
sub
enter
inc
test
aam
mov
mov
add
enter
xchg
mov
cmpsb
bound
pop
sbb
cmp
out
dec
add
adc
loopne
jae
push
leave
dec
arpl
cs
rolb
sbb
imul
mov
sbb
jbe
jmp
cwtl
sbb
add
jae
fstl
jl
push
jno
dec
addr16
outsl
sub
test
jb
cmpsb
and
ss
xor
inc
push
movsb
cmp
mov
fs
leave
or
loop
xor
je
ds
imul
push
jl
adc
xlat
movsl
in
and
jle
mov
push
imul
sahf
sbb
and
sub
pop
dec
push
les
cltd
out
iret
sahf
push
pop
add
movsb
in
push
aad
imulb
add
xor
cmp
or
stos
xor
adcb
or
popf
aad
es
mov
and
or
lods
add
gs
les
call
mov
outsb
aas
add
je
mov
add
loop
lcall
fisttpl
xor
and
add
adc
lock
push
inc
call
faddl
sbb
int3
jmp
xor
iret
cmpsb
jo
dec
xlat
mov
rcrl
jbe
xchg
popa
clc
lcall
cmpsb
data16
push
stos
cwtl
inc
mov
jno,pt
fs
jmp
sub
das
aam
or
push
nop
or
sub
add
popa
xchg
xchg
pop
inc
push
mov
shl
pop
aaa
sti
loopne
add
jl
aaa
or
or
icebp
push
insb
cmp
loopne
lret
dec
lock
inc
aam
aaa
push
outsl
mov
mov
in
xor
cmc
mov
push
pop
xor
add
jne
dec
mov
lds
pop
xorl
pop
js
int3
iret
mov
sti
xlat
repnz
jns
xchg
mov
adc
mov
add
fmull
lahf
push
xchg
cmpsb
iret
stos
lea
aaa
ret
xorb
sbb
mov
lcall
psadbw
into
lods
out
mov
xor
loope
notl
cmpsb
out
jecxz
popa
mov
or
mulb
push
add
xchg
and
sub
ljmp
cmpsb
dec
int3
adc
or
add
cmp
sti
mov
inc
mov
xlat
fisubrs
mov
pop
or
fldl
add
repz
movsb
mov
adc
subl
and
dec
sub
push
mov
lcall
pop
mov
fisubrs
shll
push
scas
sarb
fisttps
loope
add
fwait
imul
scas
push
cmpb
mov
and
mov
int3
insb
sub
aaa
xor
and
mov
icebp
loop
mov
in
ret
iret
in
push
roll
cmpsb
repz
pop
jb
adc
sub
mov
pop
mov
or
mov
in
into
push
add
les
mov
lahf
add
fwait
jo
iret
cmpsl
dec
imul
cmpsl
dec
xchg
xor
jl
je
sbb
repz
inc
mov
aaa
pop
cmp
mov
movsl
rorb
sbb
js
jg
push
test
pop
jne
jmp
movb
or
cli
scas
mov
add
rcll
sbb
pop
stos
cmp
imul
lcall
pop
outsb
add
inc
mov
add
push
cli
sub
pop
cmp
sti
inc
mov
fdivl
jmp
cmpsb
bound
call
adc
mov
inc
fnstsw
repnz
or
mov
pusha
and
mov
scas
mov
jp
out
adc
lds
adc
and
jg
mov
movsb
and
add
ja
inc
sub
cmc
out
js
test
cmpsb
cmpsb
mov
or
push
sub
mov
add
cmp
movsb
ret
add
pop
lods
scas
fisubs
js
mov
cwtl
test
stc
pop
push
shlb
jbe
mov
loope
inc
in
sbb
sub
fs
mov
cli
dec
pop
popa
enter
arpl
fnstcw
sbb
cmc
xor
pop
dec
push
sbb
cli
js
add
int
lds
and
test
pushf
push
pop
fisttpll
je
add
sub
addr16
add
pop
mov
repnz
sbb
push
pop
jmp
repz
adcl
add
cld
loopne
aad
test
or
push
or
or
mov
mov
leave
in
cmpsb
inc
loop
push
jl
fcompl
add
mov
aaa
lret
and
test
jmp
mov
mov
jno
fiaddl
aaa
outsb
xor
or
add
adc
mov
movb
inc
mov
in
sbb
pop
sbb
scas
cltd
and
pop
rol
inc
mov
cmp
lods
shr
stc
mov
aas
cmpsb
icebp
cmp
in
aaa
int
xchg
stc
lret
xor
xchg
inc
loop
in
pop
dec
je
xchg
imul
mov
jmp
mov
mov
xchg
push
and
jle
hlt
out
sbb
mov
adc
fsub
add
lea
push
fsts
popl
pop
loope
inc
and
cmpsb
mov
or
mov
sub
inc
das
pop
aad
cmpsb
pop
pop
xor
lods
mov
push
daa
adc
aaa
insb
scas
std
int3
cmp
cmpsb
sbb
mov
jae
lods
and
imul
push
sbb
movsl
pop
pop
lds
mov
pop
mov
push
sti
outsl
jecxz
movsl
cs
lock
call
hlt
sub
outsb
cli
push
ds
into
sbb
xor
and
insl
sub
mov
pop
popf
stos
dec
aaa
movsl
in
flds
sub
mov
add
mov
test
in
in
in
sub
dec
aad
cmp
add
mov
jmp
add
mov
pop
lret
jbe
fstp
xchg
loop
shl
ret
aam
push
push
seta
pop
aaa
pop
jnp
pop
cmpsl
xlat
cmp
add
mov
mov
add
in
int
cmc
testb
inc
mov
lahf
cltd
pop
stos
xchg
mov
jge
rcll
movb
sub
icebp
dec
movsl
shll
cmp
movsl
cwtl
mov
pop
and
push
out
pusha
test
ja
ja
inc
call
mov
repz
jp
rorb
repnz
shrl
bound
rol
hlt
sub
add
fwait
jg
fildll
add
cmpsl
std
test
mov
mov
push
sar
pop
aaa
aaa
stc
mov
jne
push
aas
pop
add
movb
ss
cwtl
mov
imul
inc
insb
cmp
nop
setp
dec
movsl
inc
add
clc
dec
icebp
jle
adc
add
test
add
idivl
sbb
fdivl
pop
and
clc
cmpsb
repnz
add
xchg
mov
mov
out
sub
or
rclb
push
xorb
ljmp
mov
sbb
push
push
mov
and
cmpsb
jae
loop
sub
cmp
push
mov
push
aaa
pushl
push
dec
hlt
mov
pop
push
xchg
mov
in
cmp
push
out
sbb
out
and
add
adc
cmpsb
ljmp
lods
aaa
mov
aad
cld
in
dec
sbb
jecxz
aam
dec
in
jnp
add
cmp
sbbl
push
rolb
lcall
imul
dec
ja
ss
add
lds
inc
push
jne
xchg
add
mov
nop
aaa
fimull
cmpsb
stos
dec
mov
lods
es
dec
push
sub
inc
mov
popf
pusha
rclb
insb
adcb
mov
add
push
mov
mov
fildl
cmpsb
push
jmp
iret
sub
addb
xor
mov
ror
div
inc
mov
cmc
xor
pop
outsl
scas
xor
dec
stos
pop
insl
dec
daa
rorl
or
sbb
repnz
jne
aas
pop
aaa
push
lods
inc
pop
adc
push
imul
and
addb
push
test
mov
sbb
add
in
hlt
dec
cmpsb
movsl
rol
push
xchg
aaa
shll
lods
xor
sbb
leave
add
mov
idiv
in
cltd
xchg
or
aam
inc
pop
fsub
and
push
dec
mov
aad
fnstcw
nop
mov
nop
jle
shll
mov
ret
mov
scas
fsub
add
insb
or
push
out
xchg
bound
je
sahf
jne
add
sbb
popa
sbb
and
jmp
aaa
xchg
push
icebp
jecxz
loop
add
or
xor
mov
inc
lahf
shlb
jge
cmpsl
ret
je
rcl
xchg
cmpsb
bound
dec
sub
or
arpl
or
pop
push
push
adc
mov
push
sbb
inc
pop
cmp
sub
add
mov
sbb
data16
adcb
xor
daa
push
nop
add
cmp
arpl
add
pop
loopne
mov
movsb
arpl
out
out
lret
add
mov
out
fnsave
push
enter
lods
xchg
or
push
arpl
dec
sbb
push
sub
add
pop
add
mov
idivl
sub
or
sbb
inc
push
and
pop
add
roll
jge
aaa
aad
test
sbb
fistpl
rcl
ljmp
lods
push
arpl
mov
ljmp
add
lret
stos
das
leave
dec
jno
mov
pop
bound
mov
push
push
shlb
push
add
fstl
mov
jp
std
pop
dec
lds
push
dec
xchg
mov
add
adc
repz
mov
call
jle
or
in
iret
push
imul
mov
add
sbb
push
ljmp
xchg
xchg
sbbb
adc
pop
movb
dec
push
add
in
shrb
xchg
dec
mov
sbbb
mov
outsb
into
fiadds
test
idivl
jle
or
cmpsb
jae
sub
aaa
sbb
inc
adc
xchg
adc
add
mov
dec
add
stos
ret
outsb
dec
loop
mov
or
jg
aam
add
jns
je
cmpsb
cltd
cmp
pinsrw
aaa
and
stos
sbb
dec
dec
cmp
xchg
int3
add
xchg
adc
movsb
push
test
xor
sbb
lock
ja
mov
movsb
jne
cmpsb
jo
push
xor
out
jo
or
loopne
jecxz
cmpsb
and
shll
adc
mov
xchg
add
loope
cmpl
cli
add
incb
cmpsb
and
push
lea
imul
jo
xor
jne
xor
adc
mov
divl
mov
lock
stc
push
xor
pusha
dec
add
nop
mov
orb
and
sti
fdivrs
mov
shr
xorb
movsb
xchg
icebp
cmpsl
sbb
rclb
std
add
pushf
sub
cwtl
add
inc
adc
js
pop
sbb
adc
es
add
and
or
cli
test
cmp
arpl
mov
nop
cmp
add
push
inc
and
xlat
bound
xor
out
or
pushf
sbb
mov
and
test
fstl
dec
push
push
aam
pop
pop
hlt
inc
cld
clc
dec
pop
loopne
jmp
enter
jl
enter
dec
aaa
jp
mov
add
and
sbb
verr
adcl
movsl
ss
stc
push
xchg
xchg
push
ret
xchg
sti
cmpsb
or
and
aad
add
adc
repnz
jne
rcrb
rolb
jns
xor
aad
pop
cs
sbb
inc
pop
add
cmpl
push
rorl
int
leave
xor
sbb
xchg
xchg
xor
sbb
sarb
pusha
mov
jae
lods
movsl
movsl
xchg
xor
ret
idivb
add
jnp
sti
cmpsb
cwtl
xchg
mov
cmp
adc
mov
pop
inc
rcll
inc
out
out
mov
cmpsl
push
lret
xlat
pop
decl
pop
xchg
inc
sbb
inc
pop
pop
xchg
jge
mov
cltd
inc
or
lock
mov
xor
and
faddl
xchg
mov
mov
adc
sti
repnz
insb
add
mov
add
or
push
testb
in
and
push
aam
lods
mov
jecxz
out
adc
cmpsb
or
mov
dec
aaa
aad
lret
ds
add
rorb
or
mov
mov
ljmp
or
lret
add
iret
fdiv
hlt
xchg
mov
shlb
cmp
fs
rolb
push
popa
jl
sbb
jecxz
jecxz
ret
and
out
bound
cmpsb
mov
ror
mov
mov
or
stc
mov
cmpsb
insl
adc
sbb
cmp
aaa
pop
inc
cmp
add
test
mov
add
adc
in
push
sbb
pop
jb
pusha
mov
pop
addb
dec
es
mov
pushf
pmulhw
sub
add
xor
shrl
int
cmpsb
mov
or
aad
hlt
jp
add
push
cmpl
leave
adc
pop
shl
xor
jp
xor
mov
cld
mov
aam
xchg
cmp
xor
adc
mov
aaa
sub
sbb
add
sti
inc
scas
sbbl
add
or
xor
mov
stos
es
cmpsb
push
aaa
jecxz
mov
iret
add
ja
mov
mov
pop
inc
in
mov
std
ret
push
pop
adc
cmpsb
push
addr16
movsl
push
push
aaa
sub
dec
clc
or
inc
add
inc
and
add
or
je
xor
and
push
sub
or
ret
js
add
in
leave
into
mov
adc
js
jl
push
add
push
sub
jl
jb
add
stos
movd
into
insb
mov
aaa
int3
int
sbb
jle
int
dec
cmpsb
adc
cld
inc
dec
xchg
jnp
mov
arpl
pusha
iret
fisttps
in
mov
pop
pop
mov
and
pop
add
and
add
or
jns
jne
ret
or
test
cmpsb
nop
push
inc
loope
add
jg
jecxz
flds
sbb
inc
sbb
stc
lahf
sub
mov
cmp
mov
xchg
jns
pop
cmpsb
mov
popf
mov
cmpsl
out
ror
in
fcmovnu
mov
adc
out
sub
scas
popa
cmp
push
cmpsb
cs
cltd
sbb
rcr
iret
add
push
jmp
inc
jp
or
out
cmpsb
out
or
filds
xor
scas
and
data16
ja
imull
pop
ss
in
imul
bound
and
mov
dec
dec
inc
enter
in
jne
ret
pusha
in
sbbw
andb
sub
mov
dec
stc
or
jne
dec
ds
push
leave
dec
psubd
and
into
clc
outsl
fldcw
add
xchg
add
lods
inc
push
pop
add
shr
stos
pop
cmpsb
sbb
inc
or
aaa
loopne
and
insl
jns
imul
fwait
pop
scas
add
xchg
lods
adc
ret
data16
sbb
pop
lock
lods
pop
add
sub
mov
lods
std
andb
aam
mov
sub
or
add
imul
push
inc
push
jbe
pusha
mov
aaa
cmpsl
js
lcall
jp
add
test
popf
xor
add
imul
cmpsb
push
les
aaa
negb
and
loopne
add
push
xchg
add
mov
jecxz
add
inc
mov
fldenv
dec
add
fwait
clc
mov
adc
movsl
popa
push
sub
cmpsb
mov
mov
push
cli
popf
les
ror
add
arpl
inc
add
aaa
mov
js
pop
cwtl
int
inc
add
jns
dec
sbb
mov
inc
mov
xchg
push
icebp
jbe
sub
xchg
cmp
cwtl
jno
adcb
and
fildl
cmpsb
lods
pop
pop
mov
dec
cmp
mov
add
iret
iret
mov
and
sub
or
inc
add
int
dec
out
sahf
xchg
add
inc
push
hlt
cmpsb
scas
scas
sbb
sub
jp
aam
or
repz
rcrl
and
lea
add
in
shrb
cmpsl
jge
fwait
add
fstps
pushf
fidivrl
stos
lods
loop
rolb
push
sete
lea
popf
leave
mov
push
or
mov
add
sbb
filds
inc
xor
mov
mov
movsb
cld
jp
adc
sar
pop
add
incl
inc
fldl
mov
xlat
add
jns
int
xorb
cmp
gs
dec
add
dec
cmpsb
sub
pop
and
repz
jg
movb
jne
mov
mov
mov
in
add
ret
js
pusha
inc
push
stos
jns
dec
sbb
rcrb
test
insb
loope
stos
xor
push
push
mov
xlat
xor
jbe
pop
es
inc
sub
cmpsb
mov
jge
fnsave
push
mov
add
cld
adc
add
push
lahf
int
and
inc
lods
cmp
mov
inc
push
es
adc
add
idivb
lahf
aad
cmpsb
add
pop
addb
or
cltd
add
jbe
push
repnz
jg
je
xlat
rolb
add
or
pop
sbb
xchg
bound
mov
sbb
and
mov
flds
cmp
int
inc
jnp
cmpsb
call
dec
data16
push
std
xor
sbb
aaa
adc
in
sub
cmpsb
push
and
ret
jno
mov
mov
imul
cmp
mov
push
dec
aaa
pop
cmp
add
lock
push
int
add
push
fistl
daa
push
add
out
add
ret
pop
leave
inc
fbld
xor
repz
leave
xchg
jmp
inc
sbb
push
aaa
fbld
inc
movl
fstpl
and
pop
pop
sub
xchg
push
cwtl
xchg
cmpsb
adc
orl
aaa
sub
pop
add
mov
out
jne
adc
cmp
call
jg
and
sbb
aaa
ret
popf
jl
data16
add
mov
aad
mov
pop
test
sbb
add
inc
or
aaa
dec
fsubr
xorb
in
movsl
add
or
sbb
add
lahf
insb
jg
mov
push
cmpsb
add
push
ret
pusha
jl
xor
test
data16
sbb
jg
loopne
mov
std
pop
sub
fadd
pop
jne
mov
insl
add
outsb
mov
add
mull
imul
gs
ret
push
in
notb
fisttpll
repz
leave
arpl
mov
sub
jle
xchg
shrl
jbe
or
cli
les
enter
xor
test
xchg
push
mull
leave
cmp
icebp
aaa
inc
fsubrp
incl
mov
add
cmpsl
sbb
loopne
xchg
cmp
mov
add
add
or
loope
mov
mov
mov
push
ret
mov
ret
aad
xchg
lcall
pop
xor
pop
jmp
cmpsb
inc
packuswb
fcoml
into
xchg
cmpsb
sbb
sbb
push
aaa
or
inc
and
adc
pop
mov
cltd
inc
lret
aaa
mov
mov
cmpsb
imul
loopne
aaa
mov
inc
xchg
clc
jbe
cmpsb
sti
push
pop
adc
scas
shrb
add
in
inc
movsb
cwtl
test
test
loope
mov
mov
jae
lods
adc
mov
lcall
rcrl
movsb
sbb
jnp
xlat
out
and
cld
add
inc
arpl
add
lahf
std
or
out
cmpsb
test
fcompl
xor
and
scas
mov
adc
loope
and
xor
mov
out
add
jne
call
stos
add
push
inc
push
ret
pop
adc
aaa
and
mov
pop
hlt
adc
clc
mov
xchg
jb
push
int
or
gs
xchg
ja
cmpsb
mov
mov
setae
sub
mov
flds
inc
jg
sub
test
imul
cmpsb
mov
out
sahf
repz
call
cs
iret
arpl
adc
add
cmp
or
dec
insl
push
das
ret
cmp
out
mov
js
ret
dec
xor
aaa
aam
mov
rcrb
push
scas
cmpsb
or
pop
cmp
add
test
in
lods
adc
or
addb
mov
push
movsb
adc
pusha
fcoml
test
mov
push
cld
cli
out
pop
cltd
bnd
pop
dec
fcoml
and
dec
xor
enter
bound
repz
mov
aam
sub
dec
xchg
add
and
fimull
inc
in
cmc
cmpsb
fs
repz
lds
fwait
cmp
add
outsl
cli
xor
or
push
adc
jno
aaa
xchg
in
aaa
pop
sbb
arpl
add
or
cmc
or
push
bound
je
add
neg
addr16
fcomp
add
jmp
or
add
jecxz
mov
push
sbb
cmp
xchg
shrb
mov
out
dec
cmc
add
push
jle
inc
add
jp
hlt
mov
and
or
cmpsb
dec
dec
and
leave
aad
push
sbb
push
movsl
loopne
in
or
add
xlat
pop
test
push
inc
add
jecxz
push
mov
xchg
inc
sub
into
sub
xchg
add
outsl
or
call
pop
add
and
xchg
push
add
and
xchg
xor
push
push
sub
enter
add
push
sahf
in
jno
inc
add
jp
sbb
in
in
rorl
mov
sub
mov
inc
sbb
aaa
mov
xchg
test
je
jecxz
jb
pop
ljmp
adc
add
mov
add
pop
adc
out
dec
mov
cmpsb
in
add
and
cld
repz
aaa
mov
call
sub
insl
popf
ret
or
cmp
jbe
aad
add
mov
lret
sbb
dec
xor
aaa
adc
rcrl
push
xchg
rcrb
jnp
aaa
jge
inc
mov
xchg
callw
ret
adc
leave
add
add
jnp
pop
insb
lds
int3
iret
push
add
scas
rol
jl
or
add
fiadds
mov
lds
ret
jo
xor
pusha
xchg
add
ja
xor
mov
das
push
sbb
testl
inc
sbb
mov
or
pop
add
in
std
and
out
lea
and
mov
adc
adc
jbe
add
addb
push
enter
or
cmp
test
mov
xchg
and
lock
test
dec
lcall
fwait
bound
mov
dec
out
inc
sbb
mov
andb
sbb
cmpsb
mov
leave
jbe
jo
inc
jne
mov
cmpsb
mov
pop
punpckldq
aaa
fcompl
icebp
shlb
fimull
or
jno
xor
dec
and
jnp
aaa
test
mov
roll
or
loope
lret
xchg
popf
lods
cmp
adc
ljmp
sbb
xor
jb
pop
add
jg
pop
jmp
inc
lahf
je
std
xor
bnd
xchg
adc
mov
pop
cmpsb
adc
fld1
aaa
cmp
lcall
sub
aaa
cwtl
pop
push
sub
xor
lcall
push
add
inc
icebp
mov
mov
fldenv
fcompl
sbb
push
jno
sti
dec
mov
mov
inc
jbe
add
repnz
iret
sahf
lcall
jae
imul
push
fisttps
cmp
loope
mov
mov
dec
cmpsb
mov
mov
or
inc
stos
lock
sub
dec
xchg
pop
xor
and
cwtl
lods
xchg
mov
movsl
xor
shlb
out
add
lods
jg
push
add
mov
jmp
jp
sub
inc
jnp
in
mov
xlat
ret
movsb
lahf
dec
push
aaa
scas
leave
cmp
pop
call
jbe
jo
packssdw
loopne
inc
flds
in
lret
sub
mov
xchg
es
cwtl
aaa
mov
mov
mov
xor
lcall
push
xor
and
xchg
roll
test
addl
or
sbb
ret
sahf
sub
mov
les
jbe
xchg
add
jle
fs
cs
fldl2t
lahf
add
add
pop
dec
mov
mov
sbb
ds
push
mov
les
mov
dec
lods
jp
cmp
mov
or
mul
ret
sub
and
jo
repz
imul
inc
in
lods
into
add
pop
out
add
cld
lods
inc
push
outsl
nop
mov
popa
sub
rolb
test
push
mov
imul
pop
cmpsb
fldcw
xchg
inc
add
cmp
movsl
sub
xchg
add
dec
inc
add
push
xchg
out
push
xchg
test
inc
fucomip
std
or
push
adcl
adc
inc
jecxz
jo
dec
cli
hlt
mov
xor
and
mov
aaa
cmpl
add
mov
cwtl
cmp
mov
jle
jae
and
sahf
sub
pop
es
push
cli
jno
push
add
mull
push
dec
add
fidivs
out
loopne
fnstcw
sbb
push
pop
xchg
inc
aaa
shll
jne
xor
cltd
mov
int
outsb
add
jbe
in
fbstp
ljmp
incb
pop
gs
pusha
adc
cmpsl
lea
pop
or
fwait
es
loope
jl
dec
test
sbb
daa
mov
data16
push
xor
aam
add
add
jbe
cld
push
fmulp
add
jno
and
je
add
das
cli
mov
scas
rcr
xor
inc
mov
inc
pushl
jmp
bound
mov
xor
arpl
lret
add
imul
lcall
out
sbb
cmpsb
or
test
stos
sbb
xor
sbb
sub
inc
cmpsb
adc
add
or
movsb
add
pusha
add
xchg
aaa
rcr
and
scas
andb
xor
hlt
push
sbb
aaa
cmp
in
mov
xchg
andl
xor
in
loope
adc
jne,pn
pop
add
pop
xchg
and
in
fnsave
ret
pop
std
stos
inc
add
pop
movsl
test
jmp
mov
cli
rorl
stos
jns
pop
aaa
imul
dec
sbb
adc
rcr
mov
pop
add
mov
add
xchg
xor
and
jns
dec
imul
mov
aaa
or
xor
jl
add
lds
push
fwait
pop
aaa
inc
jecxz
ftst
xor
ss
bound
jne
addr16
add
pop
sub
sahf
inc
rorb
sub
push
add
ss
fdivrl
pop
xor
jmp
rcrb
xor
lcall
jecxz
cmpsb
inc
push
xor
pop
imul
or
test
sub
ret
mov
arpl
sarb
and
loopne
rolb
aas
add
mov
add
cmp
loope
sbb
sub
cmp
xor
add
decl
aad
call
cwtl
xchg
fwait
sub
call
cmpsl
and
push
sbb
inc
cmp
adc
sbb
jne
sub
adc
xchg
in
stos
roll
mov
dec
fs
pop
int3
int
mov
add
leave
pop
jecxz
inc
rorb
push
dec
mov
and
sbb
jg
inc
add
cmpsb
add
into
gs
mov
cmp
cmpb
mov
call
scas
enter
nop
mov
inc
insl
repnz
pop
ljmp
addl
leave
add
pop
in
dec
clc
push
in
adc
or
mov
call
divb
fimull
cmpsb
and
mul
and
stos
inc
push
ret
flds
push
jle
inc
adc
and
idivb
jg
loopne
cmp
sbbb
mov
sbb
mov
dec
cmpsb
out
push
and
add
xor
inc
fs
cmpsb
fsubs
aas
fdivs
movsl
aaa
xchg
add
fcmove
jle
sbb
fwait
stc
enter
add
jns
xchg
sahf
xchg
rol
jae
cmpsb
jle
or
mov
xor
hlt
push
add
stc
out
add
fimull
add
stos
data16
inc
sub
sbb
arpl
add
push
rcll
xchg
lock
mov
pop
mov
push
clc
ficoml
in
test
xlat
loopne
jl
out
and
inc
add
lds
xchg
push
clc
fdivs
mov
nop
jp
push
jne
ss
xor
jecxz
movsb
sarl
loopne
fbld
cmp
jno
pop
dec
aaa
push
test
cmpsb
mov
dec
test
jbe
cmp
push
mov
add
add
shrb
add
add
ja
xor
inc
mov
pop
mov
mov
movsl
push
pusha
jbe
xchg
push
xor
aaa
pop
adc
add
std
dec
add
pop
mov
add
adcl
imul
pop
jb
sub
cmpsb
add
call
mov
add
push
push
jnp
push
movl
push
cmp
int
xor
push
dec
outsb
into
push
cmp
mov
idivl
xchg
outsl
xchg
xchg
scas
and
imul
push
sbb
xor
xchg
addb
rorl
imul
sbb
jmp
mov
mov
ljmp
mov
int
add
dec
rol
push
cltd
cmp
cmpsb
mov
and
and
xor
mov
xor
incl
or
call
mov
dec
pop
cmpsb
mov
daa
pop
mov
mov
xchg
pop
stos
xchg
testb
sbb
popa
roll
mov
js
lahf
loopne
clc
or
cmp
push
pop
aam
add
adc
sub
adcl
push
in
jmp
cmpsb
ja
pop
stos
mov
mov
fnstsw
in
movsl
mov
aaa
dec
test
lret
aaa
jo
mov
filds
xor
lods
mov
push
adc
add
fdiv
les
add
adc
lods
mov
dec
inc
pop
push
pmaxsw
mov
or
jnp
jg
mov
cmp
adcl
dec
out
sbb
cmpsb
xchg
xor
icebp
dec
test
sub
aaa
dec
push
mov
out
push
icebp
iret
push
outsb
jmp
out
ss
pusha
sbbl
aas
lret
mov
xor
bound
dec
aaa
ror
or
pop
lds
add
inc
add
hlt
lock
pop
cmpsb
shl
bound
aaa
imul
repnz
dec
cmpsb
xchg
lcall
push
inc
adc
movsb
mov
xlat
sbb
adc
jae
add
in
mov
icebp
ret
push
dec
add
addr16
mov
cmp
adc
mov
lods
ret
sub
mov
ss
movsl
into
sbb
xor
mov
adc
mov
hlt
cmp
sbb
aaa
negb
scas
lret
test
mov
xchg
push
pop
loopne
xchg
or
mov
xor
jl
movsb
aaa
lahf
lds
cmpsl
push
mov
pop
mov
in
aas
dec
aaa
cmp
imul
pop
xchg
enter
out
mov
test
jno
add
jae
lcall
cld
cmp
cltd
pop
add
clc
mov
cmpsb
es
dec
or
lahf
adc
sub
push
inc
add
lret
cmp
rorb
pop
in
movsb
add
leave
cmp
mov
fldcw
push
jae
rclb
pop
pop
fwait
adc
sbbb
xor
sub
jb
scas
cmpsb
movsb
jmp
test
xor
xor
xor
jl
out
xchg
loopne
gs
mov
subb
push
mov
outsl
test
sbb
out
push
cmpsb
pusha
dec
repz
add
out
cmpsb
movsb
ja
mov
loopne
testb
shrb
push
mov
adc
addr16
add
add
push
pop
pop
subb
jl
mov
push
and
repz
repz
sub
and
fmuls
cmpsb
pop
cmc
test
sub
xchg
or
movsb
mov
mov
add
mov
xlat
add
adc
xchg
cltd
sbb
scas
mov
lds
fnstenv
mov
cmpsb
xor
xchg
aaa
cmp
add
mov
daa
ljmp
hlt
aaa
popa
fsubs
xor
pop
adc
rolb
push
dec
fcompl
and
adc
clc
fadds
xchg
adc
ljmp
addb
mov
pop
adc
xchg
pop
xchg
scas
outsb
mov
aaa
out
mov
pop
add
adc
test
out
jle
aaa
inc
sbb
in
hlt
add
mov
loope
lret
sub
int
xor
pop
mov
lods
jg
sub
icebp
jb
or
push
stc
cmp
lcall
movsb
jns
jnp
mov
mov
shrl
push
jns
mov
in
popf
imul
jb
aas
mov
inc
test
es
and
hlt
and
int3
push
cli
cmpsl
loope
cmp
lea
adc
or
fisttpll
call
insb
sub
push
jbe
shl
roll
jne
add
out
call
stos
push
std
ljmp
iret
loope
jge
sahf
scas
mov
mov
ret
in
mov
lds
xorb
add
or
cmpsb
les
push
pop
adc
adc
jnp
inc
notl
shlb
add
lahf
cs
loop
add
add
ljmp
or
mov
pop
mov
add
sbb
pusha
add
fstps
or
adc
mov
arpl
add
data16
add
jae
sbb
sbb
cmpsb
dec
pop
push
sbb
int3
jb,pn
adc
jo
pop
xchg
fsubr
cmc
pop
mov
add
fiaddl
jns
cli
call
cmpsl
sub
fnsave
jo
pushf
gs
xlat
cmp
cmpsb
sub
mov
xor
imul
aam
call
in
jmp
or
cmpsb
xor
mov
aaa
and
stos
xor
lods
push
lock
fildl
dec
mov
xchg
dec
out
pop
jb
add
xchg
ja
sbbb
cmpsb
xchg
or
stc
mov
sbb
and
xchg
pop
xor
in
push
push
cmp
popf
aaa
dec
das
rorb
push
aam
inc
pusha
pop
jp
ljmp
insb
add
xor
and
stc
push
mov
in
sub
push
inc
jnp
jbe
cmpsb
cmp
out
stc
and
arpl
lcall
mov
push
xchg
pop
add
fadd
daa
add
fisttpl
repnz
mov
and
mull
add
hlt
sar
add
jge
dec
add
pop
jp
mov
sbbb
leave
adc
imul
push
std
mov
andb
xchg
inc
add
aaa
movsl
lahf
pop
fstpl
daa
mov
pop
add
sub
das
pop
orl
leave
lds
out
adc
cmp
daa
les
in
test
fcmovnu
in
insl
loopne
mov
icebp
ss
push
loop
push
inc
mov
pop
mov
popw
test
imulb
cmp
out
mov
pop
lock
adc
jmp
movsl
adc
shlb
pop
popf
aaa
xor
mov
add
lcall
sub
xor
cmc
pop
mov
aam
sahf
aaa
adc
je
aaa
and
aad
mov
xchg
xor
sbb
lods
add
arpl
outsl
push
add
hlt
mov
add
xor
xlat
xor
fimull
inc
cld
lods
xchg
fwait
outsl
ret
cmpb
cmp
inc
mov
rclb
pop
fdivrs
cwtl
cmpsb
pop
ja
push
clc
movsl
push
cmp
jmp
sub
sarl
outsl
movsl
push
cmpsl
in
repz
mov
scas
pop
jb
xchg
cmpsl
ja
nop/reserved
aaa
or
outsl
xchg
xchg
fucomp
dec
pusha
test
jnp
cmpsl
les
scas
sbb
daa
testl
add
inc
rorl
lods
sub
sub
jnp
scas
add
mov
cmc
mov
sbb
loope
adc
dec
out
sub
aam
movsb
stos
scas
xor
ds
stc
push
out
fwait
cmpsb
mov
shrl
aaa
push
xor
push
mov
sbb
add
xchg
cltd
cli
fbld
in
mov
lahf
sub
aaa
sbb
out
scas
mov
jno
int
jnp
aaa
mov
enter
lods
pop
aaa
jae
stc
mov
push
xor
xor
jmp
loop
pop
sbb
cmp
sarl
inc
fdivrp
pusha
lods
lods
lea
pop
push
dec
aam
sbb
mov
decb
sbb
adc
cmp
cli
mov
add
lahf
push
fwait
pop
repnz
ret
cmp
cmpsb
out
imul
adc
shll
popl
mov
pushf
xchg
lds
xchg
pop
nop
mov
js
int3
inc
inc
add
popf
jbe
xchg
sarb
push
xchg
pop
dec
or
int3
mov
mov
out
pop
xchg
adc
iret
add
jo
pop
pop
jnp
repz
pop
daa
mov
push
push
inc
inc
loope
cmpsl
call
mov
jmp
mov
add
in
test
add
sbb
stc
lahf
cmp
inc
sub
out
inc
add
cwtl
jae
pop
fxch
sub
and
fsubs
sti
sbb
mov
lds
dec
mov
sub
test
cmp
jecxz
shl
cmpsb
push
cmp
dec
push
jb
getsec
aas
or
out
lods
incb
pop
data16
arpl
jno
xor
cmpsb
clc
push
rorl
lods
mov
add
mov
aaa
and
push
mov
ljmp
adc
loopne
cmp
sti
pusha
out
ja
or
aaa
scas
popa
mov
icebp
pop
mov
cmpsb
fldenv
es
aaa
push
ss
into
fisubrl
cld
sbb
sbb
xor
clc
shrb
mov
add
and
lds
lods
cltd
push
into
and
stos
sti
mov
jno
gs
xlat
inc
bound
add
sbb
shl
adc
mov
jge
vorps
sub
scas
mov
dec
dec
add
mov
mov
add
and
fisubs
movsl
xor
test
mov
cmpsb
and
add
orl
mov
push
cmpsb
xchg
fildl
shll
in
cmc
orl
dec
cltd
pop
add
or
ss
inc
jl
cmpsb
push
sub
push
xchg
and
sub
push
outsl
add
mov
test
pop
add
aam
out
out
movsb
or
into
inc
xchg
movb
or
mov
push
dec
push
ja
loope
fxch
loopne
or
push
xchg
into
inc
test
lahf
cltd
shl
das
or
mov
ss
add
pop
add
clc
nopl
ret
xor
popa
inc
push
add
rorb
add
xchg
add
cmpsb
lds
pop
pop
cmp
stos
xor
pop
sub
pop
mov
add
inc
mov
push
inc
cmc
aaa
dec
mov
mov
xor
dec
add
insl
stos
lret
push
inc
xchg
add
pop
xor
cmpsb
jp
call
cli
aaa
dec
mov
out
enter
cmp
leave
mov
mov
lea
add
push
push
mov
mov
jb
mov
movsb
cmp
xor
ds
sbb
push
xchg
xor
mov
fwait
adc
insb
mov
das
cli
aas
sbbb
pusha
js
inc
jmp
frstor
lahf
ss
adc
bound
or
adcb
bound
fsubr
rclb
aaa
cld
dec
gs
jl
cmpsb
cli
out
inc
xchg
jae
adc
jbe
lock
and
add
ficoml
lret
sub
jno
and
dec
add
iret
dec
push
inc
pop
push
aam
mov
lahf
and
mov
in
shll
aaa
push
pop
roll
dec
cmpsb
add
cmp
mov
adc
popa
repnz
daa
test
pop
pop
inc
cltd
into
add
cld
add
add
faddl
xchg
inc
push
jge
cmp
movsl
scas
push
mov
push
cmpsb
inc
ds
inc
push
ljmp
pshufw
mov
aaa
jbe
nop
mov
out
test
pop
pusha
xorb
stc
xchg
call
jp
sbb
cs
push
testb
leave
and
mov
aas
pop
ds
aad
mov
inc
xchg
enter
or
mov
mov
imul
adc
sbb
add
fimull
jecxz
ss
cmp
out
sbb
sbb
or
mov
mov
pushf
mov
dec
mov
add
repz
pusha
add
ljmp
cmpsb
jge
add
aaa
ljmp
inc
sbb
lea
rorb
loopne
iret
sbb
cltd
arpl
pusha
push
inc
push
out
lea
add
mov
jl
mov
out
into
aaa
int3
dec
pop
pushf
jae
or
cmp
out
push
test
popa
dec
lcall
insb
ret
outsb
fnstcw
inc
and
xor
movl
xchg
aaa
push
gs
clc
mov
adc
push
popa
sbb
fcoms
dec
dec
rorb
ljmp
loopne
daa
ret
jne
jecxz
cwtl
mov
add
popl
adcl
pop
add
hlt
pop
roll
pop
or
cmp
movsb
mov
cltd
mov
out
hlt
adc
mov
fadd
clc
push
add
sbb
ss
inc
pusha
push
rcrb
movsb
outsl
add
push
icebp
mov
outsb
xor
cmp
pop
btc
mov
pop
push
arpl
add
out
push
scas
add
popa
inc
out
test
cmpsl
pop
push
push
aad
cmp
fisubrl
fsubrl
shrl
mov
addr16
sbb
add
mov
mov
repz
fcoms
fisubl
jno
xor
push
jecxz
mov
cmpsb
sti
daa
fmulp
add
in
repz
add
shrb
inc
push
sbb
pop
inc
fiaddl
aam
sub
scas
pop
jle
movsb
push
add
mov
test
pop
pop
or
or
mov
pop
icebp
movsb
dec
push
loope
mov
ret
adc
test
push
mov
adc
das
jle
nop
into
andb
xor
aaa
in
sbb
jne
cwtl
loop
dec
ret
movsb
ret
push
aaa
lods
push
cmpsl
adc
add
cmp
or
test
and
push
lcall
icebp
idivb
std
inc
daa
cs
outsl
pop
cmp
xor
adc
xchg
test
lret
add
jnp
outsb
pop
repz
es
xchg
push
dec
clc
dec
pop
mov
dec
adc
in
or
jle
sub
adc
aaa
jno
cli
cmp
pop
xchg
in
pop
incl
dec
mov
lods
sti
pop
adc
fldenv
add
shl
cmp
stos
add
rcrb
xchg
test
data16
dec
pop
add
stos
and
adc
xlat
mov
aam
xchg
repz
decb
jg
mov
add
iret
jb
xchg
mov
in
cli
inc
inc
xchg
insb
mov
push
and
das
lcall
sub
fcomi
add
pop
add
aaa
push
and
add
sbb
lock
mov
movb
loop
aaa
add
xchg
xor
je
imulb
aaa
jae
jmp
adc
jecxz
lret
cmpsl
jbe
sub
lea
or
scas
or
ja
arpl
icebp
add
pop
repnz
and
jp
mov
cmp
in
aaa
sbb
mov
jo
pop
push
mov
push
stos
orb
mov
nop
aas
push
push
mov
sti
add
and
mov
stc
sbb
sbb
add
jb
je
pop
sti
pop
mov
push
jae
test
ja
aaa
add
xor
enter
int3
sbb
adc
sbb
xchg
je
mov
cmpsb
shr
test
fildll
push
dec
pushf
and
lods
xchg
jae
in
out
rcrb
mov
push
and
jge
daa
mov
icebp
xor
aaa
push
sbb
pop
subb
test
mov
hlt
sahf
imul
mov
adc
add
sbb
mov
adc
fsubrs
jl
cmp
bound
rolb
fwait
cli
add
lods
mov
lret
les
add
shrb
or
add
mov
jmp
jle
imul
add
mov
pop
lods
xchg
pop
mov
jne
lods
inc
or
add
sbbb
jmp
jne
out
push
cmpsb
stos
sbb
or
dec
lods
cltd
mov
add
xor
in
arpl
movsl
jae
cs
xchg
shll
inc
ss
shll
push
cmpsb
inc
cmpsb
inc
stos
mov
inc
jp
sub
xchg
pushf
and
ret
adc
lcall
sub
add
loope
sti
lods
xorl
movsb
pushf
movsl
aad
and
lock
jg
push
sbb
add
call
mov
xchg
cmp
pop
mov
push
push
or
cmp
out
jl
push
daa
mov
xchg
lret
cmpsb
sub
jge
rolb
cmp
add
add
mov
push
loope
icebp
fsubr
loope
gs
push
cmp
out
fists
pusha
add
stc
adc
xor
mov
push
pushf
push
inc
rcrb
mov
xchg
loopne
cltd
int3
aaa
hlt
lods
pusha
mov
cmp
mov
lods
mov
stos
aaa
xor
fildl
mov
aam
loopne
es
add
push
cmpsb
popa
scas
mov
aaa
jbe
xor
mov
mov
pop
mov
js
pusha
or
out
push
mov
jno
fdivl
push
out
dec
inc
and
shlb
dec
cmpsl
fiadds
jnp
stc
xorl
repz
mov
cmp
sbb
jns
xlat
into
in
movsb
shll
sar
cmpsb
add
jbe
or
iret
pushf
mov
adc
push
fucom
into
das
xor
adc
pop
jmp
in
std
dec
ja
in
lds
out
xor
lods
or
imul
sbb
adc
inc
xchg
xor
adc
add
cmp
inc
mov
cmp
xchg
lock
cmp
lea
gs
pop
mov
dec
cmpsb
in
insl
fsubr
mov
mov
push
lock
mov
mov
xchg
leave
aaa
add
rol
test
shrl
push
adc
movsl
cltd
pop
jae
sub
pop
or
data16
sub
ja
mov
cmpsb
or
sub
bound
mov
push
fildl
popf
cmp
jb
aaa
inc
sti
cli
dec
imul
jmp
andb
cmp
jb
popa
pop
push
add
into
mov
or
out
jns
sbb
sub
xchg
roll
testb
sti
sar
cmp
fdivrl
lret
int3
cmp
dec
mov
add
shll
add
test
sub
addr16
insl
add
and
jb
nop
xchg
lahf
fidivs
mov
adc
sbb
movsb
in
jmp
mov
dec
adc
lea
cmpsb
jge
dec
jl
call
scas
scas
in
inc
xchg
negl
mov
and
jg
xor
sti
ret
add
and
data16
int
addb
jl
or
cmp
out
inc
sbb
mfence
lods
aaa
inc
and
lahf
pop
stc
lods
lock
inc
push
pop
bound
flds
cmp
dec
jbe
cmp
pushf
aaa
jge
cld
adc
out
aaa
sub
jp
add
data16
insb
xor
in
and
mov
mov
mov
cmpsb
mov
sti
push
shrl
push
aad
adc
sahf
adc
out
nop
cmp
and
pop
test
aam
test
fwait
mov
or
out
cmp
cmpb
ret
mov
lea
cmpsl
shlb
in
shll
mov
adc
pop
scas
xchg
inc
add
aad
jnp
cmp
add
mov
cmpsb
flds
popa
dec
sbb
aaa
sarl
pop
and
nop
mov
and
dec
shrb
stc
mov
and
or
adcb
int3
out
cmp
aaa
jecxz
outsl
clc
aam
stc
sahf
add
test
mov
adc
add
mov
repnz
sbb
mov
lods
inc
pop
add
xor
fucomi
add
jne
xchg
adc
add
stc
iret
shl
lds
adc
mov
add
addr16
lcall
and
call
stos
sub
mov
mov
outsl
cmp
inc
fdivr
and
xor
mov
int
and
inc
test
fsubrs
xor
je
insb
push
inc
push
add
adc
jg
sub
lock
mov
adc
pop
add
fxch
scas
add
int3
xchg
mov
arpl
adc
jl
xor
in
add
data16
mull
outsl
lock
cli
or
add
insl
dec
mov
in
sti
xor
jnp
int3
add
icebp
clc
mov
bound
cmpsb
jae
fisttpl
cwtl
mov
push
mov
or
dec
lods
xchg
bts
test
hlt
inc
inc
xchg
fimuls
mov
rorb
es
xor
cmp
pop
add
in
jge
rolb
iretw
addb
push
mov
add
or
jle
in
cmpsb
pop
je
push
cli
cltd
ror
sti
sbb
sahf
addb
sbbb
mov
outsl
add
pushf
xor
add
push
mov
cmpsb
test
dec
push
out
cmp
fsubs
inc
push
adc
pop
or
xor
xchg
inc
sub
cltd
movsl
inc
cli
dec
std
mov
add
xlat
testb
pop
cmc
xor
sub
or
movb
into
stos
sti
sbb
ja
xor
lods
xor
jp
mov
pop
stos
test
daa
xchg
mov
aaa
mov
testl
xor
ret
jl
inc
cmp
aaa
jne
mov
jg
popa
mov
mov
add
and
ds
loopne
ja
pop
lahf
cltd
push
pop
cmpsb
test
mov
test
insb
stc
or
mov
jmp
xor
jae
fldl
lret
les
pushf
push
es
je
mov
fcmovbe
dec
add
pop
pavgw
adc
sbb
hlt
dec
or
inc
loop
xor
jecxz
push
pop
xor
scas
insb
dec
sub
nop
mov
sbb
aas
jg
rcl
sbb
fsub
cmpsb
decl
loopne
add
add
loope
sbb
and
or
cmpl
xlat
fwait
dec
add
ret
outsl
xchg
push
or
addb
movsl
cmp
xchg
call
mov
pushl
inc
mov
push
stos
mov
cltd
jns
jne
lret
insl
xor
aaa
call
lods
push
pop
shr
add
cmp
mov
xchg
pop
dec
add
inc
jmp
xchg
mov
aaa
mov
ljmp
ret
fs
xchg
addb
jg
test
adc
addl
mov
movsl
cmp
cli
sub
xchg
add
fbld
mov
inc
inc
js
imul
jmp
cltd
sub
lahf
mov
push
bound
xor
inc
inc
rcrb
addr16
imul
add
test
rclb
pop
fidivl
adc
mov
enter
add
imul
add
fdivrs
ss
cs
pusha
movb
dec
and
mov
sbb
pop
adc
rcl
dec
lahf
jne
aaa
adc
push
xlat
add
jge
mov
sub
cltd
push
push
jne
fadd
loopne
call
inc
jg
or
inc
push
inc
aas
test
mov
xor
xchg
aaa
jne
push
lods
cmp
shll
aad
dec
subb
mov
jbe
sbb
mov
clc
dec
adc
jecxz
rorb
xchg
frstor
sub
mov
add
cmc
and
jns
mov
popa
adc
in
xchg
jnp
push
lock
add
xor
cmp
pop
inc
xor
pop
add
je
mov
dec
push
mov
repnz
out
and
inc
add
inc
and
negb
fldt
xchg
cmpsb
sbb
outsb
adc
frstor
lods
cmp
mov
std
cmp
mov
pop
es
shlb
ret
add
inc
in
imul
fldenv
push
les
loop
mov
mov
std
pop
cld
cli
lds
fnstsw
add
pop
push
pusha
sti
inc
cli
mov
add
inc
arpl
mov
cmp
sti
test
xlat
sbb
imul
add
inc
ja
mov
ljmp
jo
push
xchg
ja
jo
negl
fsub
push
mov
mov
out
fsubp
jb
mov
jno
ret
sbb
add
ret
mov
jp
insb
add
out
and
add
inc
inc
mov
xchg
into
pop
mov
ret
les
imul
movsb
add
lcall
mov
xor
test
es
pop
xchg
hlt
aaa
orl
pop
outsl
push
movl
clc
jle
xor
fwait
shl
arpl
daa
lahf
lcall
push
lret
xor
add
mov
cld
dec
xchg
add
bound
xchg
add
push
in
jo
movsl
fwait
das
mov
div
dec
mov
daa
int3
loop
aaa
inc
dec
mov
outsb
and
sub
sbb
ficompl
lds
mov
push
das
sbb
mov
and
fcomip
add
sbb
sub
fsubl
add
sbb
pop
imul
fimuls
aaa
out
ficomps
add
popf
mov
aam
aaa
or
jnp
cmp
icebp
push
into
popa
incb
xchg
stos
mov
mov
daa
pop
cmpsb
fdivs
enter
cwtl
aaa
gs
out
add
or
mov
xorb
out
mov
dec
dec
enter
lods
pusha
rolb
or
incb
je
stc
cmp
lret
leave
add
in
cli
scas
popa
xchg
lcall
inc
inc
mov
cmp
movsb
sub
add
loope
ljmp
jo
pop
xchg
add
sbb
add
jmp
or
mov
repz
push
rolb
jne
jmpw
jg
dec
or
aam
mov
jmp
lods
dec
jo
cltd
and
fdivs
pop
mov
add
icebp
fld1
xchg
subb
add
dec
mov
adc
into
dec
aad
jne
roll
mov
mov
cmpsb
fiaddl
cld
push
push
add
cs
push
push
insb
jg
and
push
xchg
aad
sub
xchg
inc
mov
mov
pusha
fidivl
repnz
lcall
sbb
aas
adc
rcrb
in
pop
dec
fldl
outsl
mov
mov
jo
clc
addr16
leave
cmpsl
iret
out
int
loop
mov
and
jmp
xchg
sub
add
mov
andb
outsl
mov
xor
loope
xchg
lahf
scas
cmpsb
mov
cmp
dec
mov
push
add
and
cld
add
and
call
movsl
sbb
repnz
cwtl
inc
add
imul
fstl
pop
loopne
dec
aam
aaa
xchg
sbb
fadds
pop
test
fwait
daa
cmp
sbb
jge
int3
sbb
aas
add
mov
stos
or
mov
pop
orb
jns
xchg
out
and
cmpsb
add
inc
cld
jb
jns
stc
icebp
xor
and
ret
dec
mov
cwtl
les
enter
inc
jecxz
add
adc
cmp
hlt
int3
scas
pop
fs
lahf
repnz
dec
jle
jecxz
es
aaa
inc
mov
add
or
xor
add
push
jecxz
js
outsb
inc
adc
add
add
add
cmp
cmpsb
aas
add
mov
aam
cmp
and
rorl
sub
mov
xor
aaa
pop
or
call
aas
sub
in
loop
cmp
inc
subb
lret
sbb
push
aas
add
aaa
fwait
addr16
testl
jae
inc
jl
cmp
sahf
fisttpl
xchg
mov
aaa
iret
ffreep
inc
mov
aaa
test
push
inc
mov
clc
fsubs
ss
and
icebp
mov
cltd
scas
sbb
pushl
adc
divb
scas
or
enter
cmp
cmpsb
jns
jge
cmp
push
xor
mov
mov
cmpl
aaa
loopne
notl
push
jl
mov
dec
aaa
jecxz
rcl
lahf
lock
mov
mov
lcall
sarb
push
xor
sub
or
jg
mov
cld
loop
xor
mov
add
push
pop
ret
int3
cmpsl
loopne
sbb
inc
scas
add
sbb
fld1
add
sub
js
out
adc
xchg
lods
adc
add
mov
add
cmpsl
js
sbb
cmpsb
and
pop
fnstcw
cmp
stc
xchg
das
adc
aad
jecxz
sub
data16
adc
scas
jns
or
lock
cmp
roll
popa
add
fildl
test
lock
cld
cwtl
push
xlat
push
adc
aaa
xlat
push
mov
add
sbb
add
test
push
stos
cmpsb
in
dec
jl
call
xor
pop
cmpsb
add
add
push
cs
xchg
aaa
ljmp
icebp
add
loope
adc
imul
stos
mov
sahf
aam
push
lret
pop
inc
aaa
lcall
push
add
and
xchg
xchg
push
add
fstp
add
dec
mulb
outsl
lcall
movsb
pop
stos
test
cmovno
mov
inc
pusha
int
aaa
ficoms
sub
mov
les
fisubl
aaa
pop
sub
xor
fsubrs
push
psubq
push
fld
mov
movsl
lea
enter
add
pop
jae
sbb
cmp
mov
andb
and
call
add
adc
inc
iret
movsl
test
inc
add
imul
cmp
xor
push
imull
aaa
scas
lea
int3
cmp
insl
inc
loop
mov
into
push
cmpsb
sub
aas
outsb
sbb
jne
sbb
dec
fwait
jmp
out
inc
or
mov
add
scas
fimull
shll
outsb
leave
push
in
in
cmp
mov
mov
add
out
and
or
dec
cwtl
jp
clc
mov
xor
push
dec
and
xchg
and
add
cmp
pop
pop
bound
mov
imul
int3
and
push
xchg
insb
jb
aaa
movhps
push
out
add
pusha
nop
mov
push
dec
jecxz
fisubrl
xchg
dec
add
sbb
dec
or
cmp
cmp
lock
aas
pop
fs
imul
add
sub
gs
cmpsb
xchg
jg
roll
lds
sub
mov
push
sbb
xchg
adc
jmp
in
cmpsl
das
negl
mov
pop
pop
or
mov
ret
add
jle
enter
jns
xlat
push
inc
lea
in
mov
sub
or
sub
xor
xchg
add
test
jp
mov
negb
mov
stc
pop
push
add
sbb
imul
push
outsl
es
push
sbb
fmul
pop
shrl
add
mov
xchg
rolb
inc
outsb
clc
sbb
and
pop
mov
mov
add
xchg
mov
icebp
xor
add
inc
adcl
test
lock
jbe
pop
pop
add
push
and
adc
cmpsb
cltd
ds
xor
adc
int
aam
xchg
sub
rcr
int
popa
aaa
jns
icebp
daa
sahf
jo
add
sahf
ret
or
sub
ja
mov
mov
rclb
enter
sub
out
adc
push
sarb
push
add
inc
cmc
add
jae
or
cmp
mov
gs
repz
fsubl
xchg
cmpsb
sbbb
inc
aaa
inc
mov
jp
sti
sti
jne
movsl
xor
je
dec
xlat
enter
add
mov
lock
and
cmp
shll
jns
test
faddl
inc
repz
lcall
cld
aaa
shrl
xor
push
cmp
mov
sti
push
add
sbb
aaa
outsl
dec
repnz
and
sub
push
cmp
mov
add
faddp
dec
mov
mov
xchg
shlb
xor
pop
jnp
out
data16
iret
xchg
xor
pusha
sbb
icebp
insl
xchg
loopne
dec
add
xchg
dec
mov
add
jp
or
jbe
pop
mov
inc
inc
jl
mov
clc
outsb
pop
sub
hlt
xor
sbb
xchg
shll
movsl
push
rolb
add
mov
vmovsd
push
push
mov
xchg
outsb
mov
pop
in
xchg
mov
pop
adc
jecxz
pop
or
add
pop
outsb
cmp
xor
add
add
jecxz
insb
cmp
mov
in
push
mov
fistpl
pop
push
cmpsb
ds
rol
fwait
push
jg
add
out
jp
mov
leave
add
stc
dec
xor
xchg
xor
cmp
or
fidivs
add
fsubs
nop
jnp
ret
cmp
cmc
pop
mov
xchg
sbb
pop
sbb
stos
shl
sbb
dec
sahf
mov
iret
divl
mov
pop
ret
sbb
mov
pop
shrb
clc
mov
sahf
cmp
push
mov
test
pand
and
sbb
xorl
cmc
in
fs
inc
lea
mov
cmp
lods
int
out
mov
mov
adc
ret
in
insb
sub
and
bnd
jg
gs
lock
stos
add
lcall
mov
sub
dec
or
mov
cltd
add
jnp
andl
mov
sbb
subl
add
push
push
ficoms
ljmp
es
incb
mov
loopne
mov
addb
scas
xchg
sbb
inc
mov
cmpsb
mov
pop
jge
test
mov
pop
cli
and
mov
adc
cld
jne
mov
data16
xlat
aaa
mov
cmpsl
or
or
or
movsb
mov
mov
jg
pop
cmp
rcl
roll
repz
imul
dec
sahf
push
std
push
add
repz
jo
stos
cmp
push
cmpsb
jnp
cmpsb
adc
mov
sahf
xor
lret
sub
sbb
outsb
or
and
loopne
push
mov
sub
mov
pop
pop
and
testb
xchg
das
pop
mov
push
or
stos
xchg
or
insb
rorl
movsb
mov
add
gs
push
cmp
add
mov
outsb
pop
fists
loopne
mov
cmpsl
dec
test
add
bound
mov
sbb
inc
mov
out
movsl
outsb
lock
xchg
stos
int
adc
add
cld
dec
and
faddl
inc
add
aad
dec
imul
pop
sti
in
fists
out
fbstp
lret
push
sti
movsb
sbb
lock
movsl
cmp
inc
jmp
inc
mov
lahf
and
add
sbb
testb
hlt
dec
in
loopne
add
adc
push
push
add
adc
xlat
xorb
into
lret
xor
jl
adc
jae
cmpsb
bound
mov
xor
xchg
sbbb
jno
hlt
std
loopne
push
xor
jl
enter
test
arpl
mov
into
gs
aas
pop
mov
movsl
mov
push
mov
inc
or
push
mov
xchg
jge
shl
ret
inc
lds
aaa
xchg
scas
lret
mov
jns
imul
aad
les
cs
jle
mulb
xor
pop
inc
sbb
mov
push
icebp
fsubrl
clc
mov
push
cmp
mov
add
mov
pop
or
pop
das
jmp
popf
lar
or
test
ret
inc
pop
mov
jo
insb
lods
or
add
sbb
orl
sbb
andb
inc
sbb
pop
cwtl
or
or
dec
fsubl
and
fbld
fcomi
ja
aaa
xchg
pop
sbb
xchg
adc
add
out
add
enter
in
lahf
jns
mov
mov
aaa
push
sub
add
or
in
adc
sub
cld
xor
add
dec
sarb
add
mov
rcll
aaa
inc
ret
cmp
repnz
test
dec
push
push
popf
mov
xor
pop
ja
jb
popa
cltd
repz
cmpsb
out
add
bound
xchg
jg
jle
dec
mov
pop
mov
stc
in
cmpsl
and
shrb
cs
and
xor
mov
repnz
sarl
test
add
mul
jl
pop
mov
fs
stc
jg
shl
mov
pop
fcoml
cmp
sbb
jp
jmp
aas
jne
xor
jle
and
loopne
dec
pop
aas
add
test
push
xor
popl
add
iret
imul
push
xor
cmp
cwtl
int3
inc
fs
aaa
dec
fdivs
gs
sub
mov
push
mov
lret
jo
cmpsb
pop
das
test
jne
es
xchg
sahf
sub
mov
cs
sub
cmp
ja
adc
cmpsb
les
shlb
gs
loop
mov
jl
inc
push
fs
add
pop
bound
push
cmp
ret
shlb
jmp
imulb
cmpsb
insb
mov
mov
aaa
ss
sbb
cwtl
sbb
mov
xorl
jp
addl
rcrl
sbb
push
jg
mov
leave
add
or
dec
aad
notl
mov
jb
mov
test
sub
sub
jns
adc
cmp
push
out
xchg
xchg
repz
imul
pushf
push
inc
into
pop
or
and
and
push
call
xchg
cmc
xchg
push
xchg
aaa
mov
push
popa
ret
add
mov
mov
cli
push
scas
cs
xorb
inc
mov
add
shll
push
xor
mov
add
sub
jno
out
leave
pop
and
jge
jl
int3
fidivrs
adc
or
ret
aaa
jns
mov
cmpsb
xchg
addr16
aas
out
pop
loop
xor
inc
js
jl
cmpsb
jns
lods
xor
je
cmc
inc
into
add
repnz
stos
xchg
scas
inc
cmpsb
push
inc
adc
fdivrl
sub
shll
xlat
scas
lret
ljmp
dec
sub
test
int
in
mov
add
fstps
dec
mov
adc
cmp
nop
fcompl
add
lcall
pop
test
outsb
test
mov
aad
clc
sar
psubsw
adc
loopne
jle
ja
add
mov
adc
mov
push
cmp
jns
les
into
dec
xchg
jo
add
je
test
enter
sbb
mov
mov
or
aaa
or
sub
adc
cmpsb
xchg
cmpsl
inc
int3
loop
mov
aaa
lret
test
rcll
cltd
jns
add
stc
cltd
adc
add
jge
dec
pop
xchg
pop
and
adc
sub
outsl
inc
int3
js
add
lret
mov
shl
jp
cmc
jae
nopl
cmpsb
stc
out
sbb
js
inc
out
push
add
or
mov
and
rol
jmp
pop
sub
sub
stos
xor
mov
add
xchg
mov
mov
fisubrs
cld
sbb
jle
aaa
pop
add
lds
jae
mov
xchg
xchg
dec
popf
das
add
mov
inc
out
fnstenv
fnstsw
pop
fidivrl
xor
js
lahf
dec
aaa
lods
or
leave
icebp
popf
push
movl
jg
lret
popl
test
jae
xor
cmp
pop
xchg
and
leave
sbb
popa
xor
add
sub
jecxz
cmpb
aaa
jb
sub
lahf
js
mov
ss
mov
fidivs
jbe
xor
inc
and
mov
out
aaa
add
cwtl
je
aam
adc
cmpsb
test
ljmp
popa
cs
push
icebp
pop
jb
pop
daa
outsb
cmpsb
pop
ja
jle
pop
add
mov
jecxz
push
cwtl
shlb
aaa
xchg
push
fcmovnu
popf
add
imul
mov
call
jnp
or
or
pop
fstl
dec
push
jle
xchg
pop
push
sub
inc
inc
xor
sbbb
mov
jne
cmpsl
pop
sbb
and
int3
popa
jo
les
imul
mov
inc
bound
pusha
cltd
sahf
add
stos
aaa
out
push
add
mov
cmp
jmp
sbb
scas
int3
in
add
dec
stos
lock
sub
jb
aaa
arpl
pop
mov
jp
mov
jp
lea
mov
aam
inc
movsl
inc
jb
out
loop
mov
adc
or
add
sbb
movsl
push
mov
loop
mov
jmp
push
add
xlat
sar
or
jmp
jmp
cmp
mov
cmp
stc
add
mov
jge
outsb
pusha
dec
cltd
push
adc
inc
mov
jle
sti
dec
inc
cmpsb
sbb
mov
inc
xchg
mov
adc
andl
sbb
inc
movd
xchg
int
fcomip
popf
push
mov
pop
mov
jle
aaa
ds
scas
xchg
dec
popf
in
add
sbb
mov
mov
jmp
data16
aad
pop
adc
sub
mov
ja
aaa
xchg
inc
shlb
lods
shlb
das
adc
aaa
mov
popf
push
mov
sbb
xlat
lahf
jbe
insl
cwtl
add
inc
int
and
in
add
lcall
mov
jg
mov
rorb
add
sub
xchg
jb
sbb
verw
cmp
jb
aaa
or
mov
pop
out
test
or
add
or
insb
fcomps
int3
mov
lods
out
lcall
dec
or
mov
fcoml
repz
dec
mov
imul
in
add
ficoms
outsl
add
push
push
sub
incl
xchg
fimull
xchg
sbb
or
mov
lods
mov
mov
sbb
shlb
add
push
cmp
mov
sub
scas
adc
jle
lods
add
les
into
clc
xor
xchg
or
aaa
gs
xor
daa
movsb
fadds
aaa
dec
cmc
sahf
push
sahf
aaa
int3
push
add
pop
pop
cltd
or
inc
lea
or
jmp
mov
scas
xor
not
aaa
mov
repnz
mov
mov
jno
mov
mov
inc
jae
out
or
out
cmpl
xlat
pop
jo
xchg
add
mov
add
mov
push
out
shrb
jecxz
or
pusha
imul
push
loop
adc
and
jae
cmp
imul
ret
push
ljmp
pop
pusha
jecxz
inc
cmp
jnp
dec
out
mov
pop
fwait
mov
adc
add
pop
mov
movsb
test
cmpsb
cltd
add
xor
mov
aaa
xor
lods
cwtl
mov
push
test
and
pop
test
shlb
test
jb
in
pop
enter
xlat
push
icebp
cmpsb
shlb
in
fnstsw
out
push
aaa
call
jbe
rorl
cmpsb
adc
fidivrs
cld
hlt
daa
rcrb
stc
imul
repz
cmp
stos
add
mov
inc
es
stc
pusha
stos
scas
sub
and
sbb
add
ret
sub
daa
jp
iret
xchg
fdivrs
jg
aad
inc
or
inc
cld
and
hlt
adc
aaa
dec
fsubrl
xlat
pop
xor
push
mov
pop
jecxz
or
xor
stc
add
daa
mov
add
xor
bound
add
adc
repnz
inc
xor
dec
addr16
mov
adc
sbb
mov
inc
push
add
int3
push
daa
and
rolb
push
rclb
add
loopne
add
cmp
cmpsl
mov
add
testb
push
shr
pop
pop
inc
sahf
pop
mov
inc
cwtl
std
aas
cmc
repz
faddl
pusha
adc
loop
aaa
or
and
mov
mov
cmp
out
jle
jne
mov
pop
popf
outsb
xor
mov
pop
in
or
aaa
sub
cmc
std
icebp
loop
aas
and
hlt
filds
adc
cld
xor
adc
push
sbb
femms
mov
adc
test
loop
xorl
call
dec
mov
scas
cmp
arpl
out
addr16
and
cmc
or
jmp
adc
test
push
ret
jg
les
push
fsubr
int
outsb
pop
dec
xor
pop
add
subb
mov
sbb
cmp
int
mov
sub
out
dec
movsl
jnp
scas
push
adc
gs
xor
or
jae
clc
mov
or
jmp
mov
sub
in
add
push
repnz
push
or
push
jnp
aaa
in
loopne
cltd
push
rcrb
cmp
lret
int3
fistpl
xor
std
mov
out
jmp
jmp
aam
aaa
xchg
cmpsl
push
loop
call
imul
pop
jae
lret
fbld
aam
fs
jmp
mov
lds
aaa
loope
xchg
js
add
rcl
out
dec
fcmovnu
or
xchg
push
xchg
int
xor
add
roll
sub
lock
cmp
cmpsb
cmp
repnz
test
mov
adc
dec
sbb
imul
mov
or
pop
pushf
mov
xchg
push
push
enter
push
fwait
rolb
in
xcrypt-cfb
cmpsl
out
outsb
add
or
and
lret
rorl
lea
inc
mov
or
cmp
mov
mov
or
add
dec
and
mov
mov
dec
fnstsw
cmpsb
pushf
aaa
jge
bound
and
jno
inc
ljmp
sub
lds
outsb
jns
cmpsb
loop
in
mov
pop
data16
pusha
jmp
pop
sbb
es
jecxz
arpl
ljmp
sub
add
dec
push
add
sub
add
adc
push
lods
xchg
sub
mov
sbb
ss
pushf
outsl
or
mov
xchg
pop
nop
call
movsb
or
test
inc
dec
pop
shll
fiadds
das
scas
lods
or
in
add
aad
inc
mov
xor
push
mov
outsl
pusha
push
mov
jb
sahf
jae
add
push
jbe
adc
xchg
lods
test
test
and
mov
and
mov
push
mov
pop
mov
pop
nop
mov
and
pop
push
bound
push
xchg
mov
lock
cmp
inc
subb
push
je
fstp
leave
jne
adc
dec
xchg
aaa
shrl
push
fldl
add
ret
scas
push
shll
mov
or
add
and
inc
add
sub
stos
sub
add
sub
add
pushl
aaa
or
dec
aam
testb
mov
shrl
dec
pusha
dec
mov
ds
int3
outsb
out
push
subl
pop
or
push
enter
lds
addr16
cmp
push
jnp
arpl
ja
pop
adc
xor
xchg
adc
or
in
aaa
iret
mov
dec
les
cmp
xchg
add
lcall
imul
lods
loop
stc
enter
xor
test
imul
pop
xor
mov
inc
or
les
mov
in
insb
fsubl
mov
cmp
test
push
je
testl
movsb
icebp
mov
jecxz
xor
adc
add
push
mov
push
rcrb
hlt
repz
popf
sub
mov
psllq
inc
jmp
xlat
ja
lret
pslld
sub
aaa
add
sub
fisubrl
leave
cwtl
shll
lea
mov
mov
add
dec
leave
and
lock
fmul
testl
cwtl
cmpsl
xchg
movsl
movsb
movsb
xor
xor
pop
push
ficomps
adc
jb
add
dec
push
pop
loop
cmpsb
add
dec
popfw
cltd
mov
xchg
outsl
andl
jge
push
pushl
sub
ret
test
cmp
packssdw
xorb
adc
push
inc
xor
das
mov
jmp
dec
and
data16
mov
clc
lock
cmp
addr16
adc
cld
insb
sbbl
cmp
ret
cmpsb
shrb
add
sub
xor
aad
sti
pop
andb
stos
pop
and
add
adc
fdivs
pop
mov
call
stos
jne
cmp
push
jle
or
es
mov
mov
push
iret
jae
bound
imul
add
bound
or
and
int3
push
pusha
pop
xlat
mov
dec
fcoml
inc
inc
cmpsb
dec
decl
clc
cmpsb
push
adc
out
adc
scas
mov
adc
mov
aaa
pusha
dec
add
adc
pop
inc
nop
imulb
mov
popf
scas
xchg
mov
lds
lods
mov
sbb
aad
loopne
mov
inc
in
scas
ret
scas
addl
xlat
jno
mov
arpl
add
sbb
mov
jmp
stc
jp
add
shl
inc
int3
cmp
add
fcoml
lret
and
pop
push
les
xor
inc
sub
mov
mov
xchg
js
xor
outsb
adc
mov
sub
pop
sahf
xchg
and
sbb
mov
cmp
pop
daa
add
mov
sub
inc
jnp
adc
add
sbb
pop
and
sti
cmp
pop
jbe
pushf
add
imul
rorb
ja
sahf
add
mov
add
xorb
std
xchg
add
xchg
repnz
mov
movsl
adcl
es
sbb
test
sahf
add
mov
sbbl
ss
jo
aaa
ss
stos
rcl
cmp
dec
insl
or
leave
jl
add
ljmp
mov
ljmp
daa
in
rcll
push
sub
add
in
hlt
cmp
cmpb
ret
hlt
adc
mov
or
xlat
add
cmpsb
aaa
into
mov
jns
push
or
add
pop
xor
call
sbb
xchg
je
add
fstps
ja
xor
daa
cli
out
add
cmp
dec
pop
and
aad
aaa
add
arpl
dec
jl
es
stos
std
addr16
push
jb
inc
sub
cmp
loope
add
sbb
std
pop
fwait
xchg
cld
addl
aaa
add
int3
mov
cmp
mov
stos
or
mov
add
push
mov
stos
xor
jbe
cmpsb
push
dec
fdivrp
insl
pop
clc
mov
pusha
imul
mov
xorl
adc
inc
in
jno
push
dec
jo
mov
lods
sub
xorb
sahf
dec
sub
cmpsb
ds
sahf
jno
std
lds
in
loopne
add
mov
fcoms
shl
aaa
push
movl
sub
int3
sahf
or
sub
ja
cwtl
dec
jb
lock
xchg
and
pop
aaa
push
cmp
cmp
xchg
mov
mov
dec
gs
addr16
push
int
jp
xor
mov
mov
movsb
xchg
imul
adc
pusha
cmpsb
rolb
mov
aaa
lret
push
add
sbb
inc
inc
int3
adc
ret
jl
xchg
adc
js
inc
out
fld1
mov
pop
nop
xchg
xor
adc
sarl
add
add
add
pop
mov
jmp
aaa
sbb
xchg
and
adc
ja
dec
lods
lods
inc
fldenv
adc
aaa
incb
imul
push
or
mov
out
rolb
push
dec
and
xchg
add
sbb
getsec
jbe
sbb
jae
xlat
fsts
cmpsb
xor
xor
and
sbb
pextrw
mov
aaa
dec
sbb
pop
add
cli
pop
add
or
sbb
mov
mov
and
add
incl
jl
cmp
aad
mov
rcll
add
out
sahf
in
push
dec
adc
xorb
add
clc
pop
arpl
add
sub
or
sub
inc
lret
pop
movsl
cmp
push
mov
aaa
mov
lahf
in
pop
xor
mov
mov
test
add
pop
jl
pop
cmpsb
jge
and
lcall
or
pusha
cmpsb
int
add
out
jge
jno
cwtl
adc
out
or
mov
pusha
dec
add
or
jb
add
lret
or
add
add
imulb
cmp
sub
leave
add
sahf
cmc
push
stos
sub
jbe
insb
xchg
sti
or
mov
dec
addb
roll
cmp
pop
add
int
add
cld
pop
push
inc
add
popa
lcall
movsb
inc
push
inc
divl
and
lock
pushf
adc
lahf
or
rolb
nop
add
mov
xorl
outsl
es
dec
xchg
cmp
out
xchg
adc
test
jb
xchg
test
daa
pop
mov
idiv
mov
andb
cmpsb
inc
testl
aam
jg
jbe
pop
cmp
aaa
in
cmp
jae
insl
cmp
ret
mov
mov
aaa
in
sub
mov
icebp
leave
lea
xchg
cmpsb
sar
add
or
jge
push
fcomip
pop
popf
je
shlb
jb
sbb
mov
xlat
add
sub
dec
mov
push
cmp
add
jmp
sbb
pop
inc
test
shlb
mov
or
dec
out
jae
jecxz
adc
aaa
add
push
jb
mov
lea
dec
push
hlt
loopne
ret
inc
daa
dec
jge
les
fcmove
pusha
jbe
cmpsb
dec
rclb
mov
out
in
and
mov
test
or
and
test
adc
popf
sbb
divb
adc
xchg
mov
aaa
stos
mov
fiadds
mov
xor
je
mov
lds
out
add
test
pop
mov
jmp
jbe
aam
fisubrl
or
mov
inc
test
dec
xlat
fidivl
add
mov
adc
test
cld
or
cmp
cmc
stc
aaa
push
xchg
std
ss
das
shrl
mov
or
mov
addb
aaa
and
fnstcw
or
push
cld
jae
imul
pop
inc
mov
xor
mov
cli
cmp
cmpsb
loopne
xor
loope
push
daa
aaa
aam
xchg
add
rcrb
push
xchg
pusha
mov
loop
fdivs
movb
pop
push
lds
pop
cwtl
stos
push
pop
sub
jecxz
cmp
pop
addb
insl
or
fimuls
jnp
cmpsl
bound
cmpsb
dec
sub
add
mov
add
mov
push
arpl
inc
adc
hlt
xchg
add
aam
mov
inc
insl
js
loop
and
lods
jb
loopne
dec
add
adc
pop
mov
cmp
leave
push
sub
dec
lcall
icebp
loop
inc
rclb
adc
mov
leave
pop
das
cmp
lcall
notb
sub
fdivrs
and
fwait
dec
or
add
notl
aam
movsl
data16
dec
popf
fiaddl
mov
lds
cmpsb
adc
in
call
cmc
pop
movsl
rep
adc
add
imul
imul
filds
pop
pop
dec
dec
mov
fdivr
pop
sbb
out
out
out
mov
cmpsb
add
repnz
jge
cmpsb
jp
or
dec
stos
test
cmpsb
cmp
cmpsb
int3
rorl
movsb
mov
or
scas
scas
mov
push
cltd
jecxz
int3
jno,pn
xchg
mov
sbb
mov
lea
mov
jl
test
int3
ret
jnp
leave
fisubl
cmp
aam
inc
mov
push
testb
lock
push
inc
ror
les
jmp
adc
add
es
push
sti
dec
leave
das
add
std
cmp
movsb
fadds
cmpsb
cmpsb
fistpl
aaa
add
movsb
ret
and
mov
stos
xchg
xchg
cli
push
jmp
in
inc
xchg
repnz
cmpsb
ss
sbb
lods
adc
lock
mov
scas
enter
int3
xorb
push
repz
jnp
pop
mov
cmp
popf
stos
add
stos
push
inc
mov
rcrl
mov
movsl
aaa
outsb
mov
call
cwtl
mov
sahf
pushf
loop
sub
push
aaa
add
and
xchg
jnp
test
adc
mov
xlat
add
gs
into
inc
cmp
sbb
xor
rcr
xor
dec
insl
inc
nop
sub
and
icebp
out
push
aaa
imul
sahf
sbb
nop
pop
add
cmpsb
aaa
fnsave
out
mov
lcall
adc
icebp
cmpsb
sub
clc
xor
mov
add
mov
pop
cmp
inc
cwtl
in
mov
add
mov
adcl
movntq
out
and
push
js
sub
adc
dec
mov
pushf
mov
pop
mov
out
inc
sbb
dec
pop
data16
dec
movsl
fcoml
xchg
or
or
and
mov
lods
mov
lods
and
mov
inc
and
bnd
add
insl
xchg
xor
add
or
mov
mov
cmp
rclb
aaa
mov
xchg
movsb
cmp
cmp
push
sub
subl
and
push
daa
sub
js
sbb
insb
out
sbb
mov
aaa
andl
mov
jne
cmpsb
jns
or
shll
dec
es
stos
in
cmp
shll
xchg
pushf
es
std
scas
fidivrs
outsb
cs
and
aaa
cmp
and
mov
dec
inc
dec
imul
mov
in
sti
loope
aad
cmp
add
out
pop
jle
mov
add
fstpl
cmp
lcall
add
ficomps
stos
xor
test
es
cmp
xor
in
dec
aaa
adc
xor
jae
and
add
push
push
jbe
sbb
mov
enter
push
or
leave
stos
mov
cmpsb
jns
jb
ret
push
aaa
xor
jnp
mov
push
sbb
cmp
add
add
addr16
xchg
mov
add
arpl
pop
out
and
js
andl
leave
push
xor
iret
jmp
push
fs
adc
bound
adc
ficoml
inc
push
add
mov
sti
inc
sarl
add
inc
mov
add
mov
fmulp
mov
bound
add
sbb
loope
mov
sbb
add
movsb
mov
pop
jl
or
cmp
jmp
push
push
shrb
xchg
scas
mov
add
sti
inc
inc
inc
cmpsb
movsl
push
mov
jp
test
xor
cmp
dec
lock
iret
aas
push
aas
xor
sbb
mov
or
imul
or
scas
pop
xor
mov
notl
xchg
daa
stos
mov
push
call
xor
or
js
subl
pop
int
inc
in
int3
and
inc
roll
cmp
sahf
outsb
js
mov
aaa
cmp
into
lret
stos
push
xor
xor
adc
adc
dec
pop
or
cli
xor
sbb
jae
andl
aaa
xchg
shlb
daa
enter
add
fwait
cmp
jp
xor
cli
rcr
aaa
in
xor
mov
testl
pushl
inc
jae
mov
pop
jp
inc
xchg
js
movl
int
in
ret
add
fistpll
xchg
sub
pop
mov
cmpsb
pop
loop
xor
mov
es
addr16
mov
sbb
jmp
stos
adc
push
push
and
mov
cmpl
aaa
add
xchg
pop
or
inc
andb
cmp
roll
js
js
xchg
xchg
pop
leave
lret
js
add
jg
repz
lock
ss
mov
int
data16
add
les
xlat
outsl
add
das
and
jg
leave
lods
xor
arpl
add
loop
add
adc
rep
xor
filds
dec
add
std
push
cmp
test
xchg
outsb
popa
cwtl
sbb
xchg
mov
orb
push
add
aaa
adc
push
arpl
pop
lock
aaa
adcl
cmpsb
nop
and
xchg
and
and
loopne
fbld
enter
xchg
mov
add
push
imul
add
mov
stos
sbb
repz
rcll
jno
or
insb
bound
mov
cmp
sti
xor
xor
filds
dec
push
loopne
adcb
cld
add
fstp
push
fidivl
add
sti
lods
add
clc
es
imul
bound
test
ds
mov
test
mov
jl,pn
and
loop,pn
adc
stc
cmp
mov
sub
xor
fnsave
xor
xor
icebp
outsl
add
lods
in
cmpsl
in
sub
add
xchg
push
add
adc
mov
sub
test
mov
add
sbb
pop
fnsave
add
mov
cltd
repz
aas
xchg
add
jl
cmp
inc
add
dec
lods
add
decb
cmovno
lahf
repz
enter
leave
repnz
test
aaa
xchg
jge
bound
xor
aaa
outsb
xor
add
push
nop
add
push
mov
mov
push
xchg
aaa
add
cmpb
ja
and
inc
aaa
sbb
imul
add
call
call
lahf
pusha
and
push
aaa
xor
lods
fsubp
push
jecxz
cmp
ret
or
mov
dec
imul
ja
push
mov
xchg
mov
mov
cmpl
cmpsb
aaa
cli
mov
mov
add
in
mov
fstl
add
movsb
dec
aaa
lods
shll
dec
add
add
mov
mov
pop
enter
dec
pusha
push
ja
fs
in
adc
add
iret
cmpsb
aad
xchg
pusha
jno
fisubrs
inc
push
sbb
aaa
pop
mov
lods
mov
mov
dec
icebp
and
ja
or
ja
cmpsl
insl
pop
add
jg
nop
daa
and
sbb
aaa
adc
mov
xchg
push
pop
cld
xor
mov
mov
add
mov
adc
push
dec
loop
add
int
add
pusha
xlat
stc
xor
iret
or
mov
sbb
je
xor
cmpsb
or
enter
sub
ljmp
imul
add
pushf
clc
jmp
std
repnz
mulb
rsm
movsb
xor
stc
cmp
mov
leave
inc
lcall
mov
cmpsb
and
stos
dec
sub
nop
push
das
add
lock
filds
or
or
add
rcl
adc
add
xchg
outsb
leave
mov
mov
outsb
cmpsb
aaa
rorb
push
pop
add
imul
pop
sbb
push
nop
mov
loop
jne
push
in
fcompl
or
mov
dec
mov
mov
jnp
inc
cvtps2pi
dec
add
mov
adc
mov
mov
add
mov
sub
out
or
das
mov
push
mov
ret
xor
inc
mov
inc
add
repnz
sub
xor
ficoml
in
pop
ljmp
push
loop
testl
or
adc
cmp
scas
dec
add
clc
repz
mov
aaa
iret
mov
cmpsb
sub
push
xlat
add
add
in
fs
fs
add
lds
or
lock
or
inc
fdivs
dec
repz
pop
inc
addr16
fiadds
scas
pop
into
mov
pop
mov
cmpsb
dec
lds
icebp
xor
dec
call
pusha
mov
xor
jle
jbe
add
sti
mov
aad
movsb
lods
pop
inc
add
xchg
pop
mov
dec
outsl
cmpsb
aaa
xchg
nop
pop
xchg
mov
mov
pop
es
loop
and
add
pop
inc
lds
aaa
add
adc
mov
fistps
add
pop
pop
hlt
outsl
in
add
stos
rorl
imul
cmpsb
aaa
rorb
fisubrl
rolb
ja
mov
mov
add
cld
lcall
aam
roll
jmp
sub
adc
push
add
inc
mov
add
scas
hlt
mov
jnp
add
xchg
mov
loope
add
pop
sbb
mov
xor
clc
sbb
pop
mov
into
mov
les
xchg
jae
mov
in
or
stos
push
mov
xchg
sub
fisubrs
outsb
fs
cltd
imul
cmpsb
shlb
je
es
cli
lds
test
fiaddl
cmpsb
out
sahf
pop
stos
xchg
inc
outsb
dec
add
cmp
sub
cmp
clc
push
aaa
inc
lods
jmp
jecxz
jnp
cmpsl
mov
mov
add
xor
and
lods
push
addb
and
pop
sbb
add
cmp
popa
mov
pop
jae
push
stos
ss
lcall
mov
stos
gs
push
sarb
scas
repnz
out
add
dec
or
sti
pop
mov
push
pop
cmpsb
mov
and
adc
push
jg
aaa
mov
in
xchg
add
fcompl
and
lret
scas
xchg
cmpsb
jne
cmpsb
pop
mov
ljmp
ja
stc
mov
xchg
jb
lods
int
add
xor
lahf
push
sbb
imul
test
add
stc
jo
push
or
lret
cmpsb
dec
imul
push
cmc
xchg
das
jb
or
or
mov
add
scas
add
lret
pop
xor
jnp
cmpsb
xchg
popw
shll
inc
push
in
push
dec
mov
mov
cmpsb
add
mov
jle
cmpsl
aaa
aas
inc
iret
pusha
add
inc
js
add
and
cwtl
das
pusha
cmpsb
inc
fstl
xchg
cwtl
enter
in
mov
pop
pop
push
aaa
loope
dec
adc
xchg
adc
add
and
add
nop
loopne
cli
add
ss
fnstenv
fwait
icebp
insl
out
dec
add
dec
es
fwait
sbb
adc
add
aaa
cmp
leave
add
adc
inc
push
cld
sbb
test
mov
add
jno
adc
xor
daa
out
orb
popa
cmpsb
outsb
dec
pop
cmp
xchg
adc
pop
xchg
aaa
sub
aad
popa
add
hlt
mov
aaa
jb
dec
xor
nop
sub
dec
cmc
mov
add
jo
add
lcall
lret
cmp
mov
cmp
mov
jns
stos
inc
mov
xor
cmp
or
arpl
les
out
lea
aaa
cld
sbb
and
mov
sbb
or
aaa
pop
test
jo
add
xchg
adc
es
mov
mov
lds
mov
add
mov
add
inc
pop
cld
icebp
push
aaa
adc
adc
mov
adc
lods
bnd
xchg
cmp
inc
pop
stos
pop
sbb
adcb
test
pop
fs
push
imul
cmp
pop
mov
xchg
xor
mov
aaa
inc
cmp
push
inc
movl
inc
sbb
rorb
cmpsb
cmc
and
out
mov
push
push
dec
out
xorb
add
add
lret
add
cmp
mov
add
jb
std
xsave
mov
mov
add
int
movb
sub
sub
out
lods
cld
add
mov
sbb
pop
nop
mov
or
cmpsb
fs
dec
or
or
or
cmp
jg
fdivrl
cmpsb
push
repnz
mov
sub
ror
neg
addr16
jbe
ret
jg
repnz
cwtl
aaa
arpl
imul
mov
sub
shrb
aaa
xchg
ss
jl
xlat
jns
fldcw
xchg
xchg
ja
sbb
add
mov
jb
test
jmp
cs
cld
int3
andl
test
ja
in
das
or
dec
mov
test
cmpsb
or
add
mov
add
jg
test
scas
data16
sbb
dec
mov
xor
test
test
out
push
xor
cmpsb
test
aad
dec
imul
int3
cmpsb
insb
enter
inc
mov
sti
pop
dec
testb
lods
subb
pop
divl
fdivs
jl
sub
les
dec
cmpsb
imul
mov
das
popa
inc
mov
cmp
cmp
cmp
prefetchw
sarl
loopne
adcl
in
cmc
loope
xchg
add
jb
inc
cmpsb
pop
lods
mov
xor
popa
xor
ljmp
in
add
pop
and
add
mov
mov
out
add
sbb
jl
rolb
cmc
cmpsb
mov
inc
xor
aaa
jae
or
pusha
cmp
or
scas
pop
ja
add
incl
mov
pop
fdivs
clc
jno
push
popf
filds
push
arpl
aaa
jo
jo
or
arpl
jecxz
aad
imul
mov
mov
cmpsb
incl
jp
mov
xor
add
in
push
loop
mov
scas
jmp
push
mov
add
into
push
mov
jo
sbb
fiaddl
adcb
xor
adc
enter
fsubs
add
ja
mov
movsb
sbb
loop
cwtl
inc
cmp
pand
and
mov
mov
incb
mov
enter
sbbl
or
loopne
lea
fistpl
icebp
fdiv
inc
mov
out
scas
dec
adc
loope
sub
dec
pushf
sbb
push
enter
ja
std
xor
pop
jo
jo
pop
mov
cli
mov
aaa
pop
pop
or
bound
xor
xor
daa
add
jbe
imul
jae
int
xlat
adc
mov
stos
adc
js
cmpsb
sarl
mov
out
add
push
lret
sbb
push
sbb
sub
aaa
jmp
clc
aas
hlt
loop
call
pop
cmp
xor
mov
cmp
pop
push
imul
cwtl
adc
aaa
mov
dec
ficompl
dec
test
insl
mov
fdivs
shll
xchg
movsl
inc
cmp
sbb
lock
or
and
pop
aaa
xorl
mov
pop
out
test
ja
sbb
aaa
mov
fcoml
add
popl
push
add
mov
sub
xchg
or
aaa
push
push
add
sub
jb
enter
inc
aaa
push
sbb
cmpsb
ret
test
pop
ljmp
sub
ss
jnp
xchg
mov
cld
xor
sbb
and
sbb
outsb
xor
and
fistps
insl
xor
jae
mov
lret
mov
call
pcmpgtd
xor
pusha
xchg
adc
dec
loopne
lahf
xchg
out
pop
push
inc
xlat
scas
int
add
sub
cwtl
sub
iret
push
out
enter
pop
pop
mov
clc
idivb
sbb
ret
std
mov
subl
ss
pop
repz
xchg
inc
ljmp
sub
leave
sub
push
fwait
insb
cwtl
outsb
insl
neg
add
jnp
test
xchg
push
cmpsb
rcrb
test
cmp
sub
movsl
aaa
mov
mov
xchg
das
sbb
sub
ds
mov
sbb
inc
test
pop
jno
push
int
xor
and
aaa
jno
cmp
push
js
ss
inc
mov
push
and
jne
out
inc
mov
shl
push
insl
pop
testl
adc
inc
xchg
rorl
inc
outsl
je
int
fimuls
arpl
sbb
mov
push
das
cmp
loope
add
mov
add
mov
addr16
imul
adc
jmp
add
imul
sbb
cmpsb
inc
outsl
insb
mov
imul
js
or
xchg
int3
hlt
notl
sub
cmpsb
jne
aas
and
pop
cmp
or
adc
jecxz
insw
adc
loop
in
add
sahf
movsb
inc
ss
or
pop
mov
mulb
scas
push
test
out
mov
loope
cmp
movsb
enter
push
inc
inc
push
aaa
in
cmp
sbb
je
cmp
lds
cli
cmp
pop
or
fbstp
add
lret
cltd
loope
cs
data16
push
inc
or
fxch
mov
jb
cmpsb
fimull
fcom
push
jecxz
in
sbb
inc
or
pop
scas
jno
pop
cmp
xor
ret
mov
cwtl
xchg
mov
add
divb
shrb
hlt
add
xchg
pop
sub
mov
neg
jns
sahf
pop
xor
or
pop
aaa
dec
push
mov
add
xchg
jp
test
xor
enter
jmp
scas
mov
fildll
push
mov
add
inc
addr16
sub
xchg
test
adc
rolb
add
cmpsl
lret
out
mov
dec
pop
xor
push
mov
pop
dec
and
mov
xor
push
ja
sub
das
xor
cmovns
add
sbb
dec
mov
inc
add
jg
jbe
sbb
in
out
nop
dec
mov
push
xchg
xchg
rcr
or
fwait
inc
pop
aaa
sti
jae
clc
xchg
repz
lods
pop
or
aas
or
adc
es
sbb
or
jo
dec
sti
loop
mov
cwtl
pop
sub
or
jne
xor
and
adc
popf
cmp
dec
jns
cmp
repnz
lods
and
mov
sbb
dec
mov
add
push
dec
xlat
call
mov
adc
push
scas
pop
out
test
clc
cmpsl
dec
orb
inc
das
mov
out
sbb
cli
and
jne
inc
adc
xchg
jne
mov
jg
in
cmc
dec
shl
repz
stc
mov
cltd
pusha
pop
lret
jl
cmpsb
imul
pop
push
ss
dec
imul
iret
jae
rcr
loop
cmpsb
dec
or
pop
jg
dec
test
jnp
fbstp
clc
out
cmpsb
sub
mov
jl
pmaddwd
data16
fisttpl
leave
xlat
call
lahf
or
arpl
insb
aaa
add
scas
mov
sub
fldenv
mov
addr16
enter
por
cmpsb
imul
cld
outsl
cmp
fs
add
ja
pop
cs
jge
mov
enter
jg
add
fwait
inc
or
sbb
cmpsb
xchg
rcll
push
imul
cmp
int
or
ret
add
jnp
xor
push
cwtl
jns
lods
rol
fmuls
sbb
imul
pushf
outsl
in
lds
in
insb
or
nop
repz
pop
sbb
xor
shl
mov
addr16
addb
jmp
icebp
dec
addr16
sbb
clc
inc
and
aaa
sub
push
add
adc
sub
pop
pop
into
push
add
out
pop
mov
out
js
ss
rcrl
cmpsb
inc
xor
jle
or
sub
icebp
and
xchg
int
fistpll
cmpsl
psubw
data16
add
adc
cmpsb
push
mov
jg
cmpsb
dec
aaa
xor
push
pop
or
outsl
jg
jmp
rorb
mov
je
mull
rorl
cmpsb
sub
ljmp
sahf
adcl
shll
pop
stos
mov
mov
sahf
loope
repz
movsb
add
jbe
inc
pop
add
sub
sbb
add
pushf
repnz
sbb
inc
aam
xor
leave
add
jmp
cltd
sub
repz
int3
sahf
divl
mov
inc
mov
mov
repnz
mov
mov
jecxz
add
arpl
mov
sti
adc
sbb
std
hlt
mov
in
jmp
inc
cmp
pop
inc
je
aaa
ret
xchg
and
adc
push
jge
add
bound
dec
addr16
sbb
enter
cwtl
stos
jne
jmp
and
ss
cwtl
ret
xchg
push
pop
gs
fadd
rcr
push
cmpsb
rclb
scas
hlt
enter
aas
pushf
les
jle
and
sub
fisttps
pop
sahf
andl
lret
push
xor
cmpsb
xchg
stos
lret
inc
xor
xor
shl
adc
jle
je
cmpsb
push
or
mov
fxch
inc
fiadds
mov
ja
jp
rol
and
imul
cld
lea
dec
aaa
test
xor
out
inc
mov
xchg
push
leave
inc
jecxz
fcoms
cmp
rorl
pop
movsl
push
xchg
add
sbbb
cmp
inc
sub
add
je
cmp
pop
jbe
mov
inc
adc
mov
cltd
out
gs
jecxz
imul
pop
fucomi
adc
and
sbb
popf
mov
sub
cmpsb
shll
add
stos
aaa
fsts
jg
add
push
and
in
mov
loope
mov
out
lods
not
cmpsb
or
lahf
jmp
push
and
sbb
div
nop
shll
or
bound
pop
or
clc
ja
cmpsb
fidivl
cmp
fdivr
jmp
mov
add
sbb
inc
das
bound
scas
sbb
push
in
dec
adc
add
lcall
jle
mov
sti
or
shrl
dec
push
pop
mov
sub
gs
dec
loopne
arpl
push
test
xor
outsl
pop
mov
popf
shrb
add
inc
outsl
repz
inc
push
aam
adc
push
lahf
dec
push
add
aaa
fiaddl
inc
push
int3
ret
jmp
je
lahf
mov
adc
mov
push
cmpsb
add
popa
cmp
ljmp
scas
add
jbe
pop
inc
out
mov
pop
test
add
mov
push
jle
dec
icebp
outsl
adc
or
sarl
outsb
fisubrs
in
inc
push
xchg
jne
mulb
xchg
jnp
add
and
jns
lret
test
jo
adc
mov
add
pop
sub
cmpsb
repnz
dec
insb
aaa
jno
cmp
mov
cmpsb
pushf
call
mov
aaa
scas
jmp
xor
add
xchg
jns
dec
cmp
push
iret
add
popf
lea
lret
cltd
or
movl
cmp
or
mov
mov
cmp
add
mov
mov
loopne
dec
sbb
cmc
lret
mov
orb
lea
adcl
test
cmp
sbb
add
test
mov
roll
dec
test
or
call
aad
jo
and
sub
shlb
pop
dec
mov
flds
xor
cltd
adc
mov
sbb
jmp
jmp
lea
popf
push
cltd
inc
aaa
add
jmp
add
bound
jg
add
sub
push
nop
jp
push
cmpsb
or
xor
push
aaa
je
inc
cmpsb
lea
nop
stc
in
outsl
jge
dec
adc
out
mov
sub
cmpsb
outsl
add
shll
enter
insl
sub
sbb
sbb
or
mov
cmp
mov
mov
push
push
jg
xchg
sbb
pop
jnp
aaa
fstpt
in
inc
pop
mov
int3
sub
push
stos
ss
jne
add
out
fsubl
and
pushf
sub
push
dec
add
mov
and
and
cmpsb
clc
cmp
xchg
int3
xor
mov
xor
add
pusha
and
xchg
roll
adc
pop
test
pop
neg
ss
dec
add
into
add
dec
mov
jne
sbb
cmpsb
loop
ficomps
jnp
loope
cmpsl
jns
xchg
in
pop
dec
jno
cmpsb
aas
add
enter
nop
aaa
stc
scas
rcll
and
lahf
std
add
mov
or
fistps
pop
adc
xchg
sub
sbb
jl
cmp
or
cmpsb
push
arpl
aad
ror
mov
xorl
add
xchg
leave
jmp
jb
outsl
addr16
or
mov
push
jbe
das
jle
roll
adc
mov
and
push
mov
pop
push
leave
push
enter
cmpsl
adc
aaa
push
stos
cmp
das
mov
mov
popf
testl
jge
fisubs
cld
xor
and
mov
fs
ja
cmp
je
xchg
inc
xor
jo
or
pop
cmp
xchg
repnz
mov
cmp
cwtl
pop
add
fdiv
lock
aaa
lahf
mov
adc
test
in
or
jne
aaa
dec
xchg
ss
cltd
lahf
jno
add
pusha
push
pop
aam
ret
sub
push
mov
fisubl
ret
mov
cmp
daa
mov
repz
cmpsl
lahf
cmpsl
cmp
lcall
out
sub
movsl
dec
fidivs
shll
sbb
pop
add
adc
and
out
adc
fstpt
mov
aaa
sbb
mov
pop
mov
sti
cmp
push
pusha
cmp
mov
push
pop
mov
cmp
add
add
xor
lds
aaa
dec
mov
test
mov
cmpsb
cmp
mov
jb
jbe
adc
int3
call
fstl
xchg
xchg
daa
enter
mov
inc
cmpsb
cs
fisubrl
mov
xchg
into
add
fbstp
add
mov
lock
aaa
jle
call
sub
and
addl
lock
test
add
jnp
dec
and
outsl
aaa
mov
insl
xchg
insl
add
sbb
dec
sbb
add
inc
fwait
xlat
fisubl
xchg
push
mov
push
xor
pop
cmp
sbb
sbbb
sbb
pop
adc
shll
filds
jge
pop
lods
adc
push
jb
jno
clc
xchg
daa
shll
sahf
out
test
jle
adc
rcrl
testl
sub
push
add
mov
pop
add
inc
dec
cmc
clc
ret
jp
aaa
push
mov
dec
jp
cmpsb
sbb
push
push
aaa
js
test
out
fstps
insl
leave
xor
xor
push
cmp
out
inc
jg
movsl
jmp
adc
aad
loopne
iret
stos
cs
loop
addps
sbbb
mov
cmpsb
xor
sbb
lcall
lock
mov
out
dec
lret
out
aam
bound
out
pop
or
add
int3
xchg
dec
icebp
out
rolb
xchg
push
sub
cwtl
out
jle
pop
roll
repz
cmc
fidivrl
scas
xor
call
push
jecxz
out
push
adc
mov
cmp
mov
sti
aaa
test
sub
or
xchg
pushf
add
fidivl
mov
sub
push
lock
outsl
push
nop
ret
js
adc
fwait
aaa
mov
add
inc
and
mov
pushf
or
popl
mov
movl
sahf
inc
xchg
jecxz
cmpsb
push
out
sub
add
pusha
outsl
sbbb
movq
out
mov
pusha
or
pop
sarl
jbe
cmpsb
and
pop
adc
repz
jno
pushf
sahf
xchg
inc
es
cmpsb
jne
loop
cmpsl
ret
cld
imul
cmpsl
jmp
mov
mov
and
pushf
pop
cmp
add
in
jg
ds
cmp
prefetchnta
push
aaa
or
pop
fstl
enter
mov
jb
jno
filds
emms
or
jl
cmp
cmpsb
inc
ret
sbb
ds
cmp
xchg
aad
push
push
sarb
add
pop
pusha
jmp
sarl
mov
popa
loope
out
sbb
aad
add
rcrl
xor
push
or
and
fdivp
pusha
aaa
sub
jecxz,pt
dec
cmpsb
mov
pusha
stc
mov
inc
adc
jl
mov
jns
outsl
push
xchg
cmp
and
push
mov
clc
test
je
dec
lsl
in
lret
sbb
aaa
xchg
leave
inc
stos
push
xchg
jp
add
stos
int
xchg
xchg
loopne
pop
cmp
aas
mov
aam
cwtl
clc
xor
add
addr16
leave
in
mov
sbb
lret
sbb
xor
fcmove
and
cltd
add
mov
or
fidivs
mov
adc
mov
sahf
inc
pop
add
mov
jnp
lods
add
stc
pop
sub
pop
add
ja
inc
dec
push
divl
mov
sbb
push
icebp
add
push
aaa
iret
adcb
cmc
shll
stc
mov
loopne
or
xor
fldcw
fldenv
test
aaa
cmpsl
out
push
pop
popa
add
sarl
popa
stc
add
lods
decb
xor
jg
inc
repnz
pop
jmp
aaa
lods
mov
stos
stos
sbb
aaa
jmp
push
add
ds
mov
insl
gs
dec
ja
sti
cmp
cmp
add
bound
xchg
add
stc
jb
fs
fidivrs
mulb
adc
add
fcomp
cli
cmp
call
mov
or
xor
adc
add
mov
mov
popa
out
inc
hlt
push
cmp
cmp
je
std
jnp
scas
cmpb
add
stos
pushf
or
xor
dec
fmuls
adc
nop
addl
mov
cltd
in
addr16
adc
cmp
add
mov
push
test
aaa
dec
cmc
stc
fcmovnb
mov
add
pop
jg
negl
cltd
xor
jo
lds
iret
cmpsb
aad
jmp
sub
adc
cmp
xor
push
clc
push
daa
sbb
or
hlt
cmpsl
je
inc
ja
add
inc
pop
mov
jno,pt
rolb
mov
xchg
int
mov
aaa
jecxz
push
dec
inc
subb
scas
push
xor
sbb
lds
sbb
icebp
stos
pop
das
mov
ss
mov
cmpsb
ljmp
ss
in
sbb
icebp
out
cmpsb
and
or
jmp
push
mov
or
dec
rolb
mov
sbb
insb
push
aad
add
mov
add
mov
pop
mov
pop
mov
shrb
push
aaa
ljmp
xor
adc
jne
or
aaa
lods
adc
pusha
and
in
mov
decl
sub
dec
jne
adc
mov
mov
cmp
mov
loope
in
mov
mov
add
shll
pop
pop
divb
adc
dec
jle
cmpsb
nop
movsb
stc
mov
adc
stos
push
pop
pop
call
out
dec
add
inc
xchg
jle
arpl
cmpsb
ret
out
jmp
out
aaa
lcall
add
sbb
jecxz
movb
dec
out
mov
movsl
push
iret
dec
movsb
gs
clc
xor
add
dec
sarl
fistpll
cmp
mov
repz
aaa
mov
pop
inc
jnp
daa
push
adc
add
push
or
mov
in
in
sub
jp
xor
outsl
pop
fcmovne
or
nop
push
and
add
aaa
mov
test
mov
in
jecxz
int3
pop
in
lret
cmpsb
cwtl
fsubrs
mov
add
enter
scas
jnp
cmpsl
sahf
cmpsl
mov
xchg
mov
aad
fisttpl
and
rclb
das
ljmp
int
mov
and
cmp
movntq
std
jnp
dec
lahf
xor
add
mov
orb
aas
cld
insl
shll
and
inc
cmp
mov
pop
xorb
or
aaa
scas
or
cmp
gs
faddl
arpl
push
sti
int3
incl
aaa
cltd
mov
mov
xchg
shlb
cmp
aaa
push
jne
or
add
cld
mov
jecxz
test
xor
icebp
pop
clc
and
sarl
push
mov
xchg
aaa
sahf
sub
mov
fbld
aam
mov
pop
jmp
and
push
test
fsts
inc
faddl
shrb
xchg
mov
popf
ret
mov
lods
add
or
pop
ja
pop
jmp
repnz
stos
lret
nop
mov
cmc
add
in
shll
mov
or
add
fucomp
add
int
jno
mov
pop
mov
stos
cmpsb
add
adc
dec
xchg
cmp
xor
jle
pushf
sub
cmpsl
jp
mov
mov
mov
xor
lods
lret
ficoml
pushf
sbb
pushf
cs
out
sbb
mov
nop
sahf
dec
sbb
call
inc
jmp
into
repz
ret
pop
jge
cli
inc
mov
stc
add
push
call
in
mov
in
scas
rcrb
stos
aaa
insb
mov
xchg
scas
add
jb
fs
fsubr
mov
add
inc
cli
add
xchg
inc
sti
loopne
mov
ljmp
mov
mov
aaa
push
inc
das
pop
dec
jle
xchg
add
xor
or
lods
xchg
pop
add
pop
dec
sbb
lods
mov
or
mov
ret
jp
mov
test
jl
jo
imulb
nop
pop
lahf
inc
mov
lcall
fcomps
ja
xor
dec
pusha
pusha
sti
dec
popa
cmpsb
and
addr16
lea
int
int3
add
mov
and
shrb
sub
or
mov
jge
stos
cmp
jbe
dec
lds
ljmp
and
loop
adc
loop
negb
push
dec
mov
fs
add
jmp
sbb
fwait
imul
imul
out
lea
lret
call
bound
in
movsb
sbb
sbb
movsb
scas
inc
out
dec
out
and
mov
es
mov
cmpsb
mov
adc
pop
mov
lds
ja
or
inc
dec
push
outsl
sub
outsb
int
and
adc
rorb
mov
xor
xchg
push
add
push
sbb
aaa
mov
xchg
ljmp
lods
mov
xor
inc
xor
mov
pusha
jl
cmpsb
mov
jge,pt
jge
dec
push
stos
xor
add
dec
ja
orl
popf
xchg
jp
fst
add
idiv
je
pop
dec
or
xchg
mov
add
jmp
inc
mov
xchg
testb
adcb
leave
leave
int
dec
into
test
rorb
lock
xchg
out
cmpsb
lret
iret
xor
or
aas
outsl
pop
fildl
cmpl
sub
hlt
xchg
daa
aaa
xchg
scas
add
leave
rcrb
in
xor
addr16
or
add
lahf
js
in
mov
inc
xor
cwtl
and
stos
mov
cmp
movsl
fwait
aaa
lcall
dec
add
dec
pop
jns
lea
sbb
push
icebp
sbbb
cmpsb
xchg
pop
mov
aad
push
dec
mov
pop
lret
rclb
mov
mov
jnp
push
add
add
daa
adc
out
cmpsb
cmp
add
inc
aaa
test
lret
mov
repnz
push
dec
jne
aaa
out
scas
mov
int
jns
add
dec
jbe
cpuid
gs
dec
mov
mov
cmp
lock
inc
add
test
mov
pop
dec
or
fiadds
sub
push
gs
inc
dec
mov
arpl
xchg
lods
std
jno
aaa
loopne
jo
pop
mov
addr16
fimuls
adc
pushf
xor
fcoml
into
cmc
leave
and
adc
jge
xor
shlb
imull
loopne
add
popa
add
adc
clc
int
add
lcall
repz
pushf
fildll
sbb
pop
xor
xchg
jb
jg
js
jge
jp
pop
pop
jns
add
cli
aam
cmpsb
sub
js
icebp
pop
dec
aaa
cmp
repnz
add
xchg
stc
and
mov
aaa
bound
sbb
add
adc
pusha
jo
aaa
lret
stos
enter
pop
pop
add
ret
loop
aaa
jge
push
repnz
or
cmc
loop,pt
add
jbe
add
scas
mov
pop
adc
xchg
js
xchg
enter
scas
fisubl
sub
lods
pop
mov
mov
mov
lret
out
int
dec
test
mov
cmp
adc
aaa
sahf
jne
adc
test
mov
inc
push
lahf
mov
lods
loopne
add
aaa
outsb
into
cmp
movsl
ljmp
jecxz
data16
add
cmpsl
shlb
jl
mov
mov
sub
and
lret
aaa
sub
add
dec
dec
adc
inc
jo
nop
das
in
cld
fbld
adc
flds
adc
ja
int
mov
push
or
dec
shrb
or
jg
ja
cmp
fnstcw
lahf
add
imul
adc
adc
mov
add
push
mov
imul
test
add
pop
cltd
jp
add
mov
cmp
inc
cmpsb
and
jno
xor
shl
stos
jnp
hlt
cmp
cld
into
clc
aad
adc
dec
adc
lret
daa
cmpsl
mov
cmpsb
jae
repnz
jno
imul
mov
push
cmc
in
xor
fnstenv
movsl
std
sub
leave
mull
pop
out
inc
aaa
adc
jbe
int
mov
mov
add
jge
mov
mov
ret
and
repz
mov
ffreep
cmp
outsl
insl
popa
push
xor
sti
imul
fnsave
mov
aaa
push
loop
mov
add
hlt
push
jbe
and
push
jmp
mov
repz
adc
sub
ljmp
pop
fldenv
ret
cmp
in
jne
stc
aad
outsl
add
sti
popa
cmpsl
imul
pop
inc
icebp
xlat
add
jne
aaa
sahf
int
popa
xchg
je
testb
pop
shl
fiadds
push
sbbb
testl
or
cmp
sbbl
sarb
xchg
cmp
cs
insl
add
punpcklwd
inc
mov
lock
int
add
mov
mov
std
shrl
aaa
ret
je
lods
inc
mov
cmpsb
cmc
xor
xchg
inc
sbb
stos
mov
pop
icebp
xlat
mov
rolb
mov
sbb
roll
aad
mov
aaa
and
dec
je
push
repz
sub
in
jmp
and
in
push
mov
inc
pop
mov
add
sub
add
dec
push
mov
push
mov
jae
das
xorl
push
aaa
loope
pop
dec
or
xchg
add
pop
adc
pop
sahf
lods
add
loopne
fcompl
push
aam
xchg
mov
pop
dec
clc
xchg
add
and
inc
out
sub
sbb
add
cmc
xchg
jle
push
pusha
add
push
xor
aaa
or
aad
mov
inc
or
dec
nop
les
fldcw
mov
inc
cmp
xor
xchg
popa
cmpsl
mov
sub
mov
test
jg
loope
dec
aaa
jbe
mov
jb
ja
mov
push
out
ficompl
idivl
aam
out
and
cmp
loope
pop
mov
es
cmpsb
push
inc
in
jg
pop
sbb
cmpsb
push
mov
loopne
cmpsb
and
je
cmp
mov
das
movsl
repnz
add
inc
add
mov
add
mov
mov
addl
sbb
lods
and
fnstsw
pop
ljmp
lcall
and
cmpsb
inc
add
mov
xor
mov
les
ja
dec
das
andb
in
lret
lds
lea
xchg
and
int3
xor
add
cmc
and
cmpsb
pop
xchg
mov
push
aaa
ffree
inc
stos
mov
insl
xchg
lahf
xchg
cmpsl
movsb
xchg
push
sub
add
fpatan
mov
sbb
sbb
mov
lcall
stos
ss
and
xchg
loop
fsubl
into
xchg
mov
or
jno
sbb
jns
cmpsb
int
fisubs
dec
or
cmpsb
sahf
mov
cmc
mov
xchg
or
push
xchg
sub
iret
xor
shlb
sbb
cmpsb
and
dec
and
mov
and
mov
push
ja
inc
xor
nop
addb
aaa
pop
adc
and
jnp
stc
rcr
fcoms
push
imul
or
repnz
int3
dec
data16
add
inc
movsb
loopne
dec
call
push
stc
daa
mov
enter
cmpsb
xor
out
iret
aaa
test
jmp
cmpsb
fidivl
test
aaa
sub
movsl
push
mov
push
add
scas
aaa
inc
cmp
xchg
mov
mov
sahf
fisttps
add
aad
popf
fsub
lods
mov
aaa
out
popf
add
cmp
pop
jnp
cmpsb
sbb
and
es
and
mov
push
xchg
mov
test
add
pushf
rclb
ss
test
mov
inc
imul
dec
cmpsb
pop
in
push
inc
pop
add
ss
add
mov
add
sub
mov
jbe
inc
adc
dec
ret
cmpsb
dec
loopne
andb
sbb
test
mov
add
les
dec
jb
push
out
iret
aaa
mov
mov
test
js
movsl
inc
sub
lret
push
add
xor
or
in
aaa
mov
mov
sbb
es
or
adcb
sub
aaa
jge
les
or
and
dec
je
test
push
inc
inc
sbb
push
inc
push
rorb
sbb
movsl
insb
sub
inc
push
pusha
nop
pop
mov
pop
sbbl
hlt
sub
add
leave
xor
scas
lea
dec
icebp
push
push
and
outsb
add
leave
sub
lahf
popf
loope
pusha
lds
add
out
adc
lret
into
imul
mov
stos
mov
scas
mov
mov
push
flds
lcall
mov
xchg
jns
fs
lret
shrb
sbb
mov
popa
iret
adc
adc
push
rcl
cmp
inc
lds
loope
aaa
sub
push
cmp
cmp
cmp
xor
sbb
sbb
dec
fidivrs
repnz
testl
in
aaa
dec
sbb
int3
inc
insl
dec
add
int3
mov
push
fwait
cli
lods
jb
cs
push
sub
mov
mov
std
sub
and
lods
pop
out
rcrl
push
addr16
mov
ljmp
out
push
cmpsb
push
push
popa
jg
pop
mov
pop
pop
lods
outsb
add
pop
enter
test
or
pop
xchg
flds
add
jns
insb
jb
sub
jp
jo
jo
pop
jge
mov
add
test
pop
xchg
add
decl
icebp
add
jge
cmp
jne
push
pop
sahf
imul
add
lock
daa
into
in
jo
add
jns
or
fnstsw
cmpsb
mov
sub
adc
fwait
nop
jns
movl
popf
add
mov
add
pop
cmp
jnp
data16
pusha
loop
xchg
push
pop
jbe
sysexit
mov
insl
push
inc
movsl
pop
push
xchg
add
pushf
cmpl
jp
mov
xor
repnz
pop
mov
mov
and
add
cmpsb
push
and
adcb
sbb
xlat
pop
mov
sub
movsl
aaa
xorb
leave
sbb
and
lret
cmp
add
push
dec
and
push
fadds
faddl
inc
cltd
jnp
xchg
xchg
leave
fistpll
pop
xlat
idivl
jecxz
mov
xchg
adc
push
in
mov
cmpsb
pop
sbb
mov
fisubl
in
enter
loopne
je
icebp
jecxz
js
inc
xor
sbbb
pop
aam
enter
or
add
xchg
clc
inc
fimuls
cmpsb
gs
addb
cld
add
xchg
add
outsb
aaa
mov
mov
pop
sti
iret
rorl
movl
test
test
fists
and
cmp
sbb
lock
dec
add
mov
fdivrs
mov
nop
popf
cmpsb
mov
je
aaa
jb
sbbl
aaa
lea
cmpsb
jecxz
fsubr
ds
fistl
flds
mov
or
aaa
outsl
or
fsubr
cmc
add
add
sbb
arpl
cwtl
adc
push
inc
pop
loop
lds
iret
jns
mov
repz
repz
movsb
data16
add
jae
aaa
pusha
es
popf
pushf
xchg
rcrl
rcrl
mov
pop
cmpsb
xchg
sub
jbe
cmp
xchg
data16
pushf
jecxz
mov
daa
test
add
into
rolb
insb
testb
clc
pop
inc
push
add
cmpsl
test
lret
cmp
jge
dec
add
psubusb
lods
mov
pop
mov
or
pusha
or
fxch
ljmp
ljmp
lcall
jmp
fsts
test
ds
xor
cmpsl
shl
enter
sahf
or
mov
out
pop
call
addr16
sbb
aaa
test
mov
adc
sahf
jmp
push
mov
xchg
ljmp
rolb
repnz
mov
mov
lcall
jbe
push
and
aaa
popl
push
daa
push
inc
jp
xchg
daa
loopne
lock
es
sub
les
lods
lcall
out
sub
jecxz
sub
icebp
inc
loope
sbb
add
cltd
xlat
or
xbegin
mov
mov
and
mov
scas
or
aam
mov
rcrb
push
sbb
and
jnp
mov
faddl
repnz
cmpsb
les
hlt
lods
data16
into
xchg
scas
das
add
repnz
and
push
jnp
xlat
pop
cmpsb
xchg
imul
movsl
lods
movsb
cmpsb
pop
fwait
pop
addr16
jle
sbbl
add
push
movl
clc
add
cmp
outsb
outsb
jmp
sbb
xor
adc
in
xor
jle
std
push
cmpsb
cli
and
sbbb
sbb
cmpsl
lcall
shlb
daa
jnp
dec
pop
or
jmp
aad
add
iret
out
pop
sbb
cli
movsl
xor
test
dec
stc
out
sbb
xchg
aaa
sbb
cmpsb
sub
les
lods
xchg
gs
sbb
inc
push
cli
add
fs
fdivrl
mov
hlt
jge
test
mov
popf
lcall
push
in
ret
insb
cwtd
rorb
loope
hlt
mov
or
push
jbe
mov
mov
aaa
xor
gs
jle
mov
jo
jne
dec
mov
push
addr16
jmp
test
js
inc
ret
adc
cmp
or
add
fwait
ds
arpl
lods
cmpsl
pop
push
push
xor
add
sub
pusha
lds
pop
aaa
and
test
or
bound
dec
cmp
repz
inc
mov
stos
cmc
fcomps
fwait
jae
and
add
ljmp
dec
add
mov
test
testl
cmp
mov
mov
fcomp
sbbb
sub
aad
or
xor
pop
inc
outsb
sbb
aaa
int
sub
inc
add
add
lret
mov
sti
or
or
sbb
jb
in
jge
cmpsb
dec
daa
shlb
mov
mov
jg
cmpsb
sub
dec
push
shrb
inc
add
imul
stos
ret
mulw
subb
int
sub
dec
das
add
jge
clc
lods
dec
mov
cli
mov
mov
push
or
xchg
les
int3
aaa
loopne
cltd
cli
cmp
adc
sub
js
add
adc
mov
outsl
xor
popa
cwtl
pushf
inc
movsb
and
mull
adc
loope
cmp
popa
mov
cs
adc
arpl
sarl
and
xor
xor
jmp
xor
dec
pop
jb
add
and
fldl
adc
push
call
test
inc
and
mov
aaa
and
sbb
mov
jne
iret
add
or
sbb
push
mov
sbb
adc
push
xor
je
cmpsl
fldt
hlt
adc
xchg
lods
mov
pop
es
pop
out
cld
xchg
push
lods
test
pop
xorl
rcll
inc
push
adc
dec
das
jno
mov
pop
add
test
dec
mov
inc
pop
and
add
lahf
pop
popl
sar
fsubs
ret
pop
and
les
cmp
pop
arpl
movsl
mov
lock
adc
das
xor
fwait
cwtd
dec
in
sbb
pop
std
add
adc
mov
ja
cmp
fdivp
mov
shll
mov
ds
pop
jp
adc
pop
cmpsb
cld
pop
adc
xor
in
mov
pop
enter
fs
mov
popa
jnp,pt
mov
popa
popl
adc
imul
clc
push
push
sbb
test
lcall
das
add
adc
mov
out
add
add
push
sbb
xchg
xor
adc
pop
jno
mov
popf
add
imul
pop
add
int3
jae
sub
sbb
cmpsb
xchg
or
or
inc
lds
and
das
mov
movsl
add
push
sbb
xor
and
aaa
xchg
jne
arpl
inc
mov
push
loopne
rcrb
mov
fisubrl
lcall
jae
jp
js
aaa
lods
iret
js
outsb
sub
into
adcb
sahf
mov
rolb
sbb
ret
sub
cmpsb
movsb
xor
sub
xchg
jg
scas
scas
sub
scas
imul
orl
mov
sahf
shrb
pop
inc
push
lcall
xor
inc
mov
push
fdivl
lret
aaa
and
in
dec
outsb
add
mov
pop
aam
aaa
clc
adc
scas
sbb
fldcw
add
inc
mov
push
stos
and
or
popl
xchg
xchg
rcl
jp
subl
jo
loopne
mov
lods
sarb
and
call
mov
inc
pushf
and
mov
sub
and
call
mov
sbb
inc
or
add
mov
jbe
lahf
xchg
sub
xchg
test
ja
sarl
xchg
scas
push
stc
add
testb
adc
andb
popa
ja
shlb
jg
aaa
subl
and
arpl
add
adc
leave
mov
adc
xchg
mov
hlt
jno
jl
or
sti
adc
sti
aaa
and
test
movsl
into
loop
xor
push
push
xchg
pushf
cmp
lock
pop
or
lds
pop
adc
mov
test
add
ds
pmullw
ja
and
xchg
sti
pop
add
adc
int
adc
cltd
ret
xchg
xchg
push
insb
gs
jg
inc
leave
add
loope
stc
cmpsb
mov
inc
push
fwait
cmp
adc
cli
sti
sbb
pop
dec
leave
mov
fcmovb
stos
incl
pop
dec
add
dec
xchg
enter
fildll
hlt
aaa
push
inc
cmp
mov
xchg
inc
or
add
insb
xor
push
and
or
shlb
pop
lcall
add
or
arpl
fsubr
jbe
adc
xor
aaa
dec
lock
stos
pop
xor
mov
jecxz
xor
add
fadds
inc
pop
lock
pop
sbb
dec
add
addr16
push
and
inc
adc
mov
mov
cmpsb
inc
push
movsb
insl
mov
or
push
cmp
mov
sub
pop
add
fisubrs
andl
add
das
imul
add
mov
add
sub
xor
xchg
gs
mov
xor
or
add
frstor
xchg
int
fwait
hlt
jnp
push
mov
stc
rorl
mov
pop
movsl
lods
je
mov
sub
mov
js
daa
push
es
test
loopne
adc
mov
xor
cwtl
jg
test
das
xchg
ss
addb
xchg
call
test
daa
add
stos
xor
jns
mov
ss
mov
fsubrp
pop
sub
add
jg
add
xchg
test
xchg
test
mov
js
inc
mov
in
fistpl
or
fidivrl
bound
scas
xor
pop
mov
shr
and
pop
mov
sbb
adc
movl
xchg
orps
lret
xchg
int
outsl
dec
add
clc
add
call
sub
inc
mov
add
jno
inc
fcmovnb
lret
xchg
add
add
cwtl
stos
shlb
and
mov
adc
sub
hlt
mov
adc
jp
out
lret
mov
ret
push
in
inc
test
movb
aaa
mov
fnsave
pop
int
addb
bound
fcom
xchg
push
sbb
lret
xor
cmpsl
enter
add
mov
cmp
jno
add
inc
lock
js
adc
test
jne
push
cs
adc
push
add
ret
lret
nop
add
dec
aaa
andl
mov
sbb
inc
jp
out
jnp
xor
ret
and
mov
out
addl
push
test
inc
movsl
imul
fmul
or
cmp
ja
inc
add
nop
shll
jae
and
mov
mov
push
lahf
in
movsl
je
rcrl
cmp
dec
or
and
cltd
push
inc
shr
xchg
popa
ficomps
mov
adc
ret
xor
jne
add
addb
xor
mov
notb
add
jge
add
shlb
cmp
pushf
sbb
ds
cmpsb
cmp
hlt
les
cli
mov
stc
hlt
xchg
sbb
lods
mov
pop
jno
pop
pusha
pop
xor
sub
cmpsb
jle
pop
sub
mov
inc
in
aaa
testl
jo
out
adc
outsb
jl
add
imul
sub
cmpsb
in
lahf
mov
aaa
jns
int3
inc
sbb
mov
fistpl
in
pop
shll
jecxz
jp
dec
cli
mov
mov
addr16
push
dec
pop
enter
dec
mov
xchg
add
dec
mov
divl
add
push
mov
shll
push
les
testb
and
mov
and
sub
es
test
std
sub
mov
xor
pop
pop
aas
or
sbb
inc
or
or
insb
push
aaa
rcll
enter
cmp
pushl
gs
orb
cmp
mov
xlat
xchg
out
add
lcall
pusha
lods
mov
shlb
adc
fwait
testb
sbb
mov
add
xor
scas
mov
in
jg
stos
fnsave
in
movsl
imul
loopne
jle
add
mov
andl
stos
fstpt
pusha
popf
notb
add
xchg
icebp
mov
add
mov
cmp
jne
jne
add
nop
push
jb
xor
aaa
jno
shrb
add
movsl
mov
aaa
rcrb
add
xchg
cmpsl
outsl
repz
lcall
xor
sbb
mov
add
aaa
adc
xchg
or
and
movsl
gs
and
add
lahf
lret
mov
lds
test
push
jno
dec
es
insb
out
aad
lret
mov
or
out
add
dec
sti
add
out
fisttps
mov
cmpsb
lock
and
mov
out
clc
sti
jno
lods
rorb
hlt
mov
or
aaa
xchg
xlat
inc
cmpsb
jg
mulb
ljmp
add
iret
inc
push
add
mov
jae
shlb
push
aaa
lods
xchg
or
add
cmp
mov
pop
sub
add
rcl
and
add
xor
pop
pop
add
and
test
hlt
leave
sub
pop
jmp
jns
cwtl
int
shlb
dec
test
int
add
test
bound
pop
add
lahf
pop
imul
stc
mull
or
in
push
hlt
test
out
xor
hlt
pop
add
xchg
insb
xor
jg
test
notb
aad
mov
daa
cmpsb
mov
jle
sbb
sbbl
cld
mov
movsl
clc
fisttpll
push
mov
out
adc
les
push
movsl
and
out
loope
test
ja
lcall
xchg
pop
addr16
out
add
sbb
jmp
push
test
call
std
add
aaa
push
dec
rol
jecxz
dec
int3
add
movsb
lcall
pop
xor
or
jl
dec
mov
dec
dec
add
add
inc
or
mov
mov
cmp
xchg
aaa
out
mov
cmpsl
aas
mov
push
add
jmp
scas
cmovno
addr16
loopne
imul
out
mov
pushf
ljmp
cmpsb
arpl
leave
cmp
scas
nop
ds
mov
push
das
add
adc
out
mov
xor
mov
mov
mov
jmp
xor
cld
jnp
daa
sub
add
pop
loopne
out
mul
inc
cltd
mov
add
push
cmp
lods
sub
insb
loope
out
test
aaa
movsb
stos
mov
xorl
cmpsb
out
sub
mov
mov
cmpsl
jae
inc
cmpsb
clc
push
xchg
mov
fstps
or
push
add
stc
sbb
pusha
lret
stos
imul
cmpsb
int3
mov
outsl
fisttpl
dec
mov
sbb
dec
loop
out
dec
push
dec
xchg
out
pusha
je
jns
int3
aaa
inc
fisubs
and
dec
and
lea
lcall
xchg
sub
dec
cmpsl
les
andw
xchg
inc
cmpsb
inc
push
and
add
or
sub
and
fsubrs
lahf
adc
xor
and
aad
int3
inc
mov
ljmp
orb
mov
jb
xchg
and
std
and
xchg
shll
jb
and
jg
jbe
xchg
mov
add
inc
or
out
add
aas
and
dec
adc
push
cmpsb
cmpsb
iret
repz
std
cld
sti
push
or
hlt
lcall
movsl
and
je
stos
cld
in
fistpll
ficompl
push
hlt
sarl
aaa
mov
mov
mov
pushf
xor
test
dec
out
push
adc
xchg
adc
xchg
je
dec
aas
dec
xchg
add
add
hlt
mov
add
test
mov
inc
outsb
cmpsb
xor
add
fcmovnb
jle
fcmovbe
enter
adc
pusha
je
lret
jns
jnp
jp
jae
repz
dec
enter
push
lea
push
pop
out
pusha
jl
arpl
or
pop
and
sub
adc
imull
dec
mov
xchg
xchg
mov
adc
pop
sbb
aaa
dec
inc
cmpsb
aaa
or
mov
sbb
cmpsl
fistpl
loopne
inc
sbb
sub
mov
aaa
in
aas
mov
in
repnz
fst
add
push
lret
pop
in
aam
push
cmpsl
mov
dec
fsubrp
fwait
push
stos
cmpsb
sti
repnz
jno
rcl
inc
cmp
leave
loop
rol
aam
test
xchg
adc
cld
callw
jne
ficompl
push
movsb
and
sbb
pop
test
mov
mov
inc
sbb
jge
fistps
sub
addb
sbb
out
xor
les
sub
inc
rolb
sbb
fdiv
add
and
add
jl
push
outsl
call
je
stos
push
add
aaa
dec
in
cmp
jne
inc
sti
push
jl
dec
jnp
or
add
add
cmp
es
mov
sub
xchg
mov
or
add
sub
xor
and
aaa
or
mov
push
or
or
sbb
push
jae
and
mov
sub
test
adc
inc
lret
dec
inc
iret
out
inc
push
mov
loopne
in
cmp
je
cli
bnd
lock
cmp
lret
repz
add
mov
fcmovnb
push
loop
shlb
rcl
mov
cmpsb
cli
lds
mov
lahf
and
cli
add
popf
nop
mov
sub
pop
cwtl
mov
data16
jae
dec
mov
jb
fisubrs
fwait
cltd
xor
xchg
mov
dec
mov
or
inc
add
pop
vmovdqu64
shll
jge
fildl
jbe
dec
fs
pop
call
jecxz
inc
push
test
pusha
inc
add
fs
push
inc
dec
add
gs
dec
enter
aam
push
xor
cmp
add
adc
and
or
sbb
push
push
cmp
xchg
sub
add
cmp
or
fs
inc
xlat
pop
add
out
insb
fldz
pop
movsl
negb
pusha
stc
dec
pop
xor
insb
pop
dec
loope
add
je
dec
pop
push
dec
inc
aaa
dec
and
add
push
pop
pop
add
sbb
mov
jo
movsb
faddl
jmp
lods
dec
cltd
loop
scas
popf
add
xor
xchg
adc
push
xchg
enter
sahf
jmp
inc
lcall
andl
fisubrs
add
out
mov
das
mov
mul
ret
std
add
std
or
stc
cmpsl
shrb
in
aad
loopne
fprem1
add
ljmp
jecxz
rcl
out
fimuls
xor
or
add
xor
iret
test
cmp
jb
xor
cmp
cltd
fbstp
out
add
xor
cmpsl
sub
jp
popa
and
push
es
das
mov
push
outsb
daa
loop
mov
adc
mov
or
cmpsb
cmp
and
mov
xor
add
dec
xor
add
shlb
rcr
imul
pop
scas
arpl
xor
fs
movb
and
pop
notl
aaa
push
sahf
dec
xchg
out
stos
add
jnp
inc
jo
add
imul
cmpsb
mov
mov
mov
shrd
or
sbb
repnz
andb
and
mov
mov
add
jg
ret
add
add
adc
mov
cld
inc
leave
and
pop
pop
cli
xor
cmc
fdivrl
fsub
in
sbb
out
xor
sahf
jecxz
inc
pop
fbstp
ljmp
mov
aad
jne
dec
ljmp
int3
rcl
std
cs
les
cmc
sahf
rcl
xchg
stc
add
jl
or
addr16
lock
push
add
xchg
sbb
sub
mov
adc
adcl
sbb
sub
pop
pop
inc
add
movsl
add
mov
cmp
jo,pt
inc
rorl
rcl
jbe
inc
lds
fisubrl
bound
push
adc
and
mov
data16
sbb
mov
mov
in
add
jno
inc
dec
jge
add
std
dec
mov
push
mov
cmpsb
xchg
pop
push
mov
lds
les
mov
std
aaa
test
mov
mov
nop
cmp
movl
and
clc
and
sbb
cmpb
add
sub
hlt
pop
push
adc
ror
add
das
into
xchg
std
rolb
inc
inc
loope
dec
sub
or
scas
loopne
aad
in
add
fisubrs
fwait
out
cwtl
andb
ret
data16
int3
inc
insb
push
enter
ljmp
xor
adc
pusha
sub
sbb
sub
xor
and
mov
sub
pop
gs
adc
cmp
or
sahf
cmp
push
xor
loop
faddp
jp
es
jo
aam
ja
cli
inc
je
mov
sbb
or
popa
enter
gs
cmpsb
pop
aaa
push
push
inc
imulb
test
or
adc
jnp
cld
push
ja
loopne
clc
inc
dec
sbb
mov
mov
cmpsb
movsl
mov
adc
lds
mov
or
sbb
xor
fwait
shlb
push
xchg
add
mov
jmp
mov
add
cld
inc
pop
imul
cmpsb
int
hlt
mov
aaa
repnz
in
ret
dec
rcrb
aaa
xchg
in
aam
loope
aaa
fildll
fisttpl
pusha
pop
xlat
xchg
jmp
cmpsb
int3
mov
and
and
lods
mov
repz
pop
xchg
add
out
and
movsb
test
mov
mov
pop
or
mov
cmp
jns
mov
xor
mov
mov
insl
iret
xchg
sub
adc
xor
pop
jb
pop
pop
outsb
mov
pop
or
mov
push
stos
xor
xor
cmp
hlt
push
enter
out
or
addr16
scas
inc
add
mov
add
and
dec
imul
add
or
outsl
xchg
push
ret
lahf
jae
testb
sub
dec
xor
incl
push
sbb
jle
add
je
xchg
icebp
lods
int3
and
insl
jge
add
mov
cs
dec
cmpsl
and
xor
add
or
jns
jg
push
mov
push
sub
sub
mov
push
dec
xor
lods
sub
pop
mov
push
inc
ret
xchg
xchg
push
xorl
je
dec
imul
pushf
out
movsl
mov
pusha
add
inc
ret
jb
adc
add
or
mov
add
mov
rcrb
or
icebp
jns
mov
clc
jnp
cmp
pop
hlt
rdtsc
mov
pop
mov
es
jecxz
les
repz
or
xchg
rorl
icebp
fldt
daa
ret
mov
ss
and
xchg
mov
cmp
fwait
out
repz
into
push
pop
xchg
inc
dec
mov
scas
fisttps
nop
pop
xchg
outsb
add
stc
shl
inc
lret
xchg
adc
ds
insl
in
outsb
push
dec
hlt
pop
xchg
cld
cmpsb
pop
fwait
cld
mov
cld
mov
pop
out
pop
jmp
loop
out
pop
ret
cld
cli
pop
idivl
push
inc
cmp
adc
lock
push
adc
sub
cld
ss
or
inc
pop
jg
dec
pop
arpl
pop
pop
push
cld
pop
pop
cld
jb
dec
cld
popf
pop
mov
or
or
cmp
or
imul
xchg
and
shrl
lock
or
frstor
sub
mov
jo
addr16
mov
cmpsl
xor
and
xchg
fmull
cmp
xor
pushf
rorb
xchg
jb
sahf
sub
dec
jecxz
fdiv
pushf
lock
xchg
sbb
rdpmc
xchg
adc
push
jp
daa
nop
mov
jnp
push
xor
je
pop
out
cmp
dec
into
lock
or
cmp
cmp
aaa
scas
jns
mov
jns
mov
cltd
xchg
lahf
pop
daa
mov
icebp
loopw
jns
jbe
mov
loope
mov
sbb
mov
aad
icebp
call
xchg
mov
cmp
xchg
fwait
pushf
daa
mov
cwtl
jbe
push
loope
insl
and
out
inc
test
mov
inc
or
rcrl
dec
cld
icebp
fcompl
cli
test
fidivrl
or
lret
rcrb
jp
and
pushf
push
sar
out
outsl
loope
fisubs
dec
iret
push
xor
daa
je
mov
mov
push
fnstcw
ficomps
clc
and
inc
lcall
int
out
out
inc
lret
loope
xchg
es
and
fldenv
push
loope
lock
enter
xchg
leave
push
add
lock
cmp
addb
pop
testl
popl
push
sub
mov
pop
pop
push
push
pop
pop
add
push
sub
mov
pop
pop
xchg
mov
xchg
sub
mov
mov
pop
sub
mov
mov
pop
sub
mov
push
pop
pop
mov
sub
mov
sub
mov
pop
pop
xchg
push
mov
pop
push
sub
mov
pop
pop
movl
sub
mov
mov
pop
xchg
inc
incl
xchg
xchg
mov
xchg
push
push
pop
pop
call
cmp
jne
push
mov
pop
xchg
mov
sub
mov
mov
pop
xchg
inc
push
sub
mov
pop
pop
sub
mov
push
pop
pop
mov
sub
mov
mov
pop
xchg
call
cmp
jne
push
mov
pop
push
mov
pop
mov
sub
mov
mov
pop
push
mov
pop
push
mov
pop
push
sub
mov
pop
pop
mov
xchg
push
mov
pop
add
add
jmp
jmp
xchg
push
push
pop
pop
mov
xchg
push
mov
pop
xchg
sub
mov
mov
pop
lea
push
mov
pop
push
mov
pop
push
sub
mov
pop
pop
xchg
mov
push
mov
pop
sub
mov
mov
pop
sub
mov
mov
pop
push
mov
pop
xorl
push
mov
pop
xchg
add
cmp
jb
jmp
xchg
push
mov
pop
mov
xchg
sub
mov
mov
pop
subl
sub
mov
push
pop
pop
xchg
mov
push
mov
pop
sub
mov
mov
pop
ret
push
push
pop
pop
sub
mov
sub
mov
pop
pop
pop
xchg
sub
mov
sub
mov
pop
pop
sub
push
mov
pop
push
mov
pop
mov
xchg
xchg
sub
mov
mov
pop
sub
mov
push
pop
pop
sub
mov
push
mov
pop
push
mov
pop
addl
sub
mov
mov
pop
sub
mov
mov
pop
pushl
xchg
sub
mov
sub
mov
pop
pop
xchg
xchg
mov
xchg
push
sub
mov
pop
pop
sub
mov
mov
pop
xchg
mov
push
mov
pop
xchg
add
incb
push
sub
mov
pop
pop
sub
mov
mov
pop
popl
xchg
xchg
ret
inc
xor
add
add
add
add
xor
add
add
add
jmp
add
add
add
inc
xor
add
add
add
add
imul
popa
jae
inc
jb
outsl
jb
cltd
add
je
jb
arpl
fs
jae
add
jb
gs
xor
cs
insb
add
add
push
dec
xor
test
outsb
mov
add
icebp
je
jmp
orb
add
mov
inc
add
add
jecxz
movsb
call
push
push
add
test
test
and
call
or
add
jecxz
push
xchg
push
add
jecxz
inc
add
cmp
cmpsl
or
add
or
add
jecxz
push
clc
outsb
mov
add
addl
js
jecxz
push
lea
add
or
add
jecxz
push
clc
outsb
mov
add
icebp
mov
rorb
cmpsl
or
lea
pop
add
jecxz
movsb
pop
pusha
lret
or
sbb
add
jecxz
add
jecxz
add
jecxz
add
jecxz
xor
xlat
cmp
aaa
xor
sarl
cmp
sarl
xor
xlat
cmp
aaa
xor
sarl
cmp
jecxz
push
xor
inc
outsl
popa
xchg
bound
push
js
xlat
sbb
gs
pop
jb
orb
xchg
imul
jbe
xor
pop
imul
bound
push
js
xlat
sbb
imul
push
js
mov
andb
mov
arpl
test
and
test
pop
sub
or
mov
outsb
mov
mov
inc
xor
out
add
push
mov
outsb
mov
call
xor
out
add
push
mov
outsb
mov
call
xor
out
add
push
mov
outsb
mov
call
xor
out
add
push
mov
outsb
mov
call
xor
out
add
push
mov
and
in
mov
push
push
mov
jne
test
test
push
add
xchg
xor
add
mov
add
push
xor
adc
or
mov
add
test
loopne
or
and
mov
pop
repz
xchg
or
pop
pusha
int
inc
fmuls
pop
xor
jmp
push
push
push
mov
rcr
mul
mov
push
sbb
xor
mov
adc
add
psubb
or
sarb
ret
test
xchg
mov
test
outsb
xchg
add
mov
jnp
mov
push
jmp
sbb
pop
jmp
int
push
sbb
inc
push
outsb
mov
add
mov
inc
jecxz
mov
push
xor
push
add
out
sbbl
mov
dec
sbb
rorb
add
ds
jmp
int
push
add
packuswb
addb
dec
add
movsb
add
jno
xor
test
push
dec
xor
push
inc
add
add
add
jns
mov
pop
shlb
add
mov
icebp
incl
jecxz
push
call
xor
icebp
xchg
mov
dec
add
mov
push
add
or
push
push
sbb
dec
xor
aas
inc
add
mov
push
add
roll
jmp
pusha
leave
adc
nop
icebp
jmp
test
pusha
jo
add
jmp
sbbl
je
test
mov
test
cmp
test
decl
outsb
xchg
add
mov
mov
adc
in
add
test
outsb
mov
mov
adc
push
add
stc
inc
sahf
jb
fs
jecxz
add
mov
xor
jecxz
add
jno
xor
test
push
inc
xor
icebp
mov
rorb
popa
pop
adc
pop
call
andl
mov
cmpl
push
dec
xor
mov
xor
push
rep
mov
inc
add
data16
loope
pushl
sbb
scas
xor
int
mov
sub
cld
push
mov
fildl
add
mov
add
nop
clc
xor
or
add
jge
xor
out
add
push
jae
push
or
mov
out
add
push
adc
nop
stc
jne
dec
in
call
lret
adc
dec
add
jecxz
sub
jmp
jb
shl
mov
add
nop
add
cld
out
push
sbbl
ja
mov
mov
sub
adc
shlb
test
inc
repz
xor
dec
call
adc
out
lcall
jb
and
jl
ljmp
