fisubrl
push
in
frstor
repnz
ss
fisubl
dec
cli
insb
int3
sbb
dec
sbb
and
idivb
ja
add
jo
cmp
dec
std
in
jg
xlat
xor
mov
loopne
and
cmc
push
cmpl
jp
repz
pop
aas
test
repz
notb
pop
sub
adc
sbb
scas
jae
inc
bound
outsl
push
jg
sarb
xchg
sti
int3
adc
sub
jne
pop
or
push
mov
xchg
cmp
clc
es
or
cmp
xchg
cmp
scas
lods
push
dec
jle
adc
xor
xchg
fdivrl
adc
das
add
push
icebp
pop
dec
enter
mov
sbb
cmp
mov
mov
mov
loope
test
sub
sbb
ficoml
sub
call
xchg
inc
jg
cmpl
out
fwait
xor
mov
cmp
jns
xchg
aam
mov
jg
andb
gs
xor
je
mov
mov
fs
arpl
inc
pop
test
mov
movsl
adc
es
and
or
mov
addb
push
cs
mov
inc
jmp
dec
and
mov
push
lret
jle
mov
data16
test
ret
mov
lods
jo
pop
inc
fsub
inc
outsl
stos
mov
iret
dec
test
sub
fninit
inc
shlb
sub
and
cmpsb
pop
std
pop
sub
pop
loope
add
jo
cmc
in
cmc
icebp
pop
adc
sub
mov
movsb
or
mov
insl
dec
dec
dec
aaa
jecxz
or
mov
pop
fildll
and
loopne
rcrl
pop
mov
push
test
push
push
stc
rolb
xchg
mov
into
scas
fwait
shlb
movsb
nop
movsb
cmp
mov
or
aam
mov
jnp
shlb
add
incb
pusha
insl
daa
dec
xchg
ret
dec
fiadds
push
sub
xchg
xchg
jle
mov
dec
and
mov
data16
cmp
repz
cmp
cmp
ds
hlt
mov
fxch
pop
sbb
mov
adc
push
mov
movsb
popf
arpl
cmp
sub
mov
mov
dec
xchg
sub
xchg
jge
pop
add
paddd
ja
or
popf
subb
mov
adc
mov
ss
scas
add
jge
in
cmp
ss
sbb
je
popl
and
mov
xchg
pushf
xchg
or
pop
add
mov
ret
xchg
mov
rcrb
sub
loope
sub
mov
push
push
daa
imul
out
xchg
jp
nop
arpl
mov
mov
pushf
js
enter
shlb
je
and
lds
ljmp
sbb
movsb
andl
dec
sbb
pusha
dec
inc
daa
inc
xorl
cmp
shlb
sbbl
push
pop
push
dec
xor
addr16
push
mov
jne
cli
pop
lds
stc
mov
cmp
fsubl
cmpsl
test
xchg
or
mov
test
out
xchg
mov
mov
sub
int
xchg
punpckhdq
add
cmp
mov
lcall
sti
mov
popa
xchg
pop
mov
cmp
outsl
push
xor
lods
adc
aaa
shll
rclb
mov
pop
cmovl
fldcw
xchg
sub
jbe
stos
stos
cmp
sbbl
adc
scas
mov
rorb
push
out
inc
fsubp
add
inc
fwait
pop
aam
push
es
cmp
cmc
jle
test
xchg
inc
adc
int
addr16
mov
cmp
out
fs
repnz
xchg
sub
daa
inc
out
fstl
test
push
imul
mov
lods
stos
mov
andl
inc
sbb
push
jmp
scas
stc
in
jb
cld
data16
aad
push
ljmp
push
mov
jnp
xchg
scas
loope
or
add
pop
xchg
push
out
loope
mov
jb
jne
ror
push
jnp
jbe
mov
or
adc
mov
adc
pop
and
cmc
jae
lods
adc
fisttpl
sbb
icebp
ljmp
jecxz
pop
jo
movsb
mov
lahf
scas
cwtl
repnz
fldenv
sub
mov
mov
pop
xchg
int
pop
jb
mov
arpl
and
mov
stos
mov
lods
dec
adc
cmp
int3
frstor
jo
cmpsb
leave
setle
test
and
pop
and
xchg
std
mov
xor
inc
insb
jecxz
jp
mov
and
std
in
push
not
mov
mov
add
or
lret
out
ja
cmpb
js,pt
sahf
adc
push
imul
cmp
jle
lahf
xlat
and
repnz
inc
mov
mov
idivl
repnz
shr
xchg
lret
mov
sti
gs
dec
cmpsb
mov
cwtl
mov
imul
jnp
and
jb
pop
dec
gs
jo
pop
mov
and
cmpsb
pop
movl
sub
stc
roll
in
stos
jg
mov
jg
pop
inc
daa
stos
push
clc
xchg
cmp
mov
in
imul
rcrl
xor
test
and
inc
mov
mov
out
int
mov
jmp
sbb
mov
push
imul
fwait
movsl
scas
mov
ljmp
or
mov
sbb
pop
adc
out
lea
mov
pusha
xchg
jne
mov
pop
in
push
push
mov
and
sub
test
mov
pop
xlat
sbb
test
mov
jecxz
push
sbb
rcrb
add
or
jae
sbb
lcall
ja
fcmovb
inc
shrb
add
or
mov
clc
xchg
loop
cmp
push
xchg
sbb
lock
jge
mov
loopne
cli
imul
sbbb
xchg
das
lock
dec
lods
adc
jbe
and
insl
mov
push
loope
push
js
cmp
jno
sbb
mov
dec
mov
sbb
add
jo
adc
rcl
psubusb
push
inc
aad
filds
mov
xchg
sub
cmp
pop
lea
inc
inc
jecxz
stos
scas
aas
add
out
icebp
dec
movsb
mov
inc
or
out
cmpb
mov
jb
cs
xor
adc
lods
fnstsw
xor
lods
in
jne
stos
scas
int3
in
inc
push
call
adc
lock
sbb
jge
xchg
push
xor
pop
aaa
mov
or
jbe
mov
mulps
jge
adc
inc
pop
aam
cld
mov
xor
pop
push
daa
adc
mov
pop
mov
sti
push
pop
cmc
xchg
jb
cltd
subl
fimuls
pop
js
inc
cwtl
xchg
xchg
jb
push
popf
out
fadds
xlat
lds
mov
adc
scas
push
or
outsb
mov
pop
adc
aaa
mov
xchg
push
rcrl
mov
sub
cmp
fyl2x
add
popf
hlt
xor
xor
icebp
mov
cmp
in
cmp
or
je
cmc
fists
sbb
sub
mov
jmp
test
mov
xor
lds
dec
lods
cltd
int3
fstl
mov
popa
mov
rcrl
cwtl
ja
cld
adc
adc
pop
xchg
mov
dec
das
and
lods
jnp
inc
mov
arpl
fisubs
rcl
mov
jge
ljmp
sarl
push
int
cwtl
repz
adc
fwait
divb
dec
mov
fs
filds
hlt
add
ret
stos
dec
mov
lcall
adc
adc
add
fwait
mov
and
xchg
pop
enter
cmpsb
ds
push
push
push
lcall
arpl
test
mov
sbb
enter
nop
mov
int
mov
xor
iret
pop
push
xchg
and
jo
popf
je
lods
imulb
test
xor
inc
adc
dec
lea
outsl
ret
cmp
and
int
popa
sbb
outsl
pop
fstpl
mov
popa
pop
jno
cmp
lods
and
ljmp
shll
lret
inc
or
or
mov
push
or
into
ja
aaa
adc
cmpsb
dec
out
movsl
xorl
sub
out
lret
mov
js
adc
mov
aaa
in
int3
pop
add
data16
int
cs
and
add
fcomps
daa
cwtl
add
jo
sbb
and
test
out
or
nop
stc
push
cli
sti
pushf
xchg
insl
aam
out
pushf
cmp
pop
int3
pop
shll
fwait
or
add
mov
cmp
push
cli
push
je
cmpsb
sbb
leave
movsl
jo
outsl
xchg
imul
outsl
fiaddl
adc
dec
mov
sbb
ficoms
in
adc
faddl
lds
icebp
xor
pop
cli
xchg
sbb
ja
push
repnz
xor
push
mov
add
imul
sbb
pushf
jno
pusha
arpl
jle
adc
dec
cmp
inc
jmp
ds
mov
scas
std
dec
adc
or
dec
test
sub
adc
int3
pushf
mov
lret
adc
pop
push
pop
jl
sbb
or
pop
inc
lds
and
fisttpl
sub
xor
ds
push
push
insb
sbb
lea
int3
dec
lahf
or
mov
xchg
xlat
js
ss
clc
ds
cmp
push
int3
subl
xchg
inc
lds
rcl
shl
aam
dec
int
pop
and
insl
dec
leave
shlb
jb
and
ds
int
xchg
push
icebp
pop
fstl
int3
mov
pop
adc
test
fdivrp
jle
xchg
mov
mov
lods
ja
ret
pushf
jne
inc
repz
and
xor
inc
mov
and
fnstsw
add
cmp
mov
mov
push
js
mov
inc
adc
dec
repz
push
sub
mov
jl
pop
iret
aad
dec
popa
mov
mov
jmp
or
lret
dec
inc
inc
cmp
fildl
push
mov
andl
dec
jne
adc
jecxz
nop
mov
mov
push
scas
repz
mov
lcall
lret
std
mov
lahf
shll
jp
pop
fmuls
std
movsl
js
cmc
xchg
adc
lea
inc
cld
mov
jle
xchg
xor
ret
inc
and
adc
xchg
adc
cmp
dec
daa
and
add
inc
imul
test
lcall
loope
jp
nop
jg
sub
fsubs
sbb
jge
dec
mul
dec
push
mov
jnp
and
mov
mov
ret
insb
push
stos
push
stos
jle
or
scas
add
adc
sbb
outsl
pop
lods
pop
cmp
jecxz
xchg
outsb
js
dec
je
and
jo
jbe
cmp
in
mov
imul
lock
mov
daa
inc
repnz
cli
jge
add
scas
scas
stos
ret
fsubs
pushf
and
mov
mov
and
cltd
cmpsl
xchg
shrb
das
adc
call
add
stos
cmovae
add
test
jnp
lods
insb
mov
outsb
add
adc
add
pop
xor
xor
sbb
fwait
loope
push
dec
sbb
adc
js
in
aad
dec
xlat
dec
bound
mov
push
cmpsl
mov
es
add
xchg
loopne
mov
dec
test
loopne
mov
stos
addb
push
dec
or
mov
jmp
dec
xchg
xchg
adc
addl
in
lds
sbb
mov
loope
imul
pop
popl
and
popa
dec
cltd
pop
jge
into
hlt
adc
sub
jecxz
test
loope
iret
arpl
or
and
insl
xchg
mov
inc
xor
sahf
into
inc
lods
hlt
dec
pop
aad
push
inc
aas
cmp
scas
js
push
mov
cmpsb
or
shlb
cmpsb
adc
mov
std
mov
test
cli
mov
push
leave
jo
dec
cmpsb
insb
iret
inc
mov
leave
xor
arpl
mov
lcall
int3
stc
xlat
call
or
mov
mov
stos
mov
jns
sub
mov
sub
jns
and
jno
or
adc
sarb
lea
fadd
xchg
inc
out
mov
fwait
pop
aam
pop
xor
sti
pop
adc
and
repnz
or
or
xchg
outsb
mov
mov
jb
js
mov
dec
jp
loop
shrb
xor
rorb
rolb
popa
pop
jnp
xchg
jle
dec
inc
cs
push
and
dec
cmpsl
shrb
lea
movsb
mov
jo
test
mov
rcll
pop
xorb
or
bound
and
xchg
rol
pop
into
xlat
cmp
jg
push
mov
ret
popf
mov
mov
dec
xchg
mov
pop
add
mov
add
lcall
loopne
stos
add
test
stos
leave
dec
bound
adc
mov
pop
notb
mov
or
xor
ss
pop
loope
push
in
inc
cmp
movsb
lods
dec
add
add
das
inc
sbb
cld
mov
aam
sub
mov
xor
std
mov
add
push
repz
mov
popf
and
incl
inc
dec
cmp
addb
imul
adc
cltd
and
xor
lret
mov
inc
scas
orl
leave
inc
xor
dec
das
mov
icebp
mov
sub
jb
lods
jns
fsubr
int3
iret
jmp
insb
out
xchg
lods
inc
and
lret
xorl
cmp
or
sarb
scas
cmp
fsubr
idivb
fcomps
push
push
adc
sbb
xor
lret
mov
mov
jne
add
and
cmp
adc
xor
sub
add
leave
test
jnp
les
insb
mov
clc
neg
les
push
sbb
push
scas
sbb
and
xor
or
loopne
repnz
shll
or
pop
icebp
jno
sbb
loopne
jl
sbb
jp
and
sub
dec
and
pop
cmp
jmp
sarb
fcmovne
add
cmp
movsb
sbb
sahf
lods
enterw
and
aas
mov
jo
sbb
mov
icebp
enter
pusha
xchg
popa
ret
daa
imul
sbb
xor
ficompl
aaa
loopne
test
rol
mov
jge
paddw
outsb
xchg
pop
xchg
test
or
clc
pop
aad
insb
lret
push
xchg
cwtl
stos
fdivl
insl
das
out
roll
daa
adc
addl
sbb
movsl
inc
pop
jns
ret
jae
pop
test
mov
pop
pop
cmp
xor
xor
bound
dec
cmpsl
inc
lods
or
into
inc
pop
arpl
push
mov
out
push
xor
scas
int
insb
test
inc
dec
sti
cmc
rcrb
add
ja
pop
mov
jl
loopne
cmp
stos
mov
movsb
faddp
inc
mov
cltd
fdivr
and
mov
mov
icebp
insb
ror
jl
push
mov
leave
pop
js
push
mov
hlt
insl
dec
mov
sub
lock
sub
stos
mov
adc
stos
jne
push
add
sbb
pop
popa
ffreep
cld
push
jb
lock
add
xchg
mov
sub
dec
add
mov
mov
insb
or
and
scas
and
hlt
stc
xchg
jnp
inc
sbb
or
lds
ss
in
cmpsb
rcrl
mov
pop
notl
in
xor
imul
or
cmpsl
ret
adc
stos
mov
sub
jne
sub
mov
iret
ds
icebp
and
add
vpshld
outsb
jns
xchg
pushf
or
dec
jecxz
sti
addb
dec
ljmp
fwait
testb
int3
push
pushl
inc
sub
sarb
adcl
call
jnp
jecxz
dec
ss
rclb
aad
adcl
sub
cmpsb
lahf
nop
cmp
loopne
sti
cmpsb
popfw
repnz
jmp
push
cmp
div
mov
pop
imul
sub
bound
scas
decl
negl
jae
and
pop
loope
clc
xor
fs
loope
xchg
addr16
adc
aad
cmpsb
pop
cltd
and
mov
inc
icebp
fists
xchg
sbb
enter
xchg
push
xchg
dec
fsubrl
adc
fisubs
pop
std
adc
xor
clc
fwait
movsl
cmp
rorl
mov
mov
lds
je
inc
cmp
pop
push
dec
cwtl
or
xor
int
mov
orl
mov
out
pushl
pop
and
enter
cmp
shrb
pop
pop
mov
scas
dec
std
popf
nop
in
jb
hlt
pusha
adc
aas
and
lcall
push
mov
ret
int
ficompl
mov
sub
mov
faddl
and
lret
add
hlt
mov
fwait
and
scas
xchg
jecxz
ss
sub
cwtl
test
test
ret
mov
cmpsb
push
lahf
scas
push
sti
inc
ds
add
inc
push
ja
cmp
adc
and
and
test
rolb
mov
inc
xor
imul
sub
xor
cmpsb
call
push
stos
jbe
fwait
out
adc
cmc
mov
adc
jecxz
insl
adc
push
dec
cmp
or
dec
stos
std
movsl
imul
icebp
add
jl
cmp
xchg
add
jo
and
sub
in
push
cmp
iret
outsb
jle
xlat
sti
popa
icebp
add
adcl
pop
clc
mov
mov
and
mov
lods
loop
int
jecxz
in
cwtl
les
or
inc
and
or
adc
call
fdivs
arpl
push
cmp
lock
mov
lahf
push
fisubl
push
mov
es
lea
xor
jp
stc
loope
enter
and
stos
lds
inc
int
popf
xchg
xchg
inc
fs
insl
lods
lret
idivl
fxch
std
int
push
lahf
push
lret
stos
pop
cmp
sbb
mov
mov
in
mov
cmp
dec
jno
sar
int
adc
cmp
pop
xor
lods
jo
sbb
ja
movsb
pop
xor
ljmp
gs
outsl
adc
dec
fcoml
jl
inc
es
pop
mov
cmpsl
push
enter
fsubp
jg
or
jge
repnz
cmp
and
push
add
mov
mov
fs
xchg
add
jp
jns
or
jmp
aas
shlb
cmp
jb
cmpsb
mulb
jp
xlat
dec
lods
pushf
or
push
das
js
into
lret
or
cwtl
fucomp
inc
out
stos
idivl
sub
pop
jb
sti
outsl
mov
sbb
shlb
or
sbb
fisubrl
in
out
lahf
inc
xor
aad
cld
scas
rol
mulb
insb
popa
imul
les
add
jg
cld
or
sbb
cmp
xchg
jp
dec
adc
sbb
gs
jmp
sti
lock
mov
cmp
les
xchg
loop
push
inc
rcll
xor
scas
cmp
lea
push
adc
lods
add
out
js
lock
sub
rolb
dec
xchg
rorl
popf
js
test
push
daa
filds
push
out
out
dec
out
incl
insb
lret
lret
mov
ret
into
dec
mov
sub
and
xchg
sub
ss
mov
push
out
loope
pop
ret
movsb
loopew
int
and
jb
sub
mov
iret
ss
cltd
sbb
cmpsb
rol
xlat
sub
aaa
xlat
pop
addr16
fidivrl
inc
in
cltd
addr16
adc
sbb
add
mov
push
jle
inc
jle
in
dec
add
into
lret
aas
lds
pop
dec
stos
in
pop
cli
inc
jnp
dec
dec
lret
pop
add
in
xchg
imul
mov
mov
inc
cmpsb
fisttpl
stos
inc
pushf
aas
pop
jp
repz
xor
dec
adc
jbe
mov
xor
lods
xor
arpl
js
imul
dec
add
mov
or
cmp
or
mov
push
lcall
sub
cmpsl
xchg
into
test
pushf
xchg
sub
mov
arpl
imull
pop
shl
xor
push
fmull
int3
aaa
mov
adc
jmp
pusha
andb
jo
dec
cmp
cmpsl
or
sbb
inc
pop
mov
lea
fdivrs
cwtl
push
push
sbb
mov
xor
add
daa
out
jg
scas
xor
jl
push
fwait
sete
outsl
push
in
sahf
jmp
mov
add
pushf
inc
mov
push
pop
ss
fwait
mov
imul
insl
bound
add
jae
sbb
cmpsl
mov
xor
sahf
add
int
cmpsb
std
arpl
cmpb
mov
lahf
inc
and
and
mov
fdivl
inc
dec
in
mov
or
jecxz
in
xor
mov
shrb
dec
cmp
sbb
or
push
add
sub
jle
or
andb
popf
nop
sbb
aas
lret
xlat
sub
popf
in
dec
xchg
into
push
cmp
stc
sbb
enter
repz
cmpl
popa
jl
fstl
xor
rcrb
repz
sbb
daa
fdivs
or
sub
mov
lock
test
pop
add
xchg
inc
les
ds
lahf
out
lods
into
adc
dec
lock
pop
jmp
add
push
icebp
jg
pop
ret
mov
add
push
push
cmpsl
cltd
mov
xor
add
test
imul
mov
inc
out
jne
icebp
adc
push
inc
ret
xorl
adc
shl
loop
stos
sbb
push
int3
cs
pop
cltd
mov
imull
dec
lea
jbe
jmp
clc
nop
imul
mov
cs
mov
mov
mov
or
cmp
dec
xor
fnstenv
push
add
in
mov
arpl
insb
data16
cli
xor
and
imulb
stos
sub
adcb
inc
in
sbb
cmp
xor
std
add
sahf
push
movsl
xchg
daa
sbb
xchg
sti
decb
xor
xchg
add
lds
scas
addr16
cmpsb
pop
pop
lds
nop
xchg
inc
jge
mov
cmpsl
andb
rorb
cwtl
sarb
fidivrl
vcvttsd2si
sti
pop
sbb
adc
inc
jle
push
jbe
out
fnstsw
dec
nop
mov
dec
call
cltd
cmpsb
or
mov
inc
or
push
push
adc
mov
scas
jl
insb
lret
push
add
fcoml
jge
fcom
call
insl
gs
push
xchg
sub
or
mov
adc
adc
dec
xchg
or
jno
stos
out
or
cltd
dec
push
adc
mov
pop
sbb
pop
shlb
sub
push
jo
fldcw
into
stos
pop
dec
xor
lock
cmp
dec
mov
mov
in
mov
bound
jno
repz
int3
and
stc
enter
test
cli
xchg
or
xor
mov
testb
inc
pop
and
or
push
ss
fists
cmc
mov
dec
leave
pop
icebp
mov
mov
pop
xchg
xchg
lea
push
push
xchg
cmp
insl
es
mov
je
arpl
mov
or
mov
ret
popa
orb
int
loope,pn
push
mov
cs
push
subl
mov
lret
push
fcomip
div
cltd
xor
add
cmp
loop
icebp
and
lret
xchg
jnp
scas
sahf
mov
mov
sub
cmc
push
mov
addb
int
dec
xchg
sti
loopne
cmp
xor
cmp
outsl
cwtl
call
adc
push
jbe
fsubl
adc
jb
inc
fmul
cmpsl
fcoml
scas
aaa
add
ljmp
jge
lods
notb
dec
xor
jmp
xor
scas
aad
std
mov
fucompp
iret
add
pop
mov
test
mov
icebp
arpl
mov
cli
dec
xchg
cmp
testl
jne
push
sub
cmpsl
adcb
pop
push
cltd
jl
fisubs
test
in
lds
ja
jbe
sub
xchg
jnp
xchg
insl
adc
fistps
jns
xor
mov
cmp
add
inc
inc
lods
fnstsw
leave
movb
jne
cmp
dec
mov
repnz
push
das
push
js
adc
fmulp
les
adc
pop
jmp
mov
lret
in
enter
xor
xchg
inc
mov
pushf
inc
pop
ffree
enter
add
in
mov
ss
arpl
rclb
sbb
adc
pop
dec
xchg
jbe
outsl
arpl
jge
movsb
and
jno
sarl
dec
inc
sbb
mov
cmpsb
ss
adc
lahf
aad
ret
std
inc
gs
cmp
ss
imul
pop
push
dec
dec
dec
jge
cmp
xchg
shll
mov
dec
fcomps
mov
pusha
xchg
push
pop
dec
jp
push
mov
and
sbb
add
lds
popa
cmp
in
push
push
xchg
sub
add
mov
push
add
dec
xor
add
push
mov
mov
movsb
stc
fisttpll
sub
or
ds
lock
lods
mov
xlat
inc
sbb
mov
repnz
and
cmp
push
xlat
or
cwtl
pop
dec
cmp
je
sbb
sub
lcall
inc
clc
jecxz
pop
shlb
jb
mov
or
xor
jno
mov
fmul
enter
outsl
dec
mov
or
pop
inc
enter
pop
stos
jge
mov
iret
sub
mov
xor
push
out
scas
das
int3
push
iret
lods
imul
fdivl
test
mov
lret
inc
sbb
ret
mov
ds
shl
rolb
int3
push
leave
pop
mov
enter
jo
call
pop
das
addb
adc
and
jno
pop
mov
idiv
fistpll
rorl
xchg
sub
fwait
leave
rclb
cld
enter
or
sbb
sti
lods
int3
cwtl
inc
lahf
repz
bswap
insb
int
sbb
xchg
push
cmp
lahf
jns
int3
or
sub
daa
add
ljmp
mov
imul
pop
test
inc
xchg
jbe
sbb
mov
iret
xor
jno
nop
add
arpl
add
xor
inc
fisubs
dec
xor
arpl
mov
scas
pop
out
pushf
addr16
shll
jns
mov
lods
jbe
and
cli
rolb
mov
inc
sbb
iret
sbb
pop
sahf
outsl
add
insb
out
leave
mov
xor
lea
or
jg
dec
mov
and
lret
mull
jbe
je
movsb
pusha
movsl
ja
sti
inc
ja
fdivrp
or
roll
sahf
mov
push
enter
cmp
jl
and
push
fs
jae
jb
or
mov
daa
mov
dec
fbstp
cmpsb
and
jg
adc
cmc
lock
push
test
imul
mov
cltd
mov
dec
aas
xchg
or
xchg
ret
push
outsl
in
orl
dec
mov
and
aas
divl
push
dec
repnz
int3
inc
sub
sub
inc
loope
movsb
nop
and
mov
orl
adc
jl
jnp
xor
divb
or
cmp
mov
cmp
in
push
add
testb
mov
int
jecxz
into
and
add
mov
and
lods
dec
pop
pop
pop
cli
dec
dec
mov
ficoml
sub
dec
repnz
cwtl
and
fstpt
outsb
mov
inc
mov
icebp
cmp
shrl
or
hlt
shlb
xor
and
sbb
fbstp
push
rclb
adc
imul
sbb
add
push
jmp
movsb
push
mov
xchg
andb
mov
push
outsb
mov
push
xchg
shlb
les
scas
cmp
mov
add
xchg
into
out
xlat
push
xchg
sbb
inc
sub
je
bound
jge
or
pop
cmp
in
filds
inc
and
or
nop
adc
xor
pop
adc
out
adc
cmpsb
cmp
jae
add
push
mov
das
push
aaa
cltd
mov
push
jg
hlt
adc
xchg
pop
sarb
mov
fisubrl
enter
mov
inc
dec
add
mov
xor
js
and
pop
fistl
insb
out
pop
mov
mov
lods
xor
mov
lock
add
xor
inc
xchg
pop
adc
sub
rorb
cmpsb
push
notb
dec
pushf
insl
adc
fs
out
dec
sbb
fiadds
fmuls
pop
mov
or
fldt
es
sbb
xlat
push
clc
xor
rorl
mov
inc
sub
xor
jl
mov
or
stos
loope
jbe
push
pop
push
cld
dec
sti
scas
or
imull
xlat
xchg
xchg
cmp
sub
xchg
jnp
push
leave
fcomps
pop
aas
pop
rclb
std
mov
fcompl
lods
mov
sub
mov
jmp
jae
dec
cld
shrb
sub
mov
push
ret
js
incb
sbb
bound
call
and
and
jmp
fndisi(8087
cs
jmp
cmp
dec
loope
xchg
aad
stos
sbb
cwtl
sbb
out
add
fcoml
lds
cmp
rcll
insb
adc
mov
leave
dec
fs
imul
or
outsl
lret
jl
pop
dec
and
pusha
repnz
cmc
outsb
xor
jns
sbb
push
fs
bound
orl
and
ljmp
pusha
test
inc
outsb
mov
je
cltd
lock
out
nop
dec
and
mov
push
mov
outsl
adc
enter
sub
sub
fwait
add
pop
xchg
rcll
sub
add
jnp
lret
xor
ds
jns
push
or
adc
subb
dec
dec
adc
sub
xor
pop
nop
inc
shlb
shrb
bound
add
stc
ret
sbb
jnp
nop
lret
pop
sahf
pop
lods
xchg
cld
jne
mov
and
push
je
pop
sub
jp
mov
push
lock
pusha
pop
dec
imul
enter
mov
or
pop
sti
mov
call
insl
lock
ret
fdivr
cmp
xchg
xchg
jmp
xchg
fistl
dec
ficomps
pop
sub
jl
insb
sub
cs
loope
push
es
mov
out
ljmp
ss
jns
adc
mov
in
inc
out
int3
movsl
sbb
pop
in
push
mov
test
cmpsb
das
adcl
lcall
iret
and
leave
xor
or
sub
push
insl
orb
mov
divl
fcoml
decb
mov
je
mov
jl
cmc
add
cmpl
mov
cmc
insb
xchg
xchg
jns
outsb
iret
in
ret
es
cmc
std
mov
cwtl
fidivl
in
and
adc
xchg
ss
xor
mov
push
sahf
jge
adc
push
insb
pop
pushf
dec
faddl
and
mov
jae
xchg
cld
iret
insb
nop
cwtl
dec
sub
cmp
jo
sub
or
cmp
leave
aam
pushf
jp,pn
mov
jne
js
lock
inc
dec
pop
ja
je
incl
sub
xor
pop
push
std
out
jbe
jb
add
and
ljmp
in
ljmp
sbb
ljmp
jmp
and
push
shrb
shrb
sbb
push
jae
icebp
fiadds
out
pop
arpl
push
pop
and
xchg
andl
mov
sbb
adc
stos
aaa
sbb
cmp
scas
xor
sar
lret
loop
lock
fldcw
arpl
mov
add
out
lods
xchg
aam
clc
dec
aad
in
pushf
dec
lods
sbb
fcoms
ss
xlat
sbb
mov
xchg
arpl
mov
sub
jo
dec
lcall
jle
jo
insl
jmp
push
out
pop
call
js
push
and
or
jl
stos
dec
outsb
data16
fnstenv
incl
loope
cmp
loop
or
pop
loope
enter
les
sub
test
mov
outsb
out
mov
ds
jo
pop
sbb
add
cmpl
mov
add
sbb
dec
fisubl
and
mov
xchg
out
notb
cltd
sub
jns
lret
cmp
adc
mov
scas
xchg
dec
mov
pop
mov
rcrl
jae
into
jne
add
dec
jg
pop
jl
out
je
mov
inc
xchg
jnp
fsubl
jb
cli
push
jecxz
enter
mov
pop
push
ud2
mov
out
iret
pusha
xor
mov
imul
jbe
into
mov
ljmp
xchg
mov
mov
xor
popf
and
jl
sub
inc
sahf
xor
sbb
aad
pusha
lret
jb
inc
psadbw
pop
sti
fsubrs
int3
and
fisttpl
jbe
push
test
dec
pop
hlt
and
sbbl
add
scas
push
inc
mov
dec
movsl
call
mov
dec
divb
fcompl
insl
mov
xor
fdivs
adc
jo
stos
mov
cmp
mov
mov
std
mov
test
enter
dec
sti
jg
data16
sbb
out
arpl
clc
popa
mov
add
adc
int
inc
mov
mov
std
stos
mov
out
lcall
aaa
cmp
addr16
push
add
cmp
ret
fscale
mov
xor
imul
lret
addr16
pop
or
rcrl
push
lds
sbb
push
sub
push
insl
pop
ja
mov
mov
xchg
mov
xchg
mov
testl
jecxz
test
rcrb
loop
inc
pop
cmp
add
std
jge
sbb
sbb
and
fadd
ss
out
jl
add
jbe
sub
add
xor
test
stc
gs
shll
dec
loopne
xchg
mov
jno
dec
push
pop
and
neg
test
xchg
dec
mov
xorl
sbbb
adc
cwtl
adc
inc
pop
xchg
testl
js
fwait
inc
gs
or
mov
push
stc
sahf
xor
loopne
aas
jno
dec
fwait
stc
and
es
push
mov
xchg
movl
xor
pop
clc
imul
scas
push
and
test
inc
mov
push
mov
inc
dec
out
aam
add
push
pop
subb
pop
ret
mov
jmp
pop
fcoml
pop
rorb
jb
adcb
sbb
cmp
nop
fidivrl
pushf
lods
mov
push
hlt
pop
jb
lea
rolb
sti
aad
jle
xchg
or
int
pop
sub
and
incl
cmp
aaa
mov
or
sub
in
pop
lret
push
push
jo
xor
cmpsb
pop
lea
inc
in
xor
cmpsl
adc
jnp
add
mov
fldcw
neg
outsb
dec
and
neg
lea
repnz
mov
insb
jle
aad
mov
add
sub
hlt
cmp
push
jge
pop
test
xchg
xor
movsb
and
and
or
loop
mov
inc
std
mov
and
mov
dec
adcb
nop
xchg
mov
mov
dec
and
pop
and
mov
or
push
mov
xchg
nop
and
pop
int
cmp
mov
mov
aam
ljmp
mov
adc
movsl
jae
jg
cmpsl
xchg
mov
fldcw
sbb
mov
inc
pop
jbe
xbegin
mov
repnz
push
cmp
pop
imul
xchg
push
xor
dec
mov
je
cmpsb
ds
in
push
sbb
in
jg
adc
aas
popa
pop
cmp
data16
sbb
addr16
stc
xor
call
mov
ljmp
jle
add
dec
sbb
dec
enter
xchg
dec
fs
and
ljmp
inc
pop
sbb
orb
repnz
mov
mov
aaa
add
bswap
lcall
lods
ss
lret
sub
and
xchg
xchg
sbb
xor
push
push
sub
adcb
inc
outsl
cmp
ret
dec
loope
dec
icebp
scas
mov
fsubrs
adc
aas
adc
and
adc
pop
cmp
fcmovnu
hlt
pop
scas
ret
inc
cltd
fsubl
dec
loop
mov
cmp
mov
and
or
aas
daa
and
shr
ret
inc
mov
xchg
sub
test
call
xchg
out
xchg
test
mov
jmp
roll
add
scas
imul
loop
cmc
pcmpgtd
jns
cs
imul
inc
push
imul
jo
fs
clc
jge
mov
aaa
mov
inc
repz
add
mov
and
loop
or
pushf
out
mov
cli
int
add
cmc
imul
jae
xor
pop
and
add
jne
les
pop
ljmp
xchg
das
sub
aad
ss
xor
pop
std
sarb
call
or
clc
andb
pop
or
fsubr
stos
inc
mov
std
push
jno
mov
mov
cwtl
add
fisubs
jno
pop
lock
es
bound
and
xchg
cmpsl
int3
and
je
imulb
bsf
paddsb
mov
and
addr16
dec
loopne
jp
pop
or
jl
lea
sbb
ficoms
stc
xchg
negb
cld
xor
scas
xchg
mov
lock
mov
push
ja
sahf
cmpsb
pop
shrl
clc
notl
stc
xor
pop
add
leave
sbb
jg
dec
add
frstor
mov
cld
fbld
jl
jne
inc
je
cmp
loop
jo
inc
pop
or
fdivl
lahf
jg
shrl
jmp
mov
sub
jb
sbb
xor
mov
jmp
sub
mov
inc
jns
dec
loop
pop
jno
pop
add
in
outsb
push
ja
imul
sbb
mov
mov
sub
call
aaa
mov
sbb
sub
inc
cltd
es
lret
shrb
test
sub
mov
and
aad
add
and
lcall
or
xchg
scas
popf
out
test
ret
or
stos
and
and
shrb
dec
int
mov
outsl
dec
fidivl
sub
cmp
pop
xchg
inc
sub
mov
xor
mov
and
cmp
mov
pop
pop
push
nop
and
scas
or
ret
jo
js
xchg
lret
xor
inc
std
adc
divb
or
aad
cmc
nop
clc
fmuls
rolb
inc
xchg
jecxz
adc
fwait
pop
jb
xchg
inc
pop
dec
xchg
loope
jmp
xor
int
xor
dec
adc
cmp
scas
adc
outsl
and
ret
loope
xchg
inc
gs
push
aaa
inc
iret
insb
jbe
popl
rcrb
inc
push
jb
xchg
or
dec
cld
jmp
stos
jg
xlat
xor
push
or
std
ljmp
pop
xor
sub
mov
jo
notl
or
xorb
sbb
jns
cwtl
aaa
pop
sub
movsb
jb
aad
sub
cmpsb
mov
scas
shrl
cmp
aam
iret
subl
lock
add
push
gs
pop
mov
repnz
bound
cmpsl
or
jo
fmuls
fucomi
pushl
lret
xchg
out
jbe
or
and
icebp
lret
dec
leave
mov
mov
push
jecxz
jns
jle
inc
cmp
sbb
ret
cltd
add
pushf
and
fisubs
repnz
adc
xchg
movsl
sub
pop
mov
jle
inc
hlt
xor
jecxz
inc
cmp
cmp
sub
push
push
mov
pop
in
test
out
push
cli
pop
xchg
in
dec
xor
jmp
inc
jl
xchg
cmp
imul
cmp
in
pop
es
dec
or
imul
pop
pop
ds
out
and
stos
dec
push
arpl
sub
andl
loope
adc
jl
lret
cmpsb
xor
pop
iret
pop
xor
outsb
int3
adc
std
mov
add
add
in
add
int
fisubrs
jmp
mov
adc
jl
mov
out
push
jae
lea
jl
pop
lods
mov
mov
mov
sarl
push
xchg
and
dec
add
sbb
cmc
aam
cmpsb
or
in
xor
jnp
sti
enter
push
ret
pop
loope
ljmp
ss
or
scas
xor
loope
cmpsl
sbb
inc
sub
ss
adc
cmp
and
dec
and
push
test
inc
and
scas
out
and
imul
ss
and
jns
das
fxch
mov
je
add
mov
jmp
or
xor
mov
pop
gs
subb
jmp
push
pusha
pushf
stos
incl
stos
sub
xlat
sub
xchg
lahf
lock
arpl
or
aad
cmc
les
idivl
inc
or
aad
ss
xor
cmp
imul
xor
mov
iret
sbb
iret
fsts
pop
mov
push
xchg
push
or
insl
inc
or
imul
das
call
popa
pop
jecxz
push
mov
pop
testb
pushf
mov
int
xor
and
xchg
movsb
and
int
pop
lahf
mov
mov
inc
and
testl
sub
mov
dec
fwait
push
push
cli
sbb
popa
repnz
pushf
hlt
cs
and
aam
ret
mov
pop
je
in
fmull
sub
xor
and
xor
cmp
data16
out
jecxz
pop
adc
stc
cmp
sbb
push
sti
out
inc
jne
cmp
or
lret
add
sub
add
adc
cld
test
jne
mov
cmpsb
mov
mov
fwait
addl
pop
loop
out
xchg
jnp
movsb
cmpsb
out
push
inc
enter
mov
cmp
jg
mov
xor
pushl
rcrl
int
add
repz
mov
lods
ret
lods
test
in
arpl
pop
or
xchg
pop
lret
sub
sub
sbb
inc
xchg
jbe
out
out
and
cmp
push
icebp
add
ss
scas
out
cmp
cmp
int
sbb
iret
ret
xor
orl
adc
out
cmc
scas
cmc
and
adc
jo
sub
lcall
sub
in
test
pop
dec
inc
xlat
movsl
clc
pop
lcall
mov
mov
mov
add
fcomi
xor
ljmp
xchg
movsl
push
test
arpl
loopne
push
dec
cmp
aas
call
scas
cmp
jle
mov
out
rcrb
cmpl
dec
pop
push
add
inc
outsb
cmp
jp
insl
rcrl
xchg
xor
out
adc
dec
rcrb
add
push
loope
iret
insb
sub
jns
sub
jnp
pop
loope
xorl
push
subl
push
mov
popa
mov
mov
or
xchg
movsb
lods
inc
scas
out
push
daa
pop
movsb
ja
dec
mov
lcall
repz
pop
pop
arpl
jmp
lahf
ja
push
enter
out
aaa
jmp
ret
push
adc
fcomps
dec
mov
popf
jae
dec
mov
jbe
icebp
push
js
inc
sti
aaa
adc
loopne
mov
jb
iret
jge
sar
pop
ja
lret
cli
sahf
lea
or
sub
mov
call
ret
mov
jl
xor
jo
lds
stos
dec
icebp
rcr
jno
clc
pop
and
xchg
inc
out
enter
and
sbb
negb
push
inc
imul
push
dec
inc
mov
and
dec
imul
jecxz
sbb
fcoms
push
sahf
mov
sbb
or
add
or
ss
inc
fistps
mov
imul
xor
dec
xchg
ja
lods
dec
inc
push
sub
inc
stc
pusha
popf
clc
dec
mov
sbb
or
imul
jo
negb
and
mov
popa
or
fwait
jle
mov
dec
mov
sub
mov
dec
les
divl
push
fwait
inc
enter
enter
mov
sarb
mov
xor
lods
sub
pop
lds
rorl
sbb
mov
inc
popl
nop
mov
mov
stos
cli
fistl
sbb
adcl
test
shrl
inc
roll
xchg
clc
push
push
imul
lret
frstor
lcall
stos
iret
arpl
jl
cltd
adc
add
lcall
hlt
sbb
inc
add
jmp
mov
inc
or
pop
push
xchg
inc
mov
mov
xchg
xlat
jge
mov
pop
adc
pushf
sub
ds
add
loopne
stc
inc
rcr
icebp
in
dec
test
cwtl
sub
outsl
mov
mov
push
xchg
cltd
mov
push
push
adc
pop
and
xchg
loop
leave
dec
cmp
pop
xor
add
andl
jg
lahf
push
fldenv
sub
adc
xor
jmp
ss
push
insl
jmp
add
sub
sbb
pop
jle
mov
or
xor
mov
sub
mov
add
add
mov
leave
std
xor
pop
repz
fcmovnu
nop
dec
inc
ljmp
or
sbb
mov
jp
cmp
jno,pt
jmp
xchg
icebp
cmp
sbb
mov
or
jo
test
mov
push
or
pop
imul
xor
inc
imul
fiadds
cwtl
test
sub
nop
loope
xchg
cmp
pop
and
out
adc
xchg
pop
aad
out
mov
jl
dec
imul
pop
cmp
mov
adc
jnp
and
cmp
in
test
cmpsl
cmp
loopne
fldlg2
push
mov
aad
push
xchg
stos
test
das
xor
jbe
fisubrl
shrb
mov
jno
add
or
add
inc
iret
mov
xchg
jbe
mov
adc
shrb
jl
mov
push
mov
nop
aam
jmp
adc
lock
lret
shlb
cmpl
int3
mov
fnstsw
inc
aaa
mov
lea
lods
in
je
bound
mov
mov
in
js
outsl
movsl
lahf
inc
insb
mov
xchg
push
add
repz
push
roll
into
pop
mov
lds
sub
call
xor
sbb
jnp
pushf
mov
pop
cld
cld
aad
jecxz
jb
lcall
stc
inc
cwtl
shlb
pop
sbb
adc
add
xchg
testl
nop
test
aaa
lock
inc
out
shlb
test
jmp
ss
mov
mov
adc
and
lcall
je
pop
add
jne
mov
xchg
push
pop
push
and
mov
jo
mov
fadds
and
negb
je
std
or
insl
pop
sar
ror
pop
jae
je
clc
and
jb
movsb
adc
repnz
insl
sti
bound
stos
inc
sub
decb
sbb
push
add
inc
mov
repnz
dec
and
jge
pop
stos
xchg
xor
aad
out
sar
cmpsb
incl
and
xchg
and
jl
out
mov
addr16
jno
xchg
xchg
ss
leave
mov
adc
int3
test
into
pusha
cltd
int3
loop
cmpsl
inc
cmpsl
pop
fstpl
pop
pop
and
xchg
sub
arpl
ljmp
add
repz
and
verw
push
js
insl
mov
ds
imul
and
loopne
add
ret
lock
faddl
call
test
movsb
call
adc
or
xlat
out
pop
cmp
dec
and
lea
sbb
pop
nop
xchg
xor
aas
je
shr
and
out
popf
leave
add
bound
in
jne
rcr
imul
add
cmp
sbb
test
inc
adc
je
rcll
ss
cmp
ja
insb
dec
fwait
mov
sti
pop
mov
pop
xchg
mov
dec
and
pop
sub
lret
dec
jmp
inc
loope
xor
push
das
push
inc
sbb
je
pop
and
mov
xor
fwait
cmp
ja
cltd
movsl
dec
fidivl
jle
into
test
or
adcl
add
pop
jl
ds
push
push
enter
pop
aas
cltd
lds
in
dec
adc
pop
ss
es
sbb
xchg
inc
add
loopne
test
movsb
sbb
jl
xchg
stos
inc
sbb
add
sub
xchg
mov
scas
sbb
add
xchg
pop
pop
int3
lods
and
push
mov
punpckhdq
xchg
clc
std
push
lods
mov
incb
icebp
shr
sbbb
push
loope
jne,pt
and
icebp
addr16
fidivrs
loop
push
push
popf
or
xchg
mov
jge
inc
push
ficoml
and
mov
mov
cmp
mov
int
mov
pop
je
and
popa
lret
sub
lods
inc
nop
lahf
cmc
pop
lea
adc
movsl
xchg
push
pop
mov
jle
inc
add
inc
frstpm(287
push
pop
pusha
add
jae
xor
loop
push
lcall
mov
pop
sbb
push
push
dec
push
das
int
cmp
mov
fcmovnb
add
sub
jge
out
popf
mov
xchg
test
or
sub
je
repz
in
cmp
xchg
mov
dec
mov
mov
rcll
xor
nop
mov
pop
aas
inc
repnz
jg
push
leave
sbb
icebp
stos
cmpsb
xor
sub
iret
fwait
mov
out
jle
popa
std
xchg
cmpsl
xorb
add
stc
negb
in
daa
pop
scas
inc
cmp
cmp
dec
jne
cmp
jo
jae
mov
shll
pop
sbb
sub
mov
ja
fcmovne
sub
sbb
insb
or
push
sub
sahf
lcall
fwait
xor
xor
xchg
rorb
jno
aaa
cltd
push
in
popa
mov
sbb
xchg
out
orl
lea
inc
out
in
mov
pop
mov
clc
insl
out
sub
idivb
mov
stos
mov
mov
pop
push
sbb
xor
dec
add
jb
ljmp
sub
scas
sub
mov
rcll
test
jl
mov
sahf
dec
cmp
cmp
pop
cmp
pop
stc
std
es
pop
sti
mov
pop
push
sbb
mov
test
fcmovne
jle
mov
or
aaa
mov
mov
test
mov
lods
or
ljmp
cmp
cmpb
sub
dec
repnz
cmp
popf
add
outsl
aas
cmp
pop
in
lretw
pop
inc
shufps
loopne
add
pop
mov
pop
xor
mov
mov
inc
popf
cmpsb
and
jbe
cs
inc
sbb
cli
inc
sub
jb
jle
shl
into
stos
int3
lock
xchg
fs
lods
xchg
aam
and
lahf
rol
mov
pop
xchg
mov
mov
mov
and
fldl
push
xor
cmpsb
add
cmc
dec
daa
out
js
test
stos
xchg
sub
xor
inc
lcall
mov
and
and
jmp
ret
iret
outsb
arpl
aas
mov
out
dec
mov
cmpl
add
lahf
add
mov
or
sub
push
mov
aaa
mov
outsb
inc
fdivrl
xor
insb
xchg
mov
shr
cmp
xor
inc
xlat
mov
rorl
mov
sbb
aam
or
dec
out
jg
sub
lods
xor
and
addl
ret
xchg
imul
add
insb
push
stos
mov
jns
aam
jbe
mov
and
pop
mov
fistps
lea
sub
lret
xchg
mov
aad
dec
cmc
pop
stos
sub
mov
loope
imul
xchg
stos
cmp
and
cld
dec
into
xor
sbb
dec
mov
sbb
adc
xchg
sbb
mov
fcompl
push
scas
das
neg
pop
inc
cmpsl
xor
mov
mov
inc
int3
xor
ss
cmp
loop
jo
imul
xlat
mov
loopne
test
out
xchg
inc
out
ljmp
sub
or
hlt
mov
add
and
mov
inc
sbb
dec
jno
sahf
mov
sub
sahf
pop
inc
mov
inc
mov
mov
mov
dec
fs
push
mov
or
inc
add
lret
dec
cli
cmp
mov
inc
pop
mov
fwait
sti
shl
fistpl
loope
cmc
xchg
add
push
out
lock
fucomi
xor
ja
icebp
xor
mov
adc
imul
shll
imul
test
and
dec
repnz
and
stos
cmp
jns
js
pop
aas
cmp
pushf
pop
ds
popf
xor
fiaddl
popa
and
cmp
rcll
les
cmp
pop
push
adc
stc
pop
jb
mov
enter
fnstenv
pop
test
xchg
push
hlt
adc
or
mov
aaa
inc
add
imul
shrl
movsl
xorl
xchg
push
lock
fstl
add
sub
adc
int3
mov
iret
out
addr16
out
sub
adc
or
mov
cwtl
test
jo
sbb
dec
daa
scas
stc
dec
lods
fnstenv
fstpl
pop
lret
movsl
or
ficomps
mov
mov
pop
cld
or
add
cmc
mov
mov
add
cld
shlb
ret
ss
les
arpl
or
fstp
rorl
mov
sbb
aad
lods
xchg
mov
jecxz
mov
aam
shl
mov
pop
fadd
inc
outsb
cwtl
mov
cmp
cwtl
pop
pusha
jmp
insb
ficoms
std
test
pop
push
sti
adc
push
push
call
jo
test
xor
insl
je
fs
in
mov
pushf
jno
out
lds
test
mov
jns
fisttps
pop
idivl
ret
ret
xchg
iret
or
adc
dec
nop
rorl
ret
adc
dec
add
xor
mov
mov
gs
pop
es
hlt
enter
xor
mov
test
xchg
out
cli
aas
pop
mov
cli
fsts
push
dec
ret
fs
sbb
adc
les
pop
lock
icebp
ds
js
mov
ja
scas
lcall
ja
sbb
insb
inc
dec
push
and
mov
pop
cmc
pusha
xchg
mov
sub
loopne
ja
xchg
arpl
adc
mov
aas
inc
mov
push
roll
cmp
xchg
es
pop
jne
je
or
cmpsl
mov
add
mov
dec
test
call
mov
push
inc
ret
mov
jle
dec
sbb
adc
out
cmp
push
adc
arpl
inc
push
jno
into
insb
ret
insl
cld
and
add
push
sub
daa
movb
jns
cs
dec
call
xchg
xchg
hlt
scas
pop
stos
sub
jne
out
or
push
adc
bound
cmpsl
xlat
popf
out
and
push
push
pop
cmpsl
outsb
cmp
mov
orl
adc
insb
subb
cmp
dec
es
cmp
xor
lret
push
mov
movsl
cld
sarb
fcmovb
xor
mov
xchg
popf
xchg
dec
stos
pushf
xor
mov
fnstsw
xchg
pop
xor
sbb
insl
push
cmp
mov
adc
not
mov
rolb
icebp
mov
into
rolb
sahf
ret
aas
out
dec
hlt
dec
lock
mov
out
jp
pop
sti
sti
ljmp
pop
adc
xchg
pop
lods
or
orb
or
add
cmp
addr16
ljmp
jecxz
adc
push
inc
rol
int
mov
cmp
mov
loopne
adc
fidivrs
xor
ss
aaa
ret
pusha
jae
add
fistpl
stos
out
in
dec
push
imul
push
push
shrl
xor
or
mov
mov
rolb
xchg
fnstcw
fnstcw
add
and
std
or
pop
mov
jo
xchg
sbbl
bound
sub
dec
out
pop
dec
cmpsb
dec
push
xor
shl
mov
fildl
lea
sbb
cmp
pop
xor
cld
stc
inc
inc
jg
sbb
push
cmp
mov
and
outsb
rcrl
cmp
xchg
dec
movsl
adc
cmp
push
xchg
and
ret
sahf
clc
xchg
stc
lcall
out
sbb
lods
popa
pop
pop
dec
xchg
stc
jno
add
enter
repz
mov
stos
leave
test
add
adc
and
mov
and
test
mov
and
cmp
es
adc
xchg
outsb
dec
push
fildll
idivl
cld
filds
jns
test
mov
movsb
mov
mov
pop
inc
cmp
cmp
dec
dec
xchg
addl
sub
loop
cmpb
jbe
out
push
pop
xorl
xor
adcb
pop
jns
hlt
add
rorb
imul
mov
repz
sub
fmul
push
mov
fstps
scas
gs
inc
mov
call
insl
jbe
insb
xlat
cs
test
xor
dec
outsl
stos
ds
les
xchg
sub
aam
cs
rclb
and
inc
or
pusha
jo
push
dec
les
arpl
testl
inc
outsb
adc
repz
sbb
xor
mov
leave
xchg
pop
lret
xchg
mov
cmpsl
in
mov
cmovno
jecxz
sbb
fs
bound
cmpsb
cmp
lds
pop
pop
cmp
push
aaa
outsb
inc
comiss
cmc
or
insl
loope
push
add
mov
js
inc
repnz
xor
dec
pop
aaa
dec
sbb
outsb
outsl
sub
daa
outsb
leave
push
sahf
jle
subb
pop
mov
adc
mov
aam
inc
imul
sub
jbe
addl
jae
sub
rcrl
out
jle
ss
xchg
jmp
fisttps
imul
fs
notl
xchg
nop
inc
and
pop
andb
filds
inc
dec
inc
lea
notb
or
push
jge
repz
jno
inc
repnz
xchg
cmpsb
xchg
repnz
fwait
in
dec
dec
push
mov
jp
sub
dec
imul
push
pop
mov
mov
jl
cmp
mov
aam
adc
ds
stc
jne
popf
jb
dec
out
mov
inc
ss
loope
or
ret
lods
xchg
ds
push
enter
fwait
xchg
stc
xor
stos
xchg
xchg
movsb
mov
lahf
sub
mov
push
hlt
call
outsl
sbb
sbb
dec
movsl
arpl
mov
jle
mov
jecxz
mov
pop
cld
inc
mov
xchg
and
fiadds
mov
push
add
pop
roll
add
cmpsb
cmc
and
sbb
cmp
aas
jp
sub
leave
push
aam
enter
sub
xchg
inc
shll
sub
push
xor
insb
and
jg
cmpsl
xchg
jp
cmc
pusha
pushf
mov
fmulp
inc
rcr
pop
xlat
xchg
dec
mov
rcr
fbld
mov
movsl
lcall
testl
shr
or
push
insl
xlat
pop
push
jo
sub
shll
out
mov
adc
push
xchg
xchg
pop
mov
xchg
mov
jno
xchg
arpl
and
jge
jnp
adc
lret
fisubs
jne
lahf
or
lds
cmpsb
mov
mov
mov
mov
jb
adc
dec
shll
mov
arpl
sbb
mov
mov
push
pop
stc
mov
adc
and
repnz
cli
aad
cvtps2pi
mov
add
lret
cld
sti
inc
pop
cmp
or
fistpl
xchg
sbb
inc
dec
in
push
mov
inc
xchg
inc
xchg
xor
scas
psubusw
push
cmp
gs
lahf
js
push
test
or
insl
subl
fisubrs
je
add
insb
mov
xchg
jge
stos
adcl
xchg
xchg
push
or
ja
or
pusha
fwait
shrb
sbb
addr16
mov
mov
xor
lret
repnz
lret
add
jo
dec
pop
orb
and
push
inc
dec
sub
negl
aaa
jecxz
shrl
nop
jge
test
movsb
aad
ja
jne
pop
lods
push
xchg
sarb
das
adc
cltd
dec
popf
shrl
lock
add
cmp
aad
and
cltd
mov
aaa
mov
jbe
jmp
pusha
pusha
je
mov
inc
mov
sarb
dec
into
sbb
lock
cmc
out
inc
inc
xchg
sarb
jp
cmp
xchg
inc
jne
sbb
jo
fisubs
and
arpl
aam
loope
adc
dec
add
sub
or
xchg
sarl
dec
jo
xchg
and
outsb
inc
fstpl
and
lods
mov
mov
bound
and
inc
inc
cmc
mov
pop
lcall
sbb
dec
push
mov
out
fwait
push
jmp
inc
insb
lret
mov
push
lret
fcmovnbe
pop
std
sbb
or
nop
stos
ljmp
xchg
nop
mov
clc
movsb
fisttpll
jp
je
in
cmp
loope
jne
std
pop
dec
lock
cli
lds
dec
add
mov
or
mov
imul
and
cmp
mov
popa
outsb
and
test
rcrl
add
ror
mov
cld
push
imul
sbb
leave
sub
outsl
inc
test
inc
ja
jle
push
ss
je
popf
scas
inc
int3
dec
push
popf
imul
lcall
movsb
jnp
jp
popf
and
dec
xchg
out
in
int
pushf
adc
sbbb
cmp
xor
xchg
out
es
ds
loop
and
cmp
sbb
ficomps
int
fcmovnbe
jle
push
jmp
outsb
xchg
mov
ss
aas
dec
sub
add
mov
dec
iret
mov
pop
inc
es
xchg
mov
rorb
inc
mov
cmp
aad
icebp
pop
loop
adcl
mov
loopne
lock
aad
cmc
mov
lahf
iret
movsb
xchg
inc
sbb
push
cmp
cmp
jmp
mov
insl
minps
push
ss
sub
je
call
fwait
xor
in
stos
ja
sbb
leave
ret
outsb
rcrl
out
adc
xor
fcoms
lods
xlat
sbb
aam
mov
je,pn
cld
cmpsl
lret
enter
cmpsl
mov
xor
pop
or
outsl
mov
jecxz
popf
lock
es
sbb
mov
loope
cmp
nop
jnp
mov
movsl
aas
imul
pop
pop
mov
inc
out
cwtl
xor
lret
in
lock
pop
mov
or
dec
mov
repz
ljmp
pop
cmp
aas
mov
mov
das
ja
ret
cmp
imul
inc
into
mov
aaa
sbb
pop
sahf
in
bndldx
sbb
push
xchg
push
xchg
add
jno
call
pop
mov
mov
push
out
shr
jge
sbb
fst
ffreep
addr16
fs
shl
adc
es
aas
or
icebp
lea
mov
mov
xchg
ds
pop
push
test
dec
enter
xor
out
imul
fidivl
out
jg
push
roll
cmpl
mov
dec
mov
daa
nop
dec
test
test
pop
add
or
push
dec
or
icebp
mov
int
daa
cmp
jno
das
ljmp
outsl
push
sti
test
or
xchg
xchg
jp
sbb
sub
aad
adc
rorl
or
fwait
push
leave
xlat
and
adc
ffreep
scas
in
jl
test
rorl
push
ja
xlat
push
cs
test
in
filds
push
scas
xor
lcall
inc
cmpsl
push
xlat
arpl
aam
lret
call
sub
or
dec
mov
pushf
loop
popa
adc
dec
lods
sub
mov
sub
movsb
dec
dec
or
dec
fbstp
mov
cli
outsl
push
sbbl
jle
cmp
cmp
jne
jno
mov
repz
sub
pop
cwtl
adc
xchg
jns
mov
popa
pop
movsb
push
in
inc
adc
xchg
xchg
inc
les
or
fcmove
scas
xchg
int3
pop
dec
adc
jge
jp
addr16
out
repnz
sub
inc
inc
and
in
jmp
sbb
mov
push
or
loope
pop
fidivrl
out
sub
pop
iret
inc
mov
lret
test
adc
ljmp
hlt
inc
cmp
mov
notb
mov
out
repz
daa
mov
and
push
xor
leave
loopne
in
sti
jg
dec
sub
push
loop
pop
cli
repnz
or
sbb
or
mov
andb
nop
or
xor
dec
add
cwtl
mov
cmp
mov
and
ja
test
ret
cld
inc
xor
int3
lods
add
lea
pop
push
ja
fcompl
les
aad
jle
add
testb
sti
out
xchg
stos
xor
adc
pop
sub
sub
or
dec
sub
and
cli
ljmp
lret
adc
pop
test
fdivs
adc
mov
cmc
pop
mov
stc
sahf
ret
xor
xchg
pop
cmp
jb
popf
cmp
mov
xchg
adc
out
sub
or
adc
cs
jmp
in
jae
jmp
popa
out
and
test
lret
push
jg
inc
push
adc
jb
sub
xchg
jle
pushf
shrb
xor
fists
int
sbb
test
dec
fucomip
pushf
mov
sarb
addr16
stc
xlat
mov
add
xchg
rcll
dec
in
pusha
sbbl
fwait
inc
popa
mov
mov
mov
mov
das
lahf
mov
mov
sahf
add
push
lret
jle
sub
dec
cld
or
push
outsl
push
add
stos
rcr
push
pop
push
mov
out
imulb
pop
push
sub
test
pushf
inc
pop
xchg
mov
out
inc
xchg
and
add
mov
scas
aad
jecxz
hlt
push
bound
cmp
dec
insb
mov
sbb
dec
mov
cwtl
xchg
in
popf
rcr
jl
dec
cmpsb
inc
pop
shl
dec
andl
or
add
pop
pop
sbb
fsubrs
sbb
out
cli
sbb
jp
inc
popa
fldt
divl
scas
pop
xchg
inc
or
pop
xor
test
sbb
sbb
sbb
mov
dec
inc
mov
sbb
jge,pt
xchg
cmp
bound
jge
popf
jb
xchg
call
subl
mov
xchg
lock
cmp
xchg
xchg
loop
ljmp
pop
ja
std
mov
mul
mov
pusha
lahf
inc
in
jmp
inc
lcall
sub
cld
xchg
push
lods
cld
xchg
ret
pop
lahf
cli
in
cmpb
ja
divl
aam
jne
shl
xor
mov
jp
mov
cmp
inc
pop
out
fidivs
sub
sub
cld
stos
into
push
mov
pop
xlat
jno
sbb
andb
cmp
xchg
imul
xor
and
sub
mov
add
sbb
mov
xchg
dec
pop
movsb
push
rclb
cmp
call
push
jns
mov
in
je
ss
rorl
jp
es
mov
sub
stos
movb
or
cmp
outsb
cmp
rcrb
cmp
jg
push
pusha
jae
int3
pusha
or
popa
sub
pop
and
adc
push
mov
cmp
hlt
or
push
rorl
sub
adc
pop
dec
subl
cltd
jmp
xor
cmp
out
sbb
subb
mov
imul
pushf
movsb
fidivs
sbb
inc
scas
mov
repz
xor
stos
lahf
sbb
mov
jno
add
outsb
mov
mov
loop
mov
mov
dec
loopne
in
mov
sbb
adc
mov
in
aas
ret
aaa
cmp
inc
pop
lock
insb
inc
pop
adc
fnstcw
cmp
push
cmp
xor
jb
stos
pop
aad
les
loopne
mov
orb
cmc
jge
add
fidivrl
out
dec
dec
xchg
retw
popa
call
inc
adc
pop
pop
xchg
sub
movsb
adc
ja
push
or
push
jmp
jecxz
xchg
push
cs
lahf
pop
pop
iret
xchg
jae
addb
xchg
add
lods
pop
inc
lock
add
fucom
pop
or
jg
cmp
out
jns
and
push
lea
ja
adc
ja
mov
fadds
inc
sbb
pop
jg
faddp
into
out
movb
add
shll
xor
insl
pop
adc
fwait
push
stos
mov
popf
lret
xor
rol
mov
jae
cmp
sbb
mul
push
popl
cmpsl
hlt
cmpsb
mov
and
aas
jge
daa
xor
rolb
imul
sub
inc
sbb
hlt
pushl
sub
xchg
rclb
inc
mov
add
sti
mov
call
cli
imul
imul
mov
dec
loop
fstpl
es
lret
stos
adc
xor
popf
aas
bound
adc
popf
cwtl
mov
fnstcw
xor
out
loop
into
out
fdivl
mov
jns
shrb
fs
or
pop
hlt
int3
loope
lret
and
enter
incl
and
xchg
scas
or
repnz
cmpl
pop
cmp
add
ja
movsb
jg
movsl
shlb
shlb
push
pusha
enter
sub
out
out
sub
aad
and
xlat
sti
fistpl
scas
cmpsl
hlt
cld
aam
cwtl
jbe
or
cld
into
jb
outsl
ret
popa
fucom
mov
scas
mov
jg
out
push
pop
pop
nop
mov
dec
sub
idivb
sub
adc
ds
dec
enter
lock
repz
out
sahf
pop
jecxz
jo
test
loopne
imul
jg
dec
rcll
xor
ss
push
fcom
fldenv
mov
popf
jle
adc
mov
loope
adc
in
lahf
cmp
jne
sbb
shr
adc
inc
mov
in
out
in
add
jp
loop
in
mov
cmc
repnz
inc
sar
cs
dec
inc
or
movsl
pop
pop
data16
pop
mov
sub
pop
mov
loope
and
xchg
inc
mov
popa
mov
in
sbb
xor
lock
cmp
mov
sbb
xor
add
add
xchg
out
mov
pop
daa
lret
sub
andb
nop
lcall
and
jge
enter
pusha
jecxz
in
repnz
outsl
mov
sbb
pusha
movsl
sbbl
sti
mov
jle
enter
scas
stc
in
sub
pop
outsl
dec
jp
sub
mov
pop
insl
mov
push
div
scas
fiadds
and
pushf
rorl
jns
jmp
push
insb
test
jp
je
dec
lods
jmp
fwait
lods
lcall
fcompl
in
int3
out
xchg
notl
idivb
mov
adc
outsb
mov
stos
fsubl
arpl
stos
mov
fwait
pop
jns
lahf
xor
xchg
jle
int3
mov
in
mov
adc
jl
and
lea
leave
and
aas
or
inc
inc
inc
jnp
add
pop
insb
mov
pop
inc
xchg
pop
jecxz
inc
js
xor
out
mov
cmpsb
pop
and
js
pop
fcompl
loope
mov
lea
mov
push
xchg
nop
std
lea
iret
cli
or
dec
popa
ret
aad
gs
leave
or
fidivrs
mov
add
adc
int
push
mov
les
or
cmp
fsubrl
mov
loope
cmp
sub
pop
push
cmp
sbb
sti
push
aaa
ffree
push
movsb
inc
mov
jb
pop
xor
pop
stos
outsl
or
adc
das
outsl
mov
aaa
push
daa
nop
leave
orb
rcll
push
jg
test
jns
out
and
mov
or
jle
dec
mov
lock
add
rcll
cmp
aad
cmp
rol
dec
cltd
frstor
push
out
jle
push
inc
pop
mov
cmp
js
sub
mov
pop
push
aad
ret
sbb
dec
mov
out
mov
sbb
pop
icebp
out
and
pop
add
lods
data16
xchg
cwtl
sub
mov
nop
int3
add
jle
inc
lods
push
adc
imul
imul
divl
and
sub
xor
cmp
icebp
jne
into
decb
push
addb
enter
std
stos
mov
pop
stos
mov
loop
jae
inc
sahf
add
xchg
jne
loop
cltd
fdivrs
imul
add
xchg
adc
push
subb
xor
push
add
lods
in
out
int3
dec
or
add
stos
in
loope
ds
dec
int3
insl
push
mov
push
sbb
pop
dec
jg
sub
scas
fistps
loop
insb
daa
push
sahf
scas
jno
add
addl
mov
push
adc
mov
popf
xchg
arpl
or
sbb
dec
fs
rclb
mov
dec
mov
inc
pop
pop
pop
cmc
lret
mov
lea
popa
adc
inc
loopne
add
xchg
xor
and
ss
int
or
int3
andb
mov
jnp
pushf
and
mov
jecxz
leave
xchg
icebp
pop
popa
cmpsb
fst
aam
jne
dec
gs
lret
add
xchg
and
mov
pop
lahf
mov
clc
addr16
adc
jne
sbb
inc
in
loop
inc
push
and
push
cmp
jae
pop
inc
repnz
mov
xchg
and
push
out
adc
mov
mov
fdivr
xchg
mov
sub
pop
mov
mov
icebp
mov
mov
and
pop
mov
sub
pushf
push
gs
cmpsl
mov
cmpsl
mov
mov
fidivrs
cmp
and
adc
lods
das
mov
stos
insl
dec
clc
je
imul
mov
sub
repz
jnp
mov
xchg
sub
pop
scas
mov
sarb
insl
jne
das
lcall
jle
pusha
pop
jae
loope
adc
addr16
pop
and
or
jbe
movsb
and
sar
add
mov
push
adc
xor
dec
sarl
and
or
std
sbb
adc
test
xor
jbe
jp
pop
push
test
ds
cmp
sub
add
sbb
pop
dec
add
cltd
pop
in
mov
rcll
adc
out
mov
dec
sub
lahf
insb
cld
out
addr16
imul
mov
icebp
cwtl
cwtl
jnp
push
int3
lods
mov
testl
lret
cmp
push
add
and
mov
ds
imul
imul
test
and
lods
pop
inc
lret
dec
inc
lods
aaa
test
mov
scas
jo
push
push
cld
push
jnp
sub
stos
lods
push
push
outsl
fwait
or
iret
ror
fs
mov
mov
inc
adc
inc
and
lret
pop
cmp
dec
sbb
and
sub
jp
sarb
lods
movsb
lods
add
fisubs
test
mov
pcmpeqd
push
jp
fistpl
cmp
stc
out
cmp
sbb
add
movsl
in
cltd
xchg
movsb
xchg
fsubrl
pop
pushf
dec
sbb
push
imulb
push
addb
and
xor
aad
fxch
and
or
int
mov
mov
adc
sbb
adc
pop
movsl
stc
sub
inc
arpl
mov
inc
jns
cltd
adc
sub
stos
jae
pop
push
mov
push
and
jae
pop
xlat
jge
adc
ja
push
paddd
test
aad
xor
adc
mov
jmp
mov
repnz
xchg
repz
testl
jg
ja
push
fsubs
dec
adc
pop
sub
xor
cmpsb
pop
out
outsb
push
leave
outsl
mov
mov
jg
dec
into
mov
out
int
pop
mov
jecxz,pt
xchg
lock
jg
mov
mov
add
jecxz
xchg
push
jg
repnz
mov
adc
data16
shlb
adc
adc
pop
add
mov
mov
mov
into
fisubs
fisubrs
mov
bound
pop
jb
fwait
je
je
cmp
jo
cmp
es
icebp
xchg
adc
mov
add
and
push
aas
scas
xor
or
jle
jl
adc
daa
push
mov
inc
jnp
jmp
mov
in
lea
sti
nop
hlt
pushf
inc
pop
cs
aam
xchg
into
repz
add
test
cmp
and
es
mov
and
adc
loop
int
inc
adc
inc
icebp
or
adc
ds
imul
pop
push
jbe
daa
mov
pop
xchg
xchg
xchg
movsb
lahf
cmp
fbstp
xchg
jno
push
cmpsb
outsl
pop
sbb
push
cmp
lcall
popa
call
addr16
push
data16
imul
cmp
push
and
xchg
add
in
inc
push
mov
jbe
adc
mov
js
add
lds
pop
xor
icebp
imul
cmp
mov
add
mov
daa
sbb
jecxz
and
arpl
popl
insb
add
outsl
pop
fwait
jae
mov
sbb
imull
rolb
fucom
stos
imul
inc
iret
add
xchg
mull
mov
cmpsl
sarb
fcmovnb
popl
push
ror
xor
lahf
and
or
or
movsb
stos
arpl
add
cltd
repz
inc
mov
xor
push
sti
mov
lahf
dec
outsl
xchg
sbbb
addr16
jp
lods
inc
pop
dec
mov
xchg
mov
mull
jmp
inc
scas
js
jp
stos
push
jb
stos
mov
push
pop
mov
xchg
mov
outsb
xchg
cmpsl
mov
outsb
ret
lods
dec
dec
in
xor
push
add
lahf
lcall
int
ret
dec
sti
cmp
shr
xor
ffreep
cmp
test
ds
hlt
mov
pop
outsl
gs
aaa
jg
test
out
sub
arpl
or
cmc
fcomp
imul
pop
add
xchg
lods
rcrl
pushf
movsb
lods
mov
dec
mov
rorb
add
fwait
out
mov
hlt
sahf
xor
dec
xchg
cli
mov
mov
dec
popf
sub
xchg
push
call
xchg
movsl
xchg
ret
incb
dec
sbb
fs
and
shrw
aaa
notl
iret
ja
lock
sub
cmc
ficoms
push
div
mov
sbb
aaa
mov
xchg
mov
ret
fldcw
ret
add
mov
add
stos
dec
mov
jecxz
xor
iret
fnsetpm(287
adc
std
sub
or
mov
cltd
dec
or
cmp
bound
inc
pop
test
add
xchg
enter
push
sub
cld
jmp
push
pop
leave
sbb
xchg
pop
dec
loopne
lret
adc
mov
inc
ret
out
mov
fnsave
jg
lret
xchg
movsb
mov
jp
push
xor
inc
dec
roll
adc
push
lds
std
cld
inc
dec
cs
push
jae
shlb
sbb
sbb
cmp
inc
scas
pop
pop
mov
adc
les
aad
pop
cmp
push
mov
and
xor
mov
mov
add
xchg
imul
aaa
mov
stos
inc
dec
in
lods
inc
dec
shr
mov
push
jbe
shlb
stc
lcall
xor
rcr
xchg
mov
pop
pushf
fsubrl
cmp
je
mov
aad
mov
dec
xor
add
push
data16
sti
movsb
jmp
dec
jmp
inc
push
mov
mov
push
test
jecxz
mov
inc
std
mov
xlat
xor
mov
sbb
cwtl
pop
out
fisttps
call
or
xor
cli
inc
mov
loop
inc
sahf
inc
inc
mov
std
inc
aad
ds
xchg
andl
sarl
add
add
js
es
mov
test
sbb
and
addr16
and
sbb
and
adc
cmpsb
xchg
in
push
pushf
ror
mov
mov
movsb
stos
jo
cld
popa
cmpsb
sbb
mov
jae
decl
push
cltd
data16
pusha
sbb
pop
sub
sbb
pop
adcl
xlat
mov
mov
add
dec
xor
pop
bound
sub
leave
jbe
lcall
push
imul
daa
jp
cs
scas
in
xor
add
mov
add
aas
adc
sahf
enter
addl
push
in
out
repnz
adc
jmp
testl
fxam
addr16
int3
add
push
ficoml
push
jmp
inc
dec
or
out
dec
cmp
cs
js
and
loope
and
push
insl
mov
xchg
cmpsl
sti
mov
inc
sbb
roll
insb
and
or
inc
aaa
jbe
daa
xor
mov
aam
stos
lods
fildl
xor
lods
jne
jnp
out
pop
pop
cmp
ret
mov
addr16
sbb
jnp
ljmp
hlt
sub
popf
cmpb
shrb
mov
jl
and
cwtl
pop
adc
scas
test
push
addr16
mov
out
shufps
inc
aas
mov
inc
enter
mov
lret
and
mov
mov
cmp
add
jge
in
xchg
adc
jmp
outsl
mov
jecxz
ja
pop
jnp
mov
mov
mov
loopne
sbb
int3
pushf
negl
cld
cmp
xor
push
cmp
cmp
cmpsb
inc
cmpsb
loope
in
jmp
sbb
jae
sub
ffreep
fldl2e
das
std
jmp
xchg
inc
cltd
xchg
add
cmp
sti
daa
pop
mov
int
jb
sbb
lods
mov
jle
adcb
inc
jne
or
pushl
mov
cwtl
imul
push
mov
mov
mov
cmp
mov
sbb
inc
xor
sub
call
aas
inc
ss
lcall
sub
and
mov
mov
es
scas
lods
push
and
lea
mov
cmp
loope
dec
leave
inc
or
aaa
and
lahf
add
aaa
popa
pop
add
je
lret
jno
clc
arpl
xchg
aas
stos
subl
sbbl
test
outsl
mov
int
lock
xchg
and
imul
shll
lahf
int3
imul
pop
cltd
ret
je
orb
call
lds
outsb
mov
stos
and
mov
mov
mov
outsb
arpl
cmp
inc
mov
jb
jecxz
lock
pusha
in
test
push
pop
lahf
add
ror
jb
pop
xchg
jo
jecxz
xor
xor
ss
and
xor
xchg
xchg
iret
movsb
jmp
movsl
jns
stc
stos
dec
clc
stc
out
and
rcl
movsb
lods
cmpsl
xchg
ss
dec
inc
and
mov
mov
pop
and
dec
mov
insb
xchg
les
addr16
mov
dec
leave
icebp
add
rclb
aaa
sub
sub
adc
mov
shrl
cmp
call
inc
xlat
xchg
inc
lret
addr16
das
xor
push
xchg
jge
push
fmul
mov
std
testl
add
stos
or
xchg
in
idivl
or
ss
or
push
packsswb
jo
imul
cmpsl
jb
xchg
lds
lcall
sbb
push
mov
pop
push
clc
cmp
dec
repnz
adc
xor
push
cmpsb
into
push
or
mov
and
inc
test
or
data16
or
dec
das
jo
scas
cmp
xlat
rorl
mov
add
sub
pop
add
out
lahf
jae
add
lock
xchg
outsb
sub
pop
imul
mov
sarl
rcrl
cmp
fdivrp
and
repz
out
xchg
pop
mov
sbb
bound
pop
popf
adc
pop
lods
fcmovu
cmpsl
push
aam
shrl
dec
or
xor
ds
fisubrl
sub
add
push
sahf
dec
adc
pop
stc
ss
cmp
mov
xor
pop
aad
and
dec
push
aaa
push
mov
inc
and
jbe
dec
add
dec
fidivrs
mov
in
mov
mov
shlb
pusha
test
xor
test
mov
jbe
loope
ja
adc
sub
fmuls
repz
and
rolb
pop
inc
xchg
ds
jno
xor
pavgb
mov
fldln2
popf
xor
pushf
lret
insb
mov
mov
aam
dec
sbb
mov
xor
push
add
inc
hlt
in
iret
out
lock
mov
int
sub
dec
std
xchg
xor
and
inc
inc
shrb
repz
push
out
jb
fistps
inc
mov
xchg
mov
shrb
dec
inc
movsb
jbe
xor
lods
jmp
faddl
repz
jl
ss
mov
outsb
imul
and
mov
out
push
incl
test
adc
fistpll
cmp
inc
inc
inc
push
imull
mov
mov
dec
pushf
xchg
mov
xlat
push
imul
rcl
mov
mov
daa
pop
or
mov
je
in
inc
sbb
sub
push
inc
mov
dec
push
jne
cmpsl
jne
jb
addb
adc
push
jns
lea
iret
fisttpll
xchg
idivl
and
gs
ret
hlt
mov
mov
adc
mov
mov
imul
inc
jno
dec
add
leave
out
and
xchg
push
iret
or
cli
pop
sbb
jb
xchg
xor
lea
pop
add
fldt
aaa
int3
push
jns
fnstcw
and
push
mov
xor
je
scas
dec
or
popf
inc
add
mov
jbe
gs
int
sbb
mov
xchg
subb
mov
mov
push
loop
push
cmpsb
xlat
or
and
std
dec
ret
stos
jae
push
cmp
insl
loop
sbb
addr16
imul
jo
addb
mov
mov
hlt
ljmp
test
scas
into
popa
pop
lock
ja
mov
xchg
xlat
add
cmc
sub
dec
jno
cwtl
xor
inc
pop
int3
pop
data16
repz
push
sbb
insl
and
pop
nop
lcall
loopne
mov
push
aas
mov
jl
xchg
fidivrs
bound
xchg
mov
adc
stos
in
outsl
inc
mov
jecxz
lds
adc
pushf
cmp
and
pushf
or
pop
daa
dec
xlat
cmp
jp
call
or
stos
mov
cmp
ficomps
or
outsb
scas
adc
ds
rolb
inc
mov
sbb
lahf
cmp
test
xor
mov
insb
divb
out
out
push
ja
add
push
dec
and
dec
and
push
mov
stc
xchg
loopne
test
xchg
inc
lret
mov
scas
cmp
xor
push
jnp
sbb
push
mov
sub
cltd
testb
push
pushf
rclb
lods
jg
loop
out
add
xlat
xor
fdivrl
jmp
ja
xor
fidivs
inc
ret
push
dec
fsub
sbb
bnd
push
ret
fs
sub
sub
adcl
cli
jmp
cmpsb
sub
inc
mov
mov
cmc
rcrl
jle
mov
dec
shll
lahf
test
mov
data16
aad
sti
mov
andl
cmp
sbb
stc
stc
cs
dec
jge
mov
xchg
sub
push
dec
mov
in
jmp
and
cmc
cmpsb
push
cmp
xchg
sbb
das
imul
mov
jb
icebp
ret
sub
out
addr16
sbb
cmpsb
shl
push
cmp
dec
lret
xchg
lahf
aas
in
cmp
and
dec
and
cmp
cmp
mov
xchg
adc
sti
outsl
mov
fisttpll
lods
jno
xchg
movsb
and
sub
dec
rorb
sbb
fiaddl
jns
mov
sarl
sub
sbb
lods
cmp
and
push
iret
dec
in
icebp
scas
jae
repz
movsb
pop
jbe
cmp
sbb
int3
notl
add
or
push
jne
mov
rcrb
push
subb
push
or
add
jmp
cli
sbb
sbb
stos
jo
insb
aaa
pusha
mov
cmpsb
in
pop
jmp
sbb
test
insb
fistpl
push
cmp
dec
lret
and
sub
jbe
fcomp
cmp
outsb
lock
jnp
je
cmp
movsb
insl
subb
in
stos
mov
addr16
push
cmc
sbb
lcall
sub
dec
pushf
call
stc
add
std
in
pop
cltd
imul
fldcw
lahf
push
inc
cmp
xor
mov
pop
xchg
add
rcll
adc
aas
movb
and
inc
add
jl
repnz
enter
sbb
gs
mov
subb
pop
outsl
js
lods
jns
into
aad
mov
fildl
stos
and
dec
aad
push
lret
outsl
dec
int
adc
xchg
in
jmp
fisubrl
xchg
inc
jae
lods
push
sbb
push
jmp
cmp
fmuls
inc
adc
mov
pop
ret
add
mov
inc
jns
xchg
in
or
fidivrs
add
inc
cmc
and
pushf
sub
jmp
sub
jge
mov
push
sbb
ret
mov
push
or
or
sub
mov
popf
test
push
pop
rcrb
dec
pop
sti
jnp
mov
mov
lods
das
mov
jns
in
cld
idivb
jl
or
cmpsb
add
aad
std
rcrl
clc
shlb
push
inc
in
inc
in
into
sbb
daa
std
sbb
mov
add
dec
push
or
fdivs
loope
xchg
mov
sub
mov
es
aam
push
mov
call
sbb
mov
lret
mov
add
push
dec
add
xor
add
mov
push
mov
xchg
cmp
repz
inc
sbb
lahf
fadd
mov
jo
push
jmp
lret
lcall
int3
es
push
jno
mov
and
daa
xchg
bound
pop
mov
dec
sub
outsl
frstor
add
call
imul
push
adcl
jge
jno
xor
out
fisttpll
sbb
fstps
incl
js
sbb
sub
add
cs
jp
stos
mov
sub
lcall
fisttpll
sbb
jecxz
jl
shll
lahf
and
lret
cli
xchg
jno
shll
int3
xlat
and
cmp
cmp
jo
mov
cmp
push
jne
push
pop
arpl
popf
sub
andl
push
cwtl
jecxz
lods
cli
pop
sbb
mov
fistps
mov
add
mov
mov
shrb
pushf
jne
loopne
mov
repz
aas
loope
fs
lods
jg
inc
jge
cmp
xchg
cmp
cltd
push
repnz
jl
fimuls
add
mov
mov
bound
int3
inc
push
or
outsb
mov
push
mov
pop
add
push
inc
lahf
jp
push
insb
rclb
inc
mov
xchg
ja
cltd
xchg
gs
mov
movq
sar
xlat
mov
daa
into
jae
daa
int3
sti
pop
pop
decb
sub
or
mov
sti
mov
popa
sbb
pushf
pop
adc
mov
mov
cmp
in
adc
lret
jbe
test
std
lcall
cmpsl
insb
icebp
arpl
adc
push
xchg
or
xor
shl
divl
adc
stos
rolb
imul
inc
pause
sbb
xor
inc
mov
pop
shll
aas
vpsubsb
lock
mov
add
fdivl
loop
fcmove
inc
je
jbe
sub
mov
loope
fistpl
dec
sbb
and
inc
mov
fisttpl
pushf
adc
cmpsl
add
and
and
mov
adc
mov
ss
std
dec
hlt
inc
sahf
fwait
pop
jns
popa
mov
pop
in
addr16
in
int
pop
sbb
mov
call
push
mov
mov
loopne
test
mov
xchg
int3
movl
pop
xor
push
mov
mov
int
mov
xor
or
adc
frstor
inc
fwait
xor
cwtl
cmp
push
lock
push
mov
pushl
mov
sti
inc
sub
sbb
loop
jne
inc
test
jle
int3
cmp
into
cmpl
jmp
or
xchg
pop
je
pop
xchg
ja
adc
push
loope
leave
push
pushf
into
add
cmpsb
es
push
das
dec
ds
sub
cmpsb
mov
adc
enter
sub
cmp
inc
inc
lcall
les
dec
mov
lahf
fisttpll
inc
cmp
pop
mov
ds
gs
mov
fbld
outsl
mov
int3
add
sti
imul
out
jns
lret
xchg
pop
clc
dec
push
orl
fs
sbb
mov
mov
mov
mov
scas
mov
or
cli
shl
dec
sub
dec
dec
out
sbb
mov
jecxz
pop
test
js
lret
add
icebp
and
jp
pop
arpl
jns
push
jno
daa
jecxz
stc
jbe
pop
dec
shlb
xrelease
fadds
sub
shrl
dec
shr
mov
mov
ja
call
cmp
fisttpll
inc
in
and
jp
iret
in
adc
lret
jl
xor
lock
sbb
sub
xorps
mull
push
cld
mov
mov
jns
xor
lea
or
jns
pop
mov
jo
imul
xchg
lret
push
push
mov
stc
sub
repz
test
dec
pop
inc
mov
and
sahf
fs
mov
push
js
mov
push
or
mov
fisubrl
inc
js
adc
mov
jbe
in
test
xchg
mov
daa
out
scas
inc
bound
fsubrs
cmp
cld
andl
out
test
lods
rcll
adc
push
loope
nop
pop
and
shl
fwait
test
mov
xchg
test
movsl
sti
fwait
mov
hlt
pop
dec
stc
rcrb
inc
stos
pop
test
sbb
lahf
pop
ljmp
loopne
cltd
in
daa
test
rolb
jae
les
cmp
xlat
and
fisttps
and
or
mov
aaa
mov
jne
cwtl
popf
push
mov
nopl
in
pop
xchg
out
jecxz
repnz
lret
pop
mov
push
stos
aaa
and
jp
test
fidivrl
in
mov
or
inc
test
aas
mov
mov
stos
loopne
inc
icebp
mov
fmul
in
or
dec
sub
or
pop
push
mov
addb
pop
jae
push
pushf
movsb
es
stos
in
cli
das
inc
scas
xchg
int
into
pop
icebp
insl
lret
pop
movsb
sbb
aas
push
xorl
addr16
add
leave
mov
jb
out
jmp
mov
pop
mov
lcall
cmpb
push
mov
je
xchg
addr16
scas
sub
sub
ja
mov
stos
sbb
lock
jmp
addr16
loopne
or
out
leave
out
je
nop
mov
cmpsl
je
add
inc
fs
cmp
je
lods
jle
test
outsb
dec
out
lcall
out
test
popa
fistl
hlt
imul
xchg
loope
in
cmp
cmc
add
xchg
or
jmp
jns
xchg
mov
mov
js
stos
stc
push
lcall
mov
call
aas
rorl
lahf
add
stos
mov
mul
pop
ror
movsb
pop
lahf
mov
cli
dec
xor
movsl
jecxz
jecxz
fs
push
cmp
push
test
sbb
xchg
rolb
aam
xor
sarl
push
mov
rclb
mov
or
gs
mov
nop
sbb
cmp
cmp
scas
test
mov
push
dec
repnz
in
gs
xchg
xlat
fidivrl
xor
pop
pop
mov
add
into
ret
add
add
inc
sbb
enter
pop
pop
loope
sti
sti
cmpsl
in
jae
push
and
in
fdivrl
gs
iret
sbb
iret
sub
cmpsb
push
add
fldenv
push
dec
in
pop
ret
inc
and
leave
sbb
xorl
add
jl
test
rclb
jo
inc
pop
mov
xor
movsl
jg
popa
jecxz
mov
pop
jg
jg
mov
mov
scas
mov
stc
xchg
pop
pop
cmc
int3
outsl
fildll
jmp
push
test
push
pop
add
push
je
sbb
out
jge
fnsave
movsb
cwtl
sbb
inc
mov
mov
loope
loop
add
iret
je
subl
mov
mov
sub
pop
mov
loopne
lret
in
andl
aas
imul
inc
mov
sub
dec
loope
out
or
dec
out
aam
hlt
pusha
inc
lahf
mov
xchg
aaa
cltd
mov
inc
xchg
inc
pop
push
mov
imul
jle
popa
mov
loope
mov
in
fs
jno
test
xchg
inc
leave
mov
push
sub
push
loopne
or
add
clc
push
inc
icebp
jne
cmp
das
out
pop
dec
stos
push
dec
xor
push
pop
addr16
sbb
sub
mull
lods
iret
loop
xchg
test
xchg
xor
pop
andl
mov
xor
movsb
rcrb
out
pop
xorb
push
xchg
and
mulb
jp
stos
mov
adc
mov
add
test
and
add
gs
in
popa
and
int
push
sub
pop
das
leave
sahf
xlat
sub
lods
pop
outsl
push
cmpb
push
xorl
ja
jecxz
push
adc
pop
cld
xchg
pop
dec
nop
xchg
ljmp
into
ret
xchg
push
mov
stos
pop
and
xor
mov
mov
xchg
in
or
jnp
mov
stc
lock
mov
cmp
dec
adc
bnd
cs
movzbl
push
fsubrp
shlb
mov
push
cmp
pop
pushf
stc
mov
in
sbb
pop
push
jae
ss
sub
and
dec
pusha
jmp
mov
pop
repnz
jne
mov
mov
incb
repz
xchg
and
mov
loopne
mov
mov
loop
aam
test
xor
pop
add
call
xor
jge
std
or
shrl
call
int3
or
push
jmp
mov
xchg
jmp
cwtl
out
adc
xchg
jnp
push
cmp
cmp
jge
inc
or
pusha
clc
cmp
inc
xor
jb
cmp
dec
xchg
repnz
les
andl
outsb
push
jl
dec
out
sub
sbb
pop
jmp
leave
adc
xchg
mov
inc
fiadds
mov
cmp
push
and
mov
mull
mov
jp
mov
and
and
movsb
hlt
mov
ror
ret
and
dec
fcmovnu
jo
fimuls
out
aad
mov
pop
mov
fisubrs
jae
sub
jmp
mov
mov
push
movsl
fsub
inc
imul
call
nop
jae
xor
test
in
movsb
lcall
mov
scas
loopne
scas
dec
fiadds
fcmovbe
subl
addr16
xchg
fnsave
xor
loopne
ja
push
ja
jle
xor
popf
pushf
pop
push
out
inc
in
and
loop
icebp
sti
sbb
test
adc
daa
outsl
in
push
insl
lahf
int3
lds
movsl
shlb
cmp
or
incb
cld
inc
nop
or
mov
cmp
mov
mov
mov
aas
insb
cmp
dec
dec
adc
in
add
mov
sub
push
add
adc
jns
in
add
xor
inc
das
lds
dec
aad
cmp
inc
mov
push
repz
movsb
stos
std
mov
lret
jne
cmp
out
mov
lds
sbb
repnz
mov
push
and
sub
movsl
cs
push
and
pop
scas
inc
push
jns
iret
cmp
out
xor
pop
stos
lds
outsb
push
or
cmp
dec
fadds
arpl
mov
and
lds
insl
sbb
and
mov
cmp
cmpsb
pop
push
jl
stos
add
bswap
dec
into
mov
cs
ret
xor
jo
dec
lds
push
inc
clc
or
or
mov
addr16
cs
test
and
and
cmp
xor
xor
mov
loope
in
imul
ud1
dec
cld
sbb
hlt
add
jecxz
xor
popa
scas
out
pop
inc
stc
pop
mov
outsb
scas
mov
mov
outsl
jns
mov
test
repnz
lods
mov
fsub
jb
push
test
and
call
mov
xchg
fwait
mov
sbb
iret
or
add
push
fldl
jae
fwait
lea
cld
xchg
or
insl
sti
sbb
clc
loope
jnp
lret
loopne
out
int
mov
out
loope
mov
outsl
xlat
mov
in
and
adc
dec
lods
loop
daa
cmp
mull
lcall
adc
rcr
stos
mov
in
and
add
ljmp
jb
mov
test
mov
jo
ss
stos
das
hlt
jmp
data16
hlt
clc
setge
cmp
dec
mov
fwait
bound
jp
adc
xchg
outsb
or
test
leave
test
inc
mov
inc
in
stc
leave
push
xchg
mov
int3
iret
lds
int3
pop
pop
fstl
xchg
cbtw
mov
adcb
insl
pushf
cli
dec
dec
push
push
mov
icebp
cmp
add
out
add
aas
mov
out
call
inc
out
imul
sbb
aad
scas
jmp
nop
pop
push
repz
lds
adc
ficomps
scas
subl
test
xchg
rorb
push
and
add
das
xor
mov
xchg
dec
jbe
sub
add
push
test
ret
and
mov
idivb
out
jno
pop
dec
rep
sub
cmp
test
test
nop
fsubrl
sub
out
mov
sub
xchg
add
sub
nop
push
push
shll
out
sarl
dec
ret
or
push
inc
sub
adc
mov
add
stos
sub
mov
inc
mov
mov
mov
push
mov
lcall
popa
fs
sub
sbb
mov
mov
add
orl
or
mov
sub
cwtl
push
adc
imul
dec
test
ss
scas
add
loop
sub
nop
mov
push
pop
mov
cmpsl
aaa
call
push
cmp
push
lods
push
aaa
rol
jmp
lcall
sbb
popl
repz
mov
mov
adc
stos
fistps
inc
pop
repnz
push
enter
lds
push
lret
inc
je
pop
ljmp
in
sub
mov
fsubr
xchg
adc
negb
sti
xchg
testb
pop
imul
rcrl
push
sbb
cmp
and
pop
aaa
pop
jno
daa
subb
dec
lahf
imul
iret
jg
rcll
rcrb
fnsave
lods
shlb
mov
inc
jl
push
jnp
enter
mov
lahf
hlt
mov
data16
insb
leave
data16
mov
in
mov
cmp
xchg
adc
outsl
lods
mov
xchg
pop
ficoms
xor
scas
mov
test
in
or
mov
mov
inc
dec
jns
cwtl
jp
cwtl
or
das
pusha
sub
or
xchg
fisttpll
loop
roll
pop
jg
pop
mov
repz
and
pop
or
push
inc
pop
sbb
ret
fs
popf
mov
dec
aam
dec
cmpsb
and
cld
jp
fists
mov
pop
sbb
dec
aaa
xchg
fisttpll
fs
lahf
frstor
enter
and
mov
test
jns
jne
cmpsb
dec
popf
pop
aam
lods
jno
out
pop
dec
dec
out
aad
pop
imul
in
lcall
xchg
mov
dec
out
push
cld
mov
andl
mov
jl
dec
ret
gs
jg
add
loope
dec
ret
xchg
fbld
andb
sbb
neg
imul
lds
imul
jp
jmp
int
cmp
daa
fwait
sbb
inc
lahf
loope
xchg
push
out
inc
cltd
adc
mov
ljmp
ds
inc
cs
mov
dec
test
lret
or
adc
or
or
sbb
xor
movb
pop
loope
ror
xchg
pop
add
jb
or
add
or
int3
pop
xor
push
movsl
sahf
push
loope
push
and
dec
fld
push
sub
lret
jnp
pop
outsb
xor
sti
add
mov
push
and
insl
scas
or
xor
jge
or
pop
imul
rcrb
js
push
sbb
inc
push
push
ret
pop
imul
pop
fistl
cmp
pop
pop
into
pusha
sbb
outsb
push
mov
push
pop
cmp
add
jb
test
int
call
or
xor
lret
xchg
cmc
call
push
jle
mov
mov
or
push
pushf
in
mov
cmc
cmp
xchg
cmpsb
imul
jno
std
jmp
xchg
push
sbb
pop
mov
and
pop
enter
mov
mov
enter
lock
aaa
adcl
mov
call
add
jb
mov
cmpsl
movsb
inc
nop
push
mov
mov
push
lea
pop
mov
adc
test
lcall
cmp
mov
xlat
clc
push
sbb
mov
xor
cmpsl
lret
cwtl
and
dec
jno
pop
scas
sbb
dec
mov
sub
dec
mov
jge
add
fstpl
pusha
mov
out
mov
xchg
fcomps
or
adc
sub
xor
pop
pop
xor
pop
rep
ja
jmp
aas
xor
add
shlb
mov
add
out
jl
sub
into
push
movsb
push
cli
mov
sahf
adcl
lods
sbb
push
xor
push
dec
fcmovne
fdivr
mov
push
add
mov
inc
jle
inc
jp
inc
ret
sarb
or
call
sahf
inc
cmpps
or
xor
xor
mov
in
jns
or
push
repz
xor
jmp
mov
jp
pop
jb
stc
jmp
jle
icebp
and
ret
out
sarb
daa
xchg
jbe
push
inc
push
mov
cmp
call
xor
mov
push
loope
push
cmp
sbb
dec
fistpl
gs
ljmp
dec
push
jg
scas
test
int
dec
popf
fs
clc
cld
adc
and
insb
sbb
adc
loope
lahf
aad
mov
xchg
pop
jecxz
push
clc
inc
cltd
insl
push
movlps
push
mov
aad
insb
xor
sub
xchg
ss
out
mov
mov
xor
jg
inc
test
dec
sub
inc
imul
pop
fwait
sbb
js
xchg
ds
push
dec
push
push
mov
imul
adc
jle
jo
not
mov
mov
icebp
add
fstpl
orb
outsl
fwait
jge
sahf
jg
aad
pushf
fistps
sub
scas
xchg
stc
sub
xchg
fs
sahf
add
int3
jle
add
scas
xchg
and
out
xor
notl
hlt
dec
clc
dec
mov
mov
fimull
xor
mov
jb
int3
push
icebp
repz
add
xchg
and
cmc
int3
sub
into
jge
jge
cmp
fistps
sbb
lds
mov
cmpsb
test
ret
stos
in
mov
push
les
mov
pop
or
mov
outsb
outsb
mov
add
dec
fists
sub
movsb
adc
pop
out
pop
pusha
sub
out
dec
test
lahf
ret
adc
jbe
data16
int
and
leave
jp
inc
jle
nop
sub
mov
add
mov
sbb
inc
test
lds
lret
jmp
lret
inc
sahf
fstl
mov
inc
or
adc
stc
xchg
xchg
mov
xchg
xchg
mov
dec
mov
jl
leave
loop
scas
inc
inc
adc
pop
ljmp
bound
or
sbb
jb
fsub
jp
mov
mov
std
orb
ss
mov
imul
and
pop
cmp
in
decb
jge
or
test
mov
cmp
es
sbb
adc
and
xorl
test
xorb
cmp
and
xor
jge
add
or
outsb
cltd
mov
xor
idivl
xchg
ja
rcr
notb
inc
lret
lock
js
or
xchg
jo
cltd
dec
pop
sub
jecxz
push
pop
mov
jge
jmp
jge
xlat
loopne
out
push
and
dec
and
xlat
push
leave
cmp
jmp
jecxz
xor
les
xchg
jg
inc
pop
shrl
pop
mov
add
js
push
xor
daa
mov
pop
xchg
nop
pop
pop
pushf
bound
pop
aam
test
pop
dec
and
in
cltd
xor
jbe
and
int3
mov
push
pop
mov
pop
lahf
outsb
xchg
scas
stc
out
push
xor
jb
repnz
fdivp
sbb
es
loope
gs
mov
fcomps
xchg
iret
or
cmp
lds
cmc
int3
ret
popw
xor
push
adc
inc
in
push
out
fdivrs
mov
aad
dec
jl
dec
pop
cmp
jp
cltd
and
int3
call
xchg
push
jb
sub
sti
das
adc
cmp
mov
mov
cmpsb
int3
xchg
push
adc
loop
lret
xlat
xchg
xor
inc
rorb
pop
xchg
into
out
mov
insl
mov
add
mov
ja
xor
inc
mov
adc
lods
aad
lods
jge
push
insb
jle
or
faddl
mov
cmpsb
es
rcr
and
fs
jg
aaa
push
notl
add
outsb
lret
adc
inc
cli
mov
and
and
sahf
inc
pop
shll
or
xor
arpl
addl
dec
loopne
sub
mov
mov
add
mov
sbb
nop
mov
jbe
test
jb
xor
xchg
lcall
push
sahf
popf
xchg
cmp
cli
clc
add
iret
pushl
mov
xchg
adc
jl
mov
dec
jb
clc
imul
out
jne
push
mov
jae
jge
sbb
in
ljmp
pop
mov
nop
xorl
je
es
xlat
cmp
or
push
aad
cmpl
idivl
mov
loope
dec
cmc
scas
mov
out
sti
pop
push
xchg
inc
das
lea
and
inc
pop
arpl
or
adc
mov
movsb
js
idivb
loop
std
pop
and
fldcw
cli
insl
mov
sbb
popl
ja
std
aad
add
jno
leave
mov
daa
popf
cmp
popf
dec
out
test
lahf
adc
aaa
std
into
leave
dec
xor
loop
and
int
dec
jg
cltd
sub
notb
faddl
lret
add
cs
xor
pushf
lods
push
add
lock
inc
daa
jne
lcall
div
mov
xor
xlat
loop
inc
test
xchg
mov
ret
andb
adc
in
fdivrl
movsb
mov
into
jnp
jle
in
inc
mov
push
pop
in
repnz
pusha
arpl
jl
mov
mov
call
sub
push
lret
pop
ljmp
xchg
adc
or
clc
jge
movsb
dec
popa
ljmp
cmp
mov
mov
repnz
test
les
or
fwait
sbb
mov
xchg
ljmp
call
ds
and
rclb
aas
subl
arpl
fimuls
test
inc
jbe
test
xchg
es
push
in
mov
push
sub
ud0
push
xchg
insb
jge
scas
push
out
sub
imul
mov
roll
out
and
cld
xchg
loopne
repnz
mov
xchg
xor
cmp
push
adc
and
aas
adc
mov
jle
test
leave
popa
int3
mov
mov
bound
adc
mov
mov
in
push
cmp
fwait
movsb
bound
inc
sub
adc
mov
and
push
rorb
in
adc
decb
mov
fsubrs
dec
repz
int
dec
outsb
sti
xchg
sbb
xchg
mov
cmp
icebp
outsb
jo
lea
push
lods
loope
mov
and
pop
sub
rcll
mov
inc
xchg
dec
std
shl
sbb
xchg
out
fsubrs
jle
jo
ljmp
das
xchg
movsl
push
pop
jno
mov
jne
or
or
xchg
push
jge
dec
les
scas
iret
sti
lods
xor
sub
shlb
cs
movsb
cmp
arpl
mov
jle
mov
std
enter
jle
addb
xchg
or
ljmp
mov
mov
lcall
out
lods
jmp
inc
stc
and
adc
and
push
sti
das
cmp
add
loope
xchg
and
inc
pusha
daa
pop
lock
xchg
lods
outsb
lret
gs
icebp
scas
jo
add
push
aas
pop
loop
and
enter
cld
das
mov
xor
mull
ss
mov
push
add
inc
mov
jmp
aaa
adc
mov
xchg
push
pushf
pop
push
dec
mov
test
jg
xor
call
mov
adc
xor
xchg
rorb
mov
cld
test
test
mov
cmc
das
sbb
hlt
test
jmp
lahf
mov
or
je
xchg
push
clc
jae
mov
or
pop
dec
cmp
pop
call
pop
test
lods
push
aas
cs
add
mov
sub
and
xchg
jle
mov
push
leave
sub
pushf
lcall
mov
and
mov
into
mov
jp
cmc
nop
sub
inc
aaa
mov
rcrb
cmpsl
cmp
popf
push
cmp
sbb
mov
ss
iret
mov
addr16
scas
mov
jg
pop
xchg
lahf
and
jnp
dec
incb
insb
mov
out
leave
scas
clc
mov
jbe
cli
mov
psubw
shrl
out
sub
int
cmp
add
pop
icebp
xor
aad
xchg
fidivrs
cld
xor
cli
hlt
fsubs
mov
add
inc
lret
aaa
mov
fwait
enter
loope
lock
ret
dec
jp
bnd
mov
adc
mov
stos
and
inc
int3
inc
add
mov
xchg
sbb
mov
enter
dec
loopne
fsubs
inc
cli
ljmp
cmp
fwait
jno
or
dec
lods
push
test
fsubs
xor
pop
jg
inc
ds
fnstsw
mov
mov
pop
divb
fldcw
jne
bound
dec
mov
inc
lea
dec
mov
fcompl
xorb
inc
imul
lock
lock
jge
dec
add
cmpsl
cmp
adc
cmp
mov
xchg
cwtl
ja
and
cli
enter
xchg
inc
cltd
repnz
push
lods
cmpsb
mov
inc
fwait
xchg
mov
push
push
inc
arpl
mov
clc
adc
push
mov
dec
add
xchg
dec
mov
or
lods
push
in
add
mov
sbb
cmpsl
push
lea
ret
xlat
sbb
cwtl
subb
push
arpl
xor
int3
je
mov
mov
cwtl
pop
add
mov
out
clc
xor
sub
adc
add
xchg
scas
push
pop
loope
xchg
xor
sub
fildl
mov
ret
aad
js
mov
loope
sub
push
or
adc
push
add
sub
dec
xchg
outsb
dec
call
mov
jnp
pop
orl
push
out
or
dec
mov
cmpsl
loop
jo
sub
jae
cmp
and
mov
mov
push
cwtl
dec
mov
in
push
shl
jae
or
test
inc
dec
jns
nop
lret
xchg
movsl
ret
mov
call
pop
sbb
cli
les
xor
push
jne
mov
ljmp
test
cmpsl
mov
mov
cwtl
out
jp
arpl
aam
fcmovnb
inc
enter
add
mov
mov
and
aam
dec
jge
cmp
setg
sbb
dec
dec
sub
sahf
cwtl
xchg
sub
or
into
pop
in
cmp
add
aaa
and
inc
adcb
dec
inc
out
push
xchg
lods
sti
dec
dec
pop
nop
popf
popa
jge
mov
stc
add
sbbl
add
aam
in
mov
es
nop
push
outsb
sti
fsub
lret
mov
std
cmpsb
lods
les
or
xor
sub
ret
mov
fcmovu
adc
repz
mov
or
lahf
sbb
mov
cmc
jl
or
in
jbe
add
mov
push
and
lds
xor
out
repz
push
inc
xor
xchg
in
mov
int3
imul
icebp
shr
insb
cli
cmp
push
cmpsb
icebp
xchg
mov
imul
in
and
cmc
jnp
cmp
ss
add
mov
stos
mov
and
inc
stc
aaa
shrb
ja
xor
loop
cwtl
xlat
push
loopne
in
leave
fs
push
mov
jl
xor
and
stos
andb
pop
das
pop
stc
addr16
and
and
mov
sbb
push
cwtl
add
and
dec
data16
test
aam
mov
and
gs
cmp
into
mov
and
pop
jmp
add
aaa
jo,pt
pop
and
in
addr16
bound
jno
in
loope,pn
push
inc
mov
pop
mov
cli
int3
dec
and
dec
fs
sbb
sti
sub
or
and
loopne
xor
sub
pop
call
out
mov
idivb
out
jno
mov
data16
sbb
inc
mov
push
jge
xchg
inc
jle
test
push
push
bswap
mov
xchg
arpl
daa
inc
in
sub
jo
mov
in
sbb
dec
adc
dec
orl
pop
loopne
inc
mov
les
jbe
scas
clc
loopne
mov
lods
stc
repnz
cvtps2pi
dec
int3
mov
push
or
pop
inc
dec
roll
loope
cmp
adc
push
mov
or
insl
js
in
xchg
scas
cmpsl
mov
push
xor
mov
call
cmc
gs
push
pop
jle
adcl
pop
sbbl
repz
stos
scas
fstl
push
cmp
repnz
int3
loopne
rclb
mov
shlb
pop
jmp
adc
orl
lahf
inc
mov
imul
ljmp
cmp
or
mov
inc
sbb
push
and
mov
iret
ja
ret
sub
fsubrs
jno
mov
dec
mov
xchg
je
push
fildl
mov
aad
xor
aam
or
pop
imul
aas
mov
jecxz
mov
dec
mov
test
mov
xchg
pusha
sbb
and
test
add
notb
xchg
arpl
movsb
loop
fwait
push
xor
add
jecxz
pop
shll
gs
cmp
je
out
sub
push
scas
iret
into
cmpb
outsl
arpl
or
xchg
xchg
and
sahf
mov
cmp
mov
dec
or
pop
dec
jmp
cs
rcr
dec
mov
repz
sbbl
sub
adcb
lea
sbb
mov
push
push
jg
sbb
jb
dec
loop
and
sub
aam
adc
test
mov
jp
or
dec
incb
icebp
dec
imul
int
out
add
push
cmp
jbe
mov
fisubl
out
pop
out
cld
in
push
call
xchg
stos
aaa
push
sti
das
cltd
or
es
mov
ss
jno
xchg
leave
loope
std
arpl
cld
repz
movsb
push
mov
mov
sbb
out
test
cld
add
lock
dec
mov
mov
fs
hlt
dec
sbb
dec
enter
mov
cmp
and
cmp
cmp
mov
jl
fsubrl
mov
fildll
out
sbb
pushf
or
inc
xchg
mov
mov
fnsave
int3
inc
rorl
pop
adc
sub
mov
mov
inc
nop
out
repnz
push
mov
xor
pop
mov
scas
pushf
add
pop
push
cmp
fstpl
mov
sub
adc
inc
push
jl
push
gs
sbb
jbe
fs
imul
int
fs
rol
arpl
lret
cmp
aam
push
mov
mov
cmc
mov
test
enter
inc
xlat
xor
scas
and
jae
imul
jo
mov
mov
mov
rcrb
mov
push
jns
negb
addr16
push
fdivp
or
popa
stos
mov
je
rcr
jbe
fildll
jl
pusha
rcrb
jno
sti
es
lahf
test
inc
nop
imul
xor
push
ffree
or
cmp
pusha
adc
sub
shrl
pop
mov
jb
test
cmp
scas
add
subb
popa
aam
jb
push
jmp
ror
adc
ljmp
testb
dec
lret
xor
js
sub
xchg
mov
scas
aaa
mov
addr16
shlb
or
sub
loope
shll
int3
andl
adc
cmpsb
push
lods
arpl
push
xlat
xchg
mov
mov
push
push
pop
jle
aam
adc
das
popf
les
mov
mov
addb
clc
inc
lock
xchg
insb
lods
jbe
mov
addl
and
div
clc
inc
ja
daa
call
cli
jge
pop
cmpsl
and
fsubr
jbe
es
add
stos
jo
inc
jle
xchg
dec
shrb
stos
dec
in
adc
call
or
push
out
xor
sti
push
xor
jmp
push
jbe
xchg
add
add
cs
aas
std
fcoml
leave
jmp
ljmp
xor
xchg
mov
mov
pop
inc
jne
lock
test
sahf
jmp
push
clc
push
notl
adc
enter
mov
xchg
cltd
mov
sub
sub
movsl
mov
loope
jo
push
stos
and
mov
loope
push
fwait
sbb
fwait
lahf
outsb
ja
or
bound
mov
les
jbe
lea
shr
in
mov
fwait
bound
push
in
fbld
das
and
xor
jb
adc
pop
lcall
pop
dec
cs
and
or
add
add
mov
and
and
sub
dec
adc
iret
ljmp
cltd
xor
icebp
push
lods
mov
outsb
push
add
xchg
lock
in
mov
dec
xchg
xor
push
mov
adc
mov
scas
xor
in
outsb
lcall
xor
aam
je
andb
lods
push
mov
aad
stos
mov
fiadds
rorb
or
and
jnp
push
mov
pop
pusha
cmp
imul
inc
lret
movsb
jmp
mov
jns
mov
mov
out
or
cmpsb
es
ljmp
jmp
add
sub
int3
scas
push
mov
sbb
fistpl
mov
or
add
push
sbb
out
jo
xchg
mov
pop
insb
and
xor
pop
in
inc
lods
push
push
cwtl
ret
mov
push
sub
lods
sbb
or
xchg
fstl
mov
subb
mov
xor
fstpl
enter
add
dec
dec
in
dec
sbb
fldt
lret
mov
mov
cmp
ret
cli
pop
push
sbb
lahf
stc
and
hlt
mov
sub
add
and
sub
incb
sub
scas
out
jb,pt
dec
add
out
mov
dec
sbb
dec
je
pop
das
cmpsb
xchg
jp
pop
pop
insl
xchg
ret
mov
pop
mov
xor
aam
vmovupd
push
sub
in
shlw
repz
jbe
cli
jl
test
mov
mov
int
push
and
pop
mov
push
mov
rcrb
dec
dec
subl
sub
shll
pop
sub
sub
mov
dec
adc
fstps
ss
or
les
push
popa
popf
testl
mov
pusha
jb
cmpsl
int3
sbb
jmp
cld
out
fsubrs
out
sbb
cmpsb
popf
and
cltd
test
mov
sbb
call
xchg
pushf
call
insl
addl
enter
and
mov
adc
call
mull
negl
ret
jne
xor
pop
push
inc
cmc
test
imul
inc
enter
aaa
popf
push
xchg
adc
push
adc
dec
pop
jecxz
js
fisttpl
lods
popf
cmpsb
mov
push
pop
out
nop
jb
mov
pushf
cmpsb
lea
xchg
adc
hlt
push
jne
inc
daa
push
stc
sahf
lods
out
push
daa
add
repnz
or
pandn
jecxz
je
jge
jmp
mov
adc
in
mov
push
aaa
cmp
test
popa
rcrl
out
or
dec
sbb
pop
sarl
bound
mov
test
jns
mov
and
dec
into
or
sbb
mov
mov
clc
mulb
out
inc
outsb
or
sbb
aas
test
fwait
dec
ret
jle
popf
or
cmc
and
sbb
shrl
or
clc
das
mov
jle
dec
sar
int
insb
cmovl
jo
sti
and
ds
movsl
and
dec
xchg
xchg
fstl
mov
mov
inc
add
sbb
jnp
mov
mov
insb
push
test
mov
jbe
das
inc
mov
pop
xchg
outsb
adc
ror
decl
out
adc
push
cltd
movsl
push
or
sbb
sub
test
and
jmp
fucomp
mov
outsb
push
aad
and
cmp
jecxz
or
int3
pop
sub
imul
fs
mov
popf
dec
lret
adc
and
fisttps
dec
push
outsb
sbb
pop
lea
scas
jne
lret
add
cld
aad
cli
mov
pop
dec
cmp
mov
lahf
stos
iret
sarb
mov
sbb
das
push
cwtl
in
pop
xchg
in
sarl
enter
inc
mov
je
pop
inc
sub
clc
ljmp
fnstenv
mov
popa
adc
addb
push
pop
sbb
into
test
or
push
test
push
sub
ljmp
insb
sub
dec
push
xor
mov
add
mov
dec
and
pop
mov
push
sbbl
lods
cmp
les
icebp
hlt
or
jmp
js
out
cld
or
mov
aam
test
jo
cmpsw
ret
leave
dec
pop
sbb
dec
cmp
add
loope
mov
xchg
int
mov
repnz
mov
jo
addr16
pushf
mov
test
adc
movsb
add
or
cmp
ror
sarb
xchg
imul
mov
inc
or
push
daa
ret
sbb
mov
jecxz
sub
push
push
fisubs
ror
cli
aam
mov
mov
and
stos
enter
mov
pop
aam
hlt
imul
scas
lcall
out
jmp
pop
pop
rcll
imul
sub
jge
lret
aam
test
mov
push
dec
push
mov
imul
sti
inc
mov
xchg
fisubl
hlt
fnstsw
icebp
push
pop
xchg
stos
sub
lahf
xchg
clc
decl
cmc
dec
cmpsl
and
jbe
rclb
imul
and
nop
sub
aam
pop
mov
test
jge
or
fwait
push
fsubr
sti
fimull
sbb
mov
imul
pusha
outsb
daa
mov
and
and
jecxz
shl
pushf
fistps
xor
mov
jg
inc
dec
test
inc
dec
popf
incl
cld
inc
les
mov
pop
sbb
dec
push
rcr
pop
cli
fwait
ror
dec
loope
xor
jns
leave
test
xor
mov
mov
ret
idiv
mov
addl
lods
sti
test
imul
mov
mov
push
adc
jmp
nop
insl
test
adc
jecxz
pop
clc
mov
ds
cmp
test
lock
or
sub
ss
sar
xor
sbb
jne
hlt
dec
clc
cli
mov
jnp
cmpsb
sahf
cld
dec
das
in
in
pushf
push
adc
sahf
fadd
xchg
sbb
ror
mov
jg
mov
out
mov
mov
pop
jo
cmp
add
loopne
mov
pop
adc
inc
pop
bound
cmp
sahf
in
jo
testl
push
mov
out
inc
xchg
shll
mov
xchg
fstpt
bound
xchg
int
xchg
push
xchg
sbb
jne
mov
push
cli
xor
push
cmpsl
dec
mov
outsb
pop
sar
into
push
xchg
loopne
iret
cs
sub
fcmovbe
mov
bound
rcll
jp
cmp
in
add
std
ja
outsb
jne
jg
fisubrl
stc
out
mov
push
outsl
cmpsl
call
mov
fs
sbb
test
outsl
bound
and
pushf
dec
mov
lock
fists
jg
mov
jno
mov
push
das
shrl
je
shlb
inc
jl
and
loopne
jecxz
mov
incb
sbb
gs
idivl
iret
mov
mov
insb
sbb
mov
test
xchg
xor
sarl
mov
icebp
stos
pop
ljmp
popa
jb
sarl
push
hlt
movsl
and
inc
cld
jne
outsb
iret
jbe
inc
add
inc
push
cmc
mov
sbbb
cld
sbb
adc
push
cmp
repnz
mov
jp
sub
sbb
aad
mov
push
xchg
orl
inc
out
arpl
jne
in
aad
mov
sub
js
aas
dec
xor
dec
mov
or
scas
loope
dec
xorb
sub
xor
sub
or
sub
mov
stos
sub
mov
push
mov
jecxz
mov
push
mov
add
jle
aam
out
inc
stos
pop
sub
push
inc
pop
push
pop
adc
testb
adc
xchg
jno
shlb
mov
sub
outsl
js
and
mov
dec
int3
xchg
sub
or
mov
lock
or
xchg
negb
xchg
data16
jnp
adc
mov
adc
ret
add
mov
int3
aas
dec
or
imul
fidivrs
mov
add
lret
push
into
or
mov
fwait
daa
pop
xor
jl
mov
sub
jne
in
in
out
ljmp
in
fldt
stc
dec
mov
outsb
push
dec
dec
cmp
call
test
jb
std
add
stos
sahf
mov
mov
dec
fimuls
xor
adc
pop
movsl
sub
subl
and
add
test
xchg
or
pop
and
enter
icebp
ja
xchg
sub
push
mov
cmpsl
hlt
push
repz
push
test
out
jge
cli
inc
and
rorl
xor
mov
xchg
and
push
insl
xchg
cmpb
loope
jbe
sub
daa
xchg
jo
adc
inc
mov
jge
fmuls
daa
pop
push
jae
or
pop
sbb
inc
sbb
mov
pop
das
mov
or
sub
lods
jle
cld
mov
sti
xchg
addb
and
rolb
mov
les
mov
mov
repnz
inc
lcall
jp
iret
cmpsb
or
xchg
add
insl
shll
mov
dec
loope
cmc
imul
les
mov
pop
mov
test
jns
cli
call
sub
pop
int3
xchg
sub
jns
push
scas
lods
mov
mul
mov
and
invd
jno
mov
nop
dec
jae
xor
stos
xchg
xchg
xor
dec
push
jnp
xchg
sbb
pushf
rdmsr
aad
push
in
pop
ja
sti
jmp
stos
mov
cwtl
idivl
loop
and
loop
push
push
stos
mov
dec
sub
sti
stos
push
sbb
push
fdivrp
sub
jo
mov
daa
shlb
mov
sub
mov
jno
negb
shlb
cltd
lock
cmpsl
xchg
movsl
mov
repz
and
movsl
enter
into
fidivs
pop
xchg
push
pop
or
icebp
mov
outsb
stc
and
scas
inc
mov
rcrl
or
mov
idivb
mov
iret
inc
pop
sub
add
xchg
sti
cmp
push
add
test
scas
cmc
xchg
mov
lcall
cli
leave
imul
repnz
mov
mov
dec
pop
and
inc
and
and
and
in
repnz
pop
repz
mov
int
add
push
in
incl
mov
mov
adc
xchg
in
dec
dec
xchg
xor
inc
inc
sbb
push
aam
dec
cmp
pop
outsb
test
test
jmp
xchg
pushf
add
imul
fwait
in
ficomps
es
or
dec
adc
mov
dec
in
cmp
or
repz
mov
inc
pop
lock
outsl
xchg
or
adc
xchg
jmp
jl
aam
dec
into
pusha
mov
sbb
cltd
pop
insl
inc
fcmovb
jmp
mov
cwtl
aam
movsl
cs
stc
clc
lods
or
std
xchg
adc
cli
incl
mov
ljmp
fldt
movsl
xchg
adc
sbb
dec
xlat
leave
and
xchg
jl
mov
std
or
inc
lods
mov
xchg
mov
pop
mov
pop
and
mulb
mov
mov
jne
pop
std
jno
std
push
mov
test
xchg
lret
mov
pop
jecxz
popf
cmp
xor
push
fisubrs
pop
xchg
mov
adc
repz
ret
stos
adc
dec
xor
push
sbb
je
shlb
imul
cmp
pop
mov
cmpsl
mov
lahf
pop
cwtl
stos
or
cmc
xchg
mov
or
pop
dec
and
adc
test
je
mov
inc
and
es
ljmp
lods
push
xor
sub
repnz
aam
jmp
lret
dec
pop
xchg
xor
dec
das
push
fst
fistpll
icebp
sub
in
sub
mov
sub
mov
inc
pop
stc
cwtl
xor
xchg
cmp
daa
mov
sahf
loop
jecxz
ret
fimuls
cli
mov
mov
jl
fildll
jns
inc
popf
mov
mov
jo
push
mov
outsl
pop
xchg
int
sub
push
call
sbb
dec
pop
push
xchg
int3
and
push
inc
pushf
cmpsb
leave
mov
xchg
add
jl
rol
inc
imul
out
push
lds
insl
pop
cmc
xchg
mov
jl
adc
in
push
add
pop
bound
mov
sbb
xchg
and
adc
cltd
jp
mov
je
call
cmc
iret
loope
insl
jp
out
iret
mov
cmp
scas
lcall
imul
iret
roll
jo
inc
push
jns
add
inc
aaa
lcall
negb
insl
pop
pop
and
mov
or
int
or
loope
fldl
inc
pushl
jo
sbb
mov
mov
jmp
icebp
js
mov
int3
and
call
adc
insb
or
cmpsl
sub
fcomp
in
mov
dec
pushaw
repnz
xchg
sbb
movsl
repz
movsb
addr16
dec
cmp
out
fldt
in
cmpsl
lcall
aad
test
cmp
mov
and
adc
xchg
mov
mov
jg
sbb
jbe
xor
in
imul
sub
or
data16
fnclex
pop
xor
mov
mov
ja
xorb
mov
add
pop
repz
fdivs
add
or
mov
mov
xchg
ss
insb
je
enter
fstpl
pusha
pop
je
and
cmp
jne
push
dec
popf
nop
push
sti
leave
arpl
lods
pop
stos
les
dec
or
iret
fstpl
sbb
insl
enter
call
and
pop
sbb
xor
lret
mov
mov
pop
dec
notb
xor
mov
dec
and
inc
or
push
fldenv
ja
adc
cld
shll
mov
mov
pop
jae
sbb
clc
mov
pop
fs
add
sub
data16
in
cmp
cltd
shrl
rorl
mov
xor
jo
int
adc
jno
rcl
mov
shl
rcll
lods
xor
movsb
xchg
outsb
xchg
xchg
pop
aad
add
dec
jge
adc
inc
ss
dec
xor
leave
sbb
inc
out
cmp
add
gs
insl
jno
cs
sti
xchg
pop
aam
hlt
ds
shr
subb
fidivs
insl
cmp
loop
mov
lahf
shr
lret
inc
js
cmp
jmp
fstps
lds
fadds
in
push
aaa
jae
push
jnp,pt
sub
pop
fidivrl
fildll
xchg
lods
pop
and
pop
mov
push
repnz
cltd
iret
xlat
fisttpl
sbb
dec
inc
push
jne
aaa
sbb
and
test
pop
lea
fnstcw
cmp
mov
pop
lret
xchg
mov
cmp
scas
test
jl
cmp
pop
or
push
push
rolb
sub
data16
and
mov
je
push
mov
out
into
mov
dec
lcall
out
sbb
dec
sbb
bound
inc
arpl
inc
adc
pop
inc
out
mov
aas
cmp
out
xchg
std
ret
test
pop
sub
repnz
push
in
popf
dec
loop
push
mov
int3
push
adc
mov
inc
jae
mov
mov
loop
fs
and
pop
sarl
outsl
repz
outsb
xor
dec
mov
add
loopne
sbb
repz
loope
cmpsl
lds
jl
push
adc
enter
xor
pop
cmp
test
push
push
hlt
xchg
arpl
jbe
movsb
inc
adc
adc
dec
mov
das
mov
or
mov
das
push
sahf
mov
dec
push
add
mov
ss
stos
inc
mov
stc
push
jae
jbe
and
dec
les
pushf
xor
push
addl
scas
insb
pop
xchg
mov
mov
hlt
jne
pushf
insl
jge
out
and
stos
int
pop
in
push
dec
sub
mov
sbbl
fnstenv
fadds
cmp
sub
xchg
out
inc
pop
int
addr16
push
repnz
jb
cmc
icebp
mov
sahf
ja
mov
pop
jmp
fisubrs
out
mov
inc
xor
ja
fnstcw
in
clc
ficoms
out
add
add
sti
std
in
aaa
or
xor
movsb
cld
sbb
nop
mov
lock
popf
rol
icebp
popf
clc
out
pop
cmp
sub
mov
adc
sbb
mov
iret
insl
cli
mov
xor
xchg
je
das
mov
daa
enter
jp
cmpsb
mov
ja
mov
mov
add
adc
nop
rcll
pop
pop
mov
inc
and
xor
lock
orb
dec
push
cli
repz
xor
dec
pop
test
dec
xor
stos
jmp
mov
mull
stc
fcomps
mov
jnp,pt
jbe
mov
xor
mov
fisubrs
leave
sub
pop
xchg
insb
popf
mov
inc
push
fs
rol
cli
fwait
jl
adcl
std
bound
test
in
mov
push
inc
hlt
cmp
scas
mov
mov
push
xchg
add
imul
xor
scas
jns
xchg
stc
hlt
sti
push
and
cwtl
imulb
pop
jns
xor
mov
xor
lahf
std
lods
sub
enter
pop
jle
testl
int3
lds
mov
sbb
out
loope
pop
add
fisubrl
out
jl
pop
push
adc
hlt
pop
pop
push
subb
push
jl
xor
cmc
or
mov
int
jns
sbb
out
pop
cmp
jle
inc
dec
stos
sbbb
imul
xchg
out
sarl
push
pop
pushf
les
push
into
test
push
cmp
mov
sub
repz
inc
push
xchg
add
repz
pop
xlat
xlat
adc
lods
inc
stc
sahf
fildll
icebp
push
mov
and
cmc
sbb
dec
xchg
out
js
cli
inc
inc
dec
ljmp
test
xor
sahf
sub
push
jns
cmpsb
test
sar
pop
xchg
ret
xchg
xchg
out
sub
or
sti
mov
sbb
adc
xchg
mov
popa
pushl
rcrb
negb
adc
sub
adc
in
adc
repz
sbb
mov
pushf
push
push
xchg
das
lods
lahf
js
outsb
es
dec
sub
cmp
lahf
icebp
add
fisubrs
mov
movsb
stos
adc
movsb
lret
imul
gs
and
push
ss
mov
setp
mov
inc
dec
xchg
fldcw
ror
fstpl
xchg
rorl
popf
or
add
jne
mov
and
shr
arpl
inc
jecxz
lcall
cmp
xor
jecxz
xchg
mov
paddsb
xorb
xor
dec
inc
sub
cmp
or
icebp
or
dec
mov
push
lods
cmp
addb
fwait
and
fcmovnb
lods
sub
movsl
scas
dec
subl
fldcw
pop
mov
lea
xchg
or
inc
bound
or
pushf
add
adc
in
pop
cmp
call
push
or
mov
mov
pop
mov
adc
mov
lahf
push
in
ret
mov
out
lea
and
or
aad
cmpsb
insb
js
lret
adc
lock
add
test
out
sbb
or
mov
push
shrd
sbb
jnp
test
or
dec
mov
or
lds
aaa
les
loope
adc
nop
or
cmp
lods
and
das
pop
clc
movsb
adc
stos
das
pop
jl
adc
sub
push
mov
jno
dec
xchg
loopne
rcll
testl
sbb
and
loope
fisttpll
jne
mov
lret
fwait
sbb
dec
add
jecxz
lea
mov
daa
xlat
mov
push
test
aas
mov
js
adc
rcll
push
mov
pusha
in
shl
rep
mov
aam
test
ret
dec
inc
mov
movsb
or
push
add
mov
push
mov
subb
and
adc
stos
adc
adc
jle
loope
mov
loop
add
add
mov
lea
movzbl
lea
sub
xchg
lea
sub
inc
mov
xor
sub
mov
mov
mov
inc
inc
sub
dec
jne
imul
mov
lea
sub
pop
mov
xor
pop
mov
inc
pop
movsbl
dec
inc
inc
inc
dec
dec
sub
and
mov
mov
add
ret
push
push
inc
dec
push
lea
movzbl
lea
inc
mov
add
push
sub
add
mov
xor
push
inc
xor
inc
inc
movzbl
mov
dec
push
or
mov
dec
push
imul
mov
xor
mov
inc
push
mov
imul
push
mov
mov
pushl
mov
call
mov
add
and
mov
movswl
mov
xor
imul
mov
pop
ret
inc
dec
cmp
jb
inc
xor
xor
dec
mov
add
inc
mov
mov
movswl
inc
sub
sub
mov
or
inc
imul
mov
add
lea
cmp
jb
mov
pop
movsbl
inc
sub
add
movswl
mov
sub
dec
movsbl
dec
add
lea
add
xor
or
mov
xor
inc
dec
mov
lea
add
test
jbe
add
and
mov
add
inc
lea
dec
lea
dec
dec
lea
and
inc
dec
mov
add
mov
movzbl
add
or
add
mov
xor
and
inc
dec
mov
inc
and
mov
sub
dec
mov
and
or
mov
mov
add
movzwl
mov
mov
dec
dec
jne
mov
mov
or
mov
mov
inc
dec
mov
lea
dec
dec
mov
inc
dec
inc
lea
mov
lea
inc
add
mov
sub
sub
test
jbe
inc
inc
mov
imul
mov
inc
dec
add
movzbl
and
dec
inc
dec
mov
add
inc
or
inc
mov
lea
or
lea
and
add
dec
mov
lea
add
movzbl
movzwl
mov
add
mov
inc
and
lea
inc
mov
dec
dec
movzbl
mov
add
mov
add
add
mov
dec
or
movzbl
inc
sub
add
mov
jmp
push
add
xor
lea
movsbl
inc
xor
add
add
xor
xor
and
mov
lea
dec
add
mov
dec
mov
add
mov
mov
sub
dec
add
inc
inc
inc
lea
dec
lea
xor
imul
and
or
inc
lea
imul
mov
imul
cmp
je
mov
inc
sub
push
dec
call
call
mov
sub
call
call
movzwl
mov
add
xor
lea
imul
dec
ret
mov
dec
pop
imul
ret
push
add
lea
movzwl
xor
and
push
add
mov
push
dec
push
inc
push
or
mov
add
lea
add
call
mov
push
lea
inc
xor
movsbl
sub
inc
neg
add
inc
dec
mov
mov
add
mov
or
lea
mov
dec
lea
inc
dec
dec
dec
je
movzbl
dec
dec
mov
sub
sub
mov
sub
dec
inc
dec
repnz
lea
inc
add
mov
jmp
mov
dec
imul
sub
movsbl
sub
mov
mov
mov
add
sub
mov
mov
add
jmp
js
mov
mov
xor
sub
xchg
je
repz
push
nop
shlb
add
mov
inc
imul
inc
push
ss
cmp
xor
push
sbb
insl
push
mov
mov
push
dec
xor
fidivl
mov
adc
cmp
pop
xor
sbb
into
or
leave
xor
cmp
xor
dec
xchg
aad
mov
sbbb
push
dec
dec
stos
in
pop
dec
dec
mov
inc
fwait
inc
mov
adc
or
inc
cld
adc
add
out
lret
sahf
bound
jle
les
insb
in
xchg
sysexit
in
lcall
mov
or
cs
adc
in
jne
cmpsb
std
mull
fs
sub
dec
jle
leave
scas
cmc
lods
and
and
pop
dec
pop
je
out
and
dec
orb
cwtl
stos
pop
ja
pusha
pop
lods
sbb
and
mov
mov
faddl
flds
push
icebp
arpl
cltd
sarb
mov
loopne
loopne
dec
mov
sub
sbb
lods
adcl
mov
push
pusha
sub
lock
mov
jns
xchg
das
lret
mov
xor
lcall
push
add
push
inc
ds
sbb
adc
add
imul
bound
or
push
or
fsubl
push
xchg
pop
mov
cmpps
je
xchg
test
dec
pminsw
cmp
fsubs
out
jmp
addr16
stc
and
cmp
jns
xchg
pushf
and
push
aam
sbb
outsl
rcll
dec
js
mov
pusha
mov
out
and
cmpsl
inc
add
pop
cli
mov
xor
cmp
je
sub
sbb
push
mov
stos
xor
scas
push
xchg
ret
cmp
dec
out
mov
shlb
mov
icebp
jns
or
bound
jbe
cmp
mov
jb
sahf
xor
test
scas
pushf
cmp
test
jmp
jmp
fistps
in
ficoms
cs
jo
ss
dec
add
daa
mov
jns
sbb
mov
adc
out
scas
push
setae
adc
jae
and
mov
aaa
dec
addr16
push
and
sub
xchg
pop
in
in
mov
cmp
sti
pushf
jnp
mov
and
mov
clc
rcll
mov
clc
outsl
xor
pusha
ficoms
int3
lods
jb
xorl
inc
sbb
xchg
add
dec
cli
popa
aas
ja
into
or
jl
in
imul
or
inc
rcll
std
pop
mov
dec
and
mov
inc
in
mov
pop
stos
xchg
mov
and
cld
push
mov
push
outsl
adc
lock
in
fucomp
and
test
cs
adc
fidivl
mov
inc
mov
xchg
popa
push
dec
aas
ja
mov
lods
mov
out
adc
jp
jge
test
xor
nop
adc
push
and
adc
pushl
insb
cwtl
or
and
and
cmp
loop
add
and
scas
fidivrs
fnsave
pop
lods
lock
iret
loop
pop
inc
mov
imul
hlt
repnz
sub
xchg
sbb
cmp
adc
outsb
pop
jo
fsubl
cmp
sbb
fildll
xor
scas
mov
stc
out
adcl
sub
gs
sub
in
sub
push
ret
dec
or
ds
jb
sbb
xchg
out
push
leave
sub
testl
imul
jmp
inc
and
jmp
call
mov
push
mov
test
sti
clc
add
enter
or
mov
or
iret
loop
rorl
add
push
out
test
xor
stos
shlb
fisubrs
enter
xor
push
fwait
sbb
mov
notb
push
mov
pop
movsb
sub
jg
push
cmp
ret
mov
adc
fcmovb
fadds
cmpb
gs
mov
xor
xor
mov
push
cmp
inc
pop
out
iret
out
stc
jne
mulb
das
pop
mov
jb
ljmp
pop
pop
xchg
mov
jmp
mov
test
mov
jns
aas
aas
xchg
dec
inc
jbe
stc
repz
test
dec
sbb
inc
push
sub
pop
int3
or
dec
test
cwtl
cmp
loop,pt
arpl
es
repz
inc
scas
cmpsb
ljmp
adc
cli
jecxz
mov
or
xchg
subl
mov
mov
push
shrl
clc
fcmovnb
push
fdivp
push
pop
insl
fsubs
jns
cmp
insb
imul
and
xor
mov
pop
shl
daa
adc
inc
data16
push
push
and
stc
xchg
je
popf
and
repz
mov
xlat
ja
jge
clc
add
in
imul
ljmp
jge
in
repnz
popf
hlt
fwait
push
call
cmp
cmpsb
out
mov
mov
xchg
in
adc
inc
in
roll
lahf
stc
dec
shl
mov
pushf
adc
dec
pop
lods
fdivrl
xchg
out
or
stos
sbb
or
cmp
inc
and
adc
push
inc
add
jo
jns
pop
xchg
inc
push
fldcw
pushf
imul
lock
inc
jae
sbb
fucom
shlb
aam
sahf
jae
cmp
sub
frstor
icebp
inc
jo
mov
ret
pop
mov
in
xor
push
pop
iret
or
cmpsl
arpl
xor
push
push
inc
jl
rcr
loopne
mov
imulb
mov
scas
pop
ret
fistps
test
pop
mov
mov
cmp
dec
cmp
aad
movq
imul
adc
or
jo
out
dec
adc
jbe
mov
cmovae
daa
pop
mov
fisttpll
xchg
add
vphaddubw
jl
sub
bnd
sbb
pop
sub
fists
cmpsl
pusha
in
jl
loopne
mov
repz
add
dec
push
adc
or
push
mov
pusha
int3
cmpsb
and
imul
lods
in
jmp
call
aaa
sub
jne
sbb
lcall
rcrl
push
fwait
push
aam
nop
push
je
rolb
dec
inc
imul
mov
stos
ds
cli
je
mov
scas
lea
inc
repnz
out
gs
xchg
push
rcrb
or
pop
fbstp
out
mov
and
inc
jp
mov
call
fdivs
cmp
jo
xor
pop
pop
adc
cmc
or
cmp
sub
imul
scas
fwait
jge
sbb
mov
jno
in
xchg
jo
inc
xor
xor
fldt
mov
push
out
mov
xor
repz
jecxz
pushf
mov
adc
or
or
ret
adc
sub
push
cwtl
jg
mov
cli
pusha
sbb
inc
int
xor
clc
std
push
jge
fsts
mov
clc
xchg
js
movsl
idivb
jbe
mov
movsb
pop
cltd
notl
scas
test
sub
cmpsb
xchg
or
out
add
xchg
cmp
aaa
add
outsb
lods
enter
pop
mov
cmpsl
mov
les
and
inc
jb
std
outsb
scas
leave
inc
xor
ret
rolb
sbb
jno
lods
xchg
cmp
pushf
jo
bound
lock
les
mov
pushl
sbb
push
shll
mov
jmp
mov
sub
add
push
fstl
adc
test
sarl
xchg
push
cmp
or
push
into
mov
loop
mov
pushf
leave
jl
sahf
pop
mov
push
jle
xor
ret
sbb
stc
dec
pushf
xchg
jge
lods
out
dec
cmp
add
mov
js
xchg
or
push
vpsadbw
lret
sbb
xorb
pop
fdivrs
or
lock
xor
out
push
ret
jnp
cmpsl
mov
add
or
push
or
dec
add
outsl
popa
movsl
imul
test
mov
push
pop
pop
adc
pop
sbb
rcrl
hlt
xchg
inc
add
adc
xor
pop
dec
mov
or
push
xorl
add
jo
mov
jno
jo
cli
sbb
sarb
int
clc
sub
push
mov
jbe
inc
jl
sub
xchg
je
mov
pop
push
sahf
das
mov
xchg
dec
xchg
xor
enter
mov
out
xor
call
ret
mov
int
adcb
mov
test
cmc
mov
pop
leave
dec
mov
pop
push
sub
push
push
sbb
jecxz
hlt
pop
dec
add
xchg
jle
loope
fcmove
dec
mov
pop
jecxz
sbb
loopne
call
push
push
lahf
lods
fists
and
push
cmpsb
cmp
jge
orl
jae
ret
fs
mov
mov
out
pop
xchg
imul
adcl
int
aad
repz
fdivs
clc
pop
adc
sub
loop
or
addr16
xchg
imul
imul
pop
inc
xor
cmp
dec
dec
aaa
aad
int3
push
cmp
int3
cmp
adc
jp
cli
cmp
lods
sbb
jg
xchg
out
cwtl
cmpsb
cmc
jno
dec
pusha
adc
jl
aas
notl
jbe
insb
je
inc
jmp
sbb
iret
ljmp
std
ss
or
push
in
aas
addr16
mov
aad
mov
aad
push
inc
mov
sub
sbb
ss
jne
fsts
and
call
jae
mov
loop
lds
clc
or
enter
jb
jb
dec
sets
mov
sbb
inc
lock
lock
rcrb
ss
xchg
ljmp
sbb
xchg
mov
in
lods
pop
mov
sub
popf
ss
pop
sbb
jne
sarl
mov
stc
pop
xchg
mov
add
inc
aam
pop
repnz
out
mov
cmpl
jp
push
sbb
inc
pop
ds
cmc
sub
xchg
dec
or
push
xlat
std
aaa
xor
dec
ret
js
jge
jns
lcall
in
jae
in
xchg
and
mov
fdivp
mov
xchg
jmp
xor
mov
mov
insb
adc
xchg
dec
and
pusha
repnz
cmp
arpl
sub
or
inc
test
xorb
or
push
inc
popf
xchg
cmp
inc
jge
add
ljmp
cmpsb
sub
js
jmp
sarb
sbb
lahf
adc
sbb
out
jg
addl
cmp
rcl
add
or
ret
xor
cmp
aas
xchg
mov
out
adc
mov
and
dec
mov
cli
cmc
push
mov
xchg
inc
js
mov
push
daa
and
xchg
cmc
movsl
dec
or
or
jns
sbb
sbb
insb
inc
xor
xchg
xor
mov
inc
jg
sbb
pop
and
adc
loope
and
mov
fsubs
testl
sbb
aam
adc
xchg
adc
test
rolb
lcall
inc
imul
push
jbe
jno
push
in
push
add
jl
lcall
inc
push
jns
pop
js
outsb
loopne
mov
mov
push
pop
fdivrs
xor
repz
pop
ud2
jmp
ss
sar
adc
test
add
pop
and
aam
outsb
fwait
popa
xor
jbe
or
cltd
idivb
sbb
fimuls
pop
mov
jle
inc
push
add
nop
push
push
out
imul
mov
aad
nop
fwait
outsl
xchg
fcomp
es
mov
xchg
mov
in
es
pop
arpl
loop
jnp
mov
std
mov
jnp
idivb
fnsave
cmpsb
mov
sub
jo
lods
inc
add
sbb
and
subb
jp,pn
push
cmp
pop
pop
into
aad
lds
daa
jecxz,pn
shrb
add
sub
sub
cmp
outsb
mov
xlat
lock
sub
xor
fnsave
push
xchg
test
js
xchg
outsb
std
mov
leave
test
arpl
mov
addr16
or
nop
xchg
or
xchg
test
inc
jns
mulb
sbb
stos
pop
jbe
push
xchg
es
push
jmp
bound
pop
int3
mov
xor
movsl
in
repnz
loop
jae
xor
or
mov
jle
xor
es
jbe
sbbl
rorl
mov
dec
inc
mov
jb,pn
push
out
inc
push
out
mov
cmpb
dec
mov
ss
test
rcrl
shrb
cmp
push
push
jge
mov
add
jno
and
stos
icebp
pusha
ds
push
outsl
fists
sbb
lret
mov
push
jmp
dec
dec
loope
pop
outsb
cli
cld
aam
mov
mov
push
out
inc
xor
mov
xorb
data16
xchg
fmull
sub
cmp
addr16
sbb
rolb
fimull
add
mov
jg
xchg
sti
xchg
sub
daa
out
insl
inc
imul
arpl
push
fdivl
xchg
stos
xchg
outsl
call
bound
repnz
fwait
and
sar
roll
loope
adcb
xlat
jo
cs
addl
pop
repnz
ret
push
add
aaa
lods
in
js
xor
dec
clc
pop
andl
gs
cmc
sbb
add
jb
ret
scas
mov
mov
add
mov
call
inc
inc
call
sub
push
add
call
sub
inc
dec
mov
inc
dec
call
add
xor
mov
mov
lea
mov
add
inc
inc
or
dec
movsbl
movswl
sub
call
mov
add
xor
call
add
inc
call
add
imul
imul
add
sub
add
dec
mov
inc
pop
inc
add
imul
pop
movsbl
pop
lea
lea
add
dec
pop
mov
imul
inc
imul
mov
mov
lea
mov
pop
or
xor
pop
add
mov
mov
inc
movswl
call
mov
dec
mov
inc
ret
xor
add
push
mov
sub
push
lea
sub
push
lea
push
add
push
sub
mov
dec
and
push
mov
ret
push
mov
push
movzbl
and
dec
xor
push
lea
imul
inc
call
pop
ret
jmp
lea
inc
pop
pop
ret
push
inc
dec
mov
inc
imul
add
dec
sub
sub
inc
xor
imul
mov
lea
dec
xor
mov
mov
sub
add
lea
add
dec
imul
mov
lea
lea
pop
ret
sub
imul
mov
imul
inc
mov
inc
inc
mov
sub
add
mov
dec
mov
xor
mov
imul
mov
imul
mov
inc
mov
add
dec
lea
inc
dec
cmp
jb
mov
push
dec
inc
push
dec
dec
push
inc
imul
xor
dec
inc
xor
inc
inc
xor
movsbl
mov
push
lea
mov
push
inc
inc
pop
dec
mov
mov
add
mov
mov
sub
add
mov
mov
xor
imul
inc
mov
xor
imul
mov
lea
inc
movzbl
dec
lea
lea
inc
add
xor
imul
add
imul
dec
movzbl
mov
imul
movsbl
add
add
inc
or
inc
inc
lea
mov
dec
add
inc
jmp
add
add
push
int
adc
adc
add
add
ljmp
add
mov
jle
adc
cmpsl
add
jmp
sbb
js
in
pop
lds
and
outsl
xor
xor
dec
inc
lods
cmpsb
push
loop
and
sbb
clc
insb
mov
in
xchg
mov
lret
sahf
icebp
and
jmp
imul
inc
iret
fsubrs
arpl
mov
xchg
dec
in
outsl
or
mov
ljmp
imul
jecxz
mov
push
sbbb
scas
jmp
in
and
popf
sub
dec
xchg
sbb
mov
sbb
push
cmp
jg
cmp
pop
icebp
aad
inc
push
cmp
jecxz
in
mov
je
out
xchg
adc
sbb
mov
sti
push
call
add
jns
aam
shlb
mov
cmc
cmp
adc
push
adcb
jae
jecxz
popa
and
nop
repz
imul
jo
aas
andb
cmp
insb
stos
lcall
idiv
mov
inc
es
lahf
cmpsb
in
mov
push
pop
call
mov
clc
and
xor
add
push
sarl
pop
rorb
lret
cmp
push
sub
aad
inc
adc
push
sti
aad
lea
jge
test
mov
push
test
neg
sbb
xchg
loopne
mov
in
stos
jle
mov
data16
jmp
mov
ret
jo
daa
xor
lods
cld
pop
push
xchg
xchg
adc
push
imul
cld
push
out
mov
dec
andb
mov
movsl
pop
adc
sub
movsl
jnp
cli
cmp
mov
fwait
pop
fimull
xchg
test
fistps
dec
lea
jmp
aaa
inc
pop
push
cmp
add
aad
lock
in
mov
movsb
aad
daa
insl
mov
aad
outsl
inc
aam
cmp
jge
mov
stc
mov
push
sbb
xchg
icebp
jns
jecxz
fisubs
add
cmp
inc
pop
je
add
pop
out
sub
mov
add
pop
int
cmpsl
lahf
stc
add
sahf
fcomip
scas
add
adcb
and
outsb
faddl
ja
add
int3
pop
sbb
ret
in
pop
add
mov
xchg
jno
sbb
jno
iret
cltd
jae
out
scas
push
lods
pop
stc
inc
mov
pop
mov
xchg
mov
mov
cmpsb
out
mov
xor
rcll
jno
pop
mov
jae
jne
int3
and
aaa
testl
nop
rcl
lahf
insb
push
jae
push
mov
testb
loope
fdivrs
mov
lock
imul
pop
mov
pop
fcomps
je
cmp
xchg
inc
xchg
push
and
dec
push
cmp
add
inc
or
cltd
xor
cmp
dec
lahf
sbb
xor
sbbb
in
or
shr
rcrl
fists
push
mov
xchg
nop
fldt
fwait
scas
mov
mov
stos
dec
scas
test
lcall
mov
aaa
ja
xor
or
jle
xor
sahf
movsl
xchg
lret
pop
mov
jge
push
test
adcb
xchg
xchg
ja
pop
mov
lea
imul
adcl
sub
arpl
push
lea
xor
cld
iret
xlat
lret
fdivs
xchg
loope
out
push
jne
push
lahf
jl
pushl
js
xor
jbe
inc
mov
lea
testl
dec
or
inc
jle
push
cmp
sbb
mov
ret
ret
dec
lea
mov
pop
loop
lods
mov
lods
add
cmp
jb
das
jne
inc
inc
repnz
ja
arpl
jmp
ud0
adc
hlt
test
xchg
lods
adc
cli
lods
xchg
test
fdivr
ds
adc
adc
dec
xor
into
jbe
pop
sahf
mov
xchg
and
insl
adc
dec
std
xchg
xchg
pop
jg
mov
xor
sub
cmpsb
and
lcallw
outsl
lock
xchg
arpl
cmp
lock
fcmovnb
jb
ja
sahf
imul
lods
adc
jmp
sti
out
push
arpl
lods
in
fwait
inc
mov
xor
ds
les
mov
push
fwait
push
aad
mov
lds
xchg
xor
push
mov
jmp
fstpt
jno
clc
sub
and
popa
bound
add
ds
mov
mov
stc
cmp
in
push
mov
int3
int
repz
sub
xchg
out
lea
or
repnz
add
clc
xchg
mov
sarb
mov
bound
pop
inc
mov
and
fcomip
mov
jle
push
ficompl
dec
ret
mov
bound
jp
or
mov
aad
jmp
cmp
cmp
loope
pop
xor
data16
sub
pop
xor
dec
cmc
xchg
mov
loopne
jns
out
popa
push
mov
mov
jae
pop
orb
push
push
mov
daa
xchg
sarb
sub
jne
inc
sub
inc
out
gs
lret
cmc
dec
cmp
orl
sbb
adc
pop
pop
insl
jp
and
pusha
sbb
inc
in
jae
cmp
bound
mov
repz
scas
inc
ret
loopne
dec
and
xor
pop
add
mov
imull
lods
fsubr
addr16
int
nop
in
fsubl
pop
mov
push
bound
sub
sahf
cld
scas
inc
or
cmp
or
fcoms
sti
xor
mov
movsb
add
and
mov
insl
cmpl
pop
xor
clc
add
cmpsb
loopne
dec
push
cmc
push
js
call
sub
popl
mov
les
add
push
bswap
and
push
mov
inc
mov
xchg
mov
mov
iret
fwait
jb
xor
jbe
add
push
pop
sbb
cmp
pop
lds
in
jnp
out
sub
pop
push
xchg
push
pushf
mov
jae
cmpsb
das
sti
push
jne
leave
shl
and
pusha
into
cld
test
loop
cmp
inc
mov
and
test
adc
push
add
mov
mov
inc
inc
iret
xor
adc
pop
jns
sbb
mov
mov
and
pusha
jno
bound
or
js
or
in
push
pop
jl
xor
gs
jnp
in
pop
mov
invd
ds
xchg
cmpsb
sahf
test
and
sarb
enter
pushf
test
xor
pop
sub
and
leave
enter
jae
ja
push
pop
pop
imul
mov
push
or
mov
es
in
dec
repz
es
rcll
repz
mov
mov
jecxz
rcr
pop
pop
ja
in
aas
enter
sub
push
es
outsl
fcmove
mov
sub
jp
incb
mov
mov
gs
stc
daa
add
mov
mov
negl
push
push
mov
dec
push
push
and
rcll
mov
xchg
sub
jne
push
xchg
enter
mov
andb
or
lret
in
sbb
push
lds
ds
icebp
push
or
scas
add
sub
sub
stos
testl
cmc
cwtl
fwait
aad
or
cwtl
adc
pop
xor
shrb
aaa
in
loop
pop
pushf
icebp
cmp
cmpsl
mov
inc
mov
shlb
pop
popf
je
addl
and
xchg
hlt
pop
cmp
addr16
mov
cld
imul
test
mov
call
sbb
insl
cmp
insl
jmp
shrl
add
iret
jg
dec
lcall
out
insb
lahf
mov
nop
xrelease
ret
cmc
push
pop
ja
mov
testb
aad
daa
push
push
or
daa
pminsw
cmp
scas
and
sub
cli
and
lret
cli
push
push
or
popa
mov
pop
xchg
ss
xchg
xor
push
mov
dec
std
sbb
incl
clc
hlt
in
int
addl
push
sbb
inc
cmpsl
aad
rcrb
in
sbbl
adc
mov
mov
adc
into
sbb
stc
lds
xchg
mov
cmp
iret
pop
ss
xchg
inc
into
inc
mov
push
and
pop
mov
out
pop
jbe
mov
shrl
xchg
mov
sub
push
fucomip
test
mov
idivl
push
stos
loope
mov
lods
imulb
inc
shr
mov
lcall
addr16
addr16
leave
mov
iret
icebp
sti
adc
xchg
mov
dec
inc
rcrl
mov
jbe
mov
ret
jae
mov
xor
push
mov
xchg
mov
adc
test
stos
fs
sub
nop
push
mul
fists
jecxz
cwtl
and
sbb
inc
pop
fstp
ljmp
lahf
and
cmpb
pushf
xchg
push
adc
shll
push
jb
add
orl
rcrb
push
jbe
dec
mov
imul
int
fcomp
cmp
rcrb
call
test
mov
cmp
sbb
or
and
or
xchg
fwait
jno
das
and
popf
cmpsb
fildl
int3
inc
mov
xchg
clc
nop
loopne
push
nop
adc
pop
outsb
pop
mov
push
sbbl
repnz
insb
cmp
xor
xchg
stc
bound
std
jb
sti
das
sbb
test
add
mov
shll
jp
mov
xor
pop
lea
dec
mov
mov
es
jnp
test
pop
outsb
xchg
jno
pop
fcomp
jae
jl
shl
loopne
call
add
lret
push
int
addl
inc
cwtl
push
ret
loopne
mov
inc
pop
cltd
cmpsb
xchg
rolb
mov
aad
mov
push
adc
xchg
mov
fildll
int
and
jo
and
arpl
rcll
cs
push
loopne
add
push
push
mov
pop
mov
cmp
xchg
outsb
call
xchg
xchg
fst
mov
hlt
mov
roll
arpl
lods
repz
ljmp
push
mov
jnp
xchg
jbe
or
pop
sbb
push
sub
push
daa
insl
fsubrl
inc
pop
pop
icebp
ljmp
pop
loop
daa
xlat
out
nop
jp
dec
sbb
loope
cmpsb
out
jo
out
pushf
and
sbbb
cmpsb
testb
in
pop
sbb
test
jge
pop
std
jno
repz
pop
addr16
cmp
push
imulb
stos
cmp
popa
cltd
loop
xchg
and
mov
pop
mov
jmp
xor
inc
into
jg
pop
or
mov
add
xor
loope
lods
ret
and
sub
pop
push
jns
scas
das
cmpb
in
imul
lea
int3
or
xchg
mov
and
mov
imul
mov
xchg
mov
cmp
filds
imull
adc
stc
iret
outsb
ffree
or
cmpl
xor
mov
ja
dec
mov
les
xchg
push
cmpsl
stos
fnsave
jo
sbb
lret
pop
push
nop
add
stos
mov
shlb
dec
hlt
xor
insl
xor
push
pop
das
aam
sahf
xchg
jns
jle
and
cmp
push
popa
mov
arpl
arpl
int3
gs
outsl
gs
fistl
jge
and
bound
cmp
outsl
mov
outsl
mov
mov
daa
jp
movsl
adc
stc
and
adc
xchg
scas
xor
adc
ljmp
pop
ja
hlt
jb
repz
gs
jnp
mov
out
push
inc
arpl
xchg
scas
pop
cmp
lea
xchg
out
mov
push
loop
fdiv
pushf
cmp
cwtl
mov
xchg
mov
mov
xchg
push
clc
jge
enter
andb
push
xor
inc
in
jmp
pop
xor
or
or
pop
mov
adc
mov
jg
cmp
data16
imul
cmp
mov
insl
out
add
or
nop
hlt
or
push
fiaddl
loop
cli
and
dec
xchg
jge
adc
mov
in
lcall
scas
popa
push
outsb
and
mov
mov
das
mov
dec
xor
add
mov
scas
das
jb
pop
mov
stc
hlt
out
fsts
enter
orb
addb
and
dec
cmc
aam
xor
outsl
dec
fidivrs
add
adc
mov
push
imul
filds
not
sbb
rcrl
mov
mov
out
sub
adc
dec
push
or
inc
or
outsb
fwait
loope
repz
lock
xor
sbb
mov
leave
testl
jmp
add
fimuls
sahf
lea
mov
or
push
test
mov
leave
mov
pushl
mov
or
imul
mov
sbbl
inc
cmp
adc
pop
outsl
cld
filds
mov
js
jae
add
mov
mov
xchg
ret
lahf
adc
test
loop
xor
pop
clc
xchg
xchg
push
repz
push
dec
cmpsl
repz
mov
fcomi
shlb
test
insb
xchg
pop
sub
shlb
lea
inc
inc
push
fptan
rcll
scas
mov
jp
lds
je
jge
stos
ljmp
sbb
mov
adc
inc
mov
negl
rorl
adc
xchg
shll
inc
mov
lcall
xor
mov
mov
mov
outsb
mov
popa
pop
les
imul
movsl
inc
and
or
or
push
lret
ljmp
push
mov
sub
ds
or
stos
nop
and
mov
mov
mov
pop
enter
dec
adc
sahf
les
in
cmp
rolb
add
faddl
or
sahf
movsb
jnp
mov
shrl
mov
push
mov
and
arpl
sub
add
fisubrl
inc
cs
sub
jl
push
push
or
rol
mov
fstpt
sub
jno
insb
hlt
push
dec
jnp
mov
inc
dec
xor
imul
push
mov
add
sub
orl
ret
sub
stc
lahf
dec
and
ds
xor
mov
hlt
fsub
ja
scas
movsl
pop
sub
xor
aad
mov
xlat
les
mov
xchg
add
and
std
adc
push
pop
jg
ss
iret
push
movsb
jge
inc
push
jg
imul
mov
xor
sub
mov
mov
adc
xor
lock
cmpsb
testl
or
inc
out
jge
sbb
fdivl
lds
jge
inc
lret
das
mov
jecxz
mov
std
jmp
adc
mulb
sbb
xor
inc
sbb
lret
push
xor
cmp
insl
scas
mov
adc
or
or
arpl
call
add
push
xchg
xor
adc
scas
imul
data16
imul
repz
jecxz
cmp
cmp
arpl
jmp
lret
pop
inc
jg
jne
call
pop
jo
out
cmpsb
or
mov
mov
add
fldlg2
pop
cltd
scas
cmp
dec
or
loopne
cli
jb
stos
push
fisttps
jl
dec
loopne
pop
fwait
pusha
int3
sub
xor
xor
jbe
stos
inc
js
ret
sahf
or
loopne
mov
fwait
subl
mov
dec
fwait
mov
dec
lret
sbb
dec
andl
fmul
pop
sbb
mov
add
and
subb
insb
int
dec
out
cmpsl
inc
subl
sbb
addr16
push
shlb
pop
loop
lret
je
loopne
or
aaa
jp
xchg
shrb
enter
jns
sub
mov
jecxz
pop
mov
xchg
ljmp
lock
data16
icebp
into
jns
push
lahf
jae
sub
scas
bound
cmp
pop
xor
dec
dec
sahf
jns
out
je
or
add
jbe
xor
xchg
sub
pop
add
insl
dec
fucomp
xchg
and
add
jo
xor
cmp
inc
pop
push
pop
sub
push
icebp
icebp
jno
rclb
loop
xor
lahf
lret
inc
ret
or
fs
lock
xchg
andl
das
jnp
add
addl
test
mov
adc
stos
jns
sbb
lret
jp
nop
lock
mov
ljmp
sbb
adc
les
or
add
push
cli
sar
push
movsb
imul
dec
xor
into
xchg
std
add
out
mov
mov
dec
add
out
and
js
jnp
in
cmp
adc
outsb
test
mov
dec
andl
adc
sar
pop
loopne
and
pusha
fidivrl
leave
cmp
ss
ljmp
stc
mov
jb
xor
imul
hlt
xchg
pushf
mov
dec
aad
je
fadds
xchg
aad
jmp
fs
and
and
sub
das
addr16
in
xchg
gs
lock
xor
mov
dec
cmpsl
push
enter
ss
pusha
daa
jg
sub
decl
sub
pop
loope
add
xor
mov
push
mov
enter
xor
cmpsb
inc
sbb
in
andb
shlb
mov
mov
out
repz
loop
hlt
cmp
mov
and
xor
sarb
mov
and
pop
subb
iret
fcmovnbe
push
repnz
mov
daa
lea
xor
popa
mov
pop
add
mov
pop
xchg
adc
pop
ds
cli
xchg
jmp
fadds
lods
xrelease
cmp
lret
es
mov
fnsave
mov
add
movsb
es
stos
sahf
xchg
lods
jl
stos
push
les
rorl
lock
into
jae
xor
imul
xor
in
or
or
lea
mov
adc
mov
jmp
fcom
push
inc
in
add
jo
ljmp
push
cmp
dec
xor
into
pop
xchg
dec
les
dec
lods
icebp
addr16
movsl
sbb
cmp
pop
inc
daa
pop
imul
out
adc
inc
lods
mov
push
lahf
rclb
jb
mov
xor
repnz
and
push
test
and
cltd
loope
xor
mov
out
xor
push
fs
es
push
setp
xchg
outsl
mov
pop
repnz
add
pusha
adc
jnp
or
ret
sub
movsb
arpl
cmpsb
test
lds
mov
push
fnstcw
add
cs
bound
js
sbb
dec
lds
setl
dec
mov
xchg
mov
push
dec
mov
and
xchg
shrb
je
insb
mov
movsb
fistpl
xchg
xchg
dec
int
in
mov
out
xor
or
inc
dec
cli
es
imul
lods
das
loopne
pop
inc
loope
push
sub
sar
pop
test
stos
sbb
das
scas
repz
cmp
test
cmpsb
aam
xor
jo
shl
arpl
aaa
and
xchg
jnp
sbb
xchg
jle
cli
pop
imul
popa
test
adc
push
stos
or
addr16
pop
pusha
push
std
aad
cltd
inc
adc
icebp
push
xchg
and
xor
sub
pop
and
iret
mov
out
sub
movsb
mov
jmp
pop
add
mov
xor
mov
pop
or
pop
lods
out
ret
xor
addb
mov
lcall
and
incb
xchg
repnz
mov
push
es
inc
roll
cmpsl
in
movsl
notb
idivl
push
add
adc
je
pop
fdivs
mov
sbb
call
xchg
sbb
bound
and
jl
push
fstp
pop
or
lea
mov
js
and
push
in
mov
mov
or
testb
int
and
adc
xchg
adcb
std
xchg
jnp
mov
add
jnp
fadds
sar
aaa
repz
mov
jb
dec
sub
jb
and
dec
mov
pop
pop
movsb
mov
push
push
ret
lods
adc
je
fildl
je
xor
mov
notb
mov
outsl
in
sbb
mov
jge
lret
getsec
xchg
inc
push
cmpsl
jbe
lea
xchg
fnstenv
dec
sbb
lock
call
test
adcl
mov
lods
xor
pop
loope
fimull
dec
mov
xchg
rolb
fwait
sbb
mov
ljmp
inc
test
sub
lret
int
push
nop
pop
cmp
daa
movsb
mov
pop
sub
cmp
sub
pop
popf
out
push
and
gs
or
jae
mov
daa
movsl
rolb
lock
or
rorb
lods
aam
incb
repz
insl
jnp
rcl
jmp
subb
pop
fidivrl
scas
sub
fcompl
je
fiaddl
outsl
cmpsb
add
xchg
mov
scas
sub
dec
push
push
sbb
movsb
stos
sub
push
cmp
mov
cmpb
imul
movl
cmpsl
ret
xchg
mov
negl
inc
sti
push
cld
push
out
cmp
sarb
arpl
int3
ret
incb
xchg
adc
cmp
mov
loope
xorb
adc
push
dec
inc
cmp
or
dec
les
pop
jecxz
xor
and
cmp
cli
or
pop
jo
inc
sub
lods
cmp
push
xchg
sub
ss
lea
sbb
fmuls
int3
add
aas
sub
adc
cmp
call
jl
loop
push
xchg
mov
adc
mov
into
push
mov
add
inc
mov
sub
mov
mov
add
cmpsl
cmp
or
lods
negb
mov
lods
nop
jb
pop
or
lcall
add
sarb
and
sub
mov
mov
insl
dec
jge
jg
lods
add
jp
pop
push
push
js
imul
test
mov
lock
imul
dec
cmp
into
push
je
scas
xor
clc
push
pop
or
jecxz
cs
jg
loope
sbb
dec
bound
fiaddl
or
jbe
ret
push
sbb
push
dec
divb
test
lock
test
pop
iret
filds
adc
pop
stos
pop
mov
inc
pop
cli
int
decl
adc
ss
std
mov
or
lods
mov
lock
aas
jp
mov
pushf
popa
mov
jecxz
imul
or
cld
cld
adc
jb
or
dec
call
mov
mov
jle
les
fildll
mov
leave
or
aad
pusha
sub
adc
mov
adc
push
ljmp
repnz
in
adc
je
out
movsb
mov
mov
lods
cmp
push
mov
push
mov
in
cmp
mov
movsl
fidivl
lods
std
jle
and
mov
test
adc
les
dec
mov
and
add
and
mov
es
sbb
lods
adc
dec
and
xchg
inc
pushf
jecxz
fsts
test
push
in
dec
dec
push
jnp
dec
int
test
test
dec
in
jle
pop
jl
ljmp
call
mov
js
mov
fnclex
lea
dec
ljmp
and
scas
mov
jbe
inc
push
dec
mull
nop
pop
insb
ficomps
mov
mov
xlat
sbbb
xchg
addr16
imul
xor
inc
mov
mull
inc
pop
inc
jae
jo
sbb
mov
jne
push
jnp
adc
lahf
push
dec
in
test
int
pop
mov
stos
lea
push
jecxz
aaa
xchg
jmp
xchg
push
mov
ss
mov
cmp
cmc
lds
pop
ret
nop
xchg
dec
xchg
jecxz
ret
xor
ja
xchg
out
and
stos
ja
lock
cwtl
pushl
xchg
movups
call
pop
xchg
popf
jnp
and
jg
test
mov
arpl
orl
stos
sbbl
jnp
and
outsl
insb
and
mov
lods
insb
aad
sti
es
and
scas
adc
or
xchg
jb
mov
push
cs
addr16
ret
das
inc
xor
mov
in
and
rorb
xor
add
pop
adc
daa
mov
icebp
mov
dec
sub
cli
jge
mov
pop
and
sti
jae
lds
out
dec
sbb
sbbl
mov
int
lds
aaa
mov
cmc
xchg
xor
cmp
shrb
shlb
orb
add
bnd
out
popa
int3
sbb
out
mov
cmpsl
pushw
mov
cmpsl
stos
mov
dec
stc
test
push
dec
inc
cwtl
data16
mov
inc
xchg
sbbb
adc
jle
jp
or
adc
sub
outsl
jle
aad
shlb
negb
fdivrl
pop
icebp
es
or
add
fcoml
add
adc
jbe
jnp
jno
push
fwait
lea
nop
mov
mov
lds
lret
mov
je
mov
out
xchg
adc
fwait
jne
notl
in
adc
negl
cmc
out
stos
mov
cmp
fiadds
mov
outsl
inc
popf
xor
out
fists
pop
rorb
pop
pop
mov
cld
subb
jle
popa
pop
xchg
leave
or
xchg
jmp
mov
popa
and
or
mov
xchg
mov
popf
push
xor
add
add
mov
jae
mov
lock
lcall
pop
mov
push
lock
cmp
dec
xor
repz
aad
fmul
out
sar
ljmp
sbb
push
aas
sbb
xchg
xchg
and
mov
sti
aad
bound
mov
add
shll
lahf
cmp
dec
push
inc
std
cmpsl
rcrb
or
sbb
xor
je
push
dec
sub
stos
test
xchg
push
adc
xor
push
lret
mov
stos
lcall
mov
dec
pop
fadds
xor
xor
ss
inc
xor
cld
cmpsl
mov
jmp
cmp
pop
push
xchg
push
int3
jp
pop
nop
push
out
adc
xchg
jle
pop
xchg
or
push
add
sub
pop
xor
and
lea
nop
iret
ret
jnp
jl
test
insb
ret
lods
aas
sbb
movsb
xchg
out
int3
xlat
add
xor
negb
movsl
inc
arpl
in
push
subl
int3
xchg
mov
lods
ds
xchg
shrb
sbb
leave
lods
cmp
or
xor
push
cld
xor
xor
lret
jle
test
sub
inc
dec
dec
jp
mov
or
push
ljmp
xlat
loop
xor
les
dec
cmp
push
std
in
sbb
jp
cltd
imul
pop
jle
sar
movsl
and
jb
xchg
pop
sub
cli
mov
insl
mov
jbe
stos
iret
orb
pop
stos
mov
jb
mov
mov
leave
cld
push
xchg
xor
mov
rcll
movntq
lcall
int
fmuls
adc
push
shr
aas
inc
and
fistl
mov
push
add
sub
subb
aas
jmp
fcoml
mov
xor
mov
inc
popa
call
sub
cmp
add
pop
out
stos
sub
jbe
adc
rorb
cmp
xchg
inc
pop
lret
fstpl
insb
xchg
lds
or
xorb
nop
stos
pop
jl
xchg
dec
push
daa
inc
mov
and
inc
addr16
xchg
cltd
and
xchg
xor
jno
stos
std
xlat
cmp
xchg
call
inc
sahf
push
mov
jne
pushf
outsb
cmpb
mov
imul
jl
mov
xor
into
insb
mov
cs
imul
stos
jo
push
int
out
rcrb
or
out
insb
fdiv
pop
lret
rcrb
daa
mov
pop
jo
pusha
in
pusha
inc
jp
mov
stos
xorb
jo
int
sub
cmpsb
lods
push
jno
js
mov
jnp
arpl
pop
popf
sarl
xor
push
mov
fldcw
mov
mov
int
out
into
in
jmp
int
outsl
and
sub
xlat
shlb
pushf
jae
sbb
pop
test
mov
fisttps
xor
lea
cmpsl
and
inc
or
insb
lret
jo
outsb
cmc
lahf
sti
mov
dec
and
jns
push
lahf
shrb
cli
in
jmp
lahf
imul
push
mov
rcrl
das
clc
dec
nop
jle
add
movsb
jb
adc
bound
adcl
mov
icebp
jmp
sbb
adc
hlt
lret
xor
cli
mov
fs
jae
arpl
mov
xor
rcrb
dec
jne
xchg
add
jbe
push
dec
jmp
and
jle
loopne
bound
enter
cmp
jnp
nop
mov
pop
mov
cli
fdivl
jp
mov
adc
sub
dec
aad
lea
ret
ret
inc
pushf
inc
insb
std
in
test
or
fisubs
push
mov
test
sti
addr16
xlat
std
sbb
cmpsl
aam
mov
lea
jbe
mov
scas
in
out
dec
xchg
mov
fwait
cltd
loope
nop
pop
and
add
ja
test
fildll
mov
xor
cmp
and
cmp
fwait
lret
push
pop
aas
outsl
stc
test
push
pop
mov
int3
sub
jl
lock
jg
cmpsl
jo
cmc
scas
cmp
leave
adc
mov
or
addr16
adc
dec
mov
push
inc
sti
fwait
ret
xchg
push
sbb
pop
add
fcomi
mov
jb
add
push
add
inc
lret
sub
pop
inc
dec
add
sub
mov
lock
mov
jecxz
pop
inc
pop
stc
mov
and
push
test
xchg
neg
mov
adc
push
mov
das
push
stos
lahf
jge
notb
jo
int
sbb
nop
sub
push
ja
aaa
outsl
and
insl
test
xchg
xor
lret
daa
stos
call
gs
bnd
fnsave
inc
ficompl
shll
pop
std
and
notl
adc
inc
and
pop
mov
dec
sub
xchg
inc
fcom
pop
ds
test
adc
psllw
mov
dec
dec
adc
lret
lods
push
mov
mov
iret
dec
jle
jge
pop
mov
sub
mov
test
movsb
subb
jo
mov
int3
pop
lea
sbb
pop
add
mov
ja
fists
xchg
mov
push
lcall
dec
add
aas
pusha
or
dec
lock
push
or
add
cltd
mov
fcompl
lds
mov
add
dec
out
loope
push
jno
cmp
or
je
pop
cs
sbbl
or
shlb
in
push
push
sbb
adcb
loope
and
inc
sar
lcall
push
pop
stc
inc
sahf
sbb
mov
jb
cld
or
hlt
jecxz
dec
push
fcompl
inc
add
jle
into
in
jl
es
mov
aaa
andb
pushf
into
clc
jnp
xor
jns
ss
pushf
pop
lahf
std
cld
dec
sbb
shlb
sub
inc
repnz
xchg
sub
inc
pop
arpl
mov
cmpsb
mov
mov
jo
fldcw
mov
pop
cmp
test
jmp
sbb
repnz
mov
into
xchg
add
stos
test
xabort
clc
dec
loop
cld
inc
sbb
inc
dec
fistl
xor
ret
mov
lods
push
cmp
inc
lods
ud0
mov
daa
or
push
idivl
or
out
xchg
cmp
jmp
jg
ljmp
addr16
xor
and
int3
in
cs
imul
and
inc
addr16
inc
dec
fmulp
pop
jmp
in
fwait
mov
and
sahf
out
or
movsl
xchg
not
aam
lea
or
inc
cli
dec
das
in
mov
ret
addb
cs
popf
sub
ja
aad
outsb
aad
jl
outsl
mov
adc
adc
inc
jno
xchg
add
out
inc
jge
jl
cmp
xor
sub
jg
cltd
xchg
fstpt
inc
outsl
aas
js
mov
nop
sub
insl
mov
jge
push
or
insb
push
mov
sahf
mov
rolb
fisubrs
mov
shlb
rolb
syscall
fwait
sarb
ss
ljmp
icebp
sub
jmp
or
push
enter
mov
inc
dec
sarl
sbb
nop
in
adc
push
mov
inc
sub
push
popa
jae
jle
fs
mov
movsl
in
rcrl
lock
push
or
stos
inc
popf
lret
repnz
shlb
gs
and
out
jo
mov
adc
mov
daa
movsb
into
jp
dec
cmpsb
fcoml
add
dec
pop
cwtl
test
fdivs
movsb
cwtl
cwtl
inc
cmp
push
add
add
sbb
xor
shlb
inc
pop
adc
inc
cmp
insb
sti
dec
pusha
lret
gs
stc
add
adc
fs
loope
xchg
pusha
cs
imul
fs
push
mov
es
insb
pop
dec
mov
cmc
or
cwtl
in
pop
fildll
adc
fisttps
dec
mov
les
xchg
aaa
or
fidivs
out
scas
xchg
mov
pop
push
jns
or
sarl
adc
enter
cmp
mov
sarb
fisttpl
xchg
dec
xor
xchg
shll
sbb
push
test
mov
push
mov
cmp
push
testb
scas
and
sub
mov
aam
sbb
dec
pop
es
sbb
cmp
cmc
movsb
add
aam
popl
or
mov
lods
sbb
ja
outsl
xchg
lcall
xchg
pushf
nop
in
popa
shll
add
or
fs
popf
and
xchg
loop
xor
mov
into
cmpsb
and
jge
aam
testb
dec
ret
or
xor
jne
repnz
xchg
push
cmp
xor
movsl
addr16
push
arpl
adc
pop
cld
mov
mov
or
mov
addr16
stos
dec
ss
and
cmp
xor
mov
cmp
int
clc
into
loopne
ljmp
mov
add
lods
or
xchg
cmc
inc
add
movsl
dec
adc
imul
xchg
test
dec
pop
push
push
loope
push
xchg
fsubr
fnstenv
jne
lcall
call
and
cltd
fidivl
pop
and
xchg
imul
pusha
or
sti
ret
ret
ja
sbb
pop
xor
out
hlt
movsb
popa
inc
scas
ljmp
mov
loope
insl
lock
inc
cmc
fdiv
jno
outsb
mov
lea
lods
add
or
ret
neg
and
loop
mov
aam
add
push
lds
fwait
add
sti
mov
outsl
xchg
fiaddl
in
cmp
sbb
mov
call
mov
out
ss
mov
jecxz
mov
xor
push
push
mov
mov
dec
xchg
insb
js
cmp
and
sub
adc
insb
dec
pop
cmpl
pusha
add
pop
jo
mov
movsb
or
jp
xorb
adc
push
jecxz
sbb
data16
repz
ret
stos
and
lret
repnz
iret
jns
fldcw
scas
aas
andl
ret
mov
iret
mov
lock
aad
jecxz
mov
sub
fs
leave
cmpsb
cmpsb
inc
lcall
shll
ljmp
and
adc
cltd
call
std
cltd
loopne
pusha
jle
xor
xchg
dec
jge
adc
push
ljmp
rorl
imul
sbb
loop
lahf
push
add
mov
movsb
mov
cmp
add
sahf
mov
push
cmp
push
imul
clc
into
ja
arpl
push
adc
je
pop
or
mov
popf
push
nop
sub
rolb
mov
push
addr16
dec
adc
out
adc
pop
sbb
sysret
cmp
aaa
loopne
jge
inc
daa
lods
aad
stc
clts
in
jge
leave
push
cmp
xchg
or
orb
add
call
fisubrl
mov
xor
pushf
cmpsb
test
je
pop
insb
ja
fisubs
mov
jo
movsb
add
push
mov
insb
cmc
xor
mov
rorb
and
dec
orb
xchg
ret
je
and
aaa
or
adc
add
jae
sbb
cld
sub
xchg
mov
mov
or
jbe
fmull
push
movsb
xchg
pop
jns
xor
xchg
popa
or
orl
popf
add
or
flds
popa
pop
adc
mov
or
aaa
cmpsb
into
test
push
fldt
es
and
mov
test
push
jo
fmuls
outsb
xor
xor
je
jg
push
jg
mov
pop
adc
push
push
aad
xchg
insl
stos
aas
push
inc
sbb
xor
sbb
cltd
mov
adc
shl
pop
adc
push
ret
push
sti
testl
cs
cs
in
sti
lods
out
mov
dec
lods
aam
pop
je
inc
sub
mov
in
test
fadd
adc
test
dec
mov
jle
dec
movsl
addl
les
orb
sar
sbb
mov
enter
cmpl
adc
out
cmp
push
movsl
add
pop
cmp
xor
lds
xchg
inc
fstl
cld
aam
pop
sub
aaa
mov
lds
popf
mov
xchg
lea
xchg
jo
stos
mov
cmc
or
cmp
lret
iret
sbb
or
shlb
scas
sub
scas
lret
dec
incb
dec
test
int
popa
fmul
dec
pop
add
push
mov
loope
cmp
sub
stos
pop
jmp
sbbb
mov
push
lea
in
test
xor
push
dec
pop
cmpsl
aam
inc
adc
add
push
sub
xchg
gs
fistps
stc
jae
and
dec
cmp
cwtl
sub
jmp
rorb
ja
std
jecxz
push
push
mov
sbb
adc
lret
cmpsl
das
xor
pusha
lea
incb
dec
push
ja
int3
and
popf
jle
inc
mov
cmpsl
mov
daa
movsb
fisttpll
icebp
sbb
in
xchg
fisttpl
mov
into
jae
jmp
cmp
arpl
cmovs
lcall
pop
push
cmp
adc
or
jne
sub
shrb
addr16
mov
jno
fsubrs
mull
sub
adc
inc
mov
sti
ja
push
xchg
cmp
out
and
das
add
or
fwait
dec
cmp
icebp
jno
jb
les
pop
adc
andb
sbb
in
cld
sbb
cmp
or
sbb
sbb
inc
mov
stos
outsb
dec
shrb
je
push
cmp
in
daa
je
mov
js
into
xor
mov
sbb
jb
dec
outsb
dec
cltd
pop
addr16
cwtl
mov
dec
les
cmp
dec
lea
xor
push
sbb
jns
cmp
insb
movsb
aam
loope
das
xchg
call
push
sbbb
ljmp
adc
fistpl
repz
mov
xchg
push
inc
or
sahf
out
xchg
xchg
push
ja
inc
hlt
mov
std
fnstsw
clc
push
aam
lret
pop
jne
pop
les
push
xchg
jge
mov
pop
sub
inc
inc
int3
xor
add
mov
insl
mov
mov
add
xchg
in
in
fnstenv
xchg
fs
sub
mov
mov
into
mov
test
xchg
adc
movsb
insl
scas
jmp
insb
push
xor
add
add
mov
cmc
push
stos
mov
mov
dec
or
cmp
jge
cmp
jno
insl
mov
xchg
push
or
mov
jns
fwait
or
mov
mov
xchg
push
int3
push
sbb
data16
dec
ss
add
sbb
push
iret
cmpsb
pop
lock
sub
push
mov
hlt
jle
sbb
xor
mov
mov
movl
pushf
xchg
add
popl
push
dec
out
testl
push
out
push
sub
fistps
test
mov
and
lea
mov
aad
mov
mov
addl
insb
or
int3
pushf
pop
adc
add
aaa
stos
test
sbb
and
xchg
into
es
dec
cli
jle
dec
insl
out
lret
or
lretw
daa
popa
mov
out
arpl
stos
push
xchg
and
mov
dec
push
fidivrl
xchg
loopne
inc
cs
push
cmp
jns
jno
cmpsl
pusha
mov
or
std
orb
add
cmp
clc
dec
mov
aad
sbb
sbb
pop
out
js
je
pop
mov
xchg
rorl
sub
or
dec
mov
push
adc
adcb
adc
jo
xor
sbb
sub
das
dec
gs
and
xorl
adc
cmp
xchg
xor
lret
or
cwtl
repnz
and
xor
jecxz
sti
mov
push
cmp
sub
lods
and
pop
adc
cmp
xlat
popa
adc
pop
daa
sub
push
loope
push
lret
mov
call
mov
add
jb
movsl
mov
mov
mov
enter
loope
nop
fldenv
dec
ja
add
pop
xor
outsb
cmc
and
xor
sbbl
xor
cs
mov
add
sbb
pop
dec
shlb
pop
jo
dec
out
cmpsb
and
movsb
cwtl
push
mov
adc
je
jnp
mov
or
je
xchg
iret
stos
psllq
scas
outsl
jb
xchg
dec
push
mov
adc
sarl
inc
popf
jge
push
test
add
cmp
cmp
inc
in
xor
xchg
jmp
pop
push
jne
jnp
push
pusha
sbb
js
stc
jns
jle
lcall
addr16
dec
mov
dec
repnz
imul
push
ljmp
push
int
push
jb
jmp
ds
insb
lock
addb
cwtl
jnp
mov
rorb
lret
fnstsw
out
mov
add
dec
cltd
ret
mov
or
push
bound
sbb
sahf
mov
xor
pop
or
jl
cmp
dec
pop
pop
pop
mov
scas
or
dec
in
aas
jnp
cmpl
or
push
dec
dec
test
popa
imul
jae
out
dec
jb
in
fiaddl
in
dec
lock
inc
inc
sbb
push
stos
pop
hlt
ja
ja
cmp
shll
sub
mulb
adc
test
mov
mov
or
or
stc
sbb
jae
mov
cwtl
cmp
rorl
arpl
test
sbb
dec
cmp
sub
push
addr16
fwait
pop
mov
push
lret
or
jecxz
mov
adc
xor
sbb
xchg
popw
push
test
imulb
sbb
sbb
jge
push
inc
cmp
mov
and
pop
sbb
out
sub
and
repz
inc
aas
ret
addr16
inc
and
xlat
sbb
or
sub
jl
enter
daa
pop
xchg
mov
add
jb
and
xor
cwtl
setl
outsl
mov
ja,pn
jle
movsl
mov
adc
add
pop
dec
jmp
in
add
out
fmul
std
in
xor
and
xlat
xor
scas
insb
mov
cli
xchg
cli
fldcw
mov
fldcw
push
cmp
movsb
ljmp
jmp
inc
lcall
leave
cld
adc
xchg
dec
adc
fsubl
sti
cmp
xor
lcall
cmpb
imul
mov
mov
mov
roll
cld
jae
sbb
aas
addr16
ljmp
mov
mov
jnp
ret
sub
repz
push
iret
pop
cmp
ds
jnp
je
arpl
div
jb
sbb
mov
sub
jg
rcrb
sbb
push
or
dec
xchg
pop
aad
and
sub
jb
out
xchg
test
pop
push
aam
mov
cmc
iret
inc
mov
xor
push
push
pop
adc
pop
push
lods
inc
sub
add
mov
into
xchg
leave
imul
in
jo
inc
sub
jb
jno
nop
mov
xchg
push
int
sbb
adc
lahf
outsb
inc
mov
lock
or
insl
and
popa
int
ja
mov
adc
xor
push
in
mul
xchg
lock
bound
lea
scas
ja
xchg
dec
lahf
aas
xchg
sub
repnz
push
adc
xor
inc
xor
mov
movlps
sti
das
pop
loop
popa
cltd
or
nop
pop
xchg
daa
movsl
push
stos
and
int3
int3
jmp
fbstp
test
push
sbb
out
ds
xchg
cli
xchg
daa
out
mov
and
inc
ret
shll
fcomps
sub
pushf
popa
dec
jg
in
and
sub
loopne
es
push
imul
pop
add
xchg
jg
stc
push
mov
cli
hlt
shr
mov
adc
jno
stos
ljmp
data16
sub
sbb
adc
in
sti
or
lret
mov
gs
mov
push
fsubs
xor
mov
in
jb
push
mov
mov
icebp
and
pushf
pop
or
adc
mov
std
ret
fwait
xchg
popf
int
test
xchg
addr16
out
pushl
add
mov
mov
jge
call
test
cli
out
fadds
bound
pop
inc
cmp
push
pop
rcl
pop
and
xor
push
rclb
inc
lret
sub
jnp
subb
dec
addl
xor
lret
or
xchg
mov
movsb
mov
rcrb
mov
scas
shll
subl
adc
mov
jp
inc
mov
dec
jg
ficoms
xchg
in
sti
insl
fnsave
push
pop
add
shl
xchg
jle
outsb
mov
add
and
xchg
mov
jbe
clc
jae
cmp
scas
lcall
in
xchg
loope
hlt
xchg
fwait
iret
lcall
jae
bound
cmp
or
les
adc
decl
in
sub
mov
ljmp
fisubrs
fs
and
inc
mov
test
ror
repnz
shl
popa
fdivrl
pop
idivl
push
pop
mov
inc
call
push
dec
sti
jg
jae
xchg
out
dec
adc
aas
xor
insb
sub
cmp
cmpl
xor
shll
mov
dec
push
out
mov
add
sbb
xchg
fsubl
jle
in
loop
pop
inc
sub
jl
jae,pn
mov
stc
mov
pop
jle
sti
jle
cmp
mov
je
out
adc
inc
mov
inc
push
push
jmp
ret
mov
mov
sub
clc
push
add
cld
scas
imul
popf
fisubrl
dec
xchg
sti
aam
mov
lds
dec
inc
cld
xlat
nop
nop
mov
stos
mov
xor
or
out
xchg
cmp
cwtl
sbb
lahf
sub
fadd
test
mov
and
aad
add
lret
sbb
lahf
addr16
lds
cmp
mov
and
out
lcall
leave
push
push
xchg
sbb
push
pop
rcr
sarl
push
mov
shll
ret
es
cmp
cli
push
ret
ja
sbb
jge
push
ljmp
cmp
inc
loopne
xorb
call
out
or
xchg
sub
repz
loope
movsb
outsb
adc
iret
outsb
sbb
or
mov
lcall
lret
cmp
mov
addl
scas
cmp
bswap
testl
adc
cwtl
inc
mov
push
stos
mov
jmp
cmpsl
jge
or
nop
cs
pop
mov
cmpsb
int
jb
sub
dec
push
or
mov
into
adc
xchg
mov
xchg
inc
xor
add
add
xchg
mov
imul
xchg
lock
aam
ja
xor
cmp
mov
pop
mov
aaa
pop
xchg
repnz
mov
dec
scas
add
sahf
call
or
push
adc
jge
adc
cmp
inc
pop
ficoml
sti
add
pop
imul
mov
in
fidivrs
ja
inc
cmp
fistpl
push
add
cwtl
jo
inc
lahf
ss
pop
add
xor
aad
cmp
repz
scas
jns
and
fdivl
fadd
pop
pushf
mov
cmp
bound
xor
pop
and
hlt
popa
ja
lcall
cwtl
loopne
rcr
cmp
mov
mov
jmp
ss
mov
xchg
mov
pop
inc
push
add
in
mov
aam
push
imul
lock
adc
stos
cmc
mov
rcrl
sub
mov
inc
shlb
test
ss
adc
clc
push
xor
icebp
xor
fcomps
inc
pop
xor
mov
inc
dec
ds
xor
mov
pushf
outsl
cmp
loopne
and
and
cmp
std
and
push
movsb
xlat
push
cs
xchg
jmp
push
xchg
mov
and
rorl
sbb
adc
pop
xor
push
xchg
stos
push
adc
cs
or
inc
xchg
pop
pop
or
push
cld
out
dec
jb
incl
xchg
stc
cs
jnp
arpl
cmp
arpl
jl
pop
mov
xor
aad
push
jne
cmpsl
movsb
imul
sahf
clc
cmpb
aad
or
push
sbbb
outsb
aas
sub
ja
dec
mov
xor
fcmovnbe
scas
sub
pusha
fwait
cmpsl
int
and
imul
aad
inc
mov
push
dec
mov
add
and
adc
stos
outsl
repnz
and
inc
scas
push
lahf
mov
or
dec
sub
jbe
cmp
fldenv
test
xchg
out
orl
jnp
mov
add
int
stos
into
push
add
adc
ss
fidivl
xchg
pushl
pop
ret
aad
arpl
pusha
push
scas
mov
dec
hlt
int3
push
mov
clc
pop
vmulps
sbb
xchg
dec
jae
test
mov
ljmp
and
xchg
mov
movsl
fistpl
test
test
stc
and
xor
mov
daa
jmp
lahf
mov
imul
push
and
repz
je
xchg
pop
orb
imul
lahf
fdivp
and
out
stos
sub
inc
pop
jne
leave
aas
fmul
into
mov
out
stos
jge
cmpsb
sbbl
in
fsubrl
bound
outsl
sub
stos
sbb
inc
ficoms
ret
insl
cmpsb
or
adc
cmc
sub
push
inc
pop
xor
push
or
push
lahf
pop
pop
lods
test
jmp
or
or
fnstenv
in
bswap
pop
test
inc
lret
xchg
test
push
cmpb
sbb
out
pop
and
push
mov
mov
and
in
sub
scas
nop
add
das
into
cmp
mov
cmc
sahf
pop
adc
inc
loopne
out
shl
mov
sub
jecxz
inc
fwait
iret
idivl
mov
adc
inc
push
or
push
mov
mov
loopne
add
fildll
sub
sti
les
decl
xchg
imul
jle
out
dec
adc
cli
mov
dec
dec
sub
outsb
pop
xor
sub
adc
mov
pop
cmp
sub
imul
movsl
xchg
push
inc
movsl
ret
add
lret
push
inc
push
sub
cmp
cmpsb
push
jbe
fcomip
repz
in
mov
adc
pop
adc
call
stos
xchg
dec
jo
jae
mov
fdivs
push
ret
dec
test
and
ja
cmp
pushf
dec
adc
push
mov
in
lret
lock
pop
lcall
movsl
dec
in
mov
dec
aas
es
jecxz
jecxz
stos
clc
fistps
lock
mov
pop
pop
push
dec
loop
std
xor
sbb
pop
pminub
jo
cmpsl
mov
repz
mov
xchg
int
test
fsubs
insw
pop
mov
push
sub
inc
in
push
xlat
cmp
jnp
cmp
and
addb
fs
push
adc
ljmp
mov
sbb
fldl
sbb
inc
jns
inc
and
or
xor
clc
xor
or
xchg
inc
scas
ja
sub
lea
bound
sbb
sbb
outsb
jle
lcall
mov
and
imul
imul
popf
push
mov
and
int
sar
into
cmp
aaa
addb
adc
cli
fsts
repz
push
out
fmulp
inc
gs
fsubrs
lock
loop
mov
mov
stc
test
aaa
pop
push
loopne
push
int3
cmp
test
cmpsl
or
js
sbb
mov
cs
jae
fwait
pop
sarb
clc
xchg
lods
shlb
clc
mov
dec
mov
jmp
dec
xchg
xor
ja
ficompl
xchg
mov
add
sub
out
int3
mov
mov
mov
sbb
push
mov
or
xor
and
xor
lret
out
das
pop
push
dec
mov
mov
jno
jmp
sub
push
arpl
jbe
mov
xchg
mov
movsl
push
mov
jnp
jno
and
imul
into
fistps
push
jb
ficoms
pushf
push
cli
push
jge
or
and
inc
mov
outsb
sbb
std
call
xchg
imul
fistps
pop
cmp
sahf
cmc
rorb
and
pushf
jns
mov
inc
mov
jae
lahf
cmp
js
mov
sub
adc
into
fdivrl
mov
sbb
popa
push
mov
or
add
int3
pop
add
and
dec
push
mov
dec
mov
inc
push
sub
jge
outsl
loope
test
xor
pushf
and
sbb
outsb
into
add
cmp
dec
xchg
push
mov
lret
out
cmp
mov
add
dec
leave
xor
and
stc
mov
add
notl
dec
cmc
mov
mov
std
cld
xchg
sub
aaa
arpl
inc
pop
push
leave
xchg
jbe
je
inc
sbb
pop
and
in
and
pushf
dec
sbb
mov
insb
mov
or
adc
sar
cmpsb
test
addb
mov
arpl
cmp
xor
adc
int3
loopne
call
inc
pop
mov
out
mov
mov
inc
sbb
mov
mov
jle
and
or
dec
push
psrlq
sti
adc
vpminsw
ficomps
cltd
in
loopne
je
xorl
int
pop
jo
sbb
sub
push
loope
inc
cmp
inc
enter
pushf
push
pop
xchg
adcl
notl
push
imul
faddl
push
lods
cltd
int
fwait
scas
xor
loopne
mov
mov
mov
push
push
push
inc
add
mov
mov
and
mov
test
mov
in
jle
mov
mov
mov
push
les
popa
lret
dec
push
sti
sub
dec
xchg
mov
push
or
ret
not
sbb
mov
or
shr
pand
cld
insb
xor
mov
and
scas
test
xchg
sbb
sbb
lods
jcxz
stos
xlat
loope
iret
aaa
loop
scas
xor
sbb
lret
xchg
pop
pop
lods
addb
push
mov
mov
movsl
mov
in
enter
int3
jmp
clc
iret
in
adc
je
sbb
std
fs
fildl
push
jg
xlat
inc
mov
dec
sarl
sbb
mov
mov
cs
mov
xor
cmp
out
xor
mov
jg
and
mov
push
sbb
mov
cmp
leave
inc
pop
push
inc
jns
mov
mov
cmp
insl
scas
inc
mov
cmp
in
cmpb
cmp
jge
push
jg
cmp
cltd
push
cmc
cmpsl
or
in
pop
es
pop
cmp
out
add
adc
stos
jmp
in
xor
xchg
push
scas
jo
leave
adc
sub
mov
sub
insb
sub
iret
daa
inc
leave
stos
jle
push
push
sbbl
out
lea
scas
sbb
inc
testb
fs
jo
add
hlt
and
inc
movaps
push
jmp
and
mov
xor
sub
ja
mov
mov
les
ss
pop
or
mov
and
pop
sbb
xlat
test
sar
out
and
repz
inc
faddl
aam
cld
lret
jmp
pop
inc
dec
sahf
pushaw
rcll
insl
cmp
jns
in
pop
movsb
into
ffreep
jae
inc
push
mov
repnz
out
xor
imul
or
and
xorw
adc
ror
pop
es
xchg
test
inc
xor
decl
xor
leave
data16
sahf
stos
mov
adc
sbb
loopne
jle
leave
xchg
mov
sti
mov
pop
into
les
movb
cmc
pop
in
mov
xchg
int
mov
outsl
pop
in
dec
and
mov
pop
mov
fadds
pop
push
cltd
sbb
dec
dec
dec
sub
stos
aam
mov
inc
sub
test
xor
frstor
dec
jecxz
es
sub
addl
jne
jl
xor
popa
cmpsb
dec
mov
sti
jmp
lret
mov
sub
pop
xor
and
movsl
push
pop
cmovno
jmp
dec
xor
std
sahf
cmpsb
xchg
out
jbe
add
fs
pop
test
sub
add
aam
stos
bnd
xchg
fadd
jle
fbld
lods
sub
fimull
negb
repz
add
das
pop
adc
enter
andl
jb
ror
mov
cmc
and
lods
push
aad
lock
aam
gs
push
cmpsb
sbb
xor
fbstp
test
andb
adc
test
mov
es
je
cmp
popa
sub
pop
xchg
mov
fwait
xchg
add
jnp
in
mov
ret
lcall
xor
aaa
std
and
ret
in
pusha
imul
repz
adc
je
das
or
mov
cmp
scas
je
rcll
xor
popa
lret
add
mov
sub
cmp
dec
push
dec
ds
lock
pop
sbb
pop
mov
dec
adc
mov
bnd
push
mov
sahf
shl
xor
pop
xlat
in
js
imul
out
test
xor
nop
pop
cltd
sahf
push
dec
pusha
xor
dec
dec
mov
and
ljmp
or
ret
adc
xchg
adcb
call
lret
pop
cmp
push
sub
enter
call
xchg
jns
mov
out
pushf
jnp
and
popa
hlt
or
stos
xchg
mov
inc
pop
inc
add
inc
or
stos
ret
outsb
sbb
in
mov
imul
ret
popf
mov
mov
stos
lcall
push
push
push
rclb
dec
lret
inc
and
imul
mov
cmp
push
popl
jo
jbe
dec
add
fs
imul
stos
inc
inc
push
sub
in
cwtl
scas
adc
inc
add
fwait
and
mov
push
lock
push
loope
jge
cmc
cmpl
sbb
lcall
mov
insl
mov
sbb
ss
out
rolb
int
scas
jp
cmp
xor
addr16
in
divb
pop
or
mov
mov
jecxz
outsl
jmp
cmp
xor
fildl
jne
out
mov
add
push
mov
stos
inc
push
or
jbe
rcrb
dec
cltd
mov
xor
cmpb
fwait
mov
pop
inc
popa
shll
cmpsb
aad
es
shrb
hlt
adc
les
sbb
dec
ss
fmuls
aaa
sub
ror
mov
inc
inc
inc
mov
icebp
int
sbb
xor
or
add
iret
adc
or
cmp
repz
jns
lods
dec
les
push
xor
jns
mov
mov
aas
jecxz
test
mov
adc
adc
cmpsl
adc
cs
rolb
hlt
mov
jne
cmp
pop
pop
jno
andb
xchg
push
mov
and
test
out
mov
mov
jno
push
decl
xchg
stos
sub
dec
addr16
lods
jb
outsb
pop
add
je
xchg
xchg
jo
nop
dec
and
ret
and
in
andl
stos
inc
fisubs
imul
and
out
add
mov
adc
mov
insl
adc
sti
fs
ja
int3
xor
lds
or
pop
pop
cld
jae
mov
xchg
or
fsubp
sbb
mov
cmp
aad
fadds
clc
add
jmp
sub
xchg
push
in
pop
sbb
xchg
jmp
rorb
lea
xlat
mov
orps
cmp
dec
xchg
xorb
pop
inc
mov
and
cmp
cmp
mov
out
fstps
testb
data16
pop
push
pop
cmc
arpl
jnp
jge
popf
mov
ret
enter
idivb
jle
psllw
jne
lds
sub
sarl
loope
test
xor
pop
and
lods
push
mov
insb
jg
cmp
pop
adc
cld
repnz
push
sub
outsl
mov
xchg
out
push
cltd
sub
cmp
dec
movsl
or
mov
es
cmp
or
sbb
sub
fstpl
out
pop
in
lea
xor
filds
cli
loopne
imul
inc
jbe
pop
jecxz
clc
outsb
clc
test
lods
pushf
mov
mov
mov
dec
lret
inc
scas
pop
mov
imul
push
gs
push
inc
sub
xchg
mov
jne
pop
in
dec
fwait
sbb
xor
mov
jle
dec
aaa
cmpsl
pushf
imul
stos
lods
lods
inc
push
cmp
push
hlt
fiadds
in
push
cmc
cmp
sbb
push
cmp
mov
mov
loope
cli
sbb
movsl
adc
out
xchg
add
mov
stos
jge
int
sbb
xchg
inc
leave
fwait
inc
es
adc
dec
pop
shl
jo
ljmp
and
into
jb
sarl
mov
sub
pop
out
sbb
xchg
loope
outsb
sbb
arpl
adc
rcl
xlat
pop
xchg
sti
push
add
imul
jp,pn
inc
jnp
stos
or
mov
dec
pop
and
jp
mov
test
jae
dec
icebp
pop
jmp
divl
in
aad
ret
or
repz
fisttpl
scas
iret
int
xchg
or
inc
push
mov
cmp
push
pop
sub
std
xchg
sub
fisttpl
xchg
sub
js
inc
cmp
cld
mov
mov
jns
push
pop
push
es
loope
sub
cmp
idiv
mov
xchg
or
inc
jp
push
jbe
popf
sub
xor
daa
lahf
dec
inc
inc
mov
mov
push
in
div
mov
ljmp
jb
negb
sub
lods
jg
xlat
pop
mov
out
mov
rclb
stc
mov
daa
out
cmp
or
push
pop
jbe
xchg
push
enter
clc
in
inc
fwait
js
mov
push
or
mov
aam
dec
mov
gs
cmp
sub
pop
xor
or
mov
and
test
sbb
mov
mov
jle
js
ret
shll
cmp
movsl
adc
pop
mov
and
js
mov
add
jo
gs
rclb
rclb
fidivs
pop
fwait
lret
mov
sbb
cmc
gs
in
fidivl
insb
mov
outsl
push
pushf
aaa
sub
fcmovnu
imul
mov
stos
insb
fwait
ljmp
lods
and
fstl
mov
xor
leave
je
push
jge
sub
in
jns
or
add
push
jo
push
ds
dec
adc
xor
sbb
enter
adcb
outsl
dec
js
xchg
push
pushf
and
jp
frstor
mov
enter
adc
daa
mov
jne
lret
xchg
push
scas
push
rorl
or
movsl
xor
rcpps
pop
inc
rcrl
jmp
fists
inc
hlt
push
xor
pushf
push
nop
into
rcrb
pop
push
insb
fdivrs
jmp
xchg
aad
imul
add
xchg
sbb
flds
out
pop
gs
inc
icebp
jle
sbb
sbb
mov
mov
pop
dec
imul
mov
cmp
mov
and
stos
dec
lock
cmp
add
mov
outsl
mov
dec
add
add
dec
sbb
mov
xor
pop
and
add
push
or
or
xor
cwtl
push
adc
pop
dec
add
push
mov
inc
pop
mov
jae
std
lret
ljmp
lahf
sbb
jbe
mov
jg
jl
sub
adc
dec
mov
inc
pop
xchg
cmp
pop
or
fs
mov
jp
pusha
mov
dec
inc
xor
mov
mov
cli
pop
mov
jnp
push
dec
out
fstl
adc
sahf
pop
sbb
cmp
cltd
imul
icebp
dec
sub
stos
pusha
in
and
push
mov
mov
call
or
aad
les
cmovle
loope
aaa
mov
sub
fscale
rorl
push
shl
icebp
mov
jecxz
adc
cmp
lahf
faddp
arpl
inc
stos
pop
xchg
mov
xor
push
aad
repnz
pushf
add
xchg
xor
sarl
add
enter
out
ds
pop
sahf
mov
xchg
dec
ljmp
fs
pop
in
ds
jo
scas
jne
loop
xor
rcl
imull
sub
lock
frstor
sub
fcoms
mov
stc
shlb
iretw
mov
add
out
dec
mov
and
jp
cmp
mov
jnp
jae
push
or
int
pop
jp
mov
pop
sub
or
in
xor
fldpi
cmc
cld
daa
data16
aaa
sahf
mov
outsl
mov
and
xchg
or
insb
xor
daa
mov
in
les
pop
sar
scas
jecxz
cmp
cmp
cmp
imul
or
imul
ss
insb
xor
dec
insl
popa
mov
inc
ss
pop
scas
xchg
pop
or
mov
in
es
lea
jmp
or
add
sub
push
and
mov
sbb
cwtl
insl
scas
xchg
add
ficoml
fsubs
jno
xchg
push
mov
jg
pusha
daa
pusha
inc
add
cmp
ret
jae
dec
xor
sbb
jb
push
xchg
stos
push
xchg
sub
adc
sbb
jnp
aam
fisubrs
fcomip
xorb
xor
push
es
aas
cltd
out
ret
cwtl
rorl
or
dec
pop
mov
mov
pop
sub
dec
inc
jmp
inc
cmp
add
inc
fists
outsb
xchg
jmp
xchg
sub
jb
lret
aas
pushf
loope
stos
jle
cmp
outsb
shlb
call
jnp
push
jbe
sub
or
rcr
je
rorl
loopne
mov
fwait
jecxz
mov
xor
adc
cld
push
in
pop
ret
nop
sti
cmpsl
ret
cmp
inc
scas
incl
loope
fs
neg
inc
daa
cmpsl
mov
imul
dec
inc
loope
subb
inc
gs
adc
cmp
or
xchg
fwait
xchg
jmp
shll
out
sbb
shlb
psrld
mov
loope
adc
sbb
insb
pop
adc
push
icebp
js
mov
xor
mull
push
outsl
xchg
int3
cmp
fwait
jecxz
add
sbb
test
inc
insl
jg
imul
aam
std
test
js
mov
aaa
cmpsb
mov
movsl
fildl
pop
pop
jb
pusha
out
dec
xor
mov
pop
mov
xor
data16
rclb
arpl
jmp
pop
cmp
lods
add
jmp
or
dec
movsb
repz
lock
pop
mov
adc
add
mov
mov
enter
sbb
int3
in
push
test
mov
nop
push
lahf
pop
test
push
loopne
repnz
icebp
dec
jl
imul
mov
out
mov
prefetcht2
dec
lret
ljmp
mov
out
shll
add
or
or
jne
and
jns
cwtl
icebp
inc
xor
mov
xchg
add
in
add
aas
sbb
movsl
pop
pusha
jno
fs
ret
mov
mov
insl
mov
mov
jmp
les
mov
fwait
adc
xorb
call
sahf
mov
int3
mov
pop
int
and
test
push
add
pop
fdiv
inc
cmp
clc
and
outsb
mov
inc
xchg
pop
sub
insb
cmc
js
or
xor
jnp
adc
dec
mov
sbb
inc
mov
cwtl
mov
mov
ret
or
aas
outsb
add
mov
dec
sti
dec
add
mov
jp,pt
and
pop
bound
pushf
mov
test
iret
shrl
dec
std
nop
xchg
fs
mov
mov
loop
aaa
stc
dec
add
test
ret
fstpl
inc
insb
mov
jge
xor
mov
push
insl
outsb
fisubrs
or
cmp
lahf
call
adc
lods
and
mov
mov
icebp
gs
clc
mov
filds
shlb
push
jb
lcall
push
xor
rcr
lods
pushf
adc
cld
jmp
jae
mov
jne
jle
iret
outsl
out
jg
jns
push
cli
cmp
iret
outsb
rcr
xor
lret
sub
mov
in
js
mov
enter
mov
lret
mov
enter
aas
outsb
and
sbb
icebp
out
lds
faddl
test
pop
inc
xchg
loop
dec
pop
loop
sub
push
push
jg
stos
fsubs
into
xchg
clc
xchg
pop
push
mov
iret
mov
std
in
es
shrb
inc
sub
scas
in
lcall
aam
adc
rorb
test
scas
js
xchg
scas
out
sbb
and
sbb
cmp
sahf
mov
pop
mov
xlat
add
fldl2e
mov
sbb
fnstsw
test
inc
cmpsb
fimuls
stos
mov
sub
pop
inc
jae
aas
xor
lods
idivl
les
cwtl
test
mov
in
adc
pop
mov
sub
push
xlat
sbb
lcall
outsl
test
das
or
adcl
insb
pop
xchg
jge
sbb
push
pop
pop
mov
jne
out
sbb
push
lock
mov
mov
sub
test
xchg
sti
fadds
mov
and
fisubrs
hlt
cmc
dec
stos
cmpsb
jnp
mov
mov
sbb
lcall
sub
xor
push
mov
mov
lret
cli
sahf
adc
test
out
cmp
mov
cmp
sub
xchg
ljmp
pop
sub
adc
mov
cltd
pop
lahf
jmp
imul
adc
sub
jno
inc
mov
sub
xor
lret
sbb
in
ljmp
repz
xlat
pop
cld
outsl
rolb
dec
jbe
push
int
icebp
mov
sti
or
mov
jne
loope
xor
rclb
push
inc
dec
pusha
push
cli
dec
ret
or
inc
xchg
mov
addb
fdivrp
xor
insb
xchg
pop
lods
cmpsl
xchg
jbe
mov
mov
aaa
sub
stos
xchg
mov
push
mov
repnz
js
movsb
imul
aam
sbb
xchg
orb
sbb
out
jno
sub
shrb
sub
mov
pop
dec
sub
es
add
sbb
clc
lods
in
out
xor
cmp
push
fisubrs
adcl
or
divb
cmpsl
dec
dec
cs
xchg
mov
out
shlb
stc
ffree
mov
push
or
sahf
movsb
sbb
fs
out
data16
inc
cwtl
fsubs
inc
lds
aad
mov
bound
cmpb
pusha
outsb
sbb
les
subb
hlt
clc
cmp
popa
mov
add
mov
and
pop
dec
int
or
mov
ljmp
fldenv
jb
sub
inc
inc
sti
in
enter
adc
sbb
xchg
ret
mov
lret
adc
mov
and
subb
cmp
inc
xor
mov
outsl
mov
sbb
and
dec
insb
sbb
push
iret
mov
cmp
adc
pop
fnsetpm(287
rol
imul
add
hlt
std
cmpsl
insl
add
sbb
dec
popf
push
or
movsb
push
mov
daa
mov
mov
mov
adc
or
fdivl
jo
push
and
xchg
out
and
cmp
add
sub
xchg
or
stos
pop
ficompl
mov
aad
cmpl
das
fisubrs
jecxz
push
ret
and
lcall
jo
or
xorl
inc
mov
cwtl
lret
and
jo
sub
or
push
out
sahf
repz
pop
out
push
push
in
xchg
fnstenv
ljmp
pop
in
movsb
into
fstpt
and
cmp
movsl
sti
mov
lods
arpl
and
mov
xchg
pop
push
fimull
loope
mov
movsb
pop
cmp
sti
pop
sub
test
xor
dec
call
mov
sti
xlat
in
add
jp
out
pop
shrl
adc
adc
dec
lods
out
pop
inc
iret
mov
punpcklbw
imul
loopne
lods
iret
pop
dec
sub
pop
std
xchg
es
mov
jl,pt
sbbl
push
stos
push
mov
dec
test
lahf
ret
fiadds
cmp
mov
repnz
orb
aad
mov
or
jno
jae
es
sub
insl
sbbl
notl
pop
mov
pop
push
inc
add
and
mov
daa
pop
imul
pop
adc
and
js
or
push
aaa
cmp
dec
daa
arpl
hlt
fldcw
fs
or
outsl
das
sbb
ss
pop
jle
je
lret
xchg
sbb
mov
lea
loope
loope
xor
adc
aad
xor
fidivrs
out
add
xchg
or
test
in
hlt
ret
xchg
push
test
mov
or
sbb
xchg
aam
and
and
mov
in
ss
fwait
js
stos
nop
lret
gs
xor
lret
xchg
enter
pusha
pop
xchg
cmp
iret
js
orl
cmpsb
xchg
xor
ja
pop
pop
cs
call
pop
mov
jmp
pop
pushl
dec
scas
fnsave
ret
shlb
repnz
dec
pop
fnsave
ss
cmp
int3
inc
loop
jb
cmpsb
stc
daa
xchg
loope
test
fwait
sbb
aaa
add
shrb
xchg
add
jge
inc
mov
sbb
loop
push
outsl
das
scas
mov
sbbb
push
sub
jl
push
ret
pop
les
std
inc
sbb
fs
lret
mov
pop
arpl
sbb
fdiv
sub
cmp
cmp
xor
or
pop
dec
jecxz
and
es
add
or
jno
cmp
or
push
lret
in
add
fisubrl
loope
pop
ds
push
fcompl
adc
out
sub
inc
push
stos
fbld
add
dec
test
mov
xchg
addb
enter
aas
arpl
idivl
adc
jl
in
loope
gs
pop
jb
icebp
andb
shll
out
sub
or
lods
stos
sbb
loope
imul
cmpsb
push
cmp
cmp
sub
mov
subb
cwtl
sub
inc
int
outsl
imul
dec
adc
inc
test
mov
out
loope
loope
jns
std
aam
sahf
push
push
xor
repnz
cmp
out
dec
xchg
divps
push
mov
stos
pop
push
repz
xor
push
sarb
shr
fstpl
dec
xor
lods
pop
aaa
cld
fs
pop
arpl
push
pop
adc
test
rcrl
cmp
pop
insl
jno
or
outsb
xlat
xchg
add
into
shrb
mov
cmpsl
fstl
xchg
divps
in
iret
jb
aam
lods
cmp
loopne
jp
push
sbb
rcrl
xor
dec
push
cld
sub
sbb
mov
mov
xor
jle
rcll
push
pop
leave
into
jge
cmc
xchg
es
in
pusha
jmp
pop
and
fmul
pop
arpl
icebp
mov
stos
sub
repz
xor
cld
or
fldt
test
dec
stos
clc
lret
stc
mov
jbe
add
shr
jae
ret
cmp
xchg
mov
jnp
lds
mov
outsl
inc
cwtl
test
adc
inc
cmp
cmp
in
push
jl
jecxz
leave
das
pop
je
and
mov
inc
xor
int3
repz
and
adc
fs
dec
or
sbb
cmp
or
test
in
jb
aas
ss
std
fnstsw
data16
aad
cmc
aad
mov
xchg
jo
cld
inc
jp
inc
push
enter
push
jg
leave
dec
dec
or
arpl
cld
insl
sbb
lods
cmp
pop
xchg
dec
or
repz
jbe
shl
mov
push
sub
add
inc
fsubr
sub
push
mov
inc
mov
sub
cmc
cmpsl
fidivrs
inc
sbb
ljmp
aad
hlt
mov
push
gs
sbb
ja
xor
pop
mov
rolb
and
xchg
inc
mov
arpl
mov
mov
insl
sarb
arpl
stc
mov
or
testl
sub
addb
xchg
movsl
in
fsubr
push
mov
or
add
inc
bound
add
mov
push
sbb
popf
xlat
pop
roll
movsl
imull
mov
pop
xchg
mov
mov
stos
lahf
mov
shrb
ror
inc
aaa
adc
hlt
cmp
sarl
loopne
cmp
adc
mov
sbbb
cltd
pop
jl
mov
pop
mov
xchg
in
loop
cwtl
xor
clc
push
jle
sub
sbb
aaa
addl
push
cmpb
cld
cltd
lock
pop
sbb
jo
inc
aam
outsl
xchg
outsl
jecxz,pt
fidivl
cmpsb
sti
cmp
jg
cltd
rcrb
cltd
fs
out
pusha
movsl
inc
mov
xor
and
jnp
repnz
push
mov
enter
sub
shrb
cmp
aam
jbe
nop
mov
sbbb
les
sahf
rcrl
aas
jl
xchg
adc
xor
add
xor
push
sbb
cmp
cmp
jbe
ss
mov
xchg
sub
xor
xchg
inc
clc
push
fsub
sbb
mov
dec
lds
adc
enter
lock
jbe
sub
pop
subb
inc
out
fimull
jno
and
sbbl
cmpsb
sbb
cmp
push
jmp
push
fwait
jmp
inc
testl
pushf
cmpsl
xor
lahf
repnz
roll
xor
cwtl
and
cmpsb
ja
in
pusha
popf
dec
loop
xchg
out
push
fnsave
stos
mov
cmp
adc
xchg
inc
icebp
add
cmc
mov
cmp
ds
movsl
jle
insl
decl
mov
aaa
in
xchg
inc
fists
cwtl
push
leave
mov
push
mov
pop
daa
mov
pop
iret
fcomps
mov
dec
repnz
addr16
ja
sbbl
dec
stos
out
push
lret
test
push
aam
jge
mov
mov
sbb
xor
cmc
mov
in
xchg
out
clc
mov
enter
daa
pop
out
test
call
cmp
mov
fistps
fs
int
cmp
adc
std
rclb
and
lcall
icebp
jns
test
addr16
inc
jg
jo
sub
test
ja
imul
popf
dec
jg
pop
inc
shlb
push
sbb
or
gs
mov
out
sub
dec
cltd
data16
in
inc
rcrb
cmp
sub
add
xchg
popf
sbb
xchg
ret
ficomps
popf
jne
mov
inc
mov
pop
push
mov
icebp
sub
push
sub
mov
cs
loope
outsb
frstor
xchg
mov
dec
stos
scas
sbb
jmp
out
sub
stos
getsec
mov
dec
push
mov
js
das
insl
mov
into
xchg
jecxz
leave
cmc
lods
popf
or
sti
dec
xchg
rcr
mov
mov
les
mov
outsl
into
test
ds
push
or
mov
sbb
jg
in
test
in
int
imul
fcmovne
stc
cli
nop
out
pop
add
aad
or
or
pop
and
xor
dec
sbb
mov
test
ror
in
js
dec
xor
leave
dec
inc
pop
mov
xchg
das
outsl
dec
in
inc
mov
mov
scas
fdiv
inc
push
add
mov
cmpsl
and
fnstsw
xchg
fstl
dec
mov
push
pop
push
pushf
mov
mov
add
mov
lock
je
mov
ficoml
sub
mov
out
and
adc
inc
xchg
ja
push
mov
sahf
mov
pusha
das
xor
dec
sbb
jbe
adc
pop
cltd
jle
lea
lret
dec
cmp
cmp
stos
popf
scas
fwait
jecxz
mov
test
popa
pop
sub
or
adcl
lcall
pop
sbb
push
jmp
sti
mov
ja
pop
or
xchg
jae
ds
cmp
cmp
xbegin
std
add
dec
lods
xor
mov
inc
push
scas
adc
das
push
push
ss
ds
adc
insl
aad
pop
adc
sub
iret
jne
dec
loop
test
sub
jp
xchg
popf
mov
xchg
les
outsl
sti
mov
adc
pop
jge
cwtl
add
or
inc
shl
mov
and
or
xchg
imul
pop
mov
inc
insb
push
cmp
bound
xchg
rcl
les
and
pop
mov
push
fcomps
mov
cmp
leave
dec
fisubs
js
mov
mov
push
and
in
lcall
push
nop
xor
mov
int
push
enter
dec
mov
jo
or
inc
cltd
add
adc
aas
shlb
icebp
hlt
out
jae
ja
sti
jae
or
sbb
mov
or
lods
cmpsb
adc
fdivrp
mov
adc
pushf
xor
inc
cmp
push
xchg
fs
xchg
out
jnp
inc
loop
in
fdivrl
out
sbb
ja
or
mov
sub
dec
mov
leave
test
or
outsb
jmp
jle
or
or
sti
or
es
pop
mov
adc
out
cmpsl
testb
test
mov
push
pop
adc
mov
sahf
pop
ljmp
sub
sub
incb
hlt
jp
xchg
or
pop
sbb
call
in
les
mov
xchg
xor
mov
sti
mov
int
mov
leave
xor
into
test
mov
pop
jnp
dec
adc
push
clc
and
in
xchg
lods
push
adc
add
xorl
mov
xchg
jo
mov
dec
jl
repnz
fs
clc
les
stos
push
mov
enter
xor
xor
pusha
xor
jne
pop
data16
inc
sti
icebp
inc
ficoml
jbe
jp
popf
mov
adc
mov
dec
jp
jne
aaa
lods
fidivrl
pop
pop
call
cld
sbb
pop
add
shlb
aad
fildl
dec
xchg
into
test
xor
jbe
pop
cmp
lea
push
aaa
sbb
sub
inc
or
xchg
mov
jbe
out
sbb
cmp
lret
test
popa
fs
cs
ret
xchg
add
leave
xor
lods
jge
pop
ret
dec
and
mov
dec
pop
out
sbb
mov
fidivrl
push
xchg
xor
scas
mov
pusha
push
jnp
add
pop
lock
in
dec
mov
mov
jmp
sub
and
jmp
repz
xchg
imul
rcll
fs
leave
jmp
cmp
xchg
mov
jecxz
pop
rdmsr
out
pop
repnz
jnp
and
mov
cmp
das
mov
scas
inc
dec
xchg
das
or
loop
mov
sub
adc
xor
jp
dec
aas
std
pop
inc
insl
in
int
mov
test
stos
or
xchg
repnz
int3
stos
push
mov
test
aaa
sub
inc
sbb
cmp
xlat
mov
das
shrl
shll
pop
dec
mov
pop
mov
xor
and
jns
rolb
sub
popf
jb
cmpl
mov
xor
fidivrs
clc
add
in
mov
jge
adc
leave
sbb
pop
push
cmpb
loope
out
scas
jo
int
add
aas
push
pop
or
scas
imul
push
mov
lret
fstpt
cmp
cmp
cmpsb
sarl
fmul
mov
ss
mov
fstpt
sbb
push
inc
push
in
jmp
sahf
sbb
int
sub
mov
sbb
arpl
enter
aam
sbb
jl
xchg
jb
xchg
fisubrl
mov
jmp
or
dec
xchg
add
ss
out
jns
adc
sub
add
fmuls
pop
add
das
in
out
jno
push
or
or
insl
or
pop
lret
jne
cmp
sbbl
orl
jp
jecxz
push
adc
mov
test
sti
cld
jl
pop
inc
dec
jg
es
dec
cmp
push
loope
mov
sub
and
popa
mov
cld
push
pop
imul
mov
cmc
push
xchg
sbb
xchg
pop
cmp
ds
mov
bound
and
push
mov
xchg
sbb
sbb
inc
xchg
push
mov
inc
data16
or
inc
push
ret
dec
fs
int
push
test
add
in
popa
pushf
pop
jb
shll
imul
mov
das
pop
nop
pop
popf
shrl
popf
adc
jno
outsb
lock
xchg
and
ds
shll
mov
clc
dec
ror
xchg
out
lock
xorl
scas
pop
add
nop
outsl
push
aad
outsl
mov
mov
inc
fisttpll
stos
icebp
mov
sub
jo
cmp
sub
nop
sub
jne
inc
jbe
aaa
sbb
jp
out
pop
fcompl
lods
rcl
jp
mov
dec
xchg
jge
pop
jb
mov
out
cmp
fs
shlb
es
ja
mov
mov
test
jo
fcmovbe
lea
dec
cmp
fwait
dec
cltd
dec
mov
jae
or
aad
xchg
xchg
mov
cltd
in
outsl
inc
call
cld
arpl
in
arpl
sbb
mov
add
sbb
jae
dec
shrl
loope
test
xor
jbe
dec
or
and
std
xor
in
aam
icebp
cmp
dec
cmp
lret
mov
dec
rolb
jns
addb
scas
xor
adc
sbbl
dec
iret
lock
hlt
mov
aam
lods
and
pop
adc
cltd
in
or
and
mov
cmp
dec
into
sbb
aas
mov
inc
add
lea
adc
popa
test
mov
xor
mov
fs
jns
pop
push
lahf
into
enter
push
enter
pop
outsl
xor
push
rcl
push
mov
and
ret
stos
cli
jmp
stc
lds
mov
cwtl
sarl
mov
jb
ljmp
pop
dec
daa
jb
fisubs
dec
add
adc
lods
push
mov
adc
test
xor
or
sub
inc
mov
xchg
sbb
xchg
cmpl
rcll
pop
and
shlb
inc
dec
sub
adc
mov
and
pop
lcall
repz
sub
fdivs
ja
lret
cwtl
add
cmp
mov
xchg
cwtl
jo
sub
push
fwait
mov
punpcklbw
pop
add
addb
inc
movsl
sub
and
push
sti
pop
je
lods
mull
mov
mov
popf
icebp
sub
add
faddl
aas
adc
mov
testl
das
xlat
gs
cmp
cmpsb
mov
inc
add
outsb
ds
dec
cmpsb
inc
repnz
and
sbb
fidivrs
add
sub
jp
jno
add
test
loopne
mov
fisttps
fisubrs
test
lods
fnstsw
dec
pushf
cmp
bound
pop
inc
sub
lds
repz
lfs
jne
loopne
mov
lret
popf
out
insb
insb
sbb
and
push
jns
int
push
cmp
int3
stos
icebp
stc
or
data16
movsb
movlps
icebp
pop
lods
sbb
int3
or
fcoms
pop
mov
or
mov
movsl
fstp
imul
pop
xchg
out
aas
loop
pop
pusha
mov
xchg
pop
xor
cmp
inc
adc
loopne
push
pushf
mov
xor
mov
scas
cwtl
test
ss
popa
cmp
mov
jmp
jne
lahf
imul
stos
es
and
addr16
insb
push
and
imulb
xchg
cld
cmp
pusha
subb
push
inc
mov
lock
imull
stos
pop
xlat
nop
mov
pop
enter
push
sbb
jno
pop
inc
popa
cmp
mov
mov
adc
dec
mov
nop
fidivrl
inc
push
stc
xor
bound
mov
mov
mov
test
sub
dec
arpl
pop
shll
sub
push
xchg
push
or
cltd
lahf
jg
ljmp
add
outsb
fists
js
pop
pop
jp
call
nop
jge
mov
sub
arpl
and
pushf
pop
cmp
mov
es
test
ss
ds
std
fiadds
xor
aas
mov
ffreep
mov
testb
into
lods
mov
or
rcr
dec
ret
inc
mov
daa
rcll
jl
jecxz
cmc
add
xor
repz
xchg
ficoms
mov
mov
std
fwait
lret
pop
and
dec
movsb
movsb
mov
ret
and
fstl
add
out
dec
lret
imul
inc
cld
dec
daa
lods
pop
in
out
sahf
repnz
pusha
mov
add
out
dec
hlt
xlat
js
in
push
ja
cli
adc
outsl
pusha
inc
sahf
mov
pop
cld
sub
and
mov
mov
push
sbb
fwait
cld
xchg
stos
mov
sbb
pop
mov
sbb
xor
mov
lods
or
in
je
pop
mov
hlt
gs
popf
inc
jmp
or
pushf
cmpsl
add
add
adc
cli
les
into
pop
lret
es
stos
jae
nop
adc
insl
push
jns
pop
adc
clc
sub
int
stc
into
out
movsb
or
or
cld
mov
and
fmul
insb
sbb
roll
add
fst
mov
mov
or
outsl
sbb
mov
dec
pop
mov
mov
push
adc
push
and
shl
dec
jae
rorl
sbb
nop
fisttpl
aas
sub
lock
inc
sete
iret
sub
jbe
lret
inc
jge
nop
mov
inc
iret
in
sti
add
sahf
dec
jl
orb
insb
mov
out
test
mov
imul
fnsave
push
iret
dec
xor
lahf
das
inc
inc
ds
clc
xor
imul
push
call
divb
arpl
pop
and
xor
xor
fisttpl
into
mov
bound
cltd
cmpsb
xor
cmp
xor
and
mov
outsl
idiv
cmp
dec
inc
cltd
sub
sub
sbb
cmp
or
movb
jb
ljmp
cmp
fstp
pop
pop
xchg
cmp
mov
xchg
ljmp
rcrb
repnz
mov
leave
testw
loope
insb
jb
sbb
pop
mov
add
sbb
loop
add
or
notb
fisttps
dec
pop
pop
clc
sbb
add
fidivrl
sti
shl
pop
xor
pop
sbb
cld
in
inc
bound
and
or
stc
xor
dec
mov
dec
ja
add
and
cs
mov
xchg
sbb
fdiv
dec
popw
sahf
fwait
push
neg
inc
mov
or
xchg
jmp
dec
test
mov
shll
in
jns
es
pop
mov
fmull
lods
sbb
fcoms
test
xchg
ds
in
jmp
jmp
jo
sub
lods
out
lods
sahf
inc
repnz
stc
arpl
xor
cmpsl
pop
inc
dec
xor
mov
and
scas
cmc
mov
sub
pushf
inc
jmp
fdivrp
inc
mov
push
mov
mov
imul
add
cs
mov
dec
testb
xchg
mov
out
pop
daa
insl
adc
xor
orl
and
xchg
arpl
dec
fdivrs
push
xchg
sub
push
sbb
loop
hlt
test
fstps
inc
sbb
cmc
cwtl
sti
jg
fcomps
fistps
popf
xor
mov
mov
pop
daa
lret
clc
xchg
sub
pop
int3
sar
insl
and
sbb
xlat
jg
xor
pop
adc
arpl
cwtl
movsb
loop
hlt
out
in
xchg
xor
call
jg
aad
xchg
mov
mov
cmp
movsl
fbld
sbb
int3
aaa
aam
sub
scas
push
xorb
cmp
dec
dec
das
pushf
fisttps
cmp
shl
imul
jbe
jmp
mov
mov
ds
push
pop
mov
aas
mov
aas
je
inc
cmp
or
mov
test
push
add
sub
nop
in
orb
ja
push
mov
cmp
das
gs
inc
call
sbb
jmp
mov
cmp
fsub
jp
ljmp
sbbb
xor
bswap
sub
sti
jg
pop
inc
pop
test
fists
mov
push
jmp
cmc
fs
je
jae
das
cmp
out
movsb
push
mov
jmp
clc
lret
movsb
push
and
mov
ret
movsb
or
mov
outsb
jbe
mov
or
ja
adc
dec
nop
fwait
or
cmc
roll
jle
mov
mov
repz
and
lods
popf
pop
outsb
jl
lcall
aam
mov
aaa
pop
pusha
pop
xor
inc
mov
scas
and
int3
ja
jmp
mov
into
js
cmpsb
sbb
push
and
inc
les
and
add
cmp
xchg
push
adc
jne
fdecstp
jecxz
int
insb
jns
lcall
mov
pop
sbb
add
push
mov
lock
cmc
enter
pop
xchg
jle
ret
pop
cltd
aas
aad
cmp
push
sub
jbe
out
hlt
insb
cld
sti
imul
mov
loopne
es
out
js
push
jno
adc
inc
xlat
jnp
imul
sbb
lods
fildll
mov
loop
xor
mov
xchg
sti
jecxz
pop
scas
aad
aaa
movsb
push
mov
sub
insl
dec
sar
and
xlat
jnp
jmp
movsl
jl
inc
testb
in
xor
pop
insl
dec
sbb
arpl
cmp
pop
jnp
xor
xor
jne
or
cmp
push
pop
nop
cli
sub
in
pop
jns
orl
mov
xchg
mov
in
cltd
push
pop
sub
dec
mov
jg
clc
cmp
xchg
xchg
scas
popa
decb
pop
xor
lock
add
cmp
push
fs
sbb
std
sbb
jg
lret
mov
ret
ljmp
push
loop
mov
ljmp
push
jns
idivl
test
mov
mov
mov
loopne
in
mov
jmp
cwtl
jo
orl
jbe
jnp
adcb
xor
sahf
dec
mov
sbb
xchg
pusha
int3
mov
mov
push
fxtract
sbb
cwtl
and
ret
sbb
outsl
in
fidivs
cmpsb
push
outsb
xchg
shlb
test
lahf
mov
adcl
jge
int3
sub
aaa
icebp
inc
cmc
push
insl
mov
jecxz
out
pop
sbb
xchg
popa
mov
arpl
adcb
lahf
ret
push
mov
in
sbb
fwait
dec
idivb
mov
addr16
mov
or
aaa
movb
out
les
sahf
pop
fmull
push
sub
mov
xchg
add
mov
out
push
dec
ret
pushf
jl
je
sti
int3
dec
cmp
mov
cltd
loope
cmp
out
addb
sbb
cmp
stc
or
mov
pop
repz
mov
out
jle
aas
mov
call
adc
cmp
outsb
cmp
js
dec
jne
sti
add
cmpsb
add
test
jns
and
add
lds
xchg
outsl
scas
popa
pop
into
mov
enter
xchg
xchg
sub
pop
in
xchg
cli
mov
sub
or
mov
stos
fs
int
mov
mov
fistpl
push
aam
enter
fstpt
pop
das
nop
xchg
test
ljmp
and
xchg
jns
sub
iret
inc
mov
cmp
repz
loopne
inc
push
add
stc
cs
cmp
lret
sarb
cwtl
lods
or
int
adc
pop
lods
or
lret
dec
lods
adc
xchg
lods
mov
pop
adc
cmp
pop
insl
lret
or
mov
push
jae
fisttpl
dec
test
test
gs
ret
pop
iret
add
sub
sbb
in
push
mov
adc
dec
xchg
adc
shlb
xchg
sbb
aas
pop
sbb
add
mov
ja
add
mov
xchg
push
pop
cmc
arpl
pop
jbe
aad
popa
jle
jb
jmp
icebp
sub
adcb
xchg
or
mov
fisubrl
dec
lods
popf
es
addr16
mov
into
xlat
aam
sbb
jno
fsubrs
inc
push
push
stos
push
push
pop
mul
pop
mov
icebp
xchg
xchg
cltd
inc
xor
dec
or
mov
rol
loop
xchg
sahf
shrl
dec
les
sub
loope
or
xor
pop
adc
divb
add
pop
push
in
pop
test
clc
fidivs
dec
xchg
mov
popf
dec
push
test
pop
pop
repnz
jmp
xchg
jecxz
push
ret
dec
in
ret
out
cwtl
jmp
mov
call
fdivs
xchg
pop
dec
subb
cmp
dec
cmp
scas
ror
test
jo
mov
mov
cltd
shl
pop
dec
pop
and
pcmpeqb
pop
in
shrl
cmp
icebp
negb
sbb
jmp
mov
mov
lods
adc
bound
mov
sbb
cli
popf
je
das
dec
sbb
jmp
mov
orl
adc
pop
shll
cmp
jnp
ds
add
jmp
sbb
push
mov
lret
sub
shll
pushf
jg
loope
pop
inc
cmpsb
xor
add
inc
movsb
ret
mov
mov
icebp
cs
shll
or
test
ret
pop
aas
sahf
test
jne
testb
outsb
and
jmp
fimull
loopne
insb
shll
arpl
dec
pop
jnp
jg
or
daa
xchg
mov
xchg
repnz
xlat
xchg
cmp
rcll
push
xor
negb
shl
mov
in
push
stos
sarb
sbb
cmp
movb
inc
cmpsl
mov
aas
fcmovnu
lcall
cmp
rolb
cmp
and
xor
push
lods
lret
xor
aad
cmpsb
mov
sar
sub
jno
push
jl
pop
push
loop
mov
mov
xchg
jns
imul
xor
and
inc
and
inc
jge
pop
push
mov
loopne
cmp
pop
xor
fsubrl
xchg
call
clc
cmc
cmp
dec
mov
mov
popa
mov
push
js
push
add
iret
push
daa
in
nop
cmp
repz
out
jno
mov
inc
iret
inc
mov
mov
sahf
push
imul
xor
dec
xchg
in
pop
mov
jae
xchg
loop
add
dec
xorb
xchg
push
add
cli
cmp
out
mov
das
ja
cwtl
sbbl
dec
sbb
hlt
mov
pshufw
orb
les
pushf
push
jns
xchg
sbb
mov
dec
push
gs
jae
push
insb
fsts
test
shrl
fidivs
ja
dec
div
stos
push
jne
movsl
lods
ljmp
sbb
sbb
das
xchg
std
xor
xchg
in
lahf
mov
insb
sub
aas
testl
and
arpl
cli
xor
icebp
lret
leave
leave
cs
sbb
xor
das
scas
sub
out
adc
inc
out
mov
pop
sahf
or
fisttpl
or
mov
xchg
popf
xchg
in
sub
xor
shlb
loopne
jle
add
mov
sbb
adc
sbb
jg
xchg
sub
xor
sub
cmp
mov
mov
out
push
dec
ret
out
pop
dec
sub
dec
pop
xchg
fldenv
jmp
xlat
push
xor
push
mov
cmpsl
fistpll
je
jns
je
pop
gs
ss
xchg
and
xchg
js
not
ror
cmc
aam
leave
push
rclb
repz
adc
or
mov
mov
ja
and
sub
mov
adc
outsb
add
add
inc
lods
js
push
aad
xor
cmp
mov
icebp
push
adc
inc
fs
and
fadds
outsb
mov
ds
hlt
push
xchg
sub
jae
cmpsl
int3
cmp
mov
aam
mov
call
fldenv
jl
std
mov
xorl
fmull
gs
pop
cmp
out
pop
test
shll
hlt
fildl
sbb
repnz
mov
mov
repnz
test
popf
or
mov
shrl
pushf
iret
xor
adc
lds
and
or
jg
cmpsb
popf
outsb
movsb
or
mov
cmp
aaa
xchg
cmp
adc
adc
or
lods
fwait
dec
mov
sub
dec
sub
es
adcb
fwait
or
sahf
popa
sub
shll
xor
and
enter
jge
sub
loope
sub
imul
xchg
push
stos
mov
fs
push
jmp
lcall
mov
push
and
addr16
int
int3
dec
jbe
punpckhwd
into
stos
incl
sbb
bound
ds
mov
jecxz
xchg
cli
inc
lret
xor
xchg
pop
pusha
and
es
loope
push
push
repz
add
or
insb
mov
mov
js
arpl
mov
mov
ss
cli
push
cmpsl
call
scas
sbb
dec
jne
push
sar
add
fistpl
jle
aas
jmp
jecxz
mov
adc
lea
adc
popa
jle
cmp
mov
loopne
sub
xchg
ret
sub
movsb
mov
cs
clc
adc
jae
lahf
and
mov
push
xchg
in
pop
xchg
inc
sbb
test
add
inc
in
jbe
inc
daa
cmp
pop
mov
add
adc
mov
mov
jbe
inc
pop
xor
sub
dec
enter
xchg
pop
add
mov
out
pop
mov
test
jp
cmpsb
dec
and
test
sub
xor
fs
mov
mov
sbbb
sbb
pop
insb
enter
pop
adc
jbe
push
shlb
bt
xchg
xchg
fmulp
imul
rol
std
and
and
flds
icebp
inc
cmpsb
lods
addb
cmp
inc
xchg
in
fldcw
or
pop
fwait
push
sub
mov
push
add
popf
dec
mov
mov
sub
xchg
xchg
dec
addr16
push
cmp
jb
repz
xchg
call
fidivl
xorl
daa
outsb
dec
cmpsb
inc
testb
xchg
mov
or
or
stos
lods
pavgw
arpl
and
pop
jp
jmp
ljmp
mov
fisubrl
in
jmp
sub
in
pcmpeqd
inc
pop
mov
cs
jmp
cmc
push
dec
popa
push
lods
movsb
and
mov
clc
js
bound
rol
lahf
repz
xchg
punpckhdq
fmull
pop
loope
fmull
jno
add
nop
fmulp
inc
jge
mov
adc
adc
aas
jl
cld
fmuls
pushf
mov
mov
call
xacquire
fisttpl
stos
inc
pushf
lea
in
add
push
in
inc
sbb
xchg
dec
je
push
and
and
mov
mov
sub
pop
orb
inc
jle
xlat
cmp
push
mov
hlt
imul
mov
inc
jne
popf
jbe
cmp
fdivr
bound
cwtl
notb
repz
add
cld
jecxz
pop
testl
js
clc
pop
or
dec
jle
shlb
les
je
cmp
aas
nop
getsec
scas
mov
pop
cltd
xor
stos
pusha
mov
shlb
jge
mov
mov
xor
dec
shlb
inc
adc
jmp
cmp
shll
into
pop
mov
cmp
testb
xor
clc
push
jmp
ret
xor
fidivrs
into
mov
rolb
lcall
aam
lds
xchg
fldt
cmpsl
mov
dec
adc
fcomps
std
daa
scas
dec
imul
and
jb
dec
int
mov
mov
sahf
js
pop
dec
mov
mov
cltd
and
jno
aas
add
mov
cli
mov
inc
pop
cmp
push
pop
sbb
outsl
or
bnd
mov
xor
dec
les
int3
dec
test
out
sub
jmp
fsubs
insb
push
insb
jp
in
lret
mul
int3
push
or
testl
sub
sbbb
cmp
std
jae
mov
bound
test
add
incl
in
mov
ljmp
sub
imull
mov
mov
aaa
adc
out
scas
add
mov
pop
aad
lret
sub
lcall
add
cmpsb
jo
das
or
xchg
scas
fwait
sti
cwtl
pop
cltd
xchg
movsl
lahf
lret
mov
fbld
pop
jmp
push
sub
or
and
out
iret
orl
xor
movsb
test
sbb
test
jmp
adc
icebp
hlt
xchg
dec
xchg
push
pop
lea
scas
cmp
lds
adc
sub
sub
push
sub
mov
jp
jl
sbb
pop
cld
aam
inc
xchg
je
out
iret
gs
pop
pop
lea
movsb
enter
mov
or
push
mov
mov
pop
loop
repz
pop
pusha
xor
dec
cwtl
pop
or
jmp
cmp
inc
xor
inc
jb
dec
test
lret
push
test
test
lret
cmp
jmp
call
pushf
dec
push
mov
mov
movl
or
int3
loope
fnstenv
xchg
adc
dec
or
mov
scas
lcall
aam
les
loopne
sbb
pop
fistl
cli
ss
in
jbe
sub
jae
test
inc
fs
jne
in
jl
jne
imul
addr16
cld
sub
and
imul
push
sub
add
pop
jmp
mov
cmp
xchg
jb
fwait
rcrl
jmp
testl
inc
lret
fstl
aaa
stos
xlat
mov
mov
mov
std
sub
jmp
mov
scas
xor
out
xchg
cmp
sqrtps
dec
leave
or
xchg
lahf
mov
imul
test
mov
inc
xor
cmp
sub
sbb
inc
les
add
sahf
pushf
sahf
mov
push
outsl
insl
jae
or
push
adc
add
sbb
xchg
aaa
sub
test
leave
cmp
push
push
in
inc
mov
addr16
add
enter
shrb
loopne
jecxz
lcall
les
jle
xor
movl
mov
xor
pop
inc
insb
sub
stos
sub
imull
cmc
jecxz
sbb
fnstenv
movsb
mov
repnz
sbb
les
sub
mov
sbb
pop
cmc
les
ret
jbe
mov
ret
cwtl
pop
push
and
outsb
mov
adc
cmp
jne
push
and
fldenv
and
xchg
add
pop
push
dec
xchg
subl
push
hlt
adc
jbe
inc
cmpsb
in
cmc
mov
mov
cmp
mov
and
push
xchg
mov
scas
cmpsl
sub
lret
loop
stc
aam
dec
push
mov
sti
inc
dec
xor
jmp
sbb
call
jbe
in
add
or
xor
aas
pushf
ret
inc
mov
pop
hlt
xchg
pop
cld
jae
push
fnstsw
mov
dec
mov
mov
fistpl
test
incb
mov
jbe
mov
test
cwtl
movsl
or
sbb
ret
and
stos
ljmp
mov
cs
push
xor
mov
cmp
pop
cmp
mov
mov
repz
in
inc
add
lods
xchg
mov
and
inc
xor
movsb
fisttpll
ljmp
imul
rcll
scas
sbb
mov
fidivrs
stos
cli
pop
xchg
ljmp
cwtl
test
sahf
or
or
add
xchg
ljmp
aas
sbbl
pop
jnp
movsl
mov
mov
fists
jbe
sub
test
or
or
ror
push
mov
ss
jmp
iret
xchg
test
fs
xchg
fs
lcall
sub
jo
push
sub
push
mov
mov
pop
jae
and
lret
in
push
cld
add
cmc
loop
jp
js
cmp
das
cltd
arpl
test
shll
iret
call
dec
add
mov
pusha
adc
mov
sub
xor
adc
inc
jb
push
xlat
jns
or
rcrb
mov
test
shll
xchg
ja
pusha
sbb
cmc
xchg
shll
pop
aam
push
ljmp
icebp
lods
shl
xchg
in
add
and
fsincos
jl
mov
jge
add
jecxz
dec
jns
push
mov
sbb
cltd
inc
pop
push
rcr
std
in
push
aas
iret
pop
subl
fmull
movsl
add
cmp
insb
xchg
test
push
in
inc
cmc
jo
xor
test
and
addr16
popa
fwait
xor
cld
movsl
loopne
xorb
jge
fdivr
std
out
pushf
inc
outsl
pop
popa
int
lret
stos
insl
or
and
out
pop
lods
rcr
fmull
faddl
inc
arpl
dec
xorb
push
js
repz
outsb
sbb
jle
mov
cmc
jno
out
js
in
call
adcb
paddsw
rcrb
adc
shll
loop
mov
mov
test
mov
mov
mov
stos
cmc
daa
add
add
add
sar
xchg
mov
jbe
dec
xlat
jns
xor
add
xor
mov
jne
or
leave
add
add
movsb
mov
xchg
push
xchg
xor
scas
ret
push
fbstp
adc
movsl
or
jo
lahf
pop
shlb
pop
cmp
jne
ds
inc
pop
es
sub
movsl
push
imul
mov
sub
fnstsw
imul
ss
scas
mov
and
and
test
mov
push
leave
add
mov
push
call
mov
push
and
sub
add
idivb
mov
mov
shrb
pop
xor
sbb
sub
xor
fs
xor
into
push
xor
and
mov
leave
mov
mov
ffreep
add
out
outsl
sub
adc
ja
outsl
notl
ja
sahf
nop
pop
pop
icebp
in
cmpsl
lcall
cmp
xchg
sahf
in
add
sub
or
test
sti
push
imul
loopne
or
pop
sbb
cmpsl
inc
into
mov
lret
addl
fsubs
mull
fistpl
sbb
or
sub
xor
mov
test
jns
mov
fsubrs
fidivs
fwait
mov
shlb
adc
test
pop
ds
cmpl
pushf
jmp
fistps
out
sbb
dec
cli
cmp
popa
push
add
lods
das
loop
mov
mov
inc
dec
std
jge
inc
repnz
rol
adc
fdiv
data16
fistpl
sub
negb
jmp
popf
jo
jne
and
test
xor
cmp
adc
xor
or
aad
mov
inc
or
pushf
sti
lahf
xor
pop
pop
ret
pop
dec
outsl
mov
test
int
xchg
sub
xchg
push
or
das
cltd
pop
popf
das
fstpl
arpl
push
sub
xor
jno
xchg
fists
out
mov
mov
adc
imul
in
sub
or
mov
pop
xchg
notb
and
es
xor
push
push
pop
mov
sbb
inc
int3
fbstp
test
test
cmp
repnz
mov
notb
lds
lret
sahf
in
xlat
push
mov
lret
jl
mov
push
cmp
fidivl
mov
mov
sbb
movzwl
shl
mov
mov
stos
shr
jbe
sti
push
mov
xorl
repnz
dec
mov
mov
cs
rep
test
push
xchg
lcall
jo
lea
loop
adc
jg
xor
adcl
fsubl
xchg
movsb
es
inc
adc
imul
aaa
ss
stos
sub
push
jo
mov
ss
add
mov
pop
and
outsb
test
and
mov
bound
mov
jle
and
cltd
les
out
shlb
test
lods
sub
inc
out
push
lea
jp
xor
cwtl
jge
jne
or
daa
push
lock
jl
xchg
dec
mov
fistpll
inc
test
cmp
dec
movsl
inc
cmp
scas
or
in
lea
push
pop
xlat
call
aas
pop
call
js
pop
lods
push
adc
insb
clc
je
jge
jnp
sbb
insb
jb
and
inc
pop
add
mov
fmull
inc
insb
outsl
push
mov
cltd
pop
cmp
leave
mov
adc
xor
push
inc
mov
movsl
leave
stos
icebp
push
repnz
aam
shl
inc
add
xor
iret
test
pusha
dec
pop
test
dec
xor
daa
and
jo
fsubl
rol
hlt
rol
sub
mov
or
ds
arpl
mov
leave
jne
and
xchg
push
or
outsb
out
scas
je
dec
mov
aaa
mov
and
mov
cmp
fwait
jae
icebp
cmp
push
fs
jp
ret
add
arpl
mov
or
push
in
fsubrl
pop
cmpsb
ret
jns
gs
leave
push
ret
hlt
xchg
inc
out
stc
adc
jo
enter
mov
push
pop
scas
jne
cs
out
jge
outsl
mov
cmp
cmp
lds
in
cmp
pop
sub
stos
js
lea
sub
in
dec
push
push
add
pop
movsl
aad
pop
push
add
xor
xchg
xchg
push
sbb
aas
aaa
nop
jae
pop
ss
lock
xor
mov
sub
dec
or
mov
dec
dec
sahf
add
dec
addr16
addr16
mov
xlat
stos
addl
cmp
cmpl
scas
fsubr
cmp
aam
popa
xor
ja
js
cs
out
iret
push
imul
insb
ret
dec
adc
dec
aad
addr16
adc
adc
sub
ja
nop
cmp
xorb
dec
xchg
lcall
dec
je
adc
in
test
add
aas
and
loop
call
fidivrs
lock
cmp
jmp
cmp
mov
sub
clc
sub
incb
popa
es
lods
add
dec
test
cmpsb
pushf
inc
aam
jb
inc
gs
cltd
in
mov
push
sub
movsb
jbe
mov
mov
lcall
stc
sbb
xchg
xlat
jg
push
lcall
or
add
out
or
jl
scas
cmp
jno
mov
lock
jbe
lods
mov
jns
lock
in
mov
inc
and
push
inc
test
cmp
inc
or
add
mov
push
fdivrl
jbe
std
fstps
sti
sti
add
jnp
and
xchg
inc
sbb
hlt
adcb
push
ret
std
clc
add
shll
push
jb
cmp
iret
aam
stos
mov
scas
inc
jae
aaa
inc
xor
xchg
ficompl
mov
jg
adcb
das
and
repz
fidivrl
scas
sarl
jmp
adc
mov
jnp
shll
mov
lret
cmpl
push
sbb
mov
pop
mov
mov
push
jecxz
add
push
xor
xor
call
roll
es
jl
push
ljmp
lea
addr16
jo
pop
push
xor
jle
testl
add
out
jl
push
lahf
lds
pop
pop
stos
pusha
mov
xchg
xchg
adc
dec
loop
adc
mov
jae
xor
xchg
adcl
ja,pn
ret
xor
pop
sahf
jmp
ret
mov
hlt
add
jnp
dec
sbb
mov
iret
lcall
pcmpgtd
mov
add
lods
enter
cmpsl
in
fists
mov
add
aam
daa
nop
insl
js
mov
pop
adc
daa
rorl
hlt
rclb
nop
ss
into
test
dec
aad
or
dec
int
xchg
jbe
mov
cmp
sahf
fsubs
xchg
xor
dec
push
mov
idivl
pop
jbe
imul
cwtl
repnz
and
jbe
loope
jbe
sahf
pushw
ret
xor
arpl
sub
pop
or
pop
xor
inc
aam
cmp
popf
dec
imul
sub
test
outsb
jle
cmp
decl
jae
popf
gs
and
dec
sub
jns
pop
aaa
jno
mov
add
outsl
outsl
test
push
testl
jge
pop
inc
clc
outsb
pushf
push
jb
addr16
sar
leave
cmpsb
mov
in
cwtl
and
sbb
scas
sbb
ret
pop
xorl
jne
adc
imul
mov
adc
pop
clc
mov
or
dec
hlt
xor
pop
pop
mov
add
sti
icebp
sub
pop
sbb
sub
xor
outsb
or
push
and
adc
cltd
loopne
subl
imul
daa
mov
or
sahf
ljmp
jg
nopl
testl
rolb
data16
in
dec
jo
divb
jl
push
xchg
adc
dec
call
out
mov
aam
cmp
mov
mov
sahf
add
clc
xlat
pop
pop
icebp
clc
cmp
xchg
repz
mov
test
das
jmp
push
sub
aas
mul
outsl
lea
test
call
mov
mov
fistpl
mov
dec
popa
fs
cmpsb
inc
lret
xchg
adcb
loopne
repnz
fmull
loope
or
incl
cltd
push
dec
xchg
dec
jmp
mov
cmp
dec
mov
jecxz
sti
cs
popf
ret
add
aaa
pop
add
nop
mov
pop
mov
mov
mov
xor
fsts
pop
lods
enter
inc
stc
or
dec
hlt
add
in
addr16
daa
dec
ds
jl
sbb
stos
or
test
movb
mov
ds
xchg
inc
jno
imul
bound
in
pop
dec
addr16
in
or
xchg
jecxz
scas
cmc
ret
xor
std
jg
stos
or
xorl
cwtl
scas
dec
adc
pop
sub
cmp
cmpsl
pushf
jae
push
or
icebp
ss
inc
out
or
xchg
vpsrld
push
lea
jle
in
or
int3
ljmp
pop
sbb
jecxz
icebp
icebp
rcll
popa
js
in
or
lcall
cmp
cs
into
adc
mov
or
adc
negb
sbb
xchg
adc
push
pop
not
dec
in
and
cmp
jo
aaa
iret
imul
lret
jmp
lds
or
call
xor
cltd
inc
sub
jle
jns
cld
jp
into
push
mov
jo
lret
andl
xchg
adc
mov
mov
push
addr16
test
sbb
pop
insb
jns
push
sub
adc
xor
push
dec
popf
les
mov
xchg
aas
sbb
mov
add
loop
mov
sub
mov
jmp
add
fists
dec
sbb
push
and
das
cmpsb
pop
dec
pop
mov
andl
pause
and
sub
jne
rclb
pop
add
xor
and
iret
insl
aaa
movsb
je
add
aad
int3
and
dec
imul
lret
mov
shrl
enter
lods
daa
repz
lds
xor
test
jge
mov
pop
xchg
cltd
popa
mov
cmp
and
push
push
nop
or
iret
test
es
push
mov
xlat
orl
pushf
in
sub
mov
stc
cvtps2pd
mov
loop
sub
sub
dec
jmp
xchg
cmp
lret
lret
sub
imul
add
jnp
push
mov
shll
push
push
jb
sbb
push
mov
sbb
dec
or
add
mov
out
aaa
fwait
push
cmp
int3
or
sub
inc
or
mov
or
aam
lock
push
mov
inc
lahf
icebp
add
loope
dec
fdivr
aam
sub
xchg
add
pop
dec
sub
fcoms
jb
jae
mov
mov
mov
das
inc
aad
jp
jg
and
fbld
sub
fnstcw
jnp
subb
cltd
xor
adcb
inc
jb
xlat
xchg
cltd
aam
inc
es
shlb
or
out
jge
adc
push
aaa
and
xchg
lods
fistps
mov
movsb
jp
ja
andl
popf
movsb
int3
ret
insl
dec
hlt
jae
enter
dec
or
into
jb
xchg
add
imul
fbstp
sub
mov
out
rcrl
adc
jno
daa
out
jmp
mov
or
movsb
xchg
ljmp
stc
stc
push
mov
stos
pop
push
sbb
push
test
nop
cmp
je
fldcw
ja
rcr
pop
xchg
scas
test
add
aaa
xchg
adc
aam
xchg
or
nop
mov
stc
divl
stos
inc
pop
je
fmulp
movsl
xor
imul
dec
bnd
cmp
sub
je
mov
mov
dec
adc
aad
or
and
pusha
repnz
incl
dec
dec
sub
test
mov
mov
jge
ds
imull
clc
out
pop
test
das
ljmp
imul
xor
sbb
pop
sbb
cli
imul
mov
jg
pop
cli
push
std
shlb
mov
mov
and
sbb
enter
dec
cmp
mov
dec
or
fwait
cmc
addr16
push
xor
xchg
xor
notb
jns
sub
dec
aam
pop
in
xor
pop
sbb
dec
sbb
lods
into
pusha
sbb
or
aam
xchg
shl
stos
stos
xchg
movsl
jbe
pop
shll
in
xchg
clc
mov
mov
dec
popf
xchg
sahf
mov
pop
mov
cltd
popf
push
dec
cmpsb
loopne
xor
xchg
or
sub
inc
pop
popf
rcl
les
int3
insb
mov
add
cmp
nop
adc
std
je
mov
mov
clc
hlt
inc
fisubl
adc
ds
push
inc
fdivrs
xchg
arpl
or
mov
and
xchg
xor
js
insb
movsb
aam
dec
mov
cmc
call
mov
or
in
jmp
out
xor
addr16
xchg
lods
daa
movsl
adc
inc
in
jae
dec
lods
push
inc
or
xchg
xchg
mov
andl
sub
into
cli
dec
and
in
or
cs
pop
in
aad
int3
icebp
cmp
dec
scas
imull
mov
adc
sahf
or
fdivl
mov
pop
jge
add
cli
xor
jecxz
or
jecxz
rcll
sub
sbb
add
xchg
mov
fstps
aas
loope
fistpll
xor
add
push
sbb
outsb
aam
fwait
call
add
imul
xor
fwait
aad
jae
adc
pop
sbb
and
cmp
fisubs
sar
jns
cmp
addr16
into
sub
and
outsb
frstor
les
lcall
lahf
push
sti
loopne
cmpsb
bound
mov
rcrl
adc
ljmp
mov
int3
les
rolb
jmp
mov
cmp
jno
pop
in
outsb
sbb
mov
push
or
sub
fwait
cs
int
lods
paddusw
ret
int
xchg
adc
xchg
cmp
add
mov
cmpsl
pop
cmp
mov
popa
lret
pop
repnz
xor
shll
xchg
cmp
jae
push
push
fcmovnb
mov
stc
test
xchg
jp
rolb
mov
jge
insb
icebp
xchg
xchg
mov
sbb
aam
popa
xchg
ret
iret
dec
xchg
std
in
aad
mov
jge
cs
rcrb
sahf
mov
test
push
cmpsb
and
les
enter
pop
xchg
ret
dec
sub
out
and
mov
pop
add
and
jns
dec
out
mov
add
in
stos
mov
sti
pusha
cmp
cld
fwait
repz
ret
cmp
int3
fnstsw
sbb
add
jge
mov
sbb
mov
rcrb
pop
ret
xchg
stc
imul
mov
mov
and
ja
xchg
pop
mov
lock
and
gs
xchg
jg
rcll
jne
fsub
or
pop
push
xlat
mull
popf
subl
in
jbe
test
push
addb
push
jl
repz
push
or
push
xchg
je
sbb
enter
pusha
pop
inc
add
shlb
and
sahf
and
dec
inc
outsl
lods
mov
inc
cmp
test
jnp
push
mov
mov
insl
gs
pushf
loope
inc
push
cmp
imul
cmpsb
cmc
lods
add
xlat
xchg
xchg
pop
sbb
mull
cwtl
bound
cmp
xchg
je
clc
out
cwtl
mov
fsubrs
mov
inc
xor
insl
inc
mov
test
fcmovnu
pop
push
push
fiaddl
sar
jb
sbb
ds
or
cltd
lcall
ja
je
cmpsb
testl
addr16
outsl
dec
fistps
outsl
adc
arpl
insb
xlat
mov
sbb
xchg
adc
test
imul
popf
jge
testb
ja
pop
js
jecxz
hlt
sbb
nop
add
mov
sbb
repz
mov
jb
add
adcb
out
iret
testl
dec
lods
lret
jbe
xchg
xchg
jmp
push
pop
aaa
cmp
pushf
in
jns
dec
out
sub
ja
jl
or
jbe
xor
jle
xor
out
adc
jo
test
xchg
xchg
sbb
and
jmp
mov
dec
cmp
movsb
adc
inc
fs
lahf
sub
or
jmp
ret
and
out
loopne
test
push
cmp
fadds
es
mov
out
or
dec
pushf
ja
pop
push
push
fnstcw
xlat
js
sbb
imul
enter
test
insl
xchg
push
scas
push
dec
das
stos
push
pop
mov
push
cmp
fisttpl
jne
fnsave
les
xchg
loope
shll
scas
dec
and
repnz
ds
dec
push
pop
adc
inc
ljmp
xlat
cmp
mov
mov
cmp
scas
add
ret
xchg
cmp
mov
push
cmp
sub
inc
or
pushl
xor
mov
sahf
idivl
dec
mov
imul
pop
pop
mov
in
je
inc
cli
mov
leave
jl
push
pop
imul
aaa
mov
lods
inc
and
loope
int3
mov
mov
fsubrp
lock
adc
xlat
ljmp
cmp
fstl
mov
jmp
sarb
lods
mov
aad
xchg
xchg
imul
xor
jo
pop
popf
mov
cmc
fwait
testb
ficoms
aad
jnp
enter
add
xchg
jmp
pop
pxor
jecxz
xor
leave
push
aam
inc
push
into
mov
sbb
sbb
adc
push
sbb
imul
ficoml
sets
js
js
add
add
jmp
sbb
jne
sbb
test
insl
xchg
int3
insl
adc
stos
cmp
sbb
jo
mov
xor
jne
sar
js
int3
icebp
push
adc
and
sbb
notb
inc
rorl
sub
imulb
ss
dec
cmpsb
inc
aad
into
adc
fwait
xchg
add
mov
xchg
pop
pop
andl
jg
adc
adc
adc
mov
aaa
popf
inc
pop
xor
fwait
cmc
push
loope
mov
gs
dec
fwait
push
scas
out
loope
add
inc
stos
stc
cltd
dec
xor
mov
fidivrs
sub
push
ret
push
jb
mov
jl
push
ret
pop
adc
sub
xchg
mov
lret
iret
push
sub
jecxz
lds
jnp
xor
mov
push
push
adc
frstor
lahf
mov
xchg
jmp
or
push
notb
movl
fsubrs
imul
in
mov
clc
and
lahf
mov
push
mov
pop
fcoml
or
mov
int
ret
push
or
aaa
pushf
cs
mov
in
daa
inc
fcomps
mov
jle
mov
cmp
ret
les
jle
scas
sub
adc
mov
ret
test
and
xchg
push
dec
js
lds
sbb
mov
cmp
push
scas
pop
lods
repnz
ja
jbe
test
lret
in
mov
and
jmp
enter
std
imul
cmpsl
mov
jae
xchg
push
push
pushf
adc
xchg
mov
cltd
mov
xor
cmp
or
movsl
daa
lock
into
insb
mov
pop
in
lods
clc
cmp
lds
in
call
mov
cmp
div
and
subl
fidivs
das
mov
dec
roll
mov
xchg
cmp
add
jae
test
insl
lods
pslld
jbe
ljmp
test
inc
nop
nop
test
dec
push
push
sahf
insb
mov
ss
and
or
jg
leave
jge
inc
fstp
sub
xchg
ljmp
mov
mov
mov
in
and
or
faddl
mov
in
cmp
cmpsb
or
dec
jge
jmp
lret
icebp
xchg
aam
xchg
adc
sbb
mov
mov
loope
mov
pop
xchg
inc
fiaddl
mov
add
fisttpll
sahf
dec
ss
icebp
xchg
or
and
fcoms
mov
mov
mov
movsb
shll
pop
pop
jae
mov
bound
aam
inc
in
xlat
mov
pop
outsb
mov
sbb
out
pop
sub
ret
daa
or
mov
and
daa
push
cmpsl
out
jmp
mov
push
clc
mov
insl
mov
mov
pop
inc
or
sub
iret
aam
pop
and
jb
in
rorl
loopne
shll
cmp
sub
lock
mov
mov
scas
mov
addr16
or
mov
inc
dec
and
bswap
decb
mov
std
out
imul
add
xchg
push
js
dec
jb
loop
shll
adc
mov
xchg
adc
ds
xchg
outsb
icebp
cltd
mov
pop
xchg
jecxz
cli
sar
push
cmp
cmp
mov
fmul
dec
pop
sub
inc
xor
dec
mov
insb
pop
push
push
or
scas
xor
stos
jg
int
jmp
and
xchg
inc
lret
aad
cmpl
out
js
push
loope
xor
mov
aaa
cltd
je
xchg
adc
ret
jbe
jno
add
jge
cmp
icebp
jns
insl
fsubl
cmpsl
es
ret
xor
mov
dec
inc
pop
movl
fstpt
inc
cmc
je
mov
mov
pop
lods
pop
xorb
mov
sub
sbb
or
add
popl
mov
pop
test
data16
ss
push
inc
in
adc
inc
inc
xor
adc
es
ret
mov
cwtl
int3
mov
test
xor
repnz
cvtpi2ps
shll
arpl
or
cld
mov
iret
in
adc
mov
mov
pop
int
call
push
xchg
xlat
nop
in
dec
stos
push
bound
inc
jno
push
push
aad
fsin
pop
lea
cmp
mov
sbb
fists
inc
nop
xchg
mov
pop
pushf
and
test
addl
lds
mov
insb
lahf
sti
test
xor
mov
iret
cmpsb
jmp
pop
jmp
repz
shrl
icebp
pop
repz
push
dec
pop
or
push
std
pop
pop
shll
xchg
pop
scas
arpl
icebp
lcall
jae
mov
loop
stc
or
xchg
pavgb
inc
test
inc
in
test
xchg
lahf
mov
je
aam
sbb
adc
mov
sbb
lods
inc
insl
lcall
fcomps
jl
lods
js
cmp
pop
aad
push
popf
dec
jns
ss
and
adc
inc
adc
out
gs
cs
mov
addr16
pop
iret
sub
xor
or
mov
adc
fsubrp
mov
push
jb
in
cmp
jno
sahf
push
jecxz
outsl
cmp
inc
imul
je
dec
dec
call
xlat
jno
mov
repnz
inc
inc
fsts
or
pop
je
inc
mov
je
xor
xchg
xchg
cmpsl
pop
pushf
pop
inc
fcomps
ss
sub
cwtl
xchg
inc
adc
and
add
or
add
jns
or
and
or
dec
pusha
fistl
int3
inc
dec
jle
sub
adc
push
sub
xchg
xchg
mov
andb
ffreep
into
pop
xor
adc
sbb
sbb
push
arpl
int3
sub
repnz
fs
mov
jo
pop
leave
inc
xor
jge
sahf
sbb
add
xorb
int3
jge
lock
fucomp
inc
or
rclb
loopne
sbb
jno
and
test
pop
sbb
mov
sbb
mov
pushf
cmp
jno
je
cs
pop
adc
push
ret
add
sub
dec
ljmp
xor
ja
push
mov
shrl
xchg
sub
pop
fisubrl
ljmp
sbb
adc
dec
orb
sub
movsl
jnp
jae
xchg
std
loope
mov
jae
cld
jno
xchg
cli
sbb
loope
imul
arpl
scas
cli
dec
push
sbbl
out
xchg
jns
jae
pusha
push
push
imul
cwtl
pushf
addl
popa
fst
mov
xchg
mov
mov
lds
push
sarb
pushf
idiv
mov
test
mov
bnd
negl
aaa
cmp
mov
xor
mov
jnp
add
pop
es
or
inc
xor
add
jo
sbb
inc
in
push
mov
bound
jne
data16
arpl
shlb
stos
test
pop
add
cmpsb
mov
add
shll
arpl
dec
lea
loopne
dec
sbb
adc
cld
xchg
dec
scas
mov
pop
stos
jmp
mov
mov
xor
pusha
add
push
jle
call
inc
mov
jle,pt
sub
and
rcll
mov
lea
mov
jne
sub
jmp
andb
icebp
movsl
add
push
in
lahf
push
push
push
insb
push
bound
jp
insl
rcrl
inc
xor
sahf
dec
xchg
jg
cmp
push
xor
xchg
cmpsb
notb
mov
mov
jmp
mov
test
sbb
insl
les
add
cmp
mov
xchg
jb
mov
jbe
gs
xchg
loopne
imul
repz
pop
dec
sarl
vdivps
push
sbb
mov
xlat
mov
xor
pop
mulb
ret
aam
mov
inc
ljmp
clc
adc
mov
roll
xchg
adc
lcall
loop
mov
sbb
scas
jno
arpl
lds
jbe
repnz
test
pop
jbe
orb
orb
xor
adc
sub
fs
sub
ljmp
mov
xlat
stos
popf
add
mov
lds
lcall
sub
mov
or
mov
inc
fisubrs
jg
adc
insb
sbb
out
push
loop
cli
cmp
sub
xchg
xchg
arpl
lcall
iret
dec
dec
fbstp
mov
mov
mov
fwait
cltd
mov
mov
aas
pop
inc
sbb
xor
popa
fisttps
jb
jge
adc
orb
mov
xchg
add
popa
cmp
jae
sbb
cli
lcall
jns
adc
loop
pop
jge
jecxz
imul
adc
incl
sub
adc
rorl
xchg
cmpsl
mov
in
jle
adc
loope
and
in
sbb
aam
mov
cmp
cltd
scas
add
pop
sbb
mov
mov
movsl
cmp
mov
and
outsl
popf
popa
jae
sbb
aam
sub
push
shll
cltd
jae
jmp
in
rcl
dec
in
pop
pop
pop
shrb
daa
in
or
mov
sbb
imul
lahf
imul
repz
sub
movsl
andl
imul
jne
rcrb
fidivl
pop
inc
jno
jge
xor
mov
cmp
mov
insl
push
xor
mov
cmp
sbb
jns
loopne
mov
xor
lret
in
hlt
sub
cmp
jo
test
or
movl
xor
inc
jle
mov
sub
in
enter
dec
jbe
mov
push
cmpb
mov
jbe
das
xchg
std
xor
test
leave
cli
lds
les
fwait
lcall
xchg
bound
xlat
and
push
daa
les
push
xor
inc
cmp
mov
lods
or
and
decl
outsl
mov
pop
leave
sbb
push
pop
notl
call
and
inc
dec
pandn
xchg
add
stos
in
ljmp
push
gs
mov
adc
dec
push
sbb
xchg
push
ja
mov
popf
fstps
sti
jno
sub
sub
lret
nop
mov
or
repz
into
insl
jnp
testl
popf
popf
jl
aad
cld
pop
dec
cwtl
xlat
and
push
adc
lea
xlat
les
fsubl
call
in
dec
fisttpl
mov
fcoml
mov
jae
jle
dec
jp
outsb
daa
xchg
mov
lds
nop
jne
int3
fcmove
xlat
push
xlat
testb
or
cmpsl
mov
dec
mov
in
scas
addl
mov
push
push
cmp
dec
xor
mov
aad
xchg
cmp
cmp
arpl
pop
adc
int
dec
jb
jle
mov
cmp
es
sub
or
call
sbb
rclb
cmpsl
jmp
inc
outsl
int3
fistl
icebp
aad
sub
das
icebp
xor
adc
mov
out
aas
xchg
repnz
lret
lahf
xchg
hlt
add
je
mov
out
jmp
pop
cmpsl
mov
cltd
enter
in
ret
sub
mov
cmc
frstor
aas
add
add
rclb
sar
fidivl
pusha
pop
outsb
rcr
push
leave
mov
fcomi
xor
mov
and
sub
or
pushf
jae
lods
lock
add
mov
and
imulb
fdivrs
fbstp
imul
ss
fwait
cld
out
jge
push
mov
jmp
cmpsb
adc
in
xor
test
stos
cmp
shl
dec
sbb
jle
mov
stos
je
test
sub
and
mov
cmpsb
out
pop
movsl
cs
mov
cmp
sub
pop
xchg
xor
sar
fnstcw
lock
inc
xchg
cli
loopne
leave
xchg
or
adc
fxch
lds
jno
sbb
dec
xor
mov
add
shrb
pop
sahf
sub
iret
cs
into
mov
stos
pop
mov
sbb
xchg
mov
sti
adc
jge
rcrl
add
mov
jmp
out
inc
lcall
adc
shl
adc
pop
xchg
test
add
pop
jl
and
loopne
pop
pop
cmp
fcmovnb
mov
jg
mov
mov
push
js
mov
test
sub
dec
leave
pop
test
add
adc
inc
mov
adc
pop
lock
sbbb
mov
imull
mov
mov
fstpt
adc
mov
mov
pushf
pushf
jno
stc
lcall
xchg
dec
fiadds
aaa
insb
pusha
out
mov
sahf
cmc
jns
aas
outsl
mov
rcrl
jns
jge
loope
jae
je
mov
xor
int3
inc
pop
and
xor
jle
insb
and
repz
lahf
xor
pop
fists
dec
vmcall
mov
lds
sbb
sub
sbbb
sub
aam
mov
push
pop
xchg
inc
mov
jg
in
xor
fisttpl
push
icebp
cmpsb
and
les
mov
mov
lret
jbe
pop
rorl
dec
ljmp
in
cltd
outsl
mov
daa
xorb
bswap
mov
insl
clc
aaa
xchg
push
pop
push
mov
pop
mov
jmp
add
xor
fiaddl
nop
popa
stos
adc
testb
fdivrs
movsb
insb
adc
stos
outsb
jmp
jno
fnstenv
in
mov
mov
movsl
sbb
fstl
out
push
mov
sahf
mov
cld
fildll
cmp
adc
mov
lds
pop
or
jg
jnp,pn
push
push
inc
mov
xchg
sbb
and
xchg
jbe
fadd
push
pop
inc
dec
dec
mov
cltd
in
cmpsl
shll
pop
inc
mov
dec
or
int
jecxz
mov
aas
fidivl
fs
mov
and
xchg
out
and
daa
pop
jle
mov
mov
je
sub
dec
ret
sbb
mov
cmp
and
outsb
sub
clc
gs
mov
push
mov
dec
sub
rcrl
sub
stos
push
jnp
mov
mov
push
pop
clc
mov
dec
dec
adcl
pop
fnstcw
notl
ljmp
or
jmp
push
dec
ss
adc
popf
data16
test
mov
nop
imul
xchg
push
mov
movsb
inc
xor
inc
ds
fmul
cmp
mov
xchg
cmp
xchg
insl
jmp
inc
mov
add
xchg
leave
mov
scas
movsb
je
pusha
mov
mov
out
xor
out
lock
pop
loopne
push
push
fistl
xchg
inc
sarl
fwait
ret
out
cs
lock
jnp
jae
push
fwait
cmp
nop
mov
pop
mov
or
push
push
add
rep
out
jmp
mov
cmp
fs
fbstp
adc
adc
xchg
repz
jp
dec
jo
stos
add
mov
sbb
xchg
rcll
pop
enter
inc
enter
adc
xlat
imulb
mov
cmp
mov
lea
repz
add
jno
cmpsb
out
cmpsl
jno
es
or
and
sub
dec
outsl
int
mov
push
and
in
rclb
cmpsb
std
in
popa
sbb
mov
mov
sbb
xor
mov
dec
bound
or
ja
cmpsb
sbbb
clc
jbe
fildll
mov
adc
or
test
jl
hlt
divb
ret
dec
rolb
test
clc
pop
adc
sub
push
stc
cs
sbbb
int3
fstpt
ss
cmp
jmp
mov
dec
push
shll
insb
iret
dec
testb
sar
int3
jno
movsl
mov
or
stos
cltd
test
inc
push
xchg
mov
repz
xchg
jp
push
and
cmc
jb
ret
pushf
xchg
or
repz
in
mov
push
es
jle
jae
int3
jle
jg
ljmp
xchg
xchg
clc
data16
mov
jns
mov
mov
cmp
fs
test
push
repnz
mov
out
sbbb
sub
xor
mov
cmp
aaa
imul
orl
and
icebp
shrl
xchg
xchg
jge
sub
repnz
mov
fistps
dec
int3
nop
ret
xchg
fs
arpl
push
pop
mov
xchg
or
xchg
aam
xor
or
ds
dec
inc
sub
fiadds
bswap
adc
adcl
pop
or
cli
leave
int3
mov
je
and
push
or
es
mov
cmp
push
fstps
fisttpll
shl
addb
es
int3
add
int
pop
aad
adc
dec
pop
loop
fwait
clc
std
testb
push
mov
xchg
mov
mov
daa
out
rol
jns
pusha
pop
push
xor
fcmove
stc
stos
out
int
xchg
ret
sub
adc
jo,pt
js
cmp
xor
imul
faddl
popa
les
push
and
jns
cmp
aad
pushf
xchg
adc
dec
jecxz
sub
add
push
sbb
outsb
insb
xchg
lret
cltd
pop
cmp
mov
imul
in
cmp
in
mov
inc
xorb
fisubs
inc
inc
jle
movsb
enter
jbe
cltd
cmp
mov
xor
push
xorl
test
mov
pusha
mov
xchg
cmp
xchg
jl
jnp
push
mov
test
push
dec
dec
pop
adc
and
out
pop
les
mov
jnp
aas
enter
lcall
sub
les
scas
sbb
cmpsb
and
jnp
ds
sahf
and
sbb
mov
enter
ja
test
stc
enter
inc
adc
push
leave
pop
xchg
xlat
dec
mov
int
xor
rorl
pop
aam
adc
stc
push
int
imul
jnp
int
jge
popa
cltd
sahf
add
push
ja
in
stc
fidivrs
cmp
insl
cmpl
mov
test
test
xchg
inc
fyl2x
mov
add
cmp
or
je
das
cmp
pop
lock
cmp
and
pop
xor
mov
roll
in
or
jo
add
xchg
jge
shlb
xchg
mov
mov
adc
iret
cmp
xor
sub
mov
addr16
add
stc
jbe
and
xor
mov
jo
enter
or
aas
sub
mov
add
jae
movsb
andb
mov
jne
jmp
add
mov
notl
in
andb
shll
sub
lret
je
fmuls
mov
push
cmc
test
push
dec
xchg
adc
je
and
js
cmpsb
test
fisubl
cmp
movl
das
jnp
repnz
mov
push
imul
mov
mov
mov
xor
sbb
stos
or
fsts
add
dec
sbb
cmpsb
lea
inc
repnz
adc
cmpsb
and
pop
pop
in
mov
or
mov
adc
sub
leave
lahf
mov
xchg
data16
cmpsl
fcom
xchg
dec
add
bndldx
add
dec
aaa
sbb
xor
jge
aaa
lods
cmc
ret
or
push
ljmp
pop
jg
inc
je
mov
in
divl
inc
pop
ret
pop
packuswb
pop
sbb
fcompl
es
mov
sub
or
push
inc
mov
push
push
inc
mov
adc
clc
dec
mov
push
movb
xchg
jl
in
out
adc
ror
adc
pop
sub
or
add
xor
jg
mov
xchg
das
push
sub
int3
jnp
pop
mov
roll
xchg
xorl
xchg
push
xor
les
inc
push
and
lods
sub
iret
push
cwtl
inc
rcrl
addl
mov
jnp
pop
and
pop
add
lret
xchg
sbb
popa
hlt
xor
sub
lret
insl
jl
sbbb
insl
inc
fs
xor
or
es
enter
push
cmc
aas
addr16
ljmp
push
or
xor
jnp
cmp
push
lret
xchg
adc
xchg
xchg
inc
mov
dec
and
and
repz
mov
notl
cli
add
inc
jnp
lods
mov
aas
ljmp
mov
cmp
cmpb
ja
mov
jno
cmp
cmc
lods
sti
lret
insb
dec
fwait
adc
cmpsb
out
in
cmp
dec
stos
cmpsl
sub
std
lret
cld
push
xlat
cmp
outsb
dec
add
mov
mov
outsl
mov
mov
mov
test
mov
cmpsb
mov
lret
adc
sub
or
shrl
sub
lods
cwtl
test
adc
push
jmp
push
lds
jnp
cmpsl
stos
jl
sbb
out
jg
clc
jbe
push
pop
inc
xchg
cltd
pop
div
sub
cmp
lahf
pop
jmp
cli
test
jae
out
push
imul
jmp
add
fwait
ljmp
jo
sbb
and
js
cmpsb
jno
mov
test
movsb
les
fdiv
imul
adc
subl
out
jb
repz
inc
pop
sbb
insb
arpl
scas
sbb
mov
je
and
xchg
out
rcrl
out
mov
mov
enter
imul
pusha
inc
push
dec
xor
repnz
jns
aad
int3
inc
sahf
adc
adc
sub
out
pushf
sbb
adc
cmc
out
clc
mov
mov
lock
test
out
ljmp
jno
cmpb
scas
mov
out
add
pusha
lods
push
pop
pop
jbe
sti
mov
lods
cmp
dec
inc
push
dec
scas
fcomps
inc
dec
cmp
cltd
faddl
fisttps
inc
enter
fsubrl
lcall
dec
cmp
insl
or
dec
aad
mov
lcall
xlat
je
xchg
mov
fldenv
aam
shr
xorb
in
lahf
inc
lds
lahf
mov
loopne
pop
cmp
and
and
inc
aad
cmp
xor
insb
shrb
cmc
hlt
add
dec
cmp
sbb
cmp
insl
test
cmp
outsl
mov
or
in
inc
stc
dec
xchg
xor
push
mov
mov
cltd
mov
jl
dec
mov
mov
shr
jo
bound
scas
rclb
cmp
sub
fcmovbe
push
into
xchg
jb
pusha
push
fs
lods
in
inc
xor
fmuls
cs
add
test
aas
roll
jge
jno
js
jecxz
repnz
push
pop
mov
outsl
fbld
xchg
out
pushf
outsb
sbb
xlat
fisubs
cmpb
adc
jg
push
fcomps
add
pushf
jg
inc
jbe
cli
inc
dec
xorb
out
jne
push
jecxz
dec
popf
pop
es
or
sub
sti
stc
add
xor
mov
inc
ss
pop
cmp
rcll
out
cmpsb
and
inc
rolb
enter
sbb
dec
jp
shl
pop
cmp
pop
fldcw
fsubrl
mov
mov
jmp
rcrl
cmp
ret
dec
mov
enter
enter
clc
out
xor
push
mov
mov
xchg
adc
add
inc
shll
xlat
and
mov
cmpb
repz
mov
dec
scas
xchg
int
cli
sbb
cs
gs
lcall
in
into
add
out
mov
mov
pop
adc
mov
inc
push
pop
or
hlt
mov
clc
mov
stos
call
fsubr
mov
test
test
loopne
lods
adcl
cmpsl
pop
arpl
cmp
sbb
cli
add
loop
push
fs
push
inc
lods
push
jae
pop
fs
adc
cmpsb
jae
mov
fimull
dec
andb
shlb
das
mov
cwtl
mov
mov
out
fistpl
data16
jb
outsb
jmp
push
movsb
mov
lahf
mov
xor
jmp
jb
call
out
xchg
sbb
push
scas
scas
andl
aas
sahf
mov
scas
in
stos
mov
aaa
lods
fdivl
add
fidivs
les
fbstp
xor
jge
enter
mov
inc
insb
cmp
lcall
jmp
loope
insl
adc
loop
dec
xor
cmp
pop
xor
mov
and
xchg
or
icebp
inc
jl,pt
ret
jle
mov
pushf
xchg
pop
leave
cld
jnp
sub
adc
dec
int3
cmpsb
sub
bound
and
xchg
gs
dec
bound
inc
mov
push
dec
sbb
jbe
dec
xor
push
mov
or
daa
jle
sbbl
xchg
add
shr
test
int
sbb
subb
mov
adcl
dec
jb
cmp
fiadds
pushl
mov
inc
pop
popa
xchg
push
fimull
dec
aas
inc
imul
xor
inc
jecxz
aam
inc
sti
shlb
lock
shr
dec
inc
sub
pop
sti
ror
mov
cmp
cmpsb
and
jle
lods
push
jg
mov
xchg
adc
jb
std
sbb
cltd
mov
mov
sub
data16
pop
call
aam
cmpb
xchg
fs
icebp
outsb
inc
add
inc
mov
out
inc
subb
pop
adc
mov
rorl
mov
mov
das
aaa
orb
lods
iret
mov
push
xchg
nop
int3
mov
add
sbb
mov
sbb
shl
inc
adc
std
test
sub
mov
and
ljmp
negl
mov
xchg
mov
push
xlat
xor
nop
clc
or
and
and
sub
les
xlat
sub
mov
xchg
stc
xchg
or
test
enter
fldenv
or
push
xchg
fmull
mov
jmp
rcr
sbb
aaa
rorb
movsb
mov
loope
xor
sti
and
das
jmp
mov
les
dec
xchg
cmp
pop
fs
stos
loopne
mov
xor
mov
pop
mov
lock
in
loopne
gs
clc
mov
leave
push
mov
ficompl
repz
repnz
fcomps
sbbb
ret
jo
std
notb
dec
mov
jae
mov
mov
stos
mov
mov
fidivrl
cmc
push
push
sub
pop
outsb
push
pop
jmp
push
daa
adc
cltd
push
aas
inc
or
fstpl
xchg
movsl
jnp
pop
cs
in
or
pop
cmp
or
jno
shr
mov
inc
push
mov
pop
divl
add
pop
test
clc
dec
mov
dec
adc
mov
ffreep
push
and
std
mov
adc
in
inc
add
inc
fiadds
push
and
mov
jo
in
les
hlt
js
add
lcall
adc
add
ret
xor
xchg
xchg
add
add
xlat
sub
mov
pop
pushf
inc
mov
iret
aam
bnd
out
or
rclb
mov
ret
push
arpl
pop
imul
push
sbb
push
and
jne
adc
push
test
outsl
in
outsl
pop
or
xorb
jb
mov
cmpsb
sarb
mov
in
and
dec
cmp
jne
loop
cmp
das
nop
popa
xchg
pop
into
movsl
shll
push
inc
cmpsb
int
rcr
lods
sub
popa
pop
add
sarw
and
push
jbe
test
aas
and
xchg
xchg
and
cmp
or
pop
mov
shr
mov
imul
add
leave
push
popf
or
adc
and
jl
or
rclb
push
mov
mov
hlt
loop
xor
jmp
adcb
mov
test
lock
popa
adc
jg
xchg
mov
shlb
in
dec
adc
lock
inc
push
or
enter
cmp
sbb
sbb
jns
dec
mov
cmpsb
adc
and
inc
add
push
jne
std
inc
lcall
xchg
add
fdivr
xchg
and
hlt
pop
inc
fcoms
sti
lret
mov
or
pop
add
call
jmp
out
jbe
jmp
imul
cmpsb
bound
and
inc
jno
jp
stos
mov
mov
mov
int
mov
lods
add
xor
mov
jl
pop
into
scas
test
das
and
jg
push
aaa
pop
js
ds
pop
idivl
das
mov
lock
cmpsb
inc
stos
inc
shrb
fisubrs
jl
sbb
imul
dec
jbe
add
hlt
adcl
cmp
in
pop
in
fidivrs
in
outsl
ret
adc
mov
sbb
aas
outsl
outsb
inc
pushf
inc
inc
add
adc
movb
adc
pop
es
add
xlat
aas
xchg
cmp
sub
in
jno
daa
or
jmp
in
int
cltd
ljmp
xchg
pop
rorl
xor
inc
popa
cmp
mov
jp
xorb
pop
movsb
jmp
push
insb
mov
sub
dec
push
adc
div
inc
clc
icebp
adc
rol
adc
mov
arpl
or
or
aas
push
addr16
xor
jnp
inc
pushf
mov
mov
jbe
stc
test
mov
push
out
mov
jl
fidivrs
scas
inc
push
pop
out
enter
push
call
cmc
xor
lods
andl
aam
hlt
stc
cmp
and
sub
jbe
inc
jp
xchg
add
add
aas
xor
aam
fwait
jo
or
enter
jno
add
movsl
mov
shll
iret
cmp
mov
rclb
out
cwtl
mov
test
or
leave
popf
in
cmp
dec
js,pt
lret
std
mov
mull
add
into
scas
daa
push
loope
pop
sub
cmp
repz
ficompl
adc
sbb
xchg
xor
sahf
shll
xchg
sbb
lret
orb
mov
ret
push
pshufw
cs
es
movsl
lods
ds
out
cs
sub
xor
jmp
pop
int3
mov
cmp
mov
je
fildll
lret
arpl
ds
adc
pop
imul
fwait
stos
xchg
jle
rcr
sub
inc
in
flds
mov
jl
add
mov
cli
cmc
xorb
push
aad
xorb
lods
mov
mov
rorl
jl
dec
cmp
fdivrl
mov
sub
out
push
lods
cltd
mov
dec
imul
inc
or
aaa
inc
or
test
fmull
push
jbe
in
repz
xor
jle
sub
sub
ret
int
or
add
xchg
mov
shrb
and
sahf
xchg
insl
push
pop
inc
sub
sbb
loop
repnz
dec
push
stos
jp
movsl
je
cmc
ljmp
push
inc
sub
add
adc
push
aam
pavgw
inc
lahf
arpl
hlt
and
nop
xchg
std
sahf
or
iret
adc
inc
je
shlb
push
push
mov
call
je
jmp
ja
iret
lcall
popa
fsubrp
inc
xor
insb
fsubrs
shrb
sub
data16
lret
mov
push
mov
push
jae
xor
push
mov
jae
dec
lret
dec
scas
add
inc
cmp
dec
ds
and
xchg
adc
push
fbld
adc
clc
mov
inc
das
testl
add
in
std
aas
push
call
das
lcall
ljmp
jae
push
mov
mov
pop
lods
rorb
cmc
dec
inc
rcrb
pop
adc
or
adc
out
adc
in
push
test
xchg
insb
popf
push
decl
push
imul
pop
sub
subl
cmp
lret
sbb
ret
xor
sub
push
jg
cmp
and
dec
mov
nop
inc
fwait
out
jmp
sub
or
add
rorl
mov
pusha
pop
cs
mov
ret
push
clc
das
call
lcall
ss
das
pop
test
cmp
andl
push
mov
dec
mov
insb
sti
or
sub
add
sbbl
bswap
mov
xlat
inc
cmp
xchg
repz
xlat
sbb
cmpsl
std
mov
incb
arpl
cmpsb
jns
adc
pop
roll
loopne
xchg
fstl
dec
cmpsl
pop
or
and
xor
fimuls
inc
jecxz
sarb
push
in
push
jle
or
push
lods
in
and
add
ds
test
insb
mull
sbb
in
add
and
out
and
push
cmc
mov
cltd
push
mov
adc
push
mov
aaa
hlt
sub
mov
data16
mov
adc
add
fdivrl
push
push
cltd
shlb
cmp
ret
hlt
lds
cs
ficoml
lock
xchg
mov
sub
jl
xor
xor
jmp
mull
test
movsb
les
pop
jne
sub
jbe
push
mov
inc
fisubl
outsb
add
mov
sub
sti
sub
ljmp
insl
adc
fdiv
movsl
inc
adc
decl
dec
dec
dec
pop
nop
jbe
sub
and
mov
clc
fnstsw
ficoml
sub
or
ljmp
sbb
inc
jmp
stc
dec
out
sbb
mov
jge
sti
jno
es
jo
sbb
sub
in
adc
or
in
decb
test
adc
rol
shll
mov
mov
mov
lods
cltd
xor
dec
fpatan
jo
xlat
cmp
insl
enter
call
jle
xchg
aas
inc
out
mov
loope
cmpsl
cmpsb
sub
outsb
cmp
push
cmp
jno
in
and
adc
lock
xchg
push
cmpsl
jo
nop
xchg
and
div
pop
and
pusha
pop
out
int3
loop
es
pop
or
or
fwait
popa
fs
test
jp
add
stos
loope
or
jno
ror
repnz
jne
sub
dec
in
fisubrl
out
aas
mov
in
push
sub
flds
mov
sar
sar
push
push
mov
adc
int3
fisttpll
sbb
sub
iret
es
mov
jns
jl
mov
xchg
dec
mov
addr16
movsb
xchg
sbb
int
xchg
test
imul
mov
push
jo
cmp
mov
icebp
sbb
and
pushf
neg
xchg
fcoml
popa
cmp
push
pop
jecxz
les
lcall
lds
jmp
push
repz
sub
mov
fs
stos
adc
sbb
mov
dec
adc
mov
aam
fldenv
mov
js
cmp
adc
mov
rcrl
inc
out
dec
outsl
mov
cld
xchg
lds
xchg
adc
shrl
pop
or
or
jmp
mov
mov
mov
aad
inc
pushf
sub
fs
pop
shlb
cwtl
push
arpl
dec
jg
mov
sub
stos
adc
or
xchg
sarl
add
fcoml
aaa
arpl
mov
pop
je
das
and
leave
lock
pop
push
test
pop
in
rolb
mull
movsb
test
js
mov
jmp
sub
sbb
mov
push
xor
ret
mov
jne
lcall
pusha
pop
scas
dec
lret
fisubs
mov
mov
out
mov
data16
xchg
mov
cltd
out
jbe
pop
subl
or
or
cmpl
loopne
sbb
out
stos
adc
lahf
pusha
jne
or
lods
dec
call
xchg
or
mov
add
leave
push
mov
inc
rclb
pusha
es
xchg
xchg
sbb
ljmp
fidivl
cmp
test
mov
or
pusha
adc
iret
rcrb
jne
sarb
int
aad
inc
loop
xor
les
std
push
loope
test
shll
push
adc
mov
insb
push
sub
nop
cltd
popa
dec
mov
lods
repz
mov
in
lods
xchg
iret
mov
dec
pusha
fwait
xchg
neg
lods
pop
enter
pop
stos
jle
jns
nop
dec
inc
sbb
pushf
fisttps
mov
pop
push
push
cmpsl
jne
jmp
clc
rolb
ds
sti
push
in
sub
and
mov
jo
fcoms
cmp
push
lods
sbb
xlat
subl
test
loop
ja
int
imul
out
mov
out
or
andl
cmpsl
mov
and
cmp
lret
adc
lea
out
subb
cld
cmp
ret
push
insb
push
cs
cmp
cmp
push
xchg
insb
jmp
and
outsb
push
mov
pop
imul
mov
xor
mov
rclb
xor
lcall
and
mov
xchg
mov
test
dec
push
push
insl
hlt
jecxz
jp
mov
loop
dec
fwait
test
jecxz
cmp
ror
mov
aam
ds
and
aam
rorl
stos
push
stc
in
push
and
scas
mov
idiv
cmp
gs
mov
sarl
lret
std
fwait
add
cmp
sbb
cmp
es
ret
pop
scas
adc
cltd
sub
insb
or
jb
movsl
mov
into
sbb
cmp
clc
loope
sbb
inc
xlat
ljmp
pop
notl
sbb
les
jg
dec
insb
jle
sub
jge
stc
sub
cmp
lods
sbb
or
jg
cmp
negb
mov
xchg
cmp
or
mov
push
je
popa
inc
sub
cmp
cmp
std
inc
jmp
pcmpgtw
ret
ror
pop
or
push
bound
shrl
sbb
jecxz
dec
or
std
movsb
or
out
adc
inc
xchg
mov
jno
paddusw
int
sbb
jle
clc
lods
test
cwtl
movsl
xchg
or
fcomip
sub
lods
inc
or
in
push
mov
push
dec
leave
mov
loop
out
push
and
pop
std
iret
js
jae
inc
sub
jnp
scas
cmp
leave
inc
adc
pop
test
jnp
and
hlt
xor
aaa
cmp
inc
pop
inc
daa
scas
xchg
cmp
mov
dec
xchg
mov
xchg
movsb
sti
mov
sub
sub
mov
sarb
or
dec
lock
sub
pop
lcall
pop
rorb
mov
cmp
push
push
and
adc
out
sub
cmp
cmc
mov
popw
outsb
xor
lret
mov
enter
sub
sub
shlb
xchg
xchg
dec
out
xor
loop
or
shrl
stos
lret
xchg
out
add
push
test
nop
in
mov
cmp
mov
mov
stc
mov
inc
fsubrl
mov
je
mov
icebp
mov
mov
or
jo
xor
negb
pop
cs
pop
xchg
fisttps
mov
adc
inc
mov
xor
outsb
cmp
inc
popa
ret
xchg
cltd
je
scas
pusha
and
xor
adc
jg
inc
pop
aaa
mov
push
ror
out
pop
mov
das
ret
repz
ret
repnz
jecxz
push
pop
lcall
or
js
push
es
sbb
fwait
in
pushf
int3
xor
or
bound
jnp
jl
sub
xor
out
mov
push
mov
jne
sbbb
xchg
jge
aad
sub
je
stos
pop
jmp
subl
or
test
jnp
mov
push
pop
mov
jae
xchg
lret
fcompl
jo,pt
icebp
inc
fists
add
mov
mov
jl
icebp
scas
test
or
or
sub
ret
and
dec
jo
sahf
xor
lock
or
xchg
shll
pop
cmp
out
sbb
or
xlat
mov
idivl
push
clc
pushf
adc
and
aad
mov
and
cs
pop
scas
or
mov
xchg
push
addr16
or
aas
stc
fs
add
mov
in
mov
clc
or
scas
cs
push
mov
iret
int
adc
fs
and
cmp
inc
ret
dec
lods
into
pop
xor
lret
lahf
in
andb
popa
out
lea
inc
xor
jg
ljmp
in
push
mov
fs
movsb
call
and
adc
sahf
cmp
inc
jp
sub
xchg
std
adc
outsl
je
in
jbe
outsl
call
in
cli
call
fdivp
lret
mov
outsb
add
jns
add
js
fistpl
jb
aas
jmp
cmp
xchg
ffreep
jb
out
stos
and
out
repnz
adc
cld
cmpb
push
push
push
cmp
add
call
cmc
sarb
mov
adc
add
pushf
xchg
out
aam
loopne
lcall
aas
call
jno
pop
xchg
stos
sbb
sbb
rep
cmpsb
movsb
pop
jo
sarb
mov
sbb
jge
push
sub
pop
add
mov
pop
xchg
aam
pop
add
daa
in
or
or
push
xor
js
mov
enter
out
jb
inc
dec
pushl
and
xchg
push
xchg
add
imul
xchg
lret
movsl
mov
hlt
stos
mov
test
test
cli
jp
and
repz
sbb
iret
iret
add
cltd
das
cmovbe
sbb
das
xor
movsb
cli
jne
xchg
pop
mov
cmp
lods
mov
stos
int3
dec
shll
fwait
movsb
sub
ret
clc
cmp
sahf
xchg
and
cld
and
mov
inc
inc
mov
sbb
mov
cmp
add
inc
and
jbe
cmp
inc
mov
inc
rorl
in
jle
test
int3
cmp
pop
sti
or
mov
jecxz
pop
and
inc
stos
test
dec
xchg
inc
sub
mov
xchg
cli
push
dec
lods
cmp
mov
xchg
inc
mov
and
mov
push
lea
mov
jecxz
adc
mov
dec
ss
iret
dec
aaa
pop
out
call
jae
mov
jbe
mov
xor
and
cs
or
roll
jge
xchg
je
add
ljmp
push
mov
mov
loope
out
scas
mov
and
ficompl
sbb
mov
ret
sbb
call
js
lock
cltd
sahf
rolb
lret
sbb
dec
out
adc
loop
mov
dec
hlt
or
jno
call
and
lcall
mov
stc
inc
out
lock
mov
cmpsl
outsb
pushf
leave
add
test
aad
jns
mov
sahf
mov
sub
std
lahf
lahf
pop
test
imul
inc
xchg
jns
jbe
lods
daa
mov
cmpsb
lahf
lahf
scas
cld
aas
mov
xchg
lods
lods
and
imul
cmp
loop
mov
mov
xchg
fstl
jp
scas
out
mov
sbb
mov
daa
and
jae
mov
sub
dec
test
mov
adc
pop
in
add
jnp
ss
inc
leave
test
cmpsb
daa
lret
insb
mov
sub
mov
xchg
xor
sub
ljmp
sbbb
lock
cmp
xchg
sub
repnz
adcb
xacquire
pmaxub
dec
je
mov
push
dec
mov
add
pop
or
pushf
stos
leave
dec
insb
fndisi(8087
ss
clc
rolb
scas
adc
or
xor
sub
sarl
jmp
sub
inc
mov
sarl
and
aad
cmc
mull
jb
ss
mul
xchg
sbb
enter
or
add
loop
test
cmp
push
jl
jl
xchg
and
and
mov
ret
jge
jle
movsb
push
test
imul
fsts
rolb
bound
sahf
adc
inc
lret
xor
test
cmp
jge
sahf
pop
inc
adc
pop
in
or
ss
jbe
adc
subb
adc
dec
pushl
or
jb
cld
dec
inc
push
test
dec
xchg
and
stos
mov
xorl
stc
test
fwait
dec
out
lcall
bound
jecxz
arpl
cmpsl
add
dec
push
cmp
jo
movl
xor
push
das
sti
xor
mov
fstpt
cmpsb
test
mov
cmp
out
add
test
sbb
test
lret
enter
and
xchg
in
addb
sub
mov
jbe
xchg
cld
or
int3
mov
or
xor
jl
mov
xchg
jne
inc
pop
fmuls
addb
inc
mov
test
and
and
pop
mov
bound
lock
in
pop
mov
mov
adc
gs
mov
cmpsl
cmpsb
stos
aaa
das
in
rclb
adc
enter
movsb
push
pop
push
dec
fimuls
and
sub
fmuls
loope
and
fiaddl
or
ret
jbe
mov
sbb
dec
aas
cmp
xchg
sbb
push
add
cmc
mov
inc
ja
mov
xlat
xchg
xchg
lcall
add
gs
cmp
xchg
pop
inc
stos
sub
xor
inc
mov
push
mov
sti
xlat
fstl
sbb
stos
fsubrp
push
pop
jo
pop
repz
outsb
fs
outsb
sbb
enter
dec
adc
stc
mov
push
cmp
lcall
xor
mov
xchg
xor
test
call
ljmp
popa
xor
test
or
sahf
mov
mov
loopne
xor
and
leave
icebp
cmc
or
sahf
xor
sub
sbb
mov
jecxz
mov
les
sti
iret
mov
ja
pushf
arpl
mov
mov
imul
je
pop
cmc
lret
iret
shlb
or
leave
aad
out
je
lds
aam
mov
dec
aas
std
out
inc
add
fistl
sahf
jmp
or
sub
imul
ror
cs
mov
mov
outsl
imul
pop
arpl
or
int
in
inc
testl
sub
mov
popa
xchg
mov
ret
or
adc
dec
inc
inc
stc
iret
fwait
call
cmp
adc
fists
rcll
and
inc
pop
dec
sbb
movsb
mov
bound
mov
in
cmp
xchg
mov
dec
divb
jbe
mov
shrl
out
mov
arpl
pop
ds
mov
ja
fmul
cli
or
clc
sbb
adc
xor
sbb
mov
in
xchg
inc
add
rcr
push
dec
dec
faddl
out
fiaddl
and
cmp
je
push
and
pop
sbb
mov
add
push
dec
es
fmull
hlt
push
lret
ret
rolb
daa
mov
add
sahf
jb,pn
inc
das
pop
lret
out
data16
pushf
hlt
sub
push
pop
pop
jecxz
mov
gs
mov
sub
mov
mov
pop
cs
scas
das
addr16
push
jbe
mov
cmp
sub
xchg
jmp
mov
mov
mov
xor
xchg
mov
mov
jb
insl
stc
jecxz
sbb
lret
loop
nop
mov
es
cmp
dec
push
xor
adc
sbb
insl
jno
mov
mov
xor
mov
es
pop
sti
faddl
inc
push
pop
adc
mov
inc
xchg
fs
mov
xchg
stc
insb
pop
jecxz
dec
cwtl
decl
fisttpll
sbb
daa
xor
mov
mov
sbb
mov
imul
adc
test
popf
int
sbbl
jle
xor
mov
lock
or
leave
dec
pusha
add
jno
nop
inc
loop
mov
jbe
icebp
mov
leave
loop
movsl
cmp
and
cmp
cli
ret
hlt
lahf
pushf
push
dec
or
or
stc
and
and
xor
xchg
cmp
dec
lea
and
mov
jecxz
sbbb
stos
sub
sbb
add
mov
xor
add
ljmp
sub
xor
lret
sub
ja
out
rcrb
push
adc
loop
in
xor
mov
mov
xorb
sti
xchg
adc
or
xchg
push
popa
jo
dec
and
xlat
imul
in
xchg
mov
enter
jp
dec
jae
std
addb
dec
fists
sbb
jnp
jns
jo
push
icebp
push
cmp
out
shrb
dec
lea
and
push
push
test
out
fninit
aaa
sbb
xchg
scas
xor
sub
add
das
add
in
pushf
sub
ljmp
stc
mov
jl
cmp
xchg
mov
cltd
dec
mov
inc
mov
movsl
mov
push
mov
mov
pusha
lods
jl
sbb
jb
in
push
mov
add
push
aad
les
iret
sbb
sti
jl
mov
push
push
sub
pop
sbb
push
scas
jle
xchg
xor
push
jb
pop
icebp
and
lods
inc
adc
pop
lods
and
mov
push
jb
cmp
pop
xchg
xlat
pusha
or
mov
xchg
std
mov
dec
jns
add
cli
lods
imul
fwait
pop
cwtl
jbe
and
popa
xchg
and
les
adc
fwait
mov
stos
fistl
adc
add
mov
xchg
push
leave
inc
mov
stos
add
adc
les
dec
inc
add
outsb
insb
ret
xchg
xchg
pusha
adc
ret
loope
mov
xchg
pop
push
lret
mov
test
enter
lock
fsub
stos
xor
stos
or
xchg
adc
push
xor
pop
xchg
mov
mov
movsb
push
jle
add
arpl
js
xor
dec
sbb
repz
es
js
cmpsb
loopne
gs
xorb
sub
test
push
jno
dec
test
xchg
data16
sbb
cmp
cmp
out
popf
inc
add
or
call
add
lods
enter
dec
insb
mov
cmp
testl
push
ficompl
xor
add
lret
iret
stos
fwait
loop
movsb
mov
cmp
in
jb
xlat
into
push
stc
lods
and
cmp
and
dec
lds
test
mov
jp
mov
jmp
imulb
in
mov
push
mov
mov
out
push
jl
ret
xor
sbb
xchg
pop
push
adc
push
push
adc
cmp
lock
mov
mov
or
and
jae
in
adc
out
in
aam
pop
jl
sbb
enter
mov
sbb
roll
int
xlat
les
test
cmp
mov
cmpsl
fmuls
mov
jne
pop
mov
mov
call
les
outsb
int
lcall
mov
lods
icebp
leave
sahf
fidivrl
mov
jne
call
mov
cld
mov
in
hlt
or
pusha
inc
ljmp
pop
jecxz
iret
insl
fwait
mov
sbb
stos
cmpsl
dec
xchg
or
dec
jle
cwtl
adc
popf
dec
or
pusha
mov
addb
cmp
pop
mov
pusha
add
xor
in
mov
cmp
pop
daa
movsb
jnp
jmp
xor
cmc
xchg
pop
sub
test
pusha
loopne
js
jbe
sbb
jmp
or
hlt
mov
jbe
dec
inc
ret
jge
cmp
mov
lods
inc
push
mov
int3
stos
fstpt
pop
add
cmp
add
inc
add
ja
cwtl
pop
outsb
imul
xor
movsb
clc
int3
push
fmull
xor
xchg
lea
shll
pop
test
hlt
inc
lods
or
addr16
sbb
lods
jnp
orb
loope
cli
adc
stos
jmp
leave
mov
xchg
gs
xchg
xchg
sysexit
dec
jl
aam
mov
insl
outsb
mov
or
cmp
mov
cltd
outsl
mov
or
stc
jbe
lds
add
jb
test
cmpsb
sti
cmpsl
sub
mov
sub
ds
fs
pop
test
mov
lea
xchg
push
mov
inc
pusha
xchg
pop
out
push
cmp
sbb
pop
outsb
adc
cmp
xchg
jbe
sbb
cltd
lahf
adcb
data16
pop
fiaddl
sbb
cmp
fwait
cltd
and
xchg
push
adc
movsw
push
inc
fiaddl
mov
inc
out
fwait
call
addl
inc
mov
fmul
rorb
pmullw
jp
adc
stc
mov
unpckhps
mov
mov
cmpsl
inc
roll
lret
pop
fildll
add
movsl
imul
adc
dec
dec
les
ss
test
push
dec
or
mov
sbb
scas
jne
sbb
loop
mov
xchg
jmp
and
push
add
adcb
out
pop
sbb
push
outsl
xchg
inc
pushf
dec
xchg
dec
stos
aad
inc
mov
std
arpl
ds
mov
jno
fdivrl
pop
push
xor
push
push
and
push
cmp
shlb
and
xor
rcll
mov
mov
addb
into
fsubrs
leave
es
mull
jmp
pop
outsb
sbb
aas
pushw
and
jbe
imul
inc
movsl
fcmove
lock
popf
cmp
nop
xchg
test
lahf
popf
imul
loop
sbb
push
pop
sub
mov
cmpsb
mov
jae
sbb
imul
testb
popf
mov
iret
sahf
lahf
mov
sbb
cmpsb
push
and
popf
add
sti
jae
dec
adc
jnp
adc
fisubrs
pop
or
fiadds
fldcw
jp
inc
subl
xor
dec
cmp
and
sub
jmp
pop
neg
jg
ljmp
jno
xor
sub
repnz
incl
pop
test
pop
subl
lock
mov
js
mov
adc
outsb
push
mov
and
loope
stc
mov
rep
cli
sub
cwtl
scas
data16
xlat
xor
cltd
jg
add
pop
aam
mov
cwtl
inc
in
into
mov
add
mov
call
mov
mov
popa
pop
cmpsl
inc
mov
or
mov
in
cmc
popf
and
int3
mov
fisttpl
icebp
push
out
xchg
push
std
sub
ds
jnp
loopne
mov
pop
adc
mov
out
mov
fmul
mov
sbb
xor
pop
sbb
cwtl
ficoml
add
pop
xchg
outsb
sahf
and
sahf
dec
adc
iret
inc
add
outsb
jecxz
fsubrl
sti
outsl
cmc
pop
and
push
mull
in
mov
push
xchg
add
cli
xchg
les
xchg
aam
adc
and
aam
out
test
inc
iret
mov
sahf
out
stos
xchg
dec
ret
out
and
divb
push
jnp
mov
icebp
dec
dec
in
dec
out
fwait
andl
jmp
clc
xchg
adc
mov
xchg
cmpsb
insb
dec
mov
add
mov
xor
jl
sub
popa
mov
fnsave
imull
and
cmp
std
inc
mov
and
or
xlat
jecxz
jmp
jne
cld
dec
stos
incl
push
insb
dec
xor
xchg
push
sub
cli
mov
dec
imul
adc
add
fldenv
imul
adc
mov
inc
mov
cmp
and
movsl
movsl
movsb
int
aad
cmc
push
lret
push
cmp
pop
mov
loope
inc
xchg
iret
dec
ror
xchg
mov
dec
mov
inc
scas
fisubl
pop
sahf
in
cmpl
loop
gs
mov
push
test
ljmp
jg
dec
inc
pushf
shrb
into
testl
stos
arpl
mov
std
fisttpll
not
xor
push
or
imul
ficoms
lods
std
cmp
mov
sti
popf
jne
pop
xor
or
loopne
enter
iret
push
fcmovbe
add
and
popa
shl
repnz
cmpsb
xor
push
adc
xlat
mov
push
push
mov
data16
cmpsl
cltd
cwtl
insb
xchg
add
cmpl
fmul
add
sub
add
mov
pop
addr16
xor
dec
loopne
or
int
push
jo
lods
inc
scas
push
lea
adc
inc
push
ja
cld
shl
and
icebp
outsl
das
and
inc
test
lds
lds
subb
pusha
test
xchg
pop
out
aad
repnz
xor
js
int
or
inc
fwait
pop
sarb
lea
push
add
fadds
xchg
repz
iret
jge
cmp
pop
mov
dec
xlat
or
mov
icebp
sbb
jbe
jo
insb
fsts
jg
add
cmp
mov
test
out
mov
xlat
lret
hlt
jo
out
rol
pop
push
scas
stc
dec
mov
andl
cli
cwtl
fnsave
cmp
xor
subl
movsb
in
loope,pt
mov
cwtl
xchg
pop
into
lret
cwtl
jno
aam
lahf
mov
pop
or
inc
mov
or
sub
lret
dec
fadd
in
test
mov
inc
xchg
imul
xor
outsb
mov
fmull
mov
mov
loope
std
xor
imul
adcl
mov
notl
xchg
lea
jb
jg
insb
xchg
and
xchg
lahf
insb
rcll
xchg
stos
mov
pop
dec
loope
repnz
stos
lcall
adcb
mov
popf
sbb
xchg
cld
addb
mov
inc
push
int
rcll
cmc
fcompl
adc
sub
xchg
test
loopne
add
fisubl
lods
aam
std
push
outsl
negb
imul
outsb
jae
dec
xor
cltd
in
inc
pop
sub
cmp
mov
xchg
jb
movsl
testb
cmpsl
add
jns
sub
cmp
pop
sbb
testb
and
add
dec
jnp
or
js
push
push
scas
adc
aas
add
std
cmpsb
sub
imul
lret
movsb
xchg
movsb
lods
outsb
fwait
scas
fidivrl
sub
sub
xor
fists
rcr
xchg
loop
dec
out
xor
mov
xor
sub
inc
movsbl
jge
sub
push
push
call
movsb
insb
loop
mov
cltd
or
lahf
pop
inc
mov
pslld
out
adc
mov
or
fiaddl
mov
mov
cwtl
in
cmp
outsb
je
popf
rorb
jmp
mov
test
jno
dec
pop
rorl
testb
stos
pop
push
mov
mov
pop
mov
push
dec
mov
dec
pushf
push
sub
adc
push
jne
jg
jecxz
inc
sub
pop
mov
sub
add
or
popa
mov
flds
mov
jo
jb
lret
cmp
xor
lock
imull
cli
hlt
fstl
popf
popf
add
addb
sbb
push
pop
lahf
ror
insb
ja
sub
inc
mov
mov
jns
lock
sub
cmp
shrl
orb
and
rol
pushf
inc
mov
mulb
and
movsb
mov
push
insb
sahf
xor
lcall
jp
cltd
xor
je
pop
sub
int3
test
sub
in
leave
adc
mov
sub
scas
push
xchg
pop
push
add
add
lahf
mov
and
and
mov
jl
lea
xchg
pop
aad
or
pop
aas
loop
xchg
cli
mov
insb
sub
mov
lods
mov
xchg
pop
and
insb
andb
fisttpl
push
in
lods
cmp
addr16
sbb
sub
in
adc
fcomi
xchg
in
lock
popf
dec
xchg
imul
movsl
lret
push
adc
mov
jbe
and
outsb
shrl
xlat
ret
popa
js
mov
push
call
and
into
out
rcrl
jmp
xchg
sbb
dec
lret
sub
mov
daa
cmpsb
dec
inc
mov
jns
test
sub
adc
popa
and
sti
adc
mov
mov
and
xchg
and
adc
jno
daa
jmp
mov
seta
jns
leave
xor
mov
lret
and
inc
add
les
repz
or
das
adc
out
or
jnp
and
cmpsl
iret
insb
sbb
outsl
clc
ret
mov
mov
mov
movsb
push
lods
mov
xlat
lret
pop
mov
leave
fwait
pop
sti
leave
imul
sbb
add
dec
mov
adc
enter
jmp
mov
jmp
icebp
add
inc
in
lret
inc
jmp
cmp
movups
or
mov
cmc
sub
loopne
cs
sub
pop
popa
icebp
mov
into
add
movsb
out
bound
xchg
inc
rcrl
dec
mov
out
lods
inc
pop
add
cld
fcoml
jp
dec
js
dec
lods
sbb
and
cmpsb
ja
lcall
leave
aam
cmp
divb
lret
cmp
pop
test
pop
stos
adc
dec
and
inc
mov
adc
cmp
fsubr
arpl
mov
lods
ss
xor
aad
dec
mov
add
mov
adc
dec
shlb
push
pushf
sti
sti
and
pop
adc
jno
aaa
add
movsb
call
mov
out
mov
and
and
and
or
loop
xor
fwait
xchg
jecxz
pop
inc
js
and
xchg
inc
and
mov
cmp
xchg
int
mov
cmpsl
push
cmp
aas
out
cwtl
sub
dec
sbb
jp
and
scas
outsb
in
test
aad
fwait
jb
jne
es
pop
jecxz
daa
xchg
mov
aam
movsb
and
or
je
jmp
insl
inc
push
jo
dec
fwait
and
outsl
ds
loopne
mull
adc
sub
mov
sbb
rcll
pop
shlb
jb
les
xor
adc
dec
int
pop
xor
aas
jo
sahf
xchg
pop
sbb
sti
inc
dec
in
lods
dec
hlt
mov
or
mov
inc
jnp
int3
or
cwtl
arpl
dec
fs
lcall
and
in
std
pop
ljmp
pop
push
sahf
test
cmc
call
push
cmc
mov
pop
or
pushf
xor
pop
mov
cmpsb
das
add
xchg
inc
les
imul
xchg
mov
out
xchg
jg
jge
cli
das
cmp
sbb
sti
mov
lcall
mov
aad
rcll
outsl
pop
daa
jbe
iret
in
or
sbb
adc
rcrl
leavew
dec
repnz
movsl
lret
shrb
mov
sub
jge
movsb
movsl
iret
fwait
rclb
and
in
pushf
data16
fwait
popa
jns
sub
sahf
es
sub
lods
scas
xor
adc
mul
mov
inc
lock
es
adc
test
mov
jg
sbb
pushf
xor
loopne
jno
std
ss
fmull
ja
pop
imul
arpl
mov
and
dec
mov
mov
push
outsb
xchg
scas
pop
lods
mov
scas
addr16
leave
mov
cmc
mov
outsl
push
push
mov
lahf
pop
and
xchg
popf
in
mov
dec
lcall
or
cmpl
das
mov
xlat
mov
cmp
sub
es
push
adc
ss
xchg
das
aam
or
clc
popf
es
and
int3
add
fiaddl
sub
or
mov
mov
ss
mov
mov
imul
sbb
and
stc
xor
incl
out
cmpsb
addl
cwtl
and
mov
shlb
rep
scas
push
lret
push
cli
test
fimuls
out
mov
xchg
stos
ret
mov
jb
loope
xchg
xlat
rorb
aaa
cmp
cmpsl
jae
or
cmpl
jmp
xchg
sub
cli
mov
loopne
aad
cmp
mov
sti
cmp
adcb
js
insl
insl
jne
or
add
xor
pop
insb
cmpsl
repz
insb
sahf
mov
cmc
pop
pop
sub
adc
dec
jne
dec
mov
hlt
and
out
insl
in
loopne
jge
cmc
xlat
lea
dec
rcll
decb
add
mov
xchg
pushf
cmpsb
xchg
pop
shll
mov
leave
sbb
and
dec
test
loope
and
mov
fwait
test
adc
sub
adc
in
ljmp
mov
jbe
es
jecxz
sub
inc
leave
nop
cmpsb
mov
aas
ja
maskmovq
xchg
and
adc
pop
leave
mov
adc
out
mov
fistpl
pop
xor
or
cmp
and
stos
andb
sub
jae
test
xlat
dec
lret
cmp
xchg
sbb
sub
adc
addr16
cmpsl
push
pop
push
in
out
in
mov
mov
xchg
xchg
orl
clc
mov
xor
andb
or
pop
xor
getsec
cli
or
inc
shll
mov
sub
and
in
dec
mov
mov
movsb
jmp
jbe
adc
and
jnp
stc
cltd
test
add
jmp
fiadds
xchg
cld
loopne
dec
shlb
pop
add
outsl
cmp
pop
inc
arpl
loop
dec
int3
out
mov
mov
addl
dec
imul
jno
xchg
cmpsl
add
adcl
loope
ss
ja
xor
mov
xchg
cmp
into
pushl
test
aam
mov
sbb
mov
jle
lods
loop
cmp
jg
mov
jns
aas
mov
out
outsb
cli
jbe
incb
stos
repnz
sbb
mov
and
cmp
mov
pop
xor
stos
lods
mov
mov
cltd
imul
fildl
dec
jg
mov
inc
bound
add
jge
jae
clc
push
ret
sarl
xor
sbbb
inc
mov
fs
rorb
je
push
mov
push
out
push
push
jno
lcall
rcl
lcall
mov
mov
imul
mov
inc
in
xor
and
popf
jno
in
lret
lret
in
lahf
adc
push
fists
stos
std
enter
pop
dec
je
mov
adc
nop
lret
enter
cmpsl
cmp
js
pop
xchg
pop
into
into
jg
adc
movsl
into
fcoms
inc
pop
inc
icebp
sub
adc
add
jbe
jb
fs
ret
imul
das
pop
lea
push
cmpsl
mov
std
sub
addl
or
mov
outsl
insl
cmp
dec
sbb
jb
or
rcrl
arpl
mov
dec
mov
inc
jbe
and
rorb
aad
and
add
xor
shrb
cmp
outsb
pop
shll
inc
pop
jecxz
ss
es
aaa
subl
mov
repnz
jns
lock
cmp
push
and
shrb
std
and
fistl
out
xchg
inc
lods
clc
xchg
enter
xor
jge
sbb
push
jb
rolb
or
xchg
and
cmp
popa
fcomi
ljmp
adc
and
or
jnp,pn
inc
mov
testl
cmp
adcl
add
mov
inc
pop
mov
mov
mov
mov
lock
or
mov
sbb
sarl
sbb
mov
mov
or
jl
into
and
test
hlt
cwtl
jmp
jl
out
ss
xchg
and
cmpsb
sbb
sahf
call
cmp
int3
adc
xchg
addr16
jl
push
mov
inc
dec
fiadds
xchg
repnz
adc
loopne
stos
in
and
inc
mov
jns
pop
jle
jecxz
jb
pushf
imul
les
lret
leave
int
add
xchg
fidivs
push
cmc
and
test
dec
cmp
mov
insl
jg
push
xor
mov
sub
inc
xchg
push
mov
push
cmp
in
xchg
xlat
out
push
js
mov
aad
push
xchg
push
imul
sbb
and
and
lds
xchg
adc
lcall
fsubr
clc
lcall
ja
mov
adc
and
pop
fsubr
hlt
xchg
jo
or
out
pop
sbb
dec
stos
popf
xor
sarb
or
outsb
imul
jb
mulb
or
mov
mov
pop
dec
push
out
aad
adc
and
test
add
add
mov
insb
outsl
adc
cmp
xor
ja
push
mov
add
mov
gs
or
pop
out
scas
cs
or
lcall
repnz
or
loop
push
mov
mov
icebp
xor
mov
cli
pop
xor
cmp
imul
cmp
sbb
rcrl
inc
lods
leave
jb
arpl
pop
push
sbb
fst
out
loop
sti
push
loop
lock
xor
sub
add
fs
ljmp
imul
pop
sub
and
ss
aas
cltd
dec
mov
out
in
cmp
xchg
pop
int
ljmp
fldenv
cmp
sti
fisubrs
cld
dec
push
aas
dec
mov
sbb
cmp
push
add
cltd
dec
adc
loope
xlat
mov
outsl
mov
mov
pop
and
or
or
mov
call
or
outsb
xchg
cmpsl
and
leave
cwtl
xchg
fildl
shlb
sub
dec
mov
mov
iret
add
lcall
nop
pop
sub
clc
fwait
dec
imul
add
pop
fmulp
pop
push
add
mov
insl
lds
les
jns
mov
sbb
sbb
clc
shrb
inc
push
mov
cmp
mov
and
lahf
xor
pushf
mov
rorl
roll
sub
pushf
ljmp
xor
add
lods
imull
rol
ds
or
cmp
cld
inc
fwait
pop
inc
inc
xor
cwtl
inc
lret
pop
pop
pop
xchg
cld
stc
mov
jo
insb
test
push
jno
arpl
jl
int3
jne
cmp
data16
adc
movsl
loope
test
fucomip
cld
iret
outsl
push
mov
lds
pushf
xor
mov
cmp
pop
call
mov
outsl
xchg
pushf
repz
out
add
sbb
sarl
and
mov
mov
pop
lret
loope
inc
push
outsb
or
sbb
add
pop
adc
test
outsl
jp
outsb
sahf
or
pop
dec
sar
mov
adc
iret
test
sti
rcl
or
fcomi
push
aad
mov
nop
test
inc
faddl
andl
jmp
cmpps
cld
pusha
int
inc
xchg
mov
adc
addb
fdiv
xor
sub
pop
aas
pop
clc
inc
out
lcall
adc
jge
mov
subl
daa
repnz
pop
movsb
add
mov
fdivrp
fstl
in
or
jns
shlb
cld
or
out
pop
stos
leave
notb
dec
dec
pushf
rclb
mov
mov
test
shrb
ja
or
pop
push
mov
out
negb
shrl
fisubrl
jb
dec
out
cltd
mov
and
mov
push
ja
out
bound
inc
mov
dec
mov
cli
lret
sub
inc
leave
out
lret
decb
mov
imul
ja
fs
mulb
inc
xor
or
or
pop
xor
sbb
stos
daa
inc
mov
fisubs
popa
hlt
dec
addr16
jno
dec
cmp
scas
dec
sbb
and
cmpsl
je
lds
dec
pcmpeqd
dec
add
inc
scas
xchg
stos
push
jns
sub
fnstenv
xchg
add
jp
dec
mov
out
and
fisubrl
and
push
mov
dec
mov
mov
pop
clc
in
mov
test
es
cld
addr16
stc
pop
jo
cmp
sbb
xor
inc
and
mov
mov
icebp
jp
push
xor
fcompl
xlat
insb
inc
push
mov
push
cwtl
mov
jbe
mov
sub
mov
push
push
inc
out
inc
adc
push
int3
sti
ror
jno
inc
xchg
movsb
push
repnz
fwait
inc
jne
jmp
fdivrs
or
aam
sub
xchg
ret
dec
jne
inc
pop
pushf
cmp
cmpsl
push
stc
int
dec
movsb
xor
and
xlat
lahf
ja
and
pushf
pop
fdivrl
aam
popf
aam
jle
imul
push
sbb
xchg
push
pop
popa
repnz
and
pop
movsl
lods
call
dec
inc
rolb
dec
inc
loopne
xor
mov
jnp
pop
sbb
mov
std
iret
sbb
cmp
mov
lods
mov
adc
or
jecxz
out
adc
outsl
addl
fdivl
adc
sbb
adc
cmp
movsbl
stos
testl
bound
and
pusha
flds
iret
faddl
nop
repz
add
dec
mov
pop
inc
and
pop
bound
shlb
out
imul
dec
cwtl
mov
push
xor
mov
mov
pop
mov
xchg
add
adc
cs
jno
jb
cld
xor
inc
fldcw
mov
add
push
enter
jne
mov
aaa
repnz
fisttpll
fs
pop
xor
push
push
mov
jl
aas
jp
jmp
dec
test
cmc
test
add
aam
ss
cli
lea
adc
cmp
or
mov
stc
daa
cld
push
mov
mov
jae
jno
int
jmp
xchg
xor
fcmovb
shlb
and
and
stos
mov
lret
jg
jecxz
push
and
xchg
sahf
or
ja
sbb
push
sub
pop
adc
pop
movl
imul
sbb
aas
add
and
cmp
sahf
xchg
sahf
ret
in
xor
out
pushf
jl
dec
stos
inc
test
leave
xor
pop
popf
shll
mov
lahf
push
rcrb
inc
cmp
xor
pop
lret
mov
jge
aas
repz
xchg
xor
xor
ds
ret
inc
out
outsb
aaa
pop
dec
lock
add
ret
jmp
loopne
inc
push
outsl
popa
nop
sbb
cmpl
xchg
sbb
lods
or
in
outsl
or
mov
xor
test
cmpsl
clc
mov
out
xchg
sub
dec
and
xchg
mov
xor
cmp
mov
or
or
or
cltd
les
or
repnz
inc
mov
gs
inc
push
subb
pop
iret
into
inc
adc
hlt
inc
xor
jne
aam
pushf
call
xor
sti
dec
xlat
fcomps
fs
mov
xor
scas
into
ss
gs
pop
inc
adc
and
lret
xchg
pusha
add
sub
inc
cs
stc
imul
fwait
int
test
and
lret
and
jnp
mov
es
jmp
cmp
sub
out
faddl
mov
or
scas
adcb
sub
push
jmp
mov
cltd
xchg
cmp
adc
jmp
inc
cmp
repz
or
sub
fidivs
inc
push
xlat
pop
adc
pusha
mov
hlt
inc
in
cmp
inc
xlat
sbb
or
jmp
push
stos
jb
pop
jne
addr16
insl
jnp
fdivrs
pop
cltd
xchg
fs
xchg
xor
sbb
scas
sub
adc
les
dec
sahf
mov
cld
shl
loopne
jecxz
pop
fistpl
mov
xor
sub
ljmp
xchg
mov
mov
fcompl
in
pop
pop
fcmovnb
mov
jl
jae
fcmovne
cmp
mov
shll
pushf
ss
in
dec
rcrb
fs
mov
sar
ja
inc
adc
mov
mov
add
xchg
in
test
fistpl
rcl
jb
dec
dec
test
lods
lods
mov
cmp
out
outsl
jne
add
dec
aad
xchg
mov
dec
mov
popf
scas
pop
mov
das
sahf
push
cmpsb
clc
fs
pop
mov
jbe
cmpsl
jo
clc
sbb
cwtl
out
mov
pop
fists
arpl
es
lahf
out
sbb
dec
dec
enter
fidivl
faddp
jnp
and
and
xor
jbe
cmp
mov
ss
ja
stos
or
out
inc
cmpsl
pop
xchg
push
xor
cmp
into
daa
imul
int3
ds
out
push
dec
inc
xor
push
or
inc
add
cmpsb
loope
nop
jae
out
jg
inc
rcll
les
push
xor
fbstp
lds
sbb
out
sub
jle,pt
add
jp
fisttpl
ret
inc
cmp
mov
pop
lret
out
add
fwait
enter
sbb
mov
movsl
push
bound
sbb
cmpsb
arpl
dec
sbb
in
outsb
call
arpl
scas
dec
or
sub
pmaxub
push
fldenv
and
mov
sbb
out
add
sub
xchg
mov
inc
mov
in
push
das
sahf
jmp
stc
cmpsl
pop
pop
movsl
mov
push
jo
sbb
add
mov
sbb
or
js
cmp
repz
sub
jo
rolb
mov
inc
mov
adc
gs
xor
jp
pop
xor
out
mov
adc
lret
add
int3
loop
mov
mov
inc
mov
ja
cmp
popf
lods
jnp
mov
inc
cmp
sbb
jl
scas
push
rclb
and
mov
sti
test
rorl
fbld
test
lahf
mov
sub
inc
mov
xchg
notb
adc
fsubp
aaa
insl
rcrb
in
dec
arpl
or
stc
shl
gs
fwait
sti
jg
jge
aad
pop
scas
stc
mov
sbb
ror
add
inc
jns
mov
dec
loopne
hlt
sub
or
ss
lahf
add
sbb
cmp
xor
mov
xchg
cmp
stc
ret
mov
lret
mov
pop
rolb
xchg
jns
mov
arpl
cwtl
inc
popa
addr16
icebp
mov
ja
mov
jecxz
or
enter
mov
cmp
adcl
cwtl
cli
sub
pop
sbb
push
jb
mov
idiv
arpl
xchg
aad
mov
jne
daa
inc
push
imul
adc
pop
daa
insl
pop
and
lods
sub
cli
inc
push
lret
addr16
addr16
std
fsts
pop
push
adc
fmuls
push
adc
pop
aad
jmp
pop
inc
aaa
sub
mov
and
out
mov
es
xor
xor
add
lahf
add
add
lds
dec
sbb
scas
inc
aas
pop
dec
sub
cmp
inc
mov
or
ret
loopne
jmp
mov
push
stc
out
mov
stos
xchg
gs
adc
fdivrs
cmp
cs
pop
dec
sub
mov
push
inc
xchg
je
sub
pop
je
repnz
insb
addr16
ret
xchg
adc
syscall
sub
push
jne
or
popa
add
out
fldt
ss
aad
mov
add
push
jno
out
jns
fwait
je
call
jmp
mov
sbb
jp
out
cmc
mov
pop
dec
das
aad
and
jo
cmp
incb
mov
xchg
sbb
inc
jp
add
mov
jl
in
xchg
mov
insl
icebp
pop
outsb
scas
loopne
jecxz
sbb
mov
fldlg2
repz
xchg
jg
pusha
test
insl
xchg
ficoms
jo
ljmp
or
add
pop
loop
pop
std
lock
xor
insb
inc
insl
adc
ja
pop
cmpsl
inc
outsb
stc
cmp
aam
inc
lods
repnz
mov
loope
mov
xchg
or
mov
fistl
mov
in
pop
mov
arpl
push
stos
sbb
mov
enter
push
jge
ficoms
add
ficoml
adc
pop
jmp
scas
ret
call
xor
cmp
cmp
mov
adc
lret
lret
cmp
add
jp
int
jno
push
lret
push
test
sub
scas
mov
inc
pop
xor
dec
adc
pop
inc
ds
jmp
mov
fsubl
in
outsb
ljmp
pop
mov
xlat
daa
cmp
mov
dec
cmp
in
adc
mov
fdivrs
ljmp
jmp
js
fbld
inc
xchg
mov
popf
outsb
add
lret
mov
xchg
jbe
mov
add
mov
pop
cmp
xor
adc
lcall
inc
out
js
push
mov
push
or
jmp
dec
xchg
pusha
and
add
popf
lock
mov
aad
cmp
push
in
dec
jl
jp
popf
or
loop
adc
or
aas
adc
popf
repz
shrl
jl
or
pop
in
gs
cmp
cmpsb
lea
mov
and
addr16
stc
cwtl
fsts
mov
fdivrs
inc
mov
mov
mov
inc
sbb
jmp
sti
ret
popf
shll
push
pop
xchg
push
cs
std
dec
jge
lds
mov
mov
push
ja
sbb
dec
push
fwait
jg
mull
adc
jmp
xchg
and
mov
or
les
dec
les
clc
cmp
mov
je
fists
loopne
fidivs
mov
stos
dec
mov
movsl
pushf
decl
in
clc
lret
mov
stos
ret
mov
dec
aad
adc
mov
sub
jb
cmpsb
mov
orl
lret
ret
in
cmp
inc
add
inc
ja
cmc
inc
orb
int3
in
push
inc
mov
mov
add
into
hlt
es
movsb
test
xor
adc
mov
in
add
xchg
fidivrs
push
sbb
jo
leave
fs
xor
movb
cwtl
xlat
cmp
leave
rcl
sbbl
xor
pop
rorl
adc
push
daa
mov
sub
jno
rcll
and
xor
mov
or
xchg
js
xchg
jb
insl
xchg
push
cs
sbb
testl
fistpll
push
and
xchg
add
iret
or
mov
in
cmp
imul
insb
sbb
mov
pop
and
bound
push
cld
fisttpl
adc
pop
lods
ja
jbe
test
cld
in
cmp
in
lret
cwtl
sbb
mov
lods
insb
and
scas
js
mov
fidivrl
mov
int
xchg
sbb
pop
or
int3
iret
pushf
rorl
popf
sbb
rcrb
loop
aas
imul
xor
pop
shl
lods
xor
jae
movsl
enter
add
push
stos
inc
out
lcall
aam
adc
data16
sub
add
sub
xchg
jb
mov
cmp
mov
cmp
scas
movsl
mov
mov
jle
push
jmp
shrl
gs
call
add
mov
sahf
pusha
or
fwait
push
sub
inc
ds
xor
sub
leave
or
iret
hlt
iret
negb
xchg
pop
cs
lods
and
call
mov
cmp
leave
adc
inc
xor
and
xchg
mov
incl
push
test
ja
popa
mov
or
pushf
sub
movsl
inc
fildll
ret
adc
add
outsl
mov
jg
inc
cmp
enter
xchg
mov
xor
sbbb
mov
or
xchg
divl
test
imul
or
cmp
inc
cmp
and
nop
fwait
xchg
loopne
mov
cs
sbb
jecxz
ficompl
leave
push
sarb
jbe
imul
daa
sub
lret
jne
std
mov
ret
push
jno
incb
in
subl
mov
or
xlat
subl
nop
ljmp
pop
xchg
add
adc
repz
push
cmp
dec
xor
dec
inc
std
xlat
or
mov
je
pop
inc
sar
andb
aad
insl
fsubrl
stos
loop
lods
fnstenv
jl
push
lcall
push
mov
xor
jp
lret
cltd
sbb
push
cmp
movsl
lcall
cmp
xor
call
pop
mov
sbb
jmp
dec
icebp
mov
adc
xchg
jg
faddl
mov
sti
ret
xchg
xor
test
adc
popf
jo
negb
je
pop
into
jge
mov
sub
inc
or
lock
or
push
add
push
push
test
and
dec
xchg
jg
sar
arpl
xor
decl
pcmpgtb
adc
lds
mov
jmp
push
dec
rol
mov
lock
mov
push
loop
loope
ss
out
inc
add
cltd
test
test
sarl
std
mov
sbbb
xor
and
sbbb
inc
cmp
out
loopne,pt
loopne
or
flds
cwtl
pop
add
mov
flds
popa
mov
inc
mov
ds
test
cltd
imul
cltd
add
hlt
and
ds
ja
out
xor
cmc
dec
fsubrl
scas
dec
xchg
push
or
jne
repnz
xor
dec
das
lock
rclb
inc
out
add
in
test
jbe
mov
jnp
or
mov
mov
mov
rorb
outsb
mov
aas
mov
mov
stc
push
dec
pop
push
enter
fcompl
mov
iret
cmc
dec
jno
sub
xor
call
xchg
xchg
repz
jae
lock
sbb
inc
neg
lock
push
pop
movsb
in
popf
sti
or
add
push
fbstp
add
add
addb
sahf
ss
mov
mov
push
test
test
pop
mov
cmpsl
imul
sbbb
xchg
fcoms
jb
lret
orl
int
pushf
sub
mov
mov
fs
fidivl
aaa
mov
push
add
enter
xchg
dec
xlat
sbb
ja
pop
loop
jb
decl
push
test
push
repnz
clc
outsl
inc
jmp
ror
repz
cld
add
testb
les
jl
in
loope
xchg
fstl
scas
stos
or
inc
lock
mov
xchg
jbe
xor
nop
andb
adc
adc
dec
daa
dec
loopne
jmp
sub
dec
pop
leave
pop
leave
ret
and
mov
inc
lods
dec
je
sbb
push
mov
je
xchg
les
xchg
sbb
add
clc
int
sbb
dec
mov
xchg
fcoms
cmp
mov
xchg
mov
xchg
loopne
in
gs
xor
and
fwait
mov
mov
lods
pushf
xor
rcll
mov
sbb
sbb
ljmp
fidivrs
loopne
push
push
mov
fcompl
stc
or
inc
xchg
mov
dec
dec
in
sahf
or
rcrb
icebp
inc
movsl
sub
daa
repz
xchg
mov
fwait
cmp
jne
jp
sbb
mov
pop
mov
xchg
imulb
cli
xor
mov
test
sbb
ss
mov
daa
pop
addr16
scas
adcl
mov
rcll
dec
inc
inc
and
icebp
dec
in
cmp
je
or
cli
aas
cld
lret
bound
fistpll
lcall
paddw
jmp
gs
cmp
inc
fs
or
out
outsl
inc
sbb
mov
cmc
mov
xchg
jle
movsb
adcl
shr
test
movsl
xchg
push
mov
adc
add
dec
dec
movsl
jle
ret
inc
mov
pop
testl
mov
int3
push
das
aas
or
xor
cmp
add
inc
in
dec
pushf
incb
mov
mov
or
xor
dec
out
xor
cmc
sbb
push
in
shrl
pushf
out
fwait
dec
ds
mov
into
xchg
outsb
insb
es
fcompl
js
cmp
jne
cmp
mov
mov
dec
mov
mov
jecxz
iret
das
inc
in
add
xchg
shlb
push
lea
xor
out
push
mov
mov
sub
and
mov
or
xchg
roll
ja
loop
gs
stos
or
and
scas
loope
or
outsb
lret
sbb
dec
jmp
or
scas
dec
sbb
mov
shr
cmp
or
mov
push
and
xor
add
aad
push
lret
je
sub
xchg
popf
and
stos
and
jnp
or
cld
sbb
std
mov
pop
sub
subl
pusha
cmc
adc
fwait
insl
scas
lods
mov
out
mov
mov
loop
dec
sub
mov
enter
add
nop
ss
call
aaa
popa
into
xchg
inc
pop
xor
daa
or
mov
jo
mov
jl
or
push
popa
mov
adcl
imul
xor
jg
pop
lahf
fs
mov
jb
pop
int
sti
mov
mov
mov
bound
mov
sbb
dec
cld
bound
xchg
dec
mov
xor
dec
push
or
pushf
mov
daa
adc
mov
in
adc
xor
push
jg
or
sub
cmp
cmpsb
mov
mov
mov
mov
ret
jle
neg
cmp
push
imul
or
mov
sub
test
in
int3
jmp
mov
mov
mov
in
mov
sbb
dec
movsl
add
test
sub
push
cmp
pop
testb
pop
pop
pusha
pop
push
shlb
push
ljmp
cmpsl
mov
pop
insl
xchg
out
and
js
sub
adc
addr16
pop
dec
sub
adc
aaa
cwtl
add
and
stos
push
outsl
aas
xor
lods
jle
adc
sub
test
pop
cmc
in
outsl
icebp
mov
jmp
inc
stos
popa
push
arpl
mov
add
aaa
fnsave
mov
xchg
sbb
dec
mov
cmpsb
call
in
inc
dec
sarl
xor
mov
add
jb
aad
dec
pmulhw
fdivl
aad
mov
daa
lods
out
sahf
hlt
daa
adc
adc
push
rol
push
ret
push
divb
mov
lea
push
xor
adc
into
or
psrlq
sbb
leave
push
aad
sbb
or
adcl
jne
outsl
mul
lahf
xchg
lahf
das
sbb
or
arpl
cwtl
icebp
or
mov
sub
rolb
xor
or
jno
jmp
fdivp
sub
adc
mov
jecxz
xchg
pop
push
das
push
pop
push
popf
cmp
repnz
bound
aas
xchg
cmp
or
je
jmp
in
sub
dec
les
fistps
cmpsl
dec
hlt
push
pushf
xchg
test
push
adc
pusha
fdivp
inc
mov
xchg
rcrl
cmp
and
shlb
dec
stos
jp
movsb
imulb
lcall
xor
dec
or
sbb
imul
lret
pop
call
add
sbb
mov
add
add
add
mov
into
lea
adc
cwtl
cltd
leave
mov
clc
pop
xor
imul
addr16
inc
push
xchg
fs
scas
ds
or
cmp
ds
ja
mov
push
push
aaa
add
xchg
mov
mov
out
push
mov
mov
js
in
movsl
add
pop
popa
jns
xchg
out
xchg
fcompl
sub
test
add
push
add
or
hlt
add
subps
inc
lods
or
mov
mov
mov
xor
push
add
mov
pushf
aaa
std
sub
aas
stc
xchg
mov
and
aam
xchg
push
arpl
mov
adc
mov
rcrb
out
leave
dec
pop
jbe
sbb
xchg
sub
mov
jl
fwait
arpl
pushl
xor
jge
cmpsl
int3
shl
imul
jns
dec
lret
sar
imul
pop
shr
imul
ss
imul
sbb
xchg
dec
fs
daa
xor
scas
shl
jp
std
int3
mov
sub
mov
imul
jmp
xor
jmp
add
movsl
aaa
lret
pop
pop
jmp
loope
popa
lret
or
jg
fwait
mov
cli
lret
rep
cmp
cs
pusha
mov
daa
pop
mov
inc
in
nop
pop
and
mov
dec
movsl
adc
push
inc
mov
mov
push
and
pushf
aam
jmp
xlat
and
iret
pop
and
testl
push
bound
lahf
mov
or
jmp
push
mov
out
fists
mov
pusha
mov
pop
scas
aad
push
jle
outsb
jecxz
and
or
mov
in
rorl
ljmp
cld
ds
xchg
mov
or
loopne
mov
sbb
mov
xchg
adc
int
incb
arpl
jb
aas
test
minps
add
fldenv
cld
jp
sub
call
ret
xchg
fistpll
pop
inc
sar
rcll
push
movsl
es
push
shll
inc
fcmovnbe
es
mov
fwait
std
stos
adc
sti
jl
imul
xchg
popf
int3
mov
aaa
mov
stos
inc
iret
sbb
mov
out
sbb
add
es
dec
cmp
mov
jle
pop
shlb
cmp
fisttps
cwtl
jmp
sti
test
roll
jne
iret
xchg
loopne
sbb
int
inc
paddq
lret
sahf
loop
jg
adc
aad
icebp
sti
adc
mov
pop
pop
test
cmp
sub
stos
xchg
mov
push
popa
repz
dec
insb
dec
imulb
outsb
mov
dec
pop
dec
loop
and
or
sbb
dec
mov
call
mov
pop
push
insl
cld
add
xchg
out
cmp
pusha
int
sbb
push
pop
push
pslld
mov
fidivrs
dec
imul
hlt
notb
ret
out
outsb
in
inc
enter
mov
movsl
aaa
iret
jge
pushaw
xchg
jne
in
mov
insl
add
sahf
sti
jmp
xchg
pop
jb
pop
xor
mov
cmc
fstl
cmp
dec
test
in
jecxz
mov
orb
jge
cmp
mov
out
pop
xchg
das
in
dec
movsb
sbbb
subl
aad
cmp
test
daa
std
mulb
out
in
adc
jecxz
or
mov
lret
push
add
in
and
push
or
mov
lods
in
mov
push
stos
cmp
push
add
mov
mov
imul
push
mov
mov
out
repz
inc
test
adc
dec
fistpll
movsb
jl
jb
jb,pt
lods
pop
scas
and
cmpsl
pushf
xor
cli
lods
adc
mov
mov
pop
mov
fwait
mov
scas
or
or
adcb
pop
push
loope
out
in
jmp
mov
xchg
div
scas
icebp
mov
mov
pusha
imul
push
faddl
pop
ja
sbb
mov
loopne
cmp
lods
push
cmp
dec
mov
out
shlb
sbb
lret
dec
inc
int
inc
cmp
pop
sub
mov
mov
jecxz
mov
and
fs
hlt
fsts
jae
pop
adc
xchg
lcall
std
xchg
out
repnz
cld
cmp
arpl
pop
jmp
stos
mov
arpl
loope
pushf
mov
sub
dec
or
arpl
mov
and
mov
mov
cmp
xchg
push
cli
sub
fwait
push
or
cmp
stos
and
sbb
leave
nop
out
push
rorb
sub
or
mov
aas
call
stos
sbb
mov
xor
and
pusha
in
mov
scas
and
andb
lcall
cmc
or
mov
inc
in
xor
scas
mov
adc
push
add
mov
cmp
lods
pop
dec
cmp
stos
movsl
pop
add
adc
adc
xor
cmp
inc
sub
mov
push
and
sub
mov
in
mov
xchg
inc
add
xchg
sub
mov
dec
adc
jmp
xor
outsb
add
jo
pop
in
adc
mov
jnp
in
jl
xor
mov
dec
bound
aas
jl
loopne
sub
test
mov
js
loopne
mov
inc
push
ljmp
pop
lret
in
data16
adcl
sub
jnp
in
lahf
dec
jae
pop
test
repnz
xor
leave
push
xchg
xchg
dec
outsl
adc
js
jp
jge
and
xchg
filds
pop
pop
test
sti
pushw
add
test
mov
fisubrl
pop
mov
imul
test
cwtl
pop
and
sahf
icebp
imul
mov
cmp
gs
dec
int3
sub
push
shrd
lods
mov
mov
mov
lret
cmp
mov
lock
cmp
xchg
mov
mov
ds
inc
lcall
mov
popf
lcall
fsubrl
sub
pop
mov
mov
mov
das
mov
cwtl
insl
frstor
popf
gs
inc
dec
sbb
das
cmc
mulb
insl
xchg
pop
jno
cmp
and
and
sbb
jmp
cmp
cmp
scas
cli
movsl
and
mov
or
or
push
inc
sbb
jmp
push
int
or
mov
pop
lds
iret
das
imul
cmp
add
sahf
fs
mov
add
sub
xchg
and
aad
arpl
xchg
cs
adc
adc
imul
in
rep
pop
les
loop
mov
jg
mov
cmc
mov
adc
pop
cmc
rcrl
stos
inc
or
mov
lock
ret
fldt
xchg
gs
push
and
xchg
cwtl
fnstenv
sub
push
lret
rcll
ds
jge
or
idivb
pushf
mov
notb
xchg
out
push
int3
mov
daa
shr
arpl
jae
hlt
fisubl
inc
jle
sahf
mov
push
inc
fimuls
mov
ds
filds
and
ret
jmp
shll
bound
cmpsl
je
mov
shll
clc
mov
and
or
adcb
into
push
jnp
mov
stos
xor
rcrb
pop
lret
js
push
add
scas
fldenv
cli
cmc
mov
data16
lcall
xchg
orl
inc
cmpsl
jo
icebp
dec
push
in
xlat
sub
out
and
dec
jae
push
dec
nop
cs
push
mov
flds
jnp
aam
stos
jo
enter
cmp
scas
fldt
shrb
mov
pop
inc
dec
div
cli
insb
push
mov
cmpsl
lods
mov
in
out
jnp
jmp
cmp
imul
dec
sbb
jnp
mov
lods
mov
or
push
mov
sub
dec
leave
sbb
out
in
or
lahf
bound
add
fxtract
movsb
iret
adc
xchg
adc
xor
cmpsb
push
or
lcall
push
sub
add
sbb
ss
or
lods
sbb
xchg
lds
in
fwait
cmp
pop
lret
xchg
mov
mov
push
popa
in
cmc
cmp
xchg
cld
lret
xchg
movb
dec
popa
mov
test
push
xor
mov
and
in
pop
pop
inc
pop
or
sbb
aaa
inc
cli
cmp
dec
cs
fldt
mov
mov
xchg
cmp
aaa
jge
sbb
leave
loopne
insb
dec
sbb
mov
inc
cmp
jb
adc
stc
dec
mov
pop
push
lods
lret
sbb
pop
icebp
or
andb
cmpsb
addr16
sbb
mov
inc
aam
pop
xchg
sbb
sbb
dec
or
jae
test
dec
or
dec
imul
jl
dec
adc
test
daa
test
or
cmp
div
mov
and
js
xchg
sub
imul
ss
les
rsqrtps
cmp
pop
inc
sub
add
xor
xor
stos
push
inc
sti
stos
neg
xor
or
ds
aas
or
cld
into
sub
push
nop
jge
repnz
loopne
mov
mov
jl
dec
je
push
push
sbbl
in
jge
sarl
sub
xchg
sub
imul
cmp
rorb
mov
adc
cwtl
add
fcomps
push
mov
mov
jecxz
icebp
jmp
addr16
ljmp
dec
mov
stos
sbb
inc
sub
syscall
movsb
pop
xchg
cmp
stos
and
lock
jnp
jnp
aaa
mov
stc
ljmp
inc
out
and
test
dec
push
ret
mov
ret
xchg
xor
sbb
and
xor
rcr
iret
fsubrl
inc
in
test
mov
ss
mov
jbe
xchg
div
fisubl
jl
push
jecxz
repz
ss
lods
xchg
mov
push
or
push
sbb
shll
aas
shrl
fildll
in
push
xchg
adcl
push
call
inc
jbe
enter
or
cmpsb
fcomp
jp
and
cmp
popf
mov
fidivl
and
and
inc
pushf
jne
fldl
push
and
jecxz
lahf
cmp
test
jge
sahf
and
cmp
insl
inc
insb
adc
call
inc
aaa
jecxz
push
movsl
imul
popa
push
jmp
sub
rcrl
mov
ja
cmp
push
icebp
sbb
insb
iret
mov
repnz
imul
int
inc
mov
cmc
lretw
push
test
cwtl
insb
gs
inc
stc
inc
dec
cltd
adc
cmp
add
stc
inc
inc
repnz
xor
sbb
or
test
out
pushf
imul
pop
mov
xchg
daa
in
aam
mov
add
push
mov
push
div
jbe
inc
dec
call
adc
mov
push
fxch
xlat
adc
gs
mov
mov
test
and
push
sahf
push
arpl
xor
ds
arpl
pop
test
imulb
pusha
mov
xchg
add
xchg
leave
ror
sub
xchg
ror
movsl
sub
iret
sub
and
and
scas
add
les
lds
adcl
sub
xchg
hlt
or
insl
or
aam
out
mov
pop
push
cld
pop
lahf
les
nop
adc
icebp
cmp
jecxz
xchg
jge
push
and
lret
mov
push
stos
ja
pop
xor
dec
inc
or
jp
or
adcb
or
sub
cwtl
dec
test
pop
and
lcall
insl
add
cmp
sbb
dec
pop
pop
call
insl
cs
mov
es
imul
inc
rorl
arpl
dec
nop
push
jne
adc
test
lret
insl
cmpsl
subb
cmp
xchg
cmp
mov
cltd
shll
scas
cmp
call
rcrl
xor
pop
push
cmpsb
cmp
xor
test
jbe
add
gs
sbb
test
idivl
das
in
push
adc
or
pop
addr16
test
pop
scas
jecxz
shlb
mov
jnp
sbb
jb
mov
pop
insl
inc
shr
lret
je
cltd
loop
or
cmpsb
test
cmp
dec
faddl
lcall
jge
andb
leave
push
cmp
sbb
adc
or
jae
push
xchg
movsl
cld
jmp
ss
into
pusha
jae
test
mov
test
and
and
cld
aaa
pop
pop
adc
lea
and
outsb
outsb
mov
adc
negb
sbb
xlat
jns
sbb
pusha
xchg
cld
mov
add
stc
repz
sbb
xor
cs
push
mov
xchg
sub
iret
mov
in
dec
pop
call
movsb
sbb
int
les
adc
imul
push
sahf
inc
cmp
inc
out
sbb
push
add
aam
frstor
cwtl
xor
divb
cmc
xlat
push
push
xchg
sub
mov
mov
mov
call
jb
xchg
fbld
inc
clc
push
call
int
mov
mov
addr16
in
cmp
cmpsb
pop
mov
and
lahf
gs
push
cltd
push
xchg
jl
cmp
sarb
cli
push
push
shlb
aad
les
pushf
push
jecxz
int
mov
inc
inc
das
push
test
pop
lahf
aam
push
sahf
repnz
cmc
add
cmp
call
in
mov
jb
sub
sarl
lea
or
xchg
cmpsb
daa
mov
mov
sahf
hlt
subl
cmp
lcall
cmp
repz
or
addr16
js
inc
push
push
push
out
mov
inc
inc
or
add
inc
dec
jecxz
in
test
mov
xor
loopne
ljmp
out
sti
loopne
pop
mov
mov
jecxz
cmp
inc
in
mov
and
mov
jle
xchg
cmpl
pop
insl
popl
dec
xchg
mov
jl
xchg
jae
aaa
into
data16
pop
loop
out
add
dec
xchg
dec
or
mov
and
jo,pt
hlt
int3
enter
xor
rorb
pop
mov
pop
adc
jno
mov
cwtl
cmp
adc
push
or
incb
xlat
dec
fimull
xor
jnp
push
out
dec
push
sbb
mov
daa
mov
mov
push
repnz
or
test
cmp
push
pop
mov
or
jno
aad
pmulhuw
inc
or
out
inc
out
or
sub
and
rclb
jmp
stos
cmp
sbb
mov
mov
out
jae
jle
rcr
or
and
test
daa
bound
xchg
stos
adc
and
out
push
dec
sub
add
je
push
mov
add
push
aaa
push
mov
cltd
lock
pop
and
jne
and
test
fwait
inc
lods
fxsave
add
xchg
xchg
and
mov
pop
outsb
push
fsubr
dec
adc
rolb
mov
lcall
mov
mov
push
repz
or
sub
mov
insl
jg
jle
in
ret
pop
push
jle
loope
test
lods
sbb
adc
pushl
mov
es
loopne
insb
push
out
test
dec
jmp
adcb
or
loop
jmp
lea
je
in
adc
imul
push
or
iret
cmp
repnz
js
pop
pop
pop
sbb
inc
cmp
je
or
fdivs
inc
xchg
mov
jae
pop
push
test
cmc
stos
stc
lods
out
push
loope
aaa
sahf
sbbb
xor
sub
hlt
cmp
fucomip
js
push
lock
std
xor
cmpsb
push
pop
dec
jle
repz
cld
loope
out
aas
cmp
imul
ds
stos
jns
loop
dec
out
sub
adc
push
xchg
stos
test
jl
adc
jnp
mov
jg
xor
dec
jmp
xchg
sbb
mov
xor
ljmp
lea
out
fs
popf
xchg
mov
jl
cmpsl
ss
loop
cmp
pop
sub
push
sarl
bound
pushf
arpl
mov
inc
rcll
push
inc
jae
sub
and
and
das
cld
and
xor
or
stc
jae
outsb
mov
xor
xlat
mov
mov
inc
scas
pop
inc
xchg
and
mov
dec
dec
pop
adcl
fstsw
sbb
and
repz
mov
loope
into
scas
jecxz
cli
pushl
lods
push
gs
mov
icebp
xor
mov
or
jae
pop
clc
loope
dec
insl
jmp
xor
rolb
aad
jle
lods
icebp
mov
sti
mov
cmp
leave
mov
mov
andb
sbb
dec
idivb
test
inc
xor
in
std
inc
inc
xchg
and
xor
pop
bound
cmpsb
sbb
test
mov
cmc
sub
mov
push
es
push
xorl
xchg
or
movsl
xchg
sbb
je
mov
fcom
xchg
daa
lds
adc
push
sar
xchg
cmp
lods
xor
push
gs
inc
lret
xchg
jne
pusha
lahf
xchg
jno
push
inc
test
cld
push
pop
push
dec
fsubl
jl
mov
inc
xchg
mov
mov
push
lea
sub
add
push
les
test
and
sahf
movsl
jae
pop
rol
jge
popa
add
jbe
mov
or
and
std
xor
add
leave
sbb
fdivrl
daa
mov
pop
adc
fnstcw
pop
into
mov
dec
inc
mov
js
pop
pop
pusha
shr
test
xchg
mov
push
gs
pop
fiadds
sbb
mov
aam
fmulp
add
loop
je
xorl
cmc
clc
pop
fiaddl
add
inc
out
dec
orb
push
xchg
lea
fcoms
pop
xor
into
pusha
call
dec
push
add
mov
push
mov
sub
clc
jle
dec
daa
cwtl
andb
dec
loop
dec
pop
in
out
int3
int
mov
frstor
xchg
scas
sub
clc
ljmp
outsb
or
sub
mov
cmp
cmpsb
mov
pop
cmpsb
sub
inc
pop
mov
xlat
mov
int
cs
mov
inc
pop
push
ja
jmp
popf
out
test
fstps
lret
repz
push
int3
xchg
pushf
in
addl
adc
movsl
test
aam
lret
adc
sub
enter
faddl
add
js
xchg
sub
push
int
movsl
test
adc
mov
dec
jecxz
and
mov
xchg
push
xchg
add
mov
pop
dec
mov
mov
fiadds
fcompl
insb
movsb
sbb
mov
pop
aas
adc
mov
shll
pop
jmp
xor
inc
or
aad
movsl
cld
sbb
xchg
rcl
es
push
or
cmp
das
sbb
and
int3
icebp
sti
clc
stc
repz
inc
pusha
pop
fnstcw
mov
add
mov
push
insl
test
sub
rcrb
or
jle
xchg
lahf
pop
test
add
nop
bound
sbb
insl
cmp
push
mov
mov
sbb
cmpsl
push
mov
das
or
jle
jne
call
sbb
out
sub
adc
shl
add
mov
lock
jo
lret
mov
imul
jno
mov
mov
in
scas
pop
xor
sahf
sarb
pop
cmc
mov
or
scas
dec
jmp
cmp
mov
sqrtps
mov
test
stc
pop
push
push
out
lcall
push
nop
test
aad
ficompl
je
sbb
sarl
dec
gs
xchg
out
fnstsw
cmp
mov
ljmp
in
ss
rcll
loope
loop
mov
sbb
pop
mov
scas
fildll
push
jg
in
int
call
aam
in
testl
test
xchg
mov
call
pop
scas
mov
test
out
ljmp
test
out
cmp
inc
jecxz
push
mov
adc
cmp
inc
mov
xor
jbe
shll
sbb
mov
aaa
mov
sub
movsb
jmp
mov
mov
jge
es
lret
push
sbb
popa
in
jb
mov
mov
repnz
stos
cwtl
js
in
jecxz
adc
mov
les
sub
push
stc
pusha
push
out
pushf
mov
or
cmp
idivl
add
adc
or
pandn
push
mov
adc
mov
aam
dec
int3
pop
std
imul
sbb
xchg
js
lods
inc
or
pop
pop
dec
xchg
and
adc
and
jne
mov
mov
jo
inc
or
shr
cmp
loope
rcll
aas
mov
push
js
or
sbb
xlat
lcall
divl
addl
and
cmp
or
hlt
pop
xlat
adc
xchg
mov
iret
cwtl
insl
sub
push
enter
ret
aaa
adc
pop
and
ret
mov
into
add
pop
jb
inc
xchg
sbb
adc
gs
enter
orl
cs
hlt
movsl
pushf
cli
sbb
xor
insb
mov
adc
mov
in
adc
and
hlt
cmp
fstpl
or
cmpsl
pop
cmp
pop
je
cmc
clc
mov
jne
jg
jnp
adc
pop
shl
loop
jno
repz
xchg
adc
sti
lcall
pop
inc
jmp
rcrb
sub
imul
adc
idivl
lods
outsb
xchg
cld
mov
push
inc
ja
xor
pop
mov
movsl
orb
mov
lock
sub
iret
int
xchg
xchg
out
push
xor
das
aad
mov
test
jne
rorb
loope
call
mov
push
dec
mov
mov
daa
mov
jbe
icebp
pop
or
ret
push
or
xor
fdivrp
sahf
xchg
mov
push
lds
jbe
fldenv
sbb
add
pop
inc
push
xchg
sbb
clc
scas
ljmp
fstl
shlb
jmp
xor
aas
cmp
shlb
mov
xchg
sub
das
imul
mov
jle
pop
jp
clc
jno
test
mov
imulb
sbb
lret
test
push
dec
testb
pop
sub
fwait
jge
or
lods
inc
mov
mov
call
lds
in
push
aam
testl
or
rcl
sub
mov
cmp
insl
fsubl
adc
bound
addl
jle
out
in
mov
hlt
sbb
pop
xchg
xor
push
and
test
jle
or
mov
sbb
fildl
jle
xchg
sti
inc
sti
mov
fwait
xchg
cmp
rolb
mov
out
pop
fsubr
pop
xor
cmp
mov
lahf
negl
pusha
dec
in
aas
xor
xchg
aad
idivl
rcll
inc
test
add
int
test
dec
inc
clc
mov
pop
add
mov
aas
and
stos
xchg
rcrb
fbld
clc
dec
inc
and
or
jbe
push
jo
loop
js
ss
push
shll
push
fwait
ja
stos
add
pop
sub
pop
stos
rorb
cmp
ret
pop
jg
lea
sbb
xorl
or
sub
shl
fstpt
add
es
jns
out
pop
sbb
xor
rorb
test
mov
push
jb
jecxz
jge
out
lock
push
lcall
int
cmp
je
pusha
popf
xor
dec
cmp
inc
dec
push
adc
popf
jecxz
shrl
and
ret
jno
xor
ret
stos
jle
jne
orl
add
cmc
outsb
pop
lret
loop
jae
mov
add
lods
sub
mov
mov
mov
push
outsb
inc
int3
enter
sub
fldt
jg
cmp
xchg
fdivrl
ret
aaa
insb
adc
mov
ja
iret
inc
stc
fcmovnbe
shll
mov
jae
sub
xlat
int3
mov
cmp
xor
btr
push
sbb
jge
push
clc
lret
dec
int3
pop
decb
pop
mov
pusha
das
jl
hlt
xchg
cmc
scas
movsb
push
cmp
inc
insl
sub
dec
xchg
stos
xchg
pop
std
gs
sbb
popa
testl
sbb
jnp
cli
jp
cld
adc
mov
xchg
ret
inc
adc
dec
and
xor
cwtl
jmp
xchg
cwtl
out
dec
lcall
push
and
mov
arpl
sub
in
xor
bound
inc
cs
stos
pop
movsb
or
test
jmp
scas
aas
mov
jno
sub
into
or
out
es
xor
push
ja
pop
push
jmp
xchg
mov
movsb
and
ss
xor
nop
in
push
jmp
pop
sub
xlat
xchg
test
push
adc
divl
scas
xlat
ss
pop
mov
loop
in
mov
fs
xor
in
jb
lods
aad
out
sub
hlt
mov
mov
or
xchg
adc
jnp
lahf
push
stc
pop
mov
dec
js
xlat
popl
jb
adc
sbb
adc
fisubrl
xor
inc
xor
daa
les
outsl
fidivl
ds
fildll
pop
xchg
insb
mov
popa
std
arpl
js
fsubrs
sub
xchg
cmp
int
fdivl
push
xor
sbb
addb
pop
mov
pusha
iret
add
jno
dec
fcompl
push
popf
lea
aas
std
outsb
adc
sub
push
lea
ficomps
fwait
movsb
jo
ret
cld
testl
orb
cli
cmpsb
cmp
add
mov
sub
add
pop
jnp
aas
xchg
shl
fldlg2
jmp
and
jle
dec
sbb
jle
scas
sbb
test
adc
stos
clc
xor
sti
lds
cmp
mov
movsl
jl
push
jg
sbb
sub
add
push
outsb
dec
ss
mov
cmpsb
or
cmp
cmp
shll
imul
jmp
fs
mov
jne
fmul
push
push
cwtl
fnsave
add
loopne
xchg
sti
add
dec
in
repz
mov
xor
loop
repz
popa
mov
adc
cmp
lds
jns
insl
and
aas
pop
pushf
cmp
lea
fsts
sti
imul
gs
push
testl
lcall
pop
sbb
push
pop
pop
push
shrl
jb
sub
inc
push
frstor
and
inc
adc
rorl
add
pop
xor
ret
pop
fucomip
sti
dec
push
andb
mov
xor
movsl
cmp
cmp
mov
jae
jecxz
ret
in
sti
aam
mov
les
mov
cmp
sti
mov
mov
popf
xchg
add
iret
cli
sbb
out
jae
mov
lods
xor
jl
lret
inc
mov
jge
sub
cmc
mov
inc
hlt
inc
in
ja
adc
xrelease
push
insl
or
mov
in
shll
xchg
jmp
out
mov
xor
fsubrl
lcall
dec
popa
in
mov
jb
mov
jnp
aas
push
scas
mov
mov
mov
std
loope
scas
add
ja
stos
sbbb
gs
mov
lahf
inc
fnclex
es
loop
addl
rcl
pop
adc
pusha
dec
inc
or
pop
or
xchg
jo
push
rorb
std
dec
mov
sbb
cmp
call
sbb
cmpsb
lret
cld
cmpl
daa
popa
jo
cs
jl
xchg
mov
xchg
ret
stos
sbb
aad
pop
in
mov
pop
pop
xchg
addr16
or
cs
out
inc
sarl
dec
push
mov
cmp
les
js
pop
outsl
int
mov
inc
adc
in
out
aam
lcall
fcom
mov
dec
and
in
pop
cltd
jbe
data16
mov
cmp
dec
jl
ljmp
repnz
shrl
jl
push
pop
fdivl
imul
lods
cmpsl
addr16
pop
lds
push
xchg
test
add
js
inc
in
pop
inc
imul
in
jmp
scas
dec
daa
in
in
andb
popl
add
repz
out
mov
dec
sub
mov
dec
xor
mov
cs
aam
inc
mov
xor
scas
sbb
mov
or
xchg
mov
dec
push
cmp
and
push
movsl
sar
pop
xchg
cmp
dec
rcl
or
xchg
mov
addr16
hlt
xchg
dec
fiaddl
pusha
inc
sarl
cwtl
xchg
lods
shll
test
or
test
stos
push
sub
lods
lcall
repz
movsl
cwtl
stos
cmpl
mov
adc
fsubrs
shrl
push
lds
lret
add
cli
inc
sbb
repz
mov
jl
xchg
cmp
out
data16
xor
test
sub
cmp
jo
pop
cmp
movsb
push
mov
mov
xchg
pop
rorb
insl
pusha
mov
mov
outsb
and
push
movsl
in
dec
inc
cs
arpl
jg
out
pop
popa
popf
cmp
test
lahf
mov
and
push
leave
adc
lods
push
dec
std
push
out
cltd
push
cld
add
sub
insb
arpl
imul
adc
mov
insl
jg
and
inc
out
add
mull
in
shll
cli
ficoms
ss
rclb
popf
dec
dec
or
jg
pop
jge
xor
push
shrb
xor
std
push
adc
movsb
fnstsw
lods
test
mov
aad
inc
orl
push
out
push
mov
adc
dec
mov
xchg
stos
clc
and
cmp
mov
movsl
push
cli
ficoml
mov
xchg
adc
ret
in
cmpsl
push
test
jecxz
imul
cs
test
out
cmpsb
jp
xlat
pop
das
test
sbb
popa
ficomps
test
mov
xor
data16
sub
lods
and
pop
cltd
mov
xchg
ret
sub
fcmovnbe
test
fcomp
lds
lods
out
out
in
sbb
xor
jmp
xor
dec
or
lret
xchg
sar
mov
push
pop
jg
jle
xchg
and
or
into
cvtdq2ps
mov
ds
mov
aas
gs
jge
jne
inc
cmp
pop
xlat
mov
mov
inc
pop
mov
jb
push
inc
dec
or
testb
in
mov
ds
in
out
pop
xchg
mov
jne
shll
hlt
in
stc
pushf
int
mov
rorb
xlat
popa
test
cwtl
adc
push
xor
xorl
adc
xor
sub
lret
jle
mov
xchg
or
xor
and
pmulhw
out
dec
sub
call
inc
mov
or
iret
and
test
ljmp
inc
pop
imul
insb
push
jno
fstps
ss
fs
test
andl
xor
cli
ljmp
push
jae
inc
and
gs
push
dec
stc
ret
shrl
testl
jle
mov
add
pop
pusha
dec
mov
push
add
testl
sbb
xor
or
mov
fists
mov
sub
icebp
stos
pop
sahf
ss
dec
mov
ret
mov
jae
sbb
scas
call
ret
jmp
fstpl
das
or
ficomps
cs
mov
sbb
cmp
sub
sbb
cmpsb
dec
inc
add
or
adc
pop
push
fucom
mov
xchg
dec
rolb
pop
mov
insl
mov
ljmp
std
xor
imul
sahf
out
xchg
lcall
jmp
adc
jno
mov
mov
ss
popf
jle
out
sahf
add
xor
mov
pop
mov
sub
mov
js
dec
int3
jnp
fldl
clc
jae
adc
dec
pushf
stc
add
lds
int
aas
push
adc
aad
sbb
push
in
pusha
sarb
sub
imul
jg
in
pop
jno
stos
xlat
adc
xchg
jbe
xor
int3
add
and
inc
add
cmc
movsb
and
es
in
cmp
rcrb
xchg
es
dec
faddl
sbb
mov
repnz
mov
cwtl
xor
inc
jbe
stos
mov
cmp
decb
fdivp
movsb
mov
xchg
or
mov
mov
lods
push
adc
pop
pop
and
inc
jp
popa
out
lahf
lret
fsubs
xor
rorl
push
xchg
and
push
push
cmp
xchg
sub
fs
pop
and
and
jno
imul
push
mov
jle
shrl
sbb
stos
sub
mov
shlb
cmp
ljmp
fstps
sti
cwtl
aas
cmp
adc
sti
test
mov
sbbb
out
mov
xchg
xchg
cmp
xchg
aaa
mov
movsl
ret
test
jl
lock
lods
jge
or
xor
xchg
mov
pop
sbb
mov
cs
popa
jl
and
mov
sub
mov
mov
xor
adc
mov
fbstp
mov
mov
add
out
inc
out
icebp
subb
mov
imul
mov
lock
cmp
in
add
ja
jl
movsl
outsb
je
decl
dec
stc
sub
jns
or
xlat
and
or
iret
out
les
js
je
xchg
test
movsl
xchg
cs
rcrl
push
and
inc
rcrb
shlb
dec
mov
in
mov
adc
in
test
dec
add
jns
fnstenv
dec
mov
dec
in
lods
mov
or
inc
test
pop
jns
xchg
sub
or
dec
xchg
enter
lahf
ss
test
aaa
and
inc
xchg
mov
pop
sbb
jmp
or
adc
mov
xchg
push
mov
gs
mov
sbb
test
push
cmpsb
xchg
addl
mov
pop
stos
jnp
aad
pop
or
in
cmp
fmulp
mov
and
mov
pusha
mov
fs
js
pop
mov
push
les
dec
shrl
jnp
loop
jb
test
xlat
push
xlat
dec
popa
xlat
iret
imul
mov
pop
and
cltd
dec
jae
pop
mov
xchg
mov
je
and
and
incb
test
xor
pop
and
mov
shlb
cmp
adc
mov
xchg
jle
shl
and
imul
rclb
mov
xchg
cli
or
sub
ss
loopne
mov
add
iret
xchg
or
repnz
or
orl
pop
dec
or
movsl
rcrl
stos
sub
xor
cmpl
int
aaa
popf
or
jb
nopl
cmp
js
mov
mov
mov
movsb
xlat
cmpsb
add
add
lods
out
movsb
jge
stc
or
or
ss
arpl
inc
out
mov
jg
outsl
test
shrb
mov
push
adc
cld
dec
into
arpl
xchg
mov
scas
xor
pop
nop
icebp
sub
fs
sbb
inc
inc
push
sti
jns
inc
clc
jnp
daa
fwait
inc
add
test
add
jmp
jp
push
lret
jns
inc
cmpsl
inc
repnz
mov
dec
flds
dec
sbb
xbegin
adc
in
pop
pop
arpl
out
fisttpll
cmp
call
or
icebp
lcall
pop
addb
inc
stos
roll
sbb
shlb
and
mov
jl
adc
in
dec
jmp
es
cmp
call
push
jo
pop
cmc
js
inc
sbb
scas
xor
insl
jmp
add
cmpsb
sbb
cmpsl
xchg
jb
mov
out
push
jb
lcall
or
dec
xchg
cs
ljmp
out
cs
stos
inc
cmp
mov
pop
dec
xor
cli
popf
or
jl
shrl
jb
popa
std
xor
xor
adc
mov
ja
sahf
in
notl
aad
lods
mov
adc
pop
xor
jae
mov
mov
out
scas
testb
xchg
test
movsl
popa
or
cmpb
ret
mov
xchg
or
wrmsr
cs
sbb
pop
lret
pop
jae
xor
sub
pop
push
je
mov
lea
lret
ret
mov
hlt
jmp
xlat
loop
xchg
fucomp
adc
mov
fistps
jge
sub
mov
mov
out
adc
lds
int
lock
sbb
and
jle
idivb
ret
je
ss
pop
ljmp
fildl
fs
mov
jle
mov
xchg
lock
mov
cmpsl
xchg
lret
or
cmp
das
popl
sbb
repnz
xor
or
mov
jo
sti
jp
int
push
pusha
filds
ds
sub
jge
and
das
pop
cmpl
rcl
add
push
jno
and
lea
adcl
sbb
pushf
test
cwtl
repz
out
test
jbe
iret
lea
xchg
into
xchg
sbb
and
xchg
cmp
arpl
out
mov
xchg
ljmp
lds
and
xchg
jno
push
fsubp
in
icebp
clc
lret
aas
out
loopne
push
scas
testb
daa
testb
pushf
xor
lret
jg
cmp
cld
xcrypt-cfb
cmpsl
and
cmp
or
test
popa
bound
bound
mov
cmp
test
dec
add
sbb
mov
inc
xor
or
rorb
pop
mov
xor
dec
mov
pop
addr16
jge
cli
fs
clc
jne
in
ja
movsb
mov
dec
jg
jg
fmull
cs
movsl
xchg
fs
test
pop
nop
test
ret
mov
pop
les
imul
sub
push
push
pop
fdivl
xor
xchg
push
enter
std
dec
mov
arpl
nop
lcall
test
sti
adc
je
jbe
push
add
inc
adc
mov
enter
lods
push
mov
in
mov
push
cmc
es
jmp
inc
jge
fstl
pop
stos
shrb
or
sub
xchg
daa
sub
hlt
jmp
sub
jne
fisttpll
call
sub
aad
push
popl
fisttps
mov
lds
xchg
cmp
cwtl
jle
lret
adcl
fisttps
add
les
and
pop
xchg
test
push
jno
lods
lock
cwtl
into
bound
fdivp
mov
inc
repnz
addr16
sbb
mov
dec
pop
sbb
xorb
in
insl
icebp
sub
mov
xor
pop
mov
sbb
arpl
ficoms
int
dec
cmp
and
pop
or
inc
repnz
and
push
lea
fidivrs
xchg
sbb
sub
dec
aam
movsl
lods
xor
shll
push
mov
loopne
jg
out
movsl
inc
mov
sbb
sbb
dec
cld
test
mov
dec
mov
dec
fxch
add
sbb
jno
mov
cmp
jo
mov
dec
lcall
repnz
aaa
or
jae
mov
call
into
add
fiadds
pop
pop
or
jnp
cmpsl
bound
xchg
or
test
adc
lods
out
jns
call
ss
ja
and
push
xchg
mov
dec
faddl
mov
jb
rcl
mov
call
imul
test
pop
dec
add
data16
jno
insl
imul
inc
test
jecxz
iret
fldcw
ljmp
repz
dec
mov
cmp
sub
stos
stos
xor
pop
loope
mov
cmp
pop
mov
les
add
mov
loope
and
push
in
movsl
movsl
push
idivl
lea
jmp
push
add
adc
call
sbb
mov
add
mov
inc
inc
mov
mov
cmpsl
push
lods
idivb
adc
aad
shll
cmp
and
test
cli
xor
ljmp
pop
fdivr
or
push
jp
inc
mov
fldcw
add
and
nop
jle
and
rcr
xchg
push
stos
jno
pop
int3
js
repnz
cwtl
jmp
fimuls
rol
cmpsl
out
mov
movsb
jne
push
mov
and
in
rcl
lods
sbb
shlb
mov
or
xchg
mov
stos
pusha
inc
xor
insb
cld
dec
push
testl
int3
dec
sti
cmp
push
mov
mov
mov
out
iret
mov
es
adcb
and
lea
jp
xor
add
jg
push
add
fs
je
mov
pusha
push
repz
popa
jae
push
cmpsb
test
or
daa
pop
mov
and
jle
sti
pop
sub
insb
pop
jns
movsb
mov
je
addb
stos
add
aaa
sub
stos
xchg
fcmove
mov
sbb
mov
jno
xor
mov
mov
shlb
hlt
aad
jbe
xor
lock
mov
dec
cmp
and
out
xchg
mov
and
push
pop
loopne
sbb
ljmp
cmp
jecxz
shlb
jo
aaa
sbb
and
aas
adc
loope
pusha
mov
mov
sbb
fidivrl
mov
test
in
stos
push
jg
lret
push
sbb
jg
into
adc
cs
popa
fisubrl
mov
push
mov
repnz
pop
in
fwait
outsb
pop
push
fcmovne
daa
push
mov
sub
insl
int
insb
dec
mov
js
jmp
lea
ret
adc
std
sti
inc
jo
jae
inc
jp
cmp
jp
pop
sub
call
jecxz
out
pop
ja
mov
popf
or
push
in
out
add
repnz
mov
lds
pushl
sbb
mov
test
jp
test
sub
jb
sahf
mov
mov
mov
push
sarl
data16
or
std
ljmp
aad
mov
repnz
sbb
inc
sbb
cmpsb
fwait
cmp
sbb
mov
sti
adc
das
push
and
lods
dec
in
dec
mov
jo
leave
mov
aad
popl
fs
push
ljmp
mov
es
movsl
inc
inc
xor
pusha
test
dec
in
cmc
test
xchg
cli
je
push
mov
mov
cmp
push
jne
adc
mov
adc
mov
pusha
divl
cmpb
std
mov
in
mov
inc
pop
sub
sti
ficoml
fadds
cmpsl
and
and
mull
mov
fsubr
rolb
in
sahf
divb
add
gs
divl
adc
clc
jno
inc
repnz
jp
mov
shl
cmp
pop
fbld
iret
xlat
call
fadds
stc
inc
repnz
out
jl
lcall
imul
mov
out
ja
xchg
in
add
addl
insl
cltd
adc
mov
mov
bound
or
clc
aad
imul
das
mov
mov
and
mov
call
xchg
lds
imul
cld
iret
or
push
fbstp
jmp
adcb
scas
data16
xchg
inc
scas
push
xchg
daa
adc
in
test
push
cmp
cmp
adc
scas
lret
cmp
jl
mov
push
mov
outsl
popf
mov
push
out
outsl
jns
jb
dec
mov
inc
in
enter
out
add
dec
fistl
aas
xchg
rcrl
shlb
mov
xchg
enter
mov
insl
aas
insl
cmpsl
and
xchg
jnp
loop
cmpsl
dec
call
fnstenv
and
jnp
cwtl
ret
jo
sbb
mov
adc
cmp
push
enter
aam
fdivs
mov
lds
imul
ja
jns
xor
pushf
lret
jge
fisubl
xchg
push
mov
mov
sbbb
in
adc
or
sub
pop
cmp
add
cmc
xchg
jnp
and
add
ja
sub
xor
and
leave
mov
xor
aas
mov
xchg
test
dec
mov
rcr
call
cmp
shlb
dec
lcall
push
dec
dec
mov
in
rcrl
std
fwait
pop
xchg
ret
or
push
mov
out
test
sub
inc
inc
das
dec
adcl
mov
lret
movsl
push
aaa
inc
icebp
out
punpcklbw
jmp
aad
mov
mov
iret
out
je
inc
pop
inc
sbb
pop
xchg
push
mov
jne
cwtl
lock
idiv
roll
push
adc
lret
call
jge
jae
frstor
add
out
push
popa
jb
das
jne
movb
xor
sub
jecxz
sub
mov
jle
xor
inc
loopne
adc
sub
push
in
iret
aam
fstpl
or
mov
frstor
push
jg
xchg
cmp
loope
xchg
cmp
inc
ss
cmp
cltd
adc
test
pusha
repnz
xor
out
inc
imul
inc
adc
xlat
push
popa
scas
repz
lods
push
xchg
push
push
das
mov
xchg
pop
ss
adc
out
cltd
push
imul
enter
imul
clc
cmc
adc
add
popf
out
inc
repz
push
xchg
inc
enter
scas
out
cmp
sarl
or
rcrl
aaa
sub
push
pop
pop
cmc
push
dec
cmp
jae
cmp
cmp
outsl
mov
xor
inc
fdivrl
dec
sbb
jp
adc
pop
popl
sahf
sub
push
loopne
out
fstp
sbb
dec
icebp
mov
mov
mov
jae
push
std
inc
cmpsl
pop
cmp
test
dec
xchg
xor
add
nop
push
pop
add
inc
adc
push
adc
xor
icebp
cmc
push
push
enter
dec
xchg
in
jbe
pop
xchg
lods
sub
inc
lds
jbe
int
rcll
xor
cmp
or
sbb
lods
ds
jecxz
jmp
inc
mov
movsl
je
mov
stos
sti
or
sub
out
add
nop
mov
jl
pop
movsb
lods
loop
mov
pop
aam
mov
pop
sbb
jmp
mov
xchg
adc
pusha
push
aas
iret
mov
dec
das
rclb
lock
fwait
test
int3
adc
cmpsl
arpl
push
push
and
inc
mov
jmp
notl
cmp
ds
mov
push
push
push
fiadds
add
mov
popl
pushf
sbb
fs
mov
call
or
test
je
fnstenv
loopne
ret
call
lcall
aas
aad
incb
jl
add
ja
and
jle
cld
xor
loope
adc
lea
iret
movl
add
xchg
stos
xor
mov
jp
pop
outsl
dec
popf
add
das
outsl
dec
sub
push
es
inc
pushf
lds
aam
pop
and
out
mov
aaa
sub
ljmp
mov
scas
icebp
cmc
jmp
push
xchg
xor
fwait
add
adc
sub
and
cmp
dec
ror
inc
push
sub
repnz
movsl
add
xchg
xchg
add
xchg
or
in
jp
lret
jecxz
loop
push
rcll
pop
aaa
clc
cmp
ds
or
sub
loop
mov
pusha
test
xlat
mov
xchg
pop
out
jge
testb
data16
outsl
sbb
insb
popa
xchg
inc
add
loop
inc
movsl
ret
pop
lods
cmp
orb
jnp
xor
popa
xor
xor
popl
push
cmpsb
adc
fwait
daa
jmp
fnstcw
xchg
lahf
sub
outsl
das
lds
stos
dec
jae
xor
mov
scas
xchg
xchg
mov
pop
cmpsb
rol
fs
icebp
cwtl
shlb
test
cmp
cmc
popf
mov
xor
jecxz
ss
les
push
adc
pushf
lcall
add
or
outsb
or
cmpsb
mov
aad
int3
loopne
push
mov
mov
or
stos
mov
mov
xchg
in
into
icebp
jne
jne
sbb
lea
jmp
mov
add
sbb
rep
jnp
and
ja
jnp
test
inc
mov
test
sub
add
fmuls
stos
fistpl
push
loopne
imul
repz
sbbl
push
stos
jl
iret
mov
or
lods
sub
lret
pop
pop
lods
into
or
insl
loop
into
les
neg
or
sbb
push
dec
aaa
and
xchg
mov
test
mov
roll
ja
xlat
faddl
mov
pop
push
cmpsb
xchg
pushf
repnz
push
popf
mov
inc
xor
xor
sub
lods
sub
pop
xor
imul
jle
jle
or
outsl
rcrl
lret
and
inc
stos
xchg
pop
jmp
mov
push
sarl
jnp
cld
pop
jae
loop
dec
adc
stos
push
paddsw
jmp
mov
mov
mov
sub
and
jno
out
inc
mov
sub
aas
xor
inc
push
cmp
addr16
add
adc
mov
cmpsb
loope
push
test
xchg
and
jns
adc
cltd
mov
inc
ret
xlat
subb
pop
test
jmp
inc
xor
es
fstpl
clc
daa
bound
mov
dec
pop
mov
mov
adc
inc
stos
pop
push
jae
jge
pop
jnp
xor
ds
into
stos
or
test
xchg
daa
xor
in
mov
jge
aaa
mov
stos
pop
add
rorb
int
jb
xlat
sub
fbld
sub
mov
call
mov
push
ljmp
ss
insl
popf
iret
mov
jns
push
sbb
pop
mov
xchg
pusha
mov
mov
outsb
loopne
mov
pop
stc
jl
cmp
or
addr16
add
call
in
cli
sub
jmp
mov
jnp
js
into
pop
dec
insl
jp
sahf
pop
loopne
arpl
pusha
sub
and
repz
dec
lock
dec
jg
add
mov
mov
dec
jmp
imul
js
sub
lods
cs
roll
dec
cmp
xor
xchg
cmp
sub
stos
es
aad
test
adc
dec
adc
adc
cmp
push
push
repz
ds
cmpsb
jle
into
fnstsw
jmp
enter
bound
fadds
repz
loopne
mov
sub
fsubl
dec
aad
mov
mov
in
push
push
pop
lds
pop
daa
xchg
iret
ds
push
pop
aad
shlb
sbb
jae
test
push
pop
adc
fmulp
add
push
or
dec
outsb
inc
pusha
dec
sub
out
sub
lret
nop
lahf
out
sub
pop
xlat
bound
jmp
inc
pop
insl
push
stos
cwtl
push
in
mov
fwait
cmp
arpl
xchg
mov
push
dec
fistps
adc
pop
ja
mov
dec
fs
outsb
mov
dec
jne
add
jb
sub
out
or
sbb
xchg
mov
jmp
and
cld
lds
cmp
push
sub
sbb
push
sub
sub
jmp
in
xlat
add
xchg
pop
cltd
orb
xchg
andl
cs
clc
ja
test
insl
dec
mov
enter
add
dec
in
cmpb
scas
iret
push
cmp
mov
sub
jg
cli
cwtl
lea
xor
pop
xchg
xlat
arpl
mov
repz
xchg
xchg
sub
cmpsb
mov
and
and
jl
xchg
call
jno
in
roll
jecxz
mov
mov
mov
lahf
xor
fwait
ret
das
sub
push
lret
sub
pop
xchg
and
inc
je
movsb
dec
out
cmpsb
or
sbb
mov
psrlw
xlat
mov
out
and
xor
aam
fdecstp
jecxz
jb
fdivrs
scas
adc
inc
sbb
xchg
pop
mov
loopne
xchg
cld
scas
push
loope
mov
out
mov
inc
jno
add
mov
mov
push
dec
call
lods
cmp
cmp
subl
je
lods
jecxz
xchg
xchg
and
lahf
in
addr16
xor
ret
enter
imulb
pop
pop
cmp
mov
nop
mov
pop
sub
fsubrl
or
push
xor
pop
sbb
xor
lods
movsb
and
jl
push
into
fisubs
lret
movsl
sbb
xchg
iret
fstl
add
es
mov
sub
push
and
mov
mov
push
aad
or
xor
push
and
jle
sub
jp
jecxz
mov
xchg
lods
xor
and
mov
dec
int3
ja
cs
sub
inc
sub
mov
ret
sbb
xor
mov
mov
cwtl
leave
mov
mov
dec
pusha
mov
xor
pop
or
mov
in
jge
xchg
cmp
sbb
pop
les
imulb
or
ficompl
xchg
cmp
mov
and
jmp
xchg
sub
test
dec
rcrb
push
pop
rcrl
mov
mov
mov
fisttpll
pop
mov
arpl
pop
ss
xchg
adc
inc
pushf
push
lock
call
xchg
popf
shrl
sahf
push
out
imul
aaa
xor
sub
pop
xlat
shr
pop
inc
ss
mov
or
mov
mov
imul
inc
xchg
push
sub
ljmp
negl
sub
btc
pop
add
xchg
int3
push
push
iret
or
test
ret
mov
mov
mov
jg
xor
test
pop
mov
adc
mov
sbbl
shrb
shrl
pop
push
inc
dec
mov
cmp
push
push
out
repz
gs
rol
pusha
data16
jp
or
mov
stc
or
add
mov
push
adc
pop
inc
push
aaa
cwtl
mov
cmp
sbb
mov
xor
sub
cmpsl
push
mov
pushf
shll
mov
clc
fnstsw
cmp
ss
and
mov
leave
in
in
push
mov
dec
mov
