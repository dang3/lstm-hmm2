push
lea
sub
mov
push
push
push
push
push
push
mov
call
push
push
call
test
je
push
xor
push
call
push
mov
call
mov
cmp
je
lea
push
push
call
mov
mov
mov
mov
push
push
mov
call
cmp
jne
movl
push
push
call
push
push
mov
call
xor
cmp
setl
mov
mov
cmp
mov
je
mov
cltd
sub
sar
mov
push
push
call
mov
neg
sbb
and
add
push
mov
call
push
mov
call
movzwl
push
call
pop
pop
push
push
push
call
push
push
push
call
push
push
lea
push
call
lea
push
call
mov
mov
mov
movzwl
xor
jmp
cmp
jne
cmpw
je
inc
inc
mov
cmp
jne
jmp
xor
inc
lea
push
movl
movl
call
mov
push
pushl
call
push
push
push
push
push
pushl
mov
call
cmp
mov
mov
jne
xor
push
pop
lea
rep
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
movl
movl
movl
mov
movl
movl
call
test
je
mov
push
mov
imul
cltd
pop
idiv
push
push
mov
mov
add
mov
lea
mov
mov
shl
mov
lea
push
call
mov
mov
sub
sub
mov
cmp
mov
mov
jle
mov
push
pushl
neg
push
push
pushl
sbb
push
push
push
and
add
push
push
push
push
call
cmp
mov
je
lea
push
call
push
push
push
pushl
call
test
jne
call
xor
jmp
call
pushl
call
pushl
pushl
call
pushl
call
push
pushl
call
mov
xor
cmp
sete
push
call
cmp
je
call
cmpl
je
cmpl
je
push
push
push
pushl
call
xor
inc
pop
pop
pop
add
leave
ret
push
mov
mov
mov
mov
mov
mov
cmp
jb
push
push
mov
mov
mov
lea
xor
test
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
mov
mov
lea
ror
lea
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
mov
inc
cmp
jb
pop
pop
pop
ret
push
mov
sub
mov
push
push
push
push
mov
movl
call
andl
movl
mov
movl
mov
mov
movl
mov
mov
mov
mov
mov
imul
xor
add
incl
mov
push
push
mov
call
mov
mov
mov
mov
mov
xor
mov
div
mov
mov
mov
mov
sub
not
add
xor
mov
mov
incl
add
cmpl
jb
cmpl
je
mov
mov
jmp
push
call
mov
mov
mov
xor
push
push
push
push
call
movl
mov
push
shl
push
add
incl
push
push
call
mov
mov
test
je
push
call
mov
push
push
call
mov
call
add
cmpl
je
cmpl
jne
lea
push
push
pop
add
xor
div
push
pushl
push
call
mov
push
push
push
push
call
lea
mov
lea
add
lea
add
mov
mov
mov
mov
and
call
mov
mov
mov
call
mov
mov
push
push
mov
xor
push
push
mov
mov
call
mov
lea
push
push
push
lea
push
pushl
movb
pushl
movb
push
call
push
push
push
call
mov
call
mov
call
test
je
pushl
mov
pushl
pushl
pushl
call
cmpl
mov
jne
push
call
test
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
mov
push
xor
cmp
je
cmp
push
mov
je
push
call
jmp
push
push
push
pushl
call
push
push
push
pushl
call
push
push
push
pushl
call
pop
pop
ret
mov
push
mov
sub
mov
push
push
push
mov
mov
mov
push
mov
lea
push
pushl
pushl
call
lea
xor
test
je
push
push
push
call
add
test
je
push
add
push
call
inc
pop
add
cmp
pop
mov
jl
mov
mov
pop
pop
mov
pop
call
leave
ret
push
mov
push
push
mov
imul
push
mov
cmp
jb
mov
push
call
mov
add
imul
push
xor
pop
div
mov
mov
mov
mov
sub
mov
test
je
mov
sub
push
mov
call
xor
divl
mov
add
cmp
jae
mov
mov
imul
xor
divl
xor
mov
sub
imul
div
mov
cmp
jae
mov
sub
push
pushl
pushl
call
add
add
add
add
cmpl
jne
pop
pop
pop
leave
ret
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
mov
push
mov
sub
mov
push
mov
push
push
lea
mov
call
lea
xor
call
test
je
test
je
cmpb
je
mov
push
call
mov
push
mov
call
mov
lea
push
call
mov
test
je
push
push
push
push
call
add
push
call
test
je
push
push
push
call
mov
test
jge
push
push
push
call
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
call
mov
mov
pop
pop
pop
call
leave
ret
push
mov
sub
mov
mov
mov
sub
mov
je
mov
test
je
push
mov
add
test
je
push
push
mov
sub
mov
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
addl
decl
jne
mov
test
jne
pop
pop
pop
xor
inc
leave
ret
mov
push
mov
push
mov
test
je
push
mov
test
je
andl
push
call
push
call
push
call
test
je
push
call
push
call
mov
push
call
push
call
pop
pop
pop
ret
push
mov
sub
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
jne
inc
jmp
andl
push
push
lea
lea
cmpl
mov
je
mov
mov
jmp
mov
mov
add
xor
nop
movb
mov
mov
inc
cmp
jb
mov
test
je
lea
movsbw
mov
add
inc
mov
test
jne
lea
push
call
mov
test
je
mov
mov
add
andl
cmpl
mov
je
mov
mov
testl
je
push
call
mov
and
push
pushl
call
push
jmp
push
call
push
call
mov
add
add
push
pushl
call
push
mov
call
cmpl
je
incl
mov
mov
lea
cmpl
jne
mov
incl
mov
imul
add
mov
add
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
jmp
mov
push
mov
push
mov
xor
mov
test
movl
je
push
call
pushl
call
mov
xor
inc
pop
pop
ret
mov
mov
ret
mov
mov
mov
mov
rol
imul
add
mov
mov
mov
ret
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
test
je
andl
mov
sub
add
mov
mov
mov
lea
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
cmpl
mov
je
or
sub
mov
mov
sub
add
mov
mov
mov
lea
push
push
push
call
mov
mov
mov
sub
add
mov
movzwl
add
lea
movzwl
lea
mov
mov
mov
andl
xor
cmp
jae
mov
mov
mov
mov
mov
mov
addl
add
push
pop
rep
mov
add
add
incl
mov
movzwl
cmp
jb
mov
mov
add
pop
mov
xor
pop
inc
pop
leave
ret
push
mov
sub
push
push
mov
xor
cmp
je
mov
cmp
je
cmp
je
cmp
je
add
push
lea
push
push
call
mov
add
add
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
sub
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
mov
mov
lea
ror
mov
lea
add
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
cmp
jb
mov
mov
test
je
mov
sub
mov
mov
inc
dec
jne
pushl
mov
pushl
pushl
pushl
pushl
call
mov
mov
mov
call
mov
add
push
pushl
pushl
pushl
call
add
pop
jmp
xor
pop
pop
leave
ret
mov
push
mov
xor
cmp
jne
mov
jmp
mov
push
mov
mov
test
je
mov
inc
inc
decl
jne
cmpl
pop
jne
dec
mov
movb
pop
ret
push
mov
push
andl
push
lea
push
push
call
add
cmpl
je
push
pushl
call
pop
pop
test
jne
push
mov
push
call
push
call
push
call
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
push
call
push
call
push
call
mov
pop
jmp
mov
leave
ret
push
mov
testl
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
pop
ret
push
call
pop
ret
add
add
fldl
cmp
lods
popf
xchg
fcompl
mov
testl
sub
sahf
js
loopne
and
and
cmpl
jmp
fsubs
mov
or
xor
mov
xorl
push
out
jbe
inc
xor
lods
out
dec
dec
iret
dec
add
mov
fcmovbe
pushf
adc
repz
enter
insl
mov
pop
xchg
lret
cmp
test
pop
movsb
aad
call
jp
int
adc
fsubrl
mov
sahf
xchg
add
add
dec
mov
iret
push
dec
int3
aad
arpl
ror
xlat
sub
not
mov
montmul
cmpsb
inc
adc
or
xor
and
std
dec
shrl
outsl
in
inc
into
lret
fistl
mov
aas
jmp
and
loope
sbb
fisubrl
push
call
fisttpll
testb
aas
dec
pop
adc
mov
inc
mov
xor
dec
popa
pop
xlat
sbb
add
xchg
jnp
inc
and
push
aas
lods
cmp
loop
push
imul
sub
fcoms
push
dec
loop
ds
cmp
ss
imul
or
loopne
mov
xor
sbb
pop
cld
jle
xchg
ljmp
jl
aas
rorl
sbb
aaa
fnsave
push
sahf
outsb
xchg
std
arpl
add
add
xor
adc
lret
and
data16
dec
mov
popf
sub
test
imul
push
fbstp
insl
adc
sbb
push
stos
or
xor
inc
outsl
xlat
push
add
jg
xor
push
aas
negb
clc
jns
mov
gs
adc
mov
ret
or
and
or
and
cmp
add
add
in
xchg
mov
test
xor
lods
push
gs
fidivs
dec
movsl
dec
and
xchg
cmpl
xchg
test
js
inc
jo
push
loop
in
jb
mov
mov
mov
fdivs
das
jl
frstor
mov
cmc
in
inc
test
cli
push
add
das
fisubrs
sub
mov
stos
out
shrl
loopne
add
call
int
push
lea
std
pop
pusha
jl
pop
in
xchg
mov
jle
test
push
loope
pusha
fs
cmp
das
jns
push
out
out
mov
inc
xchg
movsb
mov
and
fsubl
icebp
popl
mov
repnz
in
xchg
mov
fyl2xp1
into
stc
in
rorl
loopne
mov
cmp
cli
push
nop
add
cltd
ret
push
lock
inc
pop
pop
and
sbb
mov
mov
pop
mov
or
xchg
mov
xor
lret
pop
xlat
das
sub
mov
mov
push
js
shrl
mov
push
push
inc
rorb
xchg
pop
push
xchg
mov
shrb
movsl
das
push
daa
push
lods
test
xchg
andl
push
xchg
jae
jecxz
mov
add
add
aaa
or
loop
xor
mov
push
fsubs
nop
mov
jno
or
imul
or
aam
xchg
inc
arpl
je
and
sub
lahf
les
scas
mov
js
mov
loopne
mov
xchg
mov
dec
mov
xor
cld
and
fs
jnp
sbb
xor
xor
mov
add
add
fucomp
lret
lret
mov
lds
ret
mov
stos
or
xchg
inc
or
pop
out
addb
xchg
inc
xchg
insl
adc
out
pop
popa
mov
cmpsb
inc
pop
jge
cmp
adc
test
and
clc
in
scas
int3
sub
xchg
fcmovbe
stc
daa
in
rcrb
mov
scas
adc
jno
sbb
add
shlb
dec
mov
dec
sbb
les
xchg
movsb
mov
rcrb
sub
fwait
notl
jns
stc
loopne
sbb
test
lahf
in
shrb
dec
bound
mov
decl
push
mov
dec
adc
cmpsb
dec
int3
imulb
mov
sbb
rcl
push
mov
adc
mov
push
repz
cs
fldt
enter
cmp
xchg
jge
dec
cltd
inc
pop
inc
outsl
test
lds
jb
into
or
cltd
add
and
sub
pusha
or
jnp
int3
pop
sbb
mov
icebp
pop
sub
das
inc
sbb
jae
test
movsl
push
jge
sbb
adcb
adc
fcmovbe
popf
mov
mov
leave
or
jbe
shll
stos
and
push
sub
in
incb
cltd
cmp
push
cli
push
shrl
add
xor
in
dec
cmpsb
add
cmp
xchg
test
mov
xchg
aad
je
xchg
aaa
sbb
add
add
mov
add
jne
xchg
inc
cltd
mov
add
lret
mov
xchg
movb
lds
sub
adc
pushf
lret
movsb
xor
mov
fisttpl
jecxz
repz
jge
lock
or
xor
push
ret
add
add
shll
shlb
daa
loopne
outsl
ret
cmp
adc
sbb
push
mov
shlb
fwait
rcl
data16
pushf
sub
mov
or
and
outsl
mov
add
lret
bound
insb
mov
enter
push
lcall
jl
test
test
mov
adc
jne
jmp
adc
add
sbb
js
adc
and
aaa
xor
pop
std
imul
mov
cmp
mov
push
ja
stos
jo
cmpsl
ds
lds
add
pop
mov
pop
stos
aad
fdivs
stos
inc
inc
mov
cmp
je
shr
fstl
xor
sar
dec
lea
stc
mov
cmp
ja
clc
push
scas
and
mov
int
arpl
fdivp
lea
shll
push
lods
mov
fstpt
cmc
cmp
mov
les
mov
mov
dec
dec
and
cmpsb
jge
repz
mov
dec
aaa
push
dec
jbe
aam
dec
lock
cld
orb
call
loope
dec
cmpsl
das
daa
sbb
pop
or
fs
adc
bound
sbb
rcrl
flds
call
jmp
sbb
stc
andb
ss
sbb
mov
add
out
mov
loopne
xchg
pop
insb
push
dec
push
fcompl
mov
sub
pop
or
adc
dec
sub
push
mov
push
lret
mov
inc
and
or
push
xor
sbb
subb
mov
lods
out
adc
popa
cmp
ret
ljmp
or
sub
jns
popa
ds
lret
aaa
jb
add
scas
or
je
repz
ljmp
rol
lret
arpl
movsb
or
popf
cmpsl
mov
mov
mov
xchg
sbb
mov
daa
aaa
arpl
les
cmpsb
sbb
ficomps
xor
pop
inc
or
outsl
pop
es
sbb
test
mov
inc
sub
popw
pop
fsubrl
pop
add
testl
add
add
inc
adc
add
or
cmpsl
jg
fstps
jb
xchg
or
je
ss
xchg
outsb
pop
xor
xor
test
cmpsl
jecxz
mov
xchg
jl
pop
mov
scas
push
shll
rcll
in
rcrl
shlb
sub
sbb
mov
push
repnz
add
sub
sbb
lret
add
pop
cmp
cld
sbbb
xlat
add
mov
imul
inc
dec
add
outsb
adc
push
in
add
pop
mulb
xor
movsb
stos
push
sar
sub
jae
ret
fbld
jmp
addr16
xor
popfw
xchg
in
icebp
int
or
insb
xchg
mov
out
shll
loopne
push
push
lcall
mov
add
add
js
gs
xchg
mov
movsb
frstor
jge
adc
pop
mov
ljmp
in
fnstsw
mov
jbe
adc
push
mov
repnz
scas
push
mov
faddp
mov
pushf
int3
test
sub
lcall
jg
jno
or
lahf
mov
scas
mov
movsb
xchg
stc
jb
ret
or
loop
lock
faddl
outsb
cli
stos
addb
icebp
sbb
je
jno
int
loope
mov
hlt
jp
jle
test
jge
mov
mov
inc
shl
subl
or
insl
ret
les
cwtl
rcrb
lods
fwait
les
cld
scas
dec
popf
cmp
sbb
push
sbb
inc
xor
test
push
mov
jp
fs
leave
xor
sbb
mov
push
jo
pop
mov
add
add
dec
addb
sub
xor
sub
inc
repnz
mov
cmp
xchg
inc
push
imul
ret
or
lahf
out
xor
and
lods
push
scas
sbb
sub
mov
dec
mov
inc
mov
push
call
push
in
mov
fnstsw
xchg
jge
add
inc
loopne
repnz
loope
lar
push
xlat
push
xchg
loopne
sub
add
jmp
xchg
sub
popa
mov
rcrl
sbb
stc
mov
mov
add
rcr
scas
inc
mov
sbb
cmc
lods
jp
ss
mov
rorb
mov
dec
iret
gs
mov
sbb
xchg
jle
push
loop
fisttps
pop
mov
xchg
inc
dec
popf
cmp
mov
and
aam
mov
sub
dec
adc
fs
in
jbe
aas
pop
jp
mov
pop
imul
aad
xor
sub
test
into
cmc
imul
data16
pop
xchg
or
ss
fadd
mov
adc
and
or
xchg
jno
ror
jg
cli
inc
mov
xor
lods
cs
jge
xchg
adc
in
add
xor
dec
inc
sbb
shll
mov
leave
int
inc
sbb
or
jecxz
xchg
test
lcall
addr16
cwtl
mov
lods
in
xchg
mov
or
mov
stos
aas
roll
mov
mov
ds
cmp
int
sbb
aas
or
pop
leave
adc
cs
or
insl
mov
lret
imul
sub
add
ret
fldl
movsb
pop
mov
out
mulb
pop
imul
jne
mov
xor
scas
xchg
push
jmp
push
add
or
shl
push
inc
mov
mov
cli
lock
or
jb
push
push
sub
add
push
mov
shll
int
pushl
cmp
aas
imul
loope
pop
adc
stos
push
add
sbb
dec
sub
add
add
add
inc
movsl
xor
jne
int
sti
pop
mov
outsw
push
and
loope
iret
in
mov
sbb
jl
ret
mov
test
out
jnp
xor
push
adc
je
and
sbbl
push
adc
or
dec
and
pop
iret
jbe
ja
cmc
cmpl
int
push
scas
lahf
or
fcmovnu
aad
add
push
mov
pop
stc
fiadds
mov
add
imul
ffreep
fsubrs
scas
and
fnsave
jbe
scas
daa
repz
sub
dec
mov
leave
imul
out
sub
xchg
dec
pop
testb
mov
mov
xor
cs
lcall
data16
xchg
mov
jge
sub
cmp
sahf
fsubrs
push
add
xchg
js
in
incb
mov
insl
shlb
xchg
xor
outsb
xor
aaa
mov
xchg
hlt
into
mov
pop
ja
arpl
rcll
pop
sub
cs
loope
push
punpckhbw
push
push
pop
inc
mov
pop
cld
adc
or
jl
push
testb
adc
inc
cmp
inc
push
cmc
cmp
push
es
out
testl
loop
movsb
inc
pushf
std
sub
sbb
sarl
jnp
int3
add
pop
syscall
sbb
dec
mov
cmp
xchg
pop
js
mov
ljmp
cmp
inc
lret
jb
xchg
sbb
inc
dec
aas
lret
popa
aaa
daa
push
popf
pop
push
mov
xor
pop
mov
push
mov
cmpsb
addl
shrl
into
sti
add
or
in
mov
cli
in
rorb
and
push
add
add
hlt
ja
movsb
mov
dec
add
mov
pop
scas
xchg
pop
je
xchg
cmc
repz
cmp
int3
mov
inc
xchg
mov
in
cmp
iret
mov
orb
mov
pop
addr16
call
ss
inc
imulb
mov
dec
mov
adc
push
jo
insl
jmp
sahf
shll
xor
jl
jae
aaa
movsb
pop
cmp
dec
cmp
bound
add
mov
sbb
ja
mov
repnz
call
hlt
repnz
pop
xchg
repnz
pushf
mov
pop
addb
lahf
mov
add
repz
xchg
std
mov
lahf
pop
arpl
add
int3
arpl
mov
lahf
adc
gs
ror
stos
or
and
inc
cld
stc
cmp
xchg
clc
aaa
lods
popa
les
add
jns
das
mov
rcr
cmp
mov
insb
cmc
adc
or
pop
outsb
push
imul
test
nop
aam
jno
int3
rcrb
rclb
add
test
add
mov
mov
aas
cmc
mov
push
xchg
cmp
inc
adc
sub
push
je
std
mov
fistps
stos
test
int3
dec
push
ss
mul
jle
cltd
push
mov
cmp
jge
inc
popf
xor
pop
xchg
shlb
notl
nop
shlb
sub
push
andb
push
test
add
add
out
pop
test
std
lcall
rorl
add
sbb
cli
mov
adc
xchg
add
xchg
out
cmp
out
push
sti
jbe
push
out
pop
push
shl
xchg
aaa
movl
imul
cli
dec
repnz
push
in
mov
loop
mov
das
test
insb
jae
jge
xchg
sub
add
jmp
push
mov
inc
mov
add
inc
adc
xor
pop
pop
pop
inc
pop
xchg
pop
add
cmp
mov
sub
mov
stos
fsubrl
add
repz
fiadds
adcl
scas
mov
faddl
scas
mov
add
je,pt
mov
enter
dec
fninit
movsl
add
jg
jb
adc
loope
ds
je
icebp
mov
push
sbb
test
dec
in
mov
sti
xor
sub
jg
xchg
fistpll
icebp
mov
add
jecxz
aaa
xor
ja
popa
arpl
out
cmp
fiadds
test
sub
mov
in
aas
cmp
pop
in
xlat
push
add
adc
inc
imul
ret
sub
dec
mov
xorb
ret
add
sti
fsubrs
imul
mov
movsb
sbb
push
movb
jmp
cmpb
pop
fabs
arpl
in
mov
xor
pushf
iret
addr16
mov
orl
aas
jno
cmpsl
orb
xor
add
add
lcall
scas
xor
ret
xor
movsl
sarb
jae
adc
jne
push
daa
and
movsl
mov
int
jne
mov
shll
sbb
lds
fdivrl
jmp
adc
mov
outsl
adc
aas
push
push
outsl
cmp
lods
test
xlat
jle
stc
call
clc
mov
decb
xchg
mov
sbb
daa
add
add
add
adc
add
mov
pop
jnp
sbb
ds
in
out
in
sub
push
clc
jne
rcrl
lea
sub
insl
inc
test
xorb
mov
out
stc
pop
stos
cmp
cld
in
or
xor
xor
inc
and
inc
cmp
push
scas
cmpsl
dec
or
xchg
jnp
gs
pop
push
dec
aad
ds
subb
push
jb
mov
ss
ljmp
jo
pop
mov
test
jno
leave
mov
push
push
lcall
adc
repz
fdivrl
mov
mov
insl
adc
ss
add
mov
mov
jae
stos
std
jb
sar
or
dec
or
cmp
cmp
pop
repz
fildll
imul
out
cmc
lods
mov
pop
rclw
jge
fisubl
mov
mov
xchg
cmpsl
sub
stc
mov
add
dec
insl
lret
int
lods
jle
flds
cmp
outsl
leave
jne
mov
jnp
leave
push
pop
cltd
mov
and
mov
pop
sbb
mov
aad
push
mov
mov
idivb
ret
iret
jmp
pop
nop
pop
loop
fdivr
mov
xchg
cwtl
fdivrl
mov
inc
cs
and
test
into
pop
push
xor
push
imull
jnp
pushf
pop
mov
and
mov
ret
loop
pushf
pop
ljmp
cmpsb
ljmp
add
add
mov
ds
shlb
rcrb
mov
jbe
je
lods
mov
jmp
mov
dec
jo
jge
mov
icebp
cmp
push
mov
inc
mov
sub
xor
aaa
mov
push
jle
movsl
lahf
sub
je
shlb
adc
xor
inc
mov
shll
cmp
scas
out
pop
jae
add
adc
out
xchg
jp
push
loope
leave
in
pop
push
fisubrs
push
sarl
lock
and
sub
sti
ljmp
add
cmp
fnsave
not
cmp
in
fisubrl
jge
sub
xor
mov
xor
test
or
xchg
popl
cmp
popa
cmp
das
adc
aad
dec
fldenv
in
ret
int3
jb
cmpsb
mov
add
aaa
adc
out
push
pextrw
adc
jnp
je
pop
daa
xor
aaa
sar
dec
daa
dec
jmp
mov
jmp
mov
jo
or
cmp
je,pt
xor
xchg
mov
outsb
jge
imul
outsl
es
lret
inc
push
fwait
or
popa
in
insb
sub
mov
dec
sbbl
jae
decb
ds
mov
stos
pop
lahf
movsb
push
out
add
push
pop
mov
hlt
mov
add
add
push
in
jo
iret
insl
cld
cmp
aas
and
stos
inc
int3
nop
in
or
push
cmpsb
outsb
mov
loop
jg
sbb
fstpl
inc
mov
ja
in
loope
ret
and
and
dec
add
movsl
xor
push
xchg
xchg
shrd
in
or
lret
sbb
outsl
js
arpl
out
faddl
add
ret
xchg
mov
cltd
xlat
loop
cld
push
jb
dec
loop
mov
adc
mov
mov
pop
xor
mov
mov
jno
and
adc
outsb
inc
imul
shll
out
jecxz
fucomi
popa
int
mov
cmpsl
scas
cltd
sub
xor
sub
or
dec
mov
repz
jno
xchg
scas
test
add
mov
mov
xchg
movsb
sti
add
dec
notb
dec
call
push
in
das
nop
xor
push
fistpll
cmpsl
into
nop
sbb
xchg
push
sub
mov
sbb
ret
int3
sbbb
ret
loope
xchg
ret
mov
cmovp
test
or
fdivrl
aas
push
dec
aas
insl
and
mov
ret
sbb
pusha
adc
jl
cli
inc
lods
adcl
daa
push
scas
adc
out
add
add
rorl
les
outsl
fisttpll
mov
mov
lods
mov
stc
ss
scas
cmpsb
gs
sub
push
adc
inc
and
arpl
and
jo
hlt
stc
push
ja
repz
lds
xor
in
sarl
inc
sqrtps
mov
daa
addr16
add
push
push
setne
jb
pop
leave
insl
testl
xchg
fstpl
jp
add
add
ds
daa
jle
das
in
xlat
lcall
push
mov
sub
push
push
or
sti
pop
iret
adc
jp
in
jg
inc
ds
push
hlt
jb
push
or
scas
shlb
hlt
pop
sub
lcall
into
mov
jne
xchg
cmpb
aad
enter
adc
stos
aas
mov
xchg
insb
insb
pop
mov
adc
mov
inc
cmp
fs
pop
imul
adc
sbb
xor
mov
pop
shll
icebp
testl
jae
daa
push
xchg
mov
test
adc
cmp
cmp
decb
cmp
jne
xor
cld
int3
mov
or
dec
jae
jp
mov
movsl
data16
sti
shlb
and
loop
pop
cmc
cltd
or
jg
movsb
jae
xor
xor
nop
test
jle
add
aas
notb
add
repnz
mov
or
or
les
in
clc
pop
addb
mov
inc
in
mov
ljmp
mov
dec
ss
xchg
inc
sarl
jp
jecxz
fisubrs
leave
xor
adc
dec
pop
inc
outsl
inc
sarb
mov
cwtl
add
jg
insb
daa
pop
mov
mov
aas
dec
rolb
cli
dec
adc
or
mov
mov
dec
in
cltd
sti
push
sub
inc
pop
cmp
mov
push
push
add
clc
mov
push
leave
test
push
pop
sub
jne
cmp
lret
int
jg
out
les
cmp
add
inc
or
xchg
roll
jnp
scas
js
stos
push
push
inc
sub
lods
sub
cmp
add
add
and
pop
sbbb
es
lock
and
sub
sbb
rorb
add
add
pushf
jbe
jns
xor
mov
mov
xor
dec
scas
jne
mov
loop
mov
fdiv
sub
sti
cmovo
repz
cmp
ret
cmp
mov
add
jle
in
loop
in
xchg
jae
loope
popa
movsb
or
mov
fisttpll
fstps
push
cmp
jbe
inc
jno
sub
in
xchg
loopne
es
pusha
std
lea
lcall
nop
add
popf
gs
push
dec
cmpsb
jae
add
daa
fdivrs
stc
int
arpl
or
mov
icebp
call
xchg
add
movl
xchg
mov
xorb
xorl
adc
mov
insb
mov
shll
cmp
fstpt
repz
and
stc
inc
fs
inc
mov
fcoml
out
je
dec
mov
loop
or
repnz
dec
jns
imul
sub
push
movsl
ljmp
mov
sub
cmp
sarb
aad
xor
add
aas
adc
sub
and
jbe
inc
push
add
lock
loopne
dec
mov
enter
std
mov
xor
adc
mov
cld
pop
in
mov
mov
sub
adc
movl
pop
mov
js
pop
lret
lock
xor
jle
pop
cltd
mov
gs
mov
in
inc
stos
pop
inc
mov
repnz
add
in
cmp
sbb
dec
cmp
imul
mov
xchg
fldl
and
push
mov
out
cmp
xor
push
cmp
mov
pop
icebp
aas
cmp
movsb
imul
sahf
sahf
mov
scas
dec
nop
xchg
sbb
inc
or
jae
mov
pop
movsl
and
aad
jecxz
inc
std
test
mov
mov
dec
mov
mov
mov
xchg
adc
mov
ds
sub
in
push
and
movsl
and
shl
rcrb
out
inc
push
into
add
and
out
sbb
ror
fmull
cmc
push
scas
cmp
sarl
adc
fstpl
lea
ljmp
mov
pop
ret
cmpsb
mov
insl
lret
add
imulb
mov
mov
fnstenv
int
and
leave
adc
outsb
jns
adc
sbb
cli
xor
dec
and
fnstsw
or
ds
pop
repz
jae
movsb
pop
pop
loop
or
rol
and
add
xor
xorb
lahf
jmp
orl
arpl
pop
in
pusha
lock
push
std
outsb
lret
lods
xchg
jnp
sub
shrb
or
xchg
andb
add
dec
or
sbb
lock
cmp
jne
nop
mov
out
sbb
mov
popf
cmp
inc
addr16
add
xchg
cli
jecxz
mov
frstor
mov
iret
mov
inc
xor
jne
mov
and
add
lcall
push
pop
stc
lea
mov
pop
or
pop
sti
lret
dec
adc
icebp
xchg
outsb
xor
fcoms
adc
add
jne
pop
mov
jecxz
lahf
stos
pop
negl
rcll
mov
shlb
xchg
mull
xchg
mov
fcmovnu
fistl
cmpb
lret
jns
in
cld
test
nop
shrl
jge
cmpl
addr16
xchg
outsl
add
daa
in
insl
jns
dec
xchg
push
mov
add
xchg
in
aaa
mov
ds
inc
repnz
out
ret
jb
push
push
pop
lods
or
cmp
push
xchg
mov
jle
jns
js
mov
out
js
mov
test
shrb
add
mov
adc
daa
fidivl
add
lds
shr
jmp
addr16
repz
inc
jg
or
loop
mov
fnstenv
shl
mov
inc
aas
cmp
lret
clc
pushf
add
mov
xlat
jne
lock
bound
pop
hlt
clc
in
or
jg
cwtl
fiadds
lcall
aaa
sbb
mov
inc
mov
mov
mov
and
xchg
iret
cmc
fcom
fsub
loop
stos
sub
inc
pop
mov
out
insb
dec
mov
movsb
dec
jl
jge
lret
mov
cmc
push
cmc
mov
push
lea
daa
cli
into
les
jae
enter
sub
sti
stos
dec
mov
fs
inc
cmpl
pop
jmp
pop
push
pop
fldenv
mov
mov
dec
pusha
xchg
jle
add
and
out
testb
mov
and
ljmp
faddp
hlt
add
les
fmull
movsb
cltd
movsl
insb
pop
fidivl
cmpsb
inc
clc
repz
outsb
cmp
and
loopne
in
ljmp
add
push
out
inc
mov
sbb
sbbb
lahf
push
jle
pop
cld
dec
gs
gs
sbb
daa
pop
cld
cltd
lea
mov
add
mov
int3
push
xchg
ret
xor
mov
sahf
mov
jg
in
int3
mov
repnz
mov
xor
dec
push
inc
xchg
cmc
sahf
pop
adc
flds
inc
dec
sahf
and
adc
movsl
hlt
adc
adc
pop
dec
and
fs
sbb
shl
jae
mov
cs
int
jle
sti
xor
fidivs
mov
xchg
fbstp
push
xlat
mov
test
push
addb
mov
fcmovb
lods
mov
jno
pop
dec
sbb
out
arpl
add
lret
jae
fdivl
push
int3
push
popf
inc
stos
adc
mov
fucom
mov
adc
cmpsb
sahf
adc
add
or
aam
pop
jp
mov
or
jecxz
hlt
add
cmp
and
popa
dec
dec
mov
mov
nop
jge
aam
xor
mov
test
stc
inc
loop
xor
or
dec
stos
xor
in
lea
mov
sbb
loope
xor
test
fbld
fs
cmp
mov
cmp
mov
cwtl
out
test
push
aas
sub
add
add
mov
and
cmp
arpl
sub
dec
adc
insb
dec
adc
inc
scas
mull
fdivrs
ja
jl
dec
jg
mov
out
and
xor
je
pop
dec
add
ds
mull
push
add
push
or
sbb
sarl
cmc
and
and
not
pushf
mov
in
testl
xor
ret
mov
add
xchg
xchg
icebp
lods
jns
inc
inc
jle
xchg
stc
add
pop
lods
cmp
pop
mov
cmp
clc
pop
inc
jbe
cmp
pop
mov
pop
ret
mov
push
insl
or
add
ret
loopne
out
add
out
data16
dec
fldl
hlt
popa
andl
cwtl
filds
lds
js
lret
in
mov
mov
nop
stc
sbb
adc
jge
sub
