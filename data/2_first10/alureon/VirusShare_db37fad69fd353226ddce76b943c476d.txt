push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
push
mov
testl
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
pop
ret
push
mov
push
andl
push
lea
push
push
call
add
cmpl
je
push
pushl
call
pop
pop
test
jne
push
mov
push
call
push
call
push
call
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
push
call
push
call
push
call
mov
pop
jmp
mov
leave
ret
mov
mov
ret
mov
push
mov
xor
cmp
jne
mov
jmp
mov
push
mov
mov
test
je
mov
inc
inc
decl
jne
cmpl
pop
jne
dec
mov
movb
pop
ret
push
mov
sub
mov
mov
mov
sub
mov
je
mov
test
je
push
mov
add
test
je
push
push
mov
sub
mov
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
addl
decl
jne
mov
test
jne
pop
pop
pop
xor
inc
leave
ret
mov
push
mov
push
mov
xor
mov
test
movl
je
push
call
pushl
call
mov
xor
inc
pop
pop
ret
push
mov
sub
push
push
mov
xor
cmp
je
mov
cmp
je
cmp
je
cmp
je
add
push
lea
push
push
call
mov
add
add
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
sub
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
mov
mov
lea
ror
mov
lea
add
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
cmp
jb
mov
mov
test
je
mov
sub
mov
mov
inc
dec
jne
pushl
mov
pushl
pushl
pushl
pushl
call
mov
mov
mov
call
mov
add
push
pushl
pushl
pushl
call
add
pop
jmp
xor
pop
pop
leave
ret
mov
push
xor
cmp
je
cmp
push
mov
je
push
call
jmp
push
push
push
pushl
call
push
push
push
pushl
call
push
push
push
pushl
call
pop
pop
ret
push
call
pop
ret
push
mov
mov
mov
mov
mov
mov
cmp
jb
push
push
mov
mov
mov
lea
xor
test
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
mov
mov
lea
ror
lea
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
mov
inc
cmp
jb
pop
pop
pop
ret
jmp
push
mov
sub
mov
push
push
push
push
mov
movl
call
andl
movl
mov
movl
mov
mov
movl
mov
mov
mov
mov
mov
imul
xor
add
incl
mov
push
push
mov
call
mov
mov
mov
mov
mov
xor
mov
div
mov
mov
mov
mov
sub
not
add
xor
mov
mov
incl
add
cmpl
jb
cmpl
je
mov
mov
jmp
push
call
mov
mov
mov
xor
push
push
push
push
call
movl
mov
push
shl
push
add
incl
push
push
call
mov
mov
test
je
push
call
mov
push
push
call
mov
call
add
cmpl
je
cmpl
jne
lea
push
push
pop
add
xor
div
push
pushl
push
call
mov
push
push
push
push
call
lea
mov
lea
add
lea
add
mov
mov
mov
mov
and
call
mov
mov
mov
call
mov
mov
push
push
mov
xor
push
push
mov
mov
call
mov
lea
push
push
push
lea
push
pushl
movb
pushl
movb
push
call
push
push
push
call
mov
call
mov
call
test
je
pushl
mov
pushl
pushl
pushl
call
cmpl
mov
jne
push
call
test
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
push
lea
sub
mov
push
push
push
push
push
push
mov
call
push
push
call
test
je
push
xor
push
call
push
mov
call
mov
cmp
je
lea
push
push
call
mov
mov
mov
mov
push
push
mov
call
cmp
jne
movl
push
push
call
push
push
mov
call
xor
cmp
setl
mov
mov
cmp
mov
je
mov
cltd
sub
sar
mov
push
push
call
mov
neg
sbb
and
add
push
mov
call
push
mov
call
movzwl
push
call
pop
pop
push
push
push
call
push
push
push
call
push
push
lea
push
call
lea
push
call
mov
mov
mov
movzwl
xor
jmp
cmp
jne
cmpw
je
inc
inc
mov
cmp
jne
jmp
xor
inc
lea
push
movl
movl
call
mov
push
pushl
call
push
push
push
push
push
pushl
mov
call
cmp
mov
mov
jne
xor
push
pop
lea
rep
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
movl
movl
movl
mov
movl
movl
call
test
je
mov
push
mov
imul
cltd
pop
idiv
push
push
mov
mov
add
mov
lea
mov
mov
shl
mov
lea
push
call
mov
mov
sub
sub
mov
cmp
mov
mov
jle
mov
push
pushl
neg
push
push
pushl
sbb
push
push
push
and
add
push
push
push
push
call
cmp
mov
je
lea
push
call
push
push
push
pushl
call
test
jne
call
xor
jmp
call
pushl
call
pushl
pushl
call
pushl
call
push
pushl
call
mov
xor
cmp
sete
push
call
cmp
je
call
cmpl
je
cmpl
je
push
push
push
pushl
call
xor
inc
pop
pop
pop
add
leave
ret
mov
push
mov
sub
mov
push
mov
push
push
lea
mov
call
lea
xor
call
test
je
test
je
cmpb
je
mov
push
call
mov
push
mov
call
mov
lea
push
call
mov
test
je
push
push
push
push
call
add
push
call
test
je
push
push
push
call
mov
test
jge
push
push
push
call
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
call
mov
mov
pop
pop
pop
call
leave
ret
push
mov
sub
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
jne
inc
jmp
andl
push
push
lea
lea
cmpl
mov
je
mov
mov
jmp
mov
mov
add
xor
nop
movb
mov
mov
inc
cmp
jb
mov
test
je
lea
movsbw
mov
add
inc
mov
test
jne
lea
push
call
mov
test
je
mov
mov
add
andl
cmpl
mov
je
mov
mov
testl
je
push
call
mov
and
push
pushl
call
push
jmp
push
call
push
call
mov
add
add
push
pushl
call
push
mov
call
cmpl
je
incl
mov
mov
lea
cmpl
jne
mov
incl
mov
imul
add
mov
add
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
test
je
andl
mov
sub
add
mov
mov
mov
lea
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
cmpl
mov
je
or
sub
mov
mov
sub
add
mov
mov
mov
lea
push
push
push
call
mov
mov
mov
sub
add
mov
movzwl
add
lea
movzwl
lea
mov
mov
mov
andl
xor
cmp
jae
mov
mov
mov
mov
mov
mov
addl
add
push
pop
rep
mov
add
add
incl
mov
movzwl
cmp
jb
mov
mov
add
pop
mov
xor
pop
inc
pop
leave
ret
mov
push
mov
sub
mov
push
push
push
mov
mov
mov
push
mov
lea
push
pushl
pushl
call
lea
xor
test
je
push
push
push
call
add
test
je
push
add
push
call
inc
pop
add
cmp
pop
mov
jl
mov
mov
pop
pop
mov
pop
call
leave
ret
push
mov
push
push
mov
imul
push
mov
cmp
jb
mov
push
call
mov
add
imul
push
xor
pop
div
mov
mov
mov
mov
sub
mov
test
je
mov
sub
push
mov
call
xor
divl
mov
add
cmp
jae
mov
mov
imul
xor
divl
xor
mov
sub
imul
div
mov
cmp
jae
mov
sub
push
pushl
pushl
call
add
add
add
add
cmpl
jne
pop
pop
pop
leave
ret
mov
mov
mov
mov
rol
imul
add
mov
mov
mov
ret
mov
push
mov
push
mov
test
je
push
mov
test
je
andl
push
call
push
call
push
call
test
je
push
call
push
call
mov
push
call
push
call
pop
pop
pop
ret
add
add
inc
adc
pop
arpl
and
jp
fidivs
mov
out
mov
scas
add
ret
jmp
loop
out
daa
jg
add
andl
leave
add
fnstenv
das
pop
mov
stos
sarb
in
iret
test
les
xor
dec
sbb
push
subl
adcl
imul
adc
mov
sahf
push
xchg
push
jmp
insl
leave
aad
push
fiaddl
in
es
xor
daa
fs
js
rclb
outsb
inc
shll
jbe
sbb
outsl
push
mov
incl
scas
scas
push
fimuls
dec
pop
std
inc
mov
or
mov
inc
fsubs
dec
scas
pop
inc
fisttpll
ficoms
movsl
imul
mov
lods
mov
sub
sarb
cmp
add
shlb
xchg
push
call
add
add
ja
adc
jb
mov
mov
dec
mov
push
dec
adc
hlt
lahf
xchg
sti
push
loop
dec
lret
push
sub
jp
lods
or
sbb
pop
and
cmc
ss
test
outsb
out
and
arpl
push
loope
insb
sti
call
adc
fs
nop
jns
ficoms
add
or
dec
dec
inc
js
lahf
sbb
or
jle
xor
out
dec
aad
lea
sarl
push
mov
sbb
sbbb
movsb
insl
xchg
int
iret
push
pop
pop
shlb
repnz
add
or
push
adc
hlt
cwtl
mov
mov
lret
loope
dec
xor
add
es
les
mov
stc
mov
test
out
icebp
in
add
adc
adc
lcall
pop
push
int3
out
fcomp
div
jo
xchg
repnz
fsubl
mov
outsl
and
cmp
inc
add
or
cmpsl
or
jb
popf
gs
inc
xor
rcrb
ret
push
jecxz
adc
xor
lret
jnp
inc
and
inc
cmp
xor
call
out
int3
js
pop
int
add
sub
mov
mov
dec
dec
movsb
xchg
sub
imul
ret
inc
inc
ss
pop
xor
sti
in
cmp
testl
lea
cltd
push
rcr
sub
xlat
sbb
mov
xchg
pop
inc
push
aam
mov
cmc
xchg
xor
push
mov
inc
cmp
xor
and
push
icebp
push
jecxz
sti
jae
cmp
push
shr
lods
clc
cmpsl
pop
js
sbbl
mov
int3
add
jne
push
arpl
jo
sarl
inc
aas
std
int
or
jb
aaa
rcrb
clc
jp
push
add
pop
xchg
mov
movsb
mov
push
adcb
jmp
cmp
push
jmp
mov
arpl
fs
mov
sahf
fdivr
imull
scas
les
imul
add
add
xchg
inc
lcall
js
test
sub
sub
outsb
lahf
pushf
jecxz
fnstsw
testl
lret
insb
ljmp
lods
mov
lret
lods
push
push
out
and
xlat
insl
mov
dec
pop
xchg
cld
pushf
adc
cli
xor
mov
jmp
inc
popf
push
roll
adc
cltd
pop
xchg
cmpsl
or
and
dec
fwait
imul
arpl
repz
pop
mov
jle
pusha
call
add
ret
dec
dec
repz
mov
add
or
addl
or
mov
and
into
aaa
ss
adc
xor
xor
sarb
jp
mov
cvtps2pd
push
jbe
mov
dec
pushf
mov
mov
clc
mov
mov
xor
adc
fadd
clc
mov
mov
jno
sbb
xchg
push
and
add
add
lcall
in
aad
xchg
push
push
in
iret
pop
cmpsb
movaps
ss
mov
adc
push
test
adc
insl
mov
pop
push
jo
xor
test
fmulp
xor
cmp
pop
shll
push
mov
add
sub
mov
sub
test
sti
ret
xor
mov
movl
xor
push
pop
jo
add
add
mov
sti
lret
push
lock
cmp
sub
xor
cmp
sub
xchg
pushf
mov
xlat
sti
add
jbe
fidivrl
cmpsl
stc
into
jle
fimuls
lcall
dec
es
daa
inc
sbb
imull
cmp
setno
in
jns
cmp
mov
xchg
adc
xchg
cmp
mov
dec
pop
iret
into
pop
sbb
sub
add
out
aad
xchg
jle
fisubl
pop
push
jne
data16
std
imul
test
fwait
add
test
mov
xchg
lahf
push
adc
jae
and
inc
push
sti
pop
pop
insl
jecxz
in
push
out
ret
cmp
add
add
dec
xchg
and
sbb
sub
sbb
in
push
push
adc
mov
inc
jns
movsl
adcb
daa
repz
jb
js
sub
fwait
jbe
into
sbb
add
add
insl
mov
xor
pop
mov
int
push
xchg
aaa
popa
aam
xor
pop
push
or
pop
or
shrb
adc
adc
ret
adc
clc
aaa
mov
fldcw
int3
and
sub
xchg
xor
call
imul
or
and
sub
xchg
ds
popf
mov
aaa
adc
shll
inc
dec
mov
and
test
mov
xchg
dec
mov
pop
add
sbbl
icebp
leave
xchg
sbb
dec
adc
cmpsb
xor
pushf
mov
pop
cmc
mov
cmp
fstp
mov
jae
unpcklps
inc
lret
fisubl
jl
pop
or
loopne
lock
aam
mov
loope
sub
adc
add
and
into
inc
sub
data16
scas
lret
xchg
jge
out
sub
in
add
mov
mov
add
sub
and
sbb
jnp
push
cmp
pop
psubsb
jne
xor
test
test
cmp
push
sub
sti
inc
cmpsl
iret
xchg
cld
aaa
cmpsl
fwait
add
subb
push
push
shr
push
or
or
jb
shll
in
sub
scas
push
cmp
jo
test
cwtl
lea
cmpsl
xchg
arpl
movsb
or
jne
daa
pop
mov
and
push
add
sar
loope
jb
or
lcall
cmovns
inc
ja
mov
call
pop
insb
mov
aam
add
mov
daa
push
shll
lret
data16
adc
cmp
lret
hlt
fsub
in
mov
pop
inc
or
aas
daa
shlb
mov
mov
or
arpl
mov
add
inc
test
pop
lret
adc
hlt
sub
ja
push
add
daa
out
repnz
sub
dec
jecxz
cli
or
xchg
mov
in
cltd
jbe
sahf
pop
outsb
jecxz
in
mov
cmpsb
adc
ds
add
pop
jle
xchg
je
aaa
xchg
inc
insb
adc
pushf
iret
adc
xlat
cli
xor
jns
fs
aam
add
sbb
xor
movsl
js
sti
rorb
cli
or
and
stc
sbb
add
jl
repz
ss
pop
mov
xor
mov
xchg
addb
cmp
mov
int3
cmp
sbb
ret
add
inc
mov
and
jbe
imul
sbb
jl
test
adc
xor
loopne
lods
mov
lcall
pop
insb
call
lds
jb
movsb
dec
xor
icebp
test
mov
inc
add
insb
je
stos
jo
imul
or
hlt
or
jecxz
mov
fs
inc
cwtl
and
mov
pop
lds
jno
clc
fwait
xchg
ja
test
xchg
idiv
stc
adc
or
dec
cmpsl
inc
lock
outsb
stc
test
cmp
mov
inc
and
add
loopne
jg
mov
sti
loopne
leave
jl
test
add
add
pop
mov
pop
lret
mov
cmp
inc
push
cmp
outsl
pop
adc
xorl
je
add
sahf
mov
push
xor
mov
jp
mov
or
in
or
mov
insb
mov
pop
or
mov
jle
out
ds
cs
mov
mov
stos
push
jbe
out
lcall
add
push
dec
adc
ljmp
sbb
fnstsw
dec
fdivs
leave
shll
xor
inc
cli
and
add
jge
pop
lock
sub
jo
dec
mov
sbb
enter
lret
imul
mov
loopne
xor
in
cmpsb
cltd
mov
cmp
nop
jno
aaa
subl
testl
imul
ret
scas
notb
xor
mov
sbbl
in
mov
mov
add
out
sbb
push
mov
xor
sarb
sub
les
sbb
in
inc
mov
movups
lock
mov
sbb
sahf
xorl
popa
add
cli
mov
jmp
mov
lods
adc
xchg
cld
ja
cld
insl
in
in
int
or
andb
mov
ficoms
icebp
mov
and
clc
movsl
adc
call
lret
add
add
push
pushf
mov
adc
and
or
push
insl
or
jnp
push
adc
add
aam
jp
pop
lods
xchg
ljmp
sahf
sub
sub
arpl
pop
xchg
sahf
shll
fdivrl
shll
mov
mov
aam
xlat
stos
sub
dec
mov
das
cld
shl
xor
mov
shr
inc
mov
mov
add
add
mov
mov
aas
mov
pop
cld
mov
outsl
adc
xchg
pop
andb
inc
inc
pop
ret
mov
jns
loop
mov
cli
jne
sbb
imul
pop
jl
sbb
sbb
sub
jo
push
push
push
nop
dec
add
cmpsb
and
sub
stos
mov
inc
in
dec
pop
fwait
push
outsl
dec
mov
fsubrl
and
add
inc
daa
sbb
daa
dec
jp
movsl
add
div
mull
mov
cmp
fneni(8087
subb
sub
adc
mov
or
out
fnstsw
fst
jae
fs
pushf
push
ja
les
xorb
je
jns
movsl
cmp
jnp
add
lds
popf
cmp
fiaddl
dec
mul
jbe
sbb
lret
out
cltd
cltd
sub
roll
add
gs
fisubs
cmp
lcall
jg
insb
add
sbb
cmp
and
cs
aas
hlt
mov
loop
adc
sub
push
call
sub
bound
pop
jp
jle
das
in
ficomps
sti
inc
pop
es
or
dec
xchg
and
out
loop
push
cwtl
add
inc
xchg
call
das
jo
int
aas
cmpb
test
aaa
loope
push
push
inc
test
push
gs
pushf
jno
movsb
fsts
and
xlat
mov
clc
or
jmp
jno
fisttps
mov
sbb
add
std
fldl
bnd
xor
dec
xchg
pop
bound
sbb
lret
push
xor
int
add
dec
outsb
add
add
mov
sbb
and
pop
and
cmp
addr16
jbe
lret
icebp
mov
pushf
icebp
imulb
xchg
dec
sarl
outsl
xor
xchg
jmp
dec
fists
or
ret
and
jge
pop
fdivrp
jecxz
and
adc
xchg
fistpl
ret
fildll
jae
ret
jp
stos
jge
xchg
test
add
ret
xor
in
xchg
jb
mov
movsb
xor
imul
adc
fldenv
popa
mov
xor
insb
push
int
mov
lock
mov
fdiv
jmp
push
jle
mov
cmpb
in
xchg
adc
je
or
test
cli
xchg
hlt
mov
ret
add
fnsave
dec
adc
loop
add
xlat
and
add
add
mov
mov
mov
rolb
jg
out
dec
push
nop
xlat
xor
mov
mov
adc
lcall
ficompl
in
sub
mov
mov
mov
xor
jecxz
pop
shll
push
scas
dec
stc
mov
xchg
ss
rcr
pop
push
mov
adc
or
xchg
shlb
adc
add
add
pop
pop
and
pusha
dec
xor
inc
lods
xchg
jns
aaa
pop
fwait
dec
insb
pop
aas
pop
shrb
loope
jno
add
pusha
pop
in
dec
mov
sub
nop
mov
mov
imul
arpl
outsb
jecxz
mov
sub
sub
test
mov
roll
push
jns
enter
ljmp
loopne
into
inc
or
mov
sbb
inc
js
scas
sub
dec
adc
stos
outsb
clc
add
add
mov
and
or
test
icebp
fnstsw
in
ss
cmc
dec
mov
push
fmul
inc
into
sbb
jecxz
clc
cmp
stos
or
and
jb
push
dec
sbbl
xorb
psrld
push
push
mov
sbb
cmpl
nop
aam
push
add
rorb
dec
sub
or
cmp
imul
int
in
stc
aad
add
rcl
addl
das
pop
dec
insb
jle
mov
dec
gs
lret
sbb
mov
and
lock
cltd
mov
jecxz
push
pop
mov
cmp
test
outsl
scas
pop
fisubrl
sub
dec
or
gs
ret
dec
mulb
clc
dec
mov
cmp
inc
in
dec
jbe
pop
cli
in
push
loop
mov
sbb
xor
clc
and
pop
dec
ljmp
imul
popa
aad
inc
ror
xor
ss
leave
inc
mov
negb
xchg
scas
out
mov
clc
xor
mov
and
push
outsl
dec
sarl
add
out
xor
xchg
addl
stos
and
addr16
add
jge
jl
jl
outsb
pop
out
push
sbb
imul
repz
push
in
iret
pop
test
push
vpshad
out
addr16
jg
ds
ja
pmaddwd
mov
leave
ret
rcrb
into
imul
dec
sbb
mov
addr16
xor
mov
jno
cmp
cmc
addr16
push
add
xchg
mov
push
bound
stos
xor
push
mov
push
push
inc
enter
outsl
cmpsb
mov
add
imul
flds
add
add
mov
mov
jmp
int
popa
sub
push
insl
xchg
xchg
jl
mov
fwait
mov
subl
or
nop
jb
ja
ja
inc
add
je
fs
in
or
shlb
pop
sub
inc
mov
iret
push
or
lea
in
add
mov
out
cwtl
adc
inc
mov
mov
dec
adc
dec
lds
pop
popf
cmp
pop
sbb
add
add
inc
xor
xor
iret
aas
test
sbb
mov
enter
jnp
adc
dec
lahf
jle
push
sbb
movsl
outsb
lahf
jg
inc
fsubrl
adc
das
mov
inc
lock
rcll
rclb
aam
icebp
mov
ljmp
push
lock
dec
leave
movsl
mov
add
xchg
scas
arpl
in
adc
es
iret
sbb
js
add
cmp
dec
ja
mov
fisttps
jg
aaa
jbe
pop
xlat
adc
and
push
mov
lea
repnz
sbb
xchg
dec
negb
adc
js
dec
rep
into
pusha
sub
sbb
pop
pop
cmc
sti
insl
pop
ret
adc
pop
cmp
jb,pt
mov
popf
push
loop
dec
push
pop
xor
incl
imul
inc
loop
push
cli
or
add
add
jecxz
or
mov
sub
pop
and
inc
and
cwtl
or
repnz
and
jnp
popa
test
shrb
js
out
repz
dec
xor
sub
std
xor
adc
insl
in
fsubp
in
mov
mov
push
int3
mov
cmp
push
push
mov
push
mov
jle
mov
mov
cmc
mov
popa
mov
leave
inc
push
xchg
sbb
sbb
xchg
icebp
mov
dec
outsb
jae
test
push
mov
stos
cwtl
dec
sub
pop
fisttpll
addr16
mov
aad
inc
test
adc
mov
ss
es
sub
loop
stos
into
push
push
imul
loopne
leave
inc
fildl
push
mov
gs
mov
jecxz
in
xchg
sbb
xlat
xchg
cli
rcl
fadds
add
add
mov
mov
mov
adc
dec
leave
push
jle
das
add
inc
or
loopne
xchg
stos
sbb
fdiv
fistl
test
pusha
cld
xchg
mov
inc
ds
mov
fimull
push
sbb
adc
arpl
les
fmull
sbb
test
adc
push
sub
xchg
call
push
mov
jo
test
int3
sub
scas
jge
mov
push
lcall
add
fstpt
les
lods
ret
insb
push
jnp
pop
add
das
add
cmp
and
dec
and
lds
cmp
fmull
fs
and
idivb
add
mov
mov
push
sbb
mov
das
xor
ja
pushf
mov
or
pop
mov
gs
push
cli
leave
mov
mov
loop
and
mov
jbe
add
pop
sbb
sbb
add
add
dec
jb
je
mov
mov
loope
mov
mov
cmp
push
in
xchg
and
iret
cs
shrb
add
xlat
xlat
addb
imul
daa
push
ret
mov
aaa
pushf
and
sub
repz
add
je
mov
add
or
dec
xor
sub
inc
lock
xchg
lea
xchg
and
push
xor
mov
or
pop
out
add
test
loop
xor
xchg
sbb
mov
insl
push
or
inc
pop
aam
and
icebp
fcmovnb
or
jmp
arpl
jnp
mov
cmc
mov
push
push
sbb
and
outsb
sub
fucom
xchg
add
cmpb
cmpsb
icebp
add
inc
pushf
insb
xchg
adc
adc
pusha
cmc
jmp
mov
jp
inc
pop
out
mov
add
add
add
mov
or
mov
das
mov
dec
std
lahf
mov
ja
inc
pop
jge
mov
inc
sbbb
cmp
out
pop
and
xchg
in
and
popa
lods
test
push
sbb
and
aaa
test
mov
scas
es
rclb
pop
push
ja
orb
jbe
dec
bound
adc
inc
jno
ja
add
push
sub
out
adc
adc
ret
cmp
imul
mov
scas
inc
jle
mov
scas
pop
rcrl
sub
mov
inc
lods
arpl
pop
adc
mov
jo
je
je
jge
sbb
mov
aas
jle
pop
clc
popa
shll
sub
mov
aas
sub
dec
xchg
inc
outsb
ss
mov
imulb
xor
pusha
cmp
test
and
test
call
jmp
adc
cmp
inc
push
call
xchg
insb
push
jns
sbb
cli
lret
jecxz
into
inc
inc
inc
rol
cmpl
cmp
add
jo
add
loopne
sbb
popf
or
data16
and
jecxz
popa
out
addr16
inc
and
and
out
in
repnz
in
push
push
mov
scas
in
mov
add
xchg
mov
imul
and
push
xlat
ficoml
adc
popa
sub
mov
mov
shll
out
cmp
mov
test
test
cld
push
dec
pushf
sbb
repz
mov
in
jmp
iret
popl
jb
daa
bound
add
dec
fwait
prefetcht1
cmpsb
inc
mov
adc
add
cli
sbb
push
pop
cmp
jecxz
inc
jne
push
ret
xchg
int3
mov
cli
pusha
or
sbb
adc
movsl
jae
push
rorb
pop
cwtl
stos
xor
push
jno
nop
fs
aam
mov
es
insb
int3
fdivrl
jg
pop
sbb
stos
lea
pushf
mov
dec
push
loope
jbe
add
mov
push
mov
mov
push
shrb
add
add
pusha
out
jle
mov
push
mov
nop
stos
add
adc
xchg
sub
out
lcall
hlt
mov
mov
dec
push
or
andb
pop
sarb
jle
shr
sahf
push
imul
scas
clc
mov
mov
pop
push
popf
in
mov
dec
rorl
jge
lds
xchg
jnp
and
stos
mov
in
pusha
nop
ret
add
add
adc
mov
sub
hlt
and
cmp
dec
jle
cmp
pop
pop
cs
mov
cmp
jecxz
mov
int3
cltd
mov
pop
xchg
cwtl
ficoms
or
and
shlb
inc
add
ret
dec
xor
pop
and
loopne
lahf
xchg
mov
ret
jns
test
lds
into
ja
ret
in
jle
call
or
add
jecxz
icebp
xor
push
out
inc
das
dec
push
divb
mov
lret
and
pop
outsb
cli
arpl
dec
xor
push
lcall
push
add
mov
aaa
out
sarb
repnz
inc
jmp
aad
outsl
aad
cmp
in
cs
push
fists
jb
ljmp
outsb
fstpt
xor
divb
inc
add
sbb
nop
xchg
jae
mov
arpl
iret
pop
or
and
pop
lea
push
jne
cwtl
adc
mov
xchg
push
cmp
pop
in
das
push
lock
push
xchg
cmpsl
dec
cmp
push
xlat
test
data16
pop
push
mov
pop
adc
test
daa
or
fistps
std
mov
jmp
lahf
roll
aam
push
sbb
add
cli
xor
xor
out
jp
jae
add
mov
dec
cwtl
cmp
outsb
add
jne
sub
push
fimull
sub
sbb
repnz
test
push
fs
lods
and
lods
sub
imul
repnz
push
out
xor
cmp
nop
roll
sar
aad
push
pushf
and
sahf
mov
addb
ret
mov
outsl
lods
mov
movl
add
sarl
mov
mov
fdivrl
mov
add
adc
dec
cmp
sub
and
push
push
lahf
cmp
lret
cltd
iret
pusha
xchg
mov
or
out
cmpsl
ja
xchg
loop
pusha
jns
movsb
ljmp
mov
pushf
rcr
or
xchg
mov
test
adc
frstor
add
lds
ljmp
call
sbb
pushf
mov
push
cmpl
lret
out
and
sbb
in
pop
adc
lods
or
mov
andb
test
and
gs
fs
push
jae
push
std
packssdw
sbbl
ret
movsl
add
fs
ja
inc
xchg
mov
cmp
pop
push
lds
dec
cmp
add
lock
in
jge
mov
in
pop
mov
dec
jno
or
cs
jle
and
popa
mov
pop
add
ds
xchg
push
test
fdivp
pop
addb
jg
and
pop
in
mov
jge
iret
xchg
das
jmp
add
imul
add
adc
sub
fcmovb
jns
add
insb
adc
sarl
cwtl
ja
pop
fwait
sub
clc
add
enter
int
clc
mov
fbld
dec
rcr
and
cmp
mov
incl
jmp
rcll
xlat
mov
xchg
ljmp
inc
sbb
pop
and
mov
cwtl
xor
or
sbb
jbe
roll
xchg
out
xchg
aam
fstl
jmp
push
lea
ds
dec
arpl
add
dec
mov
pop
add
xor
push
mov
cwtl
jl
popa
xor
loopne
jns
cltd
jle
jle
mov
test
fisttpll
pop
mov
in
pop
mov
adc
cmp
flds
xor
in
das
enter
movsl
jge
lods
sarb
fistps
xor
mov
push
sub
mov
cmp
push
pop
push
sub
out
ds
stc
into
cmp
add
add
mov
xchg
and
jnp
pop
jnp
sub
adc
add
xor
mov
aas
cmp
jl
ret
int
movsl
sbb
jae
jmp
bound
sahf
pop
sbb
in
les
pop
and
sahf
scas
outsl
lret
inc
cmp
push
fnsave
in
aaa
xor
mov
push
ror
shlb
adcl
push
pushf
movsb
xchg
xchg
push
lds
add
call
dec
mov
stos
mov
insb
std
int3
xor
push
lock
sahf
imul
mov
adc
popa
xor
push
xchg
xchg
rcrl
insl
adc
mov
and
jle
into
cli
push
inc
push
jns
clc
and
push
sahf
mov
sub
jecxz
cmc
mov
int3
add
sete
fld
push
mov
divl
add
add
cmp
cwtl
lds
data16
int3
mov
or
mov
mov
ret
ja
pop
enter
lret
cmc
fstpl
adc
inc
jle
push
out
or
out
cmpsl
dec
iret
vmread
jae
insl
orb
rorb
sbb
test
mov
or
and
and
mov
mov
lods
cmp
adc
cli
std
or
jnp
add
inc
pop
mov
outsl
outsb
jmp
jnp
jmp
arpl
push
test
sub
loopne
data16
mov
stos
xor
arpl
lods
loopne
mov
mov
adc
ret
data16
dec
shlb
push
pop
jge
addb
fnstcw
fsubrl
test
cmc
inc
out
rclb
loop
or
mov
out
jne
mov
xchg
or
push
xchg
jb
cmp
lret
cmp
ss
xlat
mov
dec
sub
add
add
scas
lds
cmp
mov
ficoml
adc
xchg
mov
fistpl
addr16
int3
xchg
idivl
or
adc
xchg
cwtl
ss
mov
push
outsb
push
pop
out
sbb
push
mov
push
movsb
iret
dec
add
xor
or
jbe
xchg
je
cmp
aaa
and
lret
adc
fildl
inc
mov
add
lock
data16
or
fsubr
out
mov
arpl
jae
dec
or
pop
aad
stos
repz
lock
mov
ret
incb
loopne
aas
stc
mov
pop
arpl
imul
rolb
std
add
roll
mov
mov
or
cmp
pop
sbb
fucom
lods
xchg
pop
push
dec
inc
lods
ljmp
mov
int3
loope
inc
push
lahf
add
and
add
dec
and
mov
bnd
ja
inc
cmp
mull
aaa
mov
ret
or
jl
xor
dec
data16
or
pop
mov
jg
ss
adc
mov
sbb
add
pop
fs
xchg
cmp
lods
fisttps
cmc
into
mov
mov
xor
cmpsb
out
subl
add
lea
rol
cmp
pusha
movsb
mov
andl
add
daa
cmc
test
xchg
push
out
stc
push
iret
push
pop
dec
pop
lret
and
out
arpl
out
dec
cmpsb
dec
mov
cmp
fbstp
jb
jne
dec
mov
sub
ljmp
cli
pop
daa
pop
dec
xor
loope
jne
in
fiaddl
sar
shll
movsl
popa
loope
in
inc
addr16
jno
jg
inc
rcl
dec
cmp
xchg
sti
enter
test
jge
addr16
lret
mov
popl
ss
pusha
dec
xchg
xor
cmp
or
cs
lahf
mov
loope
add
cmpl
test
cmp
mov
mov
cmpsl
jo
and
push
hlt
ljmp
xor
inc
adcb
lods
add
xchg
push
cmc
fbld
mov
add
jno
icebp
pop
mov
arpl
jbe
mov
cwtl
push
push
das
jb
ret
mov
jmp
adc
jns
sbb
in
repz
mov
lods
leave
jno
call
das
cmp
xorl
mov
repnz
xchg
fdivrl
or
stc
out
mov
and
mov
clc
jo
out
movsb
and
add
test
mov
mov
add
xchg
xor
mov
xchg
dec
mov
fwait
movsb
outsb
or
ja
xor
sub
lods
cltd
xchg
push
push
inc
xor
adc
xchg
jp
mov
sub
rorb
stos
pop
xchg
shll
inc
aad
or
fcoms
gs
imul
cmpsl
jl
sarb
xchg
push
sub
and
cmpsl
adc
rclb
push
lods
aam
xchg
sti
