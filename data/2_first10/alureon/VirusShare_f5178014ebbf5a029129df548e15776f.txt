push
and
cltd
push
out
jecxz
mov
ss
lock
or
cwtl
cmp
dec
dec
out
ret
dec
jno
xor
cmp
push
pop
jb
gs
rcrl
loope
push
inc
fmull
gs
sahf
es
scas
cmp
sbb
bound
xchg
jecxz
push
les
ret
andl
ret
ljmp
dec
dec
add
xchg
popa
leave
inc
sti
je
ret
scas
int3
cmp
aam
cld
jg
and
rolb
mov
rcrl
dec
push
cmp
add
cld
lret
xchg
sbb
lea
andl
lahf
sbb
inc
cmp
push
popf
fisubrs
fcoml
aad
iret
nop
add
mov
fcmovbe
pop
pop
movsb
mov
popa
insl
lcall
sub
imul
into
mov
jno
mov
jnp
out
rorl
stos
sub
push
push
push
or
imul
aaa
jae
add
call
into
add
jge
nop
stc
jl
stos
shl
pop
loope
call
loopne
loope
imul
lock
and
mov
or
mov
add
pop
pop
cmp
into
je
sbb
les
xor
adc
pop
fistps
dec
sbb
out
mov
hlt
pop
out
mov
ret
insl
stos
pop
inc
mov
mov
fs
es
lcallw
adc
into
jmp
jmp
mov
push
test
pop
or
das
jmp
cwtl
inc
aaa
or
cmp
and
or
mov
inc
xor
cmpsl
push
pusha
mov
push
and
jmp
ret
gs
mov
and
loop
clc
lock
dec
dec
cltd
sbb
mov
adc
imul
or
jp
jmp
insb
dec
sbb
test
into
sub
sub
sbb
ss
mov
xor
push
testl
lahf
add
and
sahf
imul
pop
lods
out
iret
ss
add
out
test
sub
add
jmp
add
or
pop
in
mov
xchg
fld1
das
stos
pop
push
xchg
inc
pop
mov
insl
mov
hlt
adc
stos
cmp
mov
stos
or
ret
inc
daa
sbb
insl
nop
mov
pushf
fiaddl
aaa
xor
mov
fwait
cmp
adc
inc
faddl
pop
pusha
mov
mov
aas
sar
ljmp
test
inc
add
mov
cwtl
push
inc
lods
or
add
faddp
enterw
xchg
movsb
popf
mov
dec
and
js
enter
enter
and
lret
dec
fs
iret
dec
jnp
cmpsl
ret
pop
jne
dec
movsl
push
outsb
mov
xlat
or
shrb
mov
out
pushf
jmp
int
sbb
cld
sbb
sub
sbb
jno
push
popf
and
fcmovbe
sbb
ljmp
push
data16
mov
xor
inc
rorb
push
jne
pop
fmuls
outsl
subb
ds
in
add
movsl
or
in
adc
mov
inc
insl
inc
push
dec
mov
push
mov
lea
add
call
dec
inc
call
add
push
dec
call
call
call
imul
add
mov
lea
mov
mov
inc
inc
and
add
lea
mov
add
dec
mov
dec
sub
sub
add
movswl
mov
inc
add
call
xor
dec
call
mov
movzwl
movzwl
imul
lea
dec
lea
dec
pop
inc
mov
imul
add
sub
pop
sub
or
pop
xor
sub
and
dec
pop
mov
mov
add
dec
mov
or
inc
or
pop
and
movsbl
pop
dec
sub
mov
lea
add
call
movzbl
mov
dec
imul
ret
inc
lea
push
mov
mov
push
dec
sub
push
lea
xor
push
inc
imul
push
lea
mov
add
dec
push
inc
ret
push
inc
dec
mov
inc
lea
mov
xor
push
sub
add
push
dec
call
pop
ret
jmp
and
and
xor
inc
movzbl
inc
dec
xchg
add
mov
mov
dec
xor
sub
imul
inc
dec
inc
dec
lea
dec
jne
inc
mov
lea
inc
pop
imul
lea
pop
xor
mov
pop
mov
dec
dec
lea
mov
mov
inc
inc
inc
mov
dec
add
ret
push
mov
movzwl
mov
dec
sub
dec
mov
mov
push
push
push
push
and
dec
movzbl
push
and
inc
inc
and
imul
xor
and
add
movzwl
mov
lea
push
sub
mov
xor
lea
lea
push
imul
sub
push
lea
mov
pushl
sub
call
dec
add
sub
add
lea
mov
movsbl
lea
imul
pop
ret
jb
sub
xor
or
mov
mov
lea
mov
add
xor
inc
imul
add
and
dec
mov
inc
inc
cmp
jb
xor
mov
add
imul
xor
mov
movzwl
xor
inc
pop
sub
dec
test
jbe
lea
sub
and
inc
and
lea
sub
lea
add
dec
dec
lea
add
lea
mov
mov
mov
inc
and
or
dec
imul
dec
movsbl
and
mov
mov
mov
sub
lea
movzbl
mov
movzbl
add
movswl
inc
and
imul
inc
mov
imul
dec
mov
imul
dec
mov
lea
imul
mov
add
or
lea
dec
mov
xor
dec
jne
movswl
mov
lea
dec
add
inc
movsbl
dec
and
mov
dec
mov
add
sub
mov
movzwl
imul
dec
lea
mov
mov
mov
add
test
jbe
inc
mov
mov
imul
dec
inc
imul
add
mov
add
movswl
xor
mov
and
lea
inc
add
mov
mov
inc
dec
dec
and
mov
lea
mov
lea
lea
movzbl
mov
mov
add
inc
sub
and
add
and
mov
inc
dec
movzbl
mov
dec
mov
mov
lea
mov
sub
dec
movzbl
sub
xor
add
dec
jmp
push
call
sub
xor
inc
mov
xor
add
mov
inc
and
dec
inc
dec
inc
xor
sub
mov
mov
or
shl
movzwl
xor
xor
add
add
push
inc
xor
inc
call
sub
pop
inc
inc
imul
inc
mov
mov
dec
inc
cmp
je
call
call
or
iret
imul
dec
inc
sub
inc
imul
lea
lea
dec
mov
movswl
inc
or
dec
pop
or
ret
push
inc
add
inc
inc
mov
push
movswl
mov
push
sub
push
mov
push
mov
mov
push
lea
and
lea
movswl
dec
call
or
push
lea
push
inc
pop
xor
inc
mov
inc
sub
mov
inc
sub
inc
dec
mov
dec
je
mov
xor
dec
mov
add
lea
inc
mov
sub
mov
xor
inc
mov
dec
lea
or
sub
repnz
lea
mov
add
add
jmp
inc
movswl
add
mov
lea
xor
mov
add
add
lea
dec
movsbl
jmp
sub
dec
lea
imul
pop
pop
ret
push
movswl
mov
dec
mov
imul
add
dec
mov
sub
dec
dec
dec
imul
sub
sub
dec
inc
movzbl
mov
mov
inc
lea
mov
dec
inc
inc
inc
pop
ret
sub
mov
mov
mov
lea
mov
add
dec
mov
mov
lea
mov
inc
dec
xor
imul
add
mov
sub
mov
inc
add
mov
mov
imul
imul
xor
cmp
jb
or
push
inc
inc
push
add
mov
push
dec
mov
mov
add
sub
xor
and
add
xor
lea
dec
xor
mov
and
push
dec
mov
xor
dec
add
mov
imul
mov
mov
imul
inc
movzbl
mov
lea
add
add
sub
dec
add
dec
movzbl
inc
or
inc
mov
and
sub
add
inc
inc
imul
sub
mov
sub
imul
xor
sub
xor
mov
cmp
jmp
fidivl
cwtl
mov
icebp
es
jne
leave
xlat
push
and
fcmovu
outsb
dec
repz
or
xor
mov
inc
xchg
lret
dec
or
pop
push
push
and
jge
fsub
cwtl
mov
stc
jns
dec
sbb
cmp
in
psrlw
je
mov
aam
sbb
adc
or
aas
jo
shrl
sub
pop
sbbl
cmp
int3
in
pop
call
inc
push
loope
mov
pop
daa
aaa
stc
dec
sbb
jnp
fsubs
xor
dec
jge
out
jo
imul
mov
aaa
pop
or
sub
mov
push
test
imulb
add
sub
cld
test
into
inc
loopne
mov
jne,pn
mov
pop
in
pop
push
test
adc
pop
dec
fs
xchg
mov
mov
jle
dec
jo
dec
test
lock
sbbb
mov
mov
ja
mov
cli
rcll
sarb
testl
cld
fdivrp
sbb
outsb
cmpsl
idivl
stos
or
xchg
roll
pop
xchg
cli
ljmp
data16
pop
iret
fcmove
stos
insl
adcl
cmc
lock
inc
dec
pushf
xor
pop
sbb
fistpl
je
mov
cwtl
pop
sub
mov
arpl
push
jne
cmp
out
and
rclb
fidivrs
lea
test
xor
lds
fwait
mov
sahf
pop
adc
push
popa
push
lcall
xor
cli
loope
sub
xlat
adc
mov
bound
out
dec
jle
loop
out
mov
xchg
add
loop
lea
xchg
xor
nop
jbe
std
and
stos
push
pop
mov
out
add
sbb
neg
jmp
xchg
dec
mov
mov
xor
lret
int3
cmpb
test
mov
es
mov
xlat
xor
bound
jns
push
les
es
scas
outsl
mov
inc
jge
pusha
xor
int3
push
mov
fsubrl
mov
sbb
pushf
or
inc
movsl
mov
adc
in
push
dec
daa
les
out
shll
adcb
and
and
test
outsl
out
sbb
sbb
pop
dec
mov
inc
lds
shlb
sbb
loopne
outsl
mov
jno
out
or
ret
or
aad
mov
movsl
jne
push
push
mull
mov
jge
sub
mov
aam
les
mov
sub
push
dec
stc
cmp
ds
dec
stos
inc
xor
cltd
loopne
fsubrl
imul
mov
add
rcr
mov
dec
cmp
push
lds
pop
fcomps
es
pushf
push
inc
in
xor
add
push
rcrl
aas
movsl
jbe
jns
pop
adc
rolb
mov
lret
pop
inc
mov
dec
popa
ja,pn
adc
popa
test
lods
dec
popa
nop
pop
cwtl
inc
mov
arpl
mov
or
daa
pcmpeqb
cld
into
or
ljmp
mov
jl
ret
in
negl
out
aam
pop
xchg
inc
cmp
and
pop
add
dec
sbb
xchg
adc
cmp
sbb
and
dec
adc
in
xchg
enter
cli
cld
out
or
adc
not
shufps
lds
lcall
pop
sahf
sub
pop
xorb
les
sbb
std
mov
mulb
ret
pop
dec
addb
out
xor
xor
je
sbb
int
std
xor
pop
out
push
in
jle
xchg
cmp
or
clc
or
pop
cmp
inc
inc
jmp
mov
hlt
shrl
mov
xor
rorb
test
imul
ljmp
inc
xor
lret
je
cmp
sbb
inc
fists
mov
sub
test
rorb
ficomps
dec
dec
filds
jmp
inc
inc
sub
insb
mov
sbb
add
lret
adc
jne
push
out
sub
or
imul
fnstcw
inc
int3
jno
lret
inc
mov
es
xor
mov
adc
cmp
sbb
jle
addb
jno
lea
or
and
adc
cmp
out
mov
cmp
push
shll
ret
aad
mov
jns
fdivs
sbb
stos
push
lods
aad
insl
popa
inc
hlt
xchg
jecxz
in
ret
inc
add
repz
insl
jne
or
or
xor
sub
in
xchg
aam
dec
xchg
sbb
or
xlat
pop
inc
mov
jo
inc
cmp
js
jge
push
and
rclb
push
mov
mov
push
fldpi
xchg
push
mov
pop
sbb
pop
sub
xor
sbb
push
pop
mov
test
mov
push
aaa
jmp
mov
and
and
les
xchg
ret
stos
pop
popa
iret
pop
adc
leave
xor
ficoml
jg
adc
popa
lahf
cmp
lods
jb
and
cmpsl
pop
cmp
cmc
bswap
sahf
adc
mov
cltd
jno
jbe
lea
jb
jmp
xchg
cli
cmpsl
pop
insb
inc
push
mov
jmp
pop
inc
mov
imul
out
push
inc
rcl
sti
movsb
pushf
ss
les
out
push
iret
mov
inc
mov
xchg
and
ror
cmp
pusha
std
sbb
jge
or
jl
subb
cmp
cmpsb
adc
ja
into
out
jp
das
pop
jns
pop
add
lods
imul
cmp
pop
jnp
imul
jbe
outsb
cs
daa
and
fbld
test
gs
std
scas
inc
lret
subb
jecxz
jp
push
adc
cmp
stos
push
push
mov
jmp
xchg
add
bound
sub
push
sub
cmp
shrl
sbb
or
mov
mov
dec
leave
std
sub
xor
stos
aad
cmp
pop
icebp
lcall
sbb
inc
fiadds
test
ret
and
jb
test
jg
xchg
xchg
sub
or
cli
jne
and
xchg
lea
and
not
ror
xor
jl
push
imul
shl
loop
mov
push
sbb
xor
mov
or
rcll
enter
outsl
mov
adc
or
stc
push
shlb
push
mov
sahf
iret
lret
dec
dec
add
cmp
js
clc
test
ret
xchg
cs
loope
loop
or
mov
dec
repnz
fwait
lods
cmp
enter
fstps
sti
mov
mov
inc
loopne
hlt
addb
mov
push
mov
mov
adc
out
mov
in
add
mov
fidivrs
insb
pop
sub
sub
push
sub
push
test
mov
jmp
loope
bound
out
test
and
hlt
pusha
pop
test
stos
pop
call
je
in
out
push
inc
shrb
cmp
scas
dec
fcomps
out
cmp
and
bound
icebp
mov
daa
or
insl
mov
fisttpl
stos
jae
mov
call
cltd
push
xchg
jle
dec
inc
fs
stos
and
push
jne,pt
xchg
cmpsl
test
adc
xor
roll
cli
dec
lcall
cs
rorb
jno
mov
add
aam
fwait
repz
dec
jmp
lcall
dec
mov
push
jmp
inc
test
mov
out
push
gs
lahf
fisttpl
repnz
sbb
push
outsb
leave
push
dec
jbe
pop
ds
cmp
and
sub
lcall
gs
jmp
in
adc
mov
fsubrs
ret
in
sti
xchg
dec
push
andps
nop
imul
mov
nop
test
or
out
int3
jno
inc
test
or
jecxz
jmp
pop
mov
xchg
ja
jno
lods
push
or
ret
pop
add
xchg
adc
sbb
cmp
js
xchg
cmp
sbb
xor
outsl
imul
mov
pop
add
mov
mov
leave
jmp
cmp
inc
sub
clc
push
out
das
mov
pop
xor
into
addr16
std
dec
pop
mov
jb
aad
repnz
mov
scas
mov
out
imul
cmp
cmp
sub
stos
push
js
cmp
insb
aam
xor
cld
sahf
xor
pop
mov
ss
xchg
aam
das
xchg
lahf
aam
outsb
mov
sbb
pusha
loope
push
fs
jb
int
push
fistps
jp
push
xor
add
inc
movsl
mov
icebp
inc
jge
mov
outsl
cmc
pop
in
xorl
dec
popf
push
icebp
mov
fcmove
inc
jg
pop
mov
xchg
jmp
lret
cwtl
int
stos
push
loopne
test
rcll
inc
mov
and
mov
call
aad
pop
call
ljmp
mov
stc
xor
icebp
icebp
cmp
push
jmp
jmp
mov
jnp
cmpsb
ljmp
and
cmp
out
pop
movsl
lock
js
jle
jae
ljmp
mov
divl
enter
repnz
outsl
sbb
add
dec
xchg
cmp
xchg
push
popa
mov
sarb
cmpsl
jae
push
dec
icebp
sarb
cli
sbb
cmp
cmpl
xor
iret
pop
and
xor
pop
fildll
fidivl
push
out
rcrl
cmp
or
xchg
adc
add
adc
out
mov
xlat
jns
mov
jb
xlat
adc
sub
neg
dec
leave
hlt
inc
jmp
add
fdivr
rcll
push
fistpll
and
jecxz
pop
push
jp
xchg
je
or
je
push
js
add
jle
push
add
movsb
pop
sbb
jae
movsl
mov
or
int3
in
out
shll
and
add
mov
sub
sbb
ss
movsb
repz
jns
fildll
cs
pop
mov
lods
mov
movsl
sarb
es
jp
es
cmp
mov
push
add
pop
push
dec
mov
jno
xchg
mov
jge
dec
in
out
fidivrl
mov
out
add
icebp
repz
add
out
shll
fs
or
mov
outsb
push
or
ss
into
cmp
repnz
fdivrs
xor
inc
loope
pusha
and
rcrl
xchg
pushf
mov
lret
cmpsl
aad
jno
add
dec
sbb
adc
sub
pop
push
movsb
push
pop
in
push
sub
fildl
pop
mov
lret
mov
movsl
jl
mov
leave
sbb
and
or
call
add
je
notl
outsl
in
or
cwtl
mov
jg
mov
dec
jp
insb
mov
add
notb
cltd
test
in
inc
jge
xchg
test
pop
mov
int
out
mov
int
andb
push
subb
out
aam
add
movsb
outsb
stos
in
out
pushw
lret
je
lea
sbbb
sub
add
pop
and
testl
or
jl
jmp
add
iret
pusha
sbb
cmpsb
mov
or
xor
mov
sub
movsb
mov
push
mov
cltd
adc
dec
mov
lds
jmp
in
in
push
pusha
sub
sbb
cmpsb
enter
add
mov
or
stos
addr16
and
ja
aas
push
fsubs
popa
fcoml
arpl
xchg
adc
popf
pop
adcb
mov
or
int3
ss
inc
sahf
enter
push
mov
lods
mov
stc
in
shlb
ss
push
jno
xor
cwtl
testl
loope
lcall
inc
and
outsl
cmpsl
lods
and
inc
aam
shlb
iret
repnz
mov
fistpll
mov
decb
mov
xlat
or
xchg
pop
mov
and
fucompp
cmpsl
mov
popa
xchg
jno
sub
sub
test
out
rorb
dec
mov
scas
aas
xor
pushf
lea
sbb
dec
dec
jo
gs
mov
stos
or
mov
jle
faddl
mov
dec
jecxz
sub
inc
out
jl
push
out
call
or
pop
rorb
in
neg
aaa
test
or
push
test
jg
and
or
mov
enter
aam
sbb
arpl
add
cwtl
mov
aad
icebp
inc
sub
xor
jle
jp
int3
xchg
mov
adc
ret
and
cltd
mov
inc
into
hlt
fldt
outsl
mov
mov
jo
loopne
das
or
add
iret
cli
jns
push
sbb
rcll
xor
lcall
scas
sarb
xchg
popl
int3
jne
jbe
into
inc
adc
into
dec
outsb
ret
fdivrl
cmpsl
lahf
fdivl
repnz
inc
inc
ja
dec
pop
push
shlb
add
push
xor
fnstsw
cmpsb
add
mov
mov
iret
sbb
adc
out
call
mov
aas
fwait
mov
test
mov
aaa
xchg
mov
adc
pop
js
dec
stos
jns
les
aaa
in
rcrb
ljmp
jno
cwtl
imul
inc
or
xor
aam
adc
or
add
jne
mov
sub
stos
subb
test
aam
ds
mov
and
iret
cmpsl
loopne
shrb
sbb
rcl
ret
inc
inc
cmc
test
xor
test
sti
mov
cltd
lods
mov
jle
repz
sahf
add
jae
sub
pop
xchg
movsl
imul
shrl
mov
icebp
data16
jge
inc
repnz
insb
push
xchg
add
cmpsb
xchg
pop
ljmp
xor
je
mov
icebp
fistpl
mov
jo
mov
mov
pop
mov
sub
les
in
insb
das
cmpl
rorl
xor
fstpl
out
ljmp
ds
jecxz
mov
lods
push
movsl
fnstcw
aad
sbb
mov
cmp
loopne
mov
sbb
jmp
or
enter
add
mov
out
sar
push
in
sbb
push
rolb
loop
pop
pushf
arpl
ss
sub
ds
and
mov
jle
shrb
push
xchg
in
mov
lcall
cmp
pop
xchg
pop
xor
mov
xor
loop
andb
xor
pop
mov
or
das
xchg
cmp
xchg
adc
shrl
adc
mov
jmp
cmp
call
cli
mov
mov
push
cli
cmpsl
mov
sub
xor
rol
jbe
out
mov
mov
sbb
fwait
es
xchg
jp
loope
in
movb
and
js
adc
pop
ds
test
ret
sti
icebp
mov
bound
inc
or
outsb
pop
xchg
jmp
mov
or
stos
adc
mov
cmp
and
jno
mov
mov
lret
sbb
dec
push
in
xor
jg
adc
lods
aad
sti
negb
stos
cltd
cwtl
loop
js
inc
call
push
filds
in
xchg
ljmp
fbld
push
adc
aas
xchg
ret
adc
mov
sub
fwait
xor
cmp
pop
cltd
mov
push
in
out
lahf
and
mov
std
cmp
subl
movsl
jl
and
jl
adc
mov
nop
cmp
ffree
popl
imul
les
mov
sub
je
out
popa
mov
xchg
mov
push
test
or
repz
push
or
iret
dec
push
notb
test
aas
cli
xchg
fidivrl
adcb
out
dec
jns
pusha
xchg
out
mov
push
pop
rcrb
lds
lods
mov
lods
jo
and
cltd
stc
sarb
bound
sti
jbe
fs
cs
cs
fs
pop
adc
jg
dec
lock
clc
fadds
mov
mov
daa
test
adcl
out
push
out
ss
push
aas
jl
mov
adc
sahf
sub
add
pop
aam
cmpsl
mov
sbb
sub
pop
push
xchg
jnp
imul
jno
mov
mov
fmull
icebp
and
iret
jb
mov
out
inc
inc
xlat
mov
hlt
fs
rolb
sbb
arpl
int3
cmp
dec
sbb
std
or
adc
in
adc
ss
or
stos
xor
push
mov
xor
cmp
inc
es
mov
jle
mov
mov
xchg
push
pop
pop
orl
out
sahf
jg
test
or
jbe
in
shrd
hlt
test
lahf
into
pop
leave
popf
test
add
stc
stos
fimull
lock
inc
push
jl
lds
icebp
aaa
mov
sbb
clc
dec
sub
xor
cmp
divl
mov
addr16
test
addr16
or
xchg
mov
in
push
inc
push
xchg
inc
mov
in
sbb
sbb
orl
out
push
pop
add
imul
and
test
pop
sub
inc
mull
test
dec
mov
mov
mov
pushf
push
icebp
pusha
jae
ja
mov
sbb
xchg
filds
call
pop
popa
and
repnz
pushf
imul
dec
and
inc
push
idiv
mov
jb
mov
sub
push
fs
call
dec
or
jae
push
and
dec
scas
imul
push
cmp
adc
insl
inc
stos
orl
fsubrs
mul
imul
out
and
in
daa
les
pop
xchg
sub
and
mov
jne
cmpsl
add
dec
scas
icebp
in
popf
lret
pop
mov
movzbl
test
mov
mov
xchg
orb
jno
mov
jbe
cmp
push
xchg
adc
fs
pop
test
cmp
aad
xchg
enter
xor
push
cmpl
or
das
mov
pop
xchg
push
sahf
dec
dec
test
sub
mov
push
ds
mov
aad
dec
int3
mov
fldt
aas
cmp
mov
add
nopl
rclb
push
mov
mov
adc
xor
xchg
mov
adc
adc
xchg
push
fldenv
insl
adc
popa
cli
xor
pop
jg
jmp
sub
sub
shll
xchg
lret
mov
ss
or
adc
loopne
sbb
xor
or
cmpsb
sbb
inc
int
add
fsubl
dec
cmpl
daa
push
dec
xchg
cwtd
jmp
jl
mov
ja
xchg
sub
xor
scas
sbb
inc
jbe
loopne
xchg
repnz
pop
lea
sbb
jmp
jecxz
out
sbb
or
andb
fldt
or
push
pop
jo
and
pop
pop
or
mov
jmp
xchg
mov
loope
cmp
or
push
lods
cwtl
xchg
ss
inc
sub
loopne
mov
jno
add
lods
push
mov
pop
lcall
pop
inc
xor
jb
sub
clc
inc
pop
mov
push
sub
jecxz
jno
out
dec
cmp
xor
push
rcr
out
jnp
sbb
pop
add
lds
sbb
imul
arpl
xor
and
into
lahf
xchg
addr16
fwait
mov
and
test
xorl
dec
orl
inc
push
xlat
adc
pop
dec
jo
cmp
mov
aaa
mov
inc
fistpl
mov
stos
imul
out
ss
jno
lret
mov
cmp
xchg
sahf
hlt
dec
fwait
mov
cmp
xor
xor
repnz
insb
or
es
out
adc
fcomps
enter
sbb
push
inc
dec
dec
xchg
xor
jbe
xor
and
push
aad
jae
pop
nop
pop
stc
loop
cwtl
cmc
outsb
into
jb
sbb
rcrl
jno
fimull
cltd
mov
daa
inc
js
out
or
cs
test
or
xor
pop
pop
cmpsl
sub
ss
loope
insl
mov
push
or
cmp
inc
pop
push
pop
adc
movsl
xor
xorl
xchg
inc
jl
in
xor
out
clc
in
mov
jo
fisttpll
cwtl
jnp
loopne
push
adc
push
movsl
pop
jmp
out
mov
std
jno
pop
test
ss
add
or
mov
mov
xchg
aad
rcrb
pop
sub
loope
sbb
iret
pushf
cwtl
sub
packuswb
repz
and
stc
xchg
fistps
test
ljmp
inc
ljmp
mov
push
jns
sub
cmp
pushl
or
insl
cmc
push
dec
mov
cmpsb
lret
cmpsl
or
cmp
xor
movsb
mov
rcr
add
adc
cmpsb
fstl
sub
mov
data16
testb
movl
cmp
mov
mov
xor
mov
movsl
or
in
jmp
mov
mov
out
and
mov
xchg
xor
fst
pop
mov
pop
jge
or
adc
inc
call
ss
jle
mov
bound
or
iret
sub
jg
xchg
mov
pop
jae
mov
xor
leave
enter
sbb
imul
lret
and
push
pop
xor
test
shrl
icebp
mov
int3
inc
in
insb
movsl
mov
shrb
shl
imul
lret
and
je
cld
std
sbb
es
sub
mov
xor
or
hlt
pop
testl
mov
cmpsl
inc
lods
gs
pop
jne
xchg
mov
cli
cmp
xor
or
mov
lock
stos
rorb
out
mov
xchg
push
inc
aad
ss
loop
call
mov
lret
and
mov
mov
or
add
inc
mov
clc
mov
cltd
jbe
dec
scas
mov
bound
mov
sbb
adc
cltd
movsl
jnp
dec
dec
pop
xchg
jbe
into
dec
or
jo
and
push
fsubrl
add
jmp
mov
adc
inc
sub
xor
cmp
mov
mov
xchg
inc
sub
fistl
cmp
jae
das
stos
pop
aaa
pop
push
jle
leave
into
inc
in
loop
pop
insl
aas
in
xchg
add
lret
loop
or
sub
dec
mov
test
xor
hlt
fs
fcoms
or
stos
hlt
jnp
dec
and
sahf
je
out
or
jnp
gs
pop
int
mov
pop
ret
pop
mov
inc
xor
push
icebp
test
mov
fisubs
and
notl
adc
fwait
ror
fisubrl
add
add
mov
pop
cmp
in
and
dec
fdivrp
inc
out
pop
sahf
or
or
xchg
lcall
mov
pop
mov
adc
sub
pusha
lret
xlat
mov
imul
xchg
mov
cli
les
pop
pop
idivb
adc
shl
imul
pop
jno
push
repz
movsl
xor
push
cmp
fiadds
push
lods
xlat
loop
gs
pop
fwait
enter
push
push
in
lcall
adc
or
add
cmp
mov
test
lds
lret
add
push
pop
decl
and
add
roll
pop
adc
adc
adc
inc
jmp
pop
or
cltd
xor
arpl
mov
fs
push
mov
outsl
popf
dec
aaa
push
sub
fwait
dec
shll
int3
enter
pop
pusha
mov
bndstx
push
sub
aad
pop
cmc
push
sub
sarb
pushf
movsl
or
and
jle
dec
rcll
jb
adc
outsb
outsb
iret
cmpsb
dec
scas
dec
pop
cmp
xchg
inc
xlat
push
or
jo
xor
cmovl
mov
sbb
lret
in
and
jne
loopne
ret
leave
jge
mov
sbb
aad
mov
scas
pop
shl
int
lret
pushf
data16
movsl
scas
out
or
sub
in
mov
loopne
or
lock
sbb
inc
jp
int
je
es
cld
push
popa
sarl
pop
pop
loopne
cwtl
push
jge
mov
or
sbb
faddl
jmp
andl
lret
sub
cltd
test
mov
adc
sbb
inc
movsb
test
mov
jnp
add
fistl
gs
adc
movsb
sbb
mov
out
mov
push
idivb
sarl
dec
aas
imul
and
jbe
jns
lock
stc
enter
jmp
out
and
mov
dec
sub
cmp
mov
and
mov
adc
mov
and
hlt
and
shlb
mov
or
or
in
jbe
xchg
mov
mov
xchg
subl
and
cmp
pop
shlb
jecxz
aad
pop
sub
pusha
xlat
pop
mov
mov
pop
xor
sbb
jbe
sub
es
mov
mov
movsl
sbb
jns
cmc
bound
cmp
jmp
cmp
add
add
or
stc
mov
adc
and
sub
xor
pop
push
add
mov
data16
inc
pop
xor
xchg
hlt
jmp
sar
cwtl
ds
aas
or
bound
dec
mov
stc
push
cmp
adcb
adc
test
testl
fmull
ds
lea
inc
out
xchg
repz
xchg
stc
into
push
negl
pusha
push
jmp
xchg
outsb
in
shlb
pop
cmp
sbb
sub
sbb
jbe
lods
jno
in
mov
cmp
mov
mov
loop
pop
push
outsl
add
cmc
cmpsl
movsb
inc
cwtl
cmp
pop
xchg
mov
and
jmp
mov
push
clc
outsl
or
loop
xor
mov
pop
add
lock
mov
fbld
pop
push
cmpsl
addb
dec
int3
lea
cmc
gs
out
iret
movsb
loope
test
stos
push
das
xlat
xor
rcrl
inc
clc
mov
cmp
lahf
adc
dec
fbstp
pop
ljmp
push
pop
mov
iret
stc
cmp
dec
jg
movsl
js
nop
push
xchg
adc
in
shlb
or
adc
mov
shrl
cwtl
adc
push
std
lahf
fbstp
jns
das
cli
xchg
rorl
sbb
mov
mov
mov
push
mov
movsl
cmp
push
dec
push
sbb
inc
mov
mov
add
xchg
addl
or
lahf
mov
jo
mov
inc
fwait
scas
adc
push
and
add
loop
mov
out
daa
and
xchg
mov
xchg
and
pusha
and
loopne
outsb
pop
stc
in
nop
lods
dec
daa
or
dec
sbb
sub
loop
sub
lods
movsb
jne
ficomps
inc
jge
daa
pusha
fs
mov
bound
test
cmp
test
fwait
ret
and
mov
mov
jmp
inc
ljmp
mov
shll
pop
in
out
jbe
jne
psrad
imul
arpl
dec
fcomp
ret
mov
jg
bound
lcall
fbld
pop
and
jecxz
xlat
mov
ffreep
aas
out
mov
cld
push
ss
lods
or
mov
xchg
aad
push
sbb
and
loope
add
pop
pop
mov
mov
dec
out
mov
xchg
xor
pop
popa
addr16
lea
fucomi
loop
inc
enter
and
mov
sahf
pop
aas
scas
lds
movsb
lods
pop
cltd
xchg
dec
xchg
mov
nop
ljmp
push
imul
movsb
std
sbb
dec
push
inc
ljmp
ss
dec
mov
sbb
or
jb
cmp
push
add
ja
insb
jae
and
adc
mov
repz
les
add
xchg
insl
fildll
in
and
mov
stos
out
idivb
inc
outsl
cmpsb
add
cld
mov
sub
xchg
scas
into
lcallw
jge
shrl
ret
sbb
cmp
xor
xchg
inc
leave
mov
mov
out
lcall
mov
xchg
sahf
jecxz
dec
lahf
fdivs
sahf
xchg
xlat
push
test
mov
cld
push
push
cli
pop
shll
cmp
test
and
daa
push
std
jne
int3
je
popf
scas
in
push
sub
sub
pop
inc
out
in
mov
jne
shr
xlat
push
fisubs
jns
scas
cmpsb
into
sbb
mov
cmp
into
fucomp
cmp
cltd
ja
push
dec
push
mov
jmp
inc
rcrb
mov
rorb
in
mov
insb
pop
ljmp
ds
aas
jb
xor
enter
lods
out
xor
jmp
in
dec
xlat
rorb
cwtl
out
in
test
xchg
loopne
inc
jle
fsubrl
cmp
fwait
jo
insl
repnz
pop
iret
push
push
jne
daa
jle
lgs
aas
adc
out
and
not
popa
leave
jo
push
scas
inc
dec
push
out
stos
js
dec
adcb
jecxz
int3
push
inc
movb
pop
cmc
iret
test
xor
xchg
add
cli
shl
sbb
in
in
jne
jno
je
orb
test
sbb
stos
pop
add
loopne
inc
dec
sbb
mov
pop
pop
pusha
dec
jmp
jb
out
or
call
dec
and
stos
inc
xchg
rolb
cmp
lahf
mov
jae
neg
in
xchg
nop
testb
push
sub
icebp
sbb
or
or
sub
test
jno
lret
inc
add
pop
inc
cmp
movsl
dec
push
lret
neg
and
iret
pop
int3
or
repz
les
ja
jbe
add
dec
out
mov
sbb
xorb
pop
sbb
cmpsl
stos
adc
pop
movq
sub
mov
xor
xchg
jecxz
jnp
sub
mov
outsl
mov
rcrb
and
xchg
xchg
push
mov
data16
in
cmp
enter
inc
jb
lea
bound
test
imul
xor
pop
int3
cld
mov
dec
stos
imull
lret
imulb
inc
repz
lret
cmp
outsl
push
push
icebp
imull
inc
mov
xlat
fsubr
push
mov
shll
addl
pusha
adc
stos
mov
xor
rorl
aas
xchg
sbb
xor
pop
dec
es
adc
pusha
add
inc
jnp
arpl
add
pusha
leave
je
stos
jns
pop
daa
dec
popf
mov
enter
icebp
jbe
sbb
jmp
into
pop
mov
scas
pop
imul
out
xlat
xor
and
nop
lock
xchg
repz
inc
mov
xchg
dec
jbe
mov
stos
out
rclb
popa
roll
and
das
mov
je
push
movsl
xor
jnp
sbb
mov
aad
lret
repz
pop
jp
xchg
ret
xchg
push
aas
add
sarl
das
ja
mov
inc
andl
adc
inc
push
pusha
fadds
lock
repz
inc
jo
pop
dec
ljmp
icebp
mov
lret
xor
cmpsl
mov
shrb
cld
inc
mov
cmpsb
xor
sbb
test
dec
mov
mov
pusha
les
jno
cmpsb
jno
mov
cmp
inc
arpl
mov
or
mov
out
mov
xchg
jmp
pop
xor
jbe
cmp
or
ja
jg
and
jl
adc
jmp
subps
ja
jns
ret
mov
jg
or
cli
in
push
aad
or
pop
cmpsl
xor
jp
sub
scas
xchg
fsubrs
xchg
dec
mov
jae
cmp
cmpsb
fstl
rolb
leave
mov
loop
xchg
aaa
sub
decl
in
sbb
jbe
and
xchg
push
jnp
jmp
pop
jmp
jno
mov
pop
jne
ret
int3
push
inc
ret
adc
ss
sbb
xor
or
ja
adc
inc
jno
dec
xchg
fdivl
dec
push
in
push
cld
cli
jge
xor
scas
add
enter
pop
dec
dec
cmp
mov
cmp
xor
mov
sub
mov
movsl
cld
mov
adcb
mov
push
lock
popf
jb
clc
loop
and
sbb
shrb
mov
aas
in
pop
sti
dec
subl
mov
jne
ds
dec
xchg
xor
push
xchg
xchg
rorl
xor
fistl
fmull
flds
sbb
jbe
add
dec
push
and
scas
jge
inc
js
lcall
xchg
mov
lret
aam
dec
push
ja
or
mov
nop
aad
and
icebp
sbb
loop
sbb
mov
fisubrl
push
out
cs
push
mov
int3
inc
push
stos
push
pop
add
jns
lret
push
jmp
cwtl
aas
pusha
js
xor
shrl
movsl
mov
xchg
cwtl
mov
pop
pushf
mov
mov
xchg
mov
outsb
mul
pop
sub
inc
pop
ss
cmp
out
pop
enter
hlt
mov
aad
or
mov
inc
ljmp
enter
dec
dec
fcoms
pop
in
cmpsb
enter
scas
jmp
mov
ret
mov
scas
cwtl
inc
sbb
sub
cmpb
nop
xchg
mov
cltd
insl
dec
xor
mov
adc
sysexit
stos
jae
sbb
or
xlat
xor
jno
dec
pop
pop
cmc
shrl
mov
inc
mov
adc
mov
ds
and
jb
movsl
aam
sub
jbe
aam
adc
xchg
dec
xchg
push
loope
frstor
mov
adc
push
jno
push
xchg
or
bound
gs
xor
xchg
sbb
mov
lahf
lcall
sbb
loopne
xor
sub
xor
lea
dec
pop
xchg
shlb
push
in
inc
daa
mov
jecxz
adc
cmpsb
lds
repz
add
cwtl
ss
mov
negl
add
jns
sbb
cmp
mov
or
push
dec
fst
sub
fildll
pop
lock
add
inc
or
cli
adc
adc
ss
mov
imul
les
inc
lret
cmp
xor
mul
adc
mov
pop
mov
jne
jno
cmp
cli
adc
sbb
jmp
dec
cltd
rcll
push
mov
shrl
sbb
daa
clc
inc
sbb
mov
rorl
lods
pop
mov
lock
pop
dec
push
out
mov
cmc
flds
popa
cmovne
xchg
push
pop
cmp
lock
aam
mov
outsb
inc
pop
dec
in
push
popf
add
push
fisttpl
test
in
shrl
mov
ljmp
outsb
mov
mov
push
jae
addr16
insl
lock
test
iret
cld
cwtl
out
fsubr
push
inc
pop
cmpsb
out
es
xchg
mov
int3
ja
push
enter
inc
cmp
icebp
lret
es
lock
mov
dec
jp
aaa
fmuls
dec
jl
jecxz
cmp
mov
sbb
daa
inc
add
dec
sti
lret
fwait
into
mov
into
fwait
out
cmpsb
push
cmpsb
aaa
decb
rcrl
pop
jno
out
shl
push
dec
stc
gs
out
jo
sbb
or
adc
xchg
ss
sbb
lods
sti
jge
movsb
sub
xlat
or
fldt
sub
test
adc
jno
sub
mov
and
and
mov
insb
lcall
pusha
not
jecxz
jp
push
incl
es
jg
pop
sbb
ds
add
push
xor
adc
mov
hlt
xorl
loopne
out
fstpl
mov
mov
jns
mov
add
popf
cmpb
jae
or
inc
aaa
xor
aad
sbb
jo
adc
xchg
scas
mov
xor
stos
lahf
sbb
sub
xchg
jns
xchg
and
inc
xchg
mov
or
adc
mov
imul
rcrl
inc
in
pop
cmc
sbb
inc
lds
mov
or
xchg
cwtl
cmpsb
mov
loopne
xor
repz
dec
mov
aas
and
cmpsl
out
test
mov
outsb
imul
popf
out
cmp
jle
repz
ja
adc
mov
dec
loope
add
out
add
mov
mov
xor
lcall
sbb
cmp
pop
lret
in
pop
jne
shll
mov
clc
rol
imulb
lock
insb
sbb
ja
stos
add
jbe
add
jne
sbb
rcl
mov
mov
cmp
pop
push
gs
inc
out
lahf
loop
int3
testb
mov
insb
dec
mov
cmpsl
jnp
push
xor
and
xchg
or
cmpb
popa
addr16
ret
inc
mov
cmc
xchg
add
cmc
pavgw
inc
shrb
or
insb
jle
pushf
repnz
push
xor
mov
lea
shrl
out
iret
dec
dec
pop
sbb
mov
adc
push
jne
mov
pop
xchg
int3
pop
xor
dec
ds
jo
hlt
imul
mov
dec
andl
push
mov
cs
nop
ret
dec
xor
inc
sub
repz
inc
mov
sub
and
cmp
ss
sub
pusha
sar
mov
mov
std
mov
xchg
add
clc
roll
clc
push
xor
jnp
or
xor
mov
ja
xor
or
icebp
cmp
inc
lretw
sbb
add
jbe
sahf
mov
sub
xchg
mov
cmp
mov
mov
and
and
enter
fsubrl
mov
loope
jmp
insl
ret
mov
jle
xchg
push
jb
test
push
dec
and
ds
and
test
sub
lret
aaa
ss
into
mov
iret
mov
cld
add
es
in
mov
in
xor
fwait
jp
and
inc
pop
ja
pop
insb
notb
mov
cltd
int
xchg
jp
icebp
sbb
jmp
mov
sub
pop
push
add
mov
daa
ds
fnstcw
jns
cmc
xchg
in
fwait
mov
xchg
loop
push
leave
andb
pop
ss
cmpsb
inc
xor
adc
mov
gs
fs
jne
iret
mov
movsl
cmpsb
pop
lret
jecxz
inc
add
mov
shrl
sbbl
loop
out
pushf
jbe
or
ret
rcrb
pushf
fs
inc
cwtl
hlt
jle
sub
lcall
push
xchg
je
jg
mov
pop
or
loop
fsubr
stc
xchg
push
adc
jno
out
ret
push
pop
or
call
inc
mov
push
stos
pop
xchg
cltd
icebp
lock
addr16
gs
push
adc
xor
or
mov
pop
pusha
call
mov
push
outsb
out
sahf
sub
insl
repnz
xchg
adcb
cmp
daa
pop
mov
in
rorb
xchg
cwtl
jne
jae
in
lret
lds
mov
push
nop
pop
xor
mov
and
xor
dec
mov
mov
push
sbb
jl
imul
arpl
mov
insl
mov
or
fdivp
sub
pop
pop
mov
pop
clc
and
mov
pop
addr16
sbb
sub
fcmove
repnz
insb
inc
jb
and
leave
cmpsb
sbb
jecxz
popf
jno
sbb
push
add
ss
sbb
leave
xlat
fildl
or
insb
aaa
push
dec
imul
xchg
inc
ss
scas
or
mov
test
dec
scas
mov
popf
cmc
sbb
js
fwait
cmp
loop
cltd
dec
std
xor
push
push
jl
mov
js
push
jae
sti
daa
xchg
inc
cmpl
ljmp
je
test
fdivrl
pop
out
sbb
pusha
adc
pusha
and
mov
in
arpl
fisttpll
dec
out
pop
and
iret
push
imul
fwait
dec
lds
loope
out
push
jmp
mov
or
je
in
add
xlat
mov
lahf
cmp
loop
daa
push
jne
jl
adc
bsr
jae
xchg
mov
pop
dec
stos
insb
mov
xor
mov
pushf
sbb
test
icebp
lahf
ss
das
adcb
fldcw
push
mov
lret
jge
movsl
aas
movsb
or
push
mov
add
push
mov
push
ret
scas
and
lods
lock
aas
mov
fsubrs
sbb
jae
ror
cmc
pop
ret
mov
xor
dec
xchg
or
push
shlb
out
in
in
pop
sbb
in
sub
lods
or
jp
push
cmpsb
stos
bound
and
in
sub
mov
int
sub
rcll
dec
rorb
and
pop
sub
xorb
ret
cli
push
mov
divl
or
stc
pop
ror
pop
loop
scas
mov
daa
or
xor
mov
imull
mov
sbb
xorl
cmpsl
in
popa
sbb
xor
push
xchg
mov
clc
sub
hlt
mov
in
stc
aad
pop
jno
and
mov
dec
xor
movsl
aas
mov
mov
adc
pop
jo
mov
adc
out
add
pop
scas
lea
les
jae
fisubrl
popf
movsb
ret
adc
loopne
andb
out
outsl
ljmp
cli
pop
sbb
aam
adc
adcb
jp
xchg
shlb
sbb
ffreep
lret
push
int3
cmc
cmc
mov
popf
mov
xor
cmp
shll
pop
jbe
or
cs
cltd
xchg
dec
movsb
or
pop
sbb
jmp
into
adc
or
add
das
es
xor
aaa
jnp
enter
fnstenv
outsb
xor
mov
sub
mov
pop
xor
mov
pop
push
sti
sub
push
dec
push
negl
and
cmp
dec
cld
aaa
and
mov
adc
sub
sbb
add
insl
out
loop
es
outsb
scas
imul
jnp
jo
xor
fs
xor
iret
cltd
xchg
out
mov
jo
call
mov
icebp
mov
cmc
iret
test
inc
aam
into
cmp
rorl
xchg
lret
or
and
lock
mov
jne
xchg
sub
add
aaa
bound
xor
xchg
or
insb
inc
push
mov
mov
dec
int
subl
lods
or
leave
pop
sbb
ljmp
cs
rolb
xor
je
iret
hlt
mov
and
out
lret
jmp
ret
adc
in
mov
stos
addr16
cmp
jmp
test
cwtl
mov
dec
add
in
rcrl
rolb
mov
repnz
pushl
ljmp
add
push
fcomps
xchg
jnp
mov
fmull
call
mov
mov
or
pop
inc
push
sub
jo
pop
cmp
iret
cmpsb
outsb
mov
insl
popf
mov
loop
push
mov
js
test
jb
jp
xchg
enter
jmp
rcr
loope
enter
vmread
mov
push
jnp
daa
mov
cli
mov
xor
push
in
movsb
mov
dec
aad
aad
lret
fldenv
push
xchg
repz
mov
jg
xchg
jmp
adc
xchg
shll
pop
push
add
and
mov
in
adc
pop
and
sub
into
into
fwait
jae
cmp
pop
xchg
cmp
xor
cmp
xchg
push
push
dec
lcall
push
inc
dec
je
test
ret
bound
push
adc
adc
lds
scas
loop
cmpsb
shrb
aad
xchg
sbb
or
loope
roll
ljmp
pcmpeqd
mov
cmpsl
jbe
idivb
mov
add
sub
shlb
pop
das
mov
xor
mov
xchg
cmpsl
lods
out
jnp
roll
add
xchg
push
xlat
loopne
mov
xchg
clc
sub
jl
pushf
fimull
lds
ljmp
push
and
mov
mov
mov
cmpsb
bound
xor
jmp
bound
outsb
dec
imul
fdivrs
popf
xor
pop
out
mov
push
je
fnstcw
cmpsb
sbb
dec
lods
cmp
mov
push
sbb
in
pusha
mov
push
push
cmpsl
mov
cmp
and
mov
inc
push
cli
es
pop
and
sub
xchg
jbe
movsb
sub
int
adc
jnp
sti
popf
das
mov
mov
jecxz
or
aaa
fst
mov
push
jbe
fsubrl
mov
xor
popf
lds
jnp
add
xor
dec
and
or
sbb
and
push
movsl
into
sub
testb
lahf
jp
std
int3
mov
pop
push
xlat
rcl
repz
cmpsl
jb
xchg
inc
out
adc
ss
xchg
jo
loope
pop
jmp
mov
nop
out
in
js
clc
adc
mov
jg
scas
cli
hlt
push
ljmp
mov
cmpsl
in
sbb
push
cs
pop
adc
mov
xchg
aam
mulb
dec
jnp
push
jne
or
jp
jg
xchg
jns
xchg
arpl
and
in
push
movsb
pusha
loop
sbb
sti
sub
in
push
xchg
lds
iret
mov
mov
test
jle
movl
scas
jp
sub
out
inc
pop
jb
iret
push
idivb
sbb
pop
mov
xor
cs
hlt
test
mov
add
in
roll
loope
ret
arpl
xchg
push
imul
outsl
rcrb
jo
inc
mov
hlt
sahf
mov
xchg
cli
ficompl
xchg
insb
cs
shlb
popf
repnz
xchg
cwtl
insl
mov
cmp
rcl
xchg
movsb
xor
loope
cmp
push
inc
mov
ds
cli
test
mov
push
adc
mov
iret
fldl
aam
sbb
repz
cli
mov
in
in
insb
mov
mov
mov
pop
push
dec
and
adc
sbb
movsb
rorb
mov
stc
daa
xchg
pop
dec
cld
movsl
push
icebp
lea
cmp
je
xchg
nop
pop
mov
mov
cli
jne
mov
xor
cld
xchg
xchg
mov
gs
lds
pop
mov
repnz
imul
lock
push
cltd
fwait
xchg
jb
jmp
adc
arpl
jmp
inc
push
mov
sub
sbb
aad
subl
sbb
mov
jmp
aam
cltd
dec
jle
in
sub
out
fbstp
pop
push
adc
sbb
sahf
fs
cmp
inc
xor
insb
fs
fstps
test
std
idivl
mov
xlat
fisttpll
test
stos
fstpt
out
jb
sub
idivl
aam
jecxz
jo
cmpl
iret
push
ja
sub
jmp
mov
pop
jnp
into
sbb
dec
mov
cld
stos
add
into
mov
lcall
xchg
lea
out
mov
outsl
mov
mov
adc
ja
cli
lret
jno
pop
add
pop
out
sub
jge
dec
outsb
lret
out
loope
xchg
xor
aad
insl
push
test
or
loop
insl
inc
popf
jecxz
ds
xchg
cmp
xchg
sub
out
xor
shlb
push
imul
dec
xor
call
jmp
lock
cmp
push
pusha
mov
mov
gs
test
cmp
cmp
insb
cmp
cmp
stos
and
mov
jnp
push
mov
fcmovnu
scas
nop
xchg
popf
stc
mov
idiv
jmp
add
in
mov
popf
std
mov
je
lret
jo
sbb
stc
adc
adc
jne
sub
cmc
dec
cld
pop
mov
bound
sub
pop
mov
pop
add
sub
mov
shlb
negb
sbb
sub
adc
dec
lds
mov
sbb
xchg
faddl
sub
movsl
sbb
jbe
jno
push
push
fsubl
xor
sub
cmpsl
dec
mov
xchg
lods
loope
add
cltd
jmp
stos
and
adc
popf
add
add
add
mov
cmp
add
add
jp
add
xlat
lods
add
xchg
dec
add
cmp
popf
jae
xor
push
aaa
sub
add
mov
xor
iret
xorl
push
xchg
dec
in
jnp
test
sbb
cmpsl
lods
ret
push
mov
je
pop
inc
dec
xchg
or
push
sbb
insl
adc
movsb
xchg
inc
stc
cltd
bound
je
mov
and
add
jnp
lock
mov
push
clc
cmpsl
enter
nop
and
cmpsl
push
inc
push
aad
mov
mov
dec
pop
outsb
ror
sbbb
mov
adcl
push
mov
cmc
jg
add
push
loopne
cmpsb
jnp
into
jmp
push
js
scas
pop
aad
cwtl
imul
or
call
cwtl
cmpl
test
pop
mov
scas
test
bound
imul
sub
push
loopne
ret
sbb
lahf
sub
scas
cltd
mov
loope
pop
mov
gs
adc
jl
cmp
mov
jg
lock
fcomps
jl
stos
popa
push
test
or
repnz
cli
fld
outsl
add
out
push
jp
xchg
push
xchg
cli
out
mov
jne
dec
icebp
mov
xorb
push
sbb
mov
shlb
loop
push
ljmp
xor
loop
ficoms
bound
push
js
cmp
cmp
int
xlat
sahf
push
mov
scas
cs
sub
xor
jl
xor
imulb
mov
push
fwait
sub
test
cmpsw
cli
mov
cmp
pushf
bound
enter
jae
test
xlat
movsb
fimull
xor
mov
sti
bound
and
cs
mov
and
mov
push
xchg
jle
jo
or
loopw
hlt
hlt
lds
mov
jo
es
pop
js
mov
testl
jne
loope
test
fwait
hlt
mov
pop
fstpt
xor
push
cmp
jns
add
jge
inc
loope
xlat
mov
push
mov
imul
into
scas
lods
out
jge
pushf
cld
adc
out
sbb
lock
adc
popa
mov
xchg
cld
sahf
sub
sbb
arpl
aaa
adc
cmp
dec
pop
mov
fnsave
daa
add
pop
mov
xchg
jg
jmp
pop
pop
cld
inc
mov
sbb
jae
outsb
and
fistl
or
jl
xchg
add
mov
xchg
mov
icebp
pop
sbb
jge
add
shrb
jbe
mulb
pop
and
scas
pop
outsb
push
inc
mov
or
ret
cmp
stc
repnz
in
xchg
adc
xchg
pop
mov
dec
sti
mov
lods
jge
sbb
adc
push
xor
ds
sbb
imul
and
int3
cmp
test
mov
outsb
mull
cmp
pushf
add
std
into
mov
push
jbe
mov
fwait
or
push
leave
nop
or
andl
inc
out
js
or
cld
push
ljmp
movsb
mov
or
lcall
shrl
test
fcomp
add
xchg
xchg
fcomp
push
jmp
cmc
push
sub
adc
std
push
inc
out
ja
sbb
mov
sti
jg
xchg
loope
ljmp
out
cmp
dec
pop
cmp
test
mov
roll
sbb
ret
in
push
fwait
call
dec
xor
fcmovbe
mov
and
adcb
std
aas
sbb
jae
nop
jp
adc
jl
xchg
mov
jecxz
idivl
sbb
lea
xchg
push
into
jmp
sbb
ss
in
rcr
pop
adc
dec
xchg
and
fidivl
or
pop
mov
mov
inc
xor
mov
jae
mov
movsb
inc
or
iret
sbb
sbb
insb
mov
xor
cmp
dec
sbb
and
ds
popl
inc
xlat
loopne
mov
mov
lahf
test
ja
add
jne
mov
divl
outsl
sub
js
test
ret
jno
pop
push
jg
loopne
js
mov
test
lahf
and
pop
add
push
cmp
sub
push
cmpb
repz
jg
loope
push
cmp
inc
push
mov
call
adcl
mov
shrl
inc
or
loopne
out
mov
shl
daa
cld
cmovge
fwait
outsb
lret
mov
adc
jecxz
add
jecxz
xorb
scas
in
sbb
push
aam
cmc
fisubrs
insl
or
pop
out
pop
xchg
xchg
movsl
sbb
movsl
mov
pop
cmp
pop
lcall
dec
ret
xor
pop
mov
add
gs
mov
lods
jecxz
faddl
notl
loop
int
je
xchg
stos
fmuls
pop
mov
xor
iret
and
out
sbb
sub
sbb
enter
lahf
push
fsubrl
lret
cwtl
xchg
movsb
xchg
aas
fcomps
or
enter
jnp
std
add
xlat
xlat
fldenv
jns
cld
sbb
cmp
loop
arpl
jge
sub
pop
mov
mov
xchg
loopne
test
neg
es
cmpb
dec
in
inc
xchg
add
out
mov
pusha
mov
fldl
or
mov
jecxz
in
mov
insb
call
leave
scas
data16
sub
scas
rcll
data16
cwtl
xor
mov
xchg
mov
dec
mov
adcb
sbb
push
mov
sub
hlt
mov
repz
pop
and
data16
jno
add
mov
pop
cltd
sbb
popa
movsl
repnz
mov
xchg
xor
jp
push
pop
into
mov
lea
push
test
mov
in
pushl
fcoml
xchg
rcrb
aaa
ja
sti
sub
push
adc
mov
aaa
sbbl
ret
jmp
bound
pop
out
out
mov
mov
sbb
repz
adc
lds
outsl
mov
sub
xor
sub
cmpsl
mov
jb
pop
out
add
jo
cmp
and
jmp
aas
test
pop
push
push
movsl
adc
popa
lods
pop
repz
sahf
mov
push
jl
and
inc
xchg
sbb
int
dec
fildll
bound
sub
jb
arpl
loope
pop
adc
inc
test
and
jae
notb
mov
and
cmp
mov
stos
mov
push
adc
adc
xchg
shll
outsb
leave
mov
in
push
mov
fst
rorl
popa
arpl
std
popfw
jl
mov
ficomps
mov
mov
inc
xor
mov
jl
outsl
add
std
ja
cmp
fisubl
fisttps
adc
enter
pop
aad
aas
mov
rorb
imul
inc
sbb
in
inc
sahf
dec
punpcklqdq
les
xor
fistl
xlat
scas
cmpb
dec
jbe
push
gs
push
xor
popa
cmp
popl
xchg
jl
dec
fstpl
les
xlat
dec
or
shl
cld
and
iret
popf
cmc
test
mov
push
dec
lcall
and
pop
repz
jns
or
jle
mov
leave
sbb
shll
push
cmp
movsb
jbe
push
lret
fs
sarl
add
sub
fistpll
stos
incb
push
faddp
cs
or
mov
enter
cli
cwtl
test
xchg
roll
sbb
ja
cmpsl
rcll
ja
loopne
pop
mov
pop
dec
lcall
jbe
rcr
sbb
ljmp
jmp
jge
js
das
inc
cmp
jge
gs
arpl
aad
cltd
push
repz
loop
and
xchg
mov
fnsave
pushf
jge
cmp
push
stos
add
sbb
idivl
insb
lods
jne
mov
test
xor
out
xor
call
xor
into
out
push
cmp
jecxz
cmp
aas
mov
pop
jecxz
out
mov
loopne
divb
jl
inc
arpl
and
lds
sahf
inc
pop
inc
and
fldenv
shlb
movsb
xchg
mov
xor
cmpsl
out
lods
imul
cmp
jmp
loopne
repz
adc
outsl
mov
xchg
xchg
cltd
add
jnp
incl
ret
cld
sub
jne
clc
sbb
mov
popf
pop
mov
sbb
in
sbb
xchg
inc
mov
dec
jle
pop
mov
cmp
cmp
jle
test
mov
imulb
add
adc
push
out
or
sbb
mov
inc
stc
std
rol
fidivs
add
pop
sahf
leave
xor
add
pop
adc
aaa
sbb
sub
call
adc
mov
les
loope
sub
sbb
orl
cs
dec
cmp
nop
xchg
adc
adc
fs
mov
ja
push
mov
dec
ret
and
mov
pop
lods
movb
dec
xchg
and
iret
mov
dec
mov
sub
popf
fsts
call
sarb
into
xchg
xchg
imul
std
cmp
sub
stos
dec
insl
loopne
jg
adc
fs
lret
iret
xor
sbb
and
ss
sub
mov
xchg
dec
sub
js
out
xorb
xchg
push
popa
clc
or
int
push
hlt
xchg
mov
push
mov
lret
lock
push
into
add
adc
jmp
and
lds
clc
adc
sbbb
mov
xchg
xchg
loopne
jnp
jl
sub
imul
les
and
cmp
gs
fdivl
adc
jl
ja
ljmp
cmp
out
sbb
adc
or
push
pop
xor
out
sub
cld
ficoms
jo
pushf
mov
xchg
pop
mov
pop
push
repz
ds
sti
xchg
xor
inc
push
pop
cmp
jns
loopne
mov
sbb
pop
xorb
and
ffreep
inc
out
xor
xor
and
out
and
jp
je
pop
jmp
inc
lret
adcb
cmp
lds
sub
imul
dec
adc
or
in
out
test
fsubs
mov
ja
je
popf
sub
xchg
stc
lods
test
jnp
sub
out
outsl
push
sub
mov
or
push
pushf
xchg
lock
test
ficoms
data16
rcrb
bound
mov
add
mov
int3
arpl
pusha
cli
dec
ss
mov
rclb
fsub
pop
mov
and
scas
mov
or
fmuls
dec
inc
mov
or
sub
push
subl
push
in
sub
enter
shrl
notb
int3
inc
lret
cmp
test
cmp
loopne
mov
adc
fiaddl
pop
fs
xor
pop
push
pop
outsl
out
enter
xchg
test
add
xor
call
enter
ds
inc
rcrl
call
mov
in
fisttpl
jge
push
push
jne
pop
inc
imul
popf
push
mov
dec
push
clc
repz
mov
fdivr
dec
popf
jbe
sub
sub
loopne
cmp
cmp
popl
mov
xchg
pop
in
cli
push
pop
push
rcrb
mov
fidivrl
push
rclb
mov
js
sub
lret
mov
mov
imul
or
ljmp
jns
xchg
xchg
lock
iret
cltd
push
insl
jmp
cmp
jno
sbb
jp
pop
add
mov
add
jl
dec
add
or
or
sub
jns
and
adc
push
dec
scas
xlat
sti
leave
jge
les
imul
test
adc
mulb
mov
inc
jno
jae
call
mov
and
dec
icebp
mov
inc
cmc
aad
sahf
xchg
xchg
das
stc
clc
imull
sbb
iret
mov
mov
out
into
jmp
lds
xchg
fadds
xorb
push
pop
fnstcw
dec
inc
mov
dec
jnp
and
push
in
cli
xchg
jno
push
pop
pop
cmp
imul
mov
sub
jb
or
xchg
imul
lods
or
loop
dec
js
je
pop
cmp
pop
push
fbstp
xor
jb
xchg
mov
insl
stos
cmp
push
out
scas
add
test
mov
mov
push
and
and
sahf
pop
popa
test
cmp
pop
repnz
sbb
push
mov
jle
and
mov
cmp
and
sarb
xor
mov
fwait
adc
cmpsl
rorl
ljmp
std
add
stc
jbe
add
sub
xchg
fcmovnb
ret
and
lock
ljmp
outsl
cli
pop
push
sbbb
mov
jl
pusha
hlt
xor
push
mov
ficoml
dec
jno
cmp
mov
jmp
mov
xlat
add
pop
cmp
in
and
add
in
xor
es
in
stc
rorb
hlt
cli
das
cmp
cmp
dec
and
inc
xchg
dec
and
jle
popf
cmp
mov
mov
jmp
imul
xor
jg
icebp
ret
sub
add
mov
jmp
sub
sbb
cmpsb
shlb
enter
rclb
inc
mov
mov
or
push
lock
adc
addr16
jb
out
xor
sub
sub
stos
jae
bound
aad
sub
repnz
ja
leave
nop
test
mov
add
pop
clc
out
adc
mov
xor
sahf
cmp
jg
jl
and
les
loope
loope
cltd
jp
pop
sti
lret
sbb
les
dec
movsl
xlat
and
in
pushf
insl
fnstenv
call
jno
cmc
inc
daa
sar
aad
mov
lods
inc
mov
test
and
push
decb
pusha
cmc
or
leave
mov
pop
sbb
loopne
sti
mov
cmp
and
test
xchg
orb
xlat
or
add
fsubrs
sbb
aad
xchg
lahf
dec
push
notb
add
inc
imul
xchg
mov
iret
lret
pop
iret
pop
lea
lock
inc
lock
lahf
ret
mov
gs
cmp
mov
mov
daa
or
insl
pop
mov
mov
nop
push
or
mov
mov
push
mov
xchg
mov
mov
loopne
shr
fwait
sti
pop
out
clc
add
lods
lahf
repz
pop
ret
shl
pop
push
and
or
inc
jg
in
jns
sub
push
pop
and
xchg
js
and
cli
fcom
or
loopne
lods
xchg
js
stos
and
lods
es
pop
mov
jb
and
adc
xchg
inc
dec
shrl
ljmp
cmpl
es
scas
sbb
in
mov
or
das
fs
out
sbb
sub
shll
or
sbb
adcb
pop
imul
stos
movsb
xor
push
xchg
lods
outsb
cmp
xor
sub
xor
mov
in
mov
stos
fucom
ror
rcrb
loope
jge
cmc
leave
xor
or
hlt
inc
mov
xchg
ljmp
push
jg
insl
lods
icebp
sahf
and
ja
test
out
mov
mov
mov
ds
mov
ja
ds
and
nop
aad
dec
rcrb
sarb
mov
and
sbb
outsl
lods
imul
je
aaa
sbb
or
inc
je
sahf
test
imul
js
popf
enter
dec
scas
repnz
ljmp
inc
ljmp
les
dec
stc
cmpsb
gs
and
inc
cli
push
insb
daa
test
sbb
dec
fimuls
mov
mov
sbb
mov
push
add
jmp
push
inc
orb
or
add
rcl
inc
mov
jns
pop
push
lds
ljmp
add
movsb
sbb
lahf
dec
lret
incl
adc
scas
mov
jl
jae
loopne
hlt
pop
test
push
jle
hlt
stc
or
ret
in
mov
in
pop
cmp
push
sbb
loopne
or
scas
mov
push
sub
lods
push
cmp
pop
xor
out
cmp
fsubr
outsl
xor
mov
in
lahf
dec
jg
in
inc
mov
insb
pop
push
out
adcl
push
mov
jg
in
or
pop
jo
imul
jo
xor
jmp
jo
jg
subb
leave
pop
push
xlat
clc
test
popa
jecxz
or
pop
ds
inc
pop
fstl
in
jmp
out
pop
jp
mov
les
and
xchg
cmpsb
sub
arpl
leave
sahf
dec
repnz
mov
arpl
inc
std
mov
mov
mov
inc
mov
dec
push
leave
subb
ret
inc
inc
pop
adc
test
jae
mov
and
cmp
cltd
mov
mov
pop
lods
dec
jb
nop
push
push
int
aaa
add
push
jecxz
sbb
xchg
sub
dec
in
orb
dec
push
aam
cmp
add
mov
fistpll
sbb
inc
push
add
mov
jp
fnstsw
pop
neg
call
mov
xor
inc
gs
mov
sub
xor
pop
loopne
sub
and
mov
jmp
scas
call
push
sub
mov
xchg
xchg
clc
sbb
jne
mov
lret
decl
into
stc
cmp
sub
jg
jo
mov
fisttpll
mov
xor
es
mov
sti
mov
lret
dec
sahf
pop
adc
cwtl
insb
cmp
sbb
mov
sbb
aam
mov
scas
lods
push
shll
push
push
fisttpll
loop
and
cmp
pop
sub
fiadds
ret
movsl
scas
arpl
adcb
fmul
inc
xchg
xlat
je
mov
sub
jne
push
data16
repz
les
push
mov
jne
mov
mov
adc
lea
pop
or
push
or
in
fistps
outsb
enter
in
sti
dec
fucomp
ja
push
fxch
leave
dec
pop
add
pop
jle
cmpsb
testb
sub
loop
mov
scas
inc
pop
jle
sub
mov
insb
inc
jb
push
addr16
outsb
sub
sbb
jl
jae
sub
sbb
gs
sbb
stc
xchg
lahf
add
lret
mov
rorb
ret
and
xchg
add
lds
adc
sbb
sahf
int
jo
mov
lods
inc
dec
fwait
or
jne
adc
andb
imul
sbb
pop
imul
push
lcall
outsb
dec
mov
les
cli
rorb
je
out
nop
call
cmc
outsb
das
mov
mov
std
addb
mov
mov
mov
or
mov
mov
dec
jno
or
orb
outsb
mov
or
add
test
ret
mov
adc
sbb
push
insl
pop
sub
rolb
mov
out
or
lahf
out
mov
mov
jecxz
mov
mov
fimuls
mov
aad
shlb
push
and
mov
fldl2e
scas
gs
xchg
mov
lock
ret
xor
sti
pop
outsl
ja
mov
dec
sub
cs
testl
or
mov
out
imul
jmp
push
adc
scas
pop
jne
lret
dec
mov
sub
jle
out
insl
fwait
stos
or
rcrb
iret
jle
jle
cld
std
pop
hlt
inc
int
fwait
xor
sahf
and
subl
ficoml
dec
js
clc
xchg
inc
and
cwtl
mov
shll
lea
clc
add
popf
fsubp
pop
ss
jle
mov
sarb
mov
add
bound
sub
leave
dec
pop
cld
dec
rol
cmpsl
fwait
jp
aas
lods
add
je
stc
or
sbb
push
or
aas
frstor
cltd
test
orl
xor
cmc
loop
jo
aas
mov
pop
xlat
mov
imul
outsl
fsubr
shlb
inc
out
push
lret
add
dec
mov
mov
mov
and
dec
mov
repnz
test
insl
xchg
inc
fwait
mov
add
les
sbb
cmp
aam
push
add
movsb
lahf
xlat
push
cs
lret
cli
mull
into
scas
mov
loope
mov
xor
imull
nop
imul
mov
and
ds
mov
adc
sti
mov
fildl
and
shll
arpl
pop
xchg
push
nopl
add
xlat
bnd
mov
jp
fsubrl
pop
fcompl
call
pop
add
mov
lods
lea
jmp
mov
lahf
pop
fs
push
and
cmpsb
rolb
pop
repnz
push
gs
aam
and
cmp
and
adc
lret
test
mov
adc
push
test
leave
fdivs
push
sub
pusha
cwtl
test
cmp
dec
adc
ljmp
dec
push
or
add
out
adc
adc
andb
ja
jb
mov
hlt
jg
lock
dec
pop
cmpsb
pusha
jg
scas
lods
leave
ret
es
shll
adc
inc
iret
xchg
sub
rcll
lahf
lods
pop
cli
cmc
inc
pop
in
cmpb
push
cld
dec
hlt
scas
cmp
cwtl
mov
sub
pop
jo
and
ret
fiaddl
dec
rcr
adc
das
or
jecxz
mov
pop
inc
sub
roll
decb
mov
xchg
sub
ljmp
add
divl
add
hlt
xchg
push
mov
or
cmp
jne
jmp
pop
mov
imul
pop
push
adc
jns
pop
dec
incl
sbb
hlt
cmp
inc
xchg
mov
sbb
xor
rcr
lahf
cli
xchg
mov
or
add
and
lahf
outsb
mov
xlat
pop
jns
arpl
rorb
in
xchg
int3
out
mov
fiaddl
adc
fs
out
cld
push
xchg
add
es
scas
adc
mov
mov
and
fistpl
imul
adc
lods
mov
sub
push
inc
std
xor
les
cmpsl
lea
push
mov
jle
mov
pop
out
cli
push
dec
les
dec
ret
jg,pt
mov
inc
push
andb
scas
jne
adc
push
testb
popl
and
outsb
das
out
push
mov
xor
mov
jle
dec
aad
pop
scas
pop
adc
js
aam
test
adc
movsb
adc
fisubrs
cld
lcall
mov
jns
and
jbe
xchg
xchg
rol
cld
hlt
jge
fucomp
push
add
scas
js
fadds
push
fsubrl
xchg
cli
int3
and
imul
or
test
or
jns
jns
sub
and
out
add
bound
cmp
pop
xlat
gs
push
test
jecxz
push
xchg
fcomps
sahf
ss
push
lcall
xchg
out
xor
push
fistpll
bound
adc
es
pop
and
mov
mov
mov
lock
push
in
jp
lcall
cmp
inc
pop
stos
ret
inc
cmc
jg
sub
push
dec
test
push
lds
insb
enter
das
in
popa
cmc
insb
hlt
add
fisttpl
jbe
mov
sub
mov
js
push
jg
inc
aad
movsb
jno
pop
xor
inc
or
jp
lret
cwtl
add
das
mov
or
push
xor
cmp
sub
loope
pop
pop
jns
cmp
aam
add
imul
ljmp
sbb
mov
xor
mov
add
fsubrl
sub
push
lahf
es
mov
xchg
dec
cwtl
ja
mov
movsb
nop
call
add
push
sbb
xor
cmp
fisubs
dec
mov
icebp
push
mov
cltd
xlat
shlb
mov
stos
mov
ja
dec
sbb
addr16
in
pop
inc
shlb
sub
and
lahf
pop
xchg
stc
cltd
jg
and
inc
jle
outsb
cmc
out
dec
fadd
xor
testb
push
fisttps
loopne
rorl
jno
adc
cli
dec
pop
ret
jo
imul
loop
test
insb
inc
and
flds
dec
push
xchg
xor
aas
xor
inc
cltd
loope
xor
adc
lret
jae
push
call
xchg
adc
add
insl
les
push
out
cli
in
mov
roll
das
add
pop
cmp
in
icebp
add
xor
in
nop
cltd
stos
push
in
addl
ret
dec
inc
mov
test
mov
daa
add
lods
testb
stc
sub
fistps
jmp
xchg
mov
adc
inc
push
push
repnz
mov
push
and
push
cmp
sbb
xchg
in
ficoml
icebp
inc
pop
sbb
cmc
sub
inc
adc
push
inc
imul
insb
xor
fiaddl
sub
cmp
dec
pop
roll
call
adc
fdivr
addl
push
xor
outsb
mov
adc
scas
mov
xchg
cltd
insl
jae
push
rolb
nop
xor
outsl
popa
push
dec
sbb
jmp
psadbw
push
dec
sbb
neg
mov
roll
or
cwtl
sbb
notb
sub
scas
push
sbb
cmp
xchg
inc
mov
sub
std
not
mov
sbb
add
mov
dec
dec
push
sbb
mov
insb
mov
push
mov
add
push
add
out
adc
sbb
pop
test
adc
cmp
or
out
mov
inc
cwtl
pop
cs
xchg
cmp
insl
in
mov
frstor
arpl
push
andb
imul
cltd
mov
mov
jo
mov
mov
jmp
xchg
ret
cmp
mov
jecxz
sub
push
clc
int3
icebp
shlb
and
sub
mov
mov
mov
mov
jnp
je
cld
popf
test
movsl
adcl
fs
cmp
ljmp
fistl
mov
xor
push
xchg
popa
lock
push
addl
or
ljmp
add
push
pop
mov
pop
popa
jp
aaa
lahf
inc
inc
ljmp
and
stos
or
jecxz
pop
iret
xchg
jg
cmp
pop
mov
jbe
or
pop
mov
pushf
loop
cmc
fs
jp
sbb
pop
xchg
cltd
lea
lods
outsb
fmuls
inc
daa
scas
mov
mov
mov
push
xor
loop
jp
out
sbb
xchg
std
fdivs
imul
insl
lds
imul
in
clc
dec
bound
mov
popa
rclb
pop
add
and
test
in
jb
mov
es
into
call
notb
imull
sub
bound
mov
adc
pop
clc
fsubs
rcrb
sbb
mov
push
aam
and
loope
lock
xchg
lods
cld
and
pop
jg
cmp
js
scas
loopne
aad
mov
adc
sbb
rorl
xchg
mov
push
and
and
or
jl
test
mov
sti
int3
aam
pop
mov
rcll
fs
rcrl
jns
push
sub
mov
push
adc
ret
inc
add
sub
shll
jae
je
and
push
pop
mov
dec
out
inc
std
iret
adc
movsl
inc
xor
and
xor
test
sbb
mov
mov
add
or
bound
xor
xor
mov
push
loopne
adc
and
dec
insl
inc
push
in
push
je
fistpl
ss
sbb
addr16
cmp
inc
scas
sbbl
xor
push
out
xchg
test
xchg
addb
pop
fldl2e
pop
dec
rorl
and
int
xlat
fstpl
push
mov
add
in
jmp
xchg
add
fdivrl
sbb
jne
out
mov
repnz
pop
fisubl
out
push
data16
js
xor
mov
xor
and
sub
fwait
sbb
mov
xor
stc
mov
and
aaa
mov
mov
pop
in
push
adc
cmp
aam
xor
fwait
mov
push
clc
out
add
cwtl
ja
sbb
or
jnp
cmp
out
push
jmp
inc
insl
mov
and
mov
sbb
jae
addl
adc
jb
in
hlt
sbb
ja
pop
xor
cli
cmp
and
mov
jmp
test
dec
pop
out
test
dec
mov
pop
mov
in
pmaxsw
sub
pusha
sbb
scas
in
fdivrp
mov
mov
aas
icebp
mov
out
ljmp
push
and
jae
test
fiadds
xor
and
xor
cmc
inc
ficompl
hlt
xchg
sbb
jns
insl
pop
mov
sahf
iret
inc
fwait
sti
dec
jecxz
lea
mov
xor
nop
es
arpl
pusha
add
mov
aam
pop
sbb
cmpsb
jno
sbb
sub
out
jmp
inc
popa
scas
push
cmp
call
sbb
gs
jecxz
not
ficompl
out
xor
movsb
das
mov
das
lahf
cmp
roll
pop
xchg
call
loop
mov
or
or
out
rcrl
xchg
cltd
cmpsl
mulb
add
jae
cmp
jns
mov
ret
cmp
lods
std
fwait
jmp
and
mov
sub
cmp
cmpsl
push
clc
xor
cmp
sub
mov
cltd
andl
ret
push
xchg
into
sbb
cmp
xor
packsswb
dec
pop
fs
mov
mov
inc
ret
jl
xchg
cmp
cwtl
or
mov
dec
jmp
cld
inc
push
adc
push
stos
ss
mov
lock
mov
sahf
mov
ds
pop
insb
jne
outsl
insb
sahf
ret
lahf
or
xchg
rorl
sbb
mov
push
movsb
add
push
mov
sub
dec
mov
dec
mov
pop
test
adc
cmp
shr
in
push
dec
out
pop
fdivr
mov
inc
push
or
in
or
mov
fstpl
insl
cwtl
dec
pop
jp
pushf
stos
fdivrp
pop
lods
bound
mov
add
arpl
adc
jl
dec
cmpsb
out
push
adc
ds
das
cmpsb
cmp
lds
push
clc
xchg
mov
push
adc
out
xchg
aas
nop
das
enter
mov
fidivs
mov
cmp
sbb
jge
mov
jnp
in
sub
mov
pop
pop
cmp
xchg
pop
cwtl
cmp
mov
adc
push
mov
and
fildll
push
push
pop
and
sub
and
outsb
addr16
nop
push
lcall
pusha
movsb
loopne
pop
rolb
leave
imul
mov
rolb
imul
xchg
fistpll
jp
in
sbb
jecxz
ffreep
cwtl
cmp
out
arpl
lea
mov
add
cmp
mov
movsl
fldcw
sub
pop
pop
cli
jmp
mov
sbb
add
jl
addr16
fsubr
in
out
jno
xchg
mov
jo
cmp
sti
push
adc
xchg
sti
mov
aad
loop
jbe
adc
sub
adc
xchg
scas
fisttps
leave
loopne
js
pop
sbb
adc
adc
clc
movzwl
cmp
sahf
iret
sti
je
push
das
sbb
stos
fyl2x
xchg
cwtl
dec
jl
stc
insl
arpl
inc
add
push
fisttps
add
stos
inc
cmp
sub
and
sbb
insb
mov
cltd
ja
xchg
jns
data16
notl
cmp
mov
add
pop
lret
ret
nop
mov
notb
shlb
das
aam
adc
scas
pop
cmpl
cmp
mov
and
jp
sbb
lds
jle
ret
insl
in
mov
lret
inc
ret
int3
or
dec
dec
xor
mov
or
dec
sbb
push
dec
cli
fstpt
xor
repz
pop
dec
je
pop
xchg
adc
or
or
pusha
cvtpi2ps
insl
daa
clc
gs
or
jmp
xchg
inc
dec
scas
movnti
pop
adc
jge
sub
scas
xor
sarl
sbb
mov
repnz
jg
add
mov
js
pop
jns
add
lret
popf
inc
add
sub
adc
mov
mov
call
pop
loope
je
inc
imul
push
push
iret
imul
jge
mov
pop
lahf
xchg
fcmovnb
pop
mov
xlat
hlt
dec
loop
outsl
mov
dec
mulb
lret
mov
enter
or
or
jae
orl
xchg
cmc
lcall
and
cmp
dec
xchg
imul
mov
push
fistpl
pop
cs
push
insl
lret
testb
or
mov
mov
popa
lea
in
sbb
fsubl
mov
dec
mov
data16
xchg
arpl
ffreep
lods
out
imul
jo
sbb
sub
ljmp
sbb
inc
pop
jmp
pop
imul
xchg
lcall
sarb
jg
imul
xlat
cmpsl
xor
sti
and
pop
xor
mov
mov
pop
test
inc
mov
sbb
ret
sub
lods
test
scas
jmp
dec
xchg
les
mull
sub
fwait
ret
pop
dec
fimuls
xchg
mov
jnp
jno
lods
scas
pop
imul
mov
adc
icebp
jno
in
mov
pop
push
fwait
roll
lcall
add
mov
push
cmp
stos
xor
dec
sbb
outsl
rcr
sbb
outsb
test
push
pop
shll
stc
insb
sbb
mov
aad
cmp
inc
pop
inc
mov
hlt
ret
in
rorl
jg
mov
mov
f2xm1
jnp
xor
xor
gs
bnd
jo
jnp
adc
add
fwait
sbb
sub
mov
pop
pop
mov
xor
int3
arpl
pop
push
out
jge
sbb
inc
iret
cwtl
xchg
test
dec
cmp
cmpsl
xlat
sbb
icebp
loope
mov
imul
aad
and
jmp
or
ljmp
leave
push
push
out
sub
bound
mov
insl
out
cmp
jno
imul
inc
xchg
pop
xchg
enter
push
ret
cmp
xor
mov
imul
loopne
and
lea
mov
loopne
and
ret
sub
or
movsl
repz
push
imul
dec
test
aas
jle
lods
inc
and
outsb
daa
or
mov
add
idivl
icebp
adc
rclb
popa
mov
rorb
add
addr16
sahf
test
mov
jmp
xchg
mov
ret
imul
adc
jp
aas
and
lods
push
sbb
cltd
jnp
xor
shlb
sbb
stos
fisubl
xchg
insl
cmp
mov
popf
jno
sbb
das
sti
sbb
xchg
pop
in
sbb
mov
push
fsubp
xchg
in
mov
inc
rclb
mov
add
cli
lret
es
or
and
or
sub
mov
dec
pop
sbb
mov
add
lock
mov
je
xor
push
fs
cmp
shlb
mul
leave
ret
insb
inc
dec
into
add
mov
stc
shlb
mov
xor
xchg
imul
push
mov
out
sahf
out
aaa
mov
xchg
roll
inc
add
mov
lret
push
es
cmp
jle
rorb
lds
fdivl
and
lret
jns
adc
sub
mov
sub
mov
xchg
aam
lahf
stos
les
repz
movsl
nop
mov
or
jnp
xchg
and
mov
repnz
mov
roll
mov
jb
movsl
scas
mov
dec
xchg
in
movsl
out
adc
cmp
fstl
adc
or
iret
add
lock
dec
divl
xchg
fildl
or
jne
xor
daa
into
and
mov
leave
clc
inc
repz
pop
sub
mov
mov
add
mov
or
inc
add
mov
stc
inc
dec
arpl
push
in
stos
xor
dec
mov
movsl
and
dec
xor
out
loop
pop
out
je
jmpw
dec
sbb
ss
sahf
mov
xchg
in
sbb
dec
mov
out
loopne
adc
mov
call
xchg
add
dec
jne
cld
lods
out
test
mov
mov
jmp
cwtl
xlat
sti
stc
sarl
sbb
xchg
mov
shll
js
push
in
lea
cmp
es
es
mov
int
inc
jp
imul
push
add
jae
sbb
nop
xor
push
mov
push
jno
mov
push
out
bnd
add
lahf
sub
inc
cmp
movsl
lds
pop
adc
loop
cmp
jo
inc
ss
push
and
orb
lcall
fiadds
js
cmp
adcl
scas
ret
push
lods
adc
imul
cltd
test
adc
sub
dec
dec
cmpsb
lret
cs
lock
insl
lahf
jno
cs
imul
bound
add
fcoml
aaa
lock
shll
pop
nop
fisubrs
hlt
jp
adc
inc
jnp
xchg
aad
mov
roll
int
out
xchg
cmpl
int
aaa
pop
mov
xor
mov
fwait
mov
out
test
sub
and
cltd
sub
bound
dec
cwtl
push
fwait
xor
ljmp
hlt
test
or
sbb
jae
xor
cmp
xor
jb
rcrb
div
dec
xor
inc
jns
ret
mov
xchg
outsl
push
stc
fmull
jae
pop
mov
push
jg
add
lds
or
out
in
mov
adc
push
or
add
mov
pop
dec
arpl
jnp
dec
jb
iret
push
repnz
imul
jmp
out
xlat
rcrl
testl
pop
xchg
push
pop
mov
sbb
aam
adc
and
mov
repnz
lret
add
cmp
add
cmpsb
orb
je
adc
data16
scas
in
pushf
xor
pop
jge
aad
sbb
iret
pop
dec
add
divl
in
and
outsl
inc
mov
lret
xchg
inc
cmp
cmpsw
clc
movsb
aam
addr16
pop
lods
hlt
push
xor
push
insl
push
shll
push
push
add
sbb
std
add
jmp
or
sub
mov
lret
lock
mov
jns
lahf
test
stc
shl
sub
nop
lahf
push
pusha
sti
pop
ret
mov
pop
insl
inc
add
push
xor
out
adc
das
test
int
push
imul
stos
flds
gs
xchg
aaa
pop
sbb
xchg
out
dec
lcall
stos
sub
or
jmp
push
lods
adc
aaa
je
out
sarb
lea
push
test
or
shrb
dec
call
js
mov
out
andl
mov
cwtl
repnz
sub
or
rorl
dec
inc
clc
add
clc
dec
push
test
inc
pushf
pop
mov
pop
lret
les
add
les
sub
cmp
mov
stos
pop
cmp
inc
push
dec
add
cmpsl
add
and
call
and
dec
mov
aas
lods
jl
call
stos
jbe
ret
mov
dec
push
push
ret
rcl
push
testl
shll
inc
sub
jne
nop
pop
mov
xchg
dec
outsb
in
ficoms
out
or
std
addb
mov
and
aad
xchg
adc
mov
std
push
ljmp
rcl
and
push
or
ret
pop
fwait
push
mov
sbb
cmpsl
aaa
dec
adc
icebp
xchg
data16
jno
lea
xor
fmul
add
movsb
rcl
or
movsl
pop
inc
outsb
aaa
add
mov
xchg
lret
div
cmc
pop
push
mov
sbb
bound
add
sahf
xchg
pop
fiaddl
scas
or
in
imul
adc
arpl
call
pusha
fsubr
push
out
push
push
pushf
cmc
xchg
push
jne
aad
pop
sub
mov
cs
icebp
in
ficomps
movl
mov
push
cmpsb
pop
jb
mov
push
pop
fs
pop
adc
inc
add
xor
movsl
enter
push
dec
into
cltd
rcrb
pushf
repnz
pop
paddusb
leave
dec
fcomip
pushf
or
push
pop
jge
les
xor
mov
sbb
jno
inc
mov
adc
and
dec
lods
jge
jl
je
gs
jp
and
inc
daa
sti
mov
or
mov
fnstsw
addr16
inc
adc
pop
sbb
lods
cmpsb
lods
imulb
push
enter
jle
add
cmc
adc
cmp
shlb
pop
test
push
hlt
xchg
xlat
push
ret
xor
fdivrs
stc
mov
xchg
cmp
and
inc
ret
jbe
lcall
dec
or
mov
push
ret
sti
xor
flds
adc
dec
call
push
lds
push
adc
lahf
mov
cli
mov
mov
jle
push
push
cwtl
mov
jo
dec
cmp
hlt
stos
enter
adc
std
inc
xor
mov
add
mov
xor
inc
das
aam
pop
or
je
push
loopne
es
cli
test
sub
dec
cmpsl
daa
hlt
xor
mov
enter
mov
or
stc
gs
mov
push
inc
ds
scas
cs
sbb
outsb
mov
clc
xchg
mov
sbb
mov
xor
lret
pop
cmpsb
in
dec
in
mov
xchg
les
int3
mov
roll
mov
fdivrs
pop
fbld
nop
lods
mov
pop
jmp
jbe
push
mov
js
mov
mov
lahf
jecxz
mov
xor
and
xchg
jb
push
scas
rorb
int3
xchg
int3
icebp
cmp
pop
sub
xor
shlb
add
aad
push
test
jne
iret
cmp
push
cmc
out
sub
mov
mov
sahf
sbb
ljmp
jo
fs
cmp
jmp
in
fdivrl
sti
stc
sub
sahf
fisubs
jae
into
cmpsl
int
enter
mov
sub
mov
les
sub
je
mov
mov
pop
and
or
inc
and
sbb
add
stos
jl
pop
or
fidivrl
push
pop
cmp
mov
and
xor
push
ret
mov
cltd
adc
ror
push
adc
enter
pop
sbb
inc
lahf
clc
ret
adcl
pop
cmc
fs
imul
jnp
pop
pop
in
movsb
pop
fisttps
adc
scas
and
sbb
fidivl
sub
fisttpll
int
jle
jb
mov
pop
inc
cltd
out
and
call
adc
fidivrs
xchg
lock
mov
and
rolb
mov
or
pop
sti
push
nop
or
out
sub
fwait
jge
incb
sbb
dec
sbbb
push
cmp
push
or
neg
mov
xchg
ljmp
inc
test
or
add
aam
cmc
push
mov
mov
les
sub
mov
aas
adc
push
fisttpl
out
push
mov
in
inc
pop
inc
pop
mov
repnz
data16
ja
es
add
test
jb
or
in
jae
mov
pop
insl
mov
sarl
rcr
mov
iret
sub
frstor
xchg
or
jl
xchg
inc
sub
xor
rcrl
xlat
rolb
dec
cmp
xchg
and
add
jg
inc
imul
jne
xchg
or
pop
fimuls
dec
cld
sbb
call
xchg
stos
sarb
into
dec
cld
mov
movups
cld
out
test
aaa
jbe
nop
sub
lret
and
fisttpl
xchg
cld
adc
cli
cld
xor
js
or
mov
clc
mov
fldcw
pop
lods
adc
mov
mov
fidivrs
lcall
dec
adc
call
roll
int
adc
jne
mov
and
dec
mov
inc
dec
cltd
push
sub
outsl
pop
aaa
inc
das
mov
test
pop
daa
clc
xchg
sahf
rolb
mov
psrlq
or
movsl
sub
imul
rol
insb
popl
out
data16
xchg
outsl
inc
mov
rorb
xor
add
cmc
ret
jmp
out
mov
aad
out
xchg
sub
out
xorb
inc
adc
cmp
sub
add
push
pusha
mov
inc
pop
add
ja
scas
xor
mov
push
popa
jle
les
jmp
pop
push
ss
cwtl
jle
pop
jl
jb
lea
leave
mov
test
loope
fsubrs
rcr
dec
ljmp
int
test
sti
xor
imulb
fcompl
push
jno
fisttpl
cmp
inc
cmpsl
cld
xchg
dec
xor
xchg
outsb
dec
nop
cmp
or
sbb
mov
int3
push
adc
data16
jp
xor
pusha
addr16
xchg
xchg
inc
gs
add
jne
mov
push
pop
add
repnz
movsb
orl
testl
mov
sti
std
cmp
jmp
movsl
lods
mov
test
xor
mov
enter
mov
lds
icebp
and
vmovlps
push
mov
imul
and
mov
mov
or
jmp
icebp
daa
imul
mov
jmp
inc
push
adc
bnd
scas
cmp
xor
cmp
lock
jp
jbe
movsl
and
inc
enter
in
xor
cmpl
pop
enter
sahf
insl
or
subb
mov
sbb
push
lahf
xorl
jle
xchg
fs
js
aam
pop
loop
jmp
mov
mov
daa
fcmovbe
clc
filds
sahf
pop
mov
leave
iret
pop
dec
xchg
cmp
xchg
mov
loopne
pop
adc
adc
inc
push
dec
or
lods
loope
jge
testl
pushf
jg
fstpt
out
mov
cmpsb
cltd
or
or
mov
mov
mov
addr16
mov
rclb
and
ret
popa
sub
mov
inc
cmp
adc
ljmp
pop
mov
mov
cmp
dec
xor
bound
outsb
sarb
popl
sub
in
adc
icebp
jnp
jno
stos
ret
push
adc
fnstsw
push
xlat
loopne
ret
icebp
pop
mov
mov
bound
mov
es
push
int
loop
mov
mov
sub
xchg
div
jmp
pop
xor
clc
adc
std
pop
in
dec
outsl
fildll
lods
cmp
jmp
fs
dec
mov
xchg
sbbb
jecxz
pop
loop
push
mov
sub
lahf
or
mov
stos
xor
pop
mov
xchg
fcmovnu
popf
mov
lea
jle
cmpsl
push
cmpsl
in
cs
add
jmp
orb
ret
push
adc
mov
mov
test
ret
xchg
jbe
iret
or
push
mov
push
or
adc
push
cmp
test
into
and
add
enter
aad
push
scas
xchg
imul
push
mov
adc
sbb
pusha
jl
sub
pushf
out
sub
push
mov
cmp
scas
or
mov
in
pop
mov
mov
push
in
es
cmc
jb
rclb
cwtl
dec
lds
mov
pop
mov
xor
rorb
addr16
cli
cmpsl
fistpl
cmp
pop
xor
sub
mov
jecxz
mov
enter
xor
aam
outsb
fsubrl
push
dec
and
fst
sub
sbb
jecxz
out
test
xchg
and
jle
test
push
out
insb
in
rcr
test
aad
cli
arpl
push
jp
imul
fcomps
fcmovne
or
xchg
lock
sbb
inc
aam
lcall
out
xor
mov
mov
push
add
sub
and
pop
cltd
sbb
enter
je
push
adc
pop
dec
inc
inc
call
out
cs
add
or
mov
add
cmc
jno
daa
xor
mov
in
xchg
sub
adc
cmpsl
mov
mov
addr16
sub
jnp
jo
jp
das
repz
inc
sbb
ret
lea
mov
xor
sbb
cmpsb
mov
enter
das
cld
cld
fadd
rclb
addr16
lods
pop
clc
es
pop
cwtl
mov
cs
std
dec
je
lea
add
mov
fwait
cli
jmp
lods
fstps
inc
int3
into
mov
add
and
mov
cwtl
aam
repnz
push
xchg
jb
mov
xlat
sub
stos
mov
xchg
adc
push
icebp
clc
mov
pop
aaa
insb
aaa
pop
in
push
scas
xor
mov
cmp
mov
lcall
addr16
dec
xchg
outsl
jmp
xor
pop
insl
cwtl
leave
jae
sub
das
leave
outsl
adc
in
aam
sbb
sbb
sbb
test
cld
shrl
lds
lcall
mov
jnp
dec
mov
and
mov
shl
lock
popf
fildl
and
imul
fwait
push
push
jl
add
cmp
add
pop
mov
cmp
lret
movsl
mulb
xor
jg
pop
and
mov
dec
imul
xor
loopne
pop
mov
pop
cmp
cmp
sbb
lcall
jne
fs
lds
sub
out
ds
dec
enter
scas
imul
fidivs
stos
xchg
stc
pop
xchg
pop
test
aad
call
mov
mov
clc
addr16
and
jnp
cmc
mov
roll
mov
mov
out
sbb
outsl
or
sbb
mov
into
mov
daa
mov
pminsw
sbb
and
xor
pop
lea
das
xchg
adc
je
mov
xchg
ljmp
inc
sub
in
incl
cmp
pushl
xor
mov
add
in
call
xchg
fstps
pop
test
pop
fst
arpl
loop
fmul
pop
incl
mov
or
fidivs
mov
pushf
and
sub
mov
jae
or
dec
xor
adc
cmp
xchg
mov
out
jae
ret
enter
or
addr16
xorb
aaa
xor
stc
imul
sar
xor
jnp
lret
add
add
dec
outsl
push
icebp
add
add
cmp
inc
into
popf
ret
mov
xchg
lock
mov
loopne
js
lds
movsb
in
xchg
push
fmul
mov
push
int3
aaa
sbb
enter
jo
push
fdivrs
xchg
scas
imul
rep
cli
cs
shlb
mov
sub
sub
mov
jns
adc
in
imull
inc
mov
xchg
fcoms
cmp
popf
outsl
push
and
sahf
in
xchg
outsl
test
cmp
adc
and
cmp
dec
sbb
inc
rcll
add
aas
es
mov
push
dec
lock
inc
xchg
jge
or
into
sub
and
and
aad
xor
xor
mov
iret
and
xchg
adc
cld
shll
adc
pop
lcall
inc
fisttps
pusha
and
loope
stc
ret
mov
cwtl
insl
jno
adc
jp
fists
mov
je
inc
pop
fdivp
add
xchg
mov
pushf
scas
mov
daa
mov
xor
arpl
icebp
add
leave
cli
dec
add
sahf
pop
or
mov
mov
sbb
cmp
dec
dec
jnp
and
sti
addl
shll
xchg
int3
xchg
cmp
roll
lods
test
xor
jmp
jne
adc
mov
or
imul
mov
adc
lea
sbb
mov
or
lock
add
jp
fcompl
pop
stc
loopne
aad
aaa
xchg
mov
ljmp
fists
mov
fisttpll
and
push
push
mov
pop
test
jno
cmp
lret
mov
sti
jns
xchg
divb
scas
mov
arpl
sub
in
test
in
outsb
in
mov
ja
popa
je
test
divb
int3
dec
fwait
lock
jo
lods
inc
add
outsl
add
mov
cmp
dec
jl
js
bound
sbb
pop
xorb
sbb
jmp
lds
push
test
or
xor
mov
sub
sbb
mov
gs
scas
sub
mov
cmp
or
cwtl
mov
cmp
lret
xrstors
fs
push
jge
jb
rclb
mov
daa
sahf
stos
mov
cmpsb
and
jle
lret
jb
xchg
cmp
je
aam
mov
sub
ret
jae
add
pop
scas
or
es
mov
push
cld
jns
cmp
rcrl
leave
mov
shll
xchg
mov
xchg
jbe
call
cmp
loopne
addr16
shrl
pop
orb
mov
cmc
test
mov
shll
push
mov
xchg
dec
push
jne
mov
mov
cmp
push
popf
sub
push
xchg
ss
cmc
enter
mov
es
daa
push
push
lret
mov
sbb
sub
insl
lock
cmp
imul
sub
or
repnz
mov
pusha
jp
adc
push
inc
pop
mov
xchg
mov
sbb
cmp
xchg
jl
hlt
push
sub
mov
adc
repnz
mov
mov
xor
lods
sbb
jb
sub
xor
movsl
insl
cmc
jg
fucom
sbb
sbb
inc
sbb
mov
lods
js
imul
lcall
and
lea
add
push
xchg
stos
call
rorb
aas
xchg
dec
xchg
ljmp
test
cli
add
std
lock
imul
cmp
call
hlt
mov
dec
sahf
das
xor
jle
jb
adc
ss
and
popf
call
jo
pusha
sbb
je
mov
inc
test
xor
pop
psubq
aad
fst
cltd
in
fdivrs
fcmovu
fnstenv
ss
mov
jae
and
shr
dec
push
mov
mov
dec
push
out
insl
and
xchg
mov
scas
int
adc
or
cmp
sbb
mov
aaa
dec
lea
sahf
bound
push
dec
std
icebp
test
inc
mov
loopne
push
hlt
ljmp
fsubl
call
cltd
push
or
mov
loopne
inc
dec
add
xor
stos
lock
mov
daa
add
lret
push
into
mov
andl
or
inc
xchg
add
push
pop
mov
test
out
sub
bound
call
and
mov
in
shrb
movsl
adc
adc
pop
push
sahf
in
test
mov
pop
mov
cld
out
jle
push
testl
ss
cmp
ds
aas
jmp
jl
lds
sub
dec
and
scas
out
in
outsl
sbb
dec
dec
pop
cmp
incl
dec
in
aaa
xor
push
nop
bound
aas
daa
jne
jle
xor
push
sti
cmc
mov
int3
pop
xor
pusha
int
dec
call
adc
repz
push
push
mov
loop
cltd
mov
mov
sbb
ficompl
mov
jno
ret
pushl
subb
stc
xchg
cld
xchg
cmp
xchg
cmp
sub
stos
shll
scas
sbb
push
and
mov
movsl
jbe
push
pop
lahf
jl
and
jmp
cmp
icebp
pop
in
lcall
sti
notl
inc
popf
sub
inc
mov
cli
jb
mov
repnz
daa
lods
scas
loope
cli
lret
pop
dec
lods
das
xchg
jecxz
jle
fcmovbe
mov
xor
lock
jle
insl
sub
mov
xor
fisttpll
xor
sbb
cmpsb
in
fistpl
dec
in
mov
sbb
or
lea
iret
sbb
inc
sub
dec
out
push
or
add
hlt
xor
sub
call
mov
jns
cmp
adc
mov
movsb
test
mov
scas
pop
test
loop
push
and
inc
or
dec
mov
leave
mov
lcall
stc
lods
imulb
xor
xor
xor
mov
sbb
pop
mov
cmp
push
jl
sbb
movb
scas
push
mov
scas
jae
xlat
mov
cs
lods
test
mov
and
or
jmp
flds
mov
xchg
push
mov
sub
cmp
insb
cmp
mov
inc
sub
imul
daa
insl
or
jae
pop
jge
mov
repnz
outsb
vpsraw
jle
rcrb
cmp
mov
adc
repnz
mov
mov
jne
ret
repz
jae
push
mov
test
fwait
adc
ficoml
and
push
pop
je
enter
lret
imul
mov
push
jne
sti
pop
pop
mov
xorl
adc
jo
pop
test
fsts
xor
sbb
xchg
xor
inc
push
push
jbe
fisubl
in
inc
movsl
xchg
ret
je
insl
xchg
rcrb
pop
jle
orb
iret
test
push
fldenv
stos
dec
jns
enter
pusha
xchg
movl
cmp
and
mov
inc
outsb
sub
adc
push
pause
das
ret
in
add
shlb
sbb
inc
ret
dec
fsubr
and
je
lock
movsb
movsl
and
xor
mov
dec
xor
dec
xor
nop
cs
mov
lods
outsl
and
es
loopne
push
aas
mulb
cmp
mov
gs
cli
in
pusha
jb
push
adc
test
call
out
out
addb
inc
lods
iret
and
test
aam
cmovne
push
lds
ja,pt
push
xchg
enter
or
aam
sub
hlt
xchg
es
pop
add
cmpsb
lahf
inc
xor
rolb
xchg
xchg
popa
jp
movsb
in
sub
outsb
xor
bnd
gs
addr16
popa
xor
mov
cltd
xchg
adc
pop
xchg
dec
in
shlb
lret
sahf
movsl
mov
push
in
fiadds
ljmp
ss
ret
stc
clc
pop
cmp
pop
je
xchg
pop
lock
push
clc
jg
mov
mov
fs
jl
mov
mov
lods
ret
sub
lahf
xchg
movsl
dec
pop
lods
cmp
sbb
in
jo
les
pop
jbe
sub
push
lret
and
lahf
xor
fcoms
loope
sahf
mul
es
and
cmc
fsubr
lahf
ja
jbe
xor
adc
sbb
loope
adc
dec
iret
or
pop
inc
mov
cmpsb
jl
arpl
arpl
hlt
fs
sub
fcmovne
adc
jnp
inc
enter
repnz
jns
add
push
sub
mov
fsub
cli
pop
test
les
pop
jg
pushf
rol
pop
scas
jnp
mov
fstpl
jo
fidivs
out
incl
pop
or
jg
jge
scas
jae
inc
ds
xor
imul
add
mov
dec
movsl
outsb
or
inc
pop
jno
insl
cmp
lea
and
push
add
popa
push
xchg
jo
outsl
sub
pop
add
jecxz
push
mov
push
cltd
jmp
in
fidivrl
xchg
movsb
jmp
mov
mov
or
test
sub
stos
push
es
fstl
jmp
push
popl
cmp
push
mov
sbb
movsl
xor
popf
adc
dec
jns
and
mov
mov
push
movsl
mov
cmp
pop
mov
shrb
icebp
in
jns
in
bnd
test
fwait
pop
xchg
clc
and
mov
xorl
pop
sbb
cmpsw
js
repnz
fcompl
or
out
inc
icebp
jp
ljmp
in
je
popf
jb
xchg
sub
add
mov
fimuls
sub
js
lcall
sbb
lea
int
sbb
outsb
push
mov
and
lcall
sbb
inc
mov
int
xorb
insl
test
pop
insl
pop
std
inc
lods
and
add
lods
push
fistpll
lcall
mov
xchg
inc
cmp
xorb
nop
in
popw
or
fmuls
es
ret
stos
cmc
jle
mov
sbb
sbb
xchg
out
outsb
in
jg
mov
mov
mov
ror
data16
cmp
pop
imul
pop
lods
stc
mov
mov
mov
jecxz
sub
int
jge
ret
adc
or
and
aam
cmp
sbb
call
int3
inc
pop
dec
gs
sub
in
sbb
cmp
fs
lock
dec
dec
aam
roll
dec
sbb
xor
loopne
add
fildl
jecxz
jo
imul
jecxz
movsb
cltd
sub
fcmovu
cmp
mov
mov
adc
fiaddl
cmp
push
push
gs
add
mov
int3
lds
outsb
mov
notl
bound
imul
std
mov
ss
pushl
push
mov
sti
imull
mov
jno
divb
xchg
jg
cmpsl
cld
mov
into
sub
pusha
fwait
jp
mov
ljmp
pop
xlat
jp
in
add
in
sbb
sub
inc
xor
ss
dec
addb
mov
mov
jge
ss
mov
jge
mov
ds
ret
ja
int3
enter
aam
pop
inc
sahf
mov
repz
loop
je
lds
push
jge
mov
fwait
cmpsl
adc
aam
dec
inc
push
and
aad
in
popa
lcall
jl
mov
pop
fwait
fstpt
test
andl
pop
jae
xchg
adc
mov
inc
sti
xor
jecxz
cmp
inc
dec
pusha
das
loop
mov
dec
fistpl
cmc
mov
xchg
mov
pop
cld
nop
pushf
testl
xchg
sub
les
mov
ljmp
xor
sub
fwait
push
push
add
xor
repz
or
lcall
clc
jecxz
fdiv
std
or
cltd
insl
push
jnp
call
stos
jmp
sub
lahf
and
push
xchg
xchg
pop
adc
or
repnz
stos
sbb
mov
jle
nop
add
test
jne
ja
popf
xor
push
jp
sti
stc
roll
jp
mov
fldt
pop
inc
sbb
cmpsb
jmp
or
das
test
cmp
sti
lods
stc
and
jbe
imul
ljmp
jae
into
lock
xlat
enter
xor
rclb
sbb
xor
jl
sti
adc
scas
cwtl
sub
add
les
cmpsl
jnp
shll
push
fwait
add
mov
jns
lcall
jecxz
push
sub
add
mov
out
test
mov
dec
out
cmp
loopne
lods
xchg
aam
sbb
cmp
jnp
arpl
lea
push
loop
ds
aam
xor
pop
jge
inc
loopne
mov
fst
sub
adc
and
xchg
les
mov
enter
jle
mov
pop
sahf
add
cmp
mov
xchg
fimuls
pop
js
cwtl
push
sub
insb
shll
sub
fwait
push
add
repz
jge
outsb
mov
cmp
jmp
ja
pop
outsl
scas
mov
sbb
cmp
inc
sub
call
inc
orb
mov
sub
inc
or
cmc
lret
ret
push
sbb
faddl
sub
testl
or
fsubrp
dec
movsl
pop
mov
lock
aaa
shl
cmp
inc
dec
jne
mov
insl
jp
fiadds
push
fucomi
push
xor
clc
jle
insb
jmp
mov
sub
pop
cmp
mov
inc
scas
daa
cld
std
add
sub
sub
and
out
inc
sbb
cwtl
mov
adc
repnz
cmp
add
je
pop
mov
rorl
out
addr16
jg
data16
lcall
fucomi
push
enter
xor
idivl
add
loopne
jmp
testl
lret
popf
aaa
mov
imul
xor
dec
les
loopne
in
jo
inc
pop
jmp
fcomi
pop
sti
pop
insb
fsubrs
loopne,pt
or
aas
mov
xchg
inc
test
outsb
imul
sub
inc
mov
cmp
lret
sti
pop
sub
hlt
pop
xor
cmpl
popf
imul
xor
fsubrs
daa
int3
aam
mov
mov
hlt
fiadds
pop
xor
daa
retw
xchg
mov
inc
jae
jecxz
push
xlat
test
mov
sbb
aas
xchg
lea
idiv
sbb
aas
jb
cli
add
ds
orb
loop
movsb
adc
mov
popa
xor
cltd
jns
and
xchg
dec
dec
add
xor
adc
scas
negl
jle
imul
mov
lds
xchg
sti
mov
test
or
arpl
xchg
add
xor
outsb
popf
mov
or
push
fcoms
enter
mov
xchg
adc
pop
mov
push
xchg
mov
insl
out
push
fs
inc
stos
sbb
mov
xlat
cmp
imull
mov
les
fucomip
out
mov
roll
shll
lock
xchg
out
jmp
sti
stos
and
addr16
btc
test
cwtl
data16
scas
cli
add
push
sub
adcl
scas
loope
xchg
rcr
mov
pop
addb
imul
jmp
pop
mov
addb
dec
rclb
cld
pop
and
clc
or
movsb
rorb
mov
and
mov
ljmp
dec
loop
jno
lcall
inc
xchg
or
or
fbld
dec
insl
adc
stos
sbb
inc
adc
std
pop
jb
or
push
in
inc
ficoml
je
icebp
dec
sti
mov
xor
add
ss
jle
dec
out
dec
mov
add
inc
cmp
mov
adc
xchg
cmp
xor
xor
fs
push
insl
pop
arpl
ljmp
outsb
add
movsb
xor
mov
outsb
dec
and
xchg
popa
and
js
xor
mov
push
mov
in
adc
in
out
or
pop
xchg
cwtl
jbe
pop
rcl
sbb
hlt
mulb
sbb
fidivl
pop
inc
sub
ds
lea
xchg
cmp
jle
test
lods
mov
aas
fcoml
lods
adc
adc
mov
xlat
movsl
mov
push
pop
leave
imul
lahf
cs
shr
sbb
scas
xchg
imul
cmpsb
lret
mov
dec
ss
add
jnp
pop
or
xor
cltd
mov
and
mov
je
arpl
push
sub
int3
or
mov
mov
xchg
imul
das
scas
push
jbe
into
stos
push
cmp
cltd
std
mov
or
and
repnz
mov
lret
out
dec
daa
jecxz
mov
mov
jp
inc
jg
add
push
push
jp
cmpsb
mov
dec
jne,pt
pop
pop
gs
add
test
push
add
pop
sub
jnp
dec
leave
fcompl
mov
dec
movsl
add
inc
jecxz
mov
xchg
mov
mov
adc
add
add
mov
inc
test
jmp
mov
pop
sub
pop
aas
loopne
xchg
pusha
ja
inc
lahf
lds
sub
syscall
dec
push
xchg
stc
pushf
dec
mov
and
dec
jns
mov
pop
jle
xchg
sbb
lret
lret
jb
xchg
addr16
out
lcall
push
cmp
ds
popf
dec
cmpsl
jno
dec
cltd
sbb
lcall
sub
dec
or
daa
fisttpll
fnstsw
or
mov
ss
push
arpl
mov
sub
sti
cmp
xchg
inc
call
ret
ss
push
jo
inc
dec
mov
sub
mov
mov
fsubl
cwtl
outsl
mov
lret
sub
test
push
aam
iret
sub
fdivp
sub
lret
sub
sahf
sbbb
inc
mov
clc
mov
mov
jmp
cwtl
push
mov
xchg
xchg
loope
clc
lds
sub
mov
push
fistps
ljmp
and
xchg
hlt
mov
lcall
sbb
out
addl
or
inc
stc
sub
cmp
add
int
mov
shll
cmp
aam
jge
mov
mov
and
push
xor
push
mov
xor
pusha
cmp
daa
addr16
mov
and
inc
add
mov
mov
inc
mov
or
cld
enter
shl
xchg
jo
lahf
leave
out
cmpsl
mov
xorl
adc
mov
adc
lods
rcr
mov
sbb
jg
xor
popf
dec
cmp
mov
jno
jae
jbe
xor
mov
inc
prefetcht2
adc
add
mov
es
pop
aas
or
sbb
pop
daa
ror
jg
popl
xor
add
sbb
push
fisttpl
pop
and
cli
test
xor
outsl
and
les
mov
mov
xor
inc
dec
pop
out
mov
mov
adc
test
scas
push
mov
xor
adc
sbb
cmp
mov
xchg
jg
mov
jnp
mov
ja
hlt
out
jmp
sahf
jb
push
incb
rcl
push
jns
imul
push
mov
adc
ret
adc
pop
xor
pushf
jmp
sbb
adc
pop
test
lock
add
inc
mov
add
cmpsl
nop
aam
xor
add
xchg
stc
cld
push
adc
arpl
mov
push
mov
sbb
or
loop
add
inc
push
add
popf
out
in
sbb
imul
xor
imul
mov
leave
leave
repz
push
dec
jne
pop
popa
xchg
cmc
xchg
sub
or
pop
adc
jmp
and
xor
jno
lret
push
aas
dec
ds
sub
dec
sbb
cmp
std
iret
push
push
das
popf
cld
push
test
lahf
adc
std
inc
lret
and
ljmp
jno
addr16
scas
es
mov
add
mov
mov
push
or
pop
jge
popa
mov
mov
icebp
mov
imul
sahf
jbe
das
push
xor
cwtl
notb
push
sub
out
mov
int3
out
mov
jge
pop
pop
lret
addr16
lock
mov
xor
cmp
jb
adc
test
jb
movsl
out
xchg
jno
aaa
pop
cmp
icebp
sbb
cmc
xor
sar
mov
inc
mov
aad
mov
dec
cmp
cli
lods
mov
mov
inc
mov
mov
lods
inc
ss
xchg
jno
sub
and
xor
scas
jle
and
inc
mov
cmp
inc
pop
es
mov
jmp
push
push
add
add
subb
in
popa
sub
pop
push
scas
sub
jle
ss
fisttps
xchg
mov
test
stos
lahf
adc
adc
mov
sub
add
xor
lcall
hlt
lret
pop
mov
cmp
pop
pop
out
mov
mov
in
mov
into
inc
mov
lcall
push
sbb
shrb
and
xchg
test
jecxz
adc
and
out
fwait
ja
and
in
mov
push
inc
push
mov
clc
shl
aas
outsb
cmp
outsb
sbb
movsl
fists
push
mov
mov
imul
mov
pusha
insl
aas
aaa
adc
inc
rcrl
test
and
sub
jl
sarl
cmpsl
or
inc
sti
add
xor
mov
xor
imul
cmc
lea
dec
cmpsb
rorb
shl
popf
pusha
insl
adc
add
cwtl
adc
lcall
outsl
xchg
jecxz
inc
mov
shll
xor
inc
inc
adc
pop
repnz
adc
cmc
pop
mov
jne
enter
or
jae
cli
mov
mov
in
jb
mov
movsb
dec
je
mov
sub
loope
and
pusha
mov
es
stc
mov
lret
call
push
cmp
shrl
mov
mov
insb
stc
cmp
lods
inc
xchg
rcr
hlt
ret
lret
xor
in
cmp
adc
or
cmp
and
movsb
cmpsl
loopne
push
push
out
popa
inc
stos
out
jp
jne
adc
fisttpll
add
rorl
scas
out
cmc
ficoms
jmp
lcall
xchg
inc
xor
mov
jae
mov
lcall
outsb
add
les
roll
mov
push
scas
scas
or
das
loopne
lods
push
addb
push
adc
adc
cmp
add
sbb
gs
ljmp
pop
ret
mov
xchg
jae
mov
incb
nop
loopne
stos
repnz
shrb
xorb
jge
movsb
cmp
movsb
call
ja
loop
stos
jbe
jle
xchg
add
aaa
xor
sbb
jmp
js
mov
aad
and
push
out
movsl
in
add
lret
sbb
test
in
cmp
add
es
xchg
sbb
popf
dec
sbb
dec
dec
out
out
pop
ja
push
and
std
or
stc
inc
stos
ljmp
and
or
subl
mov
jbe
cmp
sahf
push
and
lds
dec
pop
jnp
push
sti
push
adc
shrd
aaa
sarl
inc
push
jo
aam
and
jno
ret
jnp
gs
and
push
or
pop
jnp
enter
xor
aas
das
pop
sub
ss
sarb
fs
pop
dec
in
jl
faddp
cld
mov
int3
les
in
loopne
adc
sbb
adc
add
ret
push
sahf
jle
push
dec
mov
pop
push
xor
cmpsb
lods
ljmp
popf
push
jb
jp
and
inc
pop
push
push
dec
adc
fisttpl
rcrb
es
sub
sarb
xor
push
lahf
mov
push
xor
mov
dec
push
shl
daa
fsincos
ficomps
xor
rcrl
das
rcl
movsl
in
sti
sub
pop
push
mov
push
ret
movsb
inc
jp
mov
sarl
and
sbb
out
mov
nop
add
xor
pop
cmp
pop
and
xor
adc
jge
inc
jmp
sbbb
mov
push
xchg
jecxz
xor
shl
jbe
adc
icebp
mov
mov
repz
daa
inc
mov
das
inc
jb
out
jno
mov
call
fbstp
sub
jecxz
fdivr
iret
loop
mov
adc
lods
xchg
add
jle
cmp
pop
push
sub
or
mov
call
xor
cld
sbb
ja
push
adc
lds
pusha
jo
pop
add
mov
imul
leave
cmp
mov
ja
mov
pop
cmp
push
jecxz
dec
or
pushf
es
xlat
add
std
pop
add
dec
push
dec
dec
xor
dec
cmp
pop
cs
mov
sbb
les
or
push
sub
mov
mov
loop
jl
std
adc
jo
shll
sahf
test
adc
call
cmpsl
fs
cmp
inc
fwait
pop
ja
inc
rolb
fsubp
jp
and
pop
int
push
addb
lods
inc
push
imul
inc
adc
es
loopne
xchg
xchg
lret
mov
mov
and
mov
mov
mov
mov
aam
and
pusha
pop
rolb
add
outsl
dec
sub
adc
scas
sti
cltd
push
ffreep
fidivs
pop
repnz
or
std
lock
movsb
inc
call
outsb
xor
jo
repz
mov
xor
ljmp
mov
cmp
cmp
and
movsb
mov
lahf
cs
push
pop
sbb
stos
mov
jecxz
cli
or
nop
xor
jmp
mov
jl
and
xchg
test
jno
push
push
lds
jae
xchg
inc
mov
call
inc
outsl
and
mov
xorb
lret
push
pop
inc
ds
jbe
rcl
loopne
int3
stos
arpl
xchg
dec
adc
das
push
add
sbb
fs
nop
ret
and
xchg
enter
aas
cli
mov
xchg
les
add
shrb
jno
vrcpps
push
aaa
repz
jg
adc
mov
mov
iret
or
cli
mov
ss
leave
hlt
pop
ficomps
mov
test
lahf
sahf
clc
lea
fwait
lret
aad
test
push
pop
bound
shlb
lret
or
xchg
sub
cmp
stc
data16
in
js
dec
aam
mov
mov
sub
outsb
enter
push
cli
rolb
nop
sub
popl
mov
mov
push
pop
mov
dec
xchg
in
inc
popl
mov
mov
mov
test
inc
das
fwait
in
test
pop
push
cmc
add
jge
pop
jle
sub
sahf
dec
movsb
fistl
ret
rclb
jo
shlb
push
in
loop
out
mov
mov
fsubr
int
lahf
add
and
sbb
dec
idiv
dec
mov
cmp
xor
mov
mov
pop
test
int
pop
mov
jo
test
mov
mov
fisubs
scas
shll
ret
xor
sarb
rcll
std
inc
inc
fstpt
jne
lret
dec
sbb
ret
and
shr
fdivl
sub
add
out
inc
cmp
add
xor
fs
inc
xchg
dec
pop
jl
mov
call
mov
sub
jmp
mov
fmuls
enter
int
push
popa
sti
adc
lods
mov
and
xor
dec
lea
mov
enter
arpl
and
in
adc
in
jmp
cmc
push
ss
sbb
stc
clc
cmpb
add
inc
push
jnp
daa
les
and
inc
popf
gs
mov
cmp
or
pop
ret
mov
int
in
scas
add
lcall
jae
sarb
enter
adc
out
mov
movsb
jl
pop
scas
inc
cltd
push
add
dec
imul
add
mov
scas
sub
add
push
out
testb
scas
adc
jg
cmp
lea
dec
imul
aam
mov
cmp
inc
cmp
jp
ss
ljmp
pop
dec
jp
jge
mov
pop
cli
xlat
mov
or
fwait
iret
or
rorl
xchg
dec
mov
je
mov
mov
mov
sub
add
mov
incl
mov
outsb
xchg
adc
movsl
jnp
in
pop
stos
or
mov
add
iret
ja
in
lds
arpl
popf
mov
dec
xchg
and
call
outsb
adc
arpl
jo
push
and
int
aam
pop
fidivrs
adc
movsl
outsb
ljmp
add
and
icebp
add
add
add
pop
loop
adc
repz
gs
push
mov
mov
ffree
sub
add
push
dec
add
inc
cmpsb
gs
dec
enter
or
fs
int
dec
lea
out
sbb
sahf
das
mov
mov
dec
daa
das
adc
xorb
xor
ds
aad
mov
adcb
sti
je
nop
xor
out
pop
xlat
scas
add
pop
std
jb
mov
lock
mov
nop
mov
shll
subb
imul
jne
aaa
xlat
loopne
ret
adc
nop
outsl
and
mov
lret
xor
and
fnstenv
inc
stos
mov
lret
dec
xor
sarb
mov
sub
cwtl
xchg
mov
stos
mov
scas
push
adc
lock
add
nop
mov
loop
push
xor
pop
mov
hlt
pop
jmp
jnp
dec
testb
dec
sahf
fs
rcl
mov
jp
sbb
aaa
mov
mov
test
data16
sbb
mov
dec
inc
push
dec
stos
lret
gs
xchg
jge
lea
clc
adc
stos
jne
jne
sbb
rolb
outsl
xchg
int
dec
pop
cmp
xchg
les
cs
jo
xor
sub
pop
pop
ret
imul
cmpsb
mov
leave
push
add
test
insb
in
out
pop
adc
pop
loope
lods
and
fcoml
movsl
push
pusha
ss
pop
add
iret
daa
shll
mov
mov
push
mov
add
pop
addr16
push
jbe
jno
pop
mov
sub
aad
dec
gs
call
xchg
push
loopne
add
je
adc
add
push
dec
push
lret
cli
push
xchg
sbb
mov
dec
mov
inc
xchg
jmp
mov
jge
adc
scas
cmp
jg
adc
je
testb
sub
push
sbb
sbb
fimuls
inc
ficoms
inc
sbb
sub
loopne
sbb
push
cmp
sbb
pop
mov
push
scas
in
jns,pn
aad
sub
lock
bound
out
sub
in
lods
jo
loop
mov
into
dec
push
jo
ror
add
inc
inc
jae
icebp
push
cmpsb
std
outsb
mov
add
xor
iret
push
or
mov
xor
dec
mov
ss
aam
enter
lcall
inc
into
aas
stos
dec
xor
insl
dec
cwtl
pop
sti
mov
ret
imul
daa
add
and
dec
xchg
mov
cmp
push
sbb
cmp
sub
in
sub
ss
inc
cmc
push
repz
cmp
mov
call
cltd
movsl
mov
adc
jno
pop
cli
lods
cltd
rolb
nop
pop
push
or
rolb
mov
aad
lock
inc
and
xor
or
pop
or
aaa
scas
sub
push
aad
les
xorb
dec
aam
mov
jp
push
movsl
xlat
data16
mov
or
mov
leave
push
in
jbe
lar
aaa
test
adc
sub
inc
push
mov
insl
mov
ss
xor
out
jae
dec
jno
icebp
mov
incl
mov
in
enter
cmc
mov
xchg
lds
xchg
orb
jnp
into
out
add
and
repz
push
insl
inc
xor
push
push
adc
adc
or
sub
loopne
sub
pushf
xor
fcmovnbe
into
xchg
dec
mov
mov
faddl
sub
roll
in
in
stos
mov
in
loop
out
addr16
mov
cmp
bnd
inc
fidivl
mov
push
mov
pop
inc
clc
cmpsb
and
rcrl
xchg
ljmp
call
jmp
mov
outsb
out
mov
je
repz
push
pop
sahf
aaa
mov
dec
push
sub
icebp
sub
icebp
inc
lods
sbb
call
sbb
mov
fistpl
dec
jbe
jle
ss
pop
mov
or
sub
xor
out
sbb
decb
jp
adc
or
lahf
rorb
sbb
insl
dec
xchg
jno
mov
jne
dec
sbb
imul
scas
scas
fmull
inc
jl
pop
into
cmpsb
loop
or
pop
rol
mov
adc
nop
aaa
xchg
fldt
adc
mov
scas
add
fcoml
popa
xchg
push
pop
inc
mov
mov
pop
jnp
ds
mov
mov
loopne
shlb
jnp
push
sbbl
mov
pop
fldt
or
mov
xor
scas
sub
rol
xorb
add
jno
nop
js
mov
add
je
mov
sbb
sub
leave
mov
int
lods
inc
xchg
repnz
rcll
gs
pop
pop
pop
push
adc
and
shrb
add
daa
add
xchg
sub
xor
fdivl
inc
in
lea
cmp
pop
mov
shl
xorb
outsb
lret
add
jge
push
mov
mov
inc
adc
fbld
xor
dec
data16
ss
xchg
cmpsl
nop
xlat
mov
dec
cmp
jecxz
insb
ljmp
or
sbb
add
std
cmp
mov
cmp
addr16
adc
xchg
hlt
rcrb
test
mov
or
sbb
outsl
mov
mov
aad
lret
sub
xor
hlt
adc
xchg
dec
or
out
lods
lret
push
adc
into
mov
ss
cltd
xchg
mov
xchg
jmp
fwait
in
lock
jl
iret
cmc
or
sub
add
dec
push
cmpsb
or
ja
js
cs
mov
and
sub
out
sahf
scas
push
shl
dec
cmp
out
jno
mov
rolb
das
sti
sbb
ret
enter
push
xor
outsb
cltd
add
pop
sti
cmp
or
inc
in
movsl
ljmp
fsubl
or
mov
or
jmp
mov
sub
movsb
cld
push
imul
mov
inc
add
mov
mov
push
or
repnz
jae
cmp
stos
and
insb
arpl
cmpsb
scas
inc
cmp
lods
push
mov
fisttpl
mov
rcrl
mov
push
lods
add
in
outsb
lret
test
imul
xchg
test
jns
cs
add
xor
fwait
push
and
daa
sbb
xlat
xchg
sub
fcomi
adc
ljmp
inc
jbe
cld
in
inc
mov
xor
mov
xor
mov
and
std
scas
ret
sahf
mov
movsb
icebp
adcb
pop
icebp
jl
mov
arpl
pop
sub
cld
lahf
idivb
pop
adc
bound
adc
int
cmpsb
sbb
sbb
adcl
or
loope
or
jo
xchg
mov
gs
arpl
inc
push
dec
inc
es
mov
sti
fdivrs
or
mov
lods
mov
int3
jae
mov
sub
push
xchg
stc
bound
ficomps
inc
fisttps
pop
xchg
inc
stc
lods
cmpl
sub
mov
scas
mov
popf
int
mov
inc
adc
mov
hlt
int
orl
pop
inc
fsubrp
icebp
sub
and
adc
pop
ret
lea
insl
mov
mov
sbb
or
popa
mov
or
sti
inc
enter
je
enter
dec
loop
repz
add
clc
jge
mov
xor
addr16
cli
sbb
scas
outsb
ljmp
dec
imul
jecxz
popf
andb
sarl
or
in
setae
jle
addl
mov
aad
arpl
or
call
cmpsl
xor
adc
ljmp
lret
xchg
popf
jp
leave
pop
inc
and
aas
adc
rcrb
bound
jo
js
xlat
lods
mov
cld
and
mov
push
sahf
cmpsb
add
aad
ds
inc
cmp
orl
sub
sarl
cld
ljmp
mov
movsl
sbb
or
sub
jmp
in
add
cmp
inc
dec
loop
bound
xlat
adc
xor
rcrb
lea
loop
jo
pop
mov
loop
mov
sbbb
in
mov
cld
adc
jge
jo
cmp
cs
push
aaa
dec
jo
sbb
roll
push
jo
pop
jecxz
je
sbb
push
insb
push
stos
int3
pop
inc
mov
decb
ret
jmp
shr
pop
in
push
pop
fistpll
addb
fwait
mov
lods
mov
sbb
push
insb
iret
ljmp
pop
addr16
sbb
add
jne
mov
insb
loop
xor
push
nop
scas
mov
or
dec
xor
gs
sbb
in
push
rorl
sub
pop
and
or
add
or
jno
insl
idivl
daa
out
mov
iret
inc
hlt
lock
pop
ljmp
or
pop
inc
shrl
xchg
mov
mov
sahf
rcr
push
scas
into
cmp
lods
aaa
sbb
jo
cmp
inc
xorb
xor
inc
fstps
iret
jo
or
fsubrs
mov
or
cltd
pushf
popa
movsl
orb
dec
jne
stos
cmp
adc
jl
ds
hlt
sub
inc
add
sub
les
dec
sbb
or
pop
jg
push
sbb
mov
pop
dec
cwtl
push
pop
rcrb
mov
push
outsb
lahf
cmp
or
sahf
mov
mov
pop
outsb
movsb
ficomps
and
gs
jno
mov
or
mov
adc
cmpsb
sti
xchg
lret
inc
int
lock
sub
sbb
aaa
xchg
push
ffreep
push
and
stc
popf
cmp
ja
rorb
enter
fwait
jg
add
addb
sahf
scas
mov
push
pusha
and
ret
lret
loope
fisttpll
cmp
and
icebp
nop
call
cmpsb
mov
test
sarl
imul
mov
aam
or
std
pop
mov
jne
sub
div
pop
imul
enter
das
push
lds
dec
dec
and
mov
push
inc
jns
pop
outsb
dec
adc
scas
sub
aam
sahf
fdivrl
cmp
movsb
insb
in
pop
stc
inc
and
in
cld
cwtl
aad
outsl
hlt
shl
xlat
and
adc
lea
pop
cmp
dec
adc
pop
mov
adc
fmul
mov
push
lea
dec
aam
sbb
cmp
adc
decl
sti
insl
insb
mov
movsb
into
xor
mov
mov
sbb
inc
cltd
lcall
push
call
out
cwtl
push
cmp
pop
cmp
lcall
jno
mov
js
jle
push
cli
cmp
int3
loopne
or
mov
cwtl
nop
ret
pop
and
lds
inc
addl
jo
inc
stc
dec
loop
sbb
out
rcrl
std
xchg
pop
rcrl
scas
fs
push
mov
or
xchg
subb
lods
xchg
adc
sbb
fisubrs
add
inc
sub
call
data16
test
sbb
push
pop
sbb
pop
shll
js
nop
fcoml
out
pop
add
das
cwtl
jno
xchg
jge
jns
nop
xor
test
ficoms
clc
nopl
xchg
fisubrl
sub
inc
inc
cmp
inc
xor
out
je
pop
subl
notl
pusha
jo
or
inc
enter
outsb
push
xor
sub
jo
les
pop
mov
inc
orl
inc
into
mov
pop
shll
fimuls
jae
adc
xor
ret
fabs
in
pop
in
out
push
fdivr
dec
pop
stos
int3
je
and
test
inc
leave
js
xor
cmc
cld
fucomp
push
sbb
and
xchg
mov
inc
sub
mov
pop
call
pop
fucomi
pop
cmovo
push
imul
or
add
xor
jp
pushf
xor
and
repz
fbstp
leave
mov
push
int
mov
cwtl
shlb
orb
sub
xbegin
shrb
push
jle
mov
cmc
shll
xchg
clc
lret
fadds
jl
inc
into
fs
out
out
pushl
daa
les
je
or
mov
repz
test
jp
dec
popl
cmp
and
mov
lcall
subl
xchg
aam
and
push
iret
popa
xor
pop
inc
sahf
lret
push
clc
xor
test
and
notb
xchg
shll
and
cmpb
jno
mov
test
int3
push
jg
mov
cli
fidivrl
mov
addr16
or
movsb
int3
and
xlat
sub
in
adc
ljmp
mov
fisubl
hlt
in
lea
or
dec
pop
add
push
lret
sbb
mov
test
outsb
in
shll
xchg
pop
xor
fnstcw
xor
ret
in
sub
adc
mov
int3
xor
dec
insb
lods
or
shlb
push
cmp
mov
pop
mov
leave
dec
lahf
call
ss
mov
filds
add
mov
mov
jecxz
in
int
cltd
mov
gs
adc
ljmp
push
lret
pop
clc
outsl
in
pop
or
test
out
test
jae
mov
adc
lahf
lea
jb
adc
mov
sub
inc
and
enter
lods
xchg
adc
lcall
xor
in
push
push
pusha
mov
jne
out
push
xchg
mov
inc
leave
cs
mov
es
stc
xor
lahf
gs
imul
mov
and
mov
xor
jo
or
fbld
cmp
comiss
shrl
call
test
flds
mov
mov
inc
call
sbbb
add
mov
test
dec
cmp
jl
or
aam
in
sub
aaa
pop
xchg
add
imul
scas
xor
push
xchg
push
out
loop
push
mov
mov
stos
outsl
sbb
jp
sti
int
rclb
sti
imull
fmul
roll
pop
adc
js
xchg
mov
fdivrs
sub
out
sub
push
fwait
xor
in
add
aas
dec
mov
lcall
mov
pushf
arpl
add
mov
movsb
xchg
jmp
mov
fiaddl
hlt
jne
pushf
test
repnz
mov
push
sti
push
lock
push
mov
aam
int
or
icebp
gs
call
or
adc
xor
sub
bound
xchg
xchg
mov
and
lods
and
dec
xchg
jns
inc
stc
popa
hlt
popa
push
out
xchg
and
mov
ds
xor
lods
cli
push
xlat
popf
mov
xlat
xchg
xchg
mov
xlat
clc
sub
in
daa
push
or
frndint
mov
stos
xchg
mov
xchg
mov
out
xor
mov
test
das
test
jno
cmpsl
add
je
jl
ljmp
jnp
outsl
cs
add
mov
data16
or
jne
movsb
mov
mov
mov
pop
enter
mov
fst
in
adc
je
das
cmp
push
inc
dec
mov
insb
xor
hlt
push
aad
mov
inc
pop
repnz
lcall
imul
popa
or
push
pop
xor
xor
adcb
dec
push
mov
add
sub
jl
stos
xor
mov
push
add
cmp
sbb
xor
into
jecxz
divl
dec
scas
add
fsubrs
pop
mov
jl
mov
jecxz
cwtl
orl
fisttpl
sbb
xchg
test
cmp
add
jmp
sbb
test
in
mov
loopne
pop
jo
jl
mov
insb
push
iret
fisubl
ret
add
lock
repz
xchg
lahf
cmp
test
sub
or
jbe
pop
xor
mov
out
mov
jmp
and
fistps
popa
mov
lea
adc
dec
add
jbe
xlat
fldl
mov
mov
imul
ljmp
xchg
mov
add
popf
xchg
pop
mov
dec
pop
popf
out
jg
mov
fs
dec
pusha
mov
or
add
dec
movsb
movsl
das
mov
adc
cmp
inc
push
push
fdivl
pop
stos
jbe
jnp
jecxz
push
xchg
dec
lret
das
pop
dec
pop
fimuls
lods
cmp
or
fisttpl
repz
xchg
xor
add
xchg
mov
not
fdivrs
jge
in
cmp
iret
mov
xor
cmp
in
fstpt
xor
cs
adc
jg
dec
add
cld
pop
fldl
dec
ficoml
pop
inc
sub
and
fs
adc
sub
or
mov
out
insl
sbbb
adc
add
jg
add
ss
bound
ja
sub
idivb
xchg
push
fsub
arpl
cmpsb
ljmp
ljmp
sahf
stc
adc
je
mull
addr16
mov
lock
pop
iret
mov
outsb
mov
out
cmp
test
push
jg
add
ja
mov
adc
clc
lahf
repnz
sbb
int3
push
pop
xchg
sub
jb
pop
lahf
cmp
sbb
aam
icebp
shll
jns
adc
int3
jo
aam
mov
or
dec
xor
xchg
hlt
sahf
mov
insl
test
pop
imul
jns
stc
xor
mov
aam
pushl
mov
imul
and
sub
inc
ret
lock
imul
jge
or
lret
dec
pushf
in
pop
cmc
inc
jae
and
push
add
test
jl
sbb
dec
insl
and
pushf
mov
cmp
nop
xchg
das
movsl
sub
pop
sub
sbb
sub
xchg
xchg
or
mulb
and
imul
mov
daa
dec
push
ss
jnp
loopne
push
rcrb
in
imul
xor
mov
xchg
repz
pop
mov
lods
shlb
in
or
xchg
int3
xchg
outsl
idivb
mov
in
add
aad
or
sub
int3
xchg
cmpsb
adc
mov
scas
fidivrs
mov
cmp
out
pop
ss
cli
pop
aad
and
bound
and
fcom
mov
mov
pop
mov
addl
mov
mov
xor
jne
and
icebp
jecxz
adc
cwtl
sti
sbb
arpl
pop
icebp
imul
sbb
hlt
out
xchg
jns
call
push
push
sahf
cwtl
push
loope
bound
pop
jecxz
int3
sbb
sub
add
fdivrp
push
and
mov
fmull
rclb
mov
pusha
into
mov
sub
lahf
test
xchg
imulb
shrb
clc
fmul
pusha
mov
fidivrs
dec
inc
mov
pop
jmp
dec
jbe
std
mov
lods
test
fs
jg
pop
pop
fstps
xlat
and
pop
inc
gs
out
xchg
mov
xchg
jle
sbb
shlb
and
cs
jb
cs
jl
dec
or
xorb
ss
rcl
add
sahf
or
call
jl
push
in
pop
adc
pop
out
out
cmpl
jnp
cmp
lret
and
adcl
jle
cmpsl
dec
fadds
ds
lahf
cwtl
mov
sbb
sub
inc
push
inc
xchg
inc
lret
outsb
add
repz
outsb
nop
sbb
cmp
cmp
mov
ja
xchg
xlat
out
dec
call
fildll
dec
pop
jecxz
xlat
and
lcall
pop
lods
push
lret
movsl
sahf
out
xchg
inc
pop
in
dec
movsl
imul
icebp
sbb
push
imul
sbb
and
aad
add
rep
or
xchg
cmp
mov
rcll
test
sbb
lods
push
into
adc
in
sarl
in
fiaddl
xchg
cmp
xor
xchg
std
add
stos
in
mov
mov
bound
and
or
adc
mov
mov
adc
inc
xor
push
mov
add
xor
or
mov
fldcw
dec
mov
mov
ud0
push
cmp
stc
fidivrs
mov
jae
or
out
out
push
fstpt
cmp
mov
es
cmp
sub
or
lock
es
rolb
jmp
scas
mov
fbstp
adc
pop
loop
dec
jmp
testl
and
push
dec
xor
add
cmpsb
sbb
cmp
cmpsb
dec
loopne
ret
push
push
adc
sbb
push
iret
lea
repnz
xor
lea
out
adc
sbb
sbb
xor
loopne
arpl
nop
daa
or
cwtl
or
mov
mov
rcrl
int
inc
mov
repz
cmpsl
or
cs
push
repnz
dec
and
and
push
inc
lods
jg
pop
jns
dec
mov
dec
insl
enter
rcll
add
sub
mov
leave
neg
sub
add
lea
sbb
adc
dec
inc
pop
cltd
sbb
imul
jb
jmp
and
xor
loopne
test
lods
iret
lret
sbb
iret
xor
dec
adc
addl
xlat
repnz
mov
mov
ret
popa
cmp
mov
iret
repz
loopne
notb
mov
js
jnp
lea
add
out
pusha
xchg
adcl
or
les
enter
xchg
arpl
mov
inc
push
cs
fnstsw
jbe
nop
imul
xchg
fwait
jl
test
in
js
sbb
push
sub
iret
ret
or
and
dec
in
mov
push
xor
aad
and
jecxz
es
stc
iret
add
pop
lock
push
xchg
ret
outsl
xchg
push
adc
xchg
int3
bound
cwtl
insl
cmp
push
cld
sub
adc
mov
sbb
cmp
dec
push
jl
add
out
xor
sub
adc
cltd
inc
push
jne
out
push
stos
pop
js
sti
mov
test
jbe
mov
rolb
fadd
mov
in
dec
out
cmp
fcoml
into
pop
xchg
jno
lea
mov
xor
pop
es
xchg
cmp
dec
mov
ljmp
mov
sub
mov
mov
xchg
out
fimuls
mov
addr16
push
adc
mov
xlat
fwait
leave
stos
adc
pusha
nop
data16
jle
icebp
clc
sub
dec
lret
pop
push
pop
mov
add
mov
out
dec
xchg
das
pusha
dec
pop
aad
out
lock
shll
pushf
push
ret
outsb
arpl
stos
lds
imul
mov
fsubl
xor
inc
cmp
cmp
fcmovne
scas
cwtl
mov
cmc
push
call
cmpsl
lods
gs
aas
pusha
mov
ljmp
jecxz
sti
sbb
ljmp
xor
or
rcll
hlt
sub
scas
and
mov
inc
mov
rorb
test
call
or
mov
aaa
add
insl
hlt
sub
leave
sub
roll
jns
ja
push
sub
addr16
xchg
je
sbbb
sbb
fucomi
lods
and
cmp
hlt
sub
jge
cmp
push
js
das
push
push
and
ds
fcoms
loopne
mov
js
test
adcb
insl
scas
sub
nop
sbb
sbb
sub
fists
shl
ljmp
out
push
lea
or
aaa
aam
or
lds
mov
xor
dec
cld
or
jb
pop
into
andb
push
pusha
mov
sub
inc
shl
int
cwtl
fst
dec
or
jb
loop
cmpb
jnp
mov
lock
push
mov
jns
ret
outsl
xor
and
adc
lods
mov
cmp
jp
lahf
lcall
movsl
iret
adc
push
lret
xchg
xchg
nop
xchg
xor
xor
or
inc
movsl
xchg
push
xlat
mov
les
jg
cmp
outsl
out
jns
dec
inc
push
or
loopne
mov
fiaddl
cmp
jl
lods
push
push
in
pusha
lods
call
andl
shll
mov
push
sub
in
sbb
xor
pop
bound
fs
add
push
xor
insl
sbb
clc
and
jmp
aaa
dec
jl
add
ret
aaa
or
dec
out
ret
nop
cmp
cmp
sub
mov
f2xm1
inc
push
mov
push
loope
test
mov
cs
mov
lret
bnd
js
inc
mov
jmp
mov
push
inc
xor
add
or
dec
jecxz
lahf
mov
sbb
pop
aaa
pop
test
pavgw
adc
inc
jne
loop
add
shrb
xchg
mov
pop
fdivrl
xchg
adc
sub
les
xlat
add
inc
adc
xlat
mov
test
test
xchg
jns
add
jg
lea
jns
and
insb
pop
fisttps
sub
mov
mov
xor
adc
ljmp
pusha
or
xor
inc
push
iret
mov
rolb
jo
adc
ja
sub
xchg
inc
mov
and
push
sbb
dec
pop
out
pusha
mov
mov
int
cmp
out
sub
cmp
mov
push
inc
add
inc
sub
out
jg
push
stc
inc
pop
push
sub
or
jecxz
adc
cmpsl
jbe
mov
test
ret
mov
or
out
sbb
pop
movsb
test
jb
sub
icebp
cmp
and
lret
daa
jp
loope
movsl
cmp
loope
mov
or
jle
movsb
cmpsl
mov
lcall
loop
scas
and
lcall
and
and
push
sub
mov
xchg
aaa
sahf
and
mov
add
dec
cmp
mov
pop
stos
add
push
pop
and
imul
jae
jmp
out
data16
xor
sbb
or
add
loopne
push
in
hlt
adc
push
into
sahf
out
in
outsb
cmp
jge
pop
sbb
lock
inc
andb
jp
dec
fwait
icebp
dec
sub
jge
loop
je
imul
fs
cmc
and
cmp
jae
jl,pt
scas
mov
shlb
hlt
mov
arpl
adc
cld
sub
stos
cmp
sti
lret
adc
ds
lea
push
inc
daa
pop
sbbb
cld
cvtps2pd
adc
sbb
push
sahf
pushf
and
cmp
rorl
jbe
fldt
sbb
lock
into
push
sarl
testl
cmp
lock
add
jo
and
loope
xchg
repz
xchg
mov
mov
cli
lret
add
mov
cmpsl
and
pop
xchg
rcrw
mov
dec
adc
ror
sub
ljmp
inc
mov
xlat
inc
jmp
test
out
shl
leave
adc
jae
add
imul
out
in
push
rclb
imul
jmp
mov
insb
fistpll
cmp
jns
clc
mov
xchg
arpl
fs
mov
adc
ja
repz
xor
sarl
adc
repnz
cmpsl
dec
outsb
scas
cmp
mov
add
fldcw
and
pop
and
rol
idivb
xchg
jp
lods
cmc
stos
cli
mov
jns
test
jno
mov
icebp
shrl
in
outsl
cmp
cld
cltd
gs
pop
inc
dec
or
xchg
dec
bound
or
add
rorl
out
insl
or
enter
mov
jo
mov
scas
pop
ss
int3
sub
mov
push
aas
int3
arpl
icebp
inc
and
ficomps
add
scas
shl
mov
sub
cltd
pusha
mov
fstpt
popa
mov
mov
push
loope
and
mov
lcall
sahf
cli
aaa
pop
inc
addr16
enter
or
out
adc
inc
icebp
jecxz
xor
push
mov
and
sti
jp
lods
mov
xchg
test
mov
sbb
cwtl
dec
mov
jno
and
xchg
add
adc
call
jne
sub
pand
push
fsubp
jb
das
xchg
add
xchg
nop
pop
lret
cli
bound
popf
jae
xchg
xchg
push
jle
or
and
movsb
sub
rcrl
lods
mov
push
pop
xor
lahf
mov
pop
xchg
sbb
add
shll
sub
sub
xchg
push
loope
jnp
icebp
and
mov
sbb
xor
mov
push
enter
call
dec
mov
xor
dec
inc
sbbb
shrb
inc
ret
push
and
push
int3
pop
sbb
xchg
sahf
loope
clc
push
jecxz
push
and
loopne
mov
adcb
out
lahf
mov
insb
mov
fisubrl
sbb
dec
imul
xchg
in
divl
push
aam
sub
mov
cmp
xchg
sub
or
sub
add
repnz
xchg
lods
sahf
mov
imul
lods
loop
enter
mull
pop
sbbl
bnd
les
mov
dec
rorb
jbe
fisttpll
jmp
xor
mov
aas
shl
add
inc
mov
lret
pop
xchg
push
pop
xchg
xchg
dec
psubusw
lahf
test
push
movsb
jg
movsl
xor
lret
and
dec
push
push
imul
add
inc
or
sub
pop
adc
and
push
add
cwtl
xchg
inc
pusha
mov
xchg
lock
jbe
adc
cs
test
loop
scas
or
movsl
jge
mov
mov
sbb
mov
bound
ficompl
push
enter
mov
cmp
mov
das
loopne
leave
inc
outsl
jle
pop
sub
cltd
les
sbb
dec
push
sbb
push
neg
xchg
jp
or
lock
sahf
add
das
fisttpll
xchg
dec
or
repnz
roll
cmp
xchg
jbe
loope
mov
nop
xor
pop
add
scas
push
sbb
cwtl
stos
xchg
push
pusha
jg
push
roll
pop
lods
adc
mov
mov
cmp
mov
xchg
sub
mov
inc
rcll
push
insl
sti
sub
cmp
mov
std
addr16
test
and
mov
and
jmp
sub
rcll
out
adc
js
mov
outsb
pop
cli
cs
inc
xchg
pop
ss
inc
xor
call
fmul
aad
jmp
call
loopne
out
bound
not
xchg
int3
call
sbb
xor
pushf
and
or
loop
inc
jmp
jp,pt
leave
js
test
ret
cld
jb
int3
jmp
outsl
pushf
jae
push
pop
js
jecxz
rcr
mov
popf
or
popf
xor
cmp
or
popa
cmp
das
movl
or
add
push
mov
add
sbb
repz
filds
sub
and
inc
shll
xchg
xchg
ja
mov
dec
ret
pop
into
sub
or
pop
push
movsl
jle
lods
pop
lock
stos
call
sbb
xchg
jo
orl
or
pop
shr
mov
xlat
adc
in
jo
fwait
push
repnz
cld
xchg
stos
lea
push
push
and
test
sbb
rorb
imul
daa
lret
xchg
rorb
les
insl
dec
cmp
push
add
dec
jl
mov
call
sbb
icebp
sub
adcl
paddsb
in
cmp
add
xchg
mov
add
loopne
inc
inc
push
loopne
popa
mov
xor
dec
sbb
push
rorb
es
aam
sbb
shrl
mov
dec
shrl
push
mov
outsb
aam
add
test
pushf
outsb
cmp
std
das
push
adc
cmc
bound
push
add
mov
or
xor
dec
cli
lods
insb
mov
paddsw
in
push
dec
pushf
sti
xchg
and
in
inc
dec
jbe
lds
hlt
xor
push
mov
mov
push
into
lahf
pop
xor
xor
inc
enter
mov
push
bound
dec
mov
lret
jecxz
stos
mov
xchg
lods
push
mov
jb
les
es
aaa
insl
insl
jne
and
xchg
pop
jne
dec
out
into
pop
push
adc
jmp
pop
fwait
inc
cli
lret
int
xchg
mov
and
push
in
sbb
idivb
daa
jmp
imul
cltd
adc
dec
xor
push
xchg
jno
or
stos
jbe
cmpsl
xchg
add
add
dec
cmp
neg
pop
lock
leave
push
lret
jmp
dec
shlb
aaa
adc
neg
and
mov
imul
daa
xchg
in
jns
xchg
mov
movsb
xorb
or
fs
enter
rorl
push
and
lock
scas
sti
mov
xchg
push
cmpsb
mov
cmpb
xor
dec
xchg
mulb
push
test
xor
pop
test
dec
mov
and
mov
sbb
sbb
dec
aam
sub
mov
jb
aas
push
cmp
mov
shll
sbb
out
push
out
lret
lods
sub
pop
push
sub
push
out
cmp
addr16
and
int
xlat
in
movsl
lds
insl
push
popf
mov
lock
mov
and
add
xor
mov
fs
push
push
scas
data16
int
out
in
movsb
js
dec
aas
scas
lods
inc
lds
test
hlt
or
leave
mov
shlb
stos
ja
lret
dec
inc
add
sbb
lock
cwtl
add
mov
ja
and
push
mov
jno
jmp
xchg
dec
sub
cwtl
mov
jp
test
add
mov
testl
pop
jo
icebp
inc
mov
scas
push
std
iret
cli
pop
insl
jl
adc
adc
push
aas
out
mov
lret
sub
adc
fdiv
xchg
cmp
test
pop
add
mov
pop
inc
stos
adc
jg
fbld
push
enter
add
movlps
sbb
sub
dec
add
mov
sub
mov
jne
test
mov
dec
push
mov
js
mov
xchg
pusha
inc
dec
fisttpll
ljmp
xchg
xor
add
sbb
sub
xor
popf
loope
sub
sarl
push
jge
mov
scas
mov
sbb
fstpt
in
mov
jb
fldt
adc
mov
pop
adc
add
pop
jp
rcrl
mov
sbb
imul
mov
mov
add
lods
stos
outsl
jbe
js
mov
icebp
popl
dec
or
pop
sbb
inc
int
rorl
addr16
mov
dec
cmpsb
daa
call
xor
fwait
jp
sub
lock
sub
shll
fcmovu
bound
nop
dec
cli
adc
pop
mov
popa
call
adc
adc
push
std
jp
cmp
std
into
mulb
ljmp
or
lret
subb
inc
sahf
je
pop
orl
sub
push
mov
adc
cmp
jl
js
jb
cmp
cmp
addl
mov
push
in
dec
xor
stos
into
aam
imul
ret
shl
gs
mov
lods
add
push
js
xor
cmc
clc
leave
gs
jbe
scas
int3
xchg
xor
xor
cmp
pop
pop
sbb
push
or
xchg
mov
xor
mov
pop
lds
lahf
jecxz
adc
aad
fstl
mov
dec
popf
cmp
pop
lds
inc
mov
ret
jge
dec
loope
cmpsl
pop
clc
adc
lret
fnstenv
icebp
mov
aas
call
sub
mov
addl
ds
das
sarb
scas
jmp
test
stos
sub
and
cmp
mov
shlb
push
pop
add
nop
lds
jne
mov
scas
jae
add
mov
jmp
insb
jge
push
mov
sbb
jle
daa
sub
mov
pop
inc
xchg
repnz
xchg
or
mov
jns
int3
pop
mov
sarb
sbb
scas
and
hlt
xchg
subb
imul
sbb
mov
loop
fistl
adc
mov
pop
scas
or
mov
mov
push
mov
push
out
jle
stos
rcl
xchg
popa
sbb
out
lret
orl
xchg
inc
lcall
sbb
bound
jo
test
outsl
and
imul
sub
add
call
push
imul
xchg
mov
out
test
or
sbb
push
dec
pop
repnz
cmp
push
repnz
xchg
stc
cwtl
mov
mov
je
sub
out
pop
xchg
fcomi
loope
icebp
sub
js
cmpsl
add
outsl
or
arpl
int3
in
mov
cmp
lea
bound
jnp
jb
push
inc
pop
and
push
lods
ss
and
jle
mov
lods
cmc
dec
add
lods
fsubrs
mov
int3
dec
jecxz
sti
mov
leave
dec
outsb
adc
iret
mov
fstps
pop
out
dec
in
fadds
xchg
inc
add
popf
push
mov
rorl
and
fsubl
xchg
xchg
xor
xor
ljmp
js
cmp
cmpsb
push
and
arpl
ret
pop
xchg
xor
in
scas
mov
negl
pop
adc
mov
jl
xchg
or
sbb
pop
push
popa
lds
add
sarb
movsb
mov
adc
ret
inc
mov
xchg
push
loopne
cmp
es
ret
sbb
lcall
cmc
dec
lock
mov
jg
and
mov
inc
fcmovu
lods
out
jmp
addb
or
dec
mov
inc
aam
mov
pop
cmp
mov
sarl
fistps
loope
lcall
iret
outsb
mov
mov
into
repz
push
push
test
fcoml
sub
dec
stc
icebp
xchg
loopne
loope
es
fcomps
and
sbb
cmpsb
lret
out
out
cmpsb
ljmp
pop
cltd
push
sbb
jae
repz
and
sahf
hlt
mov
dec
movsl
insb
jp
xchg
mov
mov
dec
int3
add
mov
pop
sub
popa
push
imul
or
xchg
add
push
icebp
or
call
cmp
out
leave
jo
mov
es
outsl
lcall
arpl
cmp
inc
insb
pop
mov
cmp
mov
add
jae
push
fnsave
pop
mov
sub
aas
pop
dec
push
or
cmp
outsb
mov
int3
jne
jl
into
and
mov
ds
repz
mov
mov
cmp
shlb
sbb
xchg
scas
out
popf
enter
icebp
xchg
sbb
sbb
push
out
jo
fistps
mov
fwait
ds
out
mov
jno
lea
rolb
loopne
cwtl
in
sbb
gs
xchg
fldenv
outsb
std
in
icebp
xchg
push
pop
adc
mov
lcall
xchg
cmp
test
inc
mov
pop
frstor
mov
int
adc
and
andl
ja
shlb
jle
popa
jg
or
push
ja
movsb
arpl
add
lods
dec
fstl
pop
orb
adc
test
das
stc
out
mov
sub
inc
xchg
and
mov
jle
mov
sbb
jge
jmp
xchg
and
ljmp
mov
pop
mov
popa
xlat
xlat
fwait
cli
scas
mov
pop
mov
dec
loop
pusha
lea
out
movsb
pop
shl
inc
je
mov
es
jb
cmpsl
adc
add
ss
cmpl
or
pushf
cmpsl
subl
setg
pop
dec
dec
mov
jmp
addr16
lret
inc
jle
or
or
push
pop
je
subb
movsb
pop
jg
negb
sub
jno
or
out
push
or
jbe
test
in
pop
mov
mov
push
xor
push
repnz
divl
push
cld
xchg
leave
add
loop
stos
loopne
push
les
xor
inc
outsl
push
popa
js
push
inc
inc
rclb
jae
sbb
popf
push
xchg
mov
shlb
pop
xchg
jo
mov
sahf
push
pusha
movsb
mov
and
cmp
leave
ror
push
pop
pop
cs
lds
loope
adc
jecxz
mov
loop
fidivrs
mov
mov
dec
daa
fiadds
mov
sub
fnstenv
lcall
push
insl
imul
fstpl
jmp
adc
xor
xor
scas
outsb
sbb
les
loope
mov
rclb
lret
mov
icebp
repz
cmp
test
xor
mov
inc
iret
rcrl
adc
xchg
and
dec
leave
repnz
push
pop
adc
cmc
popf
orb
lahf
mov
fwait
sub
and
jbe
inc
sbb
jg
xor
and
movsl
push
scas
loope
mov
adc
sbb
leave
adc
mov
ljmp
cld
icebp
dec
pop
cmp
sarl
dec
push
fs
inc
sbb
xor
jmp
jb
fbld
mov
loop
sub
aas
int
xor
add
lea
and
lahf
jae
iret
ret
push
mov
fisubl
in
cmp
out
sub
cmc
add
mov
xchg
stos
aas
xor
adc
mov
cmp
stos
into
adc
cmp
scas
xchg
iret
dec
lods
xchg
inc
push
fbstp
mov
cmp
in
mov
out
mov
jnp
js
adc
pushl
cmp
pop
ss
push
jbe
ljmp
and
fldcw
ret
fwait
js
arpl
sub
or
xor
and
cltd
ss
out
fidivs
into
inc
fstl
jge
pop
hlt
cmp
fnsave
clc
aas
cmc
int
js
push
xchg
in
mov
fldt
cltd
jno
cwtl
adc
xlat
ret
lods
mov
test
add
mov
sti
xlat
inc
xchg
data16
clc
jecxz
or
bound
pop
jmp
cwtl
lahf
jge
cmc
sbb
into
jecxz
hlt
mov
push
addb
pop
aam
into
or
push
jns
push
jl
cmpl
repnz
lea
push
outsb
inc
dec
jbe
mov
lods
pusha
cmp
in
lods
cmp
mov
jnp
sbb
pop
je
mov
stc
lret
insb
imulb
pop
or
jno
adc
sbb
adc
inc
lret
shl
pop
out
xchg
and
repnz
fsubl
aaa
shlb
dec
mov
rolb
mov
scas
xchg
js
test
fdivrs
pop
dec
and
fwait
shll
push
jns
out
sti
mov
dec
mov
jecxz
int3
icebp
push
pop
sti
insl
pop
pop
push
fsubp
scas
push
jl
xchg
fists
adc
adc
imul
pop
insl
inc
pop
in
jmp
pop
jle
add
ss
cmc
or
jp
jmp
pop
test
imul
pop
jge
and
jmp
cwtl
nop
das
pop
addr16
sub
push
shll
cmp
outsl
shll
repz
xor
sbb
test
frstor
push
jb
out
jbe
or
test
lods
cmp
mov
jmp
jmp
test
and
push
outsb
inc
xchg
pushf
fldt
xor
fwait
icebp
jnp
pusha
mov
out
shrl
gs
adc
cs
aam
imul
mov
imul
inc
xchg
cmp
push
jl
pop
xchg
insb
dec
xchg
sti
mov
inc
jmp
pusha
mov
std
jge
out
fcmovne
and
sub
pop
clc
jp
xchg
push
and
xchg
jl
popa
outsb
scas
jbe
or
mov
mov
ss
inc
push
lods
popa
sarl
enter
sbb
pop
outsl
adc
test
jg
jno
mov
mov
pushf
sub
xor
scas
and
adc
test
das
push
push
out
sahf
lock
add
int3
pop
inc
mov
sub
sub
and
mov
filds
sarb
sub
cmp
lds
mov
or
loopne
out
cmp
dec
pop
sbb
cmp
dec
std
jb
inc
shll
mov
ss
mov
xor
sbb
push
int3
dec
xorb
pmulhuw
pop
push
sbb
lcall
