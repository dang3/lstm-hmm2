push
mov
sub
push
mov
push
test
je
mov
test
je
cmpl
je
mov
test
je
push
lea
push
lea
push
push
call
mov
add
push
pop
lea
add
call
mov
test
je
mov
sub
mov
mov
inc
dec
jne
pushl
mov
pushl
pushl
pushl
pushl
call
mov
mov
mov
call
mov
add
push
pushl
pushl
push
call
add
pop
jmp
xor
pop
pop
leave
ret
jmp
push
mov
push
push
mov
imul
push
mov
cmp
jb
mov
push
call
mov
add
imul
push
xor
pop
div
mov
mov
mov
mov
sub
mov
test
je
mov
sub
push
mov
call
xor
divl
mov
add
cmp
jae
mov
mov
imul
xor
divl
xor
mov
sub
imul
div
mov
cmp
jae
mov
sub
push
pushl
pushl
call
add
add
add
add
cmpl
jne
pop
pop
pop
leave
ret
push
mov
mov
push
call
pop
cmp
jne
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
mov
jmp
mov
pop
ret
mov
push
xor
cmp
je
cmp
push
mov
je
push
call
jmp
push
push
push
pushl
call
push
push
push
pushl
call
push
push
push
pushl
call
pop
pop
ret
mov
mov
mov
rol
imul
add
mov
ret
push
mov
sub
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
jne
inc
jmp
andl
push
push
lea
lea
cmpl
mov
je
mov
jmp
mov
mov
add
xor
nop
movb
mov
mov
inc
cmp
jb
mov
test
je
lea
movsbw
mov
add
inc
mov
test
jne
lea
push
call
mov
test
je
mov
add
andl
cmpl
je
mov
mov
mov
test
jns
and
jmp
add
add
push
pushl
call
mov
test
je
incl
mov
lea
cmpl
jne
mov
incl
mov
imul
add
lea
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
push
mov
sub
mov
push
push
push
push
mov
movl
call
andl
movl
mov
movl
mov
mov
movl
mov
mov
mov
mov
mov
imul
xor
add
incl
mov
xor
push
push
push
mov
call
mov
mov
mov
mov
mov
xor
mov
div
mov
mov
mov
mov
sub
not
add
xor
mov
mov
incl
add
cmpl
jb
cmpl
je
mov
mov
jmp
push
call
mov
mov
mov
xor
push
push
push
push
call
movl
mov
push
shl
push
add
incl
push
push
call
mov
mov
test
je
push
call
mov
push
push
call
mov
call
add
cmpl
je
cmpl
jne
lea
push
push
pop
add
xor
div
push
pushl
push
call
mov
push
push
push
push
call
mov
lea
add
lea
add
mov
lea
mov
mov
mov
and
call
mov
mov
mov
call
mov
mov
push
push
mov
xor
push
push
mov
mov
call
mov
lea
push
push
push
lea
push
pushl
movb
pushl
movb
push
call
push
push
push
call
mov
call
mov
call
test
je
pushl
mov
pushl
pushl
pushl
call
cmpl
mov
jne
push
call
test
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
push
lea
sub
mov
push
push
push
push
push
push
mov
call
push
push
call
test
je
push
xor
push
call
push
mov
call
mov
cmp
je
lea
push
push
call
mov
mov
mov
mov
push
push
mov
call
cmp
jne
movl
push
push
call
push
push
mov
call
xor
cmp
setl
mov
mov
cmp
mov
je
mov
cltd
sub
sar
mov
push
push
call
mov
neg
sbb
and
add
push
mov
call
push
mov
call
movzwl
push
call
pop
pop
push
push
push
call
push
push
push
call
push
push
lea
push
call
lea
push
call
mov
mov
mov
movzwl
xor
jmp
cmp
jne
cmpw
je
inc
inc
mov
cmp
jne
jmp
xor
inc
lea
push
movl
movl
call
mov
push
pushl
call
push
push
push
push
push
pushl
mov
call
cmp
mov
mov
jne
xor
push
pop
lea
rep
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
movl
movl
movl
mov
movl
movl
call
test
je
mov
push
mov
imul
cltd
pop
idiv
push
push
mov
mov
add
mov
lea
mov
mov
shl
mov
lea
push
call
mov
mov
sub
sub
mov
cmp
mov
mov
jle
mov
push
pushl
neg
push
push
pushl
sbb
push
push
push
and
add
push
push
push
push
call
cmp
mov
je
lea
push
call
push
push
push
pushl
call
test
jne
call
xor
jmp
call
pushl
call
pushl
pushl
call
pushl
call
push
pushl
call
mov
xor
cmp
sete
push
call
cmp
je
call
cmpl
je
cmpl
je
push
push
push
pushl
call
xor
inc
pop
pop
pop
add
leave
ret
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
test
je
andl
mov
sub
add
mov
mov
mov
lea
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
cmpl
mov
je
or
sub
mov
mov
sub
add
mov
mov
mov
lea
push
push
push
call
mov
mov
mov
sub
add
mov
movzwl
add
lea
movzwl
lea
mov
mov
mov
andl
xor
cmp
jae
lea
mov
mov
addl
push
lea
pop
rep
mov
add
movzwl
add
incl
cmp
jb
mov
mov
add
pop
mov
xor
pop
inc
pop
leave
ret
push
call
pop
ret
mov
mov
ret
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
mov
push
mov
push
mov
xor
mov
test
movl
je
push
call
pushl
call
mov
xor
inc
pop
pop
ret
mov
push
mov
sub
mov
push
push
push
mov
mov
mov
push
mov
lea
push
pushl
pushl
call
lea
xor
test
je
push
push
push
call
add
test
je
push
add
push
call
inc
pop
add
cmp
pop
mov
jl
mov
mov
pop
pop
mov
pop
call
leave
ret
mov
push
mov
push
mov
test
je
push
mov
test
je
andl
push
call
push
call
push
call
test
je
push
call
push
call
mov
push
call
push
call
pop
pop
pop
ret
push
mov
testl
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
pop
ret
mov
push
mov
xor
cmp
jne
mov
jmp
mov
push
mov
mov
test
je
mov
inc
inc
decl
jne
cmpl
pop
jne
dec
mov
movb
pop
ret
push
mov
push
push
push
mov
mov
mov
mov
cmp
jb
andl
add
je
push
push
pop
sub
mov
imul
mov
mov
lea
ror
lea
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
inc
cmp
jb
pop
pop
pop
leave
ret
mov
push
mov
sub
mov
push
mov
push
push
lea
mov
call
lea
xor
call
test
je
test
je
cmpb
je
mov
push
call
mov
push
mov
call
mov
lea
push
call
mov
test
je
push
push
push
push
call
add
push
call
test
je
push
push
push
call
mov
test
jge
push
push
push
call
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
call
mov
mov
pop
pop
pop
call
leave
ret
push
mov
sub
mov
mov
mov
sub
mov
je
mov
test
je
push
mov
add
test
je
push
push
mov
sub
mov
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
addl
decl
jne
mov
test
jne
pop
pop
pop
xor
inc
leave
ret
add
es
pushf
dec
shr
jo
mov
dec
and
gs
dec
sub
psrlw
addb
js
sub
sub
or
insb
or
inc
int
movsl
shr
or
scas
dec
repz
mov
adc
xchg
mov
popa
repnz
loope
sbb
clc
or
lcall
clc
or
push
data16
nop
daa
mov
xor
cmp
xchg
jae
int
xor
sbb
gs
mov
mov
add
icebp
arpl
xchg
out
dec
into
jae
mov
sub
enter
xor
repnz
jnp
jno
clts
sub
mov
jns
lods
sub
outsb
mov
fisubl
pop
jnp
add
pop
repnz
clc
pop
xor
xor
imul
psrad
jne
add
mov
rcrl
ss
mov
arpl
cmp
inc
pop
loope
add
mov
lret
pop
or
sarb
inc
arpl
sub
testl
dec
pop
lret
pushf
xor
inc
push
push
imul
add
lds
add
xlat
insl
ret
lcall
pop
mov
jnp
dec
repnz
sbb
xchg
fildl
xchg
mov
daa
int
mov
jge
jbe
push
in
sbb
lods
cli
sbb
ljmp
mov
movsl
or
push
add
out
mov
arpl
push
pop
pop
punpcklbw
add
mov
push
mov
pushf
outsl
xchg
in
cmp
rcr
test
pop
xor
push
xor
shrb
pop
dec
push
aad
adc
jle
ds
jmp
loope
cmp
cld
xchg
gs
add
mov
inc
fistps
stos
and
adc
fsubs
push
dec
cld
cltd
jns
mov
pop
inc
lret
sub
mov
sbb
aaa
jp
adc
or
stos
cmpsb
movsb
mov
sbb
inc
inc
jle
xor
aad
jns
outsb
adc
push
shrb
jle
jecxz
jg
in
sub
ss
cltd
sbb
push
idiv
adc
stc
loop
pushf
outsl
and
and
and
cmpsb
jmp
mov
inc
and
pop
push
loope
add
add
xlat
mov
mov
stos
sbb
mov
pop
adc
call
es
dec
mov
push
jmp
xchg
xlat
aaa
cmp
repnz
pop
leave
ds
decb
iret
and
cli
and
pop
xchg
out
mov
fcoms
add
test
inc
mov
insl
mov
add
add
adc
or
inc
jnp
aaa
inc
enter
or
push
jmp
dec
scas
and
shrb
in
fdivs
outsl
dec
mov
cld
jg
push
xchg
and
imul
sbb
jae
fmuls
lock
sbb
cmp
sub
and
repz
stc
xlat
cmpsb
or
ss
mov
add
out
sub
cmpsb
pop
mov
add
shl
loop
outsb
push
inc
push
gs
in
jg
in
insb
adc
mov
pop
loop
mov
sbb
or
mov
mov
fs
cmp
cmc
enter
push
enter
inc
adc
fwait
aad
out
shl
insb
push
xchg
shlb
pop
ret
jnp
lret
jae
add
pop
pop
loope
rcrl
add
popa
movsb
add
inc
ljmp
mov
scas
add
leave
cwtl
stos
push
sub
add
jns
mov
jmp
xchg
stos
pop
pusha
data16
add
fs
add
push
insb
mov
gs
sub
xor
mov
movsl
mov
mov
and
repz
arpl
lcall
xor
cmp
inc
in
inc
jg
loopne
mov
lods
lahf
push
xchg
jge
jo
mov
cmp
add
pop
inc
xchg
add
leave
jo
mov
add
inc
fwait
loope
jp
clc
clc
inc
cmc
imul
and
push
cmc
call
and
jbe
jp
repz
int3
scas
jmp
xor
or
pushf
dec
inc
push
mov
mov
mov
call
lcall
sbb
xor
jb
and
daa
je
inc
sbb
push
sub
sub
push
inc
add
inc
mov
ret
lds
mov
leave
aas
fwait
or
lcall
mov
movl
xor
loope
xchg
jno
inc
jne
fists
scas
out
fwait
pop
pop
sub
xchg
subb
adc
mov
mov
or
or
out
addr16
add
rorb
mov
in
in
repz
adc
mov
sbb
push
es
jb
sub
into
stc
inc
add
ja
mov
lea
xchg
mov
xchg
add
sub
or
inc
rol
loopw
jp
sub
scas
ret
ljmp
mov
and
stos
lea
pop
mov
xchg
cmc
test
outsl
mov
fcmovu
add
mov
xor
and
jle
jg
xchg
cmp
adc
push
jmp
push
in
xor
pop
jns
jo
sub
insl
shlb
ss
push
and
cwtl
ds
inc
faddl
or
in
jmp
icebp
cmpb
cli
dec
push
sbb
and
sti
and
push
pushf
xor
clc
cmp
popf
imul
cmp
add
push
mov
repz
pop
xlat
test
lods
push
push
call
cwtl
insb
ljmp
add
push
jbe
push
xchg
xor
pusha
or
jmp
hlt
gs
and
inc
out
out
idivl
and
scas
movsb
pop
mov
cli
out
clc
cmp
lods
adc
inc
gs
mov
or
sbbl
mov
add
ret
cmpsb
mov
cmc
mov
sub
mov
loope
scas
push
pop
out
pop
xchg
or
push
addr16
mov
in
ds
lods
sub
sarl
addr16
push
loope
pop
mov
inc
xchg
cld
inc
test
mov
jg
roll
ja
pop
push
or
sbb
cmp
cmp
loop
shlb
leave
orps
dec
inc
add
add
dec
testb
aad
scas
jp
in
bound
jno
inc
jmp
iret
inc
sub
fcmovnb
fisubrl
jl
push
test
nop
adc
xor
mov
mov
mov
push
pop
jnp
sbb
test
mov
cmp
aaa
in
mov
in
mov
neg
sarl
mov
sahf
mov
aad
jmpw
imul
in
inc
pop
cmpb
rolb
add
push
mov
clc
sub
clc
sti
mov
flds
mov
scas
test
adc
dec
dec
arpl
adc
lret
jg
or
and
sbb
fstps
mov
add
shlb
gs
push
pop
mov
inc
test
lcall
mov
test
movl
into
adc
pop
in
addr16
xchg
shll
inc
int3
fildl
jmp
mov
cmp
cmp
movsb
pop
dec
adc
adc
test
or
push
leave
inc
adc
addr16
sbb
out
add
jno
push
and
inc
les
into
fistps
adc
fadds
rcr
dec
pop
out
add
push
pop
sbbb
pop
faddp
adc
cmp
ja
inc
lret
push
jae
add
pop
xlat
gs
pushf
leave
mov
adc
cld
cwtl
iret
out
fadds
jmp
jle
or
sahf
sub
xchg
mov
pop
inc
mov
or
and
insb
mov
cmp
sbb
xlat
rcrl
pop
mov
push
dec
dec
add
loop
sti
jne
cmp
or
das
test
push
mov
xor
jo
push
sahf
cmpsl
aad
repnz
or
mov
xor
cmp
jmp
mov
add
outsb
dec
ret
adc
ret
push
jae
jmp
ret
push
clc
call
in
lods
stos
xchg
cs
inc
xor
rorl
fnstsw
stc
ja
lods
bound
inc
cmp
sub
mov
fs
and
and
outsb
loope
imul
sbb
rclb
std
mov
movsl
xor
jo
mov
pop
loopne
inc
jo
pop
gs
in
push
movsb
in
jge
clc
dec
mov
mov
sbb
cmp
sti
jecxz
add
sbb
inc
rcrb
add
add
mov
inc
cmpsl
sub
mov
cmp
or
lock
aas
test
jo
and
jecxz
or
movsl
outsl
movsb
mov
cmc
push
popa
xor
arpl
cmp
xlat
mov
add
fdivs
mov
addb
sbb
xor
and
into
add
jge
cmp
mov
jne
adc
push
sti
fisubrs
cld
dec
in
dec
inc
or
dec
pop
cmp
or
dec
xchg
ljmp
xlat
pop
pop
push
mov
jb
mov
aas
imul
outsb
and
lret
ljmp
or
test
rcrb
or
in
xor
jecxz
aam
add
add
mov
jmp
push
cvtps2pi
mov
mov
mov
in
and
pop
mov
dec
inc
test
int3
and
cmp
test
xchg
xlat
out
sub
loopne
pop
imul
xchg
xor
mov
jecxz
mov
push
fsubrl
fistpll
pop
or
pop
push
nop
jne
add
inc
cmpsl
pop
xchg
mov
and
cmc
mov
addl
add
add
xchg
xchg
shl
mov
dec
mov
adc
in
xor
xchg
fsubrs
mov
xchg
int
fcoml
sarb
scas
sub
pop
cmpsl
clc
sahf
mov
dec
or
adc
add
xor
pop
dec
push
xchg
inc
jmp
xor
movsb
cli
push
hlt
rcr
shl
mov
sahf
stc
cmpsb
pop
xchg
jg
inc
mov
orb
add
imul
adc
lret
cmp
jns
rclb
js,pn
je
mov
out
fildll
inc
or
test
popf
decl
int3
inc
fwait
sbb
testl
jp
in
adc
out
push
cwtl
jb
ret
insb
add
jle
mov
jae
pop
dec
lock
mov
js
movb
loopne
inc
adc
add
fdivr
mov
xchg
and
add
xchg
lret
cmp
out
xlat
pop
sub
sub
scas
inc
push
adc
xchg
mov
js
cwtl
jle
sbb
stos
pop
sub
adc
mov
xchg
sub
idivb
inc
std
les
addr16
xchg
mov
mov
shl
cmp
pop
or
push
mov
test
and
not
push
sub
or
fdivrs
add
push
mov
out
sbb
pop
mov
jge
mov
in
sbb
out
mov
loop
pop
dec
xchg
out
pop
or
in
and
sahf
and
fcompl
out
push
loop
jecxz
xchg
lock
subb
mov
sbb
ljmp
pop
decb
cmp
or
adc
loop
push
or
push
rcll
push
into
jno
xchg
popf
or
sbb
stc
int
lds
lods
nop
mov
dec
movsl
pop
mov
xlat
lahf
sub
mov
push
nop
sbb
mov
sub
or
imul
and
sbb
jecxz
mov
arpl
add
clc
jg
xchg
push
into
lods
mov
mov
xchg
mov
mov
jnp
mov
fsubs
lea
add
add
addr16
or
js
enter
xor
xchg
lret
aas
mov
sti
or
cli
xchg
icebp
clc
sbb
sbb
push
mov
rclb
xor
lods
out
and
cmpsb
or
icebp
adc
fwait
adc
stos
gs
dec
mov
std
ja
outsl
and
imul
pop
into
mov
leave
xchg
xchg
add
negl
mov
add
add
adcl
push
es
mov
loopne
cltd
or
jmp
xor
cmp
push
mov
leave
aas
xchg
ret
lret
ljmp
dec
mov
daa
les
xor
pop
jl
lea
adc
inc
out
leave
sbb
mov
add
subl
sbb
lret
and
dec
dec
rorb
lods
add
insl
cs
mov
aad
cli
subl
add
sub
or
jmp
or
mov
ljmp
push
fistpl
in
call
xor
daa
cltd
jl
sbb
testb
and
aam
mov
mov
jmp
cmpb
push
dec
pop
inc
dec
inc
mov
insb
or
dec
xchg
mov
pop
cmp
cmpsl
mov
popa
aaa
xor
pusha
and
cmp
in
or
add
add
cmp
or
or
addr16
test
pop
sahf
jbe
leave
lret
gs
out
pushf
lea
aas
xlat
and
push
or
out
test
cmp
push
mov
enter
cmpl
add
lcall
cmp
fwait
xchg
dec
or
add
xchg
data16
cmpsl
dec
inc
jno
add
repnz
lods
cmp
lea
inc
fwait
cmp
popf
stos
jl
dec
or
add
push
adc
cmp
mov
call
ss
ss
sub
xor
cmp
out
loope
jp
movsl
pop
sub
in
jnp
nop
mov
jno
clc
in
mov
cmpsb
or
iret
pusha
or
xchg
xchg
fdivrl
movb
mov
movsl
leave
out
and
loop
adc
sbb
aaa
add
push
int3
cmp
pop
fisubs
mov
cmpb
mov
add
add
jno
add
fnstsw
xor
inc
outsl
movsb
pop
xchg
sti
icebp
movsl
movsl
cmp
jmp
pop
js
fld
incb
jnp
ret
das
push
lea
popf
into
sbb
push
into
ficoml
xchg
mov
outsb
xchg
imul
mov
mov
push
mov
lods
dec
cmp
mov
cs
aam
push
xor
xor
cmc
loopne
push
cld
in
mov
enter
clc
mov
movsl
dec
push
adc
inc
cmp
lcall
in
dec
mov
cmp
xchg
enter
fs
outsb
xchg
jnp
and
hlt
mov
sub
lods
mov
jbe
inc
scas
jb
dec
imul
insb
inc
lds
lock
xchg
jmp
nop
jp
xchg
loope
std
push
mov
dec
ja
add
fdivrl
stos
ljmp
fucomp
adc
inc
inc
gs
xchg
xchg
cltd
mov
xchg
push
pop
imul
fs
mov
cmp
xor
addr16
or
bswap
mov
shrl
ret
dec
mov
sub
fwait
test
sahf
mov
and
popf
leave
mov
fcoms
mov
add
add
add
mov
or
ljmp
fiaddl
push
fdivrl
mov
addb
repnz
cmpl
inc
sbb
xor
leave
mov
and
push
in
mov
mov
inc
xlat
jg
jns
adc
mov
push
jbe
pushf
sub
mov
fsts
adc
sub
loope
fcomps
and
je
or
add
add
js
inc
sahf
enter
jl
scas
rclb
adc
pop
mov
das
je
jp
mov
popa
pop
mov
xor
jno
sbb
popa
mov
fs
cld
mov
jl
or
dec
mov
jle
jbe
fidivrl
sbb
fisttpl
push
mov
cmpsl
ss
jle
xchg
daa
fmul
mov
cltd
cmp
sbb
adc
lods
cmp
add
add
pop
push
das
inc
inc
adc
pop
ljmp
cltd
sbb
jo
repz
aaa
imul
std
int3
mov
loopne
add
mov
mov
fildll
aaa
shrb
mov
mov
mov
sbb
leave
ljmp
mov
mov
add
dec
arpl
clc
or
xor
test
dec
adc
or
bound
mov
add
add
imul
addr16
mov
adc
pop
pop
push
xorl
add
push
sbb
sub
or
aad
add
pop
mov
lods
dec
das
xor
fistpll
push
sbb
js
or
pop
fnstcw
cmpl
es
mov
rolb
aad
add
aaa
lds
shrb
cs
dec
aaa
jle
sbb
lods
push
add
add
shrb
jb
or
scas
ds
movsl
jecxz
sti
mov
fs
mov
stos
dec
dec
movsl
add
xor
cmp
data16
bound
jp
mov
std
mov
mov
inc
dec
sbb
sub
cmpsl
fs
jo
pop
clc
push
add
data16
adc
mov
pusha
jb
movb
cwtl
ficompl
cmp
and
adc
out
movntq
add
add
add
xchg
ss
mov
pop
sbb
aaa
loop
mov
test
lea
and
push
xor
sub
mov
clc
mov
adc
data16
push
bound
lea
jnp
pop
rorl
pusha
and
push
ljmp
mov
mov
fstps
add
inc
add
xor
addr16
xlat
das
mov
in
mov
push
mov
mov
inc
xchg
add
push
outsl
shll
pop
test
call
xor
aas
xchg
add
dec
adc
addr16
test
cmpsb
dec
adc
jmp
test
add
push
cmp
fistpll
ret
fildll
mov
xor
inc
ja
into
xchg
bound
jmp
add
fwait
jmp
lods
jecxz
inc
and
sbb
es
push
add
adc
push
inc
test
push
xor
call
pop
les
fbld
pop
mov
xor
dec
jle
pop
cmp
pop
aad
decl
sbb
enter
inc
inc
shl
mov
xor
cmp
scas
punpckhbw
lds
mov
icebp
movups
sub
dec
adc
lcall
popa
incb
pop
sbb
sti
pop
mov
ljmp
mov
lods
jo
pop
jl
in
dec
pop
jmp
dec
and
jne
pusha
or
jb
mov
in
inc
frstor
lahf
cli
test
std
mov
jl
fstpt
cmp
mov
or
push
cmpsb
mov
mov
insl
adc
sbb
popa
mov
mov
cmpsb
sti
jp
push
xor
push
jne
xchg
lock
cli
lret
cmpsb
pop
sbb
nop
xor
and
in
adc
fistpll
dec
scas
mov
jno
cwtl
lea
ret
adc
cli
jbe
out
xchg
loopne
sbbb
ret
stos
loope
loope
dec
add
mov
dec
orb
testl
or
push
dec
les
cltd
orb
mov
dec
cli
mov
add
je
cmp
orl
shlb
mov
xchg
xchg
mov
and
xor
bound
pushf
inc
sbb
mov
jbe
mov
push
jg
cltd
adc
push
push
test
pop
dec
out
icebp
mov
xchg
fwait
mov
cmc
adc
pop
mov
or
aaa
aas
in
lock
jl
dec
test
data16
mov
xchg
cmp
imul
add
pop
lods
dec
cmp
popa
stc
fdivrl
sub
into
and
mov
mov
clc
cmpsl
and
mov
mov
scas
and
adc
test
lds
adc
xor
repnz
sub
arpl
inc
cmp
shlb
jae
push
int
inc
xchg
adc
push
aaa
jl
mov
add
and
jecxz
pop
lods
mov
fistps
pop
pop
adc
shrl
or
mov
dec
cwtl
pop
bound
jnp
push
mov
mov
arpl
hlt
loopne
push
imul
push
hlt
mov
jecxz
ds
or
fnsave
ret
sbb
pop
pop
add
fcompl
push
rorb
mov
cltd
arpl
mov
add
pop
repnz
lods
fdivrl
add
jne
fsubl
sub
sub
pop
sub
xor
add
add
dec
xchg
xchg
cmc
sbb
cmp
jne
fldl
and
mov
mov
and
xchg
push
dec
int
add
into
cmpsb
lret
test
jae
pop
jno
inc
pusha
sub
sbb
mov
icebp
out
or
mov
mov
mov
or
cmc
adc
ss
pop
add
sarb
les
push
jae
pop
cli
fwait
sub
imul
int3
icebp
xchg
xchg
mov
mov
adc
arpl
mov
push
xchg
adc
mov
test
add
add
push
jecxz
ds
aaa
cmp
imul
push
cmpb
loope
xor
out
jle
jb
data16
xor
inc
gs
or
cltd
push
shrl
fwait
jge
in
lret
dec
out
cli
add
add
aad
cmp
negl
inc
jnp
adc
loope
in
rcrb
outsl
dec
in
pop
scas
js
test
cmpsb
fistl
or
pop
sub
fstl
xchg
cli
lcall
clc
cmp
xchg
ja
leave
or
xchg
loopne
test
mov
fists
push
sbb
imul
pop
hlt
sub
add
mov
jb
addr16
mov
jp
add
inc
mov
xor
inc
cmp
adcl
and
push
test
insb
xchg
adc
data16
mov
fwait
movsl
push
jl
mov
repz
push
clc
push
dec
roll
sbb
gs
pop
sarl
inc
div
mov
insl
add
sub
or
jo
aam
int
stos
pushf
mov
add
idivb
pop
inc
icebp
xor
gs
pusha
sub
incl
add
add
or
cmpsb
cmpsb
test
cmc
push
popf
pop
wbinvd
xchg
xchg
out
push
inc
xlat
scas
test
loopne
out
pusha
insl
adcb
add
repz
subb
into
fs
stos
cld
sbb
cmp
or
lret
push
orl
jge
push
fsub
out
test
and
and
push
sub
sbb
int
cli
push
xchg
adc
lcall
add
dec
dec
pop
add
cmpsb
pop
dec
mov
lret
or
jnp
sub
inc
pop
push
pop
shl
push
mov
cmc
mov
fildll
enter
mov
imul
movsb
dec
cmp
divl
jnp
outsl
fdivr
mov
aaa
cs
adcl
dec
jp
ss
pop
fldenv
cmpl
jae
jg
hlt
lods
mov
test
mov
pop
test
mov
add
pop
jl
push
test
pop
xchg
cmp
mov
into
cli
cmp
sbb
and
int3
outsb
pop
sub
adc
mov
adc
imul
repz
cmp
ret
xchg
out
sbb
push
jle
es
in
shl
idivb
out
in
mov
daa
cmp
pop
add
adc
fldcw
push
lahf
xor
add
sbb
cli
mov
aaa
rcll
cmpsl
mov
push
adc
inc
sub
adc
jecxz
and
jb
or
cmp
jo
push
push
hlt
data16
popa
mov
adc
sbb
pop
test
out
loop
mov
test
jl
sub
test
sbb
in
mov
rep
lds
in
jecxz
pushf
sub
imul
adc
popf
jns
mov
pop
or
and
xchg
xor
sahf
jne
je
or
add
xor
inc
in
cmc
stos
lock
out
xchg
test
cmpsb
or
stc
jl
xchg
test
xor
mov
je
sbb
and
sahf
jecxz
scas
or
lcall
movsb
lea
repnz
push
xor
add
push
mov
cmp
scas
mov
jmp
xor
rorl
gs
cmp
xchg
test
cmp
add
add
data16
add
mov
xor
lock
loop
daa
in
sbb
ja
or
cli
xchg
insl
cld
shll
sub
mov
xor
jnp
icebp
dec
dec
mov
std
add
shrl
pop
ror
shl
mov
leave
mov
in
lds
add
mov
mov
mov
dec
push
std
mov
pop
aam
sar
mov
push
aaa
sub
movl
push
pop
push
mov
repz
pop
enter
sub
mov
pop
mov
push
inc
dec
aad
mov
je
hlt
inc
jp
mov
xor
and
rcr
int3
adc
cmpsl
cltd
rcrl
push
mov
add
xor
adc
sarl
outsl
rolb
mov
inc
daa
mov
rcll
bound
mov
mov
clc
movsb
leave
mov
dec
in
mov
lea
cmpsb
pop
clc
pop
mov
lret
das
adc
and
sarb
adc
ret
mov
daa
subb
ret
test
xchg
lahf
test
cmp
or
icebp
pop
icebp
test
mul
test
xchg
pop
fldcw
cld
icebp
jb
xchg
test
in
xchg
fildl
pop
movsl
sub
sub
aad
icebp
sbb
inc
jb
lahf
cmp
ret
push
inc
xor
cwtl
pusha
out
dec
bound
push
movsl
add
push
imul
jecxz
lret
xor
pop
lea
push
out
js
test
mov
adc
push
mov
add
add
pop
mov
sbb
jns
sbb
popl
out
fscale
fwait
hlt
js
jecxz
ss
dec
paddsb
mov
cld
or
inc
adc
in
dec
pop
fwait
fs
aaa
jl
test
mov
and
or
mov
lods
ret
icebp
clc
lds
mov
pushw
call
fiadds
xchg
pop
clc
xchg
jmp
or
aad
pop
roll
xchg
cmpsb
loop
imul
mov
mov
lods
jg
push
xor
dec
cmpsl
push
test
loopne
ret
and
inc
pushf
out
pop
dec
adc
dec
push
and
in
insb
push
in
popf
mov
das
sarl
aad
movsl
adc
daa
stc
mov
xchg
inc
lock
push
add
scas
and
mov
push
cmc
jae
cmp
xchg
lock
jp
dec
sbb
sbb
cmc
int
mov
insl
pop
xor
mov
sub
stc
in
add
int
bnd
fneni(8087
mov
adc
and
jnp
xchg
xchg
add
stc
out
out
pop
arpl
push
mov
cmpsl
xchg
pop
dec
pop
cltd
jmp
and
add
mov
ss
mov
enter
cmp
leave
mov
je
xchg
mov
mov
add
data16
adc
inc
add
fsts
push
scas
loopne
jecxz
sub
and
cld
inc
xor
add
fildl
fmull
pop
jb
pop
mov
add
outsw
ficoms
and
movsb
pop
sbb
jae
cmp
jle
mov
aas
push
add
in
cwtl
ficomps
or
movsb
stos
sub
lret
sub
jg
nop
shll
add
into
jne
push
aad
xor
xor
ds
stos
rcl
rcll
jne
cld
data16
movsl
addr16
cmpsb
jg
les
ret
mov
aaa
fwait
mov
xorl
push
in
arpl
loop
in
iret
aam
cmp
addr16
jge
outsl
lcall
in
adc
sbb
fcom
rclb
add
xor
sub
insl
mov
xchg
or
jge
xor
inc
mov
call
xor
mov
jle
or
pop
add
in
sbb
jb
pop
mov
add
and
das
jne
add
pop
dec
push
cmp
in
fnstcw
outsl
jecxz
add
cmp
stos
fs
cwtl
xchg
adc
cltd
mov
mov
add
cmp
jg
cmp
push
cli
sbb
push
jp
xlat
or
sub
mov
or
xchg
mov
idivl
pop
rorb
mov
cwtl
pop
dec
std
rcrl
fdivl
cli
popa
xchg
cmpsl
outsl
push
hlt
cmp
fsubl
jno
fdivp
pop
mov
add
add
lret
push
cwtl
cmp
inc
mov
repnz
xor
fwait
cld
pop
arpl
fistl
sbb
