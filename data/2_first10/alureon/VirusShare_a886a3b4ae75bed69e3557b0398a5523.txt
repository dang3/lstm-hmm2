push
mov
push
push
mov
mov
mov
mov
push
push
lea
mov
mov
mov
sub
not
sub
not
shr
add
push
mov
add
test
add
push
lea
push
mov
call
sub
test
add
mov
mov
mov
mov
push
popl
sub
test
sub
lods
xor
stos
sub
add
sub
add
rorl
sub
add
jne
mov
mov
neg
add
add
sub
add
mov
imul
add
mov
imul
add
mov
mov
mov
add
testb
add
and
add
movl
mov
pushl
lea
push
push
mov
call
mov
add
xor
add
add
add
decl
mov
jne
addl
subl
pop
pop
leave
ret
push
push
mov
mov
mov
mov
mov
mov
cmpb
jne
cmpb
jne
pop
pop
ret
mov
xor
cmp
je
lea
test
sub
cmpb
jne
ret
push
mov
push
push
xor
push
mov
call
mov
push
push
mov
call
push
mov
call
mov
xor
lea
test
cmp
jne
push
pushl
push
mov
call
jmp
cmp
jne
push
push
push
push
push
push
mov
call
test
je
push
call
push
call
push
jmp
cmp
jne
testl
jne
cmp
je
pushl
mov
push
push
push
push
push
push
call
sub
add
test
jne
push
call
push
call
call
mov
call
jmp
cmp
je
push
push
push
xor
call
push
mov
call
xor
pop
pop
pop
ret
push
mov
mov
mov
sub
add
add
push
mov
test
jne
xor
jmp
mov
add
mov
push
mov
mov
mov
push
mov
add
add
add
mov
mov
test
jns
and
sub
cmp
jae
mov
jmp
xor
mov
cmp
jae
jmp
mov
mov
mov
mov
add
mov
call
cmp
je
incl
mov
cmp
jb
mov
mov
mov
cmp
je
movzwl
mov
add
test
je
mov
add
cmp
jae
cmp
jb
xor
cmpb
je
sub
cmpb
jne
push
lea
push
push
mov
call
sub
add
lea
push
mov
movb
call
mov
test
jne
xor
jmp
lea
call
push
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
add
addl
sub
andl
push
lea
push
movb
mov
mov
mov
mov
rep
mov
mov
rdtsc
mov
mov
mov
mov
mov
not
ror
not
movzbl
lea
cmpb
jne
mov
push
push
push
movb
call
push
call
push
push
pushl
mov
call
mov
mov
cmp
jne
movzbl
push
push
pushl
call
pushl
push
pushl
call
xor
pop
sub
pop
leave
ret
push
mov
push
mov
movzwl
movzwl
andl
add
je
push
mov
push
lea
testl
je
mov
mov
and
add
push
push
pushl
call
jmp
mov
mov
add
add
movzwl
movzwl
incl
add
add
sub
cmp
jb
pop
pop
pop
pop
ret
push
push
push
xor
call
mov
lea
test
jbe
mov
movzwl
mov
and
rol
add
dec
jne
test
jns
lea
and
or
pop
mov
pop
ret
mov
jmp
mov
or
push
movzbl
lea
test
push
add
pop
push
add
pop
lea
sub
imul
decl
lea
jne
pop
ret
push
mov
sub
sub
push
mov
push
xor
push
mov
cmp
jne
push
mov
call
mov
push
lea
push
xor
sub
push
mov
push
mov
call
push
mov
call
push
mov
call
push
call
call
cmp
jne
cmp
jne
cmpb
jne
push
push
push
push
mov
call
push
push
mov
push
mov
call
cmp
je
mov
jmp
lea
push
mov
mov
push
pushl
push
mov
call
cmp
je
cmp
jne
lea
call
pushl
mov
pushl
mov
push
mov
call
mov
sub
mov
xor
push
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
push
mov
call
push
mov
call
push
mov
call
sub
test
add
push
mov
call
mov
push
mov
call
push
mov
call
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
pop
pop
push
mov
call
push
mov
call
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
pop
pop
push
mov
call
push
mov
call
mov
call
push
mov
call
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
pop
pop
push
mov
call
push
mov
call
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
pop
push
mov
call
push
mov
call
push
call
pop
push
mov
call
push
mov
call
mov
mov
call
cmpl
push
jne
mov
mov
call
push
mov
call
push
mov
call
pop
pop
push
mov
call
push
mov
call
push
mov
call
pop
pop
push
mov
call
push
mov
call
push
mov
call
test
je
push
mov
call
push
mov
call
pop
pop
push
mov
call
push
mov
call
push
mov
call
pop
pop
mov
call
push
mov
call
push
mov
call
jmp
push
mov
call
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
add
add
push
mov
call
push
mov
call
push
mov
call
pop
pop
push
mov
call
push
mov
call
push
mov
call
pop
pop
push
mov
call
push
mov
call
pop
pop
push
call
push
mov
call
push
mov
call
pop
pop
jmp
mov
call
call
push
mov
call
push
mov
call
push
mov
call
mov
push
mov
call
pop
test
jne
push
mov
call
push
call
pop
pop
mov
mov
mov
add
push
lea
push
call
mov
mov
sub
add
push
pushl
and
add
mov
call
mov
push
mov
call
pop
test
jne
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
add
add
push
mov
call
test
je
mov
push
mov
call
mov
push
mov
call
pop
pop
push
mov
call
push
call
push
call
pop
pop
mov
call
push
mov
call
jmp
push
mov
call
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
add
test
sub
push
mov
call
push
mov
call
push
mov
call
pop
pop
push
call
push
mov
call
push
call
pop
pop
mov
mov
mov
add
mov
mov
mov
add
movzwl
lea
add
mov
movzwl
lea
mov
mov
sub
mov
mov
cmp
je
mov
cmp
je
add
mov
mov
mov
jmp
mov
mov
cmp
je
mov
add
lea
mov
mov
mov
mov
add
push
push
push
call
mov
or
sub
mov
mov
sub
push
push
mov
call
pushl
call
test
je
cmp
je
mov
mov
call
mov
add
mov
push
lea
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
push
lea
push
push
pushl
mov
call
mov
call
mov
mov
mov
mov
mov
mov
xor
cmp
jae
mov
mov
mov
addl
cmp
subl
push
pop
rep
mov
mov
mov
add
add
add
mov
mov
movzwl
inc
cmp
jb
xor
push
push
push
push
push
mov
call
mov
call
cmp
je
in
push
push
pushl
mov
call
jmp
pushl
pushl
pushl
jmp
xor
pop
pop
pop
leave
ret
mov
add
mov
test
je
add
add
add
add
add
push
mov
push
lea
xor
cmp
jbe
add
lea
test
cmp
jb
mov
add
xor
cmp
jbe
add
inc
cmp
jb
pop
pop
xor
lea
test
ret
push
mov
sub
sub
mov
add
mov
xor
mov
cmp
je
add
sub
add
mov
cmp
je
push
mov
push
cmpl
jne
mov
add
push
mov
call
mov
mov
call
push
pushl
call
test
je
mov
mov
add
jmp
cmp
je
inc
mov
mov
test
jne
jmp
mov
lea
mov
mov
add
add
cmpl
jne
pop
pop
lea
push
mov
movb
movb
movb
call
leave
ret
push
xor
cmp
jbe
lea
push
mov
add
mov
add
push
add
pop
add
add
cmp
jb
pop
pop
ret
push
mov
sub
cmp
add
push
mov
mov
add
mov
test
jne
sub
jmp
andl
push
lea
lea
cmpl
push
je
mov
mov
add
push
mov
call
mov
test
je
mov
andl
add
cmpl
je
mov
pushl
pushl
call
mov
test
je
mov
mov
mov
mov
mov
mov
mov
mov
incl
mov
mov
lea
cmpl
jne
mov
incl
mov
imul
lea
lea
cmpl
jne
xor
sub
pop
pop
pop
leave
ret
xor
jmp
push
mov
cmpl
push
push
jb
mov
mov
mov
pushl
popl
sub
sub
lods
xor
stos
sub
sub
sub
sub
rorl
sub
push
add
pop
jne
pop
pop
pop
ret
mov
xchg
sbb
add
add
add
add
aad
je
lods
ss
add
dec
push
dec
or
fdecstp
stos
mov
push
xor
pop
outsl
lret
xchg
addr16
movsb
repnz
negb
test
pop
call
xchg
aad
push
sub
sub
fwait
mov
aaa
mov
sbb
lea
xchg
xchg
sti
or
mov
and
xchg
mov
dec
ljmp
mov
jp
test
add
std
xchg
jne
ds
roll
fmuls
outsl
call
and
in
jbe
insb
sub
insb
adc
rolb
lds
inc
nop
sub
js
pusha
add
mov
out
lea
aad
stos
cwtl
test
inc
jge
xchg
inc
fdivrs
cmpsb
pop
xor
pop
insl
mov
rep
pop
mov
jne
pop
mov
bound
mov
fnsave
out
or
aas
cmp
stos
mov
test
mull
into
int3
pop
bound
xor
sahf
inc
jg
pop
sarb
in
inc
xchg
aas
mov
insb
jnp
mov
daa
loop
out
mov
call
mov
sub
jbe
pop
mov
push
xchg
icebp
xchg
fwait
cmpsl
jle
cmp
push
pop
and
dec
in
icebp
mov
std
or
and
add
repnz
outsb
pop
lret
insl
clc
lcall
push
out
fs
adc
mov
xchg
aad
mov
mov
maxps
pop
inc
dec
idivl
adc
mov
fstpt
daa
in
sbb
xor
xchg
test
gs
mov
ror
ret
or
stos
dec
outsl
fistpl
lret
cli
inc
or
pop
leave
in
outsb
cld
out
xorl
push
push
xchg
pop
addr16
aaa
and
imul
dec
add
mov
stos
mov
dec
cmp
adc
push
cmpsb
arpl
std
lods
pusha
or
pop
xor
repz
dec
repz
or
fldenv
jle
push
dec
aad
fisttps
idivb
jae
and
add
int
pusha
aam
stos
cmpl
cld
add
loope
pop
shll
out
imul
mov
inc
popf
sbb
push
movsb
cmc
les
sti
mov
mov
aas
clc
testb
cmp
aaa
aad
xchg
cmpsl
cmp
insb
cmp
jb
jbe
push
sub
test
mov
push
ficoml
enter
out
loopne
out
subl
inc
ds
sahf
loopne
ja
inc
outsb
jmp
jae
pusha
xchg
das
mov
inc
inc
out
push
mov
xchg
pusha
xchg
mov
inc
jecxz
lods
cmp
pop
xor
lds
out
pusha
mov
sub
pusha
dec
in
insl
fdivs
les
and
jmp
lods
or
pop
movsl
lahf
sbb
cmp
js
inc
add
stos
std
fwait
les
daa
mov
scas
jmp
mov
xorl
cli
push
dec
jp
lcall
mov
pop
addr16
or
mov
dec
pop
push
inc
xor
xchg
popf
and
cmp
mov
dec
out
mov
movsb
aas
lret
iret
cmpsb
fwait
jge
lock
lret
test
or
or
cmp
in
and
jl
push
pop
xchg
sahf
jo
or
jne
inc
popa
xchg
fwait
lock
popf
imull
stos
mov
push
clc
push
xchg
mov
cmpsb
cmp
cmp
mov
icebp
adc
jge
test
repz
mov
pop
negb
push
decb
ja
fdivrs
bound
scas
dec
dec
sub
mov
rcrb
sarl
mov
jmp
rcll
stos
fiaddl
add
jge
mov
ja
xchg
lcall
dec
sbb
pop
xchg
mov
fdivs
popf
adc
in
sub
mov
mov
stos
xchg
inc
or
add
mov
sbb
push
or
fidivs
hlt
cwtl
int
push
outsb
xlat
pop
test
out
out
sub
addl
pop
xor
repnz
addr16
ja
sub
mov
inc
jo
jb
sti
and
insl
loope
jle
popf
cmp
out
adcl
cmp
sbb
xchg
dec
mov
enter
outsb
xor
js
loope
pop
rep
mov
jg
mov
sub
dec
inc
mov
test
aas
scas
dec
cmp
mov
in
push
into
fcmovne
icebp
jb
int
nop
adc
out
or
rcll
xchg
mov
inc
mov
scas
hlt
xchg
xor
jmp
je
mov
out
addr16
xor
aad
fbld
push
or
mov
push
push
int3
mov
inc
dec
arpl
out
pop
pushf
imul
jmp
out
and
mov
mov
cli
loopne
and
cmp
aad
push
pop
mov
mov
mov
rorl
out
inc
test
xor
and
lods
sub
inc
imul
and
sbbb
out
aam
arpl
testb
cli
in
into
mov
pop
popa
pop
cmp
das
xchg
xchg
xor
leave
in
mov
icebp
mov
cmpsb
inc
into
out
xlat
fldcw
inc
push
jmp
cwtl
pop
add
lods
les
test
jns
adc
fwait
outsl
roll
mov
imul
add
gs
ljmp
cmp
insl
sub
jle
cli
pop
xchg
jns
in
add
dec
aam
or
xchg
insb
aas
add
jge
push
fucomip
scas
test
and
sahf
int
cmp
pop
or
sbbb
adc
mov
jb
test
push
mov
outsb
es
and
jmp
xchg
jmp
pop
test
out
not
out
fmul
cmpb
xor
fldpi
push
dec
rolb
add
insb
nop
fsts
pop
pop
and
sub
mov
mov
cmp
mov
jle
bound
jae
test
add
adc
sub
mov
or
and
or
insl
pop
or
int
dec
scas
out
int3
sub
scas
lds
pop
jbe
hlt
push
xchg
filds
xchg
arpl
dec
push
inc
lds
mov
mov
jmp
mov
int3
inc
adc
in
dec
in
push
ret
jo
adc
pop
movsl
out
sub
adc
cmc
and
mov
xchg
pop
cwtl
negl
stos
xchg
lret
fildll
and
stos
jl
lods
inc
popa
mov
inc
inc
insl
or
inc
repnz
mov
jne
bnd
popa
loope
enter
shll
inc
int3
inc
addr16
push
push
fnstsw
cltd
xchg
push
jae
mov
stos
and
xor
rcl
shrl
incb
movsl
cmp
ss
iret
pusha
pusha
jmp
cmp
jle
and
push
iret
lods
dec
inc
mov
jp
and
xor
sub
adc
lret
call
pop
mov
cltd
ja
xchg
mov
mov
rorl
rolb
mov
inc
outsb
push
inc
jge
out
pushf
dec
inc
add
ss
mov
subb
dec
fs
push
inc
repnz
data16
sub
pop
dec
pop
cli
and
pop
into
or
inc
mov
cwtl
pop
mov
pop
mov
jecxz
cmpsb
imul
adcl
sahf
gs
dec
inc
push
incl
pop
movsl
or
shl
and
adc
out
dec
fwait
mov
xlat
insl
mov
xchg
inc
shrl
stc
sub
pop
lret
stc
ds
jge
push
inc
popf
mov
mov
fbld
adc
xchg
les
loopne
mov
fsubs
mov
mov
push
pop
outsl
sbb
inc
pop
inc
sbb
mov
and
lret
les
push
adc
clc
mov
fildl
cmp
arpl
jge
mov
dec
clc
xchg
xlat
bound
ret
lret
insl
cmpsb
add
test
cwtl
cmpb
xor
sets
and
decb
mov
and
dec
aam
insb
into
sbb
data16
adc
sub
push
iret
gs
sti
ja
push
cmp
xchg
fsubl
js
adc
fistpll
adc
mov
dec
aaa
enter
cmp
enter
fiadds
ja
dec
mov
pop
in
sbb
cltd
in
sti
test
in
xchg
or
adc
inc
in
mov
dec
ret
push
repnz
sub
mov
inc
mov
jle
cmp
icebp
test
xchg
into
cltd
pop
sbbb
push
inc
sbb
xchg
xchg
xor
jae
sub
es
mov
test
mov
or
push
mov
imul
aad
xchg
and
and
idivb
jge
shlb
cld
lcall
aam
aad
orl
addr16
push
push
push
xor
mov
repz
inc
push
sti
jg
jecxz
lret
out
lcall
xor
loope
mov
push
mov
pop
xorl
test
dec
fdivr
push
fisubl
cmpsl
inc
bound
xchg
aam
aas
inc
or
xchg
out
leave
scas
mov
push
mov
sub
nop
pop
das
and
jp
insb
jno
ret
adc
xchg
repz
xor
dec
mov
lds
pop
pushf
mov
mov
testb
rcrb
mov
xchg
pop
push
push
std
jl
and
mov
mov
xchg
std
xchg
pop
imul
mov
movsb
cli
pop
rcrb
outsb
dec
mov
xor
pop
pusha
mov
cmp
fistpll
xor
mov
pop
cmp
in
scas
int3
hlt
pop
jnp
arpl
xor
push
mov
popa
inc
dec
lret
mov
adc
arpl
repnz
xchg
outsl
fistpl
lea
or
repnz
jbe
lods
std
pop
rcrl
sub
mov
sub
xchg
mov
imul
cmpsb
dec
arpl
ret
adc
push
loope
dec
div
mov
stos
in
pop
cmc
jbe
loop
hlt
adc
cmp
frstor
adc
cmpsb
push
dec
sti
je
pop
fsubl
pushf
mov
enter
lret
push
add
push
icebp
fwait
popf
add
fcomps
inc
mov
in
or
test
dec
je
and
pop
iret
add
scas
mov
insb
or
xor
or
iret
mov
fs
stc
mov
int
push
ret
adc
out
sub
lods
jp
push
mov
push
xchg
xor
lea
xchg
popa
in
cmpsb
xor
and
inc
stos
pop
imulb
jnp
out
sbb
inc
les
push
lret
lea
or
or
xchg
shll
push
xor
sarb
push
cmp
mov
rolb
dec
jae
cwtl
dec
push
js
cltd
shlb
dec
std
sti
in
stc
push
xchg
or
dec
pxor
fldenv
popa
cmp
pop
xchg
and
les
push
dec
xchg
maxps
cmp
mov
jae
jle
pushf
cltd
andb
in
lahf
fldl
mov
xchg
cmp
sbb
jg
add
push
insl
mov
mov
arpl
mov
mov
fucomip
mov
fs
jne
dec
or
xor
test
sbb
lret
pcmpeqb
jecxz
push
jnp
xor
arpl
jmp
push
ljmp
rcl
jne
repnz
inc
aas
mov
mov
adc
add
imul
xchg
es
jg
outsb
jo
popa
jno
push
aam
cli
xacquire
mov
ficoms
out
xor
in
jl
cmp
loope
cmp
inc
popf
mov
cmpsl
add
pop
into
adc
icebp
jno
inc
sub
or
fcmovb
pop
xchg
stos
aaa
pop
rorl
mov
shl
mov
lock
xlat
sbb
outsl
and
pop
inc
inc
and
pop
ja
sbb
xor
sti
jo
jbe
les
dec
cmp
js
jge
stos
add
pushf
dec
cmp
sub
cmc
stc
scas
push
std
dec
icebp
ret
inc
pop
cwtl
mov
adc
lahf
cmpsl
daa
mov
subl
jle
jle
fcomps
mov
inc
in
jnp
outsb
dec
lods
mov
adc
adc
stc
and
adc
stc
inc
test
out
js
testb
mov
mov
cs
scas
xchg
adc
lods
jge
ss
add
and
cmc
cmc
daa
mov
inc
cmpsb
mov
adc
push
aaa
jne
sbb
sub
sbb
sub
adc
mov
shl
mov
rcrb
adcb
pop
lods
stc
aad
adc
mov
add
pop
fsubs
mov
mov
push
xchg
fnstsw
and
cmpsb
xor
pop
or
hlt
std
addr16
cmpsl
cmp
icebp
dec
cltd
pop
add
fldt
movsl
cmp
cmc
daa
ds
sbb
inc
push
jbe
rorl
and
ds
and
inc
sbb
ja
sub
jae
add
rcl
inc
mov
dec
sub
lcall
ljmp
cmp
cmp
int
lds
pop
add
xchg
jbe
adc
bound
test
cmp
in
push
lret
mov
aaa
das
xlat
aam
jge
pushf
jno
cmpsl
xchg
pusha
or
and
add
xor
in
test
adc
inc
xlat
nop
xor
test
jp
test
lds
push
jnp
push
psubw
fcoms
mov
and
xchg
jbe
out
push
je
ljmp
inc
rorb
les
cmpsb
mov
aam
adcb
sbb
sbb
adc
repnz
push
pop
out
mov
mov
lock
pop
test
jns
push
fidivrs
or
rorl
cmp
testl
pusha
or
dec
cmp
es
push
aaa
mov
stc
fstpt
nop
jo
xchg
cs
or
iret
jno
mov
inc
orb
mov
xchg
stc
scas
xchg
pop
xor
xchg
inc
flds
mov
cli
jns
fwait
inc
ds
xchg
push
clc
cwtl
xorb
inc
js
cmpl
out
push
mov
ret
jp
outsb
dec
cli
pusha
dec
pop
jp
bound
insb
inc
add
jbe
aas
pop
test
je
inc
out
jno
xchg
dec
imul
xrelease
lea
and
xchg
mov
inc
sti
cli
notl
mov
jecxz
outsb
dec
lea
push
push
jp
nop
jnp
scas
pop
jae
lods
sbb
adc
fcmovnu
fildll
cmp
lds
xor
inc
sarl
es
mov
repnz
cltd
lds
nop
pop
inc
rorl
push
push
ficomps
int3
sub
in
clc
movsb
out
imul
mov
mov
inc
push
stos
push
xor
sub
lods
ret
test
lds
cmovl
jge
movsb
loopne
jno
mov
lock
js
sub
dec
sub
sub
sti
or
push
stc
repz
les
les
aam
cmpsb
or
add
stos
adc
aam
jae
jns
pop
sarl
xchg
in
cld
decl
or
pop
dec
mov
rcrl
ds
lock
loop
jg
ret
xchg
dec
jae
daa
mov
mov
out
loop
add
ret
fs
xchg
add
push
or
mov
push
and
push
ret
je
icebp
mov
mov
shrl
aad
incl
pop
jnp
mov
jg
inc
sub
mov
loope
cwtl
mov
mov
adc
shlb
pop
adc
jmp
cmp
repnz
cmpsl
cmp
push
popf
xor
cwtl
push
clc
sbb
pop
loope
andl
orb
mov
scas
inc
cmp
icebp
movsb
cmp
out
mov
dec
push
scas
sbb
shll
repnz
mov
lahf
sahf
je
dec
test
inc
dec
stc
movb
mov
dec
dec
dec
ds
mov
mov
or
xchg
mov
daa
inc
adc
cwtl
in
add
sub
cmp
fidivrl
cmp
mov
pop
sub
inc
xlat
out
jns
lret
popa
imul
loop
push
jo
pop
repnz
js
jno
jnp
xlat
fwait
call
or
push
repnz
pop
fstps
cltd
mov
lahf
xchg
popa
xor
sub
adc
rcll
pop
cld
jno
sub
in
scas
mov
cltd
imul
cmc
popf
jnp
std
pop
jnp
push
shl
pusha
rorb
out
pop
mov
cld
negl
xchg
fimuls
cwtl
cld
mov
pop
in
jne
mov
xor
stos
nop
inc
mov
test
mov
inc
add
inc
mov
divl
jnp
mov
in
fs
imul
fwait
push
lcall
mov
xor
cltd
stc
and
ret
adcb
mov
ja
or
xor
and
add
insl
push
hlt
mov
movsl
sti
and
mov
loope
xorb
add
rolb
sub
and
and
push
test
scas
dec
push
mov
pop
fdivrp
jno
mov
or
jno
bound
cmp
add
cmp
inc
and
inc
fcomi
mov
in
repz
pop
dec
or
lods
shlb
fisubrl
xchg
outsb
in
mov
mov
jns
rcrb
pop
imul
icebp
adc
mov
scas
push
pop
fistpll
arpl
lahf
pop
mov
test
loop
shrb
jne
sbb
mov
mov
sti
ljmp
mov
inc
dec
lcall
ljmp
push
into
bound
dec
push
orl
jnp
clc
and
flds
das
push
jne
inc
lret
mov
shll
xor
fidivs
je
in
ds
push
pop
rol
adc
push
inc
push
or
repz
fdivrs
fldt
sbb
pushf
jae
mov
fisubs
adc
mov
addr16
les
repz
cmpsl
mov
mov
in
push
add
in
pushf
jb
xor
inc
loope
orb
fs
or
jle
cmp
mov
or
in
daa
mov
mov
js
jge
or
out
dec
out
adc
and
push
inc
lods
dec
sbb
xchg
lods
cpuid
sbbb
push
aas
sub
daa
fsubr
inc
daa
idivl
aad
ret
xor
cmpsl
inc
scas
test
or
imul
cmpsl
inc
scas
mov
ret
and
sub
lea
cs
add
adc
sbb
add
sub
push
mov
rcll
mov
sbb
mov
xchg
cltd
test
test
movsl
dec
mov
xor
inc
out
mov
adc
and
jge
xchg
loop
push
rclb
gs
fbstp
fs
stc
sbb
add
xorb
out
popa
cmp
out
sub
mov
insb
mov
cld
rorb
cmc
daa
or
jno
or
adcl
test
xlat
push
aad
xchg
lret
cmpsl
xor
sub
out
mov
andl
es
mov
adc
cmpsl
xchg
mov
out
out
mov
inc
data16
or
data16
insl
sarl
sbb
inc
jl
clc
fadd
sub
or
test
sub
push
push
mov
sbb
fadd
scas
out
cmpsl
je
in
sbb
pop
adcb
inc
outsb
repnz
addb
push
iret
xchg
inc
or
stos
shrl
cmpsl
xchg
or
fs
adc
pop
fidivs
cmp
in
testb
add
or
fmulp
rorl
inc
sbb
gs
popa
mov
jne
bound
rolb
aaa
cmp
iret
insb
in
add
pop
je
jmp
fwait
pop
ljmp
cwtl
fildl
cmp
dec
loope
out
mov
repz
fistps
mov
scas
outsb
outsb
xor
int
imul
push
dec
jecxz
das
mov
xchg
cmpsb
cmp
jmp
dec
jns
aas
aam
mov
outsb
xor
mov
in
test
adc
dec
mov
push
into
sbb
jnp
adc
mov
mov
lods
js
mov
xchg
jo
iret
adc
notl
pusha
lock
sub
shlb
loopne
dec
pop
bound
pop
push
shl
into
rcrl
mov
js
mov
sub
xchg
movsl
push
mov
pop
jbe
into
or
pop
ljmp
jno
imul
frstor
ja
dec
lods
sbbb
mov
shrb
dec
inc
repz
mov
sahf
test
and
popl
sbb
imul
ret
movb
dec
cmp
sbb
mov
xor
movhps
enter
arpl
jns
cmpl
test
pop
stos
xchg
xchg
xchg
js
mov
push
mov
cmc
push
jl
addr16
cmp
orl
lock
cs
dec
rcrl
or
movsb
in
inc
jne
popa
mov
fbstp
or
scas
aam
cli
out
icebp
int
add
cmp
mov
xlat
sbb
jno
dec
test
js
lock
call
inc
ficompl
mov
mov
fistpll
cmp
insb
mov
icebp
adc
fnstsw
xorb
add
cltd
insb
fwait
add
or
sub
push
cmp
pop
or
mov
mov
cs
dec
addr16
inc
mov
test
mov
xchg
stos
xchg
movsl
repnz
sbb
mov
fldenv
or
adc
es
sti
aam
cmp
sarl
pushf
xchg
xchg
jae
fs
mov
dec
lret
or
int
ljmp
mov
out
pop
lods
jns
xchg
dec
sarl
pushl
and
aam
cmp
dec
fimuls
dec
in
js
sbb
dec
test
fisubs
dec
or
scas
sbb
dec
out
fwait
lcall
popf
leave
stos
shl
leave
dec
jg
mov
lods
mov
xchg
dec
lods
jns
cltd
ret
popf
fildl
out
cmp
sti
ds
add
adc
pop
dec
jbe
repz
dec
loop
add
mov
int
push
subl
call
dec
inc
outsl
add
repnz
pop
ds
in
push
rclb
movsb
push
mov
das
cmp
xchg
mov
adc
aas
add
jmp
arpl
xor
cmp
dec
mov
sti
int
xor
pop
dec
pushf
aaa
jmp
fcomip
add
pop
xchg
insl
cmp
add
xchg
pop
add
ja
cmpsb
dec
xor
lea
popa
lods
cs
lahf
sbb
gs
ret
and
jg
cmpsl
mov
xchg
cmp
or
int
ret
sub
inc
stos
scas
pop
mov
out
in
jecxz
pop
into
inc
in
out
in
sub
mov
mov
aam
adcl
jo
lods
ret
ss
mov
stc
pushf
iret
adc
outsl
idivb
cmp
or
lea
dec
sbb
push
or
pushf
xor
jae
jmp
pop
adc
nop
fsubs
sub
cmpsl
into
inc
sub
xor
jmp
gs
jmp
in
jp
inc
sub
pop
xchg
xchg
mov
xlat
fsqrt
shrl
sub
jge
lods
int3
stc
cwtl
pop
lcall
adc
std
add
lahf
in
imul
out
xchg
mov
mov
je
add
jbe
mov
cmpsl
in
push
xchg
dec
inc
xchg
dec
mov
fstpl
and
imul
and
mov
call
imul
mov
pop
loopne
test
mov
repz
test
add
sarb
popf
pop
xor
loope
dec
and
stc
xlat
and
pop
cmp
sub
outsl
int3
fwait
call
dec
pop
pop
dec
mov
mov
dec
mov
mov
push
loope
and
push
test
loop
jae
and
xchg
mov
leave
repz
pusha
push
mov
in
push
add
into
xor
sahf
and
aad
das
push
scas
jae
pop
inc
nop
cmp
mov
rorl
xchg
push
or
repz
rol
movl
pop
enter
and
nop
dec
xchg
lcall
in
or
mov
and
test
pop
dec
insb
dec
jg
xor
cmp
leave
add
jg
jbe
stc
outsl
sbb
lock
mov
and
fwait
xchg
mov
daa
pusha
mov
cmpsl
lret
push
cmp
insl
adcb
mov
adc
dec
adc
add
rorl
cmpl
mov
xchg
addr16
fmull
push
test
or
dec
push
clc
inc
out
pop
jbe
push
cli
xor
mov
test
ret
cli
lahf
mov
arpl
lahf
mov
mov
push
lcall
and
add
xor
inc
jle
or
pop
popf
mov
pop
jp
cmp
mov
jl
mov
out
int
fwait
or
mov
aaa
push
xor
popa
mov
mov
inc
jl
pusha
and
xchg
xchg
out
ljmp
aad
mov
sbb
adc
jge
lods
outsl
clc
pop
mov
sbbl
in
stos
gs
cmp
movsl
es
sbb
push
pop
mov
fimuls
fwait
shll
cmp
lahf
jo
add
js
in
sub
fisttps
scas
sbb
mov
inc
repnz
xor
xorl
pop
pop
jbe
push
movsb
push
sbb
cwtl
stc
loop
pop
jne
sti
mov
rorb
inc
gs
dec
add
fwait
mov
rorl
jp
push
outsl
mov
or
adc
pop
loop
sub
int
fisubs
inc
push
pop
mov
and
add
arpl
and
cmp
out
pop
dec
mov
jle
mov
jle
aad
sbb
testb
nop
lcall
mov
dec
out
push
pop
cmp
les
sub
call
mov
std
cmpsb
mov
xor
cmpsb
push
fptan
lret
sbb
es
cli
lcall
xor
fldt
out
dec
xchg
ds
pop
adc
mov
mov
lret
pop
insl
test
insl
xor
lock
dec
sbb
or
scas
add
lcall
ret
adc
cs
test
cs
int
pop
or
inc
fnstsw
adc
mov
dec
pop
xor
mov
aas
fidivl
add
leave
add
add
mov
mov
inc
loop
jmp
and
sarl
mov
int
dec
inc
mov
mov
add
test
or
and
push
and
jae
stos
stos
cs
xor
btc
push
out
pop
pop
xchg
pop
pop
dec
in
test
xchg
dec
ficoml
sbb
mov
jbe
xchg
divl
inc
arpl
mov
and
push
xor
cmp
sub
sub
inc
mov
stc
rcrl
div
popf
xchg
mov
mov
fsts
scas
adc
dec
xchg
dec
test
adc
in
divb
xor
sbb
jmp
sub
push
imul
jle
inc
sub
jnp
dec
sbb
mov
out
sbb
dec
sbb
xlat
add
popl
or
into
jle
dec
mov
lods
outsl
inc
sbb
cmp
ret
or
adcb
lea
loop
mov
jmp
jmp
mov
cli
leave
aam
push
dec
and
movsl
add
das
jnp
subb
mov
imul
insl
jmp
mov
xchg
fcompl
arpl
sbb
call
popa
pop
lock
pusha
out
daa
cmp
mov
sbb
mov
pop
cmp
sub
mov
enter
cld
adc
sbb
ret
outsb
jbe
mov
xchg
sbb
gs
cmp
inc
aad
or
cwtl
pop
or
jae
dec
mov
sarl
jnp
repz
mov
lods
fisubs
pop
loop
or
dec
or
and
jecxz
ret
mov
add
xor
jno
adc
dec
iret
cmp
ret
sbb
sbb
int3
push
xor
pop
enter
insb
jmp
sub
jmp
mov
sub
incb
mov
popa
mov
mov
arpl
mov
dec
movsl
fmuls
sub
lcall
icebp
mov
mov
cmc
mov
cli
pushf
jo
cmp
dec
stos
add
xchg
pop
js
jae
in
cltd
ret
out
add
xor
sbb
movsb
mov
xchg
lock
decl
lds
lock
stc
jb
xchg
data16
nop
es
lcall
or
sub
pushl
add
mov
daa
mov
std
or
sbb
fsubrs
enter
inc
sbb
popa
ss
jmp
sub
repnz
lret
jg
xor
and
sarb
imul
cmc
sbb
inc
ret
test
imul
push
pusha
sub
ljmp
sarb
push
jl
xchg
jl
shrb
cli
lret
jmp
hlt
sbb
jo
pop
push
addb
rcrb
frstor
and
aas
xchg
push
jg
fdiv
fcmovbe
mov
ret
push
mov
in
push
mov
test
mov
icebp
rorl
out
je
mov
xchg
mov
std
ljmp
aas
lcall
mov
and
mov
rorb
push
push
mov
push
scas
mov
or
faddp
mov
aad
cmp
arpl
mov
lcall
adc
aas
mov
popf
sahf
repnz
aam
sbb
mov
push
bound
out
cli
cld
cld
insb
sbb
int
mov
jge
cmp
mov
cwtl
push
fstpt
pop
sbb
and
fs
sbb
imul
add
jmp
push
mov
xchg
or
jmp
jne
cwtl
lcall
cmp
out
dec
pop
push
push
fstps
jle
ficompl
loop
jle
pop
push
dec
mov
pop
sbb
pusha
clc
or
lahf
lret
flds
pop
or
mov
stos
jb
dec
mov
insl
shl
leave
call
sub
call
ret
fwait
xorl
pop
iret
out
mov
push
icebp
mov
dec
mov
cmpsb
push
test
shl
shlb
push
pop
clc
or
sub
call
push
push
adc
out
shr
cmp
pop
pusha
sbb
shrb
adc
adc
push
test
repnz
xor
push
jmp
inc
push
pop
xchg
add
call
push
cld
inc
fstpt
xchg
cs
sahf
mov
push
aaa
loop
addr16
popa
inc
dec
add
or
pop
sbb
jae
daa
clc
mov
out
dec
cmp
xor
mov
cs
push
sbb
ljmp
sub
xchg
insl
loop
cli
xchg
jge
xor
pop
inc
sub
loope
das
inc
fidivs
and
ja
nop
adc
addr16
dec
sti
rolb
data16
pop
jl
ret
fisubrl
inc
sbb
sub
push
cltd
cmc
data16
repz
test
lods
hlt
test
enter
mov
std
or
jo
mov
rcrl
cmp
xchg
aad
imul
sub
dec
inc
push
pop
cmp
mov
dec
sarb
test
stc
or
sbb
cmp
lock
xchg
pop
mov
insl
test
push
jbe
daa
and
push
jnp
leave
adc
pop
push
or
push
push
mov
push
std
cmpsb
sbb
xor
outsl
xor
sbb
daa
push
and
cli
jne
dec
dec
xor
add
lret
and
sub
add
dec
pop
test
push
push
and
push
scas
add
mov
mov
adc
jae
mov
cmp
add
mov
out
loope
pop
pop
cmp
setae
push
xchg
gs
stos
adc
leave
mov
popf
ss
dec
xchg
sbb
dec
dec
clc
out
iret
xchg
cld
pushf
out
or
lahf
aam
push
cltd
stos
cs
fcmovnbe
mov
cmp
jmp
adc
and
andl
xor
sahf
enter
xchg
sub
push
push
ljmp
pop
and
subb
push
or
out
fwait
cli
test
jne
hlt
lcall
mov
push
xor
sbb
cmpsl
divb
loop
push
jno
mov
aad
add
sub
jbe
pop
cmp
xlat
xchg
mov
dec
pop
imul
lods
pop
iret
adc
imul
pop
mov
and
jno
cmp
mov
test
clc
cmp
jge
push
in
pop
repnz
xchg
jb
dec
or
arpl
ss
sahf
dec
push
fists
push
xor
dec
lods
fnstenv
sarb
addr16
inc
xor
mov
jmp
fsts
inc
sbb
dec
mov
mov
lret
inc
xchg
cmp
jg
push
andb
inc
dec
push
pop
sbbb
mov
mov
or
imul
or
dec
dec
les
aam
mov
sub
cmp
and
in
add
shl
pusha
or
pop
test
dec
outsb
cwtl
fistl
jmp
sahf
xchg
sbb
pushf
mov
cltd
enter
push
inc
inc
test
data16
in
ret
add
in
aad
addb
mov
loopne
lret
cmc
jnp
fmuls
ret
movsb
jns
jp
mov
pop
shlb
xor
fisttps
mov
dec
lahf
pop
add
pop
lea
ss
mov
mov
dec
es
add
mov
cmp
jp
rolb
fiadds
pop
int
lea
mov
cmp
sbb
aas
add
aam
or
adc
je
dec
push
test
and
push
hlt
sbb
push
pop
or
mov
jnp
push
sti
inc
push
jbe
rclb
out
dec
xchg
lret
ret
insb
pop
inc
addr16
imul
rcrb
adc
lods
adc
xor
push
loopne
inc
sub
mov
mov
push
mov
les
rorl
cmp
adc
cwtl
popf
jns
ds
dec
lahf
mov
fbld
xchg
lahf
or
pop
fiaddl
and
test
xlat
lret
adc
mov
mov
mov
pop
mov
aam
bound
xchg
mov
not
xchg
jo
xchg
and
or
js
push
dec
les
fbstp
xchg
jge
xor
outsl
jno
pop
inc
mov
inc
jb
pop
daa
scas
pop
pop
xor
movsb
pop
fmul
lods
shl
adc
in
xchg
adc
int
scas
lods
int3
dec
int3
xor
adc
dec
notb
mov
xchg
or
aam
push
add
aam
mov
arpl
movsb
stos
jp
cltd
xchg
popf
dec
pop
fcmovnu
jno
xor
das
xchg
ja
cmpb
adc
sub
aam
mov
jmp
into
popf
call
mov
mov
stc
ljmp
sub
cld
lock
xor
bound
sbb
mov
fiadds
aam
xchg
jae
popa
or
jbe
push
scas
popf
sub
adc
or
inc
pushf
movl
adc
inc
testl
movsl
sbb
xchg
sbb
lret
fistpl
dec
inc
movsb
sub
test
cmp
scas
sbb
dec
scas
mov
pop
fdivs
pop
call
xchg
subb
jecxz
out
hlt
jmp
pushf
lret
imul
dec
adc
add
sarb
arpl
xorb
pop
pop
mov
jl
mov
pop
stos
movsl
cmp
adc
cltd
xchg
jg
sub
push
addr16
and
xor
xchg
or
jns
add
inc
stos
test
nop
sub
shr
mov
loop
rclb
cld
lock
mov
mov
mov
xlat
xchg
testl
ret
imul
xchg
std
dec
push
xor
aad
inc
mov
jo
push
das
mov
add
push
push
pop
sub
lret
in
mov
sarl
sbb
push
lret
hlt
mov
xchg
cltd
sti
and
fildll
push
stos
adc
sub
inc
lods
or
gs
adc
push
mov
aas
in
rcll
shrl
sub
lcall
jne
cmp
js
sub
sbb
cli
mov
out
daa
sahf
clc
push
mov
push
in
mov
sub
mov
cltd
lds
testb
movsl
mov
push
test
into
mov
in
push
lret
nop
push
fbstp
into
inc
push
aaa
jb
adc
mov
hlt
dec
push
sub
jmp
test
pop
ja
mov
mov
cmp
dec
pop
inc
dec
or
mov
xor
aas
dec
std
test
push
mov
bound
fidivl
and
in
and
pusha
test
push
das
arpl
imul
xchg
inc
lds
xor
xchg
dec
js
mov
imul
sub
sub
rorb
roll
hlt
inc
popa
sbb
mov
rcrl
push
sarl
jns
shlb
add
jmp
xchg
jb
addr16
movsl
or
jle
shlb
sub
js
mull
shlb
dec
jne
aam
jae
sub
repz
minps
and
in
fsubs
adc
xchg
jg
jge
and
and
pop
jmp
xlat
push
cmp
mov
out
dec
pop
push
int3
and
notb
mov
push
incl
xor
in
dec
lds
cltd
inc
ds
sbb
fidivl
pop
mov
inc
icebp
stos
inc
or
jnp
mov
xor
les
inc
movsb
cs
ss
sub
in
mov
dec
std
call
sarl
sbb
jmp
push
push
ljmp
and
stos
sub
fcom
jmp
mov
xchg
push
into
mov
push
or
mov
jno
pop
movsb
hlt
push
dec
push
aad
cmc
hlt
sarl
and
test
mov
pushf
add
into
sub
js
inc
cmp
jmp
adc
fld
insb
es
insb
mov
cmc
push
lock
out
mov
lock
shl
inc
cmp
lret
cmp
xor
into
out
xorl
xchg
jb
dec
and
ds
cmp
pop
out
jge
push
pop
and
pop
sub
pop
cld
and
xlat
cmp
xchg
xchg
movsl
addr16
jg
mov
adc
lret
add
stos
nop
shll
mov
loope
into
push
js
jo
inc
out
cmp
add
mov
mov
push
xchg
jns
sub
ja
adc
in
xchg
js
cmp
pop
or
sub
xor
push
bound
mov
xchg
mov
fisubrs
mov
jnp
pop
inc
push
jae
insb
es
notb
sahf
enter
btrl
cmpsb
push
pop
fiadds
mov
sbb
jecxz,pn
je
dec
cmp
add
sub
rolb
lods
xchg
out
mov
jnp
in
mov
inc
mov
dec
test
add
ss
adc
jge
or
pusha
or
add
icebp
push
mov
cmp
icebp
push
mov
inc
pushf
push
or
insl
push
mov
push
leave
out
add
inc
es
jne
nop
je
and
loop
lods
mov
xor
cmp
pop
lea
cwtl
ljmp
mov
pop
or
addr16
jnp
mov
sarb
jl
lret
int
adc
cltd
fwait
test
pop
adc
sbb
frstor
test
jp
jp
repnz
and
mov
insl
sbb
mov
cwtl
outsb
mov
cli
push
stc
sub
jle
cmp
mov
xor
jo
ficomps
pop
lods
mov
adc
sbb
stos
pop
jb
xor
xorl
aam
in
sbb
andl
out
in
test
mov
push
push
mov
bound
repz
test
pop
inc
in
cmp
cmp
popf
roll
mov
mov
fadd
cmp
xor
cmpl
sbb
push
lock
jo
hlt
lcall
jae
pop
lcall
ds
lret
inc
adc
repz
xor
cmp
out
faddp
jnp
jle
pop
div
sahf
dec
das
sbb
push
mov
js
ljmp
mov
mov
add
imul
fcompl
js
mov
xchg
mov
pop
mov
aas
call
in
or
lds
mov
mov
insb
repz
jmp
daa
sub
mov
hlt
nop
sub
call
adc
addr16
hlt
mov
popf
inc
add
mov
push
mov
xchg
or
xor
or
sub
xor
lahf
negb
adc
cmc
pop
and
dec
dec
repnz
xor
mov
mov
scas
xchg
mov
lods
pusha
push
hlt
mov
bound
xchg
dec
and
aas
push
pop
mov
mov
das
mov
sbb
arpl
xor
push
jge
jp
fnstsw
and
bound
outsb
adc
imul
or
mov
daa
mov
jno
xor
fnstsw
mov
enter
push
cmc
add
enter
xchg
cs
out
xchg
insl
enter
mov
push
out
pop
xchg
cmp
mov
push
int3
sbb
call
or
jae
adc
mov
xchg
xor
sbb
push
fldenv
fldenv
cltd
ret
addr16
xchg
popf
subl
pop
outsb
cmp
lahf
enter
sbb
mov
sub
dec
cmpsl
stc
adc
addr16
cli
dec
lds
imul
sub
mov
mov
xor
scas
pop
pusha
and
adc
and
outsl
jne
cmovl
nop
mov
add
int3
mov
das
push
ljmp
sbb
loopne
pop
inc
adc
int
dec
jae
or
or
stc
xor
nop
nop
iret
popf
shrb
dec
push
ret
mov
out
clc
stos
ret
enter
push
sbb
icebp
out
sahf
cld
jge
sbb
repnz
pop
mov
mov
rclb
loope
js
pop
call
test
or
cmc
leave
std
iret
cwtl
sub
push
cmpsl
out
imul
loop
sti
or
push
mov
stc
pop
loopne
test
adc
mov
xor
lcall
or
sbb
inc
inc
loop
rcrb
add
adc
sbbl
bnd
aam
mov
cmc
int3
or
daa
jae
jae
push
lods
subl
fldt
mov
jl
pusha
jno
mov
mov
add
push
test
add
pop
enter
jb
aam
ret
or
xchg
and
popf
jno
cmc
push
add
cmp
dec
dec
rorl
dec
pop
mov
dec
jle
jo
cltd
push
shll
push
push
bound
jns
xchg
pop
test
add
sbb
adc
adc
add
pop
mov
lretw
jle
test
adc
cli
add
into
lds
mov
add
mov
aaa
sub
xchg
imul
xor
icebp
push
add
leave
sub
dec
push
and
out
es
cmp
jg
imul
stos
dec
or
pop
pushl
das
lcall
jl
ret
jnp
ss
push
mov
mov
or
and
xchg
mov
sub
mov
ds
pop
orb
pusha
das
sub
aas
mov
dec
icebp
sub
idivl
shll
imul
pushf
inc
sub
jmp
inc
pop
xor
xchg
adc
push
pslld
loopne
lcall
mov
lea
inc
jge
adc
and
dec
repz
aas
hlt
scas
leave
fidivs
jge
mov
mov
daa
sub
xchg
mov
fwait
push
push
lahf
sub
mov
sahf
js
or
add
jmp
out
cmpb
add
mov
fwait
shll
out
and
push
mov
mov
jecxz
adc
jle
jo
loop
mov
out
cmp
rorl
out
xor
je
cmc
push
xchg
sahf
and
cmpsb
dec
xchg
xchg
jl
cs
jbe
movsl
push
sbb
mov
aad
jo
jl
adc
cwtl
push
or
aaa
sub
push
lods
nop
xor
pop
cmpsl
sti
fwait
add
mov
das
or
xor
cltd
insl
mov
fadds
lods
and
aaa
repnz
cs
icebp
stos
xor
and
cmp
icebp
mov
mov
lret
xor
fxtract
in
mov
jge
pop
sub
sarb
push
lock
mov
test
cmp
pop
stos
xor
dec
nop
popa
push
fcmovnb
loope
mov
sub
stos
jl
in
push
fs
imul
push
lock
sub
in
std
lret
adc
lods
ficoms
cli
movsl
mov
es
jne
gs
cmp
scas
fs
push
sub
jb
lock
mov
dec
pop
fs
lods
in
adc
mov
js
and
pop
ror
mov
sahf
dec
in
pushf
stos
sbb
int3
sub
mov
push
xchg
jl
mov
dec
and
shll
sbb
movb
dec
mov
dec
sti
fadds
pcmpgtd
or
cmpsl
pop
or
cli
mov
push
or
pop
mov
jge
pop
orb
decl
out
sub
rcr
cmp
pop
ret
push
dec
jno
decl
dec
inc
pop
sbb
pop
jae
imull
dec
pop
dec
xor
xchg
ja
or
jae
sub
mov
mov
adc
xchg
sbbl
sbb
dec
addb
inc
xchg
dec
js
xchg
push
inc
leave
xor
xor
xchg
out
lret
mov
scas
in
cmp
aas
fwait
jno
sbb
sub
mov
add
jecxz
int3
pop
outsl
push
daa
addr16
fiadds
mov
xor
push
jo
fs
es
loop
jae
fstpl
fnstsw
adc
aaa
pop
test
push
push
mov
or
icebp
out
add
or
or
loope
xlat
pop
into
rolb
add
mov
add
jb
ret
test
addl
js
imul
inc
inc
or
xchg
es
dec
sub
mov
and
out
scas
mov
je
dec
dec
mov
mov
mov
ja
jne
push
xchg
cld
pop
scas
bound
repnz
es
jae
add
lret
xor
push
adc
add
cmpsl
sbb
clc
in
push
rcrl
sub
mov
add
clc
mov
hlt
repnz
and
push
js
mov
pop
xor
mov
adc
xor
fcmovnb
sbb
in
leave
iret
mov
xchg
push
mov
or
arpl
and
mov
dec
push
outsl
ss
loop
data16
pop
push
jle
or
out
inc
xor
lods
test
dec
fnstcw
push
aam
add
push
fisttpll
dec
mov
cli
sub
call
pusha
test
imul
pop
and
ja
pop
nop
pop
inc
out
ss
aad
or
lret
out
daa
cmp
movsb
or
xchg
xchg
int
jb
sub
xchg
leave
dec
push
mov
bound
xchg
fwait
xor
pusha
sbb
xchg
xlat
dec
jns
je
jmp
int3
mov
sub
insb
ret
jne
inc
int
scas
aaa
mov
xchg
mov
outsl
jp
pop
xlat
sub
adc
push
xor
int
inc
push
fcmovb
pop
or
cli
dec
xor
and
out
mov
sbb
cmp
cmp
jo
mov
inc
push
adc
pusha
or
ja
jne
sub
ss
inc
jp
sarl
jnp
adc
adc
cmp
jno
or
mov
sbb
xor
adc
enter
fdivs
imul
insl
int
inc
test
xchg
pop
js
in
sbb
push
es
test
test
andb
in
dec
insb
mov
dec
rolb
cmp
ret
push
iret
and
les
mov
fimull
xchg
into
dec
out
pushf
xor
lret
mov
fidivs
jge
popa
stos
pop
jb
cltd
dec
js
adc
je
scas
fiaddl
test
xchg
sub
enter
fnsave
pop
adc
pop
negl
cmp
sub
push
popa
xchg
xor
xlat
xchg
dec
std
fcomps
ja
xchg
xor
in
fistl
test
mov
sub
pop
sub
inc
popl
xor
test
cmp
jmp
add
in
jp
flds
and
adc
dec
stos
daa
sbb
in
into
xor
push
movlps
xor
sti
inc
and
inc
shll
inc
adc
in
fistpll
push
fnstenv
imul
jne
call
mov
into
adc
imul
imul
or
push
mov
arpl
popa
lods
lods
mov
test
shrb
in
js
xchg
xchg
iret
adc
mov
in
xchg
cmc
or
xor
cmp
les
in
movsb
stos
xor
stos
test
mov
push
int3
pop
sub
pop
add
add
or
adc
dec
mov
arpl
inc
pusha
stos
adc
lret
jns
cwtl
sti
lahf
xchg
loopne
imul
mov
imul
xor
int
push
adc
dec
bswap
cmc
imul
movsl
or
stos
cmp
push
adc
sub
pop
mov
sbb
stos
inc
dec
pop
jbe
add
shl
mul
and
leave
mov
sar
and
sbb
popa
push
jmp
adc
jno
pop
aaa
and
out
shrb
cltd
inc
lcall
lret
xchg
jl
add
loopne
xlat
out
nop
and
mov
xor
mov
or
ja
mov
jmp
outsl
jbe
sbb
ret
pop
ljmp
mov
sbb
shl
push
scas
mov
aas
int
mov
add
pop
push
cwtl
jmp
jp
xchg
out
dec
pop
inc
push
cs
push
outsb
je
mov
loop
lret
stos
push
mov
sarb
adc
scas
mov
psubb
mull
pop
ficoml
rcr
loop
scas
inc
add
add
and
das
cltd
inc
stos
cwtl
pushf
in
out
sbb
sbb
pop
pusha
mov
cmp
jp
ljmp
sbb
es
lods
pop
mov
xor
stc
xor
ds
cvttps2pi
test
xor
out
cmp
push
inc
call
pop
sbb
mov
movsl
loopne
aaa
dec
ss
call
popl
in
cld
mov
aad
rcrb
inc
lock
pop
pop
call
pop
push
mov
aaa
mov
outsb
mov
imul
or
lahf
lret
fadds
outsb
mov
mov
aaa
push
lods
adc
sbb
mov
and
rcl
xor
int3
pop
clc
fsubrp
es
cld
mov
cmp
add
sub
stos
subb
cld
sub
fwait
inc
adc
stos
add
xlat
cli
push
loop
hlt
aas
out
push
inc
jb
cmp
les
push
das
test
rolb
jb
test
dec
dec
sub
out
lods
sbb
cmp
fistpll
ret
push
aaa
std
lahf
inc
xchg
mov
ret
out
inc
inc
ss
dec
cmp
dec
leave
pushf
dec
fdivl
adc
and
xchg
mov
pop
test
add
aad
xor
pushf
xchg
or
je
lds
mov
xchg
and
mov
mov
addb
dec
pop
leave
cmp
dec
jge
outsl
ja
mov
mov
ret
repz
lods
mov
dec
jmp
push
in
xchg
dec
inc
jecxz
mov
push
stos
push
mov
fistpll
adc
dec
add
outsl
iret
insb
dec
xor
outsb
bound
subl
stos
aad
in
pushl
icebp
mov
lds
inc
mov
cmp
xchg
sti
lea
dec
test
jp
push
lahf
icebp
test
mov
and
or
ja
les
mov
hlt
jno
mov
pop
mov
jl
jle
cmp
shll
xor
mov
test
les
movl
inc
mov
mov
lds
popa
stc
ja
pop
mov
or
mov
repnz
out
inc
xchg
or
arpl
cmc
mov
jbe
jo
scas
xor
add
xchg
mov
cmc
adc
push
jmp
inc
insl
mov
mov
outsl
lret
fwait
dec
mov
jmp
xchg
subl
rolb
dec
push
into
and
dec
pop
lds
xchg
lret
incl
mov
inc
repz
push
xlat
inc
add
sub
xor
icebp
movsl
jmp
stos
push
add
push
popa
dec
pushf
sbb
test
idivb
mov
mov
dec
psubusb
mov
adc
movsb
adc
sti
popf
out
fwait
aaa
xor
jbe
nop
add
inc
test
push
inc
push
push
jb
repz
scas
ss
mov
scas
and
xor
popa
mov
cmp
cmp
aam
pop
test
jle,pt
cli
inc
cmp
fcomi
mov
popf
push
xchg
pushf
rorb
outsb
sbb
movsb
mov
xchg
hlt
sub
cmpsb
jle
or
pop
data16
push
ds
cmp
push
aas
sbb
xchg
pop
int3
lods
repnz
add
dec
jns
add
pop
cltd
push
pop
loop
mov
mov
ret
jns
in
mov
ret
mov
nop
sbb
xlat
jno
rcll
jecxz
sub
xor
and
cs
cli
out
loope
cli
repz
sub
bound
inc
sbb
pop
mov
test
cmc
pop
and
pop
ret
int
cmp
push
add
inc
sub
mov
push
pop
dec
cmpsb
push
js
xchg
rcrl
inc
das
rcll
and
add
pop
dec
xor
in
dec
jecxz
push
xlat
lods
xchg
in
fstp
sahf
lds
data16
add
or
add
dec
jne
sbb
mov
jg
pop
and
les
jl
push
pop
rorw
push
xchg
mov
xor
cmp
leave
mov
push
nop
dec
push
push
repz
add
scas
and
pop
fstpt
fcompl
sti
jl
mov
rclb
aam
mov
fcoml
fwait
lds
inc
sbb
adc
push
stc
pop
rorb
movsl
xchg
hlt
pop
jae
or
mov
jae
in
aad
aas
test
jl
xlat
fildl
mov
in
cmp
mov
xchg
dec
and
pcmpeqd
cwtl
jno
mov
xchg
lcall
outsb
dec
ret
and
int3
es
les
cs
decl
or
hlt
sub
sbb
cmc
in
add
push
add
cmp
stos
out
mov
das
xor
pop
in
into
push
push
xchg
push
cs
movsl
imul
data16
mov
sub
push
cld
jne
mov
out
dec
pop
pop
cmc
fisttps
mov
jp
mov
push
cmp
jnp
inc
cs
xorl
jae
repz
push
sti
lahf
xchg
outsl
jno
or
sbb
jecxz
inc
and
inc
jl
es
lcall
or
cmp
pop
bound
cmc
cmc
ja
jns
or
mov
cmpsl
sub
es
out
rcrb
xchg
lods
dec
cmp
adc
xchg
int3
push
pop
pop
cmp
mov
fdivl
in
inc
adc
lods
mov
xor
icebp
pop
arpl
insb
push
lock
mov
or
insb
pop
out
xchg
pop
nop
jmp
add
test
loopne
mov
pop
adc
lods
cmpsl
and
cli
sbb
pop
push
lahf
mov
je
cmp
push
mov
fcmovnb
roll
aas
fucomip
hlt
cmpsb
push
mov
sbb
push
mov
jmp
jle
xchg
lahf
loope
jg
mov
outsl
dec
xchg
punpckhdq
sub
add
cmp
sub
repz
jne
pop
and
leave
jne
lret
bound
cmp
push
addb
sub
pop
out
sbb
fldcw
ja
in
sar
mov
jno
std
pop
popa
popf
and
and
out
dec
xor
je
cmp
mov
outsl
push
push
daa
out
rcll
push
fsub
sbb
sbb
push
push
push
mov
scas
sbb
nop
add
ljmp
mov
pop
pop
lds
sar
pop
pop
pusha
xor
and
jbe
dec
jmp
xlat
lret
aad
mov
mov
jb
pop
cmpsl
cld
xchg
stos
sub
stc
or
xchg
jge
mov
xor
inc
xor
mov
aam
fwait
rcrb
pushf
or
test
les
adc
enter
and
popa
mov
xchg
mov
outsl
jno
cwtl
das
out
lahf
xor
stos
repz
movl
sbb
sub
sub
jp
lods
rcrb
mov
rep
mov
sub
out
or
inc
mov
test
jmp
fs
ljmp
push
xlat
out
jl
ljmp
insb
mov
pop
xchg
jmp
lock
dec
push
scas
idiv
jb
dec
dec
mov
call
push
cs
mov
stos
mov
inc
push
jnp
xchg
and
fbld
dec
mov
mov
fdivp
inc
pop
mov
pop
pushf
cmp
mov
lcall
mov
aas
pop
and
in
jecxz
xorl
push
or
cmc
push
mov
sbb
out
clc
mov
xor
dec
inc
stos
out
cmp
cmc
cltd
mov
inc
sarl
out
jne
bnd
jnp
add
sbb
mov
mov
int
jns
nop
ja
or
xor
in
or
cmp
lret
push
inc
ret
stos
mov
adcl
test
add
pop
mov
dec
cmovae
ds
jb
dec
jge
out
ljmp
adc
sbbb
jmp
repnz
fldt
in
call
aas
cmp
push
aam
shll
jnp
aad
aad
and
les
mov
test
and
xchg
adc
rolb
negl
fs
ljmp
inc
sbb
jne
sub
test
mov
insl
add
cld
xchg
fisubs
aad
pop
outsb
sbb
jne
out
cmp
sub
cmpsb
push
pop
dec
sub
int
xchg
dec
cmpsl
negb
in
jle
add
dec
repz
cmp
cmpsl
mov
test
stc
leave
jno
lahf
repz
lret
pop
fnsave
and
pop
pusha
ret
push
in
js
cmpsl
je
inc
cmc
je
jns
xchg
lret
loop
shlb
pshufw
add
int3
sbbl
pop
test
and
pop
orb
lcall
adc
adc
mov
jge
int
fdivr
push
fdivs
inc
jle
mov
enter
push
jae
and
xchg
or
stos
rorl
push
pop
dec
ret
adc
xchg
bound
or
leave
jge
cli
push
icebp
fnstenv
xchg
inc
bound
and
enter
mov
pop
je,pt
sbb
cwtl
cld
out
stc
inc
xchg
push
push
inc
inc
xchg
insl
mov
add
loopne
sbb
hlt
add
int3
or
dec
push
imul
int
shll
or
cmp
cmc
jo
loope
jmp
lret
addb
fisubrs
jl
aam
or
mov
into
aas
loop
sti
jg
sub
and
iret
push
and
scas
loop
sbb
ljmp
push
pop
loop
mov
cmp
imul
stc
loopne
sub
fsub
fs
fiaddl
cmpsb
aas
push
inc
je
and
add
jne
scas
out
out
clc
roll
xor
loop
push
es
mov
lahf
jl
loope
popa
dec
cmp
clc
pushf
jle
int
jnp
push
sti
xchg
out
adc
hlt
xchg
rcl
lret
xchg
mov
das
inc
xchg
pop
out
movsl
popf
out
outsl
xchg
push
insb
call
clc
mov
icebp
xchg
or
out
inc
and
xor
add
jns
and
stos
xor
adc
xchg
mov
fwait
clc
daa
lea
inc
les
aas
lcall
faddl
and
sti
cs
push
add
xchg
sub
jo
push
orb
rcrb
push
jne
sahf
cs
fdivrl
shrb
lock
mov
rol
in
subb
pusha
lret
fmulp
jb
jl
cwtl
inc
pop
mov
or
xor
jmp
and
pop
dec
sar
fmulp
mov
lods
or
aaa
rcr
popf
scas
push
dec
jne
stos
jae
mov
xchg
sub
nopl
push
xchg
cmp
mov
mov
lds
aas
lcall
cld
jns
cltd
or
mov
xchg
fsubs
push
iret
mov
lret
inc
movsb
sarb
mov
pop
cmpsb
aad
sub
les
test
adc
dec
out
add
jae
pop
fnstsw
xchg
insl
lret
pop
pop
jg
cwtl
push
les
lods
cltd
xlat
test
add
ja
mov
fwait
jbe
mov
es
imul
loopne
cmp
jmp
jp
dec
cli
jl
int
push
hlt
pop
outsb
mov
pushf
xchg
pusha
cld
cltd
cltd
pushf
pop
xchg
jae
and
inc
icebp
lret
inc
jmp
push
jno
xor
dec
add
pop
test
push
fmuls
stos
xchg
cmp
icebp
inc
inc
and
xchg
fcomps
sbb
xor
xchg
js
shrl
push
jecxz
in
repnz
test
outsl
fucom
add
and
test
sbb
ljmp
into
outsb
std
and
pop
pop
sub
sub
xchg
mov
jmp
add
repz
xchg
arpl
xchg
imul
xchg
movsl
or
xor
sbb
dec
test
mov
and
and
adc
pop
add
popf
and
icebp
push
call
adc
or
aam
icebp
mov
lret
aas
sub
and
sbb
sub
negb
js
cmp
xchg
jne
and
and
lret
push
nop
fistps
and
leave
jne
mov
xorl
cmp
jb
out
daa
inc
rcl
pop
mov
inc
fstpt
dec
sub
push
inc
insb
fisttpll
pushf
xchg
xchg
cmpl
arpl
andb
daa
push
push
xchg
adc
xlat
into
inc
or
and
or
and
mov
in
sub
jmp
js
add
dec
lods
cld
into
cmp
stc
outsl
jnp
negb
pop
mov
sub
dec
mov
aaa
or
loop
aam
xchg
add
xor
or
adc
aam
sbb
std
iret
insb
cltd
scas
mov
inc
lods
pop
add
iret
int3
in
in
xchg
xchg
or
mov
and
and
rcr
lret
dec
xchg
out
push
mov
movsb
push
mov
fisttps
jb
verw
ds
push
xchg
scas
jnp
adc
xchg
adc
das
aad
aam
inc
in
mov
sub
dec
pop
fsts
rol
test
aaa
or
lret
shrb
jecxz
xor
pop
or
fnsave
popa
scas
lret
out
insb
cmp
push
out
mov
xchg
shlb
fistpl
int3
loop
ljmp
fistl
pop
shrb
addr16
add
sbb
cmp
dec
xor
add
repnz
mov
mov
adc
hlt
in
shlb
lods
call
shrb
mov
jo
roll
sti
xor
inc
ret
or
lods
and
pop
lret
inc
adc
dec
inc
cmp
sub
inc
sbb
cmp
les
add
cmp
call
sub
fbstp
adc
int
je
jnp
out
das
mov
xchg
lea
mov
jbe
ss
outsl
bound
pop
repnz
add
stc
fwait
sti
add
sub
test
popf
pop
push
dec
fsubr
cli
sbbb
clc
dec
dec
outsb
mov
lcall
jp
dec
dec
jns
xchg
mov
data16
mov
psubsw
cmpb
jnp
pop
adc
inc
icebp
inc
movsl
clc
pushf
xchg
in
mov
cmp
repnz
or
lcall
cmc
insl
std
cmp
mov
gs
push
sbb
inc
fiaddl
frstor
pop
not
xchg
int
inc
imulb
or
xchg
jge
ret
inc
push
insb
ret
jae
dec
adc
jmp
jns
cmp
outsb
jmp
or
mov
cmp
add
in
mov
push
add
jno
mov
add
jle
push
xchg
pushf
mov
dec
jl
pop
jmp
les
outsl
push
mov
xchg
fwait
es
mov
es
inc
mov
enter
loopne
fs
jp
pop
jge,pn
dec
sub
xchg
or
push
push
aaa
sub
mov
mov
mov
pop
add
xchg
and
lret
in
mov
fsubl
adc
xor
jge
adc
into
mov
cwtl
movsl
xchg
bound
movb
xchg
gs
in
xor
or
arpl
loop,pt
es
dec
mov
inc
inc
inc
stos
xor
imul
pop
hlt
inc
inc
mov
cwtl
sbb
sbb
fnsave
leave
cmp
inc
pop
adc
mov
mov
loope
xchg
add
aaa
push
iret
xor
xchg
movsl
addr16
dec
outsb
push
push
pop
xlat
or
mov
sub
aam
pop
movb
cli
sub
sbb
push
sbb
nop
adc
in
repnz
bound
lods
lahf
in
bswap
mov
lock
lock
ljmp
cmp
loopne
jmp
jge
xor
test
fsts
lods
fnstsw
iret
call
stc
xchg
mov
adc
cli
subb
lea
push
xor
jne
dec
iret
push
mov
stc
sub
xchg
cmp
inc
fadds
adc
mov
sub
add
xchg
dec
push
jae
adc
rorb
add
xor
out
pop
xor
jl
push
fwait
in
cs
ja
jns
dec
fwait
push
lret
sub
decb
lea
es
mov
xor
pop
hlt
sbb
popf
jne
out
push
push
les
inc
add
or
clc
sbb
lods
adc
adc
movsl
fldcw
jle
lods
push
ss
scas
stos
pop
ret
imul
iret
push
lcall
inc
mov
jecxz
cmp
or
jmp
stc
or
add
jo
scas
dec
ret
cmp
mov
dec
jle
ret
fstpl
cltd
xchg
jno
cli
aad
dec
out
out
add
cmp
and
pop
ret
xor
in
arpl
lds
daa
cmp
xchg
aad
outsb
adc
shll
cmpb
mov
mov
pushf
pop
pop
dec
dec
push
mov
mov
movsl
push
scas
ret
pop
aad
out
sub
jmp
dec
or
sub
dec
pop
imul
movsl
or
scas
push
mov
in
cwtl
js
and
push
rep
or
sbb
shlb
ja
and
xchg
sbb
xor
mov
out
clc
ds
mov
in
stc
jne
adcb
in
enter
rorb
dec
and
xchg
jp
scas
rcll
cmp
fsubs
insb
das
repnz
sub
mov
push
xorl
lret
xor
xchg
mov
out
cmp
cmc
push
or
mov
mov
daa
mov
cmpsb
mov
lea
mov
adc
je
cmc
dec
enter
mov
repnz
pop
aad
push
les
mov
lret
push
aam
lds
and
push
rolb
sahf
inc
sub
jne
sub
rcrb
or
or
pop
mulb
jle
push
sub
mov
push
shrb
mov
cli
dec
popa
repnz
fs
fs
mov
es
lock
rclb
push
into
cmp
sub
call
pop
xor
loop
ja
icebp
sti
push
nop
int
xor
jae
lods
pop
jno
lret
test
out
and
insb
mov
mov
nop
jmp
scas
sahf
cmp
jl
pop
cs
arpl
inc
stc
adc
mov
aas
inc
inc
push
sbb
xchg
aad
orb
lock
cmpsl
out
je
xor
jl
out
test
push
adc
mov
add
xchg
jae
imul
xor
xchg
inc
popf
xor
mov
push
rorb
inc
or
xor
mov
jge
jle
pop
les
fldt
pop
cltd
mov
push
mov
movsb
popf
stos
sub
mov
lret
add
loop
mov
popf
mov
into
mov
es
add
add
mov
push
leave
sti
add
or
std
js
or
out
outsl
into
enter
movsl
lahf
sub
sub
lret
mov
das
add
cwtl
dec
mov
stos
mov
xor
addr16
sub
add
imull
call
rcrb
jl
and
int
mov
lock
iret
mov
out
andl
sbb
gs
and
and
and
das
test
xchg
mov
sub
dec
mov
pop
adc
sti
dec
adc
and
insb
fld
mov
push
int
cmp
sahf
xorb
mov
inc
insb
or
ds
adc
mov
loopne
cmc
adc
and
outsl
stc
add
mov
lret
mov
mov
or
fcoms
pop
inc
cmpsl
cmp
shl
mov
fdivp
lcall
loopne
and
enter
jecxz
fnstenv
mov
mov
cmp
push
mov
and
out
inc
xor
sbb
inc
ss
xchg
imul
aas
add
jle
inc
iret
lcall
addl
shl
cmp
push
and
mov
popa
xchg
jb
stos
push
lock
dec
fldt
pop
idivl
xor
insl
lret
aam
inc
lds
mull
push
mov
or
jmp
incb
sbb
inc
and
cmpsb
and
sub
dec
or
nop
vpsrad
sub
movsb
iret
cmp
clc
mov
daa
or
mov
mov
or
enter
js
bound
mov
push
inc
xor
mov
push
hlt
dec
mov
movntq
push
jmp
test
push
dec
jp
and
pop
inc
mov
pop
cli
insb
aaa
js
bnd
push
cmp
jae
data16
outsl
jecxz
notl
shl
mov
aam
loopne
clc
fidivs
dec
addr16
jbe
dec
and
dec
sahf
inc
stos
insb
dec
and
dec
ja
cmpsb
ljmp
psubusb
sti
addb
mov
add
inc
pop
fsts
imul
je
xor
popf
ds
ss
pop
mov
fmuls
data16
mov
lea
cmp
scas
in
mov
sbbb
cmpl
fistps
sahf
stc
cli
movsb
push
lea
jl
jno
cmp
mov
clc
out
dec
mov
cli
fcomp
jo
sbb
imulb
enter
ficoms
and
cmp
lret
push
lret
int3
push
sbb
mov
sbb
jp
in
cmp
xor
ffreep
leave
cmp
add
xchg
fmuls
imul
sarb
inc
mov
inc
fisttpll
leave
cs
jnp
cmp
pop
idivb
and
push
mov
dec
pop
aad
pop
mov
cmpsb
inc
mov
faddl
xchg
push
push
clc
mov
push
fnsave
sbb
pop
pop
mov
lret
into
add
lea
jl
mov
xlat
sahf
mov
or
std
inc
std
push
rcrl
daa
pop
rorl
pusha
fucomip
add
dec
imul
jns
jle
push
pusha
ret
push
into
loop
jmp
and
jg
push
or
icebp
fldt
push
mov
xor
loop
cltd
cs
sub
inc
and
ljmp
pop
ljmp
sub
push
negb
out
scas
and
xor
adc
push
jne
cmp
jl
aad
iret
ja
imul
mov
sbb
gs
or
lret
cmc
cmp
dec
ljmp
xchg
xchg
sti
mov
imul
fwait
insb
bnd
femms
or
xor
popf
xchg
mov
cld
je
xor
cmp
dec
lock
sbb
pop
xchg
inc
dec
std
mov
out
jle
xor
add
cli
mov
dec
mov
inc
lods
scas
cld
and
inc
jo
cs
lods
push
cmc
mov
dec
lret
cltd
sub
aas
adc
out
mov
cltd
sbb
xchg
adc
add
cmp
add
inc
jb
adc
pushf
in
lret
ja
pop
mov
fldcw
mov
test
sub
addl
insl
loope
fwait
or
or
push
aas
pop
les
sbb
jmp
xchg
mov
inc
push
pop
sub
or
sti
sub
xor
sub
andl
pavgw
mov
rol
sbb
hlt
push
hlt
adc
jb
orl
jge
insb
daa
shll
ret
jne
std
mov
neg
imul
lds
push
xchg
xorb
in
xchg
push
mov
shlb
sub
mov
rolb
mov
or
inc
xor
cmp
jp
inc
lods
daa
in
divl
xlat
jmp
outsl
cmpsl
inc
pop
mov
mov
or
out
mov
fwait
push
adcl
add
push
loopne
imul
adc
push
and
xor
push
jmp
push
pushf
xchg
loope
push
sub
xchg
inc
nop
cmpsl
jge
insl
push
ja
add
push
or
cli
xchg
sub
dec
xor
mov
push
ror
pop
or
cwtl
int3
nop
mov
enter
mov
mov
shll
jg
arpl
sub
adcl
loope
rolb
lods
hlt
int3
test
push
xlat
push
sub
pop
sbb
out
dec
cs
movsl
test
xchg
and
jmp
inc
adc
scas
xor
adc
inc
roll
push
out
mov
inc
cmpsb
mov
mov
inc
and
jle
lods
jp
scas
frstor
aas
es
loope
add
lahf
cmpl
test
adc
jg
and
push
div
adc
jg
lods
je
cmp
mov
test
mov
mov
repz
test
fs
cmpsb
lret
mov
inc
inc
fchs
imul
popa
and
pop
mov
or
js
shll
xchg
cli
in
jg
push
jb
jae
mov
int
sti
je
sub
test
test
push
push
stc
stos
ds
mov
mov
cmp
push
inc
mov
aad
pop
pop
int
pop
lea
fisubrs
sub
jmp
push
dec
sub
or
inc
add
pop
out
cmp
xchg
cmp
cltd
in
data16
pushl
mov
push
inc
loop
sti
mov
outsl
xor
ja
orl
push
lret
and
stos
fbstp
into
dec
cli
mov
or
xchg
xor
decb
lods
mov
adc
bound
xchg
pop
pop
outsb
adcb
mov
enter
and
ds
scas
push
or
daa
adc
mov
imul
sub
jo
insb
mov
push
or
stos
mov
fimuls
sub
xor
enter
cmp
push
loope
jmp
jl
xchg
dec
xchg
test
push
inc
mov
adc
mov
cmp
fwait
add
ljmp
mov
cld
stos
insl
cmp
roll
cmpsb
insb
loope
or
test
cwtl
and
orl
sbb
sub
mov
and
and
mov
jae
lret
push
lahf
dec
mov
sarl
loop
mov
daa
mov
data16
sub
mov
je
roll
mov
loopne
mov
mov
xchg
mov
into
cmp
add
cmp
ret
test
int
pop
and
mov
inc
in
lods
test
int3
stos
jl
fmulp
push
dec
pop
lahf
mov
scas
cmp
xor
xor
pop
jb
sbb
or
inc
adcb
nop
pop
cld
lods
fs
jo
insb
jb
mov
jbe
xchg
mov
ljmp
int
add
mov
or
mov
aam
test
mov
imul
add
loopne
sub
idivl
mov
and
jns
push
in
mov
inc
lret
aas
add
rep
xor
or
adc
mov
ficomps
int3
xor
test
jnp
sbb
add
cmp
js
jns
xchg
mov
pop
scas
les
mov
pushf
hlt
add
inc
and
dec
fs
aaa
lock
and
lds
ret
addr16
dec
clc
push
loope
lds
inc
jb
jbe
pop
andl
jmp
ds
subl
jp
jmp
les
cmp
imul
xchg
mov
mov
pop
cmp
jmp
adcb
or
das
outsl
or
int
lcall
mov
adc
stos
push
push
sahf
mov
leave
mov
jle
mulb
jbe
mov
add
and
cmp
loop
mov
enter
xchg
es
inc
lods
add
clc
shrb
xor
inc
or
ljmp
jb
jge
dec
xlat
jbe
hlt
std
out
push
insl
stos
sahf
push
mov
mov
repnz
sub
test
mov
pop
xlat
js
push
cmpsb
mov
dec
cmp
xchg
clc
in
sbb
inc
cwtl
std
push
cmp
les
hlt
pop
cmp
fs
leave
sub
lret
popf
dec
inc
mov
mov
jnp
cwtl
inc
fwait
or
in
mov
push
cmp
dec
jo
sar
cmp
dec
push
popa
mov
and
push
dec
call
mov
in
mov
xchg
mov
jmp
icebp
and
into
mov
mov
bound
inc
pop
push
mov
jg
cwtl
adc
fmul
and
mov
out
push
or
jb
or
popa
inc
push
andb
mov
pop
lcall
and
stc
mov
add
jbe
push
icebp
cltd
sbb
sahf
aaa
inc
iret
scas
dec
lret
shll
xchg
inc
shl
cmpsb
add
add
add
jae
add
push
add
jb
outsl
add
add
dec
data16
jb
add
add
imul
gs
arpl
add
add
jne
add
je
add
outsb
jae
insl
add
add
add
add
imul
add
insb
insb
outsl
ja
jae
popa
jb
add
add
insb
data16
add
add
add
add
outsb
add
add
insl
imul
gs
add
outsl
add
add
imul
add
dec
add
jae
je
add
add
add
add
add
insl
add
jae
inc
add
add
push
add
outsb
add
data16
je
add
add
jb
imul
add
jae
push
add
add
jo
outsl
jo
jb
jns
je
gs
add
add
insb
add
add
je
add
add
pop
add
add
imul
insb
gs
add
add
popa
add
jo
jne
outsb
add
jae
push
add
je
add
imul
add
add
add
add
add
add
add
insl
add
add
arpl
outsl
add
outsl
outsb
add
add
add
add
insb
add
add
add
add
