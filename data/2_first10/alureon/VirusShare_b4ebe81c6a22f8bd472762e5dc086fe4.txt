mov
push
mov
cmpl
mov
jne
test
jge
push
push
jmp
push
pushl
mov
call
mov
pop
ret
push
mov
sub
push
mov
push
test
je
mov
test
je
cmpl
je
mov
test
je
push
lea
push
lea
push
push
call
mov
add
push
pop
lea
add
call
mov
test
je
mov
sub
mov
mov
inc
dec
jne
pushl
mov
pushl
pushl
pushl
pushl
call
mov
mov
mov
call
mov
add
push
pushl
pushl
push
call
add
pop
jmp
xor
pop
pop
leave
ret
push
mov
testl
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
pop
ret
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
mov
test
je
andl
mov
sub
add
mov
mov
mov
lea
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
cmpl
mov
je
or
sub
mov
mov
sub
add
mov
mov
mov
lea
push
push
push
call
mov
mov
mov
sub
add
mov
movzwl
add
lea
movzwl
lea
mov
mov
mov
andl
xor
cmp
jae
lea
mov
mov
addl
push
lea
pop
rep
mov
add
movzwl
add
incl
cmp
jb
mov
mov
add
pop
mov
xor
pop
inc
pop
leave
ret
mov
push
mov
sub
mov
push
xor
push
push
mov
movl
mov
movl
mov
mov
call
mov
lea
push
movl
mov
movl
call
pop
leave
ret
mov
push
mov
push
mov
mov
test
je
test
jne
test
je
or
mov
jmp
or
test
mov
jne
push
call
pop
jmp
mov
mov
pushl
pushl
pushl
call
add
test
mov
je
cmp
je
cmp
je
mov
test
jne
mov
cmp
push
je
mov
sar
mov
and
lea
lea
jmp
mov
mov
and
cmp
pop
jne
or
mov
cmpl
jne
mov
test
je
test
jne
movl
mov
add
mov
movzwl
add
mov
jmp
neg
sbb
and
add
or
andl
mov
pop
pop
ret
push
mov
push
push
mov
imul
push
mov
cmp
jb
mov
push
call
mov
add
imul
push
xor
pop
div
mov
mov
mov
mov
sub
mov
test
je
mov
sub
push
mov
call
xor
divl
mov
add
cmp
jae
mov
mov
imul
xor
divl
xor
mov
sub
imul
div
mov
cmp
jae
mov
sub
push
pushl
pushl
call
add
add
add
add
cmpl
jne
pop
pop
pop
leave
ret
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
mov
mov
ret
push
mov
sub
mov
push
push
xor
push
mov
movl
cmp
je
mov
jmp
push
call
mov
mov
push
push
push
push
mov
add
call
movl
mov
push
shl
add
incl
push
push
push
call
mov
mov
test
je
xor
push
call
mov
push
push
call
mov
call
add
mov
cmp
je
cmpl
jne
mov
push
call
push
call
lea
push
mov
push
pop
add
xor
div
push
pushl
pushl
call
mov
push
push
push
pushl
call
mov
add
lea
add
mov
lea
mov
mov
mov
and
call
mov
mov
mov
call
pushl
pushl
pushl
push
call
push
call
mov
push
call
test
je
xor
pushl
mov
pushl
pushl
pushl
call
mov
cmp
jne
push
call
cmp
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
mov
push
push
call
mov
xor
cmp
je
push
push
push
push
call
push
push
push
pushl
call
push
push
push
pushl
call
pop
pop
ret
mov
mov
mov
rol
imul
add
mov
ret
push
mov
push
push
andl
andl
push
push
push
push
push
call
mov
lea
push
pushl
lea
pushl
movb
push
pushl
movb
pushl
push
call
push
push
push
call
pop
leave
ret
push
mov
sub
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
jne
inc
jmp
andl
push
push
lea
lea
cmpl
mov
je
mov
jmp
mov
mov
add
xor
nop
movb
mov
mov
inc
cmp
jb
mov
test
je
lea
movsbw
mov
add
inc
mov
test
jne
lea
push
call
mov
test
je
mov
add
andl
cmpl
je
mov
mov
mov
test
jns
and
jmp
add
add
push
pushl
call
mov
test
je
incl
mov
lea
cmpl
jne
mov
incl
mov
imul
add
lea
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
push
mov
sub
mov
mov
mov
sub
mov
je
mov
test
je
push
mov
add
test
je
push
push
mov
sub
mov
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
addl
decl
jne
mov
test
jne
pop
pop
pop
xor
inc
leave
ret
push
mov
push
push
mov
mov
mov
cmp
jb
andl
add
je
push
push
push
pop
mov
sub
mov
mov
mov
lea
ror
lea
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
inc
cmp
jb
pop
pop
pop
leave
ret
mov
push
mov
push
push
mov
test
mov
je
lea
push
call
add
push
call
andl
pop
pop
pop
ret
push
mov
push
call
mov
push
call
pop
pop
test
je
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
mov
jmp
mov
pop
ret
add
loope
testb
cmp
int
mov
mov
cmp
sbb
sbb
cmp
pusha
push
les
test
inc
cmp
cmpsl
nop
clc
mov
push
rcll
sar
outsl
push
sbb
push
out
les
or
scas
cmp
ds
pushaw
movsb
mov
fsubrl
mov
sti
ss
mov
lods
shlb
pop
mov
aas
dec
iret
movsb
movsl
mov
push
iret
cmc
sbb
in
dec
push
pop
arpl
jp
pop
mov
scas
int3
push
cmpsb
mov
add
arpl
nop
push
lret
mov
mov
add
das
sub
mov
repnz
jne
xor
xor
push
xlat
mov
jno
xchg
mov
popa
js
mov
cmpsb
cmp
orb
jg
adc
mov
lret
leave
mov
mov
rorl
xchg
outsb
mov
dec
mov
cmp
mov
mov
in
ret
mov
lock
add
cmp
test
cmpl
pop
movsl
mov
xor
pop
mov
je
and
pusha
pop
mov
adc
lcall
jo
mov
aam
out
mov
inc
or
fstp
mov
and
pop
ss
cltd
pop
sbb
addr16
imul
lcall
mov
jno
movsl
jp
sub
in
add
add
lahf
nop
lahf
dec
test
pusha
in
mov
mov
pop
push
push
fidivrs
and
bound
fs
insl
lret
enter
rcrl
test
icebp
gs
cmp
insl
push
popf
mov
loopne
jne
adc
add
loop
lods
fsubrl
fiadds
add
push
dec
aaa
imulb
fwait
dec
lret
lock
aam
xchg
mov
test
push
repz
add
mov
in
inc
fcmove
cmp
inc
xchg
add
xchg
rcrl
pop
jns
jecxz
ficomps
cs
repz
jg
aas
repnz
dec
into
cmp
and
lret
insl
orb
mov
cmp
mov
shlb
iret
in
aad
jno
mov
lahf
add
adc
xchg
scas
dec
gs
dec
adc
pop
stos
xor
and
sbb
in
and
sbb
mov
lahf
rcll
add
add
xorb
or
add
pop
hlt
dec
mov
pop
pop
add
sbb
mov
mov
scas
xor
mov
cmp
xor
and
in
fstpt
imul
mov
pop
orb
sahf
loope
int3
pop
fs
stos
mov
jmp
loope
jmp
sti
mov
adc
add
mov
add
cmp
jns
pop
cltd
lock
add
adc
std
mov
cwtl
test
mov
mov
sbb
and
and
sbb
sub
pop
dec
cmp
inc
mov
xchg
iret
sbb
xchg
subl
mov
lahf
and
push
repnz
mov
xor
inc
clc
lret
mov
mov
sar
push
outsb
pop
in
les
push
add
add
cli
cmp
outsl
jp
cmp
lea
pop
lods
jecxz
mov
inc
test
pop
iret
sub
xor
data16
imul
pop
xor
push
lods
mov
bswap
inc
push
lret
dec
and
mov
fs
vcvtps2dq
xor
xchg
jne
lret
jle
mov
out
lods
xchg
fldt
jo
andb
add
pushf
fs
mov
repz
data16
jns
loop
lds
push
sbb
mov
xchg
xor
inc
das
add
and
lret
push
pop
xor
cld
add
scas
fnstsw
das
mov
mov
mov
repz
out
lret
and
or
adc
xchg
out
dec
dec
sub
jg
aas
mov
or
jb
mov
pop
out
lods
scas
push
pop
shrb
in
add
add
add
lock
pop
sbb
cmc
xchg
mov
addr16
inc
xchg
xchg
mov
xchg
subb
rcl
imul
aaa
insl
mov
rorl
popf
sbb
and
repz
cwtl
sub
mov
rcr
stos
ss
je
fadds
inc
add
aaa
pop
xor
adc
cmp
adc
jmp
int
pushf
out
mov
addr16
or
lock
loop
sub
push
jge
mov
xor
jns
add
arpl
sti
jno
adc
mov
bswap
rorl
add
jb
test
xchg
insb
cli
out
mov
aas
dec
inc
out
loop
inc
les
sahf
mov
sahf
sbb
mov
loopne
cmpsb
iret
xor
test
or
test
test
ljmp
jmp
inc
cmpsl
iret
jns
and
test
mov
add
addr16
pop
in
lret
pop
xor
push
in
mov
xchg
mov
mov
jg
repnz
adc
dec
pop
ret
lods
ret
adc
add
push
test
inc
inc
arpl
jle
adc
out
int3
aaa
mov
add
fstpl
ds
sbb
push
push
adc
int3
xor
add
sti
dec
mov
test
cwtl
push
add
outsb
xor
mov
jnp
add
rorb
mov
xlat
or
cld
mov
aad
lods
lret
mov
push
cltd
negl
imul
loopne
jl
sbb
mov
inc
sub
push
mov
stc
lcall
inc
test
lcall
leave
ret
pop
les
sti
jne
xchg
lret
pop
das
ds
pushf
xchg
jb
in
or
sbb
dec
jns
je
sub
sahf
mov
add
add
mov
pop
ds
insb
in
shl
mov
sub
mov
add
add
jae
push
xchg
jle
int
cmp
dec
gs
jbe
ret
pop
mov
int3
flds
fistl
mov
xor
push
or
pop
dec
cli
add
pop
push
adc
fcmovnb
adc
sub
in
aas
loop
in
pop
add
push
inc
push
cmp
add
xor
and
add
cmp
loopne
sbb
push
or
jns
xor
mov
mov
lahf
push
sub
dec
lcall
pop
adc
sub
fdivrl
fnsave
add
mov
sub
dec
sbb
mov
pop
and
subl
jo
test
pushf
jns
jecxz
jg
addr16
mov
lret
xor
dec
add
loope
add
xor
rclb
dec
push
out
pop
loopne
imul
int3
dec
bound
out
int3
dec
mov
mov
shl
test
rclb
ficompl
cmp
push
cmp
inc
into
into
repz
cmpsb
inc
out
adc
mov
jb
sub
mov
enter
outsl
or
and
addr16
stc
mov
stos
pop
cmp
jge
mov
xor
dec
add
add
cmpsb
and
pop
mov
add
mov
insb
adc
aaa
aam
jle
adc
enter
hlt
inc
mov
shrb
data16
decl
rcrb
mov
out
jo
iret
xchg
cmpsb
ss
mov
push
xchg
test
push
outsl
dec
jp
pop
dec
jbe
sbb
addr16
testl
add
adc
orl
mov
aaa
cmp
adc
or
mov
in
xchg
mov
add
aas
dec
xchg
or
mov
movb
adc
sahf
testb
repnz
fcoml
dec
daa
addr16
call
dec
lret
pop
cmp
loop
sub
js
and
pop
sahf
cmpsl
cmp
insb
loope
jl
out
sub
cmc
int
scas
movsl
mov
pop
repnz
pop
jbe
loopne
cmp
inc
jno
loopne
adc
inc
repnz
pop
out
push
add
setbe
jno
mov
jb
inc
ds
js
jmp
fs
shr
fisubs
add
sub
xchg
and
dec
les
shr
xor
jecxz
jg
push
jnp
imul
inc
xchg
in
lds
subb
sbb
outsl
add
push
push
in
push
mov
call
xchg
mov
scas
cmp
adc
mov
outsl
aad
decb
pop
test
add
subl
sar
not
jmp
xor
ljmp
adc
aam
inc
daa
cmc
and
and
mov
ljmp
mov
inc
insl
push
imul
cld
notb
xchg
aad
push
push
repz
or
or
jecxz
aas
xor
adc
sbb
push
pop
fsubrl
ja
jns
push
sti
scas
enter
ljmp
pop
add
add
leave
stos
cwtl
mov
pop
cmp
adc
movsl
and
sub
xchg
int
cmpb
xchg
adc
xor
sub
add
jo
es
mov
int
inc
mov
push
mov
inc
xchg
idivb
lock
cmp
or
or
mov
jl
jns
cmp
mov
add
xor
int3
push
int3
sbb
push
inc
jo
movsb
cmc
xor
add
add
and
lock
rol
or
or
inc
out
sbb
add
movsb
call
sbb
and
push
pop
and
stos
addr16
and
daa
push
mov
cmc
mov
out
addr16
xchg
and
dec
outsb
xchg
fnstenv
xor
or
aam
ret
lea
dec
jne
data16
and
shl
addl
xchg
and
dec
cli
dec
add
cmpsl
xorl
xor
mov
mov
imul
cmp
sub
cmp
addb
pusha
popf
sbb
cmp
mov
out
test
push
iret
jp
mov
roll
pushf
dec
scas
out
xchg
mov
jno
mov
out
or
add
jns
inc
insb
push
push
xchg
jno
cmp
scas
inc
in
shlb
fwait
aam
sti
mov
data16
mov
add
stos
fwait
dec
inc
movsb
mov
or
add
rolb
adc
rorb
mov
test
das
mov
inc
cltd
dec
xchg
mov
lcall
add
sbb
pop
xor
push
lods
mov
xchg
ss
inc
pop
pop
mov
notb
sbb
push
cld
in
ja
xchg
dec
and
lods
les
mov
out
orb
sbb
inc
out
mov
faddl
add
add
aaa
adc
sti
xor
dec
lds
shrb
mov
mov
ror
fadds
ffreep
fmull
dec
xor
movsb
stc
ja
push
arpl
jns
xchg
data16
push
scas
sbb
pop
test
push
incl
jg
jmp
or
sarl
mov
push
dec
insl
cmpsb
mov
ss
test
adc
int
fmuls
sbb
add
cmp
mov
cwtl
jns
push
push
aaa
gs
xchg
ret
fimull
pop
movsb
cmpsl
inc
jns
mov
dec
int
mov
loope
mov
mov
sub
mov
cmpsl
insl
pop
sub
mov
and
loop
popa
jns
ret
or
xchg
rolb
outsl
pop
jns
cld
mov
mov
xchg
movsl
pop
mov
cwtl
mov
addr16
add
cmpsb
adc
jns
mov
fnsave
arpl
adc
imul
lcall
scas
or
cmp
push
dec
pop
xor
lahf
add
ja
outsb
inc
es
xor
cmc
ja
add
xor
dec
xor
fs
insl
rcll
mov
daa
ret
out
pushf
push
fwait
inc
dec
xchg
bound
dec
aam
adc
loope
jo
call
mov
je
xchg
and
xchg
insl
pusha
dec
mov
sahf
in
mov
fwait
sub
jmp
iret
ficomps
cld
loopne
xchg
jecxz
test
add
pop
xor
push
xor
xor
sub
sbb
mov
fcompl
aam
movsb
test
lock
lds
add
cltd
xlat
push
ja
sbbl
mov
out
xor
mov
minps
push
movsb
inc
push
mov
cltd
cmp
mov
mov
imul
xchg
js
cmp
jns
dec
jl
xlat
push
gs
repnz
in
mov
sbb
and
push
ret
jecxz
ret
mov
xchg
cmp
dec
aad
dec
xor
mov
add
fbld
insl
xor
xacquire
jns
or
loop
adc
lods
sub
pop
jp
clc
loop
in
ret
iret
push
cmpsb
aad
mov
popa
sub
mov
stos
into
lods
pop
xchg
push
jne
xchg
dec
out
add
cld
push
jae
adc
sbb
add
arpl
add
lret
std
push
push
add
add
nop
mov
jle
data16
adc
sbb
cmp
cmpb
test
xchg
hlt
cmpsl
adc
cld
pop
cmpsl
out
mov
or
ret
roll
mov
and
mov
or
sbb
test
cld
mov
push
hlt
xchg
mov
test
inc
stc
ja
bound
stc
iret
xor
pop
adc
rorl
fcomps
pop
int
sub
sbb
roll
lret
jo
sahf
dec
add
out
pusha
adc
dec
orl
mov
xchg
push
push
jo
xor
xchg
pushf
push
cmp
sub
rolb
iret
arpl
pop
into
pop
out
adc
sub
sbb
sub
jbe
pop
mov
cmp
movsl
xchg
mov
test
sbb
mov
add
gs
adc
stos
dec
sub
arpl
sbb
fldt
add
lcall
cmpsl
imul
dec
sbb
sbb
movsb
aaa
cmpsl
sti
outsl
pop
arpl
leave
xchg
fwait
outsb
daa
and
jp
mov
stos
and
loope
jecxz
js
push
mov
push
push
mov
lcall
mov
sbb
icebp
cld
bnd
std
jecxz
inc
add
sub
lcall
xchg
and
aad
or
lock
ret
inc
fwait
or
cmp
int
inc
xor
add
pop
pop
icebp
add
test
out
xor
and
cmp
cmc
bound
xchg
push
xor
add
mov
lea
ds
push
icebp
out
cmp
fstpl
lahf
push
push
or
pushf
addr16
mov
pop
mov
shrl
hlt
int3
adc
or
pop
gs
xor
mov
movsb
push
dec
out
rcll
cmp
add
add
pop
pop
mov
push
jbe
or
push
xchg
data16
pop
loop
mov
xor
mov
test
mov
rcrl
fs
xchg
xchg
xchg
mov
lahf
addr16
mov
sbb
lret
lret
dec
cmpsb
loope
int
xor
shr
je
sub
add
repz
jbe
daa
mov
push
out
sbb
lret
add
movsb
adc
mov
sbb
std
push
jno
test
or
mov
pop
and
mov
add
mov
and
push
call
jae
inc
lret
pop
cmp
dec
movsb
loop
mov
jmp
sahf
and
or
andl
test
jmp
inc
negb
pop
dec
call
add
inc
cmp
cli
mov
lret
insb
xlat
push
push
mov
mov
dec
push
cmp
popl
scas
shll
fidivs
gs
shrb
aam
mov
sbb
inc
cmp
notb
lret
loop
test
inc
pop
cmpsb
mov
repnz
data16
cmp
stos
xchg
aam
pop
push
pop
or
xchg
add
pushf
lahf
pop
test
xchg
dec
mov
mov
sbb
dec
in
cwtl
fnsave
mov
xchg
popf
fcomps
arpl
cmpb
xlat
stc
out
mov
jnp
out
dec
ljmp
jge
push
orb
mov
js
pushf
inc
shr
stos
das
push
jns
xchg
daa
stos
in
test
jp
popf
je
mov
inc
adc
stos
pusha
roll
sub
add
add
mov
sahf
sub
and
jne
xor
sbb
fwait
cmpsb
fwait
leave
or
push
in
fimuls
mov
cltd
aas
mov
jb
jns
inc
shl
lret
lcall
flds
test
gs
xor
sbbl
fsubs
push
mov
pop
mov
clc
addr16
sbb
test
add
mov
cmp
pusha
mov
pop
and
fcompl
push
rcr
pop
je
scas
sbb
add
add
test
mov
fwait
aas
adc
out
jmp
mulb
rcll
push
push
out
lds
xchg
loopne
pop
in
repnz
dec
mov
lock
hlt
repnz
fldl
cld
outsb
push
mov
out
lret
xchg
jne
ror
xchg
inc
lds
lods
loope
stc
das
mov
sarb
lds
lock
lds
ret
test
std
jle
sub
aad
jo
iret
outsb
loop
and
add
aas
jecxz
addr16
aaa
rorb
ret
mov
gs
lea
add
cld
sbb
iret
nop
divb
ljmp
movsb
loop
pop
call
stos
scas
mov
adc
mov
jl
aad
jecxz
and
imul
test
xchg
cmp
lret
aam
je
cmp
or
sub
or
sub
fbstp
aas
lret
xchg
sub
hlt
cld
cld
add
scas
mov
cli
mov
jae
mov
loopne
jae
ss
test
adc
int3
insl
or
jns
test
ja
pop
mov
mov
or
lret
xor
sti
xor
dec
pop
sub
adc
sahf
add
sarb
lock
xor
add
std
das
dec
sti
cmp
sbb
pushf
stos
add
mov
dec
insl
cmp
cmp
jbe
push
stos
sub
push
and
xchg
adc
inc
add
fbstp
mov
mov
insl
jle
movsl
inc
dec
cmp
outsb
jae
mov
aad
jae
movsl
inc
nop
stos
roll
arpl
aad
popa
lods
xchg
or
push
inc
or
xor
xchg
lret
push
xchg
icebp
push
rolb
mov
stc
lock
int
sahf
mov
push
jno
scas
sbb
push
lretw
aas
mov
and
inc
cmp
inc
loop
jp
adc
ja
mov
add
imulb
ljmp
in
decb
adc
mov
rcrb
mov
cmp
cs
add
add
shlb
stos
pop
lcall
xor
aas
iret
pusha
mov
xchg
fildl
add
loope
out
das
inc
in
imul
cmp
jne
adc
xor
movsb
xchg
insl
lock
outsb
jmp
jnp
les
in
mov
sub
xchg
inc
cltd
sbb
or
insl
stos
xchg
sub
scas
mov
inc
and
insb
insl
dec
inc
sbb
fildl
pop
insl
push
aam
jbe
jg
sub
jle
add
add
cmc
sbb
xchg
push
mov
xchg
mov
push
repnz
jecxz
clc
loop
orl
lcall
adc
in
fcmovnbe
stc
fistl
mov
lahf
jmp
sub
gs
jp
rol
leave
rcrl
inc
mov
push
rcll
mov
clc
ret
fs
xchg
or
mov
dec
adc
movsl
and
mov
and
mov
sub
sub
mov
inc
or
inc
add
push
push
dec
testb
mov
enter
mov
sub
sub
arpl
xchg
mov
sarl
inc
pop
stc
mov
sbb
fimuls
test
subb
jbe
inc
add
test
dec
xlat
fcmovb
std
sbb
mov
cmp
stc
mov
cmp
test
lock
mov
lcall
lods
aad
mov
jns
mov
mov
xchg
sub
sbb
jp
scas
push
cltd
lds
and
sbb
mov
mov
out
pop
cmp
sti
sbb
mov
fs
jmp
mov
std
aaa
aad
xor
iret
loop
test
cmp
or
xor
inc
cmp
xor
add
and
movsl
xchg
fcom
mov
leave
loopne
xor
add
int3
jp
stc
jnp
inc
xchg
mov
imul
mov
push
jne
ficomps
inc
jl
xlat
jmp
mov
pop
and
hlt
pop
and
xlat
int3
popf
add
not
pop
inc
hlt
mov
in
jae
push
inc
int
xchg
mov
mov
rorb
jae
and
jmp
xlat
add
cmpsl
dec
mov
and
mov
pushf
mov
sub
cltd
mov
add
xor
pop
jecxz
cmp
xchg
pop
fldlg2
jb
cmpsb
cli
or
dec
in
mov
notl
scas
outsl
pop
fistpll
stc
mulb
and
out
sbb
cmp
sbb
clc
imul
cmp
stc
xchg
ja
jl
cli
iret
mov
inc
mov
lcall
add
pop
mov
or
cmp
inc
inc
xchg
xchg
mov
mov
add
mov
cld
aas
mov
xchg
push
add
jno
stos
mov
mov
xor
stc
pop
pop
push
fstl
push
push
call
popf
stc
jecxz
push
push
mov
or
iret
aad
sub
repnz
jae
push
gs
imul
pop
inc
cli
inc
sub
xchg
lret
fsubrs
repnz
lds
ret
add
test
jl
xor
jo
pop
lods
add
push
sub
outsb
cltd
inc
adc
arpl
sbb
cmpsb
cmp
popf
jno
mov
test
repnz
insl
xchg
call
sub
dec
hlt
jae
aam
loop
ss
pop
jae
xchg
out
and
pop
fsts
dec
es
inc
enter
cmpsl
out
jp
adc
mov
xchg
popl
xchg
mov
mov
mov
or
cwtl
xchg
jecxz
popa
lods
data16
add
xor
ret
push
and
add
xor
xchg
inc
sbb
xchg
or
cld
fmuls
dec
pop
xor
or
or
div
sbb
mov
sbb
mov
and
jmp
dec
dec
xor
adc
test
add
xchg
ss
fsubrp
mov
cmc
pop
in
ljmp
pusha
popf
inc
and
inc
push
mov
iret
popf
push
adc
add
push
jmp
add
xor
test
imul
mov
fs
pop
mov
and
in
ja
stc
test
fmuls
js
pop
hlt
push
sub
push
es
addr16
in
add
and
imul
sbb
and
and
negb
xchg
xchg
bound
or
sub
es
mov
dec
add
push
adc
imul
cltd
sub
cli
and
pop
xchg
xchg
ja
shr
and
loope
xor
std
roll
sub
bound
insb
pushf
xchg
pop
mov
orl
repnz
addb
daa
fidivrs
dec
cmc
aas
pop
fsubs
pop
xchg
xchg
xchg
repnz
pushl
pop
jle
xor
jecxz
shrl
int
nop
or
lock
les
add
xchg
and
bound
gs
add
inc
pop
arpl
repnz
nop
sub
test
pop
jge
call
push
jbe
mov
addb
cmp
mov
xor
and
pop
int
cmp
adc
pop
test
cmp
or
fdivs
cmp
frstor
loopne
mov
add
add
rclb
jo
adc
or
push
cs
jl
mov
insb
pop
jns
xor
add
fnstenv
js
push
out
sub
mov
jo
pop
dec
loop
adc
adc
mov
stos
inc
ret
repnz
ss
and
or
add
mulb
jne
and
inc
mov
pop
mov
or
out
push
jle
std
jge
add
add
push
jmp
lock
xchg
jl
mov
sub
loopne
jbe
enter
jg
sbb
and
in
mov
sub
and
xchg
out
cmp
inc
jbe
pop
mov
pop
push
cmp
cli
jae
push
mov
lcall
icebp
sub
imul
js
push
xor
scas
push
popf
imul
dec
pop
cmp
test
clc
pop
inc
insb
jmp
loopne,pn
xchg
stos
enter
add
add
pop
push
sbb
imul
sub
pop
dec
jl
adc
add
xchg
dec
or
cs
add
and
and
insb
jb
push
cmc
or
arpl
ds
sub
push
ljmp
xchg
inc
scas
mov
adc
sbb
mov
inc
popa
lcall
push
jae
mov
push
sub
sub
jmp
adc
add
cld
fisubl
cmp
lret
test
cmp
arpl
shl
and
xchg
jmp
or
sub
mov
cs
add
int3
lods
or
and
fs
test
jle
push
jns
xchg
push
enter
add
sarb
cmc
ss
sbb
out
xchg
out
and
mov
test
inc
add
ss
jnp
test
xlat
cmp
jge
mov
add
mov
nop
add
xor
push
adc
or
cld
push
push
in
adc
scas
pop
ja
mov
das
sub
imul
jne
faddl
xlat
mov
inc
clc
inc
insb
adc
sti
pop
je
out
call
push
imul
or
cmpsb
pop
sbb
push
jecxz
lods
sbb
mov
js
movsb
dec
mov
les
out
push
int3
sub
idiv
js
jle
mov
into
int3
loop
aaa
jmp
pop
adc
push
or
fwait
cmpsl
and
push
inc
iret
inc
mov
ds
das
out
lcall
dec
cwtl
inc
mov
jl
jle
loopne
sti
pusha
cmp
dec
push
adc
lahf
loopne
add
jge
mov
xor
mov
inc
pop
data16
mov
scas
push
test
inc
dec
out
and
push
mov
mov
xchg
shrl
inc
sbb
jne
push
pop
test
add
jnp
enter
sbb
pop
sbb
pop
in
cmp
test
decl
test
fistpll
out
js
sti
and
xor
movsb
pop
mov
sub
fs
loope
aaa
stos
roll
mov
mov
push
movsb
sti
mov
cli
cmp
andl
cld
imull
xor
add
add
adcb
lds
loop
cmp
cmp
fidivl
xchg
cmp
push
sub
into
push
in
je
xlat
std
icebp
pop
data16
xchg
inc
paddd
idivl
cwtl
into
ds
imul
test
dec
aas
les
mov
mov
daa
notl
cli
mov
aas
add
cmp
out
test
sub
mov
das
add
sbb
xchg
xchg
pop
pop
mov
dec
push
mov
pop
add
mov
out
test
dec
das
das
inc
pop
clc
pop
fndisi(8087
mov
add
jb
xor
push
jno
into
les
mov
mov
popf
out
xor
test
mov
push
inc
sub
cwtl
insl
addr16
xchg
xchg
js
das
cmp
outsl
es
inc
pop
xor
or
add
xchg
cli
fmuls
push
daa
dec
test
pop
jl
inc
repnz
mov
mov
fs
les
xor
adc
cmpsl
aaa
test
lahf
jmp
push
test
cmc
dec
sti
cs
mov
es
outsl
cmp
aad
in
mov
pop
or
jns
ret
push
addb
fistps
xlat
push
les
negb
push
rorl
ret
imul
inc
add
lods
jne
int
sbbl
sbb
mov
das
add
xor
mov
add
pop
mov
mov
popf
mov
mov
mov
das
and
or
iret
loopne
dec
pop
mov
jno
add
inc
push
inc
sarb
pop
int3
in
js
and
stc
add
cmpsb
sbb
leave
mov
aaa
jp
jmp
inc
mov
and
jecxz
out
pop
xchg
vprotb
gs
aaa
lea
xchg
dec
jnp
sub
sahf
andl
pop
mov
adc
sti
imulb
and
adc
mov
