not
mov
mov
shl
mov
neg
mov
lea
lea
ror
neg
lea
lea
xor
push
lea
push
push
lea
push
pushl
call
cmp
jne
add
lea
mov
lea
push
push
push
push
call
push
mov
mov
xor
popl
mov
cmp
jae
shr
lea
neg
neg
mov
xchg
mov
lea
not
mov
not
xor
cmp
jne
push
mov
add
pusha
xchg
shl
lea
cmp
jne
rcr
xor
mov
mov
call
lea
lea
cmp
jae
xor
xor
lea
mov
adc
not
ror
mov
cmp
jae
xor
push
add
add
mov
xor
add
lea
cmp
jae
xor
shr
lea
movl
neg
neg
cmp
jae
lea
and
mov
rcl
lea
rcr
rol
xor
push
call
cmp
jae
xchg
rol
rol
lea
mov
lea
mov
mov
xchg
push
lea
push
push
lea
push
pushl
call
cmp
jae
movl
neg
not
xor
neg
mov
movl
mov
cmp
jne
ret
mov
xchg
adc
push
push
lea
push
lea
push
call
cmp
jne
mov
mov
rcl
lea
xor
and
not
xor
xor
cmp
jae
xor
lea
mov
rcr
mov
xor
xchg
add
cmp
jae
mov
add
xor
mov
rol
adc
xchg
xor
mov
mov
cmp
jne
and
lea
xor
mov
mov
rcr
adc
xchg
lea
adc
xchg
xor
shr
movl
cmp
jne
leave
call
call
mov
mov
mov
shr
mov
rcr
xor
xor
xchg
mov
cmp
jae
mov
and
not
rol
add
cmp
jae
shr
lea
rcr
not
rcr
ret
add
lea
xor
cmp
jae
adc
inc
jne
mov
lea
mov
cmp
jae
shr
mov
mov
and
xor
xor
lea
xor
xor
cmp
jne
not
add
mov
call
mov
add
cmp
jne
lea
not
neg
lea
sub
mov
neg
xor
xor
xchg
xor
mov
cmp
jae
mov
popl
lea
shr
xor
add
add
ror
mov
pop
lea
adc
xor
lea
cmp
jne
lea
push
push
push
push
push
push
push
call
xchg
ror
ror
cmp
jae
ror
xchg
not
lea
lea
neg
lea
lea
mov
not
mov
cmp
jne
lea
add
add
rcl
not
xor
mov
xchg
mov
shl
xchg
rcr
not
not
cmp
jae
rol
xor
xor
mov
mov
shr
xor
lea
neg
adc
adc
cmp
jne
xor
shr
xor
mov
mov
shl
xor
mov
shr
push
xor
shl
mov
mov
lea
mov
mov
neg
mov
not
adc
neg
cmp
jne
xor
lea
mov
neg
lea
rcr
lea
mov
lea
mov
lea
adc
neg
ror
cmp
jae
mov
and
lea
push
not
lea
lea
cmp
jae
mov
mov
xor
and
xor
mov
mov
not
mov
mov
cmp
jae
dec
jne
not
mov
mov
ror
rcr
mov
lea
popa
cmp
jae
xor
lea
rol
not
movl
add
lea
ret
xor
cmp
jne
inc
rol
and
rol
out
rol
lock
dec
adc
inc
and
dec
sub
test
dec
xchg
xchg
dec
iret
mov
cmp
data16
mov
aaa
adc
adc
mov
hlt
loopne
and
or
xor
das
insb
adc
mov
leave
rclb
mov
rol
dec
xchg
iret
adc
mov
jp
rol
std
insb
push
nop
add
fwait
rol
out
es
mov
jmp
ret
xor
es
cmpsb
jmp
mov
repnz
inc
mov
scas
out
je
mov
adc
cmp
cmpl
jp
rol
ss
jns
dec
mov
jnp
cmp
subb
stos
ret
lret
sub
cmp
ds
xchg
ret
xchg
jbe
add
ret
xchg
rol
dec
test
xchg
xchg
dec
ja
mov
jae
aas
cmp
or
mov
add
cmp
dec
test
mov
cmpsl
inc
sti
fwait
mov
shrl
xor
leave
sub
fwait
rol
mov
push
jecxz
rcrl
fwait
ret
test
stos
xor
lock
fwait
ds
icebp
shrl
add
test
out
dec
jo
loopne
ret
adc
shll
adc
jne
sahf
filds
xor
mov
jns
fwait
rol
cmp
inc
cmpsl
sar
out
sbb
adc
sbbl
shlb
dec
inc
test
add
mov
sub
stos
outsl
and
test
cwtl
inc
xchg
rorl
mov
xor
adc
popa
adc
add
std
add
mov
jle
adc
jb
jle
lret
idiv
dec
jb
jle
daa
test
cmc
fstpt
xor
stc
fcom
sti
insl
cmc
inc
pop
call
cmp
jp
xchg
std
ja
pop
or
pop
rcrl
push
ds
inc
mov
jle
stc
into
std
dec
xchg
inc
sbb
jb
sub
stc
jo
add
stc
push
dec
aaa
jg
jle
adc
aam
jns
or
and
pop
xchg
mov
add
aam
and
fadd
mov
pextrw
adc
dec
repz
xchg
jmp
adc
mov
adc
pop
xchg
repz
add
ds
bound
lea
pop
mov
jno
jle
fbld
mov
sti
mov
cmp
jno
adc
and
push
jno
fldl
jp
xchg
pop
nop
and
jb
xchg
jl
xchg
and
xchg
cmp
jbe
sub
lcall
mov
cmp
sahf
inc
cmc
sti
jle
add
test
dec
jle
jb
mov
jb
or
aad
and
push
xchg
jl
ret
shll
pushf
mov
mov
dec
mov
mov
mov
lret
jb
xchg
cmpsb
fdivp
xchg
cli
aas
xor
dec
xchg
sub
pop
and
dec
and
mov
je
mov
or
stc
jo
aas
sbb
out
and
mov
cltd
lods
jl
pop
daa
hlt
cwtl
xor
lods
dec
inc
jmp
pushfw
fldl
imul
or
repnz
ds
inc
mov
jle
stc
into
std
dec
xchg
lret
jp
jle
fstpl
cmovp
cli
jno
xchg
jg
addr16
jb
jle
repz
pop
aam
bound
lret
xchg
jp
jb
cmc
cld
imul
aas
ficoml
sbb
dec
mov
adc
sbb
inc
jnp
mov
lret
mov
jle
pmaxub
ret
mov
mov
add
andl
fstpl
into
jb
int
imul
lcall
clc
imul
mull
jb
int
imul
xor
cli
into
pop
xchg
sub
jne
jge
push
mov
cmc
jbe
jne
sub
addr16
jb
sti
lcall
lock
fldl
or
mov
jg
jb
cmc
fstpt
mov
xor
test
pop
inc
test
jno
inc
call
sti
arpl
aas
jge
dec
dec
jle
sbb
jmp
fisttpll
xchg
or
inc
jo
frstor
add
xchg
cmc
es
add
dec
sub
leave
std
scas
or
cvtpi2ps
jle
xor
jno
mov
ljmp
fldcw
jb
add
jge
xchg
add
icebp
in
insb
mov
mov
stos
jae
add
xchg
inc
cmc
adc
jno
jbe
add
jne
push
je
sti
jp
push
pop
movsb
iret
data16
xorl
dec
repz
fldl
sahf
stc
adc
pop
and
jns
push
jbe
cvtpi2ps
test
shlb
ja
cmp
and
xchg
push
jmp
loope
fldl
or
stc
ja
add
dec
or
or
push
xor
jb
inc
add
shlb
jle
stc
sbb
repz
xor
fwait
rcrl
inc
shr
dec
cli
jp
addl
aaa
sub
shlb
jle
jno
fimull
add
cmc
add
xchg
jl
cmp
jno
jbe
cmp
push
xor
jp
sbb
mov
nop
fiadds
movsl
jl
xchg
sti
sbb
sub
stc
je
dec
jo
jle
jb
dec
add
jb
or
test
and
or
sbb
adc
lea
jno
inc
xchg
gs
orl
and
into
jle
ds
add
inc
fisubrs
jns
jb
ss
pop
cmc
aad
and
xchg
jp
pop
das
es
inc
mov
jle
jb
mov
bound
xchg
jmp
dec
js
mov
inc
jl
jnp
orl
xor
imul
bound
sub
dec
js
push
out
add
add
jmp
xor
lds
fucomp
or
ljmp
lea
dec
sbb
pop
das
testl
mov
es
xchg
inc
test
test
xchg
int
repnz
popa
mov
adc
mulb
aaa
or
mov
leave
push
xchg
clc
bound
bound
inc
push
mulw
cmp
pop
and
jae
imul
out
cmp
cmp
pop
xor
jp
jno
repnz
lods
inc
xor
jae
popa
mov
testb
and
push
cmp
ljmp
adcb
sub
pop
adc
mov
pminub
mov
pop
fstpt
push
inc
jmp
ret
jo
test
jbe
scas
lea
adc
dec
mov
sub
cmp
xor
jp
mov
cli
jnp
xchg
mov
lahf
leave
jl
cmp
pusha
sti
cmpsb
repz
fstpt
or
add
jle
push
test
outsl
jne
ret
repz
pushf
push
mov
add
mov
data16
inc
adc
das
xor
sbb
data16
flds
push
jg
mov
cmp
pop
ret
jg
mov
pop
sbb
add
es
lcall
nop
bound
inc
jns
xor
xorb
addr16
pop
lea
cmp
sbb
roll
and
dec
lret
jge
dec
inc
inc
inc
aam
pop
sbb
mov
sbb
fisttpll
xchg
lret
mov
stos
jg
mov
fldenv
out
stos
ds
cmc
and
fldl
jns
cmp
inc
dec
stc
aas
sbb
arpl
cmpl
dec
bound
cmp
js
xchg
xchg
or
je
scas
fadds
xor
push
jo
mov
out
mov
lahf
adc
fcoms
pop
sub
cmp
adc
inc
push
jne
sub
mov
call
jle
loop
or
push
dec
mov
mov
mov
cli
adc
jbe
lods
or
divb
jl
and
lret
mov
cs
cmp
ret
sbb
xlat
pop
dec
es
inc
or
cld
sbb
fsubrp
jns
pop
or
ss
jb
jp
sbbl
call
stos
xorb
sbb
jp
pusha
into
int3
sarb
popa
mov
push
mov
or
fcoms
cmp
jns
loop
das
or
je
push
rclb
xchg
lcall
xor
jbe
jle
or
hlt
sahf
xor
push
dec
and
jecxz
mov
dec
mov
jge
in
loope
sti
or
shll
pushf
or
push
fst
mov
cmpsl
mov
cmp
pop
mov
fisubl
clc
or
imul
aaa
dec
xchg
test
es
or
clc
enter
stc
adc
das
jns
inc
loope
push
pop
inc
stos
adc
push
xchg
test
jg
movsb
mov
cmp
and
test
pop
jge
mov
hlt
fisttpll
adc
in
jecxz
in
xchg
sub
jne
and
data16
in
sub
sbb
jnp
cs
loopne
fldl
repz
xchg
ret
in
daa
mov
jo
mov
insb
sbb
pusha
popa
stc
mov
mov
push
dec
test
jp
dec
pop
addr16
mov
mov
arpl
jp
cmp
stc
lock
mov
fidivrl
mov
push
pop
js
push
por
jbe
shlb
and
in
sbb
std
punpcklbw
mov
fstpl
jecxz
pop
popa
call
adc
int3
aaa
aaa
xchg
out
adc
mov
add
mov
pop
pop
cltd
fcmovu
rclb
and
movsl
and
pop
pmaxub
ss
ret
lcall
jle
push
inc
jbe
sbb
xor
addr16
fs
cmp
push
sbbb
jne
sbb
cmp
adc
out
push
or
sub
loopne
outsl
repz
bound
mov
mov
or
aaa
mov
cld
jmp
loopne,pn
gs
pop
adc
mov
add
lcall
or
xor
addr16
jb
xor
sahf
jnp
inc
in
out
and
pop
test
mov
sbb
lods
out
fidivrs
inc
mov
orb
mul
adc
test
dec
mov
jb
orb
or
adc
ss
mov
cmpsl
sti
jmp
xchg
mov
dec
daa
aad
lds
gs
out
sti
sbb
ret
fadds
jns
sub
xor
cmp
or
mov
mov
jbe
bound
aaa
mov
sti
inc
and
jb
mov
loop
cld
jns
push
nop
jp
test
jle
mov
cmp
sti
jnp
ret
jb
jnp
movsb
xlat
lret
inc
add
insb
push
xor
jb
test
pop
sub
push
push
mov
sbb
mov
cs
adc
push
aas
pop
xchg
cmp
jo
xchg
inc
aas
ret
adc
push
inc
je
sti
das
mov
push
adc
or
movsl
push
push
pop
aas
jg
stc
push
add
subb
fs
sub
pavgb
fiaddl
test
jno
xor
xor
xchg
pop
shr
pop
fs
rclb
push
hlt
sub
push
cmpsb
inc
jbe
dec
add
jp
inc
pop
mov
mov
movsl
shll
js
mov
inc
inc
nop
add
outsl
xchg
fs
or
inc
addb
movsl
or
xchg
jnp
mov
cmp
jno
cmp
sbb
pop
jle
jae,pt
vmovdqu
out
and
cmc
push
fidivs
dec
lahf
test
gs
cmp
adc
ds
mov
int3
jb
or
pushf
cli
and
adc
and
lcall
pushf
loop
mov
scas
cmp
lcall
or
inc
in
xchg
fs
negb
mov
inc
xchg
and
xlat
mov
inc
push
push
pop
add
jno
lea
fstp
arpl
add
ss
lcall
cmc
add
sar
loope
push
sub
imul
mov
iret
xchg
pop
xchg
jo
imul
jnp
nop
loop
in
jnp
test
and
xor
push
bound
jl
das
pop
mov
pop
mov
or
mov
push
dec
js
ljmp
adc
je
sbb
popa
jne
bound
lret
in
sarb
fnstenv
adcl
mov
dec
inc
scas
pushl
ss
jo
cmp
mov
xor
sbbb
mov
mov
jnp
add
push
lcall
ss
mov
adc
popl
dec
ja
roll
mov
fidivs
clc
addb
stc
push
inc
sub
mov
shlb
ss
pop
inc
mov
mov
aas
fstpl
repnz
sarl
mov
ss
ja
jge
inc
jae
roll
push
mov
icebp
sti
jns
inc
or
adc
sbb
sub
out
and
mov
push
addr16
mov
push
mov
and
lea
test
adc
xor
in
inc
imulb
test
dec
and
cmp
stos
ss
into
hlt
inc
lcall
xchg
out
arpl
fwait
ret
dec
imul
jl
loopne
insl
dec
pop
mov
lcall
into
push
iret
je
push
mov
push
ficomps
sub
pop
and
xchg
jno
adc
inc
es
push
and
mov
lret
jbe
repnz
mov
push
mov
add
cli
inc
cmp
sub
sub
addr16
jge
jp
fsubrl
or
or
test
pop
or
xchg
sahf
insl
push
xchg
or
pusha
lret
cs
xchg
and
mov
lods
es
lods
jle
adc
sbb
cmpsl
push
in
arpl
inc
lret
xor
cmp
imul
inc
and
push
dec
pop
adc
push
es
fisubrl
mov
out
dec
lods
insl
in
lods
xor
xor
mov
out
fwait
out
xchg
push
pop
mov
and
lea
xor
dec
mov
push
inc
mov
jb
jp
stos
cmp
push
pop
in
lahf
dec
pause
fwait
dec
inc
mov
jbe
or
fdivs
in
inc
movsb
sbb
cmp
aam
xor
movb
push
adc
push
pop
lock
dec
jbe
dec
clc
sbb
inc
mov
aam
inc
cmpsl
push
adc
ficomps
rorl
jmp
out
mov
fadd
and
inc
cmp
insl
popa
iret
inc
push
xor
sub
pop
xchg
and
jnp
pop
xchg
push
push
movsb
xor
cmc
cmp
xchg
mov
xor
dec
cmp
or
sti
push
xchg
les
mov
and
int3
push
pop
or
pop
pop
fs
popf
jmp
mov
aaa
sbb
cltd
sbb
stos
jmp
jmp
lret
in
cmc
push
movsb
inc
jae
jo
or
adc
mov
pop
or
push
mov
and
jae
cmpsb
xor
pop
mov
or
mov
fstl
cmp
ljmp
stos
jb
xor
and
movsb
xor
pop
add
stos
loop
roll
mov
mov
lret
lods
inc
adc
mov
loop
mul
push
pushaw
out
add
pop
pop
gs
mov
sbb
fdivrl
into
lahf
xchg
stc
repnz
sub
mov
cmpsb
push
mov
xor
sbb
mov
shll
push
mov
mov
lret
jle
lods
push
ftst
push
in
jnp
das
imul
out
xor
push
test
fdiv
push
mov
test
pop
repnz
mov
loop
mov
cmpb
mov
or
scas
push
xor
mov
xchg
scas
ljmp
ss
sbb
and
scas
mov
cmp
stos
xchg
push
push
ss
ss
push
pop
lock
stos
fsubrs
pop
mov
loop
das
mov
lahf
pop
add
ss
pop
push
xor
stos
out
ficomps
fidivs
mov
out
xorb
and
sbb
adc
adc
aas
ljmp
insb
mov
out
addb
lret
mull
pusha
xchg
das
mov
push
add
adc
push
and
out
add
ret
sbb
jg
lahf
arpl
fwait
in
mov
aaa
pop
gs
push
dec
dec
outsb
jbe,pn
jge
inc
sub
push
icebp
dec
mov
and
fidivrs
or
mov
in
or
ret
pop
ss
jo
into
adc
leave
sbb
popa
push
inc
dec
jo
adc
scas
ss
push
jnp
leave
sbb
pop
dec
out
pop
imul
lods
pop
mov
xor
sti
int
in
adc
mov
test
out
je
mov
fistpl
loope
aas
stc
add
or
or
roll
push
push
scas
cmp
pop
pusha
ja
and
mov
mov
cmp
out
sbb
push
lahf
cwtl
xchg
call
adc
push
push
daa
jno
cmp
cmc
arpl
mov
data16
fstps
adc
sbb
push
adc
xchg
inc
lahf
cmp
jbe
adc
dec
addb
and
mov
jns
dec
mov
sbb
jle
pushf
js
sub
cs
dec
rcrl
outsl
lcall
jb
pop
inc
cmp
jbe
hlt
stos
repnz
cmp
lods
lret
xor
add
jbe
sub
es
lcall
push
aam
scas
sbb
xlat
or
lock
cli
push
test
mov
insb
cld
adc
sub
inc
arpl
xor
or
mov
dec
and
push
imul
adc
jp
cli
jmp
adc
sub
shr
jl
js
push
outsl
dec
cmp
mov
es
out
jns
sub
and
sbb
lods
mov
add
cwtl
fisttpll
movsb
xchg
ret
adc
fisubs
push
push
loopne
fwait
sbb
jp
ret
jno
jg
adc
addr16
outsl
pop
in
jp
xchg
loope
add
ret
mov
test
andb
xchg
push
inc
push
add
cmp
push
clc
test
lods
mov
leave
xor
cs
xor
aas
pop
jbe
sub
loope
jle
mov
addr16
ret
pop
lods
inc
dec
jl
hlt
push
sub
pop
out
call
xchg
cmp
loope
sbb
imul
jae
sbb
and
add
cmp
mov
dec
jge
lea
jmp
mov
std
outsb
mov
shrb
or
mov
xor
mov
out
loop
sbb
fildl
mov
jecxz
lret
sub
fsubr
pop
fadd
cmp
or
xor
fcmovnb
mov
dec
dec
cmp
call
aas
lret
cli
repnz
call
lods
lret
adc
mov
fcoms
repz
ljmp
sub
mov
pushf
arpl
int3
or
pop
loope
popa
push
xorb
or
fmuls
pusha
int3
outsb
inc
or
.byte
