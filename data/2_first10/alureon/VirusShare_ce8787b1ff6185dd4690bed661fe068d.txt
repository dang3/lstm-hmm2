push
lea
sub
mov
push
push
push
push
push
push
mov
call
push
push
call
test
je
push
xor
push
call
push
mov
call
mov
cmp
je
lea
push
push
call
mov
mov
mov
mov
push
push
mov
call
cmp
jne
movl
push
push
call
push
push
mov
call
xor
cmp
setl
mov
mov
cmp
mov
je
mov
cltd
sub
sar
mov
push
push
call
mov
neg
sbb
and
add
push
mov
call
push
mov
call
movzwl
push
call
pop
pop
push
push
push
call
push
push
push
call
push
push
lea
push
call
lea
push
call
mov
mov
mov
movzwl
xor
jmp
cmp
jne
cmpw
je
inc
inc
mov
cmp
jne
jmp
xor
inc
lea
push
movl
movl
call
mov
push
pushl
call
push
push
push
push
push
pushl
mov
call
cmp
mov
mov
jne
xor
push
pop
lea
rep
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
movl
movl
movl
mov
movl
movl
call
test
je
mov
push
mov
imul
cltd
pop
idiv
push
push
mov
mov
add
mov
lea
mov
mov
shl
mov
lea
push
call
mov
mov
sub
sub
mov
cmp
mov
mov
jle
mov
push
pushl
neg
push
push
pushl
sbb
push
push
push
and
add
push
push
push
push
call
cmp
mov
je
lea
push
call
push
push
push
pushl
call
test
jne
call
xor
jmp
call
pushl
call
pushl
pushl
call
pushl
call
push
pushl
call
mov
xor
cmp
sete
push
call
cmp
je
call
cmpl
je
cmpl
je
push
push
push
pushl
call
xor
inc
pop
pop
pop
add
leave
ret
push
mov
mov
mov
mov
mov
mov
cmp
jb
push
push
mov
mov
mov
lea
xor
test
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
mov
mov
lea
ror
lea
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
mov
inc
cmp
jb
pop
pop
pop
ret
push
mov
sub
mov
push
push
push
push
mov
movl
call
andl
movl
mov
movl
mov
mov
movl
mov
mov
mov
mov
mov
imul
xor
add
incl
mov
push
push
mov
call
mov
mov
mov
mov
mov
xor
mov
div
mov
mov
mov
mov
sub
not
add
xor
mov
mov
incl
add
cmpl
jb
cmpl
je
mov
mov
jmp
push
call
mov
mov
mov
xor
push
push
push
push
call
movl
mov
push
shl
push
add
incl
push
push
call
mov
mov
test
je
push
call
mov
push
push
call
mov
call
add
cmpl
je
cmpl
jne
lea
push
push
pop
add
xor
div
push
pushl
push
call
mov
push
push
push
push
call
lea
mov
lea
add
lea
add
mov
mov
mov
mov
and
call
mov
mov
mov
call
mov
mov
push
push
mov
xor
push
push
mov
mov
call
mov
lea
push
push
push
lea
push
pushl
movb
pushl
movb
push
call
push
push
push
call
mov
call
mov
call
test
je
pushl
mov
pushl
pushl
pushl
call
cmpl
mov
jne
push
call
test
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
mov
push
xor
cmp
je
cmp
push
mov
je
push
call
jmp
push
push
push
pushl
call
push
push
push
pushl
call
push
push
push
pushl
call
pop
pop
ret
mov
push
mov
sub
mov
push
push
push
mov
mov
mov
push
mov
lea
push
pushl
pushl
call
lea
xor
test
je
push
push
push
call
add
test
je
push
add
push
call
inc
pop
add
cmp
pop
mov
jl
mov
mov
pop
pop
mov
pop
call
leave
ret
push
mov
push
push
mov
imul
push
mov
cmp
jb
mov
push
call
mov
add
imul
push
xor
pop
div
mov
mov
mov
mov
sub
mov
test
je
mov
sub
push
mov
call
xor
divl
mov
add
cmp
jae
mov
mov
imul
xor
divl
xor
mov
sub
imul
div
mov
cmp
jae
mov
sub
push
pushl
pushl
call
add
add
add
add
cmpl
jne
pop
pop
pop
leave
ret
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
mov
push
mov
sub
mov
push
mov
push
push
lea
mov
call
lea
xor
call
test
je
test
je
cmpb
je
mov
push
call
mov
push
mov
call
mov
lea
push
call
mov
test
je
push
push
push
push
call
add
push
call
test
je
push
push
push
call
mov
test
jge
push
push
push
call
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
call
mov
mov
pop
pop
pop
call
leave
ret
push
mov
sub
mov
mov
mov
sub
mov
je
mov
test
je
push
mov
add
test
je
push
push
mov
sub
mov
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
addl
decl
jne
mov
test
jne
pop
pop
pop
xor
inc
leave
ret
mov
push
mov
push
mov
test
je
push
mov
test
je
andl
push
call
push
call
push
call
test
je
push
call
push
call
mov
push
call
push
call
pop
pop
pop
ret
push
mov
sub
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
jne
inc
jmp
andl
push
push
lea
lea
cmpl
mov
je
mov
mov
jmp
mov
mov
add
xor
nop
movb
mov
mov
inc
cmp
jb
mov
test
je
lea
movsbw
mov
add
inc
mov
test
jne
lea
push
call
mov
test
je
mov
mov
add
andl
cmpl
mov
je
mov
mov
testl
je
push
call
mov
and
push
pushl
call
push
jmp
push
call
push
call
mov
add
add
push
pushl
call
push
mov
call
cmpl
je
incl
mov
mov
lea
cmpl
jne
mov
incl
mov
imul
add
mov
add
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
jmp
mov
push
mov
push
mov
xor
mov
test
movl
je
push
call
pushl
call
mov
xor
inc
pop
pop
ret
mov
mov
ret
mov
mov
mov
mov
rol
imul
add
mov
mov
mov
ret
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
test
je
andl
mov
sub
add
mov
mov
mov
lea
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
cmpl
mov
je
or
sub
mov
mov
sub
add
mov
mov
mov
lea
push
push
push
call
mov
mov
mov
sub
add
mov
movzwl
add
lea
movzwl
lea
mov
mov
mov
andl
xor
cmp
jae
mov
mov
mov
mov
mov
mov
addl
add
push
pop
rep
mov
add
add
incl
mov
movzwl
cmp
jb
mov
mov
add
pop
mov
xor
pop
inc
pop
leave
ret
push
mov
sub
push
push
mov
xor
cmp
je
mov
cmp
je
cmp
je
cmp
je
add
push
lea
push
push
call
mov
add
add
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
sub
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
mov
mov
lea
ror
mov
lea
add
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
cmp
jb
mov
mov
test
je
mov
sub
mov
mov
inc
dec
jne
pushl
mov
pushl
pushl
pushl
pushl
call
mov
mov
mov
call
mov
add
push
pushl
pushl
pushl
call
add
pop
jmp
xor
pop
pop
leave
ret
mov
push
mov
xor
cmp
jne
mov
jmp
mov
push
mov
mov
test
je
mov
inc
inc
decl
jne
cmpl
pop
jne
dec
mov
movb
pop
ret
push
mov
push
andl
push
lea
push
push
call
add
cmpl
je
push
pushl
call
pop
pop
test
jne
push
mov
push
call
push
call
push
call
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
push
call
push
call
push
call
mov
pop
jmp
mov
leave
ret
push
mov
testl
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
pop
ret
push
call
pop
ret
add
add
fldl
cmp
lods
popf
xchg
fcompl
mov
testl
sub
sahf
js
loopne
and
and
cmpl
jmp
fsubs
mov
or
xor
mov
xorl
push
out
jbe
inc
xor
lods
out
dec
dec
iret
dec
add
mov
fcmovbe
pushf
adc
repz
enter
insl
mov
pop
xchg
lret
cmp
test
pop
movsb
aad
call
jp
int
adc
fsubrl
mov
sahf
xchg
add
add
dec
mov
iret
push
dec
int3
aad
arpl
ror
xlat
sub
not
mov
montmul
cmpsb
inc
adc
or
xor
and
std
dec
shrl
outsl
in
inc
into
lret
fistl
mov
aas
out
loop
insb
push
inc
mov
andb
push
cmp
sub
sbb
imul
in
sub
push
adc
out
lret
xchg
orl
xor
push
inc
mov
sub
xchg
add
lods
xor
pop
xchg
idivl
dec
cmc
add
gs
fldcw
mov
mov
daa
aad
cltd
xor
pop
sti
push
in
jge
jge
mov
and
or
xchg
inc
xchg
insl
ficoms
cmp
xchg
imul
dec
lods
mul
push
and
add
pusha
fisttps
pop
ja
stos
mov
pop
and
pop
cmp
inc
nop
sbb
dec
cmp
jne
pusha
je
jp
aaa
fwait
rcll
add
cmp
xchg
add
mov
adc
mov
sub
mov
mov
cld
rcrb
sub
adc
xor
xorb
push
mov
xchg
xchg
mov
shll
jo
add
mov
sub
scas
sahf
inc
pushl
mov
cmp
pushf
lods
push
popa
pushw
mov
divl
les
pop
pop
pushf
mov
sbb
dec
call
aas
xchg
sbb
lret
dec
cmc
mov
xor
leave
daa
and
dec
jle
adc
lret
ja
adc
faddl
ja
int3
xchg
inc
popa
adc
imul
mov
jnp
add
push
sub
cwtl
loopne
mov
jecxz
iret
iret
outsb
stos
notb
jmp
arpl
mov
and
mov
cmpsb
ficoms
jmp
pop
fsubs
in
pop
add
dec
out
xchg
imul
inc
push
mov
and
cmpsl
hlt
add
and
pop
leave
insb
push
pop
push
orb
sub
push
cmp
xchg
jns
or
movsl
xchg
add
sbb
or
daa
and
mov
iret
cmpsl
mov
ljmp
mov
add
xor
cld
hlt
cli
lahf
push
mov
mov
push
pop
mov
cmp
xor
and
jae
cli
fldcw
cmc
imul
lret
fists
and
or
aad
xchg
jo
xchg
fs
pop
jo
fsubs
fisubrs
dec
mov
hlt
mov
das
cmp
push
or
jp
fisttpl
add
xchg
add
test
dec
pop
jb
inc
xlat
xchg
pushf
shrb
daa
xchg
push
or
clc
lds
ja
jno,pt
testl
test
lea
xlat
and
aam
inc
sbb
pop
sti
scas
push
sub
es
mov
sub
fimuls
push
test
xlat
sub
rcr
jp
dec
popa
aam
cmc
pop
inc
jns
repz
push
sub
pop
xor
add
pushf
cli
and
or
daa
xor
jno
push
scas
jne
sarl
mov
fwait
and
inc
and
aam
or
mov
mov
into
mov
jno
jbe
fistps
test
jle
jnp
inc
inc
mov
mov
cli
pop
lret
dec
insb
mov
cld
aas
cltd
pop
mov
jp
jle
add
jo
xchg
int
cmc
ltr
les
scas
mov
orl
sub
jo
jge
mov
inc
jne
jmp
std
mov
ljmp
mov
bound
dec
inc
cmp
movsb
les
fstps
movsl
stc
mov
aam
lahf
sbb
daa
and
adc
push
adc
jl
or
push
cmpsl
test
xchg
inc
fwait
js
add
stos
lods
movsb
je
jle
cltd
cli
sub
inc
jp
jge
jbe
sub
shlb
pushf
pop
cmp
inc
cmp
scas
lods
ret
sbb
repnz
pushf
jns,pn
mov
sbb
sahf
or
sbb
ficoms
pop
xchg
pusha
fdivp
mov
cld
bound
jo
pop
push
sub
call
xchg
xchg
mov
fdivl
xchg
add
jbe
lds
inc
aaa
mov
lahf
out
dec
fildll
add
ret
xchg
push
mov
sti
pop
or
scas
idivb
xor
insl
pusha
loop
into
mov
xchg
push
test
pop
jno
fidivs
js
mov
or
inc
xor
aam
cmc
jno
mov
cld
sub
dec
call
or
xchg
pusha
hlt
lret
jmp
or
cmp
out
pop
cld
push
pusha
jmp
in
or
es
add
ret
xor
pushf
pop
xchg
jb
stc
or
fdivrl
sub
push
cmp
cmp
ret
sbb
mov
jne
sub
inc
adc
push
mov
outsb
jp
sti
aas
cmp
xchg
adc
dec
movsb
jecxz
mov
sub
nop
lcall
push
test
add
xor
inc
outsl
insb
mov
mov
les
jae
mov
movsl
push
push
push
add
int
and
loop
sti
mov
xchg
fsts
xchg
and
lahf
jno
fisubl
pop
jno
or
adc
or
movsb
rclb
int
pop
stc
es
pop
add
mov
xchg
push
shl
dec
out
and
test
adc
dec
push
xor
out
and
insl
adc
mov
pop
sti
jae
xchg
clc
loope
push
jae
mov
xchg
fnsave
cmpsb
mov
adc
pop
push
aam
mov
add
test
xor
insl
dec
cmc
inc
fists
xor
and
or
sub
mov
ljmp
das
pop
mov
and
dec
mov
testb
stc
mov
popf
cmp
data16
jno
xchg
cld
sub
xchg
and
cmp
inc
cltd
lods
add
and
xchg
test
in
mov
pusha
sbb
mov
lock
add
insb
jnp
mov
bound
pop
add
out
jg
cli
jmp
cld
and
stc
xchg
pop
div
sub
rcrl
mov
jg
adc
pop
add
stc
xlat
pushf
lahf
pop
sub
dec
or
je
movl
outsl
push
xchg
cmpl
les
xorb
xor
add
dec
mov
xchg
les
push
repz
jbe
lret
mov
call
push
adc
rcl
mov
divl
pop
or
sbb
push
aad
inc
pop
notb
push
sbb
inc
jecxz
push
aaa
imul
jl
inc
mov
ja
out
add
fmull
roll
xchg
sbb
or
ror
xchg
xor
sub
mov
test
das
cmp
cmovg
ffreep
pop
pop
fwait
in
sub
cli
pop
clc
pop
push
xchg
or
repnz
xor
pop
sbb
repnz
xchg
icebp
pop
lret
xchg
inc
out
mov
dec
or
cmpsl
shld
lahf
ficoms
cmp
std
cmpsb
nop
enter
push
add
xor
pop
lock
sub
add
sbb
mov
and
aad
out
leave
aam
sbb
test
ljmp
outsl
test
fs
xchg
inc
sahf
mov
faddl
jbe
inc
lds
sub
push
leave
inc
lds
jg
std
insb
out
mov
enter
or
mov
dec
push
cmp
sbb
mov
imul
and
fldt
or
add
add
ljmp
lds
xor
in
dec
lods
lcall
cltd
mov
popa
dec
aam
jecxz
aaa
data16
sarl
test
push
pop
sbb
sub
imul
pop
lods
pop
sbb
nop
jmp
add
pop
push
gs
pushf
jl
xor
adc
cmpsl
sbb
shr
add
mov
pop
add
out
adc
aad
in
out
add
subl
es
mov
and
sbb
pop
js
addr16
or
iret
sbb
pop
jle
pop
cmp
pop
fwait
xchg
jge
psrad
mov
insl
popa
sub
daa
loope
in
pop
ja
test
lds
into
mov
stos
test
cwtl
jmp
dec
push
mov
add
and
mov
pop
nop
inc
mov
and
push
repnz
lret
mov
xor
je
popf
adc
movsb
pop
jmp
sysexit
in
xor
add
nop
cmc
xor
push
inc
or
pop
iret
daa
ds
clts
stos
repnz
int3
cmp
mov
push
in
mov
dec
insl
clc
stc
in
adc
dec
mov
hlt
add
rolb
mov
mov
ds
daa
jmp
xor
in
push
lret
cmp
xchg
inc
nop
sub
fldenv
mov
fisttps
lds
arpl
cmpsl
loope
sub
lcall
xor
pop
add
data16
jle
lds
xorb
ljmp
sbb
jmp
jb
scas
sbb
add
push
stc
call
and
das
sub
repnz
addr16
test
adc
push
sbb
or
popf
inc
into
pop
pop
sbb
xchg
fsubrl
in
ss
mov
es
sub
inc
dec
out
negb
in
xchg
shll
daa
shlb
mov
sbb
movsb
push
mov
call
add
adc
mov
scas
mov
xor
push
pop
add
mov
mov
mov
cmp
and
hlt
push
or
dec
jne
test
int
and
pop
cli
iret
arpl
xchg
mov
or
mov
mov
jns
ret
aas
xchg
and
hlt
mov
or
lea
jno
fs
out
mov
aam
jbe
pop
xchg
mov
popf
mov
cmp
inc
aad
xchg
add
add
mov
popa
mov
and
xchg
divl
mov
jns
mov
lods
mov
les
adc
add
pusha
mov
sub
out
xor
negb
add
xchg
push
xor
out
jbe
inc
into
jmp
or
test
mov
stos
divl
movsb
mov
sbb
les
sub
or
mov
add
add
pop
cmp
gs
jmp
iret
mov
psubb
pop
shlb
cwtl
rcrb
pop
out
xorb
ss
scas
jle
cmp
repz
pop
stos
mov
lcall
stos
imul
cltd
insb
jo
addr16
jae
push
loop
sbb
pushl
inc
test
jmp
mov
mov
shr
pop
aam
cli
sti
xchg
cltd
jle
xchg
push
int
dec
mov
aam
insb
jbe
cwtl
enter
dec
adc
rcl
xor
push
inc
xchg
std
rolb
lds
subb
int3
nop
shl
ficoml
fnstenv
inc
lock
fcoms
mov
mov
sahf
aas
xchg
lods
pop
mov
inc
sarb
dec
jge
jg
push
adc
or
mov
into
mov
mov
xchg
dec
pop
aas
mov
sub
cwtl
jg
inc
outsl
repz
addb
pusha
jno
ja
dec
dec
adc
pop
xor
jle
jno
stos
cmpl
cmp
push
les
dec
outsb
std
push
cmp
add
decb
push
or
stc
push
and
stos
dec
push
add
cmpsb
or
sub
leave
test
orb
jg
jmp
punpckhdq
xchg
inc
shlb
lods
add
aam
xchg
in
cltd
lds
hlt
cld
or
jo
mov
xchg
scas
mov
add
add
notl
push
cmp
xor
jnp
fs
mov
fdivl
lcall
int
sbb
xchg
pushf
sahf
int
in
fisubrl
sahf
outsl
jns
mov
arpl
call
std
push
jns
dec
xor
mov
scas
push
jns
mov
fistl
and
push
stos
xchg
pushf
add
in
mov
ds
mov
shlb
or
inc
adc
call
out
pop
adc
xchg
jno
or
fcmovbe
lock
inc
ret
mov
jp
mov
dec
sub
dec
daa
jnp
pop
xor
mov
sbb
out
add
push
jge
sbb
jbe
xor
scas
rolb
sbb
xor
ljmp
xchg
insl
mov
popa
mov
and
scas
mov
daa
sahf
pop
std
or
or
or
aad
in
call
xor
in
mov
adc
xor
sbb
dec
pop
pusha
outsl
outsb
movsb
cmp
lcall
mov
rcrl
xchg
cmp
sbb
fpatan
std
aaa
ds
add
icebp
mov
int
and
push
inc
inc
pop
pop
and
in
mov
xlat
sbb
add
fiadds
cmp
add
fs
arpl
add
adc
movsb
mov
add
add
adc
push
mov
mov
jl
shrb
lds
mov
xchg
xor
jne
add
stos
add
cmpsl
or
inc
stos
arpl
leave
sbb
mov
dec
push
add
mov
dec
mov
fstl
pop
push
inc
fcompl
sub
call
mov
or
jne
imul
sub
mov
sub
loope
ja
movsb
xchg
addr16
ss
enter
imul
mov
mov
leave
xchg
scas
int3
hlt
dec
test
movsb
mov
addr16
inc
jle
cld
mov
enter
jmp
push
mov
test
lea
mov
shll
or
outsl
test
sbb
lret
add
test
dec
add
cs
dec
hlt
int
mov
mov
sarl
or
and
add
fcoml
addl
int3
ror
stos
or
test
sti
loope
jno
xchg
or
inc
xor
xchg
add
lds
and
inc
add
jecxz
mov
fs
mov
xchg
enter
in
arpl
sub
jle
aas
add
push
movsl
subl
add
push
adc
sbb
jp
insb
les
sbb
lahf
fistps
jl
cmpsl
add
in
lret
repz
adc
rcll
or
dec
les
adc
sti
in
xor
mov
mov
mov
mov
aam
pop
out
pop
adc
or
mov
mov
out
pop
push
fs
add
xchg
xchg
lock
cld
int3
loop
jmp
jmp
fidivrl
mov
and
mov
sub
out
or
imul
es
fimuls
sbb
mov
and
xor
fstpt
jg
sub
sub
ret
cmp
dec
mov
inc
jecxz
mov
test
pop
and
jbe
into
inc
jecxz
pop
push
arpl
cmp
pop
cld
cmpsb
mov
int3
add
add
jno
and
pushf
xchg
or
mov
aad
fwait
jb
xchg
repnz
lea
shll
push
aas
jno
in
mov
jp
test
das
jecxz
xchg
insl
cmp
mov
sub
in
sub
dec
outsl
jno
lea
scas
pop
xor
mov
scas
pop
jecxz
dec
sbbb
xchg
shr
sub
pop
mov
mov
and
test
and
jb
add
ret
orb
mov
adc
in
pushf
cwtl
jae
fwait
out
je
jns
cwtl
fldenv
mov
jno
fimull
bswap
pop
fsubrs
fisubrl
dec
push
cmpl
cmpsl
call
push
add
dec
xor
mov
stos
shlb
test
pop
pop
jns
rorl
mov
scas
push
ja
ret
pusha
lret
push
mov
rcr
add
leave
and
sub
insl
adc
dec
jno
mov
addr16
mov
clc
fcmovne
movhps
repz
dec
and
movsl
jnp
nop
repnz
ror
inc
sbb
test
movsb
or
mov
xchg
fs
std
inc
insb
popf
pop
pop
std
adc
mov
outsb
adc
or
cs
pop
ret
in
push
mov
cmpsl
push
in
mov
xor
mov
add
and
xchg
cmp
jae
rorl
stc
mov
add
enter
leave
mov
jae
lea
cmp
aam
test
das
lods
ljmp
pop
sub
mov
mov
push
or
push
in
inc
fs
es
sub
inc
xor
add
in
jae
adc
fnstenv
dec
push
cwtl
shlb
iret
in
sub
xor
cmc
add
lock
jmp
xchg
xchg
hlt
pusha
push
sub
inc
enter
mov
push
jb
push
rclb
jp
mov
scas
int3
imul
xchg
inc
push
pop
test
inc
pop
adc
sbb
outsb
icebp
ret
std
mov
push
repnz
out
mov
add
aas
ss
inc
and
dec
pop
add
cld
out
insb
inc
fwait
mov
push
nop
pop
xor
add
xchg
dec
mov
stc
or
jnp
shr
mov
jle
jecxz
es
pop
add
add
mov
mov
jae
jbe
dec
in
inc
dec
jo
xor
cmp
xchg
jns
repnz
add
push
mov
jmp
xor
mov
das
push
adc
and
and
out
and
adc
dec
mov
lcall
add
add
pop
orb
loope
dec
or
das
mov
xor
xchg
jnp
add
inc
popf
jb
mov
push
and
movsl
ds
stos
push
xchg
add
outsb
es
addb
int3
mov
pop
add
cmp
iret
das
adc
rol
inc
fisttpll
cwtl
imul
sbb
push
jns
cmp
adc
push
sbb
dec
add
mov
enter
cmc
setle
push
pop
add
mov
lods
mov
or
gs
jecxz
xor
addr16
adc
or
mov
into
mov
inc
out
fadd
mov
mov
jb
mov
pushf
ja
data16
cmp
push
loopne
mov
in
das
sbb
shl
je
movsl
xchg
comiss
flds
fmulp
cli
imull
sahf
int3
aad
pop
lahf
mov
or
out
mov
popa
dec
sub
scas
aam
ret
mov
fwait
jno
fildll
lret
mov
push
xchg
addr16
bound
xchg
cmp
rol
imul
cmp
shrb
xor
aam
sahf
or
push
cs
fidivs
pop
or
add
push
dec
std
jae
dec
in
mov
push
xchg
add
dec
inc
rcrb
cwtl
sti
aam
sbb
jge
ret
faddl
adc
push
pop
aas
fmull
aaa
push
imulb
les
pushf
pop
or
fsubl
jnp
add
mov
outsb
mov
lods
push
push
repnz
mov
or
jge
add
js
add
iret
adc
jle
addb
imul
adc
and
add
ds
shrl
add
fs
clc
fidivs
and
jg
and
sti
outsl
lret
aaa
jmp
cmpsb
inc
add
inc
popf
cmp
cltd
in
add
in
or
pop
pop
mov
ret
inc
sbb
fisttpl
pusha
in
adc
dec
and
hlt
idivb
or
std
jnp
push
mov
arpl
dec
jnp
or
adc
repnz
add
add
int
adcb
lea
mov
lods
ficomps
insl
or
icebp
cwtl
xor
addr16
adc
xchg
add
daa
rorl
push
insl
xchg
push
out
mov
clc
std
mov
inc
ror
js
mov
sahf
ja
jg
push
jp
xchg
fld
test
adc
xlat
outsl
movsb
dec
lcall
rolb
loop
dec
push
and
or
jl
mov
dec
mov
aas
mov
clc
add
or
sbb
hlt
imul
xchg
imul
mov
es
xor
jb
mov
sahf
insb
jo
add
cltd
lcall
subb
dec
pop
mov
rolb
cs
pushf
iret
push
pop
imul
divb
fcomp
cmpsl
fs
jns
pusha
int3
mov
mov
mov
jno
mov
mov
pop
fstpt
movsl
rorb
push
aas
add
test
jp
xchg
sub
inc
outsb
out
sbb
lcall
je
adc
loope
jae
loop
aad
and
inc
sub
aas
cmpsb
xchg
cmp
dec
dec
fnop
sbb
xchg
cmpb
mov
and
pop
jmp
xor
fisttpl
sbb
adc
pushf
sub
jecxz
push
gs
sub
inc
xchg
test
fnsave
in
inc
outsl
inc
cmc
jmp
sbb
imul
add
mov
in
jecxz
sbb
push
imul
popa
int
jg
dec
jns
fbld
loope
fucomp
mov
add
aas
sbb
xchg
sbb
adc
pop
jg
mov
or
les
cmp
lahf
add
imul
mov
call
jbe
add
jne
ss
in
pop
outsb
mov
idiv
xchg
fcomip
pop
outsl
cmpsl
add
rorb
out
ret
jg
outsb
mov
int3
mov
mov
dec
xchg
xchg
arpl
jl
xor
dec
and
push
leave
dec
ljmp
sub
call
push
fdivrs
jbe
data16
xor
repnz
cmp
fmul
cmp
xchg
push
or
movsb
and
fdiv
shrl
jmp
pop
ret
mov
add
add
call
div
sbb
dec
addr16
mov
cmpsl
jo
rcrl
stos
jmp
test
fadds
mov
mov
push
sbb
jp
adc
or
shlb
mov
lahf
jne
addb
pop
or
test
shl
jle
adc
pop
cmc
popa
mulb
ja
repz
add
xchg
daa
xchg
mov
or
cld
sbb
in
iret
xlat
arpl
fistps
mov
aad
and
imulb
popf
and
imul
mov
xchg
repnz
xor
sbbb
mov
loop
aas
sbb
mov
in
cwtl
in
mov
xchg
adc
mov
mov
insl
mov
dec
dec
pop
add
add
or
mov
or
cmpsb
dec
push
icebp
in
dec
pop
stc
pop
dec
lods
imul
es
fs
push
cwtl
cld
fsubl
mov
mov
loop
out
cmp
sti
sbb
into
leave
pop
xchg
in
mov
jne
adc
lahf
or
jno
loopne
push
cmp
hlt
adc
cmp
sub
xor
xchg
insb
pop
jae
ss
inc
jmp
addb
adc
mov
cltd
mov
adc
jne
aam
cmpsb
push
std
movsb
sahf
lcall
xorl
test
xchg
ficoml
lcall
in
cltd
scas
and
gs
mov
ja
movl
mov
imul
in
out
cmc
inc
shr
popl
ret
lea
xchg
mov
jne
mov
sbb
adc
ja
std
stos
movsl
fnstcw
mov
aam
or
rcrb
dec
and
sahf
popf
scas
sub
mov
dec
aas
xchg
adc
orb
push
and
jmp
and
addr16
mov
inc
stc
andl
mov
lods
mov
out
rorb
xchg
sub
dec
mov
jp
xchg
sbb
mov
hlt
inc
out
popa
mov
add
add
fwait
mov
ja
out
testl
rolb
xchg
push
mov
pushf
in
push
loopne
arpl
dec
enter
shlb
xchg
sub
and
xor
xchg
pop
adc
sub
pop
sbb
call
pop
fidivl
jo
ds
xor
imul
sub
or
sti
cltd
shll
inc
pop
cmpl
push
mov
inc
mov
add
add
fidivrl
push
in
ficoms
xor
rcrl
adc
icebp
aaa
xchg
add
mov
pushf
xchg
adc
jnp
insb
sub
dec
add
mov
jns
push
push
pop
fistl
les
test
mov
add
mov
mov
adc
adc
fisubs
rcll
push
sti
cwtl
ljmp
data16
xchg
xchg
jg
mov
add
adc
push
mov
mov
mov
icebp
movsb
xchg
mov
lea
or
js
push
loope
xor
rcr
clc
shll
add
scas
shlb
mov
dec
cmp
dec
fucomi
mov
movsl
inc
cmp
test
aas
loopne
aad
mov
sub
out
jmp
sub
dec
stc
mov
adc
rolb
hlt
mov
daa
testb
add
add
jno
pop
mov
dec
rcrb
sub
xchg
cmpsl
ss
adc
shl
push
or
loop
add
mov
shll
sbb
jns
mov
jo
push
aad
in
inc
cmpsb
dec
push
scas
cmp
inc
inc
mov
xor
std
cltd
mov
cs
fsubr
aam
sbb
inc
inc
xor
lea
mov
xlat
adc
xor
add
leave
add
loop
in
xor
mov
popa
ret
adc
lcall
dec
adc
pop
ret
stos
push
fwait
lods
mov
sahf
and
into
xchg
in
mov
out
rcrl
in
adc
mov
inc
test
stc
lods
lcall
lahf
pop
je
into
jbe
fs
inc
or
xchg
cwtl
shll
out
hlt
cmc
inc
loope
adc
mov
loope
lret
or
add
sub
jae
std
inc
nop
mov
sahf
mov
or
fidivrs
js
aaa
inc
mov
and
dec
push
sbb
jl
cmp
stos
lods
lods
add
enter
sub
int3
pop
mov
mov
stc
jnp
lods
jle
sub
repnz
fldl
mov
lods
pop
aas
inc
or
fildll
xorb
dec
inc
ret
into
insb
mov
add
pusha
jmp
roll
imull
icebp
or
in
mov
ret
pop
add
xchg
aas
ficoml
clc
lret
sbb
jmp
mov
add
and
dec
xor
mov
pop
dec
and
pop
xchg
andb
jmp
fs
dec
adc
jecxz
repz
dec
nop
sbb
popa
pop
jae
and
out
jecxz
inc
jne
iret
adc
ja
add
add
inc
leave
scas
xchg
jge
mov
outsl
aad
sbbl
cltd
xchg
aaa
lret
xchg
out
mov
int
sarb
gs
adc
push
sbb
and
ljmp
xor
adc
outsb
mov
jecxz
pop
popa
mov
cmpsb
mov
lret
add
ret
sbb
out
in
add
dec
outsb
in
loopne
inc
cmp
xor
add
cmpsl
xchg
and
jb
dec
sahf
adc
sub
mov
imul
xchg
cmp
inc
test
inc
pop
mov
sbbl
mov
adc
push
xlat
cli
out
push
mov
and
jb
les
loopne
scas
push
add
int3
pop
clc
mov
xor
cs
and
push
lods
push
int3
jae
jge
sahf
xor
sbb
bound
adc
sub
fidivl
test
add
add
add
scas
inc
xor
mov
mov
fstpt
push
popf
xchg
jb
aaa
adc
rcrl
add
repz
dec
in
es
cmc
icebp
hlt
mov
push
js
lods
mov
sub
push
lea
mov
loope
dec
and
add
sbb
jecxz
adc
mov
sahf
mov
into
into
xchg
adc
sub
add
sbb
fnsave
sub
icebp
or
inc
sub
mov
sbb
jmp
adc
lods
cs
inc
pop
out
movsb
jbe
and
cmp
outsb
fdivrp
and
and
xor
in
ja
mov
stc
cs
adc
mov
bound
mov
movsb
gs
