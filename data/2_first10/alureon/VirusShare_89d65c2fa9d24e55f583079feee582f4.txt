push
mov
push
push
mov
imul
push
mov
cmp
jb
mov
push
call
mov
add
imul
push
xor
pop
div
mov
mov
mov
mov
sub
mov
test
je
mov
sub
push
mov
call
xor
divl
mov
add
cmp
jae
mov
mov
imul
xor
divl
xor
mov
sub
imul
div
mov
cmp
jae
mov
sub
push
pushl
pushl
call
add
add
add
add
cmpl
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
mov
test
je
andl
mov
sub
add
mov
mov
mov
lea
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
cmpl
mov
je
or
sub
mov
mov
sub
add
mov
mov
mov
lea
push
push
push
call
mov
mov
mov
sub
add
mov
movzwl
add
lea
movzwl
lea
mov
mov
mov
andl
xor
cmp
jae
lea
mov
mov
addl
push
lea
pop
rep
mov
add
movzwl
add
incl
cmp
jb
mov
mov
add
pop
mov
xor
pop
inc
pop
leave
ret
push
mov
sub
push
mov
push
test
je
mov
test
je
cmpl
je
mov
test
je
push
lea
push
lea
push
push
call
mov
add
push
pop
lea
add
call
mov
test
je
mov
sub
mov
mov
inc
dec
jne
pushl
mov
pushl
pushl
pushl
pushl
call
mov
mov
mov
call
mov
add
push
pushl
pushl
push
call
add
pop
jmp
xor
pop
pop
leave
ret
mov
push
xor
cmp
je
cmp
push
mov
je
push
call
jmp
push
push
push
pushl
call
push
push
push
pushl
call
push
push
push
pushl
call
pop
pop
ret
push
mov
mov
push
call
pop
test
je
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
mov
jmp
mov
pop
ret
mov
push
mov
sub
mov
push
mov
push
push
lea
mov
call
lea
xor
call
test
je
test
je
cmpb
je
mov
push
call
mov
push
mov
call
mov
lea
push
call
mov
test
je
push
push
push
push
call
add
push
call
test
je
push
push
push
call
mov
test
jge
push
push
push
call
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
call
mov
mov
pop
pop
pop
call
leave
ret
push
lea
sub
mov
push
push
push
push
push
push
mov
call
push
push
call
test
je
push
xor
push
call
push
mov
call
mov
cmp
je
lea
push
push
call
mov
mov
mov
mov
push
push
mov
call
cmp
jne
movl
push
push
call
push
push
mov
call
xor
cmp
setl
mov
mov
cmp
mov
je
mov
cltd
sub
sar
mov
push
push
call
mov
neg
sbb
and
add
push
mov
call
push
mov
call
movzwl
push
call
pop
pop
push
push
push
call
push
push
push
call
push
push
lea
push
call
lea
push
call
mov
mov
mov
movzwl
xor
jmp
cmp
jne
cmpw
je
inc
inc
mov
cmp
jne
jmp
xor
inc
lea
push
movl
movl
call
mov
push
pushl
call
push
push
push
push
push
pushl
mov
call
cmp
mov
mov
jne
xor
push
pop
lea
rep
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
movl
movl
movl
mov
movl
movl
call
test
je
mov
push
mov
imul
cltd
pop
idiv
push
push
mov
mov
add
mov
lea
mov
mov
shl
mov
lea
push
call
mov
mov
sub
sub
mov
cmp
mov
mov
jle
mov
push
pushl
neg
push
push
pushl
sbb
push
push
push
and
add
push
push
push
push
call
cmp
mov
je
lea
push
call
push
push
push
pushl
call
test
jne
call
xor
jmp
call
pushl
call
pushl
pushl
call
pushl
call
push
pushl
call
mov
xor
cmp
sete
push
call
cmp
je
call
cmpl
je
cmpl
je
push
push
push
pushl
call
xor
inc
pop
pop
pop
add
leave
ret
mov
mov
mov
rol
imul
add
mov
ret
mov
mov
ret
mov
push
mov
push
mov
xor
mov
test
movl
je
push
call
pushl
call
mov
xor
inc
pop
pop
ret
push
mov
testl
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
pop
ret
jmp
push
mov
sub
mov
mov
mov
sub
mov
je
mov
test
je
push
mov
add
test
je
push
push
mov
sub
mov
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
addl
decl
jne
mov
test
jne
pop
pop
pop
xor
inc
leave
ret
mov
push
mov
push
mov
test
je
push
mov
test
je
andl
push
call
push
call
push
call
test
je
push
call
push
call
mov
push
call
push
call
pop
pop
pop
ret
push
mov
sub
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
jne
inc
jmp
andl
push
push
lea
lea
cmpl
mov
je
mov
jmp
mov
mov
add
xor
nop
movb
mov
mov
inc
cmp
jb
mov
test
je
lea
movsbw
mov
add
inc
mov
test
jne
lea
push
call
mov
test
je
mov
add
andl
cmpl
je
mov
mov
mov
test
jns
and
jmp
add
add
push
pushl
call
mov
test
je
incl
mov
lea
cmpl
jne
mov
incl
mov
imul
add
lea
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
push
mov
push
push
push
mov
mov
mov
mov
cmp
jb
andl
add
je
push
push
pop
sub
mov
imul
mov
mov
lea
ror
lea
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
inc
cmp
jb
pop
pop
pop
leave
ret
push
call
pop
ret
push
mov
sub
mov
andl
push
push
push
mov
movl
movl
mov
movl
mov
mov
movl
mov
mov
mov
mov
mov
imul
xor
add
incl
mov
xor
push
push
push
mov
call
mov
mov
mov
mov
mov
xor
mov
div
mov
mov
mov
mov
sub
not
add
xor
mov
mov
incl
add
cmpl
jb
cmpl
je
mov
jmp
push
call
mov
mov
mov
add
xor
push
push
push
push
call
movl
mov
push
shl
add
incl
push
push
push
call
mov
mov
test
je
xor
push
call
mov
push
push
call
mov
call
add
mov
cmp
je
cmpl
jne
mov
push
call
push
call
lea
push
mov
push
pop
add
xor
div
push
pushl
pushl
call
mov
push
push
push
pushl
call
mov
lea
add
lea
add
mov
lea
mov
mov
mov
and
call
mov
mov
mov
call
mov
mov
push
push
mov
xor
push
push
mov
mov
call
mov
lea
push
push
push
lea
push
pushl
movb
pushl
movb
push
call
push
push
push
call
push
call
mov
push
call
test
je
xor
pushl
mov
pushl
pushl
pushl
call
mov
cmp
jne
push
call
cmp
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
mov
push
mov
xor
cmp
jne
mov
jmp
mov
push
mov
mov
test
je
mov
inc
inc
decl
jne
cmpl
pop
jne
dec
mov
movb
pop
ret
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
mov
push
mov
sub
mov
push
push
push
mov
mov
mov
push
mov
lea
push
pushl
pushl
call
lea
xor
test
je
push
push
push
call
add
test
je
push
add
push
call
inc
pop
add
cmp
pop
mov
jl
mov
mov
pop
pop
mov
pop
call
leave
ret
mov
cltd
imul
sub
push
mov
fisttpl
insl
ss
mov
fistps
gs
std
cld
or
pop
mov
loope
fimull
mov
sub
pop
clc
fisttps
pop
daa
and
leave
push
fimull
mov
cmp
add
or
insl
xor
cmc
je
lods
push
icebp
icebp
icebp
es
xchg
dec
push
in
add
push
push
lret
iret
orb
and
imul
xchg
imul
jno
mov
imul
add
mov
sub
arpl
sbb
decl
jle
fcoms
test
ds
leave
stc
or
cwtl
dec
stos
fdiv
push
cmp
icebp
pop
or
ror
addr16
push
rorl
dec
jne
test
aad
inc
shll
xorl
shll
into
outsb
lret
inc
sbb
fcomi
call
dec
cmp
pop
add
fcoml
mov
push
enter
hlt
push
mov
jl
pop
aam
cmp
loop
pop
xlat
adc
add
adc
pop
sub
sbb
push
add
mov
mov
sbb
pop
jl
sbb
mov
outsb
inc
push
lea
mov
pop
mov
xor
fists
sub
mov
xchg
pop
mov
jne
out
call
sbb
aam
in
fwait
mov
int
jne
out
mov
cmc
pop
daa
xchg
int
xlat
xor
stos
dec
imul
inc
jp
insl
popf
movsb
shrb
pop
rclb
in
out
and
int3
fcompl
aas
cmp
rcrl
adcb
push
push
jbe
scas
lahf
imul
dec
xchg
test
popa
dec
push
dec
repz
aam
insl
js
mov
fsubs
ja
push
sub
xlat
push
cmp
clc
sbb
lods
and
fbld
pop
cwtl
jno
jno
rorl
ret
push
add
sbb
or
push
ja
or
jbe
sbbl
int
xor
stc
mov
sahf
ret
cmc
sbb
mov
mov
push
sbb
adc
sar
imul
out
add
push
mov
xor
add
aas
aaa
mov
mov
mov
out
jb
fst
cmp
outsl
stos
test
xor
mov
fstl
jae
fsubl
sbb
push
lret
ljmp
push
movsb
mov
ds
mov
movsl
inc
aam
sub
out
push
testl
xor
jae
sarb
add
add
xchg
je
and
test
inc
dec
loop
cs
xor
pop
push
repz
push
xchg
lahf
adc
mov
inc
ss
cmp
sub
xchg
xchg
pop
mov
mov
adc
jb
jne
fdivrs
outsl
push
imul
cltd
inc
xchg
rorl
mov
mov
fstpt
sbb
mov
mov
movsl
adc
and
and
jo
bound
sub
jp
stos
xchg
lods
clc
lahf
adc
gs
mov
sahf
daa
vpcomb
nop
inc
jge
imul
mov
ja
out
inc
sbb
sti
std
xlat
add
mov
int3
mov
sbb
daa
add
mov
dec
out
mov
ret
shlb
das
jo
xchg
sub
dec
je
jb
xchg
pop
in
testl
add
add
sub
mov
mov
push
push
or
in
lahf
lock
jle
adc
lahf
jnp
jno
mov
dec
repz
cwtl
insl
test
pop
mov
xor
enter
xor
sub
cmp
mov
int
insb
jge
gs
outsb
pop
adc
pop
cmp
or
les
fsts
loopne
mov
test
add
dec
mov
xchg
aam
loopne
pop
jle
cmp
pop
jb
adc
sub
jbe
mov
outsl
shrb
fcoml
sbb
sarl
movsb
cmp
arpl
movsl
or
pop
sub
loop
mov
push
imul
and
insb
mov
insl
cltd
fs
mov
push
xchg
cmpl
stos
es
loopne
and
pop
rorl
add
insl
cmp
jle
dec
push
repz
mov
mov
shl
xchg
sbb
xchg
and
or
scas
jmp
inc
and
push
jle
out
sub
push
adc
andb
xor
imulb
pop
and
cmpsb
or
or
pop
cmc
ret
add
sub
and
std
shll
repz
arpl
dec
mov
lret
lock
xor
add
add
rcl
ljmp
les
cmc
xor
and
out
subb
loop
punpckldq
xchg
arpl
jp
daa
or
or
pop
outsl
mov
sbb
mov
add
jns
fiaddl
xor
xchg
hlt
outsb
inc
add
idivl
fldl
je
ljmp
lds
test
mov
mov
jmp
ljmp
add
add
cmpsb
addr16
fwait
popf
cltd
fwait
pmaxsw
pop
loope
lods
insl
cmp
jo
data16
dec
push
dec
or
adc
and
mov
adc
adc
lret
add
out
aaa
imul
mov
dec
fdivp
sub
inc
mov
sbb
es
mov
outsb
push
xor
pop
inc
inc
jle
add
pop
cmp
or
or
add
ljmp
mov
mov
adc
jl
sub
and
xlat
aam
movsb
and
jno
xchg
push
jmp
loope
roll
repz
mov
push
stos
inc
adc
mov
jo
inc
fdivrp
andl
xchg
fcompl
ss
in
add
dec
sub
cmc
loope
inc
inc
rolb
add
mov
out
jmp
fsubrl
sub
and
sar
in
inc
sti
cmpsl
mov
bound
mov
enter
sub
sbb
movb
mov
jbe
inc
loope
aam
int
lcall
inc
imul
mov
sub
imul
inc
lahf
outsb
xchg
mov
fcoms
mov
jns
xchg
xor
push
lahf
inc
xchg
sub
ds
add
cmp
push
add
outsl
insl
adc
cmc
mov
xchg
loopne
jl
push
mov
push
sub
mov
and
repnz
fs
push
xchg
push
insl
nop
adc
xor
add
aaa
xor
test
jne
leave
pop
sbb
rolb
push
pop
pop
inc
xchg
push
inc
fisubrl
jns
inc
mov
data16
aaa
outsl
sbb
repz
jbe
adcl
jmp
hlt
aad
test
mov
lcall
insl
scas
loope
pushl
lods
mov
das
sti
adc
push
arpl
stc
arpl
xorl
push
insl
aaa
push
adc
pop
stos
jno
or
mov
daa
pusha
mov
cmp
pand
pop
adc
mov
fiadds
add
cmp
subl
pusha
aas
and
pop
stc
jb
js
pop
mov
mov
arpl
xchg
out
pusha
mov
mulb
lea
sti
cmc
mov
push
fldl
shrl
xchg
aas
movsb
xor
popa
mov
mov
fwait
pop
test
leave
add
inc
lds
ds
std
ror
data16
clc
jle
sbb
mov
inc
mov
in
xor
movsb
lea
jmp
mov
jp
aam
int3
sbb
inc
lods
clc
into
rcrl
aad
shll
mov
pushf
mov
mov
mov
cld
test
xor
xchg
test
adc
add
in
push
mov
inc
pop
dec
addr16
push
lock
cmp
xchg
jl
ja
xor
mull
pop
or
push
or
dec
dec
test
aam
jno
mov
dec
xchg
add
les
fmull
add
xchg
es
lret
in
ret
mov
xchg
push
mov
imul
inc
fwait
jl
mov
mov
jge
insb
inc
mov
ret
dec
adc
jo
shl
adcb
inc
ljmp
jge
cmp
pop
ficoms
mov
fwait
aas
addl
add
mov
test
mov
popa
xchg
in
scas
repnz
insb
insb
std
inc
pop
push
dec
add
xor
sub
iret
clc
cmpsl
jns
dec
jp
push
aad
aas
fsubs
shl
clc
repz
sahf
push
push
lret
cwtl
push
loopne
pop
dec
sbbl
daa
and
push
out
sbb
lds
loopne
test
jb
pushf
xchg
inc
push
inc
scas
pop
mov
add
sub
mov
mov
dec
adc
xor
pop
jp
pop
push
out
int
rcr
push
ret
les
cmc
sub
jno
outsb
scas
xor
aas
jle
push
or
jl
iret
imul
mov
xchg
pop
push
pop
lret
shlb
aaa
ret
sub
out
push
mov
lods
push
push
mov
movsb
add
lret
adc
jnp
inc
and
xchg
cmp
xchg
push
cmp
xor
imul
inc
cwtl
test
sbb
mov
lods
jmp
sbb
pop
cltd
jno
aam
and
adcl
addr16
iret
mov
pop
adc
xchg
mov
cmp
dec
int3
pop
cmp
add
xor
dec
mov
cmp
xchg
mov
cmp
sub
push
dec
xor
cmpsb
cmp
add
in
adc
popl
into
aas
ljmp
cmp
fwait
sarb
inc
addr16
push
jle
pop
out
xor
movsb
in
pop
lahf
push
sub
push
push
shrb
cs
cld
mov
pop
sti
mov
out
mov
fcmovu
lock
sbb
ss
sub
dec
int3
xor
rclb
fbstp
enter
sahf
roll
les
add
add
js
push
xor
js
sbb
lret
insl
pusha
cli
lcall
fwait
mov
cmc
cmc
jbe
daa
mov
repz
fidivs
or
push
mov
pop
inc
cmp
jge
mov
test
mov
jl
or
adc
loopne
cwtl
sbb
push
imull
sbb
int3
in
sbb
jns
int
scas
loopne
add
sbb
lods
inc
les
mov
incl
jl
sarl
inc
aaa
push
mov
lret
jnp
inc
cmp
jmp
dec
loop
sbb
dec
xor
cmp
adc
ljmp
sbb
sub
je
mov
cmpsl
lock
jecxz
xchg
pop
int3
sti
add
jb
imul
cmc
mulb
jecxz
pop
or
sbb
rolb
add
into
arpl
or
jae
in
cmpsl
jg
add
sbb
add
adc
ljmp
inc
setnp
enter
shlb
mov
in
jmp
sti
js
or
add
xchg
jns
sub
stos
int
or
mov
xor
dec
std
shrb
test
dec
xor
cmp
add
ss
nop
xchg
out
mov
scas
popf
fldenv
mov
and
js
jae
xor
jbe
xchg
pop
dec
jp
cmp
xchg
and
cmp
or
mov
int
xchg
pop
arpl
sbbl
test
divl
mov
jnp
test
cmpsb
inc
out
stos
sub
xchg
sub
mov
sub
or
inc
call
aam
filds
loope
cmp
lahf
hlt
lahf
jnp
pushf
icebp
in
out
add
add
insl
jl
jle
sbb
rorl
fwait
mov
ret
testb
or
sbb
mov
or
sub
repz
loopne
test
cs
icebp
mov
mov
enter
xchg
jbe
adc
fstpl
pop
lods
mov
inc
dec
mov
add
pop
adc
adc
das
mov
popf
into
push
dec
mulb
xchg
cmp
jg
ficoms
insl
pop
dec
pop
in
ret
cmp
add
and
in
jb
in
sub
push
adc
scas
sbb
cmp
dec
pop
mov
or
fwait
jns
inc
sbb
cli
xlat
jbe
pushl
fwait
sub
jne
je
mov
into
sbb
cwtl
sub
ficoml
pushf
push
dec
fs
imul
in
mov
mov
jecxz
dec
pop
or
sbb
inc
jnp
xorb
lret
lret
jbe
test
pop
dec
pop
popa
hlt
pop
pop
movsl
and
mov
inc
ret
xchg
pop
xor
nop
pop
mov
mov
jbe
stos
movsb
ljmp
call
stos
sbb
mov
xchg
mov
push
mov
das
les
inc
mov
testl
and
loopne
pop
pop
add
dec
in
fsubrp
push
leave
addr16
dec
call
jl
cltd
inc
push
mov
mov
add
add
sub
pop
and
lcall
cltd
sub
cmp
fidivrl
sbb
jns
sub
lds
xchg
cltd
adc
mov
ret
test
lret
movsl
out
push
outsb
mov
mov
pop
xchg
imul
mov
arpl
push
roll
xor
ret
or
stc
dec
popf
or
mov
or
jne
mov
xor
mov
negl
imul
mov
mov
pop
cmp
add
enter
cmpsb
add
mov
stos
dec
sub
in
and
mov
ja
and
dec
les
xchg
jno
pop
and
jnp
ret
adc
in
and
int
inc
adc
loop,pn
jns
and
push
cmpsl
fnsetpm(287
jmp
push
pop
mov
jo
push
add
or
jmp
sub
and
add
lahf
pop
std
clc
fwait
and
out
ja
pop
andl
imul
inc
and
addr16
cld
ror
out
mov
repz
adc
sbb
fs
push
and
pop
add
je
mov
lret
mov
mov
adc
pop
sbb
cmp
rorb
rcrl
dec
jp
js
inc
loopne
sub
or
add
push
lods
scas
shr
inc
nop
xor
pop
and
inc
in
fsubrl
push
xor
dec
fstl
mov
repz
push
adc
cmp
js
fwait
mov
jge
xor
sub
xchg
push
pop
test
out
imul
jns
sbb
cwtl
shrl
cmpsb
sbb
ret
out
jno
pop
in
xor
push
adc
fisttpll
psrlw
test
mov
sarl
cmp
add
jp
jne
insb
mov
icebp
repnz
xor
cmp
mov
or
mov
add
fs
push
pop
mov
inc
inc
loop
pop
jbe
mov
bnd
aaa
mov
mov
push
mov
xchg
and
cmpsb
dec
xchg
in
jecxz
cmp
outsb
xchg
das
ja
lods
mov
dec
daa
or
lods
add
clc
ss
adc
pop
xchg
cld
or
fstps
add
add
dec
std
xor
repnz
cmpsb
popa
sbb
clc
adc
push
pushf
xchg
popa
std
hlt
mov
push
enter
mov
stc
add
pop
insb
or
push
push
hlt
fisubl
int3
popf
dec
jae
mov
sbb
fimull
mov
pop
xor
pop
gs
sub
mov
fwait
or
insl
out
imul
shl
arpl
adc
ja
push
data16
mov
ror
lods
dec
inc
jmp
mov
xor
outsb
fidivs
push
ja
jnp
jae
scas
cmp
mov
sar
dec
cld
pushf
loopne
and
dec
jmp
pusha
scas
stos
mov
nop
add
call
xor
popf
call
cmpsl
push
popl
das
dec
daa
sub
inc
cmp
movsb
outsb
and
in
pop
dec
xchg
add
hlt
pop
decb
pusha
call
add
add
ljmp
jl
lods
sub
inc
in
mov
jns
std
out
push
iret
xchg
mov
jmp
inc
cli
addl
mov
mov
test
jle
outsb
or
dec
push
les
mov
out
and
sub
mov
lods
mov
stos
sbb
pop
popf
add
sbb
push
addr16
fs
add
mov
mov
fstpt
js
mov
js
mov
pop
mov
or
push
test
jmp
xchg
out
xchg
dec
rorl
pop
lods
out
es
arpl
inc
cmp
aas
fidivrs
and
sahf
xorb
jecxz
and
dec
fdivr
ret
or
inc
xchg
daa
dec
cmp
add
add
dec
test
push
arpl
and
scas
roll
stos
add
cmp
sub
daa
arpl
aas
adc
dec
movsb
mov
sub
sbb
imulb
ja
fldenv
and
inc
adc
jns
lcall
les
push
test
xchg
divl
mov
xor
rcl
vmovsd
adc
shll
or
sti
les
xchg
ja
jmp
and
test
loop
dec
jecxz
adc
mov
xchg
push
sub
imul
sbb
inc
mov
mov
call
lcall
push
or
int
scas
xchg
das
cmp
adc
add
mov
sub
jl
and
push
mov
imul
hlt
mov
jg
std
mov
outsl
in
in
mov
imul
stos
jp
faddl
xchg
adc
xor
xor
aas
dec
dec
cmp
mov
push
add
popf
add
or
adcb
out
int3
inc
jp
dec
ret
add
xchg
xor
cmp
push
shl
xor
mov
gs
xor
call
insl
data16
dec
sub
add
xlat
lahf
pop
jo
aaa
push
nop
ds
insb
inc
push
cmp
mov
arpl
in
mov
fdivrs
aad
inc
iret
adc
dec
mov
mov
ds
daa
push
out
push
cli
cs
push
in
fidivs
mov
mov
and
lds
movsl
lcall
jecxz
push
jo
mov
inc
and
popf
outsb
dec
repnz
icebp
repnz
adc
fstps
add
push
inc
ror
out
add
out
mov
popa
out
sub
push
mov
pusha
out
pusha
pop
mov
sbbb
jmp
sbb
push
push
xor
pop
ds
stc
das
mov
and
roll
pushf
data16
movsl
dec
imul
sbb
cmpsl
mov
inc
test
or
sub
ss
dec
add
add
ret
jae
hlt
cs
inc
in
jo
mov
push
inc
xor
test
int3
jo
adc
out
dec
xchg
mov
pop
sub
lret
xor
cwtl
mov
sahf
sbb
hlt
sbb
pop
cmp
fwait
pop
out
cmp
adc
push
out
xchg
lods
xchg
loopne
insl
call
daa
pop
jo
add
popf
std
xor
outsl
add
add
mov
push
add
jl
and
arpl
mov
push
dec
test
sub
mov
inc
repz
sub
cmp
aaa
stos
test
insb
push
jmp
mov
dec
sbb
mov
and
or
xchg
mov
jo
clc
push
popf
or
fucomi
js
js
sub
lahf
test
add
pop
inc
fldl
dec
add
mov
mov
fisttpll
mov
and
popa
xchg
leave
mov
mov
scas
hlt
stos
scas
inc
loopne
icebp
mov
daa
cmp
fdivrs
xchg
pop
stc
or
pop
outsb
mov
xlat
test
fadd
dec
mov
mov
fdivrl
int
pop
and
jne
pop
pop
subl
fs
out
or
test
xor
cwtl
push
clc
sti
ja
mov
into
loop
inc
mov
mov
inc
arpl
sbb
data16
aam
scas
scas
imul
repnz
adc
lock
jo
jb
and
int
shll
lock
xor
into
add
xor
add
test
popf
sbb
loop
pop
test
repnz
sbb
cmp
fwait
push
jo
in
add
ret
icebp
es
pop
mov
pop
cwtl
loop
add
lret
pushf
daa
mov
lods
jg
xorl
shlb
out
push
daa
mov
mov
adc
mov
adc
mov
movsb
sahf
push
loope
pop
addl
jp
inc
jl
orl
mov
cmpl
pop
jbe
jmp
movsb
imul
and
imul
mov
sub
mov
das
jg
enter
and
cmpsb
pop
dec
sbb
sbb
into
lea
ja
rorl
add
divb
adc
sub
fdivs
aas
out
xchg
cmpsb
lcall
test
cld
pushf
pop
sub
imul
loop
insb
fists
pushf
adc
outsl
in
push
popf
xchg
sbb
push
sti
jmp
cmp
jns
dec
cmp
xor
insb
lods
out
adc
add
jmp
adc
and
cmc
out
sahf
iret
lret
or
popf
mov
mov
sahf
mov
fists
jmp
aad
popf
mov
adc
inc
pop
movsl
stc
dec
push
or
ror
cmc
xchg
imul
xlat
ficompl
scas
rorl
insl
or
scas
aad
jbe
jb
pop
pop
and
dec
pop
dec
repz
or
or
ret
add
add
scas
xor
xchg
cmp
in
js
pop
or
cmc
sub
mov
mov
push
add
dec
jnp
and
inc
mov
xor
mov
xchg
sbb
fists
mov
adc
inc
add
fsubrl
pop
push
and
jnp
dec
cmp
push
jae
daa
jmp
in
lret
jmp
gs
mov
cmp
pop
jecxz
mov
add
xchg
mull
gs
arpl
lret
and
fstp
movsl
mov
or
sub
xchg
movsl
mov
in
add
ja
incb
jmp
jne
mov
sub
ja
aad
jecxz
pop
xchg
add
loopne
and
jb,pn
lret
mov
insl
jb
or
inc
loopne
enter
pushl
dec
jmp
dec
mov
das
mov
popf
mov
add
add
rorl
jp
sub
jl
roll
cmpsl
add
cmp
ror
fsubrs
out
pop
pushf
mov
cli
popa
dec
dec
lcall
std
dec
out
ret
leave
popa
mov
push
dec
lret
mov
dec
imull
sbb
cmpsl
add
aam
sbbl
xor
xorl
adcb
sbb
or
imul
add
and
push
sbb
mov
and
dec
cmp
push
xor
and
scas
stos
xor
aad
jae
mov
scas
inc
dec
int3
cmp
ror
movsl
cmp
in
xchg
xchg
aam
and
adc
pusha
adc
push
add
mov
mov
adc
jbe
rolb
fadds
inc
movsb
cmpl
pop
fidivrl
repz
ljmp
jp
jmp
pop
jne
add
add
mov
cmc
mov
loopne
in
fdivl
push
xchg
pop
pop
sbb
mov
pop
movsb
insb
out
out
and
leave
out
enter
rol
mov
pusha
dec
into
sahf
rcll
add
mov
cli
stos
mov
pusha
test
aaa
mov
jp
xor
dec
jo
add
or
fnstcw
xchg
add
mov
and
jle
loopne
gs
adc
cltd
add
add
mulb
push
arpl
popf
outsl
lret
xor
arpl
inc
mov
scas
dec
int
inc
or
stos
and
mov
push
lcall
dec
mov
push
imul
sbbl
mov
mov
call
jb
sbb
ror
mov
push
jnp
int
mov
out
shrl
fldl
add
push
and
jb
les
mov
xor
push
test
mov
push
test
mov
sub
lahf
jbe
gs
or
or
push
xor
dec
cmp
xchg
fcmovu
dec
adc
fistps
ds
sbb
fnstenv
jg
sbb
scas
dec
jmp
lret
pop
clc
ret
jecxz
inc
mov
xor
jne
xchg
xchg
int
pop
xorl
or
enter
pop
pushf
mov
inc
or
jmp
fisttpl
fucom
sbb
mov
ror
sbb
cli
mov
push
push
in
xor
pusha
add
jbe
cmp
imul
pusha
mov
mov
cmc
inc
nop
push
jmp
scas
pop
xor
pop
shlb
mov
add
sub
stos
mov
mov
test
lcall
out
out
sub
aas
mov
or
push
sbb
std
outsb
outsl
fistpl
cmp
lds
xor
dec
push
ljmp
shll
cli
int
adcb
xchg
cmp
fimull
fucomi
sub
mov
add
add
jo
jecxz
dec
fisttps
sbb
cs
mov
ds
or
dec
scas
lahf
add
xor
lods
ret
lea
and
mov
cmc
inc
xor
stos
lahf
jmp
icebp
inc
mov
fnstenv
sub
fadd
test
mov
daa
lret
mov
mov
push
fisttps
test
adc
jp
push
mov
int3
add
xchg
adc
add
inc
imul
sub
aas
pop
lock
mov
loop
imul
add
rcrl
lea
or
movsl
inc
lea
cmp
cli
jmp
stc
stos
stos
inc
add
mov
mov
mov
loopne
call
jnp
mov
add
and
mov
ficoms
cmovbe
add
push
add
add
inc
mov
js
in
cmp
cs
dec
daa
add
or
and
rcrb
out
pop
cmpl
or
stc
fmuls
sub
out
dec
add
xchg
gs
stc
aaa
push
pop
mov
popa
pusha
mov
imull
or
inc
data16
or
cwtl
dec
add
in
fisttpll
mov
bt
iret
dec
loope
jmp
popa
mov
pushf
xor
cmp
mov
xchg
xlat
int
xchg
cmc
jmp
out
or
mov
call
stc
ds
pop
fcomp
dec
mov
addr16
inc
inc
fdivrp
insb
jns
mov
jno
cmpsl
inc
test
cmp
push
pop
dec
aaa
in
pop
and
sub
or
and
clc
push
divb
push
mov
add
add
mov
mov
std
xchg
fwait
rcrb
sub
jmp
or
pop
in
scas
in
mov
mov
data16
add
cltd
divb
add
jge
fiaddl
mov
sub
dec
fwait
mov
pop
popf
loope
aam
push
addl
fwait
nop
orl
ljmp
dec
pop
es
nop
and
jns
xchg
pop
or
sbb
and
xchg
jmp
add
test
loop
and
outsb
cmp
sub
scas
inc
cwtl
andl
clc
add
mov
iret
dec
stos
gs
push
scas
sub
cltd
xchg
xor
inc
jmp
push
outsb
mov
add
push
into
mov
arpl
add
ret
cwtl
stos
push
sub
test
lahf
shrb
shr
dec
and
adc
xchg
pop
and
mov
xor
lods
xchg
pusha
inc
mov
das
aas
xchg
sti
lcall
icebp
int3
cmpb
xchg
in
pushf
popa
mov
mov
xorb
lock
xor
nop
das
jbe
outsl
loopne
repz
leave
xchg
repnz
aad
neg
cmpsl
mov
sbb
icebp
imul
sbb
lds
jl
sar
mov
add
inc
mull
mov
dec
fwait
test
mov
or
xor
mov
mov
push
push
faddl
pop
cld
fdivrs
jle
out
add
dec
xor
push
jge
dec
fwait
lret
pop
scas
nop
add
cmp
bound
xchg
cmp
or
shll
fidivl
xor
popf
ret
