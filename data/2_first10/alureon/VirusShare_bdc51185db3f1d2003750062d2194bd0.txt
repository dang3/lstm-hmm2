mov
push
xor
cmp
je
cmp
push
mov
je
push
call
jmp
push
push
push
pushl
call
push
push
push
pushl
call
push
push
push
pushl
call
pop
pop
ret
mov
push
mov
push
mov
test
je
push
mov
test
je
andl
push
call
push
call
push
call
test
je
push
call
push
call
mov
push
call
push
call
pop
pop
pop
ret
mov
mov
ret
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
jmp
push
mov
sub
push
push
mov
xor
cmp
je
mov
cmp
je
cmp
je
cmp
je
add
push
lea
push
push
call
mov
add
add
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
sub
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
mov
mov
lea
ror
mov
lea
add
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
cmp
jb
mov
mov
test
je
mov
sub
mov
mov
inc
dec
jne
pushl
mov
pushl
pushl
pushl
pushl
call
mov
mov
mov
call
mov
add
push
pushl
pushl
pushl
call
add
pop
jmp
xor
pop
pop
leave
ret
push
mov
sub
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
jne
inc
jmp
andl
push
push
lea
lea
cmpl
mov
je
mov
jmp
mov
mov
add
xor
nop
movb
mov
mov
inc
cmp
jb
mov
test
je
lea
movsbw
mov
add
inc
mov
test
jne
lea
push
call
mov
test
je
mov
add
andl
cmpl
je
mov
mov
mov
test
jns
and
jmp
add
add
push
pushl
call
mov
test
je
incl
mov
lea
cmpl
jne
mov
incl
mov
imul
add
lea
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
jmp
push
mov
push
push
mov
imul
push
mov
cmp
jb
mov
push
call
mov
add
imul
push
xor
pop
div
mov
mov
mov
mov
sub
mov
test
je
mov
sub
push
mov
call
xor
divl
mov
add
cmp
jae
mov
mov
imul
xor
divl
xor
mov
sub
imul
div
mov
cmp
jae
mov
sub
push
pushl
pushl
call
add
add
add
add
cmpl
jne
pop
pop
pop
leave
ret
mov
mov
mov
rol
imul
add
mov
ret
push
call
pop
ret
push
mov
mov
mov
mov
mov
mov
cmp
jb
push
push
mov
mov
mov
lea
xor
test
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
mov
mov
lea
ror
lea
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
mov
inc
cmp
jb
pop
pop
pop
ret
push
mov
sub
mov
mov
mov
sub
mov
je
mov
test
je
push
mov
add
test
je
push
push
mov
sub
mov
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
addl
decl
jne
mov
test
jne
pop
pop
pop
xor
inc
leave
ret
mov
push
mov
sub
mov
push
mov
push
push
lea
mov
call
lea
xor
call
test
je
test
je
cmpb
je
mov
push
call
mov
push
mov
call
mov
lea
push
call
mov
test
je
push
push
push
push
call
add
push
call
test
je
push
push
push
call
mov
test
jge
push
push
push
call
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
call
mov
mov
pop
pop
pop
call
leave
ret
push
lea
sub
mov
push
push
push
push
push
push
mov
call
push
push
call
test
je
push
xor
push
call
push
mov
call
mov
cmp
je
lea
push
push
call
mov
mov
mov
mov
push
push
mov
call
cmp
jne
movl
push
push
call
push
push
mov
call
xor
cmp
setl
mov
mov
cmp
mov
je
mov
cltd
sub
sar
mov
push
push
call
mov
neg
sbb
and
add
push
mov
call
push
mov
call
movzwl
push
call
pop
pop
push
push
push
call
push
push
push
call
push
push
lea
push
call
lea
push
call
mov
mov
mov
movzwl
xor
jmp
cmp
jne
cmpw
je
inc
inc
mov
cmp
jne
jmp
xor
inc
lea
push
movl
movl
call
mov
push
pushl
call
push
push
push
push
push
pushl
mov
call
cmp
mov
mov
jne
xor
push
pop
lea
rep
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
movl
movl
movl
mov
movl
movl
call
test
je
mov
push
mov
imul
cltd
pop
idiv
push
push
mov
mov
add
mov
lea
mov
mov
shl
mov
lea
push
call
mov
mov
sub
sub
mov
cmp
mov
mov
jle
mov
push
pushl
neg
push
push
pushl
sbb
push
push
push
and
add
push
push
push
push
call
cmp
mov
je
lea
push
call
push
push
push
pushl
call
test
jne
call
xor
jmp
call
pushl
call
pushl
pushl
call
pushl
call
push
pushl
call
mov
xor
cmp
sete
push
call
cmp
je
call
cmpl
je
cmpl
je
push
push
push
pushl
call
xor
inc
pop
pop
pop
add
leave
ret
mov
push
mov
push
mov
xor
mov
test
movl
je
push
call
pushl
call
mov
xor
inc
pop
pop
ret
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
test
je
andl
mov
sub
add
mov
mov
mov
lea
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
cmpl
mov
je
or
sub
mov
mov
sub
add
mov
mov
mov
lea
push
push
push
call
mov
mov
mov
sub
add
mov
movzwl
add
lea
movzwl
lea
mov
mov
mov
andl
xor
cmp
jae
lea
mov
mov
addl
push
lea
pop
rep
mov
add
movzwl
add
incl
cmp
jb
mov
mov
add
pop
mov
xor
pop
inc
pop
leave
ret
mov
push
mov
xor
cmp
jne
mov
jmp
mov
push
mov
mov
test
je
mov
inc
inc
decl
jne
cmpl
pop
jne
dec
mov
movb
pop
ret
mov
push
mov
sub
mov
push
push
push
mov
mov
mov
push
mov
lea
push
pushl
pushl
call
lea
xor
test
je
push
push
push
call
add
test
je
push
add
push
call
inc
pop
add
cmp
pop
mov
jl
mov
mov
pop
pop
mov
pop
call
leave
ret
push
mov
testl
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
pop
ret
push
mov
sub
push
lea
push
push
movb
call
lea
push
call
add
cmpb
jne
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
mov
jmp
mov
leave
ret
push
mov
sub
mov
push
push
push
push
mov
movl
call
andl
movl
mov
movl
mov
mov
movl
mov
mov
mov
mov
mov
imul
xor
add
incl
mov
push
push
mov
call
mov
mov
mov
mov
mov
xor
mov
div
mov
mov
mov
mov
sub
not
add
xor
mov
mov
incl
add
cmpl
jb
cmpl
je
mov
mov
jmp
push
call
mov
mov
mov
xor
push
push
push
push
call
movl
mov
push
shl
push
add
incl
push
push
call
mov
mov
test
je
push
call
mov
push
push
call
mov
call
add
cmpl
je
cmpl
jne
lea
push
push
pop
add
xor
div
push
pushl
push
call
mov
push
push
push
push
call
lea
mov
lea
add
lea
add
mov
mov
mov
mov
and
call
mov
mov
mov
call
mov
mov
push
push
mov
xor
push
push
mov
mov
call
mov
lea
push
push
push
lea
push
pushl
movb
pushl
movb
push
call
push
push
push
call
mov
call
mov
call
test
je
pushl
mov
pushl
pushl
pushl
call
cmpl
mov
jne
push
call
test
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
add
fsubrs
jne
pushf
dec
shr
jo
mov
dec
and
gs
dec
sub
psrlw
addb
js
sub
sub
or
insb
or
inc
int
movsl
shr
or
scas
dec
repz
mov
adc
xchg
mov
popa
repnz
loope
sbb
clc
or
lcall
clc
or
push
data16
nop
daa
mov
xor
cmp
xchg
jae
int
xor
sbb
gs
mov
mov
add
icebp
arpl
xchg
out
dec
into
jae
mov
sub
enter
xor
repnz
jnp
jno
clts
sub
mov
jns
lods
sub
outsb
mov
fisubl
pop
jnp
pop
in
cmp
push
push
out
mov
inc
repz
add
inc
nop
and
xchg
inc
xor
fwait
aaa
push
cmp
jge
les
add
mov
push
jns
lock
jno
pusha
outsl
inc
dec
mov
addl
xchg
mov
ljmp
ret
or
bound
sub
push
jmp
add
mov
push
or
xor
in
out
mov
dec
cmp
lods
test
loopne
icebp
fdivp
inc
into
lock
cli
mov
mov
mov
mov
out
lds
in
or
push
out
test
adc
mov
mov
aaa
adc
stos
jge
cltd
mov
add
push
in
sbb
aaa
in
ja
and
mov
or
lds
pop
mov
cli
add
sub
in
rorl
aam
scas
jp
aas
pop
jne
pcmpeqb
mov
inc
fstpl
imul
test
push
mov
scas
sub
mov
jp
lea
shrb
cltd
enter
cli
mov
push
adc
out
pop
repz
mov
cmp
add
add
inc
xor
movsl
sbb
pop
mov
sbb
push
jne
daa
jle
and
inc
jb
call
and
in
dec
fnstcw
xchg
into
mov
sub
hlt
rcr
sbb
jns
and
mov
out
out
jl
cmpsl
movsb
and
push
mov
add
inc
mov
lds
pop
mov
test
std
in
or
cmpsl
icebp
sahf
imul
movsl
movsl
dec
dec
inc
pop
pop
fimuls
aad
ljmp
xchg
push
movsb
inc
dec
mov
add
xchg
aas
movsb
mov
movsl
rclb
push
cmc
adc
imul
pop
mov
lret
inc
mov
ja
roll
inc
bound
sbb
iret
ds
cltd
and
cmp
fwait
mov
out
in
pushf
gs
sub
rol
inc
loopne
fidivrs
and
mov
push
in
repz
push
movsb
xorl
addr16
aad
mov
pop
push
xor
xchg
xor
sbb
mov
outsb
and
loop
add
stos
jle
aam
xchg
push
in
mov
sub
xor
xor
shlb
push
adc
pop
inc
push
pop
popl
sub
and
xor
scas
fadds
les
fxtract
sarl
out
pusha
dec
mul
xor
add
xlat
cwtl
xchg
mov
sub
mulb
fdivl
mov
div
jnp
inc
sbb
add
mov
cli
dec
xor
stc
sbb
push
fucomp
lods
or
in
pop
push
jne
icebp
out
add
lret
rcrl
and
xchg
sahf
and
ljmp
jbe
lods
xchg
stc
xor
pop
xorl
add
xchg
ret
cmpsb
mov
push
dec
push
addr16
inc
dec
addr16
sbb
incb
mov
mov
sarl
cld
and
test
insl
add
orl
add
add
sub
and
cmpsb
insl
sahf
repz
rcrb
cmp
shl
sbb
out
in
add
loopne
inc
fwait
dec
aas
sbb
sub
mov
pop
add
dec
loop
clc
shll
lret
aaa
imul
imul
hlt
add
icebp
sbb
inc
or
jp
cmp
xor
int3
inc
test
outsb
sbb
pusha
mov
je
or
rolb
add
adc
je
and
pop
cld
loopne
int3
jecxz
or
or
pop
mov
cli
sbb
mov
and
ja
rclb
test
xchg
mov
cmc
enter
les
in
rcll
mov
add
and
lods
cmp
andl
xor
push
addr16
pop
int3
xchg
popf
and
orl
xchg
jp
and
pop
ja
sub
rcrb
fbstp
inc
xor
add
movsb
or
dec
and
sub
sub
push
inc
aam
cli
popa
cltd
mov
add
es
sub
lock
int3
cmc
orb
inc
add
fldenv
arpl
adc
xchg
test
and
xchg
dec
outsb
lds
clc
jbe
das
add
ds
dec
insb
scas
aam
lods
or
xor
pop
out
add
mov
pop
inc
jne
sar
sub
sub
inc
sub
stc
pop
pushl
stc
pop
xor
insb
ljmp
dec
sbb
sub
add
loopne
aad
push
test
sbb
adc
loopne
push
mov
xor
flds
sub
adc
push
xlat
aad
imul
cmp
xchg
or
mov
dec
fst
mov
repz
mov
adc
es
aas
mov
adc
cmp
sbb
lcall
xchg
stos
xchg
sub
ljmp
popf
mov
lea
pop
insb
data16
clc
loopne
sbb
jnp
push
or
popf
inc
jbe
andl
sub
lds
out
mov
negb
jmp
sbb
sbb
adc
pop
inc
push
cmp
stos
notb
dec
sbb
icebp
imul
testb
dec
pcmpeqd
rep
sub
test
nop
cmp
sub
cltd
mov
mov
loopne
mov
fists
hlt
addb
add
jp
ja
sub
cli
clc
test
adc
fdivrs
sub
shrl
nop
or
repz
jo
fs
jmp
into
push
sbb
nop
mov
cwtl
into
push
pop
leave
lods
lock
ds
mov
call
flds
adc
pop
add
mov
mov
dec
dec
sbb
jecxz
cmp
add
inc
shrl
mov
int
loop
out
mov
push
enter
loopne
xor
xor
mov
mov
lea
nop
loopne
das
push
jno
popf
out
xor
cli
lock
dec
pop
into
pop
cmp
fnstsw
push
mov
sub
and
sbb
ret
inc
fimuls
adc
fcos
cmp
push
fisubl
mov
jne
pop
dec
sbb
or
add
add
incb
cmp
cmc
jae
sbb
in
pop
aas
xor
mov
sti
mov
bound
push
sub
xor
dec
dec
and
jl
fists
roll
movsb
adc
pop
inc
push
and
in
movsb
shrb
mov
mov
repz
daa
stc
pop
sbb
rorl
repnz
movsb
add
and
loopne
call
ja
mov
mov
ja
xor
and
les
add
add
scas
scas
mov
jmp
xor
mov
orb
call
sbbl
and
push
imul
dec
mov
fidivs
scas
push
sahf
loope
imul
aam
fstps
loop
push
jp
jbe
stos
xchg
mov
popf
rolb
data16
in
or
cmp
pop
adc
add
fsts
xchg
pop
add
xor
cmp
add
insl
out
das
pop
jmp
ljmp
test
sbb
imul
xor
sub
cwtl
pop
mov
out
and
mov
out
add
cmc
inc
push
addr16
sbb
lcall
push
adc
pop
mov
add
inc
in
xor
sbb
out
je
lcall
test
cwtl
rclb
xchg
cltd
pop
rol
xor
fiaddl
sbb
sbb
sub
orb
or
ret
mov
loope
pop
mov
lret
push
cmc
jp
or
jns
mov
pop
test
ds
insl
or
fisubrl
pop
fcomp
mov
or
ds
mov
mov
dec
lcall
icebp
fsubr
jns
sbb
and
sub
cmp
xchg
aaa
lret
test
iret
dec
fsubrl
repz
jle
shr
add
cmp
outsl
jp
int
mov
cmp
inc
xchg
mov
cld
mov
insl
test
jge
sbb
dec
mov
call
push
inc
or
lods
leave
cmpsl
xlat
fwait
dec
xchg
mov
mov
mov
sub
out
rorl
js
adc
mov
push
adc
ret
aas
lahf
sahf
push
xlat
ss
dec
and
cmp
push
push
dec
push
mov
fwait
stos
jg
lret
aad
jnp
and
pop
xchg
pusha
roll
enter
nop
and
sbb
adc
lahf
push
sti
hlt
loop
adc
or
add
clc
cmp
push
jge
mov
inc
mov
sub
loopne
xor
scas
cmpsl
test
mov
sub
and
xor
div
idivb
and
mov
push
mov
clc
push
jb
add
adc
mov
jle
notb
lods
lret
mov
xchg
jecxz
sbb
in
test
mov
mov
fstps
insb
dec
fsubl
push
test
movsb
ja
arpl
cli
jg
xchg
out
jmp
decl
add
cmpsb
lret
cbtw
mull
pop
dec
insl
jecxz
push
jp
int3
and
pop
mov
loop
jne
arpl
cmp
icebp
frstor
in
adc
add
mov
xchg
daa
ret
lret
cwtl
es
loop
push
xlat
scas
or
lahf
test
outsb
or
inc
mov
and
mov
xor
insl
outsb
inc
xor
cmp
ljmp
in
popf
test
dec
or
cmpsl
pop
movsl
out
mov
and
or
pop
pop
xchg
jno
jmp
pusha
popa
imul
into
fnstsw
test
inc
clc
bound
add
add
jp
call
cld
and
inc
pop
mov
mov
push
push
jbe
std
adc
stc
pusha
cmp
hlt
mov
stc
mov
xchg
adc
testb
stos
aam
sbb
adc
and
pushf
faddl
int
cmpsb
cmp
stos
mov
fwait
jns
mov
mov
push
fisubrl
cmp
sub
push
test
mov
rclb
add
add
or
ja
xchg
pop
call
test
xchg
mov
xchg
jmp
jmp
sub
pop
aas
mov
pushf
ret
repnz
fidivl
push
test
rclb
enter
or
mov
sbb
pop
pushf
add
rclb
sub
lea
pop
outsl
mov
test
jecxz
popa
jnp
rcr
jbe
inc
inc
push
fstps
fsts
mov
stos
jg
in
and
fisubs
adc
lahf
xchg
mov
and
rcl
jne
mov
mov
and
int
lret
mov
sub
mov
popf
dec
mov
nop
stos
mov
jmp
sbb
shlb
cmpsl
jno
push
fildll
imul
jle
push
aas
add
add
add
inc
mov
cli
push
mov
mov
aad
stc
lods
pop
sbb
gs
and
fcmovb
jmp
dec
jne
pop
test
ret
into
fcmovbe
fld
add
sbb
xor
ja
sub
xchg
or
movsl
fcmovnb
mov
rorl
sbb
andps
gs
push
dec
adc
fisttpll
push
xchg
test
jne
add
enter
cmc
das
sub
push
pop
aad
stos
call
add
fmull
mov
popl
pop
push
mov
or
scas
rol
cli
ret
popa
jbe
and
call
enter
pop
push
cmp
xor
enter
adc
lods
sarl
xchg
notb
push
mov
adc
xchg
mov
mov
call
sbb
cld
je
stc
xchg
dec
jno
push
and
sbb
dec
or
add
add
add
sbb
loop
repnz
aaa
sbb
insb
mov
leave
jbe
sbb
movsb
push
pop
je
fsubl
cltd
sarb
sub
cs
jecxz
sub
fs
sbb
mov
inc
adc
aam
fwait
das
popf
rcrl
jle
fs
mov
mov
sbb
push
sub
std
stos
daa
hlt
or
in
jo
jge
jb
imul
add
add
add
cmpsl
outsb
xor
push
adc
hlt
bound
inc
daa
pushf
sahf
out
mov
fidivrl
rorb
sbb
push
aad
and
xchg
sbb
mov
gs
ds
leave
lret
aam
adc
jle
adc
push
sti
out
fisttpl
dec
mov
loop
stc
in
adc
or
jmp
sbb
push
add
xlat
fadds
cmp
cs
js
pop
cmc
hlt
pusha
rorl
in
and
mov
adc
sbb
sbb
cmp
ja
dec
out
push
mov
mov
in
mov
call
movsl
and
push
mov
out
sbb
jbe
movsl
push
jp
or
xor
xchg
les
jmp
dec
mov
xchg
pop
lahf
pushf
mov
lcall
add
add
push
scas
insl
mov
xchg
inc
out
push
in
pop
cld
ret
mov
jecxz
jnp
mov
pop
inc
insl
fldcw
leave
push
arpl
xor
rcrb
pop
mov
in
ret
leave
lret
add
and
inc
adc
dec
iret
in
inc
mov
mov
xchg
push
fisubl
pop
out
arpl
sub
ja
testl
mov
cwtl
and
dec
arpl
add
movl
xor
repz
cltd
arpl
scas
std
ja
adc
les
and
movsb
mov
cmpsl
sub
repz
fmulp
enter
inc
or
xchg
out
popa
test
dec
or
add
ss
dec
jge
testb
or
pop
mov
mov
out
lds
fldenv
dec
and
jb
adc
push
pop
and
inc
push
in
dec
movl
lds
push
pop
adc
cmp
sbb
adc
out
mov
ds
test
push
xlat
daa
ds
and
lods
std
and
cltd
insl
imul
sbb
fwait
mov
pop
adc
ss
cmp
and
sub
jle
push
aad
imul
jmp
mov
push
stos
and
cltd
lahf
bound
lds
add
sbb
fisttpll
movb
mov
jo
rcll
xor
test
cltd
jmp
pop
fiaddl
and
add
jo
aaa
xchg
jg
movb
push
out
xchg
inc
or
sbb
xchg
js
or
nop
cltd
or
xchg
stos
mov
jns
push
mov
stos
icebp
fistpl
and
int3
xchg
fiaddl
jmp
lret
int
mov
scas
xor
or
jno
data16
icebp
mov
sbb
arpl
and
rorl
mov
faddp
in
sub
cmp
in
decb
loope
or
push
and
mov
mov
cli
fsubr
sahf
les
stc
cmp
add
add
mov
cld
fidivrs
pop
jmp
mov
test
cmp
sub
test
inc
popa
sbb
out
xor
inc
mov
mov
jecxz
sbbb
sbb
jnp
mov
out
adc
fsts
stos
push
repz
jmp
std
cs
sub
xchg
cmpsb
xchg
adc
adc
cmpsl
xchg
movsb
fidivrl
pop
add
push
testl
add
add
sbb
fadds
inc
arpl
cs
mov
cmp
fwait
pop
and
push
fldlg2
xchg
add
sub
iret
outsl
sti
mov
dec
fdivr
xor
clc
daa
subb
cmpl
xor
push
movsl
fnstsw
adc
inc
aad
pop
orb
mov
push
push
and
rcrl
scas
cltd
lock
cmp
jnp
push
pop
push
pop
mov
ljmp
sub
icebp
cmpb
outsb
jmp
movsl
adc
lods
aad
xor
pop
aam
mov
xchg
inc
mov
push
popa
mov
dec
cmp
sub
mov
int
addr16
imul
pop
popa
jae
jnp
pop
add
dec
push
ret
test
adc
into
scas
inc
mov
sub
inc
fisttps
add
add
lret
push
xchg
es
stc
mulb
xchg
sbb
pop
mov
cmp
xchg
jbe
daa
aas
pushf
jo
scas
mov
js
xchg
insb
repnz
dec
lret
cltd
out
adc
sub
push
dec
push
enter
iret
or
push
or
push
loop
stos
push
mov
or
int3
xlat
into
mov
daa
arpl
mov
dec
mov
popf
xor
popf
jns
sbb
inc
popa
test
sub
mov
pop
loopne
mov
xchg
sbb
fsubr
jbe
lcall
data16
lcall
or
in
aad
mov
xor
sbb
mov
popf
jnp
pop
cmp
xor
cmp
pusha
xchg
push
adc
sarl
or
in
inc
dec
lret
jmp
into
test
outsb
fimuls
loope
ljmp
xor
enter
lods
aaa
or
in
call
xchg
inc
rorb
faddl
xor
inc
hlt
lcall
fcmovbe
or
int3
hlt
cmp
xchg
testb
inc
in
imul
pop
in
sub
out
adcb
nop
cwtl
lods
enter
sbb
and
insb
aaa
sbb
xchg
push
mov
inc
or
imul
add
push
or
xchg
lcall
or
add
out
jae
sahf
stos
cli
mov
inc
es
cmpsb
fmull
inc
fdivrl
icebp
inc
sbb
jnp
nop
adc
insb
adc
nop
adc
xor
cmp
sbb
push
and
xchg
stc
dec
ret
xor
cmpsb
roll
imulb
mov
test
into
pushf
mov
push
and
leave
je
sbb
repz
jp
shrl
dec
mov
cmp
mov
and
mov
sub
add
mov
pmaddwd
inc
imul
sbb
test
dec
jp
cwtl
fcmovu
dec
rorl
push
rcll
in
fs
stos
pop
jecxz
inc
loopne
cmp
leave
push
out
pop
stc
rclb
jp
aad
pop
xor
testb
or
out
add
cmp
adc
inc
lcall
cmp
or
mov
sub
jmp
inc
inc
hlt
dec
dec
adc
iret
cltd
ja
mov
sarl
insl
test
xchg
pop
xor
xchg
test
inc
mov
das
cli
fldl
movsb
call
rcrb
sub
dec
inc
mov
jp
xchg
xchg
ds
int
in
jns
push
xchg
in
inc
sar
stc
mov
cmp
xchg
sbb
add
clc
repnz
jmp
and
inc
xchg
sbb
cmp
ja
cmp
mov
jno
movsb
xchg
clc
test
add
repnz
test
mov
ret
inc
insl
and
and
outsl
add
sub
ljmp
push
or
ficompl
add
in
adc
push
stos
imul
std
cmp
adc
aas
mov
pop
lcall
ds
add
mov
mov
dec
lods
nop
cmp
popf
mov
outsb
mov
mov
into
pop
push
inc
mov
fmull
fdivrs
sub
sbb
adc
rcrl
adc
out
aas
sbb
jecxz
push
sbb
les
mov
subb
xchg
xchg
add
call
out
nop
repz
and
int3
sbb
pop
mov
dec
push
pop
iret
mov
push
cmc
aaa
sbb
add
in
subb
test
rcrl
sub
jle
mov
mov
mov
mov
lret
in
repnz
aaa
rorb
into
repnz
inc
sahf
lea
lcall
mov
mov
int3
inc
cld
and
jg
xchg
vmwrite
mov
jmp
hlt
nop
add
lret
jmp
mov
add
add
jle
push
out
sbb
push
jns
jg
fdivrp
or
test
push
std
arpl
dec
lds
mov
fs
mov
movsl
out
sub
add
ss
fcmovnbe
jns
adc
cmp
cld
or
mov
xchg
dec
pop
adc
stos
out
sahf
fisubl
popf
add
ja
fwait
pop
mov
add
mov
std
dec
ret
push
imull
sbb
inc
fistps
mov
iret
xor
fs
insb
aad
xor
mov
dec
loop
call
lds
mov
fisubrl
ficoms
and
into
ret
enter
or
mov
push
lds
jecxz
push
mov
push
dec
ds
scas
les
cltd
ljmp
sti
sbb
pushw
pop
mov
xor
adc
lea
inc
out
pop
fimull
hlt
pop
add
fnstcw
xor
int3
adc
xor
into
jmp
enter
jne
cmp
or
add
jns
dec
into
inc
inc
pop
sbb
mov
std
pop
jbe
mov
sub
xchg
int
ljmp
scas
cmpsb
push
or
into
xor
and
jge
and
sar
les
mov
addl
or
lret
adc
sbb
shl
mov
notb
sub
mov
pop
cs
in
ljmp
mov
adc
mov
or
inc
pop
cld
pop
mov
push
icebp
lods
cltd
or
push
adc
subl
iret
sbb
in
imul
mov
out
xchg
pop
ret
xor
outsl
mov
aad
sbb
xor
dec
pushl
xchg
test
push
add
pop
in
js
loop
es
bound
popa
loopne
push
nop
mov
sub
out
xchg
adc
push
jae
pop
mov
rcpps
xor
add
xchg
cmpsb
mov
inc
xchg
rcrb
jb
fdiv
pop
or
push
into
ss
test
mov
xchg
aas
sub
xchg
push
add
std
push
outsb
pushw
mov
fstpl
pop
or
cltd
cli
aad
bound
pop
cwtl
cltd
gs
dec
mov
dec
in
ljmp
xchg
idiv
nop
push
push
fwait
cld
nop
and
or
aas
ja
mov
pop
xchg
dec
mov
test
iret
mov
pop
mov
inc
jo
stos
push
jne
and
out
jl
sbb
xor
mov
pop
bnd
test
scas
add
daa
and
pcmpeqd
movsb
cmp
xorl
adcb
jns
pusha
mov
test
or
inc
push
fildll
push
inc
fwait
leave
movsl
inc
loope
leave
hlt
outsl
movl
cmc
jb
sub
mov
lods
mov
int
sbb
in
push
leave
or
sbb
cs
cmp
push
insb
xchg
xchg
sti
dec
pusha
add
rcrb
adc
data16
jge
pusha
hlt
in
shrl
pop
cmp
jb
push
mov
js
mov
out
pop
inc
sub
cmpsb
adc
add
and
enter
push
mov
mov
outsl
xor
adc
mov
push
mov
insb
push
stos
into
icebp
cmp
ljmp
out
or
xlat
or
inc
mov
nop
imul
xchg
push
and
push
enter
sarl
in
dec
jbe
and
ja
push
xor
mov
dec
mov
stos
hlt
add
es
repz
jecxz
cld
test
inc
sub
cmp
xchg
mov
add
sub
xchg
xor
les
dec
mov
call
xchg
dec
add
add
jne
adc
sahf
int3
mov
xchg
inc
ret
sbb
popa
test
sbb
dec
rcl
adc
dec
rol
decl
fwait
std
push
dec
aam
push
rol
test
push
rorl
xchg
mov
cmpsl
xchg
or
std
xor
iret
les
adc
push
int
mov
pop
sbb
lods
js
xor
scas
or
out
ja
jl
loop
mov
shl
insb
lea
add
icebp
shrb
cs
lock
jo
mov
mov
shrl
data16
int3
xor
sub
lods
outsb
mov
xchg
repnz
mov
mov
imul
inc
fsubrp
cmp
lcall
sbb
and
pusha
imul
enter
push
jp
mov
enter
jne
stc
test
xchg
scas
mov
add
add
xlat
dec
xchg
pop
dec
stos
xchg
icebp
mov
dec
fsubs
sbb
rcrl
dec
pop
stc
cwtl
icebp
mov
nop
jbe
xchg
push
jbe
jp
ret
mov
dec
incl
or
adc
or
lods
add
inc
test
jg
gs
or
test
and
cs
pushf
adc
jbe
int3
mov
jo
mov
xchg
and
out
loop
lds
cmp
insb
sub
lcall
xchg
je
mov
sti
fcoms
andb
dec
fwait
repz
imul
mov
sub
stc
nop
xor
xchg
idivb
mov
iret
cmp
movsl
sti
stc
insl
fistps
or
mov
jg
cmc
jae
addr16
gs
push
mov
and
cmp
sti
mov
jae
subl
mov
jnp
cmpb
jl
add
add
cmpsb
mov
jmp
repnz
test
scas
outsl
mov
lret
and
cmp
cmp
and
cmp
outsl
xchg
inc
xor
pop
lret
jmp
dec
popa
pop
out
sub
leave
packsswb
rcrl
out
pop
pop
ret
int3
jns
fisttps
inc
ss
jo
or
popa
cmp
in
and
out
add
sbb
pop
cmp
xor
xchg
outsb
push
daa
inc
std
xchg
mov
xchg
frstor
repz
cmp
mov
or
shr
push
jmp
add
jp
mov
aad
push
outsb
sbb
mov
aad
leave
cmp
es
dec
es
mov
stc
inc
stc
xor
insb
jmp
mov
sahf
pusha
das
call
jl
cmpsl
ds
dec
test
notl
mov
add
add
lock
ljmp
stos
jecxz
inc
stos
lods
in
xor
lock
lds
fcmovnb
fisttpll
jmp
pop
xchg
sbb
mov
xor
fwait
push
fstl
adc
fdivs
daa
push
shr
nop
in
and
push
mov
pop
jl
sub
in
and
jmp
adc
xor
pop
repz
imulb
int
pop
cmp
add
and
addr16
es
hlt
sarb
data16
sbb
pop
daa
xchg
je
mov
xchg
and
ret
imul
hlt
je
shr
inc
outsb
jb
cs
mov
into
data16
mov
mov
int
push
clc
jle
pop
dec
dec
lcall
iret
cwtl
mov
pushf
pop
leave
mov
or
inc
out
cmc
das
cld
clc
or
ljmp
push
add
add
inc
xchg
pop
mov
pop
lods
pop
je
cmp
std
xor
jns
mov
stc
std
sbb
mull
jno
jl
lock
lods
jb
movsb
mov
in
push
insb
into
lahf
leave
pop
test
outsb
or
mov
inc
cwtl
xchg
bound
pop
mov
fldl
xor
sub
inc
pushf
je
fiaddl
fwait
mov
mov
adc
stos
adc
cmc
inc
ds
out
jbe
xchg
push
shlb
push
in
mov
sub
loop
out
cmp
mov
xchg
lods
addr16
jl
cmc
pusha
xchg
pop
push
sub
push
scas
scas
and
mov
or
mov
scas
jl
add
idivb
or
adc
jg
or
add
and
fcom
sbb
popf
shl
sbb
lds
xchg
test
outsb
repnz
out
mov
cmp
push
testb
mov
sti
add
outsl
loope
add
lcall
jo
rol
ret
fs
das
xchg
dec
mov
js
cli
rclb
pop
adc
jb
or
shlb
sti
ret
nop
roll
add
mov
xor
sbbl
mov
lcall
