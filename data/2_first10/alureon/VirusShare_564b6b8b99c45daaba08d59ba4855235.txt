push
mov
push
push
mov
mov
mov
mov
push
mov
push
add
push
lea
lea
pop
call
push
push
lea
push
call
mov
mov
neg
add
add
sub
add
mov
imul
add
mov
imul
add
mov
mov
add
and
add
mov
mov
movl
mov
mov
lea
call
mov
mov
add
xor
add
decl
jne
addl
pop
pop
leave
ret
push
push
mov
mov
push
pop
movzbl
xor
mov
inc
and
rol
imul
inc
mov
add
mov
mov
not
mov
add
not
shl
imul
add
imul
dec
decl
mov
jne
pop
mov
pop
ret
mov
add
mov
test
je
add
add
add
add
add
push
mov
push
lea
xor
cmp
jbe
add
inc
cmp
jb
mov
add
xor
cmp
jbe
add
inc
cmp
jb
pop
pop
xor
inc
ret
test
je
test
je
test
je
jbe
push
sub
mov
mov
mov
inc
dec
jne
pop
mov
ret
xor
ret
push
xor
cmp
jbe
push
lea
mov
add
mov
mov
add
inc
add
cmp
jb
pop
pop
ret
push
mov
sub
push
push
push
push
xor
lea
push
push
mov
call
add
xor
movzbl
push
mov
call
inc
pop
cmp
jb
lea
push
mov
mov
movb
mov
movb
mov
call
mov
lea
push
call
add
pop
pop
cmp
je
xor
inc
jmp
mov
push
mov
call
push
push
push
push
push
push
push
mov
push
mov
call
mov
cmp
je
cmp
jne
testl
je
cmp
jne
push
call
push
pushl
push
pushl
call
push
push
push
push
push
push
push
push
call
jmp
cmp
je
push
push
push
push
push
push
push
push
call
push
push
push
push
call
push
mov
call
xor
pop
pop
pop
leave
ret
push
mov
mov
mov
sub
add
push
mov
test
jne
xor
jmp
mov
add
mov
push
mov
mov
mov
push
mov
add
add
add
mov
mov
test
jns
and
sub
cmp
jae
mov
jmp
xor
mov
cmp
jae
jmp
mov
mov
mov
mov
add
mov
call
cmp
je
incl
mov
cmp
jb
mov
mov
mov
cmp
je
movzwl
mov
add
test
je
mov
add
cmp
jae
cmp
jb
xor
cmpb
je
inc
cmpb
jne
push
lea
push
push
mov
call
add
lea
push
mov
movb
call
mov
test
jne
xor
jmp
lea
call
push
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
andl
lea
push
movb
mov
mov
mov
mov
rep
mov
pop
push
rdtsc
mov
mov
test
jne
movl
jmp
mov
not
xor
ror
not
mov
movzbl
lea
cmpb
jne
push
push
pushl
movb
call
mov
push
call
push
push
pushl
mov
call
mov
mov
mov
cmp
jne
movzbl
push
push
pushl
call
pushl
push
pushl
call
xor
inc
pop
leave
ret
push
mov
cmpl
push
push
jb
mov
mov
mov
pushl
popl
sub
lods
mov
xor
stos
mov
sub
sub
rorl
sub
dec
mov
jne
pop
pop
pop
ret
push
push
mov
mov
mov
mov
mov
mov
mov
cmpb
jne
cmpb
jne
pop
pop
ret
push
mov
push
mov
movzwl
movzwl
andl
add
je
push
mov
push
lea
testl
je
mov
mov
and
add
push
push
pushl
call
jmp
mov
mov
add
add
movzwl
movzwl
incl
add
add
cmp
jb
pop
pop
pop
pop
ret
push
mov
push
push
andl
push
call
lea
mov
test
jbe
mov
mov
mov
and
rol
movzwl
dec
lea
mov
jne
testl
je
push
mov
and
or
add
mov
pop
mov
leave
ret
mov
xor
cmp
je
inc
inc
cmpb
jne
ret
push
mov
mov
add
mov
sub
test
je
andl
push
lea
lea
cmpl
mov
je
push
mov
mov
add
push
mov
call
mov
andl
add
cmpl
mov
je
mov
mov
test
jns
and
jmp
lea
push
pushl
mov
call
incl
mov
mov
lea
cmpl
jne
mov
incl
mov
mov
imul
lea
lea
cmpl
jne
pop
pop
xor
inc
leave
ret
push
mov
sub
push
push
mov
push
mov
movb
movb
call
mov
xor
mov
cmp
je
mov
jmp
push
mov
call
lea
push
mov
push
mov
call
push
mov
call
cmp
je
cmpl
jne
call
cmp
jne
lea
push
mov
call
mov
mov
mov
push
mov
call
push
call
lea
push
push
push
push
call
mov
mov
mov
mov
push
lea
call
push
call
push
push
push
push
call
add
mov
test
je
lea
call
pushl
mov
pushl
mov
push
call
mov
sub
mov
mov
add
push
mov
and
add
push
add
call
mov
mov
mov
mov
add
mov
add
movzwl
lea
add
mov
movzwl
lea
mov
mov
sub
xor
mov
mov
mov
cmp
je
mov
cmp
je
add
mov
mov
mov
jmp
mov
mov
mov
cmp
je
add
lea
mov
mov
mov
mov
add
push
push
push
call
or
sub
mov
mov
mov
sub
push
push
call
call
test
je
cmpl
je
mov
mov
call
movzwl
xor
xor
mov
cmp
jae
mov
mov
addl
push
pop
rep
mov
mov
mov
add
add
mov
mov
movzwl
inc
cmp
jb
mov
mov
mov
add
mov
mov
pushl
mov
pushl
mov
mov
push
pushl
call
pop
pop
pop
leave
ret
clc
call
add
add
add
sbb
add
nop
fcoml
popa
and
jae
clc
pop
pop
xchg
xchg
jl
lods
nop
repz
dec
push
outsb
jbe
insl
out
pop
orb
xchg
mov
movsb
int3
push
scas
cmp
fdivr
mov
jbe
adc
stos
fdivrl
fdivs
jb
lahf
inc
fs
pusha
push
movl
mov
fs
sbb
pop
jge
add
jb
sub
push
push
mull
cmp
push
add
mov
jge
pop
fiaddl
ds
xchg
fstl
jle
ret
repnz
mov
dec
xor
clc
lret
xor
jle
xchg
inc
popa
sbb
stc
sbb
std
sbb
call
and
xlat
fisttpll
shl
call
test
and
push
pop
dec
mov
push
das
mov
repz
and
cmpsb
popa
pop
mov
cmp
xchg
leave
add
jae
test
sbb
mov
mov
pusha
lahf
in
pop
cli
adc
pop
jo
repnz
sub
mov
std
or
dec
or
cmp
push
jo
fwait
jne
xor
or
mov
lahf
rcrb
test
jp
sbb
mov
sbb
inc
jmp
mov
jno
in
aas
enter
shrb
xor
pop
nop
dec
scas
movsb
ljmp
jno
mov
cltd
sbb
testb
or
pop
mov
mov
ret
xor
jne
lds
pop
cmp
and
xor
lods
fnstsw
cld
in
adc
in
std
push
mov
cmp
pop
mov
pop
shrl
std
jge
lods
int
hlt
sub
fldlg2
add
lock
cwtl
clc
sub
adc
ljmp
inc
sbb
aaa
xchg
push
and
in
rcrb
or
fdivs
adc
js
sub
or
es
push
sub
iret
idiv
adc
mov
lods
cmc
xchg
push
sarb
pop
bndstx
les
lret
dec
loopne
and
sbb
aaa
adc
push
lea
dec
dec
cmp
pop
mov
cmpsl
repz
adc
mov
sub
cwtl
pop
mov
xor
jns
int3
jae
mov
in
add
mov
out
inc
fs
into
adc
movsl
daa
xchg
mov
ret
push
add
push
out
cmp
insb
push
shll
mov
iret
adc
mov
mov
mov
lret
mov
gs
aas
xchg
ret
or
xor
jecxz
or
adc
or
mov
pusha
cmpsl
push
add
repz
das
aas
inc
lock
sbb
xor
icebp
stos
jge
xor
out
scas
jo
test
outsb
fucomip
xchg
mov
in
pushf
xor
dec
sbb
out
cli
dec
cli
dec
and
adc
mov
shrb
push
pop
sub
sti
mov
lods
repnz
pop
int
fcompl
dec
or
cmp
fcomp
pop
jb
mov
dec
xchg
test
fcompl
add
shlb
insb
imull
sub
xchg
pop
ljmp
mov
clc
ss
enter
aas
xchg
rorb
dec
or
data16
and
push
or
movsb
pop
push
sbb
mov
fisubrs
xor
inc
clc
aam
insl
addr16
test
movsb
xor
inc
stos
test
outsb
std
mov
idivb
fisttpl
xchg
and
and
ja
aaa
clc
out
push
lcall
jp
mov
sahf
cmp
imul
mov
daa
test
mov
lahf
add
fcomip
mov
insb
inc
pop
mov
lahf
sti
sti
out
pop
xor
call
push
mov
dec
mov
and
add
add
xchg
mov
popf
into
push
shll
dec
lock
sub
movsb
pop
jl
test
xchg
dec
pop
dec
xor
mov
mov
lret
push
sub
push
jmp
add
lcall
xor
push
inc
scas
sbb
data16
push
rorl
push
int
cwtl
loope
mov
div
mov
daa
sbb
test
lcall
popa
lods
sti
and
add
pop
scas
int
xchg
jp
xchg
dec
out
fs
aam
mov
neg
loopne
mov
js
frstor
les
pop
pop
mov
fcoml
es
leave
lcall
lods
cmp
xchg
xchg
rcrb
hlt
xchg
xor
movsl
enter
fincstp
in
mov
mov
cld
sub
mov
cmp
or
or
mov
mov
inc
push
frstor
xlat
jg
mov
fcomps
jmp
mov
daa
cmc
mov
mov
lods
les
mov
add
es
sub
adc
mov
insl
icebp
daa
push
cli
xchg
xor
popa
push
inc
inc
mov
in
movsb
aas
sub
cmp
push
insb
adc
iret
sbb
jl
testb
call
jecxz
inc
dec
or
push
rep
adc
xor
pop
cmp
scas
ficoms
repz
es
lods
shrb
xor
icebp
mov
mov
pop
jp
xchg
cmp
fisttps
inc
fwait
sbbl
push
ret
aas
pop
and
fwait
int
cltd
mov
ds
lret
mull
xchg
sub
push
mov
push
aaa
fildl
inc
push
sub
sub
cltd
fcmovne
out
in
cmpsb
dec
xor
and
inc
xchg
out
in
mov
xchg
and
popa
outsb
mov
ret
cmp
cmp
mov
cmc
int
hlt
rolb
pop
aas
pop
pop
std
icebp
add
nop
jae
imul
sub
scas
insb
lods
data16
add
fstps
mov
mov
aas
adc
sbb
mov
jb
sub
jnp
lcall
ljmp
sbb
imul
lds
mov
inc
pop
mov
fcomps
roll
or
out
lea
inc
inc
loope
push
in
cmpsb
mov
xchg
cmp
mov
andb
add
and
int3
cmpsl
nop
cmc
pop
mov
lds
and
mov
mov
cs
pop
mov
jmp
ds
pop
push
dec
xchg
mov
mov
jae
dec
enter
inc
jno
aam
adc
arpl
mov
enter
cmpsb
movsb
or
pop
or
loopne
stos
xor
or
in
jp
xchg
call
and
mov
js
fistpl
xchg
addr16
subl
ljmp
dec
mov
movsb
xchg
xchg
ljmp
cmp
or
xor
pop
aas
cmp
dec
cltd
xor
xor
lods
andl
adc
jle
fldt
or
inc
insb
popa
cli
nop
xchg
jns
add
fstl
adc
push
data16
lret
mov
cmc
dec
sti
pop
ja
sub
jnp
xor
popf
inc
fnstenv
stc
aaa
gs
rol
ret
ffree
mov
into
inc
sub
mov
popf
pop
aas
int3
dec
jae
mov
lret
sub
and
hlt
and
push
sahf
repnz
loop
push
mov
adc
or
xchg
mov
dec
mov
ficomps
imul
xchg
add
sbb
inc
cmpsb
mov
push
data16
pop
cwtl
xchg
cmpb
pusha
arpl
and
popf
pop
stos
push
aam
add
push
adc
mov
pop
int3
mov
sar
pop
popf
popa
shr
push
pop
dec
ljmp
shlb
loopne
into
xlat
nop
rclb
pop
push
loop
les
movsl
push
imul
cmp
push
mov
and
jl
xchg
pop
push
mov
ljmp
adc
mov
push
push
data16
add
loope
push
cwtl
or
roll
enter
punpckhbw
orl
sub
lock
icebp
sahf
xor
cmpb
xor
adc
jp
sbb
andl
push
xlat
je
or
lods
xlat
mov
mov
sarb
adc
dec
es
push
sbb
fadds
aad
jle
icebp
lret
cld
mov
dec
bound
jg
cmp
mov
cmp
pop
xor
mov
je
repnz
mov
push
add
xchg
xchg
mov
push
cmp
pop
or
popa
push
xor
inc
rcrl
rolb
lret
lock
sbb
mov
adc
add
pop
ret
rclb
ljmp
mov
das
cmp
js
cmp
mov
or
cwtl
dec
cmp
aam
cmpsl
pop
ret
fcomps
push
fwait
mov
ljmp
nop
daa
mov
push
fwait
xchg
shll
dec
lret
dec
js
mov
fcmovne
aad
cmp
push
mov
mov
sarl
push
popf
mov
and
test
or
faddl
loope
push
lods
popf
xlat
inc
cmpsb
in
int
stos
mov
popa
dec
mov
es
xor
movsb
insl
mov
pop
repz
jbe
sahf
daa
mov
cs
inc
pop
xor
addb
movsl
pop
outsl
dec
or
adcb
push
inc
dec
inc
add
and
pop
roll
pop
mov
ja
divps
dec
lret
lods
mov
ljmp
inc
dec
cmp
mov
fimull
testb
and
fucom
dec
test
lods
out
cmp
xor
push
jmp
and
out
in
or
repz
adc
jge
fs
lret
push
and
aaa
in
repnz
dec
xchg
inc
push
pusha
sub
ss
fdivrs
ljmp
pop
into
push
movsb
lods
test
mov
mov
enter
ds
aad
dec
adc
test
out
inc
je
mov
xchg
sbb
inc
mov
lds
fidivl
jo
out
push
push
push
mov
ss
iret
std
xchg
cmp
test
or
sub
sahf
cli
repz
pop
inc
cld
pop
pop
inc
jo
xor
pop
out
dec
rol
push
pushf
lret
fcmovbe
mov
lcall
sbb
and
ja
xchg
adc
adc
gs
xchg
sub
mov
daa
call
out
jmp
and
mov
push
popf
push
ja
in
test
cs
enter
mov
sbb
pop
iret
push
addr16
cwtl
bound
loop
and
push
fildl
sub
icebp
ljmp
movl
add
out
cli
or
cli
addr16
addr16
cmp
outsl
cli
pop
mov
xor
mov
xchg
int
movsl
lret
adc
mov
dec
ja
xchg
mov
in
pop
sti
popa
lea
xchg
inc
mov
addl
push
mov
xor
montmul
cmpsb
inc
mov
icebp
cltd
loopne
pop
negl
and
mull
rcrb
cltd
push
icebp
mov
lods
and
mov
cmp
stos
orb
rcl
xchg
flds
daa
ficoml
stos
cli
stc
xor
cmc
adc
xor
dec
sahf
xchg
sbb
pop
hlt
incb
and
sahf
mov
lea
in
nop
cmpsb
mov
cmp
cmp
pop
jbe
dec
cli
push
aaa
inc
repnz
mov
xchg
jne
mov
fisttps
subb
std
outsb
in
hlt
and
popf
mov
aas
lea
stos
out
sbb
cmc
stos
jae
ficoms
fs
cmp
pop
test
xor
add
lock
xchg
ljmp
or
dec
shr
stos
out
xor
jns
fldl
add
cli
test
icebp
xchg
adc
mov
stc
testl
cmp
adc
push
fsts
pop
cmp
leave
scas
sbb
jmp
inc
dec
div
jo
popf
add
stos
xor
cltd
call
loop
adc
mov
push
out
push
lret
sti
add
inc
idivb
pop
imul
pop
dec
mov
lret
push
pop
jo
cmc
xor
mull
push
shl
push
fcmovnbe
and
cs
scas
out
popa
aas
adc
dec
add
push
test
push
rclb
popa
mov
xchg
dec
mov
inc
sub
or
ret
cmp
iret
pop
lods
or
push
cmp
or
cmpsl
test
xor
xor
inc
sbb
push
and
loop
popa
sbb
pop
sbb
push
lahf
shl
jmp
mov
cmp
ds
ljmp
rolb
lcall
frndint
mov
imul
in
rcll
mov
mov
mov
fcmovnu
adc
stos
dec
popa
or
dec
sbb
pop
adc
xchg
lock
jecxz
xor
jo
popa
inc
int
shl
and
xor
xchg
pop
lods
iret
ret
clc
add
movsl
adc
fs
in
int
lods
fwait
jbe
xorb
lods
lds
ret
mov
and
popa
xchg
fidivrs
push
lahf
cs
pop
data16
ljmp
mov
jg
incl
jb
aaa
rolb
in
mov
mov
adc
idiv
test
mov
in
dec
call
js
cltd
shrb
stos
pop
andb
addb
inc
add
insb
adc
das
lcall
hlt
fistpll
jae
movsb
push
loopne,pn
loope
mov
shrl
cwtl
repnz
out
clc
bound
dec
stc
sub
pop
jecxz
jg
push
mov
fstps
out
add
aaa
jb
add
ficomps
xchg
std
adc
jae
dec
or
and
bound
ja
pusha
in
jge
mov
sbb
push
xor
xor
ds
popa
divb
test
sub
leave
sbb
push
sub
and
push
cmp
in
push
int
sub
movsl
pop
xor
push
data16
xor
mov
or
gs
xchg
cmc
aaa
movsb
push
rclb
es
jl
pop
mov
aam
cmp
stos
ret
fdiv
inc
cmp
filds
icebp
cmovae
test
inc
in
mov
sub
mov
stc
mov
ljmp
pop
xor
movsl
add
xlat
leave
push
iret
sub
sahf
add
cmpsl
xor
mov
sub
dec
sahf
mov
test
xchg
mov
loop
cmpsl
andb
pop
xchg
fdivrl
jle
push
jmp
push
sti
das
sub
add
pop
mov
dec
nop
pop
mov
push
fmull
xchg
sub
inc
xchg
inc
push
sub
jns
sub
insl
xor
outsl
std
mov
mov
loopne
out
push
push
mov
out
sbb
leave
aas
leave
loope
dec
shlb
out
flds
xchg
jb
call
push
imul
fcompl
push
lret
mov
sub
and
adc
in
sbb
pop
xor
jb
pop
jne
cmc
xor
push
jle
add
hlt
push
or
cmp
movsl
mov
inc
das
lock
or
pop
xor
sahf
sbb
gs
aas
out
xor
mov
sub
jo
dec
test
ja
cmp
mov
and
dec
imul
cmp
ret
fidivrs
mov
loope
xor
shrb
add
inc
iret
sahf
mov
pop
push
les
and
pop
mov
inc
sti
idiv
dec
dec
jo
mov
add
mov
cmp
sbb
jnp
jecxz
jbe
cmc
push
ds
inc
cmpsb
sbb
push
addr16
add
add
pop
mov
aas
add
push
mov
mov
mov
mov
dec
leave
fwait
add
or
in
movsl
lcall
xor
inc
sub
cmp
test
mov
push
outsb
imul
mov
pop
pop
out
lret
push
and
xor
cmpsl
jbe
fisubl
int3
cs
test
adc
insl
aas
ficoms
lods
sbb
dec
jp
pusha
divl
cs
pop
dec
inc
test
ret
cmp
adc
mov
inc
mov
pop
movsl
sbb
lret
fistpll
and
sti
sar
mov
arpl
push
clc
punpcklwd
inc
fsubl
mov
das
stos
dec
data16
cmp
icebp
incb
add
fwait
xchg
add
xchg
lock
inc
jmp
cld
pop
fldl2e
scas
popl
add
inc
pop
stos
lret
dec
xorb
and
xor
push
cld
pop
nop
inc
std
stc
shlb
shl
cmc
xchg
into
cmp
js
ss
pop
fimuls
inc
mov
aad
add
jno
xor
push
push
sub
es
cmp
sbb
daa
xor
dec
loope
negb
sbb
pushf
insl
sub
xadd
jb
insb
jg
sub
fnstcw
dec
jae
scas
fwait
mov
dec
fidivs
xchg
xor
fisubs
hlt
jnp
xchg
push
jbe
jmp
daa
add
lret
scas
dec
repnz
int
stos
jns
sub
fsubr
sbb
pop
push
xchg
ret
imul
bnd
cld
fisubrl
mov
inc
mov
mov
jl
sbb
pop
or
add
add
lods
stos
mulb
in
dec
subb
dec
lock
adc
ss
or
and
cmpl
cmc
xor
sub
in
jp
xlat
movsb
notb
notl
dec
lea
mov
xchg
dec
fstpt
sbb
push
push
jecxz
aad
repz
pop
mov
mov
lret
cltd
in
jle
xchg
mov
jmp
jno
jmp
mov
lahf
scas
dec
shrb
or
sbbb
pop
cmp
jge
sub
push
aaa
cmc
mov
lds
iret
fucomip
scas
or
cmc
movsl
loopne
adc
cld
in
push
popf
push
mov
ja
mov
sti
jo
es
xchg
flds
movsl
out
pushf
xchg
and
test
sbb
in
test
inc
or
popa
add
adc
lret
into
xchg
negl
jge
xchg
imul
fnstenv
stos
mov
aam
dec
call
push
movl
xor
inc
cli
das
sbb
popf
fidivl
sbb
or
add
cmp
test
pop
xchg
push
mov
jmp
or
jecxz
pop
dec
gs
scas
mov
adc
es
lods
mov
mov
test
shrb
or
add
cs
xor
insl
ficoms
test
lahf
xor
bound
andb
dec
xchg
jp
xchg
cs
fs
push
sbb
cmc
jae
mov
mov
jmp
fucom
push
pop
das
lods
mov
cmp
cld
xor
gs
das
int3
test
pmullw
dec
int3
cs
movsl
push
les
dec
sub
ss
xor
and
or
cmp
push
movsb
jle
in
ficompl
cmc
ret
inc
adcl
pop
mov
mov
std
mov
test
or
jo
xchg
aam
pop
xor
jbe
ja
and
shlb
inc
es
add
add
das
cmpsb
leave
cmp
lods
mov
cmp
inc
fwait
add
sbb
and
js
xchg
pop
dec
pop
pop
mov
aaa
mov
jmp
cs
arpl
lret
push
fnsave
ss
xchg
inc
ds
pop
fs
adc
push
stos
push
loopne
mov
cli
cmp
mov
mov
xchg
and
sti
sbb
mov
jae
imul
cwtl
mov
jge
imul
ret
pop
jno
ret
jns
dec
adc
inc
out
sub
mov
pop
dec
lock
lahf
int
jo
gs
notl
xlat
std
jnp
and
xor
or
lret
pop
test
inc
xchg
and
mov
icebp
pop
lock
shlb
cmc
sub
scas
sbb
ss
fsubp
mov
mov
shr
jno
xchg
lcall
dec
push
xchg
mov
scas
fstp
in
inc
or
sbb
adc
jbe
popa
sti
popa
daa
dec
hlt
test
xor
mov
jmp
xchg
jne
dec
add
jns
cmp
outsl
sbb
clc
jmp
adc
insl
jae
arpl
jmp
pop
mov
push
mov
xchg
dec
mov
sub
repnz
dec
xlat
sbb
mov
mov
jns
gs
push
jo
lock
lock
xchg
push
jne
lret
sti
push
jge
inc
jl
mov
mov
test
in
loop
pusha
mov
iret
rolb
push
ja
jb
int
push
ljmp
test
fs
negl
fbld
shl
xchg
sarl
flds
in
jecxz
insb
mov
mov
popf
adc
cltd
lcall
xor
ja
cli
dec
in
jecxz
loope
aam
mov
jp
push
sbb
das
push
xchg
scas
mov
rorl
xor
aad
mov
repnz
jg
add
mov
sbb
push
or
or
ret
scas
pop
jb
cmpsb
jno
clc
cmpsl
push
push
shlb
pop
push
movb
push
fsubrs
jbe
adc
cmp
jbe
movsl
lea
lds
clc
test
or
fisttpl
cmp
shll
fnstsw
lahf
push
push
cmp
mov
repnz
adc
pop
int
xor
sbb
loop
out
jns
jo
mov
stos
jns
xchg
sub
test
enter
mov
push
sub
push
ret
adc
xor
ja
dec
push
loop
aad
imul
dec
xor
in
test
cmp
inc
lret
arpl
test
adc
int3
ffreep
jg
add
out
sbb
jns
mov
jno
lret
icebp
sub
adcb
inc
nop
test
ljmp
into
sub
fwait
xor
inc
adc
ss
mull
scas
fistps
sbb
xchg
cmc
xorl
test
jne,pn
push
rcll
test
adc
xchg
negl
xor
pop
mov
pusha
cld
mov
movsl
jle
rolb
ss
push
jge
sub
jp
push
inc
out
cld
scas
dec
lcall
js
pop
das
inc
and
push
and
mov
push
stos
xchg
imul
push
mov
mov
ret
ss
jmp
stc
fld
stc
mov
cmp
in
mov
inc
mov
jl
arpl
and
mov
vmwrite
or
sub
sub
cmp
out
cmp
xor
andl
push
lcall
imull
jg
add
outsw
push
imul
inc
lea
inc
gs
xor
das
xlat
sub
lcall
gs
jb
mov
out
ret
pushf
in
outsl
mov
cmpsb
and
clc
push
leave
loope
xchg
mov
inc
xchg
and
pop
xchg
adc
mov
jmp
or
mov
xchg
xchg
push
int3
pop
outsl
mov
push
jle
stc
cwtl
incb
fstpt
adc
xor
mov
mov
inc
pop
push
push
cmp
add
fdivrl
mov
and
mov
pusha
mov
xchg
ret
pop
in
pop
inc
cmp
sbb
xchg
cltd
mov
mov
xchg
mov
imul
mov
cmp
arpl
jae
and
lret
mov
adcl
jmp
inc
mov
in
in
and
inc
mov
adcb
push
or
xchg
inc
pop
or
pop
jo
cmp
popf
xchg
int
add
pusha
cmp
cmp
fldenv
stos
cld
cmp
cli
out
xor
lods
sarl
imul
adc
dec
jo
call
aaa
sbb
cltd
arpl
inc
jge
enter
icebp
mov
push
xchg
lods
mov
ds
rorl
fsub
test
sub
repnz
int
dec
cmp
pop
jbe
push
movsb
imul
push
int
scas
mov
mov
mov
pushf
repnz
xchg
imul
addr16
lods
aas
jge
int3
and
or
adc
xchg
sub
xchg
ficoml
ljmp
repz
movsl
js
add
dec
clc
cltd
mov
mov
test
cmpsl
out
jp
jg
inc
dec
imull
sbb
mov
nop
jge
inc
das
ror
inc
adcl
fnsave
mov
aam
sub
test
leave
daa
faddl
pushf
adc
outsb
mov
pushf
inc
pusha
mov
movsl
dec
pop
sub
xchg
outsl
add
shl
jns
gs
clc
call
pop
movsl
fcoml
push
mov
lock
sub
les
inc
arpl
jb
pop
cli
fldl
aas
aad
clc
xchg
cmp
popa
xor
and
outsl
bound
clc
jne
mulb
adc
jne
and
inc
lock
shl
std
pop
xor
mov
or
sbb
lret
data16
jp
ljmp
push
pop
negb
push
repnz
sub
hlt
fst
rclb
sub
mov
pop
imul
movsb
jb
icebp
sub
xchg
shl
fwait
and
inc
ss
enter
fs
jbe
cmp
mov
jmp
sbb
addr16
fcompp
ret
nop
or
inc
movsb
shr
inc
dec
aam
and
xor
sbb
testl
pop
xlat
dec
dec
dec
dec
jge
out
xchg
xor
dec
aaa
mov
jne
je
movsb
push
pop
cli
rcrb
or
jno
xor
mov
test
addb
decl
scas
je
pop
in
out
push
jne
in
sbb
loop
mov
and
subl
mov
ss
test
insb
and
sub
sub
add
mov
pop
cmp
aaa
ds
arpl
push
and
repnz
mov
test
mov
xor
lret
loop
rcr
or
push
movsb
subb
jge
sbb
cmpsl
les
push
cld
xlat
or
cmp
xlat
sbb
xor
subb
jno
nop
shrl
aaa
cwtl
adc
aas
adc
push
into
pushf
xchg
jne
in
outsl
sub
pop
stos
or
xor
popa
pop
jg
and
ret
ficomps
sbb
ret
les
leave
insl
fsts
jl
xchg
stc
jne
fsubp
jmp
je
lret
mov
enter
cltd
adc
inc
push
icebp
inc
mov
and
mov
or
and
stos
dec
outsl
inc
inc
or
jae
mov
mov
int3
push
mov
add
ja
loopne
jge
sbb
jae
shrl
movsl
outsb
add
scas
dec
push
inc
pop
add
push
xchg
fisubl
mov
adc
cmp
cmp
cli
push
add
dec
mov
in
sbb
xchg
add
das
pop
cwtl
xor
mov
out
iret
pop
ja
dec
mov
aam
xor
xchg
push
mov
dec
or
test
mov
inc
push
test
push
dec
and
outsl
sbb
jne
push
pusha
aam
dec
cwtl
fistl
inc
test
mov
xchg
fidivrl
jl
ficomps
fmuls
fists
xchg
xor
sbb
lock
frstor
jbe
xor
pop
pop
xor
mov
pop
xchg
pop
xchg
push
cmc
xor
out
out
xor
dec
lcall
jge
ds
outsl
in
sbb
jl
mov
sti
pop
sub
jecxz
push
lea
lods
or
adc
push
std
add
jecxz
movsl
mov
movsl
push
mov
or
dec
pop
jns
cmp
test
outsl
outsb
call
cld
push
mov
xchg
and
js
mov
dec
jmp
fimull
and
mov
std
and
adc
pusha
shll
addl
jmp
sbbb
test
jle
pop
inc
xor
jbe
fbld
add
push
mov
sub
mov
xchg
push
lret
cld
out
rcr
cmc
jmp
into
aaa
pop
shll
cmp
iret
jg
test
xor
iret
movsl
jle
push
mov
or
in
ds
sub
adc
sbb
loopne
add
addr16
repnz
sub
ja
sub
sub
mov
inc
pop
inc
adc
mov
dec
icebp
push
lods
push
xor
pop
fstps
and
dec
iret
mov
popf
sub
or
jbe
xor
pop
inc
out
push
out
mov
pop
gs
lds
and
rorb
inc
dec
rclb
add
xchg
jb
call
inc
jl
pextrw
or
shll
add
or
mov
hlt
shll
pusha
dec
fwait
cld
pop
pop
dec
add
sub
imul
rorb
mov
jmp
pop
xchg
arpl
push
sub
imul
pop
iret
popf
iret
popf
out
scas
enter
push
out
inc
adc
inc
or
ds
mov
fsts
push
push
in
outsb
mov
ss
mov
sub
int
icebp
data16
sub
push
xchg
or
mov
push
and
sbb
outsl
leave
test
outsb
pop
mov
sbb
pop
adc
movsl
pusha
mov
enter
in
hlt
fistl
xchg
aad
inc
push
iret
pushf
popa
dec
cmc
punpcklbw
fwait
xor
iret
mov
mull
jle
mov
and
jecxz
or
inc
cmp
cmp
adc
jno
sar
repnz
and
cmp
les
imul
fcmovnu
test
dec
fsubrs
loope
lret
pop
push
jp
fsts
rolb
pop
out
lahf
js
xchg
add
mov
shll
je
pop
aas
jmp
outsl
jnp
or
inc
ss
ja
enter
pop
pop
loopne
add
inc
mov
cmp
aad
orl
xorb
outsb
xlat
gs
fsts
ss
pop
xchg
xorl
cmc
inc
cs
lods
sub
cwtl
sbb
jge
push
add
test
roll
or
es
in
xchg
les
fcomps
xchg
push
cwtl
int
add
sub
idivl
jmp
inc
inc
inc
arpl
pushf
jp
sub
add
inc
add
out
stc
addr16
lds
push
xchg
mov
mov
jbe
sub
and
add
out
pusha
fisttpll
fisubl
ds
bound
aaa
aam
jne
fwait
insb
out
inc
pop
add
out
leave
ret
dec
jns
mov
pusha
xlat
mov
lea
icebp
imul
je
xor
push
and
test
shlb
sub
sub
jnp
xor
xchg
gs
ss
mov
cmp
jno
sub
loopne
push
xchg
aaa
mov
push
cwtl
notb
shrb
sbb
in
seto
or
clc
dec
mov
repz
out
mov
stos
push
jnp
cmp
mov
jp
and
mov
in
cmp
jae
cmp
xchg
lock
das
jp
adc
inc
test
add
rcl
pushf
lods
mov
pop
inc
std
and
pop
pop
xchg
xor
insb
pop
insl
sub
in
rclb
push
or
imul
sbb
xchg
sub
xor
aad
ret
sub
sub
adc
mov
fidivrs
push
imul
mov
scas
clc
push
lods
adc
pop
nop
add
scas
insb
dec
stos
mov
aas
lahf
mov
sbb
std
mov
push
aad
rclb
xor
fiaddl
fidivs
xchg
and
mov
jb
gs
xor
test
or
mov
rcr
je
xchg
inc
imul
shll
dec
fldcw
xor
pop
pop
add
add
loopne
cmc
test
ds
mov
out
jae
mov
xor
pushf
cwtl
mov
xor
sub
jnp
sti
adc
pop
ffree
inc
mull
xchg
xor
fcmovb
xchg
xor
push
movsb
leave
xor
add
or
int3
leave
or
push
lcall
in
jecxz
mov
int3
les
add
fildll
xor
repz
mov
sbb
fistpll
or
sub
cltd
lds
repnz
mov
fiaddl
mov
scas
test
pop
mov
and
sub
imul
movsb
cmpsb
scas
jne
xchg
rolb
sarl
fs
stos
mov
mov
cli
add
add
mov
xor
lea
dec
cmp
int
pusha
sti
mov
popf
sti
xchg
push
ret
addr16
std
pop
sub
cwtl
xor
ljmp
sbb
sub
inc
inc
push
mov
jp
stos
pop
lods
loopne
xlat
sub
push
int
ja
loop
loopne
and
ret
rcr
mov
orb
ljmp
int3
dec
xor
or
jecxz
sbb
repz
xchg
cmpsl
dec
idivb
repz
cmp
jb
clc
jo
test
adc
in
inc
push
push
stos
or
sbb
frstor
test
in
pop
pushf
jecxz
pop
test
stos
adc
jb
mov
lds
mov
cmp
mov
xchg
sbb
icebp
mov
fdivs
xor
add
mov
xchg
leave
js
imul
xor
pop
lcallw
aam
in
hlt
aas
cmpb
es
sbb
fsubr
pop
out
push
and
mov
push
std
or
xor
mov
xchg
fs
mov
lret
fwait
xor
add
stos
jne
xlat
imul
int3
outsl
shrl
imul
add
cmpsl
push
stos
mov
rolb
incl
cmpsb
pushl
lods
mov
push
xorb
xchg
mov
or
dec
sbb
or
mov
jno
xchg
inc
sub
push
aaa
jnp
push
push
inc
mov
loope
xchg
cmc
out
inc
ret
jb
sbb
cmpl
fcom
jnp
jecxz
and
sahf
mov
inc
inc
adc
ror
sbb
xchg
adc
negb
add
enter
inc
loopne
test
popl
lods
cmp
pop
cmp
shrl
into
in
mov
aam
push
inc
lcall
dec
adc
adc
dec
mov
sarl
aam
divl
mov
popf
adc
cmpsl
outsb
or
dec
mov
test
sub
or
gs
xor
into
pop
and
sahf
in
iret
mov
xor
sbb
in
jbe
loopne
cmp
jle
pop
aam
mov
les
sub
mov
fcomps
rclb
loopne
adc
lea
pop
pop
pop
jmp
cwtl
sbb
icebp
stos
mov
icebp
or
je
xchg
call
cs
bound
jns
int3
jecxz
jo
and
push
ja
mov
jae
mov
hlt
push
mov
xor
xchg
in
mov
mov
and
inc
movsb
loopne
loope
enter
xchg
push
mov
jae
dec
and
add
jo
xchg
pop
inc
cld
je
or
mov
push
popa
push
hlt
pop
push
add
or
pop
jne
aas
dec
ret
mov
lock
mov
subl
clc
inc
fidivl
aad
int
cli
andl
inc
mov
add
mov
ljmp
xor
pop
sub
jnp
std
inc
stc
pop
cmp
je
dec
dec
ss
pop
xor
adc
pop
nop
mov
mov
dec
aad
mov
mov
bound
push
aam
mov
popf
and
mov
dec
xor
dec
jb
sub
or
mov
daa
insl
xor
mov
enter
add
imul
lret
orl
xlat
inc
paddd
sbb
xchg
jmp
pop
adc
pop
dec
jmp
mov
xchg
lcall
adc
sbb
and
stos
and
gs
pop
lret
or
lret
push
shll
push
xchg
mov
aaa
bound
stos
repnz
lcall
cmpsb
xor
outsb
repz
lahf
lret
lock
scas
push
xchg
add
xchg
xor
cli
mov
flds
ret
pushf
inc
jp
aas
cltd
add
mov
dec
add
and
icebp
cmp
xorl
mov
add
jmp
lock
pop
adc
aad
call
movsb
xor
pusha
das
pop
push
cs
xchg
and
cmp
add
out
jg
js
mov
repnz
stos
stos
fcmovnbe
push
push
daa
add
ret
push
imul
lods
je
and
xchg
push
negb
ret
cmpl
rcrl
xchg
stc
repz
xor
ret
cmp
inc
loope
dec
cwtl
ss
xor
imul
cwtl
movsl
iret
or
mov
xor
push
sbb
fwait
ror
jl
daa
popa
lahf
jnp
xchg
fidivl
in
pop
ljmp
rcrl
push
push
insl
sub
or
clc
stos
sub
or
loop
push
pusha
sbb
add
xor
mov
inc
ja
call
lds
adc
fwait
out
shl
dec
cmp
call
xchg
in
sbb
xchg
test
xchg
pop
jge
int
movntps
or
mov
popf
or
sbb
jo
mov
sahf
inc
shr
jp
add
pop
aam
test
outsb
xor
add
sahf
paddsb
pop
in
add
mov
cmp
imul
mov
enter
cli
and
shll
pop
ss
and
fsubl
mov
rcrb
fstps
mov
jp
and
xchg
adc
cmpsl
mov
inc
loope
hlt
iret
pop
out
adc
es
fbstp
cs
jg
iret
sbb
iret
inc
and
out
sbb
repnz
pop
das
jne
fsubrs
mov
jle
pusha
xchg
popa
xlat
imul
xchg
mov
mov
testb
fcmovne
mov
sbb
dec
scas
or
inc
xchg
xor
icebp
dec
fadd
cmp
test
dec
insb
mulb
inc
icebp
cmpsb
stc
pop
add
movsb
push
je
ret
pop
mov
push
int3
rolb
mov
adc
js
das
cmc
fst
push
cmp
lahf
push
mov
sbb
rcrb
dec
mov
aaa
int3
test
andl
in
inc
pop
out
mov
andb
imul
lret
push
inc
stos
fnstsw
sbb
mov
fwait
stc
movsl
test
dec
mov
inc
rcrb
xor
ret
cmpsb
adc
mov
insl
push
pop
ds
ret
mov
aaa
pop
iret
idivl
stos
ret
pop
cmpsl
push
repz
push
mov
out
xor
mov
jmp
imul
shrl
scas
iret
insl
dec
xorb
xor
imul
dec
and
lret
stos
aam
lret
jmp
shlb
insb
push
insl
pop
insl
jne
mov
loope
mov
push
idivb
mov
mov
xchg
daa
lret
sahf
out
inc
notb
cmpb
nop
sbb
sub
aaa
add
lahf
mov
xchg
sbb
popa
enter
shll
lahf
jle
xor
icebp
sub
sbb
in
add
push
adc
shll
addl
push
cmp
mov
test
pop
add
jg
add
xor
movsb
dec
out
fwait
outsb
mov
out
aaa
and
xor
stos
push
pop
das
jp
xorl
je
xchg
arpl
call
movsl
loopne
mov
into
lcall
arpl
sahf
and
jecxz
fneni(8087
rorl
stos
fadds
push
fdivs
sub
in
cli
sbb
mov
mov
in
xor
jl
jge
mov
and
fs
data16
jo
sti
xchg
lret
cmp
jo
aas
sbb
stos
sub
pop
lret
jns
sbb
inc
ss
sbb
xor
add
cmp
sar
jbe
jns
ret
or
in
mov
mov
icebp
popf
dec
aaa
pushf
fistpll
inc
pop
inc
sub
and
mov
fisubs
jns
popa
nop
ds
fcmovnb
ss
sbb
mov
xchg
sbb
test
cmpb
enter
adc
cmpsl
jp
dec
pop
bnd
roll
fstpl
mov
and
pushf
das
outsl
mov
cmp
dec
sbb
into
dec
cmp
or
mov
jg
pop
mov
int
add
mov
xchg
xor
sbb
jne
jno
cli
inc
loop
sub
aam
or
xchg
sbb
out
cmp
outsl
jae
dec
je
pop
fs
sti
cmp
movq
repnz
jmp
fsubrs
das
sub
push
aad
jnp,pt
and
xchg
sbbl
in
dec
push
sbb
fimull
addr16
dec
jp
adc
sub
inc
clc
ds
jle
rcpps
repnz
mov
imul
enter
jge
mov
xor
arpl
aam
idivb
sbb
pop
cmc
or
mov
jge
fstpl
mov
test
sbb
xchg
mov
popf
aam
mov
outsl
xor
dec
inc
call
inc
add
int
insb
lods
stc
dec
mov
insl
ljmp
lahf
leave
pop
add
pop
pop
mov
fidivs
sub
sarb
dec
mov
shll
addr16
jg
call
mov
and
loop
cmp
mov
mov
mov
xor
xchg
test
cmp
movsl
repz
mov
sahf
xchg
in
out
mov
mov
add
testl
xor
push
jmp
cmpsb
mov
adc
movsl
and
test
rcr
adcb
mov
lret
jmp
data16
stc
or
mull
sub
xor
out
or
shlb
es
xor
fs
subl
dec
arpl
sbb
push
xchg
fiadds
jb
jo
pop
inc
and
pushf
push
lret
enter
mov
mov
cmp
leave
or
jmp
rcrl
xchg
ljmp
les
movb
jo
outsl
mov
cmp
mov
and
inc
mov
insb
pop
jg
sbb
mov
mov
les
ss
xchg
mov
stc
test
jns
xor
mov
ficompl
adc
pushf
push
movsb
repz
insl
add
dec
lds
lea
outsb
hlt
dec
arpl
out
imul
push
jmp
aaa
fisttps
in
pop
cmp
add
das
js
cmp
or
pop
loopne
ret
rorl
dec
push
inc
outsl
mov
and
xor
jg
mov
mov
fdivrl
in
and
pop
in
imul
add
or
jecxz
push
mov
enter
ljmp
cwtl
pop
and
insb
je
fs
clc
mov
jmp
out
mov
inc
mov
mov
pop
out
dec
or
xchg
loope
push
loope
push
mov
stos
cs
pusha
pop
push
xchg
xor
in
inc
xchg
imul
scas
bound
sbb
fadd
fisttpl
and
cmp
jmp
cmp
shlb
stc
outsb
lcall
mov
lcall
iret
jecxz
in
outsl
push
mov
popa
mov
add
leave
push
in
out
inc
mov
stos
or
jle
cmpsb
adcl
jbe
ss
mov
stos
push
add
or
dec
loop
inc
mov
pop
jge
push
cmp
cld
fcoml
ficoms
dec
aad
cmc
mov
cmc
dec
sbb
and
test
sti
cmp
lcall
sarb
roll
movsb
in
mov
jno
and
fsub
pop
subl
and
les
jge
mov
or
mov
int
xchg
mov
jae
sbbb
sbb
mov
aam
mov
jge
ljmp
ja
clc
out
aad
jae
test
sbb
leave
daa
xchg
pop
xor
in
shlb
es
mov
push
or
daa
popf
mov
xchg
insb
aas
sub
xlat
fistpll
lret
stc
rol
add
and
decb
inc
cld
cltd
lcall
andl
test
add
mov
loope
lock
jecxz
std
sub
push
test
push
sbb
out
dec
sbb
fcoml
shrl
jnp
lcall
mov
dec
sub
not
inc
cli
dec
stos
mov
xchg
mov
fucomip
sub
inc
flds
mov
xchg
je
adc
pop
movsb
add
pop
sbb
repz
adc
xlat
add
fs
dec
mov
repz
in
std
jae
inc
sub
sbb
and
lea
ljmp
outsb
add
push
pop
das
fwait
and
rolb
adc
and
stc
xlat
mov
push
shrl
or
jb
adc
xor
or
lock
xchg
test
pop
sbb
sbb
stos
imul
std
mov
or
das
mov
in
pop
out
fdivr
and
mov
lods
cmp
dec
mov
mov
fisttpll
cmp
inc
add
test
sub
rorb
jnp
bound
cs
cmpsb
pop
into
es
push
aad
mov
dec
push
push
sbbb
pop
push
cmp
or
xor
lcall
ret
fwait
sub
xor
add
adc
jo
xor
lcall
push
push
dec
mov
sbb
jmp
xchg
pop
sub
mov
pop
xor
dec
xor
xor
inc
in
cwtl
pop
jne
pop
dec
movsb
dec
incl
sbb
adc
jno
pusha
sbb
lods
sahf
inc
loope
inc
jecxz
and
je
or
adc
cli
std
jns
xlat
sbb
adc
pop
sub
jg
ljmp
adc
xchg
lret
cmp
jecxz
jg
cmp
testl
into
sbb
jnp
sub
lret
out
push
movsb
jno
lahf
mov
mov
fnclex
out
lds
cmp
sti
sbb
cmp
fs
lahf
mov
lea
add
cmp
inc
stos
sub
outsb
scas
mov
in
in
jb
outsl
fistpll
add
push
test
test
jae
repnz
ljmp
pop
add
push
inc
test
mov
mov
xchg
test
sahf
aaa
or
cmp
pop
loopne
push
cmpsb
lock
mov
xorl
sub
inc
mov
mov
hlt
xchg
sub
sbb
sbbb
pop
inc
es
and
dec
fcmovnb
aas
mov
mov
aaa
js
mov
lea
cld
lret
fimull
mov
mov
dec
repnz
cmp
adc
aam
or
cwtl
and
jl
popa
pop
cmpsl
popa
or
test
cmpl
cmc
popf
mov
out
call
jecxz
fsts
sub
fistps
sbb
xchg
pusha
imul
out
push
lea
jmp
push
scas
bound
xor
roll
cmp
mov
xor
pop
or
jg
sbb
test
xchg
dec
popa
mov
cmp
loope
das
cmp
std
mov
hlt
sub
xor
mov
dec
xor
mov
mov
pop
push
jae
pusha
in
mov
cltd
les
popa
xchg
jae
mov
leave
xchg
por
popa
shll
lahf
sahf
pusha
cs
xchg
and
xchg
cld
inc
cmp
push
negb
pop
sbb
icebp
test
test
ds
lds
dec
sahf
lds
out
sbb
pop
movhps
jg
mov
add
addr16
fs
mov
sbb
and
pushf
mov
inc
das
pop
fnstcw
movsb
inc
sbb
jb
cmp
push
mov
movsb
sar
mov
fsubrs
adc
push
fistps
insb
aas
sub
daa
mov
jl
insl
pop
xchg
mov
sbb
pop
data16
jns
daa
cmp
push
out
jp
adc
mov
adc
test
int3
mov
xchg
fsubrs
sbb
nop
push
lahf
imul
test
stos
imul
cmp
add
int3
stos
push
sub
push
test
icebp
mov
mov
cmp
or
sub
lea
aaa
clc
cmp
or
push
cmp
sti
xor
icebp
push
mov
sahf
ficoms
icebp
jl
push
into
mov
hlt
jmp
int3
hlt
mov
in
xorb
cwtl
dec
filds
aam
stos
sar
mov
pop
mov
fmuls
sub
cs
cmpsb
insl
xchg
dec
movsl
pop
int
jb
jae
cmpsl
cmc
fnstsw
vmovd
push
mov
xchg
xlat
or
cmp
cltd
rcrb
mov
push
out
add
cli
xchg
data16
fwait
push
xchg
aad
fwait
xchg
add
sub
mov
loopne
xchg
rcrl
inc
xor
ret
mov
and
es
inc
cpuid
xor
or
imul
lock
inc
xor
mov
popa
mov
dec
push
pop
dec
scas
pop
mov
push
mov
call
cmpsb
enter
fisubrl
repz
aam
imul
nop
insb
in
out
mov
adc
mov
ret
mull
es
shlb
or
mov
and
xor
sarb
and
push
sar
push
xor
xchg
fcomip
xchg
lods
add
push
mov
int3
sub
cmp
repnz
addl
das
add
push
adc
xchg
out
outsl
imul
nop
gs
xor
mov
mov
ljmp
dec
in
insl
dec
icebp
stos
bound
popf
outsb
scas
mov
sbb
jecxz
xchg
mov
jno
in
pop
repnz
mov
or
dec
mov
add
mov
pop
sub
stc
out
push
or
or
cmp
sti
pop
mov
mov
sbb
sar
cmp
sub
dec
inc
adc
sub
lds
pop
cmp
rcr
xchg
pop
jge
movsb
push
sbb
push
push
shll
jecxz
mov
mov
sub
ss
add
push
or
push
pop
outsl
popa
fs
lret
cltd
mov
mov
cmp
pop
outsl
repz
cld
outsb
inc
pop
fwait
insl
xor
or
pop
adc
subl
xchg
mov
daa
sbbl
jbe
orb
into
mov
insb
filds
cmpsb
fsubs
data16
scas
out
in
xchg
jne
shll
cmc
subl
rolb
pop
fildl
dec
dec
or
test
std
cmp
aam
and
xor
push
push
lock
mov
movsl
arpl
xchg
mov
in
in
mov
fisubs
sub
add
pop
jecxz
mov
dec
or
jne
sub
mov
xchg
and
jmp
fwait
clc
push
xchg
repnz
insl
sub
pop
pop
movsb
or
mov
insb
inc
aad
xlat
pushf
adc
lahf
add
out
cmpsl
cmpsb
mov
mov
jno
cmp
icebp
mov
or
or
pop
pusha
fsubrl
cwtl
dec
mov
idivl
in
cli
test
insl
sti
pop
pushf
aam
cmp
or
jge
push
ret
imul
sarb
mov
cmp
push
test
xlat
mov
cmpsb
cli
xchg
setp
test
push
push
bound
std
add
loop
jle
push
jnp
mov
pop
jle
mov
inc
lret
push
movsb
xchg
incb
decb
clc
bound
enter
imul
mov
sub
icebp
add
fdivrl
lock
stos
shlb
cmp
sbb
push
xchg
aad
jbe
inc
inc
rcr
in
jnp
sbb
lods
xor
mov
cmpsb
or
in
pop
addr16
dec
mov
loopne
adc
jbe
fs
mov
pop
sbb
int3
cmp
out
lods
xchg
nop
inc
adc
rcrb
dec
call
adc
roll
mov
dec
inc
ja
int3
ret
mov
sti
pop
int3
daa
xor
sti
cld
iret
xlat
dec
cmc
add
out
cmp
dec
testl
mov
push
push
jle
inc
insl
sbbb
in
out
pop
inc
lds
ljmp
jne
and
pop
and
lahf
mov
pop
stos
bound
scas
movsb
repz
mov
sbb
es
xlat
divl
sbb
fldl
pushf
test
pop
xor
stc
cmp
sbb
add
sub
imul
fldl
mov
cmpsl
mov
jp
js
clc
lods
or
pop
testl
dec
shrl
pop
push
add
imul
cs
xchg
icebp
inc
xor
icebp
out
xchg
pop
mov
movsb
sbb
adc
xor
int3
xchg
push
lret
rolb
roll
fwait
insb
mov
xchg
mov
pop
testb
add
ja
pushw
clc
int3
in
mov
dec
dec
mov
insb
push
or
sti
adc
sbb
ret
xchg
dec
lahf
push
mov
hlt
pop
dec
dec
pop
arpl
mov
out
roll
dec
stos
xchg
dec
adc
lock
hlt
mov
psubb
cltd
stos
xchg
inc
fadds
loop
push
xchg
test
addr16
cli
cs
cmp
jg
rcr
aas
cmp
lcall
xor
jmp
jne
stos
jmp
inc
rcrl
gs
jmp
or
dec
clc
std
scas
cmp
adc
std
bound
cmp
push
jl
xor
xchg
stc
scas
imul
cmp
lahf
jno
sub
add
push
mov
aaa
jo
ret
ret
ss
xchg
jb
pop
arpl
mov
shrb
shr
adc
xor
adc
cmc
iret
mov
fistpl
jge
cmp
sti
mov
inc
shrl
in
lret
das
adc
fstpl
cmp
mov
lahf
call
mov
ja
push
mov
outsb
movsb
das
mov
or
fwait
cmpsl
xor
xchg
sub
js
sub
xor
leave
iret
push
pop
mov
out
or
movsb
inc
movsl
cli
mov
rol
mov
and
jl
int3
lea
in
and
xor
add
aas
inc
sbb
clc
movsl
or
in
lret
repz
test
jl
jb
test
push
fcom
popf
enter
out
xor
mov
mov
fidivl
inc
test
adc
rcrb
push
aaa
mov
jmp
mov
dec
cmp
xchg
loope
add
cmpsb
add
mov
fidivrs
out
popa
push
or
mov
sbb
xor
repz
pop
jne
sub
push
mov
sub
cmp
stc
pop
sub
cs
xor
pop
jmp
jp
rol
mov
sub
inc
sbb
xor
loopnew
pop
int3
daa
jb
sub
aad
pusha
pop
dec
out
mov
mov
pop
mov
mov
or
cmc
int
popf
xorl
jl
mov
pop
push
lods
xor
add
add
xor
mov
add
rdtsc
xor
lock
jge
cs
mov
out
pop
or
dec
mov
lret
insl
dec
aaa
dec
xor
out
mov
xchg
add
scas
push
cmp
push
xlat
idiv
inc
sub
xor
jle
mov
int
stc
aas
testl
mov
jge
push
test
cmpsl
leave
mov
scas
andl
jg
sbb
lds
flds
std
mov
fdivs
out
jecxz
cltd
and
sbb
test
in
sbb
sbb
push
outsb
jge
add
mov
fmul
jl
pop
fstp
shr
cld
add
cmp
sahf
sub
scas
inc
je
adcb
add
xchg
mov
fidivs
cmp
cli
add
sub
loopne
outsb
sbb
stc
push
aad
dec
out
xchg
lret
or
mov
shr
ss
fwait
stc
mov
pop
sub
les
ljmp
cmp
stos
inc
or
push
jno
jl
jge
aaa
and
jg
mov
push
rcr
xor
ds
out
test
cs
leave
negl
sub
insb
mov
daa
xor
and
shr
xor
or
lods
and
dec
addr16
dec
jns
sbb
xlat
adc
jnp
pop
or
cld
inc
mov
push
lret
enter
aaa
stos
xchg
inc
pop
jb
mov
in
sti
popa
sbb
stc
sub
aam
lcall
dec
pop
add
imul
xor
cmp
jnp
stos
xor
add
sbbl
xchg
rorb
sbb
fisttpl
cmp
out
xchg
dec
xor
aam
add
xor
shll
ret
clc
mov
and
enter
sbb
imul
adc
sahf
flds
test
inc
push
inc
mov
cmp
mov
iret
repnz
fwait
out
inc
jns
push
mov
pop
sub
mov
cwtl
dec
adc
adc
fs
inc
jl
pop
cmp
xor
xor
jg
adc
or
jmp
in
fsubl
cmp
mov
dec
faddl
dec
in
add
and
icebp
pop
test
jnp
test
or
jnp
inc
stos
cmc
xchg
inc
out
jp
inc
mov
adc
outsb
mov
add
xor
hlt
in
movsb
adc
or
add
add
ljmp
scas
icebp
aad
repz
cmp
sbbb
xor
mov
add
mov
pop
in
fwait
notl
sub
dec
mov
xchg
icebp
in
jne
ret
inc
jno
or
fdivs
ljmp
cmp
mov
cmp
xor
sbb
mov
sarb
fiadds
add
mov
outsl
outsl
mov
and
in
fimuls
cltd
out
lcall
out
cmp
insl
cmp
push
add
popf
mov
ss
js
adc
in
sub
dec
and
push
lret
stos
popf
mov
les
mov
pop
rorl
mov
mov
lds
aaa
ret
push
fmuls
sub
hlt
jne
xchg
fcoms
loop
ljmp
xor
push
icebp
cmc
xchg
stc
shrl
sbb
sub
adc
xchg
mov
add
or
mov
stc
sbb
xchg
xchg
cmp
pop
mov
adc
loopne
jno
in
scas
cmp
xchg
addr16
mov
add
loope
ljmp
std
movsl
cli
lcall
stos
pop
lods
hlt
aaa
fsubl
xor
repnz
lea
cli
dec
das
popa
sub
pop
mov
add
nopl
sub
lods
popf
mov
scas
add
adc
out
lea
popf
xchg
mov
mov
cmp
mov
pop
ror
add
psubsb
mov
mov
outsl
popf
xchg
popa
xchg
push
cmp
les
adc
enter
add
mov
jnp
mov
not
notl
push
ja
cltd
stos
clc
cmpsb
mov
push
imul
xchg
in
dec
sub
mov
inc
xor
pop
cmp
adc
pusha
inc
sahf
shlb
push
test
jno
stos
lret
insb
or
mov
aas
xchg
movd
dec
pusha
das
pop
mov
and
rcll
stos
xchg
mulb
adc
jae
xor
xchg
dec
les
mov
popf
jp
sahf
jb
nop
inc
in
push
mov
scas
pop
mov
cmp
sti
cmp
or
movsb
jne
mov
cmpsb
std
mov
les
sbb
addr16
lret
pop
sub
fistps
dec
jo
andb
mov
pop
xor
inc
cmp
test
mov
fsubs
ficomps
scas
jbe
insb
mov
cmpl
cmp
pop
cmpsb
push
inc
dec
add
push
loope
xor
lea
pop
pop
sbb
jp
sbb
jne
js
push
addb
sbb
aam
mov
std
es
push
fsubrs
lods
popa
cmpsl
int
ret
mov
sbb
sub
ljmp
cwtl
jns
or
sbb
cwtl
mov
mov
mov
cmp
sti
fmull
in
stos
popa
ja
sbb
or
or
mov
dec
push
sarb
xchg
and
stos
push
aam
mov
jecxz
cltd
cltd
push
movsl
shlb
lret
mov
insl
int
cwtl
push
cmp
xlat
mov
out
shlb
inc
or
and
into
ret
shrb
inc
imul
mov
enter
or
hlt
fs
mov
roll
mov
mov
dec
rcll
push
sbb
push
das
sarl
arpl
mov
jns
sti
repz
cmpsl
popf
xor
clc
clc
sahf
pushf
sbb
pop
in
sub
aam
mul
sub
movsb
xlat
rclb
je
out
jns
mov
pop
cmpsl
add
push
xchg
xchg
scas
lds
sub
fists
mov
out
mov
add
leave
cmp
leave
xor
and
clc
push
repz
push
sbb
pusha
ret
dec
inc
cmc
add
dec
int
jne
sbb
fwait
movsb
fwait
sbb
mov
clc
jecxz
lock
inc
jg
out
mov
mov
adc
addl
scas
test
jecxz
inc
mov
dec
lock
and
adc
dec
sbb
arpl
inc
push
adc
dec
hlt
negl
jbe
orb
inc
mov
stos
aas
mov
xchg
pop
adc
cmp
add
dec
aas
xchg
int3
add
pop
xor
jmp
hlt
and
and
jne
les
ret
xchg
out
rcrl
insb
outsb
adc
fadd
or
sub
cmp
jns
pop
jmp
push
jb
xchg
aam
xor
dec
sub
dec
push
fwait
test
sbb
xchg
aad
cli
pop
jle
pop
xchg
stos
imulb
push
or
xchg
pop
btr
or
sbb
rolb
shl
hlt
pop
fs
cli
sbb
mov
stos
stos
xor
das
xchg
scas
sahf
aaa
or
push
pop
or
arpl
dec
xchg
xchg
add
dec
js
mov
mov
push
push
jb
pop
jp
fidivrs
out
xor
xor
test
jmp
nop
or
mov
aas
sbb
scas
add
push
je
mov
adc
fdivs
popf
iret
callw
stos
in
lret
pop
mov
pop
push
add
bound
inc
sti
pushf
sbb
cmp
or
test
mov
jno
sub
idivb
dec
addr16
stos
ljmp
pop
testl
fistpl
insl
jmp
mov
out
cmpsl
popa
jns
and
pop
xor
mov
mov
movsb
mov
in
mov
push
jnp
or
daa
data16
mov
or
out
cmp
or
je
jg
mov
stos
dec
pop
sbb
scas
scas
lods
jno
sti
jne
push
ljmp
jg
arpl
cmc
gs
loop
mov
rolb
negl
jp
or
imul
dec
xchg
lods
dec
addl
mov
mov
movsl
jns
xlat
cwtl
push
add
loop
xor
dec
iret
mov
sub
dec
xor
shll
push
and
mov
cmp
push
jmp
pop
jp
call
outsl
xchg
mov
loopne
adcb
inc
jecxz
enter
sub
cmp
in
mov
mov
xor
push
movsb
mov
iret
jp
filds
inc
mov
sbb
xlat
dec
xor
sbb
cmp
xchg
jle
xchg
ljmp
out
push
mov
sbb
int
adc
fimuls
daa
mov
inc
xchg
outsl
call
sub
jo
and
or
jns
mov
jnp
out
adc
push
lret
mov
inc
xor
dec
sub
push
jae
ret
sbb
mov
xchg
shlb
pop
repz
xchg
mov
dec
fs
or
outsl
push
aam
lods
dec
sarb
gs
aaa
cmp
xor
repz
and
jae
rol
cmp
adc
ret
dec
adc
rorl
repz
inc
jno
mov
mov
ret
adc
push
mov
es
mov
jl
ss
push
in
pop
sub
sar
sub
mov
mov
push
cmp
mov
pop
push
mov
xchg
loop
nop
xchg
cltd
lcall
in
in
xor
jle
outsb
adc
testb
pushf
xchg
sti
fnsave
dec
imul
cmp
pop
mov
imul
push
pop
fisttpl
mov
pop
inc
cs
xchg
ret
fcoms
call
sbbb
xchg
inc
addr16
call
jmp
add
inc
dec
enter
mov
mov
push
ret
nop
mov
xchg
xchg
out
test
shr
and
fwait
push
movsb
pop
lcall
dec
push
imul
push
jns
ficompl
mov
xchg
call
pop
sti
push
popa
enter
int
enter
sbb
popf
jb
dec
push
cs
out
mov
or
fisttpl
jg
inc
ljmp
fsqrt
lock
push
sti
aas
xor
ljmp
add
insl
lcall
call
int
cld
movsl
hlt
pop
fsubrs
je
cld
enter
sbb
jae
xor
out
into
mov
mov
jge
jg
test
rorl
enter
in
lods
je
dec
and
pop
push
inc
sub
sbb
jecxz
in
inc
mov
imulb
add
and
rclb
cmp
cmp
xchg
js
int3
sar
mov
popa
xchg
mov
jno
and
push
mov
ret
add
sti
xlat
pop
cmpsb
jne
pop
cli
ja
gs
and
cmp
inc
push
jge
arpl
jg
fdivrl
add
inc
lret
xor
jno
sbb
into
mov
lock
sbb
xchg
xorb
int3
ret
xor
sarb
inc
inc
push
jns
adc
pushf
and
lcall
clc
inc
stc
pop
hlt
enter
stos
dec
xchg
test
push
hlt
mov
cmp
sub
sbb
fstpl
ficoml
mov
hlt
int
aaa
push
aad
xchg
test
cmpl
or
into
dec
or
mov
push
fnstcw
lahf
fsts
aas
mov
mov
loopne
mov
popa
push
and
mov
fucomp
stos
inc
pop
pop
mov
out
jl
pop
sub
xor
cmp
sub
adc
cs
dec
es
stc
movsl
es
out
data16
sub
xor
or
dec
mov
out
dec
cmpb
adc
and
mov
sahf
clc
mov
or
pop
cmc
sbb
leave
mov
pop
in
jns
movsl
push
test
enter
test
and
lods
mov
imull
sbb
cli
cwtl
mov
test
shlb
xchg
daa
out
lret
jle
add
mov
clc
adc
insl
aam
push
movsb
push
mov
cmp
adc
repz
push
sbb
sub
sub
jecxz
xchg
enter
test
or
mov
mov
pop
fdiv
mov
in
push
in
xchg
icebp
dec
ja
lcall
int3
shlb
pusha
out
xchg
ss
cmpsb
xorl
jge
jno
or
cli
cmp
mov
outsl
add
fdivrs
dec
sub
into
mov
xchg
hlt
arpl
xchg
mov
pop
dec
test
cmp
jp
in
jmp
pop
jl
andl
xchg
mov
arpl
push
xchg
xor
lret
fistpll
adc
outsb
xor
jne
jecxz
int3
jno
push
adc
inc
ficomps
dec
inc
dec
xor
aad
mov
arpl
pusha
aaa
jbe
scas
add
inc
xchg
icebp
adc
out
jae
sbb
loopne
mov
rolb
mov
adc
test
sub
jne
push
mov
imul
push
push
insl
testb
fwait
rcrb
lret
inc
mov
fsubs
dec
xchg
jl
rolb
out
movsb
lock
iret
xchg
cmp
ret
and
pop
fmulp
pop
repz
hlt
shl
ficompl
insl
lret
rol
gs
adc
push
lea
xor
lds
or
sbb
push
ss
sub
addb
mov
inc
loop
or
imul
xor
add
adc
cmp
push
popaw
mov
push
mov
fstl
pusha
mov
addr16
inc
leave
ja
dec
lds
and
lock
dec
pop
shll
popf
cmp
lods
push
sbb
sub
data16
pushf
mov
shlb
pop
mov
cli
addr16
orl
dec
rcrb
jae
mov
in
loope
fidivs
inc
sub
shl
mov
pop
mov
and
movsb
leave
mov
loop
push
iret
sub
jbe
pushf
xor
mov
dec
jnp
or
push
cmp
aaa
ret
xlat
fsubrp
sbb
xchg
clc
push
and
mov
lahf
shr
inc
sub
fwait
stos
int3
xchg
push
and
mov
push
lea
lcall
je
mov
xchg
inc
push
repnz
lret
test
pop
inc
scas
movsb
sub
in
mov
adc
daa
out
jecxz
push
fcompl
jbe
pusha
mov
ja
cmp
enter
push
out
enter
pop
insl
mov
inc
pop
or
xchg
pop
and
mov
cltd
jns
mov
data16
sarl
stos
fdivl
lods
or
push
les
in
jno
sub
out
data16
stos
adc
xchg
xor
mov
loopne
inc
sub
popf
xchg
lahf
aam
cmpsl
mov
add
mov
movsb
ficomps
lahf
aas
or
xchg
push
loope
fldcw
mov
lahf
test
sub
movsb
rorb
pop
mov
insb
push
push
ret
shrb
out
fldcw
or
and
cmp
outsb
mov
in
mov
sub
fldl
cmp
push
mov
mov
mov
dec
jge
xchg
push
dec
cmp
cmpsl
leave
jge
sbb
fdivl
add
dec
sahf
jle
and
jno
and
mov
in
mov
cmc
enter
or
mov
loopne
aad
mov
das
lea
mov
call
pushf
cmp
xchg
adc
lret
mov
insb
in
xlat
push
ret
push
call
lea
sub
test
cwtl
mov
pusha
adc
shl
arpl
and
pop
push
rcll
popl
hlt
cmpsb
mov
jnp
push
cli
inc
pop
add
icebp
or
adc
in
fs
fnstenv
mov
nop
dec
jp
call
cmp
xchg
shr
shr
push
addl
shll
xchg
cltd
xchg
les
pop
sub
cmpsl
mov
mov
ffree
sbb
sahf
decl
mov
lret
push
sahf
sub
jg
lea
std
dec
dec
cmpsl
jne
rol
lcall
cmpsl
mov
adc
push
in
push
test
mov
or
movsl
mov
sbb
push
fdivs
mov
mov
push
sub
jbe
xchg
cmp
jnp
push
ja
sahf
sti
nop
std
inc
jo
insb
push
stos
sub
xchg
fnstenv
push
xor
dec
cmp
adc
fwait
pop
lahf
mov
mov
push
inc
xchg
bswap
aam
into
das
das
sbb
lret
mov
sti
jle
pop
hlt
jecxz
mov
jae
jne,pt
cmp
jno
sbb
popf
dec
xchg
jge
into
aaa
stc
jecxz
cmpsl
push
fldcw
mov
pusha
fstl
out
nop
dec
outsl
fldcw
sbb
push
nop
mov
sub
test
jmp
sbb
xor
inc
insl
xchg
cmp
call
sbb
mov
push
pop
rolb
aam
sub
idivb
fwait
xchg
fdiv
push
movsb
lret
idivl
jns
inc
xchg
cmp
adc
push
lea
cltd
xchg
jb
and
jno
pusha
aas
xchg
jl
fldcw
jo
adc
jb
xchg
mov
sub
pop
sti
mov
leave
inc
adc
jg
mov
sbb
out
dec
test
pop
mov
dec
rorb
push
test
lcall
and
ret
jle
add
or
pop
adc
inc
psubw
sbb
out
arpl
in
leave
inc
call
out
jne
lcall
imul
sbb
add
and
testl
sbb
add
daa
lcall
std
and
xor
enter
or
insb
mov
push
pop
sub
aaa
outsb
fwait
stos
stc
fsubr
in
cmp
mov
jbe
and
mov
cmc
repnz
cld
popf
movsb
lret
cmp
sbb
xor
cmpsl
sbb
adc
inc
jnp
cmpsb
cwtl
in
xchg
jecxz
int
into
mov
or
adc
fldenv
jl
rcrb
insl
xchg
xor
adc
repnz
mov
ret
or
es
in
jp
insb
pop
cwtl
dec
scas
sub
dec
scas
scas
cld
adc
arpl
cmp
jp
mov
dec
fbld
xchg
scas
jne
dec
mov
and
mov
xor
ljmp
das
fsubrl
scas
dec
fldcw
jbe
test
sbb
rcrb
cwtl
jp
push
test
jp
sti
sub
iret
mov
push
add
sbb
add
push
loope
jge
mov
add
mov
stc
lods
js
inc
test
test
adc
ljmp
jmp
dec
and
test
cltd
pop
sti
xchg
test
sub
cmc
or
pop
mov
fisttps
dec
and
scas
shlb
mov
add
xchg
call
jbe
leave
leave
pop
jge
pop
push
roll
and
xorb
dec
jb
push
outsb
cmpsb
stos
dec
cmp
popf
cltd
cmp
sbb
or
pop
xlat
fcomip
pop
inc
mov
pop
push
sub
icebp
xchg
or
test
pop
push
add
cmp
mov
je
sarl
insb
lods
mov
mov
xlat
dec
outsl
pop
and
lcall
xchg
into
call
xchg
insl
sahf
mov
dec
push
mov
and
xor
cltd
sub
push
dec
mov
lret
xor
cwtl
and
jns
insl
lret
imul
sub
push
gs
and
xchg
js
rclb
or
sub
in
fwait
mov
in
mov
inc
aam
test
pop
push
sub
cmp
das
fwait
cmc
fnstsw
xor
ret
lods
fldt
insb
pop
popf
loop
bound
and
dec
mov
adc
imul
faddl
pop
add
adc
mov
movsb
mov
mov
fsubrs
bound
pusha
ficomps
mov
adc
loopne
sub
push
mov
dec
or
xor
sti
pusha
lahf
icebp
pop
lret
mov
mov
xchg
je
pushf
mov
cld
ret
in
lahf
stos
sub
dec
test
xor
ret
and
leave
mov
dec
dec
lods
sub
sub
xchg
sub
test
add
cmp
sub
dec
shll
rcl
cltd
int3
mov
mov
add
cli
jmp
negb
mov
or
das
sub
cltd
adcb
mov
mov
pop
int3
adc
shll
push
loop
insl
inc
sbb
push
dec
mov
pop
test
int
je
and
xor
test
adc
mov
ljmp
xchg
arpl
stos
fdivrs
xchg
xor
sbb
mov
jle
decb
sbb
mov
cmp
push
ds
inc
test
orb
enter
dec
popf
ret
adc
lret
mov
leave
test
bound
xor
insb
push
lcall
movsb
sarl
test
sub
insb
ljmp
outsb
stos
aad
xorl
mov
pop
lret
mov
jo
mov
cmp
ljmp
out
js
leave
gs
push
mov
adc
lods
mov
iret
cmpsl
imul
xor
popf
andb
int3
mov
cwtl
test
data16
jns
sbb
adc
outsb
inc
xorb
daa
adcl
or
das
std
pop
push
ret
xchg
sbb
in
add
sub
cld
mov
hlt
inc
lods
fildll
sarb
movsb
ss
sub
insl
jmp
ret
mov
lret
jp
add
pop
stc
pop
jne
mov
push
dec
jae
sbb
pop
je
pop
push
mov
sbb
jmp
cmpsl
enter
mov
cmpsb
cmp
gs
sbb
mov
xchg
je
push
call
in
jne
es
in
pop
call
lods
nop
sbb
push
cmc
mov
in
jo
in
jecxz
das
inc
sahf
rep
icebp
hlt
lcall
stos
jle
sbb
sahf
sub
xor
sbb
lcall
or
dec
leave
mov
rcll
push
push
mov
test
ret
add
mov
outsb
aaa
addb
jns
into
jecxz
aad
cmpsl
push
dec
jne
mov
icebp
sub
inc
jo
cmp
in
das
cmp
test
lods
cli
mov
pop
mov
cs
fcomp
and
stos
pop
cmpsl
adc
sub
mov
ljmp
jmp
jno
xchg
sub
test
rolb
scas
stos
adc
adc
daa
dec
mov
orb
sbb
insb
out
call
stos
inc
lods
mov
imull
loopne
pop
dec
jle
daa
iret
add
test
pop
xchg
xor
test
mov
cli
xchg
adc
xor
in
insl
fdivs
cltd
shrb
or
in
inc
mov
dec
and
aaa
push
xchg
cs
int3
push
mov
out
or
fwait
or
push
mov
sbb
lock
loop
pusha
shll
fiadds
xor
xor
iret
fidivrl
mov
setbe
sbb
cmp
stos
loope
cwtl
mov
push
add
cwtl
sub
xchg
ds
sub
mov
enter
lods
inc
mov
add
es
dec
push
and
daa
out
fnstcw
fwait
mov
jp
and
iret
shll
gs
sub
fistps
aad
lds
push
jns
bound
clc
jnp
xchg
inc
mov
or
lock
incl
dec
inc
push
lds
pop
jae
scas
pop
mov
cld
clc
cli
fiaddl
xchg
pusha
sub
in
insl
jne
cmpsb
dec
sahf
addr16
cmp
and
movsb
test
dec
inc
daa
xchg
sub
mov
mov
std
and
loopne
arpl
andl
jmp
push
xchg
sbb
add
out
pusha
push
dec
jnp
add
inc
mov
and
cmp
pop
jecxz
test
mov
push
adc
mov
sbb
cmp
add
roll
out
inc
sub
stc
mov
adc
jecxz
stos
std
imul
repz
sbb
loopne
push
dec
push
pushl
xchg
inc
aad
sti
loopne
mov
call
fidivrs
insl
and
lcall
lds
cltd
shll
and
and
mov
fbld
mov
jbe
mov
sub
jmp
jge
cmp
mov
or
mov
pop
sbb
das
fnstenv
jle
and
loope
sbb
push
into
mov
xchg
pop
jno
dec
push
scas
frstor
jb
cmc
lea
jl
sub
mov
or
pop
loop
or
notb
add
pop
stos
inc
push
ror
or
aaa
lahf
dec
stos
lret
xchg
mov
js
mov
push
push
mov
inc
rcr
ljmp
and
dec
sbb
mov
sub
sub
in
adc
mov
adc
mov
pop
lds
into
or
addb
repz
mov
shlb
gs
mov
insb
imul
loopne
pusha
les
and
push
fcmovne
pop
mov
loop
dec
mov
mov
pop
sbbl
cmpsl
adc
dec
addb
pop
fisttpl
fcmovnb
in
dec
push
in
push
dec
fimuls
das
push
pop
lods
stos
cmovs
jl
mov
dec
std
xchg
cmpsl
mov
addr16
jb
outsl
jge
and
xchg
loopne
shrb
sub
ja
pop
push
jmp
popf
sarb
or
or
push
pushf
in
jle
push
mov
popa
test
andb
lock
push
inc
ss
insb
aam
push
mov
push
jmp
mov
pavgb
inc
or
rol
inc
out
mov
fwait
imul
notb
jecxz
xchg
cmp
test
mov
push
mov
cli
movsb
sbb
mov
or
xor
aam
dec
daa
insb
or
inc
aaa
in
ljmp
mov
xlat
leave
or
or
ss
lea
inc
fmuls
stc
jno
xchg
fstl
pop
pop
pop
jo
mov
scas
mov
push
adc
mov
mov
in
stc
push
pushf
lahf
jl
mov
jp
stc
xchg
shrb
popa
add
in
pop
into
jne
mov
and
push
scas
sub
pop
xchg
ljmp
inc
fcmovnbe
popf
ret
cmp
sbb
scas
mov
xlat
popl
aaa
mov
rcl
xchg
dec
jge
or
popf
adc
jne
incb
or
jmp
int3
insl
data16
daa
mov
std
call
mov
out
mov
andb
xchg
jae
jmp
jl
adc
inc
out
movsb
push
dec
imul
out
fmuls
pop
cs
add
aam
fcmovb
repnz
cmp
sbb
scas
mov
enter
js
fucomp
bound
enter
pop
std
mov
fdivr
cli
cmp
xorl
enter
sub
fists
mov
push
mov
lock
jns
test
fisubrl
fisttps
mov
nop
and
pop
fdivl
js
or
lcall
fimull
test
mov
out
jg
ds
cmc
jl
mov
lcall
loope
ss
mov
xchg
xor
adc
aam
paddq
inc
lods
repz
xlat
cmp
sti
outsb
fcomip
jo
nop
rcrl
add
rep
fwait
lret
xor
or
fistpll
int3
sbb
jmp
addl
mov
mov
mov
mov
xor
shr
sub
mov
cmp
lahf
jo
ret
mov
out
sahf
mov
shrl
mov
loope
nop
cmp
pop
roll
gs
xchg
or
mov
pop
loop
ret
mov
cmc
jecxz
push
ja
xor
int
mov
pushf
sbbl
adc
dec
adc
icebp
adc
es
dec
test
pusha
and
push
jo
dec
dec
jb
xchg
cmpsl
adc
repnz
lock
push
in
fldz
jne
mov
imul
in
inc
add
leave
lret
out
add
aaa
fldt
icebp
lods
jnp
into
cmc
shlb
shlb
movb
push
jg
cli
xlat
adc
cmp
mov
call
adc
lods
call
mov
mov
stos
mov
dec
outsb
add
mov
enter
xor
mov
sub
dec
cs
sbb
lcall
cs
into
or
xchg
and
iret
lcall
mov
jae
loopne
jp
xor
sbb
adc
lret
push
stos
adc
pushf
xor
or
ss
int3
xchg
bound
add
mov
dec
push
mov
mov
aaa
jb
xchg
fwait
pop
push
dec
sub
mov
adc
stos
push
mov
icebp
jo
add
cmp
scas
push
mov
pop
ret
push
int3
dec
dec
and
leave
je
jb
adc
cld
xor
xor
adc
nop
jae
push
scas
adc
data16
lret
pop
add
ret
mov
icebp
testb
push
test
leave
bound
sbb
mov
sbb
mov
loope
mov
les
pop
rclb
jb
in
aad
ret
mov
mov
jae
dec
cmpsb
jno
pop
insb
and
lock
fwait
xor
stc
scas
push
ret
in
outsl
out
mov
sub
dec
daa
mov
aas
out
mov
xchg
xor
test
movsl
popa
push
sti
inc
inc
jmp
mov
fdecstp
nop
push
jae
lods
sub
push
lret
sbb
hlt
sbb
movb
daa
cld
adc
stos
and
add
pushf
aad
movsb
outsb
iret
in
pop
add
adc
out
imul
jb
and
or
jp
outsb
out
dec
test
lcall
rsm
inc
into
dec
mov
clc
and
inc
sub
jbe
sarl
sub
ljmp
scas
mov
mov
sbb
lea
stos
sbb
and
in
stc
sahf
or
mov
mov
call
in
or
add
sbb
sbb
stos
and
pop
andb
inc
mov
xchg
sbb
push
mov
rcll
jb
leave
stos
outsl
inc
lcall
cltd
jnp
pop
mov
jno
call
sbb
jne
xor
cmpl
stc
aam
adc
mov
test
mov
or
sti
inc
mov
add
js
mov
or
ds
jl
push
popf
test
rclb
adc
dec
inc
pop
sbb
mov
mov
loop
mov
and
aas
iret
xchg
pop
imul
dec
push
pop
mov
mov
ret
adc
push
outsb
sub
test
js
imul
pop
mov
mov
ds
pushf
mov
out
add
xchg
pop
xchg
xor
test
lret
fs
icebp
pop
cmpsb
push
pop
mov
inc
outsb
xchg
or
jle
in
cmpsl
pop
adc
mov
mov
inc
mov
ret
mov
jge
pop
addr16
jo
cli
rcl
rcr
push
arpl
sub
and
in
cmp
sbb
frstor
inc
frstor
jno
adc
add
push
jmp
inc
loope
mov
out
adc
out
push
push
add
incl
cmp
rclb
adc
or
out
push
filds
push
test
pop
mov
inc
pusha
data16
and
cwtl
inc
cltd
inc
movaps
fbstp
nop
sbb
dec
jg
push
cli
lret
outsb
in
xchg
test
pop
xchg
leave
jb
js
fs
jp
fcoml
mov
sub
mov
pop
add
xchg
xchg
jne
nop
outsl
xor
aad
cmp
das
jo
fsubrl
shlb
rcr
fs
aas
dec
inc
jae
insb
sti
add
push
mov
inc
sub
inc
dec
adc
stos
inc
lods
movsb
lds
pop
or
enter
movsl
and
xchg
mov
outsb
fimull
mov
mov
and
or
pop
lock
mov
aam
cmc
push
push
popf
pop
and
or
mov
cli
leave
adc
sahf
mov
lea
xor
popf
xor
lret
jbe
cmp
jbe
insl
pushl
sub
jle
mov
sti
int
pop
adc
xchg
fwait
test
lock
mov
push
jo
gs
mov
pop
pop
call
push
pop
pop
adc
scas
fsave
jg
fidivl
ret
add
dec
cld
imul
lds
cld
adc
iret
imul
pop
dec
leave
cmc
loop
sahf
mov
and
push
push
inc
fimull
jp
dec
fcmove
and
jbe
mov
dec
in
pop
pop
aad
pop
loop
test
pop
cltd
enter
dec
lds
je
icebp
jmp
sub
sub
leave
or
out
aas
sahf
les
into
push
pop
xchg
and
int
sbb
cli
repz
ds
clc
sub
xor
dec
cld
sub
lahf
pop
sub
jb
test
or
loope
dec
cmp
push
scas
adc
cmp
fucomp
pop
dec
xor
pop
lds
std
xchg
mov
mov
int3
insb
push
aad
cltd
arpl
scas
int3
enter
jp
clc
inc
test
out
dec
add
sub
addr16
inc
adc
bound
mov
jns
xchg
fwait
lock
leave
rcrl
jo
test
pop
repnz
das
push
test
add
xor
sbbb
and
mov
adc
int3
scas
dec
mov
push
jae
incl
mov
push
aam
sti
lods
scas
mov
and
xor
enter
nop
je
fucom
nop
aad
mov
adc
repz
addr16
cmp
shufps
mov
lret
dec
rorl
sbb
jl
sbb
ja
div
fmul
arpl
push
jg
push
push
pop
rcrb
inc
dec
fdivp
cmp
xor
jno
cmp
add
test
and
or
das
push
mov
xchg
das
js
xchg
xchg
dec
jmp
iret
dec
xchg
lea
mov
cmovb
aaa
mov
sbb
cmc
mov
lret
std
dec
and
xor
xchg
nop
mov
dec
ficompl
outsb
out
out
shlb
and
rcll
js
notb
cmc
mov
mov
sub
push
mov
mov
and
cmp
popf
out
inc
add
cmp
insb
pop
dec
inc
in
sbb
inc
xchg
push
cmp
mov
stc
imul
fbld
inc
pop
sub
dec
lods
clc
push
out
stos
or
pop
xor
and
in
imul
inc
mov
mov
jb
stos
push
pop
loope
imul
mov
clc
cmpb
cwtl
shl
jle
mov
mov
cli
out
arpl
cmc
jmp
sahf
lods
daa
icebp
notb
test
dec
in
push
pusha
push
inc
or
sub
popl
iret
pop
jnp
adc
adcl
daa
or
fsubl
add
cmp
or
jo
fisttpl
repz
aaa
std
sub
lods
lcall
push
and
in
pop
lds
mov
mov
mov
fucomi
lods
cld
mov
sub
jmp
std
mov
adc
push
arpl
mov
fcmovb
scas
call
or
sbb
xchg
in
dec
ret
sbb
sbb
xchg
mov
xor
stos
addl
sahf
test
mov
inc
push
divl
out
iret
mov
addr16
sbb
arpl
mov
cmp
push
sbb
nop
mov
lret
mov
and
jo
sub
rolb
mov
or
movsb
std
out
cmp
cmpsl
lods
mov
xchg
pop
dec
in
dec
xchg
lcall
xor
or
or
lcall
push
imul
in
pop
jge
push
add
push
cli
and
and
cmp
inc
jne
int3
jle
cmp
jmp
dec
and
and
mov
ja
push
sub
mov
in
xor
xchg
into
mov
sbb
and
jge
push
sbb
xchg
inc
xchg
xchg
xchg
add
outsb
inc
jg
cmp
mov
cli
int3
fdivr
out
fidivrl
fxch
test
test
pop
test
jb
popa
pop
sti
popa
gs
lds
jg
jns
adc
inc
adc
scas
je
leave
out
out
cmc
xchg
call
cmpsl
dec
xlat
shrd
in
out
in
lret
std
pop
test
push
or
mov
jl
cmp
mov
out
popa
pop
addr16
dec
lret
cs
sub
sbb
add
dec
inc
pop
cmpl
mov
in
test
les
imul
jne
imul
or
sbb
push
jns
pop
shl
outsb
outsl
cmpsb
cmp
imul
push
jb
mov
pop
enter
cmpsb
mov
into
cli
jne
push
dec
push
andl
cmp
dec
mov
pop
pop
cmp
pusha
pop
aam
sbb
inc
stos
mov
loop
fs
or
adc
mov
cwtl
test
inc
inc
adcl
fadd
and
or
push
jmp
pop
inc
and
in
sbb
xor
mov
les
shr
mov
icebp
adc
cmp
cltd
cmp
mov
aam
jge
cmpsb
xor
aam
cmp
stos
jb
or
inc
rcrb
add
and
jns
aad
repz
imul
test
lock
pop
sub
add
imull
sub
xchg
insl
jge
sbb
cmp
jae
inc
int
jbe
jg
and
jl
inc
or
stc
cwtl
test
push
mov
mov
jb
cmp
and
jno
ss
test
pop
sbb
sbb
add
pop
loop
and
inc
cmp
push
push
sub
sahf
lret
sti
jno
out
fidivl
lock
mov
loope
mov
jecxz
mov
int3
repz
jne
mov
testl
fcompl
jg
inc
adc
mov
stc
mov
insl
cmp
jmp
pop
push
adc
xchg
cs
mov
pop
rolb
jmp
icebp
into
inc
push
cmp
pusha
aas
test
mov
stos
sti
hlt
jb
push
fldcw
ja
or
pop
pop
fstpl
imul
cmc
scas
ficoml
dec
fsubl
cltd
cmp
cmpsb
push
xchg
adc
stc
fldt
stc
shll
fbld
leave
lret
mov
sub
call
icebp
ss
xor
loopne
stos
hlt
xorb
pop
mov
or
xlat
jns
xor
jecxz
fisubrs
outsb
rorb
aad
push
cmp
jecxz
stos
ficomps
jb
andl
daa
inc
jae
jl
jl
ljmp
pop
xchg
arpl
cmp
push
orl
cmpsb
or
jns
cmpsb
pop
xlat
sub
inc
lcall
mov
enter
std
scas
dec
pop
adc
lods
mov
push
sbb
arpl
mov
mov
add
pop
sbb
jns
mov
sub
fsubs
pop
testl
stos
sub
dec
test
loope
xor
addr16
sbb
xchg
outsl
add
add
