push
mov
sub
push
mov
push
test
jne
push
mov
call
push
lea
push
xor
inc
push
mov
push
mov
mov
call
mov
call
cmp
je
xor
jmp
push
push
push
push
push
mov
call
mov
mov
mov
mov
push
sub
mov
call
push
call
lea
push
push
push
push
call
push
pop
mov
mov
mov
push
mov
mov
push
lea
push
push
mov
call
cmpl
je
cmp
jne
mov
call
cmp
jne
lea
call
pushl
mov
pushl
pushl
push
call
mov
sub
mov
mov
add
push
mov
and
add
push
add
call
mov
mov
mov
mov
add
mov
add
movzwl
lea
add
mov
movzwl
lea
mov
mov
sub
xor
mov
mov
mov
cmp
je
mov
cmp
je
add
mov
mov
mov
jmp
mov
mov
mov
cmp
je
add
lea
mov
mov
mov
mov
add
push
push
push
call
or
sub
mov
mov
mov
sub
push
push
call
call
test
je
cmpl
je
mov
mov
call
movzwl
xor
xor
mov
cmp
jae
mov
mov
addl
push
pop
rep
mov
mov
mov
add
add
mov
mov
movzwl
inc
cmp
jb
mov
mov
mov
add
mov
pushl
mov
pushl
mov
mov
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
mov
mov
mov
mov
push
push
lea
mov
mov
mov
sub
not
sub
not
shr
add
push
mov
add
push
lea
push
mov
call
add
mov
mov
mov
mov
push
popl
sub
lods
xor
stos
sub
sub
rorl
sub
dec
jne
mov
mov
neg
add
add
sub
add
mov
imul
add
mov
imul
add
mov
mov
mov
add
and
add
movl
mov
pushl
lea
push
push
mov
call
mov
add
xor
add
add
decl
mov
jne
addl
pop
pop
leave
ret
push
push
mov
mov
mov
mov
mov
mov
mov
cmpb
jne
cmpb
jne
pop
pop
ret
push
mov
mov
add
mov
sub
test
je
andl
push
lea
lea
cmpl
mov
je
push
mov
mov
add
push
mov
call
mov
andl
add
cmpl
mov
je
mov
mov
test
jns
and
jmp
lea
push
pushl
mov
call
incl
mov
mov
lea
cmpl
jne
mov
incl
mov
mov
imul
lea
lea
cmpl
jne
pop
pop
xor
inc
leave
ret
push
mov
push
mov
movzwl
movzwl
andl
add
je
push
mov
push
lea
testl
je
mov
mov
and
add
push
push
pushl
call
jmp
mov
mov
add
add
movzwl
movzwl
incl
add
add
cmp
jb
pop
pop
pop
pop
ret
mov
xor
cmp
je
inc
inc
cmpb
jne
ret
mov
add
mov
test
je
add
add
add
add
add
push
mov
push
lea
xor
cmp
jbe
add
inc
cmp
jb
mov
add
xor
cmp
jbe
add
inc
cmp
jb
pop
pop
xor
inc
ret
push
mov
push
push
andl
push
call
lea
mov
test
jbe
mov
mov
mov
and
rol
movzwl
dec
lea
mov
jne
testl
je
push
mov
and
or
add
mov
pop
mov
leave
ret
push
mov
sub
andl
lea
push
movb
mov
mov
mov
mov
rep
pop
push
push
rdtsc
mov
mov
test
jne
mov
jmp
mov
not
ror
not
movzbl
lea
cmpb
jne
push
pushl
movb
pushl
call
pushl
mov
call
push
pushl
mov
pushl
call
mov
mov
cmp
jne
movzbl
push
pushl
pushl
call
pushl
pushl
pushl
call
xor
pop
inc
pop
leave
ret
push
mov
mov
mov
sub
add
push
mov
test
jne
xor
jmp
mov
add
mov
push
mov
mov
mov
push
mov
add
add
add
mov
mov
test
jns
and
sub
cmp
jae
mov
jmp
xor
mov
cmp
jae
jmp
mov
mov
mov
mov
add
mov
call
cmp
je
incl
mov
cmp
jb
mov
mov
mov
cmp
je
movzwl
mov
add
test
je
mov
add
cmp
jae
cmp
jb
xor
cmpb
je
inc
cmpb
jne
push
lea
push
push
mov
call
add
lea
push
mov
movb
call
mov
test
jne
xor
jmp
lea
call
push
push
call
mov
mov
pop
pop
pop
leave
ret
push
xor
cmp
jbe
lea
push
mov
add
mov
add
inc
add
cmp
jb
pop
pop
ret
push
push
xor
push
mov
call
xor
push
mov
call
inc
pop
cmp
jb
mov
mov
call
dec
jne
push
mov
call
mov
cmp
jne
push
pushl
push
mov
call
jmp
cmp
je
cmp
jne
testl
je
cmp
je
push
push
push
xor
call
push
mov
jmp
push
push
push
push
push
mov
call
test
je
push
mov
call
pop
xor
pop
ret
push
mov
cmpl
push
push
jb
mov
mov
mov
pushl
popl
sub
lods
xor
stos
sub
sub
rorl
sub
dec
jne
pop
pop
pop
ret
push
push
mov
mov
push
pop
movzbl
xor
mov
inc
and
rol
imul
inc
mov
sub
mov
mov
not
mov
add
not
shl
imul
sub
imul
dec
decl
mov
jne
pop
mov
pop
ret
xor
mov
add
add
stos
adc
add
xor
std
data16
dec
sbb
lods
or
repz
mov
xchg
xchg
mull
push
fcmove
mov
jmp
int3
push
mov
dec
js
jbe
movsb
xchg
lahf
nop
ret
jle
add
enter
cmp
sbb
loopne
cmp
cmp
loope
out
movsl
mov
ret
and
xchg
push
rorb
das
cli
cmp
pop
ja
aam
push
jecxz
ds
mov
cmp
mov
enter
xor
cli
lock
sbb
les
cmp
in
push
aad
sahf
cmc
fstpt
jle
cmp
sub
cli
cmpsl
loope
icebp
or
stos
out
fmuls
sub
sarb
into
enter
aam
xchg
cmp
cltd
xor
push
xlat
jg
push
sbb
mov
pop
test
mov
lahf
inc
jno
lret
je
push
mov
repz
jle
and
push
jmp
mov
or
xchg
push
push
cs
pavgw
out
shr
subl
jns
stos
mov
mov
adc
sbb
outsl
mov
pop
in
es
mov
out
adc
xchg
iret
sbb
mov
iret
xor
cs
out
jnp
outsb
xchg
rorl
stos
push
sbb
jmp
xchg
xorl
mov
jmp
and
cmp
push
push
inc
push
mov
das
mov
movsl
sub
mov
hlt
icebp
cmp
cmp
adcb
mov
mov
imul
xchg
loopne
lahf
cld
cmp
in
and
jge
mov
insl
push
fcoml
shrb
loope
push
add
push
icebp
or
sbb
out
cmp
ret
jb
ret
add
lods
inc
mov
cmc
cmp
movsl
leave
lret
add
insl
ret
cmpsb
dec
leave
into
divb
fimuls
mov
mov
pop
test
fsubs
cmpsb
and
or
adcb
and
popa
xchg
rol
stos
cmp
jnp,pn
loope
scas
jp
outsb
stc
fldt
mov
cmp
mov
pop
js
pop
mov
popa
mov
out
push
jne
iret
rclb
cmc
test
sub
xchg
popa
hlt
xchg
out
sti
adc
xchg
cld
jbe
jmp
pop
dec
sbb
cmc
jmp
dec
inc
test
js
movsb
mov
add
push
movsl
and
push
jp
in
jno
je
push
sub
xchg
fidivl
leave
popa
in
popf
nop
or
mov
pusha
adc
mov
mov
ret
fsubl
pop
pop
aaa
mov
imul
test
out
call
and
sbbb
mov
pop
leave
inc
xchg
inc
push
inc
cwtl
cli
mov
jp
lods
xchg
jbe
ds
test
cli
inc
jo
pusha
xchg
xchg
aad
lds
cmpsl
es
bound
jmp
jl
std
sahf
inc
jns
xor
mov
jbe
inc
inc
ljmp
mov
hlt
lock
pushf
cli
mov
rcrl
jno
xchg
enter
sub
pop
jae
hlt
and
outsl
cmp
loope
roll
nop
inc
adc
stos
ss
sti
jne
fldt
adc
cli
mov
xchg
loopne
insl
xchg
mov
mov
movsb
int
or
or
or
mov
mov
fsubrs
cmp
dec
mov
xor
push
cmc
xchg
repnz
add
add
je
imul
sbb
rorb
sub
add
out
add
dec
popf
mov
in
scas
pop
xchg
dec
fcos
subl
inc
adc
clc
add
rorb
and
adc
stos
dec
movsl
push
cmp
sahf
sub
faddp
push
mov
push
roll
movsl
push
push
rcrl
pop
fdivr
lods
and
popf
enter
loopne
fs
jne
jnp
sbb
add
add
sub
or
orb
push
and
in
outsb
ret
mov
jo
jae
hlt
sbbb
or
sbb
pop
je
test
jecxz
sub
mov
popa
dec
adc
dec
mov
inc
aad
jbe
das
mov
lods
sub
pusha
test
push
aas
lret
mov
imull
cmp
aam
fisttpll
outsl
aad
add
test
ret
aam
lods
clc
stos
int3
cld
mov
aaa
xchg
call
test
ret
int
cmp
imul
xchg
sub
les
jo
pushf
testl
loopne
xchg
pop
mov
scas
inc
cld
shll
fldenv
loope
int
aaa
not
xlat
filds
nop
je
push
xor
xchg
or
popf
aas
ja
js
in
cmp
jae
fisubrs
inc
fcompl
cwtl
jo
or
fwait
pop
jl
insb
xor
repz
outsl
add
rclb
insb
ret
adcb
roll
mov
in
jbe
imul
loop
inc
leave
out
cmp
data16
or
nop
push
adcl
mov
cmp
stos
pop
jle
repz
pop
lods
push
mov
rcrb
push
int
mov
pop
pop
pusha
xchg
sub
push
outsb
sti
dec
in
ret
pop
lock
rorl
xchg
jno
inc
mov
xor
adc
or
jae
xchg
mov
ret
into
sti
fidivl
loopne
mov
xchg
xor
adc
dec
inc
push
sahf
ret
mov
jns
sbbl
xchg
fsubl
sub
adc
pop
data16
out
pop
shl
rclb
xchg
hlt
fs
dec
insb
pop
mov
dec
insl
loop
lds
xor
jle
mov
sahf
pop
mov
fstpl
fmulp
out
mov
das
cmp
inc
mov
iret
adc
mov
lods
adc
cmp
int3
xor
out
mov
ja
fsubrp
sarl
test
aam
dec
mov
sub
or
scas
adc
xchg
pop
cmp
fwait
xor
int3
mov
mov
add
fisubrs
movsb
cmp
jne
jns
xor
xchg
jl
es
int
xchg
nop
daa
mov
stc
cmp
movb
xchg
xor
jg
xchg
test
sub
inc
add
out
mov
pop
cmp
jno
fdivr
jle
fdivrp
cmc
or
jge
pop
add
jbe
into
mov
std
jecxz
jb
dec
rclb
mov
and
pop
push
xchg
shll
mov
jns
push
popf
outsl
xchg
mov
push
xor
in
das
sub
loope
xor
xlat
js
subl
dec
fisubrl
jecxz
sbb
sbb
arpl
mov
div
xchg
cmp
sub
popf
and
jg
sub
je
movsl
xchg
out
ret
pop
adc
xor
sbb
test
mov
jp
mov
pop
xchg
xor
adc
add
js
cli
xchg
mov
imull
jnp
inc
push
popf
adc
mov
sahf
popa
inc
pop
add
loop
xchg
inc
inc
lods
push
loopne
and
mov
pop
ljmp
insb
int
xchg
sub
pop
xchg
int
icebp
mov
mov
out
jle
ja
lods
loope
int3
mov
jae
sub
cmp
xchg
cwtl
aas
outsl
push
push
and
jns
gs
sub
ja
and
test
xchg
and
sub
out
push
inc
mov
cmp
adc
xchg
sub
sbb
ss
mov
pop
in
fidivs
daa
push
dec
cmp
mov
idivb
int
adc
lret
fmull
cmp
jl
ja
mov
sub
popf
stos
or
xchg
adcb
mov
add
jg
in
sbb
sar
lods
sub
jp
fnstcw
hlt
lret
sbb
push
les
mov
xchg
lods
lret
lcall
sbb
xchg
int3
ss
cli
or
jo
xlat
inc
push
jge
rorl
adc
mov
gs
cmc
xor
mov
push
push
adc
dec
jecxz
pop
inc
push
leave
and
dec
aaa
out
dec
sbb
in
xor
fiadds
lret
stc
lods
rcll
enter
mov
ficoms
or
or
in
popa
xor
pushfw
and
pop
pop
xchg
dec
jo
sub
jb
xchg
out
js
mov
in
lock
ret
sbb
out
push
je
xorb
cmp
adc
aam
dec
outsb
pop
mov
test
and
sub
cmp
dec
ret
sbb
sub
das
stos
int3
or
movsl
daa
sub
mov
mov
in
fisubl
inc
add
pop
cld
and
pop
mov
btsl
xor
rcl
out
imul
or
push
jo
and
insb
shll
add
std
icebp
aas
push
test
fistpl
push
test
fldenv
pop
out
xor
sub
pusha
test
xchg
sbb
je
orl
pop
repnz
sub
pusha
call
cmp
movsl
hlt
in
rorb
sbb
xchg
dec
cmpsb
dec
or
scas
mov
outsl
es
sbb
and
lret
sbb
mov
inc
das
dec
out
stos
js
dec
call
imul
sub
mov
adc
stos
adc
mov
imul
inc
adc
lds
push
out
xchg
push
dec
xchg
arpl
add
cmp
lret
mov
xchg
or
ljmp
push
aaa
sahf
test
enter
push
test
inc
mov
pusha
or
jg
sahf
jle
sbb
aaa
cmp
daa
das
dec
pop
push
xchg
or
dec
sti
shll
shrl
jno
shll
jno
jge
jbe
loopne
cmpsb
rcr
or
fisubrl
mov
outsl
addb
loope
pop
loop
sbb
xor
movl
sahf
jecxz
pop
scas
aam
test
mov
ds
sbb
or
imul
xchg
xchg
xchg
or
in
in
push
stc
adc
mov
dec
enter
popa
sub
adc
xlat
xor
out
test
jl
lret
lds
lret
and
push
mov
push
dec
xchg
test
aas
rcrl
jo
lret
pushf
dec
jmp
mull
push
das
pop
or
pop
shr
int
shll
add
adcl
stos
inc
or
or
push
pop
add
or
mul
cmp
aam
dec
outsl
cli
into
icebp
xchg
loope
dec
jnp
jns
pop
scas
mov
add
in
aam
xor
mov
aam
in
aam
sbb
in
xchg
adc
jge,pt
scas
pop
fidivrs
icebp
and
fildll
in
aam
rorl
cs
inc
push
add
xor
pop
jl
imul
fdivrl
mov
fwait
sbb
sub
mov
imul
dec
je
xchg
mov
xor
push
pop
roll
aad
idivb
pushf
or
stos
push
addr16
ret
push
nop
insb
pop
pop
mov
out
in
push
dec
inc
cmp
cmp
nopl
pop
cmp
inc
testb
pop
loope
inc
xor
push
stos
aaa
mov
les
dec
pusha
xchg
orb
sahf
sbb
cmp
mov
leave
or
repnz
adc
pop
ss
lea
shlb
or
andb
fildl
xchg
js
jnp
push
and
mov
mov
scas
jns
pop
dec
dec
adc
mov
adc
pop
shl
xchg
dec
pop
cmpsb
scas
movsb
bound
imul
and
adc
lahf
lahf
repz
and
arpl
dec
pop
mov
pop
xchg
lret
sub
push
fcomip
push
push
sub
outsl
loope
out
or
ror
scas
paddd
cmc
cli
es
xchg
stos
and
sbb
xchg
mov
hlt
pop
jl
adc
add
sbbl
dec
test
rorb
and
imul
mov
pop
pusha
mov
popf
sbb
cmp
sub
in
sub
or
mov
adc
add
iret
lock
pop
adc
push
mov
mov
movsl
lret
and
cwtl
jge
or
mov
or
outsb
xlat
aad
and
pop
dec
sub
daa
dec
pop
insb
ret
cwtl
dec
cmp
lods
inc
loope
pop
cmp
out
pushf
push
bound
in
mov
lcall
leave
xchg
aad
inc
or
cmpsl
stc
push
bound
lock
xor
inc
pop
pop
rcll
add
rcrl
std
xlat
xchg
fisttpl
mov
mov
cmp
outsb
nop
js
cmp
in
xorb
fidivl
xchg
mov
dec
xchg
std
shll
sub
mov
sub
mov
popa
jb
popa
push
js
movsl
loop
ljmp
hlt
ja
loope
ja
sub
cs
fcmovne
ss
iret
adc
es
loopne
mov
pop
lret
sub
mov
push
xchg
test
adc
into
into
inc
movsb
mov
or
mov
push
pushl
mov
insl
out
jns
ja
xor
push
mov
mov
rcll
xor
pop
mov
jno
icebp
pushf
stos
jbe
dec
mov
movsl
pop
mov
jno
xchg
js
pop
rcll
or
fs
cmp
out
lret
fnstsw
sub
ljmp
pop
leave
pushf
pop
push
xchg
add
outsb
cli
sub
add
sub
jne
mov
jns
cmpsb
mov
imul
daa
add
or
stc
sub
mov
pusha
aas
ss
daa
lret
mov
insb
or
out
adc
mov
faddl
push
ljmp
or
fs
iret
jmp
mov
jmp
pop
cmc
daa
pop
jecxz
jge
xchg
add
lock
add
push
insb
sub
inc
lcall
loop
js
or
std
ss
xorb
mov
imul
test
xchg
ret
rcll
add
andl
jmp
arpl
add
cmp
lea
lret
add
shrb
push
dec
les
xor
adc
pop
xchg
roll
enter
dec
test
pop
test
ss
xorl
add
add
