movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
mov
sub
mov
add
mov
sub
mov
je
mov
test
je
push
mov
add
test
jbe
push
push
mov
sub
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
add
addl
decl
jne
mov
test
ja
pop
pop
pop
xor
inc
leave
ret
push
mov
sub
mov
push
mov
add
mov
mov
sub
mov
add
movzwl
lea
mov
movzwl
lea
mov
mov
mov
mov
xor
xor
cmp
jae
push
push
mov
mov
addl
push
pop
rep
mov
mov
add
add
mov
movzwl
inc
cmp
jb
pop
pop
mov
add
pop
mov
xor
inc
leave
ret
push
push
push
call
mov
mov
push
pushl
xor
mov
rep
call
test
je
push
call
xor
inc
pop
pop
ret
push
mov
mov
push
call
pop
cmp
jne
push
call
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
mov
pop
ret
push
mov
push
mov
push
push
mov
mov
add
mov
add
test
je
andl
mov
sub
add
mov
mov
mov
mov
add
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
push
call
mov
mov
add
lea
add
cmpl
je
mov
or
sub
mov
mov
sub
lea
add
mov
mov
mov
mov
add
push
push
push
call
mov
push
mov
call
xor
pop
inc
pop
leave
ret
push
mov
sub
mov
push
mov
rol
push
push
mov
mov
test
je
mov
mov
jmp
push
call
mov
mov
mov
push
push
push
push
xor
push
inc
push
add
call
mov
mov
push
call
mov
push
shl
push
add
incl
push
push
call
mov
push
mov
mov
call
pop
test
je
lea
push
push
pushl
call
mov
imul
add
imul
add
cmpl
je
cmpl
jne
lea
push
push
pushl
push
call
push
pushl
push
push
call
mov
lea
add
lea
add
mov
pushl
lea
mov
push
mov
and
call
pushl
mov
pushl
call
pushl
pushl
pushl
push
call
mov
push
call
test
je
pushl
mov
pushl
pushl
pushl
call
cmpl
mov
jne
push
call
test
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
push
mov
cmp
jb
xor
add
push
mov
je
push
mov
mov
mov
mov
mov
mov
add
rol
mov
xor
imul
xor
mov
sub
mov
inc
cmp
jb
pop
pop
pop
ret
mov
push
mov
push
call
mov
test
je
push
push
mov
lea
push
mov
push
lea
push
call
mov
push
mov
call
add
push
push
lea
push
call
pop
pop
mov
pop
pop
ret
mov
push
mov
pushl
call
push
call
pop
ret
jmp
push
mov
sub
push
mov
push
mov
mov
imul
cmp
jb
mov
imul
mov
mov
add
imul
push
push
xor
pop
div
mov
mov
mov
mov
mov
sub
mov
test
je
mov
sub
mov
mov
ror
xor
imul
add
mov
divl
mov
add
cmp
jae
mov
mov
imul
xor
divl
xor
mov
sub
imul
div
cmp
jae
mov
sub
test
jbe
mov
mov
sub
mov
mov
mov
mov
mov
inc
decl
jne
add
add
add
cmpl
jne
mov
pop
pop
pop
leave
ret
testl
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
ret
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
mov
push
mov
sub
push
lea
push
pushl
push
pop
call
test
mov
je
cmpl
jbe
mov
push
push
pushl
mov
pushl
push
call
pushl
push
pushl
push
call
pushl
push
pushl
push
call
mov
cltd
mov
idiv
push
push
pushl
push
call
push
push
pushl
push
call
add
push
push
pushl
push
call
mov
add
push
call
push
push
pushl
push
call
add
push
call
push
push
pushl
push
call
add
push
call
mov
push
push
pushl
push
call
push
push
pushl
push
call
push
push
pushl
push
call
push
push
pushl
push
call
add
push
push
pushl
push
call
pushl
push
pushl
push
call
add
cmpl
jbe
pushl
push
push
pushl
call
pushl
push
call
pop
pop
pop
pop
mov
pop
leave
ret
push
mov
push
push
andl
andl
push
push
push
push
push
call
mov
lea
push
pushl
lea
pushl
movb
push
pushl
movb
pushl
push
call
push
push
push
call
pop
leave
ret
mov
push
mov
push
mov
mov
push
push
mov
lea
push
push
push
call
test
jl
mov
mov
lea
push
pushl
push
call
test
jl
mov
mov
push
pushl
push
call
test
jge
andl
jmp
mov
pop
pop
pop
pop
ret
push
mov
mov
mov
add
mov
sub
test
jne
inc
jmp
andl
push
push
lea
lea
cmpl
push
mov
je
mov
jmp
mov
mov
add
xor
nop
movb
mov
mov
inc
cmp
jb
mov
test
je
lea
movsbw
mov
inc
inc
inc
mov
test
jne
lea
push
call
mov
test
je
mov
add
andl
cmpl
je
mov
mov
test
jns
and
jmp
mov
add
add
push
pushl
call
mov
mov
cmpl
je
incl
mov
lea
cmpl
jne
mov
incl
mov
imul
lea
lea
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
push
mov
sub
push
mov
push
test
je
mov
test
je
cmpl
je
mov
test
je
push
lea
push
lea
push
push
call
add
push
pop
pushl
lea
push
add
call
mov
test
jbe
mov
sub
mov
mov
inc
dec
jne
pushl
mov
pushl
mov
pushl
pushl
call
pushl
mov
push
call
mov
add
push
pushl
pushl
push
call
add
pop
jmp
xor
pop
pop
leave
ret
add
icebp
lods
aaa
xor
xchg
jae
negb
inc
mov
push
sti
cli
out
popf
aaa
imul
xorl
mov
cmpsl
jno
xchg
pushf
add
jnp
stos
sub
cwtl
sub
jo
and
or
sahf
rcr
adc
dec
mov
mov
mov
or
push
sti
cli
out
popf
aaa
imul
xorl
mov
mov
insb
push
pop
cmp
or
adc
ret
sbb
push
inc
or
pushf
add
into
into
shlb
dec
minps
subl
lods
and
mov
sti
mov
or
test
out
adc
push
out
inc
lods
adc
adc
int3
sarl
loop
movsb
mov
sti
cmp
jecxz
push
pop
in
and
movsl
bound
add
dec
cmp
sbbb
jb
adc
sarb
mov
scas
sbb
shr
jg
push
shll
sub
ret
mov
push
popa
push
cmp
adc
jecxz
sbb
jmp
test
pop
jl
sub
loope
lcall
out
mov
cmp
scas
ret
popf
jecxz
int
pop
pop
push
inc
pop
outsb
in
scas
jne
scas
leave
nop
mov
jmp
loop
stos
cmp
adc
addb
inc
subl
xchg
pop
pop
repnz
scas
sbb
mov
hlt
int
or
jbe
push
xchg
loope
rorb
push
fdivrs
sub
or
arpl
aad
ret
xlat
popf
fcompl
movsb
inc
stos
jecxz
xchg
or
jo
pop
aam
movswl
mov
es
and
mov
in
jl
dec
call
jno
push
aad
cwtl
mov
inc
lods
negl
push
inc
ret
scas
ret
int3
dec
xchg
mov
cmp
xchg
and
add
into
pshufw
add
add
jb
pop
push
or
push
test
jo
fidivs
iret
lret
push
out
lods
test
fnstcw
xchg
mov
jno
aas
jg
sbb
cmpsb
hlt
les
adc
cwtl
sub
sbb
out
xchg
in
out
das
imul
sti
mov
pop
rorl
test
lods
loopne
cmp
add
loope
jno
add
inc
call
pop
iret
popa
lret
mov
jg
inc
sub
or
lock
mov
mov
test
and
insl
vpsrld
cmc
out
sbb
jns
ficoms
leave
cmc
stos
xchg
dec
rolb
sti
pop
rol
lock
dec
lds
sbb
mov
aad
add
pop
push
cs
invd
inc
xor
xor
mov
in
cmp
lods
inc
sar
adc
mov
jle
add
add
pop
pop
test
push
int3
push
inc
adc
push
jmp
xor
xchg
adc
jns
adc
pushf
xlat
das
mov
mov
shll
inc
sbb
mov
jg
inc
ss
hlt
jbe
and
shll
pop
inc
inc
mov
mov
pop
jmp
xor
add
pushf
in
dec
ficoml
xor
mov
mov
inc
pop
or
inc
xchg
dec
js
push
sub
fisubl
ret
inc
aad
icebp
int
push
in
cmp
adc
enter
leave
call
mov
mov
inc
lea
mov
or
lcall
jae
dec
enter
mov
adc
lret
das
sub
add
das
fwait
cmp
xchg
rclb
stc
repz
mov
pop
xchg
sub
xchg
cmp
dec
out
fs
cmp
js
fistl
mov
jl
std
jle
sub
orl
cmp
loope
inc
out
adcb
out
mov
xchg
jo
pop
mov
sub
push
call
mov
jle
ror
mov
jle
int3
repz
add
out
pop
dec
push
popf
adc
dec
cmp
xchg
jne
jmp
das
insb
mov
pop
mov
testb
lds
pusha
out
rcrb
decl
push
cmpsl
ljmp
outsl
shr
xor
ss
ds
mov
jb
sbb
mov
xchg
sti
xchg
inc
cmpsl
jne,pn
fwait
jle
popf
push
pop
xor
push
scas
hlt
adc
adc
inc
orb
inc
mov
ret
sub
xor
inc
mov
out
mov
out
mov
jecxz
jecxz
cmc
pop
rep
pop
insl
fistpl
add
cmp
sbb
xchg
into
xchg
jno
cwtl
loop
mov
pop
push
and
out
fdivl
rol
push
xchg
push
out
xchg
into
lds
pop
ja
aad
int
ja
sar
shl
sbb
xchg
jecxz
leave
push
inc
sti
into
and
cmp
jg
push
and
cld
aas
pop
cmp
lret
aas
sahf
push
js
xorb
add
add
js
sbb
jo
fwait
pop
xor
mov
sbb
mov
inc
and
nop
xor
xor
xchg
loopne
xlat
cwtl
sbb
lods
loop
int
test
inc
sahf
std
mulb
pop
xchg
mov
pop
leave
mov
das
lods
add
nop
add
pop
lods
jae
or
cmpsl
xchg
add
pop
push
out
dec
pop
sbb
jmp
sbb
cmp
adc
push
sbb
iret
movsl
and
mov
stos
add
mov
movsb
push
ret
fcoml
cmp
xor
add
bound
push
push
movsl
sbb
dec
sub
pushf
rorl
or
stos
fistpll
push
push
int
pop
or
add
xor
mov
mov
mov
idivl
mov
ret
inc
ret
test
mov
addb
pop
or
cmp
ret
mov
ret
dec
insb
mov
adc
fmul
push
pop
shlb
loopne
xor
in
mov
int3
jmp
hlt
mov
mov
in
push
sub
and
addr16
adc
in
lods
add
lods
lds
inc
outsb
jne
into
sbb
xor
xor
dec
jecxz
movhps
push
clc
and
lock
pop
loopne
cmpsb
repnz
loope
mov
mov
test
inc
imul
and
addl
jb
push
and
jno
cld
sub
inc
and
cmc
hlt
loopne
add
test
mov
shll
shll
inc
das
movsb
daa
in
mov
loop
call
orl
cmp
mov
cmpsb
add
push
call
jecxz
das
je
push
mov
or
pop
mov
xor
sub
add
scas
push
jle
aam
ja
jnp
in
into
push
and
sbb
mov
ret
fnsave
add
add
shr
jge
ljmp
dec
fadds
bound
and
xor
cmp
lret
insb
pop
push
clc
ror
icebp
lock
pop
cmp
mov
divl
and
icebp
mov
jne
lock
sbb
fistpll
push
jb
add
dec
jmp
pop
mov
inc
lds
add
popfw
jmp
sbb
xchg
xchg
mov
sbb
inc
jno
mov
xor
enterw
push
mov
sub
sub
stos
add
xorb
pop
out
out
add
jg
mov
dec
xchg
push
pop
sub
popf
mov
or
mov
push
adc
adc
cli
mov
outsl
adc
add
add
test
and
or
js
pushf
in
inc
mov
dec
scas
mov
outsl
fnstsw
fidivrs
jge
mov
adc
dec
mov
pop
int3
lret
sbb
in
ljmp
push
lahf
xor
push
loope
lods
shll
fwait
mov
sbbb
jle
ret
aaa
in
jl
mov
call
and
jmp
xor
mov
es
cmpsl
call
sbb
jnp
movq
scas
mov
ljmp
pop
xchg
xchg
out
adc
sarb
push
andb
pop
stc
pop
xchg
jp
int3
fwait
call
popf
imul
push
imul
scas
jnp
mov
aas
sub
and
into
xchg
pop
jmp
cmp
js
mov
lcall
lds
add
mov
test
popf
add
add
add
cmpb
sbb
or
dec
pop
fs
lahf
push
aad
pop
add
lea
xchg
outsl
mov
es
push
sbbb
jne
mov
data16
in
sbb
stos
scas
stos
mov
add
mov
in
push
push
pop
loopne
insl
mov
movsb
ds
scas
movsl
dec
ja
pushf
icebp
test
stc
jl
cltd
loope
inc
cmp
push
shrl
mov
or
pop
adc
or
ljmp
test
mov
test
clc
jb
dec
add
dec
lods
add
fs
jecxz
mov
inc
aaa
divl
mov
test
jl
dec
leave
mov
pop
outsb
cmp
out
lret
push
mov
sub
xchg
test
aas
or
sbb
dec
shrb
mov
addr16
adc
leave
lcall
inc
popf
test
stos
push
das
test
mov
xchg
or
xchg
into
pop
icebp
es
nop
xor
js
mov
add
inc
lret
gs
inc
xchg
dec
mov
push
xor
sbb
incb
mov
testl
loop
cmpsl
pop
outsb
jne
jnp
into
cmpsb
mov
push
mov
dec
mov
rolb
add
pushl
cmc
jbe
sub
movsl
test
leave
pusha
or
add
lret
insb
inc
push
popf
out
and
popf
mov
add
int
ret
and
popa
arpl
sub
mov
add
mov
mov
add
mov
lahf
shlb
mov
stc
adc
out
and
adc
out
ret
add
lock
ljmp
xchg
xchg
xchg
sahf
jb
sahf
push
repz
xchg
dec
movsb
hlt
mov
sbb
cltd
cmp
add
inc
rcll
shlb
cmpsl
leave
repz
pop
cli
sbb
outsb
sub
enter
movsl
push
scas
mulb
cli
ret
sub
cwtl
cmpb
sub
xchg
lds
in
pusha
ja
add
add
xor
inc
cmpsb
mov
lock
dec
pop
notb
leave
negb
mov
rcr
adc
push
sbb
or
jl
cmpsl
and
mov
push
or
inc
add
adc
js
mov
or
loop
clc
push
or
dec
or
stos
stos
mov
repnz
icebp
int
aad
pop
stos
mov
mov
mov
scas
or
lret
or
iret
lods
mov
imull
fwait
dec
cltd
sub
into
popl
add
add
push
int3
lcall
sub
push
lret
inc
push
sub
pop
add
orb
cmpsl
cmp
fs
mov
xor
add
mov
ficoml
icebp
ja
pop
sub
and
cmpsb
sub
jae
sbb
movsb
mov
orb
jge
add
adc
cmc
xchg
lds
lahf
cmp
out
jb
nop
jne
xchg
das
add
shlb
cli
and
or
lock
pop
sbb
lcall
popa
ret
mov
mov
clc
push
sub
aas
sbbl
and
pop
aas
jbe
loope
inc
mov
jle
shlb
mov
cli
adc
mov
sahf
jo
iret
add
cmpsl
mov
sub
xchg
push
shlb
sti
pop
pop
cmp
mov
sub
adc
and
jmp
and
out
out
mov
add
jb
subl
pop
pop
cmp
and
test
add
xor
xchg
inc
lock
lret
mov
xchg
add
add
call
insb
cmp
inc
add
je
pop
out
aaa
push
fidivl
cmp
lock
cmc
xor
xchg
call
in
fcompl
pop
xchg
inc
xor
loope
xchg
dec
enter
repnz
movsb
push
inc
sub
or
jge
dec
mov
jge
add
add
test
fldcw
or
pushf
stos
lods
cltd
xorl
xor
sarl
push
les
mov
sbb
loopne
sub
js
lcall
pusha
das
repz
mov
mov
arpl
pop
test
jp
stos
adc
jmp
add
stos
mov
scas
cmc
and
inc
aad
pop
aaa
sub
cmp
pop
ja
sbb
in
push
jo
add
sub
cmp
add
shll
dec
pop
add
cmp
lahf
push
add
mov
cmpsl
adc
sbb
push
dec
addr16
stos
stos
loop
mov
adc
inc
movsl
sbb
das
jb
scas
inc
icebp
and
movsb
jg
inc
or
dec
or
outsb
push
mov
mov
cmpsl
iret
testb
sbb
cmp
rcll
and
add
shll
out
int
call
jmp
aaa
xor
loopne
lods
lcall
jo
addr16
mov
xor
add
enter
mov
lds
repz
add
add
orps
cmpsb
mov
jne
clc
sbb
ljmp
je
pop
mov
push
or
dec
adc
dec
nop
daa
dec
xchg
and
in
sarb
xchg
add
dec
orb
xor
ds
jg
arpl
lods
add
cmpsl
sub
ljmp
orl
bound
add
add
pop
enter
adc
or
arpl
pop
push
xor
xor
jo
sahf
and
cmp
xlat
xor
xor
lea
add
enter
loop
and
pushfw
mov
int3
pusha
inc
or
jb
xchg
cs
pop
movsb
inc
cmp
pop
push
notb
jl
aaa
push
ljmp
icebp
mov
fidivs
in
test
dec
xor
mov
lds
aaa
cli
lcall
add
jae
or
sub
shrd
in
inc
push
jl
cmpsb
pop
jg
jnp
mov
stos
test
jmp
test
xchg
jno
sub
jne
jmp
call
mov
push
aam
nop
dec
add
xor
sbb
icebp
xlat
mov
jbe
int3
sub
repnz
mov
inc
ss
mov
adc
xor
pop
popf
push
xor
pop
mov
fldenv
mov
xor
mov
mov
je
xlat
jecxz
mov
mov
mov
je
test
jle,pt
pop
sbb
lods
push
mov
and
xchg
fldt
pop
inc
sti
repz
inc
test
je
cmp
cmp
fsts
add
lcall
call
or
roll
and
mov
pop
outsb
and
es
sub
cwtl
es
test
cltd
and
and
scas
into
inc
lcall
movsl
add
int3
leave
mov
pushf
nop
int3
add
mov
and
push
jg
test
mov
popf
mov
adc
lahf
jmp
aas
adc
mov
lea
test
mov
xchg
mov
pop
jae
fdiv
add
jge
lahf
dec
movsl
aam
dec
or
and
cmp
sbb
jno
sbb
fisttpl
jae
and
jb,pt
add
cmp
jno
inc
push
stos
outsb
loop
fs
divb
jl
int3
jne
mov
xchg
mov
mulb
pop
shll
mov
xorb
int3
mov
sub
lret
mov
pop
shlb
dec
mov
or
jo
movsl
js
xchg
dec
pusha
subb
rolb
pop
mov
loope
xchg
cmp
stos
sbb
orw
cli
lods
add
roll
cmp
imul
jmp
xchg
dec
mov
lods
mov
int
xchg
add
ljmp
addb
pop
mov
inc
fnstenv
out
subb
aam
adc
mov
mov
adcb
xor
sar
subb
pusha
addr16
cmovae
sub
sub
pop
repz
sbb
repnz
pop
pop
mov
das
repnz
xchg
xlat
iret
push
push
add
add
add
std
loope
xchg
and
push
jmp
gs
cltd
pop
cmp
xchg
insb
jle
xor
mov
xor
push
les
cmp
inc
mov
sbb
pop
test
mov
mov
dec
sub
das
or
jo
add
and
pushf
mov
dec
inc
pop
pop
das
add
leave
add
add
adc
mov
pop
cmp
loopne
pop
lock
mov
xchg
mov
les
fwait
mov
cmpsb
push
repz
xchg
cmp
and
insb
mov
inc
loop
in
adc
in
sub
xchg
mov
pushf
push
dec
pushf
je
lret
push
jl
sub
shlb
into
add
aas
mov
int3
sub
lret
inc
xor
jle
push
les
das
test
xchg
push
or
cmp
jne
shrb
ss
out
fwait
dec
cmp
add
mov
add
or
jno
dec
mov
cmp
unpcklps
mov
mov
sti
dec
jmp
xchg
ficoms
repnz
mov
stc
mov
xor
xor
fistpl
xor
std
test
ret
push
ret
jl
sti
push
mov
outsl
push
adc
push
fsubs
stos
test
pushf
lahf
lds
pop
cmp
orl
pop
out
add
fs
into
push
inc
push
or
std
mov
mov
fiadds
push
ja
stc
test
adc
mov
andb
sti
lds
push
mov
imul
ljmp
scas
int
and
push
leave
push
in
arpl
xor
mov
mov
or
sub
callw
or
or
inc
mov
add
add
adc
jp
dec
xchg
sahf
fldl
dec
xor
xor
xchg
pop
popf
push
dec
sbb
jecxz
pop
xchg
cltd
add
pop
sbb
data16
sbb
push
xlat
fisubrs
ret
jmp
cs
jbe
mov
fimuls
repnz
mov
inc
sub
xor
xchg
adc
lret
jecxz
gs
jns
cs
scas
mov
imulb
jl
push
jg
imul
add
adc
enter
sahf
add
inc
push
mov
lcall
cmp
arpl
inc
imul
push
dec
pop
rorb
in
sbb
adc
leave
jle
push
push
mov
das
mov
ds
std
sub
jp
inc
std
mov
push
xor
ret
and
icebp
jp
xchg
mov
call
mov
fidivs
push
xchg
add
add
dec
std
mov
addl
ss
sub
icebp
mov
xor
push
inc
add
pop
test
pop
call
xchg
and
sub
shl
imul
lcall
or
shrb
jecxz
test
push
mov
ja
stos
xchg
ret
aaa
out
push
or
push
je
test
push
test
push
xchg
sbb
add
dec
mov
lret
push
jb
mov
nop
adc
sub
push
push
cmpsl
xchg
fs
mov
hlt
incl
fs
es
jae
test
sub
mov
insl
fidivrl
sub
loopne
pop
aam
sub
jbe
sub
addr16
aas
in
in
add
pop
xor
sbb
push
lahf
jg
lds
pop
dec
sub
scas
dec
icebp
imul
jle
mov
xchg
loope
mov
xlat
gs
in
cs
ja
xor
adc
cld
mov
ret
shll
fdivrs
mov
sahf
push
xor
pop
insl
mov
data16
mov
cmpsl
popa
imul
test
loopne
leave
fldt
mov
addr16
cmc
ds
jle
test
dec
sbb
loope
daa
sub
jg
inc
jmp
daa
cmpsl
lea
pusha
fstpt
cs
cwtl
je
in
dec
repz
cmp
enter
sub
mov
ljmp
pop
lahf
or
dec
xchg
lods
divl
aam
adc
jmp
ljmp
mulps
jg
cmp
or
popa
lahf
or
ficoml
push
imul
loopne
jae
mov
sub
inc
mov
pusha
clc
inc
mov
cmpl
push
aas
sbb
int
pop
dec
scas
ss
jae
xor
xchg
jne
and
sbb
ljmp
add
sahf
sub
jnp
dec
pop
jmp
frstor
je
out
nop
negb
push
cmpsb
cmp
divb
cld
js
lcall
mov
fsub
or
test
fisttps
sbb
mov
outsb
push
testl
inc
mov
sahf
aam
sub
add
and
pop
xchg
xor
push
repz
push
push
js
adc
mov
xchg
cltd
jle
fcoml
mov
aam
pusha
mov
test
lods
xor
push
sub
ljmp
pop
nop
and
mov
add
jecxz
cmpsb
add
loope
test
pop
negl
outsl
mov
add
xorl
arpl
fistpll
testl
add
pop
xlat
js
adc
jo
mov
lret
mov
insl
aas
mov
mov
pushf
lret
xor
cmp
insb
add
dec
push
and
in
lods
and
in
fcos
inc
or
das
pop
xor
cmpsl
jle
cmp
mov
push
cmp
sub
mov
cmpsb
js
sti
sbb
adc
adc
loopne
push
clc
mov
jno
inc
ret
in
inc
pop
mov
and
xchg
orb
mov
pop
lods
and
ds
cmp
mov
int
cmp
jo
or
pop
mov
scas
ja
in
push
dec
push
subl
je
push
popf
add
push
hlt
adc
rolb
test
pop
jl
mov
out
push
mov
dec
add
inc
call
jbe
nop
jo
les
fbstp
shl
pop
imul
ret
mov
push
lods
mov
pop
test
or
inc
fistpl
push
aam
ret
add
jnp
popf
shr
cmp
lahf
daa
xchg
push
outsl
pop
xor
lea
aas
nop
cwtl
mov
add
add
cmc
pop
subb
lds
cld
dec
imul
mov
hlt
and
aas
xor
jae
sbb
jbe
adc
jg
or
mov
dec
gs
das
xor
dec
mov
sub
cmp
popf
dec
ljmp
outsb
addr16
fimull
or
jp
mov
shrb
scas
mov
pop
cwtl
ss
xchg
test
mov
lahf
icebp
mov
rcr
and
pop
es
stos
adcl
sbb
mov
aas
jmp
lods
push
pop
std
mov
popa
stc
add
fmulp
adc
cwtl
sub
mov
jp
push
cmp
mov
and
pop
add
add
push
push
popf
pop
test
sbb
xchg
pop
xchg
sbb
add
repnz
cmpsl
cmp
push
dec
arpl
jp
push
dec
sbb
int3
dec
pop
push
fld
cmp
stos
insl
mov
lods
out
out
or
mov
lods
bound
mov
ficomps
or
pop
int3
add
and
inc
scas
xor
je
and
jp
cld
call
sub
je
adc
lock
sub
mov
dec
movsb
out
pushf
stos
in
and
sti
sti
scas
scas
pusha
out
andb
jmp
out
dec
scas
call
hlt
jno
inc
dec
pop
push
jno
movsl
push
iret
lods
fstl
sbb
lods
pop
xor
cmpsl
or
mov
xor
mov
push
jnp
pop
jp
nop
adc
rolb
mov
add
cs
mov
aas
xor
jno
call
and
pop
movsb
popl
jo
popf
pop
or
out
mov
sub
adc
mov
add
push
pop
jmp
outsb
int3
insb
push
insl
imul
adc
or
lahf
sbb
xor
xor
add
add
pop
xor
xor
inc
jle
jno
lods
jecxz
inc
icebp
xchg
call
xorb
pushf
sub
lds
clc
xorl
pusha
cli
jmp
mov
fwait
test
inc
xlat
xor
scas
out
test
shlb
jg
jo
xor
lahf
outsb
lea
cmp
ja
sub
push
fsubrs
enter
mov
push
sub
daa
call
mov
add
jge
ret
mov
adc
add
leave
loop
out
repz
insl
stos
mov
jge
sub
aaa
cltd
mov
add
pop
mov
mov
mov
int3
add
ljmp
xchg
iret
cmc
ljmp
sub
xor
mov
dec
shll
pushf
and
xchg
dec
int3
xchg
fcoms
movsl
in
dec
subl
ja
or
in
jb
fistpl
sub
mov
pop
aas
sbb
fimull
gs
cmp
movb
mov
push
mov
rorb
ret
je
lahf
ret
jg
sbb
insl
clc
aas
sub
cmp
jmp
xor
sub
xchg
adc
lea
shrb
add
add
dec
push
and
jecxz
gs
dec
sbb
inc
push
xchg
jne
mov
xchg
cltd
fldenv
jb
fisubrl
dec
or
movsl
aas
inc
int3
fcoml
testb
lods
dec
cmc
mov
sbb
push
dec
iret
mov
adc
mov
jle
shll
add
add
push
dec
cmp
lret
iret
pop
js
pop
xlat
push
cmpsl
daa
addr16
mov
stos
xchg
sbb
mov
jl
adc
bound
or
dec
shlb
mov
pop
sbb
push
xchg
push
and
adc
pop
mov
aas
cwtl
xchg
pop
test
mov
insl
lods
add
mov
cli
popf
add
icebp
nop
fldl
incl
add
aam
hlt
push
std
call
rcrl
inc
add
sbb
cmp
dec
addb
jge
jne
cs
aaa
sbb
sti
cs
mov
imulb
xchg
mov
xchg
and
out
fnstcw
movsl
cmc
xchg
psubd
inc
push
pusha
mov
pusha
popa
mov
les
push
imul
dec
push
mov
push
push
lock
or
and
aam
loop
adc
add
movsl
imul
jg
add
lods
jb
adc
mov
xlat
mov
fucomi
inc
int
mov
in
and
pop
ret
pop
movsb
add
stos
loopne
fbld
pusha
aaa
imul
adc
pop
jl
mov
push
or
mov
in
in
rclb
nop
jnp
fisttpll
cltd
inc
cmp
add
test
aam
scas
pop
sub
and
adc
jne
cli
add
push
out
mov
jmp
sub
pop
dec
rcrb
mov
inc
inc
das
popa
pop
daa
movsl
inc
mov
rclb
repz
repnz
repz
test
movsl
icebp
xlat
out
and
sbb
popa
ss
popf
push
adc
into
inc
or
mov
sbb
mov
xor
pop
les
shlb
add
add
cli
sub
inc
adc
mov
mov
jne
aas
xor
xchg
stc
fdivr
pop
and
inc
int3
jecxz
mov
or
out
push
aad
dec
sbb
add
fcmovne
pop
movsb
cld
lock
pop
xchg
jle
mov
aad
jge
dec
insb
les
cmp
cmp
bound
pop
cli
cwtl
and
jns
pop
repz
fisubrs
ja
mov
cli
js
sti
push
loopne
aad
push
pop
xor
xchg
mov
mov
mov
adc
out
adc
mov
mov
dec
pushf
xchg
in
cmc
jae
push
mov
dec
sbb
or
push
pop
insb
lods
out
mov
inc
rcrl
jle
fidivrs
in
ret
or
jg
jne
push
lahf
inc
add
add
mov
adc
mov
jecxz
cmp
xor
push
outsb
daa
jp
shlb
mov
or
and
mov
push
cmp
inc
mov
cld
xchg
shll
xchg
inc
insl
dec
pop
push
mov
scas
test
xor
movsl
pop
mov
xchg
mov
fcomp
fs
sbb
in
pusha
outsl
sbb
mov
push
add
bnd
mov
pop
outsl
clc
cwtl
mov
sbb
pop
clc
jl
inc
out
aam
sbb
sbb
rcrl
adc
sbb
add
jb
xlat
rcrb
sub
sbb
xchg
pop
mov
ds
ficoms
rorb
pop
mov
push
pusha
mov
hlt
sti
mov
push
out
cs
inc
sbb
inc
arpl
push
inc
mov
xchg
cli
es
xchg
adcb
cmp
je
pusha
mov
jl
mov
enter
mov
imul
daa
cltd
sub
je
jle
xchg
sbb
lahf
adcb
cld
add
call
pop
add
mov
adc
sahf
in
movsb
addr16
adc
sub
add
add
pop
rclb
stc
adc
cmpsl
add
push
sahf
lock
divb
push
imul
insb
xchg
arpl
loope
push
jle
icebp
fstps
cmp
scas
adc
test
add
xor
mov
add
in
and
xor
push
loopne
daa
leave
push
sti
int
popf
jno
xor
mov
insb
enter
lret
mov
sti
mov
lret
sarl
ficoms
pop
xchg
jbe
inc
hlt
in
inc
mov
pop
add
push
and
mov
daa
test
inc
notb
iret
mov
pop
mov
aaa
ret
push
loope
sahf
push
fdiv
push
or
cld
mov
mov
aam
push
dec
ja
inc
bound
scas
pop
lret
adc
fstp
or
out
test
aas
pop
stos
lods
xor
xchg
pop
jecxz
pop
inc
arpl
adc
daa
mov
push
ret
and
das
mov
fstpl
dec
rorb
sbb
outsl
ja
out
add
mov
fidivl
in
mov
push
sbb
sbb
jo
mov
out
or
call
stc
shrl
stos
cmp
daa
jns
fwait
test
lods
mov
andl
or
cltd
rcrb
dec
sub
sub
inc
nop
jl
adc
mov
js
std
imull
fiadds
pop
ret
test
add
add
sbb
popw
mov
pop
in
sub
outsb
mov
dec
out
sub
cwtl
loope
stos
cmp
jg
xchg
out
xchg
loope
xchg
xor
sahf
cmpsb
lds
hlt
cmpsl
xchg
mov
pusha
mov
dec
inc
subl
dec
pusha
pusha
lret
daa
mov
xorb
push
lods
popf
add
aam
sbb
or
nop
add
mov
inc
pop
mov
mov
add
inc
outsb
arpl
out
mov
testl
add
repz
les
outsl
jno
pop
hlt
and
mov
mov
enter
addb
or
and
bound
or
sbb
push
mov
pop
and
aad
shll
or
xor
mov
in
pusha
insl
and
mov
xchg
out
mov
inc
popa
insl
xor
or
loope
mov
addr16
inc
mov
add
mov
and
ror
mov
mulb
leave
lret
push
icebp
push
js
mov
sbb
add
xchg
mov
add
xchg
pop
stos
pop
leave
fs
nop
pusha
and
jge
orl
mov
mov
ss
xchg
cs
mov
xlat
jmp
ja
test
sahf
movl
add
add
cmp
mov
adc
xor
and
fwait
std
push
incl
xchg
insl
pavgb
mov
sbb
sbb
leave
mov
jne
mov
arpl
inc
xchg
and
adc
mov
xchg
mov
xchg
imul
or
sbb
sbb
mov
jle
or
divb
popa
fimuls
outsl
jae
stos
push
push
mov
enter
sbb
inc
cld
mov
pop
mov
or
shl
xchg
add
decb
aam
