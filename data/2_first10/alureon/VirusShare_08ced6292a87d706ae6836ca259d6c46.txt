mov
push
mov
sub
push
push
push
pushl
call
push
pop
xor
push
lea
rep
pop
lea
rep
push
pop
lea
rep
mov
xor
movl
mov
mov
movl
xor
mov
mov
movzwl
mov
lea
push
mov
call
cmp
mov
je
addl
inc
add
cmpl
jb
mov
mov
push
lea
pop
mov
lea
push
movl
movl
mov
mov
movl
call
mov
cmp
jge
push
push
push
push
push
push
call
call
xor
cmp
setg
pop
pop
pop
leave
ret
push
push
push
push
push
push
call
xor
cmp
jbe
pushl
call
inc
cmp
jb
xor
jmp
push
mov
sub
push
mov
mov
mov
mov
add
mov
test
jne
inc
jmp
andl
push
lea
mov
jmp
mov
add
xor
nop
movb
mov
mov
inc
cmp
jb
mov
test
je
lea
movsbw
mov
inc
inc
inc
mov
test
jne
lea
push
call
mov
test
je
mov
andl
add
cmpl
je
mov
mov
test
jns
and
jmp
add
add
push
pushl
call
mov
test
je
incl
mov
lea
cmpl
jne
incl
mov
mov
imul
lea
lea
cmpl
jne
xor
inc
pop
pop
leave
ret
xor
jmp
push
mov
sub
push
mov
push
test
je
mov
test
je
cmpl
je
mov
test
je
add
push
lea
push
push
call
add
pushl
lea
push
pop
add
call
mov
test
jbe
mov
sub
mov
mov
inc
dec
jne
push
pushl
mov
pushl
mov
pushl
pushl
call
pushl
mov
mov
call
mov
add
push
pushl
pushl
pushl
call
add
pop
jmp
xor
pop
pop
leave
ret
mov
mov
ret
push
mov
mov
imul
sub
cmp
jb
mov
push
call
mov
add
imul
push
xor
pop
div
mov
mov
mov
mov
sub
mov
test
je
mov
sub
push
mov
call
xor
divl
mov
add
cmp
jae
mov
mov
imul
xor
div
xor
mov
sub
imul
div
mov
cmp
jae
mov
sub
test
jbe
mov
mov
sub
mov
mov
mov
mov
mov
inc
decl
jne
add
add
add
cmpl
jne
pop
pop
leave
ret
push
mov
push
push
mov
push
pop
cmp
jb
lea
push
xor
mov
test
jbe
sub
push
mov
mov
mov
lea
lea
mov
ror
imul
xor
mov
mov
mov
mov
mov
mov
inc
inc
cmp
jb
pop
pop
pop
leave
ret
push
mov
sub
mov
push
mov
add
mov
mov
sub
mov
add
movzwl
lea
mov
movzwl
lea
mov
mov
mov
mov
xor
xor
cmp
jae
push
push
mov
mov
addl
push
pop
rep
mov
mov
add
add
mov
movzwl
inc
cmp
jb
pop
pop
mov
add
pop
mov
xor
inc
leave
ret
push
mov
push
push
andl
andl
push
push
push
push
push
call
mov
lea
push
pushl
lea
pushl
movb
push
pushl
movb
pushl
push
call
push
push
push
call
pop
leave
ret
mov
push
mov
mov
push
mov
cmp
je
push
call
mov
pop
pop
ret
mov
push
mov
sub
mov
mov
push
mov
mov
push
mov
mov
movl
lea
movsl
movsl
movsl
mov
mov
push
movsl
mov
push
lea
push
push
mov
call
mov
pop
pop
call
leave
ret
mov
push
mov
mov
pushl
mov
push
pushl
call
pop
ret
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
call
pop
test
je
push
push
call
pushl
pushl
pushl
call
mov
mov
push
call
dec
jne
pushl
pushl
pushl
call
mov
pop
jmp
xor
inc
pop
ret
jmp
testl
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
ret
push
mov
push
push
push
mov
mov
call
mov
mov
add
mov
add
test
je
andl
mov
sub
add
mov
mov
mov
mov
add
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
mov
add
lea
add
cmpl
je
or
sub
mov
mov
sub
lea
add
mov
mov
mov
mov
add
push
push
push
call
mov
push
mov
call
xor
pop
inc
pop
leave
ret
mov
mov
mov
rol
imul
add
mov
ret
push
mov
sub
push
push
push
push
xor
push
push
call
mov
mov
rol
mov
mov
cmp
je
mov
jmp
push
call
mov
mov
add
movl
mov
push
shl
add
incl
push
push
push
call
push
push
mov
push
mov
call
cmp
je
push
call
mov
push
push
call
mov
call
add
mov
cmp
je
cmpl
jne
push
push
push
call
push
push
push
call
lea
push
mov
push
pop
add
xor
div
push
pushl
pushl
call
push
pushl
push
pushl
call
mov
mov
lea
mov
lea
add
add
mov
pushl
mov
mov
call
pushl
mov
mov
call
pushl
mov
lea
mov
call
mov
add
lea
mov
pushl
and
pushl
push
push
call
mov
push
call
test
je
xor
pushl
mov
pushl
pushl
pushl
call
mov
cmp
jne
push
call
cmp
jne
push
push
pushl
call
push
call
pop
pop
pop
xor
pop
leave
ret
push
mov
sub
mov
add
mov
sub
mov
je
mov
test
je
push
mov
add
test
jbe
push
push
mov
sub
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
add
addl
decl
jne
mov
test
ja
pop
pop
pop
xor
inc
leave
ret
jmp
je
xor
stos
or
std
pop
loopne
xchg
adc
mov
and
inc
pop
cmpsb
popa
jnp
mov
aas
mov
ds
stos
push
mov
repz
jp
add
addr16
ljmp
and
pcmpgtd
jmp
repz
or
std
aas
iret
cltd
xchg
mov
rorb
inc
pop
cmpsb
popa
jnp
mov
and
mov
pop
or
and
mov
pop
or
push
jg
ljmp
iret
cmp
adc
xchg
sub
bnd
push
rol
adc
test
jb
xor
cs
mov
pop
xor
fsubrp
pop
xor
sub
mov
pop
push
div
fstpt
aam
sbbl
mov
jns
add
pusha
nop
and
insb
in
jae
push
add
in
jbe
or
pop
dec
testb
mov
push
xor
iret
cmpsb
cmp
dec
aam
jb
adc
cmpsl
adc
rorl
jno
lcall
or
insl
add
inc
xchg
js
xchg
add
push
xchg
push
push
jne
cmpsl
insb
ljmp
arpl
popa
and
jge
int3
popa
das
aad
xor
mov
mov
pushf
pop
jb
sar
out
add
add
out
cld
xchg
and
pop
jbe
sbb
movsl
sbb
cmp
sbb
adc
mov
cmc
mov
sub
inc
cmp
aam
jae
pop
ja
adc
mov
or
pop
push
and
mov
mov
mov
in
fwait
addr16
mov
mov
mov
es
jno
mov
ret
nop
xchg
in
nop
jecxz
mov
add
popf
adcl
sub
pop
sub
icebp
lret
jmp
outsl
imulb
int
movsl
in
repnz
bound
stos
sub
push
popa
cli
and
ss
cmp
xchg
cmp
xlat
arpl
popf
rcr
aam
mov
aam
xchg
jnp
or
xchg
stos
push
cmp
aas
sbb
inc
add
push
fwait
mov
pusha
ret
stos
push
movl
inc
negb
addl
push
add
mov
dec
push
xor
fwait
fwait
dec
mov
lds
lock
adc
test
scas
mov
sub
inc
movl
mov
pop
push
push
test
jnp
jle
ja
jbe
lret
fwait
pop
fcoml
add
lods
or
rorl
inc
push
pop
and
adc
dec
jno
sbb
sbb
scas
scas
insb
int
jmp
pop
dec
cld
in
fimull
adc
sbb
cmpsb
sbb
cmc
or
cltd
mov
loopne
mov
repnz
mov
ja
scas
and
push
push
adc
fwait
mov
or
and
js
or
insb
xchg
cmp
add
stos
les
mov
shll
scas
add
scas
or
repz
imul
mov
mov
ret
sti
jo
lods
xor
scas
dec
pop
adc
inc
pop
push
add
mov
icebp
fs
outsb
push
xchg
dec
ret
jb
mov
lcall
push
lcall
out
jge
in
andl
popa
push
dec
ret
in
jne
mulb
mov
addr16
fstps
in
add
add
jle
lret
inc
nop
adc
call
xchg
cmpsl
mov
adc
mov
mov
clc
mov
and
cld
xchg
mov
test
je
lahf
mov
add
jg
in
jo
or
sbb
dec
mov
mov
mov
int
mov
movsl
ds
test
repz
int
cmc
pushf
andl
fdivrs
xchg
imul
cmp
popa
lahf
in
mov
cmc
mov
mov
add
mov
jge
and
sbb
jecxz
cli
sahf
push
fnstenv
pop
xor
adc
scas
imul
jb
pop
and
adc
push
xorb
lods
push
repnz
aas
mov
inc
pop
out
cli
or
pushf
pop
jg
das
inc
bound
lret
ffreep
test
push
and
sbb
cs
xlat
leave
rcrl
add
pop
push
inc
adc
mov
stos
lds
mov
js
sbb
xor
and
cltd
dec
ds
bnd
shlb
push
out
int3
or
lcall
insl
and
xchg
xor
std
nop
jp
inc
mov
adc
lods
mov
es
add
fnstcw
add
scas
fs
hlt
jp
dec
push
sub
jl
ficoml
push
pop
data16
outsl
js
ficoms
add
add
add
sub
add
mov
lret
test
mov
loop
xchg
xorl
push
movsb
jge
xchg
push
sbb
jge
imul
call
dec
and
cli
loopne
shll
mov
sub
js
fsubrp
imul
jmp
stos
jo
mov
dec
stos
sbb
sub
pop
jp
lods
sbb
int3
aaa
mov
dec
jg
add
dec
nop
mov
inc
iret
sub
mov
add
repz
mov
jb
dec
sbb
subl
cmp
cmp
jmp
inc
adc
and
mov
or
cmpb
ret
cwtl
adc
mov
adc
cmpsb
and
dec
pop
mov
subl
bound
mov
nop
mov
out
mov
sub
lods
lcall
dec
out
mov
mov
add
inc
and
jbe
mov
lods
mov
sbb
pop
jno
arpl
es
bnd
sbb
push
sub
outsw
clc
leave
sub
repz
dec
je
cltd
xor
jns
push
sbb
cmpsl
pop
cmpsl
push
mov
test
inc
sbb
lea
add
loopne
bound
aad
ds
mov
push
fdivrs
std
mov
mov
in
xor
daa
sahf
test
fsub
outsb
dec
sub
loopne
test
imul
jb
and
pop
push
sub
mov
pop
stc
arpl
iret
dec
bnd
loopne
pop
pushf
cmp
test
mov
fs
scas
test
jns
push
std
xchg
test
aaa
popa
cmp
shr
movsb
or
jp
xor
insb
cmpsl
pop
push
add
add
add
lcall
lret
push
push
adc
mov
xchg
push
idivb
lcall
in
lret
inc
push
out
pop
das
mov
xchg
mov
nop
jo
mov
dec
push
adc
and
cmp
cmpl
xchg
mov
inc
out
dec
cmpsl
arpl
mov
adc
lock
mov
mov
mov
fidivrl
sub
inc
inc
push
fld
pop
pop
add
cltd
loope
clc
repz
mov
lods
mov
ret
add
add
cli
sarl
or
imul
daa
cmp
add
stos
popf
aad
cmpb
sbb
adc
or
cltd
mov
push
fstl
aam
or
test
movsl
xor
add
hlt
jae
lea
mov
cmp
add
sub
pop
mov
push
xor
les
ret
out
jp
sbb
sub
add
xor
pop
cmp
imul
add
aad
nop
xchg
mov
cs
fwait
jne
hlt
outsl
stos
lret
xchg
fwait
mov
in
aad
test
call
mov
mov
cmpl
bound
ja
es
push
push
icebp
fstl
lea
pop
outsb
out
lods
mov
xor
addr16
dec
divb
lret
dec
cmpsl
adc
jo
sahf
xor
test
cmp
mov
into
xor
xor
mov
inc
aaa
cmc
insl
or
add
add
pop
out
mov
and
fldcw
inc
les
scas
push
inc
cmc
lods
push
mov
pushf
cmpsl
in
int3
mov
andb
mov
ljmp
lret
push
xchg
shrb
data16
mov
sub
jg
loope
sbb
mov
mov
dec
jne
shl
lahf
cld
jmp
xor
lods
lods
cmp
mov
iret
stos
aam
test
scas
sbb
add
add
add
jg
fs
and
xor
xchg
xchg
cwtl
jno
pusha
repz
jnp
sub
xchg
popf
out
sti
clc
pop
test
mov
nop
and
in
loope
push
adc
cld
and
pop
adc
lock
or
mov
mov
rclb
in
fwait
xchg
mov
sbb
pop
xchg
sbbb
or
fimuls
add
add
add
add
jns
xchg
xlat
jle
addl
ja
ljmp
mov
fcmovbe
pop
cmpsl
mov
fstpt
sub
dec
fisubrs
fisubl
xchg
mov
js
mov
or
jb
arpl
std
movsl
dec
mov
andb
inc
jae
cmp
pop
int3
mov
lahf
lea
adc
dec
pop
test
xorl
andl
dec
adc
sub
mov
xor
pop
stos
dec
mov
push
aam
popa
mov
repz
icebp
stos
cld
jge
mov
sub
lret
sahf
inc
pusha
xlat
insl
push
outsl
cwtl
hlt
inc
and
pusha
aad
outsl
push
lret
fnsave
adc
faddl
pop
test
mov
adc
mov
lock
push
out
inc
stc
int
sbb
inc
push
imul
or
add
or
pop
jmp
xchg
dec
iret
movsl
cmp
jle
push
push
mov
inc
adc
xchg
sub
lea
aad
inc
lahf
rorb
icebp
hlt
lds
pop
aad
xchg
repz
dec
movl
arpl
or
push
int3
mov
add
into
repnz
sbb
pop
inc
ret
scas
sub
adc
ljmp
add
add
add
push
xchg
rclb
test
fwait
rolb
mov
jno
mov
arpl
lcall
and
xlat
mov
pop
out
mov
je
mov
jae
scas
push
fmull
mov
mov
stos
mov
stos
mov
ss
stc
jl
flds
ljmp
insl
xor
aam
popf
in
adc
fsts
mov
push
dec
sbb
scas
push
popa
adc
add
add
ret
or
loope
push
nop
dec
pop
test
incb
inc
pop
cmp
rcrl
aam
pop
andb
mov
adc
xchg
aad
stc
out
lods
mov
pop
push
popf
xchg
pop
int3
pop
and
and
pop
jecxz
xchg
mov
jne
inc
fsub
or
push
pop
mov
sub
pop
dec
lret
mov
cmp
and
enter
push
fcomi
out
and
sub
mov
xor
add
add
push
jno
mov
nop
loopne
insl
andb
jne
mov
test
loop
mov
in
add
ja
pop
add
cmp
add
jge
xchg
push
repz
and
pop
dec
and
shld
jmp
cwtl
xor
or
jecxz
push
adc
lea
push
pop
or
xchg
sarb
push
mov
leave
rcrl
add
fcoms
aad
pusha
imul
cmp
jg
pop
popa
ja
mov
popa
and
xor
mov
jecxz
popa
jnp
pop
int
cmc
sbbl
cltd
sub
xchg
mov
mov
dec
int
and
add
mov
pop
fxch
imul
pop
xor
inc
jg
mov
and
xchg
mov
aad
sahf
jmp
hlt
pop
sarl
mov
sbb
lcall
add
fsubs
xchg
leave
mov
push
iret
bound
xchg
xchg
jecxz
lret
in
add
sbb
ja
xor
outsl
cmp
insb
es
xchg
into
mov
lods
cwtl
mov
pop
cmp
gs
ror
mov
mov
add
xlat
xchg
lcall
out
and
inc
dec
push
jp
or
iret
mov
inc
ss
mov
aas
mov
jns
outsl
add
add
frstpm(287
and
mov
or
pop
add
push
jle
ret
sti
adc
cli
outsl
js
lods
in
cwtl
hlt
push
subl
rcrl
or
fmull
dec
movb
and
xor
mov
inc
repnz
push
pop
stc
lea
daa
mov
pop
jg
mov
ret
xchg
movsl
jns
mov
adc
and
cwtl
lcall
cmp
add
add
add
add
std
popa
xchg
int3
addr16
mov
rorl
xchg
loopne
leave
in
cmp
jp
cld
dec
adc
add
cmpsb
lods
shll
mov
jno
lods
mov
and
cmp
dec
in
push
loope
mov
dec
lds
in
shl
pop
out
push
xor
xchg
imul
cwtl
sbb
repz
mov
orl
int3
dec
mov
xor
imul
adc
dec
pushf
push
jns
out
lds
popf
imul
into
mov
xor
push
shlb
sub
xchg
dec
mov
adc
insb
lock
loop
add
sbb
mov
fisubl
enter
int
movsl
sub
sbb
cmp
mov
xor
sub
mov
jb
imull
pop
loope
in
inc
mov
and
in
sub
xchg
xor
xchg
jb
leave
cmc
lret
aas
mov
mov
arpl
sbb
and
mov
cmp
push
arpl
pop
in
push
or
xchg
mov
jo
int3
jl
shlb
mov
sub
cwtl
mov
out
mov
inc
popf
ud2
inc
pop
cmpsb
pop
movsl
hlt
sub
push
fstpl
sub
mov
ss
ja
mov
mov
inc
je
popa
dec
cs
inc
ljmp
add
add
add
imul
ffreep
lods
lret
pop
pop
fbstp
jl
cmc
jne
xchg
add
xor
in
clc
int
mov
mov
inc
push
xchg
mov
mov
sbb
lret
jae
mov
xchg
lcall
pop
push
repnz
jo
pop
jbe
outsl
push
mov
out
ret
push
pop
lahf
rorl
int3
fisubl
cmpsl
push
or
negb
jo
xchg
ja
aas
mov
je
add
movsl
cmp
outsb
xchg
cwtl
and
out
jb
push
adc
add
or
das
inc
hlt
mov
dec
jle
xlat
insb
mov
iret
fsubs
adc
xlat
mov
lret
jns
push
and
mov
test
ret
stos
mov
stos
sbb
aaa
scas
mov
scas
hlt
addl
movsb
add
mov
cli
pop
inc
mov
mov
mov
lods
mov
sahf
cld
cmp
dec
mov
inc
xchg
cmp
xchg
mov
orb
dec
lods
and
mov
mov
movsl
add
nop
sub
cltd
in
cmpl
insl
fcmovnbe
repz
roll
mov
dec
int
lahf
into
fisubrs
cwtl
or
jnp
scas
dec
push
xor
ror
cmp
jnp
repnz
add
scas
dec
mov
jnp
mov
sub
nop
movsl
cmp
bound
push
sub
cmpsl
add
clc
mov
and
adc
dec
dec
fwait
outsb
stos
push
enter
lcall
popf
test
mov
into
fnstenv
pop
mov
jecxz
pop
dec
cli
leave
add
js
inc
data16
jg
hlt
or
gs
cmpsb
in
loop
add
rcll
js
mov
jg
hlt
test
xlat
xchg
add
ret
xor
call
jbe
cmpsb
iret
fstps
mov
cmp
das
lds
stos
std
cld
mov
or
push
aam
int3
add
pushf
in
jo
dec
push
xchg
mov
cmp
xchg
push
push
inc
push
enter
and
and
pop
fstps
and
faddl
add
and
jle
lods
xchg
iret
repnz
dec
inc
sbb
mov
jns
shl
or
test
push
fcomp
cmp
cltd
sub
pop
scas
in
mov
das
inc
pop
clc
and
sub
lea
std
in
nop
push
pop
and
and
cld
fwait
pop
nop
imull
adc
xor
out
enter
pop
adc
adc
sbb
enter
scas
xchg
test
jnp
add
mov
push
gs
lsl
imul
pop
push
ret
dec
inc
std
lahf
mov
insb
adc
dec
daa
push
adcb
xchg
mov
mov
lahf
fidivrs
add
ljmp
inc
imul
jo
mov
das
cmc
mov
sub
add
pushf
lods
mov
mov
jbe
sub
push
rcll
or
jl
dec
and
and
or
jmp
add
add
dec
lods
int
mov
sahf
loopne
rorl
xchg
fisubrl
sub
push
inc
sti
sub
lahf
jnp
call
sbb
outsb
test
bound
pop
mov
fcompl
xor
or
xchg
jo
mov
inc
ret
pop
jbe
icebp
flds
mov
loopne
push
out
fdivrl
rorb
xchg
sub
xchg
sbb
das
movq
add
add
add
add
movsl
mov
stc
nop
mov
push
cmc
mov
sbb
and
cwtl
dec
adc
xchg
inc
popf
iret
jne
mov
dec
mov
mov
jae
dec
mov
test
mov
add
push
xchg
jp
ss
inc
cmpsl
out
addr16
push
inc
jle
pop
and
rolb
sub
push
sbb
mov
cs
sbb
inc
push
je
mov
dec
push
flds
shll
clc
les
adc
xor
push
adcb
push
dec
xchg
divl
loope
popf
dec
jbe
mov
insl
inc
pop
nop
or
cmpsb
inc
mov
scas
jnp
cmp
lret
fwait
mov
cld
js
into
iret
lret
push
fwait
lret
jnp
mov
cltd
push
sahf
aad
push
lock
out
es
or
add
add
popf
loopnew
xor
ret
dec
mov
mov
lret
cltd
mov
inc
and
fidivrs
outsb
and
fildll
and
cltd
xchg
insb
repnz
mov
dec
es
mov
push
mov
jns
pop
jp
xchg
inc
loope
sbb
adc
xchg
pop
mov
sub
pop
in
pop
cltd
sbb
mov
iret
das
arpl
cmp
pop
cld
lahf
movsl
in
mov
andl
clc
iret
add
add
data16
dec
xor
notb
and
push
xor
mov
test
mov
daa
or
test
aaa
adc
lret
adc
repnz
push
cmp
lret
dec
aas
xchg
push
xchg
cmp
popl
or
pushw
dec
out
xchg
xor
xchg
jb
jns
outsl
rol
add
pusha
jg
xchg
pop
mov
hlt
mov
pop
dec
sub
mov
adc
sar
dec
mov
jne
xchg
mov
insb
mov
in
cmp
ret
jae
push
add
xchg
pop
xor
in
lods
or
xor
adc
jo
in
lcall
gs
pop
in
xor
inc
pop
push
cmp
leave
xchg
mov
jnp
lret
add
rcrl
dec
dec
test
push
jbe
xor
in
add
add
jb
mov
add
ret
sbb
je
js
leave
or
lret
mov
pop
add
sbbb
lret
xchg
jb
in
loope
shll
jo
icebp
andb
xchg
call
test
rcrl
mov
shlb
fbstp
into
fs
outsl
inc
dec
sbb
stos
mov
push
icebp
cmp
sbb
mov
ds
mov
sbb
push
sahf
psubusw
es
lock
add
add
and
mov
pop
psrad
jo
aam
js
pop
test
mov
fcmovnbe
js
ror
std
out
cli
mov
push
pushf
add
push
add
push
xor
imul
pusha
sbb
loopne
jecxz
stc
dec
ja
cld
jns
lea
cmpsb
movsl
xchg
inc
push
dec
into
dec
lock
sub
xchg
call
pop
or
sbb
mov
mov
adc
add
mov
cmpsb
dec
ret
cmovp
cmp
cltd
test
in
add
mov
adc
cmp
loop
loop
mov
mov
fdivr
mov
or
and
fadds
ljmp
xchg
sbb
mov
leave
fists
jg
outsb
sbb
pop
xor
adc
test
aaa
out
rcll
jnp
lret
sub
jmp
add
add
add
add
fimuls
and
jmp
sbb
sub
cld
adc
fnstcw
js
out
testb
call
xchg
ficomps
daa
push
inc
out
xchg
int
xchg
mov
xchg
or
mov
sub
ljmp
test
out
dec
pop
dec
andl
push
dec
sub
outsl
mov
add
add
add
test
inc
and
adc
lods
imul
dec
inc
es
cmpsb
ret
jge
sbb
mov
cmp
lcall
cmpsb
testl
test
pop
enter
fisubs
jge
subl
adc
cmpsb
or
stos
fidivrs
xchg
sbb
addr16
xchg
int
cmp
inc
mov
imul
adc
add
add
out
loopne
or
jmp
pushf
inc
cmpsl
push
sub
jb
pop
mov
pop
cmc
pop
jp
mov
movb
pop
in
jae
fimuls
pop
jnp
jns
or
mov
andb
enter
sbb
hlt
adc
int3
cmp
cmp
lret
mov
lcall
int3
add
imul
dec
stos
hlt
or
jmp
ja
mov
dec
aam
cmp
xchg
lock
push
jl
mov
shrb
and
nop
out
fsub
sbb
sahf
push
mov
add
movsl
jae
scas
sub
mov
call
adc
inc
pop
push
stc
lea
fiadds
sahf
pop
lock
adc
rcrb
fbstp
dec
scas
mov
sarb
test
loopne
je
scas
aam
pop
push
pop
adc
xchg
cmp
xchg
mov
or
addr16
mov
adc
mov
inc
cmpsl
jl
lock
sub
inc
in
inc
inc
loope
sti
push
lods
mov
aam
adcl
outsl
fwait
pop
test
mov
or
insl
icebp
sub
test
or
mov
mov
jmp
mov
in
mov
mov
xorb
mov
int
daa
push
xchg
add
and
jg
jl
stc
mov
inc
scas
fildll
fwait
mov
ret
pop
xchg
push
in
stc
xchg
test
loopne
xlat
sbb
add
jnp
hlt
push
into
cmp
add
dec
ja
mov
inc
sahf
add
ljmp
sub
mov
fcomi
stos
sub
in
sub
push
mov
shll
jle
cmp
cmp
sub
jmp
jno
inc
jmp
jmp
in
mov
push
or
ret
add
bound
add
add
lea
sub
xlat
shlb
pop
movsb
pop
jnp
notl
lods
outsb
pop
push
adc
dec
inc
sbb
xor
cltd
xlat
ds
lret
mov
xchg
xchg
lcall
and
stc
in
outsb
rcrb
cli
sti
hlt
movsb
and
adc
mov
std
cwtl
push
fcmovnb
jne
inc
add
pop
mov
and
xchg
movsb
push
test
push
mov
gs
jno
xchg
loope
enter
adc
dec
add
push
pop
sbb
dec
mov
and
sbb
and
xorb
push
jns
ficomps
mov
mov
mov
jge
xor
stos
popa
popf
push
and
dec
lcall
jg
sbb
aad
mov
add
lret
out
and
inc
stc
jge
cmpsb
sbb
dec
mov
out
int3
pop
rcl
rcrl
add
lret
ret
mov
cld
scas
js
in
pushf
mov
enter
and
daa
sub
inc
mov
cmp
int
rcrb
ljmp
fmull
stos
aas
cmp
sbb
lods
bound
in
jnp
lods
test
lock
sub
sbb
pop
inc
pop
and
mov
into
das
in
inc
jb
jne
dec
push
jp
stos
push
mov
push
test
sar
push
pop
pop
xchg
push
in
or
das
xchg
mov
stc
icebp
int
pop
hlt
lods
repnz
arpl
jne
mov
mov
mov
fisttps
insb
call
mov
pop
xchg
xor
or
mov
ficoml
stos
popa
loope
push
jne
jbe
push
out
jmp
xchg
push
mov
mov
push
orb
mov
int3
add
sbb
js
push
test
pop
mov
push
gs
pushf
movsb
mov
iret
flds
push
xchg
je
rorl
aas
in
je
bound
xor
es
xchg
js
inc
xchg
sahf
dec
mov
sbbl
test
mov
push
ficompl
jae
push
push
aaa
xchg
or
sub
mov
mov
lcall
mov
mov
ljmp
add
add
add
add
cmp
icebp
fdivr
push
sti
subl
mov
in
cs
imul
bound
iret
out
pop
std
repz
cmp
shll
and
sbb
std
sub
lods
fstpt
push
sbb
loop
popf
stos
insl
push
mov
js
js
movsl
jge
pop
add
daa
sub
arpl
pop
lahf
cld
out
test
pop
lods
sub
push
mov
fsubl
mov
insb
jle
imul
xchg
inc
fcompl
pushf
mov
and
push
inc
cmpsl
sub
lahf
push
insl
cmp
subb
test
pop
repnz
in
mov
leave
mul
imul
mov
push
push
ds
in
jmp
mov
inc
into
sbb
push
cmp
lahf
mov
mov
hlt
mov
mov
adc
jnp
outsb
loop
adc
pop
push
adc
pop
scas
xchg
push
dec
add
or
sub
test
mov
add
cs
inc
int3
jno
ds
sub
fstpl
mov
mov
mov
mov
xor
mov
notl
xor
bound
dec
dec
mov
cmpsb
add
or
sub
pop
js
adc
sti
lret
push
in
sti
adc
test
popf
adc
xchg
je
xchg
fsub
sarb
add
add
add
add
jae
test
fld
and
pusha
es
xchg
mov
imul
test
push
cltd
roll
test
dec
lock
mov
test
jbe
popf
out
dec
subl
mov
sub
xor
mov
or
mov
adc
jmp
fcoms
pushf
pop
test
repz
pop
jge
xchg
stos
add
add
ljmp
je
xchg
dec
xor
movl
fs
scas
stc
ss
mov
out
leave
lahf
lret
and
fwait
xchg
dec
cld
lahf
cmp
inc
xchg
sbb
mov
popf
sbb
scas
stc
jae
lock
xor
and
in
pop
cmp
dec
negl
xor
fs
push
pop
inc
fsubr
shrb
insb
idivb
mov
or
lods
xor
aam
push
push
test
adc
popa
les
pop
add
imul
das
test
inc
hlt
inc
mov
ja,pn
rol
mov
xor
adc
out
push
aaa
cwtl
es
jmp
js
ljmp
xchg
daa
aas
mov
jge
cmpsl
push
fiaddl
cmp
int3
push
dec
dec
ljmp
out
iret
and
mov
cmpl
mov
xor
rcrl
repnz
int3
add
add
push
push
rcll
dec
jno
push
mov
xor
sbb
mov
in
fwait
rolb
dec
test
inc
push
repz
inc
cmpl
xchg
cmp
push
pop
in
test
mov
repnz
push
jno
rcrl
bound
out
cld
mov
in
arpl
jne
mov
add
add
add
add
mov
add
jae
int
test
mov
lea
test
loop
mov
test
add
lahf
pusha
sbb
push
in
push
jp
nop
cmp
repz
cmp
xchg
shufps
out
pushf
mov
and
xchg
inc
ror
or
sub
aad
loop
data16
mov
adc
roll
jae
sub
sbb
push
mov
mov
and
pop
call
pop
dec
fwait
and
std
in
jle
mov
mov
xor
cmpsb
inc
jle
loope
push
add
fadds
mov
lods
scas
sub
add
fs
out
jle
pop
xor
jne
lock
cltd
pop
pushf
jle,pn
arpl
imul
push
stc
and
push
dec
sbb
jne
mov
jae
push
adc
and
pop
stos
or
push
jmp
dec
push
sub
frstor
test
inc
into
cmp
add
dec
sub
mov
mov
adc
mov
push
out
push
pop
filds
xor
jb
adc
orl
adc
lods
cmp
fisubrl
iret
imul
dec
inc
stos
and
jo
jo
test
pop
mov
jg
mov
mov
mov
addb
push
rcrl
dec
icebp
inc
fldcw
ds
dec
mov
inc
adc
or
sbb
cmp
adc
ja
cli
fdivs
jb
mov
push
shll
fistpll
adc
mov
lahf
mov
sti
jns
insb
nop
jle
js
push
insb
or
fdivr
decl
shrl
icebp
sar
xlat
loopne
insl
in
pop
repz
push
add
xor
mov
and
or
push
inc
outsb
push
aam
insl
or
push
sub
xchg
jbe
shrl
lock
or
shrd
add
icebp
shlb
mov
sbbb
jae
mov
add
add
add
add
movsb
out
out
jae
scas
pop
cmp
mov
fiaddl
mov
ja
cmp
in
and
add
dec
cli
out
rclb
pop
ja
jb
lea
iret
mov
cmp
ficoms
sbb
mov
es
jae
cmpsb
push
lods
cmp
add
rcll
les
xchg
mov
mov
stc
lea
xchg
add
aaa
inc
outsl
xchg
in
ret
add
sub
xchg
insb
adc
testb
test
push
leave
push
loop
std
sahf
pop
out
xor
jge
aad
push
mov
gs
sub
fcmovu
outsl
push
mov
jne
pop
lock
push
jmp
add
int3
sub
inc
fdiv
iret
xor
ss
es
mov
jp
push
mov
into
outsb
pop
jle
or
sub
or
repnz
adc
xchg
mov
xor
ret
mov
sarl
stos
fstl
xor
sub
das
xor
lret
push
cltd
or
sbb
lret
lahf
test
jp
in
mov
mov
sub
push
sub
test
imul
push
das
mov
jmp
and
mov
sub
sbb
cs
popf
and
inc
push
lds
sbb
cmp
add
shr
pop
mov
push
std
shl
adc
xchg
orb
fadds
push
adc
push
addr16
loopne
sahf
pushf
ljmp
movsl
mov
out
and
fwait
dec
arpl
gs
out
in
aad
pop
xchg
shlb
lock
fldcw
jnp
les
test
dec
mov
adc
mov
scas
cltd
lea
inc
add
in
add
mov
scas
pop
div
cmpsb
repnz
mov
mov
outsl
dec
sbb
xchg
movsb
mov
out
lret
xchg
mov
mov
xor
pushf
xor
xor
dec
out
lods
add
jge
sbb
hlt
scas
jae
jo
daa
mov
bnd
imul
inc
lcall
add
add
add
cmc
iret
xor
inc
xor
fadd
andb
in
or
ffreep
jmp
rorl
pop
sbb
jp
sti
js
add
lods
cmc
dec
sbb
dec
out
push
negb
sbb
adc
out
mov
cmc
jb
ja
movsl
cmpl
jae
add
in
fists
adc
mov
push
mov
testb
jb
dec
sbb
icebp
sbb
js
adc
jae
adc
add
or
stc
pushf
scas
or
mov
dec
adc
push
push
xor
push
mov
jae
cltd
cmp
sbb
cmpsl
lock
fwait
lret
mov
insb
mov
imul
fcoml
mov
jb
or
aam
mov
bound
push
add
out
loopne
adc
popa
test
popf
mov
ds
shlb
or
dec
adc
dec
mov
mov
scas
pop
imul
gs
jbe
inc
and
inc
decl
insl
inc
add
and
into
stos
les
rclb
mov
jge
sbb
jecxz
mov
push
test
or
mull
out
adc
into
mov
push
xor
lock
dec
and
mov
dec
push
test
inc
mov
xor
xchg
fisubs
test
les
xchg
jbe
les
incl
add
mov
jnp
sbb
and
or
popf
jne
cmp
xor
loope
jbe
mov
jbe
loope
int3
insl
sbb
nop
aad
pop
sub
out
ret
jns
push
cmp
in
leave
mov
push
add
push
cmc
jbe
fsubrl
shlb
push
imul
pusha
test
pop
arpl
les
jecxz,pn
cltd
nop
mov
andl
sbb
std
loop
jg
and
xchg
mov
idivl
mov
pop
popl
dec
jb
sbb
sub
aad
sub
aam
imul
add
enter
loop
lea
mov
rolb
aaa
mov
imull
lods
xlat
push
ret
cmp
jecxz
out
cld
xchg
mov
jne
pop
add
ljmp
das
pop
push
sub
daa
mov
dec
pop
into
sub
rcr
int
sbb
in
cmp
mov
or
xor
std
lret
pusha
xor
xor
sub
inc
push
jb
dec
and
sbb
fs
xorb
sbb
sub
mov
pop
idiv
push
inc
lds
idiv
xchg
sbb
aas
sub
mov
sbb
pop
outsl
push
popa
mov
push
pop
mov
add
add
add
add
mov
lea
inc
sbb
cmc
sub
inc
int3
xchg
and
out
aam
int
push
mov
push
xor
jl
pop
mov
sub
icebp
in
into
and
add
mov
add
xor
daa
and
out
out
ljmp
sbb
pop
xor
mov
add
cwtl
mov
inc
popl
cmp
mov
dec
test
push
adc
rolb
ljmp
arpl
cmp
cld
fstpt
arpl
xor
sub
mov
adc
scas
mov
faddl
idivl
push
out
xchg
dec
jb
bound
push
fdivp
insl
mov
inc
nop
aad
cs
dec
outsl
mov
enter
jg
xor
divl
dec
pop
or
add
in
cmp
fwait
inc
int3
shrb
sub
dec
notl
pop
ret
int3
int3
getsec
clc
imul
pop
add
dec
jmp
mov
mov
gs
fwait
lock
push
push
imul
notb
movsb
std
loop
push
cmp
sbb
sub
aaa
negb
mov
inc
fcomps
data16
lret
jne
xchg
cmp
pop
add
dec
hlt
movsb
adcb
jl
cmpsl
inc
cwtl
sbb
popf
push
mov
sti
mov
xchg
sahf
lock
xchg
ret
pop
syscall
inc
jg
jp
ds
jl
ds
pop
mov
das
dec
ret
daa
cmp
or
arpl
imul
in
scas
sti
and
je
mulb
jp
cmp
xor
xor
clc
int3
dec
jge
das
jle
dec
mov
push
add
add
imul
mov
test
test
sti
fiadds
repz
xlat
and
jmp
popf
and
and
jo
pop
insl
cmp
mov
jnp
jp
sbb
call
rcll
lods
mov
jae
andb
xchg
shlb
pushf
loopne
jmp
sub
iret
in
pop
icebp
jmp
lahf
int
outsb
mov
add
cmp
in
fdivrl
movsl
mov
rcrb
jae
pop
push
aas
sarb
jo
add
and
jle
insl
push
pop
push
stos
outsb
or
repnz
mov
out
insl
cs
lcall
mov
test
adc
loope
daa
mov
or
leave
call
repz
mov
ja
mov
popl
jmp
or
incl
mov
mov
add
add
add
and
push
mov
jp
mov
jbe
mov
lret
aas
mov
les
adc
pop
movsl
push
push
cld
cmc
cmp
popl
and
scas
mov
mov
sbb
ret
sub
test
mov
js
or
movsl
mov
jecxz
sbb
adc
inc
stos
sbb
push
lods
cli
xor
out
jp
push
dec
adc
test
add
add
add
add
pushf
mov
std
sti
icebp
lret
adc
push
leave
iret
loopne
add
call
mov
and
ficoms
lret
cmp
movsl
cld
xor
push
or
sbb
push
xor
jecxz
cmp
fildll
push
ret
test
jl
mov
mov
add
fwait
xor
imull
movsb
popa
xchg
pop
push
pop
add
jne
bound
push
dec
cli
pushl
dec
jns
sahf
push
xchg
sub
out
push
pusha
push
test
cmp
sbb
subb
xchg
push
iret
shll
mov
repnz
aas
outsl
nop
xor
sbb
inc
xchg
into
aaa
mov
mov
clc
scas
sub
xchg
jno
mov
cmpsb
lods
adc
sbb
push
jg
adc
mov
xchg
movsl
push
push
sbb
push
mov
and
mov
imul
add
add
add
xchg
pop
test
mov
jb
out
addr16
pop
cmp
cmp
out
pop
cli
shr
cld
mov
call
adcb
leave
or
fsts
dec
xor
xchg
cmp
sub
imul
xor
daa
cmp
pushf
fistl
scas
repnz
hlt
fmul
adc
pop
cltd
in
inc
sub
xchg
imul
pop
xchg
cwtl
pop
push
out
dec
mov
dec
dec
add
add
fs
xlat
pop
xchg
add
pop
xor
and
popaw
mov
jle
jnp
out
mov
rcrb
mov
xor
in
test
push
js
or
lea
lcall
ds
fldenv
into
jg
mov
dec
pusha
decl
mov
shrl
xor
popf
jns
adc
adc
cwtl
in
outsl
and
lcall
or
out
out
es
sti
flds
add
dec
shrb
lea
imul
inc
fstp
hlt
hlt
stos
add
cvtpi2ps
rcr
pop
lds
shrb
gs
mov
pushf
pop
and
repnz
xor
das
or
fs
shrl
sar
je
subl
or
ret
inc
jne
xchg
pop
add
or
pop
xor
mov
and
mov
aas
or
cmp
inc
inc
mov
sub
xchg
inc
addb
add
cmp
shlb
xor
mov
pop
ds
jle
mov
mov
jae
sub
or
xchg
iret
scas
jbe
pop
lahf
or
ds
jae
ds
in
ja
mov
loopne
bound
xor
sub
cmpsb
mov
lret
sbbl
mov
stc
cmove
push
jne
cmpsl
insb
lahf
push
clc
sub
add
clc
and
lgs
or
mov
scas
loop
push
and
out
fiaddl
pop
xorb
call
fiadds
pop
cmpsl
sarl
ds
inc
mov
push
out
mov
gs
inc
jl
inc
or
adc
test
cmp
xor
lds
add
add
add
xlat
pop
aaa
sbb
mov
lcall
loope
push
push
in
and
test
sub
stc
mov
es
outsb
sbb
aam
adc
lock
jmp
loop
repnz
cmp
addr16
jle
rcl
and
out
inc
repnz
or
hlt
outsl
aaa
leave
xor
dec
repnz
cld
out
xchg
or
mov
dec
jp
pusha
call
push
xchg
or
pop
pop
fistpl
xor
xchg
cmp
int3
inc
sbb
xchg
cwtl
fwait
sbb
push
cmp
int
cwtl
insl
and
mull
cwtl
mov
enter
data16
das
divb
jmp
loop
sbb
dec
std
enter
xchg
scas
adc
sbb
fwait
icebp
sbb
pop
mov
sar
lds
pop
push
pushf
xchg
mov
lea
testb
fldt
js
dec
or
cmp
cmp
std
mov
movsb
or
xor
add
add
test
or
out
inc
or
jb
inc
xor
or
push
push
es
ds
xchg
jp
mov
pop
fists
ja
sbbl
sbb
stc
in
sbb
mov
fs
and
rorb
imul
push
stos
dec
mov
addr16
test
dec
pop
mov
in
mov
cmp
add
add
add
add
and
inc
into
xor
xchg
and
and
insl
xor
pop
add
movsb
push
cmp
push
or
stos
dec
jb
aad
