mov
xor
cmp
je
lea
test
sub
cmpb
jne
ret
push
push
push
push
mov
call
mov
jmp
mov
add
mov
test
je
add
add
add
add
add
push
mov
push
lea
xor
cmp
jbe
add
push
add
pop
cmp
jb
mov
add
xor
cmp
jbe
add
lea
test
cmp
jb
pop
pop
xor
inc
ret
push
mov
mov
mov
sub
sub
add
push
mov
test
jne
xor
jmp
mov
add
mov
push
mov
mov
mov
push
mov
add
add
add
mov
mov
test
jns
and
sub
cmp
jae
mov
jmp
xor
mov
cmp
jae
jmp
mov
mov
mov
mov
add
mov
call
cmp
je
incl
mov
cmp
jb
mov
mov
mov
cmp
je
movzwl
mov
add
test
je
mov
add
cmp
jae
cmp
jb
xor
cmpb
je
lea
test
cmpb
jne
push
lea
push
push
mov
call
add
add
lea
push
mov
movb
call
mov
test
jne
xor
jmp
lea
call
push
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
add
sub
push
mov
mov
add
mov
test
jne
push
add
pop
jmp
andl
push
lea
lea
cmpl
push
je
mov
mov
add
push
mov
call
mov
test
je
mov
andl
add
cmpl
je
mov
pushl
pushl
call
mov
test
je
mov
mov
mov
mov
mov
incl
mov
mov
lea
cmpl
jne
mov
incl
mov
imul
lea
lea
cmpl
jne
xor
lea
test
pop
pop
pop
leave
ret
xor
jmp
push
xor
cmp
jbe
lea
push
mov
add
mov
add
add
sub
sub
add
cmp
jb
pop
pop
ret
push
push
push
xor
mov
push
mov
call
mov
push
push
mov
call
push
call
mov
cmp
jne
push
pushl
push
mov
call
jmp
cmp
jne
testl
jne
cmp
je
push
push
push
push
mov
call
add
add
test
jne
mov
call
jmp
cmp
jne
push
push
push
push
push
mov
call
test
je
push
call
push
call
push
jmp
cmp
je
push
push
push
xor
call
push
mov
call
xor
pop
pop
pop
ret
push
push
mov
mov
mov
mov
mov
mov
cmpb
jne
cmpb
jne
pop
pop
ret
push
mov
push
push
mov
mov
mov
mov
push
push
lea
mov
mov
mov
sub
not
sub
not
shr
add
push
mov
add
add
push
lea
push
mov
call
add
sub
mov
mov
mov
mov
push
popl
sub
add
lods
xor
stos
sub
sub
sub
add
roll
sub
lea
test
jne
mov
mov
neg
add
add
sub
add
mov
imul
add
mov
imul
add
mov
mov
mov
sub
add
and
add
movl
mov
pushl
lea
push
push
mov
call
mov
add
xor
add
add
add
decl
mov
jne
subl
addl
pop
pop
leave
ret
push
mov
push
mov
movzwl
movzwl
andl
add
je
push
mov
push
lea
testl
je
mov
mov
and
add
push
push
pushl
call
jmp
mov
mov
add
add
movzwl
movzwl
incl
add
add
test
sub
cmp
jb
pop
pop
pop
pop
ret
push
push
push
xor
call
mov
lea
test
jbe
mov
movzwl
mov
and
rol
add
lea
test
jne
test
jns
lea
and
or
pop
mov
pop
ret
push
mov
add
test
sub
push
push
push
mov
xor
mov
cmp
je
mov
jmp
push
mov
call
mov
push
mov
mov
call
push
push
push
push
mov
call
mov
push
lea
push
xor
lea
test
push
pushl
mov
call
push
mov
call
push
mov
call
mov
mov
call
cmp
jne
cmp
je
cmp
jne
push
push
push
mov
call
cmp
je
mov
jmp
lea
push
mov
mov
push
pushl
push
mov
call
cmp
je
cmp
jne
lea
call
pushl
mov
pushl
mov
push
call
mov
sub
mov
mov
add
push
lea
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
call
mov
mov
sub
add
push
and
add
push
call
mov
mov
add
mov
mov
mov
add
movzwl
lea
add
mov
movzwl
lea
mov
mov
sub
xor
mov
cmp
je
mov
cmp
je
add
mov
mov
mov
jmp
mov
mov
mov
cmp
je
add
lea
mov
mov
mov
mov
add
push
push
push
call
or
sub
mov
mov
mov
sub
push
push
call
push
call
test
je
cmpl
je
mov
mov
call
mov
add
mov
push
lea
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
call
mov
pushw
add
pop
mov
mov
mov
add
xor
xor
cmp
jae
mov
mov
mov
addl
addl
push
pop
rep
mov
add
add
cmp
sub
mov
movzwl
push
add
pop
cmp
jb
xor
push
push
push
push
push
mov
call
mov
call
cmp
je
in
push
push
pushl
mov
call
jmp
pushl
pushl
pushl
jmp
xor
pop
pop
pop
leave
ret
push
mov
or
mov
movzbl
push
add
pop
mov
mov
imul
add
add
mov
mov
decl
jne
lea
pop
ret
push
mov
cmpl
push
push
jb
mov
mov
mov
pushl
popl
sub
add
lods
xor
stos
sub
add
add
sub
roll
sub
add
jne
pop
pop
pop
ret
push
mov
sub
test
add
andl
push
lea
push
movb
mov
mov
mov
mov
rep
mov
mov
rdtsc
mov
mov
mov
mov
not
ror
not
movzbl
lea
cmpb
jne
mov
push
push
push
movb
call
push
call
push
push
pushl
mov
call
mov
mov
cmp
jne
movzbl
push
push
pushl
call
pushl
push
pushl
call
xor
pop
push
add
pop
pop
leave
ret
push
mov
sub
sub
mov
add
mov
xor
mov
cmp
je
add
add
test
add
mov
cmp
je
push
mov
push
cmpl
jne
mov
add
push
mov
call
mov
mov
call
push
pushl
call
test
je
mov
mov
add
jmp
cmp
je
push
add
pop
mov
mov
test
jne
jmp
mov
lea
mov
mov
add
add
cmpl
jne
pop
pop
lea
push
mov
movb
movb
movb
call
leave
ret
xchg
sbb
push
add
cmp
and
ffree
sbb
mov
mov
or
fwait
inc
pop
sarl
cwtl
and
or
jmp
jae
sbb
cmp
mov
xchg
xchg
or
icebp
popa
data16
out
sbb
sbb
cmp
imull
push
loopne
pop
inc
ss
jp
push
mov
mov
aam
fld
out
push
stos
lds
sbb
nop
clc
and
xchg
in
in
rep
outsb
fimuls
push
in
scas
clc
jmp
fbstp
xor
sub
mov
mov
test
leave
out
hlt
xchg
pop
fisubs
xchg
test
xchg
xor
ret
mov
sbb
or
out
xor
add
xor
enter
jb
jmp
ss
adc
shll
mov
jle
jb
cltd
push
out
imul
imul
ljmp
test
xor
bound
test
pop
jb
cld
push
mov
jne
popa
inc
jecxz
or
xchg
inc
sbb
arpl
hlt
out
push
ds
push
mov
xchg
aas
push
pop
xchg
inc
jle
sbb
mov
jmp
push
mov
sub
mov
sub
clc
sub
jbe
leave
push
cmpsb
dec
jae
adc
mov
sbb
arpl
or
xor
add
std
aam
cli
push
pop
and
scas
stos
and
fcmovne
pop
adc
inc
sbb
pop
mov
dec
pop
xchg
mov
or
lret
add
push
sbb
lock
push
sti
dec
inc
leave
push
inc
test
xchg
xchg
in
stos
in
dec
leave
mov
lods
mov
test
cmp
ja
fdivr
mov
mov
mov
testb
jmp
and
in
jmp
add
lret
push
sub
jl
aam
push
insl
inc
cmpsb
jmp
daa
shll
dec
cmp
ret
jp
das
call
dec
out
scas
inc
lahf
ss
shrl
sub
jb
shl
dec
iret
push
xchg
add
out
mov
or
xchg
sti
inc
pop
pop
jnp
and
jns
jge
dec
divb
xor
push
stos
pop
setae
movsb
test
rcr
mov
imul
dec
imul
hlt
clc
das
pop
xor
js
rorb
cmc
testl
cmp
imulb
out
gs
pop
adc
out
int3
in
inc
loopne
push
ja
jmp
jb
and
cmp
aam
f2xm1
mov
pop
mov
shrb
mov
addl
push
lahf
clc
clc
sbb
inc
mov
sub
mov
pop
dec
cli
lods
mov
insb
pusha
cmpsl
push
mov
dec
adc
push
lods
push
imul
movsl
xor
sbb
ds
jmp
orb
out
jle
ret
psubsb
cmp
inc
xchg
stos
xor
loope
xchg
xor
icebp
cmp
repnz
stos
pusha
sbb
movsl
pop
jo
add
mov
fstl
xor
jle
mov
xchg
mov
lods
push
sub
and
dec
insl
jb
sbb
xchg
fldl
repnz
and
lret
orb
shrl
sbb
shrb
addr16
jl
jo
mov
adc
adc
mov
cmpb
dec
push
add
lret
insb
js
adc
xchg
sti
add
sbb
adc
lcall
cwtl
add
into
stc
clc
push
or
xchg
enter
push
push
daa
fdivrs
test
and
and
pop
xlat
jne
inc
popf
enter
loop
fimull
shl
sti
push
mov
into
inc
push
mov
mov
push
les
shrb
xor
ficompl
dec
sub
pop
mov
sarl
idivb
fimuls
sbb
enter
mov
dec
xor
pop
jmp
testb
xchg
mov
sbb
inc
sbb
ret
clc
push
adc
frstor
cli
mov
pop
daa
test
orb
jp
mov
push
sbb
sbb
in
or
adc
push
sbb
xor
mov
mov
loop
loopne
mov
xor
popf
mov
pop
out
cmp
in
pop
repnz
je
jns
and
imul
mov
hlt
dec
mov
sub
mov
jo
test
inc
jne
xor
gs
mov
sbb
aam
data16
dec
jo
and
or
cmp
add
loop
mov
xor
fsubl
lret
dec
cmpb
roll
jl
mov
jp
add
sbb
xchg
gs
push
adc
movsb
icebp
mov
fistl
sub
dec
mov
in
sarl
push
lret
mov
pop
jg
aam
dec
popf
test
mov
cmp
mul
pop
popf
sbb
daa
mov
faddl
ljmp
jno
cmc
ljmp
and
xchg
pop
in
add
sti
hlt
out
popf
dec
cmc
fstp
lcall
push
jg
or
xchg
inc
rolb
and
xchg
sub
push
hlt
fsubl
insb
jmp
jle
pextrw
sub
push
pop
adc
cltd
push
inc
loope
loopne
call
add
mov
cltd
cmp
xchg
sbb
popf
out
xchg
aam
push
push
movb
sbb
add
in
add
sub
mov
ja
jbe
or
jne
sti
push
lods
out
divl
sbb
cld
xchg
movups
mov
cltd
push
mov
xchg
mov
or
xchg
cli
xchg
shlb
sub
ljmp
jp
loop
clc
movsb
sbb
jp
mov
cmpsb
jl
movsb
aaa
jmp
js
xchg
out
cmp
ret
add
mov
out
add
dec
cmpsl
xorb
iret
outsl
inc
dec
and
stos
ss
jle
xor
loope
lret
aas
xor
in
ds
mov
or
mov
aaa
stos
sub
inc
push
sbb
mov
lret
sub
jnp
popf
xor
jo
adc
pop
xlat
ja
pop
bound
out
cld
les
das
mov
mov
scas
and
les
add
xor
mov
sub
dec
or
add
aaa
cmc
ja
outsb
mov
cmp
mov
jno
les
or
repnz
rorb
lahf
xor
pushf
sti
hlt
movsl
stos
jge
pushf
mov
enter
or
add
stos
sbb
xchg
lret
add
and
div
cmp
pushf
shr
jns
rolb
jns
cmp
jle
jge
jle
icebp
xchg
lods
les
jnp
clc
sbb
and
xlat
cmc
sarb
fs
test
data16
loop,pn
cld
rclb
adc
data16
sbb
xchg
rclb
cmc
addl
popa
dec
xor
in
inc
xchg
std
hlt
or
js
popa
shll
mov
jne
imul
xlat
rorb
and
cmpsb
lock
hlt
xchg
shlb
sbb
popa
xchg
cwtl
call
stos
rolb
ret
movsl
push
pop
cmpsl
lods
test
cmpsl
xchg
sbb
addr16
jmp
sarl
push
sub
je
xchg
mov
xchg
in
aam
dec
mov
ljmp
nop
mov
addr16
aad
ja
cli
and
dec
mov
hlt
cltd
jae
insl
jns,pt
lahf
push
jge
lods
mov
ret
cmp
sbb
push
out
cmp
aad
xor
rorb
les
pop
cmp
push
push
mov
add
in
imul
sarl
dec
lret
xor
add
mov
mov
stc
fnstsw
pusha
in
add
cmp
insl
icebp
add
pop
push
push
stos
mov
sub
aad
jmp
imul
add
fiadds
pop
ret
xchg
aam
add
xchg
adc
sarb
sbb
pop
outsb
sub
xor
lret
std
pop
hlt
xchg
sbb
mov
repnz
insb
adc
cs
punpckhbw
cld
into
lds
mov
push
jb
aam
icebp
popa
pop
sub
cmp
add
jb
push
mov
pusha
movsb
outsl
jo
xorb
inc
cmp
cmp
or
mov
test
rclb
pop
scas
sti
and
mov
cltd
dec
ror
adc
jge
scas
test
cld
push
xchg
dec
push
outsl
adc
sti
mov
and
pop
or
mov
dec
insl
push
pop
fsubl
xor
or
jb
cmpsl
lock
aad
out
fnstsw
call
iret
js
shl
lock
rcrb
test
xchg
test
pushf
gs
imul
repz
cmpsl
xchg
nop
filds
xchg
rcrl
push
sub
leave
xchg
mov
insb
add
inc
add
sbb
in
xor
xchg
dec
sub
mov
loopne
cmpsl
inc
cmp
mov
lea
inc
dec
icebp
out
cmp
pushf
cmp
ret
movsb
cmp
cmp
aas
and
rcll
cmp
inc
and
push
popf
sbb
mov
fwait
aam
add
xor
mov
cmc
arpl
mov
movb
or
jl
jbe
out
mov
or
mov
pop
push
xorl
mov
icebp
xchg
into
add
jp
std
sbb
push
add
lret
xchg
in
pop
add
jmp
je
adc
lea
xorb
dec
in
pop
dec
fldenv
idiv
xor
repnz
mov
and
fwait
clc
mov
aad
xchg
insb
cmpsb
movsl
and
roll
lods
aam
fstl
movsl
jecxz
sub
lret
add
out
and
cs
std
jmp
xchg
adc
or
scas
stos
aad
xor
rorb
xchg
adc
xor
mov
mov
into
jb
push
push
or
cld
aaa
je
push
stos
jo
adc
xor
mov
pop
faddl
dec
fs
mov
not
push
mov
mov
cli
insl
aad
lahf
nop
shll
ds
std
add
ss
mov
aad
mov
cmp
xchg
in
or
mov
add
fisubrs
xchg
lret
xchg
adc
adcb
sarb
jb
mov
pusha
pushf
adc
jge
pop
adc
data16
inc
inc
les
or
cld
xor
inc
aaa
sbb
mov
ss
or
push
or
mov
ljmp
mov
orb
pusha
push
jl
mov
and
cltd
cmpsl
aaa
notb
fmulp
pushf
gs
sbb
movsb
lods
or
cmc
and
call
movsb
mov
dec
dec
cmp
mov
jns
loop
xor
mov
pop
cwtl
xor
mov
add
fmuls
dec
cmp
inc
adc
out
push
push
lods
aad
pop
stos
mov
hlt
xchg
loop
insb
divl
adc
loope
mov
jbe
mov
sti
xchg
adc
push
mov
cli
shl
adc
insl
shll
sub
mov
cmc
test
xor
and
test
jae
mov
jbe
movsl
mov
out
out
add
cmc
imul
cli
push
xchg
mov
pop
xlat
and
out
popa
arpl
shlb
das
push
mov
dec
xchg
add
lret
sub
push
dec
andl
pop
dec
push
jne
sbb
cmpsb
neg
jno
jmp
push
jbe
out
dec
mov
adc
dec
lret
xchg
fwait
xor
mov
clc
movsl
xor
push
jle
inc
mov
je
out
out
cltd
scas
fwait
cmp
out
addr16
jno
mov
cmpsl
dec
stos
mov
js
int3
add
in
mov
and
push
mov
pop
add
imull
mov
pop
in
mov
insb
dec
jae
ja
int
int3
pop
dec
sti
xlat
in
call
sbb
lods
ss
icebp
pop
nop
sbb
lahf
fistl
rcl
jns
lret
inc
outsl
jmp
pop
and
popf
mov
pop
lret
das
mov
xor
jo
fcom
out
or
cli
push
xchg
sub
sbb
cmp
mov
pop
ljmp
dec
jecxz
fstps
fimuls
outsl
add
insl
popf
mov
call
add
lods
in
inc
cltd
jo
mov
scas
sarb
lcall
inc
stos
das
inc
pop
mov
addb
aaa
insl
xchg
inc
scas
push
mov
mov
pop
sti
xor
inc
aam
jl
lods
and
mov
sbb
xchg
shl
shr
mov
mov
hlt
je
aam
jb
int
jecxz
or
cmpsb
and
cmp
test
cbtw
scas
jbe
fwait
mov
fs
scas
mov
sub
ja
pop
call
inc
movsl
jno
pop
out
das
imul
add
mov
ret
xorl
push
jg
pop
shll
jecxz
stos
xorb
mov
std
pusha
adc
mov
clc
lds
test
insl
movsb
insb
xchg
in
repnz
out
add
xchg
imul
cld
xlat
testl
mov
jg
mov
inc
sbb
jae
aas
add
repnz
rcll
adcb
scas
sub
lret
mov
xchg
lret
daa
and
xor
xchg
cli
add
ja
lds
mov
inc
xchg
sbbl
or
jp
sahf
mov
out
and
pop
outsl
ror
add
ret
pop
ja
or
mov
fwait
sub
and
and
sub
gs
movmskpd
or
aas
inc
fstl
jae
sbb
jae
shrb
xlat
dec
cwtl
test
mov
push
mov
je
cli
or
rclb
call
sbb
pop
or
or
sub
mov
and
xchg
imul
loopne
mov
xlat
data16
sbb
and
mov
ds
lods
sbb
cmc
mov
xor
outsl
out
mov
push
test
dec
test
mov
in
sbb
int3
sbb
jnp
or
ljmp
sub
xchg
scas
ret
fcompp
push
jmp
add
fdivs
sub
jg
sub
clc
push
mov
pop
scas
pop
int
mov
or
mov
sub
inc
push
push
jnp
xchg
out
and
xor
sub
iret
mov
mov
sbb
sub
les
mov
xchg
ljmp
scas
nop
cmc
outsb
lcall
sahf
fists
jno
orl
jp
into
adc
or
add
jmp
fdivr
cmp
les
pop
inc
es
lret
in
cwtl
push
mov
clc
imul
jge
mov
push
sbb
outsb
movsl
dec
lock
add
mov
lods
xchg
xor
xchg
popf
adc
popa
call
cmp
rolb
out
lahf
out
xor
cmp
scas
out
jmp
adc
imul
mov
mov
jns
in
leave
loopne
push
lea
in
mov
mov
das
cltd
test
or
filds
rolb
jle
push
push
dec
fbstp
xor
sbb
pop
mov
ud1
push
jae
and
dec
ds
lcall
insb
push
cwtl
arpl
sbb
lods
in
jo
and
inc
fsts
rorb
add
sub
in
mov
jmp
jns
xor
test
frstor
mov
int
enter
test
stos
rorb
jb
push
icebp
loopne
jne
add
lods
mov
jge
mov
ja
std
and
xor
test
pop
add
xchg
and
in
inc
push
fisttpl
push
mov
mov
mov
aam
cs
aad
sub
push
outsb
icebp
iretw
push
push
cmp
mov
adc
in
xor
xchg
and
mov
xlat
fldenv
pop
xchg
lock
or
xchg
add
lret
sub
mov
int3
fsubr
shll
repnz
jmp
mov
sub
fimuls
cmp
pop
xor
adc
inc
mov
ja
or
decl
enter
adc
or
adc
and
int3
mov
in
aas
stc
fbld
xor
xchg
pop
pop
mov
mov
cwtl
mov
xchg
or
or
je
cmp
pushf
xchg
pop
notb
fsts
das
shrb
dec
sti
in
ja
cmp
movsb
add
or
lret
lods
arpl
adc
repz
xchg
push
in
xor
fimuls
fwait
lahf
sub
scas
push
pop
xchg
orl
repnz
jno
xchg
pusha
add
pop
mov
xchg
jne
push
push
stos
pop
stos
outsl
movsl
push
aam
int3
setp
cmp
adc
add
ficoml
pop
mov
xor
inc
sti
xor
sbb
jge
sbb
jne
jmp
std
bound
dec
pop
ljmp
lods
addb
and
jg
daa
mov
outsb
sbb
idivb
pop
loope
mov
loop
push
shr
adcb
loop
adc
mov
jp
mov
cmc
sbb
out
adc
adc
mov
mov
outsb
lcall
scas
orb
and
pop
xchg
out
jge
and
jae
fstp
push
inc
outsb
out
into
movsb
jecxz
movd
add
or
and
mov
das
adc
addr16
movsl
cmpsb
xchg
sbb
sti
sub
insl
adc
xchg
aam
cmp
xchg
mov
and
xor
iret
rorb
mov
xchg
sub
fdivrl
aad
xchg
pop
test
fwait
jmp
cmp
lahf
add
cmp
lods
xchg
ja
cmpsl
call
sbb
idivl
add
iret
cli
sti
cmp
jb
in
inc
dec
mov
adc
mov
cmp
pop
dec
mov
mov
or
push
imul
pop
lahf
repz
add
addr16
or
and
sbb
dec
inc
addr16
jge
out
movsb
cmp
jl
or
ds
imul
leave
popf
jb
jnp
movsl
sbb
pop
stc
add
ret
or
cmpsb
insl
rol
dec
push
xchg
rclb
cmp
push
mov
push
repz
xor
loop
aas
cmp
ljmp
call
mov
dec
mov
cmp
and
inc
imul
cmc
mov
mov
jae
notl
pop
add
js
sub
hlt
push
xchg
sub
mov
xlat
xor
call
or
xchg
dec
popf
mov
dec
jnp
hlt
mov
mov
jmp
ret
bts
sarl
aaa
xchg
add
inc
jae
xchg
pop
dec
sbb
sbb
and
push
fdivrs
cltd
and
repnz
mov
xor
pop
roll
lea
xchg
sbb
pop
shlb
sbb
aas
sbb
and
shll
lods
lea
out
push
cmp
lds
mov
lds
test
dec
add
sbb
imul
aaa
in
adc
push
ret
test
xor
jno
mov
test
add
pop
push
lret
cltd
push
mov
ss
and
std
sbb
push
arpl
rcr
mov
xor
lods
fst
ror
inc
xlat
jno
in
jle
push
cmp
insb
lods
lock
and
in
xchg
sbb
sbbb
jo
jne
add
and
xchg
add
sti
or
je
push
fbstp
sbb
movsl
mov
pop
shlb
imull
js
ds
fstl
push
jno
test
jae
xor
push
dec
fidivrs
sbb
cmp
inc
shlb
and
loope
pop
or
sub
nop
fcoms
das
call
xchg
imul
inc
push
arpl
mov
cwtl
into
pop
aad
lahf
mov
cmp
jb
imul
cltd
outsl
es
ljmp
mov
xchg
cmp
sub
push
ss
add
dec
test
sti
cmp
mov
cmp
lea
or
sub
loop
movsl
dec
push
ja
sbb
pop
icebp
test
mov
and
outsb
test
negl
dec
pop
xchg
mul
icebp
loopne
or
pop
lcall
fdivrs
xchg
inc
in
lds
add
or
mov
pop
dec
pop
daa
out
xchg
imul
push
dec
enter
and
test
dec
cmp
repz
mov
push
push
cmp
inc
mov
sbb
pusha
and
lds
inc
push
cmp
xor
ljmp
adc
jnp
jns
pop
push
das
pop
in
sti
fnstcw
dec
xchg
popa
mov
out
adc
lahf
clc
sbb
leave
repnz
ret
jl
repz
adc
jle
pop
push
jb
mov
inc
xor
add
in
pop
jne
xor
mov
pop
cmp
in
mov
jnp
sarb
stc
bound
mov
lret
cmp
outsl
lahf
or
mov
cmp
cwtl
clc
std
dec
jmp
inc
inc
mulb
add
popf
cs
in
jl
xor
aam
cmpsl
sub
lea
sti
mov
jmp
mov
sarl
pop
ljmp
pushf
dec
fisubl
mov
lret
or
cmpsb
in
call
fbstp
pusha
dec
jns
adc
jg
mov
adc
mov
pop
cmp
pop
out
popf
cs
icebp
dec
test
rcrl
mov
lods
movsl
xchg
cmpsl
jo
popf
loop
mov
das
nop
xchg
jo
mov
or
ds
scas
aad
shrl
in
jnp
das
lea
stc
imul
lret
fstps
aam
mov
rcrl
and
adc
sub
xor
fisttpll
in
icebp
add
ret
dec
nop
and
fisttps
xorb
push
pop
mov
jae
out
pop
lock
jo
pop
ret
fsubs
shr
pop
lds
mov
or
add
rcrl
fldenv
pop
fbstp
mov
fnstcw
pop
pushf
imul
push
inc
dec
lea
or
icebp
adc
sub
jne
jmp
mov
out
push
add
xor
mov
xchg
xchg
shrl
bound
xchg
imul
imul
sub
mov
mov
sub
iret
inc
dec
mov
jne
or
or
mov
outsb
hlt
mov
and
std
pusha
add
ret
mov
jl
and
popa
cmp
cmp
sub
je
enter
mov
jg
dec
imul
sti
rcrl
xchg
or
dec
int3
and
imul
xchg
dec
imul
aaa
shll
pop
shl
jns
lahf
arpl
mov
lods
sarl
jmp
mov
iret
dec
mov
cmc
ds
mov
mov
into
mov
xchg
scas
js
and
fmuls
push
dec
pop
lock
sbb
mov
ss
loopne
xor
jae
out
outsb
out
jbe
jnp
hlt
sbb
cs
xchg
mov
fldt
xor
fldenv
imul
cmp
push
stos
imul
xorb
arpl
vdivps
jle
mov
clc
mov
lods
fdivrs
and
pop
out
add
test
fwait
sti
mov
ret
or
mov
push
pop
mov
xor
addr16
scas
movsb
push
xor
jb
scas
ret
es
or
imul
fstl
sarb
aaa
jecxz
mov
cli
cmpsl
lock
sub
pop
push
push
sub
and
pop
xchg
cmp
jno
adc
dec
push
pusha
test
jl
in
sahf
es
pop
lret
mov
add
inc
adcl
repz
pop
jp
mov
push
dec
mov
pop
int3
mov
clc
js
test
add
ds
or
popa
lock
mov
sbb
pop
xchg
mov
lock
or
xchg
dec
fisubrs
adc
xchg
xor
xor
fdivrl
push
push
mov
jp
xchg
sub
clc
sbb
inc
rcrl
mov
loop
sbb
mov
stos
sub
xor
shlb
cmp
aad
mulb
sub
loop
add
sub
jbe
lret
std
pop
cmc
mov
mov
ds
cmpsb
pop
fxch
movsl
fildll
xor
pop
jmp
das
lds
gs
adc
xlat
scas
cmp
pushf
fcompl
xchg
dec
test
stc
xorb
push
sub
fwait
imul
sub
rclb
xlat
hlt
std
ret
jle
sbb
std
sahf
clc
ds
cmc
fidivs
lds
xchg
mov
pop
mov
jmp
aad
jge
jnp
push
js
or
into
sarb
inc
in
mov
inc
mov
dec
inc
pop
and
hlt
int3
jnp
mov
mov
daa
sti
push
xor
out
push
xor
xchg
pop
mov
sub
mov
lods
cmpsl
std
push
cmp
xor
lods
nop
jb
sub
push
add
test
movb
sub
pop
mov
mov
lcall
negl
cs
xchg
out
test
jo
or
jmp
push
test
cmpsl
outsb
rclb
pop
xchg
lds
aaa
jl
xor
sub
push
jo
xor
movsl
adc
pusha
cmpl
icebp
nop
adcb
push
iret
mov
lds
outsb
js
adc
mov
addl
sub
es
xor
inc
add
sti
cld
jnp
pop
test
mov
mov
roll
dec
imul
test
push
mov
repnz
dec
mov
xchg
mov
dec
add
mov
add
lds
enter
or
or
mov
xchg
mov
mov
lahf
clc
dec
out
ss
rcrb
mov
gs
or
fimull
jo
sub
inc
dec
scas
lds
cs
imul
outsb
or
das
sub
movsb
lock
pop
shl
pop
mov
adc
sti
fsubl
scas
movq
int
cltd
faddl
mov
cld
into
or
push
dec
es
cwtl
jns
xor
fdiv
stos
sbb
mov
cmp
fwait
push
cwtl
mov
cmpl
das
mov
push
je
int
mov
jo
dec
stos
pop
jle
inc
and
nop
push
ficomps
or
xchg
mov
add
mov
fs
xor
jle
aam
cld
aad
pop
push
or
xchg
test
sbb
mov
pusha
jae
sub
in
mov
loopne
outsl
andl
inc
pop
lret
lret
scas
movsl
dec
add
mov
dec
adc
call
push
lret
repz
rcr
and
add
incb
into
movsl
jle
in
stos
repz
add
ret
or
popf
adc
dec
mov
mov
sbb
mov
sub
or
push
out
and
imul
sbb
adc
inc
sub
jp
push
sub
jno
sahf
lock
cmpb
roll
mov
cmc
cli
sub
std
inc
push
xor
ror
sbb
fistps
aaa
mov
cli
add
push
in
pop
int3
cs
mov
sub
ds
pop
mov
add
cmp
push
int
cmp
cmp
cmpsb
pop
outsb
mov
xor
insl
or
sahf
sbb
jecxz
cs
pop
xor
sbb
adc
icebp
icebp
int3
xor
pop
xlat
cvtpi2ps
mov
stos
ljmp
push
and
adc
fadds
nop
cmp
push
jl
lret
into
cmp
lock
dec
mov
push
outsl
imul
aaa
xchg
mov
add
pop
jbe,pt
sbb
mov
sub
test
ljmp
cmp
mov
jg
mov
test
lcall
cmp
lods
into
dec
dec
in
or
xchg
pop
mov
push
int3
loop
clc
mov
pop
lock
stos
xor
sub
stos
in
pop
xorb
mov
idivl
daa
sbb
sub
xchg
add
les
aam
imul
test
inc
in
scas
cmp
je
insb
test
ja
cmpl
out
and
or
dec
push
mov
mov
or
arpl
push
or
call
aaa
or
lods
or
imull
iret
cmp
xor
das
lds
inc
cmp
test
cmpsl
jnp
or
cltd
cmpb
call
xchg
cmpsb
xchg
or
scas
mov
pop
in
mov
cmp
mov
in
stos
mov
xlat
loopne
loop
lcall
mov
cmpsb
xchg
ljmp
dec
mov
loopne
add
movsb
fs
jg
xor
in
add
sub
mov
aas
popl
lret
xor
popa
pop
scas
pop
incb
subb
sbb
fprem1
stc
dec
jl
push
test
pop
add
aam
mov
mov
outsb
fsubrp
jmp
adc
mov
push
xorl
jns
cs
das
cmc
dec
pop
cltd
pop
mov
mov
rorb
push
mov
into
outsb
ljmp
cs
test
push
xchg
mov
fadds
aaa
leave
mov
add
fs
or
cmp
sub
inc
sbb
jno
pusha
mov
scas
xor
lahf
xor
bound
inc
dec
je
or
sti
jp
jno
or
out
rorl
lret
cmpsl
mov
or
mov
scas
ds
cmp
pop
add
ss
lds
cmp
cmp
test
in
inc
sub
inc
rcrb
xlat
pop
mov
std
mov
imul
aam
xor
fs
add
add
or
fildll
adcb
add
xor
pop
cwtl
cld
testb
or
popf
lods
aaa
xlat
sbb
and
mov
es
sbb
cmp
xchg
dec
lret
cmpl
or
add
jmp
add
dec
xchg
jnp
ja
xor
lods
adc
ret
and
rorb
lcall
sarl
sbb
mov
xchg
in
cld
ficomps
fdivrs
icebp
pop
sti
fdivs
mov
insb
daa
pop
scas
test
sbb
adc
movsb
sti
andb
aad
sbb
loope
cmp
in
adc
sub
clc
imul
roll
dec
mov
mov
push
or
xchg
in
rcrl
icebp
jae
and
and
test
fmul
cmc
sbb
pop
cld
lock
pop
test
adc
leave
std
in
sub
push
mov
xchg
pop
scas
push
mov
fmull
and
sub
mov
dec
push
fmuls
pop
lds
inc
xor
and
std
das
cmp
inc
push
clc
inc
mov
ret
push
sti
jno
das
cmp
lahf
xorb
xchg
and
lret
jno
sbb
mov
imul
xor
adc
jmp
in
int
bound
outsb
test
xor
dec
pop
imulb
sbb
ja
std
mov
mov
int
xlat
xchg
shlb
std
mov
pop
dec
repnz
push
jl
call
bound
inc
xor
out
test
subl
push
xchg
ss
pop
mov
shll
aad
pushl
push
shlb
xor
cmpsl
inc
stos
cmp
cmc
adc
fimull
int
pop
out
xchg
adc
jge
inc
cli
ja
pop
in
mov
mov
mov
mov
adc
or
cmp
mov
fcomp
mov
mov
out
mov
int3
mov
add
lret
sti
lods
lret
cwtl
inc
fwait
adc
jg
and
outsb
dec
mov
or
leave
fwait
icebp
imul
mov
cmc
or
mov
mov
xchg
cmp
pop
dec
dec
fs
in
cli
push
lods
int3
into
push
lock
out
icebp
pop
xchg
add
scas
das
ljmp
mov
cmpsb
mov
cmpsl
mov
lds
jl
xchg
inc
cmp
mov
or
cmpsb
push
rorb
repnz
call
inc
mov
xchg
shrb
and
ret
outsb
or
addr16
inc
push
scas
je
push
jl
xchg
psadbw
lock
sbbl
xchg
subb
ljmp
sub
xchg
scas
adc
mov
inc
inc
mov
mov
sti
in
jne
push
shr
cmpsb
jo
pop
in
push
dec
fsubl
inc
adc
rorl
test
inc
out
sbb
dec
lock
stos
or
daa
leave
imul
aaa
fdivrs
sbb
sub
movsb
fildl
imul
mov
add
xchg
test
pop
fstl
loope
pop
inc
pop
aad
or
cmp
ror
es
jne
daa
test
push
pop
mov
mov
sub
insl
sahf
push
ret
es
lock
mov
cwtl
shll
loope
mov
cmp
or
hlt
or
dec
ljmp
stos
sub
sub
xchg
xorl
or
mov
enter
sbb
adc
inc
cmp
arpl
shlb
mov
mov
add
mov
push
add
add
jecxz
sbb
xchg
xor
inc
mov
divb
adc
lcall
mov
lret
xchg
jmp
pop
lcall
pop
mov
cli
shrb
lods
fcmovnu
adc
test
int3
lahf
mov
aad
push
scas
mov
or
ljmp
sbb
add
icebp
xor
and
sbb
aaa
popa
and
or
mov
rcrb
push
mov
add
fldcw
ret
inc
inc
push
incb
enter
dec
ficompl
dec
sub
shufps
sbb
sbb
or
fwait
test
aam
xchg
sbb
push
dec
imul
mov
notl
repz
add
out
or
or
xor
ret
or
mov
mov
push
jae
cmp
adc
push
xchg
pusha
lret
sbb
stc
dec
or
mov
aaa
inc
lds
cmp
xchg
cmp
mov
mov
repnz
mov
cmpsl
cmp
mull
movsl
and
adc
ds
cwtl
cmpsb
loop
sbb
jnp
dec
stos
xor
sub
xor
xchg
cmp
pop
cmovne
sub
shl
lret
mov
movsl
cmp
sub
into
jp
add
cmc
dec
mov
mov
inc
xchg
je
xor
cmp
insb
lahf
mov
test
std
js
dec
cmpsb
xchg
andl
jecxz
mov
add
scas
popa
movsl
mov
adc
je
pop
jae
add
push
addb
pop
xlat
iret
mov
jo
std
roll
mov
cmpsl
imul
lock
sbb
dec
sub
inc
sbb
mov
sbb
jae
xchg
movsb
sti
pop
dec
ret
js
xor
pusha
jb
mov
lods
test
or
xchg
sarl
mov
cld
lds
jl
mov
cmp
jae
sbb
jle
pop
cltd
xor
test
int
in
aad
js
sbb
call
add
mov
lods
divl
ds
lods
mov
jl
hlt
ret
and
addr16
cld
lds
insb
leave
cmp
stos
adcl
aad
jge
and
rcll
adc
push
mov
pop
test
rorl
pop
ja
jmp
jl
mov
or
inc
mov
cmp
mov
jae
jg
fcoms
pop
sbb
jns
dec
dec
addl
daa
push
add
js
imul
inc
mov
filds
outsl
imull
sub
adc
sub
sbb
call
add
dec
pop
mov
mov
and
cmp
leave
cltd
ret
clc
cwtl
cmc
pop
mov
in
iret
mov
pushf
imul
out
movsl
fldl
or
cld
add
mov
mov
adc
fisubl
pop
cmp
int3
xchg
mov
mov
je
icebp
sub
inc
sbb
lock
xchg
loope
cmp
ficoml
jb
or
das
xor
mov
sub
or
arpl
dec
adc
inc
icebp
sbb
popf
leave
hlt
or
add
jmp
sbb
stc
mov
into
ret
insl
adc
or
scas
adc
aas
into
and
fiadds
cltd
shll
es
pop
pop
fwait
add
ds
xor
fimull
sbb
sub
pop
sub
aas
dec
jae
sub
int
cmp
fistl
push
inc
arpl
push
jg
ret
in
sub
and
mov
mov
jb
pop
jnp
lods
ds
cmc
xchg
jle
loop
inc
ss
cs
lds
push
pop
push
or
push
sbb
negl
test
lock
lock
sub
test
test
inc
mov
dec
shll
xchg
cmpsl
sbb
mov
mov
mov
cmc
movsb
xchg
cld
ss
pop
or
dec
fsubrp
inc
in
xchg
or
fadd
pop
cmp
rorb
int3
push
mov
mov
cs
leave
xchg
pushf
stc
lret
push
jecxz
or
cmp
js
mov
or
fsubp
ljmp
push
mov
push
ja
scas
sbb
push
or
pop
push
aad
int
xlat
jmp
cmp
sub
inc
js
outsl
orl
lock
adc
push
hlt
or
dec
loope
jg
in
lock
jge
or
dec
mov
jo
subl
mov
mov
aad
cmp
xchg
lahf
scas
ret
push
pusha
xor
push
movsb
out
mov
ss
mov
add
push
addr16
fstpt
cmp
jp
xor
in
cmp
dec
aad
stos
or
pop
ljmp
pop
insl
aaa
adc
cmp
fidivs
outsb
xchg
ds
ja
cmp
call
lods
seta
leave
and
mov
jge
and
adc
int
push
push
into
mov
lret
ret
sarb
movups
xchg
jbe
mov
mov
je
pop
orb
sarl
loope
inc
rol
into
subb
adc
pusha
outsb
negl
adc
adc
fidivrl
int
das
pop
pop
cmp
mov
decl
ficompl
cmp
and
mov
or
sbb
sub
dec
test
dec
decl
or
lds
movsl
xrelease
adc
mov
inc
inc
sti
pop
push
push
std
mov
xor
dec
enter
sub
frstor
push
movsb
lret
push
jae
mov
push
add
push
lods
pop
pop
xor
mov
mov
insl
repnz
xchg
pushf
shl
js
sub
adc
test
int
fcomi
xchg
xor
inc
cwtl
or
sub
in
movsb
cli
and
nop
jp
cmpsb
scas
push
mov
clc
lret
add
push
mov
jbe
jge
je
xor
inc
rcrl
cs
or
mov
jecxz
sub
sahf
dec
ds
int
ss
rclb
mov
push
and
push
out
cmp
sub
jle
sarb
scas
push
test
sahf
jno
jge
xor
pushf
dec
cmp
adc
jge
in
ret
out
cltd
dec
das
mov
sub
mov
jle
cmp
stc
push
mov
sub
fnstenv
xchg
int
jecxz
in
arpl
jl
mov
mov
ja
arpl
lahf
adc
fsubrl
in
movb
xor
mov
sbb
push
and
clc
in
cwtl
mov
sbb
bound
ss
mov
xor
and
or
std
inc
popf
jnp
sbb
add
es
lahf
daa
jnp
mov
add
sahf
insb
pop
xor
outsb
fwait
xor
xor
sub
out
aam
xor
sbb
int3
mov
leave
fistpll
cli
mov
fnstenv
add
jp
aad
loop
mov
push
loope
jnp
andnps
dec
dec
mov
mov
jmp
cmp
rcr
stos
xlat
ret
js
sub
daa
es
in
sub
sahf
movsl
pop
jns
test
jmp
pop
loope
push
xor
pusha
xchg
xchg
mov
or
clc
or
mull
cmp
push
int3
in
xor
and
mov
iret
ljmp
hlt
jns
push
lret
dec
ret
pop
call
outsl
adcb
mov
jno
sub
lret
imul
add
fstpl
inc
inc
pop
aaa
inc
scas
jnp
cmc
notb
sbb
add
adcb
imul
or
or
stos
push
xor
adc
jp
sbb
clc
add
rcl
sub
adc
stos
xor
sarb
lret
repz
mov
lods
addb
repnz
test
inc
faddl
mov
aad
out
std
arpl
hlt
cmc
sbb
push
lret
out
sbb
pusha
xchg
xchg
mov
inc
ds
sub
cld
add
or
lret
mov
xchg
pop
pusha
stos
fwait
cs
cmp
std
insl
pop
xchg
lds
add
sub
jle
pop
sub
inc
cmp
mov
arpl
dec
cmp
dec
shr
or
ljmp
into
repnz
js
out
inc
dec
das
sti
cmp
leave
add
cli
into
sbb
mov
and
cmp
arpl
arpl
or
jl
adc
mov
dec
add
inc
repnz
cmpsb
mov
adc
mov
mov
cltd
mov
mov
or
jb
fidivs
ss
frstor
jae
pop
movsb
ljmp
mov
mov
and
movsl
cmp
or
mov
and
and
sub
sarb
ret
shll
leave
and
cwtl
mov
frstor
pusha
into
mov
inc
jl
inc
pop
dec
scas
cmpsl
cmp
rcrb
mov
add
imul
jg
push
out
lcall
into
subl
lea
dec
jns
loop
mov
orl
sbb
fdivs
sub
shll
mov
sub
or
or
push
or
mov
push
inc
jmp
int3
rcll
in
jmp
xchg
sbb
lds
int3
mov
pop
jnp
pop
sub
pop
jb
das
mov
loope
xchg
push
data16
out
cmp
mov
ret
lods
fiadds
mov
xchg
dec
or
xor
sbb
mov
fs
push
pop
cwtl
psrlq
jmp
sbb
or
mov
movsb
mulb
lds
and
and
pop
psrad
or
or
hlt
push
mov
mov
inc
push
out
push
iret
sar
mov
xchg
sahf
inc
into
jb
aas
push
insl
add
push
or
mov
sub
js
filds
jl
leave
out
inc
cwtl
and
jb
in
cmp
sub
daa
test
fistpl
add
repnz
pop
fdivrl
sub
jmp
test
pusha
inc
test
fnstcw
inc
mov
inc
mov
push
and
mov
sbb
sub
push
xor
repz
sti
sbb
sti
sbb
inc
adc
sbb
dec
pushl
dec
mov
test
es
mov
ds
mov
insb
xchg
and
in
or
leave
imul
fsubl
and
lcall
add
sub
call
pop
xor
cld
shlb
out
and
cmp
xor
inc
sbb
xor
cld
xchg
cwtl
leave
insb
out
lret
in
sbb
mul
jge
roll
adc
push
movsb
outsl
xchg
push
scas
stos
xchg
stc
inc
test
and
xchg
sbb
cmpsb
fcmove
jo
rcrb
icebp
lds
iret
or
mov
fstps
int3
sub
sub
sbb
lock
jnp
xor
popa
push
fcoms
idivl
ss
mov
jecxz
dec
stc
push
decl
insb
jae
push
scas
jge
push
or
inc
lods
mov
or
mov
or
mov
adc
push
mov
loopne
adc
pop
xchg
or
jo
je
inc
pop
test
adc
push
cli
push
jecxz
incl
rcll
clc
lock
mov
lea
std
scas
call
add
jo
pushf
jae
sarl
jmp
add
mov
ss
adcb
sub
mov
jbe
adc
add
in
push
std
movsl
and
adc
xchg
xor
and
aad
cwtl
adc
or
mov
inc
push
dec
xorb
xor
inc
xlat
add
sub
xchg
jmp
jge
pushf
int
jp
cld
push
scas
fs
or
jno
ret
push
push
fidivrl
mul
push
sbb
mov
lret
mov
push
hlt
leave
add
jbe
test
test
xchg
xor
cmp
sub
mov
cmp
mov
jb
mov
dec
and
mov
jg
cltd
cmc
aad
mov
or
lret
xor
call
xor
fwait
push
add
sbb
xchg
adc
jno
dec
or
lahf
call
xor
mulb
push
cmc
xchg
fwait
xor
test
ljmp
test
jne
mov
inc
jle
inc
pop
enter
inc
xchg
pushf
and
add
or
out
or
js
cmp
cmp
mov
sub
pop
lods
mov
mov
sbb
das
xchg
enter
icebp
push
lods
nop
mov
mov
dec
push
pop
xchg
arpl
mov
pop
cmp
inc
imul
push
out
sarb
dec
fwait
or
jnp
push
pop
sbb
or
in
dec
stc
mov
fldcw
std
xchg
or
enter
mov
sub
enter
push
shlb
test
mov
jne
scas
jb
dec
in
sbb
bound
sub
test
loopne
xor
and
les
test
daa
mov
popa
pop
mov
cmpb
pop
push
data16
hlt
xor
or
imul
mov
lret
cmp
sbb
movsb
out
bound
ja
lret
fnstsw
jmp
sub
cs
push
xor
cli
and
push
and
jo
rcl
lahf
xchg
dec
xlat
dec
xor
adc
inc
add
pop
cmpsb
insb
mov
js
movsl
test
jge
and
fs
lods
cmc
push
jne
enter
test
repz
sbb
rolb
or
push
mov
out
xchg
cli
shl
dec
das
xchg
outsl
mov
std
lock
imul
scas
jmp
adc
cmpsl
les
out
inc
push
sbb
je
push
xchg
loopne
and
movsb
cld
xor
add
pop
adc
or
test
mov
xchg
pop
sbb
inc
mov
fnstenv
btrl
xchg
mov
cmp
jecxz
and
push
push
sbb
scas
mov
sahf
cmpsb
push
push
jns
dec
push
out
loop
lahf
sti
lods
xor
and
movl
outsb
addr16
mov
rcr
cwtl
xchg
rcrb
test
shl
das
xlat
inc
xchg
inc
repnz
sbb
mov
pop
jae
dec
popa
jno
mov
sbb
inc
mov
xchg
jo
inc
cmpsb
pop
das
inc
in
sub
cs
lret
xchg
repz
je
in
or
cmpsl
xchg
jnp
andb
xor
lcall
inc
imul
pusha
pop
pop
push
xchg
dec
pop
inc
lret
clc
pop
mov
stc
and
fnstsw
hlt
ja
sub
xchg
aam
xchg
aaa
fdivl
sahf
cltd
cld
ds
dec
lea
inc
outsb
cmpsl
xchg
ret
stos
sbb
and
hlt
or
cwtl
pop
mov
cmpl
scas
jae
sbb
mov
jnp
loope
ljmp
jae
test
or
aad
int
gs
decl
rorb
push
int3
cs
shrl
insl
lds
pop
mov
xlat
ss
sub
jecxz
xor
lds
xchg
pushf
insl
sub
xlat
ss
jp
shll
pushf
test
pop
int3
xchg
stos
and
mov
mov
cmp
imul
cmp
stos
and
pushf
movsl
adc
mov
je
dec
push
and
mov
sbb
cmp
movsb
xchg
push
and
jno
mov
arpl
inc
mov
and
cmc
outsb
cmpsl
lds
xchg
adc
cmp
adc
psrlq
repnz
mov
mov
shlb
fidivrl
sbb
xor
sub
push
lret
std
insb
pop
sub
or
jl
inc
cmp
les
std
sbb
adc
pop
sbb
out
inc
dec
inc
jbe
mov
mov
mov
mov
out
pop
add
hlt
pusha
mov
loopne
mov
mov
jns
and
sub
mov
mov
and
inc
mov
and
mov
or
adc
aaa
outsb
repz
xchg
dec
lods
cwtl
push
dec
push
fistps
mov
add
in
mov
pop
jge
fiaddl
push
popa
adc
and
inc
push
testb
je
std
mov
or
fmuls
ss
or
daa
cmp
pop
xchg
arpl
or
push
fisttps
clc
sub
lcall
push
sbb
lcall
mov
mov
inc
imul
cwtl
jnp
lea
addr16
fcoms
or
lret
mov
test
mov
leave
icebp
out
loop
add
mov
lret
orb
dec
in
pop
push
adc
push
xchg
jne
mov
sub
mov
mov
fidivl
cmpsb
mov
pop
xor
stos
jmp
cltd
das
mov
xchg
scas
bound
adc
xchg
pop
dec
push
and
xlat
mov
mov
stos
pop
out
sub
cmp
clc
dec
xchg
pop
pop
jg
pop
add
shl
adc
enter
push
adc
enter
daa
xor
pop
lea
pop
fsubrs
jmp
shll
shlb
xor
or
popa
stos
je
mov
or
mov
loop
inc
xchg
inc
cmc
sbb
movsb
xchg
int3
push
testb
jg
scas
inc
sub
loop
mov
push
push
in
and
jp
movsb
cmp
mov
in
lods
out
or
cld
jge
fwait
fwait
add
test
stos
into
cmp
add
and
sbb
xor
insb
xor
push
xor
inc
fcmovnu
and
leave
mov
inc
addr16
adc
lret
cmpsl
cmp
cmp
ja
inc
loope
adc
dec
mov
dec
or
fs
hlt
popf
into
in
mov
adc
inc
mov
jns
out
add
jae
inc
lahf
adc
mov
xchg
inc
leave
add
fdivp
dec
cmp
aas
mov
dec
lods
push
sbb
leave
inc
insl
mov
mov
add
lock
es
and
sub
dec
xor
das
test
sub
and
add
es
out
movsb
insl
jo
cmp
pop
push
in
jae
outsb
shrb
loope
dec
sbb
xor
lock
repnz
pop
mov
into
daa
pop
das
test
and
or
cmp
xor
clc
fstpl
andb
xchg
lret
xlat
aaa
mov
out
mov
loopne
fiaddl
ljmp
inc
int3
dec
pop
mov
cmpsb
loop
pop
pop
imul
adc
lahf
push
mov
mov
shlb
enter
call
movsb
out
insl
cmp
lods
sbb
nop
xchg
or
movb
aas
mov
push
cmpsl
mov
es
add
outsb
jmp
lret
jmp
jae
cmp
insl
push
loope
stos
inc
in
jnp
into
or
addr16
mov
mov
push
lret
out
mov
mov
js
adc
xor
xchg
push
cmp
cmp
cs
push
scas
jl
xchg
push
ficoml
mulb
push
sarl
jns
jb
in
adc
sbb
xchg
mov
cmpsl
lahf
sub
or
ja
test
imul
lahf
adc
mov
arpl
filds
hlt
add
inc
or
lds
mov
pop
decl
xchg
xchg
dec
or
popf
pop
push
xor
cmc
mov
in
stc
out
ret
jle
lea
inc
jmp
cmp
mov
mov
test
jbe
mov
ss
dec
test
push
xchg
xor
mov
lds
cmc
push
stos
fstps
mov
jmp
mov
jmp
dec
mov
adc
xchg
mov
lods
jnp
pushf
cmp
xchg
pushl
pop
mov
inc
int
lds
push
aad
xor
add
repz
inc
cmp
cmp
outsb
mov
sbb
ret
mov
mov
stos
mov
sbb
xor
xchg
mov
sub
ja
inc
pop
xor
or
cs
aas
neg
inc
imul
xor
je
inc
mov
fwait
cs
mov
jp
pusha
mov
mov
pop
jns
xchg
iret
pop
push
repnz
push
xlat
lods
jnp
mov
and
mul
xor
orl
push
pop
cltd
daa
push
mov
lods
and
cmpsb
mov
bound
decl
adc
testb
mov
or
int
lcall
jp
push
pusha
mov
push
mov
mov
sub
arpl
sbb
pop
mov
inc
adc
or
jl
je
jbe
nop
cmp
mov
xchg
daa
aas
cmp
xor
in
push
pop
mov
mov
inc
pop
sbb
fwait
add
lea
mov
cmp
xchg
xorl
les
cwtl
les
rcr
out
lock
and
jne
leave
jp
out
or
fdiv
push
enter
inc
sbb
fwait
mov
xchg
jb
adc
addb
add
sub
xor
ret
mov
push
fldcw
jbe
cli
cmp
xor
cli
sbb
push
inc
ss
decl
sti
subb
xlat
hlt
jne
insb
jge
xchg
out
out
dec
gs
push
shrl
mov
jne
ljmp
mov
jb
xor
and
out
fucomip
into
ret
shl
push
xor
pop
mov
mov
mov
loop
cli
ds
pop
ret
stos
ja
daa
xor
xorb
popf
and
in
fistpl
fsubl
mov
pop
mov
push
fidivl
sbb
int
daa
lcall
cmp
loope
mov
pop
adcl
decb
push
scas
cmpsl
cmp
push
pop
out
mov
cmc
jmp
xchg
imull
bound
add
sub
xor
xchg
ja
js
into
adc
cmp
movsl
push
inc
pop
mov
mov
shrb
push
pop
dec
jae
pop
inc
ret
pop
cmp
sbb
daa
jns
outsb
xor
mov
push
fwait
ljmp
mov
cmp
inc
mov
mov
push
mov
xchg
mov
sub
addr16
cmp
shlw
push
adc
cmp
xchg
daa
sti
inc
loopne
leave
data16
fcoms
xchg
ret
mov
lcall
sahf
sbb
sbb
sbb
cmp
sbb
popa
lods
mov
lock
pop
mov
movsb
mov
mov
adc
xor
aaa
push
js
lock
xorb
or
cmp
leave
cltd
dec
ss
dec
jns
xchg
sbb
das
dec
mov
movsl
arpl
dec
pop
pop
sahf
int3
xchg
pop
roll
test
out
mov
mov
push
sub
sub
or
xor
cwtl
int
out
or
bound
mov
xor
jmp
mov
ds
jg
mov
nop
xor
sub
jbe
lret
jge
int
inc
push
fldcw
and
mov
mov
add
jne
mov
ds
pop
inc
xor
mov
pusha
setl
mov
fmull
lods
popf
scas
cmpsl
push
and
std
push
pop
push
sbb
popw
sub
add
sti
outsb
push
out
test
mov
xchg
xor
inc
out
cs
sbb
repnz
cmp
push
lods
and
push
push
mov
fdivr
or
mov
rcll
leave
inc
popa
jp
pop
loope
pop
adc
jp
sub
sub
pop
or
mov
jg
outsl
shl
xchg
in
sarl
aaa
ss
hlt
cmp
clc
cmpsl
lcall
leave
adc
bound
out
xchg
push
adc
jg
mov
gs
adc
cli
push
cmp
adc
lds
fs
jmp
mov
test
or
mov
adc
sub
fwait
sub
mov
loopne
jmp
cli
jecxz
jecxz
stc
out
out
scas
popf
dec
mov
jecxz
fucom
adc
fnsave
fiaddl
sub
pop
add
adc
push
push
or
repz
cmc
int
xchg
ja
pop
add
mov
call
andl
mov
out
ret
mov
cmp
les
adcb
sub
into
push
aaa
and
fld
sarl
xchg
out
push
aam
fcom
movsb
data16
pop
xor
int
loop
pop
cs
rorl
dec
roll
mov
call
sub
mov
jge
and
mov
adc
test
inc
inc
jmp
jae
and
dec
and
mov
call
sub
in
pusha
add
mov
or
outsb
popf
dec
cmp
inc
cmc
data16
out
inc
pop
sub
xor
insb
stos
inc
and
daa
cmp
sbb
adc
adcb
jne
jg
xor
cwtl
or
or
cmp
xchg
lods
push
movsl
add
fcmovb
in
cmc
lods
shl
sub
add
add
pop
fcoml
cld
cmp
insl
mov
pusha
cmp
into
xor
or
jp
ret
test
push
fcmovne
enter
sub
fdivs
repnz
invd
inc
popa
inc
adc
popa
lods
cmpsl
mov
popf
mov
jl
jl
call
mov
jp
xchg
jae
popl
xchg
push
mov
loope
pop
out
dec
xchg
push
dec
mov
enter
pop
je
in
sbb
std
repz
stos
sbb
pop
repnz
arpl
cmp
inc
mov
mov
shr
mov
rorb
pop
xchg
or
fistps
or
add
cmp
cwtl
inc
xor
or
pusha
mov
xchg
fcoml
leave
sbb
retw
jp
jmp
ret
fsubrs
sub
ret
adcl
mov
or
adc
mov
dec
xor
or
arpl
fsubrs
and
sbb
popf
aad
lahf
mov
getsec
mov
sub
xchg
lret
daa
test
cmpl
ret
adc
pop
jne
mov
arpl
push
rorb
js
jns
and
jl
int3
pop
test
push
jae
adc
addr16
fiaddl
lock
fnstenv
ds
je
lock
div
dec
cmp
lds
lret
popa
dec
dec
popf
xlat
repz
ret
dec
xor
vmwrite
jnp
bound
into
dec
dec
in
movsb
or
inc
int
xchg
neg
pop
lret
adc
imul
add
sbb
mov
fisttpll
stos
shll
outsl
decl
aaa
aaa
gs
nop
sub
mov
test
push
lds
testb
xor
mov
jg
sbb
mov
sub
fldenv
add
cmpsb
pop
leave
sahf
and
xchg
jnp
add
ret
mov
jne
faddl
sbb
inc
mov
pop
ficoml
jne
push
scas
int3
out
inc
mov
pop
sub
mov
mov
dec
leave
xor
mov
and
stc
insl
adcl
loop
xchg
pop
lock
cmp
insl
push
cmpsb
ja
pop
sub
js
sbb
mov
xor
sbb
or
or
les
lods
cmpsl
dec
sub
and
push
dec
movsl
loopne
int
and
inc
inc
fdivr
xchg
int3
insl
lds
dec
je,pt
xchg
rcrb
xor
sahf
lods
jne
test
and
stc
xor
mov
std
bound
ljmp
or
xchg
xchg
xlat
mov
out
sub
daa
int
dec
cltd
fstpl
xlat
push
add
mov
std
insl
sub
cltd
sarb
inc
incl
and
jns
sti
mov
jnp
insb
and
jbe
insl
jbe
lock
inc
mov
dec
lret
popf
std
js
ret
sub
pop
leave
pop
out
data16
jp
dec
push
cmc
sbb
fwait
daa
or
jmp
and
sbb
loope
stos
movsb
int3
sahf
pop
sahf
dec
lds
mul
mov
leave
mov
xchg
add
es
sub
push
push
aaa
jae
iret
mov
sub
jge
aad
push
stc
sbb
into
xchg
or
sub
jbe
bound
xchg
in
cli
push
lds
pop
sbb
pop
jle
cmp
mov
in
imul
mov
int3
cmp
stos
mov
mov
push
pop
sub
sub
dec
sub
addr16
test
mov
dec
leave
or
or
mov
pop
ret
cld
in
inc
fst
aas
aam
push
xchg
jns
jmp
xlat
and
pop
ret
mov
sbb
cmp
jmp
and
sub
xor
addl
int3
data16
xchg
cmc
sbb
outsl
dec
sub
xchg
popl
add
mov
sbb
outsl
jg
sub
or
cmc
jl
sub
mov
or
rcl
xor
mov
or
cmp
fisttpl
loop
xor
mov
adcb
arpl
sarl
lds
andb
mov
jb
fisubrl
ret
cmpsb
xlat
xor
fnstcw
fsubrs
cmp
dec
mov
in
sahf
jnp
mov
daa
jp
in
or
fistl
jecxz
inc
movsb
int3
inc
cltd
jo
mov
insl
test
mov
mov
xchg
addl
cmpsl
mov
popa
popa
outsl
neg
inc
pop
in
insb
jbe
or
xchg
jne
xchg
mov
lahf
mov
mov
ss
or
fsubr
mov
aad
xchg
and
iret
pop
stos
xchg
aam
pop
stos
mov
movl
xchg
inc
push
in
dec
popf
lods
and
cltd
xor
cmp
adc
lret
jbe
loope
pop
push
add
das
mov
jns
mov
lea
aad
push
aaa
jo
mov
rcrl
out
lock
insb
into
and
pop
aam
dec
push
mov
out
push
add
xchg
push
rcl
outsl
dec
movsb
mov
add
mov
in
ljmp
pop
lret
out
mov
add
test
cld
and
mov
pop
hlt
or
mov
add
rcrl
cli
mov
mov
testb
sbb
cmc
hlt
dec
lcall
push
dec
pop
dec
add
add
mov
aas
and
repnz
in
dec
pusha
sbb
jp
enter
adc
xchg
dec
mov
andl
push
jmp
add
cmp
and
xchg
enter
mov
jbe
andb
les
popf
and
insl
in
das
xchg
pop
dec
jl
addr16
loop
add
loopne
push
push
sub
movsl
lahf
mov
mov
or
roll
push
jns
int
fwait
enter
dec
andl
mov
add
js
jno
pop
clc
pop
cli
xchg
fcoms
bound
and
test
mov
gs
and
inc
sbb
in
lock
jne
leave
and
shrb
ficompl
mov
xchg
into
inc
int
fsubrs
jl
icebp
pop
xchg
lds
sti
xlat
xchg
cwtl
jge
dec
cmp
lds
insb
inc
shr
loopne
lcall
icebp
mov
and
pop
popa
cmp
push
in
add
subb
gs
lret
mov
push
movsb
cmpsl
icebp
ja
cmp
add
movsl
ret
call
adc
pop
andl
scas
cld
aam
test
mov
pop
xchg
shll
sbb
jns
inc
pop
or
out
mov
sbb
mov
xchg
push
movsl
mov
sub
sub
cld
js
or
addr16
dec
leave
mov
inc
mov
pop
sub
cmp
inc
jle
orl
sbb
mov
mov
or
xchg
lods
mov
dec
fmull
fwait
pop
ds
dec
idiv
out
cltd
outsl
push
sahf
jmp
jecxz
cmp
adc
sbbb
fisttps
mov
mov
movsl
push
mov
cwtl
into
pop
inc
push
pop
push
and
popf
rorb
stos
stc
scas
add
dec
sbb
test
cmc
idiv
inc
imul
lcall
xchg
cli
inc
xor
xchg
dec
cmp
or
test
mov
call
insb
mov
insl
mov
inc
dec
xchg
push
add
fiadds
loop
pop
repnz
lea
rcrl
mov
mov
pop
mov
into
sub
pusha
or
mov
lret
or
or
ret
add
in
and
subl
ljmp
pop
in
daa
aaa
xchg
fwait
stc
dec
in
inc
adc
sbb
mov
fs
andb
lcall
clc
jns
and
les
add
add
or
in
cld
aam
add
xor
cmpsl
add
sub
jg
cli
inc
mov
data16
out
mov
sbb
xchg
adc
test
lods
mov
jmp
adc
lds
daa
pop
sub
xchg
rorb
add
enter
bound
lods
mov
loopne
std
xchg
lcall
add
stc
sbb
jl
mov
jne
repz
and
aad
hlt
mov
push
jp
and
adc
and
sub
fistpll
jne
jge
mov
lret
xchg
dec
in
inc
rolb
mov
mov
daa
es
es
clc
mov
loop
pusha
out
xchg
aam
mov
mov
in
fidivrl
dec
jle
sbb
cmovno
mov
insb
aas
inc
push
mov
xchg
cli
dec
andl
add
ja
xchg
sbb
fs
push
cltd
dec
xchg
or
pop
js
inc
mov
add
pusha
push
xchg
cwtl
or
cli
xor
bound
pusha
xor
hlt
lret
and
pop
mov
sarb
jnp
cmc
adc
dec
punpcklbw
lods
fcoml
lock
mov
cltd
rol
fidivl
insb
jg
dec
ret
fisubs
mov
scas
les
mov
arpl
aaa
test
add
pop
jno
push
xchg
mov
xlat
fstp
addl
aam
rcrl
push
jge
int3
and
sbb
and
push
addr16
xchg
das
divl
je
out
shlb
push
mov
sub
pop
sbb
sub
jne
add
add
lret
jp
and
js
jns
dec
lcall
lock
jmp
xchg
add
inc
popa
pop
cmp
shl
jge
es
sub
or
lea
push
or
bsf
fcmove
js
mov
in
dec
into
mov
xchg
jbe
ret
lret
test
add
das
xlat
rorb
test
in
je
loope
ret
int
and
inc
xor
add
jb
jb
push
cmp
push
bound
push
sbb
or
adc
dec
out
movsl
adc
hlt
clc
xlat
loopne
sahf
les
shll
push
mov
pop
or
or
stos
rcrl
decb
sub
adc
cmp
arpl
outsb
xor
arpl
jg
adc
mov
cwtl
arpl
scas
push
inc
or
and
mov
int
push
rolb
xchg
push
insl
inc
mov
imulb
loopne
shrb
outsl
adcl
shl
out
mov
and
arpl
fistps
lock
sub
adc
hlt
lods
stos
add
pop
cmp
scas
xor
cmp
int3
lods
decl
inc
xchg
and
adc
test
in
xor
xchg
mov
mov
push
dec
pop
lods
inc
jno
pop
popa
push
mov
add
imul
jae
xchg
das
xchg
push
test
xor
cmp
enter
mov
xor
std
sti
out
pop
inc
pushf
xor
sbb
jecxz
jnp
ds
dec
cmp
mov
jp
test
pop
lahf
mov
pop
shrb
rcr
fmuls
mov
sub
mul
pop
xor
subl
lods
enter
sbb
rclb
out
and
jge
xor
scas
ffreep
sahf
push
js
outsb
pop
popf
rcll
push
xchg
shll
add
jge
fcomps
fs
sub
test
sbb
xor
and
mov
sahf
dec
or
fstps
xchg
arpl
neg
and
push
mov
ss
leave
and
dec
push
shl
lds
lret
adc
mov
cwtl
movsb
std
popf
fwait
sub
cmp
mov
pop
ror
xchg
jp
shrb
pusha
fisttpll
cmpsl
hlt
mov
inc
dec
mov
xchg
xchg
mov
mov
push
cmpsb
jmp
jb
adc
push
fcmovne
cwtl
jecxz
xchg
inc
mov
mov
loopne
ljmp
xlat
std
mov
adc
pushf
fs
pop
mov
jle
int
cmp
ret
adcl
xor
or
ja
popl
jo
mov
mov
mov
sahf
fadds
aaa
cmp
push
jp
dec
int
ss
mov
lds
xchg
or
xor
popa
int3
xor
loopne
repz
leave
imulb
mov
pop
or
push
mov
frstor
jb
cld
int
pop
bound
js
test
out
call
dec
jl
les
fistl
stos
fcmovu
cwtl
mov
cmp
add
add
adc
mov
loop
mov
arpl
or
xchg
mov
iret
dec
insl
inc
mov
jp
mov
out
shl
or
sub
jbe
cli
loope
dec
dec
in
inc
push
mov
inc
ficoms
in
out
int3
mov
mov
mov
cmpsl
add
enter
inc
mov
xchg
fcmove
jnp
dec
jle
stc
movsb
frstor
out
rol
sbb
add
dec
mov
int
cmpsl
xchg
cmpl
xor
dec
xor
inc
sub
ss
mov
mov
aam
mov
mov
pop
jmp
mov
xchg
aas
ret
pop
mov
les
int
daa
out
lds
bound
mov
cmp
out
pop
shll
es
fstpl
aaa
out
lret
dec
dec
cmp
adc
pop
mov
call
pop
xchg
cli
dec
insl
mov
dec
and
xor
xor
dec
mov
and
and
nop
sti
std
shrl
xor
rolb
icebp
pop
scas
lock
sub
mov
mov
sub
push
xor
clc
inc
xchg
jnp
and
mov
inc
mov
pushf
xor
lods
mov
sub
addr16
and
pop
scas
adc
lods
mov
jecxz
push
mov
lret
jnp
inc
mov
push
jne
jae
or
fsts
cmp
dec
and
pusha
jecxz
js
push
jg
cwtl
sahf
lret
repz
lods
das
mov
ja
xchg
call
mov
dec
xchg
fidivrs
push
cltd
mov
push
std
insl
push
mov
bound
push
loopne
test
dec
push
push
rorb
ljmp
inc
mov
enter
fcoml
inc
mov
mov
mov
add
adc
insb
jno
sbb
imul
jae
cmp
cmp
call
jmp
enter
sar
dec
xchg
icebp
sub
lods
hlt
sbb
lret
cmpsb
sbb
inc
test
pop
jb
mov
lret
cmp
sarb
dec
insl
adc
mov
iret
mov
dec
jecxz
xor
lcall
mov
stc
sbb
add
xlat
imul
push
xchg
pop
sbb
rcl
or
imul
cmp
rcr
fs
jmp
leave
pop
dec
or
rcrl
sub
sbb
adcb
into
repnz
pop
pop
into
or
mov
test
shlb
sub
in
cld
push
movsl
lods
mov
mov
loope
shlb
dec
iret
jmp
mov
push
mov
cmp
mov
inc
xorb
notb
and
adc
xlat
xor
sub
mov
lahf
push
pop
sbb
ret
mov
hlt
xchg
dec
cmpsl
cmpsb
clc
fs
lock
gs
fidivl
mov
inc
cmp
out
mov
push
loop
aam
sti
mov
xor
xchg
cld
jmp
ljmp
or
jbe
push
and
lods
pop
push
pop
sahf
loope
cmpsb
mov
and
xlat
mov
sub
mov
stos
pop
scas
xor
sti
xchg
sar
inc
mov
into
add
inc
xor
je
xor
fwait
ljmp
sbb
xchg
cmp
push
popa
xlat
fiadds
xchg
add
data16
jmp
nop
jns
cmp
push
mov
sub
es
or
shll
leave
imul
add
ret
shll
xchg
sahf
loop
loopne
mov
add
into
pop
xchg
cmc
xchg
mov
sbb
and
xlat
pop
hlt
sbb
fdivp
fwait
ds
nop
cmpsb
cmp
insl
mov
adc
add
pop
jbe
pop
and
mov
mov
add
push
lahf
repnz
lds
pop
or
dec
ret
cwtl
std
jecxz
or
subl
and
xor
sbb
ss
or
jbe
loop
mov
cwtl
leave
push
cs
js
out
mov
and
pop
jbe
ljmp
mov
jecxz
mov
lcall
sub
aad
inc
cltd
jmp
mov
inc
dec
iret
mov
cld
pop
xlat
mov
mov
outsl
inc
xor
adc
push
loopne
sarb
pop
inc
pop
xchg
inc
jmp
adc
cwtl
test
test
push
xor
adcl
icebp
xor
inc
shrl
in
jno
test
dec
ja
mov
mov
mov
test
mov
stc
insl
insb
sti
sub
leave
xor
jl
fldenv
es
leave
sbb
pop
mov
in
jbe
dec
jae
loop
add
bound
xor
loop
test
leave
mov
je
lahf
popl
das
mov
xor
icebp
and
mov
mov
push
add
sbb
ret
call
and
enter
pushf
cs
dec
dec
scas
push
xchg
call
pop
cmp
pop
enter
dec
shrl
repz
dec
xchg
cmpsw
hlt
aaa
sbb
inc
les
dec
cmp
test
icebp
sub
and
adc
sub
adc
fwait
adc
outsb
inc
cmp
pushw
mov
outsl
mov
jecxz
sub
notb
add
fidivs
sbb
mov
push
insb
fsubs
jo
pop
xchg
or
aam
cmp
push
sti
dec
ds
xor
fstpt
aad
pop
inc
add
fcomps
aam
loopne
mov
imul
test
into
jnp
sbb
cmc
push
jns
je
xchg
mov
adc
rcr
dec
loopne
jl
loope
test
or
test
pop
pop
mov
aas
stos
in
insl
mov
addr16
pop
fiaddl
mov
mov
hlt
std
and
lret
out
xchg
mov
inc
xor
dec
mov
sbb
xchg
pushf
jnp
roll
mov
xor
and
ds
lcall
mov
mov
mov
adc
xchg
fucom
aas
bound
mov
mov
jns
call
mov
sub
pop
push
dec
mov
mov
movb
pop
enter
orl
cld
lcall
lea
dec
sbb
sti
lods
xor
sbb
mov
mov
xchg
lret
cmpsb
mov
xchg
or
jp
push
mov
sbb
rcll
aaa
xor
repz
int
pop
mov
push
out
jg
or
repz
jecxz
sub
xor
xor
mov
push
adcb
and
movsl
cmpb
xchg
aas
pop
mov
adc
dec
mov
leave
xchg
add
sti
scas
insl
test
adc
in
push
mov
lcall
jle
adc
jns
add
rorb
push
je
out
mov
jo
push
je
ljmp
les
rcrb
fstps
push
inc
jge
les
jecxz
push
jne
cwtl
out
test
lds
xchg
lret
sub
in
jmp
enter
mov
or
shlb
add
mov
movsb
jmp
push
adc
cmp
mov
mov
out
jmp
in
mov
add
fdivs
inc
or
in
mov
out
add
loope
out
stc
lret
jnp
push
add
stos
sub
mov
hlt
jl
jno
xor
iret
out
mov
fcompl
pop
leave
stos
std
sub
and
das
push
adc
mov
mov
dec
sub
inc
xlat
or
xor
and
and
inc
xchg
sub
cmp
mov
xchg
add
fisttps
or
mov
mov
stos
adc
in
pop
sbb
jae
in
out
sti
fdivrp
mov
dec
lock
sub
fsubrp
in
and
dec
orl
cs
mov
cmp
ds
in
sub
ljmp
mov
shr
jecxz
mul
daa
sub
aas
add
insb
jnp
pop
ficompl
jle
in
xor
jge
out
jns
xor
dec
scas
fwait
lret
movsb
dec
test
ljmp
mov
pop
dec
fisttpl
and
addb
jnp
sub
aas
inc
inc
pop
sub
ret
outsb
jae
and
xchg
ret
pusha
stos
adc
mov
mov
lods
out
jno
lock
in
push
mov
popa
bound
mov
out
or
add
mov
xlat
push
fs
dec
lret
pop
push
mov
xchg
sbb
mov
or
scas
leave
or
stc
and
dec
imul
dec
mov
jno
lahf
call
push
movsl
xor
inc
loop
orb
jmp
mov
jnp
sbb
jne
lock
inc
adc
icebp
out
loop
pop
sub
aad
fiadds
jle
ja
adc
cmpsl
sti
fistps
push
mov
jb
jl
test
mov
shrb
sbb
mov
call
in
add
pop
pop
sbb
inc
dec
enter
cltd
in
lahf
lea
add
inc
ljmp
int
xchg
fs
inc
data16
aam
addr16
mov
dec
adc
mov
sbb
test
xchg
and
jl
shll
out
pop
pop
or
je
xlat
push
cltd
or
pop
in
roll
inc
fmul
outsb
pop
repz
insl
mov
push
dec
jg
stc
adc
gs
or
shrb
sub
lcall
mov
arpl
cltd
push
sbb
jo
test
fisubl
aaa
cmp
enter
xchg
in
cld
cmc
mov
insl
test
shl
cmp
pop
push
inc
scas
lret
cmpb
cli
sub
mov
jle
cmpsl
or
mov
jecxz
ljmp
aas
push
sbb
cwtl
xchg
das
stos
mov
mov
js
cld
push
and
fs
mov
andw
and
mov
clc
call
test
aas
enter
pop
inc
cwtl
loopne
cli
adc
lcall
sub
out
out
and
in
jle
ja
mov
cmp
push
lgs
gs
shlb
sub
jnp
jmp
xchg
cmpsb
mov
lcall
jge
mov
aad
and
push
das
pushf
into
mov
xchg
add
jno
out
lret
and
cld
cmp
jge
clc
push
cli
cmp
mov
lret
outsl
inc
push
out
icebp
mulb
push
loopne
repnz
inc
mov
pop
xchg
mov
mov
inc
push
push
sub
repz
mov
ror
sub
cmp
orl
push
push
loope
jns
inc
ss
mov
lods
xor
pop
pop
and
icebp
pop
lds
les
inc
mov
arpl
xchg
or
aam
sub
pop
sar
addr16
sbb
call
pop
xchg
arpl
bound
jecxz
and
cmp
cld
sbb
xlat
loop
or
in
and
loopnew
cmc
out
pop
lds
jae
dec
sbb
mov
lahf
jge
jnp
iret
or
push
mov
insb
movsl
clc
dec
dec
daa
or
lds
sub
sub
out
xchg
push
arpl
out
subb
test
call
outsl
inc
out
test
jbe
jnp
mov
sbb
dec
cld
mov
and
or
lods
mov
cmp
cld
inc
xchg
and
push
test
mov
or
push
jne
imul
fstps
pop
push
push
or
pusha
xchg
outsl
shl
cmc
inc
ljmp
js
sub
inc
out
pusha
ja
fwait
mov
add
and
stos
loope
mov
ret
outsb
insb
cmp
popa
push
fisubrl
les
cmc
push
shrb
dec
xchg
sbb
shll
xchg
into
test
test
rorb
push
mov
enter
aam
sbb
dec
and
and
aas
xchg
mov
sahf
xchg
inc
pop
cltd
jno
lahf
icebp
addl
hlt
cmpb
nop
pop
adc
shrl
pop
mov
dec
and
insb
jp
pop
movsb
adc
mov
jle
mov
and
inc
pop
mov
mov
insl
or
mov
lods
or
push
or
xor
jnp
jg
inc
cmp
sbb
rclb
test
pop
ja
addb
adc
sbb
and
mov
mov
mov
testl
in
fsubp
xor
gs
pop
gs
imul
dec
sub
cmp
fadd
ret
jle
or
mov
sbb
loope
cmp
loopne
dec
in
lods
inc
aad
xchg
aam
mov
mov
mov
ja
std
sbb
xchg
push
push
mov
mov
push
std
add
popf
mov
sub
xor
shlb
loope
xchg
mov
inc
pop
fstps
adc
jle
loope
sti
cli
rcr
mov
mov
in
sub
mov
mov
and
inc
cli
rolb
test
test
push
xor
jno
mov
popl
ss
push
cmp
push
addr16
push
add
pop
and
inc
mov
push
ret
adc
push
dec
cld
out
pop
test
mov
adc
jns
repnz
cmc
cmc
push
push
mov
lea
test
stos
jecxz
outsb
sbb
outsl
je
ss
jle
mov
iret
out
mov
repnz
jle
xchg
xor
stos
push
inc
pop
push
jnp
test
pusha
inc
hlt
cltd
popl
mov
inc
ljmp
enter
rcrb
mov
push
push
push
jbe
mov
outsl
and
jo
lock
cs
add
push
and
imul
stos
push
lret
sbb
pop
mov
cs
add
adc
mov
scas
pop
xchg
mov
test
cmp
push
pop
inc
out
mov
push
jmp
and
cmpsl
fsts
add
pop
mov
movsb
pop
inc
and
lea
cmp
adc
leave
subl
xchg
sbb
mov
mov
cld
cmpsb
call
pop
lret
sub
dec
imul
fwait
outsb
ljmp
das
lahf
xor
pop
out
pop
insb
lcall
cmp
sub
mov
addb
in
xor
pop
leave
and
jecxz
repz
fisubs
push
pop
push
lahf
jecxz
outsb
mov
sub
nop
mov
arpl
adc
mov
in
dec
push
adc
xchg
sub
sub
cmp
adc
imul
push
fiadds
or
fisttpl
jno
and
sub
sahf
outsb
pop
ljmp
clc
je
lods
lock
or
test
xor
inc
aaa
hlt
and
push
pop
stos
outsl
cli
pop
sete
adc
das
aaa
ds
call
fimuls
scas
pop
aad
test
loope
xchg
pushf
dec
xchg
in
insb
lock
pushf
stos
stos
shl
imul
cld
sub
leave
ds
lock
decl
push
stc
ds
fs
popa
je
stos
or
repz
or
popf
testl
or
ret
cmp
jae
jp
loop
ret
adc
test
js
scas
adc
adc
repz
arpl
inc
jge
mov
xor
fnsave
cltd
out
and
fidivl
xor
pop
imul
pusha
dec
sub
popa
mov
cmp
loope
pop
lds
les
and
int
in
add
xchg
jno
xchg
cmp
mov
adc
aad
sbb
inc
addr16
inc
cmp
stos
lret
mov
fsubrl
js
enter
mov
fnstenv
outsb
ja
pop
pusha
repz
in
jecxz
jnp
jno
in
addr16
shlb
jmp
stos
add
enter
inc
jecxz
pusha
mov
sbb
test
sbb
fwait
adc
int
or
sub
mov
mov
subb
or
sbb
filds
and
fistl
daa
enter
pop
pop
add
lahf
xor
mov
shrl
iret
lock
dec
not
or
pop
xchg
sbb
mov
add
cmp
add
mov
loope
mov
sbb
rcll
sbb
sub
and
add
jmp
cltd
jmp
popl
fidivs
mov
and
cmc
jle
out
pusha
mov
mov
pop
stc
pop
fldt
lahf
rclb
aas
leave
stc
push
lret
inc
int3
pop
in
icebp
movsb
stos
leave
and
in
mov
sub
xor
clc
sbb
jno
jmp
mov
adc
xchg
mov
push
mov
pop
daa
lods
out
call
lds
jb
and
dec
lods
aaa
aam
mov
movsb
mov
fdiv
push
pushf
xchg
dec
dec
cmpsl
int3
ds
mov
xchg
jne
add
cmpsl
adc
arpl
ret
add
push
out
xchg
cmc
sti
fisttps
lcall
addl
dec
xor
out
sub
scas
outsl
jge
and
imul
test
pop
push
add
xor
or
push
xor
sar
stc
mov
clc
mov
or
imul
test
mov
fldlg2
mov
mov
aam
jo
xchg
mov
or
insb
cmp
enter
out
gs
sbb
mov
jecxz,pt
aas
pop
mov
and
pop
inc
dec
loop
dec
dec
movsl
add
push
into
sub
mul
jl
outsl
leave
mov
jmp
xchg
lcall
or
sti
xor
or
adc
or
cmp
repz
iret
push
and
sbb
mov
mov
inc
inc
add
adc
test
mov
dec
test
ljmp
push
loope
stc
iret
fsubrs
shl
inc
push
nop
push
xchg
sbb
jo
rclb
adc
shrl
hlt
jl
mov
js
aaa
movsb
fs
xor
into
js
ret
mov
pop
int
mov
stc
push
popa
repz
psrlq
mov
inc
xor
fsts
mov
mov
mov
movsl
aam
mov
fs
cli
inc
cmpsb
testl
ds
out
scas
mov
js
add
jmp
ljmp
sbb
cmp
rclb
sbb
jmp
sbb
es
js
shl
sti
mov
popa
data16
in
inc
lds
sub
into
sbb
mov
lock
sbb
push
inc
je
inc
mov
pop
movsb
stc
sub
push
pusha
ds
lods
in
js
mov
ljmp
mov
ljmp
hlt
jae
mov
into
jbe
add
or
cmp
mov
scas
lods
mov
cmp
add
je
add
popa
insb
insb
add
outsb
add
add
popa
add
jb
imul
add
add
add
add
add
imul
add
add
push
popa
outsb
arpl
push
add
add
add
outsl
add
insb
add
add
dec
add
jb
add
add
jo
jae
gs
add
jae
add
add
add
push
add
add
add
add
je
gs
add
add
outsl
data16
bound
insb
add
add
add
add
add
add
add
add
add
add
add
add
add
insb
popa
push
add
data16
add
add
add
add
arpl
fs
outsb
je
add
jae
popa
jb
add
outsb
add
jb
add
outsl
insl
