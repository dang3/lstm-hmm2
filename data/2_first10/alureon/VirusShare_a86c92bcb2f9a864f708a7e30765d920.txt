push
mov
sub
sub
mov
call
mov
mov
mov
add
sub
movl
addl
movl
sub
call
pushl
pop
call
mov
add
add
inc
cmp
jne
add
add
jmp
mov
sub
movl
add
ret
mov
lea
mov
add
mov
add
cmp
jae
add
nop
inc
add
jmp
mov
mov
add
jmp
mov
in
xchg
jo
sbb
lea
in
fnstsw
ja
cmp
outsl
lret
or
stos
jns
jmp
sub
mov
in
adcl
imul
sbb
pop
sbb
loope
cmc
adc
adc
repnz
in
fst
lock
fucomp
jbe
loopne
mov
in
lahf
xchg
sti
into
in
push
in
pop
jmp
mov
subb
out
es
xor
out
insl
mov
insb
in
imul
loope
int
mov
in
in
pusha
in
sbb
fisttpll
xor
push
sbb
fcompp
into
in
pop
xlat
fcmovnu
xlat
xchg
pop
out
cmp
fst
sbb
popa
adc
fstl
sbb
rcll
and
push
jo
testl
insl
int3
adc
out
adc
out
xchg
in
fstl
imul
sbb
mov
add
in
insb
pop
xchg
hlt
push
stos
jns
mov
sub
jns
in
fnstsw
xchg
or
sub
mov
nop
in
fcompl
mov
fnsave
mov
fnsave
ret
and
in
and
out
and
loopne
push
adc
ret
and
ffreep
and
loop
and
stos
push
inc
adc
push
inc
sbb
pop
push
call
mov
pop
dec
pop
rclb
adc
push
inc
adc
add
dec
loopne
pop
dec
add
inc
inc
push
add
pop
aad
inc
decl
popa
push
stc
cli
cmp
push
add
or
outsl
repnz
in
add
sub
add
or
xorl
sbb
or
int3
mov
mov
fimuls
mov
sbb
mov
test
fiadds
mov
lock
sbb
jge
jne
mov
adc
lock
js
sbb
ja
jne
les
dec
lock
cmp
and
jbe
fnsave
jne
into
mov
ja
in
xor
movntps
lds
in
loopne
lret
mov
add
jb
sbb
mov
push
cmp
clc
push
imul
hlt
push
pop
sbb
loope
xchg
ja
imul
outsl
mov
fstl
sbb
cmp
cs
xlat
adc
add
loope
xchg
ds
push
mov
fldl
fmull
sbb
ja
fisttpl
or
and
fisttpll
ja
inc
jb
and
imul
sbb
cmp
inc
sbb
stos
das
sbb
push
push
sbb
fldl
add
movsb
subb
jecxz
mov
js
xor
xor
mov
sub
cmp
in
fnstsw
cmp
leave
in
sbb
sub
mov
push
sbb
sbb
into
or
into
in
fidivrs
xlat
jecxz
mov
js
mov
in
test
in
in
lods
sub
frstor
sbb
es
in
or
out
frstor
aad
sub
bound
outsl
xor
in
push
mov
sbb
or
in
loopne
sbb
pop
or
fcmovnu
sbb
cmc
popf
mov
xchg
ficoms
mov
mov
fstl
cmp
out
push
mov
jo
mov
ja
pop
call
in
fisttpll
insl
leave
push
jge
fisttpll
cmpsl
outsl
mov
mov
lea
sbb
in
data16
inc
pop
adc
push
leave
mov
in
mov
jge
in
push
dec
sbb
loop
ja
pusha
in
outsl
xlat
stc
add
test
cli
in
sbb
inc
jns
in
or
add
sbb
in
sbb
loope
in
loopne
popf
mov
lock
xor
out
lea
push
lock
mov
pushf
stos
xor
jmp
in
xchg
out
in
fstpl
lock
and
scas
loop
xchg
iret
dec
xchg
push
fdivp
in
inc
fisttps
jmp
sbb
in
pop
jae
sbb
fadds
out
sbb
sub
add
fcmovnu
aad
aam
aam
in
pusha
xchg
xchg
ja
lret
int
pop
mov
sbb
xchg
int
out
fnstsw
mov
inc
lret
inc
shr
or
sub
push
jecxz
mov
call
mov
xchg
ret
jne
faddp
lea
lock
aad
mov
mov
in
mov
loopne
cmp
in
dec
pusha
aad
int
leave
mov
fidivs
sahf
aam
mov
in
enter
and
stos
jge
jo
cmc
mov
lret
lods
lea
sub
in
and
mov
test
ja
iret
push
loopne
add
fidivs
repnz
mov
in
fstpl
in
fstl
xorb
sbb
