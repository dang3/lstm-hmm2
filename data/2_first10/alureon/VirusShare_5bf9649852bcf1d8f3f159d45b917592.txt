push
mov
add
pusha
xor
mov
neg
push
mov
xor
mov
xor
cmp
ret
neg
neg
mov
sub
shl
shl
lea
not
movl
mov
lea
shl
movl
mov
not
mov
add
shl
movl
rol
xor
mov
mov
adc
sbb
mov
mov
movb
xchg
mov
shr
lea
mov
mov
cmp
mov
lea
rcr
xor
push
xor
mov
mov
neg
neg
nop
xchg
lea
lea
nop
mov
mov
lea
lea
not
lea
lea
lea
mov
mov
push
mov
neg
mov
xor
neg
mov
not
xchg
call
not
ror
sub
mov
lea
xor
mov
xchg
nop
xor
xor
or
xor
nop
mov
neg
mov
mov
call
lea
mov
not
lea
push
rcr
mov
mov
not
neg
lea
nop
xor
xor
mov
sub
rol
xor
mov
xor
nop
shl
rol
lea
mov
lea
xor
xor
movl
mov
mov
neg
movl
mov
lea
mov
neg
xor
xor
not
movl
or
xor
xor
or
mov
lea
mov
nop
mov
rcr
neg
lea
shl
lea
nop
xor
cmp
xchg
mov
neg
mov
mov
and
movl
mov
mov
not
mov
movl
mov
mov
sub
neg
cmp
movw
mov
lea
ror
mov
lea
movb
rcr
mov
mov
not
mov
or
lea
nop
shl
xor
add
xchg
nop
mov
xor
mov
call
ror
xchg
xor
neg
adc
mov
neg
or
je
lea
mov
or
nop
neg
mov
and
nop
not
mov
lea
sub
mov
mov
neg
lea
mov
add
and
mov
rol
or
jne
lea
neg
xor
push
lea
mov
xor
mov
lea
lea
mov
and
call
or
rcl
not
xor
cmp
shr
neg
lea
lea
push
neg
xor
mov
mov
neg
shl
mov
popl
mov
xor
lea
mov
not
xor
nop
neg
rol
mov
lea
neg
movl
not
add
xor
add
push
mov
rol
not
rcr
shr
push
xor
xchg
adc
mov
call
xor
mov
mov
xor
shr
rcl
xor
xor
or
mov
sbb
not
mov
mov
not
mov
mov
mov
nop
mov
xchg
mov
shr
xor
rcl
lea
nop
lea
rcl
mov
lea
mov
xor
mov
rcr
mov
lea
mov
mov
lea
mov
not
shl
neg
rol
lea
pushl
mov
shr
add
mov
mov
xor
push
mov
lea
neg
mov
cmp
rol
lea
nop
or
sub
mov
nop
xor
neg
lea
add
xor
neg
rol
mov
movl
mov
xor
xor
shr
mov
xchg
call
mov
add
adc
mov
mov
ror
or
je
neg
mov
mov
mov
xor
and
rcr
lea
nop
mov
xor
mov
rcl
sub
nop
mov
xor
ror
xchg
mov
shl
ror
adc
mov
mov
cmp
rcr
mov
xchg
lea
mov
rcr
mov
mov
ror
xor
lea
rcl
mov
xor
mov
neg
mov
mov
rol
mov
mov
not
mov
mov
mov
mov
mov
cmp
mov
sbb
nop
mov
not
cmp
lea
lea
xchg
nop
lea
not
neg
not
mov
lea
pop
sbb
xor
mov
mov
neg
sub
neg
popl
adc
ror
mov
neg
mov
not
lea
xor
shl
rcl
and
mov
mov
mov
push
lea
mov
mov
not
not
push
xor
xor
add
not
mov
xor
push
adc
not
sub
push
neg
add
xor
xor
mov
mov
lea
mov
call
mov
neg
neg
xchg
mov
lea
xchg
nop
xor
xor
xor
mov
mov
neg
nop
neg
mov
sub
xor
lea
mov
lea
mov
lea
mov
mov
mov
rcl
xchg
not
push
xor
mov
xor
lea
ror
mov
xor
rcl
push
neg
ror
neg
mov
and
rcl
lea
push
rol
mov
lea
mov
ror
mov
push
xchg
xchg
mov
xor
or
push
lea
mov
xor
mov
mov
mov
mov
call
neg
xor
mov
neg
neg
nop
mov
mov
lea
not
mov
nop
and
or
shr
shr
lea
lea
not
rcl
mov
xor
lea
lea
push
xor
not
rcl
neg
push
mov
xor
sub
mov
rcl
mov
xor
neg
push
mov
mov
xor
push
xor
mov
shr
pushl
not
mov
add
call
xor
lea
not
add
xor
nop
lea
xor
lea
mov
not
sbb
mov
nop
rol
mov
lea
mov
sbb
mov
mov
lea
neg
mov
xor
push
not
mov
xchg
lea
push
xor
mov
mov
neg
push
neg
not
mov
pushl
or
mov
and
rcl
mov
xor
mov
xchg
call
lea
xchg
sub
xchg
nop
mov
mov
not
xor
mov
mov
xchg
xor
nop
or
xor
neg
mov
shl
neg
lea
lea
mov
sub
xchg
mov
mov
lea
push
mov
neg
mov
push
mov
neg
lea
neg
rcr
mov
pushl
ror
xor
xor
xor
adc
mov
push
mov
mov
mov
xor
mov
xor
pushl
xor
xor
mov
call
rol
not
neg
not
nop
mov
rol
mov
xor
lea
shr
xchg
rol
nop
lea
mov
mov
lea
push
lea
not
mov
mov
lea
push
xor
lea
add
neg
mov
lea
sub
push
mov
mov
mov
cmp
xor
push
lea
or
xor
xor
mov
mov
push
mov
rcr
mov
mov
push
add
and
lea
neg
pushl
xor
xchg
xor
xor
mov
xor
call
add
mov
mov
not
nop
xchg
rol
xor
mov
mov
mov
xor
mov
nop
shr
rol
mov
xchg
popa
leave
jmp
mov
inc
and
jo
lock
ret
icebp
ljmp
dec
test
xchg
pop
icebp
dec
loopne
icebp
cwtl
inc
sub
sbb
or
pop
jl
bound
dec
push
pop
dec
iret
xor
pop
xor
inc
push
cwtl
imul
jg
cs
shlb
jge
inc
mov
sti
cmp
and
adc
mov
jl
adc
enter
xor
pop
push
and
pop
popf
shl
sub
push
jae
test
scas
mov
inc
cmpl
or
je
popa
cli
mov
dec
mov
xchg
arpl
inc
lret
repnz
pop
fdivrp
mov
xchg
jnp
mov
std
les
push
out
movsb
insl
and
or
mov
std
fs
jnp
bound
add
jnp
add
inc
xchg
jns
lea
dec
dec
xchg
outsb
mov
xchg
push
cmp
ret
out
daa
movsl
jo
mov
inc
push
mov
sub
ficomps
pop
shll
cmp
mov
out
inc
xlat
in
and
gs
inc
test
movsl
push
adc
mov
sbb
xchg
mov
and
xchg
mov
sbb
rcr
negl
shrb
lcall
pop
mov
call
fiaddl
aad
adc
jb
cmpsb
or
add
dec
cmp
repnz
fisttps
sahf
ret
call
sub
stc
cmp
test
popf
sar
push
mov
cmp
ds
scas
dec
test
cmp
fcomps
ljmp
mov
in
ds
push
mov
scas
enter
mov
add
xchg
push
data16
sbbl
jl
mov
dec
fwait
cmp
sub
adc
add
inc
sub
mov
lcall
dec
fildl
adc
das
xchg
push
sub
jmp
push
mov
and
and
mov
push
jno
mov
add
sbb
jp
push
dec
push
addr16
push
jge
mov
mov
xor
push
dec
movsl
rcrl
shlb
outsl
dec
imull
mov
popa
sbb
mov
test
add
aaa
shrb
sbb
lret
jg
iret
in
sbb
mov
mov
jl
or
stc
dec
das
lods
pop
pushf
dec
mov
jp
insl
pop
xor
int
movsl
dec
out
pop
clc
xchg
sub
jo
pop
or
pop
push
jle
pop
in
rcl
cld
jnp
lcall
jne
daa
ljmp
or
andl
mov
arpl
inc
dec
lods
mov
xor
cmp
test
mov
arpl
jns
pusha
jg
je
mov
pop
hlt
sti
cli
fldl
dec
xchg
cmp
push
or
push
add
jbe
mov
out
or
sbb
mov
and
aad
arpl
pop
ja
mov
inc
repz
jg
mov
adc
push
pop
es
out
pop
shll
push
in
dec
stc
movntq
or
sub
pop
mov
pop
ds
mov
jl
lahf
pop
sub
xchg
scas
pop
shr
and
imul
mov
fdivrp
and
fisubrs
xor
std
mov
sti
sub
mov
mov
call
arpl
adc
repz
int3
lock
dec
sub
into
mov
das
xor
lret
mov
fs
ja
dec
jge
out
int
movsb
ss
pop
iret
sub
push
mov
add
jne
dec
push
add
leave
jae
sub
dec
sub
repz
xchg
bound
adcl
add
add
pop
mov
mov
movsl
idivb
sub
and
stos
mov
sbbb
xchg
lods
xchg
out
fnsave
clc
movsb
push
jg
adc
test
pop
aas
or
cld
dec
ret
xorb
ret
add
jns
pop
sub
push
orb
mov
aam
xchg
sub
mov
iret
push
mov
pop
jp
adc
movsb
mov
roll
xor
dec
xchg
adc
frndint
es
jg
sub
cmp
push
test
xor
hlt
xor
and
lcall
cmpsl
sahf
cltd
sbb
icebp
lea
fs
arpl
push
shrb
dec
or
loopne
adc
push
test
xchg
push
xorb
lahf
stos
and
xchg
cmc
sub
xor
rclb
inc
xor
cld
xchg
out
or
pop
xor
aad
pop
push
leave
xchg
sub
add
dec
lods
or
pop
sub
dec
push
pshufw
jmp
inc
cli
shrb
lds
insb
adc
mov
dec
loope
je
sub
stc
movsb
imull
or
jle
aas
popa
dec
xchg
jb
pop
mov
jp
cld
repz
roll
ds
inc
or
rclb
insb
mov
cmpsl
push
add
filds
icebp
inc
mov
dec
aaa
mov
int
xchg
inc
pushf
repnz
mov
arpl
mov
testl
cld
enter
into
xor
cmp
fldenv
es
dec
fwait
adc
add
fstl
adc
cmp
xchg
aad
add
lock
shlb
aas
mov
pusha
push
inc
dec
mov
out
mov
std
scas
sbb
lea
mov
mov
mov
dec
add
cmpsl
sub
repnz
inc
arpl
fisubrl
mov
inc
push
push
ljmp
add
push
cs
iret
lret
or
aam
adc
rol
inc
fidivl
loop
popl
mov
out
push
loopne
or
leave
and
xchg
lcall
mov
inc
cmp
dec
mov
and
xchg
pop
rcrl
testl
lods
insl
sbb
popf
jmp
enter
cmc
inc
das
enter
pop
add
cmp
mov
js
hlt
dec
subl
xor
bnd
push
xlat
dec
inc
push
lock
decb
aaa
mov
jl
dec
adc
mov
notl
pop
lods
and
jge
sbb
orl
sahf
dec
xlat
pop
cwtl
xlat
insb
adc
or
fyl2x
rcrl
jecxz
sti
mov
xor
inc
mov
bound
and
cmpsl
imul
stos
jge
sti
cmp
outsl
test
pop
pop
loope
xchg
fistl
jae
push
iret
aad
repz
pop
mov
push
and
gs
xor
cmpsb
cmp
lds
inc
movsl
fistl
or
cmpsl
fwait
xor
and
add
inc
fwait
decl
mov
cwtl
ljmp
lahf
mov
sbb
fwait
and
xchg
fcomip
dec
ret
sbb
xchg
xchg
data16
sbb
add
loopne
mov
and
nop
xor
mov
fistpl
dec
add
cltd
test
out
movsb
add
xchg
and
iret
mov
icebp
xchg
mov
sarb
sarl
jmp
sbbw
mov
lahf
imul
movsb
mov
xchg
int3
pop
xor
das
cld
push
int3
imull
ja
and
cli
lods
fistpll
dec
xor
jnp,pt
mov
negl
and
cli
loopne
xchg
inc
idivl
fs
in
or
repnz
push
or
push
lahf
cmp
pop
pop
inc
or
cmc
rolb
mov
xchg
or
jp
andb
mov
shlb
movsb
pushf
sti
or
std
aaa
pop
mov
jnp
leave
mov
or
fisttps
push
push
inc
push
inc
fnstcw
adc
xchg
inc
sahf
into
test
push
and
inc
cwtl
aaa
push
divb
xor
or
lods
cltd
test
mov
sub
sub
test
test
rol
rcl
pop
dec
fisttpll
mov
aad
stos
inc
cmpsl
test
dec
data16
mov
fmul
cmp
loopne
je
pop
mov
mov
mov
cmp
shlb
xchg
cmp
jb
push
mov
ret
test
dec
mov
pop
call
lret
mov
iret
push
insb
int3
cmp
nop
sahf
sti
or
jecxz
in
mov
and
cwtl
icebp
pop
cltd
flds
adc
lea
and
dec
inc
add
popf
sahf
xor
data16
sbb
inc
mov
inc
cmovo
xchg
divl
imul
shlb
dec
leave
push
sarl
push
sbb
lods
pop
pop
mov
ljmp
sub
xchg
jnp
stos
sbb
loop
push
cmp
aaa
xor
inc
pusha
add
pop
fimull
push
cli
lahf
bound
inc
sbb
xchg
push
add
sti
cltd
inc
and
mov
addr16
aad
int
addr16
inc
not
outsb
repz
movb
fsubr
aam
sbb
jle
unpcklps
imul
test
out
pop
and
mov
aaa
xchg
cmp
jl
and
inc
pop
jbe
inc
sbb
cli
xchg
push
mov
mov
test
sub
mov
rcr
pusha
lret
adcb
imul
outsl
fcoml
aas
test
cli
sub
inc
jne
loop,pt
xchg
aam
xor
xchg
mov
adc
jb
add
mov
adc
inc
xlat
scas
jb
jecxz
push
cmpb
loope
clc
adc
jmp
movsb
arpl
xchg
xchg
mov
fisttpll
xor
jecxz
in
leave
repz
or
test
pop
cmpsl
xor
jmp
addr16
dec
das
dec
sub
pop
dec
in
push
mov
inc
xchg
leave
mov
ja
orl
ds
sbb
sub
loopne
inc
inc
fdivr
pusha
xor
mov
mov
add
fcompl
test
sub
sbb
stc
cmpsb
subb
mov
ds
inc
iret
mov
adc
or
pusha
dec
sub
pop
out
sbb
scas
xchg
test
adc
stos
idiv
inc
pusha
lock
xlat
bound
jbe
jne
rol
xlat
inc
xchg
stc
jnp
xor
push
fildl
add
add
ss
add
mov
sub
sahf
pop
cltd
inc
call
jnp
cmpsl
jmp
mov
sbb
scas
test
daa
push
or
jno
mov
push
gs
mov
xchg
sub
mov
xor
adc
ficoml
mov
aas
lea
leave
jno
rolb
and
mov
jns
adc
hlt
jb
scas
clc
jge
scas
nop
filds
inc
inc
mov
mov
jg
mov
fwait
and
dec
loop
xchg
notb
cld
xchg
jnp
xchg
cmc
fistpll
divb
xor
xchg
dec
movsl
add
shl
jbe
jmp
push
mov
test
adcl
lock
aam
push
push
ja
pop
jecxz
mov
jecxz
mov
leave
popf
dec
lcall
insb
and
lds
leave
fdiv
in
mov
dec
icebp
cmp
push
incb
push
sub
nop
push
and
dec
addr16
jmp
mov
mov
les
ds
popf
ret
decb
xor
mov
insb
xor
and
popf
rorl
ja
js
xor
push
adc
sub
cld
addb
dec
fisttpll
xchg
sahf
mov
xchg
jl
mov
gs
cmpsb
sbb
frstor
int3
or
test
mov
jecxz
loop
jnp
mov
pop
leave
sbb
popf
adc
jecxz
inc
mov
scas
lret
push
push
testb
int3
mov
sbb
fs
ds
lret
movsl
cli
pop
push
orb
sarb
mov
call
out
xchg
sahf
inc
xor
es
push
mov
lock
into
je
mov
jne
bound
push
cmp
scas
dec
cwtl
xchg
sbb
sbb
push
add
jp
and
movsb
inc
push
cli
mov
int3
aas
mov
jmp
lock
adc
inc
adc
movsb
enter
jne
ja
mov
mov
cmp
sub
mov
push
jle
ret
pop
cmp
lods
pushf
mov
inc
std
or
push
lretw
dec
daa
pop
push
rclb
mov
shlb
in
test
sub
out
push
add
enter
ljmp
loop
xor
xchg
addl
cs
outsb
je
jo
out
andl
add
stos
pop
cmp
cmp
mov
loopne
or
pusha
das
xchg
addb
adc
addr16
jge
movsl
out
push
xor
repnz
pop
imul
rorb
jbe
xor
addr16
call
loop
mov
mov
xlat
sub
xchg
cmpsb
pusha
adc
xor
rol
pop
and
cmp
push
inc
pop
cmp
imul
pusha
sbb
lock
cmp
test
xor
sub
and
in
adc
dec
sub
and
push
lahf
add
fdiv
arpl
jo
shrl
add
cmpsl
popa
lret
push
push
jl
pop
subl
pop
into
inc
adc
adc
pop
xor
jl
push
sub
call
push
std
mov
xchg
mov
icebp
movsl
pop
ret
jns
xchg
out
sub
pusha
dec
mov
popl
mov
enter
rdtsc
scas
push
and
xchg
mov
lods
sbb
jo
xchg
mov
pop
and
js
mov
push
test
and
and
fldt
int3
adc
or
pop
xor
sbbl
mov
mov
out
add
pushl
mov
adc
repz
aas
mov
xchg
jp
mov
dec
pop
lret
xchg
popf
mov
in
mov
or
pushf
jbe
push
in
test
idivb
and
mov
xchg
xchg
movsb
bound
cmpsb
ljmp
adc
push
les
int3
test
xchg
lcall
frndint
adc
in
lods
pop
xchg
dec
cli
dec
dec
push
popf
cmp
pop
test
arpl
fwait
inc
aad
adc
cltd
sub
push
xlat
pop
xor
stos
ret
push
int3
aad
push
jae
adc
push
ret
lahf
enter
mov
push
jns
fistl
es
pusha
adc
imul
loop
inc
jo
inc
outsb
xchg
into
or
jp
das
daa
mov
insl
mov
pop
jno
jno
xor
les
lea
or
outsb
adc
push
xchg
fucom
sbb
xchg
lods
out
jle
imul
jmp
repz
int3
xchg
push
call
mov
xor
shr
js
add
inc
jmp
test
fsubrl
mov
popa
add
adc
fs
add
mov
loope
inc
inc
cmpsb
iret
mov
inc
andl
mov
mov
stos
jne
sbb
int3
add
add
lret
popf
jecxz
mov
and
jb
outsl
sbb
and
lea
icebp
pusha
inc
sub
dec
sub
pop
sbb
mov
cmpsb
push
cmpsb
fiaddl
mov
rcrl
dec
inc
mov
loopne
pop
aas
and
daa
cmp
fmul
jbe
inc
je
cmp
lret
push
nop
popf
jmp
and
mov
repnz
out
inc
mov
aad
xor
mov
add
cmp
pop
inc
pop
xorb
hlt
shlb
push
cmp
inc
mov
jae
sarl
sub
mov
push
outsl
ret
out
and
pop
mov
ss
jle
or
cs
mov
cmp
repz
add
xchg
jne
pop
test
daa
hlt
test
sub
adc
adc
lods
int
out
push
dec
aaa
push
jbe
lods
test
sbb
push
adc
xchg
mov
inc
xor
mov
sbb
aad
mov
push
or
fistl
jge
dec
mov
daa
cwtl
xchg
cmpsb
mov
or
sti
xchg
xlat
add
mov
out
add
stos
ja
lods
mov
movsb
sbb
rcrb
lret
adc
xchg
xor
bound
shlb
xor
sbb
cwtl
inc
scas
mov
movsb
or
repz
pop
ficoml
fwait
sbb
xchg
xchg
jecxz
clc
pushf
add
dec
mov
lock
adc
jb
dec
sbb
clc
dec
adc
adc
jnp
pop
inc
mov
loop
push
fcompl
or
cwtl
xor
ret
push
or
cmc
dec
push
xor
lds
and
and
je
iret
xchg
mov
pop
dec
pop
push
es
dec
lock
push
pop
add
xorb
xor
add
inc
negb
sbb
sbb
xchg
hlt
int3
dec
xor
or
cmc
std
btr
cwtl
rcll
xlat
or
pop
stos
sub
scas
push
xchg
sbb
repnz
mov
adc
dec
hlt
fldcw
push
rcll
loop
jbe
mov
rorb
mov
repz
pusha
and
in
mov
cmp
repnz
sbb
addr16
jmp
rcrb
outsb
mov
sbb
dec
mov
gs
int3
out
enter
clc
repz
int3
jbe
subb
ja
adc
ljmp
dec
aas
and
adc
ficoms
cs
add
subb
aaa
lcall
mov
mov
add
daa
mov
xor
mov
mov
lock
cmp
nop
xchg
ret
rcrl
xchg
test
jne
adc
jl
mov
leave
xlat
adc
sub
repz
dec
movsl
inc
lds
xchg
mov
faddl
xorb
arpl
int
jecxz
leave
nop
sbbb
lcall
mov
sbb
pop
popf
lods
jae
fisubrs
xchg
pop
xchg
call
or
enter
xor
mov
es
sti
mov
fdivrs
mov
mov
mov
mov
add
xchg
fisubrl
fstpl
push
pop
fdivs
idivl
clc
adc
mov
ficompl
sbb
sub
mov
int
cld
dec
sbb
lds
sub
xor
pop
jno
push
push
fs
or
mov
ror
and
or
test
outsb
jne
sti
sahf
add
decb
stc
inc
stos
dec
mov
sti
mov
jns
sub
shll
push
and
divb
pop
mov
sub
bound
popa
add
rolb
jne
lret
mov
jmp
inc
out
sub
push
jmp
out
jmp
pop
mov
push
mov
stos
pusha
cmp
pushf
cmp
sbb
dec
sbb
repnz
push
xchg
push
into
inc
loop
sbb
push
repz
mov
xlat
jns
test
add
stos
inc
test
xor
in
jp
dec
lahf
adc
cmp
in
repz
mov
out
xor
es
imul
subl
xor
jmp
or
pop
mov
jne
out
cmp
jmp
mov
ret
gs
jp
rorb
mov
dec
test
subb
mov
mov
mov
das
es
leave
mov
scas
cli
loope
adc
fsubs
imul
cmp
stos
pop
negb
mov
or
pop
fdivr
sahf
lds
xchg
popl
add
pushf
push
sbb
xchg
cmpsb
mov
enter
jecxz
add
sbb
outsl
mov
cmp
or
cmp
in
dec
sbbb
stos
jns
adc
mov
iret
dec
adc
xchg
cli
mov
jae
sub
jbe
seta
mov
push
sub
or
outsl
sub
xor
test
push
add
push
sbb
adc
lcall
stc
xchg
push
mov
std
mov
loopne
push
jbe
mov
sbb
clc
imull
movsb
sbb
daa
jb
mov
arpl
cltd
rorl
insb
jo
in
xor
jl
pop
in
clc
xchg
mov
xor
sub
push
add
jl
in
xchg
xchg
sbb
dec
pop
mov
xor
pop
gs
insl
pop
or
push
lcall
lock
xor
and
push
cmp
loop
imul
mov
decb
and
lahf
lock
inc
in
mov
movsl
pop
fnstenv
sub
lahf
std
adc
lcall
fstpt
iret
loopne
cltd
nop
popa
pop
dec
call
xchg
movsl
lds
xor
scas
cmp
daa
xchg
add
push
sbbb
pop
lock
movsl
jp
gs
adc
push
push
rol
mov
push
xchg
or
mov
dec
cli
mov
or
or
test
mov
stos
popf
mov
mov
icebp
mov
mov
movsl
xor
leave
pop
xlat
push
cmp
cwtl
xchg
xchg
add
in
xchg
in
cld
out
sub
pop
mov
gs
push
mov
mov
popf
push
rol
sub
add
jo
cmpsb
pop
mov
ret
cmpsb
xchg
hlt
shr
repnz
arpl
jge
stos
repz
int
pop
sub
decl
in
push
jge
cmp
outsb
mov
push
sbb
xor
lds
add
push
mov
xor
sbb
jp
and
jmp
ds
out
pop
sbb
dec
pop
fmul
inc
icebp
aas
ds
fidivrs
adc
test
gs
leave
sbb
dec
js
mov
aad
ljmp
negb
ficoms
push
shll
adc
scas
xchg
cmp
adc
push
out
xor
push
das
push
notb
inc
xchg
icebp
add
xchg
frstor
movl
stc
xor
mov
shlb
scas
adc
push
stos
lret
cmp
sbb
xor
enter
or
pop
xlat
push
jl
or
pusha
gs
lahf
mov
ja
lahf
xchg
inc
ljmp
cmp
push
lods
cmp
dec
jmp
pop
cmpsl
mov
mov
pop
stc
and
xchg
arpl
mov
movsl
in
dec
insb
push
sahf
push
push
mov
jo
scas
sub
mov
or
shl
imul
loop
ljmp
fcoms
in
shlb
cmpsb
push
add
sub
xor
and
fcompl
ljmp
cmpsb
dec
inc
pop
int
pop
pop
mov
xor
loope
gs
mov
movsb
enter
xor
push
pusha
js
inc
insl
push
inc
cmp
adc
xchg
xor
mov
and
inc
bound
imul
inc
dec
in
shlb
adc
sbb
std
or
inc
mov
inc
sub
jns
cmp
pushf
or
cmpsl
mov
or
fiaddl
cmp
arpl
mov
dec
repz
pushf
cld
and
push
pusha
out
orb
jae
lods
pop
cmc
std
mov
fstpl
push
pop
push
and
das
pop
in
lret
and
mov
les
lahf
xor
mov
in
fs
cmpsb
xchg
jg
jmp
insb
out
and
out
mov
fsubrp
push
rolb
imul
push
jne
test
fistpl
jge
in
xchg
test
pusha
push
psubb
fstpt
mov
test
lods
stos
in
das
adc
fmull
jb
pop
sub
inc
in
mov
xchg
inc
inc
shll
mov
jle
jge
inc
inc
invd
clc
pop
and
loop
lahf
sub
xchg
adc
rorb
popa
cmp
cltd
bound
cli
adc
cmp
out
fxtract
add
mov
mov
fwait
xor
repnz
sbbl
add
and
mov
mov
mov
outsb
xchg
dec
mov
inc
outsl
or
push
xlat
and
and
dec
ss
push
sbb
lds
popf
stos
bound
lock
and
data16
xchg
jnp
movl
jmp
mov
and
cmpsl
xchg
fmull
jb
xchg
sub
jmp
mov
add
ds
cmc
cmp
fistpll
dec
xor
test
fs
dec
or
or
xor
cmp
sti
add
dec
lcall
std
scas
cmp
outsb
lds
icebp
adc
aam
pop
sbb
out
jno
adcb
clc
ss
sbb
je
filds
rcll
or
scas
clc
mov
jl
adc
mov
jo
jge
ffreep
in
dec
in
push
arpl
add
mov
test
sub
pop
fsubrl
mov
mov
into
fisttpll
and
adc
data16
stc
inc
adc
dec
sub
push
sub
jp
jo
mov
in
ret
mov
jle
xor
dec
xchg
jmp
imul
stos
loop
fldenv
in
int3
pop
mov
lret
and
clc
aad
mov
ds
aam
std
sahf
ret
in
sarb
mov
aad
test
mov
jmp
clc
push
sbb
inc
push
push
dec
dec
cmpsl
int
cmp
stos
xor
ja
adcb
in
mov
hlt
movsb
pushf
fdivl
mov
sti
pop
in
subl
fisubl
mov
in
push
cwtl
addb
mov
test
pop
jg
ret
js
in
lcall
push
pop
xor
fwait
inc
out
pushf
test
cmpl
adc
inc
mov
adc
and
xor
aaa
jne
out
shrl
push
repnz
das
cli
scas
jmp
and
mov
int
stc
or
dec
or
or
push
aad
scas
push
mov
hlt
add
inc
and
pop
xchg
add
movsb
test
int3
inc
mov
cmp
xor
pop
inc
cmpsb
mov
xor
add
incl
or
lahf
cmp
cmp
das
mov
cmc
daa
pop
xchg
sub
mov
pop
pop
orl
adc
cld
dec
pop
xor
ret
lock
ljmp
sbbl
sub
add
dec
mov
iret
lahf
and
insl
fidivrl
les
xchg
fnstenv
mov
mov
or
popf
int
adc
xchg
sub
mov
jmp
rclb
loop
sbb
inc
jae
jecxz
jmp
sahf
add
or
push
adcl
jp
jno
aas
add
jg
fstl
hlt
aam
hlt
mov
xchg
int
mov
mov
dec
jle
imul
test
mov
or
scas
jg
push
cltd
lds
cli
mov
xor
xchg
xor
out
fidivrs
aam
sub
push
jg
test
xor
in
push
push
xor
test
fs
mov
in
clc
jae
mov
lcall
lahf
mov
add
mov
cmp
out
in
adc
popf
sti
fxch
loopne
cld
ds
leave
outsl
push
push
xor
adc
sub
insl
enter
adc
sahf
pop
sbb
and
pop
andl
in
pop
dec
add
sahf
adc
nop
clc
adc
int3
pushf
fisubs
iret
dec
in
scas
jnp
or
fs
out
sub
mov
dec
push
std
ror
idivl
ja
mov
xchg
push
mov
scas
mov
ljmp
cmp
jb
fistl
bound
xchg
mov
lods
xor
loope
sub
loop
testl
adc
out
sbb
stos
xlat
mov
sti
adc
xchg
xor
sub
xchg
nop
inc
lahf
out
shl
adc
xlat
inc
testl
ret
or
out
shr
push
scas
xchg
fnstenv
lock
sub
repnz
or
cli
mov
add
cmp
adc
pop
mov
xchg
xchg
jns
jnp
decb
repz
sub
push
aam
sahf
loope
cmpsb
adc
hlt
dec
into
arpl
jecxz
xor
leave
scas
out
ja
out
xchg
ljmp
push
mov
adc
dec
jne
shll
push
cmpsb
push
lock
cwtl
out
cmc
xcrypt-ecb
cmpsl
dec
fisubl
ds
std
cmp
mov
jg
pop
mov
fcompl
push
out
and
dec
ret
fs
pop
in
mov
push
movsb
out
aad
out
cmpsl
call
jbe
fcomp
iret
pop
add
pop
or
and
and
test
icebp
cwtl
lahf
inc
mov
rcrl
test
mov
lea
orl
subb
jmp
fisubrs
xor
insl
cmp
add
inc
mov
push
out
loopne
cmc
fs
lods
jecxz
or
jae
sub
stos
cmp
sarb
mov
xchg
lock
pop
std
sti
das
in
mov
je
inc
aam
movsb
enter
dec
dec
or
push
mov
push
movsl
mov
mov
push
pushf
adc
xor
push
pop
inc
rcll
or
dec
xchg
das
jg
add
loope
test
mov
jbe
leave
sar
scas
sbb
mov
mov
addb
pushf
fdivrl
in
add
hlt
push
daa
sub
pop
add
push
sub
mov
sub
sub
xchg
int
lret
in
movsl
mov
mov
test
or
enter
dec
adc
divb
in
bound
and
popf
jo
cmp
std
inc
hlt
sbb
pop
push
push
dec
rcr
or
xchg
fmul
mov
loope
sbb
movsl
hlt
rorb
push
adc
dec
adc
xchg
jno
lcall
inc
cmp
stos
xchg
sub
cmpsl
bound
sub
sbb
mulb
lods
mov
mov
dec
jne
cwtl
push
js
mov
fsubs
adcl
ficomps
test
in
pop
dec
movsl
xor
inc
movsl
arpl
lcall
pop
clc
sbb
add
cmp
lds
shrb
ret
divb
rcrb
pop
inc
or
xchg
lods
sub
scas
cmp
mov
shll
stos
cmpsl
mov
je
sub
lahf
js
or
push
push
sahf
mov
rcll
xor
dec
jge
ds
push
das
mov
and
pusha
jnp
xchg
ja
popa
adc
inc
jmp
mov
mov
mov
fwait
sbb
inc
int3
mov
cmpl
cmp
adc
sbb
cmpsl
mov
icebp
outsl
idivb
cmp
dec
fidivrl
inc
sub
push
jl
mov
out
push
stc
outsb
jbe
test
push
aas
or
sar
and
sub
mov
sbb
adc
mov
mov
fbld
xlat
aas
adc
adc
xor
into
push
mov
jb
push
pop
cmp
push
or
xor
imul
outsl
xor
mov
gs
adc
das
adc
cmp
sub
rorb
push
push
out
ja
ret
out
int
xor
sbb
xchg
in
movsb
and
dec
add
adcb
pushf
ja
jbe
and
mov
lret
sub
xchg
hlt
pop
out
sub
adc
lock
shlb
jg
cld
scas
in
fld
in
jae
cld
and
mov
mov
add
jns
cmpsb
adc
pop
sub
push
es
sti
loopne
adc
fldcw
and
sbb
xor
js
push
ljmp
repz
and
shll
fildll
aas
sub
fistps
inc
repz
btr
sahf
movsl
pop
clc
fwait
in
pop
sahf
rolb
or
dec
or
lcall
mov
out
jns
dec
inc
jo
ja
dec
push
test
push
incl
adc
push
into
pop
xchg
or
add
and
pop
xor
scas
mov
xchg
jmp
fisubrl
stos
jno
jns
push
mov
mov
lahf
mov
adc
pop
cmp
ljmp
jg
push
aam
sub
inc
icebp
jbe
loope
and
ret
lahf
push
orb
icebp
jp
fidivrs
sahf
int
push
ljmp
push
add
daa
loop
sbbb
xchg
add
cmpsl
dec
inc
mov
xor
mov
jecxz
add
jnp
js
loop
stos
fcmovnb
dec
test
ret
mov
mov
fs
jnp
movsb
sbb
add
cmpsb
lret
lds
sbb
cwtl
data16
push
pusha
adc
cmp
mov
outsl
xchg
or
repz
mov
jecxz
lahf
stos
jb
jge
arpl
int
push
adc
adc
jo
mov
or
and
cmp
add
das
cmp
aam
and
adc
push
dec
jle
xor
cmpsl
idivl
push
sub
mov
jle
pop
mov
cld
jge
inc
repz
cmp
mov
insl
jnp
pop
cmp
repnz
fwait
lret
mov
xor
lret
cmp
or
sub
adc
sub
sub
mov
cmc
aam
jo
cmpl
lea
pop
mov
push
and
jl
mov
mov
xor
outsb
dec
push
sbb
fdivrl
jmp
jmp
mov
dec
shlb
stc
iret
popf
jno
dec
in
fs
iret
std
jle
pop
call
xchg
ret
push
scas
mov
push
es
push
int3
push
icebp
into
out
rclb
test
sub
arpl
xchg
popf
jmp
mov
in
out
cs
push
jecxz
mov
or
or
arpl
lret
xlat
pop
fistpll
daa
fs
lgs
not
mov
ret
jmp
fists
movsb
pop
cmp
call
or
push
stc
fistps
and
adc
mov
mov
inc
xchg
das
aam
loop
sahf
fldln2
stos
cli
pop
push
jge
pop
int3
mov
or
jno
sbb
cltd
lret
fcompl
jecxz
adc
out
push
jle
pop
inc
xchg
dec
movsl
add
sarl
ret
inc
add
mov
subl
and
add
cwtl
movsb
outsb
and
ja
cli
cli
sbb
mov
nop
cwtl
inc
inc
jp
repz
sarb
loopne
call
or
in
inc
outsl
lock
pop
div
pusha
mov
sbb
pop
pop
stos
ja
mov
sbb
test
adc
jmp
daa
push
xchg
or
cld
js
fdiv
shrl
xchg
jo
push
sub
sbb
xchg
jb
pushf
stc
lds
mov
cmpsl
ljmp
sub
addr16
cmp
jg
dec
adc
scas
dec
jns
inc
je
add
insb
add
pop
jns
mov
or
fsubs
jl
cmp
jl
in
xor
adc
sbb
xor
ret
and
inc
xor
push
mov
sarl
push
mov
push
test
jmp
xor
jb
insb
cmp
iret
clc
testl
dec
addl
dec
pop
mov
cmp
sbb
out
mov
stc
int3
jmp
out
jae
daa
scas
mov
std
mov
mov
sub
lcall
lcall
add
mov
jecxz
dec
enter
outsb
sbb
lahf
push
arpl
add
sbb
int3
xchg
int
and
cmp
ss
idiv
lahf
sub
mov
aaa
call
pop
cwtl
scas
inc
addr16
jg
dec
jmp
lcall
das
out
push
mov
inc
call
ds
iret
das
negb
mov
ret
add
inc
add
idivb
cltd
stc
jp
inc
fbstp
cmp
out
mov
sahf
xchg
xor
scas
jbe
mov
mov
roll
pop
cmp
cmpsb
push
cmp
push
scas
mov
jae
shl
xor
push
in
mov
add
aam
in
or
ljmp
lahf
dec
sub
dec
jb
dec
icebp
xchg
cltd
sbbb
cmp
push
xchg
ret
scas
pop
mov
and
aam
mov
popf
and
pushf
leave
pop
mov
cmp
push
jecxz
add
add
pop
add
pop
sahf
es
in
adc
mov
push
mov
test
cs
mul
cltd
lea
dec
mov
repnz
cmc
push
sub
outsl
jno
mov
in
in
sbb
sub
jne
popl
daa
testb
cmp
lcall
andl
lahf
js
jg
xor
cld
sbb
and
aaa
int3
xchg
std
stos
mov
jae
inc
scas
mov
in
fcmovbe
xchg
insb
ficompl
mov
push
xchg
xchg
pop
ss
insb
dec
rcpps
sub
fldenv
or
sarb
insl
mov
cmpsb
loopne
pop
icebp
imul
das
adc
lret
in
jb
xor
xchg
mulps
mov
add
outsb
inc
or
sti
ja
addr16
xlat
lcall
xor
push
jbe
or
stos
push
fiaddl
mov
dec
xchg
int
in
rorl
scas
popa
fiaddl
fs
out
sub
test
push
mov
pop
and
ja
in
test
dec
test
stos
mov
xchg
xchg
ss
inc
test
lahf
jge
sarb
scas
aam
push
sub
mov
scas
dec
int
jge
fwait
push
push
push
enter
push
lret
add
subb
mov
mov
inc
mov
jp
mov
mov
ja
fneni(8087
push
mov
add
sbb
mov
lahf
or
test
add
mov
nop
xchg
jb
xchg
sub
fsubrl
jno
nop
jns
pop
cmp
cmp
cltd
dec
popf
mov
push
pusha
sbb
ja
or
cmc
shl
jo
mov
repnz
dec
in
mov
and
jno
sbb
imul
or
xor
push
push
adc
mov
shlb
and
adc
sub
test
addb
xchg
movsb
xchg
aas
icebp
mov
and
jecxz
fcoms
sub
mov
add
jp
jge
xchg
mov
mov
rol
push
rsqrtps
sub
lret
sbb
sub
jb
ret
and
jb
cmp
scas
sub
out
sbb
sbb
lret
dec
cmp
sbb
shlb
dec
add
mov
mov
add
sbb
and
fs
sarl
and
aaa
les
push
mov
sbb
sbb
rorl
pop
push
cmp
sbb
cmc
xor
lcall
fwait
mov
or
ja
aaa
mov
idiv
cmp
ss
insb
sahf
mov
mov
push
sbbl
mov
fadd
push
push
scas
subl
lds
out
mov
cmpsl
mov
xor
das
fisubs
mov
mov
das
fsubs
enter
xchg
and
mov
jmp
xor
mov
pmulhw
sahf
into
inc
or
insl
jne
subb
mov
add
xchg
sar
popa
cmpsl
mulb
mov
pop
jmp
cmp
sub
add
jge
scas
fst
mov
sahf
xchg
fldenv
lds
inc
dec
dec
test
inc
mov
cmpsl
hlt
test
in
js
nop
insb
push
scas
inc
jnp
and
mov
stc
dec
adc
lret
inc
inc
pop
add
or
dec
xor
xorl
js
jmp
fdivrl
xor
inc
mov
mov
loop
jle
pop
mov
incl
add
adc
fnstcw
xor
mov
int
fsubrl
andb
cli
mov
lock
add
lahf
adc
repz
sub
or
sti
aam
push
lret
cmp
std
rcl
and
js
inc
mov
or
jbe
xor
in
sbb
push
or
xchg
cmp
xchg
fcompl
iret
test
pop
test
sub
sbb
push
mov
mov
out
dec
fisttps
dec
fistl
add
push
mov
out
mov
leave
xor
add
fwait
inc
loope
jnp
lods
leave
mov
in
add
aaa
dec
je
add
xchg
aam
and
add
xchg
xor
or
push
fists
mov
out
push
sub
xchg
es
sahf
mov
xor
or
cmpsl
sahf
jns
cmp
