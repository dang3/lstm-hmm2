mov
push
mov
push
mov
mov
test
je
test
jne
test
je
or
mov
jmp
or
test
mov
jne
push
call
pop
jmp
mov
mov
pushl
pushl
pushl
call
add
test
mov
je
cmp
je
cmp
je
mov
test
jne
mov
cmp
push
je
mov
sar
mov
and
lea
lea
jmp
mov
mov
and
cmp
pop
jne
or
mov
cmpl
jne
mov
test
je
test
jne
movl
mov
add
mov
movzwl
add
mov
jmp
neg
sbb
and
add
or
andl
mov
pop
pop
ret
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
test
je
andl
mov
sub
add
mov
mov
mov
lea
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
cmpl
mov
je
or
sub
mov
mov
sub
add
mov
mov
mov
lea
push
push
push
call
mov
mov
mov
sub
add
mov
movzwl
add
lea
movzwl
lea
mov
mov
mov
andl
xor
cmp
jae
lea
mov
mov
addl
push
lea
pop
rep
mov
add
movzwl
add
incl
cmp
jb
mov
mov
add
pop
mov
xor
pop
inc
pop
leave
ret
push
mov
sub
mov
mov
mov
sub
mov
je
mov
test
je
push
mov
add
test
je
push
push
mov
sub
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
addl
decl
jne
mov
test
jne
pop
pop
pop
xor
inc
leave
ret
push
mov
sub
andl
push
push
push
movl
mov
movl
mov
mov
movl
mov
mov
mov
mov
mov
imul
xor
add
incl
mov
push
call
mov
mov
mov
xor
mov
div
mov
mov
mov
mov
sub
not
add
xor
mov
mov
incl
add
cmpl
jb
testl
pop
pop
pop
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
leave
ret
push
mov
push
push
mov
mov
mov
cmp
jb
andl
add
je
push
push
push
pop
mov
sub
mov
mov
mov
lea
ror
lea
imul
inc
not
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
inc
cmp
jb
pop
pop
pop
leave
ret
push
mov
push
call
mov
push
call
pop
pop
test
je
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
mov
jmp
mov
pop
ret
push
mov
sub
mov
push
push
xor
push
mov
movl
cmp
je
mov
jmp
push
call
mov
mov
push
push
push
push
mov
add
call
movl
mov
push
shl
add
incl
push
push
push
call
mov
mov
test
je
push
call
mov
push
push
call
mov
call
mov
add
cmpl
je
cmpl
jne
push
call
lea
push
push
pop
xor
lea
div
push
pushl
pushl
call
mov
push
push
push
pushl
call
mov
add
lea
add
mov
lea
mov
mov
mov
and
call
mov
mov
mov
call
pushl
pushl
pushl
push
call
push
call
mov
push
call
test
je
pushl
mov
pushl
pushl
pushl
call
cmpl
mov
jne
push
call
test
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
push
mov
mov
sub
push
mov
mov
imul
cmp
jb
mov
push
push
call
mov
add
imul
push
xor
pop
div
mov
mov
mov
mov
sub
mov
test
je
mov
sub
mov
call
xor
divl
mov
add
cmp
jae
mov
mov
imul
xor
divl
xor
mov
sub
imul
div
cmp
jae
mov
mov
sub
mov
mov
mov
test
je
mov
mov
mov
mov
mov
mov
mov
incl
mov
mov
mov
mov
incl
decl
jne
add
add
add
cmpl
jne
pop
pop
pop
leave
ret
push
mov
push
push
andl
andl
push
push
push
push
push
call
mov
lea
push
pushl
lea
pushl
movb
push
pushl
movb
pushl
push
call
push
push
push
call
pop
leave
ret
mov
push
push
call
mov
xor
cmp
je
push
push
push
push
call
push
push
push
pushl
call
push
push
push
pushl
call
pop
pop
ret
push
mov
sub
push
mov
push
test
je
mov
test
je
cmpl
je
mov
test
je
push
lea
push
lea
push
push
call
mov
add
push
pop
lea
add
call
mov
test
je
mov
sub
mov
mov
inc
dec
jne
pushl
mov
pushl
pushl
pushl
pushl
call
mov
mov
mov
call
mov
add
push
pushl
pushl
push
call
add
pop
jmp
xor
pop
pop
leave
ret
mov
push
mov
sub
mov
push
xor
push
push
mov
movl
mov
movl
mov
mov
call
mov
lea
push
movl
mov
movl
call
pop
leave
ret
mov
push
mov
cmpl
mov
jne
test
jge
push
push
jmp
push
pushl
mov
call
mov
pop
ret
mov
mov
mov
rol
imul
add
mov
ret
push
mov
sub
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
jne
inc
jmp
andl
push
push
lea
lea
cmpl
mov
je
mov
jmp
mov
mov
add
xor
nop
movb
mov
mov
inc
cmp
jb
mov
test
je
lea
movsbw
mov
add
inc
mov
test
jne
lea
push
call
mov
test
je
mov
add
andl
cmpl
je
mov
mov
mov
test
jns
and
jmp
add
add
push
pushl
call
mov
test
je
incl
mov
lea
cmpl
jne
mov
incl
mov
imul
add
lea
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
mov
mov
ret
mov
push
mov
push
push
mov
test
mov
je
lea
push
call
add
push
call
andl
pop
pop
pop
ret
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
add
add
mov
xor
test
hlt
mov
jl
js
push
add
lock
xor
and
ss
sub
xchg
cmpsb
push
aaa
pop
push
push
cmp
js
jl
mov
push
mov
out
lret
mov
pop
push
push
mov
cmp
sbb
push
and
rorb
xor
popa
sbb
mov
cmp
enter
pavgw
int3
mov
push
in
pop
add
imul
rorl
sbb
sbb
movsb
into
or
mov
and
add
add
or
ja
pop
sub
ret
adc
xorl
mov
stc
push
pop
call
and
stos
add
lods
out
mov
xchg
imul
pop
nop
dec
sbb
popl
dec
mov
pop
push
stos
and
out
push
aas
decb
adc
in
mov
jne
stos
pusha
jmp
push
adc
mov
or
add
popa
adc
xchg
add
data16
aam
int3
fsubp
loopne
ret
repnz
sub
sbb
push
mov
or
jmp
fldl
movsl
js
jle
loopne
setae
push
int
jne
cld
ret
fwait
ja
xchg
rcll
in
xchg
jmp
out
jno
and
mov
push
jb
add
ficomps
out
mov
or
mov
clc
lds
mov
add
add
call
test
dec
push
pop
jg
in
sbb
loopne
lret
les
lahf
test
frstor
and
mov
out
lods
sbb
rcrl
iret
jbe
xchg
mov
mov
mov
dec
sar
inc
test
ljmp
out
popf
aas
push
test
cmp
std
vsubsd
subl
fcomip
stc
xorps
fildl
cmp
push
mov
test
movsb
fildl
add
sbb
lds
fucom
inc
adc
xchg
jge
inc
push
fiaddl
jae
add
pop
mov
sub
pop
sub
jo
xchg
aad
xor
leave
sbb
push
cwtl
mov
rorl
test
inc
sub
outsb
fiadds
hlt
iret
xchg
shlb
pop
pop
pop
adc
stos
dec
dec
loope
out
iret
xchg
call
add
icebp
les
popf
popa
ljmp
aad
mov
cld
dec
push
mov
jb
inc
mov
mov
pop
out
sbb
ja
ja
adc
mov
mov
add
xchg
test
insl
rorb
push
inc
xchg
fsts
sbb
xchg
test
push
icebp
dec
ljmp
cvtps2pi
stos
jg
pop
fistpl
push
aam
fcmovu
jp
pop
in
add
std
popf
xchg
or
dec
sub
push
add
lock
mov
icebp
adc
sti
lret
pop
aas
xchg
sbb
add
jb
fdiv
push
out
imul
pusha
ds
xchg
sub
sarb
fistl
fisttpl
jge
xchg
in
sti
jmp
pop
xchg
out
push
outsl
or
mov
rcrb
aam
adc
hlt
pusha
lods
dec
xchg
cmp
mov
sbb
xor
sub
pop
sarl
sub
push
add
or
add
or
shrl
mov
stos
ss
add
outsb
adc
out
sbb
adc
rorl
jbe
inc
mov
xor
in
mov
sbb
js
jns
xchg
jg
dec
nop
mov
xchg
aaa
fsub
gs
out
xor
and
xor
mov
dec
gs
out
loope
gs
jl
mov
arpl
xchg
jp
cltd
stos
ret
cmp
adc
push
mov
fcomi
popf
xor
or
sbb
mov
dec
cwtl
in
xor
in
les
aas
inc
out
decb
ret
lods
sbb
fwait
bound
les
push
popf
stos
stos
andl
cwtl
jo
mov
ret
lret
or
sti
mov
rcrb
jg
movl
sbb
in
aaa
nop
je
loopne
bound
daa
cltd
add
sub
dec
mov
mov
ljmp
or
getsec
addb
and
push
out
xchg
andl
aaa
xchg
sub
les
aad
arpl
ds
xor
xor
mov
pop
pusha
mov
push
adc
in
dec
out
push
loopne
pop
insl
cmp
cs
orl
sub
stos
popa
or
mov
inc
in
xchg
addl
call
sbb
jno
mov
ja
aam
mov
pusha
lret
shl
dec
out
push
mov
xchg
sbb
jnp
and
dec
pop
cmp
xchg
pusha
jns
cmp
lock
xor
push
stos
int3
pop
mov
push
into
imul
fistpll
sub
push
mov
sub
dec
jnp
jg
adc
fiadds
fmul
sbb
movsl
ds
xchg
loop
cmp
lret
mov
cmp
add
and
std
in
stos
fwait
jo,pn
movsl
lods
mov
xor
inc
stos
dec
les
cmpxchg
lock
mov
subb
pop
inc
dec
adc
jns
lock
mov
cld
push
incb
xor
jbe
pusha
ja
movl
pop
dec
adc
dec
push
mull
aam
mov
pop
inc
inc
lea
add
test
leavew
fldt
stc
std
add
imul
in
push
rcrb
out
cld
in
sub
mov
mov
test
jg
repz
into
fcompl
pop
mov
sub
adc
cwtl
enter
xor
mov
adcl
dec
pushf
mov
adc
lock
lods
sarb
lods
sub
cld
mov
sub
xor
rclb
arpl
stos
stos
adc
inc
add
add
and
push
je
fsubrs
dec
jnp
sub
incb
and
or
pop
sbbl
cmp
mov
out
loope
xchg
out
cmpsl
gs
sbb
jge
mov
lock
in
out
sub
cmc
sub
imul
mov
or
sbb
sub
sti
push
subl
xchg
cltd
sbb
mov
jle
xlat
lock
or
add
ss
cld
xchg
push
adc
xchg
mov
xor
and
push
and
or
hlt
hlt
cmp
nop
les
add
addr16
dec
xchg
mov
jno
inc
inc
es
lret
or
in
cmp
jg
shrl
push
fisubs
das
inc
das
and
cli
faddl
sub
dec
pop
dec
ficoml
roll
int
and
mov
dec
idivl
addr16
jns
hlt
out
mov
shr
std
out
mov
jns
pop
jbe
pop
xor
mov
mov
sbb
or
mov
jg
jbe
arpl
in
jno
stos
xor
xchg
adc
not
ret
in
dec
repz
in
xchg
rcrl
imul
aam
dec
cmp
pop
pop
outsl
daa
cmc
mov
pop
andb
insb
enter
lcall
and
stos
sub
cmp
sbb
adc
aaa
divl
mov
inc
mov
popa
nop
xor
xchg
rol
xor
mov
xor
adc
repz
adc
add
pop
mov
lcall
das
or
jle
jmp
sti
push
inc
mov
xchg
pop
test
cs
ss
pop
mov
add
inc
in
jbe
mov
pop
mov
mov
jnp
jnp
ljmp
insl
inc
cli
or
add
lahf
stc
pop
fnsave
je
and
repz
jl
cltd
mov
adc
lock
jns
fadds
insl
call
push
les
and
mov
mov
fcomps
lea
dec
andb
mov
add
jge
xchg
sbb
lahf
jle
and
pop
add
fldenv
cs
add
out
outsl
scas
xchg
mov
addr16
leave
and
xchg
int3
dec
fnstcw
mov
stos
fdivl
mov
movsb
dec
mov
movsb
adc
out
push
cmp
pop
mov
add
shlb
fidivrl
add
mov
xor
into
pop
dec
push
and
rep
xor
and
add
add
push
push
rcl
cltd
lods
push
je
cmpsl
mov
xor
sbb
adc
adc
popf
out
xchg
icebp
insb
inc
inc
lahf
cld
push
pop
out
sub
scas
in
add
xchg
ljmp
jmp
das
mov
push
not
dec
fwait
jnp
mov
pop
imul
es
add
or
jnp
mov
testb
fucomip
rcr
adc
jbe
mov
icebp
mov
cwtl
popa
xor
mov
add
cmc
push
inc
mov
adc
subl
repz
rolb
jmp
hlt
dec
sbb
mov
cmpsb
test
dec
add
xchg
aad
mov
fimull
sbb
pop
fst
pop
push
push
xchg
sub
pusha
xor
or
lock
popf
or
mov
in
and
shl
sbb
mov
gs
repz
pop
sbb
inc
inc
and
sbb
popa
mov
jg
dec
jp
mov
fdiv
jbe
scas
call
repnz
mov
das
pop
mov
xchg
inc
test
sub
pushl
jmp
inc
bound
and
outsb
pop
push
lret
mov
loope
ja
xchg
push
popa
pop
push
repnz
fnstcw
pavgb
adc
xchg
mov
cmp
mov
inc
jg
adc
jae
mov
pop
ret
popl
add
add
adc
out
rclb
repz
xchg
lods
dec
push
shr
fistps
cwtl
cmp
roll
negl
push
in
jo
scas
lret
into
lcall
fcmovnbe
rcll
push
dec
mov
popa
aaa
imull
orb
stos
fs
and
sbb
gs
addl
outsl
push
cwtl
ljmp
mov
inc
xor
cmpsb
push
push
xor
add
movsb
clc
cmp
xlat
js
jb
je
xor
stos
adc
cmpsl
aaa
xor
push
jmp
xchg
pop
lcall
inc
ds
xor
lds
lods
repz
pop
inc
cmpsl
mov
cmp
fcomip
aam
test
add
mov
mov
xchg
adc
ror
cmpsl
xchg
pop
icebp
movsb
fs
ss
cmp
add
add
sub
pop
loope
imul
sbb
sub
repnz
mov
jecxz
push
arpl
xlat
cmpsl
shrb
inc
lret
dec
mov
jp
xlat
mov
into
pop
nop
xchg
in
inc
xchg
inc
test
pop
movsb
jno
push
je
jg
pop
in
fsubs
xchg
les
js
inc
fs
js
pop
shl
jecxz
add
test
adc
iret
jnp
xchg
push
out
shrb
jecxz
inc
fwait
popf
loop
out
or
data16
or
sbb
jmp
lods
test
out
mov
xchg
jbe
pop
xchg
mov
inc
pushf
cwtl
sbb
xchg
add
push
xchg
dec
mov
pushf
mov
jne
mov
sbbl
jns
inc
addr16
pop
jecxz
stc
icebp
pop
fistpl
pop
rcrb
scas
pop
dec
push
mov
lret
push
cmp
mov
hlt
xor
and
and
aaa
orl
stos
cmp
sbb
out
inc
pusha
sub
and
mov
xor
push
insb
cli
cmp
sahf
push
cli
cltd
iret
or
jne
repnz
mov
xchg
inc
pusha
ret
fildl
cmp
ds
cltd
movsb
sub
in
and
pusha
stos
pop
mov
imul
fs
iret
or
jp
mov
pop
mov
dec
test
add
add
xchg
scas
mov
ljmp
push
pop
outsl
imul
jnp
and
les
mov
dec
xchg
addb
rcr
jmp
push
and
mov
orl
imull
lods
aam
jle
in
mov
gs
outsl
jns
mov
imul
hlt
mov
aad
xor
adc
inc
imul
add
mov
in
lret
sub
fbstp
loope
lods
push
mov
fwait
mov
scas
and
mov
scas
lret
icebp
and
inc
dec
hlt
or
inc
jge
scas
xor
jp
mov
idivb
pop
fs
rcl
idivl
mov
mov
out
mov
jns
xor
pop
mov
jecxz
add
xchg
sbb
push
mov
fcomip
imulb
cmpsb
cmp
and
sarb
inc
pop
mov
inc
xchg
cmp
scas
bound
roll
out
jge
xor
sbb
lret
scas
ret
pusha
and
jae
push
and
inc
movsb
jmp
aad
cltd
push
mov
daa
lock
and
fdivs
je
inc
or
pop
sub
mov
shl
test
add
jne
and
pusha
adc
mov
lods
push
push
add
movsb
into
push
rep
and
jo
pop
mov
ds
mov
adc
cmpsl
adc
stc
dec
xchg
xchg
stos
stos
hlt
xchg
xchg
popl
lahf
fimull
dec
icebp
out
mov
xchg
mov
daa
mov
adc
sbb
ss
xchg
pushf
fucom
and
negb
fcoml
inc
mov
stos
test
and
dec
pop
add
xchg
fcmovu
and
mov
subl
add
add
pop
std
ret
jmp
pop
imul
adc
arpl
adc
sub
lea
pop
dec
je
jno
xor
negb
xchg
jle
sub
rol
jge
push
cmp
rdtsc
lret
adc
sbb
sbb
movsb
mov
add
and
pop
jge
mov
jmp
addb
repnz
icebp
jnp
je
lods
pop
lea
es
pop
cs
push
sbb
cmpsl
inc
jno
xor
add
std
mov
add
add
dec
iret
in
fs
jmp
xlat
lret
lds
xlat
pop
hlt
mov
test
xchg
push
ret
in
jbe
imul
add
jns
xor
pop
repz
popl
testl
jmp
lcall
subl
roll
mov
or
popf
shl
push
gs
imul
insl
addl
fistpl
sbb
lret
xchg
jns
mov
lods
xchg
xchg
push
insl
dec
out
adc
fistpl
sbb
jle
popa
adc
adc
and
imul
xchg
jnp
mov
movsb
in
divl
jo
sbbb
pop
fs
sbb
dec
lea
in
out
mov
push
iret
xchg
sbb
mov
add
push
es
lea
cli
cltd
enter
scas
in
xchg
sbb
adc
push
das
push
dec
cwtl
dec
xor
icebp
pop
sbb
rorl
cmp
and
cld
adc
add
and
cmpl
jns
movsl
pusha
clc
dec
ss
movsb
imul
sbb
jecxz
lods
jecxz
jge
jns
cltd
sub
lret
js
ja
loope
idivl
xor
outsb
lds
and
mov
xor
data16
xor
add
out
insb
addr16
mov
or
roll
iret
jmp
dec
cmpl
out
pop
lret
ret
mov
cmp
pop
sbb
cltd
imul
sub
sahf
inc
inc
lret
stos
inc
push
mov
and
mov
movsb
jp
fsts
jmp
fmulp
inc
mov
mov
pop
fucom
mov
xor
icebp
pop
dec
aad
mov
add
adc
cmp
popf
daa
add
dec
mov
mov
bound
sahf
fisubrs
mov
mov
imul
dec
sbb
das
cmp
jnp
mov
dec
push
sub
lahf
into
cmp
mov
push
xchg
push
lods
out
push
mov
enter
xchg
repz
dec
xchg
pop
ret
add
mov
cmp
lea
lea
xor
push
jge
int
sbb
cmp
xchg
int
pushf
shrd
arpl
adc
jmp
jbe
mov
xchg
subb
push
push
mov
and
sbb
arpl
imul
mov
adc
inc
sbb
xchg
pop
pop
dec
icebp
pop
sub
jb
mov
add
fimull
cmp
add
int3
sub
and
sub
pop
out
add
stc
subl
xchg
aas
int3
adc
mov
cld
out
and
add
add
mov
adc
jmp
movsb
dec
lods
or
inc
mov
push
push
fcoms
imul
sbb
call
mov
aas
mov
clc
jl
or
or
notb
testb
inc
jl
gs
ret
jb
pop
or
int
push
clc
pusha
lcall
push
xor
sub
xchg
iret
mov
lret
and
lds
jg
inc
jmp
in
and
leave
hlt
call
add
add
inc
mov
and
push
cmp
nop
call
cmpl
jns
movb
xor
movsb
push
inc
js
pusha
into
or
daa
js
fcomps
add
mov
sti
rolb
inc
mov
sbb
xor
nop
jmp
fs
xor
xor
push
stos
imul
xor
sbb
dec
mov
in
add
in
insb
shrb
sahf
and
xchg
mov
xor
cmpsl
hlt
pop
pop
ljmp
push
sub
inc
lock
jecxz
push
sbb
cltd
push
push
fninit
addr16
mov
add
cmp
inc
out
add
lock
ja
stos
cmpsb
stos
xor
aad
mov
dec
cmp
pop
rcll
xchg
push
mov
pop
and
pop
add
stos
pop
adc
cmp
adc
xor
xor
popa
fwait
lods
lcall
aaa
lds
lret
jecxz
inc
cmp
adcl
imul
test
mov
loop
fidivrs
jl
jne
orl
aad
sbb
pop
mov
aam
sbb
dec
mov
mov
jecxz
dec
test
cltd
int3
sbb
mov
std
fxam
das
jne
jle
hlt
or
in
or
std
adc
cmc
sbb
and
push
hlt
push
pop
sbb
cmp
dec
jl
sub
xor
pop
sbb
pop
fistps
hlt
mov
jmp
jno
jle
push
pop
fsubrs
fxch
mov
pop
leave
inc
add
nop
mov
add
adc
sub
scas
in
mov
sbb
andb
add
jno
lods
cmpsb
adc
jle
mov
insb
clc
xchg
jne
xchg
popf
push
std
xor
lods
or
loopne
out
lahf
rclb
cmp
mov
test
inc
xchg
add
cli
mov
aas
dec
xchg
rorb
or
and
xchg
in
mov
pop
jb
loope
mov
out
in
fildl
add
add
outsl
pop
repnz
xor
negl
push
or
repz
shrl
test
push
dec
pop
popf
lock
shlb
std
sub
aad
rorb
push
std
loop
ret
xor
outsb
mov
out
jg
add
adc
shl
pushf
inc
clc
lods
push
cltd
int
sbb
mov
pop
sbb
push
fdivr
jne
call
dec
lahf
lret
or
aas
and
dec
push
cli
hlt
adc
inc
ljmp
in
sub
xchg
std
lds
mov
inc
iret
mov
fildll
lcall
inc
pop
pop
adc
adc
pop
loope
cmp
inc
or
xor
aaa
out
xchg
pop
sbb
mov
nop
fsubs
popf
mov
inc
jne
pusha
rcll
inc
out
mov
pushf
mov
mov
test
push
pop
mov
ja
mov
out
push
push
mov
mov
sbb
shr
fisubl
sbb
lret
xor
inc
incl
adc
cmpsl
int3
xor
mov
fldl2e
xor
je
inc
loop
mov
lea
in
push
jecxz
scas
cli
insl
add
pop
fbld
jle
push
cmpsl
jo
cmp
in
push
or
cmc
clc
lea
jl
inc
or
adc
mov
in
mov
sub
inc
jmp
test
loopne
mov
cmp
les
imul
int3
xchg
adc
add
xor
add
pop
mov
and
repnz
lds
hlt
push
in
stos
pop
hlt
rorl
cs
dec
adc
jnp
cmp
sub
test
leave
mov
js
and
arpl
push
push
mov
in
push
lret
stos
dec
push
shlb
enter
or
mov
push
sub
dec
xchg
imul
fidivrs
sub
ljmp
sub
push
pslld
imul
test
scas
jno
arpl
pop
rolb
dec
mov
fwait
mov
add
add
out
cltd
test
adc
sahf
jb
adc
mov
push
xlat
inc
js
dec
int3
adc
and
adc
jb
jbe
testl
outsb
push
dec
add
xchg
pop
ds
pop
mov
inc
movsb
std
mov
rolb
mov
add
lods
aad
jmp
sub
jge
xor
push
add
adcb
xor
jge
out
sub
inc
mov
jbe
mov
push
shrb
push
sbb
int3
lret
filds
pop
or
sbb
mov
lea
int3
xor
mov
insb
lds
mov
mov
jg
iret
ss
and
repz
or
xchg
mov
scas
sub
leave
out
stos
clc
rcrl
jecxz
loope
cld
or
lret
dec
sbb
clc
jae
insb
leave
pop
xchg
jo
dec
addr16
orb
xor
mov
movsl
jno
push
leave
adc
jge
scas
xorb
xor
sub
stos
cmp
pop
sbb
out
push
inc
or
icebp
add
mov
jo
add
lret
out
or
mov
outsb
adc
icebp
push
mov
outsb
lcall
fsubrp
add
test
ja
loopne
push
xor
jmp
xor
addb
popf
push
fwait
dec
and
jecxz
orl
push
iret
mov
pop
shll
mov
stos
ja
shld
repnz
push
andl
enter
xchg
add
mov
test
sbb
cmp
daa
inc
and
add
stc
pushf
jle
fsubl
in
pop
out
pop
ss
jp
outsl
rcll
dec
cmp
and
mov
push
mov
dec
push
xor
icebp
pop
les
fwait
xor
pop
or
cmp
test
cmp
aad
lock
test
inc
aaa
lahf
pop
popf
sbb
movsb
and
cmp
cmp
in
rcll
push
push
mov
inc
lret
decb
scas
mov
pop
gs
adcb
pop
cli
sbb
lcall
aas
cmc
mov
scas
adc
fdivrl
and
inc
sub
sub
jns
sbb
cmp
test
mov
ss
call
dec
or
xor
xchg
mov
jg
test
cmp
push
ds
stos
scas
clc
idivl
jl
jg
jge
addb
ds
cmp
pop
shll
jle
test
add
or
mov
pop
xor
paddd
ret
subb
sahf
mov
lods
aam
dec
push
adc
aad
push
ss
mov
subb
test
scas
arpl
imul
inc
sub
push
mov
in
int3
out
jno
hlt
pop
push
xor
xchg
cli
popf
lahf
loopne
outsl
or
xor
adcb
mov
out
mov
mov
adc
pop
or
push
lock
mov
xchg
sti
pop
add
xlat
or
int3
push
xchg
pop
mov
out
mov
aaa
and
mov
xchg
icebp
xchg
add
lods
leave
adc
mov
popf
hlt
and
adc
daa
jge
adc
imull
sub
xor
out
mov
xchg
xchg
sub
sub
int
fdivp
and
js
pusha
loopne
xchg
or
data16
dec
dec
inc
rcll
insl
fwait
add
add
outsb
mov
push
jge,pt
cli
mov
in
test
dec
ljmp
push
rcrb
fisubrs
and
jns
leave
in
insb
push
push
cmp
and
adc
jl
push
adc
pop
stos
out
jno
sub
jg
xchg
cli
mov
mov
xor
or
daa
fisttps
in
or
movsl
rcl
shlb
orl
mov
jb
rclb
push
std
xchg
insl
pop
stc
mov
jnp
movsb
sbb
sbb
xchg
push
into
stc
adc
sub
add
cwtl
notl
add
dec
xchg
cmpsb
rorl
and
in
icebp
cmp
xchg
pop
outsb
inc
ds
test
loop
inc
or
jp
sahf
gs
sahf
mov
loopne
adc
out
test
sub
add
aam
sarl
mov
orb
gs
add
loope
aaa
push
int
push
pop
clc
sbb
jp
call
in
cmc
mov
add
movsl
test
mov
inc
nop
xchg
add
inc
sbb
call
jnp
aas
int
cmp
mov
inc
push
into
icebp
xor
xlat
call
sub
sub
scas
xor
mov
push
push
bound
mov
push
aaa
adc
scas
int
cmpsb
pusha
mov
sbb
addr16
inc
popf
sbb
lods
jl
adc
insl
roll
pop
stos
add
scas
sbbb
lock
aad
out
xchg
dec
je
out
lea
inc
ret
push
dec
or
je
aaa
adc
xchg
mov
or
arpl
pop
dec
pop
jl
pop
mov
ret
divl
push
jecxz
inc
insl
adc
ja
add
pop
lcall
int3
cmp
and
fdivr
imul
or
xchg
fidivs
xlat
cmc
rorb
in
ds
enter
shlb
les
pushf
imul
outsl
icebp
lea
pop
jmp
fbstp
add
nop
lahf
mov
cwtl
sbbb
push
sub
and
push
mov
stc
add
pop
mov
mov
xchg
jae
mov
fs
pushaw
mov
in
pop
xchg
mov
inc
pop
pop
pusha
cmc
cmp
jns
and
shrd
lods
mov
addr16
pop
mov
pop
rclb
addl
cmp
enter
lods
jb
or
mov
test
xchg
adc
jmp
fdivl
mov
cmp
movsl
aaa
xorl
pop
loopne
fldenv
popa
test
inc
or
add
add
pop
sub
sbb
pushf
je
jns
sub
xor
push
cld
pusha
cmp
sub
sti
push
js
lock
ja
dec
shll
or
lods
xor
repnz
or
sti
pop
pop
xchg
add
mov
adc
fldcw
jmp
or
push
adc
mov
leave
mov
jge
add
add
lcall
jns
mov
sbb
pop
mov
cmpsb
test
inc
dec
lcall
in
mov
xchg
inc
cmp
lret
and
in
ds
push
xor
sbb
push
pop
adc
or
shlb
mov
lock
push
jno
inc
mov
iret
sbb
xchg
std
lcall
aad
add
add
cmp
add
call
inc
xorl
sub
xchg
ljmp
shll
in
inc
xor
in
and
mov
xchg
and
in
addr16
push
loop
mov
sbb
mov
and
add
jp
lcall
sub
addl
shr
dec
lea
xor
test
add
in
jb
jne
inc
add
add
lahf
push
pop
mov
mul
call
inc
dec
pop
mov
cmpsb
mov
push
or
add
mov
or
add
pop
xchg
sub
dec
push
das
negl
loope
incl
adc
mov
lods
adc
movsb
icebp
rol
adc
insb
add
loopne
adc
mov
