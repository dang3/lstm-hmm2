push
xor
call
lea
test
jbe
push
movzwl
imul
add
dec
jne
pop
test
jns
add
subw
sub
and
or
mov
ret
push
mov
mov
mov
add
test
sub
add
push
mov
test
jne
xor
jmp
mov
add
mov
push
mov
mov
mov
push
mov
add
add
add
mov
mov
test
jns
and
sub
cmp
jae
mov
jmp
andl
cmpl
jbe
jmp
mov
mov
mov
mov
add
call
cmp
je
incl
mov
cmp
jb
mov
mov
mov
cmp
je
movzwl
mov
add
test
je
mov
add
cmp
jae
cmp
jb
xor
cmpb
je
add
cmpb
jne
push
lea
push
push
mov
call
add
cmp
sub
lea
push
mov
movb
call
mov
test
jne
xor
jmp
lea
call
push
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
add
subw
sub
mov
add
mov
push
xor
mov
cmp
je
add
add
sub
cmp
je
mov
push
cmpl
jne
mov
mov
add
push
mov
call
mov
mov
call
push
pushl
call
test
je
mov
mov
add
jmp
cmp
je
lea
test
mov
test
jne
jmp
lea
push
mov
call
push
call
lea
push
push
push
push
call
mov
mov
addl
addl
mov
cmpl
jne
pop
pop
leave
ret
mov
add
mov
test
je
add
add
add
add
add
push
mov
push
lea
xor
cmp
jbe
add
lea
test
cmp
jb
mov
add
xor
cmp
jbe
add
push
add
pop
cmp
jb
pop
pop
xor
inc
ret
push
mov
push
push
mov
andl
mov
mov
xor
push
not
rol
movzwl
push
add
push
lea
lea
pop
call
push
push
lea
push
call
mov
sub
add
mov
imul
add
mov
mov
imul
mov
add
neg
add
add
mov
add
sub
and
add
mov
mov
mov
movl
mov
mov
lea
call
mov
mov
add
xor
add
decl
jne
addl
subl
pop
pop
leave
ret
push
mov
mov
mov
cmpl
jb
push
push
mov
mov
mov
sub
sub
mov
lods
xor
stos
add
sub
sub
sub
add
ror
sub
jne
pop
pop
pop
ret
push
push
pushf
rdtsc
imul
pop
add
mov
and
rol
xor
pop
pop
ret
push
push
mov
mov
mov
mov
mov
mov
cmpb
jne
cmpb
jne
pop
pop
ret
push
mov
push
xor
push
mov
call
push
mov
call
pop
test
jne
push
push
mov
call
pop
pop
test
jne
push
push
push
mov
call
test
jne
cmpl
jae
movzwl
test
jne
testl
jne
push
pushl
pushl
pushl
call
jmp
push
push
push
push
call
push
mov
call
jmp
mov
call
test
je
lea
jmp
push
mov
push
push
push
mov
call
xor
pop
pop
ret
test
je
test
je
test
je
jbe
push
sub
mov
mov
mov
push
add
pop
dec
jne
pop
mov
ret
xor
ret
push
mov
sub
sub
add
push
lea
push
mov
mov
mov
mov
rep
mov
call
movzbl
mov
lea
cmpb
jne
push
push
pushl
movb
call
mov
mov
mov
movzbl
imul
xor
push
add
pop
lea
test
jne
push
push
pushl
mov
call
mov
mov
cmp
jne
movzbl
push
push
pushl
call
pushl
push
pushl
call
xor
pop
sub
pop
leave
ret
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
add
movzwl
movzwl
incl
addl
testb
addl
add
cmp
jb
pop
pop
pop
leave
ret
push
mov
sub
sub
push
push
xor
push
cmp
je
mov
jmp
push
mov
call
push
push
push
mov
push
mov
call
mov
mov
call
cmp
je
in
mov
add
push
mov
call
cmpl
jbe
push
push
pushl
mov
call
cmp
je
cmpl
jne
lea
call
pushl
mov
pushl
mov
push
call
mov
sub
mov
mov
add
push
lea
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
call
mov
mov
add
sub
push
and
add
push
call
mov
mov
add
mov
mov
mov
add
movzwl
lea
add
mov
movzwl
lea
push
mov
mov
call
push
call
lea
push
push
push
push
call
mov
sub
xor
mov
cmp
je
mov
cmp
je
add
mov
mov
mov
jmp
mov
mov
mov
cmp
je
add
lea
mov
mov
mov
mov
add
push
push
push
call
or
sub
mov
mov
andl
mov
sub
cmpl
jbe
lea
mov
mov
mov
addl
addl
add
add
incl
mov
cmp
jb
push
call
test
je
cmpl
je
mov
mov
call
mov
add
mov
push
lea
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
call
movzwl
xor
xor
mov
cmp
jae
mov
mov
mov
addl
addl
push
pop
rep
mov
add
add
add
mov
mov
movzwl
push
add
pop
cmp
jb
pushl
mov
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
mov
xor
cmp
je
push
add
pop
add
cmpb
jne
ret
push
pushl
mov
pushl
call
push
push
push
push
mov
call
mov
test
je
push
push
pop
call
push
add
pop
mov
jne
push
push
push
mov
call
pop
pop
ret
push
mov
sub
cmp
add
push
mov
mov
add
mov
test
jne
push
add
pop
jmp
andl
push
lea
lea
cmpl
push
je
mov
mov
add
push
mov
call
mov
test
je
mov
andl
add
cmpl
je
mov
pushl
pushl
call
test
je
incl
mov
mov
lea
cmpl
jne
mov
incl
mov
imul
lea
lea
cmpl
jne
xor
sub
pop
pop
pop
leave
ret
xor
jmp
and
add
jne
cmp
mov
add
and
test
push
inc
std
ror
push
pop
xchg
adc
adc
cmp
mov
mov
inc
repnz
push
test
xorps
fisubl
pop
mov
cmpb
xor
sub
mov
pushf
xor
cs
mov
add
mov
push
and
stos
das
divl
stos
and
mov
aas
sbb
bound
sbb
push
mov
sbb
cmp
and
mov
pop
scas
jmp
cmpsb
jbe
inc
or
mov
je
or
dec
sahf
xchg
push
jo
xchg
call
addb
cmp
pop
sbbl
repz
jl
jne
fs
jp
ret
inc
lds
push
sbb
dec
xor
xchg
ret
dec
push
cmp
xchg
fs
add
jle
mov
xchg
outsl
das
xlat
hlt
dec
pop
lret
jmp
inc
inc
pop
and
mov
lods
loop
dec
push
cmp
gs
mov
push
nop
scas
inc
pop
mov
cmp
das
pop
lods
jge
push
or
fisubrs
jbe
push
sbb
imul
xor
xor
add
je
std
xor
inc
clc
fistps
push
mulb
adc
cli
push
adc
popa
shll
jmp
mov
iret
mov
pop
sub
cld
cmp
pop
fcoml
scas
aad
mov
or
jge
cltd
insb
inc
test
cmp
icebp
fwait
mov
push
or
mov
and
je
push
dec
push
scas
pushf
inc
sarl
int
sbb
jo
mov
hlt
scas
fnsave
mov
inc
dec
pop
mov
arpl
into
into
xor
inc
pop
cld
mov
and
sti
jl
and
sub
sub
sub
lcall
push
xchg
int3
iret
xor
jb
mov
jg
pop
pop
push
pop
mov
mov
jb
inc
sub
cld
aaa
mov
in
jno
add
jp
cwtl
pop
jno
out
jb
cmc
pop
jp
lods
fisttps
fldl
fdivrp
and
jnp
mov
or
xchg
xchg
xchg
sbb
lods
mov
pushf
push
or
jbe
icebp
imul
sbb
xor
lret
pop
aas
pop
sub
mov
in
lret
fbld
sub
dec
sub
cmp
int3
scas
cmove
xchg
cmp
pop
rcll
orl
les
jp
xchg
aaa
adc
mov
das
or
sub
out
mov
cmpsb
rorl
movsb
adc
xchg
adc
inc
cli
popl
push
es
sbb
cmpsb
jbe
or
mov
ljmp
in
mov
arpl
rcrb
cmp
push
dec
adc
mov
lods
lret
sub
cwtl
cmpsl
cmp
sub
mov
jns
push
pop
pop
jmp
mov
jnp
jnp
cmp
lods
out
outsl
mov
enter
mov
adc
call
adcl
jge
shll
sbb
stos
lds
mov
lret
inc
pop
xor
lcall
push
sbb
jl
repnz
imul
jbe
push
mov
enter
aas
xchg
fimuls
mov
cmp
sbb
aad
icebp
lock
pop
das
xchg
aam
mov
dec
loop
add
aaa
xor
mov
jle
pushf
sti
mov
ficoms
js
les
and
ds
fsubrl
mov
cmc
and
ss
daa
in
sub
pop
sub
jae
test
in
xchg
out
aaa
xor
lahf
imul
sbb
push
inc
lock
aam
in
jb
leave
and
pop
xor
cmp
pop
mov
ret
dec
sub
rolb
push
test
scas
xchg
adc
xchg
outsb
cmp
and
pop
add
scas
aas
mov
fabs
gs
daa
adc
mov
pushf
push
popf
inc
cmp
mov
cwtl
dec
pusha
dec
xchg
ficoml
and
ds
in
lds
push
shlb
call
in
adc
out
xchg
loope
mov
inc
fucomip
dec
lahf
or
pusha
int3
add
clc
fistps
adc
xor
xchg
adc
add
pop
dec
push
xchg
sub
out
dec
das
leave
adcl
mov
cmc
and
outsl
es
shrb
cmp
jp
adc
popf
out
loope
out
outsb
and
lea
sarb
jmp
or
nop
pop
int3
pop
cli
aaa
nop
mov
in
or
jl
jle
mov
shr
fiadds
lock
pop
adc
test
xor
xchg
ret
add
fistl
adcb
ret
jge
je
cmp
sbb
aad
add
mov
inc
xlat
fwait
hlt
fdivrl
xor
ss
cmp
data16
mov
push
stc
xchg
mov
push
and
scas
mov
lds
cmc
xchg
mov
insb
int3
mov
imul
out
push
pop
xchg
int3
mov
cmp
inc
in
mov
data16
pop
je
call
stos
xor
xchg
jmp
lret
or
cmp
pushl
fbld
add
lret
mov
and
sti
inc
std
push
cmp
stos
test
or
das
jmp
call
jg
xlat
pop
inc
pusha
push
cmp
dec
mov
jp
fimull
das
pusha
dec
xor
push
cld
movsl
push
test
scas
and
scas
add
or
sarb
mov
cmp
sub
imul
cmpsl
lcall
arpl
and
pop
push
into
jo
in
int3
lock
cs
xchg
xlat
into
jbe
gs
push
adc
in
or
push
add
mov
add
js
lret
dec
cmp
pop
ret
mov
pusha
daa
dec
subb
insl
jmp
adc
cmpsl
int3
je
mov
or
xor
in
aad
sbb
add
into
loope
in
or
mov
jl
jns
cmc
mov
xchg
xor
push
mov
xor
inc
and
push
inc
dec
aad
shlb
inc
inc
dec
out
jp
sub
cmpsl
xor
add
shr
dec
jl
pop
rclb
jmp
in
and
lock
insl
sahf
mov
int3
sbb
int
mov
pop
adc
mov
dec
push
std
rclb
int
mov
fcompl
mov
pop
mov
xchg
cmp
mov
aam
lods
jns
pop
out
notb
subb
sbb
mov
xor
pop
addr16
out
jo
loope
fsubr
push
mov
mov
mov
mov
test
jne
cltd
rcl
test
test
subl
insl
test
cmc
adc
adc
mov
pop
inc
cmpsb
and
xchg
leave
or
jnp
mov
lock
cs
or
add
jae
jecxz
add
data16
insl
lods
mov
mov
add
dec
xchg
add
sub
or
cmp
push
push
aam
xor
aad
lods
inc
rorl
jno
lock
sahf
loopne
loop
hlt
xchg
xchg
stos
and
jbe
inc
xor
xchg
cmc
adc
xchg
ds
xor
jge
or
sub
sub
push
cltd
lea
fcmovnbe
inc
loopne
and
or
push
test
aaa
add
xchg
mov
ss
xlat
outsb
test
cmp
mov
sahf
fs
pop
mov
mov
ret
repnz
jl
sub
js
sbb
into
in
mov
inc
pop
movb
fidivrl
stos
pop
mov
lea
dec
sub
or
sbb
loopne
arpl
sarb
push
cmp
add
loopne
pop
out
test
aam
mov
outsl
mov
and
js
mov
xchg
lock
gs
stc
mov
out
cmp
pop
dec
push
mov
cmp
xchg
push
lods
adc
test
xchg
sbb
in
sbb
popf
negb
pop
icebp
rcr
sbb
std
cmp
push
sbb
and
cli
add
sti
insl
cmp
push
pushl
add
outsb
lea
lods
mov
testl
pop
inc
fisttpl
rorb
lea
sahf
push
dec
scas
jl
or
mov
in
ljmpw
pop
mov
add
mov
aas
push
js
arpl
mov
pop
jge
inc
mov
jns
inc
popa
cwtl
mov
jbe
int3
hlt
push
imull
hlt
and
dec
loop
lret
xchg
hlt
inc
cmp
in
push
push
inc
xchg
mov
lret
sbb
jno
pushf
jb
mov
adc
imull
fsubp
or
cmpsb
inc
and
jae
inc
das
or
loope
mov
es
fistpl
mov
adc
jo
mov
ss
fildl
push
xlat
add
cmpsb
inc
sub
stc
call
pop
mov
jmp
dec
repnz
lods
push
ficoml
in
xor
jp
ss
in
sbb
pop
sub
push
cli
mov
add
mov
jle
jne
cmp
and
pop
push
fs
loop
adc
sbb
xchg
insl
add
mov
mov
insb
testb
clc
or
fisttpl
and
cmp
decb
rcll
xchg
call
inc
faddl
out
adc
divl
pop
out
xor
pop
lods
clc
jmp
cwtl
sbb
push
std
cmpsl
sub
push
shlb
fstpt
fimull
or
into
test
or
lods
mov
test
xor
mov
out
fdivrl
or
xor
mov
and
mov
in
cmp
out
sbb
aaa
mov
pop
jb
imul
sar
les
mov
in
lock
push
jo
and
icebp
mov
cli
inc
sbb
rcr
adc
imul
xchg
aas
push
adc
aad
sub
daa
fnstenv
jl
and
xor
loop
push
add
pushf
adc
add
dec
adc
aad
iret
xchg
adc
and
sbb
cmp
ja
cwtl
sbb
xor
scas
int3
out
mov
loop
and
ljmp
mov
mov
psllq
and
lea
add
iret
into
pop
mov
data16
cltd
lds
adc
nop
dec
jne
mov
fsubrs
mov
daa
cmp
add
fsubl
insl
mov
mov
movsb
jmp
xchg
mov
pop
in
push
lds
xchg
xchg
pop
cmpsb
push
fstps
mov
adc
add
or
and
aam
clc
imul
xchg
pusha
imul
fcomp
ljmp
test
inc
mov
stc
inc
jg
dec
mov
shrl
and
scas
or
xlat
lods
cmp
les
repz
mov
adc
mov
outsl
nop
lods
or
lods
imul
iret
dec
mov
and
pop
fmuls
jo
sarb
in
test
mov
lock
in
imul
movsl
inc
sbb
fstps
sarl
cs
repnz
mov
repnz
sub
mov
adc
out
int3
add
sub
xor
jg
aad
daa
ror
test
mov
cmpsl
inc
xor
xchg
mov
mov
pop
mov
jmp
jg
fwait
add
filds
inc
dec
cmpsl
outsl
aad
fbstp
push
xor
ljmp
mov
xchg
mov
and
or
xchg
mov
jns
add
imul
mov
push
je
or
lahf
in
dec
cmp
dec
movsb
mov
jp
mulb
testb
push
mov
ljmp
popf
cmp
shrl
mov
mov
fisubl
inc
shrb
push
shlb
push
inc
adc
icebp
fnstsw
mov
cli
mov
pop
sub
mulb
add
pop
inc
push
fmull
sbb
push
fdivrl
popa
pop
fstpt
imul
sbb
mov
cmp
ljmp
insb
out
jg
inc
or
popf
ficomps
push
movsb
mov
push
movb
iret
add
dec
dec
xchg
adc
mov
sbb
add
gs
shr
aaa
add
xor
adc
ret
sahf
dec
or
ret
mov
sysexit
loopne
jle
xor
call
mov
pop
outsl
cwtl
sbb
xlat
aaa
popl
daa
or
adc
hlt
test
movsl
add
xchg
clc
and
mov
mov
xor
jmp
or
pmullw
inc
cmp
arpl
in
sub
push
push
xor
mov
int3
es
mov
cmpsb
bound
pop
lods
xchg
div
jle
stos
jb
pop
xor
xor
xchg
xorb
fdivr
stc
mov
xchg
pop
shr
sarl
xchg
pop
out
mov
mov
test
add
xor
dec
xchg
add
mov
clc
inc
stos
lods
pop
pop
inc
sbb
pop
jl
in
add
repnz
fistpll
mov
jnp
outsb
mov
xlat
push
xchg
ja
xchg
xor
and
jge
cli
inc
push
push
xchg
sbb
push
jnp
lret
test
mov
shlb
inc
aam
out
adc
dec
and
or
sar
xor
shrb
ret
pop
in
adc
leave
mov
mov
xchg
dec
hlt
dec
or
push
or
into
je
cmpsb
dec
push
int
cmpsl
mov
cmp
mov
sarb
clc
shll
aas
jae
popf
movsl
jae
inc
jae
loop
enter
and
cmc
cmp
xchg
inc
mov
leave
orl
rorl
dec
in
inc
aas
fwait
mov
sarl
std
fcoms
lds
loopne
mov
xor
insb
xchg
or
aad
cmc
not
and
mov
xchg
mov
nop
xor
mov
aas
nop
adc
dec
scas
lds
loop
jge
or
fdivrs
lret
sub
pop
pop
sbb
addr16
je
push
outsb
fstpt
xor
shrl
add
jecxz
xor
jecxz
jno
or
inc
push
aam
out
sahf
call
jp
inc
push
mov
mov
imul
mov
rolb
imul
jle
mov
mov
clc
outsl
adc
and
sub
addr16
pop
sbb
mov
nop
into
mov
psllq
stos
xchg
jecxz
xchg
insb
jge
adc
mov
cmp
or
roll
stos
out
jae
loope
sbb
mov
push
xchg
sahf
int
call
jbe
arpl
xchg
sbb
jne
xorl
ret
data16
imull
movl
and
cli
loop
dec
pop
in
lcall
testb
sub
sahf
xchg
dec
fcoms
jl
bound
add
or
into
jg
gs
lcall
lret
xlat
pop
push
pop
pop
xor
pop
je
rorl
adc
clc
push
inc
cmp
fwait
popf
pop
out
mov
push
push
mov
pop
call
add
inc
xchg
bound
cltd
pop
mov
outsl
mul
mov
inc
idiv
test
dec
mov
cmp
xor
mov
xorl
outsl
arpl
ret
repnz
sbb
jmp
cmp
xchg
xor
mov
cltd
push
shrl
imul
js
xchg
inc
out
xchg
mov
cmp
fldcw
dec
movsl
dec
xchg
pop
pop
dec
loope
leave
xor
int3
push
xor
adc
adc
aas
insl
xchg
decl
dec
aas
decb
cmp
sbb
lods
pop
mov
cli
repz
aaa
push
hlt
cmp
loope
outsl
stc
dec
adc
adc
pop
movb
xor
cltd
dec
sub
mov
dec
xorl
and
and
sub
pop
lods
lret
mov
lods
push
sub
push
aas
push
xor
repnz
sub
xchg
jecxz
add
lods
fsubrs
mov
or
ds
mov
adc
pmaddwd
lds
xchg
inc
fcmovne
int3
xchg
or
imul
xorb
cli
jmp
xchg
pop
lcall
mov
jecxz
and
out
es
xor
sub
mov
lret
push
sbb
les
cmp
xchg
int3
into
popa
mov
dec
xorb
mov
add
ficoms
mov
mov
int
pop
jae
outsb
jno
insb
mov
test
push
push
int
mov
cmpsb
clc
out
fwait
aas
xchg
leave
dec
in
ret
cli
into
adc
mov
hlt
sbb
stos
int
sti
xlat
ja
imulb
sbb
dec
push
mov
pop
leave
or
aam
insb
dec
sub
ljmp
in
movsb
push
pop
jmp
jbe
add
out
push
scas
and
xor
adc
jbe
sbb
push
cmp
shrb
or
mov
dec
test
in
subl
dec
fstl
adc
mov
rclb
and
int3
out
lahf
xor
sbb
lcall
mov
repz
xchg
mov
bound
push
ret
inc
or
and
dec
bound
popf
cli
fs
and
cmp
in
shl
cmp
fldcw
je
imul
xchg
push
jle
inc
sti
into
cli
add
pop
test
sbb
or
repz
add
outsb
mov
push
push
int
cmp
fldcw
decb
sbb
stos
call
push
lea
push
xor
jmp
repnz
pusha
and
pop
jne
es
pmulhw
sub
add
mov
adc
push
je
push
rolb
pop
cs
jl
push
test
xlat
shll
xchg
pop
dec
shll
outsl
aam
sub
adc
mov
popf
clc
mov
dec
mov
mov
jns
lcall
iret
clc
mov
insb
xlat
pop
fcomip
lret
popf
mov
lcall
mov
fs
dec
in
inc
adc
int3
mov
adc
jo
in
push
pop
mov
mov
js
xor
push
mov
xadd
mov
lret
mov
mov
in
dec
lods
fcmovne
mov
test
out
in
mov
out
outsl
xchg
aam
or
aam
outsb
sbb
xor
stos
adc
and
mov
dec
test
out
das
pop
fnstsw
out
bound
aaa
xchg
adc
inc
loopne
inc
cwtl
inc
shll
cmp
es
mov
jg
xchg
addr16
inc
xor
shl
pop
add
mov
add
leave
stc
sub
les
lcall
dec
mov
inc
xor
in
or
add
sbb
jbe
inc
cmc
sahf
jo
imul
mov
arpl
scas
jl
sub
sbb
mov
fstpt
loop
lret
stos
adc
clc
jno
mov
lock
cmp
add
fstps
popa
push
pop
sbbb
xor
push
fwait
mov
mov
loope
pop
leave
ret
adc
dec
rcrl
cmpsl
mov
sub
repz
lret
cmp
leave
inc
and
dec
in
mov
add
pop
xchg
js
mov
sbb
mov
and
mov
jle
popf
imul
xchg
movsb
cltd
nop
mov
jnp
es
jge
mov
xchg
sub
stos
adc
dec
pop
push
shl
xchg
aaa
jl
jne
jae
lret
test
scas
add
test
mov
add
or
push
out
mov
jecxz
sub
jbe
shrl
sbb
jo
and
adc
add
lcall
mov
repnz
inc
imul
insl
jge
loopne
cmp
or
mov
and
mov
dec
mov
cmpsb
pop
ds
enter
xchg
mov
push
inc
das
ficoml
mov
out
jmp
jp
add
mov
pop
mov
lret
loop
addl
idivl
cmp
inc
jge
xchg
arpl
insb
xchg
in
jo
or
std
ljmp
adc
add
les
mov
ljmp
fs
mov
lods
cli
mov
sub
andl
jb
xor
push
add
sub
clc
or
stc
add
jo
cli
xor
fmul
aam
lret
std
inc
push
addb
sub
xchg
push
stos
inc
cli
fsubrp
int3
mov
scas
hlt
out
add
jbe
jnp
lret
call
xchg
dec
jo
ret
jno
les
push
addl
push
mov
bound
jecxz
mov
outsb
inc
mov
jmp
xor
mov
pop
or
test
je
repnz
jae
xor
in
movsl
pop
xor
jle
in
out
je
sbbb
sub
rorl
xchg
in
jns
push
aas
dec
inc
adc
adc
adc
andl
repnz
inc
push
jg
je
jnp
lods
adc
mov
pop
mov
aad
lahf
jp
cmp
rcll
lcall
repnz
cmp
xchg
aam
scas
mov
sbb
outsl
and
mov
ljmp
add
sub
arpl
adc
xor
iret
inc
add
mov
xor
cmp
hlt
push
ss
sahf
dec
mov
pop
fstpt
sbb
push
and
jne
addl
out
xchg
out
test
lds
in
add
loope
pop
repnz
sbb
rcrl
lahf
xor
dec
or
nop
inc
inc
in
aad
jmp
test
imul
pusha
pop
pop
mov
cmp
in
inc
xor
loop
inc
cmp
mov
data16
ss
sub
mov
cmp
mov
push
pop
mov
cmp
jp
fbld
lret
pusha
shl
cmp
scas
ds
in
xchg
push
xor
test
cld
subl
jae
data16
dec
test
dec
test
add
shlb
sbb
push
sbb
out
add
test
lock
mov
fisttps
jns,pt
mov
xor
orl
jge
out
dec
xor
test
inc
cwtl
or
mov
mov
xchg
popf
inc
mov
and
das
and
inc
mov
repnz
fnstenv
adc
lcall
pusha
xchg
sub
cmp
jns
jo
aad
push
dec
dec
nop
pop
sbb
sarl
mov
inc
leave
out
adcb
out
loopne
push
pusha
xchg
mov
adc
and
xchg
dec
jp
lcall
mov
jno
lods
push
push
sub
jo
negb
push
pop
dec
push
stos
xchg
mov
sub
mov
shlb
push
outsb
daa
jae
push
mov
dec
daa
test
mov
pop
inc
xor
popf
cmp
mov
repz
call
cli
ds
outsl
push
popf
or
loope
cmc
insl
sti
or
enter
ficoms
and
adc
sub
dec
cwtl
jb
sarl
push
pop
add
xchg
pop
sahf
add
xor
mov
int3
mov
aad
and
jns
cld
and
xchg
mov
in
cli
popa
push
stos
addr16
pusha
cli
lret
jnp
lods
in
addr16
pop
shrb
jo
data16
add
insl
out
addr16
jge
cmc
jp
or
mov
jno
sbb
mov
jge
in
leave
or
mov
jle
push
sar
andl
mov
lods
mov
mov
jecxz
movsl
hlt
push
aaa
fdivrs
jmp
jp
movb
lret
aas
js
and
test
mov
adc
test
mov
push
jp
movsb
repnz
pusha
pushl
pop
repz
hlt
cld
cmp
xor
sub
mov
inc
xchg
sbb
test
leave
pop
mov
or
scas
xchg
adcb
inc
xor
sub
jecxz
jns
jns
inc
shlb
ja
aaa
gs
add
xor
adc
shll
inc
xchg
scas
inc
lds
pop
cmp
xor
adc
insb
idiv
inc
dec
or
jecxz
push
xor
sub
or
fimull
fwait
pop
leave
xchg
lcall
xchg
push
push
imul
mov
push
mov
in
fimull
cmp
data16
rsqrtps
adc
pop
dec
es
mov
jg
sbb
cld
mov
push
cmp
xor
rolb
mov
mov
cmp
xchg
xor
lock
push
lea
push
jnp
test
bound
add
shl
loope
cmpb
push
fwait
push
push
inc
xchg
push
nop
dec
test
push
test
sub
pop
stc
test
and
sbbb
pushf
cmp
adc
fildl
xchg
xchg
lods
test
in
jne
ja
stos
je
and
cmpsb
add
outsb
lret
pop
adc
jo
or
ljmp
popa
cmp
mov
call
xor
sahf
aas
pop
xor
cmp
jb
xchg
loop
lcall
imul
into
sbb
and
fimull
out
daa
cld
das
push
and
mov
push
daa
ret
inc
mov
mov
mov
adc
mov
mov
jge
cli
int3
cli
mov
scas
inc
enter
add
or
mov
lock
das
sti
mov
mov
imul
int
into
mov
andb
aas
mov
pop
cmpsl
test
stc
cli
fisubrs
pushf
or
sbb
loop
out
ss
hlt
push
aam
cmp
fidivl
mov
or
xor
aas
out
xor
hlt
xchg
cs
ret
xlat
cmp
jp
fsubrs
icebp
mov
or
pop
ret
fadds
cmp
pop
mov
dec
inc
jmp
cltd
in
or
outsb
mov
mov
es
test
xlat
mov
xchg
movsb
mov
cmpsl
or
bound
and
inc
sbb
xchg
enter
and
insl
gs
pop
cmc
int3
mov
jmp
and
je
inc
sub
adc
xor
mov
mov
out
or
popf
xor
inc
xor
lcall
jge
sub
mov
xchg
mov
jle
mov
adc
bound
shld
ficomps
push
inc
imul
jno
adc
je
mov
cmp
nop
fcoml
fdivs
dec
in
jns
jne
dec
push
jns
or
cmp
lahf
adc
hlt
xchg
test
mov
inc
cmp
mov
gs
scas
mov
arpl
jl
or
push
inc
pop
ret
movsl
divl
jmp
ljmp
add
xchg
cmp
inc
lods
sbb
std
sub
pop
lret
out
mov
dec
jnp
adcb
pushf
aaa
mov
insl
sbb
int3
test
stos
or
outsl
jecxz
loop
dec
scas
mov
xor
jno
inc
add
cmp
and
mov
test
push
rcl
jnp
icebp
repnz
pop
jg
fisttps
stos
sbb
pop
adc
dec
cmpb
in
lret
dec
fistpll
jl
lds
nop
mov
mov
mov
imul
jge
dec
fwait
push
loop
nop
adc
mov
outsl
std
ljmp
push
xchg
or
or
stos
sub
repz
mov
dec
lret
and
or
xchg
push
add
sub
jge
mov
int3
jl
xchg
xchg
pop
call
pop
xor
mov
xor
pop
loopne
outsl
push
loopne
mov
idiv
cld
lods
add
push
dec
jp
inc
mov
roll
sub
pop
jo
loope
push
ret
mov
cmpsl
sub
bound
aad
cmp
dec
stc
in
lret
cs
mov
push
push
xchg
data16
jg
in
out
fbstp
fistl
loopne
add
xlat
ret
jmp
and
pop
movsb
loop
and
aas
and
movsb
mov
fcmove
xchg
add
test
mov
gs
mov
lods
clc
xor
fidivrs
test
mov
add
or
xchg
outsl
sarb
jecxz
stc
retw
fisubs
xor
inc
outsl
fists
and
ret
inc
dec
inc
jnp
pop
mov
in
mov
jno
pop
popa
jo
push
xlat
jnp
frstor
cmp
xchg
xor
js
mov
repz
shlb
push
mov
in
fbld
pop
sbb
popf
orl
cmc
call
popf
std
or
rcrb
jnp
lret
aas
push
xchg
jo
jp
pop
shlb
ja
rcrb
aad
sbb
mov
mov
jns
cmp
mov
sub
insb
mov
cmp
push
xor
mov
cltd
and
ds
cmp
pusha
clc
fidivrl
cli
fadd
stc
mov
aas
loopne
sbb
fs
test
jg
xchg
dec
or
stos
insl
testl
mov
inc
lods
outsb
push
arpl
jo
clc
movb
dec
js
fsubl
inc
jne
pop
addl
ss
in
adc
in
cmc
addr16
lcall
stos
faddl
jnp
outsb
dec
or
out
out
in
fimuls
shrb
pusha
repnz
cli
enter
mov
push
xchg
in
adc
jbe
adcb
xor
cmc
push
pop
cli
cwtl
mov
inc
inc
loope
mov
sbb
test
in
and
xor
dec
push
jecxz
sub
push
es
mov
xchg
js
mov
test
call
je
sbb
fucomp
vmovdqu
stc
pop
in
repz
outsl
je
pop
and
jnp
push
insl
popf
adc
in
jl
sbb
adcb
push
jmp
fildl
mov
dec
test
xchg
mov
jp
pop
repz
lret
lds
test
lret
xchg
inc
inc
push
call
sub
cmp
add
and
subb
fsub
aas
dec
addr16
mov
movsl
xlat
lret
inc
push
loopne
imul
jbe
cltd
sbbb
ja
cmp
ret
cltd
pop
ret
lret
sub
cli
out
push
jne
or
sbb
lods
push
add
dec
sbb
les
sub
mov
cmpb
sti
ret
test
sub
xlat
imul
inc
repnz
mov
jle
cmp
dec
and
pushf
pop
scas
xchg
mov
dec
xor
ljmp
adc
and
fists
xchg
push
lods
pop
nop
js
sub
jg
int
or
aas
in
add
jge
lea
fwait
out
leave
jp
push
call
imulb
cmpsb
dec
mov
insl
mov
mov
push
push
mov
cmp
add
jo
nop
in
movsl
xchg
out
dec
movsl
dec
lret
xchg
dec
push
dec
xlat
jns
nop
add
bound
js
xchg
fwait
call
inc
jp
rorl
sub
jnp
mov
mov
push
and
mov
icebp
inc
or
loopne
out
jl
mov
adc
jno
xchg
dec
popf
xchg
fidivrl
ss
movsb
mov
mov
pop
les
mov
add
mov
jecxz
cmc
and
mov
mov
jb
xor
add
push
ret
jle
and
test
add
cmpsl
into
jmp
out
mov
adc
mov
aaa
dec
add
iret
push
cltd
idivl
push
push
sbb
jl
jo
or
jle
xor
mov
das
fldenv
xchg
adc
das
or
xchg
mov
or
jle
add
jb
jns
pop
add
sti
int
arpl
fldenv
pop
jge
dec
or
ja
aam
rcl
xchg
pop
and
sub
ret
std
clc
mov
sarl
xchg
out
stc
fwait
and
cs
push
fucomp
pop
dec
mov
lahf
inc
xchg
sbb
shlb
aam
jge
gs
add
jae
jg
add
sbb
in
jnp
mov
add
mov
nop
push
cwtl
push
pop
pop
xor
jo
or
mov
rcr
add
fisttpll
lret
in
mov
outsb
mov
out
out
xor
pop
or
leave
cld
mov
cmp
scas
ret
lret
aas
adc
out
mov
mov
xor
insl
outsb
lret
mov
stos
ret
movsb
mov
lcall
adc
mov
mov
pop
lret
int
inc
pop
fsubrl
cmpsb
mov
and
jae
scas
dec
sarl
inc
cltd
je
pop
sahf
pusha
lcall
ficompl
std
pop
pusha
mov
sbb
pop
out
cmp
mov
cmp
cmp
imul
js
insl
data16
mull
xor
data16
mov
sub
mov
cli
push
xchg
adc
cmp
and
stc
push
jl
dec
mov
mov
mov
cmp
cmp
inc
xchg
je
xor
ret
rorb
bound
xchg
imul
out
into
cmc
lods
jns
cmp
jmp
aas
xlat
popa
cmp
jns
imul
mov
sbb
stc
xchg
cli
cli
jmp
adc
ja
pop
mov
jne
cmpsl
fcoml
pop
mov
mov
sub
fs
ljmp
ret
push
insl
xchg
shr
xor
sti
jo
repnz
mov
fwait
jmp
cs
and
xor
xor
or
jnp
lods
add
inc
xor
push
mov
movsl
lods
mov
int3
scas
add
ret
lahf
push
pop
shrb
in
mov
lock
lcall
cmp
or
and
inc
scas
adc
xchg
sub
cmc
shll
fsub
mov
iret
adc
test
pcmpgtd
imul
test
sahf
stos
ljmp
sti
fndisi(8087
inc
repz
cmc
les
aam
inc
add
jg
sarb
add
int
hlt
jne
ror
mov
push
push
int
filds
packuswb
and
jg
cs
imulb
aad
mov
repnz
inc
stos
adc
in
jle
pop
insb
clc
je
iret
jo
icebp
lret
cmpl
push
imul
fs
jnp
inc
repz
test
mov
push
nop
xor
icebp
dec
loope
aas
xor
xor
sbb
pop
stos
sbb
mov
fistl
xchg
sub
js
jnp
in
add
jae
jae
add
ss
lea
adc
fisttps
cwtl
mov
or
adc
mov
inc
rcrb
mov
fcomi
push
loope
pop
or
inc
cltd
dec
inc
sub
jp
faddl
inc
push
adc
cwtl
sbb
dec
flds
jg
jg
push
iret
idivl
out
jg
dec
push
ljmp
cwtl
popf
into
mov
mov
loope
popa
dec
pop
mov
jae
mov
mov
or
orl
scas
xchg
inc
fcomp
int3
dec
sbb
push
mov
xor
push
mov
jne
imul
push
outsl
mov
xlat
leave
scas
fisttpl
cwtl
cmp
out
xor
xor
testl
fdivl
scas
psubw
inc
pop
jne
ret
in
in
push
pop
lahf
mov
pop
jo
inc
inc
mov
xchg
in
or
cltd
adc
inc
and
ljmp
rclb
inc
rclb
ret
jbe
ds
out
js
cmp
incl
ret
inc
aam
and
in
fldt
or
in
ret
das
pop
sti
cmpsb
jmp
pusha
test
dec
add
mov
aam
xor
sti
sub
int
sbb
int
out
imul
mov
aad
dec
enter
dec
js
fmul
mov
mov
xor
mov
out
hlt
push
clc
mov
imul
into
jns
pop
mul
xchg
cmp
and
push
into
fists
add
inc
ficomps
xchg
xchg
dec
jnp
jne
jo
fwait
in
and
jp
pop
test
popa
mov
cmp
jle
sbb
inc
push
sub
fmull
sahf
inc
lret
lahf
inc
push
ljmp
mov
jg
and
dec
sbb
or
imull
fcomi
mov
adc
xchg
ja
mov
outsb
fistpll
and
xor
push
lea
in
aad
cli
cltd
jbe
loop
cs
sbb
mov
sub
mov
mov
jnp
movsl
stc
xor
leave
mov
xor
sbb
in
and
gs
mov
adc
popf
mov
out
mov
scas
scas
cmp
sbb
inc
cmp
rolb
push
dec
pop
leave
inc
shr
dec
les
fcmovu
pcmpeqb
jae
jmp
adc
rolb
add
clc
fnstenv
fcoml
push
out
pop
jge
ret
mov
lcall
gs
push
inc
push
dec
call
mov
xchg
sbb
push
rorb
int
add
enter
and
test
sbb
cwtl
fisubl
clc
push
fsubl
sarb
fs
mov
test
pop
pop
ds
outsb
lods
add
ja
lods
loopne
push
or
mov
cmp
add
cli
sub
sahf
or
xchg
sbb
cld
xor
cmp
popf
in
mov
pop
push
adc
and
loope
push
pop
ss
out
test
adc
popf
dec
lods
int3
cwtl
jo
test
out
pop
xchg
les
ja
push
ret
mov
sbbl
subb
adc
mov
or
rorb
push
aad
jbe
pushf
xlat
adc
add
popa
lret
out
ds
xchg
ret
lock
ror
in
dec
mov
push
int3
push
xchg
in
adc
push
cmp
mov
filds
addr16
scas
dec
sub
movsb
jns
pop
lods
xchg
iret
cli
int3
scas
ret
xchg
mov
xor
sub
imulb
fcomps
aas
or
sub
push
push
adc
aam
or
sbb
xlat
and
lods
std
pop
enter
scas
pushf
mov
dec
test
das
mov
jne
sub
das
repnz
add
movsl
cld
sahf
inc
jle
stc
aaa
rol
inc
and
fwait
mov
pop
loope
jbe
sub
fbstp
xor
lods
adc
addb
movsb
out
jmp
out
sbb
fucom
mov
cltd
mov
nop
or
cltd
or
push
sbb
clc
sub
les
pop
shrb
inc
mov
xor
sbb
int3
sbb
cmpl
or
mov
adc
fcomps
int
out
arpl
leave
adc
sarb
mov
jp
or
scas
mov
dec
out
jnp
out
cmp
sbb
and
sbb
mov
add
ret
rorb
adc
ror
shll
sti
test
inc
movsl
js
inc
ficoms
or
rcrb
xor
push
outsb
mov
mov
and
fwait
dec
test
mov
xor
adc
nop
xor
jae
gs
push
outsb
mov
xchg
push
mov
aaa
mov
test
in
push
dec
xchg
mov
cmp
or
pop
inc
jnp
mov
hlt
loope
in
loop
cmp
and
lods
mov
or
iret
enter
bound
sbb
mov
xchg
idivb
jecxz
mov
jbe
adc
add
lret
int3
cmp
das
adc
lds
cmp
pushf
push
ljmp
fldl
dec
out
sub
mov
sub
test
fxch
pop
xlat
cmpsl
ficompl
adc
jns
dec
fwait
mov
push
inc
mov
mov
pop
sbb
jne
aas
sbbl
inc
adc
inc
popa
movsb
jg
xor
pop
in
inc
add
stc
ret
cmp
cmp
and
push
pop
push
sub
fcmovnbe
loope
ds
jns
bound
inc
mov
mov
ret
arpl
in
aaa
or
push
mov
xor
xorb
cs
or
mov
pusha
jl
pop
cmp
fs
test
add
sbb
or
popa
cmpsl
sbb
rorl
je
push
orb
jmp
pop
inc
arpl
arpl
out
and
jp
xchg
ss
cli
rorb
lea
int3
leave
xchg
lods
sub
push
inc
xor
subl
sti
andl
jle
and
outsb
jl
push
data16
add
mov
icebp
jge
or
imul
aam
mov
jge
mov
jmp
imul
mov
int
mov
xchg
imul
push
cli
dec
setge
div
int
lret
sub
xchg
sbbl
fdivrs
xorb
cld
dec
movsb
lds
push
add
xor
add
outsl
add
sub
out
fisttps
xor
sbb
into
push
nop
inc
or
fldcw
lock
adc
repz
sbb
lods
leave
daa
jae
sbb
dec
cmc
test
loope
dec
out
and
push
mov
incb
push
xchg
hlt
dec
enter
cmp
cli
cmc
insl
sti
fwait
data16
cmpsb
mov
ficoms
dec
sub
sahf
and
mov
insb
mov
jbe
daa
jbe
add
xchg
sbb
inc
cmp
gs
insl
pushf
clc
inc
in
test
mov
movsl
sahf
cmp
xchg
pushf
cs
out
sbb
dec
mov
out
jl
sub
and
addr16
mov
sbb
nop
jb
pop
add
cmp
ror
and
loop
cmp
push
mov
mov
movsl
dec
jae
cwtl
loop
sub
ss
mov
mov
xchg
cmp
xchg
data16
adc
jmp
xor
pop
mov
inc
shll
jg
incb
push
adc
sbb
add
int
push
xchg
jae
push
aaa
pop
je
push
movsb
out
pop
xlat
outsl
dec
mov
insl
lods
enter
sub
add
loope
fisubrl
mov
jae
aas
lret
scas
inc
daa
pop
push
out
movsl
outsl
mov
xchg
daa
xor
xor
ret
mov
mull
add
push
scas
addl
cli
jnp
bnd
arpl
mov
adc
outsl
xchg
insl
cmpsl
dec
iret
xor
jg
negl
data16
and
gs
xchg
fstps
jno
push
dec
mov
pop
sub
sub
lcall
xchg
lods
or
fsubs
cld
cli
insb
fisttpll
fldcw
pop
icebp
cld
out
test
sbb
adc
dec
dec
pusha
ret
int3
jl
and
and
sub
lock
les
jecxz
xchg
pop
and
jge,pt
repnz
mov
data16
adc
repnz
and
fiaddl
ja
push
aam
icebp
dec
cmpl
add
mov
or
leave
mov
jno
andl
pushf
cli
cwtl
lret
push
leave
lret
or
or
mov
sub
mov
and
pop
stos
xchg
fmul
imul
jl
xchg
sbbl
arpl
sbb
pop
pop
dec
sbb
sbb
scas
cld
cld
sbb
rolb
xor
stc
xchg
incl
neg
add
in
in
arpl
enter
jmp
xchg
test
mov
out
ds
adc
int
pop
fsub
ss
jns
inc
xchg
mov
clc
insb
add
dec
cmp
pop
cmp
out
rclb
filds
dec
stos
shrl
popf
fisttpll
xchg
xchg
lock
idivb
fadds
insb
leave
ret
push
loop
inc
adc
arpl
jl
out
jecxz
pop
push
loop
sbb
fcoml
cmpsb
and
xor
xor
sbb
sbb
inc
cmp
sbb
fs
outsb
sbb
sbb
jo
cmp
fwait
add
mov
jnp
test
push
jbe
mov
jmp
fwait
add
test
incl
jbe
lret
pop
addr16
push
and
sbb
and
cmc
and
jae
cmp
cmp
or
mov
stos
inc
mov
dec
rcrl
js
out
push
sub
sbb
das
push
dec
inc
sub
xchg
std
mov
pop
jbe
jo
jne
imul
sub
mov
nop
sahf
imul
jge
cmovno
stc
cmp
dec
mov
repnz
nop
fadds
add
dec
add
in
mov
pop
daa
das
ss
or
rcll
bound
outsl
mov
mov
mov
sbbb
or
xor
addr16
loopne
frstor
test
jge
lea
cmp
addb
addr16
xor
pop
rclb
fwait
cmp
lcall
xor
jp
iret
xchg
jns
inc
in
pop
sbb
aas
int
mov
lret
add
gs
xchg
push
mov
ret
sub
lds
sbb
mov
sub
mov
xorl
inc
mov
add
jns
ljmp
cs
add
add
mov
add
add
jae
jae
jne
add
add
add
add
add
jbe
jb
insb
add
jbe
jb
jo
gs
add
add
add
addr16
add
outsb
add
add
outsb
gs
insb
insb
jns
popa
fs
imul
add
add
popa
outsb
jae
jo
jb
outsl
add
imul
add
outsl
add
add
jae
jo
jb
je
outsl
outsb
add
insl
add
insb
add
jns
add
add
add
add
push
add
popa
insb
insb
add
add
popa
add
add
jne
add
outsb
add
insb
add
add
add
add
add
jae
outsb
je
popa
insb
add
add
imul
je
imul
add
jae
add
imul
add
je
push
add
jae
popa
insb
insb
add
add
insb
imul
gs
arpl
add
outsb
add
add
add
add
add
arpl
je
imul
add
data16
arpl
outsb
jae
bound
jns
add
insl
add
jns
add
add
add
popa
add
add
je
imul
add
insb
gs
outsl
add
jae
add
jae
add
add
add
add
jae
gs
add
add
add
add
insb
add
bound
add
je
imul
add
data16
insb
add
je
push
add
add
add
add
