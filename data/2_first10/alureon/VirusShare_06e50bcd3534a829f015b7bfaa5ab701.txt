push
mov
or
mov
movzbl
inc
mov
mov
imul
lea
mov
decl
jne
lea
pop
ret
push
mov
cmpl
push
push
jb
mov
mov
mov
pushl
popl
sub
test
add
lods
xor
stos
add
sub
sub
sub
roll
sub
dec
jne
pop
pop
pop
ret
push
mov
mov
mov
sub
test
sub
add
push
mov
test
jne
xor
jmp
mov
add
mov
push
mov
mov
mov
push
mov
add
add
add
mov
mov
test
jns
and
sub
cmp
jae
mov
jmp
xor
mov
cmp
jae
jmp
mov
mov
mov
mov
add
mov
call
cmp
je
incl
mov
cmp
jb
mov
mov
mov
cmp
je
movzwl
mov
add
test
je
mov
add
cmp
jae
cmp
jb
xor
cmpb
je
inc
cmpb
jne
push
lea
push
push
mov
call
add
test
add
lea
push
mov
movb
call
mov
test
jne
xor
jmp
lea
call
push
push
call
mov
mov
pop
pop
pop
leave
ret
push
push
push
xor
call
mov
lea
test
jbe
mov
movzwl
mov
and
rol
add
dec
jne
test
jns
lea
and
or
pop
mov
pop
ret
push
mov
add
test
sub
andl
push
lea
push
movb
mov
mov
mov
mov
rep
mov
mov
rdtsc
mov
mov
mov
mov
not
ror
not
movzbl
lea
cmpb
jne
mov
push
push
push
movb
call
push
call
push
push
pushl
mov
call
mov
mov
cmp
jne
movzbl
push
push
pushl
call
pushl
push
pushl
call
xor
pop
inc
pop
leave
ret
push
mov
sub
test
sub
push
mov
mov
add
mov
test
jne
push
add
pop
jmp
andl
push
lea
lea
cmpl
push
je
mov
mov
add
push
mov
call
mov
test
je
mov
andl
add
cmpl
je
mov
pushl
pushl
call
mov
test
je
mov
mov
mov
mov
mov
mov
mov
incl
mov
mov
lea
cmpl
jne
mov
incl
mov
imul
lea
lea
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
mov
xor
cmp
je
inc
inc
cmpb
jne
ret
push
push
xor
push
mov
call
mov
push
push
mov
call
push
mov
call
mov
xor
add
cmp
jne
push
pushl
push
mov
call
jmp
cmp
jne
push
push
push
push
push
push
mov
call
test
je
push
call
push
call
push
jmp
cmp
jne
testl
jne
cmp
je
push
mov
call
pop
test
jne
mov
call
jmp
cmp
je
push
push
push
xor
call
push
mov
call
xor
pop
pop
ret
push
mov
sub
sub
mov
add
mov
xor
mov
cmp
je
add
add
testw
add
mov
cmp
je
push
mov
push
cmpl
jne
mov
add
push
mov
call
mov
mov
call
push
pushl
call
test
je
mov
mov
add
jmp
cmp
je
push
add
pop
mov
mov
test
jne
jmp
mov
lea
mov
mov
add
add
cmpl
jne
pop
pop
lea
push
mov
movb
movb
movb
call
leave
ret
push
xor
cmp
jbe
lea
push
mov
add
mov
add
lea
test
add
add
add
cmp
jb
pop
pop
ret
push
mov
sub
cmp
sub
push
mov
push
xor
push
cmp
jne
push
mov
call
push
lea
push
xor
lea
test
push
mov
push
mov
mov
call
push
mov
call
push
push
push
push
mov
call
mov
mov
call
cmp
jne
cmp
jne
cmpw
jne
push
push
push
push
mov
call
push
push
mov
push
mov
call
cmp
je
mov
jmp
lea
push
mov
mov
push
pushl
push
mov
call
cmp
je
cmp
jne
lea
call
pushl
mov
pushl
mov
push
call
mov
sub
mov
mov
add
push
lea
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
call
mov
mov
add
add
push
and
add
push
call
mov
mov
add
mov
mov
mov
add
movzwl
lea
add
mov
movzwl
lea
mov
mov
sub
xor
mov
cmp
je
mov
cmp
je
add
mov
mov
mov
jmp
mov
mov
mov
cmp
je
add
lea
mov
mov
mov
mov
add
push
push
push
call
or
sub
mov
mov
mov
sub
push
push
call
push
call
test
je
cmpl
je
mov
mov
call
mov
add
mov
push
lea
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
call
push
lea
push
mov
push
pushl
mov
call
mov
call
push
lea
push
push
pushl
mov
call
mov
call
push
lea
push
push
pushl
mov
call
mov
call
push
lea
push
push
pushl
mov
call
push
lea
push
push
pushl
mov
call
push
lea
push
push
pushl
mov
call
push
lea
push
push
pushl
mov
call
push
lea
push
push
pushl
mov
call
mov
mov
mov
mov
mov
xor
xor
cmp
jae
mov
mov
mov
subl
addl
push
pop
rep
mov
mov
mov
add
sub
add
add
mov
movzwl
push
add
pop
cmp
jb
xor
push
push
push
push
push
mov
call
mov
call
cmp
je
in
push
push
pushl
mov
call
jmp
pushl
pushl
pushl
jmp
xor
pop
pop
pop
leave
ret
push
mov
push
mov
movzwl
movzwl
andl
add
je
push
mov
push
lea
testl
je
mov
mov
and
add
push
push
pushl
call
jmp
mov
mov
add
add
movzwl
movzwl
incl
add
add
cmp
add
cmp
jb
pop
pop
pop
pop
ret
push
mov
push
push
mov
mov
mov
mov
push
push
lea
mov
mov
mov
sub
not
sub
not
shr
add
push
mov
sub
add
add
push
lea
push
mov
call
sub
add
mov
mov
mov
mov
push
popl
sub
sub
lods
xor
stos
sub
sub
sub
testb
sub
roll
sub
lea
test
jne
mov
mov
neg
add
add
sub
add
mov
imul
add
mov
imul
add
mov
mov
mov
add
sub
and
add
movl
mov
pushl
lea
push
push
mov
call
mov
add
xor
add
add
add
decl
mov
jne
addl
cmpl
addl
pop
pop
leave
ret
mov
add
mov
test
je
add
add
add
add
add
push
mov
push
lea
xor
cmp
jbe
add
push
add
pop
cmp
jb
mov
add
xor
cmp
jbe
add
inc
cmp
jb
pop
pop
xor
lea
test
ret
push
push
mov
mov
mov
mov
mov
mov
cmpb
jne
cmpb
jne
pop
pop
ret
push
push
push
push
mov
call
mov
jmp
ljmp
add
add
add
add
cmc
cmp
push
out
in
xor
mov
xchg
subb
hlt
ficoms
inc
sub
pusha
mov
lahf
sbb
xchg
cmpsb
inc
sub
test
shl
jo
call
sbb
into
movsl
movsb
dec
push
ja
lcall
sub
push
adc
lcall
xor
clc
mov
push
adc
jb
push
dec
movsl
lahf
inc
repz
mov
or
loop
popa
popf
mov
sbb
jmp
add
push
mov
inc
pop
inc
pop
push
or
call
xchg
sbb
cmc
int
int
mov
jnp
icebp
fwait
shl
lahf
pop
lea
incb
cmpsb
sbb
shll
dec
xchg
xchg
mov
imul
cli
cmp
mov
stc
daa
and
mov
dec
repz
xchg
movsb
repz
cmp
aas
in
cmp
mov
ret
out
lret
pusha
add
jmp
repz
fs
xorl
jg
hlt
inc
push
sarl
mov
test
stos
lahf
dec
add
fs
jmp
mov
jae
cmp
lods
mov
xchg
movsb
arpl
sarl
faddl
movsl
push
lcall
pop
lcall
sub
or
and
sub
orb
pop
icebp
and
push
cmp
test
clc
dec
push
out
sub
rcl
test
xchg
pop
lods
inc
jo
or
dec
stos
lds
mov
test
ss
pop
add
jmp
stos
or
push
mov
mov
enter
mov
into
mov
testl
int
ret
test
int
mov
mov
pop
cmpsl
xchg
or
mov
ficomps
rorl
xor
adc
push
lods
sub
sbbl
outsb
sbb
adc
fisttpll
adc
in
jmp
divl
pop
cmc
icebp
pop
xchg
xchg
call
lcall
cltd
stos
movsl
into
xor
cmp
nop
mov
fbstp
sub
mov
into
fsubrl
out
movsb
cmp
jl
jb
push
mov
aad
mov
cwtl
xchg
test
sub
and
jo
insb
fsubs
sbb
xor
inc
loope
repnz
cmp
gs
int3
and
js
stos
movsl
pop
jb
pop
fcomip
call
inc
cmc
fisttpll
adcb
dec
faddl
rcll
cs
xchg
mov
cmp
aaa
les
or
xor
dec
lods
lea
jp
cld
or
sub
loop
push
roll
ja
cwtl
ja
and
mov
dec
adc
sbb
sbb
mov
insb
data16
gs
popf
sbb
jbe
test
push
dec
mov
and
cmp
fs
inc
pop
call
out
mov
jo
pushf
pusha
test
mov
sahf
aad
aaa
scas
sub
adc
int
dec
sbb
jmp
jmp
popa
lcall
es
push
dec
dec
fabs
popa
push
enter
jecxz
adcb
jge
mov
imul
sub
and
pop
mov
data16
addr16
ljmp
test
cmp
scas
je
xor
xlat
cmpsl
lods
pop
sti
int3
or
mov
data16
pushf
jno
sbb
andb
dec
pop
pop
sub
jg
adc
mov
lods
inc
ret
and
mov
lret
add
push
pop
in
mov
push
insl
sbb
stos
push
jge
cld
push
repnz
push
lahf
adc
test
orb
stc
xor
jle
mov
rcrb
push
mov
repnz
push
in
mov
jecxz
sub
add
int
jecxz
aas
cmp
sub
rolb
stos
push
fnstenv
jg
fwait
int3
mov
loopne
cmc
mov
adc
mov
stos
cmp
and
aad
xchg
mov
push
push
ret
mov
sub
outsb
ret
pushf
aaa
push
adc
lea
and
inc
ss
lret
xchg
scas
loop
or
in
gs
or
push
in
test
iret
int3
inc
mov
cmc
xchg
cmp
aaa
pop
sbb
popa
fld
rorb
xchg
mov
movsb
xchg
sbb
mov
test
aaa
ret
cs
xor
fs
dec
adc
mov
sub
inc
or
imul
mov
fdivrs
xor
inc
sbb
fstpt
fisttps
cmp
cmp
push
fdivrl
ret
xchg
jno
insb
fcomps
cmp
xchg
xor
jecxz
push
mov
rep
fstp
in
jg
mov
popf
leave
pop
test
push
insb
into
mov
sub
xchg
xorb
sub
add
imul
adc
pop
xchg
mov
leave
insb
xor
jmp
test
pusha
fs
mov
push
push
les
les
jno
in
jae
push
push
test
test
sub
scas
cwtl
cwtl
popa
test
pop
dec
xchg
sbb
sti
pop
jl
repz
or
mov
cmpsl
addr16
aas
jg
pop
punpckhwd
mov
xor
sbb
repnz
push
repz
fldl
out
dec
fcmove
jge
xchg
jne
mov
adc
popa
es
jle
cmp
adc
outsb
xor
lret
rcll
and
pushf
inc
pop
popa
jae
les
add
and
fisubl
mov
mov
cmp
xor
sub
lahf
adc
cmp
mov
and
test
pop
jg
bound
sbb
fmuls
push
mov
sti
inc
xor
mov
mov
loopne
mov
or
je
mov
push
jnp
or
mov
insl
stos
xchg
and
popf
or
addr16
fnstcw
jb
pop
xor
xor
loopne
inc
cmpsb
push
das
in
es
xor
push
loope
dec
lds
test
mov
sub
dec
loope
lcall
fdivs
push
je
rolb
adc
lods
sub
iret
mov
jge
jnp
repz
jae
xor
fisttpll
fisttps
jb
and
and
push
inc
xchg
stos
cli
mov
mov
rcrb
dec
or
adc
stos
pop
add
popf
cs
mov
inc
fucomp
pop
inc
mov
add
cwtl
dec
imul
mov
fistps
sbb
shrb
shll
call
out
popa
sarl
pop
lods
add
and
xchg
in
loope
sarb
int
mov
jne
or
cld
inc
lahf
jbe
nop
pop
ds
test
add
sbb
sti
mov
jbe
hlt
int
dec
into
adc
pop
pop
mov
sbb
mov
xchg
sbb
inc
ds
and
mov
cmp
loopne
ficompl
aaa
imul
inc
mov
dec
ss
and
mov
sub
pushf
pop
mov
or
jle
nop
pop
shrb
push
cmpsb
ds
jle
jbe
sub
int
pop
fimuls
lcall
test
testl
repz
in
adc
mov
imul
sbb
adc
cli
sub
fucompp
cmp
test
or
lret
sub
xor
sub
sub
mov
scas
and
scas
mov
es
xchg
adc
jp
xor
adc
cs
push
aad
int
inc
bound
outsl
jge
pop
repz
mull
mov
pop
mov
stc
add
push
cwtl
fcoms
sbb
in
xchg
push
pop
pop
cmp
mov
mov
jecxz
aam
sbb
jns
jmp
aas
inc
data16
outsl
loop
popa
dec
loop
fwait
lret
adc
cld
xor
stos
mov
add
les
fmul
pop
in
jnp
out
inc
dec
std
jmp
pop
pop
mov
ret
xchg
pop
in
iret
stos
fdivrl
clc
xchg
push
stos
filds
fistl
mov
enter
sbb
les
push
adcb
movsb
mov
cmp
dec
mov
xchg
cwtl
xor
sbb
mov
arpl
pusha
pop
sub
jb
mov
imul
test
repz
xchg
inc
dec
loop
mov
push
lcallw
sub
popa
scas
or
out
cmp
mov
in
test
pop
or
sbb
pop
jne
lcall
push
pop
mov
mov
pop
jl
dec
mov
push
mov
xor
xchg
out
mov
or
mov
mov
popf
or
ds
xor
mov
dec
out
dec
out
adcl
dec
stos
shrl
adcb
mov
les
dec
js
sub
sbb
jbe
fsts
adc
subb
fwait
sbb
sar
lods
ret
hlt
push
mov
stos
push
decl
cmc
arpl
push
ds
pop
repnz
jne
lret
popa
jbe
add
push
out
lret
cmp
loope
faddl
inc
nop
cmp
xchg
movb
jle
xor
push
bound
or
ja
add
stc
test
mull
inc
sbb
nop
or
lods
jbe
push
fdiv
and
adc
hlt
add
test
pop
out
jle
outsb
fsubrs
xorb
adc
jp
jnp
mov
loopne
pushf
fsubrl
hlt
fmul
mov
fistps
pop
or
push
mov
in
mov
inc
jne
std
cmp
aas
xchg
mov
jnp
ja
pop
push
jo
loopne
pop
add
mov
out
or
jp
rorb
inc
push
aad
xor
xor
daa
mov
test
xchg
fdivrl
rep
frstor
add
sub
or
and
xchg
std
out
push
inc
mov
or
xor
mov
sbbl
push
or
cmp
mov
ficoms
test
jl
hlt
pop
es
inc
jp
aam
addr16
cwtl
ss
jge
dec
and
iret
cmp
imul
xchg
xchg
push
inc
repz
lds
xor
test
or
stos
and
xor
ret
leave
nop
add
jo
lods
or
xorl
loopne
mov
jl
sbb
fsubs
jns
or
inc
shrb
jae
lret
movsl
xchg
hlt
pop
pop
fdivl
out
xchg
fnstcw
cs
xor
pop
jp
sbb
in
inc
pusha
lahf
add
sub
sbb
add
out
and
in
gs
push
test
jno
xchg
xchg
fnstsw
lahf
mov
xchg
add
pop
pop
mov
pop
jle
adc
mov
inc
sti
mov
adc
popf
and
jno
mov
xor
lahf
out
test
ss
cmp
mov
in
cmp
nop
xor
dec
xchg
jb
notl
mov
jl
sarl
out
pop
xchg
dec
xchg
mov
mov
ret
push
es
imul
xor
test
push
out
push
fdivrl
mov
jno
push
test
aas
inc
shrl
push
jp
int
push
clc
lcall
adc
mov
mov
xor
mov
xchg
mov
mov
jp
ficoml
pop
std
and
pop
push
icebp
jmp
dec
mov
sub
in
push
push
lret
decl
sbb
mov
dec
adc
xor
sub
xlat
mov
pop
lahf
dec
dec
or
jg
scas
stc
xchg
pushf
push
xor
dec
push
mov
or
bound
cltd
jecxz
adc
sti
dec
xchg
jmp
fisubl
mov
or
pop
loop
lret
xchg
addl
mov
mov
dec
sub
jae
mov
inc
hlt
add
xor
adc
cltd
add
fwait
jbe
leave
cmp
mov
cmp
ss
aad
push
inc
add
imul
xor
sub
fisubrs
hlt
push
call
call
shll
iret
push
xchg
and
orb
push
lock
adc
pop
dec
cli
scas
sbb
jns
or
adc
or
and
mov
push
push
mov
xchg
cs
dec
add
add
sub
inc
xor
pop
ss
popf
nop
insb
into
push
mov
mov
repz
dec
dec
adc
jae
out
sahf
lods
xchg
xchg
lock
mov
sub
loop
lcall
jmp
cmpsb
jb
inc
jne
fisubl
stos
popf
dec
inc
cmpsb
push
mov
rcr
pop
push
sbb
movsb
cmpsl
and
movsb
mov
mov
jecxz
xor
std
shll
cs
test
xchg
sti
mov
loop
jmp
es
lods
xor
mov
icebp
je
mov
push
add
aas
push
xchg
or
js
cmp
xchg
cltd
test
sahf
inc
imul
mov
mov
nop
cld
arpl
icebp
jns
cmpsb
xchg
std
std
cmp
add
arpl
xor
jg
xor
clc
jmp
in
xchg
add
das
outsl
mov
loopne
or
and
sub
popf
and
cmc
inc
mov
mov
std
ret
mov
add
das
faddp
push
add
fs
jp
call
cmp
cltd
lahf
sbb
or
adc
pop
aad
lahf
adc
sbb
in
xlat
imul
enter
and
rolb
fisubs
push
jno
mov
xor
sub
sahf
jmp
enter
inc
fsubrs
fidivrl
pop
ljmp
inc
lahf
lahf
sub
xor
incb
insl
xchg
or
mov
in
xor
jle
pop
mov
add
jecxz
out
add
inc
and
pop
mov
into
shlb
cmp
mov
jns
pop
xchg
shll
ss
mov
add
and
shrb
mov
and
cld
je
push
push
fiadds
add
adcb
jp
push
ja
xchg
push
into
xor
fistps
push
insb
adc
lods
pop
lock
arpl
das
add
adc
mov
notb
sub
or
push
fimuls
jne
fwait
arpl
sbb
sbb
rcll
out
imul
inc
jge
pop
sub
pop
sbb
jb
mov
pop
add
add
in
in
mov
mov
and
orl
scas
cmp
cmp
inc
shll
jge
jp
mov
mov
pop
lahf
jne
cli
pop
and
cmpsb
int
stc
mov
test
or
mov
mov
inc
popf
mov
aam
movsb
out
mov
xlat
sub
cmpsl
jb
cmpsb
insb
pop
mov
cmp
inc
sarb
mov
dec
xchg
out
mov
mov
jmp
in
aad
out
push
cmp
adc
jb
push
mov
ljmp
inc
ljmp
xlat
mov
jo
gs
daa
sub
mov
inc
sub
pop
push
fstps
sbb
push
mov
xchg
sub
or
xor
movsb
in
fdivrl
divps
jp
xchg
imul
add
out
cltd
jmp
les
rorb
jae
mov
mov
add
add
loope
das
fwait
out
daa
add
clc
movsl
sbb
lret
dec
jns
jbe
push
lds
pop
sahf
pop
push
fbld
sub
pand
add
push
mov
pusha
xchg
or
in
dec
inc
pop
or
ljmp
out
out
insl
push
jnp
lahf
popa
mov
cltd
cli
xorps
mov
lret
fmuls
jg
or
adc
pop
mov
insl
push
pop
sarl
insb
jecxz
jecxz
loope
loopne
jae
cmp
arpl
dec
inc
imul
cmp
push
loopne
dec
inc
mov
jg
mov
adc
int
lds
xor
ret
sub
sbb
inc
xchg
mov
cld
int3
and
inc
into
cmp
pop
cmp
int3
adc
cltd
and
sbb
scas
push
sub
mov
movsb
repz
mov
push
in
imul
js
fidivrs
sub
jg
js
jmp
scas
cmpsb
dec
xor
out
inc
and
inc
adc
mov
push
scas
mov
data16
mov
push
add
xchg
or
adc
mov
mov
push
stos
imulb
iret
or
mov
mov
lods
out
cmp
add
iret
sub
sub
inc
jle
jbe
dec
jae
cmpsb
jmp
in
lods
mov
jecxz
es
lahf
ret
fsubp
add
xchg
xor
loopne
out
lahf
arpl
or
rcrb
iret
xchg
js
nop
sub
out
enter
push
push
pushf
cmp
mov
daa
jne
in
dec
mov
adc
jmp
cmp
adc
push
pop
das
stc
fnstcw
out
xlat
incl
aaa
mov
mov
lock
shlb
xchg
push
jmp
test
adc
mov
inc
push
add
subb
mov
cmpsl
dec
lahf
dec
lahf
mov
or
sub
lcall
push
pop
fnstenv
das
enter
or
loope
adc
addr16
cwtl
into
loop
push
xchg
mov
stos
loope
pop
xchg
mov
imul
xlat
and
dec
xchg
add
aaa
popa
fsubs
loopne
mov
push
jp
jg,pt
movsb
mov
push
add
xlat
mov
popf
jo
xlat
push
cwtl
pop
xor
push
icebp
cmpsb
popf
dec
sbb
enter
jmp
les
insb
jbe
cld
sbb
xchg
push
add
sbb
cmp
sahf
adc
jecxz
aam
push
ss
mov
ret
loope
sub
icebp
jne
sbb
mov
cmp
in
add
mov
jge
or
lcall
lcall
sub
cmpb
lea
adc
mov
cmp
out
xchg
mov
rorl
jb
movsb
dec
mov
mov
adc
outsl
ss
aam
add
data16
and
push
push
pop
fs
outsb
adc
jl
or
mov
test
jns
adcl
cmp
fcmovbe
xchg
push
aaa
data16
fsubrl
mov
jecxz
clc
jecxz
sti
add
dec
jbe
call
push
mov
adc
roll
scas
mov
push
iret
cmpsl
xchg
add
adc
add
hlt
gs
test
dec
mov
mov
fs
jns
sbb
loop
scas
push
es
push
mov
sub
stos
pop
rolb
dec
pusha
lcall
inc
and
pushf
mov
bound
and
stc
cs
xor
dec
testl
push
cwtl
sub
cmp
sbb
les
jp
or
xor
and
ss
mov
pop
xchg
dec
cmp
pop
stc
out
sub
std
imul
xchg
and
jo
clc
shrb
enter
mov
fincstp
add
xchg
adc
sahf
jecxz
adc
jmp
dec
fidivrl
addb
ficoml
stc
mov
cmp
sub
xor
pop
movsl
aam
mov
sub
in
push
mov
mov
in
in
jbe
dec
int3
dec
jge
dec
fst
inc
and
push
jb
fiaddl
nop
jmp
scas
outsl
pop
pop
or
jp
adc
ret
dec
mov
xchg
jge
in
xor
fsubs
fstl
cwtl
sbb
mov
jb
lods
sbb
push
js
lcall
jae
mov
lfs
movsb
inc
xchg
mov
push
sbb
addr16
or
add
adc
inc
cwtl
adc
pop
loop
jnp
ljmp
lods
mov
jae
cmp
jl
jbe
dec
cli
add
pop
fisubrl
movsl
and
xor
clc
inc
imul
lahf
xor
cltd
arpl
push
mov
push
arpl
mov
int3
fxch
lahf
rclb
loopne
mov
pop
add
xchg
in
sub
insb
fsubr
push
mov
xchg
cltd
dec
adc
mov
rcll
dec
pop
out
xor
sub
daa
cwtl
push
mov
mov
test
test
cmc
adcl
cltd
fldl
insl
xchg
out
pop
mov
sti
sub
subb
jle
cmpsb
add
sbb
push
dec
sbb
int3
into
shl
shrl
pop
jae
xchg
mov
mov
xor
cmp
mov
jl
ljmp
das
test
mov
xchg
cmp
loope
movsl
outsb
jbe
inc
push
mov
jge
dec
fadd
push
iret
lret
and
dec
sub
xchg
push
and
lret
inc
mov
push
xor
pushf
outsl
popa
clc
pop
lods
xchg
rolb
shlb
jl
inc
popf
sub
imull
xchg
mov
push
mov
add
mull
inc
das
jp
mov
jae
mov
outsb
push
adc
add
xor
mov
push
mov
sub
jns
and
aas
js
inc
loop
sub
cmp
int3
sbbl
push
dec
add
iret
jmp
inc
sbb
out
sbb
jo
gs
cmp
xchg
ja
cmp
daa
xchg
shlb
sbb
rcl
pop
cmp
insb
xchg
and
jb
es
outsl
jns
cmp
push
aam
push
insb
jb
and
xor
push
jecxz
mov
jecxz
ficompl
and
int
adc
jecxz
ret
stos
hlt
xor
mov
mov
inc
xor
jle
in
and
inc
les
cmp
push
xchg
or
scas
jecxz
pop
and
js
loopne
adc
cmp
mov
stc
jecxz
xor
shlb
es
dec
xchg
and
mov
stos
add
pop
out
jo
adc
add
scas
xor
lock
jecxz
jmp
test
jmp
fwait
sub
movsl
movsb
outsl
loopne
add
adcl
rcll
fisttpll
mov
cmp
adc
add
mov
outsl
inc
ja
mov
fwait
mov
enter
mov
int
jno
lods
sarl
out
mov
movsb
fldcw
lahf
inc
push
gs
out
add
mov
or
mov
cmp
mov
pop
das
push
jbe
jns
xchg
mov
cmpsb
ret
inc
ficoms
rorb
xchg
add
sahf
cmpsl
xchg
mov
int
cmp
sub
fwait
push
out
scas
pop
or
pop
or
ss
int3
mov
test
lahf
in
shrb
cmp
push
cmp
inc
mov
mov
add
and
pushf
xor
push
xor
pop
repnz
sbb
filds
orl
adc
mov
aam
pop
dec
xchg
or
pop
lods
jecxz
rorb
or
pop
add
inc
inc
shll
outsb
pop
mov
mov
xchg
out
cltd
pop
pushf
lods
pop
and
sub
mov
xor
mov
cmpsb
xorb
leave
std
jmp
add
mov
loope
scas
add
inc
ret
outsb
and
mov
push
dec
pop
mov
xchg
mov
popa
add
jne
lock
jo
enter
cmp
inc
in
lods
lds
out
sbb
dec
rcrl
push
cs
fs
sub
push
loope
or
mov
ficoms
mov
jecxz
imul
or
lret
sbb
test
test
mov
mov
add
data16
push
inc
in
adc
pop
call
push
or
xchg
adc
stos
loop
and
pop
jecxz
stos
adc
jo
pop
xor
jp
mov
daa
cmp
inc
out
lock
cltd
lret
xchg
sbb
xor
cld
shl
sbb
ret
mov
loopne
dec
and
xchg
xchg
fnsave
shlb
sbb
sar
inc
mov
lods
addr16
pop
xchg
les
ss
add
xor
sti
ror
mov
lods
loope
or
fstl
mov
push
shlb
sti
dec
loop
jg
xor
popa
std
insl
mov
dec
add
pop
and
add
dec
dec
mov
push
xchg
xchg
sbb
call
imul
adc
push
or
rorb
scas
push
inc
movsb
dec
mov
shlb
mov
setle
mov
add
jecxz
inc
call
and
leave
insb
loop
ret
and
and
mov
sbb
mov
fimuls
mov
and
mov
pop
sbb
aaa
insb
mov
out
clc
mov
cwtl
push
aam
aas
jb
and
stc
repnz
lea
fs
inc
loope
mov
mov
sbb
lcall
add
int
push
psraw
push
sbb
and
pminsw
shll
and
mov
cmp
mov
lahf
pop
scas
rcl
pop
mov
jmp
in
or
sbb
dec
mov
scas
add
adcl
mov
dec
stos
shll
cmpsl
enter
sahf
cmp
movsl
ficoms
in
rcl
push
mov
sub
sub
test
sub
xor
sbb
xor
js
loope
xchg
pushf
rcll
jle
mov
loop
fisubs
add
jne
sbb
xchg
int3
adc
clc
mov
test
dec
sbb
push
xor
mov
aaa
inc
cmp
out
sbb
inc
rorl
xchg
pop
jne
iret
dec
xor
xor
adc
inc
fstps
into
fists
jmp
xchg
outsl
in
arpl
call
mov
loopne
flds
sub
outsl
pop
push
sbb
mull
insb
add
into
das
mov
pop
shrl
bound
aad
ljmp
cltd
ljmp
dec
sub
push
lds
and
fstpt
ljmp
xor
cmp
xchg
rorb
sbb
cmc
popf
popa
fsubs
add
test
and
xor
call
jp
push
and
lock
or
mov
add
pop
js
pop
jg
jmp
ficoms
cmpsl
setbe
sub
ja
dec
std
inc
or
mov
and
pop
and
jle
fsubp
jbe
dec
scas
mov
int
pop
call
inc
inc
loope
jp
test
sarb
nop
aad
push
lcall
jno
push
mov
stc
out
in
mov
xchg
or
fdivrs
in
mov
jns
mov
shll
mov
or
or
jge
int3
mov
into
dec
inc
fiadds
mov
gs
in
testl
inc
xor
or
js
jbe
pop
mov
add
movsl
sti
scas
cmc
es
add
vaddsd
jecxz
xchg
test
lret
repz
lods
push
lcall
pusha
xor
insb
mov
mov
testl
cmp
sbbl
int3
mov
xlat
sbb
pop
sarb
ljmp
test
jp
mov
inc
cmp
mov
seta
lahf
test
jno
or
inc
sub
push
hlt
hlt
pop
push
inc
fwait
test
mov
push
mov
sub
jg
jno
pusha
add
dec
in
push
mov
mov
inc
loopne
mov
adc
in
adc
mov
jnp
sbb
out
mov
jb
cmpsb
sbb
push
dec
into
jae
cs
aaa
cmp
into
fsts
cmp
int
pop
mov
mov
mov
outsb
jo
xchg
das
pop
fwait
pop
pmaxsw
and
xchg
imul
add
cmc
dec
loope
mov
dec
fisubs
xor
and
mov
test
inc
or
loope
jne
rolb
aaa
inc
test
inc
xor
sub
fidivl
cmpsl
into
sub
lea
lret
and
mov
push
mov
sbb
ds
ficomps
adc
xor
sbb
in
adc
popf
add
enter
pop
shrb
inc
push
xor
add
rolb
pushw
cltd
sar
test
popa
nop
sar
fcomp
mov
jl
mov
inc
hlt
cmp
jecxz
rclb
xchg
pop
dec
push
out
jecxz
sub
rcrb
daa
xor
or
jns
mov
jle
imul
das
lock
push
sub
mov
leave
aaa
movsb
addl
cs
js
pushf
or
mov
mov
stos
xchg
mov
pop
cs
gs
cmp
add
out
mov
xor
inc
push
std
dec
mul
jno
cmp
cmpb
ret
fdivr
cmp
aam
test
arpl
pusha
leave
sub
mov
add
pop
leave
lods
ret
daa
xor
or
xor
lahf
pop
push
scas
call
dec
pop
mov
mov
mov
pop
fdivr
fwait
pop
cmpsb
sub
int3
mov
mov
fcmovnu
ljmp
inc
pop
pop
inc
das
xchg
jns
test
pushf
pop
movsl
insl
lods
jle
or
je
lods
mov
mov
dec
ficoms
mov
pop
call
inc
xchg
pop
cmp
lods
dec
mov
cmp
outsl
test
dec
cmp
or
stc
fnstenv
mov
clc
xchg
push
mov
cmp
les
fs
adc
test
push
andl
rcll
sbb
pop
mov
xor
add
rcr
je
or
xlat
adc
sbb
push
push
or
add
cli
push
into
data16
sbb
mov
imul
push
jecxz,pt
sub
ss
jp
jl
jl
xor
mov
adc
mov
lods
adc
dec
pusha
mov
pop
testb
cs
loope
cmpl
xchg
jecxz
dec
adc
push
xchg
jae
xchg
sbb
test
or
mov
mov
push
inc
jnp
mull
inc
sub
cmp
popa
mov
mov
lods
das
pop
js
cmp
lods
fidivrl
fadds
cmpsl
popa
cmpsl
pop
lds
mov
fnstcw
sahf
add
or
and
jns
movsb
pop
inc
adc
mov
dec
out
pop
dec
cmc
jge
daa
cmp
ret
sbbb
adc
rclb
nop
fidivrl
shll
je,pn
add
mov
jl
rclb
adc
jns
dec
mov
sahf
cld
out
jns
sbb
jb
pushf
sub
adc
loope
cmp
lds
stos
adc
adc
cmc
out
cli
sub
xor
stos
cmp
int3
mov
shlb
xor
jg
int
cli
in
push
arpl
sub
enter
push
rorb
fildll
cmp
lea
bnd
mov
pop
lcall
inc
jge
push
movsb
and
and
jae
std
cli
orl
pop
rolb
outsb
push
mov
xchg
dec
jb
dec
mov
sti
xchg
push
sahf
mov
aad
shlb
jo
pop
and
push
lds
cli
js
mov
xorl
dec
xchg
int3
vmaxpd
aam
cmp
push
dec
es
cs
in
and
into
jno
mov
inc
inc
push
and
pop
cmp
lock
pop
sub
xchg
jmp
lret
stos
mov
xor
push
clc
pop
fucom
enter
xchg
inc
arpl
sub
push
test
gs
sbb
xchg
jp
xor
ret
sti
into
aam
lock
sbb
adc
pop
dec
inc
das
xlat
push
add
jge
push
movsb
add
loop
adc
arpl
sbb
lods
in
or
sub
pop
inc
xchg
push
push
mov
mov
push
lods
or
lret
sbb
cld
lods
sbb
xor
outsb
cmc
and
inc
testb
movsb
rorl
ds
aam
cli
lock
xchg
mov
test
cmp
pop
insb
mov
ret
sub
xchg
inc
push
xchg
mov
or
outsl
xchg
sub
fs
pop
test
sub
and
sbb
jns
pop
cmpsb
test
push
jnp
mov
mov
ret
rorb
pop
push
xor
iret
sbb
rorb
fwait
ret
testl
scas
cmc
mov
lret
xchg
mov
mov
mov
xchg
push
push
adc
aam
leave
clc
push
movsb
pop
lea
lods
aas
std
mov
fwait
mov
fwait
inc
data16
inc
sti
fadd
or
lret
pushf
or
push
cli
popa
jo
jne
outsb
cmp
xchg
mov
or
mov
xor
out
lcall
shl
mov
loope
inc
pop
fs
les
inc
xor
dec
mov
jnp
pop
gs
xchg
jns
ss
cmp
jmp
mov
xchg
filds
mov
jecxz
int
lcall
cmc
cmp
adc
imul
fwait
les
cli
negb
nop
push
jg
fisttpll
mov
out
jns
out
push
push
push
cmp
mov
jecxz
pop
mov
mov
xchg
push
jns
in
es
loope
clc
mov
xchg
fs
sbb
into
iret
pop
int
stos
mov
fdivrs
lods
pop
repnz
xchg
test
outsl
cmp
enter
push
in
sub
xchg
inc
aaa
jnp
bswap
stos
or
pop
in
pop
inc
mov
xchg
jl
adc
movsl
and
or
lods
mov
test
fcoml
loop
cld
jnp
arpl
fisubs
jecxz
shll
mov
shlb
lcall
loope
rolb
mov
inc
les
aaa
fsubrs
mov
push
fstl
cmp
jp
push
mov
jae
cmp
gs
cwtl
xlat
add
in
jmp
sub
push
add
sbb
pop
mov
stos
into
lock
adc
push
loop
inc
pop
sbb
sub
icebp
mov
cltd
stos
rcrb
cmp
mov
jge
jecxz
es
into
dec
jb
daa
push
lret
push
dec
push
jmp
dec
les
push
inc
jbe
in
jno
lock
sbb
mov
and
cmp
adc
gs
insb
push
adcb
gs
movsl
xor
test
in
lret
add
out
adc
lcall
clc
inc
and
push
cmp
movsl
lock
add
sbb
lds
mov
xchg
mov
in
xchg
adcb
sbb
arpl
pop
pop
orl
jns
sbb
add
adc
mov
cmp
out
xor
fs
adc
loopne
outsl
sbb
cli
les
pop
outsb
subl
ud1
test
xor
inc
clc
add
int3
dec
stos
mov
push
cmc
mov
test
stc
mov
push
jp
test
scas
mov
jno
xor
les
dec
insb
cmc
add
xchg
lcall
add
test
inc
add
data16
js
cmc
xchg
hlt
scas
add
mov
cwtl
add
sti
sub
sbb
psraw
xor
jne
pop
shrb
sbb
pushf
inc
sarl
out
dec
test
cmp
push
jae
xchg
stc
les
adc
lcall
adc
sub
ret
push
fwait
addb
es
mov
or
cmpsb
cltd
inc
and
lock
dec
sub
lock
adc
jge
xor
rol
jnp
sbb
rcl
add
cmp
ficomps
sbb
std
imul
and
jb
jecxz
outsl
inc
aam
jno
lds
out
call
xor
imul
call
stos
mov
sbb
cmp
mov
sub
int
ss
ret
adc
mov
adc
insb
les
test
je
int
adc
xchg
mov
pop
rorb
and
mov
xor
loopne
shl
pop
mov
add
sahf
mov
int3
mov
lahf
mov
fwait
jo
jb
cltd
repz
pop
nop
rcrl
jno
enter
dec
mov
out
xlat
popa
mov
cmp
loope
dec
jl
pop
ret
inc
cltd
mov
xchg
data16
or
arpl
scas
outsl
mov
ret
aaa
add
or
and
mov
outsl
das
leave
push
mov
pop
jae
mov
push
xlat
aas
pop
xor
mov
xchg
nop
idivl
add
pop
mov
arpl
xchg
imul
imul
add
cmp
fnsave
movlhps
inc
call
cs
sub
stc
cmp
mov
in
jne
nop
mov
sbbl
icebp
icebp
sub
ss
fiaddl
stos
in
sub
lods
lods
iret
addr16
rolb
cmpsl
and
cmc
cmp
fs
insl
loop
mov
dec
in
dec
arpl
or
std
or
add
xchg
sub
pop
push
decl
dec
mov
enter
mov
or
sarb
popf
inc
jp
adc
movsb
pop
push
dec
mov
iret
adc
xchg
les
test
sarb
push
xor
incb
push
jo
scas
or
ss
jae
pop
push
shll
test
js
scas
lods
inc
jb
xor
shll
adc
mov
push
sbb
inc
daa
jno
std
mov
mov
or
pop
das
data16
daa
and
test
xchg
cmp
mov
popf
adcb
push
pop
loope
arpl
or
outsb
mov
mov
mov
js
imul
xchg
mov
cs
leave
je
fidivs
mov
mov
inc
fwait
mov
mov
daa
fisttpll
jecxz
lret
in
or
leave
fisttpll
cs
imul
push
dec
jle
je
std
loop
cmp
pop
pop
jge
cld
push
stc
xor
and
loope
outsl
jmp
lret
std
movsl
push
xor
stos
popf
xchg
cmpsl
push
push
mov
inc
dec
fbld
xor
arpl
mov
in
div
mov
bound
and
adc
push
xchg
out
sub
jg,pt
sbb
pop
sbb
jg
inc
sbb
jle
fxch
ror
test
ljmp
pop
scas
out
fs
les
mov
lods
add
mov
sub
lock
push
lcall
cmpb
std
jae
fnstenv
movl
out
fstl
mov
imul
mov
pop
leave
outsb
push
xchg
pop
pop
out
fwait
bound
mov
cltd
xchg
lock
shr
in
negl
stos
nop
mov
cmp
ror
adc
xor
clc
pop
jg
cmpsl
sbb
addb
cli
sbb
fsubl
inc
dec
inc
inc
and
repnz
rdmsr
jnp
out
in
mov
andb
cmp
push
cmp
inc
xor
lcall
in
fs
inc
das
sbb
fldcw
xor
mov
sub
pushf
adc
rcrl
test
pushf
sub
test
fwait
jae
test
rcr
rolb
inc
orl
ficoml
cmpsb
dec
mov
loopne
mov
mov
pop
neg
fstpt
add
or
push
inc
cmpl
adc
jae
sub
mov
pop
scas
orl
dec
jo
ss
or
ljmp
dec
cmc
sbb
std
imul
into
roll
loop
mov
sbb
pop
push
xchg
ss
dec
sub
cmp
mov
test
jle
popf
cs
or
mov
repnz
and
enter
push
pop
xor
cli
jbe
fidivrs
and
or
or
lea
jecxz
fsts
and
popa
arpl
jns
mov
pop
mov
insl
imulb
int3
cmpl
sub
imul
push
sub
jge
shrl
aam
ds
sahf
push
data16
adc
push
and
push
inc
push
in
add
jmp
sahf
ja
cmpl
inc
pop
inc
adc
dec
ret
test
stos
ds
lods
lcall
in
push
aas
mov
cmp
or
jg
add
clc
out
in
add
dec
cld
jle
cld
sub
insl
pop
cmpl
mov
into
xchg
loope
mov
sti
mov
fnsave
or
insb
mov
mov
mov
sbb
fwait
pop
mov
ja
out
or
imul
mov
in
mov
int
imul
mov
push
sbb
fdivp
jecxz
jae
jle
adc
repnz
inc
ja
jns
imul
aam
pop
ret
dec
push
inc
jbe
sub
xor
mov
fists
or
mov
popa
cltd
roll
pop
pop
and
push
xchg
out
jbe
in
sbb
addb
inc
daa
dec
push
js
imul
mov
clc
sbb
cmpsb
push
sub
add
dec
fisttpl
cmp
leave
inc
sub
push
movsb
or
jbe
or
fnsave
mov
pop
xor
scas
mov
ret
xchg
cmpsl
push
andb
addr16
es
cwtl
mov
movsb
and
sbb
adc
add
inc
stos
or
jmp
out
das
add
repnz
pop
xchg
ja
loope
enter
mov
mov
sahf
in
cmp
mov
xor
jecxz
ljmp
push
insb
and
stos
stos
aad
jb
or
cmp
shlb
mov
pop
call
rolb
push
repz
jno
outsb
dec
cmpsb
adc
lret
and
sbb
mov
xchg
inc
push
adcb
adc
sti
or
aaa
js
test
xor
and
mov
sub
jp
add
and
hlt
add
insb
mov
lahf
jae
mov
add
and
lea
scas
xor
pop
rclb
pop
xor
outsw
cmp
adcl
popf
pop
or
pusha
rorb
push
pop
subl
mov
mov
mov
adc
jb
xor
and
ds
in
daa
pop
and
imul
mov
out
xchg
insb
lcall
imul
xlat
add
divb
jl
and
push
push
enter
sub
movsb
cmp
adc
sub
mov
iret
and
shll
int3
mov
add
movsb
fs
adc
and
mov
pop
test
jbe
int3
outsb
add
push
pop
jno
mov
daa
stc
sub
mov
lock
xor
test
inc
jecxz
jl
test
dec
or
enter
add
mov
fcmovnb
cmp
into
ljmp
xchg
mov
mov
cmp
int
push
mov
sub
sti
jg
or
frstor
jge
clc
adc
xlat
xchg
cmp
mov
sub
pushf
cld
fnstcw
push
iret
and
dec
out
into
mov
xchg
inc
dec
mov
sahf
sub
jbe
jnp
out
pusha
daa
pop
mov
sub
mov
or
add
adc
mov
mov
inc
cmp
nop
lods
stc
pop
stos
mov
add
stos
dec
testl
popa
sbb
mov
lret
movsb
adc
xchg
mov
jae
test
cmp
mov
cmpsb
or
mov
mov
lahf
mov
mov
mov
or
std
cwtl
mov
outsb
mov
iret
mov
adc
sub
push
mov
jecxz
or
std
xchg
int
dec
outsb
lea
popa
cwtl
or
and
ficompl
mov
dec
sbb
or
dec
cmpsl
add
fdivs
test
imul
insl
sti
mov
clc
stos
cmp
data16
dec
inc
divb
js
loop
pop
push
pop
shrl
mov
pop
test
jge
insl
dec
ret
lea
sub
out
mov
test
add
mov
adc
dec
mov
sahf
rcr
cld
sti
sbb
sti
enter
stos
push
jecxz
pop
jecxz
aad
mov
cmpsb
and
pop
add
or
inc
dec
or
cli
mov
lcall
jae
mov
pop
pop
cmc
clc
in
fidivrl
rol
inc
lock
rcrl
neg
sysret
pop
aas
xchg
scas
sbb
jno
movsl
js
ljmp
in
stc
jnp
lret
push
or
push
lds
push
leave
test
push
pop
test
jns
sbb
jne
loope
lock
int
insl
adc
cmp
or
fdivrp
cs
clc
mov
jmp
and
adc
bound
rcrb
xor
imul
lea
push
lret
dec
jbe
mov
enter
dec
add
cmc
ret
push
mov
or
loop
daa
cmp
fmuls
jo
lods
mov
clc
lcall
in
shll
std
iret
fstpl
sahf
ss
dec
aad
sti
rorb
pop
lea
in
sti
mov
inc
es
mov
xor
xor
int3
jne
pop
jne
in
xchg
push
test
loope
push
add
mov
jp
or
mov
fwait
or
push
xlat
jbe
in
adc
pop
cli
jbe
pop
inc
ljmp
inc
clc
dec
pop
mov
ds
fs
jle
push
mov
cmp
aam
mov
xor
stos
imul
push
jne
fdivs
insl
repnz
sub
into
cmc
out
xor
sbb
push
cmpl
add
and
jge
inc
xlat
mov
jecxz
in
pushf
movsb
mov
test
mov
pop
ret
pop
cmpsb
fnsave
stc
sub
fbstp
mov
add
xor
ret
imul
rcrb
inc
movsb
movl
sbb
vaddsd
mov
xchg
rcll
inc
jl
pop
aad
leave
rclb
sub
clc
push
iret
and
xchg
dec
inc
cmc
int3
data16
ja
adc
int3
arpl
mov
mov
cmp
cmp
and
or
xchg
adc
push
push
dec
pop
movsl
aad
or
sub
cmp
add
lret
and
push
stc
xchg
and
sbb
ret
adc
sbb
pop
mov
stos
imul
in
mov
inc
push
insl
cld
pop
mov
push
dec
xchg
and
lcall
push
mov
mov
cmp
inc
cmp
mov
call
inc
loopne
stos
pop
lret
fdivs
inc
jb
out
call
jno
rcrb
lds
xchg
mov
or
ds
lock
sub
xor
test
hlt
sub
icebp
jg
je
sbb
inc
xchg
sub
lea
sub
rcll
sub
jge
mov
mov
inc
repnz
cmp
cmp
je
add
lahf
pop
fcmovb
mov
adc
mov
add
mov
add
or
sub
es
fs
rorl
jge
jge
push
std
cmp
repnz
adc
fcomps
fdivrl
dec
mov
sti
mov
cltd
pusha
mov
jbe
inc
fadd
mov
mov
inc
es
shr
sbb
xor
aaa
sti
outsb
jg
subb
jmp
mov
sahf
imul
mov
or
pusha
mov
popa
cmc
mov
test
loopne
xlat
mov
scas
dec
push
cmpsl
ss
mov
cmp
loop
cs
in
cwtl
mov
insl
movsb
inc
mov
out
add
shll
xchg
push
sbb
mov
inc
add
jns
jmp
mov
xor
test
int
cld
ja
loopne
add
out
ret
aad
xor
sbb
mov
xchg
xchg
sahf
cmp
cmp
ret
sbb
fs
fmul
add
clc
inc
lods
fstpl
lahf
aas
mov
leave
dec
fwait
sub
adc
shlb
stc
cmpsb
cmp
pop
jae
push
shrl
dec
cwtl
lods
dec
cmp
wrmsr
pusha
mov
inc
mov
sahf
addl
sar
gs
and
push
adc
mov
shrl
enter
lea
outsl
or
pop
clc
xchg
bound
bnd
test
jg
pop
in
xchg
ja
stos
xor
cmp
aad
push
scas
jg
clc
xor
push
xchg
icebp
scas
xor
outsl
and
ds
fbstp
pop
or
shll
ret
mov
push
and
out
popa
dec
and
sbb
aaa
test
or
lods
push
jge
xor
bound
ja
xrelease
push
and
and
jnp
mov
xor
push
jne
out
loope
xchg
addr16
movsb
inc
sbb
jl
push
div
lods
popf
xchg
pop
jne
cmpsb
out
addr16
jp
test
add
mov
push
cmp
jecxz
gs
sub
shrb
ds
jo
jmp
push
test
adc
pop
in
lea
add
xor
shll
loope
subl
or
movsb
iret
test
or
jnp
mov
adc
push
ret
sti
push
sub
icebp
add
and
outsb
mov
aad
js
sbb
adc
fnsave
xlat
ljmp
lods
aam
xchg
pop
stos
dec
mov
pop
popa
stos
or
and
es
int
cmp
adc
loop
mov
mov
cmpsl
pop
test
into
in
pop
nop
ljmp
mov
leave
nop
mov
sbb
xchg
fisttpll
pop
iret
adc
sub
lcall
mulb
add
push
inc
or
inc
mov
adc
test
mov
xchg
cs
push
dec
icebp
popl
inc
jb
xchg
or
add
popl
insl
mov
xor
lock
push
loope
ret
lods
jge
aam
outsb
add
xchg
lods
enter
jne
mov
or
mov
inc
pop
mov
in
ljmp
push
sub
sbb
call
ja
pop
push
mov
std
sbb
add
imul
or
loopne
inc
push
or
push
xchg
or
pop
enter
jbe
inc
inc
out
xor
rcrl
int3
sbbb
inc
inc
mov
loope
loope
add
loop
cmc
mov
inc
lret
fidivs
cmc
lods
dec
movsl
shll
popa
xor
xlat
outsl
es
pop
add
sbb
xchg
sbb
fstl
mov
adc
push
cmc
cmp
aas
inc
or
mov
sbb
out
addl
xchg
test
push
push
sub
sub
or
inc
push
movsl
jb
test
jae
push
mov
pop
inc
fcom
bound
lea
insb
cmpsb
mov
adc
movd
pop
cmp
xchg
rcll
cmp
xchg
push
sahf
aam
inc
cs
dec
mov
bound
inc
xchg
in
shl
jmp
movlps
movsl
in
or
inc
fsubl
or
pop
rorl
fldenv
mov
adc
test
sbb
push
push
ret
cmp
scas
outsb
jnp
push
rol
sti
sub
push
pop
mov
movsb
mov
or
das
imul
inc
mov
sarb
pop
jne
sbb
mov
das
add
mov
rcll
fwait
jae
popw
leave
cmpsb
adc
mov
pop
xchg
jno
cmp
scas
push
es
or
push
sub
xor
scas
leave
shrl
or
dec
pop
repnz
cmc
ljmp
xchg
loopne
pusha
jecxz
addb
repz
addr16
ja
add
add
or
push
lahf
inc
mov
loop
dec
push
mov
in
dec
mov
loop
push
mov
mov
clc
jge
add
retw
movsl
icebp
cmp
cs
popf
push
jmp
fimull
and
mov
mov
mov
adc
in
adc
mov
jl
call
outsl
mov
cmp
push
jg
push
jno
xchg
test
or
lret
dec
adc
add
or
sub
pop
jo
mov
lods
jbe
jnp
xor
int
das
jl
imul
insb
loope
daa
gs
pusha
enter
nop
sub
and
pop
into
jecxz
mov
popf
cmp
cmp
cli
jno
jecxz
test
fsubr
xchg
js
pop
cmp
dec
flds
lret
inc
push
imul
test
pop
adc
cld
shlb
and
shufps
add
sahf
xlat
jle
shrl
jae
add
sbb
or
lea
imul
hlt
loope
cmpsb
jecxz
jge
mov
xchg
insl
repnz
push
lcall
stos
data16
arpl
lods
xor
xor
xchg
mov
fildll
jne
nop
mov
push
lea
adc
or
xchg
nop
push
jne
adc
int
repz
xor
sub
call
rolb
mov
add
incl
out
ret
and
out
stos
dec
lahf
js
ja
mov
sub
push
les
pop
aaa
outsl
and
test
push
inc
ficoml
xchg
and
addl
dec
fadd
icebp
mov
mov
repz
or
in
pop
xlat
dec
mov
fstpl
mov
loop
or
lahf
pop
push
jp
outsl
xor
xchg
pop
and
and
rclb
pop
sub
xor
fs
mov
insb
in
fwait
jmp
or
dec
dec
and
jecxz
inc
mov
cmp
jb
push
cmpsb
add
jae
mov
test
js
adc
out
add
ror
pop
pop
and
mov
pop
mov
ret
insl
cltd
shlb
out
cmp
cmp
insb
imul
jne
cli
or
fisttps
bound
cwtl
sub
dec
cmc
or
out
jmp
jae
cld
test
aad
out
dec
sti
xor
sub
movsl
jge
pop
dec
scas
jmp
pop
cmpsb
push
test
sbb
add
mov
push
call
mov
divl
ss
push
dec
add
push
and
cld
add
push
addr16
bound
scas
movsb
xorb
push
pop
lret
adc
lods
ss
fwait
arpl
xor
pop
sar
and
rclb
outsl
rorb
sbb
xchg
mov
add
dec
inc
cmpsl
cmp
adc
shrl
sbb
lahf
xlat
cmp
pop
mov
lods
xchg
test
sub
clc
jnp
and
or
pushf
incl
ja
mov
or
imul
fucom
ret
rcll
fdivr
inc
cmpsb
sub
outsb
and
inc
jecxz
jne
fst
repz
dec
stc
add
sbb
outsb
pop
sub
scas
nop
xor
xlat
int
xchg
shrl
call
pop
jmp
jle
xchg
push
ror
out
ret
pop
sub
call
or
mov
sbb
test
mov
shl
sbb
stc
imul
jg
and
icebp
xor
cmpsb
mov
cltd
sbbb
adc
and
aas
int
add
sbb
lcall
cltd
push
sbb
and
iret
sbb
inc
out
xor
inc
sbb
and
loopne
mov
mov
cmpsb
jp
lds
mov
pusha
rorb
dec
push
xchg
push
inc
iret
insl
popf
pop
ljmp
push
or
inc
cs
cli
push
mov
dec
or
fisttps
xlat
lret
lret
xchg
fidivrl
int3
pushf
in
cmpb
push
js
std
dec
xor
ss
es
sbb
jmp
movsl
mov
loop
out
jp
lahf
pop
xor
adc
mov
imull
cmp
cltd
inc
push
insb
dec
xor
fimuls
fwait
cmp
ljmp
pop
mov
ja
push
aas
xor
lods
sbb
jmp
mov
insb
cwtl
mov
mov
pop
iret
inc
cmp
into
out
fmuls
enter
add
loop
stos
mov
jecxz
sbb
dec
inc
mov
cmp
mov
sub
pop
jg
push
dec
adc
jp
inc
sub
roll
xorb
mov
lock
sub
in
aaa
idivl
inc
sbb
mov
adcb
push
push
xchg
lahf
mov
orb
aad
xor
call
adc
ss
rcll
pusha
jno
cli
std
mov
push
dec
repnz
mov
daa
into
mov
pop
add
jp
mov
dec
repz
imul
xor
mov
cmp
decl
mov
add
out
js
in
gs
dec
jl
xor
sbb
js
mov
stos
pushf
lock
mov
ljmp
jle
aas
int
push
pushf
xor
jmp
fwait
mov
or
mov
inc
xor
push
hlt
out
pop
enter
cmp
push
insb
cwtl
pushf
movsb
mov
adc
ljmp
and
cmpsl
sbbl
andl
fxam
popf
or
sub
sbb
xchg
cmp
push
js
mov
fmul
cld
ljmp
sub
xchg
cmc
icebp
addr16
ret
cmp
adc
mov
sbb
sbb
xchg
push
xchg
mov
xchg
cmc
out
int
pop
outsl
jmp
stos
ret
push
rolb
mov
pop
lock
add
mov
push
and
pop
pop
rcr
je
aam
mov
insl
adc
gs
xchg
lea
addr16
outsl
out
int3
push
jl
vpsubq
mov
mov
aaa
cmpsl
sub
fsubp
xchg
push
rcll
cs
sub
jp
sbb
leave
ds
loope
add
fisubrl
daa
pop
les
mov
sbb
aaa
in
mov
outsb
jo
xchg
mov
adc
test
ds
in
mov
pop
and
dec
mov
adc
std
push
and
jp
inc
push
cld
sbb
pop
rclb
sbb
popa
or
pop
xchg
adc
in
pop
and
fadds
or
ljmp
mov
aad
repz
lret
leave
in
mov
aam
ret
xchg
xchg
or
jne
mov
and
jecxz
int
mov
mov
jl
daa
shll
call
jecxz
mov
dec
lahf
mov
mull
bound
inc
shll
js
jns
dec
and
test
lcall
adc
sub
adc
pop
and
mov
int3
dec
add
jae
and
pop
inc
cmp
popa
or
sbb
sarb
xor
imul
push
mov
push
adc
jbe
xlat
jmp
mov
imul
add
call
mov
lahf
fbstp
sub
scas
jle
scas
aaa
xchg
or
mov
push
jnp
or
stos
mov
xor
push
scas
nop
repnz
inc
test
adc
mov
inc
rcrl
sub
push
sbb
adc
fmuls
mov
movsl
adc
hlt
mov
loopne
lahf
in
jno
ja
out
sub
push
add
sti
sbb
pop
stos
cmp
sbb
xor
sti
popf
enter
cmpsl
or
gs
mov
pop
pop
sbb
test
fst
mov
hlt
and
sub
ja
inc
repz
mov
lods
aam
cs
inc
jae
push
loope
adc
xchg
mov
mov
icebp
mov
rorb
pop
mov
adc
scas
dec
pop
scas
aad
push
movsl
fmull
into
mov
jo
xor
and
jae
lahf
pushf
aaa
xor
mov
inc
pop
jp
sub
ljmp
cmpsb
aad
das
or
imul
mov
jecxz
xchg
ja
in
jl
and
fdivrs
hlt
add
adc
repz
outsl
jno
push
and
incl
dec
inc
fs
xor
leave
ss
jnp
outsl
shl
faddl
xchg
lea
jo
ficomps
mov
cmpsl
scas
jg
or
mov
bound
aas
inc
lods
loope
adc
push
rcrl
kunpckbw
mov
jmp
bound
push
nop
and
sbb
aaa
and
rep
dec
shll
cmp
dec
add
sub
data16
icebp
shll
jbe
popa
mov
jno
and
xor
por
adcb
jo
or
xchg
iret
pop
bound
popa
fwait
ljmp
rolb
popa
sub
jg
sub
addr16
loopne
cmp
lds
aad
cmp
xchg
movsb
mov
and
sysexit
cmp
sub
imul
repz
pop
test
sub
repnz
rclb
js
ja
add
cmp
aad
or
jecxz
xor
je
push
mov
pop
sbb
mov
add
stos
jbe
xlat
shrb
xor
ret
and
inc
dec
mov
insb
pop
mov
lret
push
gs
insb
das
adc
pop
dec
push
mov
xchg
pop
divb
mov
loope
sub
bound
dec
add
lock
sbbb
pop
jb
push
or
adc
ja
pop
sub
cmp
cmp
stc
es
and
ss
mov
stos
mov
sbb
dec
cmp
test
or
out
pusha
shrb
shrl
subb
insl
and
jl
addl
in
les
in
mov
jns
movsl
mov
sbb
call
int3
movsb
jge
into
mov
mull
cmc
adc
sub
out
fwait
and
insl
icebp
cmc
fwait
pusha
and
push
mov
mov
sub
pop
or
sbb
cmpl
xchg
and
jno
adc
jns
cmp
xor
pop
push
jg
insb
insl
and
rcll
fcoml
es
or
push
sbbl
jbe
idivl
fs
test
imul
sub
sub
cmp
or
ljmp
arpl
lret
pop
mov
mov
xchg
mov
cmp
cmp
cmp
mov
pop
fwait
mov
pop
sarb
add
sub
cmp
fs
xor
out
jae
push
xchg
cli
in
loop
les
and
lods
outsl
and
mov
lret
testl
mov
mov
lahf
insl
add
dec
jno
shlb
je
testl
imul
fcmovnbe
or
jne
ret
push
outsl
push
add
lret
push
stc
xor
int3
dec
in
fs
ljmp
sbbb
pop
std
and
sub
push
push
bound
mov
jno
loopne
mov
mov
pop
dec
xchg
gs
lods
mov
adc
push
stos
movsb
sarb
out
fsubrp
mov
mov
div
xchg
cltd
popa
adc
adc
cmc
cltd
aaa
xchg
ficoml
mov
and
movsb
aaa
sub
cmp
xchg
sarb
sbb
pop
inc
test
movsb
int3
push
pop
sbb
adc
push
fcos
gs
aad
ret
xchg
popa
ja
mov
or
sub
test
sti
ret
call
push
divl
cmpsb
mov
xrelease
inc
adc
jno
ds
jle
mov
jmp
loop
popa
jp
mov
cmpsl
sbb
push
sbb
into
call
or
sbb
dec
add
aas
mov
daa
aad
call
nop
mov
mov
cmp
mov
xchg
cltd
int3
push
sub
js
mov
push
xchg
or
mov
add
add
lret
push
mov
cmp
sti
lcall
das
push
sbb
std
add
adc
insl
popa
adc
gs
stos
mov
cmc
dec
adc
jmp
xor
int
xor
mov
test
fadds
test
imul
icebp
dec
xor
adc
mov
hlt
inc
fwait
testl
or
inc
sub
int
fwait
inc
xchg
es
shrl
inc
sub
pop
jb
inc
pop
add
inc
jp
inc
jbe
test
mov
outsb
shll
pop
jmp
daa
fs
in
xchg
adc
fisttps
dec
adc
push
dec
push
pusha
mov
loopne
mov
clc
rorl
js
loopne
xchg
push
test
xchg
arpl
pop
ret
mull
add
push
fisttps
pusha
frstor
add
and
stc
push
jae
lods
pop
xor
mov
imul
gs
pusha
rclb
xchg
das
dec
stos
adc
ss
lahf
xor
jbe
sbb
in
adc
xchg
nop
call
mov
dec
push
sbb
test
leave
and
add
dec
lock
pop
adc
add
pop
inc
imul
dec
ja
decb
aam
jmp
sbb
jne
xor
pusha
or
pusha
dec
sbbl
pop
cli
call
std
lds
mov
mov
clc
mov
sub
pusha
repz
lret
stc
dec
adc
xchg
call
test
mov
in
sub
cmp
xchg
mov
and
sbb
jp
loope
fnstsw
bound
jnp
aas
lea
and
sbb
rcll
jge
outsb
repnz
push
lahf
xchg
mov
adc
dec
scas
cmp
sub
sbb
cmp
xor
cmpsl
ds
lock
adc
pop
arpl
scas
jmp
mov
int3
cmp
jns
push
pop
jae
sti
loope
test
jo
jo
xchg
pop
stos
iret
sbb
mov
mov
xchg
pop
inc
push
cmp
xor
ljmp
adc
sub
pop
scas
cmp
push
or
push
pop
pop
adc
outsl
mov
jp
jge
mov
and
mov
in
inc
push
pop
pushl
or
cmpsl
ds
cmpsl
add
jl
insl
mov
sti
lret
mov
jmp
pop
jmp
rorl
lock
adc
or
lahf
jl
hlt
jo
cld
outsb
mov
int
cmpsb
fs
jp
daa
stos
loop
pop
iret
mov
jae
sub
pop
fwait
inc
out
mov
pusha
ss
jnp
mov
outsb
gs
mov
std
mov
je
test
nop
cmp
dec
xchg
roll
push
xchg
jb
pop
testb
icebp
cmpsb
inc
int
xchg
in
xchg
into
add
jg
movsl
xchg
mov
pusha
or
orl
push
jge
cld
cmp
cmpsb
jecxz
enter
mov
inc
dec
stc
dec
rcl
or
push
mov
sbb
pop
jp
ja
outsl
popf
push
mov
sub
lods
dec
jp
mov
leave
aas
sub
pusha
fs
fistl
cmpsb
mov
mov
and
sbb
pop
lea
fcmovnb
lret
inc
add
inc
mov
lret
shrb
mov
jns
dec
xor
inc
mov
popf
push
ret
pop
sbb
js
imul
dec
inc
mov
out
push
add
pop
sbb
loop
xchg
xlat
fisubs
aaa
ret
xchg
in
mov
add
push
in
xchg
jnp
ja
cli
push
mov
mov
lods
xchg
and
shrb
mov
ret
es
fstpt
pop
mov
pop
xchg
add
aaa
sub
lcall
dec
aaa
jmp
and
fistl
xchg
sbb
jecxz
xor
aam
cmp
aaa
lock
jle
movsl
cmp
shrb
out
jbe
mov
lahf
shl
fidivs
mov
iret
lret
dec
push
sahf
mov
adc
sub
adc
pop
sub
push
sub
cmpsl
aaa
lret
mov
arpl
lods
mov
imul
scas
scas
shrl
push
or
push
mov
les
iret
mov
adc
and
aad
stc
jo
push
dec
xor
mov
push
and
xchg
mov
push
sbb
daa
js
mov
fucomi
sub
pusha
pusha
dec
fcomps
and
popf
in
xor
fucom
mov
and
negb
mov
pop
push
dec
loop
out
loope
pop
pop
lahf
xor
lret
ret
sub
icebp
or
mov
daa
cmp
pushf
sub
mov
xchg
idivl
mov
mov
popf
hlt
sbb
aam
mov
push
xor
pop
negl
icebp
lds
rorb
cmp
add
jle
xor
sub
xchg
dec
outsl
and
cltd
rcrl
mov
mov
sub
insb
shrl
clc
cld
pop
inc
fdivr
xor
pop
jmp
testl
push
addr16
shl
jge
and
rcrb
or
dec
sbbl
sub
cwtl
xchg
and
inc
dec
in
iret
aaa
adc
and
sahf
cld
sahf
xor
es
nop
xchg
xchg
push
fsub
mov
and
cli
popa
xchg
stos
inc
xchg
xor
push
rcll
push
sub
scas
xchg
xor
mov
sub
mov
cltd
pop
cli
fidivrl
mov
popa
jns
fdivrl
insb
arpl
add
jb
inc
xchg
gs
pop
xchg
push
mov
out
scas
xor
xor
testb
adc
add
rcrb
and
or
loope
sbb
pop
mov
fldenv
sbb
popf
in
test
jmp
sbb
mov
dec
sub
aas
push
sbb
xchg
xchg
jae
lret
nop
mov
jp
sbb
add
jno
fsubrs
lahf
or
mov
mov
pop
outsb
lahf
icebp
mov
stos
les
fcmovbe
add
ds
cwtl
sbb
sub
outsl
xchg
sub
mov
pop
lret
in
sbb
jg
dec
pop
push
or
lret
ret
dec
cld
sarb
faddl
cmp
ret
sub
pop
push
incl
in
mov
pop
stos
or
push
mov
enter
pushf
les
jnp
fs
mov
jecxz
adc
push
dec
fidivs
repnz
mov
loope
data16
enter
fdiv
xchg
mov
rclb
dec
arpl
iret
out
popf
addr16
fistps
sbb
fists
inc
hlt
fs
subl
jge
aad
call
jo
dec
in
int
add
xor
jbe
icebp
das
adc
shlb
push
iret
cmpsb
cmc
enter
testb
mov
dec
adc
or
pop
decl
out
mov
pop
pop
pop
dec
sbb
lds
dec
pop
fistl
shrl
ret
and
addb
lret
jp
mov
push
sbb
lock
jmp
push
rol
mov
mov
fisttps
mov
adc
call
mov
mov
mov
cwtl
mov
mov
out
push
push
mov
and
sbb
dec
push
jmp
xlat
out
mov
pushf
roll
popa
das
mov
adc
push
test
mov
and
stc
addr16
dec
push
adc
xchg
dec
xchg
repnz
add
pop
mov
mov
jne
out
popa
xchg
insl
or
mov
cld
push
jp
mov
xor
cmp
in
sbbl
and
aad
loop
icebp
push
fisubrl
fwait
xor
lcall
loope
push
repnz
div
mov
add
jle
xor
xchg
ffree
fdivl
ss
dec
xchg
lret
mov
push
mov
sarb
fcmovb
xchg
pop
aad
icebp
jle
pop
call
dec
pop
adc
jmp
out
xchg
jmp
ret
cmpsb
stos
add
pop
xchg
les
ss
push
adc
cmc
out
fdivs
mov
into
outsl
icebp
inc
dec
fimuls
cmpsl
sub
pop
pop
push
jns
mov
insl
stc
mov
loopw
pop
mov
xchg
inc
test
fdivrs
adc
rcr
push
arpl
xor
xchg
jno
push
pop
fistpl
sahf
inc
and
arpl
cli
ds
aaa
insb
jg
xor
dec
adc
mov
arpl
divl
mov
and
scas
dec
scas
fidivs
jnp
or
out
inc
in
push
call
cmp
fldenv
mov
mov
mov
fs
ljmp
add
pause
mov
rcl
fnstsw
test
cmp
movsl
fsub
jne
jg
mov
xchg
cmp
shl
fmul
fmul
mov
xor
aas
xor
arpl
dec
int3
int3
inc
ja
pop
jmp
pop
mov
inc
jmp
mov
inc
mov
loopne
mov
insb
mov
int3
push
sub
fdivrs
stc
dec
popa
mov
aam
aas
jne
scas
pop
mov
clc
andb
jle
push
adc
mov
cmp
enter
sti
jne
aam
outsb
push
cwtl
adc
lret
outsb
fsub
mov
int3
cmp
jecxz
pushf
push
jne
js
jne
scas
push
ljmp
loopne
scas
sub
xor
lret
push
gs
push
jnp
cmp
sub
sbb
push
mov
mov
add
lock
pop
xchg
and
lock
outsl
fistl
aam
push
mov
pop
and
cs
cmp
mov
cmp
xor
imul
sarb
mov
sbb
pop
mov
push
lret
sbb
and
cmpsb
ret
call
pop
inc
sub
dec
and
dec
cmpsb
dec
fldt
cmp
cmp
cld
scas
add
add
enter
pop
clc
ficoml
dec
or
sbb
movsb
gs
std
mov
mov
fs
mov
push
pop
xlat
ds
sub
aaa
or
or
dec
enter
popa
mov
dec
mov
jle
cmp
stos
loope
sub
repz
cmpsb
mov
adc
and
or
jbe
xchg
subb
lcall
jb
insl
xor
dec
in
jmp
movsl
popa
cs
jno
add
stc
mov
mov
outsb
inc
into
jmp
sbb
or
jae
mov
or
shlb
fistps
dec
imul
jb
push
out
jecxz
adc
adc
cmc
inc
out
xor
add
inc
mov
sub
dec
and
mov
addr16
shrl
pop
lds
lret
in
cmp
xchg
jle
mov
les
addr16
jae
pusha
pop
mov
adc
xor
popf
cmp
mov
dec
cmpsl
fidivl
inc
stos
and
jo
jbe
and
ds
lret
addb
hlt
and
js
lret
clc
je
xor
dec
add
inc
out
les
sahf
fidivs
mov
sub
decb
push
cmpsl
stc
out
inc
jnp,pn
je
lahf
pop
pop
hlt
aam
or
mov
sub
mov
test
lahf
dec
or
addr16
divb
mov
mov
xchg
idivb
lods
xor
mov
push
rcrl
js
mov
addr16
xchg
jp
decb
adcl
fdivl
stc
cwtl
insb
aam
sub
sub
stos
mov
jb
sub
mov
or
xchg
mov
add
cmp
or
cmpsl
sbb
mov
insb
or
or
shr
mov
lds
mov
adc
xor
ss
rdmsr
ffreep
fisubl
mov
cltd
dec
testl
ret
test
filds
cmpsl
enter
out
add
jno
cmp
ja
cmp
ljmp
or
fistpll
pop
adc
dec
mov
inc
test
mov
enter
es
imul
jb
jb
or
push
mov
push
adc
imul
repnz
fwait
add
sbb
ret
xchg
test
sbb
test
push
je
js
int3
mov
push
or
hlt
aad
inc
xchg
pop
xchg
push
add
into
push
mov
sub
test
inc
jae
lock
pop
int3
loop
sahf
cli
les
je
cmp
jnp
sbb
push
cltd
jb
mov
sbb
insl
imulb
imul
adc
sbb
jecxz
add
or
loope
cwtl
and
dec
les
xor
dec
mov
popf
loop
ds
lea
mov
aam
arpl
in
in
in
jge
nop
and
xor
pop
lods
outsb
ret
xor
mov
sti
lret
and
into
xlat
add
xor
pushf
jge
cmp
aaa
push
add
jge
pushf
cld
or
add
ret
pushf
push
mov
sarb
push
sbb
mov
mov
sub
orl
pop
insl
pop
adc
bound
pushf
popa
mov
js
mov
sub
int
pop
jge
pop
jne
jnp
popf
out
stos
or
sbb
stc
test
dec
cli
cs
xchg
test
inc
lahf
lret
adc
mov
mov
inc
inc
push
sub
mov
jg
ret
mov
sub
inc
or
jns
push
leave
sbb
subb
loop
sbb
ret
arpl
dec
sbbl
adc
push
sub
loopne
push
mov
sub
ljmp
cmp
mov
adc
and
push
into
ja
dec
jmp
sbbl
mov
stos
fsubrl
es
or
mov
int
pop
ret
cmp
xchg
hlt
fnsave
cli
scas
push
xor
push
cmp
cs
add
mov
or
mull
xor
aad
shl
lcall
in
cmpsb
jnp
lret
cs
orb
loope
or
pusha
add
in
mov
xchg
jecxz
mov
jmp
jnp
dec
sbb
lock
cmp
shll
or
sbb
push
sbb
adc
mov
repnz
subl
xchg
dec
scas
dec
cld
add
mov
repnz
aaa
in
pop
data16
mov
mov
popa
mov
ja
add
inc
into
imul
mov
popf
inc
loope
sbb
mov
jmp
push
pop
mul
and
sub
sti
sbb
mov
sbbl
xor
ret
mov
jmp
xchg
push
push
shlb
ja
nop
mov
sub
and
jecxz
stc
cmp
fs
mov
xchg
bound
xchg
push
jmp
test
mov
jns
cmp
push
mov
lahf
enter
std
cmp
xlat
notb
scas
push
lds
and
pop
addr16
push
mov
sub
sbb
movsb
xchg
mov
pop
mov
mov
lahf
fdiv
jbe
lods
shll
xchg
ja
or
fnsave
sub
jge
imul
cmc
sbb
dec
mov
fs
repz
clc
dec
mov
out
xlat
mov
dec
rorb
mov
test
std
in
test
cmp
and
inc
mov
pushf
outsb
mov
popl
mov
cld
aas
push
call
xorl
clc
mov
xchg
cs
jo
xor
mov
mov
bound
jb
mov
sub
push
pusha
adc
xchg
iret
mov
mov
jne
pop
movsl
cmpb
lock
mov
adc
push
sbb
push
and
xor
mov
lret
fdivrs
push
add
sbb
xchg
cld
jne
pusha
xchg
dec
lahf
mov
mov
and
cwtl
aad
inc
jnp
add
dec
push
or
call
mov
mov
dec
out
std
mov
cmp
pusha
inc
sbbb
sbb
loope
xchg
icebp
adc
push
out
add
sbb
push
or
mov
lds
mov
pushf
mov
pop
dec
loope
and
inc
xor
pushf
inc
mov
sbb
push
loop
or
xor
cmp
cs
sub
cltd
jno
push
popa
jl
pop
sub
int
stc
or
rcrb
out
fwait
test
and
dec
mov
xchg
in
ljmp
push
sbb
mov
jbe
or
and
pop
aaa
rolb
pop
jecxz
mov
sub
stc
mov
xchg
adc
mov
xlat
imul
aaa
movsb
xchg
and
insl
rorl
and
inc
mov
pmaddwd
add
rol
mov
test
mov
mov
int
xchg
in
add
ljmp
leave
inc
aad
mov
add
jp
mov
mov
stos
sbb
pusha
jp
lcall
test
mov
sbb
mov
jns
adc
sbb
inc
adc
pop
pop
push
int
mov
loope
int
cmpsb
ss
negb
sbbl
pop
insb
fldl
sub
pmaxub
rcll
push
subl
nop
lds
pop
cmp
sbb
add
bswap
aam
push
stos
sbb
outsl
loope
lods
scas
dec
adc
ret
cwtl
andb
and
int3
sub
push
and
sub
sbb
loope
in
or
je
xchg
pop
jbe
cmp
sahf
pop
repz
in
pop
test
enter
push
les
push
stos
mov
fsub
and
mov
pop
xchg
mov
jne
lds
lcall
lods
data16
notl
mov
pusha
jmp
int3
dec
loopne
repnz
rorl
sahf
stos
jo
sub
xchg
sub
sti
mov
inc
lods
push
std
pop
bound
sub
insb
push
mov
sbb
adc
cmp
sarb
xor
std
xchg
jne
sbb
adc
cmp
test
pop
xlat
daa
and
aam
dec
test
adc
adc
je
add
aas
sbb
xor
leave
fmuls
stc
ja
jg
add
jl
push
frstor
xchg
roll
repz
cmpsb
dec
add
and
cwtl
or
nop
loop
inc
subl
test
lea
push
pop
cmp
test
movsl
in
add
adc
je
data16
cs
lock
test
loopne
pop
sub
aad
add
jbe
aam
jmp
cmp
rcll
mov
sti
out
pushf
push
sarl
fldl
test
xchg
xor
stos
fndisi(8087
test
push
xor
adc
jno
inc
or
and
fadd
and
cwtl
imul
pop
xlat
push
icebp
repz
and
push
jnp
mov
xchg
clc
jmp
add
xchg
pop
cmp
outsb
dec
es
cmp
and
and
sti
mov
out
or
lea
out
mov
insb
test
mov
ret
lea
test
xchg
jge
dec
mov
mov
outsl
push
mov
ja
sbb
inc
or
in
fs
pop
dec
inc
je
mov
dec
xor
pop
lret
mov
mov
ljmp
std
dec
push
stos
aaa
ja
mov
imul
jno
xchg
loope
into
mov
clc
sub
clc
mov
movsb
xchg
add
jge
xor
xchg
mov
das
gs
xchg
out
out
fsub
orl
cmpl
data16
mov
divb
cmc
ja
jns
rcll
cmpsb
call
mov
out
push
xchg
jp
jb
sahf
mov
inc
adc
pop
push
fs
les
sub
mov
xor
fmull
scas
pop
jns
xchg
mov
adc
enter
call
insb
bound
lods
into
sar
cmpsl
jns
push
pop
movsl
xor
mov
test
and
push
hlt
ljmp
push
ret
xor
jns
out
push
icebp
sub
iret
sub
adc
push
js
mov
xchg
popa
cmpsl
add
pop
fs
sbb
dec
loope
inc
xchg
inc
shrl
int
es
pop
push
dec
sub
push
sub
sub
jnp
jae
xchg
int3
scas
lret
adc
arpl
pop
rorl
xchg
lock
cmp
or
outsl
cmpsl
stos
cmp
out
sbb
shlb
cmc
jmp
jecxz
lahf
or
ja
adc
call
pop
mov
imul
arpl
sub
mov
int3
mov
bound
or
push
push
jp
ljmp
and
ficompl
in
mov
insl
fbstp
iret
lea
out
mov
hlt
loopne
stc
insb
nop
or
mov
xchg
std
mov
xor
bound
test
and
frstpm(287
mov
jg
add
mov
fwait
cmp
outsb
pop
in
sahf
sbb
outsb
jns
sbb
mov
and
xlat
leave
or
jns
in
scas
addr16
dec
mov
sub
push
fdivrs
nop
in
enter
subb
xor
test
out
sbb
mov
rcrb
inc
xchg
push
lret
mov
add
std
xchg
test
mov
cmp
shll
pusha
ss
mov
inc
dec
mov
mov
test
fbld
out
into
inc
jmp
repz
add
sahf
jo,pt
jne
daa
dec
cwtl
cli
xchg
pop
movsb
mov
cmp
cmpsb
shrb
inc
pushf
lret
adc
lret
testl
ret
mov
sbbl
sub
jns
mov
les
cmp
lea
dec
test
add
rcr
cmp
pop
sarl
shlb
xlat
hlt
stc
cwtl
repnz
test
lahf
xor
mov
icebp
jnp
xor
mov
divb
pop
arpl
inc
add
fidivl
notb
xor
dec
and
push
fidivrl
mov
and
push
imul
pop
sub
test
sti
fadds
fisubs
pop
in
aad
fidivrl
fimull
xor
mov
cld
pusha
and
jmp
mov
mov
cmp
mov
mov
adc
out
mov
jle
je
mov
add
mov
fsts
pushf
es
mov
dec
mov
xor
ds
push
cmp
pop
sarb
mov
fcomps
ds
pop
or
add
adc
repnz
pop
lds
cmp
pop
jl
rol
call
xchg
fmul
fs
mov
mov
pop
xchg
sbb
and
pop
inc
or
insb
mov
jecxz
out
dec
fsincos
daa
adc
jg
or
sub
mov
test
xchg
lea
jg
push
jo
loopne
mov
jo
lods
mov
in
out
xor
iret
xorl
dec
push
sbb
mov
rol
adcb
and
mov
pop
movl
sbb
outsb
outsb
sub
push
insb
push
daa
push
icebp
cmpsl
pop
jle
jp
repz
iret
gs
imull
hlt
jg
jb
lock
enter
hlt
and
xor
inc
arpl
add
mov
push
leave
push
je
inc
inc
andl
push
or
das
into
daa
arpl
test
icebp
and
mov
jecxz
adc
or
xor
adc
in
xchg
nop
dec
rol
test
subb
xor
sahf
and
repz
jnp
in
incb
dec
test
rorl
cmpb
iret
repz
pop
arpl
mov
mul
stc
repnz
cmp
fdivl
subb
and
cmovb
mov
mov
dec
fcmovbe
in
mov
shl
lock
andb
and
aam
xchg
jge
sub
push
and
cli
mov
icebp
ss
mov
int
pop
sbb
push
pop
aam
jbe
and
jnp
mov
in
shll
das
and
and
cmp
adc
int3
pop
adc
sub
hlt
inc
inc
lcall
mulb
push
sbb
or
lret
mov
out
jge
ret
ret
enter
xchg
cmc
sahf
test
icebp
fstpl
xchg
and
sbb
mov
pop
ret
inc
pop
jbe
xor
push
pop
repnz
pop
cmpsb
fs
sub
rcrl
sbb
es
cmp
mov
dec
xor
xchg
push
xor
jnp
icebp
or
mov
les
mov
cmp
sub
cmc
xchg
movsb
add
stos
mov
push
into
dec
xor
xchg
cmp
hlt
mov
test
mov
add
ss
outsl
mov
jae
ss
ret
out
lods
mov
outsl
mov
xor
imul
lds
xchg
ss
jl
dec
xor
mov
inc
clc
sbb
dec
cmp
mov
lods
sbb
adc
lock
inc
or
push
dec
jno
mov
sub
ret
in
push
stos
mov
xchg
push
es
loope
push
fsubr
cmp
test
pop
jge
lods
addr16
and
or
mov
adc
fisubs
mov
push
pop
adc
xorl
scas
mov
and
or
jp
fnstenv
mov
xor
cmp
test
pop
xlat
addr16
insl
scas
pop
int3
sbb
lea
xchg
int3
fcoms
fwait
cmp
sub
je
or
lret
popa
cmp
cwtl
loopne
push
leave
inc
dec
fildl
stos
push
rcrb
les
adc
idivl
jle
test
fs
gs
cmp
cs
and
clc
adc
in
movsl
and
mov
mov
jmp
jb
idivl
insb
into
shl
lcall
dec
in
cmpsl
mov
lahf
pop
daa
cmpsb
inc
sbb
sbb
dec
push
lock
in
lret
daa
sub
push
mov
sti
and
sub
int
sbb
sub
inc
sti
dec
loop
xor
jnp
mov
shrb
lcall
xor
mov
and
aaa
test
inc
icebp
jb
push
pop
push
sbb
ficoms
sbb
xchg
jge
mov
and
sbb
sbb
shlb
ja
adc
scas
js
lret
fs
push
dec
ja
sub
lcall
mov
cmp
decb
xor
jo
loop
push
pusha
aas
push
cmp
fadd
lock
jp
push
dec
das
pop
mov
cltd
jge
test
dec
adc
sbb
fs
into
test
pop
test
cmp
outsb
jne
lods
nop
mov
scas
jb
push
push
fcmovnb
dec
xchg
int3
fcomps
aaa
insb
loop
jae
jo
jecxz
mov
and
lock
jge
stos
xchg
push
mov
ficoms
iret
lock
loop
mov
movsl
pushf
aas
das
les
push
insl
jmp
rol
call
cld
dec
cmp
sub
insl
inc
test
seta
lret
cmp
xchg
and
lret
inc
pop
push
cltd
lea
ret
jae
int
adc
mov
arpl
scas
push
ljmp
pop
xchg
mov
mov
in
push
std
dec
add
inc
mov
adc
aas
es
ss
adc
or
icebp
jge
test
test
pop
rcll
daa
int3
mov
in
loopne
loopne
sbbl
jno
sbb
xchg
mov
je
add
test
pop
push
adc
push
orl
incl
lock
adc
arpl
jle
cmp
cmp
xor
push
ja
adc
jle
mov
dec
gs
cltd
mull
pushl
mov
fs
in
loop
jmp
dec
add
stos
and
dec
mov
repnz
enter
push
sahf
sbb
ficoms
cmp
loopne
cmpsl
ret
iret
aas
daa
mov
imulb
mov
jmp
mov
stc
jp
int3
aas
xlat
cltd
or
les
pop
xchg
outsl
push
jno
leave
cltd
addr16
jns
in
lahf
mov
outsb
loopne
in
mov
or
xchg
mov
pop
stos
sbb
fidivl
mov
mov
mov
sbb
lods
pop
sub
lds
lds
out
mov
sub
jbe
mov
pop
mov
push
pop
mov
add
loope
loop
addr16
pop
push
dec
hlt
lret
sbb
push
cmp
or
iret
mov
xchg
jmp
sub
xchg
enter
push
dec
adcl
mov
add
jle
nop
or
test
add
gs
or
inc
clc
lds
cmp
add
insl
add
je
push
add
bound
dec
add
add
dec
add
je
sub
add
add
jbe
imul
add
imul
popa
outsb
arpl
outsl
add
add
imul
push
add
add
popa
ja
jns
add
ja
add
add
insb
popa
push
jae
add
je
add
addr16
add
data16
add
add
jne
add
imul
jns
add
outsl
add
jo
push
add
add
add
je
push
data16
add
je
gs
fs
jbe
add
popa
arpl
jae
outsl
add
popa
add
je
add
ja
popa
add
add
add
outsw
jne
add
add
add
add
js
jo
add
add
outsb
add
jae
add
add
add
add
add
jae
add
add
add
jns
outsl
add
jb
add
jns
add
add
add
arpl
imul
insb
add
add
add
add
add
outsl
outsb
add
add
insb
popa
push
je
add
gs
imul
je
outsl
jae
add
add
outsb
add
je
add
imul
add
jb
jbe
jb
add
add
insb
add
arpl
add
add
outsl
insl
add
jb
push
