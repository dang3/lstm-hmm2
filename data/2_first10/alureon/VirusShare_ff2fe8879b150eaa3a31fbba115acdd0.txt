mov
push
mov
push
mov
mov
test
je
test
jne
test
je
or
mov
jmp
or
test
mov
jne
push
call
pop
jmp
mov
mov
pushl
pushl
pushl
call
add
test
mov
je
cmp
je
cmp
je
mov
test
jne
mov
cmp
push
je
mov
sar
mov
and
lea
lea
jmp
mov
mov
and
cmp
pop
jne
or
mov
cmpl
jne
mov
test
je
test
jne
movl
mov
add
mov
movzwl
add
mov
jmp
neg
sbb
and
add
or
andl
mov
pop
pop
ret
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
test
je
andl
mov
sub
add
mov
mov
mov
lea
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
cmpl
mov
je
or
sub
mov
mov
sub
add
mov
mov
mov
lea
push
push
push
call
mov
mov
mov
sub
add
mov
movzwl
add
lea
movzwl
lea
mov
mov
mov
andl
xor
cmp
jae
lea
mov
mov
addl
push
lea
pop
rep
mov
add
movzwl
add
incl
cmp
jb
mov
mov
add
pop
mov
xor
pop
inc
pop
leave
ret
push
mov
sub
mov
mov
mov
sub
mov
je
mov
test
je
push
mov
add
test
je
push
push
mov
sub
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
addl
decl
jne
mov
test
jne
pop
pop
pop
xor
inc
leave
ret
push
mov
sub
andl
push
push
push
movl
mov
movl
mov
mov
movl
mov
mov
mov
mov
mov
imul
xor
add
incl
mov
push
push
mov
call
mov
mov
mov
xor
mov
div
mov
mov
mov
mov
sub
not
add
xor
mov
mov
incl
add
cmpl
jb
testl
pop
pop
pop
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
leave
ret
push
mov
push
push
mov
mov
mov
cmp
jb
andl
add
je
push
push
push
pop
mov
sub
mov
mov
mov
lea
ror
lea
imul
inc
not
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
inc
cmp
jb
pop
pop
pop
leave
ret
push
mov
push
call
mov
push
call
pop
pop
test
je
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
mov
jmp
mov
pop
ret
push
mov
sub
mov
push
push
xor
push
mov
movl
cmp
je
mov
jmp
push
call
mov
mov
push
push
push
push
mov
add
call
movl
mov
push
shl
add
incl
push
push
push
call
mov
mov
test
je
push
call
mov
push
push
call
mov
call
mov
add
cmpl
je
cmpl
jne
push
call
lea
push
push
pop
xor
lea
div
push
pushl
pushl
call
mov
push
push
push
pushl
call
mov
add
lea
add
mov
lea
mov
mov
mov
and
call
mov
mov
mov
call
pushl
pushl
pushl
push
call
push
call
mov
push
call
test
je
pushl
mov
pushl
pushl
pushl
call
cmpl
mov
jne
push
call
test
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
push
mov
push
push
mov
imul
push
mov
cmp
jb
mov
push
call
mov
add
imul
push
xor
pop
div
mov
mov
mov
mov
sub
mov
test
je
mov
sub
push
mov
call
xor
divl
mov
add
cmp
jae
mov
mov
imul
xor
divl
xor
mov
sub
imul
div
mov
cmp
jae
mov
sub
push
pushl
pushl
call
add
add
add
add
cmpl
jne
pop
pop
pop
leave
ret
push
mov
push
push
andl
andl
push
push
push
push
push
call
mov
lea
push
pushl
lea
pushl
movb
push
pushl
movb
pushl
push
call
push
push
push
call
pop
leave
ret
mov
push
push
call
mov
xor
cmp
je
push
push
push
push
call
push
push
push
pushl
call
push
push
push
pushl
call
pop
pop
ret
push
mov
sub
push
mov
push
test
je
mov
test
je
cmpl
je
mov
test
je
push
lea
push
lea
push
push
call
mov
add
push
pop
lea
add
call
mov
test
je
mov
sub
mov
mov
inc
dec
jne
pushl
mov
pushl
pushl
pushl
pushl
call
mov
mov
mov
call
mov
add
push
pushl
pushl
push
call
add
pop
jmp
xor
pop
pop
leave
ret
mov
push
mov
sub
mov
push
xor
push
push
mov
movl
mov
movl
mov
mov
call
mov
lea
push
movl
mov
movl
call
pop
leave
ret
mov
push
mov
cmpl
mov
jne
test
jge
push
push
jmp
push
pushl
mov
call
mov
pop
ret
mov
mov
mov
rol
imul
add
mov
ret
push
mov
sub
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
jne
inc
jmp
andl
push
push
lea
lea
cmpl
mov
je
mov
jmp
mov
mov
add
xor
nop
movb
mov
mov
inc
cmp
jb
mov
test
je
lea
movsbw
mov
add
inc
mov
test
jne
lea
push
call
mov
test
je
mov
add
andl
cmpl
je
mov
mov
mov
test
jns
and
jmp
add
add
push
pushl
call
mov
test
je
incl
mov
lea
cmpl
jne
mov
incl
mov
imul
add
lea
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
mov
mov
ret
mov
push
mov
push
push
mov
test
mov
je
lea
push
call
add
push
call
andl
pop
pop
pop
ret
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
add
add
xor
xor
pop
lock
shll
sub
loop
lods
sub
fstpl
test
sbb
pusha
lods
cmp
bound
jns
add
jae
hlt
int
mov
outsb
xlat
mov
lahf
popa
or
not
add
call
sub
rol
jge
mov
mov
and
add
add
lods
xorps
and
lods
fwait
lret
popf
inc
cmp
mov
dec
mov
cmp
in
sbb
pop
hlt
push
stc
orb
xchg
daa
hlt
mov
int3
fldcw
mov
pop
stos
in
test
push
bnd
push
outsb
dec
cld
mov
push
in
enter
add
out
inc
iret
sub
or
xlat
ja
mov
scas
mov
or
push
ja
testb
cmp
inc
into
fildll
inc
push
push
lods
dec
repnz
xlat
jge
lret
repz
int
stc
arpl
fdivl
cli
cli
arpl
push
jl
les
add
push
loopne
daa
add
sub
mov
or
mov
out
adc
push
outsb
jne
test
or
hlt
mov
dec
out
cmp
dec
mov
clc
jmp
fcompl
mov
jb
xor
xchg
pop
lret
movsb
stc
mov
sbb
repnz
pop
jns
mov
xchg
cmp
pop
js
mov
add
add
xor
std
loop
bound
xchg
xchg
pop
inc
insl
or
cmp
ja
subl
push
mov
mov
movsb
ret
push
lods
cmpsb
mov
mov
sarb
fisubrs
pop
xchg
cmp
andb
add
mov
out
dec
push
jmp
jecxz
jbe
mov
lods
lods
gs
add
hlt
aad
std
in
enter
sub
mov
dec
cmpb
nop
sub
test
and
out
adc
mov
lcall
sbb
sahf
sbb
cli
add
leave
movsl
aas
lret
stos
ja
xor
shrb
lret
stc
loopne
loopne
loope
sarl
jns
cmpsl
xchg
stos
xchg
fcmovnu
andl
outsb
or
lods
div
mov
rcrl
sbb
jnp
jno
in
shrb
pop
pushf
int
sbb
ret
fsubrl
mov
mov
pop
push
fisubrs
sbb
xchg
pop
xorl
and
mov
in
inc
adc
mov
leave
sbb
jnp
adc
imulb
bound
mov
push
and
dec
cmpsl
mov
add
sub
push
test
mov
loopne
pop
aas
fs
insl
mov
notrack
faddl
pop
mov
and
jb
xor
in
cmp
test
add
mov
ja
sub
inc
out
mov
jmp
xor
mov
loop
jg
jne
inc
jp
push
sti
shrb
mov
push
fmul
daa
push
in
or
or
cltd
dec
add
loope
xor
cld
push
dec
xor
lods
imulb
sbb
lds
add
mov
ret
push
xor
shr
and
aaa
or
mov
int3
xchg
iret
push
enter
popf
mov
cld
adc
pop
dec
aas
fstpt
and
cwtl
adc
push
mov
lods
pop
xchg
lret
xor
je
or
cs
jp
mov
lods
push
imul
cld
nop
add
add
xor
adc
scas
ljmp
adcb
lock
movsb
jp
sub
movsl
test
test
mov
sub
sbb
cmp
roll
aad
popa
mov
mov
lds
movb
stos
pop
jnp
shll
or
sbb
mov
ret
pop
test
add
xor
in
mov
fdivrp
fcomip
or
inc
dec
pop
stos
sub
inc
xchg
xchg
imul
cmpsl
mov
cmp
shlb
sub
mov
test
stos
shr
test
xchg
jg
sahf
clc
hlt
jno
fwait
sub
push
and
loopne
adc
add
xchg
xchg
popf
dec
loopne
pushf
outsl
xchg
mov
mov
push
inc
mov
pop
aas
repz
mov
or
and
or
fcomps
add
add
or
adc
jne
sbb
inc
adc
movsb
insb
xchg
mov
or
stos
test
dec
lods
fcoms
int
nop
fwait
shrb
mov
adc
out
jle
out
lods
test
push
aam
and
imull
data16
jbe
push
mov
pushf
ds
pushf
adc
inc
push
mov
je
ret
jnp
mov
add
push
rcr
hlt
std
shll
dec
and
bswap
lret
jo
push
add
add
fstpl
mov
mov
enter
jb
mov
mov
outsb
add
insb
sbbb
or
jmp
xor
and
stos
ljmp
sbb
subl
stc
mov
je
jp
fs
inc
or
push
cli
or
scas
xor
cmpsl
popa
add
add
add
mov
push
repz
test
repz
dec
pop
or
push
scas
mov
jle
icebp
cs
outsb
fwait
adc
dec
mov
fidivrs
mov
ret
clc
add
faddl
mov
mov
mov
in
scas
xchg
xchg
xchg
adc
jb
lcall
and
push
aaa
xchg
push
mov
add
into
shlb
add
insl
enter
pop
test
xchg
push
mov
jg
cmpl
mov
cmp
in
and
dec
cwtl
loop
jne
fists
je
push
sub
cmp
sub
ljmp
mov
and
mov
ljmp
idivb
adc
std
xchg
adc
xchg
movsl
add
shll
add
lahf
and
add
push
inc
and
mov
cltd
inc
cmp
push
jne
jp
test
test
xor
adc
inc
out
push
mov
imul
sbb
push
push
test
push
xchg
jno
cmpsl
fnsave
and
bound
add
andb
xchg
lds
clc
out
sbbb
cmp
ret
rcll
bound
fidivrs
mov
jl
add
add
mov
notl
mov
leave
icebp
movsl
inc
cmpsl
mov
aam
out
enter
xchg
out
and
mov
je
mov
adc
adc
shlb
aas
pop
ss
ss
shrb
scas
jmp
push
repnz
test
adc
fs
adc
push
in
mov
shrb
adc
add
cmp
inc
in
loope
inc
pop
hlt
xchg
jbe
fcmovb
es
aas
push
loope
das
push
dec
aaa
dec
xchg
jbe
jb
and
out
out
inc
mov
loopne
das
cmp
push
lods
rorl
mov
imul
out
mov
ljmp
push
pop
sbb
adc
mov
mov
lret
sub
dec
add
add
add
sub
push
push
or
mov
push
loope
iret
test
jmp
notb
push
loopne
fwait
dec
cmp
ror
push
subb
cmp
jne
sti
arpl
or
pop
icebp
push
fldl
mov
inc
arpl
xlat
imul
fldenv
dec
sub
adc
xchg
xchg
aas
or
jecxz
movsb
sub
sub
ss
sub
loope
mov
push
add
call
xlat
bound
add
add
inc
stos
loop,pt
xlat
inc
inc
outsl
xchg
outsb
leave
nop
add
jne
addr16
movl
flds
fcoms
les
test
and
or
loop
aam
mov
sbb
lret
hlt
call
into
ljmp
mov
inc
and
in
xor
stos
sbb
fists
ret
daa
jne
fidivrl
cmpsb
adcb
test
add
inc
cmp
mov
pop
mov
scas
cmc
pushf
mov
les
fldt
and
sub
negb
popf
das
test
mov
push
rol
xor
xor
loope
clc
shll
popf
adc
add
cmp
sbb
popa
clc
xchg
test
xchg
out
scas
pop
je
pop
dec
or
movsb
in
pop
ficompl
je
fidivrs
or
jbe
arpl
inc
mov
sarl
fsts
aam
adc
dec
push
cmpsb
and
xor
hlt
add
fidivrl
imul
push
push
pusha
in
xor
push
jmp
xlat
ret
mov
jb
enter
fimuls
out
stc
and
and
repnz
dec
xchg
xchg
push
xor
inc
push
test
mov
fs
mov
hlt
rorl
sbb
cs
push
pop
xor
fwait
fwait
adc
add
mov
sub
push
mov
mov
fnsave
hlt
pushf
xchg
sbb
sbb
xchg
in
shlb
push
fsubs
add
sbb
je
or
lahf
add
sub
add
push
xchg
xchg
int3
test
lds
push
shl
stos
mov
cmp
cs
shll
xor
adc
push
lret
sti
mov
sbb
mov
pop
aas
or
test
js
xchg
jge
push
xor
lret
pop
into
sbb
push
inc
fsubs
call
mov
imull
mov
sbb
add
cmp
movsb
lcall
std
and
fiadds
push
xorb
or
xor
push
xor
mov
sbb
lcall
int
ds
fwait
out
call
js
jae
loope
add
enter
xchg
imul
nop
sub
inc
lock
lret
in
fnsave
and
jns
dec
test
cmpsb
jecxz
outsb
jns
inc
stos
adc
int3
or
inc
cmpb
cmp
mov
inc
mov
mov
inc
xor
pop
out
and
push
ds
in
jle
dec
rorl
sbb
xchg
clc
test
mov
imul
mov
stos
mov
sub
flds
mov
add
add
outsb
sbb
in
inc
in
push
mov
jne
pop
rorl
subl
insb
movsl
fisubs
dec
out
sbb
pop
pusha
in
push
adc
add
sbb
inc
lahf
mov
mov
addr16
xchg
push
outsb
jns
mov
repz
arpl
pushf
xchg
inc
bound
icebp
mov
test
mov
adc
stos
sub
in
pushf
outsl
inc
lea
out
vmulps
mov
xchg
or
leave
imul
cld
test
mov
mov
lret
sbb
mov
dec
push
push
adc
jmp
cmp
xchg
or
repnz
jp
outsb
xchg
movsb
or
lcall
popf
adc
imulb
inc
cmp
lret
jno
movsl
loop
push
addl
and
add
inc
test
aas
xchg
mov
fwait
mov
mov
or
pushf
mov
iret
add
cmc
xor
push
inc
sub
jns
aas
stc
mov
mov
or
mov
push
mov
jae
pop
icebp
in
scas
sub
cmc
out
notl
cmp
xor
gs
lods
xchg
fcmovb
inc
jecxz
xchg
mov
jmp
orl
sub
mov
add
add
push
gs
out
out
xchg
dec
ja
cli
sub
push
jb
loopne
outsb
and
loope
test
mov
mov
das
lahf
xchg
and
es
mov
nop
mov
jno
push
jmp
cmc
lock
mov
xor
xor
call
jl
mov
fs
or
les
inc
cli
sarl
xchg
push
sbb
jne
xchg
push
lahf
xchg
call
cmp
loopne
add
adc
push
adc
dec
inc
mov
push
popa
fisubrs
push
pop
push
or
jbe
cmpb
sub
repnz
lds
inc
sub
or
shrl
cmp
insl
icebp
inc
out
xor
sub
push
loope
and
cmp
rorl
repz
popa
std
test
sbb
sub
push
add
loope
add
aad
jno
add
jbe
shll
data16
jl
push
add
jmp
mov
add
and
call
adc
hlt
lea
mov
rorb
xorl
movb
and
fcmovne
and
or
test
mov
test
jge
idivl
stos
repnz
dec
hlt
dec
inc
adc
insb
pusha
mov
jp
and
scas
inc
mov
pop
in
sahf
xchg
dec
xchg
lods
pop
or
fninit
icebp
xchg
inc
dec
xorb
dec
ret
xchg
push
xchg
pop
pushf
hlt
mov
dec
scas
lock
push
in
push
movsb
mov
cmp
pop
out
cmp
jg
sub
fisttps
mov
hlt
adc
pop
xchg
ljmp
dec
mov
add
xor
iret
mov
rcl
arpl
dec
sub
iret
movsl
mov
scas
js
jne
cmpsl
es
in
movsb
inc
adc
arpl
sub
pop
adc
jbe
test
and
mov
sbbb
pop
jg
and
sub
cmp
and
mov
mov
and
fisubl
iret
sets
jle
mov
or
test
shrb
mov
outsb
mov
fimuls
cmp
lret
sub
sub
pop
add
push
es
movsb
div
dec
mov
add
std
roll
jno
lock
aaa
dec
mull
xchg
sbb
add
outsb
scas
xor
xor
mov
mov
jb
dec
mov
mov
fisttpll
inc
fisubrs
mov
mov
sbb
in
les
test
mov
and
test
sbb
adc
push
popf
int3
mov
je
cmp
xor
ds
sbb
inc
push
into
pop
scas
inc
and
xchg
out
lods
xor
mov
pop
pop
sub
std
es
fbld
sbb
mov
mov
clc
mov
or
cs
sub
in
stos
push
dec
inc
subb
shl
sub
xchg
lcall
testb
out
pop
fwait
dec
jo
or
repz
mov
pop
out
jg
push
stos
bound
call
fsubs
fsts
sbb
push
iret
mov
jns
dec
fldt
out
mov
cmp
mov
cmpsb
add
daa
jge
sbb
movaps
fistl
jb
out
call
add
jle
mov
push
repz
jl
lock
pop
divl
inc
addr16
xchg
or
push
sahf
mov
cltd
mov
xchg
das
xchg
loop
adc
sub
xchg
test
mov
rcrl
scas
sbbl
movsl
cltd
hlt
out
and
mov
imul
rcrl
mov
inc
cmpsb
js
enter
pusha
mov
pop
add
cld
add
or
es
cmp
ja
ds
add
jmp
push
jns
dec
adc
sub
jns
xchg
pop
push
popl
lret
ss
notb
jnp
movl
test
push
xchg
aad
inc
call
and
hlt
pop
orl
aam
pusha
rcrb
jmp
mov
dec
int
xor
loopne
xor
xchg
fisttpll
fidivrl
ljmp
das
pop
popa
sarb
pop
jp
pop
add
add
mov
jno
xor
mov
xor
mov
add
push
fmuls
inc
xchg
lock
aad
cli
out
ret
cmp
dec
dec
jle
es
test
and
test
inc
mov
iret
inc
jbe
int
adcb
xor
xchg
stos
mov
pushf
fs
lock
pop
aad
jl
cmp
mov
bound
test
xor
out
push
jnp
ds
dec
lret
std
add
push
inc
hlt
jnp
jmp
aaa
sbb
lea
in
and
dec
lret
std
pop
inc
sub
popf
jmp
pop
movsb
pop
sbb
data16
fbld
jne
inc
xchg
cmpsl
pushf
cmp
sahf
dec
enter
mov
inc
test
test
xchg
push
xlat
cld
adc
daa
imulb
lret
xor
je
add
dec
cmpsb
out
dec
out
repnz
inc
jb
lods
es
xchg
test
inc
xchg
movsb
add
das
add
je
xchg
repz
push
dec
sahf
pop
push
mov
loope
andb
scas
fs
sbb
je
adc
xchg
dec
jg
loop
in
add
jecxz
stc
sbb
insb
add
addl
aaa
adc
iret
and
fs
clc
add
mov
push
popf
loop
push
insb
cmpsl
cld
ljmp
push
fimuls
push
in
and
add
jae
and
rcll
fcomi
popf
push
in
imul
push
adc
or
icebp
in
scas
or
sti
imul
test
stos
or
lea
loopne
call
cltd
icebp
leave
jge
jl,pt
pushf
repz
std
aaa
mov
inc
fidivrl
sub
lock
shlb
mov
cltd
lods
xchg
jge
lahf
icebp
shrb
repz
scas
dec
xorb
add
mov
push
inc
or
mov
sbbb
call
pop
ja
out
adc
xor
ljmp
sbb
data16
iret
int
cmpl
jae
or
mov
xor
outsl
dec
aas
subb
xchg
mov
imul
push
popa
xchg
rcrl
push
jb
das
sub
mov
lret
or
lods
jmp
les
cld
mov
in
add
push
mov
cmpl
outsb
dec
mov
mov
cmp
adc
jo
repz
movsl
das
push
fnstsw
lods
dec
inc
jmp
push
loop
xor
std
xchg
insb
xlat
cmc
iret
mov
and
jg
aad
mov
inc
jo
mov
ret
lret
xorl
imul
sysenter
stc
adc
out
in
add
add
and
outsb
jne
cli
dec
jb
gs
out
ret
les
ret
lock
sub
xor
test
xchg
mov
mov
cli
dec
sub
dec
loop
inc
or
push
scas
xor
pop
jbe
mov
shll
popa
lock
xlat
add
aad
movq
mov
and
mov
in
jne
xchg
push
cmp
adc
mov
xchg
mov
mov
add
cmc
js
data16
repz
mov
xchg
ret
addr16
jb
outsb
mov
movsb
jb
adc
jb
jne
cld
mov
inc
inc
adc
inc
mov
andb
ds
iret
or
or
out
mov
insl
pop
and
and
dec
push
scas
xchg
mov
notl
mov
jbe
cmp
loope
sbb
ret
pop
push
shr
outsb
ja
mov
in
out
xorb
addr16
add
add
lock
iret
cltd
dec
sub
xchg
bound
jns
outsb
dec
inc
mov
adc
je
daa
test
mov
jecxz
out
out
lods
or
or
repz
mov
pushf
mov
push
es
adc
in
lods
dec
xchg
xor
fstl
lods
xor
or
mov
xor
shll
aaa
pop
ret
cmc
pop
das
jnp
enter
xor
movsl
add
std
and
ds
or
sub
dec
movsl
pop
prefetchw
or
pop
lods
int3
and
ds
cmp
cmp
pop
lcall
pusha
inc
arpl
inc
jb
pop
mov
imul
add
insb
push
sub
mov
pop
scas
mov
jb
into
loopne
insl
xchg
or
mov
loopne
icebp
xchg
xor
mov
dec
outsb
push
loopne
jo
int
in
push
shll
add
cli
cmp
das
mov
jmp
mov
inc
sarl
ss
jne
mov
push
imul
in
dec
xchg
fs
aam
xor
xlat
jnp
sti
dec
into
out
cwtl
mov
js
dec
imull
inc
jns
lahf
xor
in
xor
in
inc
add
adc
cmp
add
sbb
inc
push
shlb
mov
adc
mov
sbb
sbb
dec
cmp
ret
dec
nop
inc
ss
sbb
xchg
add
adc
es
aam
nop
lods
test
arpl
dec
sbbl
xor
in
rorl
aad
in
xchg
loopne
insl
sbb
xor
and
js
sub
addr16
xchg
cmpl
out
sbb
cmp
fldl
inc
push
adc
push
je
and
test
cmp
outsb
mov
add
int3
jnp
into
dec
adc
mov
push
enter
add
add
inc
jne
dec
sub
pop
ja
sbb
test
hlt
nop
push
std
pushl
ret
and
sti
cmpsb
jne
mov
pop
add
push
xor
cld
fimuls
xchg
pop
stc
push
enter
mov
or
fs
jg
mov
dec
cld
aad
adc
jbe
lods
outsb
addr16
sub
and
sbb
shl
sbb
adc
imul
push
cli
aaa
and
add
add
inc
int3
sub
mov
stos
and
push
xchg
xor
sbb
jns
mov
vpmacsdqh
dec
mov
outsl
jecxz
jmp
adcb
out
sub
inc
jmp
and
cmpsb
insl
xor
mov
mov
mov
pop
pop
fnstsw
in
movsb
push
sub
inc
popa
fidivs
xchg
sti
test
push
ljmp
and
add
jg
mov
outsb
or
sub
std
pop
sbb
add
imul
inc
sbb
div
outsl
jnp
mov
loopne
mov
pop
nop
cmp
daa
pop
dec
gs
nop
imul
mov
int
mov
and
icebp
stc
pusha
lods
inc
arpl
adc
cmp
dec
test
ljmp
in
add
popa
cmp
fbstp
cld
outsb
ret
xlat
sti
ljmp
push
pushf
jbe
fs
pop
pop
es
arpl
imul
test
ficomps
es
subb
xor
cmc
lods
insb
lods
enter
push
cld
pop
jo
in
dec
add
orb
add
movl
sub
jbe
in
pop
fwait
outsb
pop
adc
std
adc
dec
lahf
aam
rol
insb
ljmp
lock
adc
outsl
sub
test
xchg
int
add
icebp
repz
mov
xchg
xchg
mov
mov
jne
mov
idivl
enter
in
push
add
mov
jmp
mov
and
ds
dec
ja
add
ja
and
mov
mov
push
movsb
aas
dec
xor
inc
push
jae
andl
add
shr
add
add
cltd
adcb
or
adc
ret
push
add
imul
cmp
in
ljmp
fwait
cwtl
arpl
dec
push
jecxz
inc
movsb
ss
out
lds
xor
dec
fsubrl
shl
adc
xor
cs
mov
imul
mov
and
push
pop
rol
pop
cmp
cli
pop
lock
in
add
imul
ds
inc
lcall
mov
pop
sub
call
das
paddsw
int3
push
and
or
subb
enter
imul
std
aam
and
add
hlt
mov
ret
pop
pop
hlt
mov
push
push
pop
outsb
out
in
sbb
sbb
mov
test
xchg
sti
pop
in
dec
jb
sbb
stos
xor
popa
ss
ljmp
add
add
mov
das
and
inc
loop
dec
cld
jp
fwait
xchg
rcrb
cmp
popa
lcall
xchg
jbe
xchg
sbb
mov
and
push
xchg
js
mov
xlat
sbb
dec
jno
lret
les
sbb
aam
ret
dec
imul
adc
fwait
lahf
mov
ljmp
sysexit
aad
dec
push
and
dec
push
loopne
mov
jl
mov
mov
add
add
enter
das
pop
push
test
hlt
fnstenv
addr16
or
jbe
in
mov
ret
lods
adc
pcmpgtw
std
xchg
push
ljmp
pop
jmp
push
cli
out
inc
sbb
jecxz
movsl
xchg
jg
dec
shll
xchg
push
js
faddl
dec
divb
mov
mov
mov
fcoms
imul
lahf
cltd
xchg
cmpsb
movsl
call
add
das
add
mov
inc
repz
jmp
cwtl
shr
pop
pop
lret
jnp
and
pop
lret
xchg
mov
push
xchg
push
imul
test
mov
mov
lahf
push
je
sbb
or
movsb
jno
repnz
dec
xchg
add
cwtl
adcb
divb
pop
ret
mov
adc
mov
pushf
mov
mov
rorl
div
or
lret
fiadds
cmp
xor
sbb
add
cltd
cmpsb
pop
or
sub
leave
aam
lds
mov
dec
and
pusha
arpl
inc
or
repz
jnp
push
bound
push
nop
leave
mov
pop
mov
ret
fbstp
gs
stos
mov
mov
jl
jbe
in
out
mov
sbb
cmp
add
push
rclb
js
les
stos
cmpsl
dec
lret
push
xchg
dec
mov
dec
cmp
add
fsubs
inc
pop
xor
out
dec
mov
test
addl
ret
aas
dec
imul
rorb
pop
and
inc
cwtl
xor
mov
xor
cmpb
push
out
hlt
js
jle
xor
test
inc
sub
icebp
or
test
pop
mov
cmp
mov
add
dec
and
pop
leave
nop
xor
cmc
adc
push
lods
ds
and
push
testl
enter
mov
hlt
ds
bound
fwait
hlt
imulb
aaa
inc
sub
jnp
in
cmp
stc
sbb
push
sub
scas
cmp
in
mov
inc
xor
movsl
dec
mov
in
mov
aam
clc
cmp
jno
sbb
cmp
jle
icebp
jmp
iret
cmpsl
jae
in
in
outsb
testl
imul
or
arpl
sbb
mov
add
sti
mov
mov
and
movsb
fs
jmp
push
cmpsb
test
jle
shlb
outsl
fidivrs
xor
rorb
inc
fwait
scas
fcomip
imul
popf
std
aaa
sbb
fnsave
inc
sub
test
adc
mov
repnz
bnd
stos
shr
js
adc
push
mov
xor
dec
pusha
inc
out
pop
pop
jmp
jae
pop
sub
inc
adc
jae
std
inc
rorl
add
jno
inc
xlat
xchg
inc
push
adc
add
das
inc
imul
lahf
sub
jge
jnp
test
dec
xchg
rclb
sub
in
pop
jnp
fdivr
jmp
es
cmpsb
and
fnstcw
hlt
xchg
aad
imul
and
or
lcall
lock
cmp
roll
out
or
lds
fdivl
mov
mov
inc
cwtl
shll
dec
aas
icebp
and
test
add
mov
movsl
adc
in
ret
mov
outsb
pop
dec
jae
push
aaa
inc
js
sub
fcoms
hlt
mov
leave
push
clc
fadds
leave
xchg
es
sub
lahf
lahf
mov
jb
fsubrs
sub
es
repnz
push
dec
jno
repnz
fistpl
es
jge
test
fdivs
dec
in
sahf
sbb
fistpll
fcompl
adc
stos
dec
push
hlt
sbb
pusha
je
mov
lahf
iret
jo
ss
mov
fcomp
add
jmp
cwtl
adc
dec
movsb
popf
int3
push
sbb
fs
je
shll
lods
cltd
jbe
in
xor
aaa
push
cmpsb
inc
jmp
icebp
lock
jnp
push
gs
outsl
xchg
sbb
jge
push
jns
stos
sub
arpl
out
inc
cmp
jmp
dec
dec
mov
jg
out
out
mov
sbb
jp
into
pushf
jnp
and
test
loop
aaa
out
add
dec
andl
add
mov
sbb
movsl
scas
fsubs
sub
popf
loope
add
dec
dec
jo
roll
xlat
popa
xor
pop
sub
fmull
pop
push
jnp
test
and
or
push
insl
inc
xchg
sbb
sbb
enter
jnp
and
pop
jb
out
sub
lods
jbe
xlat
mov
cmpb
cmpsb
mov
outsl
pop
cld
decl
push
mov
add
shll
popa
or
cltd
mov
stos
lahf
loopne
push
mov
