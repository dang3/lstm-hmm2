cmpsl
cmp
dec
and
lret
dec
ss
push
outsl
fstpt
sbb
cli
inc
outsl
stos
outsb
insl
push
and
cmp
je
pushf
add
push
mov
loop
dec
je
cmp
shlb
gs
daa
dec
loop
into
dec
sub
gs
pop
sub
sahf
cli
jns
add
cmp
nop
ret
es
xchg
stos
mov
pop
rol
lret
sahf
das
and
adc
mov
iret
or
int3
mov
lds
inc
enter
iret
push
movsb
stc
dec
cmp
sbb
in
insb
xchg
sbb
ljmp
pop
jmp
xchg
mov
sub
arpl
mov
xchg
push
pusha
inc
lds
xor
sub
inc
sub
mov
in
int3
pop
fnstenv
adc
xor
xor
fiadds
jmp
sub
and
cwtl
mov
pop
or
add
add
mov
xchg
int
adc
adc
sub
rclb
xchg
stc
mov
ja
cmpsb
aas
imul
iret
cmpb
push
xchg
cld
push
inc
sub
loopne
je
or
cmp
nop
inc
mov
and
and
hlt
repnz
ja
push
into
dec
repz
pop
cmp
filds
and
xor
mov
popa
cmpsl
test
inc
push
std
fwait
adc
dec
pushf
mov
outsb
jge
shr
lret
jl
and
pop
or
insb
sarl
pop
add
scas
pop
clc
and
lods
lods
xchg
xlat
ds
test
xlat
test
enter
movsl
mov
popa
adc
stos
cld
dec
push
inc
or
pop
aam
loope
pop
lret
or
int3
rorl
add
lock
xor
in
in
cld
xor
mov
add
movsl
xor
adc
jmp
mov
add
outsl
push
subl
dec
sub
cltd
sub
enter
ljmp
inc
idivl
ret
dec
mov
push
mov
dec
jecxz
push
std
xchg
dec
pop
mov
lea
cmp
inc
jge
mov
mov
inc
xor
or
adc
inc
jno
fdivrs
lret
jae
es
inc
add
mov
pop
jp
repnz
fwait
xchg
insb
lcall
pop
jb
fildl
or
lcall
sub
mov
and
mov
inc
pusha
insb
inc
outsb
clc
fcoml
lock
lods
pop
xrelease
or
pop
add
lea
push
mov
xlat
cwtl
push
jge
ret
sub
outsb
out
lret
ret
push
sbb
sbb
mov
adc
addr16
pop
ffreep
pop
bound
stc
dec
ds
popa
cmp
pusha
shlb
ja
or
loopne
leave
jbe
inc
xchg
cltd
cli
test
dec
sbb
push
push
shlb
or
aad
xchg
mov
hlt
cs
lods
fstpl
cld
cltd
pop
out
mov
jl
lods
adc
movsl
push
push
bound
mov
dec
iret
frstor
lea
pop
dec
mov
les
cld
outsb
int
xchg
int
dec
data16
mov
mov
inc
loopne
mov
test
adc
cmp
test
push
xchg
nop
cmpsb
or
mov
int3
imul
int3
shlb
int
iret
adc
popf
push
cmp
push
je
adc
fildl
stos
test
in
push
mov
sbb
punpcklbw
out
loope
pop
mov
testl
inc
mov
inc
xchg
and
xchg
fwait
mov
mov
loopne
pop
fildl
cld
fs
bound
sti
dec
mov
sbb
jns
cli
dec
and
mov
repnz
call
pushf
xor
cmp
icebp
xorb
jge
enter
in
daa
ja
add
es
leave
mov
cmp
dec
pop
dec
cmp
xor
add
ljmp
popa
mov
sub
mov
mov
mov
sbb
inc
pop
lds
decl
loope
in
mov
fsubrl
rcrb
push
xchg
ret
xchg
stc
notb
testl
xor
pop
pop
jb
adc
fmul
jp
jl
cltd
out
xchg
pop
enter
movsb
imul
dec
cmp
aam
sbb
xchg
iret
sub
mov
std
imul
invd
les
push
mov
xlat
fimuls
fildl
mov
shrl
in
or
inc
insb
cli
pop
adc
int3
fisubs
ss
scas
mov
add
icebp
adc
cwtl
push
mov
push
shl
dec
push
or
in
pop
sub
push
mov
mull
das
mov
pusha
jg
test
pop
xchg
mov
lahf
inc
fsubrs
push
movsl
cmp
icebp
push
push
jnp
mov
xchg
jecxz
mov
pop
jns
push
lds
pop
sub
sub
add
inc
sbb
shrb
loop
mov
das
loop
mov
insl
inc
xor
sub
add
jnp
xorb
es
test
xlat
mov
mov
ret
or
xchg
push
mov
adc
loopne
pop
jge
dec
xchg
pop
push
or
shrb
insl
inc
add
mov
enter
pop
in
outsb
scas
or
xor
enter
xchg
mov
fucomi
cmp
rorl
or
sub
xor
or
and
or
out
mov
stos
dec
add
push
sahf
sbb
or
shll
rcl
xor
sbb
sub
add
or
dec
or
mov
xor
dec
pop
ret
jle
subl
in
jg
add
jecxz
les
pop
scas
pop
negb
filds
xchg
cmc
push
cmpsl
inc
sub
sbb
ljmp
push
xor
inc
push
mov
add
xchg
xor
sub
sub
inc
int3
cmpsl
sbb
insb
mov
inc
dec
jno
ds
outsb
jo
fcoms
in
push
popa
loope
fwait
mov
cltd
add
sbb
cmc
or
insl
scas
cmpsb
out
xor
and
rcll
xchg
inc
sub
jmp
push
subb
inc
dec
dec
and
test
inc
out
arpl
aad
lock
movsl
push
lods
or
xchg
cmpsb
popf
negb
and
inc
movsb
clc
stos
sbb
sahf
pop
sub
shrb
add
jle
rorl
mov
test
sub
mov
or
test
andb
adc
mov
push
fucomi
jmp
fimull
ja
jb
jmp
push
out
fwait
cld
and
inc
lcall
xchg
mov
arpl
scas
test
or
pop
xchg
in
ffree
cmp
adc
cld
mov
fcomi
xorl
int3
fldl
dec
inc
mov
sbb
jbe
cmp
cmpsb
shll
arpl
xchg
dec
ds
lock
jl
xchg
jo
int
cwtl
rorb
fbstp
orb
or
rclb
les
jp
xor
push
xor
mov
sbb
pop
jne
call
loope
adc
jp
push
mov
sahf
cmp
data16
pop
pop
inc
add
pop
mov
xchg
dec
mov
push
mov
mov
add
call
inc
inc
call
call
inc
add
add
call
call
lea
add
movswl
inc
dec
dec
inc
and
lea
imul
inc
call
inc
push
add
inc
xor
call
lea
mov
call
sub
dec
dec
dec
or
lea
imul
add
dec
pop
inc
add
xor
add
lea
pop
imul
add
pop
add
inc
dec
or
pop
lea
mov
inc
inc
dec
inc
and
lea
pop
movzbl
add
pop
sub
inc
mov
dec
or
call
lea
mov
inc
add
ret
inc
dec
push
and
lea
push
movsbl
dec
push
dec
dec
push
sub
and
push
lea
mov
add
add
push
inc
ret
push
add
push
and
lea
push
imul
dec
push
add
call
pop
ret
jmp
xor
xor
lea
movzwl
inc
add
add
inc
inc
xor
lea
mov
inc
add
add
dec
jne
inc
mov
add
lea
pop
mov
inc
pop
sub
add
pop
inc
add
lea
mov
add
dec
add
add
xor
lea
mov
add
ret
push
inc
dec
dec
dec
xor
lea
mov
sub
push
push
push
push
dec
inc
sub
push
and
lea
mov
inc
dec
dec
inc
or
lea
mov
mov
push
dec
add
xor
inc
sub
push
add
lea
push
mov
inc
pushl
dec
call
dec
add
dec
and
lea
mov
add
inc
add
pop
ret
lea
mov
mov
dec
inc
add
inc
sub
xor
lea
mov
inc
inc
cmp
jb
dec
mov
inc
add
xor
lea
mov
xor
inc
inc
pop
inc
inc
test
jbe
sub
lea
imul
inc
dec
inc
add
or
lea
mov
sub
add
sub
dec
and
lea
mov
inc
inc
dec
sub
inc
xor
lea
and
imul
inc
mov
sub
inc
movzbl
inc
or
add
lea
mov
and
add
inc
mov
dec
dec
mov
xor
lea
mov
imul
dec
mov
add
inc
dec
sub
lea
movsbl
dec
jne
add
mov
add
inc
inc
or
lea
imul
add
dec
inc
dec
mov
or
lea
mov
add
add
inc
dec
sub
mov
lea
mov
test
jbe
dec
dec
inc
sub
or
lea
movsbl
dec
add
add
dec
or
lea
mov
add
inc
dec
dec
add
add
lea
mov
and
inc
dec
mov
inc
add
movzbl
add
lea
add
movswl
dec
and
add
dec
mov
add
and
movzbl
lea
mov
mov
sub
add
mov
inc
inc
movzbl
add
lea
add
movsbl
inc
and
sub
dec
movzbl
sub
jmp
push
call
inc
xor
inc
xor
xor
lea
movsbl
inc
dec
add
inc
sub
dec
xor
and
lea
shl
mov
sub
xor
inc
dec
inc
and
lea
mov
push
inc
inc
dec
call
inc
pop
or
lea
movswl
sub
inc
inc
add
add
cmp
je
lea
inc
imul
add
add
sub
sub
dec
xorl
dec
and
ret
lea
imul
dec
dec
add
dec
pop
or
ret
push
lea
mov
sub
dec
dec
push
add
and
push
lea
push
mov
push
dec
sub
add
inc
sub
lea
mov
sub
inc
call
dec
push
dec
push
add
pop
lea
imul
mov
sub
dec
mov
inc
sub
inc
or
lea
dec
je
imul
add
dec
inc
inc
sub
lea
mov
inc
mov
dec
inc
mov
sub
or
lea
mov
repnz
inc
inc
add
add
jmp
dec
or
lea
mov
dec
dec
dec
dec
add
lea
mov
inc
sub
inc
inc
add
pop
pop
jmp
ret
push
lea
mov
inc
add
inc
dec
sub
lea
mov
inc
dec
inc
add
add
lea
mov
inc
dec
dec
inc
add
lea
mov
dec
add
add
inc
add
pop
ret
sub
lea
mov
imul
inc
mov
dec
dec
mov
dec
sub
mov
lea
imul
xor
inc
dec
mov
dec
inc
inc
and
lea
mov
inc
dec
inc
cmp
jb
dec
push
sub
lea
push
mov
dec
push
inc
inc
mov
add
or
xor
lea
mov
xor
inc
dec
xor
inc
inc
push
and
lea
xor
inc
mov
add
dec
mov
dec
or
movzbl
lea
imul
inc
inc
add
inc
dec
add
or
lea
movzbl
movswl
dec
inc
add
dec
xor
lea
movzwl
inc
dec
dec
mov
dec
inc
add
lea
mov
inc
cmp
jb
dec
xor
inc
add
mov
sub
jmp
imul
sbb
rolb
mov
std
insb
aas
cmp
stos
jo
pusha
add
push
xchg
push
push
into
std
jbe
mov
mov
enter
push
test
addb
mov
scas
cmpsb
arpl
pop
mov
push
clc
imul
pop
mov
mov
addr16
mov
xor
mov
mov
rcll
jmp
mov
loop
xor
jbe
das
mov
dec
subl
mov
clc
xor
fdivrs
shr
mov
mov
sahf
xlat
sub
aas
cmp
xor
addb
cmpsl
mov
sbb
pushf
cmc
aaa
lods
das
lock
xor
lods
iret
mov
dec
mov
repz
fbld
jmp
xchg
or
aam
loopne
fimuls
ficomps
nop
lret
jae
icebp
ljmp
xchg
add
arpl
mulb
orl
ljmp
and
adc
mov
push
dec
cmp
aam
push
xor
mov
addr16
sti
cli
cmp
daa
in
stos
out
xchg
pop
aad
jmp
mov
pop
sub
adc
insl
push
push
dec
mov
jne
mov
sahf
ret
xor
inc
xchg
cld
inc
bnd
xor
pop
int
add
jp
or
popa
jge
fdivl
daa
mov
mov
sbb
fs
fmulp
int
dec
mov
push
dec
cmp
lods
out
mov
out
sbb
xchg
jle
outsb
dec
dec
sbb
xchg
or
mov
or
adc
push
hlt
xor
aam
mov
lcall
in
mov
or
lret
xlat
pop
imulb
and
test
sbb
fstpt
jae
cmpsl
sti
fsts
pop
arpl
cmpl
scas
cmp
je
mov
pop
cli
lds
loope
fisttpl
lea
into
push
lahf
dec
vpmulhw
mov
mov
jge
or
insl
sbb
test
orl
stc
es
xor
stos
js
pop
div
nop
push
pop
inc
in
and
nop
ret
and
aas
xor
sahf
or
pop
out
shll
or
rcl
imul
negl
inc
cwtl
clc
shlb
sti
inc
jl
fsubrs
fildl
pusha
or
pop
sbb
mov
enter
push
sbb
pushf
ss
pop
mov
cmp
dec
imul
and
xchg
lds
ret
or
outsl
add
sti
mov
movl
jecxz
lahf
popa
sbb
mov
mov
inc
add
mov
dec
test
push
xchg
mov
cmpl
ret
xlat
jge
aaa
sbb
test
dec
popf
jg
mov
jbe
adcb
mov
jbe
mov
mov
push
enter
and
mov
inc
dec
adc
and
stos
in
jp
insl
fucomp
xor
sbb
jecxz
iret
test
dec
dec
sahf
sbb
stos
je
pop
jmp
mov
int3
jb
mov
xor
add
push
cmovns
cld
movsb
stos
and
add
rcrb
ja
insl
outsb
loop
data16
hlt
aad
mov
add
inc
js
nop
test
inc
and
pop
pop
push
and
xchg
jo
cmpsb
negl
sub
popf
sub
push
fadd
mov
jg
push
or
jae
es
xchg
pop
cmp
add
mov
jne
stos
sbb
mov
or
fwait
jp
rcrl
sub
arpl
pop
aaa
pop
aam
aad
lods
dec
leave
ljmp
sbb
fsubrs
shr
xchg
mov
sti
incw
xchg
mov
fwait
push
pop
faddl
stc
lods
sarb
daa
mov
mov
or
insl
xchg
repnz
adcb
filds
cmc
add
pop
fldt
rorb
jp
repnz
rcrl
cltd
pop
mov
aaa
xchg
jg
add
mov
cmp
ret
cmpsl
ficompl
xor
add
pop
fs
icebp
loopne
fisubrl
cmpsl
sub
or
ret
ja
mov
cwtl
repnz
shrl
cmpb
in
lock
add
imul
add
lea
jae
add
cmp
xor
jmp
inc
cmpsl
xchg
adc
test
dec
subb
jmp
inc
idivb
outsb
mov
shlb
mov
add
jae
mov
or
ror
jmp
jl
mov
std
pop
gs
lea
inc
sub
add
cmp
or
xor
xchg
scas
mov
dec
mov
mov
and
cmp
sahf
fwait
je
into
add
sahf
jb
fwait
push
xor
push
mov
dec
cltd
cmpsb
cmp
cli
sar
push
addr16
mov
jp
sbb
jo
popf
stc
imul
jo
notb
ljmp
push
mov
aam
inc
outsl
scas
in
mov
adc
mov
or
push
sbb
loopne
inc
addb
xor
cmp
push
sahf
and
hlt
add
ljmp
add
out
jne
cld
jo
jns
xlat
in
pop
jge
xchg
ds
daa
adc
dec
add
xor
push
popa
fcomi
push
out
mov
sub
addl
mov
lds
pop
xor
rolb
cmp
sub
cmpsl
jp
fnsave
in
arpl
cmp
negl
test
mov
cmpsl
push
sbb
xchg
mov
jns
enter
lcall
iret
cmp
cli
mov
enter
or
xchg
aam
push
cmpsb
js
or
pop
sbb
pop
mov
outsl
stos
int
pop
jle
mov
lahf
sbb
sbb
push
out
jl
push
and
movsb
movsl
sbb
push
push
fdivrs
ja
jmp
adc
sbb
ret
xchg
cs
addl
inc
cwtl
test
aad
mov
mov
aaa
mov
inc
inc
xchg
stc
gs
lret
fbstp
xor
js
xchg
dec
adc
stos
add
add
sub
mov
mov
lcall
dec
dec
xorl
and
xchg
setno
adc
das
aas
js
inc
sub
mov
pop
add
shl
outsb
nop
hlt
dec
and
sbb
dec
mov
lea
rolb
dec
les
add
xlat
cmpsb
cmp
popf
jp
fcmovb
or
pusha
lods
jb
cltd
test
mov
popf
out
push
imul
bound
lret
aad
push
shll
fcmove
xlat
loopne
xor
xchg
dec
das
xchg
mov
xchg
stc
inc
push
cmp
jecxz
ret
push
add
jmp
aam
aad
sub
sub
lds
jo
mov
jmp
dec
insb
and
lock
nop
cmpsl
push
xchg
mov
inc
dec
icebp
pop
xor
pop
push
test
pop
std
rorb
add
push
jp
or
mov
cwtl
xor
adc
or
fsubl
and
icebp
push
ficomps
fcmovnu
repnz
xchg
sbb
jbe
push
sub
sbb
xchg
clc
dec
pop
aaa
inc
jo
movsl
jp
fmull
jge
dec
nop
add
mov
jle
push
loope
cld
std
call
adc
and
bound
jmp
lods
cmp
dec
lods
dec
loope
fwait
mov
add
xchg
enter
rclb
fwait
or
mov
xor
stos
div
sbb
mov
dec
inc
ret
push
outsb
js
and
or
das
sbb
jle
or
dec
cmp
add
mov
or
ljmp
cltd
jmp
enter
adc
dec
loop
xor
out
mov
push
test
adc
outsl
cmpsl
mov
fmull
mov
push
cmc
push
je
pushf
ljmp
ret
out
lds
in
out
xor
clc
xor
out
out
std
dec
jle
cmp
push
incl
pop
sbb
mov
repnz
out
aaa
sbb
stos
adc
insb
xor
loope
jne
cmc
pop
das
sub
scas
ljmp
push
lret
xchg
rcl
mov
test
jo
push
and
pop
jo
mov
mov
bound
pop
subb
push
addr16
loopne
xlat
xor
cmpsb
rcrl
fildll
xchg
inc
into
adc
inc
lock
jbe
jns
adc
dec
stc
dec
fs
sub
loope
fdivrs
and
rclb
sbb
dec
outsl
daa
jns
dec
mov
popf
xchg
in
push
rcll
cmp
sbb
ficomps
jbe
dec
cli
clc
jmp
stos
xchg
xchg
fnstcw
out
dec
dec
mov
mov
push
push
bnd
inc
rol
test
pusha
into
cs
fnstcw
add
mov
popa
adc
cltd
rcrb
test
push
cmp
in
mov
mov
xchg
loop
sub
pop
in
cmp
jo
jno
pop
mov
lret
push
lcall
inc
fisubl
lret
mov
mov
cmpl
xor
and
dec
rcl
stos
pop
frstor
adc
cmp
gs
mov
pop
decb
pop
or
stc
mov
jne
and
sti
dec
dec
out
aas
and
inc
pop
add
dec
fs
adc
sub
ret
mov
cmp
or
shr
xchg
push
mov
pop
jmp
adc
push
jne
insl
push
adc
pop
lahf
dec
xchg
jbe
out
and
pop
insb
insb
cmc
insb
popf
inc
xchg
je
xchg
jb
movsl
sbb
ds
ret
and
fwait
inc
xor
bound
repz
pop
fwait
in
xchg
bnd
push
jg
rcll
loope
sub
jb
and
ljmp
fidivs
shrb
pop
jp
pop
mov
pop
push
vpunpckhqdq
mov
and
cmp
sbb
inc
push
add
movsl
nop
adc
push
mov
out
ja
push
fdivl
push
xchg
lock
insb
mov
div
nop
stc
mov
sub
pop
adc
cltd
mov
jnp
test
push
mov
gs
xchg
jg
pop
lods
stos
cmpb
add
jo
adc
ds
pop
daa
pop
hlt
rcrl
and
or
repnz
jb
xor
mov
xor
ret
xchg
xchg
xchg
jp
test
xchg
outsb
std
sbb
push
imul
mov
leave
fdivs
cltd
lock
outsb
jg
out
inc
mov
and
into
sub
add
mov
mov
test
lods
lahf
pop
fcmovbe
into
mov
subl
xor
pop
daa
ror
xorb
or
lea
dec
in
fs
ljmp
rclb
je
jbe
mov
mov
imul
sarl
stos
out
mov
push
fstps
add
pop
jge
out
dec
lea
outsb
enter
popa
clc
xor
orl
push
les
jle
dec
mov
imul
cmp
jle
cmp
test
add
stc
xchg
pop
jbe
xor
add
sti
dec
fstl
jbe
leave
jae
or
cmp
inc
ret
push
leave
or
xor
sub
scas
cmpsb
mov
add
loope
subb
xor
pop
nop
sarb
psubsb
aas
in
pop
fnstenv
fsubrl
xor
and
int3
push
mov
mov
sub
or
cmpsl
mov
enter
push
movsl
and
mov
xchg
xor
jno
sbb
int3
loop
mov
mov
xor
imul
mov
adc
or
inc
mov
cmp
or
pop
movsl
test
aas
outsl
sub
out
ret
cwtl
test
loopne
pop
arpl
or
cmp
inc
divb
std
mov
add
dec
and
jg
xor
lcall
clc
dec
jne
xlat
sahf
push
enter
lock
push
cltd
inc
xor
pop
sub
add
dec
pop
inc
in
xor
pop
mov
push
mov
ret
adc
xlat
cld
imul
mov
js
aam
add
popa
outsl
fs
enter
lock
js
stc
xchg
xchg
ja
adc
mov
imul
into
cmpsl
add
sbb
pop
xchg
lods
push
pop
push
dec
sbb
in
pop
loope
or
pop
in
cmp
loopne
mov
add
adc
pop
inc
xor
cld
dec
call
pop
out
push
loop
std
inc
insl
mull
push
cli
mov
pop
or
mov
jle
in
push
addb
adc
icebp
inc
jg
lea
fimuls
and
pop
xchg
aaa
ret
and
xor
cs
cld
mov
mov
xchg
dec
movsl
pop
adc
adc
nop
or
mov
sub
arpl
nop
imul
mov
in
pusha
or
jle
mov
adc
add
sub
imul
inc
lods
outsb
push
dec
jnp
sub
bnd
outsl
mov
adc
int3
pop
int
xor
or
xor
jle
dec
lock
repz
fdivs
adc
and
iret
jb
mov
cmp
lahf
push
stc
jmp
cmpsb
repz
and
int
sbb
adc
or
xchg
lea
xchg
cs
sub
mov
jecxz
ljmp
add
enter
stos
cltd
popa
in
in
cli
repnz
out
lea
mov
xchg
add
mov
mov
repz
icebp
popa
add
jne
fs
jo
scas
add
mov
in
sub
cmp
dec
jge
xlat
fldl
int
and
and
imul
mov
inc
shlb
test
aad
jbe
sbb
sub
jp
pop
fsts
fwait
sarb
or
cmp
aas
or
lret
ret
icebp
fwait
push
mov
cmp
ret
fistl
sub
fcomps
jae
jb
adc
jl
add
add
jp
ret
dec
pop
jg
push
jno
mov
mov
dec
scas
jecxz
mov
dec
xchg
adc
inc
add
xchg
adc
out
jnp
and
js
adc
pushl
gs
roll
pusha
pop
aas
mov
cmp
in
inc
mov
dec
push
rclb
rcrl
cmpsl
gs
clc
mov
out
cli
jne
in
in
incb
outsb
adc
jl
inc
jnp
jns
dec
dec
push
lds
xchg
lret
sti
loope
add
or
sub
xor
inc
fucomp
fiadds
mov
je
pop
nop
jo
inc
lods
and
or
jno
mov
or
or
mov
das
xchg
imul
mov
ss
stc
jno
mov
mov
push
or
xchg
adc
mov
scas
sti
cltd
xchg
cmp
mov
daa
dec
scas
daa
jns
and
cld
xor
mov
and
pop
push
in
xchg
out
out
push
inc
sarl
js
stos
dec
lcall
add
mov
and
add
cltd
enter
aad
es
fidivrl
loopne
fs
jo
xchg
call
jle
inc
xor
sub
sti
adc
test
push
dec
mov
cmp
add
or
xorl
pop
out
mov
dec
popa
xor
mov
roll
scas
movsb
jb
inc
inc
mov
rcrb
mov
scas
fwait
cmp
jb
adc
sub
dec
or
aad
cltd
push
and
iret
dec
int
out
mov
stos
loope
adc
cmp
shrl
lret
loope
jge
outsl
es
xor
out
sbb
test
dec
shll
dec
pop
pop
leave
roll
add
arpl
imul
mov
inc
push
lods
add
mov
icebp
outsl
loope
fldcw
inc
push
in
rorl
inc
and
in
xlat
jb
in
dec
in
dec
sahf
jg
cli
push
or
stos
sbb
stos
ffree
mov
adc
je
inc
aad
je
dec
aas
xchg
lahf
ret
loop
adcb
test
rorl
mov
push
inc
inc
fsubl
pop
icebp
dec
shr
cmp
data16
fwait
push
aad
or
mov
nop
dec
sub
jmp
in
add
jne
je
cltd
mov
dec
shl
mov
insb
lret
movhlps
xor
adc
or
xchg
and
xor
push
push
aaa
push
push
sarb
or
sti
xchg
js
lea
mov
aas
leave
jno
pop
push
hlt
add
adc
xor
cwtl
nop
test
fiaddl
rorb
push
xchg
insb
jmp
mov
add
xor
clc
xchg
dec
repz
push
loope
lcall
pop
and
jp
xor
jl
pop
jbe
idiv
in
lcall
xchg
fmuls
adcl
adc
mov
out
jle
add
sbb
scas
xchg
xchg
mov
jmp
loop
lock
or
lods
and
sub
les
shll
jne
mov
loop
inc
inc
mov
push
imull
mov
mov
aad
adc
adc
or
scas
into
push
scas
imul
ljmp
js
in
fsubp
inc
adc
and
xchg
fiaddl
jle
pop
and
aas
imul
ret
in
test
in
in
mov
outsl
movsl
insl
ja
jo
mov
or
add
lds
loope
push
push
jge
imul
or
inc
sbb
data16
das
jg
faddp
in
mov
sbbl
mov
cmpsl
ret
aam
mov
dec
fs
mov
lock
lret
movsl
imul
test
rol
inc
mov
clc
fidivrl
or
dec
ljmp
dec
lods
hlt
je
sub
xor
rorb
movsb
loopne
out
mov
cmp
icebp
faddl
jg
pop
sbb
adc
push
fst
repz
in
in
mov
mov
arpl
bound
cmp
insl
xorb
cmpsl
mov
stos
mov
xor
push
jbe
sbbb
rcrb
adc
pop
pop
or
sti
and
in
push
xchg
sub
les
mov
lds
cmpsl
ret
cmpsb
insl
sbb
jns
jnp
out
and
clc
jne
add
fdivp
stos
imul
pop
and
mov
cld
enter
test
dec
xchg
pop
lret
insb
je
pushf
lret
mov
push
sub
repz
mov
les
jns
mov
inc
imul
mov
cmpb
outsl
fisttpl
xchg
sbb
xor
mov
sarl
stos
lcall
dec
mov
mov
mov
outsl
or
mov
mov
sarl
inc
es
and
testb
inc
stos
pop
mov
cmpsl
leave
cmp
pop
out
gs
add
in
jmp
and
outsl
jb
in
cs
dec
sbb
add
frstor
or
adc
dec
xchg
push
xlat
daa
pop
data16
test
pop
cmp
push
pop
sbb
mov
addl
push
ret
daa
push
popf
push
xchg
sbb
jns
cmpl
mov
xchg
pop
and
sub
inc
dec
imul
je
xor
mov
idivl
repnz
mov
mov
xchg
sub
or
mov
out
test
test
lret
outsl
add
addr16
push
nop
sarl
icebp
sub
mov
xor
cmpsb
out
jns
pop
push
dec
mov
cmpsb
cmpsb
mov
push
mov
fiadds
enter
and
mov
movsb
mov
adc
pop
pop
fs
testb
or
arpl
sbb
xchg
out
sti
add
jge
mov
iret
divl
or
loop
mov
enter
arpl
push
out
dec
push
jmp
jmp
lret
call
pop
loope
ljmp
enter
repnz
sbb
dec
push
mov
mov
mov
out
loopne
jb
loop
mov
and
int
fildll
mov
xchg
in
sub
push
ja
push
pop
xlat
jle
je
xchg
jnp
test
xlat
mov
pop
xor
mov
and
cwtl
add
sbb
mov
cmp
sahf
xor
xor
test
and
je
add
out
add
scas
lcall
out
insl
inc
dec
adc
or
ror
push
loopne
loopne
in
sub
adc
mov
xor
pop
jmp
pop
xor
imul
loope
je
mov
inc
lods
enter
sbb
stc
xorb
fdivr
ror
hlt
lahf
dec
or
ds
dec
test
sbb
aaa
dec
xchg
pop
jg
call
or
in
ds
paddsw
push
iret
push
aad
fstpl
or
mov
dec
push
aas
lret
sti
lahf
jo
stc
mov
jl
mov
int3
cmpsl
andl
rclb
lahf
add
aas
hlt
pop
dec
xchg
mov
mov
dec
movsb
bound
add
out
sar
mov
pop
sub
ret
jle
fucomi
push
popa
xchg
testb
xchg
or
inc
test
cmpsl
or
out
aam
push
test
cmp
or
inc
add
sub
pop
and
inc
cmp
xlat
dec
insb
pop
mov
pop
sub
ds
inc
push
repnz
push
jb
xchg
inc
pop
repnz
fs
call
sti
cmp
orl
inc
int3
adc
scas
pop
lods
add
notb
and
ljmp
fwait
xchg
cmp
addr16
test
add
addr16
xchg
shr
adc
sub
jae
push
add
shlb
pop
dec
jnp
xchg
add
cmp
pop
js
xchg
sbb
push
xchg
sub
lret
xor
xchg
into
sarb
and
lods
mov
add
xor
mov
xchg
sbb
xchg
sub
inc
ss
sub
testb
add
xchg
mov
cmovno
stc
bound
dec
ret
xorb
fldenv
jbe
pop
loop
outsl
lret
inc
xor
sbb
xorl
mov
out
iret
pop
mov
add
or
jns
inc
leave
or
jne
test
add
inc
mov
push
outsb
pop
and
je
sbb
cmpb
sbb
and
stos
lods
add
sbb
aas
fnsave
sub
int
in
inc
cmpsb
sbb
push
fdivrp
jno
pop
or
sbb
jnp
adcb
adc
push
mov
mov
push
pop
bound
push
push
mov
jge
pop
pop
mov
bnd
std
popa
or
add
xchg
pushf
push
cmp
or
inc
push
push
nop
test
xchg
mov
jns
fcmove
jae
sbb
push
jne
lcall
fucomip
cmp
inc
out
or
sub
pop
jg
cld
cmp
push
addr16
inc
pop
mov
bound
cwtl
push
cltd
xor
loopne
add
xlat
pop
xor
lret
inc
rol
mov
xor
push
mov
adc
pusha
jp
pop
xor
in
jmp
cltd
test
outsl
incl
ss
pop
inc
fwait
mov
call
dec
loop
add
fs
gs
outsb
iret
mov
xchg
insl
add
fcmovu
push
ficoms
out
adc
iret
inc
mov
cmpsb
lcall
cmp
jecxz
xchg
js
mov
or
mov
jle
repz
repnz
mov
xlat
xchg
clc
stos
popa
orl
outsb
gs
xor
leave
jae
jmp
and
out
int3
loop
popa
mov
mov
push
stos
sub
lods
idivl
push
or
cmp
cltd
out
sub
daa
fxtract
mov
cmp
in
gs
sbb
pop
mulb
inc
or
in
pop
rclb
xor
push
adc
je
cmpsl
not
iret
mov
sti
mov
lds
jo
push
gs
pop
mov
push
lods
les
icebp
out
jmp
jge
jne
movsb
sti
daa
sub
lock
mull
mov
fisubl
test
data16
mov
shrb
sbb
clc
out
or
scas
push
insb
add
jbe
pop
and
add
jne
into
inc
sti
jle
out
jecxz
xor
pop
lods
or
cmpsl
stos
cwtl
popl
in
push
and
adc
cli
shl
cvttps2pi
repz
sbb
mov
adc
es
orb
out
xchg
adc
inc
fidivrl
dec
gs
mov
aas
arpl
fists
icebp
jge
jmp
or
jmp
mov
bound
lcall
cli
jne
rorl
jg
push
push
jecxz
idivb
movsb
loop
test
in
in
aaa
idivl
cmp
dec
fdivr
loop
xchg
int3
lret
mov
js
scas
sahf
push
loop
sub
pop
out
add
xchg
xor
adc
sub
ret
sbb
mov
jge
pop
push
enter
mov
pop
push
push
xor
fnstenv
mov
andb
mov
popf
jb
mov
or
rolb
xor
jns
xchg
mov
clc
dec
rolb
repnz
xchg
insb
xor
fldcw
adc
or
fistl
mov
jo
sub
test
mov
mov
outsl
jno
jmp
xor
and
or
jno
cmp
aaa
xchg
pop
sti
mov
sub
push
ljmp
push
dec
in
cwtl
jmp
fstpt
int3
xchg
es
cltd
and
sbb
mov
push
xchg
mov
dec
cmp
sub
data16
inc
lea
sub
sahf
add
mov
int
dec
lods
repz
lret
mov
aaa
loope
sbb
leave
push
out
sbb
roll
cmp
dec
stc
cmpsb
stos
and
test
push
addr16
neg
es
addl
jmp
test
xor
gs
adc
in
add
test
fadds
leave
cltd
movsb
lods
cmp
cmp
sbb
and
xor
mov
shlb
hlt
xchg
aas
dec
xor
popa
push
filds
push
jbe
sbbb
jae
push
inc
and
lds
stc
das
mov
in
int
in
hlt
jns
hlt
ja
mov
inc
jne
call
mov
mov
popl
mov
mov
push
mov
insb
cmp
cmpsb
repnz
push
cmp
dec
sbb
fcompl
jge
sub
push
sbb
cmc
mov
dec
pop
xchg
add
push
popa
out
dec
or
movsl
xchg
add
lret
iret
and
das
push
popa
mov
xchg
mov
inc
jno
mov
je
mov
add
mov
adc
xor
out
out
inc
sub
mov
aad
call
mov
daa
xor
fldcw
pop
jmp
repz
lcall
not
mov
jl
lahf
pop
dec
dec
or
sub
xchg
mov
leave
jg
into
jae
dec
xchg
inc
add
and
push
sbb
in
mov
pop
inc
pop
inc
cwtl
push
enter
icebp
cld
push
fmull
pop
xchg
out
bound
mov
pushf
mov
mov
xchg
pop
lahf
cli
mov
mov
jmp
ret
pusha
addr16
andl
outsl
test
loope
in
or
lds
das
out
mov
sub
test
cmpsl
jl
add
xchg
xlat
out
cld
scas
xchg
or
filds
push
mov
stc
add
ficoms
mov
cmp
in
push
ret
mov
jnp
sbb
sbb
inc
shrl
cmpl
mov
scas
inc
insl
pop
out
stos
xchg
cmp
pop
aad
call
test
mov
mov
int
test
out
dec
mov
test
mov
adc
jl
jo
lret
inc
pop
lds
iret
outsl
repz
push
or
or
sbb
das
fisttpl
push
insl
xor
cli
jne
stos
pop
mov
sub
divb
in
dec
mov
push
sub
jns
mov
mov
jns
mov
jae
pop
mov
test
lret
cld
and
clc
xchg
add
or
int3
jle
sub
sub
cmp
add
mov
sub
out
inc
popa
or
push
int
dec
adc
cltd
sbb
lods
adc
aad
push
jae
fnsave
sub
mov
popa
xor
mov
lahf
and
add
push
and
push
jl
icebp
mov
inc
jg
jecxz
stos
cs
cltd
pushf
addr16
loop
aam
out
cmp
or
sub
cmp
in
pop
shlb
inc
shrl
push
jb
pop
data16
mov
pop
dec
dec
sbb
dec
jne
pop
dec
sbb
cmp
and
push
dec
loope
into
pop
int
das
mov
jl
fstl
mov
xchg
mov
inc
clc
xchg
pushf
outsb
mov
pminub
pop
sbb
lods
lret
mov
in
inc
push
jmp
cmc
sub
mov
mov
call
gs
jg
and
push
xchg
lcall
fdivrs
xor
mov
mov
in
mov
fs
ret
jbe
movsl
add
sbb
nop
or
and
sub
divb
xchg
xor
mov
sub
jo
insl
pop
lea
adc
idivl
mov
les
cmp
mov
jmp
dec
cmp
sbb
iret
xor
xchg
scas
lret
mov
out
pop
xor
iret
add
mov
xchg
dec
pop
add
adc
add
stc
sti
gs
je
loop
mov
adc
push
push
xchg
cwtl
aaa
pop
cld
inc
rcll
popa
inc
jb
or
xchg
aam
jmp
arpl
pop
or
dec
adc
mov
cltd
shrb
mov
push
fdecstp
stos
fwait
es
int
sbb
repnz
lcall
dec
dec
enter
gs
dec
mov
addr16
mov
cmp
fnstenv
call
loopne
test
repz
cmp
sbb
stc
lahf
cmp
xchg
punpckhbw
push
mov
dec
and
cmp
stc
popf
movsb
add
add
mov
test
push
test
mov
jo
das
iret
jno
mov
cmp
dec
subl
aad
popf
rorl
lcall
sti
cmp
filds
pop
int
jge
outsl
and
or
andb
mov
data16
das
dec
lret
pop
mov
int3
pop
mov
or
jo
arpl
and
lahf
sub
mov
sarb
xchg
mov
fdivl
stos
sahf
nop
adc
xlat
cltd
aad
int
mov
sub
aad
loopne
pop
pop
adc
dec
fmuls
out
mov
test
jb
nop
push
mov
mov
call
je
pop
sbbb
hlt
in
or
push
stc
jb
shlb
cmp
test
aas
outsl
out
jne
ds
shll
push
aad
and
in
ret
push
fwait
hlt
xor
leave
pop
orl
adc
push
out
sbb
aas
add
clc
arpl
jne
pmuludq
mov
jmp
mov
mov
in
sub
call
cmpsl
push
bound
test
in
mov
iret
out
ret
call
jno
adc
add
lret
sub
rcrl
cwtl
inc
and
push
and
call
adc
mov
lret
sub
pop
repz
fsubrp
in
xchg
mov
fs
push
jle
inc
movsb
jl
fistps
jg
daa
and
movsb
sub
cs
mov
xchg
jnp
out
jnp
outsb
mov
push
addr16
inc
dec
popf
pop
mov
into
mov
sahf
xor
pop
pop
iret
mov
fldl
mov
idivb
sub
xor
inc
es
pop
lock
mov
cmc
mov
insb
xor
push
mov
outsb
sub
rorb
xor
dec
xor
mov
sbb
mov
adc
push
xchg
std
push
mov
adc
jns
outsb
nop
adc
xchg
fadd
and
iret
pop
loopne
popf
insb
add
and
push
lea
add
lods
adc
xor
sub
fstenv
in
or
or
imul
mov
push
roll
scas
movsb
jge,pn
lea
cmpsl
inc
adc
loope
sub
push
inc
mov
out
cli
inc
testl
outsl
xor
mov
xor
daa
push
push
lcall
shl
lods
add
adc
clc
inc
fisubs
outsl
cmpsb
push
dec
jns
std
repz
ds
xor
int
inc
cld
mov
mov
push
lahf
jmp
rcr
aas
sbb
mov
mov
std
cmp
ja
mov
ljmp
add
fisttps
push
pop
faddp
roll
sti
xor
and
mov
mov
xlat
adc
mov
leave
xchg
hlt
loopne
popa
imul
fcompl
jnp
cmpsl
sahf
mov
fs
fs
arpl
inc
lcall
scas
push
jl
pop
or
xor
and
sbb
loope
ds
hlt
and
mov
mov
out
es
lcall
or
adc
aam
mov
pop
sub
xor
rcll
mov
mov
mov
inc
xor
add
lret
mov
and
pop
in
call
pop
test
add
mov
cmp
orl
push
iret
jnp
xchg
aad
popf
jb
ljmp
add
out
scas
fstpt
jge
loope
in
add
test
push
cmpsb
lcall
xorb
fsubrs
insl
sahf
jnp
mov
cwtl
mov
sbb
lahf
ljmp
iret
lcall
fldcw
mov
mov
fcos
push
out
stos
xor
mov
mov
lret
out
lret
aam
and
jne,pt
adc
clc
dec
scas
addr16
xlat
pop
push
mov
push
inc
cmp
jbe
addr16
or
mov
subb
xor
loop
loop
and
xor
in
mov
or
xchg
int3
sbbb
cmp
push
sub
xor
lods
lods
sbb
add
pop
xchg
pop
cwtl
movsl
fisttps
out
js
repz
test
int
outsb
mov
cmp
fs
inc
enter
sti
sub
inc
cmpsb
daa
aad
push
dec
cs
jne
out
rcrb
xchg
cs
mov
push
scas
jg
sbb
aad
push
pop
push
dec
or
in
mov
pop
repnz
add
ret
mov
cmp
or
rclb
in
repz
mov
test
jae
jnp
pop
xchg
and
dec
mov
sbb
add
repz
cmc
testb
lea
add
pusha
mov
cmp
xchg
iret
adc
inc
ficomps
sbb
lock
mov
inc
push
mov
mov
imul
lahf
inc
imul
adc
add
push
push
lods
sbb
add
jge
pop
dec
scas
mov
cltd
movsl
cwtl
in
loopne
scas
push
cmp
outsl
inc
jp
dec
pushf
push
jae
es
stos
dec
sti
cmp
jle
into
leave
out
jecxz
ds
rclb
fiadds
mov
adc
std
mov
and
mov
sub
inc
ds
cmp
scas
das
lods
ljmp
xchg
movsb
mov
stos
dec
mov
ret
out
mov
cmp
icebp
push
push
mov
xlat
mov
pop
clc
fcom
add
pop
push
pop
andb
imul
cltd
lret
lcall
fcomps
lret
ljmp
out
lcall
movsl
jmp
xor
mov
inc
add
push
jge
lcall
mov
enter
les
dec
mov
fdivrp
daa
fs
iret
scas
push
out
xor
addb
cmpb
and
inc
subb
and
pop
inc
cltd
mov
push
shld
addb
xor
pop
or
rorl
sahf
movsb
mov
data16
mov
and
aam
test
dec
push
mov
inc
fbstp
and
adc
dec
xchg
aad
xor
jnp
clc
push
xchg
or
or
lret
xchg
call
and
dec
adc
xchg
xchg
stos
sbb
aaa
jae
sarl
out
popf
inc
js
add
in
push
adc
push
or
add
jo
inc
outsb
fistps
sahf
inc
cmp
sti
aaa
inc
clc
xor
outsl
xchg
or
insl
aas
cmc
rcr
jns
mov
pusha
scas
mov
cld
aam
xchg
outsl
adc
or
dec
inc
test
mov
ss
mov
push
pop
ret
inc
mov
push
push
add
and
xchg
mov
jns
adc
nop
gs
lcall
fists
mov
sub
aas
mov
push
outsl
insl
mov
bound
xchg
cmp
inc
push
jl
push
jmp
xchg
push
ja
insl
lds
sub
and
dec
cmc
lret
adc
cli
test
inc
cltd
jle
nop
sub
mov
or
adc
sbb
js
test
pop
adc
or
inc
or
and
pop
loop
stos
xor
mov
stc
sub
mov
fsubrl
fists
test
pop
in
mov
xchg
out
shlb
adc
aas
xor
js
mov
aaa
jmp
mov
push
popf
or
jle
push
jb
cmpsb
dec
jmp
mov
cmp
inc
push
sbb
in
xor
js
mov
scas
cmp
fadd
in
out
stos
and
sbb
pop
and
ds
sbb
mov
xor
mov
push
dec
jecxz
or
fsubs
cmp
jle
and
repz
popf
sbb
popf
cmc
outsl
clc
std
push
mov
lea
cmp
mov
and
push
mov
mov
test
leave
sub
sub
dec
xchg
outsl
sbb
cld
push
or
rcl
fimuls
and
cmpsb
mov
loop
pop
movsb
mov
cwtl
pop
adc
loopne
stos
dec
repnz
pop
call
cltd
fcomps
sbb
es
loop
fsub
sbb
inc
les
jnp
add
mov
mov
mov
gs
sbb
mov
subl
dec
nop
stos
jg
jae
jbe
cs
mov
fstl
dec
call
ja
pop
jecxz
push
lea
or
cmp
dec
mov
loopne
call
out
push
lea
ret
xor
push
xor
lock
push
pusha
push
add
xlat
rclb
jns
push
dec
mov
adc
aas
dec
lret
fcmovb
push
popa
lcall
gs
arpl
mov
in
addr16
xor
cld
pop
add
notl
xchg
xor
push
jp
cmc
cmp
or
movsl
cmp
or
loopne
scas
movsb
pop
inc
jp
xor
in
stos
fistps
pusha
push
shll
nop
movsb
cmp
dec
add
mov
and
adc
pop
js
add
mul
xlat
sbb
add
std
push
lcall
js
push
cli
jo
xor
mov
in
jbe
cmpsl
jne
call
jb
xor
sub
jns
mov
in
push
movsl
insb
lock
pushf
rcrb
sub
jbe
loop
and
aad
sbb
out
add
stos
in
enter
sub
mov
inc
ror
pop
ret
shlb
inc
sahf
push
test
mov
jae
lcall
xchg
pop
das
fldl
sar
cli
hlt
aam
pop
inc
sub
cmp
nop
xor
std
int
testl
movsl
loope
movsl
adc
xchg
and
lcall
in
fcmovnbe
call
or
test
jecxz
xchg
sbb
mov
xor
cmp
or
xor
or
ret
fbld
mov
hlt
insb
ds
inc
inc
sub
in
add
dec
pop
in
call
sub
ret
in
mov
push
sub
in
in
dec
add
inc
mov
faddl
pop
mov
imul
xor
and
sbb
inc
loope
pop
ret
cmp
push
or
mov
cmp
sbb
mov
int3
sti
and
sbb
shrl
aaa
std
sbb
cwtl
inc
dec
mull
dec
jns
ret
xor
aaa
pop
xor
enter
dec
mov
dec
cmp
ljmp
shlb
adc
xchg
cmp
cmp
gs
jns
adc
mov
mov
adc
push
cwtl
sbb
mov
pushf
js
jl
repnz
cmp
add
mov
fwait
test
push
push
inc
xchg
int
jmp
cmpsl
xchg
dec
xchg
xor
insb
adc
rcrb
push
mov
and
xchg
push
sub
pop
adc
imul
lcall
arpl
mov
and
mov
sahf
int
pop
ljmp
dec
lock
or
insl
mov
in
mov
je
jmp
sbb
test
mov
repz
cmpsl
leave
mov
dec
add
push
mov
dec
pop
cmpsb
xchg
shl
sbb
roll
js
jnp
ja
mov
icebp
sahf
lea
das
fwait
jbe
int
je
xchg
or
in
adc
inc
xchg
jnp
push
test
faddp
test
mov
xor
mov
shlb
fisubl
shrb
ljmp
jbe
fisttps
mov
movsb
or
ret
in
fdivl
inc
mov
jo
push
push
andb
xor
push
mov
dec
xchg
imul
ja
sti
mov
mov
mov
bound
ds
in
jnp
push
dec
cmp
dec
ljmp
call
pop
dec
dec
mov
sahf
jg
mov
push
lea
xchg
mov
jbe
and
push
out
sbbl
mov
das
jmp
hlt
into
cmp
dec
gs
xor
inc
call
sub
pop
ja
and
mov
xlat
lock
sbb
jno
sub
aas
ljmp
stos
xchg
test
push
int3
inc
cmp
cli
in
sti
mov
pop
pusha
adc
mov
std
test
ss
sbb
outsb
fs
xchg
push
dec
test
pushf
mull
dec
mov
les
lds
inc
cltd
sbb
sbb
dec
lods
test
das
sub
and
push
mov
bound
inc
sub
cmp
nop
push
lcall
xchg
aas
les
and
pop
test
jns
ret
lock
std
stos
aaa
cmpsl
jnp
sub
sar
out
cmp
add
out
sti
jecxz
pop
dec
push
adc
cltd
mov
xchg
test
and
mov
movsb
adcb
insl
mov
xor
adc
and
pushf
ss
icebp
stos
ds
mov
xor
dec
adc
rcrb
mov
in
jecxz
or
dec
lods
stos
sub
xlat
cwtl
xor
mov
movsb
mov
not
mov
add
ret
and
pop
lcall
decb
jns
fnstcw
lock
xlat
shrl
es
and
imulb
into
push
mov
sub
rorb
push
dec
test
add
push
mov
repnz
mov
pop
xchg
inc
into
xchg
push
rcll
imul
push
sbb
test
popf
es
xor
add
xchg
movsl
xchg
jae
mov
xchg
stc
loope
dec
cmc
mov
sub
ljmp
dec
leave
fs
mov
inc
pop
sub
jbe
dec
cmp
dec
das
aaa
mov
jecxz
arpl
add
fildll
cmp
add
imul
outsb
std
fisttps
lret
inc
lahf
into
jbe
mov
adc
pop
iret
lret
movsb
lods
mov
shlb
faddp
push
jecxz
dec
aad
mov
cwtl
js
push
add
shlb
jbe
imul
js
test
into
sub
mov
test
sbb
mov
lock
pop
xchg
mov
adc
in
sbb
jo
dec
fiaddl
gs
das
push
mov
sub
fneni(8087
pop
repz
adcl
aaa
ds
aas
sub
ret
cs
jo
cmp
mov
sub
in
and
cltd
adc
xor
xor
push
cwtl
pop
xor
lret
imul
subb
ret
js
mov
insl
dec
cltd
repz
in
inc
inc
fildll
movsl
repnz
sub
icebp
insb
les
jle
bound
or
nop
push
les
mov
xchg
lods
sbb
ja
pusha
hlt
clc
in
in
pop
push
ljmp
pushf
cmp
xor
sarl
sti
cmc
xchg
and
jg
std
out
int
sub
mov
push
lret
lds
pusha
add
inc
or
loopne
push
lods
sub
testl
fnstsw
adc
scas
lret
imul
mov
push
sub
stc
imul
mov
loope
adc
jl
mov
popl
in
adc
int
push
js
pop
push
mov
jnp
fdivl
lret
push
xchg
pop
inc
inc
sbb
pusha
div
lcall
inc
int
inc
idiv
hlt
sti
xchg
popa
dec
mov
xchg
ss
dec
adc
fwait
stos
add
nop
fidivl
or
arpl
and
lcall
std
xlat
sbb
jl
mov
xchg
out
mov
scas
adc
in
bound
mov
testb
imul
xor
cltd
adc
das
jp
pop
insl
aas
das
cmpsl
out
ret
or
push
inc
jnp
lret
or
mov
inc
sub
pop
out
cltd
loopne
jl
push
aaa
stos
lock
dec
dec
sahf
sub
inc
movsl
rolb
push
sti
push
xor
sbb
jp
addr16
inc
in
dec
ljmp
mov
es
add
xor
pop
jns
cmp
pop
test
add
hlt
jo
xchg
js
int
les
inc
lds
movsl
repnz
test
mov
mov
mov
call
andl
test
loopne
jecxz
push
mov
fldenv
or
xchg
sbb
aaa
pop
andl
mov
cwtl
lods
cmp
stos
mov
insb
sub
jl
out
loope
mov
das
out
push
or
lock
mov
pop
xchg
test
or
sbb
lock
push
inc
stos
fisubl
adc
sub
xor
ss
sub
pop
outsl
insl
sahf
push
out
sahf
push
cld
inc
adc
les
pop
arpl
xchg
add
in
dec
bound
or
adc
dec
bound
or
adc
cmp
and
pop
and
add
mov
popf
inc
add
jl
push
les
imul
ret
and
je
daa
dec
push
jne
cmp
mov
or
daa
imull
pop
addr16
jecxz
add
pop
mov
aam
xchg
xlat
mov
iret
nop
mov
adc
xchg
outsl
lret
lcall
and
or
nop
fnstcw
sub
lret
push
orb
les
inc
lahf
xor
and
inc
lea
test
hlt
call
pop
push
xor
push
mov
lea
push
pop
push
arpl
call
cmp
dec
inc
loop
cmp
nop
dec
push
ds
ds
sbbb
popf
leave
mov
mov
pop
lds
aaa
pop
xor
push
jl
dec
mov
outsb
loop
push
mov
imul
cmp
rcrb
xchg
out
pop
fs
gs
out
pop
jae
popa
mov
mov
mov
jns
test
ds
shl
or
sbb
inc
dec
notb
sti
rcll
jmp
xchg
lahf
inc
or
sbbl
sub
mov
jp
adc
jg
adc
sbb
and
sbb
xchg
stc
call
repz
out
fcoml
stos
mov
notl
notl
and
sub
out
pop
fiaddl
jge
sahf
jp
popa
insl
cmp
mov
shrb
fisubrl
sahf
std
xchg
jne
push
cld
sbb
or
jbe
jecxz
jae
mov
out
and
aam
cli
cmp
ss
cmpsl
cmp
xchg
clc
cmc
xchg
xor
lcall
into
xor
mov
and
cli
imul
js
sbb
push
sub
pop
data16
popa
mov
adc
xchg
les
xchg
mov
jb
mov
loopne
out
dec
cmp
inc
sub
sbb
inc
sub
dec
and
xor
adc
sbb
gs
mov
or
cmp
sub
inc
gs
in
arpl
cmpsl
jp
fdivl
mov
aaa
xor
test
dec
arpl
xor
jl
bound
ds
mov
push
js
lea
imul
inc
ficoms
pcmpeqw
mov
inc
aam
dec
mov
xor
xchg
lret
gs
inc
inc
icebp
repnz
jne
inc
cwtl
xlat
push
aad
imul
cmp
sbb
call
jno
sbb
sahf
loopne
ss
insl
mov
jb
iret
mov
xchg
jg
ss
xchg
in
add
int
outsb
movsl
std
dec
lea
dec
int
push
aaa
or
jl
adc
loopne
lret
nop
jb
adcb
push
xchg
dec
mov
xchg
or
jp
add
pushf
daa
xchg
les
movsb
adc
push
push
enter
cltd
adc
sub
pop
push
jnp
and
pop
xchg
insb
das
sbb
imul
pop
jo
imul
out
fcmovnu
adc
lahf
mov
call
imul
mov
cld
es
das
jl
mov
es
cltd
scas
xchg
dec
xchg
in
incl
mov
pop
mov
pushf
popa
rcrb
mov
in
or
clc
mov
sbb
pop
mov
ja
adc
push
mov
mulb
cmp
sub
and
mov
shl
dec
test
push
cwtl
jl
popa
xor
inc
inc
push
dec
inc
jl
movsl
xchg
xchg
loope
pop
dec
jl
sub
cmpsl
add
add
jmp
arpl
cmp
je
jb
cmp
imul
shll
add
test
into
jb
imul
cwtl
mov
inc
mov
pop
xor
mov
out
or
insl
inc
fisubrs
es
daa
scas
movsl
cmpsb
ret
mov
sarl
insb
jmp
aaa
inc
inc
iret
jnp
pusha
movsl
mov
cltd
outsb
fs
xchg
adc
mov
push
push
xlat
inc
xlat
pop
adc
xchg
mov
jmp
popf
push
sbb
inc
mov
mov
nop
jl
test
cmp
fdivl
fildll
jne
xor
pop
ret
mov
mov
scas
xchg
test
out
sub
inc
mov
movsl
movsl
mov
cmpsb
cmp
cmp
mov
leave
int
jae
inc
dec
inc
sub
push
jge
scas
mov
jle
lcall
jno
mov
xor
pushf
and
push
addr16
mov
dec
das
xorl
sub
sub
jo
shll
mov
loopne
xor
xlat
ror
call
xor
pushl
xchg
dec
inc
mov
push
cmp
aam
lcall
insb
in
data16
out
imul
or
mov
push
cli
out
das
pop
std
pop
je
fs
outsl
xor
xchg
or
pop
lahf
aam
icebp
push
dec
rcrl
ja
or
cwtl
mov
sub
mov
ljmp
mov
sbb
push
lods
or
and
inc
jnp
xchg
lds
addb
inc
mov
pushf
mov
sub
pop
cwtl
in
lret
adc
dec
movsb
movsl
jnp
mov
xchg
testl
push
mov
mov
xchg
cli
jne
sbb
out
leave
mov
mov
jge
pop
fdivs
jge
and
inc
ljmp
mov
dec
sti
or
lods
add
bound
jne
xlat
and
aaa
ficomps
cli
pop
pop
ss
add
fstpl
loopne
mov
pop
xor
jl
jns
jg
jae
lods
scas
sub
dec
xchg
sub
shll
sub
in
xor
rorl
push
dec
mov
and
ja
dec
fstpt
add
dec
pushf
cmpsb
jne
xchg
jl
je
jo
mov
outsb
testl
into
cmp
inc
loopne
sub
dec
test
imul
jl
fxch
fisubrs
pop
mov
lods
out
xchg
js
sub
cmp
push
das
ret
subb
xchg
mov
lods
mov
addl
outsl
imul
mov
sub
sbb
inc
sbb
ds
out
xchg
mov
into
lcall
add
aam
and
pop
mov
adc
test
dec
sub
test
xchg
rcrb
jne
into
fstpl
cli
insl
or
inc
mov
jp
pop
or
xor
dec
xchg
repnz
clc
enter
call
sbb
inc
push
add
cmp
lcall
and
leave
xchg
mov
push
pop
push
sub
enter
int3
mov
xor
addr16
sbb
call
ljmp
xor
test
and
negl
or
ret
int
icebp
add
jae
jb
mov
std
arpl
leave
jl
mov
jns
fmuls
or
aaa
das
repz
jge
or
in
push
xchg
aaa
outsb
jecxz
cli
adc
pop
pop
sub
in
scas
xor
mov
dec
inc
icebp
mov
cmp
daa
dec
loop
push
ja
rclb
push
aaa
xor
imul
daa
pop
xchg
fldcw
or
adcb
scas
aaa
sti
add
mov
xor
daa
in
lea
dec
ds
iret
pop
pop
and
mov
int
xor
xor
pmaxub
scas
cli
in
movsb
enter
fnsave
lea
scas
out
ret
adc
es
pop
enter
jg
mov
dec
mov
test
lock
or
mov
aam
push
orb
arpl
int3
adcl
leave
fprem1
in
ds
pusha
out
in
test
or
mov
xchg
push
lcall
cmp
in
popf
ja
jmp
mov
mov
shrb
inc
out
ret
dec
inc
pushf
push
push
xchg
mov
pop
hlt
lahf
mov
in
fiaddl
add
mov
cmp
inc
ror
outsb
dec
mov
fildl
test
and
test
dec
xchg
and
inc
mov
mov
pop
hlt
out
xchg
jecxz
addb
pop
push
cmp
cli
ret
xor
repnz
mov
mov
cmp
jo
push
jecxz
inc
sti
dec
outsl
enter
push
lcall
orl
into
push
cld
mov
lds
add
cmc
scas
inc
inc
loopne
xchg
in
ret
xor
add
pop
aad
cmp
or
js
fs
and
xchg
mov
inc
cmp
dec
mov
xor
call
lret
fisubrs
mov
out
cld
adc
fsubp
daa
fwait
and
iret
sub
mov
and
mov
outsb
aas
movsb
mov
push
or
imul
je
mov
outsb
das
iret
incl
lret
jne
sub
cmpsb
sub
sub
out
add
cmp
int3
pop
dec
xlat
data16
sbb
je
jbe
inc
js
clc
lret
inc
or
or
cwtl
or
adc
xor
mov
mov
mov
lret
sahf
dec
rorb
dec
clc
jmp
adc
adc
loop
in
es
pop
or
pop
aaa
jbe
fidivrl
enter
inc
fistpl
xor
aaa
popa
dec
sbb
mov
or
lcall
or
arpl
jecxz
xor
lock
pop
rcl
mov
sub
mov
mov
xchg
inc
fisttpll
lcall
jno
cmc
int
mov
push
testb
stos
add
xchg
ret
stos
dec
in
lcall
pop
sahf
mov
out
out
add
out
sub
push
mov
shr
push
in
cltd
adc
lea
inc
pop
inc
stos
je
sarb
popa
jns
jnp
mov
sarl
aad
push
lret
repz
xor
adc
repz
add
addr16
dec
push
xor
int
add
mov
xchg
shlb
sbbb
repnz
lret
adc
cmp
or
les
ja
mov
lods
outsb
test
js
ljmp
sti
jb
int
xchg
stc
xchg
cmpsl
lahf
cmp
mov
adc
mov
lods
push
adc
call
adc
nop
cmp
mov
testb
test
jns
gs
int3
push
jp
add
daa
mov
dec
arpl
orb
mov
mov
mov
mov
add
out
outsb
mov
ds
int3
or
push
jp
sbb
fcomps
pop
jle
sbb
in
jge
movsb
mov
pop
or
popf
jae
xchg
cld
mov
jge
in
mov
hlt
add
and
jne
inc
in
add
leave
sub
ja
mov
xchg
loopne
jge
out
ror
cmpsb
add
outsb
push
popa
xchg
fiadds
movsb
cs
jge
jb
das
into
xor
xchg
mov
loopne
lock
xor
mov
push
mov
adc
mov
je
pop
repnz
test
fsubrp
movsb
int
mov
jbe
pop
pop
xchg
frstor
popa
xchg
sub
lahf
fsubrs
lds
jns
mov
jbe
enter
sub
lcall
movsb
stos
das
clc
sub
pop
sbb
cs
mov
cmp
cwtl
xor
insl
xor
iret
shll
nop
add
push
sub
inc
jmp
cmc
js
dec
mov
popf
mov
fxch
outsl
repnz
mov
adcb
sub
pop
bnd
arpl
sti
inc
xor
shll
mov
dec
xchg
nop
addr16
js
push
adcb
int3
push
sub
and
adc
jle
popf
adc
add
xor
mov
mov
rolb
adc
stos
sbb
clc
and
adc
xor
add
jo
stc
cltd
jno
adc
lret
xor
add
ja
xor
adc
adc
cmp
pop
push
je
lods
jge
or
adc
loop
push
and
test
jns
test
adc
push
int3
cli
xchg
jge
sub
ss
loope
psrlq
rolb
sub
mov
and
push
js
shl
leave
in
sar
sbb
cmc
sbb
idivb
hlt
push
sbb
pop
inc
adc
out
std
inc
mov
jno
cmc
mov
imul
sbb
jle
cmp
inc
loopne
negl
xor
jge
jl
aam
or
int3
scas
fiaddl
jge
push
jnp
adc
mov
sbb
mov
enter
test
pop
or
ds
xlat
and
add
movb
pop
into
xor
fcoms
push
xor
lcall
inc
cwtl
push
jecxz
pop
mov
cld
inc
notl
mov
mov
xor
in
rol
adc
cmpsl
or
jle
mov
sub
pop
rorl
add
push
int
cmpsl
mov
aaa
testl
push
leave
add
or
stos
sbb
cmp
xchg
cmp
sbbl
shlb
cmp
cmc
inc
ljmp
negb
bound
or
pop
fisttpl
pop
xor
aad
mov
test
cmp
cli
push
pop
fwait
pop
nop
xor
lods
sbb
psubb
mov
stc
lods
imul
in
and
in
xorb
mov
push
lds
jg
jbe
push
repnz
mov
fnstenv
int3
fmull
imul
jo
mov
mov
mov
hlt
pop
pop
rclb
jp
mov
xchg
fldt
sbb
loope
xchg
push
cmp
lds
sbb
fidivs
jecxz
add
pop
jp
xor
or
popa
inc
out
push
dec
sub
mov
sbb
and
ljmp
pop
fdivr
shrl
or
or
and
jmp
adc
repz
adc
subl
notl
cmpb
sbb
fadds
inc
shll
xor
jbe
shrl
test
inc
dec
xchg
int
xchg
in
inc
fwait
outsb
lahf
mov
pusha
sbb
inc
pop
lret
or
lea
pusha
lock
mov
xchg
mov
in
push
scas
gs
jbe
mov
fisubrl
gs
jmp
arpl
lock
and
mov
xchg
jmp
push
test
add
or
loop
jp
call
clc
sbb
in
loope
testl
sti
pop
cltd
stc
insb
mov
pop
jbe
xchg
bound
xchg
test
adc
mov
push
xor
jg
movsb
push
rcll
adc
inc
xchg
cmp
jp
adc
adc
mov
jle
shll
clc
mov
lahf
or
andl
in
mov
sub
lret
xor
test
loop
cmp
inc
outsl
ret
pushf
sub
popa
jo
stc
jl
int
pop
movsb
add
mov
aas
das
xchg
mov
push
dec
ror
fisubrs
push
xor
jmp
mov
enter
lock
mov
pop
xor
adc
pop
and
fiaddl
sbb
pusha
or
xchg
fcomp
adc
and
scas
daa
mov
mov
loopne
and
int
jae
cmp
arpl
cld
cltd
aas
ss
push
mov
pop
test
pusha
mov
xor
pusha
in
jae
pusha
mov
jnp
aaa
add
push
mov
xchg
mov
fcomi
push
pusha
mov
jl
lea
gs
ja
or
loop,pn
gs
repz
xchg
std
adc
fwait
mov
jle
xchg
add
in
lock
jae
mov
mov
xchg
jno
push
fbstp
sbb
xchg
enter
clc
xchg
push
cwtl
jnp
lods
es
mov
push
sub
ret
mov
ds
xchg
fdivr
and
mov
xchg
jge
lock
idivb
nop
mov
dec
cmp
pop
inc
ret
pop
or
fidivl
sbb
inc
sub
repz
jne
push
push
mov
mov
lods
xchg
jb
pop
mov
mov
push
add
xor
xchg
cltd
inc
repnz
mov
mov
mov
setge
daa
test
je
sar
mov
ret
mov
mov
jne
pop
ret
ret
adc
call
in
dec
mull
out
mov
cmp
sub
clc
pop
push
push
test
aad
sbb
or
cwtl
lods
add
and
out
std
icebp
cs
pop
fcmovb
pusha
xor
shrl
loopne
imul
add
add
sub
push
das
inc
add
mov
pop
or
pop
or
jno
das
mov
in
mov
cld
movsb
shrl
inc
adc
jne
ret
lcall
sbb
mov
inc
les
adc
dec
jo
dec
mov
fwait
sbb
fcmovu
pop
add
xlat
add
inc
push
stc
jbe
cmp
mov
sarb
roll
pop
jmp
adc
fstp
fistpl
loope
add
es
jo
movsl
fwait
jnp
in
aam
lea
pop
lods
cwtl
sub
inc
push
mov
sub
xchg
insl
std
mov
jmp
bound
enter
repz
lea
push
mov
loope
inc
fwait
cli
in
aas
xor
cmp
push
push
enter
clc
jb
std
pop
pop
popf
stos
add
shll
loopne
push
fdivp
loop
dec
dec
addb
in
je
fmull
push
push
je
adc
add
jb
mov
or
fwait
sahf
dec
movsb
imul
sbbb
jle
icebp
clc
and
ldmxcsr
lret
sub
xchg
fwait
js
pop
cmp
xchg
adcb
add
popa
push
or
mov
jp
aam
jle
arpl
dec
cwtd
push
push
nop
dec
insb
lods
add
out
loopne
xchg
pop
xchg
pop
pop
loop
xor
jl
xchg
enter
dec
jg
js
jbe
mov
fsubr
sub
jno
insb
push
dec
enter
xchg
das
push
in
movsb
sub
cmpb
fsubrs
mov
cmp
dec
hlt
pusha
add
jg
jmp
sarb
enter
lock
pop
push
xor
fcompl
aaa
mov
and
int
mov
mov
dec
bound
mov
sha1nexte
mov
inc
jae
sbb
test
inc
sar
or
out
sub
push
dec
pushf
cwtl
in
mov
mov
push
imul
cltd
in
cmp
pop
repnz
xor
and
mov
stos
jo
pop
dec
stos
loop
out
dec
push
cmpsl
jge
jnp
jne
ret
jl
xchg
repz
xchg
dec
xor
pushf
test
pop
sub
jl
and
fisttpl
sbb
mov
adc
icebp
pushf
or
xor
mov
mov
idivb
pop
cmpsl
outsl
inc
mov
jg
test
fsubs
insl
fsubp
je
sub
cmpsb
cli
sbb
scas
cmp
leave
mov
sub
cmpsb
xor
mov
pusha
sbb
pop
loope
loope
stos
dec
mov
shlb
dec
jecxz
fwait
in
es
outsl
loope
adc
call
add
sub
mov
in
mov
aas
movsl
inc
ljmp
jns
cmp
mov
imul
aaa
dec
cmp
adc
push
hlt
outsl
xor
jge
fidivrl
cli
cmpsb
ja
pop
jmp
ja
nop
push
in
rclb
adc
mov
pop
data16
popf
adc
add
inc
into
inc
push
jge
je
and
fsubrl
frndint
xchg
adc
xchg
mov
mov
xor
dec
fistpll
sbb
cmp
out
scas
xor
stc
sub
lea
fwait
jne
lods
sub
cli
mov
lds
sbbb
mov
sti
addr16
add
cld
cwtl
mov
cli
lds
or
mov
sahf
lods
sbb
push
jge
popf
mov
push
cmp
and
push
int3
roll
mov
inc
add
inc
cmpsb
subl
pushf
stc
cmp
shl
fwait
mov
ljmp
div
loop
loop
out
push
or
cmpl
sbb
gs
add
fwait
cmp
cwtl
xor
mov
scas
sub
push
ss
push
xor
mov
sti
xchg
stos
insl
inc
xor
mov
aaa
ret
jne
mov
sub
rolb
jg
xchg
jno
xor
jae
iret
xor
and
pop
cs
fwait
test
pop
and
mov
jb
jne
xchg
push
ss
es
movsl
test
shlb
arpl
mov
cmp
loope
push
sti
sub
ret
cwtl
out
pop
cmp
or
mov
seta
pop
pop
test
adc
call
repnz
testl
dec
in
mov
ljmp
out
sbb
adc
push
test
mov
lds
and
sub
call
mov
dec
lcall
mov
mov
xor
xor
out
data16
adc
cmc
cmp
push
ja
sub
and
mov
jo
out
cwtl
cmc
jl
cmp
enter
rolb
sbb
fadds
das
data16
dec
call
lock
imul
dec
mov
test
push
xchg
cmp
cli
dec
paddusb
shr
sbb
mov
and
insl
xor
xor
xchg
inc
repnz
jecxz
js
adc
outsb
mov
popa
add
fdiv
jne
mov
jno
aam
xchg
cmp
mov
icebp
test
push
cmpsl
ljmp
pusha
ret
test
pop
lcall
adc
scas
dec
pop
fsub
pop
push
add
push
mov
dec
je
movl
jnp
xor
cmc
fbstp
adc
or
aaa
pop
sub
stos
xchg
mov
sysret
push
out
andb
call
push
in
ja
pop
and
in
and
push
dec
clc
ret
scas
mov
addr16
aaa
sahf
lods
in
fwait
push
dec
fistl
pop
je
mov
stos
mov
cmp
sbb
cmp
inc
pop
xchg
stos
iret
fs
pop
sbb
jmp
fcompl
jl
dec
dec
adc
lods
xchg
and
in
add
add
subl
lret
cmp
fsub
inc
jl
jecxz
imul
ja
xchg
xor
add
out
inc
add
mov
shll
pop
add
xchg
addr16
jg
shrl
addr16
dec
cmp
push
xchg
outsl
push
ficomps
xlat
call
daa
fwait
pop
out
or
mov
jae
bound
dec
jmp
test
sbb
ja
fcompp
cmp
dec
mov
call
sub
mov
dec
inc
test
mov
repz
and
daa
rorl
push
fs
movsb
push
push
ljmp
add
ja
mov
push
or
es
pop
jns
mov
ljmp
xor
sbb
or
add
fs
mov
mov
mov
sar
cmpsl
stos
mov
pop
adc
jg
test
xor
shlb
jecxz
mov
out
subb
inc
add
xchg
das
jecxz
jns
lods
stc
bound
mov
aas
lahf
jle
shrl
les
out
xchg
pop
xchg
shlw
sub
outsl
mov
js
ret
push
adc
adc
inc
int
add
movsb
ja
mov
mov
test
int3
xor
and
std
sbb
shlb
add
into
jge
xchg
cltd
shrb
inc
lods
fisttps
in
add
jl
add
jae
pop
mov
mov
mov
ret
push
in
imull
mov
lret
das
push
mov
mov
or
enter
roll
dec
xchg
insl
decb
xor
and
push
sbb
enter
mov
stc
ja
rol
cli
out
jns
lcall
out
mov
cmp
sbb
in
mov
sar
outsl
aam
mov
bound
mov
addr16
rclb
ljmp
shll
push
daa
cmp
in
or
xchg
subl
enter
arpl
xor
or
adc
inc
inc
jbe
mov
inc
aas
incb
sbb
and
int
add
jl
pop
push
mov
inc
push
das
jmp
ret
sub
dec
lahf
cwtl
shl
mov
movsl
sti
aas
mov
jl
lcall
fwait
dec
mov
test
cmp
ret
sub
cwtl
adc
out
inc
adc
adc
push
les
fidivs
cmp
imul
xor
jg
aam
fs
sahf
mov
in
lea
add
loop
arpl
int3
or
sub
repnz
pop
pop
ret
fbld
mov
sub
test
call
gs
xor
fwait
mov
push
sbb
xchg
pop
or
push
into
xor
inc
pop
pop
push
jae
mov
adc
xchg
dec
sub
enter
push
push
stc
sbb
jecxz
jbe
inc
inc
mov
mov
sub
or
aad
or
int
lds
adc
scas
mov
pop
cwtl
ja
leave
jbe
xchg
mov
or
lods
jmp
pop
cli
cld
jl
imul
push
push
adc
mov
sub
enter
dec
push
in
push
dec
mov
dec
mov
sahf
adc
lahf
xor
mov
ret
xchg
or
movsb
test
xor
jnp
or
sub
call
icebp
sbb
popf
jae
fpatan
or
xchg
jmp
clc
push
inc
bound
popf
int
imul
add
fs
sbbl
sub
push
outsl
xor
daa
xor
xlat
inc
sahf
xor
out
imul
cmp
dec
cmpl
push
ja
call
fcoml
in
or
and
jg
ds
sbb
mov
lods
in
ja
mov
scas
xchg
xchg
mov
enter
mov
filds
jle
inc
je
out
mov
lahf
outsb
xor
push
push
mov
mov
push
lahf
mov
xchg
and
cwtl
push
test
mov
xor
inc
enter
xor
out
mov
add
dec
je
xchg
dec
lret
adc
sub
dec
sarb
movsl
xchg
jno
push
loope
lret
stc
mul
imul
aas
imul
cmp
std
mov
cltd
sahf
or
std
hlt
cmp
xor
in
scas
fwait
jb
stos
shlb
mov
push
xor
jne
xor
fwait
or
call
mov
daa
sbb
addr16
aas
lret
mov
repnz
inc
pop
pop
leave
out
sarl
scas
imul
mov
adc
add
aad
dec
lret
pop
pushl
insl
les
inc
sub
out
mov
cmpsl
dec
jne
inc
xchg
movsb
sub
mov
jbe
push
jg
jb
sbb
jge
scas
cmp
xor
push
pop
mov
jbe
lret
in
insl
mov
ror
clc
mov
jecxz
fdivp
sti
daa
shlb
jmp
shrl
fists
xchg
mov
and
inc
je
je
test
in
or
cmpsb
mov
mov
lock
mov
jmp
mov
jae
std
adc
dec
xchg
popf
imulb
cmpsb
sub
and
push
mov
sbb
xchg
popf
je
std
inc
fisubl
gs
xchg
popa
stc
aaa
mov
pusha
jmp
push
sbb
add
fnstenv
or
out
stos
test
filds
popl
push
insb
adc
daa
leave
sub
and
push
repz
imul
inc
mov
jmp
sub
bound
clc
cld
lock
outsl
js
cmp
or
imul
adc
loop
add
mov
in
lods
and
scas
cmpl
fwait
adc
cwtl
lds
xor
scas
hlt
cmp
pop
mov
mov
xor
mov
scas
jmp
dec
dec
aad
ja
mov
loop
pop
dec
pop
psubusw
or
pop
dec
movsb
xchg
xchg
inc
inc
fiadds
sub
xor
out
sbb
dec
xor
popa
sub
shl
dec
xchg
add
aas
shrb
imul
add
pop
sbb
sbb
cwtl
sbb
out
in
mull
fdivrl
aad
mov
or
pop
dec
adc
int
mov
pop
outsl
scas
lret
movsl
aas
add
fcomps
push
ret
lahf
sgdtl
xchg
mov
cmp
fisttps
ds
xor
pop
and
flds
xlat
loope
clc
jns
sub
aas
or
cmpsl
and
pop
testl
jbe
shll
and
cmp
and
mov
xchg
xor
jle
dec
pop
cmp
dec
or
sti
xchg
xchg
add
fwait
cmp
xchg
push
xor
jbe
arpl
adc
imul
sub
xchg
mov
dec
loopne
dec
movsl
pop
int
jmp
inc
sbb
lret
daa
cmp
pop
dec
jle
push
inc
adc
mov
adc
add
push
mov
pop
fwait
xchg
xor
jl
sar
cld
lret
aas
lahf
movsb
pop
pushf
lahf
sbb
test
in
inc
pop
sub
fsubrl
pop
dec
and
es
xchg
psubusw
and
xor
mov
iret
mov
sub
repz
fwait
jno
adc
or
xor
pop
je
mov
mov
inc
pop
jge
pop
test
sub
cli
or
push
cld
clc
call
mov
inc
jp
or
cmpsb
push
sbb
xchg
cmpsl
les
pop
sbb
cld
ror
adc
clc
push
outsb
shrb
arpl
push
mov
mov
jo
xor
pop
dec
push
lahf
jge
popf
shll
and
ret
in
fmull
and
xchg
cmp
test
rcl
fsub
test
mov
pop
lmsw
ja
push
add
jmp
divl
mov
stos
cmc
iret
jle
lahf
in
scas
add
fwait
lret
icebp
sahf
cmp
enter
test
addr16
aad
push
and
enter
dec
scas
add
sub
shrb
imul
mov
shrb
or
lock
inc
roll
mov
add
mov
test
push
dec
mov
lret
add
xor
repnz
or
movsb
inc
testb
jb
cmp
push
test
dec
and
inc
xor
enter
ljmp
stos
in
and
push
stos
cmpsl
jge
imul
pop
or
mov
cmp
push
js
mov
adcl
cmp
cli
jae
insl
pop
in
std
or
fisubrl
dec
fwait
clc
xor
dec
ror
add
mov
cld
mov
test
std
popf
push
je
cmp
mov
push
lea
adc
sub
xchg
xlat
outsb
fldt
lahf
das
mov
mov
inc
jmp
rorb
cli
jns
xlat
mov
and
xor
sbb
ss
push
jg
xchg
dec
mov
xlat
rorl
mov
push
and
stos
sub
mov
fidivl
movl
mov
fisttps
js
pop
adc
out
popf
xchg
nop
nop
ss
nop
add
addl
rcl
add
jne
les
push
sahf
cltd
jb
in
sub
jg
mov
and
add
hlt
sub
roll
cmp
pop
imul
call
inc
ds
adc
insl
adcb
orl
inc
fidivl
fwait
mov
icebp
outsb
outsl
sti
add
sub
xor
jo
aas
sub
or
jne
xor
push
cmpsl
cmc
and
pop
pushf
pop
in
lahf
into
cmp
or
dec
repz
ja
add
mov
insb
aam
std
das
cmc
mov
icebp
insb
push
mov
jnp
rcl
jle
icebp
sub
or
shll
xor
mov
imul
sbb
inc
dec
stos
push
jb
in
pushf
pop
mov
push
sbb
mov
es
mov
mov
lds
dec
fs
sbb
add
jge
push
insl
add
adc
imul
pusha
xor
int
or
sbb
popa
out
push
jmp
push
mov
inc
add
nop
idivl
mov
das
mov
jle
cld
shlb
outsl
pop
dec
jnp
xchg
jae
faddl
or
inc
cwtl
aaa
jns
repz
xor
push
popa
cmpsb
fs
pop
jg
fnsave
in
lea
in
in
push
aam
push
push
cmp
sahf
or
shlb
gs
and
push
in
js
jae
push
cwtl
mov
movsl
mov
lock
add
pop
sub
ljmp
out
push
inc
fs
mov
adc
popa
dec
fcomps
or
push
sub
push
scas
rclb
ss
mov
inc
mov
mov
inc
sti
icebp
test
in
dec
add
cltd
ret
inc
adc
sub
jo
les
les
mov
icebp
jb
int
dec
dec
ret
sub
mov
cli
adc
in
bound
add
sti
rcrl
add
push
js
dec
notl
sub
movsl
rcrl
mov
js
movd
pop
mov
test
loopne
ds
xor
mov
adc
pop
xchg
fidivl
pusha
mov
pop
scas
cmp
adc
xor
adcb
repz
outsl
mov
or
lods
fcoms
inc
inc
xor
repnz
adc
pop
inc
inc
leave
stos
mov
mov
andb
dec
rcr
movsl
test
mov
lret
jle
cmc
inc
mov
xchg
loop
cmp
jl
add
jbe
xor
call
mov
sbb
dec
and
sbb
sub
arpl
fsubrp
and
add
pop
mov
pushf
fcmove
jg
jg
push
gs
pop
andb
cmp
sub
jbe
dec
inc
mov
jp
int
das
sub
insb
push
pop
insb
cmp
dec
and
in
or
mov
mov
jmp
mov
test
lock
xchg
push
les
clc
rorl
push
adc
cmp
inc
rorb
push
stos
inc
icebp
test
or
mov
or
sbb
lret
mov
jecxz
mov
inc
lock
aad
call
and
or
popf
loopne
pop
jg
inc
ljmp
jg
xchg
push
rcll
sub
cmp
popf
xor
ret
mov
jno
fwait
xchg
sbb
outsl
fs
cmp
dec
sub
cmp
ficoms
cld
faddl
sbb
pop
mov
xchg
mov
xchg
sub
inc
pop
divl
into
pop
push
idivb
in
cmpsl
jo
scas
imul
xchg
cmpsb
aad
mov
xor
jge
sub
stos
jmp
jecxz
decl
test
lods
repnz
lods
pop
and
ret
int
fldt
inc
adc
push
addb
cmp
rcrb
inc
divl
jmp
stc
pop
push
ret
jb
inc
in
and
mov
push
sbbl
lret
mov
fs
into
mov
ja
and
lahf
push
subl
xor
das
add
pop
pavgw
lds
loop
pop
inc
and
sbb
gs
mov
or
cmpsb
inc
jbe
mov
dec
and
xor
and
sbb
add
mov
cwtl
push
pop
mov
popa
mov
hlt
or
xchg
mov
in
fdivl
dec
push
push
or
jb
je
mov
adc
jo
lret
into
pop
mov
in
out
in
pop
sbb
test
mov
jle
xchg
adc
cmpsb
ret
clc
push
and
xor
imul
insb
dec
cmp
sub
scas
arpl
pop
addps
mov
jl
mov
imul
cs
xchg
clc
je
mov
push
movsb
lea
push
lcall
jp
cmp
xchg
lret
cmp
enter
lret
push
pop
pop
jno
aam
in
xor
iret
xchg
jge
in
pop
push
div
lret
xlat
xorl
movsb
mov
push
add
mov
sarb
outsl
test
mov
mov
sub
std
dec
shll
mov
inc
and
in
jbe
mov
out
pop
pop
inc
pusha
mov
inc
lret
dec
rcll
xchg
jns
push
mov
mov
das
out
sbb
mov
mov
mov
fs
xor
pop
push
xor
mov
popf
mov
pop
pop
xchg
xchg
jecxz
gs
sbb
cmp
adc
jne
cwtl
sub
sub
mov
jb
mov
stos
sbb
mov
dec
dec
xor
mov
mov
add
je
jecxz
ret
add
xchg
pop
mov
scas
rcll
icebp
enter
sub
push
aas
cmpsb
mov
inc
in
test
mov
in
clc
jo
in
mov
sbb
int3
jge
mov
dec
es
cmpsl
push
xlat
mov
hlt
fwait
jae
aam
and
cmp
push
cmc
ja
jo
add
or
aad
daa
popa
add
les
out
dec
in
sbb
stos
in
lock
push
mov
xor
sbb
pop
mov
push
popf
into
ds
jge
push
cmpl
push
or
xchg
inc
imul
movb
scas
add
sub
aad
mov
stc
jnp
mov
mov
inc
xchg
iret
jnp
test
xchg
adc
ljmp
imul
pop
push
jg
pop
mov
jo
adc
and
clc
or
xor
push
jno
dec
mov
push
cmp
mov
js
dec
aam
mov
out
lea
pop
mov
push
shlb
clc
cmp
xchg
loopne
pop
fnsave
jl
add
sbb
inc
jbe
lcall
stos
or
push
sbb
lods
push
jge
adc
inc
or
dec
mov
leave
leave
mov
in
push
cmpsl
xlat
mov
mov
cmpl
ds
loop
dec
arpl
jge
or
xor
dec
adc
mov
in
xor
inc
xchg
imul
addr16
fbld
insl
lock
aaa
daa
fiaddl
add
jge
xchg
ds
inc
in
push
add
sbb
notb
test
add
add
dec
add
in
cmpl
cmpb
sbb
push
jg
ljmp
rcll
cmp
lcall
in
xlat
inc
test
mov
movsl
ljmp
cltd
add
cmp
xor
roll
ss
fdivp
test
cmpsl
adc
and
cmp
pop
icebp
xchg
dec
pop
mov
push
xchg
push
push
stos
insb
test
sarl
sahf
mov
sbb
daa
fsubr
xlat
movsb
sbb
mov
pop
xchg
add
aaa
and
adc
lods
call
or
cmp
sbb
repz
aaa
adc
cmpsl
test
dec
xor
cmpsl
stc
dec
outsb
cli
jp
or
ret
mov
cmp
mov
and
test
in
mov
add
cmp
mov
jb
or
sbb
jae
shlb
sub
js
ja
add
inc
leave
lea
mov
fstpl
fdivl
jp
fists
in
jge
adcl
or
insl
cmp
mov
cld
subl
popa
cmp
ds
adc
cwtl
push
mov
sahf
push
mov
sbb
fsubl
pop
mov
xor
sub
mov
mov
sbb
or
addb
icebp
dec
xor
pop
stos
ljmp
shll
xlat
data16
sub
push
repz
jge
popa
inc
add
lcall
mov
loopne
cli
inc
cmp
repnz
add
push
sub
cs
mov
and
sbb
lods
cmp
test
lret
popf
loopne
and
pop
xchg
dec
scas
cmp
test
hlt
ret
adc
stos
dec
pop
xchg
into
push
fs
and
pop
inc
shr
scas
gs
dec
jbe
jns
add
xchg
pop
xchg
add
jl
xor
in
nop
mov
sbb
out
xchg
adc
pop
inc
jb
xor
test
jno
cs
movsb
mov
sub
and
mov
daa
ds
mov
pop
ret
and
mov
adc
pushf
test
jo
arpl
leave
pop
dec
lods
sbb
jle
stos
popf
out
in
xor
xchg
pop
bound
and
lcall
jo
or
insl
jno
or
call
jmp
mov
xchg
cmc
test
mov
push
or
outsl
std
fs
inc
call
outsl
test
jle
pop
or
or
mov
test
daa
cmc
cmpl
jnp
mov
sub
subl
inc
pop
mov
dec
push
fdivrl
inc
pushf
adcb
inc
add
push
pushf
lds
test
frstor
out
rcrb
andb
loop
mov
xor
je
jecxz
mov
push
test
cmpsb
pop
sub
dec
in
ror
sub
clc
call
adc
frstor
aam
push
cmpsb
fwait
jl
popf
ljmp
jecxz
jb
push
fwait
popf
cmpsb
cli
add
rolb
xor
int3
out
gs
push
fisubrs
fmull
mov
sar
mov
mov
ret
inc
push
sub
pop
xchg
aad
test
xlat
jno
cs
popf
andb
mov
pusha
push
loope
xor
xchg
jo
adc
in
inc
out
into
lock
pand
mov
outsl
or
cli
mov
and
dec
adc
sbb
repz
ret
mov
fildl
in
or
stos
xor
inc
stc
add
cmp
rolb
pushf
mov
pushf
nop
sub
jno
ret
jle
adc
or
cmp
fisttps
lcall
add
pop
or
cwtl
cltd
lods
mov
mov
sbb
or
push
test
xchg
jl
cmp
jns
add
push
add
mov
cmc
rcr
lret
adc
cwtl
js
cmc
add
mov
jmp
sahf
and
jge
lods
jo
sahf
mov
xchg
imul
stc
mov
push
rorb
shlb
sahf
jecxz
jnp
idivl
and
mov
fwait
or
loop
out
add
add
lds
pop
imul
adc
dec
dec
test
mov
ja
lock
sbb
popa
je
fs
lods
movsl
push
cli
imul
pop
push
mov
dec
or
sti
push
sarb
or
dec
dec
mov
cmp
xorb
popa
xor
and
pop
sbb
aam
mov
adc
lret
or
mov
add
jnp
push
mov
pop
fadd
loopne
pop
aas
mov
mov
insl
add
sar
sbb
and
inc
sub
outsl
out
inc
into
xor
loop
jae
xor
aad
aad
mov
rcrl
add
jo
lret
lahf
lods
dec
stos
xor
stos
popa
addr16
fisttps
notl
call
inc
addr16
das
adc
imul
lock
mov
fcmovu
clc
xor
mov
imul
jecxz
mov
jno
imul
test
mov
push
sarb
insb
lahf
test
mov
in
cmp
aad
xchg
jp
in
rclb
gs
push
add
jmp
lcall
dec
inc
or
mov
subb
rcrl
cli
ret
xchg
movsb
cmpsb
dec
mov
shll
mov
push
pop
stos
cs
jnp
mov
sti
mov
dec
pop
jecxz
movsb
outsb
js
or
cmp
out
insl
dec
xchg
dec
xchg
pop
fs
jg
aas
xlat
push
shll
ret
jb
cmpsl
xchg
dec
loope
fidivs
xchg
ret
mov
xchg
jo
cwtl
dec
adc
push
push
lods
aad
mov
enter
cmp
call
xchg
rcll
push
rcr
push
out
ficoms
in
gs
mov
jnp
aaa
notb
lods
fisttpl
aad
out
pop
test
ret
testb
test
or
sbb
pushf
sbb
xchg
inc
dec
dec
mov
mov
adc
in
sub
lds
sub
sbb
das
cmp
add
inc
in
mov
adc
repnz
push
and
pop
push
xor
sbb
ss
out
jno
outsl
add
or
inc
mov
aas
outsl
fucompp
or
adc
cmp
xchg
cs
pushf
sub
dec
mov
cld
aas
xchg
nop
sub
lods
hlt
in
xchg
pop
fidivl
sub
mov
pusha
scas
xchg
jns
sbb
lock
fstps
mull
scas
jne
pop
push
mov
cmp
js
or
cmp
mov
imul
mov
adc
push
xchg
insl
dec
xlat
sbb
fsubrl
jb
cmc
dec
loop
fdivrs
sbbl
pop
or
inc
fdivrl
popa
ja
mov
bswap
sbb
cmp
sub
pop
mov
mov
mov
and
inc
mov
pop
stc
incb
sub
gs
sti
inc
dec
sbb
imul
pop
mov
pop
inc
and
leave
lods
pop
hlt
in
pop
test
push
jecxz
pop
adc
jmp
incb
cmp
ja
loope
stc
mov
xor
enter
les
add
mov
ja
pop
inc
ret
rolb
lods
fdivs
fwait
mov
out
in
stc
sub
mov
or
lock
mov
mov
addr16
es
sbb
add
fs
push
lret
or
pop
fwait
adc
cmp
das
out
popa
push
orb
xchg
pop
sbb
das
mov
mov
pop
xchg
lret
loopne
in
scas
leave
xor
test
cmp
cltd
cs
and
repnz
shr
ficompl
lret
sbb
adc
mov
sub
jno
pop
into
inc
pop
loop
pop
push
lods
repnz
insb
or
gs
into
sbb
sahf
nop
repz
adc
in
cwtl
lods
leave
call
int
daa
lock
pop
pushf
mov
std
mov
fs
push
jo
int3
nop
jnp
add
push
fwait
dec
stos
inc
dec
xchg
jmp
iret
into
rclb
je
cld
bt
iret
subb
test
jnp
or
pop
test
inc
fcomps
dec
jge
lds
outsl
adc
lret
or
in
cmp
repnz
xchg
nop
out
rolb
shrb
iret
or
adc
leave
mov
repz
ss
xchg
push
inc
mov
sahf
xchg
punpcklwd
and
xor
aam
in
popf
add
mov
lret
adc
pop
cmc
mov
cmp
dec
push
xor
push
lret
cmc
movsl
pop
sub
ret
outsb
mov
mov
mov
mov
cmp
mov
push
xor
xchg
mov
dec
pop
push
adc
push
mov
add
aaa
ffreep
xor
imul
mov
enter
test
divb
mov
lods
push
outsb
mov
jmp
fmull
ss
pushf
pop
mov
lods
and
popf
pop
rorb
xor
repnz
ret
add
clc
push
fs
adc
xlat
setnp
jno
int3
xor
pop
and
mov
cli
push
dec
es
outsb
push
jge
sbb
jae
push
loop
in
inc
and
sub
insl
test
inc
cmp
add
repz
and
xor
push
inc
or
cli
cld
or
sbb
jle
jmp
andb
mov
shl
jo
and
mov
mov
lds
or
lods
insl
adc
loop
sarb
nop
les
cmpsb
inc
lret
stos
sbb
loop
fs
divl
push
inc
inc
in
sub
lods
xor
sbb
neg
outsl
and
pop
jmp
jecxz
adc
leave
sbb
jae
dec
movsl
and
mov
cmc
xlat
bound
aam
scas
inc
imul
sbb
popf
cli
xchg
je
ret
cmp
cmpsl
pop
xchg
jp
sub
push
xor
pop
mov
jmp
leave
inc
inc
inc
scas
adc
and
popa
repnz
lcall
in
adc
push
in
and
or
push
inc
scas
adc
xor
sbb
stc
cmp
sbb
inc
cltd
sbb
jne
test
pop
sahf
jmp
dec
jecxz
jmp
mov
xchg
lods
lds
rcll
inc
fisubs
and
pop
xchg
pop
cmc
xchg
test
sti
add
dec
pop
sbb
fcmovb
insb
sub
mov
xor
pop
xlat
aas
add
xor
sbb
or
push
mov
pop
jl
inc
jbe
jle
xchg
lds
xchg
push
icebp
stos
aas
xchg
pop
xor
sub
cs
shlb
pop
imul
lea
ljmp
rol
leave
outsb
orl
mov
test
xchg
jno
mov
xchg
fs
push
push
js
jmp
and
lret
sbb
verr
sub
push
or
pop
lahf
int
and
dec
mov
or
pop
sti
fisttps
cmp
repz
cmp
cltd
test
pop
cld
fisubs
hlt
pop
cmpsl
adc
pop
jnp
lcall
cmpsl
pushf
mov
sti
aad
les
pop
scas
or
aam
xor
dec
push
aas
inc
sbb
xchg
out
jno
adc
push
push
fistpl
mov
sbb
ljmp
pop
push
inc
mov
pop
adc
movsl
xchg
fwait
add
or
ficoms
outsl
data16
cmp
out
ret
xchg
lods
and
mov
cmp
pushf
arpl
loop
pop
mov
jne
aaa
mov
pop
in
lret
je
inc
mov
add
movsb
push
scas
dec
jl
jmp
dec
hsubps
in
mov
mov
mov
sub
scas
xchg
push
mov
je
mov
movsl
xor
loop
push
popa
aam
pop
mov
xchg
into
push
rcr
jae
dec
xchg
cwtl
lahf
leave
cmpb
mov
cwtl
push
jl
ds
or
nop
mov
ss
cld
lcall
and
stc
inc
mov
push
cmp
xlat
xchg
into
insb
jnp
and
scas
sbb
dec
push
inc
cmp
cmpsl
pop
stos
outsl
data16
sub
movsb
mov
addl
cmp
mov
dec
xor
push
test
cmp
mov
fwait
sahf
mov
add
dec
fsubs
cwtl
mov
cmp
pop
sub
jne
xchg
adc
in
inc
jno
jno
pop
cmp
add
outsl
sub
cmc
subb
daa
adc
out
jmp
mov
stos
stos
cmp
jno
mov
roll
fisubrl
cmpsb
aas
iret
push
roll
imul
jb
push
pop
dec
jne
add
repz
sbb
lahf
lock
cmp
xchg
sbb
dec
jge
repz
add
int3
push
pop
xor
popa
movsl
cwtl
pop
jmp
and
outsb
outsl
push
add
sbb
into
sahf
test
out
dec
addr16
cli
add
aas
enter
pop
pop
and
lret
dec
daa
pushf
dec
push
in
fwait
movsl
repz
bound
and
aad
in
outsb
jne
ret
adc
loope,pn
push
push
in
pop
add
fcoml
mov
push
nop
xor
push
mov
inc
pop
rcr
jo
mov
cmp
les
inc
xchg
std
call
pop
mov
jl
xchg
loop
pop
xchg
decl
dec
inc
mov
lock
xchg
xchg
inc
sub
xor
add
sub
xchg
hlt
mov
fstl
push
jb
and
data16
sbb
fiadds
cmp
inc
std
jecxz
jno
cmc
mov
fmuls
and
out
fdivrs
es
mov
pop
pop
insl
pop
mov
pusha
inc
mov
push
in
push
lahf
test
movsl
ljmp
mov
sbb
outsl
mov
lret
cwtl
sbb
dec
xchg
test
test
and
mov
adc
mov
jmp
mov
in
das
fwait
test
push
in
icebp
jecxz
movsb
pop
dec
movsb
cmp
push
and
xchg
adc
dec
enter
ja
fstpl
push
cmpsb
out
add
mov
and
aad
adc
divl
jnp
fdivrs
lret
pop
xchg
jl
bound
pop
enter
das
push
xor
mov
jbe
xor
sbb
jle
ljmp
mov
out
sbb
xchg
mov
add
xor
adcb
cltd
clc
xchg
sbb
lcall
fcmovbe
xchg
xchg
push
pop
ss
mov
incl
iret
aad
aam
fdivrp
cmp
push
loope
in
jmp
inc
bound
sbb
xchg
das
xchg
dec
pop
test
in
inc
imulb
sbb
lds
push
sbb
iret
pushf
sub
or
inc
mov
imull
fwait
ret
popa
dec
mov
xor
inc
outsl
jp
pushf
mov
xchg
cmp
cmp
test
ds
outsl
mov
cmpsl
and
mov
in
mov
adc
mov
shlb
nop
adc
xor
adc
loopne
xor
fwait
push
dec
scas
lret
fiadds
or
cmp
mul
icebp
addr16
add
out
xchg
dec
clc
call
icebp
mov
and
mov
dec
stos
gs
mov
and
inc
mov
xchg
mov
and
call
jecxz
sbb
mov
mov
in
jnp
sub
into
jno
mov
int3
lods
inc
push
lock
ss
ret
dec
inc
aaa
hlt
leave
mov
mov
icebp
push
arpl
outsb
xchg
lret
push
xchg
in
stos
inc
gs
sbb
adc
rorl
ds
and
arpl
imul
xchg
negl
mul
jo
sub
push
or
cld
sub
pusha
outsl
or
in
out
std
mov
cmp
pushf
imul
dec
mov
in
dec
rolb
in
lods
push
inc
fisubl
negl
in
push
xchg
std
mov
push
dec
cmp
add
cmp
inc
jnp
ret
fiaddl
daa
lcall
fsubrl
lea
push
sti
std
ljmp
jg
ja
or
int3
in
outsl
int3
push
fimull
lds
test
outsb
leave
ret
pop
add
mov
hlt
in
xor
imul
dec
rclb
push
sub
stos
lea
jne
adc
push
xchg
or
out
stc
test
mov
mov
in
or
loope
cmp
xlat
lock
sbb
les
cwtl
or
dec
or
in
dec
lcall
mov
jns
push
xchg
ds
lcall
sub
and
pop
and
fcomps
and
pop
sub
add
hlt
mov
iret
inc
sbb
xchg
xor
push
jb
pop
addb
in
aam
push
fidivrs
pop
lret
mov
cmpsb
dec
addr16
test
sti
dec
pop
dec
filds
lds
pop
pop
adc
jecxz
lods
aad
lods
movsl
mov
add
or
mov
xor
xlat
pop
add
lret
stc
sub
rorb
out
outsb
inc
cmp
jecxz
xorb
stos
mov
clc
add
lods
es
dec
pop
call
fmuls
add
mov
js
pop
jno
sub
lds
test
pop
and
movsb
jo
pop
cmp
mul
push
or
push
jb
or
xchg
jns
test
imul
adc
dec
mov
gs
ret
inc
xor
mov
cmp
fstl
fmulp
fnsave
popa
cmc
dec
adc
inc
xchg
mov
stc
jae
out
clc
andl
mov
sbb
add
jnp
in
or
jns
bound
loopne
adc
pusha
lahf
and
insl
repnz
inc
cs
outsb
shlb
in
fidivrs
sti
push
mov
mov
dec
and
orb
sub
mov
push
das
mov
pop
sti
aam
mov
fstps
mov
xor
dec
mov
into
cmc
cmp
mov
rcrl
dec
dec
xchg
add
mov
mov
lea
imul
out
loope
rorb
out
push
loopne
sbb
loop
mov
push
mov
sarl
add
roll
cltd
and
pop
ja
dec
lret
sbb
inc
inc
inc
fcmovne
fmul
sbb
loope
xchg
xchg
js
out
and
aad
dec
in
inc
sub
and
notl
jne
add
aad
mov
dec
xchg
lret
push
loope
out
sub
pop
lds
and
int3
mov
push
jnp
popf
out
test
sbb
test
repz
add
push
jle
sub
fstps
dec
std
adc
mov
mov
xor
jle
cwtl
lods
call
jecxz
mov
mov
dec
cmc
outsb
outsl
js
sbb
or
or
lcall
jge
pop
cmp
sbb
sbb
insl
fsubl
push
lods
adc
push
std
loope
cmp
xchg
fwait
test
dec
push
mov
add
push
je
notb
xor
mov
and
outsl
pushl
or
push
and
inc
add
mov
mov
mov
cli
ret
test
cmp
sub
cwtl
popa
rorb
jge
imul
popa
shlb
and
enter
adc
testb
cmpsl
stos
jbe
mov
imul
inc
dec
cmp
sub
cmp
mov
sbb
pop
sbb
sub
jmp
xchg
cli
aaa
dec
jp
or
sahf
test
insb
ud0
movsb
dec
jge
add
inc
out
scas
rclb
cmc
lret
clc
fdivs
scas
dec
fldcw
lcall
cld
push
imul
ret
cmp
repnz
sbb
ja
push
lcall
arpl
and
pop
pusha
push
insb
int3
adc
jno
or
shll
mov
push
cmp
xchg
xor
jns
or
jl
xor
fidivrs
inc
pop
lock
and
aad
push
mov
fldcw
adc
jne
add
stos
sub
add
cmp
inc
add
jnp
add
test
add
fwait
inc
add
add
add
xor
dec
push
in
cmpsl
inc
in
mov
jecxz
loope
dec
jecxz
movsl
in
pop
xor
sti
mov
and
aas
cs
xor
hlt
loopne
jp
xchg
mov
repnz
mov
lahf
mov
loop
or
xorl
into
adc
ja
lahf
dec
lock
adc
mov
push
pop
aas
sbbl
jmp
jle
mov
jno
jns,pt
cmp
add
ja
in
addr16
fwait
mov
dec
mov
and
xchg
adc
lea
es
aas
dec
jge
mov
dec
insb
and
subb
mov
dec
mov
out
sahf
push
xchg
push
xchg
negb
mov
das
enter
sub
out
daa
in
dec
push
cmpsb
mov
loopne
inc
lahf
jns
mov
or
inc
in
mov
jle
fdivrl
lods
cmp
xlat
flds
sub
xchg
mov
mov
aam
mov
jge
push
add
aam
xchg
sub
lds
nop
iret
pop
xchg
ficoms
sub
mov
mov
dec
jge
jmp
push
pop
in
cli
xchg
leave
das
out
clc
mov
mov
xchg
adc
daa
dec
sarl
xchg
insb
pop
shll
out
jp
inc
inc
rolb
fmull
outsl
sub
bound
lcall
outsb
out
jae
loopne
pusha
sbb
dec
es
ret
or
cs
ljmp
hlt
push
and
jp
xlat
ja
jg
lea
test
dec
sahf
out
mov
leave
push
add
mov
lods
sub
nop
adc
inc
lods
or
je
stos
or
pop
fdivp
mov
std
mov
out
cmpsl
rcrb
adc
jl
xchg
mov
into
stos
ret
xor
jne
push
popw
adc
nop
jo
lret
je
sbb
xchg
push
push
mov
add
fdivp
ljmp
jno
sub
push
repnz
sub
lret
pop
lea
loopne
je
cltd
pop
repnz
out
sbb
imul
cmc
jl
rcrb
pusha
mov
sbbl
imul
mov
adc
push
movsl
sbb
mov
xchg
inc
pop
xor
loopne
adc
sbb
and
ficomps
xchg
sub
sha1msg1
lds
test
in
sub
stos
leave
sbb
push
pop
data16
mov
cmc
pop
xor
jo
inc
or
lahf
ret
loopne
or
ret
adc
pushf
mov
repz
or
lds
push
or
repnz
popf
aam
call
add
test
sbb
ss
xor
adc
fsubs
mov
xchg
stos
jl
push
scas
adc
xor
cmp
xchg
sbb
repz
jg
jns
outsb
xchg
lret
push
fisubrs
sub
pop
or
push
and
dec
sbb
jp
xor
mov
into
aam
jecxz
jg
scas
and
scas
out
orb
jmp
fs
inc
or
sbb
outsl
push
mov
fcomps
mov
mov
scas
test
lods
fsubrl
in
and
mov
inc
push
jno
sub
stos
out
sbbl
and
and
dec
push
imul
or
lods
or
sti
out
push
aas
cs
mov
test
aas
out
fbstp
push
jo
in
sbb
push
push
fwait
xchg
int
xchg
mov
jmp
sbb
push
or
in
sti
stc
arpl
fs
stos
enter
loop
cs
mov
mov
push
sarb
push
popf
fld
dec
mov
ficoml
inc
xor
imul
ja
pop
and
mov
outsl
xchg
adc
mov
pop
add
call
in
ror
cmpl
es
mov
or
arpl
test
mov
sub
and
pop
push
mov
cmp
pop
and
daa
pop
fucom
stos
adcb
clc
fwait
loopne
lock
xchg
jge
lods
lret
bound
mov
mov
and
ljmp
mov
xor
ficompl
add
push
lea
mov
repz
xor
xchg
daa
mov
lahf
cmp
lret
sub
dec
jle
xchg
mov
in
dec
cmpsb
add
dec
mov
loope
sbb
hlt
addr16
sub
cmp
fidivrl
xor
sbb
movsl
inc
jecxz
adc
xchg
push
adc
movsl
into
sub
jge
es
test
sbb
test
and
scas
shl
inc
insb
push
inc
test
or
cmp
popa
adc
push
push
xchg
daa
lea
jg
nop
imul
pop
push
inc
fimull
popf
fs
in
mov
inc
or
insl
jg
lcall
ffree
es
stos
pop
das
jle
lea
cli
xchg
adc
sub
pminub
mov
sub
push
sarl
or
push
xlat
inc
mov
mov
std
dec
sub
mov
out
mov
cmp
cltd
push
inc
add
fucomi
xlat
mov
add
jb
scas
mov
jbe
jnp
or
imul
repz
xchg
mov
lea
mov
fwait
pop
repnz
sub
dec
popf
and
cmp
aaa
cmp
push
add
xor
sbb
xchg
push
sbb
shll
aas
xorl
adc
cwtl
lahf
inc
mov
scas
xchg
dec
ljmp
lret
jmp
add
arpl
and
pop
psubusw
into
test
push
insb
cltd
sbb
ret
popa
xlat
aaa
outsb
sub
lds
xchg
mov
adc
adc
out
call
jno
inc
jge
or
or
jns
outsb
sub
push
adc
movsl
fsubrs
jmp
popa
mov
shl
push
jbe
int3
addr16
clc
mov
fisttpll
scas
in
mov
stc
mov
aam
into
nop
push
sub
sbb
push
jns
sbb
notl
emms
and
inc
sub
jno
cmp
insb
shll
xor
rcrl
sub
xor
cmpsl
in
pop
mov
push
and
sti
mov
clc
sbb
scas
mov
ror
subl
sbb
inc
out
cmc
mov
mov
push
cli
push
sbb
add
mov
lahf
cld
stos
sub
int
vpunpcklwd
in
mov
and
out
enter
lods
pop
call
push
fisubrs
dec
mov
pop
dec
dec
sbb
mov
add
jge
push
aam
scas
and
inc
dec
call
xchg
and
out
mov
aam
popf
ss
and
in
push
loope
sub
cmc
adc
sub
mov
arpl
loope
cs
lcall
jecxz
or
push
cs
es
jmp
rorb
ss
dec
sbb
cmp
add
and
xor
es
push
or
xlat
lea
aad
std
pop
mov
mov
stos
stos
push
ror
mov
cli
push
or
push
xchg
stos
negb
roll
pop
arpl
psrad
sub
mov
sbb
loopne
pop
pop
sbb
outsl
push
repz
loopne
in
mov
lock
adc
cwtl
push
dec
fadd
mov
inc
stc
add
xor
cs
push
rolb
les
pop
cmc
cli
inc
data16
popa
lcall
imul
fdivl
push
fs
scas
adc
jmp
mov
cmp
lcall
adc
arpl
outsb
clc
mov
cmpsl
mov
inc
pushf
fs
push
xchg
orb
lcall
stc
mov
iret
cmp
adcl
pop
xchg
loopne
das
aad
pop
mov
sbbb
scas
jl
adc
sarl
jbe
mov
in
push
mov
pop
mov
jp
cmp
repz
outsb
mov
adc
dec
rclb
inc
xchg
test
adc
add
push
imul
mov
pop
adc
add
aas
je
jp
test
mov
dec
add
mov
mov
cmp
push
xchg
hlt
aad
ss
bswap
add
enter
mull
mov
scas
inc
or
and
pop
stos
cld
mov
ja
iret
or
xchg
add
sub
pop
pop
dec
scas
cmp
xlat
push
pop
pop
add
cltd
jnp
xor
push
and
sbb
ljmp
loopne
add
adc
insb
cmp
mov
popa
and
fs
mov
loop
mov
cli
shr
and
lret
outsl
insl
sbbb
sub
test
push
mov
nop
push
dec
scas
mov
mov
and
add
pusha
xor
xchg
inc
pop
sbbb
xchg
cmp
or
push
lods
test
bound
lret
or
dec
pop
fildll
jge
fs
mov
stos
test
mov
sahf
pop
dec
data16
subb
ficoml
data16
lods
loopne
out
adc
imul
xor
addb
ljmp
ficoms
mov
iret
sarl
gs
movsl
pop
mov
or
ror
add
and
push
push
cwtl
pop
rcrl
and
fsubp
xchg
loope
add
gs
adc
jl
xor
jnp
pop
out
mov
repnz
lea
rcrl
inc
cmp
loope
icebp
pop
orb
ret
icebp
jae
mov
cmp
das
sahf
stc
sahf
jo
ljmp
rol
stc
adcb
inc
cmpsl
jp
jne
pop
dec
dec
cmp
cli
movsb
fwait
adc
out
or
xor
mov
aad
fiaddl
cli
pop
mov
scas
arpl
fadd
dec
cmp
repz
lods
les
mov
pop
jmp
loop
mov
or
test
add
scas
or
cmp
mov
mov
sbbl
rcrb
mov
mov
lds
jl
shrb
mov
cmp
ljmp
adc
lea
movsl
add
mov
xchg
xor
ret
not
rcl
test
dec
and
mov
xchg
jg
out
pop
add
sub
movsl
push
nop
xchg
cmpsl
fdivs
pop
dec
xor
sbb
xchg
nop
lret
iret
mov
outsb
out
mov
xchg
push
add
fs
sub
cmp
xor
int
outsl
mov
and
inc
push
pusha
sub
dec
sbb
sahf
loop
repnz
sub
sbb
pop
arpl
mov
pop
mov
adc
popa
adc
jmp
test
je
out
gs
xor
mov
or
loopne
repnz
pop
or
add
icebp
andl
jb
mov
int3
js
stos
push
test
dec
dec
fldenv
test
lret
cmova
and
icebp
add
clc
in
sahf
loope
and
mov
fisttpl
fwait
into
cmpsb
push
ror
mov
loope
mov
add
add
and
rol
mov
insl
jge
test
sbb
icebp
jo
or
aad
test
and
imul
add
xor
cmove
in
and
nop
movsl
lods
cmp
aaa
movsb
add
into
fprem
xchg
jl
cli
cmpsl
fstpt
out
pop
inc
leave
test
rcrb
pop
popf
inc
adc
pop
aas
pop
movsl
hlt
scas
pop
repz
leave
popl
mov
int3
dec
push
push
add
je
or
std
testb
imul
fildl
ret
or
pop
ja
loop
push
push
pop
pop
in
or
jg
nop
decl
sub
mov
daa
xchg
enter
jmp
in
pusha
mov
mov
loop
pusha
push
loope
in
pop
sti
dec
aam
mov
dec
jp
pop
pop
mov
sub
test
dec
jp
out
push
mov
mov
sbbb
push
ret
jp
push
sbb
push
lds
stc
and
mov
scas
jle
pop
add
cmp
mov
dec
cmp
jnp
xchg
mov
sbb
jne
in
push
pop
pop
imul
jmp
ljmp
pop
dec
outsb
mov
xchg
pop
lods
arpl
cld
sub
push
ficoml
sub
push
adc
test
mov
fstpt
popf
xchg
inc
dec
push
adc
mov
int3
fchs
xchg
jp
mov
mov
arpl
dec
les
mov
jg
jg
mov
mov
lods
adc
or
xor
lret
dec
repz
dec
mov
pushf
adc
or
test
movl
or
xchg
roll
pushf
dec
dec
cltd
jmp
je
in
fs
cmpsb
adcl
or
xchg
shrb
jb
xor
push
push
mov
pop
iret
jp
pushf
inc
inc
loopne
adcb
pop
stc
adc
jge
pop
lcall
lret
cmpsl
addr16
repnz
mov
jne
ljmp
rol
jl
ss
adc
nop
pop
fwait
xchg
pop
push
lods
xchg
inc
idiv
mov
fcomip
inc
mov
fs
lods
icebp
sub
and
insl
sti
int3
sbb
cltd
movsl
fdivs
dec
cltd
lock
ss
xchg
jecxz
test
jmp
loop
dec
xchg
xchg
aad
rep
add
xchg
daa
pop
cltd
push
xor
xor
mov
aaa
dec
popf
pop
rclb
mov
jnp
test
cmpl
mov
call
sbbl
push
or
mov
pusha
movsl
pop
push
popa
psadbw
dec
mov
sub
jecxz
jmp
out
sub
mov
scas
int
jecxz
rorb
pop
fisubrs
push
sahf
jecxz
or
push
inc
mov
mov
pop
adcl
addr16
lret
mov
aaa
cmpsl
ret
int
sub
mov
jae
mov
int
jne
xor
les
fsubrl
mov
ror
in
push
add
push
in
cwtl
mov
pop
xchg
sbb
outsb
mov
leave
repz
shrb
repz
jo
jmp
push
sahf
jge
repz
and
ljmp
xchg
jns
xchg
mov
adc
adc
xchg
cmpsl
sub
or
jnp
jae
push
imul
sarb
or
xchg
shll
mov
mov
mov
inc
dec
mov
inc
stos
lahf
in
or
or
jo
fcomp
in
xchg
add
cmc
ds
xchg
mov
inc
dec
aad
mov
lods
or
sahf
inc
mov
sub
xchg
sub
adc
test
sbb
loopne
pop
aas
in
test
xchg
hlt
stos
sbb
insl
mov
sbb
scas
pop
add
lret
loop
lahf
pop
or
fcomp
divb
stos
gs
or
cli
fs
addr16
jns
aam
outsb
ljmp
xchg
repz
or
aam
test
push
gs
cmp
dec
insl
jno
outsb
add
add
dec
push
test
jge
and
aam
xor
stc
rclb
lock
mov
jg
sub
mov
inc
cwtl
mov
movsl
sbb
xchg
inc
cli
in
push
mov
lds
ljmp
out
loopne
insb
jmp
inc
int3
call
inc
dec
push
mov
xor
pop
push
add
add
mov
cmp
out
xor
xor
test
sbb
sbb
nop
pop
test
sbb
pop
inc
jmp
imull
rol
outsb
lcall
pop
fnsave
aad
stos
mov
cmp
pop
cli
jno
jns
pop
movsl
imulb
je
mov
dec
sub
call
stc
or
sub
sarb
xor
and
pop
sar
cmp
bound
mov
sbb
das
xchg
pop
pop
insb
int3
jae
inc
dec
push
sahf
push
mov
jmp
pop
and
xor
or
lret
in
fistpll
leave
pushf
test
mov
ljmp
sahf
in
mov
jo
fstps
fcmovnb
pop
pop
decb
shrb
mov
es
xchg
stc
pop
cmc
addr16
daa
test
std
sbb
and
imul
mov
jne
jle
inc
jmp
xchg
add
xchg
lock
in
mov
lret
mov
xlat
inc
ljmp
cld
icebp
inc
pop
lcall
cli
xor
loop
dec
test
les
cmpsb
lods
mov
and
shlb
add
pop
ss
iret
sub
cmp
inc
rcll
daa
test
jnp
ss
xchg
outsb
jb
loopne
and
stos
aaa
sbb
inc
pop
lret
ret
jmp
mov
cmp
jo
fs
sub
mov
aad
mov
out
nop
and
imulb
cmp
testb
xor
pop
mov
out
jge
in
jnp
inc
adc
les
enter
mov
mov
rcr
sbb
push
ljmp
pop
xor
jl
pop
mov
pop
inc
cwtl
call
rol
stos
inc
roll
iret
aaa
mov
xor
movzbl
xchg
bound
sub
push
test
setg
mov
xchg
scas
dec
pcmpgtd
or
and
arpl
jmp
adc
shrl
push
loope
rolb
sbb
xchg
push
mov
enter
inc
mov
ljmp
mov
xor
mov
repnz
rcrl
scas
pop
lods
adc
push
lock
in
arpl
mul
xchg
cmp
out
in
push
movsb
lock
ficomps
sub
adc
mov
push
outsl
adc
mov
pop
inc
ljmp
int
lret
pop
scas
cmp
xor
test
push
scas
xchg
xchg
into
sub
and
and
xchg
xchg
adc
test
add
inc
gs
iret
nop
adc
adc
test
dec
shlb
xor
int3
jle
ds
cmpsl
and
das
mov
mov
inc
ret
cld
jae
leave
mov
cmp
in
fstp
push
jge
jp
lock
test
gs
jne
lahf
or
or
inc
ja
sub
xor
call
incl
lret
jns
mov
lea
inc
dec
jno
scas
movl
cmp
xchg
test
mov
dec
dec
or
mov
xchg
ja
jbe
and
ret
push
adcl
xor
subb
or
faddp
mov
hlt
xchg
aaa
and
in
popf
mov
pop
add
jp
aam
sbb
in
mov
sbb
mov
mov
inc
lret
outsb
cli
mov
in
xchg
jecxz
adc
into
ds
scas
mov
jno
test
outsb
out
inc
push
and
jo
test
js
ficomps
inc
out
sbb
addr16
and
cmp
or
pop
sti
cmpsb
gs
cmp
stos
mov
mov
xchg
fwait
mov
aas
xchg
lcall
pop
std
cmp
fwait
and
dec
jne
data16
cmpsb
test
iret
adc
gs
add
mov
sbb
sub
cmp
mov
pop
or
mov
imull
ljmp
jl
subl
pop
mov
repnz
fstps
jp
or
mov
jbe
dec
rclb
xor
je
push
cmp
je
pushf
rcrl
or
dec
dec
pop
and
stos
adc
mov
sub
and
sahf
imul
stc
fildl
je
test
repnz
stos
clc
xor
sbb
sar
jle
jp
jle
lds
bnd
xchg
imul
pop
call
lods
addr16
or
and
shlb
kxorb
xchg
sbb
lahf
sub
and
outsl
movl
xchg
jp
std
icebp
mov
pop
data16
and
imul
add
icebp
cmp
xor
mov
loopne
lret
movsb
imul
sub
jbe
sbb
les
dec
imul
cmp
aaa
cmpl
pop
cwtl
sub
xchg
lret
sub
nop
adc
cmp
cmp
jne
and
and
in
and
pop
inc
push
sub
sub
notl
xor
mov
push
icebp
enter
xchg
pop
sub
push
jne
mov
ljmp
ret
mul
repnz
mov
lret
out
pop
and
in
sub
push
push
inc
mov
jne
push
mov
mov
pusha
test
mov
bound
cmp
int
mov
xchg
shlb
cs
pop
adc
sub
and
in
jle
stc
stos
jmp
frstor
and
icebp
pop
and
dec
rorl
mov
call
jb
gs
xor
and
add
or
jnp
imul
in
mov
jo
je
and
lahf
add
jae
adcb
test
in
mov
imul
cmp
je
xchg
fisubrl
pop
repnz
lods
xor
add
push
cld
icebp
stos
and
ret
fs
xchg
rclb
cmp
sbb
cmp
insb
xchg
mov
pop
xor
lahf
stos
icebp
push
fwait
sub
jmp
xchg
inc
jnp
arpl
lods
mov
or
dec
jmp
dec
pop
ret
arpl
cmc
pop
mov
in
pushf
or
or
xchg
ficomps
mov
push
in
gs
mov
mov
jl
pusha
xchg
ds
mov
xchg
shlb
mov
test
lret
sub
jno
xchg
add
mov
int
je
add
sarb
sbb
mov
repz
outsl
scas
ds
outsb
sbb
mov
jg
pop
popa
sub
shrl
fistps
repnz
push
push
pop
push
aad
inc
mov
sbb
xchg
jno
mov
xchg
popl
mov
cmp
sub
rclb
out
or
loopne
mov
xchg
cltd
ss
lods
dec
mov
fidivrl
jp
pop
pop
je
or
inc
mov
out
mov
cmc
adc
outsl
sbb
or
dec
out
xor
or
cmp
cli
pushf
cmp
dec
out
jg
xchg
add
pop
pop
rcl
mov
or
cltd
roll
adc
in
and
mov
add
insb
or
arpl
push
pop
ja
mov
cmp
or
cmp
out
testl
xor
sub
je
stos
inc
jbe
roll
mov
out
cwtl
and
push
imul
sub
loopne
addl
xor
mov
rclb
cmp
dec
rclb
or
lret
sbb
pop
outsb
push
in
test
icebp
push
and
sbb
mov
xchg
repz
dec
fisttpl
xchg
adc
jg
and
push
mov
loope
in
popf
sub
jle
fwait
lock
cmpsl
xor
daa
shl
sub
dec
jns
xor
cltd
mov
xchg
xor
dec
inc
fildl
movsb
shrb
cld
mov
xor
pop
loope
sbb
in
filds
adc
mov
mov
scas
jb
or
lock
and
inc
bound
add
push
pusha
iret
pushf
stos
lock
mov
cmp
push
push
or
out
push
ss
loopne
push
mov
aaa
lds
movsb
cmpsb
sbbb
sbb
enter
xor
cwtl
roll
enter
in
out
sti
mov
xlat
les
jecxz
pushf
xchg
scas
jmp
arpl
inc
in
lea
mov
mov
dec
ds
push
pusha
add
xchg
adc
lods
jno
aad
mov
mov
sub
popf
sbb
adc
pop
fs
mov
xchg
push
inc
push
int
add
shrb
outsl
pop
cmp
pop
roll
dec
xor
push
mov
in
push
out
scas
aas
xor
pmullw
or
pop
lret
test
test
xor
mov
cli
pop
pop
and
jnp
xor
rolb
andl
add
sub
cmp
lods
pop
movsl
mov
cmp
adc
sub
sti
cld
push
sahf
mov
sahf
sub
lock
sti
inc
imul
xchg
in
xchg
pop
lcall
cld
test
dec
movsl
mov
data16
add
xor
mov
mov
mov
jmp
and
test
jns
push
inc
imul
rcl
pop
jg
sub
jnp
xor
ror
xchg
push
or
jmp
cld
sarb
or
xchg
adc
mov
je
add
loope
add
stos
enter
das
adc
jmp
clc
xor
nop
inc
xor
insb
imul
shlb
loop
popf
adc
fmuls
and
push
inc
hlt
push
pop
mov
mov
add
mov
shlb
adc
cmp
cmp
sti
jl
dec
adc
out
out
mov
cltd
aaa
mov
jmp
lret
sub
inc
js
ljmp
sbb
or
push
pop
loope
or
add
dec
aam
add
jo
adc
clc
xchg
nop
shl
fcomps
mov
mov
xchg
clc
fldcw
js
add
jne
stos
rorb
mov
imul
jecxz
ljmp
adc
adc
test
dec
sub
pop
adc
jnp,pn
or
fldt
out
sub
stos
das
mov
ds
loopne
push
mov
push
incl
std
sbb
add
sub
std
add
leave
test
cmpsl
add
inc
xchg
pop
add
sbb
daa
rcl
arpl
mov
in
je
inc
icebp
xchg
shr
inc
mov
xor
xchg
js
cs
pop
jno
adc
ret
cmc
mov
adc
sbb
jnp
aam
adc
push
or
std
test
bound
fwait
mov
jmp
sub
or
and
outsb
scas
aad
push
dec
in
sbb
lock
shrl
jp
xor
pusha
sub
idivl
out
xchg
into
push
je
mov
daa
insl
lahf
pusha
push
ds
fistl
sti
pop
hlt
and
movsl
dec
adc
xchg
test
jl
sub
adc
mov
cmpsl
scas
add
jge
xchg
inc
mov
xchg
jns
dec
daa
cli
rclb
push
lret
or
shlb
das
adc
sub
je
sub
nop
stc
and
pop
icebp
imul
fcomp
dec
sub
shll
xchg
dec
adc
jbe
sbb
call
scas
sahf
xchg
in
popf
mov
sbb
jno
mov
pop
and
mov
fmuls
mov
xchg
adc
adc
fwait
fs
cmc
lret
sbb
or
ljmp
inc
in
scas
std
cmp
jo
idivb
xor
xor
and
push
mov
mov
mov
add
lods
les
lods
pop
xchg
jmp
lret
dec
popa
push
mov
dec
iret
inc
cld
sbb
bound
rclb
in
xchg
scas
or
aad
scas
mov
add
negb
xor
mov
dec
sub
loop
imul
sbb
fs
sub
push
sbb
lcall
add
adc
fsubrs
xor
jo
dec
mov
or
data16
xchg
dec
mov
and
and
imul
insb
cs
test
arpl
push
lret
sub
ss
mov
loopne
andb
rcrb
enter
push
mov
fs
in
je
push
cmpsb
or
subb
mov
add
dec
ret
push
loop
stos
and
adc
fs
aaa
stos
mov
sbb
mov
and
push
scas
ss
loope
push
inc
into
dec
scas
fdivl
mov
mov
and
adc
mov
neg
adc
adc
cs
adc
std
mov
pop
xor
pop
stos
cmpsb
pop
cli
jp
aas
mov
jl
sbb
ja
jbe
mov
cs
addr16
add
daa
insl
aaa
iret
push
pop
push
lods
or
pop
mov
push
xor
cmp
mov
roll
lret
not
pop
test
push
adc
cmpsb
adc
sub
mov
pop
or
xchg
xchg
sbb
test
add
aad
out
xchg
sbb
imul
cmp
lcall
cmp
xor
movsl
add
pop
lds
enter
jbe
xor
repnz
mov
xor
ficoms
pop
aad
inc
popf
data16
fbstp
ret
mov
sbb
lock
ds
pop
mov
or
add
jl
bound
repnz
and
jae
xor
sbb
pop
add
lods
pop
fbstp
pop
adc
sub
daa
push
xor
fisttps
lds
mov
subb
insl
adc
nop
inc
or
in
test
mov
xor
jns
lds
jmp
inc
testl
outsb
add
dec
lret
mov
in
mov
mov
roll
jecxz
dec
out
jl
inc
jge
nop
popa
in
test
jne
data16
mov
adc
popa
negb
int
push
mov
push
arpl
adc
ja
fmuls
xlat
les
andl
lret
fcompl
ds
fs
lea
xor
sbb
push
in
mov
and
inc
leave
imul
and
jb
xor
push
pop
push
popf
sbb
dec
mov
test
sbb
out
inc
fsubrl
jl
mov
daa
cmc
xchg
in
xchg
mov
pop
pop
jbe
push
cmp
push
jo
and
pop
dec
jns
push
jae,pt
xlat
cmp
xchg
or
aaa
addr16
mov
xchg
xchg
sbb
lret
jne
push
negl
aas
cs
test
mov
or
loope
jbe
and
subl
or
sub
mov
stos
dec
jno
enter
ret
dec
dec
sub
mov
jb
loop
lock
inc
pop
in
int
in
xor
pop
xchg
push
lahf
fidivl
mov
mov
pop
mov
push
out
stos
notl
movsl
shlb
lock
lahf
mov
lods
iret
in
fnsave
add
enter
push
adc
mov
push
addb
std
lahf
shrl
cltd
xor
jae
mov
mov
pusha
popf
js
insl
adc
out
mov
pop
and
add
jae
iret
adc
outsb
xor
mov
mov
mov
and
nop
loopne
outsb
bound
psubusw
scas
jecxz
cltd
sti
pusha
flds
and
cwtl
scas
cmp
cmp
scas
call
decl
dec
pop
cmpsl
xlat
push
inc
lret
push
adc
gs
std
enter
jae
cmp
fcmovne
mov
fldt
pop
sbb
mov
jp
das
enter
mov
fs
jge
shlb
push
push
stos
push
int3
inc
xchg
or
repnz
es
enter
push
into
jge
mov
and
lret
enter
repnz
mov
sub
jp
add
push
cmp
jg
sbb
int3
jo
pop
inc
test
int3
push
mov
jg
daa
jae
inc
xchg
cmp
pop
inc
out
ss
and
in
mov
xor
sub
lds
sbb
neg
xlat
cmp
repnz
sbb
xchg
repnz
insb
outsl
inc
cmpsl
mov
jp
cmp
push
push
faddp
or
les
pop
inc
icebp
es
das
xchg
ljmp
add
or
sub
inc
push
xor
xchg
or
out
xor
shrb
loopne
fsts
leave
out
push
lods
mov
int
outsl
xchg
sub
shl
addl
lock
and
lret
icebp
insb
cld
inc
lock
insl
push
fwait
lret
add
dec
push
aam
xchg
mov
out
jge
addr16
out
cld
scas
sbb
mul
test
inc
icebp
mov
cmpsb
mov
mov
sbb
mov
mov
aas
push
nop
mov
push
cmpsb
outsb
dec
inc
fnstenv
dec
mov
fistps
adc
popa
adc
mov
mov
jge,pt
pushf
mov
mov
push
inc
jle
into
add
cltd
jnp
mov
mov
std
sbb
adc
jnp
lcall
push
stos
negl
in
xor
push
dec
je
scas
jl
mov
xor
ds
clc
insb
mov
jp
dec
mov
imul
cmp
mov
xor
mov
ss
fidivl
dec
into
rolb
fsubs
pop
nop
adc
scas
packsswb
xorl
ljmp
aas
jbe
mov
pop
and
arpl
cltd
fisttpll
adc
pop
bound
inc
add
jnp
inc
mov
mov
adc
cmc
fwait
jge
mov
sub
insl
jae
cltd
xchg
into
cmpsb
sbb
cli
pop
sub
sbb
lods
push
sub
and
and
enter
xchg
and
inc
dec
or
inc
add
aad
pop
push
pop
imul
stos
cmpsb
nop
mov
divb
outsb
clc
aam
and
arpl
insb
add
jmp
leave
pop
add
xchg
sbb
fmull
je
mov
xchg
sub
clc
adc
xchg
enter
dec
out
push
xchg
pop
jno
adc
mov
lret
dec
ja
cwtd
fisubrl
cmpsb
or
ss
cmp
sahf
into
push
and
enter
fwait
test
add
mov
sub
int
mov
ret
mov
adc
mov
cs
mov
stos
cmc
mov
repz
sahf
scas
loop
mov
into
cmpsb
xor
cmpsl
ljmp
mov
or
or
jmp
loope
and
repz
adc
clc
xor
or
jns
add
fwait
sarl
mov
push
sub
xor
loopne
push
xor
mov
movb
cmp
pop
jle
jmp
inc
add
ljmp
sbb
push
lods
cmp
xchg
cmp
stc
push
and
fidivrl
hlt
stc
rcrb
jmp
ja
into
sbb
shrl
xorb
ljmp
mov
push
dec
jp
add
inc
outsl
jecxz
mov
test
pop
dec
call
push
mull
add
push
mov
add
xor
loope
loop
jnp
js
mov
push
xchg
mov
and
mov
mov
or
jbe
adc
cmpsl
je
xor
sub
adc
adc
loopne
sub
sub
arpl
daa
xchg
int3
mov
push
mov
into
aam
stc
inc
inc
fildl
frstor
fwait
je
rcl
fiadds
int3
xor
adc
std
fsubrp
lods
ret
mov
and
sbb
add
fistps
fdivs
enter
sbb
adc
jbe
sub
sbb
lods
inc
add
sub
popa
xor
pushf
movsb
stos
sub
xchg
push
fbld
jp
jge
mov
jl
push
jp
das
push
xor
add
push
pop
es
push
sub
call
clc
sub
addb
push
lods
sub
lds
in
push
mov
rol
sub
lock
dec
ja
and
fadd
imul
sahf
in
adc
adc
sbb
jg
pop
pop
or
loope
shll
rcll
lods
gs
push
xor
xchg
sub
cmc
push
pop
mov
js
les
stos
ja
inc
sahf
cmpl
xchg
roll
frndint
imul
addr16
bound
mov
imul
jl
fcomi
lret
sub
mov
scas
adc
lods
lds
sub
sahf
dec
push
fsubrs
je
das
cmp
mov
lods
pusha
test
cmp
sbb
mov
iret
loopne
insl
push
shrb
aaa
rolb
call
std
fcmovnb
cmp
pop
inc
ret
outsl
fsub
imul
and
gs
mov
lods
mov
inc
xor
add
push
scas
mov
sbb
lods
lods
insb
aaa
push
jecxz
adc
sbb
jo
int
mov
fdivrs
mov
movsb
leave
std
or
rcrl
js
jmp
mov
push
popa
xchg
push
jo
mov
and
rcrl
int3
mov
jle
scas
pop
jmp
jmp
push
mov
mov
adc
cmc
sbb
clts
jbe
outsl
addr16
call
push
push
sub
fistps
cmp
insl
mov
and
jb
in
xor
or
xor
insb
and
dec
cs
mov
inc
int3
xlat
or
lock
or
hlt
cmc
mov
add
xor
or
popa
jg
jno
std
pop
cmpsl
std
jbe
stc
mov
inc
stc
fstl
mov
into
lea
in
push
xchg
jl
data16
sbbl
mov
inc
popa
fimull
shrb
adc
scas
sbb
fdiv
pop
movsb
adc
cmc
mov
xchg
jmp
sub
jmp
movsl
mov
inc
adc
jb
mov
dec
dec
xor
xor
pop
lret
mul
xchg
js
nop
insl
outsl
insb
or
sahf
idivb
jo
int
adc
jge
add
sbb
fsubp
stos
jmp
and
jo
dec
add
pop
xchg
and
mov
mov
aas
jg
jmp
add
inc
stc
daa
and
jbe
sbb
scas
pavgb
or
jb
ret
in
sbb
rolb
daa
into
sub
int
daa
or
sbb
fndisi(8087
ret
insb
push
fsts
int
icebp
mov
jo
inc
adc
adc
stos
test
sbb
lds
sub
inc
xchg
cmpsl
insl
out
cli
das
inc
push
mov
adc
rorb
dec
cltd
add
ljmp
adc
rol
jae
jg
in
subb
push
sahf
leave
fcmovb
pop
test
mov
xchg
lcall
and
or
inc
mov
jl
inc
insb
in
mov
out
in
push
test
cmpb
xor
xchg
lahf
push
jle
jge
ds
sub
aam
scas
lods
sub
aam
xchg
in
mov
scas
mov
repz
shlb
test
rolb
mov
jb
leave
pop
mov
mulb
jl
sbb
pop
and
scas
add
or
mov
pop
and
mov
sub
xor
pusha
sbb
in
xchg
add
sub
pushf
sbb
and
fwait
in
sbb
out
cwtl
xor
dec
add
lahf
outsl
imul
int3
xor
mov
shr
movsb
mov
mov
ss
or
fcomp
fucom
mov
stos
jnp
enter
mov
fsubs
data16
call
xor
dec
addl
bound
and
cmpsb
js
pop
and
pop
dec
cmpb
fiadds
pop
sbb
dec
or
dec
xchg
pop
repnz
adc
sub
dec
sbb
js
xchg
ja
jo
addr16
aas
negl
pop
pop
lret
sub
clc
ds
sub
ret
or
sub
or
pusha
outsl
pop
sub
xor
jns
jo
and
into
negl
dec
fsubrp
ret
test
cmp
cs
jbe
aaa
lahf
test
mov
repz
hlt
test
loopne
xorb
jno
fxch
xchg
sti
cld
mov
sub
adc
test
fdivrl
stc
fs
push
jp
ret
inc
int3
sahf
or
push
mov
outsl
jg
mov
or
mov
out
jne
dec
fnstenv
or
push
adc
and
inc
dec
xchg
add
pop
cwtl
mov
and
daa
pop
fistl
sahf
add
mov
mov
stos
jg
dec
pushf
sbb
and
loope
inc
std
imul
pop
test
mov
jne
add
fimuls
popf
loop
pop
add
jp
inc
and
jge
mov
pop
mov
mov
push
popa
arpl
ss
inc
aas
and
push
dec
pop
outsl
jl
in
bound
xchg
aas
stos
mov
stc
addr16
xchg
stos
repnz
fs
pusha
sbb
fs
fldl
sbb
lea
and
adc
hlt
mov
int
flds
pushf
adcl
and
add
sti
aad
and
mov
pop
orb
push
ret
psubusw
pop
xchg
ret
pop
mov
enter
sbb
dec
js
in
mov
imull
std
pop
and
fnstcw
and
in
mov
lret
add
mov
jbe
test
xor
mov
aas
ds
or
inc
jg
xchg
out
adc
dec
mov
dec
dec
sub
push
dec
inc
or
sbb
xor
jp,pt
testl
stc
lea
movsl
pushf
ficomps
sahf
jg
sbb
fldt
mov
rol
cmp
mov
add
pop
jmp
shlb
xor
scas
jl
and
ja
das
subl
dec
push
imul
fistpl
mov
inc
das
imul
mov
jnp
adc
xchg
mov
jns
and
add
push
addr16
dec
mov
fwait
popf
shll
sbb
repz
dec
test
aad
movsb
mov
cmpsl
pop
push
xchg
ds
fs
cwtl
push
fistl
popf
push
pusha
xor
push
rolb
fstpt
cmc
rclb
fsubs
jo
lahf
fistpl
js
mov
jge
inc
outsb
mov
ret
sbb
scas
sbb
ret
pop
movsb
xor
je
clc
mov
jo
or
adc
cmc
scas
cmp
dec
pop
out
negb
pop
cmp
xor
out
leave
stos
push
fs
shl
xor
mov
xor
pop
rcl
push
xor
cmp
inc
cmpsl
jl
inc
mov
mov
mov
sub
mov
push
mov
sbb
jo
cmp
cmp
leave
jmp
ficompl
sbb
and
ret
mov
add
incl
dec
orl
dec
mov
les
lahf
push
mov
jae
insb
pop
inc
lea
loop
add
pop
xchg
in
lods
mov
cmp
sub
lea
repz
dec
pop
sub
mov
outsb
or
xor
sbb
add
pop
negl
push
aaa
add
popa
stos
cmp
and
cwtl
inc
mov
pop
test
sbb
inc
mov
sbb
or
push
inc
inc
imul
ja
xor
sbb
pop
mull
int
dec
dec
push
sbb
ljmp
popf
and
loop
mov
add
daa
cmp
and
mov
dec
ljmp
sbb
or
or
sub
or
fwait
push
push
jl
imul
int
mov
mov
sbb
and
xchg
jns
inc
jp
mov
lret
xor
and
pop
imul
sub
daa
cld
lea
int3
cmpb
sub
nop
sbb
push
cmp
jle
mov
fcmovne
and
lahf
roll
fildl
icebp
es
es
sbb
lock
xchg
mov
xchg
shl
mov
dec
imul
mov
sub
popl
data16
pop
cmp
xor
and
sbb
imul
out
inc
or
je
inc
and
cpuid
ljmp
mov
inc
out
cmp
insl
xchg
mov
lret
xor
mov
pop
and
repnz
adc
sub
add
mov
adc
aas
ret
xor
or
xchg
divb
push
pop
mov
cmc
push
loope
js
pop
cmpb
push
cs
outsl
dec
mov
cmp
xchg
cmp
jnp
mov
inc
jp
jle
bound
mov
or
xchg
mov
popf
sbb
negb
xchg
fwait
sbb
cmp
and
pop
out
aam
sbb
fsubrs
daa
sub
pushf
mov
les
pop
das
aas
repz
loope
push
adc
inc
mov
mov
dec
popf
rorl
or
insl
dec
dec
push
psubusb
mov
sbb
cmp
inc
lret
ja
jnp
es
jno
xlat
dec
lcall
jecxz
lcall
nop
pop
pop
imul
lock
leave
sub
sbb
out
mov
mov
lods
sbb
clc
mov
mov
lods
mov
jmp
mov
mov
or
xorl
xor
out
loope
push
imul
sbb
out
fcomp
bnd
dec
lret
sbb
lods
and
push
pop
pop
xchg
cli
mov
mov
loopne
push
loopne
pop
dec
and
dec
mov
pop
shl
sbb
adc
inc
pop
jecxz
xchg
je
mov
dec
pop
fdivrs
nop
sahf
inc
aas
lods
push
pop
dec
movsb
lahf
xchg
cmp
sub
jae
pop
data16
cmp
addr16
fbld
pop
cmp
xor
sbb
int3
gs
sbb
cs
sub
cmp
int3
ret
or
addb
adc
pushf
jmp
das
jecxz
push
jg
pop
movsl
in
movsb
xor
outsl
fbld
jns
xchg
cmpb
cmpl
cmp
cltd
cmc
add
out
push
sub
mov
add
mov
arpl
adc
rcrl
fldl2t
sbb
arpl
ljmp
mov
sub
add
addr16
xchg
push
mov
cwtl
dec
scas
in
add
cmp
insl
xor
outsb
push
stos
fisttpll
cld
add
pop
pop
jns
mov
and
pop
mov
rcl
movsl
adc
jbe
data16
bound
and
jecxz
mov
enter
sub
loop
and
int
lea
stos
lock
ja
jne
xchg
xor
push
lcall
out
fcoml
es
imul
dec
mov
dec
push
rol
mov
pop
hlt
fdivrs
lea
mov
cmpsb
fcompl
pushf
cmp
addr16
lods
xor
dec
inc
fwait
cmp
push
lahf
pop
sbb
int
mov
sbb
loopne
out
ret
fbstp
push
cmp
loope
sub
jp
popl
sub
fistpl
cmp
scas
and
sub
push
cmp
addr16
fisubrl
and
cmp
popa
addb
pop
loopne
repz
dec
or
xchg
jo
aas
out
stos
cmp
pop
push
inc
addr16
mov
jae
mov
mov
lcall
and
lea
jecxz
fldl
xor
cltd
mul
jae
pushf
cmpsb
jae
out
push
std
mov
cmpsl
leave
jg
mov
test
or
mov
sbb
dec
push
cmpsl
or
push
stos
push
iret
xchg
mov
iret
mov
push
mov
jns
dec
sbb
subl
sbb
cmpsb
dec
test
ljmp
or
call
push
loop
cmp
mov
fsubl
and
lret
jno
into
leave
mov
jno
pop
out
adc
std
sti
popf
sbb
adc
sub
ss
pop
pop
call
jp
xor
pop
mov
cmp
xchg
adcb
out
test
xor
jp
jns
jno
pop
pop
imul
incl
xchg
cltd
loopne
mov
pusha
fs
movnti
or
pop
jmp
stc
pop
outsb
fs
fisubrl
xor
push
xchg
lret
fisttpll
insl
cwtl
sbb
test
push
jmp
mov
in
ds
xor
shlb
rclb
sti
inc
popa
nop
sub
dec
andb
rol
out
inc
mov
push
mov
out
and
mov
mov
insl
mov
adc
adc
inc
push
movsb
xchg
sahf
insl
dec
movsb
not
mov
and
inc
popf
jns
jge
push
xchg
scas
andl
mov
in
test
ljmp
test
and
fimuls
jb
sub
add
rcl
popf
lahf
cs
imul
popf
popf
push
dec
add
sbb
in
jecxz
pop
adc
pushf
or
jb
mov
testl
incl
fidivrl
test
in
cmp
nop
imul
aam
mov
sub
push
in
insl
mov
rol
lahf
sbb
bound
in
add
int3
adc
pushf
push
jmp
mov
outsb
jge
push
frstor
test
mov
icebp
sub
jnp
jne
xchg
mov
push
outsl
lock
push
fsubs
or
adc
inc
xchg
jmp
push
inc
fucomip
insb
jg
aas
xorl
sub
leave
dec
insl
popa
ret
xchg
add
jno
cmp
cmp
sbb
add
jo
mov
lret
stc
adc
call
dec
cmp
fdiv
in
push
nop
repnz
xor
add
sti
adc
cmp
cld
int3
fsubr
popa
sub
dec
insb
out
fwait
xchg
ds
mov
cld
dec
dec
mov
sbb
call
pusha
out
shrl
mov
pop
sarl
stos
icebp
sahf
popf
jns
aam
addr16
fstps
mov
out
hlt
jp
jl
mov
pop
repz
das
dec
xchg
xor
jb
push
loope
push
and
aad
mov
mov
xchg
aad
sbb
adc
and
and
bound
add
icebp
test
iret
fcomi
test
jp
out
cmpl
add
jge
cmp
out
leave
into
stos
lods
out
jmp
inc
fstl
test
cwtl
enter
xchg
pushl
outsb
jae
jne
adc
add
mov
pop
dec
popw
cmp
or
xchg
cmpsl
inc
mov
dec
movsb
out
fucom
sti
int3
fisubl
repz
popa
scas
test
cmp
fsts
inc
jecxz
or
adc
ret
inc
inc
in
or
ja
loope
mov
lret
sub
in
jmp
add
dec
loop
sti
and
shl
or
cmpsb
sbb
fmul
jecxz
outsb
jae
scas
lods
fistps
xchg
xor
ds
push
pop
lods
mov
leave
fxtract
shlb
test
jmp
in
icebp
das
push
xorl
push
dec
sbb
sbb
ror
cmpsb
idiv
or
sub
sbb
sub
cltd
decl
outsb
xlat
mov
jg
popf
add
mov
jg
out
stos
adc
or
xor
mov
out
in
mov
loope,pn
push
jbe
cli
and
push
mov
xor
out
rorb
or
ss
mov
xor
dec
pop
popl
inc
leave
jle
es
sbb
lret
mov
ret
shrb
ljmp
les
add
add
in
call
dec
mov
mov
cmp
leave
int3
jmp
add
cmp
in
pop
lods
in
cwtl
mov
fcomps
imul
repz
pop
arpl
inc
repz
shrl
mov
push
pop
cli
sub
jne
call
xlat
or
and
pop
imul
ret
xchg
and
fsubrs
or
mov
mov
mov
mov
pop
push
cmp
mov
test
mov
jbe
cmp
cmp
stos
aaa
aaa
in
cmpsl
repz
inc
enter
pop
or
mov
inc
add
out
dec
dec
je
movsb
in
push
mov
pusha
ror
xor
loope
int3
or
add
jecxz
pop
xor
aam
jno
test
lret
or
xchg
pop
int
xor
pop
mov
repz
leave
sbb
sub
sub
inc
xchg
data16
fcompl
xor
and
adc
popf
jo
lods
pop
int
inc
fisttpll
mov
dec
jae
pop
jmp
lods
int3
inc
loope
and
aam
push
aaa
gs
stc
jbe
sbb
cmp
roll
jmp
pop
in
insl
mov
int
jae
mov
pop
push
hlt
jle
cmpsb
aam
push
push
outsl
pop
in
lcall
adc
jae
adc
hlt
or
or
mov
and
test
decb
mov
jbe
cwtl
jp
lds
pop
shl
jg
cmp
jg
std
scas
ret
jp
call
adc
int
mov
pop
cmpsl
mov
stc
out
fdivs
sub
cmp
ficoms
mov
mov
mov
shll
ljmp
mov
andb
sahf
jge
ds
repz
push
jnp
jbe
fbstp
in
jmp
movsb
jmp
insb
pusha
pop
pop
mov
and
int3
je
xor
add
push
dec
cmp
dec
or
repnz
out
mov
jecxz
mulb
pop
jmp
push
sbb
jns
jb
jb
sub
cmp
push
hlt
loopne
ret
in
rolb
adc
mov
jle
jae
mov
daa
aaa
scas
jg
in
pop
fwait
imul
push
adc
arpl
fimull
pop
bound
fldl
ret
sbb
cmc
repnz
sub
movsl
aam
adc
jno
sbb
adc
cwtl
mov
mov
push
ss
xchg
or
imul
pop
out
inc
fisubs
dec
adc
in
or
sar
add
mov
sbb
xchg
cmpsl
notb
mov
jns
sub
xchg
add
test
and
or
adc
xlat
jb
mov
mov
sbb
daa
adc
insl
adc
sbb
mov
daa
out
push
imul
sbb
stos
imul
popa
pop
repz
or
push
xor
jmp
xlat
pop
push
mov
leave
call
push
hlt
lret
xor
pop
popf
ret
push
xchg
adcl
imul
jae
pop
inc
or
push
dec
loop
jecxz
in
insl
notl
inc
cwtl
aaa
add
sbb
push
sarl
cltd
fsubl
arpl
cmp
cmp
int
mov
jg
sub
inc
testl
aam
repz
xchg
iret
shll
adc
cmp
iret
sub
out
mov
and
mov
jg
in
dec
lea
adc
push
imul
lahf
xchg
inc
out
cld
ja
xchg
xor
or
out
les
cmc
sub
loope
xchg
pop
push
and
sti
fsub
pop
packssdw
mov
mov
stos
sub
sbb
into
dec
cwtl
xlat
push
lds
jle
mov
dec
or
adc
push
mov
inc
mov
ss
mov
and
jle
mov
xor
imul
js
stos
sahf
rcl
das
lock
icebp
stc
arpl
pop
lahf
aaa
pop
mov
sub
pushf
cld
or
or
mov
adc
out
add
cwtl
fisubs
je
push
in
popf
mov
cld
push
cld
xor
cwtl
out
cmp
mov
xlat
cmc
shlb
jbe
xchg
mov
stos
add
mov
add
inc
or
cs
out
push
mov
fnsave
ss
ret
fisubs
cld
ja
cmp
out
mov
and
dec
inc
and
sbb
cmp
ficoms
pop
pop
rclb
cwtl
leave
dec
sub
call
js
dec
mov
std
push
lcall
ret
lcall
cmp
mov
push
pop
mov
daa
ret
push
or
lea
jl
push
xchg
dec
in
mov
in
pop
insl
aaa
pop
addr16
stos
flds
nop
les
cld
mov
mov
dec
inc
lcall
jo
sbb
mov
or
shll
inc
pop
xor
pusha
frstor
jae
sbb
test
mov
sbb
scas
shr
mov
inc
jge
stc
fldcw
and
push
mov
insb
dec
push
lret
mov
js
ja
daa
add
adc
inc
loopne
jmp
scas
fdivrs
push
in
out
aad
rcll
fistl
sub
daa
xchg
int
jge
mov
shrl
ja
stc
pop
jl
loop
leave
cmp
es
and
cmp
xchg
mov
mov
ret
pop
fisubrl
rcr
sbb
push
xchg
or
in
jae
pushf
jb
xor
xor
mov
out
std
je
inc
out
inc
ljmp
call
stos
add
loope
xor
cs
jle
das
xchg
sub
pusha
push
out
insb
or
sub
stos
mov
pop
xor
sbb
sub
mov
and
dec
push
mov
cltd
add
cld
stc
scas
lret
into
sti
ja
inc
pop
popa
in
push
jp
mov
sbb
int3
sbb
aaa
divl
jle
cmc
mov
les
enter
divb
xchg
push
xor
roll
mov
inc
mov
cwtl
adc
fcomip
imul
adc
ret
push
sub
and
inc
push
add
pop
dec
jno
jl
mov
test
lods
aam
test
jl
sub
cmp
popf
lahf
and
cld
sti
loop
dec
movsl
cli
int3
jne
pop
and
push
div
jbe
jmp
mov
push
jg
jno
add
sbb
imul
ds
sbb
dec
out
mov
push
ja
movsb
xlat
xchg
xor
aaa
pop
mov
sbb
lahf
imul
xchg
ljmp
daa
dec
jnp
push
pop
leave
pop
and
push
mov
gs
ja
ja
push
pop
and
inc
repz
mov
loope
fistps
mov
sti
movsb
mov
shl
jnp
sub
frstor
int3
dec
mov
lods
arpl
es
push
iret
mov
and
mov
mov
mov
test
imul
sub
divb
adc
and
popf
stc
cmc
or
out
out
pop
mov
in
popa
nop
les
test
das
mov
xchg
cmpsl
subl
lds
mov
imul
mov
mov
xchg
jno
stos
mov
out
push
fiaddl
out
daa
pop
pushf
adc
nop
add
imull
and
dec
and
push
ja
loopne
dec
shr
xorb
ljmp
ja
adc
push
cli
xor
movsl
add
jno
aas
cmp
or
adc
jnp
imul
es
aaa
pushf
fnstcw
mov
clc
xchg
and
lcall
jbe
je
adc
push
les
pop
rcr
sub
mov
test
mov
mov
mov
movsl
or
fadd
dec
mov
fisubl
adc
out
xor
imul
mov
ret
insl
jecxz
cmp
stc
sub
ss
mov
dec
fdivrs
mov
aad
or
fnsave
mov
fsubp
test
and
test
idiv
jns
mov
dec
outsb
into
cmpb
inc
daa
shr
call
mov
faddl
and
test
xor
push
jo
pop
and
cmp
push
pop
cmp
mov
jp
xchg
xchg
or
in
dec
cmpsl
mov
adc
dec
pop
stos
jge
mov
int3
push
shrb
and
inc
sbb
mov
cmp
lahf
test
jno
pop
push
loop
jge
sbb
fdiv
pop
inc
dec
out
jecxz
cmp
clc
push
push
jle
movsb
test
bound
sti
add
inc
fmuls
mov
xchg
into
cwtl
daa
loope
mov
jno
xchg
sub
iret
dec
loopne
mov
xchg
dec
addr16
fcoml
and
push
cwtl
xchg
sub
or
jnp
cmpsb
fstpl
lea
inc
test
test
dec
mov
jmp
inc
fnop
dec
cltd
sbb
sub
pop
sbb
stc
fnstenv
lods
mov
push
mov
sub
loop
stos
dec
fnsave
pop
addr16
jmp
and
in
lea
adc
and
jbe
int
and
imul
mov
into
std
add
mov
mov
pop
mov
out
pop
in
ror
xor
push
movsb
popa
sti
mov
and
or
jo
mov
dec
into
dec
js
push
add
icebp
int3
inc
pop
xchg
popa
xlat
insl
cli
mov
iret
add
inc
adc
mov
or
push
mov
pop
push
stos
push
insb
daa
mov
fdivrs
cmp
lock
inc
data16
cwtl
jo
int
xchg
rorb
or
repnz
insl
and
mov
insl
add
pop
mov
or
jb
mov
adc
fldcw
jp
push
shr
add
adc
xchg
lock
jns
adc
mov
decb
ds
and
add
pop
inc
add
std
por
mov
push
mov
sbb
test
lods
cli
fstpl
fidivrl
inc
add
rorl
dec
jmp
dec
dec
sub
mov
mov
movsl
popa
mov
loope
outsl
icebp
movsb
dec
xchg
dec
xchg
sti
xor
xchg
outsb
sub
cmc
fdivrs
xor
cli
jg
xchg
mov
cmp
mov
out
mov
lock
add
repnz
lret
xor
cmp
push
lds
sub
popf
gs
fs
loope
bnd
stc
xchg
icebp
and
inc
cltd
lahf
mov
clc
cmp
mov
ret
in
fidivl
and
sbb
xchg
cld
mov
inc
mov
notl
mov
xchg
push
sbb
sbb
stc
jbe
xor
scas
hlt
cwtl
add
or
test
inc
mov
jnp
jl
test
pop
dec
sahf
inc
dec
out
dec
inc
mov
add
lret
inc
movsl
jne
jecxz
inc
cmp
addr16
hlt
push
pop
iret
lret
cmpsl
lea
vorpd
data16
dec
sbb
in
pop
or
push
push
in
sbb
lods
test
xchg
cltd
imul
jle
iret
mov
insl
int3
ljmp
mov
scas
xchg
movsl
cmp
mov
sti
fwait
mov
cli
aam
cmp
sarl
push
push
in
pusha
jne
xor
aaa
mov
and
add
xchg
pop
test
inc
aad
rol
jb
lcall
lret
lret
cmovnp
pop
mov
push
sbb
cwtl
fsts
mov
movsl
insb
test
sahf
sahf
cmpl
mov
xor
cli
int3
sarb
adc
push
shl
jno
ss
pop
fistl
xchg
dec
xor
cwtl
xchg
cmpsl
and
and
xor
out
jle
jns
xor
fdivr
ret
lods
nop
leave
arpl
push
test
cmp
mov
mov
out
pop
cmp
add
pop
insl
negl
push
jo
jae
cmp
sub
adc
cmp
sub
sbb
jg
insl
cltd
insl
fidivrs
fincstp
dec
cmp
sbb
outsb
jns
cmpsl
sbb
mov
movsb
dec
push
int3
inc
dec
aaa
push
jb
jmp
pushf
push
mov
je
jmp
fcmove
fs
lea
jecxz
lret
popa
push
rcrl
jg
mov
loope
sbb
push
bound
mov
or
dec
inc
xchg
jne
imul
mov
leave
xor
adc
sbb
inc
adc
das
subl
in
and
xchg
mov
or
xor
cmp
loope
cmp
pop
lret
xor
fisubrs
or
dec
scas
mov
add
dec
ret
mov
cmp
or
test
ficoml
stos
fwait
jg
fcmove
cmp
ja
lods
ret
jmp
call
push
push
dec
or
jle
icebp
test
mov
insb
stos
mov
jns
push
adc
or
or
sub
repz
clc
cmpsl
fwait
sub
inc
dec
or
out
sub
hlt
mov
and
sub
xchg
repz
pop
insb
xor
aaa
and
out
xchg
or
sub
lds
fcomps
pop
inc
dec
mov
mov
push
les
imulb
pop
jae
orb
ret
push
cld
mov
dec
cmp
pop
cmpsl
sub
cmp
cmp
xor
mov
mov
in
addl
mov
out
ja
mov
add
mov
lahf
mov
jmp
leave
repnz
dec
xchg
xchg
push
xchg
cmp
ficoml
aam
out
add
js
xorl
dec
xchg
adc
dec
pop
cltd
lret
sbb
data16
aam
cld
ds
std
xor
and
ret
pop
lret
test
inc
jo
cltd
push
inc
addl
daa
add
sbb
enter
mov
mov
clc
jbe
dec
or
xchg
mov
andb
cmp
push
sub
bound
add
pop
icebp
and
xor
cli
in
cltd
mov
ret
inc
dec
mov
lea
lret
pop
addl
dec
cli
xor
insb
dec
xchg
sub
stos
movsb
cld
test
or
inc
mov
mov
ja
add
imul
dec
sub
push
adc
fcomps
nop
negb
mov
pop
adc
aam
je
fcmovu
push
mov
jo
iret
aad
and
dec
jle
inc
fwait
or
rcll
mov
outsl
stc
addb
push
inc
mov
leave
sbb
ljmp
sbb
das
adc
int3
dec
lods
pop
xchg
sarl
jp
mov
push
mov
and
sub
cmp
push
scas
push
jecxz
call
xor
pop
cmp
xor
mov
in
dec
fsubs
adc
ret
mov
xchg
xchg
ficomps
loopne
mov
xor
adcb
test
jbe
push
ficomps
sub
lret
and
mov
xchg
fucomi
inc
fsubl
daa
dec
arpl
sub
push
xchg
pop
aad
mov
or
xor
fsubl
loop
rolb
mov
add
xor
rcrb
xor
loop
push
sub
call
xlat
out
mov
push
jno
add
pop
pop
inc
and
add
jl
ljmp
test
out
cmp
nop
sti
and
xchg
hlt
stos
add
pop
lods
mov
es
std
jle
push
pop
insl
or
push
dec
bound
loope
xor
push
cmp
dec
loopne
imul
sub
mov
cmp
loop
push
test
dec
jns
outsb
mov
mulb
jg
pop
jecxz
in
or
lds
icebp
push
call
pop
imul
cwtl
outsl
xchg
cmp
cmpb
xchg
imul
in
sub
push
mov
mov
lock
mov
jne
in
and
push
xor
xchg
mov
dec
dec
fwait
push
or
mov
jge
fists
adc
pop
sbb
dec
dec
pop
jle
outsb
jle
loop
or
or
mov
xchg
outsl
movsb
dec
movsl
cmp
shll
jae
in
lock
push
das
enter
pop
es
xchg
mov
rcll
push
inc
test
mov
ret
sarb
ss
dec
call
push
divb
add
jmp
sub
adc
xchg
jg
in
xor
xchg
xchg
jge
jl
or
push
jmp
cmp
fcmovnu
push
adc
inc
jg
and
in
cmp
xchg
push
call
mov
sbb
mov
xchg
sub
into
pop
cmpsl
sahf
xchg
bound
push
pop
adc
in
adc
outsl
les
adc
mov
outsb
jno
stos
jl
add
sbb
pop
mov
cltd
mov
cmp
rolb
push
xchg
insl
repnz
pushf
movsl
mov
addl
dec
in
inc
loop
ljmp
aad
sub
lds
cmp
ficomps
cmp
push
les
inc
dec
xorb
inc
cmp
mov
popa
inc
adc
repz
filds
push
add
xor
mov
jg
sub
mov
lret
clc
sbb
and
or
movsl
jge
jb
shll
mov
inc
xchg
and
and
out
ret
sbb
in
jmp
push
cmp
mov
ror
sub
sti
out
outsl
inc
sti
call
fnstsw
es
push
in
mov
push
cmp
add
and
cmp
scas
pop
test
mov
ljmp
or
jns
mov
ds
and
imul
mov
in
add
sahf
push
aaa
or
rolb
pop
jo
out
ficomps
into
cwtl
adc
ret
mov
mov
das
in
dec
ret
or
test
loop
dec
dec
adc
dec
xchg
xlat
xchg
lods
arpl
loop
icebp
not
in
js
icebp
or
lahf
xor
jae
movsb
inc
ss
js
ja
aaa
push
sti
and
out
pushf
push
fld
repnz
les
ss
loope
rclb
out
xchg
repz
cmp
adc
add
and
add
mov
cmp
jg
ja
inc
mov
stos
or
push
push
inc
in
adc
fsubrs
mov
enter
mov
aam
fcom
mov
jl
dec
sbb
xchg
into
sbb
or
add
lahf
into
xchg
push
jns
and
dec
cmp
push
dec
pop
int
jb
fisttpll
ret
fs
or
sub
xchg
dec
xchg
jae
and
iret
imul
int
jno
lahf
fcoms
mov
cmp
or
sti
mov
in
daa
outsb
dec
dec
or
sahf
jnp
ds
xchg
clc
jns
cmp
add
arpl
addl
mov
loop
jmp
jo
ficompl
insb
mov
push
dec
imul
ljmp
inc
sbb
outsl
xchg
shrl
pop
jp
ficomps
outsb
hlt
scas
ja
dec
fs
pop
xchg
jle
les
outsl
fildl
out
sbb
add
nop
sbb
adc
shrl
cmp
scas
int3
and
jecxz
sub
adc
cmp
les
xlat
inc
js
mov
and
pop
ret
sub
divb
inc
cmp
insb
jns,pt
cmp
pusha
ret
or
push
sub
cwtl
add
jno
xchg
movsl
jno
adc
or
push
xchg
lods
fwait
mov
add
fstpt
fs
inc
inc
ds
test
aam
out
cs
ljmp
out
scas
sbb
jnp
shrl
loop
pop
call
inc
dec
sbb
add
push
dec
push
fnstenv
mov
les
test
push
cld
pop
cltd
sbb
mov
fsqrt
pop
sub
pop
movsb
xchg
dec
xor
sub
cld
fdivrs
inc
push
in
cmpsb
gs
pop
gs
psubusb
or
add
mov
dec
fisttpl
jge
mov
imulb
lds
es
fs
push
dec
daa
xlat
stc
adc
scas
xor
popa
add
add
pop
xor
icebp
pop
cmp
fistl
pop
pop
cmp
shl
test
mov
push
jae
stos
ds
mov
ja
push
cmp
pushl
lods
lods
mov
rcrb
inc
cmp
sub
mov
xor
jnp
pop
xor
rdmsr
xchg
adc
or
jne
inc
out
movsb
or
mov
adc
xchg
int3
cmp
fsubl
mov
frstor
lods
inc
das
jae
pop
sub
jns
mov
jno
popf
mov
movsb
jecxz
push
pusha
or
int3
testl
sbb
cli
dec
mov
inc
out
popf
add
push
pushl
popf
mov
jns
aam
jno
jmp
popa
jbe
loop
leave
jno
adc
lds
lds
idivl
cmpsl
mov
ljmp
adc
movsl
mov
xlat
stos
xchg
and
add
test
and
mov
es
xchg
xchg
fistpll
push
dec
xor
cmp
jp
js
sahf
xor
pop
cmp
ror
fwait
pop
dec
sub
pop
push
fwait
lods
loopne
or
fdivr
ret
jl
loope
sbbl
ja
lods
out
ja
jne
jle
adc
outsb
sbb
addr16
push
lret
fwait
ljmp
mov
and
aad
ds
adc
jae
dec
sti
out
lret
out
fstpl
cmp
add
or
dec
pop
cmp
cmp
xlat
fldcw
or
xchg
sub
mov
dec
lods
dec
outsl
aad
ljmp
sti
cmp
out
pxor
lret
sub
icebp
pop
daa
and
scas
sbb
dec
out
mov
pop
stos
add
adc
test
lea
jmp
push
push
jg
fs
pop
popf
rorb
xchg
les
stos
les
lcall
testb
lods
shl
mov
lret
popf
test
shrl
fmuls
mov
out
pop
das
add
xor
sbb
stos
push
repz
mull
and
out
pop
jo
cld
sbb
imul
push
jl
and
cmc
jecxz
stos
cmp
pop
cltd
arpl
xor
and
stos
sub
and
sbb
nop
mov
cmp
test
inc
jne
adc
or
and
adc
sbb
or
dec
jmp
add
mov
push
sahf
mov
push
dec
xor
xchg
push
cmp
outsl
sub
outsl
pop
fnop
js
sahf
push
push
xor
test
lret
cmc
aam
or
pop
adc
and
add
or
inc
clc
popa
lcall
aas
xchg
popf
dec
es
push
pushf
xor
lahf
cli
fidivrs
insl
dec
rorl
mov
daa
gs
sbb
test
dec
inc
lock
mov
std
jp
sbb
subb
loopne
aad
pop
in
fsubrs
test
lahf
sbb
jle
inc
jno
fcomps
add
inc
aad
cmp
xchg
ficoml
loopne
lds
xor
add
scas
xchg
jo
sbb
ret
dec
push
and
lods
stos
jmp
test
jecxz
imul
pop
or
je
out
xchg
daa
repz
testb
mov
dec
hlt
int3
addr16
jb
dec
aad
jo
xor
and
cmp
dec
sbb
add
xchg
jns
cmpsl
aam
jne
sbb
adc
sbb
xchg
sbb
mov
sbb
lret
mov
in
adc
imul
pop
call
sarb
call
repz
rcll
shll
cmp
shl
inc
dec
scas
shrl
inc
push
pop
push
jbe
hlt
xor
push
fisubrs
fists
js
sub
push
inc
pop
scas
mov
mov
and
jl
mov
inc
ljmp
mov
pop
hlt
xchg
push
and
mov
addr16
call
insl
call
sbb
mov
repz
repnz
addb
les
push
push
pop
out
rcr
ss
aaa
add
mov
mov
mov
ljmp
popf
subl
mov
push
daa
vandps
adc
mov
push
sahf
adc
mov
add
inc
clc
out
push
mov
push
push
xor
in
pop
ret
xchg
jmp
into
jg
js
sub
push
in
push
xor
fisttpll
sbb
sbb
dec
cmp
mov
cmpb
mov
push
out
cld
dec
loopne
ret
cmp
scas
ljmp
lret
and
nop
dec
pop
fistpll
jb
cmp
cld
loope
adc
mov
or
mov
fcoms
cld
jne
xchg
jmp
cld
adcl
mov
dec
sub
add
imul
inc
sbb
iret
cwtl
mov
pop
cmp
pop
hlt
xor
sbb
adc
push
outsb
notb
mov
sbb
inc
scas
and
out
jl
insl
dec
mov
pop
shll
addr16
rcrl
dec
mov
je
jne
enter
lock
xchg
and
mov
push
popa
repz
cmp
lcall
fwait
or
jae
sbb
cmp
addr16
imul
fnstsw
fisubl
lret
call
fdivs
inc
mov
push
lods
pop
adc
sub
out
mov
test
xor
lret
jp
xchg
ja
adc
xor
cmp
in
jns
sbb
pusha
repnz
in
adc
das
js
or
and
cmp
lock
in
dec
jecxz
push
divb
call
xchg
test
int3
les
in
in
jg
and
mov
xor
lahf
into
nop
nop
repnz
outsb
mov
mov
das
jb
sub
data16
movb
out
sbb
sub
dec
mov
in
cld
enter
cwtl
insl
pop
enter
inc
stos
sub
cli
push
bound
bound
aam
mov
das
fs
mov
mov
movsl
cmp
movsb
mov
sahf
loop
push
xor
mov
movsl
sahf
jmp
cli
dec
mov
in
push
arpl
popa
cmc
mov
xchg
ja
mov
adc
not
inc
popa
push
or
sarl
std
xchg
fsubrs
jne
lea
lret
fldenv
mov
lea
arpl
addr16
xchg
xor
icebp
ret
in
into
out
sbb
jo
xor
loope
adc
fcoms
je
dec
pop
xorl
pop
fs
push
xor
lock
ret
mov
jbe
mov
mov
or
outsb
dec
and
mov
mov
addb
jnp
jp
roll
fcomps
loop
dec
sbb
sbb
pop
cmc
lods
cmc
pop
stc
push
dec
lea
scas
cmpsb
inc
fisubrl
inc
ja
inc
xor
push
sbb
mov
xchg
repz
jns
outsl
pop
aaa
adc
add
adc
xchg
aad
cs
mov
push
mov
out
inc
cmp
push
mov
and
inc
mov
jno
aaa
inc
xchg
pop
mov
push
call
xor
xor
movsl
xor
sub
inc
test
push
jl
pop
pop
jle
iret
pop
xchg
jl
push
sub
xchg
sbb
cmp
xor
push
pusha
xchg
fisttpl
sbb
xlat
je
push
lods
insb
cld
push
lahf
sub
sbb
dec
jae
mov
int3
int3
push
inc
jbe
les
rolw
cmpsb
and
push
xor
or
cmpsb
sbb
cli
adc
mov
xchg
add
pop
inc
ficompl
mov
lcall
mov
shll
jo
mov
stos
call
inc
into
xchg
push
xlat
adc
addb
out
lret
cmp
sarl
sar
in
xlat
sub
cli
fdivl
nop
xor
or
or
jo
in
into
dec
cwtl
or
imul
adc
ret
push
lcall
adc
aam
jg
inc
decb
call
imul
scas
sbb
xchg
clc
push
scas
mov
sub
sbb
sub
aam
dec
xlat
mov
stos
lcall
stc
sub
xor
bound
jp
and
mov
addr16
cmp
adc
fistpll
cmp
shlb
mov
or
popf
mov
out
rolb
dec
add
push
not
lret
mov
leave
aas
dec
push
mov
movsb
adc
sbb
lret
movsl
cltd
ss
mov
sbb
jge
fnsave
daa
mov
imul
cmp
mov
xchg
dec
or
xor
inc
daa
mov
jb
xlat
sub
clc
mov
dec
jns
ds
pop
lcall
push
jae
inc
test
or
xor
fwait
cmpb
mov
and
or
je
sub
xor
sbb
popf
xchg
data16
xor
imul
daa
out
cmp
mov
in
out
cwtl
jmp
adc
jo
fdivr
lret
js
out
add
das
sub
xchg
push
je
ds
jmp
std
mov
jo
xchg
iret
cmp
jae
stc
mov
cmpb
sbb
and
movsl
in
or
inc
test
and
ret
shlb
and
clc
int
les
or
xor
xor
mov
int
xor
sbb
repz
pop
test
negl
and
jp
fs
xchg
or
lret
xchg
movsl
dec
cmpsb
mov
stc
or
popf
mov
xchg
and
mov
xchg
mov
lcall
or
adc
leave
push
or
outsb
push
icebp
imul
lret
sbb
jmp
push
into
adc
mov
fnclex
lods
inc
cs
in
in
mov
and
pop
jb
jmp
mov
or
xor
rolb
in
jle
scas
fisubrs
adc
mov
orl
cmp
or
mov
sub
pop
and
push
addr16
push
cmp
mov
jmp
fmull
test
pop
sub
sbb
dec
fcoml
mov
xor
jns
iret
in
mov
in
cmp
xor
dec
push
mov
cmp
adc
mov
jne
mov
imul
cmp
xor
jne
mov
pop
cmp
sbb
lds
popa
jecxz
pop
shll
pop
fidivl
clc
xchg
sbb
insb
or
or
out
inc
sub
repnz
cmpsb
inc
cmpsb
xchg
cmc
cmpsl
mov
out
or
pop
pushf
push
xor
mov
cmp
lcall
addr16
insl
xor
lret
dec
xor
divb
lret
inc
daa
sub
xchg
sbb
xchg
lahf
mov
sbb
mov
imul
insl
rorl
pushf
pop
dec
fimuls
inc
xlat
ret
je
inc
sub
aaa
je
fdivr
and
sub
xor
mov
add
fs
inc
sarl
insb
pop
jb
sbb
xchg
call
xchg
movsb
in
icebp
cmp
imul
je
jo
inc
int3
imul
lcall
mov
in
lds
jno
cmp
nop
mov
add
mov
out
push
repz
cld
call
into
xor
dec
int
fcompl
outsb
nop
push
xchg
pusha
leave
and
out
jno
fnstenv
cld
int
sahf
aaa
cmp
mov
movsb
insb
es
repnz
fisubrs
pop
loopne
outsb
or
in
pop
mov
les
inc
and
mov
test
and
imul
fisttpl
inc
dec
cli
sub
adc
push
sarw
sub
pop
cwtl
fbld
inc
lods
fnstenv
pop
out
imul
pop
outsl
imul
sbb
sbb
subb
sbb
fistl
jle
ljmp
movsl
pop
les
in
push
mov
ret
repz
jae
pop
cmp
jmp
add
dec
dec
xchg
jecxz
fs
and
test
mov
push
bound
jp
pop
ljmp
gs
sbb
outsl
fimuls
dec
push
popa
adc
cmp
adc
insb
pop
cs
sbb
rcr
inc
into
mov
out
mov
in
jb
fldcw
push
das
les
arpl
sahf
add
sahf
lods
xchg
fcompl
mov
mov
cmp
cmpsb
xor
push
pop
cmp
jnp
cmc
cmp
pop
lock
psrlq
xlat
inc
fimuls
dec
mov
adc
jae
jo
cmpsb
mov
xor
xchg
in
filds
jne
in
dec
jge
pop
loop
mov
pop
pop
scas
mov
and
icebp
jge
jl
and
xchg
sub
popf
jmp
jae
mov
xor
out
xor
mov
mov
out
cmpsb
mov
jb
inc
xchg
das
mov
scas
pop
dec
in
or
addr16
or
and
jl
inc
stos
push
push
or
testl
jae
stc
pop
xlat
jb
jo
add
jge
rcr
push
sub
repnz
pop
gs
mov
stos
movsl
mov
out
xor
cmp
aam
popl
xchg
cmc
or
adc
jae
pop
push
movsb
sub
xchg
inc
push
test
cli
xor
cmp
fistpl
flds
cmp
push
stos
adc
xchg
lock
lcall
sar
xchg
pop
cmc
mov
rorb
lds
mov
jge
lock
mov
xor
adc
mov
mov
mov
daa
lock
jle
mov
xchg
cmpsl
sbb
jne
pop
cmp
adc
mov
inc
aas
fwait
cmpsl
jb
dec
mov
dec
push
inc
lret
cmp
stc
sub
enter
pop
add
push
cmp
daa
movb
cmp
outsb
mov
jae
hlt
clc
add
mov
jne
lock
dec
hlt
rcl
inc
inc
jns
inc
and
sbb
icebp
or
stos
mov
int
mov
into
xchg
jl
add
lods
repnz
mov
fnstsw
insl
pushf
xchg
jecxz
jmp
xor
xchg
hlt
add
adc
stos
test
cmp
sbb
rcl
xor
enter
push
adc
xor
dec
mov
das
adc
ret
aad
cwtl
rclb
mov
sbbl
pop
mov
mov
jmp
jne
sub
xor
jge
loop
stos
imul
pop
mov
test
mov
inc
mov
push
mov
loop
shrb
pop
and
dec
jecxz
push
sbb
enter
or
add
imulb
pop
adc
ret
mov
negl
out
pop
mov
add
lods
in
arpl
loope
imul
inc
inc
inc
fistpl
sarl
sub
jnp
and
mov
fwait
sbb
lcall
sti
push
scas
into
mov
fdivrl
das
in
loop
insb
in
clc
jge
popf
dec
jecxz
loop
mov
cmp
rorb
and
bts
out
jnp
add
push
je
jmp
pop
ret
mov
insl
xchg
ds
inc
sbb
out
pusha
jp
and
in
xchg
imull
mov
pop
bound
jnp
jg
das
xchg
sub
xor
and
rcl
imul
push
lds
xchg
orb
test
addr16
or
loop
inc
in
lret
and
dec
lds
loope
mov
jo
sbbb
pop
mov
test
push
pushf
mov
out
jg
sbb
sub
sahf
mov
xchg
testl
ss
mov
dec
xor
pop
leave
repnz
sbb
vshuff32x4
ja
div
push
gs
ret
imul
mov
add
js
scas
gs
pop
popa
cltd
inc
ret
scas
movsl
sub
or
cld
sbb
sub
in
popf
sar
sbb
adc
adc
lret
dec
cmpsl
lahf
cltd
xor
lock
popf
add
rclb
mov
and
and
insl
xchg
call
addr16
icebp
jnp
cli
fmull
xchg
aam
push
jae
mov
mov
push
cmp
push
mov
in
addb
dec
daa
mov
lret
sbb
mov
push
cmc
mov
cmpsb
inc
xchg
or
out
adc
cmp
mov
xchg
dec
stos
mov
mov
xor
sbb
add
inc
daa
cmp
adc
insb
sti
jnp
jecxz
sub
outsb
test
mov
repz
push
mov
mov
cmp
arpl
cmc
inc
xor
repnz
mov
xchg
stos
enter
std
push
out
mov
lret
cmp
insb
mov
add
mov
dec
loope
dec
add
sub
pusha
jmp
push
dec
jmp
jg
subl
push
fidivrs
xor
mov
cwtl
movsb
ret
ficompl
jle
lods
fstps
inc
adc
dec
pop
mov
jecxz
daa
jne
or
dec
test
ljmp
imul
ja
sbb
cmc
mov
les
stc
icebp
iret
xchg
adc
movsl
mov
mov
dec
cs
and
adc
push
and
int3
stos
lea
jg
inc
push
or
xchg
xchg
bound
xchg
push
subl
xchg
mov
push
cmpsb
and
mov
mov
adcl
jp
aaa
inc
rcrb
fwait
mov
stc
mov
inc
imul
mov
sub
das
sti
push
ret
sarb
in
rcrb
cwtl
mov
repnz
aam
cmp
push
in
mov
pushf
xor
push
cwtl
aad
fidivl
xor
sar
xor
ja
jp
fs
and
jl
pop
or
pop
aad
sbb
and
xor
mov
mov
lock
call
ja
iret
add
xorb
push
out
mov
mov
xchg
inc
popa
outsb
sahf
test
movsb
inc
jno
repz
and
dec
leave
ds
xor
lret
fbld
xchg
jmp
cmp
mov
out
in
stos
inc
lock
mov
pop
lock
pop
je
inc
xchg
testb
push
mov
cli
pop
xor
std
pop
ror
jbe
pop
jecxz
inc
lods
imul
mov
fmull
sub
in
into
sbb
cld
dec
adc
incl
stos
out
jmp
or
imul
ja,pn
in
pop
sbb
and
mov
pop
cmp
and
cwtl
ja
add
leave
movsb
cmp
or
cmp
les
xchg
dec
dec
lcall
test
ss
sbb
imul
repz
lea
out
mov
ja
jae
and
outsb
mov
adc
test
push
xchg
dec
inc
in
mov
sbb
jnp
dec
inc
sbb
and
sub
xor
shrl
jo
pushf
enter
cli
and
loopne
xlat
stos
mov
xor
xchg
push
imull
fwait
jmp
mov
jne
sbb
add
jmp
inc
jno
jl
divl
or
scas
leave
dec
std
xchg
jb
repz
addr16
or
jae
aam
mov
out
pop
adc
jle
push
imul
pop
mov
mov
in
pop
popf
lods
xor
lea
out
xchg
inc
xchg
cld
mov
cmp
and
push
xchg
cmpsl
insl
jno,pn
dec
sbb
call
loopne
adc
notb
cmc
cwtl
aam
adc
or
repnz
repnz
mov
mov
push
addr16
mov
pop
enter
es
jo
xlat
add
sub
mov
filds
cmp
mov
or
mov
cmpsb
mov
int3
pop
rclb
dec
push
rcrl
jmp
call
add
mov
xor
push
nop
mov
int3
rclb
jo
std
xor
out
xor
imul
fistl
jb
lods
push
scas
mov
mov
test
aas
repz
adc
scas
out
ja
mov
loope
in
mov
mov
jp
mov
adc
dec
mov
push
inc
adc
mov
roll
int
sti
hlt
cmp
int3
and
nop
out
xor
outsb
test
sub
dec
add
cmp
sbb
psllw
sti
ret
imulb
insl
pop
mov
pop
mov
ret
mov
dec
fisttpll
sub
lret
push
ret
xchg
outsl
adcl
mov
or
push
xor
test
insb
loope
nop
and
pop
or
cltd
lahf
add
jne
xchg
enter
imul
mov
cwtl
push
icebp
inc
lods
sbb
leave
cmpsl
pop
popf
xchg
pop
in
and
jl
popa
and
push
mov
jbe
sbb
shll
mov
dec
pop
mov
bound
jb
or
add
inc
add
mov
aas
mov
cmp
adc
jl
inc
sarb
rcrl
add
cs
loopne
aad
mov
push
jne
aam
pop
or
imul
cmp
jnp
mov
push
movsl
in
outsl
cli
nop
stos
lret
loop
lods
and
mov
jne
add
mov
and
mov
pop
movsb
or
pop
jg
insb
xchg
psrlq
mov
int3
adc
pop
mov
push
addr16
push
movsb
jl
repz
fsubp
or
pop
mov
sbb
xchg
es
push
pop
aas
data16
mov
aad
lcall
les
leave
or
xor
dec
ud0
add
dec
dec
int3
dec
cli
and
mov
jp
add
js
dec
mov
inc
and
stos
arpl
in
rcrl
push
add
xchg
bound
int
adc
xor
dec
rcrl
test
mov
add
gs
and
add
push
adc
and
and
fwait
aas
or
mov
add
mov
cltd
xor
loope
aam
xor
and
ret
xchg
sbb
dec
rolb
push
and
call
jb
aad
inc
incb
sbb
test
or
rol
sbb
mov
nop
lods
clc
std
jl
fiadds
decl
cmp
adc
repnz
pop
shl
sbb
mov
mov
dec
pop
mov
filds
rolb
mov
jo
cmpsl
mov
mov
inc
push
jecxz
xchg
imul
nop
gs
leave
aas
mov
cmpsb
jle
jno
sbbb
test
dec
push
jp
pop
mov
xchg
cmp
addr16
fsts
cmpb
aam
lret
repz
mov
mov
fidivrs
adc
mov
jle
movsb
je
xchg
dec
xor
jbe
in
loop
add
in
fsubrs
push
xchg
arpl
inc
mov
rcrb
jp
fcompl
test
push
dec
in
cmc
dec
aam
jge
mov
mov
or
xlat
and
movsb
lret
popf
insb
xor
jmp
add
dec
mov
leave
mov
orl
sub
cmp
int3
xchg
add
inc
clc
seta
adc
hlt
mov
pusha
mov
movsl
or
push
adc
enter
inc
jp
mov
or
cmpsl
negb
xor
push
sarw
add
pop
fbstp
fisubl
pop
mov
inc
adc
xor
daa
mov
push
leave
repnz
outsb
push
push
fildll
mov
or
jae
push
xchg
or
xchg
dec
mov
mov
into
pop
int3
sbb
xor
pop
mov
jno
ja
mov
xchg
hlt
adc
xor
iret
call
xor
push
mov
icebp
cs
cmp
push
sub
fsubr
inc
sbb
jg
lea
jbe
sbb
fidivrs
inc
mov
mov
pop
adc
jb
nop
push
push
push
xchg
lods
ret
mov
lea
out
jge
add
insb
pop
imul
sti
push
and
mov
imul
jmp
xchg
cwtl
lods
and
rorb
xchg
jg
push
outsb
mov
or
xor
pusha
sahf
push
test
mov
stos
nop
sub
out
ficompl
mov
add
test
jne
and
imul
mov
sahf
push
fwait
ljmp
lcall
lods
in
mov
dec
aam
stc
jns
pop
aaa
ret
mov
icebp
enter
into
xor
popa
imul
shl
mov
or
or
xor
jle
push
cwtl
notb
arpl
jl
out
lods
push
sub
sbb
pop
jns
cmpsb
mov
sub
rorb
jge
jbe
inc
dec
cltd
lret
test
dec
aam
ret
rclb
imul
sub
lods
out
fs
ljmp
pop
je
mul
std
mov
pop
mov
outsb
adc
je
sub
cwtl
push
fidivl
push
sbb
hlt
pusha
negl
into
xor
pop
ss
xchg
or
fidivrs
ds
mov
inc
scas
scas
mov
js
cmpsl
jg
xchg
fstpl
lahf
inc
loop
rep
xor
test
jnp
pusha
mov
lret
adc
outsb
stos
ret
cmpsl
xlat
sbb
neg
in
sub
scas
scas
xchg
xchg
pop
sti
or
pop
dec
cmp
xor
scas
sbb
sbb
outsl
push
call
jle
xor
jbe
mov
aaa
cmpsb
xchg
xlat
test
mov
fldcw
dec
and
sbb
dec
jmp
je
or
test
pop
ljmp
lcall
pop
mov
aam
je
cltd
push
test
int3
push
push
xchg
popf
add
mov
imul
mov
test
lret
lods
test
in
mov
fs
push
xor
or
test
jnp
add
cmp
push
outsl
mov
adc
add
mov
jp
mov
test
xchg
dec
sub
out
xchg
cmpsb
xchg
adc
sti
enter
lret
push
movsl
mov
lock
andb
outsb
in
cmpsb
cmp
adc
test
bound
adc
testb
ja
xchg
dec
scas
ret
inc
mov
in
stos
rcrb
mov
and
xchg
or
or
std
sbb
mov
mov
xchg
ret
scas
sbb
scas
jo
fdivr
xchg
xchg
push
xlat
loope
cmp
dec
inc
push
xor
mov
adc
mov
dec
pusha
insb
xchg
inc
jecxz
pop
lods
arpl
int3
insl
inc
sti
mov
mov
or
xchg
inc
ljmp
adc
sbb
mov
mov
cmc
cltd
movsl
mov
jecxz
sub
fs
mov
iret
mov
or
inc
mov
sbb
fnstsw
pushf
pushf
dec
or
movb
pop
idivl
jl
adc
dec
test
dec
es
push
ficoms
pop
xor
sar
jg
lock
inc
push
jle
sti
lds
jb
aam
insl
insb
les
rorb
inc
pop
imul
pop
pop
stc
add
push
bound
sub
push
insb
or
es
push
lahf
mov
jne
stc
mov
aam
arpl
cwtl
xor
rcll
pop
fiadds
jp
mov
fidivs
gs
pusha
hlt
cmpsl
xchg
vpshaq
lock
sahf
pop
mov
and
push
stos
pop
in
loopne
dec
jl
jmp
je
dec
mov
js
pop
fwait
arpl
testb
mov
clc
cli
hlt
cmp
push
push
mov
aaa
repnz
jg
dec
sbb
mov
in
int
sub
into
repnz
pop
push
adc
stos
jmp
dec
and
mov
jae
adc
and
std
jp
sbb
mov
iret
pop
xchg
mov
mov
dec
xchg
fwait
and
test
sbb
mov
rolb
mov
bound
loopne
lods
jg
mov
ret
popf
xor
loope
push
lret
int
dec
repnz
int3
mov
test
inc
cmp
dec
shr
outsl
xor
sahf
adc
lods
in
iret
lods
clc
add
sahf
cmp
jmp
es
xlat
or
xor
fidivrl
ss
jno
xchg
jae
xor
pushf
test
jno
push
into
test
jl
stos
pop
ret
inc
popf
insb
andl
pop
shlb
subl
sbbl
addr16
cmc
shrb
jae
xor
adc
mov
movsl
xor
dec
int3
and
jge
dec
lds
fildll
cmp
cmc
nop
lret
pop
scas
jae
mov
pushf
in
xchg
sbb
movq
mov
mov
sahf
lock
and
loop
mov
dec
bnd
pop
mov
fistpl
add
pop
stc
and
xchg
add
das
int
cs
pop
mov
scas
inc
ss
and
bound
mov
popl
test
sbb
jle
add
or
push
shll
stos
push
mov
jp
orb
pop
fs
pop
push
cmp
cmp
loopne
push
les
insl
ret
mov
je
fs
adc
stos
addb
lcall
fdivrl
pop
fsubrp
cmc
adc
push
and
and
jl
call
int
inc
adc
mov
jge
xchg
ret
mov
add
leave
or
fnstenv
cmp
inc
adc
je
mov
je
stos
aam
mov
repz
mov
fwait
iret
jae
cmpsb
lods
cmpsb
xchg
das
in
leave
dec
fildl
pusha
cmp
mov
mov
dec
mov
add
lds
inc
mov
out
cmp
rcrb
das
and
pop
ljmp
in
fs
lods
lret
mov
xchg
out
je
mov
testb
icebp
mov
and
out
mov
xchg
push
ss
and
xchg
popf
mov
mov
jle
push
hlt
inc
lock
fstps
dec
dec
jp
xlat
pop
addr16
fadds
sti
test
mov
pop
stos
lods
dec
iret
test
jo
adc
mov
in
mov
ret
mov
scas
lds
fadds
repz
out
in
jp
fnstsw
in
jo
ret
push
pop
mov
sub
les
and
out
notl
fistps
cmp
scas
xchg
jne
mov
loopne
inc
imul
addr16
and
nop
mov
pop
fisubl
mov
inc
jo
pop
outsb
xchg
repz
and
push
pop
cltd
add
push
sub
pop
mov
add
into
popa
add
movsb
movsl
add
ret
sbb
or
popl
adc
sbb
xchg
sti
adcb
mov
jo
andnps
fs
into
in
outsl
lock
push
loopne
add
mov
addr16
into
dec
inc
xchg
adc
adc
push
mov
push
ds
pop
fwait
add
pop
mov
rorl
test
push
mov
in
mov
jb
sub
negb
pop
xchg
push
into
xor
and
dec
rclb
cmp
mov
mov
sti
pop
mov
jne
icebp
or
pop
dec
push
dec
sub
inc
sahf
in
and
into
inc
test
add
xchg
stc
cmpsb
xchg
push
movsl
cwtl
lahf
pop
jg
sarl
addb
rcl
nop
iret
std
mov
je
popa
frstor
clc
inc
jno
nop
mov
cmp
repnz
movsl
xorb
addr16
mov
lret
orl
xor
sub
movsb
xor
mov
adc
cld
xor
ret
jmp
int3
jns
push
loop
movsl
in
mov
repnz
xchg
pop
imul
cmp
sbb
lock
rcr
out
mov
pcmpeqb
add
inc
xor
sub
loop
cld
fcmovnbe
jae
push
jnp
enter
cmc
mov
arpl
push
mov
sub
lods
xchg
lods
dec
outsl
pop
push
fs
outsb
leave
mov
aaa
cmp
ja
mov
lock
push
adc
or
rorl
mov
ja
add
hlt
sub
lcall
pop
stc
push
lds
jbe
pop
clc
out
lds
add
mov
fsts
bnd
nop
ja
outsl
cmc
push
cmp
negl
iret
lods
mov
mov
lea
push
inc
inc
push
aam
mov
adc
add
xchg
mov
mov
pop
stc
pop
inc
fs
inc
xchg
xchg
jg
xchg
push
mov
fisubs
arpl
mov
in
fldl2e
xchg
aaa
pusha
jae
lock
or
daa
je
fsubs
mov
sub
xchg
jg
pop
or
pop
mov
outsl
mov
push
add
sbb
or
mov
inc
mov
sub
mov
and
sub
add
push
movsl
insl
jg
jb
divb
cmc
shlb
mov
and
xchg
mov
sahf
or
jae
add
int
dec
lods
xor
lods
pop
mov
inc
mov
lods
popa
pop
lahf
ret
cmc
mov
int
imul
lcall
fwait
or
js
sub
lock
xchg
pop
pushf
cmp
fldcw
mov
cmp
insb
xchg
xchg
xchg
shlb
mov
add
insl
xchg
div
mov
cwtl
xchg
mov
insl
aam
push
inc
ds
add
cmpsl
sbb
dec
or
gs
adc
xchg
xor
les
xchg
rcrb
in
or
mov
adc
cmpsl
and
xor
xchg
outsl
dec
mov
cld
dec
imul
push
and
jo
jmp
dec
das
scas
inc
sahf
adc
lahf
aaa
popf
les
nop
jmp
mov
mov
sbb
movsb
cli
cmp
cld
jp
pushf
stc
mov
pop
mov
dec
mov
or
aas
insl
stos
and
push
cld
int3
cmp
mov
mov
ror
popa
in
addl
test
icebp
adc
push
data16
cld
or
pusha
fidivl
int3
mov
lds
push
push
ja
jnp
inc
das
dec
xor
push
sub
std
jge
and
pop
aaa
fs
outsl
mov
nop
or
mov
clc
cmpxchg
gs
sbb
mov
adc
das
mov
mov
push
outsb
scas
shr
icebp
or
push
dec
call
mov
or
xor
test
pop
xchg
test
inc
idiv
fisttps
sbb
mov
jnp
out
dec
push
cwtl
jmp
idivl
stos
test
daa
dec
dec
in
add
fsubrl
and
addr16
cmp
jno
ror
aas
adc
cltd
push
lock
pop
xorb
or
scas
push
cmpsb
into
mov
pop
sbb
add
stc
shr
mov
xchg
inc
mov
cltd
xchg
mov
cmp
or
les
insb
inc
cmp
loope
in
xchg
ret
or
loope
dec
xchg
mov
inc
sub
inc
sub
add
mov
pushf
xor
add
outsb
or
adc
inc
je
loop
insb
divb
adc
inc
jge
pop
fnstenv
xor
shl
push
repnz
and
mov
lods
das
or
loope
fimuls
fldcw
out
negb
popf
or
cld
bound
or
in
sub
jmp
cmp
inc
sub
aam
iret
or
bound
out
movsl
push
inc
mov
hlt
lods
dec
push
aam
sub
sbb
enter
aad
mov
cs
jl
outsl
jno
mov
mov
mov
xchg
shr
int
xchg
xchg
mov
xchg
jecxz
fsubs
and
pop
imul
out
push
push
and
pop
sar
shll
aad
dec
es
jns
outsl
push
cwtl
or
lret
inc
and
js
xchg
jns
rcrl
cmp
dec
shll
lret
jns
push
jle
aas
pop
mov
sub
aad
fcompl
lahf
iret
pop
insb
mov
jns
bound
pop
dec
jl
in
mov
imul
sbb
mov
iret
xorb
notb
push
mov
inc
xor
adc
push
dec
dec
vmovntpd
or
pop
inc
mov
pop
stc
sub
cltd
inc
out
outsb
push
xlat
jg
jmp
and
std
xor
jl
jo
dec
cmpsb
cli
fcoml
movsl
and
loope
sahf
das
mov
ret
inc
dec
mov
loop
sbb
test
icebp
movsl
je
pusha
ljmp
cmp
pop
shll
push
sbb
inc
ror
and
in
repnz
mov
fs
inc
popf
sti
iret
push
flds
popl
jb
cld
dec
mov
jns
push
sub
cmpsb
xchg
mov
adc
sbb
cli
xor
mov
sbb
jge
lret
cmp
orl
in
mov
pop
sbb
mov
ja
data16
push
enter
imul
jbe
call
andb
mov
cmp
mov
out
sarl
das
lods
test
stos
mov
pop
push
iret
test
les
cwtl
or
mov
filds
add
scas
pop
fldl
cmc
cmpsb
out
mov
adc
repz
add
pushf
insl
aam
mov
xchg
xor
jecxz
jmp
sub
sbb
movsb
cmp
mov
aas
mov
hlt
pusha
in
jo
jg
jae
out
decb
xor
inc
in
data16
sub
shl
sbb
add
shrl
add
inc
jge
imul
and
mov
add
adc
or
mov
cmp
mov
xchg
out
jnp
fldenv
addl
pop
mov
jne
leave
outsl
test
call
hlt
faddl
push
pop
in
sbb
enter
dec
sbb
int
push
lahf
cmp
sti
out
test
sahf
int
bound
lret
popa
rolb
push
jg
xor
push
and
pop
xor
outsl
mov
jle
fldl
sbb
aas
cwtl
mov
lret
mov
addr16
xor
ja
addr16
mov
or
adc
cli
jns
test
add
pushf
adc
mov
ja
jg
jnp
mov
jo
xlat
pushf
mov
test
in
rorb
sahf
adc
pop
mov
pop
mov
mov
pop
imul
lods
xchg
sbb
pusha
pop
lea
mov
test
ss
lods
add
cmpsb
mov
fsts
dec
and
push
loopne
scas
imul
std
fstpt
push
xor
out
out
pop
stos
imul
mov
xchg
xor
sarl
dec
pop
or
fucomi
dec
push
sti
dec
ror
sbb
leave
mov
les
into
shrd
pushf
push
in
or
cwtl
sbb
in
inc
xor
adc
stos
xchg
int3
lret
in
adc
shr
adc
icebp
cmp
push
mov
push
add
xchg
mov
inc
lock
mov
or
sub
mov
dec
cli
and
push
cmp
movsb
and
add
jge
rclb
add
jg
push
loop
rcrl
dec
data16
lock
ja
pop
adc
mov
loopne
cmp
addr16
sarb
sarl
sub
inc
pop
inc
cmpsb
lahf
test
rorb
push
fldl
subl
push
loop
cltd
das
add
mov
movsb
mov
push
nop
stos
or
arpl
push
or
cmp
andb
sti
sub
ret
cmp
sub
pop
push
out
push
mov
adc
mov
push
xchg
popa
rcrb
inc
cmp
rolb
pop
loope
sbb
cs
lret
fildll
daa
test
lret
movsl
shll
or
mov
and
mov
inc
call
dec
xor
lcall
jo
ja
test
imul
xchg
jae
jns
xchg
mov
fists
mov
in
jp
cli
cmp
fs
adc
xchg
dec
movsb
rep
push
jns
ficoms
inc
mov
iret
mov
in
or
mov
pop
sub
lds
lds
push
mov
lea
lock
in
les
stc
mov
cmc
scas
xlat
shll
jl
icebp
in
lea
xor
cwtl
fs
dec
fcompl
das
inc
inc
out
lea
mov
shll
insb
repz
lods
shl
popf
fisttps
push
pushf
outsl
insb
sub
jne
imul
fnstenv
sbb
inc
pop
push
cmpsl
in
xorb
xor
filds
cmp
pmullw
mov
in
into
fcoms
add
or
adc
lcall
cli
dec
inc
mov
imull
addr16
and
aaa
mov
mov
outsb
mov
mov
xlat
adc
push
cmc
sbb
push
ret
into
lret
and
ror
icebp
fcos
pop
cli
xor
loop
fdivrp
adc
mov
test
stos
std
jnp
out
pop
out
dec
jmp
lahf
and
jne
xlat
and
pop
test
out
pop
mov
ds
dec
fildll
inc
mov
sti
mul
mov
cwtl
out
stos
mov
mov
cmp
and
xor
fcmovnbe
dec
into
and
outsl
cmp
inc
lret
repnz
leave
std
ds
add
inc
cmp
cmp
xchg
jae
and
lods
xchg
push
bound
add
jo
repnz
and
xchg
push
aad
rol
mov
es
mov
mov
ljmp
jp
xor
lods
decb
xor
shl
div
inc
inc
and
xchg
jb
adc
stos
fists
push
mov
push
cmp
add
ja
cmp
xchg
jp
mov
and
insl
cmp
inc
pop
inc
out
shlb
neg
pop
lock
fwait
push
jg
jns
dec
mov
sahf
clc
dec
into
loop
pop
cmp
es
insb
jmp
aaa
stos
xchg
lret
addr16
dec
mov
out
mov
mov
and
mov
add
ds
xchg
sub
mov
xchg
int3
inc
or
sbb
movsl
pusha
insl
test
cmp
xchg
rorb
fimuls
mov
cltd
lret
xchg
jno
stos
add
addr16
aas
and
lock
add
movsl
xchg
sub
push
or
fisubrs
int3
cmpsb
les
out
repz
insb
mov
adc
sahf
repnz
sbb
push
lcall
es
aad
iret
test
movsb
ss
addb
fdivrp
in
cmpsb
ss
out
pop
cmp
test
in
imull
loop
jno
mov
xchg
push
adc
mov
or
xor
notl
dec
test
daa
vpaddb
mov
adc
pop
test
jbe
mov
test
sub
mov
mov
fwait
add
out
push
pop
jae
jb
cmpb
jno
add
jne
test
sahf
jecxz
sub
adc
and
arpl
stc
jge
mov
jecxz
insl
ss
lret
adc
test
xor
jl
pusha
jmp
and
iret
jae
dec
xchg
in
aaa
jle
scas
jnp
xor
loopne
cmp
scas
inc
in
jae
in
adc
cmp
push
fnsave
sub
add
les
enter
adc
loop
out
aad
cmp
inc
sub
push
xor
lret
insl
mov
xchg
aad
jo
repz
repz
xchg
or
nop
jecxz
inc
jne
enter
cmp
js
xchg
sub
rorb
addr16
repz
adc
sbb
aas
dec
or
daa
sub
clc
mov
fmul
mov
mov
push
pop
ljmp
add
fcoml
fildll
fnsave
inc
shlb
jl
insb
push
xchg
andl
sarb
inc
ret
add
lds
test
data16
in
fs
dec
push
xor
addr16
fdecstp
shlb
shlb
sbb
fs
gs
and
push
out
int3
flds
and
jne
lcall
rol
mov
je
xor
cmp
jmp
movsb
jns
push
adc
je
outsb
cmp
dec
rcrb
jnp
dec
adc
pusha
jmp
dec
movsb
mov
lods
and
repnz
pop
xchg
adc
int3
shl
mov
pushf
inc
pushf
lret
shll
mov
pop
xor
sub
mov
fstl
push
pop
mov
movsl
cmp
movsb
cmp
cmp
mov
mov
icebp
and
or
sbb
loope
daa
clc
rol
outsl
decb
dec
mov
in
jne
xchg
out
jnp
lock
pextrw
sbb
add
mov
sub
sub
lea
push
jae
fwait
add
insl
pop
inc
cmp
and
and
xchg
jo
out
adc
cmpl
clc
dec
inc
out
and
xor
cmp
xchg
sbb
pop
xor
in
push
call
xor
push
push
cmp
and
jge
mov
pop
fwait
rcll
aam
jns
pusha
pop
mov
ret
das
icebp
in
xchg
incl
arpl
pop
leave
and
jo
imul
lret
sub
ss
cmpl
xor
dec
gs
insb
sbbl
push
add
cmc
jmp
cli
imul
test
out
iret
ficoml
or
and
mov
leave
pop
scas
sahf
jg
mov
mov
lods
ret
cmp
icebp
gs
stos
jmp
adc
frstor
insb
fsubr
sub
movsl
scas
jp
lds
and
mov
sahf
adc
enter
cmpsb
xchg
addb
jmp
cmp
leave
pop
mov
mov
mov
inc
mov
fwait
adc
fs
xor
outsl
push
hlt
sub
mov
daa
mov
mov
loop
lock
dec
and
enterw
test
ljmp
mov
mov
insl
cwtl
push
clc
mov
xor
test
lret
adc
jb
xchg
xor
iret
xor
js
or
mov
jl
cwtl
loope
cld
enter
push
adc
in
js
push
push
fwait
dec
sub
jbe
mov
ja
push
xor
inc
dec
inc
test
add
mov
xor
mov
and
sub
cmpsl
push
xor
jge
sbbl
dec
jb
pushf
je
pop
and
pop
mov
loope
rcr
stc
test
scas
mov
arpl
roll
dec
lahf
dec
insb
hlt
cli
mov
movsl
xchg
add
daa
cmc
fsub
scas
lret
mov
add
sub
add
sbb
cmp
inc
inc
mov
mov
pushf
mov
cwtl
add
fsubrp
in
sub
jge
push
pop
mov
xchg
mov
icebp
pop
pushf
je
lcall
imul
decl
xor
jmp
cmp
mov
mov
hlt
insl
imul
test
pop
scas
jnp
cwtl
pop
imul
lahf
sti
jg
mov
shll
cli
outsb
sbb
mov
adc
lret
ljmp
jbe
add
mov
mov
cmp
xor
icebp
fiadds
ud0
mov
pop
subb
xlat
sbb
push
dec
adc
add
movsb
dec
je
ja
dec
dec
sbb
cmp
cwtl
xlat
push
add
push
test
rcll
hlt
xchg
add
repz
repz
inc
mov
and
and
mov
scas
fimull
pushl
pusha
pusha
adc
jl
fimull
inc
data16
pop
in
or
xchg
stc
mov
dec
push
sahf
add
jl
test
add
push
sbb
mov
inc
bound
leave
mov
push
test
inc
dec
xchg
jge
push
cltd
data16
push
xchg
push
jno
mov
lcall
jbe
sub
mov
pop
mov
lahf
mov
lcall
xor
mov
or
mov
pop
jp
scas
xchg
pop
xchg
xchg
ret
xlat
add
loopne
or
and
xchg
push
push
sub
aaa
and
adc
mov
push
and
rorb
stos
leave
pop
incl
repz
pop
cld
cmp
push
aas
sbb
mov
ds
lock
fldcw
or
mov
xchg
push
arpl
or
cmp
jbe
adc
pusha
js
cmpsl
xchg
jge
decl
pop
or
bound
fcompl
adc
jbe
and
push
add
mov
inc
or
mov
sub
pop
lods
mov
int
adc
cmp
aad
popf
add
outsb
les
clc
xor
pop
mov
fisubl
push
mov
mov
xor
aas
daa
pop
mov
out
or
ljmp
mov
call
daa
rolb
xor
mov
jae
pop
cmp
lods
popa
outsl
inc
mov
out
shl
pop
lods
insl
loopne
int3
gs
sbbb
insb
xchg
shrl
pop
mov
and
jl
dec
dec
andl
int3
xor
mov
jle
rcr
jge
test
jb
scas
mov
icebp
sbb
jmp
test
and
pop
sub
pushf
repnz
imul
xchg
divl
jbe
repnz
xor
cltd
enter
loope
je
pop
xor
movsl
push
cmp
cli
and
test
js
or
stc
inc
xor
in
cmc
add
pop
mov
iret
pop
or
adc
inc
inc
and
test
fcmovu
mov
cmc
cmpsl
aam
arpl
das
mov
enter
sub
or
jge
mov
jbe
jae
add
test
imul
cltd
jmp
das
cld
push
jp
mov
idivl
or
mov
inc
lahf
out
jbe
sub
or
or
cmp
inc
mov
mov
push
cmp
sti
int
sbb
dec
movsl
mov
daa
mov
xor
push
push
sbb
rol
jp
movsb
cwtl
popf
sbb
test
inc
dec
sub
or
popa
dec
lds
je
addl
cmc
mov
data16
stos
mov
pop
dec
das
or
dec
inc
clc
cmp
xor
subl
int
dec
movsb
push
jge
or
jae
pop
cmp
jo
push
inc
inc
sub
add
xchg
and
push
and
inc
sbb
xchg
or
sti
or
divl
and
mov
mov
cmp
xor
in
mov
cmpsb
mov
push
add
pop
mov
or
push
or
mov
daa
mov
xor
sbb
and
clc
mov
lret
popf
imul
aaa
jbe
lods
or
sbb
lret
mov
pop
lret
popa
fstpl
sub
push
test
hlt
xor
cmp
cmp
adc
push
mov
push
push
fwait
pop
dec
daa
testb
in
je
fisubl
hlt
insl
jb
mov
xor
push
js
lahf
jo
mov
mov
rorb
push
sub
fwait
jnp
cmp
dec
dec
test
and
add
in
lods
or
into
or
movsb
nop
xor
xor
aas
mov
adc
push
mov
rorb
and
mov
cmp
test
arpl
add
mov
fisubrs
nop
xor
cwtl
push
pop
dec
lea
test
xor
repz
ljmp
push
aaa
bound
pop
sub
or
test
divb
jg
mov
jns
sbb
rcr
xor
cmp
add
sbb
pop
in
lods
xchg
sub
arpl
dec
push
out
sub
repnz
imul
scas
sbb
sub
lock
xchg
out
xchg
or
mov
repz
sub
inc
ficoml
pop
xchg
cli
cmp
xchg
lds
dec
movsb
pop
repz
mov
inc
dec
inc
pop
pop
push
idivl
lds
icebp
outsl
gs
in
xchg
mov
pop
jp
jg
pop
mov
test
mov
xor
std
mov
dec
out
or
cmp
cmp
push
mov
xchg
fsincos
dec
cmp
xor
cmp
shrb
mov
mov
ffree
xor
gs
and
scas
mov
out
add
rorl
sbb
dec
hlt
lcall
stos
sub
adc
xor
arpl
push
pop
push
out
repnz
mov
inc
aad
int3
sub
std
scas
sbb
xlat
pop
pop
or
mov
fisubs
fwait
mov
fstps
into
xchg
sbb
xor
and
jno
xor
ja
mov
cmp
lret
movsb
decb
lods
jmp
xchg
stos
dec
pop
pop
popa
lcall
sarb
loopne
mov
lods
xchg
mov
adc
incl
jecxz
hlt
and
movsb
daa
lret
cltd
dec
pop
inc
ret
mov
aam
mov
push
insb
ljmp
test
jb
loope
xchg
fnstcw
mov
int
mov
leave
pop
orl
outsl
testb
je
jmp
enter
arpl
mov
cmp
xchg
out
imul
inc
or
cli
xchg
lret
xchg
adc
stos
icebp
adc
xchg
xor
mov
stc
push
scas
xchg
cmp
sahf
xor
loop
aas
cwtl
push
mov
cli
loope
mov
xor
iret
add
inc
jmp
xchg
xor
and
ret
adc
mov
aaa
addr16
scas
je
and
mov
lret
les
mov
xchg
mov
pavgb
test
ficoms
jge
dec
test
loope
into
jne
imul
cmpsl
inc
movsl
sbbl
jge
adc
add
mov
orl
out
rcr
lret
shlb
inc
and
movsb
mov
xor
push
cmp
std
jp
mov
sbb
std
popa
scas
cmp
mov
enter
movsl
popf
add
mov
cmp
or
mov
xchg
leave
test
sbb
pusha
sbb
cltd
push
jns
pop
add
je
lret
call
inc
test
push
push
ret
insl
adc
dec
xchg
rorl
or
jge
and
xlat
or
sbb
xchg
call
mov
imul
dec
push
xchg
and
lahf
xor
xchg
js
iret
cs
mov
inc
add
sbb
add
outsb
xchg
adc
ret
rorb
or
xchg
ret
xlat
and
jle
or
pop
test
ret
adc
lods
out
sahf
push
xchg
lahf
insb
sbb
ja
movsb
fstl
out
mov
lds
jo
jae
pop
mov
sbb
das
adc
mov
aas
out
imul
mov
lret
test
lods
in
repnz
mulb
loopne
imul
mov
aaa
insb
in
mov
into
or
sub
insb
mov
mov
test
mov
loopne
add
inc
xor
hlt
enter
int
int3
outsl
add
add
adc
mov
inc
bound
sbb
jne
pop
jb
fcmovnb
std
xor
push
mov
sub
inc
testl
adc
std
dec
mov
push
stc
das
xchg
arpl
sti
test
jecxz
test
mov
xchg
lcall
push
inc
sbbl
or
lea
pop
testl
testl
mov
aaa
add
xchg
cmpsl
jne
add
cwtl
testb
push
outsb
cltd
arpl
dec
sbb
iret
cmp
fidivl
push
dec
jae
add
insb
fimull
cmp
test
xchg
lock
sti
jno
push
dec
fmul
jecxz
ljmp
push
cmp
add
cmp
sub
out
xor
xchg
out
adcb
divl
lock
lcall
cmp
add
add
fidivrl
repnz
xor
jb
aaa
sub
lret
out
inc
sbb
movsl
or
mov
les
cwtl
insl
pop
cmp
sub
lds
add
push
orl
add
mov
inc
mov
out
inc
dec
xor
test
cmp
add
add
xor
lahf
sahf
into
mov
inc
sahf
iret
push
jg
jmp
ljmp
les
inc
xchg
xor
cmp
aaa
sub
jmp
shrl
dec
and
shll
lds
lds
mov
lret
fstp
add
dec
pop
xor
in
repz
in
adc
xchg
adc
fsubrs
mov
jl
xor
imul
orb
pop
push
repnz
push
aad
xor
dec
push
xchg
stc
jp
xchg
sahf
jg
out
out
leave
and
add
shl
icebp
pop
add
xchg
sbb
mov
cwtl
jae
pop
insl
nop
add
mov
xor
jecxz
add
mov
loope
push
addr16
push
popa
sbb
outsb
jno
fstl
lods
ss
adc
aam
sbb
pop
mov
mov
jns
jbe
scas
cmpsl
cmp
jmp
pop
cmpb
and
popl
cmp
push
jecxz
inc
cmp
push
push
es
leave
jecxz
mov
mov
mov
inc
aad
xchg
test
adc
mov
sub
mov
sbb
mov
jnp
pop
sbbl
xchg
dec
xor
loop
mov
sub
lret
ret
cwtl
xchg
mov
xchg
popf
jmp
lcall
mov
fimuls
or
or
in
aad
cmp
xor
cli
insb
ret
cmp
pop
icebp
mov
pop
sti
sub
jnp
inc
xlat
enter
or
mov
sbb
and
repz
test
aam
das
sti
sub
pop
jle
scas
aas
xchg
sub
push
lret
or
lahf
dec
xchg
xor
sub
xchg
in
xlat
aaa
jg
rclb
and
sub
jnp
out
add
fildl
in
dec
lods
xor
icebp
pop
pop
andl
rolb
add
call
dec
test
outsl
mov
les
fdiv
bound
rcrb
jb
push
roll
outsl
mov
adc
popa
mov
jne
or
mov
fwait
lahf
ret
adc
stc
out
sbb
inc
in
push
test
addb
and
inc
test
cmp
loopne
mov
lahf
xor
sub
cmp
and
push
mov
mov
mov
add
cmp
add
scas
and
cmp
adc
lds
cld
sbb
xchg
and
mov
cmpsb
ss
fs
hlt
jl
enter
mov
push
cld
adc
data16
mov
mov
mov
lahf
and
negb
call
in
ljmp
fs
or
sub
js
mov
iret
inc
adc
mov
mov
mov
loopne
sbbl
xchg
pop
arpl
int
les
xchg
daa
arpl
mov
aad
pop
lahf
push
incb
lcall
push
push
xor
dec
test
jmp
jp
pop
lret
addr16
inc
xchg
sbb
je
push
xchg
sub
add
add
rol
addr16
mov
nop
and
dec
xchg
js
fidivrs
and
cwtl
ret
jmp
pop
mov
sub
gs
and
mov
mov
daa
jb
xchg
fmuls
adc
fwait
inc
sbb
gs
sbb
lret
and
mov
inc
inc
pop
xchg
inc
push
jge
hlt
scas
jne
add
ret
cmc
mov
xchg
aaa
xchg
pop
push
repnz
cmp
rcll
cmp
add
fcoml
imul
push
adc
push
in
loopne
loop
pop
jnp
cli
mov
jp
mov
xchg
adc
or
jne
inc
lds
dec
cmpsl
js
cmp
jmp
cwtl
sub
and
es
dec
or
inc
test
outsl
push
add
add
mov
jns
scas
cwtl
fldl
push
imul
jnp
xchg
leave
pop
sub
js
pop
cmp
fdivl
mov
add
adc
fwait
push
cmp
pushf
loopne
sahf
pusha
xor
sti
inc
jne
std
add
mov
adc
stos
mov
xlat
push
shlb
sbb
fidivl
nop
xchg
xchg
test
cmc
lds
ret
in
mov
stc
dec
mov
ficoms
push
fbld
sub
test
loopne
push
popf
sarb
fcmovnbe
nop
xchg
cmp
push
xor
mov
fstpl
in
adc
dec
je
hlt
fcomps
pop
in
xchg
clc
adc
push
pop
lods
jge
push
je
jg
and
movsl
mov
jnp
push
in
pop
cmp
arpl
sti
mov
pop
or
mov
and
push
lock
scas
ret
add
push
lret
mulb
leave
push
cmc
lock
push
dec
incb
and
gs
pusha
add
les
push
push
testb
xchg
mov
addr16
aas
stc
imul
push
repnz
das
ss
std
jo
lcall
adc
mov
popa
and
rolb
cwtl
popa
sarl
das
xor
pop
cmp
mov
mov
mov
dec
and
ficoms
mov
dec
iret
loopne
mov
cli
loop
insl
call
xor
inc
dec
cmp
jg
fwait
sbb
aad
push
jae
ja
sub
mov
sub
mov
mov
fidivrl
jno
mov
aaa
repz
or
frstor
hlt
jns
mov
mov
ret
jns
xchg
lret
out
jl
cmp
xor
push
nop
call
xchg
test
incb
adc
lock
add
in
or
outsb
repnz
inc
sbb
jb
push
pusha
and
ja
push
int
cmp
popf
pop
mov
sub
daa
repnz
stos
mov
fwait
push
outsb
mov
jge
lea
mov
icebp
mov
or
pop
in
mov
movsl
pop
add
push
cmc
ds
adc
mov
xor
fucom
pop
xor
subl
jl
fidivs
aaa
dec
sbb
xchg
pushf
xchg
pushf
bound
aad
push
cmc
push
aas
mov
mov
jmp
ss
mov
mov
cmp
aam
pop
pmuludq
jb
add
daa
cmc
xor
cli
ja
daa
icebp
cmc
jecxz
or
imul
xor
leave
lret
pop
sub
sbb
fwait
jecxz
es
lods
and
loop
fisubl
in
jle
call
scas
push
pop
outsb
sub
sahf
add
enter
cmpl
out
sbb
int3
repnz
pop
fnstenv
popf
testb
jg
lret
shrb
and
push
or
lods
dec
adc
ret
lds
repnz
imul
mov
cmp
xchg
push
rorl
adcl
aad
out
dec
mov
stos
or
jl
jg
jb
and
dec
mov
mov
les
test
adc
out
xor
sub
dec
jmp
add
mov
sub
add
aam
push
cmp
mov
xchg
mov
inc
insl
int
or
gs
or
fbld
repz
mov
into
or
pop
fwait
mov
ret
mov
fldl
jg
ret
nop
iret
push
ds
out
fwait
rep
cmp
pop
addr16
cmp
push
movsl
mov
or
test
neg
and
ss
cmc
xor
xor
lcall
sub
dec
inc
imul
or
cmp
pop
mov
cmp
in
and
loope
pop
mov
push
push
push
inc
addl
int
out
cmp
pop
aad
push
or
push
sbb
dec
lock
push
cmp
outsl
jbe
and
dec
out
sbb
shll
sub
jge
xchg
xrelease
adc
mov
dec
push
xchg
xor
int3
sub
jmp
adc
mov
vpmacsdql
mov
push
cwtl
mov
push
in
popa
push
iret
cmpsb
icebp
cmp
out
fwait
cltd
movsb
inc
cmp
pop
enter
enter
enter
bnd
cmp
aam
jne
xchg
sbb
pop
je
dec
cmp
push
sti
adc
cmp
movsl
mov
sub
cmp
addr16
jns
rorl
rorl
xor
dec
js
dec
shll
shlb
test
sub
insb
xchg
divb
push
cmp
fidivs
pop
in
mov
adcl
std
sub
cmp
inc
jns
or
mov
jbe
cltd
movsl
sub
out
clc
jl
fnstcw
inc
push
lods
mov
inc
push
aam
add
jmp
cmc
leave
xchg
adc
or
and
mov
xchg
je
sub
adc
cmp
popa
mov
xchg
rol
shll
out
orl
mov
push
scas
push
cmp
inc
jmp
pop
pusha
dec
out
inc
inc
xchg
fadd
mov
addr16
rcrl
gs
loopne
mov
pop
les
adc
push
dec
mov
loop
out
pusha
push
inc
outsb
int
jmp
call
das
iret
inc
mov
xor
icebp
hlt
push
add
mov
jae
xchg
jns
mov
cmpsb
lds
repnz
nop
jge
lcall
fldl
lods
adc
popa
icebp
adc
imul
out
in
mov
xchg
rcll
xchg
mov
bnd
decl
pop
mov
push
add
mov
loopne
pop
pop
push
lcall
mull
js
cmp
cld
clc
popf
push
dec
mov
inc
pop
das
popf
fmull
adc
fisttpl
xchg
out
scas
cmpsb
xor
cli
sub
add
negb
push
std
xchg
cli
sub
adc
insl
fsubrl
xchg
das
rorl
pushf
inc
lret
gs
and
ss
fadd
aas
or
mov
out
jl
icebp
mov
pop
cltd
mov
adc
sub
daa
lcall
push
pushf
arpl
ret
inc
pop
mov
cmp
scas
cs
cmpsb
sub
xchg
repz
add
into
test
add
push
xor
xor
add
cmp
sbb
and
adc
xlat
cli
mov
rolb
sti
mov
mov
xchg
lret
ret
xchg
dec
jbe
ret
aas
repnz
xor
push
insb
mov
bound
pop
sbb
stc
test
int
add
mov
pop
call
cmp
push
add
scas
aaa
jle
aam
dec
je
add
and
add
add
inc
mov
push
gs
repz
lcall
cmp
cld
push
dec
pop
mov
jae
adc
dec
add
sbb
pop
dec
mov
pusha
cmp
aas
in
cmc
jo
pop
sub
lods
sub
pop
mov
adc
std
stos
cltd
sbb
adc
mov
sahf
call
pop
lahf
pop
enter
test
out
nop
pop
fnstsw
idiv
or
jo
sti
push
push
jns
sub
or
mov
stc
push
rolb
mov
call
adc
bound
push
adc
mov
stos
pushf
xchg
sbb
jno
std
cmpb
add
inc
daa
sbb
data16
pop
xchg
movsl
orl
gs
enter
add
sbb
xor
and
adc
je
dec
js
pusha
inc
sti
jmp
pop
jns
rcll
jmp
cltd
and
clc
lods
stos
dec
inc
imull
inc
test
sub
sbb
call
push
jnp
lea
push
cmp
pop
jbe
aas
hlt
xchg
xchg
outsb
js
dec
shrl
pushf
and
lret
dec
adc
mov
and
call
mul
xchg
imul
push
ja
jmp
push
aam
adcb
mov
fs
out
mov
xlat
adc
popa
fsubl
mov
adcl
xchg
lret
loope
stc
pop
pop
addr16
add
pop
repnz
lds
in
push
cld
xor
lahf
push
jl
clc
popf
movb
xchg
pop
jo
mov
adc
xchg
nop
scas
ds
mov
nop
movsb
inc
sbb
stos
pop
dec
int3
jae
cmp
jle
jle
fwait
repnz
mov
cmp
and
movsb
mov
repnz
dec
cmp
mov
dec
fsub
jo
xorl
rcrb
mov
out
xchg
or
mov
mov
inc
in
out
dec
mov
push
incb
pushf
dec
xchg
clc
cs
mov
stos
mov
mov
ret
xchg
js
js
or
rcl
dec
jno
movsb
jns
adc
sbb
outsl
dec
ret
push
mov
movsl
flds
xchg
dec
shlb
pusha
add
mov
push
add
daa
cmpsl
mov
in
fs
arpl
ss
xor
pop
add
fcmovnu
fstpl
pop
jecxz
cmp
inc
insb
jmp
or
or
in
jmp
jmp
mov
out
jg
push
outsb
les
pushf
jo
scas
icebp
dec
dec
mov
sub
adc
out
mov
sbb
rorl
cmp
int
idivb
adc
out
lds
sbb
hlt
icebp
xor
cld
imul
xchg
push
lds
popa
mov
outsb
jle
inc
fsubs
jecxz
sbb
mov
and
push
push
lds
or
and
mov
add
inc
daa
jns
pusha
push
aaa
lds
dec
jnp
icebp
inc
or
jne
xor
xor
je
scas
test
pusha
sub
or
icebp
das
jnp
es
dec
xchg
mov
sub
push
push
pushf
rorb
mov
addr16
xchg
leave
and
int3
pop
mov
cltd
aaa
jecxz
cmc
cltd
ror
lret
add
popa
bound
or
fildll
scas
xlat
stc
imul
inc
orl
mov
xchg
shll
ds
cmpsl
lahf
xchg
sbb
cld
popf
lret
std
pusha
dec
inc
je
push
push
pop
fcomi
adc
je
dec
shrb
jnp
xor
jg
subb
add
inc
rorl
mov
adc
mov
push
fcomp
shl
adc
xchg
sub
push
xor
pop
cmpsl
mov
test
imul
and
scas
cmpsl
push
or
adc
loope
jmp
scas
lea
mov
pop
imul
push
mov
jp
sbb
mov
inc
cmc
mov
outsl
pop
mov
les
lds
xchg
adc
insl
mov
xor
cmpsl
jne
cmp
xchg
jbe
arpl
xor
in
ret
sbb
bnd
cld
enter
fs
and
push
pusha
mov
xor
mov
pop
dec
adc
pusha
enter
add
mov
je
shlb
fidivrs
jle
iret
mov
push
pop
mov
inc
js
gs
push
dec
call
mov
lcall
insb
hlt
push
imul
adc
pop
add
cmp
mov
mov
push
jae
nop
int
out
js
cmc
fsub
fimuls
mov
sti
idivb
xor
fcmovb
push
sub
mov
xchg
cmc
pop
jns
xor
mov
lret
clc
cmpsb
sbb
daa
int3
jmp
stos
leave
dec
xchg
inc
pop
jecxz
ss
mov
xchg
stc
sub
mov
jg
lods
in
push
ljmp
jmp
ds
out
fs
jno
mov
sahf
mov
mov
aad
loop
xchg
fisubrs
xor
cwtl
inc
fwait
jmp
sbb
sub
add
aaa
inc
push
cmpsl
jmp
neg
sub
cwtl
lods
in
js
bound
mov
bnd
xchg
cmp
fistpll
mov
scas
das
mov
mov
loopne
popa
mov
mov
hlt
adc
imul
push
mov
ss
dec
cmp
movsb
sbb
andb
push
std
mov
mov
test
push
inc
sbb
mov
imul
insb
or
test
xchg
sbb
roll
insb
dec
gs
mov
call
jecxz
out
sub
jo
daa
and
xchg
das
aad
adc
ss
je
pop
lods
pop
mov
pop
add
pop
aad
cmp
inc
add
mov
push
aam
aad
push
fidivs
div
sbb
push
ret
imul
and
pop
enter
jno
adc
enter
jl
push
adc
addr16
call
hlt
mov
sbb
sbb
cmovg
push
lahf
icebp
xor
add
lcall
pop
inc
testb
sub
sub
clc
cmp
mov
lods
inc
lcall
ss
sbb
mov
sub
aaa
push
push
mov
or
clc
jbe
out
leave
shll
ret
subl
pop
movsl
jno
loop
jns
repnz
xchg
mov
cmp
fwait
adc
cmp
aad
cmp
mov
lret
movsl
mov
xchg
ret
daa
bsr
jp
pop
inc
cmp
or
inc
xor
repnz
jge
cwtl
xorb
dec
stos
jno
mov
das
test
jne
dec
pop
insb
pop
lahf
lret
imul
xor
pusha
pop
push
daa
inc
push
or
xor
sti
aaa
pop
inc
sbb
jmp
dec
icebp
loopne
sti
fistpl
and
daa
popa
sbb
jmp
out
and
aam
rcrb
fisttps
pop
test
inc
and
leave
add
dec
or
inc
imul
in
lahf
push
outsl
notl
jecxz
pop
in
mov
jns
mov
sahf
outsl
push
std
loope
shll
mov
add
xor
push
sbb
and
ja
ret
rcll
mov
mov
mov
push
jo,pt
je
push
push
inc
pop
jmp
mov
dec
in
adc
or
sbb
xchg
mov
adc
mov
and
xor
and
aam
iret
mov
cltd
mov
les
mov
mov
mov
sbb
cmp
outsb
push
jbe
dec
js
push
lds
inc
or
int3
popl
mov
mov
int3
or
hlt
adc
into
pop
std
push
mov
sub
push
fistps
in
xlat
ret
shlb
sub
mov
xor
xchg
mov
inc
push
pandn
cmp
and
out
rcrl
lods
inc
fstps
mov
or
adc
lcall
arpl
movsb
mov
fldl
in
push
fsubp
movsl
ljmp
and
insb
jns
popf
cmpb
lahf
push
repnz
push
outsb
mov
loope
je
stos
cmc
lods
pop
mov
sub
out
arpl
xchg
out
push
test
pop
std
call
mov
or
mov
sub
push
adc
pop
cmc
mov
movb
rcr
bound
or
hlt
cwtl
test
cwtl
stos
push
test
cli
rcrl
lock
pop
mulb
mov
dec
mov
adc
mov
fucomi
imul
inc
inc
and
test
test
mov
mov
sahf
notl
je
arpl
mov
dec
inc
pushf
das
mov
push
cld
inc
int3
repnz
lret
jg
fildll
xor
push
mov
lds
xor
pop
jl
sub
ficompl
mov
and
iret
dec
test
adc
std
jbe
out
mov
into
sbb
mov
or
lods
xchg
sub
imull
sub
test
sbb
mov
inc
or
mov
mov
scas
ret
jmp
mov
jbe
mov
jno
int3
aas
cmp
add
sub
pop
jecxz
rclb
rorb
xorb
arpl
fsubs
into
das
or
sbb
adc
scas
dec
arpl
stc
test
stos
pop
lods
fdivrl
ja
inc
push
cmp
scas
mov
xchg
cmp
xchg
stos
cmp
push
ficompl
inc
mov
test
xchg
repz
jecxz
mov
ret
dec
aam
insl
mov
or
nop
cmpb
stos
mov
pop
shr
mov
xor
lods
or
outsl
sub
push
and
mov
addr16
and
add
popa
add
and
cltd
push
fdivs
test
xchg
mov
xchg
fcompl
repz
jbe
dec
xchg
pushf
out
mov
cmp
sbb
sub
jle
js
mov
ja
out
mov
stos
lods
mov
push
push
test
mov
int
sarb
leave
cmpsl
mov
imul
cmc
pop
pushf
loopne
pop
outsb
stc
stc
inc
sub
in
shll
mov
les
scas
inc
dec
inc
fisubrs
cmp
cwtl
pop
sub
jbe
loop
nop
cmp
jne
xchg
jb
mov
lds
mov
repz
into
lcall
push
test
inc
push
dec
xchg
fwait
loopne
or
and
imull
iret
js
jg
aaa
jmp
pop
mov
ds
jbe
dec
iret
dec
dec
adc
shll
inc
es
xchg
jmp
shl
movsb
xchg
jp
pop
addr16
outsb
sub
leave
or
xchg
and
shll
scas
es
sbb
insb
out
arpl
xchg
jg
pusha
ja
jae
into
dec
jg
movb
push
xor
fcoms
inc
outsw
inc
push
stos
sbb
sbb
pushf
jle
sbb
inc
jl
jg
mov
push
cmp
sub
adc
ficompl
imul
jb
aaa
mov
inc
clc
mov
scas
mov
jge
or
lds
push
cwtl
sbb
adc
into
mov
movsl
add
divl
lods
in
add
jmp
sbb
stos
jbe
xchg
mov
push
ljmp
mov
xchg
andl
in
repnz
cmpsb
sub
ja
push
fiadds
in
adc
loop
pusha
repz
ficoms
adc
sbb
push
sarb
jne
pop
jno
nop
bound
dec
pushl
pusha
fildl
mov
fildl
and
fisttpll
dec
dec
add
dec
icebp
jae
iret
push
adc
scas
and
push
dec
ss
or
push
loope
mov
into
mov
and
mov
pop
aas
mov
pop
xor
mov
jae
imul
hlt
adc
and
mov
push
xchg
loopne
jne
lods
jne
lcall
dec
lcall
in
and
fucomp
cmp
int3
mov
or
push
ja
dec
pop
cs
imul
fimull
sub
jle
shlb
cmp
dec
jmp
inc
shrb
jno
push
dec
pop
pop
aas
or
out
adc
pop
pop
mov
adc
add
lock
ss
push
xor
and
or
mov
les
in
fidivrs
int3
cmp
inc
pop
outsb
flds
int
pop
jge
mov
jne
jmp
jecxz
subl
and
stos
lahf
mov
cld
push
clc
xor
out
push
adc
inc
testb
gs
mov
xor
out
xchg
lret
mov
adc
push
pop
push
ja
pop
mov
xchg
mov
xor
push
je
push
xor
sti
mov
or
push
aam
jns
sub
jnp
adc
adc
pop
inc
outsb
aas
adc
add
push
insb
xor
sub
stos
xchg
shll
rcrl
ficompl
xor
out
fbstp
jl
add
add
sub
outsl
popa
mov
into
add
gs
ss
dec
out
fcomps
mov
push
jecxz
push
inc
mov
pushf
mov
push
in
mov
sub
int3
pop
xchg
mov
fwait
cmp
adc
sbb
mov
lods
inc
fnstcw
xchg
stos
das
mov
push
pop
adc
mov
arpl
cmp
pop
and
lfs
mov
loope
sti
adc
push
in
sub
xchg
inc
mov
fstpl
scas
adc
sahf
pop
ror
testl
push
cmp
rol
sub
sub
lods
inc
and
add
lock
fstps
lea
add
cmp
rcrb
inc
sub
dec
je
mov
inc
xor
jle
pushf
fstpt
mov
es
sti
add
les
fisttpll
movsl
daa
pop
sub
stos
inc
pop
xchg
add
xor
popl
loopne
invd
jle
pop
jmp
sbb
leave
mov
mov
add
inc
movb
sbb
and
and
mov
mov
leave
cmc
pop
into
dec
icebp
mov
sub
flds
mov
jns
call
popf
aad
or
int
test
dec
cwtl
sbb
movsl
dec
push
sahf
jo
adc
adc
sti
or
and
ret
adc
inc
sub
out
mov
mov
pop
test
push
inc
pushf
loop
push
or
out
pusha
mov
add
std
push
aaa
dec
xchg
fsub
push
mov
test
outsb
in
dec
repz
cmp
jle
js
mov
adc
xchg
pop
and
sbb
fldt
mov
sub
int3
insb
xchg
and
aas
imul
movsl
jbe
addr16
jecxz
adc
adc
mov
mov
xor
add
fnsave
dec
pop
testl
xchg
lds
hlt
sbb
rorl
xchg
lock
push
lods
jge
cs
xchg
cmp
divl
mov
filds
orl
clc
inc
add
and
stos
pop
push
js
push
pop
push
aad
sti
icebp
dec
fs
pop
fcomps
fwait
or
aam
adc
jbe
add
push
or
mov
loope
xor
cmp
mov
xor
addl
adc
mov
movsl
subl
divl
sub
enter
add
lret
jle
lret
lret
hlt
cmp
sub
push
dec
or
jns
xor
jnp
cs
dec
dec
xor
mov
sub
cmp
fistps
int3
dec
xlat
aam
mov
filds
mov
mov
out
mov
rolb
cli
pop
lock
addr16
addr16
sbb
scas
mov
pop
movnti
inc
xor
xlat
fcomps
and
adc
int3
cmpsl
inc
dec
out
test
or
out
xchg
fildl
cmp
mov
xchg
lret
imul
in
das
lret
sub
pop
sarb
mov
stos
cmc
in
inc
aad
fwait
insb
pop
insb
add
lret
bound
out
lds
xor
jp
mov
and
test
jns
sahf
jge
lret
mov
inc
dec
imul
in
insb
clc
arpl
out
rclb
in
fcmovne
lahf
in
cmp
ds
aam
mov
dec
push
xor
xchg
fildll
and
insb
cli
cmp
test
adc
shll
mov
xchg
out
xor
std
cmp
addr16
sbb
fisttpl
pop
add
fnstenv
xchg
fadd
mov
and
arpl
pop
int
lahf
imul
and
and
xlat
sub
pop
mov
jle
xor
rep
pop
mov
mov
lods
xchg
int3
or
loopne
mov
adc
jge
cmp
jns
popa
xor
ds
test
and
les
pop
and
aad
scas
in
add
imul
fcmovb
cs
les
nop
jno
and
rclb
and
xchg
mov
jmp
xchg
sub
jg
lock
add
popf
loop
xchg
mov
sbb
push
lods
push
dec
sub
push
jbe
repnz
cmp
mov
cmc
insl
std
cmp
jns
inc
add
xlat
loopne
push
popa
inc
repz
lods
mov
outsb
pop
pop
insb
mov
xor
adc
repnz
cmp
test
out
mov
adc
lods
fwait
adc
xchg
lock
popf
jmp
xor
daa
push
pop
fstl
inc
mov
movsl
aam
xchg
jge
ja
insb
and
imul
dec
pop
out
push
sarb
mov
loop
fwait
hlt
pop
adc
mov
fidivl
imul
push
cmp
pop
xchg
xchg
push
jo
mov
das
xor
arpl
adc
sbb
xlat
outsb
cmc
xchg
movsl
jo,pn
sbb
jne
jg
or
subl
and
fdivs
mov
add
cmp
pop
andb
push
into
insb
shl
sub
push
jmp
and
jb
sar
aad
xchg
and
out
cmpl
and
lret
std
dec
out
and
das
add
push
adc
or
mov
jo
repz
ret
xor
jb
pop
rcr
ret
ret
psubsb
adc
ret
mov
xchg
mov
movsb
outsb
xchg
pop
ret
xor
pop
jge
ret
roll
mov
shl
lret
movsl
or
mov
mov
fidivl
faddl
adc
imul
cmp
adc
sahf
pop
lods
call
sub
jp
sub
in
mov
or
mov
jne
push
sbb
ljmp
icebp
inc
mov
xchg
mov
adc
sbbb
in
pop
cmp
pushf
inc
cmpsl
rclb
in
jp
out
dec
idivb
in
mov
or
pop
lcall
test
shlb
test
add
cli
pushf
stc
nop
rolb
sub
frstor
iret
nop
sbb
adc
sbb
xor
aaa
cmp
jmp
addl
inc
xchg
add
mov
push
push
push
out
sbb
mov
mov
icebp
push
repnz
sarb
out
shrb
into
add
or
add
lahf
cmp
sbb
inc
lcall
shl
out
lcall
and
jl
hlt
adc
insl
sar
rclb
ljmp
inc
inc
fildl
icebp
mov
cs
mov
xchg
xor
sbb
mov
cmpsb
adc
xchg
fadd
into
pop
sbb
dec
fwait
imul
scas
cs
adc
cmc
scas
inc
andl
xchg
mov
adc
xchg
pop
mov
and
enter
xchg
mov
bound
add
add
fwait
aaa
cmp
inc
inc
xor
cli
fs
dec
flds
ret
fwait
push
xchg
aaa
pushf
xor
or
add
push
mov
lods
daa
insl
out
pushf
mov
xlat
cs
les
shrb
xchg
jnp
fsubrl
fdiv
dec
jns
fucomip
pop
jecxz
jge
pop
fdivs
add
fcmovb
hlt
sub
cmc
jmp
in
call
loop
push
lcall
push
add
mov
mov
pop
pop
frstor
xchg
dec
sbb
in
jnp
dec
mov
std
outsb
or
push
cmp
dec
xchg
ja
xor
sbb
cmpl
mov
das
mov
cs
call
inc
stc
mov
roll
lods
add
push
adc
push
pop
adc
mov
or
push
aam
sti
mov
pop
loopne
int3
jae
or
push
js
pushf
dec
dec
fildl
sbb
cmp
in
test
sbb
mov
aaa
sbb
pop
xor
lcall
imul
stos
sub
loopne
adc
jmp
leave
std
std
leave
mov
repnz
das
cld
jbe
jnp
cmc
rcl
xchg
stos
jae
or
inc
add
mov
xchg
jmp
dec
xchg
subl
in
shrd
out
sub
rcll
arpl
fnsave
xchg
xchg
loope
mov
iret
or
mov
call
jo
leave
es
dec
inc
gs
mov
pop
xor
aas
cmpsl
popa
jle
mov
out
adc
xorb
push
mov
sub
das
dec
inc
scas
ljmp
mov
inc
sbb
rclb
or
inc
mov
push
cmp
add
int
sub
js
ja
gs
pop
push
pop
xchg
jb
lahf
hlt
pop
mov
lods
mov
fidivl
subl
sarl
repnz
outsb
out
cmp
xor
or
mov
cld
inc
ljmp
loop
scas
ficomps
pop
mov
push
pop
in
mov
mov
dec
in
and
pop
icebp
out
mov
mov
mov
fisttpl
aaa
xchg
lahf
inc
int3
cmp
sarl
out
loope
push
rcr
fbstp
subl
daa
fwait
inc
xchg
or
or
test
inc
jne
nop
pop
or
sub
outsb
popf
inc
mov
dec
push
das
push
jnp
xor
jp
dec
enter
inc
adc
stos
mov
outsl
popa
add
jmp
sub
and
and
inc
cmp
lock
xor
push
cmpsb
aam
mov
lret
lods
inc
push
cmp
and
xchg
sbb
in
aaa
or
xlat
movsb
jae
fsubr
and
out
xchg
fincstp
dec
inc
into
mov
in
cmpsb
pop
push
pop
push
pusha
sbb
push
jb
xor
inc
sbb
lds
inc
out
fdivrl
push
jmp
jns
cmp
pop
sub
mov
sti
xlat
out
and
cmpsb
mov
mov
sbb
in
lret
test
or
adc
repz
faddl
jle
ds
jne
sub
mov
fwait
dec
out
adc
mov
repnz
lahf
jo
roll
daa
aaa
cmp
push
imull
fstl
jmp
jle
xchg
push
mov
pusha
imulb
pop
jl
movsl
jl
fsubr
mov
test
pop
call
add
outsb
leave
or
xor
and
cmp
repnz
dec
inc
and
leave
inc
push
js
ror
dec
js
ss
inc
mov
adc
gs
mov
dec
jno
push
dec
jb
cli
mov
adcb
es
ret
out
dec
sbbl
fs
fistpll
push
ljmp
jmp
aad
pop
and
cmc
scas
xchg
bnd
xchg
push
je
sbb
std
push
ja
add
jae
pop
xchg
pop
js
sub
pop
adc
daa
cmpl
sub
xchg
jns
jle
pop
pop
cmp
or
pop
hlt
ss
dec
mov
aas
clc
xchg
jno
jecxz
mov
push
js
mov
inc
adc
or
and
fstps
fucomip
push
in
xor
loop
ljmp
mov
ja
mov
data16
fst
loop
xchg
or
aam
jne
enter
fstpl
mov
and
cltd
ret
pop
in
loopne
aam
rclb
lret
ret
dec
sub
xchg
xchg
mov
lds
repnz
push
loop
xchg
into
adc
cwtl
mov
lea
jecxz
mov
mov
mov
sti
sti
xor
es
push
ljmp
cmc
xor
and
xor
scas
dec
clc
fnsave
outsb
add
test
outsl
xchg
mov
popf
loope
lahf
negl
sub
ds
sub
add
and
and
in
xchg
push
les
pop
aaa
dec
scas
scas
xor
cmp
test
xor
lock
sub
repnz
mov
push
aam
push
xor
call
mov
push
movsl
outsb
in
lock
mov
dec
jo
test
in
fcomip
iret
stc
push
mov
cmp
pop
daa
jl
or
inc
in
cs
add
and
gs
js
fildll
cmp
push
push
mov
sahf
push
popf
stos
add
jns
movsb
xchg
push
xor
mov
lea
jl
sbb
sub
pop
xor
inc
repnz
mov
out
add
inc
stos
add
mov
inc
pop
push
lret
jo
mov
mov
xor
add
inc
daa
pushf
mov
fbld
les
icebp
arpl
testb
es
adc
push
push
fistpll
mov
xchg
icebp
enter
leave
mov
xchg
in
aaa
shr
and
xchg
cmc
iret
sbb
add
aaa
loop
cli
mov
mov
fldt
js
sarb
loopne
cmp
leave
pop
pop
pop
mov
imul
xchg
sub
mov
inc
pop
sbb
adc
jnp
pop
stc
and
sahf
cmc
mov
in
sti
scas
xchg
rorl
aad
and
push
out
sub
fstpl
dec
and
jmp
mov
push
mov
add
pop
cli
and
cmp
jnp
iret
out
dec
mov
in
xor
push
sti
add
jno
test
pop
popa
sahf
icebp
cmp
sub
and
or
clc
sti
insl
push
sub
mov
mov
hlt
adc
jmp
xchg
fldenv
and
sub
sbb
xchg
cltd
jmp
jmp
sarb
testb
cmp
fwait
adc
fidivrs
rcrb
out
adc
lods
inc
inc
adc
sub
mov
loope
testb
or
das
adc
ljmp
cmpb
add
jae
xor
xchg
add
ror
xor
cmp
cmp
in
addps
je
fsubp
and
mov
adc
pop
outsl
repz
add
gs
fdivl
mov
dec
sbb
rorb
pop
das
pop
arpl
es
fadds
cmp
lahf
stc
lods
sahf
in
stos
sbb
mov
jbe
sub
xchg
iret
fimuls
stos
or
jp
jge
adc
sbb
clc
jb
push
nop
jne
jbe
jle
das
int3
aad
or
inc
xchg
cmp
sti
xor
mov
mov
mov
stos
rcrb
imul
shll
mov
das
and
jb
mov
adc
repz
jl
push
push
imul
ja
mov
pop
lahf
or
loope
fdivrl
push
dec
into
paddd
jno
xchg
cmp
js
sub
add
dec
dec
inc
roll
jo
lock
iret
cmp
sbb
nop
inc
repnz
xchg
mov
mov
xchg
push
out
mov
aas
out
mov
lea
xchg
ja
mov
insl
adc
sti
sub
add
adcl
xlat
adc
sarb
sub
sub
icebp
push
jle
xchg
xchg
daa
jmp
mov
fmul
and
mov
sub
pop
shll
mov
ficompl
pop
push
fs
xlat
outsb
ficoml
add
fisubl
or
mov
cmpsl
jnp
ljmp
fldenv
stos
xor
mov
hlt
addr16
dec
lahf
int
es
leave
stos
nop
mov
push
jle
mov
repnz
into
outsb
inc
das
xor
stos
insb
jp
mov
or
push
cli
repnz
pop
dec
push
xor
xor
sbb
hlt
jb
sub
push
mov
sbb
sub
cmp
push
push
mov
fcmovnbe
lds
mov
mov
jmp
sbb
outsl
jnp
jns
je
mov
cmp
mov
mov
lea
and
mov
decb
hlt
imul
dec
jne
sbb
push
push
dec
lea
rorl
mov
insl
out
sub
sbbl
adc
jp
add
sub
mov
mov
jmp
loope
pop
aas
fisubrl
test
mov
xchg
or
fwait
ja
push
inc
xchg
lock
in
out
shlb
pop
test
xchg
dec
mov
in
pushf
jb
mov
mov
and
sbb
aaa
pushf
add
pushf
mov
loopne
cld
mov
mov
repz
sbb
andl
test
add
mov
cmp
and
leave
mov
mov
xchg
add
stos
out
test
dec
das
xchg
xlat
push
inc
sub
cwtl
lods
cltd
out
and
stc
push
sub
push
out
push
inc
iret
test
fsubrl
stos
loope
dec
cmpsl
push
mov
loop
pop
mov
inc
push
mov
xlat
mov
jo
pop
and
daa
push
jb
or
aam
cld
test
sub
push
repz
push
ret
push
fimull
lods
popa
adc
hlt
push
sub
aad
pusha
adc
stos
scas
fnstsw
fstl
sahf
jg
xchg
and
cmpsb
sub
sbb
out
mov
inc
hlt
jge
jecxz
rorl
es
push
je
stos
addb
stos
xchg
int3
out
sbb
lock
add
adc
dec
pop
xor
mov
jno
pop
jnp
ret
mov
rcrl
movntq
mov
scas
mov
mov
push
add
push
cmp
movaps
out
fcmovne
movsb
inc
test
cmc
dec
cli
shr
push
mov
shlb
cmpl
xor
in
inc
pusha
repnz
adc
nop
nop
mov
push
das
jg
inc
sub
add
lods
ss
sbb
push
lret
fdiv
xchg
rcr
jle
dec
add
adc
mov
pop
and
in
add
mov
insl
add
les
jnp
jge
push
movsb
outsl
xlat
cmp
std
cmpsb
mov
movsb
mov
fidivl
stc
aam
daa
adc
sub
stos
push
adc
cmc
dec
scas
cmpsl
and
out
outsl
adc
cmp
into
or
sub
xchg
dec
aas
and
movsl
and
mov
pop
cltd
and
jl
xchg
and
repz
lods
out
lahf
jno
jnp
jno
xor
je
mov
test
popf
out
sub
pop
or
xchg
push
jp
dec
jae
mov
daa
loopne
out
bound
stos
jle
push
imul
xchg
xchg
push
sub
leave
and
jp
jmp
cmp
dec
das
imul
mov
mov
leave
mov
cmp
add
out
mov
imul
adc
mov
inc
adc
mov
aad
lea
fadds
mov
test
or
sub
xchg
bound
xlat
push
negl
dec
cmp
sti
add
mov
push
lods
mov
cli
xchg
loop
aad
jbe
jns
pop
in
out
aad
in
dec
jmp
and
mov
sub
rol
cmp
mov
mov
sub
pop
xchg
mov
pop
inc
push
rcrl
or
into
lea
mov
outsl
jp
xchg
fadds
fildl
adcb
inc
lock
out
adc
jle
stos
push
lret
mov
push
or
test
pushf
stos
mov
pop
mov
insl
enter
addr16
movsbl
je
mov
lret
jo
mov
shr
sti
mov
xchg
push
add
loopne
int3
outsb
subb
adc
push
xchg
idivb
shl
inc
or
push
lret
cs
adc
cltd
cmc
jg
xchg
js
or
dec
or
pop
popf
imull
mov
jo
sub
mov
fidivrs
mov
push
addr16
aas
into
mov
mov
and
add
jne
or
mov
cli
fistps
and
inc
fnstenv
adc
adc
aas
mov
push
pop
dec
sub
inc
stos
jnp
mov
cmp
pop
dec
cmp
js
data16
push
add
adc
in
adc
xchg
jle
adc
fwait
int3
mov
inc
scas
cltd
jb
mov
gs
int
inc
dec
mov
and
scas
adc
lock
stc
testb
inc
sub
mov
jo
cmp
shr
in
mov
jnp
sub
cmp
sbb
mov
push
jae
jb
adc
data16
cltd
jne
je
loope
leave
mov
jmp
mov
xor
adc
inc
test
jnp
ret
cmc
jle
mov
ljmp
aam
sti
cmp
cmp
jp
or
fwait
mov
pop
jae
jmp
sbb
outsl
adc
xchg
fisubrl
or
push
inc
bound
orb
adc
int3
popf
jno
push
adc
mov
out
movsl
mov
subb
cmp
cmp
xchg
jg
inc
push
push
jge
clc
xchg
ret
xor
test
iret
dec
xchg
push
imul
shlb
xchg
int
enter
sahf
jecxz
scas
cmp
sbb
fstpl
jae
into
add
outsl
push
push
out
out
xchg
cmpsb
popa
add
push
xor
mov
gs
fisubs
loop
call
out
stos
pop
jnp
pop
andl
pop
scas
and
xor
push
lock
repnz
pop
cmp
enter
mov
aas
pushf
imul
outsb
enter
or
flds
add
bndstx
cmp
mov
cmp
xor
sbb
ret
inc
jl
ret
testb
jp
jnp
pusha
addb
pushf
jl
and
clc
inc
out
test
xor
data16
jg
decl
mov
addb
inc
roll
fnstenv
sarl
subb
mov
and
insl
add
dec
test
or
push
dec
add
add
repz
ljmp
stos
movsl
mov
jae
add
inc
sub
nop
xor
mov
rorl
out
les
mov
imul
add
xor
jns
ret
push
cltd
xchg
or
es
std
lods
sbb
jbe
fisubrs
sbb
dec
lahf
fimuls
fs
and
and
cmp
and
push
inc
int
sub
rolb
popa
or
mul
mov
mov
xor
sbb
and
ds
mov
js
fisubrl
inc
sub
mov
out
sbb
ljmp
cld
xchg
into
xchg
jo
shrb
fldenv
je
pop
jae
mov
fdivrs
jb
ljmp
in
stc
or
jne
push
xor
enter
mov
jmp
push
lret
in
mov
mov
and
fs
mov
dec
push
push
jne
popf
dec
or
sbb
mov
pop
jnp
dec
mov
mov
or
cmp
add
sahf
aaa
xorb
and
ret
loop
jmp
xchg
jl
mov
sbbb
mov
aad
jno
stos
push
ja
mov
fldenv
push
cli
leave
cmpsl
xchg
add
fldt
xlat
inc
pop
fldt
bound
les
lods
mov
jns
or
xchg
in
hlt
pop
mov
adc
movsl
sbb
or
loope
aad
leave
cmp
mov
in
or
in
ds
adc
mov
js
cmp
xor
dec
ja
mov
pop
setg
daa
aad
lcall
loopne
icebp
loope
mov
and
pop
mov
shlb
es
insl
call
adc
add
notl
pop
mov
lea
out
fidivrl
nop
mov
dec
fdivrs
cs
test
fadds
nop
xchg
pop
cmp
or
cmc
sarb
dec
push
dec
lret
sti
mov
push
and
add
xor
rclb
es
cmova
pextrw
jge
mov
js
addr16
sub
aam
xor
push
scas
mov
hlt
aaa
mov
push
cmpsb
sbb
imul
lcall
pop
gs
pop
xor
std
jae
fcom
addr16
lock
test
pop
ret
xchg
or
fs
test
sub
and
sbb
sub
inc
sub
adc
sbb
aaa
mov
ret
cmp
push
mov
dec
adc
out
dec
int
lods
sub
repnz
lret
mov
xchg
cmp
and
sub
roll
xor
ret
rorb
call
adc
loopne
mov
daa
testb
or
xchg
pushf
push
sbb
lds
data16
mov
idivb
mov
adc
mov
push
stos
xchg
ljmp
fildll
into
ficoms
mov
cwtl
inc
xor
push
shl
icebp
pop
lea
imul
pusha
dec
fidivl
push
sti
outsb
push
or
adc
pop
jmp
int
jno
lods
push
stos
xor
inc
push
nop
stc
dec
cmc
shlb
push
sti
xor
ficoms
insb
f2xm1
and
or
mov
jae
test
mov
jle
mov
add
cmp
hlt
movsb
iret
mov
or
cmp
mov
test
test
cmp
push
mov
sbb
and
push
xchg
out
mov
xor
inc
arpl
sbb
ret
inc
mov
xor
sub
imul
rolb
dec
loope
daa
xchg
pop
and
mov
or
pop
hlt
ljmp
mov
and
push
sbb
shrl
scas
stc
mov
add
sbb
in
loop
or
jle
cltd
dec
subb
xor
loopne
sbb
leave
clc
aaa
loopne
xlat
aaa
mov
adc
jnp
jbe
sbb
adc
test
push
cs
mov
lds
sbbl
ja
mov
std
dec
and
xlat
xlat
or
stos
sbb
or
and
jp
lahf
std
test
bsr
cs
mov
adc
mov
movsl
stc
sbb
sbb
rol
push
xlat
xchg
dec
fld
mov
leave
aam
mov
xor
cmpsb
adc
jle
pop
data16
out
insl
and
call
idivb
inc
cmp
add
clc
int3
add
cmpb
push
mov
in
push
icebp
fidivrl
push
xchg
loopne
jbe
out
pop
fsubrl
hlt
lods
sub
pop
sbb
out
xchg
aam
loop
loop
jecxz
jmp
lock
in
mov
cmp
xchg
mov
popa
adc
aaa
xchg
nop
dec
and
adc
popa
cmpsl
shlb
xlat
incb
mov
je
add
sub
std
aam
testl
lods
mov
and
adc
icebp
pusha
sbb
mov
fwait
out
sub
push
loop
mov
mov
arpl
sbb
inc
loopne
mov
xor
xor
adc
scas
and
arpl
aad
inc
outsl
and
je
push
mov
std
sbb
lods
adc
xchg
add
lock
push
test
add
pop
cmp
xchg
or
jnp
ds
clc
lods
sbb
repz
pushf
inc
sbb
sub
jge
adc
xchg
aaa
adc
nop
imul
pop
jns
andb
sarb
pop
and
aaa
mov
push
mov
ss
pusha
jne
testb
pop
adc
test
aad
xchg
xor
jp
pop
xor
repz
dec
pop
daa
imul
adc
cmp
mov
dec
ljmp
lds
or
daa
dec
mov
xchg
in
inc
sub
add
stos
push
and
loop
or
jge
cli
fcomi
fnsave
mov
cmp
sar
stos
xlat
incl
inc
push
mov
lock
dec
loope
pop
in
xor
hlt
call
mov
push
mov
sbb
or
addr16
xchg
in
push
cmp
ljmp
mov
repz
sbb
cli
out
fsts
aad
xorb
jg
push
das
and
cli
xor
lret
lock
jge
mov
mov
movsl
lret
mov
dec
js
dec
jne
mov
add
inc
stos
push
cmc
mov
mov
ljmp
sub
in
cwtl
adc
cmp
inc
inc
jmp
cmpl
aas
mov
aaa
loopne
inc
fadd
xchg
jmp
hlt
lods
fwait
daa
les
pop
lahf
fsubr
int
outsb
sti
fistpl
scas
stc
inc
repnz
addr16
scas
enter
jno
pop
or
pop
add
and
dec
dec
jmp
inc
pop
ss
xlat
fbstp
dec
pop
movsb
push
jg
sbb
push
mov
mov
inc
push
insb
sbbl
inc
sahf
cltd
xor
xchg
in
push
mov
outsb
adc
dec
inc
int3
xchg
fwait
pop
sti
popf
pop
outsb
in
sbb
popa
adc
sub
int3
je
xchg
mov
cwtl
or
ret
xor
xchg
pop
and
jge
jle
or
lahf
js,pt
cmp
jmp
jge
sbb
jl
mov
sub
inc
sub
adc
jbe
dec
aad
dec
leave
ss
repnz
sbbb
addl
ja
inc
std
dec
idivl
sub
pop
or
sbb
jne
and
das
clc
mov
loope
adc
cmp
fdivr
and
ret
ret
sbb
in
sbb
pop
jno
imul
cmpb
dec
push
xor
mov
xchg
test
movsb
icebp
arpl
in
dec
into
mov
mov
add
icebp
jl
jbe
mov
rcrb
fdivrp
cmp
and
iret
sahf
jns
mov
lcall
out
mov
add
mov
push
sub
push
pop
sub
lds
in
stc
lahf
out
rorl
cmpsl
xchg
fldenv
xor
jo
jae
ret
xchg
sbb
sub
outsl
dec
jecxz
movsb
pop
mov
jle
and
out
xchg
insl
xchg
cmpb
jecxz
fs
mov
and
cmp
pusha
cmc
inc
fisubl
pop
lock
cltd
jae
push
lods
cmp
push
decl
fisttpl
push
cli
dec
std
aad
mov
pop
mov
movsl
jle
jno
aaa
and
sbb
loop
imul
pushf
lret
mov
cli
jecxz
cmp
cmc
pop
push
jp
popf
inc
mov
ficomps
dec
shlb
and
daa
adc
stc
adc
movsl
push
mov
in
add
xchg
adc
loopne
ret
jbe
jp
dec
xlat
mov
push
stc
lods
test
popf
sub
js
cmp
js
out
sub
lock
dec
aam
fiaddl
sti
mov
int3
test
cld
push
dec
insb
int3
icebp
into
add
notl
and
test
stc
orb
pop
int3
je
and
stos
jg
jg
inc
cwtl
loope
test
out
out
pop
shrl
mov
out
xchg
jg
lea
jecxz
in
adc
inc
mov
inc
xor
inc
mov
mov
mov
pop
pop
xor
dec
sbb
pop
inc
dec
cltd
imul
and
cmc
call
or
fdivl
in
add
add
lss
pop
loopne
rolb
xchg
xchg
inc
mov
in
cmp
push
jg
sub
iret
je
icebp
and
or
cs
pop
xchg
cmp
mov
inc
mov
add
push
in
mov
jae
xchg
xor
jbe
xchg
and
fsubrl
loope
pop
out
jecxz
pusha
stos
xor
lahf
rcll
sub
cmpsl
push
cmp
or
dec
hlt
or
mov
imul
ret
rcrb
test
movsb
jo
xchg
ja
inc
test
in
mov
rcl
cmp
ret
scas
or
mov
push
mov
fsub
rolb
fsub
mov
jmp
rcll
lret
cwtl
enter
sub
push
xchg
fcoml
xor
and
shlb
inc
sub
jb
or
arpl
inc
jb
mov
mov
js
push
fildl
shll
dec
sub
int3
and
xchg
adc
xchg
rorl
fildll
inc
push
add
cmpsb
cmp
push
xchg
and
out
sub
dec
outsb
or
xchg
mov
stos
ret
mov
outsl
dec
and
adc
leave
dec
jbe
push
lea
arpl
clc
gs
pop
popa
mov
pop
fucom
jle
push
cltd
jp
pop
movsl
push
enter
rcll
aas
xchg
shl
cld
stc
aas
mov
pop
xor
imul
movsl
jmp
mov
pop
dec
ljmp
mov
addr16
mov
fidivrl
inc
pop
sbb
mov
orb
insl
mov
mov
mov
cwtl
or
mov
stos
dec
jmp
data16
jnp
out
dec
sti
jne
data16
mov
push
adc
fmull
or
idivb
push
stos
arpl
mov
scas
sbb
stc
loop
fcmovnbe
lods
adc
mov
mov
xchg
sbb
dec
mov
mov
shl
lret
enter
and
pushf
sbb
sub
jecxz
sub
inc
vsubss
sub
cmc
push
pop
in
sub
mov
inc
icebp
jno
addr16
push
or
aaa
popf
test
das
mov
insb
dec
push
in
lcall
mov
cmp
and
jle
mov
mov
sbb
xor
or
addr16
pop
jb
test
or
dec
pop
dec
neg
xchg
loope
jns
xor
ljmp
pop
push
leave
cmp
out
subps
out
fsubl
rorb
pop
fadd
cmp
mov
je
jnp
sahf
inc
push
mov
pusha
push
ja
aas
sub
pop
repnz
stos
std
enter
xchg
sbb
pop
jbe
test
cltd
imul
shlb
cmp
jg
cli
repnz
dec
dec
outsl
xchg
push
or
push
movsl
enter
add
sbb
xchg
jb
shr
outsl
fdivr
cld
dec
adc
mov
aam
sbbb
lods
or
adc
out
jge
iret
int
push
aaa
bound
les
cmp
mov
cmp
sarl
xchg
push
ss
inc
cmpsl
push
sub
shrl
cs
gs
movsb
popa
push
jecxz
in
lret
mov
je
xor
insb
stos
ret
mov
jmp
dec
lahf
out
mov
mov
push
fs
lcall
fisubrl
daa
xor
push
xchg
loopne
xchg
out
pop
adc
and
inc
push
pop
sub
mov
imul
pop
fisubrl
mov
cmp
cltd
cs
xchg
outsb
push
mov
mov
jl
xor
sti
and
push
outsl
cli
roll
xor
dec
test
dec
jge
fs
gs
mov
xchg
sub
mov
mov
xchg
cwtl
ret
push
orb
fstp
xchg
test
xor
jnp
dec
adc
inc
imul
jmp
mov
ficomps
ret
test
test
push
testb
lret
mov
outsl
les
push
sbb
adc
sub
mov
mov
call
je
insb
int
add
leave
es
push
xor
or
popf
inc
sub
mov
cmc
je
add
dec
xor
push
push
add
and
popf
pushf
jnp
mov
cltd
imull
inc
inc
jnp
cmp
cltd
int
stc
orl
imulb
sarb
mov
xor
dec
int3
rcll
cmp
call
loopne
mov
jmp
xor
pop
mov
mov
pop
cld
push
bound
or
orl
push
ret
adc
sbb
or
leave
pop
imul
fwait
fs
dec
inc
jp
cmp
xchg
xchg
mov
mov
and
jbe
sbb
aas
add
and
repz
jg
out
jmp
in
pop
adc
and
ja
sub
jge
filds
fists
cmpsl
or
into
into
inc
fdivp
in
mov
lahf
shrl
xor
popf
xor
mov
jns
add
shrb
testb
cmp
jb
call
or
cmp
push
cwtl
or
dec
sbb
add
mov
cmpsl
scas
cmpsb
add
movsb
ss
pushf
les
and
cmpsl
rolb
sbb
pop
cmpl
test
and
mov
outsb
push
xor
mov
pop
jnp
mov
imul
pop
jge
fcoml
test
mov
xor
inc
pop
jl
xor
adc
lahf
fwait
jae
emms
pushf
fmulp
stos
sub
lret
and
dec
push
pop
sub
repnz
add
xchg
mov
sub
test
xor
daa
data16
scas
aaa
repnz
jns
add
push
push
or
mov
and
inc
or
sub
popf
adc
outsb
sbb
mov
cli
pop
loop
sahf
push
adc
and
cmpb
mov
and
dec
cltd
ja
test
sub
jge
add
xchg
test
inc
jmp
xchg
pop
ja
inc
or
xchg
sub
dec
movsl
dec
xor
fs
sbb
jo
or
out
popa
xchg
mov
mov
pop
jmp
sbb
cmp
mov
jmp
push
mov
pop
mov
scas
mov
leave
in
or
lret
mov
es
xchg
mov
fists
push
cltd
mov
daa
or
inc
add
mov
push
andb
fnsave
pop
fmul
in
cmp
add
scas
shlb
jl
mov
xor
cmp
cmp
jle
xlat
ja
outsb
mov
inc
sub
push
mov
lcall
push
sbb
fcomps
add
cs
or
std
ja
xchg
fisubs
mov
mov
cmpsb
sbb
or
aam
add
in
insb
mov
fldenv
mov
lahf
loope
daa
xchg
xor
lret
sbb
sub
and
inc
movsl
inc
es
inc
loope
mov
jecxz
cmp
inc
push
int3
xor
in
sarb
out
push
enter
xchg
jb
jns
mov
and
shll
das
dec
lcall
push
jl
ja
lods
test
jbe
imul
add
fnsave
and
pop
testl
ficoml
lock
sti
push
jl
sahf
and
mov
imulb
loope
sub
sbb
in
daa
fsubrs
and
arpl
and
mov
call
ret
inc
gs
outsl
sbb
shlb
dec
repz
mov
and
setno
push
subb
iret
push
test
insb
sbb
arpl
add
pop
mov
jnp
ret
xor
mov
adc
dec
lea
ja
xor
cltd
cmc
xor
mov
cmp
outsl
sahf
sbb
insl
rcll
sub
xchg
mov
pop
push
jae
mov
shrl
jb,pt
and
lea
ret
push
cmp
nop
pop
mov
sbb
xchg
mov
inc
lods
lea
mov
mov
and
xor
push
or
sub
dec
loopne
shl
push
adc
dec
nop
icebp
icebp
sarl
xchg
mov
xchg
cmpsb
mov
jnp
jg
add
dec
pop
sbb
sub
mov
out
inc
inc
cmp
adc
xor
ss
out
aam
adcl
or
xchg
push
sti
dec
lock
and
lcall
jns
shrb
mov
cmp
adc
pop
cltd
mov
pop
mov
pop
mov
mov
arpl
inc
cmp
out
shl
stos
sub
mov
sub
fcmovne
fldt
or
jbe
fcoml
call
mov
push
daa
inc
sbb
sub
add
mov
cmp
ja
sub
pusha
inc
or
xor
cld
jne
iret
mov
ret
cmp
dec
in
jl
mov
mov
lahf
inc
cmp
fldt
addl
adc
addl
push
frstor
scas
enter
cs
loop
lret
sub
sbb
xchg
orps
cltd
jbe
jno
mov
xor
cmp
lcall
clc
dec
xor
iret
dec
xchg
les
out
jb
out
mov
lret
xor
nop
popa
int
aaa
cmp
push
push
adc
inc
xor
cltd
dec
cli
daa
add
adc
inc
mov
nop
inc
adc
mov
sbb
jg
sub
roll
cmp
mov
xchg
xor
sub
into
push
push
movsl
fstps
into
sub
out
cmp
mov
mov
shr
test
inc
sub
das
lods
les
sub
std
rolb
cmp
ljmp
cli
cmp
push
fstps
adc
outsb
mov
sahf
js
push
add
adc
mov
pop
mov
push
adc
movsb
les
lret
pushf
cs
add
test
adc
nop
into
data16
je
int3
shlb
inc
daa
adc
xchg
pop
push
cmp
push
push
mov
mov
sub
andb
out
inc
push
push
push
xchg
sub
stos
jnp
xor
mov
scas
fisttpl
push
pop
pop
jnp
jnp
stc
cmp
fwait
arpl
test
jg
adc
inc
aam
idivl
ja
or
or
inc
sti
push
ja
cmp
imull
add
lret
lcall
xchg
mov
fwait
xchg
in
xchg
push
or
test
mov
sub
jo
cli
daa
adc
into
cmp
into
push
mov
rcl
mov
jecxz
jecxz
add
cmp
jbe
arpl
inc
sbbb
cs
shl
rcrb
dec
mov
in
mov
mov
out
hlt
arpl
push
mov
mov
adc
ja
mov
lds
xor
iret
xor
sbb
out
sbb
test
js
std
and
jae
mov
xor
or
lea
clc
adc
sar
or
xchg
push
push
adc
popf
adc
and
and
dec
adc
jecxz
data16
mov
into
mov
stos
aaa
jp
fwait
xor
jno
xor
cs
std
xlat
adc
or
cmpsb
mov
shrl
dec
ljmp
jb
jecxz
inc
push
xor
test
aas
insl
sub
lea
sub
jge
dec
push
repnz
fcom
jge
and
cmpsb
xor
jl
cwtl
insl
mov
mov
mov
sub
imul
push
inc
rclb
outsb
mov
cmp
movsb
cmp
adc
pop
in
mov
xchg
lahf
and
outsb
scas
popf
lods
inc
out
inc
cmp
dec
fstpt
into
add
push
sub
lods
jb
ds
pusha
inc
cmp
push
push
dec
cli
push
jbe
push
aad
inc
fnstsw
mov
mov
cmc
scas
pop
mov
ds
fidivrl
dec
dec
stc
orb
add
xor
or
push
pop
jl
aam
fcomps
mull
add
lods
and
lea
sbb
mov
add
mov
and
dec
lcall
cmpsb
inc
jnp
jb
sbb
sbb
xchg
test
lret
sub
fstps
jecxz
jg
mov
stc
jnp
repnz
cmpsb
in
mov
nop
into
cmp
aas
or
mov
add
mov
mov
push
imul
pop
pop
repnz
xor
mov
mov
gs
nop
ljmp
daa
insb
fcompl
jp
fildl
ret
pop
jne
jl
pop
add
push
sbb
hlt
imul
outsb
pop
mov
adc
aam
mov
popf
cmp
movsb
sub
sti
mov
inc
movsb
das
dec
inc
aam
xor
clc
push
idiv
stos
outsb
pushf
push
or
in
pop
jno
sbb
xchg
js
cmp
mov
mov
mov
inc
mulb
inc
xor
ja
in
add
andl
in
mov
dec
and
cmp
push
stc
sub
fabs
jmp
push
test
cmpsl
or
lock
jmp
inc
jnp
das
or
jl
sti
dec
push
scas
cmp
hlt
test
rcrb
iret
cwtl
popa
xor
rdmsr
into
fistl
inc
mov
js
out
sbb
cs
data16
push
lds
call
inc
mov
insl
pop
push
in
test
cmp
test
dec
rol
out
negb
mov
and
lret
xacquire
cmp
dec
sarb
mov
mov
pop
repnz
lret
sbb
push
shll
and
jg
cltd
mov
xchg
ret
in
ret
in
ret
pop
loop
xor
sub
push
lods
inc
add
scas
movsb
xor
dec
add
sub
adc
shl
or
cltd
sub
mov
dec
jg
in
arpl
push
mov
pop
in
lock
repz
dec
scas
mov
adc
mov
xchg
into
cmpb
enter
dec
fstps
lret
xorb
aam
lret
ret
or
outsl
xchg
push
mov
pop
je
mov
add
lods
mov
jo
jge
call
js
lock
and
or
int3
movsl
shrb
daa
imul
icebp
cmp
jae
xchg
loope
stc
ljmp
inc
or
xchg
add
push
imul
cmp
vmwrite
pop
push
ss
insb
jl
jne
test
ds
dec
mov
sub
cmp
mov
lcall
fldl
cwtl
pop
shlb
inc
int
jle
pop
add
and
les
ss
xor
in
daa
push
jne
into
jns
nop
push
popf
std
bound
pop
sbb
xchg
xchg
cmc
pop
popa
jl
dec
or
cmpsl
jecxz
ss
daa
sbb
out
sbb
adc
and
mov
lea
sub
sub
addr16
jno
inc
fsubl
out
aaa
cmp
addl
dec
aad
xchg
jle
stos
sahf
inc
and
in
movsl
movsb
ds
jne
mov
jl
or
js
pop
stc
push
jbe
sbb
addr16
push
loopne
testb
data16
cmpsl
jb
pop
arpl
dec
aad
and
les
pushf
mov
pop
xchg
push
popf
xor
sbb
fldcw
decb
push
adc
adc
adc
pop
xchg
mov
and
xor
lds
add
pop
add
cmpsl
imul
int3
or
aam
cwtl
mov
stos
jne
mov
shlb
insb
xchg
jp
dec
mov
inc
clc
and
inc
fimull
mov
pop
xchg
into
repz
scas
sub
clc
daa
int
dec
cmp
mov
mov
popa
jo
and
sbb
mov
scas
gs
icebp
push
push
sub
in
test
arpl
inc
iret
ss
adc
mov
clc
imul
popl
sahf
xchg
push
imul
std
inc
jo
imul
xchg
xchg
jle
rcl
mov
jae
sub
jbe
ds
dec
data16
adc
pop
add
andl
pop
sub
xchg
in
ret
push
xchg
addr16
push
add
mov
push
mov
mov
sti
fistl
sbb
stos
pminub
cmp
stc
cli
sub
pop
test
ret
fisttps
notb
xlat
pop
pop
imul
fst
jle
out
das
pop
push
adc
pop
jp
das
ljmp
inc
inc
sbb
hlt
xor
fsubrp
and
int
inc
cld
jb
cmc
mov
or
mov
xchg
add
andb
test
xor
cmc
in
out
adc
andl
dec
dec
mov
pushf
in
aas
push
xor
pop
jne
nop
push
loopne
sub
aam
mov
mov
aas
cmpsl
dec
jb
in
test
lock
leave
pop
mov
xchg
push
xchg
push
push
sbb
adc
loop
fdivs
lcall
dec
fcomp
xchg
push
sub
aaa
int
nop
popa
sub
in
into
xchg
imul
in
jo
pop
dec
add
rorb
xchg
jns
insl
dec
xchg
jae
pop
dec
xchg
pop
aaa
jne
mov
and
in
dec
and
leave
cmp
insl
sub
scas
add
cli
ret
inc
or
dec
mov
pop
xchg
dec
mov
js
out
call
dec
pop
outsb
push
ret
test
pushf
jne
stos
sbb
lds
adc
fwait
and
fiadds
nop
jg
xchg
out
adc
fcmovnu
sarl
mov
adcl
mov
iret
popf
aaa
std
mov
pop
pop
cmp
repnz
shl
sbb
in
sbb
mov
mov
aad
shlb
pusha
push
xor
adc
xchg
xchg
pop
and
mov
xchg
pop
fldcw
xchg
add
into
in
imul
cld
enter
hlt
lods
ss
in
or
push
jmp
ror
or
mov
jg
movsl
sbb
mov
ss
dec
inc
fadd
push
jne
adc
xor
outsb
add
ljmp
mov
xchg
fmuls
sbb
xor
xor
xchg
sub
ss
add
stos
xor
inc
popf
xor
into
sub
adc
iret
out
stc
push
sbb
sub
pop
stos
loope
test
popf
in
loopne
xchg
xor
mov
push
push
jno
aad
cmp
and
inc
pop
push
clc
inc
jns
mov
jns,pt
or
out
push
or
cmp
jno,pt
mov
test
cmpsl
inc
jle
ss
aam
into
or
fldcw
pop
sbb
ret
shr
mov
ja
out
mov
popa
add
enter
cmpsb
push
or
push
push
add
mov
xchg
mov
xchg
add
imul
or
subl
push
add
add
mov
mov
mov
cwtl
xor
ret
xor
pop
push
bound
cmp
call
mov
mov
arpl
jne
out
mov
insb
xchg
in
inc
jmp
test
push
xchg
loope
xchg
lcall
stos
mov
inc
scas
lds
inc
push
inc
adc
loopne
arpl
std
push
adc
popf
mov
icebp
jmp
jle
mov
sub
pusha
sub
xchg
mov
clc
xchg
pop
sub
push
or
inc
loopne
ds
push
inc
bound
test
jb
mov
push
fstpt
movsb
and
and
and
iret
push
mov
lcall
mov
mov
pop
bound
pop
aaa
adc
fnstcw
jp
fidivrl
adc
jbe
jnp
inc
push
fidivrl
inc
incl
fnstenv
decb
inc
xchg
inc
pslld
cli
jecxz
mov
fwait
repnz
lods
lods
push
aaa
xchg
test
mov
mov
mov
incb
ja
and
and
xchg
lret
pop
les
sub
jbe
fidivrl
pop
loop
pop
pushf
js
xchg
fs
subb
dec
lcall
call
aas
cmp
mov
push
pop
sbb
inc
mov
mov
sub
bound
dec
adc
div
jl
push
sub
xor
inc
dec
stc
ds
in
pop
insb
jnp
xlat
jl
cmp
movsb
les
sub
sub
loope
daa
sbb
and
push
adc
mov
aas
cli
adc
push
jae
fcos
cmp
dec
push
repz
fs
fcmovbe
daa
xor
or
arpl
dec
stos
push
lcall
push
int3
iret
pop
cmp
cmc
mov
lcall
pop
loop
mov
aad
inc
out
cmp
adc
lcall
test
enter
cmp
cmp
push
stc
pop
mov
pop
fimuls
mov
sbb
ret
mov
sbb
mov
ret
or
lea
lods
pop
cmp
or
or
mov
iret
loop
movsb
and
sbb
pcmpeqb
mov
scas
dec
pop
push
insb
pop
or
adc
sarl
outsb
testb
sub
imul
negl
xchg
fsubrs
mov
xchg
push
inc
mov
mov
sub
idiv
pop
jb
push
addr16
insl
in
lret
mov
fstpl
daa
push
js
in
mov
pop
enter
fnstenv
add
sub
jb
xchg
adc
arpl
enter
sub
lds
sahf
dec
stc
fcoms
sub
popf
rcrb
cmp
sbb
push
std
xlat
cmp
sub
add
pushf
stc
aaa
aam
adc
cld
ret
or
xchg
ficompl
or
cmp
pop
in
pop
mov
punpckldq
cmp
and
sbbb
mov
or
out
jns
mov
or
add
pop
mov
add
jecxz
rorl
sub
adc
push
push
test
loope
cmp
outsb
ret
cs
int
notb
mov
dec
pop
lcall
cmp
aas
pop
push
jnp
gs
out
frstor
push
aas
dec
jnp
icebp
enter
repz
xchg
add
mov
and
nop
daa
mov
lods
mov
stc
adc
frstor
or
xor
out
or
fwait
loop
out
pop
cmp
dec
and
push
std
imul
cli
adc
pop
sti
xchg
xchg
mov
xchg
nop
inc
add
cmpsb
aad
mov
sub
call
adc
or
inc
pop
out
leave
mov
pop
pop
adc
rcrb
pop
fcmovne
int3
sub
adc
sub
lahf
neg
pop
daa
xchg
add
outsb
lret
nop
mov
push
jl
pop
push
inc
cs
int3
rorl
idivl
pop
fdivl
mov
ja
test
xor
icebp
mov
mov
push
idivl
mov
xor
jb
fisubrs
test
push
test
add
cmp
data16
aad
inc
or
add
cmc
nop
pop
cmp
rorl
outsl
pop
movsb
fs
push
aaa
sahf
add
sbb
in
inc
dec
stos
std
push
sti
dec
insl
push
cmp
popf
outsb
sbb
hlt
add
xor
mov
sahf
popa
sub
pop
jns
push
mov
xor
mov
or
cltd
mov
lods
sub
sub
pop
mov
cmp
scas
mov
mov
jnp
lods
outsb
repnz
lods
cmc
mov
rcrl
lea
jmp
mov
xor
or
das
pop
jae
lds
lret
jnp
ljmp
xchg
rclb
xor
das
popf
lret
cld
setle
idivb
lock
xchg
loopne
test
and
imulb
ret
mov
and
cmpsl
repnz
dec
mov
sahf
stc
ss
xchg
add
mov
sbb
adc
or
test
adc
dec
or
mov
inc
out
cvttps2pi
movsb
or
jmp
jg
icebp
jecxz
icebp
push
rcrl
inc
inc
sahf
dec
sub
pop
sarb
dec
ficoml
mov
xor
xor
aam
dec
cmpsl
enter
in
aas
lods
jbe
xchg
int
xchg
pop
and
mov
repnz
push
mov
inc
in
mov
dec
mov
mov
repnz
mov
dec
pop
xchg
call
cld
or
sub
leave
sarl
jge
pop
lea
jb
movsl
push
ljmp
fstl
fdivrp
imul
push
daa
out
movsb
adc
test
push
or
cli
icebp
xchg
jg
cmp
inc
adc
sub
adc
add
mov
stos
and
loopne
jg
loope
mov
inc
inc
sbb
sbb
sub
xor
cmpsb
mov
sbb
and
dec
mov
test
imul
enter
cmp
pop
repz
cltd
loop
push
jno
or
inc
jecxz
or
mov
inc
mov
ret
mov
scas
push
mov
out
loop
mov
lcall
fisttpl
inc
xchg
enter
les
push
pop
movsl
xlat
pop
aad
jmp
fsts
mov
jae
jo,pt
imul
je
mov
xlat
xorb
sbb
imul
xor
sbb
pop
clc
push
push
sarb
push
dec
mov
inc
cmpsb
xchg
std
mov
xchg
adc
ds
push
outsb
loop
xchg
inc
jns
in
push
divps
mov
ss
ss
enter
cmp
andb
pop
cltd
in
in
sbb
xor
inc
jle
cmpsl
loopne
dec
mov
mov
cmp
inc
jae
xchg
into
xor
test
jmp
cmp
addb
insl
es
lds
mov
dec
pushf
or
push
xchg
push
push
ds
or
mov
cli
notl
push
je
sbbl
lret
push
fistpl
mov
inc
aas
je
mov
aam
xor
roll
bound
mov
daa
inc
std
popf
aad
das
pop
je
push
lret
jne
into
nop
ja
repnz
ret
gs
mov
imul
in
xor
pop
xchg
pop
orl
mov
rcrl
clc
push
add
dec
pop
das
jl
out
cmpsb
ljmp
push
test
outsb
mov
inc
negl
cmpsb
inc
test
inc
or
xor
jne
stos
sub
jns
mov
in
scas
aas
jne
sbb
cmp
leave
adc
dec
out
pusha
fisubl
dec
xor
push
outsb
mov
xchg
adc
repnz
cmp
test
mov
bound
add
mov
scas
cmc
pop
xchg
push
inc
arpl
xor
and
sbbb
push
andb
add
fnsaves
mov
stc
jle
addr16
lahf
sbb
cli
xchg
and
std
xchg
adc
mov
shrl
sbb
pop
iret
pop
xchg
lds
add
sbb
aad
imul
jae
jnp
xchg
jmp
out
sbb
adc
sbb
pop
mov
sbbl
cli
mov
fimuls
lret
mov
test
out
rolb
aaa
clc
cli
push
cmp
pop
sub
jbe
movsl
jne
cmp
bound
cmpsb
mov
cld
jmp
pop
mov
scas
push
je
sbb
xchg
ret
push
lret
pop
sub
shl
and
ss
adc
sbb
adc
loope
pop
cmp
xchg
cmpsl
loop
fmul
xchg
incb
and
inc
orl
negb
clc
out
out
or
push
add
test
mov
and
xchg
imul
dec
cld
push
shrb
and
scas
sahf
imul
jmp
mov
rclb
shrb
test
pop
pushl
lds
fidivs
mov
push
mov
in
out
arpl
push
jnp
test
xor
cmp
cmp
arpl
fsubrs
mov
int
pop
fidivs
adc
or
push
fwait
sub
outsb
cmc
dec
adc
push
orl
xchg
call
pushf
icebp
inc
pop
xchg
ljmp
mov
ret
stc
push
mov
inc
xor
mov
mov
sti
mov
mov
pop
inc
sahf
int
xchg
imul
jnp
push
test
sbb
test
rol
aas
cmpl
xchg
cmp
imul
inc
je
jno
pushf
mov
jmp
mov
adc
mov
mov
cmpsb
incl
jbe
test
shl
cmp
ret
inc
fwait
scas
gs
ficoms
aad
mov
fildl
popf
ljmp
mov
and
icebp
imul
iret
test
xor
clc
in
xchg
ss
mov
adc
xchg
out
mov
mov
mov
sbb
setne
xchg
in
lods
mov
jno
jno
mov
scas
out
arpl
inc
push
sub
ret
cmp
inc
cmc
sbb
aaa
mov
push
pop
rol
hlt
mov
mov
or
dec
mov
sahf
pop
out
lret
jnp
jo
icebp
out
mov
pushf
je
sar
or
hlt
fadds
mov
enter
cltd
cltd
icebp
lds
xchg
dec
push
adc
daa
jns
pushf
xor
fimull
sub
pop
inc
fnsave
inc
stos
pop
lcall
das
incl
jns
cwtl
push
pusha
lock
jmp
out
mov
std
pop
pop
loop
loop
arpl
test
and
pop
sbb
mov
sub
cmp
cmp
int3
test
dec
sbb
sbb
scas
jecxz
insl
popf
in
xchg
inc
jl
jp
sub
jbe
scas
xchg
xor
shrd
stc
pop
push
inc
std
inc
dec
insb
mov
and
jp
xor
adc
movsb
mov
and
sti
xor
or
and
mov
dec
jnp
addr16
test
mov
stos
push
jmp
out
fs
mov
mov
ret
setge
cld
pop
fldenv
lahf
lret
pop
jle
mov
popf
mov
scas
movsl
scas
dec
lcall
pushf
ss
mov
sub
xor
sahf
fisubs
test
stos
adc
pusha
dec
xchg
adc
cmp
xchg
bndstx
push
in
das
iret
cwtl
shlb
push
push
xchg
mov
outsb
inc
das
out
push
add
cmpl
insl
in
and
or
add
cwtl
cli
lcall
cmp
and
sbb
xchg
push
push
push
js
jl
add
xchg
dec
jge
pop
aaa
test
sbb
dec
adc
and
and
and
sub
mov
sqrtps
push
fnstenv
daa
decb
sti
aam
add
subl
push
inc
mov
or
and
and
push
pushl
lret
addr16
inc
int3
sti
aaa
repz
cs
clc
mov
clc
jg
loope
dec
leave
pop
outsl
cmp
test
scas
pop
call
lret
int
cld
xchg
sub
aas
mov
in
or
and
stos
dec
and
imul
or
push
pusha
pop
int3
popf
xor
lret
mov
jl
stos
stc
mull
fbld
push
imul
push
sbb
mov
inc
pop
add
iret
or
mov
out
test
mov
dec
mov
out
xchg
test
andl
mov
xor
add
inc
mov
int3
xor
in
dec
push
jo
cmp
cli
fdivp
frstor
pushf
or
flds
or
mov
mov
test
movsl
imul
aas
cmp
out
sahf
in
shll
fstp
fwait
lea
loope
fs
add
sbb
or
push
mov
mov
adc
das
repz
pop
fidivs
or
enter
add
repnz
xlat
fucompp
or
push
mov
repz
mov
ds
lahf
add
jnp
ja
push
xchg
adc
push
jae
test
test
xchg
mov
aad
jmp
cmp
add
out
adcb
inc
in
push
outsb
or
adc
icebp
lahf
jle
or
out
pop
lret
lret
and
ret
xchg
mov
imul
mov
pushf
mov
inc
sub
sub
fidivrs
mov
repnz
lock
or
daa
pop
es
mov
inc
test
es
adc
movsl
adc
jbe
adc
cmp
sbb
or
cmc
sub
sbb
add
lods
mov
sbb
test
and
or
or
insl
sub
lock
push
hlt
pop
adc
sbb
xor
jmp
mov
push
cmp
xchg
sub
sub
jns
lret
js
incl
sub
call
js
mov
jle
dec
cmc
push
jns
scas
push
dec
lds
xor
sar
cmpl
dec
xor
cs
push
xchg
sub
or
popa
js
xchg
mov
mov
dec
aaa
fldcw
xchg
sahf
std
mov
dec
mov
sbb
or
sarb
cld
stos
pop
adc
int3
leave
iret
mov
fbld
lret
fwait
mov
iret
cld
xchg
shr
pop
mov
rclb
xor
stos
aas
xor
sub
shll
mov
inc
cltd
sbb
or
cltd
lcall
xlat
push
idivl
jle
popf
lahf
dec
cld
jge
inc
popl
sbb
lret
mov
roll
in
pop
mov
sbb
lret
inc
and
test
in
adc
sbb
cli
insb
mov
call
test
inc
je
cld
mov
cld
pop
jnp
jns
xor
loopne
mov
enter
movsb
les
roll
popa
jecxz
add
or
lahf
mov
push
dec
loope
js
mov
repnz
cmc
daa
fdivrl
mov
pop
dec
fistps
in
dec
pop
and
dec
jecxz
inc
adc
cld
xorl
in
lcall
mov
push
cmc
push
jbe
xchg
clc
sbb
invd
lods
or
xor
outsb
pushf
loop
mov
inc
pop
inc
mov
jne
sbb
cmpsb
gs
les
sbb
arpl
xor
lods
mov
lret
aam
xor
lret
ret
pop
push
sub
iret
mov
sbb
call
sarl
mov
and
mov
stos
in
andb
std
cli
push
inc
rclb
loopne
mov
clc
daa
push
xchg
mov
mov
bound
gs
pop
fcompl
stos
adc
loopne
and
dec
sub
mov
popa
push
and
loopne
fwait
stc
and
xchg
xor
sahf
dec
push
pop
and
xchg
sub
aas
and
xor
xchg
inc
data16
or
cwtl
xchg
clc
loope
pop
adc
and
adcl
sub
push
dec
adc
pop
push
jbe
test
and
cld
dec
bound
dec
insl
pop
xlat
pop
sbb
loop
mov
addw
mov
fadds
pop
mov
notb
lea
fldt
movaps
getsec
push
int3
dec
ljmp
jg
mov
ss
dec
jmp
outsb
nop
clc
cmp
cmp
and
mov
jb
mov
cli
mov
and
fsubrs
jle
xchg
add
push
test
cmpsl
stos
mov
mov
xor
and
jle
pop
xor
lods
push
movsb
cmp
pop
mov
xchg
iret
imul
imul
push
sbb
insl
push
movsb
add
add
and
je
jo
push
in
push
lret
mov
scas
dec
sub
cld
push
push
mov
clc
sarl
cli
in
xor
lahf
jle
gs
movsb
and
jno
imul
push
jecxz
mov
xchg
pusha
sbb
mov
outsl
lahf
das
jg
mov
mov
mov
jmp
int3
lods
inc
and
inc
and
aad
cwtl
add
notb
push
xchg
roll
push
jo
outsl
loop
lea
xor
xor
jecxz
xchg
xchg
pop
shl
arpl
js
push
pusha
fimuls
mov
and
das
and
fwait
sub
iret
adc
cwtl
inc
add
bnd
das
aaa
jmp
scas
or
xor
xchg
pop
and
std
inc
adc
or
ss
pop
sarl
pop
inc
test
sbb
xorl
adc
jmp
sbb
and
lea
enter
add
test
sahf
cmp
mov
mov
insl
jno
in
and
icebp
jl
inc
mov
sub
and
or
mov
leave
mov
out
sarb
xor
sub
mov
lods
imul
pop
pushf
jecxz
lods
mov
test
test
into
adc
pop
xlat
push
push
cmp
mov
movsl
in
xchg
sub
out
xlat
dec
mov
cwtl
arpl
mov
cli
movsl
or
and
cmpb
adc
mov
dec
push
jbe
inc
push
cmp
lahf
je
sahf
sbb
mov
sbb
xchg
jae
sub
and
outsb
inc
aas
mov
movb
xchg
push
sbb
pop
xor
xorb
adc
mov
lret
mov
pop
repnz
in
outsl
add
jnp
shll
add
jnp
in
scas
rclb
and
lock
loop
test
pop
movsb
lods
dec
adc
and
dec
loop
dec
xchg
scas
jle
mov
arpl
enter
pop
mov
in
and
sbb
ret
mov
aam
outsb
gs
fisubrs
sbb
push
xchg
add
sti
in
js
aad
inc
jl
adcl
iret
enter
push
mov
subb
stos
arpl
aas
out
test
cmp
fbld
add
int3
fs
push
insb
or
js
add
adc
or
fisubrl
xchg
aaa
mov
mov
gs
mov
fildll
faddl
mov
iret
cmpsl
ss
and
popa
dec
rorb
add
lret
and
jo
jmp
lea
mov
pop
push
leave
ret
inc
shr
ds
aad
sbb
pop
sbb
sub
rolb
popa
test
sti
mov
jbe
mov
inc
imul
out
xor
lret
cmp
mov
in
jne
adc
out
negb
loope
push
femms
jmp
and
mov
adc
ret
ds
fsubl
xor
cld
bound
inc
mov
sbb
add
sbb
int3
outsb
jno
xchg
shr
cld
fcompl
sbb
jb
mov
xor
xlat
sub
mov
roll
push
cmp
add
gs
stc
and
fwait
fs
sub
cltd
jge
mov
sti
popf
add
mov
and
sub
dec
ja
aad
mov
stos
ret
push
mov
std
inc
cmp
cmp
sahf
mov
or
sub
mov
mov
xlat
gs
inc
mov
xchg
out
sbb
jmp
mov
int
pusha
in
jae
rclb
jno
fldcw
neg
fnstenv
inc
push
aas
jecxz
dec
aad
out
mov
scas
and
loope
mov
or
jb
shrb
mov
cli
jl
pop
movsb
and
mov
dec
xor
test
repz
mov
and
dec
ror
pop
xor
dec
shll
mov
cmp
adc
fsubs
loop
jnp
xor
psubd
pop
arpl
mov
call
xor
push
fdivr
adc
jo
outsb
fistps
testl
mov
leave
mov
xor
jmp
mov
mov
mov
add
out
stos
into
sub
add
nop
notl
mov
sbb
and
sahf
test
pop
pop
jmp
call
pop
js
add
cli
mov
adcl
std
pop
jl
sub
fidivs
mov
jno
aad
mov
in
test
dec
push
jbe
xrelease
fildll
fdiv
pop
jg
dec
jmp
inc
daa
scas
dec
test
jl
icebp
cltd
sub
shrb
push
daa
add
add
adc
cld
add
addr16
loopne
pop
mov
push
cwtl
sbb
je
sub
das
xlat
adc
call
jnp
out
fucom
xor
add
shrl
add
cmp
cmp
out
mov
sarl
cltd
sub
lds
xchg
aam
cmp
and
mov
jns
add
mov
inc
mov
add
icebp
adc
jmp
add
inc
jg
xchg
arpl
inc
movsl
mov
push
push
xor
adc
push
xlat
mov
mov
ss
fdivl
icebp
lods
inc
insb
jo
sub
or
fstpl
leave
mov
repnz
mov
jmp
scas
leave
push
pop
data16
ds
mov
push
sbb
and
mov
inc
int
jecxz
jo
cmp
dec
ret
nop
and
push
andl
repz
das
test
dec
rcrl
shll
and
ja
into
xchg
jns
out
dec
mov
test
mov
orb
fdivrl
lea
out
pop
mov
cld
and
jmp
xor
fwait
cld
add
inc
popf
pop
sbb
test
out
xor
mov
loopne
jo
xchg
push
adc
shlb
push
jne
dec
mov
cmp
pop
divl
pop
pop
orl
mov
xor
pop
inc
dec
seta
test
mov
and
and
idivb
stc
xor
je
push
and
mov
dec
jecxz
pop
jmp
xchg
sub
cmp
call
jnp
outsb
fs
test
cmp
cmpsb
dec
movsl
dec
insb
or
fcoml
in
mov
shll
cmc
inc
and
mov
sbb
std
js
fwait
lcall
cmp
mov
push
daa
repnz
in
xor
in
js
std
cmp
pop
add
data16
mov
cmp
xor
cmp
mov
ljmp
and
fildl
sbb
xor
mov
in
sbb
cmc
sub
ret
movsl
sub
addr16
adc
pop
faddl
add
cli
pop
jbe
imul
je
or
lret
outsb
icebp
dec
dec
mov
dec
mov
xchg
popl
int
fwait
jg
imul
or
lahf
arpl
outsb
jg
jnp
adc
leave
fwait
push
inc
rcrb
aam
js
cmp
dec
rolb
out
cs
fwait
jle
rclb
push
ret
int
and
dec
jl
clc
jnp
adc
pmuludq
xchg
sub
outsl
cmp
pop
nop
push
es
or
or
mov
mov
push
and
movsb
inc
jg
dec
test
xlat
push
adc
cmpsl
cld
fimuls
inc
pop
push
clc
adc
imul
jo
pushf
stc
xchg
lret
rorb
cmp
sbb
mov
les
push
cwtl
fs
xchg
sub
int3
add
ror
fidivrl
addb
rcll
xchg
lock
lcall
xchg
mov
jb
stos
mov
fidivrs
cmp
and
push
mov
inc
imul
cmp
or
lods
jg
mov
ss
mov
adc
icebp
dec
in
mov
xchg
cwtl
jne
mov
nop
movsb
daa
lea
and
adc
out
add
jmp
pop
mov
jp
dec
xlat
bound
std
jo
and
pop
dec
mov
inc
cmpsl
jb
stc
out
inc
and
pop
fcmovb
add
inc
cwtl
inc
inc
sbb
mov
add
out
lret
inc
or
ficoml
ljmp
or
mov
inc
ffreep
mov
in
mov
pusha
ss
inc
ret
cmp
adc
or
ret
subl
jns
in
mov
daa
ret
add
sbb
ljmp
or
jl
test
mov
push
mov
call
adc
bound
orl
imul
xchg
jbe
adc
mov
icebp
filds
sbb
inc
mov
ja
or
movsb
std
dec
mov
mov
add
call
lea
rcl
sub
jae
ljmp
fsubrs
jo
aas
roll
xorb
sbb
test
sbb
and
lea
das
push
xchg
mov
fmul
cmpsb
xchg
int3
and
mov
inc
lods
sbb
loopne
pop
fwait
into
fcomip
popf
add
sbb
mov
hlt
out
sub
movsb
dec
stc
sub
dec
mov
mov
outsb
or
test
add
push
nop
mov
test
sub
adc
jmp
mov
cwtl
sbb
scas
inc
and
mov
rcl
repz
mov
aas
cltd
mov
sbb
arpl
lods
pop
xlat
pusha
enter
out
cmp
into
pop
movsl
sub
mov
loopne
cld
popa
dec
lret
test
enter
sarl
sub
sub
loop
xchg
pop
fxch
pop
mov
nop
and
cmp
nop
jmp
fistl
sbb
stc
movsb
xor
cmp
add
insb
nop
inc
cltd
js
pushf
clc
sbb
and
add
xchg
sbb
push
pop
daa
je
push
rcll
fsubl
popf
jb
mov
fsubs
dec
test
sbbb
hlt
cltd
stc
adc
loopne
xor
xor
sbb
mov
cmp
lcall
loopne
scas
ficoms
push
lea
push
add
je
lahf
fsubrp
icebp
xchg
imul
jl
cwtl
cs
push
jg
daa
xchg
addb
pushf
cltd
mov
xor
adc
jle
imul
pop
lock
bound
cmp
dec
or
jle
or
outsl
cmp
push
aaa
xchg
in
cmp
sti
dec
adc
imul
aas
push
fstl
dec
stc
and
push
inc
int
lcallw
jg
or
xchg
ret
add
aam
sub
int
stc
jl
lret
mov
scas
mov
lahf
fisttpl
sbb
push
xchg
sbb
dec
mov
std
mov
xchg
pop
mov
sarl
push
cmp
les
pop
xchg
shll
ljmp
lods
jo
sbb
inc
out
test
pop
pop
inc
push
mov
les
insl
mov
nop
sbb
fs
in
ds
lea
call
cmp
ds
imul
inc
sub
outsb
cltd
mov
adc
cld
inc
cmpsb
stos
push
and
loop
jle
mov
flds
daa
push
push
jne
xlat
push
dec
clc
fdivp
jp
adc
movsl
roll
xchg
sbb
std
and
imul
out
dec
xor
repnz
ja
xor
cmpsb
call
push
mov
or
adc
ja
insl
dec
fidivrl
das
ds
pop
ficompl
ret
cmp
mov
sarl
aaa
mov
xchg
mov
cltd
ficoml
mov
loopne
mov
and
jb
sbb
shrb
outsb
xchg
mov
xor
fpatan
mov
cmp
notl
xor
int
jae
sub
out
mov
or
adc
test
mov
fsubs
sbb
inc
push
fidivrl
push
xchg
lds
cmp
mov
pop
mov
inc
sbb
pop
push
repz
cmp
mov
xchg
cli
loope
pop
or
pop
xor
loope
scas
scas
gs
js
cmc
push
lret
and
cltd
aas
inc
sub
movq
sbb
enter
inc
scas
aaa
lcall
movsl
fucomi
push
inc
orb
cld
movsl
arpl
xchg
mov
pop
pop
push
mov
inc
push
loopne
mov
and
ret
dec
into
enter
xchg
cmp
push
movsl
movsb
orl
enter
or
mov
lock
mov
mov
mov
pop
pop
ror
shrl
mov
add
adc
lock
sbb
out
sbb
arpl
mov
out
aaa
adc
movsb
sub
jo
das
sahf
sub
push
ret
shl
and
mov
stos
sarb
repnz
cltd
sti
xor
push
and
mov
push
dec
sbb
insb
pop
sbb
gs
outsb
mov
adc
cwtl
mov
inc
insl
stos
lahf
out
push
subb
scas
pop
pop
mov
cmc
ljmp
mov
pop
sahf
add
ja
insb
push
pop
mov
in
in
mov
test
out
mov
sahf
adc
push
inc
ja
cmc
jae
xor
clc
cs
aaa
sub
and
lea
adc
mov
push
rolb
data16
jbe
and
cmpsl
lds
cli
xor
mov
jmp
pushf
inc
adc
scas
cmp
push
push
cmc
addr16
in
push
cwtl
insl
loope,pn
dec
and
fmuls
sub
push
aaa
pop
fstpt
js
mov
into
mov
or
fmuls
adcl
or
inc
adc
pop
hlt
mov
test
fcmovbe
lret
jne
sbb
arpl
xlat
fiadds
xor
mov
movsl
bound
sbb
roll
pushf
pop
jecxz
movsl
jno
push
cli
shr
aas
adc
push
mov
es
pushf
sub
sub
in
dec
cs
xchg
mov
clc
push
pop
icebp
xchg
mov
arpl
push
cmp
pop
iret
pop
lods
or
leave
bound
lods
adc
arpl
inc
mov
cmp
xchg
inc
daa
and
jmp
into
push
testl
or
movsb
sub
sahf
mov
mov
pop
mov
add
hlt
es
sbbl
fnstenv
lahf
xchg
sub
ret
mov
inc
sub
stos
addb
push
shll
mov
sahf
inc
mov
sbb
inc
ret
jmp
xor
mov
sbbb
cmpsl
sub
mov
pextrw
fwait
jb
iret
lds
pop
add
mov
test
cmp
adc
mov
cmp
incl
dec
jb
or
dec
mull
shrb
xchg
cld
mov
pop
sbb
ds
aad
cmp
or
mov
ss
and
or
pop
lahf
pop
push
dec
xchg
jmp
push
fcoms
mov
imul
orb
xchg
fsubs
mov
je
push
in
jae
sbb
pop
enter
outsb
je
fcomi
jo
adc
aaa
jge
inc
ret
inc
mov
movsl
rep
js
lods
mov
pmaddwd
icebp
sub
enter
fucomi
mov
dec
inc
lods
lea
xchg
mov
cmp
sbb
addr16
adc
cmp
adc
arpl
shlb
jp
push
sub
lahf
add
andl
inc
shll
mov
cmp
imul
cmp
or
cmp
dec
xchg
sub
iret
push
mov
sbb
lods
push
jne
adc
ret
pushf
jp
outsl
cmp
push
xor
pop
lea
adcb
sbb
loopne
push
sbb
ret
push
push
setbe
inc
imul
xchg
stc
mov
lds
cwtl
mov
ds
add
adc
loope
pop
lock
movsb
inc
mov
testl
push
repnz
rorb
add
adcb
rcl
jp
cmpsl
xchg
stos
pop
int
xchg
and
push
pop
lods
push
push
jne
enter
loopne
shll
pop
rclb
inc
stc
inc
jae
test
mov
outsl
dec
test
mov
rcll
in
pop
fsts
xchg
jne
push
sbb
or
mov
xchg
cmp
jae
mov
dec
pushf
push
jnp
gs
xor
lock
out
push
movsl
jecxz
ficomps
sbb
enter
dec
inc
lcall
cmp
ds
cmp
dec
jle
repz
push
sbb
push
fldcw
push
iret
std
or
jnp
dec
push
in
xchg
or
mov
fstpt
mov
pop
insb
jmp
ret
std
testl
cwtl
and
lcall
cmp
daa
adc
insb
mov
xor
sub
rorb
aam
inc
push
xor
fdivr
ror
lock
ljmp
imul
daa
sahf
mov
loop
sub
push
mov
out
adc
sbb
mov
test
dec
into
mov
imull
mov
mov
mov
or
cmc
push
and
popa
rolb
lock
pop
test
js
pop
hlt
out
inc
mov
sbb
mov
nop
push
pop
cltd
push
xor
imul
cwtl
pop
or
jmp
xor
or
add
out
pop
cmc
into
addr16
out
fldl
dec
fs
in
xchg
sbbl
lea
lahf
out
xor
sbb
pop
or
rorl
jno
xchg
jb
sub
pop
cmp
mov
aad
in
stos
popa
mov
push
mov
pop
mov
xchg
ja
cs
or
push
pop
sub
aad
adc
mov
push
mov
aaa
imul
nop
test
fldcw
popf
loop
push
jo
mulb
daa
pop
xchg
lret
stos
mov
ss
cmp
in
xor
lds
cli
mov
jnp
inc
adc
mov
lret
gs
movsl
cwtl
les
out
pop
xchg
fisttpll
dec
addr16
pop
popf
cld
or
test
sarl
aas
adc
inc
out
cmp
out
pop
loope
add
or
lea
mov
mov
fwait
or
mov
pop
dec
into
aas
push
dec
int
nop
xor
push
xchg
mov
push
cmp
xchg
stc
mov
sahf
push
add
dec
fcmovne
xlat
int
xchg
test
imul
sub
popa
mov
nop
mov
xchg
shl
loopne
dec
add
lods
iret
jbe
add
insl
movsb
cmp
push
adc
mov
pop
ds
sti
mov
int
sub
stos
add
fwait
mov
jmp
xchg
jg
ret
sbbl
aad
adc
lahf
jo
fiadds
lea
mov
xchg
mov
push
or
cli
cltd
wrmsr
mov
pop
shrb
cmp
xchg
stos
je
push
jge
pop
repnz
fwait
push
fsubs
es
add
scas
xor
push
in
cmpsb
loopne
test
insb
add
fisttpl
pop
cmp
xchg
loopne
xor
sahf
push
pop
push
movsb
fstpl
jno
jbe
ja
iret
sti
enter
out
dec
mov
cs
nop
xor
push
int3
mul
dec
add
jbe
enter
xor
sub
les
cmpsl
mov
sub
scas
mov
sub
or
inc
scas
inc
out
xchg
cmp
adcl
into
movsl
in
sarl
rol
xchg
or
in
jmp
cmp
lods
sti
cmp
sub
pushl
ret
loop
iret
testl
stc
lret
inc
inc
std
fldenv
dec
flds
nop
std
adc
cmp
lret
sahf
sub
mov
int
xor
popa
stc
std
out
lahf
imul
lods
sub
out
insl
sbb
loop
shll
mov
ret
mov
imul
adc
aaa
xchg
loopne
jbe
sub
test
push
mov
xchg
push
imull
mov
fwait
sub
lods
cmpb
cltd
cs
lods
cli
sbb
mov
and
movsb
mov
fsts
and
aaa
mov
in
add
push
push
sub
push
nop
mov
mov
lock
sub
icebp
lret
push
xor
aas
mov
ja
xchg
push
adc
add
inc
jge
nop
scas
inc
popa
in
jne
and
lock
mov
adc
ret
dec
add
and
pop
jne
push
and
insb
rcr
clc
outsb
or
jne,pt
mov
lods
mov
jmp
mov
jo
push
or
ret
lods
repz
ja
xor
push
jg
lcall
int3
cmc
cmpl
mov
sub
mov
xlat
popf
inc
push
or
push
out
mov
iret
push
icebp
jbe
icebp
mov
inc
repnz
inc
sub
cmp
scas
cwtl
and
stos
sbb
dec
add
push
into
dec
test
mov
push
xchg
gs
jbe
add
inc
je
xor
push
rcrb
dec
pop
rcrb
aad
xchg
mov
in
sub
aam
jns
lcall
fucomip
xlat
mov
in
push
test
in
lea
ror
fwait
push
sbb
movsb
scas
or
dec
adc
mov
inc
popa
subl
dec
or
jno
cli
xor
gs
cltd
cltd
dec
scas
inc
push
sbb
mov
ss
push
fsubs
aas
ds
pop
ret
jge
cmpb
inc
mov
push
mov
or
cmp
mov
insb
divb
dec
cmpb
cmp
inc
and
imul
push
cmp
pushf
shl
test
mov
push
scas
and
iret
xchg
adc
shl
sbb
push
bound
enter
ret
loopne
push
mov
pop
adcb
xor
ss
jns
pop
xor
imul
test
iret
popf
jno
or
xchg
das
mov
push
add
cmpsl
cmp
mov
pop
rcrb
sub
jae
daa
enter
lcall
lea
pop
add
in
cmpsb
and
jecxz
sub
cli
insl
inc
fwait
cli
jb
int
sub
xor
mov
aaa
and
gs
mov
addb
rcrl
dec
push
push
test
dec
push
push
out
adc
ret
cmp
cmovs
push
xor
stc
mov
addb
xchg
or
mov
or
inc
fidivrs
lods
sbb
and
mov
push
sbbl
call
div
mov
insb
jmp
filds
push
sbb
dec
sub
jnp
sub
mov
mov
clc
test
sub
xor
ffreep
mov
adc
sahf
inc
je
out
sub
lahf
mov
lahf
rol
loope
lea
mov
outsb
sub
mov
jg
ja
ret
testb
repnz
dec
imul
pushf
push
sbb
cmc
jecxz
xor
sub
xchg
aas
rorb
add
das
sbb
sbb
pop
repz
rclb
stos
add
es
sub
add
pop
dec
pop
not
icebp
in
and
cmpsb
mov
or
add
mov
sbbb
mov
jb
mov
sub
xchg
inc
icebp
xlat
adc
ljmp
mov
sub
pop
xchg
xlat
pop
adc
mov
xor
cmp
xor
scas
imul
aas
inc
xchg
jo
ja
pop
mov
adc
dec
xor
pop
cmp
ja
cli
movsl
aas
mov
out
in
adc
jo
test
sbb
addr16
popl
cmp
mov
icebp
xchg
lcall
movsl
int
movsl
inc
ss
mov
popf
jge
sub
test
mov
sub
adc
pop
mov
in
movsb
lcall
add
stos
push
mov
lock
xor
adc
mov
fs
fidivl
mov
dec
notb
pushf
sbb
fsubl
test
mov
stos
sbb
in
addl
leave
and
pop
or
dec
xchg
movsb
pushl
inc
addr16
xchg
adc
and
mov
dec
jl
les
sub
insl
in
xchg
dec
xchg
mov
xor
mov
and
pop
add
cli
fwait
int3
lcall
pop
mov
push
cltd
sbb
testl
lock
shlb
push
fcmovne
inc
adc
or
data16
fwait
les
int3
xchg
cli
and
and
mov
pop
add
xchg
dec
out
sub
dec
jmp
aaa
xorb
fwait
mov
lods
aam
scas
mulb
lea
mov
mov
mov
jp
data16
out
sbbl
adcb
adc
das
cmp
push
les
enter
adc
push
cmp
inc
mov
std
pusha
jge
insl
mov
je
inc
addr16
stos
inc
call
cli
sub
pop
sti
repz
xchg
mov
repz
sub
mov
mov
dec
mov
cmp
nop
loopne
cmpsb
cmp
jb
push
les
mov
loope
movsb
dec
andb
jg
movsl
mov
mov
lahf
test
out
pop
dec
std
push
sbb
mov
or
jecxz
das
call
fcoms
mov
jg,pt
cmp
jp
mov
enter
adc
or
orl
sbb
imul
adc
js
jle
into
dec
fiadds
pop
fs
mov
mov
cmp
jle
inc
xchg
dec
add
mov
dec
push
mov
inc
in
xor
cmp
ss
cmp
push
pop
or
lods
jnp,pn
loope
push
int
pop
mov
sbb
jno
imul
add
cmc
lods
outsb
sub
mov
iret
push
add
jecxz
cmp
mov
imul
repnz
add
pop
push
pop
sub
ss
mov
stos
lret
sub
mov
repz
ds
add
in
or
mov
cs
sbb
sub
cmp
inc
or
fbstp
sbb
adc
or
mov
inc
jmp
or
lea
push
sahf
rclb
cmc
mov
mov
mov
dec
pop
xchg
jl
outsl
aas
or
or
xlat
lea
cmp
push
sbb
cwtl
nop
sahf
push
arpl
xor
mov
in
or
fucom
sahf
sbb
inc
pop
outsl
add
adc
test
mov
mov
inc
out
fmuls
mov
push
nop
dec
sbb
les
imul
sbbl
fisubs
adc
fimull
shrb
sahf
out
fldl
stos
cmp
dec
lahf
push
leave
push
shr
inc
fcmovne
mov
lahf
or
mov
mov
cmpsl
rcll
in
push
popa
xchg
pop
call
adc
xchg
mov
and
stc
inc
and
mov
dec
int
lock
in
repz
outsb
pcmpgtb
and
mov
shll
data16
ficoml
loope
outsb
and
lods
and
lcall
jo
test
clc
fisubl
pop
cwtl
sbb
inc
push
dec
sub
imul
and
cmp
mov
pop
mov
pushf
js
adc
je
adc
ss
mov
or
cmp
test
mov
rcrl
cli
jmp
mov
sub
mov
adc
in
aaa
out
and
ja
dec
push
sub
fwait
or
xchg
pusha
pop
sbbb
xchg
sub
push
movsb
dec
daa
call
ret
inc
scas
push
mov
fisttpll
jno
jno
test
jne
cld
add
xchg
adc
out
or
xchg
fistpl
mov
mov
leave
mov
or
inc
call
aaa
ja
rcll
sbb
lods
or
icebp
call
pop
loopne
fwait
jns
inc
mov
out
outsb
jecxz
pusha
lahf
push
push
lea
ss
gs
int
add
pop
pop
mov
movsb
les
sbb
das
adc
xor
pushl
mov
sbb
adc
je
loopne
pop
push
lahf
or
loop
adc
sbb
pop
cltd
loop
mov
or
xchg
add
cmp
cld
jmp
push
pop
or
sbb
inc
movsl
loopnew
insl
vcvtpd2dqy
adc
icebp
mov
enter
stos
bswap
or
or
or
fsubl
outsb
aas
push
mov
inc
add
pop
inc
fcomps
test
cmpsl
and
in
add
mov
bound
or
mov
adc
ljmp
daa
gs
aaa
sarb
jmp
aaa
aad
push
ret
das
mov
xorb
pop
xlat
cmpsb
xchg
push
mov
jle
cmpsl
fucom
cld
cmc
addr16
in
xchg
ljmp
sub
sub
data16
and
dec
sbbb
bound
xchg
jg
push
daa
inc
nop
inc
in
andb
jo
dec
mov
pop
jmp
mov
jp
jmp
adc
mov
jns
mov
outsl
add
sub
div
outsb
mov
fmull
mov
or
sarb
fstpt
lea
push
jmp
cmp
xrelease
mov
iret
sub
adc
ljmp
push
movsl
fists
mov
insb
mov
and
adc
scas
and
jnp
movsl
jle
rcrl
mov
xchg
pop
repnz
fldl
sub
test
lcall
cmp
out
pop
repz
push
adc
dec
cmp
cli
sub
mov
out
xchg
scas
data16
ds
push
or
xchg
out
jge
je
vcvtdq2pd
sbb
mov
dec
mov
and
sbb
insl
ret
out
ss
mov
sbb
xorl
jmp
std
adc
and
sbb
mov
and
dec
lahf
or
mov
add
cmp
add
push
xor
shlb
inc
ss
scas
insb
xor
std
push
loopne
dec
loop
rcll
add
or
lds
stos
jp
outsl
lcall
out
pop
mov
xor
cmp
out
cmp
scas
cmpsb
dec
pop
cmpsl
or
nop
sub
push
mov
bnd
xchg
cmpsl
repz
gs
popa
adcb
addr16
dec
jae
pop
ret
lods
xor
or
push
loop
jecxz
pop
rcrl
mov
cld
nop
pop
pop
lret
mov
fstpl
push
movsl
pop
popf
lcall
data16
pop
push
mov
pop
mov
mov
xor
dec
shrb
or
loop
or
add
loopne
mov
movsb
into
mov
sub
inc
rolb
outsl
sbb
mov
inc
add
dec
lcall
or
jo
sbb
and
mov
sbb
sbb
adc
cs
mov
or
fucomi
and
pop
sar
shlb
pop
test
push
push
sub
mov
out
inc
inc
xor
test
fisubrs
sahf
std
adc
std
pushf
and
rcll
or
shrw
lcall
pop
lcall
inc
popf
mov
repz
mov
push
or
dec
dec
cli
mov
ja
jbe
shlb
bound
mov
jae
lcall
movsb
cmp
xor
sti
je
lods
push
sbb
dec
sti
jl
insb
mov
icebp
lahf
clc
cmp
push
mov
stos
out
pop
add
mov
and
mov
add
in
and
sbb
xchg
ror
jmp
inc
jl
mov
push
or
add
xlat
lods
dec
pop
in
mov
icebp
pusha
movsl
hlt
mov
andl
inc
inc
jg
inc
aaa
mov
aas
pop
jb
jl
ljmp
pop
fbld
hlt
dec
mov
loope
pusha
ret
mov
mov
das
xor
arpl
push
movsb
repz
ret
int
fsubrs
cmp
and
cmp
pushf
mov
inc
leave
lret
adc
pusha
mov
aam
bound
xor
push
sub
cmp
or
jae
dec
push
test
mov
cltd
adc
push
push
outsb
addl
cmp
push
jns
les
andl
sbb
inc
or
ss
jmp
pop
fcomip
shrl
push
ljmp
aam
lcall
aad
fiadds
popf
les
cmpsb
push
jb
dec
or
xor
mov
mov
fdivp
mov
push
call
ds
and
fsubrs
pop
pop
cwtl
jnp
bnd
fidivrs
mov
hlt
sti
lods
sub
aas
movsb
jae
idivb
sbb
jg
xor
cmc
dec
in
daa
enter
ja
inc
mov
pusha
jb
sub
push
dec
inc
shrl
stos
cmp
pop
and
mov
mov
cmp
mov
jae
xor
sub
repz
push
cltd
inc
sbb
imul
sbb
test
sub
addl
mov
dec
test
shr
aad
mov
or
ja
call
jl
inc
xor
push
push
dec
scas
sub
idivl
in
in
sub
inc
js
jnp
jnp
loop
jge
lock
jmp
adcb
popf
cld
lds
add
inc
test
testb
xchg
fcomps
fsubrs
popa
mov
adc
push
arpl
pop
mov
sub
pop
and
mov
mov
popa
inc
fdivrl
adc
fldenv
xor
inc
inc
jbe
leave
incb
bound
xchg
push
mov
je
sbb
push
pop
adc
nop
push
adc
xor
xor
les
sbb
jo
pop
push
jne
lods
in
ljmp
dec
dec
adc
push
lock
add
push
add
or
add
inc
pop
loop
sbb
in
ret
jo
xor
cmp
dec
mov
xor
or
mov
insb
xor
lods
xchg
popa
xchg
inc
mov
mov
sbb
sub
fldenv
pop
mov
out
mov
cmpsb
repnz
and
inc
cwtl
addr16
movntq
sub
insb
cld
push
inc
push
in
jnp
add
icebp
mov
fsubrs
pop
cmp
fistl
test
lahf
cld
dec
cmp
pop
lret
dec
pop
out
jno
jb
xchg
mov
add
ret
pop
fbld
js
sti
int3
xchg
dec
in
push
cs
mov
sub
push
push
mov
sub
pusha
neg
jge
filds
or
pop
mov
dec
into
adc
ret
es
in
scas
jmp
inc
ficompl
adc
mov
cmpsb
pause
mov
lock
mov
dec
test
sub
or
fwait
sub
fildll
add
xor
or
outsl
mov
mov
mov
std
scas
jae
test
xchg
das
outsb
xor
in
sub
jbe
cmp
cwtl
xlat
sub
adc
out
jp
js
push
cmp
add
test
mov
pop
mov
add
movsb
and
xor
mov
dec
out
into
arpl
pop
pop
sub
leave
mov
pushf
mov
js
mov
movsl
xor
jbe
adc
add
cli
movsl
imul
js
xor
push
xor
pop
fmull
in
xchg
and
push
iret
pop
sub
rolb
add
ljmp
ret
mov
aad
data16
push
mov
mov
adc
sub
or
test
mov
sbb
mov
adcl
or
js
push
stc
repnz
xor
mov
push
mov
push
add
imul
dec
and
iret
sbb
aad
jge
xchg
mov
cmpb
dec
push
fcoml
and
xor
rcll
repz
cs
int
adc
xchg
cmp
cld
repnz
add
pop
je
dec
lds
and
lcall
jmp
mov
jns,pt
rorl
add
stos
addb
dec
arpl
push
mov
adc
inc
xchg
inc
notl
lea
pusha
xchg
sbb
xchg
sub
cmp
call
dec
xchg
into
imul
pushf
fistpll
xchg
push
cmp
in
loope
mov
data16
iret
fildl
jae
dec
lds
pushl
test
xlat
dec
push
jno
int
popf
fisubl
js
or
xlat
call
dec
into
stos
pop
fnsave
pop
js
call
cmpsb
cmpsl
aas
xor
sbb
test
ds
jae
mov
or
push
test
js
add
out
popa
dec
xchg
jge
call
icebp
adc
mov
or
cmp
or
mov
add
cwtl
ljmp
cmp
inc
pop
push
popa
pusha
xor
pop
out
loope
cmp
out
push
aaa
dec
or
outsb
arpl
call
frstor
dec
mov
xchg
sbb
dec
jl
sarb
jecxz
push
adc
push
cli
xchg
loopne
pop
sbb
div
test
lret
cmp
int
xchg
cmpsb
jmp
mov
sbb
mov
out
jae
and
dec
push
test
aad
push
push
enter
movsb
mov
fistpll
and
mov
arpl
cmp
sbb
and
xlat
lods
cmpsb
ret
mov
out
adc
dec
in
int3
xchg
inc
ja
out
das
push
leave
mov
pop
inc
scas
cltd
and
sahf
ds
mov
push
mov
sbb
imul
out
dec
incb
cmp
gs
pop
jle
pop
adc
loope
fadds
cmc
xchg
lret
insl
repnz
cwtl
shlb
lret
inc
pusha
push
jne
adc
lea
insb
and
xchg
lret
pop
clc
jg
jl
rcr
push
aas
xor
ret
and
popa
dec
adc
push
mov
scas
mov
mov
outsl
negl
and
in
js
cmc
xchg
jmp
out
and
push
push
lods
jge
mov
and
rcrb
lea
aad
repnz
push
and
addr16
insb
sub
push
lea
insb
ds
push
and
sbb
loopne
mov
mov
les
sbb
mov
aaa
sub
mov
leave
dec
mov
daa
jg
rorb
data16
jae
scas
mov
smsw
std
pop
sub
aam
decl
mov
aaa
nop
dec
jle
adc
dec
fdivs
add
pop
mov
fcomps
xor
and
adc
fstps
jbe
cmpsb
das
xchg
dec
in
xor
cmpsb
xchg
test
aas
std
sbb
jno
adc
popa
xchg
mov
lret
jp
mov
add
mov
jnp
orl
push
inc
pop
add
loop
int3
xchg
jl
movsb
arpl
add
mov
scas
jl
xchg
fldt
push
xchg
test
arpl
jecxz
dec
mov
stc
addr16
mov
add
imul
mov
leave
aam
in
dec
subl
cld
fbld
and
insl
movl
fildll
jne
mov
adcl
dec
enter
jmp
sub
cmp
xor
dec
sbb
test
imul
cmp
xchg
pop
jne
lods
cmp
xor
cmp
subl
mov
scas
rorb
push
mov
out
cmpsl
insb
dec
mov
iret
xchg
stos
mov
stc
push
and
js
imul
push
jne
xorb
adc
lock
stc
pop
add
cmp
ss
sub
sub
jne
xchg
push
inc
push
mov
dec
jmp
xchg
in
stos
sub
xchg
inc
inc
xlat
dec
out
imul
hlt
in
outsl
dec
jns
jne
cmp
nop
jge
pop
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
pop
add
pop
add
pop
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
pop
add
pop
add
pop
add
pop
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
pop
add
pop
add
pop
add
pop
add
mov
