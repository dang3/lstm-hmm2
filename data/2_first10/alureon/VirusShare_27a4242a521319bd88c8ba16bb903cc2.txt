mov
push
mov
sub
push
push
push
pushl
call
push
pop
xor
push
lea
rep
pop
lea
rep
push
pop
lea
rep
mov
xor
movl
mov
mov
movl
xor
mov
mov
movzwl
mov
lea
push
mov
call
cmp
mov
je
addl
inc
add
cmpl
jb
mov
mov
push
lea
pop
mov
lea
push
movl
movl
mov
mov
movl
call
mov
cmp
jge
push
push
push
push
push
push
call
call
xor
cmp
setg
pop
pop
pop
leave
ret
push
push
push
push
push
push
call
xor
cmp
jbe
pushl
call
inc
cmp
jb
xor
jmp
push
mov
sub
push
mov
mov
mov
mov
add
mov
test
jne
inc
jmp
andl
push
lea
mov
jmp
mov
add
xor
nop
movb
mov
mov
inc
cmp
jb
mov
test
je
lea
movsbw
mov
inc
inc
inc
mov
test
jne
lea
push
call
mov
test
je
mov
andl
add
cmpl
je
mov
mov
test
jns
and
jmp
add
add
push
pushl
call
mov
test
je
incl
mov
lea
cmpl
jne
incl
mov
mov
imul
lea
lea
cmpl
jne
xor
inc
pop
pop
leave
ret
xor
jmp
push
mov
sub
push
mov
push
test
je
mov
test
je
cmpl
je
mov
test
je
add
push
lea
push
push
call
add
pushl
lea
push
pop
add
call
mov
test
jbe
mov
sub
mov
mov
inc
dec
jne
push
pushl
mov
pushl
mov
pushl
pushl
call
pushl
mov
mov
call
mov
add
push
pushl
pushl
pushl
call
add
pop
jmp
xor
pop
pop
leave
ret
mov
mov
ret
push
mov
mov
imul
sub
cmp
jb
mov
push
call
mov
add
imul
push
xor
pop
div
mov
mov
mov
mov
sub
mov
test
je
mov
sub
push
mov
call
xor
divl
mov
add
cmp
jae
mov
mov
imul
xor
div
xor
mov
sub
imul
div
mov
cmp
jae
mov
sub
test
jbe
mov
mov
sub
mov
mov
mov
mov
mov
inc
decl
jne
add
add
add
cmpl
jne
pop
pop
leave
ret
push
mov
push
push
mov
push
pop
cmp
jb
lea
push
xor
mov
test
jbe
sub
push
mov
mov
mov
lea
lea
mov
ror
imul
xor
mov
mov
mov
mov
mov
mov
inc
inc
cmp
jb
pop
pop
pop
leave
ret
push
mov
sub
mov
push
mov
add
mov
mov
sub
mov
add
movzwl
lea
mov
movzwl
lea
mov
mov
mov
mov
xor
xor
cmp
jae
push
push
mov
mov
addl
push
pop
rep
mov
mov
add
add
mov
movzwl
inc
cmp
jb
pop
pop
mov
add
pop
mov
xor
inc
leave
ret
push
mov
push
push
andl
andl
push
push
push
push
push
call
mov
lea
push
pushl
lea
pushl
movb
push
pushl
movb
pushl
push
call
push
push
push
call
pop
leave
ret
mov
push
mov
mov
push
mov
cmp
je
push
call
mov
pop
pop
ret
mov
push
mov
sub
mov
mov
push
mov
mov
push
mov
mov
movl
lea
movsl
movsl
movsl
mov
mov
push
movsl
mov
push
lea
push
push
mov
call
mov
pop
pop
call
leave
ret
mov
push
mov
mov
pushl
mov
push
pushl
call
pop
ret
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
call
pop
test
je
push
push
call
pushl
pushl
pushl
call
mov
mov
push
call
dec
jne
pushl
pushl
pushl
call
mov
pop
jmp
xor
inc
pop
ret
jmp
testl
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
ret
push
mov
push
push
push
mov
mov
call
mov
mov
add
mov
add
test
je
andl
mov
sub
add
mov
mov
mov
mov
add
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
mov
add
lea
add
cmpl
je
or
sub
mov
mov
sub
lea
add
mov
mov
mov
mov
add
push
push
push
call
mov
push
mov
call
xor
pop
inc
pop
leave
ret
mov
mov
mov
rol
imul
add
mov
ret
push
mov
sub
push
push
push
push
xor
push
push
call
mov
mov
rol
mov
mov
cmp
je
mov
jmp
push
call
mov
mov
add
movl
mov
push
shl
add
incl
push
push
push
call
push
push
mov
push
mov
call
cmp
je
push
call
mov
push
push
call
mov
call
add
mov
cmp
je
cmpl
jne
push
push
push
call
push
push
push
call
lea
push
mov
push
pop
add
xor
div
push
pushl
pushl
call
push
pushl
push
pushl
call
mov
mov
lea
mov
lea
add
add
mov
pushl
mov
mov
call
pushl
mov
mov
call
pushl
mov
lea
mov
call
mov
add
lea
mov
pushl
and
pushl
push
push
call
mov
push
call
test
je
xor
pushl
mov
pushl
pushl
pushl
call
mov
cmp
jne
push
call
cmp
jne
push
push
pushl
call
push
call
pop
pop
pop
xor
pop
leave
ret
push
mov
sub
mov
add
mov
sub
mov
je
mov
test
je
push
mov
add
test
jbe
push
push
mov
sub
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
add
addl
decl
jne
mov
test
ja
pop
pop
pop
xor
inc
leave
ret
jmp
je
xor
stos
or
std
pop
loopne
xchg
adc
mov
and
inc
pop
cmpsb
popa
jnp
mov
aas
mov
ds
stos
push
mov
repz
jp
add
addr16
ljmp
and
pcmpgtd
jmp
repz
or
std
aas
iret
cltd
xchg
mov
rorb
inc
pop
cmpsb
popa
jnp
mov
and
mov
pop
or
and
mov
pop
or
push
jg
ljmp
iret
cmp
adc
xchg
sub
bnd
push
rol
adc
test
jb
xor
cs
mov
pop
xor
fsubrp
pop
xor
sub
mov
pop
push
div
fstpt
aam
sbbl
mov
jns
add
pusha
nop
and
insb
in
jae
push
add
in
jbe
or
pop
dec
testb
mov
push
xor
iret
cmpsb
cmp
dec
aam
jb
adc
cmpsl
adc
rorl
jno
lcall
or
insl
or
add
cmp
lds
repnz
add
loope
sbb
sbb
jae
js
add
aas
jp
out
sub
push
sub
call
cmp
xchg
outsb
xor
add
fildll
dec
mov
xor
ja
imulb
or
push
pminub
repnz
inc
loop
sub
mov
sub
arpl
jo
mov
push
repnz
jmp
mull
mov
and
sbb
lods
xor
std
movsb
jmp
repz
push
fcomip
dec
test
js
xchg
in
inc
xlat
pop
mov
add
mov
and
addr16
and
xchg
or
pop
repnz
push
mov
lret
aaa
jle
mov
sti
mov
jecxz
out
daa
add
daa
fmull
mov
stos
fidivs
mov
sbbb
lods
xor
xor
movl
in
add
data16
fistps
and
mov
das
gs
das
fisubl
push
lock
pop
aas
into
jle
movsl
sub
in
mov
adc
and
scas
jl
sbb
sbb
sbb
popa
mov
ret
mov
sbb
mov
push
mov
dec
test
mov
aaa
dec
push
add
add
add
add
add
and
ss
push
cmp
gs
mov
jns
addr16
lcall
or
cs
pushf
arpl
mov
jmp
stos
jbe
push
imul
pop
outsl
push
sti
stc
xchg
out
sbb
add
xor
data16
dec
adc
repnz
bswap
shrl
stos
les
mov
xchg
ljmp
jnp
cmp
push
iret
sarl
sbb
sbb
add
add
add
jecxz
ret
fsubs
sub
call
imul
mov
js
add
inc
fmuls
mov
lock
lods
addl
jmp
jp
add
cs
xchg
shrb
push
lret
dec
das
mov
jno
or
cs
jnp
sub
pop
xchg
int
cli
lods
pop
into
out
shl
iret
jo
les
in
push
fwait
add
jne
loopne
cmp
mov
jnp
mov
pop
sbb
sbbb
add
mov
xchg
mov
fstps
nop
jno
inc
xor
dec
je
inc
mov
std
mov
mov
mov
jne
imul
adc
scas
lret
std
loope
and
sbb
dec
jecxz
push
imul
mov
lcall
cmpsb
int
xchg
dec
mov
int
mov
icebp
cmpsl
xchg
arpl
push
adc
lcall
mov
ja,pn
shrb
adc
cmp
das
mov
pop
jg
imul
xchg
inc
mov
outsl
push
mov
push
and
push
test
push
mov
or
cmp
cmpsl
int3
mov
das
inc
pop
imul
lea
add
rcrl
cwtl
rcrl
mov
jge
in
inc
ret
out
stc
in
arpl
popa
adc
fisttps
adc
out
test
pop
stc
jmp
mov
sub
cmp
mov
dec
pushf
mull
lods
stos
stos
adc
mov
lret
xor
adc
pop
jp
jno
loopne
mov
pop
jb
incl
ljmp
pop
fisubl
mov
jge
pop
addl
cmpb
add
adc
pop
adc
push
cmpb
push
push
arpl
mov
add
jno
jne
sub
mov
xchg
sub
adc
jnp
stc
in
aaa
cmp
in
adc
fldcw
xor
jnp
das
ficompl
ficoml
mov
cld
mov
fcmovnb
inc
mov
rol
pop
bound
push
cs
mov
pop
pusha
inc
and
add
jno
popf
adc
mov
lock
iret
sti
enter
outsb
enter
mov
inc
popf
push
dec
std
mov
and
add
subl
cmc
pop
paddb
enter
fisubrl
popa
mov
fidivrs
xor
mov
sub
repz
in
in
sub
imul
cltd
sub
in
sar
push
sub
fdivl
push
ljmp
xor
push
ret
mov
ret
jae
xor
cli
xchg
mov
data16
jno
ss
dec
dec
jno
mov
in
in
or
mov
jl
push
adc
ret
jg
pop
ret
mov
add
inc
or
bound
das
loop
fstpt
jno
dec
out
repnz
add
imul
xor
sub
fwait
orl
gs
and
dec
clc
pop
pop
ret
test
add
push
jg
mov
or
push
pop
lret
mov
pop
cmc
iret
pop
and
sub
out
outsb
or
cli
inc
adc
ss
aas
fstl
cmp
call
mov
outsl
xchg
test
repz
leave
jns
lock
cwtl
xchg
jb
pop
push
lcall
fs
leave
push
mov
mov
cld
call
mov
imul
mov
mov
popf
ret
mov
gs
aas
add
mov
nop
sub
es
mov
into
test
addr16
xchg
in
push
cmpb
push
push
xchg
or
and
cmp
push
repnz
mov
daa
mov
sbb
fstl
adc
fs
in
xor
int3
scas
mov
aaa
ljmp
mov
dec
or
ffree
inc
jl
mov
lds
jae
lock
and
in
nop
clc
cwtl
mov
cld
shll
loopne
out
movsb
inc
loopne
jno
gs
cmp
fs
adc
lock
mov
fwait
pop
aas
add
inc
xor
sbb
and
stos
sbb
lock
push
xchg
lods
adc
imul
stos
dec
iretw
mov
inc
movsb
dec
or
repnz
rorb
jecxz
pop
sub
fsts
lcall
push
push
xchg
jnp
sti
iret
push
jg
fildll
push
adc
imul
sahf
jp
sub
clc
pushf
mov
add
add
add
add
dec
xor
dec
mov
dec
inc
test
in
shlb
xor
subl
inc
ds
xchg
pop
dec
add
test
adc
aas
ret
sub
addl
int
aaa
lds
lea
adc
inc
sub
lock
cmp
adc
add
aam
lret
push
sub
mov
lods
scas
sub
xchg
in
jb
sbb
stc
adc
lods
sbb
andb
lea
sbb
aad
pop
scas
inc
add
movsl
les
pop
mov
cld
dec
gs
aas
scas
pop
add
dec
cltd
jno
pop
call
out
call
adc
insl
mov
movsl
sar
or
add
push
adc
sub
dec
orb
jecxz
test
aaa
mov
inc
jns
test
push
ret
popf
sbb
add
mov
iret
mov
add
adc
adc
sahf
das
nop
scas
lods
push
lahf
das
cs
add
mov
aaa
les
xor
inc
sarl
jle
insb
and
fisubrs
gs
pop
xlat
inc
pusha
sbb
repz
aam
fistl
in
inc
mov
mov
popf
add
dec
pop
xor
add
andl
push
clc
adc
xlat
repnz
jmp
dec
xchg
subb
inc
push
xchg
sub
lcall
int
inc
aas
pop
sub
add
jno
sbbl
or
pop
jecxz
data16
sti
sbb
aaa
add
loop
cmp
and
mov
xor
dec
sub
push
cmp
jae
sbb
das
lds
mov
bnd
lock
fisubl
add
push
xchg
dec
sub
shlb
xor
rcll
je
lcall
lock
fidivs
loopne
ret
adc
pusha
movb
enter
std
imul
jb
push
push
mov
mov
les
shl
sbb
push
and
mov
stos
pop
jo
stos
push
arpl
add
stc
xchg
int3
jmp
cmc
pop
andl
mov
int
pop
call
sbb
xchg
enter
push
or
mov
clc
sub
and
out
scas
mov
mov
outsb
pop
lcall
lds
jecxz
sbb
push
ficompl
cltd
fimull
rcrl
out
sub
popa
imul
add
add
add
ficoms
mov
or
xchg
xchg
cmc
out
mov
sub
cs
cmp
push
push
jns
dec
es
sahf
mov
cs
sar
ret
imul
mov
cwtl
fs
into
xchg
cmp
pop
xor
dec
cli
lret
add
shll
insl
lret
in
pop
cmp
xor
jmp
jecxz
and
cli
shl
cmc
lcall
sbb
mov
push
jl
inc
in
and
nop
xor
adc
xor
bound
aam
push
pusha
mov
js
push
dec
mov
xchg
mov
and
add
ljmp
movsl
aam
and
rorb
xor
out
divl
pop
aad
insl
mov
out
cmpsb
pop
es
or
cmp
pop
xchg
subb
add
xchg
inc
popa
jge
sub
mov
lea
mov
cmp
adc
jno
shrl
test
mov
movaps
imul
mov
cmp
lods
mov
jno
add
out
fsubrp
ds
pushf
dec
jp
push
adc
cmp
dec
shlb
jle
inc
cmpsb
insb
scas
mov
jmp
inc
sbb
jbe
jge
imul
add
add
add
aaa
outsl
push
out
outsl
sub
xchg
ja
mov
jae
inc
clc
fdiv
add
leave
repz
rol
mov
sarb
xchg
fsubr
cmp
pop
inc
loop
cwtl
cmp
test
jnp
mov
dec
and
fsts
nop
stos
loop
fdivrs
and
add
mov
in
js
mov
ret
sar
adc
cmp
and
adc
add
add
aas
push
and
retw
enter
dec
sbb
mov
push
pop
mov
add
mov
int
mov
mov
mov
js
mov
fidivrl
imul
inc
sarb
fs
jge
pop
fisttps
bound
or
call
fdivrs
inc
mov
insl
push
in
xchg
inc
ret
int
xchg
push
in
sbb
add
sub
jl
cli
pop
test
lea
jne
mov
adc
shrb
jg
shlb
push
push
pop
jl
out
mov
fbld
test
cwtl
icebp
test
dec
cmc
rolb
mov
push
and
or
xor
movsl
inc
mov
sbb
call
ljmp
pop
jnp
std
es
and
mov
mov
in
lcall
inc
fdivl
add
xorb
loope
mov
sbb
sbbl
or
mov
xor
cmpsl
xchg
push
push
xor
aaa
cmp
xchg
adc
and
mov
gs
mov
out
jne
ret
clc
jns
xor
std
jle
sub
bound
jo
ret
test
mov
pop
in
cld
lret
pop
xor
loopne
mov
pop
insb
in
ss
fldcw
add
add
add
add
mov
movsb
cmc
sbb
dec
inc
movsl
fdivs
cmp
jne
xor
pusha
cmp
fidivl
hlt
je
push
int
inc
in
adc
pop
cmpsl
mov
pop
push
js
adc
xor
idivl
mov
mov
ret
sbb
aaa
dec
mov
jbe
aam
stc
push
inc
insl
insb
jp
test
inc
sahf
aam
inc
inc
lods
add
lock
outsl
inc
test
xlat
idivb
dec
adc
push
stos
push
push
aaa
cmp
xor
int
push
jno
in
xor
mov
shll
andl
xor
sub
mov
xor
ret
fld
sbb
outsb
adc
jp
push
push
test
cld
add
xchg
mov
arpl
movsl
push
pop
int
pshufw
jge
fcmovnbe
rolb
add
insb
push
sar
aad
js
in
add
in
or
mov
lahf
mov
dec
push
outsl
mov
sahf
pop
push
mov
add
stos
lods
adc
mov
jne
ds
jl
jo
aam
pop
sbb
mov
cmpsl
jle
lock
pop
xor
jle
and
or
pop
pop
int3
or
inc
aas
std
jmp
cld
and
add
mov
inc
sub
inc
mov
dec
les
inc
shlb
mov
cmpsb
data16
cmp
mov
inc
push
test
popa
or
jne
lds
push
clc
or
stos
cmpsl
add
cs
inc
ljmp
subb
shrl
outsl
cmpsl
ss
add
dec
mov
xor
add
add
add
add
fs
mov
addr16
mov
fs
jmp
and
xor
psubusb
negl
sarb
cmp
and
test
outsl
dec
and
mov
adc
int3
clc
push
xor
leave
add
insl
dec
pop
leave
cltd
jno
sbbb
mov
sub
arpl
xlat
push
mov
testb
xor
aas
negb
xchg
test
loop
hlt
mov
pop
dec
scas
jmp
add
ficomps
decb
addr16
push
gs
xchg
sti
mull
es
arpl
mov
in
jbe
push
sub
inc
fnstcw
xor
cmpsb
lds
fisubs
rcll
test
pop
add
into
movsb
pop
fidivs
aad
cmc
cmpsl
mov
in
negb
movsb
inc
ret
inc
ss
aaa
cwtl
loopne
dec
cmc
dec
arpl
add
out
arpl
testl
sub
pop
popf
sahf
repnz
hlt
mov
loope
push
pop
ret
out
push
mov
push
ss
adc
loope
inc
mov
cmp
mov
jns
fldt
push
out
sbb
aam
out
enter
xchg
cld
mov
mov
aas
ja
outsb
outsl
shrb
push
jge
sarl
xlat
and
lahf
sbb
pop
rcl
and
add
add
add
add
cmp
repnz
arpl
mov
iret
scas
das
lods
icebp
js
or
repnz
adc
cmpsl
sahf
addl
aas
inc
lds
enter
sub
lret
arpl
sbb
add
test
repnz
xchg
int
in
cmp
mov
cmp
int
adc
xchg
pop
add
dec
pop
jno
pop
sbb
xchg
or
jbe
fmull
dec
out
push
inc
mov
mov
cs
outsb
pop
fadds
dec
in
mov
push
shrl
sbb
enter
xchg
dec
jo
push
addr16
inc
dec
xchg
pushf
jmp
cmpsl
pushw
push
push
xor
push
add
jge
pop
adc
shrl
lds
mov
shlb
test
xchg
pop
je
pop
add
add
daa
mov
jnp
dec
dec
push
daa
sub
jne
mov
or
inc
rorl
aaa
pop
and
inc
test
sbb
mov
das
gs
lahf
loopne
pop
cmc
loopne
popa
jbe
mov
lret
pop
inc
adc
xor
js
out
jns
arpl
ret
in
fcmovbe
push
pop
cmp
popf
and
dec
jl
test
push
rol
pop
insl
or
pop
fwait
add
add
or
cmp
pop
jno
mov
ds
addr16
dec
subl
loop
xor
or
mov
outsb
and
mov
pop
sbb
sti
loopne
icebp
inc
sub
les
subb
xor
out
cmp
xchg
fs
sub
es
rcll
cld
popf
adc
clc
icebp
outsl
or
push
idivl
add
mov
sub
adc
pop
scas
mov
aas
push
jge
mov
or
addr16
inc
mov
and
sti
mov
and
in
lods
add
inc
cmp
push
sahf
mov
push
sbb
mov
or
pushf
mov
loope
fldt
mov
aad
mov
xchg
scas
jo
inc
je
add
dec
fistpll
inc
sbb
and
xchg
data16
add
out
loop
push
bndldx
cli
push
sub
pop
jle
scas
push
fldl
lret
iret
inc
loop
test
xor
stos
shl
rorb
add
popw
sbb
xchg
mov
fcmovne
dec
incl
or
push
cmc
push
jmp
data16
dec
adc
bound
pop
outsb
jmp
add
xchg
scas
aam
roll
inc
mov
insb
inc
inc
sbb
clc
mov
inc
add
add
xchg
mov
das
and
mov
and
aam
pushf
test
shrl
int
rolb
and
mulb
imul
jo
push
add
cmp
sahf
adc
in
lea
stos
mov
shrl
stc
pushl
aam
push
cmp
shlb
adc
push
or
mov
pop
add
pop
and
stos
jae
roll
jno
outsb
pop
xor
push
jmp
addr16
stos
xchg
out
repz
rcrl
jbe
lret
sahf
cli
fs
lret
shll
jae
lock
dec
lods
test
adc
adc
xorl
fwait
add
cs
pusha
dec
daa
pop
stos
jbe
jb
jae
lods
xor
jg
hlt
jg
fistl
xor
xor
into
jl
jo
out
add
sbb
fcmovnu
mov
adc
int
jecxz
fildl
icebp
pusha
pop
test
fistpll
sub
push
push
push
fwait
iret
sbb
add
add
lret
xor
lea
dec
cmp
cld
sbb
jbe
add
rcrb
xchg
sti
lret
pop
sbb
int3
outsl
imul
push
cmp
mov
outsl
in
ret
in
leave
mov
push
rcl
push
xchg
jg
push
xchg
test
jg
lds
shl
dec
or
dec
fwait
mov
ffreep
dec
inc
cmp
ret
cmp
sahf
fstl
xchg
jbe
jno
inc
xor
xchg
mov
dec
dec
mov
fidivrs
cmp
mov
pop
sbbl
inc
cmp
movsl
sbb
and
insl
mov
push
mov
dec
addl
roll
pusha
add
or
arpl
test
adc
and
inc
rclb
mov
mov
mov
mov
pop
mov
xor
daa
xchg
out
mov
aad
sub
loopne
fidivl
test
mov
add
adc
lods
cmp
fimuls
testl
jo
push
movsb
sbb
enter
mov
xor
and
lcall
mov
add
add
add
add
add
cmp
ret
and
pushf
add
pminsw
ljmp
jno
cmp
das
mov
jnp
movsl
loop
popa
ss
mov
aas
lods
push
aam
xchg
stos
dec
in
add
scas
inc
out
sub
es
inc
sub
cmp
pop
cmp
fs
test
cmp
leave
stos
mov
ret
push
sbb
xor
add
cmc
adc
add
xor
mov
mov
mov
jb
andl
aad
or
movsb
outsl
cmc
popa
pop
cmpl
cmc
cmp
js
bswap
int3
cmp
ds
dec
popf
adc
inc
mov
insb
clc
mov
add
pop
mov
jge
adc
notb
push
cmp
add
je
popa
jmp
fisttpl
test
add
adc
adc
cmp
mov
or
add
add
add
add
sbb
xchg
sub
repnz
inc
sbb
addb
pop
repz
popa
pop
arpl
xchg
movsb
mov
js
aas
lret
and
les
xchg
sbb
mov
sub
imul
push
insb
lahf
xorl
test
jne
lds
out
inc
pop
outsb
and
in
lock
xor
fidivl
out
out
or
gs
push
xor
dec
testl
inc
add
cs
arpl
add
add
je
jno
sbb
fimuls
xchg
cli
divl
shrl
cmp
sub
push
jge
movsb
xor
jp
sub
sub
call
sbb
test
xchg
rolb
jbe
enter
cltd
popf
hlt
push
bound
cmp
push
cmpsl
lods
push
cmpsb
jb
call
mov
int3
mov
ret
jae
rorb
push
mov
loope
sar
insl
sub
addr16
add
cltd
jp
scas
divb
xchg
mov
and
outsb
shl
push
lret
dec
rclb
rcrl
rorl
cld
mov
jbe
daa
popf
ss
scas
imul
aaa
push
fdivrs
call
pop
or
loope
push
leave
insl
push
jo
dec
push
pop
pop
cmpsb
fistps
pop
int
sahf
aaa
arpl
stos
jae
and
pop
xor
or
in
or
push
out
add
mov
stos
out
jb
iret
xor
add
add
push
fwait
sti
adc
sti
ret
insl
push
lea
loopne
fldcw
or
pop
adc
lods
sti
movsl
les
sub
mov
jmp
insl
mov
movl
negb
ret
sub
dec
adc
rcll
das
xchg
loopne
push
pop
pop
push
shr
pushf
xor
std
idivl
stc
adc
stos
shll
stc
mov
xchg
xor
sbb
imul
mov
jle
mov
mov
mov
repnz
add
add
jmp
pusha
mov
leave
push
gs
lock
sbbb
ss
test
ret
jmp
push
and
xor
es
add
add
lcall
cmpsb
test
daa
cmpl
lods
add
lds
sub
iret
sub
cmp
xor
ret
push
dec
inc
jo
dec
rorb
outsl
push
std
pop
ja
rclb
jns
pop
mov
das
dec
jp
cmp
cmp
mov
popa
fbstp
ss
cmpsb
loopne
add
cmp
sub
mov
jmp
sub
add
dec
fwait
dec
push
pop
cmc
mov
sbb
enter
es
lret
loopne
jne
imulb
push
ds
inc
push
add
pop
push
scas
sti
or
rcr
daa
xor
mov
xchg
add
add
add
sbbl
in
jecxz
ss
cmpsb
sub
lret
push
mov
cld
inc
add
push
mov
adc
int3
repz
sahf
and
pop
xor
fiadds
pop
mov
xchg
jno
jle
xchg
jne
xor
aad
out
andl
in
scas
xor
fldl
icebp
lea
add
fldenv
adc
sub
dec
dec
push
repz
sub
push
or
dec
dec
lcall
sbb
fcmovnb
lret
test
out
mov
shlb
sbbb
mov
push
xchg
inc
dec
mov
imul
push
and
inc
mov
xor
push
out
movsb
xor
ljmp
push
test
mul
mov
leave
lods
sub
add
in
ds
repz
pop
sbb
lret
rcr
movsl
int
outsl
enter
data16
sub
sub
jmp
lds
pop
in
xchg
rclb
sub
add
xchg
sbb
or
enter
mov
push
mov
pop
inc
inc
out
data16
mov
ret
cmp
mov
mov
mov
mov
hlt
sbb
and
lds
fisubrs
cli
dec
jbe
scas
add
add
lahf
pop
inc
aam
push
cmp
cltd
movsb
cmc
adcl
push
ss
cmp
cs
imulb
or
mov
ret
cmp
xor
int
pop
mov
cmc
jns
sub
pop
aad
leave
jnp
leave
in
loop
rcrb
mov
addr16
repnz
xchg
mov
push
popa
lods
mov
insl
xor
subb
cmp
mov
and
jns
inc
imull
xor
in
pop
sbb
add
pusha
pushl
sub
nop
jge
cs
mov
arpl
scas
aad
aaa
fwait
imul
mov
cld
les
mov
add
cld
jle,pn
dec
jl
inc
mov
aam
pop
mov
repz
mov
movsb
jns
jo
mov
aaa
pop
orb
es
jne
mov
shll
aaa
push
add
push
mov
gs
leave
push
or
adc
into
push
mov
loop
hlt
dec
sbb
sub
sarl
imul
lods
add
adc
stos
mov
sub
aad
mov
in
pop
and
movsb
adc
pop
imul
mov
shl
iret
pop
adc
ja
lods
shrb
fsts
ds
add
pop
jns
pop
push
gs
scas
jmp
push
mov
cmp
enter
adc
add
and
xor
sub
pushf
cltd
push
fsubs
and
iret
pop
mov
add
in
aad
dec
and
imull
mov
ljmp
and
jp
push
mov
add
dec
fcomi
leave
push
mov
sub
jne
sub
mull
xchg
jmp
in
mov
jmp
adc
clc
fld
pop
ds
mov
adc
popf
inc
jbe
out
mov
sahf
mov
add
add
outsl
imul
mov
cmpsb
clc
testb
add
ror
jg
and
mov
psraw
mov
sarl
inc
push
cmp
test
hlt
mov
das
cmp
movsb
jb
out
mov
out
int
pop
insb
insb
cltd
xchg
mov
xchg
bound
in
call
sub
sub
pop
mov
pop
outsb
cmp
popf
out
dec
clc
jl
jnp
je
fldenv
push
fnsave
scas
pop
test
fildll
xor
stos
dec
inc
and
movsb
aas
das
lds
jge
insb
lahf
and
out
lock
add
call
or
inc
stos
jle
xor
in
mov
addl
stc
jmp
cs
mov
div
push
stos
data16
xor
in
cmp
aas
in
les
mov
fwait
negl
mov
sbb
add
add
add
add
pusha
lock
mov
push
add
out
aam
jmp
jns
in
sti
movsb
in
mov
mov
pushf
clc
adc
loopne
popf
lds
lret
cli
aas
lods
xor
sub
sub
or
mov
cmp
mov
aam
mov
cmp
jns
push
call
mov
negl
inc
mov
sub
negb
pop
adc
out
loope
cmc
mov
mov
in
lret
mov
es
cltd
sbb
jo
dec
adc
push
xchg
cmpsb
aad
jb
push
cmpsb
sub
inc
push
cltd
lret
inc
fisttps
and
imul
pop
aad
xchg
pop
leave
movl
roll
ljmp
out
or
das
sub
dec
pop
xor
icebp
inc
std
mov
pop
mov
cltd
mov
pop
stos
js
jne
add
add
adcl
mov
inc
test
dec
inc
jge
jnp
jmp
adc
or
dec
mov
pop
out
xchg
push
std
and
in
xchg
in
mov
xchg
aas
jo
aaa
mov
jecxz
push
test
sub
sar
into
xor
in
sub
push
movsb
xchg
test
fwait
pop
test
pop
mov
push
ficoms
xchg
scas
push
out
pop
inc
mov
xor
std
mov
jge
cltd
lods
mov
add
dec
adc
xchg
aas
push
sahf
shl
lcall
xor
pop
cmp
or
and
push
sub
pop
jbe
rcrl
js
aaa
out
sbb
shr
sahf
std
out
adc
popa
stc
xchg
cmpsb
cwtl
push
test
cltd
xor
sbb
sbb
lods
add
inc
lret
fmull
scas
inc
dec
adc
mov
push
loope
jle
ja
push
ja
je
and
inc
pop
cmp
sub
add
mov
movsb
mov
xor
fists
push
sub
outsl
pop
mov
sti
xor
repz
sarb
or
lds
pop
mov
adc
movsl
jns
inc
mov
pop
xlat
dec
daa
xchg
jne
movsb
aas
jecxz
xor
pushf
xchg
jg
xchg
mov
inc
fbstp
addr16
clc
movsl
dec
pushf
dec
in
add
add
in
mov
lods
dec
cmpsl
cmpsb
test
sub
mov
mov
or
and
test
ficompl
xor
xlat
or
stos
push
arpl
lods
insb
rorl
push
cmp
js
xchg
stos
clc
sub
xchg
aam
jge
popf
fwait
pop
sbb
aas
cmp
xchg
and
push
cli
ret
mov
das
mov
inc
mov
shl
fcoms
sti
into
add
xchg
out
or
xchg
or
mov
leave
pop
mov
jle
inc
xchg
pusha
fwait
pop
mov
inc
mov
imul
iret
jno
dec
fbld
push
jno
lcall
fstpl
scas
insl
jg
mov
pushf
xor
imul
notl
mov
or
cltd
js
pop
adc
push
psubw
xchg
stos
inc
sub
inc
jb
insl
popa
add
clc
xchg
and
adc
gs
bound
jge
jnp
mov
mov
loop
xchg
jge
je
insb
sub
fnstenv
xcrypt-ecb
cmpsl
push
jne
xchg
mov
jmp
add
add
scas
pop
xor
mov
shrl
ljmp
sub
lahf
xchg
popa
lahf
xor
fbstp
mov
pop
stos
enter
shll
and
out
xchg
add
or
add
cmc
int
fwait
imul
lock
into
and
ds
cmp
dec
std
in
out
lock
je
movsb
loope
adcl
icebp
in
ljmp
add
add
add
in
xor
adc
je,pt
lahf
or
or
dec
add
dec
faddp
fcomps
xchg
lock
mov
mov
inc
inc
inc
lahf
aad
out
nop
adc
or
aas
xchg
stos
or
shrl
bound
imul
mov
jmp
mov
push
scas
mov
ds
out
pop
rcll
push
add
add
sbb
mov
inc
xchg
inc
cmp
adc
xchg
mov
push
xchg
jmp
sbb
bound
fldenv
push
in
pop
jecxz
push
stos
ss
sbb
and
jmp
movsl
les
or
cwtl
jle
jb
into
sarb
push
pop
enter
sar
repz
and
ret
add
xchg
adc
mov
add
cmp
jle
sbb
stc
xchg
outsb
lcall
mov
mov
lret
jo
int
xor
xchg
fwait
or
cmc
mov
out
loop
cltd
pop
pop
dec
or
xchg
mov
shrl
ret
xchg
push
mov
sub
add
cmp
pusha
dec
fildl
mov
mov
pop
int
jle
out
sub
lcall
cmp
cmpsb
repz
decb
les
add
inc
mov
xor
in
sbb
stc
sbbb
int3
lock
int
in
andb
stos
adc
pop
cmpsb
std
pushf
jo
or
cmp
imulb
mov
mov
mov
lahf
fistpll
push
inc
repz
jmp
movsl
pop
imul
popf
call
aad
aam
les
fbstp
mov
jae
nop
cwtl
push
mov
rorb
out
sbb
add
ss
cmpsl
repnz
in
ret
inc
lods
cmpsl
hlt
adc
ss
flds
cli
pushf
jne
fistl
andl
and
fiaddl
dec
movsb
mov
sbb
mov
mov
lods
ret
out
pop
ja
fstpl
pop
mov
insl
xorb
cmp
les
ljmp
mov
xor
call
mov
incb
add
testl
das
stos
dec
lods
cmpsl
in
dec
int3
jmp
xchg
add
scas
rcl
shld
sarl
push
in
pusha
adc
test
mov
xchg
or
sarb
sub
iret
inc
sub
data16
imul
inc
repz
loopne
cmp
testl
arpl
pop
dec
sahf
push
cmpsb
popf
sub
int3
pusha
mov
add
sub
sub
pop
sub
inc
hlt
in
out
dec
xchg
stc
jge
lds
jl
div
add
shll
mov
or
int
stos
sbb
mov
cmc
sub
mov
idivl
jnp
cwtl
jns
mul
push
pop
pop
mov
dec
sahf
test
cmc
test
dec
sbb
aad
jb
std
or
sbb
push
lds
lret
aam
pop
xchg
add
mov
and
fcmovnu
push
jmp
je
scas
sbb
pop
sub
cmp
inc
data16
hlt
pop
dec
aaa
jb
aas
mov
loope,pt
cld
xchg
mov
sub
mov
std
pushl
jle
jge
adc
jb
bound
pop
in
lods
mov
cltd
jae
cmp
in
push
inc
inc
es
mov
add
mov
fmuls
and
mov
test
hlt
push
fists
gs
sbb
xchg
push
pop
mov
movsl
rorl
lods
inc
push
inc
xor
jmp
mov
push
push
lds
pop
or
sub
sub
mov
inc
cmp
sub
in
mov
addl
int3
lods
es
jl
movsl
jbe
add
es
sbb
cli
mov
cld
cmp
mov
test
inc
cmc
cltd
push
sub
sbb
jno
sub
mov
add
and
lcall
scas
into
adcb
dec
fsubs
sti
lds
sub
js
bound
jge
mov
sarb
mov
outsb
xor
lds
pop
in
mov
loopne
ja
imul
add
add
add
insl
and
jge
jbe
and
pusha
inc
dec
jb
mov
cmp
test
sahf
or
out
scas
lds
cli
insl
mov
add
push
push
or
or
xor
push
cmpsl
daa
and
movsb
or
fldcw
addr16
in
adc
fdivp
sub
cmp
movsl
jmp
pushf
enter
fldenv
out
adc
adc
lahf
inc
adc
push
push
and
rcrl
pop
mov
push
adc
cli
pop
push
repnz
add
jl
fnstcw
xor
arpl
fdivr
aas
or
cmp
jbe
mov
jae
icebp
je
fwait
popa
in
sarb
pop
iret
push
rorb
popf
dec
sahf
out
lock
fnstenv
jb
in
mov
add
add
pushf
xchg
xor
adc
pop
add
fadd
jno
adc
lcall
hlt
jl
xchg
cmpsb
aas
mov
cli
cmp
and
int3
cmp
push
mov
aad
gs
insl
push
add
mov
into
icebp
sub
dec
aas
inc
bound
shlb
sbb
das
dec
sbb
cmova
add
xor
and
pop
cmpsl
pop
pop
cmpsl
rorl
aam
xor
mov
xchg
or
lds
mov
pop
and
mov
leave
addr16
xor
jb
pop
arpl
std
xchg
dec
jecxz
js
loopne
and
mov
push
cltd
mov
adc
sbb
xchg
jbe
mov
cs
ret
and
ret
fcompl
push
in
fistpl
pop
ret
add
adc
mov
cmp
xchg
or
sbb
pop
out
test
pop
pop
jle
jbe
imul
mov
sti
mov
fistl
imul
mov
push
bnd
stc
fsubrs
leave
pop
outsb
dec
call
xchg
fstps
xlat
jo
dec
dec
adc
lret
movsb
lock
mov
shlb
add
add
add
add
mov
mov
repnz
insl
jecxz
inc
inc
rolb
cmc
decl
lds
xchg
stos
xor
loopne
mov
faddl
rorb
add
push
push
xor
mov
adc
test
stos
xchg
adc
push
jno
mov
xchg
adc
push
clc
and
insb
stos
dec
mov
ud2
or
lock
lds
jle
push
mov
add
inc
in
outsl
repnz
jecxz
imul
add
add
add
add
and
sbb
outsl
fst
test
adc
mov
add
clc
jmp
adc
mov
push
je
iret
rorb
lcall
adc
pop
les
pop
mov
inc
bound
adc
push
mov
dec
int3
in
adc
arpl
cmpsl
push
sbb
pop
dec
xchg
mov
or
add
add
add
add
sub
aas
xor
cwtl
mov
data16
adc
push
inc
mov
int3
pop
loopne
cmp
ljmp
in
xchg
lcall
subl
stc
pop
js
and
fwait
adc
pop
jmp
lods
jp
adc
aas
mov
push
mov
jmp
or
aas
mov
andb
push
pop
bound
xchg
and
mov
and
cld
add
add
imul
xchg
jns
imul
icebp
or
cs
scas
adc
sbb
jo
mov
cmp
fstps
pop
stos
pop
mov
out
cmpsl
fs
stos
test
enter
push
scas
pop
stos
mov
xchg
std
inc
mov
fsubl
sbb
xlat
mov
and
ret
jl
pop
mov
test
out
lcall
out
sbb
mov
push
jl
mov
addb
dec
adc
add
add
cs
sub
dec
pop
into
imul
add
sub
stos
xchg
js
imul
mov
repnz
inc
insl
mov
dec
std
xor
and
lods
mov
repz
loopne
add
dec
cmp
insb
mov
aam
lahf
xchg
negl
loope
icebp
and
inc
negb
lods
outsb
movsl
fistps
aad
or
push
lcall
std
mov
stos
jnp
outsb
mov
or
addb
add
hlt
add
in
scas
sbb
les
ja
and
aad
insb
shll
inc
aaa
mov
lret
and
lock
gs
push
mov
push
out
push
cmc
daa
pusha
adc
fcmovbe
imul
sbb
cmp
xchg
into
sarl
cmp
push
or
inc
xchg
js
jle
adc
add
add
and
cmp
adc
in
scas
mov
sti
enter
push
jecxz
xor
hlt
or
and
add
and
scas
cmp
mov
push
mov
mov
jnp
and
lea
clc
aaa
mov
cmpsb
in
add
xchg
cmp
mov
hlt
arpl
out
xor
sub
scas
leave
addb
add
add
add
add
movb
and
sub
mov
push
insl
inc
mov
out
mov
fadds
push
jp
or
rcrl
sbb
loopne
xchg
xchg
cmp
fidivl
sbb
inc
data16
xchg
icebp
cmc
fisubs
ret
es
sub
sbb
cli
fsubl
push
loop
call
stos
sub
pop
nop
das
push
out
push
mov
push
pushf
push
mov
mov
and
popf
rolb
add
add
stos
xor
mov
out
mov
sbb
inc
adc
scas
stos
test
jmp
jb
inc
scas
aaa
in
mov
inc
pop
add
pop
test
jge
dec
or
jnp
lcall
imul
xor
lds
addr16
mov
jne
rorb
mov
sub
movsl
mov
lret
rorb
push
sub
scas
mov
cli
in
test
sbb
mov
xchg
inc
mov
stos
cmp
cltd
shll
jmp
insb
or
iret
sarl
ja
add
fwait
loopne
push
cmp
cmp
loop
pop
jnp
loopne
sub
xor
jo
mov
les
add
jo
push
push
sub
cmp
sub
sbb
lret
dec
cltd
loopne
aas
clc
dec
xor
leave
fbld
mov
mov
xor
insl
sub
dec
inc
adc
mov
add
add
add
or
jmp
pushf
lock
cs
push
stos
lds
pop
int
iret
jg
cli
mov
hlt
jns
pop
or
dec
sbb
dec
jno
