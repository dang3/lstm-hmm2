mov
fidivrs
out
andl
sbb
out
fucomip
outsl
sbb
lret
call
hlt
lret
sub
add
mov
inc
fnstsw
ret
in
or
data16
sti
aad
sub
stos
arpl
cmp
jb
clc
and
adc
dec
xchg
inc
jb
cwtl
jbe
xor
aam
scas
pop
xchg
ret
psraw
add
inc
imul
push
mov
xchg
push
stos
inc
repz
les
mov
mov
rol
adc
and
sub
lret
les
add
mov
mov
cltd
mov
test
insl
ja
mov
sbb
fdivl
inc
push
and
mov
scas
jb
test
add
pop
movl
mov
jne
repz
xor
pop
pop
mov
enter
mov
sbb
xchg
sbb
adc
stos
xlat
adc
pop
jns
notl
in
insl
fildll
dec
add
divb
inc
insb
or
pop
inc
sub
pusha
push
fwait
mul
jno
out
insl
and
ss
jl
rclb
test
jmp
jb
add
xchg
in
or
mov
fwait
in
push
jl
popf
add
int
sbb
movsb
add
push
dec
in
popa
inc
in
and
sub
std
cwtl
sahf
push
lds
addr16
push
dec
js
insl
testb
fbstp
mov
adc
inc
stc
fldenv
or
mov
or
dec
mov
fdivr
sbb
and
adc
inc
cwtl
mov
pop
jmp
mov
in
clc
jo
add
adc
dec
jge
aas
sub
cmp
push
jg
dec
dec
mov
jmp
adc
xchg
and
mov
and
in
sub
mov
ds
xchg
adc
fldcw
out
dec
insl
add
push
outsl
insl
mulps
imul
mov
push
pop
jmp
sub
jp
in
insb
int3
daa
ja
jns
or
dec
inc
mov
or
add
mov
cmp
out
enter
pop
pop
cld
std
mov
or
mov
or
xchg
and
loopne
sub
mov
or
mov
arpl
pushf
repz
mov
popa
adc
int3
in
popa
fs
in
loopne
cmpsl
inc
loop
divl
mov
ficomps
mov
mov
xchg
aad
mov
adc
sbb
add
mov
addr16
mov
mov
ds
aam
xchg
jno
lock
in
adc
test
push
push
fisubs
xlat
jb
in
movsb
stc
outsb
aad
mov
mov
arpl
loop
dec
fidivrl
dec
mov
insl
fisubrs
xor
push
mov
test
bound
mov
movsl
aad
shll
stc
xchg
fisubl
out
mov
lea
jne
push
rclb
cld
imul
pop
mov
mull
cmc
push
dec
enter
stos
sub
aas
hlt
ret
xor
xchg
pop
push
mov
int3
or
add
xchg
sub
lahf
les
cmp
jne
testl
add
mov
jmp
sub
pop
xchg
addr16
mov
jnp
sti
scas
dec
add
dec
mov
gs
dec
cmp
stos
xorl
cmpl
loop
or
enter
insb
clc
mov
and
sub
loope
stc
mov
mov
out
push
lahf
out
pop
jno
xchg
xor
xor
adc
ss
push
jmp
gs
leave
jae
jae
dec
jbe
dec
sbb
imul
dec
pop
inc
pop
and
out
addr16
enterw
mov
enter
push
add
out
lret
mov
insl
push
push
pop
ret
sub
jno
push
outsl
outsl
push
movsb
jo
lea
ja
insb
cmp
xchg
add
mov
or
sub
sbbb
out
mov
es
cwtl
jg
jae
cmp
adc
imul
cwtl
adc
loope
ret
call
lcall
mov
xchg
pop
jns
jle
sub
test
test
xchg
jne
inc
mov
lods
addr16
sub
adc
cmp
insl
outsl
push
jbe
push
shl
pop
pushf
inc
mov
jno
pop
push
dec
mov
xchg
ret
dec
mov
lea
lahf
push
in
bound
ljmp
pop
movsl
out
mov
fwait
lock
xor
xor
mov
mov
sub
fwait
cwtl
and
mov
lret
int
pushf
dec
xchg
pop
ljmp
xor
sbb
hlt
mov
jle
vmovsd
pop
cmpsb
or
push
pop
ret
insb
or
loopne
sub
adcl
jo
dec
mov
out
adc
cwtl
xchg
and
cmc
fwait
xorl
add
add
stos
int
imul
sahf
push
test
pop
fldl
cld
leave
imul
hlt
jmp
sub
lret
nop
mov
xchg
pushl
dec
jne
and
pop
xor
rol
xor
mov
cmc
xor
push
pushl
std
cld
mov
mov
mov
push
inc
dec
pop
cld
mov
fwait
jmp
addr16
push
leave
push
push
mov
cmc
mov
jmp
cmp
sti
push
out
sub
push
mov
adc
adc
or
icebp
lds
pop
push
mov
xor
push
adc
adc
mov
pop
lds
add
in
in
or
add
pop
push
cmp
jnp
add
add
mov
adc
sbb
idiv
popf
push
push
mov
sbb
adc
mov
adc
in
sbb
adc
add
in
in
in
mov
adc
push
out
inc
jecxz
mov
leave
add
pop
push
loop
jg
xor
out
into
aas
aas
cmp
fists
loope
push
in
adc
loop
jae
lret
xor
loope
xchg
mov
addr16
push
push
adc
adc
jae
sahf
jge
jmp
lcall
jae
mov
jae
out
pop
xlat
add
add
jnp
testl
int3
ja
xor
pop
push
adc
adc
jae
sub
mov
imul
adc
adc
sbb
fildll
adc
nop
outsb
bound
sub
mov
and
nop
sbbb
pusha
movsb
aaa
addl
sbb
push
test
and
sub
mov
addr16
cs
jmp
push
adc
leave
dec
leave
dec
icebp
sti
push
cmc
xor
mov
adc
adc
cmp
dec
dec
fldt
loop
or
mov
sub
mov
shlb
pop
popf
popa
dec
xchg
add
pop
dec
push
scas
imul
xor
cmpsl
jae
aad
movsl
add
orl
mov
pop
fildll
scas
popf
test
push
xchg
into
mov
dec
sub
popl
mov
pop
clc
pop
fs
sbb
adc
mov
adc
xchg
lea
xchg
sbb
jecxz
mov
push
dec
add
adc
scas
ret
xchg
add
xchg
test
jo
sbb
add
xchg
icebp
in
in
jmp
adc
adc
adc
loop
push
aad
xchg
imul
std
push
jl
ds
xchg
stc
add
pushf
mov
cmp
xor
jo
jg
add
das
iret
add
loop
fsts
jg
push
mov
push
cmp
adc
or
add
imul
jecxz
aad
int
adc
jg
push
mov
js
inc
mov
iret
adc
lea
inc
push
push
rorb
xor
shr
dec
fldcw
xchg
pop
jns
clc
and
jp
call
lock
push
add
je
bound
pop
push
cltd
xchg
cmp
cld
mov
xor
shlb
xchg
lea
or
inc
insb
push
rcrl
and
dec
add
xchg
fwait
inc
jo
inc
mov
not
fidivl
sbb
xchg
rcrl
test
test
xchg
cmp
sub
adc
mov
test
sbb
or
sub
fdiv
xor
adc
jmp
or
jo
daa
mov
dec
arpl
mov
sub
mov
mov
inc
clc
iret
xor
in
or
push
adc
rcrb
imulb
ds
and
and
popa
call
adc
movsb
push
mull
xbegin
or
arpl
addr16
and
xor
adc
aas
popf
mov
xchg
ret
or
or
pop
adc
pop
fnstsw
sbb
jle
and
mov
mov
stc
insb
cmpl
mov
das
fs
dec
xchg
xor
xlat
xchg
xor
fcoms
test
xor
movswl
push
and
inc
insl
xchg
dec
inc
jne
xchg
shrl
pop
scas
shl
aam
inc
pop
or
xor
mov
mov
cld
imul
add
in
int3
adc
push
jbe
dec
test
pop
test
mov
js
push
pop
adc
push
jne
sarl
adc
push
push
fimull
sbb
mov
pop
sub
fildl
rclb
mov
fs
add
adc
mov
loope
fcmovnbe
mov
xchg
inc
xchg
xorb
mov
pushf
xchg
dec
sbb
ja
push
pop
sbb
xor
push
or
jnp
sub
mov
mov
out
test
pop
xchg
inc
adc
add
js
adc
jmp
pop
add
xlat
cmc
mov
lret
push
daa
mov
xlat
mov
dec
mov
setp
push
dec
mov
test
ret
push
xchg
xchg
mov
aas
or
imul
cmp
out
dec
dec
popf
add
or
mov
xor
inc
adc
push
popa
jb
jae
stos
and
imul
hlt
repnz
imul
cmc
cli
jno
lret
jl
aad
jne
rcrl
out
jle
pop
jle
mov
xchg
lahf
jnp
pop
jg
ret
std
in
mov
inc
outsl
in
lods
pop
fs
imul
roll
and
inc
cltd
dec
mov
and
cmp
mov
fidivrl
andl
les
dec
fwait
sub
pop
aam
inc
and
push
push
mov
jmp
jb
push
mov
fidivs
test
nop
or
dec
bound
aad
mov
fmul
pop
inc
add
mov
in
clc
out
mov
addr16
cs
aad
cmp
mov
aas
int
test
mov
jae
lods
push
jns
cmpsb
lods
std
push
jg
mov
mov
and
dec
mov
sub
das
cld
shlb
int
scas
mov
jae
aas
in
roll
push
mov
loope
gs
enter
pop
mov
mov
pop
xor
jmp
inc
jne
rcr
sbb
xor
lea
jp
loope
fadds
inc
jge
xchg
mov
stc
push
and
mov
adc
daa
scas
cwtl
push
fildll
lods
mov
les
lock
fstpt
pop
mov
mov
xchg
fidivs
ds
jmp
cmp
jg
mov
inc
sbb
icebp
lret
mov
mov
je
sub
cmp
imul
push
je
add
jg
scas
push
je
sbb
iret
cmp
addb
cmp
or
mov
jo
imull
mov
stos
loop
inc
scas
out
cmp
and
jmp
xchg
adc
pop
lock
fs
pop
pop
popf
les
outsl
mov
cmpsl
nop
jae
test
in
pusha
mov
jbe
nop
call
mov
ret
push
data16
xchg
or
sarb
push
pop
cmp
outsl
push
outsb
add
adc
lret
push
inc
sbb
jle
dec
fbld
repz
ds
xchg
bound
in
and
pop
rcrb
js
and
sbb
add
fisubl
rclb
repnz
dec
scas
test
ds
cmp
aaa
les
jbe
mov
jae
loop
sti
roll
cmp
xchg
cmpsl
aas
mov
in
jo
addb
sub
adcb
pop
hlt
adc
sbb
mov
sub
xchg
es
mov
pop
pop
lret
pop
mov
stos
andb
push
cmp
into
push
pop
jle
or
inc
mov
or
mov
test
mov
cmp
repz
inc
cs
pushf
fs
cmp
pushf
add
mov
adc
js
xor
fs
inc
jno
sub
jg
xchg
out
lret
divl
jbe
sbb
insl
mov
inc
cmp
clc
out
sub
cmp
fadds
sub
dec
movsb
sub
pop
testl
clc
adc
sub
pop
mov
mov
test
mov
mov
pop
push
adc
lahf
stos
xchg
and
shl
sbb
std
test
sub
icebp
jnp
push
add
or
adc
adc
inc
sbb
and
jg
fimuls
dec
loop
jl
mov
jmp
popf
push
pop
lahf
and
dec
ret
mov
mov
sub
adc
jle
or
pushf
fidivs
cmp
rcrl
outsl
sub
dec
fsubrs
and
bound
sbb
mov
add
jmp
or
mov
jl
stos
xchg
xchg
arpl
dec
cmpsb
mov
movsb
mov
fnstenv
inc
shrl
mov
sbb
xchg
sti
mov
popa
sbb
adc
lods
mov
enter
pop
push
cmpl
fwait
cli
xchg
add
ljmp
mov
mov
fildl
hlt
aaa
pop
js
clc
xor
jne
mov
repz
xor
xchg
pop
sarb
add
inc
xchg
jae
jge
leave
fisubrs
push
xor
cmc
in
adc
in
outsl
push
je
pop
and
iret
loope
aam
in
out
inc
cmp
push
cmp
pop
dec
imul
or
add
sti
and
xchg
xchg
icebp
xchg
fcoml
shlb
les
lea
inc
out
out
mov
xchg
mov
mov
insl
mov
adc
insb
mov
inc
das
jl
inc
fsubrs
dec
fucomip
arpl
sbb
repnz
ja
add
mov
lods
out
lar
mov
fnstenv
andl
pushf
cmp
push
movsb
pop
outsb
outsb
xor
mov
mov
jl
inc
aam
dec
mov
push
cmp
aas
or
push
lock
jg
sub
mov
insb
cmp
sti
xchg
clc
int
mov
xor
and
sbb
push
nop
loope
aad
xor
or
push
in
xor
mov
inc
push
icebp
pushf
shrl
cs
adc
in
mov
in
mov
daa
add
das
mov
fadds
xchg
fldt
test
lret
ret
hlt
in
jg
or
and
pop
shrb
js
aad
push
sbb
lcall
inc
cmp
xor
das
push
xor
lods
cmp
pop
dec
push
int3
mov
push
repz
or
fisttpll
pop
push
pop
mov
lock
shrl
into
jne
and
pop
js
aaa
push
hlt
rorl
inc
push
bound
push
sub
inc
xchg
sbb
rcrl
and
mov
outsb
adc
inc
scas
add
push
jb
and
hlt
pop
mov
dec
enter
sahf
popf
lret
imul
cmc
or
mov
lods
fcmovb
mov
xor
adc
sti
pop
mov
decl
jmp
mov
out
test
mov
jmp
pop
roll
and
into
das
inc
sbb
repnz
aad
mov
mov
jl
call
jo
mov
push
add
cmp
jg
test
mov
push
les
inc
dec
sub
xchg
in
jmp
mov
sub
stos
jecxz
dec
cwtl
xlat
andl
jb
inc
scas
ror
pop
mov
fldenv
cmpsb
incb
pop
mov
test
xchg
jne
pop
mov
in
push
sbb
xchg
fistpl
jge
push
jno
orl
xadd
mov
mov
add
push
mov
mov
push
test
inc
or
or
jl
daa
mov
add
push
loope
or
lahf
cld
mov
lock
in
or
pop
movsl
cmp
pop
mov
dec
fwait
and
mov
inc
cmp
adc
pop
andb
or
or
imul
fisubs
xor
push
pop
shlb
cmp
lds
mov
cld
adc
and
lds
jae
jmp
aam
rcl
hlt
push
mov
xchg
sub
out
lds
cmpsb
jg
std
insl
out
out
pop
mov
mov
xchg
sub
mov
and
lret
into
push
aaa
sarl
jno
pop
dec
pop
push
push
pop
data16
sahf
sub
stos
std
iret
enter
addr16
cmc
adc
outsb
inc
jecxz
push
insl
sbb
aas
or
xchg
mov
pop
aam
add
add
or
jmp
mov
es
out
inc
mov
aaa
mov
out
jg
stos
xor
cmp
in
mov
mov
mov
xchg
mov
test
or
or
int3
into
and
stc
pop
enter
sbb
lahf
in
dec
pop
sub
mov
rcrl
divb
add
xchg
arpl
cld
xchg
repz
loop
cli
aam
push
stos
sub
outsb
cli
or
add
inc
call
dec
pusha
je
lea
jmp
icebp
fbld
pop
les
ss
xchg
movb
mov
jo
fistl
mov
je
push
ret
sahf
shrb
cmp
or
pushf
andb
or
jae
mov
pop
and
add
adc
fdivrs
popa
imul
dec
stos
sub
jecxz
dec
push
mov
adc
pop
iret
inc
mov
adc
adc
aas
shl
push
imull
mov
mov
dec
outsl
rcrl
das
shr
and
rcll
movsb
rcll
loopne
stos
outsb
mov
das
mov
or
mov
mov
mov
dec
cmp
les
test
cmp
test
add
mov
in
pusha
dec
mov
add
xchg
jecxz
push
hlt
mov
sbb
add
test
mov
mov
out
or
repnz
mov
je
or
and
adc
filds
dec
mov
xorl
add
psllw
cli
push
mov
push
ret
adc
lods
mov
xor
or
inc
lds
mov
or
fld
add
xor
cmp
stos
cltd
es
xor
push
cmp
mov
rcll
xor
mov
pop
lcall
bound
mov
push
jne
lret
insb
lea
pop
arpl
test
jns
pop
jne
mov
lcall
int
sti
pop
fwait
sbb
push
loopne
xchg
fnstenv
sub
and
gs
xor
pop
xchg
mov
cmp
sti
inc
es
repz
lock
dec
mov
xor
bound
jno
data16
roll
fdivr
out
xor
xchg
lcall
cmp
mov
fdivl
mov
cmp
test
arpl
adc
aas
mov
sub
inc
testl
scas
lea
inc
sbb
adc
sbb
je
out
out
inc
jno
xchg
inc
add
push
dec
notl
aaa
dec
jns
cmp
and
mov
test
and
xorl
jae
pop
sbb
lret
push
test
fwait
je
pop
inc
sbb
arpl
inc
sub
jb
jecxz
mov
mov
lcall
fistpll
mov
loop
inc
and
push
int
xchg
sub
cmpsl
xor
cmp
or
mov
jo
pop
inc
and
pusha
sarb
addb
cs
mov
lahf
pop
adc
and
and
scas
loop
loopne
pushf
insl
cmp
out
ficoms
mov
pop
dec
jb
push
push
test
fisttps
pop
xchg
mov
mov
pop
addr16
stc
cwtl
mov
or
sub
call
inc
das
sbb
hlt
mov
adc
shlb
outsl
repz
lahf
cld
fidivrs
fwait
pop
fidivs
sbb
lahf
add
push
and
std
jmp
insl
mov
iret
and
repnz
loop
inc
pop
popf
push
dec
lahf
subb
jns
jmp
cmp
fidivrl
dec
adc
push
sbb
fbld
jb
jmp
leave
popa
sbb
mov
dec
jne
int3
pop
xchg
add
outsl
cwtl
aam
sub
and
dec
xchg
jnp
inc
dec
dec
movb
xlat
inc
ljmp
insb
or
scas
push
inc
dec
push
pop
aad
and
das
fs
rcll
add
inc
cli
or
or
lcall
xchg
pop
mov
repz
cmpsl
shlb
pushf
jecxz
test
stos
dec
mov
pop
das
mov
rorl
lods
or
and
leave
inc
jle
cmp
in
xchg
orl
adc
xlat
clc
adc
fmul
mov
gs
pop
push
xchg
xor
push
sub
ficoml
dec
dec
movsl
test
sub
cmp
sbb
adc
negb
lock
scas
mov
jno
mov
xor
inc
out
and
push
repnz
inc
loopne,pn
lret
adc
fcompp
addr16
inc
jg
xor
imul
pop
aaa
xchg
mov
xor
cs
shll
dec
inc
sahf
pop
int3
aas
ljmp
nop
fcomps
dec
into
xchg
cmp
stc
jecxz
dec
jl
cmp
jl
pusha
fadds
unpckhps
dec
jg
repz
bound
fs
data16
insb
add
adc
and
mov
cmc
xchg
call
add
adc
and
out
out
jle
xor
in
xchg
jg
sahf
push
icebp
mov
rorb
les
inc
push
adc
jge
fldl
data16
negl
test
adc
rorl
adc
fsubp
sbb
mov
add
xor
push
test
cmpsb
dec
and
out
and
popf
add
cmp
test
mov
es
or
lcall
icebp
xor
adc
int
mov
add
push
adc
pop
imul
lock
aad
inc
mov
fildll
jno
mov
sbb
movups
mov
adc
add
rcrb
in
sub
gs
loop
inc
test
lea
inc
outsl
and
push
jmp
jb
adc
push
pop
shlb
and
jmp
dec
jp
call
or
sbb
xor
or
and
adc
ret
cmp
sbb
arpl
fisubrl
test
ret
dec
nop
dec
pop
dec
pop
dec
es
les
xchg
idivl
fwait
data16
aam
cmpsl
dec
xor
push
pop
movsb
sub
les
out
ss
or
push
movsl
push
ret
sub
sbb
das
cld
and
cwtl
pop
fisttpl
stos
fisubrl
pop
jns
shrb
fmull
in
sbb
jnp
and
stos
adc
stos
add
inc
xchg
pop
les
mov
mov
js
inc
addr16
das
xor
lea
test
add
in
cmp
lea
lret
ret
push
gs
add
add
push
ficomps
adc
and
xor
ja
jle
nop
dec
subl
mov
cltd
pop
stos
jno
push
mov
xlat
std
jl
push
jb
mov
jbe
inc
cmpsl
jle
lcall
je
inc
ds
push
aad
add
jmp
addl
push
das
mov
and
inc
mov
int3
add
xchg
mov
or
sub
sbb
push
inc
xor
jo
xchg
sbb
notb
movsl
sbb
fiaddl
lods
inc
call
and
test
mov
in
jne
mov
loop
add
and
jnp
ss
xchg
fidivl
dec
lods
or
xchg
xor
push
sbb
pop
and
movsb
mov
insb
pop
aaa
sbb
cld
mov
adc
cs
lds
sbb
jecxz
push
xor
push
xchg
pop
fwait
dec
xor
and
stos
inc
cmp
mov
sbb
sub
jp
out
addl
inc
sub
push
mov
add
xchg
jb
add
scas
jnp
call
adc
cmp
pop
sub
in
jne
pushf
jp
fsubrl
jno
push
in
mov
ret
sarl
je
lret
mov
xchg
push
mov
inc
out
sub
xchg
sub
mov
ret
lret
mov
xchg
stc
negl
leave
shll
ljmp
aad
xchg
and
cmp
add
sahf
mov
cmp
dec
ljmp
bswap
sub
xchg
pop
ss
dec
ja
or
out
bound
push
pop
add
push
daa
inc
pushf
dec
and
cmc
jmp
xor
jg
pusha
lea
enter
cmp
xor
push
dec
push
adc
out
fdivr
adc
in
add
cmp
mov
and
mov
cmp
addr16
push
dec
out
imul
push
pop
pop
cmpsb
xchg
xchg
adc
out
push
and
ret
inc
xchg
mov
dec
cmp
ret
add
sub
jg
rcrb
nop
dec
mov
pushl
movsl
push
mov
push
daa
leave
test
adc
mov
pop
aas
xchg
jno
inc
sahf
fldl2t
or
sahf
inc
or
lods
xor
popl
mov
and
push
push
lock
xor
and
rorb
sbb
mull
pop
arpl
pushf
icebp
pop
pop
idivl
mov
clc
xor
adc
and
sbb
pop
or
pop
xor
and
push
and
inc
add
popf
test
xchg
mov
in
pop
cmpsl
rorl
push
adc
outsb
enter
rol
icebp
dec
stos
push
pop
cmc
mov
cmp
frstor
js
ds
pop
xor
in
ljmp
xchg
mov
mov
mov
out
jp
jae
xchg
mov
sti
xchg
stos
mov
inc
fiaddl
xor
rcrb
mov
lock
loope
pop
mov
cmp
pop
sub
pushf
dec
xor
push
jns
adc
sbb
cmpsb
xor
outsl
sbb
dec
xor
lcall
jecxz
fstl
out
push
mov
das
cmc
inc
push
js
out
testl
aad
addr16
push
cmp
xchg
out
loope
sbb
mov
push
dec
imul
and
xchg
icebp
and
fcoml
mov
cmpsl
roll
cmp
cmp
cmp
arpl
ret
pushf
jne
subl
shlb
cmp
sbb
xor
dec
push
into
add
fs
push
dec
ret
in
adc
lcall
sub
int3
mov
xchg
jl
js
inc
push
sbb
lds
adc
mov
mov
call
cmp
mov
pop
and
xchg
sbb
sbb
test
or
mov
xchg
mov
and
inc
add
into
add
xchg
push
rcll
ja
jnp
push
jmp
scas
shl
mov
jmp
mov
hlt
cmp
imul
inc
arpl
jp
adc
and
cld
sub
shrb
int
mov
xchg
push
mov
add
jg
inc
pop
inc
inc
scas
xor
leave
mov
fcoms
out
mov
daa
sti
je
call
cltd
test
ret
mov
cli
sbb
or
lods
cld
inc
mov
pop
xlat
imul
repz
sbbb
fwait
dec
outsb
pop
push
pop
inc
dec
cltd
popf
add
test
sti
sub
push
cli
sbb
repz
mov
pop
inc
mov
out
stc
inc
je
in
ds
shrl
jns
adc
xor
lahf
jle
sub
repz
test
pop
pop
das
jge
push
shlb
and
das
jmp
lods
jp
lret
rclb
mov
cld
fmul
rorl
cwtl
loop
cmpsl
jbe
pop
rcrb
das
push
jns
mov
xchg
imul
fs
pop
cmp
add
dec
dec
js
inc
jae
mov
sub
mov
and
push
sbb
pop
pop
pop
into
inc
or
sub
sti
xchg
jne
stc
xchg
pop
jb
jmp
or
push
adcl
or
loopne
iret
pop
setle
add
das
in
cmp
movsl
ret
lock
std
movl
mov
lea
jmp
lret
xor
mov
xor
imul
cwtl
adc
push
add
sbb
or
xchg
stos
je
lods
sbb
ljmp
push
test
test
add
insb
sbb
xor
stos
pop
xchg
loopne
cwtl
jge
jecxz
sbb
sar
insl
outsb
dec
jge
daa
popf
dec
aaa
outsb
mov
in
inc
cmpsl
or
and
das
fsub
push
lds
iret
inc
push
outsl
cmc
mov
pusha
sti
xor
xchg
mov
cmpsl
sub
sbb
cmpsl
int3
jno
add
mov
add
jl
out
push
adc
or
addr16
add
cmpsb
and
and
fisubrl
mov
shlb
cmp
out
and
push
test
outsb
les
jl
int3
pusha
popa
loope
outsb
lods
pop
fwait
sahf
inc
cmp
roll
mov
test
add
dec
out
sbb
imulb
adc
push
lds
sbb
push
pop
addl
dec
inc
loop
pop
push
and
mov
pop
push
pop
rolb
sahf
rorl
dec
or
dec
xchg
inc
shrl
xor
jnp
push
scas
mov
inc
and
lea
mov
ja
jmp
or
mov
cld
inc
nop
pushf
decb
xlat
jne
mov
sub
inc
outsb
icebp
das
lods
xchg
fsub
fcoml
loop
ss
sub
out
fldt
jle
mov
call
shlb
xlat
es
mov
or
addb
fbld
mov
out
add
pop
out
test
mov
pushf
sub
ljmp
jno
stos
repz
inc
jp
cmovg
std
shll
sub
mov
inc
ret
or
lahf
xchg
scas
es
push
outsl
loopne
pop
mov
lea
cs
pop
xchg
sti
ret
jge
fidivs
lahf
in
daa
jno
cmp
sbb
mov
sbb
xchg
push
mov
lea
jle
or
jmp
outsl
in
insl
jge
sti
int
pusha
pop
sub
jnp
push
push
loop
pop
dec
jmp
adc
xor
mov
mov
shr
imul
lahf
roll
ss
les
lock
jne
popf
fildl
pmaxsw
push
push
test
jb
dec
xchg
icebp
xchg
stos
ljmp
lea
lret
jmp
or
dec
imul
dec
movsl
pop
movsb
add
jmp
movsb
int3
pop
lea
leave
jno
cmp
bnd
insl
mov
loop
dec
dec
or
jecxz
or
scas
mov
mov
and
jge
pop
xlat
xchg
mov
inc
scas
addr16
in
mov
mov
inc
js
xor
cld
pop
mov
push
rolb
mov
dec
insl
orb
cmp
pop
loope
push
push
add
cmp
cmp
enter
xor
icebp
mov
loope
cmpsl
sbb
movsl
dec
and
sahf
inc
xlat
mov
mov
daa
jo
cmp
xchg
lret
insb
dec
mov
and
adc
daa
jne
xor
inc
je
adc
gs
flds
lods
cmp
xchg
aaa
sbb
xor
jbe
es
test
lea
push
repnz
jo
in
cmpsl
cmp
mov
inc
xor
fcmovnbe
rorl
mov
roll
push
jp
mov
pop
mov
in
testl
fisubs
and
jb
xor
sbb
dec
mov
sub
or
inc
and
xchg
aaa
xor
push
loop
xchg
jge
fimuls
sbb
andb
and
push
xor
push
rorb
sub
cmpsb
lods
xor
inc
aam
repnz
rcll
mov
xchg
dec
fidivs
orl
xor
dec
pop
mov
pop
mov
cs
ret
and
data16
mov
pop
stos
mov
mov
jmp
cltd
ret
outsb
jge
in
dec
pop
in
mov
roll
ss
dec
inc
loopne
jle
pop
or
mov
jb
shll
mov
fstpl
mov
add
fistpl
adc
mov
xor
jp
push
mov
mov
loopne
dec
add
sbb
cli
cld
xchg
imul
and
xchg
das
inc
mov
xchg
push
popf
and
sbb
cmp
adc
dec
xor
cld
sub
mov
mov
sub
cli
jl
cmpsb
int
cmp
orb
mov
sbb
push
scas
add
fs
pop
mov
mov
pop
jno
mov
test
xor
lcall
xchg
and
hlt
testb
push
add
pop
adc
lds
xchg
or
jg
push
and
cmpsl
xchg
sahf
ljmp
scas
sbb
and
ss
and
jo
xchg
hlt
xor
dec
icebp
mov
mov
outsl
adc
clc
js
in
cs
test
pop
incl
xchg
das
and
imull
mov
pop
jge
iret
dec
outsb
lret
ret
fwait
and
std
and
clc
pop
subl
fnstenv
or
dec
std
rcr
add
sbb
jg
mov
test
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
.byte
