pop
or
inc
inc
jmp
or
and
lods
or
and
and
inc
xor
cmp
jne
mov
or
add
or
cmp
jne
xor
jmp
sub
sub
cmp
jne
mov
je
cmp
jne
or
mov
mov
jmp
mov
mov
mov
jmp
call
and
add
mov
xor
add
mov
dec
jmp
add
call
or
add
or
xor
add
jmp
je
or
or
push
or
or
call
cmp
jne
xor
or
mov
add
dec
cmp
jmp
add
and
pop
jmp
or
sub
xor
leave
xor
mov
and
or
cmp
jne
mov
je
inc
add
or
inc
cmp
jne
push
add
or
jmp
push
or
push
add
cmp
jne
and
add
sub
cmp
jne
dec
xor
add
mov
shr
sub
xor
cmp
jne
or
mov
call
or
add
cmp
jmp
mov
push
mov
sub
inc
jmp
mov
inc
add
cmp
jne
mov
add
jmp
add
push
xor
push
xor
call
and
push
cmp
jne
add
sub
push
xor
cmp
jne
xor
push
mov
push
add
sub
and
jmp
or
add
dec
mov
jne
or
pop
jmp
mov
sub
sub
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
sbb
ret
cmc
sub
loope
sub
in
cmc
sub
aam
lea
dec
shl
add
push
imul
jg
imul
pop
clc
lods
jle
sub
cli
aaa
loopne
cltd
or
xlat
aad
mov
adc
repnz
xchg
jecxz
ljmp
loope
xchg
mov
add
mov
mov
mov
cmc
sub
pop
dec
push
and
daa
add
add
leave
imul
jo
loopne
or
add
sub
lahf
push
dec
imul
mov
sub
jne
mul
addb
loope
push
mov
test
mov
cmc
sub
sbb
std
pop
or
cli
sbb
lahf
sub
fcmovnbe
cli
sbb
sbb
out
mov
jmp
loopne
outsl
icebp
imul
push
sbb
mov
and
fmull
aad
sub
and
push
add
mov
shlb
mov
and
add
adc
subl
inc
ljmp
sub
push
push
loop
mov
add
mov
lahf
push
loop
sub
loop
pusha
or
ret
or
mov
js
fwait
mov
inc
adc
mov
jle
adc
cli
pushf
xchg
push
imul
cmpsl
mov
lret
mov
sub
mov
popa
xor
jno
jle
mov
lret
imul
mov
mov
jle
std
and
xor
pop
enter
push
popa
inc
adc
add
or
adc
xchg
push
mov
xchg
popaw
icebp
jno
jecxz
add
push
mov
xor
mov
xlat
imul
mov
mov
imul
sub
or
lods
addr16
mov
test
loop
mov
xchg
and
notl
loope
jne
mov
cld
fildl
add
or
data16
rolb
adc
mov
cltd
nop
insl
jle
or
add
in
test
adc
mov
lahf
testl
aas
push
lock
dec
cmc
loop
xor
add
xchg
incl
push
aad
popf
call
addr16
jle
lods
test
notl
outsl
jno
jbe
or
inc
or
jae
setge
stos
and
sarb
pop
cld
in
jge
inc
mov
rorb
sub
push
mov
push
out
lea
shll
add
imul
inc
imul
xchg
push
cltd
outsb
pop
jbe
push
cld
in
jge
test
cmpsb
addr16
xchg
push
cltd
outsb
orb
jle
andl
inc
mov
push
add
adcb
adc
and
dec
and
popa
mov
lock
and
add
hlt
addr16
lods
add
or
addr16
or
and
cmp
xor
iretw
repz
jno
shll
scas
cli
scas
loopne
adc
xchg
or
add
jl
andb
adc
imul
jb
cmpsl
dec
imul
add
repnz
mov
inc
cli
insb
pop
cld
in
xchg
sub
cmc
jge
cld
pusha
jo
sub
enter
cld
fildl
add
or
jbe
mov
lds
loop
pop
gs
mov
test
jecxz
movsl
or
and
adc
int3
daa
fnstsw
push
pop
adc
mov
imul
mov
adc
stos
push
fmull
pop
mov
insl
mov
mov
sbb
pop
jp
fdivrl
pop
adc
push
sbbb
lahf
xor
push
sbbb
cmc
mov
xor
in
jge
cmp
mov
add
sbbb
std
mov
mov
data16
jmp
jl
cld
fwait
adc
rorb
loopne
ljmp
cld
sub
sub
push
and
inc
aad
out
jge
cmp
lea
adc
imul
faddl
adc
imul
mov
mov
imul
test
imul
call
adc
mov
imul
xchg
negl
or
pop
sbb
stos
add
lahf
idiv
sbb
jle
sbbl
add
jne
and
inc
or
and
test
int3
lock
jne
adcl
adc
add
in
notl
pushf
.byte
