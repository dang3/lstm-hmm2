mov
push
mov
push
mov
mov
test
je
test
jne
test
je
or
mov
jmp
or
test
mov
jne
push
call
pop
jmp
mov
mov
pushl
pushl
pushl
call
add
test
mov
je
cmp
je
cmp
je
mov
test
jne
mov
cmp
push
je
mov
sar
mov
and
lea
lea
jmp
mov
mov
and
cmp
pop
jne
or
mov
cmpl
jne
mov
test
je
test
jne
movl
mov
add
mov
movzwl
add
mov
jmp
neg
sbb
and
add
or
andl
mov
pop
pop
ret
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
test
je
andl
mov
sub
add
mov
mov
mov
lea
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
cmpl
mov
je
or
sub
mov
mov
sub
add
mov
mov
mov
lea
push
push
push
call
mov
mov
mov
sub
add
mov
movzwl
add
lea
movzwl
lea
mov
mov
mov
andl
xor
cmp
jae
lea
mov
mov
addl
push
lea
pop
rep
mov
add
movzwl
add
incl
cmp
jb
mov
mov
add
pop
mov
xor
pop
inc
pop
leave
ret
push
mov
sub
mov
mov
mov
sub
mov
je
mov
test
je
push
mov
add
test
je
push
push
mov
sub
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
addl
decl
jne
mov
test
jne
pop
pop
pop
xor
inc
leave
ret
push
mov
sub
andl
push
push
push
movl
mov
movl
mov
mov
movl
mov
mov
mov
mov
mov
imul
xor
add
incl
mov
push
call
mov
mov
mov
xor
mov
div
mov
mov
mov
mov
sub
not
add
xor
mov
mov
incl
add
cmpl
jb
testl
pop
pop
pop
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
leave
ret
push
mov
push
push
mov
mov
mov
cmp
jb
andl
add
je
push
push
push
pop
mov
sub
mov
mov
mov
lea
ror
lea
imul
inc
not
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
inc
cmp
jb
pop
pop
pop
leave
ret
push
mov
push
call
mov
push
call
pop
pop
test
je
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
mov
jmp
mov
pop
ret
push
mov
sub
mov
push
push
xor
push
mov
movl
cmp
je
mov
jmp
push
call
mov
mov
push
push
push
push
mov
add
call
movl
mov
push
shl
add
incl
push
push
push
call
mov
mov
test
je
push
call
mov
push
push
call
mov
call
mov
add
cmpl
je
cmpl
jne
push
call
lea
push
push
pop
xor
lea
div
push
pushl
pushl
call
mov
push
push
push
pushl
call
mov
add
lea
add
mov
lea
mov
mov
mov
and
call
mov
mov
mov
call
pushl
pushl
pushl
push
call
push
call
mov
push
call
test
je
pushl
mov
pushl
pushl
pushl
call
cmpl
mov
jne
push
call
test
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
push
mov
push
push
mov
imul
push
mov
cmp
jb
mov
push
call
mov
add
imul
push
xor
pop
div
mov
mov
mov
mov
sub
mov
test
je
mov
sub
push
mov
call
xor
divl
mov
add
cmp
jae
mov
mov
imul
xor
divl
xor
mov
sub
imul
div
mov
cmp
jae
mov
sub
push
pushl
pushl
call
add
add
add
add
cmpl
jne
pop
pop
pop
leave
ret
push
mov
push
push
andl
andl
push
push
push
push
push
call
mov
lea
push
pushl
lea
pushl
movb
push
pushl
movb
pushl
push
call
push
push
push
call
pop
leave
ret
mov
push
push
call
mov
xor
cmp
je
push
push
push
push
call
push
push
push
pushl
call
push
push
push
pushl
call
pop
pop
ret
push
mov
sub
push
mov
push
test
je
mov
test
je
cmpl
je
mov
test
je
push
lea
push
lea
push
push
call
mov
add
push
pop
lea
add
call
mov
test
je
mov
sub
mov
mov
inc
dec
jne
pushl
mov
pushl
pushl
pushl
pushl
call
mov
mov
mov
call
mov
add
push
pushl
pushl
push
call
add
pop
jmp
xor
pop
pop
leave
ret
mov
push
mov
sub
mov
push
xor
push
push
mov
movl
mov
movl
mov
mov
call
mov
lea
push
movl
mov
movl
call
pop
leave
ret
mov
push
mov
cmpl
mov
jne
test
jge
push
push
jmp
push
pushl
mov
call
mov
pop
ret
mov
mov
mov
rol
imul
add
mov
ret
push
mov
sub
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
jne
inc
jmp
andl
push
push
lea
lea
cmpl
mov
je
mov
jmp
mov
mov
add
xor
nop
movb
mov
mov
inc
cmp
jb
mov
test
je
lea
movsbw
mov
add
inc
mov
test
jne
lea
push
call
mov
test
je
mov
add
andl
cmpl
je
mov
mov
mov
test
jns
and
jmp
add
add
push
pushl
call
mov
test
je
incl
mov
lea
cmpl
jne
mov
incl
mov
imul
add
lea
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
mov
mov
ret
mov
push
mov
push
push
mov
test
mov
je
lea
push
call
add
push
call
andl
pop
pop
pop
ret
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
add
lods
roll
sbb
pusha
mov
cs
lcall
mov
sbb
xlat
fidivrl
pop
pop
outsb
out
fidivl
mov
ret
js
push
fisubrl
xlat
lcall
gs
jg
xor
fisubl
push
int
sbb
icebp
rcr
mov
sub
inc
jo
dec
in
xor
loopne
stc
jmp
andb
lods
fstpt
gs
jo
xchg
fsubrp
gs
push
xchg
dec
push
pop
xor
rcll
push
aas
jns
push
jl
add
add
icebp
lcall
or
adc
fldcw
movsl
cmp
push
fcompl
inc
repnz
mov
push
call
xchg
test
cmp
out
mov
mov
push
dec
dec
ret
push
jno
shrl
clc
test
retw
sub
sbb
iret
mov
xchg
cmpsl
mov
mov
gs
in
and
adc
call
dec
sbb
out
lea
push
das
adc
cld
mov
rolb
inc
hlt
out
sbb
cwtl
jl
xor
jecxz
and
mov
cmp
xchg
arpl
pop
mov
mov
test
daa
stos
scas
adc
popa
imul
jmp
push
add
rcll
adc
fldt
sbb
arpl
ds
dec
xor
adc
les
pop
fadds
add
add
mov
add
fisttps
jge
mov
adc
icebp
push
adc
cwtl
pop
pusha
test
mov
push
jge
pop
icebp
orb
aas
cmp
push
repz
dec
pop
fsts
push
leave
cmp
xchg
fstpt
popf
or
xor
adc
dec
mov
sbb
and
ret
in
add
inc
cmpb
sub
inc
divl
rolb
stc
ss
mov
fsubrs
pop
rolb
push
sbb
dec
inc
out
push
mov
xchg
pop
pop
sbb
sti
hlt
sub
je
jge
push
or
pop
test
loope
nop
icebp
outsb
jne
arpl
mov
fwait
sti
push
das
sbb
push
pushf
mov
dec
sbb
sub
xchg
or
mov
xchg
add
inc
outsl
movsb
adc
outsb
in
fildl
icebp
fimuls
xchg
in
mov
xchg
jnp
sbb
mov
xlat
push
dec
sub
repnz
into
inc
jo
inc
outsb
or
int
adc
fwait
mov
xor
xlat
mov
mov
lods
adc
and
enter
cli
xorl
and
sbb
cmp
jge
sbb
inc
je
scas
mov
and
flds
stos
aas
jnp
push
outsb
out
in
jmp
enter
out
add
sub
jno
les
jle
je
pop
xchg
push
jle
shll
and
sub
cmp
add
rcr
jmp
leave
jp
testb
or
fsts
arpl
cs
out
lock
in
push
lea
sbb
lahf
inc
pop
lret
out
cmp
enter
and
scas
push
pop
jg
mov
pop
testl
adc
add
add
aas
mov
sahf
mov
lcall
and
add
push
sti
and
fldcw
sub
mov
xor
out
cli
jmp
jge
and
enter
and
das
mov
jmp
adc
add
je
stc
mov
push
or
push
daa
lods
cltd
jbe
cmp
lds
inc
add
and
or
adc
daa
add
das
addr16
aaa
clc
dec
sti
nopw
test
call
sbb
jne
mov
or
push
daa
and
mov
cmc
hlt
adc
sub
mov
cld
pop
push
add
push
cs
mov
sarl
mov
in
cmc
and
lcall
test
sub
lret
push
pop
push
add
ja
nop
stos
jbe
int3
push
fadds
inc
jg
or
inc
es
lods
in
inc
mov
inc
sar
in
lret
mov
xchg
into
mov
or
sti
lock
addr16
cmc
adc
mov
aad
data16
ss
jno
dec
inc
addb
mov
mov
leave
cld
lret
adc
or
jno
xor
loop
in
in
xchg
pop
mov
add
add
xchg
pop
mov
inc
mov
xor
xchg
aam
dec
add
clc
iret
shr
xchg
xor
add
dec
and
mov
test
adc
add
in
xchg
addr16
and
xchg
xchg
aaa
cmp
mov
hlt
mov
adc
mov
ret
pop
js
sahf
add
xchg
pop
lock
sbb
addr16
lea
inc
sub
sub
and
mov
bnd
or
add
nop
or
dec
lcall
outsl
sbb
mov
xchg
fidivs
enter
mov
push
adc
cmp
jno
mov
into
mov
out
sub
jo
gs
shlb
movsl
divl
jg
adc
idivl
mov
jmp
scas
or
in
sbb
stos
test
into
lahf
jo
fsubr
repz
add
cmc
push
add
fsts
xchg
jge
movsb
daa
mov
jge
int3
and
push
jge
pop
ret
popl
add
sbb
mov
cmpxchg
lcall
adc
add
jp
sub
sub
mulb
push
or
cmp
pop
sub
pop
xchg
aam
push
jae
xchg
aam
dec
dec
push
iret
add
xchg
ds
mov
xchg
movsl
lret
leave
ret
or
xchg
mov
xchg
in
xchg
dec
xor
and
movsl
xor
cwtl
jp
cltd
and
cltd
test
xor
ret
inc
pusha
cmp
push
jmp
pop
mov
pop
add
sbb
cltd
add
xor
sub
hlt
repz
xor
xchg
xor
nop
mov
cmp
fisttpl
inc
pop
dec
dec
sti
ja
add
add
in
lea
xor
jns
sbb
or
ja
aas
int3
mov
adc
mov
xor
or
mov
mov
mov
pop
cmp
mov
sbb
push
cli
mov
cmpl
jmp
insl
sub
and
insb
roll
inc
and
lahf
dec
scas
ljmp
pop
add
jne
shlb
imul
addb
inc
shrl
daa
cmp
outsb
xchg
add
out
mov
repz
dec
inc
psraw
lret
jp
add
sbb
and
popa
ljmp
loope
insb
push
inc
enter
in
addr16
pusha
sbb
push
sbb
push
cmp
test
dec
pusha
jmp
in
mov
and
mov
and
add
sub
xchg
sub
cwtl
xchg
ss
xor
mov
mov
push
mov
lahf
mov
adc
aaa
ficoms
mov
notb
adc
jno
cmc
xchg
jecxz
test
pop
outsl
cmp
or
pop
shl
scas
inc
jae
xchg
or
dec
add
add
pop
jmp
xchg
mov
jmp
add
sbb
mov
fldt
mov
daa
sub
xchg
andb
cmc
inc
fstl
pop
fwait
sbb
test
int
xchg
mov
adc
xlat
sbb
lcall
jl
push
ret
and
paddq
mov
mov
imul
lret
sub
rcll
adc
nop
repnz
lds
ret
lock
and
aam
cmpsl
add
add
jb
sahf
adc
mov
cmp
jp
shrb
aam
push
leave
or
sahf
or
pop
adc
cwtl
mov
mov
jmp
stos
dec
cmp
mov
xchg
test
adc
pushf
cli
ja
cmpsb
push
and
xchg
bnd
insl
jo
jns
sub
leave
cmp
inc
loope
mov
sub
ret
scas
xor
int
lods
test
les
insb
xchg
dec
sub
out
cld
push
pop
jnp
fcomps
add
addr16
aam
in
dec
pop
int
dec
pop
mov
std
mov
inc
inc
push
bound
or
daa
sbb
inc
and
aas
lea
ds
ljmp
pop
ss
popa
in
jnp
and
fidivl
inc
push
shr
inc
mov
dec
adc
jecxz
test
insb
pop
xchg
hlt
mov
adc
int3
loop
pop
inc
cltd
int
xchg
mov
dec
sti
sub
inc
xchg
cmpsb
ret
jo
test
inc
hlt
or
insl
sbb
mov
icebp
lcall
rcrl
push
shl
lret
pop
mov
sub
mov
test
mov
add
adc
les
aad
xchg
insl
push
lea
inc
adcb
iret
pushf
out
sub
push
cmpsl
or
xor
adc
lea
mov
test
xor
bound
and
pop
lea
nop
stc
cmpsl
cmp
out
aaa
sub
loopne
in
ljmp
push
std
adc
xor
stc
outsl
mov
sub
push
push
fistps
lret
sub
stos
in
push
and
cmp
and
add
mov
dec
add
dec
push
dec
cmp
and
pop
cmp
leave
jb
cli
into
add
arpl
pop
das
out
adc
dec
je
lret
mov
jp
imul
test
add
mov
pop
imul
in
or
shrb
dec
mov
sub
addr16
popfw
mov
and
test
fisubrs
mov
enter
lods
orb
divb
aaa
enter
sbb
mov
pop
shrl
push
and
out
push
mov
lods
imul
pop
xchg
sti
sbb
cmp
add
stos
cmp
push
xlat
sub
imul
into
lea
push
ret
lahf
rclb
cmpsl
mov
mov
fildll
sbb
inc
jns
inc
inc
dec
dec
mov
adc
shlb
pop
or
lock
sbb
filds
int3
mov
es
sahf
mov
or
out
dec
add
mov
aaa
adc
test
xor
lock
add
jge
adc
jle
add
xchg
dec
mov
dec
int3
mov
or
mov
xchg
shrb
inc
jge
and
in
inc
jae
std
mov
hlt
scas
insl
mov
cmova
sahf
fwait
push
subl
imul
adc
insb
mov
repnz
add
mov
jp
jecxz
jo
add
ret
dec
xor
pop
xor
mov
gs
outsb
out
xchg
cmp
enter
lret
insl
stos
pop
jecxz
jg
repnz
pop
bound
cld
test
mov
mov
xchg
rorl
xlat
je
mov
call
insb
xchg
sbb
sub
mov
sub
mov
insb
mov
dec
mov
enter
out
andb
cld
jle
sub
mov
frstor
add
inc
pop
orb
jae
inc
xor
sbb
push
fldt
loop
lds
test
xchg
or
sarb
adc
orl
jl
lock
mov
sti
in
sub
in
outsl
repnz
sahf
lods
hlt
fwait
lods
test
sbb
mov
mov
bound
dec
sub
out
push
and
cmp
dec
add
fcmovb
xor
test
pop
pop
inc
xor
pop
out
leave
stc
pop
push
ss
dec
dec
lea
inc
xor
dec
mov
in
imul
repz
sbb
dec
lock
sbb
sti
sti
push
pusha
xorb
imul
xor
jmp
inc
push
out
sbb
mov
sub
and
pop
inc
arpl
movsb
int
push
ljmp
lds
xchg
mov
aaa
rep
roll
xor
add
add
lock
je
nop
mov
jmp
gs
inc
sub
sbb
push
jo
mov
xchg
dec
pop
test
outsb
or
addr16
or
fnstenv
dec
and
or
adc
xchg
push
je
clc
mov
mov
and
dec
mov
and
cmp
lods
bound
adc
pop
inc
adc
xor
add
add
mov
inc
push
leave
sub
add
movsb
cld
dec
enter
aaa
pop
pop
pop
imul
push
jecxz
pop
stc
dec
xchg
inc
pop
inc
sub
test
inc
outsb
xchg
mov
mov
inc
mov
mov
orb
sbb
push
int3
jo
mov
pusha
xchg
push
or
xchg
loope
and
xchg
pop
cmpsb
mov
arpl
mov
shrl
push
jnp
xchg
data16
pop
xchg
out
dec
repnz
add
sub
aaa
jp
add
jbe
jmp
mov
push
mov
sub
sbb
adc
ljmp
fsincos
sti
pop
gs
xchg
jmp
sub
fsubs
push
jno
movsl
not
push
jae
jecxz
sahf
insb
fwait
nop
jg
scas
mov
jbe
test
dec
mov
lret
jbe
xchg
sub
shl
add
add
push
loope
loope
add
jg
mov
mov
cmp
add
sbbl
dec
sub
mov
outsb
jb
and
or
sub
testl
shll
in
push
sub
clc
sub
test
jp
mov
sub
rorb
mov
fldpi
mov
adc
fisttps
ret
push
mov
ret
aam
sub
int3
or
imul
add
hlt
cmp
pop
fidivl
lret
mov
adc
outsl
fdiv
jno
sub
dec
mov
and
outsb
int3
shlb
add
fwait
mov
ss
js
aas
mov
lahf
pop
pop
ficoml
or
movsb
or
jns
hlt
lahf
ja
xchg
adc
fisttps
dec
push
and
xor
sub
lds
cmp
lods
add
out
cmp
jb
unpcklps
mov
nop
cmc
daa
out
lods
or
sub
mov
xchg
out
mov
adc
mov
cmp
xor
mov
cmpsl
add
scas
xchg
mov
mov
push
sub
mov
mov
cs
bound
add
add
inc
push
fisttps
or
jbe
icebp
fnstcw
mov
int3
mov
roll
add
add
lods
subb
jg
mov
add
and
in
mov
mov
ljmp
insb
pop
in
jl
inc
adc
xchg
rorl
in
xchg
sbb
dec
dec
int3
iret
cwtl
push
lea
sbb
inc
xchg
push
jne
lods
mov
je
outsb
inc
sub
pop
cmp
cmp
ds
hlt
or
add
add
xlat
rcrl
dec
push
add
jp
movsb
and
loope
shl
push
dec
jmp
mov
std
pushf
popf
adc
mov
mov
pop
jmp
cs
mull
ret
outsb
or
lock
sub
mov
mov
xchg
jp
mov
fs
xor
add
mov
andl
pop
imul
jnp
shlb
jl
addr16
jo
cmp
push
mov
add
adc
popa
xchg
mov
cmp
mov
cmpb
mov
rclb
sub
lret
lock
pop
xchg
xor
lea
mov
or
mov
or
sbb
add
jno
dec
fisttpll
cmp
popf
jne
dec
mov
pop
mov
push
loope
mov
out
jns
out
or
imul
mov
xor
cmp
dec
inc
sti
inc
aas
push
pop
daa
fsubrs
or
push
flds
bound
cmpl
jmp
gs
adc
mov
jg
aad
nop
test
add
in
pop
jmp
cmpsb
pop
dec
xchg
movsb
sbb
movsb
cmp
and
ret
int
jo
inc
pop
xchg
fsubs
xchg
cmp
mov
sub
test
stc
outsb
out
add
add
mov
and
fstpt
test
pop
mov
loop
gs
cli
enter
fs
scas
lahf
mov
add
std
icebp
jbe
adc
vmovaps
popf
add
outsl
in
mov
jl
ds
nop
inc
push
icebp
xor
push
add
sub
enter
cmpsb
lret
xlat
xchg
cmp
sahf
mov
push
aad
test
add
push
push
inc
inc
xchg
pop
mov
inc
les
xor
or
cmpsl
or
adc
es
pop
popa
lret
sbb
xchg
cli
add
and
cltd
xchg
mov
mov
clc
lcall
test
fs
iret
pop
sub
shl
mov
inc
mov
adc
mov
sub
scas
fcmovbe
jp
push
mov
loopne
scas
addr16
aam
sbb
cltd
js
fsts
das
mov
loope
mov
xor
lret
dec
add
sbb
xchg
fstl
mov
cmp
cmp
cmp
jne
dec
insl
rorl
xor
adc
pop
jno
mov
ds
ljmp
std
into
daa
or
mov
mov
mov
popf
and
lret
pop
inc
jae
orl
push
std
iret
repnz
mov
sbb
sbb
jnp
jmp
jl
fisubl
in
cmpsl
lods
rcll
mov
sbb
out
pop
dec
xchg
or
clc
xor
jne
test
in
movsb
lahf
mov
mov
stos
cmp
nop
out
data16
pop
sti
cmc
pop
lea
or
clc
std
lcall
pop
mov
push
pop
sbb
sbb
icebp
imul
stos
call
dec
in
cli
sti
sub
adc
cmp
out
lea
cmc
mov
imul
cmp
roll
rorl
mov
jg
jne
pop
pop
mov
cmc
mov
cmpsl
push
enter
andl
mov
aaa
leave
sub
adc
adc
cltd
cmpsb
mov
sub
out
cmp
orb
xchg
add
std
js
cmpsl
inc
lods
mov
cmp
push
push
fbstp
mov
xchg
dec
imul
shlb
mov
adc
repnz
sub
cli
bound
jnp
sub
or
data16
mov
gs
mov
movsl
jp
push
lods
sbb
pop
icebp
push
test
add
mov
jmp
push
les
fnstenv
sub
add
mov
fisubrl
aad
sub
push
mov
sbb
aas
orl
adc
sbb
mov
scas
icebp
addb
xlat
clc
and
daa
mov
add
push
cmp
int
lods
ret
loopne
jno
lock
leave
out
mov
stos
in
sbb
adc
sub
inc
cld
push
test
mov
lret
testb
imul
test
sbb
inc
int
jge
or
cmpsl
mov
dec
testb
or
cwtl
outsl
sub
das
insb
jl
das
lods
pusha
mov
popa
loope
lds
cmp
sub
mov
hlt
imul
lds
shlb
mov
pushf
or
loop
sub
scas
add
out
cltd
mov
mov
pop
pop
xor
push
mov
sbbl
fcoml
push
add
xchg
mov
mov
add
mov
negl
jl
mov
outsl
adc
adc
das
stos
movsl
dec
sbb
pusha
inc
mov
mov
or
or
bnd
jo
pop
inc
icebp
cmp
pushf
insl
mov
xchg
inc
or
scas
fimuls
pop
add
fld
sbb
mov
xchg
mov
lret
enter
and
push
pop
push
dec
mull
cli
lods
stc
xor
add
pop
and
xchg
mov
mov
popf
dec
dec
aam
ret
in
sub
dec
mov
and
sbb
cld
push
mov
sbbl
cmp
push
push
lods
call
es
pop
xchg
int3
or
jo
adc
push
jne
xchg
shll
fildll
adc
xchg
mov
cmc
add
xchg
negl
mov
add
out
pushf
push
inc
xchg
push
jmp
in
jp
xchg
sbb
jge
sub
aaa
lea
add
imul
and
outsl
pop
imul
imul
jp
cli
call
cmpsb
mov
xchg
push
cmc
data16
movsb
mov
jmp
sbb
ror
cltd
sbb
loop
mov
and
xchg
decb
xor
arpl
and
out
cmp
aam
jne
jge
xor
push
push
sbb
addl
movb
sbb
or
cmc
fstpl
addr16
into
mov
fsts
mov
stos
mov
inc
aam
push
xor
mov
add
mov
clc
xor
jl
pop
sub
push
pop
rcll
out
adc
pop
cmpsl
in
std
negl
xchg
sbb
dec
loop
movsb
cli
sbb
xor
insb
jns
scas
dec
xor
out
add
testl
xchg
test
sbb
or
mov
mov
push
push
mov
inc
aaa
test
icebp
jl
outsl
xchg
arpl
cmp
and
adc
sub
scas
push
add
movsb
ljmp
xchg
adc
cmc
dec
cmp
popa
sbb
or
orl
xor
mov
push
sbb
sub
add
es
xchg
add
pusha
jae
insl
adc
lahf
mov
in
mov
bound
insl
aad
popf
test
out
out
scas
xor
aad
negl
ss
les
mov
aas
sub
cld
loop
pusha
mov
or
push
mov
int3
mov
push
lret
imul
popf
mov
hlt
adc
mov
dec
and
mov
cmc
dec
add
add
fsts
xor
dec
sub
lock
enter
repz
insb
mov
scas
push
pushf
out
pop
xor
or
fnstcw
inc
int3
pushf
lahf
dec
adc
daa
cmc
lock
pop
cwtl
mov
xor
daa
popf
call
aas
out
fnsave
mov
mov
mov
xchg
orb
call
jle
lret
add
dec
jo
mov
fistps
mov
into
xor
jp
sub
jne
xor
popf
pop
dec
das
jecxz
ja
add
push
push
add
sti
pushf
ss
ret
add
aam
leave
fs
jecxz
inc
adc
or
out
je
sub
push
mov
pop
hlt
lock
add
xchg
sub
iret
jnp
cmp
cmp
scas
cmp
jmp
adc
xchg
dec
xchg
dec
cmp
outsb
ret
add
add
inc
cmpb
mov
sub
std
int3
xor
sbb
in
cmpsl
inc
lcall
out
jle
jge
gs
mov
xchg
mov
mov
adc
in
dec
pop
cld
imul
add
mov
jbe
mov
sbb
pop
mov
adc
outsl
dec
dec
out
jecxz
adc
inc
fwait
aaa
addb
fcoms
pop
add
int
shll
in
push
push
aaa
scas
push
inc
mov
test
lds
xchg
stc
lock
adc
push
inc
adc
push
or
mov
pop
test
adc
lock
xchg
jmp
mov
mov
pop
pop
jmp
xchg
cmc
jge
cmp
fimull
add
jbe
mov
rcrb
mov
mov
push
inc
sti
mov
xor
sub
pop
lods
pusha
sbb
mov
adc
push
mov
aad
in
push
cli
pop
mov
add
cmpsb
loopne
ss
add
cmp
dec
mov
insb
inc
pop
xor
call
dec
rcrl
adc
les
cmpsl
lds
adc
lret
mov
mov
push
adc
popa
out
push
pop
pop
dec
jno
fcoml
fnstcw
mov
sbb
jecxz
and
inc
in
loope
cltd
jg
dec
fs
mov
testl
add
into
int
fcomps
xchg
xchg
outsl
ljmp
push
mov
aaa
xchg
fcmovnu
or
int
fdivl
nop
fdivrs
cmp
jnp
leave
add
sti
cmpb
sbb
fisubrs
pop
add
xor
popa
pop
adc
jle
pop
hlt
pop
xchg
and
dec
mov
mov
mov
xchg
mov
sbb
lock
ja
jo
scas
add
add
dec
je
or
xchg
cld
shll
add
add
movb
lcall
pop
rclb
sarb
test
lret
mov
mov
ret
adc
in
insb
lret
mov
mov
shl
add
mov
out
xor
fcomps
mov
xor
cwtl
sbbl
xchg
scas
scas
pop
cmp
add
mov
dec
sub
and
shlb
jecxz
cld
jecxz
fiadds
dec
loopne
nop
inc
mov
call
and
cs
aam
xchg
push
or
cmpsl
lret
das
mov
std
les
jbe
ss
sarb
mov
xor
xchg
das
xor
loop
enter
in
loop
sub
mov
xchg
ret
ja
int
push
mov
pop
add
lods
xchg
cmp
add
add
les
xor
cmp
jp
mov
int3
or
adc
mov
das
xor
xor
js
pop
fistps
add
and
sbb
fs
inc
out
movsl
jne
mov
cs
cmp
or
add
cs
mov
jecxz
xchg
in
add
xchg
xor
lods
mov
mov
psubq
or
shll
jae
xor
add
sub
sub
xchg
leave
xor
in
out
shlb
push
imul
scas
and
in
xchg
inc
and
pop
sub
inc
jp
pop
jne
inc
inc
or
mov
cmp
stos
ret
lret
clc
in
pop
inc
and
pop
xor
xchg
cld
insb
imul
lods
mov
sub
icebp
mov
daa
inc
adc
mov
mov
enter
mov
in
lret
add
test
adc
repnz
ss
clc
or
jp
jmp
es
imul
pop
push
sub
mov
mov
data16
add
mov
ret
push
push
jne
push
arpl
aaa
jns
sbb
or
push
out
pop
mov
mov
push
mov
dec
push
pushf
add
test
cmc
add
sub
xchg
xchg
pop
jo
fisubrs
fidivrl
or
xchg
add
add
hlt
sub
mov
xor
rcrl
sbb
subb
mov
shl
mov
jno
les
ret
test
test
lds
xor
xchg
mov
cmc
ds
inc
filds
mov
sbb
or
out
lods
push
test
ret
mov
roll
xor
xchg
dec
push
pop
push
add
pop
inc
add
add
mov
mov
loopne
xor
testl
mov
jae
or
pop
add
lock
incb
mov
call
das
mov
bound
mov
cld
ljmp
jg
gs
bound
loopne
icebp
lcall
in
incl
mov
stos
pusha
sbb
pop
sub
adc
adc
insb
lret
jae
std
addr16
loop
pushf
sub
mov
cmpsl
sbbl
add
xchg
inc
int
fst
and
mov
insl
or
fdivrl
imul
sub
push
enter
ret
scas
jns
out
jecxz
mov
mov
aas
adc
in
je
or
scas
aad
mov
imul
jp
add
or
pop
dec
add
xchg
inc
push
pushf
out
push
leave
das
mov
es
andl
xchg
rclb
jl
adc
inc
lods
lret
add
push
xchg
in
popf
and
test
inc
add
jmp
ja
xchg
lret
sbb
dec
add
push
inc
ds
sub
push
into
jl
inc
idivb
dec
test
fisubl
outsb
pushf
add
xlat
mov
xor
aaa
and
pusha
scas
shrl
push
shrl
dec
imul
fildl
mov
cld
push
mov
mov
iret
xchg
imul
add
dec
mov
push
add
movl
jle
lds
adc
or
das
jg
and
imul
mov
sub
pop
xlat
test
jg
outsb
subb
fistpl
or
sub
xchg
subl
mov
or
data16
cmpsb
cmpsb
inc
push
cmp
and
loop
insb
push
inc
xchg
std
lds
