and
push
add
xchg
pop
add
or
mov
mov
or
outsb
fwait
adc
scas
lods
dec
adcl
ficomps
mov
ljmp
mov
xchg
cmp
and
mov
mov
sbb
loopne
xchg
fists
dec
jecxz
popa
stc
jp
and
jae
das
lcall
mov
out
daa
aas
xor
and
xchg
or
jp
rorb
je
movsb
call
adc
jp
cltd
add
fistpl
lods
mov
pop
cmpl
dec
and
or
test
push
push
push
pop
cmove
push
jne
inc
mov
jp
je
push
push
sbb
xor
cmp
pop
insb
shl
inc
ss
or
lret
out
scas
sub
adc
in
inc
gs
mov
mov
ss
jl
es
cmpsl
pop
or
mov
and
sub
inc
daa
rcrl
cmp
sbb
jne
mov
popf
mov
pop
sbb
insl
out
lods
push
jmp
clc
mov
adc
xor
pop
cld
dec
xchg
xor
lods
enter
inc
cmp
sub
pop
adc
sub
dec
mov
dec
ret
loop
out
cld
or
lds
popa
sahf
loopne
cmpsb
jle
sub
xchg
mov
stos
jno
lret
int3
inc
pop
stos
cmc
sahf
sti
mov
sbbb
cmp
cmpsb
cmp
sub
out
mov
or
aam
push
add
mov
loop
jecxz
xchg
lahf
cmp
out
pop
scas
fldcw
loope
scas
in
dec
dec
adc
and
xchg
pop
movsl
xor
rorl
sbb
jae
sbb
or
cmpsl
fs
jmp
inc
push
incl
rclb
scas
out
inc
and
jo
lret
push
cmpsl
mov
inc
push
icebp
aad
dec
jnp
lret
int3
repnz
test
pop
mov
or
inc
ds
incb
adc
out
test
xor
pop
sbb
shl
or
pop
sub
lods
or
sub
ja
les
push
lret
dec
pushl
stc
adc
movsb
cmp
xchg
adc
mov
mov
cmp
lcall
lods
aam
lcall
adc
sbb
clc
repnz
fidivl
xchg
pop
mov
lea
fsubrs
sbb
cmc
les
pusha
imul
and
and
push
xor
subb
xor
push
and
imul
stc
call
mov
call
lods
scas
fwait
xchg
sbb
mov
outsl
das
xorb
loop
cmp
adc
push
mov
push
out
jmp
mov
xor
hlt
sbb
sub
enter
ret
cld
mov
fldt
push
jmp
nop
sti
pop
mov
stos
and
jp
xchg
push
jbe
jp
jnp
out
call
inc
loopne
cli
rolb
inc
push
pusha
cmp
or
add
inc
jge
fwait
mov
inc
push
jg
ja
lea
leave
out
in
inc
add
add
jb
cmpsb
fwait
je
lcall
mov
sti
jg
and
mov
in
das
fcompl
leave
shll
jo
mov
es
dec
pop
mov
mov
adc
push
andb
out
out
xchg
test
imul
add
pop
pop
adc
aaa
aam
mov
cmp
mov
mov
sub
pop
fbstp
pop
dec
sti
in
aam
leave
adc
test
push
and
pushl
pushf
and
nopl
shr
outsl
adc
sbb
sub
adc
movsb
lods
jb
mov
and
lea
movsb
dec
adc
sahf
in
sub
ret
and
dec
mov
xchg
sub
std
xchg
hlt
mov
jp
push
jp
cmp
inc
dec
push
mov
movsb
xchg
adc
sti
outsl
lods
filds
inc
cmc
dec
mov
or
and
xor
or
insl
fcompl
or
sub
insb
popf
cld
pop
adc
pop
and
push
sub
ljmp
add
adc
and
les
adc
lock
cld
push
mov
mov
mulb
push
pop
adcl
pushf
xchg
mov
mov
dec
loope
cmc
aam
pop
cmpsl
push
adcl
xor
sbb
mov
xor
mov
jl
push
mov
in
jge,pn
mov
xchg
hlt
xor
push
ror
pop
loop
or
rorl
inc
popa
int3
inc
es
orl
mov
mov
mov
outsl
loopne
and
repnz
xchg
sar
dec
add
mov
shrb
inc
pop
xchg
fcoml
enter
and
sbb
mov
arpl
pop
jae
push
push
push
jns
cld
sti
mov
mov
sub
cltd
adc
aaa
push
sub
push
lret
fcmovnbe
aam
add
in
and
fmuls
repnz
negb
xchg
fisubs
js
push
test
xor
mov
mov
into
int
jmp
test
dec
cmc
stos
add
sti
sub
jae
mov
push
lods
and
push
mov
scas
negb
xchg
int
inc
clc
push
mov
loope
cmp
push
std
add
insl
lock
test
clc
inc
jbe
jo
in
jg
into
push
inc
dec
push
jno
inc
filds
ret
push
nop
shlb
pop
rorl
loope
dec
sub
xor
inc
mov
scas
dec
sbb
popa
cltd
cmp
mov
test
or
mov
cmc
imul
movsb
jge
or
insb
int3
xchg
or
mov
xor
inc
scas
ss
shll
and
les
adc
out
lock
fcoml
fistps
sbb
inc
scas
sahf
leave
push
pop
fsts
sahf
mov
sbb
int3
imull
push
inc
dec
jmp
cld
and
or
mov
cmp
outsb
mov
les
ror
arpl
sbb
aaa
into
xor
mov
cmp
cmp
sti
adc
push
sbbl
mov
jl
push
iret
inc
mov
add
sbb
lds
call
sub
jmp
call
sbb
inc
cmpsb
movsb
jo
mov
pop
ljmp
push
ret
rclb
and
xor
and
xlat
fstl
out
mov
in
icebp
sub
mov
repnz
xchg
dec
mov
push
lcall
enter
push
sti
aad
or
in
sub
pop
sarb
dec
mov
insb
mov
subb
jmp
imul
dec
jae
jmp
dec
push
push
and
in
ss
mov
call
cmp
sub
or
int
jmp
adc
pop
add
cmp
out
mov
cli
push
pop
mov
movsl
stos
test
int3
add
into
dec
mov
mov
mov
addr16
shrl
jl
sbb
push
or
icebp
mov
ds
pop
xor
cltd
xlat
stc
push
add
lahf
dec
sbb
sub
inc
pop
ficoms
orb
and
je
or
sbb
jg
sti
fsubrl
cwtl
data16
push
xchg
pop
adc
xchg
pop
lahf
xor
popa
add
dec
sbb
aad
mov
mov
or
inc
pop
out
cmpsb
adc
fidivs
dec
jns
in
push
cwtl
mov
test
pop
int
in
js
in
bound
xchg
dec
das
das
hlt
repz
std
pushf
xchg
daa
and
fisttpll
push
sbb
out
inc
repnz
xor
mov
out
mov
adc
mov
scas
jne
add
pop
sbb
sarb
xchg
test
fisttpll
cld
or
lods
lods
sub
in
add
leave
das
enter
out
outsl
rcl
fwait
add
inc
push
stos
inc
ljmp
divb
aaa
dec
mov
inc
adc
pop
push
mov
stos
and
xchg
mov
push
fisubrl
xchg
or
fcomp
mov
movsl
push
pop
xor
inc
cmp
push
jne
jae
push
fsubrs
leave
cmp
mov
sahf
or
fsubrl
rcll
push
inc
lret
enter
ja
sub
nop
mov
mov
les
ret
fldcw
jl
pop
inc
add
pop
mov
xor
das
sub
int
mov
imul
xor
ficoml
jecxz
lock
or
mov
leave
cmpsb
shlb
sbb
loop
outsl
push
mov
aaa
cmp
and
test
pop
sub
mov
scas
xchg
lds
cmpsb
cmp
jno
and
push
pop
cld
loope
cs
mov
cmpsl
sbb
push
ja
jmp
xchg
cltd
ds
sub
pop
fwait
jnp
int3
arpl
mov
and
mov
adc
push
aam
push
loopne
xchg
jbe
fisubrs
push
les
xor
xchg
int
cmp
mov
sbb
out
lock
adc
sub
cmp
xchg
push
mov
test
out
arpl
rolb
xchg
into
outsb
sbb
mov
jp
lahf
das
pop
add
add
mov
pop
xchg
sbb
inc
inc
jnp
in
movsb
cltd
jae
pusha
outsl
sbb
inc
rol
xor
int3
sub
test
and
iret
fwait
sbb
cmp
data16
fisubl
int
mov
pop
shrb
adc
pop
sbb
and
fsubrl
inc
es
test
outsl
pop
aad
test
and
nop
mov
cmp
adc
shll
sbb
mov
call
pop
push
ss
in
shrl
lret
outsl
addr16
mov
mov
cmpsl
pop
xor
sbb
xchg
loop
rcl
add
ret
add
call
ret
int
in
xor
mov
xchg
xchg
popf
push
movsb
pop
cltd
and
mov
rep
fnstenv
mov
mov
aam
and
xlat
pop
cltd
dec
inc
adc
addr16
adc
mov
mov
jmp
adc
or
mov
out
mov
cmp
in
sub
inc
jbe
fwait
add
rcrl
push
xlat
cmp
pop
dec
int
xchg
frstor
loopne
xor
out
clc
jb
jg
mov
cli
iret
je
lods
adcl
cmp
or
jmp
fs
or
mov
loope
add
cmp
fsubl
adc
popf
xchg
out
repnz
jbe
pop
jo
or
cltd
inc
cld
cli
xor
leave
push
cmp
dec
sbb
scas
flds
icebp
add
push
aas
or
pop
add
loop
cmpsl
jnp
mov
dec
ds
push
push
inc
xlat
xor
int
push
stos
push
pusha
shld
out
into
rol
scas
inc
test
rorl
sahf
or
inc
lea
call
inc
sub
call
dec
push
mov
call
dec
or
dec
inc
lea
call
lea
lea
inc
lea
mov
sub
lea
dec
sub
movzwl
add
dec
and
call
add
add
inc
imul
inc
call
dec
dec
call
dec
dec
mov
inc
lea
dec
inc
and
sub
pop
dec
mov
mov
add
mov
pop
inc
or
pop
lea
inc
imul
inc
pop
lea
add
movswl
sub
and
inc
dec
imul
pop
lea
mov
pop
inc
mov
mov
add
inc
call
inc
or
mov
dec
ret
mov
movzbl
push
imul
dec
push
lea
add
push
add
sub
push
and
dec
push
imul
mov
imul
lea
push
dec
ret
push
dec
and
sub
add
add
mov
push
dec
or
mov
call
pop
ret
jmp
lea
mov
inc
mov
movzbl
add
dec
add
sub
add
and
inc
mov
movzbl
and
mov
xchg
movzwl
mov
mov
mov
xor
dec
lea
dec
inc
inc
inc
inc
dec
jne
mov
mov
dec
mov
pop
lea
inc
pop
inc
movsbl
pop
sub
xor
add
mov
imul
mov
movswl
mov
lea
dec
mov
add
ret
push
lea
mov
lea
lea
add
add
mov
imul
push
push
push
push
dec
inc
mov
push
inc
or
imul
dec
sub
dec
mov
xor
lea
mov
mov
push
imul
inc
xor
movzbl
dec
push
sub
lea
push
mov
mov
pushl
lea
call
inc
add
mov
inc
dec
inc
add
xor
lea
pop
ret
inc
mov
movzbl
sub
add
inc
mov
cmp
jb
lea
xor
inc
mov
inc
mov
mov
sub
inc
inc
lea
mov
dec
dec
inc
lea
mov
inc
imul
cmp
jb
dec
pop
and
dec
movzbl
lea
movzwl
dec
movzbl
movswl
dec
mov
xor
add
sub
xor
lea
sub
mov
lea
lea
test
jbe
inc
mov
imul
inc
lea
mov
movzwl
dec
xor
inc
and
mov
movsbl
mov
or
add
movzbl
inc
inc
add
imul
add
and
imul
dec
mov
mov
lea
mov
inc
mov
mov
add
add
mov
lea
xor
mov
add
inc
dec
jne
mov
inc
sub
mov
add
sub
lea
lea
and
lea
mov
mov
inc
inc
dec
mov
dec
inc
mov
mov
inc
imul
test
jbe
dec
imul
imul
sub
inc
mov
mov
mov
inc
inc
movzbl
mov
lea
dec
sub
inc
sub
sub
mov
inc
movsbl
inc
and
mov
dec
mov
inc
dec
movzbl
sub
inc
add
dec
mov
and
and
sub
mov
movzwl
mov
movzbl
lea
lea
mov
inc
jmp
push
movzwl
dec
lea
movswl
lea
dec
xor
mov
inc
dec
xor
dec
inc
movswl
dec
xor
inc
lea
inc
movzbl
inc
add
inc
mov
inc
mov
lea
inc
mov
inc
dec
inc
inc
dec
dec
mov
dec
add
mov
cmp
je
call
call
inc
dec
dec
inc
add
dec
mov
and
movzwl
add
lea
lea
inc
inc
call
call
lea
ret
dec
inc
pop
add
ret
push
mov
lea
mov
inc
dec
push
mov
sub
push
inc
push
mov
push
lea
lea
lea
mov
inc
sub
movzbl
movzbl
mov
call
add
push
mov
push
dec
pop
mov
add
mov
add
lea
mov
inc
inc
inc
mov
inc
dec
je
add
dec
lea
and
imul
xor
inc
add
lea
mov
inc
mov
mov
xor
imul
add
mov
repnz
lea
lea
add
mov
jmp
imul
dec
jmp
lea
dec
mov
inc
mov
imul
mov
add
inc
dec
add
and
mov
inc
pop
pop
ret
push
movswl
movzbl
lea
mov
movswl
and
mov
imul
sub
inc
mov
mov
lea
inc
add
movsbl
add
mov
inc
mov
inc
imul
dec
lea
inc
dec
movzwl
pop
ret
sub
sub
mov
lea
mov
mov
or
movswl
mov
xor
mov
mov
lea
lea
xor
movswl
movsbl
mov
add
movzbl
inc
xor
inc
dec
dec
xor
add
cmp
jb
mov
push
mov
xor
push
xor
dec
push
mov
inc
xor
dec
add
xor
mov
lea
xor
mov
add
push
add
mov
mov
add
inc
xor
and
mov
mov
mov
mov
movswl
movsbl
movzbl
imul
inc
sub
add
mov
dec
add
xor
add
movzbl
add
imul
add
imul
mov
mov
mov
dec
inc
jmp
add
or
je
sub
add
bound
xorl
aaa
xchg
and
test
cmp
daa
dec
sbb
or
push
mov
cmp
insb
es
mov
sbb
lcall
xchg
out
cltd
or
mov
movsl
sbb
imul
imul
adc
sbb
rcrb
pop
sub
fucomip
dec
repz
outsb
xchg
push
jbe
clc
mov
imul
push
sub
iret
daa
cltd
shl
push
fwait
data16
and
sub
adc
test
pushf
mov
pop
push
lock
push
clc
sub
mov
xor
mov
push
xchg
jae
cmp
jge
push
stos
pand
orb
add
push
pop
cmc
scas
push
int
insl
pop
xor
inc
pop
enter
xchg
adc
idivl
ret
out
cmp
divl
aas
lds
jl
cmp
inc
enter
mov
adc
xor
stos
movsl
aam
aas
insl
mov
out
sub
fimuls
je
popf
push
repz
jmp
lock
sbb
jnp
stos
faddl
clc
sub
test
adc
icebp
mov
sbbb
aad
or
or
mov
test
and
outsb
inc
fs
mov
cmpsl
rcrl
imul
jbe
aad
jo
sbb
jmp
jmp
mov
push
sub
dec
cmpsl
mov
fcmovu
call
addr16
mov
xor
sbb
into
adc
jno
jg
and
pop
inc
jmp
fimuls
ds
mov
sub
mov
mov
pop
jb
loop
outsb
xchg
pop
pop
data16
or
test
test
pop
out
mov
pop
lds
xchg
and
dec
test
int3
test
xchg
test
pop
lds
iret
ljmp
cld
in
push
jnp
mov
sub
and
js
add
orb
icebp
in
xor
pusha
loope
inc
mov
cmp
mov
fstpt
shll
adc
cs
fs
dec
mov
data16
lcall
rcr
pop
inc
decl
or
pushf
movsb
loop
std
fwait
lock
fs
inc
and
fidivrs
lds
push
movsb
call
or
cmp
push
mov
movsl
pop
and
dec
and
in
in
pop
mov
pop
fidivs
ljmp
xor
and
in
jle
jmp
dec
adc
repz
mov
lds
mov
cmp
and
lea
jle
outsb
shrb
popa
mov
rorb
scas
aam
inc
sub
inc
adc
out
add
pop
les
daa
mov
xchg
push
cmp
aam
pop
push
sub
loopne
fs
iret
lcall
fdivrs
cmp
lods
fcmovb
pop
mov
jmp
dec
int
xor
xor
xchg
jg
inc
add
mov
jnp
mov
lock
in
dec
int3
fs
lea
jo
imul
jae
inc
sbb
in
xchg
clc
dec
fwait
sahf
fisubrs
or
mov
and
lcall
ja
xchg
mov
cli
sarb
sub
xchg
scas
xor
dec
jns
pop
fstps
test
dec
test
mov
mov
push
test
ja
cmp
inc
das
ret
sub
adc
rep
add
shrl
xchg
jp
mov
popa
pop
add
incb
mov
fwait
scas
sbbb
addr16
fldl
cwtl
mov
or
cmc
rcrb
push
adcl
mov
pusha
stos
inc
push
mov
and
pop
cltd
jle
dec
test
pop
sbb
scas
cs
div
cli
loop
mov
push
cmp
test
adc
call
insl
mov
gs
out
inc
mov
setge
jne
in
push
cmp
imul
in
pop
cmpsl
push
add
popa
and
pop
cltd
pop
insb
jno
je
rolb
cmp
xor
inc
xor
std
mov
add
int
sarl
pop
outsl
ja
push
dec
push
or
push
inc
sbb
fxrstor
inc
jns
fisubs
fsubs
pop
add
mov
fdivrs
xchg
adc
dec
pop
js
inc
jo
sar
insb
add
mov
ret
rclb
movsl
out
adc
lods
aaa
pop
cmp
test
cmp
loope
or
in
fdivrp
lods
loopne
mov
das
xor
pop
paddsb
adc
call
jo
mov
jmp
mov
je
xchg
repnz
loope
aad
push
or
pusha
mov
jo
mov
xchg
pop
add
insb
mov
jge
mov
sub
jge
mov
and
movsb
test
push
push
pusha
jl
fsubl
and
inc
mov
cs
mov
cmp
push
stos
cmp
jmp
les
add
push
les
mov
das
sub
out
inc
inc
mov
push
cmpsb
outsl
inc
mov
idivb
or
popf
add
add
add
mov
aas
add
add
add
nop
xor
adc
add
add
jl
add
push
dec
add
jmp
add
mov
push
imul
and
inc
dec
mov
lods
xchg
mov
or
fs
cmc
push
ljmp
test
fcom
in
shll
dec
int3
mov
jns
fs
lret
pop
push
pusha
add
mov
mov
cmp
stos
inc
arpl
and
scas
dec
out
jp
jmp
int3
mov
xchg
shlb
inc
xor
push
xlat
jb
mov
cmp
sub
mov
jecxz
mov
jge
xchg
or
into
jecxz
pop
dec
mov
insb
dec
daa
jp
xchg
out
subb
inc
insl
lods
int3
push
adc
adc
lods
bound
jp
inc
mov
xchg
jp
hlt
and
cs
stc
dec
cltd
les
hlt
fwait
jne
push
call
les
xlat
push
insl
rcrb
jmp
fstl
jg
in
sbb
or
jle
pop
and
pop
fsubl
sbb
aas
cld
call
cld
shl
lock
sbb
xchg
stc
aas
and
inc
and
inc
sbb
imul
sbb
and
push
out
xchg
stc
outsb
pop
fisttps
lret
pop
loope
cmp
out
daa
rcll
aad
sbb
inc
xchg
mov
xor
mov
sti
rcr
fstl
mov
les
push
sti
repz
add
mov
jbe
in
add
cmp
out
in
jp
cld
movsb
inc
dec
hlt
movsb
sbb
mov
inc
or
shrb
in
sub
std
xchg
insb
cmp
outsb
jns
cmpb
ss
jne,pn
ds
adc
lret
imul
scas
xchg
pop
je
xorl
sbb
popf
mov
jmp
incb
ret
jp
mov
pop
jb
and
sahf
std
inc
sbb
repz
inc
cmp
call
mov
pop
adc
push
push
cmp
and
adc
cmpsl
mov
pop
in
mov
dec
insl
jb
push
pop
sahf
push
adc
aad
repnz
adcl
aaa
loope
sub
push
mov
fimuls
inc
sbb
xor
mov
rolb
xor
jl
andb
cmpsl
sub
pop
repnz
divl
hlt
cli
mov
or
add
push
or
or
cs
jo
mov
inc
outsb
lods
pushf
mov
inc
test
mov
inc
outsb
enter
pop
cwtl
cmp
call
mov
inc
into
test
and
push
pushf
cmpsl
out
jge
xchg
jge
aam
movsl
and
dec
scas
fcompl
push
cwtl
mov
ja
mov
rorb
push
xchg
adc
and
hlt
jbe
ja
aad
icebp
adc
or
and
sbbb
jl
inc
add
mov
or
jo
ljmp
jge
mov
sbb
fcoml
ret
push
jbe
loopne
movsl
sub
mov
push
test
cmp
lret
or
arpl
jb
jmp
adc
dec
test
dec
or
out
sub
cld
lahf
out
jmp
cmc
iret
push
sti
dec
jle
mov
adc
jp
mov
mov
stc
mov
and
ret
xchg
cli
add
push
xchg
ja
fildl
dec
push
xchg
aam
imull
mov
repz
in
jno
das
add
imul
ss
orl
dec
mov
das
xlat
jecxz
push
sbb
xchg
inc
js
mov
shlb
mov
xor
dec
xlat
inc
push
xor
adc
mov
js
in
jb
cmp
in
sbb
jmp
pop
xchg
adc
fdivl
nop
popl
insl
mov
repnz
std
adc
push
mov
cmp
fs
and
cmc
mov
pushf
xor
dec
aam
sahf
xor
in
punpckhbw
mov
cmp
int
sbb
pop
xchg
mov
lea
sbb
aaa
icebp
jbe
std
inc
mov
rcrl
cmpl
pop
hlt
or
inc
pop
push
scas
pop
and
cmp
fidivrs
sbb
push
mov
dec
call
repz
adc
dec
fnstcw
repnz
cli
scas
sub
or
ss
or
or
mov
rol
and
and
xchg
arpl
jl
in
push
test
out
pusha
cmp
add
outsb
fs
push
jle
int
jno
lods
pop
xchg
imul
dec
push
pop
cmp
cmc
ret
pushf
in
mov
int3
inc
dec
gs
cld
aam
pop
adc
jecxz
ss
shl
sub
jg
dec
lret
jae
int3
stc
pop
add
lcall
mov
xchg
pushf
mov
pop
mov
decb
or
add
mov
pop
mov
mov
js
jge
leave
push
sbb
mov
mov
fisubs
pop
xor
mov
cs
sub
jl
aaa
and
and
mov
sub
ror
mov
sahf
test
mov
pusha
mov
push
mov
orl
pop
data16
stos
add
sbb
pop
test
or
mov
push
xchg
dec
sahf
movsl
xor
loope
xchg
sub
imul
or
test
out
mov
sahf
lret
fcmovnu
es
xchg
sub
jp
addr16
outsl
xchg
std
push
enter
stos
inc
ja
adc
jns
push
jg
loop
dec
push
in
sub
push
inc
nop
mov
int
shl
mov
fcmovnu
lret
push
sbb
and
shll
in
pop
cmp
cs
dec
push
stos
jp
in
sub
jg
sub
cmp
push
and
adc
or
sbb
scas
lahf
popf
loope
sahf
movsb
adc
xchg
hlt
lods
xchg
and
popa
cld
rcll
adc
sahf
cmp
add
mov
jl
inc
loopne,pn
push
xchg
mov
push
pand
dec
leave
inc
int3
sub
das
dec
dec
mov
gs
xorl
add
add
aaa
push
lods
sbb
fldl
fld
mov
or
cld
push
sub
mov
cwtl
icebp
testl
push
dec
test
lcall
mov
jge
shlb
in
mov
mov
mov
dec
rcll
insl
cmp
int3
fistps
sub
scas
rcll
cmp
or
add
push
pop
lret
lret
sbb
cmpsl
pusha
mov
sub
mov
mov
inc
adc
push
cmpsb
xor
jb
mov
dec
leave
xor
movb
dec
cltd
aas
push
pushf
sbb
jns
xchg
mov
xchg
mov
test
icebp
mov
pop
repz
mov
dec
mov
add
sub
adc
mov
add
xchg
fldenvs
xlat
sub
mov
inc
shrl
jnp
insb
or
negb
ret
push
lods
xor
int
lahf
inc
scas
jne
into
loop
fs
xor
mov
fcomps
gs
inc
mov
loope
mov
mov
loop
xor
add
xor
push
dec
movsb
push
lahf
xchg
add
sbb
jmp
xchg
xchg
mov
addb
cmp
sbb
add
aam
pop
sub
jo
inc
in
xchg
ja
popf
scas
cmp
mov
add
movsl
lods
or
push
fdivr
lret
cli
sti
sub
xchg
cmpsl
out
lods
jmp
std
gs
mov
and
push
jno
movsl
mov
sahf
fmul
pop
sub
jle
jge
sbb
insb
mov
loop
hlt
pop
imul
icebp
add
xor
inc
mov
lock
ja
dec
sub
cmp
gs
jecxz
cmp
pop
cmpsl
in
pushf
je
jnp
and
pop
sbb
cmpsl
or
mov
dec
mov
out
or
jecxz
hlt
pop
dec
dec
stos
aam
jo
pop
jecxz
mov
or
xor
mov
and
jg
cmp
outsb
mov
lret
mov
std
sbb
xchg
es
or
xor
adc
jmp
es
scas
mov
arpl
scas
mov
sbb
or
cmp
jmp
std
push
and
add
add
xchg
movsl
js
pushf
into
push
and
sbb
pusha
cmp
out
lds
or
xchg
scas
inc
mov
js
std
push
push
mov
les
nop
pusha
and
xchg
mov
or
xchg
push
xchg
lock
pop
mov
inc
dec
test
aam
or
pop
rcll
fldt
in
loop
sbb
loopne
nop
add
and
popf
loopne
push
mov
mov
add
lods
add
pop
pop
sub
ror
bound
mov
test
insl
jbe
or
test
xchg
xlat
popf
cmp
add
movsl
pop
push
rolb
loope
stos
or
insl
pop
cmpsb
xchg
mov
loopne
add
ret
push
mov
push
mov
inc
add
jno
dec
inc
out
mov
ljmp
mov
int
scas
lret
pop
push
cmp
stos
push
loopne
outsl
subb
ficoml
push
ljmp
dec
in
jb
xor
roll
add
in
xchg
sub
and
jl
pushfw
subb
pop
stos
inc
sti
push
loope
push
cmp
fimull
xchg
test
pop
xchg
lods
sbbb
addr16
add
xchg
out
mov
cld
and
lret
xchg
dec
cmpl
and
adc
inc
xchg
add
jno
adc
cltd
push
cmc
icebp
xor
arpl
imul
mov
out
mov
jl
pop
sub
clc
xchg
cmpsl
aas
repnz
shrb
xchg
in
testl
xor
lods
daa
cld
xor
stos
add
rolb
jns
push
mov
cmp
xor
repz
or
gs
imul
sbb
or
aam
inc
or
lret
stc
inc
add
adc
sub
nop
add
xor
std
push
sahf
adc
enter
aas
and
jns
sti
ja
leave
add
pushf
mov
cmc
ja
adc
inc
mov
add
inc
stos
in
xchg
inc
xor
or
mov
and
xor
push
movl
arpl
dec
testb
ja
mov
arpl
pop
aam
test
sub
mov
popf
xor
sub
scas
jno
mov
push
mov
lods
jns
loope
mov
mov
dec
mov
pop
add
mov
out
cltd
negb
stos
mov
sbb
inc
fwait
mov
scas
aad
pop
mov
clc
dec
pop
jae,pn
and
lret
sbb
fisttpll
imul
stos
mov
ss
inc
add
or
add
jbe
push
movsb
mov
fwait
dec
mov
js
dec
in
decl
xor
dec
das
sub
aaa
mov
pop
xchg
mov
mov
std
mov
jmp
loop
jno
pop
cmp
add
dec
and
idivl
jnp
sub
cmpsb
loop
sub
lods
push
gs
push
cmpsl
mov
lds
xchg
jecxz
pop
sub
push
and
xchg
daa
adc
mov
call
pop
insb
jg
rcl
mov
jns
inc
mov
adc
stc
xchg
loope
repz
test
xchg
aam
lea
int3
leave
movsl
inc
repnz
xor
fisttps
sahf
ss
xchg
loopne
hlt
popf
add
inc
cmp
dec
inc
add
test
jmp
and
pushf
xchg
xchg
dec
imul
mov
or
ja
sbb
xor
push
outsb
je
mov
cmp
mov
in
sbb
orb
mov
adc
rcr
xchg
icebp
and
jae
movsb
les
mov
jle
inc
mov
xor
fxrstor
inc
mov
pop
add
inc
or
cmc
sbb
add
jl
sahf
pop
mov
fwait
xchg
stos
xchg
int
cmp
pop
mov
jmp
repnz
and
bound
push
mov
hlt
loop
rorl
xor
inc
mov
jb
add
jae
int3
push
addr16
push
add
fs
pop
adc
js
mov
or
sbb
cmp
dec
mov
fnsave
adc
xchg
mov
mov
xchg
add
push
xchg
iret
in
cmp
aas
sarl
test
dec
leave
sbb
pop
flds
in
add
pop
and
test
lcall
popf
sub
cs
xchg
hlt
push
jl
pop
imul
shll
sti
pop
jb
sbb
jl
push
repnz
push
xor
loop
insl
popa
push
xchg
rcl
jae
shl
xor
jno
aam
sub
xlat
cmc
xor
ja
lret
scas
sbb
sti
insb
ret
inc
and
lds
inc
push
loop
jnp
cmp
mov
movsl
clc
stc
aam
xor
in
dec
sub
shll
mov
inc
sub
push
addr16
push
adc
enter
loop
and
sub
push
sti
popa
dec
mov
lcall
enter
test
xor
mov
mov
shld
pusha
and
xor
push
vpsrld
push
dec
scas
cmp
xchg
push
cmp
push
xchg
mov
nop
out
int3
popa
aas
jmp
fsubrs
sub
pop
loopne
xchg
dec
pop
into
jnp
lods
jbe
imul
jmp
mov
sbb
pusha
lods
xor
mov
subb
xchg
add
js
cmc
scas
cmpb
stos
xchg
fidivrl
loope
in
or
lea
and
fildll
or
jno
lods
fldl
dec
ja
std
fisttps
mov
andl
cmc
aaa
mov
mov
or
fisubrl
and
mov
les
jb
sub
push
imul
stos
movsb
mov
in
inc
mov
aaa
aaa
xor
push
pop
pop
gs
pop
or
push
jecxz
push
or
data16
out
ds
shll
call
cmc
mov
pushf
add
mov
push
aas
enter
mov
lcall
dec
mov
mov
popa
in
cmc
mov
mov
cltd
jmp
outsb
and
and
cmpsb
into
cmp
enter
inc
loope
or
jecxz
push
cltd
mov
pop
add
inc
in
cwtl
lds
xor
adc
xor
fidivl
jb
mov
loopne
and
fdivl
orl
push
xchg
pop
sub
sbb
lds
setge
sbb
lea
rcrl
sub
scas
mov
sbb
add
sti
sbb
insb
push
inc
pop
leave
loop
std
cmp
push
cmp
add
mov
cmpsb
popf
cld
hlt
xchg
rorl
shl
jg
jns
lods
mov
mov
or
push
fildll
fs
mov
cli
or
lcall
icebp
inc
sub
mov
pop
repnz
in
sub
jb
ret
jmp
loop
shrb
add
cmp
daa
or
hlt
sbb
mov
mov
mov
aaa
nop
ljmp
add
adc
test
jle
adc
push
xlat
add
jl
xorb
loop
fsub
push
loop
sub
jne
lcall
stc
lea
sahf
adc
and
jecxz
push
stos
rcrl
pop
test
in
mov
jmp
stc
stos
sti
dec
lahf
lods
pop
push
lret
mov
xor
int
xchg
shrb
jnp
stc
out
adc
push
cmpsb
add
push
jb
mov
mov
out
jg
fs
jno
call
sub
cwtl
ror
sbb
adc
lret
or
test
movsb
push
cmp
fisubrs
cli
or
sub
in
cli
repz
jne
aaa
bnd
std
clc
clc
loopne
fdivs
loope
add
daa
ret
loope
subl
std
sbb
repnz
pop
ficoml
sti
mov
mov
pop
push
imul
fsubl
dec
clc
jp
decb
sarl
mov
aaa
sub
mov
js
outsl
add
outsb
inc
lcall
inc
sub
loop
sub
xor
pop
push
fwait
mov
push
out
subl
test
int
aad
inc
jns
push
insb
cwtl
loop
sub
out
repnz
pop
setl
sbb
cmc
sahf
mov
int
lods
clc
out
in
adc
or
and
jb
daa
mov
add
sbb
int3
outsl
jp
sbb
lret
aas
stc
idiv
jbe
pusha
outsb
ss
mov
pop
pop
dec
mov
inc
icebp
jmp
popa
movsb
stc
stos
mov
sbb
jle
lahf
adc
xchg
sbb
jecxz
dec
pop
out
sub
outsl
out
stos
add
jnp
iret
push
jle
mov
xor
addr16
cld
fisttpll
push
push
mov
fucomp
daa
pop
in
mov
jno
movsl
loopne
ds
fiadds
mov
stc
shl
in
cli
inc
inc
arpl
sti
and
jns
xchg
or
movsl
push
add
decl
cmc
enter
inc
sub
sbb
cwtl
pushf
pop
cmp
imulb
int
push
sub
pop
push
fcomp
push
add
pop
xchg
pop
mov
push
xor
out
repnz
jecxz
sub
pop
cmpsl
hlt
xchg
cmp
subb
sub
xchg
mov
jno
test
jae
jns
or
je
xchg
out
sbb
loop
fsubs
in
loope
je
ret
mov
mov
jmp
mov
jo
dec
in
ljmp
dec
pop
push
cmp
scas
push
cmpsl
push
cld
out
scas
out
lock
push
mov
into
dec
fstpt
scas
cmc
inc
movl
mov
or
mov
sub
mov
sbb
sub
pop
xchg
fnstenv
xlat
push
dec
xlat
into
jo
pop
sahf
lods
insl
in
arpl
dec
mov
dec
cld
sbbl
mov
mov
dec
cmp
pop
add
in
xchg
cmp
cltd
xchg
inc
fcomps
pop
push
jbe
jae
movsl
sbb
lret
mov
mov
dec
adc
mov
mov
push
mov
xchg
or
jb
divl
pop
ret
jge
sbb
push
lock
pop
pop
leave
fldt
mov
inc
sbb
mov
cmp
jp
sbb
push
push
jmp
add
outsl
scas
aad
xchg
jnp
dec
ds
pop
jp
sub
int
push
outsb
imul
jno
aaa
mov
lods
mulb
in
fstps
leave
sub
andb
cltd
lock
loope
ss
fs
aas
inc
adc
js
xchg
imul
icebp
pop
mov
nop
hlt
jmp
pop
fadds
daa
push
jmp
fistpll
xor
lock
adc
sbbb
cmp
repnz
pop
rcll
add
pop
bound
rcll
out
cmpb
jmp
ss
cmp
adc
mov
cmpsb
inc
and
mov
jge
jle
test
outsl
popa
mov
sahf
iret
xor
lcall
stos
add
or
push
mov
jne
and
push
xchg
les
leave
shrl
cltd
stos
mov
mov
push
es
popa
jge
mov
push
cld
mov
jl
mov
lahf
test
cs
mov
subl
rorb
call
daa
mov
je
cmp
push
jne
cltd
cmp
loop
test
stos
pop
cs
adc
adc
stc
jno
ljmp
mov
out
cmp
push
fwait
push
cmp
dec
cs
call
add
xchg
inc
test
sbb
sub
aad
sub
loopne
jecxz
jns
mov
pop
sbb
rcrb
xchg
adc
mov
aam
inc
pop
mov
jp
and
leave
rcrl
dec
sbb
add
mov
in
mov
lahf
pop
in
add
pop
cmpsl
xor
outsl
lret
xchg
inc
cmp
rol
adc
test
xchg
insl
sub
jbe
enter
jae
jb
dec
push
fwait
in
test
and
loop
ret
shll
cmp
sbb
or
cld
lea
jbe
jp
sub
and
sbb
int
dec
imul
lods
mov
xchg
push
adc
xchg
push
cmp
pop
pushw
xor
dec
cmp
and
push
shll
std
pop
jbe
jecxz
outsb
inc
and
xor
enter
or
sbb
fcoms
inc
popf
icebp
jecxz
bound
xor
and
mov
mov
push
mov
push
stc
lcall
dec
out
fs
xor
fmuls
stos
jg
mov
not
push
xchg
int3
jbe
arpl
out
int3
shr
shlb
or
mov
xchg
dec
hlt
add
movsl
divb
sbb
andb
dec
xor
fdivl
mov
sbb
testl
shr
add
imul
jg
cmp
out
nop
pop
adc
jbe
call
cld
je
dec
mov
dec
add
out
movsl
mov
sub
xchg
xor
std
push
or
mov
cltd
cmp
clc
and
push
inc
and
jnp
scas
std
leave
cmp
lret
in
pop
xlat
sub
adc
lds
dec
fisubrl
fstp
mov
imul
mov
inc
fs
xchg
sbb
pop
jp
cwtl
loope
or
inc
push
filds
mov
hlt
mov
pop
or
andb
aam
pop
ret
repz
mov
mov
or
cmpsl
aad
cli
push
or
popf
mov
cmp
push
xchg
loop
bndldx
inc
dec
xchg
cmc
or
cmp
call
inc
and
shrb
out
aam
loope
or
inc
psrad
cmp
outsl
lret
fsubrs
jae
inc
and
pop
mov
rorb
jb
cwtl
jnp
test
inc
push
fwait
xchg
ss
imul
insl
push
subl
and
sbbl
xor
mov
mov
stc
cmp
mov
fcompl
mov
or
fld
pop
inc
mov
subb
adc
ja
fidivl
cmpsl
outsb
cld
push
mov
sti
int3
incb
push
inc
mov
jl
mov
xchg
cmp
pusha
and
ss
mov
outsl
sbb
outsb
cmc
popf
or
lds
in
testl
and
popa
in
dec
rcll
mov
bound
pop
aas
mov
out
mov
fwait
and
mov
and
repnz
or
ficompl
fmul
xor
push
cwtl
push
ja
sbb
add
jg
mov
jnp
sarb
negl
roll
and
stos
xor
jae
mov
xchg
icebp
mov
mov
adc
ret
icebp
outsl
shrl
mov
cmp
movb
ret
inc
xor
or
imul
jno
fstps
cmp
xor
xor
ss
jns
shll
outsb
dec
jne
add
mov
arpl
push
cmp
push
add
mov
out
scas
nop
mov
pop
inc
in
xor
pop
aaa
mov
out
lahf
sub
loope
test
in
dec
pop
leave
insb
int3
sbb
pop
inc
mov
mov
leave
jnp
lahf
shlb
fimuls
idivl
xchg
lahf
inc
pop
repz
sbb
inc
push
push
repz
jle
idiv
fisttpll
insb
call
push
pop
je
pop
or
pop
pop
cmpl
jo
fisttps
popa
out
enterw
imul
inc
lahf
push
mov
mov
pop
lea
or
add
imul
dec
or
xchg
pushf
mov
push
sbb
adc
aaa
cli
sarl
adc
in
lret
insl
push
pushf
xchg
push
stos
xchg
or
les
ret
cmp
xchg
aad
mov
aas
jns
subl
and
stos
sahf
sub
mov
push
cmp
test
xchg
jle
lods
lds
mov
jle
stos
push
adc
dec
lahf
add
xchg
jae
shl
jbe
imul
ja
pusha
jecxz
adcl
mov
and
pop
movsl
xchg
sub
fdivrl
imul
imul
cltd
out
cmp
in
dec
push
add
sbb
fwait
sub
sub
gs
test
add
lods
push
std
xor
pop
lea
inc
jo
arpl
mov
mov
sub
int3
popf
adc
jae,pn
lret
popa
ret
pop
outsb
test
push
call
mov
test
or
jno
and
mov
jg
and
mov
pop
xchg
dec
popa
stc
xchg
add
shr
shl
jmp
pushf
sti
cli
lds
jmp
jmp
pop
pop
dec
dec
jbe
mov
mov
sbb
orl
jns
xchg
or
icebp
sbb
mov
fmuls
lds
jne
xor
dec
jg
push
hlt
cmp
lcall
dec
bound
add
pop
icebp
ret
out
dec
and
dec
add
gs
loop
ret
iret
loop
rcrb
ror
rcrl
jb
inc
pop
sub
mov
test
mov
or
loopne
test
push
fwait
xchg
sub
sbb
jbe
and
lods
or
in
fsub
or
cmp
ja
pop
fnop
inc
jg
inc
jne
movsl
jp
test
push
and
popf
lds
and
lods
push
jp
jbe
iret
xchg
add
mov
aam
stc
in
cwtl
hlt
outsb
sub
mov
pushl
lret
add
push
arpl
