scas
sahf
insb
xchg
xor
loopne
mov
roll
lcall
sbb
leave
scas
xchg
loope
aaa
or
arpl
flds
sub
pop
mov
mov
xchg
mov
popf
std
cmp
inc
dec
imul
mov
repnz
arpl
mulb
out
sahf
mov
ret
iret
push
in
jp
sbb
aad
push
outsl
jg
in
movsl
je
jbe
pop
sbb
adcl
push
fwait
out
aas
mov
leave
pusha
popf
insl
mov
mov
pop
fildll
cmp
orl
mov
lock
jg
pop
js
arpl
in
icebp
add
sti
jbe
les
loopne
pop
sub
cmp
cmp
sbb
orl
xor
cmpb
xor
fdivrs
xlat
inc
es
push
push
je
dec
js
icebp
and
pop
mov
sbb
and
stos
ficomps
dec
adc
inc
mov
clc
dec
adc
sahf
push
cli
cmpsb
aad
outsb
cmp
addr16
aad
fsubl
mov
fadds
or
pop
add
out
bnd
lods
int
cwtl
mov
ss
mov
lcall
fcmovu
jae
cs
dec
push
mov
pop
dec
scas
jb
mov
leave
nop
aad
lahf
cwtl
cmp
lahf
xchg
addb
jo
xchg
sbb
out
push
shr
and
popf
push
sbbl
and
jb
or
mov
inc
movsl
daa
data16
mov
lods
add
lcall
rcr
mov
jecxz
pmulhw
sub
lods
cmp
or
jo
loop
xchg
push
inc
xchg
inc
jg
out
repz
ja
aam
inc
fcmovb
xlat
sub
xor
nop
ret
mov
fidivrl
inc
idivb
out
nop
push
in
mov
jne
jle
loope
sbb
testb
rcl
pop
cmp
inc
int3
inc
mov
lret
out
sbb
sbb
rorl
cmp
test
imul
add
xchg
push
sub
clc
push
arpl
xchg
inc
xchg
sub
lods
dec
or
mov
pop
xor
and
test
cmp
mov
dec
loopne
mov
xchg
jp
and
inc
lods
mov
xor
hlt
stc
mov
push
and
scas
push
mov
orl
jnp
mov
sbb
stos
inc
xchg
loop
dec
push
dec
sub
je
test
cmc
out
aad
push
mov
mov
aad
push
inc
roll
push
cld
push
fucomip
pop
ja
ljmp
inc
outsl
sahf
cs
ret
out
in
sub
inc
loop
gs
sbb
addr16
hlt
mov
out
ret
and
xchg
inc
hlt
mov
pop
sbb
mov
mov
and
adc
pop
push
xchg
test
sbb
cld
ss
mov
sub
gs
filds
pop
cmp
ret
div
ret
shrb
cwtl
loope
sar
mov
sti
ds
xor
dec
adc
dec
mov
dec
bound
push
mov
out
jl
cli
xor
sbb
jo
les
add
outsl
imul
mov
pop
inc
outsb
js
daa
aaa
and
jmp
add
add
dec
add
push
jnp
cmp
insl
push
sbb
divb
orl
mov
cltd
adc
ret
mov
jge
pop
push
stos
mov
adc
inc
dec
sub
repz
mov
mov
inc
inc
lods
jle
in
inc
or
lret
sbb
jecxz
xchg
bt
pop
push
rorl
sub
jae
mov
out
push
hlt
jmp
inc
cmp
addr16
push
xchg
or
xchg
and
insl
test
sub
mov
loop
adc
ljmp
sub
punpckhwd
sahf
popf
xchg
cmp
cmp
popa
cli
mov
aad
call
test
push
iret
mov
cmp
sbbl
out
and
stos
fisttps
sbb
inc
or
xchg
repnz
enter
fstpl
loopne
aas
iret
loopne
arpl
cli
mov
push
mov
sub
stc
push
add
outsb
xor
mov
aaa
mov
sti
icebp
pop
sbb
lret
xor
xchg
add
mov
fidivrs
test
sub
adc
packssdw
xchg
jno
fldt
es
mov
arpl
xchg
int
add
into
add
add
stc
sbb
gs
out
enter
rcll
sub
inc
popa
lods
repz
and
cmp
cmp
stc
adcb
iret
shrl
adc
cwtl
in
mov
mov
into
daa
bound
pop
sti
sbb
aas
sub
push
popw
xor
mov
repz
popl
lods
push
jmp
push
or
outsb
jno
nop
fldl
imul
fsubrs
cmp
add
sbbb
jno
cmp
addl
adc
repnz
mov
add
or
and
aaa
xchg
cwtl
dec
sbb
push
pop
roll
negb
dec
mov
adc
inc
or
mov
cmpsl
jno
xorb
jo
fs
movsl
add
sub
add
cmp
mov
jbe
imul
xor
mov
fwait
mov
les
sbb
mov
pop
test
cmc
xor
out
std
and
xchg
les
jmp
les
popa
push
or
nop
adc
mov
fdivl
inc
out
sub
sarl
dec
frstor
aad
xor
jno
scas
and
jnp
pop
addr16
out
add
pop
inc
iret
in
xor
pop
dec
xor
iret
daa
inc
sbb
scas
mov
inc
mov
xlat
pushf
mov
dec
btc
adc
and
pop
push
rcrl
sub
xorl
push
sbb
cltd
test
daa
adc
aad
add
mov
cmovs
lret
xor
rorl
rol
adc
jp
repz
imul
fsubp
mov
push
add
pop
das
xchg
mov
aad
xor
push
and
repz
test
mov
mov
push
movsl
jo
test
das
push
mov
clc
call
sbb
adc
rcll
cmpsb
outsl
xor
jne
rolb
sti
jmp
cmp
add
repz
aam
cmpb
shrb
mov
jge
subl
add
stc
inc
ret
push
call
jns
std
inc
data16
shrl
and
cmp
or
push
jge
flds
in
ss
push
mov
jl
test
insb
mov
mov
cmp
mov
adc
or
sub
xchg
je
mov
mov
jb
add
ret
xor
adc
in
sahf
pop
out
xchg
nop
mov
fdivl
pop
outsb
das
loope
les
lret
sub
je
and
jge
outsl
push
jnp
mov
jge
test
xor
dec
add
push
lahf
mov
pop
loop
es
idivl
xchg
je
fnsave
js
push
or
and
jb
jp
xchg
es
je
push
jle
cli
outsl
shrb
pop
push
xchg
ret
mov
adc
xchg
aad
test
scas
out
jne
les
cmpb
mov
out
roll
mov
sbb
xor
icebp
xchg
push
inc
test
xor
cmpsb
in
cmp
push
mov
inc
lret
out
add
add
cltd
shll
dec
in
mov
aam
dec
arpl
mov
xchg
pop
or
cwtl
dec
mov
push
xchg
mov
int3
cltd
cmp
and
or
sahf
inc
sbb
or
jl
fcoml
and
test
lea
and
mulb
icebp
and
cmp
mov
test
lret
ffree
stc
xchg
in
mov
add
in
sbb
fs
mov
add
mov
xlat
cmc
sti
fdiv
cmp
inc
cli
mov
popf
sub
addr16
or
pop
idiv
sbb
sbb
mov
mov
xor
out
push
test
mov
fmul
lcall
aas
ds
dec
lahf
xor
jp
xchg
je
cmpsb
clc
insl
out
mov
fsubrl
or
mov
addr16
ret
mov
ljmp
mov
shll
mov
hlt
enter
and
pop
mov
jo
roll
mov
int3
fisubs
xchg
fstl
pop
xor
orl
add
cmp
sbb
dec
insb
sub
push
loopne
mov
add
jmp
push
test
mov
jo
stos
imul
inc
and
sub
mov
jne
push
add
xchg
adc
xchg
jmp
lret
sbb
pushf
adc
cli
and
xchg
inc
mov
in
inc
mov
cmp
shll
inc
mov
sub
mov
sub
dec
sub
push
fidivrs
mov
push
sarb
mov
add
sub
sbb
loope
iret
sarl
out
push
adc
inc
jbe
and
mov
adc
sahf
les
pop
xchg
push
xchg
mov
mov
mov
mov
aad
mov
xor
push
and
repz
movsb
fmull
add
pusha
ss
mov
pop
arpl
sti
push
adc
xchg
xchg
xchg
mov
outsl
int
bound
push
xor
into
cmp
jno
bound
mov
mov
adc
or
mov
inc
outsb
mov
daa
inc
cmp
loop
jne
jae
cs
leave
mov
out
dec
aaa
mov
inc
lods
and
scas
xor
inc
ret
cmpsl
mulb
mov
or
cli
inc
sahf
add
lahf
pusha
cmpsl
mov
divb
mov
sub
pop
push
cmpsl
bound
out
gs
in
sbb
or
xchg
push
out
popf
adc
mov
outsb
push
rcr
mov
out
dec
outsl
inc
ret
and
add
mov
inc
cmpsl
outsl
cld
rolb
addr16
jmp
sub
push
cli
in
cmpsl
and
lret
dec
lods
and
fwait
test
mov
jecxz
xchg
mov
pop
pusha
push
daa
sub
adc
xor
out
xchg
pop
push
in
xchg
bound
pop
into
fwait
lret
add
dec
adc
test
out
mov
leave
dec
cmc
mov
jp
mov
shll
test
xchg
repnz
sub
roll
mov
into
sub
or
inc
aad
sbb
mov
jnp
shl
imul
cmpsl
mov
mov
cmp
jnp
dec
pusha
mul
rcll
fstpt
fsts
add
dec
in
mov
mov
xchg
or
sahf
jge
add
xor
sub
xchg
outsb
sub
nop
cmp
push
stos
orl
int3
inc
test
inc
dec
jno
ret
push
outsl
std
fs
jne
fldt
cmp
icebp
dec
pop
insl
lret
add
xchg
js
fstpl
popl
shrb
sub
jae
pop
cld
mov
and
int3
mov
std
mov
push
lods
pop
orl
jo
xor
cmp
fildl
or
iret
popa
test
rorb
push
les
fdivl
subl
stc
inc
fcmove
movsb
cmpb
mov
int
push
cltd
xlat
fnstenv
cli
negl
orb
lock
push
pop
mov
sbb
hlt
icebp
jns
adcb
hlt
pop
push
pusha
sub
shl
sub
jae
test
leave
dec
loop
inc
lcall
push
std
repz
sahf
pop
mov
mov
lret
xor
cmp
mov
fsubrs
sarb
rcrb
ss
lret
or
loope
inc
push
gs
jae
stc
push
and
mov
fwait
popa
mov
pop
push
lock
mov
inc
dec
mov
bound
in
sbb
cmp
leave
inc
shr
or
cmp
or
mov
sbb
xchg
stos
xchg
out
ljmp
dec
cmp
lcall
xor
xchg
push
ljmp
inc
into
jnp
dec
je
stos
fldcw
xchg
divb
lds
inc
jp
movb
sbb
das
xor
les
arpl
sub
lock
xor
lods
mov
dec
out
inc
adc
jae
or
jb
jnp
sbb
sbb
push
enter
out
cmp
sub
fwait
pop
cmpsl
sbb
insb
add
movsl
jo
and
cmc
mov
je
mov
mov
jb
in
sbb
xchg
stos
in
sbb
mov
jno
or
xchg
mov
shl
imul
mov
add
and
clc
cld
ja
cld
sbb
mov
xchg
nop
insb
mov
aaa
lods
and
fsubl
aam
jmp
aad
push
dec
pop
xlat
jl
add
xlat
push
jns
add
daa
mov
popf
sar
pop
jo
loopne
cmp
push
dec
dec
mull
pop
dec
cmp
xor
pop
and
push
cmp
cli
pop
imul
ret
cwtl
mov
mov
fdivr
sbb
lret
aad
orb
sub
fstps
popf
sbb
out
mov
icebp
jg
cmp
loopne
es
ljmp
mov
pop
and
hlt
loope
shl
stos
dec
stos
inc
push
mov
cs
mov
cs
in
jl
lret
jmp
push
movsb
popa
popf
xor
or
sub
and
insb
or
cwtl
cmp
xor
dec
xchg
jmp
add
insl
sub
bound
adc
mov
push
jge
add
cld
int3
insb
loop
fs
mov
mov
fiadds
xor
pop
pushf
xchg
jmp
xchg
fmull
fwait
sub
pop
movsb
bound
jns
testl
adc
divb
je
lret
das
mov
and
mov
fsubrp
cwtl
mov
xorl
mov
imul
mov
out
je
xchg
mov
adc
xchg
jo
lahf
gs
sbb
mov
imulb
or
mov
xlat
mov
cmp
mov
and
push
testl
nop
sti
insb
adc
pmaxsw
push
je
jb
jp
jl
mov
lret
mov
rcll
fcomps
xchg
add
lods
js
out
nop
lret
pop
pusha
lret
mov
xor
push
sub
sbb
pop
xlat
insl
dec
cmpl
arpl
in
xchg
pop
cmc
add
aaa
push
mov
jbe
lea
jl
pusha
test
stos
sub
out
xor
jmp
xor
xchg
pop
add
xor
mov
inc
cwtl
add
mov
ljmp
mov
aas
aas
push
outsb
add
das
popf
sti
cmc
dec
pop
ficoms
or
arpl
into
ljmp
add
xchg
cmc
mov
call
aaa
jecxz
cmp
das
mov
bound
lods
shrl
repz
fidivl
test
test
dec
dec
cmp
ss
adcb
mov
dec
shrl
mov
shrl
add
fldl
pop
repz
loopne
pusha
push
push
mov
adc
dec
xor
pusha
push
icebp
xchg
xorb
insb
stos
jno
dec
jg
jnp
pop
mov
cmpsl
mov
mov
sahf
mov
and
subl
mov
lock
pop
ljmp
jmp
dec
outsb
aam
mov
cli
fsubrl
dec
loop
lcall
rcll
pusha
cmpsb
push
jae
shr
mov
mov
icebp
xor
popf
bound
int
add
outsl
cltd
aam
in
mov
js
clc
jb
mov
or
movsb
aaa
sbb
add
stos
and
cmp
je
adc
andb
scas
xor
hlt
std
sti
or
test
cmpsl
scas
fsts
ljmp
mov
icebp
sub
insb
sub
inc
lcall
scas
sub
flds
cld
cmp
sbb
imul
sub
jbe
mov
lcall
das
addl
pop
cmc
xchg
cmp
cmp
pop
jle
sub
addr16
inc
popf
pusha
mov
popf
sub
adc
pop
or
popf
adc
test
ffree
fists
jne
pop
push
js
mov
inc
mov
mov
jne
cli
stc
imul
neg
mov
cmp
sbb
bound
jecxz
push
es
nop
sub
cmp
pusha
orl
pop
or
jo
aas
inc
xor
jecxz
jne
cmp
sbb
mov
jnp
inc
hlt
dec
mov
pop
hlt
int
cmp
inc
imul
scas
sbbb
pusha
movsl
xor
ret
stos
out
fisttps
lret
gs
popf
jbe
outsl
pop
rorb
dec
xorb
cs
lcall
mov
push
mov
push
pop
mov
popa
lret
bound
xor
cmp
push
push
mov
mov
dec
fisubl
xchg
xchg
pop
mov
test
jmp
xor
pop
jle
push
lahf
mov
sub
pop
movsb
js
loopne
vmread
insl
mul
sub
decl
mov
in
and
xor
pop
sub
pop
dec
adc
and
lret
mov
aam
mov
xlat
pop
sahf
sub
mov
sti
sub
dec
adc
hlt
je
and
loop
repnz
data16
orb
sub
insb
insb
adc
sbb
ljmp
jmp
mov
negl
pushl
dec
push
pusha
out
imul
scas
shlb
pop
into
xor
pop
jl
xlat
js
das
in
lea
mov
mov
jp
rclb
mov
lret
xchg
sbb
push
cmp
nop
das
mov
mov
idivl
outsl
xchg
inc
cmp
std
jp
mov
add
movsl
dec
insb
mov
popl
xlat
sbb
xchg
push
xchg
int3
inc
sub
aas
mov
adc
dec
adcl
repz
and
andl
or
int3
push
and
or
fsubs
es
movb
pusha
xor
lret
fistps
stos
pop
negl
and
adc
pop
popa
dec
movsl
pop
cltd
adc
cltd
gs
daa
xchg
ss
mov
mov
push
or
xor
mov
ficompl
or
xor
fs
xor
cmp
ss
push
in
gs
xlat
jp
shll
mov
jno
popf
or
mov
cmp
mov
das
stos
mov
adc
into
lock
aaa
mov
xchg
int3
xor
shll
push
daa
or
cmp
inc
mov
mov
aas
call
int3
adc
loopne
mov
lcall
jb
push
sbb
fcomi
xchg
dec
and
pop
inc
sbbb
bound
js
sub
add
int3
mov
mov
xor
dec
jns
adc
or
jp
mov
dec
fadd
stos
ret
dec
mov
scas
push
push
and
xor
push
pushf
xchg
stos
jb
jns
arpl
lea
push
arpl
cmc
ljmp
sbb
sbb
shll
daa
mov
inc
les
shll
test
sbb
pop
lea
add
enter
test
jecxz
jmp
sbb
fmulp
lcall
sub
lock
je
mov
lea
mov
jecxz
lds
or
dec
out
pop
repz
jnp
dec
lea
fs
mov
pop
pop
add
jns
mov
in
adc
push
lahf
or
lret
mov
dec
push
dec
pop
mov
cmp
sbb
pop
and
aam
or
push
jecxz
jae
lods
aad
mov
push
out
hlt
insl
jno
jno
out
fwait
daa
pop
subb
sbb
insl
mov
pop
jmp
sub
popaw
add
std
fcoms
or
mov
int3
add
xor
jnp
sarb
sbb
mov
xor
inc
out
clc
ss
psrld
aad
mov
addl
rorb
or
sbb
cmp
xchg
imul
out
lock
mov
imul
xchg
pop
push
inc
pop
test
or
lcall
sub
clc
jbe
fidivl
adc
mov
out
push
std
push
stos
bound
ds
pushf
fcmovne
mov
sti
sti
pushf
fwait
orl
jge
fisttpl
xor
hlt
fldl2e
sbb
jl
mov
loopne
jle
lods
lea
ret
movl
gs
jg
icebp
and
mov
js
and
inc
pushw
aam
and
jge
pushf
mov
add
in
mov
dec
or
and
stos
dec
cmp
jle
cmc
and
cmp
mov
dec
subb
cmp
jo
lods
in
add
insl
dec
xchg
xor
insb
xchg
out
jmp
lahf
and
xchg
arpl
push
mov
sub
pusha
lea
push
int
lcall
mov
and
xor
aas
dec
inc
pop
adc
jno
cld
dec
sbb
dec
cs
and
add
cmpsl
insb
inc
sbb
fistpll
pop
iret
mov
dec
hlt
inc
jnp
in
lahf
ret
cmpsb
add
jo
mov
dec
cmc
shl
mov
cld
outsl
mov
stos
mov
sub
sahf
outsl
sub
push
push
jmp
fadds
pop
mov
jnp
push
push
push
pop
out
shrl
sarl
cmp
and
scas
sbb
mov
adcb
pop
push
pop
les
jno
sub
xor
adc
fwait
xchg
ret
mov
xchg
andb
insl
int3
adc
pop
xchg
mov
jmp
sarb
mov
daa
mov
fnsave
pusha
xchg
fwait
aad
lea
sbb
mov
ds
jns
sub
loope
stos
jb
inc
fistpll
cmp
sbb
int
nop
fisttps
sbb
pop
shlb
in
out
jl
jp
nop
jne
das
jae
pop
push
sti
mov
sub
push
fmuls
sub
out
jge
popa
or
movsb
scas
xor
adcb
xchg
ds
xlat
cmpsl
fsubrs
mov
adc
int
lds
sub
push
jle
mov
cld
dec
shlb
adc
fmuls
mov
xchg
add
addr16
cwtl
xor
push
jno
and
inc
mov
jl
pop
repz
jb
shlb
ss
mov
aaa
xor
cmpsl
inc
or
mov
add
push
jbe
mov
jno
or
adcb
insb
xchg
adc
mov
xchg
mov
cvttps2pi
and
js
fs
inc
cmp
push
js
or
pop
lock
sub
subl
jae
mov
or
mov
mov
push
fldt
or
adc
nop
jg
or
mov
rcrl
jno
push
push
out
ss
pop
data16
sub
dec
stos
mov
sti
or
popf
repz
sar
das
insl
cli
xlat
mov
je
aas
mov
scas
sarb
gs
and
pop
loop
enter
lcall
mov
lods
aad
mov
decl
popa
loopne
jb
add
cmc
pushf
outsw
sub
mov
pop
repnz
mov
stos
jnp
add
cmp
lods
test
in
xchg
sbb
or
paddw
lret
fwait
test
xor
stos
das
adc
test
adc
mov
xchg
dec
mov
jnp
daa
mov
sbb
cwtl
or
outsb
ret
jge
push
ficoms
popf
lods
lret
mov
cmpsb
xor
mov
pop
lahf
out
mov
adc
push
jns
push
pusha
xchg
rorl
or
sub
push
dec
je
outsb
loopne
orl
inc
lds
stos
sub
push
divl
or
pop
mov
repz
or
loope
stos
inc
pushf
arpl
or
cmp
sbb
push
int3
pop
subb
in
sbb
rolb
ss
ja
or
cmp
sbb
test
fucomi
push
lock
test
lahf
and
clc
push
sbb
xchg
jo
xor
push
gs
adc
pop
jae
inc
rcll
lock
push
js
in
or
js
inc
dec
pop
mov
mov
sub
xchg
dec
push
icebp
bound
or
xor
mov
xchg
test
ficoms
mov
mov
or
xor
gs
xor
idiv
xchg
push
mov
imul
sbb
pop
scas
inc
aaa
das
clc
push
rorb
enter
and
mov
mov
sub
outsl
mov
ret
jge
lret
fs
jl
daa
sub
adc
mov
mov
js
movsl
adc
mov
mull
cs
int3
cmpsl
out
scas
fidivs
popa
add
cmpsl
jl
add
out
pushf
pop
aas
push
xchg
pop
cmp
lea
jns
add
fdivrs
pop
imul
into
jne
pop
popf
nop
mov
shl
cmpsb
push
hlt
insb
mov
xchg
and
xchg
mov
in
cmpsl
in
ja
aam
je
pop
mov
mov
jne
sub
out
xchg
jle
or
mov
and
mov
outsb
mov
aaa
lret
mov
jbe
mov
jl
push
mov
pop
sbbb
mov
repnz
adc
mov
test
mov
push
insl
adc
clc
cmp
mov
inc
data16
in
xor
sbbl
mov
mov
orb
sbb
and
add
or
imul
mov
push
inc
aaa
sbb
ret
mov
fs
call
mov
jo
cmp
test
fwait
jle
cmp
enter
sahf
adc
fstl
lret
fimull
dec
jl
xchg
pop
cmp
sti
lret
xchg
lods
dec
enter
mov
or
push
lret
lea
mov
out
cmp
lock
mov
push
test
lret
test
lods
into
cltd
push
jnp
lret
jl
jbe
das
ret
call
or
cmp
enter
cmp
data16
adc
repz
andl
pop
aam
es
mov
dec
pop
cmp
enter
enter
pop
push
iret
ljmp
sqrtps
push
jl
popf
xchg
int3
loop
cmp
xchg
jle
ljmp
cmp
pop
push
xor
jae
pop
xor
in
lea
mov
lock
inc
mov
dec
mov
sahf
cld
dec
pop
mov
lret
and
cmp
mov
adc
out
lret
cmpsl
hlt
or
inc
adc
adc
popf
jg
and
aas
sub
or
sub
mov
cmpxchg
sub
pop
and
rcrl
pop
cmc
cmp
xchg
sbb
add
int3
cs
xchg
fsubr
cmp
jnp
sar
lock
dec
push
daa
scas
mov
stos
xchg
imul
pop
push
or
lret
mov
popf
push
and
xor
icebp
mov
dec
clc
sbb
cmp
fiaddl
jnp
lret
push
cwtl
leave
mov
stc
push
xchg
out
cmp
shll
mov
mov
and
xor
jnp
and
sarl
movsb
leave
enter
jne
out
xchg
sbb
add
jb
fistpll
ljmp
jns
mov
loope
ljmp
int3
jl
test
mov
shrl
fiadds
mov
out
popa
push
inc
daa
pushf
mov
lea
js
jo
pop
shrb
inc
mov
out
clc
inc
cs
mov
pop
fistps
stos
push
inc
cmpsl
shlb
repz
xor
pushf
fld1
in
and
out
xrelease
jecxz
cmpsb
pushf
and
sbb
inc
mov
les
jp
mov
mov
jle
or
stc
insb
stos
and
fldcw
push
adc
mov
jo
loope
push
jne
xor
mov
aam
outsl
not
scas
mov
fwait
ljmp
mov
add
lret
or
dec
cmp
xchg
sbb
sub
int
divl
mov
movsl
ja
movsb
addb
push
push
adc
das
pop
out
cltd
push
xlat
pop
aas
jp
insb
inc
jb
adc
or
mov
movl
push
loope,pn
dec
push
test
data16
jmp
sbb
clc
push
les
stos
inc
adc
repz
xor
adc
ret
push
xchg
fwait
arpl
shll
push
mov
mov
out
or
fnsave
jmp
jp
adc
push
push
pop
cltd
rolb
xor
inc
popa
dec
test
pop
aam
pop
and
dec
pop
dec
mov
add
dec
push
testl
sub
xchg
jge
imul
lods
mov
or
and
jle
jl
lock
or
jne
mov
lds
fwait
hlt
stos
add
outsl
out
scas
fdivrs
shl
xchg
call
dec
mov
cmc
lret
es
mov
push
or
fstps
ja
es
lahf
jp
fwait
pop
dec
sub
les
data16
mov
out
sbb
ss
xor
ja
and
mov
mov
jecxz,pn
out
xchg
inc
dec
popa
pop
or
jb
mov
je
mov
mov
mov
repnz
mov
pop
pop
data16
mov
fwait
inc
push
push
cmpsl
ret
outsl
sub
push
int
sbbl
ret
push
lods
add
int3
xchg
sub
lods
into
jb
dec
dec
xor
sub
rcr
pop
add
into
dec
ljmp
jecxz
sar
mov
pop
out
js
mov
ljmp
sub
and
lret
out
insb
dec
mov
mov
inc
out
out
xchg
sub
inc
jae
negl
sti
mov
lahf
jnp
inc
inc
sub
outsb
test
pop
xchg
cmp
fstps
push
movsl
mov
xor
adc
in
shlb
mov
outsl
dec
imul
cmp
stos
pop
pop
int3
mov
lcall
mov
clc
inc
lcall
lretw
ret
mov
jbe
pop
mov
or
sub
mov
cmpsl
cltd
cltd
fildl
jb
xor
cmc
or
lea
icebp
inc
push
loopne
ja
cmp
jne
leave
xor
adc
cld
leave
cld
cmp
push
lret
aad
clc
loop
pusha
lcall
dec
aad
or
into
cmp
mov
jbe
push
jnp
xchg
ror
ss
sarb
sub
dec
jns
and
mov
retw
xchg
out
and
dec
cmpsl
sub
in
dec
dec
sub
getsec
adc
aad
test
pop
xor
add
add
add
mov
dec
mov
aad
fists
cld
xchg
movsb
mov
aaa
jg
and
out
push
xchg
test
xchg
or
aad
adc
test
dec
shrl
jmp
mov
mov
mov
adc
fldl
aas
cmp
cmp
loope
cmp
pop
lods
int3
test
mov
xlat
mov
push
popf
xchg
and
mov
lods
cmpsb
pop
xorb
fucomp
sub
pop
jbe
adc
xchg
jae
cmp
cmp
mov
subl
nop
lahf
mov
ror
loope,pt
add
push
adc
jbe
pop
inc
xor
jnp
cmp
mov
jle
xor
and
or
and
or
sar
cltd
fstpl
or
cmp
add
xor
shr
add
adc
sbb
nop
icebp
xor
jle
rcr
ret
lods
mov
frstor
outsb
pop
xor
mov
scas
shrl
jl
or
pop
jp
into
out
xor
push
loope
stos
dec
cmpsb
shll
ja
ja
into
outsb
dec
pop
xor
loop
mov
arpl
loop
es
loope
mov
pushf
mov
jns
push
inc
sub
in
inc
shll
shrd
int3
fs
out
cmp
mov
arpl
arpl
xor
fidivrs
or
xchg
shrb
arpl
pop
sti
into
stos
pop
or
cmp
es
mov
lods
dec
and
fbld
push
sbb
push
insl
add
sbb
ds
xor
dec
test
cltd
push
inc
dec
add
aaa
push
push
mov
mov
pop
jl
in
push
pop
mov
js
lods
jnp
adc
cli
mov
movsl
and
cmpsb
push
xchg
mov
cmp
imul
addb
popa
ss
pop
mov
scas
jmp
and
int3
mov
cltd
or
and
mov
xor
mov
push
mov
sub
sub
pushf
int
adc
sub
sbb
mov
pop
dec
fwait
jb
clc
pop
lock
repz
add
rcrl
push
sbb
ret
roll
pop
sub
ret
xchg
xor
popa
out
push
jg
cld
mov
cli
xorb
int3
add
bound
adc
je
hlt
data16
mov
aam
hlt
push
divl
lea
fs
repz
imul
orl
mov
add
mov
cmp
dec
daa
addl
pop
inc
es
pushf
out
mov
imul
pop
test
test
sahf
xchg
out
sbb
jmp
xlat
adc
bound
push
xor
mov
fldenv
push
ds
lds
mov
or
push
sbb
loopne
ror
mov
mov
adc
xor
mov
jae
xchg
mov
jmp
jecxz
adc
out
cmpsl
cmp
popf
xor
iret
cltd
dec
push
loop
sub
pop
mov
inc
xchg
xchg
push
cld
ror
out
or
jae
stc
or
cs
cmp
push
jo
out
shll
jmp
inc
and
sub
sub
scas
cltd
sub
lahf
popa
sbb
mov
add
jne
filds
bound
xchg
cli
xchg
fiadds
testl
in
xchg
popl
xchg
pop
test
divb
aad
in
negb
mov
inc
ret
cmp
inc
pushl
jmp
movsl
pusha
insb
mov
ss
roll
sub
mov
and
dec
inc
stc
pop
outsl
xor
mov
ror
mov
loopne
jmp
xor
and
jbe
pop
mov
fstpt
xor
mov
rcrl
mov
mov
mov
xchg
out
leave
adc
in
push
add
sub
mov
push
mov
mov
fsubp
pop
cwtl
push
icebp
cmpsb
ud0
outsl
push
jmp
jl
jne
or
push
cld
xor
clc
repz
jae
in
jno
mov
cli
fstl
outsl
mov
and
lods
and
repnz
testl
out
test
testb
jle
pushf
iret
movsb
pop
and
in
dec
and
popa
rcrl
push
mov
stc
lahf
ljmp
loope
inc
adc
jbe
sub
loope
stc
jp
pop
jp
xchg
lsl
imul
jmp
mov
add
pop
test
xchg
addl
cmc
ss
lret
faddl
lock
icebp
not
inc
fs
mov
add
mov
push
daa
xchg
hlt
leave
pop
pop
cmp
mov
adc
loop
lock
aaa
xor
inc
sti
mov
or
dec
mov
sub
add
push
mov
mov
not
stos
pop
out
sbb
pop
out
repnz
lock
push
int
sub
movb
dec
stc
push
xchg
add
jle
mov
adc
mov
leave
in
xchg
test
scas
adc
mov
adc
std
add
adc
push
scas
xchg
stos
gs
imul
inc
ret
sub
pop
jbe
mov
std
inc
ret
sbb
cmp
repz
jne
lea
jno
jb
sbb
push
imulb
icebp
inc
cld
dec
stc
or
mov
cwtl
cs
xchg
cmp
ljmp
sbb
add
xchg
xchg
jo
push
test
leave
push
in
fldl
pop
das
dec
je
mov
jns
inc
inc
mov
sti
lods
or
xor
xchg
or
outsl
insl
lahf
jle
inc
xchg
addr16
stos
and
inc
bound
cs
or
test
push
cwtl
sub
sub
mov
pop
cltd
sub
in
out
cmp
mov
mov
push
dec
cmpsl
mov
add
int
jo
frstor
or
iret
cli
test
add
inc
pop
fdivl
adc
add
mov
insb
xor
pop
testl
cmpsl
test
or
mov
out
xor
cmp
push
jno
pop
jmp
fimuls
into
loope
iret
mov
cmp
pop
imul
xchg
nop
lods
jmp
lahf
scas
or
jmp
movsb
sbb
add
jmp
out
push
xchg
pop
fwait
mov
rol
cmp
sub
nop
out
add
jnp
icebp
pop
sbbb
arpl
movsl
mov
hlt
jle
cmc
or
out
data16
jp
outsl
inc
in
mov
ret
cld
xchg
movsl
sbb
mov
inc
sbb
mov
in
imul
add
cmpsl
fnstenv
ja
std
jb
sbb
mov
inc
xorl
lret
jp
push
mov
and
mov
std
adc
pop
sub
pop
pop
mov
dec
dec
in
or
pop
and
insb
aas
sti
daa
out
ss
mov
lcall
cmc
xchg
sahf
xor
mov
jns
cwtl
pop
cmpsl
or
pop
push
sbb
lods
cld
shll
cmp
push
mov
divb
rol
sbb
sti
jns
pushf
and
pop
addl
shl
add
pushf
pop
dec
popf
add
test
xchg
icebp
mov
mov
inc
push
push
xor
xor
cmpsb
into
push
sahf
addr16
smsw
cmp
push
xchg
cmp
aam
xor
in
pop
cmp
sub
and
in
cmpsb
lock
cmc
jae
daa
mov
xchg
push
stos
mov
jecxz
rcl
xchg
push
pop
pop
cld
push
repz
mov
insb
faddl
aaa
pop
mov
jae
aas
inc
add
mov
mov
or
cmpsb
push
fstp
ljmp
mov
pusha
orl
mov
inc
out
mov
and
loope
xor
and
jecxz
sahf
add
mov
js
mov
test
xchg
add
xlat
dec
fnstcw
jmp
fidivrl
stos
adc
xchg
mov
mov
out
fdivs
jle
bound
scas
jge
int3
push
popa
in
fwait
vorps
std
ljmp
sbb
push
bound
cld
jb
cmpsl
add
dec
insb
fsubl
out
mov
pusha
test
cmpsl
sub
mov
sub
int
flds
inc
jp
pop
movsl
in
test
inc
aad
push
xchg
add
xchg
and
jp
je
loopne
movsb
pop
jno
cltd
mulps
mov
jg
sbb
adc
pusha
addb
push
add
add
jo
xchg
stos
jl
js
iret
pop
flds
loope
fmul
jbe
jns
mov
cmpsl
pop
rcl
pop
sbb
out
or
repz
leave
sbb
mov
jbe
imul
cld
pop
scas
pop
and
int3
addr16
xor
testl
cs
outsb
cmp
sarb
xchg
inc
imul
cwtl
sbb
stc
lods
mov
into
ss
and
jl
add
scas
daa
mov
add
push
jne
cmp
pop
outsb
push
sub
dec
mov
and
mov
adc
push
rcrl
inc
mov
dec
pop
imul
shr
loop
jg
dec
inc
sbb
mov
push
int
fidivrs
enter
sar
ljmp
mov
add
inc
pop
movsl
pop
jnp
repnz
repz
and
xchg
stc
add
jle
cwtl
jp
dec
test
lahf
inc
lods
cltd
cmovb
pushf
loop
sbb
jmp
lock
xchg
pushf
sub
je
push
mov
andl
jne
xchg
cmc
mov
xchg
pop
jnp
mov
push
iret
mov
push
test
stos
lds
sbb
adc
aas
imull
negl
pop
icebp
mov
mov
pop
fwait
lods
repz
jne
ds
mov
inc
test
xchg
aaa
push
pop
pop
movsb
fnstsw
add
lahf
pusha
in
out
xor
adc
add
dec
push
mov
fcoms
shlb
aas
jle
sbb
mov
sub
xor
nop
sub
scas
adc
test
xchg
mov
pop
hlt
and
call
jbe
pop
daa
lds
mov
jp
clc
xor
or
test
push
xchg
test
mov
jnp
xor
pmulhuw
push
aad
adc
cs
or
cwtl
jae
add
andps
mov
push
in
div
daa
adc
inc
jge
sarb
push
mov
sbb
sarl
lahf
and
dec
xchg
xchg
jb
jnp
mov
jge
lret
inc
test
jae
iret
xchg
mov
push
icebp
or
js
mov
dec
push
xchg
jecxz
pop
stos
xchg
jns
fsubrs
dec
nop
xchg
lods
into
es
pop
jg
cmpb
stos
loope
sahf
movsb
andl
movsb
push
jl
mov
popl
js
js
push
lds
cmpsl
push
sahf
sub
mov
pop
and
jg
push
mov
inc
xor
and
pop
add
fildll
xchg
jg
leave
xor
ret
push
xor
xchg
mov
in
lds
push
jae
cli
cmc
mov
lods
jge
fadds
sbb
and
sub
and
ljmp
dec
pop
out
scas
in
rcrb
enter
inc
je
sahf
and
stos
pusha
cmc
xchg
sub
stos
or
or
test
cmp
mov
cmp
jle
pushf
stos
das
sbb
adc
fnstenv
js
lret
cmp
lahf
int
sub
dec
lods
movsb
mov
jge
sbb
in
mov
inc
mov
pusha
cld
pop
mov
and
adc
out
loopne
add
es
dec
pushf
jne
popa
movsl
xorps
flds
mov
fsubrl
idivl
mov
popf
ret
mov
int3
mov
in
aad
out
and
fidivrl
mov
lcall
sub
jne
jl
xchg
sub
mov
add
jne
jg
jnp
lret
decb
sub
xor
mov
cmpsl
xor
cwtl
stos
dec
iret
and
aad
xlat
cmpsl
jo
rolb
push
ds
mov
movsl
jae
mov
gs
jns
hlt
lea
pop
pop
sbb
stos
pop
jl
cmpsl
mov
cli
cmpsl
cmc
movsb
pop
mov
cmp
pusha
xchg
lods
jecxz
push
mov
sbb
and
std
mov
cmp
idivl
dec
xor
int
mov
mov
repz
pushf
push
dec
mov
sbb
push
jbe
inc
cmc
xor
fidivrs
mov
mov
xor
rcrb
mov
mov
sbbl
xchg
jmp
or
out
mov
lds
mov
cmp
pop
pop
shrl
add
test
push
cwtl
sub
mov
mov
sbb
adc
loop
fs
xor
stos
scas
adc
sbb
fistl
sti
clc
aas
mov
xchg
pop
icebp
call
or
fidivs
or
mov
int
adc
scas
xor
cwtl
mov
mov
jl
xchg
in
fbstp
out
sahf
adc
mov
neg
bound
and
dec
xor
sub
insb
mov
out
mov
insb
mov
test
xchg
mov
mov
gs
jp
icebp
hlt
sahf
inc
pop
dec
jne
sbb
cmpb
xchg
dec
push
jmp
imul
mov
xchg
fst
or
in
test
sbb
sti
aas
adc
jecxz
jl
stc
cltd
test
insl
mov
mov
push
fwait
mov
xor
out
adc
mov
lcall
fs
test
divb
shlb
mov
js
cmp
or
mov
lods
jno
mov
test
leave
jae
icebp
mov
pop
xchg
aas
mov
push
mov
int3
testb
jle
dec
jae
push
test
lds
inc
inc
loop
int3
ss
in
pop
xchg
mov
cmpsl
pop
mov
sbb
fs
push
imul
test
outsl
rolb
pop
pop
mov
cmp
lcall
lods
mov
add
xchg
push
stos
insl
jecxz
sarb
pop
pop
pop
add
lar
in
notb
into
test
in
sbb
nopl
data16
int
add
cmpb
pop
mov
mov
inc
xchg
mov
push
sub
ficoms
fyl2x
ret
mov
stc
and
xchg
push
repz
les
mov
add
fidivs
add
and
mov
jge
jle
sbb
jl
arpl
icebp
cmp
ret
inc
int
inc
test
push
fnstcw
daa
jbe
xor
sti
cmp
enter
inc
push
push
xor
lcall
lcall
pop
scas
mov
imul
push
shl
add
enter
push
jno
add
push
daa
lds
xchg
sub
mov
into
sbb
mov
in
add
fyl2xp1
inc
inc
and
mov
lret
add
test
fisubs
mov
and
or
xlat
ljmp
ret
pop
sub
lea
loope
test
mov
je
sub
adc
jne
mov
insb
xchg
and
jbe
cmc
andb
std
mov
sub
aad
rclb
dec
stos
xor
orl
leave
lahf
cmpsb
pop
nop
xchg
les
xor
cmp
mov
mov
sub
leave
lods
push
fstpt
inc
and
xor
je
push
mov
addl
orw
push
sub
lahf
mov
push
aaa
pop
jle
lcall
sbb
neg
into
push
adc
in
jg
xchg
iret
movsl
mov
subb
iret
fdivrs
or
arpl
cli
xchg
mov
iret
sub
aam
lret
rcr
pushf
sub
rorl
lea
push
mov
sub
jno
or
rcrl
shrl
cmpb
jmp
ret
stos
dec
dec
addr16
xchg
and
out
pop
daa
in
popf
movsl
mov
insb
enter
jno
dec
sub
push
out
nop
and
test
xor
out
xchg
sbb
push
cltd
jnp
jne
aam
es
in
imul
adc
mov
gs
fwait
int3
cwtl
lcall
sarb
mov
lret
or
iret
stos
mov
jns
jp
fdivrl
lret
sub
jae
pop
pop
xchg
mov
pop
xchg
dec
and
inc
movsb
sub
iret
sub
adc
push
inc
sahf
mov
insl
pop
or
imul
daa
and
mov
jno
outsb
movl
cltd
int3
scas
pop
out
cmp
cltd
cld
mov
adc
outsb
jle
dec
movsb
hlt
pop
adc
dec
and
test
fdivrp
push
ss
sub
pop
ss
ja
test
xchg
xor
repnz
mov
fs
jecxz
adc
push
fcmovnb
scas
test
lahf
add
lock
jo
pushf
into
push
push
adc
ja
iret
cmp
mov
pop
mov
or
adc
xor
xor
and
mov
xchg
xorl
pop
xor
jb
cmpsb
mov
pop
loope
jnp
push
bound
or
lods
mov
mov
adc
mov
mov
push
enter
jae
mov
xchg
jle
jne
std
jnp
inc
mov
xor
xchg
shlb
dec
loopne
icebp
sub
and
or
jle
popf
lds
add
imul
jno
add
mov
into
loopne
cmpsl
into
movsb
add
xor
mov
pop
pop
ljmp
int
orl
xlat
or
mov
test
cli
out
js
and
test
xchg
push
jg
fisubl
das
cmc
xchg
jl
insl
dec
pop
fucomip
mov
mov
stos
ror
mov
je
adc
inc
mov
leave
ret
xchg
aam
or
daa
ja
filds
fnsetpm(287
lock
and
sub
inc
push
fwait
push
into
out
push
fcmovu
dec
mov
dec
ss
daa
notl
push
fnstenv
mov
sti
les
cmp
cmpsb
xchg
dec
or
sub
pop
xor
iret
repnz
push
jle
mull
cmpsl
or
ljmp
push
ss
mov
call
stos
pop
nop
imul
rcr
or
sbb
orb
call
lret
jb
lock
popf
aas
add
popa
sub
mov
fcoms
test
or
stc
mov
lock
popa
dec
and
int
adc
stos
das
dec
fisubrs
stc
test
sub
mov
dec
fisubrs
movsb
in
fwait
cmpsb
hlt
adc
push
movsb
dec
mov
mov
xchg
fmulp
filds
stc
movsb
and
fs
or
xor
int3
mov
push
or
dec
mov
mov
sub
adc
es
jmp
lods
lea
lahf
dec
ss
push
sbb
in
sbb
jnp
push
dec
popa
inc
xchg
dec
insl
test
xchg
sar
xor
jae
movsb
out
xchg
cmpsb
or
outsl
outsl
dec
pop
int3
mov
inc
mov
sbb
call
imul
push
xchg
cmp
dec
fimull
pop
sbb
dec
shlb
inc
lods
les
jle
ja
rclb
stc
sbb
pusha
mov
mov
sbb
cmp
xchg
mov
lods
ficomps
movl
sbb
xchg
sti
popa
jb
shlb
gs
mov
aam
or
adc
mov
shll
sbbb
movsl
pop
fsubl
je
jecxz
hlt
xor
ds
pop
or
mov
orb
fldcw
out
cld
popf
push
jb
cmpsl
inc
jp
xchg
xchg
clc
outsb
xor
pushf
icebp
jo
xchg
inc
int3
fbstp
mov
pop
cltd
dec
or
fs
lods
scas
dec
sahf
and
jmp
mov
push
inc
jo
inc
bsr
xchg
push
mov
pop
mov
pop
jns
push
xor
aad
test
dec
push
ds
cmpsb
fcoml
adc
sbb
fldl
adc
clc
jno
ja
add
adc
sbb
lea
mov
xchg
adc
sub
xsaveopt
push
pop
mov
stos
and
pushf
outsl
out
sbb
xchg
jmp
xchg
cld
arpl
mov
and
fs
mov
dec
sbb
cmp
push
jns
sarb
pushf
pop
cmp
pop
lods
and
add
popa
dec
popf
mov
xor
or
pop
fadds
int
push
aas
movb
mov
sti
jbe
push
cmpsl
in
jg
mov
lcall
jb
and
hlt
sub
sub
fwait
mov
push
jno
loopne
xchg
lret
stos
pop
jb
sub
xchg
js
out
xchg
stos
jp
das
aaa
xor
push
pusha
or
jp
push
sub
xchg
or
or
mov
jnp
nop
dec
movsl
movsl
mov
inc
dec
fs
adc
popa
inc
popf
inc
dec
xor
jb
mov
sbb
xchg
pusha
jns
mov
loopne
daa
popa
jg
sub
flds
push
test
lods
jbe
iret
cmp
fsubs
imul
gs
sub
lods
pusha
mov
sub
or
sahf
in
xchg
or
mov
pushf
or
inc
test
cmp
mov
cmp
aas
sub
loope
mov
push
mov
es
mov
pop
push
mov
in
shll
leave
call
out
add
scas
push
mov
data16
mov
lea
xchg
pop
stos
movsl
repz
sub
cmp
push
mov
scas
cmpsl
jmp
test
fadds
sbb
mov
push
fcompl
fnsave
in
pop
stc
in
lock
cmp
push
pop
imul
push
call
push
pop
fsts
push
in
push
jnp
mov
outsl
mov
adc
mov
push
es
sarl
test
rolb
mov
and
mov
sbb
icebp
aam
lcall
pop
jns
repz
cltd
fsubrl
jge
fsubs
pop
and
int
repnz
stc
jbe
popl
inc
mov
aas
mov
xor
ret
jne
sbb
icebp
xchg
out
inc
sbb
ljmp
scas
dec
mov
rolb
and
repz
repz
or
mov
dec
loop
jl
shlb
fmuls
inc
ljmp
sub
js
cli
ss
cmp
dec
rcl
mov
push
jno
fsubrp
xchg
mov
jecxz
add
mov
enter
daa
std
sub
mov
mov
pop
push
sub
repnz
xchg
mov
je
shr
jo
jle
cs
add
dec
xor
rolb
mov
sub
mov
sub
out
add
loop
fs
cli
pop
sti
stos
std
mov
lret
xor
adc
loopne
int
and
cmp
jnp
jno
sbb
aam
cmp
lea
loopne
cmp
push
sub
loopne
ret
inc
and
sub
das
adc
adc
push
push
jl
inc
inc
jnp
cmpsb
mov
mov
in
loopne
lea
out
push
mov
pop
arpl
xchg
movsl
js
bnd
cli
out
andb
or
pop
out
and
pop
std
icebp
movsl
pop
nop
pushf
sub
xor
fisubrl
mov
cmp
lcall
call
test
push
cmpsb
sbb
inc
pop
xor
sub
sub
ror
or
push
shlb
mov
push
je
cmc
dec
xchg
add
cmpsb
fiadds
add
int3
and
inc
and
dec
dec
mov
add
cmp
stos
inc
cld
dec
push
mov
lea
mov
pop
mov
cltd
notl
pop
dec
or
aad
nop
mov
inc
lods
mov
jno
aas
jo
lods
or
jle
into
mov
pop
mov
loop
xor
xchg
jge
loop
and
add
subb
popf
mov
iret
xchg
fidivrl
shlb
data16
or
ret
outsl
fs
fsubrl
lret
fdivr
sbb
inc
movsl
loopne
inc
pop
test
cs
rolb
lret
iret
xor
dec
aad
les
in
aad
cmc
mov
pmaddwd
mov
adc
adc
jmp
lock
adc
adc
arpl
aas
or
icebp
out
movsb
cli
dec
mov
add
cwtl
xlat
or
cld
loop
out
or
out
in
outsb
push
mov
mov
inc
cld
ret
jns
insl
xlat
mov
jmp
inc
jnp
sub
es
adc
mov
mov
inc
idivl
pusha
mov
dec
std
movl
icebp
adc
sti
dec
lods
lds
push
mov
cltd
mov
push
dec
cltd
push
dec
cmpsb
pop
inc
frstor
or
push
fs
andl
lock
cmpsb
test
iret
repz
pop
loop
xchg
adcb
cmp
rolb
push
cs
mov
mov
enter
cwtl
push
sub
pop
adc
push
daa
mov
lock
movhps
clc
pop
ljmp
or
mov
cwtl
dec
ret
pop
enter
push
bswap
test
jge
inc
movb
cmp
hlt
aaa
sub
cmp
stos
movsb
mov
cwtl
xor
insb
push
push
push
xchg
xlat
jge
jl
dec
inc
mov
sbb
fidivs
lret
sub
push
mov
push
pop
push
aaa
mov
dec
les
adc
imul
fld
mov
mov
sbb
rcrl
je
add
jnp
jo
js
fcomps
add
js
fs
lahf
adc
call
dec
stos
mov
xlat
mov
mov
and
push
movsl
test
in
push
lcall
sub
insb
fsubrl
adc
bnd
cmpsl
dec
pop
pop
push
and
inc
nop
pop
icebp
cmp
or
xchg
fwait
pop
arpl
test
dec
jg
sub
sbb
dec
jmp
pop
inc
adc
xchg
aas
push
das
jg
pop
or
test
loope
dec
mov
int
jecxz
sbb
push
inc
sub
pusha
sub
lods
icebp
movsl
sbb
mov
aad
fs
in
jp
lds
insb
aad
xor
imul
push
sbbl
jmp
movsl
inc
mov
xlat
add
fstpt
ds
sub
pop
mov
push
ljmp
fadds
scas
push
xorb
out
dec
mov
dec
mov
or
jo
mov
push
inc
loopne
neg
outsl
dec
sbb
mov
add
push
mov
lret
stos
mov
xchg
rcrb
xchg
stos
xor
mov
pop
jge
and
push
sbb
testl
cmc
push
inc
mov
incb
jns
lods
xor
addr16
fwait
notb
in
in
add
cmp
xchg
or
pop
adc
outsb
dec
insb
inc
aaa
lods
icebp
fists
incl
aad
inc
jno
xor
int3
in
divl
test
lds
sub
cmp
xor
lahf
clc
jb
pusha
movsl
int
test
js
jbe
fcoms
in
fmull
mov
mov
adc
push
repnz
cld
and
cltd
sub
out
cltd
xlat
inc
sbb
insl
arpl
adc
or
cmp
mov
jno
dec
movsl
mov
roll
repz
dec
dec
mov
cmpsb
and
das
push
adc
das
stc
sbb
xchg
ret
dec
dec
out
fs
cwtl
test
js
mov
xchg
insl
icebp
mov
cmp
iret
lds
xchg
jecxz
nop
add
and
sub
ljmp
shr
jae
ja
push
xor
repz
in
inc
mov
shlb
aad
pop
jb
add
bound
xlat
aaa
lret
call
mov
ja
out
mov
incl
bound
jae
sti
mov
or
jbe
and
cmc
pop
pop
ficompl
fstpt
xchg
jmp
call
dec
shlb
clc
dec
lahf
adc
add
xchg
xor
push
jno
push
nop
pop
ret
cmp
mov
mov
adc
inc
jns
sub
sbb
and
push
test
push
gs
mov
sbb
push
cmp
into
test
jmp
xchg
mov
inc
ljmp
xchg
fadds
mov
ljmp
outsl
xor
sarb
jo
out
cld
test
fildll
aaa
and
lret
aad
das
xor
or
or
xchg
dec
sub
dec
mov
idivb
cld
sti
adc
push
inc
inc
or
xchg
popf
daa
adc
sub
push
jge
dec
sbb
loopne
or
inc
call
inc
jg
pop
mov
adc
inc
mov
xlat
rclb
out
pop
out
imulb
cltd
dec
mov
lahf
sub
jnp
in
lret
vmovsd
mov
dec
xchg
lcall
popf
and
ja
adc
push
lret
add
lods
test
jne
movsl
cwtl
adc
bound
dec
jecxz
cmc
daa
or
das
out
aad
jmp
out
xchg
sub
sbbl
jbe
sbb
adc
push
call
mov
mov
psubsw
sbb
loope
loop
nop
aaa
push
pop
stos
popf
dec
mov
jl
push
jae
bound
lock
xor
popa
add
es
adcb
test
pop
test
push
loop
mov
and
incl
outsl
adc
fsubrl
jb
adc
jbe
push
jge
push
mov
repz
jo
pop
cltd
push
jb
or
mov
popa
stos
push
cmpsb
mov
jecxz
icebp
dec
sarb
or
sub
aam
lret
scas
mov
repnz
testl
cld
stos
test
jmp
int3
mov
adc
lea
stc
jp
sarl
mov
cwtl
mov
out
adc
inc
stos
inc
stos
mov
insl
pop
dec
push
fstpt
fwait
adc
mov
mov
test
subb
mov
pop
pop
test
out
aad
and
jge
outsl
js
push
dec
push
pop
mov
ret
stos
subb
test
push
test
iret
out
and
stos
and
lahf
or
ret
out
lock
mov
fs
aam
cmp
push
mov
out
sbb
jo
dec
mov
roll
inc
cmp
adc
push
sbb
xlat
aas
mov
mov
xchg
test
sbb
mov
jmp
imul
lods
jecxz
mov
ljmp
leave
jno
xchg
xchg
movsl
rcrl
push
cmpsl
loop
les
outsl
add
cs
jns
inc
ret
sub
adc
cs
and
jae
out
mov
cmp
push
mov
aam
xor
std
sub
xchg
sbb
sbb
cmp
leave
jmp
shll
imul
pop
mov
or
jmp
xor
ficomps
fadds
test
out
add
in
cmp
pop
push
dec
mov
inc
mov
movsl
enter
call
and
mov
call
mov
sub
hlt
add
cltd
and
jo
xchg
in
outsb
jg
divl
fs
mov
test
push
test
add
adc
mov
insb
fdiv
mov
push
sahf
lret
sub
pop
jg
add
lock
and
mov
xor
imul
sub
jo
mov
iret
xor
adc
inc
add
pop
mov
cwtl
push
mov
or
dec
imul
push
cli
inc
cmpsl
xchg
out
and
and
mov
ror
btr
cmp
cmpsb
mov
ds
aad
nop
sbb
inc
stos
stos
xor
sbb
and
inc
idiv
divl
inc
movsl
dec
mov
sti
shll
pop
mov
sub
mov
sub
outsl
mov
data16
jge
cmpsb
out
hlt
pop
test
lret
fidivl
or
stos
leave
push
roll
push
clc
pusha
mov
mov
mov
test
call
repnz
add
ret
push
mov
push
scas
cmpsb
mov
xor
lods
rcrl
fldcw
ret
ret
dec
sub
jg
clc
es
enter
mov
xchg
leave
lret
adc
das
push
dec
jecxz
ret
hlt
ret
sub
in
fsubl
clc
jb
mov
sub
repnz
sahf
movsl
lds
push
dec
out
dec
int
inc
gs
jo
repnz
inc
pop
sub
cmp
xchg
jbe
sub
jbe
imul
scas
and
mov
xchg
sarb
and
fdivl
jo
cmp
subb
dec
inc
inc
xlat
sbb
jnp
std
or
shll
jno
sbb
sub
loop
add
imul
dec
xor
adc
cwtl
mov
push
mov
xorl
xchg
dec
mov
jns
ds
xchg
cmpsl
inc
aaa
mov
jnp
loop
nop
mov
stc
stc
lcall
dec
and
inc
sbb
lea
push
icebp
adc
fmul
imul
mov
cmpl
repnz
in
mov
fidivrl
jl
pop
cwtl
push
or
test
cld
jle
or
dec
dec
sbb
push
imul
mov
shll
cs
sti
sbb
jge
es
lcall
xor
jb
data16
sti
rolb
push
pop
cmp
sbb
pop
repnz
push
mov
add
jnp
jecxz
inc
pop
loope
lea
das
fwait
mov
or
cmp
push
mov
pop
pop
cmpsl
xchg
out
fadd
inc
xor
scas
add
decl
mov
jno
push
popa
arpl
mov
xor
pop
das
jb
roll
in
cmp
xchg
pop
fdivs
jp
mov
in
hlt
iret
push
xchg
adc
shlb
je
hlt
pushf
sub
scas
sub
sbb
repz
loope
push
mov
inc
xor
stc
repnz
pop
sub
push
cmc
sub
mov
fnstcw
test
pop
icebp
pop
sub
jbe
sub
pop
test
or
addr16
dec
add
ret
sbb
outsl
lods
insl
xchg
mov
push
inc
xor
pop
sub
adc
mov
pop
aad
popf
outsl
icebp
xor
dec
sbb
shlb
data16
gs
mov
out
ficoms
pushf
mov
push
sub
das
data16
mov
add
mov
fldenv
dec
dec
lock
jge
push
jg
adc
xor
push
mov
fld
pop
inc
aas
test
push
ret
int
cmp
test
dec
sbb
push
push
scas
and
mov
fisubs
cs
push
loope
pop
add
push
mov
inc
sub
dec
inc
sub
into
inc
and
mov
or
out
cmpb
mov
ds
ret
xor
xchg
loope
in
pop
mov
mov
das
mov
notl
pop
mov
iret
js
fwait
and
fucomip
stos
lcall
cmpsl
inc
push
or
fldt
stc
loope
xor
mov
in
push
vmaxsd
int
adcb
pop
push
inc
jmp
xorl
pop
push
insb
push
cltd
cmc
dec
sbb
add
jno
inc
add
ret
inc
pushf
sti
add
cli
push
bound
or
xor
mov
and
push
sbbb
shl
cmc
push
xchg
xor
dec
movlps
lods
movsl
mov
cmp
pop
mov
inc
cmp
nopl
shll
lret
jne
xchg
out
lea
sbb
jge
jl
insl
xor
xchg
or
mov
push
jne
insl
xchg
pop
cmpsb
sub
sub
mov
insl
mov
dec
adc
test
mov
fs
push
push
shll
dec
add
and
mov
ja
cmc
in
test
cld
sti
inc
sahf
std
mov
scas
jp
test
cmpsb
and
sbb
shr
clc
sbb
js,pn
ljmp
mov
pop
pop
add
mov
jns
pop
xchg
xor
insl
mov
push
fstpl
mov
add
das
mov
aad
pop
cmpsb
std
ret
jns
das
xchg
pop
stos
in
push
lret
data16
cmp
fs
stc
div
cli
aaa
jno
loop
and
sbb
and
out
or
jnp
sbb
ljmp
aam
mov
mov
testl
cmp
and
cmp
xor
pop
adc
sbb
adc
stc
or
fdivl
imul
jg
ret
mov
pop
lds
test
loopne
adc
inc
rorl
adc
out
fwait
sahf
dec
add
lock
mov
cmp
out
jno
rol
mov
sbb
inc
xor
ret
fcoml
dec
cli
and
push
loop
jno
lret
jnp
outsb
adc
shll
mov
xchg
repnz
push
or
mov
lods
xor
dec
outsl
jmp
lret
jp
sahf
test
mov
or
sub
movsl
pusha
push
sub
fucom
fcmovu
inc
aad
clc
dec
push
mov
das
add
call
aam
popf
leave
aaa
test
pop
or
rcll
push
or
pop
sbb
sbb
movl
aad
insl
rcrb
jbe
pusha
pop
push
jno
test
xor
or
xor
rcr
data16
lret
arpl
mov
jae
movsl
push
lds
data16
test
jb
mov
inc
and
fldlg2
nop
adc
mov
into
add
jg
adc
insb
cld
mov
cld
or
rcr
cltd
mov
pop
lods
mov
xchg
lret
mov
nop
repz
mov
sbb
pop
mov
mov
mov
fnstsw
or
lea
imul
dec
sub
xor
cli
adcl
mov
sbb
or
pop
or
xchg
scas
fdivr
in
pusha
xchg
add
push
addr16
mov
xchg
dec
les
pop
ja
loopne
mov
xor
inc
mov
ret
fisubl
sub
cmp
xor
cli
adc
cs
sbb
call
mov
cwtl
imul
lods
pop
sub
testb
fldl
notl
cmp
aam
sub
rolb
ret
push
movsl
mov
push
std
lret
icebp
jmp
stos
push
into
inc
sbb
lods
sub
and
push
sub
call
adc
out
test
jle
adc
movsl
lea
test
popa
add
xor
aas
repnz
dec
mov
lahf
jb
cld
jae
jo
cmp
fimuls
sub
pcmpeqb
mov
repnz
mov
rcrb
test
xchg
gs
test
scas
and
incl
pusha
xor
mov
in
cwtl
aas
pop
jecxz
dec
sbb
sub
std
outsb
dec
and
loopne
or
xor
add
adc
popf
jns
inc
cmp
fnstcw
cmc
mov
lret
popf
push
push
pop
and
lds
add
sahf
into
pop
add
inc
or
lods
lret
cmp
out
insl
cmc
jle
in
or
test
stos
sbb
mov
lcall
mov
sub
std
add
adc
jmp
and
xor
sub
or
mov
and
sbb
lahf
inc
adc
cmp
xlat
clc
lock
jl
mov
rolb
mov
das
xchg
sub
sub
mov
mov
das
and
pop
lret
aad
mov
push
and
dec
daa
fbld
cmc
fcoms
lods
xor
jl
cmp
outsl
scas
lock
adc
pop
sub
xchg
popl
dec
inc
repz
xor
jl
stc
movsl
rolb
jl
add
xor
add
aaa
in
or
negl
lcall
out
xchg
lret
push
jo
enter
int3
je
shrb
push
es
xor
inc
jnp
repz
aam
inc
and
jle
add
into
bound
inc
xlat
iret
and
test
stc
in
pop
test
jmp
xchg
ds
testb
movsb
test
popa
fcomip
mov
pop
jbe
test
mov
scas
aas
addr16
lcall
mov
fwait
or
mov
push
and
in
inc
inc
push
js
fwait
push
xchg
inc
jnp
jg
lods
sti
jnp
mov
mov
or
mov
push
addr16
mov
adc
inc
out
std
push
mov
gs
pusha
jno
adc
sahf
mov
aam
or
cltd
stos
push
inc
cmp
rol
iret
das
inc
out
fidivrl
dec
ret
or
sub
rcll
in
push
rorb
std
cwtl
add
adc
leave
inc
jns
or
pop
cmp
cmpsl
mov
fwait
xor
popa
loop
scas
stc
jg
lods
fwait
insl
xor
ss
pop
ficompl
push
enter
lock
xor
in
movaps
lods
ficomps
mov
fcmovne
jle
mov
stc
fldcw
dec
mov
enter
add
push
ret
scas
or
inc
jl
repnz
test
aaa
jae
mov
dec
and
lahf
sub
jge
into
cli
adc
pop
xchg
shl
out
mov
adc
rcrb
mov
inc
and
addr16
cmp
test
mov
xor
jg
cld
xor
aad
add
test
dec
jmp
push
imul
int
test
cmp
test
mov
or
jbe
add
xor
out
ss
fists
int
mov
mov
xchg
ret
pop
les
push
test
data16
aas
out
scas
pop
jno
or
mov
jne
outsl
dec
sbb
stos
outsl
xor
jle
not
xor
jge
push
pop
jg
sub
inc
cwtl
fisubl
cmp
fwait
push
add
and
xchg
pop
and
ret
dec
or
jo
mov
or
cltd
lahf
mov
jp
test
in
fnop
repnz
insb
iret
inc
mov
popa
pop
mov
call
testl
xor
sub
dec
dec
adc
xor
mov
xor
cltd
inc
adc
or
out
outsb
push
or
inc
rcrb
mov
mov
mov
call
lods
aaa
mov
mov
pop
bound
rcll
or
pop
mov
or
ret
sarl
imul
mov
insb
mov
sub
adc
xchg
fs
xchg
mov
inc
mov
pop
xchg
rclb
adc
sti
xchg
adc
xor
cmp
push
cmp
inc
out
ret
movsb
lret
movsb
fsub
add
mov
jne
sti
and
fidivs
les
pusha
mov
and
imul
mov
lcall
mov
xchg
dec
test
cmc
mov
sub
rcrl
in
mov
or
mov
xlat
jbe
loop
imul
shrb
mov
arpl
push
pop
int
mov
int3
jmp
push
cli
test
dec
testb
inc
dec
push
movb
xchg
jo
xchg
and
mov
adc
test
pusha
nop
insb
mov
inc
mov
cli
sub
cmp
dec
out
lret
mov
ljmp
imul
ds
push
outsl
clc
pop
enter
imul
mov
insl
pop
xchg
subl
lods
add
icebp
xor
mov
ret
sub
xchg
sahf
sbb
jmp
cmp
lods
jecxz
ljmp
jae
cmp
sub
push
dec
mov
ds
rorl
jns
div
leave
add
into
push
push
lea
cmc
push
dec
lock
dec
out
sub
data16
dec
and
cld
mov
pop
aaa
inc
movsb
in
scas
push
cmp
sbb
mov
xchg
sub
repnz
fidivs
fadds
dec
movsb
xchg
add
mov
push
ja
ja
pushw
imul
push
popa
push
fdivl
cmp
stos
in
dec
clc
repnz
mov
leave
and
pop
es
adc
fimull
ja
xchg
jecxz
out
in
repz
lahf
js
cmp
lahf
imul
adc
je
hlt
nop
cmpsl
jg
test
rcrl
xor
jge
shrl
or
add
shlb
mov
orb
cmc
fldt
outsb
aam
dec
pop
je
mov
shl
ret
pop
les
adc
jge
ret
inc
daa
movsb
fsubrl
leave
xchg
and
call
dec
movsl
push
or
fstpl
sbb
xor
lods
push
xor
test
inc
mov
int3
push
jge
aam
mov
mov
xchg
sbb
ret
jns
lret
lret
orb
sub
iret
jnp
loope
and
lock
adc
xor
clc
push
mov
insl
sub
inc
enter
dec
arpl
jg
jmp
jno
sbb
add
jae
mov
pop
sub
popa
jnp
fistpl
cs
cmpsb
test
cmp
and
daa
cmp
sbb
adc
leave
jns
push
lods
mov
xor
dec
cwtl
mov
dec
in
pop
movsl
sbb
je
adc
test
pop
jns
inc
shrb
mov
scas
add
dec
mov
dec
xchg
outsl
fucomp
outsb
add
xchg
mov
aaa
push
in
cmp
ss
mov
xchg
out
mov
cmp
push
fstl
mov
adc
daa
je
test
ficompl
sbb
dec
xor
sub
call
mov
dec
adc
and
cmp
push
or
pushf
fstpl
sub
fwait
adc
xchg
mov
std
mov
sub
inc
aam
sti
push
inc
mov
push
dec
push
adc
inc
ljmp
pop
jmp
jne
jmp
push
xor
movsl
aad
movsb
sub
std
pop
cmc
mulb
xchg
xchg
in
das
out
outsb
stos
pop
popf
dec
add
cs
stos
inc
push
sub
test
cmpsb
aas
sub
mov
lret
adc
pop
add
dec
cwtl
movsb
sti
in
sbb
js
sub
flds
call
dec
leave
xchg
dec
sti
stos
or
jno
sub
fidivrs
jbe
push
repnz
xchg
inc
and
sub
inc
jp
cwtl
sbbb
xchg
mov
adc
xchg
xlat
jg
fcmovnb
and
out
fldenv
sbb
arpl
inc
out
js
shlb
xor
mov
add
ja
push
iret
xchg
ror
sbbl
adc
out
test
sub
loop
cmp
notl
dec
iret
mov
sti
pop
mov
repz
push
lods
xchg
sub
scas
mov
xchg
dec
push
pop
std
mov
or
and
lret
addr16
sub
sbb
leave
pop
mov
andl
mov
pop
mov
push
roll
mov
lds
push
lahf
bswap
mov
pop
gs
jle
mov
in
inc
xchg
sbb
fdivp
xchg
outsb
test
cmp
pop
inc
es
mov
in
mov
sub
es
mov
or
adc
in
scas
scas
test
fiadds
push
or
mov
push
push
shll
cmpsl
and
aam
sti
cld
sti
cmpsb
rcl
inc
adcb
shll
repnz
dec
mov
dec
pop
or
push
les
int3
adc
jge
stos
call
insb
dec
jecxz
xor
out
or
xchg
cmp
cmp
loope
mov
popa
pop
enter
test
push
popl
imul
mov
adc
xor
js
sub
ffreep
xchg
fdivl
ljmp
frstor
pop
enter
dec
out
add
lret
push
mov
cmp
dec
addr16
dec
mov
mov
bound
je
bound
pop
sub
jmp
jle
rcll
lcall
loope
fmull
pop
jbe
push
scas
mov
add
movsl
cmpsl
rcrb
fistpll
imul
push
sti
mov
add
pop
sbb
enter
xor
add
hlt
or
shlb
jne
jl
cmp
fadds
in
push
xchg
hlt
inc
sbb
rcr
aam
fistps
rcll
xchg
inc
fwait
or
loope
fdivrl
xchg
inc
cmc
lret
leave
ljmp
shlb
jle
loopne
and
movsl
jb
push
jp
popf
scas
das
addr16
add
mov
cwtl
mov
lret
lds
xchg
dec
or
and
sub
stc
jmp
pop
outsb
mov
sbbl
loop
or
xlat
mov
xor
adc
mov
xchg
es
pop
or
jb
and
cmp
pop
mov
pop
cmpsl
jl
dec
clc
xor
je
scas
dec
mov
mov
inc
dec
dec
xchg
sbb
add
xor
sub
xchg
push
pop
pusha
mov
sarl
test
aaa
xor
iret
mov
xor
lret
in
bound
jp
in
mov
ret
mov
stc
mov
nop
xchg
sbbb
lods
repz
mov
stc
or
jp
clc
adc
adc
dec
ljmp
cmp
mov
pop
cli
popf
into
sub
cli
sub
rcrl
mov
push
xchg
cmp
jle
vmovd
sbbb
inc
mov
sbb
pop
mov
push
ljmp
test
mov
pop
pop
pop
and
in
popa
sbb
jg
inc
sbb
out
push
xor
jb
ja
mov
ljmp
das
sahf
jnp
add
ffree
push
addr16
push
mov
xor
xchg
push
jmp
push
or
sti
mov
lret
inc
xchg
or
push
xchg
test
vpsllq
es
scas
sbb
pop
icebp
pop
mov
gs
push
push
pop
sahf
inc
fcoml
gs
cmp
and
dec
das
and
jne
insl
bound
sub
loop
xor
cmp
out
lock
popa
or
mov
sbb
mov
lcall
inc
aaa
add
out
sub
add
loopne
test
lret
jae
mov
inc
or
jmp
imul
or
fcomp
adc
scas
pop
sbb
mov
pop
mov
mov
call
xchg
mov
mov
adc
popf
aas
jmp
lds
sbb
add
hlt
outsb
or
ror
in
mov
scas
and
or
sbb
out
cmp
mov
mov
jnp
scas
shl
ljmp
test
and
inc
jp
data16
add
jg
pop
lret
ja
ucomiss
loope
or
jle
fs
mov
adc
mov
test
bound
xor
scas
cmpsb
inc
in
push
jl
mov
cmp
lcall
xor
or
xlat
subl
ljmp
movzwl
xchg
aad
fcompl
icebp
iret
js
negb
sbb
push
dec
mov
pop
popa
pop
dec
cmp
cmp
push
std
out
inc
enter
and
sub
xchg
xor
cwtl
cmc
dec
push
loope
pop
pop
jnp
sahf
mov
mov
inc
inc
mov
mov
mov
and
jnp
pop
inc
adc
jbe
mov
sahf
cwtl
xchg
js
push
into
bound
imul
aam
xchg
cli
and
in
dec
fs
cmp
jo
test
bnd
xor
repnz
pusha
xchg
xor
mov
aas
or
cmpsl
fs
lds
imul
and
push
mov
fiadds
dec
pop
pop
dec
xor
popa
popa
mov
lds
outsl
mov
pop
sub
aam
add
jns
jo
iret
mov
or
jne
xchg
mov
sahf
mov
leave
nop
ljmp
cmpsl
sub
jbe
xor
ret
mov
sub
sub
adc
sbb
lcall
push
push
inc
into
outsl
aad
and
pusha
sbb
jnp
scas
inc
pop
jns
and
mov
call
out
dec
aad
mov
mov
or
push
imul
push
pusha
sbb
out
dec
jmp
stos
pop
cmpsb
mov
cmp
inc
test
int3
bnd
mov
stos
xchg
xorb
jnp
sub
sbb
adc
ljmp
arpl
pop
movsb
in
out
and
sub
stos
data16
test
push
aaa
test
jg
fisubrs
call
cmp
mov
rol
clc
or
mov
lods
or
xor
dec
loopne
pusha
notb
push
icebp
dec
out
pop
movsl
mov
repz
inc
jno
lds
mov
xchg
jbe
xchg
cltd
push
imul
dec
mov
addr16
add
mov
mov
stos
psraw
add
cli
insl
xlat
xor
sub
stos
pop
out
orl
int
sbb
aam
cli
dec
pop
add
mov
and
mov
jae
lret
pop
cmpsl
jl
cmc
ret
cmp
sbb
ds
mov
cmpsb
ljmp
add
cmp
dec
jp
adc
enter
lods
push
xorl
mov
jmp
pop
stos
das
notl
mov
lret
insl
addl
aam
push
mov
add
mov
not
mov
sub
shl
pop
sub
pop
ss
testl
adc
mov
stc
jg
add
xor
pop
add
mov
imul
fs
dec
adc
mov
mov
sbb
or
add
andb
je
ret
fisttps
mov
push
call
adc
cmpsb
jg
insb
orl
fimull
inc
lret
scas
fcompl
mov
push
shrb
mov
mov
jle
mov
inc
push
sbb
lods
out
cwtl
std
or
js
test
jg
add
in
lods
jno
mov
cli
lea
stos
lods
mov
nop
popa
test
add
out
adc
sbb
mov
add
stos
adc
push
ret
or
mov
pop
popf
cmpl
mov
shll
mov
or
sbb
shr
xor
cltd
clc
mov
dec
popf
fidivrs
lods
repnz
and
les
mov
aad
dec
adc
lea
out
dec
sub
push
cs
push
sub
adc
add
sbb
adc
std
inc
aas
orl
je
in
dec
push
jo
xchg
test
call
sub
mov
popa
mov
add
inc
popa
push
ljmp
inc
dec
add
xchg
rorl
and
arpl
stc
repnz
pusha
jge
aas
mov
push
cmpl
push
jne
loop
inc
fistpl
push
popf
sub
stc
outsl
or
dec
dec
mov
inc
idiv
insb
fsts
scas
mov
repnz
popf
mov
mov
adc
les
push
outsl
xor
mov
outsl
outsb
adc
xor
jno
add
ret
dec
jl
test
dec
call
dec
add
push
and
inc
add
jg
xor
xor
test
cltd
enter
leave
xor
ljmp
out
int3
mov
pushf
or
out
ds
movsl
lods
or
fs
or
sbb
inc
lock
outsb
ret
push
je
ret
xlat
sub
jmp
push
jge
imul
je
imul
add
xor
push
stc
shrb
mov
rep
adc
hlt
dec
fists
add
test
add
push
and
and
shlb
insb
leave
jmp
jno
imulb
push
and
xchg
daa
pop
fstpl
int
mov
cmp
aaa
iret
xor
cmpsb
sbb
and
cmp
mov
popf
test
bound
push
ret
sbb
xchg
lds
icebp
sbb
mov
dec
mov
xchg
cmp
cmp
adc
sbb
xor
loop
outsl
stos
cltd
dec
mov
xor
insb
cmpsl
cmp
sub
pop
les
in
xchg
or
es
and
mov
jae
jge
lcall
add
fmul
movsb
imul
sbb
fwait
mov
dec
lods
iret
mov
xor
and
or
or
fwait
cmc
in
negb
push
lahf
push
js
push
les
lods
insb
lret
dec
dec
mov
cmp
xchg
rolb
cmp
add
leave
and
cmp
and
adc
sub
cmc
push
mov
mul
icebp
xchg
inc
push
clc
xor
and
mov
dec
iret
jno
rep
cwtl
xor
leave
loopne
and
inc
add
fwait
icebp
imul
cmc
fdivrl
mov
jmp
rol
arpl
shl
cs
adc
push
mov
daa
adc
jmp
mov
fcoms
stos
fsubrp
int
gs
int
inc
inc
dec
push
les
xor
xchg
dec
cmpsb
dec
les
add
ja
mov
dec
int3
adc
leave
push
and
fidivl
xor
mov
mov
push
mov
add
push
xchg
xchg
xchg
inc
or
sbb
ljmp
das
aam
jnp
sbb
lret
out
aas
xor
push
mov
mov
adcl
mov
jnp
push
lds
add
mov
dec
jnp
sub
out
fwait
ss
mov
or
int
jmp
test
lods
sbb
ret
mov
fistl
sahf
mov
push
jo
stos
bound
mov
pop
add
pop
jl
adc
lods
pop
inc
jno
xchg
sbb
lret
out
loope
lods
inc
fildl
add
movsl
loopne
adcl
fmuls
mov
ljmp
lods
ljmp
dec
pop
add
aas
xor
test
scas
xor
movsl
outsb
xchg
pop
pusha
push
jg
pop
mov
lahf
cmp
stos
das
rorb
scas
div
loope
jae
and
mov
and
call
dec
rcrb
insb
outsl
aas
pop
xchg
pop
dec
jns
movsb
xchg
in
xchg
mov
sbb
in
loop
inc
sbb
and
xchg
mov
jnp
filds
movl
std
test
pop
insl
push
xchg
insl
pushf
add
sbb
ss
mov
shll
inc
push
mov
les
cmp
xor
lret
cmp
jae
scas
xchg
repnz
pop
js
loopne
ss
sbbl
icebp
aaa
push
mov
popl
inc
xchg
push
mov
inc
addr16
add
fcomps
mov
pop
pop
bound
cmp
mov
fwait
in
mov
roll
xchg
pop
or
add
rclb
out
cli
mov
adc
pop
das
rcrb
push
push
scas
sub
lods
arpl
and
push
adc
sbb
cmp
mov
fists
mov
movsl
cmp
aam
push
sti
dec
popa
cmpl
cmp
out
popa
mov
lret
mov
sub
sub
in
gs
xchg
fimuls
sbb
dec
add
mov
pushf
in
in
ror
add
lds
sub
aas
ret
fisttpll
lea
mov
in
xor
mov
or
inc
into
jg
cmp
mov
and
int
add
jae
jp
lret
daa
leave
adc
push
stos
shlb
in
or
loope
xchg
cwtl
jmp
sti
lret
pop
cmp
jle
push
pcmpeqw
mov
add
setnp
xchg
shl
mov
xorb
mov
cmp
insl
mov
dec
pop
shrl
cmpsl
lods
xchg
or
mov
pusha
inc
pop
sub
sub
push
in
pop
shlb
jb
sub
cwtl
idiv
inc
push
nop
call
mov
orl
insb
dec
addl
mov
scas
add
cwtl
sub
stc
sbb
movsl
jp
movsl
aam
xor
or
cmp
testl
mov
rcl
jl
mov
pop
xor
xor
lds
mov
cmp
dec
ja
push
mov
imul
mov
and
sbb
call
cltd
bound
cltd
push
mov
outsb
and
adc
fimuls
jae
aas
fwait
cmpsb
and
and
sarb
lret
and
lret
or
pop
aas
mov
pop
fmuls
dec
or
pushl
movsb
les
xchg
mov
cpuid
dec
loope
sar
adc
test
xlat
inc
push
lods
and
movsb
mov
mov
pop
xchg
imul
sub
notl
jbe
pop
fisubs
lret
jb
push
fcoms
ja
repnz
pop
bound
mov
es
out
daa
iret
gs
xor
inc
scas
add
fsubrs
inc
rcrl
sarb
sbb
mov
gs
lahf
or
mov
insb
call
jno
idivl
cmp
mov
cmpb
pushf
popf
push
mov
lds
add
mov
stos
test
xchg
mov
pop
jle
fadds
shll
cltd
es
xchg
mov
sbbl
test
cmp
cmp
and
iret
mov
outsb
nop
hlt
sub
aaa
ljmp
push
adc
icebp
push
pusha
loopne
push
ss
js
inc
xchg
sub
call
jge
ljmp
cs
inc
cmp
sub
pop
fcoms
sbbl
test
cmpsb
adc
ljmp
out
jmp
sub
xchg
jnp
fucomp
xor
inc
outsl
aaa
jecxz
mov
loope
iret
pushfw
js
lcall
imul
sub
jl
imul
push
stos
aad
add
pop
jecxz
icebp
test
inc
cmp
scas
xor
fldl
shll
fs
jmp
lods
add
iret
test
sarl
pop
sub
fidivrl
int
in
inc
mov
or
jb
mov
cwtl
add
scas
push
cmp
sti
push
xchg
pushf
dec
dec
jmp
and
sub
iret
mov
gs
popf
adc
push
popf
scas
test
fsubs
cmp
add
lea
ret
inc
test
adc
sub
mov
cmp
mov
outsl
mov
cmp
call
adc
mov
into
cmp
mov
mov
lods
arpl
sub
push
xchg
jg
in
cmp
psllw
cmp
dec
xchg
pop
int3
les
mov
jo
xchg
jmp
stos
fmuls
cmp
sti
xor
sub
clc
cmp
xchg
loop
cltd
mov
outsl
or
xlat
push
xor
std
ret
jns
push
sbb
enter
je
inc
dec
je
pop
lock
jno
or
and
adc
jle
jmp
sbb
test
jb
dec
gs
mov
fs
pop
xor
xchg
lret
inc
ss
clc
inc
push
loopne
sub
or
pop
push
ret
sub
push
lahf
dec
mov
jecxz
jmp
lock
dec
add
scas
mov
jb
test
stos
sbb
bound
sub
mov
insl
jecxz
add
xchg
vmread
jle
cmpsl
mov
sub
lods
icebp
out
aaa
add
dec
in
sub
cwtl
movsb
or
test
jecxz
mov
dec
inc
mov
lret
jecxz
aad
add
sbb
push
icebp
mov
pop
push
ja
movsl
push
cmp
lods
mov
push
pop
inc
addl
jae
in
push
mov
add
or
ret
mov
xor
jno
mov
movsb
mov
inc
clc
dec
clc
add
mov
call
int
add
orl
sbb
lea
icebp
mov
pop
pop
jp
push
add
jg
pop
pop
pcmpeqb
pushf
pop
cli
xor
subb
int3
adc
pop
sub
sbb
into
clc
orl
jnp
pop
pop
cmpsl
xchg
jbe
xor
test
mov
lock
ret
mov
mov
lods
and
ss
je
push
adc
jo
jl
push
dec
imul
pop
idivl
repnz
in
adc
pop
push
loop
sbb
sarl
sub
sub
cmp
movsb
bound
and
push
fs
rclb
xor
jnp
and
jl
adc
adc
cmpl
pop
neg
xor
pushf
inc
sbb
dec
jae
test
jge
dec
fs
add
jns
jne
mov
add
sbb
in
adcb
das
shl
andl
cmc
xor
cmp
lret
pop
inc
movsl
push
add
inc
movsl
jbe
mov
dec
sub
xor
je
jns
loopne
test
rorl
pusha
daa
and
notl
inc
mov
out
mov
add
adc
sub
xor
and
nop
jg
lcall
imul
xchg
jmp
aas
popa
imul
mov
gs
test
add
jns
test
cwtl
sub
mov
inc
xchg
cwtl
lret
or
mov
rcrl
call
mov
mov
fidivs
and
sbb
jmp
jp
stos
inc
enter
dec
aad
lock
negb
and
int
loop
repz
jnp
mov
test
aam
aas
loop
mov
lret
movsb
add
xor
scas
fimull
push
pop
out
adc
and
in
sbb
movsb
arpl
les
outsl
test
es
inc
insl
sub
inc
pushf
xchg
dec
cmp
pop
push
pop
adc
sub
xchg
arpl
mov
vmovmskps
jp
lods
jle
mov
les
inc
daa
int3
call
aaa
icebp
subb
dec
aas
loope
push
inc
dec
and
add
add
sti
je
push
push
dec
rolb
fsubr
ret
sub
xor
shlb
inc
cwtl
enter
pusha
pop
imull
dec
pop
mov
arpl
out
mov
lods
sahf
xchg
mov
stos
xor
scas
insl
sbb
nop
test
xchg
xchg
dec
ret
push
pusha
out
dec
arpl
mov
add
pop
sbb
xor
inc
test
insl
and
in
xchg
sub
xchg
xor
push
lea
rcrl
xor
cmp
jbe
pop
and
mov
pop
sbb
mov
jle
mov
mov
cmp
sub
nop
repz
imul
call
test
arpl
fsubrs
or
push
faddl
sub
das
lret
cs
adc
dec
xchg
sti
push
int
push
fbld
push
adc
pop
jns,pt
icebp
aam
fwait
xor
shr
sbb
mov
or
mov
xchg
movsb
sti
out
mov
cld
mov
std
dec
or
cmpsb
jo
lcall
fs
mov
jnp
andb
bound
mov
sbb
sahf
mov
and
inc
or
mov
or
push
popf
notl
mov
cmp
imul
xchg
xchg
push
das
movl
dec
mov
outsb
imul
and
test
pop
ret
inc
mov
sub
movsbl
cwtl
add
ficoml
lods
test
jnp
subb
mov
stos
add
push
inc
jbe
sub
push
cmp
xor
insl
jg
pop
dec
sbb
aaa
jnp
dec
mov
xchg
lcall
sbb
pop
mov
xchg
xor
notl
mov
in
cld
sbb
xchg
movsl
lret
test
and
adc
push
lea
dec
mov
das
jo
add
jns
mov
ja
lods
jp
icebp
ret
mov
stos
gs
and
in
dec
jmp
pushf
std
lret
xor
lods
pop
sub
xor
mov
icebp
and
das
out
sbb
sbb
pop
aad
cmp
pop
xor
out
testl
xchg
xor
jmp
mov
push
sbb
popa
in
xchg
push
push
jbe
xorl
lret
mull
push
cmpb
pop
lock
xchg
outsb
dec
jp
and
inc
cs
scas
cld
or
call
loop
stos
add
in
in
dec
jg
push
pushf
push
xor
sub
xor
dec
xchg
leave
lea
xchg
add
cwtl
push
shl
rorb
fisubrl
xchg
inc
xor
mov
les
test
sbb
in
inc
fisttps
lret
stos
mov
cltd
lret
int3
mov
or
int3
lcall
movsb
sarb
outsl
aad
into
scas
mov
cmp
ret
and
leave
outsl
ljmp
cmpsb
pop
mov
jg
dec
adc
jnp
xchg
cld
scas
das
fidivrs
pusha
pop
pop
inc
mov
popa
aas
aaa
loopne
test
push
xchg
or
adc
pop
adc
rol
mov
sub
dec
sub
notl
xor
ss
push
xchg
pop
mov
rolb
addr16
fisubs
inc
mov
cli
and
jnp
xor
mov
inc
and
mov
adc
xlat
fsubrs
dec
and
movsl
les
push
xor
jbe
and
jbe
cmp
pop
xchg
push
test
xchg
stos
imul
jnp
xchg
inc
test
loope
fwait
and
jnp
push
jle
lret
je
lcall
lret
negb
and
add
jb
sahf
pop
push
sti
out
xlat
add
lahf
xchg
outsl
ss
sbb
stc
mull
nop
inc
cmp
cwtl
lret
push
cmp
repz
jne
or
jg
cmp
jbe
or
mov
pop
jmp
stos
movsb
mov
aam
adc
jb
lret
shrb
inc
adc
in
negl
bound
aaa
sahf
aas
cmpsb
fwait
mov
rcrl
push
mov
inc
cli
repz
std
push
and
sub
dec
int3
mov
shl
loopne
sbb
xchg
xchg
lret
insl
dec
repz
mov
fdivrl
subl
mov
test
hlt
cmp
sub
jmp
loope
test
aaa
sub
cmp
imul
push
dec
sahf
mov
add
ljmp
mov
and
sub
pop
mov
dec
cmpsb
pop
lds
shll
xlat
mov
in
mov
fnstenv
push
and
inc
aaa
jne
cmp
cmc
movb
jnp
mov
xor
shll
push
inc
add
and
dec
add
sub
inc
aaa
dec
in
rep
decb
adc
mov
idivb
cmpb
clc
stos
in
and
in
sbb
call
popa
dec
adcb
push
and
mov
jae
mov
xchg
push
mov
inc
out
in
mov
and
ret
push
sbb
cmpsb
daa
or
pop
sub
lds
xor
cmp
cli
nop
mov
loopne
stos
enter
cmc
xchg
enter
xchg
add
movsl
inc
fdivl
fwait
or
pop
shrb
lods
push
adc
jbe
in
xchg
push
fwait
insl
xchg
cmc
xchg
repnz
lret
loop
scas
aaa
dec
in
std
mov
popa
push
mov
in
jmp
pop
mov
dec
jae
es
lret
mov
pop
push
and
movntq
int3
test
xor
pop
shlb
fdivr
xchg
xchg
jge
faddl
cmp
cwtl
push
cmp
xchg
dec
push
addr16
out
js
rol
std
xchg
jbe
pushf
aad
add
fildll
leave
push
outsb
add
int3
add
test
xchg
aam
mov
out
add
add
pop
xor
dec
test
scas
and
nop
out
inc
cmc
mov
sub
pop
cli
in
decb
lret
adc
out
pop
test
pop
sub
ja
pop
jle
leave
xchg
sbb
testb
sub
or
aad
pop
dec
pop
nop
insl
comiss
mov
aas
dec
push
std
sti
call
cmp
stos
jbe
cmp
mov
cmp
adcl
jns
mov
dec
int
aad
aas
push
xor
leave
aam
jle
or
jmp
popf
call
mov
mov
sub
js
jnp
sbb
mov
mov
or
imul
inc
pop
frstor
xor
inc
adc
test
add
repnz
test
dec
cmp
and
fwait
mov
stc
stos
or
jne
cmpsb
cli
hlt
and
int
popf
les
push
stos
arpl
and
shl
repz
rclb
jecxz
fs
sub
sbb
jp
cwtl
je
mov
push
jo
adcb
jo
fidivrs
int3
int3
sub
rorl
and
daa
mov
jno
popa
pop
es
mov
out
test
jp
xchg
fwait
jmp
pop
dec
xor
fstpl
cmp
mov
add
mov
jg
testb
jns
hlt
xor
out
imul
leave
test
adc
addb
inc
mov
popf
jecxz
sarb
hlt
cmpsl
jae
xlat
gs
xchg
adc
pop
mov
dec
scas
sbbl
sub
into
push
fdivl
jge
jl
xor
aaa
xchg
push
xor
pop
movsb
sub
sub
jbe
adc
aam
and
gs
clc
push
xor
sahf
mov
fisubrl
shl
jl
jg
xchg
nop
das
movsb
je
push
adc
cmp
test
mov
adc
and
add
pop
xor
sub
pop
jnp
cmpsl
add
jmp
cmp
and
ljmp
jnp
and
push
fimuls
dec
aam
lds
loope
sub
cld
xlat
push
movsb
cltd
mov
lods
call
nop
mov
sbb
push
ss
fcom
sub
push
ret
pop
jno
fcoml
in
cwtl
pop
imul
and
sbb
jg
lods
and
jae
sbb
mov
and
je
and
andl
test
pusha
fistl
jp
ljmp
xor
fcomps
cwtl
push
jbe
add
sbb
arpl
arpl
jns
pop
dec
pusha
movsl
sbb
sub
sbb
sub
and
mov
pop
fildll
mov
lea
fs
fdivl
add
mov
leave
xor
cmp
dec
cmpb
adc
imul
and
insl
xor
cmp
add
aaa
sub
cmp
pop
in
lret
xchg
xchg
hlt
test
jae
xchg
ds
test
bound
pop
ror
cmp
fiaddl
gs
mov
xor
xchg
and
daa
imul
inc
jo
dec
lock
les
lods
movsb
mov
les
dec
cwtl
stc
xchg
fisubs
adc
push
loop
mov
pop
out
cs
mov
push
adc
cmp
mov
add
or
jae
movsb
pop
data16
div
les
xchg
addr16
fstl
das
sbb
xor
mov
xchg
sbb
xchg
data16
mov
imul
inc
fcmovnu
loope
jge
mov
dec
xlat
sbb
inc
psadbw
and
pop
je
hlt
sub
mov
xor
jmp
xor
repnz
mov
mov
xor
jg
std
sub
adc
jbe
test
popf
test
mov
cltd
xchg
fcmovb
cmp
addr16
cltd
push
pop
mov
mov
sub
sarl
aam
dec
fcmovne
mov
and
cmp
call
adc
testl
aam
push
or
and
inc
pop
inc
pop
shl
mov
in
xor
dec
pop
insl
xchg
and
stos
pop
jae
in
idivb
mov
andl
or
sub
scas
lret
mull
imul
sub
ss
xor
in
adc
xor
jo
stos
push
repz
out
or
call
inc
daa
push
or
and
add
push
cs
adc
fdivrs
sbb
das
dec
aad
xchg
adc
test
cmp
cmp
sbb
sbb
data16
or
jmp
pop
pop
into
loopne
and
add
mov
in
out
test
call
push
pop
out
mov
or
leave
in
sub
sub
mov
mov
fimull
cmp
jecxz
rcr
divl
pop
mov
adc
jne
mov
push
jle
jno
mov
in
xchg
arpl
jne
in
sbb
xchg
sti
scas
adc
xchg
outsb
js
jle
ss
popa
arpl
xchg
mov
idivl
rcll
inc
and
jle
add
jle
cmpsb
push
lock
jne
jp
push
push
sbb
ljmp
adc
cmc
lods
test
sub
movsl
int3
xchg
je
jl
test
arpl
push
lods
cli
int3
and
and
jmp
pop
mov
ss
test
cmp
add
dec
inc
repnz
in
add
notb
lock
in
xchg
outsl
rol
repnz
jmp
aad
mov
das
mov
add
imul
les
push
cmpsl
jno
inc
gs
fprem
and
lahf
adc
int
push
test
js
lods
inc
fidivrl
and
rcrb
rclb
call
cld
insb
cltd
les
add
pusha
dec
mov
sbb
shl
sub
filds
mov
cmp
xchg
lea
fistpll
imul
xchg
lods
aaa
loop
bound
call
sub
add
nop
in
add
sub
sar
int
mov
jns
cmp
dec
repz
cmp
push
pusha
aam
push
pop
lods
and
addr16
or
stos
rclb
jle
push
stos
mov
sahf
pushf
jbe
mov
aaa
and
loope
arpl
ret
push
xchg
sarb
hlt
pusha
jg
xchg
test
mov
sub
mov
jbe
xchg
mov
xor
jo
lcall
addr16
call
dec
mov
xor
pop
pop
sub
mov
dec
sub
ss
mov
xchg
xchg
aaa
ror
lret
jg
pop
or
test
xchg
mov
cmpsl
loop
xor
pop
cmp
shrb
imul
and
std
int
clc
jge
jbe
mov
enter
jb
imul
shl
xchg
and
or
jmp
into
test
mov
insl
icebp
xchg
je
xchg
pop
mov
pop
insl
stos
bound
mov
pop
roll
sbb
outsb
and
add
insl
out
cli
mov
push
and
into
outsl
js
inc
stos
imul
mull
adc
cmpsb
mov
lcall
mov
jae
xchg
push
add
and
lahf
insl
pop
push
push
and
jae
clc
and
lock
adc
mov
lock
imul
shll
and
adc
xchg
fcoml
add
insb
jbe
pop
mov
repz
sti
jo
in
mov
mov
js
and
mov
jbe
shr
mov
mov
rclb
mov
les
inc
loop
lods
inc
xor
adc
jmp
pop
jecxz
pop
fsts
out
jne
mov
xchg
imul
stc
jns
xchg
enter
and
shrb
rcr
test
xchg
shlb
and
test
push
pop
sbb
push
dec
lret
mov
addl
adc
jge
sahf
in
push
mov
xchg
jns
pop
jmp
stos
rclb
cmpsb
cmp
mov
dec
cmp
sbb
xor
fidivl
scas
jmp
lods
mov
jo
aam
xchg
pop
mov
dec
pop
aad
push
push
in
repz
sub
add
fadd
pop
mov
dec
enter
nop
out
out
or
pop
cmp
xchg
cmp
mov
mov
popl
xchg
add
mov
fldl
mov
inc
inc
ret
das
std
imul
test
clc
ss
ret
mov
fdivl
shrl
mov
pop
leave
mov
add
imulb
cs
aas
lcall
mov
and
mov
mov
push
jbe
and
lret
sbb
xlat
push
xor
jae
jg
jecxz
outsl
imul
sahf
fxch
gs
addb
pop
cmp
mov
mov
in
or
cmp
or
clc
insl
jo
pop
xor
aas
add
mov
inc
cwtl
push
sahf
loop
inc
inc
dec
push
fiaddl
aaa
ret
jnp
int
imul
or
push
mov
inc
push
adc
cmp
cltd
mov
xchg
xor
rorb
mov
add
stc
outsl
gs
cmp
jp
jmp
testl
add
mov
out
xor
pop
xchg
leave
in
adc
push
adc
adc
flds
into
mov
repnz
mov
add
add
inc
pop
mov
gs
bound
cli
mov
jl
jne
enter
out
lock
jmp
test
ret
push
repnz
out
cmp
adcl
test
add
aam
test
mov
dec
ret
mov
jns
arpl
mov
push
mov
in
int3
mov
popl
insl
cwtl
adc
pop
push
push
jo
notb
jae
fistpll
ljmp
sbb
xor
data16
pop
int3
inc
jb
push
idivl
pop
leave
roll
inc
pop
ret
pop
push
aaa
sbb
inc
mov
inc
mov
stos
shlb
imul
mov
mov
jmp
iret
xor
add
pushf
repz
rorb
mov
std
mov
jno
cmc
pop
sbb
xor
mov
dec
jmp
adc
and
dec
cmp
ds
xor
jnp
cmc
xor
push
lret
loopne
sbb
insb
or
cmp
sbb
mov
inc
daa
and
insl
mov
out
lock
xor
xchg
push
nop
sub
sbb
dec
call
bound
ljmp
or
xchg
loopne
aas
jl
xlat
in
movl
mov
rcr
lock
in
xchg
into
push
push
ss
daa
or
inc
mov
xchg
xchg
stos
mov
das
and
sbb
ja
out
sbb
out
mov
movsl
movsl
and
or
dec
dec
lods
xor
push
xchg
sub
test
daa
rclb
jns
push
cmpsb
shll
daa
and
js
jle
mov
xchg
sbb
push
mov
lods
mov
jbe
mov
imul
sbb
dec
lret
mov
dec
sub
stos
xchg
and
mov
mov
cltd
into
jge
sar
out
andl
push
popa
mov
les
jb
inc
jo
push
aas
pop
mov
pop
inc
rolb
fildl
repnz
cmc
ljmp
pop
adc
outsl
cmp
loope
stos
cmpsl
sub
data16
cmpsl
sbb
jg
loop
pusha
dec
push
movsb
sub
or
mov
popa
adc
mov
rol
aad
shll
lods
scas
mov
ja
push
push
xchg
jno
mov
mov
jecxz
pop
stos
lods
ljmp
push
loopne
cmc
lock
lcall
fnstcw
xor
or
insb
jecxz
mov
ss
ja
mov
lcall
cli
mov
dec
outsb
push
pop
aam
add
std
xchg
ss
pop
mov
test
inc
hlt
cli
lret
sbb
inc
push
lods
es
cmp
pop
pop
adc
xchg
cmp
push
lea
jecxz
push
xor
cmc
sub
ja
loop
aaa
pop
lcall
jno
cmp
clc
subl
or
loop
fidivrs
cs
stos
and
push
mov
daa
fdivl
jnp
jae
dec
mov
pop
test
popa
adc
xor
dec
adc
sbb
lret
push
adc
mov
or
test
inc
aad
int
rol
out
push
int3
adc
test
mov
mov
out
push
stos
xchg
daa
shl
loope
repz
and
insb
data16
fnstcw
sub
repnz
mov
push
xchg
push
jl
lret
sti
sub
in
insb
popa
jne
in
pop
dec
jle
mov
inc
push
push
clc
pop
add
jb
repnz
fcmovu
mov
xchg
scas
xlat
cwtl
stos
jns
xor
push
lods
ja
mov
jmp
loope
outsb
fwait
ret
pop
aas
adc
test
push
mov
aam
outsl
in
loop
xchg
cmpsb
dec
fcmove
into
insb
mov
push
fstpt
push
fsts
cmp
jns
pop
loop
mov
xchg
std
or
jno
cmpsb
repz
stos
leave
pop
or
je
inc
or
icebp
or
push
int
test
jno
imul
mov
xchg
fcoml
fs
loopne
leave
jp
adc
add
mov
inc
popf
pop
xor
adc
push
loope
jmp
imul
pop
in
test
ljmp
leave
or
mov
sahf
stos
sbb
cmp
adc
jp
nop
or
movsb
adc
call
push
xchg
xchg
mov
mov
inc
push
pop
sub
cmp
fsubr
stos
test
sub
mov
loopne
and
test
imul
cmpb
adc
jbe
adc
and
mov
pop
push
pop
push
das
hlt
lods
cmp
scas
cmp
loope
lea
dec
mulb
xor
addr16
and
or
dec
sahf
push
test
adc
sub
cmp
addl
ss
dec
ret
cmp
pop
mov
dec
fwait
dec
jmp
in
jl
mov
ficompl
fldl
fidivrs
cli
or
or
lcall
ss
and
aad
cmp
adc
ja
cli
mov
push
xor
pop
out
dec
daa
or
pushf
xor
adcl
sbb
jb
xchg
call
mov
push
and
movsl
test
dec
jg
insl
das
mov
jne
cmc
popa
insl
xchg
dec
mov
and
push
int3
into
outsl
fwait
mov
inc
stos
cmc
dec
and
pop
mov
aaa
int
leave
inc
lods
repnz
lea
out
jp
ret
adc
clc
out
pop
inc
scas
cmp
adc
fistpl
mov
aad
cld
dec
xor
daa
jae
lret
hlt
loope
mov
mov
xchg
insb
mov
xor
mov
fs
loope
xor
inc
daa
or
lods
cmc
sub
inc
inc
cld
aad
mov
or
cmpsl
cs
add
arpl
and
dec
jns
jno
or
ja
push
mov
rcrb
mov
jno
fildl
les
sub
icebp
faddl
adc
stos
ss
cmp
mov
out
iret
and
subl
cld
jae
or
mov
in
pop
shl
adc
dec
push
fstl
pusha
inc
add
inc
cmp
ret
arpl
imul
insl
cmp
int
pusha
fcompl
add
sbb
push
pop
mov
arpl
or
jge
stos
sub
repz
xor
aad
into
leave
outsb
adc
cs
sti
in
fldenv
xchg
insb
scas
mov
movsl
or
dec
pop
push
add
ss
xchg
mov
push
das
fwait
data16
lods
bound
pushf
hlt
cmp
push
sbb
adc
addl
mov
jae
stc
fadds
push
daa
jmp
subl
ffree
jecxz
inc
cmp
call
pusha
sub
inc
pop
jl
inc
mov
add
inc
mov
adc
lcall
out
out
xor
pusha
and
add
mov
icebp
adc
fnstenv
inc
cmpsl
lods
fisttpll
dec
pop
sub
mov
addr16
sti
mov
bound
xor
aas
mov
cmpsb
add
push
xchg
push
mov
notl
fdivr
test
pop
clc
xlat
jp
mov
daa
dec
and
lret
hlt
stos
arpl
adc
mov
fsubl
es
xchg
mov
out
cwtl
xchg
or
mov
xchg
adc
sub
xchg
sti
cld
stos
jg
jne
add
fld
inc
mov
pop
lret
cmp
int
push
bound
inc
hlt
pop
mov
iret
stos
and
xor
ret
outsl
stc
jne
sahf
sub
mov
cmp
jg
sub
pop
popa
mov
mov
xchg
push
and
cmp
js
push
imull
notl
std
nop
push
insb
fcomi
mov
dec
push
xor
add
aas
jne
jecxz
xchg
inc
xor
lock
and
arpl
mov
xchg
inc
mov
lcall
into
push
js
jns
fildl
outsb
inc
dec
imul
jns
dec
les
ficoml
out
mov
aad
pop
add
popa
test
fcoms
mov
xchg
fistpll
std
aaa
adc
pusha
into
mov
xchg
ja
in
sarl
and
sar
cmc
sub
fwait
lds
mov
ret
pop
lcall
stos
lods
sub
jnp
pop
inc
push
cmp
icebp
push
test
jg
roll
mov
add
adc
fisubl
cmc
dec
shll
pop
sahf
lods
pop
sahf
sbb
xor
mov
pop
push
test
lock
cmc
int
test
das
cmp
clc
push
push
lods
add
cmp
js
insl
fwait
adc
mov
sahf
mov
decb
fnstenv
mov
sbb
hlt
iret
mov
and
push
and
jbe
pop
pop
push
cltd
scas
xchg
jb
pop
test
add
out
add
or
sbbb
ja
aas
fists
leave
sbb
jge
mov
jecxz
out
mulb
add
outsl
mov
into
lock
or
imul
pop
mov
pop
gs
in
mov
rorl
inc
pop
and
fldt
dec
push
push
imul
sbb
xor
jbe
fsubs
cwtl
jae
inc
jnp
cmpsl
xchg
xchg
cltd
lds
call
icebp
push
mov
or
pop
pop
incl
xchg
loop
or
dec
aam
mov
int
addl
inc
std
aad
arpl
into
push
js
lcall
ss
mov
adc
pop
inc
sub
shrl
xor
add
mov
pop
stc
and
outsb
aam
popa
sbb
insl
add
mov
jbe
jo
shlb
push
push
mov
lea
mov
cmpb
jp
loop
stc
jne
fbstp
imul
jge
inc
push
hlt
push
inc
mov
std
xor
add
jmp
xchg
inc
xchg
xchg
cmp
fcompp
mov
cs
popa
mov
out
cmp
push
or
mov
jecxz
lcall
inc
jo
lret
shrl
dec
inc
lret
xchg
jnp
mov
pop
xchg
push
mov
jmp
xchg
ret
inc
outsl
arpl
pop
fwait
add
pop
into
ss
mov
cmp
lcall
mov
sahf
jmp
jecxz
clc
mov
lahf
fidivs
push
les
cmpb
fldl
and
cli
xchg
mov
add
or
sub
addr16
mov
cltd
adc
insl
test
adc
imul
xchg
dec
sahf
lcall
sbb
xchg
cmpl
dec
push
cmp
cs
push
daa
jb,pt
ret
mov
lcall
mov
jnp
cltd
cwtl
add
and
in
or
outsb
movsl
fimull
dec
jno
es
jle
in
adc
inc
adc
jl
xchg
ret
subb
xchg
loope
gs
cmp
pop
or
cmp
xor
nop
loopnew
or
jne
push
xor
loopne
outsl
cltd
xchg
scas
add
scas
xor
pop
lret
lods
dec
fs
mov
gs
aaa
faddp
pushf
div
cs
hlt
fidivrl
cmc
xor
outsb
test
icebp
stc
sahf
pop
flds
adc
add
add
and
dec
jg
lea
pop
adc
dec
les
sti
cli
jmp
cwtl
outsl
movsl
or
xor
inc
movnti
lcall
sbb
pop
iret
xorb
stc
jne
cmp
sbb
in
mov
cli
in
xchg
pop
dec
adc
dec
or
movsb
xor
xchg
sarb
dec
negl
push
test
inc
mov
lock
stos
and
cs
inc
jne
mov
das
jl
xor
sub
xor
mov
and
push
out
adc
or
std
out
cli
in
or
jb
repz
movsl
pop
sbb
jmp
inc
cmc
sub
test
dec
xor
dec
or
in
adc
mov
inc
dec
push
lock
xor
out
call
fs
shll
sub
aaa
mov
fnstenv
jle
or
outsl
lea
std
lret
pop
bound
push
dec
les
lods
sub
jge
lods
das
int
lret
cwtl
add
inc
negl
adc
cmpsl
movsb
popf
mov
loopne
inc
jns
test
jg
and
aas
inc
int3
repnz
scas
push
test
loopne
inc
sub
xchg
xlat
jne
in
adc
inc
push
stos
roll
sarb
cs
loope
ret
xchg
fs
mov
mov
fdivrl
and
mov
mov
sub
in
sahf
push
adc
lea
sbb
cmp
sbb
js
mov
push
push
fnsave
mov
cwtl
adc
stos
xchg
and
adc
mov
jmp
lds
sbb
dec
or
in
outsb
cmp
mov
push
pop
mov
ret
fbstp
xchg
push
out
xlat
or
lods
mov
inc
pop
dec
fmull
xor
sbb
inc
ret
sub
sbb
test
xchg
rol
xor
out
or
sbb
mull
mov
or
adc
jne
xchg
inc
push
inc
push
pop
cwtl
mov
dec
mov
mov
adc
dec
cmp
jne
cltd
sub
dec
aad
pop
mov
ret
dec
add
inc
mov
imul
stos
pop
push
shrl
out
scas
ror
sbb
cld
ds
lret
jecxz
or
mov
push
dec
test
jmp
lock
push
pop
cmp
repz
movsb
std
test
push
iret
cltd
js
and
jp
adc
push
and
adc
mov
mov
mov
aas
out
xor
add
es
xor
mov
add
mov
rcll
and
pop
mov
fdivl
mov
pop
jns
mov
cmp
addr16
push
data16
push
ljmp
cltd
mov
cmp
ds
cmp
sub
jl
sbb
movsb
nop
jbe
cmp
aad
dec
sbb
outsb
and
pop
xor
scas
sbb
add
movb
cmp
xor
push
ret
mov
ret
cltd
push
cmp
mov
data16
cmp
fcmovnb
lret
cmpsl
call
dec
push
lcall
test
pop
test
out
andl
fsubr
mov
addb
gs
dec
jne
jmp
ret
jle,pn
xor
xchg
sub
sbb
repnz
sbb
aad
mov
fisubs
fildll
push
dec
mov
push
xchg
test
or
and
adc
arpl
or
idivb
lahf
jl
mov
in
jmp
jle
mov
mov
cmp
icebp
cmc
std
mov
decl
stos
outsb
sub
in
lds
popa
out
cmpsl
fwait
inc
fiadds
fwait
and
rolb
jne
or
add
iret
scas
add
idivl
mov
jnp
mov
push
clc
outsl
push
adc
fisttpll
insl
popl
or
jg
and
imul
sbb
mov
fs
std
jbe
in
inc
std
push
inc
cmp
daa
das
leave
sti
and
je
mov
cmc
cmp
xchg
imul
push
jbe
sub
inc
neg
adc
jno
adc
fmuls
mov
pushf
sub
scas
pop
xchg
inc
adc
mov
pop
pushf
icebp
leave
mov
subl
fimull
in
sub
xor
nop
lods
iret
inc
pop
cltd
ja
aad
adc
or
mov
fistl
push
stos
pop
popf
out
test
mov
or
dec
or
out
negb
xchg
push
or
out
shl
stos
int3
push
mov
pop
pop
aam
clc
fs
jno
rcrl
lods
movsb
fcompl
jle
xlat
sbb
int3
mov
mov
sub
outsb
out
jb
pop
loop
jl
xlat
push
scas
std
or
xor
fiaddl
push
pop
call
jns
dec
clc
inc
lds
mov
mov
repnz
call
popf
push
sbb
and
stos
pop
mov
pop
sahf
add
or
pop
cmovl
push
inc
pop
and
push
inc
add
adc
jo
xchg
fsubrl
imul
std
xchg
into
movsb
jecxz
sbbl
pop
arpl
inc
in
mov
pusha
mov
cmp
inc
pop
push
xor
adc
push
add
in
dec
ficompl
popa
imul
out
and
int3
inc
mov
cs
mov
lcall
les
dec
dec
pop
xchg
mov
dec
push
inc
sub
cld
cmp
les
cli
push
je
pop
bound
in
fs
push
add
addb
pop
lock
cmp
sahf
outsl
int
cmp
sub
cli
iret
mov
out
ret
ja
jg
xor
xor
or
cmp
lret
fisubl
rclb
adc
xchg
xor
aaa
fiadds
js
xor
repz
adc
inc
pop
repz
pop
inc
test
ret
mov
scas
xchg
ds
cld
movsb
cmc
cs
movsb
cmp
pop
hlt
jb
jp
pop
jecxz
test
inc
mov
shr
inc
js
inc
add
sbb
sarl
fisttpl
sbb
push
and
push
push
mov
cmc
or
nop
push
dec
xchg
jae
xchg
in
and
mov
sti
push
lret
jne
dec
inc
or
pop
or
popf
ret
les
aam
mov
shrl
mov
mov
cmp
fildl
rcrl
int
in
jle
jl
push
imul
out
xor
cmp
lcall
in
mov
mov
add
sub
cmp
pop
xchg
fcompl
je
lock
sbb
pop
cs
cmpsb
push
dec
or
imul
sbb
mov
stos
xor
fwait
mov
out
aas
insl
in
in
stc
insl
clc
popf
pop
jp
pop
push
daa
aas
cmc
xchg
test
addr16
and
dec
sti
jecxz
add
cmp
das
shlb
iret
sub
sarl
outsl
mov
adc
enter
sub
push
sbb
ja
and
insb
pop
insl
repz
daa
push
mov
inc
es
push
stc
jae
add
test
fwait
in
and
inc
dec
pop
mov
ja
push
pushl
inc
push
mov
mov
rorb
mov
pushf
outsl
popa
mov
jns
adc
jle
aas
lds
std
std
ret
stos
lea
repz
insl
or
jl
jle
movsl
sub
je
jecxz
push
sub
pop
ret
data16
out
popa
jl
mov
int3
into
cmp
leave
mov
sbbl
test
cld
fnstenv
mov
cmpsl
imul
xchg
test
dec
adc
cmp
outsl
adc
mov
xor
lock
mov
lcall
dec
push
aad
outsl
mov
pop
sbb
roll
and
pop
cmp
lds
sub
jp
mov
hlt
int3
jne
adc
push
xchg
push
iret
sub
notb
in
stos
mov
lock
aam
arpl
clc
push
arpl
push
lret
mov
int
into
repnz
pop
lahf
hlt
dec
in
icebp
mov
push
cmp
mov
jne
test
xor
lret
pop
out
jno
or
out
fs
inc
stos
cmc
sub
pop
scas
call
mov
int3
testl
pop
aaa
mov
jns
imul
cmp
xor
jns
xchg
xchg
faddl
in
jmp
outsl
xor
js
in
imul
xor
jp
or
cmpsb
fucomip
pushf
mov
mov
xchg
push
es
add
fldl
cmc
loop
adc
jbe
pop
cwtl
sbbl
shrl
aaa
and
xchg
mov
pop
mov
scas
ljmp
pop
mov
xchg
fwait
popf
lds
lds
jle
dec
adc
add
movsb
js
imul
jge
gs
mov
cmp
adc
adc
ret
addl
jle
mov
cld
enter
or
dec
mov
add
addr16
pusha
push
sahf
jnp
fucomp
aaa
pop
jb
mov
pushf
xor
lahf
lods
popa
ja
fimull
xor
push
test
fdivp
cmpsb
sbb
sahf
and
sahf
pop
pop
sti
mov
sub
pop
lret
popf
hlt
dec
in
lret
test
in
cmp
ds
icebp
sbb
push
fwait
mov
popa
xchg
inc
xor
lcall
jne
mov
pop
dec
lret
or
clc
and
cmc
pop
jnp
xchg
scas
push
cltd
and
mov
lss
or
negl
or
mov
jns
cmpsl
js
js
shl
stos
mov
jp
add
cmp
mov
jo
pop
pop
mov
mov
mov
dec
popa
out
jmp
inc
mov
xlat
cwtl
mov
arpl
pop
inc
imul
daa
xchg
fcomps
lea
adc
iret
loopne
mov
clc
push
ljmp
mov
sub
sub
cmc
ret
shll
popa
popf
dec
cmp
pusha
pop
or
shll
pop
add
add
daa
xchg
adc
mov
jo
or
fisubl
pop
mov
subl
hlt
xchg
nop
sub
mov
inc
inc
addr16
iret
std
sbb
cmp
xor
out
shl
aas
mov
inc
outsb
es
loope
and
out
and
daa
mov
jnp
subb
outsb
cmp
clc
scas
cmp
mov
adc
sti
jg
in
popa
cmp
dec
fimuls
ficomps
je
lds
cmpsb
stos
push
xor
leave
lods
movsb
scas
call
scas
jle
xlat
cwtl
jle
jno
test
and
lcall
out
adcl
or
subb
and
cmp
jl
dec
movsl
xor
lock
lods
lea
cmpsl
pusha
out
out
inc
hlt
sbb
imul
faddp
dec
mov
cmpsb
cmpsb
int3
nop
inc
sub
test
xchg
mov
pop
shll
inc
fcoml
inc
pop
adc
inc
lods
ret
mov
jp
gs
insb
inc
adcl
pop
xchg
das
mov
push
daa
pusha
dec
cld
lret
outsl
add
add
push
cltd
inc
enter
push
sub
sti
scas
cltd
stos
mov
int
rcrb
stos
jecxz
das
movsl
cmp
push
subb
push
or
sbb
mov
sahf
pop
jmp
dec
add
dec
and
sub
dec
jp
or
push
jmp
pop
push
cli
sub
lock
into
or
xchg
adc
outsl
xchg
xor
pop
or
daa
setl
mov
adc
jg
or
push
cli
in
lds
mov
adc
xchg
mov
xchg
cmovne
xor
jb
in
imul
aam
repz
mov
shr
lcall
push
bound
lea
jg
ljmp
push
push
dec
mov
inc
mov
adc
inc
aaa
hlt
clc
fnsave
add
divl
adc
pop
sub
lds
insb
and
gs
pop
gs
mov
or
or
cmp
xchg
cmp
cs
dec
mov
daa
adc
and
ret
push
dec
mov
mov
sarl
arpl
filds
movsb
or
ja
das
lea
push
push
inc
xor
push
cmp
push
loope
test
aaa
xor
stos
jns
xchg
mov
test
push
imul
xor
sub
fimuls
arpl
fdivrs
xchg
gs
mov
popa
mov
jno
outsl
ljmp
mov
lcall
push
fcomi
push
gs
lods
repz
cmpsl
stc
jmp
sbb
inc
mov
dec
cld
das
enter
pop
test
leave
mov
jno
mov
out
mov
pop
das
jle
aad
push
sub
push
popf
rcll
jbe
xor
imul
loop
fcoml
mov
mov
pop
int3
pusha
dec
loope
aad
mov
sub
pop
in
push
lods
repz
xor
imul
and
std
xor
xor
int
fdivs
popa
pusha
decb
repz
jmp
dec
lea
push
pop
pop
sbb
cmc
mov
jns
loope
or
adc
movsl
add
push
bound
push
xor
out
push
fiadds
pop
mov
pop
shlb
je
insl
xchg
ret
loope
xchg
dec
xor
ficoml
sub
sub
popa
shll
jmp
xchg
mov
in
jge
cmp
pop
sbb
or
adc
jno
mov
fisttpll
scas
imul
mov
mov
loope
push
insb
in
ss
push
out
push
adc
stos
mov
fwait
mov
xor
push
outsl
mov
int
push
mov
push
push
shlb
insl
inc
sub
adc
sbb
or
out
jnp
rclb
cmp
ret
dec
mov
movsb
inc
cmpsl
outsb
ja
and
int
mov
mov
ret
gs
sbb
jns
outsb
jg
sub
shll
sbb
sahf
mov
pop
test
mov
xlat
push
ret
dec
fstpl
dec
pop
loope
hlt
mov
mov
pop
sub
repnz
cltd
jno
cwtl
inc
cmp
add
sbb
rcrb
pop
daa
bnd
clc
lret
rcl
mov
push
mov
sub
ds
sti
xchg
and
push
xchg
ja
pop
fs
adcb
jmp
push
inc
dec
out
fldt
repnz
int
or
add
ja
popf
jnp
mov
es
dec
cltd
xchg
jmp
test
sbb
ror
scas
shlb
dec
scas
sbb
in
inc
ss
stc
jnp
iret
push
adc
repz
aas
mov
call
test
inc
mulb
icebp
jnp
lds
mov
add
rclb
sbb
xor
push
push
push
shll
push
sub
out
pushf
push
mull
ljmp
or
out
es
dec
outsl
movsl
mov
mov
test
pop
lods
xchg
xchg
aam
fldenv
incb
sbb
xor
les
stos
loopne
call
fwait
cwtl
xor
js
shlb
push
fcmovnbe
lcall
std
fcmovu
cmp
popa
call
test
jae
sbb
sbb
push
subb
sub
xlat
call
jo
idivl
fldcw
int3
out
and
sbb
movsl
addr16
pop
pop
xchg
jmp
jg
sbb
adc
add
pop
sbb
mov
mov
or
dec
es
inc
fwait
mov
ret
mov
int3
cmp
das
sub
inc
lret
pop
jge
addb
out
ret
xchg
insb
test
and
push
xchg
jmp
fldt
push
lea
adc
sbb
push
jg
in
popf
add
adc
mov
sbb
push
pop
add
shrb
or
rcrb
jnp
jne
shrb
stos
lea
adc
xchg
dec
pop
or
xchg
out
lret
push
xor
outsl
hlt
loop
cmp
cmc
push
push
sbb
mov
add
addr16
dec
faddl
xchg
or
sbbl
pop
out
out
arpl
or
push
das
sbb
mov
dec
iret
cmpsb
lret
mov
mov
mov
mov
push
jnp
in
fs
add
out
jb
mov
or
sub
sarl
sbb
cmpsb
and
jl
es
add
push
mov
jl
cltd
imul
imul
or
lahf
arpl
or
cmp
sbb
lahf
scas
jae
pop
imul
shl
dec
adc
mov
sbb
cmc
or
cmp
popf
xchg
phaddd
jmp
sbb
mov
jmp
push
fwait
adc
data16
mov
or
aad
sub
cld
aas
movsb
xchg
push
pop
or
jnp
fwait
std
aam
outsb
rcrb
mov
mov
ror
jp
sbb
shll
mov
xchg
mov
movsb
pushf
jno
into
jmp
sub
mull
xchg
jbe
pop
jne
push
sbb
mov
xor
in
xor
jg
mov
mov
mov
stos
je
dec
imul
xchg
mov
repnz
jge
push
in
pop
shr
or
ffree
movsl
dec
mov
adc
ljmp
int
push
xor
outsl
pop
cwtl
imul
bound
and
inc
mov
enter
pop
sbb
and
into
bound
inc
inc
lcall
add
bound
repz
jnp
das
sahf
jmp
sbb
pop
inc
add
lret
mov
enter
jne
jle
fsubp
dec
hlt
jl
xchg
test
sub
push
dec
mov
inc
pop
mov
lock
pop
push
data16
test
push
mov
lret
xchg
bound
test
mov
mov
cmpsl
lcall
into
lock
cwtl
mov
dec
sub
std
aam
jno
movsb
xchg
mov
dec
inc
adc
and
stc
xor
scas
jbe
daa
or
stos
jbe
sub
mov
mov
mov
int
cmovs
jmp
js
lea
sub
sbb
push
lcall
shll
dec
pop
popf
mov
fs
stos
push
jno
cmp
sbbl
or
mov
mov
test
push
dec
inc
jl
push
mov
jae
rorl
insl
fwait
mov
jno
dec
aas
xor
cmp
sub
add
mov
push
inc
mov
jge
mov
aaa
cmp
add
cmp
les
mov
aaa
and
push
push
ret
lret
push
push
jcxz
and
jecxz
pop
pusha
movsl
test
in
in
xchg
fisubrs
adc
mov
jecxz
mov
test
dec
sahf
add
inc
or
cmpsl
push
adc
dec
jnp
in
test
jle
lret
jbe
pcmpgtw
outsl
iret
pop
arpl
mov
cmc
out
lea
loope
push
les
xchg
xchg
orb
push
mov
les
sarb
mov
lods
jne
xor
nop
add
cmp
inc
xchg
add
jmp
rcrl
repnz
imul
movb
scas
push
fcomps
test
and
or
adc
xchg
cmpsl
mov
outsb
mulb
stos
fmuls
pushf
cmp
jo
ret
jle
outsl
test
push
push
jle
nop
aas
sub
mov
mov
dec
scas
mov
jb
add
push
shl
pop
fidivs
aas
sub
push
pushf
or
pop
mov
jmp
jno
xor
rcl
sbb
and
xchg
push
mov
push
adcl
enter
popf
add
jmp
push
nop
sbb
cmp
pop
or
adc
pushf
jnp
pop
and
jns
push
clc
add
lds
adc
pop
mov
aas
mov
mov
pop
add
push
mov
push
and
pop
addr16
lcall
dec
cltd
andl
loopne
push
sub
push
mov
sub
cmpb
in
scas
repz
gs
add
loop
jle
mov
shlb
jns
push
cmpsl
xor
call
add
jnp
and
aam
pushf
rclb
jl
aas
pop
mov
jb
inc
int3
push
sbb
movsl
push
or
cmpsl
xchg
push
sub
imul
fsts
mov
pushl
stc
sahf
inc
std
fnsave
inc
xor
orl
pop
les
inc
mov
ret
es
xchg
stc
ret
scas
hlt
xlat
xchg
push
addr16
fcomps
loope
or
mov
aaa
xor
pushf
and
cwtl
jmp
xchg
xor
sarb
inc
sbb
push
std
mulb
out
adc
mov
fs
fisttpl
jl
out
cmpb
cmp
cmpsb
enter
sub
iret
push
push
out
jmp
mov
mov
hlt
repz
push
inc
add
sub
pop
orb
in
jno
dec
cmp
lods
add
pushf
jo
pop
push
out
dec
jbe
call
cwtl
mov
xor
pop
mov
jle
insb
xor
dec
push
push
leave
out
and
mov
shrb
mov
fwait
mov
outsb
imul
mov
shrl
push
cwtl
mov
jne
clc
lods
adcl
repnz
adc
daa
jle
je
sbb
loopne
jno
addr16
xchg
repnz
dec
scas
mov
sti
and
mov
mov
into
cmpsl
jo
ret
ja
ret
jmp
push
and
xor
adc
sbb
shll
mov
xor
sub
ret
loope
imul
or
sub
cmp
inc
and
dec
enter
xchg
pop
xor
insb
imul
das
mov
hlt
js
int3
aas
addr16
mov
mov
add
imul
sbb
clc
sbb
or
lds
dec
in
in
push
call
lahf
inc
insl
push
xor
or
loop
js
in
jne
jl
cmp
fmull
loop
xchg
sub
nop
fcoml
jmp
cmp
cmp
sbb
mov
cwtl
inc
and
cmc
pop
mov
test
repz
mov
cmp
cmp
and
mov
in
mov
repnz
fistpll
cmpsb
xchg
insb
outsb
into
sbb
dec
pop
popl
push
adc
jae
enter
into
dec
mov
mov
rcrb
push
and
bound
push
mov
inc
bnd
aas
loope
mov
cmp
fmul
std
nop
mov
cmp
test
repz
ja
inc
cmp
aam
rcrb
jg
test
pop
mov
xor
fcoms
test
lcall
push
repnz
imul
scas
fucomp
push
outsb
movsb
lret
enter
adc
sub
or
imul
shr
fisubrs
out
in
ret
lock
mov
popa
xor
inc
repz
mov
outsl
sarb
in
test
push
les
leave
or
out
stos
pusha
inc
lret
dec
out
insb
sub
cmp
and
cmp
clc
cs
cs
mov
push
shlb
mov
xchg
scas
mov
sub
ja
nop
and
mov
std
movsb
mov
ja
dec
or
mov
mov
outsl
inc
fmul
jecxz
fsubrl
imul
imul
test
fisubs
rorl
inc
lock
add
arpl
mov
xchg
mov
movsl
lea
add
jae
mov
xorb
or
mov
lea
lds
popa
je
jno
jmp
lcall
mov
dec
jno
cs
test
rolb
pop
mov
nop
push
out
imul
clc
adc
push
pop
mov
mov
cmc
movsb
popa
or
sti
mov
rcrl
inc
movsb
cli
push
stos
cmp
enter
js
dec
xchg
mov
jno
into
ds
stos
aaa
jbe
call
mov
mov
loop
sub
cmpsl
aaa
mov
je
xchg
add
loopne
xor
ds
dec
cmp
sbbb
int3
cmp
test
out
aas
out
or
imul
mov
pop
sahf
add
and
arpl
xorl
inc
jbe
cld
sbb
pushl
aaa
ja
fisubrl
inc
test
movsl
movsb
outsl
sti
rclb
nop
shrb
dec
bound
jbe
lret
lahf
leave
cmpsl
testb
icebp
dec
arpl
enter
pop
push
mov
scas
mov
lods
adc
inc
fcoml
aaa
sbb
sbb
xchg
psubsw
mov
xchg
scas
shlb
xor
jl
mov
rcrl
in
xorb
repnz
pop
outsl
mov
inc
out
mov
inc
test
in
mov
or
cwtl
cmp
sbb
out
sbb
scas
cmp
rcll
xchg
js
aam
fidivrl
xchg
inc
les
pop
insl
shll
dec
mov
sahf
jno
mov
nop/reserved
dec
pop
jl
pop
lea
frstor
dec
inc
push
jg
ffree
lods
inc
push
repz
aas
rcrb
cmp
xchg
es
mov
and
jo
repz
xor
cltd
and
jmp
cmp
js
dec
push
xchg
push
stos
pop
cmpps
int
add
lcall
mov
imul
jne
aas
lock
dec
pop
or
mov
repnz
iret
xchg
pop
mov
xor
mov
in
insb
js
nop
cmpsb
jbe
mov
sub
mov
adc
dec
adc
and
dec
and
mov
sub
jle
fmuls
gs
xchg
int3
aaa
push
pop
or
sbb
test
andl
rcll
fsubrs
das
cs
lret
cmp
pop
pop
aaa
jg
out
push
test
add
scas
sub
cltd
jge
sti
inc
pop
add
sub
pop
jns
repz
fistpll
mov
cmpsb
jb
and
int
adc
dec
mov
es
ret
xchg
jmp
test
push
mov
icebp
lds
jmp
jo
ja
test
mov
push
jne
popf
cmpsl
inc
and
sub
or
das
mov
xchg
loope
mov
aaa
xchg
mov
pop
nop
pop
lods
xor
inc
xor
out
stc
rcll
jne
testb
push
or
fsts
and
push
clc
xchg
outsb
icebp
lods
shrl
ret
orb
aam
loop
movsl
data16
div
mov
iret
cmp
inc
bound
jmp
pandn
out
sbb
loopne
xor
divl
xor
in
add
xchg
pop
outsb
lahf
sub
sub
jne
test
lods
pop
subb
push
jo
mov
dec
jg
outsl
popa
pop
and
nop
mov
add
cmp
jnp
outsl
stos
filds
sub
mov
gs
jbe
addr16
push
mov
repz
lret
xor
repnz
cmpsl
movsb
sub
jns
popf
fwait
and
lds
mov
repnz
pop
scas
das
lret
adc
sub
pop
loopne
xor
dec
fistpll
pushf
jg
jmp
fisubl
jl
mov
in
inc
and
add
xchg
sub
aaa
push
dec
adc
lahf
fsin
cmpsb
push
stos
js
and
jecxz
cmpsl
popf
mov
hlt
mov
shrl
jnp
jecxz
and
jmp
cltd
imul
fbld
js
add
cli
mov
hlt
push
pop
test
iret
jns
movaps
stos
fsubr
in
rcl
and
pop
pop
xchg
pop
jae
rorl
mov
mov
mov
test
fdivrl
push
movsb
inc
cmc
add
lods
mov
cmp
jns
stos
in
cli
and
and
decl
xchg
sbb
lods
jns
xchg
and
xchg
out
nop
out
push
jmp
fdivr
insl
push
mov
mov
sarb
ret
cwtl
ss
out
shrb
fld
data16
repnz
mov
cs
cmc
jne
je
stos
pop
dec
or
enter
add
inc
outsb
cmp
out
pusha
sbb
iret
dec
fsubrs
jp
popw
adc
jp
add
jns
or
adc
jge
jecxz
sar
mov
rcll
xor
mov
pop
fcmovne
adc
push
xor
or
adc
mov
and
sti
ja
stc
push
jp
adc
jmp
mov
mov
sbb
inc
add
xor
jb
cmpsb
sub
jg
aas
sbb
push
adc
mov
pop
sbb
mov
jg
das
lret
in
popf
inc
inc
add
push
test
jg
lods
scas
sarb
mov
xchg
inc
popa
adc
or
xchg
aad
les
addr16
jmp
push
nop
negb
cmp
popf
jecxz
mov
mov
nop
or
fisubl
mov
push
xchg
int
scas
scas
or
fnstenv
pop
aam
sub
call
cmp
outsb
pop
push
sbb
sti
jg
bnd
shl
lahf
imul
or
adcl
jnp
cmp
sahf
loop
je
pop
arpl
lea
fistpll
out
mov
xor
or
sbb
and
add
loop
je
mov
aas
push
lock
adc
sub
mov
cld
pop
les
sub
jns
gs
lds
push
jle
xlat
fsubs
add
std
int3
cs
mov
jecxz
mov
imul
mov
cmp
xor
push
movsl
adc
divb
or
sub
push
mov
cmp
std
lahf
pop
mov
or
push
sbb
push
cmp
fisttps
fisubrl
ds
pop
pop
test
ja
divl
inc
shr
aam
xor
or
mov
dec
leave
push
rorb
push
mov
cmp
ljmp
push
sarl
mov
ljmp
ljmp
xor
mov
test
cmpsb
loopne
fsts
test
dec
ds
dec
movsb
xor
pusha
std
push
ds
or
pop
subb
repz
add
iret
lret
aam
sub
inc
cmpsl
mov
jbe
lret
adcb
call
pop
pop
shlb
mov
sub
rorl
in
fwait
sbb
test
divb
es
pop
aam
mov
adc
data16
xor
and
xchg
push
cmp
vhsubpd
icebp
notl
repz
sti
bound
fisubrs
sub
xchg
cmpsl
aam
adc
fimull
sub
js
lock
mov
sbb
clc
bnd
add
sub
mul
xchg
inc
jne
jnp
pop
sbb
mov
ss
jno
cltd
enter
loopne
inc
pushf
mov
mov
call
xorb
xchg
mov
or
prefetchwt1
outsb
sub
mov
test
std
movsb
loop
and
cmp
cmpsl
push
jo
jmp
or
cmp
call
es
pop
scas
cmp
test
adc
clc
xlat
inc
aas
mov
arpl
scas
sub
pop
push
push
adc
mov
sbb
mov
jge
adc
mov
and
repz
cmp
sbb
rolb
bound
or
lods
fs
scas
push
pop
std
lock
lea
adc
fsubr
sahf
iret
imul
jae
push
push
in
or
test
outsb
push
rolb
sar
fldl
mov
stos
aas
loop
sub
dec
xor
shlb
add
mov
int3
ljmp
fwait
jbe
scas
cmc
sub
and
mov
jp
lret
leave
pushf
and
add
lahf
rcl
pop
shlw
dec
test
push
cmpl
rolb
dec
xchg
imul
movsb
xor
xor
push
mov
adc
mov
hlt
in
mov
xchg
notl
adc
idiv
or
xchg
pop
repz
cmpb
sbb
rorl
push
jecxz
jbe
cwtl
or
xchg
sub
imulb
pusha
jo
xchg
popa
inc
push
fwait
call
insl
and
jp
addr16
test
mov
int
fs
clc
cmp
cmp
js
test
or
xchg
pop
enter
cmp
lea
jns
cld
mov
jmp
cmpsl
push
mov
jb
das
loope
sbb
decl
dec
pushf
cli
dec
sbbl
cmpsb
pop
mov
and
adc
push
aam
mov
out
lret
mov
dec
roll
call
mov
ret
sub
and
sbb
js
or
es
fisubs
push
mov
sub
lods
lcall
inc
orb
dec
xchg
xchg
jmp
cmp
and
sub
daa
push
jp
and
shrl
xchg
xchg
xor
push
test
inc
pop
xor
rclb
scas
lret
incb
pop
or
movsl
ss
pop
ss
pop
ret
rcl
movsb
xchg
les
outsl
loope
jecxz
jo
dec
pop
xor
les
push
mov
fldl
call
out
mov
fdiv
out
mov
and
sub
push
mov
addr16
rclb
adc
push
pushf
hlt
stc
ja
pop
jmp
jmp
add
sbb
lds
push
dec
push
into
mov
push
mov
cmp
dec
outsl
add
outsb
dec
jg
pusha
popf
or
popf
jmp
inc
aas
mov
adc
into
mov
aaa
jge
sub
xchg
in
ffree
lea
jmp
lods
mov
sti
lret
bound
fiaddl
pop
scas
jae
pop
or
out
pop
sbb
xor
mov
addr16
sbb
lcall
xor
fistps
push
push
cs
aaa
pop
ss
out
jnp
or
mov
jns
sti
and
in
test
aam
push
jp
xchg
ds
and
aaa
fwait
out
inc
push
sbb
jge
pop
or
add
jb
sar
fidivl
hlt
and
mov
ret
pop
mov
jge
adc
xor
fdiv
loop
mov
push
ficompl
vprotq
popf
mov
mov
js
xlat
xor
test
mov
jp
lret
shl
push
outsb
dec
cmp
mov
mov
and
inc
call
or
popl
and
fldl
and
mov
adc
and
push
xchg
insl
xchg
cmp
jecxz
inc
fsubrs
fs
xorl
mov
mov
fadd
movsl
sub
outsb
jo
rolb
imul
and
push
cmp
inc
pop
icebp
and
enter
sub
jg
popa
repnz
dec
je
dec
fistpll
xchg
sbb
lahf
xchg
sahf
push
stos
into
lret
push
fstl
jbe
jecxz
push
mov
lret
lock
cld
add
scas
pop
fidivl
add
mov
adc
jp
sarl
jl
cmpb
cmp
fcomps
lret
add
dec
lods
xor
stos
push
fld
loopne
addb
decl
and
gs
jbe
xor
sub
sub
inc
sub
pop
js
es
xchg
pusha
imul
jg
inc
scas
pop
lds
scas
frstor
fcomps
mov
ret
fwait
mov
ljmp
pop
lock
vcvtss2sd
add
daa
psrld
ljmp
or
pop
jp
add
movsb
es
pop
jbe
mov
xchg
jge
push
repnz
bound
ljmp
lcall
inc
pop
push
in
insb
xor
and
movsb
lret
jne
cld
cmp
add
mov
cmpb
jae
mov
out
movsb
jp
stos
inc
repz
out
shll
into
sbb
pop
dec
jb
or
add
jnp
mov
inc
xlat
cld
clc
in
or
xchg
mov
lret
cmpsb
ss
adc
loope
add
pusha
outsb
outsb
outsb
jg
sbb
test
repnz
add
popf
jbe
pop
xchg
sbb
out
pop
ret
int
sbb
sbb
fildl
lret
inc
cmp
shrl
mov
pop
stos
pop
pop
sbb
fcomps
sarb
lret
xlat
loop
cltd
sub
push
mov
mov
jp
add
into
or
sahf
fnstenv
jo
xchg
adc
push
rorl
or
std
int
in
jne
fistpl
adc
dec
xchg
iret
popa
les
and
int3
adc
clc
fcmovbe
sub
cli
xchg
sbb
ffree
subb
sbb
aam
test
int
adc
push
dec
sbb
mov
sbb
add
mov
inc
pop
inc
jns
inc
nop
or
pop
sbb
mov
inc
jne
rcl
test
fwait
loopne
cmp
out
add
inc
mov
pop
dec
rcrl
aaa
movsl
out
imul
test
mov
inc
sub
or
cmp
or
fnsave
xor
shll
and
push
mov
lret
xor
mov
mov
dec
push
cmp
aas
pop
nopl
rcll
push
je
ljmp
loop
sbb
add
inc
icebp
arpl
jmp
sbbl
mov
pop
push
inc
sbbb
out
sub
nop
scas
faddl
xlat
leave
sbb
adc
sahf
pop
cmpsb
ficompl
movsb
jo
popa
adcl
xchg
cmp
addr16
and
cmpsl
loope
gs
jb
adc
popw
inc
cmp
add
ret
sbb
test
dec
sbb
fcomi
push
mov
leave
pusha
mov
xchg
cmpb
icebp
aaa
xchg
push
es
cmp
pop
fiaddl
pop
sub
jno
inc
push
imul
push
fidivrl
mov
lea
mov
lcall
jb
xor
push
pop
test
xor
dec
xor
sub
repz
rclb
ja
cmp
es
lods
mov
icebp
pop
mov
sbb
cmp
in
int
push
push
stc
pushf
cmp
fwait
cmp
add
adc
into
jl
pop
mov
push
mov
xor
in
lret
jae
sbb
mov
test
push
cmp
dec
popf
adcb
data16
mov
lahf
jo
dec
pushf
call
xchg
repnz
push
adc
gs
and
lock
stc
inc
xchg
adc
adc
mov
stc
dec
stc
push
cmp
or
cmpsb
repnz
mov
outsb
xchg
push
cwtl
hlt
mov
adc
neg
push
negl
mov
int
aaa
imul
call
or
data16
xchg
cmpsb
fwait
and
inc
and
inc
mov
sbb
jno
dec
stos
xor
and
clc
add
mov
push
adc
scas
loopne
enter
sbb
lock
cmp
cmp
add
ret
xchg
jne
bound
stos
imul
int3
test
fs
or
inc
iret
push
in
outsb
and
insl
fldcw
adc
bound
pop
push
dec
mov
fdivrp
sbb
inc
mov
lds
push
scas
fwait
mov
pop
sbb
ret
test
into
cmpsl
inc
sti
or
bound
cli
out
imul
inc
xchg
inc
inc
ret
sub
fdivrs
loopne
xchg
stos
mov
sbb
scas
push
cmp
push
lahf
pop
mov
mov
cmc
cmp
mov
fisttps
jp
rolb
mov
fiaddl
lret
dec
add
push
sti
mov
out
mov
adc
pop
inc
jg
or
bound
add
xlat
mov
mov
in
mov
in
icebp
sub
cmpsl
sahf
sbb
mov
scas
fwait
mov
xchg
test
mov
int
pop
sub
fadd
mov
insl
xlat
pop
sub
push
into
lcall
adc
push
je
out
push
mov
xor
mov
lcall
xchg
pop
jge
leave
mov
or
aas
int3
cmp
aam
stc
push
cmpl
inc
sahf
sub
dec
push
jmp
lret
inc
xchg
adc
dec
int3
aad
es
or
xchg
popf
adc
popa
stos
jp
imul
lcall
cmc
jecxz
sub
add
push
pop
jecxz
inc
aad
add
fbld
in
or
inc
pop
out
xchg
cmp
push
mov
dec
mov
jle
mov
fisttpl
out
clc
sub
fdivp
or
dec
jnp
cmpsl
ljmp
enter
outsb
call
ds
cs
pop
and
imul
adc
shl
inc
je
ret
xchg
jo
push
or
lcall
aaa
repnz
jl
push
or
mov
add
lcall
or
daa
movsl
loopne
fildl
insl
jno
add
dec
ss
ljmp
jne
outsl
test
xor
cs
outsl
mov
psubb
push
stos
push
dec
inc
sbb
lahf
xchg
jle
cwtl
leave
loopne
cmpsb
jge
adc
or
push
nop
push
jne
jge
add
sub
lds
cmp
lds
cmpsb
pop
jno
loopne
je
adc
cmp
push
fnstcw
and
mov
jbe
mov
push
mov
xchg
enter
pop
cltd
mov
cmc
jns
inc
add
add
andb
pop
and
add
push
or
inc
cld
push
popa
sti
xor
jp
xchg
mov
xlat
aaa
dec
inc
mov
jno
rorb
icebp
dec
adc
xchg
sbb
fs
xor
movsb
xchg
mov
mov
add
pushf
es
out
pop
pop
xlat
xchg
dec
adc
xor
popf
xchg
sahf
and
sbb
in
negb
hlt
icebp
jne
ja
xchg
movsl
xchg
imul
mov
jp
jno
jmp
adc
movsb
pop
mov
andl
pop
mov
pop
sbb
mov
dec
ja
aad
push
jmp
or
addl
mov
pop
lea
repz
cwtl
pop
lret
inc
mov
cwtl
push
fistl
mov
cmp
cmp
mov
aas
xchg
mov
in
int3
test
cmc
push
pop
aaa
push
sub
ret
shlb
push
jae
jle
xchg
sahf
push
pop
adc
cltd
sub
insb
adc
ds
loopne
mov
scas
or
xchg
adc
das
mov
adc
sbb
push
mov
ljmp
mov
in
mov
mov
or
movsb
or
inc
in
rclb
pop
jo
and
dec
jbe
insl
insb
movsb
and
test
mov
test
jecxz
stos
stos
jp
dec
xor
adc
inc
subb
lahf
xlat
lret
stc
push
sub
outsb
xchg
fcompl
mov
fidivl
mov
or
sub
inc
push
jmp
jle
pop
mov
fdivrs
mov
xchg
push
sub
stos
inc
stos
fistl
mov
sub
sbb
and
ja
dec
cmp
into
or
int3
cld
iret
xor
mov
sub
sbb
loopne
pop
inc
adc
sub
mov
jecxz
icebp
push
test
add
sub
movsb
push
mov
adc
test
testb
mov
mov
xor
mov
jbe
xor
xor
imul
subl
mov
repz
dec
mov
test
adc
fisttps
jno
xlat
adc
in
ret
add
xor
into
repz
jno
lds
ss
fldcw
jecxz
fisubrs
fs
pop
mov
push
jnp
cmpb
sbb
inc
inc
das
fdivrs
fnstcw
popa
stos
icebp
enter
cmp
ds
pop
mov
movsl
mov
xchg
outsb
mov
sub
jb
xchg
icebp
push
lods
outsl
xchg
mov
cmc
xor
les
cs
shll
fs
call
push
imul
ret
sub
pop
ret
and
out
jl
arpl
lahf
or
or
imul
sbb
fdivrp
mov
jl
jno
sbb
addb
aas
pop
cli
mov
es
push
fistpll
xor
adc
int
stos
clc
sub
cwtl
mov
add
out
in
lahf
adc
cmc
push
pop
shlb
mull
add
pop
fadds
mov
gs
pop
push
sub
lcall
or
mov
push
and
cs
cmc
ds
cltd
div
ss
movsl
cmp
jge
mov
or
dec
xchg
jg
into
loopne
jg
cmc
push
dec
pop
repnz
pop
clc
add
mov
fildl
xlat
push
mov
test
cs
lock
addl
inc
mov
push
push
daa
jno
imul
inc
ror
out
aad
fsubrl
shl
fidivl
mov
sbb
pop
ja
test
and
pop
dec
ficompl
sub
xor
push
or
mov
or
pop
scas
xor
push
out
ficomps
leave
jae
fistpl
and
rcrl
xchg
test
adc
mov
arpl
pop
mov
stos
hlt
mov
dec
sub
push
dec
lcall
sbb
inc
xor
jo
in
add
dec
push
out
sbb
xchg
insl
repz
imul
cmp
jbe
push
sub
push
aaa
mov
pop
push
push
xchg
push
jbe
enter
xor
jge
mov
cmp
xor
cmp
out
sbb
cmp
clc
push
jae
lret
or
pop
call
dec
aaa
testl
cmp
and
sub
or
jp
es
arpl
and
dec
out
mov
adc
addr16
mov
xor
test
gs
push
inc
andl
or
jae
ret
mov
ja
aas
loope
shl
inc
fistps
ret
popf
into
scas
mov
in
and
test
xor
jle
add
icebp
imul
pusha
out
adc
or
cmp
or
scas
jmp
das
sub
and
shll
pop
loop
mov
dec
push
jg
fadds
sub
movsb
hlt
or
outsl
jb
std
lods
enter
mov
inc
xor
mov
iret
sbb
add
xchg
xor
repnz
out
mov
sbb
sub
mov
jno
repnz
xor
mov
in
fcomps
ss
imul
mov
inc
mov
popa
movb
repnz
lret
es
push
push
xor
cmp
je
das
dec
js
sbb
popa
sub
sub
mov
notl
mov
ja
das
and
sub
lahf
xor
jbe
fstl
jmp
std
push
ja
lods
mov
rol
cmp
out
jmp
and
push
stc
movsb
sub
mov
cmpsb
sbb
and
dec
jnp
les
sbb
es
cld
sub
clc
sbb
icebp
out
js
ror
jo
add
xchg
mov
jmp
aaa
outsl
sbb
or
nop
push
or
mov
cmp
fucomi
xchg
inc
jge
lcall
arpl
outsl
sub
daa
mov
out
aas
jecxz
or
or
dec
movsl
lods
pop
and
in
cld
in
push
dec
sub
inc
add
push
inc
das
mov
ret
jbe
lcall
cmp
sbb
and
push
outsl
push
jp
cmpsl
in
mov
js
cmp
sbb
pop
fsubr
mov
xor
arpl
adc
imul
mov
adc
sbb
addr16
mov
out
adc
or
fwait
roll
xor
inc
outsb
jnp
mov
shlb
jb
gs
sub
xor
mov
lahf
jmp
or
push
out
cli
dec
add
fmul
inc
push
sahf
mov
jno
insb
push
nop
popf
and
in
add
aad
sub
daa
jae
and
fldcw
lcall
push
adc
inc
sub
daa
mov
push
adcb
lret
rorb
std
daa
test
sub
jmp
ret
jb
iret
push
mov
cwtl
jmp
cltd
jmp
cld
pop
lret
out
pop
sbb
bound
js
cltd
dec
cltd
and
xor
cmp
adc
sarb
pop
nop
lods
cmp
add
xor
jge
lret
iret
inc
sub
insb
ror
xadd
sub
and
mov
leave
push
and
into
dec
pop
movsl
xor
pop
xor
cltd
fsubl
fs
mov
sub
dec
pusha
add
mov
mov
aas
push
mov
arpl
insl
jae
pop
mov
shll
mov
lcall
sbb
iret
aam
nop
in
cmp
mov
inc
repz
inc
or
jg
mov
cli
inc
call
rclb
and
in
fldenv
cmp
sti
loopne
dec
fcomps
push
adc
repz
pop
jne
xchg
lock
out
or
jp
dec
jle
aaa
or
ret
dec
sbb
and
pop
sbb
test
mov
insl
adc
les
ja
push
ret
fs
add
int3
mov
sahf
mov
or
cmp
out
aaa
sbb
sbb
push
subl
xchg
jno
or
fsts
out
sar
sbb
nopl
lcall
jbe
enter
sbb
fld
das
add
mov
repz
lret
test
jle
arpl
dec
lds
hlt
ds
aad
pushf
mov
jns
sti
xor
sub
cltd
ss
push
cmc
and
xor
sbbl
xor
jp
int
jecxz
adc
lcall
stc
or
sarb
cli
mov
scas
ret
pop
mov
pop
xor
fucomi
lret
mov
in
jle
sub
and
int
call
decl
xchg
ja
mov
cmpsb
int
inc
sbb
stc
push
mov
or
xchg
and
notl
pop
movsl
jmp
bound
adc
mov
xchg
dec
outsb
mov
into
idivl
cld
out
push
push
mov
pop
sub
popl
fnstsw
jge
sbb
fistps
mov
jmp
std
ja
xorl
ficoms
xchg
out
shl
jecxz
push
mov
shll
in
call
xor
stos
add
or
std
lods
and
ret
cmpsb
imul
outsl
vmread
pop
rol
add
xchg
xchg
iret
jle
xchg
fsubl
mov
lcall
or
pop
sub
movsb
shl
je
add
mov
mov
xchg
mov
inc
sbb
fucomip
cli
insl
fdivr
in
sbb
addr16
xchg
scas
jle
jnp
not
aam
mov
add
ret
aaa
shlb
cwtl
cmpl
fldenv
jne
addr16
icebp
std
jle
jecxz
xchg
popa
or
lods
add
insl
aam
mov
push
mov
mov
leave
and
xchg
jmp
mov
aaa
outsl
cmc
xchg
dec
cld
or
push
in
mov
stos
pusha
lcall
ljmp
jge
ss
cwtd
imul
imul
or
push
inc
push
lods
add
mov
or
inc
test
xlat
jnp
mov
ret
jno
and
cli
inc
scas
cmc
imul
cmpsl
insl
cmc
std
inc
jl
das
cwtl
pop
dec
test
push
sbb
jne
xchg
jp
jmp
inc
ret
ficomps
lock
iret
mov
cmpsl
mov
push
dec
cmc
mov
mov
lea
repz
mov
icebp
rclb
xor
xchg
pop
pusha
jo
pop
push
push
ja
inc
adc
mov
mov
mov
in
mov
fnsave
lea
cmpsl
and
mov
ret
mov
imul
gs
clc
adc
and
xor
inc
sarl
in
mov
lock
stos
mov
repz
scas
sbb
dec
aam
mov
pop
lods
test
mov
incl
data16
sub
lcall
cmp
push
test
jmp
lret
sti
outsb
adc
jmp
xchg
fstps
jne
sbb
fs
push
fmulp
jle
sub
lcall
dec
dec
and
adc
cmp
or
in
scas
mov
iret
jbe
sub
fstl
stc
xchg
out
out
sarb
jle
ja
sbb
dec
lea
outsb
cmp
jo
adc
sub
out
sbb
aad
sbbl
outsl
jno
jbe
and
dec
ljmp
xchg
addr16
scas
dec
imul
lahf
and
dec
les
sub
sub
and
adc
push
in
fmuls
vxorps
xchg
xchg
sbb
push
xor
push
lock
inc
cmp
mov
out
mov
add
cwtl
ds
leave
test
pop
jne
mov
mov
ds
rcrl
add
cs
jecxz
pop
lcall
into
call
daa
in
insl
sbb
shl
mov
or
pop
adc
or
mov
int
js
jmp
das
sub
mov
adc
clc
jle
subl
jg
xchg
ret
pop
test
subl
push
mov
pop
mov
xchg
pop
nop
jne
jns
fs
fldcw
mov
jne
lods
pop
and
ret
in
inc
add
cmc
sbb
add
test
pusha
sub
mov
scas
mov
das
stc
xor
xchg
jae
shl
popa
push
xchg
push
mov
add
mov
incb
call
xor
mov
xchg
cld
jp
insb
inc
lock
insl
loop
sbbl
lret
xor
lahf
xchg
jnp
mov
das
movsb
test
fbstp
inc
and
test
pop
ja
sub
ret
loopne
std
cmp
sub
pand
xor
push
add
push
rorb
loopne
cmpsl
js
daa
jl
lcall
add
inc
cwtl
dec
inc
mov
cmp
pop
push
movsb
push
rcrl
in
dec
daa
pop
or
mov
mov
aam
out
mov
sub
and
inc
daa
andb
leave
jmp
cld
pop
jecxz
pop
xchg
xor
mov
jno
mov
cli
xor
push
or
std
xchg
pop
repz
fcoml
sbb
scas
xor
pop
fldz
cli
outsb
mov
adc
dec
pop
out
mov
inc
fisttpl
ja
sub
dec
mov
jne
scas
xchg
push
push
sub
push
aad
inc
sub
cltd
jne
mov
add
daa
lock
and
pushf
push
adc
es
xor
pop
mov
lock
jns
ja
pop
inc
cmpb
push
xor
daa
jecxz
es
lret
lds
gs
mov
cmpsb
mov
jmp
pop
fidivrs
dec
push
sub
pusha
jmp
insb
or
fucomp
sub
ficoml
sub
push
mov
push
in
push
pop
into
fiadds
inc
jo
push
aam
mov
lods
into
loop
xchg
out
fsubrp
cmc
sub
dec
cmp
int3
cld
mov
imul
sahf
and
or
and
sub
xlat
or
dec
loope
out
push
push
sbb
hlt
add
into
push
movsl
loop
lret
stos
jg
pushf
in
jmp
fisubl
xor
mov
dec
jnp
test
je
lret
push
je
loope
pop
cltd
stc
in
xchg
push
pop
mov
push
daa
je
xchg
into
cwtl
and
out
in
jae
jmp
cltd
pop
lods
pop
push
lcall
adcl
loope
enter
leave
test
test
add
push
sti
or
clc
ja
in
fsubrl
stos
das
add
lret
pop
stos
pop
jb
cmp
push
mov
sbb
sbb
dec
xchg
sub
lret
sti
push
shrb
ds
lahf
cmpsl
push
cmpsb
sub
lret
jmp
push
sub
mov
pop
insl
icebp
sarb
jle
pop
sub
adc
pop
and
push
pop
push
jbe
jno
adc
shl
ret
jmp
bound
adc
fs
sub
inc
xchg
insb
stos
pop
and
dec
lret
sahf
in
xor
mov
into
nop
and
nop
cmp
mov
out
faddl
cli
cmp
inc
mov
loop
imul
lds
mov
xchg
mov
scas
pop
hlt
xor
jmp
leave
test
out
push
dec
mov
inc
sbb
lret
adc
sbb
es
cmp
and
dec
jge
fdiv
arpl
mov
mov
jbe
repnz
imul
jl
and
mov
pop
in
inc
xchg
push
scas
repz
and
insb
push
call
sbb
popa
push
fmuls
imull
out
push
out
xorb
add
adc
stc
imul
xchg
dec
or
inc
movsl
in
jnp
cmp
pop
test
in
mov
cwtl
cltd
and
inc
adc
pop
outsb
xor
xchg
out
insb
in
pusha
lods
stc
or
push
andb
xchg
pop
sarb
mov
inc
mov
daa
cmpb
pop
cmp
jmp
cmp
es
jno
sbbl
pop
scas
or
pushf
cmp
bound
hlt
movsb
push
stc
fcmovnu
std
pushf
and
in
and
cld
jle
arpl
subl
js
fs
and
sub
mov
mov
jg
test
mov
push
xchg
or
and
rcll
rcll
adc
sahf
push
xchg
sub
popf
xchg
mov
shlb
aas
lods
inc
aam
cltd
mull
cmpsl
adc
xlat
ret
movsl
fsubl
push
cmpsl
mov
mov
ss
inc
xchg
xlat
dec
insb
shl
imul
xor
cmp
cmpxchg
xchg
sbb
pop
jle
and
scas
xchg
mov
add
adc
imul
xchg
sbb
mov
pop
mov
insl
ds
mov
or
in
adc
inc
fildll
rcl
xor
mov
pop
xchg
movsb
xchg
fwait
test
inc
sbb
movsl
push
or
fdivs
sub
aad
dec
mov
or
or
pushl
nop
dec
mov
rcll
adc
push
cmp
loopne
dec
scas
xchg
or
mov
lret
dec
pop
push
inc
jge
shll
push
rorl
outsb
fcomps
sub
ss
xchg
mov
js
sbb
fs
mov
fstl
and
neg
xlat
xchg
cltd
int
lock
xchg
sub
xchg
adc
mov
dec
in
sub
cmp
subl
jp
mov
imul
mov
mov
cltd
and
sub
int3
mov
stos
dec
int3
repnz
pop
dec
push
mov
shll
mov
cmp
popa
aaa
stc
sbb
xchg
pushf
push
mov
sbb
jbe
add
lcall
imul
jp
or
cli
mov
lahf
std
cli
out
or
movsb
push
aad
mov
mov
ret
mov
gs
jmp
subb
dec
jp
xchg
cmp
pop
push
xchg
jnp
int3
xchg
inc
notl
fcomps
punpcklwd
xchg
xchg
or
data16
int
insl
dec
push
add
ja
pop
mov
lods
xchg
mov
fnsave
repz
cwtl
cmp
mov
imul
lret
stc
mov
mov
cmp
dec
push
aam
stos
call
repnz
xor
into
stos
out
sub
push
stos
dec
xor
pop
repnz
shlb
pop
adc
call
pop
aam
mov
lea
xor
fisubrs
ret
sbb
test
addr16
insb
xchg
lahf
pop
adc
add
in
test
fldl
shll
loope
mov
mov
cwtl
xchg
push
shll
xchg
mov
xchg
mov
fcmovb
outsb
jns
leave
scas
das
cmp
repz
aam
push
insb
mov
push
jmp
cmp
xorl
push
jle
ss
out
pop
jbe
and
cmpsl
cld
out
push
fldt
jbe
sbb
es
je
mov
adc
stos
sub
cmp
pop
xchg
adc
mov
sub
sub
sub
xchg
shlb
sub
call
shl
test
cwtl
and
push
ljmp
pusha
icebp
pop
mov
cmp
popf
aas
gs
les
gs
ficoms
dec
sahf
push
es
mov
jne
push
and
nop
hlt
out
flds
or
mov
das
push
add
mov
mov
sbb
stos
xchg
int3
cwtl
jp
in
pop
or
jmp
xor
roll
sahf
out
push
out
repnz
sub
jo
add
mov
mov
inc
jnp
and
in
adc
jb
inc
flds
pop
hlt
aaa
aaa
mov
test
mov
adc
lds
ljmp
push
lock
jmp
push
arpl
dec
lock
push
xchg
mov
push
fmull
or
cwtl
pop
shlb
shlb
imul
push
add
push
rcl
popa
outsl
dec
movsb
mov
out
cmp
in
rclb
shr
xchg
fimuls
sub
jae
push
and
arpl
addr16
mov
xchg
push
mov
jb
mov
movsb
adc
ljmp
in
pop
hlt
sbb
in
aam
push
dec
mov
das
loop
sub
out
xchg
fwait
push
notl
out
shrb
pop
pushf
and
jb
sub
push
xchg
xor
orb
sub
int3
jmp
adc
inc
adc
loopne
jbe
es
dec
xor
and
lret
mov
int3
cmpsb
fisubl
dec
mov
aad
xchg
lahf
sbbb
in
or
ljmp
add
fidivs
add
call
cmp
fdivs
lods
aam
xchg
and
xchg
fiadds
imul
jo
aad
pop
adc
into
pop
mov
int
fistpll
add
lock
push
pushf
fcom
inc
xchg
ds
test
push
mov
loopne
das
push
movsb
mov
lea
jge
dec
fwait
adc
in
leave
shlb
out
nop
mov
jle
sub
push
xchg
testb
jge
xor
cmp
adc
adc
jmp
aad
cmp
repnz
xchg
shl
les
inc
pusha
mov
dec
jnp
mov
ficomps
movsl
xor
ljmp
jge
ss
xor
xor
dec
sub
stos
xor
xor
iret
out
test
inc
sub
lock
pushf
xchg
and
rorl
add
mov
cmc
enter
fimull
neg
dec
push
iret
sub
jg
mov
iret
pusha
adc
jo
mov
cwtl
popf
mov
add
ffreep
stos
add
jp
scas
mov
xchg
scas
repz
je
popf
jp
push
or
adc
or
pop
imul
sbb
cmp
sbb
push
xor
push
shl
pop
loop
push
insl
ljmp
mov
mov
xlat
xor
pop
mov
pusha
push
fidivrl
pusha
dec
mov
push
leave
fwait
cmpsb
add
gs
mov
aas
mov
sti
test
pop
movsl
adc
mov
data16
sub
push
lods
jmp
jle
in
pusha
loopne
jb
xchg
icebp
inc
jle
out
das
ss
sbb
inc
cld
dec
pop
jmp
push
sub
pop
fidivl
sub
cld
out
mov
ret
dec
incb
out
push
pop
in
mov
shlb
jne
loopne
jnp
jae
add
popf
in
sarb
mov
xor
jecxz
jns
xor
jo
push
and
xchg
xchg
cwtl
inc
cmp
fdivr
in
jge
leave
mov
cmp
push
adc
jo
cmp
shl
sti
push
xchg
push
xchg
adc
push
pusha
xor
pop
adc
daa
out
pop
cs
imul
lods
ljmp
fstpt
fnstsw
and
test
mov
ret
sub
dec
push
repnz
add
sub
sbb
jns
cli
adc
push
jns
or
inc
lds
or
aam
sub
lds
mov
lret
mov
stos
stc
arpl
mov
fs
and
out
push
shrb
es
insb
mov
mov
push
inc
cmpsb
hlt
mov
cmp
xlat
mov
inc
push
subl
dec
adc
loopne
mov
push
xor
inc
lock
mov
cmp
ret
sub
idiv
jge
std
aad
mov
push
push
bound
fisubl
sbb
inc
xor
mov
pushf
add
jne
jp
push
dec
xor
lret
adc
xchg
xor
lock
push
iret
lods
ret
inc
inc
xchg
pop
fnsave
xor
shll
and
cmp
outsb
xchg
arpl
outsb
xor
add
arpl
push
mov
mov
js
insb
lods
adc
and
addb
add
cmpb
test
pop
add
out
insl
fisubs
mov
stos
in
pop
outsb
daa
in
test
leave
hlt
jno
roll
loop
rcrl
sbb
jge
jge
xchg
cli
pop
mov
sbb
es
stc
push
in
stc
repz
shr
mov
les
fcompl
inc
pop
push
sub
cli
or
insb
mov
fstps
mov
pusha
sub
sti
aad
xchg
stos
ja
fnstsw
data16
test
fisubs
inc
lret
ja
aam
and
pop
xchg
cmp
jbe
mov
mov
xor
push
push
mov
adc
jge
sub
in
adc
fcmovu
rolb
pop
xchg
or
imul
mov
and
xor
fwait
sahf
subb
jg
pushf
leave
xchg
or
test
lds
out
push
jmp
cmpsb
lret
dec
xor
outsl
inc
and
insb
push
test
cmpsl
add
repnz
or
fcmovne
add
and
push
push
in
and
test
gs
push
xchg
dec
xor
mov
pushf
sti
mov
jp
inc
adc
inc
lcall
cmp
repnz
push
adc
ffree
pushf
repnz
mulb
inc
subl
fwait
xchg
test
jae
xchg
dec
or
imul
stos
jg
sahf
imul
xor
xor
jae
pop
out
mov
fstps
int
xchg
daa
cmp
ret
lret
ja
or
xchg
push
lock
rolb
jge
loop
xchg
sti
das
push
pop
stos
add
adc
push
jne
cwtl
aad
scas
cld
iret
insb
int3
pop
jcxz
pop
adc
push
or
fdivl
and
sub
sbb
in
pop
xchg
xchg
cmp
les
cmpsl
add
cmpsl
loope
sub
push
xor
andl
pop
pop
and
lods
adc
and
mov
mov
jge
les
hlt
mov
cmp
mov
js
ret
test
test
jns
push
jmp
xorl
push
dec
mov
cmp
cmp
scas
pop
xor
mov
xor
push
xchg
push
lret
sbb
repz
push
pop
fdiv
inc
jge
stos
jns
or
xchg
aaa
push
sbb
into
sbb
ljmp
cld
or
fsubr
fisttps
psrld
fcmovb
add
test
hlt
mov
or
iret
lods
pop
fsubs
pop
fldenv
and
add
jg
dec
dec
call
aaa
pop
imul
add
inc
test
bound
fst
push
dec
cwtl
sub
xchg
fs
or
imul
mov
pop
inc
or
dec
sub
outsl
cmpsl
scas
sub
mov
fldcw
and
dec
add
xor
hlt
int3
lods
sbb
stos
xlat
jns
test
push
adc
mov
scas
xchg
mov
mov
inc
jno
adc
dec
arpl
cmc
push
hlt
ret
pop
pop
mov
jle
xchg
push
jg
inc
and
mov
in
andb
addr16
sbb
into
lcall
divl
lea
xor
aaa
push
sbb
adc
add
pushf
aas
dec
xor
xchg
sub
mov
xchg
push
sub
dec
pop
jp
testl
and
lods
cmp
cmpsl
lret
mov
jmp
leave
add
mov
mov
push
popf
jae
fiaddl
loop
xor
sar
mov
jge
cmp
dec
loop
movsb
lahf
rorb
pop
cmpsl
clc
jle
aaa
xor
and
push
das
fcoml
out
pop
add
xlat
pusha
inc
fsts
popf
add
test
sub
sbb
pop
loopne
fsubrs
nop
arpl
out
imul
lods
stos
test
mov
orl
cmc
loope
add
cmc
out
jg
ficompl
mov
and
lds
in
pop
mov
xor
outsb
and
test
outsb
mov
or
pop
rcrl
mov
addl
loope
and
lds
fnstsw
dec
dec
xchg
fldl
movsb
loope
cmp
movsb
cmp
nop
xchg
mov
mov
mov
pop
mov
fidivs
iret
mov
sub
lock
pop
cmp
icebp
mov
pop
gs
popf
ljmp
add
lahf
sbb
push
add
and
sbb
fs
add
mul
pop
add
fimuls
cmp
cmpsl
lahf
lods
aaa
inc
sub
sbb
loop
loopne
sbbb
lods
filds
xchg
sbb
mov
push
dec
mov
aam
shl
cmp
cltd
ja
imul
jb
sbb
sarb
mov
mov
pop
ss
mov
pop
test
bound
add
jnp
mov
push
dec
inc
repz
or
cmp
lahf
decl
daa
sbb
out
xchg
cmpsb
pop
movsl
xor
ja
frstor
lock
cmc
jo
push
xchg
mov
pusha
pop
jbe
push
ret
mov
int3
hlt
shrl
inc
test
dec
popa
iret
bound
sub
and
into
pop
inc
and
jb
xchg
and
rol
in
pop
pop
cltd
insb
add
cwtl
in
mov
enter
repnz
enter
xor
cmp
sub
mov
jmp
notl
gs
pop
in
dec
mov
je
mov
and
mov
int3
dec
sub
xor
jae
mov
sbb
cmp
in
cltd
or
lods
xor
sbb
xchg
mov
push
mov
ja
push
ds
sub
das
xor
dec
pop
mov
lcall
xor
jmp
in
dec
sub
jns
insb
push
adc
test
push
pop
cmc
lcall
sbb
jl
mov
push
mov
sbb
jb
jmp
jns
inc
dec
lock
cmp
mov
test
push
ja
leave
jns
iret
repz
cmpsl
xchg
push
push
mov
test
hlt
hlt
xor
shll
push
push
jecxz
pop
fmull
addr16
repz
int3
es
icebp
repnz
push
jb
push
jae
mov
out
cwtl
dec
lds
mov
sbbb
sahf
mov
pusha
out
cmp
xchg
lahf
xchg
pop
mov
cwtl
and
sub
push
mov
decl
cs
outsb
enter
or
rorl
or
adc
push
adc
mov
or
mov
sub
xchg
sub
fists
jno
pop
imul
sbb
filds
int3
jp
hlt
push
mov
pop
shrl
repnz
fwait
push
inc
push
dec
popa
xchg
bound
and
cld
int
test
leave
pop
xchg
sbb
into
xchg
adc
and
pop
push
and
xchg
push
out
pop
add
ljmp
stos
rorb
and
mov
xor
loopne
aas
repnz
or
dec
ret
iret
pop
cli
in
jmp
lods
test
dec
js
or
push
test
lds
xor
mov
mov
xor
shrb
jb
scas
push
sahf
arpl
cmpsb
pop
jp
loope
setge
test
movsl
adc
jb
pop
mov
add
cltd
inc
dec
jg
mov
mov
jno
das
add
cmpsb
sbb
fcmovnbe
dec
pop
xorl
hlt
xor
xlat
mov
in
movsb
pop
pop
and
pslld
pop
cltd
push
jmp
xor
nop
shl
lea
inc
mov
stos
faddp
xchg
mov
inc
pop
repnz
icebp
in
inc
add
mov
adc
lea
lea
jecxz
in
xchg
ja
lods
adc
jle
dec
gs
mov
out
or
sahf
jle
cmp
jp
fisttpll
or
lock
mov
jge
mov
insl
or
fmulp
lods
andl
xchg
bound
cmp
dec
outsb
xor
lods
call
shll
aam
andl
or
cltd
mov
xchg
jns
in
loopne
out
pop
pusha
jle
push
int
ss
inc
and
and
movsl
mov
das
call
xchg
adc
cmc
mov
les
out
in
or
iret
jmp
mov
mov
inc
jbe
arpl
adc
sahf
and
adc
mov
lea
xchg
imul
pop
jns
hlt
jp
xchg
cmp
shrb
aaa
pop
in
mov
push
mov
push
mov
adc
xlat
fbstp
mov
test
pop
cs
inc
adc
pop
mov
loopne
xor
mov
inc
mov
outsl
sbb
inc
test
mov
arpl
jmp
loopne
add
push
or
inc
iret
push
repnz
inc
inc
incb
js
ret
cld
pop
inc
int3
sub
sahf
fnstenv
and
mov
add
inc
lret
or
mov
cld
push
cwtl
popf
int
inc
insb
mov
outsb
mov
adc
mov
push
les
lret
mov
fwait
jl
int3
incl
xchg
rcrb
pusha
lods
out
sub
ljmp
push
and
fsubl
shl
je
sbb
dec
sti
outsb
cltd
mov
inc
mov
adc
rorb
std
nop
or
jns
lahf
jbe
jmp
or
jae
lds
fs
push
in
push
stos
mov
push
in
aam
jl
cmp
push
pop
adc
jo
ret
or
jb
cmpsl
inc
lcall
jns
test
pusha
jecxz
imul
and
bound
clc
jae
pop
mov
add
cltd
sub
and
lock
insb
mov
add
lcall
cltd
push
iret
aam
or
xchg
cmp
insb
mov
push
xchg
jbe
push
aad
clc
jecxz
popa
or
sub
sbb
jbe
add
dec
sbb
ja
out
push
push
push
mov
ret
push
ret
sub
sbb
sahf
lret
mov
sbbl
movsb
mov
movsl
mov
adc
or
jno
pushf
cli
mov
pop
ja
jae
mov
cmp
es
push
mov
xor
dec
lret
or
xchg
mov
adc
clc
sub
inc
jb
pop
mov
xchg
hlt
xlat
cli
loope
jno
adc
dec
adc
js
pop
cmp
xchg
dec
cmp
fnstenv
cmp
push
test
mov
dec
pop
dec
sub
outsl
mov
enter
out
adc
mov
dec
je
es
and
stc
mov
lret
and
cmp
xchg
and
pushf
cld
int3
cli
pop
orb
sarl
inc
lret
push
das
pop
mov
or
divl
adc
aad
test
or
movsb
inc
dec
xchg
jo
stos
dec
mov
aas
cmp
mov
mov
dec
and
and
push
adc
mov
adc
mov
or
xchg
out
push
mov
je
inc
inc
push
in
jp
mov
push
jae
lret
add
aam
mov
xchg
imul
mov
xchg
cmp
jo
jmp
testl
popf
repnz
or
jmp
aad
icebp
inc
adc
out
cmp
jecxz
inc
xlat
je
push
push
push
inc
shll
insl
ds
jecxz
mov
mov
inc
in
xor
or
std
xchg
or
xor
loope
mov
sub
ljmp
mov
fisttps
xor
add
repnz
cmpsl
ret
popf
mov
sub
add
movb
cltd
out
push
mov
xor
lods
test
add
inc
add
and
cmp
leave
call
imul
push
ret
jns
scas
mov
fs
cld
fdiv
adc
rorl
jmp
xchg
mov
push
shlb
mov
sbb
jo
jo
jno
pop
fbld
fcoml
mov
ss
mov
dec
pop
cld
adc
cld
jecxz
sub
xchg
andb
addr16
cmpsb
jl
xchg
out
cmpsl
sub
test
cmp
lret
sub
mov
inc
stc
jbe
cmp
fcoms
jecxz
mov
push
loopne
out
jmp
dec
and
jbe
repz
sub
lret
xchg
iret
mov
cmp
push
pop
push
mov
test
push
lea
mov
xor
push
fbstp
notl
add
fists
aaa
lds
inc
mov
xor
daa
push
add
cwtl
mov
mov
gs
mov
adc
hlt
ret
in
inc
sbb
jae
mov
inc
iret
mov
pushf
ret
mov
loope
and
ja
xchg
mov
adc
mov
dec
xchg
sahf
pusha
dec
inc
ret
out
sbb
data16
jae
ss
enter
push
jge
fldenv
mov
dec
dec
inc
xor
xchg
rol
adc
dec
push
mov
jb
shlb
sub
jno
add
xchg
cmp
dec
sbb
adc
imul
orb
jnp
mov
lahf
mov
add
ja
sarl
das
adc
out
cmpb
lds
flds
ret
pop
mov
cmc
and
sbb
xchg
jmp
lock
adc
out
mov
gs
mov
mov
jecxz
mov
and
lcall
mov
insb
loopne
or
fistl
cmp
mov
shlb
aaa
or
fwait
fs
mov
fnstcw
shrb
fadds
test
scas
repnz
mov
fistpll
outsl
pop
int3
or
lret
iret
jecxz
popa
inc
test
rorb
js
add
inc
or
testl
mov
sub
arpl
push
fmulp
je
sbb
rorb
test
aad
sahf
cmp
repnz
loopne
xchg
stos
add
cmp
pop
pusha
movsb
in
add
or
call
xor
sub
fimuls
inc
lea
cmp
cmp
scas
lcall
mov
lret
mov
sub
mov
push
add
fadd
mov
rolb
roll
push
mov
cmp
xor
xchg
and
call
cmpsl
cmp
iret
cmpsl
lock
pop
add
stos
or
nop
push
sarb
les
test
lahf
or
mov
fidivrs
aaa
push
out
fcompl
aas
dec
std
cld
mov
fdivrs
cs
jns
js
inc
loop
fsts
out
daa
sbb
in
mov
gs
jp
cmpsl
mov
aam
dec
andb
dec
mov
notl
mov
rcrl
or
inc
aam
sbb
mov
sbb
lcall
push
out
push
into
xchg
ja
shl
dec
push
cmp
push
lret
gs
dec
stos
out
arpl
loope
sarb
out
xchg
in
pop
xchg
jns
and
mov
jne
and
adc
push
wbinvd
aad
in
sbb
shlb
mov
xor
pop
sub
add
movsb
push
sub
mov
popa
pusha
repnz
sbbl
adc
dec
out
jecxz
ret
jno
stos
bound
mov
movsb
cmpsb
push
add
xchg
jnp
inc
adc
adc
adc
jmp
cmpsb
xchg
cs
xchg
and
xchg
pop
mov
scas
add
xchg
sahf
and
jns
insl
add
mov
les
jne
lcall
cmp
lret
aam
repnz
aam
xor
xchg
popa
sti
lcall
idivl
pop
lock
pop
sbb
xor
jno
roll
mov
ret
ds
xor
jae
jge
push
fadds
add
loopne
inc
fisubrl
mov
xlat
jp
or
jo
sahf
arpl
in
dec
fisttpll
and
add
xchg
push
mov
scas
cmp
cmp
daa
lret
jno
loope
dec
lahf
xlat
sub
inc
lahf
mov
mov
out
lods
fwait
jl
pop
sub
pop
jo
aad
or
add
mov
aaa
test
gs
sbb
jmp
repz
jne
mov
out
int3
cmc
insl
and
mov
sbb
mov
stos
push
cmc
das
dec
fstpl
sub
xor
lock
jno
pop
sbb
xchg
cmp
jns
addb
enter
push
sbb
cmp
lds
inc
inc
mov
cwtl
lahf
pop
das
fisubrs
mov
outsl
jo
push
pop
jae
mov
mov
mov
and
ja
je
or
rcl
inc
inc
xor
loop
pop
mov
cmpsl
push
inc
dec
insl
fistpll
jo
iret
dec
fisttpl
rorb
or
rclb
lea
xchg
sbb
cmp
outsb
lcall
outsb
in
push
clc
mov
adc
push
adc
inc
fisubl
sbb
outsl
fsts
jbe
out
mov
dec
das
leave
lds
push
mov
out
inc
xchg
xlat
push
stos
cmp
out
push
jnp
pushf
shlb
mov
idivb
dec
mov
sub
xchg
andb
ljmp
jnp
dec
cld
sbb
dec
cmpsb
nopl
jl
push
xchg
adc
jge
insl
es
cltd
or
sahf
stos
repz
mov
cmp
pop
cmpsb
cmp
push
test
xchg
popa
in
out
add
adc
mov
nop
cmp
arpl
ljmp
enter
sub
sarb
test
lea
notl
xor
pop
ret
or
add
hlt
sti
jp
out
fcomp
xor
fisubrl
loop
in
testb
les
fistpl
xchg
dec
fs
pop
mov
adc
or
outsb
mov
mov
or
and
inc
nop
jnp
mov
inc
ret
mov
ss
fistps
push
xor
xchg
loop
sbb
add
in
dec
add
xchg
jne
insb
inc
push
sbb
ljmp
xor
ljmp
imul
repnz
adc
jecxz
xor
mov
scas
jg
repz
outsl
pop
fdivs
fdiv
fs
lock
gs
scas
pop
leave
loop
inc
es
xor
rolb
push
cmp
push
mov
mov
std
add
sbb
mov
insl
data16
loopne
cmp
rcrb
mov
fldt
adc
jecxz
test
push
fwait
cmpsl
scas
dec
inc
stc
hlt
pop
test
sub
cwtl
push
sbb
aas
sbbl
xchg
xor
dec
sbbb
sub
cmp
cmp
mov
popa
mov
les
adc
les
sbb
xchg
add
mov
nop
sub
pop
pop
sub
sahf
xor
mov
cs
mov
sub
scas
sti
movsl
fnsave
xlat
lret
cmp
cld
lret
jl
lcall
push
std
xlat
push
sbb
rolb
addr16
xchg
int3
imul
dec
add
in
sbb
cwtl
cld
sti
sub
jno
out
cmp
test
push
sti
dec
cmp
push
lret
fnstenv
push
cltd
and
jmp
mov
sub
and
fs
inc
mov
xchg
jb
jmp
rcll
mov
jbe
lods
jle
cmp
daa
popa
mov
out
das
leave
dec
xor
cltd
cmp
fucomi
push
push
scas
mov
sarb
pop
rcrl
pop
mov
subb
jns
jbe
ficoml
mov
push
pop
dec
cmp
xchg
inc
insl
rcrl
out
inc
mov
cld
ret
ss
xchg
sahf
push
mov
pop
test
jnp
mov
adc
lcall
lret
or
fcomps
pushf
aas
sub
xchg
mov
daa
pop
mov
cmp
test
pop
not
jnp
xor
fisubs
adc
loop
add
icebp
ljmp
dec
jno
out
das
mov
or
mov
cli
adc
or
lods
inc
test
arpl
das
push
sbb
dec
pop
pusha
fucomp
aaa
imul
lcall
addps
jno
push
add
inc
testl
push
pop
or
xor
sarl
mov
dec
and
sbb
mov
jmp
cmpsl
pop
cmp
add
mov
add
xlat
or
fwait
and
or
add
outsb
mov
pop
and
jbe
mov
movb
ret
andb
ret
dec
xorb
rclb
sub
xchg
and
mov
sarl
leave
pusha
and
les
call
mov
adc
rcl
push
or
dec
pop
jb
cmp
xor
and
push
shll
and
lds
sub
hlt
push
jecxz
cmpsb
add
repnz
push
loope
cmp
rorb
lret
adc
or
scas
mov
and
jge
jecxz
inc
inc
cmp
jns
sbb
pop
dec
test
inc
push
movsb
push
push
into
imul
pminub
or
into
dec
fcomi
hlt
jmp
mov
jg
adc
pop
nop
and
scas
jmp
push
dec
pop
push
pop
cld
mov
xchg
xor
mov
dec
mov
inc
mov
cmp
adc
jo
add
or
fwait
or
adc
jbe
jg
movsl
add
inc
sbb
cmc
pushf
in
call
dec
adcl
js
aad
push
jl
inc
lret
pop
cwtl
cmc
fsubrs
mov
dec
add
and
pop
clc
xor
xor
movsb
repz
rcl
cmp
mov
outsb
mov
sbb
int
jecxz
xbegin
xchg
enter
pop
fidivs
mov
dec
add
fcomps
cmp
mov
enter
dec
ljmp
cld
inc
sbb
sub
inc
sbb
mov
xchg
cmp
scas
pusha
and
jecxz
in
inc
mov
sbb
mov
inc
xor
aam
dec
jmp
es
xor
sub
sub
xor
test
sub
int
push
push
notl
add
xchg
mov
dec
rcl
inc
je
imul
rcrl
jo
add
add
sbb
or
mov
addb
sub
fidivrl
mov
repz
insl
daa
loopne
ja
or
cmc
sti
leave
dec
dec
out
dec
imul
and
test
out
add
stc
mov
aas
aaa
out
cmc
cmpsl
popf
ret
in
sub
mov
test
lret
add
jnp
or
xchg
dec
int3
popa
fwait
inc
repnz
push
sbb
out
and
dec
xor
dec
mov
mov
jae
shl
mov
arpl
inc
jmpw
mov
repnz
hlt
sub
data16
cli
leave
jge
arpl
cwtl
xor
ffree
arpl
pop
fwait
je
and
pushf
movsl
je
cmp
xchg
test
idiv
mov
fwait
cmp
inc
jns
mov
inc
es
punpckldq
sbb
inc
and
mov
jb
pushl
jae
out
cltd
xor
push
leave
inc
sbb
xchg
xor
fnsave
lret
xchg
in
or
cmp
fst
xchg
fdivrl
aam
jp,pt
inc
mov
getsec
jno
mov
push
sub
cmp
out
add
nop
mov
adc
jns
jbe
pushl
cmp
sub
pop
cmp
das
ret
sbb
mov
iret
push
mov
cmpsb
testl
outsb
sbb
popa
push
or
mov
ja
push
inc
pop
out
in
cmp
sbb
nop
mov
aad
push
push
loop
push
add
lahf
mull
movsb
enter
cmp
mov
jmp
lret
push
fcmovnb
into
or
cmp
xor
and
lahf
decl
mov
sbb
push
inc
out
jp
mov
out
xor
push
xor
mov
rorb
or
out
pop
inc
adc
jl
aad
pop
xor
jecxz
lret
fldt
addr16
lret
pop
pushf
sub
inc
mov
fcmovnbe
adc
les
add
sbb
mov
mov
int
and
mov
test
mov
outsb
notl
andb
and
gs
push
stc
je
aam
in
mov
push
addr16
add
sti
lock
sub
mov
push
xchg
in
je
testl
scas
xor
jne
inc
xor
fistl
xor
js
mov
adc
flds
mov
mov
movsb
xchg
imul
push
mov
pop
es
push
pop
loope
pop
sahf
inc
in
push
popa
scas
sbb
fstpt
push
mov
add
les
xchg
fmul
mov
les
lds
cmp
cmp
aaa
enter
cwtl
xchg
add
push
mov
pop
push
dec
push
and
mov
sbb
jg
bound
fisubs
cmp
and
fs
or
push
adc
fsubrl
mov
lea
and
and
push
in
in
mov
add
out
sbb
push
adc
mov
adcl
decl
nop
push
adc
pop
stc
lcall
xchg
push
outsl
push
mov
mov
stc
ds
pop
stos
fs
js
pop
mov
push
cmpsl
test
aam
pop
adc
add
std
rcl
pop
cld
ret
rclb
iret
mov
imul
insl
xchg
lret
cmpsb
rcrb
jno
or
lahf
push
jnp
int
sahf
shll
dec
mov
stos
fstps
jne
push
in
mov
jne
in
stc
addr16
das
gs
push
repnz
mov
mov
mov
int3
nop
and
loopne
call
dec
out
mov
aam
imul
xor
ds
dec
sarb
jge
movsb
xlat
call
test
cli
mov
aad
add
add
inc
mov
jecxz
aad
repz
xrelease
dec
pop
bound
xrelease
sub
popa
data16
and
shrl
rorb
mov
inc
add
imul
pop
dec
add
lea
das
pop
rorl
inc
test
push
dec
or
xchg
xchg
outsb
fisubl
xchg
adc
cmp
ds
fstps
scas
shrl
jb
mov
add
les
xchg
stos
cmp
arpl
ret
jbe
inc
orb
push
sbb
push
dec
jge
jno
and
adcb
in
lret
xchg
jmp
aaa
pop
filds
mov
fstl
xor
fiaddl
mov
insl
call
jbe
xchg
lock
nop
jmp
aam
pusha
pop
pop
mov
pushf
sti
mov
int
stc
mov
lret
mov
mov
xchg
push
ja
int
iret
xor
pop
dec
fsub
xor
xchg
or
dec
shll
jmp
dec
mov
shr
cltd
popl
jb
outsb
jae
xor
nop
imul
push
cmc
add
js
xor
icebp
ss
imul
or
push
rorb
enter
lret
insb
sbb
aad
mov
mov
ret
mov
and
mov
call
xor
ret
add
pop
lret
mov
es
test
add
or
hlt
sbb
and
adc
cmp
sahf
xlat
xor
out
shll
ret
mov
sbb
inc
testl
repz
lock
sbb
fisttpl
gs
and
mov
inc
dec
aam
int
mov
in
jns
pop
fdivl
dec
inc
nop
popa
sbb
jns
mov
mov
lret
and
jg
inc
mov
jno
mov
cmp
aam
out
in
mov
jae
out
or
imul
loop
adc
cmc
das
mov
mov
mov
or
inc
aad
push
loopne
xchg
inc
xlat
testl
jbe
aam
mov
sti
cmp
std
pop
pushf
and
adc
pop
sbb
cmp
scas
sub
das
outsb
stos
cwtl
jns
mov
add
cmpsb
call
ret
adc
adc
xor
and
pusha
sti
arpl
push
jmp
cmp
dec
int3
push
sub
bound
pop
pop
pop
lcall
cli
pop
cmpsl
js
nop
stos
mov
push
mov
popf
cmc
or
xor
add
push
sbb
mov
movsl
push
mov
scas
pop
pop
xchg
push
arpl
push
jbe
pop
inc
fadds
add
rcll
push
in
push
cmpsb
push
hlt
scas
push
xchg
mov
dec
mov
jecxz
xor
fcompl
out
xchg
jae
daa
bound
push
mov
jns
loope
cmpsb
sub
mov
fnstsw
mov
out
xor
dec
cs
push
int3
iret
hlt
dec
int3
jne
fsubrs
nop
je
sub
dec
popf
sbb
sbb
outsl
aam
fsubr
sub
xor
data16
pop
mov
sbb
xchg
negl
fidivrl
or
and
pushf
xchg
mov
icebp
repz
mov
pop
sbb
pop
dec
rclb
sti
inc
aaa
xchg
call
into
sub
add
push
mov
push
mov
adc
cmpsb
pop
dec
pushw
fsts
mov
mov
xchg
pop
cltd
notb
scas
dec
fwait
int
fadds
sbb
cmc
movsl
cmovge
iret
mov
push
ja
testb
lcall
ss
into
insb
cmpsb
imul
inc
pop
sub
std
loop
ret
sarl
jb
movsl
pop
push
push
fs
mov
adc
sub
push
cmp
xor
push
inc
ror
and
inc
int
or
rcrb
rol
ds
aad
bsf
call
cli
add
enter
and
jg
fwait
lds
pop
mov
xchg
aaa
push
adc
insb
mov
ds
push
loop
push
xor
inc
dec
cmp
ficompl
cld
addl
push
stos
loope
cltd
add
dec
fcmovu
cmpsb
shrb
scas
lahf
jmp
notl
adc
lods
xchg
es
mov
sbb
xchg
mov
or
sbb
aas
imul
clts
xor
pop
mov
daa
cmpsl
imul
adc
dec
dec
lds
or
mov
call
and
popf
ds
sarl
cmp
mov
sbb
cmp
push
push
and
cltd
sub
repz
xchg
xchg
pop
xchg
dec
loopne
sub
mov
inc
daa
cmp
fdivs
lcall
inc
shll
outsb
or
xlat
std
adc
mov
and
lahf
movsl
popa
aaa
and
into
mov
fs
andb
pop
xchg
shll
jb
jge
and
push
xor
movsb
daa
jne
ror
mov
pop
mov
je
call
xchg
test
cmp
hlt
mov
mov
sub
into
xchg
rolb
scas
sub
lds
loope
or
addr16
xor
dec
lods
inc
dec
repnz
pop
mov
sarl
adc
es
iret
lds
jnp
cmpsl
out
mov
mov
or
sub
clc
imul
in
cmp
aaa
mov
adc
cli
add
or
lock
or
jbe
push
mov
xlat
cmp
cmp
dec
mov
out
push
xchg
mov
dec
gs
add
mov
adc
dec
lods
jp
jmp
sbb
outsl
sbb
jl
insb
fstps
fcmovu
gs
xor
xorl
ss
dec
jne
pop
mov
in
pusha
dec
push
push
cmpsb
cli
scas
in
imul
add
rcl
movsl
mov
daa
sub
out
or
loopne
fisttps
xor
pop
mov
loopne
xor
add
sub
mov
inc
fdivs
push
cmp
add
push
and
cmp
add
sbb
jmp
pusha
dec
enter
shll
hlt
cmc
push
sub
rol
xchg
cmpsl
and
inc
sbb
or
pop
popf
outsl
repz
inc
jb
jnp
mov
xchg
dec
insb
lods
rcrl
in
jg
out
scas
inc
adc
inc
mov
xchg
daa
out
xlat
shlb
mov
repz
or
sub
dec
dec
lret
sbbb
ret
stc
loop
mov
pushf
push
mov
aad
cmp
fistps
lods
xor
std
mov
cmp
out
stos
inc
fisttpl
sub
xor
jnp
pop
mov
addr16
pushf
and
push
push
subl
repz
sbb
loope
jno
inc
in
xchg
lret
mov
jns
in
test
test
or
sbb
xor
insb
sub
jbe
lock
in
pop
cmp
mov
adc
dec
pusha
cmc
xchg
or
int3
cmp
out
jo,pn
outsl
cmpsl
xor
mov
adc
pop
and
movsw
pop
mov
and
icebp
push
inc
int3
bound
mov
mov
orl
call
outsl
push
jge
loopne
add
stos
xchg
fbstp
xchg
sbb
out
dec
jae
mov
data16
pop
faddl
stos
or
or
inc
int3
push
je
enter
cltd
leave
xlat
dec
pop
dec
jnp
pushf
outsl
dec
xchg
insl
jbe
int
daa
incl
pop
ja
sbb
je
lcall
lret
mov
repz
mov
loope
scas
enter
repz
js
jne
jmp
std
insb
jo
lods
pop
mov
pop
lret
test
sbb
add
dec
gs
xchg
out
sbb
xchg
nop
leave
rorl
or
iret
or
mov
jne
scas
out
push
mov
cld
mov
or
lret
adc
and
sbb
cmpsl
data16
loop
subb
cltd
in
jno
push
cmpsl
clc
mov
test
pop
pop
add
jo
mov
fstpt
sbb
divl
sub
jns
addr16
call
enter
and
pop
out
push
dec
pop
push
mov
aad
dec
sbbl
xor
push
adc
sbb
add
stc
and
pop
ss
popf
sub
push
push
xchg
lods
sar
mov
int
outsb
arpl
sti
nop
ss
pop
shrb
shlb
adc
data16
or
jmp
aaa
icebp
mov
xor
pop
mov
lret
rcll
enter
leave
mov
jle
mov
clc
out
pop
cmp
aad
fisttpl
dec
pop
push
jp
inc
jp
jmp
or
popa
and
add
push
js
clc
aam
mov
jne
int
dec
inc
or
in
or
pop
fwait
pop
mov
adc
xlat
mov
in
ret
mov
sub
jns
xor
rcr
cmp
aaa
lock
inc
xlat
add
sbb
fdivrs
xchg
leave
add
mov
inc
mov
stc
jmp
movsl
adc
push
sbb
ja
rcrl
sub
cmp
jecxz
cwtl
mov
or
ret
jmp
jae
push
xchg
jo
stos
test
int
push
xor
ds
aam
leave
scas
push
mov
inc
mov
imul
push
popa
lods
pop
mov
push
inc
xchg
xor
in
sahf
inc
insb
lret
inc
pushf
xchg
jmp
mov
in
cmpsl
sbb
adc
nop
rdtsc
mov
or
mov
mov
mov
out
ret
test
stos
orb
add
add
popf
out
jae
mov
mov
test
fcoms
dec
scas
out
filds
jne
in
push
add
jge
into
sarl
iret
jb
out
ds
out
adc
adc
fsubrs
jmp
gs
and
ljmp
or
scas
ljmp
dec
add
popa
dec
push
sub
dec
push
testb
popa
xchg
int3
cmc
stos
mov
or
out
inc
dec
ljmp
add
jnp
shll
int
cmc
arpl
push
sub
js
pop
inc
dec
cmp
fs
insl
lret
gs
cmp
mov
iret
lea
jae
fcoms
xchg
push
mov
mov
fsubl
mov
loop
out
or
out
ja
fldl
mov
push
aaa
stos
cmp
in
sahf
rclb
icebp
mov
daa
xchg
and
ss
out
mov
shr
jae
nop
push
push
clc
stc
clc
nop
in
cmc
push
adcb
xor
shl
cmp
dec
add
scas
inc
sub
cmp
sahf
push
les
subl
cmp
jns
jb
jle
rol
mov
das
arpl
lcall
xor
pop
inc
and
xor
push
inc
lock
out
clc
fdiv
push
xchg
mov
pop
xchg
loope
lods
pop
jne
loope
std
scas
js
adcl
and
pop
movsb
fs
sub
inc
std
and
mov
add
std
ret
subb
lods
xlat
fstl
mov
cltd
icebp
sar
push
mulb
mov
fcmovu
mov
mov
pop
add
and
mov
xchg
pop
mov
test
aam
dec
pop
out
dec
cli
test
push
ret
in
dec
or
jo
fildll
or
dec
cmp
outsb
xor
jae
mov
movsb
jb
xchg
cmp
xor
dec
insl
aaa
in
cs
nop
fsubrl
jb
shr
hlt
cmp
xchg
mov
sbb
scas
adc
xchg
cli
lds
jbe
jae
push
dec
cmpsl
dec
cmp
enter
push
movsl
jecxz
out
xchg
int
add
sbb
inc
mov
outsl
adc
movsl
xchg
stos
stos
cmpsl
cmp
inc
jnp
inc
loop
arpl
xchg
or
fsubrs
imul
mov
or
test
jne
push
and
movsb
mov
adc
jp
dec
stos
add
push
fimull
xor
mov
add
push
sub
add
ljmp
jmp
fisubrs
cmp
xor
push
push
aad
jmp
test
add
inc
push
xor
mov
pop
jnp
sbbb
out
mov
loopne
icebp
rcll
jecxz
call
jno
pop
and
popl
stos
sbb
sbb
outsl
sahf
dec
icebp
cmpsl
sahf
andb
jbe
pop
into
nop
sbb
test
adc
push
pop
movsl
mov
jnp
movsb
mov
arpl
cmp
outsb
nopl
mov
iret
ljmp
jo
sbb
mov
dec
iret
clc
lea
push
xor
fistl
push
rorb
daa
daa
repz
sub
rolb
out
jmp
clc
adcl
xchg
inc
daa
loop
mov
cli
sub
lods
lods
into
pusha
cmpsb
mov
xchg
cmp
stos
popl
stc
hlt
or
mov
sbb
ja
mov
jne
add
mov
pop
daa
push
shlb
pushf
push
pop
iret
xchg
int
add
ss
test
and
loopne
pop
loope
lret
mov
lods
jecxz
aad
sti
sbb
and
jno
loop
popf
jb
mov
pop
and
leave
shll
insb
push
jns
into
xor
aaa
and
push
int3
enter
cmp
repz
pusha
fiadds
jb
xchg
test
xchg
adc
xor
dec
aaa
lret
inc
or
mov
out
mov
add
pusha
push
mov
cmp
mov
jmp
nop
adc
std
mov
rorl
cmc
mov
push
int3
aas
shrb
xchg
dec
and
fwait
jmp
inc
xchg
jecxz
mov
hlt
fs
mov
cmp
cmp
fstl
xor
addr16
lcall
mov
dec
lds
or
stos
jb
xor
push
push
pop
sub
sub
mov
lods
mov
mov
and
sahf
sbb
jl
dec
cmp
aam
jne
adc
dec
and
push
inc
aad
jl
pop
xchg
js
xor
imul
dec
cmpsb
mov
or
pop
mov
mov
add
ret
sar
cmp
cmp
pop
jbe
add
insl
adc
mov
mov
inc
inc
xchg
or
lcall
scas
das
fcomi
push
and
call
inc
addb
cmc
jo
notb
fst
jle
dec
cltd
mov
mov
mov
pop
std
data16
adc
sbb
or
divl
dec
lds
push
call
xor
dec
cmpsl
jmp
inc
out
pop
aas
or
push
out
jmp
rolb
pop
aad
test
xchg
mov
inc
outsl
inc
stc
inc
add
flds
scas
push
push
push
mov
mov
sub
mov
xor
cmp
mov
orb
mov
add
dec
pop
pop
inc
sbb
lret
jp
sbb
sbb
out
cmp
lods
sub
aas
lds
or
sbb
in
out
jae
and
mov
outsl
adc
push
add
xor
push
push
dec
jl
cmp
jmp
aad
pop
inc
mov
andb
pop
rcrb
dec
mov
mov
shld
lock
aas
xor
sbb
idivl
arpl
or
xor
mov
mov
push
ja
mov
cwtl
lret
rcrl
pusha
xor
cltd
mov
sti
adc
stos
sahf
rorb
repnz
jbe
pslld
mov
pop
jp
bound
in
mull
sbb
fstp
sub
mov
add
shlb
mov
popf
int
inc
mov
aas
xchg
dec
dec
fdivr
push
mov
jnp
cltd
lock
mov
pop
push
arpl
out
sbb
push
int
mov
in
fsubl
adc
adc
or
mov
xchg
mov
push
or
fwait
in
cld
jl
movlps
mov
cmpsl
inc
call
or
fs
and
out
and
sbb
jb
aam
cld
stos
xor
sub
mov
int
loop
jb
xor
jge
dec
popa
sub
add
mov
sub
stos
sahf
push
fildll
mov
or
adc
aam
sbb
xchg
dec
dec
push
movsb
sub
pop
mov
sbb
fs
popa
ret
jns
fisubl
sbbb
insl
and
testb
test
mov
ja
aad
pop
mov
cs
cmpsb
ljmp
dec
jmp
fst
cmp
mov
dec
rolb
inc
and
jmp
push
xor
xchg
push
sub
and
pop
jnp
sbb
ljmp
adc
xor
popa
mov
inc
mov
lret
bound
imul
pop
xchg
xchg
cltd
and
adc
cwtl
ds
lret
dec
popf
add
fildl
inc
in
inc
xor
cmp
fadd
shrl
insb
xchg
jb
pop
cs
loop
inc
jbe
or
jne
xchg
out
aas
repnz
sub
xor
insl
outsl
or
in
inc
jne
mov
fcom
inc
lret
push
jecxz
dec
jg
bound
test
mov
cwtl
jno
dec
inc
mov
push
aam
jg
repnz
sbb
repnz
shrl
outsl
pop
scas
imul
shll
dec
sub
jmp
loope
pop
xchg
ljmp
fisubrs
jmp
inc
sti
mov
push
subb
push
iret
jo
in
cmp
cmp
jnp
push
cmp
enter
test
mov
mov
test
imul
movsb
and
or
mov
sbb
and
ficoml
inc
jg
inc
jmp
mov
mov
mov
sarl
das
in
jp
movsl
mov
fstpt
xchg
sbb
test
mov
or
cmp
repnz
adc
testb
xor
lret
cltd
mov
lock
in
xor
xchg
stc
insb
out
scas
pushf
lahf
insb
lahf
out
gs
bound
std
cmp
dec
sbb
push
jl
imul
pop
cmp
clc
loope
ret
cltd
add
mov
mov
icebp
pop
nop
adc
shlb
push
in
xor
sub
add
int
push
movsl
mov
push
scas
lds
jl
out
lret
xchg
repz
sub
js
mulb
adc
push
cmpsl
xchg
jge
int
gs
push
add
push
sbb
or
add
cmpsl
inc
and
xlat
cwtl
fs
out
out
movsl
sbb
out
icebp
cmc
or
fcomip
cs
adc
daa
std
sti
insl
push
lcall
ss
loopne
test
and
cli
jp
imul
scas
jns
adc
pop
stos
in
push
out
jnp
xchg
or
cmp
imul
hlt
int3
aad
sbb
loopne
sbb
push
push
push
hlt
sub
iret
xchg
xlat
es
jl
sub
stos
mov
inc
outsb
xchg
mov
shrb
loope
rcrl
mov
mov
add
jl
loope
push
mov
cmp
test
imul
fldt
xchg
mov
sbb
xor
adc
lods
xchg
jne
sarb
push
andl
stos
jno
adc
insl
mov
mov
sub
nop
mov
jbe
xchg
test
iret
lret
pusha
xchg
jno
adc
adc
aas
fwait
add
pop
adc
jg
aaa
lret
xor
roll
imul
or
cs
stos
pop
in
into
outsl
out
xor
cmc
outsb
mov
xor
lret
into
inc
pushf
cmpsl
aaa
les
in
jb
pop
pop
jmp
mov
pop
push
daa
scas
jbe
lcall
adc
mov
stos
test
add
mov
xor
lret
sub
mov
jb
inc
out
adc
test
je
fs
mov
arpl
xor
stc
cwtl
int3
push
shrl
pop
lds
hlt
cld
call
loop
js
ja
leave
jnp
mov
pop
iret
or
add
popf
outsb
dec
mov
mov
movsl
je
enter
repz
sub
jge
popa
mov
clc
pop
out
rolb
mov
and
push
lret
jbe
loopne
int
ja
mov
scas
inc
cltd
xchg
les
mov
jle
clc
mov
mov
data16
and
sub
mov
jno
popl
mov
xchg
out
mov
sub
push
jae
xchg
sar
adc
inc
icebp
sbb
lcall
imul
sbb
ljmp
cld
mov
mov
inc
repz
jno
imul
inc
pop
fwait
xor
pop
aam
movsb
sub
inc
jbe
daa
cmc
mov
out
push
mov
inc
add
cltd
adcb
jns
mov
pop
in
xchg
cmp
out
xchg
xchg
daa
and
sub
outsb
aaa
cmp
rorb
stos
pop
into
mov
call
daa
fstpt
out
dec
mov
lahf
jle
std
mov
stos
repnz
inc
mov
dec
out
sti
xchg
pop
mov
icebp
out
mov
cmp
sbb
lock
dec
cmp
pop
jg
enter
cltd
testl
pusha
sti
int3
xor
pop
pushw
push
or
aam
cmpsl
dec
cs
mov
aam
push
jb
mov
xchg
dec
cmc
daa
pusha
fsts
js
xor
fnstcw
in
xchg
sub
mov
xor
lods
xor
xchg
jns
push
push
arpl
mov
and
imul
mov
and
aas
data16
add
gs
dec
jp
lods
xorl
fsts
sub
repnz
out
mov
lahf
add
insl
mov
inc
sbb
repnz
jmp
jecxz
jbe
int
mov
fdiv
andb
adcb
add
sub
gs
cltd
addb
adc
data16
in
add
scas
mov
sbb
mov
adc
mov
xchg
lock
std
stc
pop
xchg
fs
xor
sub
sbb
subl
mov
daa
pop
les
cld
push
xchg
sub
cmpsl
inc
jno
mov
je
fcoml
xor
jl
push
loope
cmp
fldt
mov
popf
sti
lods
push
cmp
pop
dec
adc
aas
lods
and
sarb
js
enter
sbb
fs
in
sbb
inc
cmp
push
cmp
xor
inc
xor
and
and
fdivl
and
dec
shlb
and
hlt
cmp
cmp
fists
push
mov
and
ret
mov
idivl
out
frstor
pop
jmp
and
idivb
push
mov
js
je,pt
mov
mov
cmc
int3
pop
insl
lret
adc
mov
mov
sti
pop
out
imul
push
inc
in
xchg
xor
cmp
inc
jge
push
loope
jmp
mov
lahf
pop
mov
lcall
push
push
addb
xchg
es
dec
dec
das
xchg
in
jo
or
inc
pop
js
and
xchg
cmp
aaa
inc
movsl
sbb
cmp
and
xchg
xor
fisubrs
ret
pop
negl
pusha
stos
jo
adc
xchg
mov
xchg
push
pop
jle
inc
lret
sub
xor
fcomps
xchg
jb
test
bound
sahf
and
mov
inc
out
xor
xchg
test
push
fiadds
iret
scas
gs
stc
jmp
inc
out
pop
xchg
cs
addr16
flds
or
lcall
loope
ljmp
movsl
push
fdivs
fwait
and
and
cwtl
cmpb
cmp
scas
inc
jmp
in
test
iret
adc
insl
inc
or
push
movsl
dec
xorb
jne
cwtl
xchg
leave
sub
xlat
rcrl
adc
inc
fistl
sahf
cmc
mov
test
imul
sbb
popf
jle,pt
popf
xorb
pop
mov
dec
or
xor
add
inc
pop
or
movsb
cwtl
inc
cmp
std
insl
add
fnstenv
jp
in
add
lds
adcb
fs
test
sub
mov
inc
es
imul
ret
adc
inc
mov
sbb
xor
adc
outsl
mov
sub
mov
daa
mov
filds
leave
jle
out
push
in
popf
es
rolb
cmp
cwtl
sahf
push
out
pop
ss
jno
dec
add
sub
icebp
mov
dec
int
outsl
divb
mov
pop
cmp
cmp
push
cmp
sub
or
adc
js
jo
or
mov
xchg
sarl
push
lcall
jae
mov
xchg
xbegin
out
bound
imul
mov
movsb
out
ja
insl
inc
jmp
stos
repnz
bound
hlt
daa
stos
test
fnstcw
je
pop
jnp
xchg
divb
xor
mov
ss
pushf
js
cwtl
push
sti
ja
daa
stc
inc
or
lds
shlb
pop
jnp
sub
fucom
rcll
add
add
test
roll
pop
sbb
andl
add
adc
outsl
mov
in
fcmovnb
imul
pop
loop
jecxz
sub
and
cmp
lahf
jae
scas
or
pop
add
jp
push
popl
sbb
roll
leave
lcall
cli
and
push
je
jo
call
jb
rcrl
lods
mov
js
cmp
leave
jmp
idivl
lret
jb
mov
fwait
fwait
in
fxch
and
lock
jns
jl
in
or
clc
mov
nop
pusha
pop
loopne
pop
add
and
adc
pop
aaa
addr16
sub
push
push
in
add
in
xchg
and
xor
out
and
dec
mov
dec
mov
or
mov
mov
loope
test
lahf
inc
rcrl
sbb
outsl
inc
negb
sbb
rcrl
and
push
loope
fwait
iret
mov
insl
push
dec
dec
sub
mov
icebp
cmp
es
add
dec
mulb
xchg
scas
adc
dec
push
nop
in
mov
or
hlt
or
jle
adc
or
rcll
movsl
insb
mov
mov
mov
xor
mov
push
mov
cwtl
test
jbe
pop
imul
mov
scas
stc
aas
scas
jle
adc
jae
ds
cmp
xchg
jno
cmpsl
and
jb
xchg
lahf
std
in
out
iret
test
cmp
movsb
jp
cmp
sub
cltd
fimuls
fdiv
inc
jb
emms
and
cmc
iret
xchg
mull
lcall
and
jb
mov
and
fmull
iret
icebp
cmp
lahf
push
into
cmc
cs
data16
jne
andl
mov
mov
ret
inc
inc
in
ljmp
pop
pop
push
jae
in
push
jnp
pop
inc
shlb
jne
and
jg
lahf
movl
add
fsts
aam
mov
sbb
popf
sub
aad
and
jne
leave
fistl
xor
and
mov
ljmp
mov
jo
mov
nop
xor
std
cmpsl
add
jo
jae
arpl
and
and
or
jne
lea
push
xchg
jp
sub
inc
mov
cld
aad
mov
sub
xchg
leave
add
nop
popl
arpl
mov
pushf
sbb
mov
sbb
adc
out
jg
mov
push
add
pushf
inc
lods
cwtl
test
aam
mov
pusha
pop
rcrb
gs
test
outsl
loope
test
scas
jnp
push
pusha
mov
fmul
xlat
jge
sbb
push
sti
in
push
iret
lcall
lods
aas
cltd
idiv
out
mov
stos
leave
sbb
push
popa
les
inc
jg
shrl
loope
sbb
je
add
mov
lcall
add
in
aad
jnp
and
xchg
cld
mov
mov
mov
stc
and
and
pushf
test
stos
clc
jbe
bound
mov
cwtl
shll
outsb
cmp
jge
repz
pop
int
add
mov
xchg
shlb
aam
cmc
pop
mov
pop
shll
add
shr
mov
lahf
lods
arpl
js
in
jmp
jge
mov
ror
testb
mov
mov
popl
out
aaa
inc
push
or
jge
aam
add
nop
js
movsb
xor
arpl
incl
add
test
add
scas
adc
outsl
cltd
outsb
sub
enter
add
lahf
ror
mov
or
or
cmp
pop
push
and
cmp
xorb
popa
or
adc
add
leave
inc
stos
mov
fs
sbb
in
cmpsb
fs
rcrl
cmc
scas
js
jo
adc
nop
rorl
dec
jnp
add
ficoml
push
or
jae
pop
pop
outsb
lds
ja
jo
mov
inc
ret
dec
xchg
lahf
or
mov
fisttpl
les
in
js
int
shlb
push
cltd
sbb
les
sbb
inc
add
mov
xchg
push
inc
and
int3
xor
lret
pop
xchg
jb
ss
mov
and
inc
outsl
imul
icebp
aaa
sub
lcall
outsb
xchg
lods
test
adc
adc
inc
jge
push
test
dec
xor
std
ret
mov
xchg
xchg
and
fcompl
movsl
and
out
testl
sbb
aas
xchg
mov
pop
pop
push
icebp
xor
and
fs
repz
inc
adc
fdivr
insb
adc
jle
or
fists
dec
cmp
fisubs
sbb
pop
into
shrb
sahf
mov
test
xchg
lods
mov
jb
enter
jne
mov
gs
out
pop
orl
aaa
jg
dec
mov
and
push
push
inc
xchg
pushf
cld
js
fildll
into
test
pop
push
xor
adc
lods
sub
dec
pusha
imulb
pushl
std
rclb
loop
mov
sub
or
sbb
mov
mov
mov
xchg
jge
movsb
sub
sbb
add
shll
mov
lock
pop
pop
daa
rclb
add
inc
mov
add
dec
insb
test
mov
mov
test
jle
dec
cs
or
mov
dec
mov
dec
cmp
jl
or
xlat
xchg
push
ss
xchg
xchg
xor
mov
cld
inc
add
mov
sbb
sub
call
repz
mov
insl
cwtl
xor
sbb
xchg
pop
stos
pop
aam
frstor
insb
mov
enter
rolb
pusha
or
xchg
pusha
inc
lock
lea
test
lods
mov
stc
filds
shrb
inc
pop
pop
bnd
and
lret
ret
stos
ljmp
pusha
xor
shr
fisubrs
or
cmp
push
incb
mov
movsb
shll
repnz
jns
jb
inc
imul
mov
jmp
aam
add
pop
js
adc
or
lret
pop
dec
xchg
push
lods
dec
adc
mov
sarl
xchg
pop
add
inc
aad
mov
cmc
mov
pushf
lcall
imulb
shlb
sbb
mov
pushf
jns
cmp
mov
dec
sbb
xchg
ds
cltd
push
incl
mov
clc
or
gs
cmp
repz
mov
dec
inc
movsb
dec
dec
jl
outsb
test
xchg
xchg
mov
cld
cs
or
push
xor
shlb
arpl
mov
sbb
lret
and
sub
in
jg
add
test
pop
cltd
xchg
insl
enter
lahf
mov
sbb
xor
icebp
jecxz
pop
popf
in
js
loope
pop
push
fsubs
inc
xor
xor
mov
bound
push
add
inc
in
aas
sub
daa
imul
and
xchg
lret
insb
inc
out
notb
jge
sbbl
pop
mov
mov
mov
andl
pushf
aas
pusha
lea
add
xor
cmpsl
fdivs
sbb
inc
cld
inc
ficompl
xor
sbb
mov
cmc
add
mov
cmp
lahf
and
loop
ja
pcmpgtb
je
fnsave
xlat
fs
daa
or
pop
jecxz
mov
jl
add
dec
arpl
mov
aad
xchg
je
std
and
cwtl
lret
in
mov
sub
inc
imul
dec
gs
movsl
aaa
jns
data16
test
and
pop
xchg
dec
xchg
cmpsl
dec
cmp
pop
xchg
lods
arpl
mov
mov
pusha
and
adc
push
dec
and
xchg
cmc
inc
leave
iret
movsb
mov
in
leave
jb
or
fs
cmp
xchg
lret
cmpsl
lock
clc
mov
cmp
dec
stc
pop
sbb
lret
mov
stc
faddl
cmp
or
mov
stos
push
in
leave
dec
xor
outsl
outsb
je
dec
sbb
arpl
mov
push
ret
fidivl
enter
inc
dec
test
mov
das
mov
and
iret
fidivrl
insb
xor
arpl
push
popa
ret
adc
stos
push
fcoms
xchg
xchg
js
pop
xor
lahf
ret
pusha
cwtl
or
fistpll
roll
jge
dec
cmp
inc
pop
mov
xor
xor
pop
or
cmp
or
xchg
sbb
mov
sbb
aad
xchg
les
cmp
jmp
cli
adc
mov
xor
and
out
ds
xor
pop
cmp
xlat
and
test
cli
lods
testl
shrl
lock
dec
and
add
or
jo
mov
sbb
and
dec
mov
popa
sbb
filds
fs
dec
add
xor
xchg
dec
pop
mov
sub
pop
lods
mov
or
jg
shlb
adc
imul
jmp
lock
add
add
and
dec
xchg
pushf
xchg
pushf
jmp
mov
daa
dec
enter
sub
xor
mov
out
rorb
mov
sub
insb
inc
cmp
sub
insb
sub
adc
pop
push
fadds
neg
es
xchg
xchg
aaa
or
jbe
clc
jmp
dec
cmp
adc
insl
dec
mov
pop
or
aad
stc
pop
or
cmc
lods
mov
cmp
jecxz
shlb
add
mov
xor
dec
mov
shr
in
rcll
xchg
repnz
repnz
ja
loopne
xchg
mov
cs
in
inc
cmp
mov
xchg
inc
movl
mov
cltd
inc
ljmp
mov
push
cltd
cmp
call
xor
popa
mov
fsubl
lret
mov
mov
sub
inc
adc
and
roll
lret
pop
jl
das
outsl
xor
pop
das
test
jmp
mov
dec
inc
mov
negl
cmpsb
mov
mov
aam
xor
jbe
cmp
add
lds
push
adc
ror
mov
add
cmpsl
add
jle
ja
cmp
shr
xchg
repnz
adc
cmp
push
add
bound
push
jo
mov
xorl
mov
daa
stc
adc
xchg
js
mov
leave
loopne
pop
and
test
orl
sub
ss
xor
xlat
pop
pushf
dec
aam
iret
sub
in
test
adc
sub
cmp
pop
and
jns
mov
mov
push
cmc
jns
or
push
and
cs
cmp
add
xchg
push
scas
dec
dec
decl
scas
pop
jbe
sub
add
xor
xchg
ljmp
pop
roll
mov
and
test
leave
scas
push
inc
push
call
fcmovnb
and
ss
in
test
rcll
imul
fcmove
dec
aas
data16
sbb
cmp
mov
fisttps
inc
add
add
or
pop
fwait
adc
sbb
mov
sahf
lock
xchg
xchg
xchg
cmc
outsl
add
fisubrs
or
adc
sub
ret
or
mov
and
inc
fldt
bound
pop
push
mov
cs
daa
in
push
jnp
loopne
js
cmp
call
mov
pop
mov
and
fstp
fcomip
xchg
popf
push
xchg
xor
flds
sub
shl
int3
outsl
push
insl
jp
jo
xor
lods
adc
hlt
loope
icebp
rolb
inc
dec
jge
adc
cmp
icebp
rcll
mov
xchg
addb
xchg
pop
push
cmpsl
jmp
rolb
fstps
out
imul
dec
ja
test
xor
das
fsubp
dec
sub
fs
mov
repnz
or
cmp
lea
aad
aam
mov
xlat
pop
loopne
mov
sti
adc
and
pop
inc
dec
xor
push
sub
aam
mov
popl
rorl
aam
pop
dec
insl
xchg
mov
lods
pop
ret
cmp
cltd
mov
push
mov
mov
pop
insl
dec
sbb
in
push
sbb
mov
or
or
mov
mov
inc
loope
adc
fwait
dec
outsb
pop
pop
mov
mov
and
and
gs
sub
mov
aam
pop
in
push
aam
mov
testb
lods
pop
icebp
hlt
loope
hlt
test
fdivrl
push
test
in
js
dec
cmpsb
dec
fnstenv
xchg
pop
and
push
repz
mov
enter
push
sub
mov
mov
cmpsl
mov
orl
rclb
jae
test
dec
jl
push
outsb
jno
mov
pop
lods
push
xor
pop
sbb
adc
scas
or
xchg
pop
jecxz
bnd
icebp
lods
lds
adc
dec
jecxz
adc
cli
push
mov
push
mov
cli
mov
add
or
out
lahf
ljmp
xchg
ljmp
imul
outsb
in
jns
pop
mov
bswap
std
fs
jno
outsb
loopne
lds
cmp
loopne
mov
xchg
push
jb
cmp
inc
repnz
ficoml
mov
lea
mov
xchg
push
mov
mov
aas
call
aad
test
or
mov
mov
xor
jg
aas
jno
push
mov
ja
outsl
lea
lock
insl
ret
cltd
inc
sti
pushf
jmp
dec
je
push
lcallw
pop
ffree
loop
dec
ljmp
push
stc
or
out
and
mov
popf
dec
cmc
popf
cmp
fnsave
mov
and
in
dec
sbb
push
std
in
sbb
mov
hlt
sbb
addl
sub
scas
test
xchg
pusha
jg
jbe
add
iret
movsb
jno
shlb
pop
out
xchg
mov
and
inc
sbb
das
call
jne
jns
lea
fwait
jns
add
sahf
test
imul
mov
sti
inc
push
and
pop
data16
xchg
xor
and
repnz
out
hlt
daa
jmp
xchg
jge,pt
mov
mov
push
rcrb
jae
xor
popa
psubusw
in
jb
adc
cmpsl
xor
shl
mov
arpl
pop
add
adc
mov
imull
lock
insb
sub
into
pop
nop
pmullw
mov
lods
pop
ffree
dec
int
movsb
add
pop
xchg
js
or
lock
push
aas
fs
jl
stc
cmp
cli
dec
lock
icebp
imul
std
lods
sbb
aas
dec
add
mov
sbb
or
lret
loope
imul
loop
jne
insb
push
jmp
dec
pop
sbb
pop
pusha
std
sbb
iret
mov
scas
mov
in
aam
cltd
adc
mov
mov
inc
stos
jnp
push
pop
fstpt
loopne
lret
mov
insb
and
test
pop
sbb
icebp
jmp
in
fcmovne
push
add
int3
jae
out
icebp
pop
jp
mov
inc
jge
and
jno
jg
sub
icebp
dec
pop
scas
and
add
fwait
test
adc
jge,pn
mov
or
push
cmpsl
inc
fistl
add
insl
mov
pusha
fidivs
lods
push
pop
pop
lds
add
push
sub
push
das
imul
xchg
imul
sbb
adc
in
push
dec
out
and
jb
or
xor
or
mov
cs
clc
xchg
flds
es
pop
rorb
mov
pop
mov
aam
std
adc
inc
rcrb
insl
sbb
cmpsl
int
ljmp
and
out
cltd
idivl
in
shrb
cmp
mov
daa
sahf
test
mov
pop
scas
mov
cmp
insb
jns
mov
mov
push
mov
dec
lock
mov
pop
mov
fwait
adc
adc
mov
dec
lcall
push
or
adc
subb
or
imul
pop
imul
stc
fprem
xor
sub
sbb
push
jecxz
lcall
sub
adc
out
push
inc
ret
cwtl
test
xchg
daa
imul
xlat
dec
shll
inc
leave
inc
jle
iret
xchg
popf
push
mov
add
fisttpll
sub
rorb
mov
dec
xchg
sub
out
jmp
jecxz
insl
int3
jge
dec
lea
push
jle
outsb
pushf
sarl
add
jno
rorl
es
addr16
addb
jns
js
aad
aaa
inc
inc
cli
lcall
rolb
jno
enter
insl
mov
lret
add
sub
int3
lods
pushf
jl
cmp
xor
lods
adc
movsl
cmp
aas
icebp
push
scas
inc
or
xor
pop
cmc
rorb
ja
jnp
cs
cltd
fstpl
in
insl
pop
into
sarb
sbb
xor
lods
jnp
outsb
gs
daa
insb
cli
inc
dec
cmp
in
mov
insl
js
add
cmp
inc
pop
pop
sub
push
adc
pop
push
or
fucom
inc
lcall
lcall
loopne
mov
add
mov
lahf
adc
jecxz
dec
sti
jns
lock
cmp
mov
mov
les
lcall
imul
mov
pop
push
fs
cmp
sub
sbb
psubsb
jg
jo
push
scas
stc
in
enter
sub
or
lcall
out
orl
repnz
jp
outsl
jae
xorb
cmp
je
in
das
jb
push
ja
adc
adc
sbb
mov
xor
shll
or
insb
in
int3
aaa
mov
pop
aad
jecxz
lahf
push
jne
push
jnp
pop
insl
pop
inc
push
ljmp
sbb
aaa
int3
add
xor
invd
xchg
and
cmp
bound
push
fildll
adc
add
mov
roll
cmpl
pop
int
scas
mov
bound
dec
hlt
pop
in
and
out
xlat
cmpsb
divb
push
cmp
mov
fstl
fimull
popa
cwtl
mov
push
push
fsubrl
add
or
roll
cwtl
lret
mov
sub
aaa
call
adc
xor
mov
mov
adcl
addr16
jle
fstps
push
jp
ds
pushf
mov
cltd
xchg
lcall
or
mov
lock
and
loopne
mov
lds
sbbl
cmp
les
dec
dec
inc
mov
dec
mov
test
mov
movl
stc
cmp
dec
pop
ljmp
pop
data16
std
shlb
rcr
test
add
mov
sti
xchg
dec
mov
cmp
lea
jb
inc
and
cmp
sub
jo
pop
jno
mov
or
jmp
arpl
ret
inc
ss
mov
sbb
mov
int
push
add
adc
cmp
xchg
xor
xchg
or
lods
inc
ds
xor
rcrb
xchg
jge
cmpsb
inc
and
and
sahf
out
jo
lret
movsb
test
xor
andl
inc
pop
xchg
or
mov
insb
cli
pop
xchg
insb
outsb
inc
es
and
jae
xchg
movsl
mov
pop
data16
hlt
sti
iret
xorb
dec
push
or
and
jl
rcll
xchg
icebp
push
dec
shrb
jg
push
dec
pop
shrl
sub
imul
rol
push
push
lret
test
pusha
or
cmp
pop
iret
out
sub
mov
std
jg
add
dec
cmp
mov
negb
movsb
fildll
addr16
mov
adc
mov
xlat
mulb
stos
xor
cmp
fistpl
push
sti
sbb
lret
fidivl
and
fidivrl
and
repz
loope
cmp
inc
imul
addb
and
ds
andl
es
xchg
xor
jnp
pop
int
fs
pushf
pushf
cwtl
pop
mov
fsts
or
test
or
lret
dec
push
adc
sub
cmp
cmp
cs
sub
outsl
scas
lea
std
sub
cmp
sbb
test
jge
imul
ss
pop
rcrb
mov
xor
cmp
mov
fimuls
rclb
stc
aam
mov
addr16
addr16
cmp
cmp
daa
mov
and
inc
mov
lret
test
mov
ss
pop
xchg
push
push
aam
mov
js
out
insb
scas
mov
cwtl
pop
into
mov
dec
les
jecxz
fnstenv
xor
dec
int
adc
mov
lahf
push
xor
mov
mov
push
sbb
test
push
inc
inc
pop
mov
sahf
arpl
in
aam
inc
lock
or
add
xor
mov
popf
sahf
sbb
push
push
push
cmp
data16
lock
jecxz
mov
push
dec
sub
nop
xor
aaa
pop
and
in
lock
ljmp
xchg
mov
cmp
xlat
add
fdivs
dec
push
push
ja
pop
sbb
add
sbb
shrb
fldcw
push
xchg
sub
mov
add
popf
sub
stos
movsl
movsb
sub
repnz
leave
push
leave
dec
xorb
popf
out
test
cld
in
bound
pop
mov
add
pop
repz
outsb
insb
cmpsl
sbb
aam
mov
mov
js
jno
lahf
mov
pop
xlat
push
lea
bound
fsubs
test
cmp
cmp
inc
out
int
pop
mov
mov
imul
jg
xchg
add
xchg
in
or
bound
and
mov
scas
mov
je
scas
fsubl
test
mov
or
or
sbb
bound
mov
xor
jmp
jbe
mov
out
sub
adc
add
cmpsb
sti
jg
lods
or
enter
and
rcr
jge
orl
test
mov
push
pop
dec
inc
jb
inc
jnp
fstpt
jnp
fwait
fwait
jae
ret
xchg
sbb
aaa
in
cmp
add
mov
lcall
pop
fcom
test
out
sar
stos
repnz
adc
xchg
sarl
sbb
pop
fldenv
jb
cs
fnstsw
sub
test
arpl
mov
insl
adcl
arpl
xchg
adcl
aaa
std
cmpsl
or
movsb
mov
pop
sub
adcl
sub
ret
push
push
mov
or
jecxz
inc
push
movl
mov
gs
mov
out
mov
push
xchg
stc
adc
mov
mov
incl
pop
mov
fldenv
and
cltd
dec
loop
xchg
loope
mov
lods
sub
sbb
mull
call
xchg
mov
test
push
out
fwait
xor
inc
aas
cmp
cwtl
push
aas
inc
ret
punpckhwd
call
inc
ljmp
cli
cmc
xchg
mov
inc
inc
cmp
ss
repnz
shlb
dec
jo
mov
fnstenv
sbb
and
pop
sub
xor
daa
pop
stos
add
jb
push
dec
or
daa
inc
scas
mov
int3
xchg
push
mov
jle
ffree
jge
out
scas
insl
pop
mov
shrl
xchg
in
jo
cli
int3
je
lds
dec
sub
ds
stc
mov
lcall
mov
add
or
push
fldl
aaa
sub
xor
jp
imul
mov
inc
idivl
mov
jnp
xor
jp
add
adc
jg
mov
mov
jo
popf
and
je
sbb
stos
push
and
fcompl
push
outsb
inc
rorb
mov
pop
lds
mov
xchg
negb
cmp
sarb
xchg
mov
call
or
popa
mov
gs
push
pop
push
dec
loop
lods
std
lds
int
mov
shl
push
aaa
fsub
repz
fisubs
sbb
add
mov
mov
cs
pop
push
pop
push
or
cmpsl
mov
push
das
out
adc
jo
in
push
push
xor
adc
clc
test
mov
or
in
mov
stc
mov
sbb
mov
and
sti
push
lret
ja,pn
daa
fisubl
das
dec
out
cwtl
cmpsb
dec
sub
dec
test
js
lahf
ja
mov
inc
push
pop
movsb
pop
ljmp
xchg
sub
push
sbb
adc
lret
cmp
adcb
push
stos
lcall
pop
mov
xchg
or
movsb
fidivs
cmp
dec
movsl
pop
jmp
mov
andb
and
shlb
pusha
imul
xchg
mov
cmp
dec
je
push
adc
enter
jge
cmpps
adc
add
cmc
int3
ficomps
mov
inc
cmp
dec
notb
lret
mov
hlt
inc
adc
fldl
pusha
outsl
loop
xchg
into
outsb
pop
lods
mov
xchg
insb
imul
test
push
mov
sbb
stos
jnp
mov
stc
repz
lea
in
sbb
scas
sti
out
repz
adc
pop
pop
in
stc
int3
mov
lahf
cwtl
add
mov
cmp
lret
dec
mov
adc
fs
push
and
jno
inc
xor
jl
mov
pop
pop
inc
das
js
jl
xchg
pop
icebp
mov
lahf
fnstsw
les
mov
aad
clc
cs
into
add
cmp
in
mov
iret
addb
add
jp
dec
aad
push
cltd
sarl
bound
unpcklps
stos
pop
mov
mov
push
mov
mov
sbb
test
adc
jns
cli
addb
push
mov
fdivs
sbbl
xor
lock
inc
pop
or
cmp
loopne
xor
pop
mov
test
pusha
ja
int
jl
mov
mov
xchg
push
mov
adc
std
out
inc
and
rolb
loop
dec
cld
jp
mov
xor
orb
mov
inc
add
inc
xchg
mov
ds
dec
scas
in
pop
push
or
cli
dec
jg
imul
fcompl
lods
fsubrl
dec
lock
clc
les
mov
fwait
cltd
mov
fmull
loope
dec
push
stos
lods
mov
xor
xchg
shr
pop
pushf
adc
ljmp
outsb
xor
mov
or
test
jg
pusha
je
mull
ret
push
movsl
int
xchg
stos
arpl
pop
or
out
rcrl
insl
mov
sub
pop
inc
add
dec
adc
and
outsb
scas
add
xor
es
xchg
mov
sahf
test
jae
or
incb
rorb
iret
test
and
out
xor
or
cmp
sbb
ret
pop
adc
push
out
push
push
movsb
mov
sarb
jmp
cmp
bound
sub
pop
cmpsb
and
xchg
sarl
clc
rcll
cmc
xchg
xchg
xchg
jo
sub
sub
jl
mov
xchg
daa
add
mov
imul
push
inc
mov
sub
pop
push
push
js
cmp
in
out
dec
or
mov
jbe
inc
sbb
mov
out
push
lcall
push
aaa
filds
add
and
aas
sub
add
pop
and
fistpll
jnp
lods
adc
rclb
mov
cmc
push
scas
and
inc
jl
push
test
dec
push
std
rcr
push
mov
mov
mov
and
ljmp
cmpsl
jge
and
cwtl
in
aam
xchg
inc
add
lock
dec
push
sub
fwait
lods
punpcklwd
push
jecxz,pn
popf
rcr
iret
inc
insl
pop
pop
lahf
iret
pop
notl
dec
test
sub
sbb
pushf
insl
stc
ret
or
dec
sub
add
cmp
daa
cwtl
mov
in
jl
cmp
push
inc
push
pop
mov
outsl
and
leave
xchg
mov
xor
arpl
scas
adc
mov
dec
push
lret
inc
jbe
aas
and
je
sub
sbb
add
and
scas
xor
xchg
loopne
cmpsb
nop
mov
xor
movsl
sub
jnp
arpl
test
mov
jge
mov
pop
ror
das
or
int3
mov
mov
movsl
pop
ds
pop
scas
sbb
push
push
mov
xor
sti
loope
pop
pop
inc
jp
vmread
fidivrs
or
xchg
add
mov
push
xchg
pop
sbb
cmp
sti
sahf
mov
insl
iret
insl
xchg
outsl
mov
popa
push
imul
popl
xor
js
push
in
fisubs
cmc
adc
and
xchg
mov
aam
je
cmp
lock
inc
lods
push
jno
cld
push
push
rcrl
lret
jp
mov
in
mov
cmp
dec
mov
std
cmp
int3
mov
push
lcall
sub
inc
iret
or
shll
mov
lock
sub
repnz
cmpsb
pop
xchg
push
mov
pop
mov
pop
faddl
fs
ds
enter
dec
loop
or
shlw
movsl
add
int
std
dec
lds
mov
and
rolb
pop
pop
std
sub
ss
movsb
mov
hlt
inc
lar
sub
insb
push
dec
sub
adc
jnp
xchg
pop
pushfw
pop
mov
push
loopne
push
fisubrl
mov
mov
je
sub
jmp
dec
jle
loope
adc
or
inc
and
or
jnp
lahf
test
dec
shr
cmp
jbe
push
dec
in
mov
inc
pop
cwtl
outsl
dec
adc
adc
xchg
push
mov
fistps
sub
and
ljmp
lret
pop
pop
leave
mov
imul
mov
out
sub
mov
jo
mov
into
dec
addr16
push
and
or
dec
lock
repz
fld
push
ret
add
push
insl
cld
adc
push
out
xchg
pusha
outsb
sbb
fxam
ss
mov
xchg
mov
mov
jbe
push
xlat
sbb
sahf
sbb
popa
xor
mov
lock
ds
add
sbb
enter
call
pushf
in
jb
loope
pop
xchg
adcb
cwtl
add
insl
sbb
pusha
and
out
fbstp
adcl
data16
push
mov
lret
dec
pusha
fildll
movsb
je
cs
mov
push
dec
or
test
rcll
xchg
jg
pop
xchg
cmpsl
cmpsl
add
mov
xchg
scas
movsb
add
mov
xor
test
ljmp
fistl
mov
shrl
cli
rorb
xchg
rolb
and
cmp
bnd
sub
pop
jmp
clc
jnp
arpl
fldl
pop
and
aaa
pop
jge
test
lds
and
ljmp
arpl
movsl
sbb
mov
mov
repnz
fdivl
or
dec
sub
iret
jb
pushf
xor
loop
mov
and
push
pop
leave
or
push
inc
mov
sarl
adc
test
or
out
sub
ja
push
push
sbb
jle
fstpl
dec
std
adc
pop
pop
sub
lds
iret
lds
sahf
adc
cld
clc
cltd
add
mov
jge
enter
pop
xchg
mov
push
inc
dec
sbb
imul
cmp
mov
loope
push
mov
push
xchg
and
fnstsw
js
in
movsb
mov
mov
mov
xchg
pop
mov
pop
cltd
push
mov
gs
mov
ds
cmpsb
dec
xchg
jp
in
sub
xchg
mov
rorb
jl
xchg
cmpsb
out
dec
adc
jns
mov
lods
inc
adc
cmp
ss
stc
mov
fistpll
outsb
loop
fimull
add
dec
je
cwtl
push
lods
add
scas
loop
adc
jge
addr16
sub
orl
stc
adc
ret
jbe
jge
xor
shll
out
xchg
insb
pushf
push
cmp
jne
std
push
xlat
rcrl
sbb
push
outsl
mov
fwait
inc
cmp
hlt
ljmp
adc
repz
pusha
xor
aam
into
cs
sti
mov
ret
push
adcb
bound
mov
ret
sbb
jl
mov
sbb
mov
xchg
pop
loopne
in
xor
sahf
icebp
out
add
mov
or
and
fisubl
pushf
sarb
stos
lcall
adcb
xor
jmp
xor
loop
add
add
jl
aas
loopw
xor
jno
shl
pop
jmp
fcomip
or
dec
pop
scas
push
dec
into
inc
ds
xchg
inc
pop
cmp
pushf
jg
xor
dec
rorb
iret
mov
pop
xchg
sub
sub
jp
xor
dec
mov
rcl
push
stc
je
imul
fldt
cmp
adc
pop
cmpsl
iret
mov
dec
or
and
loope
fsts
test
mov
xchg
xchg
in
div
repz
movsb
sub
cs
pop
and
out
inc
jp
fisubl
cwtl
iret
mov
or
arpl
mov
jl
xchg
and
mov
or
jbe
pop
dec
out
or
out
add
aad
sbb
imull
insb
pop
dec
imul
in
lods
push
add
fs
adc
nop
lods
sub
fcmovnu
and
hlt
xor
call
data16
or
fldenv
mov
test
fisttps
push
fdivl
inc
jne
pcmpeqb
lahf
sarb
popf
cmp
xlat
imul
xchg
xchg
sti
clc
and
in
ds
push
xchg
or
insl
loopne
shlb
inc
loopne
int
mov
sub
data16
inc
cmc
mov
inc
pop
lcall
aaa
stc
mov
aaa
inc
push
dec
jge
sub
or
inc
jmp
ret
pop
pop
mov
adc
dec
movsl
mov
lock
jge
pop
xchg
daa
test
inc
popf
cmp
xchg
das
jae
dec
jl
and
pop
das
sub
adc
or
and
push
xchg
add
mov
lods
nop
push
sub
mov
rol
cld
or
mov
cmpsl
fwait
mov
dec
movsl
loop
sub
inc
pop
loope
add
jg
aas
cmp
jg
negl
or
jp
adc
dec
push
xchg
repnz
into
jnp
push
clc
push
xchg
stos
cld
sub
pop
dec
inc
test
fldt
jecxz
rcrb
push
pop
adc
xchg
mov
push
mov
jns
dec
inc
mov
jnp,pt
mov
push
fiaddl
cmc
roll
sbb
cmpb
ret
mov
or
sbb
in
shlb
stos
enter
daa
dec
test
imul
or
dec
push
jg
mov
int
into
adc
add
fnstcw
pop
mov
sub
hlt
jge
popf
aas
xchg
lret
dec
stos
mov
imul
xchg
fwait
lds
cwtl
test
or
loopne
dec
les
stc
sub
sbb
enter
iret
xchg
push
pop
xchg
jno
in
jo
data16
hlt
and
fdivrl
adc
shl
mov
push
xor
lea
push
pop
jns
in
test
imul
cmp
sti
es
fs
adc
push
std
das
push
inc
sbb
mov
mov
repnz
in
push
xchg
sarl
cld
scas
push
ret
leave
xor
push
xchg
xor
data16
xor
ljmp
inc
icebp
mov
xchg
push
popa
scas
dec
clc
sbb
mov
int
lods
add
adc
ja
inc
sbb
dec
shrl
pop
mov
mov
into
dec
mov
test
mov
sbb
sub
aam
mov
mov
insb
inc
fistl
bound
stos
insl
adc
and
lock
pop
addr16
sub
in
ret
cmpsl
inc
sbbb
jo
mov
shr
inc
inc
inc
mov
mov
dec
and
or
inc
mov
or
xor
push
int
or
aam
add
cmp
pop
lahf
iret
adc
sbb
inc
sti
inc
push
xorb
outsl
sbb
fnstenv
pop
pop
mov
iret
nop
xlat
shrb
push
call
test
and
data16
loopne
add
cld
enter
cmp
add
dec
pop
dec
test
cmp
add
andb
lock
pop
inc
adc
xor
sub
stc
cmpsl
push
fistps
fmull
jecxz
sub
mov
inc
xorl
ficoms
adc
jae
lods
xor
mov
mov
je
test
test
sub
xchg
shlb
and
daa
push
sbb
cli
and
roll
jle
mov
fstp
arpl
adc
jmp
cmp
loopne
push
push
xchg
scas
stos
or
jo
movsb
clc
xchg
adc
or
pop
xchg
fs
jno
cmp
push
and
arpl
leave
adc
cmp
adc
into
sti
in
inc
dec
cltd
int
leave
xchg
nop
mov
adc
pop
mov
movsb
jno
push
dec
loop
cmp
mov
jbe
je
sub
inc
jae
cwtl
mov
daa
xor
dec
inc
jmp
mov
cli
mov
xchg
xchg
pop
mov
xchg
mov
mov
in
ja
in
sarl
das
popf
mov
sub
xor
jb
cmc
dec
jl
mov
out
loope
iret
jmp
push
mov
dec
out
aas
fcmovb
push
jo
sub
jecxz
and
mov
xchg
in
sbb
lock
in
xor
insl
cmp
icebp
mov
dec
xchg
xor
jp
xor
adc
fwait
jnp
sahf
shr
or
sbb
adc
sub
push
adc
pop
dec
out
out
packuswb
push
push
in
mov
jnp
adc
imul
pusha
addr16
rol
je
jl
lds
push
xor
xor
mov
cwtl
leave
bound
xchg
pop
inc
int3
shll
in
mov
ffreep
jl
jle
das
sub
inc
jbe
lret
or
daa
mov
push
ja
add
stos
or
jbe
stos
mov
ss
sub
bound
mov
pop
cltd
mov
or
push
in
jg
out
jno
rclb
sub
pop
push
outsl
jo
xchg
sahf
jecxz
xor
xchg
sarb
sub
in
leave
jns
mov
xchg
dec
stos
mov
into
add
jnp
and
add
jp
sti
cmc
cs
filds
xchg
xchg
orb
jmp
mov
pop
fmull
mov
enter
jge
mov
test
mov
lock
push
into
add
cmp
insl
add
and
cld
lcall
push
pop
xor
xor
mov
shl
mov
jnp
add
push
test
fs
and
pop
xor
jecxz
mov
mov
pop
cmpsb
int
jae
test
dec
cmc
sarb
cmp
xlat
js
mov
or
movsl
jnp
mov
pop
mov
mov
mov
insl
ja
cltd
les
jae
popa
jle
cmp
ds
or
fildl
movsl
lcall
and
nop
or
mov
mov
jmp
pop
push
xchg
xor
testl
xchg
int
fidivrs
fsubs
sub
loope
add
movnti
mov
iret
cmp
lret
stos
push
test
push
std
push
sbb
adc
dec
shl
idivl
fisttps
pop
adc
mov
jbe
daa
test
std
sarb
mov
push
mov
dec
pop
jae
xchg
popa
xor
push
xlat
repz
xor
out
add
xlat
dec
sbb
push
loope
sbb
jmp
lahf
mov
outsl
jmp
lock
adcl
add
js
mov
xchg
sub
sbbb
outsb
lahf
test
inc
cli
xor
mov
mov
sub
stc
loop
jl
jo
sbb
mov
xor
pop
cmpsl
movsb
xchg
xor
fsubrs
fbld
and
ret
push
mov
mov
sub
cmpb
les
nop
leave
int3
ret
cmp
fildll
mov
sbb
add
pushf
pop
inc
add
pop
lods
xor
jo
in
gs
adc
inc
repnz
mov
push
sarb
jg
push
gs
scas
push
arpl
mulb
pop
nop
mov
lcall
jns
xchg
xchg
mov
lds
clc
es
imul
jns
jne
sbb
ss
lods
outsl
mov
cmp
call
adcb
daa
in
loope
lcall
and
cs
andb
in
jns
xchg
xchg
cwtl
fildl
or
inc
push
and
cmp
jecxz
filds
stc
push
cmp
mov
jae
bound
lret
jns
inc
mov
imul
push
hlt
push
ljmp
sbb
adc
negb
in
mov
aas
xor
test
lret
cld
mov
lret
push
lods
scas
xchg
sbb
cmp
popa
or
jl
push
dec
fwait
mov
test
inc
sbb
aaa
arpl
push
ret
repz
jle
push
cld
pop
add
adc
inc
ljmp
outsl
pushl
push
icebp
cmc
sbb
mov
push
call
pop
jo
data16
pop
sub
sbb
mov
int3
and
fcmovb
or
xchg
mov
ja
stos
clc
cwtl
and
add
or
push
and
dec
int
or
in
and
fcompl
sbb
cmp
cs
xorb
adc
cld
out
cltd
js
shrl
movsb
mov
inc
test
mov
or
aaa
sbb
push
into
mov
dec
push
cmp
dec
enter
add
es
loop
test
jecxz
add
test
clc
sti
jmp
movsb
mov
cltd
jge
pushf
fmull
jmp
mov
movsl
popl
js
ficoml
mov
jnp
std
cmpsb
lcall
mov
mov
xchg
arpl
call
inc
mov
xor
add
int
test
inc
dec
add
clc
inc
jecxz
jns
daa
jg
pop
cltd
adc
popa
mov
and
push
push
adc
sbb
hlt
out
scas
jnp
insl
fidivrs
out
xlat
lock
into
test
inc
loope
stos
cvtdq2ps
push
mov
adc
movsb
mov
rcr
jle
mov
xchg
dec
sti
subb
les
sbb
lea
aam
add
popf
sub
lahf
cmp
pop
hlt
xchg
push
ja
mov
fwait
shl
cmp
pop
stc
pop
and
push
icebp
push
ja
and
nop
mov
lds
jb
cwtl
rclb
xor
inc
cltd
jbe
cmpsl
push
outsl
cltd
lahf
pop
inc
shrl
lret
int3
push
jp
repz
cmp
add
insb
enter
mov
sbb
adc
pop
xchg
in
scas
mov
cmp
outsl
stc
stc
xchg
enter
out
loop
cmpsb
mov
aam
mov
pop
lock
sbb
inc
mov
std
sub
in
and
mov
jnp
jp
iret
repnz
sbb
mov
jb
movsb
int
pushf
sbb
pop
test
adc
adc
sti
sbb
jb
hlt
jecxz
fwait
mov
sahf
jmp
sub
movsl
dec
or
lret
daa
and
adc
enter
hlt
rorb
cmp
jle
adc
sub
cmpb
out
add
push
loopne,pt
jo
and
lahf
xchg
pop
fdivrs
js
fists
fs
add
jnp
sub
out
fildll
xor
rorb
xor
cmp
loopne
std
xchg
scas
xchg
fsubl
das
hlt
sbb
sbb
into
inc
das
fsubs
mov
xchg
push
xchg
mov
mov
add
outsb
popa
in
movsl
rclb
mov
inc
pop
mov
or
or
xchg
addr16
push
inc
and
inc
inc
mov
ret
mov
aaa
cmpsl
push
cmp
aad
sbb
xor
test
repz
stc
cmp
xchg
test
repz
daa
fcoml
leave
push
dec
je
mov
sbb
dec
xchg
cmp
cmc
xchg
aam
popf
pop
lret
and
inc
test
xor
pop
repnz
arpl
cwtl
push
push
in
cmp
js
divb
pop
in
lret
pop
xor
sub
les
aad
sub
and
cmp
or
push
inc
push
les
xchg
sub
in
sarb
dec
adc
inc
jp
sbb
sti
jne
fnstenv
jle
inc
mov
jne
or
inc
fsubrp
movsb
call
aam
adc
fcomps
xor
loopne
and
and
xchg
arpl
lahf
pop
mov
in
add
js
inc
push
divl
inc
ja
outsl
repnz
stos
scas
mov
jo
fdivrl
das
test
sahf
push
js
cld
ja
iret
rorb
lahf
loop
cli
addr16
jmp
mov
or
icebp
iret
nop
push
mov
cmp
mov
pop
or
mov
mov
subb
mov
ljmp
adc
leave
inc
ret
rcrl
xor
and
mov
in
cmp
stc
inc
les
pop
test
xchg
add
cltd
lahf
psubsw
sub
or
cmc
je
inc
das
xor
add
inc
mov
cmc
push
xchg
arpl
in
test
into
fstpl
mov
test
mov
scas
push
mov
add
dec
repnz
sti
or
sahf
jle
std
dec
push
std
dec
mov
pop
inc
mov
dec
jge
fwait
lahf
mov
sub
lret
add
cmp
enter
cmp
and
enter
mov
loope
rorl
push
pop
lret
mov
xchg
pop
and
jo
or
lret
lock
lods
jae
mov
in
dec
jle
out
pop
jmp
sub
ret
lods
sub
cmp
xchg
jp,pt
mov
lds
pop
das
stos
dec
adc
sub
add
scas
jl
jb
sub
cmp
xor
cmp
mov
adc
xor
sbb
or
in
mov
jo
sub
cmp
xchg
popa
adc
test
out
inc
jbe
outsb
mov
and
xchg
adc
cmp
jno
in
stos
stos
adc
xor
mov
or
ss
cld
push
adc
sbb
or
cmpsb
push
fucomip
adc
aam
xlat
push
loope
ret
lea
fstps
mov
fisubs
ss
push
popf
gs
stc
loop
inc
fimuls
dec
mov
add
jnp
jle
ss
outsl
add
test
cmp
mov
call
jns
mov
inc
sub
int3
jmp
movsl
mov
jge
or
xchg
mov
push
push
shrl
gs
aad
rcll
xor
in
and
jns
test
and
daa
sbb
or
mov
cmpsl
aaa
cli
imul
mov
fistps
cmp
mov
xchg
andb
sub
lret
add
inc
sbbl
dec
ret
sbb
aaa
dec
pop
or
test
mov
loope
cs
pop
xorl
and
jbe
sub
or
xchg
mov
cltd
mov
arpl
out
movsb
push
xor
adc
mov
cmp
push
sub
and
and
push
jne
shll
add
sarb
cmpsb
das
notl
outsb
xor
mov
xchg
jecxz
mov
lcall
cs
cmc
pop
dec
sahf
pop
loopne,pt
nop
mov
push
lret
je
data16
scas
in
lock
pop
jmp
nop
ss
mov
leave
movsl
cli
adc
sbb
ljmp
xchg
sbb
adc
pop
jo
sahf
mov
mov
sbb
enter
dec
bt
jns
out
push
dec
mov
push
lods
bound
mov
push
ret
aas
test
std
lret
sbb
mov
mov
pop
add
enter
xlat
push
xchg
mov
xchg
inc
cld
mov
dec
out
pop
sti
adc
sahf
sbb
cwtl
int3
fwait
out
orb
mov
out
mov
jnp
repnz
sbb
sub
int
cmpsb
dec
hlt
add
xchg
mov
xlat
jnp
mov
les
adc
mov
test
leave
push
aam
add
gs
mov
ljmp
xchg
out
movsl
cmpsl
sarl
pop
mov
stos
lcall
push
rclb
jle
and
in
and
pop
pop
call
adc
push
cli
xchg
ret
inc
mov
negl
xor
std
add
push
and
adc
xchg
xlat
idivl
jb
ret
or
add
popa
xchg
mov
call
movsl
xor
mov
xlat
xlat
inc
inc
push
loopne
or
mov
xchg
xchg
xchg
movsl
adc
xor
inc
scas
or
lds
and
fs
mov
pop
push
jne
cwtl
pop
inc
xor
cmp
jg
add
xchg
sti
outsl
mov
scas
or
xor
jmp
jecxz
test
xchg
push
dec
sbb
jge
and
mov
dec
sarl
scas
mov
mov
lret
adc
and
mov
aam
xchg
addr16
insl
xor
cltd
push
ja
mov
lcall
jmp
sbb
pop
dec
jo
shll
jne
stos
cmp
std
outsb
push
popf
mov
sbb
add
adcb
xor
imul
jp
adc
fiadds
cmp
arpl
mov
loopne
pop
js
adc
dec
push
scas
fucomp
push
cmp
addr16
pop
xor
loop
pop
aaa
push
push
add
xchg
cli
nop
adc
xchg
rorl
flds
insb
arpl
push
cmc
or
lret
ficomps
xchg
psrld
add
inc
dec
pop
fwait
sahf
jmp
mov
int3
jae
mov
fstps
fwait
adc
sub
imul
xchg
subb
stc
jne
stos
lods
mov
sbb
nop
pushf
idiv
arpl
push
stos
inc
mov
sti
push
or
mov
in
jp
jge
imul
sbb
fs
in
xchg
or
inc
daa
jg
leave
pop
ja
xor
addl
ret
cmc
jo
aas
scas
xor
leave
into
sbb
icebp
mov
loopne
enter
pop
movsb
jecxz
pop
push
mov
fisubs
and
clc
inc
sub
es
push
into
or
mov
test
out
mov
dec
sbb
mov
incl
jbe
and
lret
int3
jae
nopl
je
dec
inc
sbb
jnp
loope
mov
fnstcw
fwait
push
orl
sub
push
cmp
jl
pmaxub
rcll
push
popf
test
mov
mov
mov
xchg
icebp
sbb
sub
mov
lahf
xchg
lcall
cmp
sbb
cwtl
lret
jmp
mov
fwait
pop
decb
jecxz
dec
cmp
xorb
ret
out
xor
xchg
loop
sbb
andl
mov
insb
imul
mulb
dec
fdivp
lods
int
repnz
inc
mov
lret
mov
pop
mov
and
xchg
daa
sub
xor
mov
xchg
lea
aam
jg
jmp
and
jb
loop
add
mov
push
adc
jno
pop
adc
in
mov
insb
popf
bnd
mov
sbb
out
dec
dec
sbb
andl
dec
mov
and
cmp
mov
sahf
sbb
ds
shll
movsl
cmc
lods
jne
adc
add
pop
dec
sbb
jns,pt
je
stos
daa
inc
test
and
inc
xchg
stc
xor
add
lret
cmc
insb
and
adc
pop
fiadds
jecxz
xor
cwtl
mov
call
or
sahf
sbbb
clc
sub
mov
adc
jae
or
pop
ret
daa
je
mov
and
ret
or
jge
mov
leave
sub
mov
push
and
inc
mov
ljmp
pop
push
ficoms
lods
dec
stc
fldt
mov
jnp
inc
enterw
cmpsb
inc
sub
nop
pop
jp
imul
daa
pop
push
add
jno
aad
mov
pop
inc
push
ror
repnz
sbb
sar
dec
out
or
ja
in
adc
mov
ficoml
scas
inc
adc
mov
jne
into
sub
ret
cmpsb
adc
add
xchg
imul
adc
lods
and
fldenv
sub
jo
jmp
xor
cld
push
mov
push
mov
sbb
mov
sarb
push
je
ss
das
jae
popf
incl
xchg
dec
das
add
pop
imul
add
popa
gs
insb
xchg
outsl
daa
stos
add
adc
insl
shld
in
add
std
ds
lds
bound
addl
jp
push
mov
arpl
push
call
pusha
arpl
clc
cli
bound
nop
jb
test
or
sbb
xchg
jle
lret
insb
fucomi
lds
add
mov
out
out
xlat
popa
cmpsl
adc
insb
movsl
repz
aas
jecxz
mov
cmp
popa
aam
imul
xchg
out
aam
imull
sti
pop
adc
outsl
mov
pop
mov
xor
jne
leave
stc
jns
inc
sbb
push
gs
xor
and
imul
xchg
lods
pushf
add
cmp
fldlg2
fcmove
out
pop
fwait
mov
xchg
lret
repnz
sub
pop
ja
pop
iret
ljmp
jnp
fs
hlt
inc
hlt
das
mov
fsubrs
cmp
pop
and
test
jge
movsl
cmovbe
cmp
mov
fbstp
jo
adc
cmpsb
add
cmc
inc
cmc
add
jae
jns
xchg
pushf
and
jne
mov
push
and
ss
mov
fstp
or
push
mov
add
push
popa
add
jecxz
incb
lret
ja
pop
sahf
sti
pushl
orb
mov
push
jle
in
cmpsl
sbb
sub
inc
inc
aaa
sti
or
stos
mov
fwait
xor
lret
mov
mov
sbb
mov
ljmp
mov
loopnew
add
pop
in
cmp
cmp
xor
fnstcw
pop
xor
sbb
idivl
rcrl
call
cmpsl
pop
scas
cwtl
cmp
mov
and
jmp
jecxz
sbb
xor
push
cli
mov
adcb
hlt
inc
jne
fs
jne
cld
inc
mov
test
icebp
inc
mov
shrb
out
fldt
or
push
jg
xor
fidivl
xchg
xchg
jle
add
stos
out
xchg
push
xor
fldcw
xchg
outsl
jno
push
sahf
push
out
std
out
stos
mov
pop
popf
sub
add
aad
gs
jno
xor
and
mov
mov
fidivl
cmp
inc
test
mov
js
and
test
clc
out
loopne
cmp
mov
sbb
addl
stc
psubd
sbb
ds
cs
dec
adc
arpl
inc
push
cmpb
fcmovne
pop
sti
rclb
mov
pop
lret
aaa
mov
mov
subb
adc
xchg
pop
jae
cmp
lea
xlat
stos
out
pop
decl
dec
in
mov
xlat
xchg
xchg
insb
xchg
aam
pop
pop
repz
adc
xchg
inc
jle
jp
call
stos
sub
addr16
js
or
cmp
into
dec
in
adc
and
dec
cmp
lods
loopne
fsub
shll
data16
jbe
aad
arpl
xor
cltd
stos
mov
sub
in
shr
dec
test
aaa
mov
es
icebp
push
sbb
daa
shrb
cmp
inc
out
lods
push
popa
jo
inc
jb
lods
jecxz
leave
pop
imull
pop
and
cmp
adc
adc
scas
sbb
stc
lahf
pop
jae
xorl
xor
ljmp
loope
jmp
jb
out
mov
jecxz
filds
fidivl
push
imul
call
mov
push
add
push
mov
testl
and
fdivl
pop
sbb
inc
lods
or
fcmovbe
std
int3
push
cmc
call
repnz
pop
xchg
dec
cwtl
out
rolb
inc
lret
fcom
inc
scas
inc
fstl
imul
sahf
xchg
stos
lock
fcompl
xor
mov
xchg
fdivrl
xlat
xorb
pop
pop
add
cmp
mov
mov
inc
arpl
mov
or
iret
sahf
and
mov
insl
mov
hlt
mov
pop
shll
mov
insb
cmp
stos
mov
or
add
std
pop
push
loope
and
push
xor
adc
mov
pop
cmp
cld
dec
out
jecxz
pop
jbe
add
push
mov
and
mov
mov
mov
ljmp
sub
cmp
sbb
bound
mov
out
cmp
fidivrl
sbb
sub
mov
jge
andl
movsl
arpl
call
std
scas
test
lahf
sub
sar
aad
pop
dec
xchg
and
and
xchg
push
xchg
out
notl
push
xchg
push
sub
xor
insl
jp
xorl
test
jbe
cmp
lods
jecxz
stos
mov
int3
jo
xchg
rcll
aam
lret
xor
pop
outsb
scas
imul
push
xor
iret
testb
arpl
addr16
test
xlat
iret
insb
inc
call
push
arpl
stc
mov
mov
mov
stos
cmp
dec
jne
jb
test
in
push
mov
shlb
dec
jns
loope
dec
mov
push
outsl
and
icebp
cmp
movsl
cmpl
push
xor
inc
pop
enter
out
jge
lock
push
push
fistl
cmpl
pop
outsl
cmp
cld
mov
mov
sbb
push
jb
mov
xchg
mov
xchg
or
push
push
es
mov
lret
pushw
sbb
das
push
rorb
ss
push
and
cmpsb
out
stos
std
mov
int
mull
add
ss
nop
lahf
mov
and
call
sbb
and
data16
jmp
jns
sbb
or
pop
pop
adc
sub
jb
imul
orl
mov
popa
push
adc
or
mov
pop
rcrl
in
ret
and
test
push
xor
sbb
cmpsl
rcrl
lods
aam
mov
mov
xor
out
xchg
pop
js
inc
icebp
mov
or
cmpsb
xlat
adc
add
pop
mov
or
mov
add
int
or
icebp
cmp
push
lcall
lock
cmp
xor
add
fbld
and
push
mov
pop
push
mov
inc
xchg
add
test
daa
cmp
mov
arpl
mov
jl
xchg
inc
xchg
insl
xor
xchg
jb
vpsrld
sbb
pop
inc
push
fimull
les
loop
outsl
idivl
add
aam
pop
dec
mov
je
xchg
mov
jns
mov
test
mov
inc
jno
pushf
push
xorb
arpl
add
sub
add
outsb
sahf
mov
cmp
mov
xor
movsl
jb
or
cmc
sbb
add
ja
xor
dec
adc
je
push
push
andl
mov
lcall
inc
push
shl
icebp
push
fisubs
fiaddl
in
call
lret
pop
scas
or
pusha
and
sbb
push
mov
xor
adc
pop
fisubrl
pop
cs
dec
mov
mov
cmp
dec
fs
jno
add
xlat
adc
xor
lea
movsl
mov
xchg
cmp
adc
add
xchg
fidivl
insl
gs
ss
rorb
popa
pop
mov
dec
addl
xchg
jmp
jge
xchg
movsb
jge
sahf
mov
std
sbb
dec
cmpsb
xor
lods
addr16
push
pushf
mov
movntq
push
movsb
sahf
sub
dec
push
sbb
mov
stc
andb
add
xor
cld
lock
nop
jae
es
dec
xor
and
movsl
jne
push
push
in
movsl
fimuls
call
enter
loope
jecxz
mov
pop
in
pxor
and
jno
aas
adcl
test
add
mov
pop
daa
pusha
sar
leave
fistpll
scas
or
stos
call
movsl
mov
pop
and
pop
outsb
xchg
push
pop
sbb
les
sbb
pop
pusha
xor
jnp
mov
mov
pop
mov
or
mov
or
stos
inc
lret
sub
mov
pop
xchg
ja
fwait
push
xchg
fisttpl
loop
mov
test
inc
movsb
pop
push
das
sbb
push
lods
movsl
rcll
incl
jecxz
int3
cmp
aaa
popa
mov
xchg
ficomps
xor
stos
fsubrs
dec
mov
test
sti
push
sbb
aam
xor
cmp
and
les
pushf
add
mov
imul
push
test
loope
in
dec
insb
jle
jno
jns
scas
addr16
repz
aas
sub
or
mov
out
jmp
repz
xor
std
imul
rcl
subl
mov
pushf
add
or
xlat
loop
andl
arpl
in
add
cmp
outsl
jl
sub
push
mov
push
icebp
cmc
inc
pusha
dec
insb
xor
mov
adc
clc
sub
test
nop
call
inc
fmull
jge
mov
cmc
std
jns
fsubp
add
ret
adc
js
sbb
arpl
cld
inc
sub
sub
xchg
xor
loop
sub
nop
xchg
or
loop
roll
jb
leave
aaa
cmp
sub
and
dec
xchg
daa
inc
shl
pop
add
inc
inc
daa
jl
rcrb
jno
cld
sub
mov
imulb
adc
cmp
int
cmpsb
insl
add
mov
sub
lcall
sbb
jmp
or
add
es
fnsave
pop
or
mov
xstore-rng
cmpsl
add
xor
nop
push
movsb
add
pop
add
aas
sbb
push
sti
jg
insb
add
mov
or
pop
mov
int3
mov
push
or
lret
lret
filds
mov
mov
pop
sub
mov
mov
mov
cmpsb
mov
sahf
add
pop
and
das
or
and
mov
xlat
dec
pop
xchg
push
push
lock
dec
push
lods
lods
shrb
test
sti
sbb
mov
jnp
out
cmp
outsl
sbb
push
cmpsb
test
call
fstl
cld
aas
push
pop
jp
push
and
sbb
sub
or
out
out
jge
pushf
je
dec
cld
cli
imul
ja
inc
cmp
popf
ja
dec
jg
cli
pop
pop
sub
filds
jo
xor
xchg
dec
jb
xchg
xchg
mov
pop
lcall
cmp
mov
imul
fldl
mov
iret
repnz
in
sahf
adc
daa
repz
in
push
ret
ja
test
jns
nop
xor
ja
jge
dec
lods
jmp
aaa
out
bound
es
mov
lock
xchg
nop
not
fdiv
loop
mov
pop
fsubl
out
sub
stos
fsubs
or
push
fidivrs
test
and
push
dec
lods
das
adc
mov
int
repnz
pop
push
mov
incl
jecxz
aad
push
hlt
daa
jno
adc
cmp
das
cmp
xor
shrb
mov
or
lods
loopne
push
dec
sub
stos
jg
outsb
xchg
daa
fs
pop
adc
stc
bsr
shrl
and
pushf
out
add
stos
mov
divl
and
in
jecxz
cmp
in
xchg
out
and
clc
push
push
fstps
popf
mov
jo
jge
inc
mov
jns
stc
arpl
xor
xchg
mov
pop
loopne
in
xchg
mov
leave
rcl
jmp
mov
lea
xor
sbb
jns
mov
je
sbb
sbb
test
mov
jo
and
rorb
push
xor
xchg
lahf
icebp
mov
adc
scas
and
test
cli
sbb
ret
xchg
daa
xchg
sarl
push
cmp
push
aas
or
push
out
xchg
xor
outsl
cmpb
sahf
stos
and
xor
jg
push
inc
cwtl
pop
int
jno
scas
and
mov
sub
call
mov
test
movsb
repz
fsubrs
adc
sub
mul
xchg
or
cld
jg
sti
add
and
mov
cltd
aam
ljmp
jae
xor
dec
fs
xor
dec
mov
ljmp
pop
shll
jmp
jae
mov
mull
leave
push
shll
xor
sbbb
jle
in
loope
stos
jmp
mov
sub
jp
imul
push
out
xchg
repnz
call
cltd
mov
mov
mov
xchg
dec
inc
scas
movsb
xchg
enter
mov
cld
jmp
jle
loopne
jge
or
repz
cmp
mov
cmp
aaa
sub
sub
dec
dec
not
pop
loop
inc
mov
pop
andb
mov
cmp
xor
aaa
push
or
in
lods
pop
pop
jp
cmp
sub
push
and
jnp
xchg
lea
dec
cld
sub
adc
mov
cld
xchg
rcrb
fcoml
pop
jg
mov
test
loopne
js
out
mov
mov
out
adc
hlt
loopne
into
add
inc
add
cmpsb
or
rcrl
or
aaa
jbe
add
movsb
push
pop
xchg
pop
jp
cld
leave
cmc
loop
mov
and
sub
jmp
aaa
lock
pop
xchg
insl
scas
adc
fucomip
into
jbe
cmp
rcrl
mov
lahf
push
sub
daa
in
ss
pop
adc
jb
pop
and
call
push
fsubrs
test
pop
icebp
dec
adc
cmpsl
sbb
and
and
rcr
add
in
xchg
dec
push
mov
and
mov
xchg
xchg
sbb
movsl
push
mov
xchg
mov
xchg
pushl
dec
cmpsb
dec
jle
daa
lock
cmp
nop
sbb
insl
push
pop
ds
jb
sbb
cli
mov
add
sahf
jle
dec
or
inc
out
sbb
and
xor
incl
add
or
mov
movzbl
mov
lea
xchg
add
imul
lea
dec
xor
add
inc
lea
dec
inc
mov
mov
dec
jne
imul
mov
dec
lea
pop
mov
sub
pop
movzwl
imul
pop
xor
add
inc
add
dec
mov
movswl
inc
sub
mov
mov
add
ret
push
push
dec
inc
push
lea
mov
sub
sub
and
xor
push
inc
sub
lea
mov
push
mov
lea
mov
lea
mov
mov
add
push
movzwl
mov
add
push
add
dec
xor
lea
add
push
imul
dec
push
dec
inc
pushl
inc
call
dec
add
mov
movswl
inc
lea
mov
lea
imul
pop
ret
lea
lea
inc
cmp
jb
movzbl
xor
lea
mov
mov
inc
and
mov
lea
mov
inc
dec
dec
mov
sub
lea
mov
add
and
cmp
jb
movswl
pop
add
imul
dec
lea
inc
mov
mov
and
dec
lea
sub
mov
xor
mov
lea
xor
lea
mov
mov
inc
dec
test
jbe
inc
mov
add
xor
inc
inc
mov
inc
dec
or
sub
and
mov
mov
dec
mov
movzbl
inc
add
lea
dec
and
dec
mov
mov
add
and
mov
dec
mov
mov
mov
dec
mov
inc
inc
lea
mov
sub
lea
dec
jne
dec
mov
xor
mov
mov
imul
inc
or
imul
sub
sub
mov
lea
imul
dec
and
lea
mov
inc
lea
mov
mov
inc
test
jbe
sub
lea
mov
lea
inc
lea
lea
lea
lea
mov
dec
and
dec
dec
add
inc
mov
mov
lea
movzbl
lea
mov
and
inc
add
mov
sub
lea
movzbl
lea
dec
add
imul
inc
and
mov
xor
mov
mov
mov
movzbl
dec
inc
mov
sub
inc
mov
or
add
movzbl
mov
add
add
add
jmp
push
mov
mov
dec
sub
dec
add
dec
add
inc
dec
xor
dec
imul
add
mov
lea
sub
dec
movzbl
add
lea
inc
add
movzbl
lea
add
dec
add
dec
inc
mov
lea
dec
add
inc
add
inc
mov
inc
cmp
je
lea
sub
sub
push
mov
call
call
mov
mov
call
call
inc
mov
mov
inc
mov
inc
and
ret
xor
mov
pop
and
ret
push
imul
lea
dec
dec
and
push
movsbl
mov
push
dec
push
mov
push
mov
dec
or
inc
inc
call
mov
push
sub
inc
xor
mov
sub
and
neg
dec
inc
mov
inc
dec
sub
mov
inc
imul
mov
add
mov
inc
add
imul
dec
je
mov
sub
add
mov
lea
sub
mov
add
dec
lea
inc
repnz
add
dec
add
inc
jmp
mov
mov
mov
inc
mov
dec
dec
lea
lea
mov
inc
add
lea
and
jmp
arpl
push
popa
movl
loopne
pop
testl
mov
push
pop
aam
mov
fwait
icebp
or
pop
adc
lods
movsl
out
aas
push
bound
sub
push
pop
xchg
mov
stos
pop
ljmp
push
shlb
jmp
sti
mov
adc
push
inc
hlt
loope
and
mov
mov
cmp
or
out
lar
dec
lds
xor
ja
leave
pop
cmc
and
jbe
loopne
add
inc
xor
out
icebp
mov
mov
dec
push
inc
aad
in
rcrl
sbb
jo
pop
sbb
xor
pop
xor
shl
sbb
ret
mov
pop
mov
shl
sub
jno
cmpsb
mov
cld
nop
push
in
xchg
cmp
lret
jae
aas
xlat
inc
je
aam
xchg
jbe
lods
cmp
fistpl
pushf
cli
decl
enter
fbld
pop
jo
and
mov
push
shrb
mov
jmp
add
mov
outsb
xchg
insl
push
sub
shl
lock
stos
in
in
pop
nop
or
adc
in
test
dec
les
in
pop
or
push
jbe
arpl
jbe
sub
mov
ja
mov
stc
sbb
inc
mov
lods
bnd
iret
cmp
aas
lods
mov
and
mov
idivl
mov
scas
test
out
ljmp
push
mov
mov
cwtl
xchg
scas
inc
inc
dec
add
sbb
mov
sbb
lds
and
xchg
add
ret
push
and
jp
jo
nop
adc
push
cmpsb
push
mov
pop
leave
push
xchg
std
test
ds
push
push
and
xor
addr16
fistpl
or
push
mov
push
lds
push
jb
dec
xchg
imulb
adc
pop
adc
add
fs
sarl
cmp
jo
push
jmp
enter
mov
cmp
jae
mov
push
jle
jecxz
sti
cmpl
ja
xlat
insl
test
cmc
bound
adc
jbe
mov
icebp
in
fisubrl
mov
adc
xchg
cmp
frstor
out
dec
ss
cmp
arpl
jecxz
mov
je
push
dec
jno
sbbl
fmull
xchg
push
add
leave
in
ror
push
mov
clc
pop
dec
out
inc
jb
mov
es
push
pop
dec
sbb
push
dec
rol
aas
ss
and
mov
in
imul
mov
imul
leave
int3
push
inc
cwtl
dec
pop
frstpm(287
out
je
outsb
mov
mov
mov
divl
fcomps
imul
mov
popa
popf
clc
jecxz
in
inc
pop
mov
dec
and
cs
iret
or
xchg
sbb
and
out
jp
dec
mov
or
sub
cwtl
rorl
lahf
lret
jp
sub
add
shrl
syscall
or
aad
scas
push
testb
mov
test
push
cmp
xchg
movsb
cli
push
xchg
pop
dec
adc
jns
dec
cld
aaa
or
mov
xor
push
fdivrl
ss
aas
jmp
push
data16
jge
rorl
and
add
pushf
sti
lea
mov
inc
dec
or
in
dec
movl
in
or
lahf
dec
test
fwait
mov
pop
and
xor
test
mov
xchg
push
test
repz
popf
dec
dec
fs
jns
in
out
into
hlt
xchg
fs
jmp
push
lods
push
subl
clc
lret
or
fistl
jmp
xor
mov
call
bnd
jae
xchg
adcl
mov
jne
stos
rol
push
pop
stos
repnz
xchg
ja
mov
pop
bound
mov
stc
sub
test
movsb
mov
jbe
dec
into
pop
pop
push
shll
ror
loopne
stos
outsl
add
add
mov
mov
loope
inc
mov
mov
loope
add
sahf
xchg
sbb
or
xchg
das
movsb
jno
mov
adc
jl
push
xchg
loopne
testl
push
mov
dec
into
sub
mov
adc
gs
stos
insb
cmp
lock
lods
ret
lods
dec
fistl
mov
in
cmc
fwait
sarb
and
stos
ret
lret
jno
mov
scas
xchg
dec
inc
imul
dec
int3
fisttps
sahf
adc
gs
lds
into
and
inc
call
mov
xor
cld
and
daa
out
cmpsb
jae
pop
push
or
out
cmp
cmp
jb
pop
andb
lcall
fwait
mov
cmc
jp
or
push
lea
jbe
hlt
sbb
ficoml
jns
stc
mov
fmull
fimuls
out
fcoml
dec
push
pop
xchg
pushf
mov
xor
jne
ret
test
es
sub
stc
or
das
sarl
sahf
shll
movsl
dec
lock
sbb
cmc
dec
xor
and
js
xor
pop
cmp
push
rol
pop
adc
js
repnz
sbb
decl
lret
jp
in
pop
out
in
fwait
pop
pop
popa
push
jl
cli
jbe
push
sub
dec
add
xchg
stc
inc
repnz
dec
jno
int3
push
add
sbb
aas
in
and
mov
xchg
xor
mov
test
push
inc
and
inc
sub
lods
cmp
aam
push
movsb
adc
aam
xchg
mov
push
lock
dec
dec
push
and
sbbl
push
and
push
mov
sub
inc
leave
add
jne
ljmp
in
push
push
pop
lret
sub
hlt
cmc
adcl
outsb
cs
mov
sub
mov
icebp
int
push
or
shr
add
out
rorb
test
mov
pop
sbb
mov
cltd
xlat
xchg
call
sub
push
cmp
sbb
cs
pop
scas
or
xor
sbb
add
mov
loop
pop
lret
stc
dec
adc
push
iret
mov
in
nop
test
mov
pop
fst
pop
push
or
ja
adc
cld
push
lret
out
add
mov
and
mov
jnp
sbbb
or
and
cs
cmpb
mov
test
xchg
nop
mov
adc
jns
jge
imul
dec
scas
lds
punpcklwd
jecxz
pop
xchg
push
mov
xchg
cmp
mov
jnp
cmp
xchg
push
mov
stos
jno
push
fisubrs
fcompl
hlt
shl
pop
and
gs
repnz
mov
sub
pop
ret
dec
and
jmp
inc
in
fadds
repz
xchg
lods
out
mov
idivb
and
aad
dec
inc
pop
pop
mov
mov
or
in
addr16
subl
and
cmp
std
rclb
es
xchg
cmpsl
mov
inc
inc
ja
std
lret
call
ret
xor
pop
call
xchg
fwait
mov
cmp
dec
adc
sbb
xor
or
in
pop
sbb
cs
xchg
inc
aad
dec
es
call
insb
push
push
jne
idiv
stos
inc
ds
mov
xor
sub
push
mov
int
lock
daa
nop
push
ja
sbb
fidivrs
das
lock
sub
out
xor
shlb
lds
cld
lahf
rorl
cmpsb
jl
cwtl
jae
mov
xor
mov
les
add
mov
xor
and
jmp
popa
sti
out
stc
mov
adc
push
dec
aas
adc
mov
adc
lcall
adc
xlat
sub
mov
jg
test
inc
fstpl
jmp
xchg
add
or
cmpsl
pop
pop
jl
test
pop
xor
in
lret
and
sub
into
dec
jns
jns
test
subb
mov
lret
cmc
dec
lods
loope
and
mov
pop
jge
mov
fidivrs
pop
jno
fidivrs
inc
test
cmp
arpl
fs
lds
xor
cmp
sbb
mov
inc
and
and
aaa
jle
fs
adc
xchg
cltd
scas
lret
pop
pop
loop
push
sbb
push
mov
insb
jecxz
popa
test
xchg
mov
xchg
mov
dec
mov
cmp
inc
sbb
xor
dec
lret
jb
je
xchg
sahf
sbb
ficompl
mov
test
inc
jb
hlt
mov
jns
pop
pop
push
xlat
loopne
popf
fldenv
cmp
jle
cld
pushf
dec
js
jmp
sub
add
xchg
pop
mov
cmp
ret
dec
scas
addl
pop
lret
push
xorl
xchg
out
lahf
add
fsubrl
pop
sub
clc
pop
inc
pushf
sbb
mov
mov
flds
pop
dec
arpl
icebp
btr
jae
out
cmp
cmp
les
mov
xchg
dec
mov
dec
pop
sarl
mov
xlat
pop
pop
or
popa
insb
sbb
push
sbb
sub
loope
ljmp
pop
mov
mov
xchg
pop
loope
push
bound
movsb
out
jns
lcall
popa
test
fbstp
mov
mov
inc
or
mov
pop
das
xchg
mov
cwtl
fdivrl
das
insl
into
cmp
out
stc
ret
sbb
mov
mov
call
js
xchg
stc
fists
mov
inc
mov
int3
ja
xchg
in
sahf
leave
pop
test
rcr
pop
fsubs
mov
leave
out
and
mov
cwtl
jbe
lcall
mov
outsb
ret
ss
fwait
insl
mov
sarb
mov
cltd
adcl
in
mov
lock
xor
mov
mov
pusha
mov
jnp
pop
shll
scas
pop
lea
sti
loopne
mov
stos
insb
dec
adc
add
mov
sub
inc
idivb
jmp
add
das
movsl
popa
fisubs
pop
lahf
jmp
adc
mov
fdivl
or
lock
xchg
nop
jnp
mov
mov
jnp
sbb
xchg
push
test
cmpsl
sub
mov
pop
scas
jne,pt
fdivrs
test
andb
jae
mov
jbe
nop
nop
xchg
sarb
js
xchg
faddl
cmpl
shll
ret
out
cmp
fwait
rol
das
jbe
inc
mov
test
mov
lea
inc
cmpsb
insl
mov
add
mov
ds
mov
lret
mov
adc
ds
mov
lods
pop
lock
push
repnz
mov
mov
add
lea
loope
imul
rolb
inc
mov
mov
int
xor
outsb
xor
xchg
mov
jnp
inc
loopne
outsb
sub
arpl
xchg
sbb
imul
iret
lret
cmp
mov
sub
jo
sbb
outsb
fnstenv
xor
mov
add
mov
or
roll
data16
in
repz
jg
fsubs
xchg
dec
lret
mov
add
ret
repnz
push
sbb
or
not
or
in
mov
fdivp
ret
loop
mov
addr16
outsl
sti
cmc
mov
sbb
ret
xchg
xor
mov
inc
daa
jmp
cltd
lret
add
aam
imul
call
rorb
xlat
sarb
jecxz
cmp
and
lods
lret
fwait
into
push
dec
mov
xchg
jno
mov
jge
fwait
xor
and
insl
ucomiss
fbstp
dec
pushf
ja
dec
outsl
add
pop
mov
je
sar
je
jne
pop
adcl
cmp
cmp
mov
shrb
xor
push
sahf
fs
pusha
lcall
xchg
je
hlt
sbb
cmp
scas
push
lret
jge
hlt
imul
bound
mov
sbbb
bound
fs
mov
pop
xor
sbb
mov
stc
repz
aad
lcall
jae
inc
insl
or
daa
add
sub
popa
and
jp
jnp
mov
sub
sti
jp
push
ficompl
xchg
xor
je
jmp
mov
popf
xchg
pop
adc
and
lock
adc
sar
ds
repz
xrelease
fwait
cmp
push
pop
ds
cmp
push
lahf
pop
jg
sub
jl
xchg
out
dec
sti
hlt
mov
pop
iret
pusha
stos
push
std
adc
push
gs
sbb
mov
andl
jno
mov
pop
jne
daa
test
add
mov
mov
inc
xchg
pushf
xor
xor
in
and
mov
loopne
push
shrb
or
and
push
hlt
xchg
cld
inc
test
repnz
sbb
outsl
sub
pop
imul
add
faddl
or
gs
loop
aad
ja
decl
xchg
pop
dec
mov
imul
test
out
mov
cmp
and
imul
in
pop
scas
jb
xchg
lods
jmp
inc
cmp
in
adc
cmp
jo
mov
es
movsl
insb
xchg
imul
lcall
mov
push
sbb
call
lret
js
dec
sti
add
nop
and
add
adc
aas
lock
push
lahf
vpmacssdqh
adc
lea
mul
push
into
pop
dec
call
dec
xor
and
and
jmp
dec
lcall
push
pop
sbb
jbe
push
stos
jnp
add
lret
mov
xchg
cmc
popf
push
js
loopne
cmp
pop
mov
cmc
xchg
push
mov
dec
dec
call
sub
and
call
sub
push
mov
call
imul
add
movsbl
mov
lea
sub
call
sub
add
mov
mov
movsbl
sub
inc
and
sub
movswl
movzbl
mov
dec
dec
call
imul
add
lea
call
xor
sub
call
sub
sub
inc
add
movswl
imul
inc
lea
dec
pop
and
imul
imul
add
inc
pop
add
mov
pop
sub
sub
inc
mov
pop
add
inc
mov
dec
lea
inc
mov
dec
pop
dec
dec
pop
imul
mov
mov
lea
and
call
inc
mov
mov
imul
ret
or
inc
push
xor
lea
push
mov
push
dec
lea
push
movzwl
sub
push
imul
dec
mov
imul
push
sub
ret
push
dec
push
sub
add
mov
lea
push
xor
mov
call
pop
ret
jmp
add
mov
pop
pop
ret
push
inc
add
mov
imul
inc
add
xor
dec
mov
dec
lea
mov
inc
mov
imul
movsbl
inc
imul
dec
imul
or
mov
dec
lea
dec
dec
pop
ret
sub
inc
mov
xor
mov
mov
and
sub
mov
inc
movswl
mov
inc
dec
xor
imul
dec
mov
lea
inc
inc
add
dec
dec
and
lea
sub
cmp
jb
inc
push
inc
lea
push
sub
lea
push
imul
mov
xor
inc
mov
xor
and
dec
xor
imul
add
push
or
sub
push
sub
and
pop
movzbl
movzwl
add
add
add
inc
movsbl
lea
dec
mov
xor
add
mov
mov
imul
mov
lea
mov
movzbl
movsbl
add
xor
inc
add
lea
add
add
dec
lea
movzbl
dec
lea
dec
or
add
inc
inc
sub
mov
sub
sub
lea
jmp
add
inc
add
mov
add
add
popf
and
nop
add
mov
add
adc
inc
add
add
lret
dec
jmp
adc
xchg
mov
ret
or
xlat
cmp
lcall
pusha
sub
cmp
test
cmpb
in
dec
mov
pop
pop
enter
popa
cwtl
shlb
jae
adcl
dec
lcall
cmp
daa
enter
cld
mov
xor
out
jp
ret
insb
dec
aaa
adc
sbb
dec
cmpb
ss
add
sub
std
adc
jle
adc
and
std
jmp
dec
je
aam
rcl
movb
hlt
cmpsb
xchg
mov
cmovns
pop
sbb
mov
sti
lcall
and
jo
pop
cli
rclb
sbb
mov
inc
into
or
sub
ss
and
pop
cmc
mov
lcall
cmp
or
movsb
cmp
push
das
dec
hlt
ficompl
icebp
sbb
cmp
loop
lods
xor
sbb
in
jb
dec
jle
in
addr16
xchg
push
adc
mov
sub
mov
sbb
jl
sbb
mov
loop
ret
ljmp
out
mov
cli
not
lret
add
notl
jno
jbe
jb
adc
xchg
shr
mov
sub
mov
enter
lods
inc
pop
inc
jmp
loope
or
and
jge
testb
xor
ss
sbb
nop
and
idivl
mov
and
pop
sbb
loopne
gs
add
jg
das
mov
sub
push
fsubrs
push
push
mov
jb
jno,pn
out
dec
mov
mov
cwtl
inc
sbb
iret
dec
xchg
adc
mov
lea
sbb
push
test
and
in
aas
and
shufps
movl
or
fwait
pop
jmp
imul
ss
aaa
repnz
divb
lahf
inc
scas
jae
push
cwtl
mov
mov
adc
add
add
jle
or
std
push
gs
les
stos
xor
inc
imul
mov
pop
icebp
push
xor
adc
xor
loopne
inc
ficoms
sbb
lods
mov
out
hlt
mov
sbb
xor
loopne
ret
mov
sbb
add
inc
cmpsb
popl
jo
mov
and
mov
cmp
mov
fsubs
pop
pop
inc
fwait
pop
das
sbb
dec
scas
inc
insb
xchg
dec
movsl
pop
fldenv
ret
jp
pop
xlat
add
xchg
clc
xchg
inc
add
or
jo
shlb
xchg
sbb
or
imul
movsb
xor
jmp
lret
fwait
idiv
push
ljmp
popa
test
jno
push
in
mov
pop
or
in
sbb
rcrb
mov
add
cmp
and
ret
push
mov
xor
mov
popf
cmp
fsubrl
jp
ljmp
bound
out
icebp
cwtl
xchg
divb
mov
or
test
ret
stos
in
inc
push
dec
push
xchg
popf
imul
negb
or
sub
mov
push
mov
sbb
stos
sbb
push
cs
jno
fnstenv
pop
test
je
jns
nop
adc
ret
xor
dec
das
incl
ret
and
cmpsl
test
xchg
lret
add
insl
cmp
push
push
add
rorl
pop
adc
nop
mov
ss
push
pusha
or
pop
data16
iret
movsb
jb
push
popa
adc
lret
loopne
icebp
dec
adc
stos
dec
and
enter
and
sbb
bnd
xor
adc
mov
add
cld
scas
fldt
test
daa
jne
pop
stos
or
and
andnps
add
les
insl
test
ljmp
mov
cmp
pop
dec
out
ja
pop
sbb
sub
aam
sti
scas
loopne
add
add
pop
clc
int3
enter
cmp
daa
fildll
andb
outsb
dec
xlat
mov
pop
dec
mov
adc
jnp
cwtl
ss
andb
lea
push
add
mov
jmp
jno
mov
icebp
lret
aas
cwtl
add
sub
fwait
daa
aaa
filds
jbe
notb
fistpl
sbb
dec
xor
mov
lods
lahf
xchg
jmp
jno
imul
arpl
fsubl
imul
adc
negb
sub
out
ja
cwtl
shl
loope
out
xchg
iret
ret
cltd
rclb
mov
fldt
cmpsb
lret
fldenv
cmpsl
dec
dec
pop
test
andl
xor
mov
adc
mov
pop
out
mov
fdiv
adcl
jmp
or
cld
lock
ja
push
hlt
nop
jmp
lret
mov
loope
sub
push
shlb
mov
lds
mov
int3
pop
inc
enter
lahf
out
stos
int3
xchg
inc
lahf
fcomip
scas
leave
add
negb
lret
movsl
inc
and
and
stc
or
dec
mov
push
push
test
xor
push
jmp
int3
mov
fnstsw
xchg
pop
adc
push
and
cmp
or
shrb
fwait
pop
sbb
mov
lock
dec
add
addr16
js
fldcw
xor
in
imul
ss
cmpsb
outsb
add
scas
jp
fs
xchg
filds
enter
sarb
scas
int
pop
lea
mov
push
jo
sbb
xor
push
pop
shlb
xchg
dec
mov
ror
and
inc
jae
cmp
clc
test
mov
ficompl
push
jo
dec
or
mov
movsb
mov
and
repnz
outsl
inc
int3
lahf
and
outsl
cltd
inc
out
add
sub
sub
rol
movsb
rcrl
in
not
or
in
daa
cs
inc
jle
mov
jecxz
imul
pop
jg
mov
in
mov
push
mov
mov
in
sub
push
fistpll
les
add
fmull
add
ret
jbe
push
ja
add
gs
out
adc
add
mov
mov
cwtl
xor
xchg
adc
sbb
mov
mov
fcoms
dec
call
cmp
in
aas
xor
popa
mov
rcrb
loop
xchg
inc
leave
cmp
insb
sbb
and
and
popf
sarl
fld
mov
movsb
wrmsr
cmp
out
pop
movsb
insb
test
sar
xchg
adc
loope
jno
pop
mov
enter
pop
mov
insl
xor
mov
xor
lock
sbb
pop
adc
inc
fcoms
mov
idivb
and
pushf
sahf
xor
mov
ljmp
inc
loopne
into
cmp
pop
sbb
jmp
jbe
add
push
rcrl
repnz
push
clc
jecxz
mov
and
adc
lock
outsl
sbb
cs
sub
push
sbb
push
push
xlat
mov
or
and
outsb
sarb
addr16
xchg
xchg
mov
cmc
push
aaa
sbb
and
dec
mov
sahf
subb
cmp
es
xchg
sub
and
pop
mov
setnp
jo
mov
mov
dec
push
cmp
sub
push
xchg
push
ljmp
ja
fisubrl
mov
outsb
xor
xor
dec
sar
add
sti
and
scas
insb
fsubrs
and
xchg
cwtl
mov
adc
in
ret
jmp
jge
sub
mov
xchg
sbb
pop
fcmovnbe
dec
mov
out
jp
inc
adc
inc
pop
jmp
loopne
pop
pop
mov
pop
xchg
shll
or
test
and
mov
jbe
push
pop
rcl
sbbl
into
icebp
rcll
and
shlb
xor
les
push
mov
lret
sbb
bts
nop
das
jmp
mov
push
mov
int3
jb
cmp
adc
mov
sub
dec
ds
push
imul
imul
lods
lea
pop
jg
xchg
xor
mov
pop
xlat
ss
int3
cmp
int
sti
mov
pop
mov
repnz
lods
cmp
push
mov
xchg
ret
inc
add
lcall
pop
mov
jb
sub
lds
enter
aam
jecxz
xor
ds
pop
inc
xor
jb
jmp
pop
adc
sbb
xlat
inc
loop
adcb
into
cs
aam
inc
loop
leave
sbb
ret
std
add
iret
mov
or
fidivrs
adcb
jnp
jmp
jbe
pop
pop
adc
mov
dec
and
out
pop
dec
mov
push
out
dec
addr16
out
push
mov
fcmovne
pop
lahf
pop
mov
inc
hlt
rcl
sub
out
pop
ficompl
cltd
jne
imul
or
mov
imul
lds
mov
test
xchg
jo
push
adc
lahf
int
std
das
fisubrl
in
daa
xchg
inc
pushf
lods
jg
roll
sub
jnp
int
xchg
dec
mov
mov
shrl
fadds
xor
stc
xor
push
inc
scas
sub
dec
pushf
jg
mov
sub
pop
fiaddl
into
or
add
adc
push
inc
imul
ret
xchg
loop
push
jmp
dec
sbb
pop
mov
and
cmp
pushf
dec
cwtl
cmp
clc
scas
jl
or
arpl
sbb
adc
testb
fsubrl
sbb
jo
jae
push
jmp
lret
inc
xchg
xchg
rorb
insl
pop
sub
dec
inc
cmc
pop
roll
dec
neg
in
cmp
jge
cmp
cwtl
xor
shll
sub
push
ret
xchg
mov
inc
test
fimull
lods
insb
cmc
es
jp
xchg
cli
cltd
fsubl
sub
in
mov
sub
bound
js
pop
push
xchg
dec
cld
mov
out
xor
add
and
sbb
cmpsb
xlat
roll
inc
hlt
clc
xchg
fstpt
mov
and
fsubr
xchg
outsb
fidivs
dec
xchg
mov
adc
cmp
sbb
xchg
dec
shlb
mov
test
fxch
push
std
fs
jg
mov
cwtl
dec
fwait
dec
nop
mov
push
cmp
mov
sub
dec
loop
and
ljmp
mov
mov
xchg
pop
js
or
sbb
mov
sub
scas
aaa
jo
sbb
arpl
sbb
int
adcb
loop
out
or
inc
sbb
fcomp
jb
push
outsl
adc
sti
jae
dec
xor
dec
and
lock
lods
cwtl
decl
stos
mov
pop
mov
add
addr16
pop
imul
aam
and
mov
sbbb
lds
int3
js
popf
sbb
inc
add
push
call
je
sbb
mov
jnp
or
mov
je
xchg
dec
popf
push
mov
fimuls
lea
cmpsb
arpl
jo
scas
lcall
inc
mov
jle
mov
lock
jle
xchg
pop
arpl
lcall
mov
cmp
and
and
xchg
xor
xor
pusha
jp
call
dec
popf
mov
pop
insb
shlb
add
cld
or
cmp
inc
lret
sbbb
popa
cmpsb
outsl
in
sub
mov
push
adc
sbb
bound
fstps
sub
xchg
xor
cli
or
scas
sti
fimuls
repz
lret
enter
push
fwait
cmp
or
gs
std
call
adc
mov
mov
mov
insb
cmp
test
or
popl
sahf
daa
and
fwait
xchg
pusha
shlb
ret
sbb
inc
jecxz
adc
dec
int3
push
push
sbb
sub
js
cli
mov
bound
sbb
inc
jp
clc
mov
test
mov
fs
repnz
add
pop
jnp
or
and
sub
lds
imull
outsl
xchg
inc
hlt
adc
pop
sahf
inc
pop
jns
cld
mov
std
pop
cmp
push
mov
fwait
xchg
dec
mov
jmp
xor
cmp
jns
pop
js
mov
mov
pop
sub
repz
jns
jne
andb
mov
cmp
das
push
mov
out
xor
push
outsl
mov
push
sbbb
jg,pn
repz
aam
cmp
cmc
clc
sbb
enter
repnz
cmp
icebp
inc
xchg
int3
lds
arpl
into
loopne
xchg
dec
repz
pop
sub
movsb
cmc
in
stos
cld
js
inc
fs
mov
popa
xor
leave
jp
mov
pop
pop
in
mov
gs
fsubrp
fs
inc
sbb
frstor
xchg
into
push
mov
outsl
fwait
mov
push
or
adc
shlb
aad
sub
dec
cmp
jb
mov
js
sarb
mov
fs
ret
pop
movsl
test
ja
ret
dec
outsl
jbe
lea
cltd
fmuls
dec
xchg
xor
dec
cld
dec
dec
pop
fnsave
out
adc
push
jge
jmp
sub
mov
adc
repnz
lods
push
lods
xor
xchg
in
push
xchg
ss
outsl
mov
sahf
nop
inc
nop
mov
inc
push
nop
and
xchg
push
outsl
mov
mov
mov
sub
push
dec
mov
movsl
int3
cmpl
push
rcll
and
adc
lcall
sub
inc
es
dec
sbb
mov
icebp
add
xchg
mov
jl
sub
push
sar
mov
mull
ret
in
out
test
push
hlt
xchg
sahf
push
dec
add
xchg
js
cld
mov
xchg
sbb
andb
mov
sbb
mov
cmpb
loope
insb
jl
xor
ds
sbb
lods
jl
aaa
add
pusha
sub
jbe
inc
mov
divb
pop
or
je
leave
dec
mov
sub
jae
fidivrl
les
adc
pop
jg
inc
inc
imul
pop
push
pushf
stos
or
mov
xchg
mov
mov
ds
scas
std
loope
cmp
in
dec
popf
push
pop
cs
jne
ss
push
xchg
add
adc
outsl
xor
xor
xchg
and
add
fsub
pop
sub
push
jg
xchg
xor
outsb
add
stos
xor
je
out
dec
pop
mov
lret
fnstsw
pop
inc
js
sbb
pop
jbe
sbb
ja
jne
iret
in
jecxz
cli
in
bound
xchg
or
test
ret
xor
cli
inc
mov
mov
mov
push
lcall
and
sub
lock
divps
repnz
loopne
xor
dec
mov
aam
inc
scas
and
js
cmc
pop
mov
fwait
xchg
lock
adc
adcl
fwait
jl
mov
js
jbe
xor
inc
in
jl
cmpsb
int3
shrb
inc
add
not
lds
xchg
loopne
xchg
cmpsl
mov
enter
test
inc
push
mov
and
mov
aad
xlat
test
cltd
mov
insl
xchg
bound
or
aam
addr16
jmp
or
xchg
push
mov
shrl
shll
rcrb
or
add
sahf
mov
mov
push
dec
test
sub
sbb
mov
pop
mov
fstps
cmp
lds
in
xchg
add
pop
mov
xchg
or
or
hlt
rorb
jmp
enter
fsubl
push
js
mov
push
xor
xor
fidivrs
add
cmpsl
jmp
mov
and
mov
push
push
xor
jge
sub
mov
jecxz
stc
sbb
loope
mov
add
movsl
in
mov
xchg
std
movsl
arpl
jmp
outsb
mov
outsl
inc
push
push
add
xchg
sbb
dec
mov
ret
fmuls
call
xor
xor
test
and
sbb
fld
test
pop
insl
mov
in
push
aas
jne
mov
sub
xor
into
stc
out
dec
pop
mov
outsl
xchg
arpl
push
jb
inc
cwtl
mov
pop
xchg
stos
pop
mov
xchg
int
xor
lds
push
mov
jnp
dec
pushf
rol
mov
sahf
xchg
inc
xacquire
or
pushf
sub
push
inc
inc
shlb
aam
xchg
or
push
loopne
push
mov
sti
pop
mov
fcoms
cmp
jmp
das
out
add
scas
xor
ljmp
add
hlt
add
mov
adc
ret
testl
addr16
xor
inc
lds
cmpsl
sub
or
xorb
jae
out
cli
pop
xchg
sarb
ds
xchg
mov
push
mov
mov
rorl
andl
cmp
aam
add
xchg
paddq
pop
insb
jg
mov
jae
outsl
pop
out
xor
out
sbb
sub
arpl
cmp
cmp
add
push
cltd
and
dec
xchg
shll
js
in
or
jecxz
dec
adc
fcompl
pusha
out
push
and
cmpsb
jle
mov
jo
jge
jecxz
pop
mov
mov
cmp
push
mov
cmp
xchg
movsb
xchg
daa
iret
cmpsb
push
ljmp
cmc
push
sub
add
add
in
inc
out
and
inc
fadd
and
enter
mov
push
lret
mov
cli
clc
pop
inc
out
pop
push
cmpb
inc
rcrl
sbb
xchg
out
mov
pop
std
mov
pop
jae
xor
icebp
ror
scas
leave
and
sub
orb
sub
pop
popa
push
ds
shlb
idiv
sbb
dec
repnz
insl
fs
xchg
stos
rol
enter
popa
jle
std
stc
insb
popa
out
xchg
mov
cmc
test
shll
xor
jno
jge
pop
lret
xchg
dec
adc
scas
lret
test
les
lret
inc
mov
scas
jae
je
testb
rolb
loop
les
mov
push
jae
push
lock
enter
add
push
imul
pop
add
gs
fists
inc
and
in
ds
pop
pop
aad
in
cwtl
sub
sub
xor
testb
dec
jae
push
or
push
cmpsb
jb
loop
cmp
loope
xchg
arpl
inc
pop
dec
imul
inc
mov
mov
jo
xchg
cmp
cli
imul
insb
imul
inc
faddl
ret
das
jnp
orl
mov
test
mov
cmp
mov
addb
inc
outsb
dec
fs
jb
or
cmp
sbb
sbb
lods
test
sahf
int3
jns
movsb
jmp
jp
lock
jbe
sub
xchg
pop
test
loop
lret
out
cmp
sbb
imul
pusha
jp
add
sub
fs
pop
fwait
inc
dec
subb
mov
pop
and
aam
arpl
mov
dec
pop
shl
xchg
jp
std
fldenv
mov
jl
mov
cwtl
popf
in
jecxz
movsl
cwtl
jo
out
xor
aas
mov
rolb
xchg
add
das
xchg
loope
js
xchg
cmp
xchg
int3
arpl
iret
adc
decl
sar
push
enter
movsb
clc
cld
dec
outsl
pop
cmp
pusha
int3
sub
xchg
pop
aas
pcmpeqb
loop
ljmp
xchg
js
outsl
fisubs
or
nop
cli
loopne
rcr
out
mov
push
je
stos
inc
sahf
sbb
dec
dec
rcrb
or
sub
inc
or
sbb
iret
mov
lcall
aaa
mov
xor
mov
in
cmp
mov
or
mov
jge
sbb
mov
int
cli
out
cmp
aam
push
dec
idivl
aaa
je
imul
push
movsl
inc
in
mov
popa
cmpsb
lods
mov
push
dec
pop
jne
lahf
sub
sbb
sbb
lds
pop
aas
cmp
mov
adc
lods
adc
mov
pop
lds
inc
pusha
inc
fildll
push
outsb
dec
pop
push
stc
loop
mov
aas
mov
popa
push
cltd
cmp
jo
addr16
pop
sbb
out
jae
mov
dec
dec
lret
xor
lret
or
lret
pop
cmp
ljmp
aas
push
and
scas
cmpsb
pop
adc
pop
dec
inc
jl
dec
push
adc
inc
loopne
sahf
sarl
sbb
inc
mov
cmp
or
in
mov
daa
jno
inc
fs
inc
mov
lret
das
inc
jno
das
imul
jne
mov
xor
sti
adc
inc
cltd
pop
clc
push
std
repz
sub
or
fcomp
push
ja
push
aad
ffree
out
sbb
mov
xchg
loope
lahf
or
xchg
add
add
push
mov
add
inc
jmp
outsb
sub
push
fidivrl
sbb
sti
test
jge
gs
mov
xchg
sbb
idivl
cmc
inc
sub
std
into
push
xchg
std
or
orb
je
jg
dec
aas
ja
arpl
lock
jmp
or
jno
rolb
sar
data16
add
xor
icebp
frstor
mov
test
push
pop
inc
cld
fs
push
jns
mov
loopne
adc
fsubs
cmpsl
insl
cmp
int
jl
dec
cmp
pop
push
cmc
idivb
mov
jcxz
pushf
hlt
test
fldl
lods
leave
popf
or
call
adc
hlt
xor
les
dec
jo
pop
jae
cltd
sti
push
inc
rdtsc
ret
imul
cmp
push
in
dec
add
mov
xor
xor
pop
push
pusha
into
add
mov
or
mov
jp
sbb
xchg
xchg
push
shl
andb
fdivp
jle
pop
in
cli
sbb
lds
xor
pop
sub
scas
popl
inc
adc
rclb
addr16
outsb
sti
cltd
shl
ljmp
es
sbb
into
mov
xchg
nop
aaa
cli
xchg
testl
enter
or
mov
notb
and
sub
outsb
std
lret
rorl
and
pop
cmp
in
int3
outsb
loopne
inc
dec
mov
cld
jg
ss
pop
pop
pop
mov
neg
jbe
adc
xor
xor
lret
inc
and
loop
sub
ret
add
rcrb
mov
nop
rcrb
fidivrl
cmp
data16
jo
sbb
adc
inc
xchg
insb
std
mov
out
je
jge
cmpsb
or
xchg
icebp
add
stos
addr16
aas
cmp
and
imul
fstl
xchg
daa
mov
push
sub
addr16
mov
in
mov
sbb
adc
lret
je
jecxz
mov
sub
dec
mov
imul
mov
cmp
lds
outsb
decb
in
pop
test
les
int
shlb
pop
gs
or
mov
sti
push
mov
in
outsl
xchg
cmp
fsts
sub
dec
push
jne
dec
pop
jbe
mov
pop
adc
push
cmp
call
jns
shl
xor
mov
ret
mov
shld
adc
pop
aaa
inc
cmp
or
push
ror
repz
int
xchg
ret
scas
lods
lea
or
stc
es
jo
sbb
xor
shll
les
mov
add
sbb
std
add
inc
mov
mov
push
inc
jg
nop
popa
cmc
sbb
adc
scas
push
mov
icebp
fwait
inc
mov
mov
and
mov
adc
arpl
inc
jae
stc
ret
sub
mov
sti
hlt
cmp
fnsave
pushf
inc
or
sbb
arpl
in
test
jmp
outsb
adc
in
adc
adc
add
push
faddl
andl
ja
sahf
std
lcall
dec
ret
js
or
hlt
insl
mov
cmp
cmp
fwait
xor
fbstp
aas
push
pop
aam
pusha
call
ret
stc
testl
ja
test
cmp
mov
mov
lcall
test
and
sbb
cmp
sub
mov
mov
call
pop
pop
mov
xchg
mov
xor
jg
dec
mov
and
lcall
fdivr
inc
stc
into
dec
cwtl
inc
daa
ret
pop
sbb
push
daa
inc
dec
aaa
rcrb
aas
ss
int3
jno
sarl
mull
sti
aad
pop
mov
jg
mov
js
jp
movsb
addb
daa
repz
sub
cmpsb
jne
loop
rolb
clc
insl
mov
scas
daa
enter
stos
filds
repz
negl
xchg
outsb
jns
sysret
test
test
cli
sub
fisttpll
mov
mov
jg
icebp
push
jo
rcrl
xor
lock
sub
dec
dec
sub
int
in
sub
sub
lahf
iret
lret
int3
ret
xlat
pop
dec
es
into
test
and
adc
popa
aaa
daa
sar
call
stos
ret
xchg
loopne
add
jp
enter
dec
cmc
sub
arpl
fstpt
xchg
ss
out
shlb
add
pop
loopne
fstpl
fdivs
aam
add
scas
andb
fdivs
lock
cli
xor
ljmp
jge
jecxz
push
out
ret
xchg
pop
leave
mov
xchg
out
mov
inc
mov
fwait
bound
add
adc
mov
cmp
outsb
daa
ffree
bound
sub
mov
stc
into
or
cli
fisttpll
aaa
cwtl
es
push
test
pop
fsubrs
out
or
mov
lods
outsb
and
jns
je
or
cmp
add
jne
mov
ss
clc
jne
xor
mov
out
mov
insl
push
dec
fwait
je
dec
gs
nop
xlat
push
xor
and
stc
dec
std
pusha
sahf
sbb
sbb
movsb
sbb
sbb
outsl
idiv
inc
lock
mov
lahf
cmp
stos
or
out
pop
xchg
mov
mov
sbb
cmp
jns
out
js
std
out
pop
sbb
xchg
inc
jge
mov
mov
add
aas
xchg
pop
cli
mov
or
scas
add
jnp
repnz
xchg
pop
xchg
repz
in
push
sub
ret
loop
cmp
inc
popa
adc
data16
xchg
scas
popa
mov
dec
add
lcall
mov
arpl
and
inc
test
aaa
cs
mov
lahf
jg
icebp
xchg
push
xor
inc
fucomi
bound
jecxz
mov
sub
popa
sbb
xchg
sahf
jge
into
mov
lock
shrb
and
popa
imul
push
push
mov
push
sbb
pop
inc
mov
push
in
repnz
sub
out
inc
inc
mov
test
jmp
push
jb
jecxz
movl
xchg
and
xchg
xor
hlt
mov
jl
pop
andb
test
mov
mov
pop
in
out
dec
dec
cmp
stos
test
inc
sbb
xlat
lret
cmp
shlb
outsl
and
or
adc
and
fstpt
mov
cmpsb
stos
test
xchg
sub
and
movsb
pusha
mov
mov
push
outsb
stc
insb
fsubrl
mov
xor
pop
pop
inc
fwait
xchg
pop
xchg
dec
mov
addl
push
or
jle
cs
pop
sbb
sub
xlat
mov
dec
push
sub
fucomip
inc
jle
pop
add
lea
notl
fs
mov
xor
cmp
lock
in
int3
pop
pushf
decl
ficompl
rcr
push
mov
sahf
push
mov
ljmp
out
mov
sti
les
jp
sti
add
pop
into
test
data16
in
push
shlb
mov
rcrb
pop
cld
sti
sub
addr16
lcall
ds
inc
stos
cwtl
cmp
call
fiaddl
xchg
je,pn
sub
push
cs
cwtl
mov
iret
int3
mov
cmovne
push
sub
add
js
loop
add
lret
ret
es
lret
orl
xorl
ss
shlb
in
popl
adc
arpl
push
scas
cmp
pop
add
push
add
or
ds
lcall
rorl
iret
aam
cmc
mov
sbb
lds
jnp
pop
shll
jo
mov
dec
mov
addr16
lcall
stos
or
inc
shrl
adc
mov
inc
jne
ss
dec
mov
ds
dec
jmp
popf
fdivs
popf
pop
sub
pop
xor
clc
dec
mov
mov
cld
mov
test
cltd
xor
push
jne
jge
shll
jno
mull
fmull
push
fisttpll
mov
xor
adc
push
mov
xor
aaa
pushf
int
push
cmp
fisttps
jge
mov
xor
pop
icebp
out
push
in
sub
sbb
inc
push
lcall
cli
out
imul
out
pop
repz
movsb
add
lret
jp
loop
sbb
mov
stc
inc
mov
mov
dec
loope
jnp
cld
dec
jmp
xchg
and
mov
xor
add
std
push
push
out
aaa
adc
aaa
mov
jae
and
aad
mov
repz
repnz
aas
push
cld
scas
aas
jae
faddp
popf
ja
popa
lea
dec
lods
fwait
das
adc
ret
push
aas
sbb
loop
and
es
insl
mov
jle
push
jle
fbld
clc
loop
add
cltd
sbb
and
cmc
in
and
mov
in
and
daa
ljmp
push
daa
push
ret
pop
pop
int
mov
xor
test
ja
ja
mov
mov
jnp
hlt
out
lods
xchg
pop
mov
pop
in
int
pop
xor
out
lcall
idivb
pop
pop
cmp
jle
mov
add
xchg
push
ja
push
js
xchg
repz
cltd
push
out
addr16
leave
jmp
movsl
ficomps
icebp
mov
mov
sub
test
sub
jge
mov
jb
push
inc
sbb
ljmp
hlt
jle
lds
scas
jnp
push
ds
mov
call
push
mov
scas
pop
xchg
imul
je
lods
bound
repz
lods
mov
test
push
mov
sbb
xchg
ja
loop
outsb
fsubrs
sbb
ds
inc
aad
mov
mov
adc
fs
push
dec
dec
jecxz
movsb
adc
mov
pop
jb
add
fadd
mov
dec
ljmp
add
int3
std
pop
cwtl
lahf
jbe
jl
gs
xchg
sub
daa
lds
je
ds
or
movsl
movsb
cmp
jns
jbe
insb
push
push
arpl
int3
shll
inc
rcrb
add
and
aam
mov
mov
stos
cltd
int
je
fcmovnu
pop
mov
sbb
mov
loope
leave
testl
pushf
and
mov
lahf
push
cmp
in
outsl
fadds
mov
mov
cs
pushf
sub
pop
mov
mov
loopne
mov
mov
gs
mov
aam
jnp
sub
jno
daa
mov
or
mov
push
test
imul
shl
or
roll
xor
jne
andl
mov
mov
mov
xchg
sbb
xor
xor
cltd
psllw
fstps
adc
cmc
cli
out
add
cmc
test
sub
ss
dec
fsubl
ljmp
xchg
int
imul
adc
je
jle
pop
inc
test
xor
nop
outsb
xor
and
jb
lods
repz
inc
jbe
movsb
lods
shl
cmp
stc
and
daa
arpl
mov
push
shrl
jp
push
add
in
std
or
das
roll
sbb
int
jb
lret
cmp
jecxz
sub
sub
xchg
mov
pop
dec
ja
iret
inc
insb
jae
leave
or
inc
mov
pop
cld
in
rcll
cld
mov
dec
mov
fwait
das
push
and
xorl
mov
imul
cmpsb
or
sub
shrb
icebp
inc
mov
mov
lods
push
dec
ljmp
stos
enter
mov
cmp
mov
nop
push
xchg
or
mov
movsl
ret
mov
adc
in
jae
fidivrl
aam
shll
jge
mov
mov
jge
lds
dec
int
int3
pop
dec
sti
mov
mov
fdivs
stos
ja
adc
jg
jecxz
cld
mov
pop
adc
xchg
or
sbb
add
movsb
ja
push
push
cmc
ss
daa
mov
mov
xlat
pop
std
inc
data16
add
sbb
ja
inc
lahf
pop
pop
into
or
pop
ja
inc
lcall
adc
xchg
stos
in
cmp
in
inc
aad
cmc
ljmp
pushf
cli
fistpll
out
or
adc
loope
xor
mov
and
push
and
and
mov
sbb
or
stos
std
mov
lahf
pop
stos
lret
inc
scas
mov
stc
shr
lock
out
repnz
mov
aaa
enter
lret
mov
push
scas
add
call
mov
addr16
and
xchg
mov
dec
sarb
les
or
mov
imul
pop
fs
and
into
pushw
std
cmc
adc
dec
int3
pop
cmp
sbb
out
mov
and
xlat
call
lods
mov
inc
cmp
pop
xchg
in
sub
push
int
jp
outsb
cli
es
ljmp
add
icebp
add
ja
aas
ja
out
mov
xor
mov
xchg
cmc
push
dec
lret
fsubrs
daa
mov
stos
add
mov
jl
pop
cwtl
mov
test
sbb
cli
jae
popf
aas
aas
les
or
cmp
subb
insb
push
inc
pusha
mov
std
mov
in
mov
les
pop
push
gs
add
xchg
and
int
push
out
jmp
adc
mov
rolb
test
or
add
movsb
sti
incl
test
adc
imul
or
fmuls
xchg
test
add
lock
into
mov
imul
xor
rcrb
pop
jmp
or
sbb
push
fistps
aas
mov
cli
je
sti
cmpsb
pop
insl
lods
mov
loop
aam
adc
lea
mov
rcrb
movsb
push
mov
pop
xor
mov
popf
sarb
int
jecxz
leave
or
push
ja
dec
fidivrs
test
nop
pop
dec
add
icebp
into
xchg
in
pop
ja
inc
cwtl
xor
test
inc
mov
insl
cmp
pop
and
stos
scas
jae
lea
shrl
inc
movsb
call
je
clc
dec
enter
xor
mov
and
xchg
fbstp
mov
clc
xchg
nop
or
bound
xlat
bound
xor
data16
mov
aaa
pop
inc
sbb
pusha
nop
add
icebp
xor
cmp
dec
or
push
adc
inc
add
pop
cmp
xchg
neg
test
lret
andl
dec
pop
dec
arpl
data16
movsl
pop
add
push
xor
repnz
cld
jmp
adc
lret
and
push
add
add
loope
push
sbb
push
inc
push
sbb
pop
jns
push
mov
add
mov
inc
inc
fmul
push
lcall
les
pop
dec
negb
test
push
cld
mov
jno
xor
mov
dec
inc
sub
in
out
out
repz
or
hlt
and
aad
xor
clc
sbb
aad
adc
adc
out
xchg
jle
fldl
call
jmp
cmp
leave
mov
sbb
jecxz
inc
rcl
jmp
lea
fs
out
leave
inc
and
in
out
pop
mov
ret
sarl
xchg
mov
in
xchg
ja
sti
push
dec
push
and
mov
sbb
sub
shrl
dec
les
pop
add
inc
mov
je
repnz
sbb
out
pop
sbb
cmp
mov
loopne
jnp
sbb
cmp
xor
inc
dec
inc
movb
push
lods
and
out
push
sbb
inc
inc
mov
dec
cmpsl
orb
sarb
and
sarl
shr
pop
popa
mov
mov
test
imul
add
pop
add
mov
cmpsb
fsub
insb
xor
push
push
push
fld
xchg
mov
aaa
xchg
adc
mov
xor
into
adcb
push
cld
enter
mov
andl
enter
add
dec
ret
in
mov
shrd
ror
or
mov
ret
insb
inc
xchg
xor
andl
xor
sub
jns
testl
add
mov
out
push
das
mov
mov
popa
stos
pop
cmp
scas
ret
enter
push
mov
movaps
popf
add
jle
xchg
adc
je
mov
out
dec
lds
adc
inc
push
insb
ds
lods
xor
jns
into
stos
and
popf
adc
push
adc
scas
pop
jb
bswap
push
push
scas
scas
push
pop
dec
clc
inc
jae
daa
lods
lahf
bound
adc
lds
ret
out
xchg
cmpl
loopne
mov
lds
jmp
lock
inc
lahf
xchg
insl
roll
mov
sbb
aas
std
sub
ret
nop
testl
inc
adc
fimuls
out
int
jne
xlat
sbb
pop
push
add
push
sub
or
cmp
xchg
into
popa
fiadds
pop
xor
inc
lret
xchg
mov
mov
les
sbb
sub
inc
xchg
js
and
aam
rcrl
xor
hlt
mov
fisttps
scas
mov
push
jnp
insb
jne
stos
enter
xchg
pop
dec
pushf
xor
stc
call
mov
pop
negb
hlt
mov
call
daa
ljmp
jnp
xchg
xor
aam
fs
push
ss
movsl
cmp
sbbl
or
rol
or
sahf
xor
shll
call
push
scas
enter
fmuls
aas
mov
arpl
ror
shll
and
mov
pop
aad
hlt
je
push
loopne
pop
push
inc
mov
mov
sahf
inc
stos
jge
and
cmp
movsl
aad
bound
sbb
sub
je
and
xchg
add
fwait
sub
adc
mov
inc
jns
dec
mov
dec
xor
push
jno
sub
sbb
cmpsl
add
pop
xchg
arpl
pop
push
call
orl
inc
lods
jmp
in
adc
mov
jbe
cmpsl
in
out
es
inc
push
cmc
push
xchg
mov
pushf
inc
sub
in
push
mov
outsb
loop
lcall
daa
add
lahf
mov
sub
pop
jmp
dec
inc
cmp
adcl
lods
in
movsb
sub
pop
mov
adc
or
out
pop
jne
lahf
and
shlb
dec
sbb
cwtl
sub
cmp
pusha
mov
cltd
or
cmp
test
test
mov
std
cmpb
push
lahf
push
add
jnp
pop
insb
mov
test
ja
mov
out
cmc
sbb
sbb
cmpsl
fbld
rolb
daa
out
sbb
in
push
mov
mov
test
inc
loope
mov
or
sub
push
ficompl
fsubs
out
push
cmp
or
fbstp
clc
xchg
mov
jbe
sbb
in
sbb
icebp
ss
inc
sub
mov
mov
pop
in
test
sar
push
push
mov
repnz
cld
fwait
xchg
sub
cmp
push
xchg
pusha
repnz
fcoms
loope
jl
adcb
sub
fs
push
cltd
into
ja
lods
das
cwtl
test
mov
out
xchg
cmp
lods
pop
cmp
inc
aaa
xchg
sarb
popf
lods
pop
push
adc
daa
std
les
lcall
xchg
aam
jne
std
or
sub
mov
or
mov
jmp
and
fbld
int3
sub
jecxz
jns
inc
push
pushf
iret
ljmp
into
jne
jns,pt
fcomps
push
clc
fsubrl
ljmp
mov
dec
inc
dec
arpl
js
clc
fnstsw
push
sbb
negl
or
imul
add
cwtl
mov
fstps
aaa
jo
inc
ret
popl
fs
jns
mov
cli
xor
add
xor
push
add
test
sbb
and
jns
mov
adc
cmp
pop
push
pushf
mov
jae
scas
push
in
and
dec
mov
jmp
ds
pop
icebp
call
js
mov
out
fs
cmp
and
test
es
xchg
mov
nop
xor
jbe
fwait
and
jge
dec
imul
mov
call
xchg
push
and
xor
push
dec
fwait
jg
sti
hlt
aam
mov
out
or
adc
push
and
popa
aad
test
ret
lods
mov
jbe
pusha
out
stc
idiv
adc
dec
xchg
adc
inc
inc
test
xor
stos
sub
loopne
sahf
xlat
pop
int
lods
iret
cmc
xchg
sub
xchg
or
lret
movsb
shlb
jl
jae
xor
inc
push
mov
push
xor
xor
adcb
mov
lds
sub
inc
js
sub
in
das
mov
mov
mov
stos
jnp
divb
loopne
and
mov
std
ja
imul
add
adc
jge
iret
pushf
cwtl
in
out
mov
jmp
cmp
xchg
push
or
idivl
in
push
adc
call
cmc
dec
jns
clc
jl
mov
stos
dec
inc
cmp
cmp
push
ja
sub
xchg
in
out
push
inc
jbe
leave
mov
sub
dec
or
cmpsb
adc
cld
jge
xchg
fsubl
push
mov
dec
and
mov
dec
mov
xchg
pop
jne
icebp
or
fistps
je
mov
js
add
mov
inc
test
mov
xchg
mov
fdiv
add
xchg
xor
push
adc
mov
sahf
pop
sbb
stos
sub
out
sti
cmpsl
pop
jno
or
fisubrl
lret
cwtl
fnstsw
dec
out
mov
push
push
js
mov
push
dec
mov
loopne
mov
jl
shlb
rcll
enter
notb
leave
adc
or
inc
or
inc
sti
mov
xchg
adc
jle
mov
ds
xchg
addb
inc
sbb
sbb
ret
in
pop
push
cmc
xor
movapd
cmp
imul
lods
dec
cld
fmull
mov
mov
xor
gs
add
aad
popf
loop
ret
cmpsl
jg
jnp
dec
jmp
nop
stc
jge
mov
cli
andb
enter
xchg
adc
loop
push
jp
psubsw
xor
cmp
call
movsb
je
add
push
jle
xor
xor
pop
idiv
pushf
pusha
xchg
push
pop
dec
cmp
das
add
jne
mov
push
adc
sbb
ds
xorps
xchg
jle
es
out
leave
in
lret
movsbl
or
xchg
aad
mov
arpl
dec
xor
push
cld
mov
out
dec
add
pushf
fidivrs
test
pop
sbb
or
fisttpl
stos
mov
fcomp
lsl
out
pop
lea
mov
cli
andb
andb
ret
mov
adc
jp
ret
mov
xchg
add
push
adc
fdiv
movsb
cwtl
int3
or
icebp
inc
mov
pop
jne
outsb
decl
leave
inc
icebp
cmp
adc
mov
cmp
scas
pop
inc
cmp
lods
cld
mov
push
xchg
movsl
mov
cld
push
and
jae
jecxz
mov
popf
test
cmp
pop
outsb
mov
loopne,pn
xor
sbb
jno
push
mov
and
push
repz
inc
gs
xor
fistl
mov
pop
and
xchg
and
and
or
jp
push
cs
pop
addr16
out
repz
das
lret
pop
xchg
adcl
jmp
push
dec
lock
inc
inc
push
cmp
lods
jb
loopne
add
ret
jae
adc
adc
cli
mov
mov
cwtl
xchg
jl
push
dec
js
mov
sub
test
and
jb
and
cmpsl
and
movsb
lret
sbb
mov
icebp
pop
idivb
lcall
cmc
addr16
xor
push
or
mov
push
or
mov
stc
in
or
lock
mov
push
inc
inc
jl
add
fists
jno
aad
sbb
cmp
out
les
push
sti
out
mov
pop
dec
sti
xchg
test
out
lret
shll
clc
mov
outsb
das
push
lret
and
leave
es
call
or
notl
loope
mov
jge
push
sbbb
cmp
lcall
lea
js
add
ss
mov
sbb
xchg
pop
mov
jne
in
mov
jmp
pop
push
xor
test
cmp
dec
mov
sbb
push
xor
inc
scas
nop
les
jae
inc
repnz
jne
jae
lret
xchg
sub
ret
imul
or
int3
pop
jecxz
fcmovu
out
mov
int3
mov
outsb
inc
adc
and
pop
ds
sbb
sub
lcall
bound
mov
pop
jecxz
push
xor
or
pop
int
stos
sbb
fcoms
push
in
cmpsb
pop
cmpsl
push
push
imul
das
imul
mov
xchg
into
out
adc
repnz
sahf
adc
pop
jbe
nop
std
mov
lcall
subb
or
xor
add
adc
aas
nop
rclb
mov
xorb
xchg
mov
push
ss
mov
data16
pop
cltd
xor
insb
dec
int3
xor
in
sbb
into
pusha
mov
xchg
mov
loop
lcall
mov
and
add
mov
push
inc
loopne
test
mov
xchg
and
inc
push
jo
jae
dec
adc
test
cld
repz
xchg
repnz
imulb
imul
repz
add
pop
sbb
pop
dec
add
and
lods
scas
mov
aad
in
mov
inc
mov
pop
test
pop
sub
test
inc
movsl
and
js
not
push
fcmovnb
mov
add
subl
jge
mov
out
push
leave
jle
dec
pop
sub
lods
xchg
stc
xor
pop
lods
shlb
adc
mov
mov
pop
cwtl
jnp
pushf
adc
roll
pop
imul
and
and
sub
pop
imul
fs
lds
sub
test
lret
inc
xchg
jb
or
sbb
fadds
fists
jmp
les
push
sbb
dec
out
lods
ret
sti
jmp
xorl
adc
push
and
add
insl
xchg
out
xor
scas
sub
or
mov
stc
ljmp
adc
mov
push
test
mov
and
lret
in
push
mov
xor
and
pop
or
test
outsb
insb
add
and
cmp
and
cmpsl
push
sarb
pop
in
sub
mov
cmp
cli
pushf
or
shlb
movsb
mov
push
sub
movsb
aam
or
push
hlt
pop
pop
cmp
inc
xchg
ljmp
xor
add
sub
ficoms
push
in
addl
inc
pop
and
inc
jg
rolb
inc
xlat
movl
call
jmp
bound
adc
mov
lods
jno
push
pop
hlt
decl
or
or
cwtl
stos
loopne
jae
dec
xor
pop
cmpsl
stc
lahf
jge
bound
mov
mov
pandn
cmp
jns
cmp
or
adc
fistps
test
push
outsb
push
push
or
push
fcmovnb
out
test
out
cmpsb
into
clc
inc
shr
std
mov
cmp
enter
data16
ret
shlb
jne
or
cmp
adc
sub
pop
pop
sbb
fs
lds
mov
jno
fdivrl
rorb
mov
call
jmp
rolb
mov
push
aam
push
push
push
cmp
xchg
testl
and
fistl
mov
adc
loope
loop
gs
mov
rcll
aam
mov
stos
jge
mov
jge
xchg
or
mov
cmp
gs
int3
sub
push
mov
in
jg
dec
pop
je
push
or
dec
push
pop
es
fldt
decb
mov
loopne
rol
movsb
cltd
sub
es
in
ds
addr16
or
jo
dec
fsubrs
xchg
jns
nop
sub
inc
imul
sti
and
mov
mov
cmp
mov
adc
sbb
sbb
ret
outsb
sub
inc
sub
dec
rolb
fists
jge
lcall
arpl
or
dec
jns
pop
pusha
mov
mov
dec
jg
jge
pop
loop
scas
cmp
fsubl
pop
jecxz
pop
pop
fcoml
xchg
cmp
adc
or
jle
jnp
into
cmpsb
test
xor
sarb
repz
push
add
imul
movsb
mov
insl
pop
add
add
adc
int
mov
fnstcw
dec
jg
mov
pop
jo
push
xlat
adc
enter
and
sub
mov
dec
call
cmc
mov
jne
xchg
imulb
xchg
fsubrl
lret
in
pop
fs
popf
lock
and
dec
xchg
adc
stos
pop
or
push
inc
push
add
and
push
pop
dec
mov
or
xor
ja
or
js
push
iret
inc
jns
loop
mov
and
lret
xchg
dec
call
outsb
sti
not
jb
movb
sub
mov
lahf
test
xor
push
and
pop
je
xchg
mov
mov
or
xchg
out
mov
mov
arpl
sub
insl
nop
shll
inc
inc
das
xor
dec
fcomps
xor
movsl
mov
mov
aas
sub
xor
aas
inc
and
mov
popa
in
mov
scas
movsb
push
jge
js,pt
in
sub
xlat
les
leave
js
ret
clc
addb
loop
jmp
sub
loopne
inc
xlat
add
psraw
jecxz
push
xlat
cwtl
insl
xorb
mov
or
hlt
or
mov
rcrb
lock
cmpsl
sub
icebp
shll
or
es
repnz
or
outsb
xchg
insl
mov
inc
fsubrs
sub
mov
mov
ja
jb
mov
push
aaa
iret
jp
dec
lret
sub
in
lcall
mov
and
pop
mov
pop
sbb
xchg
cmp
jno
popa
mov
movsb
insl
fnsave
sysret
jle
jecxz
push
lock
xchg
fists
iret
xor
jl
mov
and
push
sbb
jmp
lcall
add
pop
pop
int3
jnp
sbb
adc
sub
out
ja
sbb
or
add
push
or
push
cmp
push
cwtl
es
dec
cmp
or
push
xor
sti
or
and
adc
icebp
leave
dec
mov
sub
push
mov
fistl
sub
sbb
outsb
inc
ljmp
test
mov
xor
xchg
arpl
imul
test
mov
js
ljmp
jl
imul
daa
outsl
adc
out
fidivl
sub
jmp
popf
ret
cltd
pop
push
mov
jae
cmp
push
inc
test
cwtl
out
dec
lea
jbe
mov
testl
stc
test
mov
push
sub
cmp
cmpsb
std
dec
xlat
es
xlat
rorb
cmp
nop
jo
pushl
xchg
test
mov
sbb
jae
lea
movsb
movsl
xor
pushl
xlat
push
lods
ss
stc
xor
out
test
mov
push
addl
push
fmul
cmpsb
fisubs
mov
or
push
rolb
mov
push
mov
test
jge
cmp
mov
std
fwait
dec
lea
clc
data16
cmpsl
cmp
in
cmc
pop
pop
lods
aaa
cli
sbb
fstl
xor
cmc
addr16
pop
xlat
repnz
push
insb
cmp
mov
outsl
xor
cmpb
clc
adc
hlt
adc
inc
jb
mov
inc
xchg
cmp
cmp
popf
cmpsl
or
adc
movsl
sub
aam
xchg
sbb
jne
adc
and
or
test
fwait
pop
pop
jb,pn
push
jae
fidivrl
sub
mov
cwtl
push
loopne
mov
hlt
sarb
push
iret
outsb
movsb
mov
fistps
test
push
out
cltd
popa
lret
push
fnstsw
sbb
stc
sbb
sub
decb
repnz
jno
and
add
imul
mov
out
xor
outsl
push
pop
shll
mov
cld
and
jmp
mov
adc
dec
jmp
xor
js
das
aas
data16
cmpb
les
ljmp
dec
xlat
addr16
or
sbb
enter
stos
inc
mov
mov
ret
fsubs
pop
ret
arpl
pop
mov
jle
jp
sbb
jno
pushf
incl
imul
popa
imul
and
cmc
xlat
popf
div
ret
lret
push
lret
mov
or
or
sub
push
js
inc
dec
repz
repnz
sbbb
lahf
iret
mov
xor
and
push
xor
and
or
and
addb
pop
loopne
aam
xor
ja
jecxz
pop
dec
shl
fsubr
pop
sub
sub
and
orl
add
shrb
cmpl
sahf
dec
js
cmp
cmp
xchg
pop
idivb
mov
push
mov
jl
mov
mov
and
or
call
loope
lock
pop
rcrb
pop
jl
outsl
xchg
mov
dec
adc
push
cmpsl
xor
sbb
mov
mov
dec
or
inc
xchg
cwtl
mov
cmp
xchg
pop
aam
fisubrs
nop
sub
cmpl
xchg
xchg
push
leave
dec
in
mov
push
xor
xor
jbe
adc
mov
mov
dec
mov
push
fwait
adc
inc
hlt
or
les
inc
inc
inc
gs
push
or
roll
pushf
inc
bound
imul
hlt
jne
loope
dec
push
enter
xchg
jmp
mov
and
in
lret
add
and
push
out
push
jo
daa
push
fldcw
rcll
fnstsw
mov
fadd
lds
jo
xlat
pushf
popf
or
fstl
sbb
cmp
jg
mul
jno
inc
xchg
shll
sti
inc
std
inc
dec
cmp
lea
mov
ljmp
outsl
repz
pop
cmp
sub
cld
sti
cwtl
lcall
hlt
jle
int
fadds
repz
out
in
fnstenv
cmp
outsb
fabs
nopl
popa
push
mov
enter
js
dec
movb
sahf
push
out
sbb
cwtl
pop
cmp
aaa
cmp
fsin
adc
inc
outsb
mov
movsb
cwtl
inc
scas
out
xchg
call
xchg
xchg
adc
pop
sti
repnz
test
push
or
add
adcb
xor
push
stos
sbb
pop
or
push
pop
adc
shrb
int
aad
stc
xor
xchg
call
xor
scas
dec
jle
dec
daa
and
adc
push
xor
mov
dec
pop
popl
mov
cmc
mov
int3
dec
repnz
xchg
cmp
pop
stos
jg
mov
popf
fsubrl
out
dec
cmp
imul
mov
popf
stc
push
mov
cmp
ficompl
lds
insl
clc
je
fisttpl
push
or
cmpsb
sbb
mov
scas
jbe
jne
insb
in
push
jb
iret
add
cmc
scas
js
in
inc
inc
cmc
lea
pop
out
dec
cld
mov
out
push
icebp
sub
icebp
dec
jecxz
xchg
push
icebp
cmp
mov
aad
es
fst
or
jo
xchg
faddl
adc
clc
loope
je
and
xor
push
daa
xor
lcall
aas
ss
or
push
xchg
popf
xor
mov
sbb
movsb
or
je
and
pusha
cmp
xchg
xor
out
xor
es
sub
loope
xchg
inc
push
test
and
jg
dec
testb
test
push
and
push
or
cmp
sub
mov
xor
es
shlb
clc
std
call
sbb
pop
mov
cmp
and
push
call
xchg
out
push
xor
enter
cltd
bound
jle
sahf
push
neg
xor
je
data16
mov
push
inc
adc
rcr
sub
xor
repnz
fidivrs
mov
push
adc
ret
mov
push
out
insb
jge
sub
dec
inc
push
mov
test
lods
mov
xor
dec
push
mov
adc
xchg
jl
sahf
sbb
scas
sti
sbb
pop
insl
ss
clc
jle
je
sbb
dec
pop
int3
pusha
imul
mov
mov
inc
mov
loopne
xlat
mov
cmpsb
mov
inc
cli
and
int3
mov
adc
mov
push
pop
and
add
loop
test
lea
adc
imul
or
sub
pop
push
mov
pop
imul
cs
outsl
stc
iret
adc
loope
imul
inc
pusha
hlt
loop
fisubl
iret
cmpsb
sbb
dec
daa
pushl
sbb
push
call
fcomps
push
ljmp
jnp
movl
lds
ja
sbb
std
les
lcall
mov
andb
push
cmp
adc
fnsave
dec
jmp
jmp
xorl
in
arpl
inc
push
int
add
jle
xor
sbb
repz
push
mov
cmp
mov
jmp
mov
sbb
pop
mov
dec
jge
lret
rcrl
or
mov
cli
mov
cmp
fwait
std
idivb
fnsave
pop
fcmovu
push
insl
sahf
out
mov
pop
imul
adc
push
adc
loopne
mov
push
cmp
jp
cs
ljmp
push
into
inc
pop
adc
xchg
in
xchg
and
rol
ljmp
jb
es
xchg
pop
sbbb
add
xchg
pop
sbb
out
mov
fstpl
rcll
xchg
bound
fiaddl
add
mov
add
push
incl
adc
stos
jnp
pop
lock
adc
fsubrl
mov
or
nop
cmp
out
cld
push
std
stos
sbb
add
add
sbb
out
lea
and
dec
mov
add
xchg
cmpsb
pop
loop
xchg
push
jnp
xchg
ljmp
mov
mov
std
push
mov
jb
dec
shlb
cli
inc
sbb
inc
cmp
and
sub
imulb
xchg
repnz
or
xlat
adc
imull
xlat
loop
xor
neg
pop
jo
icebp
jbe
cmp
lea
push
jno
mov
fwait
push
ficoml
pop
call
into
lcall
pop
out
add
dec
cwtl
shl
test
loope
mov
cmc
pop
xchg
cs
ja
cmc
mov
arpl
lock
cltd
jge
loopne
mov
arpl
or
test
adc
or
jns
push
and
mov
mov
sub
movsb
fdivs
sbb
add
sub
jno
mov
test
nop
inc
ljmp
fsubl
or
jmp
scas
ficoms
mov
inc
rclb
test
lahf
aad
int
jo
iret
aas
sbb
dec
into
sti
shll
and
mov
bound
add
scas
or
inc
movsb
mov
cmp
xchg
inc
insb
adc
les
mov
pop
dec
outsb
fildll
fnstcw
sub
in
or
jle
dec
lock
jae
jmp
movsl
push
fcompl
subb
push
mov
xchg
popa
mov
ret
sbb
lcall
mov
adc
out
cmp
and
pop
ret
int
sub
sub
sub
add
push
negl
in
mov
js
inc
fbld
sbb
mov
lret
stos
sbbb
xchg
jno
pop
mov
pop
fdivrl
shrb
xlat
mov
shlb
mov
ret
dec
aad
or
or
mov
xchg
ljmp
scas
xor
mov
roll
or
pop
inc
jae
dec
aam
les
mov
mov
iret
xor
add
in
fnstenv
pop
jmp
xchg
loop
pop
pop
lcall
jnp
cmp
sbb
addr16
imul
mov
and
scas
call
xor
sub
push
into
sub
pop
mov
aas
ret
pop
mov
lds
ds
ror
jae
inc
rep
mov
xor
xchg
in
repz
pop
in
sbb
jecxz
sbb
loopne
xor
icebp
pop
fucomp
icebp
jne
pushf
out
test
dec
movsl
mov
mov
shll
fistps
push
fs
inc
pop
mov
pop
sar
div
cltd
in
ljmp
or
fsts
stos
or
int3
cltd
xlat
shlb
test
outsl
xor
add
stc
xor
and
repnz
rcrb
pop
adc
mov
add
jno
pop
jo
roll
add
xchg
push
lahf
out
adc
loopne
or
lea
xchg
lret
xchg
cmp
jl
push
and
cs
xor
scas
dec
push
xor
test
and
icebp
jno
mov
icebp
inc
mov
sub
call
push
lret
dec
fst
ret
in
lret
jle
lea
dec
and
repz
cmp
xor
hlt
in
jbe
mov
pop
fwait
sbb
call
push
jnp
jbe
push
aaa
sbb
scas
mov
push
insl
inc
stos
push
in
jns
cmp
lods
sbb
cmp
or
cmp
out
lahf
int3
jle
jp
cmp
fistpl
inc
inc
sub
add
adc
xor
xor
xlat
lret
gs
inc
inc
das
test
jo
dec
inc
loope
cmp
pushf
lea
ret
aas
arpl
cmpb
add
popw
sub
cmp
pop
pop
and
mov
mov
imul
pop
dec
mov
push
lret
ret
popf
mov
or
sbbb
add
mov
mov
mov
push
add
inc
fisubl
inc
insl
outsb
psllq
jne
shlb
cld
stos
xor
xor
lret
repnz
mov
jmp
dec
jg
lcall
mov
and
insb
push
xchg
or
inc
mov
jne
mov
roll
pushf
shll
mov
clc
jnp
dec
arpl
sbb
add
stos
lahf
clc
pop
fiadds
loop
rorb
inc
push
inc
or
push
sub
lcall
in
push
in
pop
iret
or
iret
pushf
and
add
xor
lds
inc
subps
sbb
and
clc
sub
add
mov
sbb
stos
inc
imul
inc
xchg
xor
jo
int3
loope
and
fnstenv
dec
imul
jmp
lahf
mov
ret
fld
xor
mov
mov
mov
outsb
leave
xchg
mov
adc
mov
aaa
adc
fxch
inc
push
dec
ljmp
lea
sub
int
push
lahf
inc
ss
fstps
xor
mov
mov
xchg
int3
daa
fistpl
arpl
mov
adcb
pop
inc
in
fstpl
push
push
out
xchg
gs
int3
int3
or
mov
jp
adc
add
scas
lea
dec
into
adc
inc
imul
jge
mov
lods
test
aas
fnstenv
add
not
pusha
mov
jmp
xchg
push
loopne
je
inc
adc
mov
dec
daa
pop
mov
stc
mov
call
pop
adc
jo
sbb
cmpl
nop
ljmp
imul
jg
fldcw
push
jecxz
cmp
stos
jecxz
cmp
xor
in
cmp
movsl
mov
pop
inc
mov
cmpsb
xor
jp
pop
push
insb
outsl
pop
pusha
pop
jb
dec
mov
cmp
cmp
xchg
hlt
nop
das
lods
mull
push
jg
fs
leave
cmp
dec
add
popa
push
jecxz
sti
xchg
mov
es
xchg
insb
or
cs
mov
pop
test
xor
push
pushf
cmp
out
lock
add
imul
mov
adc
adc
pop
and
xor
scas
ror
mov
int
jg
in
loope
xchg
movsl
scas
mov
adc
jae
imul
mov
mov
out
pop
add
enter
jo
xor
jg
jl
sub
sub
inc
imul
mov
sahf
inc
js
shlb
pop
add
push
jne
outsl
jmp
leave
les
hlt
fidivrl
scas
jecxz
call
pop
out
mov
and
jl
mov
inc
shl
and
rorl
mov
cmp
popf
sub
push
jns
jl
mov
cmp
xlat
push
push
sub
jno
jnp
incb
sarl
scas
add
scas
shll
das
scas
sbb
dec
mov
sbb
inc
mov
js
out
pop
sbb
jle
jnp
adc
fcoml
daa
push
sbb
ds
jo
shlb
jl
jge
jno
push
sbb
mov
xchg
sbb
movsb
and
or
jo
mov
scas
sbb
imul
pop
cli
out
dec
out
dec
ret
xor
fdivs
pushf
clc
fwait
mov
into
aaa
fdivp
out
rorb
mov
ja
pop
add
cmp
add
jg
push
aam
rcrb
cmp
pushf
out
and
cmp
dec
xchg
mov
ds
mov
and
stos
sub
add
pop
mov
xor
jno
les
shlb
jno
movsb
fnsave
pop
sarl
hlt
leave
sbb
sahf
aam
inc
push
lods
mov
jno
adc
push
jg
hlt
scas
pop
icebp
pop
pushf
sbb
popa
push
nop
in
adc
jns
push
mov
fldl
inc
idivb
pop
fcmovne
out
fistpll
sbbb
cli
inc
inc
pop
mov
cmp
sub
add
int3
xor
enter
ret
lret
cli
mov
cwtl
cmp
sub
sub
sar
cmp
inc
dec
dec
imul
jmp
inc
js
jp
ret
cld
pop
loop
adc
or
popf
movsl
lahf
push
rcrl
sub
mov
ds
jle
pop
pop
pusha
std
in
hlt
sbb
dec
hlt
roll
fwait
jl
repnz
in
sub
ficoml
outsl
fs
mov
hlt
push
xor
mov
aas
popf
push
push
shll
setl
outsl
cld
ljmp
add
adc
cmp
lea
andb
mov
aas
mov
nop
movsb
xchg
test
roll
mov
add
jo
addr16
imulb
cmp
dec
cwtl
cmp
fisubrl
aad
xchg
jbe
xor
je
push
das
cmp
jns
jmp
lds
fwait
rorb
stos
mov
lret
lret
pop
test
addb
mov
fwait
inc
es
cltd
dec
popf
testb
mov
inc
stc
nop
or
xor
pusha
push
stos
mov
jl
pusha
add
adcl
cmp
push
mov
sbb
mov
mov
repnz
popa
xorb
push
bound
xor
in
insl
add
imul
jp
lock
inc
popa
fs
xor
cli
testb
mov
dec
pop
outsb
movsb
hlt
arpl
fcmovnb
movl
lahf
xchg
mov
mov
inc
js
mov
pusha
lea
fstpt
outsb
lock
mov
mov
daa
cmpsl
lds
xchg
mov
xor
movsb
mov
inc
ja
out
repz
and
jne
sub
push
pop
popf
inc
mov
or
shlb
arpl
movsl
je
and
cmp
into
dec
mov
ret
mov
sub
xchg
fldlg2
mov
clc
xchg
jns
jns
lds
iret
push
enter
je
pop
ja
sarl
lods
adc
xchg
jbe
mov
out
mov
push
sbb
leave
sbb
push
gs
ror
mov
push
leave
in
sar
sub
daa
mov
subl
fcomps
pop
push
popa
lock
xchg
sub
daa
clc
clc
test
lock
stos
inc
xor
in
je
fwait
insl
lahf
inc
mov
loopne
sahf
mov
mov
popf
jns
addb
repnz
cmp
jmp
call
nop
sub
clc
push
rolb
cmpsl
shr
dec
mov
out
jno
push
xchg
hlt
clc
cmovne
imul
ret
lret
jle
sub
lds
jmp
mov
jmp
sbb
jae
call
les
mov
add
mov
test
popa
mov
cld
movsb
mov
mov
adc
les
add
icebp
test
inc
inc
xchg
push
pop
cmp
xlat
bound
or
adc
daa
sub
in
pop
xchg
xorb
cld
mov
cwtl
pop
pop
or
data16
mov
pop
scas
push
rcr
sub
sbb
sbb
dec
xor
lcall
cmpsl
and
xchg
jne
mov
repnz
dec
xor
in
sub
or
out
fwait
pop
les
inc
xorl
adc
jne
fisttps
cs
pop
pop
jecxz
loopne
or
xor
add
mov
sbb
shr
xchg
xchg
mov
jns
jge
push
xor
inc
xchg
cmp
push
out
xchg
add
add
popa
outsb
or
xchg
jg
jmp
sub
xor
ja
xor
out
adc
pop
scas
pop
jae
or
jmp
std
cmp
dec
cmp
cmpl
dec
scas
pop
mov
test
add
push
pop
pop
add
push
imul
sti
mov
mov
subb
addr16
pushf
add
jae
pop
movsl
jle
js
dec
inc
aad
nop
mov
shlb
insl
jno
jge
jmp
ds
push
push
mov
movsb
jmp
push
into
fsub
mov
mov
outsl
not
movsl
loope
inc
std
pop
add
mov
aad
fs
incl
popa
out
cmpsl
xchg
sub
sbb
xchg
lods
out
add
mov
jg
incb
push
xlat
cmp
imul
pop
leave
inc
fildl
sub
imul
mov
int3
stc
call
mov
xor
and
jl
or
imul
dec
jns
scas
push
push
popa
cmp
bound
aad
lds
and
adc
or
dec
xor
ret
cmp
mov
adcb
addb
std
sbb
cmp
adc
xchg
mov
lods
xchg
or
jno
adc
vsqrtps
ss
loopne
in
inc
cmp
dec
popf
iret
push
cmp
mov
movsb
jns,pn
add
mov
std
push
push
add
dec
jae
insb
fists
inc
dec
rorb
test
mov
xor
jg
mov
cmp
in
lock
push
xchg
movsb
inc
mov
mov
sub
nop
sbb
xchg
out
sub
xchg
mov
inc
fldenv
sbb
mov
jge
xorl
mov
outsb
adc
xchg
xlat
sarb
sbb
xlat
jno
jmp
fists
mov
sub
and
and
sbb
pusha
inc
fstps
jl
cli
stos
pop
sbb
or
cmpsl
and
or
mov
rclb
inc
xor
xor
lods
cltd
mov
insl
cmp
imulb
insb
stos
fisttps
xor
cmc
in
aas
dec
iret
cmc
xchg
ja
adc
dec
inc
ret
enter
sbb
aaa
mov
add
outsb
mov
ds
xor
cmpsl
sub
adc
mov
lcall
mov
imul
dec
fsubl
stc
pusha
sub
inc
les
pop
imul
cmp
xor
js
adc
pshufw
sbb
adc
pop
xchg
mov
sub
rcrb
mov
clc
xchg
jle
std
adc
or
pushl
sbb
roll
xlat
cli
mul
repz
clc
inc
insl
pop
test
jl
dec
sub
fadds
shl
jle
out
jnp
mov
fs
cld
xchg
jns
pop
mov
or
ds
lahf
pop
cmpb
mov
outsl
rcr
insb
xor
pop
mov
jns
insl
sahf
pushf
mov
lahf
xchg
cmpsl
jle
imul
aad
dec
stc
lea
subl
mov
dec
pushl
inc
mov
es
enter
aam
cmc
ss
ljmp
outsl
iret
in
pop
mov
mov
cmpsl
mov
lret
sbb
adc
xor
or
cmp
add
jmp
jle
add
subl
xchg
fdivrl
xchg
jecxz
sbb
mov
jmp
std
adc
pop
mov
and
arpl
stos
ret
es
xor
cmc
mov
pop
add
pop
cltd
mov
mov
cmpb
loope
cltd
dec
cmp
testb
jecxz
cs
out
bound
mov
push
insb
shrb
rclb
jno
pusha
dec
pop
fsubrs
in
fldenv
mov
lahf
adc
mov
mov
icebp
jae
adc
outsb
lea
jp
xor
mov
push
mov
push
sbb
rol
mov
jge
stos
dec
fildl
test
xchg
das
filds
mov
add
adc
imul
inc
add
inc
add
jb
lods
add
in
push
shlb
mov
jo
and
in
and
popf
pop
andl
loop
out
inc
adc
ficoml
ret
loopne
lcall
aas
lods
add
push
fists
gs
fisubl
mov
sub
nop
xor
inc
xchg
jno
out
push
ds
jg
fsubrp
es
dec
cmp
cltd
jmp
repnz
or
inc
pop
gs
add
adc
stos
cli
cli
inc
dec
xchg
lock
cmp
mov
lods
xlat
sarl
or
xor
dec
je
xchg
lock
cld
inc
jo
in
mov
jb
adc
jge
inc
mov
sti
movsb
push
shlb
add
mov
enter
push
lahf
es
icebp
and
push
out
pop
inc
scas
test
cmpl
dec
cmc
mov
loope
add
xchg
int
lret
push
into
mov
sbb
rolb
fs
add
mov
out
int
push
or
mov
call
aas
jae
lret
push
stc
in
mov
jnp
pop
das
lods
bound
push
xor
and
push
add
das
mov
popf
push
sub
mov
sub
jnp
das
jl
jb
sbb
cmc
add
dec
xor
rorb
mov
out
sub
sbb
mov
pop
sub
push
jge
sbb
dec
mov
lock
movsb
fists
out
subb
sbb
inc
and
test
or
cmp
jle
mov
cmp
sti
clc
push
jnp
ds
js
mov
and
jecxz
pop
xor
mov
movsl
push
rol
adc
mov
mov
lret
dec
inc
push
xlat
stos
popf
push
sub
push
lds
cmp
fwait
jecxz
push
dec
jbe
inc
jmp
inc
add
test
adc
inc
dec
pop
inc
pop
or
insl
push
sbb
sub
cld
mov
or
jle
pop
mov
in
cmp
mov
jmp
cmp
popf
test
mov
jae
scas
push
xor
adcb
mov
mov
jae
inc
arpl
dec
dec
xor
dec
adc
mov
xchg
into
leave
lds
push
cmpsl
in
data16
test
adc
imull
and
rcrb
test
mov
mov
pop
cmp
sub
mov
pushf
data16
aaa
jo
mov
sbb
pop
sbb
xor
decb
mov
fildl
push
rep
add
scas
popa
jbe
xor
push
pop
loop
mov
push
dec
ja
jae
sahf
das
mov
popf
movb
orb
bound
inc
int3
call
leave
leave
pop
iret
jbe
sti
mov
stos
shll
test
dec
sub
insb
mov
stos
clc
ret
ljmp
cmp
enter
xorb
daa
pop
aam
lds
add
clc
sbb
adc
pop
adc
rorb
enter
cmp
lcall
add
movsb
aad
rcl
movsl
xchg
sahf
movsl
cltd
sbb
sub
or
mov
lock
inc
es
push
hlt
sti
cmc
push
dec
jno
sbbl
stc
mov
insl
cmp
decl
mov
dec
je
xor
bound
sbb
xchg
or
roll
adc
sub
mov
loope
mov
adc
inc
dec
jmp
jp
and
shll
inc
jecxz
sbb
jp
leave
adc
xor
pushf
mov
pop
shrb
imul
sti
jg
pop
insb
decl
bound
scas
scas
les
xlat
inc
mov
ficomps
arpl
in
dec
sbb
and
sub
push
int3
mov
xchg
popa
mov
outsl
sub
and
icebp
jb
and
dec
xchg
sahf
movl
cmc
mov
cld
shr
adc
test
push
push
imul
aaa
pop
mov
sub
xor
test
cwtl
fwait
das
xor
mov
jle
jg
xor
add
enter
adc
cmp
data16
push
or
dec
insl
xor
jle
cmp
sbb
insb
fldcw
add
subl
xchg
sub
inc
orb
ss
imul
aad
rcll
pusha
fmul
sub
popf
sbb
inc
daa
mov
lock
mov
jecxz
cli
mov
xlat
push
cmp
cs
dec
inc
outsb
adc
mov
add
lret
mov
int
jge
push
pop
push
jmp
lods
scas
es
mov
fst
stos
mov
cs
and
addr16
adc
sahf
mov
jge
enter
outsl
stos
mov
xchg
cmp
int3
push
sub
mov
je
or
and
in
mov
sub
adc
data16
es
push
jp
loop
subb
clc
inc
xor
jmp
mov
ror
push
jbe
out
jne
cld
and
adc
jnp
stos
cmc
jle
das
inc
lea
xlat
mov
mov
cmp
fdivrs
adc
mov
lods
std
shlb
mov
sbb
dec
call
jno
cmp
sarl
orb
cltd
xchg
punpckldq
daa
adc
call
imul
lds
mov
sbb
sbb
data16
jb
or
nop
or
daa
xchg
into
mov
aam
xlat
les
imul
inc
adc
and
int3
daa
xchg
mov
addb
mov
frstor
cmp
rcll
cltd
sbb
mov
mov
pusha
xchg
cmc
fsubrs
and
mov
or
outsl
inc
insb
out
or
enter
leave
sahf
sbb
pop
sarl
arpl
jge
stc
in
daa
add
xchg
decl
jns
orb
pop
shll
push
pop
rcll
cli
jnp
jp
scas
dec
adc
pop
icebp
pusha
out
mov
pop
lret
shrd
lcall
addr16
lods
hlt
int3
icebp
ja
loop
popa
cmp
mul
loopne
push
test
inc
push
data16
xor
sbb
stos
cld
mov
dec
and
or
das
push
jb
sub
xlat
and
pop
push
jg
adc
lea
mov
cmp
jp
retw
cmp
push
jp
out
gs
arpl
inc
dec
aaa
das
std
mov
insl
fwait
ret
imul
xchg
in
loopne
lock
sbb
cmp
ret
cmp
cmp
jne
push
cmp
jmp
pop
dec
aad
int3
hlt
sbb
fwait
or
int3
out
cmpsl
jge
sub
xor
sbb
adc
jae
inc
mov
push
push
cmp
sub
data16
mov
jmp
ror
cmpsb
mov
xchg
jmp
cmp
js
shrl
or
fisttps
sbb
fwait
pop
movsl
lods
rol
mov
gs
mov
pop
xor
mov
jle
adc
pop
add
sti
adc
ljmp
clc
daa
in
cmpsl
cmpsl
mov
subb
sub
pop
sub
pop
jle
xorb
sub
dec
pop
not
jmp
jle
imul
cmp
sbb
pushf
sub
test
push
xchg
mov
xchg
int
or
or
inc
mov
or
insb
jp
adc
xchg
sbb
jbe
mov
mov
xor
mov
cmpsl
jbe
in
add
xchg
adc
inc
xorb
add
test
leave
dec
sbb
xor
les
test
jns
mov
or
xchg
in
ja
and
xor
add
xor
xchg
xor
jmp
fsubs
or
dec
shl
dec
cmp
and
out
xchg
arpl
fstps
push
cmp
vandpd
add
mov
daa
imul
sub
mov
sub
adc
push
leave
or
push
fmuls
xchg
int3
movsl
aaa
push
decl
shll
fbstp
scas
jl
mov
pop
std
aas
ret
jg
push
dec
push
inc
sbb
add
aas
jno
add
gs
lods
fistps
xchg
scas
jp
mov
clc
in
push
sub
shl
into
cli
dec
stc
pusha
xchg
movsb
or
xchg
sub
sbb
leave
sti
sbb
pop
std
test
add
jecxz
out
lea
pop
push
push
xor
fnstcw
gs
xchg
repnz
lea
xlat
ljmp
pop
cmp
xor
leave
test
lods
dec
xor
push
push
adc
jae
ss
clc
inc
sub
sbb
lods
lret
test
test
mov
test
dec
dec
pop
or
out
mov
cmp
sbb
sub
pop
or
cltd
scas
jecxz
sahf
pop
adc
sbb
lods
mov
fwait
add
inc
jmp
mov
ss
cmp
inc
ds
popl
xor
lea
mov
lea
imul
pop
lds
sub
stos
pop
repnz
or
adc
and
sbb
sahf
xchg
adc
notl
out
fcompp
pop
sahf
shrb
or
test
inc
out
ret
push
ficoml
or
icebp
cmp
lahf
xchg
fsubrl
movsb
jge
mov
stos
mov
lret
nop
and
xor
sub
arpl
mov
les
push
and
in
inc
or
mov
insl
inc
dec
test
jb
arpl
sub
pop
lods
loopne
dec
lahf
das
cmpsb
jne
in
push
js
fisttpl
lods
lea
add
test
out
and
clc
add
lcall
insl
cli
dec
mov
roll
adc
ljmp
fldcw
pop
push
cmc
push
addr16
mov
pushl
rorl
push
dec
push
mov
inc
outsl
mov
in
mov
icebp
sub
adc
insl
sub
xchg
es
faddp
inc
pop
xchg
add
push
scas
lock
dec
jecxz
cs
dec
xchg
add
xchg
movsl
filds
mov
jnp
stos
lcall
mov
das
jg
pop
pop
mov
insb
push
jge
lock
push
mov
int
mov
cmp
stc
in
push
or
fldl
inc
hlt
inc
and
pop
out
xchg
lock
gs
jnp
inc
stos
mov
or
mov
fcompl
jne
xchg
loope
or
inc
mov
jg
fiaddl
lea
dec
test
lea
xchg
dec
dec
dec
xor
mov
sub
cmp
push
data16
sahf
int3
sbb
loopne
inc
adc
ljmp
leave
dec
add
add
cmp
pop
lds
or
pop
lods
push
xchg
leave
cs
mov
lock
mov
push
nop
sub
or
cmp
out
imul
pop
pop
and
dec
jmp
jmp
push
dec
adc
cmpsb
repz
or
xchg
aas
inc
subl
inc
in
clc
outsb
bnd
sub
xor
inc
adc
mov
in
cmp
andb
fdivrs
cltd
movsl
shr
sub
fdivs
popf
push
push
add
bound
pop
jg
inc
ret
xor
mov
scas
fisubl
jmp
push
std
mov
jb
ss
bound
dec
test
imul
aas
xlat
add
stos
iret
mov
in
shrl
and
jno
add
jb
mov
sub
mulb
pop
repnz
outsb
jl
push
or
dec
mov
xchg
dec
adcb
orl
popf
inc
fstl
fidivl
xchg
popa
jo
loop
add
aad
subl
out
hlt
out
loop
jle
adc
mov
pop
push
mov
out
mov
dec
mov
xchg
mov
sub
mov
jne
xor
cmp
push
andl
mov
fcoml
cmp
adc
sbbl
sub
scas
stc
cmc
cmpl
xchg
cmp
cld
js
cmc
sbb
loop
mov
dec
daa
jle
and
test
sub
std
mov
pop
popa
icebp
pop
push
push
mov
xchg
cli
jno
fmul
xor
adc
out
popf
adc
lahf
mov
mov
fildll
jecxz
or
xor
dec
into
nop
adc
rorb
sbb
xchg
clc
in
mov
pop
pushf
sbb
lcall
lds
xchg
fstpt
push
les
dec
call
in
jecxz
test
xchg
dec
pop
or
sbb
test
into
xor
sub
mov
mov
sbbl
jbe
xchg
or
pop
sub
push
jbe
inc
out
adcb
es
xor
mov
xchg
lods
push
xor
and
dec
repz
xor
xchg
and
flds
and
je
sbb
outsb
inc
inc
sbb
mov
jae
imul
cmp
xor
adc
mov
stos
jmp
lret
int
es
mov
roll
inc
fidivrl
popl
add
out
into
cmp
cmp
inc
ret
push
repz
mov
in
mov
popf
hlt
adcb
push
das
inc
pusha
bound
jnp
imul
fstl
dec
inc
sti
iret
mov
sbb
mov
mov
cmp
ja
cmp
lds
fadd
out
push
or
in
imul
cmpsb
mov
dec
pop
mov
clc
test
adc
hlt
mov
addr16
xchg
xlat
add
and
decl
sbb
pop
add
sub
fdivp
into
mov
add
les
sub
sbb
push
jmp
mov
dec
out
dec
push
pop
xchg
ds
jg
dec
inc
add
fsubs
cld
push
ror
mov
pop
jmp
mov
mov
jae
push
sbb
ds
gs
cs
and
mov
or
stc
out
and
adc
imul
mov
jp
mul
imulb
vpand
jecxz
or
cmp
sti
jmp
iret
add
lods
les
adc
mov
lret
lea
ss
mov
js
out
or
iret
xchg
lahf
into
std
sub
sub
dec
dec
xor
xchg
inc
mov
inc
gs
sbb
sbb
jmp
mov
int
test
xchg
call
stos
sub
xchg
jae
inc
jle
and
andl
cmpb
xchg
or
iret
sahf
jge
push
sub
out
adc
movsb
lods
bound
jo
ja
sbb
push
fwait
js
mov
dec
sbb
orb
gs
jmp
sbb
bound
repnz
xchg
xchg
inc
rclb
and
mov
fcoms
push
lcall
or
nop
fisubs
ds
lcall
mov
sub
add
pop
jle
xchg
pushf
push
adc
xchg
sub
mov
gs
imul
pop
pop
adc
idivl
sbb
push
notb
push
mov
xchg
or
fisttpll
cmpsb
fistl
ljmp
push
clc
mov
out
andb
push
dec
dec
dec
xor
lret
in
mov
inc
cltd
sbb
mov
aas
nop
sahf
add
scas
sbb
pop
xchg
jbe
sub
nop
lds
aam
mov
adc
push
dec
sahf
sub
and
pop
fcomip
sub
stos
cmc
mov
out
pop
popl
xchg
out
test
sti
hlt
mov
repz
in
add
loopne
mov
adcb
movb
lock
nop
ja
aas
mov
imul
and
push
push
js
jae
call
cld
aad
jno
dec
lock
fldcw
leave
mov
outsl
xchg
pushf
jnp
mov
mov
rorb
add
cltd
ret
cmp
gs
in
cmp
test
jmp
outsb
mov
sarb
data16
adc
mov
mov
add
jns
call
jae
addr16
leave
push
pop
mov
jo
insb
sub
jl
or
mov
mov
xchg
jb
shlw
mov
leave
jmp
shlb
std
fstpt
push
jg
lods
nop
sbb
dec
pop
sub
inc
inc
jae
push
ja
ficoms
push
inc
into
lcall
mov
adc
faddl
xchg
jnp
mov
jae
and
mov
cmp
lea
jmp
inc
mov
cmp
cmc
adc
or
fiadds
test
into
scas
mov
rcll
ss
inc
lods
roll
f2xm1
pushf
ret
cmpsb
mov
push
sub
sbb
dec
dec
jl
add
jmp
imul
fs
or
adc
dec
dec
adc
sub
mov
jl
rcrl
cmpsl
addb
sub
fs
out
test
mov
test
imul
dec
in
les
inc
mov
cmp
fcmovnu
repz
pop
mov
sti
mov
cli
push
mov
iret
jno
xchg
add
sbb
xor
jb
jne
aas
test
sti
pop
xchg
sbb
int
scas
pop
aam
cwtl
push
jnp
ret
jmp
push
stos
push
jp
mov
ss
pop
push
scas
pop
test
xor
aas
clc
dec
in
xor
sbb
test
jmp
adc
xchg
jmp
out
lea
iret
push
or
push
fbld
mov
cltd
dec
jecxz
jle
int
sub
push
and
fcomps
mov
adc
dec
orb
aam
pop
fdivs
shrb
push
sub
pop
jecxz
ljmp
and
push
sbbl
lods
jp
data16
and
xchg
push
cld
mov
stos
stos
bound
call
dec
pop
mov
and
sub
ja
cmp
scas
mov
movsl
sbb
adc
cli
or
jmp
and
mov
jo
dec
inc
std
sub
jae
std
add
icebp
jecxz
clc
ret
jbe
push
shlb
jmp
or
lret
movsb
sbb
out
lret
data16
out
inc
into
mov
imul
cltd
jecxz
lret
add
es
jmp
push
out
cmp
push
mov
sti
sub
mov
pop
sahf
pushf
mov
test
mov
sahf
or
dec
mov
scas
cmpsl
loop
in
lods
or
mov
xchg
sub
and
sub
jns
xchg
jmp
xchg
jmp
inc
mov
pop
pop
das
and
lock
xchg
inc
pop
cltd
sbb
cld
xchg
inc
jbe
mov
push
ds
xchg
das
pop
inc
cli
clc
and
mov
push
and
mov
cmpsb
adc
in
inc
dec
jnp
outsl
jg
aam
loopne,pt
adc
jne
mov
pop
cmpsl
in
repnz
cmc
mov
push
inc
out
negb
rcr
out
test
shl
call
fcmovbe
cmp
lcall
rclb
mov
xor
or
mov
jne
loopne
mov
repnz
mov
pop
push
sbb
aaa
rorl
add
sbb
lds
icebp
aaa
cmpsb
cmp
out
xor
push
out
out
pop
xor
add
mov
in
into
dec
xor
pop
lret
or
xchg
aad
cmp
pushl
loop
ds
xchg
cld
lea
push
sar
pop
outsl
jo
cmp
fsubp
inc
data16
xchg
ds
mov
lahf
hlt
imul
fldcw
add
xor
popa
xor
mov
dec
lds
push
pop
sar
cmp
xor
clc
mov
pop
pusha
dec
adc
mov
movsb
leave
push
lret
pop
sti
xchg
mov
outsl
movsl
cmp
pop
or
fs
jle
xchg
paddb
fs
jmp
orb
inc
js
mov
pop
sub
mov
sbb
lret
jne
pop
sub
mov
mov
pusha
sub
outsl
cwtl
sub
pop
in
push
push
or
filds
iret
ss
dec
ret
pop
xlat
xchg
movsl
fstpl
push
xchg
cltd
inc
in
in
jo
test
pop
repnz
push
xchg
pop
popf
out
push
je
sub
mov
pop
out
push
sub
into
mov
adc
icebp
cmp
pop
sbbb
mov
lds
insl
repnz
mov
push
cwtl
dec
es
es
pop
leave
les
lret
fimull
pop
mov
fdivs
int
or
and
xor
leave
cmpsl
and
push
push
or
inc
adc
das
fs
cmp
sub
das
loopne
in
xor
mov
call
stc
mov
das
and
ss
imul
inc
stc
jle
and
mov
or
aad
ret
aam
add
mov
lret
cmp
fcmove
ja
neg
xchg
xchg
or
sarb
and
jmp
push
mov
sub
pop
and
lds
rolb
cltd
inc
push
stos
cli
mov
fisubrl
xor
pop
xlat
push
adc
filds
gs
push
mov
sbb
jp
arpl
adc
or
sti
add
ljmp
sahf
nop
pop
inc
or
ss
lahf
dec
call
push
mov
inc
xor
sbb
pop
mov
jl
ret
add
pop
mov
ficoml
and
add
dec
add
jg
insl
inc
xlat
inc
ss
push
dec
adc
mov
aam
fisttps
cmpl
adc
aam
scas
pop
pushf
lret
xor
insb
pop
clc
aaa
dec
pop
sub
cmc
inc
jae
and
pop
mov
jmp
mov
and
out
shl
loopne
inc
repz
jge
sbb
popf
das
jge
in
xchg
xchg
dec
sub
hlt
jg
fsub
sbb
mov
dec
int3
aad
out
mov
dec
or
loope
fldenv
sub
movsb
nop
ja
cmp
sbb
pop
movsl
jp
inc
push
sbb
xor
jecxz
jle
fdivrs
es
mov
je
imulb
andl
adc
xchg
lret
mov
xor
hlt
mov
xchg
jmp
dec
jb
aad
pop
repnz
pop
xor
mov
push
xlat
add
push
push
and
pop
loope
negb
cmp
aas
addr16
jg
shlb
aaa
sub
and
adcl
loopne
or
or
es
mov
mov
push
sbb
outsb
mov
and
sahf
subb
xchg
sub
adc
inc
lock
dec
pop
daa
loopne
push
imulb
inc
xor
shlb
mov
lods
stc
lds
jge
xrelease
push
jno
loopne
mov
adc
and
mov
jg
inc
add
push
hlt
pop
xor
jge
sahf
fwait
imul
jae
adc
dec
jge
jnp
es
cwtl
sbb
sahf
pop
call
fs
stos
add
je
fbld
movsl
mov
pop
mov
icebp
cmp
scas
and
dec
jge
stos
xchg
push
xor
xchg
jae
sub
mov
push
hlt
lret
sbb
lock
out
fldenv
int
in
fs
xor
pop
test
lods
mov
mov
mov
std
sub
adc
cmpsb
jle
cwtl
mov
cmp
jl
sarl
andb
nop
pushf
xor
test
pop
mov
into
stos
jae
sub
push
dec
pop
or
inc
loope
mov
jbe
ljmp
cmp
sbb
inc
push
dec
xchg
xchg
out
add
cmp
inc
popf
and
jg
mov
cs
adc
popf
shlb
dec
shl
push
aas
fwait
shll
push
clc
sub
dec
rcll
xchg
jmp
mov
jnp
cld
adc
jo
dec
inc
arpl
sbbl
sbb
push
movsl
cmpsb
lret
mov
rcll
add
inc
cmp
jmp
and
stos
mov
icebp
mov
bound
mov
in
insl
cmp
test
je
movsb
arpl
mov
sub
loop
imul
cld
add
jno
pop
sbb
add
dec
xor
orl
adc
pop
mov
mov
or
dec
adc
mov
out
mov
shrd
sbb
or
and
cmp
retw
test
and
std
pop
xor
clc
xlat
add
adc
arpl
xchg
lods
or
lock
gs
mov
adc
lcall
loop
call
cmpsb
xchg
cmp
jg
arpl
add
push
sbb
inc
and
inc
add
xchg
sbb
xlat
adc
sbb
aaa
roll
and
cli
push
inc
into
es
mov
cwtl
leave
fstpt
jns
adc
or
daa
mov
cmp
jge
jo
sahf
adc
inc
pop
adc
xlat
sbb
mov
adc
xchg
ja
sub
adc
pop
fistps
mov
add
xchg
jl
push
jle
stos
xor
aam
jns,pn
cmp
cli
out
mov
mov
cmp
fisubrs
add
shrb
ja
test
cmp
fnstcw
jg
and
xchg
mov
scas
mov
sub
mov
es
loope
inc
or
jmp
fs
mov
jo
in
mov
xor
jno
xor
and
cmp
or
dec
ja
sub
mov
call
out
push
gs
insl
fldl
inc
push
aam
icebp
sti
sbbl
ljmp
inc
mov
decl
mov
pop
mov
xor
data16
test
pop
mov
lahf
mov
das
adc
inc
cmp
test
or
clc
mov
out
adc
jg
push
cld
jg
mov
mov
and
in
and
movsl
inc
and
enter
roll
jl
addr16
mov
movsb
dec
imul
push
adc
cltd
lods
lahf
xchg
pusha
xchg
xlat
inc
bound
jbe
lds
aaa
stos
lret
add
cmp
je
cmpsl
int
pusha
loope
cmpsb
mov
dec
sub
mov
pop
jo
cmp
cltd
dec
ds
stos
xchg
lods
rcr
cmp
xchg
fdivrs
sub
pop
call
ds
and
push
test
sahf
stc
ss
pop
mov
xchg
cmp
sub
imul
ljmp
push
sti
xor
dec
dec
xchg
sub
ret
imul
sub
jp
lds
ds
adc
movsl
loope
je
push
repnz
and
mov
les
sbb
icebp
lods
es
stc
ljmp
cmc
jecxz
popf
xor
jecxz
push
dec
testl
pop
in
mov
sbb
xchg
push
cltd
pusha
rorb
out
inc
or
loope
cli
add
inc
sbb
insl
and
jne
sub
adc
mov
xchg
divl
sbb
mov
xchg
pushf
idiv
xor
dec
jge
sbb
hlt
shl
sub
push
dec
mov
aam
xor
mov
scas
leave
push
gs
sti
mov
icebp
mov
popf
sbb
dec
cld
inc
mov
cmpl
add
cmc
xor
das
pop
mov
xchg
cmp
ret
out
sub
push
add
imul
xchg
fwait
clc
dec
push
addr16
fstpt
xor
inc
mov
jne
jae
stos
icebp
hlt
fisubs
int3
push
cltd
sbb
adc
ficoml
mov
xchg
sub
pop
popf
push
mov
or
inc
sub
subb
ret
das
mov
mov
hlt
clc
sahf
and
cltd
aam
pushf
adc
shrl
aas
pop
mov
jo
inc
dec
sub
pop
ljmp
dec
fldcw
mov
adc
popf
lock
jmp
or
add
scas
repnz
addr16
cltd
mov
gs
mov
xchg
inc
and
jbe
add
mov
dec
fwait
jnp
fcomip
mov
cmp
xchg
addr16
jmp
call
hlt
out
mov
push
lret
add
jle
inc
jle
cld
cmp
lds
cmp
in
xchg
push
mov
jbe
ret
lods
int
or
jg
faddl
fstps
xchg
movl
xchg
movsw
orl
mov
mov
xchg
outsl
push
mov
out
shr
scas
ds
clc
in
clc
ja
dec
ljmp
sub
stc
add
jecxz
mov
or
sbb
loopne
into
xlat
cmp
hlt
jne
cmp
push
gs
adc
push
jmp
ljmp
icebp
mov
mov
ja
aas
xchg
xchg
pop
sti
push
push
cmp
les
inc
and
rep
mov
scas
and
lahf
xchg
mov
lret
dec
das
pmaxsw
xchg
stos
pusha
xchg
ja
jl
arpl
insb
cmpsl
outsl
push
movsb
lahf
mov
mov
add
fldl
pop
and
cmp
jecxz
jecxz
lods
sbb
jle
out
sub
fcoms
sbb
dec
leave
into
adc
pop
push
or
add
mov
dec
jl
mov
mov
shrb
and
xor
pop
clc
sub
jne
out
jae
les
xor
mov
es
sarl
dec
scas
dec
mov
xchg
fs
aam
inc
imul
movsb
dec
lcall
das
adc
sbb
in
push
mov
adc
aad
lcall
xor
outsb
cltd
mov
enter
jmp
ljmp
test
inc
sub
out
mov
pop
xlat
jns
inc
les
xchg
sti
pop
adc
imulb
dec
cmp
rcl
cmp
and
sbb
test
and
xor
add
js
xor
adc
mov
daa
cltd
lods
push
cmp
rorl
xlat
sub
xor
jecxz
ud2
lcall
or
xchg
inc
or
loopne
adc
xor
adc
xor
ror
clc
aam
add
mov
hlt
inc
bound
sti
push
xorl
pop
test
pop
and
adc
arpl
movb
rcl
inc
mov
cwtl
imul
mov
repnz
sbb
pop
rolb
in
imul
mov
neg
xchg
sub
dec
popa
popl
ja
loop
mov
xchg
jp
xchg
xchg
fwait
cmp
pop
pusha
jmp
sub
push
daa
pop
jge
mov
popa
push
jge
mov
mov
mov
in
xor
xchg
ss
sub
sub
ss
xchg
sub
stos
push
adc
or
mov
dec
shrd
inc
lretw
das
mov
jge
jl
inc
loopne
inc
mov
xchg
xchg
jno
add
in
xor
call
sub
pop
dec
push
mov
sbb
icebp
je
inc
rclb
jb
adc
cmp
popa
push
xchg
pop
das
bound
xor
imul
pop
jl
ret
fdivp
xchg
or
lods
std
or
mov
pop
cmp
xchg
sahf
jne
bound
pusha
pusha
movsl
mov
jae
bound
add
adc
ds
mov
clc
pop
pop
fs
adc
in
jg
imul
xchg
cld
sub
outsl
pop
popa
lcall
jns
sti
sbb
lret
dec
leave
push
repnz
rorl
cmp
jge
aaa
dec
cmc
aad
add
loop
adc
outsb
sbb
pushf
pop
daa
sub
inc
mov
mov
ss
data16
outsl
inc
push
sbb
sub
add
mov
mov
gs
inc
pop
jae
loopne
dec
push
or
popa
in
inc
dec
push
xchg
ret
dec
lods
cmp
in
lods
sahf
cmpsl
push
movsl
mov
add
cmpb
js
adc
ss
not
lahf
jne
adc
es
xchg
hlt
cmp
lds
lret
clc
push
pop
pop
adc
jae
leave
out
add
int3
xor
mov
lods
lret
std
or
or
xchg
mov
and
ljmp
scas
pop
loop
stos
andl
jge
lret
shr
sbb
mov
cli
aam
dec
add
cmp
shr
cld
popa
sbb
std
mov
push
das
and
xchg
je
cld
dec
iret
sbb
jne
mov
push
and
and
call
mov
pop
lods
xchg
aad
lods
push
mov
push
inc
stos
pop
push
pop
mov
rclb
lret
add
addr16
inc
add
sub
lea
jp
popf
push
out
fldenv
mov
cmpsl
das
push
dec
pop
push
mov
xchg
xchg
push
pushf
shrl
and
add
mov
stos
mov
pop
and
mov
leave
stos
pushf
test
jae
xor
pop
mov
jl
andl
fwait
out
out
fldl
push
pushf
out
sbb
cwtl
lods
mov
lds
mov
push
push
out
mov
dec
push
adc
xchg
sbb
cmp
cltd
xchg
mov
cmp
xchg
int3
xor
or
add
fsubl
fwait
xchg
mov
xchg
ja
insl
dec
cli
mov
mov
fidivl
push
aad
jp
cmp
jbe
loop
push
jl
insl
aaa
sbb
imul
shl
test
ljmp
dec
addr16
lea
stos
mov
adc
pop
es
fs
xor
scas
out
dec
repnz
adc
mov
enter
mov
std
loope
fimull
sbbl
add
iret
out
rorb
push
mov
xchg
xchg
xor
cli
je
stc
adc
movl
adcl
jge
sbb
pop
mov
adc
jb
clc
xchg
pop
cli
adc
pop
lret
sub
adc
pop
repnz
push
mov
cmp
test
out
dec
sbb
mov
mov
jmp
push
in
scas
fldenv
aad
cmpsb
jmp
dec
jae
pop
clc
sbb
test
enter
push
jl
add
test
daa
insl
jne
push
fists
orb
jbe
xchg
add
es
and
adc
dec
and
xchg
and
lods
cltd
popf
xchg
mov
pushf
fsub
test
aas
push
arpl
je
je
lcall
cmpsl
mov
out
push
dec
inc
lock
insb
outsb
xor
xchg
int3
push
dec
mov
push
aaa
push
jecxz
scas
dec
mov
aaa
jno
adc
movsb
or
decb
xchg
sub
jmp
mov
xor
adc
pop
cmp
xchg
popa
dec
sar
in
xchg
into
xchg
push
and
push
push
pusha
enter
jmp
stos
xchg
in
ds
mov
popa
jo
sub
mov
lcall
mov
mov
imul
icebp
sbb
xchg
push
clc
add
shl
add
les
scas
mov
xchg
scas
aaa
negb
loopne
pop
cmp
mov
xchg
mov
and
sarb
leave
test
cli
fstpl
mov
ja
cmp
cmpsl
leave
stos
mov
inc
sarl
jbe
xor
cmp
push
dec
dec
and
add
addr16
sbb
cmc
dec
iret
shll
popf
test
jmp
or
daa
into
xor
or
mov
adc
sub
stos
add
les
add
mov
shlb
jo
je
rorl
outsl
cmp
in
out
lret
cmp
jmp
ja
outsb
sub
mov
push
pusha
push
add
fwait
bound
inc
adc
dec
aaa
cwtl
adc
cmc
jnp
int3
xor
lods
adc
mov
daa
fcomps
adc
in
or
xchg
jae
ds
cld
xchg
mov
push
add
cmp
push
xor
fistpll
cwtl
mov
iret
ljmp
jecxz
lods
jl
stc
sub
pop
inc
xchg
fdivr
dec
mov
pop
mov
lret
sahf
mov
mov
cmpsb
and
rcrl
fldenv
stc
inc
movq
lret
pop
jl
inc
pop
mov
fnstcw
cmp
xor
test
cmpsb
rol
and
mov
xchg
xchg
lds
clc
lcall
jge
gs
insb
jae
je
add
mov
mov
loope
addr16
outsb
xchg
inc
pop
shrb
cld
push
jae
or
dec
mov
pop
mov
jbe
xchg
cli
sbb
sahf
mov
sub
jmp
lcall
lcall
movsb
sub
xchg
in
xorl
add
nop
jno
cmp
dec
pop
mov
sti
xlat
in
xchg
mov
movsb
xor
or
aam
in
xor
dec
bound
addr16
mov
repnz
cmpl
ja
mov
jnp
mov
ss
pusha
dec
and
push
push
scas
and
pusha
inc
dec
out
gs
sub
xor
xchg
lcall
xchg
mov
add
or
setns
pop
inc
mov
in
or
ds
aam
ficompl
pop
xorb
and
outsl
inc
fsubr
in
js
lods
add
movsl
lods
cmp
sub
test
lods
xchg
test
out
xor
pop
mov
add
mov
lds
enter
shrl
cmp
xchg
xchg
add
ficoms
xchg
push
or
call
pop
or
scas
mov
enter
fistpl
push
iret
jne
inc
test
push
xor
jnp
sub
fidivl
imul
mov
insl
mov
js
mov
jae
imul
sbb
cmpsb
pop
xor
mov
xor
mov
or
jns
aam
sti
push
push
pop
loop
pop
sub
out
sbb
aam
jnp
jge
xlat
or
ret
jecxz
sbb
stc
imul
sbb
out
mov
cmp
daa
mov
lds
mov
in
sbb
mov
and
repz
sub
push
in
mov
dec
sbb
pop
pop
xor
fsubs
scas
mov
pop
or
rcl
outsl
push
push
les
negb
mov
stc
pushf
mov
loop
lret
test
divl
mov
shl
add
xchg
sarb
fisttpll
dec
push
shrl
loop
mov
sbb
pop
shl
aam
xchg
or
sahf
int
mov
adc
lods
les
das
jbe
ss
mov
mov
xor
iret
out
rolb
in
push
dec
idivb
mov
jns
test
push
mov
xor
rolb
mov
pop
sti
sub
and
jbe
popl
xor
mov
ret
loop
lea
or
cmpsl
mov
adc
ret
sbb
mov
popa
sbb
push
cltd
in
mov
out
cmp
dec
cmpsl
movl
fistl
out
cmp
in
mov
daa
call
faddl
push
repz
ret
adc
dec
sbb
add
cmpsl
push
test
adc
lods
inc
xchg
rorl
dec
repnz
add
sysret
adc
or
testl
xor
xorl
sub
leave
in
stc
shrb
mov
mov
aad
in
clc
aad
popa
fisttpl
or
and
aas
cmp
pop
adc
add
out
jae
jp
cmp
cld
inc
aam
push
cmp
gs
sbb
test
shl
adc
or
repnz
jbe
dec
inc
pop
mov
loop
es
insl
cmp
mov
and
and
adc
je
dec
or
adc
sbb
enter
lods
xchg
data16
dec
cld
cs
lea
pushf
inc
mov
outsl
sbb
and
sub
lahf
mov
mov
xchg
mov
inc
iret
cmp
fwait
adc
mov
dec
into
seto
cmp
mov
push
adc
or
mov
sbb
leave
mov
pop
mov
iret
sbb
or
add
dec
rcr
dec
mov
in
loope
pop
les
dec
jl
jge
mov
jno
xchg
lret
int
jb
xchg
jne
cmp
call
test
lahf
inc
sbbl
in
inc
in
mov
mov
mov
int
leave
call
cmp
mov
mov
jno
andb
pop
jmp
into
scas
fimull
and
fwait
push
xor
cmpsl
in
pusha
js
sbb
rcll
int
out
test
and
fisttps
cli
mov
out
inc
into
nop
or
mov
ret
in
mov
mov
xorb
cmp
push
cmpsl
adc
pop
mov
mov
daa
mov
mov
into
nop
mov
je
xor
jle
push
cmc
adc
mov
fucom
inc
in
mov
xor
shlb
icebp
ret
out
mov
xorb
or
jl
pop
stc
dec
test
dec
lcall
xchg
scas
push
int3
idivb
pop
sbbb
push
xlat
or
inc
loope
sub
xchg
in
cmpsb
pop
xchg
pop
pop
mov
insb
or
loope
in
mov
jb
sub
dec
int
add
in
dec
mov
push
sub
ret
inc
fldt
and
imulb
std
fdivs
dec
jle
hlt
js
loope
mov
dec
test
mov
mov
mov
jmp
mov
or
and
stos
sti
lods
je
cmc
push
cli
stc
dec
aas
nop
sub
mov
sub
xchg
dec
and
cmpsl
sbb
mov
mov
fsubs
icebp
mov
pop
pop
cmpsb
insl
fisubrs
sbb
fisubrs
inc
clc
ljmp
cmp
mov
sbb
fcoms
add
add
jmp
fwait
sub
pushf
and
push
repz
insb
mov
enter
sub
push
xor
aas
call
inc
adc
flds
dec
add
xchg
ss
push
movsb
xchg
das
or
hlt
aam
add
pop
hlt
xor
push
ror
xchg
rclb
xchg
gs
rep
mov
adc
xchg
call
mov
sbb
imul
and
sbb
sti
push
jp
add
push
inc
or
jae
paddusb
add
sarb
add
pusha
lcall
push
or
xchg
inc
movsb
test
mov
shl
fsubr
adc
xlat
inc
and
mov
or
popa
add
inc
sbb
movsl
sbb
cmp
shl
into
shrb
sbb
sbb
jge
fisttps
inc
sbb
fisubrs
push
das
jne
aaa
xchg
fbld
push
fs
sti
sahf
push
xor
xchg
test
pop
xchg
inc
jmp
fdivs
jo
test
xchg
cmpsb
jbe
test
push
add
fwait
pop
adc
xchg
pop
movsl
sbb
shrl
loope,pt
push
lea
setne
push
scas
mov
push
and
inc
rcr
dec
lahf
in
or
mov
fidivrs
mov
aas
push
fidivs
mov
out
lods
fisttpl
outsb
inc
addr16
mov
fldcw
lahf
push
test
cmpsl
addr16
dec
mov
out
lcall
leave
hlt
sub
cmp
int
pop
push
mov
lcall
pop
bound
andl
add
xchg
test
sahf
xchg
mov
push
fmuls
xchg
clc
leave
push
mov
and
inc
out
push
mov
rcrb
mov
fwait
push
xor
dec
pop
xor
jne
lcall
lret
mov
lret
rorl
sahf
inc
mov
int3
test
in
movsl
fxch
sub
xor
std
mov
fsubs
les
cld
jmp
sbb
leave
hlt
mov
push
lahf
das
test
xchg
psadbw
inc
cwtl
pusha
xor
adc
and
mov
adc
mov
mov
movsl
std
je
shl
daa
xor
into
sub
shlb
sar
mov
xchg
pop
rorl
and
mov
ror
sahf
mov
ljmp
dec
shl
xchg
xor
in
xchg
sbb
in
mov
inc
jno
or
cli
jl
cmp
jae
jg
adc
clc
dec
mov
ret
jae
or
loopne
mov
pop
mov
adc
addb
addr16
and
adc
pop
jo
loopne
pop
fs
mov
cmovs
pop
mov
movsl
cwtl
and
testb
shrb
imul
iret
xlat
add
dec
sti
pop
or
imul
adc
insl
push
cli
mov
inc
fistl
sub
insl
push
cmp
dec
add
dec
stos
daa
mov
in
imul
xlat
jmp
dec
loope
fs
movsl
cmpsl
xor
pushf
test
icebp
add
cld
mov
xchg
and
shll
js
pop
mov
int
cltd
in
inc
insb
fsubr
sbb
xor
es
cltd
xor
cltd
decl
xor
fnstenv
xor
popf
sar
scas
imul
sbb
pop
lock
or
adc
les
cmp
or
ret
pop
or
lret
mov
inc
sub
pop
and
ds
jp
jns
imul
fwait
mov
popf
cld
sbb
shlb
scas
mov
ds
std
pmaddwd
mov
out
ljmp
scas
std
call
xchg
mov
jg
mov
js
es
out
cmp
cmpsl
rorl
xorl
dec
cmpl
sbbb
jae
int3
jmp
and
loopne
mov
sub
jno
std
iret
mov
pop
in
sbb
push
and
sbb
adc
gs
cs
aas
pop
and
in
mov
sub
pop
jle
movsb
lret
jmp
scas
push
into
repnz
jg
outsl
pushl
jecxz
mov
ds
push
mov
test
enter
adc
dec
push
or
stos
lds
insb
movsl
out
adc
sub
pushaw
inc
cmp
pusha
fldenv
or
adc
xchg
adc
or
test
and
jecxz
dec
push
jl
shrl
mov
aad
adc
cmpsb
lds
xchg
sbb
mov
add
stos
imul
pop
daa
js
pop
repz
xlat
cmc
cmp
je
inc
mov
sbb
mov
xor
pop
xchg
cmp
pop
fs
mov
add
sub
lahf
pop
fs
inc
lock
arpl
sub
xor
shl
jo
push
cmc
jb
cmp
imul
call
mov
mov
dec
add
fildll
in
lret
int3
dec
fimuls
inc
js
jmp
or
mov
inc
xchg
in
sub
aad
cltd
fwait
xor
stc
cwtl
dec
jbe
or
ljmp
xchg
out
jecxz
sbb
sarl
pop
sti
sub
push
jecxz
mov
idivb
rolb
movsl
lahf
xlat
fwait
jne
mov
xor
push
stos
pop
imul
mov
notl
dec
jno
and
adc
imull
js
ret
mov
out
movsl
xchg
cmp
popa
xchg
subl
sbb
fwait
in
lock
cmp
nop
js
les
push
adc
iretw
cmpsl
mov
adc
test
xor
xchg
mov
jmp
push
pop
insb
jl
lds
fisttpl
sbb
dec
das
ds
insb
add
mov
xor
subb
inc
popf
add
popf
pop
xor
mov
mov
hlt
add
pusha
lods
shlb
mov
xor
push
add
ret
mov
les
mov
mov
clc
cltd
pop
pop
test
mov
repz
lds
mov
outsl
in
mov
dec
jecxz
sbb
dec
movsl
rcrb
fisttpll
jge
fwait
rcrb
pop
inc
pop
add
adc
mov
adc
outsb
loopne
in
in
add
jnp
mov
pop
pop
cmp
mov
in
xor
inc
or
ret
or
lods
xor
leave
xchg
out
mov
mov
fiadds
pcmpeqw
fmul
dec
insl
lcall
sbb
mov
push
fisttps
fisttpl
mov
add
in
gs
mov
inc
jo
adc
ljmp
sub
jae
adc
pop
loopne
adc
jno
pop
stos
sbb
mov
in
xchg
loop
mov
xor
adc
aad
aad
iret
lcall
xlat
sahf
sub
adc
rclb
int3
and
je
enter
jo
jb
repnz
jb
and
push
xor
aaa
mov
adc
adcl
mov
pop
loop
push
jg
push
lds
jg
imul
push
shl
inc
mov
sub
repz
fwait
in
lahf
jmp
leave
inc
lods
mov
cmpsl
cmp
dec
roll
sub
pop
std
es
test
add
loopne
dec
andl
divb
sub
add
push
and
xchg
push
fcoms
dec
lret
mov
sbbl
jnp
mov
rolb
sbb
mov
lods
lods
push
or
dec
jg
subb
movsb
adc
arpl
loopne
mov
jae
sub
and
fs
push
movsl
insl
and
jne
out
lahf
je
xchg
insb
xchg
jecxz
stos
dec
lods
enter
xchg
sbb
jl
xlat
rclb
push
add
repz
sbb
testb
icebp
and
xor
movsl
out
jb
shl
testl
sbb
lret
and
mov
lcall
push
push
daa
push
lret
xchg
repz
fbld
shlb
cmp
mov
lcall
xchg
aam
push
inc
jl
fidivrs
fdivrp
ds
enter
adc
push
jnp
fidivrs
jg
and
aaa
cmc
imul
not
popf
out
std
mov
sub
mov
mov
repz
out
loopne
xchg
adc
dec
stos
je
das
cmp
pushf
ljmp
inc
mov
add
mov
xor
push
mov
in
adc
push
mov
adc
ror
pop
pop
lds
lods
mov
pop
test
mov
pop
jp
outsb
data16
imul
loop
lods
add
or
jo
push
sbb
mov
push
xchg
in
inc
dec
xorl
movsl
cmp
fadds
sbbb
shl
pop
push
or
sub
out
cmc
pop
mov
push
fwait
imul
ja
jo
sub
xchg
adc
inc
xchg
sbb
dec
stos
sti
xlat
mov
aad
cmp
mov
dec
andl
cmpsb
mov
sub
xchg
xlat
inc
fnstenv
pop
mov
or
ds
fstp
aad
iret
shll
enter
sub
add
arpl
js
nop
dec
sbb
cs
xchg
dec
shll
mov
fstpl
xchg
add
or
mov
fisttpll
push
in
mov
sbb
pusha
xchg
mov
fwait
aam
cmp
fcmovu
fsubrs
push
mov
filds
jp
sub
adc
mov
out
mov
mov
dec
mov
or
push
mov
jbe
xor
pop
testl
lock
push
mov
sbb
xchg
sub
mov
in
mov
sbb
add
pushf
mov
fwait
push
lods
push
ljmp
and
cltd
popa
stos
push
xchg
push
pop
sbb
push
sti
cltd
mov
mov
fstl
ljmp
clc
data16
xchg
or
mov
scas
stc
mov
add
imul
xor
scas
dec
shr
dec
mov
xchg
sti
dec
ja
aas
jne
mov
push
loope
iret
into
movsl
or
repnz
fs
bound
xchg
shlb
rcl
sbb
iret
cltd
mov
jge,pn
push
outsb
sbb
loop
cmp
test
xor
les
adc
fistpll
pop
push
push
ds
enter
roll
jle
test
outsl
inc
mov
hlt
dec
xor
shll
cmpsl
int
push
add
fcoml
aam
jo
inc
pop
fwait
jl
jo
test
jb
sub
sbb
mov
ret
fcos
add
mov
push
inc
pop
sar
adc
popl
jecxz
lret
inc
pop
fwait
adc
clc
xchg
insb
sbb
and
xchg
adc
in
mov
js
stos
sub
sub
or
jmp
out
cwtl
cltd
dec
inc
clc
mov
ss
and
orb
sbb
loopne
cwtl
lods
mov
out
sbb
sbbl
adc
pop
shl
gs
out
sbb
push
xchg
mov
daa
sub
xor
mov
mov
push
lea
or
lock
imul
pop
gs
leave
push
pop
loope
popf
pushl
ja
cmp
dec
mov
and
push
scas
pushf
adc
xchg
movsl
jecxz
data16
shll
div
icebp
fmuls
mov
ljmp
je
mov
xchg
out
xchg
into
cmp
push
mul
std
jmp
es
lcall
mov
inc
or
repnz
into
int
fsubp
inc
shll
call
jle
cmp
test
rcrb
sub
lret
test
push
inc
push
mov
cltd
jp
adc
pop
lods
aas
clc
xchg
mov
lahf
inc
in
lahf
adc
sbb
xchg
clc
mov
fdivrs
mov
xchg
mov
jno
scas
in
call
and
aaa
loope
jns
sub
into
dec
fdivl
aad
loopne
adc
push
mov
ds
scas
fwait
repnz
xor
cmp
sub
mov
data16
aad
adc
out
pop
pop
cli
icebp
inc
xor
and
ror
scas
aad
imul
and
imul
jp
cmpsb
xchg
push
jmp
arpl
xchg
fcmovbe
cmp
scas
push
sub
stc
stc
dec
mov
out
lea
cwtl
push
push
push
inc
repnz
loop
xor
sub
fs
and
movsl
imul
add
or
stos
jbe
add
call
lock
loope
mov
cmp
cwtl
cmp
xor
cld
lcall
or
arpl
in
shlb
ret
mov
mov
inc
mov
cmpsl
imulb
inc
push
out
cs
push
pusha
adc
sbb
or
call
loop
out
jae
adc
push
je
or
sub
cmp
jns
repnz
pop
enter
dec
lea
cmpsl
popa
or
cli
dec
or
xchg
subb
jo
roll
bound
xchg
dec
mov
pop
mov
adc
or
repz
loope
add
push
ss
in
int
gs
into
adc
xchg
out
stc
mov
xchg
lret
and
mov
xchg
dec
mov
pop
les
sbb
lds
pop
xchg
pop
lret
mov
xor
jmp
faddp
xlat
std
call
cli
jbe
mov
sub
hlt
inc
test
jge
add
inc
cmp
fstps
jge
sti
inc
ss
out
jl
dec
jmp
cmp
fcmovbe
mov
vpshuflw
outsl
push
mov
popl
lock
or
iret
or
shl
cwtl
fucomip
xchg
pop
lret
inc
adc
cmp
cmp
aam
iret
jecxz
pop
adc
dec
fstpl
jnp
ljmp
sub
sub
aaa
add
sub
inc
call
push
adc
inc
dec
add
xor
mov
and
enter
aaa
mov
push
lret
lret
shrl
faddl
sub
push
jmp
adc
out
int
jno
push
js
stos
push
and
adc
mov
cmp
lret
mov
cwtl
sub
push
push
push
and
or
push
ss
or
addl
test
lods
mov
xchg
lods
leave
and
lods
mov
sahf
jp
mov
dec
dec
push
push
sub
push
es
leave
dec
adc
dec
loop
int
fdivr
cmp
popl
mov
sarb
mov
outsb
jmp
cmp
in
js
adc
idiv
into
mov
push
dec
insl
inc
cmpsl
lcall
pop
shrb
ja
sbb
jne
lods
cmp
mov
frstor
aas
push
int
mov
mull
dec
add
jge
push
test
adc
sti
filds
jnp
mulb
pop
cmp
mov
add
rcrb
mov
sub
test
shlb
imul
sub
inc
lock
mov
ret
out
dec
insl
pop
xchg
xor
and
jbe
insl
add
sbb
mov
push
mov
sahf
loop
lock
leave
out
sbb
jmp
dec
add
rep
cmpb
ret
mov
xchg
shlb
mov
out
rdtsc
or
sbb
push
pushf
repz
mov
in
imul
inc
lcall
pop
outsb
sahf
mov
in
enter
fwait
lods
sarl
push
ss
xchg
aad
popa
pop
lcall
push
and
xor
push
stos
mov
fwait
add
cwtl
fnstsw
mov
sub
jp
xchg
inc
cmp
xchg
mov
or
add
dec
and
push
orb
insl
subl
mov
ret
jbe
push
jge
sub
push
sub
add
jl
rsqrtps
cmpsl
pop
mov
sbb
in
loop
in
jno
push
jnp
mov
xor
push
push
xchg
sbb
dec
in
loope
outsb
insl
cmp
imul
jno
add
push
mov
rcrl
iret
adc
test
sbb
ja
jno
mov
mov
fstpt
popf
xchg
stos
mov
push
lret
inc
sub
jae
pop
fistpl
push
addr16
filds
sub
jmp
out
cmp
or
or
jne
inc
es
pop
xchg
insl
movsl
cmp
jl
adc
and
push
outsb
and
test
sub
cli
cmpsb
add
adc
push
mov
sub
fsubl
shll
call
pop
sub
jo
cmpsb
mov
repz
addr16
fcmovbe
stc
mov
rol
fsub
sti
gs
test
arpl
push
lock
cwtl
and
fwait
test
fwait
test
mov
fs
std
repnz
sbb
cmpsl
mov
or
jg
dec
shll
push
dec
pushf
jnp
push
lds
stc
sti
repz
sbbl
ret
sub
mov
sub
pop
dec
repnz
cmpsl
jae
mov
jb
lret
in
mov
test
inc
cltd
cmpl
xor
repnz
pop
repnz
test
add
loope
mov
or
xchg
mov
out
incb
dec
mov
dec
xor
out
mov
mov
subb
pop
shlb
lret
ret
insb
out
mov
jnp
loopne
loop
pusha
sbb
jmp
or
mov
subl
incl
fisttpll
and
out
movd
mov
add
mov
lcall
xchg
add
mov
es
add
popa
fldl
and
fdivs
addb
fdiv
mov
sbb
mov
mov
mov
sbb
in
imul
and
jg
mov
mov
shl
std
or
inc
stc
dec
or
or
mov
jmp
popf
inc
dec
stc
cld
dec
outsb
bound
fwait
ret
gs
cs
cwtl
aaa
inc
out
sti
das
and
shlb
mov
shlb
add
mov
ret
lcall
cmpb
mov
lock
jge
popf
jl
test
pop
cmp
ljmp
cmp
out
movsb
movsb
push
idivb
jmp
call
loopne
and
scas
or
fwait
xor
push
cmc
call
xor
jns
fwait
aaa
setns
inc
lahf
jo
xor
xor
dec
adc
fcompl
jnp
dec
pop
les
fs
nop
loope
xorl
movl
rorl
pop
sbbl
pop
cmp
add
jmp
icebp
pop
cld
adc
daa
push
jg
movsb
pushf
sub
cmp
out
cmp
gs
imul
out
mov
out
mov
sub
repnz
rcrl
loop
hlt
sub
sbb
pop
or
test
mov
inc
sbb
fwait
or
out
sbb
adc
shrl
subl
xlat
sub
fnstsw
sahf
jne
hlt
test
jb
dec
mov
and
loop
dec
aad
mov
and
ljmp
les
movsl
xor
adc
mov
xor
fistl
sub
cli
adc
xchg
pusha
imul
into
arpl
clc
fdivrp
mov
dec
lret
adc
ficomps
mov
pop
inc
fdivl
dec
mov
dec
movsb
cmp
call
jge
ret
pop
mov
out
fstpl
dec
data16
inc
cmpsl
enter
dec
cmp
pusha
test
pop
pop
decb
fstpt
in
cli
cwtl
ja
clc
push
stc
stos
negl
stos
cmpl
ja
xchg
add
out
hlt
sub
cmp
jg
fidivrs
das
repnz
pop
scas
es
jmp
out
outsb
mov
lret
pop
add
in
jbe
sbb
mov
or
fimull
test
jge
jno
xchg
push
fdiv
pop
cli
and
insb
cmpl
popa
cmp
jb
dec
iretw
int
cmp
jae
pop
pusha
enter
adc
call
pop
mov
sahf
push
cmp
add
loop
sub
mov
cmp
mov
mov
xchg
sub
gs
je
xor
imul
jo
mov
pop
xchg
test
jecxz
push
pxor
ret
cmpsl
aad
xchg
movsb
xchg
xor
mov
mov
mov
popf
stos
cmp
into
dec
xor
dec
adc
ds
mov
jns
out
xchg
mov
lods
and
pop
jle
push
xor
mov
xor
pop
xchg
and
fnstenv
push
outsb
jo
cmp
je
dec
cld
mov
sub
adc
mov
std
adc
adc
mov
repnz
shl
andl
and
cmp
cmp
std
in
ss
aas
inc
andl
int
rorb
xor
je
mov
lahf
xchg
jge
aam
mov
cmp
mov
inc
sbb
mov
pop
dec
sub
adc
into
xchg
ja
push
push
inc
push
sub
roll
imul
dec
sti
mov
pop
iret
push
sub
pop
ljmp
or
dec
ss
mov
xchg
test
cmp
push
dec
hlt
aam
xlat
pop
push
je
inc
dec
lock
cmc
mov
mov
dec
push
inc
jo
inc
lock
scas
or
sbb
xchg
aas
xchg
aad
xchg
sbb
out
jg
or
roll
fwait
cmpsl
ficompl
scas
lds
sbb
test
push
sub
adc
xor
push
test
repnz
sbb
cwtl
mov
lods
sbb
outsl
add
cli
fdivrp
stos
adc
daa
mov
lods
and
dec
xchg
push
std
jo
xchg
push
adc
push
pop
aad
mov
xorb
insl
push
out
icebp
pop
lret
pop
lahf
daa
jg
divb
roll
adc
xor
lock
and
sahf
arpl
pop
mov
fiaddl
je
es
inc
cmp
ret
mov
insb
lret
js
fimuls
insb
push
dec
and
arpl
lods
lahf
mov
and
push
es
call
mov
mov
fldcw
jne
pushf
and
rorl
lock
push
cmp
std
insb
and
call
pop
push
xor
sarl
cli
int3
das
je
add
xchg
in
jo
push
or
dec
pop
xlat
xor
mov
shll
pop
aad
out
mov
stc
jb
add
mov
in
or
cli
add
repnz
sub
jp
dec
into
pusha
test
and
sbb
lock
cmpsl
fnstenv
aam
jbe
add
mov
hlt
std
lds
subb
pop
inc
or
mov
cwtl
stc
jmp
jne
sub
pop
in
adc
inc
sub
mov
lea
push
ret
pushf
push
xor
add
rcrl
add
mov
and
dec
fstpl
ret
fildll
ja
mov
mov
mov
xor
jecxz
inc
jl
add
xchg
mov
popa
decl
arpl
mov
shrb
notl
fstl
push
push
pop
mov
popf
sub
push
out
pop
xchg
sbb
repnz
aam
mov
cmpsb
dec
mov
push
mov
insl
sti
in
push
xor
data16
addl
test
jle
scas
pop
mov
fcmovb
cmp
pushf
out
inc
outsb
movsb
sarl
in
push
push
mov
mov
pop
adc
xor
mov
mov
clc
dec
cmp
xchg
adc
xchg
mov
and
movsl
cltd
std
xchg
scas
orb
fdivrs
out
fimull
cli
repz
lahf
xlat
pop
and
ss
das
and
adc
imul
les
rcpps
test
jnp
push
aas
movsl
push
fs
pop
sbb
pop
inc
test
mov
data16
repnz
sub
addr16
xor
jle
fnstenv
adc
lods
dec
pop
jge
inc
xchg
fimull
stos
inc
int
push
jg
sub
push
outsb
cmp
and
and
xor
xchg
test
sbb
filds
adcb
test
push
sbb
pop
mov
xlat
fs
mov
loope
add
xor
mov
push
repz
popf
fwait
arpl
lods
mul
notb
int
adc
push
push
arpl
mov
fidivrl
mov
iret
pusha
push
and
leave
xchg
and
sub
je
sbb
inc
mov
or
pop
jp
pop
leave
lea
insl
inc
test
dec
cmpsl
aaa
push
inc
icebp
jp
dec
fucomp
push
nop
cltd
test
lret
aad
in
lods
mov
add
mov
es
stos
xor
in
out
fidivrl
pop
push
pop
rol
roll
cmp
bound
sub
xchg
mov
jmp
popa
iret
xchg
xchg
pop
ja
clc
and
je
aam
xchg
dec
push
popf
mov
inc
jecxz
mov
jecxz
inc
movsb
xor
mov
sub
xlat
jge
xchg
mov
xor
icebp
push
xchg
scas
lods
lret
xchg
jmp
iret
addb
and
lret
add
and
fwait
adc
and
sub
fstpl
movsl
xchg
pop
outsl
xchg
mov
and
mov
mov
mul
cmp
shlb
lock
add
and
pop
push
jmp
mov
add
sub
mov
dec
loope
dec
jecxz
push
xchg
jp
inc
out
mov
dec
sbb
adc
popf
pop
jp
js
lret
mov
pop
adc
pop
hlt
fldenv
push
jge
imul
sbb
roll
loope
out
jg
loop
ds
xor
bound
push
xchg
mov
pop
subb
inc
aam
pop
mov
cmp
sti
ret
mov
cmp
scas
jnp
imul
cmp
xchg
loopne
xchg
loopne
seto
mov
xchg
sub
pusha
mov
adc
in
je
nop
cmpsl
icebp
fcmovbe
or
mov
out
mov
movsl
cli
xor
in
insb
jnp
loopne
shll
adc
into
call
into
or
gs
repz
addr16
xchg
popf
bound
cmp
mov
jg
pop
cmp
popf
adc
and
sbb
aas
call
sub
cmp
cmp
bound
inc
mov
scas
stos
mov
icebp
mov
dec
in
repnz
adc
add
lea
dec
cltd
cmpsl
cmp
xchg
rcrl
xor
lret
xchg
jae
inc
push
pop
xchg
out
ds
pop
pop
jl
adc
inc
pop
aam
and
fistl
jp
pop
pushf
lods
pop
ja
test
es
adc
cli
sub
inc
cmp
pop
je
jae
mov
pop
add
xlat
imul
jo
les
lret
mov
jbe
push
mov
or
inc
mov
ret
lahf
sarb
mov
subl
push
mov
not
adc
scas
pop
out
test
dec
flds
rcr
test
xchg
insb
call
loop
test
aas
test
mov
pusha
xchg
scas
das
cmpsb
enter
mov
repnz
leave
xor
nop
out
jle
mov
mov
sbb
dec
in
outsl
enterw
popf
cmp
mov
outsl
fs
jae
ret
adc
fs
and
pop
mov
adc
xlat
jmp
xchg
lret
sbb
fcompl
sub
jle
push
cmp
insb
out
add
jl
imul
loopne
pop
pop
sub
out
lcall
jg
mov
jne
pop
xchg
sbb
jns
neg
cmp
icebp
pop
cmp
icebp
cmp
add
aaa
add
sahf
cmp
pop
js
cmpl
cmp
adc
and
mov
dec
lods
xor
in
iret
dec
xchg
add
test
xchg
mov
pop
scas
test
dec
mov
daa
push
cs
adc
jmp
adc
orb
rcll
push
pushf
out
mov
mov
mov
lea
adc
dec
inc
mov
cmp
ljmp
mov
inc
sahf
and
scas
dec
sbb
inc
fcom
mov
loop
xchg
ret
mov
pop
pminub
jmp
mov
dec
out
fsubs
lahf
jp
push
jne
test
out
mov
jg
jmp
xor
dec
inc
sbbb
push
repnz
adc
jg
inc
fadd
sti
mov
push
and
out
jns
push
ret
stc
pop
loopne
xlat
lock
das
inc
fsubrp
insl
jg
pop
popf
aas
pop
and
ret
les
cmp
adcb
movsb
or
test
insl
xor
adc
popa
decb
cmp
cmp
cmp
fstps
stos
add
add
sbb
push
mov
inc
add
vpaddd
mov
in
xchg
mov
xor
mov
fs
inc
mov
dec
and
stos
subl
lea
mov
stc
mov
and
pusha
cmp
jae
push
into
push
icebp
sarb
jmp
and
jbe
xsaveopt
and
ja
or
loope
ret
dec
jno
aas
mov
fsub
outsb
push
pop
and
lahf
cmp
xchg
jne
int
nop
inc
xor
divl
orb
into
mov
sub
movsl
imul
arpl
xor
aad
or
xchg
scas
fildll
adcb
insl
aad
nop
push
loope
rclb
jecxz
dec
jmp
and
or
pop
mov
xchg
cmp
mov
js
cmp
fcoms
cmp
push
inc
loopne
inc
jle
out
sub
mov
dec
dec
inc
sub
dec
xchg
lods
repnz
dec
fists
mov
mov
jns
push
jne
out
stos
dec
imul
popa
add
cmp
add
xchg
or
mov
add
cltd
lea
push
sbb
jb
bnd
fcoml
out
jae,pt
jo
push
rcll
or
ljmp
jnp
es
js
insb
cmp
shlb
xchg
push
in
test
clc
aaa
mov
jno
clc
mov
lds
jne
jmp
jge
xchg
push
popa
jl
mov
xorl
jle
dec
add
aam
nop
int
pop
popf
ja
in
mov
push
rcr
loop
lods
es
push
pusha
jae
lods
xchg
or
in
sahf
es
add
std
jns
enter
push
mov
and
sbb
jmp
pop
xchg
sub
into
nop
pop
pop
jae
jp
addr16
stos
mov
mov
fdiv
pushf
xchg
lahf
inc
fiaddl
pop
push
aad
movsb
push
jne
xchg
jmp
dec
incl
push
push
sahf
pop
sub
aam
aad
aad
lods
imul
sbb
pop
jge
shl
ja
iret
or
dec
xchg
dec
in
int
test
inc
xor
mov
rolb
test
xor
outsl
and
push
fbld
jbe
out
clc
sbb
aam
jne
aad
imul
push
jo
test
cmp
mov
mov
out
push
movsb
leave
loope
ss
ja
aas
cwtl
outsb
sbb
xchg
mov
xor
adc
in
lahf
int3
dec
pop
out
je
pop
sub
push
cmp
dec
xlat
pop
testb
mov
movl
shl
rorl
stos
dec
lods
jne
lods
and
test
aam
orb
dec
mov
orb
divb
mov
test
dec
int
add
cmp
ret
pushf
sub
lea
adc
js
push
fmull
orb
ret
popa
pop
cmp
jbe
ret
xor
pop
pop
cmp
jno
mov
and
cmc
add
hlt
cli
test
fnsave
outsb
fadds
insb
add
push
lea
std
fisubrl
inc
dec
cmpl
call
or
data16
inc
sbb
sbb
add
dec
sbb
mov
xchg
add
cltd
out
sub
jo
sbb
xchg
mov
push
mov
ss
push
jne
loope
repz
add
cmpsl
push
mov
fidivrl
cmpsl
or
push
int
push
push
lds
je
enter
clc
data16
stc
and
loop
notl
adc
cltd
je
xor
xchg
cli
mov
aas
sub
and
inc
xlat
aad
dec
push
int
idivb
loope
cld
xchg
add
in
push
push
dec
mov
xchg
out
mov
mov
pop
pop
cmp
xor
mov
lea
jne
add
mov
into
push
push
jg
sbb
xchg
bound
pop
js
fiaddl
and
ds
fildl
std
nop
xlat
ret
out
jg
jg
cmp
mov
pop
js
add
scas
cmp
aas
push
adc
cltd
cmp
dec
outsl
push
enter
inc
dec
bound
ja
sbb
mov
dec
rcrb
inc
pop
cwtl
and
xchg
icebp
fdivs
pop
loope
and
mov
cli
popf
ficoms
std
cmp
inc
pop
mov
xor
mov
adc
popf
outsb
sbb
ljmp
dec
lahf
inc
test
mov
xchg
adc
xchg
lret
sbb
xor
mov
inc
ss
push
push
lret
inc
out
xchg
test
dec
lea
xor
pop
pop
push
sbb
pop
sti
xchg
jmp
mov
mov
lods
pop
mov
cmp
int
into
iret
xchg
sbb
sbb
cs
inc
and
mov
rorb
movsb
in
fsub
fisubrl
sbb
push
sub
sub
jle
xchg
add
je
sti
frstor
xchg
sbb
xchg
out
and
xor
in
dec
cmp
dec
das
push
repnz
sarb
lret
mov
inc
xchg
popa
and
xchg
xor
jo
mov
mov
pop
inc
add
mov
sub
mov
add
mov
sar
xor
sub
push
mov
std
js
mov
and
xchg
mov
inc
jae
lock
inc
inc
adc
pop
inc
int3
loop
jae
rcrl
jbe
cmpsb
stc
pop
cltd
add
add
lock
xor
imulb
mov
jg
test
into
fwait
or
add
pop
call
and
and
mov
or
sub
add
fimuls
sub
mov
enter
lock
mov
pop
xchg
cmpsl
in
popf
aas
fisubl
push
mov
xchg
xchg
rcrb
ror
jg
inc
xlat
mov
arpl
lods
xor
jl
mov
push
mov
lock
sub
out
jne
cld
cmc
int
les
test
outsb
xor
inc
dec
lcall
sbb
mov
les
out
subl
xchg
inc
roll
ret
mov
xchg
aam
aas
outsb
jo
sbb
test
xchg
movsl
popa
fisubs
push
jbe
inc
out
arpl
push
ret
mov
inc
lds
sti
sbb
push
add
out
dec
orl
mov
std
xor
adc
popf
mov
lods
shll
jecxz
imul
mov
fisttps
lods
cmp
sbbl
mov
daa
sahf
mov
sub
mov
push
cmp
fdivl
ret
int3
add
mov
sub
ret
pop
in
dec
adc
pop
les
lahf
push
ja
fbld
jmp
inc
scas
xor
mov
shl
mov
or
out
fstpt
cmc
sarl
mov
ds
mov
mov
adc
test
mov
sub
cwtl
into
popa
lods
xorl
sti
repnz
mov
shl
ret
les
mov
sub
lret
push
add
or
sub
push
ficoml
jae
sbb
jle
loope
fwait
gs
icebp
ljmp
xor
add
mov
jmp
lock
inc
pop
imul
movsb
add
xor
iret
inc
pop
xor
pop
sub
loop
adc
pushf
sahf
jecxz
cmpsl
movsl
lret
inc
mov
xor
push
hlt
sub
jmp
adc
aaa
insb
lcall
frstor
sbb
inc
outsb
outsb
cmp
sbb
sahf
mov
cmp
sbb
pusha
jns
arpl
insl
mov
mov
push
mov
sbb
rolb
xchg
insb
in
cmpsb
mov
cmp
arpl
bound
mov
in
imull
orl
sbbl
stos
lods
dec
bound
fstpt
ret
mov
stos
enter
inc
jl
lods
test
stos
inc
mov
popf
pusha
lods
pop
xor
loope
mov
cmp
sub
sbb
bound
loop
leave
mov
mov
loop
sahf
push
and
push
inc
adc
sub
push
inc
jne
leave
lahf
int3
inc
out
cmp
out
aam
pop
aas
push
adc
aas
xchg
sbb
mov
jle
lcall
ja
fistps
addr16
mov
jmp
sbb
faddl
push
or
jg
cmp
jge
movsb
add
hlt
jbe
push
stc
add
ror
xchg
mov
cmp
ret
dec
inc
je
rorl
aas
out
pop
inc
lock
and
mov
lret
or
mov
xchg
xchg
cmpsb
add
jno
pop
sbb
addl
push
js
jecxz
lods
add
pushf
out
call
and
movups
ret
pushf
icebp
mov
adc
stc
cmc
jge
jnp
sub
fnsave
mov
fwait
jecxz
pop
shl
push
push
cmp
sti
jmp
or
outsl
dec
adc
dec
mov
add
das
filds
mov
xor
adc
fcmovnb
lcall
mov
xor
mov
ja
lods
push
aaa
mov
outsb
dec
mov
or
mov
and
adc
lods
xchg
sti
lock
mov
int
xchg
add
mov
sub
jae
rclb
lea
lret
icebp
inc
fldenv
out
setb
ds
insl
push
sbb
lock
in
cmp
adc
fs
jecxz
dec
adc
mov
dec
jae
mov
out
mov
fmuls
lahf
xchg
jb
lret
add
and
mov
xchg
testl
int
adc
mov
mov
cs
out
xor
popf
mov
bound
jle
pop
xchg
jb
call
dec
jo
mov
dec
test
popf
cmp
call
jp
dec
sarl
ja
into
leave
orb
or
cmp
pop
lods
inc
inc
and
getsec
sub
int
scas
mov
add
icebp
in
std
call
inc
leave
add
dec
and
sbb
leave
mov
ret
xor
jne
fsubs
push
xchg
icebp
ret
mov
mov
or
aaa
aam
mov
jns
mov
pop
add
gs
jg
or
adc
mov
mov
cwtl
adc
js
inc
divb
xchg
mov
insl
iret
and
push
out
sub
inc
or
cs
adc
je
pop
in
inc
repz
iret
rcrb
and
enter
outsl
js
subb
cltd
or
gs
sub
xor
aad
xchg
arpl
fiaddl
ror
arpl
lods
stc
mov
rcll
sub
inc
bound
or
or
ret
pop
into
sub
fdivrl
push
shlb
aad
xchg
push
rol
clc
add
mov
lods
sar
daa
ror
test
ret
mov
aam
mov
inc
sub
jl
test
inc
xchg
nop
xchg
mov
lods
pop
jg
jg
fidivrs
rcrb
int
popf
stos
push
decb
ljmp
pop
mov
cmp
or
mull
sbb
jno
fnsave
lret
and
lods
das
cld
fidivl
jmp
std
jno
inc
or
jl
ffree
dec
sarl
sahf
imulb
inc
sahf
sti
push
nop
and
dec
sub
and
sub
or
test
jl
lcall
adc
mull
adc
fldt
mov
xor
inc
pop
sub
sub
fwait
sbb
mov
stos
cmp
rorb
in
xchg
mov
dec
pop
jo
pop
sub
jnp
xchg
sbb
add
data16
out
push
xchg
fdivr
lods
xchg
pop
dec
jl
fisttpl
leave
sbb
int3
sub
mov
jno
pop
mov
bnd
not
mov
jo
aam
insl
jmp
jle
sbb
push
enter
ja
mov
lea
add
xchg
xchg
ljmp
xchg
push
and
cmc
mov
out
pop
daa
les
pusha
sbb
pop
sbbb
xchg
cmp
or
cmp
pop
xchg
push
adc
gs
out
or
fldcw
orl
ja
or
mov
sbb
mov
mov
sbb
out
fnstenv
dec
loopne
xlat
cmp
or
push
sbb
mov
sti
dec
xlat
cmpsb
aam
jo
sub
out
aad
in
cmpsb
leave
adc
bnd
sti
xor
or
movsl
cmp
sahf
mov
add
sbb
dec
jae
dec
wrmsr
sub
ret
je
mov
int3
push
jl
xchg
adc
inc
add
pusha
cld
adc
test
test
mov
dec
stos
cmpsl
xchg
push
mov
lret
in
xorb
adc
out
imul
sbb
push
pop
fsub
lock
and
pop
hlt
jg
cmp
mov
jl
movsb
insb
adc
and
fbld
test
test
int
neg
sar
pop
adc
subl
js
mov
pop
fnstsw
lock
jb
and
push
jns
ret
mov
mov
push
jo
xor
mov
pop
dec
imul
frstor
leave
in
dec
lods
add
inc
push
cli
fmuls
jns
repnz
rcl
xlat
insb
fldcw
jmp
jo
loop
and
push
subl
or
jle
cltd
jbe
xor
mov
mov
mov
cmpsb
fdivrl
mov
xor
mov
mov
pop
cmpl
sbb
iret
xchg
aam
rcrb
bound
je
mov
sar
jle
popa
out
mov
jp
push
shlb
adc
lds
xor
call
xor
xchg
xor
mov
inc
icebp
testl
adc
hlt
roll
flds
push
pop
cmp
sub
jecxz
cld
inc
mov
cwtl
fisubrl
rcr
push
xchg
mov
inc
ss
inc
jae
push
adc
outsl
adc
jmp
dec
mov
repz
dec
mov
cmp
jb
push
mov
out
cmp
data16
insl
outsb
fnstsw
cmp
inc
fsub
aad
push
pop
test
data16
pop
inc
xor
xchg
mov
mov
pop
and
mov
cs
insl
dec
iret
cmp
out
or
outsb
and
movsb
mov
mov
cmpsl
push
shlb
lcall
movsl
sbb
dec
jno
loope
cltd
cmp
out
dec
jmp
decb
fadds
repnz
mov
xor
ds
sti
mov
pop
test
sbb
xchg
jb
daa
mov
gs
out
xchg
int3
xchg
sub
jbe
xor
fadd
cmp
test
jecxz
stos
or
cmp
inc
rorb
imul
lret
mov
jecxz
pop
les
in
dec
mov
sub
jbe
cli
daa
push
fldt
push
sbb
jle
or
out
add
inc
test
pop
adc
fcmovu
cwtl
stos
xchg
inc
loope
scas
sbb
add
int3
sub
and
inc
negb
mov
push
push
fdivrs
xchg
mov
loop
or
out
pop
jl
cs
mov
stos
inc
xchg
and
mov
mov
data16
xor
loopew
ss
shlb
imull
jl
popl
or
roll
aad
movsb
add
mov
push
aam
hlt
mov
repz
das
clc
dec
push
punpckhdq
mov
mov
repz
cmc
dec
cmpsb
loopne
hlt
out
mov
fisubl
pop
sub
mov
or
cmp
add
push
jl
loop
mov
adc
mov
inc
loopne
and
in
lods
and
or
mov
ror
fimuls
cmovnp
insb
and
dec
add
cltd
cmp
loope
xor
daa
mov
notb
lret
int
imul
lea
les
jae
aam
or
xchg
fs
notl
push
or
dec
pop
pop
push
push
cmp
jg
inc
in
mov
xor
adc
nop
push
push
es
mov
pop
mov
and
inc
icebp
mov
push
into
out
inc
mov
in
pushf
dec
std
lret
adc
mov
je
test
lds
imul
and
inc
add
leave
and
into
sub
dec
ss
sti
scas
ficoml
inc
and
mov
sbb
pop
sub
pop
mov
lahf
jb
iret
movsbl
push
fldcw
mov
and
lahf
mov
aaa
xchg
fstpt
inc
pop
push
and
cs
inc
push
xchg
fimull
mov
cld
enter
xchg
dec
sub
enter
test
mov
popa
jbe
sbb
test
dec
mov
cmp
addr16
stc
mov
clc
inc
inc
jno
add
cwtl
dec
imul
imul
sbb
ljmp
cs
or
jo
inc
mov
popf
loopne
inc
mov
mov
les
out
test
adcb
inc
fbld
or
shrl
cld
fmulp
add
imul
pushf
lods
xchg
pop
push
fldenv
xchg
int
les
pushf
cmpsl
icebp
mov
xor
pop
sub
mov
cmp
add
dec
mov
push
push
adc
xchg
testl
add
jp
addr16
mov
movsb
clc
shl
lock
xchg
mov
cld
xchg
push
xchg
pusha
stos
fdivs
jg
gs
xor
sahf
xor
les
jae
sbb
xchg
jnp
out
cmp
add
and
data16
cmpsb
lahf
sbb
js
js
std
fidivs
xchg
xor
jnp
shlb
movsl
cs
mov
lods
fmuls
gs
je
js
popl
jge
adc
and
mov
jge
cmp
imul
sbb
rolb
popa
bound
push
adc
das
lock
insl
push
mov
sub
pop
rcrb
jb
add
xor
daa
push
and
cli
or
mov
sub
dec
lret
jecxz
and
push
xor
ljmp
pop
xlat
mov
mov
sbb
lret
pcmpgtb
inc
xor
cmp
pushf
adc
lcall
push
jmp
leave
pop
jns
sarl
push
loop
push
dec
es
xchg
adc
lret
mov
dec
test
cmpsl
mov
cmp
mov
push
jne
lret
add
mov
push
pop
test
push
fisttpl
sbbb
in
fbld
mov
xchg
scas
or
lret
enter
fadd
fmuls
pop
cwtl
and
stc
sbb
xchg
fistl
push
lcall
pop
je
pop
lock
movsl
gs
pop
mov
pop
lea
lret
xor
mov
add
jmp
js
iret
fists
dec
sbb
arpl
cmp
leave
aas
or
xor
outsb
hlt
out
mov
cwtl
lods
inc
int3
mov
popf
mov
or
pop
and
jge
aaa
sub
mov
mov
pushf
or
jb
es
xchg
mov
pop
inc
mov
mov
xchg
xchg
jge
pop
imul
add
add
mov
imul
test
das
lods
cwtl
adc
xor
cmp
andl
test
into
das
cmp
and
mov
pop
xor
push
push
movsb
cmpsl
xchg
push
sub
inc
inc
or
add
shl
sub
outsl
mov
scas
mov
int3
and
add
stos
pop
push
pop
push
mov
in
mov
sar
cwtl
mov
fildl
sub
sub
adc
jo
fidivl
lahf
orl
xchg
mov
testb
add
cmpsl
test
pop
inc
push
ret
arpl
sub
and
xor
ja
mov
sbb
push
jb
into
cltd
push
mov
movsb
bound
lods
add
add
or
imul
jp
sbb
push
and
jb
xchg
pop
mov
mov
fnstsw
flds
out
mov
lcall
in
dec
cmpsl
dec
sub
and
cs
mov
mov
dec
stc
pop
inc
dec
popf
outsb
push
lahf
and
es
mov
fbstp
iret
push
out
out
inc
test
aas
mov
jmp
int
sbb
outsb
dec
dec
xor
jae
push
mov
outsb
fcoml
push
call
lret
sub
inc
clc
inc
adc
movsl
and
pushf
lds
movsl
shll
das
sbb
call
sub
cmp
imul
faddl
or
xchg
cli
cli
mov
xchg
cmp
pushf
and
pop
fwait
jnp
daa
loop
shlw
xchg
cld
inc
fs
add
test
into
dec
je
int3
or
xor
xchg
cmp
mov
aad
repnz
js
sub
out
cmpsl
rolb
dec
adc
ror
fdivl
je
addr16
loopne
testl
dec
fs
test
jbe
shlb
jg
jno
push
cmp
stos
pop
and
into
fmuls
lahf
xchg
sahf
daa
sub
xchg
cmp
and
loope
mov
mov
fdivl
int3
in
xor
fdivp
movl
dec
and
test
mov
and
ss
into
dec
cli
je
pop
sbb
cmp
dec
lea
ficomps
pslld
in
push
or
dec
mov
scas
mov
mov
mov
jno
pushf
xchg
cltd
in
arpl
jo
dec
push
xor
int
insb
or
lcall
inc
in
jns
push
pop
push
push
or
cmp
sub
jo
std
sbb
ss
aas
sbb
aam
clc
cmp
mov
push
mov
out
xor
dec
scas
dec
pop
pop
xchg
fidivrl
sub
mov
cs
stc
cmc
cld
test
in
pusha
mov
es
mov
cli
pop
add
test
clc
enter
std
push
test
add
add
push
lds
push
mov
lea
pop
cmpsb
lods
push
add
dec
clc
mov
adc
scas
xchg
sarb
mov
sub
push
dec
cwtl
stos
jmp
mov
jp
inc
cmp
push
mov
jge,pn
mov
or
jo
pusha
jbe
mov
mov
sahf
movsl
sbb
mov
mov
jbe
int
mov
push
jp
xor
iret
adc
push
add
mov
add
mov
and
jb
shr
ja
jo
xchg
das
jg
lret
fisttpll
lods
sub
mov
loopne
scas
call
sub
inc
xlat
data16
push
adc
cmp
repnz
xchg
push
xchg
fsubp
insb
ret
das
icebp
and
popl
push
jbe
nop
and
inc
and
shlb
xor
mov
cmp
push
xlat
mov
rclb
fldl
sahf
push
loop
movb
lcall
scas
mov
dec
lcall
out
cs
add
and
data16
xchg
nop
int
push
ja
or
push
scas
sbb
xlat
sbb
and
leave
insb
xor
aaa
mov
icebp
pop
cwtl
adc
dec
sub
call
sti
cltd
data16
mov
lea
mov
das
fs
pop
pop
rclb
sahf
dec
inc
jmp
fs
xor
xlat
adc
sub
insl
jb
or
das
das
dec
popf
sbb
lcall
enter
mov
pop
fcmovnu
mov
daa
sbb
or
mov
cmc
or
push
mov
fcmovu
or
fsubrs
cwtl
rolb
mov
xchg
mov
jge
adc
pop
dec
sbb
mov
lds
fstps
lds
enter
ja
imul
imul
aas
test
aad
adc
out
fcom
add
sub
xor
sbb
push
add
imul
jnp
arpl
std
aas
test
jg
push
adc
out
mov
stc
test
mov
fisubs
fildll
sub
jbe
and
aaa
push
mov
add
ljmp
loope
out
movsl
call
add
adc
jecxz
mov
mov
sbb
inc
sub
cltd
add
xor
test
fwait
cmp
test
mov
rol
scas
ds
leave
aam
jecxz
popf
sbb
subl
or
xchg
pop
sbb
jns
sub
daa
and
mov
das
mov
mov
loope
push
xchg
test
int3
ret
ja
mov
es
aad
dec
stos
out
mov
test
enter
cmp
dec
xchg
jl
sub
cmp
inc
sub
inc
sub
scas
lahf
xor
into
push
and
xor
add
push
xor
iret
mov
mov
xor
fldt
push
insb
clc
push
imul
jg
jmp
mov
mov
jecxz
test
fwait
xor
xchg
sarl
stc
push
les
fdivs
js
jl
push
pop
pushf
push
int3
pop
pop
rorb
cmp
aas
ss
test
mov
or
decl
xor
mov
aaa
jmp
arpl
xor
call
inc
aad
and
jecxz
push
jae
xor
or
cmpl
sbb
in
bound
pop
jecxz
mov
jno
add
lahf
mov
xchg
cli
push
jg
push
inc
out
incb
in
fldcw
and
dec
jge
add
or
mov
push
inc
add
rclb
add
stc
icebp
xor
pop
xchg
jecxz
adc
adc
jo
push
roll
scas
sahf
jg,pn
jb
and
test
sbb
cmpsl
sbb
test
bound
repz
dec
cmp
fsubs
stc
pandn
sbb
lods
sub
jbe
jl
addb
lods
loopne
ret
iret
call
sbb
scas
andl
ss
jbe
cld
and
inc
jne
adc
stc
push
negb
imul
daa
xchg
cld
in
xchg
mov
jle
add
ds
adc
jg
stos
jge
xadd
mov
jns
mov
out
jb
jg
in
dec
pop
mov
xor
decb
ret
mov
mov
mov
into
lds
jnp
mov
dec
and
cmp
mov
ss
mov
js
div
mov
roll
bound
inc
pop
cmpb
out
icebp
addr16
rol
pop
jg
xor
daa
adc
xor
xor
fimuls
push
pop
sub
lock
mov
sub
mov
pusha
repnz
clc
lahf
xchg
mov
icebp
xor
ficoms
stc
xor
and
dec
repnz
jle
jb
inc
inc
mov
xorl
sub
push
fisubs
or
sub
hlt
pop
push
arpl
jp
xor
xor
mull
add
stos
out
out
lods
add
add
mov
jle
rolb
mov
insl
ljmp
std
std
inc
push
mov
ljmp
dec
je
loopne
ror
add
out
sbb
mov
lods
jbe
mov
sub
xchg
xor
shl
adc
cltd
pop
sub
push
int
testb
xor
inc
xlat
repnz
ljmp
cmp
or
shrb
xchg
incb
dec
pop
mov
xchg
shl
and
fwait
dec
lret
xchg
fwait
call
js
pop
bound
add
and
dec
stos
jns
repz
jnp
in
rorb
push
mov
ret
jmp
or
iret
rorb
mov
imulb
mov
and
jecxz
out
outsb
loopne
lds
mov
fwait
push
add
stc
jo
les
cmc
add
mov
pop
pop
std
mov
lods
push
dec
loope
sbb
stos
cld
jb
xchg
sbb
fimull
dec
cs
dec
jecxz
pop
and
dec
mov
xchg
xchg
dec
mov
jno
cmpsl
pop
mov
orb
xchg
inc
push
leave
pusha
lock
inc
loopne
loope
inc
push
and
and
iret
cmp
xchg
cs
lea
push
push
lods
push
fwait
in
in
and
or
mov
cs
mov
pop
test
xor
mov
mov
data16
cltd
and
leave
mov
fists
push
fcoml
inc
cwtl
dec
add
or
cmp
inc
push
stc
add
jbe
insb
movsl
mov
test
push
jbe
movsl
mov
fmull
cmp
int3
jecxz
adc
pop
add
subb
arpl
hlt
cld
rclb
mov
pop
fwait
shrb
sbb
xchg
lods
cs
cmp
loop
push
pop
inc
lds
inc
dec
xchg
shl
cld
cmp
jo
fdivp
sarb
dec
xchg
push
jle
test
add
in
jae
jns
mov
cmp
sahf
in
js
mov
imul
add
cmp
sbb
pop
and
cs
sbb
aaa
out
aas
sbb
push
mov
dec
xor
lcall
and
sbb
mov
xor
pop
ret
mov
dec
dec
ja
mov
aad
fcompl
pop
xor
jbe
sbb
imul
xchg
inc
shll
cmp
sub
inc
repz
imul
pop
out
icebp
icebp
int3
in
in
inc
or
fstpl
cmpsb
push
hlt
inc
ffree
popf
sbb
mov
insl
jmp
dec
xchg
lds
bnd
scas
sti
push
cltd
cmpsb
jno
pusha
in
rcrl
fildl
pushl
dec
popa
cmpsb
add
iret
jae
fs
lock
lret
in
push
nop
outsl
fists
sbb
lahf
cmpsb
jg
inc
mov
pop
push
pop
xlat
stos
inc
sub
jne
sub
in
dec
adc
outsl
mov
mov
aad
nop
rcrl
inc
mov
sar
in
ss
dec
push
scas
shrb
out
ret
outsb
sbb
cmp
jmp
aaa
or
int
xor
dec
loop
ljmp
add
cmpsb
test
fs
push
sbb
push
and
and
mov
cmpsl
dec
out
pop
out
movsb
mov
lret
add
cmpb
aas
push
add
and
mov
add
cmp
stos
ds
sub
sub
push
and
jecxz
xchg
imull
leave
pop
sub
test
pop
fists
xlat
and
push
ficomps
and
fsubl
pop
or
lods
inc
cmpsb
xchg
mov
sub
cmp
aad
mov
adc
in
and
add
cmp
lds
mov
adcb
xor
sub
les
xor
xor
xchg
insb
mov
inc
adc
xchg
loope
mov
and
and
jae
lahf
pop
mov
aam
movsb
fstp
or
mov
sub
lret
adcb
push
je
leave
cmc
sbb
call
pop
clc
imulb
xchg
out
pusha
aaa
pop
mov
loope
mov
hlt
push
mov
lods
imul
push
pop
popa
jmp
push
xchg
lock
mov
mov
out
scas
sbb
subb
cli
jo
xchg
mov
dec
sbb
mov
sahf
or
ret
push
dec
sub
cmp
jbe
xlat
loopne
xchg
sbb
push
cmp
sub
xchg
xor
je
jo
jg
test
cwtl
gs
dec
xor
ss
sbb
shrb
xor
repnz
jo
test
jne
push
jp
push
int
lods
add
inc
aaa
xchg
aad
mov
or
dec
rolb
fcoml
xchg
popf
sahf
xchg
nop
stos
imul
mov
jae
mov
mov
add
xchg
sti
mov
lods
pop
or
bound
and
stc
imul
xchg
pop
aam
push
xor
into
push
nop
lret
std
mov
imul
arpl
mov
mov
add
stos
xchg
jae
sub
xchg
adc
movsl
lds
sbb
sti
fucom
adcl
xchg
in
xor
cmpsb
call
sub
into
push
xchg
scas
mov
test
testl
cltd
or
stc
sarb
lds
push
and
pop
dec
lret
xor
adc
mov
int
jae
gs
popa
and
lds
aad
dec
les
mov
mov
adc
dec
aad
mov
sub
mov
inc
int3
pusha
lahf
sub
mov
and
shrb
cs
clc
nop
test
add
mov
and
popa
shr
sub
or
push
cmp
mov
or
and
lret
mov
xchg
enter
and
xor
jecxz
inc
mov
lret
outsb
fistpl
mov
mov
popa
or
mov
scas
xchg
dec
sub
mov
xchg
pop
push
loopne
lret
decb
fcomps
mov
icebp
jle
out
jecxz
ret
xor
xchg
arpl
daa
xor
pusha
fcoms
mov
scas
or
dec
xor
cmpsl
pop
stos
mov
inc
pop
ljmp
insl
cwtl
inc
ja
aas
or
adc
xor
leave
dec
dec
adcb
int3
jnp
fcomi
jg
aas
dec
jns
pop
adc
ss
hlt
jmp
pop
xlat
sbb
mov
jnp
pop
pop
addr16
xlat
xor
add
add
ud1
push
xor
adc
int
iret
push
sub
movsl
int
xlat
xchg
fidivl
ret
cmp
jae
sbb
xor
sub
mov
hlt
mov
lret
rcl
push
or
addr16
call
and
push
cmp
or
lahf
int3
pop
iret
or
ret
out
push
pop
mov
cmp
and
std
inc
ret
sahf
sub
test
jne
mov
int
pop
repnz
out
sub
dec
jnp
int
lods
imul
and
sti
mov
pop
lea
cwtl
pop
adc
icebp
mov
inc
enter
add
sbb
int3
inc
lea
and
notb
and
icebp
or
push
inc
pop
enter
mov
inc
mov
xor
dec
in
cli
xor
pop
xchg
cmp
bound
xchg
ds
test
mov
mov
fisttpll
xchg
sub
cmpsb
enter
adc
push
scas
fwait
pusha
jb
cmpsb
sbb
stos
jg
sub
cmp
sarb
sbb
push
fs
mov
hlt
add
int
or
enter
call
aaa
fmuls
rcl
dec
movsb
loop
into
cmpsl
out
inc
lret
decl
mov
test
scas
sahf
xor
inc
lahf
jae
pop
mov
push
cmp
pop
mov
sub
push
imul
push
mov
testl
dec
or
jecxz
scas
mov
add
jg
bound
jns
mov
jb
xchg
cmpsl
add
frstor
mov
dec
aas
enter
sub
sub
mov
imul
fwait
jno
sbb
mov
xchg
imul
cmp
in
test
jl
call
cmp
sbb
popf
test
xchg
jnp
lea
push
movsb
mov
cmp
xor
out
aad
inc
dec
or
mov
fs
stc
negb
es
cmpsl
das
cmp
push
notl
pop
paddq
dec
jecxz
adcl
addr16
orl
cwtl
add
mov
mov
ficoms
push
test
dec
lods
sbb
xor
adc
fisubrl
xchg
test
imul
data16
mov
pop
or
pop
sub
rorl
cltd
mov
mov
jmp
xchg
or
jnp
push
xchg
sbb
lea
loop
fisttpl
inc
and
aaa
ds
xchg
movsl
jnp
jp
ljmp
xor
aas
dec
loopne
nop
inc
pop
jl
mov
and
movsb
pop
out
mov
cmp
and
sti
ds
and
add
je
pusha
cwtl
add
idivl
and
or
and
int
or
out
mov
rcll
cli
loopne
pusha
push
leave
lds
mov
pop
push
adc
out
movsb
lods
sti
aad
jb
fcmovnu
pushf
add
movl
fnstenv
mov
jecxz
dec
pop
jp
mov
es
and
mov
ljmp
inc
in
pop
xchg
and
fnsave
test
sub
gs
das
rorb
adcl
pop
add
dec
mov
pushf
inc
daa
je
fisubrs
btr
int3
inc
outsl
flds
xor
call
cs
mov
jae
sarb
int3
adc
mov
xorb
jo
arpl
mov
testb
and
cmc
push
cld
arpl
fcmovb
shlb
sub
insl
fiaddl
cltd
jl
xor
aam
rorb
rcrb
das
rcll
mov
push
fwait
addl
je
xchg
pop
fucomp
jae
mov
pop
je
cmp
xor
adc
aaa
add
cmp
jns
dec
rorb
sbb
mov
mov
or
mov
lds
iret
adc
cmp
and
pop
in
jo
inc
lahf
setno
dec
test
add
and
dec
lahf
in
add
jp
mov
bnd
dec
jge
addr16
mov
mov
iret
daa
pop
sti
in
push
daa
xor
cli
mov
das
cmp
mov
add
mov
jmp
sbb
call
test
cltd
int3
dec
xor
icebp
add
xor
add
lock
adc
cmp
push
fwait
aas
inc
scas
xchg
lret
sti
mov
cmpsl
into
pop
mov
test
test
and
loope
inc
mov
je
fmuls
pop
xchg
sub
mov
mov
pushf
into
add
pop
jmp
insl
fs
aas
add
add
inc
cmpsb
in
inc
add
pusha
sbb
jmp
test
adc
xchg
add
xchg
shr
fwait
loope
aam
pop
xchg
call
xor
pushf
sub
insw
mov
push
cs
mov
pop
jnp
in
inc
pop
and
aas
push
out
inc
ret
add
and
int3
rorb
fstl
lods
call
popa
xchg
loope
aad
pop
cwtl
imulb
jo
xchg
sub
adc
aad
mov
leave
movsb
mov
pop
loopne
dec
out
sub
push
jmp
push
stos
in
pop
xlat
fldcw
or
dec
push
repz
adc
fstpl
mov
dec
pop
mov
mov
sub
imul
ret
dec
pop
xchg
push
fprem
popa
std
iret
inc
aam
mov
daa
outsl
fistpl
insl
shr
dec
rorb
ja
adc
sbb
inc
push
int3
loopne
loopne
mov
xor
inc
cmp
adc
and
fxtract
ret
mov
imul
stos
push
jb
rcrl
inc
ret
adc
out
test
repnz
dec
push
repz
dec
dec
lret
jmp
fdivrs
mov
cmp
cwtl
cli
lcall
out
pop
mov
xor
adc
stc
dec
add
fistpll
loope
mov
out
push
or
cmp
sbb
xor
mov
sti
test
in
pop
push
jmp
ss
shlb
or
aaa
fwait
mov
adc
arpl
lcall
lock
clc
push
and
mov
out
pop
loop
cmp
fdivr
mov
pop
outsb
mov
jb
xor
fwait
shlb
das
mov
sahf
fwait
test
inc
xor
scas
cmp
js
sbb
or
dec
mov
cmp
mov
aam
or
cwtl
mov
test
adc
sbb
jb
lods
pop
xrelease
mov
pop
mov
cmp
imul
jnp
push
cmp
xor
inc
mov
or
sti
les
sbb
out
dec
cmc
cwtl
xor
nop
push
push
mul
out
out
pop
aas
xchg
xor
cmpsb
xchg
and
push
push
mov
mov
out
pushf
imul
mov
sbb
cmc
sbb
sub
push
inc
mov
stos
bound
add
das
notb
test
push
js
push
es
dec
sbb
and
in
rclb
xor
cld
mov
sub
mov
inc
repnz
inc
mov
std
xlat
fucomp
dec
in
push
push
adc
out
xchg
pushf
lret
jp
add
pop
fmull
push
inc
push
jmp
data16
and
xor
cmpsl
stos
pop
aad
orl
lahf
push
lods
xor
adc
mov
cld
pop
fs
dec
and
enter
rorb
mov
sub
fdivrl
repnz
jo
add
repnz
cld
ljmp
jb
mov
ret
jns
push
lock
push
dec
inc
sbb
movsb
subb
and
cmc
jge
inc
into
dec
out
popf
mov
sbb
mov
inc
pop
mov
std
repz
add
loopne
pushf
pop
divb
cmp
push
push
ret
sbb
rclb
fcomps
outsl
push
and
mov
mov
add
sbb
inc
adc
mov
pop
test
jbe
or
sub
sbb
lock
or
pop
push
inc
shlb
inc
mov
orl
mov
sarb
and
inc
push
mov
xor
rorl
sbb
rclb
dec
cmpsb
push
sbb
cmp
mov
jle
xchg
icebp
xchg
jnp
in
or
mov
je
or
int3
mov
cmpb
or
dec
scas
mov
lcall
insl
inc
jle
iret
jge
push
xchg
int
cld
adc
aas
xor
push
cmp
loop
fs
movsb
mov
or
adc
mov
fwait
je
cmc
outsl
inc
shrl
int
adc
in
lock
jbe
xchg
sbbl
adc
adc
push
jo
cmp
insl
fiaddl
cmpb
test
sub
or
sbb
pop
sub
fcomip
sub
pop
jecxz
sub
or
sahf
xlat
jb
cmpsl
ljmp
repz
cmpsb
adc
mov
dec
stos
mov
xchg
sub
rclb
cs
in
xor
mov
lret
jp
sbb
leave
nop
inc
addr16
ds
bound
cmp
push
sbb
mov
loope
shr
mov
jbe
push
inc
mov
and
jecxz
pushf
cmp
or
shlb
jb
lea
pop
into
pop
push
dec
push
lea
jle
cltd
enter
xor
jns
test
jno
cmc
mov
ljmp
sbb
std
inc
lea
push
js
orb
mov
lea
fistpl
out
loopne
xor
inc
xor
gs
or
in
js
cmpsb
xchg
cmp
or
jo
and
mov
jle
insl
cmc
in
out
lret
pop
pop
inc
push
and
mov
or
test
leave
ret
xor
stos
in
or
jne
ret
adc
out
mov
pop
leave
xor
imul
mov
and
inc
xor
jmp
and
jecxz
lock
int3
xor
les
aam
out
movsb
mov
stc
and
in
pop
imul
jnp
add
scas
mov
orb
xchg
nop
test
dec
jnp
push
mov
or
add
or
movsb
xor
jl
decb
and
scas
mov
subl
out
push
push
bound
int
jns
test
dec
jb
inc
pop
pop
dec
movsb
push
sbb
mov
add
xor
fwait
push
sub
ret
fcmovnb
mov
rolb
in
orb
xchg
jo
mov
cwtl
cmp
inc
xchg
xchg
jp
outsb
call
inc
fildl
xchg
mov
sub
fwait
stos
adc
fcoms
cld
jge
stc
xor
and
xor
cmp
adc
icebp
adc
cmp
movsb
push
xor
mov
jmp
add
nop
jno
inc
jo
jp
jno
ja
cmc
sub
add
test
mov
out
stos
push
jb
loopne
mov
adc
xor
xchg
pop
clc
xchg
fldln2
in
ss
cmp
cmp
xor
lods
shlb
mov
push
xor
lcall
lock
and
test
xlat
pop
xchg
fisubrs
out
and
in
repnz
stos
xor
movsl
dec
jno
sbb
out
lods
adc
cld
adc
push
push
xlat
rolb
push
mov
outsl
adc
adc
stos
outsl
test
mov
jecxz
adc
mov
xchg
push
bound
stc
jbe
jo
mov
cltd
fnstcw
dec
fbstp
clc
es
scas
jne
faddl
jge
in
xlat
pop
ret
mov
sti
aam
and
sub
cmp
lock
xor
jmp
and
fmul
mov
xchg
out
jle
shl
mov
pop
xchg
cmpsb
adc
and
or
test
stos
pop
push
jae
push
inc
sbb
sub
inc
push
mov
cmpsl
xchg
ja
fistl
and
pop
jo
jbe
jg
inc
popf
insb
arpl
int3
or
pop
jge
sub
push
leave
out
or
pushf
stos
test
push
and
xor
xor
stos
out
sub
fs
xor
inc
jae
fsubl
jl
imul
mov
push
sbb
mov
or
push
and
xor
int
rcll
push
cltd
adc
mov
decb
aas
shl
sbb
ficompl
xchg
cmp
hlt
std
mov
jns
popf
aaa
inc
test
jno
xchg
pushf
out
test
and
or
push
ret
or
or
repnz
shll
sbb
mov
add
clc
mov
test
loop
xchg
adc
add
xchg
inc
out
mov
cmpsl
inc
into
adc
sub
fwait
push
push
jmp
dec
xlat
fadds
add
ljmp
mov
xchg
inc
bound
sahf
fnstsw
adc
iret
adc
cmpsb
es
sub
adc
inc
stos
addr16
sbb
movsl
add
lret
test
pop
push
adc
push
hlt
leave
and
jb
push
fistpll
movsl
repz
pop
jno
sbb
cmc
testb
repz
aas
pop
or
cwtl
arpl
pop
loop
pop
clc
push
mov
sbb
scas
and
pop
mov
pop
jbe
jmp
fiaddl
pop
leave
sub
jle
nop
adc
movsl
setnp
xor
orl
dec
lds
sbb
jg
mov
sbb
aam
int
add
xchg
or
jno
cmp
addb
inc
mov
dec
test
iret
out
inc
out
ds
cmp
mov
dec
add
fidivl
cmc
push
or
dec
jne
in
jno
outsb
mov
int
push
sti
nop
test
cli
add
xor
dec
mul
push
and
stos
push
lcall
popf
jmp
adc
hlt
lods
insb
sbb
sbb
xchg
mov
in
popf
arpl
subl
adc
jno
es
cwtl
jns
cld
loope
or
mov
push
cmp
popa
mov
mov
mov
gs
stos
adc
sub
movsl
insb
lds
inc
xchg
pop
sub
add
sub
dec
lea
add
dec
inc
cmp
push
cmp
cmp
dec
mov
xor
push
inc
cmc
push
sahf
push
outsl
add
and
lock
mov
cwtl
fildll
in
sbb
xor
fadds
sti
cmp
fs
push
test
mov
mov
add
movsb
cmp
shrb
xorb
ds
imul
dec
or
add
adc
test
das
shll
sbb
mov
stos
or
scas
adc
icebp
dec
dec
push
push
mov
lret
ret
mov
xchg
stc
push
jno
xor
mov
lods
insl
xchg
or
aad
js
dec
jmp
call
mov
orb
std
mov
jns
jbe
loope
ljmp
shrl
sub
mov
les
adcl
popf
pop
xchg
fldl
adc
jne
pop
scas
es
lret
sub
push
adcb
pop
dec
les
fdivs
mov
xchg
jns
cltd
jno
pusha
daa
dec
or
mov
xchg
xchg
jg
mov
out
fstpt
and
into
mov
mov
cltd
lret
mov
adc
xchg
imul
aas
cltd
outsl
push
clc
mov
jb
lret
xchg
insb
pop
in
leave
sbb
dec
ja
stc
cmp
jecxz
je
and
xor
or
pop
sbb
rcrb
xor
out
sbb
xlat
pop
dec
inc
leave
sbb
sbb
outsb
adc
aas
sbb
in
rclb
push
test
xlat
mov
mov
sbbl
xchg
cmc
pop
jle
dec
fnstcw
out
scas
sub
dec
cmpsl
dec
or
std
adc
fldl
lods
and
popl
push
push
lods
lea
or
sbb
and
push
stc
cmp
push
sbb
jmp
mov
enter
sbb
or
adc
push
jne
leave
nop
int3
mov
negl
lret
push
nop
and
call
dec
shrl
fwait
mov
pop
dec
loop
pop
or
add
jae
pushf
cltd
loope,pn
out
mov
sub
in
test
filds
cmp
cmp
inc
jle
pop
pop
dec
popf
and
xlat
ss
movsl
lahf
ret
pop
lcall
fbld
add
xor
cwtl
roll
pop
add
in
xchg
imul
dec
jle
sub
xchg
fmul
cmpsb
mov
jnp
call
imul
jp
lock
repz
clc
adc
mov
jbe
leave
dec
lods
in
data16
mov
in
xchg
out
inc
sub
xor
shll
sub
xor
mov
fsubl
es
out
push
sbb
sub
pop
mov
sbb
jg
loop
mov
adc
sbb
and
in
cmpsb
ss
cld
or
imul
jo
jl
scas
in
push
shlb
pop
dec
dec
xchg
add
bnd
mov
in
mov
xchg
mov
ds
mov
xor
fsubrp
sbb
and
filds
incl
inc
lcall
clc
sub
cld
sub
sar
xor
sub
xchg
icebp
icebp
int3
lods
ret
cmc
sbbl
scas
mov
or
push
mov
sbb
push
ficomps
aam
in
xchg
or
loopne
dec
mov
mov
and
stos
adc
xor
mov
sbb
test
out
mov
lcall
pop
cmovle
ret
pop
adc
dec
cwtl
mov
push
loopne
mov
inc
sub
xor
push
push
cmc
insl
dec
hlt
in
inc
scas
add
int3
fucomi
ja
jno
lcall
sub
lea
jo
and
dec
sub
adcl
dec
push
xor
xchg
add
js
jge
mov
and
lret
fidivl
outsl
lahf
stos
xor
sub
outsl
sbb
lods
lods
sub
xlat
je
sbb
call
mov
adc
loop
cli
fistl
lock
je
add
push
ffree
pop
lock
les
orl
fisubl
pusha
dec
fwait
insb
xor
add
push
test
xor
cmp
loopne
ja
jl
pop
jmp
int
movsb
lea
inc
xlat
in
fbld
roll
lahf
scas
icebp
cli
pushf
jb
pop
xorb
negl
lcall
inc
or
imul
arpl
xor
fdiv
int3
cmp
jae
flds
sbb
in
or
jns
lret
pop
jmp
fs
mov
push
adc
jmp
dec
outsl
xchg
decl
mov
inc
dec
mov
loope
xchg
std
bound
ljmp
loope
pop
mov
dec
das
loopne
scas
cmp
jnp
mov
pop
ds
call
subb
into
loopne
imul
stc
cmp
lock
jo
pop
lret
and
sub
pop
and
ja
ljmp
adc
xor
mov
mov
std
push
dec
cwtl
dec
adc
jne
push
insl
outsl
fcomps
fnstsw
cltd
stos
pop
aas
sbb
mov
fsubrl
out
enter
push
jno
mov
mov
icebp
lret
and
clc
cmpsl
xor
mov
pop
inc
push
jne
lahf
or
repnz
mov
gs
hlt
push
pop
aam
dec
mov
pop
std
or
dec
mov
lret
or
and
jae
push
jmp
cs
scas
out
mov
movl
jb
xchg
push
rolb
insl
sahf
sbb
and
mov
popa
dec
and
lods
popf
and
sbbl
aam
cmp
push
push
mov
out
es
sub
js
test
roll
out
sub
sbb
inc
cli
add
clc
mov
adc
test
cmp
test
sbbl
das
lcall
pusha
xor
out
fistpll
jae
add
or
es
add
dec
cmpb
cmpb
jmp
int3
jg
jmp
les
adc
test
in
test
pushf
hlt
repnz
sub
pop
ss
add
outsb
push
pop
repz
cwtl
aaa
repz
pushf
mov
pop
fidivrl
ja
inc
int
mov
cmp
sti
cltd
sub
push
pop
int3
cmc
mov
pop
mov
pop
push
add
jecxz
jnp
cwtl
repz
int
pop
inc
sub
cmp
jl
jl
sahf
mov
pop
dec
mov
hlt
popl
or
cltd
or
movsl
or
sti
lods
ss
pop
out
jne
dec
mov
roll
pushf
sbbb
mov
shll
pop
inc
out
inc
div
mov
nop
icebp
push
dec
pop
out
sub
adc
insl
bound
stos
and
mov
mov
cmp
jmp
mov
sub
rolb
dec
clc
aad
out
loopne
out
xchg
mov
push
loop
mov
mov
inc
lods
jmp
aaa
jg
arpl
stos
cmp
sbb
aam
jg
cmp
leave
cmp
or
mov
cmpsb
sub
addb
mov
dec
repnz
hlt
sbb
lret
xchg
leave
xor
add
jbe
outsl
jbe
pop
cmp
jge
lea
rcr
enter
divl
lock
jge
test
loope
mov
ds
imul
mov
xchg
sbbb
cmpsl
inc
dec
lods
leave
test
test
sub
in
and
aad
fs
jmp
add
sub
aam
ret
push
or
xchg
adc
testb
sbb
sti
jns
and
sarb
sub
stos
dec
aaa
cmpsb
test
int
loopne
loope
mov
sub
scas
pop
hlt
cmc
xchg
sub
xor
ffreep
sub
es
pop
pop
incl
jecxz
addr16
adc
mov
addr16
fcmovbe
dec
cmc
roll
js
test
scas
ja
das
inc
add
xchg
sub
pop
mov
sub
aas
sub
dec
adc
test
mov
aaa
xor
ror
xchg
push
pop
xlat
fdivl
mov
ds
clc
stos
inc
dec
xchg
cmp
sbb
cs
mov
inc
aam
addr16
adc
pop
sahf
jns
adc
xchg
lods
jnp
jb
mov
push
nop
dec
push
and
fwait
and
pop
sbb
or
out
jne
jb
mov
jg
or
cmp
jbe
rcrw
sub
xchg
inc
test
and
in
leave
jb
push
mov
inc
mov
xchg
rcll
add
inc
daa
or
inc
stc
orb
mov
xor
gs
aad
pop
and
mov
mov
inc
push
jb
cmpsl
cmp
mov
xor
fstps
inc
mov
jl
popf
incb
mov
mov
mov
sub
sarl
mov
test
xchg
iret
cmpsl
push
int
xor
daa
bound
leave
xor
cld
or
xchg
cltd
mov
jl
test
js
xchg
jo
xchg
xor
sti
lods
or
andb
xchg
repz
jecxz
pop
test
cwtl
leave
pushf
mov
jb,pt
je
je
mov
push
dec
pop
mov
push
lea
cmc
dec
push
jge
push
inc
lret
sti
xor
mov
dec
pop
loope
out
jge
mov
jge
pop
fwait
lods
popa
push
test
aas
sub
xchg
js
xor
sarb
cmp
clc
inc
js
jmp
into
cmc
daa
jle
sbb
dec
jno
out
push
adc
insl
rorl
cmc
shlb
sub
mov
cmp
jp
jle
mov
stc
cmpsl
mov
lret
cli
xchg
xchg
cmpsb
mov
adc
shll
fwait
add
mov
in
sbb
ljmp
lahf
out
in
dec
fldl
pop
sub
movsl
in
cli
sub
fstpt
out
andl
aas
mov
data16
xchg
inc
adc
clc
mov
test
and
call
jge
push
les
add
or
xor
jb
dec
xor
hlt
sbb
cmc
push
lret
int
test
dec
push
into
pop
inc
pop
inc
push
std
adc
mov
aaa
outsl
fldl
mov
adc
push
out
xor
stos
dec
orb
imul
and
mov
cmp
jae
inc
stos
add
sub
fsubp
fstpt
mov
jno
pop
adc
jae
xor
sub
xor
pop
adc
sbb
jnp
push
mov
fisubrl
mov
sarl
out
aam
dec
sub
mov
loop
jl
mov
xor
mov
inc
mov
add
sbb
push
arpl
mov
addr16
or
or
fs
pop
fldcw
outsb
aas
outsb
leave
in
cs
inc
loopne
loop
bnd
sbb
ret
xchg
lods
ds
dec
xchg
cmpsb
jmp
xchg
fnstcw
ret
out
sbb
mov
dec
xchg
into
pop
aam
icebp
aas
pop
push
adc
mov
daa
pushf
popa
psllw
rolb
sub
push
jae
fisubrl
gs
mov
shl
mov
into
sub
rclb
pop
push
adc
pop
sub
arpl
xlat
mov
xchg
cmp
inc
ds
in
add
xchg
sub
xor
sub
sbb
sub
jp
mov
jmp
cmp
in
push
fs
dec
push
mov
add
call
sbb
inc
jg
mov
sbbb
jecxz
aam
or
cwtl
xor
insl
xchg
add
fsts
sbb
pop
inc
out
or
int3
sub
insl
mov
es
insb
cmp
in
fisubrs
mov
xor
jmp
adc
adc
xor
xchg
stos
cmp
in
xor
inc
pop
mov
xchg
cmpsl
xor
push
jbe
aas
push
loope,pn
orl
jne
sti
ss
xchg
fwait
push
mov
enter
dec
add
sahf
dec
mov
sub
sbb
pop
cmpsl
out
repz
mov
fwait
lods
arpl
mov
repnz
lahf
inc
sbb
xchg
lods
loop
dec
stos
mov
mov
jno
adc
sahf
cmpsb
jge
pop
int3
mov
popf
xchg
and
lcall
cmpsl
or
lock
adc
test
mov
scas
test
add
pop
int
ljmp
outsl
mov
mov
shll
subl
fwait
pop
lods
or
adc
repnz
insl
xor
jae
mov
inc
cmp
lret
cld
push
push
pop
push
jl
roll
xchg
or
lea
lods
popf
xor
rcrb
dec
rorb
mov
je
dec
sub
insb
mov
push
sub
push
push
fcmovne
mov
stos
xchg
jo
fcomip
push
jecxz
jnp
add
xchg
std
sub
es
mov
sbb
je
or
repz
fwait
mov
aas
lods
sub
fs
cmp
aaa
push
test
mov
daa
push
or
sbb
mov
fwait
dec
jge
push
repz
jne
mov
push
clc
jnp
ljmp
dec
xor
dec
stos
lret
nop
aad
loopne
mov
lods
mov
cwtl
pop
out
push
inc
ja
cmp
cli
or
mov
mov
shll
or
shll
inc
imul
jmp
add
outsb
pushl
jmp
std
xor
xor
cld
shll
fmulp
cld
in
pop
cmp
movsb
sub
jecxz
adc
adc
or
out
cmp
inc
mov
mov
in
jno
outsb
sub
mov
push
sbb
or
sub
push
or
push
test
sahf
arpl
mov
add
insl
push
pop
jmp
jle
in
out
inc
sbb
lods
mov
push
cwtl
add
insb
cwtl
and
mov
sub
fldcw
cmp
test
add
jne
sub
pop
dec
xchg
ret
sub
mov
loopne
mov
mov
xor
push
std
and
pop
cmp
loopne,pt
es
pop
add
in
jns
add
mov
lods
cmovbe
movl
inc
popa
stc
or
sti
stos
int3
negb
rolb
sub
rcrl
pop
xchg
fcomp
mov
jno
mov
sub
test
push
sbb
pop
lcall
jge
xchg
dec
sbbl
hlt
rclb
dec
lods
insb
outsl
dec
in
das
shlb
jns
rorb
jb
ja
dec
aam
jmp
add
xchg
jbe
test
pop
imul
faddl
pop
inc
or
shrb
xor
push
pushl
jge
inc
jnp
pop
into
ret
pop
push
push
jno
inc
pop
pop
repnz
or
int
mov
cs
push
fisttps
mov
stos
sti
sub
sbb
xor
dec
add
sahf
andl
xor
and
push
cmpsb
cld
xlat
sarb
insb
stos
pop
cmp
stos
inc
fbld
stos
add
int
sbb
pop
push
ret
fiaddl
add
mov
sbb
int
cmpl
push
jmp
cltd
and
pusha
cmpsl
inc
in
xlat
js
pop
jno
fstl
ret
push
adc
fcomp
xor
pop
jmp
divl
addr16
mov
or
add
xchg
or
call
data16
jge
icebp
pop
lfs
sub
adc
xor
aas
jb
std
aad
push
cmp
sbb
arpl
mov
mov
movsb
loopne
pop
mov
in
xor
ss
push
divb
mulb
shr
gs
outsb
sub
aad
push
sub
mov
test
mov
ret
sti
dec
cmp
xchg
jle
dec
adc
jl
stc
out
pop
divb
repnz
push
jbe
movsb
jge
cli
sub
mov
mov
insb
mov
test
ret
mov
adc
shll
xchg
roll
pusha
arpl
popf
xchg
mov
jl
xchg
scas
and
fdivrs
or
out
or
loopne
cld
jmp
mov
push
daa
and
dec
inc
or
jns
outsb
out
das
das
and
xchg
mov
xchg
in
cld
cmp
lock
jb
jle
add
pop
xorl
xchg
xchg
inc
mov
xchg
daa
sbb
xchg
int
js
popa
ret
mov
jno
cmovb
add
mov
gs
hlt
ja
mov
inc
das
sbb
daa
mov
fucomip
outsl
cmp
push
dec
inc
add
sbb
cs
inc
aas
scas
lahf
arpl
pop
cmp
popf
push
xor
int
or
sub
push
jg
xor
mov
or
ds
or
jae
add
test
rcll
sbb
test
dec
push
push
fistps
cmp
inc
add
gs
pop
mov
push
pop
and
add
imul
sbb
mov
add
mov
fcomps
and
mov
mov
sti
dec
fisubrs
call
push
outsl
mov
movsb
lret
cld
loopne
icebp
mov
adc
or
pop
sbb
add
add
push
outsb
mov
in
repz
out
cmp
movsl
cmpxchg
and
test
inc
adc
jmp
sarb
sbb
mov
mov
jnp
sbb
inc
in
pop
dec
lcall
xor
in
les
mov
out
cltd
sbb
inc
add
jg
mov
jae
mov
xchg
jnp
or
push
add
gs
adc
ret
push
adc
sahf
xchg
jno
ret
xchg
sbb
xchg
dec
mov
aaa
pop
and
or
mov
aam
jmp
repnz
out
scas
inc
dec
cmc
jbe
es
mov
sub
aas
fcmove
addl
xor
mov
pop
mov
repnz
mov
cmp
adc
jp
jle
xor
js
aam
adc
js
xor
xor
fsubs
pop
jecxz
insl
mov
ljmp
rcll
imul
loopne
test
ljmp
mov
ret
fildll
lea
ds
pop
ret
nop
mov
xchg
fcompl
cmc
aam
sbb
jb
aam
inc
xchg
xor
inc
movsb
fists
dec
je
adc
test
out
scas
xchg
pop
adc
add
xchg
pusha
jne
movsb
addl
pop
imul
arpl
or
std
adc
pop
xchg
sbb
mov
add
pop
inc
in
push
xchg
push
cmpsb
pusha
loopne
scas
out
movsl
btr
lods
jae
outsb
push
test
mov
pop
mov
or
jne
stos
sahf
inc
adcl
jmp
mov
testl
ljmp
cmp
dec
dec
dec
xlat
push
adc
test
cmpb
cmp
sbb
sub
leave
cmp
push
sbb
movsl
cmc
stos
daa
movsl
jle
pop
dec
jg
in
push
cli
sbb
enter
mov
adc
jnp
add
into
mov
xor
jecxz
mulb
addl
mov
data16
nop
mov
negl
outsb
test
pop
adc
loop
mov
pop
leave
dec
mov
mov
or
dec
lahf
xchg
mov
xchg
scas
cmpsl
push
call
aas
sarb
add
lret
ficomps
jmp
cmc
nop
xor
movsl
in
nop
imul
call
aas
xor
jecxz
cmp
stc
cmpb
mov
xor
icebp
push
xchg
dec
das
outsl
fidivs
lods
fists
dec
in
mov
jmp
js
inc
mov
or
imul
in
fadds
lods
fdivs
or
add
popl
xlat
stos
pop
push
je
cmpsb
neg
jbe
cmpsl
jmp
and
and
dec
mov
inc
sub
pop
lock
rcll
jg
movsl
pop
mov
push
mov
mov
lret
arpl
inc
das
mov
les
mov
push
mov
inc
sub
cmp
out
sub
adc
sub
js
ret
je
pop
nop
mov
sti
lds
mov
je
stos
ja
inc
ret
pop
movsb
dec
popf
sbb
push
adc
mov
and
jnp
lret
data16
dec
int
daa
popf
push
dec
aas
inc
sub
cmc
xchg
add
loop
nop
and
lea
pop
push
rcrl
lods
sbb
popa
shll
xchg
jmp
rcrl
xchg
xchg
dec
loopne
inc
movsl
imul
mov
jbe
in
dec
stc
pusha
scas
mov
cmp
push
add
in
dec
xlat
mov
add
xchg
add
add
xor
pop
push
xchg
dec
inc
repz
sub
lret
xor
jmp
popf
movl
pop
out
int
mov
fsub
cld
pop
cmp
stos
adc
inc
inc
add
andl
hlt
pushf
pop
pop
int
pop
pop
aas
inc
pop
mov
dec
test
stos
jg
inc
cltd
push
add
fucom
pop
pop
rol
ja
sbb
adc
ret
jns
mov
jge
push
aas
popl
and
fwait
cmc
sub
and
orl
xchg
mov
in
scas
in
shl
leave
pop
add
cld
out
in
mov
lods
repz
std
loop
add
stos
add
adc
adc
or
lock
call
jle
fbstp
mov
adc
fsubrs
in
test
ficoml
nop
arpl
add
lea
pextrw
mov
dec
jo
xor
push
js
loopne
test
aad
fs
div
mov
test
jo
push
cmpsb
lret
jl
adc
jno
stos
jno
jb
xor
imul
lahf
rorl
push
fwait
in
push
mov
dec
lahf
aaa
xchg
outsb
std
inc
cs
addr16
repnz
jmp
sub
and
in
pushf
mov
lahf
inc
pop
or
popa
sar
lcall
push
vminps
int3
add
cmp
mov
jbe,pt
je
fsubs
xchg
sti
and
test
ds
das
leave
mov
xchg
pusha
sub
dec
sahf
push
cli
add
test
aad
xor
inc
fsubrs
or
pop
adc
lret
sbb
mov
and
fstl
pop
scas
adc
mov
xor
movsl
push
mov
mov
mov
loopne
fldenv
xlat
cmp
mov
cmc
or
test
clc
pop
push
add
aas
aam
xchg
and
sbb
outsl
clc
xchg
subl
pop
aas
xchg
test
mov
icebp
out
inc
xlat
in
cmc
daa
or
adc
adc
js
inc
dec
jg
jp
cmp
sbb
inc
popf
subl
sbb
or
sbbl
fcoms
lcall
mov
sahf
fucomip
push
das
rcll
addl
cmp
clc
cmp
push
in
stc
sub
bound
and
js
or
pop
jo
jmp
test
xchg
mov
in
mov
and
sbb
xchg
in
mov
mov
sarl
popf
popl
and
and
xchg
jp
add
test
cwtl
push
testb
mov
xlat
test
bound
xchg
cwtl
jbe
mov
icebp
pop
inc
jg
outsb
ljmp
dec
les
aad
adc
inc
cmp
push
jb
xor
xor
int
lock
ja
inc
nop
bound
cmp
aam
loop
add
test
mov
cmc
push
in
cmc
sbb
sahf
sbb
cld
mov
mov
sbb
int3
dec
push
cli
inc
lock
cmp
cmp
add
aaa
in
sbb
popa
push
jg
ret
shlb
sti
pcmpgtb
jbe
mov
aam
das
add
mov
cld
ret
ss
cmp
in
xchg
sti
pop
leave
cmp
lds
mov
leave
addr16
sahf
out
xor
inc
lret
push
add
bound
pop
and
test
xchg
inc
jecxz
repnz
js
sub
or
icebp
dec
lock
aaa
pushf
xchg
mov
or
cmp
stos
fdivl
push
add
js
gs
shll
mov
add
cli
inc
clc
pop
fnsave
xchg
mov
adc
jge
mov
mov
lahf
loopne
sub
sub
and
rcl
call
cltd
clc
pop
sub
aas
sarl
xchg
aad
xor
pop
or
xor
xchg
test
scas
and
testl
jge
rcrl
imul
test
ja
lret
fisubl
jl
nop
sub
bnd
pop
xor
mov
lcall
dec
out
sub
jnp
mov
sub
adcl
mov
dec
cwtl
add
or
int
add
dec
sbb
inc
dec
sub
stos
sbb
sbb
xchg
je
mov
lret
out
in
lods
cmpsb
loop
inc
add
stc
icebp
inc
fdivrl
xchg
fs
cmp
jno
stos
movsl
mov
sbb
rcll
mov
or
mov
sbb
dec
test
inc
das
cwtl
and
shl
imul
cltd
xor
sbb
pop
push
daa
popf
pop
sub
stc
imul
sbb
loop
ljmp
dec
jmp
loope
popf
inc
sub
test
test
and
stos
call
jmp
test
fs
stc
lea
je
aam
mov
jno
shrl
ret
pop
xor
lea
out
in
ret
loope
stc
sbb
fcmovb
sbb
cwtl
lods
xchg
hlt
jge
cld
repz
imul
jp,pt
push
ds
xchg
mov
scas
mov
enter
jne
xorb
dec
scas
inc
into
loope
add
lock
push
push
lods
mov
add
in
out
add
pop
xchg
int
xor
cmp
xchg
fisubrl
jmp
pop
es
mov
clc
cltd
lds
push
mov
cltd
cmp
mov
cmpsb
imul
in
addl
loopne
cmp
adc
sti
push
aas
jbe
mov
imul
dec
scas
lock
sub
cld
cs
sub
scas
icebp
jbe
push
pop
xchg
sti
add
cmp
push
jne
inc
or
das
xchg
push
xor
andl
adc
vsqrtps
pop
xor
and
and
sub
loopne
test
fnstenv
cmp
mov
test
mov
sub
pop
jnp,pn
add
inc
in
out
shrb
in
add
mov
test
sarb
pushf
icebp
jp
sbb
movsb
repz
out
fcomps
mov
jb
ljmp
sbb
jge
sahf
fists
mov
lret
std
insb
mov
test
int3
je
add
pop
pop
xchg
lods
sarl
repnz
repz
xchg
cmpsb
mov
scas
pop
sbb
sbb
lock
sahf
fdivs
aaa
cs
loope
xchg
leave
mov
jg
pop
loopne
mov
sub
pop
out
xchg
inc
adc
into
mov
ror
or
mov
sbb
addr16
jo
repz
xlat
push
aas
mov
mov
sbb
outsl
test
decl
adc
movsb
dec
cmp
div
mov
or
xor
xchg
ret
xchg
xor
cmp
lods
loope
cli
cmc
and
xor
cmp
adc
outsb
sar
dec
xlat
popa
and
popf
shlb
inc
sbb
das
xor
push
mov
nop
nop
inc
mov
xchg
inc
mov
xor
xchg
inc
mov
fidivl
and
in
xor
mov
fldl
inc
sbb
jmp
loopne
aaa
pop
ret
inc
mov
sti
lods
out
bound
imul
ret
mov
and
jns
ljmp
and
inc
mov
fcomps
or
loop
flds
pop
jecxz
je
sbb
jmp
fistl
xor
cmp
mov
xlat
and
scas
std
outsb
sbb
adc
shlb
jo
mov
cmpsl
push
shlb
mov
jae
or
loopne
in
or
ret
sarl
clc
mov
mov
sbb
inc
mull
and
test
shrb
adc
sub
pop
mov
out
lock
lock
mov
insb
inc
mov
stos
pop
push
add
mov
lods
cmp
into
jecxz
push
xchg
pop
enter
adc
cmp
lret
xor
push
into
or
leave
stc
iret
fcomip
cld
movsl
ljmp
add
cmp
jns
xor
imull
adc
add
dec
jno
or
fwait
inc
jne
js
loopne
notb
fistps
jno
jbe
xlat
inc
pusha
xor
std
test
sbb
cmp
ret
xchg
xchg
xor
fwait
mov
fadds
sub
movl
popf
pushf
out
aam
imul
cmp
cmc
xor
inc
mov
sub
jg
mov
push
jmp
fs
and
mov
or
mov
or
sbb
inc
xchg
sbb
call
fs
mov
pop
adc
inc
cli
pop
push
and
inc
sbb
cld
fstps
out
dec
sti
and
jecxz
mov
push
jbe
jp
pushf
mov
lock
push
xchg
mov
mov
movsl
inc
or
clc
les
fmul
or
cmp
in
popa
adc
rcll
les
sub
jmp
popa
outsl
xchg
rcrb
dec
aam
push
ret
jbe
push
add
cmp
jmp
mov
mov
test
dec
mov
enter
inc
out
mov
cld
lock
out
aas
mov
mov
jo
mov
fidivrs
gs
inc
aad
fstps
loop
add
rol
mov
xor
mov
ds
mov
sbb
iret
mov
mov
mov
sub
dec
jmp
loope
aam
ja
sbb
ljmp
ds
iret
and
daa
ret
daa
mov
aaa
fs
mov
push
stos
adc
ret
jmp
push
pop
test
cld
jg
jl
fidivs
mov
and
lret
and
mov
in
vblendmpd
outsb
cmpsb
rcrl
cmp
or
in
add
jge
aad
ljmp
lods
or
test
adc
mov
xor
mov
inc
daa
mov
push
xor
add
cmp
subb
mov
int
mov
mov
daa
repnz
rol
jmp
xchg
xlat
xor
dec
push
in
sbb
fs
sarl
roll
movsb
mull
jp
dec
xchg
inc
in
xchg
cmp
jno
inc
push
inc
or
sbb
sub
mov
mov
popa
dec
xor
jge,pt
inc
aam
sbb
sbb
scas
sub
in
in
sbb
pop
inc
es
xor
pop
loop
xchg
out
pusha
insl
and
and
sub
mov
xor
loop
and
and
aad
mov
and
es
lahf
sahf
adc
pop
movsl
jg
es
jmp
ret
sbbb
sbb
data16
icebp
push
xchg
adc
pop
push
mov
push
push
js
pop
divb
shll
in
dec
in
and
add
jnp
loope
cmp
or
je
js
jne
add
cmpsb
cmc
sub
int3
fdivrl
mov
imul
adc
sub
rcrb
lret
xor
jp
adc
fisubrs
fidivrs
pop
inc
xorb
clc
cmp
cmp
into
dec
std
std
dec
shrb
mov
ret
jb
cmp
mov
cmp
insb
in
push
cmp
mov
into
aas
mov
xchg
jo
or
lock
dec
cmp
pop
repz
movsb
fimull
xlat
mov
sbb
push
xchg
inc
xchg
aam
adc
in
lds
sti
xchg
shrb
dec
pop
jo
stos
adc
mov
popf
add
xchg
jno
sub
push
add
sbb
sti
ds
sbb
pusha
loope
lock
jl
sbb
push
test
inc
inc
adc
or
pop
xor
jns
sbb
or
lock
pop
jbe
rorb
lcall
jb
xlat
push
sub
mov
fisttpl
adc
stos
pop
rcrb
cld
push
push
rcrl
loope
jbe
aaa
pop
pop
jl
loopne
lods
mov
addl
fbld
test
test
icebp
jp
repz
test
mov
or
shl
pop
inc
ljmp
mov
es
jmp
mov
outsb
ret
out
stc
cmp
xchg
cwtl
scas
out
leave
out
or
xchg
stos
and
int3
fldl
enter
mov
mov
fistpl
sbb
fwait
ja
jmp
gs
psubd
mov
pop
aam
nop
ret
xchg
jg
mov
scas
nop
pop
nop
sbb
and
add
lea
mov
adc
addr16
jg
movb
inc
mov
out
push
into
inc
div
ja
fwait
xor
es
pop
imul
cmpsb
add
imul
lock
orl
mov
cmp
dec
test
mov
stos
in
je
mov
je
xchg
dec
scas
das
sbb
hlt
xor
pop
fiadds
cmp
sub
call
cmp
pusha
push
in
sbb
cs
js
push
ljmp
pushf
mov
and
adc
sbb
rolb
data16
sbb
fwait
loop
mov
jge
mov
nop
cmp
xor
push
sub
dec
andb
outsb
add
mov
pop
jne
sub
sbb
rcll
or
sbb
mov
rcl
sahf
sbb
inc
jg
xor
dec
pop
cmpl
mov
inc
andl
orb
enter
mov
scas
mov
jae
out
notb
bound
sub
lahf
push
out
insl
push
aad
cwtl
fstl
mov
and
insb
dec
hlt
nop
jb
pop
lret
sub
xchg
cmp
mov
daa
ss
arpl
add
lret
inc
dec
adc
mov
ds
pop
sub
int3
pop
xor
jle
imul
jo
ljmp
or
ja
xchg
dec
dec
adc
lcall
repz
fcmovnu
test
jg
and
fnstcw
cmp
daa
xchg
xchg
mov
xlat
and
das
push
arpl
cld
xchg
in
adc
fistpll
pop
je
sbb
movsl
sub
ljmp
inc
inc
jl
xor
lahf
ss
jp
mov
mov
push
iret
insl
lods
lcall
insl
lods
xor
pmullw
jg
and
int
push
mov
pop
sbb
add
mov
or
inc
mov
xchg
movsb
lret
jmp
jge
es
adc
jbe
stc
push
cmp
loopne
sub
push
scas
stos
dec
sbbl
pop
dec
daa
pop
xchg
cwtl
mov
pop
pop
pushf
adc
test
pop
xchg
add
sbb
xor
fldl
cmovp
int
jl
or
aaa
jb
fwait
repz
frstor
pop
and
iret
lea
sub
xor
mov
fucom
dec
mov
int
dec
xchg
lcall
mov
xor
pop
out
inc
sbb
mov
inc
fsts
sti
mov
rcrl
push
xor
pop
push
iret
fists
imul
push
mov
xor
fimull
pusha
aad
pop
and
mov
jno
add
sub
call
icebp
jl
add
lods
cld
or
push
movsb
mov
rcr
ss
pushl
fdivrl
sub
daa
mov
std
xchg
cld
pop
mov
dec
xchg
mov
lea
push
mov
cld
ret
push
fdivrs
adc
es
jl
adcb
push
mov
insl
ljmp
sub
inc
gs
mov
jge
inc
js
jmp
mul
fisttpll
and
popf
jg
dec
xchg
pop
jae,pt
movsb
fistpll
mov
push
aas
orl
je
xchg
jns
in
pop
data16
shll
or
daa
mov
cltd
and
dec
adc
addr16
mov
lcall
adc
fstl
and
lds
mov
inc
and
mov
icebp
nop
mov
or
sarb
scas
and
sbbb
rcl
jnp
pusha
mov
or
ss
jne
mov
fdivl
inc
lds
push
stos
hlt
std
mov
test
inc
mov
xchg
adc
ret
push
inc
cwtl
mov
jge
lret
inc
add
fists
int
mov
repz
inc
lea
ljmp
mov
xor
lcall
mov
mov
adc
cli
cmp
adc
outsl
das
mov
cmc
lahf
jne
xchg
mov
push
test
xor
jmp
fiaddl
adcb
in
adc
dec
push
shrl
or
daa
sbb
add
insl
pop
adc
outsl
test
xor
jno
mov
push
inc
aas
lods
sbb
push
push
xor
out
inc
inc
mov
dec
popf
test
in
ficompl
mov
push
mov
imul
pop
and
lock
dec
adc
jecxz
mov
inc
loopne
mov
and
cmp
cmc
arpl
mov
mov
xchg
pushf
cmp
push
out
xlat
mov
or
push
insl
ret
mov
cmp
jae
mov
popf
hlt
sbb
xchg
shll
jg
cmp
mov
fistps
cli
std
cmp
mov
dec
mov
sbb
jmp
mov
ret
inc
fnstcw
stos
sub
aad
popa
sub
std
xchg
orb
jno
imul
dec
fsubs
ret
mov
push
popa
jg
daa
cmp
cmpsb
and
sbb
pop
or
cwtl
jne,pt
xchg
cmpsb
mov
inc
or
lcall
loopne
cmp
sub
cwtl
mov
in
movsb
ljmp
stos
mov
fdiv
jns
xor
imul
lods
add
mov
pushf
ret
sub
push
mov
lahf
jge
ja
adc
ja
rcll
test
fdivrl
add
das
dec
stos
jecxz
sbb
in
xchg
fsubl
adc
lods
mov
jnp
mov
sub
cmp
push
lret
cs
lahf
les
hlt
daa
or
lods
popf
jecxz
inc
mov
int3
mov
push
shll
xor
mov
lock
cwtl
lret
or
or
out
andl
sub
jg
xchg
test
cmp
or
dec
push
pop
loopne
loopne
fdivs
aad
dec
cld
rclb
sbb
push
sbb
cmp
or
jecxz
insb
lahf
test
test
mov
pusha
aad
jbe
push
xor
sti
push
mov
insb
mov
adc
rorb
xlat
mul
sub
inc
and
jbe
cmp
inc
lea
mov
xor
fisubrl
mov
stos
pushf
iret
xchg
mov
cmp
xchg
rcr
jmp
outsl
es
sbb
idivl
jae
clc
and
sub
sbb
mov
adc
ret
xchg
rorb
and
add
sub
js
pop
pop
pop
and
or
fs
icebp
cmp
outsb
testl
sahf
sub
jg
inc
push
push
pop
jp
scas
mov
outsl
or
adc
enter
ja
inc
inc
xor
fisubrs
and
inc
dec
pushf
es
sbb
sbb
adc
popf
fldcw
xor
mov
fmulp
add
inc
bound
push
xchg
jbe
adc
xchg
test
and
inc
leave
out
jle
cmp
out
shl
mov
cmc
push
into
mov
loop
int
sub
arpl
lock
mov
pop
rorl
ret
gs
imul
fldt
sub
and
int
in
rcrl
sti
mov
jb
mov
js
pushf
outsl
dec
pushf
fcomps
aad
add
cltd
xchg
dec
lods
movsl
jae
fwait
stc
cmp
imul
repz
sbb
mov
mov
xchg
lods
scas
sbb
add
jns
movsl
add
sbb
mov
icebp
jne
lcall
stos
daa
imul
popa
mov
std
push
mov
cmc
mov
pushf
jge
jle
bound
sbb
addr16
cli
andl
pop
cs
popa
jl
or
inc
add
xlat
mov
xchg
mov
push
scas
inc
cmpsl
mov
test
pop
inc
stos
imul
scas
sub
lods
jle
lahf
xor
mov
push
sbb
cltd
in
cmp
xor
jno
shll
push
push
and
pop
dec
adc
xchg
mov
pop
jno
loopne
mov
mov
cmp
xchg
das
idivb
rorb
cs
lds
stos
in
pop
xchg
pop
dec
lret
xchg
cmp
rolb
jae
sub
lcall
fadds
into
and
lods
in
imul
sahf
cld
push
add
fs
lods
addr16
add
mov
dec
packssdw
adc
or
sbb
or
stc
push
ss
or
in
xchg
lcall
cmp
push
inc
fs
enter
jne
mov
push
dec
cld
cmpb
andl
push
cmpsb
aam
add
or
mov
dec
jecxz
xchg
scas
nop
lcall
dec
and
and
iret
and
ret
aam
rcr
adc
xor
jmp
dec
ljmp
sbb
push
xchg
pop
fsub
leave
cmp
mov
lret
push
shlb
cmc
xchg
or
mov
push
cmp
out
scas
cli
push
cmp
inc
sbb
fcomip
jbe
xchg
int3
outsb
test
int3
add
pop
das
adc
adc
push
hlt
add
imul
pop
movsb
cmp
jno
push
push
aaa
xchg
fcomps
inc
xor
mov
pop
add
pusha
mov
dec
sbb
clc
xor
mov
out
popf
push
dec
repnz
sti
inc
decb
inc
lods
push
rcr
lret
sub
enter
test
add
aas
adc
or
call
sbb
dec
jbe
lods
jecxz
je
movl
add
shrl
into
mov
ljmp
push
js
xor
je
sbb
jnp
out
mov
dec
jns
scas
clc
inc
sub
mov
adc
xchg
out
adc
mov
aas
insb
push
push
xchg
cmp
in
pop
add
push
or
movsb
push
repnz
je
gs
mov
in
jno
repnz
cmc
xor
push
lods
js,pt
hlt
push
inc
mov
mov
ss
push
jo
jno
mov
lcall
or
jno
push
sbb
and
out
inc
ljmp
jo
mov
jb
push
xor
cmp
stos
out
mov
xchg
sti
or
mov
aam
add
pop
movsb
fcmovne
push
pop
add
xor
repz
lcall
data16
arpl
pusha
test
sub
je
sbb
cmp
int3
jecxz
roll
jge
or
addb
int
sbbb
sarb
xor
nop
push
xchg
das
les
xlat
paddd
jo
and
int
jbe
inc
adc
rcrb
testl
roll
mov
leave
sahf
ret
mov
or
inc
les
icebp
call
push
push
insl
sub
fsubs
xchg
pop
sar
and
adc
cmp
adc
stos
ss
icebp
cmp
outsb
das
mov
lods
and
dec
shll
mov
scas
pop
push
or
xor
adc
gs
mov
out
shlb
rol
xchg
or
pop
popf
and
add
mul
cmp
cmc
push
imul
repnz
cmp
clc
cltd
rcrl
sub
mov
imul
stc
mov
pop
add
mov
or
mov
mov
cmp
ljmp
jmp
jnp
jg
out
inc
aam
xor
mov
lcall
scas
lea
cmp
push
out
shl
in
lods
and
addr16
cmp
jns
aaa
fimull
icebp
scas
pop
sbb
sti
cs
push
shll
pop
dec
inc
sub
add
out
fwait
nop
sub
enter
add
jg
rclb
mov
stc
out
add
mov
call
pusha
lea
icebp
bound
out
inc
jnp
cmpsl
repz
mov
dec
xchg
in
xchg
pop
mov
inc
sbb
int
dec
dec
ds
lcall
dec
insb
xchg
add
mov
lea
jns
pop
adc
scas
mov
inc
movsb
sbb
push
sbb
add
jno
mov
xchg
fsubl
mov
aaa
cmp
and
dec
in
mov
insb
sub
sub
mov
inc
jl
pop
in
test
mov
lret
adc
mov
or
test
mov
leave
jle
push
sbb
or
push
sbb
cmp
call
push
adc
outsl
push
add
jp
mov
push
dec
imul
out
leave
nop
or
cmpsl
sbb
push
or
mov
or
cld
leave
stc
mov
fsubl
push
bound
and
push
mov
adc
add
jge
cmp
out
popa
inc
js
leave
inc
sbb
inc
jb
lcall
sub
cmp
mov
js
fidivrs
xchg
test
lods
cltd
cmpsb
mov
ror
in
jbe
jmp
xlat
mov
xchg
or
push
es
mov
imul
jecxz
lods
or
dec
arpl
in
fwait
inc
test
cmc
cld
inc
lock
insl
push
scas
dec
jle
and
pop
push
test
add
inc
repnz
sbb
jnp
adc
ret
xor
shll
add
shll
lods
cmp
jo
into
mov
das
cmp
mov
or
mov
into
hlt
push
das
or
push
jae
push
ljmp
aam
jo
pushf
mov
ret
std
outsl
pop
leave
fdivrs
addb
xchg
cwtl
fdivl
sahf
sahf
dec
xlat
mov
pop
aas
xor
push
jmp
xlat
dec
out
inc
sub
pop
jns
add
mov
fadd
mov
cmc
sub
pop
xchg
adcb
data16
mov
add
in
xor
mov
lret
cmp
rorb
sbb
sarl
mov
bound
imul
inc
or
into
sub
inc
ja
sub
repnz
cltd
ss
pop
cmp
popf
outsb
dec
cwtl
jnp
xor
add
cmp
das
test
and
push
std
ja
out
add
pop
cltd
and
pop
ds
inc
stos
lcall
cmp
je
jg
mov
inc
outsl
in
add
fdivrp
repnz
ss
adc
or
in
xchg
loope
xchg
sbb
cmpsb
fdivrs
adc
cwtl
lock
pop
mov
add
cmpsb
imul
fs
push
leave
pop
cld
sbb
loop
and
and
adc
cmp
or
sub
pop
adc
repz
inc
pop
cmp
in
popa
in
or
lods
and
or
pop
mov
daa
fwait
pop
decl
dec
and
dec
cld
lods
scas
imul
pop
cltd
in
or
lock
out
daa
jbe
adc
xchg
es
jge
movsb
adc
popa
add
adc
jae
cs
cwtl
inc
mov
inc
pop
xchg
xorb
lds
ret
jmp
je
stos
lea
adc
mov
js
pop
mov
adc
arpl
sub
and
xorb
push
je
pusha
push
into
xchg
pusha
sub
negl
in
and
sub
xor
xchg
ret
cmp
pop
sbb
xchg
cmpb
dec
aad
adc
jbe
sub
loop
cmpl
adc
test
push
mov
sar
movsl
mov
ja
shlb
cltd
and
xchg
arpl
sbb
dec
js
inc
pop
inc
daa
movsb
cmp
mov
sbb
aad
notl
test
xor
pop
add
rcll
shlb
cli
pop
stc
fdivl
es
cmp
test
call
push
test
insb
xchg
test
rorb
or
fs
or
daa
sbb
xor
adc
add
cmpsb
ret
lret
xadd
inc
fs
out
jns
jp
dec
or
sbb
adc
loopne
dec
test
inc
pop
dec
xorl
xor
nop
lock
adc
add
orb
sbb
sub
push
hlt
or
mov
ss
and
mov
scas
ret
mov
add
push
ret
out
std
pop
push
test
ror
mov
in
aam
lahf
mov
stc
mov
lods
enter
scas
test
mov
push
inc
scas
or
xchg
outsb
je
test
enter
and
in
jae
iret
dec
or
sahf
jge
shlb
sbb
daa
lea
int
ds
mov
aaa
jbe
xchg
add
js
inc
cmc
add
imul
xlat
lret
pop
mov
nop
jp
cmp
dec
test
xchg
and
shll
add
xor
inc
pop
adc
xchg
test
imul
push
and
mov
mov
cs
leave
sub
or
popf
mov
dec
mov
inc
ja
xor
out
test
lahf
xlat
in
add
cwtl
mov
mov
testb
hlt
jl
push
out
stc
adc
inc
call
cwtl
test
pop
pushf
jne
idiv
test
push
out
bnd
mov
je
sbb
mov
fdivrp
jl
pop
ss
jecxz
cmp
sub
add
pusha
jno
push
addl
mov
sti
pop
mov
or
das
ret
push
or
adc
popf
xchg
repz
jnp
test
and
add
pop
xchg
movsl
lcall
mov
insb
aad
pop
out
jnp
jecxz
jns
push
xchg
adc
sub
mov
sarl
dec
lea
lea
dec
test
cmpb
sub
mov
push
mov
adc
inc
imul
mov
cmc
mov
dec
mov
data16
lcall
insb
daa
outsl
fidivrl
mov
rorl
lods
dec
lcall
aas
sbb
adc
xchg
cmp
xor
jecxz
jne
jmp
inc
adc
xor
stos
adc
adc
es
or
bound
cmovb
ficoms
insl
es
js
pop
andl
imul
andb
iret
cmpsl
mov
es
imul
icebp
pop
arpl
mov
ret
leave
push
rcrl
jo
js
shrb
lock
movsl
outsl
inc
push
sti
ja
lret
sub
push
fs
test
xchg
mov
xchg
dec
fsts
sbb
or
lret
push
adc
xchg
lods
push
mov
insl
sub
in
cwtl
adc
lret
out
rcrl
jl
inc
xchg
lock
repz
out
test
subb
sbb
dec
into
xor
xorl
in
xchg
inc
and
sub
loope
mov
cmc
iret
push
ja
pop
and
lea
cmp
mov
in
pop
xchg
imul
fmull
aas
and
loopne
or
push
fxch
dec
push
and
nop
call
out
mov
add
sbb
mov
out
push
out
dec
aam
icebp
lock
scas
loope
ret
pop
sub
rcrb
inc
add
cmpsb
jmp
pop
fwait
jmp
mov
lea
cli
pop
sub
out
nop
dec
or
sub
test
cmpsb
xchg
inc
mov
pop
sub
push
push
sbb
xchg
outsl
jae
push
xor
cmp
sarb
cwtl
aad
push
mov
xchg
imul
add
pop
or
das
faddp
fwait
out
or
and
cli
and
push
roll
xchg
shlb
iret
sbb
js
test
xchg
inc
lret
sub
mov
or
cmp
jge
inc
jl
jmp
adc
test
sub
adc
sbb
xchg
cli
push
cmp
or
pop
and
insl
fimuls
popf
add
xchg
fisubrs
out
xor
insl
and
xchg
aad
lret
fists
cwtl
les
icebp
test
xchg
fwait
in
jp
int
jns
das
stos
or
add
in
mov
add
arpl
arpl
vmread
add
pop
push
daa
in
push
iret
mov
xchg
sub
call
orl
mov
cmp
and
mov
test
test
adc
sub
es
sbb
pushf
out
sub
push
jg
lahf
pop
test
lods
leave
xchg
sti
gs
sub
add
aad
mov
dec
mov
sahf
mov
scas
mov
mov
inc
pop
cli
xlat
xchg
mov
unpcklps
add
aaa
cmpsb
sbb
ja
cmpl
inc
stos
stc
in
ffreep
dec
jne
inc
pop
mov
js
les
pushl
aas
lds
fadds
scas
jge
je
ficoms
mov
push
or
push
ret
pop
xorl
hlt
les
insb
add
test
cmp
pop
cltd
das
adc
push
cli
or
push
pusha
icebp
pushf
push
les
xor
pushf
insl
xor
ror
xor
jo
xchg
movb
jo
aaa
fsubrl
push
sub
out
jecxz
sbb
test
xorl
clc
cmpsl
pop
popf
movsb
add
inc
scas
ret
mov
mov
inc
jl
jmp
adc
adc
inc
enter
mov
push
cwtl
imul
stc
cmp
popf
jle
jno
pushf
roll
mov
scas
jmp
ss
ret
xchg
test
push
arpl
mov
test
les
jle
push
push
jle
loope
shr
sbb
adc
push
negb
add
xlat
sti
or
mov
mov
pop
ja
or
pop
sub
push
fdivrp
and
cbtw
and
xchg
lock
fs
adc
mov
jge
repnz
hlt
and
addr16
add
add
cli
aas
and
sahf
shlb
movsb
pop
adc
inc
push
fcomps
lea
mov
push
adc
push
inc
aam
push
mul
push
mov
push
push
pop
ret
dec
and
jb
mov
xchg
loop
adc
adc
or
data16
xchg
cmp
xor
jnp
into
enter
dec
or
pop
dec
mov
xchg
loope
addl
arpl
int
iret
arpl
xor
jbe
inc
dec
pop
sbb
insb
jno
test
call
push
fadd
mov
ret
popf
jmp
inc
and
imul
or
popf
daa
mov
jno
testl
rolb
mov
cmpsb
adc
add
xchg
daa
mov
scas
in
cmpsl
addr16
sbb
lods
dec
imul
int3
cmpsb
pop
push
sub
mov
push
mov
imul
push
adc
and
out
sbbl
mov
sahf
outsl
insl
adc
add
out
jge
pop
sub
ja
sbb
xchg
es
ja
clc
inc
outsb
sti
xchg
pop
xor
jno
fs
cmp
sub
outsl
or
mov
testb
fisubl
push
jl
scas
adcl
cmpsl
mov
lods
xor
flds
lock
icebp
out
daa
push
push
pop
cmp
dec
stos
push
sahf
mov
dec
adc
and
pop
js
mov
divb
sub
mov
cltd
sbb
and
les
push
insl
ret
xor
js
or
movsb
dec
data16
ret
add
dec
cltd
daa
cltd
adc
adc
inc
push
popa
xchg
inc
pop
cmovl
add
pop
sbbb
or
ret
cld
cmp
mov
push
sbb
inc
push
mov
xchg
mov
xor
push
stos
aam
addl
dec
xor
in
leave
mov
std
adc
test
das
adc
mov
sbb
dec
outsl
dec
dec
sbb
or
and
dec
clc
js
xchg
stos
data16
lods
das
add
out
test
imul
out
testl
xchg
dec
lock
ds
pop
dec
or
cld
ljmp
aaa
ja
mov
enter
les
inc
mov
rcl
fwait
aas
test
inc
push
inc
test
sub
xchg
movsb
push
mov
into
sbb
mov
daa
int
and
adc
lods
frstor
out
fistpll
ret
mov
insl
clc
mov
mov
sub
shlb
sbbl
and
mov
jl
sub
inc
cld
push
dec
mov
mov
rclb
scas
pusha
dec
push
mov
in
and
iret
pop
out
xchg
mov
into
and
fdivrl
fistl
dec
jl
stos
nop
dec
arpl
in
mov
inc
push
cli
cmpsb
push
adc
in
mov
jns
call
or
or
cli
push
and
stos
rcl
jmp
data16
mov
movsl
scas
stc
or
jnp
iret
sarb
dec
mov
push
jb
sub
push
in
add
sbb
lcall
inc
cmp
in
out
ljmp
lea
mov
sbb
sahf
lahf
out
sub
dec
cmc
pop
notl
fidivrl
sbb
int
jp
xor
lcall
mov
xorl
pop
daa
fisttps
adc
hlt
les
jns
jp
mov
inc
mov
pusha
sbb
mov
and
mov
sub
cmp
out
xor
push
ja
int
rol
daa
xlat
testl
cmp
mov
sti
insb
and
cmp
test
mov
or
add
inc
stos
jno
cmp
fucom
pop
les
cli
cld
inc
movsl
sub
mov
popa
inc
pusha
fidivl
out
inc
push
adc
imul
inc
sub
inc
cltd
adc
xchg
lds
test
cmpsb
sbb
xor
xor
lods
pusha
jecxz
scas
in
jns
xor
inc
test
cmpsb
and
stos
aas
sbb
jno
sbb
nop
movsl
mov
adc
jle
or
push
xor
sahf
mov
push
dec
cli
addr16
js
dec
mov
sub
shll
daa
mov
jbe
incl
orl
lock
pop
mov
outsb
xlat
adc
push
xor
fidivrl
cmp
sbb
push
mov
cmpsb
fnstsw
and
sub
push
icebp
hlt
in
pop
fsubrs
push
fwait
pop
cmpsb
filds
js
sbb
xchg
sub
stos
fmuls
jmp
cltd
jle
cmpsb
aam
or
jno
dec
mov
daa
pop
sbb
adc
dec
ret
icebp
jb
mov
xlat
adc
dec
aad
or
or
inc
lret
jnp
ss
dec
addr16
daa
scas
in
cmp
es
add
mov
lahf
push
data16
xor
push
addr16
lock
and
xor
push
sbb
jno
jns
into
insl
aaa
jnp
icebp
dec
daa
jl
push
pop
sti
xor
shlb
mov
test
push
or
sti
dec
xlat
sbb
mov
js
or
push
in
out
or
xchg
mov
fidivrs
imull
jecxz
in
and
sub
out
call
and
or
repz
xor
cmp
fcmovu
adc
xlat
xchg
add
into
ljmp
push
jp
daa
mov
mov
mov
test
test
ret
jns
push
gs
add
and
cmp
nop
jne
pop
pop
jbe
inc
mov
out
add
inc
cwtl
jns
outsb
adc
popa
lods
xor
std
add
mov
sub
lret
in
sbb
adc
jg
and
sub
add
fisttpl
fnstcw
movsl
out
xchg
and
and
outsb
dec
dec
rol
cmp
repz
cld
scas
orl
adc
enter
jge
scas
pop
lahf
leave
ja
fcoml
lods
add
lock
adc
mov
mov
shlb
cmpsb
add
mov
xchg
ds
cmp
imul
imul
call
inc
mov
out
jl
ja
cmp
imul
mov
pusha
mov
adc
and
icebp
loopne
cltd
mov
imul
pop
outsl
loope
cmpsb
xor
lds
sbb
xlat
movsb
pop
sbb
or
sbb
push
add
mov
pop
mov
psrlq
imull
addr16
sahf
sub
push
jb
ljmp
sub
sbbb
adc
dec
push
adc
repz
pop
cmc
jb
test
adc
push
mov
adc
loope
dec
mov
test
xchg
mov
fdivs
inc
push
inc
adc
lock
or
fsubrl
cltd
or
fs
add
mov
adc
jl
cs
rclb
sbb
outsl
xchg
xor
int3
lret
icebp
pusha
lahf
sbbl
or
test
xor
scas
push
insb
jb
push
dec
leave
mov
push
cmpb
imul
dec
stos
cmp
cmp
pop
and
insb
mov
mov
in
cltd
pop
mov
adc
mov
cltd
mov
pop
mov
ror
jnp
or
repnz
jo
rorb
fsubs
test
mov
mov
rcr
push
cmpsb
ret
xor
in
sti
adc
insl
pusha
mul
dec
add
cmc
fnstsw
in
adc
xchg
jg
mov
mov
movsl
cmpsl
mov
mov
ret
stc
add
push
jno
cmpsb
sub
cmp
std
das
jle
xchg
arpl
push
repnz
dec
mov
mov
or
dec
rcrl
adc
int3
ljmp
arpl
jecxz
mov
and
sti
aaa
insb
mov
retw
nop
mov
imul
mov
xchg
aam
push
ficompl
or
mov
mov
and
fimull
mov
jo
int3
in
bound
and
jmp
pop
loop
rcl
repnz
dec
xor
sbb
push
ljmp
xchg
mov
cmp
mov
cmp
adc
adc
cltd
mov
dec
jmp
loopne
movsb
addr16
xor
pop
into
dec
pop
or
pop
inc
push
scas
mov
cmc
cmpsb
call
pop
adc
outsl
sti
pop
jecxz
mov
popf
mov
popl
sar
dec
fldl
ret
dec
sbb
fiadds
je
dec
dec
inc
imul
aaa
ss
pop
or
sub
mov
sub
movsl
mov
test
roll
mov
xor
lcall
lcall
xor
pop
ds
mov
aas
add
pop
popf
xchg
icebp
dec
cmp
inc
mov
lock
das
popf
mov
popf
inc
lods
push
ss
dec
fdivl
sahf
inc
insl
fsubrs
sti
lds
sub
mov
cmpl
jb
mov
out
xchg
cmp
adc
mov
mov
xchg
popf
dec
shrb
fildl
popa
lds
push
dec
or
outsb
cmpsb
mov
dec
repz
pop
dec
xchg
sbb
sbb
scas
and
mov
push
dec
mov
sub
out
addl
cmpl
mov
lock
ja
movsb
pushf
jne
cmp
mov
sbbb
mov
push
jmp
shlb
and
xor
dec
xchg
adc
pop
push
or
push
xor
xchg
in
inc
movsl
jp
in
pop
dec
dec
xchg
mov
in
xchg
xchg
aad
push
arpl
lock
jo
mov
inc
inc
mov
rclb
jnp
dec
mov
jmp
call
cltd
test
cmpl
addr16
or
jo
mov
aas
pop
outsl
dec
pop
pop
mov
test
xor
xchg
out
adc
movsb
outsb
inc
into
fsub
cmp
insl
psubusb
mov
adc
mov
shrl
cwtl
stc
ficomps
sbbl
mov
cltd
stc
enter
stos
stos
out
int
inc
subb
addr16
dec
cmp
loopne
ret
xchg
repnz
shlb
iret
loopne
cmp
jp
ret
mov
fnstcw
fbstp
lahf
mov
sub
je
and
add
cmp
sbb
je
loop
jb
movsl
fsubr
adc
mov
jns
jge
sub
icebp
push
cmp
push
inc
jae
nop
fdiv
aam
or
jno
push
dec
fdivr
pop
push
and
sub
add
adc
mov
fadds
cli
inc
dec
into
stos
loop
sub
push
call
sub
lods
jno
in
mov
cmpsb
fisubrl
cmp
mov
sbb
shrb
xlat
xor
enter
mov
notl
sub
jp
jmp
fidivrl
sub
shl
or
xor
pop
sub
aad
ds
mov
outsl
arpl
shll
int3
mov
push
dec
lds
xchg
pop
sub
mov
insb
out
adcb
lods
adc
nop
and
cmc
xchg
out
mov
push
xchg
scas
mov
mov
imul
sti
mov
jne
std
sbb
je
adc
jg
clc
fcmovnu
mov
or
popf
lcall
push
fcomps
es
stc
push
cmp
jge
push
push
pop
loop
sub
nop
ret
andl
and
addr16
lock
orl
fiadds
jae
aaa
ds
lahf
sahf
inc
lods
orb
movsb
fbstp
adc
and
test
jl
andb
cli
scas
mov
or
pop
xor
jmp
adc
imul
add
mov
popa
push
mov
mov
add
pop
xchg
stos
push
jnp
push
popf
xchg
xchg
adc
shl
jmp
pusha
xor
cmp
xchg
sub
sahf
or
enter
xchg
aad
xchg
ret
dec
jno
cmpsb
call
xchg
daa
cmp
mov
xlat
lods
xchg
inc
mov
jb
xor
lret
stos
test
pop
cltd
insb
mov
daa
repz
enter
loop
movsl
inc
pusha
das
inc
scas
jp
mov
jns
das
sbbl
push
sahf
xadd
addb
test
fisubrs
insb
scas
mov
pop
mov
sti
and
or
fninit
test
push
push
inc
adc
jle
xchg
pushf
popf
mov
movl
mov
pop
jp
cld
pushl
adc
or
pop
and
lea
lea
or
mov
call
sub
arpl
jecxz
mov
sbb
cmc
inc
sti
xchg
sub
pop
pop
fcmovnb
add
pop
inc
or
loop
mov
pusha
push
ds
lods
dec
mov
jns
or
fs
and
fldl
jno
movsl
cmp
mov
and
rcrl
cmpsb
bound
imul
popf
scas
jg
clc
push
pop
das
cmp
push
xchg
ficoms
mov
outsb
into
dec
cli
lods
aam
push
fmuls
shrb
push
fstpt
cmp
bound
add
outsl
jmp
outsl
lea
rcll
out
mov
xchg
das
dec
mov
int
or
daa
jl
inc
xchg
cmp
adc
imul
cmp
rorb
mov
push
and
xchg
faddl
push
and
xor
insb
in
mov
xchg
je
mov
sarl
jg
imul
mov
addb
pop
push
gs
mov
pop
out
bound
mov
sti
daa
cmp
ret
cmp
xor
loope
scas
pop
es
cld
mov
pop
mov
mov
call
or
jp
inc
dec
das
xchg
add
jmp
aam
in
ljmp
sbb
xor
mov
mov
insb
dec
push
rcrl
pusha
fcoml
add
loopne
call
ficompl
inc
jns
std
aaa
les
sbb
pop
test
in
daa
mov
add
jns
cmpsl
add
sbb
jle
lahf
xor
xchg
mov
mov
clc
lock
mov
stc
or
dec
push
adc
rcrl
rcrl
lods
pop
or
fstl
adc
inc
lcall
gs
xor
mov
xchg
aas
and
movsl
out
ret
dec
xlat
push
mov
stos
test
sub
jnp
pop
inc
mov
mov
jbe
push
ljmp
cmc
adc
xor
push
daa
out
cmp
movsl
sbb
mov
xor
or
pop
rolb
sarb
fnsave
jno
stc
xor
call
mov
repz
push
and
daa
add
andl
rcrb
sub
cmp
rorb
stos
push
mov
sbb
test
aad
adc
sub
fidivs
mov
inc
and
add
stos
cmp
xchg
in
adc
movsl
outsb
lret
mov
dec
xchg
ret
shrl
jg
notb
sub
mov
in
cmc
fisttpl
test
test
pushf
pop
xorb
push
and
add
xchg
das
mov
scas
aam
cli
and
mov
aad
pop
ja
cmpsl
cmpsl
mov
and
movsl
push
rorl
mov
clc
ja
stc
push
mov
sti
dec
push
xchg
cld
mov
std
jae
insb
mov
jmp
mov
shlb
stos
ret
pop
mov
mov
sub
push
push
xchg
jl
cwtl
inc
jg
mov
pop
in
iret
pop
inc
imul
push
andnps
sbb
add
test
mov
pslld
enter
sti
xchg
and
andl
or
mov
repnz
jge
lea
jnp
in
mov
popf
sub
enter
addb
jge
leave
jecxz
std
subl
xchg
mov
stc
scas
or
jno
dec
dec
jmp
pop
rcpps
inc
loop
jmp
pop
adc
nop
stos
daa
pop
xchg
jbe
push
out
fidivrs
push
adc
movsl
les
adc
pop
mov
lea
pop
test
pop
iret
fstp
fimuls
jno
adc
test
testl
out
jns
dec
sahf
fisttps
mov
pushf
std
cli
lret
sbb
pop
jb
mov
or
or
jno
xor
movsb
cmpsl
mov
jno
adc
stc
dec
adcb
sub
fisttpl
and
lea
sub
pop
sbb
sub
mov
push
xchg
push
into
pop
dec
out
mov
mov
or
inc
in
cwtl
adc
ja
int3
gs
cmp
ficompl
call
movups
icebp
pop
pop
add
mov
pusha
or
push
xchg
int3
es
inc
dec
in
jns
xlat
sub
cltd
sbb
xchg
sub
push
push
mov
mov
cmp
test
mov
in
jae
shll
add
cmp
iret
inc
std
pop
inc
mov
out
jl
adc
or
sbb
rcll
jns
cmp
cmc
add
fcomps
xchg
es
push
fsubl
cmpsb
xor
cmp
and
ss
loop
lret
jmp
int
adc
std
mov
push
or
in
xor
or
xchg
scas
push
jno
aad
jnp
jo
rcll
cli
das
in
dec
or
dec
inc
mov
movaps
push
adc
or
jno
mov
xor
ljmp
mov
push
push
jns
xchg
or
pop
lcall
stos
dec
movsl
lods
mov
jmp
insb
mov
data16
mov
inc
std
lahf
shr
mov
cmp
fistpll
push
es
sub
add
stos
sbb
sub
cmp
scas
sub
pop
sub
xchg
mov
mov
jns
fs
jbe
cltd
lds
dec
pop
mov
loope
push
gs
push
pop
cmc
inc
adc
add
rorl
push
mov
mov
pusha
inc
insl
mov
std
pop
mov
mov
push
aad
nop
sbb
ds
push
icebp
mov
add
xor
bound
pop
dec
ss
add
cmp
movsb
leave
xor
int
cs
mov
jno
popa
repnz
sahf
push
ret
mov
or
sbbb
loopne
clc
out
jbe
int3
aam
inc
mov
cmp
push
sub
lcall
lea
mov
popa
gs
mov
mov
xor
mov
decl
ret
adc
add
ss
pop
shr
out
and
rcll
subl
adc
lcall
mov
movswl
push
pop
nop
cmp
bound
shr
out
jae
mov
sub
jb
jmp
inc
jg
lea
xchg
aam
addl
imul
mov
lods
jmp
aas
mov
push
pop
das
mov
aad
clc
lods
cld
outsl
cmpb
mov
xchg
jp
xchg
subl
or
push
mov
cmpsl
mov
pop
pop
xor
loopne
push
mov
and
call
mov
add
pop
ss
in
dec
fdivp
fdivs
push
sarb
pop
jns
inc
sub
pop
psllq
push
or
imul
js
sbb
call
xor
inc
xor
add
pop
call
jg
jp
xchg
mov
dec
fnstsw
ret
mov
pop
dec
fucomi
mov
mov
mov
mov
xchg
ret
fidivs
jl
push
sbb
roll
push
cltd
imul
mov
jo
or
leave
leave
loopne
cmpsl
out
ja
dec
fdivrs
add
jno
and
xchg
xor
subb
shll
mov
ljmp
imul
sub
daa
push
shrb
mov
out
ret
insl
orb
stos
and
sbb
fdivrs
ret
or
jae
sub
stos
or
sub
add
or
cmpsb
xchg
cwtl
push
mov
fstsw
pop
jne
nop
in
cwtl
mov
xchg
cmc
test
iret
andw
fimuls
imull
adcl
or
xor
mov
sbb
jb
adc
pop
pushf
jo
outsb
and
lea
add
es
mov
push
xchg
fistl
xchg
xchg
cmp
sbb
mov
jnp
jg
aas
push
xor
cwtl
in
rcll
cmp
outsl
mov
sub
lahf
mov
sub
mov
push
push
fmull
in
jge
xchg
jae
mov
push
imul
mov
jns
sti
ret
cmp
add
fiaddl
cmc
jmp
sub
pop
roll
out
jp
testb
adc
pop
fimuls
cmpl
sar
push
cwtl
mov
cmpsl
push
lahf
gs
mov
xchg
insl
out
cli
pop
lock
in
jge
pushf
out
adc
sub
xchg
mov
xor
in
cmp
movb
insl
push
test
std
push
mov
lret
xor
aaa
xor
out
add
dec
loope
icebp
lods
aaa
movsl
xor
sbb
xchg
push
rclb
push
lods
mov
daa
cld
jbe
xchg
jae
inc
inc
cwtl
in
aaa
out
insl
sub
jne
adc
mov
or
mov
lahf
gs
sbb
xchg
dec
jo
push
stos
out
mov
test
stos
adc
daa
dec
pop
cwtl
data16
test
lcall
cmpsl
in
sahf
xchg
lds
jno
popf
mov
adc
dec
push
and
cmp
iret
sub
outsl
mov
adc
arpl
add
ljmp
inc
out
sti
in
or
xor
xchg
jbe
stos
rclb
loop
dec
dec
loope
jnp
push
dec
stos
dec
aam
clc
inc
pop
mov
dec
fwait
inc
cmp
dec
std
lret
mov
jns
les
ffree
out
mov
inc
sbb
mov
inc
push
mov
sbb
nop
xchg
jge
mov
outsl
inc
pop
add
out
outsl
mov
es
sahf
cmc
push
cwtl
pop
pop
lock
mov
faddp
dec
out
or
leave
xchg
cmp
enter
inc
mov
sbb
xor
faddl
adc
mov
out
pmullw
mov
ss
xor
adc
add
push
pop
int3
fstpl
dec
pop
sub
sbb
popa
mov
adc
jl
mov
out
shrb
aaa
sbb
mov
into
xlat
sub
scas
test
into
add
int
mov
sbb
add
clc
aad
insb
pop
fisubrs
popl
in
push
loope
mov
or
sub
nop
mov
int3
cs
mov
nop
rol
fwait
sbb
out
xorl
push
mov
mov
xor
test
mull
test
push
lock
popl
shl
sbb
and
push
adc
sub
add
pusha
enter
xor
cmp
mov
sub
gs
adc
lea
test
mov
lret
mov
fs
xchg
mov
inc
roll
sarl
jp
popa
clc
mov
arpl
gs
inc
sahf
imul
lods
pop
shl
xchg
push
cli
repnz
jno
lock
inc
pop
mul
pop
dec
sbbb
clc
lahf
mov
out
push
mov
mov
mov
jle
adc
add
loop
mov
lds
pop
sar
xchg
push
inc
dec
test
push
gs
bound
movsl
cmp
add
mov
iret
lret
sub
sbb
mov
bound
jle
mov
ret
enter
xchg
mov
or
jmp
cmc
cwtl
and
jle
sahf
mov
jno
and
add
add
or
cmpsl
jo
int3
mov
popa
pop
ret
addl
jbe
in
outsl
cmp
ret
xor
push
fistl
roll
cmp
enter
arpl
inc
mov
mov
pop
cmp
arpl
push
sub
mov
push
lods
out
bound
jae
aad
dec
or
ret
out
push
dec
clc
jo
daa
xor
in
mov
fldenv
imulb
pop
das
les
jle
andb
popa
xchg
lea
pop
push
lock
adc
xchg
cld
xchg
icebp
rcr
cltd
cmp
mov
or
pusha
jg
push
stc
or
lods
adcb
or
push
orb
cmpb
scas
adc
push
cmp
pop
inc
jo
adc
pop
cwtl
dec
and
and
scas
movb
movb
push
jecxz
mov
andb
mov
fnstenv
xor
shll
sub
popa
cmp
inc
sub
mov
xor
fucompp
aad
dec
mov
std
pop
gs
stos
or
test
jecxz
idivb
leave
aam
add
mov
sub
inc
xor
orb
lahf
pushf
sbb
cmp
inc
xchg
xchg
pushf
cwtl
call
mov
inc
call
push
mov
sbb
pop
add
ret
jge
outsl
sub
jge
mov
rclb
add
push
rol
lcall
dec
xchg
push
cmp
mov
cwtl
adc
push
pop
push
sub
daa
pushf
mov
repnz
fcompl
mov
sarb
add
mov
push
adc
xor
xor
add
or
pop
sub
andb
fs
adc
add
insl
int3
pop
lds
sub
xchg
cmp
mov
insb
mov
push
cmp
or
adc
and
mov
test
negb
xchg
addr16
js
outsl
jnp
and
sub
xor
inc
int3
mov
adc
mov
mov
and
cli
divb
jmp
jg
loope
xchg
loope
les
or
dec
adc
out
or
pop
mov
push
out
lds
xlat
rorl
push
jl
gs
out
push
pop
mov
pop
pushf
hlt
imul
jp
pop
adc
clc
jle
xor
jne
sbb
or
sbb
pop
mov
repz
cmp
push
fcoml
mov
cld
popf
loop
sub
cmpb
fcompl
push
push
pop
es
nop
add
aam
test
stos
stc
mov
loope
add
push
xlat
xchg
hlt
mov
add
push
stos
inc
stos
mov
adc
adc
cmc
daa
adc
mov
mov
inc
add
cli
jne
dec
and
adc
fnstcw
add
lea
lea
push
push
and
adc
popf
ds
addr16
in
push
sbb
es
cmp
pop
ds
and
outsl
loop
adc
int
leave
mov
mov
pop
les
nop
outsl
leave
ss
pop
lcall
js
lret
adc
cmp
inc
div
dec
jno
shr
ss
push
popf
in
push
aam
outsb
leave
xlat
das
fldt
jp
sahf
pop
pushf
mov
or
iret
pop
jg
jp
into
mov
jb
test
cmp
mov
es
flds
cltd
cmpsl
jb
mov
andb
mov
jmp
cltd
sar
fstl
fistps
and
movsb
cmc
imul
mov
cmp
mov
or
dec
and
ds
cld
xchg
adc
add
in
cmp
or
incb
les
push
push
test
fistl
roll
add
mov
xor
push
pop
or
aas
add
arpl
xor
inc
and
mov
adcl
inc
pop
mov
add
mov
imul
pop
push
lea
testl
sbb
push
int
and
negl
pop
or
repnz
cmp
lds
lret
in
repnz
imul
mov
stos
dec
clc
xchg
adc
dec
adc
jae
cli
cmpl
mov
pop
xchg
push
out
mov
dec
cmc
lret
arpl
xchg
ret
mov
cmp
inc
xchg
js
cmc
scas
jge
rcrb
or
adc
call
dec
stos
imul
lret
fbstp
pop
lcall
mov
jp
or
inc
cmp
xchg
enter
cmp
popa
hlt
sub
and
add
dec
pop
xchg
pop
ret
xchg
insb
scas
jecxz
ja
pop
mov
sbb
jae
add
cmp
test
push
jecxz
jge
add
pop
hlt
lods
fisubl
push
fisttpll
mov
lret
adc
pop
bound
mov
js
mov
stc
shl
jge
cmp
data16
aam
mov
pop
jmp
rolb
cmp
iret
mov
or
mov
pop
mov
adc
fs
and
mov
scas
sub
dec
add
xchg
arpl
cmc
cpuid
ucomiss
jecxz
les
add
shlb
xlat
or
lock
mov
loope
movsl
je
adc
cmpsb
popf
shl
cmpsb
jae
fdivs
adc
cmp
or
sar
cmc
push
dec
cmp
dec
mov
push
push
cmp
lret
jg
and
add
xor
pop
dec
push
sbb
xchg
xchg
cmp
movsl
xchg
sub
aas
mov
repnz
mov
rcl
xchg
dec
and
xchg
push
jb
adc
mov
sub
adc
xor
ja
mov
inc
dec
arpl
loopne
negb
jnp
inc
mov
push
pop
and
cmpsb
adc
xor
das
xchg
jbe
xor
dec
dec
leave
pop
jle
dec
fidivrl
jbe
repz
test
pop
mov
shlb
cmp
dec
scas
mov
add
out
inc
rcrl
add
push
inc
xorb
dec
ja
les
sbb
xor
xchg
xchg
repz
leave
out
call
nop
ss
sbbb
inc
add
mov
in
in
movsl
pop
mov
adc
inc
mov
mov
nop
mov
cmpb
outsb
pop
aaa
adc
ret
insl
push
mov
push
rcrb
mov
or
sahf
addl
sub
out
push
xchg
xor
xor
sub
fisubs
fiaddl
fcmovnb
mov
xor
mov
decl
and
mov
xchg
push
push
mov
lods
mov
imul
ret
lret
imul
and
inc
push
pop
ret
jp
or
mov
mov
adc
cmp
insb
js
and
arpl
mov
cmp
aad
sbb
imul
shrl
pop
push
dec
inc
xchg
pusha
fldenv
or
or
sbb
js
dec
push
int3
stos
inc
pop
xchg
add
dec
sahf
into
not
iret
mov
pop
scas
ja
dec
movsl
mov
test
jnp
pop
mov
cmp
divl
pop
and
and
push
lea
test
pop
cmpsb
outsl
lds
aaa
shrl
movsl
loope
aas
jge
mov
adc
aaa
mov
sbb
dec
test
orb
lock
test
dec
mov
add
mov
lods
sarl
outsl
fisubl
dec
jno
inc
das
popa
xor
mov
cmp
pop
xchg
in
subb
pusha
pusha
xchg
mov
arpl
fmul
pushf
pusha
orb
xor
cmp
cmp
and
aaa
sbb
sbb
mov
mov
movsb
stos
daa
inc
fucomp
lret
setbe
testl
mov
pop
js
js
lret
fdivs
cmpsb
sub
daa
cld
cmp
ret
repnz
jmp
sar
iret
rcll
xchg
xchg
push
and
mov
mov
nop
lea
add
inc
stos
lds
jb
addl
jle
xor
inc
ljmp
or
xchg
sbb
dec
ret
push
pop
lahf
jne
push
cmp
lods
xlat
lods
imul
jno
out
add
sbb
xchg
lret
sbb
and
mov
jle
inc
and
mov
cmp
out
xor
xchg
mov
jp
cli
and
into
jmp
lds
inc
pop
push
in
cmp
or
jle
mov
lahf
fs
fsubr
fmuls
push
scas
xor
roll
stos
xlat
out
loop
movsl
dec
mov
pop
push
lret
adc
push
push
test
lcall
jbe
fld
adc
push
lods
push
pusha
adc
cwtl
and
adc
push
add
jne
mov
mov
scas
mov
mov
dec
movsb
inc
call
or
push
jecxz
and
mov
mov
in
sub
push
inc
fs
jge
mov
pop
ljmp
mov
dec
mov
mov
and
dec
fisubs
shlb
aas
not
jno
insb
cmpsb
aas
sti
add
jo
idivl
sbb
xor
scas
in
jns
jp
call
rcr
scas
in
repnz
cmpsb
in
into
arpl
cmc
in
sbb
call
lret
xor
jae
mov
mov
aas
call
jmp
or
add
test
cmp
scas
pop
dec
out
xchg
int
stc
clc
out
es
jns
and
popa
cld
push
in
pushf
popa
mov
clc
imul
jg
and
push
ljmp
xchg
shlb
in
push
stc
lock
push
adc
cwtl
lret
pop
aas
add
jmp
daa
les
and
add
popf
adcb
sub
push
test
cmc
shrb
sub
shlb
cmp
mov
adc
xorb
es
cmpsb
out
or
iret
jno
in
popf
popa
out
movl
jecxz
push
jae
sarl
aas
outsb
pop
mov
xchg
fwait
negl
jg
std
jmp
and
add
mov
test
sub
inc
adc
mov
out
jge
mov
or
rorl
adc
outsl
add
dec
addr16
sbb
push
ljmp
add
sbb
nop
dec
imul
cmpsb
mov
out
lea
adc
jne
xchg
cvttps2pi
dec
jl
dec
jne
arpl
mov
sbb
and
mov
lret
jns
aad
jo
push
adc
rcrl
pop
mov
sbb
insl
jp
fistps
adc
out
xchg
or
adc
leave
sbb
xor
lods
movsl
insl
xor
sbb
imul
daa
mov
dec
xor
cmpsl
jl,pt
out
sahf
cmp
jle
rcrl
insb
jl
cmp
shl
jae
inc
mov
cld
sub
mov
add
and
mov
jl
mov
mov
dec
inc
cmpsb
cmp
jne
jns
inc
pop
adc
push
mov
xchg
mov
into
lcall
daa
loopne
and
lods
outsb
mov
ja
push
mov
imul
pop
sub
xlat
add
in
insb
dec
adc
data16
movsl
pop
mov
sbb
repnz
xchg
sub
pop
inc
arpl
int
rorl
xor
pop
xchg
mov
jg
pop
adc
clc
ret
lea
movsb
dec
in
insl
lcall
jecxz
movsl
test
add
mov
sahf
loop
pushf
xchg
test
jb
sbb
jg
dec
add
in
pop
or
pop
cmp
into
popf
jne
fmulp
inc
xchg
push
mov
lods
out
xor
es
mov
repz
add
mov
push
dec
mov
adc
xor
pop
pop
jb
in
loop
add
cmp
mov
and
cmpsb
iret
mov
mov
mov
add
adc
cmp
popf
push
das
cmc
sub
fmuls
inc
test
in
inc
je
cs
cmp
xor
pop
jns
mov
in
lcall
jo
jmp
mull
push
pop
leave
and
pop
sahf
add
mov
call
movsl
xchg
in
xchg
cmp
imul
outsb
mov
or
mov
inc
fucom
or
sub
adc
push
dec
jmp
popl
into
fstpt
fwait
outsb
mov
lods
adc
adc
leave
adc
xchg
out
add
xor
push
fidivs
call
gs
dec
in
jne
adc
rorb
pop
dec
nop
jmp
dec
call
mov
loope
cmp
imul
test
sub
mov
movsb
das
jae
aas
clc
sub
cmp
and
adc
push
lds
mov
test
pop
outsl
popf
xchg
xchg
test
mov
push
sub
int3
xor
push
fldt
data16
jl
divb
jle
add
sub
leave
mov
loop
popf
dec
pop
fwait
repnz
rcll
loop
imul
cli
call
clc
loopne
add
push
test
loopne
add
mov
mov
add
cmpsl
push
mov
jp
int3
jnp
cmp
and
dec
loopne
ljmp
sarb
outsl
and
pop
sti
cmp
cmp
xchg
lods
xor
js
adc
lock
notl
jno
leave
xor
inc
je
cmp
pop
push
jnp
jge
push
lea
adc
mov
aas
dec
jg
pop
repz
lea
push
icebp
cs
dec
add
aam
out
sub
or
mov
or
xor
mov
dec
mov
out
mov
push
ds
pop
pusha
ja
jge
repnz
push
or
add
loop
fildl
jne
out
es
mov
pop
das
xor
sarb
inc
out
and
dec
fnstenv
jmp
jle
pop
mov
dec
inc
loopne
shll
sub
mov
xchg
outsb
stc
mov
hlt
pop
dec
xor
mov
xchg
call
out
rol
clc
lods
das
cli
jle
and
jecxz
pop
dec
jp
dec
jmp
push
cmp
subb
jne
flds
cmc
lret
jp
sti
shr
es
pop
cmp
dec
pusha
push
mov
rcll
out
xchg
pop
cmpsb
adc
push
insb
mov
loop
lret
jne
int3
push
cmp
jns
fstpt
inc
in
cmpsb
mov
and
lds
jp
inc
out
ret
imul
ret
into
stos
dec
xor
mov
out
lret
and
xor
cld
imul
lret
inc
mov
insb
cs
and
cmp
push
pusha
leave
adc
out
nop
add
dec
xchg
dec
jmp
inc
sub
xchg
loope
cmp
mov
mov
and
push
stos
xor
shl
ss
cmp
mov
fnstsw
pop
fstpt
fwait
adc
in
fists
repz
sbb
sbb
aas
outsl
jge
outsb
add
imul
jmp
cmp
nop
add
push
rclb
insb
push
in
je
call
xchg
loopne
adc
aaa
mov
pop
ret
fcomp
int3
imul
sub
lret
dec
inc
fcompl
push
jne
jmp
sub
cmp
out
jl
sub
bound
sub
mov
push
sti
iret
add
je
sahf
ficoml
mov
mov
dec
test
rol
in
xlat
mov
pusha
aaa
push
outsb
test
push
call
xor
out
sub
jb
or
mov
ss
pop
cli
lea
shl
cmp
sbb
lock
clc
xchg
jns
mov
sub
push
gs
out
orb
rolb
lcall
or
out
jno
sbb
or
shlb
sub
xorb
stos
sbb
jge
lods
dec
mov
shlb
pop
ror
or
inc
add
xor
icebp
test
lods
stos
bound
in
mov
mov
test
scas
insl
xor
pushf
add
or
xchg
aad
gs
pop
mov
jo
xlat
in
mov
xchg
jae
and
cld
mov
cs
adc
add
nop
in
inc
mov
pop
rorb
aam
outsb
jbe
add
sub
movsl
mov
lods
xor
pop
inc
scas
push
push
testb
enter
ljmp
cmp
addl
sbb
push
xchg
jle
loop
adc
pop
in
fnsave
stos
lahf
pop
sbb
pop
jp
add
push
outsb
pushf
sbb
xor
mov
cmp
mov
out
xor
popa
es
lcall
pop
push
es
mov
xor
shrl
lock
lret
stos
in
jbe
pop
dec
int3
les
out
mov
rclb
inc
push
jnp
dec
testb
xor
xchg
cs
aad
negb
dec
shlb
out
mov
cmp
xchg
nop
in
push
pop
cs
pop
cmpsb
cmp
pop
adc
cld
es
cmc
ficoml
cmp
fs
test
xchg
xchg
jg
aaa
cmp
pop
aas
pop
lods
das
cmp
and
cmp
mov
cmc
lcall
cmp
or
mov
jp
cmp
mov
adc
mov
outsl
int3
sbb
psllw
adc
test
in
arpl
sub
sbb
cmovb
lds
cmc
inc
xor
test
inc
push
jecxz
stos
and
aam
jg
bound
dec
pop
popf
cmp
test
addr16
imul
xchg
xlat
das
std
pop
stos
jne
int
jmp
jge
imul
lcall
mov
popf
leave
mov
mov
div
inc
sub
xor
cmp
in
adc
sarl
sbb
pop
pop
jge
or
ret
pop
jl
xchg
xor
mov
dec
add
int
hlt
fwait
inc
pop
es
mov
mov
mov
mov
outsb
push
imul
xor
sbb
das
cwtl
incl
and
sahf
push
xchg
cld
jno
fs
in
arpl
pop
or
xor
adc
and
stos
sbb
les
sbb
cmp
lret
push
push
out
aam
jmp
pop
outsb
hlt
ljmp
cmp
xchg
lods
add
mov
and
pop
test
scas
push
cmp
mov
lds
xor
sbb
pop
xor
adc
jl
mov
pusha
int
lret
adc
fimull
shl
and
shl
mov
out
jbe
fildll
cmc
mov
shrb
pop
loope
cmp
lods
cli
clc
out
sbbb
jmp
xor
ss
sbb
daa
fcomps
inc
sub
lods
rcll
sbb
popa
add
popa
inc
out
jecxz
clc
mov
or
adc
cwtl
ds
adc
or
dec
aad
sti
pop
imul
lret
out
lahf
cmp
aam
int3
rolb
cmp
inc
lods
daa
iret
jo
pop
les
ss
jl
shrb
pop
cmc
mov
rolb
sub
xchg
rcrb
xorl
out
mov
imul
sbb
jne
push
ret
mov
cld
mov
adc
aam
mov
push
pop
cmpsl
mov
lret
loopne
out
cmp
negl
dec
aam
arpl
inc
sub
int3
xchg
pushf
jns
and
loope
push
outsb
fsubs
add
cmp
add
shrb
fcmovnu
popf
shld
cmpsb
and
scas
sbb
pop
cli
cmp
sbb
add
ljmp
xchg
adc
jne
xor
jno
into
loope
xchg
outsb
sti
ljmp
jge
xor
ljmp
sub
je
fucomip
sbb
das
pop
orb
jno
aaa
sarl
ret
pop
inc
scas
push
test
xchg
in
fs
cmp
cmc
sub
jae
xchg
and
lods
push
into
in
aaa
lea
testb
sahf
pop
lret
pop
mov
xor
xorl
sbb
xor
mov
in
mov
or
in
shl
xchg
lret
das
xor
and
mov
js
inc
or
lret
les
add
inc
sub
ret
sub
dec
stos
es
jb
hlt
mov
cli
hlt
cmp
cld
push
mov
sti
and
ja
inc
mov
xor
ss
punpckhdq
lahf
pop
xchg
fldt
imul
add
andl
scas
mov
pop
es
pop
jae
clc
mov
xchg
pop
ret
xchg
push
out
cmpsl
cltd
mov
pop
call
push
jle
js
aaa
adc
nop
push
ret
inc
pusha
sbb
lods
ljmp
divb
aas
push
pop
cld
in
and
and
xlat
add
jo
je
filds
dec
shlb
lods
std
jecxz
cmp
mov
andl
add
fdivr
hlt
sahf
cmc
in
inc
jae
xchg
push
insl
gs
dec
inc
rorb
jae
pushf
xor
outsl
cmovp
jno
adc
cs
sarl
mov
lock
cmp
in
mov
sbb
adc
mov
movsl
pop
xchg
mov
jbe
mov
aas
xchg
inc
lods
jge
xchg
inc
rcrb
mov
inc
sub
and
mov
daa
mov
lcall
outsl
mov
pusha
push
inc
sub
div
sbb
sub
xchg
push
sarb
cs
daa
add
xchg
pop
jecxz
pushf
xchg
es
sbb
popa
pop
pop
adc
push
out
sahf
ret
add
repz
out
enter
arpl
mov
and
fsts
iret
push
xchg
rcll
and
pop
add
test
popa
xor
mov
push
jns
xchg
cmp
es
loope
enter
insb
jnp
out
sbb
push
fimuls
push
out
loop
adc
jnp
or
push
sbb
loope
adc
inc
jl
cmc
and
push
hlt
dec
mov
jo
inc
inc
lds
or
inc
aad
jge
adc
mov
pop
jp
inc
out
jbe
out
lock
scas
sbb
push
popf
sbb
or
xor
lret
fcom
xchg
rcl
jne
jne
andl
cmp
mov
and
pop
cltd
data16
iret
sbb
jl
cltd
push
or
adc
sbb
in
cld
mov
fs
inc
mov
dec
mov
out
mov
add
mov
push
data16
push
dec
mov
mov
cltd
mov
cmp
sarl
fsubrl
jle
leave
jne
fisubs
sarl
test
add
cld
repz
adc
mov
cwtl
pop
packssdw
adc
sbb
bound
int3
ds
cmpsb
out
ljmp
sbb
push
mov
push
mov
jl
stos
lahf
stc
mov
mov
in
mov
add
add
imul
pop
fildl
pop
mov
fwait
pushf
lods
push
mov
cmpsl
sbb
xchg
inc
out
push
or
ds
add
mov
mov
sbb
dec
push
es
test
aad
daa
dec
jbe
jno
lods
lret
cmc
ljmp
push
dec
test
cmp
push
mov
xor
hlt
and
cmpsl
popl
ret
and
jo
or
mov
sbb
dec
loop
sbb
movsb
add
push
mov
push
insb
pop
pushf
out
jne
push
js
test
bound
or
cmp
lret
mov
dec
add
std
push
xchg
mov
mov
pop
rdpmc
scas
sub
sbb
cltd
jg
mov
notb
jmp
pop
add
or
mov
fwait
inc
clc
inc
lea
leave
hlt
jge
pop
and
jae
pop
in
and
mov
push
pop
call
pcmpgtw
out
clc
push
mov
cli
adc
imul
movsb
out
shl
repz
out
ret
xor
dec
out
push
dec
push
hlt
in
jp
subb
mov
dec
cltd
adc
xchg
add
sbb
jbe
mov
jg
sbb
mov
adc
push
data16
pop
pop
repnz
insl
mov
or
pusha
and
sti
scas
dec
push
sub
rcrl
push
dec
and
jbe
rcrb
iret
push
lret
stos
add
outsb
mov
lcall
cltd
fwait
in
push
repz
xor
movsb
inc
pop
mov
sbb
sbb
adc
outsl
lods
lret
jle
adc
fsub
rorl
popa
cwtl
mov
out
test
push
aam
xor
es
inc
xchg
mov
fwait
addr16
cmp
in
jp
out
push
jmp
jg
das
cmp
xchg
sahf
or
cmp
in
mov
sbb
arpl
pop
stos
dec
xor
pop
lock
fs
cltd
fistpll
aas
sbb
xchg
adc
jbe
cmpsb
stc
mov
mov
pop
cmp
sub
aaa
out
mov
out
lods
xlat
inc
adc
push
mov
scas
in
data16
pop
cmp
fxch
aad
xchg
nop
push
or
or
lds
sbb
arpl
divb
out
add
inc
les
std
dec
dec
mov
dec
sub
loop
push
push
xchg
mov
cmp
data16
out
std
mov
jno
popa
mov
or
scas
or
loopne
lock
cmpsb
loop
into
inc
pop
or
mov
shll
aaa
adc
shlb
popf
pop
sahf
adc
sub
mov
jbe
mov
test
push
mov
adc
je
dec
sub
imul
mov
cmp
mov
sub
mov
in
adc
pop
add
jge
xor
aam
repz
dec
sbb
jp
imul
cwtl
inc
sbb
jecxz
or
aam
mov
and
fwait
addr16
gs
leave
fistpl
mov
xor
divb
pop
cli
cmc
sbb
xor
out
out
into
sbb
lock
jp
pop
repnz
sbb
and
mov
adc
inc
je
push
xchg
or
iret
jmp
paddb
adc
cmpsl
dec
dec
mov
mov
xor
int
aad
push
add
pop
je
repnz
pop
cltd
vunpckhps
jmp
out
push
jae
sbb
lods
mov
loopne
mov
testb
push
mov
jle
push
pushf
cmp
bound
leave
out
fcoms
xchg
in
inc
fildll
out
out
jae
clc
xchg
pop
xchg
mov
inc
cltd
rorb
inc
lods
mov
mov
adc
jno
stos
jae
sarl
scas
add
popl
push
sbb
push
stos
adc
adc
xchg
dec
jmp
mov
jbe
push
adc
bound
xor
out
fmull
aad
hlt
xchg
inc
sbb
lea
lods
dec
into
into
lea
pop
insl
mov
mov
pop
enter
out
xchg
out
add
sub
cld
mov
aas
sub
xor
ret
cmpsb
sbbl
and
mov
add
or
call
popf
mov
add
jb
inc
stos
jmp
scas
call
sub
in
push
bound
dec
push
roll
adc
jo
pop
dec
into
orb
mov
sbb
jle
and
xchg
inc
jns
and
xor
mov
xor
mov
out
xor
movb
fstpl
stc
in
cli
cmp
jae
dec
xchg
insl
xchg
mov
ss
push
movsl
jbe
lds
xchg
jae
pop
mov
ret
push
jo
jbe
addr16
jge
and
adc
cltd
and
enter
inc
aad
orb
push
push
movsl
fidivs
pop
sbbl
jne
pop
mov
inc
xor
dec
xchg
gs
fwait
jns
mov
mov
xor
out
dec
push
inc
cld
clc
pop
sub
sub
imul
lcall
lock
movsb
cmp
jp
pushf
out
mov
shll
pop
jb
and
icebp
pop
roll
push
dec
mov
scas
and
int3
sbb
mov
pop
mov
add
out
notb
test
mov
cmpsl
fs
je
fldl
sbb
shr
int3
loopne
cmpsb
test
repnz
stos
add
movsl
mov
cli
int3
popa
pop
inc
or
add
xchg
out
and
inc
insb
push
xor
or
sub
push
stos
mov
and
ss
and
push
jge
cltd
sub
cmpsb
inc
cmp
adc
scas
cmp
sarb
nop
inc
sub
mov
push
cmp
sbb
out
xchg
stos
sbb
rcr
clc
mov
mov
hlt
leave
dec
adc
sbb
int
cli
mov
push
or
outsb
add
imul
ljmp
pop
fnstsw
mov
aam
test
mov
cmp
outsl
xlat
bound
dec
pop
mov
gs
imul
data16
dec
test
cmp
and
dec
or
fistpl
test
inc
add
push
into
mov
xchg
shll
push
loop
lsl
mov
orl
std
or
loopne
push
pop
aas
xor
mov
out
stos
sbb
sub
jge
inc
lods
mov
mov
jp
mov
dec
shr
cli
or
dec
add
xor
ljmp
leave
xor
mov
cmp
inc
jmp
mov
sbb
push
nop
popf
ret
sahf
insb
pop
test
xor
sub
shrb
mov
mov
xor
fnstcw
outsb
rolb
push
add
imul
mov
lods
sahf
push
cmp
imul
pop
mov
lea
subl
push
mov
les
test
pop
test
dec
mov
popa
iret
in
das
mov
xchg
xchg
add
mov
ja
mov
or
test
mov
pop
sti
stc
ja
jb
inc
out
or
xlat
push
push
or
faddl
pushf
outsb
xchg
pusha
arpl
loopne
daa
and
imul
pusha
jge
insl
sub
cmpsb
mov
xchg
lret
ja
int3
add
rcrl
dec
outsl
das
push
dec
cmp
lret
int
ret
pop
iret
sti
test
fs
incl
fldlg2
inc
cmp
jecxz
jp
pop
add
mov
sbb
pop
das
out
leave
inc
adc
pop
and
jp
inc
add
leave
lods
stc
inc
enter
lds
cwtl
fsubrs
jmp
lods
and
sbb
sbb
add
ja
jo
imul
lock
sub
rol
xchg
or
arpl
andb
repz
lock
lcall
lcall
xchg
clc
outsb
insl
jl
fsts
inc
dec
loope
shlb
das
dec
xchg
adc
dec
push
stos
xor
xchg
inc
ret
adc
mov
jb
push
pop
adc
cmp
jecxz
imul
lahf
push
repnz
jbe
lret
adc
and
sbb
enter
imul
push
aad
outsb
jg
push
daa
lds
jb
jnp
outsb
mov
dec
push
adc
in
lahf
testl
jge
mov
and
mov
fcomi
xor
iret
push
movsb
dec
cwtl
sarl
icebp
das
push
in
popa
fldcw
test
pop
adc
aaa
arpl
jbe
leave
mov
cmc
inc
push
popf
jb
xchg
addr16
fmul
push
mov
xchg
jne
mov
popf
or
cmpl
cmpsb
into
xchg
ret
adc
rclb
adc
lahf
ss
out
daa
shrl
je
adc
sub
or
outsb
pop
cmp
ror
mov
sub
not
xor
mov
xchg
xchg
mov
add
movsb
pop
out
pop
imul
inc
xor
xchg
lock
test
dec
imul
iret
dec
rol
stos
sbb
stc
pop
mov
add
dec
fisubrl
add
lock
fwait
sti
xchg
xchg
xor
mov
cmpsl
loope
dec
pop
orb
jg
push
or
pop
adc
out
sbb
xorb
add
sub
inc
sbb
inc
imul
add
push
pop
cmp
jbe
xor
out
repz
sub
test
hlt
xchg
into
daa
and
mov
push
std
sub
pop
xlat
imul
or
adc
mov
and
push
sub
cmp
push
cmpsl
jp
dec
fs
aas
pop
stos
sbb
aam
xchg
push
cmpsl
mov
fsin
out
popf
sub
je
dec
mov
mov
mov
push
pop
push
inc
pop
js
add
arpl
adc
cmp
jns
lea
ret
xchg
push
mov
push
loope
mov
pop
roll
xchg
adc
mov
sub
lds
mov
test
decl
fcmovnu
dec
mov
adc
add
add
mov
or
mov
das
icebp
repnz
stos
and
push
fldt
inc
cmp
inc
icebp
into
pop
insb
push
cmp
or
insb
dec
cmp
movsb
sub
adc
out
arpl
popa
push
sub
mov
imul
pushf
bound
ss
cmp
or
loopne
xor
inc
mov
and
push
sbb
mov
cmp
inc
push
inc
fwait
mov
enter
stc
lods
lds
imulb
adc
negb
cmpsl
push
cld
xchg
enter
sub
test
pop
jmp
arpl
test
cwtl
out
mov
dec
xchg
cmpsl
arpl
hlt
sbb
out
fwait
test
sbb
cltd
jmp
pop
test
dec
xchg
scas
ja
sbb
dec
dec
xchg
cmpsb
aas
popa
mov
ret
mov
mov
xor
xchg
cmp
movnti
jecxz
imul
cmp
cmp
add
dec
adc
fbld
andl
das
cs
gs
mov
pop
push
sub
sub
xchg
out
cli
jno
testb
dec
das
jecxz
fiadds
sarl
push
inc
sbb
sbb
aas
icebp
cs
jecxz
in
mov
adc
pop
jnp
subl
lret
ljmp
jle
xor
arpl
and
pop
sbb
push
mov
jl
lret
ds
mov
cmp
push
mov
out
imul
add
sbb
sbb
pop
push
popa
insb
xchg
pop
jne
jb
out
cli
lcall
dec
cmp
mov
cmp
cmp
pop
cmp
jecxz
ret
adc
mov
test
fwait
mov
rorl
sbb
mov
xchg
xchg
push
popf
cltd
mov
imul
aas
iret
push
test
aas
jmp
xor
les
jge
nop
cltd
stos
mov
or
and
into
rcrl
scas
pop
fstl
cmpb
fstl
imul
cltd
xchg
leave
mov
push
cmpb
add
insl
add
popf
test
xchg
dec
imul
nop
xchg
xor
in
fsub
cmp
mov
pop
pusha
mov
push
in
daa
adc
mov
mov
stos
lcall
dec
stc
cmp
jne
mov
into
jge
cmpsb
cs
lret
and
rclb
jmp
dec
rcrl
pop
add
scas
mov
mov
inc
int3
clc
int
stos
lods
jle
nop
adcl
sbb
pusha
add
negb
dec
movsl
jle
lods
mov
sub
xchg
pop
xlat
xor
jae
aad
jmp
cmpsb
shll
push
jne
rcrb
jne
pop
icebp
jecxz
dec
scas
mov
mov
fstl
ror
adc
mov
jl
adc
dec
pop
push
int
push
lock
mov
aam
dec
mov
shl
test
fldt
pop
fildll
jae
adc
mov
imul
push
adc
xor
sbb
shll
xchg
adc
shl
sarl
inc
add
stc
inc
stos
cmp
stc
leave
packsswb
inc
sub
fnsave
and
jmp
xor
jge
mov
jmp
xchg
jle
pop
pop
cmpl
je
in
decl
ficompl
jnp
daa
nop
xchg
and
cld
push
fdivs
bound
mov
adc
andb
xorb
and
ljmp
dec
scas
sbb
mov
lret
add
stos
xchg
inc
rclb
adc
mov
subl
cmp
push
jmp
sbb
sub
bound
stc
fwait
xchg
shl
add
pop
pop
mov
push
sub
scas
sbb
mov
aaa
push
lods
adc
nop
push
pop
int
insb
xadd
jb
fwait
gs
jmp
fsts
loop
movsb
fnstsw
mov
lea
inc
pop
or
mov
add
cmpsb
and
sub
enter
testl
jecxz
dec
jmp
sahf
push
inc
sub
sub
jne
pop
rorl
sub
cvttps2pi
loope
mov
sarb
sub
and
idivl
inc
add
add
mov
in
push
inc
aam
push
mov
sbb
fisttpll
jl
or
jge
inc
jle
icebp
shlb
mov
mov
mov
fmull
jg
outsl
js
rclb
jg
shlb
mov
std
push
push
bound
pop
or
dec
lds
xor
cmc
outsb
scas
loop
mov
imul
repz
push
enter
sub
sub
adc
and
shr
rclb
fldcw
xor
hlt
lods
scas
out
xchg
inc
jg
cltd
cmp
fstl
pop
lret
loope
sbb
in
aaa
int3
sub
aad
orl
movsl
xchg
mov
aam
push
jecxz
loop
jmp
or
aam
add
movsb
or
out
push
jbe
in
sub
cmp
aam
sub
jb
data16
ret
test
mov
cli
es
std
cmp
pop
out
fs
push
adc
faddp
jb
or
xlat
or
cmp
cmp
mov
out
cmp
cmp
inc
into
decb
mov
pop
scas
iret
xor
js
stos
subb
fsub
rcl
mov
xor
aad
push
pop
inc
insl
shrb
mov
dec
in
addb
pop
cmc
mov
mov
lods
in
scas
xchg
push
repz
xchg
dec
insl
mov
fnstsw
dec
jmp
adc
out
les
or
aam
repz
loop
pop
data16
mov
push
adc
mov
mov
pop
lret
and
dec
dec
or
cmp
jmp
ljmp
aaa
pop
mov
xchg
notb
or
lcall
sbb
push
mov
mov
pop
mov
dec
jae
rcll
push
mov
mov
cmp
pop
xchg
lods
mov
mov
adc
icebp
stc
push
in
leave
adc
out
sub
cwtl
mov
add
push
push
arpl
mov
test
inc
pop
cmpsl
mov
mov
and
popf
je
xchg
insb
outsb
mov
inc
pop
inc
popa
loope
mov
out
sti
pop
adc
ror
add
int
lret
pushf
ret
mov
and
ret
pushf
xchg
pop
loopne
add
or
jae
sahf
mov
add
jbe
ljmp
fldt
jnp
dec
mov
lret
movsb
iret
jg
xchg
out
mov
orb
in
xor
pop
in
popf
sub
outsl
xor
pop
repnz
lods
lock
imul
inc
cmp
movsb
movsb
xor
push
pop
dec
adc
aaa
les
xchg
loopne
cmp
xchg
scas
sub
in
arpl
or
iret
jo
test
cld
xor
pusha
test
inc
xchg
pop
cmpsl
mov
jbe
jne
nop
push
test
jecxz
lahf
adc
add
push
pop
jne,pt
xchg
repz
loop
test
mov
enter
push
xchg
pop
cmc
pushf
mov
aad
push
xchg
adc
outsb
dec
cli
cmp
std
sbb
ds
popa
mov
shll
sbb
dec
cmp
xchg
notb
cs
sahf
jp
xchg
pop
idivb
cmpsl
pop
dec
iret
mov
mov
add
sbb
jbe
xchg
mov
adc
popl
mov
xchg
les
sub
js
aas
inc
add
pusha
dec
add
fldcw
cli
out
rcll
jno
inc
or
test
pusha
dec
test
cmpsb
movsb
inc
ljmp
scas
mov
orb
mov
push
dec
movsl
inc
aad
jge
mov
mov
sbb
pop
notb
adcl
fisubrl
fmuls
mov
lret
stos
repz
bound
movsb
add
mov
cs
pop
stos
pusha
jg,pn
scas
jp
push
add
mov
jne
mov
incb
inc
xchg
push
sbb
push
mov
leave
add
sub
in
lahf
outsb
pop
mov
xchg
inc
lahf
fs
pop
jg
sbb
mov
xchg
pop
push
fstp
fmull
sub
je
jnp
sbb
push
cmp
data16
sbb
dec
testb
clc
pop
pop
sub
test
pop
fsubrs
arpl
xor
or
mov
jnp
cmp
jecxz
stos
pop
xor
imul
mov
popf
fdivrl
arpl
adc
cmc
data16
jmp
divl
cmpsb
aam
pusha
xchg
adc
mov
push
jns
cltd
xchg
mov
aaa
cmpsb
push
sub
jno
jmp
cmpsb
adcb
mov
jns
cwtl
into
jb
sub
lahf
je
cs
cld
out
and
shll
jbe
mov
pop
stos
lret
stc
inc
dec
inc
flds
cmp
cmp
outsb
jle
lcall
pop
arpl
dec
xchg
rcll
lret
clc
les
xchg
pop
cmp
mov
adc
mov
test
jmp
push
sbb
shlb
pop
mull
pop
or
sbb
pushf
jnp
out
mov
inc
sub
push
test
fcompl
or
fbld
pop
popf
or
cmpsl
addr16
test
stos
clc
fcoml
enter
in
ljmp
jge
test
adc
jnp
inc
jmp
mov
stos
pop
xor
pushf
dec
pop
lds
sub
icebp
sbb
adc
pushf
stos
inc
in
cmp
and
stc
xchg
mov
shlb
push
xchg
gs
xchg
scas
arpl
jge
push
xchg
xchg
cmpsb
scas
popa
add
or
jbe
testb
fs
imulb
dec
ficoml
fldl
lods
out
jl,pt
das
lret
ret
and
or
dec
cmp
out
pop
gs
mov
and
push
outsl
xchg
mov
movsl
xchg
mov
pop
dec
mov
rorb
push
shll
xchg
add
sbb
cmpb
pop
sbb
cmp
add
iret
leave
ljmp
fcomps
in
jb
inc
mov
sbb
in
subl
js
and
pop
clc
dec
mov
push
dec
mov
pop
dec
mov
xchg
jg
shrb
outsl
shlb
lahf
inc
mov
xchg
insb
rorb
inc
mov
fidivrl
inc
lcall
sub
sbb
mov
fwait
cmp
mov
int
add
mov
push
cwtl
bound
xor
out
insl
adc
imull
fstps
xchg
mov
cmpsb
idivb
cmp
adc
test
mov
jp
and
push
and
in
push
subb
push
repz
popa
mov
and
push
sub
mov
ja
or
bound
sbb
or
jne
test
jb
int3
movsb
and
sub
aam
cld
cli
push
insl
test
or
cmp
ucomiss
sub
push
mov
mov
outsl
lods
shrl
push
mov
adc
pop
aaa
test
sbb
scas
paddusb
sub
adc
xchg
into
imul
add
nop
push
sbb
dec
icebp
push
repz
cli
mov
scas
bound
jb
dec
push
in
pop
test
jecxz
xor
das
pop
out
lods
pop
sub
mov
insb
or
sbb
popl
out
and
or
fdiv
add
xchg
jno
dec
mov
mov
xchg
cmp
popf
dec
and
jmp
es
pop
insb
and
cmp
pop
or
cmp
sbb
jp
mov
enter
fwait
lret
jle
daa
cmp
cmpsl
and
push
stos
les
mov
lcall
imul
jle
mov
adcl
gs
cli
pop
call
jp
aaa
cwtl
push
push
rcll
mov
fcmovnb
push
mov
push
repz
sub
out
and
push
inc
cs
mov
xchg
sbb
incb
xchg
cmp
xlat
nop
mov
mov
std
in
sbb
jnp
fisubrl
push
xchg
pop
xchg
xchg
test
adc
mov
sbb
in
jecxz
insb
mov
mov
and
dec
mov
xchg
xchg
aam
lea
shrl
mov
in
ja
pop
mov
aas
jl
or
and
xchg
or
test
add
pop
shrl
dec
call
push
adc
ds
decl
inc
jns
cmp
shl
fs
mov
test
mov
lcall
insl
popa
mov
daa
cld
and
and
out
outsb
imul
gs
fsubr
and
rolb
xchg
inc
movlhps
add
pop
xor
test
or
and
inc
pushf
sti
fwait
jnp
mov
cli
add
aad
sahf
dec
cmp
sub
and
rorb
das
adc
lods
shl
xor
rcrb
rcll
xor
out
cltd
and
jo
repnz
out
sahf
sub
cs
dec
inc
stos
aad
repz
and
jl
xchg
mov
stos
inc
and
push
mov
lods
mov
dec
fmul
sbb
loop
jae
out
int3
sbb
mov
cmp
test
jecxz
mov
gs
jl
fldenv
mov
xchg
in
jp
dec
call
mov
and
push
pop
in
mov
cmp
icebp
or
mov
xchg
adc
stos
loop
pushf
icebp
or
daa
and
xor
js
sahf
cli
mov
mov
test
pop
xor
mov
pop
mulb
popa
inc
mov
sbb
lea
faddl
mov
inc
pop
bound
or
jle
mov
pop
dec
ljmp
mov
and
repz
rcll
pop
inc
jecxz
push
dec
lods
jge
fdivp
movsl
push
dec
mov
and
out
cmp
push
out
pusha
lods
fwait
lret
push
cmp
dec
outsl
pop
int
aad
insb
xchg
dec
adc
dec
add
movsb
sub
cwtl
mov
inc
or
mov
sbb
adc
cmp
cli
stos
cmpsl
xorl
and
mov
into
inc
jmp
das
mov
jno
add
and
sbb
fcmove
bound
xor
fxtract
daa
inc
mov
fs
push
pushf
sub
mov
in
dec
sub
sbb
or
rorl
out
xor
xor
pop
aad
fwait
and
xor
mov
mov
xchg
mov
xchg
add
out
sbb
inc
push
test
add
js
or
or
inc
iret
mov
and
and
sbb
sbb
mov
xchg
mov
jo
mov
in
cmc
pop
out
int3
push
int
mov
pop
mov
sti
imul
adcb
popa
ret
inc
pop
leave
cwtl
cwtl
jns
mov
add
jp
cs
sbb
lcall
rcr
xor
movsl
insl
les
inc
pop
cli
movsb
pop
push
int3
mov
mov
jge
mov
mov
mov
int
decl
push
push
xchg
add
xchg
pop
scas
pop
push
je
ret
lods
mov
pop
pushf
fisubrs
jbe
jnp
int3
testl
pusha
jb
outsb
ds
test
rclb
dec
fidivl
int
rcr
jbe
jb
call
repz
xchg
jbe
aaa
mov
aad
stc
popf
cmp
inc
xor
dec
fsubs
lock
cmp
std
xor
adc
sarb
test
ret
nop
dec
das
fdivs
fidivrl
inc
cli
xor
mov
mov
aad
mov
mov
fists
jb
testb
jae
push
rclb
iret
jle
mov
test
sub
negb
outsl
pop
sub
jb
xor
loop
push
push
call
stos
jmp
lret
popf
movsb
sub
lret
mov
mov
scas
pop
sbb
mov
aas
imul
scas
sbb
subb
out
cli
fimull
shr
shl
insb
jle
cmpb
push
stc
mov
jl
mov
add
lock
mov
cmp
mov
push
mov
inc
out
daa
sub
mov
loopne
mov
loop
mul
icebp
fisubs
adc
lret
dec
cld
sbb
into
push
sub
xlat
mov
movd
sarl
pop
or
inc
pop
enter
pop
and
add
jge
cmc
rcr
xchg
repz
mov
xor
jnp
in
iret
shrd
insb
inc
outsl
cmp
aas
repz
push
jnp
sbb
xchg
in
xchg
push
cmpsb
repnz
push
lcall
test
or
push
mov
ljmp
scas
ss
sub
xchg
cmp
push
sbb
cmp
jb
roll
inc
sub
je
out
popf
cmpsb
icebp
adc
aas
and
fwait
shrl
jbe
clc
add
stos
roll
lods
sahf
ja
mov
cmc
test
cld
sbb
js
xchg
popl
in
shrl
scas
loopne
cltd
adc
sti
jb
adc
add
and
insb
or
icebp
add
xchg
sub
mov
push
adc
sahf
popf
js
int
fwait
mov
push
mov
and
dec
fsubrs
jno
dec
adcb
inc
cld
test
mov
ds
sub
test
push
and
jg
xor
dec
loope
and
mov
inc
sarb
mov
movsl
das
rcrl
test
add
loopne
sarl
sbbl
icebp
push
shll
lret
push
insb
cmp
nop
pop
push
mov
cmpsl
test
ret
es
mov
lock
enter
xchg
inc
iret
repz
dec
scas
mov
cmp
movsl
bsr
aam
dec
jns
push
nop
js
mov
mov
stos
loopne
push
add
xchg
add
or
or
inc
mov
les
jmp
pop
lds
xor
test
mov
es
inc
xchg
nop
mov
xchg
es
mov
in
imul
popf
xchg
xor
aam
int3
ret
stc
xchg
mov
cmc
aaa
cli
jmp
cmp
xor
sar
in
ret
cltd
loope
fwait
xor
sahf
dec
xchg
fdivrp
dec
push
in
std
test
add
out
add
outsl
xchg
shl
mov
add
inc
daa
fadd
or
jle
enter
mov
jne
stos
neg
and
sub
sub
add
mov
inc
or
jecxz
mov
sbb
divl
dec
in
icebp
loop
xchg
repz
lcall
imul
cmpsb
push
push
ret
pop
sub
cltd
rorl
inc
ret
iret
mul
rorb
xchg
and
adc
and
xchg
dec
imul
rol
push
xchg
mov
push
ret
mov
enter
ss
cmp
mov
aam
aam
es
outsb
leave
rcrl
inc
xchg
pop
sub
ljmp
into
dec
and
dec
push
fs
pop
js
pushf
outsl
jmp
aaa
pop
xchg
mov
ljmp
push
adc
pop
xor
xchg
adcl
fdivrs
fdivl
dec
add
pusha
inc
js
sar
aaa
mov
push
adc
mov
pop
mov
mov
sbb
jge,pn
add
mov
repz
dec
sbb
enter
fbstp
aam
xchg
repz
dec
aaa
lods
aad
jg
mov
mov
out
shlb
fcoml
into
xchg
mov
dec
push
mov
mov
lods
and
pop
shl
jae
aam
mov
jmp
sub
mov
insb
or
pop
out
pop
dec
lods
in
mov
mov
outsl
mov
arpl
jg
or
outsb
pushf
cmp
mov
jp
lcall
cmp
fidivs
xchg
nop
aam
int
pop
pop
popf
xchg
popf
cmp
cmp
mov
sarl
popa
lret
jo
into
jmp
sbb
cs
aas
or
loop
sbb
mov
mov
mov
pop
or
or
shrb
testl
mov
mov
stos
xor
out
inc
and
testb
ljmp
xchg
inc
sub
add
sbbl
jecxz
ficomps
mov
ljmp
push
or
inc
sub
lcall
inc
pop
ja
rolb
pop
iret
inc
mov
xchg
call
and
add
mov
addb
movsb
mov
xor
xchg
jb
xchg
imul
cmpsb
dec
mov
int3
push
push
push
or
jne
mov
cmp
or
ret
mov
repz
jg
sti
out
mov
andb
pmullw
jo
mov
inc
ljmp
adc
shll
add
mov
mov
fsubs
ficoms
imul
cmp
in
or
out
push
pop
jnp
jp
mov
cltd
int
sarb
dec
mov
sbb
cmp
fbld
dec
daa
ficoms
lods
add
mov
mov
add
fists
inc
mov
mov
mov
sti
add
jb
fadd
pop
or
in
and
mov
jnp
je
fsubrp
dec
pop
std
push
gs
fistpll
call
mov
and
xchg
es
fisttpl
cmp
cli
aaa
pop
or
insb
repz
frstor
pop
orl
cli
adc
lahf
push
pop
xor
xlat
mov
xor
imul
in
push
stc
add
jle
outsb
xchg
adc
pop
mov
in
lea
or
test
ss
and
pop
pusha
mov
jne
xlat
jg
mov
push
inc
test
test
daa
pop
mov
lods
push
xchg
aas
jecxz
fidivl
popf
mov
push
xchg
xor
mov
jge
push
les
and
jne
mov
add
jns
cld
or
sub
and
xchg
and
cmp
pop
inc
inc
pushf
hlt
adcl
xlat
and
add
enter
ja
sbb
test
mov
add
cmp
je
sbb
jne
fdivl
enter
or
sbb
flds
andb
or
add
jmp
mov
push
fsub
bound
push
push
mov
mov
jno
push
xchg
jb
jecxz
neg
jge
pop
sub
ds
leave
sti
mov
cmp
pop
adc
inc
daa
dec
pop
inc
loopne
cs
aad
xchg
push
sbb
jae
sbb
fdivrs
movsb
jge
pop
call
xor
mov
xchg
in
aam
nop
and
push
mov
sub
jmp
pushf
push
mov
in
lods
das
and
nop
inc
icebp
pop
push
pop
dec
sahf
sub
or
mov
lods
das
inc
pop
ss
lcall
stos
pop
jle
jb
roll
inc
inc
jo
repnz
mov
xorl
cmp
addr16
enter
inc
data16
mov
inc
ljmp
mov
out
add
data16
mov
dec
jge
movsb
daa
cmc
lods
cmp
adc
or
jnp
lcall
insb
inc
sarl
pop
jno
mov
xor
fwait
sahf
mov
out
cmp
daa
mov
repnz
cs
or
lahf
std
push
push
add
mov
cs
ljmp
sub
mov
add
jo
mov
pusha
add
scas
idivb
ret
std
negl
icebp
cmpsl
rcrl
dec
insb
loope
cld
and
ds
das
mov
idivl
xorb
icebp
shrb
aas
push
and
mov
pop
dec
dec
std
or
inc
stos
sti
ret
in
jle
pop
and
dec
into
pop
call
and
stos
pop
ret
adc
lock
sahf
xor
xor
lods
icebp
jbe
sub
jp
sub
cmpsb
adc
jbe
fwait
xlat
aad
push
mov
aaa
imul
jcxz
jae
ds
dec
jo
pop
add
mov
das
add
dec
jno
insb
dec
in
sbb
aas
pop
sub
inc
and
std
or
sub
dec
and
mov
or
push
push
lret
add
lcall
fwait
test
cli
bnd
pop
f2xm1
cmp
cmpl
movsl
cmc
nop
push
pop
in
add
out
in
fnstenv
adc
push
adc
cmc
in
dec
adc
ds
insb
gs
mov
fists
sbb
rcll
fstps
fcoms
loop
adc
loopne
mov
xchg
ss
js
push
sbb
pop
mov
jmp
push
lods
dec
mov
pop
or
aaa
mov
push
faddl
out
shl
lea
adc
inc
push
pop
mov
fistps
xorb
nop
mov
hlt
jns
adc
ja
pop
movsb
xchg
sbb
subl
mov
cmc
pop
scas
mov
jle
in
inc
lds
xlat
insb
icebp
ljmp
iret
sldt
xchg
mov
mov
in
mov
cmp
push
pushf
jb
sub
pop
scas
fiadds
mov
jle
cwtl
push
and
fidivs
mov
jg
daa
mov
aas
addb
push
loop
jno
lock
cwtl
xchg
mov
push
sbb
adc
mov
mov
dec
xchg
popa
pop
insb
icebp
cmp
ficoms
aam
test
jecxz
and
mov
and
pop
sub
popw
add
mov
clc
sbb
fldl
fmull
cmpsb
and
inc
shl
ljmp
xor
rcrl
das
adc
scas
mov
inc
icebp
push
cmp
repnz
dec
lea
repnz
xchg
xor
jp
hlt
mov
xor
cmpsl
outsl
lret
mov
loop
loopne
jo
or
mov
data16
cmp
test
sub
pop
aam
lock
inc
add
or
std
mov
cmp
fsts
pushf
mov
jo
sbb
test
test
cltd
je
mov
fmuls
mov
mov
add
lock
lea
es
rcll
jne
mov
mov
jle
xor
loop
dec
mov
addb
lock
ficomps
sahf
push
dec
mov
insl
xor
cli
sbb
cs
dec
fistpll
test
push
jg
int
dec
pop
adc
jno
neg
adc
pop
daa
test
mov
cltd
mov
xchg
xchg
jbe
xchg
jl
cmp
push
in
in
dec
push
pop
addb
lret
mov
shll
pop
mov
push
inc
xchg
scas
addr16
or
push
mov
jmp
xor
js
cmp
push
cmc
add
inc
pushf
jno
cltd
xor
nop
cld
jecxz
push
jae
ss
sti
xor
arpl
clc
scas
mov
inc
push
sarb
adc
sbb
or
repnz
loopne
add
jbe
sub
adcb
or
cmp
sahf
dec
icebp
outsl
scas
leave
and
cmp
rcrl
cmpsl
jo
cmp
cmovb
jp
test
or
ror
mov
xchg
pop
bound
mov
cli
ficompl
popa
xorl
sbb
std
jl
jle
push
xor
bound
cmp
insl
fnstsw
loopne
xchg
mov
add
push
adc
add
stos
adcl
adc
sti
aam
inc
pop
clc
push
xchg
dec
imul
repnz
push
jnp
pop
mov
adc
rcll
mov
int
hlt
xchg
arpl
push
sar
and
jno
adc
and
psrad
in
movsl
loop
addr16
or
or
ljmp
andb
stc
shll
ret
pop
mov
mov
shll
jl
jnp
push
push
out
outsl
bound
xlat
mov
subl
js
ds
inc
dec
or
stos
cmpsl
lcall
push
sbb
dec
jl
or
leave
lods
enter
mov
out
pop
mov
out
jp
adc
cmpsb
rcrb
jmp
cmpsl
mov
pop
ss
inc
hlt
in
dec
fldl
add
arpl
roll
xchg
push
enter
test
xor
add
xor
dec
jle
aad
push
fsub
insl
xor
rorb
cs
jge
mov
sahf
and
mov
clc
cmp
repnz
mov
adc
dec
aad
orb
sbb
lret
push
sub
mov
and
mov
bound
xchg
or
sahf
mov
ja
or
inc
mov
and
gs
and
mov
and
sub
pop
cltd
orl
cmpsl
inc
xchg
mov
push
test
js
lahf
rolb
lahf
iretw
xorl
and
mov
xchg
lods
mov
sti
pop
insl
cmpsl
js
lahf
icebp
xchg
push
mov
cltd
in
pop
js
cs
push
adcb
push
or
lcall
hlt
sbb
mov
mov
cmpb
aam
pop
add
xorb
mov
xor
loopne
xchg
jns
jnp
fsubrl
les
jnp
leave
mov
jmp
jo
cs
fisttpl
cmp
loop
repz
lahf
push
xchg
call
lret
fstps
leave
jl
loopne
addl
fsub
cmp
pushf
fs
fistpll
push
mov
ljmp
or
lret
adc
sub
inc
and
cli
push
push
push
or
test
shll
fucom
flds
mov
inc
dec
out
fldl
pop
daa
aad
xchg
jbe
in
sbb
sub
dec
into
jle
test
cmp
test
cmc
adc
jo
cmp
xchg
ja
aam
rcrb
jae
popa
daa
sub
and
les
loope
sbb
inc
cltd
pop
jmp
das
jg
scas
lock
push
sub
movsb
jns
fcomip
insl
pop
test
sub
cld
rorb
adc
aas
cmp
sub
rcr
cmp
jecxz
js
popa
aam
ja
pop
sahf
sbb
stos
push
and
into
push
filds
cwtl
or
leave
nop
jo
push
in
push
lds
pop
fcompl
xchg
cmp
dec
mov
jb
cmpsb
sub
add
cwtl
mov
out
or
into
leave
call
repnz
cld
add
pop
fisubrs
nop
hlt
mov
inc
adc
or
fs
sbb
test
adc
cmpl
scas
cmp
imul
aad
cmp
inc
pop
pop
mov
inc
fs
mov
sbb
cmc
stos
stos
pop
lret
and
jne
jge
add
test
inc
nop
jle
out
enter
dec
divl
jne
jmp
mov
mov
and
lret
pushf
filds
sub
insb
dec
test
in
ss
test
mov
stos
jp
into
shl
movsb
mov
fisubl
push
pop
push
sbb
fstps
mov
or
pop
leave
lcall
in
shrl
push
int3
call
orb
xchg
icebp
jp
orl
xchg
fisubs
push
mov
sbb
or
lcall
xlat
inc
push
push
jmp
jae
insl
bound
sbb
add
cmp
int
clc
pop
rcll
mov
clc
sarb
arpl
add
arpl
popf
cmp
ret
add
pop
sbb
gs
dec
pop
test
push
mov
rolb
cmc
adcb
popa
cmpsb
and
outsl
and
negb
fistpll
pop
pop
mov
fisubrl
inc
adcl
mov
idivb
sbb
inc
jo
sbb
add
in
xor
cmpsw
idivb
adc
sbb
loop
or
std
repz
movsb
jo
lods
out
scas
pop
icebp
leave
pusha
jbe
dec
mov
lods
cwtl
add
imul
mov
xchg
xchg
sar
fcom
bound
adcl
mov
faddp
sub
inc
push
mov
ret
jbe
test
add
sbb
jge
sub
cmp
inc
xor
popa
mov
sbb
mov
adc
push
xchg
mov
mov
mov
lcall
jae
sub
and
dec
pop
mov
pop
xor
divl
popa
and
bound
xor
inc
icebp
data16
cmp
dec
cmpsl
sbb
push
fsubs
aad
or
dec
sbb
daa
nop
pop
sahf
dec
jae
or
orl
mov
std
sarl
cwtl
xchg
sub
mov
mov
cld
pop
jmp
fisubrl
or
push
mov
mov
mov
aas
lock
fwait
inc
jmp
jge
mov
pop
test
stos
jg
inc
test
mov
adc
dec
pop
dec
outsl
inc
and
outsl
dec
aam
lds
ds
clc
lcall
loope
out
stos
pop
inc
add
dec
out
loopne
jbe
pop
lret
jns
leave
jle
outsl
jns
cmp
jno
aaa
push
mov
jmp
xor
movsl
in
sbb
xchg
jns
cmc
dec
repnz
sbb
xchg
pop
push
jecxz
js
es
ds
adc
sti
lcall
or
aam
stc
shlb
cwtl
lret
aam
sbb
mov
aaa
push
cld
mov
mov
or
outsl
pop
dec
push
cmpsb
cmp
xchg
push
in
std
sti
ja
or
jg
mov
lea
fdivrl
adc
add
ret
xor
jne
mov
lock
icebp
dec
test
fimuls
add
scas
sub
inc
out
test
repz
out
mov
push
or
or
ja
push
add
mov
or
data16
sbb
push
sahf
in
jo
lahf
btc
jnp
cld
jmp
mov
int3
stc
enter
fisttpl
jg
test
lods
jne
xchg
mov
xor
push
rcl
cmpsl
mov
lock
lahf
daa
jbe
xchg
push
pop
pop
inc
lret
jbe
divb
imul
loope
aas
dec
sub
fsubrl
adc
pop
push
inc
stos
sbb
xor
jge
and
jmp
jne
repz
sbb
push
out
sub
fidivl
jb
jae
xchg
dec
lock
out
mov
mov
jl
mov
sbb
roll
mov
xchg
xchg
and
js
insb
push
int3
loope
imul
fwait
enter
sbb
sti
jno
push
sbb
sub
sbb
or
nop
das
jmp
imul
lods
cmc
dec
add
cmp
sahf
lcall
push
fdivs
pop
lea
cmp
sub
adc
jle
test
sub
jne
lahf
std
outsb
sub
pop
pushf
jecxz
mov
sub
mov
sarb
push
lret
sub
xchg
xchg
adc
into
add
mov
jle
and
stos
adc
jmp
out
cld
loope
dec
xlat
jmp
add
lods
mov
lock
test
xor
loopne
ss
jg
push
lods
mov
hlt
fwait
or
pop
pop
xlat
gs
dec
pop
aad
sbbl
rorl
mov
mov
adc
popa
inc
out
insl
arpl
dec
sbb
sbb
adc
xor
push
pop
add
pop
mov
push
call
inc
jns
pop
mov
icebp
std
push
or
outsb
mov
frstor
mov
add
je
rorl
sbb
shrl
pop
or
sbb
xchg
mov
xor
push
mov
push
mov
lea
scas
pusha
stc
xlat
xchg
test
jne
dec
add
es
push
ret
xchg
lahf
sbb
push
in
pop
hlt
call
sub
sub
imul
add
in
sti
arpl
adc
lods
mov
pushf
pop
pop
int3
adc
add
pop
xchg
cmp
sbb
push
jmp
fstpl
push
mov
call
stos
push
mov
fucomp
mov
adcb
mov
repz
sub
ficoms
fiadds
add
add
xchg
ret
mov
in
mov
sbb
mov
jnp
sbb
test
push
adc
adc
inc
xchg
loop
dec
dec
mov
out
cs
test
sbb
sub
dec
test
jb
adc
sub
mov
add
pop
xchg
mov
pop
sti
rcr
lcall
add
and
adc
mov
adc
xor
std
mov
pop
movsb
push
pop
sub
sub
scas
scas
cmp
xchg
leave
jge
js
adc
mov
sar
dec
sbb
adc
sarl
cld
jge
scas
push
add
dec
fists
jle
bound
arpl
push
adc
jg
das
flds
shl
mov
dec
movsb
xor
pop
mov
rorl
popf
shrb
pop
js
pop
jb
out
mov
push
and
xchg
ds
mov
fldcw
mov
xchg
add
int
fwait
pop
fldt
mov
inc
sbb
inc
aad
sub
or
pop
sbbb
sub
and
mov
adcb
xlat
cmp
stos
shr
sub
out
mov
shl
adc
mov
loopne
or
mov
sub
in
push
inc
mov
pop
cmp
imul
sti
fs
or
cld
xchg
rcl
cwtl
mov
mov
insb
insl
mov
push
out
push
xchg
mov
test
outsb
inc
push
movsl
mov
xor
cmp
push
mov
and
fdivs
sbb
scas
add
aaa
add
mov
or
jno
push
out
xor
pop
pop
dec
or
aam
rol
adc
ss
cmp
incl
mov
leave
jnp
add
aas
ds
stc
mov
jbe
sub
shlb
movsl
mov
fcmovb
gs
inc
das
mov
sarb
xlat
jne
mov
or
jmp
lret
in
aam
push
fstpl
pop
cld
push
dec
push
popf
fimuls
inc
mov
inc
sahf
subl
mov
xor
jne
out
and
in
push
and
lods
xchg
mov
inc
sarl
nop
fs
in
xchg
dec
dec
jecxz
pushf
int3
xchg
jbe
inc
or
mov
xchg
lahf
or
rorl
stos
push
inc
cmp
mov
cs
fidivl
imul
xchg
incl
js
and
sub
js
mov
push
sarl
fistpl
ja
jg
faddl
push
bound
pop
dec
inc
sub
ss
ret
inc
cmc
lcall
add
mov
mov
data16
xchg
sub
std
mov
icebp
fdivl
scas
cmp
dec
out
or
iret
outsl
pop
icebp
repz
outsb
lcall
daa
mov
and
filds
add
mov
or
sub
push
jmp
cmc
inc
ret
sbb
bound
pop
divl
jne
mov
xchg
pop
dec
daa
mov
out
loop
ret
xor
aaa
test
xchg
jg
dec
jno
push
jb
mov
xlat
mov
lcall
mov
mov
lds
fs
sbb
int
inc
or
add
push
es
fsubr
jne
add
dec
mov
sbb
call
xchg
in
test
push
orb
pushf
jne
jnp
pop
mov
cltd
xchg
mov
fs
aad
cltd
lret
lods
sbb
out
repz
les
mov
pop
xchg
movsl
or
xchg
rcl
data16
loope
cmp
dec
mov
jle
jmp
pop
out
mov
sub
pop
aaa
sbbb
sahf
mov
mov
icebp
dec
ficoms
out
cltd
mov
fisubs
push
or
add
dec
jg
sbb
adc
cmp
outsb
rorl
hlt
adc
sbb
lcall
inc
jecxz
cmc
pop
mov
push
xchg
add
test
xchg
pop
lods
mov
add
ret
push
mov
popf
icebp
pop
push
dec
cmp
in
and
ljmp
xchg
loope
daa
xchg
xchg
in
jg
lods
pop
push
xor
es
pop
add
test
or
add
imul
mov
mov
inc
cmp
jmp
iret
aad
dec
loopne
jmp
adc
sbb
in
jnp
and
pop
into
popa
inc
xchg
das
aas
push
xchg
mov
pop
xor
bsr
orl
sbb
int3
mov
or
loope
pop
jl
hlt
and
sbb
repz
aas
push
sub
hlt
lret
xor
nop
add
insb
and
jns
mov
xchg
sub
and
mov
fstps
jmp
push
dec
out
mov
loop
and
or
aad
lcall
mull
jne
ja
repnz
xlat
push
aas
adc
js
sbb
mov
adc
into
mov
mov
jo
jecxz
in
adc
xchg
push
mov
add
adc
push
fcomip
add
sub
out
out
ljmp
cmpsb
xchg
push
inc
stos
call
jmp
dec
cld
pop
dec
add
fcmovu
sti
int3
ret
cmp
sahf
gs
das
xor
or
sbb
mov
std
push
cld
inc
leave
mov
mov
popa
cli
xchg
ss
push
cmp
les
stc
fdivr
fidivl
xor
scas
fnstcw
mov
sub
mov
inc
mov
add
adc
mov
push
push
xchg
sub
adc
dec
call
mov
mov
sahf
shrb
add
jb
push
adc
movsb
push
int3
fisttpl
xchg
inc
leave
mov
into
push
lock
loope
inc
adc
std
inc
mov
outsl
test
mov
movb
ja
mov
into
inc
lret
or
mov
inc
and
sub
fdivs
ja
sub
dec
jb
sbb
movsl
pop
push
jle
xchg
mov
lds
into
std
out
addr16
push
dec
xor
repnz
fisttpll
in
mov
insl
ss
clc
xchg
lcall
test
aad
dec
fs
aas
mov
pop
xchg
jno
dec
lds
clc
fwait
dec
clc
out
push
jp
ret
mov
ss
dec
dec
mov
xchg
push
pop
fs
or
cmp
mov
in
xchg
stos
mov
mov
xchg
add
shl
shlb
dec
inc
rcrl
bound
ret
dec
xor
dec
jns
mov
push
insb
push
ficomps
inc
nop
out
xchg
outsl
std
cmp
mov
or
ficoms
mov
mov
and
or
adc
loope
jae
mov
sub
loop
push
or
loope
outsb
mov
mov
gs
push
aaa
fsubrp
fwait
dec
sub
lahf
or
xchg
mov
pop
sub
or
mov
fcomp
in
lret
pop
xchg
fdivrl
add
jle
inc
mov
lods
icebp
imul
lock
add
sahf
sti
adcb
mov
mov
mov
mov
xchg
cmp
negb
out
shlb
cmp
jns
lock
std
arpl
xchg
je
nop
xor
test
fnsave
jl
push
int3
mov
and
std
xchg
pushl
jg
fmuls
jg
mov
inc
imul
jle
xor
idivb
enter
adc
jmp
in
in
int3
pop
leave
mov
xchg
stc
mov
add
fsub
movsl
xchg
xchg
scas
pop
out
xor
adc
lods
std
jb
dec
jg
test
push
jo
lret
jl
adc
stos
outsl
das
or
mov
jge
mov
out
xor
inc
cld
lcall
sub
inc
icebp
xchg
imull
dec
rorl
cld
lcall
fcom
loope
dec
mov
sub
xor
xchg
mov
out
sbb
add
pop
xor
lods
shll
or
xchg
add
aam
xor
scas
cltd
out
or
out
int
jb
aam
aaa
out
sbb
aam
jns
cmc
xchg
dec
loop
loope
inc
dec
shrb
sub
pop
inc
ret
cmp
adc
and
inc
lret
orl
arpl
xchg
and
cs
out
mov
fisttpll
in
fistpl
mov
lret
xchg
xchg
clc
jecxz
and
ret
xchg
push
loope
ljmp
mov
xchg
xor
subb
sbb
push
and
sbb
out
push
or
daa
in
sbb
dec
fwait
out
cmpsb
and
cltd
pop
mov
add
mov
mov
sub
repz
mov
pop
clc
dec
pop
cld
mov
popa
jg
push
jae
mov
xchg
jl
mov
insl
inc
or
mov
sbb
ljmp
cmp
jae
mov
in
push
js
sub
aaa
dec
or
call
ja
pop
lahf
iret
pop
xor
ret
icebp
inc
into
subb
insl
adc
lret
xlat
cmpb
rolb
nop
cmp
inc
push
mov
sub
aam
mov
mov
push
sub
in
mov
mov
outsl
or
clc
ret
push
push
mov
sbb
ret
outsb
xor
jp
out
cli
push
sbb
jns
mov
lods
popf
sbb
or
mov
xchg
fildll
imul
sub
push
mov
pop
sub
sub
mov
lret
and
inc
jp
lcall
cmp
sbb
leave
std
fstp
movl
in
fcomps
out
add
dec
imul
xchg
cmp
cmp
ds
adc
push
bound
sub
pop
sbb
call
xchg
mov
mov
adc
jge
push
add
aad
mov
jbe
dec
dec
dec
int3
sti
pop
mov
int
xchg
ds
sarl
cmp
mov
add
jp
fldt
outsb
lcall
sbb
mov
or
faddp
jne
into
fidivl
std
incb
jb
rep
pop
jnp
mov
jl
daa
test
mov
jae
push
and
push
test
sti
addr16
ret
add
adc
dec
mov
jbe
iret
sub
adc
orl
mov
jecxz
imul
data16
cmp
arpl
test
xchg
ja
mov
enter
out
in
xor
pop
jmp
pushf
in
adc
mov
aam
iret
aam
popf
mov
rcrl
or
adc
mov
xchg
push
cmp
sahf
jecxz
popa
adc
jmp
ss
or
out
loop
or
stc
push
insb
mov
xchg
mov
scas
std
sbb
lahf
mov
sub
outsl
sbb
adc
je
add
les
sub
out
jle
cmp
cmpl
fildll
jne
lock
fdiv
and
xchg
push
ret
jmp
ficoms
mov
xor
int
mov
mov
and
imull
ja
add
dec
mov
divb
pop
fs
mov
push
mov
xchg
jne
lret
decl
js
push
xor
sbb
push
cltd
stos
movsb
sub
mov
sub
or
mov
and
cmp
sbb
jo
sub
imul
push
xchg
push
xchg
dec
cld
loope
push
jmp
push
pop
jns
mov
js
lea
inc
fsubl
stos
mov
movsl
pop
std
mov
ss
jo
jp
inc
fistl
test
cmpxchg
and
mov
repz
mov
jge
fldl
or
cmp
daa
mov
pop
int
xor
xchg
fbstp
test
mov
dec
pop
iret
gs
push
nop
fimuls
lret
pop
fcom
shrb
push
lods
xchg
shl
inc
or
cmp
or
fstps
sbb
jg
adc
dec
imul
mov
arpl
lcall
test
into
imul
loopne
sbb
cmp
daa
das
adc
out
fstpl
jno
shrl
loope
inc
idiv
mov
stc
push
aaa
inc
xor
inc
pop
push
insb
ror
test
mov
mov
inc
cmpl
or
rorl
pop
es
shrl
mov
mov
adc
cmp
shlb
fwait
stc
fists
push
or
inc
pusha
int
xchg
fcmovnu
dec
es
cmpsb
les
out
loopne
fisttpll
addr16
xchg
jno
pop
xchg
in
pop
or
pop
int3
lahf
xchg
nop
dec
ret
movsb
pop
pop
mull
out
and
pop
fwait
push
outsb
popa
das
mov
jae
test
inc
pop
or
xorl
xor
jbe
mov
pop
sahf
loope
rcll
out
inc
sahf
mov
xlat
lret
jno
adc
and
int
ficoml
mov
dec
sbb
jbe
pop
btr
out
ja
mul
dec
in
call
addr16
cwtl
mov
incl
and
int3
xor
in
xchg
mov
jae
in
fmulp
mov
out
pop
pop
out
add
pop
mov
out
pop
outsl
cwtl
and
xorb
popa
fnstcw
dec
xchg
xor
jne
imul
fmull
jb
out
lods
ret
fsubl
lods
sbb
loop
ss
mov
rcll
push
das
imul
adc
adc
idivb
idivl
data16
sbb
mov
insl
int
mov
cmp
jp
mov
hlt
sbb
fdivs
and
mov
loopne
lcall
icebp
or
out
sbb
mov
ret
nop
leave
outsb
adc
adc
sbb
mov
dec
xchg
loope
mov
pop
or
xchg
sbb
inc
dec
negl
add
push
sbb
icebp
in
sub
mov
icebp
bnd
je
xchg
add
test
dec
stc
cmpsb
test
jne
sub
push
dec
dec
mov
inc
cmp
pop
cmp
push
xchg
jge
cmc
mov
adc
fistps
loop
mov
fdivrl
mov
data16
dec
ret
jae
and
test
ja
out
jmp
pop
mov
sub
push
aam
into
mov
imul
pushf
or
lahf
adc
ljmpw
jle
pop
sbb
mov
fwait
pop
pusha
aam
xchg
js
fadds
cwtl
xchg
dec
aas
insl
fwait
cmp
or
call
xchg
adc
ret
mov
sbb
pop
dec
cmp
push
sub
dec
fsubrs
sbb
sarb
xchg
fnstsw
nop
addr16
mov
bound
adc
jecxz
mov
sub
cmc
mov
cmc
or
or
in
and
int3
cld
test
lahf
add
or
or
shll
add
mov
xchg
pop
jb
test
mull
xor
leave
nop
fpatan
sub
aam
pop
decb
sub
stc
imul
xor
push
adc
aam
imul
das
sarb
lcall
insl
jb
cli
fwait
das
mov
fdivrs
gs
or
cli
inc
cs
adc
sub
data16
add
sysenter
mov
js
xchg
test
rolb
mov
repz
mov
outsb
les
test
jle
outsb
mov
repnz
jle
sarl
push
dec
popf
jne
mov
insb
mov
push
mov
lcall
outsb
push
icebp
insl
lods
cmp
lret
xchg
lods
xor
std
push
mov
sbb
std
inc
loope
cmp
stos
shlb
cmc
mov
sbbb
clc
add
dec
leave
fnstenv
les
or
popa
and
xchg
sub
nop
push
mov
dec
add
in
out
iret
lcall
mov
push
mov
mov
cmp
arpl
and
xlat
and
xchg
std
mov
test
dec
insb
outsl
mov
sahf
cmp
cltd
cmp
fisttps
icebp
jbe
lea
ljmp
fcoms
or
lret
mov
mov
movsb
mov
xchg
rorl
clc
add
xor
jle
fsubrl
xor
andl
fisubs
les
dec
insl
mov
sub
cltd
rclb
in
add
fwait
mov
inc
test
mov
iret
sub
shll
rclb
dec
ja
add
call
pop
xchg
mov
lods
pop
mov
mov
aas
scas
push
hlt
pop
xor
orb
mov
orl
gs
out
lock
adc
cmp
clc
int3
xchg
mov
arpl
jg
cld
sub
push
fst
mov
and
pop
repnz
cwtl
mov
xor
jne
xchg
adc
out
rolb
aam
jno
notl
mov
xchg
add
bound
outsl
loope
dec
pop
ss
int
mov
push
cmp
pop
aas
data16
mov
cmp
insl
pop
xchg
adc
ss
imul
rclb
adcl
adc
mov
inc
inc
mov
lods
stc
xchg
inc
cmp
xchg
sbb
cltd
push
xor
jbe
xor
or
xchg
test
andb
inc
adc
xchg
in
shlb
lock
movb
stos
pushf
into
push
idivl
iret
pop
xchg
xchg
ja
int
loop
inc
mov
aam
mov
lea
sbb
pop
outsl
jmp
mov
pop
xchg
lds
sbbl
cli
hlt
dec
pushl
and
add
push
pop
sub
shl
leave
and
rcrl
xchg
fldt
shr
mov
mov
jb
popa
mov
les
push
outsl
mov
lret
lahf
dec
jbe
adc
popa
ss
aam
or
mov
test
jb
pop
inc
mov
mov
dec
aaa
xor
inc
imul
out
lret
sbb
pop
jg
lret
lods
stos
mov
xchg
dec
cltd
imul
fs
pop
loope
insb
cwtl
out
icebp
add
cli
push
add
mov
xor
cmc
cmp
lahf
xor
mov
sbb
enterw
int
mov
cmpsb
loope
cli
inc
seta
dec
push
out
or
mov
or
mov
push
jae
fwait
subl
inc
fnstenv
mov
test
call
sub
mov
in
stos
and
xchg
lcall
cltd
into
mov
pop
icebp
push
sahf
xchg
imul
sbb
inc
add
dec
scas
and
sub
data16
pusha
fadds
lods
pusha
ss
mov
push
pushf
push
inc
mov
pop
add
scas
scas
aaa
jns
dec
mov
jb
mov
aaa
aad
xchg
test
sbb
pop
mov
xchg
out
jb
rcl
leave
stos
pop
and
sti
xchg
add
pop
inc
inc
lock
inc
mov
sub
ss
ret
mov
add
in
xlat
mov
nop
arpl
xchg
xor
inc
sbb
or
mov
cmp
movsb
data16
xor
popw
xor
rcrl
cli
pop
mov
push
mov
mov
mov
out
mov
in
pop
sbb
adcb
xor
rcrb
and
ret
push
or
sub
push
icebp
in
add
and
mov
mov
or
sbb
xchg
push
shrl
or
adc
and
xor
push
ja
std
pop
cwtl
lret
jp
adc
adc
mov
out
and
jae
icebp
leave
ror
xor
cmp
movsl
sub
mov
ret
mov
jle
repz
test
test
pop
dec
test
in
arpl
mov
mov
std
mov
xor
cli
int3
popa
stos
jecxz
test
sub
mulb
jbe
xlat
daa
imul
imul
sbbl
test
xchg
imul
inc
lods
push
lock
int
leave
jle
cmp
bound
dec
fsubr
cmpsb
jb
xor
pushf
mov
mov
inc
xchg
ss
stos
repnz
insl
jle
imull
xor
std
rorb
inc
fwait
inc
mov
lret
jmp
ret
sub
int
std
push
pop
mov
scas
dec
push
xchg
jge
gs
pop
loop
lret
pop
push
jno
clc
push
mov
insb
mov
movsb
gs
mov
add
js
lods
xchg
xchg
ret
pop
pop
xchg
out
rcr
out
sbb
call
aam
or
pusha
cli
push
mov
inc
dec
aad
sub
sahf
cwtl
adc
mov
adcb
cmp
adc
jl
adc
es
je
adc
xchg
cmp
xor
inc
shll
sti
call
enter
xchg
test
loopne
repnz
pop
add
inc
mov
jo
adc
imull
andb
sbb
out
mov
and
inc
xor
cs
popa
adc
movl
sahf
test
cmp
mov
out
cmp
xor
jno
outsb
mov
jne
dec
sbb
sti
dec
cwtl
outsb
out
xor
in
scas
xor
push
in
lods
inc
sbb
or
xor
add
loope
outsl
aaa
fldl
or
int
push
inc
lods
inc
loopne
imul
add
xor
sub
addr16
push
xabort
sbb
inc
mov
and
push
cmp
mov
cmpsb
pop
push
jge
lcall
mov
push
std
add
mov
mov
sub
mov
cmc
pop
je
mov
mov
sarw
int
inc
xchg
and
mov
out
mov
aam
icebp
movsl
mov
xchg
sub
push
outsl
mov
push
fcmovu
cmpsb
fisubs
test
popa
bound
and
fwait
inc
add
jns
jp
test
sub
sarb
or
fwait
jmp
leave
mov
into
jge
iret
sub
mov
fmuls
mov
or
push
sub
pop
mov
test
mov
lds
pop
mov
dec
push
test
mov
scas
sbb
clc
xchg
and
inc
outsb
cmp
mov
call
and
sbb
ret
and
popa
push
jg
xor
test
call
push
sbb
cmp
cwtl
mov
bound
mov
or
mov
pushf
cld
xchg
cli
outsl
xchg
add
mov
lea
sti
xor
add
lock
sysret
inc
jmp
decb
gs
cmp
lcall
ret
cmp
and
add
imul
and
insb
int3
jo
bound
sbb
addr16
fimuls
mov
xchg
sub
repz
jns
data16
sahf
mov
or
iret
leave
rcl
cmpsl
sbb
jae
jle
inc
pop
stos
testl
xchg
mov
lret
pop
mov
mov
add
scas
cmpsl
shll
sbb
adc
fisttpl
andb
int
insb
icebp
in
clc
mov
xchg
mov
xchg
mov
ret
mov
or
push
push
shrb
fmuls
aam
into
mov
fisubrl
cmp
fisubrs
xchg
aad
add
and
hlt
cld
fbld
add
and
sub
gs
push
adc
bnd
xchg
pushf
mov
mov
sbb
scas
xchg
xlat
xchg
lret
pop
mov
xchg
push
xchg
jp
sub
fisubl
pop
and
scas
sti
mov
icebp
and
lods
sbb
mov
add
jmp
shll
lret
and
fadd
push
jl
jno
loope
leave
mov
jne
sbb
add
int
cmp
inc
dec
and
nop
inc
movsb
add
mov
dec
lods
pop
ss
rcl
inc
mov
hlt
test
ret
cwtl
pop
pop
mov
pop
call
add
or
fisubrs
les
les
adc
imul
xchg
pop
jg
or
iret
lret
add
clc
enter
sbb
or
push
and
scas
iret
aaa
or
and
mov
and
add
add
add
scas
fcoms
inc
popf
int
push
inc
sub
pop
sbb
popa
lock
sub
xchg
push
fs
cmp
add
lock
xchg
std
sbb
add
in
push
loopne
xchg
es
sahf
in
sub
adc
outsl
pop
cmpsb
les
nop
sbb
xchg
pop
loope
mov
inc
inc
pushf
cmp
sbb
mov
ja
sbb
ljmp
out
cltd
push
push
test
out
pop
ret
inc
rcrl
jecxz
sbb
call
fisttpl
mov
sub
dec
adc
xor
call
or
mov
jecxz
dec
mov
lea
fwait
mov
stos
dec
jnp
pushw
js
orl
insw
xchg
iret
mov
xor
inc
cltd
pushf
pushf
pop
lock
dec
inc
and
data16
add
cmp
pop
sahf
decl
cmp
add
and
adc
pop
mov
dec
nop
fldl
inc
inc
xor
adc
out
cwtl
aad
and
xchg
fisttpl
xor
loope
sub
or
lret
pusha
sub
cmpsb
inc
jp
mov
or
in
lret
cmp
jg
movsl
mov
xorl
cmc
test
out
xchg
popa
js
dec
jg
lret
mov
sub
sub
mov
pop
movsl
andl
xor
das
pop
mov
repnz
mov
add
sbb
int3
into
cmpsb
sbb
adc
lahf
icebp
xchg
or
push
pop
and
mov
int
cmp
dec
into
mov
pop
dec
jecxz
fdiv
orl
int
nop
js
mov
cmpsl
ds
scas
jnp
sub
xor
dec
or
pop
push
movsb
aaa
and
das
in
or
pop
outsl
and
inc
sbb
js
hlt
cld
mov
cwtl
mov
add
jb
cmp
data16
jns
aas
and
cmp
mov
addl
pop
repz
xor
cmp
lea
xchg
sbb
outsb
inc
or
clc
jecxz
shlb
ret
pop
xor
popa
mov
sbb
adc
outsl
push
pop
xlat
mov
fsubrl
xor
aad
dec
adc
les
mov
dec
in
xchg
jmp
mov
jl
adc
jae
retw
leave
in
xor
xor
jle
pop
xchg
scas
jbe
dec
clc
rcl
push
lds
mov
mov
popf
mov
call
jbe
aas
add
popf
xor
lock
cltd
ret
daa
pop
push
mov
sti
or
sub
mov
mov
loopne
outsl
or
ret
lods
lods
aam
and
cwtl
cli
fnstsw
push
stos
outsb
js
cmpsb
sbb
test
mov
dec
pop
push
mov
mov
js
xor
ss
inc
and
pop
adc
fwait
and
bound
add
push
inc
jns
das
cltd
jno
pop
outsb
out
jmp
int3
aas
adc
insb
xchg
jecxz
loope
and
adc
cs
push
or
pop
mov
mov
pop
aam
add
add
push
mov
outsl
lods
xchg
ficoml
dec
call
dec
ljmp
and
sub
cmp
aad
arpl
mov
push
jnp
or
or
aad
daa
clc
daa
xchg
lcall
je
and
out
adc
addr16
fstl
push
dec
out
sbb
ds
cwtl
jmp
push
sbb
lret
shlb
push
cmp
pop
mov
mov
mov
mov
mov
repz
cmp
mov
mov
roll
sarl
xor
cld
aad
cmp
in
adc
cli
mov
sbb
enter
ljmp
cmp
dec
fisubl
pop
scas
inc
movsb
fidivs
and
pusha
in
cmp
repz
test
push
cmp
mov
test
movsb
push
sbbl
dec
fimull
and
and
cld
cli
add
fstp
scas
icebp
add
cmp
int3
or
scas
insb
clc
pushf
add
mov
out
cmc
pop
add
add
push
and
mov
ljmp
add
shrb
jl
les
roll
mov
sub
movsb
xor
adc
cmp
mov
nop
dec
jne
xlat
or
mov
movsl
mov
sbb
push
mov
ret
cmp
subb
adc
scas
popa
sbb
xchg
xchg
ljmp
ret
add
cs
or
pop
aad
sbb
or
in
mov
lret
push
lret
mov
jle
inc
xchg
dec
iret
push
js
pusha
pop
lock
or
pushf
shll
stos
mov
call
xor
aas
or
and
push
mov
fidivrs
add
dec
movsb
rcrb
testl
out
sub
mov
push
adc
adc
mov
adc
inc
push
ret
pop
inc
dec
push
adcl
mov
stos
xchg
ljmp
loopne
mov
arpl
fcomi
dec
out
cmp
int
push
imul
cmp
lcall
scas
jo
stos
and
popf
loope
dec
dec
les
imul
mov
call
mov
nop
sub
pop
lcall
lret
bound
xor
icebp
sub
daa
pop
aaa
or
mov
inc
insl
lahf
scas
loop
jne
push
test
lea
sbb
in
ret
xchg
mov
imul
inc
call
sbb
inc
insb
xor
test
mov
sub
mov
xor
imul
push
std
pop
lds
mov
push
in
sbb
fwait
sti
and
clc
dec
cltd
pop
pusha
outsb
mov
jmp
jbe
dec
jg
scas
mov
cmp
ret
cs
ja
js
fldcw
push
arpl
xchg
rcll
xor
dec
fisttpll
push
aam
repnz
add
pop
sub
jmp
sub
andl
mov
push
repz
add
sub
mov
inc
lods
pop
aad
xor
outsb
pop
test
push
mov
push
outsl
aas
pop
push
sbb
out
ret
cli
in
sbb
mov
ss
test
mov
sbb
add
out
xor
or
or
addr16
adc
jl
call
stos
jecxz
rcr
out
repnz
nop
loope
xlat
and
mov
push
push
cmpsl
and
xchg
jbe
pop
lea
fcmovb
stc
mov
adc
andb
sbb
insl
pop
mov
lcall
mov
mov
or
mov
jne
enter
movsb
and
ret
xchg
pop
xor
movsl
mov
adcl
int3
popa
mov
jne
add
rcll
insb
inc
movsbl
xor
cmpsl
cmp
pop
sti
mov
loope
adc
inc
lea
fimull
loop
dec
or
lret
adcl
sub
fwait
jae
jge
or
lock
jp,pt
ret
sbb
sub
push
addb
ret
dec
into
mov
jmp
xchg
out
ffree
orb
out
stos
pop
jmp
scas
push
cmp
aaa
mul
stos
xchg
rol
mov
and
xor
in
inc
pop
das
push
jbe
popf
sub
pop
enter
cmp
test
pop
sub
subl
outsl
xor
sbb
push
in
lea
icebp
insl
lret
cli
subl
inc
push
leave
repz
or
lods
rcll
add
in
ret
pop
sbb
int
push
fwait
sti
lcall
sbb
mov
insb
sbb
std
push
call
mov
pop
pop
and
dec
std
ret
and
adc
mov
jmp
xchg
pusha
adc
jb
cmp
rolb
fdivp
xor
subl
cmp
rclb
test
insl
daa
adc
adcb
lret
push
imul
dec
or
jge
cmp
adc
and
push
xchg
mov
repnz
pop
mov
push
loop
mov
xchg
in
shrb
cmp
xlat
scas
int
pop
out
iret
aad
int
call
lcall
push
mov
cwtl
and
call
xor
push
mov
mov
push
inc
das
sub
cwtl
ljmp
stos
inc
mov
loopne
icebp
aaa
dec
scas
xor
push
mov
and
dec
push
sbbb
mov
leave
cld
cmp
jbe
or
addr16
jge
scas
cli
xor
dec
mov
cli
loope
mov
repnz
cmpsl
inc
pop
sbb
inc
fwait
mov
xor
pop
mov
leave
xchg
sbb
xor
dec
adc
fdivs
push
out
data16
dec
fcompl
dec
rcr
dec
xor
inc
mov
rolb
push
lods
mov
jbe
sbb
push
dec
aas
mov
js
mov
cmp
lock
mov
cmpsb
jns
sbb
jmp
dec
cwtl
push
pusha
aas
sbbb
icebp
stos
popf
inc
fs
push
rolb
mov
addr16
mov
adc
stos
add
nop
in
xchg
lret
push
call
clc
jmp
roll
ja
push
add
xchg
inc
cli
jge
mov
lahf
out
arpl
jle
aad
call
pop
adc
imul
in
sub
lahf
jmp
pop
pop
jno
daa
jg
and
cmp
pop
inc
jnp
rcrl
or
cmc
xor
sahf
xchg
mov
out
roll
or
cmp
mov
sbb
jg
nop
cmc
cli
aad
mov
mov
sbb
jno
outsl
test
repz
mov
aam
imul
cmpb
push
xor
shll
sti
xchg
lahf
mov
pop
sub
ret
mov
and
test
in
test
pop
sbb
cltd
inc
mov
lret
cli
jae
mov
push
inc
adc
mov
rcl
out
stc
mov
fwait
jecxz
jne
pop
rcll
popf
add
movsb
adc
mov
cltd
mov
jns
loopne
jmp
or
or
add
mov
xor
shrl
cmp
cli
ffree
out
fnsave
lcall
aad
mov
into
ljmp
fidivl
push
scas
jg
sbbb
cmpsl
and
xlat
insb
iret
leave
les
jno
jp
xor
test
sbb
cs
xor
scas
or
nop
aad
in
lcall
mov
adc
pop
sar
cmp
push
enter
sbb
adc
xor
int3
lahf
xor
add
aad
arpl
test
adc
xchg
aad
pop
add
popf
mov
ja
shlb
cmp
jno
push
sbb
push
jp,pt
cmpsb
and
ficompl
jnp
out
adc
mov
push
sub
jbe
inc
in
sti
pop
sub
cmpsb
or
shrb
ret
das
jno
lcall
pop
in
jne
ja,pn
jnp
subb
jnp
xor
scas
inc
mov
mov
testb
push
imul
jb
lret
jg
and
adc
pop
cmp
dec
dec
mov
repnz
xchg
inc
push
pop
incb
sarb
cld
dec
jae
insb
fcmovnbe
lods
mov
pop
inc
mov
cmpsb
divl
repnz
cmp
mov
add
xorl
call
mov
mov
enter
xchg
jne
outsb
rolb
sbb
or
mov
cld
push
sub
dec
sbb
out
cmc
adc
jp
ja
aaa
jnp
cmc
insl
mov
xchg
xor
inc
mov
into
xor
or
insl
xor
clc
xchg
fwait
xchg
shll
in
push
into
inc
fiaddl
and
sbb
daa
inc
mov
outsb
das
enter
push
xchg
std
out
pop
into
adc
in
xchg
rorl
lret
fnstsw
fdivl
xor
pop
xor
insl
gs
pop
jb
mov
imul
call
test
lret
hlt
aam
xor
adc
dec
leave
push
leave
xchg
popa
jle
adc
sbb
js
pop
cli
aam
lds
mov
cmc
inc
mov
jmp
push
in
shrb
inc
outsb
xor
in
cmp
jmp
into
or
inc
in
cmp
jg
int
loopew
jp
adc
js
push
fs
or
enter
mov
add
inc
ljmp
xor
cmc
ja
shlb
sbbl
mov
pop
test
imul
addr16
loope
popf
and
aaa
mov
cld
cmc
xchg
arpl
fdiv
aam
jmp
push
ss
cmpsb
xlat
mov
dec
addl
pop
ljmp
clc
ljmp
addr16
adc
cmp
test
xchg
xchg
jmp
test
aaa
mov
std
pop
mov
or
jnp
loope
inc
and
and
xchg
pushl
notl
jo
cmp
mov
mov
nop
xlat
dec
jge
jecxz
lret
fcom
xchg
aas
jbe
xchg
jmp
xchg
xchg
cmpsl
adc
cmp
les
imul
inc
stc
cmpsb
cmp
adc
frstor
cmp
das
mov
cs
das
js
mov
cmp
push
xchg
dec
inc
jp
add
icebp
xchg
cmovb
emms
ss
idivl
adc
push
jecxz
jg
ja
stc
clc
dec
dec
stos
dec
fiadds
pop
push
xlat
push
mov
femms
sbb
frstor
je
mov
push
push
ss
test
push
ljmp
arpl
cmp
mov
rcr
mov
shll
call
xchg
notb
imul
das
cltd
sbb
add
jae
fadds
repnz
jo
data16
not
lahf
mov
fnstsw
aam
aad
mov
push
ja
call
adc
jno
jae
stos
xor
cmp
cwtl
and
dec
lcall
push
cmp
hlt
js,pn
or
test
popf
and
stos
pop
adc
xlat
adc
sub
xor
sbb
mov
pop
cmp
cmp
hlt
outsb
pop
mov
jb
repnz
loop
ret
adc
movsb
push
jle
inc
mov
pop
push
xor
jae
mov
mov
jb
and
jecxz
pusha
xor
repz
jmp
test
jno
sarl
inc
mov
xor
aaa
add
pusha
mov
xchg
cmpsl
jp
cmpb
arpl
inc
dec
int
and
stc
cltd
jge
and
or
mov
loope
mov
sbb
push
mov
gs
mov
lea
lock
xchg
sarb
or
cmp
daa
outsb
les
psubusw
cmpsl
inc
pop
or
lods
inc
dec
aad
icebp
jb
or
rcl
or
adc
push
mov
push
mov
jae
inc
sub
cmp
jnp
test
mov
loop
xor
xor
mov
push
popa
and
bnd
pop
inc
sahf
aaa
xor
insl
std
aaa
jecxz
je
sub
cs
pop
mov
inc
pusha
push
js
xchg
lret
cmp
data16
sti
mov
xchg
jb
or
jp
pop
out
or
test
clc
in
loope
push
xchg
xchg
rol
jo
fnsave
mov
hlt
xchg
popf
out
mov
insl
repnz
lods
push
fdivrs
int
sub
imul
cmp
stos
outsb
cmp
inc
es
loope
call
cmpsl
shl
mov
sbb
jne
outsl
inc
push
std
mov
and
dec
jne
adc
sub
out
add
pop
pop
leave
jge
inc
cli
into
lds
sti
test
jae
and
adc
fwait
daa
ss
push
nop
mov
mov
icebp
xor
ficomps
jl
inc
ss
cltd
loop
insb
jp
mov
ror
loopne
ds
mov
mov
gs
jne
jp
and
sub
ret
mov
or
rcll
xor
mov
mov
cmpsl
call
or
pop
ret
dec
sub
mov
mov
cmc
inc
pop
mov
ljmp
push
cmp
push
push
mov
push
test
idivl
repnz
and
mulb
push
mov
sahf
lahf
mov
sbb
jne
hlt
add
je
inc
dec
cmpsb
cmpsb
sub
enter
fs
or
inc
sbb
repnz
outsl
call
shlb
and
push
push
inc
into
aam
aas
gs
jge
xchg
adc
sbb
shll
or
sar
pop
mov
adc
cmp
mov
sub
push
shl
je
or
or
jmp
mov
xor
outsb
mov
das
repnz
sub
adcl
mov
lahf
shlb
andl
out
outsl
rcrl
or
and
pop
mov
adc
sbb
outsl
xchg
test
xchg
sbb
inc
addr16
fwait
pop
lods
inc
loopne
subb
and
or
lret
es
and
mov
add
pop
in
and
or
jmp
out
xchg
shlb
xor
in
xor
mov
outsb
mov
stc
mov
or
push
lods
in
mov
mov
mov
push
jno
int3
loop
xchg
mov
pop
add
fwait
incl
and
dec
in
mov
mov
pushf
call
jl
and
add
ja
cltd
test
xor
and
and
test
mov
lahf
jmp
js
or
popa
out
or
adc
ss
sti
ds
xlat
mov
sbb
ss
add
loopne
mov
or
push
mov
push
sub
xchg
xchg
xchg
inc
push
adc
popa
jecxz
jno
scas
les
into
mov
and
push
mov
gs
leave
mov
mov
fadds
mov
dec
loope
xchg
sbb
sub
cwtl
sub
mov
cmp
stc
mov
daa
ljmp
pushf
std
xor
or
mov
mov
ds
sub
scas
clc
pop
xor
ds
mov
ja
or
sub
push
add
cmpsl
movntq
addr16
fldenv
dec
add
loop
push
fnsave
xor
jne
and
push
nop
aam
clc
ja
jl
fs
rcrl
xchg
test
sub
inc
dec
or
mov
addb
push
jecxz
push
push
push
inc
insb
aam
push
inc
ds
lea
add
pop
aad
push
mov
push
aam
and
add
fcomps
push
dec
mov
je
sahf
ljmp
ljmp
or
xor
in
sbb
sahf
repz
mov
cmp
ret
push
sbb
test
inc
hlt
mov
out
adc
pusha
mov
daa
dec
xor
lret
cs
mov
and
push
cltd
mov
and
scas
iret
ja
dec
fisubs
lods
call
mov
and
in
mov
inc
add
dec
cmp
ficoml
push
mov
out
lcall
inc
stc
lahf
sub
mov
inc
iret
daa
and
cmp
pop
insl
mov
aaa
rclb
jg
cwtl
addr16
pop
add
cltd
sbb
sub
dec
lock
rorb
push
in
jns
mov
inc
sub
icebp
test
fcompl
xchg
fwait
sbb
pop
and
es
pop
stc
dec
jp
movsb
inc
mov
gs
push
test
dec
stos
jecxz
hlt
and
in
insl
push
out
cmpb
and
xchg
inc
add
arpl
stos
lret
js
push
push
xchg
cmp
imul
sub
xor
inc
stos
dec
mov
xchg
sar
fiaddl
ret
in
pop
mov
adc
push
fcomip
cmpl
imul
pusha
pop
fldcw
cmp
push
cwtl
popa
call
lds
in
adc
push
ret
std
pop
popa
cltd
mov
or
and
sti
in
cmpsb
cmp
leave
sub
push
sub
inc
jecxz
mov
cli
jae
or
ror
call
sbb
lret
arpl
ja
je
mov
stc
addr16
aad
in
sbb
sbb
xchg
jp
xor
push
lcall
shrb
iret
push
mov
pop
hlt
rep
pusha
jl
lcall
mov
mov
clc
sbb
repz
shr
pause
stos
cmc
mov
inc
movsl
or
lahf
loop
insb
inc
adc
cltd
scas
mov
mov
stos
daa
es
lahf
je
pop
or
addr16
es
mov
xchg
ret
mov
lahf
sahf
jge
je
cmc
fsubrp
pop
fwait
sar
mov
in
push
jbe
dec
shll
icebp
pop
or
arpl
mov
dec
pop
mov
sbb
aas
pop
cmpsb
mov
adc
xchg
rclb
dec
mov
jb
enter
and
mov
addb
call
pop
cmp
cmpsb
stos
dec
mov
bswap
ss
fidivs
jns
inc
sub
int3
push
test
push
add
push
mov
mov
bswap
test
data16
mov
imul
cmpsb
pushf
mov
mov
mov
cmp
jl
scas
lea
stc
and
pushf
mov
mov
xor
cmc
cmp
jbe
pop
xorb
iret
pop
and
push
push
ja
xchg
push
jge
je
orw
je
fstl
arpl
fs
bound
cmpb
mov
mov
xor
inc
sbb
push
ja
mov
jbe
sbb
out
and
cwtl
cwtl
or
push
inc
pop
push
jns
cltd
or
sbb
subb
les
or
dec
xor
and
lds
sbb
sub
xchg
mov
xchg
ret
adc
sub
sti
mov
push
call
xor
push
andl
outsl
xor
jnp
push
jge
sbb
fdiv
rclb
nop
dec
and
push
aaa
sbb
cmp
mov
enter
mov
ret
out
cmp
int3
ljmp
xchg
cmova
popf
icebp
sbb
add
cld
in
sub
lret
inc
out
push
pop
mov
lea
gs
push
xor
xchg
push
mov
pop
dec
mov
pop
sarb
fdivs
ja
sbb
push
mov
gs
jns
mov
cmp
dec
mov
jbe
cs
jge
pop
or
scas
mov
jle
xor
outsb
or
aaa
mov
adc
lods
mov
lahf
repnz
or
ljmp
fidivrl
leave
push
jecxz
rcr
in
fistps
adc
push
fcomp
jecxz
inc
mov
xchg
and
push
inc
loopne
out
adc
fwait
xchg
ds
stos
sub
pop
sarl
cmpsb
sub
adc
icebp
mov
jg
popl
pop
bound
adc
stos
cwtl
cmp
add
xchg
nop
fsqrt
push
ds
lret
lret
pop
mov
mov
lods
and
cli
sub
push
out
xchg
mov
mov
mov
nop
dec
in
test
pop
xchg
jbe
or
insb
and
inc
repz
movsb
adc
cld
push
pop
push
popf
mov
add
insl
sbb
mov
sahf
adcl
xchg
nop
cmpsb
and
xlat
jge
add
insb
mov
jne
das
adc
push
adc
jg
jb
cmpsb
mov
shll
je
add
test
lret
lea
push
int
std
inc
mov
out
aad
xchg
out
inc
aaa
adc
xchg
xchg
js
scas
fisttpll
les
jle
pop
xchg
int
insl
xchg
and
pusha
jb
and
sbb
cmp
fists
lds
push
jbe
into
enter
aaa
jb
mulb
jo
adc
ret
leave
pop
sub
fwait
out
fmulp
ret
sub
pop
inc
loope
aas
lds
in
mov
jecxz
adc
les
lcall
adc
scas
inc
add
inc
adc
sbb
in
imul
push
fdivr
call
rol
rcrb
lds
test
pop
dec
mov
imul
stc
xor
inc
sahf
cmp
inc
and
test
xchg
cmp
fildl
icebp
mov
sub
pop
popf
dec
fcomps
jno
subl
sub
or
xor
mov
mov
stos
mov
lret
dec
xchg
push
clc
stc
scas
xor
cmc
sub
cmp
out
es
inc
xor
xchg
add
dec
pop
in
jmp
jo
mov
hlt
dec
aad
pop
lret
inc
mov
adc
mov
out
mov
ja
adc
lods
cmp
mov
mov
into
or
std
xor
icebp
stc
cmp
in
sbb
repz
xchg
push
popf
insl
add
xchg
arpl
inc
popl
aam
pop
xor
data16
in
std
or
xchg
je
adc
inc
lcall
nop
test
fcmovnu
dec
aas
cltd
mov
fidivrl
jbe
pop
cld
mov
leave
lcall
popf
add
imul
loope
add
xchg
mov
int3
add
add
popf
aaa
mov
or
push
lcall
pop
push
jbe
shrl
test
add
push
jae
xor
in
dec
cs
test
lods
and
sub
cmpsl
jb
pop
loopne
jb
dec
inc
nop
shrb
addr16
sbb
sub
orl
push
aas
mov
or
fwait
test
movsl
adc
sahf
cmp
rorl
lret
rcrl
jae
arpl
leave
xor
mov
mov
cmp
dec
fiadds
lret
add
sti
into
iret
mov
mov
mov
jnp
pop
daa
mov
in
mov
sub
mov
mov
sub
pusha
and
dec
mov
into
addl
in
scas
ret
sbb
xchg
push
xor
fistpll
popf
push
push
dec
adc
or
jmp
xchg
pop
or
xor
and
add
sbb
jo
lods
repz
into
rcll
cltd
pop
pusha
adc
and
js
push
and
dec
sahf
stos
ret
jle
inc
in
ret
rcl
sahf
push
mov
in
lcall
push
subb
pop
std
in
out
test
shl
inc
dec
pause
bound
xchg
insl
int
bound
faddl
daa
mov
or
das
mov
mov
push
lahf
mov
jmp
int3
sbb
mov
adc
cli
movsb
xor
adc
pop
leave
lret
lret
stc
cmpsb
add
add
fdivrs
or
push
xchg
out
pop
stos
sbb
pop
loop
ss
pop
stc
scas
xchg
test
jne
xor
pop
dec
mov
out
std
xchg
stos
inc
hlt
insb
ret
dec
cmpsl
xchg
fistpll
mov
repnz
outsb
int
mov
dec
lea
push
imul
jae
add
stos
in
daa
leave
pop
lret
arpl
stos
sub
int
fnsetpm(287
jne
add
cmpsl
or
inc
or
or
mov
jg
add
mov
jnp
or
push
fiaddl
inc
xor
dec
jb
and
or
mov
push
xor
add
cmp
sub
dec
iret
nop
bound
in
sub
sar
fisubs
push
add
mov
add
push
add
daa
mov
notl
or
fisubrl
or
dec
dec
jnp
fld1
push
test
cs
imul
jmp
push
out
jge
lahf
inc
xlat
negb
sub
xchg
inc
hlt
testb
addr16
sub
mov
out
insb
pop
shll
jp
and
jnp
add
jl
push
jno
sub
push
pop
std
dec
jle
jae
or
inc
mov
cmp
jle
and
in
aas
test
lret
push
mov
ret
in
xchg
pop
ds
xchg
aad
mov
inc
iret
jg
popa
ss
mov
or
dec
cltd
fwait
loope
mov
mov
adc
rorb
or
and
adc
and
fs
jmp
xor
jg
add
push
add
mov
lret
pop
xchg
jno
mov
shlb
xor
lods
xor
push
xchg
aaa
mov
into
mov
xchg
dec
inc
add
mov
clc
filds
mov
sub
stos
adc
inc
movsb
or
cmp
mov
pop
xor
clc
push
xchg
call
mov
jge
cmp
jp
inc
push
xchg
jae
inc
mov
or
dec
jb
xchg
int
dec
gs
mov
pop
es
repnz
xchg
push
pop
mov
mov
mov
test
mov
insl
cwtl
jg
jae
rcll
push
mov
xor
mov
dec
mov
push
xchg
lret
les
jne
inc
scas
jl
add
push
fisttpl
clc
cmpsb
mov
and
test
lock
rep
popl
add
or
jecxz
cmp
inc
in
xchg
mov
enter
inc
add
outsl
mov
aas
aas
dec
push
jp
pop
aaa
cltd
pop
cltd
clc
loope
inc
mov
push
dec
scas
xor
fists
std
addr16
fucomip
xorb
in
mov
inc
adc
push
cltd
pop
nop
std
les
inc
and
xchg
cmp
in
mov
cwtl
cltd
push
jle
sub
pop
lea
dec
cmpl
int
test
fiaddl
decl
sub
out
or
fnstenv
pop
jg
xchg
nop
in
jg
shrb
test
or
loopne
ffreep
jmp
sbb
in
push
int
fsts
je
fiaddl
inc
lods
dec
das
sbb
daa
unpcklps
cmp
adc
adc
xchg
lret
fcmovne
sbb
dec
push
mov
push
sub
clc
insb
loop
inc
mov
bound
and
mov
cltd
jg
or
push
xor
pop
pop
cmp
sahf
pop
sub
in
fidivs
adcl
ret
dec
leave
popa
ror
or
pushf
popf
daa
sub
adc
jge
mov
aas
les
jmp
lcall
repnz
mov
add
jbe
jl
fistl
mov
mov
mov
add
repnz
test
jne
push
xchg
adc
aad
jecxz
sti
sub
pop
xor
repnz
scas
dec
cmc
xor
addr16
repnz
scas
hlt
inc
jmp
iret
loope
lcall
movb
bound
jae
leave
ret
cmp
add
gs
pop
dec
test
dec
pop
ret
scas
int
call
lods
pushf
mov
sbb
push
jmp
icebp
pushf
fldl
lock
bnd
mov
jns
arpl
push
inc
xor
popf
xchg
fcoms
loopne
stc
xor
jp
sbb
add
in
movsl
imul
imul
push
sub
mov
push
push
add
jle
push
mov
fldl
mov
mov
mov
scas
not
add
mov
or
ds
inc
push
mov
repnz
and
in
xchg
pop
sub
mov
dec
fstps
mov
dec
dec
sbb
mov
xchg
add
mov
xchg
outsb
mov
inc
jecxz
mov
enter
loope
js
loopne
add
mov
cmp
xor
and
mov
mov
xchg
push
nop
sbb
mov
mov
addr16
mov
xchg
jo
data16
ljmp
mov
popf
inc
jnp
popa
insl
sahf
adc
lea
xor
xor
jne
scas
ja
pop
std
sub
xor
cmpsb
in
xchg
and
les
mov
iret
addr16
push
test
xor
hlt
cmp
cmp
iret
mov
adc
lea
cmpsl
mov
push
dec
aas
inc
jl
movsl
clc
mov
inc
jns
mov
movsb
or
fcmovu
int3
jo
dec
sub
sub
mov
jmp
loope
lock
orl
lea
jmp
push
jae
lock
adc
movsb
pop
mov
dec
mov
imul
andb
fldt
sarl
dec
cmp
and
std
push
lahf
push
data16
xchg
pop
repnz
insl
enter
orl
push
sbbb
lret
loopne
add
jmp
aad
ss
inc
nop
inc
hlt
adc
cld
in
ficoml
xchg
xchg
test
pop
xchg
dec
and
cltd
fstpl
cmp
inc
aam
mov
xchg
mov
inc
pop
cmp
stos
cmp
jp
lret
jg
cmpsb
fs
in
jmp
sbb
jl
add
mov
mov
enter
cmp
adc
das
inc
xor
cmp
pop
push
cmc
push
mov
rcrb
enter
pushf
in
push
jns
xor
enter
pop
sti
stos
jge
popa
rorl
shll
jmp
push
stos
in
in
mov
add
scas
cltd
ljmp
mov
jl
jno
out
add
aas
sbb
mov
jmp
popa
js
shll
or
mov
jp
xchg
aad
in
repnz
dec
fstl
fcmovnbe
leave
lret
sarb
xchg
adc
mov
bnd
in
inc
test
xchg
push
jecxz
xor
xor
push
sbb
ds
fistl
nop
aam
loopne
xchg
mov
xchg
repz
scas
insl
test
push
mov
cs
std
insb
test
stos
xchg
das
out
and
insl
xchg
sub
jge
mov
mov
popf
adc
jae
fidivs
sub
jnp
sub
test
pop
imul
out
fwait
dec
and
data16
pushf
mov
mov
jg
das
aaa
dec
jmp
pop
jnp
idivl
cld
inc
in
pop
lock
sub
mov
jno
into
or
inc
jmp
push
mov
in
mov
inc
clc
inc
sbb
popf
aam
es
xchg
xchg
cmp
adc
movsb
jns
jno
add
pop
cmp
lods
inc
data16
lods
xchg
ds
gs
sbb
mov
mov
adc
push
adc
jns
stos
outsb
mov
shlb
filds
cmp
adc
dec
imul
pop
fnstcw
cmp
ret
mov
push
dec
cmpsl
aas
gs
stos
faddl
push
out
inc
xor
hlt
popa
cmpl
repnz
jno
jl
leave
mov
and
fwait
xchg
lahf
lcall
cmpsb
push
mov
mov
cmp
jns
nop
inc
sti
lods
iret
lret
iret
fildll
outsb
outsb
mov
and
dec
and
mov
mov
mov
pop
data16
dec
pop
addr16
xchg
fs
mov
push
scas
loop
std
add
loop
clc
icebp
sub
pusha
xchg
btr
mul
mov
add
xor
pop
flds
decb
test
and
inc
mov
inc
xor
out
xchg
cmp
pop
mov
xchg
mov
bound
mov
mov
repz
push
sbb
fistpll
add
mov
sbb
cmp
and
or
insb
pop
ss
or
jo
movsl
fnstenv
rcll
movlps
std
mov
jle
add
and
cmpsl
shr
mov
jle
xor
daa
cwtl
pop
rcl
push
xchg
call
dec
sbb
jp
inc
jbe
mov
insl
enter
and
test
mov
test
out
imul
fists
sti
ret
jbe
inc
push
filds
jo
pop
jnp
enter
mov
xchg
adc
sbb
mov
inc
out
bound
push
cltd
add
xlat
push
popf
mov
fadds
sbb
pop
loope
cld
dec
out
mov
ljmp
push
shl
ror
dec
nop
xor
fdiv
fistps
sub
mov
iret
sub
sub
sbb
and
push
push
push
push
clc
pushf
dec
loopne
gs
inc
sub
insb
loopne
popf
movsl
bound
and
xchg
cwtl
enter
jge
clc
rcll
jecxz
imul
mov
xchg
push
add
loopne
sbbb
cld
and
xchg
pop
insb
pop
and
fwait
out
es
aaa
push
andl
ret
scas
out
fcmove
adc
fistl
pop
rol
lods
dec
cmp
movsb
jge
fisttps
and
jge
divl
jo
gs
pop
insl
fwait
lret
shrb
cli
mov
pop
out
jns
jl
out
xor
fistpll
rcll
xor
or
pop
cmp
jecxz
test
cwtl
fdivs
xor
shrb
mov
stc
mov
dec
mov
cld
sbb
adc
in
push
sbb
push
pushf
mov
or
or
lods
shrb
push
xchg
mov
lcall
idivb
shlb
add
repz
or
ja
pop
daa
popf
or
movd
insb
popf
arpl
outsb
push
xchg
push
push
adc
pop
fsubr
or
add
ss
mov
insb
jno
sbb
xor
adc
cmpsb
mov
mov
shll
xlat
mov
xor
inc
data16
or
jmp
roll
or
loopne
lock
jb
mov
out
mov
sbb
addb
gs
sbb
insl
jle
cld
addr16
cmp
bound
jnp
ficompl
das
dec
mov
lods
outsb
hlt
add
mov
aaa
and
and
in
pop
cmp
outsb
sbbb
call
mov
fsubrs
add
mov
aam
int
push
lods
fstpt
es
cmc
jbe
add
adc
mov
mov
ret
ret
or
pusha
push
popf
jo
xchg
pop
outsb
mov
idivb
sbb
mov
sti
and
movsb
shll
push
nop
xor
sub
inc
rcl
mov
jle
in
cmp
testb
sub
sbb
leave
insb
xchg
fcomps
leave
mov
sbb
xchg
pop
mov
popf
xor
pop
aad
pop
inc
lcall
aad
xor
push
imul
lea
sub
sbb
mov
adc
pop
dec
or
cld
or
imull
mov
in
movl
test
dec
xchg
popf
xchg
or
lock
call
xlat
adc
jb
dec
jge
repz
roll
xchg
enter
sti
imull
pushf
mov
push
outsl
sub
adc
imul
inc
cmpsb
loopne
push
cwtl
inc
cmpb
loope
add
insl
sub
pop
outsl
movsb
sbb
xor
mov
clc
add
jo
jge
push
dec
pop
lock
xchg
jae
mov
ret
nopl
xchg
sahf
int3
ret
inc
mov
mov
and
fldenv
push
or
mov
mov
pusha
xorb
lahf
lcall
ret
call
mov
cmp
dec
fs
cwtl
sub
xchg
cmpsb
and
popa
jp
cmp
pusha
and
push
inc
inc
jecxz
or
inc
out
sub
call
cmc
adc
xchg
rorb
hlt
xor
out
xchg
push
xor
jb
rcrb
sub
dec
icebp
add
and
cld
sahf
inc
mov
inc
lock
std
inc
std
mov
adc
push
test
mov
movsl
shl
inc
mov
addr16
jb
cmp
in
inc
and
scas
aaa
aaa
adc
jns
mov
ljmp
mov
rcr
dec
out
dec
faddp
nop
stos
and
jle
jb
cwtl
mov
xor
fists
jns
enter
xlat
lods
jl
dec
cltd
sub
jge
pop
add
das
test
rclb
pop
sub
add
out
adc
popa
push
leave
jbe
pop
mov
xchg
ret
mov
push
xchg
ret
or
sub
mov
repnz
mov
jb
orl
add
jns
dec
xor
flds
xchg
sub
int3
and
sbb
cmpsl
dec
or
aas
xchg
cmp
cmc
sbb
fisubrl
and
mov
push
add
lods
loop
mov
lahf
cli
xor
jne
in
mov
cmp
dec
xor
add
lock
xchg
or
pop
jns
cltd
loopne
jmp
xor
xor
stos
xor
shrb
sub
decl
nop
jae
sbb
sbb
sub
jns
sbb
pop
xor
dec
loop
and
xchg
test
add
inc
pop
inc
push
pop
xor
fsub
flds
addb
sub
and
jb
mov
jl
test
jp
call
repz
test
mov
lock
push
jo
or
cltd
push
add
imul
jns
dec
xor
sbb
lret
mov
out
cld
pushf
lods
clc
cmp
nop
jb
mov
fxch
xchg
pop
cmp
addr16
jb
shrl
stc
cmpsb
sbb
test
fnstsw
rcrl
and
inc
lods
xor
rorb
push
cmpsl
test
sbb
push
inc
jmp
mov
ffree
ret
pop
push
cmp
add
dec
lcall
insl
repnz
cmp
push
add
test
dec
sub
outsl
xorl
xor
aaa
call
add
dec
mov
xor
add
dec
nop
aas
movsl
rcll
mov
push
jmp
ret
insl
pop
loope
stc
scas
adc
outsb
aad
mov
dec
les
xchg
test
jns
dec
mov
jle
fs
adc
inc
inc
cmpsb
out
push
jge
dec
dec
push
stc
and
arpl
imul
ja
pop
mov
adc
icebp
jne
cltd
xor
xor
inc
ret
xchg
dec
das
mov
adc
test
inc
outsl
cltd
std
rorb
outsl
cltd
cmp
pop
call
dec
jge
cmc
jne
mov
scas
pop
or
or
mov
jns
pop
pop
xor
jns
test
subb
push
rcrb
ljmp
xor
pop
dec
dec
xchg
fdivrl
shlb
int3
lds
inc
push
test
adc
popaw
mov
test
adc
pusha
ficoms
cltd
jnp
test
dec
scas
sub
roll
lock
push
adc
xchg
add
xor
out
push
sbb
loop
mov
xchg
out
cmpsb
aas
jle
and
rolb
lcall
fldl
push
jb
adc
jle
out
jae
lods
ficoml
gs
daa
mov
cmp
imul
jp
mov
cltd
popf
clc
aam
js
inc
push
aad
ret
insl
or
push
mov
pop
pop
in
out
xor
add
push
pop
mov
mov
jnp
pop
pop
push
or
xor
adc
lea
jle
cmp
xor
jo
adc
in
lock
push
jg
adc
dec
sti
je
jnp
bound
push
lret
int
cmp
sub
pop
test
js
sbb
flds
mov
nop
jb
cmp
cwtl
mov
pop
ja
jle
daa
sub
rorl
or
mov
arpl
std
jb
mov
sub
cs
dec
add
xor
outsb
mov
orb
cld
cltd
inc
subl
xor
sub
lods
dec
mov
inc
out
xor
xchg
lahf
call
aas
dec
jmp
mov
iret
pop
mov
inc
mov
ret
pop
jo
adc
mov
cltd
mov
cli
dec
lock
sub
div
push
pop
lds
jno
or
test
jp
std
in
or
fistpl
jae
dec
mov
push
fnstenv
test
ljmp
sbb
into
pop
jnp
dec
add
adc
rcrl
mov
mov
aaa
adc
mov
mov
pop
faddl
adc
dec
js
out
insb
pop
and
fcomi
scas
inc
cmp
jns
jmp
pop
rcr
jecxz
xchg
aaa
add
adc
jp
mov
pusha
jge
test
loop
jns
xor
js
decl
lods
je,pt
mov
push
mov
jne
mov
jp
pusha
cs
subb
addr16
mov
call
iret
mov
and
mov
jle
xor
mov
sub
out
or
pop
dec
sbb
push
and
and
xchg
or
out
mov
test
xchg
jne
jae
add
xor
aad
xchg
insl
jb
pop
popl
push
test
mov
outsl
adc
xor
aas
movsb
popf
out
mov
push
insl
adcl
loop
adc
enter
mov
fcompl
aaa
addb
push
repnz
pop
inc
and
mov
sub
insl
cmpl
inc
dec
out
add
fistpl
ret
jg
sbb
cmp
test
mov
pusha
jne
mov
or
imul
lea
mov
ds
aad
lahf
add
xchg
fbstp
in
dec
fisubs
int
sub
lret
fidivrs
fisttpll
xor
sbb
adc
repz
cltd
nop
or
out
sub
fisttpll
push
lock
dec
xor
shll
push
out
jne
or
andl
das
push
push
push
cwtl
or
xor
aas
repz
cmp
jnp
scas
sbbb
rcrb
fs
arpl
cmpl
xor
xchg
jg
call
mov
jmp
in
xlat
and
cmpsl
loope
jg
and
sbb
add
xchg
popa
add
xchg
in
fwait
rcrb
dec
nop
sbb
sbb
insl
adc
andb
fmuls
fisubs
xchg
inc
out
das
xor
dec
adc
imul
adc
push
mov
sub
lret
shll
in
cmpsl
call
or
fwait
stc
mov
mov
in
pop
fcomip
mov
pop
mov
xadd
mov
pop
add
or
mov
daa
inc
adc
mov
mov
push
jmp
into
repnz
mov
jp
int3
xchg
mov
js
clc
and
add
stos
call
sbb
adc
sahf
xchg
and
adc
lea
fisttpll
pushf
aaa
push
std
jnp
mov
cs
mov
nop
xor
negb
push
rcl
pop
add
bound
xlat
adc
cmpsb
aas
insl
insl
mov
pop
inc
push
cmp
subl
xchg
cwtl
int
shll
iret
sub
sub
rcrl
jle
mov
mov
and
hlt
sub
cli
fidivs
xchg
lcall
movsl
sub
mov
inc
inc
mov
sarl
imul
inc
sub
add
push
xor
lret
mov
lds
xor
test
inc
mov
scas
mov
pop
pop
vmovss
adc
cmpsb
or
push
adc
js
dec
popf
push
cwtl
sbb
notl
leave
jmp
push
sub
mov
mov
int
imul
scas
sub
loope
inc
sbb
xchg
imul
bound
jl
adc
xchg
xchg
cmp
dec
pop
mov
xchg
shlb
push
cmp
stos
loopne
fnsave
push
rcrl
xchg
xchg
test
jb
movsl
xor
dec
mov
mov
pop
fcom
shlb
incl
or
mov
dec
mov
ljmp
clc
cmc
bound
mov
cld
insl
push
jae
aaa
sub
inc
jecxz
inc
mov
rcr
test
scas
in
roll
lods
and
inc
mov
pop
sti
mov
or
decl
aas
mov
add
jnp
jo
iret
sub
push
adc
jmp
add
das
mov
pop
mov
out
stos
cmp
scas
push
lcall
lock
pop
jecxz
push
setno
or
faddl
mov
pop
xchg
and
jo
add
jmp
imul
push
sti
pop
pop
insb
add
push
jl
mov
sbb
movsb
mov
cli
mov
in
sbb
xchg
mov
scas
daa
pop
pop
pop
into
push
xor
je
les
sbb
rcl
test
scas
out
or
pop
sub
inc
adc
mov
xor
push
inc
sbb
pop
out
popf
movsl
aam
pop
dec
outsb
repnz
movsl
sub
cmpsb
and
sub
out
mov
into
push
xchg
pop
je
es
push
mov
ret
ja
lea
adc
mov
mov
dec
mov
test
cmc
or
jo
mov
mov
sub
jb
mov
push
mov
pop
mov
mov
fbstp
mov
cmp
jo
push
xchg
and
ja
imul
rcll
gs
jmp
cwtl
push
incb
ja
pop
push
repz
and
inc
scas
or
rcrl
stos
jb
testb
pop
in
adc
jp
daa
sbb
sahf
lret
mov
enter
imul
cmp
cli
add
mov
insl
adc
sahf
fwait
lock
cmpb
adc
ss
in
bound
lea
jo
inc
pop
xchg
sbb
add
lahf
mov
loopne
jecxz
or
sbb
pushf
cld
repnz
cmp
hlt
insl
movsb
jge
mov
jmp
jge
adc
or
push
mov
sub
mov
test
pop
or
or
in
add
stc
xchg
lret
xchg
popa
jns
enter
test
add
std
mov
stos
or
cmc
cmp
cmp
adc
lcall
push
and
xlat
sub
daa
xchg
mov
jl
nop
pop
mov
push
lret
mov
test
mov
pop
movsb
lea
js
pop
xchg
aam
sbb
jne
pop
mov
jno
scas
push
lods
js
loop
push
sub
cmp
adc
add
test
sbbb
or
and
jecxz
pop
fcompl
xor
imul
cmpl
or
pop
cmp
outsb
pop
inc
cmp
pop
js
or
test
push
mov
std
in
dec
lcall
mov
pop
xor
sbbl
sub
sbb
xchg
dec
pop
jle
out
pop
loopne
out
ret
in
lret
mov
cmp
xor
dec
daa
lock
push
xchg
adc
jnp
pop
jo
adc
test
xor
adc
cld
int3
mov
ret
add
dec
push
test
ljmp
inc
xor
or
aam
into
jno
mov
mov
pop
jns
mov
add
mov
test
sbb
jmp
xchg
fisttpll
rcll
push
bound
addr16
in
fincstp
push
lods
or
mov
push
cmpsl
fildll
xor
and
xor
addb
push
jg
sub
fsubl
mov
xor
lcall
jp
fsub
outsb
in
lea
loopne
fwait
xor
je
out
xchg
icebp
mov
inc
jno
push
std
repz
mov
sbb
repnz
dec
int
dec
xchg
push
mov
aaa
out
mov
sub
std
aas
dec
aad
xor
pop
jle
sub
sub
lods
adc
and
idivb
negb
into
imul
pushl
iret
cmc
pop
push
outsl
jbe
pop
sti
cmp
add
loope
gs
add
data16
mov
or
xchg
loop
sbbb
xchg
fimuls
pop
out
lds
inc
sub
add
hlt
push
insl
mov
ficomps
adc
add
mov
fs
popa
add
push
pop
jnp
adcl
leave
sub
in
pop
xchg
jae
stos
sub
aaa
or
test
mov
in
add
pop
jae
sahf
ja
mov
int
push
xor
push
scas
enter
sub
xchg
jmp
adc
inc
sti
cmp
xchg
icebp
cwtl
rolb
sbb
cmp
cmpsb
xchg
push
rcrb
dec
mov
mov
call
jecxz
lret
cli
subb
mov
pop
pop
xchg
shll
bound
das
dec
mov
ljmp
mov
or
lea
mov
or
jl
out
mov
push
dec
cmp
popa
test
sub
pushf
addb
jno
and
or
inc
dec
in
and
iret
ret
mov
ss
lock
jne
or
pop
jecxz
loopne
dec
lahf
sub
lret
fstps
movsl
fs
mov
xchg
adc
and
xchg
int3
in
xlat
jle
pop
frstor
aas
es
ds
mov
int3
fldenv
repnz
push
jmp
inc
pop
fimull
in
or
adc
sbb
iret
loop
pop
pop
std
inc
test
mov
ficoml
pop
sbb
xor
cwtl
into
movsl
push
mov
aaa
jg
into
mov
fnstsw
push
xchg
sbb
mov
cmpsl
idivb
ljmp
insl
lret
cwtl
arpl
fists
stc
add
outsl
push
imul
movsl
jae
inc
or
dec
sbb
cs
cs
mov
loop
rolb
mov
imul
iret
aaa
jns
cmpsb
push
ja
imul
std
inc
adc
push
xor
mov
test
nop
sub
xchg
xor
adc
decb
mov
pop
repz
test
push
shlb
das
sbb
inc
pop
je
repnz
cwtl
jb
sbb
pop
sub
iret
sbb
subb
in
shll
jbe
pop
int
add
xor
inc
xor
cmp
sbb
lock
movsb
inc
lcall
inc
imul
mov
xor
jle
adc
push
cmp
cmp
lock
rcrl
sarl
fsubs
insb
jmp
pop
mov
or
mull
pop
jno
xchg
das
mov
and
inc
outsl
mov
test
push
scas
cwtl
rclb
mul
xchg
xor
addr16
pop
movsb
xchg
xor
and
lret
pop
pop
xchg
mov
sbb
je
and
pusha
out
scas
sub
jno
add
sbb
lock
mov
jo
cmpsb
scas
mov
sti
jne
mov
rorl
out
cld
mov
push
sbb
fsubp
or
jmp
pop
popf
int3
sbb
jns
cmp
sub
inc
aad
xchg
lret
push
fisttpl
imul
mov
sub
outsl
inc
add
add
and
lretw
orl
cmp
cld
mov
fadds
lahf
stos
outsb
lcall
sbb
mov
ss
cmpsl
cmc
sbbb
mov
jne
mov
sub
lahf
xor
rep
xchg
push
pusha
add
repnz
outsl
mov
sti
emms
mov
lret
cmp
push
xchg
scas
out
out
std
mov
sbb
in
push
out
or
xor
lods
shrb
sub
data16
aam
add
sarl
imul
es
cmp
sahf
inc
dec
cmp
imul
xchg
sub
loope
mov
hlt
and
rol
mov
pop
outsb
mov
and
pushf
outsb
cld
bound
xor
mull
adc
xor
mov
push
mov
insl
repnz
inc
mov
das
jb
ret
push
test
stos
push
lcall
pop
imul
enter
jo
xor
fdivrs
rclb
icebp
fildll
in
stos
fidivrl
rcrl
repz
lock
pop
lods
ss
jne
fwait
sti
jmp
scas
in
mov
dec
insl
xor
sti
jb
cld
push
xor
mov
pusha
ljmp
out
xor
mov
jae
sub
insl
mov
sub
call
mov
cli
or
mov
pop
stos
adc
push
rorb
xor
pop
pop
lea
mov
insb
xchg
pop
jl,pt
dec
push
fnstcw
jmp
rcll
inc
insb
xchg
hlt
shrb
out
mov
je
mov
mov
xchg
xor
adc
fsubrs
and
das
sbb
les
paddq
cmpsb
jmp
ficompl
sarb
mov
xor
lahf
ss
ja
pop
or
jmp
xlat
mov
popa
mov
lods
push
lock
cli
dec
aaa
dec
das
inc
fimuls
mov
push
adc
xchg
mov
movsb
clc
and
jecxz
fisubrs
fmull
hlt
orb
pusha
mov
mov
xor
lahf
sbb
clc
cwtl
insl
adc
sbb
test
xchg
fs
inc
mov
addr16
scas
sub
mov
cltd
mov
inc
jl
push
aaa
mov
hlt
push
jecxz
out
lock
ja
mov
test
push
sbb
repnz
jno
inc
jp
aad
test
mov
xchg
insl
cmc
sub
inc
fisubrs
and
xor
add
dec
jp
inc
and
aas
sti
cld
cs
jo
jo
mov
fmuls
jne
push
fwait
or
sbb
and
cmp
inc
xchg
jg
dec
iret
push
lahf
xlat
pop
loope
push
lods
pop
ret
inc
scas
add
and
sub
dec
inc
aaa
mov
loop
sbb
cwtl
push
loope
mov
xor
adc
inc
push
in
sbb
adc
sbb
mov
daa
add
popf
push
sahf
xor
xor
dec
dec
shrl
xor
cmpsl
ja
mov
mov
andl
xchg
lods
pop
add
repz
and
out
jae
mov
imulb
mov
in
xchg
shlb
aas
push
sub
push
ljmp
push
mov
imul
sub
or
jne
mov
fidivrs
sbb
stc
lcall
call
adc
inc
outsl
jg
xchg
ret
or
dec
insl
sub
loopne
jg
and
js
mov
jp
sbb
fcomps
mov
and
cli
and
mov
stc
cmpsl
add
adc
adc
xlat
dec
mov
jo
jecxz
sar
jae
int3
jle
fisubrl
or
sbb
jnp
or
sti
adc
adc
or
mov
adc
and
adc
add
inc
loop
jle
les
lret
mov
cs
inc
jne
lock
dec
or
mov
pop
and
pop
dec
dec
je
frstor
sbb
sbb
repz
cmp
scas
lods
xchg
cmp
rorb
sub
into
popa
lock
inc
jecxz
or
mov
jl
xlat
jmp
imul
push
sbb
fwait
push
mov
lret
pop
ret
loope
mov
xor
mov
adc
pop
push
pop
das
push
xchg
dec
ss
outsl
sub
movb
mov
in
scas
pop
mov
mov
jl
and
mov
or
lret
outsl
enter
test
jnp
push
mov
jge
hlt
fstpt
jp
lods
xchg
and
inc
lods
mov
push
mov
lret
add
mov
cmp
mov
mov
test
cmpsl
cmpsb
out
fdiv
mov
int3
xorb
xchg
pop
rclb
scas
sub
xchg
adc
lds
lcall
iret
cmc
mov
fdivs
lcall
pop
push
out
shrl
lds
cli
les
cmc
lret
sub
mov
mov
js
mov
aaa
push
pop
sbb
push
dec
push
in
pop
les
push
dec
xchg
ret
mov
stos
nop
mov
test
adc
pop
int
pop
pop
lret
or
dec
xchg
inc
sahf
xlat
fldt
leave
xor
fidivl
inc
out
pusha
movsb
xchg
ds
out
dec
mov
pop
mov
and
in
mov
or
xchg
adc
test
enter
dec
add
lods
lcall
mov
adc
cwtl
ja
and
scas
adc
and
addl
jg
add
pop
pop
jl
dec
xor
cltd
in
cs
out
cmp
dec
push
cmp
sti
sbb
jmp
gs
ret
and
inc
imul
fcmovne
sbb
adcb
repnz
adc
cmp
in
inc
sti
xchg
cs
push
sarl
imul
fdivrl
arpl
imul
sub
daa
adc
jo
test
push
push
mov
lcall
and
xchg
mov
jo
daa
jne
subb
jg
fidivs
adc
push
int
mov
adc
cmpsb
je
sbb
pop
test
adc
es
in
lahf
inc
xor
andl
mov
add
not
xor
fidivrs
sub
pop
dec
ja
or
push
mov
movsb
xor
aad
fwait
in
cld
cwtl
enter
repnz
jp
jl
dec
pop
loop
cmp
popa
pop
loop
mov
stc
enter
mov
inc
xlat
scas
or
and
ja
mov
das
cmp
outsl
jmp
mov
push
xchg
fwait
shlb
mov
addr16
and
or
dec
popf
in
push
sub
orl
inc
lds
leave
into
in
jle
pop
clc
cmp
mov
jne
dec
mov
mov
xlat
scas
xchg
call
mov
rclb
xchg
fnstsw
dec
mov
les
fcomip
jno
rclb
fcoml
jmp
adc
mov
and
orb
clc
dec
test
loop
hlt
dec
add
shlb
mov
clc
push
gs
ss
push
dec
insb
shll
cli
cli
adc
or
or
dec
arpl
sahf
lods
cmp
iret
and
mov
jns
pop
aad
nop
cmp
mov
and
orb
mov
mov
adc
sti
or
sub
mov
mov
xor
sub
cmp
mov
sub
jb
push
mov
into
insb
js
ret
call
shlb
fiaddl
xchg
gs
ret
pop
add
pop
push
lods
lods
cmp
cmp
ret
jle
sbb
mov
jmp
mov
sbb
out
jbe
cmp
add
int3
test
adc
adc
xor
ds
cltd
inc
dec
or
hlt
xchg
rcrb
mov
insb
or
stc
iret
mov
jbe
xor
or
cmp
loopne
scas
hlt
mov
and
sbb
imul
add
mov
nop
adc
aaa
and
adc
repz
leave
push
frstor
pop
jle
inc
lods
xchg
dec
enter
push
inc
std
dec
mov
into
xchg
stos
ret
push
xor
xchg
jp
int
mov
mov
testb
stos
lock
mov
cmp
mov
dec
xchg
jge
adc
pushf
xchg
in
sbb
mov
cmpsb
cs
mov
aad
aad
xchg
inc
cs
dec
xchg
into
pop
adc
movsl
test
test
pop
pop
inc
mov
pop
daa
add
cmp
pop
mov
call
push
push
rorl
mov
int
into
stc
int3
test
mov
mov
adc
ret
cmpsl
divb
mov
push
rcl
inc
add
lahf
orl
mov
mov
testl
fs
xchg
xchg
or
mov
dec
mov
mov
rclb
fmull
and
jp
in
pop
add
xchg
sub
lea
arpl
xor
cli
push
jecxz
pop
dec
adc
xchg
xlat
push
pop
shrb
jne
lcall
repz
pop
dec
sub
aas
sub
push
jae
ss
mov
vdivss
and
mov
rorl
shlb
loopne
xor
cmp
add
in
in
lcall
bound
incl
rol
xchg
das
mov
mov
and
push
mov
xor
xchg
push
mov
and
lds
jg
lea
xchg
or
ret
or
jmp
inc
pop
dec
or
fwait
jl
aaa
sar
mov
dec
cmp
fisubrl
sbb
aam
loop
jge
ret
dec
mov
and
mov
int3
and
outsb
push
xor
addr16
push
scas
sub
sub
and
shrl
frstor
pop
fucomp
xchg
in
lock
testl
jecxz
int
pop
scas
or
mov
adc
push
inc
daa
into
ljmp
imul
cltd
shll
rcrb
rcr
rolb
mov
or
add
jae
jl
or
mov
lock
daa
out
xchg
push
je
into
sarb
daa
cmp
pushl
inc
pusha
jmp
lahf
loopne
repz
jecxz
sbb
push
scas
xor
insb
mov
fcomp
pop
fisttpl
test
in
xor
add
nop
jo
inc
mov
sub
sub
jb
scas
imul
fisubrl
or
add
in
push
std
push
je
lcall
sbb
jp
cmp
adc
inc
push
into
xchg
aaa
adc
out
inc
sahf
cli
mov
int
or
xor
stos
adc
or
mov
minps
and
jne
cwtl
mov
mov
jno
out
inc
bound
imul
xchg
test
adc
adcb
jecxz
pop
sub
push
inc
test
ljmp
inc
xor
push
imul
inc
je
lea
gs
mov
pop
or
lods
pop
scas
movsl
jp
sbb
in
jne
cmp
cli
lods
sub
imul
mov
pop
add
popa
loopne
or
jp
ja
push
aad
andb
lea
mov
and
add
daa
jmp
cmp
sbb
setae
cltd
pop
outsl
nop
inc
xor
hlt
cmp
or
stc
fdivl
dec
loop
inc
stos
add
and
sbb
dec
xor
lret
inc
pop
dec
inc
jp
iret
cs
adc
push
enter
iret
dec
clc
jle
movsb
jle,pn
inc
subl
rorl
cli
xor
cli
ljmp
into
lret
xchg
inc
pop
bound
fmuls
xchg
mov
xchg
dec
jg
pop
mov
insl
mov
push
mov
sub
fndisi(8087
call
out
add
iret
jle,pn
push
aad
pop
scas
xor
jge
and
lods
push
popa
std
aam
lds
ficoms
clc
jne
mov
cld
out
xchg
iret
xchg
cmp
shlb
mov
pop
push
jmp
jmp
fildl
mov
pop
jno
jbe
out
mov
mov
in
fimull
insl
ds
sbb
mov
popf
jge
mov
inc
into
xor
mov
hlt
mov
inc
orb
fistps
pop
add
mov
pop
and
push
into
push
or
mov
cmp
xchg
or
lcall
pop
pop
push
push
dec
cmp
ret
nop
mov
nop
outsl
jmp
sbb
lods
xlat
xor
fistpl
xor
mov
cmp
rcl
out
fucomi
pushf
push
inc
push
dec
sub
inc
adc
xchg
xchg
push
dec
imul
jo
fldt
insb
sbb
ret
pusha
psrlq
mov
outsl
jmp
xor
mov
adc
push
xchg
add
shrl
and
ret
ds
insb
pop
pop
jl
orb
mov
mov
push
or
inc
loop
es
inc
in
jbe
jg
jg
aaa
js
sahf
pop
pusha
dec
jns
dec
sub
scas
sti
mov
sbb
out
scas
ss
les
popa
add
loope
daa
pusha
addr16
rcrl
pop
insb
test
push
test
mov
push
inc
xor
push
mov
jecxz
test
sbb
jns
dec
pop
mov
fdivl
xchg
add
push
test
loopne
scas
out
pop
imull
push
lcall
pop
scas
fwait
movsl
sub
dec
out
test
dec
bound
pop
push
cld
sub
push
leave
stc
mov
aam
push
aad
adc
icebp
adc
outsl
jne
jle
lret
out
stos
pop
sbb
adc
loope
test
je
popf
imul
je
addr16
sbb
pop
adc
dec
popa
mov
push
mov
dec
mov
xchg
push
ret
ljmp
das
jl
push
or
lcall
pop
mov
mov
and
xchg
sbb
sbb
sahf
adcb
adc
out
jae
add
cltd
gs
jp
outsb
sbb
xchg
pop
xchg
lahf
cli
int3
scas
loopne
je
cwtl
sbb
jecxz
push
mov
test
dec
cld
adcl
movsl
rorb
adc
mov
jnp
jp
adc
mov
loope
sbbl
or
push
mov
pop
jbe
jno
cmp
xor
or
into
jg
xor
cmp
cmpsb
ljmp
test
dec
adc
rcl
inc
aad
test
mov
in
sti
lret
lds
add
xor
jbe
add
enter
or
xchg
xor
icebp
pop
inc
leave
add
mov
js
mov
loope
in
repz
loop
subb
add
stos
aas
addb
xchg
or
out
dec
sbb
and
cltd
mov
cmp
jno
mov
mov
sub
fldl
into
inc
idivb
out
mov
and
jo
std
lret
insl
cmp
roll
je
movl
push
xchg
hlt
and
fadds
aas
adc
movaps
xchg
test
ja
mov
mov
loop
cwtl
push
mov
mov
movsb
aas
call
ljmpw
popa
xor
lock
andb
and
sub
mov
xor
shlb
pop
cmp
pop
dec
push
adc
cwtl
jno
fisubrl
mov
lret
sbb
adc
arpl
popa
imul
andl
pop
fistpll
pop
enter
test
outsb
xchg
lahf
push
and
or
aam
sbb
cmp
xchg
insb
sbb
mov
sbb
pop
test
neg
stos
jmp
mov
jmp
popf
push
je
sub
dec
xchg
movsl
es
out
push
jnp
push
sarl
dec
call
pushf
aas
pop
inc
in
hlt
sahf
and
cmp
ret
ret
fs
cmp
mov
and
dec
adc
int
imul
mov
pop
add
add
jne
push
outsl
fs
push
jecxz
or
insb
mov
and
fistl
cmp
push
add
rolb
inc
add
and
test
xor
scas
and
mov
lds
imul
mov
mov
js
in
filds
xchg
movsb
jmp
xor
dec
cmp
movsb
out
jl
lods
cld
cmc
cwtl
call
xchg
dec
fs
xor
fwait
js
jg
pop
scas
addr16
outsl
ja
orb
stc
fildl
xor
pusha
shlb
or
dec
shl
or
fs
jle
dec
dec
andl
adc
repnz
cltd
not
inc
add
popf
add
sahf
idivb
push
cltd
inc
xchg
loope
push
fadd
inc
jg
ds
pop
call
int
sar
and
sarl
jge
popf
in
fmul
fdivl
sub
lret
sti
aam
mov
ss
mov
cld
or
add
lret
push
mov
adc
repnz
xor
lods
xchg
cmp
sti
jp
add
cmp
clc
xchg
arpl
iret
stos
out
push
push
and
mov
mov
in
movsb
add
js
or
std
test
sbb
adc
mov
mov
sub
es
mov
inc
ficompl
pop
loope
lock
mov
icebp
sub
rcrl
adc
clc
push
int3
mov
inc
mov
sbb
inc
xchg
data16
insl
outsl
pusha
jmp
mov
mov
out
out
sub
lods
ljmp
inc
pusha
popf
dec
jecxz
daa
je
pushf
adc
pushf
rcrb
imul
dec
cmpsb
mov
mov
cmp
aaa
pop
sar
and
or
or
aas
push
cs
lods
mov
into
cli
pop
inc
ds
xchg
xor
sbb
hlt
mov
test
jb
xorl
in
shlb
lock
pop
sub
loop
pop
jbe
inc
shrb
mov
cmpsl
push
sti
leave
cmp
and
sub
addr16
enter
xchg
std
aad
push
ret
mov
sub
jle
and
in
pushl
lahf
ficompl
faddp
jmp
push
leave
repz
push
pop
cmp
dec
inc
out
dec
fiaddl
jmp
mov
clc
lods
mov
xlat
loopne
cmp
push
fwait
arpl
loopne
pusha
js
fmuls
aas
jl
push
push
stos
or
fldt
cli
ret
sbb
or
and
aad
mov
adc
and
push
leave
mov
mov
inc
jo
push
push
pop
sbb
stos
and
jle
sbb
sub
inc
daa
mov
incb
aas
clc
inc
add
sti
iret
sub
and
gs
fdivl
cmpsl
out
pop
mov
lds
cs
ret
xlat
sub
insb
lods
testl
loopne
mov
sahf
or
insb
repz
lods
pmullw
aas
mov
clc
stc
xlat
mov
inc
shlb
inc
sbb
jns
lcall
mov
es
xor
rolw
xor
shlb
add
sbb
inc
sbb
or
insb
and
sar
or
cmpsl
icebp
aas
and
insb
pop
in
adc
scas
cmp
cmpsl
scas
mov
and
lds
or
pop
fdivl
daa
popa
inc
pop
jecxz
pop
icebp
push
lcall
mov
sarb
sti
jb
in
mov
adc
enter
or
mov
jle
rorl
aad
popa
inc
pop
pop
and
xorb
xchg
dec
mov
cmp
mov
and
mov
cmp
pop
jns
data16
mov
stos
mov
or
push
mov
repz
push
into
ljmp
scas
sub
xchg
out
xchg
repnz
out
mov
mov
sbb
dec
mov
and
fidivrl
or
popf
dec
mov
mov
aad
xchg
mov
jo
ss
sbb
imul
out
fbld
push
icebp
in
mov
mov
outsl
jbe
jecxz
adc
ret
cmc
sub
xchg
and
das
das
lcall
sub
stc
pop
out
rorb
repz
mov
int3
scas
xchg
inc
push
xor
cmpsb
aaa
movb
insl
movsl
dec
mov
lds
jle
jle
jmp
movsb
push
jl
imul
sti
iret
inc
mov
outsl
jg
inc
and
ds
xchg
dec
xlat
sti
pushf
mov
mov
pop
dec
sbb
adc
jae
pop
iret
pop
inc
mov
push
push
ja
adc
movb
andl
roll
sahf
mov
out
les
add
pop
xor
push
or
add
cs
ret
aas
jb
loop
lret
pop
sbb
and
xchg
sbb
push
sbb
fnstenv
or
lret
loop
jecxz
aas
test
mov
fwait
pop
iret
hlt
stc
add
popf
lret
cmp
xorl
mov
jns
mov
clc
cmpsl
enter
das
out
jne
mov
popa
add
inc
and
push
das
ficompl
and
ljmp
mov
into
sub
xchg
pop
inc
rorl
jle
jle
mov
pusha
xchg
and
mov
and
jbe
mov
jne
inc
xor
stos
jmp
mov
or
insl
or
xor
ret
push
adc
rol
and
pop
push
ds
outsb
ja
repz
sub
pop
fstl
clc
dec
sbb
out
fstl
mov
xor
pop
sbb
or
aad
xchg
loopne
stos
sbb
pop
decl
jne
ja
mov
js
imul
push
dec
fwait
and
dec
shll
out
les
addr16
ja
sbbb
repz
stos
popa
mov
faddl
sbb
testb
or
add
jo
test
sti
push
insl
mov
ljmp
fstpl
or
iret
in
scas
into
ret
cmc
lret
xchg
xchg
std
in
add
xor
add
push
and
add
xchg
jl
sbb
ret
mov
enter
inc
xchg
pop
aaa
or
stos
in
ret
movsb
sahf
add
dec
nop
shll
adc
jbe
pop
and
loop
insl
mov
je
mov
orl
lcall
sahf
inc
ds
mov
cmp
gs
ds
ret
jo
cmp
out
stc
mov
adc
mov
push
jo
xor
sbb
pop
js
xacquire
push
out
and
and
jecxz
add
aas
and
repz
mov
cwtl
rsm
push
int
push
push
jne
fldl
jl
stc
mov
aaa
pushf
in
mov
repnz
mov
push
fistl
adc
and
push
pop
lds
popf
insb
and
jb
dec
arpl
call
jecxz
shrb
pop
sbb
repnz
loope
xor
mov
pushf
add
out
push
jge
xchg
divb
mov
jle
add
ret
pop
mov
or
test
add
in
aaa
adc
mov
add
aaa
mov
in
adc
clc
pop
cmp
jno
loope
shlb
in
mov
mov
cmpsl
out
pop
movsb
outsb
xor
gs
push
imul
shll
sahf
cs
inc
mov
in
stos
xchg
icebp
mov
inc
jae
dec
pop
stos
mov
push
and
adc
out
xchg
flds
or
cmpsl
test
aas
movsb
or
pop
jg
icebp
mov
inc
popa
mov
fbstp
call
or
jmp
cmpsb
pop
jecxz
xchg
insl
pop
dec
or
test
mov
loop
fnstenv
and
in
sub
aad
pusha
fisttps
and
sub
or
shl
inc
xchg
or
in
add
fnsave
lea
cmp
nop
ret
mov
leave
divb
sbb
subl
mov
sub
adc
xor
es
and
xor
push
adc
mov
mov
shr
gs
add
pop
in
test
mov
push
lods
mov
dec
sub
xor
mov
xor
js
call
mov
pop
dec
sub
ljmp
sub
loopne
call
fidivl
test
shl
repnz
push
insb
mov
rcll
mov
push
sbb
test
or
ljmp
cmp
imul
les
sub
pusha
mov
jb
int3
test
bnd
dec
pop
and
leave
fisttpl
inc
mov
sbb
fdivrs
cmp
inc
jae
pushf
subb
dec
xchg
lcall
repz
sub
xchg
sarb
jmp
int3
js
clc
flds
push
rcrl
and
mov
jbe
daa
jp
mov
les
push
movsl
cwtl
mov
imull
xor
pop
dec
addb
mov
orb
inc
imul
ss
pop
add
inc
pop
fnstsw
stos
in
arpl
xchg
jg
dec
mov
jns
xchg
pop
inc
xor
push
push
and
nop
push
xchg
mov
cmp
adc
notl
outsl
mov
in
fidivl
notl
frstor
jge
cltd
push
adc
or
xor
or
js
or
pop
mov
adc
sahf
xor
mov
push
loope
sbb
loopne
lea
inc
out
movb
in
adc
sbb
ficompl
pop
or
test
ret
jo
push
adc
sbb
fwait
push
xlat
aas
push
test
jle
dec
mov
lods
xor
jl
dec
push
pop
fidivs
sub
and
inc
xchg
fiadds
rolb
ret
enter
imul
dec
pop
lcall
call
pop
test
jns
mov
pop
insb
cld
inc
push
jae
sahf
sub
or
add
xchg
in
jb
xchg
adc
mov
dec
dec
jno
add
pushf
cli
fwait
mov
cmp
pop
gs
push
fstps
xchg
xor
in
rorl
loope
pop
insl
cmp
push
fistl
aam
pushf
sbb
dec
clc
test
mov
dec
les
lret
into
jns
mov
gs
xchg
mov
inc
loopne
lahf
jnp
call
mov
leave
mov
inc
sub
jno
mov
mov
mov
sub
jg
in
lcall
cli
js
sbb
jno
jae
loope
pop
jecxz
pop
test
cs
cmpsb
adc
rcl
mov
mov
cmc
iret
dec
scas
ficoml
in
jne
xchg
in
sarl
xchg
mov
dec
push
push
push
es
sub
and
xchg
lea
fwait
xlat
dec
paddq
mov
jae
push
xlat
dec
addr16
sub
cli
sbbl
outsb
cmp
and
add
pop
pop
cmpsb
rcrl
xlat
subps
xchg
popf
pop
mov
nop
test
bound
push
das
rcr
sub
je
ret
cmp
or
jp
loopne
pushf
cmp
mov
dec
jne
push
test
sbb
pop
insb
sahf
jg
lea
sub
dec
add
ret
divl
sub
stc
ffree
data16
mov
or
ljmp
imul
lret
mov
je
pop
rcrl
lods
cmc
jb
dec
inc
mov
movsl
lock
aam
adc
cli
push
xor
in
enter
xor
and
xchg
mov
das
or
adc
rol
mov
inc
pop
mov
pop
out
mov
lcall
xchg
repnz
inc
push
mov
mov
fsubl
dec
test
divb
dec
xor
sbb
scas
scas
cmpsl
loopne
call
nop
loop
jb
xchg
aad
les
cmp
das
rol
pop
xchg
hlt
fidivl
clc
push
sub
push
lds
imul
cmp
insl
sub
icebp
mov
test
loopne
mov
inc
cmp
les
cwtl
adc
pushf
mov
imulb
add
or
sarb
leave
xlat
shrb
cwtl
int
test
call
leave
pop
or
ret
ja
inc
push
add
xchg
sbb
pop
xor
and
pop
mov
cwtl
lcall
test
mov
stos
push
dec
in
push
cmpsb
fimuls
dec
cli
jmp
cld
xor
xor
xor
test
and
jbe
or
fbstp
imul
mov
fnstenv
cmpsb
xchg
add
ficoml
pop
and
out
notl
lret
ljmp
sub
mov
xlat
push
nop
pop
aaa
mov
aas
adc
jg
fdivrl
sbb
dec
subb
mov
dec
xor
add
jo
mov
out
into
sbb
jno
je
xchg
out
into
sub
popf
inc
pop
je
dec
filds
sub
pop
mov
mov
jl
std
imul
shrl
adc
lea
lcall
cmp
pop
pop
test
insb
aaa
pop
xchg
add
test
sbb
adc
mov
addl
jno
js
cmp
adc
sub
lret
in
mov
sub
sbb
or
sbb
nop
mov
call
and
push
pop
iret
or
jge
sbb
jae
ficoms
stos
xchg
clc
xor
in
int
icebp
mov
mov
rcr
pop
sub
or
or
out
lret
lods
jne
xchg
xor
fidivrs
leave
mov
dec
mov
adc
cmp
cmp
popa
aas
cs
mov
stos
jp
fsub
cli
orl
xor
ret
adc
push
pop
lea
cltd
loop
cmp
add
pop
in
je
and
mov
sbb
xor
and
pushf
mov
adc
stos
sbb
mov
insl
andl
mov
leave
imul
xor
push
je
xor
insb
xchg
mov
addb
pop
mov
je
stc
push
ds
mov
nop
pop
scas
cmp
xor
dec
and
jp
or
pop
adc
faddl
inc
test
jge
fidivrl
cmp
sbb
aam
sub
dec
add
repz
xor
dec
jmp
aas
shll
sub
js
pop
ljmp
xchg
dec
add
adcl
or
ja
out
inc
imul
in
cmp
mov
inc
insb
lods
xchg
mov
stos
sbb
hlt
or
pop
je
es
jmp
movsl
pop
insl
vphaddbq
xor
sub
cmc
jne
aas
and
dec
sbb
mov
rclb
mov
push
loopne
inc
fld
jle
scas
or
pop
jge
test
mov
dec
inc
flds
out
imull
sbb
sub
push
js
adc
cmp
push
cmpsb
jecxz
mov
lea
sbb
mov
add
and
inc
lods
std
les
push
es
into
inc
fdivrl
enter
ficoml
rcll
gs
jne
push
cmp
xlat
lcall
enter
cwtl
lret
dec
cmp
adc
leave
dec
dec
shll
lds
mov
in
cltd
adc
pop
dec
jecxz
mov
mov
jmp
and
inc
jp
aad
mov
and
mov
mov
cmc
inc
dec
dec
jge
pop
inc
mov
push
inc
es
jmp
xor
sahf
and
jb
mov
push
xor
mov
jle
in
adc
les
lret
push
and
cmc
or
mov
das
sbb
repnz
and
int
hlt
inc
mov
pop
jne
ljmp
or
int
xchg
inc
xchg
es
ss
add
adc
adc
adc
and
rcr
and
dec
rolb
mov
ret
push
xor
xchg
cmpsb
leave
inc
or
or
das
add
lds
sub
orb
or
jbe
out
aaa
nop
xchg
insb
pop
test
scas
lock
shll
and
mov
pop
dec
pop
xchg
out
testb
das
and
add
lods
cmp
push
jnp
outsl
movsb
xor
xchg
jmp
test
mov
ljmp
scas
cmc
push
pop
gs
ja
mov
ja
pusha
shlb
lock
mov
pop
aas
jle
add
push
iret
sbb
xchg
xor
or
je
arpl
and
pop
adc
mov
xor
adc
imul
out
cmp
ficoml
repz
xchg
cld
cltd
out
int
xchg
shll
mov
insl
stc
fisubrs
cmpsb
pop
out
das
cmp
cwtl
repnz
dec
jge
push
sub
xor
jecxz
test
push
aas
mov
pop
shll
fdivl
xchg
dec
adc
fimuls
aas
gs
mov
pusha
add
xchg
mov
clc
ret
sbb
hlt
push
dec
in
dec
push
add
or
and
add
pop
fnstcw
pop
cmp
stc
bound
dec
jno
add
adc
add
cwtl
rorb
test
mov
push
sub
in
jne
jne
lds
mov
mov
ret
push
into
dec
dec
shll
and
cld
clc
sub
loope
sbb
rorb
mov
push
je
in
push
into
pop
xor
or
and
out
mov
pop
mov
in
push
rorl
add
or
add
cmp
fsubrs
jg
cmc
lret
inc
leave
and
xchg
push
inc
adc
xor
add
lods
push
pop
xor
in
scas
mov
adc
xor
pop
or
pop
lds
inc
das
cmp
lock
rorl
ds
xchg
imul
loope
aam
jns
mov
pop
aas
aaa
pop
jmp
jmp
inc
shlb
cmp
aad
pop
adc
mov
mov
movsb
mov
cmp
ret
scas
and
leave
mov
pop
jno
arpl
in
mov
adcb
lret
add
and
inc
mov
xchg
mov
mov
xor
xorb
xchg
data16
nop
pushf
xor
inc
scas
dec
cmpsb
add
pop
cmp
pop
lret
sbb
inc
repnz
adc
sbb
fsubrp
inc
dec
push
movsl
aad
cli
inc
mov
aad
std
and
sarl
daa
pushf
pop
cmpsl
sub
neg
hlt
test
push
lods
testl
addb
loope
scas
xlat
testl
lcall
cmpsl
or
inc
pop
xlat
aad
lcall
pop
lea
aaa
sbb
push
cwtl
xchg
fst
outsb
mov
insb
mov
push
inc
xor
popa
lahf
jl
mov
scas
cwtl
xor
ret
and
gs
pop
xor
imul
loopne
es
add
dec
xor
jbe
dec
dec
dec
push
push
out
inc
pushf
push
aam
outsb
fwait
repz
dec
pop
xchg
stos
aaa
sub
aam
lods
movsl
nop
dec
outsl
mov
push
aas
lock
ret
push
xchg
jno
jl
add
nop
stos
loope
test
ds
inc
cmp
ret
push
divb
and
mov
pop
pop
jp
call
dec
cmp
pop
pop
and
push
inc
mov
dec
cmpsb
scas
ljmp
imul
clc
inc
mov
ss
inc
rorb
fwait
inc
leave
push
adc
orb
cmpsb
mov
scas
cld
popf
in
xor
dec
enter
pop
jle
sbb
jb
jns
dec
pop
stos
sub
mov
xor
lods
add
cmp
push
jle
xor
ds
xor
lods
and
dec
sbb
xchg
pop
dec
ds
push
sub
sub
aaa
push
pop
pop
jp
jge
mov
pop
sbb
fldl
pop
push
and
cmp
movsl
mov
or
sahf
xchg
add
imulb
pop
int3
inc
mov
pop
mov
sub
es
mull
mov
cs
loope
js
fnstenv
repz
imull
repnz
jne
test
outsb
mov
mov
enter
movsl
cmp
adcl
ja
lods
cmp
mov
pop
inc
arpl
cltd
fiaddl
sbb
adc
cmp
pop
stos
daa
arpl
push
push
inc
or
cltd
test
inc
repnz
lret
insb
les
pop
lods
mov
mov
addl
dec
xchg
adcl
jl
jge
add
lret
lahf
mov
les
add
mov
pop
movsb
stc
scas
cmpsl
repz
sub
adc
test
or
cld
dec
std
mov
rcrl
je
mov
mov
adc
pop
outsb
ljmp
pop
lods
push
dec
dec
mov
xlat
inc
pop
test
ljmp
stos
sahf
je
push
add
and
addb
inc
mov
mov
stc
loope
inc
or
insl
or
inc
jbe
ljmp
shrb
movsb
lahf
jb
andb
push
ss
movsb
xchg
xor
adc
pop
sub
repz
jb
ret
adc
shll
fistpl
mov
pop
push
cmpsb
iret
aam
movsl
adc
push
adc
inc
jmp
sbb
push
test
adc
xchg
xchg
mov
mov
mov
clc
xchg
inc
imul
repnz
and
ljmp
sbb
shrl
sub
scas
aaa
pop
mov
inc
dec
in
inc
clc
jns
stc
lret
hlt
pushf
and
test
dec
cmp
imul
and
push
std
ret
push
pusha
arpl
test
inc
push
jecxz
pop
mov
push
cwtl
into
xor
mov
out
sub
jne
jnp
mov
and
lret
insl
cmp
mov
mov
lea
clc
int
test
add
dec
cltd
hlt
mov
aas
cmp
stos
jbe
scas
popa
mov
dec
call
cmc
mov
jnp
jae
lods
jmp
out
push
adc
cmp
pop
pop
xchg
pop
xchg
jl
out
pop
std
popa
lahf
nop
cld
scas
mov
push
push
icebp
scas
add
arpl
jg
and
cwtl
xchg
inc
xor
pop
jl
sub
ret
lods
cmp
movsl
lock
repz
imul
sub
push
pop
mov
mov
sub
lret
test
inc
push
push
cli
pop
push
data16
andl
insb
mov
push
lahf
push
or
mov
inc
stos
mov
mov
cmp
cltd
or
inc
std
mov
cld
iret
popa
jo
aaa
cmpsb
ja
jne
xchg
mov
xchg
jmp
mov
push
movsl
fmull
lahf
mov
add
jno
mov
add
enter
mov
cltd
xor
xchg
sbb
ret
shl
cmpb
mov
in
mov
adc
pop
jnp
xchg
ds
loop
push
inc
ja
gs
sub
sahf
in
mov
adc
stc
arpl
movsl
push
aaa
mov
xchg
fdiv
sbb
shr
enterw
testb
bound
push
xor
icebp
shl
loop
aad
and
testl
push
mov
mov
jge
cmp
imul
adc
aas
and
and
pop
out
mov
loop
ljmp
cmpsl
sub
shr
mov
in
push
mov
push
lcall
frstor
adc
inc
jo
add
pop
adc
hlt
outsb
add
flds
jae
pop
mov
fdivrl
push
adc
push
cmp
add
fimull
lcall
jmp
jp
movsb
xchg
outsb
push
stos
into
fisubrl
ss
shl
mov
loope
xor
stos
ret
lea
xor
loop
enter
mov
adc
mov
je
mov
fistl
xor
jne
mov
add
repz
stc
rcrb
adc
addr16
push
ljmp
loop
outsb
movsl
incb
pop
movsb
push
cmpsl
insl
mov
lock
xchg
jecxz
loop
das
test
les
dec
mov
sub
insb
and
pcmpgtb
shll
lods
or
cltd
aas
jnp
test
std
iret
dec
push
push
inc
test
rcll
adc
outsb
lock
dec
or
sarb
mov
jb
pop
lahf
lock
dec
sub
leave
xor
jo
mov
mov
sbb
xchg
xor
sub
fiadds
sub
fistl
in
test
pop
setbe
mov
lds
insl
popf
insl
fnstenv
insl
xchg
shlb
jo
out
cmp
and
or
arpl
shll
mov
mov
xchg
insb
inc
push
cmp
mov
dec
mov
inc
out
xor
rcrl
inc
jnp
mov
in
pushf
inc
jnp
jg
jbe
and
mov
cmp
xor
ja
inc
mov
and
and
into
jmp
hlt
push
sub
int
dec
push
sar
xor
pop
push
roll
idiv
push
mov
out
xchg
dec
pop
cmovno
mov
xor
fnstenv
mov
data16
lods
jae
ret
push
cmp
jo
mov
rorb
sysenter
stos
sub
jbe
dec
cmpsb
adc
mov
xor
pop
popf
jb
cmpsb
jmp
or
fcmovnbe
les
insl
or
sbb
xchg
add
mov
stos
rclb
push
dec
test
or
aas
push
or
push
inc
scas
xchg
mov
pop
into
jmp
or
mov
mov
add
lods
or
loope
outsl
je
bswap
fwait
insb
ficoml
push
or
lock
pop
mov
pop
ds
out
hlt
adc
cli
fistpll
and
call
xorl
in
jnp
sub
or
jecxz
movsb
cmp
mov
dec
or
and
out
adc
mov
lcall
xchg
cmc
aam
mov
out
daa
sbb
jecxz
jb
pop
jle
fbld
daa
sbb
loopne
lods
xor
and
scas
pop
lods
xchg
pop
cmc
int
stos
sub
fucomp
sbb
adc
cmp
repz
mov
mov
push
xchg
imul
arpl
mov
repnz
testb
sub
shrb
cld
fdecstp
test
dec
mov
in
subl
in
clc
cwtl
test
mov
or
mov
jns
and
mov
ss
mov
les
xchg
push
dec
movsb
ret
adc
mull
pusha
dec
or
sbb
mov
jge
and
outsl
mov
dec
mov
out
adc
pushf
jb
inc
out
pop
or
or
lcall
pushf
ljmp
outsl
icebp
ret
push
leave
push
ds
imulb
or
aam
inc
jl
aas
loope
and
cmp
push
or
mov
sub
dec
ss
loop
xchg
scas
sbb
ret
adc
ret
rorb
lcall
aad
or
movsl
mov
fwait
enter
jle
call
fbstp
pop
ret
adcl
sub
mov
cltd
adc
std
popa
les
sub
lods
popa
mov
lods
shl
loope
and
movsb
clc
icebp
adc
adc
adc
div
adc
adc
cmp
sbb
pop
mov
push
in
jno
sarb
dec
xchg
hlt
data16
dec
mov
jl
call
dec
add
mov
cmp
pop
sahf
xchg
and
jle
shlb
push
es
out
pop
inc
xchg
js
xchg
les
arpl
mov
andl
xchg
sub
sub
jns
fs
and
pop
or
test
fwait
idivl
or
add
cmp
mov
das
scas
jb
insb
dec
xchg
mov
pop
pop
add
shrb
in
data16
lock
fstps
dec
dec
sahf
sbb
jno
add
fs
mov
cmp
adc
ret
dec
inc
xorl
stos
sub
fcmove
divb
lods
out
push
call
stos
jnp
inc
mov
cmp
js
inc
cmp
lods
dec
sbbl
dec
sti
bound
inc
push
roll
into
sbb
jle
mov
lret
mov
aaa
push
mov
movsl
xchg
rol
xchg
dec
lcall
adc
mov
arpl
cmc
pop
push
movsb
js
lock
add
mov
add
cmp
xchg
das
sbb
loop
mov
push
int3
enter
data16
lcall
jle
sbb
mov
lret
les
pop
jle
dec
aam
clc
cmp
outsl
dec
and
push
xlat
cmp
add
lahf
xchg
jnp
or
icebp
push
adc
push
xchg
lods
adc
addl
and
test
inc
ret
shrl
cmp
lods
jl
jecxz
mov
sub
mov
daa
fcmove
sub
movb
rcrl
rcrb
pop
rol
xor
mov
mov
daa
fsubr
loope
in
divl
sub
dec
inc
addb
outsb
flds
mov
out
arpl
xor
sbb
ss
leave
in
xor
jge
push
fstpt
pop
lret
pop
push
xor
add
push
in
imul
in
das
xor
xchg
ja
out
mov
scas
jno
fbld
mov
and
ljmp
xor
fsubs
negl
xchg
fmulp
dec
lods
jg
xor
or
es
mov
adc
nop
jecxz
sbb
pop
sub
jle
in
fsub
jp
sar
mov
xor
xchg
imul
sbb
loop
inc
pop
fcmove
adc
jb
in
testb
inc
inc
dec
pop
cld
push
bswap
in
jo
jae
inc
sbb
loop
adc
imul
test
aaa
xor
mov
xchg
in
jecxz
sub
lret
jbe
adc
jns
rcrl
mov
pop
pop
inc
xlat
ret
cmp
out
ret
sti
cmp
jge
loope
cmp
cltd
loopne
fnstenvs
adc
mulb
mov
cmpsb
and
out
in
xor
pop
rcr
mov
add
mov
push
in
divb
popa
or
lods
daa
dec
lods
insb
and
cmp
ja
push
or
test
data16
lcall
pop
cs
mov
decb
add
roll
pop
shrl
scas
pushf
sub
insb
das
bound
repz
add
push
pushf
ja
loopne
in
xchg
inc
aam
lea
orl
int
and
pop
insl
sub
pop
ret
mov
dec
aaa
imul
cmp
les
adc
jl
and
cwtl
insb
shll
or
imul
xor
ds
cmc
testb
xchg
mov
fs
xor
push
mov
inc
xor
add
lods
mov
stos
outsl
sti
xchg
out
fnstsw
pop
dec
test
sub
jl
hlt
sbb
jp
rcr
mov
insb
add
sbb
fdivl
dec
add
pop
pop
stos
imul
mov
insb
dec
or
jp
adc
mov
sbb
in
add
sbb
mov
and
pop
or
jg
xchg
jg
sub
ljmp
dec
divb
inc
shl
jae
les
add
test
sub
mov
lret
jo
mov
mov
mov
sub
scas
inc
iret
nop
mov
icebp
dec
fsubrl
bound
fbld
lods
xor
call
cmp
mov
push
add
adc
fs
sahf
and
pusha
test
call
cltd
jnp
hlt
or
aad
insl
and
and
daa
xchg
fnstsw
or
cmpsb
ja
in
or
mull
imul
pop
arpl
and
adc
js
mov
sahf
repz
in
jle
xor
mov
xchg
fs
fsub
mov
push
xor
ss
int
or
cs
jne
and
popa
dec
out
add
mov
or
jmp
nop
movsb
js
mov
ficompl
jmp
mov
ljmp
pop
rorl
pop
cmpsl
lret
jb
mov
inc
insl
adc
stos
frstor
xor
jo
mov
test
fadd
xor
enter
adc
scas
xchg
adc
mov
in
clc
xchg
mov
into
lahf
lret
out
stos
outsl
cmc
sbb
out
lret
cmp
jmp
pop
jge
sbb
cwtl
in
and
push
imul
aad
jae
fwait
sbb
push
and
adc
jl
dec
sub
leave
lcall
pop
mov
pushf
adc
in
sub
jns
mov
xchg
xor
out
push
sbb
jnp
and
push
cmpsl
adc
stos
cmc
mov
addl
xchg
push
fisttpl
scas
dec
out
sub
sbb
outsl
js
inc
ss
add
in
cmp
jl
xlat
aad
inc
decl
add
mull
lahf
or
repnz
push
scas
mov
mov
xchg
cmp
push
enter
jne
jo
popf
push
jns
adc
push
fwait
in
jbe
jb
lds
icebp
fiadds
push
dec
punpckldq
and
cmp
add
movsl
xchg
and
js
jecxz
pop
arpl
andb
mov
cmp
lods
xor
adc
or
or
mov
or
push
push
addr16
pop
lcall
or
int3
push
cltd
mov
jecxz
sub
sub
in
or
aaa
add
stc
pop
lds
ret
cs
fildll
cli
fsubl
sbb
sbb
data16
out
mov
sub
dec
dec
adc
fsubl
push
adc
cli
and
dec
dec
fcompl
test
pusha
pop
fsubrl
xchg
jo
add
sub
add
je
jp
fcmovbe
pop
fnstcw
mov
add
je
daa
jle
add
xchg
repz
movsb
lea
cmp
pop
or
or
jne
pop
xor
shlb
sub
sbb
lahf
or
sub
sbb
cmpsl
push
addr16
sub
rol
mov
push
out
push
inc
out
in
lea
mov
icebp
push
mov
imul
jbe
cmpb
add
inc
pop
hlt
push
es
adc
aaa
mov
push
mov
lea
sub
inc
ja
pop
xchg
sahf
pop
and
sbb
insb
adc
adc
push
cmc
mov
inc
shll
sahf
insl
xchg
lret
adc
cmp
dec
mov
jecxz
je
test
mov
add
sub
dec
cmp
mov
push
jle
movsb
aad
sbb
insl
fdivrs
pop
outsl
test
xchg
and
push
repz
dec
sbb
fadds
jg
adc
scas
mov
insl
mov
mov
push
or
push
adc
shlb
and
cmp
sub
cmp
push
in
fldenv
xchg
fnstenv
adc
scas
pop
in
mov
loop
aad
mov
pop
in
loop
je
js
pop
stos
scas
rcll
mov
jns
mov
outsl
test
jno
mov
jns
push
mov
fisubs
lcall
xchg
inc
repz
je
adc
divl
lcall
rorb
and
xor
xchg
gs
mov
scas
push
test
fdivs
inc
aas
push
inc
sub
mov
or
xor
inc
js
jb
adc
dec
or
imul
dec
sub
jne
xor
insl
lods
ret
mov
lods
add
cmp
enter
inc
dec
adc
jns
pop
sbb
or
insb
pop
mov
xchg
cmc
inc
ret
xor
rclb
test
rorb
mov
loopne
iret
aas
loope
pop
ja
aam
push
cld
lret
std
imul
test
loope
enter
loopne
add
cmpsl
adc
push
int
xorl
mov
nop
sbb
add
aad
or
lds
xor
rorb
push
iret
shl
es
daa
mov
cmp
cmp
sub
sbbl
jmp
andb
daa
out
push
test
push
hlt
pop
or
pop
jb
xchg
in
std
movsl
lret
and
gs
dec
mov
add
dec
test
fstl
or
mov
or
nop
mov
cs
push
mov
loop
dec
insb
inc
jno
mov
lock
hlt
mov
shll
lock
dec
cmpsl
pop
test
inc
adc
orb
jg
ljmp
cmp
dec
fucompp
pusha
mov
mov
sbb
xor
fldl
xchg
in
xchg
inc
fisttpl
push
ret
addr16
adc
addr16
cmp
mov
sbb
lea
cmp
add
inc
cmp
or
or
outsb
shrl
movsl
aaa
rep
js
jge
in
mov
cmp
cmp
push
jb
push
pop
mov
lock
xchg
mov
or
in
jecxz
mov
mov
lods
mov
das
aas
out
adc
mov
jae
stos
xor
xor
push
iret
lret
pop
rep
out
test
jmp
adc
pop
mov
inc
into
test
xchg
fbstp
cmp
inc
sbb
cli
sub
pushf
inc
push
jnp
push
pushf
bound
sbbl
movsl
rolb
inc
pop
addl
add
popf
mov
cli
xchg
test
ss
mov
sub
dec
stc
mov
mov
dec
fidivrs
out
mov
xor
jl
mov
adc
mov
mov
loopne
sbb
inc
out
fucompp
int
hlt
icebp
sbb
insb
fwait
jb
add
cmp
sub
leave
cmpsl
push
out
mov
lods
jns
pop
xor
cwtl
jb
lret
pop
xchg
in
adc
sub
dec
neg
xor
repz
in
out
into
and
jae
sub
sbb
gs
shl
jbe
or
push
lds
ret
popf
and
fstl
and
iret
sub
lea
cmpsl
sbb
js
jmp
leave
ret
sbb
pushf
pop
push
mov
insb
push
mov
iret
out
dec
push
sub
mov
movsb
int
xor
popa
sbb
iret
insl
call
xor
rcll
in
imull
faddl
mov
pop
stc
test
shll
push
mov
pop
sbb
decl
outsl
mov
pop
xchg
pop
jge
not
mov
push
rorl
nop
imul
adc
dec
outsb
sub
hlt
sbb
adc
inc
xor
or
push
outsb
xchg
lds
xchg
mov
pop
imul
popf
dec
and
adc
negl
xor
sbb
or
imul
mov
add
in
xor
jp
sub
lock
jecxz
outsl
jge
inc
push
loope
sub
mov
xor
push
lret
shrl
dec
lcall
ret
aaa
movsl
pop
andb
mov
fwait
lds
cs
lock
mov
ret
push
and
sub
xchg
push
and
mov
test
push
jne
into
sbb
inc
mov
sbb
jae
fsts
jns
adc
pop
pop
cmc
pandn
gs
inc
add
lock
imul
push
mov
idivl
movsl
dec
cltd
inc
or
sub
or
ror
hlt
adc
push
adc
mov
loope
mov
jle
out
xchg
rclb
adc
ss
shll
fsubrl
xchg
repz
dec
fistpll
jmp
imul
mov
mull
push
enter
inc
mov
jns
add
sbb
inc
jmp
mov
sub
addr16
or
in
popf
in
rolb
add
cli
fsubrs
push
or
sub
pop
insb
jle
out
fsts
mov
inc
inc
cwtl
cs
pop
neg
jmp
enter
adc
sahf
mov
and
jg
sbb
push
les
jno
and
aas
nop
or
push
aad
add
mov
pop
inc
push
mov
lea
movsb
test
cmpsl
jecxz
adc
cmp
xor
mov
mov
dec
mov
sub
mov
adc
fisttps
inc
pop
dec
add
pop
mov
mov
fstps
push
or
mov
jae
aaa
hlt
lods
mov
push
ss
stos
sbb
mov
push
js
insl
scas
xlat
add
cltd
mov
add
scas
cmp
push
in
stos
clc
mov
mov
outsb
inc
pop
data16
or
cmp
cmc
xchg
loop
cli
in
jp
lods
scas
and
repz
aam
imul
jmp
mov
test
lds
pop
loope
xor
or
xor
icebp
and
or
popa
subl
mov
pop
pop
mov
fidivs
je
cli
mov
int3
mov
mov
pop
ret
jmp
fnstsw
inc
add
test
call
mov
cmp
jno
int
pop
xor
add
add
loope
xchg
mov
sbb
shlb
inc
ja
fstl
pop
lret
aam
adc
call
aad
loope
xchg
mov
iret
sbb
xchg
lahf
popa
cmp
fistpll
cmpsb
imul
xchg
pop
outsb
jno
fcompl
mov
cmpsl
mov
jmp
mov
inc
push
out
and
test
fcmovnbe
sub
insb
jne
add
icebp
ljmp
jnp
mov
cs
or
cmp
push
clc
out
sbb
sub
xchg
pushl
xchg
fbstp
stc
or
pop
xor
lds
das
xchg
pop
movsb
sub
cmp
and
into
pop
mov
pop
out
inc
aaa
mov
jp
subb
lahf
das
test
nop
xor
jbe
xchg
in
cmp
sbb
stos
cmc
mov
pop
xchg
unpcklps
xchg
mov
cmp
cmp
out
mov
fcmove
adc
adc
stc
call
fcomps
mov
mov
sti
ds
arpl
lcall
or
mov
or
fcmove
pushf
mov
mov
adc
mov
in
pop
xchg
push
add
push
xor
addb
mov
jb
jbe
ret
jno
aam
and
iret
sbb
adc
mov
adc
lahf
adcb
aaa
addr16
mov
pop
jl
leave
xchg
inc
xlat
sub
add
outsl
xor
fidivs
add
data16
adc
add
fwait
clc
mov
rclb
fstpt
mov
insb
outsb
push
mov
xchg
movsb
push
out
adc
inc
mov
cmpsb
cmp
dec
std
fnstsw
jmp
cld
ljmp
imul
push
xchg
xchg
clc
fsubs
dec
and
cmp
mov
js
or
shl
jmp
fcom
scas
xor
fimuls
or
clc
fcmovnb
pop
call
cmc
adc
lret
loopne
lret
jecxz
je
subl
rol
ja
push
pop
jnp
push
sbb
nop
ret
and
cmp
loopne
xor
cld
mov
inc
cmp
push
mov
je
dec
addr16
pusha
jle
faddl
pusha
inc
ljmp
aad
jmp
enter
push
inc
mov
adc
pop
rclb
and
es
inc
pop
andb
mov
int
sub
fiadds
push
fcmovne
mov
imul
add
outsb
rcrb
mov
into
dec
pop
inc
mov
sbb
push
enter
sahf
mov
mov
shll
pusha
sub
enter
xchg
pop
mov
aas
test
cmp
call
inc
lds
mov
aad
fsubrs
int3
mov
cmpsb
lods
adc
xchg
xor
push
repnz
out
cli
daa
mov
scas
jecxz
xchg
lods
sti
xchg
jmp
dec
xlat
ljmp
pop
jecxz
not
cli
jb
gs
cwtl
test
and
add
mov
popa
adc
out
and
ret
inc
out
jg
setg
out
loopne
pop
imul
adc
test
fsubrl
cltd
mov
jbe
xchg
mov
pusha
insb
adc
jmp
data16
adcb
ret
push
jecxz
nop
sbb
xor
sbb
pusha
out
add
pop
in
ss
xor
cmp
sahf
push
xorl
iret
xor
jne
sub
xchg
dec
jbe
pop
adc
xchg
enter
popa
sbb
aad
inc
insl
push
dec
adc
das
gs
divl
xor
mov
test
stos
aas
inc
push
mov
inc
stos
mov
out
lods
sbb
std
int3
and
and
movsb
les
sub
or
mov
shrb
lcall
dec
sbb
inc
jecxz
dec
shr
mov
aas
push
orb
add
mov
data16
push
jmp
jns
push
push
outsb
ds
test
sub
inc
aad
lahf
cmpb
aas
add
icebp
iret
int3
and
add
sub
mov
jl
cmpsb
fimuls
inc
les
addr16
pop
cmp
stc
cmp
jo
jmp
or
repz
insl
gs
jl
sbb
and
fstps
out
call
test
aam
mov
push
int
dec
into
js
out
xchg
sbb
cmp
sar
and
pop
lods
and
jo
pop
xor
aam
mov
mov
aad
into
adc
into
cmp
test
dec
aam
cs
and
mov
testl
out
fstps
nop
inc
idivl
jnp
mov
or
cmp
dec
lret
lods
aaa
int3
push
lods
aam
int
add
hlt
aad
mov
insl
mov
jbe
jno
sub
add
aaa
repz
pop
cmp
mov
pop
leave
and
cmp
repnz
out
inc
dec
xchg
loope
mov
sti
andb
rcrb
rcrl
push
test
mov
inc
or
cmp
adc
adc
ss
xor
push
sbb
ss
rcr
inc
mov
hlt
jo
xchg
shlb
push
jns
sti
mov
lahf
dec
mov
xchg
loopne
enter
pop
push
mull
add
out
stc
mov
bound
rclb
out
xor
lea
test
adc
icebp
lahf
or
xor
mov
adc
enter
dec
or
imul
push
imul
dec
jns
adc
mov
fimuls
jmp
jp
nop
das
gs
adc
dec
mov
dec
or
in
and
pop
adc
int3
daa
and
out
xlat
sbb
xchg
mov
and
mov
mov
dec
inc
insl
jmp
popf
scas
or
dec
cmp
repnz
dec
pusha
inc
call
loope
rcrl
subb
mov
push
sarb
ds
cltd
and
lcall
cmp
lea
icebp
mov
mov
xchg
adc
sbb
xchg
jae
push
jmp
push
jno
outsl
pop
or
cmp
std
leave
jmp
aaa
addb
xchg
pop
fbld
mov
add
fists
or
push
sar
inc
jg
mov
sbb
lock
mov
shlb
mov
stos
and
xchg
jae
aaa
sub
sbb
bound
inc
lods
test
outsl
jecxz
test
dec
push
pop
pop
or
lret
inc
jae
pusha
popa
cld
stc
andl
mov
mov
cmp
lods
inc
fcoms
mov
cli
xchg
movb
out
out
jbe
inc
out
xor
in
ret
jl
std
les
push
ja
cmpsb
lahf
repnz
mov
in
scas
mov
adc
mov
fidivl
pop
mov
and
daa
inc
dec
jp,pt
cmc
xlat
into
mov
and
pop
and
sti
aad
mov
push
dec
loopne
jge
data16
mov
and
or
das
xor
xorb
and
movsb
iret
pop
int3
sub
insb
pop
scas
sub
test
arpl
mov
popa
bound
aam
push
sub
sbb
xor
xchg
jns
icebp
push
sub
push
and
fwait
sub
xor
push
jne
cmpsb
lcall
gs
popf
xchg
test
cld
cmp
jbe
pop
rcr
pop
lret
shrb
jecxz,pn
inc
stos
test
push
cwtl
add
dec
scas
add
push
movsl
fstpt
xchg
jb
insl
dec
dec
cs
mov
dec
je
pop
ljmp
cmp
push
xor
pop
mov
jge
mov
pop
addr16
cmpsl
fdivl
stc
or
mov
pop
push
cmp
inc
push
repnz
cwtl
in
inc
mov
fnstenv
mov
or
mov
sbb
xchg
or
loop
mov
decl
cld
push
push
dec
neg
es
das
dec
outsl
ja
lds
push
fs
add
cmp
cs
mov
mov
lcall
hlt
nop
jbe
cmpsl
ror
es
insl
jle
orl
pop
sti
out
xor
adc
xchg
lds
adc
in
pop
lcall
out
xchg
mov
pop
aad
outsb
lds
push
pop
adc
adc
test
sub
in
xchg
jne
outsb
xor
lahf
insb
sub
aam
xor
negb
inc
mov
arpl
mov
mov
mov
xchg
adc
movsl
xchg
jmp
cmp
je
or
jns
xchg
sbb
test
mov
jmp
mov
scas
popf
adc
pop
movsb
dec
push
clc
shrl
add
aam
xchg
xchg
mov
jnp
dec
fs
ss
inc
add
leave
into
jo
test
add
icebp
cmpsl
sub
push
mov
jns
sub
inc
jae
pop
jo
or
and
shr
xor
cmp
cmp
inc
int
bound
or
adc
ret
lcall
test
clc
mov
aaa
mov
into
out
adc
ljmp
mov
imul
cli
ret
and
rcr
testl
adc
sahf
push
cli
adc
jl
imul
lahf
clc
cltd
or
sbb
xchg
mov
xor
pop
adc
fs
rcll
ret
lds
cwtl
cmp
js
out
xor
adc
inc
jne
jo
pop
pop
jb
pop
pusha
push
sarl
clc
repz
jae
push
pop
add
aas
sub
xchg
push
pop
std
icebp
pop
and
jmp
xchg
fxch
mov
push
int
dec
cld
cmpsl
xor
in
sub
adc
inc
sub
cltd
out
push
xchg
mov
add
cwtl
mov
mov
aad
pushf
push
cmpsl
addr16
loope
xchg
pop
lock
inc
imul
inc
ret
js
add
inc
inc
pop
in
leave
out
mov
push
repz
or
add
out
js
jne
test
mov
push
pushf
and
cmpsl
add
decb
mov
adc
fadd
addl
dec
addr16
mov
and
sbb
cmc
mov
mov
jp
aam
push
mov
in
das
xchg
outsb
jle
movsb
push
jno
jbe
mov
or
or
cmp
pop
dec
or
mov
or
xor
cmp
daa
shrb
push
dec
stos
or
frstor
dec
popf
xchg
dec
sbb
into
mov
xlat
notb
xorl
call
pop
je
mov
cmc
loope
cld
xchg
push
jmp
mov
adcb
sbb
bnd
test
jg
pop
inc
sbb
lock
cmp
push
jecxz
mov
aam
inc
xor
pop
clc
and
mov
int
pop
das
shll
add
lahf
stos
iret
hlt
sub
pop
lock
aas
stc
adc
adc
mov
pusha
arpl
cmp
mov
int3
sub
cmp
xchg
adc
pop
push
test
enter
jecxz
or
cmp
or
decl
mov
je
add
or
rclb
mov
jp
lods
inc
cmpsl
inc
sbb
stos
mov
arpl
mov
inc
inc
mov
adc
jb
fincstp
loope
cld
in
xchg
pop
ds
lea
into
xchg
jnp
mov
decl
mov
popa
stos
fs
rclb
rclb
bound
and
pusha
mov
sbb
mov
push
dec
repnz
xor
dec
pop
test
nop
jg
jnp
mov
push
push
in
pop
shrb
rolb
ja
gs
repz
jo
out
fistpl
scas
cmpb
dec
daa
mov
and
test
out
push
cmp
int
bound
dec
and
ret
or
cld
psllw
xlat
sbbb
popa
sub
xchg
in
and
dec
add
xchg
orl
jns
std
ljmp
xchg
mov
xor
adc
adc
sar
stos
mov
stc
ret
jne
add
jmp
js
pop
push
mov
lcall
popf
push
fistpl
adc
mov
cmc
xchg
xchg
packsswb
pop
dec
adcb
and
fsubrl
int
adc
mov
add
dec
adc
stc
mov
cltd
sbb
push
and
sbb
inc
int
and
popa
call
cld
xor
addr16
or
ret
mov
arpl
fidivrs
jle
mov
mov
push
pop
sar
lods
cmpb
cmp
aad
mov
mov
or
pushf
rolb
stos
xchg
mov
mov
inc
or
inc
adc
insl
test
mov
add
push
jae
adc
movsl
and
ss
rcr
mov
je
jle
js
cli
stc
loope
call
push
test
push
loope
arpl
sub
push
shrl
mov
jo
xchg
xchg
les
and
mov
fwait
dec
imul
sbb
inc
or
ss
out
push
ds
adc
cmpb
push
pop
lods
lods
xor
movsb
mov
push
popa
addr16
scas
mov
xchg
in
cmp
sub
dec
outsl
out
push
in
out
mov
push
les
pushf
mov
stos
scas
scas
jno
arpl
enter
fldt
xchg
jbe
sbb
xorb
or
push
out
popf
xchg
mov
xchg
sbb
inc
sub
jae
sub
ret
ja
fcomps
pushf
xlat
add
mov
dec
nop
dec
xchg
xor
andb
jo
pop
jl
nop
sbb
mov
adc
ficoms
mov
mov
dec
lods
sar
xchg
sub
xchg
lock
iret
sahf
dec
shrl
adc
into
inc
dec
mov
xchg
jo
lds
nop
lahf
pop
ljmp
inc
mov
xor
and
push
inc
sbb
outsb
mov
lret
pop
mov
pop
in
cmp
push
mov
in
rol
cmpb
jbe
push
std
inc
push
ret
add
dec
test
rorb
sarb
xchg
jge
ja
xlat
scas
mov
scas
xchg
cmp
cmp
gs
and
xchg
fs
adc
lods
pop
rorb
adc
aaa
xor
in
cmpsb
arpl
int3
push
je
neg
or
std
or
add
fldl
mov
mov
xor
adc
cmpsb
leave
leave
cmc
adc
clc
loopne,pt
sbb
push
or
jmp
stc
add
mov
jbe
jp
ret
mov
mov
imul
data16
popa
shl
mov
push
add
movsb
push
push
test
xchg
movsl
hlt
inc
pextrw
xchg
fadd
push
jo
call
cli
adc
and
adc
or
rorb
pusha
std
adc
xor
je
popl
dec
scas
sbb
popf
loope
test
push
pop
fldl
cmp
and
stc
mov
test
pop
cmp
popa
or
xor
pop
cmp
cmp
jno
dec
aas
inc
ret
or
out
cmpsl
mov
stos
test
in
mov
push
push
dec
inc
mov
mov
mov
in
outsb
ja
fmull
cmp
xchg
cmp
cmp
mov
cwtl
mov
or
add
sub
and
pop
daa
movsb
mov
pop
rcl
cmp
xchg
adc
and
fisttps
aad
pop
cmpsb
ret
sahf
mov
push
push
imul
fimuls
pushf
mov
nop
cmp
xor
cltd
jecxz
add
mov
mov
adc
arpl
negb
push
xor
mov
daa
inc
ret
lcall
stos
int3
fcomps
es
addl
aad
cmc
imul
outsb
or
pop
push
xor
sub
sti
aam
inc
ja
loop
pop
jecxz
fnsave
and
call
xchg
mov
jp
jge
lcall
dec
cmpsl
xchg
mov
inc
fisttpll
inc
jb
addr16
rclb
push
sbb
push
adc
xchg
adc
jecxz
fmuls
out
sbb
dec
in
sub
and
lcall
cmp
hlt
or
paddsb
addr16
roll
pushf
push
fiadds
stos
lods
lcall
mov
mov
add
outsb
enter
in
test
and
xor
leave
or
insl
shl
sub
imul
loope
mov
pop
data16
pop
push
ja
lock
fmull
call
jmp
push
sbb
in
xor
sbb
bound
leave
mov
mov
jl
stos
and
and
add
std
int
or
push
xchg
jg
add
push
aaa
and
jnp
mov
jp
sub
mov
xor
mov
mov
dec
cmp
or
xor
stc
dec
insl
push
cwtl
and
mov
clc
pop
pop
int3
das
fimull
stos
lea
xchg
or
sub
lcall
mov
cltd
mov
dec
out
dec
pop
in
mov
cwtl
pop
dec
jbe
imul
mov
sub
mov
sar
in
sbb
mov
call
or
pop
mov
jmp
stos
repz
dec
fildl
mov
cld
int
scas
mov
das
xchg
mov
sti
adc
cwtl
add
xchg
fsubs
mov
std
bound
lock
int
or
sub
or
xchg
lahf
mov
iret
cmpl
inc
jbe
test
decb
sbb
jae
test
push
dec
pop
and
cmp
fcmovnbe
adc
shlb
add
movsl
loopne
xchg
mov
inc
fsubrl
inc
pop
dec
and
and
xor
insb
scas
addr16
hlt
xor
icebp
adc
push
xor
lods
dec
rclb
inc
push
or
adc
mov
sbb
stos
pop
std
cmpsl
inc
add
jl
call
cwtl
fucomp
sub
adc
lods
pusha
fwait
jg
fsin
sbb
movl
jg
push
pop
out
jle
sti
test
mov
movsb
mov
div
int3
sbb
orl
lahf
push
dec
scas
sbb
cmp
sub
or
pop
sub
shlb
and
cmpsb
dec
cmpsl
cli
iret
clc
xlat
inc
test
jae
sbb
in
scas
or
xlat
add
pop
pop
sbb
decb
push
push
lds
xchg
pop
mov
movsl
adc
or
xlat
movsl
data16
push
pop
fwait
xlat
dec
add
push
int3
jmp
adc
addl
ljmp
mov
sub
inc
mov
test
rorb
iret
mov
xchg
cwtl
mov
pop
xchg
jno
pop
repz
pop
into
fstpl
stos
push
mov
mov
fs
ja
sub
and
mov
pop
sbb
in
icebp
xor
ret
dec
jno
or
sub
filds
imul
lea
xchg
testb
stos
rcll
push
je
outsl
out
loopne
jo
xor
push
in
lods
sub
adcl
add
scas
outsl
movsb
cwtl
and
mov
pop
inc
xor
xchg
adcb
filds
aaa
ss
mov
pop
test
add
gs
sub
stc
mov
mov
in
add
mov
sbb
les
js
js
xlat
lahf
jnp
in
pushl
mov
inc
mov
cli
outsl
lock
cmpsb
xchg
xchg
into
sub
int
push
dec
loopne
movsl
jle
test
lret
sub
xor
pop
dec
test
push
testl
rclb
push
dec
enter
aaa
jmp
repz
negb
cwtl
pop
cmp
stos
pop
stos
sub
inc
pop
push
sub
pop
xchg
mov
xor
and
xor
xlat
push
out
lock
sbb
shrl
pop
jnp
flds
loopne
cmp
dec
cmp
xchg
divl
cld
mov
mov
fidivl
maxps
dec
je
jnp
les
stc
ds
pop
imul
cli
ds
mov
or
pushf
xchg
mov
aad
cmp
imul
ljmp
fcom
mov
stos
sahf
je
mov
xlat
aam
push
mov
lret
mov
and
xchg
mov
sbb
fsubrs
xchg
repnz
mov
mov
push
xchg
mov
adc
int
jmp
das
jbe
clc
push
or
nop
mov
aad
cltd
cli
inc
arpl
mov
mov
mov
fmuls
test
mov
push
sbb
pusha
mov
lcall
iret
fsubs
aam
jnp
sahf
mov
lea
push
xor
jbe
popl
mov
sarl
xchg
mov
xlat
sub
hlt
imulb
lret
jno
sbb
sub
mov
clc
xchg
mov
mov
xor
jmp
popf
xchg
push
leave
or
outsb
ror
mov
bound
test
jge
inc
sub
dec
xchg
gs
or
loope
push
cmp
mov
inc
push
cmc
mov
fnsave
adc
pushf
hlt
orb
out
xor
xchg
hlt
nop
repz
dec
ja
jge
mov
sub
adc
testl
xchg
bnd
loop
rclb
dec
out
push
popa
mov
and
lcall
out
dec
es
ss
jbe
inc
sarl
mov
out
inc
fstp
mov
loope
push
or
ja
out
xchg
cmp
insb
cmp
aad
adc
sbb
sub
cmp
pop
or
lock
movsl
filds
pop
push
lea
in
cwtl
sbb
jns
lret
jno
enter
pop
sub
repz
shlb
std
lods
pushf
cltd
sbb
xchg
iret
mov
int
popa
mov
jno
jno
jbe
push
jns
or
mov
jp
fiaddl
xchg
jno
or
mov
cmpsl
rcrl
and
shlb
xor
repz
inc
int3
lock
loop
adc
mov
dec
mov
pop
or
in
ja
pop
jge
call
jae
push
mov
das
outsb
movsl
push
pushf
mov
hlt
inc
pop
push
lods
shlb
loopne
outsb
mov
cmp
or
xchg
or
fs
adc
inc
out
mov
mov
push
sahf
inc
lods
out
sarb
loopne
sbb
sbb
addr16
mov
sbbl
cmp
call
in
das
cltd
jg
xor
pop
mov
mov
jle
jb
or
lea
xor
into
movsl
cmp
das
out
pusha
flds
fwait
call
pusha
xor
and
into
xchg
sarb
jnp
sbb
arpl
stos
stos
nop
dec
xchg
adc
xchg
clc
rorl
jo
push
shlb
jns
adc
cwtl
xor
jg
pop
inc
lcall
inc
cld
cmp
adc
mov
jbe
add
roll
mov
push
int3
mov
xchg
dec
cmp
shrl
fwait
sahf
ljmp
int3
mov
ja
lods
cmp
inc
mov
or
jbe
lods
or
ds
jge
cld
es
cmp
stos
mov
les
fisttpl
inc
push
mov
ret
cmp
cmp
test
gs
jns
insb
filds
inc
mov
lods
dec
stos
sub
jmp
sahf
jne
stos
xor
pop
loop
jg
xchg
mov
mov
add
stos
lret
and
stc
arpl
mov
out
adc
inc
out
sub
adc
xchg
shrl
push
cmpsl
mov
cmc
cmp
orl
lret
ja
lock
jecxz
std
mov
jo
outsb
lcall
xchg
jnp
rclb
jg
pop
dec
push
pushf
loop
test
pop
cmpsb
loop
inc
lods
imul
mov
fisttpll
pop
inc
dec
cmp
pop
cmp
fidivs
cmp
inc
loop
pop
mov
mov
ret
inc
push
dec
push
mov
into
in
mov
sbb
inc
xchg
and
mov
inc
jns
push
pop
pop
inc
pop
mov
ret
push
dec
xor
adc
mov
push
xchg
out
dec
lods
daa
loop
shrb
pop
add
sbb
or
shrb
dec
stos
adc
movsl
popa
loopne
dec
sub
push
shrl
xchg
clc
adc
ret
push
inc
test
sbb
and
pusha
in
movq
fildl
adc
imul
sbb
ftst
mov
inc
sbb
scas
out
xor
dec
xchg
enter
shlb
test
push
loop
sahf
cmp
ficompl
rcll
push
insl
stc
cld
lret
mov
sbb
std
add
sbbb
jbe
xor
arpl
xchg
into
jae
or
loopne
pop
and
cmp
cld
jo
cmc
incb
sbb
mov
add
push
mov
cmp
xor
jo
les
movlps
mov
adc
push
or
daa
jl
push
fadds
adc
aaa
add
sub
push
aad
sub
sub
jle
fcoml
mov
fs
arpl
incb
or
xchg
fistpll
dec
mov
stos
cmp
leave
fcmovnbe
mov
stc
mov
enter
out
jmp
mov
hlt
cltd
stos
push
push
lock
push
mov
aad
sti
xlat
cmc
cmp
pop
lret
shlb
ficompl
sti
subl
mov
call
idivb
cli
jl
jo
push
adc
add
xor
test
jmp
pusha
push
inc
jo
and
dec
aas
std
adc
sbb
adc
insl
icebp
dec
mov
lcall
das
push
aaa
pop
add
mul
mov
xchg
je
xor
cmpsb
add
cmp
aad
dec
sahf
insb
dec
fstpt
pushf
push
xlat
cmp
adc
stc
notl
jbe
neg
daa
sub
test
adc
cmp
insb
and
out
rol
filds
cmpsb
sub
in
mov
inc
inc
fadd
pusha
adc
and
adc
outsb
jmp
out
sub
or
sbb
loop
mov
orb
lret
inc
or
push
rcr
lods
adc
std
int3
lods
repz
notb
xchg
add
ljmp
ja
lret
mov
mov
inc
out
into
xor
cmp
xor
pusha
out
adc
iret
arpl
cli
mov
jae
mov
cs
mov
imul
daa
decb
test
idivb
sub
or
outsl
fsubs
pop
and
lcall
adc
fmul
push
cli
adc
cmp
mov
decl
inc
mov
jl
fistpll
add
add
add
jo
sub
mov
shrb
mov
xor
jae
adc
dec
mov
popf
insl
imul
push
fldt
inc
xorl
or
lcall
inc
jecxz
inc
push
mov
dec
out
mov
ret
mov
ljmp
imul
jnp
dec
xchg
fldt
fcoml
add
call
lahf
and
adc
pop
or
arpl
sbb
loop
mov
fcmovnb
cltd
adc
aaa
ljmp
xchg
pop
push
cmpsb
and
or
inc
mov
mov
dec
inc
loop
cs
mov
in
inc
pusha
stos
cmpsl
js
sahf
pop
fmul
mov
insb
test
push
mov
loopne
ljmp
jmp
mov
inc
mov
xor
add
xchg
test
pop
pop
inc
push
mov
mov
shl
es
in
and
lret
inc
inc
cmp
add
mov
lcall
pop
repnz
jae
sub
inc
dec
adc
xor
stos
sti
outsl
pusha
test
in
fs
call
mov
cmc
jle
test
imull
push
jo
mov
jp
push
movsb
aaa
test
fists
icebp
imul
divb
or
ret
cld
and
add
mov
push
push
out
js
cmpsb
int3
xchg
and
scas
xchg
icebp
mov
inc
insl
in
dec
sbb
imul
subb
sub
sbb
or
push
ret
imul
pusha
pusha
in
xchg
sbb
dec
adc
sub
enter
adc
pop
das
cltd
xlat
jp
cld
ret
out
mov
mov
push
and
push
inc
das
out
icebp
in
or
nopl
inc
pop
jb
cmp
mov
push
xchg
and
movsb
clc
sarl
mov
hlt
leave
inc
jge
cld
lcall
pop
into
les
pop
mov
adc
test
aaa
lret
dec
lret
jmp
sbb
data16
je
decl
jg
mov
subl
add
sbb
mov
dec
dec
testl
stc
hlt
adc
xchg
out
pop
es
ljmp
inc
pop
cmp
nop
dec
movsb
out
mov
call
cmpsl
lods
xor
sbb
pop
fdivrs
lods
fiaddl
or
mov
lcall
fstl
clc
fucomip
insb
xlat
mov
fldl
mov
cmp
dec
add
push
jbe
mov
inc
lods
xchg
into
out
std
push
arpl
push
or
cld
aam
nop
in
fsubr
cmp
lcall
xor
push
ds
xchg
invlpg
fs
pop
add
fsubr
pop
sti
lea
loopne
lret
sbb
cld
pop
cmp
pop
push
das
sub
and
movsb
test
clc
gs
push
insl
wrmsr
pop
xlat
and
mov
sahf
jecxz
in
lods
imul
repnz
outsb
xchg
xchg
out
adc
sbb
fdivl
int3
xlat
std
in
leave
cmp
stos
and
loop
mov
lcall
sbb
mov
fisttps
mov
pop
mov
sahf
fs
call
or
add
dec
mov
das
fsubr
or
stos
sbb
push
push
fs
in
adc
ja
lahf
and
push
cltd
mov
or
mov
cmp
rorb
add
in
cwtl
stos
cmp
cmpb
out
ljmp
sbbb
in
mov
add
sbb
cwtl
mov
jp
xlat
sbb
cld
and
jo
filds
sbb
pop
push
daa
xchg
test
out
cltd
jp
lahf
push
push
out
cmpsl
mov
mov
pop
xchg
pushf
dec
mov
and
mov
sub
fisubl
mov
cmp
mov
stos
push
popa
add
xchg
jbe
jne
sbb
push
mov
fists
aas
jnp
xchg
into
sbb
xchg
sub
adc
addr16
adc
shr
call
sbb
lds
insl
aad
cld
ja
jge
hlt
enter
mov
mov
mov
mov
out
mov
push
cmp
adc
mov
adc
cmp
sbb
mov
mov
mov
dec
aas
in
adc
mov
mov
mov
in
xchg
cwtl
lods
stos
ss
xchg
inc
mov
cmp
mov
inc
add
into
into
shld
cld
jecxz
fstpt
mov
shlb
jg
lret
insb
in
pushf
sub
xchg
push
sub
pushf
out
adc
sub
ss
daa
jl
sub
jo
hlt
xor
shrl
add
stos
and
adc
jge
pop
pop
es
mov
lret
lea
les
fiaddl
xor
aas
adcl
out
push
aaa
mov
lcall
jno
adc
dec
jbe
out
xor
mov
xchg
fs
mov
daa
xchg
lds
dec
xor
lea
jl
or
push
and
andl
or
cld
mov
mov
ljmp
xor
call
xor
add
pop
xlat
mov
cmp
xor
cmpsb
xchg
bswap
popa
mov
scas
pop
sub
out
push
in
adc
push
push
mov
bound
or
inc
xor
or
dec
mov
jmp
pop
pop
int3
and
sbbl
inc
into
pushf
cltd
inc
bound
mov
mov
pop
mov
mov
dec
mov
sub
jb
hlt
les
arpl
mov
shl
nop
es
mov
imul
adc
cltd
outsl
fsubrs
xor
pushf
adc
cmpsl
xor
xor
lret
ret
lret
and
add
sub
mov
popf
shll
mov
lahf
add
nop
and
lahf
cmp
jne
lret
lcall
mov
sbb
push
jle
xor
dec
dec
mov
lods
movsl
cmp
fidivrl
jecxz
pop
lods
repz
imul
pop
daa
pusha
sub
int3
shlb
leave
or
call
xchg
sahf
lret
je
jp
pop
push
je
lods
pushf
lods
push
inc
cmp
or
loope
jno
or
xchg
jl
sub
jae
mov
add
cwtl
scas
xor
stc
and
mov
adc
cmp
mov
scas
loop
imul
in
sub
stc
rclb
icebp
pop
add
or
lods
sbb
mov
add
jmp
jnp
sub
lahf
push
daa
jmp
inc
xchg
cmp
bound
cmp
sbb
pop
fwait
movsl
xchg
push
mov
mov
popfw
inc
sbb
xor
mov
int
popf
nop
movsl
or
stos
mov
fsubl
jle
in
or
mov
pop
inc
repz
gs
pop
add
xchg
repz
into
push
mov
push
nop
ja
fidivrs
cli
icebp
jae,pn
adc
std
les
fcomps
sahf
jecxz
ljmp
push
aas
repnz
cmp
in
stos
xor
mov
ds
xchg
cmp
push
push
sbb
sti
mov
mov
dec
aam
adc
cwtl
into
dec
lea
xor
jns
xlat
push
int
xlat
xchg
or
xor
dec
mov
popf
out
jo
sub
add
jns
iret
pop
xchg
aam
push
fdivrs
xchg
adc
xchg
mov
pop
fmull
push
push
fwait
fs
pmaxsw
scas
or
das
in
cmp
push
orl
mov
mov
pop
mov
lods
jb
sub
repnz
fcmovb
cmp
sbb
jne
imul
jae
or
rorb
sub
cli
lods
jge
nop
in
mov
cmc
jnp
mov
sbb
addr16
test
add
sub
test
push
in
inc
call
push
popf
stos
inc
out
rclb
mov
inc
jg
push
adc
mov
adc
jecxz
jl
sbb
pop
xor
adc
cmp
addl
lea
idiv
rolb
pop
sti
arpl
mov
push
test
mov
pop
cmpsl
cmp
pop
int3
movsl
sbb
arpl
les
adc
mov
inc
mov
jno
mov
sbb
cmp
adc
or
incl
pop
sub
faddl
jp
pop
movups
cmp
into
inc
ret
popa
and
sti
xchg
gs
sub
xchg
and
cmp
jp
jns
or
repnz
xchg
pushf
jp
repnz
int
pusha
ss
ret
adc
rclb
insl
cmp
xor
int
je
loope
fisttpll
push
mov
mov
out
movsl
dec
xor
lahf
sbb
dec
shll
imul
les
push
add
fucomip
test
mov
mov
jae
inc
fadd
stc
push
enter
aas
call
insl
mov
mov
xchg
push
cmc
fwait
out
cmpsl
and
bound
inc
cmp
xor
in
adc
adc
mov
das
sarb
dec
out
fmull
pop
mov
adc
mov
imul
loopne
lock
sbb
test
in
cmp
mov
pop
roll
push
ret
push
or
or
xor
repz
out
inc
jae
adc
test
loopne
and
push
ret
mov
xchg
ds
fistpll
sub
cmpsl
outsl
ljmp
aaa
les
add
les
dec
pusha
sbb
fcmove
movsb
dec
and
fstps
mov
cmp
loop
mov
xchg
test
cmp
loop
rcrl
arpl
stos
mov
in
mov
scas
call
je
dec
cmp
jns
loope
xchg
mul
inc
pop
add
push
mov
xchg
push
jo
jmp
add
movsl
add
sbb
mov
pop
add
inc
imul
add
mov
or
xchg
mov
jae
repnz
pop
dec
mov
js
mov
lds
roll
lods
cmpb
push
and
or
popf
jno
xchg
stos
daa
gs
mov
sbb
inc
int
addb
and
add
loop
fmulp
or
mov
sub
ljmp
and
sub
xchg
cld
pushf
xor
out
jno
xor
aad
mov
movsl
imul
dec
xor
out
std
das
push
fidivl
test
xor
in
js
or
lret
ror
pusha
or
fldl
sbb
mov
lods
push
inc
xor
inc
mov
mov
pop
jp
mov
push
push
dec
mov
add
xchg
mov
push
cmp
sarb
sub
push
pusha
push
push
sub
jge
inc
cmpsl
xchg
and
test
stos
sbb
sbb
add
xor
out
addr16
mov
or
mov
pop
fisubrl
cltd
mov
pusha
andl
jae
adcl
push
fisubrl
add
cs
lcall
pushf
rorl
mov
into
cmpl
push
insl
out
or
push
pop
lds
push
sbb
xor
popf
mov
or
push
scas
int3
clc
fld
cmp
punpckhbw
push
fistpll
call
adc
mov
push
push
into
ss
mov
mov
insb
jnp
mov
and
aam
push
jg
bound
inc
mov
inc
cmp
mov
dec
stos
push
in
push
jmp
cld
shll
adc
or
fistps
pop
xchg
jno
ret
push
pusha
je
sub
dec
out
jb
xor
or
out
mov
jne
movsl
xorb
adc
xchg
add
hlt
jle
xor
push
aam
pop
mov
sbb
fucomi
mov
bound
stos
hlt
inc
jmp
fwait
pop
add
cmp
fs
sub
pusha
or
sbb
pop
pop
aaa
out
mov
xchg
daa
inc
cltd
inc
cmp
and
jno
push
das
sub
aas
mov
mov
xchg
fadd
cmp
and
xchg
xchg
jge
mov
xchg
icebp
pop
sub
orb
jnp
pushf
or
mov
push
add
jns
in
cmpsl
pusha
cmp
cld
sbb
stos
mov
lret
ss
or
push
ficompl
mov
int
loopne
push
pop
pop
orb
cmp
pmulhw
test
scas
mov
fistl
dec
je
movsb
inc
fisubrs
xor
daa
sub
sub
test
mov
pushf
mov
add
jo
jg
test
push
xchg
mov
mov
dec
mov
and
pop
jge
shrl
insl
sub
sub
lods
or
xor
pusha
jae
stos
add
cmc
add
xchg
pushf
stos
cmp
arpl
jae
loopne
jmp
or
pushf
jmp
mov
incb
xchg
mov
popf
ds
int3
mov
lock
jb
icebp
shlb
sahf
fildll
mov
sub
dec
push
push
addr16
push
push
mov
or
jle
stos
dec
loop
pop
lds
sahf
inc
int3
cmpsb
mov
dec
inc
pop
push
scas
mov
outsl
xchg
std
push
fs
fisubrl
add
push
add
sbb
dec
das
jne
lahf
dec
cmp
stc
jae
test
jge
jbe
cmp
cs
push
imul
pop
push
cmp
hlt
jne
cmp
scas
sbb
cmc
rol
nop
sahf
or
insl
outsb
xor
jmp
int3
jge
loope
idivl
pop
cld
add
cmp
inc
add
jge
out
jo
fcomp
call
dec
push
arpl
push
jnp
mov
out
fcompl
mov
add
cmpsb
std
jl
adc
cmp
xchg
push
dec
pusha
sbb
and
mov
xor
roll
dec
or
rcrb
and
mov
mov
jne
push
ror
pop
fisttpl
add
inc
cmp
xchg
or
push
add
fisubs
mov
repnz
jns
adc
inc
lret
mov
fiadds
lods
or
out
outsl
push
push
jg
push
in
shr
loop
cmp
flds
sar
lret
mov
inc
mov
imulb
add
inc
mov
insl
fistpll
into
mov
pop
xchg
outsl
out
and
mov
or
xor
or
adc
lahf
adc
dec
xchg
ficomps
xchg
les
xor
inc
das
mov
dec
scas
xor
dec
add
sub
test
push
adc
xor
stos
mov
add
add
pop
push
lods
enter
fst
dec
mov
aas
or
inc
jne
inc
ds
cmpl
test
jb
aas
add
mov
xchg
fidivrs
out
out
sub
inc
xchg
or
daa
adc
add
jl
inc
test
mov
outsb
bound
dec
sbb
frstor
int3
fiadds
pop
sub
jb
jmp
scas
lret
sub
lcall
push
pop
ret
popa
inc
lcall
xor
push
pop
xchg
cmp
jl
js
fnstcw
loopne
dec
test
pop
cmpsl
and
sar
xchg
dec
adc
inc
sti
dec
fs
in
mov
in
pop
push
in
mov
cmp
gs
jbe
icebp
and
jo
or
cltd
fcomip
sub
insb
xor
and
cltd
jnp
jne
sbb
mov
dec
rcl
mov
movsb
xor
fs
scas
nop
test
mov
mov
divb
xor
das
daa
mov
dec
jnp
enter
cmpsb
push
fs
or
call
loope
xchg
dec
add
pop
sbb
shl
arpl
jae
jnp
movsl
push
pusha
mov
xchg
xor
and
inc
inc
xlat
leave
pop
pop
adc
call
aas
add
int3
push
les
mov
jo
mov
roll
int
dec
fwait
cmp
push
push
mov
setl
out
pop
cmp
sti
mov
jae
mov
call
cli
gs
jo
mov
out
and
dec
mov
add
ds
xorl
lret
filds
xchg
sub
test
call
cmp
pusha
jnp
pop
push
aaa
or
mov
jnp
lock
inc
mov
sub
and
mov
and
ret
addl
loope
sarb
xchg
fwait
lock
lcall
stc
jb
bound
cmp
cmp
push
xor
aam
outsb
sti
fildl
in
or
js
jmp
movsl
das
ljmp
push
sub
int3
fisubrs
add
and
jns
cmc
repz
pushf
cmpsl
std
into
sbb
lods
rcrb
add
dec
loopne
sub
dec
in
add
push
hlt
push
xchg
fdivrs
jae
frstor
jne
jae
fsubrl
sub
ret
add
scas
call
call
fisttpl
sub
scas
into
mov
out
mov
out
shl
xchg
scas
dec
pop
fiadds
inc
xchg
pop
arpl
movsb
pushf
adc
movsb
jne
shrl
cld
addl
movsl
movsl
movsl
loope
lock
sub
aad
out
add
orb
adcw
xor
leave
movsl
daa
mov
pushf
fidivs
pop
add
ror
mov
neg
fwait
in
and
arpl
push
mov
rorl
lahf
pusha
adc
mov
xchg
cld
or
dec
inc
cmp
inc
icebp
jl
mov
in
jo
jmp
arpl
jg
dec
push
insl
imul
scas
mov
and
pop
push
mov
lock
pop
or
xor
enter
ret
and
inc
add
inc
mov
lds
pop
and
nop
add
roll
sub
incl
inc
adc
sbbl
add
inc
or
dec
notb
movsl
push
das
jl
cld
and
pop
stc
enter
jecxz
adc
inc
cwtl
je
aas
jbe
sub
out
in
pop
cmc
push
addr16
popw
aas
imul
jg
orl
mov
dec
movsb
fbld
inc
push
pushf
dec
xchg
aaa
cmp
inc
pop
cli
pop
mov
xchg
mov
lock
push
xor
sub
bound
add
frstor
adc
push
adc
dec
mov
lahf
jae
and
mov
mov
mov
dec
pusha
jnp
xchg
daa
mov
cmp
sti
and
repz
add
stc
in
mov
cld
cmpsl
xlat
and
or
rcrb
sbb
movsb
xchg
adc
xchg
loope
cli
pop
mov
dec
mov
int
push
pop
jnp
out
punpckldq
dec
lcall
fs
xchg
or
adc
divb
sub
mov
pop
or
jne
movsl
xchg
add
mov
in
les
xchg
mov
cltd
mov
pop
push
cmp
ljmp
cs
loop
dec
or
jmp
mov
icebp
or
jo
push
ds
dec
cmp
arpl
mov
ror
leave
popa
cmpsb
or
mov
ja
cmp
inc
sbb
adc
inc
mov
mov
or
pop
xor
mov
and
sub
scas
or
iret
stos
jae
xchg
aas
test
gs
jmp
call
xor
xlat
fcompl
push
cwtl
pop
ljmp
aas
push
outsl
xchg
add
loop
fiadds
hlt
fs
pop
or
mov
stos
fildll
int3
fimull
mov
das
mov
int
lret
gs
mov
mov
pop
adc
add
sar
lds
loop
aam
int
int3
sub
mov
hlt
repz
xchg
dec
nop
inc
jo
addr16
mov
movsb
pop
push
cwtl
cmp
and
fidivrl
pmulhw
je
aam
loope
mov
pop
mov
inc
cwtl
lods
out
push
inc
sti
stos
mov
cld
and
cmp
jl
int3
incb
xor
jae
fisubrl
fcmovnbe
data16
push
es
arpl
push
sub
adc
lods
push
dec
push
fimull
call
dec
fistl
pop
ds
xchg
pushf
je
loope
lcall
popa
xchg
adc
inc
mulb
mov
iret
out
in
jns
or
jne
xlat
and
nop
adc
fisubrs
mov
jae
xor
add
ss
das
pop
or
pop
mov
mov
dec
gs
les
mov
mov
cmc
jecxz
mov
inc
repz
lea
inc
or
js
add
adc
cmpsb
pop
call
outsl
fbstp
cmp
xchg
out
fcomi
and
subb
subb
lahf
push
lods
xor
mov
gs
sbb
xchg
or
mov
mov
cmp
das
cmp
cmp
in
fisttpl
mov
popf
xor
out
add
mov
rclb
xchg
loope
cmp
in
imul
push
stc
outsl
imul
int3
jo
fmull
xor
std
pop
fdivp
jp
mov
adc
push
sbb
scas
daa
cmp
or
cmp
enter
fdivrs
inc
xchg
add
xor
xchg
mov
call
testl
mov
xlat
mov
cmc
mov
pusha
mov
inc
sub
mov
push
aaa
xor
mov
cmp
mov
pop
icebp
and
lock
add
rcll
cmp
cmpsb
mov
das
push
incb
or
imul
clc
add
testl
addr16
add
inc
sbb
sbb
or
mov
jne
in
xchg
dec
or
rclb
in
pop
push
data16
xchg
xorl
scas
leave
lods
mov
or
add
and
movsb
cmp
dec
out
mov
adc
inc
jmp
js
movsl
pushf
mov
nop
loope
movsb
sbb
xor
pop
jno
ror
fisubs
test
ret
popf
icebp
jle
idivl
out
leave
stos
mov
sub
mov
cmp
push
jmp
int
push
int3
push
pop
orl
add
fistl
xchg
adc
shll
fimuls
and
out
cli
push
jns
shrb
mov
xchg
mov
xor
mov
aad
pop
jnp
xor
pop
mov
xor
pop
mov
sahf
int3
mov
lret
rcll
inc
out
pop
hlt
aam
pop
adc
ror
ss
rcrb
xchg
mov
out
cltd
jno
and
fsqrt
testb
in
insb
pushf
enter
popa
insb
pushf
push
insb
addb
inc
les
and
fwait
mov
mov
popf
pop
cmp
frstor
mov
repz
push
popa
xor
sub
in
jno
mov
adc
mov
xchg
adc
jne
imul
dec
pop
mov
or
push
push
push
or
mov
sbb
cli
jnp
test
jb
add
sub
xchg
xchg
jns
outsb
popf
ror
push
and
cmp
scas
jmp
lock
sub
popa
aad
mov
inc
pushf
adc
test
xorb
adc
push
cmp
std
stos
icebp
mov
cs
and
push
subb
sub
rcr
jg
xor
test
imul
sti
sub
sub
cmp
or
movsl
xor
iret
push
adc
adc
dec
test
add
lret
test
jmp
imull
jecxz
lret
dec
cmpsl
mov
cmp
xor
data16
fucomi
mov
lods
sbb
jbe
outsb
pop
dec
cmp
cmp
push
add
dec
dec
dec
imul
inc
popf
inc
mov
xchg
repz
addr16
fistps
sub
lcall
mov
or
pop
mov
jnp
dec
or
repz
cmpsl
jg
push
mov
sub
notl
xchg
rorb
pop
jg
lods
aaa
xchg
js
lds
loop
or
test
pusha
aad
and
adc
or
arpl
movsb
fnstsw
pop
inc
jl
shrl
mov
cmp
cwtl
jg
scas
xor
packuswb
fwait
sti
jo
sbb
lods
repz
xor
iret
aas
lods
mov
jae
sbb
stos
rcrb
int3
lcall
insb
add
les
aam
arpl
cmp
jmp
sub
mov
cli
jmp
mov
scas
clc
xor
jmp
cmp
and
nop
jb
sub
rorb
addb
bound
scas
mov
inc
mov
jecxz
mov
fwait
movsb
shl
mov
int
or
cmc
mov
add
sub
xlat
enter
out
cs
scas
shlb
dec
mov
pop
dec
jmp
flds
sbb
push
mov
int3
sub
push
es
pop
adc
scas
add
mov
adc
enter
push
pop
lret
or
shll
movsl
imul
ds
shrl
lea
xchg
insl
jle
mov
mov
xchg
mov
out
leave
adc
js
mov
dec
sahf
pusha
ficoml
icebp
push
in
pop
rorb
or
push
mov
pusha
xchg
in
nop
loope
xchg
dec
loopne
subb
sbb
mov
scas
vpminub
pop
fs
popa
push
sbb
rcll
sub
arpl
in
inc
movsb
inc
pop
das
fwait
dec
pop
pop
pop
jmp
jbe
xchg
loop
xor
xchg
jg
sub
xchg
and
xlat
leave
loopne
ror
mov
mov
sti
lods
cmpsl
movsl
mov
inc
cmp
sub
pushf
ljmp
fs
push
dec
mov
add
mov
out
cmp
jno
es
leave
mov
mov
loop
es
imul
xor
pop
sbb
sarb
jle
pushf
lods
in
lock
jno
movsb
shll
jno
fwait
lods
push
push
jno
test
push
fidivrs
push
shlb
dec
enter
fmulp
add
cmpsl
mov
iret
push
ljmp
mov
inc
pop
mov
mov
stos
das
push
nop
xor
add
add
push
or
fsubrp
inc
fsubl
cmp
mov
fcomi
mov
add
mov
sbbb
sti
adc
xor
mov
test
push
xor
add
aad
add
lds
std
jecxz
inc
orb
sbb
mov
cmpsl
loope
fcompl
sahf
test
xchg
or
in
jns
addr16
es
out
push
ficompl
xor
es
xchg
outsl
mov
or
jae
xchg
and
idiv
mov
pop
push
leave
addr16
out
iret
addl
sub
stos
jp
mov
inc
mov
rcr
lahf
mov
mov
jns
adc
gs
dec
jae
out
call
ret
pushf
pop
ficomps
mov
xchg
gs
sbb
es
ljmp
inc
mov
push
mov
jmp
insl
roll
es
int3
aaa
popf
mov
outsb
ror
mov
xchg
sbb
push
sbb
lcall
inc
push
movsb
lock
jne
gs
mov
xchg
and
sbb
loope
inc
pop
fadds
and
and
push
sbb
pusha
jnp
popa
mov
decb
insb
inc
xor
bound
cmp
sbb
and
cld
cltd
es
xchg
cmpsb
xacquire
imul
roll
lret
cmp
in
xlat
popf
mov
mov
and
dec
outsb
cmpsb
dec
test
xor
pusha
jmp
cwtl
scas
mov
fstps
fwait
push
dec
shlb
mov
xchg
and
lahf
xor
push
inc
std
push
hlt
inc
popf
xor
icebp
cmp
leave
test
inc
cmp
sub
mov
dec
mov
mov
jge
pop
lods
or
xor
dec
xchg
push
mov
scas
jae
pop
les
fwait
sub
nop
jl
pop
push
or
js
shll
sub
lds
rcrl
dec
sbb
add
arpl
fwait
mov
sbb
scas
push
and
xor
lds
sbb
mov
lea
lahf
data16
mov
xor
xchg
stos
in
stos
add
nop
sub
cwtl
sub
aaa
pop
lret
jmp
aad
ret
mov
adc
arpl
gs
lret
pusha
jmp
add
jecxz
cmp
sbb
add
inc
mov
divl
sub
ss
push
pop
mov
movsl
dec
cmp
hlt
xor
mov
fxch
and
add
mov
inc
loope
or
lret
and
lret
sahf
push
push
loop
mov
sbb
push
push
sbb
stc
cmp
out
mov
add
fdivr
and
inc
sar
pop
loope
cmp
or
push
sahf
pop
fdivs
mov
scas
testb
aas
out
lds
push
cmp
jle
stos
pop
inc
dec
mov
jbe
stos
daa
xchg
lcall
ds
xor
testl
sbb
scas
data16
cmpsb
mov
push
inc
inc
sub
push
jbe
and
cld
ja
xchg
movlps
push
ja
pop
jne
xchg
mov
and
inc
test
sbb
sbb
push
dec
cli
sub
add
in
scas
mov
lods
and
fwait
mov
test
mov
dec
shrb
cmp
jne
jbe
mov
call
mov
pop
add
sbb
pop
sahf
lret
mov
push
mov
aam
inc
dec
mov
sbb
mov
jp
mov
int3
ret
push
jle
sub
jp
int
stc
jnp
call
add
xchg
ljmp
adc
scas
pop
dec
gs
mov
cltd
scas
inc
pop
adc
je
ret
mov
lods
and
fstpt
pop
ror
push
push
pop
jo
ret
test
dec
not
ljmp
xchg
xchg
hlt
pop
push
push
shll
push
fcmovbe
out
roll
lcall
jmp
cmp
adc
in
add
sbbb
lret
aas
jge
popa
repnz
push
inc
sbb
pop
push
enter
add
js
leave
jo
sub
pop
push
xlat
cmp
movsl
imull
je
xlat
and
jg
sbb
out
push
cmp
and
rcrb
fdiv
je
cli
enter
adc
inc
mov
adc
sub
insl
sbb
sbb
pop
sub
loope
daa
add
inc
add
xor
mov
jmp
adc
xchg
add
mov
gs
xchg
inc
leave
shlb
pop
cmc
repz
xchg
dec
cmp
pop
adc
sub
lods
xor
imul
xor
mov
xchg
fistps
push
xchg
dec
mov
cltd
pushf
mov
lds
aaa
jnp
mov
pop
aad
daa
sub
jg
loope
loope
data16
stos
inc
std
mov
loopne
int3
shl
movsb
nop
mov
xchg
jno
pop
or
dec
outsb
jp
test
test
adc
mov
out
iret
mov
negb
and
or
flds
mov
andl
int
jbe
imul
adc
cmpb
sbb
and
push
rcr
gs
xor
push
push
push
pop
add
pop
xchg
addr16
jp
stos
pushf
lret
dec
adc
jmp
or
inc
jno
ret
mov
and
das
daa
or
xor
add
ss
or
adc
scas
fildll
pop
call
pop
jl
sbb
shlb
inc
imul
ret
jp
sti
sbb
movsb
lods
ss
stc
mov
rcl
cmp
or
clc
aad
lea
dec
mov
scas
adc
sub
or
mov
cmp
lret
cltd
and
dec
sbb
loop
sub
cmp
jecxz
cmp
mov
push
dec
lock
mov
stc
jb
and
enter
inc
in
repnz
sbb
fdivl
movsb
fcom
dec
cwtl
xor
and
sbb
js
cwtl
jae
xchg
push
fidivl
inc
clc
jbe
sar
notb
fcmovnb
aaa
daa
in
lds
add
or
or
dec
popf
rcr
out
adc
data16
jae
xor
xchg
dec
pop
or
add
call
les
fsubrs
lock
inc
sub
shll
js
mov
idivl
in
push
mov
mov
jg
dec
daa
xchg
es
in
mov
repz
fwait
jp
fs
mov
lock
out
mov
cmpsl
addb
rcrl
out
ja
dec
push
lahf
push
mov
inc
lea
neg
mov
xor
lea
shll
enter
mov
push
movsl
shl
icebp
lods
sti
adc
and
jecxz
xchg
inc
ret
mov
mov
push
pop
lcall
popf
aas
xor
add
insl
adc
push
sbbb
das
out
dec
arpl
mov
mov
and
mov
lock
mov
xor
into
push
aas
mov
mov
lret
push
jne
sub
mov
movsl
inc
jmp
imul
pushf
sbb
daa
lret
lock
sub
lds
jg
inc
mov
cmp
shlb
push
test
cmp
xor
mov
mov
mov
outsl
adc
or
jbe
aad
arpl
repnz
loopne
dec
loope
pop
call
insb
rorl
into
push
push
or
ret
into
cs
and
popf
sbb
lret
lods
mov
hlt
imul
shr
in
or
pop
scas
push
jo
fiadds
and
push
dec
xor
inc
mov
cmp
in
mov
out
lahf
repnz
gs
out
mov
repz
aad
repnz
xor
jmp
sbb
mov
mov
dec
test
pop
or
adc
in
mov
xor
or
les
dec
scas
std
dec
jb
xor
inc
xchg
cmp
notb
push
xlat
sub
xchg
data16
outsb
ja
inc
pop
and
shll
pop
jnp
in
mov
mov
sar
mov
inc
loop
js
daa
addr16
pop
inc
mov
xchg
and
cmp
jl
fwait
and
add
adc
shrl
mov
ja
jns
jg
leave
sub
push
call
dec
sbb
mov
cmp
jb
mov
daa
movsl
or
fs
test
mov
xchg
rcr
dec
and
push
xor
fsts
dec
jp
cltd
xchg
sub
pop
lcall
insb
push
xor
test
jecxz
cmp
pop
cvtps2pi
inc
sbb
sbb
loope
adc
test
decb
inc
xchg
sub
fstpt
rcrl
data16
lods
repnz
mov
or
push
inc
xchg
mov
repz
or
pop
push
test
push
sbb
lcall
rcrb
dec
sbb
xor
jae
in
mov
jo
rorl
pop
test
inc
mov
adc
pop
data16
shll
cmp
inc
movsb
aam
cltd
popa
jno
dec
lock
or
js
js
add
test
mov
push
or
add
popl
mov
mov
loopne
pushf
jg
adc
lock
or
jo
mov
cmpsl
mov
subb
push
imulb
push
mov
insl
jp
inc
pop
push
mov
sbb
fstl
mov
aas
push
fst
cltd
scas
mov
mov
xor
jecxz
cmpsl
push
lcall
push
dec
movsb
mov
cmp
xchg
jle
lock
xorb
xor
dec
fstpl
int3
push
outsl
aaa
pop
or
ja
cmp
loop
push
sahf
aam
fldt
sub
xorb
ss
les
jmp
imul
xchg
mov
loop
andl
xor
mov
out
shlb
arpl
or
mov
xchg
lahf
add
dec
xchg
mov
adcb
test
xchg
jge
repnz
mov
imul
cmpsl
call
dec
pop
call
out
jge
dec
jno
addr16
scas
lret
jns
stos
fmull
andl
mov
jmp
sbb
test
rol
mov
outsb
mov
inc
sbb
inc
push
sub
mov
in
ds
adc
push
outsl
out
jg
inc
test
sahf
aad
icebp
mov
push
push
jae
hlt
cmp
cmp
sbb
jmp
je
pop
push
das
ss
and
sahf
inc
testb
xor
mov
icebp
xor
and
and
cltd
orl
xchg
dec
jne
mov
enter
ss
ret
mov
ret
decb
inc
sbb
push
cmp
fwait
sub
xchg
pop
lock
sarl
aam
aam
aas
imul
clc
pop
ja
sarb
inc
jmp
sbb
std
mov
and
xor
xor
sbb
sub
ljmp
jb
push
je
mov
xchg
adc
movsl
jecxz
cmpsl
push
pusha
insl
in
xchg
movsb
adc
jae
lret
aad
dec
dec
pushf
push
inc
sti
mov
out
sub
cmp
test
test
bound
test
ljmp
in
cmp
sub
xor
mov
shrl
cli
je
jmp
xchg
lods
jl
in
add
jno
sub
das
inc
adcl
mov
mov
push
adc
xchg
out
sub
cli
adc
xchg
sub
add
jae
test
leave
jae
sbb
shl
lock
divb
jecxz
fwait
outsl
jg
inc
clc
lock
ljmp
pop
or
ja
dec
lods
mov
shrl
pop
mov
xor
or
cwtl
xchg
fincstp
ss
sbb
lea
lcall
sbb
cmp
mov
cli
fcoml
inc
mov
mov
xchg
sub
lods
push
sti
sahf
mov
int3
cmp
jge
xchg
pusha
testb
adc
mov
out
in
inc
push
dec
jno
jno
push
fdiv
mov
out
sub
dec
fst
and
int
out
sub
and
fidivrl
push
jl
pop
adc
bound
sbb
insl
je
dec
fdivrl
movsb
imul
or
scas
fucomip
push
add
testl
imul
cwtl
int
xchg
imul
push
outsb
bound
mov
das
xchg
add
and
xchg
mov
fdiv
shlb
out
sbb
push
imul
mov
out
scas
fbstp
mov
xor
lret
imul
out
js
aas
cmp
mov
shl
fcomps
push
or
adc
adc
mov
push
pushf
sbb
jbe
sub
xchg
clc
cmc
and
jg
jl
dec
jg
fmull
fistl
xor
test
notb
inc
mov
iret
pop
sub
mov
rcrb
ja
push
mov
mov
or
or
test
dec
dec
int3
adc
jbe
cli
icebp
and
out
je
sub
fmull
sbb
cltd
and
imul
mov
insl
cmp
in
xchg
xchg
iret
daa
insl
ds
insl
rcll
sti
ret
or
mov
fdivs
out
frstor
mov
inc
mov
sar
dec
das
xchg
xacquire
mov
and
xchg
lcall
cmpb
cwtl
and
sub
clc
cld
and
stc
fisttpl
in
out
mov
add
inc
push
xchg
test
je
lods
fsubrs
and
ss
sbb
inc
jne
xlat
mov
mov
xchg
xor
sub
sub
push
mov
pusha
jae
or
push
adc
ja
lahf
es
pop
or
cmp
in
inc
lea
pop
or
sbb
jecxz
mov
std
incb
mov
cwtl
lods
xor
movsb
imul
test
rclb
add
mov
cwtl
ja
inc
push
pop
aas
sbb
outsb
push
leave
inc
leave
xor
in
cmp
push
adc
in
cmp
and
xchg
iret
add
push
jg
push
sbb
shl
mov
pop
cmc
es
stos
cmpsb
gs
cmp
les
jp
shlb
jge
sbb
negb
call
loope
push
shlb
mov
fwait
pop
add
jge
push
sti
fwait
mov
cmp
pop
push
sbb
out
mov
repnz
jecxz
jbe
fistps
test
mov
sahf
cltd
in
dec
push
sub
dec
push
int
bnd
lret
adc
pop
jb
aas
pop
sti
dec
int
mov
cmp
and
inc
mov
je
inc
adc
xchg
andl
cwtl
shll
and
mov
daa
mov
in
jg
or
popf
ss
cli
push
test
mov
cmp
push
out
loop
mov
push
jmp
xor
addr16
or
jb
js
sub
jg
push
lds
mov
mov
lahf
xor
push
popf
sti
jl
stos
xchg
xchg
xor
inc
cmp
jecxz
arpl
jbe
and
fwait
das
int
sbb
sbb
bound
or
pop
and
fldenv
adc
and
pop
and
fld
xor
push
inc
lret
std
pop
fcmovne
sub
or
push
fbld
test
xlat
sbbb
sbb
push
scas
fwait
rcll
inc
fcompl
cli
cwtl
pop
in
std
push
aam
das
push
push
mov
add
das
jb
test
xchg
xorl
loope
orb
hlt
xchg
scas
dec
in
shrl
aas
fisubrs
movsl
xlat
mov
mov
push
gs
lret
mov
mov
sub
fnsetpm(287
dec
lret
pop
les
pop
dec
push
inc
jle
sub
mov
imul
mov
mov
sahf
sub
mov
stos
push
or
fnstenv
aam
ret
lcall
jmp
fmull
addr16
push
test
push
leave
aad
mov
pop
cld
mov
sub
sub
sub
insl
jb
outsb
sbb
cmp
insb
mov
test
add
addr16
push
lret
add
mov
jle
pop
cld
repnz
lcall
fcoms
jge
dec
lret
outsb
subb
push
daa
aam
fldenv
cld
stos
cwtl
inc
sub
mov
pop
add
xor
test
sbb
test
cld
roll
loopne
test
xor
push
jge
dec
lret
cmc
dec
mov
inc
pop
fildll
xor
imul
xor
fadds
add
adc
xor
jg
cmpsb
mov
sub
push
mov
jb
and
inc
out
adc
clc
and
push
and
push
push
inc
mov
fstps
sub
lcall
jg
sub
mov
lret
clc
fcoms
ljmp
into
icebp
jle
shrl
jnp
dec
data16
ds
mov
sbb
das
cli
mov
mov
jno
jnp
xor
fdivs
add
jne
sbb
and
cmp
stos
inc
dec
divl
pop
ja
out
shlb
jecxz
scas
push
cmpsb
clc
scas
inc
sbb
mov
pop
xlat
cmp
mov
xor
inc
mov
movb
mov
sbb
int3
sub
xor
jo
int
inc
mov
movsl
fwait
mov
sub
addr16
fidivrs
dec
in
mov
xchg
mov
mov
mov
sbb
mov
fcom
rcr
arpl
insl
pop
inc
pop
dec
xor
push
cmpsl
popf
mov
xchg
add
xchg
sub
call
cmc
cmp
and
sti
mov
dec
add
scas
xor
iret
stos
in
loope
jecxz
sbb
xchg
mov
jb
mov
mov
out
sub
insb
mov
cs
inc
lock
mov
push
mov
idivb
inc
dec
out
stc
pop
sub
xor
js
xchg
ficomps
test
mov
dec
stc
jnp
push
cmp
cli
fwait
ret
movsl
mov
mov
jecxz
xchg
lret
fldl
les
icebp
jcxz
mov
mov
lods
std
push
cmp
aad
sub
scas
pop
and
sub
loopne
mov
adc
xchg
sub
movsl
cwtl
movsb
cmp
imul
cltd
push
pop
adc
and
xor
in
outsl
adc
jne
aas
sbb
arpl
jl
test
sbb
mov
inc
test
adc
js
addl
hlt
inc
iret
cmp
pop
add
outsl
test
popa
gs
scas
dec
jno
test
mov
into
or
inc
dec
cmpl
lret
sbb
dec
dec
inc
neg
push
stc
sti
rorb
adc
cmp
repnz
mov
push
sbb
daa
stos
ja
and
cmp
rolb
jns
or
loop
push
popf
inc
pop
bound
sarl
fisubl
mov
cmp
mov
jmp
loopne
imull
adc
lret
pop
sub
mov
inc
mov
sub
test
les
mov
jle
jo
cmpb
sub
push
inc
fwait
clc
dec
cmp
pop
dec
and
mov
aad
and
jle
sbb
mov
mov
subl
sbb
xor
and
leave
imul
pusha
cmpsl
out
xlat
rol
and
arpl
stos
fdivrl
dec
fdiv
sub
xor
jg
test
jmp
sti
int
jecxz
push
shrl
lea
ss
ret
xchg
xchg
stos
and
lret
in
jne
mov
and
mov
movaps
or
daa
pop
test
pop
mov
add
dec
test
inc
mov
into
push
out
sbbb
add
shll
xchg
inc
cmp
lods
std
adc
rcl
fwait
cmc
pop
sub
out
fldcw
pop
nop
call
sub
jae
stos
cmp
cmp
xchg
and
sbb
mov
arpl
adc
push
add
push
jne
repz
jl
out
scas
xor
pop
mov
out
sub
pop
xchg
mov
cmp
pop
mov
mov
sarb
loop
jae
movsb
cmp
mov
loope
pop
pop
stos
xchg
imul
in
push
mov
and
mov
loop
lret
setno
push
stos
lahf
call
sti
pop
xor
sub
pop
mov
xchg
ret
pusha
fcompl
cmp
mov
arpl
inc
and
int
ret
xchg
sub
pop
stc
fsubrl
sbb
push
cmova
xchg
stos
out
call
cmp
xchg
sub
mov
fwait
push
xchg
lods
adc
pop
insb
adc
push
daa
push
pusha
loop
sbb
adc
jno
adc
fs
aas
aas
xor
jge
jge
in
adc
fs
cmp
data16
push
mov
inc
xor
dec
sbb
stos
dec
add
add
push
and
pop
pop
in
loop
mov
xchg
mov
jle
xchg
xchg
imul
inc
and
push
push
push
ja
test
out
push
adc
dec
subl
and
mov
dec
fs
xchg
mov
sbb
mov
add
mov
xor
mov
cmp
dec
dec
in
ret
push
add
fldcw
fcompl
xchg
inc
inc
push
mov
enter
add
jno
push
jmp
mov
xor
sbb
rol
add
add
and
repnz
cmp
mov
inc
mov
pop
daa
pop
or
popf
add
lret
push
sbb
scas
or
mov
int3
or
leave
jnp
movsb
jl
push
bound
lock
jmp
jo
shl
ret
xchg
sub
fcoml
test
lods
jb
and
cli
sub
cmp
sti
mov
decl
push
xchg
dec
and
stos
sub
push
and
loopne
pop
mov
cmc
and
in
xor
aaa
mov
jg
and
andl
mov
xchg
ljmp
out
mov
or
outsl
dec
xlat
lock
add
repz
je
jecxz
sub
jns
lods
mov
inc
mov
mov
shrw
lods
fistpll
xchg
cmpsb
mov
sti
adc
rcl
inc
mov
xchg
xchg
xor
test
push
add
loopne
popw
dec
mov
movsb
xchg
fs
lahf
or
pop
scas
sub
and
ja
mov
aaa
lock
rolb
mov
xor
ja
cwtl
jmp
sub
xlat
sub
addr16
in
xor
scas
pop
jecxz
scas
cmpsb
xchg
adc
repnz
loopne
xchg
inc
jge
mov
pop
lods
dec
mov
call
sti
outsl
lods
inc
pop
pop
pop
mov
xchg
lds
fnstenv
divl
loop
pusha
lahf
stos
pushf
xchg
into
es
push
mov
enter
cmpsb
sti
loope
add
sbbl
ss
out
iret
fimull
mov
mov
mov
xor
sbb
push
cmp
inc
dec
adc
pop
movsb
sbb
add
fdivrp
xor
icebp
lret
js
pop
jmp
lret
pop
leave
mov
loopne
cmp
aas
add
and
cmp
mov
adc
decl
mov
lret
popa
sub
int
dec
into
jnp
in
mov
jle
push
nop
lods
and
inc
lock
paddb
adc
mov
push
push
pop
add
stos
pop
arpl
xchg
addl
dec
push
fidivl
enter
fdivs
mov
jle
gs
dec
repz
cmp
filds
addr16
in
xor
stc
jp
outsl
sbb
adc
test
add
pop
sar
ret
int3
sbb
aad
ret
rcrl
std
jle
xlat
ja
xlat
jmp
adc
aad
test
ret
popf
imul
outsb
in
xchg
add
pop
sti
andb
ror
jmp
and
pop
out
add
mov
pusha
iret
push
ret
cmp
xor
mov
maxps
push
xchg
push
das
out
inc
pop
sub
fimuls
mov
mov
fnsave
mov
fadds
fistpll
xor
mov
push
mov
fistpl
mov
mov
subb
adc
sahf
xor
dec
ror
mov
adc
mov
in
sbb
jp
or
repnz
adc
xchg
aas
loopne
shl
inc
inc
mov
dec
iret
insl
pop
hlt
mov
inc
xor
shrb
ljmp
call
mov
mov
push
int3
and
adc
ja
mov
inc
dec
in
in
mov
pop
sbb
fidivl
rcrl
mov
jp
adc
jge
movsl
rclb
subl
into
cmp
inc
or
mov
xchg
xchg
push
pop
in
pop
sahf
lock
mull
mov
lret
mov
loope
mov
and
mov
aad
pop
test
jle
push
repz
push
mov
xlat
jl
loop
pop
aas
les
repnz
xorps
fistps
push
sbb
adc
xor
sbb
inc
add
add
cmp
pop
fwait
push
daa
std
xor
sahf
xchg
pop
in
cmp
or
xor
mov
js
loop
into
int3
lds
aas
mov
popf
call
lods
pop
xchg
cmpsl
call
ficompl
std
push
inc
adc
dec
ja
pop
in
cwtl
pop
je
xor
ja
pop
jecxz
ret
jnp
into
sbb
xorb
xchg
adc
jp
movsl
mov
mov
jl
cmp
lret
add
jnp
arpl
fucomi
mov
arpl
pop
cmpsb
fmuls
mov
call
call
flds
lods
lret
fldenv
int3
lret
imul
inc
cs
cmpsb
cmp
mov
rcll
or
jns
popf
or
jbe
into
dec
sub
pop
xor
xchg
jle
aam
sbb
inc
cmp
add
cmp
mov
stos
les
mov
cmp
imul
inc
leave
scas
mov
cltd
adc
outsl
pop
pushf
dec
xchg
mov
pop
dec
rcrl
ja
mov
cld
mov
call
cwtl
ja
inc
add
xchg
les
pop
cltd
cmp
notb
es
fwait
cmpsb
test
jecxz
out
std
mov
gs
test
test
xchg
push
les
jmp
xor
lret
mov
mov
test
sub
sub
jnp
pushf
sbb
sbb
cmp
scas
jge
mov
mov
cwtl
pop
int3
adc
mov
mov
xor
push
rcr
out
incl
adc
ja
decb
jnp
inc
bound
in
data16
mov
into
pop
iret
cli
jne
jnp
pop
out
add
lds
adc
decl
pop
mov
pop
cltd
cmp
gs
sub
lahf
sahf
pop
sti
add
cmp
cmp
dec
repz
sbb
out
add
pop
jecxz
shlb
das
scas
outsb
movsb
stos
addr16
mov
inc
js
imul
jl
lret
cmp
leave
cwtl
push
insl
sub
rol
call
and
xor
nop
ficoml
cmpsb
stc
js
sbb
jecxz
cmpl
mov
xchg
and
jge
imul
out
adc
jmp
inc
pop
xchg
adc
sub
push
or
add
negb
pop
adc
push
daa
pop
inc
adc
cmpb
in
cltd
fs
lret
jnp
inc
ret
push
repz
mov
in
leave
pop
mov
adc
pop
push
repz
repz
mov
fistpl
imul
xchg
cli
add
dec
jne
fs
pop
cs
into
push
jo
mov
jno
inc
inc
icebp
inc
insb
add
xchg
movsl
xchg
jno
shrl
fcoml
dec
fisubs
loop
push
add
repz
gs
inc
sub
fcoms
pop
adc
pop
xchg
scas
xor
inc
and
imul
sbb
pop
mov
jmp
jb
int
lret
stc
aaa
in
ljmp
fnstsw
pop
lods
sub
xorps
shrb
dec
insb
mov
mov
cmpsb
insb
aad
adc
dec
cmp
cs
bound
sub
mov
sub
jno
fstpl
xor
adc
mov
xchg
push
jmp
sub
call
sbb
in
xchg
add
jg
xchg
fwait
test
popf
xor
xor
mov
or
shll
decl
pop
cltd
stc
pop
pop
enter
and
pop
and
roll
or
sti
sahf
mov
fldl
jl
sarb
jbe
call
cmp
add
sub
push
into
fnstsw
adc
and
loope
popf
mov
test
in
jne
pop
mov
aam
mov
les
movsb
lods
jg
jp
pusha
adc
push
adc
push
push
jge
gs
pop
sbb
cli
mov
mov
jno
pop
stos
cli
sbb
xor
gs
rcl
jmp
cmp
nop
mov
jl
addr16
fcmovbe
mov
inc
cmpsb
inc
mov
inc
in
add
mov
rcll
and
lahf
push
mov
loopne
sti
xor
icebp
add
imul
jno
dec
mov
xchg
lcall
out
xor
or
lret
insb
adc
testb
adc
ss
jecxz
bnd
add
or
xchg
ss
ds
lods
inc
outsl
add
mov
std
dec
adc
test
testl
clc
rorb
rol
jg
mov
cmp
subb
mov
and
push
pop
inc
cmp
mov
movsl
xchg
int3
dec
lret
ss
xchg
outsb
and
mov
sub
push
dec
xchg
test
aaa
int3
cmp
pop
xor
pop
push
imul
in
jg
fucomi
or
out
or
pop
lahf
pop
mov
das
jae
adc
sub
imul
ret
jbe
and
cmp
mov
mov
cli
jns
mov
mov
in
cltd
movsb
mov
sbb
inc
cld
xchg
ret
in
pop
xor
loope
ja
add
adc
shlb
rcl
and
jb
inc
sbb
jmp
push
xchg
jae
sub
out
or
jl
pop
pop
add
jecxz
mov
sarl
adc
mov
ds
pop
push
inc
and
jle
mov
arpl
mov
xor
cmpsb
lret
inc
jle
adc
sub
cmp
sbb
sahf
jbe
mov
and
push
inc
add
in
xor
xchg
xor
hlt
sub
push
xor
cmp
das
loop
dec
leave
mov
xor
mov
nop
cmc
icebp
xchg
stos
in
imull
cmp
pop
outsl
mov
jo
and
push
sbb
push
mov
sarb
push
add
mov
aam
sbb
adc
stc
js
cld
ja
jb
lods
mov
std
xchg
add
pop
pusha
faddl
jl
fwait
hlt
data16
jg
cmc
das
sbb
adc
xchg
inc
addr16
xchg
loopne
clc
out
sub
sbb
outsl
jl
clc
pop
aad
and
jg
popa
push
add
aas
bound
push
aas
adc
xor
pop
xchg
add
cmpsl
in
fnstcw
test
push
icebp
and
out
orl
xor
lret
sub
fiaddl
and
movsb
jle
xchg
dec
mov
xlat
fcmovb
mov
imul
out
insl
sub
cld
into
mov
mov
xchg
loop
lods
bound
add
push
pop
xchg
scas
nopl
pop
xchg
mov
xchg
ret
xchg
shl
lahf
xchg
addb
into
cwtl
sbbl
cs
mov
add
es
sbb
fadds
loop
pop
icebp
lds
push
inc
sbb
adc
pop
xchg
gs
pop
inc
andl
mov
jecxz
movsb
xor
jnp
adc
insl
adc
ss
jecxz
lods
inc
ret
stc
cltd
push
add
testb
push
inc
push
testl
jge
movsl
cpuid
loop
popf
mov
lock
sbb
fcmovnbe
mov
or
mov
gs
xchg
in
sbb
push
mov
sbb
leave
pop
repz
out
test
inc
push
test
xor
rcll
pop
xlat
repnz
mov
or
test
jae
stc
cli
cld
ljmp
test
aas
outsb
stc
xchg
sub
cmp
popf
hlt
out
xchg
push
push
xorl
pop
outsl
arpl
fcompl
out
xor
mov
movsl
jns
lock
aaa
mov
cwtl
sub
or
sbb
sbb
jg
xchg
xor
xchg
test
xchg
sub
push
mov
loop
lcall
hlt
popf
je
pop
aam
pusha
es
sahf
aas
push
lcall
fcoms
lret
pop
outsb
movsl
jp
xor
sbb
sub
imul
aam
prefetchnta
xchg
or
mov
sub
mov
mov
cs
test
jg
in
ret
cmp
shlb
cmp
lcall
adc
out
dec
push
pop
movsb
lods
outsb
dec
adc
jg
clc
imul
mov
sbb
adc
cmp
shrl
push
pop
jne
or
adc
and
pop
cmp
ror
adc
ja
insb
inc
negb
xor
inc
mov
out
mov
xchg
scas
stos
mov
ret
fcoml
ljmp
mov
mov
add
mov
shlb
mov
fisttpll
and
jnp
adcb
pop
movsl
push
dec
push
std
adc
adc
pop
sar
jbe
jnp
insl
or
cwtl
lods
hlt
mov
test
sub
pop
adc
clc
bound
out
scas
test
jo
add
pcmpeqw
fadd
xchg
daa
iret
mov
in
je
cs
push
mov
in
cli
jae
das
mov
xlat
adc
cwtl
shll
daa
jecxz
ret
test
xchg
lret
stc
fdivs
popa
mov
push
stc
push
sub
and
nop
fadds
iret
push
adc
cld
push
xlat
rol
and
shl
pop
lods
idivb
dec
and
int3
dec
add
jmp
jnp
fmuls
leave
pop
fs
push
inc
inc
xor
leave
dec
lahf
lahf
mov
sahf
mov
enter
push
sub
rorb
std
pop
xchg
aam
test
test
inc
test
je
jmp
mov
inc
rorl
xchg
dec
xchg
decl
loope
mov
fisubs
push
sti
lds
ds
test
jge
push
sub
lock
fbstp
inc
mov
mov
xchg
cmp
mov
inc
xchg
out
sahf
orb
repnz
add
mov
test
adc
mov
mov
repnz
std
xor
mov
xlat
or
insl
stc
mov
std
xor
ja
fs
sbb
repz
inc
add
and
lret
and
fisttpll
jecxz
fidivrs
dec
cmp
cs
scas
inc
jnp
add
les
jg
push
idivl
push
outsl
lcall
adc
jg
mull
hlt
sub
in
insb
test
adc
xchg
jae
cmpsb
xchg
fisttps
push
jno
mov
testb
inc
cli
xchg
xor
sbb
nop
ret
add
and
dec
xor
adc
pop
push
and
cmp
pop
pop
xchg
cmc
sbb
xor
sub
int
icebp
in
sub
cmpsl
out
rcll
xor
xchg
in
jle
stc
mov
push
push
mov
loope
mov
mov
cli
addl
stc
mov
loopne
and
je
or
outsl
aad
imul
pop
xchg
cmp
adc
jne
fildll
xchg
and
sub
arpl
jmp
push
stos
clc
lcall
xorl
ljmp
aaa
arpl
ljmp
cmp
xor
hlt
gs
inc
mov
mov
out
xchg
stos
das
inc
or
hlt
int
pop
pop
je
cmc
test
fmul
add
jge
addr16
outsl
jle
movsb
pop
cmp
out
or
das
or
jo
jns
stos
cltd
jg
xchg
movsb
in
sbb
xchg
pop
je
pop
cmp
push
mov
enter
cmp
jns
or
cltd
std
aad
xchg
lods
adc
insb
sub
aam
loopne
das
or
jae
outsl
dec
cmp
mov
aaa
xchg
xor
jecxz
es
repnz
lea
xor
pop
loopne
sbb
scas
ljmp
iret
out
push
out
call
movsb
xor
and
lret
cld
push
cltd
or
xor
dec
out
or
push
ljmp
sbb
fdivl
pop
dec
fstl
push
push
xchg
dec
int
test
cmpsl
xchg
cwtl
shrb
test
insb
dec
dec
dec
pop
fwait
imul
mov
rcrl
push
mov
mov
mov
jg
icebp
xchg
inc
rcr
sti
es
mov
push
roll
sbb
dec
xor
adc
and
and
fsubrl
insl
push
rclb
out
pop
loope
adc
jb
cmp
loop
out
and
adc
fwait
pushf
xchg
or
jmp
cwtd
sti
not
pop
aas
inc
movsb
sbb
enter
cmp
ficoml
inc
push
testb
dec
es
jo
aas
mov
jns
ret
pop
arpl
sbbl
fsubrs
rcrl
fsubrs
shl
dec
xchg
addr16
jnp
xchg
jmp
add
sub
mov
test
das
nop
and
test
add
and
push
ret
and
mov
pop
addr16
sub
sbb
mov
insl
adc
sarb
add
loop
test
inc
and
iret
mov
hlt
insl
lcall
inc
mov
mov
mov
cmpsl
das
xor
popf
ljmp
jbe
dec
pop
rorl
scas
sbb
dec
jl
or
aaa
mov
pop
mov
or
push
push
jg
pop
pop
insb
movsl
repz
sbb
add
fwait
ret
jmp
sbb
and
jae
and
hlt
sbb
mov
sti
scas
fadds
push
mov
push
push
out
jo
jl
call
jae
adc
filds
xor
or
notl
int
cltd
inc
pusha
pushf
xlat
mov
cmp
fsts
push
arpl
mov
push
xchg
mov
mov
push
mov
testl
iret
push
add
fsub
mov
mov
sub
mov
pop
jbe
push
pop
ljmp
lret
out
adc
adc
movsb
mov
mov
stc
lock
sbb
mov
popa
ja
inc
sub
data16
lods
adc
call
or
sbb
and
stos
ljmp
stos
mov
daa
loope
lahf
shll
xor
stos
outsl
sub
fsubp
int
sbb
mov
sahf
xchg
sub
pusha
shl
aaa
sbb
pop
xor
dec
data16
sahf
scas
and
adc
cmpsl
mulb
aas
cmc
sbb
or
fsts
inc
jmp
xchg
or
mov
push
lahf
adc
xchg
out
or
ret
push
mov
mov
cmp
mov
jns
push
mov
loop
loop
sub
inc
inc
mov
fdivrl
ret
sbbl
push
in
mov
pushf
and
insb
mov
mov
xor
mov
inc
addl
cmp
or
pop
test
inc
add
scas
inc
sub
sarb
and
jle
pop
sub
pushf
cmp
pop
fisubl
mov
mov
jo
jp
inc
mov
test
dec
icebp
add
lea
xor
dec
das
divb
add
sub
jbe
repnz
lcall
test
xchg
incb
jl
arpl
and
and
ret
rcrb
nop
cmpsl
or
pop
roll
repz
sub
sub
push
shl
adc
mov
sub
add
sub
mov
jmp
xchg
xor
test
push
mov
sti
fnstenv
push
out
stos
jno
and
out
dec
lods
pop
ds
sbb
fidivrl
popa
and
ret
ss
popa
sbb
sub
mov
add
insl
adc
add
stos
scas
out
dec
lods
cmc
pusha
dec
adc
aas
pushf
sub
add
into
push
mov
adc
cmp
adc
mov
in
jo
push
cmp
or
pop
shr
and
fiadds
sub
sarl
movsl
imul
data16
js
insl
leave
pop
or
mov
pop
cmp
xor
xchg
mov
cmp
xor
mov
daa
les
daa
call
push
push
icebp
adc
fisubrs
sbb
mov
test
lods
jge
ret
inc
addl
pop
vpmacsswd
rcl
xor
shll
iret
mov
lea
cmp
mov
rorl
and
dec
cmp
or
stos
and
xlat
repz
sbb
sub
push
out
popa
push
arpl
and
popa
ret
dec
lret
xchg
add
filds
addl
mov
and
in
les
push
mov
nop
mov
push
or
les
xor
xor
insl
sarb
adc
push
dec
movsl
in
jbe
mov
or
out
xchg
xchg
ret
int
js
repnz
in
cli
in
pop
mov
mov
lret
ret
mov
out
and
and
loopne
jle
inc
call
mov
scas
push
inc
fs
into
cmp
xchg
arpl
cs
mov
or
icebp
das
dec
sub
adc
lock
push
mov
xlat
pop
mov
popa
xor
clc
lahf
cmp
hlt
iret
pop
push
fimuls
xor
mov
xchg
mov
sub
in
and
lods
jae
add
repnz
mov
pop
ffreep
fmul
aad
test
adc
imul
stos
ss
push
mov
in
sahf
push
pop
jno
int3
and
cmp
sarb
add
and
sti
dec
or
sbb
push
jmp
jno
stos
repnz
in
jmp
aam
movsl
stc
subl
jp
outsl
imul
sahf
mov
lock
pop
push
xor
ss
ljmp
pop
js
ja
mov
sbb
call
mov
or
mov
sub
push
cmp
add
or
jmp
push
push
or
sbb
fstpl
cmp
scas
shrb
ljmp
add
xor
jno
movsb
inc
insl
popa
inc
mov
data16
or
lods
sub
cmpl
das
and
adc
sahf
cmp
jbe
dec
nop
outsl
mov
sub
stos
pop
pop
mov
dec
movsl
or
idivb
jne
xor
xchg
inc
mov
sub
ds
push
mov
mov
std
push
xchg
jp
flds
jmp
lea
fildl
int
fs
ljmp
movsl
or
cmp
ljmp
push
dec
test
add
mov
arpl
jmp
adc
repz
pop
roll
das
lods
jno
mov
loopne
push
cli
push
divb
pop
notb
xchg
pop
mov
cmp
fisubrs
rcl
and
fcom
and
xchg
in
ret
inc
or
cmp
movsb
cmpsb
pop
inc
mov
fidivrs
mov
jl
cmpsb
mov
push
cwtl
fwait
imul
dec
sub
pop
and
cmp
fdivrs
rcr
mov
inc
daa
lods
and
mov
mov
adc
jmp
sub
sahf
sub
mov
lods
lock
mov
mov
or
xchg
enter
repz
add
and
shr
ja
iret
pop
add
fnstsw
cmp
and
aad
inc
adc
push
add
cmpsl
pop
repnz
ficomps
push
repnz
jne
insb
jmp
cmpsl
jno
lock
add
out
in
ja
pop
inc
dec
sub
iret
jnp
lods
xchg
out
mov
sbb
pop
push
loop
in
cmp
and
push
push
shll
mov
mov
ljmp
push
jl
jge
aaa
movsb
sub
fiadds
pop
mov
shrl
xchg
popf
rolb
jmp
sub
lods
pop
jns
pop
popf
bound
mov
leave
mov
jg
ret
les
icebp
mov
rcrb
xor
xor
and
mov
call
loopne
iret
jg
sbb
ds
mov
jl
jbe
push
jno
nop
fimull
jne
inc
test
js
inc
scas
cmp
shr
inc
ss
or
jbe
stos
and
int
not
sbb
cmp
jo
clc
cmp
cs
fwait
mov
push
fdivl
dec
pop
mov
pop
pop
mov
or
insb
push
enter
imul
icebp
dec
inc
jns
das
push
inc
lret
xor
add
pop
or
hlt
test
inc
cli
jno
jp
xchg
clc
outsl
inc
lea
add
adc
xchg
cld
cld
push
fsin
push
add
sbbb
addl
addr16
dec
inc
mov
push
fcomi
mov
lahf
js
test
ror
js
mov
xchg
jp
cmp
in
cld
iret
mov
inc
push
sub
hlt
inc
lcall
fs
push
stos
clc
jo
mov
and
daa
leave
mov
cmp
ljmp
and
xor
dec
adc
cmp
hlt
repz
mov
std
movsb
ficoms
test
inc
xor
or
dec
xor
js
rcll
add
push
or
cmp
sarb
mov
mov
push
mov
sbb
in
popf
movsl
aad
pop
cmp
xchg
cwtl
popa
sbb
dec
sahf
es
in
in
mov
xor
ret
bound
jecxz
subb
jne
mov
cmpl
ret
sbb
popf
inc
outsl
lret
dec
adc
in
inc
inc
mov
xchg
jb
adc
loop
dec
daa
lcall
inc
ja
lods
les
nop
mov
mov
mov
push
mov
ret
jmp
mov
mov
dec
push
adc
add
lahf
out
imul
bound
pop
out
into
insb
inc
aam
andl
ficoms
or
and
xchg
xchg
test
and
xchg
mov
sahf
lds
lds
daa
filds
push
sbb
sbb
add
aas
gs
ret
iret
add
xor
cmp
mov
aad
pop
cli
negb
and
pop
adc
imul
shr
push
sub
pop
icebp
mov
fmuls
nop
pop
sbb
mov
jmp
std
dec
dec
push
call
out
cmp
pop
mov
iret
leave
clc
ds
insb
lea
xorb
in
cmp
lds
sbb
pop
loop
push
jle
add
dec
fmull
iret
js
mov
or
xchg
movsb
out
sub
mov
fs
std
and
cwtl
cmpsl
shr
mov
out
dec
xchg
in
mov
lds
fwait
add
push
xchg
out
lock
leave
xlat
fisttps
dec
ret
inc
sbb
push
mov
outsb
or
mov
in
in
xor
adc
or
push
adc
mov
or
jle
mov
sub
fstl
jmp
cltd
jo
add
pop
aaa
pop
mov
pop
jns
mov
test
mov
inc
push
push
lret
lret
mov
mov
xchg
sub
xchg
mov
inc
clc
jecxz
lcall
sbb
cmp
movsl
fildll
ret
cmp
jno
push
sbb
int3
and
cmp
push
mov
test
xlat
sti
fmul
adcb
pop
psubusb
rorb
daa
dec
inc
outsb
jbe
xor
popa
test
in
js
bound
leave
into
ffree
jne
iret
mov
push
in
xlat
sbb
pop
repnz
push
cwtl
xcrypt-cbc
cmpsl
push
aaa
xchg
add
out
into
pop
or
adc
add
mov
cmc
jecxz
push
pop
xlat
fiadds
out
lods
fmuls
lcall
psubw
fwait
bt
ret
outsb
lret
mov
into
pushf
xchg
or
sub
sub
aad
jle
pop
int
shl
mov
fadds
cs
outsb
adc
dec
add
xor
adc
mov
sub
xchg
inc
inc
push
xor
mov
and
mov
sub
dec
push
cmp
bound
fdivs
cmp
inc
xor
ds
ljmp
sbb
ds
dec
lea
inc
xchg
xchg
pop
arpl
jae
scas
adc
lock
lods
inc
adc
jns
ss
mov
in
nop
xchg
inc
scas
rcl
xor
sub
mov
mov
in
icebp
les
fsub
stos
shlb
jle
dec
scas
add
loope
hlt
dec
nopl
pop
mov
cmp
lcall
loop
inc
add
loopne
xor
sub
sbbb
loop
sti
jl
out
lahf
mov
clc
jns
fwait
repnz
jb
sub
data16
aam
dec
js
mov
je
add
dec
dec
in
bound
insb
mov
bound
and
push
stos
mov
stos
inc
sahf
nop
jle
push
movsl
in
inc
push
xchg
mov
mov
int
mov
sub
ret
or
rcrl
ret
ja
push
arpl
jle
bound
add
fs
push
xchg
daa
or
test
cmc
repnz
push
insl
pusha
lea
insl
and
daa
icebp
rcl
sti
cmp
and
push
cwtl
insl
jge
mov
dec
outsl
pop
adcl
inc
jnp
shll
mov
loopne
add
and
dec
cmpsb
subb
js
sub
arpl
imul
andb
sbb
orb
pushl
addr16
inc
or
sbb
mov
or
adc
pop
frstor
cmp
fcmovnu
out
xor
ja
mov
jmp
lods
mov
lock
push
push
push
scas
dec
push
fwait
xor
popa
into
and
mov
sbb
adc
pop
scas
push
movsb
imul
mov
mov
shl
scas
in
add
loop
fmull
sub
dec
jns
and
les
scas
xchg
jns
adc
xchg
in
add
sbb
movsl
jp
mov
jp
xchg
adc
and
mov
add
ja
add
pop
fs
ja
mov
adc
jp
push
adc
imul
push
xor
inc
adc
add
push
dec
fs
mov
cld
push
mov
xlat
inc
loopne
push
xor
mov
pop
cli
jnp
fwait
jmp
stos
jg
xor
cmpsb
into
xchg
decl
aam
xor
jns
data16
jp
lods
jg
das
push
lret
or
pop
adc
aas
dec
xor
and
stos
das
sbb
cmc
ss
pop
rol
xor
pop
inc
cld
jno
out
mov
test
adc
div
dec
or
push
test
add
jne
popa
xchg
jle
mov
xchg
push
fnstsw
add
xor
add
rol
mov
mov
shll
mov
fwait
inc
mov
inc
imul
ljmp
std
pop
add
adc
out
pop
mov
cmpl
out
call
testl
push
test
loope
hlt
les
push
mov
pop
fwait
repz
imul
mov
push
clc
sub
das
xchg
ret
lret
loop
test
push
inc
outsl
xchg
or
sbbl
mov
enter
decb
outsb
mov
or
mov
shll
jbe
es
sahf
or
pusha
out
inc
mov
js
jae
repnz
lock
jmp
out
ffreep
call
out
and
xor
push
test
mov
add
insb
or
xor
pop
inc
xor
outsb
mov
jecxz
push
gs
sbb
jp
sbb
xchg
and
sbb
add
mov
arpl
lea
dec
loopne
xor
fldenv
xchg
leave
mull
inc
scas
cmpsl
adc
arpl
or
push
pusha
mov
movsl
cmp
fwait
inc
enter
mov
xchg
cmp
call
cli
das
sbb
in
dec
jecxz
mov
sahf
data16
jnp
lahf
into
imul
es
pop
mulb
ret
popa
mov
loopne
pop
mov
dec
ds
icebp
lahf
and
mov
adc
sub
mov
adc
inc
lock
bound
jg
xor
divb
fbstp
jle
rol
jae
push
popa
xchg
outsb
ss
adcb
clc
inc
in
loop
adc
mov
aad
lret
xor
imul
xlat
mov
jns
sub
mov
ret
add
nop
cs
sub
cli
jae
int3
test
mov
es
adc
stc
xlat
pop
or
mov
cmp
imulb
daa
stos
lods
sub
inc
rcl
or
fidivl
decb
adc
pusha
push
pop
movsb
push
popf
inc
sbb
dec
imul
lea
adc
testb
mov
in
lahf
inc
cmp
fnstsw
add
pop
inc
sbb
add
dec
cmp
repz
stos
mov
in
mov
repz
sbb
xor
xor
fistl
sbb
mov
lahf
out
fstpt
iret
jl
mov
sub
inc
cmp
jg
pop
push
popa
aam
and
mov
push
pop
sub
xor
add
int3
sbb
aad
xchg
int
add
stos
sbb
js
fisttps
xabort
inc
andl
adc
mov
mov
addr16
test
mov
nop
int3
stos
or
xchg
xchg
in
sub
lahf
mov
ja
xchg
iret
js
movsl
cli
add
pop
hlt
xlat
outsl
ret
xor
mov
sahf
lds
nop
xor
xor
pop
sysexit
lds
push
xchg
mov
stos
and
arpl
int3
mov
mov
sbb
in
out
enter
cmp
jmp
pop
rcrb
jg
and
sub
inc
ja
adcb
push
movsb
mov
hlt
xchg
xchg
push
or
sti
subl
add
in
mov
xchg
ret
cmp
ljmp
mov
into
xchg
insl
xor
sub
add
xor
enterw
rolb
outsb
out
int
or
pop
in
mov
jae
jbe
nop
add
leave
push
cmove
push
add
pop
pop
jae
inc
sub
jb
mov
sbb
or
cld
sub
dec
mov
xor
mov
arpl
clc
rol
cmp
jo
mov
jge
fsubrs
fs
jb
sbb
pop
test
jnp
sarb
fidivl
repnz
hlt
inc
clc
xchg
out
iret
cmp
leave
push
xchg
push
jne
cmpsl
mov
xor
cmp
loope
rol
sub
pop
push
inc
pop
sub
daa
sbb
mov
cwtl
pop
pop
inc
mov
lea
inc
or
sub
inc
notl
idivb
sub
cltd
ds
pop
in
jge
loop
insl
or
push
mov
dec
xchg
add
cltd
mov
sahf
movsb
or
hlt
iret
push
cli
fidivl
imul
mov
sar
loop
xchg
dec
lcall
mov
lods
adc
sbb
cmp
movsl
add
adc
jl
push
xchg
in
loopne
loop
jb
test
push
sbb
jge
xor
jbe
mov
dec
int
xchg
add
inc
icebp
fimull
or
pop
jl
xchg
jmp
rolb
std
jmp
cli
and
ja
or
loopne
in
pusha
lcall
aad
adc
loopne
push
mov
movsb
xchg
xor
ss
in
jge
push
bound
xchg
xchg
and
cmp
jg
jmp
inc
xlat
push
push
leave
mov
sbb
dec
sbbl
insl
gs
mov
out
xlat
pop
mov
mov
xchg
out
mov
mul
repnz
enter
inc
in
inc
cwtl
push
xchg
sahf
das
xchg
call
jb
sub
push
xchg
adc
fwait
mov
fmull
pushf
dec
mov
loop
out
aam
inc
ret
and
mov
push
inc
pop
and
fisttps
xchg
mov
ss
enter
fdivs
sbb
and
sahf
adc
mov
loopne
pop
insl
mov
push
loopne
imul
jle
dec
pushf
dec
fistl
push
scas
mov
mov
jne
mov
jge
out
push
cmp
sub
aam
inc
adc
adc
popf
std
sbb
jg
xor
outsl
dec
xchg
cmp
cmp
jmp
adc
popl
addr16
aas
lods
mov
or
stos
dec
shl
std
scas
movsl
add
fistps
test
mov
dec
movsb
and
mov
sbb
dec
cmp
mov
lods
jbe
mov
adc
ficoms
jge
dec
mov
outsb
sbb
sbb
loop
pop
xchg
pusha
and
xchg
mov
sbb
mov
mov
cwtl
out
adc
inc
arpl
in
jne
adc
inc
sti
xor
mov
add
push
lea
push
sbb
ret
addr16
dec
add
cmp
mov
sub
inc
mov
rcll
and
lahf
decb
push
out
rolb
jbe
cs
cmp
xchg
aaa
cs
xchg
movsl
pop
mov
mov
outsl
jne
sti
cmp
cmc
dec
xorb
orb
outsl
xchg
pop
adc
xlat
mov
and
cwtl
in
jp
jno
or
jb
mov
jb
push
mov
rorb
cltd
adc
inc
loope
pusha
jae
mov
std
cwtl
popf
dec
inc
push
outsl
mov
push
xor
pop
data16
insb
nop
int
and
or
sbbb
scas
divb
pushf
cld
arpl
push
and
inc
push
cmp
scas
xorl
jbe
lea
scas
lods
mov
sub
in
into
pusha
xor
or
add
or
push
sti
jo
stos
mov
cmpsb
push
loope
and
xchg
sbb
mov
lods
inc
lahf
pop
push
jne
xor
sbb
roll
mov
adc
pop
pop
xchg
cmp
ljmp
jmp
test
xchg
out
fsub
mov
pop
aam
mov
pop
or
sahf
push
iret
push
aaa
push
icebp
in
inc
xlat
push
or
mov
lods
dec
enter
add
std
cmc
xchg
popf
iret
dec
mov
leave
add
addr16
lcall
cmp
pushl
mov
in
or
leave
iret
mov
push
push
mov
arpl
sahf
cwtl
lods
sub
neg
inc
dec
mov
mov
js
jno
mov
adc
fildl
xchg
aam
jg
add
pop
and
fs
cmpsl
mov
add
xchg
test
fbld
mov
in
cmp
or
stos
scas
push
cltd
sbb
sub
inc
call
xor
roll
inc
push
pop
in
xor
ret
imul
fwait
mull
or
imul
ljmp
jnp
pusha
or
mov
pop
or
cmp
mov
sahf
sub
dec
scas
roll
pop
and
aas
cmc
adc
xor
inc
shlb
cmp
jecxz
sbb
bnd
stos
cld
test
aam
scas
and
xor
dec
xchg
or
mov
loope
loop
aas
scas
sahf
orb
iret
ficomps
daa
popa
imul
test
mov
hlt
add
cmp
fildl
inc
and
pop
or
cmpsb
mov
fbstp
jge
mov
mov
in
xrelease
idivb
inc
pop
or
into
scas
jae
or
xchg
add
xchg
es
sub
out
lret
sbb
in
sti
push
jge
out
in
push
out
xor
pushf
inc
xchg
xchg
jbe
push
dec
cltd
iret
inc
ljmp
dec
mov
out
stos
or
pop
test
sbb
and
dec
gs
pop
push
sbb
pop
ja
jp
fs
inc
ss
call
pop
adc
pop
adc
test
ja
cmp
mov
dec
inc
xchg
jne
mov
xchg
mov
mov
jnp
cmpsl
mov
into
fildl
pop
or
jp
xchg
jp
punpckldq
cmpsb
sbb
out
mov
loop
mov
insl
mov
mov
fiadds
les
aaa
push
mov
mov
add
icebp
ja
iret
mov
movl
stos
mov
add
clc
cmp
imul
mov
nop
fstl
or
xor
mov
ja
cli
push
sahf
cmc
es
sub
mov
cs
lods
mov
pusha
cmp
inc
jl
sub
push
bound
mov
cmp
mov
adc
rcl
mov
nop
mov
mov
dec
add
int
jnp
test
dec
fcomi
jne
xchg
popa
mov
aad
lds
rcr
mov
add
pop
pushf
push
in
mov
in
dec
lcall
push
fstpt
stc
ret
mov
and
stc
data16
repnz
cwtl
push
pop
bnd
scas
jo
icebp
movsb
sbb
xlat
xor
push
gs
cmp
pop
repnz
out
sbb
xlat
sub
dec
sub
enter
ret
scas
inc
mov
mov
add
inc
sub
stos
arpl
dec
and
shlb
cmp
js
ljmp
rcr
lock
mov
into
mov
xorl
sahf
lahf
ret
or
jle
adc
das
fxtract
xor
out
cmpsb
dec
adc
rcrl
push
xor
pushf
inc
pop
jne
sub
test
xchg
test
lock
pop
jns
adc
mov
es
cs
pop
outsl
add
mov
xchg
pop
aad
int3
aaa
adc
ud0
lahf
shlb
cmp
outsb
sbb
sub
insl
jne
scas
rcll
jb
jno
or
push
sti
test
xchg
jne
arpl
out
imul
cmp
stos
sub
int3
adc
xor
dec
sub
mov
es
fmull
test
inc
int
daa
lods
sub
out
fistps
cli
mov
push
mov
xor
cmp
mov
dec
sbb
dec
insb
nop
sti
fst
sarb
adc
xchg
xchg
in
and
in
jbe
jmp
je
sbb
and
je
push
faddl
mov
lods
es
popf
sbb
daa
test
xchg
bound
fcomip
pop
mov
rcl
pushl
roll
jmp
mov
and
daa
sub
icebp
std
dec
cmp
cmc
cltd
lods
lods
aas
test
fs
mov
cmp
jmp
mov
add
clc
add
jmp
dec
insl
cmp
inc
adc
mov
jecxz,pt
aas
rorl
add
repnz
cmpsl
hlt
lcall
push
fisttpll
add
mov
jb
jo
test
fistps
loope
cmp
cmp
mov
lcall
shl
jae
fists
mov
and
or
xchg
and
loop
push
daa
inc
repz
movsb
xor
negl
jno
loop
cmc
mov
cwtl
pop
dec
fmull
pop
pop
adcl
aad
push
cmp
in
cmp
pop
dec
fisttpl
adc
dec
and
pop
cmp
aam
lret
xor
mov
addb
mov
lret
jo
stc
cmp
sahf
stc
aas
lods
icebp
outsl
clc
cli
push
xchg
data16
mov
jne
jae
push
arpl
push
adc
xor
jae
das
xor
sub
mov
repz
cmp
push
std
mov
xor
loope
or
dec
mov
fmull
iret
loop
pop
test
insb
scas
pop
mov
xchg
shl
push
and
xchg
pop
jne
dec
imul
xlat
and
xlat
xchg
inc
cmp
inc
das
xchg
mov
stos
sub
lahf
sub
pop
popl
mov
aaa
repnz
jle
loop
outsl
push
cmpsl
stos
add
fdivrs
pop
clc
or
in
sub
mov
repnz
mov
repz
jp
or
adc
mov
loopew
sti
xor
sub
fisttpll
mov
ret
stos
clc
mov
popf
xor
insb
xorb
xchg
dec
frstor
lret
pop
xchg
insb
sbb
dec
lea
das
mov
scas
jle
jo
test
mov
pop
addb
mov
sbbb
mov
push
pop
pop
sbb
push
js
mov
push
or
or
je
in
push
inc
and
movsb
jb
ror
mov
fs
int3
leave
dec
movsb
or
into
clc
loope
or
push
test
aaa
mov
lods
arpl
xor
in
call
jae
mov
aas
sub
ret
outsl
and
add
in
sahf
push
fwait
mov
pop
mov
push
into
mov
mov
ja
inc
jmp
mov
repz
mov
inc
mov
test
push
cmp
lret
int
test
repz
insb
mov
mov
xchg
notl
push
pop
xchg
pop
inc
dec
inc
jne
push
mov
and
aaa
jecxz
fisubrs
leave
movsl
insl
and
inc
fimuls
ss
cmp
ret
adc
repz
mov
loope
adc
test
jns
iret
mov
sbb
lcall
xchg
cmp
lahf
roll
mov
loop
mov
cmp
pop
jmp
pop
and
insl
inc
xchg
lds
xchg
xchg
fldenv
pop
pop
mov
les
and
sbb
dec
mov
scas
pop
pop
in
push
jne
aas
jb
addb
repnz
sbb
gs
insb
enter
push
xor
repnz
or
adc
dec
jg
stc
pop
loop
mov
push
and
xchg
xchg
fdivrp
lods
push
outsb
insb
xchg
inc
xchg
sub
xchg
movsb
mov
imull
jb
in
lods
outsb
pusha
xchg
stc
int3
mov
int
jl
add
pop
jne
cmpsl
cmp
mov
jp
icebp
movsl
and
sub
int
push
cs
in
inc
clc
add
mov
in
inc
rorb
adc
inc
inc
icebp
daa
or
cmp
popf
sub
aad
lods
movsb
das
into
pop
test
mov
cmpsb
push
ja
or
rcrl
pop
loopne
jnp
cmpsl
addb
out
cmp
mov
push
push
les
lahf
cmp
and
jo
jnp
add
enter
mov
call
mov
lds
insb
lods
mov
rcrl
in
mov
movsb
and
adc
sbb
adc
xor
jne
jmp
sbb
adc
rolb
test
clc
dec
aaa
push
lea
and
ret
outsb
cld
shlb
out
pop
das
dec
insb
adc
ljmp
icebp
jbe
nop
or
mov
shlb
inc
push
mov
push
das
sub
mov
push
ret
call
les
dec
insl
mov
fcomip
lods
push
stos
notl
mov
in
mov
std
sti
xor
in
jmp
sahf
addr16
adc
mov
out
jns
cmp
cmp
leave
cwtl
scas
lret
and
sarl
add
lret
add
es
test
add
ds
cmp
fsubp
mov
jge
jecxz
lahf
inc
jns
or
pop
les
aas
hlt
inc
in
mov
and
add
jg
cwtl
les
rorb
sbb
imul
mov
in
in
ret
hlt
outsl
jge
add
xorb
mov
data16
shll
push
cmp
mov
pop
je
sub
cwtl
or
scas
pop
scas
bound
pop
bound
or
loop
dec
or
push
mov
out
jnp
stos
rcrb
rcr
sbb
int3
sub
loopne
add
and
inc
jmp
mov
dec
out
pop
pop
repnz
mov
in
imul
icebp
adc
iret
jne
add
sub
xor
add
add
loopne
imul
mov
mov
out
mov
mov
mov
movsl
mov
xchg
jmp
pop
jno
push
out
mov
pop
andb
or
into
xor
test
mov
ss
jg
js
shr
movsw
mov
sahf
fnstenv
jnp
mov
stos
xchg
imul
popf
push
mov
sahf
outsb
sbb
pop
vmptrld
dec
incb
pop
adc
mov
rorl
popa
adc
in
xchg
mov
out
aas
inc
lods
clc
xchg
push
scas
jbe
fwait
cli
push
push
imul
int3
movsl
sbb
add
fnstcw
jge
in
pop
dec
jae
cli
cmpsl
iret
sbb
cs
cmpsl
or
push
adc
mov
clc
cmp
mov
inc
push
dec
adc
adc
lock
xor
cmpsb
mov
ret
adc
movsl
popa
ss
cmp
push
orb
fstps
pop
push
sub
pop
gs
hlt
push
cs
sahf
jle
cmpb
shll
inc
inc
in
fdivrl
clc
adc
icebp
dec
cmpsb
adc
sub
mov
mov
lret
push
or
mov
sbb
or
mov
enter
outsl
leave
xchg
inc
jns
pop
mov
jo
lcall
sbb
mov
pushf
iret
stos
movl
pop
pop
dec
pop
xor
ficoml
adc
popf
test
sbb
mov
sub
lock
pop
cli
shll
pop
faddl
mov
push
push
addr16
mov
dec
mov
fdivrl
notb
stos
gs
fcompl
movsl
aad
jmp
adc
cmpsb
test
mov
mov
xchg
mov
lahf
mov
sbb
clc
cmp
leave
cmp
mov
aam
ja
adc
jg
aam
rcrl
sbb
adc
fcmove
fdivrl
ss
sub
rclb
or
in
add
cmc
add
sbbl
push
bound
icebp
jns
cmpsl
int
pop
outsb
xor
daa
insl
push
jb
pop
push
or
sub
rclb
roll
mov
dec
adc
div
mov
xchg
lods
sahf
push
mov
scas
dec
fdivrs
mov
icebp
call
pop
dec
mov
inc
fsts
mov
xchg
mov
mov
stc
dec
mov
jno
js
lret
sarl
xor
xor
add
mov
test
rcrl
add
add
mov
pushf
adc
inc
mov
ljmp
adc
push
pop
pop
mov
xchg
outsb
push
mov
lock
call
push
aas
fldl
stos
push
stos
testb
sbb
into
add
jge
movb
les
mov
and
or
iret
leave
adc
adc
pop
or
leave
or
ret
stc
cmp
imul
cmpb
cld
lret
mov
jmp
in
fsubrp
add
jnp
dec
mov
gs
adc
inc
push
mov
add
pop
fwait
mov
sbb
mov
adc
ret
dec
and
movsb
stc
jb
push
cmp
mov
push
sub
and
fsubl
enter
fmull
or
push
cwtl
inc
push
leave
sbb
popl
sbb
fisubs
shll
adc
fnstenv
ds
arpl
sbb
call
xchg
or
scas
sub
inc
notb
sub
push
ret
mov
inc
jno
add
push
pop
mov
mov
mov
push
ja
jbe
aad
inc
ret
mov
xchg
push
mov
pusha
ror
xchg
mov
push
or
sub
push
inc
and
movl
push
xchg
cmp
pop
pop
scas
outsl
inc
nop
sti
pop
jns
xchg
leave
push
cs
test
lret
sahf
lea
push
dec
loopne
rcrl
xchg
test
lea
xor
sub
push
iret
push
mov
leave
lret
ret
ds
or
fcoml
jle
and
mov
aam
or
std
sar
pushf
addr16
lret
pop
mov
out
or
sbb
int3
lea
rol
and
xchg
addr16
xchg
fisubrl
xchg
sbb
mov
in
mov
mov
mov
bound
test
xor
dec
dec
aam
fistpll
sub
jecxz
ja
mov
pop
adc
pusha
xor
dec
xchg
mov
sub
subl
sbb
jl
mov
push
adc
dec
repz
and
lret
jp
pop
mov
cld
sbb
xchg
push
fsubrl
mov
adc
cltd
cmp
mov
mov
outsl
sarb
jmp
inc
popa
adc
fistpll
das
into
add
mov
incb
or
mov
adc
sahf
ficomps
or
jbe
mov
dec
inc
inc
push
sar
lret
sub
xchg
push
push
xchg
adc
ret
lods
sbb
cmp
adc
push
inc
sbb
ret
out
add
and
rorb
mov
das
xor
pop
int
add
pop
sub
pop
test
lahf
popa
cmpxchg
xchg
adc
ds
pop
addr16
push
jg
addr16
xlat
inc
xchg
mov
lcall
dec
adc
sbb
sub
dec
lret
push
fmull
push
std
notl
daa
adc
pop
cmp
bound
cmp
cmp
lahf
jge
sbb
mov
into
add
movl
pop
out
fwait
loopne
aas
sarl
out
pop
dec
mov
lret
ret
xchg
jg
decl
ret
nop
push
aaa
loopne
cltd
add
shrb
hlt
ja
in
jbe
scas
in
faddl
xor
dec
cmp
jb
fcmovne
stos
push
ret
test
xor
shlb
sbb
and
leave
lods
into
into
pop
sub
mov
imul
mov
pop
pop
mov
aad
and
ds
rorl
das
push
in
lods
jl
push
dec
mov
lods
xchg
vmaxsd
add
inc
mov
jno
cmp
call
lds
cmp
cmp
stos
or
cvtps2pd
int
inc
add
popa
inc
lods
mov
movsl
stc
lock
rol
jl
xchg
push
iret
sub
and
dec
inc
xchg
xor
or
mov
cmp
incl
gs
jno
outsl
jno
xor
scas
add
sahf
add
or
popa
inc
pop
sbb
mov
inc
inc
nop
jle
iret
lahf
sbb
test
sti
shlb
or
pop
lea
cmp
mov
sub
sbb
and
mov
pop
and
insl
add
lret
jmp
xor
out
rorl
adc
push
cmc
fbld
mov
cmp
push
cmp
data16
lret
inc
in
loop
fs
dec
mov
inc
mov
mov
xchg
jo
xchg
jg
aam
bound
sbbl
adc
mov
movsb
cld
pop
sub
or
inc
mov
push
cltd
test
mov
es
dec
adc
xor
ret
mov
push
mov
add
xchg
lods
and
insb
fs
mov
cli
mov
jno
jp
fcoms
fmull
cmp
data16
xor
push
cmp
jg
ficomps
fnstsw
cmc
ficoms
daa
stc
mov
roll
dec
mov
dec
addr16
sti
scas
mov
xchg
sarb
mov
add
gs
testb
scas
mov
cltd
mov
in
adc
subb
pop
add
lods
dec
movsl
mov
loopne
call
pop
jb
mov
test
cmp
xchg
inc
hlt
lock
fisubl
pop
mov
add
sti
add
push
inc
inc
mov
hlt
ret
mul
cmp
mov
ficomps
mov
mov
ret
mov
flds
into
fs
and
mov
out
ret
sbb
js
les
dec
inc
xchg
mov
leave
incb
mov
adcl
and
out
popa
and
cltd
pop
adc
dec
add
jb
shll
ljmp
sti
ret
sub
dec
pushf
aaa
inc
push
pusha
loope
xorb
push
jb
je
imul
mov
sbb
cld
loope
mov
aam
das
ja
lds
imul
xchg
mov
fs
jl
fs
ficoml
movsl
test
dec
mov
stc
subl
insl
test
inc
jb
popf
js
add
sub
mov
jnp
xchg
into
scas
outsl
xor
imul
cmp
imul
mov
xor
test
sub
push
out
mov
adc
int3
xchg
stc
mov
sarb
xor
mov
in
mull
push
std
lea
push
xor
mov
cmp
mov
cmp
int
cmp
jbe
cmp
inc
dec
jmp
ljmp
lock
test
xor
iret
jmp
mov
out
push
das
jge
push
push
insb
push
or
lret
push
lea
dec
cmc
mov
inc
add
cmc
mov
mov
arpl
xlat
les
mov
cmp
test
mov
inc
xchg
sbb
dec
mov
mov
jno
push
dec
jmp
pop
cmp
pop
rol
cli
testb
imul
out
div
mov
mov
sbb
testl
cmc
xchg
sub
xchg
mov
inc
fstl
stos
rcrb
out
jg
or
out
sti
daa
fpatan
and
in
sbb
dec
fbstp
pop
lret
or
mov
xchg
out
cs
mov
push
cmc
outsl
aad
mov
stos
dec
dec
outsb
or
push
adc
shl
inc
jo
push
jecxz
bound
std
dec
sbb
dec
movsl
sbb
repnz
mov
sub
cltd
sahf
daa
mov
xlat
ret
dec
adcb
and
ds
lds
data16
xchg
jg
popa
mov
jl
cwtl
push
rclb
fidivs
lahf
loope
js
xlat
sub
les
and
lret
fwait
xchg
loop
sbb
pushf
fmull
in
jmp
shlb
cmpl
push
iret
mov
nop
out
mov
outsl
mov
lcall
and
stc
in
sbb
sbb
dec
xchg
call
xchg
dec
push
mov
dec
clc
or
stos
xchg
jne
aaa
hlt
mov
mov
adc
dec
fildl
mov
fdiv
fs
ljmp
pop
mov
jle
clc
pop
sub
xchg
push
xorb
lret
data16
int
fistpll
mov
mov
bound
roll
ljmp
fildll
sub
xlat
mov
cli
mov
push
stc
lahf
aam
jns
sbb
add
push
out
mov
xor
mov
dec
mov
ss
sub
adc
xchg
lret
adc
loopne
inc
lret
adc
inc
dec
pop
pop
push
sarb
js
in
or
mov
cmpsb
xchg
mov
xor
fdivr
sbb
push
outsb
in
inc
dec
mov
js
cli
adc
ja
pop
jmp
mov
pusha
mov
xchg
rorb
shl
cs
aaa
mov
cmp
mov
add
idiv
jns
adc
or
dec
or
and
pop
test
xchg
mov
insb
sahf
sub
ret
lret
sub
scas
aam
mov
add
mov
sti
sbb
xor
in
push
nop
mov
fidivrl
xchg
test
aaa
hlt
pushf
jno
dec
pusha
cmp
repnz
ljmp
cli
outsl
push
daa
rol
divb
enter
cld
sbb
mov
dec
and
xor
add
push
out
xor
mov
dec
xchg
sbb
push
lods
xor
or
ja
sbb
out
leave
and
sub
daa
aad
sub
fldenv
xor
mov
or
sti
aaa
sbb
shll
out
sbb
push
and
jne
insb
jbe
fists
popa
lods
jl
sub
xchg
bound
cmp
leave
in
in
push
cmp
mov
mov
and
cmp
icebp
adc
fwait
ljmp
jno
sbb
push
push
aas
pop
test
mov
xchg
pop
jmp
mov
cli
xor
pop
shl
sbb
mov
inc
dec
fstps
sub
clc
ja
xor
rcrb
jg
dec
dec
pushf
test
jo
dec
leave
sub
xchg
pop
cwtl
dec
fldt
lahf
out
aam
inc
add
xacquire
movsl
mov
pop
sbb
fisubrs
lret
push
adc
data16
push
and
mov
mov
int3
dec
bound
xchg
add
shlb
imul
lds
incb
jecxz
mov
scas
lock
clc
jne
xlat
fisubrl
pop
cltd
jecxz
movsl
lahf
ljmp
cli
lock
or
ja
popa
mov
push
jl
rcl
pop
xchg
pop
std
mov
mov
cmp
out
and
and
xchg
jmp
outsb
sub
mov
popf
jno
or
xchg
mov
mov
loop
repz
mov
cmp
hlt
ret
jecxz
jge
decl
std
sub
lods
dec
cmp
movsb
mov
imull
dec
shll
ss
push
aaa
dec
out
sti
sbb
mov
jl
ds
add
push
xor
push
xorl
daa
sbb
insb
mov
dec
pop
or
test
inc
fildll
or
dec
jmp
cmpsl
dec
add
jns
in
decb
add
aas
pop
mov
pop
jg
xor
push
push
add
xchg
lahf
cs
nop
popa
pop
push
xchg
mov
rcrb
movsl
jl
or
xor
inc
mov
adc
cmpsl
mov
stos
and
xchg
mov
and
adc
ret
or
out
push
push
push
lods
stc
sub
imul
imul
lods
sub
push
sub
xchg
inc
jmp
mov
dec
push
add
xor
std
mov
push
dec
aam
imull
mov
mov
pusha
cmpsl
xlat
sub
mov
adc
push
iret
xchg
xchg
cltd
pop
fs
repz
aad
push
jecxz
push
sbb
adc
sbb
push
mov
nop
insl
movsb
test
pop
imul
mov
cmp
shll
push
push
push
cmp
add
aam
sbb
popa
test
mov
nop
xor
int3
and
lcall
fsubrs
push
lods
nop
mov
cli
xchg
push
push
enter
jle
out
dec
pause
jecxz
mov
cwtl
and
repz
pop
xor
fwait
mov
push
out
lds
cmp
push
in
icebp
pushf
dec
das
or
out
nop
mov
cmpsl
jno
out
add
stos
sub
jl
lock
cld
in
xchg
shll
dec
pop
xchg
add
push
cld
in
test
xor
mov
adc
stos
icebp
imul
adc
loopne
sub
sbb
sub
ror
in
aaa
xorl
lret
mov
fucom
adc
and
xchg
push
sbb
loop
cmp
loopne
idivl
inc
icebp
mov
dec
pop
rcl
pop
sbb
inc
xchg
in
push
stos
inc
or
rorb
xchg
ret
fstpl
out
dec
pop
out
imul
push
popf
andl
mov
push
mov
in
adc
cmpsb
cmp
lahf
dec
mov
ds
lret
jecxz
loop
stos
mov
clc
mov
test
int
arpl
dec
jge
fcomps
sahf
nop
cs
xchg
mov
insb
test
sahf
xor
sahf
dec
cmpsl
mov
icebp
int
inc
pop
inc
dec
jnp
mov
inc
xchg
movsl
pop
or
cmp
cs
push
mov
push
mov
ret
mov
cltd
jmp
mov
andb
push
add
enter
loop
out
sbb
inc
push
les
mov
leave
in
mov
int
dec
or
rclb
gs
push
push
push
scas
fstpl
es
mov
and
popf
gs
sub
adc
xor
xchg
inc
add
mov
nop
and
mov
jnp
imul
arpl
cmp
pop
cmp
sbb
cmp
out
data16
outsb
pop
rcrl
in
push
js
jl
jae
push
sub
pop
int3
lret
sbb
pushf
xchg
push
sub
repnz
hlt
in
xor
dec
mov
sub
dec
inc
lahf
jl
pop
int3
in
mov
sub
mov
mov
shl
jns
aam
xor
out
or
out
ret
sarb
pop
and
jae
mov
out
sub
or
inc
xor
fdiv
adc
sub
mov
addl
incl
out
and
pop
test
or
xor
and
fimuls
mov
sub
mov
jl
js
dec
sbb
pushf
mov
jp
push
fiaddl
sahf
mov
add
adc
adc
insb
leave
das
pop
rolb
adc
inc
pop
push
adc
xchg
icebp
dec
adc
dec
bound
xchg
data16
sbb
jmp
iret
mull
sbb
imulb
mov
hlt
dec
jecxz
push
sub
outsl
xchg
xchg
push
inc
pop
pushf
mov
fnsave
pop
lcall
icebp
pop
aam
andb
stos
loope
out
cmp
sbb
rcll
sbb
out
mov
add
push
les
mov
xchg
push
pop
fnsave
push
int
push
loope
movsb
dec
scas
mov
push
xchg
mov
sub
jns
mov
cmpsb
mov
call
fcom
and
push
hlt
inc
sub
sbb
mov
and
cltd
jp
ret
jo
jb
add
sub
push
cmp
ja
cmovle
sahf
js
lods
xchg
ljmp
rcrl
js
push
addr16
sbb
sub
sub
insb
mulb
pop
ljmp
pop
dec
mov
lret
pop
mov
jne
push
in
lcall
sqrtps
mov
test
incb
sbb
sub
scas
cwtl
fidivl
push
rol
rcrl
push
out
jo
lock
xchg
mov
add
jne
rcr
mov
and
sbb
xchg
call
mulb
mov
loopne
mov
lock
scas
int
popf
mov
mov
jp
cmp
je
jg
leave
push
outsb
mov
push
lret
movsl
sbb
cmpsb
shl
and
out
aam
sbb
in
repnz
sar
adc
loope
mov
subl
sar
test
push
push
stos
fcmovnbe
hlt
mov
test
jae
xchg
xchg
xchg
out
cmpsl
cltd
nop
sbb
or
sbb
dec
jl
jne
rcrl
sarb
jbe
cmp
sbb
jns
pop
mov
ss
in
cmpsl
push
xorb
xchg
mov
ret
cmp
xlat
mov
clc
mov
rclb
pop
int
mov
loopne
mov
xchg
or
ret
pop
fidivrs
cmpsl
repnz
les
fcoml
and
lret
push
mov
xchg
mov
dec
xchg
or
sbb
add
mov
mov
dec
int3
scas
fwait
adcl
fmull
das
push
xchg
mov
mov
push
in
fstl
enter
mov
mov
fs
jae
sbb
jmp
lds
jns
aad
call
sub
std
in
pop
into
repnz
inc
pop
xchg
and
or
push
rorl
lods
cs
push
into
test
outsl
lods
xchg
or
out
sub
in
add
and
stc
addr16
movsl
ljmp
pop
xchg
push
fdivrl
aas
jl
icebp
inc
mov
js
in
adc
mov
stc
fldenv
mov
rclb
mov
sub
test
and
add
sbb
adc
add
jno
dec
ret
or
mov
push
jl
and
daa
sbb
jg
psubsb
test
push
mov
jno
add
mov
xor
xor
jl
lods
pop
bound
loop
jge
inc
jg
dec
cmp
test
fisubl
adc
push
in
mov
add
adc
loope
imulb
inc
pop
clc
mov
movsl
dec
addr16
adc
fsubs
stos
idivl
iret
cmpb
or
stos
fmul
invd
fwait
and
and
jnp
xlat
sub
sbb
mov
sbb
cmp
leave
icebp
sbb
mov
xchg
mov
cmp
pop
lods
mov
mov
jnp
lds
movsb
iret
dec
std
test
test
data16
push
ds
rep
mov
addr16
push
mov
stos
push
inc
xchg
and
mov
addr16
lock
jmp
cmp
push
enter
cld
mov
ja
sbb
fdivp
loope
out
shr
mov
sbb
rorb
mov
jmp
mov
out
xor
sbb
push
js
sti
mov
daa
cwtl
adc
jg
stos
shl
jecxz
cmpsb
mov
and
imul
cmp
lret
test
inc
and
cltd
cmc
movsl
jo
cs
or
add
xor
xor
pushf
mov
and
mov
idivb
enter
sub
lret
fs
jbe
push
lahf
js
push
ficomps
popa
xor
push
testl
lods
lcall
lcall
sti
aaa
test
pop
sti
lds
lods
sbb
ss
aam
aas
data16
mov
dec
push
push
xchg
push
and
add
test
mov
fisubl
insl
das
shll
data16
pop
into
in
dec
inc
loop
xorl
in
call
bound
jl
loopne,pn
jns
or
or
stc
jmp
sub
popa
jp
test
cmp
or
push
push
test
mov
insl
bound
push
dec
stos
test
and
mov
mov
ret
pop
jns
test
rcrl
lret
mov
push
and
sub
or
std
jge
mov
sbb
mov
repnz
and
pop
mov
imul
stos
push
mov
subps
cmp
popf
fdivrl
pop
dec
icebp
adcb
popa
jno
pminub
inc
push
add
and
rorl
loopne
iret
into
iret
mov
mov
in
cwtl
jle
out
jae
xchg
xor
ja
jge
xor
dec
mov
std
dec
or
xchg
into
fistps
fidivs
mov
std
jp
cld
mov
push
add
push
pop
mov
mov
call
jecxz
xchg
pop
imul
cmp
cltd
jns
mov
mov
dec
sub
fs
enter
int3
repnz
cs
jno
mov
sub
loope
data16
loope
xor
in
sbb
mov
mov
inc
sahf
pushf
jbe
int3
sbb
jno
xor
bound
leave
loope
pop
sbb
pop
adc
or
sub
jecxz
jg
lret
cmp
adc
les
fcoml
imul
cltd
pop
pop
loope
jo
fimull
and
jmp
push
pusha
in
scas
aas
les
or
rcl
push
nop
mov
sbb
hlt
lds
leave
pushf
xchg
adc
fxch
xchg
loop
stc
popa
dec
jnp
std
xor
push
push
sub
xor
aad
add
in
sbb
daa
jne
push
pop
nop
pop
and
stc
mov
lret
dec
push
cmp
cwtl
add
popa
push
sub
movsb
or
add
fistpl
in
and
sbb
movsb
add
inc
cmpsb
or
movsl
loope
push
adc
xchg
loope
add
pop
lret
fists
mov
rorb
cmc
movsb
call
je
test
mov
xor
xor
mov
inc
dec
mov
cltd
lahf
mov
pop
lcall
pop
pop
or
sub
jb
or
pop
dec
push
adc
jl
aad
jnp
adc
idivl
add
xor
ficoml
fldl
in
sbb
lock
fisttps
mov
add
mov
xchg
call
pop
sbb
add
test
loopne
mov
mov
ss
mov
cmp
or
aam
xchg
dec
pop
cmc
pop
or
xor
jmp
and
insb
jg
pop
bound
stc
in
in
lock
jle
xor
push
pop
fcomip
xor
pushw
test
push
test
in
into
lahf
dec
push
push
sub
and
mov
inc
or
push
push
dec
pop
jo
pop
stc
add
adc
cmpsb
mov
add
pop
push
cld
es
rorb
mov
mov
mov
mov
jbe
mov
out
stos
or
nop
dec
jg
pop
je
lods
sub
or
mov
jecxz
xor
jb
mov
xchg
scas
xor
adc
pushf
push
pop
cltd
bound
loopne
pop
pop
xchg
xchg
mov
sbb
arpl
in
push
inc
pop
mov
sub
adc
arpl
mov
mov
inc
mov
xor
test
cmp
mov
das
xchg
sti
push
bound
test
dec
xorl
fldlg2
add
nop
incb
pop
and
std
sub
imul
lahf
pop
adc
push
repz
insb
push
popf
sub
dec
in
rcrl
scas
cmp
xchg
inc
inc
sbb
imul
fldt
sbb
movsb
adc
loop
out
sub
add
cmpl
addr16
fsubrs
int3
mov
lds
nop
add
xchg
push
dec
fs
imul
mov
sub
jo
sbb
cmp
leave
jecxz
push
or
push
dec
mov
sub
sbb
jl
pop
popa
iret
bound
pop
out
rorb
jne
out
outsb
addr16
mov
mov
push
mov
or
sub
add
add
jmp
mov
movsl
dec
cmp
inc
or
int3
inc
push
push
loopne
pop
aas
daa
mov
add
push
adc
sbb
mov
sub
mov
sbb
push
mov
lret
divb
push
dec
mov
xchg
sbbb
cmp
lahf
dec
lds
and
jno
mov
xor
inc
mov
movb
mov
and
mov
inc
xchg
insb
push
or
jae
in
fstpl
repnz
