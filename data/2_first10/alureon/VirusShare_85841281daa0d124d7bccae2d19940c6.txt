fidivs
pop
fnstcw
jg
jno
iret
jae
jno
cs
mov
adc
leave
repz
outsb
xlat
shr
sub
pop
std
mov
dec
pop
ljmp
xor
add
sbb
add
jnp
or
pop
fbld
stos
leave
ficompl
sbb
mov
sbb
in
adc
cmc
out
inc
pop
sbb
test
std
rclb
in
mov
in
out
inc
and
xchg
imul
or
and
in
sbb
sbb
xor
cmp
pop
cmp
mov
sahf
mov
neg
push
sub
jo
cmp
pop
incb
xchg
adc
jne
dec
dec
aad
fwait
hlt
dec
lcall
enter
lock
sahf
sbb
inc
in
dec
adc
mov
sbb
das
push
pusha
ret
push
xor
iret
lods
inc
hlt
xchg
add
add
test
cmp
jl
jno
push
jo
cmp
sbb
xchg
cmp
fwait
jl
xlat
pop
psrad
jae
jle
adc
das
and
fnstcw
mov
xchg
arpl
push
ret
mov
loope
stos
lret
xor
add
leave
mov
out
or
notl
push
dec
inc
add
lcall
adc
aaa
mov
push
es
jmp
fildl
pop
sbb
iret
repz
sbb
jbe
xchg
add
xchg
leave
push
fstl
jl
mov
or
sub
mov
int
mov
xor
gs
je
repnz
int3
cltd
inc
lret
mov
out
pop
jno
data16
push
push
iret
pop
cltd
mov
pop
loop
inc
stc
test
cmp
adc
pushf
mov
push
mov
pop
jl
loope
aaa
dec
xor
fadds
sbb
dec
mov
les
mov
push
inc
and
jge
inc
xchg
ja
push
sti
push
cmp
pop
leave
fs
or
dec
jg
add
and
cmp
lods
sti
repnz
push
popf
add
xor
mov
pop
xchg
imul
in
jb
out
popf
flds
lahf
outsl
mov
push
or
in
xchg
outsl
xlat
xchg
adc
mov
gs
push
aaa
cmp
and
int
dec
push
xchg
fisttpl
std
or
sub
xchg
push
pop
xchg
cmpsl
jp
outsl
mov
jmp
pushf
and
fnstcw
popa
cltd
gs
sbb
cmpsl
sub
adc
or
jae
mov
insb
push
fimull
jno
les
jl
mov
and
mov
xor
pop
addr16
xor
inc
xchg
cmpsl
mov
adc
sub
loope
mov
in
nop
sub
enter
push
cli
dec
jno
mov
xchg
push
inc
mov
out
jl
bound
test
ja
fsubl
push
and
pop
fwait
add
outsb
mov
daa
sahf
mov
adc
mov
push
popf
ja
aam
pop
lods
ss
and
and
out
adc
pop
shrl
push
mov
mov
xor
nop
push
adc
imul
cmp
and
out
pop
daa
pop
sbb
add
repz
sub
test
sbb
loope
leave
cli
adc
push
cmp
xchg
inc
and
lahf
pop
nop
sub
lods
cltd
mov
and
insl
mov
mov
push
outsl
test
xchg
xor
ficoms
fstl
or
pop
xor
cli
xor
stc
mov
daa
inc
addl
or
adc
and
mov
mov
je
ror
fwait
push
mov
and
out
lcall
pushw
or
sub
inc
mov
jae
push
or
jp
negl
sub
adc
ja
mul
push
insb
call
mov
shrb
cld
pop
xlat
pop
daa
and
outsb
jno
add
cmp
xlat
rorl
gs
call
dec
mov
mov
test
add
xchg
jae
pop
divb
jge
fnstcw
js
push
lods
ss
in
adc
ljmp
jge
in
xor
xchg
push
out
mov
ss
jecxz
gs
and
or
dec
adc
ja
ret
push
mov
mov
movb
stos
push
cwtl
sub
dec
cmp
or
test
call
mov
xchg
pop
or
jne
psrlq
sub
mov
pop
add
cmpsl
sahf
dec
in
movsb
cmp
xor
mov
sub
push
movsb
add
push
pop
sub
xor
cli
icebp
test
mov
mov
loop
aam
icebp
aam
lea
sub
jnp
lods
inc
fs
xchg
cmp
out
adc
sar
xchg
out
int3
sti
pop
int3
call
fdiv
in
je
filds
fbld
lods
out
shrl
loop
std
sub
pop
xor
xchg
xchg
cmpsl
push
movsl
sub
hlt
and
xchg
jge
xor
xor
mov
test
aaa
inc
xchg
pusha
inc
ret
in
lcall
in
push
inc
sar
mov
lcall
pop
push
sub
enter
jmp
rep
push
adc
xchg
cld
mov
inc
into
mov
dec
cmpsb
std
cmp
pop
push
xchg
xor
mov
call
xlat
mov
jnp
int3
and
decl
and
stc
in
scas
inc
sbb
das
aam
pusha
stos
rcl
cmc
xchg
stc
int
xchg
cmpb
cmp
fcmovnbe
cmp
cmp
or
jecxz
cmp
lods
shll
aas
lret
pop
push
and
cmp
xor
mov
aaa
lcall
stos
loopne
imul
std
ret
cmp
mov
jo
inc
mov
mov
fwait
lods
pushf
ret
adc
push
mov
mov
into
inc
mov
cmp
push
pop
inc
dec
pusha
push
mov
lret
dec
inc
add
mov
jp
jmp
sbb
insl
adc
sub
fs
cmp
adc
and
subl
adc
push
rolb
push
aam
pusha
inc
or
fucomi
adc
enter
mov
ds
arpl
add
adc
les
fsubrl
fbld
sub
fstpt
xchg
repz
loope
out
lea
and
mov
lds
or
mov
mov
inc
aad
leave
mov
adcb
movsb
ja
jecxz
push
xchg
movsb
jle
cmp
and
dec
mov
inc
add
push
in
lods
test
and
sahf
dec
adc
sbb
jbe
mov
xchg
test
jecxz
mov
dec
lcall
out
push
adc
and
jbe
shr
cs
inc
and
insb
mov
ret
lahf
inc
add
outsl
loopne
dec
mov
inc
popf
jnp
out
and
mov
cwtl
popaw
lods
inc
inc
pop
test
sbb
cld
or
pop
inc
aas
call
mov
pusha
push
cmp
rorb
push
ss
sbb
add
pop
cmp
stos
int
dec
popa
add
inc
mov
inc
lcall
sti
sub
fisubrl
lret
dec
nop
out
inc
push
xchg
ret
lods
rcrb
cmpsl
cltd
imul
xor
xorb
test
add
inc
mov
jmp
pop
shll
dec
jg
adcl
push
add
out
and
shl
loope
mov
je
push
add
mov
stos
daa
ret
ficomps
xor
scas
sub
pop
add
xchg
xchg
leave
jmp
or
mov
lock
adc
push
add
xor
les
repnz
stos
pop
pop
xchg
inc
jo
mov
mov
ja
or
repz
pop
ret
gs
push
adc
hlt
xor
mov
mov
pop
pop
jbe
jne
pop
aad
repnz
xchg
stos
cmpsb
pushf
gs
js
jl
sub
insb
inc
xchg
fimuls
es
xor
adc
mov
es
shll
mov
xor
mov
sbb
fisubl
cmp
in
loopne
int
out
cltd
cmp
test
mov
mov
sbb
push
jge
aaa
insb
into
sbb
lock
lods
mov
pop
pop
ror
bound
push
js
test
and
pop
sbb
bnd
push
hlt
dec
mov
out
shrb
mov
rol
in
adc
mov
xchg
push
sti
add
daa
add
push
into
push
aas
sbb
arpl
pop
mov
nop
dec
add
sbbl
inc
and
fwait
cmpsl
mov
shll
popa
cmpsb
xlat
in
or
pop
cltd
push
mov
cld
daa
sti
adc
out
xor
stc
mov
mov
jg
push
jg
cmp
repz
out
je
cmp
pop
popa
mov
add
mov
dec
js
add
and
shl
or
dec
xchg
jo
and
es
mov
mov
cld
mul
cmp
aam
inc
jle
dec
sti
enter
pop
jne
clc
mov
xlat
sti
cld
sbb
sbb
shr
xchg
aas
dec
rcl
cmp
out
cs
outsb
push
rcr
imul
in
int
loopne
pop
push
xlat
fwait
pop
dec
outsl
adc
jl
inc
rolb
addr16
jl
adc
arpl
aaa
test
gs
dec
mov
jmp
pop
pop
aas
mov
jmp
jge
inc
stos
js
xor
xchg
push
das
mov
mov
stc
adc
xor
cmp
pop
and
shr
xor
mov
pusha
test
mov
test
mov
scas
ljmp
add
fstps
fs
in
iret
mov
ja
je
and
push
pop
xor
xchg
out
jle
in
adc
scas
adc
ficoms
in
jne
clc
jb
not
rclb
xchg
push
dec
cmp
ja
movsl
rcrl
lock
cmp
xchg
dec
xor
inc
jno
pop
aad
arpl
push
or
pop
lock
scas
mov
mov
fadds
inc
inc
fidivrs
imul
ret
pop
sub
mov
dec
adcb
jnp
push
adc
or
lea
jns
xor
movsb
movsb
outsl
lods
inc
xor
add
sub
out
jo
cmp
pop
jecxz
xchg
bound
in
mov
inc
addr16
test
int
xchg
or
loopne
rcl
mov
shrb
jnp
xor
dec
jl
addr16
mov
push
add
test
mov
cmp
mov
cmpsl
into
pop
iret
jmp
loopne
setbe
repnz
mov
out
lret
mov
dec
les
mov
fdivrl
lret
mov
adc
sahf
sbb
adc
dec
xchg
jl
jl
mov
pop
sbb
call
cwtl
mov
sub
jne
int
loope
dec
xor
push
loope
lret
cwtl
xor
jle
mov
mov
sar
hlt
mov
xchg
cmpl
add
ljmp
call
hlt
add
in
outsb
out
scas
cwtl
call
push
pop
std
in
in
sub
pop
fadds
sarb
jge
cld
popa
add
xchg
pop
jo
adc
fwait
add
sbb
ljmp
xor
jg
lds
into
add
mov
sahf
cmp
andl
aaa
jns
clc
add
js
insl
aad
add
fnstcw
and
imul
jge
xlat
and
cmp
and
pop
iret
je
mov
mov
adc
jbe
push
rorl
mov
shll
test
pop
and
add
scas
std
mov
je
or
pop
lods
or
xchg
and
mov
jne
mov
jecxz
orb
shlb
and
roll
adc
dec
fwait
and
gs
fcmove
in
adc
xorb
lock
dec
sahf
dec
es
sub
xor
push
out
pop
insl
xchg
std
xchg
les
mov
rorl
cmp
bound
std
pusha
and
test
mov
mov
push
repz
jno
jg
addr16
adc
sahf
sbb
test
imul
lret
xor
and
add
inc
jl
stos
add
and
scas
gs
pop
mov
in
mov
js
jno
cmc
test
addr16
jmp
push
xchg
xchg
test
cmp
inc
std
ja
test
arpl
cmp
add
bound
xchg
push
popa
xor
fcompl
xchg
cs
xchg
fs
les
xor
fdivrl
mov
movsb
andb
scas
in
lcall
mov
pop
adc
rorb
pop
jne
lret
lret
fwait
je
adc
out
sbb
int3
mov
or
mov
or
fisubrs
sti
adc
inc
pop
inc
sarl
xchg
jmp
hlt
xchg
add
into
and
mov
flds
insl
xchg
fwait
sbb
ja
sub
add
cli
shll
adc
fldt
jae
ljmp
mov
sahf
addr16
xor
test
adc
cmp
loope
xor
bound
dec
and
je
jne
in
add
sbb
inc
mov
jecxz
out
sbb
sub
fsubs
xor
mov
lret
cmp
dec
ret
stos
inc
add
into
xor
outsl
adc
mov
fidivrl
xchg
mov
js
sbbl
jle
fldenv
icebp
jnp
cltd
mov
aad
loop
jmp
push
xor
xchg
pop
adc
mov
pop
stc
lods
les
inc
push
xchg
outsl
je
dec
mov
out
push
mov
xchg
leave
int3
inc
pop
les
dec
mov
icebp
pop
jp
mov
jecxz
pop
aas
scas
hlt
and
test
gs
arpl
add
insb
sub
out
int3
pop
into
push
data16
xor
inc
push
push
sub
xor
in
pop
xor
add
mov
cs
mov
add
je
pop
das
lods
and
adc
nop
sub
inc
imul
sub
jg
icebp
adc
cmp
mov
push
mov
push
adc
xchg
cmp
shlb
je
push
cmc
ficomps
add
cld
xor
divl
fmull
aad
xchg
xchg
out
jne
andl
xchg
pop
push
cmp
lea
vdivps
inc
lea
arpl
and
xchg
xchg
sub
dec
pop
xor
mov
cmpsl
mov
bound
jle
adc
xor
push
into
in
pop
xchg
movsl
pushf
in
sbb
sbb
jmp
dec
lea
lea
fdivrl
stos
dec
scas
imul
fwait
pop
push
faddl
int
push
les
sbb
jae
cltd
icebp
ljmp
mov
push
sahf
mov
sti
aam
into
inc
push
fiaddl
xchg
out
loope
push
mov
mov
lret
jo
add
and
lahf
pop
jl
insl
sbb
imul
add
pusha
divb
outsb
xor
fcmove
addr16
sub
cltd
mov
scas
jmp
push
push
push
data16
or
lods
ljmp
into
mov
enter
mov
call
ss
in
push
cmp
repnz
and
push
adc
pop
sbb
mov
push
nop
add
jge
mov
pusha
int3
jecxz
jle
ljmp
aaa
jbe
adc
xor
xchg
lcall
push
pop
mov
pop
cli
jae
cmpsl
xchg
jmp
fs
jnp
pushf
cwtl
cmp
inc
sahf
dec
aas
jbe
sub
cmpsl
mov
and
test
or
mov
out
jbe
pop
ss
ret
enter
xor
or
mov
lock
mov
inc
pushl
inc
lret
cmp
pushl
inc
aam
dec
or
xchg
jae
mov
movsl
cmpsb
lods
out
jno
push
insl
loope
or
into
aad
xchg
or
popa
cld
add
jno
repnz
addr16
xor
sbb
lret
popa
mov
pop
mov
jp
push
jns
scas
sbb
dec
xlat
in
in
jne
dec
cmp
popa
jns
jae
stos
loop
mov
jg
mov
movsb
lds
fcomps
les
mov
xor
dec
and
inc
sbb
out
push
ja
push
dec
pop
adc
les
pop
aam
lret
xchg
arpl
sti
addl
imul
movhps
xchg
mov
fwait
aaa
push
jmp
push
pop
and
inc
mov
in
push
leave
dec
loope
sti
or
push
nop
sub
gs
movsl
add
push
or
addr16
pop
xor
dec
or
add
push
divb
xchg
insb
mov
imul
std
stos
jecxz
fcmovbe
dec
les
jecxz
xchg
enter
ds
mov
fwait
nop
or
gs
push
cwtl
fimull
int3
dec
das
scas
jmp
mov
xor
and
add
mov
fsub
int
inc
inc
inc
dec
inc
lods
dec
mov
adc
ret
and
int
inc
mov
and
stos
xchg
mov
mov
dec
sbb
loope
mov
and
fimuls
add
pop
ljmp
pop
mov
ds
das
cmp
mov
pop
int
mov
aam
addb
dec
outsl
sahf
mov
push
fisubrl
sub
mov
cwtl
in
jno
lods
push
push
into
xor
sbbl
in
jmp
sub
jg
inc
push
ret
iret
roll
sti
mul
and
outsl
or
mov
sbb
das
nop
hlt
xchg
js
mov
pop
cld
js
mov
aam
adc
mov
enter
fidivs
rcrl
mov
adc
rcrb
data16
or
cmp
nop
notl
dec
xchg
add
inc
sbb
mov
dec
lret
and
mov
sahf
aad
pop
cli
mov
sahf
shll
xchg
jl
fists
sub
sbb
adc
jge
out
add
pop
lea
sbb
test
mov
xor
mov
les
ret
out
inc
imul
or
sbb
cli
cmpsl
inc
ret
mov
movsb
cmp
sti
in
outsl
mov
call
test
ljmp
adc
sub
inc
mov
out
rcrb
stos
xor
mov
sub
inc
jge
xchg
adc
fimuls
pop
icebp
jl
sub
pop
enter
mov
jno
push
popf
int3
fwait
cmpsb
lds
xor
add
mov
sbb
lock
cmp
add
add
mov
sub
mov
jp
insl
mov
jb
inc
int3
loope
adc
push
div
adc
pop
out
insl
in
dec
sbb
sub
xchg
std
xor
or
mov
loopne
enter
gs
fisttps
clc
insb
inc
push
jno
push
lock
jno
add
push
ret
out
jbe
shl
divb
and
shll
add
adc
fistl
shrb
cmp
pop
pop
rcrl
rcll
rcrb
cmp
adc
mov
push
mov
cmpsb
inc
sti
addb
cli
insb
mov
pop
push
adc
push
or
and
dec
add
movsl
sub
mov
xchg
daa
xor
es
adc
or
out
popf
mov
ljmp
daa
pop
test
mov
cmp
into
addr16
lcall
fs
lfs
mov
ret
icebp
sbb
mov
add
aad
fmull
movsb
mov
dec
std
imul
mov
mov
decl
adc
cmp
stos
dec
xchg
jb
insb
fcoml
fisubrl
add
pop
sub
mov
jae
add
jae
adc
push
jmp
sub
lock
xchg
fistpll
sbbl
mov
xchg
lock
pop
mov
cmp
push
es
mov
pop
hlt
xor
out
hlt
xlat
xor
push
in
je
push
shlb
mov
sbb
incb
adc
rcrb
fcmovu
add
ds
xchg
fsubl
rorb
ret
jmp
shrb
cmp
add
icebp
scas
fcompl
ficompl
test
std
gs
mov
lods
jge
mov
adc
dec
sub
jl
push
xor
or
lcall
push
jbe
pop
mov
inc
fisubrl
in
aaa
lea
fldt
jle
xchg
ret
into
dec
test
fld1
shl
lcall
mov
cmp
pop
test
cmc
fidivs
sbb
sbb
pop
and
pushf
stos
xchg
arpl
adc
stc
sub
loop
xorb
cmp
push
cmp
or
xchg
and
mov
fcoms
aad
fisttpl
mov
mov
dec
push
add
nop
cmp
mov
popf
fdivr
adc
mov
outsb
idivl
gs
nop
dec
jne
cmp
sbb
cwtl
xor
lret
mov
fcomi
add
xchg
scas
pop
dec
or
add
adc
inc
cmc
cmp
sub
sub
push
enter
xor
cld
sbb
out
push
out
fadds
inc
dec
and
or
cmp
dec
lock
inc
pop
pop
adc
pop
lret
lods
mov
mov
xor
lds
mov
mov
mov
mov
shll
sbb
mov
test
inc
repz
or
pop
and
or
cli
jno
inc
xchg
push
inc
aad
hlt
add
lret
push
movsb
mov
pop
fcompl
arpl
bound
pusha
sub
push
test
mov
outsb
xor
xor
jle
pusha
push
sbb
adc
sub
idiv
in
dec
xchg
and
xchg
fs
icebp
lds
lahf
cmc
daa
lods
test
jnp
insl
xchg
xlat
pusha
add
xchg
int
add
xchg
in
outsb
repnz
shlb
int
test
and
popa
adc
dec
xchg
cmc
mov
push
pop
aas
cltd
mov
int
mov
xor
mov
lds
inc
in
arpl
pop
mov
sbb
outsb
mov
pop
xor
std
pop
jnp
pop
movsl
push
js
add
mov
sub
dec
xchg
pop
outsl
in
sub
dec
adc
adc
mov
loopne
xor
std
xchg
sbb
cmp
out
or
inc
or
add
stos
aad
add
int3
push
aaa
not
xchg
in
negb
dec
xchg
sbb
mov
cmp
and
lahf
in
imul
inc
xor
or
jnp
adc
push
or
test
xchg
xor
dec
decb
lret
dec
out
mov
cmp
imul
jg
or
adc
std
add
jge
shlb
push
into
fcoms
fdivl
adc
outsl
inc
or
mov
mov
cld
inc
adc
mov
lcall
jle
cwtl
add
xlat
inc
addr16
mov
or
stos
outsl
xor
das
outsb
out
jecxz
ss
mov
mov
int
mov
cmp
or
pop
or
cld
xchg
push
pop
push
push
out
jge
out
enter
mov
push
repz
lods
push
mov
cmp
lods
lock
add
das
pop
mov
xor
mov
roll
sub
cmp
push
mov
add
cwtl
dec
ja
insl
jnp
movsl
cmp
pop
fxch
popa
clc
inc
fistpl
xor
sub
das
shr
repnz
adc
imul
in
dec
push
jle
dec
jg
jb
imul
test
pop
and
mov
mov
pop
int
jge
sbb
test
xchg
idivl
insl
add
scas
les
inc
adc
rclb
lret
mov
pop
xor
test
fists
fistpll
xchg
pop
sti
mov
xor
lret
fmul
std
sub
cmp
cli
and
mov
orl
iret
push
add
or
pop
bound
imul
mov
dec
mov
xor
imulb
pop
cmc
add
in
inc
push
push
adc
mov
popf
sub
sub
pop
mov
push
adc
pop
fcoml
imul
mov
pop
xor
jp
pusha
xor
inc
push
push
inc
ss
fidivs
mov
cmc
ds
jne
mov
jae
or
and
mov
inc
add
je
mov
iret
xor
lahf
sub
jg
in
pop
sub
dec
xor
fwait
outsb
pop
sbb
arpl
repz
cli
push
filds
inc
sti
test
and
xchg
cltd
in
out
mov
clc
and
loop
stos
fisttpll
clc
push
aas
sbb
repz
jl
inc
jle
add
xchg
out
xchg
inc
add
and
lock
xchg
movsl
outsb
cmp
fcompl
mov
cmp
or
repnz
pop
or
or
mov
ljmp
sub
cmp
lods
mov
dec
pop
testl
insl
stc
dec
jg
es
jae
mov
push
mov
mov
popf
pusha
sbb
inc
push
pop
push
add
sahf
mov
cli
std
jg
pop
xchg
push
push
loopne
into
test
out
push
or
mov
push
mov
cli
lret
sub
dec
mov
cmp
iret
jnp
add
ljmp
flds
jg
inc
push
loopne
aam
int
int
sbb
mov
incb
jl
scas
repz
jge
inc
push
shrl
movsl
sub
dec
fdivl
inc
sahf
dec
jecxz
inc
inc
sbb
dec
pop
call
push
std
jo
shlb
dec
and
mov
int
and
add
jmp
pop
lret
adc
loopne
lds
sub
xchg
push
pop
out
xchg
sbb
push
data16
or
sbb
aam
jae
outsb
arpl
mov
incb
add
mov
fidivrs
popl
sub
jmp
mull
mov
aad
insb
rcll
mov
push
mov
lea
xchg
pop
and
push
into
cs
push
dec
xchg
cmp
sbb
dec
pop
aam
jge
lds
lahf
push
shrl
push
pushl
sti
xchg
push
mov
stc
inc
jp
adc
fwait
jno
dec
sub
loope
stos
or
insb
movsb
xchg
scas
cmp
fdiv
sub
es
adc
and
sub
push
push
add
xchg
add
rorl
sub
gs
jle
xor
and
js
daa
clc
fimull
ret
mov
cmp
sub
daa
mov
adc
mov
testb
adc
repnz
movsl
and
sbb
jne
out
cld
cli
mov
ss
das
mov
test
insb
icebp
dec
les
cmp
jo
push
xchg
cmp
lods
scas
jae
add
adc
out
test
jecxz
dec
ret
stos
pop
clc
dec
jbe
jnp
jnp
test
in
insb
mov
mov
out
or
push
out
lea
in
add
clc
dec
or
mov
out
dec
rcrl
sub
test
mov
shl
nop
jb
int
dec
aad
gs
mov
shll
ds
inc
decl
fsubs
add
push
and
adc
mov
imul
enter
pop
jo
mov
pop
xor
sbb
daa
inc
sahf
push
mov
mull
xor
stos
push
das
out
mov
daa
aaa
repnz
inc
loope
jne,pt
addr16
pop
fcmovb
shrb
adc
or
dec
xor
jno
int
data16
mov
ret
jns
lret
leave
mov
push
mov
lods
jnp
shl
jae
pop
sub
jne
jecxz
std
mov
jle
into
lods
mov
je
iret
sub
popf
test
push
push
xor
lea
dec
fnstcw
pop
xor
popf
lock
xchg
push
sub
call
in
cld
jns
ret
stos
push
dec
mov
mov
fldenv
dec
jmp
cmp
mov
mov
imul
in
enter
mov
aaa
xor
cwtl
sub
out
sub
enter
mov
push
loopne
dec
or
test
fildll
scas
rol
jae
mov
aad
dec
ljmp
fadd
dec
adc
lock
lds
push
mov
sub
pusha
push
xchg
daa
mov
mov
stos
inc
pop
cmp
pushf
add
mov
in
enter
dec
jbe
jnp
xchg
loope
test
pop
jb
out
mov
dec
cmp
mov
xor
jle
out
cli
mov
rolb
in
xchg
bound
xchg
push
arpl
repnz
roll
pop
sbb
cmpsb
sahf
lods
jns
ror
mov
movsb
inc
xchg
addr16
mov
enter
sbb
aaa
sub
cs
or
jge
mov
mov
insl
jecxz
mov
jo
int
out
popf
cltd
pop
pop
lret
and
jo
out
jb
mov
mov
insl
shll
add
stos
pop
jmp
idivb
cmc
mov
sarb
xor
ds
lods
xor
pop
mov
jnp
movsb
sti
out
mov
push
stos
repz
repz
movsb
inc
jbe
fnstenv
call
dec
jbe
mov
or
lds
push
test
push
jp
lea
inc
out
lea
mov
xor
jge
push
push
mov
stos
pop
mov
fimull
loope
push
in
push
inc
add
and
shll
push
xor
mov
add
inc
sub
inc
test
subl
neg
inc
jg
xlat
movsb
sub
xor
cmp
add
sahf
inc
es
loop
jg
mov
push
mov
adc
stos
jecxz
sub
cli
add
adc
int
xor
mov
xchg
in
cli
test
test
adc
je
sbb
gs
in
xorl
bound
jecxz
add
scas
add
daa
fidivrs
adc
xor
lret
cmpb
in
cmpsb
lahf
test
pop
gs
or
mov
and
pop
out
and
jae
rorb
sbb
cs
pop
fsubrl
ret
jecxz
sahf
xor
popa
pop
stos
adc
sub
sub
xchg
sub
cmp
sbb
pop
rorb
mov
ret
inc
xor
dec
xchg
fnsave
test
out
mov
daa
jb
sub
stc
dec
cmp
repz
lock
and
stos
cltd
cld
movsb
sbb
jno
in
mov
mov
or
test
cltd
jns
out
push
or
jae
orb
aam
jnp
mov
mov
mov
jno
bound
mov
pop
cs
add
aad
enter
mov
add
mov
adc
adcb
jle
mov
sar
orl
jns
mov
and
stos
mov
add
lcall
testl
ret
js
inc
sub
mov
movsl
lea
adc
xor
mov
push
lcall
lcall
jnp
rorl
call
and
out
test
jecxz
jmp
jmp
mov
test
push
push
inc
sbb
and
ret
adc
jmp
ret
jecxz
fisubrl
sbb
mov
cmp
sbb
mov
sub
xor
negl
in
mov
fldpi
sbb
sahf
sahf
nop
or
notb
aad
cli
int3
sahf
repnz
sbb
sahf
inc
loopne
testb
add
nop
in
jl
popl
cmp
mov
prefetch
xor
push
pop
cld
and
lcallw
push
inc
dec
int
popa
dec
ljmp
xor
fs
inc
stc
orl
sbb
adc
mov
pop
lock
ret
push
lcall
jmp
inc
pop
mov
fsub
fwait
sbb
loop
inc
out
sbb
test
lahf
adc
fcmovnu
mov
jb
mov
push
jecxz
jbe
fldl
in
or
out
sbb
mov
fnstenv
pop
pusha
rcl
push
pop
popf
sbb
loope
or
test
popf
pop
loope
pop
lock
add
jp
cmpsl
sbb
or
add
jge
xchg
insl
mov
data16
add
cmp
push
mov
gs
ficompl
sub
test
rcr
jae
mov
popf
fcomps
rcrl
in
inc
push
cmpsl
or
sbb
das
and
adc
js
lahf
inc
imul
int
jg
mov
lock
mov
sub
inc
lcall
fistps
inc
hlt
jns
hlt
pusha
cmp
lcall
sahf
lcall
push
into
daa
notb
lods
cmp
aam
xchg
test
iret
popf
in
mov
mov
mov
aaa
mov
es
add
sahf
sub
pop
fisubrs
jb
mov
push
fisubrl
std
mov
jb
les
push
cmp
or
aas
xchg
pop
xchg
mov
aaa
call
mov
and
int
addr16
sbb
xchg
pop
push
out
pushf
sub
stos
jmp
popf
or
mov
push
lret
inc
jno
mov
jnp
lret
pop
fs
and
jp
inc
xlat
mov
loopne
adc
xchg
sarl
cmpsl
test
clc
int3
xor
xlat
jge
jb
xchg
and
adc
in
adcb
mov
fnstenv
lret
mov
push
sbb
xchg
stc
adc
sub
mov
insl
lds
mov
out
xor
insl
fists
je
jge
mov
adc
ljmp
jbe
xchg
jle
in
jno
add
mov
xchg
sar
push
mov
add
jae
mov
pop
xchg
rclb
pop
orl
aaa
jb
lea
cld
or
xor
into
sbb
movsl
rcrl
sub
cld
dec
popa
idivl
cmp
outsl
pop
repz
push
mov
es
out
ret
adc
jne
pushw
sbb
mov
rclb
lret
lahf
stos
cmpsb
imul
push
pop
push
cld
mov
test
lret
data16
xchg
aas
sbb
sub
stc
data16
leave
mulb
int3
or
inc
dec
pop
inc
xor
out
mov
mov
xchg
jb
cltd
add
lea
fstps
cld
cmc
xchg
hlt
jge
shll
ficompl
daa
sbb
pop
movsl
roll
arpl
ljmp
in
arpl
and
jp
pop
inc
sbb
pop
ret
lds
or
dec
shl
mov
bound
hlt
xor
xchg
popf
xchg
and
ret
call
xchg
iret
imul
and
jno
fcomi
or
ja
inc
call
in
out
fmuls
jo
outsb
mov
jg
daa
inc
repz
hlt
push
cmp
lods
shrb
icebp
xor
pusha
xor
pcmpgtd
or
pop
cmpsl
inc
fmull
dec
ljmp
jo
or
data16
pcmpgtd
movsb
shll
das
popf
sbb
add
into
in
fcmove
mov
add
xlat
daa
cld
stos
cltd
inc
jmp
aam
dec
push
enter
jno
inc
orb
test
adc
stos
jb
cld
jbe
fcomps
cmc
mov
inc
push
pop
movsb
jbe
decb
cmp
add
cld
imul
imul
and
movsl
repnz
fnstsw
lcall
mov
imul
xchg
adc
adc
sarl
pusha
mov
adcb
add
fcomp
repnz
xorb
subl
xchg
mov
movsb
in
stos
aas
cs
sbb
ret
aad
push
lock
dec
lcall
and
jbe
mov
ds
clc
push
rorb
jae
push
dec
ljmp
sub
push
arpl
add
hlt
cmp
sbb
add
xor
gs
xchg
mov
out
lds
pop
je
les
dec
sbb
rcrb
aas
movsl
mov
mov
cmp
daa
test
rolb
pop
or
shll
adc
inc
and
pop
cmc
enter
roll
clc
fisubrs
sub
mov
mov
xchg
or
pop
mov
xor
out
mov
test
jg
mov
mov
add
mov
dec
std
jecxz
push
push
or
cs
jg
push
add
xchg
ret
adc
std
aam
sub
push
sbb
sbb
cmp
shrb
repnz
mov
imul
popf
fxch
bound
dec
or
or
or
pop
xchg
test
or
sub
out
iret
ja
stos
push
dec
mov
in
add
jl
jl
fstpt
das
jb
mov
shl
sbb
lahf
jle
pop
fwait
cmp
xor
call
xor
inc
js
lahf
ljmp
mov
mov
xchg
int3
pushf
notb
adc
js
lds
test
mov
jnp
call
mov
out
imul
popf
out
dec
test
loopne
cmp
insl
cmp
je
push
lock
jbe
fmull
pusha
xchg
push
mov
push
inc
lock
ds
in
push
xchg
stos
outsl
iret
in
push
and
das
sar
sti
out
jg
lock
add
fisttps
out
repnz
pop
sbb
arpl
in
sub
mov
push
ja
jae
insl
sbb
mov
stos
mov
fst
xor
and
scas
jg
xlat
hlt
adc
imul
mov
ds
cmpsl
test
iret
or
jnp
jmp
pop
fsubr
adc
fadd
xor
lret
outsl
xchg
stos
sbb
in
xor
xchg
sbb
cltd
enterw
gs
ret
jns
shll
out
out
ss
mov
out
sbb
pop
es
add
insb
es
dec
xchg
xchg
xorl
pop
jg
mov
sub
jbe
loopne
xchg
cmc
movsb
les
xchg
mov
imul
in
shl
lahf
notb
ljmp
jae
inc
inc
mov
jl
or
in
jecxz
jecxz
push
shrl
sub
or
in
mov
mulb
cmp
in
iret
pop
popa
jnp
push
adc
mov
in
clc
test
push
mov
inc
dec
mov
fwait
addr16
imul
rclb
cmp
clc
lods
or
nop
in
aam
das
and
pop
mov
fdivp
aam
insb
int
ret
mov
xor
inc
mov
jns
mov
push
inc
add
loop
dec
cmp
jg,pt
and
sbb
lock
stos
xor
in
cmp
sti
push
out
lds
xor
cmp
int3
and
sub
es
repz
jl
cmpsl
jg
ds
pop
movsl
mov
rorl
call
addr16
sbb
pop
daa
add
fistps
dec
and
mov
push
daa
xchg
repnz
mov
mov
or
mov
mov
mov
push
mov
cmova
popf
pop
push
jb
dec
mov
sahf
mov
hlt
test
cs
popa
cmp
jle
add
in
mov
jnp
bound
call
or
mov
adc
inc
insb
mov
cmp
dec
lock
sbb
cs
ja
rcll
movsl
andb
out
jb
cmp
cmovle
imul
jg
fs
aad
lret
stos
adc
fcmovnb
rcr
mov
stos
jns
mov
mov
insl
inc
sub
inc
movsb
pop
cmpb
inc
int3
lret
fsubs
scas
dec
xor
xor
jl
add
dec
mov
popf
inc
pushf
inc
adc
das
inc
mov
push
and
out
aas
and
mov
in
jp
pop
pop
mov
jb
nop
in
pop
xor
pop
pop
mov
sbb
inc
pushf
adc
push
gs
aam
cld
xor
cmp
fistps
add
and
pop
jmp
jmp
fcompl
loope
pop
add
xor
adc
lret
cmp
shll
mov
outsb
ljmp
jbe
pop
scas
ss
aaa
popf
aaa
mov
jns
bound
cmc
push
in
pop
push
dec
cld
int3
in
fldcw
call
clc
xchg
add
dec
ret
pop
enter
jmp
and
adc
cmp
test
cld
sbb
pop
loopne
push
in
hlt
mov
mov
das
add
loopne
daa
push
lea
fwait
jmp
mov
sbb
jl
pushf
mov
mov
test
stos
lea
mov
xor
stc
jo
cld
mov
sti
fiadds
push
push
rolb
shr
inc
enter
xchg
pop
mov
loop
sbb
test
and
cmp
mov
addr16
popa
mov
pop
mov
xadd
arpl
ja
mov
push
lcall
int
cli
mull
or
xchg
divb
push
fiaddl
cld
pop
jecxz
jbe
push
jle
imul
lods
or
lock
xlat
and
jecxz
and
sub
ficomps
pusha
push
pop
imul
jg
and
xchg
mov
or
and
xlat
dec
xchg
mov
sahf
adc
ror
dec
in
inc
lcall
cmp
mov
cld
lds
movsb
jne
pop
outsl
xor
xchg
sbb
lock
shlb
xchg
jbe
stc
lods
pop
ljmp
xchg
pop
xor
addb
jmp
fiaddl
cli
ljmp
and
hlt
pop
je
adc
dec
inc
pop
in
pop
fisttps
cltd
cmc
jg
pop
mov
jecxz
jo
mov
dec
int
xchg
adc
sbb
pop
push
jb
popf
or
in
lahf
pop
iret
stos
test
lret
dec
xchg
mov
in
pop
mov
push
jp
loope
fs
sbb
push
sub
xlat
nop
cmpsl
orb
sbb
int3
cmp
sub
mov
std
push
xchg
push
leave
xchg
rcl
add
in
sbb
jl
test
cmp
pop
add
mov
push
adc
adcl
sbb
test
inc
inc
cmpsb
lods
sarl
scas
inc
mov
cmpsl
int
adc
pop
xchg
ficoms
outsb
jmp
sbb
mov
loope
push
fadds
sbb
idivl
ret
xor
aam
push
fidivl
or
sbb
scas
or
xor
sbb
mov
outsb
fisttpl
es
mov
sbb
inc
adc
cmp
scas
je
sbb
adc
lds
add
cmc
fidivl
cltd
cmpl
rorb
add
scas
inc
and
fisubs
jl
lods
movsb
inc
in
aam
adc
cmp
xor
aad
sub
es
jmp
pop
mov
sbb
or
aam
cmp
mov
cli
xchg
jns
inc
push
mov
dec
pop
add
cmp
cmpsl
mov
lahf
pop
call
jne
negl
jmp
cmpsl
xchg
push
or
dec
popf
les
sahf
jnp
fisttpll
fs
addl
insl
push
loope
movb
clc
mov
pop
test
xor
adc
or
mov
outsb
icebp
insb
pop
or
hlt
mov
divl
pop
adc
and
in
pop
aad
stos
iret
sub
and
fnstenv
sub
jns
inc
addb
fcomps
jns
and
stc
xor
jp
mov
stos
imul
jb
push
sbb
inc
xchg
lods
mov
inc
inc
mov
jmp
lods
push
addl
add
into
xor
popf
mov
negl
iret
sbb
mov
inc
sbb
cmp
out
mov
mov
mov
movzwl
jecxz
inc
rcll
inc
xor
push
lahf
arpl
in
sbb
sbbb
add
and
or
mov
mov
loope
cld
getsec
jne
arpl
xchg
loopne
add
inc
rcrl
pushl
push
sbb
jmp
ret
add
push
dec
int3
pusha
pusha
shrl
and
addb
adc
ds
jb
cli
gs
mov
xchg
test
jo
cmpsb
jle
adc
mov
pushf
jns
fists
sahf
rorb
enter
and
push
addb
jbe
fisttps
mov
mov
imul
jl
push
jp
xchg
iretw
inc
test
jg
lds
iret
mov
sub
adc
cli
pop
fiaddl
mov
dec
rcrl
cmp
js
das
xlat
out
cltd
addr16
pop
mov
mov
add
xor
negl
mov
loop
icebp
push
stos
cmpb
and
jge
sbb
jbe
ret
jnp
add
xor
sub
cmp
or
mov
sbb
daa
sarl
sub
int3
add
sub
adc
mov
rcrb
sbb
leave
inc
cmpsb
pop
or
or
in
ficompl
cmpsl
fimuls
mov
pop
nop
xor
xor
fnsave
xor
das
sbb
push
xlat
enter
jns
jmp
lea
cld
cmp
jge
fs
in
jne
fwait
pushf
ret
movsl
shr
adc
mov
push
cmpsl
xchg
in
mov
mov
and
cmp
cmp
jno
cwtl
or
push
xor
lret
mov
repz
js
inc
fiaddl
or
cmp
nop
xchg
ficomps
push
adc
fldt
ja
pop
inc
add
enter
xchg
cs
add
cmp
cmp
mov
sbb
sub
jge
cmpsb
and
sahf
or
pop
jnp
jno
or
mov
sub
repz
test
fcomps
imul
jae
sbb
daa
iret
loopne
add
cmpsb
iret
shl
fmull
dec
adc
sbb
daa
insl
rorl
and
js
xchg
stos
aam
lcall
dec
pushf
sbb
mov
push
xchg
pushf
mov
jmp
imul
push
arpl
pop
jmp
push
add
xchg
imull
mov
adc
mov
vpsllq
push
sub
fistl
push
out
dec
pusha
cld
dec
sub
adc
orl
rcrb
or
jns
loope
jno
scas
aam
cmpsb
xchg
sub
mov
rcrb
push
xor
mov
fidivl
or
adc
cmp
iret
dec
or
fwait
lds
clc
adc
test
lds
leave
gs
cld
push
lock
int
or
sbb
cmp
jns
mov
xchg
loopne
mov
mov
mov
imul
mov
and
sub
iret
aas
mov
mov
mov
cmpsb
popf
jbe
or
stos
mov
mov
ja
add
sbb
jo
test
bound
roll
dec
aaa
push
and
dec
repz
mov
mov
lods
jmp
adcl
xchg
int3
lcall
stos
cmp
mov
cmc
xor
cmp
push
fbstp
sbb
xchg
pop
dec
jmp
ja
aam
sbbb
mov
dec
cmp
or
and
jge
arpl
cwtl
jmp
cmp
push
cmp
mov
out
mov
aam
inc
jbe
mov
mov
orl
popf
and
adc
jmp
cs
test
ljmp
mov
cwtl
jns
push
sbb
jp
in
ja
sub
mov
pusha
lock
lret
push
push
lret
stc
stos
fidivl
in
lcall
add
lret
lea
rcl
icebp
shlb
into
out
cmp
ss
mov
daa
test
push
cmpsb
mov
sub
sbb
mov
mov
test
hlt
rcl
out
mov
ret
and
xchg
cltd
mov
add
pusha
push
cwtl
sahf
bound
nop
adc
ret
out
jl
xor
jo
out
push
adc
sub
mov
push
or
or
call
push
faddl
mov
mov
idivl
int3
lock
adc
jnp
dec
jg
lds
jno
xchg
push
test
mov
xor
inc
lcall
xor
or
adc
push
cmp
mov
sub
xchg
dec
xchg
stos
jb
pop
call
pop
insb
xor
inc
notl
jg
cmp
and
inc
mov
int3
iret
mov
ja
cltd
repnz
sbb
dec
mov
repnz
push
pop
fidivs
mov
sbb
lret
dec
inc
sbb
push
nop
mov
mov
out
cmc
je
divl
sahf
fstpl
movsb
lea
loop
aam
outsl
mov
or
movsb
clc
sub
int
addr16
sbb
adc
jl
subb
hlt
rorb
sub
push
fidivrs
js
test
or
imull
aaa
in
pop
or
jle
cmp
out
adc
push
or
fistps
cmpsb
mov
out
push
push
jge
shl
mov
call
js
cmpsl
xchg
inc
push
outsl
rol
lea
adc
mov
push
shll
mov
sub
imul
out
stc
xor
push
iret
stos
out
movsb
mov
mov
dec
jmp
pop
or
xchg
sbb
dec
cmc
fld
mov
shlb
movsl
dec
sbb
inc
dec
daa
mov
fisttpll
xchg
jae
and
mov
jns
cli
adc
sarb
push
pop
mov
out
xchg
sbb
add
xchg
es
pop
es
cld
push
loop
addr16
cmpsl
movsb
pushf
inc
std
mov
sub
push
movsb
mov
xchg
lcall
daa
repz
lods
push
adc
das
add
inc
movsb
cmc
mov
cmp
push
arpl
cmp
call
jecxz
test
inc
in
clc
repnz
out
dec
cmp
or
enter
xchg
popf
jnp
or
push
mov
xchg
adc
push
dec
pushf
call
lods
or
fxch
mov
adc
fwait
inc
test
cmpsb
add
sub
sahf
and
pop
das
sbb
adc
in
and
jb
test
xchg
mov
in
pop
xchg
pop
out
sbb
lret
pusha
lods
xor
inc
sbb
sahf
pop
popf
loop
adc
fwait
addr16
jmp
mov
lea
into
inc
pusha
sbb
fcompl
pop
inc
clc
jae
loop
ret
repnz
test
jmp
enter
mov
call
mov
lcall
sbb
out
xor
jbe
mov
mov
loope
jb
lret
test
bound
adc
adc
xchg
insl
scas
cmp
movsb
leave
cmp
lea
pop
jmp
jae
lret
mov
cli
jg
jp
dec
in
pop
repz
mov
fiaddl
mov
xchg
lock
mov
push
pop
in
aad
dec
dec
insb
mov
add
out
push
stos
xchg
mov
sub
leave
pop
and
jne
mov
test
imul
fwait
popa
add
popa
mov
je
add
leave
jne
pop
sbb
push
inc
lea
sbb
stos
sub
hlt
inc
pop
aam
mov
jmp
sti
xor
push
inc
and
jmp
add
das
mov
mov
pop
js
sbbl
iret
pop
addb
push
pop
sbb
xor
nop
adc
sub
mov
xor
rol
iret
roll
lock
jmp
fsubs
pop
cltd
xchg
int3
mov
lods
leave
call
sahf
jne
or
adc
or
sbb
loop
pushf
jo
mov
pop
lret
and
ret
push
mov
or
push
add
loopne
mov
xchg
add
cmp
fmulp
xor
les
fiadds
push
mov
xchg
scas
sub
rcr
xchg
or
xchg
mov
sub
sbb
sbb
push
ud0
sbb
mov
xchg
in
insb
shl
ror
loopne
mov
outsb
push
xlat
cmpsl
xchg
jbe
fwait
imull
pop
sbb
lds
movb
sub
aad
add
jnp
stos
inc
pop
insb
adc
sbb
adc
cmpsl
mov
in
cmp
push
or
add
adc
mov
ss
fnstcw
jmp
nop
or
in
jns
and
daa
addr16
xchg
les
jge
pop
fistps
dec
mov
push
pop
imul
xchg
int3
jns
mov
mov
iret
xchg
xchg
mov
mov
lods
push
xor
and
push
inc
inc
push
fldenv
data16
mov
je
xchg
pop
xor
in
lods
andl
nop
mov
add
add
push
insb
mov
add
nop
add
and
aam
adc
push
inc
insl
xor
outsl
aas
pusha
call
adc
fwait
test
push
int3
icebp
push
mov
pop
sahf
daa
sahf
mov
jo
or
fcoms
nop
jg
cmp
xchg
and
xchg
push
cmp
insb
aam
mov
subb
lods
ret
push
cli
mov
ret
sub
or
mov
dec
sub
sbb
loope
pop
ljmp
jg
add
cpuid
sub
in
aas
mov
loop
movsl
lahf
fdivrl
jecxz
adc
repnz
iret
mov
popf
sarb
dec
into
lahf
pop
push
test
enter
push
xor
inc
leave
mov
inc
lar
lds
scas
or
loop
aam
add
ss
lahf
and
mov
add
push
das
icebp
iret
inc
cli
outsl
repnz
sub
sub
cmpsb
daa
push
mov
xor
loopne
cmpsl
outsb
pop
cmp
xchg
pand
pop
test
out
jo
je
loope
fsts
xlat
fstpl
dec
fwait
hlt
mov
popl
xor
sub
scas
pop
mov
mov
mov
lret
shll
subb
test
imul
mov
inc
daa
mov
sbb
jnp
or
sbb
sbb
jnp
and
or
and
adc
jl
xchg
add
mov
outsl
ficomps
mov
mov
cmpsb
mov
and
data16
in
sti
test
aad
nop
sbb
dec
jp
xchg
mov
push
xchg
lds
pop
cld
in
jmp
int3
push
fdivp
cs
mov
cmpsl
test
leave
mov
push
arpl
int3
xchg
jle
in
sbb
xorl
fnsetpm(287
or
jnp
outsb
lea
movsl
and
mov
pop
sti
cltd
mov
cmpsl
jno
fadds
inc
in
xchg
fisubs
and
jo
dec
xor
add
cmp
cld
dec
mov
sbbl
test
rcrb
xchg
and
mov
pusha
mov
add
pushf
mov
xor
sub
xor
movsl
cmp
xchg
xlat
fsubl
jecxz
mov
mov
and
push
cwtl
sbb
das
std
repnz
xchg
es
rorb
shrl
sbb
mov
cmp
les
dec
arpl
gs
rcrb
inc
repnz
or
ljmp
dec
cli
jl
add
icebp
lea
sahf
movsb
mov
xor
rcll
into
sub
cmp
mov
popa
mov
in
inc
mov
mov
js
jmp
rcr
xor
mov
scas
or
pop
mov
cltd
icebp
or
jp
mov
sbb
scas
aas
add
xchg
push
xor
cmp
leave
pop
jnp
or
add
adc
mov
xchg
shrb
cmp
filds
or
loope
ret
xchg
dec
fs
mov
push
dec
sahf
pop
pop
into
nop
ds
daa
aam
xchg
push
int3
stos
call
adc
push
in
shll
aas
pop
mov
jnp
jb
in
into
call
or
sub
addr16
insl
xchg
mov
ljmp
dec
or
je
andb
dec
cwtl
cli
into
repnz
lds
cli
lods
pop
dec
loopne
or
inc
adc
int
inc
jne
dec
xlat
jb
jl
jns
mov
mov
inc
in
test
in
xor
sbb
lret
mov
scas
mov
ss
fwait
int
test
imul
push
pop
in
sbb
ficoms
push
insb
dec
data16
xchg
fnsave
data16
addl
loop
mov
inc
sahf
ror
mov
sbb
add
data16
sahf
shlb
and
dec
push
dec
push
cmc
xor
push
xchg
and
adc
jo
cld
hlt
mov
ficompl
dec
mov
inc
fiaddl
xlat
divb
les
cmp
jne
dec
scas
jg
xor
cmp
fs
cs
mov
arpl
mov
xchg
dec
push
xchg
jno
and
fildl
cmpsb
mov
std
mov
mov
xchg
xlat
sti
test
shl
pop
insl
jne
repz
ljmp
out
adc
inc
inc
insl
jne
ds
mov
push
dec
int3
and
lock
in
sbbb
xor
es
push
insb
jecxz
orb
in
lods
aas
cs
jp
out
insl
shl
pop
add
xor
jl
dec
lods
ljmp
dec
push
outsb
adc
mov
loopne
int
jmp
xchg
jne
lods
xor
shl
pop
inc
push
pop
sbb
xchg
pop
inc
sbb
subb
out
das
push
jmp
cmp
addr16
pop
pop
or
and
orb
into
xor
cmp
ja
in
sbb
push
or
mov
out
adc
loop
dec
bound
mov
fisttps
out
fisubs
add
or
jns
cmp
jae
ret
fcoml
lcall
push
dec
repz
shrb
inc
pushf
ret
stc
pop
jg
in
jp
or
adc
or
inc
fmulp
mov
div
jo
daa
das
pop
cmp
or
arpl
jne
test
add
and
or
mov
es
or
icebp
lods
or
les
repz
push
jecxz,pt
and
cmp
inc
ljmp
pop
jne
inc
je
inc
subl
mov
xor
and
push
int3
push
mov
xchg
inc
mov
pop
arpl
dec
lock
fwait
push
insb
in
rorl
outsl
jg
rcrl
xchg
cmp
mov
lock
outsl
inc
adc
jae
fwait
jns
fisttpll
ss
adc
xchg
ffreep
lock
sahf
push
xchg
mov
pushl
cmpsb
xor
scas
sbb
rcrb
xchg
movsb
pop
push
cs
cmpl
movsl
pop
arpl
add
in
insl
out
adc
push
xor
add
mov
mov
pop
mov
repz
adc
lods
cmp
cmp
std
out
and
loopne
sti
inc
leavew
shlb
bound
cmp
adc
ret
inc
adc
mov
jb
arpl
mov
push
movsb
insl
dec
push
dec
inc
xchg
imul
mov
sbb
inc
test
mov
popf
cmp
add
pop
and
in
mov
lea
mov
out
lret
outsl
int
jae
push
mov
cmp
lcall
hlt
sub
sbb
pop
pop
loope
pop
mov
mov
mov
out
pmaxub
data16
psrlq
mov
rcrb
daa
mov
int3
scas
push
adc
bound
dec
jb
scas
test
ds
out
jmp
lcall
arpl
repnz
jnp
out
cmpsb
enter
repnz
sbb
out
loope
jge
loopne
mov
push
xchg
sub
pop
inc
rcrl
pxor
out
and
pop
cmp
jge
xchg
int3
xor
or
push
ss
cmp
push
int3
popa
mov
xor
in
scas
leave
inc
orb
xchg
inc
jne
inc
bound
jl
orb
jmp
cmp
mov
xor
adc
sub
jnp
mov
aas
sti
cmp
fwait
cwtl
jno
addr16
mov
clc
inc
scas
gs
inc
mov
mov
mov
adc
jecxz
adc
mov
arpl
arpl
mov
push
outsl
sbb
xchg
in
push
icebp
outsl
sbb
jno
cs
aam
adc
sub
mov
arpl
sub
push
out
cmp
in
jl
stc
cmp
mov
mov
inc
jae
mov
cmp
xorb
ficoml
and
arpl
scas
ds
adc
and
pusha
mov
xor
or
faddl
sbb
mov
in
dec
mov
lahf
aad
fsts
in
je
jmp
fsubl
test
adc
popa
nop
pop
inc
dec
xchg
mov
imul
mov
ret
cmpsl
pop
stc
out
or
sbb
shl
xor
fcomip
ds
inc
pop
rol
dec
pop
cld
push
xchg
loop
pushf
dec
or
arpl
jb
mov
aaa
inc
add
cmp
je
or
or
jae
sbb
aaa
stos
dec
test
lods
nop
push
pop
mov
outsb
lret
fsubrp
mov
cmp
and
les
out
add
mov
dec
dec
mov
out
dec
fstpt
ja
sarl
and
in
add
loop
rorl
mov
xor
add
push
dec
pop
fiaddl
fwait
cltd
into
aam
out
out
lods
btc
xchg
mov
and
jno
aad
and
jns
xchg
stos
sub
xchg
aaa
gs
out
push
pop
xchg
enter
adc
sbb
jl
inc
orb
mov
cmpsb
sti
and
movsb
inc
and
push
filds
fisubl
xchg
cmp
outsb
ficomps
iret
jg
push
and
stc
mov
jg
pop
inc
inc
push
movsl
or
imul
pop
pop
fs
or
xor
scas
fsubs
in
sub
sbb
je
adc
xor
adc
ljmp
mov
xor
out
sbb
jp
xchg
sub
sub
or
cmc
and
push
cmc
in
mov
int3
add
ja
jmp
mov
call
mov
sbb
push
xchg
lds
adc
xchg
aad
jo
in
push
lret
jge
fsubrl
xor
cld
std
jl
mov
or
sbb
fisubl
jns
xchg
inc
out
in
or
inc
mov
inc
jp
xor
jl
xor
xlat
xlat
ds
test
fcmove
xchg
xchg
or
inc
or
cwtl
sbb
sub
xchg
in
repz
add
fistl
pop
or
in
sub
or
leave
mov
pop
data16
cmp
push
adc
mov
iret
push
pop
mov
pusha
dec
lcall
cmp
mov
mov
push
push
mov
mov
xlat
add
sbbb
les
mov
add
adc
arpl
cmp
fwait
xchg
imul
xchg
dec
imul
outsl
mov
inc
stc
fwait
push
fldcw
dec
arpl
lds
ss
out
mov
outsb
push
ficoml
f2xm1
inc
clc
cwtl
mov
adc
inc
mov
add
stos
out
mov
cmpsl
call
push
lret
xchg
loope
xchg
pop
mov
loopne
arpl
ret
or
jg
je
mov
sbb
xor
nop
subb
push
call
inc
int3
pop
lea
cmc
or
popa
cmp
ficompl
jns
xchg
pop
jns
std
sub
or
sbb
inc
adc
aaa
nop
sbb
ss
sbb
out
mov
mov
mov
test
jne
cwtl
add
xchg
lock
dec
mov
test
xchg
fbstp
movb
lret
dec
shrl
ret
testb
and
jle
adc
inc
imul
out
orb
dec
or
or
xchg
addb
idivb
cmpsb
xchg
push
cli
stos
and
std
push
pusha
xor
inc
hlt
jle
rorl
out
adc
incl
test
ss
stc
inc
fsts
scas
clc
push
test
push
sbb
sarl
pop
out
add
or
cmp
or
xor
lcall
ja
mov
enter
cmc
jns
sub
xlat
lods
hlt
cltd
push
xlat
popf
xor
mov
inc
bswap
in
jmp
push
js
pusha
adc
imul
ljmp
jnp
lea
sbb
jnp
push
and
xor
into
adc
lret
push
stc
mov
adc
imul
pop
imul
sbb
pop
iret
xchg
and
fwait
in
mov
mov
push
mov
int3
add
mov
dec
aas
out
negb
push
inc
push
push
push
fisubl
rcrl
adc
hlt
push
or
int3
mov
push
lock
push
xchg
andl
cmpsl
adc
add
test
sub
inc
jns
aam
ljmp
inc
jne
xchg
sahf
or
dec
adc
mov
mov
xor
adc
mov
sbb
aad
xor
push
movsb
in
mov
repnz
cmp
in
cmpsl
xchg
sahf
push
jbe
lahf
adc
negw
mov
sub
sarb
ss
outsb
pop
jno
lahf
int
dec
mov
xor
jg
imul
xor
sbb
decb
addr16
mov
mov
loope
push
repz
shl
sub
jnp
imul
je
add
into
xchg
adc
stc
fs
or
pop
scas
lods
sbb
loope
call
sbb
or
add
push
imul
push
repz
imul
inc
ljmp
mov
test
jae
push
push
jmp
sahf
aas
sbb
ret
sbb
jge
sub
lret
outsb
into
sub
aam
test
or
in
popf
out
shrb
cmp
dec
jns
mov
mov
xor
jb
inc
mov
aas
lods
add
cmp
xchg
sub
mov
ds
adc
mov
test
adc
push
popa
jo
icebp
mov
movsb
into
arpl
out
pop
push
scas
adc
and
jnp
sbb
fsub
inc
adc
mov
ss
cmpsl
mov
fxch
xchg
test
fists
pop
les
std
xchg
aam
xchg
sbb
adc
scas
dec
and
pop
ret
mov
jge
stos
dec
cmpsb
repz
and
inc
addr16
and
jmp
ret
adc
sbbb
jae
pusha
lret
cwtl
aas
pushf
pop
and
mov
and
add
inc
and
fsubrl
mov
jno
in
sbb
insb
test
dec
mov
dec
mov
pop
fcoms
jle
outsb
pop
push
std
xchg
sbb
idivw
adc
fbstp
pop
int3
adc
cmc
stos
jnp
mov
test
imul
les
and
xor
push
leave
jnp
inc
bound
bound
lock
ljmp
aas
dec
test
push
xchg
stos
inc
xor
or
int3
sarb
arpl
push
or
mov
cwtl
testl
pop
cmp
pop
mov
fistl
sbb
push
sbb
notb
mov
xor
ds
inc
mov
addr16
imul
test
mov
xor
int
inc
inc
fs
pop
jne
shlb
jo
negl
outsb
call
xor
inc
int3
xchg
cld
sahf
pop
xchg
mov
mov
movsb
mov
outsb
addr16
cld
fwait
sbb
aad
push
xor
outsl
inc
int3
dec
or
movsb
adc
mov
ss
divl
adc
into
inc
add
or
jle
xor
jl
jae
lds
pop
mov
jno
sub
cmpsl
jp
aad
aaa
int
inc
lcall
or
mov
test
arpl
jo
pushf
mov
faddp
fcoml
int
push
jb
test
pusha
ret
out
inc
xchg
lret
mov
jmp
and
outsb
pusha
xchg
mov
fcomi
xchg
cmp
fdivs
push
lds
add
rcl
pop
sbb
dec
xchg
jb
add
sahf
cmp
xor
icebp
sbb
sbb
and
cmp
daa
pmullw
testb
add
loope
or
test
leave
push
xor
push
outsl
push
in
out
jb,pn
cld
fsubrl
shr
mov
push
inc
and
repz
and
enter
mov
es
mov
add
mov
push
clc
rorb
lds
fwait
lret
mov
bnd
jo
sub
cld
mov
inc
cli
jle
divl
fs
fwait
and
fcom
shlb
fstl
hlt
dec
sbb
jle
leave
enter
mov
mov
or
cmp
dec
dec
jecxz
fistpll
std
loopne
lds
popa
inc
dec
lret
push
cmp
sbb
cmpsl
sti
in
cmp
sub
lret
pushf
das
sbb
movsb
pop
ret
in
mov
pop
cli
inc
xor
pop
or
stos
inc
test
xchg
daa
movsb
jg
mov
test
adc
xchg
bound
rcrb
int
call
push
jle,pn
ds
out
pushf
push
out
repz
lcall
dec
cmp
push
add
jge
add
jae
xor
mov
add
hlt
test
inc
fimull
pop
mov
call
pop
movsb
mov
adc
or
mov
cmp
mov
lret
jnp
hlt
cltd
and
mov
jne
inc
andb
lahf
rcr
adc
xchg
xchg
std
int
jg
push
add
nop
inc
aaa
shr
dec
cwtl
pop
call
dec
popf
fwait
sub
aad
nop
orl
addr16
les
mov
cmc
ret
ds
or
mov
aaa
fucom
xchg
cld
inc
lret
jmp
loopne
mov
das
aas
sub
jnp
stos
sub
mov
fcmovnu
stos
loop
mov
jo
mov
mov
push
inc
sti
push
pusha
push
mov
lods
fisubs
neg
iret
xchg
jo
cld
add
jl
testb
je
cmpsl
arpl
ljmp
fiaddl
and
imul
out
in
mov
mov
test
xor
repnz
cwtl
cmp
loop
pop
xchg
test
jb
dec
cli
xor
push
push
adc
clc
in
outsb
pop
inc
out
dec
sbb
shrl
shrb
repz
adc
hlt
sbb
aas
adcb
pop
dec
lret
mov
cmp
fisubrs
div
enter
sub
popf
dec
sbb
mov
inc
pop
stos
xlat
add
scas
sub
subb
imul
lods
icebp
enter
jns
cld
sub
jo
icebp
imul
cmp
xchg
icebp
fsubrl
popf
and
mov
int3
add
add
or
jnp
popf
pop
mov
andb
mov
xor
jns
fstpl
rcll
es
outsb
jp
push
and
mov
insb
lock
jg
jno
mov
pop
sbb
pushf
pop
lods
add
stos
rcrb
das
bswap
jge
cmp
test
jmp
dec
sub
push
xchg
add
sub
aas
pop
push
xchg
pop
cld
push
fsubrl
and
xchg
push
cmp
fwait
and
mov
stc
inc
cmp
std
sub
pop
stc
xor
push
mov
inc
in
lcall
sub
mov
fs
les
lock
ja
sbb
out
push
dec
popf
dec
jns
pop
inc
xchg
in
rorl
mov
nop
fisubrs
call
out
jecxz
xor
dec
fcom
xor
xchg
cmpsl
mov
xchg
xchg
and
scas
loope
das
andl
sub
and
loop
repz
int
int3
test
jmp
sbbb
sub
sbb
leave
data16
outsl
dec
scas
or
add
int
lret
xchg
push
pop
cmp
std
jge
roll
xchg
or
rcrb
movsl
sbb
and
pop
cmp
jmp
dec
iret
lock
dec
inc
inc
ds
ja
les
push
adc
add
sbb
inc
inc
das
mov
adc
pop
repz
lods
test
and
aaa
dec
sub
and
fcompl
mov
aaa
lea
push
lods
jge
cli
push
fists
mov
lds
dec
push
ss
push
xchg
mov
dec
pop
mov
sarb
mov
subl
pushf
aaa
jbe
repnz
leave
jle
xchg
aaa
loopew
fcoml
aaa
pop
lods
fwait
out
int
js
pop
fildll
adc
out
call
jmp
push
test
test
repz
aam
mov
and
ds
hlt
imull
add
sub
sub
aad
push
ss
shl
aaa
adc
addr16
jg
adc
bound
popa
cld
nop
leave
sub
dec
leave
repnz
adc
lret
dec
jne
or
pop
into
mov
pop
shlb
mov
pusha
dec
dec
lds
aas
mov
mov
push
imul
adc
pop
and
imul
adcl
ja
jno
push
mov
loop
fcompl
mov
mov
in
jae
pop
xor
sub
ret
cmp
rol
lea
add
hlt
mov
pop
psubb
mov
add
and
clc
test
add
test
pop
imul
mov
mov
jle
fwait
aam
sbb
mov
ljmp
pop
das
shrb
mov
sbb
push
add
inc
je
out
push
adc
xor
in
mov
test
jmp
xlat
clc
push
sub
test
sbb
push
mov
cmp
push
pop
dec
jb
lds
mov
push
push
int
jp
insl
dec
push
cwtl
ja
sub
xchg
imul
pop
sbbl
add
pop
arpl
fbstp
and
and
xchg
sbb
sub
jno
dec
lret
dec
xchg
push
push
ret
xor
push
out
sbb
out
dec
jp
mov
inc
rcll
bnd
push
flds
pop
mov
xchg
aad
test
and
adc
cli
push
es
jmp
into
mov
es
cmp
lods
jne
or
ja
push
add
xor
and
addr16
fisttpll
enter
jae
imul
mov
cmp
mov
sub
push
mov
or
inc
cmp
repz
out
int3
test
call
movsl
dec
push
and
pushf
push
push
ds
movsb
arpl
mov
jne
or
dec
sbbb
stos
sub
mov
lret
faddl
jp
dec
inc
lcall
je
cld
mov
pop
ss
hlt
ret
fnsave
and
mov
mov
ret
xorl
sbb
sbb
icebp
aas
add
mov
daa
inc
add
cmp
xchg
or
aas
mov
xlat
jo
test
push
hlt
jnp
aas
int3
add
inc
xlat
enter
stos
mov
leave
movsb
aam
sbb
ficoms
dec
jns
lock
adc
rcr
or
add
add
push
movsb
xchg
xor
fildll
out
push
bound
ficompl
sub
xor
adc
out
test
push
mov
repz
movsb
cld
ret
xchg
jb
sarb
test
push
repnz
cmp
subb
andb
call
lock
enter
int
jg
inc
ficoms
xchg
push
sahf
dec
stos
cmpsl
aas
jl
mov
stc
sbb
mov
pop
push
jge
fsubl
test
out
stos
mov
in
outsb
outsl
cmc
and
loop
mov
cmp
lods
out
iret
sub
pop
jle
mov
popf
or
out
insl
dec
xchg
jle
les
arpl
push
xor
xorl
xor
adc
sub
in
xchg
scas
cmp
aaa
mov
push
or
int3
mov
ds
cmp
sub
dec
je
add
dec
imul
xchg
dec
in
mov
mov
add
test
ja
xchg
nop
sbb
pushf
ds
cmp
into
adc
jge
clc
sti
xchg
pop
jae
out
adc
lahf
add
cmpsb
sbb
cltd
jb
ss
sbb
sub
mov
push
or
in
fwait
and
test
inc
jmp
push
aaa
pusha
add
xor
mov
or
fldl
stos
pop
push
lea
ss
adc
pop
je
push
add
push
push
xchg
arpl
fmul
cs
mov
bound
rcl
dec
inc
int
xor
pop
popf
adc
dec
insl
sub
aaa
jmp
or
cmpsl
pusha
scas
or
mov
dec
les
scas
pop
dec
out
dec
xchg
xchg
dec
ds
inc
mov
cmp
in
mov
dec
stos
repz
inc
cmp
mov
push
repz
add
add
push
out
lock
inc
sti
ljmp
or
jl
mov
jbe
stos
inc
js
das
lret
cmp
push
rolb
lea
scas
add
push
inc
jmp
sub
inc
jle
jecxz
lods
aam
jge
imulb
jns
xlat
sahf
lcall
movsl
mov
das
mov
sbb
or
push
dec
outsl
mov
push
outsb
jno
stos
jecxz
or
adc
fstp
pushf
cmp
lods
fwait
push
lock
push
loop
xchg
shll
insl
cs
ret
jle
fdivs
pushf
sub
pop
push
sub
ljmp
or
fndisi(8087
inc
loope
jno
or
add
xchg
inc
popa
ret
mov
adc
les
int
mov
inc
sbb
out
mov
cmpl
xlat
lea
aas
xor
arpl
adc
sub
mov
sbb
inc
pop
and
jae
dec
imul
adc
adc
cmc
mov
jae
jge
arpl
lods
shl
or
fmull
inc
or
or
pop
imul
adc
dec
add
cmpsb
out
ret
mov
inc
xchg
nop
inc
fwait
push
jne
cmp
xchg
out
cmp
sub
sti
sbb
in
loopne
into
sahf
je
negl
jbe
pop
push
movsb
mov
xchg
jl
pop
fmull
mov
dec
dec
fcom
outsl
mov
mov
jmp
pop
add
pop
pusha
sti
add
in
pmuludq
stc
subl
sti
icebp
je
pop
repnz
mov
cmp
pop
adc
adc
inc
pop
or
mov
sarl
jecxz
pop
ret
push
mov
movsl
push
mov
sbb
dec
aaa
popa
add
sahf
data16
xchg
rolb
imul
das
and
mov
cmpsl
imul
bound
or
in
pop
scas
inc
xor
dec
xchg
inc
cltd
aam
or
push
xchg
xchg
adc
jg
outsb
xor
pop
in
out
mov
in
rorb
inc
data16
mov
adc
out
loop
xchg
sub
xchg
iret
xchg
in
mov
dec
movsb
push
and
shrb
mov
std
scas
jl
arpl
xchg
and
outsb
mov
adc
xor
cmp
xlat
fadd
jno
or
jmp
cmp
sbb
out
pop
pop
loop
aaa
pop
mov
mov
cli
adc
bound
insl
clc
jle
arpl
adc
mov
out
pop
pop
dec
push
jmp
push
cmp
bound
cld
mov
adc
pop
nop
jg
clc
mov
xchg
setle
pop
mov
stos
push
cltd
stos
movsl
mov
lret
out
dec
jbe
or
pop
in
xor
pop
add
fnsave
pop
arpl
movsb
xchg
lcall
jmp
jle
inc
mov
mov
dec
xchg
leave
aam
xchg
lcall
sub
ss
int
push
xlat
fnsave
shll
inc
sub
in
jge
xor
mov
and
pop
adc
adc
lret
je
adc
push
stos
mov
insb
stos
repnz
sbb
test
sbb
cmp
xchg
mov
daa
xchg
out
dec
jecxz
aad
in
jmp
adc
jecxz
jb
mov
cld
cmp
xchg
lea
push
shll
pop
cmp
stc
shl
jae
imul
jbe
and
js
repnz
scas
xlat
test
mov
pop
mov
fnsave
jmp
sub
dec
add
fnstcw
xor
mov
mov
mov
ret
clc
and
loopne
lahf
mov
popa
mov
mov
push
or
sbb
movsb
mov
aad
inc
xchg
jl
or
test
enter
jbe
dec
rcrl
adc
testl
shrd
sbb
adc
sbb
popf
int3
cld
jl
lds
daa
iret
push
stos
mov
in
bound
std
div
mov
mov
pop
je
in
lods
shrb
rcl
lds
test
repz
xchg
xchg
mov
mov
add
hlt
mov
and
jbe
inc
lret
fucomip
subb
loopne
adc
les
js
and
push
pop
pop
inc
jno
ror
mov
test
nop
push
jl
push
rcll
cs
cmc
jb
push
pop
mov
cmp
dec
mov
inc
inc
int
addr16
inc
pop
ss
loop
cli
imul
loope
sti
jo
lret
ljmp
dec
cmp
xor
inc
shr
xchg
push
stc
out
mov
sarb
mov
mov
push
icebp
loop
clc
pop
or
add
adc
stos
cmpl
mov
sbb
jnp
fdivl
xchg
sub
js
movsl
cmp
out
dec
nop
das
cmp
popf
dec
mov
lds
roll
ljmp
test
repz
push
push
test
es
shll
insb
or
cwtl
jp
inc
sub
test
stos
cltd
fsub
mov
sub
and
nop
mov
lcall
mov
nop
mov
scas
xchg
and
in
shlb
lods
fs
insl
cmp
push
fmull
lcall
imul
scas
aaa
aaa
hlt
mov
mov
xlat
test
xor
loope
les
loop
mov
enter
sub
dec
fwait
jne
das
popf
rol
dec
fisttps
sub
sub
mov
push
cmp
push
xchg
in
adc
jecxz
ljmp
inc
cmpsb
sbb
sub
add
jp
cmp
arpl
sbb
inc
push
lock
fidivrl
call
inc
jb
fiaddl
test
shrb
rcrb
adc
push
filds
or
adc
inc
or
lret
scas
out
dec
push
mov
jmp
loop
or
and
and
outsb
cwtl
and
cs
and
imul
pop
sbb
push
pop
stc
cwtl
sub
ret
jg
push
pop
dec
push
or
mov
iret
testl
cli
xlat
mov
dec
dec
xorb
shl
ret
arpl
adc
movsb
cli
loopne
mov
cmp
lea
pop
dec
mov
push
incl
jg
xor
jg
cs
xchg
xor
cltd
cmp
xchg
xlat
arpl
mov
arpl
push
xchg
jge
stos
int3
push
lret
jl
fs
fstpl
sub
mov
inc
cmpsb
in
xchg
pushl
xor
cmp
xchg
mov
pop
push
mov
mov
jae
xlat
lret
xor
jo
addb
dec
lret
sub
aaa
lods
or
jo
mov
rclb
push
sub
push
lods
stc
fildll
cs
roll
insl
adc
clc
push
aad
pop
sub
loop
sti
mov
mov
cs
ljmp
xchg
inc
sarb
inc
imul
jbe
cmp
mov
dec
jae
shl
jecxz
int3
push
add
nop
into
adcb
fiaddl
and
fnstcw
add
mov
xchg
push
dec
cmc
inc
dec
aas
addl
adc
push
xchg
pop
cwtl
sub
and
xlat
cmpsb
fsubrs
mov
jl
mov
nop
jns
xchg
pop
test
in
push
pop
stos
or
jmp
fs
cmp
push
xor
sbb
aad
lcall
out
test
sar
pop
addr16
in
and
cmpl
and
lcall
outsb
or
pop
aaa
es
and
adc
mov
jle
mov
ret
push
movsb
icebp
mov
jmp
dec
jp
mov
imul
inc
repnz
out
dec
sub
sbb
push
sub
sbb
add
ds
mov
mov
sti
lds
adc
push
pop
and
mov
imul
adc
test
sbb
nop
sub
push
push
dec
xchg
fldcw
mov
test
push
sub
ds
stc
or
mov
push
dec
stos
stos
push
jno
bound
pop
sub
cmc
cltd
cli
jnp
scas
push
push
out
mov
xor
nop
fs
fnstsw
jae
xchg
push
jae
sbb
xor
mov
cmpsl
shl
rol
popf
xor
test
rcrl
cmp
in
loope
in
in
sbb
inc
jne
jle
add
scas
pop
cmpsb
lods
mov
sahf
mov
cmpsl
or
fsubs
jmp
repnz
in
sbb
scas
push
push
rcl
dec
sbb
mov
aaa
hlt
adc
je
out
cltd
jae
mov
mov
pop
inc
sbb
lods
movb
or
sbb
lods
adc
mov
std
adc
stc
inc
sbb
adc
sub
xor
rclb
cmp
gs
add
jb
push
repnz
shlb
gs
sub
cli
enter
sbb
mov
movlps
inc
cmp
loop
sbb
aam
dec
cltd
mov
or
inc
cmp
dec
adc
jno
mov
loopne
lock
cmpsl
adc
jmp
xor
dec
mov
push
adc
lods
ja
add
ret
mov
push
xor
xchg
imulb
pop
ljmp
cltd
xor
clc
sub
scas
sbb
movl
sbb
fwait
or
aad
je
and
lods
in
aaa
cmp
andl
push
test
sbb
dec
mov
xchg
or
arpl
mov
jnp
jo
push
movsb
stos
ds
es
outsb
add
lret
je
push
or
inc
loopne
or
dec
jge
stos
inc
fists
negb
shl
in
ss
and
jnp
push
stos
inc
dec
and
lods
lock
insb
fs
push
sahf
xchg
sbbl
adc
jg
data16
jg
shll
daa
popa
mov
mov
pop
test
and
mov
pop
out
pushf
das
inc
adc
imul
mov
dec
push
out
jnp
je
adc
cmp
ja
and
mov
lahf
pop
jge
jo
imul
std
lret
popa
inc
push
mov
test
add
push
stc
test
cs
xchg
xlat
cli
out
jno
xor
mov
fwait
ss
pop
test
fcom
push
and
int
mov
notl
mov
jbe
and
pop
jne
jns
sub
jmp
inc
icebp
pop
cltd
mov
jo
ficomps
mov
cmp
imul
dec
sbb
pop
fsubl
out
pusha
lcall
lods
or
adc
cmpl
rcrl
fs
jle
pushf
cmp
in
mov
sub
push
push
aas
mov
and
fildll
push
jg
in
popa
jo
fisubs
shll
in
mov
test
lcall
stos
jmp
xchg
adc
sbb
xchg
mov
in
fs
std
mov
cmp
jno
ja
fstpt
xorl
xor
push
hlt
fsubl
sub
fxch
subb
cmp
fmull
lahf
fsubrs
dec
jae
cltd
and
push
ja
loopne
roll
mov
enter
int3
xchg
icebp
push
lcall
sahf
and
jae
movsl
mov
lods
push
into
push
pop
mov
mov
jae
or
imul
ljmp
xorps
nop
or
pop
popf
dec
mov
shll
pusha
lock
movsb
fnstsw
dec
addr16
lahf
es
jno
mov
adc
es
mov
xchg
add
add
scas
ss
out
les
or
imul
inc
jns
imul
pop
loope
hlt
repnz
xchg
add
or
cwtl
mov
push
or
rcr
call
loope
sbb
sub
pusha
je
pushf
mov
shrl
xor
nop
rorl
sub
or
jl
dec
mov
and
dec
dec
jb
xorl
adc
sub
mov
idivl
cld
inc
pop
scas
and
or
mov
leave
pushf
movl
jb
test
fidivrl
or
mov
pusha
scas
pop
jl
stc
in
adc
fninit
sub
xor
hlt
jnp
cmpsb
mov
dec
and
cli
add
stos
insb
icebp
and
and
xchg
mov
mov
js
or
cmpsl
xchg
inc
and
push
dec
pop
push
rcll
cmp
jne
arpl
out
adc
adc
dec
inc
push
outsl
mov
sub
lea
push
xor
dec
push
loop
out
cltd
xchg
jl
xor
fnstcw
xor
rol
loope
mov
pop
movsb
jmp
sahf
jge
aaa
scas
addl
ds
jno
out
loopne
sti
fwait
dec
jno
add
jg
xchg
add
test
rorb
popa
cmp
adc
js
test
scas
or
mov
leave
pop
sbb
leave
mov
inc
cmpsl
xchg
js
ret
cld
xchg
jne
cmpsb
leave
leave
push
and
xchg
jecxz
imul
movsb
cld
pop
sbb
mov
adc
pop
mov
xchg
mov
cltd
add
mov
gs
scas
cltd
mov
repnz
add
adc
fiaddl
jp
jno
lock
rcrl
mov
sti
insl
cli
inc
and
jnp
jg
stos
add
decl
test
subl
xchg
in
pop
jo
mov
mov
cmpsb
jns
es
inc
xchg
test
mov
jg
movq
mov
mov
pop
leave
xchg
pop
test
sub
je
pop
add
pop
pop
ds
or
int
mov
test
mov
or
les
inc
nop
mov
jae
daa
or
add
jae
sbb
gs
movsb
sti
add
sub
outsb
mov
fisubrs
lahf
add
out
ja
nop
call
mov
test
mov
xchg
or
fsts
div
inc
ljmp
inc
rcl
jmp
or
sub
xorb
adc
push
enter
mov
jae
pusha
mov
mov
xchg
in
repnz
inc
pushf
scas
jo
enter
mov
mov
enter
add
jne
ret
or
inc
in
jecxz
cmpsl
sub
push
fisttpll
or
lcall
aaa
pop
fdivrs
push
inc
adc
rorl
sbb
mov
inc
or
clc
xor
and
or
mov
cmpsl
arpl
mov
push
shrl
test
xchg
shrl
push
jmp
push
and
repz
aam
sbb
sbb
mov
mov
or
imul
add
xor
insl
hlt
ret
and
rcll
adcb
bound
fwait
add
scas
movsl
popa
push
aas
stos
cwtl
mov
xor
fsubrp
mov
out
mov
adc
cmpsl
jne
fdivr
lcall
jno
push
xchg
in
enter
call
xchg
aam
bound
push
xchg
push
mov
inc
ds
shrb
mov
adc
in
ret
enter
xor
mov
push
xor
out
cmpsb
scas
or
pop
or
mov
fwait
and
jae
dec
fistpll
leave
or
lea
or
xor
jnp
push
push
push
and
push
mov
std
dec
mov
inc
add
fists
sbb
add
js
xor
mov
push
push
test
add
mov
test
or
xchg
inc
aam
dec
negl
xor
imul
dec
popa
sub
jecxz
movsl
pop
int3
and
push
sub
into
ss
sbb
fnstcw
imul
ret
test
mov
insl
inc
xor
pop
inc
rol
push
andb
mov
and
or
inc
or
mov
jnp
pop
gs
xchg
xor
or
insb
sti
push
sbb
gs
sbb
in
aam
ljmp
add
jae
int
or
fs
add
pop
pop
sahf
and
add
icebp
jo
add
xor
xlat
mov
mov
sbb
outsb
cmp
mov
mov
adc
jmp
and
sarl
fistpl
push
jmp
mov
not
xchg
dec
jle
popf
mov
add
jb
cli
lret
inc
in
fmul
and
sub
popa
xchg
shl
dec
test
pop
sub
outsb
shlb
adc
fs
test
push
mov
mov
leave
sahf
sbb
sub
or
fsub
leave
xlat
loope
in
mov
or
and
lcall
pop
jne
aas
dec
out
sub
ljmp
aam
adc
clc
mov
in
scas
nop
add
fsub
add
cmp
cmpsb
incl
aad
sbb
pop
mov
xor
inc
mov
pop
dec
mov
and
sbb
insl
push
mov
bound
cmpsl
sbb
and
roll
cmp
sbb
xor
sub
cmpsl
loope
lahf
cmp
xchg
rcrl
adc
mov
vmread
or
pop
int
or
or
add
xchg
cmc
xor
sti
sbb
or
jnp
and
stos
shrb
std
jno
lods
lock
jmp
xor
adc
nop
xchg
imulb
mov
push
rorl
es
ss
xchg
stc
leave
push
popa
test
push
arpl
clc
jg
dec
push
sbb
test
lea
adc
push
xchg
inc
cwtl
xor
cmpsb
int
and
mov
xchg
int
pop
lock
les
mov
sub
xor
in
lcall
frstor
dec
push
ss
push
jns
ss
mov
xchg
push
sub
xchg
std
lods
aas
mov
sub
xchg
inc
or
and
push
cvtps2pd
dec
imul
popa
xor
je
mov
add
adc
ficoms
and
mov
jmp
inc
and
sub
mov
fwait
mov
add
in
fs
pop
stos
outsb
imul
cmp
mov
movsb
shlb
icebp
mov
lahf
js
mov
pop
icebp
and
aam
dec
ret
mov
call
sub
fcom
rcl
jo
cmp
ljmp
pushf
roll
test
xor
pop
and
add
mov
aad
xor
sbb
stos
test
fsub
xor
mov
lahf
sbb
inc
leave
ja
xchg
cmp
out
sub
xor
or
xor
insl
push
icebp
data16
jbe
pop
cmc
mov
pop
sbb
push
xchg
xchg
mov
mov
fcompl
flds
popa
fsubrs
incb
jb
movsb
call
push
mov
inc
or
xor
and
test
gs
add
inc
and
pop
popa
inc
or
or
mov
dec
push
push
lods
pop
pop
enter
dec
in
or
test
and
xchg
cmp
fstpl
push
push
mov
clc
xor
jne
xchg
pop
mov
cwtl
jbe
xchg
sbb
mov
cmp
test
movsl
xor
les
inc
or
cltd
leave
mov
jae
push
and
xor
scas
xor
fistl
sub
adcl
testl
fisubl
fcomps
clc
adc
andb
pop
jge
and
ret
xchg
popa
xor
pop
nop
sete
dec
mov
outsl
cmp
cmpsl
inc
test
test
ficoms
add
jbe
insb
je
lret
sub
out
loope
cmpsb
mov
nop
int
cmp
pop
das
test
xchg
out
jle
loopne
mov
xor
fistps
xchg
sub
jmp
xchg
push
jle
pinsrw
or
stc
aaa
stos
fildll
jp
mov
std
cmp
shlb
mov
leave
jge
aaa
call
dec
mov
lea
push
add
jl
imull
imul
pop
out
and
fbld
pop
push
and
and
push
clc
lods
dec
sub
inc
jo
cs
out
cmp
sub
jbe
dec
sub
fcoms
jne
mov
dec
sub
adc
jl
sti
js
loopne
fwait
cmc
lahf
xchg
pop
mov
int3
ss
mov
pop
ror
aad
jns
mov
xchg
test
jmp
dec
sub
sub
jp
out
aas
and
mov
pop
sbb
mov
leave
sub
and
enter
mov
lods
sbb
fs
add
icebp
inc
fprem1
les
popa
mov
mov
cmpb
ficoms
imul
arpl
in
lahf
aam
mov
cmp
popa
or
xchg
push
cs
inc
bnd
ja
inc
add
insb
sub
outsb
add
bound
inc
insb
sub
mov
ja
sbb
popf
pop
cmp
push
or
insl
mov
lret
add
pop
and
dec
fisttps
and
lods
gs
aas
test
mov
cwtl
push
cmp
out
add
stc
cld
push
out
sbb
fcomps
lret
sahf
or
xor
ret
jnp
pop
or
and
icebp
add
imul
sbb
mov
add
mov
jl
mov
lahf
fdivl
fmul
xor
repz
sahf
dec
jp
and
aad
adc
aam
inc
xor
mov
sbb
xor
xor
xchg
mov
mov
add
pop
nop
xor
fnstsw
mov
mov
popf
stc
mov
or
dec
pop
jecxz
fstl
jecxz
lahf
dec
loopne
jb
sahf
bound
adc
jp
lea
xlat
daa
xor
stc
inc
int
bound
cmp
ficompl
lahf
repz
cs
add
push
ficomps
push
inc
or
call
mov
and
jge
aad
xor
and
or
xor
jbe
test
xchg
cmp
bound
xchg
add
jne
insl
xor
xchg
enter
stos
enter
sbb
cltd
movb
hlt
jae
pop
sub
jge
movsb
mov
mov
and
fdivl
fs
fsubrp
pop
sbb
repnz
pop
scas
add
dec
daa
js
sbb
mov
lock
jge
scas
movsb
xchg
cmp
mov
cmp
push
or
push
jne
pop
mov
inc
outsl
hlt
fnstsw
push
pop
jp
mov
imulb
mov
ffreep
pusha
ss
sbb
push
add
sub
mov
cmp
je
enter
push
push
mov
das
rcrl
xor
xchg
and
sub
sti
pop
inc
sbb
mov
jg
aam
fmull
out
in
xchg
jbe
cs
lahf
xchg
fimull
xlat
cs
les
imul
mov
dec
cmp
rcl
stc
and
mov
mov
pushf
mov
dec
test
dec
popa
dec
test
out
bound
sbb
mov
dec
cmpsl
js
inc
shll
sbb
cmp
jl
aam
jp
sub
cli
rcrb
test
ss
lea
daa
pop
lods
adc
and
iret
jne
push
add
xchg
test
adc
gs
inc
lret
fnsave
sbb
mov
rorb
cmp
add
in
mov
test
nop
push
lods
jae
mov
lods
fisttpll
mov
fidivl
or
movb
dec
pop
test
mov
lcall
ret
insb
data16
xchg
cmp
fwait
push
cltd
lds
jl
add
push
lods
push
inc
adc
and
stos
test
jmp
into
xchg
test
lret
pop
inc
xor
mov
arpl
cmc
jle
loopne
push
jnp
sbb
ja
stc
dec
cld
fwait
mov
add
mov
loopne
bnd
pusha
push
sarl
push
mov
mov
dec
int3
into
aam
jl
sahf
add
mov
mov
dec
out
lret
les
push
adc
mov
shlb
in
add
repz
adc
orl
sbb
iret
enter
mov
decl
xor
out
outsl
or
lcall
daa
cmp
mov
fs
outsl
jg
mov
cmp
xchg
mov
ret
inc
sbb
mov
mov
dec
xor
and
fists
std
cmpsl
and
pushf
sbb
imul
xchg
inc
or
xchg
sub
stos
js
mov
hlt
add
push
and
xchg
stos
daa
loopne
pop
inc
repnz
or
shl
jnp
loope
sarb
lods
sbb
call
dec
call
xchg
push
jg
push
add
flds
int
lea
out
sarb
imul
sub
into
data16
jo
out
pop
xchg
pop
loope
scas
sahf
dec
push
stc
roll
subl
pop
lods
insl
xchg
lret
leave
test
push
mov
clc
inc
xor
push
divl
arpl
movb
loopne
iret
sbb
jle
clc
push
dec
imul
dec
and
and
mov
fsts
add
xchg
sbb
outsl
pop
sbb
inc
adc
xchg
xchg
out
shrb
add
cltd
sub
sbb
sub
push
pop
test
push
cmpl
adc
sbb
add
xchg
sahf
in
aam
test
int
into
push
lret
std
test
jg
mov
adc
gs
add
sub
pop
fmulp
shrl
in
sbb
sbb
mulb
push
and
fisubl
aaa
and
loope
jle
fs
mov
aaa
push
dec
or
aaa
and
dec
mov
stc
das
inc
dec
arpl
push
movsb
inc
sbb
lds
or
xchg
cmp
mov
xchg
inc
xor
sbb
pop
out
lea
jp
ret
pop
out
jmp
jg
out
ret
pusha
xchg
outsl
or
stos
adcb
test
fwait
mov
testb
and
jge
movsl
jbe
push
inc
imul
xchg
inc
and
dec
imul
popa
repz
movsb
int3
jns
xchg
cmp
cs
sbb
adc
pop
cmpsb
push
mov
or
jae
cmp
jne
je
jnp
loop
lcall
cmpsb
outsl
inc
lock
lahf
sub
mov
xchg
cmp
jno
les
adc
jg
or
aas
test
out
test
lea
xor
je
adc
sub
mov
xchg
sahf
stos
mov
push
sbb
xchg
sbb
cmp
mov
mov
stos
pop
test
dec
hlt
arpl
or
xchg
rcrb
in
xor
mov
mov
adc
arpl
xchg
fstps
fldl
adc
stos
add
ret
shl
adc
rcrb
pop
push
inc
jns
jmp
clc
inc
xchg
push
test
push
sub
jbe
out
flds
lock
cmp
or
dec
xorl
movsl
cmp
push
hlt
dec
je
lret
add
enter
sbb
adc
xchg
adc
xchg
push
lea
jecxz
cs
repz
sub
rclb
lahf
inc
adc
push
cmpsl
sub
enter
addr16
imul
mov
sbb
xchg
pop
push
mov
mov
shl
addr16
push
jns
pop
cmp
rorl
jge
iret
add
scas
jmp
cs
int3
cmpb
enter
pop
scas
and
cmp
add
cmp
push
pop
insl
lds
fdivrl
sbb
cld
jns
cmpsb
inc
lahf
pop
sbb
leave
fwait
scas
in
sub
popf
inc
inc
add
mov
mov
lcall
jg
mov
jecxz
stc
mov
bound
dec
daa
pop
addr16
cmc
jmp
pushf
mov
mov
mov
addb
aam
out
dec
or
mov
mov
int3
lret
daa
std
fildl
xor
lock
mov
push
mov
repz
and
pop
pushf
lock
cmpsl
and
jae
data16
mov
rolb
arpl
popf
inc
inc
or
dec
and
sbb
jp
arpl
dec
mov
mov
sbb
sub
int
dec
orl
loopne
mov
sub
add
push
mov
pushf
mov
push
sub
sub
pop
mov
push
mov
xor
mov
or
mov
xor
sub
lock
in
popf
iret
roll
add
mov
jnp
xchg
xchg
xchg
xchg
inc
js
dec
push
add
rcr
icebp
scas
nop
sbb
mov
inc
cmp
xchg
sbb
adc
mov
and
pop
mov
sbb
xchg
mov
push
push
bound
mov
mov
mov
xchg
pushl
popf
imul
loope
mov
je
mov
jecxz
pop
jmp
cmp
js
loope
mov
bound
xchg
pop
shll
ds
xor
and
outsb
xchg
xor
lods
push
outsl
sub
push
and
into
jns
mov
aam
lret
xor
mov
mov
andb
cwtl
sti
leave
sbb
aaa
push
cmp
mov
test
sahf
repz
or
loop
das
rcrl
enter
out
dec
roll
sahf
clc
adc
into
dec
aaa
jae
movsl
fisubs
scas
bound
loop
les
xor
popf
add
aad
adc
cmpsl
fisubrs
mov
int3
cmp
test
mov
lahf
out
in
lret
setae
pop
imul
or
mov
push
lret
cwtl
sbb
push
mov
adc
sub
jae
fnsave
loop
and
ja
sbb
xor
mov
jl
sub
and
xchg
ss
sbb
stos
roll
movsl
jge
mov
shlb
mov
dec
push
incb
mov
or
cmpsb
test
xchg
push
ds
fucomip
mov
mov
pop
mov
xchg
insb
dec
jne
movsb
shlb
out
push
fstpl
stos
adc
lret
dec
fisttpl
fisttpl
aaa
clc
mov
shll
jg
adc
ljmp
jge
loop
add
dec
push
lcall
mov
lea
mov
ret
sub
mov
add
push
xor
out
inc
mov
cmp
mov
aas
data16
mov
cld
rorl
dec
xchg
inc
lods
mov
mov
push
add
shlb
inc
xchg
pop
push
fnsave
xor
jecxz
jmp
jae
in
aad
loope
jecxz
ljmp
mov
es
cmp
call
ret
push
lds
push
and
jge
add
and
addr16
xlat
cmp
add
xlat
aaa
xchg
adc
stos
jle
lret
stos
jp
dec
mov
fsubrl
scas
mov
adc
xor
xor
inc
mov
and
xchg
adc
in
shr
icebp
mov
sbb
lea
aam
cmpsl
push
push
xchg
insb
add
scas
ja
mov
mov
pusha
lea
les
xchg
andb
fildll
es
mov
shll
mov
repz
in
mov
fistpl
jp
fsubl
inc
mov
pop
cmp
jle
mov
xor
push
xor
lret
pop
out
cli
aas
aaa
pushf
sbb
xor
jge
repnz
stc
sub
dec
adc
ljmp
cmp
jmp
mulb
push
adc
scas
pop
mulb
cld
test
bound
jnp
or
inc
jnp
mov
test
cmp
pop
out
adcl
lea
insl
sar
push
push
bound
into
jg
pop
pop
adc
test
inc
pop
and
jl
aaa
call
popa
dec
sbb
fwait
pop
out
nop
rcrl
mov
push
out
cli
ret
les
sbbl
add
fadds
in
loope
repz
outsl
sbb
mov
call
or
out
add
mov
out
push
fwait
ja
xchg
sub
les
inc
in
xor
lahf
out
and
rolb
pop
repz
out
or
in
xchg
scas
push
add
jecxz
or
mov
push
ds
push
fstp
sbbb
sbb
jge
jbe
mov
iret
arpl
push
sarl
rcrl
cmp
fucomp
mov
bound
add
sbb
pushf
stos
inc
mov
xor
mov
sub
mov
push
cmp
mov
cmpsl
pop
jne
addr16
das
or
mov
and
or
movsl
outsb
scas
insb
pop
jb
cli
fs
mov
dec
movsl
enter
mov
adc
in
mov
sub
adcb
loope
lock
mov
loope
in
insl
lock
arpl
repz
xor
stc
pop
push
mov
jg
push
inc
cmp
jbe
jl
cwtl
rolb
add
in
int3
adc
test
clc
nop
mov
pop
add
stos
je
out
inc
aam
mov
mov
lahf
jns
jnp
dec
fsub
mov
sub
and
adc
jns
std
leave
add
insl
mov
cmpsl
pop
pop
push
jb
imul
and
inc
rcr
sbb
dec
ljmp
imulb
xor
mov
ss
rorl
and
add
sub
cmpb
mov
stos
add
mov
in
test
push
add
in
call
xor
test
clc
mov
sbb
dec
xchg
enter
or
repnz
cmp
addl
insb
ss
jmp
sar
or
movsb
aad
out
daa
sub
cmp
mov
cmp
aaa
mov
mov
push
mov
mov
repnz
ja
push
pop
mov
scas
jne
add
mov
daa
xor
mov
sbb
push
lock
cltd
sub
cmp
or
jns
in
cmp
into
add
jecxz
arpl
jno
ljmp
and
mov
jp
out
lret
outsb
push
in
mov
or
and
in
lret
cmpsb
sub
fldcw
push
adc
icebp
dec
sbb
movsb
dec
nop
xchg
les
pop
jecxz
rcrb
rol
out
xor
jmp
xchg
icebp
int
adc
in
cmp
lahf
cwtl
push
fstpl
rcrl
cli
cmp
lods
xchg
loope
mov
push
into
jne
adc
mov
icebp
icebp
shll
pop
lock
add
fs
inc
dec
pop
or
or
gs
cmp
test
in
cmp
out
test
fsubrs
adc
test
test
movsl
fisubrs
adc
jmp
stos
add
xchg
jg
dec
sbb
rcll
hlt
sbb
in
cmp
dec
mov
mov
mov
out
push
fcoml
test
data16
or
pusha
inc
jmp
push
test
inc
mov
dec
mov
pop
dec
mov
add
cmp
inc
mov
fwait
rorl
jl
ret
mov
add
dec
xchg
and
data16
in
push
or
cwtl
int
inc
mov
and
mov
cmc
sahf
mov
mov
fbld
or
jbe
mov
in
sarl
dec
jl
test
xor
pushf
fldenv
mov
sbb
cltd
and
xchg
inc
xchg
je
fwait
push
xlat
dec
fdivl
ffree
and
lret
pushf
lahf
jmp
and
add
push
push
push
and
out
js
pop
mov
add
mov
ficompl
jp
sub
icebp
dec
addr16
ja
ljmp
int3
aam
out
sbb
lret
sub
cmp
jg
jge
pop
mov
aaa
xchg
test
std
xor
jns
aam
xchg
je
pop
pop
mov
ret
lds
enter
push
fwait
hlt
leave
cli
lods
insl
mov
adc
cmp
xchg
ret
sub
cmp
cmc
dec
pop
in
arpl
jmp
fcompl
lret
push
jns
mov
std
imul
imul
daa
rcl
clc
popf
push
lock
mov
push
xor
mov
sub
nop
xchg
loope
aas
jecxz
adc
mov
xor
xchg
fdivrl
and
cmp
imul
pop
call
jbe
cltd
cmpl
pusha
sahf
push
sarb
add
mov
mov
fisttps
fwait
dec
add
inc
repnz
inc
mov
jle
cmpsb
ret
fdivrs
pop
sbbb
inc
mov
mov
fisubrl
data16
sahf
or
rcrl
enter
adcl
mov
fcmovne
fidivrs
fisubl
in
mov
pop
cmpsl
sub
add
cwtl
or
or
les
add
shrb
aas
jecxz
and
push
cwtl
add
push
cmp
and
fsts
pusha
mov
loope
push
lret
cld
push
cli
lcall
mov
out
jge
test
rcr
clc
sub
es
push
add
not
daa
ret
jae
jno
add
lods
cwtl
ljmp
sub
outsl
jne
dec
mov
mov
mov
es
jmp
mov
sub
pop
neg
cmp
outsb
lret
or
mov
or
lods
adc
int
fstl
bound
inc
jmp
repz
adc
cmp
sbb
jecxz
push
jp
cli
in
mulb
jl
cli
rolb
fildll
fisttps
mov
js
jo
add
fwait
jb
es
inc
lock
aas
jne
ret
test
out
imul
inc
and
add
fsubl
aas
pop
cmp
mov
cmc
gs
insl
or
or
jl
lock
inc
adc
insb
cmc
jns
imul
cmpsl
mov
adc
popa
inc
pop
adc
add
in
jno
inc
xchg
xchg
sahf
hlt
data16
xchg
mov
loopne
movsb
mov
push
xchg
les
lods
mov
loopne
pop
scas
imulb
fwait
enter
and
mull
rcrl
jbe
sub
mov
fwait
cmp
or
pop
icebp
fildll
fwait
pop
int3
inc
dec
out
xchg
mov
jmp
nop
cs
mov
mov
out
mov
mov
lea
add
cmp
xor
aaa
jle
or
jne
or
or
ljmp
leave
stos
imul
and
data16
test
rcrb
sub
loope
dec
leave
push
mov
sahf
xchg
daa
out
push
mov
das
jbe
shll
or
jge
shrb
xchg
sbb
cld
mov
fwait
pop
ret
pop
cmp
cmc
cmp
clc
sbb
push
dec
sbb
xor
insl
pop
push
ljmp
pushf
mov
sbb
lock
sub
cmpsb
xor
test
rol
and
int
and
pop
shll
lahf
shl
imul
adc
sbb
push
into
add
das
and
xchg
inc
jae
adc
out
das
mulb
mov
lods
inc
pop
or
inc
and
push
dec
cmp
popf
xchg
fs
mov
add
arpl
adc
mov
xor
dec
test
dec
jp
xor
xor
and
push
add
mov
inc
xchg
inc
loope
jle
shr
int3
dec
lcall
out
mov
jecxz
inc
leave
push
fidivrl
je
xchg
in
pop
shlb
xchg
call
xchg
movsl
fsubrl
clc
orb
jo
xor
mov
pop
cltd
pop
push
rcrl
sbb
mov
das
xlat
ljmp
inc
push
mov
loopne
cmp
jns
sub
adc
mov
mov
aad
jl
iret
je
ret
imul
cmp
sub
sbb
repz
adc
imul
sahf
loop
jno
repz
push
jle
arpl
mov
jl
mov
icebp
das
sbb
sub
pop
push
aad
fstl
pushw
jmp
dec
imul
icebp
add
sub
sub
push
loop
sbb
inc
outsb
xor
push
pop
and
fisttpl
dec
call
push
sub
sub
jp
sti
lea
fwait
dec
lods
iret
in
and
sbb
push
testb
das
adc
into
add
orb
dec
push
inc
popf
and
repnz
push
leave
loope
adc
xchg
arpl
orl
xor
add
ret
add
rclb
and
jmp
insb
pop
cmc
or
orl
outsb
mov
ret
jb
push
xchg
in
outsb
stc
aad
jno
push
repnz
push
jnp
cmp
out
or
push
out
into
imul
sbb
insl
fwait
push
mov
rcl
dec
adc
lcall
dec
sub
jl
or
mov
setb
mov
mov
repz
xchg
pushf
test
mov
adc
pop
dec
sbb
jmp
dec
pop
xor
fsub
es
pop
shl
inc
push
mov
test
mov
outsl
jne
cmp
popf
add
or
hlt
addr16
push
push
push
stos
pop
out
ja
add
xchg
and
cmp
clc
inc
cmpsb
mov
xchg
jmp
scas
sub
cmpsl
and
mov
fldenv
pop
sti
push
xchg
subl
mov
push
dec
daa
sub
into
lret
jecxz
sbb
push
outsl
dec
sbb
aad
cmp
and
push
fldl2e
add
mov
cmc
ret
enter
adc
pushf
or
add
push
inc
leave
es
jmp
sub
mov
es
call
sti
pop
out
and
clc
test
rorb
xchg
xchg
test
jmp
and
xor
dec
dec
adc
fisubl
sbb
clc
add
out
sbbl
mov
aaa
xchg
push
mov
push
jmp
push
add
cs
outsl
cwtl
rcll
push
fcoms
cs
sub
push
mov
inc
dec
adc
sub
lock
jge
repnz
xchg
or
sub
or
aad
subl
mov
mov
loope
fisubrl
outsb
push
mov
push
xor
and
mov
add
or
adc
repz
les
lea
mov
adc
scas
cmp
orb
test
in
leave
sahf
jg
push
lret
cmc
dec
cmp
cmpsl
mov
aaa
push
lret
pop
mov
jle
jp
push
mov
fbld
xor
sbb
or
in
jg
inc
jg
fnstcw
loope
lret
out
lret
aad
sti
fildll
push
adc
sbb
mov
mov
sbb
ljmp
sbb
xchg
push
pop
dec
mov
loop
ljmp
push
pushf
fsts
in
les
dec
rolb
xor
int
shll
push
stos
jmp
jne
and
arpl
aad
dec
inc
fsts
popf
fmuls
ret
cmp
unpckhps
dec
add
popa
repnz
sbb
sub
dec
ljmp
xlat
lret
jle
aaa
xchg
inc
pushf
sarb
push
les
mov
sbb
jecxz
fcoml
cmp
jp
out
jnp
inc
mov
stos
int3
jb
sub
aaa
mov
cmpsl
mov
sti
xor
push
in
dec
jnp
idivl
inc
lods
mov
add
sub
xchg
cmp
mov
aad
mov
or
xor
mov
enter
in
xor
add
pop
jmp
int3
jg
fsts
dec
sbb
stos
sub
and
lea
dec
js
inc
sub
mov
pop
inc
les
and
and
push
inc
or
sbb
rcrl
ret
and
inc
fxch
jns
nop
cli
test
lret
outsb
rclb
sti
inc
out
and
pop
inc
stos
mov
clc
enter
stos
rcrb
push
push
je
xor
in
ja
adc
out
mov
xchg
loope
cmp
adc
clc
nop
addl
cmc
jae
insb
bswap
imul
pop
mov
jge
ret
xor
xlat
mov
aam
orb
adc
xor
cmp
sbb
pop
inc
mov
jmp
shr
add
arpl
xor
outsb
ficoms
lock
gs
add
cs
sahf
loope
jae
pop
or
jb
xchg
xor
adc
mov
out
es
push
int3
xchg
dec
sub
std
shl
jmp
popf
sub
sbb
push
mov
sbb
jns
push
scas
int
pop
jne
push
out
out
sti
cmpb
push
in
js
push
les
fwait
enter
xor
jo
test
sub
andl
test
mov
adc
cld
nop
insb
lcall
sahf
mov
lea
xorb
outsl
cmc
dec
repz
dec
lret
pandn
pusha
add
lods
adc
xchg
iret
insl
pop
repz
mov
mov
jns
mov
mov
and
pop
bound
cmpsb
cld
in
out
pop
jmp
pop
loopne
fistpl
add
sbb
pop
mov
jmp
xchg
fists
mov
aaa
fbstp
shrb
pop
in
jp
imul
mov
pop
adc
sbbb
pop
outsl
outsb
jmp
mov
xorb
fdiv
cwtl
and
jmp
stos
rorl
ror
dec
adc
movsl
xor
adc
hlt
stos
xchg
call
xor
add
pop
add
jnp
xor
sub
sbb
jae
loop
daa
pop
jmp
mov
imul
lock
or
cmp
in
inc
or
cmp
inc
jno
fildl
insl
fwait
cmp
call
addr16
std
shll
sahf
mov
mov
out
dec
sbb
pop
out
mov
sub
dec
in
leave
stos
lds
mov
in
fisubl
xchg
into
popf
dec
push
mov
into
ss
pushf
lcall
and
xor
mov
loope
das
jmp
jecxz
aas
aam
sarb
aas
dec
gs
ja
loopne
dec
outsl
sub
movsl
push
sbb
xchg
jne
xlat
mov
dec
mov
mov
pusha
pop
and
cmp
mov
jnp
adc
pop
mov
lea
fwait
mov
loope
push
sbb
outsl
js
imul
repz
fs
gs
push
mov
add
xchg
dec
test
movb
fwait
loope
dec
int
aas
xchg
inc
jb
cli
scas
dec
insl
add
dec
xchg
in
imul
loopne
popa
mov
aaa
or
test
xchg
sbb
divl
in
jmp
dec
test
add
cmpsb
lods
aaa
inc
out
xlat
insb
daa
xchg
xchg
mov
and
adc
sarb
pop
xchg
xchg
repz
mov
xlat
xchg
insb
mov
jno
pop
mov
push
lret
jae
dec
mov
scas
std
test
icebp
jg
xchg
jae
iret
pushf
js
arpl
jecxz
out
mov
mov
push
push
jmp
push
xrelease
ja
and
insl
cmp
rcr
xchg
push
aad
cmp
les
jbe
imul
mov
and
xor
movsb
xchg
ret
fmul
cmpsl
aas
lea
dec
rorb
scas
sbb
jge
cltd
loopne
cs
push
pop
adc
loopne
and
cwtl
faddl
aas
jge
pop
ds
push
inc
sarl
cmp
daa
ss
xorb
shlb
mov
pop
aam
xor
sub
rcr
rcrb
notl
xor
or
std
cmp
mov
cmpb
jb
iret
mov
inc
pop
or
lock
mov
xor
repz
add
xchg
inc
movsl
adc
cmp
cwtl
int
ljmp
fwait
incb
and
outsb
mov
cmp
or
dec
pop
pop
fnstsw
cld
push
ds
mull
lock
inc
mov
cmp
dec
fmuls
push
sub
mov
je
testl
test
cmp
test
cli
lods
subl
addr16
cld
hlt
dec
iret
jge
mov
icebp
fdivrp
adc
sbb
int3
push
jb
arpl
cli
inc
mov
jbe
out
xchg
pop
jns
adc
pop
andl
cli
jns
jecxz
shll
gs
nopl
lds
addr16
pop
cltd
sub
adc
cmp
pop
add
xchg
and
fimuls
mov
aam
mov
out
lcall
hlt
cmp
iret
imul
mov
in
ret
ret
pop
es
xlat
addr16
scas
inc
daa
push
adc
je
mov
pop
ret
add
inc
out
test
pop
and
loop
arpl
mov
repz
push
or
cmp
push
ret
imul
rorl
lret
push
adc
lret
fwait
mov
dec
lcall
jnp
cmp
and
movsb
and
cmp
sub
pusha
push
mov
or
jb
stos
lea
adc
pop
jae,pn
pop
sub
enter
je
nop
fsts
test
ljmp
jb
dec
jg
pop
inc
adc
mov
leave
dec
mov
mov
enter
mov
mov
jl
pusha
pop
xchg
mov
fsubrl
int3
mov
aas
mov
mov
xor
fisubl
mov
mov
sub
inc
sub
into
jae
out
jb
fistps
jne
jp
popa
in
mov
pushf
inc
mov
and
lcall
movsb
in
push
and
movsb
aad
mov
sub
in
loop
lds
rorb
inc
fwait
mov
mov
in
sbb
pushf
int
add
mov
xor
daa
lods
loope
push
push
push
fistl
pop
adc
rcll
imull
xchg
gs
mov
orb
push
pop
push
sub
iret
cmp
cmp
inc
negb
ds
push
pusha
jecxz
mov
outsb
decb
repnz
stos
dec
js
scas
inc
xchg
push
or
je
mov
dec
mov
adc
bound
pop
and
in
inc
and
dec
lods
scas
cmp
shlb
xchg
bswap
dec
cmp
cmp
arpl
dec
pop
cmp
mov
inc
add
lods
cmpsl
jne
call
out
xor
sub
ja
xchg
sub
stc
fucomip
dec
or
pop
pop
pop
add
in
pusha
mov
andl
jo
jecxz
test
and
subl
aad
mov
mov
push
jo
push
and
push
jns
js
jns
jecxz
push
pop
sub
pop
ret
daa
or
xchg
mov
inc
mov
mov
pop
nop
xchg
orb
and
and
shll
lcall
jns
dec
in
mov
clc
lahf
in
mov
in
fdivrs
adc
scas
in
pusha
test
hlt
outsl
dec
div
mov
fmuls
or
push
int
mov
movsl
xchg
mov
pop
repz
dec
adcl
dec
jo
xor
int
cwtl
in
mov
stos
sub
and
cld
add
out
adc
adc
xor
cltd
imul
jmp
jb
orl
push
xchg
sub
fildll
mov
dec
gs
sub
jle
xchg
fwait
lret
push
lea
add
push
dec
push
mov
mov
mov
cmp
insb
pusha
subb
shrl
push
inc
or
xor
xchg
push
sahf
sub
jp
dec
inc
js
xlat
xchg
push
cltd
outsl
push
add
and
js
repnz
jp
shr
jle
mov
in
cmp
arpl
lds
push
pop
enter
mov
xchg
jne
fsts
shll
or
dec
sbb
out
repnz
push
inc
je
mov
inc
daa
jno
mov
dec
cmp
push
dec
and
jmp
pop
xchg
mov
xchg
das
jg
mov
fwait
jae
pop
xchg
iret
out
mov
into
aaa
aas
push
je
pop
int3
mov
mov
push
inc
jle
jb
fcoms
in
addr16
sub
jb
cli
adc
aam
add
sbb
mov
push
lret
pop
sub
and
push
movsb
mov
jns
xchg
inc
sarb
jmp
or
mov
add
push
mov
sbb
xor
sbb
dec
xchg
push
mov
outsl
xor
sbb
aam
xor
and
jmp
cmp
xchg
dec
or
xor
jo
inc
repz
sub
mov
into
xchg
popf
mov
in
inc
add
inc
pop
sub
xchg
cmp
sti
lods
add
push
inc
or
rclb
push
jno
cltd
dec
repnz
leave
insb
mov
outsl
push
rep
sub
mov
sub
sbb
repz
dec
adc
dec
lock
or
sbb
stc
idivl
mov
ret
scas
mulb
ret
shl
xchg
push
ror
push
aad
dec
out
ffree
mov
stos
les
cmp
insb
imul
xchg
cmp
sbb
sti
mov
sub
sbb
outsl
incb
js
add
fwait
mov
roll
into
push
dec
in
mov
fucomi
into
cltd
inc
icebp
mov
cmp
mov
sahf
out
push
adc
insl
jmp
xor
arpl
sbb
in
push
push
and
sbb
hlt
jge
cmp
call
sti
ret
mov
shl
gs
xchg
cld
jbe
mov
negl
test
test
int
daa
movsb
sbb
and
push
or
popf
add
pop
shll
cld
pop
es
scas
xlat
push
xchg
sub
dec
jmp
jmp
ds
stos
add
aad
outsl
inc
mov
sahf
dec
inc
test
pop
cmpsl
dec
arpl
sbbl
jecxz
and
jne
pop
fmulp
cmp
mov
shlb
dec
mov
rolb
push
pop
and
ficomps
iret
xchg
into
mov
sbbl
adc
push
dec
stos
sub
jmp
xchg
mov
hlt
xchg
cltd
fs
pop
movsb
cmp
jge
insb
cmpsl
inc
cmp
int
add
and
sbb
adc
mov
or
js
imul
fnstsw
xchg
data16
xchg
lret
xor
xlat
mov
ja
and
mov
add
out
gs
jae
sub
xchg
in
mov
sti
adc
sbb
jle
rcll
test
pop
in
mov
add
pushf
dec
imul
mov
mov
and
or
pop
inc
std
int3
lret
out
mov
mov
mov
sub
xchg
and
add
pop
pop
xchg
nop
dec
add
outsb
dec
and
loope
inc
mov
pop
xchg
loop
insl
jl
into
sbbl
popa
adc
sub
push
add
mov
addl
scas
xchg
fidivs
fwait
out
or
fdivrl
loope
adc
xor
pop
jmp
mov
loopne
pusha
add
out
add
push
rol
iret
movsl
test
pop
mov
inc
pop
jo
stos
call
jmp
test
mov
or
pop
test
sahf
inc
out
push
imulb
aad
clc
ljmp
adc
call
cmp
add
push
pop
pop
fcmovnb
and
imul
imul
test
mov
adc
xor
enter
lret
and
sahf
leave
mov
pushf
inc
into
mov
stc
aas
out
mov
mov
jecxz
sbb
cmp
dec
and
jmp
pop
inc
jo
push
push
lea
rcll
xchg
jae
test
sti
loope
sub
cmp
xchg
xlat
and
fimuls
mov
pop
out
call
call
jl
adc
cmp
rcrl
sub
adc
repz
sub
xor
xor
jge
mov
leave
push
ljmp
adc
push
inc
das
cmp
add
xor
push
ret
jne
std
movl
push
pop
shlb
icebp
jge
mov
test
outsl
rcll
lret
cwtl
push
in
fsub
cld
push
and
daa
jp
bound
clc
xchg
sub
pop
push
cmp
mov
sti
andl
nop
insb
adc
icebp
push
pop
or
mov
stos
repnz
outsb
push
xor
es
idiv
adcb
dec
ss
mov
jnp
movb
mov
hlt
jmp
int
adc
pop
sbb
adc
push
mov
pusha
xor
dec
mov
or
add
push
lea
dec
push
or
add
jbe
jmp
mov
inc
in
rorl
testl
push
scas
push
cli
clc
push
cmpsl
dec
lods
repz
pusha
pop
adc
leave
cmp
or
mov
gs
fistpl
lock
fisttpll
rcrb
out
in
inc
mov
and
fldcw
fsts
addr16
mov
addb
mov
leave
fists
jmp
ja
inc
ret
fnstsw
aas
xchg
enter
and
or
jb
sbb
out
dec
mov
sbb
addr16
imul
dec
scas
cs
push
xchg
fbstp
push
ljmp
xchg
daa
shll
clc
call
adc
clc
mov
sub
mov
inc
gs
cli
pusha
aas
fists
xchg
data16
test
push
aad
ja
mov
jle
decb
sub
cwtl
das
out
inc
fisubrs
mov
mov
shll
in
sarl
xchg
loope
ret
jg
clc
pop
jb
sbb
insl
add
mov
push
shr
aam
aaa
fmuls
jnp
dec
xchg
movsl
loop
xchg
sbb
std
sbb
inc
push
xor
fdivs
cmp
adc
sbb
xor
jp
iret
push
add
in
stos
movsb
jge
int3
cmp
fsubl
dec
daa
inc
push
push
iret
popf
shll
inc
test
xchg
xor
pop
ret
les
popf
aam
out
mov
xor
mov
pop
daa
inc
mov
out
add
invd
dec
rcrb
mov
jns
mov
jmp
mov
sbb
movsb
clc
loop
icebp
mov
shrb
test
hlt
jne
jb
loope
xor
cmp
into
lea
push
iret
aas
sub
aam
mov
pusha
push
push
pop
test
adcl
push
pop
js
ror
sub
xchg
pop
mov
xor
mov
mov
push
cmp
movsb
push
leave
cmp
icebp
jnp
xchg
dec
push
add
pop
mov
mov
dec
xor
lahf
int3
sbb
mov
in
or
rcr
jne
mov
aaa
test
cmp
pusha
cld
mov
jecxz
mov
movsl
push
pop
mov
dec
rcll
loope
repnz
mov
push
add
popf
xchg
sub
outsl
sti
imul
xor
dec
shrl
sbb
jp
inc
mov
jo
push
lret
leave
mov
scas
sti
dec
js
dec
std
call
arpl
ljmp
xor
cmpsl
rcrl
and
stc
cmp
in
imul
push
cwtl
les
test
mov
pushf
or
inc
aad
ret
sub
rorb
push
stc
stos
frstor
sti
jecxz
je
cltd
aaa
fbstp
ficoml
std
stos
stos
outsl
lock
jg
adc
stc
dec
mov
cmp
jecxz
cld
xor
push
push
mov
int3
popf
out
ja
dec
insb
adc
pop
xchg
je
aad
test
sub
cmpl
or
inc
jb
fwait
pop
enter
add
imul
lock
pop
addr16
sbb
sub
rorl
mov
mov
mov
xchg
inc
vphaddudq
or
mov
stos
sub
pop
jl
pop
enter
push
lods
out
ret
negb
pop
mov
push
mov
mov
pop
or
daa
push
mov
sbb
dec
idivl
nop
leave
adc
fs
fistps
push
stos
lds
and
es
fidivl
pop
push
mov
faddp
mov
add
fidivrs
flds
or
sub
xor
push
sbb
scas
cltd
icebp
aas
add
or
loopne
xchg
movsb
fldl2e
fs
popa
fistpl
shrl
scas
lahf
out
decl
lret
add
lds
lock
cwtl
jle
int3
push
mov
bound
dec
gs
dec
std
lcall
xchg
fwait
stos
fcmovnbe
cmpb
and
xchg
pop
das
or
call
add
mov
adc
sarb
popf
mov
cmp
jg
fwait
push
lcall
inc
gs
jmp
or
jp
test
in
jne
dec
xchg
loopne
xchg
lcall
cltd
pop
in
popf
loopne
sub
pop
ret
das
jo
in
cltd
mov
ja
into
mov
mov
sub
incb
in
std
pop
jge
cs
fiaddl
aad
pop
sub
and
testb
mov
xorl
test
xchg
mov
dec
iret
test
xchg
sub
pusha
test
jl
shrb
sub
add
das
pop
sub
iret
outsb
in
sbb
mov
xor
mov
stc
repnz
xor
rcrb
xchg
sub
jno
sarb
fisttps
sbb
pop
and
adc
clc
jg
mov
adcb
sub
sub
dec
arpl
data16
xchg
nop
xor
push
loopne
sarl
jl
jle
int3
in
dec
lret
int
add
adc
and
insb
mov
cmc
in
in
cwtl
dec
cmp
add
movsb
cmpsl
fisttps
mov
fwait
jne
dec
ficoml
mov
imul
and
pushf
xorb
ret
cmp
psrlw
cmp
cs
push
leave
test
mov
repz
leave
adc
xor
cmp
push
lods
and
mov
pop
stc
pop
pop
push
fbstp
adc
call
sub
repz
xchg
xchg
cltd
ja
inc
jge
in
xlat
inc
out
push
gs
pop
nop
mov
sub
adc
push
in
dec
and
adc
rcll
divb
dec
xlat
adc
pusha
test
sub
mov
inc
mov
lss
mov
pop
lds
hlt
mov
lret
fnstenv
or
fmuls
add
stos
xor
rol
mov
mov
pop
dec
stos
ds
push
adc
ret
inc
sub
cltd
out
xchg
xor
js
ror
xchg
int
sbb
hlt
inc
popf
popa
mov
lock
cmp
fisttpll
push
lods
out
fidivrs
jmp
out
aas
mov
imul
sbbb
in
fidivl
loop
push
xchg
cmp
ljmp
les
jp
dec
ds
xchg
add
outsl
fldl
iret
mov
pop
lret
pop
or
arpl
cmc
xchg
data16
test
fwait
int3
fidivrl
mov
iretw
les
lods
mov
xchg
fcompl
jmp
bound
sti
mov
cs
push
xor
clc
mov
xchg
cmp
and
fiaddl
push
dec
daa
fdivl
loopne
lahf
mov
lds
je
test
push
mov
cwtl
jmp
scas
shlb
mov
lods
inc
adc
mov
insb
xchg
iret
adc
pushf
leave
push
insb
pop
adc
scas
ja
jmp
push
aaa
ljmp
loop
cmpsl
jmp
pop
add
andb
incl
out
jno
int3
inc
and
ret
loopne
push
cmp
xchg
stos
nop
outsw
cmp
ret
push
movsb
sub
mov
pop
jle
mov
or
sbb
adc
scas
fnstcw
popf
sti
cmp
fldt
fildll
out
insl
pop
xlat
pop
les
add
sub
out
cmp
mov
lcall
sbb
cmpsb
enter
inc
xor
out
jl
pop
jo
imull
push
out
or
jns
bound
adcb
pop
loop
push
ret
icebp
fprem1
pop
mov
int3
or
ja
push
and
mov
cmc
and
cmp
mov
sbb
mov
sarl
add
fcmovnu
nop
xor
shrb
jns
pop
imul
dec
js
sub
in
sarb
mov
repnz
jle
dec
mov
call
mov
in
or
andb
in
inc
jmp
push
sub
bound
jg
inc
repz
arpl
lahf
aad
mov
xchg
mov
push
mov
push
fldcw
inc
xor
mov
adc
jg
or
or
jb
sbb
fst
pop
pop
cmp
push
mov
and
inc
fninit
cmc
jle
inc
mov
lock
add
sbb
scas
push
jmp
es
mov
scas
sub
int3
mov
xor
adc
icebp
xchg
cltd
jle
or
inc
fwait
xchg
jmp
cltd
psubb
jbe
mull
jmp
adc
lcall
mov
mov
mov
shlb
in
cmp
mov
scas
fstpl
pop
push
mov
adc
jbe
repnz
les
adc
cwtl
stc
sbb
and
mov
in
aas
mov
repz
dec
cli
ret
cmc
aas
out
mov
insb
pop
ret
mov
push
es
push
flds
mov
and
xor
add
bound
and
mov
sbb
add
lods
sbb
daa
enter
out
imul
push
mov
into
push
jg
dec
push
xchg
out
xor
inc
jg
jmp
ret
xchg
mov
sbb
jb
jne
insl
nop
xlat
xlat
in
push
inc
sub
mov
scas
cld
or
ret
mov
ror
jmp
std
and
das
or
dec
jmp
ljmp
fidivs
jb
push
add
sbb
scas
jns
mov
inc
sbb
or
pop
adc
stos
xrstor
jmp
dec
popa
je
mov
ret
shlb
cmc
cmpsb
rolb
shlb
dec
inc
pop
sub
outsl
ja
repz
ja
push
mov
push
mov
into
pop
daa
pusha
fs
insl
in
dec
adc
jae
pop
ds
or
sbb
jge
pop
mov
andl
xor
fcomip
mov
add
mov
loope
loopne
scas
pop
sbb
and
mov
js
loop
mov
rep
lret
into
or
mov
insb
lods
add
imul
mov
lods
push
cli
xor
mov
mov
pusha
dec
pop
inc
pop
popa
mov
rorb
inc
jmp
lret
mov
imul
and
loop
rorl
xchg
or
shr
xchg
out
inc
push
mov
lea
xor
xorl
mov
push
cltd
pop
jb
mov
mov
pop
stos
loop
dec
das
repnz
cs
test
clc
mov
jge
sti
mov
ds
inc
js
jo
inc
aas
add
mov
pusha
adc
fisttpll
shrl
pushf
mov
sbb
xor
push
mov
data16
inc
pop
aad
mov
or
loope
jecxz
push
mov
mov
cli
ret
loopne
out
sti
jmp
or
inc
pop
push
shrb
sub
xor
or
cmp
sar
and
pop
xorb
push
pop
mov
cmc
inc
test
scas
movsl
iret
pusha
mov
rolb
in
call
popa
xchg
cmp
jb
scas
das
xchg
lods
mov
sub
push
aam
mov
cmp
inc
fisttpl
lret
mov
jb
into
stos
jg
pop
cli
push
fbld
or
sbb
jmp
ret
shlb
into
push
jmp
fbld
lcall
and
mov
cmpsl
or
insb
lds
cmp
sysexit
and
insb
inc
repnz
imul
or
hlt
scas
push
adc
dec
add
mov
pop
jl
outsl
cld
pop
lahf
xchg
jne
pop
stos
push
jne
mov
call
movaps
fimull
hlt
inc
clc
ljmp
lahf
pusha
roll
mov
cmp
xchg
imul
iret
cmp
shrl
dec
sbb
loopne
sarb
mov
push
sbb
adc
push
push
mov
lahf
adc
lods
pop
inc
mov
push
jle
pop
jo
inc
jp
adc
and
cmp
cmp
push
adc
in
notl
std
xor
ss
ds
pusha
testl
pop
sbb
loop
ret
daa
push
mov
stos
jbe
rorb
cmpsb
and
or
out
sbb
and
cmp
push
xchg
movsb
add
lods
sarb
mov
cltd
shll
mov
hlt
aaa
sbb
cli
xor
repnz
femms
add
outsb
lret
jge
cmp
jns
xchg
lods
std
sub
fs
imul
xchg
adc
mov
pop
xchg
stos
lods
sub
cmp
and
pop
testl
xor
xor
pop
jecxz
mov
sti
pop
pop
mov
jl
push
sbb
pop
gs
cli
pop
inc
sub
orb
push
sbb
xchg
and
insl
in
jmp
push
pop
push
aam
incb
stc
cmp
inc
cmpl
in
aad
fcompl
dec
lods
dec
sbb
xchg
add
or
out
daa
test
and
mov
movsl
jno
arpl
xor
mov
jmp
inc
mov
mov
mov
and
sti
cs
or
push
repnz
dec
mov
xchg
jmp
xor
pop
xor
mov
xchg
in
xlat
xor
fstl
mov
nop
negl
lret
mov
mov
decl
jbe
lock
xchg
leave
shrb
aas
mov
mov
mov
data16
ja
imul
sahf
mov
ss
and
mov
jp
xorl
jl
mov
inc
or
rorl
andl
pop
lods
xchg
push
push
jns
leave
xchg
sub
inc
pop
insl
cmp
pushf
push
push
jg
jne
iret
out
lcall
popf
divb
pop
and
orb
ss
push
mov
mov
xor
jae
aam
push
fldl
cmp
enter
stos
xlat
inc
rorl
sbb
mov
xchg
pop
and
inc
add
cmp
and
push
daa
aad
jae
inc
or
stc
pop
sbb
subb
pop
push
fsts
mov
jnp
fildl
stc
adc
cmc
into
hlt
jo
daa
jae
out
mov
lods
cs
sub
mov
rol
into
mov
cmpsb
cld
push
lret
daa
gs
mov
pop
cmp
push
loopne
stos
xor
cmp
pop
aas
mov
or
enter
mov
mov
scas
mov
xchg
push
out
xchg
repnz
pusha
incb
in
cli
and
cld
or
enter
mov
iret
cmp
and
add
mov
mov
jne
fdiv
mov
movsb
mov
jle
sbb
or
xchg
fcoms
shrb
cwtl
inc
iret
mov
pop
adc
dec
imul
jne
mov
cwtl
test
leave
push
push
out
xor
mov
fmuls
push
sub
clc
xchg
out
xchg
pop
aaa
or
pop
inc
xchg
mov
ret
lcall
and
push
rclb
jl
dec
in
add
stc
jg
pop
jnp
pop
insl
dec
stos
stc
in
mov
sbb
dec
jne
call
ljmp
mov
popf
push
pop
dec
sub
leave
daa
add
mov
hlt
inc
add
cwtl
inc
inc
in
insl
scas
push
mov
fmull
sbb
adc
jae
mov
repz
mov
mov
push
and
mov
sti
lods
pop
insb
arpl
sub
jae
or
jb
scas
and
pushf
fsubrs
sbb
or
imul
jo
sbb
cld
sub
scas
insb
xchg
adc
stos
mov
sbbb
adc
daa
cmc
movsl
cmp
xlat
daa
and
add
add
sbb
mov
orl
or
lcall
xor
sub
mov
push
jae
adc
add
dec
mov
out
push
decb
cld
pop
jo
push
xchg
cld
sbb
jnp
jmp
movsl
shll
mov
sbb
or
and
fnstenv
fwait
clc
xchg
adc
lods
inc
sbb
dec
test
add
pop
jl
pop
sbb
push
mov
fstps
cmp
mov
mov
dec
pop
dec
inc
mov
call
and
imul
pop
call
add
pop
daa
or
jle
movsb
inc
or
scas
jecxz
rcrl
fidivrl
jnp
sub
and
jl
xchg
push
jp
fsubl
add
sub
sbb
or
push
test
or
scas
pusha
sahf
push
sahf
sub
xor
pop
add
aam
dec
sub
pop
jbe
daa
fcompl
mul
push
push
outsb
inc
and
lods
and
jecxz
mov
sbb
mov
lea
mov
enter
lods
mov
and
adc
xchg
adc
in
outsb
shrb
cmp
test
inc
dec
mov
dec
lods
shlb
stos
xchg
lods
int3
cmc
insl
cmpsl
adc
aaa
xor
in
enter
inc
sbb
popf
imull
test
jge
sub
push
dec
add
fwait
stos
push
xor
push
das
xchg
or
lea
outsb
shlb
rcrb
xor
xor
jb
out
in
scas
sub
xlat
rol
fcoms
aas
mov
mov
pop
add
aam
jne
adc
fldcw
insb
inc
xchg
pop
add
lea
sahf
in
add
cwtd
iret
inc
mov
aas
mov
add
jae
xchg
fldl
pop
pushf
xchg
sti
in
or
daa
mov
cmc
bound
lock
in
sub
xor
daa
lods
cmpsb
cmc
mul
mov
adc
cs
jmp
cmpsl
scas
push
lcall
push
les
push
test
adc
add
mov
jecxz
sahf
data16
int3
dec
mov
xchg
jecxz
and
stos
cmpl
and
loopne
lods
xchg
dec
and
mov
push
test
and
xor
push
js
mov
xor
adc
lea
adc
ds
xor
inc
fdivrl
sub
fsubrp
faddl
lock
loop
mov
and
sbb
cli
std
xor
test
idivl
gs
leave
stos
cmpb
stos
sbb
hlt
xchg
xchg
cmpl
add
sub
xor
dec
popa
mov
shrb
es
out
add
shlb
bound
in
fbld
cltd
popf
mov
aam
mov
jge
clc
faddl
ret
loopne
jb
dec
add
pop
xchg
pop
adc
mov
daa
push
addr16
xlat
clc
outsl
loope
sub
nop
xor
sbb
dec
lods
lret
cmp
addr16
cmpsl
mov
inc
jae
and
sarl
add
sti
mov
js
xchg
arpl
sbb
icebp
icebp
sbbl
cmp
or
cmpsb
dec
aaa
adc
addr16
or
out
dec
outsb
mov
mov
or
into
mov
out
cmp
jae
xlat
fistpll
imul
inc
cmpsb
add
sbb
xchg
shrl
test
adc
or
xchg
pushf
cmp
divl
push
lods
jo
xor
imul
cwtl
inc
sti
lret
xchg
outsl
fdivrl
cld
out
and
popa
in
repz
mov
decb
and
je
pop
jge
ret
insl
or
and
jns
shrb
mov
ficoml
aas
imul
xorb
sub
jmp
je
lea
xchg
ret
xchg
inc
pop
cmp
ljmp
jecxz
in
xchg
or
sub
leave
pushf
xor
pop
cmpsb
bound
or
push
fstl
push
push
and
inc
mov
mulb
pusha
clc
push
mov
pop
jmp
lret
in
into
sbb
movsl
jp
xchg
mov
imul
outsb
lret
test
jo
aas
lds
enter
leave
push
enter
mov
js
jmp
mov
dec
cmp
pop
iret
add
inc
mov
jl
das
push
sub
repnz
loope
popf
int
je
cmp
xor
imul
loopne
fdivr
pop
pushl
dec
pop
xor
push
xchg
inc
mov
push
and
cmp
arpl
xor
fsubs
fdiv
ffree
jmp
sbb
push
dec
test
sub
mov
sub
mov
dec
adc
jl
fsubrl
out
movsl
adc
sub
push
mov
push
cltd
mov
arpl
jecxz
pop
sti
popf
icebp
insb
push
inc
test
push
cmp
push
mov
mov
daa
xchg
jmp
nop
movups
fs
mov
or
xchg
aam
dec
push
in
mov
and
movsl
mov
sbb
cmc
outsl
and
jne
mov
sbb
sub
and
jle
mov
mov
jno
pop
mov
cli
push
xor
fcmovnbe
movsl
dec
ret
clc
in
loope
jnp
push
xor
sub
sub
adc
jne
xchg
mov
and
mov
orb
mov
jp
jl
in
ljmp
adc
lock
xchg
popa
and
add
jnp
add
xlat
jle
insl
push
or
add
iret
sbb
mov
ds
repnz
and
xchg
imul
push
xor
cmpsl
dec
mov
rcr
xor
daa
ljmp
mov
inc
cwtl
lock
jp
cmpsl
xchg
test
or
lods
mov
xchg
dec
and
jp
pop
cmp
cmp
push
inc
mov
aam
add
and
movsb
minps
jge
icebp
push
add
cmp
in
cs
xor
sub
jnp
push
xor
pop
imull
xchg
sub
ss
dec
push
lock
aam
rorb
das
jp
inc
fnstenv
xchg
popa
mov
add
mov
jb
ds
ljmp
mov
imul
pop
aam
movsl
mov
or
call
pop
je
cmp
cld
mov
xor
test
ja
or
jnp
in
dec
push
cmpsb
jle
shll
adc
lock
fldenv
test
ljmp
mov
arpl
and
lret
out
cmpsl
roll
lds
scas
shl
insl
stos
sbb
js
insl
fistpll
xor
enter
sub
cmp
rolb
add
or
lods
les
adc
push
inc
add
jecxz
xchg
sbb
test
cld
jl
insl
andl
or
lcall
movsb
repnz
dec
out
fwait
lods
mov
inc
scas
inc
dec
movaps
pop
test
shrb
stos
enter
sbb
add
and
mov
sub
ret
out
rcrb
pop
mov
dec
loope
lock
inc
fs
sub
aam
xor
pop
inc
lds
imul
cwtl
out
push
loopne
xor
imul
and
jns
in
inc
rorl
test
fwait
push
and
repnz
mov
stos
mov
out
xor
jbe
xlat
jae
clc
popa
jp
or
ss
push
mov
mov
mov
sub
push
rcr
and
leave
ds
push
xlat
xor
fs
mov
mov
daa
mov
sahf
cmp
fldl
loope
int
repz
pop
cmp
mov
in
adc
sub
cmp
mov
pop
xor
rol
xchg
push
or
dec
mov
sub
lock
loop
inc
cs
add
adc
adc
repz
mov
aam
sbb
icebp
mov
jle
notl
leave
jbe
repz
lock
fsubrl
sahf
mov
cli
les
pop
aad
je
out
xor
mov
frstor
aas
pushf
jle
xchg
mov
cmp
sub
nop
cmp
jne
stos
cmpsl
outsb
bound
mov
out
les
lahf
dec
or
lahf
fimull
cs
lret
push
push
shlb
or
push
arpl
push
xor
cmp
push
add
or
inc
pop
push
in
clc
xchg
adc
adcb
adc
dec
mov
inc
enter
sub
jae
clc
or
mov
in
gs
je
out
jb
mov
lret
pop
cmpsb
jmp
pop
icebp
push
push
sbb
xchg
inc
xchg
jl
insb
rolb
aaa
out
push
adc
jle
stos
repz
inc
xchg
inc
mov
test
int
and
dec
fnstenv
and
int3
nop
adc
stc
les
popf
sub
adc
arpl
in
daa
mov
cmc
into
ds
mov
loope
cwtl
aad
bound
loop
popa
or
mov
outsb
pop
fsubs
inc
xchg
aaa
mov
aaa
mov
xor
pop
loopne
in
pushl
and
syscall
mov
dec
and
das
dec
ficoml
dec
add
mov
and
pop
imul
mov
sbb
or
dec
push
xchg
mov
lea
push
and
xor
iret
xchg
in
xor
fistpl
ja
sbb
or
mov
jg
sub
ret
pop
stos
inc
stos
xor
test
pop
mov
mov
pop
int
stc
sbb
or
push
test
test
scas
imul
adc
repz
stc
jl
and
lds
sbb
cmp
push
arpl
out
js
loopne
pop
jbe
sar
clc
jg
xor
jl
dec
ja
sbb
mov
cs
sbb
call
cli
push
subb
xchg
or
push
mov
or
pop
sbb
push
leave
xlat
adc
inc
insl
pop
jnp
clc
sahf
sbb
dec
sbb
movntq
packuswb
insb
cli
fidivs
insl
imul
mov
adc
scas
rol
push
shrb
imul
push
xchg
jbe
inc
mov
mov
adc
jle
jp
idivb
wbinvd
les
jbe
out
adc
or
fistpll
jge
and
seto
int3
scas
sub
push
push
or
das
fsubp
mov
cltd
push
dec
jb
popa
cmpsb
ret
stc
faddl
jge
add
cmp
pop
xlat
ret
xchg
push
adc
mov
outsl
movsb
out
xchg
cmp
mov
adc
add
movzbl
mov
lea
xchg
movswl
dec
inc
imul
xor
imul
add
sub
mov
inc
inc
imul
dec
jne
inc
mov
inc
inc
pop
lea
and
pop
or
mov
pop
inc
movsbl
mov
imul
mov
or
dec
inc
add
sub
lea
add
ret
push
push
mov
mov
push
dec
movzwl
dec
mov
inc
mov
push
mov
lea
and
mov
push
add
mov
mov
dec
add
mov
xor
push
inc
mov
lea
push
dec
inc
xor
lea
dec
push
inc
dec
push
dec
mov
pushl
dec
call
inc
add
dec
mov
mov
or
dec
or
dec
pop
ret
inc
sub
cmp
jb
imul
xor
imul
add
mov
imul
mov
xor
inc
mov
and
add
dec
lea
mov
add
inc
cmp
jb
dec
pop
add
mov
dec
mov
imul
xor
lea
inc
mov
imul
lea
lea
xor
lea
dec
xor
add
mov
add
inc
test
jbe
dec
dec
dec
lea
add
inc
add
dec
sub
mov
lea
dec
and
imul
mov
mov
or
dec
movzbl
sub
inc
add
inc
and
imul
sub
mov
inc
imul
mov
mov
dec
mov
sub
sub
mov
or
movzbl
imul
lea
xor
dec
jne
mov
mov
sub
inc
add
add
add
mov
lea
dec
inc
mov
lea
imul
lea
mov
mov
imul
add
movzwl
mov
dec
inc
test
jbe
add
inc
mov
sub
mov
xor
lea
imul
mov
or
lea
add
inc
dec
inc
inc
or
dec
xor
add
mov
mov
and
add
add
mov
lea
dec
movzbl
dec
mov
add
mov
mov
and
lea
imul
mov
dec
sub
movzbl
add
add
mov
lea
dec
mov
inc
mov
movzbl
movzwl
inc
add
dec
jmp
push
dec
inc
movsbl
mov
and
movzbl
dec
mov
dec
dec
sub
sub
dec
inc
mov
dec
dec
sub
lea
sub
dec
dec
mov
add
dec
xor
add
xor
lea
dec
mov
movsbl
inc
imul
or
lea
inc
dec
and
cmp
je
lea
movzbl
mov
push
inc
call
call
mov
add
call
call
sub
mov
sub
mov
imul
mov
dec
ret
mov
inc
pop
lea
ret
push
imul
xor
mov
mov
and
push
imul
inc
push
mov
push
mov
push
mov
add
mov
and
mov
call
mov
push
inc
mov
xor
add
sub
mov
neg
add
mov
dec
inc
dec
or
mov
mov
and
mov
inc
dec
inc
mov
dec
dec
je
lea
or
mov
mov
or
dec
mov
movsbl
mov
and
mov
repnz
movzbl
imul
add
add
jmp
lea
lea
mov
sub
movzbl
mov
sub
sub
imul
inc
inc
movsbl
inc
sub
jmp
dec
mov
pop
test
out
in
mov
mov
lret
leave
xchg
out
inc
sbb
into
adc
movsb
jb
xchg
mov
inc
push
imul
hlt
mov
dec
dec
pop
cmpsl
testb
arpl
push
cli
mov
sbb
mov
aam
addl
out
or
in
mov
stos
cwtl
divb
push
push
lea
insl
inc
stos
clc
cmp
add
add
mov
and
nop
jmp
inc
daa
pop
pop
mov
pop
ja
shlb
scas
sub
push
sub
and
aam
in
ss
ret
pop
mov
mov
in
icebp
lds
xchg
pop
sahf
xchg
outsb
fdiv
cmp
cld
dec
sub
dec
jnp
loop
scas
cmp
mov
add
fdivr
jmp
and
mov
andl
inc
jns
ds
pushf
fdivl
in
lahf
add
adc
int
sbb
mov
loopne
andl
jl
sub
cs
lock
in
push
daa
mov
push
bound
sub
add
daa
leave
adc
imul
sbb
dec
jmp
push
or
inc
scas
imul
in
mov
xchg
xchg
orl
enter
mov
mov
adc
aas
pop
sarb
mov
in
or
mov
lahf
stos
xor
mov
rcll
pop
xlat
push
leave
out
mov
push
arpl
jmp
add
lahf
out
xchg
mov
push
lds
cs
imul
mov
xor
mov
clc
mov
clc
adc
xchg
xor
push
lea
jae
xabort
fisttpll
xchg
fsubrs
jne
lret
inc
in
popf
stos
scas
push
push
inc
sub
pop
pop
test
or
andl
pop
loopne
cmc
mov
push
mov
leave
aaa
jl
sbb
pop
or
les
mov
adc
jbe
into
dec
push
sub
jno
cli
sbbl
jmp
mov
sub
sbb
cmp
dec
icebp
stos
mov
add
subl
adc
jp
push
or
out
dec
add
cmp
imul
cld
fcomi
sub
inc
test
stc
aad
fcomip
aaa
dec
mov
xchg
pop
adc
dec
mov
xchg
cld
or
cmpsb
ret
les
std
icebp
repz
shll
inc
pop
cwtl
cmc
popf
mov
ret
push
jne
loope
sbb
dec
out
lock
inc
jae
inc
jbe
or
pop
push
into
jno
inc
rcrl
pop
into
dec
lahf
fisttps
and
cld
jno
mov
repz
imul
fwait
ds
int
test
add
adc
adc
mull
pop
mov
data16
jb
mov
lock
and
jbe
xor
mov
pop
int
cmp
mov
or
bound
loope
int
cld
mov
addb
xor
sahf
daa
rorb
fisttpll
fadds
mov
aaa
lds
addr16
lret
mov
xlat
fxch
xchg
xor
loop
mov
push
push
mov
lods
mov
popf
and
sbb
fldl
imul
sub
push
pop
mov
pop
test
inc
xor
inc
scas
out
add
imul
dec
xor
pop
lock
cmp
shr
xlat
enter
dec
and
and
bound
imul
sbb
jg
aas
pop
ja
leave
sarl
mov
cwtl
roll
pop
xor
loope
lods
jne
jle
aad
sub
push
stos
and
mov
inc
stos
add
push
dec
inc
das
adc
adc
mov
push
jnp
jle
or
cmpsl
imul
adc
rcrb
leave
test
jmp
jge
mov
testb
daa
cmp
push
add
push
aam
and
mov
inc
nop
mov
xchg
stos
cli
jge
inc
cltd
jle
and
lods
aam
rep
pop
jl
push
test
insl
push
sahf
xor
jmp
mov
int
icebp
xchg
mov
push
or
xor
push
popa
scas
sbb
add
aam
das
or
sti
repnz
arpl
lcall
inc
pushf
mov
adc
jl
pop
mov
push
in
mov
push
push
scas
and
fsts
add
cs
pop
push
ret
notb
es
out
cmp
out
fs
loop
or
pusha
in
outsb
mov
add
std
or
loopne
xchg
sub
addr16
pop
and
and
andb
sub
cmp
fwait
lds
cs
out
dec
cld
out
gs
cli
pop
sub
leave
testb
insb
push
in
xor
pop
jg
aam
jbe
mov
sub
adc
push
adc
jecxz
sbbl
movsl
xchg
inc
imul
insl
xchg
adc
pop
and
sub
sbb
lahf
pop
xor
dec
dec
and
add
sub
mov
mov
inc
mov
in
pop
ror
pop
sbb
mov
sub
inc
inc
mov
pop
bsr
jmp
sbb
adc
jbe
sbb
xchg
fisubs
xorl
dec
pop
imul
adc
and
or
loopne
pop
decb
dec
popa
cmp
bound
mov
jns
inc
sarb
decl
movsb
sarl
jle
dec
or
aad
xchg
xchg
movsl
push
jno
shl
icebp
sbb
cmp
js
mov
int3
scas
push
push
sbb
cli
test
inc
dec
mov
mov
inc
sbb
ret
test
les
xor
pop
mov
shll
cmpsl
lds
fs
mov
filds
test
repnz
shll
fs
and
jmp
pop
pop
push
pop
xchg
in
jg
or
or
mov
repnz
inc
rcrb
out
sbb
mov
jp
jmp
cli
stos
mov
mov
rolb
sti
das
mov
mov
and
jns
popa
mov
push
push
test
cmp
jle
sub
jp
xchg
mov
sbb
jg
subl
adc
xchg
js
push
dec
inc
and
popf
sbb
jge
aas
test
or
ljmp
and
push
xchg
xchg
lret
or
fwait
imul
or
fldenv
jb
rorl
lea
stc
push
fisubl
add
sbb
in
clc
jp
js
add
jbe
sub
cmp
nop
sbb
test
outsb
mov
scas
insl
mov
jns
and
adc
orl
mov
mov
sbb
inc
jecxz
leave
arpl
mov
call
and
in
inc
push
and
loope
das
sub
push
andl
sbb
lds
sahf
test
and
cli
lahf
or
lods
push
mov
cmp
adc
push
and
cmpsl
leave
xchg
add
lret
and
mov
lds
add
rcr
mov
ds
lret
pop
das
mov
adc
sbb
gs
je
rcrl
cmp
negb
cli
outsl
js
aaa
or
cld
jmp
jge
jnp
aam
jae
int3
xchg
daa
imul
cmpsl
imul
cmp
insb
sbb
push
and
cmp
pop
fdivr
cmp
sbb
or
call
xchg
push
push
leave
dec
push
jl
add
ret
ljmp
outsb
inc
js
push
cmp
inc
xchg
mov
adc
and
push
into
dec
and
add
sahf
movsb
mov
icebp
ret
pop
out
xchg
push
sbb
xchg
jp
sub
inc
test
in
pop
dec
pop
outsb
pop
xchg
mov
xchg
push
lods
aad
lds
mov
nop
add
iret
add
xchg
cmp
shlb
sbb
and
outsl
jle
into
arpl
es
sbb
sub
fimull
mov
cmp
xchg
leave
mov
and
sub
jo
xor
aam
dec
cmp
loope
stc
mov
loop
inc
add
repz
and
sar
loop
nop
sti
cmp
push
shrb
pop
mov
imul
mov
sbb
popa
xchg
sbb
repnz
insl
in
jae
jnp
mov
push
je
iret
or
cmc
mov
pop
mov
lcall
xchg
ret
mov
test
sti
or
sbb
movsl
sti
or
push
jecxz
jne
out
cld
or
rcrl
mov
sbb
aas
jmp
inc
pushf
lods
xlat
mov
popf
ljmp
sti
pusha
mov
aam
jge
mov
idivb
rcrb
int3
clc
aam
add
inc
inc
divl
or
pushf
imul
dec
or
enter
int
cmpsb
mov
mov
push
test
pop
push
jno
out
pop
xorl
test
out
movsl
fcoms
rcr
cltd
in
inc
subl
push
cltd
nop
fnsave
enter
gs
loop
jns
aad
lret
dec
push
cmpsl
repz
mov
add
adc
loop
add
testb
inc
decl
cmpsl
cmp
cmp
dec
fistl
fmuls
scas
pop
pop
jae
pop
jae
lods
pop
in
loopne
stc
sub
lods
mov
dec
mov
std
jns
sbb
cmpsl
mov
cmp
sub
inc
mov
je
mov
inc
lret
ret
mov
gs
sbb
cmpb
cmc
pusha
cmpsl
mov
int
movsb
push
fildl
faddl
mov
inc
add
sub
pop
jle
dec
mov
jb
sar
popa
daa
clc
dec
popa
jbe
sub
jge
divl
cmp
jg
jo
adc
fcompp
pop
push
fimull
ficomps
lds
add
repnz
lea
mov
fdivs
cmc
fstl
pop
sbb
movsb
push
loope
jb
lret
lock
ja
je
adc
push
cmpsl
bts
testl
push
mov
aam
je
ljmp
sub
lahf
loop
fs
pop
xchg
fwait
rclb
or
incl
jmp
test
xor
push
dec
dec
je
sub
lcall
lods
mov
lret
push
inc
scas
clc
std
jno
out
imul
xchg
add
and
sbb
mov
sub
ret
jecxz
and
or
movsb
ret
mov
inc
cs
adc
fidivrs
and
mov
or
cld
sti
arpl
xchg
jae
push
fistl
insl
pop
shll
cli
aad
and
repnz
stos
mov
sub
nop
dec
in
pop
and
push
and
ja
movsb
loope
or
adc
mov
inc
jnp
xchg
adc
out
xchg
ficomps
inc
stc
jp
push
cwtl
aas
aaa
inc
jae
mov
aaa
test
test
dec
cwtl
outsl
push
inc
rclb
add
test
iret
push
ljmp
jmp
into
fwait
int3
dec
daa
mov
sti
mov
dec
jecxz
cmpsb
pop
scas
push
insl
out
xchg
imulb
pop
test
push
sub
mov
cli
leave
mov
rcrl
dec
decl
test
movsb
loop
add
xchg
push
cltd
fldcw
and
and
ret
int
xchg
stos
cld
push
mov
lcall
mov
xchg
lea
mov
pop
mov
inc
adc
or
ret
ja
pop
add
imul
pop
sbb
or
insl
mov
pop
or
rep
pop
dec
and
js
adc
and
lds
mov
lock
cmp
adc
loopne
inc
dec
cli
jb
insl
inc
ljmp
xor
jmp
pop
cmpsl
cmc
in
cld
mov
vxorps
pop
jmp
into
dec
lcall
xchg
pop
aad
jle
mov
add
fidivrl
mov
iret
pop
loop
js
mov
out
std
cmpsl
jecxz
mov
aaa
pop
repz
jae
push
pop
xor
cld
adc
jnp
jl
add
push
sbb
push
xchg
mov
push
mov
insl
rcrl
cwtl
imul
sub
add
mov
cmp
xchg
mov
sbb
pop
inc
ja
pop
pushf
jl
sub
in
or
dec
dec
add
xchg
pop
dec
lcall
ja
in
sarl
rcrb
fs
xchg
mov
aad
mov
lods
shrl
popa
imul
and
lds
mov
ds
imul
push
loope
xchg
push
xor
and
fcoms
pop
mov
int3
and
rclb
sbb
popf
nop
jecxz
add
push
aas
scas
mov
into
push
cmp
cmpsl
adc
mov
cmp
sti
inc
fs
movsb
mov
mov
inc
repnz
fmuls
push
mov
push
sub
inc
jo
add
jmp
push
mov
inc
jnp
add
ret
xchg
enter
lock
dec
clc
imul
popa
shrl
lret
and
scas
adc
dec
lock
movsb
ja
cmpsb
mov
jae
inc
ja
enter
add
xor
ret
popa
int
jge
sbb
mov
ljmp
repnz
enter
xchg
pop
std
pop
pop
imul
cmpsl
orb
mov
dec
dec
mov
mov
pop
pop
or
xchg
or
mov
sbb
mov
dec
in
and
sahf
lret
icebp
pop
cmp
add
inc
lahf
adc
pop
jg
push
outsl
ljmp
test
or
mov
cmp
icebp
divl
adc
push
dec
daa
jmp
negl
adc
push
ficompl
test
mov
xchg
or
jbe
negl
mov
aas
xor
and
jbe
icebp
mov
test
sbb
adc
and
imul
adc
jae
lret
dec
nop
xor
mov
scas
pop
in
jp
js
loope
jecxz
pop
pop
sbb
mov
push
mov
add
add
call
inc
mov
call
dec
push
add
call
add
imul
mov
dec
mov
inc
call
and
mov
dec
inc
inc
movswl
imul
mov
inc
sub
lea
mov
dec
dec
call
add
add
lea
add
add
call
mov
inc
call
inc
mov
mov
xor
xor
xor
inc
imul
inc
pop
add
mov
dec
add
inc
pop
inc
lea
pop
dec
mov
lea
mov
pop
lea
lea
lea
inc
mov
add
dec
mov
pop
add
movswl
pop
mov
inc
mov
and
inc
call
lea
dec
mov
mov
ret
and
dec
push
dec
add
push
and
push
dec
xor
push
movsbl
lea
push
add
sub
mov
dec
dec
push
ret
push
push
lea
sub
sub
mov
push
mov
add
inc
call
pop
ret
jmp
add
lea
pop
pop
ret
push
dec
mov
sub
dec
mov
mov
add
mov
mov
dec
inc
movzwl
inc
add
inc
inc
add
dec
mov
add
mov
mov
sub
mov
dec
imul
lea
sub
pop
ret
sub
mov
mov
and
dec
mov
inc
dec
mov
imul
mov
mov
mov
xor
xor
mov
mov
mov
dec
or
inc
imul
xor
inc
lea
mov
mov
cmp
jb
mov
push
mov
dec
push
lea
or
push
dec
sub
xor
xor
mov
xor
mov
mov
xor
dec
lea
push
mov
mov
push
mov
mov
pop
xor
dec
imul
imul
sub
add
inc
sub
and
dec
xor
mov
add
mov
dec
inc
mov
mov
add
movzbl
dec
add
lea
add
dec
lea
add
movsbl
lea
movzbl
mov
or
dec
lea
sub
sub
and
inc
movzwl
add
mov
sub
inc
jmp
add
add
les
add
adc
add
sub
adc
add
aaa
icebp
add
cltd
lods
add
rcrb
add
sub
nop
andl
inc
sub
ret
sbb
sarl
in
stos
insl
call
mov
ljmp
sbb
dec
inc
sti
inc
jns
arpl
shll
sahf
ljmp
pop
xor
int3
int
xchg
push
inc
bound
fstps
cmpsl
pop
sti
nop
mov
cmp
push
aaa
in
inc
imul
cmp
push
jecxz
pop
test
stos
test
cmpsb
test
cs
aaa
sbb
sbb
xor
ror
xor
test
jmp
adc
mov
cld
adc
xlat
cmpb
jns
add
cwtl
out
jg
push
int3
stc
mov
bound
fistl
fs
scas
inc
call
fildll
shrl
movsb
ds
inc
outsb
jl
stos
dec
sti
jb
pop
sbb
push
out
lret
pop
scas
shlb
pop
lds
dec
pop
sarl
aaa
mov
std
daa
insb
daa
pop
xchg
out
lahf
stos
adc
mov
pop
sbbl
lds
popf
ja
jne
xor
jns
inc
insb
cmp
in
mov
cwtl
sub
loope
xchg
movsl
push
pop
gs
shrl
cmp
dec
les
cmp
fwait
adc
add
loopne
mov
xor
outsl
mov
popf
imul
decl
insb
lods
fcoml
xchg
bound
adc
test
ret
icebp
mov
sti
adc
xor
sbb
scas
xchg
cmc
ds
or
pop
or
inc
pop
add
mov
rcll
adc
nop
adc
repnz
push
add
or
aas
dec
cmpsl
jns
pop
mov
pop
pushf
call
sub
call
jmp
mov
loop
jne
outsb
adc
je
dec
xchg
mov
nop
rcrb
mov
test
jo
cld
cs
mov
addr16
js
scas
add
push
xchg
das
cwtl
and
mov
rcrl
mov
dec
adc
sub
add
push
hlt
repz
pop
push
rcrl
mov
jae
jo
adc
inc
lods
pop
inc
fldcw
loopne
cs
cs
pop
fwait
mov
mov
cmc
mov
xchg
xor
lret
inc
fsts
push
insb
mov
lea
mov
and
push
icebp
inc
jle
xchg
call
sbb
cmovs
ret
loopne
fwait
pop
xor
inc
aad
bound
mov
inc
mov
fwait
pop
into
jle
xchg
icebp
jmp
std
hlt
sbb
rclb
push
cmpsl
mov
add
daa
inc
js
adc
shll
cmp
sbb
test
jmp
sbb
dec
jnp
movsb
sub
or
leave
mov
push
push
or
rcrb
sarb
inc
test
xlat
xchg
jecxz
cmp
jne
out
cmpsl
inc
les
jl
lods
pop
push
mov
dec
sarb
pop
push
cltd
cmp
cmp
jne
xchg
xor
sbb
xchg
mov
dec
jle,pt
mov
cmpsb
aad
pusha
rorb
mov
testb
imul
cltd
lret
cmp
fs
fs
pop
mov
nop
pop
mov
mov
and
mov
sti
je
or
mov
cwtl
dec
mov
mov
je
add
add
sub
or
xor
xchg
or
xchg
insl
out
in
or
stc
or
ficoms
cmpsb
lods
cmpsb
xor
and
dec
imul
in
dec
add
mov
leave
mov
sub
cld
mov
pop
lret
xor
aaa
push
mov
jno
mov
lods
fs
jge
xchg
ja
adc
pop
rcll
inc
mov
dec
adcb
sub
or
push
xor
dec
sbb
icebp
sahf
movsb
fcoms
mov
repz
adc
pop
cmp
and
aam
mov
lcall
pop
mov
aam
inc
and
mov
rclb
popf
mov
rorb
push
adc
sub
scas
mov
mov
jns
sar
xor
or
or
cmpsl
adc
push
cwtl
cmc
popf
fstp
add
lea
roll
xchg
xchg
jecxz
out
cmp
mov
inc
subb
addb
jl
int3
aad
and
sbb
insl
push
aam
xchg
cmp
ds
cld
out
inc
out
test
repz
adc
pop
or
or
push
mov
mov
sahf
lahf
stos
and
pusha
int3
dec
or
movsl
xchg
inc
or
cltd
sbb
dec
pop
ret
dec
jg
loope
xor
shlb
std
adc
jecxz
cld
stos
call
add
sar
pop
stc
insb
xchg
mov
gs
add
stc
mov
popa
push
imul
rclb
jl
cwtl
pop
adc
ret
test
lahf
leave
es
sub
mov
push
rcll
sub
cmp
pusha
pop
aaa
test
popf
fs
int
mov
or
cmpsb
mov
rolb
test
jg
data16
dec
push
mov
dec
rolb
cmc
insl
xor
out
dec
push
cmp
mov
fndisi(8087
mov
call
add
jbe
aad
mov
jle
sbb
sbb
test
mov
cmpsl
adc
movsb
fs
pop
jbe
bound
mov
dec
xor
jno
add
popf
push
jbe
loop
add
cmpsl
inc
ja
sub
pop
lahf
in
pop
test
push
sbb
ds
dec
sub
add
test
faddl
mov
xchg
icebp
out
outsb
jne
xlat
lods
inc
lcall
cmp
in
orb
pop
inc
scas
pushf
stc
jne
roll
jmp
popf
sbb
fcom
or
adc
inc
mov
dec
sarl
rcrl
les
out
sbb
hlt
stc
pop
add
lea
enter
cltd
into
fs
jl
dec
mov
ret
mov
adc
mov
in
push
inc
test
mov
popa
jne
push
jns
mov
jns
das
xor
sbb
pop
sbbl
cmc
cmpsl
cs
pop
or
push
sbb
iret
outsl
jnp
shlb
in
push
sub
pop
add
add
out
dec
arpl
loop
int3
insl
jmp
and
and
add
push
lock
addb
repz
pop
fidivrs
push
mov
hlt
test
test
mov
jne,pt
rol
adc
inc
push
testb
ret
xor
sub
cmp
jae
cmp
or
and
xchg
and
je
adc
sbb
stos
icebp
mov
sub
ret
push
jbe
jge
out
mov
cltd
or
sbb
push
push
inc
das
rorb
mov
or
mov
adc
shlb
das
mov
xchg
aaa
shrl
dec
lret
mov
hlt
and
aad
add
jae
mov
lds
fstl
jns
mov
mov
sarl
shrl
ds
jns
aam
xchg
dec
popf
enter
mov
jge
adc
test
clc
pop
out
ret
or
xor
sbb
mov
add
mov
pop
dec
cmp
cmp
cmp
inc
movsb
cwtl
pop
decl
cs
je
cld
or
jle
out
sub
push
adc
pop
push
les
push
popf
sbb
mov
lods
imul
push
and
mov
or
loopne
test
pop
xchg
xchg
leave
lods
xchg
sbb
aad
sub
imul
xchg
mov
bound
adc
push
fldt
jnp
xchg
mov
cmp
daa
fsubrl
insl
push
and
dec
gs
stos
mov
outsb
or
lahf
xor
adc
xchg
ficompl
shrb
fs
popf
stc
into
fcmovnb
jne
leave
inc
int3
lret
mov
mov
jne
push
inc
or
xchg
vandnpd
mov
inc
mov
cs
cmc
adc
dec
notl
adc
repz
fnstsw
or
mov
inc
push
hlt
stos
xchg
mov
jmp
inc
test
imul
rcl
imul
aaa
adc
lock
mov
xor
pop
mov
out
jle
inc
inc
imul
pop
subb
xchg
pop
inc
add
push
xchg
push
mov
mov
outsb
int3
outsb
shlb
shlb
push
ficoms
push
mov
mov
mov
xchg
lods
push
lret
xor
or
int
mov
repz
xchg
movsl
mov
fs
lods
test
sub
cmp
int
sti
ja
outsb
cmp
fstp
fwait
in
outsl
iret
stos
jge
push
cmp
mov
rorb
rcll
pop
push
ja
mov
mov
push
bound
add
jg
xchg
test
js
mov
ja
cmp
mov
xor
mov
add
cs
xor
xor
insl
aam
sbb
xor
mov
andl
add
xchg
cmp
pushf
or
addr16
outsb
pop
clc
xor
cs
add
rcll
ret
rolb
imul
xchg
push
fstl
inc
repnz
aad
push
shll
mov
rcrl
repz
push
mov
add
out
mulb
aaa
sbb
aad
cmp
xlat
pop
sub
ja
call
jb,pn
sub
in
pushf
into
mov
mov
jg
pop
das
cmp
lods
hlt
cmp
inc
pop
mov
mov
xchg
pop
inc
aas
jp
cmpsb
push
or
sbb
jmp
dec
mov
rorb
xor
adc
sahf
ja
adc
push
and
pop
jg
aaa
inc
cmpsb
or
xor
shrl
fisttpll
insb
mov
pop
std
sbb
imul
inc
mov
stos
incb
test
mov
test
repnz
dec
loope
scas
xor
mov
faddl
scas
add
fisubs
xor
jmp
push
mov
cltd
neg
push
cld
stc
cmp
jmp
pop
ja
mov
insb
stc
or
fcmove
repnz
loop
jge
call
push
mov
daa
mov
enter
outsb
sub
mov
sarb
sbb
mov
inc
cwtl
sbb
out
fists
negl
lcall
cli
jnp
loop
loop
hlt
aad
cmp
pop
aaa
inc
insb
repnz
xor
cmp
sub
mov
adc
mov
mov
test
js
in
add
shll
imul
jnp
iret
hlt
adc
inc
push
scas
movsl
in
cmpl
dec
inc
sub
dec
dec
inc
push
xlat
aaa
pusha
insl
xor
mull
adc
pop
popf
lock
jecxz
sbb
test
and
push
jl
adc
sbb
lods
cs
ja
pop
pop
idivl
pop
xor
in
cltd
mov
dec
add
sbb
push
pop
adc
cmpsl
mov
mov
arpl
push
dec
pop
in
or
negb
or
test
loope
jbe
push
cmp
mov
sbb
cmp
mov
pop
push
mov
cmc
push
xchg
push
xchg
andl
cld
test
and
cli
in
mov
jmp
fwait
mov
adc
push
loope
in
insb
add
imul
mov
add
adc
scas
push
cmp
inc
lahf
fcomip
and
push
jno
mov
sbb
sub
in
into
jl
dec
sbb
lahf
movsl
jns
adc
hlt
jg
adc
mov
jl
das
mov
add
into
and
mov
mov
dec
notb
xlat
pop
adc
xor
loop
insb
mov
cmp
and
push
hlt
jle
mov
jl
push
cmpb
jns
in
dec
or
std
out
sbb
pop
xor
lods
test
mov
test
push
lret
aad
and
jae
lds
test
and
rcrl
mov
js
dec
into
adc
cmp
sub
sbb
cli
mov
push
lret
test
aad
enter
jo
xchg
jns
adc
ss
in
pop
int
mov
adc
xorb
inc
xor
cmp
repnz
add
push
daa
or
jg
aam
std
dec
xor
insl
in
xor
pop
mov
arpl
das
pop
inc
xchg
jns
addr16
push
outsl
and
xor
push
push
stos
gs
mov
sar
daa
jmp
sbb
mov
xchg
out
sbb
in
in
pushf
imull
jnp
xchg
push
imul
loop
sub
mov
clc
push
mov
add
sbb
xchg
add
andb
push
push
ret
cld
adc
mov
jne
inc
or
sbb
scas
add
int3
mov
adc
ret
lcall
adc
int3
mov
add
push
xorb
incb
jo
sbb
or
xchg
sub
mov
push
cltd
movsb
les
cmpsl
nop
jg
das
iret
ja
int3
sti
sub
dec
rcr
in
jae
jb
loop
sbb
sbb
mov
inc
mov
loopne
jno
add
or
dec
adcl
dec
dec
std
and
mov
push
bswap
or
and
sub
rsqrtps
sub
jae
jb
dec
pop
xchg
dec
pop
sarl
push
mov
ljmp
jge
imul
push
jo
popf
fidivs
outsl
lcall
xlat
xchg
lods
fmulp
aad
cmp
adc
sbb
popf
mov
dec
jge
daa
les
mov
out
add
add
push
jg
out
or
shl
dec
les
jo
jle
mov
or
es
xor
mov
jp
jp
scas
jg
cld
push
push
push
repnz
cmp
cs
xchg
mov
pop
cmp
insl
sbb
sbb
push
mov
fcmovne
fisubs
dec
inc
cltd
pop
dec
pop
adc
mov
and
in
dec
in
push
fidivl
enter
mov
movsb
or
xchg
jmp
test
outsb
xchg
cltd
mov
push
xchg
cmp
outsl
ret
jl
lret
out
sbb
xor
mov
adc
push
ret
pop
add
mov
inc
jmp
cs
mov
xor
adc
call
mov
and
jecxz
add
test
fcomp
in
outsb
out
pop
lcall
mov
inc
shrl
push
dec
mov
loop
jno
mov
adcb
leave
xor
xchg
mov
jp
mov
or
mov
dec
mov
jge
inc
inc
inc
add
add
aaa
ja
aaa
frndint
cmc
push
cmp
push
mov
popf
jg
pusha
sub
xorl
xchg
add
mov
outsl
sub
mov
loope
xor
jge
jle
fadds
das
jp
scas
mov
lcall
mov
inc
jnp
leave
mov
in
xchg
rcll
jmp
jge
xchg
xchg
sbb
fstl
pop
in
xor
mov
repz
jge
fisubrs
jo
push
mov
lcall
inc
dec
cmc
inc
jg
fsub
loop
pop
leave
pandn
or
in
aas
or
in
adc
and
mov
dec
jmp
dec
jb
lock
stos
cltd
cmpsb
and
leave
aad
add
dec
cmpsb
inc
stc
mov
mov
sub
pop
xor
psllw
xchg
jns
inc
test
jnp
sahf
ds
cmp
stc
push
mov
jbe
cwtl
shll
add
pop
mov
sbb
jae
jg
fdiv
pop
fwait
les
push
lret
pop
in
mov
sbb
mov
jo
pop
test
repnz
into
jne
cmp
into
xlat
adc
dec
push
cmp
aas
test
or
add
fildl
fcom
pushf
dec
jns
cli
push
mov
fdivp
cmpl
mov
cmp
js
mov
jmp
and
das
sub
cmc
int
inc
jp
add
and
outsl
lahf
lods
sub
xor
clc
push
mov
jp
or
stos
stos
sbb
pop
jmp
dec
insl
xor
adc
mov
lods
xor
cmpsb
ja
int
jmp
mov
jl
shll
repz
pop
dec
inc
add
mov
fsubrp
cmp
sub
pushf
jne
push
pusha
dec
adc
movsb
mov
xor
xchg
mov
in
outsb
notl
gs
clc
dec
cltd
mov
inc
addr16
out
ljmp
pop
push
es
sub
mov
popf
jne
xchg
in
pop
in
inc
or
mov
inc
sbb
mov
lods
mov
push
jb
pop
and
sti
test
and
fwait
loopne
push
out
inc
rorl
jns
dec
nop
and
js
xchg
mov
in
jp
je
mov
cmp
adc
fimull
mov
outsb
in
or
cmp
push
cmp
sbb
das
pop
xor
jg
xchg
das
and
inc
mov
jno
xor
repz
arpl
and
int
sahf
pop
jecxz
push
fistps
or
fiaddl
pop
sbb
aaa
mov
xor
inc
add
jno
daa
gs
mov
imul
inc
mov
cmp
mov
fstps
in
jmp
loopne
lds
pop
jmp
imul
jp
divb
mov
aaa
mov
stc
clc
mov
lahf
push
cmp
sbb
or
out
lret
adc
mov
cs
shr
movsl
dec
fbstp
inc
push
add
sbb
sbb
ja
sbb
enter
dec
pop
sti
adc
or
les
jecxz
cmp
mov
shrl
pop
mov
cltd
out
or
jno
inc
lret
fcmove
inc
or
lret
or
mov
cmp
pop
ret
add
jae
in
ficoml
mov
int
mov
into
xchg
cs
adc
mov
jecxz
pop
or
outsb
xchg
and
jo
out
inc
cmp
push
rolb
movsb
cmp
cmpb
lds
adc
xchg
icebp
inc
movsl
scas
sub
mov
js
imul
xor
add
push
pop
push
pop
in
mov
popa
mov
push
rclb
test
mov
nop
mov
popw
cmp
and
imul
cmp
cld
cmp
or
out
pop
sbbb
mov
ret
mov
push
movsb
insl
vmovupd
lret
xor
push
stos
lods
flds
addr16
mov
jb
call
lods
imul
cltd
in
mov
mov
lret
pop
mov
sahf
mov
out
add
inc
xor
mov
jge
roll
and
sbb
sbb
loopne
jne
sub
adc
call
mov
adc
xor
mov
mov
gs
ss
test
test
dec
les
clc
sbb
lea
mov
inc
dec
mov
mov
xor
mov
fcmovnbe
lcall
test
dec
dec
sub
push
cmp
mov
push
xor
test
push
lret
ja
arpl
xchg
ss
add
push
bound
dec
mov
mov
and
cmp
rcrl
shl
jnp
push
clc
ja
fxch
lahf
xchg
ret
xchg
daa
aaa
and
cwtl
movsb
movsb
lahf
jbe
cmovne
call
test
or
movsl
mov
out
fs
sbb
inc
jnp
inc
push
shl
cmpsl
push
shl
and
fldl
out
test
jge
repz
test
push
pusha
jno
arpl
cmp
sub
add
jmp
inc
pop
adc
cmp
imul
data16
mov
dec
aam
mov
xchg
xchg
sub
and
flds
incb
or
mov
cmpsb
add
daa
dec
or
flds
js
push
mov
mov
jge
loopne
inc
imul
push
dec
cmc
ja
cmpsl
cmpl
je
cld
out
je
mov
jge
sub
insl
and
and
ss
lods
test
jge
or
mov
js
ljmp
mov
imull
stos
cltd
cwtd
inc
out
jge,pt
or
popa
jl
lahf
iret
iret
std
popf
divb
ljmp
xor
fisubl
xchg
outsl
pop
cwtl
mov
or
scas
lcall
fwait
add
test
scas
cli
in
in
dec
pop
pushf
cmp
std
xchg
sub
push
lcall
into
cmp
inc
loope
ss
cmc
adc
xchg
mov
adc
cmp
mov
mov
lea
add
and
jb
lret
dec
jo
incb
out
add
ljmp
add
mov
fidivs
ret
add
enter
lock
xchg
je
leave
jbe
into
mov
inc
es
inc
or
shlb
lret
pop
mov
push
pop
add
ret
mov
push
dec
and
dec
dec
icebp
je
inc
aaa
mov
inc
adc
in
add
or
xor
xchg
jmp
cmp
mov
jb
jl
aas
cld
lock
mov
nop
xchg
jns
sahf
pop
test
mov
js
iret
inc
xchg
insb
pop
jne
or
inc
data16
incl
jns
data16
pop
mov
scas
hlt
popf
add
jmp
dec
into
fs
mull
fsubs
push
repnz
xor
pop
loope
into
cli
xor
pop
sbb
adc
lcall
jbe
fnstcw
sbb
push
ds
cli
arpl
pushf
fadds
push
ret
cmpsb
inc
ret
sbb
mov
sbb
fsubrl
stos
icebp
idiv
outsb
sysret
or
xor
mov
pop
sbb
dec
ss
pushf
shll
push
push
data16
cs
das
mov
ljmp
xor
jnp
pushf
adc
jmp
pop
xor
pop
lods
jae
lods
inc
xor
pop
pusha
pop
insl
cmp
inc
adc
fdivs
push
stos
or
push
push
cmp
add
sahf
mov
cltd
fwait
inc
stos
dec
pop
inc
addb
push
add
push
and
loop
xor
jne
dec
add
push
in
sub
mov
sti
test
imul
loop
xor
das
aad
add
mov
or
and
mov
push
test
lods
lret
lret
add
lret
dec
jge
jmp
repz
rol
pop
orb
mov
xor
xchg
add
lahf
test
loop
addb
ljmp
pusha
sbb
push
sub
jbe
mov
movsb
shlb
iret
jl
push
mov
xlat
js
cmp
lcall
adc
dec
hlt
ja
aad
fwait
cmp
mov
shlb
cmpsl
cli
add
sbb
add
sti
ss
jp
pop
insl
and
enter
push
rcrl
mov
xor
or
xor
fimull
out
cmp
pop
int
pop
bound
rolb
push
xchg
pop
mov
test
adc
leave
push
adc
pop
mov
out
xchg
jle
dec
mov
pop
push
push
cmp
in
adc
leave
add
pop
push
and
rcl
inc
faddl
mov
subb
lods
jns
lods
mov
int
push
and
xchg
out
nop
mov
xchg
sbb
fisttpl
jl
mov
cmp
scas
xchg
xchg
imul
sub
mov
pop
inc
cmp
inc
in
push
push
add
mov
cmc
pop
jp
ss
imulb
xorb
mov
hlt
sbb
rorb
insb
dec
and
jo
pusha
xchg
add
jmp
test
ret
dec
mov
and
outsb
out
nop
pop
imul
ja
loop
aam
mov
shll
inc
jnp
or
loope
inc
pop
popl
pop
sbb
push
xchg
orb
mov
pop
add
loopne
mov
test
sbb
cwtl
and
out
arpl
je
push
and
add
lahf
or
sbbl
push
icebp
icebp
in
int3
mov
fdivrs
jbe
das
and
add
test
jge
lcall
dec
dec
mov
sbb
pusha
sbb
sub
aas
mov
pusha
cmp
cmp
into
in
hlt
sahf
repz
mov
fnstenv
mov
das
das
mov
mov
rcr
inc
in
add
ja
test
mov
mov
leave
pxor
xchg
gs
mov
jno
jbe
xchg
popl
and
adc
in
cmc
mov
push
or
pop
and
pop
mov
pop
push
jmp
rcl
loop
das
or
inc
fucomi
or
sbb
aas
mov
xchg
test
push
mov
movsb
ret
in
popf
cmpsb
imull
inc
outsl
test
pushl
in
push
fsub
mov
inc
lods
fnclex
add
outsb
or
push
fs
ss
sbb
sbb
push
cmp
je
xchg
xor
pop
movsl
scas
aas
pop
call
mov
into
bsf
or
xor
inc
push
call
jmp
push
inc
pop
add
jb
hlt
push
push
nop
mov
add
mov
js
inc
movsb
xchg
adc
push
rcl
bound
out
test
leave
add
adc
in
ja
ret
pop
xor
adc
mov
pop
movsb
pushf
lds
lcall
call
out
cmp
movsl
inc
movsl
mov
fisttps
jl
stos
fiaddl
pop
movsl
and
sub
divl
shrb
les
xchg
nop
push
mov
push
sbb
xchg
outsl
es
jg
mov
js
cld
sbb
fldl
jmp
movsb
xor
push
cs
in
xor
cmp
add
add
mov
scas
rol
pop
cld
repnz
std
mov
inc
sbb
sbb
and
popa
pusha
push
test
mov
dec
ds
pop
movsl
test
mov
xorl
ljmp
pop
loop
insb
in
sbb
inc
inc
call
imul
cmp
jae
mov
xchg
fbld
mov
sbb
jns
or
adc
icebp
xor
hlt
pop
ret
aam
jl
dec
stos
jmp
ljmp
dec
push
int
call
mov
in
subl
adc
test
movsl
mov
stos
or
sub
in
push
std
jl
pop
into
aad
icebp
pop
add
jbe
xor
popf
adc
xorb
add
ja
js
divb
iret
add
jle
movsl
dec
sub
sbb
fisubrs
mov
cmp
movsb
sub
nop
pushf
rorb
fs
jmp
outsb
int
xor
in
xchg
sub
mov
out
mov
lret
int3
xchg
xlat
xor
das
cmp
and
shlb
stc
xchg
xor
pushf
fdivrs
pop
fldl
outsb
mov
rorb
cltd
popa
outsl
popa
shll
sahf
inc
and
pop
jge
loop
sti
pop
loopne
ljmp
pop
fists
pusha
adc
dec
cmp
cli
mov
test
sub
bound
adc
push
cmp
xchg
xchg
push
cmp
jno
pop
stos
mov
fwait
or
addr16
rcl
sub
mov
pop
mov
pop
or
fs
lcall
mov
sub
mov
mov
movsl
xor
xchg
mov
fstpl
pushf
xor
test
iret
js
repz
jo
jb
adc
xorl
cwtl
hlt
jae
mov
xchg
lea
push
xor
test
adc
inc
ds
pop
cmp
lcall
pop
sbb
mov
jmp
mov
orb
add
repz
push
sti
mov
sahf
nop
lods
xchg
mov
enter
mov
stos
mov
dec
sldt
inc
outsl
fcompl
or
mov
idivb
inc
adc
cmp
popa
jle
adc
sbb
imul
iret
mov
xchg
xchg
sub
inc
jmp
dec
in
out
lcall
cltd
sub
fdiv
inc
xchg
outsl
adc
xchg
cltd
and
insb
pop
inc
mov
push
jmp
jecxz
inc
push
ds
lea
aam
sahf
pop
rorb
xchg
icebp
test
and
push
jno
cwtl
pop
sub
mov
fsubp
mov
lods
aaa
inc
mov
stos
loopne
lods
fstsw
fimull
adc
adc
mov
std
scas
inc
jo
mov
ja,pt
cmp
movsb
xchg
in
mov
pop
mov
dec
int
fistl
movsb
push
fucomip
icebp
jae
loopne
pop
cmp
mov
sub
hlt
mov
shrb
xchg
cmp
inc
adc
xor
rorb
fwait
rclb
mov
test
jle
test
or
stc
icebp
push
inc
mov
ja
ss
and
icebp
pusha
mov
cmp
jle
shll
add
xor
inc
mov
leave
pop
add
scas
xchg
dec
adcb
std
push
add
or
shlb
cs
add
jnp
pop
xor
sub
enter
sbb
adc
fisttpll
int
push
lcall
xor
in
iret
sbb
pop
mov
xchg
std
inc
inc
sub
mov
pop
mov
sub
push
jge
ret
insb
in
lods
stos
leave
nop
xor
gs
mov
or
sub
sahf
xor
jne
ss
xor
mov
stos
or
pop
in
xor
int3
stos
adc
fwait
das
mov
imul
aam
mov
lret
xchg
mov
mov
lock
or
cmp
leave
add
test
push
pop
sub
cmp
loope
xchg
hlt
faddl
adc
and
aam
dec
dec
mov
dec
sub
inc
into
lock
movsb
ret
ss
push
and
mov
js
orl
dec
arpl
xchg
ficoml
sub
jg
dec
mov
and
sbb
sahf
shll
cltd
xlat
pushf
cmpsb
cmp
pop
ss
ljmp
sarb
cltd
or
pop
mov
movsb
xor
cmp
sbb
fcoml
dec
add
insl
fidivl
push
push
icebp
int3
lahf
pop
pop
pop
pop
out
fs
mov
fdivrp
imul
adc
imul
mov
jp
popa
jns
pop
mov
xor
mov
rol
xchg
fistl
push
push
rclb
fldl
pop
shll
xor
adc
or
adc
and
mov
loopne
sub
scas
insb
pop
arpl
jb
int3
inc
lret
jl
scas
les
mov
sahf
mov
cmp
test
ficomps
xchg
ljmp
mov
cmp
rcrb
add
sbb
sbb
out
mov
out
or
xchg
stos
cmpl
in
test
adc
fcompl
mov
enter
cld
lret
cltd
jg
outsl
dec
jns
shrl
sub
and
pop
repz
ss
mov
dec
push
sbb
aad
popa
sub
popf
popa
mov
movb
mov
xor
in
lds
jle
sti
xchg
fwait
inc
aaa
jno
xchg
sbb
pop
jle
lret
out
aam
lret
ficomps
pop
add
xor
mov
mov
jg
test
ja
fwait
push
lds
dec
add
into
sub
fstl
fcmovnbe
inc
leave
xchg
push
fidivs
movsl
pop
mov
idivl
xchg
daa
int
leave
cmp
pop
inc
scas
mov
or
mov
test
cmp
xchg
ja
stc
es
cmp
nop
mov
and
icebp
lret
push
adc
mov
jbe
or
mov
dec
inc
mov
outsb
stos
push
popf
jno
xchg
or
mov
pop
popa
shl
sub
add
push
mov
sahf
push
das
xchg
inc
sbb
pop
mov
push
sbb
adc
sbb
push
push
mov
push
scas
outsl
jp
mov
shr
mov
enter
shll
jbe
sbb
mov
mov
dec
pop
lods
cmp
pop
fnop
sub
imul
mov
jnp
loop
push
pop
clc
add
xchg
xor
and
iret
mov
fldl
xchg
push
icebp
mov
loope
adc
mov
ja
sub
mov
adc
adc
in
or
fisubs
mov
fbld
mov
stc
cmp
ret
clc
out
das
xchg
mov
es
popa
js
mov
pushf
push
and
orl
adc
mov
pop
sbb
jb
pop
stos
das
mov
and
vpsraw
bound
cmp
jne
mov
pop
lds
dec
xchg
sahf
movsl
adc
fisubrl
std
faddl
repz
loop
push
in
cmp
mov
mov
popf
in
inc
stos
sbb
in
mov
imul
xchg
aaa
sbb
dec
in
or
xlat
jbe
mov
jb
rolb
dec
sub
rclb
xlat
call
or
xchg
jae
fcmovb
dec
push
jno
sbb
xor
cmpl
pop
lret
rcll
or
repnz
rcl
mov
inc
and
js
cmp
lods
inc
xlat
leave
lods
insl
roll
cmpsb
out
shlb
push
sbb
lret
jmp
pop
arpl
shrb
cmp
adc
mov
enter
stos
lea
dec
jns
out
icebp
pop
stc
fs
dec
fistps
xchg
sahf
lods
or
imul
sbb
lock
inc
mov
fldl2t
or
fcomp
aam
lret
in
jbe
inc
jl
mov
stc
rcll
mov
sahf
sbb
adc
mov
push
pop
sbb
aam
jecxz
pop
fwait
push
push
sbb
movsb
loopnew
mov
or
lret
test
mov
mov
clc
clc
cmc
lock
fwait
jb
cmpb
imull
push
mov
test
mov
cmp
jmp
xor
test
pop
or
lcall
lret
xor
mov
inc
imul
aam
sahf
fs
div
test
dec
iret
sub
in
lahf
and
pop
sbb
jg
sbb
jo
loop
xchg
push
sbb
nop
fwait
xchg
mov
test
into
inc
rclb
pushf
sub
xchg
xor
ds
mov
dec
xchg
xor
inc
add
push
push
cs
dec
jbe
out
mov
mov
cmc
outsb
add
sub
arpl
in
jp
imul
lea
inc
mov
add
cmp
jmp
aam
stc
sti
scas
push
add
nop
and
js
rol
in
stos
and
sahf
fnstcw
xor
lahf
sbb
sbb
lock
lcall
push
jg
xchg
je
scas
rcll
inc
push
push
and
push
mov
or
sub
fists
hlt
mov
pop
in
push
push
in
imul
mov
jl
not
negl
movsb
mov
bound
sub
mov
cld
enter
ss
pushf
vmwrite
rol
cmp
lcall
ja
stos
or
or
xchg
out
bound
hlt
inc
cld
insl
sti
sub
rcrl
fcomps
psubusw
lret
hlt
mov
notl
dec
push
inc
lret
or
push
xor
sub
in
mov
hlt
in
xchg
cwtl
cmp
outsb
fildl
fiadds
imul
sub
cmp
les
mul
cs
sub
call
adc
xor
add
jg
dec
cmp
es
sub
in
jge
cwtl
push
dec
outsb
xchg
dec
inc
fdivs
cmpsl
out
pop
dec
gs
sub
fistps
or
push
push
leave
jne
iret
lcall
dec
insl
xchg
lcall
sbb
pop
adc
in
jmp
jmp
xlat
jmp
imul
inc
lahf
je
cmp
out
fcoms
lea
sub
add
sbb
pop
test
out
shrl
dec
mov
mov
jecxz
push
mov
rorb
lcall
jo
and
mov
das
pushl
scas
iret
insl
iret
or
pop
mov
insl
lahf
loop
push
add
mov
inc
rcl
pop
daa
inc
sahf
out
je
or
inc
test
test
roll
bound
shr
cmpsb
imul
into
sbb
push
into
insl
sarl
and
push
aam
xor
pop
ficompl
inc
nop
int3
in
mov
jnp
lock
pop
pop
inc
cmp
sbb
add
adc
aam
xchg
push
cmpsb
jns
or
xchg
aam
lea
addr16
dec
xchg
out
cmpb
lea
and
int
sbb
inc
cmc
movsl
sbb
xchg
push
test
jp
bnd
mov
and
or
xchg
icebp
sbb
xchg
and
scas
jae
cmp
shll
add
outsl
les
mov
ljmp
pop
mov
jp
add
push
imul
jl
test
hlt
adc
cmp
jns
loop
les
scas
sbb
fisubl
fwait
inc
popa
insb
jb
lods
loop
and
clc
out
inc
and
inc
push
jg
sbb
xchg
pop
fisubrs
xlat
loopne
daa
ret
sbb
orl
pop
cmp
jg
cmpsl
add
in
cld
or
mov
movsl
arpl
push
insl
popf
push
cli
lcall
outsb
test
lods
loopne
ds
std
xchg
arpl
push
dec
mov
sub
add
jmp
cmp
cwtl
push
add
dec
lret
in
xchg
or
rcr
ret
fstpl
pop
mov
dec
pushf
aaa
lods
xor
outsl
xor
loop
mov
sbb
sub
repnz
push
xor
or
xchg
xchg
sub
scas
orb
mov
aaa
cwtl
cmp
pmulhw
sbb
mov
subb
es
sub
mov
imul
pop
fbld
mov
mov
and
pusha
xchg
push
mov
push
inc
push
ja
pop
jo
fsts
jno
cmp
cli
mov
int
and
mov
cli
daa
mov
movsb
test
sar
rolb
stc
pop
xchg
dec
or
hlt
lods
cmp
cmp
dec
fmuls
push
pushf
mov
and
sbb
push
rclb
inc
mov
arpl
xor
stos
popf
lods
pop
mov
and
mov
pop
movsl
imul
dec
sarl
add
cmp
xor
xor
test
jle
hlt
ret
leave
lret
pusha
adc
xor
fisubrs
cmc
ljmp
fisubrs
cmp
xchg
xchg
and
clc
and
int
es
xor
shr
out
sub
xchg
repz
push
mov
mov
ljmp
add
lods
scas
outsb
jnp
cmp
add
lcall
mov
sub
aas
arpl
push
pop
clc
cmp
inc
popf
lods
adc
sub
or
fwait
test
add
jns
jae
sbb
xchg
faddl
jb
pop
lcall
sub
jnp
pushf
mov
stos
imul
mov
daa
arpl
jnp
int
inc
repnz
mov
adc
pop
ret
push
in
sbb
loope
clc
lcall
test
pop
daa
sti
push
aad
fcmovbe
push
cwtl
in
pop
push
insb
jmp
movsb
arpl
sbb
dec
push
movsb
inc
scas
inc
mov
xchg
push
cmpsl
rcll
loop
xlat
stc
mov
add
mov
pop
add
daa
sbb
or
mov
or
sbb
xchg
fistl
adc
jae
pushf
out
xchg
sahf
lock
mov
jle
and
aas
pop
ss
and
cmpl
pminsw
jmp
cmpsl
hlt
stc
inc
sub
sub
mov
xchg
add
mov
adc
inc
sarb
dec
cld
xchg
shrb
sub
hlt
sbb
test
movsl
mov
incb
push
mov
xchg
pop
cwtl
or
add
aas
push
xor
jbe
jne
add
adc
mov
popa
test
movsb
lret
inc
imul
shll
iret
loope
push
jo
inc
cmp
pop
sub
xlat
push
jb
or
mov
dec
mov
fcomp
or
hlt
adc
loope
jo
outsb
sbbl
enter
mov
jns
add
fmul
jmp
inc
and
es
or
fsts
leave
xor
daa
pop
and
lret
das
and
xchg
je
icebp
xchg
imulb
sti
in
push
fwait
cmp
jo
insl
pop
push
and
arpl
ret
mov
xor
dec
mov
cli
xor
insb
and
negl
push
incb
aam
in
or
mov
mov
xchg
pop
and
xchg
enter
addr16
clc
and
jb
shll
fucom
sar
loop
mov
pusha
add
sahf
cs
push
jl
movsl
sbb
xor
cltd
lds
add
movsl
imul
cmpsl
mov
es
test
push
inc
sbb
sub
cwtl
xor
lahf
cmp
pop
and
push
xchg
add
icebp
rorb
test
lcall
adc
mov
xchg
ljmp
loop
aas
mov
cmpl
pop
in
mov
les
and
dec
jg
mov
pop
xchg
movsl
cmp
sahf
jle
sahf
aad
cmpb
jae
inc
xchg
dec
pushf
inc
push
mov
into
pop
mov
fidivl
mov
cwtl
push
jp
jb
xor
repz
lret
outsb
cmpsl
jae
or
lds
mov
scas
test
pop
push
and
xchg
xchg
notb
mov
aas
int
stos
cmp
pushl
sub
addr16
enter
mov
dec
xchg
xchg
or
xor
test
jg
jo
aas
and
mov
mul
fimuls
mov
and
dec
test
cmpsb
loopne
bound
and
test
fisubs
adc
movsl
mov
push
push
cmpsl
jae
add
or
or
mov
cs
jno
cmp
sbb
mov
sar
test
mov
enter
add
out
or
push
mov
and
xchg
daa
sbb
cli
out
sbb
or
cli
mov
adc
mov
test
jnp
out
inc
xor
jg
dec
mov
xor
mov
dec
add
add
pop
xchg
xor
pop
sub
push
test
adc
das
popa
ret
sbb
leave
dec
push
pop
mov
jae
loop
into
mov
call
mov
ja
add
fs
sbb
or
mov
insl
add
sub
in
movsl
daa
popf
mov
pop
test
dec
pop
and
jo
sti
or
push
vpmacssdqh
cmp
pushf
gs
pop
and
outsl
mov
inc
bound
bound
outsl
pop
pushf
movsl
jl
cmp
rol
sbb
or
dec
stos
dec
inc
jns
cltd
scas
sbb
test
je
loopne
push
mov
movsl
jne
or
ret
add
push
sbb
sub
rorl
xchg
cmp
jle
push
and
push
inc
lret
add
fldlg2
or
pusha
add
sbb
ret
mov
scas
notl
loop
sub
and
test
pop
je
inc
mov
repz
push
int
les
mov
cmp
addps
mov
cmc
popa
pop
push
out
jns
test
out
and
addr16
add
stc
and
clc
lcall
pushf
cwtl
repz
aas
jae
clts
adc
sbb
cs
imul
adc
or
sub
pop
sahf
mov
adc
shl
cwtl
dec
mov
mov
rorl
or
add
jne
jmp
aad
push
fldenv
decb
fisttpll
add
sbb
movsl
mov
cmpsl
cmp
mov
sahf
out
and
sti
into
inc
sub
jecxz
iret
mov
fldt
and
pop
add
daa
xor
stos
sbb
push
arpl
or
scas
lds
cwtl
sbb
js
fimull
nop
cmc
loopne
pop
iret
movsl
or
loopne
aas
lea
shrl
inc
xor
add
fs
mov
mov
test
arpl
or
lahf
push
out
movsb
mov
lret
lods
pop
and
sub
pop
adc
and
push
inc
inc
cmp
fildll
jmp
popa
jae
lods
jle
adc
fucomip
test
cmp
jb
jle
xor
ret
mov
loop
cs
sbb
cld
jo
das
push
lea
es
mov
mov
je
arpl
pusha
push
lods
cmpsl
mov
enter
into
adc
repnz
dec
add
pop
jo
pop
push
adc
add
movsb
and
inc
cwtl
pop
and
inc
adc
mov
push
mov
shlb
mov
repz
es
adc
push
icebp
sbb
or
adc
fadd
fs
xchg
pop
lret
data16
cmp
cmc
dec
mov
clc
inc
inc
push
jns
push
test
out
fldt
add
out
mov
push
cmpsl
push
add
popf
mov
adc
cmp
cwtl
xchg
lret
pop
xchg
sbb
jnp
cmp
addb
cli
cmpsl
push
scas
xor
test
out
push
aas
addl
imul
sbb
jo
jecxz
mov
mov
inc
adc
call
popa
std
dec
and
ljmp
stos
roll
cs
or
jns
sahf
mov
sub
sub
and
les
or
ss
and
ret
xchg
and
andl
fisttps
icebp
adcb
movsb
xor
push
cs
in
dec
stos
icebp
fs
dec
in
enter
loopne
insl
icebp
mov
mov
pop
push
ss
xchg
mov
add
xchg
jae
push
mov
jle
out
in
sbbl
loop
lods
stos
les
out
pop
pop
fcoml
lods
shll
sbb
rcrl
icebp
mov
sbbb
ret
insb
movsl
add
sbb
sub
cmp
sti
sub
fistpl
pop
mov
out
cs
adc
fimuls
mov
add
inc
dec
stos
outsl
inc
cs
pop
sbb
mov
sub
sub
sti
push
daa
and
cmp
push
dec
jns
mov
cmp
subb
mov
sub
push
ror
adcb
mov
stos
mov
test
iret
aaa
out
add
js
xchg
in
xor
insl
pop
mov
ds
add
rcrb
fsubrs
mov
push
rolb
mov
adc
push
pop
lods
xchg
psrlq
clc
jmp
mov
inc
pop
mov
mov
test
insb
dec
dec
xchg
cmp
inc
les
pop
popf
mov
push
enter
nop
je
int3
dec
push
xor
push
outsb
aam
cmp
pop
dec
mov
mov
push
pop
pop
adc
and
jecxz
scas
daa
rcll
or
lods
invd
xchg
or
loope
push
mov
jo
loopne
jmp
dec
dec
sbb
lcall
cmc
push
das
push
mov
add
sub
jg
inc
gs
fisubs
sbb
xchg
cmpsl
sbbb
mov
sub
lahf
mov
out
cmc
stos
outsb
dec
dec
fs
jnp
lock
nop
out
mov
mov
ds
jo
mov
or
jns
stos
scas
push
je
xlat
mov
cmp
mov
ja
push
outsl
cld
mov
sbb
das
jo
mov
lds
test
stos
jo
pushf
mov
mov
sbb
les
int
stc
adc
push
mov
fildl
cltd
mov
inc
call
pop
test
loopne
add
xchg
out
mov
js
icebp
add
mov
sub
arpl
jle
mov
mov
dec
aad
pusha
adc
les
scas
or
sub
add
mov
lret
xor
cli
jg
mov
push
jl
cwtl
lds
les
adc
xor
push
in
xchg
stos
pop
push
mov
dec
lret
lea
pop
dec
in
and
insl
arpl
push
mov
test
jge
loop
or
pop
stc
and
loope
adc
push
sbb
push
pop
fmul
es
xor
mov
js
push
fsubl
je
mov
ret
cmp
xor
mov
mov
inc
sub
sub
mov
dec
into
jne
aas
add
mov
into
inc
inc
xchg
sub
enter
bound
sub
sub
call
roll
lret
insl
xor
mov
cli
sbb
std
mov
loopne
lods
push
xchg
or
ss
and
lcall
pop
cld
pop
dec
mov
popf
int
cmp
xor
outsb
mov
loope
adc
stc
push
adc
mov
insl
mov
fistl
sub
dec
xchg
iret
mov
das
mov
cmp
lcall
pop
dec
push
enter
test
jecxz
sti
mov
xchg
fildll
ds
cli
cmp
pop
fnstcw
int3
pop
pop
imul
adc
int3
push
pushf
scas
clc
pop
cmpsl
into
pop
pop
in
mov
call
subl
mov
and
stos
sub
imul
fimuls
data16
mov
pop
ja
push
add
cmp
in
out
test
inc
dec
imul
ja
or
dec
sbb
or
outsl
jmp
les
mov
or
xchg
add
stc
mov
insl
mov
faddl
repnz
jg
xor
or
movsl
arpl
mov
xchg
inc
mov
jp
sub
clc
sub
pop
mov
mov
out
repnz
push
xchg
gs
cmp
mov
push
ret
xcrypt-cfb
mov
sub
lods
mov
mov
clc
mov
adc
adc
repnz
mov
cmp
cmp
pusha
test
lods
dec
in
testl
push
imul
mov
imul
inc
stos
pop
cs
adc
adc
mov
inc
mov
pop
outsb
xor
dec
inc
insb
xor
cld
sti
pop
or
inc
jnp
daa
add
loopne
clc
addr16
mov
xor
out
jbe
std
loopne
mov
popa
ja
iret
imul
mov
aas
fisubrs
sbb
in
sub
dec
jecxz
sti
repz
aaa
push
imul
or
nop
imul
mov
icebp
cmpl
and
add
xchg
ja
jg
daa
cmc
pop
fwait
std
xchg
add
test
cmp
mov
mov
xchg
or
movsb
insb
cs
cmp
pop
nop
mov
jne
pop
or
xorb
ljmp
and
imul
fbld
sub
or
pop
lcall
xor
and
add
or
je
decb
pop
adc
test
addb
dec
clc
dec
pop
das
dec
sub
sub
or
dec
popf
mov
lock
adc
les
jnp
mov
sbb
push
icebp
mov
inc
sub
lea
push
adc
sbb
enter
pop
lods
mov
popl
and
and
mov
outsl
push
imul
jbe
mov
pop
test
cmc
pop
cmp
stc
cs
cltd
in
movsb
int3
cmp
xchg
push
outsl
sbb
aam
inc
inc
aad
push
sahf
push
rclb
mov
xor
outsb
loopne
pop
push
adc
or
xlat
inc
or
lcall
mov
gs
push
sahf
mov
mov
lock
loop
sub
inc
xlat
mov
mov
mov
sbb
ss
inc
imul
xchg
mov
mov
sub
add
or
fsubrl
add
fwait
repz
fisubrl
inc
out
stos
loope
imulb
lock
xorl
stc
push
mov
sub
call
inc
cmp
pop
stos
loope
dec
andb
sub
pushf
pop
orb
mov
cld
jge
ja
pop
fiadds
cmp
add
js
in
mov
cwtl
sbb
xchg
jle
ljmp
call
dec
pop
out
adc
and
add
sub
stos
or
orb
or
push
mov
bound
ds
push
sahf
out
or
mov
ficomps
mov
das
incb
add
cld
pop
mov
gs
and
mov
popf
pop
push
add
mull
mov
in
xor
xchg
test
rcrb
mov
jmp
inc
mov
jge
mov
inc
scas
xchg
add
cmp
pop
js,pt
lret
mov
or
stos
jnp
rcrl
mov
jbe
popa
out
jns
movsb
sub
cld
out
aas
cmp
dec
loop
data16
cmpsl
jns
cmpsb
mov
or
sub
shlb
dec
mov
pop
mov
bound
cmp
lret
pop
cltd
into
pushf
jns
and
mov
bound
stos
or
rorl
and
sarl
jge
jp
aaa
mov
test
mov
xor
xor
ljmp
pop
adc
iret
or
xor
jno
xchg
mov
icebp
insl
jge
lahf
aad
ds
out
addr16
pop
push
sub
aam
jmp
sub
popa
lcall
aam
sub
push
mull
push
in
dec
daa
mov
mov
inc
cmp
cs
jbe
out
mov
inc
add
dec
or
inc
fcompl
cmp
push
adcb
insb
subl
fnsave
imul
testl
loopne
or
sbb
fdivrl
push
jge
dec
ss
cmp
int
outsb
mov
dec
adc
mov
popa
sub
jb
xchg
nop
sbb
mov
pop
and
fwait
insl
xor
fiaddl
adc
sub
or
pusha
inc
cmpsb
and
mov
xchg
xlat
inc
jnp
and
iret
fstps
cwtl
clc
daa
xchg
aad
shl
jmp
cmpb
and
repz
sahf
push
xchg
mov
loopne
and
ret
les
xchg
cmpsb
cltd
jno
jecxz
stos
jns
stos
sbb
stos
sbb
mul
pop
sub
jp
cmp
add
shlb
repz
int3
xor
sti
cmpsb
dec
aam
lret
in
shlb
inc
cmp
divb
mov
iret
mov
daa
mov
cmp
repz
in
inc
mov
xor
dec
div
lahf
push
adc
mov
xchg
pop
mov
dec
daa
insl
push
adc
int3
cmp
sbb
scas
addr16
jecxz
fadd
test
pop
out
clc
fucomp
xor
inc
sti
pop
icebp
decl
inc
push
xchg
sbb
xchg
pusha
lcall
mov
iret
adc
decb
cmpsl
dec
pushf
lods
aad
add
divb
and
jmp
movsl
mov
sbb
push
fisttps
sub
cmp
iret
xchg
push
in
iret
mov
jbe
mov
sbb
push
sub
dec
xchg
jbe
xor
inc
xchg
mov
loope
pusha
sub
scas
or
push
mov
call
sub
pop
push
or
push
mov
adc
cs
jp
sub
and
stc
notl
test
cmp
insb
inc
mov
sub
lea
fnstsw
insl
aaa
in
aaa
inc
fucomip
call
inc
jnp
sahf
insl
imul
sbb
out
pusha
mov
rcr
xlat
subb
cmp
loope
adc
enter
stos
out
fdivs
inc
jecxz
loopne
mov
fbstp
inc
push
push
xchg
or
jns
and
cmpsl
fidivl
xor
mov
out
addr16
fs
shlb
mov
xchg
pusha
lret
push
aam
mov
aam
inc
fildll
fwait
les
pushf
fmull
jae
leave
icebp
add
mov
add
imul
mov
shlb
sbb
aaa
in
jl
mov
mov
mov
xchg
movsb
mov
aad
loopne
sub
and
lods
push
aaa
sub
mov
sti
fs
arpl
push
les
add
clc
sub
aad
pop
mov
cmp
es
inc
xchg
loope
dec
loopne
mov
pop
xor
aam
imul
xlat
movsb
stos
fldenv
lock
mov
mov
dec
mov
aas
adc
nop
fcoml
jmp
inc
mov
mov
fcoml
pop
mov
pop
add
daa
and
push
lret
daa
push
pop
jle
mov
pop
or
inc
inc
push
out
insl
mov
xchg
popf
fisubl
fsubrs
inc
lds
outsl
pop
add
mov
lahf
adc
adc
shl
sbb
cld
testl
pop
pop
popf
fcmove
sub
push
add
mov
adc
dec
cmp
cmp
mov
sahf
inc
in
mov
lahf
push
lahf
mov
mov
mov
movsb
dec
int3
aas
sub
sbb
sbb
xchg
xchg
ret
xor
add
jecxz
xor
shlb
mov
movsb
test
pop
mov
adc
imul
xchg
shrb
scas
or
mov
test
mov
scas
add
mov
jnp
dec
add
cmc
pop
lahf
mov
outsb
push
xor
pushf
mov
loope
sub
or
imulb
dec
xor
test
je
push
or
lahf
movb
pop
pushf
push
and
pop
xchg
pop
mov
sbb
jns
mov
pop
ljmp
test
push
xor
mov
shlb
cli
xor
add
add
insl
ss
or
dec
ss
mov
loop
stos
mov
shr
xchg
mov
in
dec
jo
xchg
and
pop
lods
movsl
nop
pushf
pop
pusha
fwait
push
xchg
mov
fldt
in
das
jmp
frstor
cmpsb
iret
push
stc
clc
sub
inc
sub
xchg
sbb
sbb
dec
xor
jg
mov
sbb
cltd
jns
sub
leave
lods
jp
sub
fcompl
xchg
cmp
scas
inc
sub
mov
cwtl
mov
jmp
ljmp
inc
mov
out
ret
mov
and
push
jl
int
mov
inc
roll
fsubr
lods
int
call
gs
or
xor
or
pop
pop
adc
lods
mov
stos
mov
push
or
stc
and
cs
cmp
cli
xchg
roll
insb
scas
ljmp
outsl
dec
repz
fmul
mov
je
aas
pop
jno
fsubs
mov
out
mov
dec
clc
mov
or
sub
int3
fwait
ss
xchg
mov
scas
fs
pop
loopne
mov
fidivs
lret
jo
aaa
sahf
and
addr16
pop
dec
ss
shll
out
icebp
fiadds
pop
xchg
lret
pop
call
push
jmp
cs
xor
mov
mov
scas
or
lcall
cs
dec
pop
mov
in
out
adc
shl
test
lahf
out
push
push
jle
xchg
popa
cmp
mov
nop
mov
std
popf
movsb
xchg
ret
sti
movsl
imul
lea
adc
ficomps
cmp
mov
into
andb
sbb
sti
pop
outsb
sti
adc
cmpsl
cmpsl
and
push
lahf
inc
pop
shlb
mov
ljmp
pop
in
js
xchg
popf
mov
bnd
mov
call
fdivl
decl
dec
loopne
mov
mov
fwait
xchg
add
lds
pop
or
lock
fisttpl
fisttps
cmc
mov
imul
cmp
push
lods
cwtl
iret
loop
outsl
lahf
icebp
pop
les
das
ret
pop
repnz
callw
jle
call
inc
jp
mov
aam
dec
aad
push
add
cs
mov
jne
pop
mov
xchg
iret
aad
ror
insb
aad
lock
into
jns
mul
sahf
xchg
jo
mov
enter
pop
or
shlb
add
dec
xchg
sub
insb
aaa
mov
sub
sub
testl
stc
lods
out
fsts
add
xchg
mov
cmpsl
mov
sti
pop
js
and
push
cmp
icebp
das
sarb
push
sti
sbb
or
mov
pop
lcall
and
sub
ds
pop
mov
add
mov
jnp
ljmp
aaa
dec
stos
jne
negl
loopne
mov
or
ss
mov
mov
cmc
pop
jbe
xor
dec
faddl
stc
in
pop
xchg
dec
rcrl
stos
mov
dec
test
and
push
mov
hlt
lcall
shlb
mov
jbe
aaa
add
out
pop
push
ljmp
loopne
loopne
push
adc
ftst
test
lock
jle
jg
inc
dec
add
push
pop
mov
pushf
mov
fadds
scas
pop
xchg
shll
movsl
pusha
sbb
test
pushf
outsb
outsb
mov
push
xlat
xchg
and
jle
and
sub
bound
jg
sub
add
jle
jg
imul
mov
and
rorl
jecxz
mov
call
push
ja
imul
and
and
mov
push
in
negl
inc
cs
add
mov
scas
iret
mov
sub
test
out
sahf
or
sub
lahf
push
aas
clc
loope
add
nop
mov
sbb
jns
jb
mov
mov
mul
mov
pop
pop
mov
mov
inc
adc
jbe
aam
mov
hlt
and
iret
pop
out
inc
hlt
inc
ljmp
bound
pop
and
dec
movsb
cmp
test
leave
fcoml
xchg
push
addl
pop
pop
mov
out
hlt
adc
rcll
icebp
out
scas
cmp
filds
insl
xlat
jmp
inc
xchg
xchg
push
aas
lahf
lock
stos
sub
mov
dec
repnz
dec
repnz
and
add
mov
pop
mov
push
shlb
pop
or
xor
and
es
and
enter
mov
mov
fisttpll
push
jns
push
push
mov
daa
mov
adc
or
pop
and
ds
add
sbb
pop
jg
mov
mov
sbb
adcb
js
inc
sub
nop
frstpm(287
or
in
mov
daa
loopne
sbb
sbb
lret
xchg
int
lahf
sbb
les
and
aaa
and
daa
adc
xchg
icebp
daa
mov
and
jmp
in
inc
xor
icebp
dec
and
lret
lar
in
cwtl
es
popf
cwtl
into
ljmp
and
mov
ja
pop
cmp
aas
nop
sbb
mov
push
mov
movsb
pop
cs
cmpsl
lcall
dec
or
cmp
xchg
pop
insb
mov
xlat
das
stc
out
mov
stos
imul
fdivs
stos
adc
adc
in
add
lcall
or
pop
popa
sbb
xchg
mov
psubb
js
push
inc
cmp
and
leave
shll
cwtl
dec
dec
or
pusha
repz
adc
jmp
pop
dec
or
js
testl
xor
jl
add
pop
pusha
xor
push
jb
rcll
xor
cltd
cli
lods
and
mov
xchg
aas
pop
ret
arpl
jns
inc
in
mov
sub
shlb
pop
fwait
test
scas
jmp
jnp
pop
mov
fs
mov
addb
scas
mov
or
daa
or
pop
loop
mov
inc
and
mov
das
mov
pause
scas
add
sub
popa
push
or
cs
es
mov
mov
dec
loopne
mov
ss
xor
jge
pop
iret
cltd
test
dec
jge
push
js
or
inc
sub
ret
sbb
in
mov
sub
outsl
loope
and
into
dec
test
iret
sbb
lcall
fmuls
push
enter
fbld
hlt
mov
xor
cmc
lods
adc
aam
xlat
jnp
test
mov
xchg
stc
inc
arpl
jae
sbb
cli
insb
cmp
xlat
mov
xchg
loop
cld
mov
and
adc
popf
ljmp
movb
adc
lods
mov
mov
enter
loope
call
fidivrs
hlt
ljmp
movsb
outsb
jns
xor
lods
pop
fs
dec
and
mov
lcall
in
mov
mov
and
xchg
push
jno
sbb
jmp
mov
lcall
adc
aaa
sbbl
mov
fwait
insb
ja
push
adc
lds
inc
aas
add
mov
mov
mov
cld
and
iret
jno
aas
mov
addr16
mov
jmp
call
jbe
sbb
mov
and
and
je
cltd
add
pusha
xor
pop
inc
push
add
push
leave
add
cld
faddl
movl
mov
stos
shrl
jge
addb
add
dec
mov
insl
adc
inc
jo
push
xchg
sbb
dec
dec
cmp
outsl
pop
lods
pop
repz
rcr
or
mov
inc
enter
neg
ret
shl
gs
xor
cld
out
sub
es
mov
dec
mov
fucom
pop
xchg
sbb
call
fs
aaa
lods
out
sbb
lret
push
pop
xor
pop
and
andb
mov
in
dec
pushf
push
ret
into
mov
stc
bswap
add
into
adc
inc
cmpsb
xchg
jmp
enter
std
rcrl
mov
add
add
and
jno
adc
push
inc
sahf
push
xorb
in
rcrb
push
pusha
cmpsl
cmpsl
jb
inc
xor
jbe
jle
leave
out
rolb
push
push
les
pushf
outsb
aad
adc
or
iret
ror
sub
sbb
movsl
pop
pusha
xchg
adcl
and
pop
stc
int3
sub
movsb
mov
in
add
pop
pop
lock
jnp
jbe
in
dec
fxsave
lock
pop
cmpsb
rcll
pushf
pop
aaa
sbb
cld
roll
cld
xchg
jne
cs
ja
cmp
loope
pop
xor
scas
inc
fcmovb
out
clc
dec
dec
fistpll
mov
insb
insb
push
lea
roll
test
in
adc
cmp
sbb
insb
loop
cmpb
scas
mov
inc
in
sti
lods
mov
repnz
sbb
cwtl
je
xchg
mov
lock
mov
mov
enter
xchg
pop
fs
in
mov
nop
inc
jmp
arpl
add
loope
jg
lds
mov
mov
popl
dec
lds
mov
adc
shll
mov
fbld
push
imul
xor
mov
pop
adc
enter
sbb
adc
repz
ret
mull
fsubrs
cmp
gs
test
or
shrl
sub
adc
pop
mov
adc
imul
lds
push
ret
push
fwait
pushf
pop
sbb
in
repnz
bnd
hlt
xor
hlt
outsb
and
loope
insl
push
fs
dec
jbe
ja
and
pop
jecxz
insb
lds
pop
adc
mov
xor
jne
pushf
push
lret
push
push
outsl
cmp
test
iret
sarb
aas
mov
in
cmc
pop
insl
jge
pop
push
fmull
imul
adc
inc
dec
jbe
cmpsb
mov
out
fiaddl
jmp
jl
sub
std
dec
repnz
data16
pop
mov
dec
sbb
jns
in
mov
aam
jg
adc
push
cmp
dec
mov
push
mov
push
jnp
scas
sbb
push
add
push
add
mov
leave
push
push
mov
in
mov
inc
push
repz
fwait
lcall
cmp
adc
mov
sbb
scas
int3
mov
and
or
pop
jo
inc
pop
in
push
pop
rcll
repz
inc
push
ret
or
and
into
jne
shrl
mov
dec
and
lret
mov
outsl
mov
fildl
lret
sub
fistps
in
daa
pop
xchg
rolb
sbb
add
inc
iret
sahf
dec
push
pushl
lahf
and
cwtl
xchg
adc
into
sahf
jne
jnp
rcrb
mov
push
nop
jl
cmc
aas
sbb
xlat
das
pop
test
sub
lds
lods
jp
push
test
daa
test
mov
orl
in
aas
xchg
sahf
jns
loopne
movsb
mov
add
mov
push
lahf
lods
dec
push
or
pop
or
sub
and
xchg
sti
cmp
lret
shrl
mov
pop
jg
cmp
mov
push
jae
and
xchg
xchg
cltd
mov
push
mov
test
add
divb
daa
xor
push
int3
fwait
lods
lcall
fdivrl
lret
in
test
jle
pop
out
sbb
mov
sbb
jb
lahf
or
adc
adc
mov
mov
fidivl
push
idivl
daa
mov
stos
outsb
int3
lea
test
rorb
imull
or
inc
lods
adc
int
out
jne
fs
sbb
rcr
stos
insb
or
test
inc
mov
xor
jecxz
aad
stos
in
jno
loope
mov
dec
push
lea
push
repz
out
xchg
sub
jp
nop
popa
ljmp
or
insl
cmp
sbb
adc
out
dec
sub
push
dec
adc
xchg
rorb
sbb
andb
jge
inc
xlat
sbb
or
pop
pop
xchg
add
cld
clc
fwait
push
addl
mov
xor
add
add
xor
andb
push
mov
mov
mov
pushf
sub
pop
call
push
xor
dec
push
repnz
out
into
orb
out
mov
mov
xchg
xor
or
push
pusha
aaa
ss
lcall
and
push
xchg
test
cli
insb
insl
mov
jb
hlt
xor
fnsave
dec
jge
cmpsb
call
jge
and
sbb
mov
sti
xchg
orb
push
jne
faddl
mov
mov
xor
sahf
sbb
jecxz
loope
xchg
push
xchg
jnp
adc
pop
andl
lods
pop
xchg
pop
cli
cs
lods
imul
xor
or
pushf
inc
cmp
add
fsubrp
out
sbb
xlat
mov
pop
mov
add
add
mov
shlb
fsubr
xor
inc
cmp
insl
ja
push
mov
std
adc
sarb
ljmp
sbb
jnp
jno
and
in
das
addr16
xchg
movsb
add
adc
cmp
in
cltd
pop
stc
dec
insb
push
push
jb
in
adc
mov
pop
mov
inc
push
mov
cld
xor
xor
int
jg
lahf
push
test
inc
adc
push
imul
pop
cltd
push
inc
mov
int3
mov
data16
xchg
ss
push
cli
dec
mull
ret
sbb
lcall
sub
mov
and
loopne
iret
fadds
arpl
push
fistl
push
xchg
sbb
je
dec
xchg
lea
movsl
inc
xlat
sub
sub
es
sarb
pop
or
in
mov
dec
xchg
or
jae
insl
mov
stc
les
std
pop
in
loopne
mov
pop
push
leave
adc
cmpsb
push
sbb
sbb
sbb
xchg
push
out
jb
es
ja
dec
cmp
jbe
loop
rclb
mov
and
ret
mov
jp
scas
sbb
cld
fimull
mov
out
and
or
push
aad
outsl
inc
lods
imul
adc
add
in
dec
mov
cwtl
xchg
cmp
ret
je
ror
cmc
cmc
adc
orb
sub
and
or
es
or
cltd
aas
push
mov
fisttpll
test
insl
add
xchg
stos
or
jl
cwtl
mov
loop
out
mov
xchg
mov
clc
cltd
js
sbbl
jmp
cwtl
shlb
inc
ja
sbb
pop
gs
das
mov
sub
xchg
mov
xor
sahf
dec
jge
push
clc
mov
repnz
jo
arpl
fs
mov
push
and
and
scas
mov
sbb
rcrl
adc
sarl
xor
pop
sub
fnstsw
ljmp
outsb
adc
and
ucomiss
data16
cmp
xchg
stos
popf
movsl
aam
or
dec
int
fwait
pushf
xchg
mov
mov
add
inc
aas
int
rcrb
call
icebp
ljmp
call
popf
dec
adc
mov
inc
std
pop
sub
ja
pop
jp
xchg
xor
in
dec
or
pop
fidivrs
jp
add
mov
sbb
xor
or
jle
push
jp
addr16
movsl
loopne
cmc
and
dec
in
cmpsl
push
mov
and
push
add
shll
mov
xchg
mov
dec
decb
or
cmp
pop
daa
int
or
xor
sub
and
or
fisttpl
aaa
jp
popa
js
sbb
jecxz
xchg
push
aas
jo
bound
cmp
rcl
lock
popf
test
xchg
pop
ss
sarb
and
enter
popa
push
adc
in
negl
orl
iret
mov
pop
or
jmp
add
jmp
dec
mov
jo
scas
imul
outsl
xor
stos
mov
es
jmp
fstpl
ljmp
jmp
jge
pop
rclb
lret
and
mov
mov
xchg
pop
fdivrl
jne
fcoml
stc
mov
popa
call
je
cmp
mov
jge
pop
or
incb
aam
cli
testl
mov
loopne
cld
cmp
lock
ret
or
das
jl
cmpsb
mov
aam
jge
pop
jae
out
lods
insb
jnp
pop
dec
mov
dec
test
jecxz
sub
dec
scas
xor
int3
cmpb
or
xor
cmc
rclb
inc
cmp
test
popf
popf
test
ljmp
sub
cltd
mov
add
leave
xchg
add
dec
xchg
xchg
lods
add
rcr
sbb
loopne
ficoml
ds
fbld
movsb
xlat
lahf
clc
lods
aas
cmpsl
loopne
or
pop
popl
and
int3
inc
jno
add
xchg
shll
ret
pop
or
cmp
popa
rcrl
aad
xor
inc
test
jg
push
je
add
push
icebp
fisubs
int3
cld
aad
lds
pop
and
mov
fdivrp
xorl
inc
jb
mov
jno
push
dec
jl
enter
out
mov
or
mov
sbbb
lahf
xchg
mov
or
lods
insl
adc
les
loop
sub
mov
lret
scas
and
xchg
movsb
lret
add
inc
jl
jo
mov
jge
xor
xor
push
xor
test
xorb
ss
jge
test
adc
mov
fcmovb
ds
int
enter
sub
loopne
in
iret
dec
clc
push
out
lahf
clc
xor
ja
mov
lret
lcall
stos
mov
outsb
push
fdivs
cltd
push
sbb
jp
add
fwait
enter
fisubrl
dec
inc
fcoml
mov
sbb
div
jg
loopne
or
xchg
fmull
cmp
popf
jp
call
cmp
fdivrl
cmpsb
mov
aad
and
aaa
inc
pop
jle
mov
mov
repnz
movsb
mov
out
push
mov
leave
sahf
xor
push
add
in
les
sbb
xchg
icebp
dec
es
add
add
adc
cli
pop
and
push
loopne
roll
dec
jnp
popf
jbe
rorl
add
jnp
dec
movsb
cs
mov
daa
push
push
imul
push
push
orl
push
das
xchg
sub
in
lret
lret
jbe
roll
loope
es
movsb
push
xchg
aas
enter
inc
in
sub
mov
dec
dec
lods
jmp
pop
daa
pop
clc
inc
add
bound
mov
popf
xor
or
je
leave
les
imul
dec
sbb
sub
inc
or
and
addr16
loope
mov
cmpsl
sahf
adc
pop
insb
push
in
cmp
sbb
inc
lahf
cld
jmp
repz
sbb
fdivs
jae
jns
repz
xchg
xor
aad
cmp
cli
shlb
ficoms
cmp
or
sahf
xorb
lds
xchg
ja
or
xchg
add
imul
sub
mov
adc
iret
xor
xchg
out
lods
pop
test
loopne
cli
xchg
inc
inc
mov
dec
adc
pop
dec
imul
jmp
insb
add
push
push
fadds
xorb
push
xor
std
or
push
shll
jecxz
mov
adc
sub
inc
mov
lods
int3
push
pusha
sbb
jecxz
sub
in
jg
cmpl
push
lret
adc
mov
fcomi
scas
jo
or
sbbb
test
test
gs
test
xlat
fildl
mov
jbe
adc
jnp
rcrl
push
ret
enter
ret
mov
test
popf
jb
mov
sub
rol
int
lret
lcall
jge
cmp
stc
sti
xchg
sub
addl
pusha
cmp
pop
pop
fists
loopne
adc
or
int
xor
ljmp
mov
je
mov
rclb
ss
cld
adc
jge
ja
outsb
mov
pop
dec
cs
mov
call
fmuls
sub
mov
mov
sbb
add
dec
repnz
mov
jl
xor
xor
or
cmp
dec
insb
add
in
in
lret
out
data16
mov
jl
test
in
jecxz
push
mov
add
dec
cltd
xchg
cli
inc
sti
mov
pop
loop
pushf
and
das
or
push
mov
mov
mov
sbb
pop
sub
test
shlb
shll
pushw
jge
adcb
enter
push
test
cmp
or
arpl
fists
dec
pop
xchg
notl
mov
push
dec
sub
test
push
ljmp
faddl
les
mov
sbb
pusha
test
dec
test
sbb
inc
loope
pop
pop
popa
lret
sahf
mov
dec
ljmp
inc
arpl
movsb
out
push
cmp
loop
jo
imul
push
cmp
or
xor
sbb
loope
ja
sahf
push
cmc
push
jg
dec
out
mov
movsb
ret
cmp
xchg
mov
xor
pop
mov
out
or
mov
fistl
adc
faddl
mov
stos
lcall
cmp
cli
sbb
cmpsl
xor
hlt
xorb
fcmovnbe
aaa
out
sub
mov
call
js
out
inc
push
stc
lahf
mov
adc
loopne
xor
sub
shlb
push
scas
jecxz
and
jle
push
in
outsl
pop
mov
xchg
xlat
push
lds
test
int3
pop
lahf
scas
lods
leave
sbb
add
push
add
and
popa
out
cmp
repnz
cmp
lret
push
lock
pop
or
inc
xchg
push
pop
inc
push
adc
data16
mov
sbb
push
jecxz
faddl
sti
cli
je
or
fidivs
in
inc
inc
out
jle
out
jle
pop
jecxz
mov
jae
pop
dec
dec
cltd
ds
popa
fcoms
pop
das
jecxz
push
add
mov
sbb
adc
jge
pop
aas
lds
les
icebp
addb
cmp
jb
push
fisubrs
xchg
xorl
pop
jg
pop
push
popa
int3
sub
inc
mov
mov
fwait
int
push
loop
xchg
pushf
in
sahf
inc
in
int3
stc
stc
sbb
ss
iret
rcrl
stos
push
pushf
push
js
subl
mov
daa
inc
cli
xor
inc
sahf
inc
sbb
xchg
cmp
and
mov
add
push
aaa
sbb
in
sbb
ljmp
inc
and
clc
stos
loop
bsr
movsl
in
xchg
dec
pop
int
insl
push
mov
cwtl
xchg
xchg
xorl
cwtl
pop
stos
dec
out
xor
cmp
lcall
fs
pop
leave
adc
sbb
loopne
mov
shl
or
or
ljmp
sbb
and
mov
push
xchg
lock
incl
iret
pop
jo
mov
mov
mov
int
enter
int
aas
pop
testb
rclb
push
int3
dec
cmpsl
ret
bound
out
xchg
movsl
aad
fimull
cmp
ret
and
mov
mov
or
sbb
popa
push
xlat
xchg
jns
cwtl
or
in
sbb
inc
adc
add
stos
fwait
scas
add
fisubl
cmp
stos
das
jmp
nop
mov
fimuls
pushf
push
enter
sbb
ljmp
iret
and
add
scas
or
mov
call
andb
mov
dec
movsl
jae
fnstenv
jae
mov
jne
daa
pop
lahf
das
movsl
sbb
test
pusha
inc
imul
in
push
mov
xchg
mov
subl
pushf
lods
mov
push
or
or
lret
jmp
mov
xchg
in
mov
cltd
push
out
mov
cmp
push
ja
movsb
add
inc
in
add
dec
leave
add
xor
sub
cmp
adc
mov
stos
push
mov
xchg
imull
inc
int3
testb
es
cli
push
int3
inc
pop
add
in
aam
xchg
insb
rcr
insl
mov
mov
mov
scas
ret
mov
xchg
xchg
mov
movsb
test
imul
sub
xlat
notb
sbb
xor
push
xchg
jnp
sub
into
xor
repnz
xchg
cmpb
test
insl
js
pushf
pop
xchg
in
insb
xor
push
mov
int
sub
mov
nop
cmpl
pop
icebp
and
xchg
arpl
popa
call
imul
mov
mov
test
add
xor
addr16
lahf
jae
inc
mov
shlb
mov
pop
mov
movsb
insb
jg
ret
pop
mov
ds
xchg
xor
cs
cmp
lods
iret
in
fs
jp
les
jbe
mov
aas
enter
add
je
xchg
xor
mov
fldl
dec
jle
bound
lret
adc
rdpmc
add
ret
xor
sbb
daa
and
xor
jns
movsb
cli
into
push
mov
xor
rorb
scas
mov
mov
mov
sbb
push
dec
xor
fsubrl
mov
in
adc
jg
adc
mov
cmc
adc
mov
outsl
or
outsb
lds
push
inc
and
les
or
sub
or
sbb
in
fs
jg
nop
iret
imul
pop
fistpl
fidivrl
insb
mov
ret
xor
jecxz
mov
cmp
mov
lods
or
repnz
inc
sub
xor
into
cs
cmp
mov
lahf
in
sti
jns
cmpsb
bound
fdivl
adc
sahf
sbb
inc
jmp
adc
and
imul
aas
pop
cmp
lock
insb
ja
mov
les
bound
fiadds
jbe
dec
fildll
shl
inc
nop
xchg
and
mov
ds
mov
xor
dec
push
ret
hlt
sbb
js
jns
cmp
bound
and
add
push
cmp
mov
cs
jecxz
movsb
xlat
sbb
fs
enter
out
push
shlb
mov
jns
xchg
in
push
fldt
mov
mov
pop
aam
sub
add
cmpsb
jle
push
jb
sbb
mov
ljmp
mov
dec
xchg
xor
mov
mov
in
cli
ja,pn
adc
movsb
cmp
jl
fistpll
ljmp
mov
mov
push
cwtl
rol
inc
dec
mov
adc
addr16
jne
out
nop
push
dec
jno
dec
dec
add
cmp
add
ret
xchg
xor
mov
lret
jmp
push
shl
arpl
jp
fnstenv
push
add
lods
mov
cmp
mov
js
mov
push
jg
popf
out
in
addr16
sub
rcrl
cmp
stc
and
arpl
jge
and
gs
fidivs
in
inc
jo
xchg
ret
cmc
mov
pop
aaa
mov
inc
sbb
sub
pop
adc
inc
lahf
pop
sbb
sarb
push
enter
test
adc
imul
xchg
aaa
sbbb
imul
xchg
stos
data16
arpl
dec
add
sub
mov
int3
cmp
sbb
cmp
add
cmp
lret
ja
sbb
cmp
cwtl
adc
test
loopne
pop
mov
mov
pop
cwtl
test
test
movsl
mov
xchg
out
sbb
nop
imull
test
or
out
add
pop
je
or
pop
adc
pop
fbstp
cmp
aaa
jne
gs
out
cs
imul
jg
dec
add
rcrl
jo
xchg
cmp
push
loope
jg
fwait
lock
jo
pop
jg
pop
xlat
mov
pushl
mov
cmp
push
mov
or
fst
std
pop
xor
mov
jle
mov
xor
push
mov
sahf
lds
lods
mov
cmp
ficoms
clc
push
jmp
mov
push
push
add
lcall
lcall
aaa
popa
xor
lock
push
stos
inc
sbb
pusha
je
jae
mov
loope
les
cmp
jl
sub
adc
aaa
pop
and
inc
in
mov
ret
test
add
aad
clc
aad
fisubrs
cmovne
jns
repnz
sub
cmp
int3
in
stc
mov
cmp
lahf
int
inc
pushf
lods
lods
sbb
rcl
enter
mov
std
inc
inc
loope
sub
das
into
in
mov
je
jmp
sub
xor
dec
pusha
sahf
push
cmp
pop
divps
pop
mov
cld
test
out
cmp
daa
adc
in
ret
inc
xchg
icebp
lahf
cltd
or
dec
xchg
dec
adc
cmp
jecxz
or
sarb
lcall
in
or
daa
pop
mov
mov
aad
push
sub
loopne
pop
fistpll
cmovb
push
pop
push
lret
out
lock
push
mov
popf
xchg
mov
or
movzwl
incl
push
je
jno
cmc
fwait
negb
sbb
and
movsb
mov
mov
inc
mov
jbe
rclb
leave
xchg
jl
stos
fisubrl
outsl
ret
mov
push
push
aam
scas
add
daa
xorl
xchg
cld
movsb
xchg
lods
xor
test
scas
mov
das
cmp
iret
mov
out
xchg
scas
ds
movsl
bound
sbb
or
aaa
roll
sahf
cmc
rolb
mov
mov
subl
outsl
dec
xor
mov
xchg
fcmovbe
lea
frstor
push
loopne
push
into
sbb
push
ret
jecxz
notl
jmp
mov
sub
xchg
scas
test
or
lock
aas
xor
ds
test
mov
popa
dec
daa
dec
cmp
jns
dec
es
hlt
jle
xor
sub
jb
cmp
cmp
sbb
jmp
ret
mov
lods
or
inc
xchg
sub
xchg
mov
icebp
lret
mov
repnz
add
push
inc
cmp
push
dec
stos
mov
push
pop
movsl
icebp
rorl
dec
pop
xor
cmpsb
pop
sub
pop
imul
xchg
and
lds
stos
mov
inc
mov
jl
ffree
lret
mov
xchg
imul
fs
addr16
fisttpl
xchg
mov
in
jecxz
leave
add
xchg
mov
pop
add
in
aas
mov
push
push
cmp
in
or
mov
pop
repnz
cltd
add
insl
add
pushf
mov
cmp
lock
fs
mov
cld
fstpt
jmp
and
js
sti
mov
or
lods
fwait
xor
dec
mov
lds
stos
outsb
mov
popa
mov
push
pushf
clc
mov
or
mov
loope
xchg
push
push
into
sbb
mov
add
push
mov
mov
cmc
sbb
push
pop
jle
mov
call
lods
xor
pop
aad
sti
js
cltd
and
add
cli
repnz
sub
sub
and
add
jmp
dec
inc
mov
adc
int3
mov
cmp
pop
daa
ss
adc
push
cmp
dec
ret
mov
xor
inc
fisubrs
jo
sub
mov
sbb
and
push
xchg
mov
lds
mov
pusha
xchg
adc
lea
xor
enter
stos
imul
andb
hlt
jnp
dec
mov
xchg
lds
cmp
jmp
push
mov
push
xor
out
cwtl
insb
xchg
loopne
ss
ret
out
jle
mov
sbb
mov
ds
call
jl
cmp
mov
lock
sbb
add
adc
repz
mov
pop
lret
rolb
mov
sbb
dec
sar
test
orl
add
bound
aam
fsubr
add
mov
stos
movsb
push
sub
dec
fwait
mov
dec
arpl
or
jno
inc
add
jmp
fldl
push
bound
mov
ret
repz
cwtl
int3
sysenter
xchg
jnp
iret
jle
jmp
repz
and
dec
std
pop
mov
push
inc
insb
pusha
jno
fs
leave
cmp
xchg
pop
and
add
mov
mov
and
pop
push
iret
jo
incl
or
sti
subb
push
push
mov
or
enter
repnz
dec
in
or
pop
out
pop
fnstenv
and
mov
push
or
or
mov
push
sbb
cld
mov
sti
mov
iret
ret
iret
divb
out
sahf
rolb
pushf
sahf
inc
sbb
pushf
push
lcall
mov
out
xchg
ret
mov
mov
sub
adc
loope
imul
inc
fiadds
sarl
sub
dec
test
inc
cs
and
dec
pop
push
and
and
mov
adc
add
lods
cs
jbe
ds
test
std
mov
bnd
gs
lea
inc
bound
ja
subl
pop
mov
cmpsl
jb
roll
mov
adc
or
aam
adc
cmp
popf
mov
ljmp
stos
add
loopne
jae
mov
xchg
sahf
cmp
cmp
xor
inc
mov
ret
repz
data16
repnz
cmp
pop
jl
in
ds
flds
stos
filds
add
js
push
jo
inc
or
std
sub
pop
popf
syscall
dec
pop
stos
pop
mov
daa
ljmp
sub
mov
jbe
clc
call
xchg
add
push
adc
std
pop
data16
cmp
xor
pop
pop
pop
adc
push
imul
das
xor
or
lds
push
mov
sti
xacquire
sub
sbb
not
push
pop
mov
dec
adc
xor
adc
sbb
nop
pop
test
fstpl
subl
scas
or
or
loop
ss
mov
bound
xlat
pop
pop
movsl
push
mov
pop
jb
mov
js
adc
pop
es
sub
aaa
arpl
pop
and
xchg
xchg
pop
outsl
sbb
jecxz
and
jne
pop
out
pop
jmp
sar
lock
mov
push
cmp
ret
hlt
in
dec
fwait
inc
mov
jns
sbb
lock
lds
fimuls
mov
xchg
outsb
cmp
push
and
pushf
dec
and
in
iret
stos
cli
dec
xchg
lods
dec
data16
mov
xchg
sbb
call
arpl
daa
pushf
cmpsl
into
xchg
bnd
adc
repnz
ret
xor
fnsave
mov
xor
xchg
popf
pusha
xlat
fsubr
dec
js
adc
dec
sub
adc
jns
xchg
jnp
push
xlat
or
ja
outsl
jae
sbb
push
jne
cmp
mov
cmp
pop
sti
rorb
pop
and
loopne
pop
jno
mov
sahf
add
rcrb
sub
fucomi
sub
jle
lds
adc
fidivl
insl
scas
pop
jge
push
stos
sbb
loope
pop
mov
xchg
repz
inc
stos
sbb
ss
inc
sub
aam
scas
pop
adc
xor
xchg
and
iret
fistpl
xor
iret
xchg
xchg
xor
imul
xchg
adc
push
ja
test
mov
stos
les
push
subl
mov
jno
and
sbb
or
pop
mov
xor
mov
ds
pop
in
insb
addl
mov
inc
shlb
jo
pop
mov
mov
jle
lock
rclb
ljmp
fsubrs
sub
cli
cmp
dec
stos
mov
mov
cmp
mov
mov
addr16
pop
fisttps
ficoml
push
cmpsb
jo
je
iret
push
iret
inc
xor
mov
jle
mov
shll
data16
aad
daa
sub
test
imul
adc
push
dec
xchg
aas
js
push
push
inc
pop
out
lods
enter
xor
lds
mov
mov
dec
or
fwait
dec
loop
or
divb
insl
dec
cmp
fdivr
int
and
cli
imul
in
jmp
rcll
lods
sbb
inc
push
mov
mov
add
xchg
xor
pop
pop
cmpsl
cmpb
xchg
jmp
inc
jnp
push
mov
sub
xor
outsb
ret
jge
lret
cwtl
scas
icebp
leave
adc
ds
mov
or
mov
outsb
cs
out
js
add
mov
cmpsl
cmc
sub
push
cmp
cmp
nop
fs
or
push
dec
dec
outsl
addl
xor
pop
jge
aam
dec
push
dec
and
stc
pop
imul
and
sbb
out
mov
mov
pushf
fistps
xor
sub
mov
xchg
sbb
popa
mov
jae
sbb
cmp
push
gs
push
cmp
push
int3
int3
les
ret
sbb
cmp
push
clc
sub
mov
mov
daa
es
sbb
sbb
js
jae
mov
imul
and
adc
xor
sbb
test
and
bnd
or
loopne
mov
cmpsl
mov
mov
daa
or
adc
dec
sub
and
imul
ret
jecxz
or
bound
das
cld
js
lock
xor
rolb
mov
out
cld
push
repnz
addr16
push
jl
fcomps
daa
insb
cmc
push
out
inc
rcrl
add
mov
mov
iret
and
lds
push
xchg
lods
mov
push
lret
bswap
adc
inc
push
scas
lahf
popa
jne
and
adc
js
xchg
cmp
rorl
cmc
popa
dec
cmp
cli
das
mulb
les
and
mov
mov
loopne
in
mov
jno
cwtl
testl
rolb
imul
mov
cld
pusha
out
daa
fsubr
mov
scas
xchg
aaa
or
or
test
mov
add
mov
push
xchg
mov
or
into
lret
leave
sti
mov
mov
jne
adc
adc
movsb
or
es
incl
movsb
incb
sub
mov
pop
push
mov
mov
xchg
call
cmc
dec
notb
aas
push
test
or
cli
push
adc
rorl
and
pusha
push
and
sbb
adc
mov
aam
inc
rolb
call
jge
inc
sarb
scas
adc
push
into
pop
pop
sbb
sub
es
xchg
push
adc
imul
mov
leave
jae
sahf
movsl
iret
push
cmpsl
mov
insb
sbb
int3
adc
sar
sbbb
es
mov
jl
scas
sub
fsts
mov
inc
mov
sub
xor
xchg
mov
popf
fcmovb
js
sub
adc
pop
inc
out
stos
sub
dec
xlat
dec
inc
inc
ja
add
call
adc
bound
mov
daa
mov
and
jnp
xlat
pop
mov
adc
pop
cmp
mov
notb
push
test
add
sahf
xchg
pop
pop
sahf
clc
arpl
sarb
sub
pusha
and
out
icebp
imul
shr
movsb
jl
pop
scas
ss
adc
decb
adc
clc
jmp
enter
inc
push
bound
mov
pusha
insb
lock
cmp
cmc
mov
out
dec
dec
dec
adc
cs
jmp
cli
xlat
xor
push
jns
int3
insb
and
in
insl
outsl
mov
pop
mov
fwait
push
and
or
pop
pop
xchg
imul
add
or
sub
stos
sbb
out
mov
xchg
sub
sti
jmp
call
xchg
sub
lods
pop
lea
cmp
jno
loopne
mov
int
aad
cmp
roll
jmp
dec
jg
pop
dec
xchg
or
mov
je
add
jp
fisttpl
and
push
cltd
stos
inc
or
push
not
inc
sbb
inc
sub
pop
ja
cmpsl
sbb
scas
test
sbb
xor
push
xchg
cmp
and
jecxz
dec
jns
mov
mov
sbb
pop
jg
ret
mov
lds
or
push
push
mov
dec
fstps
setae
in
xchg
xchg
and
pop
out
xchg
push
int3
cld
xchg
jg
mov
adc
mov
scas
std
decb
mov
cs
and
jecxz
cmp
adcb
imul
xchg
dec
pop
push
roll
insl
sub
aad
jg
scas
movsb
jb
inc
xchg
jmp
fidivrs
loope
mov
push
shlb
cmp
pop
repnz
mov
loop
lcall
cmp
pop
mov
movsb
clc
insl
jmp
xlat
repnz
sbb
inc
pop
pop
sbb
push
das
inc
inc
jns
bound
or
call
add
add
or
aad
stc
jbe
mov
sahf
push
dec
jge
push
fnop
or
fldt
jge
gs
rcll
pop
jns
outsl
out
in
fcoml
outsb
imul
xchg
stos
insl
enter
pop
stos
dec
inc
into
adc
aaa
push
sahf
scas
pushf
and
push
lock
sbb
stos
adc
and
arpl
outsb
mov
lcall
mov
jne
ret
test
adc
jmp
mov
dec
inc
mulb
or
inc
sub
xchg
rorl
jle
std
dec
daa
push
cmp
mov
or
movsl
pop
xchg
inc
dec
dec
cmp
sub
push
ja
add
daa
pop
pop
je
xchg
imul
mov
xor
jne
in
icebp
dec
jg
or
loop
aas
mov
in
lret
out
cmpsl
test
sub
hlt
mov
negl
bound
aad
ret
adc
test
sbb
mov
std
inc
mov
push
repz
mov
aaa
sti
jecxz
das
pop
repnz
inc
fnstsw
mov
sub
push
insl
int3
in
das
or
lea
jp
push
or
stos
loope
scas
in
and
fsubrl
and
cmp
es
add
cmpsl
dec
mov
cmp
mov
verr
xor
imul
dec
addr16
out
jge,pn
push
sbb
add
lea
mov
int
push
ja
push
ss
sub
mov
pop
pop
out
enter
rorb
pop
push
test
sub
mov
cmp
sarb
pop
out
jno
out
xor
scas
popa
push
aas
mov
or
xlat
test
jmp
pop
int3
pusha
mov
dec
das
into
xor
scas
clc
pushf
xlat
cmp
dec
mov
data16
jnp
ficompl
jb
sub
dec
rolb
fisttpl
fstl
xchg
pop
xchg
xchg
sbb
cmp
imul
iret
xlat
cmpsb
lea
rorb
xor
cmpsl
lret
daa
ljmp
inc
js
inc
into
cli
inc
lea
sub
xor
ret
jae
fwait
mov
ficoml
mov
mov
add
jl
push
lock
xor
dec
inc
push
push
sub
jb
mov
addb
mov
inc
mov
outsl
jmp
les
mov
jp
data16
roll
enter
jmp
es
inc
out
mov
mov
lea
test
pop
lods
dec
xor
inc
dec
mov
or
cmp
jle
loop
into
xor
pop
push
cmp
imul
cmpsb
push
cmpl
imul
and
mov
ret
lods
in
lcall
jg
push
mov
lea
xor
pop
add
sti
jle
repz
add
neg
lods
pop
ja
les
mov
cwtl
pop
enter
mov
enter
das
jmp
sahf
add
mov
imul
inc
mov
repnz
test
ds
add
movsl
jae
mov
fwait
or
fs
push
mov
les
mov
mov
xchg
adc
iret
sbb
addr16
es
add
or
jb
test
cwtl
jne
scas
icebp
dec
adc
movsb
leave
ljmp
xchg
add
fdivrs
lret
in
aas
sub
clc
or
out
push
rorb
sbb
cmp
incl
in
and
fucom
xor
push
lea
push
je
cmp
sti
xor
in
mov
jne
sub
in
inc
inc
jns
jb
adc
mov
pop
cmp
xchg
inc
cmp
dec
sub
xor
dec
push
xor
jg
xchg
pop
mov
lret
and
pop
lcall
mov
sar
lods
or
sub
pop
adc
flds
aaa
cmc
sbb
hlt
xchg
xor
mov
jle
fwait
mov
mov
adc
mov
push
push
push
mov
inc
adc
out
lods
push
cmpsb
inc
sbb
add
in
mov
mov
add
mov
stos
pop
xlat
adc
jmp
push
cmpsl
cs
rcrl
or
fwait
mov
dec
dec
sbb
out
sub
sbb
sub
daa
je
insb
mov
mov
dec
inc
push
push
jl
movsl
mov
cs
mov
and
nop
jne
or
adc
pop
pop
mov
aas
lea
stos
mov
add
shlb
push
repnz
popa
xchg
and
xor
sbb
xchg
pop
dec
inc
loope
icebp
inc
dec
cld
adc
cmp
jmp
inc
mov
shlb
jmp
add
fs
lahf
push
pop
push
cmp
or
inc
scas
sub
f2xm1
clc
sbb
sbb
fucomp
adc
fnsetpm(287
lret
pop
add
or
iret
push
dec
lods
loope
in
test
xchg
cld
mov
test
mov
push
scas
popa
adc
jns
loopne
sub
or
mov
xchg
xchg
loope
jmp
pop
into
xor
xor
mov
mov
outsb
cmp
push
loopne
cli
mov
movsb
and
cmpsb
mov
ret
add
mov
sbb
into
jmp
sub
push
test
icebp
xor
rolb
dec
out
enter
testl
adc
fildl
mov
jge
clc
ret
push
dec
mov
pusha
cmpsl
mov
ret
mov
aam
pop
mov
nop
xor
fistpl
push
jl
add
jg
imul
add
gs
sub
and
mov
jae
mov
test
lock
sub
push
pushf
aam
aas
push
xlat
add
cmc
push
daa
stos
push
jge
push
fnstenv
mov
test
out
bound
jle
mov
dec
jl
pop
cs
and
push
int
or
pushf
mov
es
repnz
pop
add
insb
xchg
lret
mov
popf
cmpsb
cmp
test
stc
lcall
clc
int3
dec
push
pushf
sub
ret
push
mov
push
cs
sub
adc
add
out
int3
xchg
ljmp
out
dec
mov
inc
fwait
pop
clc
adc
dec
loop
sub
adc
or
jl
mov
dec
shl
scas
push
aas
std
lock
gs
out
insl
xchg
cmpl
lods
pop
and
loop
mov
call
rcl
sbb
fwait
sti
dec
push
rcrl
pop
mov
je
cmp
call
push
or
inc
push
sbb
cli
pop
mov
and
mov
xor
xor
sbb
mov
sbbb
pop
sbb
mov
ss
ss
inc
loop
aad
cmpl
shlb
push
sahf
add
addr16
push
jbe
std
repnz
mov
or
jnp
cmpsb
std
test
out
test
stc
rolb
or
outsb
xor
dec
je
mov
mov
mov
push
xorb
lods
sbb
leave
pop
ss
mov
nop
mov
jo
or
gs
add
sub
repnz
sbb
scas
outsb
jle
sbb
imul
or
push
das
cs
aaa
sub
leave
jmp
loopne
test
xchg
mov
mov
je
inc
std
stos
fs
sbb
fucomip
xor
mov
test
mov
shlb
jae
ret
push
xor
out
xor
add
push
idiv
sub
pushw
aam
pop
or
mov
inc
cmc
in
push
xchg
mov
push
jl
xor
dec
out
cmp
pop
les
stc
dec
les
ljmp
xchg
ret
data16
cmp
add
sbb
repnz
sub
in
dec
pop
sahf
orl
lock
shll
xor
xor
push
ret
js
inc
imul
sub
mov
movsb
add
sbb
or
iret
mov
repnz
mov
mov
inc
addr16
scas
jecxz
mov
fbld
mov
xchg
mov
xchg
xchg
jecxz
push
ret
pop
sbb
push
negb
or
inc
adc
sbb
aad
xor
nop
push
jae
es
loope
mulb
sub
mov
mov
sbb
clc
adc
shrl
or
ds
imul
sub
cmpsl
fldenv
pusha
cmp
cwtl
gs
jbe
pop
pop
in
inc
and
aam
dec
icebp
arpl
mov
in
dec
jns
dec
sub
aaa
inc
cmp
push
xchg
in
inc
or
bound
fs
pop
movsl
mov
pushf
ja
cmp
pop
notl
sub
dec
add
jb
shlb
inc
sub
sub
hlt
icebp
das
xor
or
mov
aaa
sub
add
je
into
repnz
lea
adcl
lods
adc
cltd
mov
cmp
shll
pop
incb
aaa
jl
adc
insb
xor
insb
push
dec
movsb
mov
xchg
jmp
dec
lret
add
imul
push
or
das
pop
dec
cmpsb
push
ja
and
in
sbb
loopne
subl
dec
pop
mov
xor
or
fs
shrl
stos
push
ds
popf
test
daa
scas
add
mov
add
lahf
lret
icebp
test
lock
mov
mov
mov
pop
pop
pop
jg
push
jmp
in
div
ljmp
imulb
mov
cmp
adc
cltd
mov
fidivrs
outsb
pushf
push
or
mov
and
testb
shlb
xchg
push
and
out
jbe
dec
pop
std
sbb
adc
in
mov
xchg
mov
mov
bound
rcrb
das
push
inc
popa
jge
jnp
and
mov
pop
mov
je
fnstsw
les
das
sub
aas
ret
jle
lret
ss
jmp
lock
jp
pop
or
cmp
add
les
les
adc
dec
or
mov
mov
jp
jg
xor
xor
rorb
push
jbe
outsl
adc
clc
addr16
out
movsb
xchg
push
sbb
clc
iret
pop
jno
daa
and
lahf
adc
mov
test
in
xor
adc
in
cmp
mov
shlb
or
mov
mov
aam
fucom
inc
dec
lea
insl
push
int3
test
test
cmp
insb
loope
sub
fwait
stos
push
pop
lret
cli
pop
imul
mov
pop
add
inc
pop
hlt
cmpsb
lret
jb
sub
and
xlat
testb
sahf
mov
inc
add
inc
aaa
pop
sub
jne
sti
adc
adc
push
jmp
add
mov
inc
or
mov
and
xor
mov
stos
ret
fisttpll
and
fadd
add
pop
out
lcall
sub
movsb
jmp
rcll
mov
xchg
xchg
pop
xlat
add
push
mov
pop
scas
adc
test
fs
les
into
xor
push
pop
cmp
and
dec
dec
sub
mov
jp
mov
aad
pop
cmpsb
and
rcl
mov
int3
lods
jnp
mov
test
xlat
imul
fdivrp
lds
repnz
ret
mov
and
cmp
gs
pop
mov
sbb
lret
mov
and
lret
out
xlat
stos
jae
add
xor
mov
dec
cld
xor
inc
nop
fdivrs
inc
mov
scas
nop
daa
mov
sub
cmpsb
xor
push
fs
call
xor
cmp
sbb
mov
test
push
sub
aam
mov
or
dec
adc
xchg
lock
mov
cmp
sbb
test
lds
lahf
push
lods
mov
stos
jl
setns
pop
jno
sub
inc
mul
xor
dec
mov
sub
lods
fisubrs
mov
fisttps
jnp
cli
icebp
mov
or
stos
inc
jbe
fsubs
push
pop
mull
mov
rcl
push
fs
mov
jbe
sbb
outsl
popa
fiaddl
pop
mov
add
rcll
je
or
aad
in
inc
fidivrl
aas
jge
and
pop
stc
cmpsb
lcall
mov
fmull
mov
or
inc
dec
or
push
push
test
xor
aam
stos
fsubl
ret
cli
add
add
push
cmp
loop
xchg
addl
inc
rorb
aam
or
cmp
popf
add
xor
pushf
fdivrs
outsb
and
push
test
sub
in
mov
lret
push
inc
pop
mov
enter
and
push
cmpsb
or
into
addr16
fidivs
add
ret
mov
pop
and
es
test
push
stos
xor
cs
popf
or
gs
std
popf
jle
cli
xchg
jae
sbbb
arpl
jecxz
fldt
cltd
repz
gs
fwait
add
enter
and
cmp
aad
mov
in
adc
mov
inc
pop
xchg
iret
aam
andl
sarl
test
gs
dec
arpl
push
mov
push
in
add
or
shlb
push
daa
fbld
xor
or
das
outsb
push
or
mov
lret
cmp
sub
mov
jnp
roll
cmp
insl
sub
push
das
pop
xor
xchg
jno
pop
aam
sbb
xor
and
mov
push
mov
mov
ret
ss
outsb
addr16
cld
mov
sub
mov
cmp
sarb
repz
xchg
cmpsl
adc
aad
stos
adc
mov
mov
bound
fwait
add
inc
imulb
mov
cmp
jo
sbb
mov
mov
or
pop
xlat
repnz
popa
sbb
sbb
loopne
mov
push
inc
xchg
xchg
cs
mov
sbb
testl
cmp
mov
cmp
xchg
clc
sbb
call
pop
into
jns
popf
movsb
shl
stc
pop
dec
jmp
mov
cmp
mov
cltd
mov
mov
ljmp
mov
mov
loop
clc
cld
add
mov
je
orl
or
data16
es
adc
call
and
dec
dec
jmp
insb
iret
ficomps
icebp
out
xchg
mov
xchg
push
lods
orb
adc
mov
xchg
pop
out
ss
pop
rolb
cltd
enter
movsl
xchg
sub
fstps
icebp
or
push
stos
sar
fxch
jp
scas
sub
mov
sub
mov
cmp
cwtl
and
insb
into
xor
xchg
gs
jle
mov
daa
xchg
mov
dec
lds
cli
mov
addr16
mov
adc
mov
xchg
inc
ret
aad
xchg
movsb
cmc
nop
je
lea
inc
sub
gs
pop
jge
pop
sbb
mov
sbb
mov
es
jg
sub
inc
inc
push
jl
lods
mov
adcl
adc
push
pop
mov
mov
stc
cli
adc
jp
mov
fidivrl
cmp
xchg
mov
incl
lret
adc
std
loopne
jo
xchg
push
jae
jo
js
pop
lds
pop
pop
push
fcoml
pop
pop
pusha
mov
xor
mov
inc
push
push
xchg
ret
mov
jg
add
and
inc
ficoms
insl
jg
fstl
movsb
icebp
sti
das
int3
push
inc
add
mov
loope
das
cltd
xor
adc
cmp
loope
adc
add
mov
lcall
movsl
adc
push
push
je
push
push
push
sub
add
out
push
adc
mov
xor
xchg
rcll
xchg
add
mov
mov
fstpt
addr16
cltd
out
movsb
sub
sbb
std
andl
push
popl
ret
sbb
xor
ss
mov
sar
repnz
mov
hlt
sbbb
outsb
jp
lret
jge
sbb
or
mov
sbb
int3
xchg
jmp
sub
lds
sbb
imulb
push
movsl
in
mov
dec
push
and
mov
xor
jae
pop
dec
insl
mov
ja
adc
pop
xchg
sub
aaa
xchg
dec
add
jmp
push
xor
shll
in
test
and
mov
xorb
push
lea
dec
stos
adc
sub
fcomip
mov
stc
jle
mov
ss
out
iret
mov
lret
xchg
testl
out
mov
test
repnz
mov
xor
lret
add
jmp
ficompl
push
scas
ficoms
stos
sbb
pop
xchg
rorb
pop
fsub
dec
sub
add
push
iret
cmc
sbb
sbbb
push
rcrl
rclb
pop
add
xchg
sarb
or
cwtl
sub
and
xor
pusha
xchg
cmc
jg
jno
test
jns
pop
push
inc
daa
out
xor
popa
inc
test
fdivrl
out
movsl
shll
daa
add
push
and
mov
fsubr
inc
ret
std
jg
out
xchg
inc
js
jle
xchg
inc
cld
lret
add
and
xchg
or
stos
cs
test
pop
leave
inc
sahf
jb
pop
inc
adc
cmpsb
outsl
shlb
imul
lea
sysexit
testb
adc
mov
mov
jo
insl
mov
test
add
push
vpshaw
call
mov
push
dec
push
jne
mov
imul
inc
xchg
add
cmpsl
outsb
sbb
fsubrl
xchg
mov
adc
adc
rcr
dec
dec
les
mov
sbb
xchg
mov
dec
or
fbstp
mov
idivl
pushf
cmp
jmp
adc
sbb
clts
sbb
fcom
movsl
push
repz
add
xor
jle
in
popa
testb
pop
adc
lods
and
aad
rclb
repnz
rcll
ljmp
xchg
or
add
pop
cmc
das
imul
mov
or
sbb
lds
outsl
into
pop
sbb
cli
test
aam
sbb
inc
dec
repz
rcr
and
cmpsl
mov
call
into
mov
movsl
shl
dec
mov
cmc
mov
ret
add
cwtl
mov
into
or
pushf
in
outsb
icebp
clc
push
stc
out
or
push
cld
inc
out
imul
lcall
fistl
mov
inc
outsl
ja
in
xchg
enter
popa
mov
mov
adc
jo
in
mov
fdivl
fnstsw
scas
js
ljmp
pop
idiv
jmp
imul
mov
popf
sub
or
flds
sub
int
cmp
enter
sti
xor
and
mov
push
sub
jae
hlt
add
pop
and
inc
out
inc
push
pop
mov
mov
scas
mov
fildll
mov
jmp
mov
jg
inc
mov
pop
add
and
jmp
jle
push
scas
jb
inc
shr
sbb
clc
mov
sbb
mov
in
adc
inc
lcall
mov
or
xchg
mov
xor
mov
mov
daa
adc
sbb
jne
wrmsr
iret
lret
int
jl
popf
jg
or
jg
sub
mov
xor
push
bswap
dec
inc
inc
xchg
mov
lea
mov
fstl
jbe
andl
pop
aam
sbb
insl
dec
loopne
daa
pop
push
test
rolb
fmuls
inc
push
adc
jg
inc
shll
sbb
cmp
cmp
dec
dec
jp
stos
mov
or
jp
jb
xor
adc
xchg
aad
pop
js
pop
lds
jo
cmp
jne
loopne
in
xor
mov
loop
jb
das
cmp
or
mov
push
aam
aam
xlat
mov
and
push
fwait
sbb
inc
popa
out
mov
jecxz
out
add
inc
xor
jbe
fs
mov
jg
add
in
les
cli
jecxz
fwait
dec
or
sbb
push
mov
jg
lds
push
mov
xchg
mov
jge
push
inc
jmp
loop
sbb
xchg
and
aam
test
and
pop
pop
cmpsb
xor
repz
daa
sub
push
pop
in
xchg
outsl
nop
cmpsw
ss
jnp
adc
push
mov
or
mov
adcl
rorl
xor
adc
nop
pop
std
add
andb
dec
mov
out
adc
sub
sbb
sbb
es
mov
lret
loope
adc
ljmp
std
cmp
jecxz
shll
jb
cmp
push
add
mov
and
outsb
xchg
jmp
movsb
pop
cmp
stc
or
push
dec
pop
inc
in
fdivrs
rol
push
in
in
cltd
adc
cmp
push
repnz
mov
loope
cwtl
out
ret
jl
dec
sbb
cwtl
mov
lcall
rcrb
call
data16
lods
in
adc
mov
push
mov
imul
repz
add
or
mov
sbb
pusha
cmp
lahf
adc
or
notl
jge
push
adc
adc
push
and
sbbl
fcoml
sbb
cmpsb
std
call
test
sbb
mov
sbb
lods
dec
test
cmpsb
mov
popf
stc
jecxz
test
ljmp
jb
cltd
sub
cld
pop
in
mov
orb
ffreep
repnz
pushf
bound
pop
insb
sub
mov
divl
in
hlt
inc
fidivrs
xchg
je
test
shlb
pop
arpl
push
adcb
jbe
ret
mov
outsb
test
mov
mov
pop
cmp
fwait
adc
push
inc
mov
mov
pushf
les
in
lock
xchg
pusha
movsb
and
fs
xchg
es
xchg
lods
call
fmulp
out
mov
insb
outsl
sbb
sahf
enter
sbb
mov
pushf
aad
lds
shlb
mov
jmp
int
jl
sbb
cmp
jp
les
scas
loope
cmpsb
pop
scas
cmp
jns
fwait
or
cmpsb
ret
adc
pop
lret
push
enter
inc
push
or
mov
rcll
cmc
ljmp
and
rep
inc
dec
mov
jo
inc
fsubrl
mov
pop
data16
adc
pop
inc
mov
loop
and
lret
push
or
sub
mov
jns
inc
sbb
imulb
lret
in
pop
dec
push
rcl
test
cmpl
out
and
fsub
sbbl
sti
dec
inc
out
mov
push
sub
hlt
test
in
add
and
imul
add
cmp
sub
jno
mov
pop
ja
movsb
sub
jbe
add
adc
ror
jg
daa
sbb
xorps
enter
or
cmp
lock
sub
jecxz
out
mov
es
mov
add
ds
lea
or
stos
int
scas
dec
sbb
stos
add
adc
daa
xchg
pop
shrl
popa
sub
or
insb
jae
sbb
inc
pop
mov
mov
sub
jg
mov
cmp
push
or
fistpll
xchg
mull
fbld
adc
adc
add
mov
fisttpll
out
iret
das
imul
dec
dec
movsl
inc
xlat
cwtl
enter
nop
outsl
adc
outsb
dec
out
and
fadds
nop
mov
inc
loope
lea
rcrl
test
add
cmc
jbe
or
and
dec
push
ss
push
or
jb
movl
jl
stos
divl
mov
pop
or
jecxz
in
lret
movsb
lahf
or
loopne
or
inc
xor
xor
or
ja
mov
inc
jne
sub
jne
xchg
es
xor
cmc
mull
or
stos
test
test
xor
repnz
pop
repz
dec
mov
addr16
testl
icebp
arpl
loope
rolb
or
jmp
out
pop
jne
jo
lods
cmp
mov
enter
adc
pusha
mov
pushf
xchg
add
add
push
xlat
or
mov
cmp
jle
fisubl
pop
and
std
in
adc
mov
aas
mov
stos
test
xchg
mov
rcll
movsl
pop
push
pop
ds
daa
lods
pop
mov
pop
stc
pop
sbb
xlat
in
inc
out
mov
or
lret
inc
sub
insl
dec
jp
sti
loopne
push
mov
xchg
adc
pop
rcrb
sbb
arpl
loopne
roll
inc
dec
outsb
es
int3
xchg
insl
or
mov
pop
stos
lea
gs
addl
add
lcall
add
cmpsb
out
outsb
inc
inc
jns
arpl
ja
mov
add
std
pop
xchg
pusha
into
mov
adc
call
and
dec
jbe
add
mov
pop
push
cs
idiv
sub
fwait
xchg
aaa
icebp
or
ret
adc
sub
jmp
filds
mov
test
cld
inc
cld
inc
sti
jo
les
in
inc
pop
cli
or
mov
hlt
mov
ss
loopne
jg
xchg
enter
adc
call
fwait
pop
repnz
fistps
jl
pop
cli
adc
and
lret
icebp
mov
icebp
cmp
into
data16
adc
pop
push
mov
adc
pop
sub
enter
mov
call
clc
clc
orb
scas
insb
push
push
sub
cmp
xor
jmp
shll
lret
mov
sahf
mov
daa
ds
mov
popa
and
push
loop
test
xchg
or
dec
cld
or
cwtl
roll
sti
mov
fs
gs
sti
lcall
jl
ja
and
push
push
push
jecxz
sbb
and
aaa
loopne
sbb
out
mov
aas
mov
push
repz
mov
insl
xchg
xchg
inc
test
cwtl
jl
das
cs
jns
inc
jbe
jl
xchg
or
mov
je
dec
push
enter
add
xor
pusha
mov
std
jg
movsl
mov
movsl
add
mov
insl
jo
cmpsl
in
js
mov
cmp
imul
aad
add
cwtl
out
adc
rol
jnp
out
out
and
test
les
mov
push
cmpsl
fucom
adc
push
push
pop
xchg
repz
ret
cld
xchg
dec
xor
movsb
pop
jle
shll
jmp
in
outsl
imul
je
xor
lret
or
and
sub
lahf
and
mov
cs
rorb
js
push
cmp
cmc
dec
cli
pop
call
xlat
mov
jmp
addl
and
add
fisttpl
pop
mov
jl
dec
jbe
popf
sbb
xchg
pop
xor
mov
xchg
arpl
jge
or
jp
mov
pop
in
and
cld
cld
fs
outsl
sar
xorl
mov
clc
jl
inc
into
sti
scas
mov
add
mov
test
cmp
xlat
cmpsb
lds
cmp
mov
int
testb
cmp
fldenv
or
addb
push
repnz
lock
je,pn
lock
sbb
inc
push
sub
dec
movsb
data16
mov
std
jno
call
ja
or
je
pop
psrlw
pop
sti
xor
jg
or
and
popa
jae
in
mov
clc
sahf
shrl
or
insl
mov
mov
xchg
jns
add
xchg
leave
mov
in
cmp
push
xor
mov
cmp
ret
call
lods
sub
dec
jl
lds
add
jmp
insb
and
jb
mov
xor
dec
sub
loopne
inc
stc
jmp
add
push
mov
mov
adc
push
mov
sub
or
test
leave
shr
sub
push
les
dec
ds
out
push
mov
das
test
inc
fwait
dec
xchg
test
shrb
aam
in
inc
insl
mov
out
div
xor
flds
lods
in
fidivrs
mov
jle
push
testl
jne
dec
repnz
xor
fistps
sbb
push
movsl
es
push
add
adc
arpl
mov
jmp
xor
out
mov
aam
sub
mov
mov
xlat
movsl
inc
shrl
cmpsl
adc
mov
sub
outsb
fisubrl
fdivrl
cmp
test
stos
xor
and
lcall
mov
dec
in
fnstcw
push
jmp
cmpsl
mov
das
test
popf
adc
jae
and
adc
push
mov
xor
aam
xchg
inc
mov
mov
pop
ljmp
pop
mov
jecxz
push
push
popf
sbb
imul
cs
fldenv
imul
pop
sub
incl
sbb
add
xchg
enter
add
xor
add
movsb
hlt
lahf
test
rorl
mov
mov
sahf
or
xchg
jecxz
push
loopne
adc
aaa
cmpsb
mov
out
sbb
scas
lds
test
mov
aaa
pop
xchg
cmp
pop
loop
lds
push
xchg
incb
cmp
out
cmp
ja
inc
fsubr
jne
lock
cmp
ret
icebp
inc
mov
call
adc
cld
sbb
nop
xchg
cmpsl
mov
gs
repnz
pop
int3
hlt
dec
or
lock
pop
jmp
rcr
mov
mov
ss
arpl
fcomps
sbb
int3
pop
add
rclb
and
in
push
je
mov
adc
bound
sbb
jmp
xor
imull
and
fucomip
cmp
insb
xchg
jmp
xor
das
aam
xchg
je
lahf
out
call
mov
insb
mov
movsb
dec
mov
dec
sbb
adc
mov
adc
mov
sbb
mov
sbbb
stos
cmp
or
bound
jbe
cs
frstor
xlat
pop
lret
dec
out
adc
fs
dec
and
xchg
dec
sbbl
out
jl
aas
cmp
outsl
int3
sarl
push
ljmp
fwait
loopne
out
dec
mov
push
or
ds
mov
lea
jae
repnz
mov
loopne
jo
lods
mov
aad
mov
mov
clc
ret
fs
in
rorb
sub
xor
mov
jo
in
and
icebp
pop
in
push
push
lock
loop
and
pop
notl
int
ret
adc
pop
xor
add
jns
test
push
cwtl
mov
rcrb
mov
popa
test
mov
outsb
cmp
push
dec
xor
lods
mov
aaa
std
out
cltd
stc
adc
add
and
in
sbb
and
jae
push
push
cmp
xor
xor
mov
or
xor
negl
in
and
scas
add
xor
stos
fs
or
dec
pop
mov
jmp
mov
loopnew
stc
lods
subb
lea
jecxz
mov
ret
sub
xchg
movsb
mov
mov
xor
fwait
stc
divl
push
xchg
dec
loop
test
and
in
mov
push
jecxz
inc
shl
mov
insl
push
jmp
push
out
push
ljmp
cmp
call
push
sti
mov
stos
jmp
mov
cmp
loope
fwait
es
shlb
or
sarl
ficoms
and
lahf
mov
mov
jle
pushf
movb
and
or
mov
fldcw
jb
jmp
and
or
out
fsubp
insb
jle
push
pop
mov
pushf
pop
loop
loop
clc
pop
mov
in
xchg
mov
outsb
movq
jno
and
pop
pop
pop
stc
inc
cltd
dec
add
add
out
nop
cs
lods
and
mov
ret
loop
out
pop
xor
sysenter
shlb
jmp
xor
xchg
xor
fisubrs
leave
mov
fstpt
lret
dec
in
push
stc
lcall
divl
mov
ficomps
inc
and
dec
sbb
js
adc
jbe
movsb
mov
aad
dec
inc
cmp
jo
pop
out
jb
add
mov
mov
push
push
data16
xchg
add
movsl
movswl
loope
mov
pop
push
add
pop
fists
jbe
xor
shr
scas
mov
insb
sbb
loop
pusha
in
enter
jecxz
mov
ja
gs
incl
scas
das
jl
inc
sub
loopne
fisubs
and
jge
add
je
xor
and
mov
and
aas
lret
int
pop
inc
ds
lahf
cltd
pop
das
or
mov
xchg
cmpl
fnstcw
stos
arpl
das
jbe
stos
xchg
inc
sbb
out
cmpl
pop
outsl
rolb
fiaddl
sbb
push
aam
cmp
cld
jbe
daa
aas
and
pop
sub
aaa
inc
xchg
cmp
xchg
addr16
jge
jle
sbb
fnstenv
rolb
movsl
je
jg
jb
sti
xchg
adc
aaa
sar
enter
cmp
test
dec
mov
lcall
sub
jnp
sbb
cltd
push
cmp
dec
pop
cmp
xlat
mov
xchg
or
lock
arpl
mov
lret
xlat
sbb
fstpl
aad
mov
mov
pop
test
lods
ljmp
idivb
mov
test
cmp
sti
and
jmp
out
out
in
pop
push
xchg
cmp
lea
leave
gs
dec
xchg
jg
mov
xchg
mov
push
sub
in
lock
add
mov
pop
insb
jns
pushf
imul
out
mul
fstps
cmc
imul
xchg
dec
sbb
and
inc
jecxz
insb
adc
mov
add
or
clc
inc
jg
jl
jle
popf
ljmp
sub
insl
mov
cli
jno
sbb
xor
jle
cwtl
fsubs
cwtl
and
addr16
xor
inc
pop
add
cmp
lea
insl
adc
mov
inc
pop
incl
xor
lret
nop
subb
stos
cld
lcall
sub
daa
shlb
ret
push
ror
adc
rcr
add
lcall
cmp
insb
stc
loopne
pop
int3
xor
jle
inc
daa
cmpsb
push
nop
aas
cmp
loope
pop
clc
rolb
shlb
push
pop
and
fdivrs
test
repz
fadd
mov
das
repnz
jmp
inc
pop
loope
stos
push
inc
in
pop
cli
dec
je
sar
mull
jbe
shrl
sbbl
daa
inc
sub
dec
xor
dec
fsubs
movsl
bound
mov
outsb
movsl
aad
in
ret
fildll
les
ja
scas
aad
xorb
xchg
fiaddl
iret
xchg
sti
pop
ret
push
scas
jnp
push
test
cs
mov
adc
xchg
cmp
xor
movsl
sti
stos
out
test
loopne
out
inc
push
out
sbb
inc
repz
xchg
inc
mov
arpl
jae
pop
xchg
pusha
pop
jge
test
lcall
test
or
push
jno
or
ds
scas
xor
and
fiadds
aas
jp
mov
cmpsb
addr16
cmp
sub
cmp
repz
fsubrl
xor
imul
sub
mov
mov
les
fwait
mov
mov
stos
int
loop
pop
incb
xchg
mov
xor
add
cmp
fwait
aam
push
jmp
out
xchg
mov
add
cmc
pavgw
sub
inc
and
pop
dec
mov
scas
sbb
and
mov
and
xchg
scas
add
inc
add
push
mov
pushf
mov
mov
repnz
ja
pop
xchg
mov
sbb
dec
cmovae
or
dec
cmpsb
cmpsb
push
popl
jne
push
nop
jecxz
lock
dec
sbb
ret
sbb
pusha
cmp
push
sub
and
movsl
loop
ret
jo
mov
cs
popf
cmp
shl
hlt
mov
cmp
lock
pop
rcrb
add
xchg
xchg
fwait
and
dec
imul
sbb
add
xchg
xchg
fwait
pop
int
popf
xor
sbbb
les
inc
xchg
adc
mov
mov
sbb
cld
out
rcr
lea
std
outsl
jecxz
sub
in
or
cmp
cmp
xchg
mov
es
jge
mov
hlt
mov
adc
or
mov
add
sbb
jg
inc
pop
imul
inc
mov
je
ret
mov
push
aam
inc
inc
push
lcall
and
mov
out
pop
aas
gs
call
cmp
mov
cmp
jb
jbe
pop
inc
push
adc
mov
dec
or
and
add
jb
outsb
pop
into
or
mov
lods
stos
xor
push
xchg
sbb
mov
adc
imull
scas
cmc
sub
enter
int3
or
leave
cmp
pop
clc
icebp
sbb
das
push
and
mov
arpl
or
xorb
adc
shlb
jg
fimuls
in
cmp
mov
or
mov
nop
push
pop
push
sub
fcompl
adc
and
dec
call
rcr
jne
lcall
xor
nop
push
loopne
inc
sub
add
mov
addl
call
mov
pop
arpl
adc
ret
jno
cwtl
in
outsb
push
pop
out
xor
adc
repnz
push
ret
inc
cltd
jg
idivb
pop
jle
aam
fistl
adc
rorl
pop
aas
pop
mov
outsb
xchg
outsb
out
hlt
dec
imul
xchg
pop
in
dec
mov
inc
mov
sbb
push
dec
inc
pop
pop
cmc
or
sbb
loopne
movsl
in
and
xchg
dec
pop
icebp
jg
jmp
mulb
lret
mov
loop
adcb
push
xor
sub
mov
lock
pop
push
inc
push
inc
mov
sub
jno
call
andb
mov
mov
fs
push
lcall
lods
inc
dec
inc
aas
fucom
dec
xchg
inc
lods
sbb
lds
jg
inc
inc
adc
sub
sti
pusha
mov
aam
ret
sbb
js
cli
jmp
roll
data16
insb
scas
iret
mov
pop
cmpsb
fiaddl
cwtl
in
popa
sbb
mov
mov
sarb
sub
mov
sbb
nop
pop
pop
ret
icebp
jo
jg
aaa
or
int3
pop
mov
xor
add
fsts
sbb
xchg
cmp
stc
enter
mov
cmp
aad
ljmp
lret
orw
cmc
jge
mov
add
cwtl
xor
dec
insl
push
push
jbe
sahf
adc
loope
test
push
pop
pop
into
sbbb
mov
push
mov
cmp
test
jmp
adc
sbb
lods
mov
mov
sub
adc
dec
fisubs
cwtl
std
das
mov
mov
test
cmp
push
sbb
stos
jae
rcrb
pop
in
xchg
mov
aad
inc
out
aam
mov
lods
pop
cmc
jbe
mov
or
scas
lret
push
cmp
mov
cmp
dec
dec
lods
dec
popa
pop
mov
inc
jmp
xor
cmp
jae
lods
push
jne
sti
push
leave
mov
sbb
jne
sub
decb
insb
arpl
test
adc
xchg
jnp
and
movsb
test
adc
xchg
fs
mov
push
cmpsl
push
mov
cmc
je
pop
sbb
sub
ds
ja
mov
mov
inc
repz
or
int3
dec
sbb
pop
in
xchg
dec
popa
jbe
mov
loope
ret
sub
fs
mov
add
or
ret
iret
inc
mov
loopne
lds
or
stc
pop
cmp
add
inc
cmp
enter
repz
jns
cmp
test
aas
pop
push
stos
jbe
cld
pop
jge
mov
jle
fwait
push
sti
jecxz
cmp
mov
inc
mov
sbb
push
fldt
sbb
or
sbb
xchg
sarb
cmp
mov
push
and
cltd
insl
mov
and
aaa
mov
push
or
dec
iret
xor
repz
or
lcall
pop
sub
mov
inc
int
fildl
add
mov
test
mov
fcmovu
shl
xchg
cmpsl
fisubl
cld
lods
sub
test
mov
loop
mov
mov
dec
push
jno
insl
fcomi
mov
addr16
xchg
popa
add
insb
mov
out
out
add
jp
dec
or
mov
cmc
scas
int
adc
xor
add
add
adc
sub
aam
cmc
jno
mov
pmulhw
jl
nop
mov
in
repnz
inc
cmp
xchg
cli
ss
cmpsb
or
mov
mov
je
out
fsubl
stos
push
mov
add
xchg
inc
daa
adc
pusha
dec
inc
in
aas
movsb
lds
adcl
pop
loopne
hlt
in
cmp
movsl
loope
cmc
scas
xchg
xor
add
xor
or
scas
dec
adc
fldenv
scas
adc
insb
inc
xchg
lret
dec
adc
mov
ss
lret
jg
sbb
outsl
andl
cmp
cmp
ficomps
and
jnp
dec
mov
sbb
pushf
mov
andl
pop
rcpps
scas
jne
push
and
add
lret
movq
pop
and
out
pop
mov
hlt
movsl
mov
cli
stc
mov
push
out
pop
sub
dec
mov
out
pop
mov
dec
mov
insl
cli
xor
mov
push
pop
or
repz
jae
rolb
shll
les
int
xlat
aad
mov
pop
leave
icebp
movsl
arpl
int
fdivrs
lock
inc
insl
lods
xchg
cli
dec
shlb
cmp
mov
mov
sub
xchg
mov
pop
daa
popf
enter
inc
inc
adc
sub
xchg
sub
jl
sbbb
sbb
or
movsb
or
adc
sub
clc
int3
jno
dec
shrb
push
sbb
aam
cmc
outsb
xchg
adc
adc
data16
pop
or
fisttpll
mov
push
sahf
pop
cmp
into
rolb
sub
repnz
add
aam
cld
je
xor
sbb
scas
cltd
pushf
call
dec
add
aas
enter
or
push
lea
scas
jle
jmp
cmc
hlt
mov
adc
lods
jno
inc
scas
cwtl
scas
lds
add
ret
mov
incl
lds
repnz
lcall
movq
xor
pop
push
in
cmp
pop
mov
xor
xor
mov
adc
mov
pop
daa
popa
js
mov
ds
cmpsb
ret
or
and
orl
cmpsl
pop
es
fdiv
jno
sti
add
mov
xor
xor
hlt
xchg
pushf
les
aad
loop
mov
push
mov
jmp
sahf
aam
push
xchg
or
dec
push
inc
and
inc
aaa
push
xlat
sbb
mov
mov
mov
sbb
shrl
in
lahf
mov
mov
loopne
mov
icebp
push
pop
mov
cli
test
pushf
stos
sahf
bound
imul
das
xor
push
dec
loopne
add
push
and
outsb
sbb
incl
movsl
mov
mov
mov
lret
sub
dec
stos
cltd
mov
sbb
out
inc
jp
sub
repz
mov
lret
push
sbb
notl
mov
rorl
push
jnp
adc
mov
movsl
ljmp
mov
xchg
fwait
mov
mov
push
inc
out
xchg
or
dec
cmp
mov
or
mov
loope
aam
pop
aad
ljmp
addr16
cmc
mov
sub
aaa
add
insl
shlb
pop
sarb
ds
jne
std
dec
jo
mov
aaa
or
nop
or
mov
fs
movsl
call
pop
test
gs
fadds
mov
mov
cli
dec
mov
xchg
icebp
call
pop
cmc
mov
stos
xchg
repnz
mov
dec
js
mov
dec
push
xchg
es
outsb
push
mov
lcall
mov
cmp
std
test
fstpl
add
shll
adc
cwtl
aas
arpl
jp
dec
dec
dec
push
scas
fisubs
sub
data16
ljmp
rcr
aaa
into
ret
outsl
or
nop
rcl
sbb
fistps
dec
sub
call
in
aad
inc
imul
movsl
xor
addb
inc
jl
xor
xchg
xchg
mov
push
inc
frstpm(287
or
mov
cmc
ror
scas
lcall
jle
test
or
mov
lahf
cmp
push
jo
xlat
push
or
ja
or
push
xchg
je
mov
jecxz
jp,pt
int
out
jb
into
wbinvd
iret
sub
adc
pop
insb
xchg
test
out
std
and
inc
sti
pop
dec
test
mov
loope
pop
in
vpmulhw
and
insl
hlt
inc
pop
dec
push
mov
aad
js
aam
sti
mov
and
addr16
lods
mov
add
inc
cmp
fs
sub
sub
fldcw
lods
sub
push
js
sub
inc
add
dec
cwtl
fidivs
adc
inc
adc
daa
xchg
mov
movsb
insb
mov
loop
and
xor
out
popa
xchg
cltd
lret
cmpsb
out
mov
popa
mov
dec
push
aad
sbb
inc
pop
int
mov
add
or
stos
mull
lahf
daa
cs
sbb
mov
push
or
add
rclb
fcompl
or
mov
or
aad
loop
push
xchg
clc
jg
mov
iret
xor
push
nop
mov
inc
jmp
lcall
fisubrs
push
adc
jne
gs
inc
movsb
push
dec
inc
out
ret
fsubl
xlat
adc
inc
fsubl
cmpsl
xor
xor
aam
dec
cmp
pop
insb
mov
clc
xchg
dec
out
imul
sar
or
pop
das
lods
mov
adc
inc
pop
xchg
fstl
add
push
mov
ret
sbb
and
mov
aam
bound
dec
or
in
xchg
popl
and
aas
sub
cli
je
scas
data16
popa
mov
pusha
stc
jnp
fwait
adc
rcll
jbe
aas
cmp
mov
in
fcom
outsl
loop
and
add
arpl
add
shrl
aam
sahf
insb
jno
or
sahf
jbe
mov
or
sbb
nop
push
call
xor
mov
and
push
mov
test
or
movsb
mov
and
out
and
outsl
jg
insb
mov
lcall
push
fcmovnu
mov
in
scas
add
sub
fldenv
dec
js
mov
cmpsl
rolb
mov
push
icebp
and
dec
or
adc
das
mov
mov
push
jmp
jb
inc
clc
xor
fadds
mov
dec
or
iret
adc
cmp
push
cmp
outsb
mov
fsubrs
cli
jne
and
cmp
pop
mov
mov
lea
ja
mov
aad
iret
or
mov
dec
cmp
push
jl
mov
rcrb
negb
cmp
call
xor
test
dec
pop
mov
pusha
inc
ret
add
mov
movsb
xchg
andb
cmpl
add
xchg
pmulhw
xor
jmp
push
pop
stos
lock
jge
clc
sbb
mov
pop
ret
and
adc
dec
mov
shll
cmp
and
int3
or
or
stos
in
cmp
mov
test
mov
mov
add
or
push
loope
fsubrl
imul
or
pop
sbb
jae
filds
sbb
or
out
inc
inc
insl
lahf
push
or
xchg
minps
hlt
xchg
das
test
sub
decb
scas
pop
pop
test
arpl
in
push
jle
adc
lock
rdpmc
push
add
push
dec
xor
mov
cmp
fldl
lret
pushf
hlt
rolb
or
aam
or
mov
fstpt
pop
push
fcoms
and
outsl
ret
inc
jp
enter
xchg
data16
cld
daa
scas
fildl
in
popf
outsb
pop
pop
div
cmp
mov
mov
es
xlat
sbb
jne
jbe
jno
push
hlt
add
inc
inc
insb
xor
cmpsl
sbb
cmp
and
test
nop
scas
jo
jbe
mov
lock
mov
test
outsb
jae
cltd
popa
cs
imul
in
iret
xchg
dec
dec
xchg
pop
pop
dec
stc
jno
stos
fiaddl
andl
cmpsb
push
mov
xor
lcall
pop
inc
or
bound
or
and
inc
and
sbb
mov
adc
cmc
or
test
cmp
xlat
xchg
dec
xchg
sub
mov
mov
outsb
lea
jne
jae
xor
jge
or
jns
xchg
pop
push
lret
mov
fs
cmp
pop
sub
lock
imulb
pop
mov
lcall
imul
jle
and
push
fdivr
hlt
pop
dec
and
mov
jae
lahf
into
dec
sub
mov
ljmp
cltd
adc
pop
arpl
jl
loopne
inc
push
fsubs
and
fstp
xor
daa
push
sti
mov
adc
dec
divb
movsl
leave
ljmp
rolb
cmp
rorb
std
jb
jb
sahf
pop
movsl
outsl
je
push
fdivs
xchg
pop
jp
jae
push
mov
sbb
test
mov
push
dec
push
sahf
fs
and
iret
cli
outsl
and
mov
cmp
inc
mov
stos
add
sarl
sub
add
push
mov
mov
notb
outsb
sub
insb
cmc
in
loop
mov
add
arpl
js
cmpsb
add
jns
incl
mov
mov
andl
cli
pop
loop
arpl
xor
jg
xorl
pop
dec
imul
ficomps
sub
fbstp
push
test
xchg
imul
cmpsl
mov
hlt
sahf
cmp
insb
shll
xor
inc
adc
shll
lods
leave
mov
aam
add
sbb
movsb
cmpsl
shl
dec
xchg
addb
pop
xor
and
mov
out
pop
mov
sub
outsb
xchg
daa
and
push
mov
ret
inc
add
pusha
ds
pushf
divb
pop
cmp
pop
pop
mov
inc
push
stos
mov
mov
mov
clc
movsb
dec
jo
pop
in
popf
repz
pushf
push
adc
adc
mov
frstor
ds
lds
shr
testb
repz
xor
jbe
pop
sbb
inc
std
inc
jg
pop
call
xchg
inc
push
in
mov
xchg
aam
clc
orl
adc
bound
lods
pop
outsb
xchg
outsb
push
iret
dec
xorl
xchg
push
jle
adc
push
cmp
ja
sti
loop
lret
out
call
xor
fildll
call
xchg
cmp
mov
lock
dec
dec
cmc
out
rcrb
cmpsb
mov
and
rcrl
and
in
inc
orb
out
je
aaa
cmpsb
inc
sbb
sarl
ret
addl
int3
sub
nop
mov
lahf
arpl
pop
jb
rorb
inc
int
inc
jne
jb
push
pusha
xchg
mov
fwait
mov
loope
cli
push
loop
bound
jbe
or
hlt
sbbl
movsl
inc
fsub
mov
pop
out
out
stos
outsl
fdiv
pop
mov
mov
popf
dec
pushf
cltd
pop
or
shr
and
xor
fstpt
test
js
out
test
jecxz
lds
mov
out
outsb
enter
pop
adc
dec
sbb
jno
lcall
sub
scas
pop
cmpsl
inc
pop
mov
push
lea
sbb
push
lods
addb
cmpsl
pop
or
xor
and
xchg
push
push
les
or
lds
xor
mov
inc
jne
int3
cmp
dec
mov
xor
out
xchg
popa
xchg
adc
adc
loope
lret
dec
je
je
inc
lea
sub
clc
inc
rol
push
dec
sbb
pop
dec
jbe
insl
mov
xchg
jp
push
in
sbb
test
aas
movsl
aad
sbb
xchg
jp
shr
aam
mov
cltd
add
push
jl
fnstsw
pop
lock
sub
mov
sbb
cs
ror
iret
lea
fsubrs
int
insb
mov
and
push
push
dec
sbb
ja
jmp
cmp
jle
or
dec
dec
cmc
pop
jno
xchg
stos
adc
insl
into
mov
xorb
cwtl
lcall
cmp
loope
rorl
shlb
dec
call
xor
pop
dec
push
add
dec
sbbl
loop
rclb
loopne
mov
jecxz
pop
aam
and
aaa
out
inc
pop
rorb
and
mov
in
nop
orl
rol
popa
insl
or
movsl
ret
sbb
fstl
outsl
pushf
sar
push
scas
daa
and
lods
arpl
xor
push
jle
sub
cli
in
hlt
test
ret
and
in
clc
add
cmp
aaa
sbbb
adc
inc
xchg
fwait
shrb
pop
inc
push
incl
mov
in
es
notb
xlat
mov
pusha
sbb
movsb
dec
shlb
xchg
in
mov
lea
sbbl
and
mov
jo
cmp
pop
in
xchg
lods
aaa
jbe
rcrl
clc
rcr
push
loope
push
pop
cmp
mov
lods
cmp
hlt
push
arpl
je
add
cmp
jo
jg
je
dec
adc
cld
push
xchg
pop
xor
sub
data16
cmpsl
lret
mull
and
int
aaa
adc
ja
test
mov
popa
mov
cmp
loop
or
or
xor
lods
sti
xchg
mov
mov
loopne
push
mov
test
xchg
cmp
std
mov
xchg
push
xor
dec
jns
fidivrs
jmp
or
add
pop
add
pop
lret
stos
and
pop
daa
sub
mov
arpl
jo
dec
into
aam
or
adc
fdivs
imul
pminub
inc
jne
es
cmp
cmp
jl
aaa
xor
std
xchg
inc
inc
lret
adc
hlt
or
or
mov
pop
outsb
sarl
sub
out
out
fwait
push
lret
dec
lods
flds
dec
orb
lds
dec
nop
jbe
xchg
adc
fldln2
dec
lds
cld
or
insl
xchg
insl
ljmp
push
jb
jmp
push
and
iret
cltd
int
or
xchg
dec
mov
out
mov
xor
lods
rorl
popa
mov
jbe
sarb
dec
jge
call
adc
rclb
fmull
mov
push
mov
pushl
test
inc
cmpsl
and
mov
jb
nop
hlt
mov
jle
inc
add
xor
test
loope
lods
mov
fisttps
sub
jns
mov
jo
or
in
push
dec
leave
fdivs
dec
rorb
pop
or
in
shr
pusha
push
in
popf
lods
mov
arpl
sub
adc
int3
lea
or
ljmp
or
nop
mov
mov
sti
std
and
inc
loope
push
push
jle
cmp
mov
hlt
xchg
bound
dec
mov
sbb
add
repz
xchg
arpl
adc
popf
jg
add
xchg
jo
ret
out
push
cmp
adc
jbe
push
mov
sahf
cli
pop
xchg
inc
movsl
out
outsl
inc
adc
loope
imul
andl
mov
cmp
loope
lods
cmp
xchg
cmc
movsb
cmp
jle
gs
adc
mov
ret
cld
cmpl
add
pop
add
mov
imul
sub
fdivrs
jno
sub
pushl
cmp
mov
sti
in
jp
adc
push
enter
int3
mov
jge
push
es
ss
cs
jmp
stos
sub
sub
mov
push
sti
jge
adc
into
outsl
mov
call
xchg
ljmp
fwait
js
xor
lret
inc
xrelease
jg
or
mov
pop
cmp
pushf
insb
lcall
xchg
rcl
add
mov
das
lcall
mov
das
lret
std
jg
lret
cmpb
or
lahf
lods
mov
popl
xchg
ret
mov
gs
es
fst
push
mov
jecxz
dec
clc
xadd
mov
sar
or
mov
and
shll
xor
rcll
mov
and
adc
xlat
fcomps
je
jmp
or
cwtl
jg
sub
scas
jg
into
pop
mov
xor
sbb
xchg
cmp
xchg
lret
cs
mov
loope
dec
mov
jge
xor
xchg
ss
adc
mov
aam
jmp
sbb
mov
popa
lahf
xlat
push
mov
mov
add
sub
test
je
jno
movb
std
outsb
mov
mov
aaa
cmp
xchg
pop
pop
jge
or
or
inc
xchg
sti
xchg
mov
jo
push
scas
jmp
lret
mov
mov
push
sub
inc
sub
mov
movsb
sub
lds
inc
inc
push
int
sub
mov
dec
ja
and
std
fdivrl
and
lret
rcrl
fstpl
cld
mov
movsl
sbb
rsm
cltd
rcrl
xchg
aaa
cmp
js
jns
xor
in
xchg
mov
jo,pn
mov
stos
xlat
mov
pop
mov
sub
or
jnp
call
imul
mov
lock
add
ja
aaa
lcall
fcmovb
sahf
push
mov
push
test
sahf
or
and
outsl
push
fstps
lock
lds
pop
mov
cmc
jmp
imul
sub
test
mov
pop
adc
cmpsl
ds
dec
fwait
jl
loope
and
jmp
sbb
andb
or
push
xchg
mov
es
stos
cmp
rolb
xchg
leave
xchg
jmp
mov
dec
fidivrl
inc
add
xlat
movsl
cld
testb
leave
mov
cltd
push
fidivl
mov
mov
clc
repz
sub
xorb
pop
fs
push
scas
lcall
cmpxchg
sub
sbb
inc
test
jp
inc
or
int
sub
loop
outsb
add
xchg
xor
test
pop
push
mov
popf
push
arpl
add
jg
bound
or
inc
mov
dec
shlb
les
mov
xlat
fmul
out
jbe
cld
out
adc
mov
and
and
in
jmp
push
inc
and
jmp
pop
jmp
repnz
cwtl
hlt
mov
sbb
jns
pop
lods
scas
mov
fisubl
jecxz
push
movsb
gs
nop
mov
mov
sti
push
mov
and
push
mov
test
mov
mov
adc
js
aas
adc
mov
dec
mov
or
jae
inc
rcl
lcall
cmp
and
inc
repnz
dec
dec
sbb
and
ja
into
mov
xor
mov
lret
adc
xchg
xchg
test
adc
leave
inc
ficomps
mov
lds
mov
or
dec
push
mov
dec
mov
jns
mov
cmp
inc
mov
xchg
into
inc
icebp
add
sub
fs
mov
movsb
cmpsb
push
sahf
lcall
push
jns
movsb
mov
loop
push
mov
mov
xchg
sbb
mov
hlt
xchg
sub
negb
mov
out
insl
insl
sub
mov
nop
inc
into
mov
jno
fwait
jecxz
lods
aam
cmp
das
daa
pop
lret
and
and
cmc
loopne
jmp
mov
adc
testl
arpl
sub
inc
fstps
jne
cmp
jle
sbb
jb
mov
or
sbb
jno
andb
ljmp
or
add
sbb
push
popa
movsb
outsl
adc
pop
daa
and
aam
jg
movsl
xchg
ret
inc
add
pop
mov
or
ror
outsb
mov
in
jae
cli
lret
out
lret
lock
push
xchg
push
testl
pop
movsb
popf
mov
sahf
shl
sub
cmp
xor
imul
jnp
push
mov
add
jecxz
jo
sub
popf
rorl
push
jb
sbb
adc
inc
add
jno
xor
add
fnstcw
or
add
mov
lea
lock
xchg
push
push
inc
inc
in
mov
repnz
or
cltd
cmp
movsb
jle
cmp
lods
call
fs
add
loopne
sbb
sbb
das
sbb
and
sahf
pusha
bound
ret
movsl
and
push
flds
sub
sahf
in
cmpsb
std
xor
xchg
lret
mov
mov
mov
dec
jnp
sub
sbb
and
lods
aas
lret
mov
mov
jle
cmpsb
test
enter
fwait
mov
push
pop
out
lret
add
cmp
cmc
stos
cmpsl
push
push
mov
enter
cmp
or
insb
data16
repz
test
jl
das
or
adc
repnz
cld
cmpb
adc
adc
aam
in
dec
cli
lea
push
sbb
mov
jbe
mov
mov
adc
mov
into
xor
loop
lds
loopne
push
aad
cmp
mov
pop
ljmp
out
or
adc
jp
mov
cs
adc
sub
mov
mov
sbb
cmc
xor
mov
scas
shrb
out
sub
push
fstpl
add
pop
mov
scas
aaa
push
mov
fs
pop
dec
mov
xlat
int3
xchg
jge
mov
enter
pop
orb
ja
push
mov
inc
push
mov
add
adc
aas
sahf
icebp
test
mov
lret
data16
and
xor
xor
xor
pop
mov
aad
push
insb
inc
ds
mov
inc
xchg
ret
sti
xchg
popf
test
xchg
mov
push
cltd
ss
je
mov
imul
mov
push
fldl
sub
rcrl
insl
inc
and
push
mov
enter
jg
andl
fmull
in
fwait
jg
mov
rcl
mov
loopne
push
mov
sahf
pusha
adc
daa
mov
cmp
loop
rolb
xchg
bound
add
decl
decb
popa
push
jo
push
sbb
inc
lahf
sub
ret
xchg
mov
andl
add
ret
cltd
mov
pop
cmpsl
add
sbb
clc
bnd
test
mov
aaa
sub
mov
add
mov
movsb
dec
cwtl
ljmp
sbb
loop
adcb
ja
push
daa
jmp
fisubrl
dec
mov
jo,pt
insb
mov
jno
sub
sbb
scas
loop
arpl
out
and
push
nop
jb
repnz
cmp
jmp
test
mov
jl
sbb
mov
stos
push
sub
roll
push
addl
test
cmpsb
add
cmp
lods
adc
mov
mov
fnstenv
cmpsl
xchg
scas
or
scas
repnz
lods
ret
mov
test
sub
push
aaa
out
inc
fcomps
fdivl
aas
adc
xchg
dec
xor
or
mov
xchg
mov
push
test
xor
imul
icebp
hlt
fsubs
hlt
jne
enter
out
and
mov
and
std
rclb
lret
adc
push
mov
sbb
xor
aam
cmp
stos
sbb
cli
mov
mov
jl
lods
sbb
inc
movsl
into
rorb
dec
mov
lret
decl
leave
enter
pop
lock
pop
movsl
mov
test
ljmp
call
push
jae
jo
push
icebp
mov
xchg
cmp
ret
cltd
mov
repz
xchg
fucomp
lods
xlat
sub
cld
adc
inc
repnz
pop
fnsave
data16
clc
fdivrs
mov
mov
movsl
shll
addb
inc
adc
rorl
xchg
pushf
sub
sbb
inc
mov
repnz
mov
lock
inc
lahf
loope
push
les
cltd
ds
sbb
sub
inc
sub
divl
test
jno
pop
lahf
mov
mov
ret
cmp
ficoms
dec
jnp
or
push
mov
ljmp
sub
mov
int3
jns
movsb
lds
xchg
popf
push
lahf
xor
icebp
cmp
dec
mov
push
jo
push
imull
int
xlat
popa
pop
add
sbb
mov
ja
dec
fisubl
push
cltd
or
popf
ret
adc
clc
je
adc
or
mov
add
pop
popf
jmp
and
int
inc
jle
dec
movsl
cmp
insl
mov
jb
lds
aas
iret
cmp
push
ss
mov
in
add
arpl
mov
mov
jle
dec
fisubs
scas
adc
in
push
dec
mov
fildll
sti
stc
out
insl
jb
mov
and
pusha
and
or
dec
and
int
lret
divb
pop
inc
or
lock
scas
push
inc
mov
xor
mov
icebp
cmp
das
xchg
pop
and
cmp
xchg
fdiv
adc
xchg
es
sub
pop
add
pop
out
dec
jns
sub
push
loope
pop
push
xorl
movsb
ds
loopne
mov
cmp
cmpsb
in
ficoms
cmp
icebp
cmp
mov
jmp
inc
jbe
or
lods
scas
pop
and
jo
sahf
test
loope
sbb
jo
jle
mov
fdivrs
das
mov
int
mov
xchg
stos
and
loopne
pop
cwtl
imul
cmpb
in
or
or
cmpsl
mov
mov
xor
imul
push
sub
shll
sbb
mov
outsl
nop
pop
clc
sbb
cs
scas
ss
and
ja
pop
sub
xchg
mov
je
mov
lds
push
ds
sbb
jns
mov
cli
push
mov
lods
pop
jl
jo
dec
jns
addr16
mov
movsl
stc
pusha
adc
and
mov
inc
sub
imul
cmpsl
xchg
xchg
repz
push
cmp
int3
andb
lret
inc
dec
imul
std
xchg
sbb
mov
pop
inc
add
or
cmpsl
xor
push
dec
xchg
insl
adc
mov
inc
sbb
popf
and
dec
jb
push
ja
xlat
push
loope
pop
shlb
mul
dec
push
sbb
ret
pop
and
cmc
xchg
ficoml
push
andb
add
jb
pop
xor
je
jl
sar
dec
daa
out
divl
data16
jns
inc
add
pop
insb
add
fs
xor
mov
mov
cld
mov
imul
into
pop
jle
xchg
adc
fcoml
icebp
cmpb
sub
and
mov
das
test
pop
lods
ja
jne
xor
imul
jge
dec
xor
inc
shlb
bound
or
adc
xor
xchg
mov
mulb
pop
bound
scas
ja
ret
insb
cmp
mov
sub
test
sub
in
in
dec
lds
mov
push
cmp
bound
push
xor
push
mov
scas
stos
imul
cmp
sahf
lods
inc
mov
cmp
cmp
sbb
in
jle
inc
jl
cmp
cmp
rorl
imul
in
cmp
mov
cmp
xchg
inc
lahf
in
fistl
cmp
dec
in
fistpl
movl
pop
scas
add
mov
dec
pop
ss
repz
pop
fmull
and
mov
out
lret
dec
iret
loop
xchg
mov
sub
iret
pop
xor
add
dec
loopne
lahf
mov
add
pusha
inc
outsb
mov
dec
cltd
mov
pop
in
notl
xchg
enter
mov
aad
std
insb
adc
mov
arpl
cmc
jae
fisubl
push
loope
popf
pop
out
xor
les
mov
jo
rol
lret
add
and
dec
aas
sbb
dec
mov
gs
and
adc
mov
mov
jg
fmul
lcall
or
mov
ja
pop
inc
xchg
xchg
xchg
in
popf
fistpll
add
mov
mov
jns
imul
jge
cmp
mov
mov
shlb
mov
jg
fwait
add
aas
or
ja
push
jo
mov
pushf
xchg
scas
add
jns
inc
xchg
sub
mov
stos
sahf
mov
pop
inc
sub
xchg
repz
push
fdivs
sub
pop
push
test
mov
push
rcrb
jb
test
bound
mov
fadds
clc
jbe
imul
and
push
add
adc
jl
and
fdivrs
mov
jne
in
inc
or
ret
mov
sub
mov
stos
adc
fsts
outsl
and
mov
mov
cmp
mov
xchg
filds
ret
xchg
test
add
push
fnsave
jmp
fsubp
hlt
ljmp
fisttpll
cmpl
test
inc
lahf
and
lock
lods
jns
sar
sbb
fwait
push
aas
xor
ret
sbb
mov
mov
and
xlat
loop
mov
dec
pop
aas
lds
xchg
dec
mov
xchg
sti
mov
push
loopne
fs
xor
fnstsw
outsb
iret
cmc
inc
call
push
xchg
inc
aaa
int3
movsl
push
push
pop
fnsave
ja
daa
les
in
jns
stos
incl
cs
fsubrs
jns
gs
adc
aaa
or
cmp
nop
jae
adc
sarb
adc
aaa
sbb
popf
ficoms
cmp
dec
jmp
stos
inc
add
jns
push
adc
pop
test
aad
sub
fwait
and
into
xchg
add
out
mov
jmp
aas
dec
push
add
add
mov
rcrb
fsubrs
dec
jecxz
or
mov
mov
hlt
dec
aaa
arpl
fdivr
ds
test
mov
aad
out
out
mulb
insb
adcl
inc
jne
cmp
movsb
and
mov
subl
sub
pop
imul
push
movsb
jl
push
push
xor
fsubrl
int
pop
int
aam
or
push
add
stc
loopne
iret
cmp
xchg
xchg
sub
dec
jle
rcl
or
sub
add
mov
push
sbb
xchg
mov
addr16
xlat
fnstenv
mov
push
repz
xlat
sbb
mov
inc
fwait
stc
mov
icebp
in
mov
divl
inc
icebp
add
push
cmp
aam
xchg
pop
xchg
and
pop
mov
roll
add
push
addl
cmp
or
dec
out
add
js
or
jle
dec
add
rclb
pop
in
xor
cmp
fscale
xor
mov
push
icebp
sub
sbb
aam
mov
jecxz
dec
pop
lock
xchg
enter
add
adc
out
mov
es
pop
xlat
lea
push
in
cmc
sbb
jb
stos
push
out
add
hlt
mov
or
sbb
fisubrs
mov
inc
or
sbb
pop
push
pop
or
pmaxub
out
orb
pop
cmp
nop
push
loop
and
mov
mov
cmpsb
cmpsl
repnz
test
jnp
stos
jbe
sbb
std
dec
pop
jno
outsl
stos
lods
pushf
inc
jns
lcall
ljmp
mov
xorb
mov
test
fisubl
fisubl
mov
cmp
inc
xor
aas
scas
in
mov
scas
dec
mov
rorb
push
loopne
xor
lahf
add
xchg
adc
lret
push
sub
add
lea
mov
push
cmp
cmpsb
push
cmc
leave
and
xor
jg
loop
inc
mov
jae
add
push
test
add
inc
fsubrl
mov
push
inc
fidivrl
or
sub
outsb
test
sbb
jne
cmp
jp
push
add
xorb
inc
adc
fistl
xor
clc
mov
jmp
shlb
pop
fld1
ljmp
test
pushf
mov
adc
scas
aad
or
push
fwait
arpl
jecxz
ja
and
and
sub
mov
test
or
int3
and
lods
sub
mov
adc
or
mov
ret
jb
or
shl
fucom
movsb
mov
insb
test
shrl
and
pop
rorl
jae
inc
repz
test
fildll
scas
dec
test
imulb
dec
jg
fdivl
adc
jnp
inc
xchg
jns
sbb
adc
add
mov
fmull
pop
dec
lret
sbb
repnz
pop
iret
idivb
sub
fwait
push
mov
adc
sbb
repnz
or
fucomip
and
into
jge
pop
inc
loope
xor
mov
dec
nop
shlb
add
fsts
push
xorl
test
adc
jno
jnp
xchg
popf
in
dec
push
inc
xorb
aaa
pop
sarb
dec
dec
aas
inc
fldenv
pop
dec
adc
popa
inc
loopne
jb
and
sahf
rcrl
add
testl
dec
dec
pop
jb
add
out
cmp
inc
popf
jne
in
fs
inc
cld
and
sbb
call
adc
and
push
lods
inc
sub
mov
mov
enter
or
push
sarb
lods
mov
jg
insb
xchg
jl
imul
shrb
dec
mov
adc
js
push
iret
insb
or
test
sub
in
mov
lds
or
jecxz
fadd
inc
dec
dec
push
xchg
shrl
adc
test
push
dec
frstor
add
pop
pop
ja
pop
jns
insl
mov
mov
mov
pop
mov
cltd
push
test
test
sub
in
ret
pop
jno
or
pop
sbb
jle
insl
mov
inc
loope
or
insb
bound
outsb
or
mov
es
pop
test
or
xor
dec
adcl
fwait
jb
gs
add
lcall
push
or
sub
sub
data16
fsubrs
sub
push
imul
icebp
and
and
push
stos
lock
mov
aam
in
stos
sub
lcall
rcl
mov
or
pop
adc
pop
lods
imul
jmp
mov
adc
mov
std
cmp
cmpsb
stc
negl
cmp
mov
or
pop
jnp
dec
lret
in
stos
inc
jae
push
mov
xor
lahf
push
adc
push
dec
mov
std
dec
push
push
cmp
xchg
or
push
push
sub
mov
jp
pop
cwtl
idiv
pop
rolb
mov
into
movsb
pop
pop
nop
aad
scas
in
in
stos
pop
push
lds
xchg
xorl
iret
insl
iret
xor
mov
sub
pop
or
stos
sbb
pop
xchg
xor
into
dec
int
mov
movsl
addb
or
pop
in
sub
jp
pop
shll
das
sub
sub
sbb
inc
and
fidivrs
fisubrs
dec
push
out
inc
mov
inc
cmpsl
jmp
sbb
sub
cmp
inc
test
xor
scas
cld
add
out
mov
or
adc
sub
push
pusha
scas
mov
xchg
or
inc
mov
push
adc
cltd
push
lds
loopne
lea
shrb
cmpsb
arpl
std
call
sbb
jno
or
sub
cmp
out
add
mov
push
xor
je
mov
jo
imul
ja
cmp
leave
scas
xchg
cmp
repnz
pop
test
cmp
out
scas
scas
mov
adc
fldt
pop
data16
mov
mov
test
imul
push
sahf
sub
dec
xchg
sub
scas
xchg
push
out
iret
insb
shll
bound
push
fnstcw
mov
rcrb
jb
fwait
xchg
jecxz
rcrb
mov
lods
fildll
jmp
mov
jne
dec
test
cmp
inc
repz
xchg
lea
mov
nop
or
js
scas
hlt
ja
and
or
or
pushf
mov
pop
rcrb
inc
aad
pop
cmpsb
mov
add
outsb
inc
fdivrs
push
dec
cmp
or
xorl
inc
stos
test
movsb
inc
std
dec
outsl
aad
push
mov
es
mov
sub
adc
push
shrb
inc
xlat
mov
insl
sub
sarb
pushl
hlt
push
clc
rolb
out
pop
shrl
add
daa
ret
int3
fidivrs
mov
adc
insl
mov
and
imul
loopne
pusha
mov
dec
cmp
sub
hlt
xor
jecxz
popa
mov
or
mulb
mov
dec
int
mov
add
insb
mov
dec
invd
push
pshufw
andl
adc
or
inc
xor
bound
cltd
push
lahf
and
aam
loopne
scas
ret
loope
movsb
daa
mov
fistpl
mov
pop
test
mov
add
popa
movsl
in
mov
jp
push
pop
pop
push
aam
pop
mov
jecxz
push
xor
ja
lock
pop
xor
out
mov
ret
lret
popf
xor
and
aas
bnd
mov
fidivs
cmp
int3
mov
mov
push
dec
es
lods
mov
popa
clc
mov
or
push
adc
add
mov
aam
sti
push
lahf
xor
orl
inc
notl
cmp
push
scas
scas
in
cltd
sub
test
push
bound
das
jns
inc
hlt
inc
and
pop
arpl
xor
loop
adc
in
fidivl
sarb
push
sbb
addb
xor
stos
movsb
or
bound
ja
push
dec
repz
inc
adc
sub
sub
stc
xchg
addl
rolb
cld
mov
and
xor
ret
arpl
xor
aaa
fists
adc
aad
repz
lret
aaa
out
add
std
pop
pushf
adc
adc
lret
push
jp
and
xchg
dec
popl
in
popf
xor
mov
xor
jb
inc
xchg
mov
adc
cmpsb
pop
fs
loope
adc
jecxz
xchg
in
add
repz
sbbl
bound
push
xchg
add
lcall
sbb
iret
xchg
or
mov
sub
out
imul
sbb
mov
add
sbb
test
addr16
push
push
loop
stc
jno
movsl
ss
pop
int
aam
inc
fldt
add
sub
dec
loope
aam
out
aaa
pushf
rep
call
and
ljmp
inc
imul
shr
iret
iret
inc
in
xchg
jbe
outsl
nop
fptan
xchg
icebp
test
xor
mov
lcall
sbb
xchg
push
push
adc
int
cmp
jns
sbb
jge
push
lds
push
mov
scas
les
fildll
ds
sahf
pop
jnp
out
ljmp
or
jg
imul
stc
inc
mov
sbb
mov
xor
shlb
or
stc
mov
add
xchg
out
addr16
ljmp
out
sbb
stc
mov
insb
out
fdivrl
sub
ja
cmc
test
xlat
call
xor
fstpt
push
popa
mov
jecxz
in
cs
mov
inc
insl
pop
cwtl
lods
mov
cmp
jns
pushl
cli
push
clc
lods
and
inc
in
stos
and
xchg
fsubrl
cli
sti
xchg
or
pop
gs
ffree
lcall
dec
negl
mov
dec
jo
fwait
cmp
adc
arpl
lds
mov
xor
pop
add
sub
icebp
dec
mov
inc
sbb
insb
mov
imul
add
test
dec
push
jb
pop
sbb
dec
in
inc
scas
lret
stc
sbb
loope
daa
faddl
pusha
ja
lods
test
loope
mov
out
sbb
xor
xor
lds
or
dec
lods
les
loop
cmp
xor
mov
jbe
jecxz
pop
jmp
and
cli
adc
xchg
push
pop
cmp
aam
daa
mov
mov
jmp
xchg
pop
push
lret
out
add
lret
adc
sbb
inc
or
mov
enter
pop
jno
int3
xor
loope
stos
inc
push
test
push
loope
loope
aas
sub
data16
je
adc
mov
ja
mov
xchg
adc
sbb
push
jmp
mov
test
pushl
push
push
push
push
xchg
cmp
aaa
mov
dec
mov
mov
xchg
mov
xchg
lods
repnz
andl
cmp
lods
push
stos
fldt
mov
cli
sub
mov
mov
std
xchg
addl
sub
jl
pop
ljmp
push
sbb
out
jns
mov
call
andb
cmp
or
xor
adcb
sbb
mov
imul
insl
push
dec
jnp
sub
inc
mov
addb
lods
test
mov
lods
xor
jb
stc
int3
sub
dec
xchg
in
loopne
lock
xor
ljmp
nop
jno
insb
xor
outsb
sub
dec
cmp
popf
sarb
cmpsb
mov
cli
bound
dec
jl
add
sahf
cwtl
xor
mov
push
add
fcompl
lods
jnp
sbb
cmp
sub
adc
das
lock
and
mov
dec
test
xor
stos
mov
sbb
sbb
jns
jns
sub
add
adc
jmp
mov
mov
bound
cmp
jb
cmp
das
test
mov
sahf
sub
xor
mov
ret
in
mov
out
repnz
insl
cli
scas
inc
or
sub
push
ja
mov
mov
and
mov
mov
scas
inc
xor
js
ds
dec
cmpsb
into
movsl
int3
cmc
adc
movsl
jnp
popf
lea
repnz
lock
push
movsl
outsb
jae
cld
imul
loope
outsl
sub
sarb
loopne
mov
repz
faddp
js
cmp
addr16
out
sub
pop
mov
cmp
cmp
popaw
xor
sbb
inc
sti
cwtl
cs
pop
sbb
add
cld
sub
ljmp
dec
insb
ret
sbb
xor
push
or
sbb
pop
rcrl
mov
imul
mov
ficoml
jl
aam
mov
stc
mov
xchg
sub
scas
aam
std
or
std
div
out
pop
push
fs
xor
in
int
imul
adc
jp
idivl
inc
cmp
ds
scas
jge
mov
push
in
jb
sub
push
cmp
jnp
lods
in
xor
inc
mov
cmp
push
pop
lahf
cmp
inc
movsb
push
mov
mov
fstpl
or
int
fldpi
push
mov
mov
sbb
cmp
scas
into
das
inc
dec
fisttpll
mov
pop
inc
outsl
in
loope
xor
push
roll
ljmp
in
adc
scas
pop
xchg
xchg
repnz
inc
adc
xor
lods
in
iret
bound
jl
xor
sbb
xchg
adcl
int
pop
lods
stos
lds
sbb
and
mov
mov
das
adc
pop
adc
push
gs
add
push
sbb
fistps
shrl
fst
mov
das
sahf
lahf
sub
or
add
pop
test
mov
xor
mov
dec
mov
lds
incb
stc
jo
or
dec
lret
add
inc
jle
hlt
jno
outsb
or
or
jbe
movsl
and
sub
xchg
mov
cmp
mov
sub
jmp
popf
lret
leave
enter
pushf
cmp
ror
mov
cmp
push
cmpsl
pop
call
inc
jl
mov
pop
cmp
cmpsl
pushf
stc
rcr
inc
mov
jecxz
sarl
in
cmc
ret
mov
mov
push
jle
cltd
test
mov
nop
fnsave
fs
or
les
lods
add
les
xor
push
mov
jns
dec
movsb
das
fwait
pop
das
sub
insl
cmp
repnz
push
hlt
add
cli
and
dec
pop
lds
ljmp
das
xor
iret
out
icebp
xrelease
sahf
jnp
jp
lahf
jge
dec
fwait
loope
push
add
jo
and
mov
or
mov
call
jbe
dec
add
cwtl
pushf
xchg
out
aas
mov
jne
pop
xchg
lods
cmp
adc
push
or
pushl
add
dec
mov
in
lret
sub
mov
sbb
xor
js
pop
loope
inc
pop
shll
in
test
fimuls
je
push
lcall
jecxz
loop
out
push
jmp
sbb
xlat
push
arpl
sbb
push
and
jnp
jl
or
pop
pop
cs
xchg
cs
sbb
icebp
mov
into
or
xor
outsl
ss
jo
dec
adc
or
push
std
arpl
loopne
leave
call
fwait
repz
push
outsb
fldcw
sub
xchg
xchg
add
jecxz
imul
dec
sbb
addr16
sub
and
or
sbb
xchg
xchg
mov
out
xchg
in
insl
push
mov
stos
lahf
pop
mov
inc
lcall
xchg
iret
xor
es
insb
inc
pop
or
mov
xor
push
lret
pusha
push
pop
mov
enter
int
inc
mov
xchg
add
jbe
add
arpl
cs
push
mov
sub
lods
inc
loop
fcomps
jno
inc
frstor
push
or
xchg
add
mov
lds
int3
mov
mov
cmp
cmp
fcomps
shrb
xlat
add
hlt
out
push
loop
xor
jno
scas
popf
push
addr16
rol
pop
jg
aas
lods
sti
pop
aam
das
cmp
xor
sahf
cs
mov
into
orl
mov
fistpl
out
stos
sbb
jnp
jno
jno
or
add
xchg
xor
fidivl
xchg
ret
imul
imul
outsb
outsl
call
in
pop
rclb
repz
pop
sub
inc
pop
loopne
js
loopne
and
idivl
ljmp
arpl
neg
ret
jg
xor
and
adc
shrb
hlt
jno
lods
movsb
nop
mov
mulb
cli
add
dec
jnp
sbb
out
stc
mov
movsb
loopne
inc
stc
mov
xor
imul
inc
push
lea
scas
dec
sub
je
repnz
cmp
xor
into
inc
cmp
push
xchg
mov
arpl
add
adc
jb
es
out
mov
repz
dec
mov
adcb
in
in
sub
push
in
sub
adc
xchg
pop
mov
add
jge
mov
scas
jns
push
cmp
mov
inc
scas
xchg
loope
xor
mov
dec
cmpsb
lods
repz
or
fdivrs
enter
xchg
inc
pop
jecxz
out
frndint
leave
or
lahf
dec
repz
movsl
pop
movsl
sub
in
push
stos
push
lds
inc
int3
lcall
stc
push
push
ja
loop
pushf
push
dec
cmc
pop
xchg
lds
dec
xchg
pusha
mov
ror
std
and
stc
adc
pop
loop
mov
daa
inc
je
and
pop
mov
lods
push
add
fxam
jmp
cltd
in
mov
mov
les
mov
xchg
stos
or
aas
jge
mov
sbb
pop
inc
les
mov
mov
inc
repnz
xlat
jle
sub
push
shll
xchg
ret
mov
xor
jecxz
dec
dec
mov
int
adc
mov
cmp
and
ret
add
cmp
lret
and
pop
out
das
ds
es
lcall
dec
sbb
adc
push
insl
testl
std
xchg
daa
data16
shr
iret
inc
lock
call
into
neg
xor
jno
cli
std
jl
ret
test
ss
scas
jnp
ds
inc
std
pop
leave
inc
push
das
lds
and
cmpb
jne
sbb
mov
dec
into
mov
icebp
rol
cmp
mov
sub
fisubrl
jbe
je
lods
jle
imul
xor
bound
push
jnp
test
std
daa
leave
sysret
int3
xor
inc
jne
enter
fidivs
jae
iret
pusha
push
mov
in
pushf
mov
sub
cmpsl
cmp
inc
repz
mov
out
movl
addr16
fiadds
or
test
adc
fadd
mov
pop
movsl
push
cmp
pop
loopne
xchg
mov
ss
dec
jge
gs
scas
popf
aam
inc
push
lcall
lret
call
inc
imul
enter
shrb
mov
loopne
jmp
movb
hlt
sahf
outsb
or
fs
xor
adc
inc
xor
mov
dec
shlb
mov
les
fwait
call
xchg
movsb
mov
sbb
push
cmp
subl
adc
mov
inc
and
push
adc
jno
mov
xchg
inc
push
idiv
loope
aad
aad
out
xchg
sti
or
xchg
jl
pop
xor
fistpll
leave
popf
adc
jne
xchg
aad
push
je
push
jae
xor
jg
lcall
loope
mov
pop
sub
loop
jno
pusha
and
jle
insl
cmp
jl
xchg
adc
lods
push
daa
mov
loope
rorb
pusha
xor
adc
or
enter
or
out
fucom
jmp
push
or
jmp
mov
rorb
push
aam
inc
pushf
lcall
cld
adc
cmp
jle
xchg
pop
adc
sub
fcomps
ljmp
test
pop
addr16
nop
cmc
sbb
leave
std
imul
add
bound
test
jl
roll
sub
sbb
push
rcrl
sbb
das
push
out
repnz
xchg
jno
jecxz
cmpsl
mov
jae
sub
shrl
inc
xlat
push
frstor
mov
imul
lock
pop
or
in
push
lret
mov
push
mov
inc
jne
rcl
and
pop
and
cli
mov
outsb
sbb
leave
addr16
loope
stos
push
scas
lds
lret
scas
icebp
sbb
sbb
leave
pop
sbb
dec
pop
jno
push
and
cmpb
mov
mov
in
mov
sub
xchg
jns
mov
cmp
rorl
mov
cmp
fsts
lods
lret
push
rclb
xchg
mov
xchg
scas
dec
pop
mov
mov
push
fsub
mov
lea
das
pop
pop
sbb
xchg
jb
jns
cmpsl
pusha
mov
and
sbb
xchg
lcall
pusha
sub
call
cwtl
test
xchg
sti
imul
fwait
mov
adc
es
mov
mov
xor
inc
lea
and
adc
ss
daa
mov
mov
stos
dec
rcl
or
or
mov
xchg
lea
push
stc
pushf
or
ret
mov
out
popf
jmp
and
dec
mov
shll
or
scas
inc
pusha
ret
arpl
adc
call
arpl
imul
mov
mov
jmp
pop
mov
ret
aad
pop
das
cs
pop
int
inc
imul
dec
pusha
test
xchg
fs
inc
cmp
mov
testl
loopne
xchg
sbb
cmp
ja
jge
lds
add
add
lret
ljmp
jae
out
jg
aaa
fidivs
and
rorl
ror
push
xor
xchg
pop
or
jb
nop
and
jl
test
lods
add
sbb
ucomiss
fadd
add
mov
insl
cmp
mov
fwait
sub
bound
test
jno
mov
dec
loope
jg
sbb
adc
lea
xchg
inc
sub
add
aam
rorl
in
xchg
dec
outsl
lea
gs
out
lret
loop
or
loopne
loope
pop
popf
insb
enter
mov
pop
repz
mov
jle
pusha
lahf
dec
nop
cltd
cmp
inc
test
mov
adc
jnp
push
mov
pushf
lret
fwait
pusha
adc
sbb
inc
xor
addr16
cmc
sbb
dec
call
sbb
stc
outsb
adc
call
push
incb
and
mov
pop
inc
add
pop
mov
stc
les
mov
sub
shl
adc
les
xchg
fwait
xor
movsl
lahf
fwait
cmp
scas
shl
fistpll
call
push
dec
pop
xchg
call
pop
int
ja
das
arpl
mov
popa
add
in
addr16
add
into
push
jnp
popa
leave
roll
inc
jmp
dec
nop
pusha
jnp
bound
add
cmpsl
dec
je
loop
test
repnz
std
mov
lock
xor
push
sbb
mov
in
push
jae
out
pop
pop
and
scas
cwtl
ljmp
leave
push
loope
mov
dec
push
stos
in
jmp
arpl
pushf
cli
ja
fwait
inc
std
lock
or
xor
jno
popa
arpl
daa
pop
push
jl
sti
fdivs
lock
mov
jns
adc
add
fidivl
notl
repz
in
cmpsb
mov
cli
rcrb
dec
test
jl
in
mov
sbb
and
xor
jb
int
sub
fucomp
jle
push
jl
jl
mov
cmpsb
fwait
xor
in
add
push
arpl
push
pop
shlb
fidivl
out
aam
and
and
mov
inc
roll
mov
mov
icebp
shlb
adc
jmp
sub
and
in
mov
jp
mov
mov
data16
push
push
or
mov
and
in
nop
inc
call
xor
add
mov
in
jnp
jno
and
aam
jne
ss
mov
jns
pop
imul
jg
xor
or
in
mov
and
aaa
pusha
xor
out
enter
adc
push
pop
xchg
pop
push
pop
ret
das
mov
fsubrs
and
mul
xchg
loopne
jne
pop
push
sbb
jne
cli
push
xchg
lret
add
or
sbb
mov
repnz
mov
sub
dec
or
dec
pop
in
adc
stc
cmp
adc
sub
cmp
xchg
mov
pmullw
in
fnstsw
pop
sarb
mov
adc
les
dec
sub
jne
insb
adc
mov
dec
dec
repnz
adc
inc
dec
jg
mov
inc
mov
ficompl
cmp
add
cmpb
arpl
xor
repnz
sti
cltd
cmp
lock
popf
mov
or
out
pop
testl
mov
and
inc
jl
mov
pop
xlat
cmpsl
mov
outsl
xor
scas
mov
iret
mov
jl
adc
lahf
flds
insl
outsl
in
cs
sub
rcll
jne
sahf
leave
pop
sub
rcl
jle
inc
push
dec
cltd
aaa
push
mov
jmp
test
jl
inc
es
adc
push
loop
test
mov
aas
in
mov
jb
sti
imul
in
xor
inc
or
out
cmp
sbb
pusha
shll
push
sbb
xor
lds
sub
lea
mov
aad
repz
adc
mov
xor
xchg
push
les
fbld
xor
aaa
push
in
push
loop
jo
test
pop
xor
xlat
push
pop
andb
rorb
mov
dec
add
sub
mov
sbb
popa
or
addr16
xlat
out
pop
cwtl
inc
leave
jge
cld
fwait
cmpsl
mov
sbb
sub
out
or
jns
cmpsl
cmpsb
pop
icebp
cmp
cmp
movsb
mov
ss
inc
mov
fsubrs
fdivrl
aas
lea
fcmovbe
addl
push
jmp
hlt
rol
dec
or
pop
sbb
cmp
xchg
cmc
dec
xchg
and
mov
pop
in
movsl
push
xchg
dec
adcl
icebp
xchg
repnz
jl
cli
out
adc
mov
movsb
loop
cs
les
add
fstpl
adc
notb
rcrb
imul
dec
cmp
cmp
mov
das
mov
or
sbb
loop
sub
orl
divl
inc
lret
ja
in
adc
mov
nop
enter
fwait
adc
jbe
push
or
sub
mov
push
jo
mov
cmp
loopne
in
jle
js
cmpsb
add
push
sbb
pop
lahf
or
adc
dec
addr16
test
das
push
push
xor
mov
add
mov
add
mov
xlat
decl
push
or
aam
add
jne
mov
and
mov
sub
loop
xor
test
xchg
cmc
imul
mov
jl
inc
movsb
scas
ljmp
or
insb
ja
ret
pusha
hlt
scas
add
xchg
jp
mov
lds
sbb
dec
inc
mov
push
jae,pt
xchg
ret
call
fcoml
sub
idivb
or
xchg
fadds
imul
xchg
std
ja
cmp
mov
mov
jg
mov
out
and
stc
dec
in
daa
or
jp
mov
xor
xchg
cmp
shlb
xor
loopne
or
ljmp
push
sub
adc
mov
jecxz
int3
push
cmp
add
iret
mov
test
lods
mov
lahf
sub
sbb
bound
jmp
xchg
jl
stc
or
or
leave
and
pop
rorl
or
std
xchg
repz
pop
push
in
lret
cli
adc
pop
enter
jo
pop
push
push
dec
repz
sub
push
xchg
imul
inc
mov
repnz
jne
mov
ss
mov
loopne
bound
push
out
push
or
pop
jle
dec
imul
orb
fwait
cmp
add
pop
mov
xor
sbb
repnz
inc
ficomps
or
xchg
sub
insb
gs
inc
cwtl
adc
enter
arpl
dec
or
push
test
mov
stos
or
out
es
push
mov
sbb
fidivl
rcr
dec
ljmp
dec
std
xchg
shl
sbbb
push
dec
dec
divb
pop
push
mov
mov
insb
jbe
sbb
cld
or
gs
btc
js
inc
sub
dec
jle
or
test
xchg
out
xchg
jge
xor
aad
popf
mov
jg
ja
addr16
in
repnz
pop
nop
lret
mov
incl
xor
sbb
int
icebp
repz
pop
loope
mov
cmpsb
sbbl
pop
lret
lcall
push
add
outsl
and
mov
push
and
dec
rol
movsl
sbb
add
inc
pusha
cmp
call
push
rorl
inc
in
xchg
cmpsb
addl
mov
or
cmc
jge
fistpl
sub
lret
push
or
aad
mov
dec
push
cltd
movsl
sub
add
lcall
out
movl
xchg
cmp
sbb
mov
mov
inc
xchg
cltd
fwait
sbb
cmp
stos
mov
sub
movsl
pushf
cmpsb
fstl
jg
fcoml
push
mov
mov
and
inc
or
push
gs
sub
popl
add
fists
add
pop
xchg
add
xchg
adc
mov
sub
fs
sub
inc
mov
popf
mov
mov
int3
sbb
test
lods
sub
mov
repnz
inc
pop
je
mov
sub
test
pop
inc
xchg
test
bnd
pop
push
notl
pop
lods
shll
push
inc
je
int
loope
push
dec
cmp
sbb
mov
testl
test
adc
sub
mov
fdiv
pop
jmp
add
xor
scas
leave
jns
adcl
xor
leave
xlat
out
jb
pop
jbe
jne
mov
jnp
sahf
call
and
popa
imul
adc
fmuls
std
sub
jge
fwait
sarb
sbb
mov
dec
pop
add
adc
les
loope
shld
xor
aam
add
in
xor
mov
mov
test
aas
testb
lods
stos
scas
cs
push
pop
pop
pop
jp
push
dec
inc
cwtl
sbbb
insl
jmp
ja
adc
into
jbe
sub
mov
scas
mov
add
addr16
jnp
out
cwtl
mov
jb
leave
imul
jns
xor
dec
lods
adc
jbe
jl
inc
xchg
push
push
add
rolb
addr16
lock
xchg
rcrb
add
xchg
lahf
cwtl
and
add
test
jmp
push
insb
xor
sbb
sahf
add
inc
inc
push
out
xchg
mov
leave
add
loopne
xchg
outsl
sahf
push
push
jo
iret
or
inc
jae
jmp
jo
ret
add
in
insl
sahf
fidivrs
adc
leave
into
and
xor
lea
arpl
in
jnp
loop
int
mov
xor
fsubr
shlb
cmp
xor
jg
ja
xchg
loope
divl
insb
ds
fidivs
lods
push
std
dec
mov
xor
bound
out
or
mov
orl
cmc
cmc
or
jo
rcrb
xchg
icebp
lods
loope
mov
cmp
adc
arpl
add
mov
repz
xchg
lods
mov
xor
loope
rclb
ss
js
mov
mov
mov
jge
jo
mov
inc
mov
out
push
mov
inc
push
lock
std
jmp
pop
test
pushf
jns
in
pop
pop
cmpsb
scas
mov
mov
stc
cmc
lcall
push
adc
xchg
sbb
je
xlat
aaa
adc
aam
and
sti
frstor
sub
iret
test
cwtl
mov
inc
popa
mov
aaa
aas
pop
push
dec
push
fadds
inc
mov
xchg
dec
es
and
mov
mov
cmp
mov
mov
loop
sbb
ss
pop
in
push
mov
add
fst
inc
mov
xor
adc
dec
add
out
add
xchg
xor
cmpsb
stos
ss
dec
pop
or
mov
sub
cmpsb
pop
pop
and
movb
push
cs
fs
xchg
cmpb
mov
pop
stos
addr16
jecxz
xchg
cmp
in
and
lds
adcl
dec
outsb
jge
mov
sahf
mov
loopne
je
pop
xchg
enter
xorl
mov
addr16
mov
bswap
push
dec
inc
insl
cmp
xorb
stc
jnp
jle
pop
ret
and
or
mov
out
test
loope
xchg
ds
and
and
dec
push
cli
sub
jge
pop
fwait
mov
insl
cwtl
stos
mov
lahf
lds
fcompl
ds
cmpsb
mov
add
mov
mov
xlat
cwtl
testb
cwtl
loopne
pop
test
ss
pushf
adc
out
ss
popaw
fwait
xchg
inc
sarb
push
lcall
push
shrb
push
in
rcrl
dec
in
in
push
push
sub
roll
mov
or
push
xchg
lock
xor
push
xor
clc
dec
xchg
dec
rcrl
int3
bnd
jnp
pop
mov
lock
or
mov
inc
cs
out
mov
shl
sub
lret
out
inc
int3
scas
pop
idivl
cmpl
pop
add
pop
fildll
pop
int
or
inc
aad
insb
pop
xor
xor
xchg
sbb
mov
adc
sbb
idivl
pop
xchg
xchg
mov
mov
icebp
cwtl
jne
inc
daa
shlb
push
shlb
cs
xor
push
or
lods
push
cmp
push
test
cmp
shll
pop
pusha
xchg
popf
in
jecxz
icebp
fisttpl
cmc
pop
dec
es
testb
mov
push
pop
in
pop
push
xchg
insb
hlt
pop
lock
test
lods
cld
aam
push
cmc
arpl
imul
xchg
push
mov
add
sub
js
sub
sub
jne
or
mov
movsl
sbb
jl
and
cwtl
mov
pop
mov
popf
pop
dec
ret
shlb
enter
adc
adc
rclb
arpl
aam
adc
inc
fs
mov
cmp
and
stc
call
ja
imul
dec
mov
xor
sbbl
loopne
xlat
push
pop
add
lret
lret
add
in
push
xchg
in
test
pop
add
sub
mov
push
mov
sub
jl
pop
cmp
mov
arpl
icebp
in
sbb
jno
daa
rorb
pop
outsl
in
out
cmp
jg
pop
arpl
cmp
push
add
in
rolb
push
push
xor
enter
push
bound
in
data16
mov
sahf
mov
ds
fadd
sbb
insl
in
cmp
dec
add
addl
dec
adc
pop
lret
ss
js
add
lock
mov
push
add
sub
ja
pop
call
scas
mov
mov
dec
dec
test
loopne
xor
dec
or
insb
loopne
sub
push
pusha
fnstsw
aaa
int3
inc
mov
aas
pushf
in
into
inc
loopne
cmp
adc
jno
pop
sub
inc
or
or
into
ds
rcrb
xor
mov
loopne
fisubrl
cwtl
push
loope
adc
stos
pop
pop
xor
sbb
das
xchg
rcrb
and
or
stc
popa
pop
mov
aaa
dec
or
pop
mov
scas
orb
movsl
mov
mov
mov
aaa
das
sub
xchg
aaa
ljmp
or
mov
cmpsb
jmp
jmp
dec
push
push
sahf
popf
repnz
enter
mov
mov
test
out
pop
xor
lret
push
adcl
lods
sbb
jg
dec
inc
dec
inc
sar
push
dec
outsb
mov
sub
pusha
divl
cld
mov
sbb
fiaddl
xchg
lds
icebp
xor
les
sub
nop
repnz
fwait
sub
in
xchg
mov
fcomps
pop
repz
sbb
xor
pop
pop
loope
cmp
dec
and
insl
inc
scas
add
fidivl
mov
xchg
pushf
into
sahf
outsb
jnp
scas
frstor
jge
into
shll
pop
sub
cmp
jae
lds
sub
sarb
not
adc
fcomps
ljmp
mov
sub
loopne
pop
icebp
mov
pop
mov
add
adc
xchg
lcall
sti
addl
js
pop
add
or
jmp
jl
push
daa
dec
ds
imul
add
xchg
and
jne
sub
incb
insl
xor
nop
add
aam
xchg
xchg
lret
mov
fidivs
addr16
push
out
arpl
mov
inc
inc
iret
loope
aas
or
fadd
xchg
xor
into
repz
mov
pop
movsl
xchg
push
cmp
shl
enter
adc
sbb
out
mov
jno
mov
push
xor
repz
add
push
test
mov
out
int3
fwait
ret
ljmp
ljmp
xorps
popa
ja
mov
lods
and
rorb
lahf
mov
popf
ss
xor
sub
sub
fsubs
loop
divl
cmc
pop
dec
mov
mov
sub
rcrl
cmpsl
or
ja
push
pop
out
cmp
xor
std
into
push
xor
shrb
dec
gs
mov
xor
outsl
mov
pop
dec
push
xchg
loopne
xchg
ret
add
decb
movsl
test
jge
fwait
adc
inc
push
push
add
mov
pop
mov
scas
pop
and
and
mov
and
lds
mov
leave
jmp
js
or
je
loope
mov
push
fldl
sub
sub
pushf
daa
xor
aam
add
in
mov
xchg
popa
lcall
adc
dec
in
scas
in
jl
xchg
jb
jg
add
loop
lock
adc
xchg
into
imul
dec
jne
test
mov
dec
shl
xor
add
mov
hlt
fsubrl
subl
repnz
insl
stc
mov
lcall
cli
cli
xchg
adc
cwtl
imull
sbb
lcall
dec
mov
push
mov
aaa
dec
fsubrl
ret
hlt
mov
add
push
fdivs
pushf
aam
out
into
push
lret
mov
inc
fistl
jbe
xchg
xlat
sti
jae
push
dec
es
sti
sti
nop
mov
inc
jae
popf
in
test
inc
cmp
jmp
jge
scas
sub
hlt
jo
sub
inc
addb
xor
inc
out
xor
movsb
mov
cmpsl
push
out
lea
pop
cs
test
decb
imul
hlt
rcll
mov
inc
mov
inc
in
push
repnz
shrl
fistpll
fistpll
out
das
mov
inc
mov
mov
xor
adc
and
leave
out
jns
cmp
xor
cmpsb
pop
xor
sub
hlt
stos
and
lahf
insl
ficoms
ja
stos
push
aad
sub
in
jbe
leave
mov
add
sub
sub
fcmovnu
insb
or
pop
push
push
mov
sbb
rcr
xor
ja
lcall
inc
mov
leave
ja
clc
lcall
gs
rorb
and
or
cltd
je
ss
jb
rorl
movsb
shll
push
pop
push
ss
or
xor
dec
push
jmp
je
loopne
dec
leave
hlt
aas
lods
and
xchg
cmp
mov
xor
cmp
outsl
popf
call
popf
xchg
fdivs
fwait
dec
add
adc
repz
pop
sub
mov
sbb
xor
jle
in
jmp
mov
pop
fisubrs
rclb
xchg
enter
arpl
out
test
pop
add
xchg
sbb
dec
in
call
ret
stc
cmp
inc
and
loope
inc
test
jp
daa
mov
mov
lea
adc
push
pop
adc
xchg
call
sbb
test
and
popf
jae
mov
xchg
pusha
mov
stc
loopne
mov
mov
xchg
dec
pop
clc
aam
rolb
aaa
mov
and
jno
movsb
push
cltd
aam
mov
cmp
ret
hlt
imul
mov
mov
or
cltd
jns
add
sub
jle
cmp
loop
sbb
add
stos
leave
adc
adc
cmp
adc
movsl
fiaddl
fcompl
push
repnz
lret
inc
add
xchg
mov
sbb
cmp
xor
out
and
push
push
pop
lret
std
pushf
stc
pop
dec
inc
or
lods
or
loopne
fwait
push
into
pop
fsubl
test
pusha
xchg
xchg
idiv
out
mov
push
mov
mov
sbb
push
jae
sub
and
movsb
andl
loope
out
jae
mov
xor
jnp
stos
mov
push
rcrb
push
xchg
hlt
das
adc
sbb
xor
in
cmc
push
aas
jp
es
das
aaa
xchg
ficoml
adc
iret
dec
mov
aad
dec
pop
lcall
push
sbb
test
jg
ret
int3
pop
pop
ljmp
and
test
ficomps
and
movsl
loop
stos
push
int3
mov
stos
inc
mov
cmpsl
mov
stos
stos
inc
mov
jecxz
popf
aad
lods
xchg
xor
xorb
add
ljmp
push
and
mull
cmpsl
jecxz
jo
adc
test
push
add
push
adc
mov
out
add
sti
iret
addr16
enter
outsb
sahf
mov
in
cmp
popa
mov
or
frstor
clc
bound
cmp
mov
das
mov
pop
in
pusha
mov
cmpsl
mov
sub
inc
push
rep
fcom
test
sub
shlb
or
xchg
push
adc
push
gs
sub
addr16
scas
fistpl
pop
js
inc
jecxz
scas
ljmp
inc
fisttpll
pushf
stos
pop
jb
xchg
xor
ja
jns
rolb
pop
xchg
xor
aaa
add
lahf
mov
xor
movsb
decl
orb
jge
div
pushf
lret
ljmp
je
andl
and
or
mov
mov
fcompl
pushf
insb
insb
jo
fbld
andl
lret
xchg
pop
mov
pusha
rcl
and
sub
adc
loopne
les
outsl
mov
cmpsb
cmpsl
push
mov
inc
inc
add
cmc
dec
mov
adc
ljmp
mov
sbb
push
jo
xor
fsubrl
xchg
mov
ret
jecxz
stc
movsb
sub
dec
roll
fcomip
mov
sbb
mov
push
dec
in
dec
aam
lcall
cmp
jns
std
mov
and
jnp
scas
popf
cmpb
cmp
pop
add
add
push
inc
clc
or
mov
pushf
stos
mov
push
aam
fwait
sarl
jae
repnz
daa
jb
jae
sub
insb
fdivrp
sbb
add
int3
add
mov
sub
inc
adc
inc
pop
xchg
xchg
push
test
push
cs
mov
push
in
mov
add
fsubrl
ret
and
mov
dec
repz
xchg
test
int3
pusha
pop
mov
pop
inc
bnd
inc
lea
inc
or
push
inc
cmpsl
adc
lea
sub
xor
inc
fwait
or
xchg
into
iret
ljmp
mov
fbld
jne
inc
mov
pop
jecxz
jno
mov
mov
sbb
mov
dec
lock
inc
cmp
sub
clc
push
xor
scas
out
or
dec
mov
and
mov
push
jae
inc
lods
pop
mov
cmpsl
ret
or
or
ror
addr16
xor
jns
stos
cmpsl
les
shlb
cltd
sbb
mov
dec
cmpsb
adc
mov
push
fs
dec
insl
mov
mov
sbb
shrb
sahf
adcl
scas
mov
jp
add
aaa
adc
dec
sub
std
xor
cwtl
or
das
nop
sbb
insl
inc
xchg
pop
fcmovnbe
fidivl
into
fdivs
enter
test
push
dec
in
or
iret
sub
pop
dec
fadds
cmp
ja
pop
jle
test
in
lea
sub
gs
ljmp
xchg
aaa
test
push
dec
add
adc
pop
daa
std
mov
cmc
jbe
shrb
dec
lret
out
movsl
leave
sub
iret
js
out
pop
aad
mov
mov
push
xor
add
and
add
adc
sbb
cld
push
stos
xchg
mov
neg
ljmp
movsb
adc
or
ljmp
mov
in
pop
jns
aas
cmp
push
xor
gs
imul
dec
mov
addr16
in
pop
mov
pop
je
cmpsb
pop
xlat
or
addr16
ds
push
ljmp
aam
or
jnp
mov
in
mov
xor
adc
mov
loop
mov
inc
pusha
mov
xchg
arpl
popfw
adc
xor
mov
or
fldt
mov
sarl
xchg
mov
push
aad
sti
stos
es
jb
pop
ja
sbb
aas
add
roll
jl
inc
aad
bswap
lret
out
jns
push
outsb
movsl
fs
rcrl
jmp
subb
add
out
pop
out
loop
inc
mov
push
mov
call
pop
xorb
in
xor
je
jg
mov
and
push
or
xchg
scas
jnp
jl
pop
pop
iret
ficompl
stc
fnstcw
into
inc
pop
mov
mov
in
and
add
idivb
cs
mov
cmp
jl
push
int3
test
mov
lret
xor
inc
xchg
cmpsl
sbb
pop
mov
and
dec
add
icebp
push
adc
mov
mov
stos
push
xlat
std
mov
sub
repz
in
and
lods
scas
cltd
xor
pop
test
inc
orl
pusha
mov
mov
add
xchg
andb
jbe
inc
sub
fsubs
push
or
aad
mov
push
mov
lods
popf
xor
aad
in
popl
cmp
inc
pop
jno
adc
in
adc
je
or
mov
xchg
sub
fwait
push
push
popf
push
add
dec
mov
mov
int3
fdivl
and
shrl
xchg
mov
daa
lcall
cld
hlt
shll
xchg
jmp
xor
adc
daa
xor
negb
scas
sub
cmp
adc
arpl
push
xor
leave
pop
sub
xchg
and
scas
fwait
ja
sahf
pop
xor
movsb
mov
dec
sbb
push
inc
push
cwtl
adc
add
daa
lods
sub
daa
mov
loope
jg
dec
sub
pop
mov
mov
pushf
dec
rcrl
inc
mov
pop
shrb
push
xchg
je
loope
ficomps
push
xor
and
sub
sub
adcl
or
push
aas
sbbb
or
xchg
loop
mov
mov
test
push
mul
push
cmp
or
jle
cmpsb
mov
test
adc
push
xchg
rcrb
mov
jae
rcr
lahf
or
addb
mov
ljmp
push
pop
fistl
mov
ljmp
data16
pop
adc
adc
and
mov
cwtl
mov
mov
arpl
sub
and
sub
cltd
lret
mov
lods
pop
imul
rcr
ja
adc
rcll
sbb
lahf
mov
imul
adc
xchg
movsl
fdivr
inc
add
enter
roll
stos
jne,pn
push
aas
jae
pop
push
test
es
repnz
sub
xor
sbbl
inc
or
adc
lds
icebp
push
and
ficompl
jge
out
insb
hlt
push
mov
addl
mov
je
sub
xchg
fwait
mov
push
mov
ds
popf
pop
ja
cwtl
in
xor
and
and
sbb
jns
shrb
mov
xchg
sub
xchg
adc
jnp
icebp
rcr
pushl
stos
dec
std
shr
mov
cmpsb
fisubrs
mov
inc
imul
cwtl
xorb
xchg
pop
sub
mov
mov
ss
xor
sub
dec
jbe
mov
xlat
ror
sub
mov
jecxz
push
push
pop
push
jno
fnstcw
jbe
loopne
repnz
sbb
fiaddl
out
ror
cmpsb
push
mov
lock
adc
cmpsl
pop
loop
xor
enter
dec
int
arpl
mov
xchg
lds
push
fcomps
out
pop
out
lret
das
xchg
sbb
in
lea
cmp
pop
roll
addr16
push
mov
dec
inc
cld
std
addr16
scas
pop
push
mov
push
sub
nop
aam
cmc
addl
pop
out
test
fdivs
fsub
mov
lret
and
div
je
push
std
movsl
popf
and
lds
mov
cmp
adc
xchg
or
sbb
xchg
lcall
in
adc
cwtl
ret
rolb
call
push
push
lds
out
in
mov
pop
jp
movsl
mov
push
pop
fsts
xor
lret
mov
mov
adc
push
mov
pushf
popa
push
cld
test
out
xchg
mov
iret
and
sub
cmp
xor
shlb
push
pop
sbb
cmp
repnz
mov
inc
stc
adc
push
addb
dec
adc
sahf
jne
mov
bound
iret
push
pop
inc
pop
mov
ficompl
hlt
adcb
scas
fisttpll
movsb
lods
jp
or
test
mov
and
int
js
sub
pushf
das
je
enter
bound
andb
loope
fcoml
xchg
mov
shll
push
adc
rolb
aad
sbb
mov
sbb
push
or
pop
mov
mov
pop
pop
jnp
mov
repnz
mov
bound
jge
iret
jge
fwait
cmpl
decl
dec
jo
test
test
scas
add
dec
lods
push
sub
lahf
jmp
jne
or
jbe
aas
notb
jo
mov
clc
jnp
sbb
push
scas
stos
mov
xchg
pop
jno
loope
push
movsl
cmp
in
cli
xor
outsl
mov
xchg
jmp
cld
dec
pop
sbb
jnp
push
roll
cmpsl
movsb
aad
mov
arpl
mov
push
lea
pushl
inc
cld
inc
xchg
adc
pop
mov
xchg
addl
mov
dec
add
cmpsb
add
cs
aam
lret
xchg
mov
dec
lahf
into
pop
mov
add
xlat
repnz
ficompl
dec
pushf
sbb
adc
ja
and
aaa
iret
jge
and
lcall
fcompl
add
ja
nop
cmp
push
rcll
pop
xor
addr16
gs
sahf
or
shrb
pop
out
fwait
mov
xchg
in
add
push
out
or
jo
pop
lods
mov
push
shrb
jg
imul
loop
test
inc
xchg
xchg
test
mov
push
cmp
xchg
js
stos
arpl
fs
dec
push
scas
pop
nop
sti
and
repnz
dec
repnz
xchg
fs
push
xor
mov
dec
dec
add
movl
loopne
jl
dec
push
enter
rcll
xor
aas
inc
in
pop
cmc
push
jle
ljmp
pextrw
mov
dec
pop
incb
decl
mov
dec
scas
cwtl
add
pop
scas
xchg
testl
int
or
cmp
clc
pop
test
dec
lahf
jmp
jge
nop
out
xor
fisubrl
pop
mov
test
mov
or
sbb
into
shll
xchg
aas
xchg
loopne
fstpt
push
inc
mov
xchg
cmp
pop
das
xor
adc
jns
sarl
xor
in
ret
pop
pop
dec
inc
sbb
aam
enter
and
adc
loopne
jmp
mov
dec
sahf
mov
sub
std
data16
inc
xchg
and
mov
dec
xchg
call
fstl
and
cli
clc
push
fucom
outsb
mov
stos
je
adc
pop
aaa
jae
sub
aam
shll
mov
int
adc
int3
ss
pusha
adc
loopne
jae
into
xchg
jns
cmp
fdivrl
out
adc
xor
sbb
dec
fdiv
ja
out
ret
pop
sbb
repz
out
jb
lahf
lret
pop
xor
xor
push
inc
movsb
dec
scas
and
mov
hlt
mov
mov
xchg
popl
rol
cmpsb
pop
sbb
cmp
xchg
cmp
aas
cmp
lret
cmp
jle
jl
jp
fisttps
sti
or
mov
xor
push
xchg
insl
pusha
dec
pop
mov
jl
push
subb
mov
lock
mov
js
and
mov
cmp
test
dec
mov
in
fistl
fists
ja
test
push
dec
loopne
in
mov
insl
ljmp
push
repz
lahf
and
int
in
cwtl
outsl
or
mov
push
rclb
movsb
dec
clc
leave
mov
mov
dec
dec
sbb
xlat
scas
je
push
dec
fwait
cmp
hlt
gs
out
mov
dec
icebp
adc
rorl
jg
inc
packuswb
mov
ds
sarb
int3
mov
push
fdiv
mov
lds
popa
ja
jmp
push
push
aam
loope
rcrb
ficomps
dec
or
mov
loopne
sub
out
add
and
adc
aas
shlb
je
ja
jnp
cmp
dec
sti
ss
ret
decb
pop
popf
vmread
push
fisubrs
jmp
inc
mov
xor
popa
fbld
jbe
aas
negb
add
mov
cmp
in
dec
addb
stc
popf
mov
dec
jae
pushl
enter
or
icebp
dec
lods
lcall
test
xchg
jp
pop
ret
lret
dec
jb
fs
cltd
xchg
xchg
xor
movsl
pop
arpl
dec
dec
cmp
in
adc
adc
push
xor
mov
adcl
int3
rclb
push
add
cltd
push
mov
dec
insl
push
rorb
sub
xlat
push
sbb
into
push
add
mov
mov
adc
inc
call
jge
addr16
cmc
lahf
xor
lds
xor
inc
mov
jle
lret
das
iret
mov
std
mov
test
imul
pop
inc
jae
sbb
xchg
mov
add
icebp
test
sub
insb
cmpsl
adc
cltd
int
roll
jns
and
xor
mov
add
std
in
fld
xchg
cli
movsl
incl
inc
push
sbb
cli
and
ds
push
or
ficompl
inc
jae
mov
shlb
fmuls
mov
popf
xor
push
add
in
subl
push
adc
and
sub
or
stc
out
push
and
iret
es
jbe
icebp
sub
sub
adc
cmpb
push
imul
mov
push
pminub
xchg
cmp
cmp
mov
fbld
and
stos
sbb
popf
xor
and
mov
jmp
add
stos
aad
inc
mov
sub
into
test
xchg
rcl
ret
dec
adc
repz
negl
or
pop
inc
movsb
mov
sbb
add
lahf
dec
or
mov
push
in
outsl
iret
mov
cmpsl
in
shl
stos
mov
int3
xchg
out
xchg
in
mov
sub
ret
mov
or
push
pop
shll
mov
mov
outsb
dec
adc
push
mov
pop
mov
mov
mov
testl
aas
inc
pop
inc
and
fcoml
and
dec
ljmp
repz
xchg
mov
mov
fwait
sub
jae
pop
mov
dec
push
jbe
push
es
idivb
mov
clc
movl
in
or
and
cs
mov
call
ss
dec
imul
hlt
outsb
pusha
fisubl
bound
andb
cmc
cmp
xor
pop
sub
inc
les
movsb
mov
rclb
cmp
xchg
ret
pop
pop
push
test
sbb
loop
cmpsl
lret
add
int3
int
jbe
add
mov
ret
stos
outsl
mov
lret
push
loop
dec
push
xchg
loope
pop
lds
mov
dec
jg
repnz
pop
xchg
pop
sbb
jle
push
dec
cld
xchg
push
mov
mov
outsl
pop
dec
lcall
scas
or
or
sbb
or
adc
fisubs
push
add
dec
outsl
xchg
add
inc
sar
pop
ret
std
jae
or
fmull
sbb
aad
push
repz
inc
xor
cmp
sub
outsl
shrl
push
jmp
aad
into
push
jecxz
ja
arpl
ss
lret
sbb
add
aad
push
lds
xor
gs
mov
mov
movsl
imul
popa
call
xor
fsub
jmp
ss
fidivrl
pop
mov
sub
lret
and
insl
sub
lcall
add
pusha
mov
pcmpeqd
jmp
pop
repnz
idivb
stos
pop
pop
mov
push
xlat
das
xlat
fabs
cltd
insb
mov
xchg
cmp
pop
ret
jb
cmpsb
jae
out
and
dec
xchg
cmp
jmp
mov
add
test
sbb
movsl
lret
xchg
test
icebp
pop
adc
or
mov
sub
xchg
jg
fcmovnbe
mov
jl
mov
sbb
addb
jne
les
adc
and
push
ljmp
inc
leave
aas
daa
aam
cmp
and
mov
ds
or
popa
mov
daa
nop
sahf
sbb
mov
mov
cmp
out
mov
or
sub
sub
lea
xlat
imul
test
pop
dec
leave
movsl
mov
adc
addr16
or
pop
mov
lods
mov
xorl
out
xchg
in
test
mov
and
fisubl
or
in
sub
dec
fcomps
mov
int
arpl
xor
add
mov
out
cmp
in
fdiv
test
push
out
or
test
lds
mov
aam
jno
push
stos
lock
popa
add
stc
jl
adc
cld
shll
out
shrb
fistpll
push
test
xchg
into
and
sub
loop
jnp
or
pop
adc
ja
adc
xor
mov
nop
dec
ficomps
imul
jle
push
out
and
inc
clc
cmp
fimuls
into
add
push
lods
js
inc
aam
and
inc
or
ja
jae
jns
jl
inc
mov
in
aam
mov
daa
inc
sbb
push
sub
in
add
das
push
cmp
fbld
jle,pn
push
pop
jae
call
inc
cwtl
pop
sub
leave
ret
mov
mov
and
repnz
hlt
mov
inc
in
inc
int
in
inc
and
xchg
jecxz
shll
movsl
xor
int3
sbb
mov
pop
ljmp
lcall
push
mov
lea
push
dec
xlat
push
jge
mov
jae
jbe
xchg
test
mov
aam
mov
aaa
mov
aad
push
add
rcrb
mov
insl
mov
push
push
push
xor
cmc
inc
sbb
hlt
mov
ss
add
icebp
inc
daa
test
mov
dec
adc
pop
inc
cmpsl
mov
out
jmp
jb
fucomi
test
scas
sub
dec
lahf
xchg
outsb
mov
add
icebp
ja
stos
mov
popf
mov
xchg
push
dec
into
insb
mov
mov
xor
clc
orb
mov
mov
mov
daa
mov
icebp
and
aam
mov
cmpsl
inc
mov
ljmp
das
mov
iret
mov
loope
in
ja
dec
out
icebp
adc
out
fisubrs
xorl
xchg
notb
sbb
adc
jp
test
pop
fnstsw
dec
loope
mov
mov
dec
sahf
jmp
in
dec
scas
addr16
scas
pop
into
fwait
pop
aad
cmp
sub
leave
xchg
pmulhw
cmpsl
jmp
je
idivl
data16
mov
fildl
mov
jno
and
xlat
mov
mov
sub
cld
xlat
jae
enter
lods
in
scas
dec
fldenv
or
mov
xchg
or
and
lret
out
loopne
jp
mov
fidivrs
filds
pop
mov
imul
test
negb
xor
aam
clc
movsb
jae
cmp
and
lcall
or
out
jg
xchg
adc
rcrl
cmpsl
sub
push
inc
stos
xorb
fiaddl
int3
scas
inc
mov
push
imul
or
rcrb
sub
and
test
xor
in
out
pusha
push
sahf
mov
mov
outsl
fs
sub
xor
sti
adc
notl
setp
in
cmp
movsl
push
push
sti
mov
fstpl
push
or
out
xchg
pushf
test
fnsave
ds
movb
addr16
sbb
mov
in
pop
pushf
imul
je
jb
enter
mov
in
pushw
into
dec
aad
fdivrp
jno
subb
outsl
and
dec
imul
stos
lcall
and
fisubrl
popa
jmp
into
pusha
rcr
cld
out
negb
mov
sub
pushf
xchg
cmp
xchg
mov
xchg
rcll
sub
cmc
negb
fld
mov
mov
push
aam
lcall
or
mov
dec
xchg
mov
jae
adc
sahf
rolb
mov
loop
addr16
lea
in
gs
lds
ret
lcall
imul
or
xchg
pop
pop
mov
cli
fwait
xchg
js
test
sub
push
jge
pop
pop
loope
ss
inc
push
cld
bound
xchg
xor
outsb
in
push
bound
and
xchg
adc
popf
movsl
dec
xchg
lea
jge
mov
inc
inc
mov
lea
add
mov
ret
jb
dec
add
enter
je
and
mov
or
sbb
dec
dec
lods
dec
mov
adc
sahf
leave
jns
push
jmp
inc
lock
fwait
mov
sbb
inc
daa
push
push
out
loope
ds
mov
lock
in
mov
mov
mull
jl
ja
test
or
addr16
xor
lea
mov
jo
mov
push
mov
dec
rcr
dec
xor
test
andb
jmp
call
sbb
imul
xorl
cmp
mov
rcrl
lods
cld
add
pusha
jns
add
cmp
cmp
dec
rcrb
push
pop
movsl
xchg
dec
or
xlat
das
add
cmp
test
jo
jle
pop
aam
and
sbb
or
pop
jns
shlb
addr16
adc
xor
pop
iret
cltd
fldt
mov
je
dec
lcall
insb
inc
inc
mov
fildl
pop
dec
mov
hlt
addr16
js
outsl
mov
fwait
popa
dec
push
loopne
jecxz
push
xchg
movsl
mov
and
jnp
adc
cwtl
movsb
cmp
arpl
and
mov
mov
push
out
xchg
adc
mov
arpl
jmp
mov
call
dec
fcomps
leave
sti
dec
adc
out
and
pop
adc
sbb
scas
push
loop
sub
test
pop
lods
fisubrs
ret
cmp
cmpsb
sbb
xchg
push
inc
fcmove
daa
xor
cmp
or
mov
in
out
adc
pop
xchg
lcall
sbb
dec
jge
and
jg
and
les
xchg
adc
mov
fldl
movq
cli
insl
mov
mov
pop
mov
out
lods
dec
into
add
popf
jns
movsl
push
push
xor
sbbb
pop
xor
ret
sti
shlb
add
lds
gs
rcrb
push
cmpb
in
sbb
xchg
and
xor
mov
sbb
loop
dec
aaa
inc
fcoml
nop
inc
and
loopne
push
inc
into
loope
repnz
in
push
mov
cmc
in
or
mov
mov
in
mov
aas
dec
rcll
xor
push
imulb
sbb
xor
inc
xchg
sbb
xchg
jbe
adc
or
popa
jmp
pop
clc
leave
popa
cmc
jg
daa
jne
sbb
push
fists
mov
into
mov
push
insl
into
inc
sbb
mov
sarb
xchg
je
or
fwait
xor
jns
xchg
cmp
dec
cmp
rorl
jl
in
test
jno
jb
out
and
lds
or
add
cmc
mov
mov
mov
stc
sbb
leave
and
addr16
lret
das
popf
mov
dec
cmpsl
into
adc
pop
dec
sbb
rorl
jp
pop
mov
ud2
xchg
movsl
jle
repnz
mov
jo
fwait
scas
push
insb
data16
add
ds
outsb
push
push
loope
inc
jp
shl
pop
out
fcmovu
ds
sub
mov
dec
loope
xchg
cli
fistps
or
movsl
data16
push
mov
add
lret
fisttps
das
popf
repz
stos
dec
fidivs
adc
cmp
idiv
jl
sbb
mov
push
call
jbe
fists
lret
mov
xchg
cmpsl
jecxz
mov
lock
mov
test
or
fadds
inc
std
out
popa
sub
int3
lret
xchg
cmpsl
push
in
cmp
outsl
inc
dec
mov
imul
mov
out
imul
dec
lods
xor
arpl
jbe
xchg
sub
popf
mov
shrl
mov
incb
movsb
lret
adc
sahf
adcl
lea
push
movsl
rcl
jge
in
leave
aas
inc
cmp
cmp
push
sbb
jecxz
lods
xor
fsub
add
lcall
lds
mov
aas
pop
fsubs
jg
imull
cmp
lret
mov
lds
in
jno
stos
push
and
jl
jae
pop
or
gs
insb
adc
mov
stos
or
cmpsb
shll
sbb
rcr
aad
aad
in
push
movsb
in
add
movsb
jo
leave
sbb
fadd
popa
rcl
std
cmpsb
add
adc
das
xor
or
adc
stos
in
and
xlat
or
or
add
mov
data16
and
xchg
xlat
sbb
call
adcl
vmovaps
xor
aad
shl
ss
fwait
sti
mov
mov
andb
mov
pop
ja
mov
xor
add
xor
mov
sahf
xlat
jns
dec
stos
jl
test
jbe
mov
stc
ja
push
je
int3
mov
cmpsl
fld
imulb
mov
pushf
push
ja
jo
push
imul
in
aaa
imul
and
cwtl
mov
xor
or
push
mov
icebp
sahf
sbbl
out
and
cld
xchg
jbe
in
jecxz
pop
xchg
or
jns
jmp
jbe
xchg
mov
shl
push
repz
movsl
cmp
xlat
loop
lea
add
cmp
fpatan
imull
filds
xor
mov
lods
mov
mov
xor
xchg
push
xorb
push
cmpsl
jae
ss
clc
jmp
push
mov
and
xchg
ljmp
sbb
xchg
xchg
je
cmpsl
scas
mov
cld
test
repz
inc
push
mov
xchg
xor
movsb
push
fs
imul
aas
fcoml
ret
sti
mov
in
fimull
sahf
adc
pop
add
int
outsb
pushf
xchg
xor
test
out
pop
andb
mov
imul
sbb
mov
movsl
sub
and
adc
dec
ficomps
pop
dec
dec
in
mov
test
ljmp
jbe
ret
out
add
jp
dec
int3
sbb
mov
nop
pop
sbb
mov
daa
push
add
leave
add
lods
xor
movsb
fcomps
pop
jo
sub
jp
inc
mov
sub
add
fidivl
cld
fsubrs
adc
lret
fs
cmc
cmp
and
xchg
shlb
pop
push
mov
stos
push
dec
nop
cmpsb
jae
adc
inc
pop
jge
cli
lahf
xor
jl
and
imul
push
xchg
push
mov
leave
popf
aaa
mov
stos
outsb
jo
imulb
frstpm(287
fadds
cmpsl
lock
lret
fsubrs
insl
mov
sbb
iret
xor
lret
mov
mov
dec
popa
mov
add
mov
cld
pextrw
movsl
dec
repz
mov
inc
in
fs
test
dec
sbb
fsubrp
pop
mov
loope
test
xchg
push
xor
adc
sarl
lret
xchg
mov
dec
fmull
lds
jne
mov
mov
push
loop
pop
rclb
pop
lcall
inc
cmp
mov
pop
hlt
jle
fwait
mov
movsb
scas
stos
or
mov
xlat
xchg
fidivrl
sbb
pop
or
ds
mov
rol
pop
fidivs
in
xor
sbb
pop
jl
pop
or
sti
pop
enter
ja
mov
es
jge
in
or
mov
test
popf
sub
dec
jle
or
lahf
xchg
int3
sbb
shll
mov
aad
jns
repz
or
cmp
mov
jmp
push
in
sbb
sbb
daa
mov
inc
das
xchg
out
pop
xorb
pop
sub
add
xchg
inc
mov
xlat
test
xorb
iret
push
xorb
push
das
push
rcrl
inc
popf
pop
dec
add
xor
and
scas
ds
or
and
gs
xor
sbb
out
fisttpl
imul
in
push
lret
mov
ss
push
jg
int
fisttps
inc
or
gs
fists
cwtl
and
scas
xor
cli
fs
cltd
jecxz
arpl
incb
imul
leave
jp
xor
fcompl
les
sub
inc
pusha
ret
lods
add
cmpsl
aas
ljmp
je
loop
in
sbbl
xchg
push
sbb
mov
push
nop
out
clc
int3
js
scas
dec
cmovns
or
jno
dec
lret
int3
or
test
outsl
int3
lcall
inc
xlat
pusha
mov
mov
lock
mov
cmp
jg
fwait
sti
jno
arpl
jne
or
dec
inc
je
je
pop
aaa
fimuls
xchg
xchg
outsl
mov
test
xchg
out
mov
or
int3
and
xorl
mov
jae
push
scas
and
mov
mov
or
sbb
divb
jp
in
movsl
push
decb
stc
scas
jge
jmp
dec
inc
cmp
mov
das
out
push
sub
test
in
aam
mov
sarl
xchg
xlat
push
adc
in
or
mov
adc
fs
xchg
aad
movsb
popf
pop
or
xchg
add
jecxz
mov
lods
mov
int
cs
pop
mov
in
jl
in
jbe
outsb
daa
push
test
pop
and
or
bound
pop
aam
dec
or
push
aam
cli
nop
data16
repnz
cltd
outsl
mov
out
inc
inc
pop
repz
mov
dec
icebp
lock
repz
and
mov
or
and
push
xor
jle
scas
mov
jl
adc
lods
std
jne
jns
ss
sub
flds
ds
test
cmp
inc
inc
pop
scas
repz
cmp
sbb
pop
add
sub
cmc
std
jns
mov
js
xor
cmp
dec
add
sbb
add
cld
rclb
cmp
jbe
push
idivl
loop
or
mov
mov
mov
xor
daa
xor
fldt
xlat
lcall
mov
scas
jp
hlt
mov
jge
cs
lret
cmc
cli
nop
fisubrl
jns
dec
ficoml
dec
orl
call
hlt
mov
xor
jae
orb
loop
negb
push
xorb
daa
ret
mov
aad
mov
push
pop
mov
adc
sbb
or
inc
cmp
adc
sbb
or
in
xchg
jmp
dec
and
add
test
cmp
jl
push
and
es
or
xchg
jmp
xor
sbb
xor
pop
dec
aas
sbb
cmp
hlt
in
cmp
xchg
pushf
sub
jne
pop
mov
lret
inc
aas
jg
adc
pushf
mov
rolb
sbb
lea
dec
fs
jecxz
mov
cmpl
dec
std
neg
dec
mov
test
mov
in
xlat
in
sarl
fisubrl
dec
mov
insb
pop
push
fwait
mov
fisubrl
xchg
fcomps
push
pmaxsw
xor
ffree
jae
add
jl
push
jnp
out
mov
add
pushf
popf
xchg
pop
push
ljmp
xchg
in
cs
mov
inc
mov
fdivs
push
inc
shr
mov
lea
gs
ds
sub
pop
retw
repz
lea
mov
rcrl
imul
lahf
xor
ret
ds
dec
and
push
rol
fimuls
cmp
jmp
loopne
push
mov
icebp
out
fdivr
outsb
dec
cwtl
jecxz
push
add
pop
pop
add
fidivrl
xchg
test
mov
fpatan
jecxz
and
adc
mov
out
in
imul
mov
stos
jno
stos
sub
iret
repnz
jmp
xor
xchg
xor
mov
les
push
sub
and
xor
push
shl
scas
push
outsl
mov
loop
pop
xchg
test
das
nop
loop
fsubs
xor
push
aad
es
dec
ljmp
lcall
in
push
repz
push
xor
fsubrs
insb
jle
pop
roll
dec
xor
mov
jg
mov
cwtl
dec
arpl
lahf
mov
enter
jbe
cmp
xor
rol
mov
add
and
fmul
dec
mov
mov
xchg
mov
xor
scas
mov
cltd
repz
andb
leave
mov
outsb
push
in
mov
push
rcll
mov
sub
pop
stc
and
dec
push
xchg
sbb
xchg
icebp
push
xchg
outsl
mov
subb
outsb
mov
mov
ss
aas
aaa
pop
inc
repnz
jmp
dec
inc
jmp
aaa
js
push
or
inc
dec
mov
insb
lea
popf
add
testb
inc
jno
mov
xchg
clc
gs
mov
subb
movsl
cmpsb
clc
pop
xor
jmp
pop
cli
dec
or
imul
iret
pop
test
ds
cli
sbb
ljmp
push
bound
cmp
or
adc
adc
out
pop
pusha
lret
out
clc
gs
cmc
cld
xchg
pop
ja
lea
pop
ret
call
std
jne
popa
dec
pop
push
inc
in
adc
in
mov
cmp
mov
aaa
cmp
rorl
js
in
ss
stos
mov
xor
dec
out
mov
xchg
push
fidivs
std
xchg
push
popf
sahf
inc
mov
pop
or
adcl
and
in
not
rcll
fldt
clc
cmp
or
push
inc
pop
cmc
popa
loope
mov
inc
loopne
fcom
notb
sbb
sub
sbb
mov
outsl
cli
out
or
cmp
hlt
lds
jl
mov
mov
insb
imul
repnz
aaa
push
lods
inc
sbb
repnz
or
comiss
inc
out
iret
fabs
js
push
adc
cli
popf
dec
or
les
or
lock
mov
mov
push
fistps
fsubl
jno
cltd
xchg
jmp
xor
addr16
mov
je
mov
dec
mov
dec
aaa
stos
pop
push
mov
xchg
test
scas
aad
mov
in
xorl
xchg
xor
cltd
loopne
xchg
xlat
cli
test
dec
outsl
repz
aam
push
mov
test
inc
movsb
sbb
pop
mov
ss
fsubrl
push
enter
outsb
scas
fsubrs
adc
sub
or
popa
jp
into
xlat
jns
pop
aad
pop
pop
pop
or
je
out
ret
push
aaa
in
inc
fisubrl
sub
enter
lods
jbe
in
ljmp
arpl
in
mov
sbb
int3
adc
mov
cli
insl
xor
test
jae
xchg
cmp
insb
test
roll
cli
mov
sbb
rol
or
jecxz
push
cmp
jbe
shlb
adc
lds
jmp
inc
jp
and
in
mov
subl
ljmp
test
out
mov
inc
jns
mov
nop
push
sub
nop
jae
cs
mov
fdivs
jb
pop
orb
ss
inc
adc
cltd
xor
xchg
pop
addb
nop
mov
repz
rcr
das
sbb
mov
ljmp
in
jle
sub
and
inc
mov
jnp,pn
cmp
imul
pop
popf
pop
inc
shlb
sbb
hlt
cmc
fwait
cmp
jb
pop
inc
push
adc
scas
cli
or
insl
sti
add
aas
sub
stos
pop
pop
jae
dec
push
dec
lret
aam
gs
mov
sub
test
jl
add
jae
stc
cmp
sub
mov
ficoms
adc
bound
mov
mov
lahf
in
cltd
out
fs
enter
inc
and
cmpsl
dec
test
add
stos
dec
jno
dec
out
orl
imul
stc
in
test
notl
sar
or
bound
mov
and
insl
addb
add
pop
adc
add
mov
lahf
xchg
mov
mov
xlat
mov
ret
repz
dec
xchg
jbe
mov
lds
add
jnp
mov
adc
aad
in
scas
and
sub
das
push
outsb
subl
jmp
mov
fs
and
pop
jo
mov
xchg
es
inc
ret
cmc
xor
cmp
daa
pop
das
roll
pop
pop
jno
sahf
pop
mov
add
mov
push
sbbl
push
sahf
push
jl
cmc
jns
sub
push
xor
test
or
mov
lahf
sub
sub
cwtl
mov
sub
push
xchg
loop
cmp
mov
dec
cmp
iret
dec
movsl
pop
std
xor
or
dec
xchg
leave
ret
add
sarl
sub
mov
test
js
xchg
lea
int3
mov
push
push
insl
sub
jae
imul
dec
lea
aas
outsb
inc
xchg
jecxz
pop
add
call
xorb
out
shl
lods
push
fnstsw
jp
add
leave
mov
int
aaa
movsb
cmp
adc
stc
rorl
daa
movsl
into
xor
xor
xchg
mov
sbb
ss
int3
add
lock
cmp
popa
xor
loop
and
jl
push
add
aad
out
mov
inc
or
repz
les
add
add
movsl
xor
outsl
int3
stc
ja
jno
sti
movsb
iret
jecxz
or
nop
xor
testl
mov
pop
dec
dec
mov
pop
jecxz
inc
jl
icebp
push
mov
xor
test
sbb
lcall
sub
test
cmp
out
test
insb
cmpsl
call
insb
ds
arpl
adc
push
push
flds
sub
enter
mov
dec
inc
xor
mov
sub
jno
lahf
mov
ror
mov
lea
pop
push
add
pop
sarl
xor
cmpl
add
xchg
add
inc
jns
repz
mov
push
ja
push
mov
push
fdivrs
in
out
sbb
cmc
xchg
jge
sahf
jle
out
scas
in
jp
mov
stos
mov
fstpl
push
addb
xchg
ficompl
ret
dec
xchg
jmp
int3
stc
jle
cmpsb
mov
loope
aam
jg
sub
or
das
clc
jb
dec
jmp
pop
notl
jmp
popa
fcoms
push
std
add
cmp
jne
sbb
dec
in
mov
icebp
dec
push
lea
stos
ja
dec
mov
imul
insb
mov
mov
xchg
aas
sbb
sub
aas
popf
loopne
cld
repnz
ljmp
mov
dec
adc
mov
dec
clc
test
pop
fwait
add
nop
mov
mov
xor
and
push
leave
shrl
fbstp
xchg
shr
pop
xchg
or
push
adc
xchg
das
loop
iret
nop
push
xchg
jae
push
hlt
insl
adc
dec
ja
js
rcr
mov
aaa
insl
stc
xchg
push
sbb
xor
jmp
sbb
cs
test
out
loop
xchg
fdivs
cltd
sbb
imul
push
arpl
mov
push
jo
imul
loop
int
jo
js
cmp
jo
std
loop
aad
insl
pop
mov
adc
sbb
stos
xchg
adc
sub
insb
mov
cmp
sub
dec
xchg
adc
mov
mov
pop
sub
mov
jecxz
dec
sbb
or
inc
jecxz
cmp
int
push
shl
xchg
xor
xchg
iret
pop
sbb
fadds
lea
out
pushf
pop
lcall
jb
or
dec
outsb
daa
pop
ss
fld
out
mov
lcall
jns
icebp
jge
inc
out
lret
fsubs
xor
stc
mov
mov
scas
xlat
in
std
xchg
xor
sub
pop
lahf
push
repnz
test
aas
sbb
cmp
xor
mov
pop
mov
fisubrs
cmp
in
xchg
mov
dec
or
lock
inc
and
mov
roll
add
jbe
in
mov
adc
add
loop
sahf
sti
gs
sbb
ror
fists
fdivrl
stos
lods
xchg
lds
cmp
push
daa
inc
mov
mov
mov
test
pushf
arpl
push
sbb
sbbb
mov
stos
dec
fsts
jecxz
mov
loop
enter
popf
and
mov
sub
in
js
adc
pop
sbb
pop
fdivs
sub
and
or
outsb
and
hlt
cmpsl
jae
aas
in
test
ret
mov
rorb
sub
dec
xor
fistpll
call
inc
hlt
cmp
stc
sbbl
pop
cli
lret
in
xchg
jbe
imull
iret
imulb
pop
test
or
pop
scas
push
push
xor
cmp
xchg
out
mov
add
sbb
mov
push
andl
pop
or
stos
or
fwait
out
xor
mov
xor
cmpsl
sbb
mov
cld
add
push
or
adc
sbb
cpuid
pusha
push
hlt
imul
punpckhbw
stos
repnz
fcoml
pop
and
and
jb
mov
fcompl
xor
repz
ja
mov
inc
xchg
lcall
adc
mov
xor
outsb
ret
xlat
and
inc
bound
hlt
data16
out
adc
xlat
imul
mov
fcompl
pop
mov
dec
fst
mov
and
lret
xchg
dec
pushf
in
mov
mov
and
jnp
jne
int3
cs
pop
ss
addr16
lret
shrb
aam
jge
adc
mov
lds
jp
lock
shlb
cmp
popa
divl
push
sub
aaa
push
add
pusha
mov
loop
push
mov
xor
bound
mov
out
stos
add
mov
fildll
js
cltd
std
lock
mov
das
outsl
mov
xor
das
in
inc
push
dec
movsl
mov
cmp
jle
jnp
mov
fwait
int
sub
and
xchg
mov
add
or
pushf
int
stc
xchg
pop
sub
dec
push
add
xchg
push
pop
cmp
cmp
decb
je
mov
stc
push
shrb
ret
fnstcw
jne
inc
inc
add
xchg
ja
jbe
mov
out
imul
dec
jb
int
jmp
shll
jnp
pop
outsl
icebp
rorl
and
jg
xor
mov
inc
es
xchg
jecxz
pop
sbb
jle
aad
test
mov
rcll
adc
nop
lcall
push
out
adcl
in
push
hlt
lcall
push
push
xchg
mov
cmp
fsts
in
sbb
add
call
ror
aam
xor
dec
std
push
cmp
pop
lcall
in
in
jno
ljmp
and
dec
sub
mov
mov
sub
add
rolb
gs
inc
in
ucomiss
in
push
test
ja
mull
andl
call
cwtl
fs
cmp
lods
std
dec
push
int
data16
std
cmp
or
clc
jae
in
mov
arpl
mov
pop
jle
mov
push
jmp
xlat
adc
add
sbb
pop
pavgb
sub
mov
aam
ret
sbb
int3
cmc
stc
movsb
dec
rcll
xchg
ja
adc
push
jnp
es
jp
push
jl
jp
imul
mov
sub
dec
fbld
and
insl
xlat
pop
std
mov
push
mov
ficomps
fistpl
jns
xor
cmp
push
dec
fcomip
xor
scas
fcompl
xor
sub
mov
xchg
and
mov
mov
stos
scas
ret
ds
fimull
sbb
push
sbb
jno
inc
scas
fs
imul
loopne
add
mov
sub
jns
jmp
cld
or
ret
or
pop
mov
into
aam
mov
mov
fwait
ja
loopne
scas
mov
aas
pop
xchg
loop
sbb
pop
lock
mov
jb
fsubrs
xlat
lret
sbb
xor
mov
or
sub
add
dec
adc
movsl
sbb
adc
je
int3
lods
push
fldenv
push
xchg
ja
clc
and
push
inc
cs
fcomp
push
test
nop
pop
pop
ret
scas
pop
scas
enter
mov
or
mov
and
pop
dec
sarb
cmp
mov
int3
test
sub
sbb
or
or
push
jae
inc
dec
jbe
fucomi
adc
gs
xchg
dec
adc
xchg
adc
das
lods
icebp
add
add
rcl
in
add
jle
fstp
cld
loop
inc
mov
xor
push
rolb
mov
fsts
cmp
jecxz
or
mov
incb
push
stos
neg
add
or
test
mov
mov
jae
fadds
out
mov
add
shrb
call
out
jle
inc
jge
mov
sub
jns
out
data16
aam
xchg
pusha
loopne
sbb
mov
push
fcom
xor
xchg
in
test
jo
dec
add
push
movsb
mov
mov
or
es
imul
sub
xchg
or
cmp
sti
fistps
sub
dec
ret
mov
addr16
jecxz
add
inc
jl
rcrb
dec
push
jp
or
adc
shll
aad
das
pop
or
aad
or
mov
push
push
sbb
dec
push
iret
lahf
outsb
adc
outsb
cmp
out
push
jmp
jno
sbbl
mov
push
fwait
rcrb
jmp
movsb
jecxz
fwait
subl
and
or
or
popf
dec
orl
xchg
iret
ret
dec
aam
es
stos
xor
nop
lret
mov
hlt
adc
sbb
jae
push
sbb
xchg
xor
pop
pop
adc
dec
jmp
pop
mov
insb
push
std
mov
js
call
dec
fadd
xchg
mov
push
faddp
add
lret
pop
jge
inc
sub
enter
mov
xchg
pop
imul
inc
pop
subl
push
mov
lock
nop
adc
js
bound
pop
nop
data16
pop
hlt
inc
add
repz
pop
sbb
sbb
push
xor
xchg
insb
bound
int3
jne
aam
xor
adc
pushf
xor
pop
ljmp
js
inc
jno
lds
pop
jbe
repz
fisttps
dec
dec
pop
das
sub
pusha
fstps
out
nop
cmp
cmp
and
lret
fisttpl
or
imul
aaa
test
enter
aas
mov
jno
stc
pop
or
push
mov
xlat
xchg
imul
mov
sub
mov
adc
fwait
stos
into
xchg
push
sub
sub
stos
sub
push
adc
inc
imul
pop
jnp
pop
mov
notb
adc
cmp
dec
scas
loop
ret
xchg
xorl
test
mov
mov
xor
or
or
scas
data16
inc
jmp
or
jb
xchg
push
das
mov
imul
xor
sbb
jno
sub
push
pop
cmpsl
push
scas
sbb
push
iret
or
cmp
sub
dec
les
testb
and
push
lods
fadd
cli
add
pop
bound
insb
loop
xchg
pop
hlt
mov
or
push
aam
loope
and
jecxz
and
mov
sbb
mov
mov
lret
test
pop
xor
xchg
and
dec
xchg
mov
sub
cmp
push
cmp
lods
lock
jg
rol
inc
insb
mov
cmp
ret
adc
in
cmc
insb
lock
inc
cli
xor
lea
inc
xchg
dec
jecxz
push
aaa
cs
or
mov
mov
sub
pop
scas
rcr
xor
dec
push
dec
icebp
jecxz
loopne
stos
mov
addb
ljmp
jb
hlt
pop
mov
in
sub
out
sbb
popa
loopne
movsl
sub
cwtl
jmp
sbb
sub
into
stos
vpsrld
int
push
adc
mov
fwait
jae
popa
cmp
in
dec
into
mov
jecxz
jne
dec
xchg
xor
jnp
jb
sbb
notl
mov
adc
mov
mov
stos
push
mov
fbld
pop
add
push
adc
divb
icebp
mov
or
push
lret
xchg
mov
arpl
fcmovne
fcmove
icebp
add
mov
sahf
sar
sbb
mov
dec
movsb
jecxz
xchg
nop
leave
cmp
sbb
cli
xchg
cmc
dec
adc
mov
fyl2xp1
stos
push
mov
sahf
inc
add
pop
int
cmpsl
pusha
insl
leave
lock
cmp
testb
gs
sbbb
mov
iret
cltd
je
jbe
pop
jnp
xor
int3
outsl
mov
lahf
jae
pop
jp
jb
insl
jmp
jbe
lret
jne
loopne
popf
jge
mov
push
test
das
dec
cmp
push
xchg
popf
dec
mov
sbb
jg
insl
mov
push
add
and
xchg
jno
push
push
dec
stos
adc
addb
jnp
lcall
xchg
rorb
fcomip
int
icebp
jmp
xor
push
xchg
fistl
fimuls
adc
adc
add
pop
enter
or
sbbl
cld
cmp
push
lahf
int3
dec
int3
int3
fucomp
mov
shrb
stos
cmp
loope
shl
mov
fldenv
lea
popf
inc
out
xchg
psllq
push
inc
sbb
mov
mov
std
mov
xlat
sub
es
test
call
add
sbb
cwtl
cmpsb
dec
xchg
sub
pop
inc
xor
sub
cli
pusha
mov
mov
sub
push
push
or
les
pop
clc
mov
dec
rcrb
add
xor
outsb
xchg
jnp
inc
jae
dec
and
insb
mov
je
rcll
jnp
pop
mov
stos
xor
rorl
push
loop
fidivl
dec
mov
cltd
push
or
lods
xor
inc
aam
fmull
jge
aam
inc
add
jecxz
out
out
mov
ret
push
cltd
adc
ja
cmp
sub
mov
adc
sbb
inc
jno
rcrb
xchg
or
stos
mov
or
push
xlat
inc
pop
or
jnp
shl
push
call
mov
add
in
jge
cmpl
and
in
cmpsl
adc
pop
dec
