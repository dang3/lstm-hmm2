push
push
push
add
push
add
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
add
add
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
add
push
add
push
add
push
add
push
push
add
push
push
add
push
push
add
movsb
push
and
xor
push
mov
mov
flds
add
cmovo
ljmp
cmp
sahf
fwait
in
add
lret
fildll
lods
sub
inc
sub
cwtl
sarl
ss
inc
stos
cmpsb
ret
push
sub
and
jb
jmp
cmp
out
pop
int
loope
lea
push
or
xor
inc
lea
shl
jo
dec
jl
les
push
ljmp
pop
cs
cltd
push
fisubs
enter
lods
dec
push
es
cld
pop
pusha
nop
fs
jbe
pop
inc
addr16
lods
push
xlat
fmull
push
loop
pusha
xor
jne
into
hlt
ds
pop
sbb
mov
push
in
aas
dec
addr16
ljmp
fdivl
subb
movsl
out
jmp
dec
rcrl
mov
movsl
fstpt
arpl
jle
mov
add
mov
mov
sub
push
iret
or
or
xor
xchg
insl
pop
daa
cwtl
dec
ret
pop
cli
aad
into
cltd
mov
sub
lahf
adc
adc
xlat
adc
dec
das
xlat
and
fcmovbe
in
rclb
aaa
sub
and
push
mov
inc
xor
stos
sbb
mov
xor
xor
push
lods
jns
mov
cmp
leave
add
push
jb
inc
push
sub
cmpsb
xchg
call
fnstenv
push
mov
mov
jg
adc
pop
or
inc
jmp
pop
int
mov
sbb
testl
or
lods
loope
xor
adc
mov
imul
and
lea
pushf
outsb
jnp
fld
mov
inc
mov
sub
scas
cmp
push
aam
fwait
scas
mov
pop
inc
mov
mov
or
xchg
rolb
shlb
fwait
insl
lahf
cmp
mov
jne
lea
dec
out
in
mov
dec
adc
outsl
out
ret
rcrb
scas
inc
js
cwtl
in
cmc
push
xchg
jl
push
jg
imull
cmp
and
xlat
cs
cmp
xchg
mov
xor
push
in
mov
aam
mov
xor
push
push
mov
fcomps
leave
fdivrs
pop
jl
sti
roll
mov
mov
lret
insl
xchg
pop
fiadds
xchg
out
hlt
inc
hlt
addr16
jp
fisttpl
dec
sub
nop
push
mov
sub
scas
xchg
mov
cmc
out
bound
add
lahf
addr16
icebp
in
jo
data16
add
es
mov
testb
inc
mov
jo
sbb
push
xchg
dec
ds
mov
push
mov
inc
add
call
inc
mov
call
dec
push
add
call
dec
dec
sub
imul
sub
call
add
dec
dec
mov
dec
movzbl
inc
mov
lea
inc
mov
inc
call
mov
add
mov
inc
inc
call
mov
lea
call
sub
dec
inc
sub
mov
inc
xor
inc
pop
mov
mov
add
add
mov
pop
mov
pop
inc
sub
sub
inc
pop
inc
dec
dec
mov
mov
inc
imul
sub
pop
lea
dec
pop
lea
inc
mov
movzwl
mov
call
add
and
add
inc
ret
inc
lea
push
dec
inc
push
inc
inc
push
mov
movswl
push
sub
dec
push
mov
mov
mov
and
xor
push
mov
ret
push
add
imul
inc
movzbl
mov
sub
movsbl
push
dec
mov
push
mov
call
pop
ret
jmp
imul
xchg
imul
mov
mov
add
xor
sub
lea
or
mov
inc
sub
lea
dec
jne
dec
mov
or
mov
pop
mov
mov
pop
dec
and
pop
and
mov
dec
imul
mov
inc
mov
inc
sub
mov
imul
add
ret
push
inc
movsbl
lea
movswl
inc
movsbl
dec
inc
push
push
push
push
xor
mov
sub
push
lea
mov
inc
movswl
lea
mov
lea
mov
inc
mov
sub
push
lea
add
xor
xor
imul
push
add
lea
push
dec
and
pushl
mov
call
dec
add
mov
lea
sub
dec
add
inc
inc
pop
ret
movzwl
mov
mov
inc
inc
dec
and
add
dec
inc
mov
inc
mov
cmp
jb
dec
mov
mov
imul
xor
lea
dec
xor
imul
pop
and
add
test
jbe
dec
inc
imul
inc
or
dec
movzbl
inc
mov
lea
xor
lea
imul
mov
mov
movzwl
lea
inc
mov
dec
inc
dec
add
and
inc
lea
mov
or
add
movzbl
dec
add
add
lea
dec
and
inc
or
mov
mov
sub
mov
sub
dec
mov
inc
mov
lea
dec
imul
dec
add
dec
jne
inc
mov
mov
lea
movsbl
mov
xor
inc
movzwl
sub
lea
and
mov
imul
dec
lea
lea
mov
movzwl
lea
mov
mov
movzbl
mov
test
jbe
lea
lea
mov
dec
dec
add
inc
inc
inc
or
lea
imul
sub
mov
and
inc
sub
mov
dec
add
add
mov
and
add
mov
mov
add
movsbl
movzbl
dec
add
add
dec
mov
and
sub
mov
mov
sub
lea
movzbl
add
inc
mov
add
lea
mov
mov
inc
movzbl
mov
lea
add
mov
sub
and
sub
dec
movzbl
imul
jmp
push
call
and
xor
mov
inc
xor
imul
lea
inc
dec
lea
inc
dec
mov
xor
lea
inc
movzwl
inc
shl
add
inc
xor
inc
mov
push
inc
movsbl
mov
call
dec
pop
inc
dec
mov
inc
inc
movzbl
dec
dec
cmp
je
call
call
imul
iret
sub
imul
pop
inc
ret
push
dec
dec
imul
add
movzbl
push
or
add
push
or
push
inc
push
dec
dec
push
inc
inc
mov
mov
lea
call
movswl
push
lea
push
mov
pop
inc
add
mov
or
lea
mov
lea
lea
inc
and
or
dec
je
mov
dec
inc
movzbl
xor
mov
mov
dec
movzbl
mov
lea
dec
mov
mov
lea
mov
lea
repnz
mov
imul
add
mov
jmp
mov
lea
mov
sub
inc
sub
mov
dec
sub
mov
inc
mov
imul
mov
inc
inc
pop
pop
jmp
ret
push
sub
lea
movsbl
mov
movzbl
mov
imul
imul
and
add
sub
dec
dec
imul
inc
inc
inc
movsbl
inc
dec
dec
mov
inc
pop
ret
sub
inc
mov
imul
inc
mov
imul
lea
mov
sub
and
mov
xor
add
xor
mov
inc
mov
lea
dec
inc
mov
mov
add
lea
inc
mov
cmp
jb
dec
push
mov
dec
push
mov
sub
push
mov
xor
mov
add
dec
xor
mov
or
xor
mov
dec
xor
sub
dec
push
add
inc
xor
sub
and
mov
mov
dec
mov
add
movzbl
add
and
lea
mov
add
xor
dec
add
sub
dec
movzbl
inc
and
lea
imul
imul
inc
inc
dec
add
mov
or
or
inc
lea
inc
dec
cmp
jb
dec
xor
dec
dec
mov
add
jmp
push
fists
push
dec
adc
iret
push
xchg
fisubrs
ds
imul
lods
in
mov
in
repnz
sti
cltd
sub
pop
nop
mov
repnz
insb
jae
daa
test
xchg
out
xchg
insl
movsl
mov
test
bound
push
rclb
into
adcl
sbb
jae
imul
xor
gs
sub
fldt
fmuls
rcll
movsl
insl
jle
int3
xor
sub
sti
push
xchg
inc
mov
rclb
push
xchg
repnz
inc
mov
xchg
xchg
dec
test
xor
and
pop
insl
jno
sbb
mov
xor
add
xchg
ret
test
mov
das
inc
ljmp
jl
dec
lods
clc
in
jecxz
mov
pop
in
dec
adc
lea
out
sahf
orl
lea
inc
aaa
jmp
dec
adc
cltd
sbb
in
sahf
shl
test
jo
jno
cmpsl
out
loop
popa
mov
xorl
pop
mov
pop
in
pop
pop
notb
sbb
cmp
mov
in
aad
and
cmc
xchg
movsl
fldl
dec
aas
nop
mov
cmpb
mov
dec
add
mov
ret
jmp
fisttpll
out
loop
and
mov
hlt
xchg
ret
out
xorb
imul
jp
mov
mov
mov
sub
sbb
insb
je
mov
adc
mov
inc
add
sub
pushf
pop
fdivl
cmp
lods
push
add
lods
out
sub
mov
fidivrs
and
data16
ret
aam
and
lock
test
xor
hlt
dec
stos
fdivl
xor
mov
lea
sbb
fucomi
adc
js
mov
call
jae
mov
jg
aaa
adc
nop
sti
dec
cmp
xor
or
push
pop
shrb
add
arpl
icebp
pop
mov
sub
mov
fsubrl
movsb
xchg
add
fisubl
add
mov
inc
push
push
clc
sbbl
mov
jecxz
or
pop
dec
push
mov
dec
mov
and
mov
pop
or
push
jbe
inc
xchg
lea
dec
addr16
xchg
insb
fbstp
jge
mov
push
add
mov
lock
loop
les
push
mov
push
mov
jmp
mov
xor
cmp
clc
rcll
ja
pop
cmp
mov
mov
push
adc
lock
popl
xchg
pusha
jmp
xor
lahf
cld
mov
out
decb
shl
lods
jne
cltd
jmp
xchg
dec
popa
nop
gs
fisttpl
repnz
adc
jb
xor
fstpt
in
cmp
push
fidivrl
add
or
test
jb
loopne
or
push
out
sub
in
sbb
lret
shlb
test
enter
fwait
bound
ret
outsb
gs
xor
pop
inc
into
push
das
daa
shlb
into
inc
xor
dec
jno
gs
adc
in
push
scas
stos
and
lret
mov
sbb
pmulhuw
or
push
fstp
imul
xor
das
gs
sti
movsl
pushf
mov
xchg
test
sub
mov
nop
or
sbb
add
or
jb
movsb
out
cmp
mov
or
ret
in
cltd
adcb
push
push
into
shll
lret
cltd
mov
add
frndint
and
fcompl
add
inc
loopne
aaa
inc
inc
jno
popa
shll
fs
ret
jmp
pop
icebp
push
add
pop
mov
sbb
pusha
inc
mov
dec
ret
lds
mov
and
add
sbb
inc
xlat
jns
sbb
iret
rclb
scas
jb
ficoml
aad
cwtl
nop
sbb
cmp
das
hlt
jge
jg
jmp
ss
movsb
sahf
inc
add
cmpsl
in
cmp
lods
mov
outsb
mov
sarb
les
jbe
les
jmp
xchg
lods
inc
mov
or
xor
sub
testb
imul
pop
adc
xchg
inc
add
push
aam
aad
loope
fdivrs
sbb
leave
cmp
add
jne
push
xor
add
lret
fistps
movsb
ljmp
imul
scas
aaa
or
xchg
out
lret
pop
popa
mov
mov
dec
pop
pop
aam
cmp
jns
xor
call
stc
jae
mov
cmc
mov
ret
mov
out
sub
cmp
ja
dec
data16
test
mov
mov
mov
call
mov
push
fildl
aam
outsb
cmpsb
int3
cmp
mov
dec
adc
enter
jmp
xor
les
enter
cs
dec
dec
ret
xchg
push
adc
cmp
aaa
mov
cld
cmpsl
push
cmc
nop
jb
dec
in
out
cltd
jns
sbb
pushf
push
cmc
jecxz
rorb
inc
lahf
fidivrl
inc
xchg
pop
add
jno
mov
jl
fiadds
in
andb
add
dec
fcomps
enter
pop
cld
mov
pop
mov
incb
add
xor
xor
cmpsl
outsl
pop
arpl
out
xor
roll
das
jae
xor
leave
pushf
mov
adc
stc
push
mov
push
aaa
test
add
cmp
push
lods
push
mull
sahf
adc
mov
inc
stos
addr16
ja
jnp
pushf
inc
icebp
or
out
and
xor
sarb
adc
xchg
mov
mov
cmp
jle
add
loopne
hlt
ja
dec
and
les
ljmp
cwtl
push
mov
xchg
cs
mov
push
mov
sbb
notb
xchg
jp
fs
aaa
xchg
pop
mov
push
lret
sbbl
xchg
addr16
out
mov
enter
mov
sbbl
add
sarl
sbb
out
xchg
inc
pushf
pushf
outsb
mov
movsb
xchg
xor
add
sbb
jo
xchg
ja
jnp
mov
dec
cmp
sub
scas
hlt
pop
mov
fstps
mov
dec
mov
fisubrs
mov
outsl
in
adc
add
sub
mov
xor
stos
fiaddl
pop
mov
pop
mov
movsl
repnz
icebp
or
mov
int
add
enter
push
mov
xor
inc
pop
jne
rcrb
arpl
pusha
popf
jmp
mov
test
sbb
sti
test
cmp
jl
sahf
pop
sub
add
ret
aam
jbe
lret
fwait
mov
bound
insb
scas
mov
fistps
rcrl
cld
xor
insl
jne
icebp
out
roll
outsb
and
xchg
loop
imul
push
mov
mov
mov
and
mov
es
inc
jmp
cmp
das
loope
lock
mov
or
mov
fs
gs
iret
adc
test
mov
sub
add
imul
mov
jl
xchg
js
sbb
outsl
mov
mov
aaa
outsb
sbb
insb
inc
rorl
xor
push
fstps
sub
push
and
mov
repnz
lds
popf
pop
or
ror
es
jbe
and
fdivrl
xorb
fsubrp
insl
fs
xlat
icebp
aas
xchg
in
cwtl
call
je
movsb
dec
xor
push
or
pop
in
or
idivb
and
fildll
ret
ss
add
jg
add
cmp
and
jno
dec
and
es
in
adc
mov
mov
mov
cmp
insb
fisubrs
add
outsb
sti
or
mov
dec
ret
pop
add
push
leave
cmp
or
mov
sbb
mov
push
jle
sbb
out
sbb
outsl
dec
stc
jns
pop
test
fwait
cmpsb
ret
mov
inc
test
jmp
nop
sbb
sbb
gs
push
pushf
cld
pop
cmpl
dec
cmpsl
or
sbb
js
jb
nop
outsl
jns
push
loop
inc
push
inc
scas
xlat
cmp
cs
imul
hlt
or
add
xor
mov
and
pop
mul
adc
jmp
idivl
cmp
insb
xor
ds
rol
cmp
jnp
es
mov
inc
and
pop
push
repnz
aam
xlat
and
test
enter
xchg
xchg
neg
sbb
ret
mov
jmp
xor
movsb
mov
lods
adc
push
xor
cmpsb
repnz
sub
test
add
adc
movsb
ds
cltd
mov
push
sets
jp
lahf
fs
jge
add
cs
pop
sub
fs
mov
sbb
or
xchg
shlb
addl
jne
int
sbb
inc
shlb
icebp
sbb
xchg
adc
addb
in
push
leave
adc
cmpb
pop
scas
or
inc
dec
idivb
inc
into
sub
icebp
fldlg2
outsl
pusha
jb
arpl
mov
daa
sbb
insl
pop
je
xchg
fstpt
outsb
enter
dec
leave
loopne
insb
and
or
mov
sbb
les
stc
ja
rorl
les
repnz
inc
repz
hlt
popf
loope
xorb
sub
sbb
adc
pop
mov
dec
movsl
aaa
xchg
xchg
hlt
das
jp
jb
jmp
mov
pop
pushf
mov
pop
pop
repnz
fs
and
add
pushf
cmp
inc
push
dec
stos
inc
in
sbb
in
push
inc
nop
stos
xor
cmp
sbb
sbb
aaa
and
xor
fnstenv
les
mov
shll
stc
fstpl
iret
mov
jbe
rorb
outsl
pop
push
mov
neg
cmp
mov
icebp
jge
mov
scas
loopne
xchg
insb
stc
lahf
jbe
push
lahf
push
push
and
adc
sub
jno
jle
mov
jno
sub
test
test
cmp
mov
dec
xor
jmp
pushf
dec
push
or
adc
lahf
adcb
xor
stc
repnz
mull
out
stos
insl
in
mov
push
xchg
cmpb
hlt
movsl
stos
adc
leave
sbb
push
mov
dec
loopne
mov
mov
jmp
neg
fsubs
xchg
fisubs
jbe
mov
xchg
in
fs
pop
adc
in
addr16
sbb
lret
imul
jno
inc
adc
add
fs
enter
sub
mov
sub
in
sub
gs
es
push
inc
jl
mov
stos
or
jnp
cmpsl
pop
js
aas
mov
js
inc
out
push
ja
xchg
aas
stos
pushl
stos
adc
pop
jle
in
jno
stos
pop
insl
sub
iret
mov
or
data16
push
mov
ret
mov
or
movsb
lock
pusha
jmp
adc
loop
push
rolb
bound
push
pop
push
sub
lods
fisttpl
push
divl
mov
daa
sub
loope
arpl
mov
out
dec
stc
xor
xchg
hlt
icebp
cmp
inc
nop
cmovae
rcl
xor
incl
inc
subb
push
into
rcll
jnp
in
nop
jp
xchg
sub
mov
cli
rorb
xor
xchg
push
imul
add
pop
clc
movsb
fldl
mov
arpl
pop
dec
popf
int3
test
loope
sub
push
jmp
mov
aas
faddl
sub
push
sarb
xor
bound
jo
mov
int
addr16
pop
mov
add
push
les
outsl
pop
or
enter
out
ret
bound
add
shlb
stos
rorl
stc
mov
push
lret
cltd
dec
fnstcw
out
aam
jl
subb
sbb
sub
push
pop
call
cmc
inc
and
dec
int3
adc
cmp
add
lcall
mov
mov
pop
decb
mov
mov
jge
outsb
inc
xor
movsl
push
mov
mov
push
sub
les
add
popa
xchg
lods
lods
fiaddl
scas
pop
mov
addr16
out
int
mov
xor
data16
sahf
mov
adc
fcmovbe
mov
pop
sbb
jnp
ljmp
neg
in
popl
push
or
or
pop
stc
cmp
loopne
imul
adc
pusha
jno
cwtl
dec
sub
mov
shrl
ja
add
lahf
and
and
cmp
arpl
aas
out
cmp
add
cltd
pusha
dec
jle
and
int3
sbb
insb
add
and
pop
mov
loopne
sub
outsb
ljmp
nop
fistps
shll
jle
sub
sub
aam
or
sarb
sub
add
or
pop
popa
xchg
fisubs
pop
idivb
and
xchg
jnp
imul
mov
ds
fincstp
cmp
cmpsl
push
loopne
lock
mov
inc
cmpsb
jae
push
out
outsb
int
lock
xchg
sub
xor
shl
mov
cvtpi2ps
mov
ds
sub
inc
inc
jecxz
pop
push
outsb
in
sbb
or
pushf
les
faddl
inc
cmp
add
or
push
ret
or
lahf
inc
jle
inc
or
insb
xchg
dec
shlb
sub
repnz
ds
incl
insl
or
adc
mov
cmp
cmp
out
rol
shll
cmc
cmp
mov
ja
loopne
aad
cmc
add
sbb
mov
fisubrs
push
stc
or
and
inc
shrl
negl
mov
fbstp
popf
jbe
stos
stos
repz
insb
arpl
sub
stos
jae
sbb
dec
cld
sub
push
negl
aam
push
mov
les
mov
pop
mul
sub
xor
mov
cmp
js
cmp
lret
mov
xchg
lods
ret
test
pop
push
mov
popa
dec
xchg
hlt
pop
push
pop
jne
add
xchg
das
add
test
pop
scas
aas
pop
daa
pop
adc
dec
push
pop
mov
and
lods
into
out
cwtl
dec
call
and
adc
mov
mov
mov
or
lret
insb
scas
dec
dec
pop
pop
mov
ret
xchg
aam
inc
ret
jge
mov
push
repnz
fsts
cmc
cmp
jne
push
lods
dec
outsb
sarb
inc
idivb
repz
jle
sub
pop
outsb
jbe
dec
inc
push
xchg
cli
shll
fwait
push
xchg
sbb
cld
addl
imul
das
test
add
add
popl
mov
inc
aas
push
add
mov
or
mov
push
cmpl
stc
xchg
jp
ja
jo
mov
xlat
into
mov
mov
repz
mov
cs
lcall
movsl
xor
je
icebp
jmp
sbbb
inc
adc
out
cltd
cmp
push
sub
mov
cmp
inc
stos
xor
aas
mov
mov
dec
call
inc
xor
cmc
add
cli
jo
cmpsb
outsb
out
notb
sub
pop
mov
sbb
in
loopne
pop
lods
xchg
movsl
mov
push
lods
lods
stos
mov
idivl
adc
pop
fsubrl
jmp
mov
enter
inc
fimull
stos
lds
dec
jge
dec
aaa
das
icebp
xor
or
xchg
adc
cvtpi2ps
rol
xchg
and
shll
nop
xchg
jb
cli
or
push
imul
cs
sahf
fwait
mov
test
pop
test
push
and
sbb
jne
mov
mov
mov
pop
outsb
dec
sbbl
push
jmp
xchg
adc
cli
ja
imul
fmull
into
mov
sbb
inc
jl
push
aas
lret
and
sub
cld
xchg
fcmovnbe
into
sbb
mov
cmp
pop
in
push
mov
js
and
std
or
or
xchg
pop
out
mov
pop
mov
fdivr
scas
push
shlb
popa
daa
cwtl
sti
or
in
push
lods
cmp
pusha
fisttps
es
aam
dec
jl
out
jae
sub
xor
movsb
out
or
adc
xchg
xchg
cmpsb
cli
lea
push
push
push
sub
sbb
pop
sbb
gs
cmp
add
xchg
inc
jo
sbb
cmc
test
mov
aaa
add
dec
mul
fdivl
sub
mov
mov
mov
inc
int3
loope
lcall
pop
adc
cmp
sahf
out
in
mov
sub
lock
outsl
ss
jae
jl
into
leave
xchg
push
mov
jae
adc
outsl
inc
test
jbe
pop
xchg
fcoml
rolb
push
fcmove
mov
mov
das
push
sbb
jmp
fdivrp
xlat
inc
clc
or
mov
aad
xor
les
dec
push
or
int3
mov
mov
pop
rolb
mov
mov
daa
jmp
lock
mov
sbb
inc
add
or
sub
mov
pushf
push
clc
jo
xchg
jnp
xchg
pop
outsl
sarl
iret
addr16
push
pusha
mov
lods
or
repnz
in
sub
xor
jle
enter
dec
xor
cmp
dec
pop
ds
mov
jnp
mov
in
pusha
and
fcoms
mov
repnz
roll
shlb
pusha
push
repz
cmp
mov
cmp
fildll
jl
iret
inc
mov
cli
dec
mov
add
lahf
xor
or
pop
cmpsb
jnp
and
jg
push
inc
cmp
mov
addr16
cmp
and
cmpsl
xchg
leave
out
mulb
nop
lds
enter
jecxz
mov
mov
mov
icebp
fcmovne
jne
cltd
pusha
test
add
lock
mov
fsubr
mov
js
stos
lds
call
xor
fstps
mov
sbb
jle
cwtl
add
fmul
mov
or
mov
mov
jle
lds
add
lock
sub
push
push
ror
mov
dec
sahf
cmp
and
push
jb
inc
divb
sub
fistpl
adc
in
orl
xor
mov
out
jle
repnz
xlat
dec
dec
mov
out
add
incl
push
fwait
push
movsl
pushf
gs
sbb
insl
test
ja
scas
rcll
out
push
movsl
push
bound
outsb
or
jno
and
mov
or
mov
add
add
loop
mov
xor
dec
jns
das
aam
adc
xchg
sub
mov
push
subb
sub
call
ja
out
mov
fidivrs
adcb
test
pop
xchg
cli
mov
fwait
sbb
in
add
arpl
es
shll
bound
rorl
imul
mov
adc
mov
cltd
sarl
pusha
iret
rep
cmp
xorb
in
clc
int3
xchg
dec
lret
mov
mov
cmp
leave
push
inc
aas
dec
xchg
jl
dec
cs
es
bswap
dec
xor
pop
adc
adc
and
rorb
pop
xchg
mov
es
mov
push
or
sahf
fld
xor
in
test
cmp
pop
mov
stc
mov
int
mov
cmp
lret
in
enter
loop
repnz
jmp
push
jo
enter
mov
sbb
das
xchg
lcall
scas
or
notl
xchg
or
cltd
fcomi
into
js
rcl
push
out
or
fidivrs
lock
and
ds
pusha
mov
addb
js
data16
mov
push
mov
mov
test
gs
les
enterw
fs
mov
sub
sub
lock
test
orl
push
mov
aad
xor
inc
and
and
enter
mov
imul
pop
or
cli
inc
add
ret
scas
adc
outsb
adc
mov
fisttpl
in
or
push
in
lods
cmp
fsubrs
pop
js
aaa
rclb
xchg
in
push
aaa
mov
xor
cmp
testl
push
mov
push
push
aad
scas
sub
xor
and
insl
push
push
movsl
dec
sub
out
xor
adc
enter
mov
cli
outsb
aaa
push
int3
in
popa
imul
xchg
add
dec
fld
adc
aad
mulb
aad
mov
sbb
cmpsl
test
fidivl
or
mov
dec
cmpsb
adcl
aam
imul
inc
sti
stos
xor
dec
ret
and
cld
mov
aam
or
sbb
jl
push
mov
pop
shlb
cld
mov
pop
mov
jmp
pop
xchg
xorb
cmp
hlt
jmp
aam
dec
mov
iret
sbbb
push
xchg
pop
aad
mov
dec
xchg
and
cmp
push
lcall
testl
xchg
aad
gs
loope
push
cmp
fists
mov
faddl
sar
gs
icebp
cltd
ss
adcl
mov
lods
test
xchg
pop
and
push
fdivrl
dec
jmp
add
cmpsl
sti
ret
mov
push
cmp
add
mov
mov
lcall
add
and
in
inc
mov
pushf
add
mov
mov
pop
push
iret
xor
pop
movsb
rorl
jne
and
bound
adc
xor
xor
aaa
ret
imul
inc
adc
mov
inc
pop
mov
fs
popf
cmp
sbb
push
jns
out
in
insl
ficompl
insl
dec
mov
dec
xor
enter
or
and
jge
push
fldcw
cmp
in
jbe
lahf
cmpb
adc
adc
cmc
push
adc
das
test
nop
pop
cld
mov
cmp
xor
xchg
mov
mov
adc
out
and
adc
test
pusha
sti
pop
daa
repnz
mov
jns
mov
orb
mov
lcall
or
sub
in
jns
ret
lahf
dec
jns
aaa
pop
gs
std
rclb
sbb
lret
and
rcr
sbbb
movsl
mov
imul
mov
aaa
sub
ret
or
adc
int
dec
cwtl
andl
loope
jnp
xchg
xchg
fisttps
xor
xchg
cmp
push
leave
sbb
and
out
push
jl
leave
setnp
xor
out
sub
cmp
in
jp
ret
xor
out
rolb
sbb
mov
popa
sahf
xor
jg
and
add
gs
cmp
pop
add
scas
add
dec
jp
pop
stc
add
push
pop
gs
push
ss
nop
jg
mov
cmp
mov
movsl
jb
sub
xchg
inc
sub
pop
popa
jne
dec
inc
movsl
fs
fldlg2
dec
aaa
jle
loope
pop
loopne
add
push
jecxz
fs
jo,pt
and
ja
push
lret
xchg
inc
into
sub
mov
mov
add
mov
xor
sub
jnp
int
mov
lahf
cmpl
sbb
inc
das
enter
out
shll
jne
pop
jecxz
mov
mov
ds
idivb
std
fdivr
sbb
pop
jnp
addb
lds
cmp
mov
fs
loop
sub
mov
pop
leave
mov
aas
pop
mov
call
xchg
imul
mov
std
outsb
xor
adc
aad
push
xor
jne
xor
dec
or
ljmp
mov
insb
lret
ret
mov
out
outsl
push
movsl
jmp
mov
or
pusha
jne
sub
lods
test
andl
inc
jns
mov
pop
mov
pop
xchg
idiv
loopne
js
psrad
mov
jge
gs
mov
sub
mov
mov
cmp
mov
sbb
push
cli
xlat
cwtl
inc
decl
xchg
jb
jnp
sbb
in
add
jg
mov
add
loope
inc
aad
stos
neg
push
nop
push
scas
push
loop
hlt
aam
push
mov
sarl
hlt
push
mov
xchg
xor
xchg
push
jmp
push
push
mov
mov
push
mov
add
and
aas
inc
sub
imul
or
jnp
or
mov
orb
leave
scas
push
pop
rcrb
push
cmp
fcoms
mov
push
jo
jns
testl
out
fcompl
xchg
fldt
jne
lods
cld
out
dec
mov
xchg
jbe
and
and
or
and
loope
pusha
add
mov
push
jle
inc
sahf
inc
add
mov
gs
cwtl
jns
mov
decb
int
push
pop
mov
sbb
ret
inc
push
xchg
bound
xchg
clc
shlb
int3
aam
fmul
movsb
cs
mov
test
push
sarl
or
add
push
test
inc
jl
mov
mov
lret
dec
cltd
addr16
jmp
push
int
outsb
adc
stos
es
xor
cwtl
ljmp
dec
aad
or
add
mov
fs
inc
andb
adc
fs
daa
gs
pop
push
add
or
in
add
jbe,pt
push
cmpsb
xor
decl
ja
xchg
mov
push
pushf
jmp
adc
jae
roll
or
inc
lods
jae
pop
jno
or
pushf
xlat
lret
add
test
jmp
pushf
mov
sbbl
rcrl
cmpsb
adc
rorb
popa
jecxz
fdivrs
negl
push
loop
mov
mov
add
test
and
and
push
cmp
mov
shr
dec
inc
sub
in
jl
cs
add
out
mov
mov
mov
loope
sub
out
icebp
xor
jb
jo
pop
sahf
add
cwtl
popa
sbb
pop
fs
lods
fwait
clc
push
fs
jnp
adc
lret
xchg
pop
stos
shrb
arpl
cmp
fisttpl
ret
jg
aas
add
outsb
inc
in
pop
and
lahf
add
adc
dec
shl
jge
sub
add
cmp
into
scas
or
adc
repnz
mov
ficomps
orl
xchg
xor
push
scas
loopne
mov
xor
mov
push
gs
inc
shrl
mov
das
int3
in
pop
stos
add
jbe
repnz
das
push
out
cmp
cmpsl
scas
stos
sarb
push
cs
aad
ja
xor
dec
add
popf
inc
pop
fwait
hlt
push
lods
hlt
dec
lret
cs
flds
jnp
sub
mov
scas
cmpb
push
bound
mov
push
int3
or
lret
mull
imul
ret
jbe
mov
aad
in
fmull
sub
insb
sub
out
cmp
xor
dec
icebp
jne
imull
cli
pop
or
jne
fwait
jle
jno
repz
sbb
addl
out
cmpl
dec
cld
icebp
mov
insl
pop
and
pop
js
fldcw
rcrl
mov
lds
add
or
std
xor
cli
mov
imul
sbb
xor
clc
sarl
mov
mov
inc
cmc
ss
inc
adc
das
out
inc
sbb
std
imul
test
mov
push
xchg
sub
pop
sti
mov
out
jbe
inc
add
ljmp
out
sbb
xor
lds
push
add
data16
pop
adc
cltd
fisttpll
sar
cmc
adc
mov
cmp
xor
push
sub
repz
cmp
mov
aaa
pop
inc
jae
sbb
dec
imul
inc
loopne
stos
movsl
jb
dec
loope
hlt
out
loope
jl
cmp
inc
fldl
insb
dec
mov
stc
fsubrl
mov
shl
or
hlt
cmpl
add
xchg
adc
and
jle
cmp
sub
and
pusha
jecxz
jne
cli
mov
cltd
gs
inc
clc
pop
stos
adc
pop
popa
xchg
inc
push
and
mov
sub
mov
sub
test
jl
repnz
cmpsb
pop
jle
pop
test
adc
pop
and
gs
cmp
jne
mov
add
shrl
mov
rol
add
cmp
adc
jmp
inc
sarb
dec
sbbb
mov
es
enter
fistpll
pop
test
jae
sub
daa
pop
rclb
dec
ljmp
cmp
test
ja
fs
add
adcb
cmp
sahf
cmp
xor
xor
inc
sbb
inc
fsubs
xor
stos
stos
aad
sub
cmp
push
popf
xor
fimuls
cmp
mov
jno
daa
out
cld
pop
gs
rorb
rorb
lock
jmp
lahf
inc
repnz
shr
cs
ja
push
jne
test
in
gs
mov
xchg
xor
adc
inc
cmp
jl
shr
mov
cmp
jo
dec
aad
mov
das
sarb
jecxz
fwait
lods
cmpl
into
loop
movsl
fwait
sub
pop
imul
dec
in
sbb
sub
push
adc
stos
or
mov
cs
mov
cltd
adc
mov
jno
aam
out
ret
out
inc
mov
clc
mov
pop
lret
push
mov
test
push
test
jno
fidivrl
insb
stos
rorl
cwtl
sahf
add
xchg
mov
jne
cld
xor
adc
xchg
xor
icebp
jge
xchg
inc
and
jp
inc
cld
shr
das
fstpt
mov
imull
pop
xchg
in
rcll
mov
sub
in
mov
pop
loope
mov
movsb
inc
jno
xlat
into
mov
icebp
nop
imul
mov
fwait
out
xchg
xor
test
icebp
sbb
xchg
xor
rcll
jo
xlat
shl
xor
dec
or
mov
jmp
dec
or
dec
cmpsb
ja
pop
call
sub
push
dec
inc
ficomps
cmpb
outsl
jns
fldl
xchg
inc
orb
mov
push
mov
in
sub
push
in
sub
cltd
popl
enter
cmp
dec
outsl
ret
xorb
divb
mov
dec
or
icebp
test
sub
mov
loop
lahf
adc
std
mov
pop
loope
sbbl
test
push
mov
pop
xchg
fisubrl
jge
cmc
movsl
cmp
inc
push
les
std
jmp
mov
arpl
insl
js
frstor
sbb
aaa
in
xor
xchg
das
ficomps
fmulp
dec
mov
xchg
loopne
or
fsubrl
rcl
rclb
aam
lret
mov
mov
and
push
fidivl
sbb
xchg
cmp
pop
adc
stos
mov
test
into
push
sub
nop
dec
stos
inc
cltd
mov
call
inc
pop
notl
inc
fs
js
or
sbbb
imul
adc
clc
lret
cmpsl
inc
cli
sub
sub
mov
es
in
ja
movsb
mov
repz
les
test
mov
mov
and
das
lahf
fwait
sbb
mov
iret
pop
outsl
inc
pop
or
pop
lea
pop
repnz
test
lcall
aas
xor
xchg
shrl
inc
mov
in
dec
testl
pop
lea
mov
pop
jns
and
mov
cmc
scas
out
stos
ret
dec
stos
xor
fisttpll
add
adc
ds
mov
mov
out
aam
jmp
pop
jl
sub
gs
shll
iret
data16
frstor
in
call
mov
test
dec
aad
daa
inc
dec
push
and
xchg
lret
sub
inc
lds
jl
xlat
mov
xchg
adc
inc
int
xchg
leave
lock
jmp
add
pop
jns
fisttpl
xlat
or
pop
imul
jecxz
dec
mov
add
xor
popl
and
es
and
push
orb
pop
and
dec
mov
in
out
lcall
loope
pop
add
sbbb
sub
inc
jmp
push
shlb
fwait
test
push
orb
mov
pop
push
mov
jae
push
das
inc
push
out
lret
sub
loope
adc
adc
nop
fcmovnb
push
cmp
fistl
imul
pop
sbb
int3
imul
ss
into
mov
inc
push
fwait
pop
or
fisttpll
xchg
adc
fisubrs
dec
mov
cmp
fs
add
rcll
cmp
jmp
in
test
mov
mov
in
lock
daa
push
and
cli
xchg
lods
push
test
lcall
or
pushf
lea
xor
jns
ljmp
subl
fwait
dec
sbb
mov
push
mov
jnp
scas
pop
add
sbb
push
cmp
mov
mov
testl
push
xorl
dec
dec
aam
pop
sub
cmp
in
pop
sbb
outsb
shr
xor
inc
dec
mov
mov
insb
outsl
aas
cltd
notb
inc
pop
popa
adc
ffreep
dec
xchg
test
fmuls
inc
push
js
pop
mov
mov
dec
imulb
dec
pop
out
outsb
add
or
dec
or
rcl
jns
ds
std
pop
icebp
test
or
xorb
je
icebp
pop
cmpsb
je
cmp
scas
xor
jnp
adcl
xor
adc
sbb
mov
dec
adc
push
jnp
push
jno
int3
xor
mov
shrb
inc
mov
xor
push
jnp
mov
mov
shll
mov
ret
mov
mov
pop
leave
and
and
xor
dec
xchg
inc
adc
dec
ret
bnd
xorb
jmp
gs
ficomps
popa
xchg
xchg
cld
mov
jmp
sti
push
test
pop
add
aam
imull
lock
addr16
gs
dec
movsb
adc
cmc
loop
cmp
mov
jp
lcall
adc
dec
mov
out
mov
adc
scas
cmp
fimuls
jge,pt
cld
cmp
pop
fistl
dec
mov
or
imul
lock
lods
pop
pop
or
jo
inc
push
cmp
inc
leave
jns
movsl
push
xchg
add
inc
inc
sti
dec
adc
pop
lds
aaa
jg
addb
mov
dec
pop
add
mov
push
mov
cmp
xchg
cmpb
call
cld
lcall
jb
xchg
test
jecxz
mov
insl
sub
push
int
aaa
xor
add
out
jne
out
cmp
nop
adc
adc
dec
adc
fstps
inc
imul
mov
movsb
ljmp
xchg
cmp
movsl
cli
aaa
clc
jo
cmpb
push
rcr
orb
sub
test
jp
sahf
pop
add
into
dec
mov
and
ret
mov
shrb
shrb
mov
aad
ljmp
rclb
fldt
fwait
loope
xbegin
dec
xchg
std
mov
mov
bound
sarb
sbb
ficomps
sbb
mov
int
add
mov
or
lods
fwait
jne
pushf
addb
pop
add
ljmp
xor
add
xchg
mov
mov
jb
sti
xchg
addr16
icebp
mov
adc
leave
sbb
pop
mov
in
sbb
adc
test
iret
scas
xor
test
imul
or
ficomps
cmc
out
or
shrl
sahf
push
inc
rcrl
out
and
movntps
cs
aam
out
in
jbe
cmc
xor
dec
fsubrl
and
aas
push
out
xchg
das
xchg
push
xchg
test
dec
repnz
pop
leave
adc
imul
xor
dec
test
adc
xor
and
lahf
shll
xor
in
or
rorl
scas
push
rcll
rcl
jmp
or
dec
mov
xchg
cmpsb
inc
mov
add
and
shl
lea
pusha
pushf
xchg
inc
ficompl
dec
push
imul
and
fadd
mov
in
adc
pop
out
adc
xchg
pop
pop
lahf
jo
push
lods
push
jge
ror
jnp
or
ret
jo
adc
adc
loope
push
enter
push
cs
pusha
enter
mov
pop
fstpt
out
icebp
add
rcr
lret
cmp
adc
hlt
xor
aas
push
jle
jo
testb
imul
cmc
or
push
pop
je
mov
cmpsb
sub
add
lea
test
xorb
and
fwait
lret
xor
jp
psllw
lret
mov
aaa
aaa
ljmp
sub
shll
push
or
and
and
cmp
cli
rorb
repz
lcall
nopl
sets
fdivrl
xor
inc
cmpsl
inc
pop
fs
jns
call
out
pusha
xchg
clc
lock
fstp
into
add
cmc
daa
fwait
and
push
stc
out
fisubrl
ret
aam
inc
ffree
cmpsl
cmp
in
je
pushf
sub
or
pop
inc
test
ljmp
repnz
push
jl
pop
jne
aad
push
sti
ret
lret
mov
scas
inc
scas
loop
inc
add
push
scas
jne
fistpll
icebp
sbb
jbe
popf
adc
jb
or
mov
movl
sub
pop
sbb
xchg
push
xor
pushf
ljmp
push
push
add
cs
out
mov
mov
xchg
subb
sbb
sbb
or
sbb
fstpl
in
mov
lock
shrb
imul
cli
loope
hlt
mov
out
mov
rol
push
mov
xor
push
hlt
xor
cld
add
or
sbb
cmpb
pop
xchg
push
push
popl
in
loope
test
sti
xchg
pushf
shl
cmp
dec
adc
sbb
hlt
cmp
xchg
xchg
outsl
adc
aas
inc
mov
and
les
jno
jne
stos
mov
pop
xor
dec
sub
clc
or
int
stos
add
push
xor
and
push
mov
fists
dec
add
adc
daa
inc
scas
and
push
aaa
out
xor
fs
jecxz
test
clc
das
ds
mov
pmaddwd
fstpt
or
sub
shll
enter
les
adc
cltd
scas
sbb
ret
pop
inc
test
pop
mov
lods
and
scas
or
sbb
sub
inc
aam
loope
out
mov
data16
xor
or
cmc
ljmp
pop
push
pop
xchg
dec
ret
daa
push
jno
sti
call
out
ljmp
xor
cs
mov
push
jge
loop
adc
push
scas
mov
adcb
lods
xchg
mov
push
add
jo
xchg
and
add
sub
dec
mov
mov
outsl
pop
test
lock
stc
lret
cmpsb
ficompl
and
fidivs
push
ja
hlt
fsubrl
sub
cs
lret
push
sub
or
in
je
pop
push
in
adc
movsb
fldenv
insb
mov
xchg
test
iret
jmp
inc
aaa
mov
stos
sub
xor
pop
adc
js
adc
fs
jne
push
adc
add
or
xor
icebp
jns
and
ja
std
lods
pop
cld
aam
sub
bound
insb
mov
daa
inc
push
icebp
cmp
inc
push
daa
loope
cmp
fsubs
add
push
or
dec
sub
leave
sub
movsb
mov
cmc
aaa
mov
aad
or
push
cmp
xchg
jb
ljmp
movsl
mov
js
mov
es
adc
mov
ret
mov
lods
pop
scas
mov
lret
pop
jne
cmc
test
jns
xchg
or
movl
mov
mov
adc
sbb
push
xor
lret
aam
sub
and
jb
xchg
xor
fcoms
rolb
daa
lods
cmpsl
pop
push
nop
cwtl
in
sbb
and
mov
repz
sbb
mov
loope
push
pop
pop
add
mov
mov
cs
pusha
clc
mov
and
bnd
data16
mov
enter
out
fidivrs
sarl
aas
sub
iret
mov
mov
ss
cmp
testl
pop
frstor
mov
pop
idivl
mull
add
dec
cmp
test
arpl
pop
xchg
or
adc
pop
inc
inc
add
stc
cmp
xchg
cmc
xchg
and
enter
push
out
cmc
pop
in
mov
xchg
sti
iret
addr16
lret
pop
xchg
ljmp
jb
sbb
cmp
les
mov
gs
je
jg
inc
dec
dec
xor
lods
push
mov
sbb
in
pop
addr16
popf
shll
cmp
nop
imul
push
rcll
jb
ja
jnp
aad
cmp
movsb
push
daa
mov
adc
adcb
int3
mov
cmp
test
sbb
adc
fildll
ljmp
scas
jg
dec
sub
clc
dec
xchg
and
mov
pop
hlt
push
int
push
testb
cmp
loopne
scas
ja
jle
fimuls
ss
sub
sbb
daa
fwait
push
push
call
xchg
ja
imul
cmc
arpl
xchg
sub
inc
mov
jne
mov
outsb
inc
mov
out
scas
mov
test
xchg
pop
stos
pop
pop
shrb
add
add
push
gs
lret
imul
js
xchg
jecxz
push
or
pop
adc
movsb
dec
jns
outsl
andb
sbb
xor
pop
and
scas
mov
and
sub
and
repnz
mov
fstp
mov
adc
cmp
int3
push
aam
inc
adcl
inc
mov
jae
jns
js
add
ss
fildl
jbe
stc
sti
in
test
xchg
imul
out
fdivrp
divl
inc
push
cmc
mov
lcall
adc
ljmp
into
pop
dec
inc
ret
adc
mov
in
lret
or
dec
push
cltd
pcmpgtw
inc
dec
shlb
inc
mov
sub
imul
or
dec
in
lods
dec
es
lret
jns
iret
cmpsb
pop
adc
lret
mov
arpl
stc
jae
lahf
cwtl
in
push
xor
jle
aaa
push
je
popa
jnp
mov
xchg
pop
test
sub
mov
arpl
jnp
sarb
xlat
mov
popa
daa
ds
pop
sub
int3
xchg
jnp
pop
rolb
daa
lods
into
mov
fadd
jg
jnp
jns
sub
mov
mov
add
mov
sbb
lods
bnd
into
mov
mov
xlat
adc
fisubs
mov
and
pinsrw
push
loope
mov
inc
pop
inc
lea
cmpsl
in
cmp
out
sahf
mov
and
je
sbb
or
insl
jl
lcall
loope
jae
and
dec
dec
lods
jne
add
shl
add
add
test
and
pushf
dec
adc
mov
in
fdivs
popf
data16
lock
xor
js
add
jno
loopne
add
dec
and
stos
incb
mov
mov
add
sub
in
xchg
movsb
jmp
popa
xchg
repz
push
mov
nop
stc
or
hlt
filds
loope
xchg
cld
or
mov
sbb
icebp
mov
pop
jno
leave
imul
mov
pushf
inc
adc
into
rorb
pop
scas
into
in
rcll
cmp
sbb
inc
sub
pop
inc
sbbb
mov
sbb
sahf
fnstenv
push
lahf
loope
jle
cmp
pop
push
jnp
xchg
jae
push
imul
fdivrs
adc
icebp
and
mov
es
mov
lret
sub
int3
jge
jbe
pop
mov
or
inc
and
shr
outsl
xor
xchg
lret
fsubs
sub
xor
les
mov
mov
dec
loop
and
cmp
push
sub
jae
add
scas
jg
aam
jp
mov
sbb
ljmp
mov
mov
mov
scas
push
out
test
adc
or
sarl
stos
mov
add
lret
jmp
int
xchg
mov
mov
and
or
add
shl
imul
out
inc
add
stos
push
loop
jl
aam
cmc
mov
or
xor
adc
mov
xor
dec
and
inc
aas
out
mov
mov
pop
sbb
in
fsubs
pop
jl
shll
mov
sbb
push
scas
std
out
sbb
std
mov
jl
jle
mov
ljmp
fcoms
cmp
rorb
mov
jmp
pop
andl
stos
sub
pop
pop
or
mov
add
in
sbb
jecxz
dec
push
mov
sub
or
aas
jb
std
push
mov
imulb
mov
js
lods
adc
xchg
or
push
sub
mov
test
btr
sbb
dec
inc
xchg
xor
stos
nop
add
and
mov
jnp
js
leave
pushf
push
pop
fs
inc
out
pop
jbe
nop
cmc
out
adcb
in
test
stc
aad
lds
sbbl
mov
test
pop
out
push
mov
cs
push
ret
imul
int3
mov
outsl
xchg
mov
popa
adc
pop
je
mov
aaa
add
ja
loope
js
repz
sahf
lahf
dec
add
mov
aad
mov
lea
mov
repnz
xchg
lods
rclb
outsl
gs
jge
push
dec
mov
sub
fs
nop
lods
in
or
mov
fisubrs
aad
test
insl
cltd
daa
jl
xchg
cli
into
je
or
adc
loopne
cmp
mov
cwtl
or
in
mov
xchg
mov
mov
dec
fs
adc
sub
clc
jbe
sub
fwait
or
fildl
movsb
xchg
xorl
mov
sub
leave
mov
xor
push
cmc
pop
cltd
lds
lcall
shlb
call
int
filds
addl
aaa
lds
inc
xlat
mov
int3
lods
imul
lcall
add
cmc
pop
fs
test
sbb
into
jl
push
flds
fisttpl
inc
push
jl
xchg
stos
cmp
popf
sti
sbb
push
popf
popa
insb
push
je
or
fldt
subl
push
add
and
cmc
cli
cwtl
push
sub
push
inc
push
imull
push
cmp
mov
mov
mov
cmp
add
add
call
pushf
int
iret
loop
cmpsl
sbb
sub
cmp
lcall
aam
int3
sub
sub
cmp
out
dec
or
lds
fidivrl
lods
int3
scas
bound
js
insb
imul
scas
mov
inc
dec
or
xchg
sub
xor
sbb
adc
lret
sbb
scas
clc
push
std
les
mov
cli
pop
mov
lret
ficoms
cmpsl
fisttpl
movb
insb
xor
dec
insb
mov
shlb
mov
and
pop
push
pop
lcall
enter
xor
sahf
inc
dec
mov
pop
sbb
sbb
mov
add
sbb
lods
test
inc
cmpsl
lcall
inc
pmaxub
shll
aas
cmc
fwait
add
sbb
jnp
test
and
dec
dec
leave
mov
and
mov
dec
jp
pop
call
cmp
aad
cltd
popf
mov
xor
sbb
xor
and
loop
jne
sbb
mov
ss
test
xor
jg
ret
mov
sti
scas
cmpsb
scas
add
pop
loop
sub
jmp
stc
out
es
mov
ljmp
les
leave
lea
cli
rdmsr
cmp
jg
cmpl
push
sbb
testb
push
pop
cmp
or
push
push
ss
xchg
xchg
add
pop
mov
xchg
pop
adc
inc
icebp
jmp
imull
adc
xchg
add
hlt
inc
push
xchg
mov
out
mov
pushf
xor
adc
add
repz
push
and
dec
or
xor
cmc
cmp
stos
enter
xchg
dec
mov
es
or
sub
and
jnp
sbb
jae
addr16
xorl
test
push
add
shll
sti
jne
mov
jns
pop
mov
mov
stc
movsl
hlt
cwtl
add
cmpsl
sub
sub
mov
rolb
dec
rol
cmp
and
add
jle
mov
and
jl
xchg
out
outsl
cwtl
stos
in
xchg
nop
fwait
sub
add
fwait
cld
mov
sbb
adc
movsl
xchg
ss
add
push
ror
push
das
sub
in
xor
loopne
loopne
insb
pop
ret
adc
icebp
scas
add
mov
mov
pop
pop
or
mov
or
xchg
call
fs
add
inc
cltd
pop
test
ret
ret
push
mov
pop
cs
jg
mov
adc
rolb
sbb
das
sub
mov
sub
add
and
or
jmp
fisubs
iret
or
aaa
pop
inc
mov
ret
test
cld
aam
jl
or
push
dec
shrb
data16
inc
xchg
add
xchg
or
jecxz
cltd
jmp
pop
dec
movsb
jnp
in
nop
cmpsl
xchg
inc
mov
stos
pop
fwait
cmpsb
cld
addr16
mov
mov
out
jg
out
aas
mov
adc
or
loope
mov
insb
icebp
dec
cmp
push
sbb
push
sub
cmp
and
pushf
pushf
into
mov
sahf
loopne
sti
push
bound
stos
call
sbb
fldln2
push
rclb
mov
aas
shll
lods
fidivrl
decb
data16
subb
push
sahf
cmpsl
test
push
mov
lock
das
aam
jne
or
rcll
mov
dec
jae
enter
or
pop
xchg
adcw
sub
test
push
lret
mov
inc
dec
push
dec
std
div
test
adc
stos
xchg
imul
jbe
je
dec
or
or
dec
out
jp
gs
lods
mov
push
xor
ss
fs
fs
test
jbe
lds
lods
cmp
sti
sti
mov
out
cs
mov
jno
cmp
adc
pushf
jns
push
xchg
stos
sub
mov
loope
mov
push
pusha
add
push
xchg
adc
add
adc
xorl
or
int
in
lcall
and
mov
cmp
ror
jle
dec
outsb
push
sbb
shl
jno
inc
mov
addr16
mov
iret
mov
inc
movsl
jo
jecxz
push
mov
pop
xlat
daa
ljmp
aaa
lcall
adc
repnz
aad
xlat
push
jnp
les
out
pop
sbb
xor
lahf
jns
xchg
in
sti
inc
testl
sbb
mov
call
inc
ret
out
fisubl
or
cmp
mov
mov
xchg
mov
mov
jl
push
popa
cmp
icebp
jne
mov
and
mov
lods
pop
sbb
push
xchg
push
ja
ljmp
ja
outsb
rcl
pop
mov
cmp
ljmp
pop
sbb
call
jge
shl
dec
stc
xor
sahf
out
ret
roll
mov
dec
mov
cmp
jl
adc
cltd
sbb
jb
repz
popa
shlb
jbe,pn
shrb
lods
in
outsb
pop
push
lret
jl
or
push
sub
mov
jae
pop
les
into
sbb
dec
push
gs
dec
dec
incb
or
or
ret
insb
cmpl
jnp
shll
jno
fistps
cs
mov
lods
cwtl
insb
ja
rorl
enter
testb
mov
aas
mov
popf
int3
loopne
test
loope
inc
scas
out
add
xor
mov
insl
inc
mov
mov
inc
test
dec
adc
shll
ds
push
ss
xchg
test
out
mov
insb
cmp
inc
xchg
das
in
xchg
sbb
int3
fcoms
add
or
std
lret
dec
xchg
mov
lock
xchg
leavew
dec
pop
mov
enter
xchg
inc
daa
xchg
sbb
in
fs
es
andl
add
mov
adc
xor
jnp
mov
and
pop
push
pop
pop
insl
pop
push
cmpsl
rorl
stos
mov
out
or
movsb
dec
popf
adcl
xor
imul
push
pushf
mov
popf
out
jl
outsb
test
rcll
jno
add
out
std
pop
xor
sub
push
jae
push
std
and
xor
fimull
aam
push
xor
test
mov
addr16
mov
inc
xor
lcall
cmp
faddl
sub
imul
cli
out
rcll
inc
mov
mov
subps
jg
adc
pop
sarl
test
out
push
adc
iret
stos
inc
xor
adc
js
gs
lret
addr16
push
push
xchg
xor
fisubl
ds
mov
jae
xorl
cli
mov
lods
dec
out
inc
adc
xor
pusha
test
scas
or
add
int
lret
cwtl
adc
iret
sar
outsl
inc
push
pushf
or
push
push
mov
ss
shlb
jge
loop
lret
and
mov
das
stc
xor
dec
mov
jbe
jns
jp
mov
cmc
jnp
sti
popf
out
and
pusha
popa
jns
xchg
pop
test
test
mov
bound
xor
sub
push
adc
stc
je
inc
mov
mov
add
in
cli
or
clc
or
or
push
into
pop
sbb
pop
lahf
adc
pop
sub
and
dec
enter
dec
jle
xor
fwait
repz
aad
mov
cmp
pop
xchg
xchg
mov
mov
add
ret
cmp
lea
fcmovbe
push
mov
insl
je
fadd
cld
popf
sahf
push
stos
rol
and
sti
sbb
add
sub
pop
push
mov
mov
cli
jge
cmp
in
jecxz
stc
das
xchg
cmp
adc
int
cs
sub
xor
adc
adc
lret
sbb
jne
in
inc
xchg
and
xlat
enter
cld
sbb
jo
cmc
cmp
push
scas
lret
fst
pushf
mov
andl
das
xor
shl
cmp
mov
or
js
mov
or
cmpsl
mov
and
sub
paddd
lahf
sbb
inc
or
jmp
mov
sub
sbb
es
cmp
pop
jbe
cld
push
push
in
xor
push
mov
push
dec
add
insl
push
dec
repz
icebp
icebp
jo
jno
outsb
mov
fidivs
sbb
lock
and
sub
icebp
fwait
cltd
xchg
add
add
push
outsb
xchg
dec
fnstsw
ret
sub
or
testl
dec
sub
mov
mov
xor
fsubr
mov
cs
testl
pop
sbbb
je
adc
mov
bound
dec
frstor
gs
dec
pop
sahf
dec
je
xchg
sbb
adc
cmpsl
insl
insb
and
movsl
pop
mov
jge
sti
insl
cmp
sar
cmp
lea
pop
incb
test
shll
mov
cmp
mov
inc
mov
rsm
movsl
insb
jns
lea
sbbl
push
mov
sub
das
cmpsb
sbb
jmp
mov
sub
push
jno
mov
mov
sub
shrl
xchg
adc
add
mov
add
jmp
dec
push
popf
out
and
fs
or
push
add
pop
in
cmp
mov
dec
push
xor
bound
ret
add
push
push
in
xchg
xchg
xchg
or
shlb
inc
jecxz
in
cmc
sub
sbb
mov
sub
jno
dec
cmp
test
xor
frstor
cld
mov
inc
jmp
lret
clc
sub
xchg
adc
ljmp
sbb
aas
sub
cmp
adc
cwtl
xor
push
je
sarl
inc
push
insl
por
jl
ret
push
mov
mov
pusha
pop
popa
loopne
int
push
sub
push
inc
cmc
nop
fimuls
jne
repnz
mov
mov
adc
lret
lods
mov
pop
adc
cld
push
scas
fcompl
pop
test
jg
call
repnz
push
daa
dec
jno
jl
fucom
lret
push
iret
sub
sti
adc
push
ret
jnp
sbb
in
pop
push
test
jae
sub
xor
cmp
cmp
push
jb
mov
pop
fwait
pop
add
pop
xor
hlt
mov
sub
cwtl
popa
insl
jecxz
xor
mov
mov
cmpsb
mov
xchg
cmp
fiaddl
js
mov
stos
mov
decl
mov
jo
mov
ss
movl
int3
fwait
mov
fcompl
mov
xor
incb
lods
jns
xchg
jnp
mov
pop
cmp
sbb
mov
mov
imul
push
aaa
or
pop
hlt
and
xorb
fs
out
mov
imul
dec
movsb
dec
lea
les
sti
mov
in
int
ret
jnp
push
mov
pop
call
push
fs
xchg
jb
jmp
test
jne
or
test
push
lcall
leave
push
jno
mov
movsl
xchg
dec
xchg
jp
add
js
roll
subl
push
mov
adc
cmp
ret
aaa
xchg
push
xorb
cs
pop
jae
mov
aaa
mov
lods
stos
icebp
int
xor
ficompl
mov
push
sbb
sarb
jmp
xor
bound
mov
xchg
fadds
cmpsb
xlat
push
movsl
dec
add
and
pop
out
mov
das
testl
popa
out
jl
and
popa
inc
les
sub
in
rcrl
ret
xor
mov
mov
cmp
jmp
out
pop
pop
cmpsl
out
add
int3
mov
push
mov
mov
out
push
bnd
mov
imul
xchg
repz
xchg
add
lahf
adc
sub
repnz
jmp
jnp
jae
add
popa
push
aad
insl
jae
mov
inc
lock
iret
mov
out
icebp
mov
fmull
popa
mov
xor
xor
repz
sbbb
adc
dec
out
cmp
lods
pusha
push
dec
mov
mov
jle
mov
adc
jne
js
mov
inc
out
xchg
mov
xchg
iret
addr16
mov
inc
and
mov
mov
mov
xchg
mov
jp
stos
sub
lea
or
hlt
dec
popa
add
push
call
and
clc
inc
dec
out
mov
xlat
or
sub
mov
dec
shrl
mov
pusha
sbb
mov
and
test
aad
and
icebp
lret
loop
lret
in
pop
loope
cs
cmp
xor
ds
sbb
mov
stc
fwait
lock
jb
mov
and
stos
push
inc
insl
cld
pop
test
mul
pop
inc
stos
or
ds
negl
ljmp
lahf
xchg
movsl
jnp
xchg
push
rcr
in
rcll
scas
ret
xchg
into
mov
sub
dec
testb
jne
repnz
stos
dec
ds
add
lret
movsl
inc
ds
syscall
das
mov
dec
adc
mov
cmpb
inc
or
int
dec
pop
xchg
xlat
and
xchg
nop
out
inc
testb
adc
popf
cs
jl
fisubrl
sub
cmp
ret
adc
je
add
add
mov
cltd
mov
jno
add
sub
add
hlt
xchg
mov
into
push
inc
jecxz
cmc
push
dec
pop
mov
outsb
neg
pop
cmpsl
movsl
test
adc
insb
nop
xor
popa
in
jp
xchg
insb
add
mov
cmpsb
and
nop
jecxz
out
mov
mov
push
jae
ret
inc
stc
cmpsl
stc
fcompl
adc
mov
ret
adc
or
or
idivl
dec
pop
pop
xchg
xchg
fwait
movsb
adc
sbb
or
push
scas
stc
insl
stos
loope
pushf
mov
xor
xchg
cmpsl
ss
push
packsswb
pop
push
icebp
int3
sbb
int3
sbb
mov
inc
repnz
adc
popa
mov
sbbl
loopne
sbb
repnz
sub
or
push
outsb
and
add
xor
fisubl
add
lods
jl
out
scas
sbb
jbe
jp
test
scas
inc
add
xor
jle
ss
jo
pop
sub
insl
pop
add
les
out
in
icebp
into
mov
outsb
stos
inc
clc
or
cmc
xchg
inc
push
out
cmc
pop
jle
or
push
shr
fsts
insb
jne
rcrb
push
jp
push
mov
push
andb
pop
mov
mov
rorl
inc
add
test
push
ss
lds
adc
sub
shlb
inc
mov
push
cmp
sub
inc
scas
pop
into
mov
fwait
jno
gs
inc
add
ds
pop
in
scas
in
sub
xchg
in
mov
push
sub
jmp
xor
std
insb
pushf
xchg
jbe
adc
sbb
rorb
fstps
cmp
call
popf
and
push
ret
mov
cmc
aaa
mov
repz
stos
mov
jp
cmp
test
fsts
pushf
push
dec
aam
mov
add
xchg
mov
xchg
loop
dec
setge
xchg
cmp
dec
sbb
xor
and
iret
pop
and
jge
outsl
clc
inc
aam
icebp
es
sbb
pushf
jbe
jecxz
mov
or
jmp
testl
pop
cltd
lock
bound
push
or
repnz
mov
ljmp
jbe
ret
shr
pop
popa
cwtl
inc
fistpll
pop
icebp
mov
mov
jmp
mov
lret
adc
xorb
or
icebp
lahf
sahf
add
int
sub
in
xor
ret
pop
and
xchg
mov
sbb
jmp
lcall
push
xchg
jge
roll
rcr
repz
test
adc
and
or
jae
out
in
xchg
aaa
mov
xor
dec
out
into
lahf
jle
add
mov
jl
xor
inc
jmp
test
jecxz
or
jmp
cld
sahf
xor
sti
mov
mov
ss
daa
inc
mov
mov
mov
and
mov
mov
mov
sarl
adc
insl
push
sub
and
data16
es
ljmp
jo
mov
dec
push
shrl
imul
jo
movsb
push
lods
lock
sti
inc
insb
xlat
jnp
aas
xchg
out
ss
jecxz
fsubs
inc
pop
cmp
test
push
aas
lock
outsl
fcompl
fmulp
nop
std
pop
cmc
nop
enter
mov
push
lods
adc
in
inc
popf
scas
cmc
sub
mov
inc
inc
iret
xchg
cld
xor
push
adc
xchg
jae
and
cmp
and
mov
ret
xor
inc
mov
push
jo
test
jnp
push
inc
pushf
movsl
int
pop
xchg
xchg
jo
rcrb
cltd
inc
outsb
mov
mov
dec
sti
dec
or
fstps
xchg
push
adc
inc
pop
fs
mov
or
adc
stos
cmp
pop
mov
aas
fisubrl
jl
stos
dec
jae
stc
add
icebp
insb
cs
out
pop
js
push
cli
shrl
adc
push
inc
outsl
sub
imul
cmpsb
test
xlat
mov
popf
stos
sub
push
or
sbb
inc
mov
rorb
xlat
leave
cmp
inc
cld
dec
sar
xchg
mov
xchg
daa
add
test
stos
fbld
out
mov
outsb
sub
xchg
cmpsl
inc
out
sti
dec
ss
mov
pusha
fadds
mov
sub
or
cmp
mov
call
add
rcrl
add
imul
pop
sub
cmpsb
push
xor
lds
mov
mov
inc
inc
jne
lcall
fwait
mov
cmp
dec
sti
std
xchg
incl
push
cmp
jge
cmp
push
int3
mov
ja
lahf
or
aad
and
xchg
lahf
pop
sub
cmc
sbb
or
mov
arpl
out
test
cmp
ret
mov
das
inc
inc
mov
divl
orb
or
call
icebp
movl
arpl
outsb
pop
repnz
out
ret
and
sbb
sbb
in
pop
or
js
scas
cwtl
cltd
cs
jecxz
ljmp
lods
or
mov
mov
adc
cmpsl
int
loop
aam
dec
or
pop
leave
out
adc
mov
add
adc
aaa
sub
fstl
cli
xchg
push
fwait
stos
and
mov
mov
dec
subl
daa
jmp
jae
out
scas
mov
sbb
aam
inc
xchg
add
insb
lahf
mov
loopne
adc
sbb
pop
rcll
pop
push
mov
xchg
sbb
push
testl
xchg
lods
lcall
sbb
sbb
pop
pusha
mov
in
cwtl
push
dec
ds
int3
mov
loop
inc
imul
jmp
sub
adc
adc
mov
add
sbb
jns
lock
and
std
insb
push
cmpsb
int
gs
lahf
jno
clc
xor
pushf
arpl
call
xor
jg
cli
fs
out
ja
and
sar
jae
xchg
mov
test
jns
pop
dec
mov
sbb
call
movsb
aas
push
pop
clc
sub
adc
xchg
dec
pop
add
cmp
lods
incl
push
inc
jge
orl
in
add
cli
daa
pop
push
fmulp
jne
scas
imul
cmc
add
lods
outsl
mov
sbb
sti
mov
add
andl
cmp
sbb
dec
addr16
adc
rolb
jecxz
fldt
cwtl
and
sarb
fs
and
jns
sti
sbb
jne
mov
sbb
test
stos
test
xor
cld
jmp
out
test
sub
daa
adc
lret
or
push
nop
sbb
decl
lahf
pop
or
add
add
daa
inc
mov
push
mov
cld
xchg
lock
adc
in
in
pop
ljmp
cltd
scas
xor
flds
jb
loope
push
aad
in
cmpsl
jb
fstl
push
mov
sti
pop
pop
sub
pop
es
push
popa
adc
xor
jecxz
dec
mov
mov
inc
xor
and
mov
inc
adc
mov
popa
fs
rclb
lds
fwait
xchg
jo
mov
dec
cltd
lahf
sbb
hlt
mov
shrl
cld
stc
pop
into
clc
ljmp
pop
mov
sub
mov
leave
out
inc
and
pushf
in
mov
push
test
inc
push
imul
sbb
mov
add
adc
push
hlt
mov
or
outsl
mov
test
cli
into
pop
inc
sub
inc
out
dec
sub
inc
adc
mov
mov
xor
inc
fdiv
sbb
sub
xchg
pop
or
das
add
fwait
data16
dec
dec
dec
jmp
jl
repnz
idivl
push
dec
repz
shll
out
adc
jle
insb
jno
push
xchg
xor
sbb
mov
cmp
cmp
add
jns
imul
dec
enter
inc
in
repnz
fmull
repz
adc
lods
popf
pop
cmp
push
aaa
dec
mov
jae
daa
in
fstp
add
into
dec
mov
fistl
sub
pop
test
inc
loopne
mov
leave
jle
push
dec
or
data16
push
sub
repnz
es
es
dec
addr16
sub
or
push
push
out
or
out
aaa
and
inc
jo
fidivrl
pop
lahf
pop
iret
popa
mov
dec
mov
xchg
jb
jmp
inc
xchg
sbb
repnz
xchg
imul
jno
push
cmp
jo
fdivrs
loop
scas
leave
add
cmp
push
ja
movsl
jg
idiv
add
inc
movsb
xchg
jmp
ja
lds
dec
stc
sbb
add
add
and
sbb
inc
loop
loope
mov
xchg
pop
or
int3
dec
sahf
jae
cmp
inc
push
xlat
mov
sti
and
push
jns
into
jg
fmuls
or
mov
cmpb
or
mov
dec
mov
repnz
mov
or
adc
pop
sbb
mov
int
xchg
xor
aaa
adc
cmp
jp
test
cmpsl
out
adcw
mov
loop
mov
dec
xchg
xchg
es
adc
rorb
push
cld
jecxz
cmp
loope
or
in
inc
mov
cwtl
dec
xchg
inc
ss
inc
ret
shll
mov
push
and
sub
jne
loop
and
pcmpgtw
mov
xchg
push
xlat
inc
fisubrl
dec
lock
nop
movsl
mov
pop
jl
stc
adc
lcall
inc
arpl
sub
pop
pop
sub
adc
es
adc
mov
cmp
ret
fmuls
in
mulb
dec
stos
loope
ljmp
xor
outsl
fdivrl
xlat
pushf
comiss
jmp
lds
or
mov
ret
dec
addr16
decl
or
adc
and
inc
sbb
in
dec
bound
popl
and
ret
inc
adc
stos
dec
ret
push
jle
xor
pop
inc
cmc
movl
push
lcall
adc
rclb
and
adc
in
xlat
pop
sbb
in
xchg
cltd
movsb
mov
inc
data16
push
popf
pop
ret
sbb
mov
test
andb
test
mov
lret
out
mov
mov
adc
repnz
or
and
xchg
sub
mov
dec
roll
adc
arpl
dec
ljmp
xchg
ret
call
adc
xor
rcll
fiadds
mov
mov
adcb
pxor
mov
mov
cmp
inc
sub
icebp
mov
es
enter
xchg
and
cmp
xlat
pop
aaa
js
dec
repz
mov
inc
dec
xor
pop
add
popf
stos
pop
xchg
jnp
push
mov
test
je
out
rolb
xchg
lods
cmpsl
adc
jb
mov
rclb
adc
sub
sub
scas
and
and
jg
mov
adc
stos
pop
add
repz
mov
pop
cmp
lods
daa
mov
test
vmovaps
pop
ljmp
jb
movl
sub
jno
jbe
popa
idiv
aam
xchg
push
xor
pop
mov
std
mov
out
shrb
or
in
dec
pop
push
movsl
dec
mov
sbb
arpl
push
mov
shr
sahf
adc
xchg
mov
sbb
xlat
lahf
test
xchg
hlt
mov
jae
in
sbb
push
xor
ja
inc
push
push
lods
shll
cmpsb
jbe
lock
cmp
mov
mov
push
aad
dec
and
push
adc
sbb
notb
sub
push
mov
mov
mov
out
out
inc
or
popa
inc
lods
icebp
mov
or
sar
push
push
jle
enter
ret
push
aas
push
jo
dec
adc
jo
add
pop
out
mov
jno
adc
fwait
and
jo
shlb
pop
sub
sbb
sti
ret
and
mov
mov
pop
ret
mov
adc
int
dec
insl
cli
push
test
xchg
rcrl
mov
cmpsl
xor
and
fldl
sub
lahf
sub
mov
and
pop
andb
push
aas
cli
inc
mov
xor
xlat
sub
das
loopne
add
pop
mov
jle
push
xorl
rcrl
call
lods
out
mov
mov
xchg
ja
pop
cltd
adc
sub
and
insb
jbe
sbb
popf
pusha
xor
xchg
xchg
mov
push
dec
mov
xlat
icebp
into
push
push
and
mov
ds
cmc
fbld
xor
aaa
push
cmp
push
mov
das
stc
mov
fstpl
add
mov
popa
inc
scas
lahf
and
rorl
in
sub
inc
ret
or
sbb
das
lahf
shr
inc
lcall
and
jle
das
cmc
stos
push
xchg
stos
sbb
notb
push
jae
mov
inc
xchg
scas
sti
shrl
lret
and
ss
rorl
cs
cli
orl
lret
pushl
popa
and
cs
adc
fldenv
data16
jo
lcall
or
pop
jmp
dec
push
or
push
movsl
repz
adc
jmp
rolb
frstor
fwait
nop
addr16
mov
xor
xlat
fildll
mov
pop
call
add
aad
or
or
or
addl
cmc
arpl
pop
jbe
test
mov
jp
and
push
dec
pop
sahf
ljmp
out
lahf
das
push
jo
sbb
cmp
cmp
loop
sbb
and
imulb
dec
pop
lds
adc
int3
mov
fisttpll
sub
test
popf
dec
sbb
jge
mov
mov
fs
pop
shr
hlt
adc
imul
outsb
cwtl
jns
andl
lock
int3
testl
cwtl
mov
outsb
xlat
push
arpl
sbb
cmpsb
push
sbb
mov
mov
jmp
arpl
fsubrs
andl
sti
pop
mov
punpckhbw
pop
sub
call
push
mov
xchg
mov
sbb
adc
ja
sub
mov
push
lea
outsb
in
push
fiadds
xchg
fstpt
ficompl
mov
and
inc
sub
adc
and
adc
dec
loope
mov
mov
mov
pop
aam
jbe
jecxz
in
push
mov
push
popa
lcall
jmp
std
cmp
rorb
into
into
pop
sahf
shlb
ja
out
dec
mov
mov
call
pop
bound
in
push
xchg
es
icebp
cwtl
sub
inc
ret
push
mov
clc
movsb
push
shr
or
daa
xlat
flds
xor
fnstenv
jbe
fs
in
call
insb
imul
xor
out
xor
lds
inc
push
mov
ret
inc
shrb
pop
fs
jge
leave
fwait
bound
or
dec
and
pop
leave
xchg
ret
shrb
loope
inc
fmuls
mov
sub
pusha
xorb
sbb
push
xor
addr16
popa
push
lock
xlat
fcoml
pop
sti
pop
sub
aaa
mov
jg
pushf
fs
movsl
sbb
int3
xchg
cmp
rep
jg
in
mov
xlat
inc
sub
in
add
xchg
push
sub
push
sti
mov
cs
loopne
out
or
sub
fs
xchg
sub
or
aad
cwtl
inc
push
inc
ljmp
orl
cmp
inc
adcb
mov
and
loopne
popf
test
or
or
pop
sbb
pusha
sbb
inc
cmp
outsb
inc
aad
add
mov
lock
sub
or
notb
xchg
scas
iret
fsubr
cmpsl
in
ds
xchg
int
fdivrl
dec
adc
xchg
mov
cli
call
cmp
mov
lret
rorl
mov
clc
push
mov
jno
call
loope
jecxz
lea
sbb
jp
insl
inc
pop
pop
sbb
push
jmp
rclb
and
out
stc
dec
xchg
or
icebp
xchg
xor
xor
push
jmp
into
mov
cld
sbb
adc
test
adc
out
and
adc
fildll
xor
pop
push
fs
je
in
inc
leave
imulb
mov
mov
daa
mov
out
ljmp
movsl
scas
mov
out
lahf
mov
xor
pop
cmp
xchg
addl
xchg
ror
ret
sbb
ret
push
sbb
xor
inc
mov
cmp
sbb
pushf
xchg
mov
nop
jp
or
and
into
out
adcl
aad
push
mov
mov
shrb
sarl
aas
xchg
or
inc
push
mov
loopne
or
loope
rcr
je
inc
fsubl
inc
xlat
fnstcw
insl
adc
mov
mov
cmp
popf
mov
mov
scas
shll
jb
jns
in
push
scas
push
xor
outsl
fwait
mov
push
dec
sbb
xchg
ss
rolb
paddd
xor
and
sub
mov
lcall
stc
adc
fdivl
mov
mov
aaa
shll
popf
lods
jo
imul
inc
into
mov
popa
sbb
out
or
scas
jbe
push
fldl
sbb
ds
sbb
mov
out
sarb
adc
sti
insl
leave
mov
xlat
call
inc
ret
pushf
mov
jb
mov
sbb
mov
xchg
daa
int3
scas
addr16
dec
fs
cld
push
push
sub
jg
push
sub
jmp
arpl
push
test
pop
jmp
or
les
sbb
xor
jge
jnp
jae
mov
lea
cltd
popa
inc
shl
pop
fcmovne
sub
adcb
mov
dec
push
mov
sti
pop
hlt
repz
loope
cmp
inc
inc
mov
pop
and
mov
mov
mov
jb
shrb
imul
mov
ret
pop
leave
mov
sbb
fsubrl
movsl
push
mov
xchg
jecxz
syscall
nop
movsl
push
pushf
lods
imul
mov
mov
xchg
push
adc
cmp
push
test
daa
shlb
adc
sbb
test
movsb
or
add
insb
adc
rorl
shrl
dec
mov
pushf
ret
movsl
fcomip
push
ds
insl
cltd
pop
mov
loop
lods
and
js
and
xorb
push
and
ljmp
cwtl
leave
pusha
xchg
mov
push
imull
vmovss
repz
scas
inc
xor
fwait
ss
add
mov
cwtl
add
nop
testl
insl
jae
sbb
jno
scas
mov
pop
pushl
and
lahf
jnp
mov
jnp
mov
sub
addb
sti
popa
xchg
lods
mov
repz
idivb
dec
iret
lds
in
add
or
pop
sub
pushf
imull
inc
adc
shlb
and
mov
mov
fprem
fsts
loope
pop
aad
jmp
jge
sbb
inc
mov
in
mulb
sbb
rcrl
leave
pop
or
ret
adc
lods
pushf
and
sub
add
mov
ds
pushf
push
sarb
insb
dec
test
push
xor
jno
cmpsl
push
mov
arpl
aaa
mov
ret
jmp
jae
xchg
push
mov
sbb
add
std
fsubrl
lods
cmp
mov
loope
sub
lods
pop
sbb
jne
mov
ret
into
add
test
cltd
in
call
mov
in
shrb
mov
imul
sub
scas
sbb
xor
jg
xor
sbb
cwtl
push
sub
jmp
mov
push
xor
jecxz
cmp
mov
or
add
mov
dec
cmpsb
iret
scas
mov
mov
sbb
fwait
out
and
mov
mov
out
data16
stc
sbb
pop
sub
lret
loope
jbe
loopne
outsl
jmp
imul
mov
jecxz
lahf
fs
imul
lods
test
push
data16
add
stc
pushf
arpl
pop
and
jge
pop
fistl
xor
push
adc
inc
sbb
aad
adc
fsubrs
test
adc
mov
aad
push
pop
cltd
xorb
out
pop
inc
push
iret
push
xor
mov
mov
aam
dec
pop
nop
mov
cwtl
lfs
pop
cmp
test
fs
or
outsl
xchg
sbb
repz
das
aaa
sti
lret
outsb
orl
hlt
add
cmpsl
movsl
stc
push
ja
out
mov
inc
nop
pop
in
adc
xchg
xor
jnp
dec
and
and
loop
cld
adc
popf
fwait
add
mov
adc
or
bound
out
ficompl
and
push
and
loopne
cs
mov
test
ficoms
jmp
shl
popf
adc
outsb
push
mov
out
loope
mov
fsubl
jne
cmpsb
into
and
leave
pop
aam
push
or
sub
inc
inc
adc
sub
repz
movsb
mulb
cmp
jne
adc
popf
fwait
sbb
cs
insl
ret
jb
inc
inc
shufps
bound
cltd
or
shrb
mov
jmp
cmp
lcall
shrb
pop
xchg
ljmp
adc
test
das
inc
push
mov
test
stc
clc
push
inc
and
fisttps
mov
out
mov
mov
inc
mov
imul
jbe
pop
or
and
jecxz
shlb
dec
xchg
in
clc
std
movsl
and
aas
xchg
xor
repnz
sbb
push
sbb
iret
mov
outsl
push
shll
pop
fmul
mov
aam
xchg
and
fstpl
mov
outsb
ret
sub
loopne
sub
pop
es
fsubs
mov
sbb
jecxz
jmp
sti
popf
jmp
sub
pushf
mov
sbb
fwait
scas
sbb
mulb
dec
adc
adc
push
mov
lock
insb
lret
shll
pop
icebp
and
stos
lahf
xor
cmp
and
sbb
push
sahf
mov
clc
and
inc
cltd
stos
loopne
out
xlat
inc
mov
adc
lea
add
cmp
scas
outsl
js
inc
iret
movsl
shl
push
pushf
mov
adc
mov
leave
call
hlt
cmpsl
push
ficoms
loop
enter
sbb
jmp
aad
jb
and
mov
mov
nop
xor
leave
sub
shl
push
clc
pop
cltd
mov
int3
jmp
fidivl
cli
pop
jle
sbb
push
pop
outsb
popf
mov
mov
xchg
rorl
pop
adc
mov
outsl
adc
xlat
mov
clc
push
testl
cmp
cmc
pop
xchg
mov
fsubl
in
cmpsl
adc
popf
cmp
pop
inc
cmpsb
inc
lods
sar
fmuls
sbb
jbe
jns
jbe
dec
mov
cld
arpl
sub
fstps
cmpsl
cs
pop
nop
pop
mov
cmp
dec
push
and
in
mov
mov
adc
cmc
mov
adc
jmp
insl
pop
adc
and
mov
sub
sbb
jb
repnz
ret
in
push
adc
incl
jnp
idivb
and
cmp
xor
mov
loopne
gs
es
dec
add
repnz
cmp
mov
jbe
shl
jge
dec
jbe
sbb
sub
xor
push
xchg
lahf
cmp
inc
adc
sbb
mov
dec
push
leave
in
or
or
lret
enter
dec
repz
dec
dec
inc
sub
in
es
sbb
aad
xor
sbb
inc
cwtl
andb
jnp
cld
das
mov
mov
aaa
jmp
enter
mov
jno
xchg
cli
pop
xchg
test
push
iret
in
movsb
xchg
lds
dec
sbb
mov
jmp
addb
push
or
hlt
inc
lret
pop
mov
cmp
mul
lahf
mov
outsb
stos
cs
mov
scas
xor
jecxz
and
aam
xchg
push
cmc
sbb
jmp
dec
push
sbb
movsb
mov
mov
sbb
or
inc
inc
cld
cmpsl
insb
stos
shlb
dec
mov
mov
leave
pop
add
into
sub
outsl
inc
ret
add
and
xor
jl
sbb
notb
push
add
fildl
in
movsb
or
pop
pop
test
outsl
dec
mov
dec
inc
jl
add
ret
aaa
mov
pop
call
jo
push
xlat
jne
mov
jl
inc
lods
mov
stos
xor
fiaddl
lock
pop
and
out
add
ljmp
cltd
xchg
pop
in
jmp
lret
add
dec
cmp
repz
or
nopl
out
lahf
fmul
inc
push
lock
xchg
dec
cs
loop
inc
stos
inc
mov
leave
push
lret
xchg
aam
in
test
std
mov
dec
sbb
dec
inc
lods
stos
and
push
out
pushw
je
add
fwait
adc
aaa
cmpsl
in
outsl
fdivl
mov
mov
lods
nop
addr16
xor
daa
lea
fistpl
scas
scas
ljmp
call
mov
movsb
pop
arpl
mov
pop
sub
xor
cmpsb
repnz
aas
jns
scas
xchg
iret
adc
cmpsb
sbb
shlb
sti
leave
sub
mov
clc
sahf
xor
stos
ss
fcomps
flds
add
adc
mov
or
es
xchg
and
sub
aaa
fimull
gs
dec
arpl
mov
adc
loop
push
pop
inc
xchg
imul
push
jbe
mov
mov
xor
lock
mov
test
in
insb
xor
pop
or
inc
cmc
jno
push
mov
js
shll
es
cwtl
cltd
push
jnp
xor
out
insb
add
inc
push
out
adc
aaa
inc
mov
adc
lds
fucomp
dec
icebp
adc
repz
enter
fdivr
adc
out
repnz
data16
cli
cli
leave
inc
popf
sub
push
xchg
popf
addb
sub
add
filds
xorl
push
out
mov
shrb
push
jg
addr16
rclb
adc
out
ficomps
cmp
pop
fisubrl
sti
dec
mov
iret
jae
daa
sbb
mov
sub
jecxz
sbb
orb
push
ss
lock
sbb
repnz
loopne
xor
pop
mov
scas
mov
mov
fwait
in
jae
and
enter
arpl
insb
movsb
std
inc
pop
ja
jmp
xor
insb
inc
jp
mov
and
cmp
int3
cwtl
add
adc
mov
sub
jge
mov
and
in
bound
add
xor
ret
adc
je
or
jl
jne
dec
scas
sbb
cwtl
pop
in
call
pop
sbb
mov
and
adc
pop
aad
add
or
out
cs
arpl
dec
inc
mov
inc
movsb
scas
pop
cmp
mov
gs
lods
push
mov
es
popa
std
jmp
icebp
xor
xor
outsl
xor
movsb
xchg
add
roll
mov
push
in
push
lcall
mov
ja
sbb
jo
dec
lcall
push
jbe
bound
mov
fs
add
mov
fildll
push
mov
xorl
jle
jno
addr16
in
loopw
pop
mov
ds
add
test
push
add
or
xor
jg
inc
sarb
sbb
insb
mov
gs
adc
sbb
stos
jne
cmp
cmp
pop
clc
xchg
mov
xchg
adc
enter
loop
ljmp
roll
je
and
cld
xorl
cmpsl
inc
mov
test
jbe
fmul
cld
cmpl
lcall
ljmp
xchg
mov
std
push
xchg
xchg
jae
sahf
loope
movsb
es
dec
shll
mov
xor
aaa
stc
gs
xor
add
push
inc
inc
jo
movsl
fiadds
mov
ficomps
fucomp
arpl
icebp
outsb
dec
lahf
mov
mov
in
push
xchg
mov
mov
ljmp
dec
call
imul
push
xor
dec
pusha
inc
xor
jno
movsl
lods
sub
sub
lock
loop
and
push
fistl
push
fs
lods
out
cmpsb
js
imul
test
push
cmpb
cmp
rcll
outsl
mov
lods
pop
and
dec
xor
inc
push
aad
lds
xchg
clc
dec
pop
cmpsb
dec
pop
cmp
and
es
lods
out
mov
inc
adc
mov
xchg
push
ret
mov
inc
sbb
scas
mov
lock
mov
mov
jno
shl
push
dec
cmp
call
testl
xlat
in
scas
add
pop
scas
mov
dec
pusha
jg
test
push
into
mov
aas
cld
loopne
mov
int
pop
insl
mov
jmp
or
in
xlat
ret
outsl
lods
pop
xchg
cli
push
push
lock
out
or
scas
push
insb
js
call
dec
mov
rorl
adc
or
pop
imul
jnp
fsubs
jmp
rorb
pop
dec
dec
jl
dec
ret
fwait
pushf
rcll
jno
inc
lds
test
clc
clc
xchg
or
mov
dec
xor
mov
out
in
inc
mov
das
int
out
mov
fldt
cmpsb
pop
jmp
mov
mov
sbb
lds
mov
lock
jp
sti
mov
xor
or
pop
jecxz
mov
or
jp,pt
cld
imul
vmovapd
pop
xor
push
cltd
sub
imul
insb
in
xchg
mov
xchg
jno
icebp
cmp
js
inc
jne
mov
mov
xchg
mov
jecxz
out
sahf
aam
lret
cld
sbb
aaa
outsl
mov
arpl
add
dec
cmpsb
cmc
lods
pop
sbb
cwtl
sbb
xchg
push
loop
cs
arpl
incl
mov
xchg
loop
sbbl
mov
inc
pop
mov
sahf
js
rcl
iret
outsl
sbb
pop
cli
inc
mov
insb
lock
sbb
sub
push
out
les
inc
xor
mov
cmp
insl
jae
es
into
int
lods
stos
out
jg
pusha
sub
aam
fcmovnu
das
ss
rcll
test
jns
push
cmp
pop
scas
and
mov
daa
icebp
push
fbld
insb
sti
and
loop
push
aad
dec
pop
jb
cs
cltd
fld
rorl
scas
jnp
movsb
inc
outsb
scas
imul
test
in
arpl
mov
xchg
dec
popf
outsb
push
lret
insl
gs
pop
xlat
pop
cld
test
lret
into
lret
push
loop
mov
push
jge
cmp
add
mulb
mov
enter
rorl
cmp
and
push
push
adc
jne
int3
jbe
enter
mov
out
imul
adc
sbbl
pushf
push
dec
push
or
push
stos
pop
adc
mov
dec
int
push
nop
mov
mov
js
cmp
mov
stc
iret
cmpsl
xor
push
sub
testb
aas
adc
sub
mov
or
mov
scas
xor
out
pop
push
rorb
adc
or
shll
inc
in
pop
sarl
popf
and
pop
mov
mov
sub
es
fcomps
in
push
jp
and
iret
divb
sbb
shrl
divl
ret
das
xchg
inc
cmp
lcall
pop
iret
mulb
dec
xor
mov
xchg
ss
pop
cmp
jmp
scas
pop
and
outsl
fisttpll
mov
sub
mov
insl
das
inc
jg
and
nop
lcall
xchg
pop
inc
dec
cli
mov
ret
pusha
nop
in
or
fcomps
loop
sbb
or
stos
mov
jne
scas
push
nop
in
push
sub
fwait
push
xor
sbb
das
negl
xor
adc
push
mov
sub
mov
pop
push
sbb
cmp
mov
lds
mov
mov
lods
xchg
cmp
insb
mov
out
sub
xchg
cwtl
sbb
dec
mov
cli
es
loope
in
scas
das
int3
int
push
sti
std
adc
shll
lcall
push
push
loopne
xchg
mov
xor
leave
pop
cmp
sti
mov
stc
sbb
sub
pop
repz
mov
xlat
out
dec
out
mov
std
faddp
inc
fistps
cwtl
insb
dec
mov
mov
xor
jmp
jb
mov
lea
lahf
jnp
cwtl
repz
sub
mov
insb
lods
sarb
fsts
data16
sbb
stos
lahf
outsl
test
pop
mull
mov
inc
outsb
out
test
movsl
cmp
arpl
inc
and
into
ror
push
lods
into
daa
sbbb
dec
gs
lock
push
std
out
pop
jmp
mov
jnp
jmp
jbe
sbb
leave
cmp
lahf
xor
das
popf
bsr
jne
sbb
jge
clc
adc
sbbl
xchg
sarl
in
sbb
push
sub
int
mov
pop
adc
fidivrl
testb
dec
iret
inc
jmp
push
push
xor
xor
push
sahf
or
nop
enter
out
sbb
lods
rorb
fs
dec
es
in
sahf
inc
pop
fmull
fcoml
ret
fnstenv
dec
add
xchg
lret
addr16
nop
loop
sub
shrl
xchg
sahf
divb
aas
xchg
dec
in
sbb
push
or
sti
dec
xor
adc
xchg
pop
out
and
and
pop
xchg
xchg
das
fldenv
xor
jmp
ret
jbe
aad
jno
shl
scas
dec
mov
pushf
mov
xchg
and
and
movsl
adc
lock
iret
or
pushf
and
jo
addr16
das
sbb
sti
bound
ret
jno
aaa
imul
mov
xor
push
pushf
popa
cs
ret
xor
xor
mov
push
mov
dec
mov
dec
adc
push
pop
mov
inc
push
jb
mov
repnz
into
jne
jns
dec
xchg
cmpsl
hlt
dec
push
dec
dec
std
ret
pop
inc
mov
ret
lahf
mov
mov
sbb
jb
mov
in
jbe
pop
cli
push
jb
sti
mov
push
mov
pop
mov
fs
hlt
insl
or
xlat
mov
js
movsl
mov
mov
cmp
and
mov
cmp
jbe
mov
movsw
jge
dec
jno
xor
insb
xchg
cmp
add
int3
outsb
daa
in
or
mov
lods
addl
adc
sub
das
in
movsl
cwtl
add
add
ljmp
loop
in
xchg
mov
dec
call
cld
mov
add
add
fidivl
add
ret
adc
popa
outsb
xorl
inc
orb
fwait
jb
jnp
insb
or
and
fldl
shl
jg
inc
mov
jnp
out
inc
sbb
stos
mov
push
xor
fcmove
jg
popa
insl
jae
push
xchg
call
adc
scas
push
cs
mov
or
stc
rorb
mov
jne
hlt
adc
leave
stc
mov
inc
in
cmp
mov
repnz
addl
fdivr
push
add
jns
inc
xchg
out
xchg
pop
cs
mov
and
push
xlat
cs
int3
pop
mov
movsb
and
scas
outsl
mov
sub
sub
push
popa
fisubl
push
sbb
push
cmp
push
jns
ss
and
movl
lcall
mov
mov
scas
in
sbb
in
sub
psubusw
cmp
inc
xchg
push
cmc
repz
push
dec
jmp
das
inc
push
and
lds
das
popa
cltd
outsl
int
pusha
pop
xor
int
dec
add
movsb
divb
out
mov
stos
mov
xor
cmpl
dec
pop
insb
push
jo
jle
pop
pop
imul
in
aaa
or
cmc
mov
pop
bswap
sbb
adc
addb
ret
mov
outsb
sti
push
xchg
into
jge
mov
out
popa
int
sahf
mov
pushf
psrlq
mov
sub
jo
ret
push
adc
pop
inc
cmp
xchg
mov
mov
in
adc
jae
xchg
cmp
inc
out
cmpsl
sub
add
mov
dec
in
xlat
inc
loop
addr16
xchg
scas
mov
jmp
mov
pop
dec
loope
xor
push
pop
data16
add
or
fldt
sti
adcl
sub
cmp
popa
popa
mov
jl
xchg
mov
xchg
xor
xchg
mov
mov
fst
shlb
mov
or
ja
xchg
fs
add
loopne
sbb
aad
mov
enter
jb
loop
mov
xchg
cld
lea
fsts
out
jg
loop
and
or
pop
and
push
mov
pop
push
jmp
popa
inc
loope
cmp
adc
dec
inc
daa
cmp
mov
push
sbb
stos
ds
aad
les
xor
jg
xchg
and
adcl
pop
iret
jno
adc
movsb
xchg
dec
mov
jmp
dec
fisttpl
lret
sub
fldcw
mov
test
sub
clc
fisubl
mov
push
or
xor
push
mov
movsb
hlt
xor
mov
out
mov
rcl
aas
movsl
jl
cmc
test
aas
enter
test
lods
xor
dec
sarl
daa
dec
pop
mov
loope
jl
bound
inc
pop
sbb
push
or
jo
sbb
dec
xlat
sub
sti
add
outsb
xchg
gs
mov
jmp
sbb
orb
jo
jae
inc
xor
or
adc
xchg
fs
xor
jno
arpl
out
into
mov
rolb
push
lahf
or
pusha
aas
pop
fnstsw
test
adc
pop
rol
and
jecxz
sbb
mov
movsb
or
stos
lods
cli
mov
cmpsb
adc
jo
loop
daa
aad
scas
mov
inc
pop
dec
insb
mov
sub
fsubrl
jl
cld
adc
sub
pop
jns
testl
sub
outsb
and
mov
and
xor
lret
cmp
sub
jnp
adc
jge
test
arpl
in
ss
fsubr
jg
mov
adc
loopnew
les
adc
pop
popf
and
pushf
fmul
scas
dec
adc
shll
jno
in
dec
push
into
fcmove
in
adc
out
arpl
stos
fnstcw
inc
xor
aaa
addr16
int3
push
inc
pop
inc
sbbb
cmp
stos
jno
xchg
movsb
imul
cmp
cmp
xchg
outsb
sbb
mov
push
and
cmp
push
imulb
fadd
sbb
and
mov
in
aam
sub
ret
push
lret
lret
lods
dec
lret
sarb
xchg
loopne
cmp
sub
daa
xor
popf
mov
lcall
push
add
sbb
inc
pop
push
fwait
out
jge
dec
pop
aad
dec
adc
xor
xchg
rorb
daa
sahf
push
imul
sbb
adc
mov
mov
out
xchg
inc
cmpsb
popf
pushf
stc
mov
in
lods
sub
add
jnp
sub
aaa
xchg
shrl
lds
jp
sbb
sub
add
sbb
arpl
push
xor
sub
jb
jmp
push
insb
aad
fstps
loop
rcrb
push
jne
push
lahf
andl
sub
mov
or
in
adc
in
and
mov
or
jg
outsb
or
mov
shl
cltd
jne
aad
iret
and
xchg
out
xor
stos
adc
xor
push
ret
imul
in
sub
xchg
sbb
mov
sti
mov
test
adc
mov
fstl
mov
sub
jg
mov
inc
adc
cmp
leave
push
push
stos
cwtl
rolb
iret
lds
jge
sbb
cmp
jae
aaa
sbbl
mov
fwait
clc
mov
lock
fninit
jecxz
or
stos
jmp
dec
insb
xchg
mov
orb
inc
inc
mov
aam
jbe
aad
sti
pusha
je
mov
data16
mov
imull
out
mov
push
js
fldl
jb
ficoms
xchg
cmp
cmp
cmpsb
testl
xchg
or
out
mov
adc
ss
sub
mov
es
aas
push
push
push
fmuls
sub
iret
pop
aas
sahf
movsl
mov
xor
add
xchg
pop
and
xchg
xlat
xchg
and
in
inc
pushf
add
push
sbb
push
xor
fdivs
sub
jnp
xchg
cli
push
lock
mov
stos
mov
iret
or
in
jo
pop
addr16
jo
pop
sahf
xor
stos
repnz
jnp
mov
insl
test
xchg
js
jb
mov
push
mov
lods
inc
cmp
fdivl
scas
pop
repnz
out
inc
test
out
imul
mov
jmp
lcall
outsb
jae
sub
pop
jl
mov
iret
scas
jbe
cmp
sub
sub
or
push
lods
dec
repz
shlb
daa
pushf
fwait
xor
sarb
fs
test
scas
pop
sub
lahf
inc
or
adc
or
call
mov
cld
fsts
pop
movsl
push
jno
imul
inc
lods
inc
mov
pop
enter
or
dec
sbb
xchg
dec
mov
lds
and
xchg
pop
adc
xchg
jb
mov
adc
insl
or
imul
andb
repnz
imul
icebp
xorb
sti
mov
sub
ljmp
hlt
popf
mov
add
add
adc
lds
addb
nop
add
lret
clc
sub
fsubrl
push
mov
cmc
ret
mov
pop
pop
ja
movsl
inc
adc
das
hlt
fdivrp
iret
mov
add
jle
sbb
das
or
xchg
jl
pop
push
cld
es
inc
push
xor
loop
clc
leave
inc
lret
cmp
push
pop
dec
pop
scas
push
sbb
ljmp
sub
insl
in
pop
xchg
and
push
inc
rclb
std
mov
inc
sbb
and
xchg
jne
sti
mov
or
sbb
or
and
imul
outsb
call
sar
sub
outsl
dec
es
push
mov
add
loop
outsb
outsb
popl
adc
leave
int3
jmp
out
sub
test
cmc
outsl
ds
repz
imul
ja
aad
repz
popa
cwtl
jmp
aad
mov
out
call
jo
insb
aam
aas
stc
lods
addl
loopne
stos
or
mov
pushf
ss
loopne
xor
mov
dec
out
dec
ss
mov
and
aas
cwtd
jecxz
scas
out
mov
adcl
hlt
bound
rolb
or
test
lods
jl
subb
gs
loop
ss
and
cwtl
movsl
es
sbb
repz
insl
lea
rcll
aaa
push
adc
daa
xchg
insl
fxch
push
add
xorb
jno
xlat
cwtl
sbbb
ja
push
insb
mov
pushf
in
repz
enter
mov
in
stos
iret
sbb
or
mov
jae
mov
btr
adc
jp
ficoms
int
pop
repnz
fisubrl
int3
js
jecxz
mov
add
jbe
lahf
adc
lahf
pop
fwait
sbb
mov
dec
out
sbb
xor
dec
xchg
mov
push
std
das
pop
std
pop
pop
xchg
lret
jg
cmp
cmp
push
sub
movsl
insl
add
pop
loopne
lds
nop
sarl
mov
jle
push
cmp
fwait
dec
mov
call
xchg
jne
jle
imul
arpl
push
mov
mov
shrb
pop
fs
mov
and
inc
xor
pop
loope
xchg
stc
cld
icebp
das
dec
shll
mov
pusha
add
jmp
xor
and
adc
out
xor
push
movsl
xchg
sbb
push
scas
je
hlt
pop
jns
cmp
out
sbb
repz
or
mov
and
sub
std
shlb
jmp
in
mov
push
cli
inc
es
pop
sahf
in
mov
xor
push
test
fistps
out
inc
arpl
jne
int
in
mov
jge,pn
or
mov
or
stos
jne
clc
adc
or
sbb
test
add
sarl
repnz
adc
inc
shll
insb
push
stc
das
ret
mov
jae
in
inc
faddl
test
repnz
or
rcll
hlt
jp
cwtl
shrl
dec
xor
add
inc
sub
inc
stc
mov
jp
inc
sbb
stos
out
add
ficomps
mov
adc
mov
inc
cmc
lret
movsl
out
call
fs
push
data16
jne
dec
mov
in
mov
inc
scas
xchg
pop
cmp
sar
or
out
mov
fucomip
mov
add
outsl
mov
inc
xchg
add
rorl
movsl
popa
adc
insl
and
leave
adc
jne
pop
test
arpl
jmp
dec
les
sbb
push
or
mov
push
mov
ficompl
data16
push
push
imul
push
xchg
jmp
dec
es
pop
jae
sub
cs
scas
movsl
inc
inc
xchg
jae
fidivl
mov
and
or
icebp
mov
fiaddl
and
and
es
add
fnstenv
sbb
hlt
xchg
push
xchg
mov
inc
aas
rorl
aaa
xchg
flds
pop
aaa
ret
lock
sbb
andl
sbb
call
lahf
xchg
jle
jmp
roll
pushf
push
ds
test
popa
rclb
pop
mov
mov
jge
push
sub
add
pop
cwtl
leave
sbb
add
inc
lahf
movsl
mov
fst
cmpsb
je
sub
mov
stos
movsl
mov
jae
mov
sbb
adcb
ss
ret
jno
jb
mov
cmpsb
cmp
push
in
dec
js
jnp
outsb
push
andb
or
icebp
mov
push
les
mov
je
sub
ljmp
pusha
dec
sti
mull
jle
ja
sbb
mov
loop
testl
xchg
out
xchg
fs
decb
cmp
in
sub
push
jmp
insb
rcr
test
nop
xor
xchg
hlt
std
pop
ret
dec
dec
mov
ljmp
scas
int3
fdivrs
stc
and
test
xchg
add
xchg
mov
pop
push
gs
xchg
push
scas
loop
push
add
cmpsl
cmpb
sbb
adc
pop
mov
adc
push
mov
mov
or
enter
mov
pop
sbb
adcb
xchg
xchg
ret
outsb
xorl
pop
cmp
iret
sbb
jnp
adcl
scas
jl
mov
dec
out
push
push
jne
adc
and
sub
stos
gs
std
js
adc
xchg
fnstenv
rorl
add
and
jae
leave
lahf
outsb
aaa
dec
das
in
xchg
xor
sahf
scas
pop
lea
in
adc
shll
and
stc
or
leave
push
xlat
lret
in
pusha
mov
add
add
push
ja
cld
fimull
inc
dec
daa
push
pop
mov
adc
in
pop
or
imulb
movsl
mov
movsb
jl
mov
add
arpl
inc
pop
push
add
push
xchg
push
std
out
push
fcmovnb
mov
fistpl
jmp
sub
loope
loopne
push
fldl
mov
xchg
ljmp
imulb
jl
mov
dec
cwtl
int3
push
mov
in
in
leave
in
push
fsts
cs
mov
adc
data16
xchg
sahf
push
in
mov
xchg
push
pop
lock
movb
sub
cmp
xchg
pop
and
mov
popf
mov
arpl
jnp
cmc
fadd
mov
icebp
add
xchg
xchg
cmp
pop
xchg
jecxz
ret
push
fisubs
sbb
jne
lahf
sbb
stos
inc
inc
mov
mov
aas
loopne
aam
pop
out
ss
push
xchg
dec
xlat
xor
test
push
es
stc
pop
mov
mov
push
xchg
dec
icebp
inc
pop
lock
popf
das
mov
pop
leave
mov
push
lea
test
cmp
cmp
outsl
add
push
inc
icebp
xchg
fwait
mov
push
or
sub
xchg
sub
arpl
adc
orl
clc
loopne
dec
shlb
lds
dec
shlb
and
cwtl
aam
inc
xchg
aad
les
arpl
adc
and
dec
xorb
out
fcomi
js
inc
cmpsb
enter
iret
inc
movsb
jmp
push
push
xchg
push
mov
xchg
loope
loop
test
sbb
js
loope
cmp
or
xchg
test
inc
adc
shrl
ret
mov
fists
jg
push
add
inc
repnz
push
pop
lret
cld
sahf
fs
cs
mov
push
jbe
xor
mov
push
lret
pop
push
xrelease
out
mov
sub
lea
xor
repnz
mov
vcvttps2dq
cmc
lods
jmp
cwtl
jb
jg
fs
cmp
pop
mov
mov
pop
cmp
lcall
mov
pop
sub
fidivs
lcall
xchg
cmp
or
test
cmpsb
inc
rcrl
arpl
adc
mov
dec
mov
into
and
out
out
xchg
push
jno
stc
add
loopne
test
mov
inc
arpl
loopne
shl
decb
sbb
jp
push
mov
cli
pop
mov
insb
inc
pop
repz
subb
jle
jp
or
sub
xchg
mov
imul
push
jno
xchg
iret
mov
inc
cld
flds
das
sbb
or
pop
cltd
jno
jnp
dec
lods
subl
ret
inc
in
mov
mov
lea
mov
out
and
adc
mov
aas
pop
ss
xor
lods
mov
sbb
inc
mov
imul
inc
xchg
push
rcl
pop
jnp
jl
mov
xchg
mov
jl
xor
mov
pop
xchg
daa
jb
sbb
xor
or
scas
jmp
dec
xchg
stos
iret
fsubr
ljmp
push
mov
inc
xchg
pop
gs
mov
push
cld
mov
mov
mov
xor
mov
insb
repz
jle
add
xchg
jg
ja
lcall
movsl
lahf
loope
jl
les
nop
or
aaa
sbb
cmpsl
neg
mov
push
pop
sbb
xchg
daa
add
xchg
jne
push
out
hlt
addr16
pop
mov
mov
rcll
clc
aas
arpl
xor
out
dec
ljmp
loop
cwtl
cmovle
xor
jl
lret
ja
scas
in
cmp
xor
mov
and
pop
inc
push
sub
pop
insb
insl
and
or
and
lahf
ret
mov
sti
loopne
insl
xor
cmp
xor
in
pop
sbb
cmpsb
sbb
add
inc
repnz
out
and
sbb
sbb
scas
out
and
psrlq
idivl
loop
sbb
mov
adc
inc
add
shr
hlt
popf
pushf
push
add
pop
pop
mov
pop
insb
and
or
or
mov
jge
fwait
and
xchg
jmp
addl
aas
inc
xchg
sub
std
sub
repz
leave
cld
and
sbb
mov
gs
pop
pop
xchg
ljmp
push
mov
outsb
mov
lret
pop
and
and
std
inc
shrb
lds
inc
imul
insl
cmpsb
lock
int3
cltd
jp
out
lret
lods
test
jmp
daa
inc
push
sti
xor
pushf
loopne
lock
cmpsl
cmp
loopne
push
inc
jns
loopne
outsl
mov
in
jg
jnp
movsb
das
and
push
xchg
subb
test
mov
lea
int3
jg
pop
mov
test
pop
aas
aad
insb
xor
xchg
arpl
inc
movsb
mov
scas
jb
push
in
test
sbb
mov
and
loopne
sahf
or
pop
adc
jl
mov
cs
mov
inc
fisttps
ret
sub
setnp
movb
xchg
jg
xor
jle
push
dec
test
push
mov
fidivl
insb
cmp
pop
xor
xor
popa
je
mov
dec
data16
xor
mov
or
cmp
rclb
pop
jns
out
inc
mov
es
push
cs
fmull
lea
daa
mov
lret
dec
enter
arpl
sahf
icebp
xchg
jl
xchg
mov
idiv
inc
xor
les
lret
or
sbb
mov
pop
jne
push
in
out
jbe
fnstcw
push
lcall
push
or
pop
jb
fwait
lret
pop
addr16
or
push
and
mov
jge
in
pushf
push
sub
lds
mov
insb
pop
andl
pop
mov
inc
hlt
adc
lret
push
pop
negb
stos
ret
fisubl
loope
jmp
xor
and
adc
xor
daa
xchg
pop
xchg
lretw
dec
pusha
cmp
sub
shrb
enter
in
ficoml
mov
xchg
fiadds
sbb
lcall
cwtl
pop
sub
rcr
mov
jo
cmpsl
fmul
test
dec
push
dec
sbb
stc
lea
xorl
outsl
xchg
push
fsubl
sbb
loopne
lret
daa
pop
loopne
js
dec
mov
nop
movsl
cmpsb
xor
clc
inc
inc
pop
daa
jecxz
pop
cmpsb
fs
pop
loopne
add
int
xor
out
test
ret
imul
jge
aam
xchg
dec
std
repz
jnp
mov
pop
out
adc
out
mov
jno
pushf
ret
lcall
repz
fwait
test
or
cmpsb
mov
push
ja
mov
dec
mov
fsubl
dec
mov
push
jmp
sbb
cmp
lds
out
adc
scas
xchg
gs
mov
das
sub
daa
or
imul
jo
or
imul
movb
aam
adc
adc
sbb
sub
mov
mov
cld
cmp
dec
and
insb
mov
sbb
loopne
xor
lods
mov
addb
sbb
pop
movsb
movsb
or
outsl
push
lcall
push
fsubs
lret
test
jne
xchg
mov
test
and
adc
sub
cmp
push
lcall
fistpll
cli
imul
outsb
data16
or
jae
cmp
inc
jp
icebp
out
out
les
cmc
push
cmp
and
into
mov
push
pop
sbbl
icebp
cmc
lds
and
dec
xor
cli
out
or
adc
dec
mov
into
jmp
sub
aam
andl
ficompl
shlb
adc
jno
sar
fmulp
es
sbb
cmp
inc
in
sbbl
cmpsl
cmp
out
jbe
push
mov
std
pop
jnp
sbb
cld
sub
cmp
push
xor
lds
push
hlt
pop
pop
cmpsb
sbb
sbb
rcrl
sbbl
fmul
stc
add
push
fs
pop
xchg
inc
test
shrl
jns
and
cmp
dec
jbe
cwtl
and
stos
pop
faddl
sub
adc
outsl
in
add
loop
shll
mov
std
or
scas
scas
or
mov
les
fs
stos
cmp
inc
repz
mov
rorl
and
in
lds
call
data16
mov
out
inc
sbb
sub
xchg
cmp
inc
dec
cmp
push
sbb
inc
jns
ficompl
add
sti
push
xor
xchg
es
ja
pop
adc
dec
test
call
xchg
pop
adc
add
aaa
xor
xlat
mov
test
sbb
fdivrp
or
and
mov
xchg
pushl
mov
stos
bswap
dec
aad
mov
out
test
sub
push
pop
cmp
in
sub
push
jns
mov
jmp
rclb
jge
xor
test
mov
ror
icebp
push
jl
xstore-rng
cmpsl
mov
jl
mov
lcall
push
outsl
mov
and
xlat
insl
xor
xor
int
subb
sub
jae
jae
sbb
or
sbb
sub
shll
popf
or
and
xor
pop
xchg
andl
jp
jge
mov
pushf
adc
adc
mov
push
enter
mov
fcmovne
xor
divl
mov
jae
into
add
jle
outsl
mov
inc
add
adcl
jno
nop
imul
cmp
aad
ljmp
jne
cmp
mull
xchg
gs
outsb
ret
push
rcrl
rcrb
pop
mov
pushf
xchg
cmpsb
cmpsb
mov
nop
cmp
int3
push
out
mov
jo
push
out
adc
aaa
enter
xchg
sbb
daa
into
loope
mov
pop
pushf
jnp
dec
and
inc
cmp
mov
enter
mov
int
pop
jno
pop
cmp
adc
push
jl
repz
icebp
or
ret
inc
es
push
movsb
push
push
add
ds
aas
add
fiaddl
hlt
pop
inc
inc
fs
mov
jne
cld
gs
xchg
cmp
lock
inc
orl
or
and
sub
pop
sub
out
pop
mov
std
mov
mov
arpl
pop
daa
mov
punpckldq
loop
movsl
jnp
adc
dec
xor
cmp
xor
jge
lods
cmp
mov
data16
pop
add
sbb
mov
mov
hlt
jae
mov
or
sub
push
dec
jecxz
push
loop
jl
or
clc
push
insl
pushw
inc
inc
ret
xor
je
mov
call
int3
dec
xchg
std
bound
ficoms
int3
in
lods
xchg
test
fisttpl
pop
enter
out
xchg
adc
call
xor
sub
jl
lods
or
inc
push
jl
gs
ja
add
mov
or
sub
inc
mov
mov
sub
jp
sub
mov
cmp
shlb
roll
scas
sti
cli
push
mov
subl
in
cmp
cmc
xor
nop
enter
mov
inc
divb
or
lret
adc
fsubl
repz
sbb
ret
mov
into
mov
or
jl
fildl
jns
mov
sbb
sub
frstor
cwtl
test
fs
rorb
jge
pop
js
xchg
dec
dec
xor
pushf
sub
addr16
inc
mov
dec
data16
lods
out
jo
add
lea
cmpsb
stos
mov
stc
lock
out
mov
fdivs
jb
sbb
stc
dec
mov
mov
fstl
cmp
es
popf
in
lret
xor
test
arpl
xchg
sbb
mov
xchg
les
pusha
popa
pop
fdivrl
test
inc
sbb
or
loope
fisttpll
bound
dec
jmp
decb
jp
pop
xor
and
xchg
aad
int
add
mov
xchg
fwait
sub
mov
fsubr
rcll
fisubrs
rorl
and
mov
sahf
aas
sbb
pop
fstpl
lods
push
iret
pop
and
cmp
mov
sbb
aam
rol
xchg
in
xchg
xlat
ficompl
call
xchg
sarb
jo
inc
sub
jnp
and
adcb
push
pop
mov
jno
dec
cmp
cmc
adc
mov
jg
scas
xchg
divl
outsb
imul
lds
xlat
dec
and
and
mov
or
push
sbb
mov
xchg
loop
in
xchg
insl
add
js
mov
xor
aam
roll
std
inc
sbb
jge
or
xor
sub
or
jno
adc
outsb
out
or
sbb
cmpsb
push
js
mov
insb
or
adc
jno
hlt
or
test
lahf
mov
insb
adc
shll
or
xor
cmc
scas
and
pop
xor
cmp
pop
mov
arpl
out
ficoml
add
adc
ficomps
mov
mov
lea
mov
nop
in
adc
hlt
insl
mov
test
popa
mov
mov
lahf
test
or
xlat
jge
and
mov
xor
sbb
repz
jge
jns
in
xlat
pop
and
outsb
or
push
shrb
push
and
fldenv
fisubl
push
sub
xorl
lods
mov
dec
mov
dec
push
xor
iret
das
popf
xor
xlat
scas
jecxz
js
push
push
aam
lock
cmc
out
js
dec
cmc
push
or
or
mov
hlt
mov
loop
xor
dec
lret
jae
lods
hlt
or
testb
cmpsb
in
sub
fs
cli
jne
ljmp
nop
scas
cld
rol
xor
xor
push
and
js
dec
cmp
push
xor
nop
dec
cltd
jae
popa
fxch
jl
aam
aad
add
jmp
push
mov
out
mov
push
mov
xlat
shll
inc
popf
mov
lret
pop
mov
and
or
div
stos
insb
jg
daa
shufps
movsl
lcall
leave
inc
xchg
mov
sbb
leave
cmc
mov
pop
mov
jmp
mov
aam
pusha
aam
jne
xor
andl
dec
jmp
push
push
inc
lock
ja
das
iret
in
mov
scas
dec
aam
xchg
repnz
pop
mov
loop
test
mov
ret
pop
sub
jp
mov
test
out
jmp
or
jp
call
imul
insl
jns
cld
xchg
adc
inc
cmp
add
push
jnp
xor
jns
fsub
jle
loop
iret
cli
xor
cmp
je
xchg
pop
mov
or
mov
mov
dec
stos
fwait
ret
repnz
cmpsb
movsl
ret
cmp
flds
cmp
mov
pop
mov
in
shrb
shll
sarl
sahf
rolb
dec
sbb
and
inc
inc
cmpsb
iret
loopne
ret
adc
shr
push
int3
test
sub
cmc
pop
stos
je
mov
cmp
ja
cmpsl
mov
dec
icebp
dec
sbbb
fcoml
cmp
out
in
or
sbb
aad
rcr
dec
testl
sbb
inc
adc
adc
movsl
jmp
xor
lret
mov
xchg
push
fcom
cld
loop
fdivs
jp
sbbb
icebp
neg
jl
das
arpl
cmp
jcxz
scas
leave
push
lret
push
sbb
imull
lahf
scas
and
inc
or
jnp
loopne
push
aaa
mov
mov
and
jo
sarb
std
stos
ja
ss
fucom
jns
cs
mov
dec
bound
push
outsb
test
xchg
cmc
mov
test
add
fs
mov
test
call
lods
es
sub
mov
adcb
sti
jae
lea
dec
arpl
addr16
test
mov
pop
mov
mov
mov
mov
fistpll
orl
xchg
jnp
int3
leave
adc
out
aaa
xchg
shl
pop
push
cli
movsb
dec
fdivs
mov
add
fnclex
fidivrl
repnz
ret
jno
popf
lea
stos
fisttpll
pop
pop
xor
jae
enter
lret
sbb
push
mov
mov
sbb
mov
aaa
rcrl
popf
lock
mov
lcall
dec
pop
and
test
daa
into
mov
in
les
movsb
inc
pop
adc
push
fsubs
sahf
push
in
xor
xor
xchg
and
sbb
pop
popf
and
mov
subl
dec
aam
mov
adc
cmp
adc
loopne
dec
xchg
sub
dec
jle
push
pop
ja
dec
jmp
fdivrl
test
mov
mov
ficompl
jg
outsl
js
inc
and
icebp
sahf
inc
ret
dec
rcl
dec
mov
subl
inc
xor
in
je
pop
push
push
rcl
jb
xchg
sti
fdivrl
jns
mov
stos
outsb
int3
in
or
jecxz
sub
push
sbb
fistps
dec
in
aad
xchg
adc
mov
and
daa
mov
test
push
pop
enter
andl
rol
leave
aam
outsl
hlt
fcmovbe
pop
call
xchg
aas
add
rolb
dec
in
subb
sub
rcll
push
lret
add
mov
push
insb
lcall
div
cs
or
xchg
push
sub
mov
mov
or
test
inc
mov
cmp
shll
nop
cmp
icebp
lret
push
inc
cltd
mov
imul
sarl
jg
in
rorb
lods
push
mov
cmp
mov
inc
dec
dec
fildll
and
jb
and
sbb
test
dec
mov
repnz
cmp
pop
xor
int3
imul
jne
mov
call
imul
push
dec
out
ret
loope
popf
ret
ljmp
sbb
xor
cmc
shl
icebp
out
sbb
and
push
addl
dec
cwtl
std
xchg
adc
call
and
cmpsl
loop
arpl
pop
add
inc
loope
in
int
mov
je
ja
lret
push
imul
cmp
xor
scas
push
cmp
sub
sub
frstor
aad
or
stos
out
push
mov
daa
cltd
lods
sahf
xchg
aaa
or
ja
js
loope
sbb
and
push
scas
mov
push
or
inc
out
subl
jmp
sbb
mov
mov
sar
inc
cmp
sahf
mov
loopne
push
mov
sahf
ja
push
movsl
fwait
xor
daa
stos
jnp
daa
es
jl
int3
xchg
xor
adc
pop
cmp
hlt
jno
and
jne
or
test
cmp
inc
dec
sbb
insl
iret
ljmp
stos
add
aas
insb
cmp
push
addr16
add
clc
jne
or
daa
lahf
mov
or
loopne
repnz
jge
sbb
lods
and
int3
mov
enter
sub
and
rcl
inc
cmpsl
push
imull
adc
push
out
and
jmp
adc
sub
push
out
lea
popf
fld
out
xchg
fldt
and
sub
loope
cmpsl
add
and
es
mov
dec
inc
ss
mov
ficoms
sub
hlt
mov
mov
clc
dec
jbe
ret
xchg
fiadds
pop
call
push
bnd
sub
xor
push
inc
xchg
push
jl
fldt
loope
pop
lea
cmpsb
rorl
sbb
aam
lds
pop
mov
sbbl
pop
add
xor
testb
in
in
jp
add
lds
pop
inc
mov
clc
insb
mov
mov
jg
jae
arpl
pop
jno
mov
dec
ja
mov
adc
out
mov
lcall
pop
dec
jbe
dec
jl
cs
stc
xchg
addr16
cmp
shrl
mov
and
jo
and
cld
xchg
lods
mov
jnp
ljmp
mov
out
rorl
popa
sub
insb
es
or
clc
and
pusha
fcmovnbe
repnz
dec
and
mov
das
fsubrs
jo
and
lret
mov
and
out
adc
test
xor
jo
xchg
lret
leave
out
lret
jecxz
sbb
pop
pop
inc
jge
mov
loope
scas
pop
cwtl
and
jb
inc
jp
xchg
jecxz
call
nop
testl
rorl
inc
xchg
adc
pop
stos
cmp
jno
mov
jne
imul
mov
push
test
rolb
jl
and
sub
clc
jo
sub
inc
add
or
daa
jnp
sbb
inc
mov
outsb
sbb
xchg
xchg
fisubl
lods
mov
ljmp
lret
and
mov
xor
in
xlat
mov
shlb
or
sar
xchg
xchg
push
jle
pop
ret
rcrl
mov
mov
stos
lds
jo
pop
sub
cmpsb
pcmpgtb
xor
sub
insb
data16
decb
mov
inc
mov
xchg
and
dec
jmp
xor
out
xchg
mov
jnp
scas
jbe
or
popa
cmp
xor
call
cmp
mov
scas
adc
jno
or
insl
cmp
or
imul
lods
int
xor
mov
xor
out
sub
sbb
xchg
les
gs
mov
nop
xor
cli
test
ljmp
call
pop
dec
inc
leave
add
mov
cltd
mov
mov
mov
movsb
cmp
xchg
xor
notb
push
push
call
xor
dec
das
pushf
shll
es
shlb
sbb
inc
adc
test
pop
sbb
dec
pushf
pop
inc
inc
jno
in
dec
pop
add
and
dec
lea
mov
xchg
or
fldl
nop
cmc
pop
mov
ljmp
lret
xchg
xchg
cmp
test
mov
insb
cmp
jo
outsl
xchg
mov
xor
arpl
psadbw
fsubl
pop
mov
lret
lcall
hlt
imul
xor
stos
imul
mov
fidivrl
fisttpl
imul
mov
adc
jmp
mov
mov
dec
jge
push
insl
jmp
vpunpcklwd
add
pop
loopne
imul
push
lods
lcall
jae
iret
add
ret
sub
inc
rorb
inc
xchg
shll
test
or
mov
out
popf
jl
cmp
sub
ja
enter
inc
in
pop
insb
test
add
adcb
cmp
rcl
and
sarb
pushf
cmp
mov
stos
mov
mov
push
sub
push
lret
test
jge
xor
ljmp
fdivr
sti
fdivrl
mov
mov
push
pop
out
rcll
popa
or
mov
dec
dec
and
repz
mov
cwtl
fidivl
ret
push
fdivrs
loopne
and
imul
jno
sub
mov
stos
adc
or
movsl
mov
cmpsl
lahf
inc
push
sub
jb
sbb
mov
cli
std
xor
mov
pop
or
mov
arpl
ss
sbb
rcl
mov
mov
xchg
lods
outsl
mov
add
sbb
pop
mov
or
sbbl
stos
loope
int3
out
and
pusha
nop
jp
jns
imul
add
adc
enter
outsb
dec
inc
bound
lcall
mov
mov
cwtl
jnp
or
out
sub
mov
or
lahf
rcr
out
orl
movsb
insl
mov
imull
cld
add
shl
ds
xchg
push
mov
xchg
fbld
inc
or
shl
mov
sbbl
push
and
pushf
inc
dec
and
push
stos
xchg
and
out
ds
or
outsb
adc
jp
inc
aas
mov
scas
add
or
stos
or
inc
dec
mov
das
pop
mov
lret
push
pop
mov
pop
lcall
mov
stos
scas
rcrb
mov
jmp
enter
push
xchg
mov
rcl
sahf
shlb
adc
xchg
out
rcrl
test
fdivr
or
sub
sbbb
orw
sub
mov
add
arpl
mov
inc
mov
pop
fstps
push
mov
rcl
or
iret
aad
xor
lods
cli
sbb
imul
xchg
fdivl
mov
loopne
xchg
rol
jae
fsts
jg
sub
ljmp
inc
sub
cmp
ret
nop
dec
pushf
in
imul
add
xor
aam
or
push
adc
sub
fdivrp
stc
and
and
fldt
movsb
push
popf
imulb
in
pusha
mov
mov
xor
rolb
insl
add
scas
mov
jne
xor
pop
stos
mov
popf
push
cmpsb
pop
add
cmp
es
das
xor
sub
fsubrl
push
inc
shlb
aam
rclb
mov
pop
cmp
repz
fs
push
push
dec
sti
std
repz
xchg
sub
leave
sub
ss
lahf
xor
xchg
sbbl
fnop
leave
pop
dec
dec
hlt
inc
inc
and
dec
lods
push
pusha
fucom
inc
pop
test
mov
into
xor
cmp
xor
xchg
sbb
sub
xchg
or
rep
mov
or
scas
into
movsb
hlt
stos
push
test
push
ja
ljmp
sbb
ja
std
dec
pushf
mov
xchg
inc
adc
xlat
mov
lret
ss
stos
pop
push
addr16
sarl
gs
shll
dec
popl
lret
jbe
mov
movsb
pop
xchg
aaa
dec
movaps
jl
outsl
mov
gs
xchg
lret
js
jae
repz
pusha
cmc
shll
outsb
sub
pushl
xchg
stos
inc
push
out
inc
pop
dec
mov
jae
mov
je
add
ss
mov
add
das
push
mov
loop
xchg
dec
dec
or
mov
and
in
push
xor
ret
jb
mov
ds
mov
dec
data16
hlt
push
push
push
inc
pop
jecxz
and
sub
jno
mov
push
jns
out
loop
fdivrl
outsb
pop
xor
or
bound
enter
mov
shll
push
jns
iret
mov
movsl
push
or
in
sub
rcrb
ficomps
shll
and
adc
dec
stc
call
popl
jle
decl
mov
mov
mov
push
mov
shl
lock
xor
sbb
fidivrs
stc
int3
xchg
je
inc
int
jge
pop
lds
inc
push
inc
lods
or
rcr
inc
pushf
or
loope
adc
and
mov
push
jnp
fadd
movsb
arpl
mov
mov
lahf
mov
scas
cs
stos
hlt
mov
inc
sbb
xor
ret
fs
bound
lcall
xchg
jo
insl
or
test
jno
add
out
imul
pushf
push
xor
cwtl
mov
jae
pop
sub
out
lahf
mov
sub
jmp
cmc
shl
push
imul
addl
int
mov
testl
out
xchg
and
push
lods
adc
xor
jb
lret
sub
jo
xchg
call
loope
dec
mov
hlt
push
je
and
call
outsl
leave
sub
sahf
pop
out
xchg
and
jnp
negb
fiaddl
jecxz
imul
sub
rcrb
insb
mov
dec
jne
cmpsl
sbb
adc
std
popf
jno
cmp
out
jp
add
bound
lret
shrb
sbb
mov
gs
daa
jae
popa
xchg
outsb
xchg
pavgw
pusha
mov
push
nop
xor
push
add
xorb
mov
push
pop
into
hlt
test
sbb
inc
jne
nop
ljmp
xlat
sub
dec
or
adc
stos
bound
mov
scas
cmp
lock
ljmp
jge
jmp
aas
scas
daa
cmp
jne
cmpsb
aam
lea
data16
roll
loop
inc
sbb
scas
dec
push
xchg
xlat
add
mov
adc
push
shll
fimull
xchg
pop
mov
hlt
mov
in
and
mov
es
pop
shlb
sub
fs
imul
loop
jl
int
add
in
or
dec
test
dec
aam
inc
mov
popf
arpl
xor
sub
xor
lea
das
jne
cmp
imul
scas
sub
cmpl
xor
call
fwait
in
into
push
xchg
cli
xor
pop
sbb
leave
xchg
orb
popf
sbb
mov
icebp
xchg
jmp
int3
sub
push
scas
lods
inc
sub
test
push
and
and
aas
xor
dec
jo
or
into
ss
cmpsb
sub
cmp
add
out
rol
daa
stos
add
pop
jne
add
in
xchg
shrl
inc
push
pop
xor
mov
loopne
sbb
mov
lahf
inc
movl
cmp
xchg
arpl
dec
stos
add
inc
jbe
lahf
pop
and
cmp
fidivrs
dec
les
mov
mov
fsubrs
fwait
aam
push
arpl
sub
sub
pop
andb
jae
outsl
gs
mov
adc
mov
bsr
xchg
lea
pop
int3
in
stos
sbb
aas
ret
shlb
sbb
jp
icebp
push
jns
js
mov
xor
push
in
mov
pop
lds
or
out
shrb
mov
adc
fdivp
inc
call
adc
xchg
adc
dec
rcll
xchg
cmp
sub
mov
rcr
fiaddl
pop
jg
bound
loope
cmpsb
dec
nop
fs
mov
push
xchg
pushf
cmp
shlb
mov
leave
push
test
les
pop
adcl
adc
xchg
and
popa
lods
loopne
xchg
mov
pop
xchg
xor
dec
cmp
and
mul
movsl
pop
fldcw
or
push
shl
imul
jge
gs
cmpsl
or
push
insb
out
jle
cmpsl
outsb
jmp
movsl
and
mov
cmc
sub
ret
fistps
xor
in
sti
bound
sub
daa
or
andb
inc
and
cltd
fcomip
pop
icebp
pop
test
mov
mov
mul
scas
idiv
add
push
cmp
mov
int
loop
into
mov
pop
pusha
jno
lods
lcall
sbb
lret
mov
sub
xchg
jno
jb
cld
inc
cmp
jo
arpl
loop
pop
sbbl
inc
cmp
dec
test
mov
push
or
add
bswap
xchg
ret
pop
jle
jne
push
jmp
and
orb
sbb
inc
dec
lahf
sbb
test
xchg
sub
lret
pop
jns
lcall
dec
and
adc
xchg
sub
movsb
sub
jmp
fdivrl
shrl
dec
imul
stos
xor
jbe
mov
das
mov
add
cwtl
mov
jb
hlt
sahf
push
cmpsl
push
out
dec
popa
inc
in
push
xor
daa
loopne
arpl
and
mov
mov
jp
xchg
out
mov
dec
lds
pop
ffreep
fmull
xchg
fs
mov
mov
pusha
data16
sbb
cmp
repnz
pop
and
xchg
arpl
mov
xor
xchg
pusha
jnp
rcl
bound
jmp
push
push
add
jne
or
xlat
dec
push
ret
icebp
pop
pushf
out
into
inc
aad
mov
pop
lods
test
lds
in
cli
mov
xor
mov
rcl
cwtl
xor
sbb
mov
rcrb
nop
ja
inc
cmpl
jb
adcl
dec
cmpsb
sbb
pop
stc
repz
icebp
jbe
call
xchg
mov
out
pop
sahf
bswap
daa
and
in
fmuls
rcr
push
test
fcomi
cmp
xor
mov
mov
cli
push
push
loopne
adc
cmp
sbb
inc
in
lea
nop
jne
popa
es
sbb
push
rol
push
sbbl
add
push
adc
fimuls
xor
dec
and
pmulhuw
jne
xchg
and
pop
sub
sub
or
mov
lods
fldt
inc
ljmp
rclb
jmp
ficompl
idivb
scas
pop
push
pushf
outsb
xor
ljmp
dec
std
es
pop
push
mov
imul
dec
mov
and
push
in
jae
and
lret
pop
iret
ss
arpl
sbb
mov
fwait
repz
out
or
roll
andl
cmc
insl
add
popf
sub
jae
das
inc
and
xor
adc
xchg
or
in
or
mov
xchg
jno
mov
loopne
xorb
cmp
cmp
pop
insl
mov
push
xchg
xchg
mov
cmp
push
pop
incl
int3
pop
lock
sarb
je
clc
xor
add
mov
sub
mov
iret
pop
mov
mov
sub
mov
dec
xlat
ret
lahf
sbb
push
push
inc
call
pop
pop
sub
mov
push
test
mov
jmp
jne
jo
lcall
int3
mov
xor
mov
imul
sbb
or
int
pop
std
imul
lods
push
jb
inc
into
sbb
mov
jnp
xor
out
aam
mov
push
mov
cmpsb
adc
pop
aaa
cmp
xchg
pop
lods
icebp
into
mov
push
pop
add
mov
adc
inc
popf
jp
add
xor
pop
xor
divb
vpunpcklbw
mov
inc
xlat
or
push
subl
push
inc
cmpsb
sbb
and
mov
adc
subb
inc
in
inc
in
rol
pop
fs
add
push
mov
add
or
ret
xor
imul
xchg
scas
aaa
or
cmp
pop
std
cmc
test
jecxz
cltd
out
ret
outsl
aad
sub
std
ljmp
adc
leave
or
jl
jae
dec
fsubr
inc
push
mov
std
aad
in
sbb
mov
xchg
cs
bound
and
rcr
adc
xchg
dec
ret
lahf
test
push
mov
pop
pop
inc
negb
dec
and
das
jo
cmpsl
aam
lcall
stos
xor
xchg
mov
jge
adc
lcall
shl
sahf
inc
scas
pop
cli
std
pop
leave
mov
dec
ja
stos
ficoml
or
cs
ss
pop
loop
inc
mov
jmp
xor
push
mov
add
push
push
jns
gs
add
inc
xchg
aam
das
leave
lret
ja
cmp
sbb
mov
mov
notl
or
adc
push
test
loope
rcrl
mov
mov
mov
ds
subl
mov
aas
mov
pop
outsl
loope
repnz
lods
repz
mov
cmc
dec
jge
stos
loop
lea
data16
iret
push
inc
stc
fs
or
leave
cld
mov
inc
rorl
shlb
imul
add
push
sub
add
cwtl
mov
es
sbb
jnp
jns
lahf
cmp
jnp
arpl
cmpsb
jmp
cmpsl
adc
les
in
jge
rorb
mov
lock
mov
and
xchg
jmp
jle
dec
in
notb
les
leave
adc
loop
lods
jp
ljmp
mov
in
push
push
clc
sbb
mov
imul
addr16
stos
and
add
pop
mov
les
cwtl
xchg
add
fdivr
stos
aas
std
std
dec
fmuls
dec
xchg
dec
jp
push
xor
test
push
pop
bnd
mov
xor
jae
or
sbb
push
mov
in
push
mov
adc
xor
inc
dec
orl
mov
stos
clc
sub
int3
sbb
iret
lret
movaps
and
out
xchg
or
xchg
aas
pop
out
je
adc
rorl
cltd
mov
in
outsl
nop
add
pop
inc
push
cmp
pop
testl
mov
mov
hlt
inc
loope
lret
js
fisubrs
inc
add
inc
arpl
cmp
loopne
jb
rcrl
jae
xor
int3
lock
mov
js
jo
pusha
cwtl
loopne
test
js,pn
daa
jge
push
push
jg
add
daa
aad
int
mov
jp
mov
dec
int
adc
mov
dec
shll
jmp
pop
mov
std
sahf
rorb
aas
stos
cmc
dec
mov
inc
sbb
cmpsl
test
xchg
push
sarl
xor
lock
push
adc
mov
xor
add
daa
sub
ret
push
gs
pusha
adc
dec
jg
mov
cmp
scas
ds
push
mov
xchg
pop
and
imul
rcr
lahf
xchg
repz
loope
lret
fxtract
daa
mov
stc
ret
or
aad
je
cs
inc
jb
pop
pop
or
lds
lcall
sub
cs
aad
arpl
fdivp
xor
jp
adc
mov
inc
rorb
sarb
inc
inc
shrl
iret
adc
loop
repnz
mov
mov
xor
lods
fmul
rorb
cmp
jle
jle
mov
lret
push
rorl
aas
out
dec
push
jl
in
ds
dec
add
sbb
xor
aas
push
rolb
stc
pop
lcall
xor
lcall
sti
decb
shll
hlt
xchg
std
mov
sbb
scas
inc
jno
leave
jge
or
jae
arpl
popa
sahf
mov
ljmp
xchg
push
ret
pop
xchg
cs
or
aad
in
sub
mov
add
cmpb
dec
outsl
aas
pusha
mov
inc
test
xchg
fidivrs
sub
scas
mov
xchg
mov
xor
dec
imul
mov
add
incl
xlat
test
cmp
mov
js
and
ja
cli
add
ds
mov
rcll
cmc
or
and
add
inc
insb
xor
pushf
jecxz
xchg
pop
test
xor
cmp
pop
adc
and
divl
js
leave
mov
stos
clc
dec
sub
adc
sahf
outsl
pop
jge
cmp
movsl
es
std
cmpsb
lods
aam
inc
jp
add
xor
idivl
mov
and
pop
mov
lahf
mov
movsb
int
cmp
jl
enter
das
sub
adc
mov
jge
fs
jne
jbe
insb
outsl
es
pop
or
cs
xchg
pop
leave
dec
imul
shll
ljmp
fimuls
lret
iret
xor
mov
adc
push
jno
xchg
jp
loope
mov
push
inc
sbb
icebp
sahf
iret
xor
xchg
movsl
fidivrs
adc
je
or
cld
push
pop
dec
and
pop
mov
sbb
and
les
pop
pop
xchg
adc
cmp
push
mov
pop
xchg
icebp
or
mov
je
cmc
sarl
push
jmp
inc
out
jl
mov
mull
stc
mov
loope
xchg
ss
jbe
iret
cmp
sbb
repz
loope
outsb
imul
push
jle
orl
incb
scas
test
int
cmp
daa
dec
push
add
fldt
inc
jl
mov
fsubs
psllq
lcall
loop
cmp
jp
lods
fbld
sbb
and
dec
fdivrl
nop
lods
pushf
lahf
int
or
push
sbb
jne
cmp
orl
jmp
and
dec
pop
loop
fwait
pop
stos
into
push
call
test
std
dec
lret
aas
pop
ret
shll
rcrl
push
outsl
andl
push
sub
push
add
enter
mov
ljmp
fs
lea
frstor
fadd
mov
xchg
div
gs
jge
pushf
pop
loopne
sbb
dec
ret
cli
adc
pop
outsb
mov
push
lret
aas
inc
lcall
jecxz
in
pop
add
leave
rcrb
xor
cmp
mov
mov
hlt
xchg
cmpl
icebp
scas
shl
pop
std
out
outsb
out
ja
out
xor
push
add
jl
out
cmpb
sub
mov
pop
rolb
imul
adc
jae
scas
mov
cmp
cltd
push
pop
out
lods
push
dec
mov
bound
outsl
xor
or
pop
lods
dec
push
ret
mov
mov
loope
icebp
mov
push
xor
jbe
cmpsb
mov
movsl
sub
subl
lods
pop
fs
nop
test
xchg
fnstcw
cmc
mov
leave
add
add
push
lahf
lahf
add
and
dec
call
mov
jno
dec
mov
sbb
ss
mov
and
mov
dec
or
add
jmp
lea
ret
lds
pop
push
je
imulb
outsl
jae
movsl
mov
adc
scas
ret
adc
mov
cmpsl
je
scas
sub
push
mov
dec
lret
push
xor
xchg
out
mov
sbb
lods
mov
xor
push
cmpsl
and
mov
xor
mov
in
sub
dec
adc
mov
mov
xlat
out
aas
push
lds
inc
sub
aad
loope
cld
daa
pop
xchg
cmpsl
add
pop
roll
into
push
mov
pop
pop
inc
push
insl
jo
inc
mov
mov
xlat
mov
mov
je
pop
cli
into
add
mov
or
icebp
push
push
mov
fnstsw
jno
mov
inc
fdivs
loop
loope
sub
ljmp
rolb
jle
sub
and
popf
jge
lds
cmp
call
cmp
cli
pop
cmpsb
mov
and
aam
dec
mov
push
loop
flds
xor
in
cmpsb
adc
xlat
out
xor
psubd
mov
dec
and
wbinvd
ret
pop
ds
out
repnz
mov
test
int
cs
xchg
jns
pop
xlat
mov
adc
jne
in
int3
dec
add
lcall
insl
and
in
cmp
rolb
mov
mov
pop
and
push
nop
movsb
out
cwtl
filds
push
stc
mov
jecxz
or
int3
and
sbb
ljmp
mov
inc
xor
mov
pop
movl
shl
popa
in
inc
cmp
mov
pop
sub
ljmp
lds
push
add
out
popf
or
push
in
adc
ljmp
mov
js
xchg
stos
loop
xor
clc
mov
negl
cmp
sub
sbb
lret
pop
lret
cwtl
mov
xor
pop
jg
pop
xor
and
sub
mov
insb
add
xor
push
inc
mov
pop
in
ds
shrd
cmp
dec
lock
in
enter
lods
xchg
pop
xchg
jmp
cmp
push
xchg
outsl
jns
sub
leave
mov
jae
jae
jecxz
sub
cltd
sub
mov
sub
or
out
cs
mov
mul
mov
test
rol
or
sub
xor
mov
mov
mov
inc
ds
loop
out
pop
push
mov
pop
out
out
or
imul
subl
hlt
mov
xorl
int3
outsb
js
outsl
fnsave
in
lock
push
sub
xchg
xchg
aaa
push
push
fdivrl
add
sarb
loopne
fs
xor
push
sti
les
stc
jno
pusha
loope
mov
pop
arpl
dec
dec
mov
aaa
push
pop
cmpsl
scas
stc
mov
mov
jo
iret
stos
jle
sub
outsl
cmpsb
add
daa
add
aad
adc
add
mov
repz
xchg
jecxz
scas
cmp
not
mov
pop
jb
in
sub
fisubs
xor
push
arpl
sub
xchg
inc
xchg
fidivs
xchg
sbb
aad
jp
test
mov
sbb
popa
adc
sbb
cld
xor
sbb
xor
stos
ljmp
sub
js
xor
cmp
cmp
mov
push
xchg
xor
cld
int
pop
out
inc
int3
lcall
idiv
adc
loopne
xchg
cmp
pop
adc
xchg
cwtl
dec
aad
xabort
push
cmc
fnstcw
loope
pusha
and
ret
popa
adc
jl
pop
inc
loopne
insl
xor
jmp
dec
pop
lock
pop
or
cmp
dec
push
jecxz
xchg
sti
inc
arpl
cmp
pop
push
call
sub
mov
sti
mov
mov
pop
sbb
arpl
ljmp
pop
xor
icebp
aaa
subl
inc
rcrb
adc
fs
test
ja
inc
lahf
in
test
sbb
rorb
sub
pop
push
push
popf
rcll
fstp
mov
xchg
adc
lods
push
sbb
dec
mov
mov
orb
mov
insb
insb
imul
and
inc
push
mov
mov
fcomps
sbb
iret
push
xor
and
inc
mov
push
lods
jns
cmp
sub
fdivrs
cmp
repz
pushf
icebp
lock
push
mov
adc
test
adc
xorl
cmpsb
je
fistpl
xor
mov
pop
out
push
repnz
nop
mov
fsubr
leave
and
aaa
sar
cmp
jle
jmp
adc
push
popa
and
sbb
filds
and
dec
inc
or
out
mov
jp
inc
xor
mov
add
mov
sbb
add
loope
insl
inc
incl
cmp
in
xor
jmp
dec
pop
jle
pop
incb
xor
shrd
mov
cmp
fdivs
lret
gs
xor
or
out
andl
xor
pop
fwait
cmpsl
jae
inc
pop
pusha
dec
loop
adc
pop
pushf
bswap
and
cmpsl
jo
mov
add
je
stos
dec
inc
sbb
xchg
subb
mov
ret
push
mov
jl
movsl
push
shrl
jbe
cs
stos
add
fwait
fwait
mov
push
ds
jmp
cmpsb
pop
ja
test
sub
mov
lahf
int3
sbb
mov
fs
jo
inc
pushf
add
cmp
mov
insl
mov
jb
leave
mov
cmp
mov
adc
jnp
mov
inc
jns
dec
imul
cwtl
push
sbb
and
rorl
mov
addl
jp
scas
das
xchg
or
cwtl
gs
dec
mov
push
clc
xor
cmp
imul
add
adc
enter
fiadds
jne
inc
pop
add
xor
repz
push
cmp
jne
cltd
aaa
or
outsb
xor
pop
fstpl
xchg
movsl
sbb
mov
scas
mov
jl
jg
push
setl
lock
xchg
daa
imul
divl
out
ljmp
imulb
xlat
cmp
and
mov
or
push
lods
jne
pop
int3
pop
out
mov
shll
sbb
jnp
fmulp
jg
push
rorb
data16
inc
mov
xchg
ret
xor
xlat
mov
imul
push
rclb
sub
jb
ret
orl
push
popa
lcall
adc
xor
dec
mov
stc
outsl
shll
int3
inc
mov
mov
cmp
inc
in
cmp
adcl
in
mov
js
ljmp
pop
out
xor
fwait
cmp
pop
out
test
pop
popa
jbe
inc
push
push
adc
xchg
cli
mov
out
pushf
into
adc
xor
pop
aam
aaa
cmp
pop
cmp
rcr
adc
subl
jge
mov
imul
or
or
sbb
das
xchg
stos
shlb
pop
out
mov
jl
push
xor
push
dec
repnz
sti
outsl
out
scas
inc
pop
es
sbb
jnp
inc
nop
and
pusha
adc
cld
dec
mov
loop
addl
push
sbb
and
push
rclb
sub
pop
mov
push
push
imul
mov
jno
lds
dec
out
dec
push
mov
push
nop
adc
jnp
popa
sahf
sbb
sbb
lret
pop
dec
lods
add
fsubs
adc
in
in
push
dec
insl
aad
jl
push
mov
je
add
add
jo
or
mov
sub
sub
mov
xor
jb
cltd
shll
mov
pop
sbb
xor
cltd
inc
xlat
mov
aam
push
push
cmp
int3
and
pop
xor
int3
lahf
sarl
xor
or
arpl
scas
and
mov
in
pusha
adc
pop
cmp
fidivs
nop
or
xlat
rolb
inc
pop
push
add
sarl
or
fisubs
js
nop
push
lret
ficomps
int3
jmp
xchg
aad
movsb
mov
jl
ss
xor
je
arpl
ret
mov
lcall
pop
roll
xchg
sub
push
pushl
sbb
ja
imul
sbb
sbb
jb
and
jmp
sub
pusha
pop
add
scas
or
dec
jo
call
lahf
mov
flds
adc
push
adc
pop
mov
mov
push
nop
clc
fwait
dec
insl
mov
mov
lahf
sbb
out
mov
mov
jo
lret
pop
push
les
sahf
lcall
aam
jp
or
stc
mov
test
fistl
mov
mov
cmp
jecxz
out
pop
jg
sahf
dec
cli
sub
jo
pop
cltd
or
imul
addb
aad
rorl
or
pop
rcr
fwait
xchg
insl
pop
outsb
enter
cmovp
imul
call
and
pop
cmpsl
movsl
xchg
outsb
adc
sarb
cmp
push
mov
loopne
test
jmp
push
loopne
fcoms
push
dec
xor
jnp
add
jge
push
mov
xor
insb
and
mov
popa
mov
sub
sub
stc
test
imul
add
jl
enter
movsb
mov
xchg
push
adc
pop
add
dec
in
push
pop
xchg
and
fnstenv
popa
loopne
call
add
jb
jmp
inc
mov
xchg
push
in
and
jp
pop
fcompl
pop
jg
jge
pushf
jecxz
fwait
or
fidivs
push
sbb
adc
xchg
movsb
in
nop
push
ret
cld
xchg
lcall
jmp
inc
cli
sbb
sarl
mov
jmp
push
sarb
lcall
sbb
xchg
push
lret
jl
or
xchg
lds
scas
scas
mov
pop
hlt
inc
xor
or
dec
xlat
addr16
cwtl
jp
mov
jae
inc
sti
push
out
add
push
imul
sti
push
iret
cmp
fadds
outsb
lods
add
xchg
mov
push
cmpsb
push
dec
add
adc
gs
loop
pop
cltd
add
ja
pusha
cli
lds
cli
adc
mov
mov
cmpsl
dec
jle
es
add
pop
icebp
loope
push
mov
and
test
add
pushf
push
icebp
jge
add
dec
fs
out
es
mov
xchg
and
daa
pop
xor
adc
and
mov
bound
xor
lcall
sahf
sub
inc
pop
sub
dec
lret
inc
or
aas
fisubrs
ljmp
xchg
cmp
orb
sbb
call
andb
fdivrl
xchg
mov
cld
xor
lods
fldt
adc
jne
hlt
sub
dec
out
jbe
pop
bound
test
lds
add
mov
adc
xchg
int3
adc
dec
sub
fldenv
data16
je
out
fwait
out
jbe
add
xchg
ret
xlat
int3
inc
enter
and
cmpsb
pop
imul
ljmp
leave
jp
ror
ljmp
push
xchg
iret
ret
sbb
in
ret
jp
iret
je
stc
adc
lods
fimuls
cmpsl
ret
fsin
daa
cmp
xlat
or
jmp
dec
mov
cmp
jne
loope
aaa
mov
pop
xor
stc
mov
outsl
cmp
int3
adc
les
sbb
repnz
subl
rol
in
mov
icebp
daa
mov
int3
icebp
daa
sub
mov
cmovs
std
dec
fcom
mov
cmpsl
loop
nop
stc
cwtl
lret
jbe
sub
and
xor
out
pushf
xchg
movsb
roll
lcall
in
loopne
aam
scas
jb
rcrb
xorl
in
sbb
out
cmc
insb
sub
les
push
sarl
jo
shrb
cmpsb
aam
lcall
enter
adc
add
mov
das
sbbb
shr
add
insb
cmp
mov
push
icebp
dec
sub
mov
xchg
dec
gs
ljmp
cmp
adc
sub
addr16
loop
pop
mov
aam
enter
fcoml
pushf
or
imul
cwtl
dec
or
xchg
iret
imul
cmp
loopne
xchg
jg
lahf
mov
arpl
push
scas
rorb
mov
pusha
add
sbb
jmp
xchg
cmp
test
lret
lcall
fnstsw
out
mov
pop
lcall
push
xchg
test
stc
cmpsl
sahf
and
adc
push
mov
push
cs
mov
lret
mov
push
xor
sarl
popa
mov
inc
inc
sub
cmc
cli
and
sub
out
in
cld
jle
sbb
lcall
push
push
loope
xchg
lods
sub
pop
jl
lods
rclb
test
movsl
pop
imul
inc
addr16
ss
pop
mov
popa
jle
sbb
ror
pushf
movsl
mov
outsl
push
xlat
iret
mov
ljmp
jnp
cmp
xor
andl
ret
lea
sarb
xchg
cwtl
add
inc
and
fsubs
cmp
div
inc
mov
mov
jmp
test
les
pusha
call
sub
icebp
push
mov
mov
push
jg
mov
xchg
xor
add
fdiv
cmp
int
lahf
mov
movsl
stos
push
out
xor
sub
cs
jno
pop
mov
loope
push
or
pop
dec
sub
ds
sub
loope
rorl
rorl
jb
in
and
pop
bound
enter
push
jle
jle
mov
push
jg
adc
xor
arpl
jge
inc
push
cmp
inc
adc
cltd
mov
pop
ja
adcl
dec
mov
in
imul
dec
pop
cmp
loopne
icebp
cmp
sbb
mov
cli
push
mov
or
add
or
ds
push
xchg
sub
push
pop
push
push
mov
repnz
mov
lds
cmp
push
sub
adc
adc
dec
andb
fcoml
xchg
sub
mov
push
push
test
and
cmpl
mov
xchg
mov
ficoml
inc
cmp
shl
xor
inc
push
addr16
aam
push
cli
adc
lcall
aaa
test
jmp
add
incl
dec
mov
out
pop
lods
and
jg
daa
mov
xor
jno
adc
shlb
mov
adc
inc
mov
aas
out
dec
cmp
outsl
pop
popa
aam
inc
sub
out
cltd
xor
sbb
adc
xchg
incb
pop
rclb
mov
push
fdivrl
xlat
pop
jle
ficomps
pop
pushf
gs
and
mov
xchg
ret
sbb
pop
mov
insb
push
cs
popf
test
imul
insb
cmp
outsb
pop
in
or
or
lea
leave
mov
xchg
adc
push
repz
jecxz
or
das
clc
xor
test
pop
sbb
mov
inc
pushf
out
bound
into
xor
add
les
pop
stc
mov
or
mov
ret
cltd
xchg
in
nop
dec
xlat
add
push
and
xchg
push
push
out
jmp
sub
cld
in
es
jne
fidivs
jno
incb
int
cmp
add
scas
int
mov
lods
loope
mov
jp
stos
ficoms
scas
enter
pop
lcall
jge
mov
idiv
pop
mov
mov
lcall
lcall
imul
mov
arpl
cmp
stc
pop
imul
and
xor
sti
and
outsl
bound
dec
or
sbb
ljmp
outsb
and
cmpsl
jle
pop
mov
dec
jbe
jmp
popf
arpl
popa
pusha
sbb
xor
loopne
filds
jecxz
jge
jp
pop
arpl
ljmp
dec
xor
es
adc
mov
lods
jl
aad
jecxz
test
xor
sbb
sub
rol
std
testb
xchg
cwtl
xlat
ret
clc
stc
cmp
mov
inc
cmp
mov
in
jns
add
ja
xlat
les
popa
lock
mov
and
mov
mov
lock
inc
js
inc
lods
jno
or
cmp
adc
jge
pop
ror
shll
push
cmp
mov
sbb
jb
ja
popa
arpl
out
mov
ljmp
push
loop
inc
movsl
mov
inc
popf
imul
inc
repnz
cmp
pop
lcall
sahf
xor
stos
aam
dec
fimull
mov
icebp
mov
popf
movsl
dec
fbld
fwait
cmp
mov
xchg
xor
mov
xchg
lds
dec
rcr
push
inc
lock
or
xor
loopne
shr
jns
je
test
lods
adcb
or
daa
call
xor
sbb
leave
mov
popa
call
push
mov
test
cmp
imul
mov
push
xor
mov
sti
mov
dec
lea
xchg
xchg
repz
std
pop
sbb
pop
lds
ss
cmpsb
inc
das
clc
mov
cmp
pop
test
or
xor
inc
daa
lods
or
cmc
test
aad
mov
push
xchg
and
xchg
adc
adc
lods
mov
out
mov
sbb
jle
jmp
mov
jno
mov
adc
xor
sbb
imul
ljmp
jmp
jg
mov
mov
out
push
pop
fimuls
mov
or
daa
dec
fnstenv
bnd
rcrb
add
add
aaa
xlat
scas
ljmp
int
sbb
les
xor
push
jge
loopne
fldln2
scas
cli
iret
mov
sarl
testl
mov
roll
add
shrl
sbb
inc
outsb
cmp
push
orb
out
xchg
paddsw
pop
orl
adcl
fldl
and
mov
mov
or
insb
jbe
push
mov
mov
in
stos
mov
push
popa
xlat
jne
lea
bound
lret
add
shl
inc
xchg
fiadds
inc
mov
ficompl
cmpsl
les
inc
jg
mov
shlb
mov
push
xchg
testb
xchg
jecxz
add
into
nop
dec
fcompl
aam
adc
out
adc
in
mov
movsb
fildl
jl
pop
dec
pop
ret
test
jmp
inc
sub
ss
push
bound
inc
sahf
test
and
insb
pop
adc
mov
outsl
mov
lods
popa
xchg
lcall
pusha
in
mov
test
lcall
testb
mov
dec
push
push
insl
in
mov
sub
xchg
test
loopne
cs
add
pop
push
orl
push
xor
or
leave
sub
jecxz
cmp
sub
pop
or
imulb
mov
loopne
cmp
roll
mov
mov
inc
and
adc
or
sub
pop
js
mov
ret
mov
xor
mov
push
sub
ljmp
mov
or
dec
dec
fildl
loop
jmp
push
out
dec
icebp
adc
insl
in
sbb
outsl
popa
mov
test
dec
sbb
pop
xor
dec
pop
call
xchg
xchg
ret
loopne
sbb
and
mov
jle
das
js
ss
xor
inc
sbb
in
push
or
icebp
push
mov
sbb
mov
cmpsl
aad
jl
push
push
pop
xchg
lods
into
das
mov
movsb
pop
dec
mov
xor
js
movsb
rclb
mov
popa
shrb
jg
jmp
mov
push
stos
ja
imul
dec
sbb
pop
loop
sti
insb
cmp
xchg
stos
xchg
sbb
pop
dec
out
push
mov
push
xor
ret
adc
jmp
jbe
shrl
sub
mov
xchg
fistpll
mov
call
test
adc
and
push
icebp
cmpsb
add
aam
daa
dec
jo
iret
mov
add
add
icebp
popf
repz
push
inc
std
lahf
push
push
sub
cmc
push
pop
push
mov
repnz
and
les
and
mov
das
mov
jge
js
push
out
xorl
mov
jnp
or
jo
lret
pop
push
lcall
addr16
fmulp
inc
popf
xor
inc
ja
xor
and
pop
std
or
xor
push
and
scas
adc
test
lea
pop
mov
inc
xchg
cmp
xchg
push
clc
mov
xor
out
add
lods
stc
and
sbb
iretw
iret
cmpsl
xor
not
push
lret
out
sub
push
push
scas
cld
mov
cmpsl
inc
testb
scas
pusha
std
or
or
pop
mov
or
push
pop
mov
dec
sti
sub
or
inc
xor
fld
iret
incb
int
mov
and
xlat
lahf
mov
fldt
pop
div
push
push
pop
push
and
lcall
inc
orl
cmp
and
add
pop
jecxz
cmp
sbbl
lret
mov
or
add
jl
sbb
push
cmp
mov
jmp
and
mov
into
xchg
mov
xor
sti
mov
push
imul
push
pop
repz
icebp
push
adc
imul
jmp
xchg
and
xor
int3
sub
jne
into
aaa
packssdw
dec
es
cmpsb
fistps
dec
sub
rorl
insl
aad
or
or
jge
and
pop
dec
dec
les
mov
dec
jns
rclb
and
push
adc
mov
xor
xchg
mov
ss
fildl
pusha
sbb
mov
and
cltd
mov
movsl
xor
push
mov
pop
test
xchg
les
fcomp
sbb
jb
mov
stos
and
stos
cs
pop
adc
xchg
cmp
cltd
shlb
cli
jbe
mov
mov
insl
fwait
dec
daa
loop
sub
icebp
push
out
adc
sub
dec
adc
out
loop
mov
ret
pop
add
mov
lret
sub
into
rolb
testb
xchg
push
or
fwait
xor
out
shlb
xor
sub
mov
mov
or
icebp
sbb
dec
fucom
es
mov
fadd
cmp
push
scas
insb
pop
sbb
or
loopne
jnp
das
cmp
js
jno
inc
cltd
pop
je
imul
adcl
test
cltd
ja
pop
testb
jecxz
and
int
ss
add
adc
stos
sub
out
inc
les
and
testb
push
pop
in
push
movsl
push
xchg
inc
mov
jecxz
push
sub
push
jae
out
dec
or
xbegin
jnp
call
enter
fucomp
mov
pop
ret
scas
xor
xor
mov
sub
popa
jl
pop
mov
pop
jbe
push
adcb
sbb
dec
in
mov
push
test
and
jb
mov
roll
inc
mov
push
cmp
cld
popf
lds
adc
sub
mov
je
in
cli
in
out
je
inc
call
push
lcall
or
jbe
test
test
movsl
lods
fistpll
aam
mov
xorb
pop
es
jl
test
mov
jge
inc
inc
sbb
shl
add
mov
xor
adc
jno
in
inc
pushf
inc
fcomps
jecxz
enclu
xor
pop
inc
out
lret
aas
into
fs
and
sub
es
sub
xor
mov
out
push
repz
mov
adc
xchg
cs
add
inc
sbb
lahf
shr
push
shll
gs
mov
or
sarl
sbb
add
lret
dec
inc
mov
mov
jnp
cwtl
dec
inc
cmp
push
or
mov
push
test
lret
jb,pn
push
cmc
mov
jl
mov
inc
imul
fisttps
imul
mov
inc
repnz
or
faddp
cmpsb
mov
fisttpl
lds
rorl
sub
xchg
addr16
test
gs
mov
xor
lock
inc
ret
dec
xor
add
aad
xor
mov
stc
push
push
mov
stos
dec
sbb
inc
dec
push
mov
mov
jb
das
pop
inc
sub
pop
mov
incb
pusha
cmp
fwait
into
mov
out
mov
imul
ja
fcmovnb
popa
in
and
mov
mov
movsb
pop
dec
sarl
fwait
mov
xor
adc
movsl
sub
or
repz
scas
inc
sbb
aam
test
adc
adc
mov
jb
es
repnz
jb
outsb
push
cwtl
leave
int
icebp
fstpt
pop
popa
stc
xchg
sub
popa
inc
ss
stos
sbb
push
sbb
xor
sti
jp
lret
sub
out
ja
mov
adc
sarl
and
aas
mov
dec
into
jg
push
sbb
test
mov
cmp
mov
xchg
arpl
pop
pusha
stos
repnz
es
add
sahf
pop
push
cli
mov
orb
int
add
mov
shrb
popa
push
mov
sbb
jns
mov
addr16
jns
push
sbb
xor
pop
push
push
push
aas
scas
cmp
fsubrs
xchg
jecxz
cwtl
pop
xchg
arpl
inc
add
or
mov
inc
xchg
mov
push
out
pop
mov
push
push
fs
cmp
test
sub
push
aam
push
pop
push
sub
or
popf
xor
pop
mov
lea
idivl
sub
sahf
xor
mov
add
sub
sarb
pop
jnp
mov
mov
cmp
cmc
push
push
faddl
bound
sub
int
nop
adc
and
aad
mov
ljmp
cbtw
in
movsb
inc
sahf
dec
outsb
cmp
sub
sbb
filds
and
or
add
loopne
pop
xchg
sub
adc
mov
add
adc
mov
push
add
push
movsl
scas
cmp
out
add
sub
dec
addr16
sub
fcmovbe
arpl
xchg
fsub
or
js
sbb
arpl
adc
dec
movsl
das
repz
push
lds
xchg
insb
dec
jg
mov
call
mov
push
repnz
imul
movsb
sbb
xor
nop
inc
mov
sub
push
xor
fisubrs
cli
inc
subl
pop
stos
add
movsl
sub
jnp
test
mov
popa
add
mov
dec
jmp
stc
mov
dec
fsqrt
push
cmp
fldl
pop
out
icebp
rcll
push
test
adc
lods
fwait
inc
push
pushf
and
add
cmpsb
fdivs
push
push
inc
and
sub
mov
ja
outsl
aad
loopne
enter
loope
daa
mov
cmp
mov
mov
je
push
orb
xchg
ficoml
cmp
jg
outsb
and
or
adc
mov
popf
mov
test
mov
cs
mov
jns
pop
daa
insl
bound
lret
lcall
xor
adc
lea
xchg
hlt
popf
fidivs
push
mov
pop
adc
xchg
push
xchg
je
cmpsb
and
sahf
jo
icebp
or
std
dec
pop
sarb
dec
sub
fcom
or
jmp
push
mov
in
xchg
push
add
lods
jp,pt
outsb
ja
fwait
lea
xlat
mov
shl
bound
push
in
divl
test
fwait
in
daa
es
int3
lret
mov
xor
call
xor
add
adc
jb
imul
cmp
std
adc
xorb
push
pop
inc
les
mov
push
or
inc
gs
pop
les
cli
mov
sbb
pop
clc
push
ss
gs
aad
rcrl
mov
movsb
mov
sbb
repnz
test
push
fldl
jns
leave
or
dec
sbb
rcr
mov
xor
popf
insb
mov
icebp
cltd
xchg
mov
ret
add
jo
pop
movsb
in
xchg
test
in
pop
nop
pop
cmp
jae
cmc
xchg
dec
lahf
fsubl
fiaddl
push
bound
push
pop
sub
ja
xchg
mov
cmp
dec
push
or
mov
mov
test
aam
shll
popf
adc
xlat
pop
ds
sbb
cmc
aam
xchg
lret
ljmp
xchg
sti
jmp
inc
mov
sahf
mov
lods
out
xor
pop
adc
add
shld
xor
sbb
orl
jbe
jg
movsb
ljmp
pop
out
push
sub
out
mov
cmp
cmpsl
push
pop
add
jge
mov
mov
ljmp
movsl
add
mov
sub
jl
jmp
movsb
mov
xchg
fistps
jnp
mov
add
ret
ds
jl
shrl
or
add
push
dec
mov
xor
or
pop
sbb
or
ret
les
inc
inc
mov
stos
sbbl
push
sbb
mov
fcompl
je
aaa
add
mov
sbb
test
add
insb
in
jmp
xchg
and
iret
pop
cmp
jne
or
xchg
sbb
mov
icebp
lds
lea
jecxz
pop
xchg
shlb
push
nop
pop
push
inc
sub
mov
enter
push
ljmp
jp
cld
ss
test
push
popa
cmp
andb
scas
inc
pop
mov
data16
inc
scas
jl
or
fdivrp
inc
sti
push
outsb
xlat
jg
pop
push
cmp
mov
xchg
arpl
and
cmp
stos
push
pop
or
aas
mov
adc
rcrl
outsb
mov
popf
out
aas
cmp
popa
int3
out
mulb
in
cmp
sbb
popa
inc
cld
data16
sub
add
add
test
repz
push
push
enter
clc
cmp
test
inc
daa
stos
out
sbb
sti
aad
pop
mov
jnp
and
scas
repz
xchg
imul
xchg
xor
insl
mov
repz
jmp
call
std
adc
cmp
outsl
insb
dec
xlat
push
xor
adcb
jbe
nop
push
inc
adc
clc
ficoms
lret
pop
aad
lret
stc
sahf
adc
cmp
and
and
bnd
mov
test
lods
cmpb
lock
push
aas
and
imul
movsb
inc
cmpsb
mov
and
rorl
cmp
adc
pop
hlt
cltd
add
xchg
ret
sub
sub
into
in
mov
lret
cmp
arpl
outsl
mov
rcr
sbbb
adc
cld
mov
icebp
push
sbb
movsb
das
xchg
rcr
mov
xor
cmpsb
sub
cmp
test
pop
and
in
xor
push
insb
testb
test
xor
pop
cltd
jmp
mov
je
and
sbb
ret
dec
push
adcl
add
add
ret
dec
sub
jge
rcrl
mov
xchg
inc
push
inc
xor
daa
push
cmpsb
push
dec
dec
add
or
iret
lahf
repnz
cltd
jl
dec
outsb
pop
xchg
xor
lods
xlat
mov
dec
mov
mov
pusha
cmp
jno
mov
outsl
aaa
add
cltd
sub
sbbl
pop
icebp
push
mov
and
pop
push
inc
dec
ds
xchg
push
into
mov
push
mov
cmpl
sbb
sar
ret
cmp
sahf
ljmp
jns
outsl
inc
or
mov
cli
mov
mov
jmp
mov
fwait
addr16
ljmp
cltd
cmc
xchg
cmpsl
jns
shlb
clc
cmpsb
bound
push
inc
add
pop
addr16
inc
ficomps
nop
mov
mov
into
ljmp
inc
clc
mov
test
xor
and
test
push
and
xchg
push
cmc
stos
or
pop
push
pop
pop
fdivs
stc
pop
cmp
sti
ret
xchg
fs
xchg
jno
jmp
xor
dec
imul
pop
xchg
or
mov
pop
add
dec
rcrb
sbb
xchg
ljmp
call
in
movsb
aaa
sub
add
push
arpl
pop
es
pop
das
adc
jb
jo
mov
ficompl
int
sub
push
outsl
lret
add
jnp
add
mov
std
or
inc
aaa
jo
mov
repnz
push
rclb
push
es
jne
xor
sub
jl
decb
addr16
mov
test
out
and
rcll
into
mov
fisttps
cmc
test
test
mov
fidivrl
sbb
cmp
sub
in
shrb
dec
mov
or
pop
out
and
sbb
jl
repz
mov
sbb
stos
sub
daa
scas
xor
sbb
popa
adc
dec
test
popa
and
test
adc
in
or
insl
hlt
rolb
pop
push
push
and
inc
mov
inc
int
push
pop
adc
xchg
out
or
hlt
cmc
mov
cmpsl
xchg
out
mov
mov
jb
xlat
pushf
jnp
push
jmp
into
inc
adc
xchg
pusha
lods
test
mov
jbe
push
aam
add
int3
pusha
aas
inc
push
setb
ja
cmc
lret
pop
aas
into
std
call
xor
push
pop
mov
and
daa
imul
dec
xchg
dec
mov
loopne
fistl
mov
cmp
mov
mov
flds
scas
and
xchg
dec
call
ffreep
adc
addl
popa
fs
dec
cli
cmp
mov
sub
jmp
dec
lock
pop
adc
dec
inc
inc
or
push
lahf
cmp
sarb
dec
scas
pop
jmp
sub
xor
pop
addr16
aam
jp
pop
mov
ret
jp,pn
movsb
mov
dec
dec
inc
mov
inc
je
test
xor
push
dec
hlt
add
pop
outsl
call
push
mov
test
bound
fnstcw
lcall
inc
or
jae
sub
mov
sbb
daa
xchg
mov
sub
jg
orl
lret
aaa
and
sub
aaa
pop
mov
imul
and
pusha
xchg
mov
inc
dec
or
call
icebp
andb
frstor
sbb
imul
adc
sahf
nop
pop
loope
mov
xchg
out
fmull
xchg
frstor
hlt
jne
loop
xchg
pop
xlat
mov
nop
out
clc
xchg
sbb
inc
notb
inc
mov
mov
loope
add
mov
push
inc
mov
loopne
arpl
mov
stos
fmuls
cmp
int3
mov
xchg
push
xchg
push
mov
push
jae
fs
add
into
adc
xlat
add
sbb
mov
push
push
fcompl
es
or
mov
adc
cmp
push
xchg
cld
jl
xchg
xchg
shl
xor
cltd
shlb
lret
iret
cwtl
mov
or
iret
push
mov
xchg
enter
mov
popa
sub
and
pusha
in
aad
inc
adc
mov
dec
lea
addr16
shll
pop
sub
pusha
outsb
in
xchg
lock
add
xor
jbe
inc
out
outsl
push
or
mov
lods
or
pop
lcall
push
out
sbb
mov
iret
scas
arpl
loope
loop
mov
arpl
mov
xchg
bound
fisubrl
fstpt
frstor
enter
xchg
inc
movsb
pop
ror
and
mov
xorl
fisubs
mov
adc
cmc
and
fdivrl
xchg
inc
icebp
dec
lods
lret
andb
mov
pop
sub
andl
lea
and
ret
fbstp
fsub
in
in
scas
loopne
fidivl
cmp
inc
push
stos
push
fisubrs
stos
jnp
cmpsl
into
xor
in
cmpsb
andl
loop
jb
cs
ret
inc
insb
mov
push
lcall
shlb
inc
popf
mov
push
scas
inc
aad
and
inc
pop
cmp
pop
popf
or
fwait
sahf
push
mov
xor
xchg
aad
lods
pop
out
negl
ja
imul
xchg
pop
sahf
push
jmp
mov
popf
mov
shll
nop
fucomip
dec
pop
inc
leave
pop
xor
pop
push
shll
mov
and
mov
push
mov
dec
dec
cwtl
and
cmp
dec
dec
lea
jp
pop
pop
icebp
dec
mov
dec
pop
decl
jg
stc
sub
cld
mov
movsb
xchg
scas
mov
mov
insl
jmp
cltd
imul
mov
pop
adc
mulb
adcb
loop
pop
mov
lea
mov
xor
xchg
aam
adc
sub
sub
jae
pop
out
ja
sbb
or
add
adcb
sbb
into
lea
mov
add
fdivrs
lods
cwtl
jp
pop
shll
mov
push
dec
popf
aad
add
inc
aaa
xor
jle
cli
mov
pop
dec
leave
cs
aam
dec
cli
imul
push
popa
dec
pop
xchg
sub
xlat
ret
push
sbb
pop
xchg
jg
gs
xchg
cmpsb
add
inc
fldl2t
popf
ret
lcall
out
rcrb
inc
xor
push
addr16
popf
stos
adc
addb
or
jmp
enter
ss
pop
cmpsb
lea
cmp
jmp
je
arpl
and
cmp
and
or
jnp
sub
outsl
loope
not
jae
or
cmpsl
pop
mov
wbinvd
sbb
pop
xor
test
popl
out
mov
xchg
or
jbe
dec
sub
iret
jbe
jmp
sti
enter
and
sbb
xchg
std
ret
test
sub
xor
push
mov
lret
rcr
sar
mov
mov
fmuls
sub
mov
insl
imul
inc
lret
int
pop
ja
movsb
add
cli
imul
inc
pushf
mov
aaa
sub
lock
cmp
cmc
popf
push
popl
push
loopne
ja
aaa
adc
push
imul
les
cmp
xchg
imul
pusha
cmp
lods
stc
add
xchg
mov
daa
aam
mov
push
rcr
rclb
ss
nop
push
negb
std
leave
into
sahf
imul
imul
xchg
and
mov
lock
cmpsl
jge
arpl
in
mov
movsb
mov
sbb
sbb
mov
xor
call
pop
clc
iret
pusha
movsb
into
mov
out
out
sti
xchg
mov
rorb
sbb
dec
or
insb
inc
fbstp
mov
outsb
loope
mov
lret
push
out
xor
xchg
out
xchg
xchg
jae
repz
imul
test
add
xlat
mov
jmp
dec
sbb
test
and
and
xor
sub
mov
ljmp
or
fbld
push
cmp
mov
mov
fiaddl
mov
stc
out
fmulp
pusha
cwtl
sti
fucom
xchg
mov
jbe
mov
sbb
or
xlat
xchg
imul
mov
cmc
pop
pop
sub
pop
xchg
pop
ds
or
sbb
sbb
std
push
add
and
lahf
jne
insl
add
mov
mov
sub
in
dec
dec
jle
lret
cld
outsb
cli
lods
jno
mov
jbe
clc
cld
mov
pop
cmp
leave
cwtl
mov
xor
push
out
mov
popa
arpl
or
push
or
or
jne
es
mov
xchg
addr16
sbb
push
fadd
or
shll
and
cmpsb
inc
negb
fstpl
addr16
shrb
mov
sub
or
push
inc
pop
aas
lcall
and
das
nop
je
and
ss
in
sub
cld
adc
in
lret
pop
je
loope
or
pop
outsl
mov
pop
lods
pusha
movb
in
sub
push
lret
sbb
shr
and
dec
xchg
lock
push
lahf
and
jo
sbb
fistps
and
in
dec
dec
or
pop
mov
std
fwait
rorb
fnstsw
outsl
negl
cmp
test
xchg
ds
fimull
out
out
pop
adc
xor
data16
xor
inc
pop
mov
in
dec
lods
fiadds
dec
ss
pop
or
dec
push
sbb
jp
jg
sbb
ljmp
out
paddsw
lods
lret
xchg
push
call
mov
gs
rcll
pusha
cmp
jns
shll
sub
lods
stc
mov
shr
enter
xor
imul
inc
mov
outsb
dec
aaa
inc
xchg
mov
test
push
fldenv
dec
pop
dec
pop
cmc
sarb
mov
add
ficompl
jno
inc
mov
psllq
cwtl
fs
mov
insl
imul
data16
popf
cwtl
dec
add
pop
push
mov
xor
sti
xor
mov
pop
jb
sbb
inc
push
popa
or
adc
mov
addl
dec
inc
mov
cmp
dec
xor
cmpl
je
shrl
jp
out
or
je
sbb
out
popa
inc
add
mov
out
mov
into
pop
sub
xor
dec
cmpl
je
je
cli
popa
test
sub
orl
add
xchg
lds
out
jo
jecxz
xor
mov
adc
andb
dec
sahf
mov
inc
pop
push
cmpsl
loopne
hlt
std
cmp
push
jo
xchg
sub
ss
jns
ret
shrl
mov
push
call
xchg
sarl
ss
dec
cmp
mov
xor
push
ds
lods
jg
sub
pop
mov
pop
enter
stos
inc
ss
push
mov
cmpsb
add
in
xor
jnp
mov
scas
adc
int
fiadds
mov
mov
andb
sbb
repnz
psubq
adc
enter
and
imul
jmp
loopne
hlt
aam
xchg
or
push
cmc
faddp
outsb
cmp
mov
add
xchg
xor
gs
or
mov
sbb
faddl
adc
xor
cmp
xor
mov
lret
leave
insb
add
lret
adc
subl
jle
inc
adc
scas
jg
jb
mov
xchg
popa
push
lret
das
pop
mov
xor
daa
repz
les
sarb
and
data16
push
jle
push
jmp
push
pusha
ret
mov
or
mov
or
clc
adc
enter
mov
mov
sbb
pop
outsl
pop
daa
dec
mov
int
std
aaa
ret
xchg
jge
ja
and
pop
and
js
sti
inc
punpckhwd
ret
stos
inc
push
jmp
out
pop
aas
inc
cld
les
xor
lock
mov
jne
cmpsl
inc
ds
test
bound
cmp
jbe
div
adc
data16
cmp
sbb
dec
cmp
mov
loope
push
out
sti
mov
xor
insb
push
pop
jno
push
movsb
mov
movzbl
das
pop
test
lods
and
sub
mov
popf
push
or
dec
sub
and
adc
mov
es
out
dec
stos
xchg
mov
outsl
mov
xchg
or
adc
push
push
mov
jo
sub
xor
clc
loopne
sbb
nop
jae
andb
mov
jmp
and
fsubl
outsb
or
sbb
mov
sar
jno
mov
xor
testl
aad
sti
xor
adc
and
add
loop
popa
in
mov
in
sbb
sbbl
das
shll
mov
xor
popa
sbb
cmovno
xchg
mov
das
xchg
push
loop
fdivrl
pushf
adc
pop
call
cltd
mov
imul
jle
and
and
movsl
jg
shl
addr16
pop
sub
leave
push
test
dec
lock
jg
rcrl
inc
cmp
push
jge
mov
adc
and
ljmp
testl
mov
movsb
mov
add
and
int3
mov
dec
jns
fisubrs
mov
lret
ret
sub
xor
and
adc
dec
cs
push
jns
gs
inc
nop
mov
and
xlat
cmp
aaa
movsl
jmp
and
sbb
inc
and
push
clc
sahf
mov
test
loope
mov
xor
test
sbbl
ds
stos
pop
mov
xchg
sub
xchg
add
xchg
push
push
lock
dec
movsl
inc
adc
mov
je
pop
arpl
or
lret
sub
dec
arpl
adc
dec
push
daa
and
dec
sbb
cltd
add
xchg
mov
mov
cmp
and
add
dec
in
jb
mov
xor
stc
arpl
mov
or
pushf
lods
sbb
aam
jb
cmpsl
ja
movsb
dec
imul
scas
bound
test
mov
jo
lcall
popa
mov
push
xchg
xor
mov
lods
jge
inc
cmpsb
mov
insl
andl
adc
out
popa
in
leave
sub
shrb
or
adc
xchg
xchg
dec
add
pop
test
push
adc
ror
xchg
push
test
mov
in
sub
mov
mov
cmp
push
inc
pop
mov
sti
ret
cmp
fcomps
push
adcb
into
inc
xor
mov
sub
or
inc
add
sbb
mov
aas
mov
lds
jmp
dec
cmp
out
xchg
push
xor
inc
xor
xchg
lahf
push
sub
dec
cs
mov
mov
ss
lea
pop
push
add
jge
ret
pop
mov
jle
lock
ds
fstl
adc
lret
shl
adc
cs
fdivs
mov
data16
scas
pop
nop
jp
cltd
ss
or
mov
and
popa
jge
int
jo
mov
loop,pt
dec
mov
pop
push
inc
adc
mov
sub
xchg
push
pop
sub
ret
mov
bound
push
push
negl
add
ret
test
or
inc
push
jp
or
and
sbb
fldenv
mov
pop
and
jo
je
cltd
ret
cli
leave
mov
or
jecxz
sub
push
cli
xor
pop
lods
add
cld
divl
sbb
xchg
mov
adc
lds
jno
test
inc
ja
call
add
jb
daa
add
mov
stos
into
mov
pavgw
popf
popa
xchg
xor
fbld
lahf
test
rcr
inc
sbb
mov
fldt
pop
sbb
mov
xchg
mov
sub
aas
jne
pop
xchg
shll
repnz
repz
mov
add
repnz
lret
sbb
ret
fistps
adc
cmpsb
ficomps
movsl
inc
mov
push
or
std
or
movsl
pop
or
shrb
lock
flds
insb
mov
cwtl
mov
lds
mov
arpl
inc
lret
pop
mov
dec
cmp
movsb
imul
dec
push
enter
loopne
jo
add
or
das
adc
aas
inc
cmp
or
xor
insl
ds
push
daa
outsl
in
mov
add
mov
push
pop
lods
test
pusha
les
subl
insb
mov
inc
iret
ds
xchg
je
movsb
lret
push
iret
mov
xor
int3
pop
mov
repz
mov
ljmp
cmp
test
fsubrs
out
adc
leave
or
xor
enter
xor
std
jle
popa
imul
sbb
cmpsl
sbb
inc
or
and
mov
cmp
orl
pop
adc
dec
xchg
push
and
popf
imulb
bound
or
int3
hlt
cmc
hlt
in
sti
fidivrl
vcvttpd2dqx
jge
je
lcall
inc
inc
dec
xchg
sub
jne
lods
bound
mov
inc
mov
fstl
fisttpll
pop
int3
fstl
push
fisubl
jle
push
sub
dec
ficoms
popa
stos
jb
sbb
jo
dec
cmp
add
out
test
sbb
jne
aas
fidivs
rcrl
lock
pop
popf
xchg
push
addr16
mov
mov
jno
xchg
mov
stos
gs
gs
sbb
inc
cmp
inc
imul
adc
adc
test
xor
cmp
mov
xchg
je
xchg
mov
arpl
clc
dec
or
out
mov
sbb
add
push
mov
lods
inc
xchg
notl
movsl
sub
in
test
lcall
add
scas
push
and
mov
push
pop
cmpsb
in
mov
bound
dec
scas
dec
aam
cld
xchg
xchg
jno
mov
or
mov
add
push
jbe
call
push
mov
in
sub
sahf
stc
xchg
in
jmp
fucomip
rclb
scas
xor
mov
mov
inc
sbb
daa
pop
gs
dec
fwait
xor
aad
out
or
sbb
rcll
les
mov
sub
sub
cli
cmovp
jae
lock
in
lret
fsts
fsubrs
xchg
es
loopne
push
dec
sub
push
mov
outsb
lret
clc
dec
out
es
inc
and
and
test
cmp
cmpsl
stc
ss
ret
daa
addr16
aad
add
sarl
pop
pop
sbb
test
repz
int3
xor
cmp
in
daa
mov
sbb
aad
lret
stc
and
push
push
and
push
arpl
icebp
sub
rcr
or
orl
sarl
jbe
inc
sub
aad
xchg
repz
ret
sbb
sahf
jge
sub
push
int3
push
movsl
into
lret
sub
mov
xor
jb
divb
into
lret
data16
inc
pop
fcmovb
in
xchg
mov
sbb
pusha
aad
sbb
sbb
iret
push
mov
in
fimull
pop
xor
sbb
cwtl
fbstp
mov
mov
mov
mov
jg
js
inc
shll
stos
xor
mov
sbb
sbb
jns
add
test
ret
mov
test
jb
movsb
das
pop
movsl
add
fstps
into
jns
nop
jl
fldcw
fmuls
pop
xchg
mov
add
jb
nop
lods
and
xor
mov
and
push
cmp
pusha
aad
jp
cmpsb
jle
cmc
sub
ja
lea
cs
outsl
leave
cmp
mov
outsl
add
popf
in
ljmp
imul
adc
xchg
adc
in
jecxz
adc
fsts
cmpsb
mov
adc
mov
dec
iret
filds
lds
cmpsl
dec
push
xchg
push
arpl
push
scas
sbb
xor
xor
xchg
dec
lret
sub
cwtl
subb
int3
add
mov
jae
and
ret
popa
movb
pop
popf
and
push
push
xchg
xchg
sbb
pop
addr16
add
adc
int3
sbbb
daa
and
cmp
xchg
test
aas
sbb
in
mov
and
jns
les
ficoms
inc
dec
push
out
dec
gs
das
sub
xchg
fisubl
xchg
pop
in
movsb
adc
insb
mov
xor
fisttps
lea
ljmp
pop
idiv
cmp
lret
add
sarb
dec
cltd
push
sub
xor
outsb
dec
push
add
mov
push
jno
and
es
mov
cld
sbb
pop
mov
xchg
inc
push
clc
push
dec
and
mov
and
outsb
xchg
add
mov
ror
shlb
fnstcw
push
mov
stos
inc
popf
xor
ds
rol
mov
mov
loop
stc
pop
adc
xor
jge
iret
popf
mov
push
and
jb
mov
sub
xor
inc
sarl
popf
jge
and
mov
ljmp
adc
dec
push
mov
es
popf
shrb
sbb
fsubrp
mov
inc
fstpl
adc
test
lret
adc
fildl
mov
insl
pop
lahf
adc
mov
imul
fwait
inc
ds
push
outsb
ja
or
inc
test
sbb
out
cld
fnstcw
or
push
cltd
pop
aas
jmp
mov
shll
xlat
cmp
add
sti
pop
sub
jmp
cld
lahf
adc
sub
div
mov
addr16
lea
jns
cmp
pop
stos
xchg
fdivs
xchg
add
aaa
shrb
xchg
jne
and
mov
dec
and
cmc
jne
ja,pt
repz
movsb
or
enter
dec
ss
out
adc
push
sub
sub
in
lods
sti
imulb
and
imul
mov
push
dec
lock
leave
rclb
das
and
shl
imul
jne
sbb
push
shll
lahf
mov
dec
scas
sbb
cmpsb
out
popa
aam
imul
push
ljmp
adc
adc
mov
sub
ret
neg
push
out
mov
repz
sti
mov
mov
add
jle
fstl
mov
addr16
sbb
inc
rclb
addr16
mov
mov
imul
jmp
and
add
push
mov
lods
inc
push
mov
lods
and
xor
out
jae
hlt
or
mov
xchg
push
mov
adc
pop
int
daa
xchg
pop
push
inc
popf
xchg
lcall
pop
addps
jno
repz
or
cmp
sbbb
cmp
sbb
jge
push
mov
imul
jg
mov
jmp
enter
iret
in
sbb
adc
nop
add
sub
in
inc
test
imul
adc
mov
adc
xorb
jmp
jne
sahf
jl
into
ficompl
movsl
cmp
je
push
mov
rclb
les
cmp
aaa
ret
adc
push
lods
ds
out
push
jnp
and
dec
dec
stos
push
sub
test
call
idivl
notl
xor
out
icebp
repz
lock
pop
jg
push
sbb
int
lods
or
xchg
aas
test
cmp
inc
pop
mov
cmpsb
rcl
movsl
push
inc
sbb
ss
xchg
adc
loopne
adc
lods
sub
das
jecxz
orl
or
or
inc
out
jns
push
cmp
lock
call
lea
push
mov
sbb
pop
enter
pop
inc
lds
loopne
dec
xor
test
fmuls
jo
inc
lcall
push
jne
ret
repnz
jge
movsl
lret
nop
cmp
push
adc
mov
and
jecxz
aad
mov
jg
push
iret
xlat
icebp
ljmp
cmpsl
mov
into
fimuls
int
std
sub
out
mov
xorl
xor
jbe
into
sub
dec
pop
insl
dec
fisubl
dec
jno
aaa
and
je
fnstcw
les
lods
and
mov
pop
dec
or
loop,pt
and
arpl
ljmp
add
xor
xchg
sub
xchg
push
ja
shrb
xor
xchg
xchg
pop
xchg
jne
movsb
sub
mov
pop
fstpl
cld
test
ret
repnz
push
out
outsl
fcompl
lret
push
scas
lcall
pop
mov
xchg
fucomp
div
pop
cmp
ss
ret
or
sub
das
gs
ljmp
xor
cmovl
ss
inc
cmp
roll
testb
sbb
mov
mov
cmp
jnp
aaa
ds
arpl
stos
leave
mov
shlb
ss
mov
insb
jb
leave
xchg
xor
popf
sub
insb
insl
adc
or
dec
ret
lock
icebp
idivl
je
sub
gs
push
test
dec
mov
test
or
inc
dec
sub
into
add
and
push
arpl
fsub
adc
test
daa
mov
pop
cmp
mov
andb
loop
cmp
cmp
les
enter
mov
or
fisubs
sub
mov
add
add
dec
jae
fidivrs
cs
mov
negl
ljmp
rorb
aam
call
imul
and
fwait
add
pop
scas
xchg
pop
xchg
inc
je
popf
fidivl
stc
inc
idivl
std
jecxz
push
adc
dec
movsl
lahf
imul
int
loopne
outsl
adc
lods
mov
jns
mov
decb
lcall
out
mov
addr16
mov
or
iret
shl
mov
or
inc
gs
push
aas
sarb
lds
dec
fiadds
cmp
push
jae
ljmp
xor
push
mov
dec
lcall
ret
fsubs
mov
rorb
ljmp
mov
inc
popa
mov
cmp
add
or
in
stos
dec
xchg
push
jnp
popa
sbb
loope
jb
lock
outsl
pop
or
adc
push
in
lahf
dec
adc
mov
in
pop
xor
je
jmp
in
mov
jb
and
shl
mov
push
enter
or
jmp
hlt
or
inc
push
inc
jns
xor
jb
jl
sub
cmp
rolb
fbstp
ret
xlat
mov
mov
lods
or
mov
pushf
cltd
xchg
bound
xchg
dec
das
fstps
mov
mov
or
repnz
sub
aam
xor
scas
gs
cmp
orl
aas
mov
push
mov
pop
sarb
rcrl
andb
adc
lods
cmpsl
xchg
or
rorl
push
mov
and
imul
or
xor
xlat
sar
test
xchg
sarb
rorb
mov
xchg
or
outsl
std
jns
mov
nop
insb
in
shrl
enter
lcall
jl
xchg
mov
xor
call
cmp
lret
push
jnp
jae
mov
fimull
fwait
in
lods
push
sahf
and
sti
mov
xlat
test
test
cmp
jnp
cmpsb
dec
out
repnz
pop
jg
sbb
cli
cmp
loopne
mov
sbb
push
test
mov
cmpsb
addr16
int3
jno
pop
jecxz
mov
or
leave
dec
adc
cwtl
fwait
and
xor
inc
ljmp
sub
scas
inc
or
cmp
std
xchg
adc
in
outsl
sbb
inc
push
xor
fninit
sarb
fwait
or
sahf
or
cmp
add
mov
insl
lods
int
scas
push
sahf
rorl
fs
test
outsb
subl
pop
cli
jnp
push
lods
sbb
inc
add
adc
mov
jbe
jbe
fs
cltd
enter
and
cmp
clc
pop
cmp
je
or
push
dec
cli
sub
sbb
mov
cmp
addb
dec
or
sbb
dec
out
mov
das
pop
add
daa
leave
mov
sbb
sub
pop
pushf
cmpsl
cs
shlb
add
mov
nopl
outsb
add
repnz
adc
adc
push
shl
lea
adc
sbb
js
imul
cmp
and
adc
or
cmpb
sbbl
lcall
lods
xchg
mov
cmp
adc
jae
fmulp
pop
repz
mov
xor
leave
pop
push
addb
lods
xor
mov
dec
adc
push
sti
lahf
adc
fisttps
push
push
repnz
fstps
push
add
push
pop
jno
adc
and
sub
stos
jecxz
sbb
nop
stos
xor
ficompl
and
sub
mov
ljmp
and
mov
scas
cmp
pop
int3
iret
sbb
mov
jg
mov
pop
push
dec
in
push
test
das
pusha
mov
lret
test
lahf
cmp
nop
pop
das
xor
cmp
mov
cmp
xchg
les
popf
inc
or
xor
dec
sbb
mov
xchg
pusha
pop
push
setae
jae
xchg
cmp
dec
lods
push
mov
and
sti
or
inc
in
shl
and
jmp
in
pop
insl
aaa
pop
push
jmp
jp
inc
xchg
aam
pop
divb
push
adc
add
subl
ss
out
jnp
or
jo
cmc
pop
mov
jnp
divb
mov
xor
stos
mov
hlt
adc
xor
rcll
popa
ret
repz
clc
sub
rorl
jbe
jne
mov
push
sbb
fs
and
fdivrl
inc
fnstsw
mov
js
nop
adcb
push
int
lds
jmp
pop
add
orl
arpl
sub
or
pop
mov
fs
and
adc
or
jns
or
icebp
adc
sub
jl
or
jmp
push
jmp
adc
jl
xchg
inc
xchg
jns
add
mov
int
or
mov
lcall
jno
lock
cwtl
xor
adc
inc
test
mov
lret
push
fcmovnu
lds
push
in
mov
adc
das
push
inc
xchg
lods
adc
in
mov
xchg
rclb
fldpi
cmpb
cwtl
add
lret
push
rcr
add
and
xchg
or
jno
loop
xchg
xor
fstps
sub
xor
pop
or
xor
and
or
loope
repnz
cmp
insb
shrl
addr16
lock
int
rcrb
and
lret
cwtl
mov
cli
data16
inc
std
xchg
or
sub
mov
daa
imul
scas
push
mov
dec
add
jmp
repz
mov
aas
push
decb
cmp
repz
outsl
scas
lods
rorb
test
add
std
dec
xchg
sbb
cmc
out
repnz
pop
mov
in
push
jl
xlat
and
dec
xchg
mov
cmpsb
sbb
sti
cmpsl
ret
jns
rorb
mov
cmp
jbe,pt
loopne
mov
mov
push
mov
or
add
inc
loopne
pop
pop
cmp
xchg
inc
outsb
mov
pop
in
das
cli
jp
pop
inc
fistl
xchg
xchg
jo
jno
int3
adc
sbb
xor
fsincos
imul
mov
decb
fdivrl
cwtl
loopne
je
out
push
mov
sub
imul
popa
jno
or
jmp
sbb
rol
mov
mov
sti
xchg
and
or
out
fbstp
jo
inc
sahf
sbb
lock
cmpsb
ret
ret
repz
jb
lock
pop
loopne
adc
lret
add
pop
decb
mov
cmp
or
leave
clc
ss
adc
rolb
shrl
aam
mov
icebp
pop
cmp
je
pop
int3
fstpt
shlb
push
fcoms
jecxz
sub
mov
xor
cld
lods
sub
repz
test
test
mov
into
lock
and
sbb
call
ror
jbe
and
gs
mov
pop
sahf
inc
push
mov
mov
rcr
sub
in
int
das
dec
dec
lcall
in
loopne
jns
mov
iret
ror
mov
in
popa
lahf
ficomps
xor
and
imul
pop
push
inc
xlat
clc
sub
inc
clc
add
inc
insl
scas
xor
sbb
mov
in
mov
adc
lods
les
pusha
je
pop
jb
jge
pop
xor
mov
inc
sub
cmp
push
popa
data16
sarl
push
push
mov
je
shl
sbb
jae
pop
rolb
or
mov
add
push
pop
xor
add
aam
mov
inc
adc
test
push
mov
pop
add
fidivrl
sub
dec
mov
dec
xor
inc
pushf
pop
xor
gs
inc
lret
xor
clc
cmp
adc
stc
shlb
je
mov
push
mov
fcoml
cmpsl
jnp
outsb
jne
xchg
add
mov
pop
xor
rcr
out
icebp
out
test
sbb
pusha
mov
data16
jle
adc
mov
nop
scas
jnp
lods
and
jo
aam
mov
mov
cmp
xor
push
inc
lahf
fnstsw
pusha
leave
sbb
js
aas
jmp
fnsave
or
and
cmp
push
jg
cmp
push
xchg
insb
gs
push
insb
pop
in
cmpsb
pop
ret
pop
mov
lret
lock
js
pushf
add
cmc
inc
out
mov
or
lods
pop
sub
outsb
jne
int
mov
inc
mov
mov
jecxz
adc
ffree
xchg
sub
fimull
pusha
aam
cmp
sub
nop
jbe
loopne
popf
and
xchg
sbb
xchg
cs
mov
ror
inc
stos
inc
lahf
loopne
mov
ror
aaa
adc
mov
jl
std
xchg
inc
push
push
dec
mov
icebp
outsb
lret
dec
push
out
dec
add
lahf
pop
push
inc
inc
popf
sbb
test
jae
ret
mov
pop
nop
inc
cmpsb
inc
inc
ja
int
ljmp
ja
repz
xlat
cmp
es
xor
xchg
inc
push
pop
imul
dec
repz
sarl
pop
xor
mov
pop
in
or
mov
scas
jne
imull
mov
pushf
iret
push
lcall
aad
testb
push
push
call
dec
pop
pop
rorb
xchg
test
xchg
jge
rcr
inc
pop
jmp
mov
scas
sub
xchg
cmp
lock
pop
movsl
scas
js
jg
or
daa
test
pushf
pop
mov
jmp
cmp
in
mov
dec
xchg
push
out
sti
xor
mov
test
sub
or
jmp
push
mov
stc
cmp
push
inc
fmulp
out
ret
mov
imul
jns
fidivs
xlat
add
xchg
or
out
pop
je
sub
nop
mov
mov
pop
pop
es
sarl
addb
add
int
int
and
dec
mov
outsb
arpl
add
cmp
aas
mov
shrb
fs
cmp
jae
sti
out
sahf
in
pop
add
pop
addb
leave
mov
lret
arpl
fs
repnz
pop
and
daa
mov
pusha
dec
inc
inc
cvtps2pi
and
cmp
popf
mov
and
push
loope
and
scas
stos
popa
fistpll
cltd
inc
outsb
fisttps
mov
inc
rorl
adcb
cld
sbbb
cmp
mov
dec
adc
cmp
adc
in
pusha
push
lcall
push
mov
mov
push
loopw
pop
jbe
mov
jmp
call
mov
inc
xchg
mov
sbb
adc
dec
iret
cmp
jl
out
js
sbb
jns
xchg
mov
or
mov
add
mov
and
pop
movsb
and
xchg
enter
fldl
push
cmpsb
sub
push
in
stos
das
loopne
rcrb
ret
adc
inc
int
orl
outsb
push
add
in
pusha
cmp
mov
xchg
lods
xchg
out
dec
jmp
sub
xor
mov
xchg
out
enter
hlt
lret
or
repz
aam
rolb
aam
jae
mov
out
pop
or
cltd
lahf
lcall
in
pop
imul
ja
bound
cltd
push
fimull
repz
sbb
inc
mov
push
push
xchg
inc
push
aad
mov
dec
outsl
pop
mov
es
mov
jne
pop
scas
mov
loop
or
cwtl
adc
movsb
mov
ss
lods
into
mov
clc
outsb
jg
mov
insl
or
push
nop
push
cwtl
aam
or
or
xchg
cmc
das
xor
dec
mov
loopne
mov
mov
popf
std
or
ret
and
mov
cmp
iret
inc
mov
sbb
sub
mov
mov
or
lahf
aas
out
imul
out
jecxz
xchg
daa
dec
gs
add
jno
outsl
add
jo
in
mov
adc
pop
and
sub
inc
enter
mov
rep
out
in
test
jbe
cli
addr16
movsl
in
movsb
or
std
sbb
test
adc
das
add
add
jp
mov
xor
or
dec
sub
xchg
insb
add
push
arpl
mov
push
jmp
fdiv
js
jg
stos
add
out
leave
lds
xor
lock
jo
je
mov
test
push
dec
inc
ss
push
rol
pop
in
sti
adc
pop
inc
cmp
sahf
sbb
inc
pushf
es
push
jmp
pushf
popa
sub
inc
xor
sarb
ret
outsl
pop
pop
mov
rcrb
fiaddl
sub
xchg
movsb
scas
andl
insl
push
push
scas
xlat
add
mov
cmp
dec
fimuls
stos
push
bound
add
jp
push
fnstsw
add
sbb
xchg
std
insb
into
roll
es
and
jno
out
mov
das
xchg
faddl
jbe
mov
lahf
mov
into
xchg
or
pop
mov
add
pop
sbb
cmpsl
out
cs
mov
jb
cmp
into
fsubrs
cltd
add
call
mov
aad
out
mov
push
mov
ljmp
lahf
movsb
inc
fsubl
xchg
dec
cmp
shlb
fnsave
mov
sub
ret
xchg
es
jg
sti
lret
sbb
xor
mov
insl
les
cmpsl
cmp
loope
pushf
int
mov
jmp
aaa
add
sbb
mov
sbb
push
pop
or
push
int
jnp
pop
movsl
lret
imul
fcomps
arpl
cmp
shll
xchg
xor
xchg
jmp
pop
mov
mov
mov
es
lock
xchg
outsb
flds
pop
jg
in
mov
icebp
sti
adc
push
push
js
xor
push
push
iret
jecxz
popa
and
imul
mov
scas
inc
jns
imul
dec
mov
jmp
test
push
dec
pop
dec
or
hlt
mov
adc
sub
sahf
outsl
add
add
repz
nop
push
add
mov
test
mov
cmove
aam
cld
pop
lods
cmp
mov
add
sbb
pusha
sub
adc
pusha
inc
add
mov
stc
lcall
sub
mov
mov
ja
lea
adc
je
xchg
add
test
jge
loop
mov
cld
sahf
loopne
shlb
in
cld
cmp
add
push
std
push
jae
out
fists
fwait
shrb
sahf
adc
les
adc
cwtl
arpl
fld
or
movsl
jne
cltd
into
jmp
mov
push
dec
incl
es
int3
mov
push
inc
adc
imul
sarb
fimull
pop
xchg
sub
ljmp
or
into
sub
icebp
in
pushf
sub
pop
ljmp
ficoml
testb
loop
in
inc
dec
insb
jl
cltd
mov
pop
cmc
bnd
fidivl
out
adc
in
std
ljmp
sub
push
test
inc
movsl
xchg
adc
jmp
ljmp
lock
rclb
add
cmpsb
push
nop
sbb
xchg
xchg
xlat
sbb
xchg
imull
clc
popf
sbb
or
and
sarl
mov
pop
sub
cmc
repnz
loopne
sbb
loopne
mov
pmaxsw
out
push
or
test
cltd
sti
inc
in
mov
std
mov
dec
lret
mov
lock
fnstcw
cmp
dec
enter
dec
jmp
jne
shrb
cmp
data16
lcall
addr16
dec
popa
imul
int3
jg
insl
mov
bound
fistps
xchg
mov
cmp
mov
mov
dec
iret
out
das
lret
sub
ret
xchg
scas
das
addr16
push
xorl
add
test
in
fwait
mov
rdtsc
sbb
shr
aad
lods
aad
cmp
push
je
addl
or
scas
push
mov
aad
lret
sub
repnz
aam
sbb
fcompl
pop
and
lcall
movsb
xor
les
push
inc
retw
scas
fidivrs
ja
outsl
sarl
mov
call
or
mov
fimuls
inc
push
push
fwait
mov
sub
pop
enter
inc
and
xor
push
push
jl
xor
insb
test
push
lcall
inc
and
aam
or
sahf
cltd
jae
push
dec
leave
fidivrl
push
popa
fstpl
es
fcmovb
nop
adc
daa
ficoms
in
shll
adc
inc
push
rcrl
mov
loopne
insl
adc
dec
pop
mov
orb
int
fsubrs
std
arpl
stc
mov
mov
movsb
add
das
jge
push
dec
nop
xchg
cmc
mov
fidivs
mov
cmp
xlat
cmpsb
push
out
jl
test
add
mov
mov
adc
in
xlat
and
andl
jno
xchg
imul
add
insl
jle
stc
nop
xchg
and
push
jnp
scas
mov
aad
mov
push
sub
stos
lods
add
mov
push
cltd
pushf
mov
sbb
xchg
jbe
pop
clc
pop
lock
or
push
jle
dec
rol
dec
sbb
aam
arpl
add
movsb
fisubrl
in
pushf
in
adc
inc
or
test
push
jecxz
test
xchg
cmp
mov
add
lea
out
cmpsl
stos
push
insb
ja
nop
std
rcr
jns
mov
and
test
add
jecxz
jmp
add
inc
ficompl
lcall
xor
orl
out
and
lea
scas
mov
jne
movsb
push
xor
pusha
stc
add
xchg
insl
adc
mov
mov
sub
xorb
pop
jne
pop
cmpsl
jo
lods
inc
leave
push
scas
push
nop
jb
pop
mov
test
leave
insl
xlat
push
call
loope
movl
mov
icebp
ds
push
fistpl
test
js
cmp
mov
fldcw
popa
int3
dec
rorb
adc
fdivrl
sbbb
stos
jmp
and
jg
cs
sbb
dec
xlat
adc
dec
js
xchg
aam
mov
int3
pop
pop
mov
insb
lret
cltd
and
sub
mov
mov
mov
add
add
test
and
adc
cmc
dec
xchg
inc
pusha
mov
movsb
and
sub
test
cmp
push
call
dec
mov
stc
pusha
in
mov
in
adc
add
gs
repnz
shrb
sbb
mov
cmp
push
sub
adc
pop
clc
or
sarl
addb
sub
jecxz
cmp
xchg
add
ret
fs
pop
add
mov
hlt
cli
lods
sbb
cld
sub
push
xchg
popf
fsubr
mov
sub
mov
jmp
ficoms
xor
pop
sbb
push
mov
imul
jns
mov
shr
shrb
in
mov
xchg
mov
mov
lods
imul
shlb
jp
je
insl
outsb
es
mov
out
cmpl
pop
cwtl
in
xor
rcll
out
test
dec
cmpsb
idivl
push
cmove
jae
push
jbe
cmc
mov
int
cmc
cmp
lock
jns
out
scas
sti
test
xchg
jbe
lahf
pop
stos
icebp
sub
xor
inc
pop
js
add
movsb
insb
in
in
add
jecxz
pop
inc
jecxz
xor
jg
popa
mov
popf
in
stos
push
pop
cld
movsb
fcomip
addl
adc
ss
mov
lea
xchg
rcll
mov
ds
into
inc
pop
jge
scas
add
and
int3
gs
or
mov
loop
clc
or
add
ret
sub
shll
cmpsb
imul
jge
lock
imul
ret
shll
jmp
stc
ss
sub
stos
adc
scas
pop
decl
punpckhwd
scas
pop
adc
ds
pop
repnz
cs
test
test
sar
mov
adc
addr16
scas
lock
cmc
mov
cli
sbb
dec
cli
and
loope
mov
lret
push
aad
inc
sub
cmp
shl
mov
sub
aad
in
mov
daa
jp
and
pushf
jmp
ds
lea
push
test
mov
push
ja
jge
andl
adc
call
imul
pop
push
cmc
lret
sub
dec
cltd
movl
pop
cmp
mov
mov
xchg
stc
bound
cwtl
idivl
cltd
pop
xchg
shll
inc
and
sbb
cld
adc
les
ja
sub
adc
jnp
es
cmpsb
in
or
mov
pop
fistl
jle
movsl
lahf
jb
imul
and
dec
shlb
adc
fcomps
push
int3
xor
nop
jnp
outsb
test
movsl
push
pop
pusha
je
or
popa
inc
xlat
mov
mov
mov
lret
hlt
inc
cmp
push
imul
ljmp
loopne
adc
dec
pop
iret
mov
je
shll
ficomps
lods
rorb
mov
fcomps
es
pop
fildll
mov
pop
mov
insl
and
hlt
mov
repz
jo
jl
rcrl
mov
push
cmp
scas
movq
add
jmp
daa
sbb
rol
leave
jne
sbb
clc
shll
adc
adcb
and
mov
dec
mov
xor
jmp
sbbl
xor
add
inc
add
stc
mov
mov
pop
or
mov
jae
inc
js
cmp
xchg
fstp
hlt
imul
jne
adc
sub
testb
xor
and
jp
xchg
xchg
pop
sbb
fwait
mov
nop
int
add
repnz
fdivs
pop
or
lea
ljmp
sub
das
out
pop
xor
sbb
das
jmp
in
pushf
mov
fnstsw
push
lret
xchg
mov
pop
adc
xlat
rcll
sarl
push
pusha
xor
xchg
leave
leave
xchg
mov
jae
stc
push
scas
loopne
dec
scas
out
ret
icebp
and
jle
sahf
xchg
in
stc
repz
and
and
and
icebp
inc
shlb
out
or
daa
dec
jbe
mov
xchg
out
jmp
leave
push
fsubp
lods
and
movsb
sbb
mov
push
cli
mov
sbbb
adc
mov
jp
hlt
cmpsl
out
fdivrl
sub
and
xorb
or
insl
push
js
das
mov
call
lods
and
das
outsb
sbbl
xchg
push
out
cmp
loope
push
jns
ret
lcall
inc
int
xor
cwtl
inc
out
icebp
xor
leave
loope
ja
cwtl
xor
push
in
lahf
push
aas
add
lea
scas
das
les
mov
sub
in
lret
out
mov
mulb
ljmp
sub
sub
in
mov
in
cltd
rcl
mov
inc
or
movd
mov
add
test
lds
push
iret
decl
jg
dec
out
fiadds
pop
subb
jmp
rclb
push
pop
pop
idivb
lcall
adcb
fdivrl
scas
and
cmp
dec
add
jb
xlat
push
mov
xlat
int3
sbb
xor
sub
mov
ret
sahf
mov
pop
dec
cli
in
je
cmp
ss
test
fmuls
jns
cli
push
aaa
and
or
jns
cmp
lods
mov
inc
sarb
je
or
sub
adc
repz
push
in
mov
leave
dec
mov
divl
cmp
lcall
adc
xchg
imul
outsl
in
bound
push
xor
adc
xchg
pop
push
add
cmp
sub
inc
mov
or
decl
fsubrs
lock
adc
fmul
rcl
mov
mov
neg
es
inc
jmp
jl
jle
je
mov
jmp
cltd
push
insb
adc
jp
cmpsl
or
adc
jo
movsb
arpl
mov
xor
add
jl
push
call
into
mov
fwait
jg
lret
rorb
adc
outsb
sbbl
jbe
out
push
mov
out
pop
adc
lret
adc
pop
adc
ret
xchg
fs
adc
xor
test
fadds
xor
mov
dec
inc
mov
aaa
xor
aaa
jne
sub
sahf
dec
pop
fwait
inc
stos
mov
jnp
inc
cmp
push
and
pop
sbb
aad
mov
inc
adc
repz
int3
in
dec
adc
pushl
jbe
pop
pop
fiadds
cmp
pop
cmpl
imul
cltd
dec
xchg
test
mov
mov
xorb
aaa
and
mov
test
jg
add
mov
jecxz
adc
sbb
cmp
mov
test
lcall
xchg
mov
jo
dec
adc
mov
xor
push
cmp
mov
xlat
and
pop
dec
mov
addr16
push
test
and
adc
jmp
push
stc
mov
dec
imul
jbe
pop
pop
int
loopne
mov
xchg
jno
xchg
test
out
sub
push
push
xchg
and
pop
jmp
cmpsl
repz
and
mov
data16
xchg
cli
pop
insl
and
enter
enter
pop
cmc
sbb
cmpsb
aas
je
loop
daa
shll
cwtl
sbb
decb
xchg
jne
jg
xor
in
cmc
adcb
arpl
inc
mov
inc
imul
push
les
mov
inc
dec
ret
ret
mov
lret
outsl
dec
cltd
push
jl
sahf
or
in
scas
or
imul
sbb
jl
xchg
or
test
mov
loop
mov
push
sub
negb
fidivrl
shll
jae
ret
lea
mov
and
mov
xor
mov
aaa
dec
stos
js
push
cmp
mov
arpl
pop
leave
hlt
or
test
or
mov
sbbl
stos
push
shll
shrb
fxch
cmp
iret
xchg
xor
and
and
xchg
push
lds
push
ljmp
and
jge
push
mov
cld
push
mov
bound
cs
pushf
adc
aad
lods
cmp
dec
add
xor
pop
mov
shrb
push
xchg
xchg
jl
cmp
or
push
sub
cwtl
test
inc
xchg
ss
movsb
mov
dec
mov
call
xchg
mov
cmpsl
es
push
scas
mov
dec
xor
and
fnsave
cli
add
add
sarb
out
inc
pop
pop
aam
push
fwait
lods
ja
lret
xchg
jle
fstpt
mov
popa
jmp
outsl
jmp
call
sahf
nop
adc
push
mov
lret
xchg
pop
mov
push
mov
lods
adc
paddusw
ljmp
sub
test
mov
shlb
xor
xchg
jmp
out
lahf
in
fisubl
mov
bound
insb
int3
stos
cmp
jmp
ffreep
lock
cmp
cmp
cmpl
dec
out
mov
add
inc
mov
out
add
addb
mov
dec
cmp
mov
add
inc
enter
inc
mov
cmp
xor
in
sbb
pop
lret
shr
add
enter
imul
sub
adc
mov
pop
in
and
ret
cmpsb
mov
mov
test
sahf
repz
fldlg2
sbb
notb
popf
add
xor
cmp
and
icebp
jecxz
test
dec
add
push
cmp
xchg
and
adc
mov
lahf
mov
pop
pop
mov
mov
out
mov
dec
xchg
push
cmp
call
dec
js
pop
push
pop
fildll
add
fstl
push
std
adc
ficompl
mov
or
aad
shrd
mov
push
insl
imul
fiadds
or
repz
jb
arpl
mov
jns
mov
push
push
inc
sub
cmp
mov
mov
push
ror
mov
mov
rcl
cmpsb
je
mov
mov
inc
test
mov
adc
cmp
fadd
int
mov
jg
lret
inc
pusha
cs
mov
sub
cmp
cmp
add
sbb
sbb
sub
repnz
out
xor
insl
adc
sub
call
xor
cltd
outsb
adc
pop
xor
pop
es
out
add
jns
repnz
insl
test
pop
pushf
pop
enter
mov
iret
jle
aad
cmp
shrl
mov
jp
test
out
je
push
push
sbb
mov
movsb
xor
int
cmp
mov
scas
pop
mov
or
add
lock
fistps
adcb
psraw
pop
andb
xor
sahf
scas
arpl
enter
xor
xor
cld
push
call
xchg
outsl
xor
push
pushf
sub
jne
lds
aaa
ret
popf
xchg
cmpsb
inc
mov
pushf
mov
sbb
sub
jae
cmp
aas
push
pop
loopne
lods
jmp
std
jnp
std
push
loop
rcrl
fsubrs
scas
pop
adc
leave
mov
fisubrl
stos
jno
rolb
jbe
rcrl
jp
fmull
sub
sub
dec
mov
jne
inc
inc
js
push
cmp
ljmp
out
divl
in
std
out
pop
xchg
imul
add
js
xorl
ja
int3
mov
pop
and
adc
imul
mov
lahf
stc
or
sbb
add
call
popf
adc
rcll
mov
les
xor
loopne
stos
mov
std
nop
jo
dec
push
mov
sub
in
rol
aas
dec
mov
mov
inc
scas
xchg
hlt
or
imul
mov
cmc
das
jno
mov
inc
sbb
rorl
std
mov
repz
aas
shl
jo
push
imul
loop
repnz
mov
mov
mov
dec
push
xchg
pusha
push
mov
dec
xchg
out
decb
imul
sbb
mov
data16
hlt
xor
sbb
ret
pop
push
fcomps
adc
jae
sub
push
mov
scas
clc
xorl
nop
sbb
mov
push
ljmp
popa
cmp
outsl
mov
out
add
in
loop
mov
push
mov
fstps
dec
cmp
cmc
mov
leave
xchg
cmp
push
arpl
ret
xor
jno
sbb
push
mov
loope
popf
pop
sub
loope
cli
cmp
stos
leave
push
pop
add
cli
and
mov
sbb
add
sbb
int3
orl
mov
lahf
xor
fs
and
xlat
and
cltd
mov
inc
pop
fwait
loopne
faddl
clc
xchg
or
leave
outsl
inc
dec
xor
ds
xchg
fsubs
inc
add
fistl
or
or
test
aaa
enter
rcrl
pop
dec
into
jno
mov
int
popf
pop
jmp
xchg
cmc
out
cmpsl
adc
lcall
mov
dec
push
xchg
push
and
xlat
cmp
xchg
mov
inc
adc
mov
lods
or
test
test
dec
jno
sarb
jecxz
push
cmpsl
fisubs
lahf
and
insb
mov
push
jge
cmpsb
jl
mov
mov
dec
mov
and
xchg
and
aam
mov
enter
clc
push
sahf
call
mov
push
clc
loop
push
test
scas
lret
cmpsl
sub
aad
dec
cld
cmpsb
sub
test
jmp
sbb
add
mov
push
cmp
negb
sbbb
jae
dec
test
mov
call
mov
insl
push
aas
add
inc
clc
test
stos
sti
repnz
push
shlb
mov
jmp
mov
test
js
fscale
loopne
lock
and
movsl
std
hlt
add
fnstsw
sbb
test
out
fisttpl
add
loope
lea
push
mov
int
push
out
pop
test
push
jecxz
adc
inc
mov
test
mov
hlt
repnz
sbbb
sbb
daa
ss
xor
outsb
cmove
mov
lahf
jae
push
enter
rorl
jo
cmpsb
ret
dec
fldcw
pop
pop
sbb
and
and
daa
cs
into
rol
in
add
jge
leave
jno
sbb
test
adc
push
xchg
mov
xor
ja
aad
sub
xchg
out
or
test
pop
xor
out
shlb
lods
pop
cmp
xchg
xor
data16
movsl
insl
dec
jo
cld
xchg
popf
or
cmp
lds
scas
aas
std
pop
and
inc
ret
mov
mov
test
jnp
adc
xchg
xchg
dec
push
pop
push
add
push
sbb
mov
push
punpckhdq
xor
pop
adc
mov
fildll
sub
add
fsub
pop
mov
inc
cltd
outsl
inc
pop
data16
arpl
mov
or
pop
cmp
testl
pop
std
mov
push
adc
repz
inc
movsl
jmp
std
int3
data16
nop
fwait
cmp
js
je
inc
pusha
add
push
mov
out
push
xor
jl
mov
loopne
iret
sbb
sbb
ljmp
out
call
pop
test
sub
in
ret
scas
cmp
push
sub
cld
movsb
loopne
pop
dec
cwtl
xlat
js
or
mov
cmp
sub
push
aad
lds
cwtl
addr16
in
push
cmp
mov
sbb
pop
loop
stos
sub
xchg
push
push
adc
fimuls
add
dec
xchg
daa
cmp
loopnew
add
out
mov
ret
xor
fwait
ss
test
sbb
mov
dec
cmp
fwait
nop
mov
jno
movsb
jle
stos
fbld
test
data16
jno
setle
jne
mov
in
sbb
or
xor
sub
ret
sub
push
push
jecxz
loopne
inc
xchg
lahf
mov
inc
mov
push
mov
pop
flds
add
or
dec
in
inc
and
in
add
and
xchg
mov
ds
or
sbb
fneni(8087
ja
in
mov
lods
jbe
mov
xchg
jl
inc
pop
imul
je
outsl
js
gs
push
std
sub
push
cwtl
jmp
pop
mov
jecxz
ds
push
jp,pn
xor
daa
xchg
push
lea
mov
ljmp
push
sub
push
push
xchg
movsl
imul
xchg
mov
mov
lret
orb
sbb
stc
push
cmp
imul
je
xor
cmc
inc
pushf
fs
test
push
add
add
and
ret
aaa
cs
adc
mov
jle
sub
jle
fwait
jo
pop
fwait
nop/reserved
ret
add
movsb
mov
xor
xchg
fs
imul
adc
repnz
adc
hlt
adc
push
lds
or
popa
std
rcrl
fsub
sub
sub
pop
loopnew
mov
std
and
adc
shlb
xchg
je
lods
shrl
cmpsl
fbstp
scas
or
out
lcall
pop
mov
rclb
push
pop
mov
addb
sbb
cld
rdtsc
adc
jae
loope
ret
sbb
cld
cmp
repz
pushf
scas
outsl
fwait
inc
daa
repnz
sbb
pusha
inc
cli
mov
sbb
aad
and
rcr
mov
cld
xor
inc
shr
cmp
push
cs
test
or
outsb
lcall
into
out
mov
lods
add
pop
lret
xchg
js
int
dec
rcr
sub
adc
adc
add
or
ret
aad
adc
push
je
scas
jb
shlb
dec
out
scas
xchg
mov
sub
scas
jmp
xlat
sbb
jne
fstl
xor
mov
adc
sahf
xchg
inc
ror
mov
push
adc
cmp
aas
mov
aad
sbb
sub
xor
hlt
shlb
mov
cwtl
jmp
sbb
jmp
enter
xor
stos
xchg
or
and
cld
cmp
inc
add
add
inc
ljmp
decl
cmpsb
or
arpl
cmp
push
insl
sbb
jl
adc
jno
fimull
xor
inc
sub
xor
insl
pusha
clc
in
sbb
mov
sbb
and
lods
scas
cs
aad
and
bound
inc
lods
add
ja
adc
imul
imul
pop
std
pop
mov
mov
sub
push
sub
out
sbb
test
das
rolb
jp
jo
aaa
cmp
lcall
push
cmpsl
lods
jo
fdivs
mov
pushf
or
cmp
loope
cmp
imul
and
cli
lret
roll
testb
repnz
jl
dec
into
int3
cmpsb
mov
pop
pop
mov
pop
je
rorl
cmpsb
sbb
fwait
pop
sbb
or
sub
cltd
xor
sub
push
add
sub
mov
and
ds
xchg
or
xchg
mov
or
inc
pop
cmp
jnp
or
xlat
and
insb
ja
ret
inc
popf
ss
flds
mov
cmpl
push
imulb
push
jmp
mov
jbe
mov
cmc
mov
push
jbe
jbe
stc
lock
shll
roll
dec
xor
test
dec
mov
fcoml
into
sbb
mov
jno
bound
mov
xor
mov
out
incl
sarl
sbb
cli
je
xchg
call
xchg
pop
icebp
aaa
xchg
mov
xchg
out
pop
adc
repz
push
jl
pop
push
leave
fs
insl
adc
xor
sarb
fildl
movsl
xchg
dec
loopne
loop
cmp
cmpsb
mov
or
imull
outsl
and
mov
dec
mov
into
and
xor
ljmp
sti
mov
orl
cmp
pushf
pop
popf
es
pusha
dec
imul
clc
ss
sub
cmc
stos
out
bndstx
not
testl
and
jns
pop
mov
sub
pop
pop
jecxz
sub
pop
cmc
push
js
fistpll
in
or
jae
ret
push
fildl
xchg
cmp
mov
test
imul
xchg
outsl
sub
sub
insl
jmp
scas
sbb
or
xor
scas
fsubrl
mov
pop
fcmovb
roll
jo
scas
xchg
fidivrl
test
jae
mov
in
rorl
jecxz
pop
push
jp
int3
or
mov
xlat
cltd
clc
mov
inc
repz
sub
js
outsl
and
dec
or
sub
inc
pop
xchg
jo
cs
cld
xcrypt-ecb
cmpsl
dec
stos
push
dec
clc
ds
lret
scas
jle
push
adc
push
push
xchg
jl
add
cwtl
fwait
cmp
call
inc
rcrb
mov
push
mov
push
movsl
inc
push
stos
rolb
mov
pop
int
fstpt
ss
stc
sub
inc
repz
sarb
jne
js
fldt
lods
insb
push
adcl
or
js
cmp
pop
xor
pop
inc
pop
negl
pop
jbe
les
adc
rol
out
pop
ds
or
movsl
shlb
lock
dec
jbe
push
lods
in
and
push
pushf
subb
xor
inc
push
sub
pushf
inc
fs
and
jmp
xchg
pop
fidivs
and
out
pop
scas
sub
inc
xchg
lcall
xchg
dec
pop
adc
push
shll
mov
pushf
xor
sub
lret
lds
subb
add
lahf
out
das
pop
rclb
mov
dec
movsl
in
xchg
int3
scas
and
jb
pop
mov
stc
ret
out
or
or
push
sbb
jl
mov
js
add
std
pushf
inc
add
int3
mov
or
push
jle
push
dec
adc
fcoml
lods
faddl
inc
in
push
add
push
andb
xor
addr16
insb
mov
dec
test
arpl
scas
decb
xchg
lcall
pushf
mov
fcmovne
jb
push
xchg
xor
pop
andb
sbb
jne
dec
mov
lock
cwtl
mov
xchg
mov
rcrl
cli
sbb
inc
sbb
aam
sbb
fidivs
pop
cmpsb
mov
or
adc
loope
push
jmp
cmpsb
adc
loop
mov
jnp
jb
outsb
fistpll
lods
call
insb
and
jp
mov
repnz
lret
mov
out
cmp
sbbl
cmp
ljmp
push
leave
das
adcb
stos
int
or
in
adc
lret
xor
jnp
dec
mov
cld
fwait
enter
loopne
pop
rcrl
cwtl
pop
pop
xor
lahf
bound
jmp
pop
mov
push
mov
xchg
aad
dec
icebp
sar
rcll
mov
jno
mov
out
mov
and
pop
call
jmp
pop
mov
mov
xor
push
test
pop
add
jbe
fldenv
xchg
mov
pop
jle
sub
cwtl
and
enter
xchg
fiaddl
dec
das
and
push
std
les
mov
cmpsb
dec
mov
xchg
movb
jmp
mov
jb
adc
add
push
xchg
icebp
scas
stos
xchg
cmp
or
pop
dec
in
adc
fidivs
out
notb
jg
lret
push
lret
outsl
ret
ret
stc
clc
adc
xchg
out
std
enter
bound
aas
sbb
inc
movsb
cmp
jmp
mov
adc
inc
into
inc
test
cmp
add
pop
negb
dec
pop
rclb
ret
cld
inc
xlat
arpl
push
sub
xchg
insb
mov
ds
lahf
mov
mov
in
mov
ss
pushf
cld
test
dec
adc
push
insl
push
push
pop
cmp
lods
inc
lret
push
adcb
sti
leave
lods
push
or
shrl
adc
push
ret
mov
popf
xchg
fstps
cmp
push
cwtl
mov
mov
stc
jp
lods
inc
adc
fcompp
ds
xchg
mov
adc
in
xchg
add
cli
loope
outsb
pop
and
adc
ss
and
cmp
lea
test
pop
rcrb
jg
add
outsb
outsl
in
jmp
inc
mov
mov
popa
ds
push
xchg
lods
cmc
je
das
cmpsl
stos
push
xchg
shr
stc
dec
or
popa
push
sub
push
cmpsb
movb
push
add
popf
pop
dec
fisubl
test
sub
pop
pop
pop
repz
cwtl
inc
pop
adc
ror
lods
and
pop
and
mov
cs
xchg
sub
stos
lret
shrl
pop
mov
iret
popl
or
bnd
out
xor
sbb
gs
insl
dec
and
xlat
add
loopne
or
jle
les
mov
ljmp
mov
ret
sahf
add
jb
pop
add
pop
inc
xchg
jae
inc
pop
mov
into
fimuls
loopne
pop
and
or
enter
popa
ljmp
inc
adc
outsl
imul
shll
out
mov
adc
add
aas
jp
pop
mov
outsl
jb
xchg
push
and
pushf
fwait
add
pop
addr16
roll
cmp
into
ljmp
sub
mov
push
repnz
push
sbb
add
xchg
cltd
mov
jo
mov
jae
xbegin
inc
repz
mov
fidivs
dec
mov
xchg
negb
or
cmp
cli
sbb
and
pop
dec
cmp
cmp
cli
imull
xchg
or
sarl
into
inc
ja
stos
and
nop
movsb
loop
inc
adc
aas
ljmp
mov
and
add
js
mov
scas
jle
shrb
sbb
fmuls
clc
ficomps
xchg
and
daa
cmp
sbb
jecxz
test
icebp
pushf
out
mov
cmp
ficoml
pop
cmp
inc
daa
aas
and
lods
scas
adc
iret
sub
ja
jge
add
inc
aad
adc
test
leave
dec
cmpsb
in
mov
insl
push
repnz
push
int3
cmc
cmpsl
mov
add
or
inc
and
lods
mov
sar
push
push
and
add
cltd
and
pop
test
dec
xor
pop
sub
jbe
fstl
pop
pusha
jg
pop
stos
ficoml
mov
mov
sbb
insb
or
jnp
mov
push
adc
in
insb
shrl
insl
push
rclb
sub
mov
inc
enter
mov
fldcw
mov
xchg
xor
aam
rep
jno
mov
xor
inc
sub
imul
push
rcll
dec
cmpsb
daa
xor
xchg
mov
inc
pop
in
push
add
les
jbe
add
imulb
rcll
mov
movsb
out
sub
ror
fs
cwtl
cmp
jbe
aas
sub
pop
jg
mov
cmp
aas
fldcw
push
xor
mov
mov
mov
subb
sbb
inc
orb
dec
mov
bound
xchg
pop
aaa
push
call
fs
cld
xchg
adc
pop
repz
ffree
outsb
mov
push
insl
xchg
mov
inc
ljmp
push
xor
xchg
push
or
push
sbb
movsl
sub
jne
xor
dec
loopne
push
lods
xor
mov
and
lock
out
mov
sbb
xor
dec
mov
jl
and
rcrb
das
inc
data16
sub
adc
nop
mov
xlat
cld
test
repnz
ror
les
loop
or
adc
sti
xchg
aas
rcll
dec
pop
fdivrl
outsb
sub
cmp
negl
lods
gs
dec
hlt
push
push
and
insl
dec
pop
ficoms
ja
mov
jmp
jmp
push
pusha
inc
and
iret
iret
cmp
adc
xchg
jmp
inc
cmp
popa
add
dec
xchg
mov
inc
mov
js
fidivs
orl
xor
adc
in
cwtl
arpl
pop
repz
cmp
clc
jbe
mov
loope
or
xor
fsubs
cwtl
insl
test
and
jnp
aas
jg
sub
ret
push
sbb
xchg
out
loope
xor
aam
aas
popa
inc
stos
xor
aam
cli
int3
mov
clc
dec
lea
outsl
and
xor
mov
sarl
pop
test
mov
ret
inc
xor
cmpb
pop
test
and
mov
add
or
push
mov
push
push
aad
inc
decb
cmpsl
imul
mov
jnp
lock
jo
or
add
je
fdivp
inc
filds
andl
jae
loopne
mov
outsl
pop
icebp
loopne
loope
pushf
push
and
push
shll
add
daa
jae
je
adc
push
mov
adc
dec
xchg
or
and
jne
mov
xchg
ss
imul
sbb
movsb
dec
lret
and
and
push
mov
cmp
in
inc
ja
jae
int
lret
inc
sbb
daa
push
daa
rcll
bound
and
clc
jmp
jle
pop
mov
push
mov
jmp
push
mov
sbb
pop
leave
add
sbb
popa
or
scas
cmp
mov
jecxz
mov
add
push
add
add
cmpsl
je
sbb
hlt
xor
push
test
push
and
lods
insl
fdivrl
pushf
lea
test
fwait
push
fsubrs
sbb
filds
adc
cld
inc
jnp
sti
sbb
leave
jb
ja
dec
pop
movsb
outsb
mov
dec
adc
jb
sub
push
loop
pop
inc
push
stc
popf
push
mov
inc
dec
xor
xchg
push
xchg
adc
test
dec
out
insb
or
ss
insl
sti
jb
xorb
mov
pushl
sub
cmc
add
sub
and
xlat
or
aaa
movsl
loopne
pusha
sub
jl
jnp
fidivl
cld
popf
mov
dec
push
movsb
jge
mulb
jnp
mov
push
xchg
push
sub
dec
int3
adc
fs
sub
xor
jle
sbb
popa
xor
or
scas
pop
aaa
fwait
es
and
es
push
in
sub
jecxz
push
aam
lcall
jno
inc
lahf
lods
lret
jmp
pop
dec
cmp
pop
arpl
mov
sub
xor
ss
ret
cmp
pop
clc
push
hlt
hlt
rolb
clc
inc
sbb
cmp
cli
push
lea
inc
push
or
add
ss
push
cmp
xchg
and
jmp
sub
popf
dec
pop
add
jge
stos
pop
ja
aam
push
sbb
push
xchg
mov
nop
test
cltd
pop
adc
es
icebp
mov
fstps
lock
xor
ret
and
inc
mov
xchg
sbb
in
test
lret
push
and
rcl
pop
test
and
jno
mov
popf
mov
xor
push
or
fstl
push
mov
mov
sub
clc
jecxz
mov
loop
out
dec
lods
in
sbb
mov
je
rcrb
cmpsb
sub
addr16
pop
mov
movsl
pop
cmp
mov
into
iret
shr
test
std
test
iret
fldt
mov
pusha
shlb
mov
xchg
mov
dec
adc
bound
xchg
sahf
cwtl
dec
in
mov
mov
mov
js
fiaddl
lahf
dec
mov
icebp
cmp
push
xlat
ja
xor
push
test
into
dec
ret
jns
inc
stos
insl
mov
pop
pop
fs
fmull
lret
test
das
xor
sub
xor
jae
dec
mov
lods
in
mov
fisttpll
es
mov
aad
and
pop
arpl
cmp
cs
ret
addr16
add
lcall
mov
movsl
or
mov
mov
xchg
sbb
dec
push
test
and
std
idiv
adc
jnp
push
fists
push
das
xchg
dec
je
pop
sub
or
or
xchg
mov
enter
or
lret
movsb
outsb
xlat
cmp
add
aam
enter
test
jle
lock
js
push
jbe
test
popf
sbb
xor
mov
jbe
repnz
sub
cmpsl
cltd
sub
xchg
sub
stc
sarw
xchg
lods
cmp
repnz
test
sbb
int
cmp
daa
or
mov
fistl
sbb
lods
push
dec
lret
jae
sar
out
sub
gs
cmp
lret
jg
sbb
push
stos
push
mov
push
jne
mul
test
imul
jb
insb
out
sub
inc
mov
out
lds
mov
add
inc
popl
and
out
xor
arpl
or
popa
js
cltd
inc
jbe
mov
mov
xor
test
add
adc
je
adcb
addr16
out
pop
cli
mov
testb
cmp
cs
pop
cmp
call
or
push
push
or
fcoml
fisubrs
in
out
movsl
push
sahf
fsubp
xorb
mov
scas
popf
inc
xchg
jp
push
mov
xor
andb
dec
jno
adc
sbbl
pusha
add
movsl
cmpsb
pushl
push
sub
or
cmp
adc
xchg
jbe
ret
jb
mov
pop
xchg
mov
jae
and
int3
test
pop
inc
xchg
es
mov
sahf
imul
mov
adc
mov
cmc
data16
xor
xor
xchg
sbb
mov
or
jp
push
pop
arpl
xchg
hlt
jecxz
call
push
nop
dec
push
repnz
mov
push
mov
or
mov
lock
lock
imul
mov
lahf
inc
es
xor
and
add
test
shll
add
lock
int
sbb
into
cmp
cmpsb
mov
adc
cmpsl
fcmovu
push
dec
out
jg
sbb
push
xchg
ret
jo
hlt
shlb
push
push
and
xchg
out
sub
cmp
sbb
notb
jmp
mov
jl
dec
sub
or
mov
mov
lea
mov
pop
mov
ficomps
jno
js
or
cmp
jbe
xor
sbb
iret
sbb
cmp
dec
andb
movsb
mov
xchg
fldt
jg
push
icebp
int3
push
inc
xchg
inc
jg
mov
inc
and
xchg
push
icebp
xor
outsl
cltd
adc
leave
mov
nop
data16
dec
in
iret
cmp
lods
mov
pop
adc
lods
and
std
add
mov
insl
bound
pop
jbe
sub
divl
adc
outsb
adc
push
sbb
xchg
inc
lcall
fistps
into
push
push
inc
push
xchg
js
add
nop
sub
mov
xor
cwtl
les
pop
outsb
cmp
push
sbb
int3
ret
lock
es
inc
pushf
loopne
jl
pop
in
jg
aad
jno
xlat
rcrb
loop
sbb
ss
fists
jp
in
cmp
sahf
sbb
cmpsl
popa
inc
cli
mov
push
adc
inc
movsb
test
loope
sbb
mov
push
push
leave
insl
mov
pop
mov
int3
or
lret
into
xchg
pop
dec
xchg
data16
mulb
push
sub
fcomip
pop
push
push
jmp
hlt
mov
in
sbb
mov
bsr
fstl
add
mov
std
loop
inc
push
sbb
fmuls
jne
imul
clc
jmp
mov
add
out
mov
adc
mov
sbb
shlb
adc
cmp
in
and
push
sub
inc
cwtl
sarl
fldl
int
sub
xchg
or
sub
xor
out
dec
mov
sbb
sti
inc
out
add
and
aad
movsl
mov
pop
das
push
or
divb
clc
lock
dec
adc
pushf
mov
mov
mov
mov
scas
push
sbb
popw
mov
paddw
mov
mov
dec
xchg
cli
shl
rclb
adc
sbb
xor
bound
lds
out
sahf
lods
xlat
dec
fiadds
imul
jge
add
inc
add
addl
pop
outsl
xor
pop
fs
inc
lock
popa
cli
out
mov
xor
add
sbb
sub
aad
ss
dec
sub
shl
push
pop
les
xchg
lret
icebp
sbb
cwtl
jle
je
lahf
and
shlb
or
adc
xchg
pop
mov
jmp
stos
js
imul
add
mov
loop
popa
rorb
imul
sti
jb
add
jbe
push
loopne
push
mov
adc
xchg
sbb
clc
ljmp
data16
mov
sbb
loopne
mov
icebp
adc
loopne
stos
or
loopne
or
das
add
mov
inc
and
loop
leave
jnp
ja
mov
or
stos
daa
cltd
inc
cli
xchg
test
push
outsl
in
push
add
lods
jmp
cmp
mov
fadd
adc
inc
fidivrs
push
orl
icebp
mov
movsl
clc
int3
mov
fisubs
add
xchg
jb
or
add
lods
push
std
ret
push
sub
mov
xor
fdivl
jecxz
mov
push
pop
leave
punpcklbw
movsl
insl
cmpsl
adc
push
dec
mov
out
sarb
add
faddl
xchg
adc
out
dec
ds
pop
lods
push
mov
aaa
push
lahf
mov
in
fs
mov
mov
jb,pt
pop
je
jp
out
inc
imul
mov
lcall
hlt
mov
dec
std
push
cmc
sti
mov
scas
sbbl
out
mov
out
popa
nop
loop
out
jo
jo
into
out
pop
ret
daa
ret
mov
leave
cmp
add
lcall
in
test
mov
iret
pop
push
inc
jae
dec
mov
mov
xor
imul
xlat
rcll
jne
lods
cmpsl
add
cmc
inc
arpl
in
out
xor
ret
sub
dec
leave
sbb
and
pop
cmp
inc
clc
pop
inc
push
fstps
sbb
or
ds
push
testl
dec
scas
pop
lahf
pmullw
gs
cmp
cmp
jo
inc
mov
and
push
sbb
jle
jg
pop
gs
lods
jmp
push
and
test
cwtl
ud2
pop
mov
jg
sbb
pop
push
dec
inc
je
cmp
sbb
xchg
sbb
mov
push
addr16
rcl
xchg
inc
jmp
dec
out
in
inc
fwait
or
ret
outsl
mov
push
sbbb
xchg
xorl
dec
jmp
mov
cmc
push
sub
cmpsb
setbe
pop
mov
pop
pop
fwait
or
fs
jge
xchg
add
dec
adcl
pop
cli
pop
fdivrp
inc
icebp
inc
repnz
fs
rorb
jge
mov
xor
cli
inc
add
cmp
xchg
sbb
mov
adc
mov
and
mov
rorb
lahf
jp
punpcklbw
xor
or
mov
aaa
mov
cwtl
add
sbb
and
adc
adc
les
mov
xchg
cmp
mov
xchg
test
rclb
mov
jecxz
les
jae
scas
je
in
fs
or
shrb
daa
aam
push
mov
lods
repz
push
cmp
pusha
sbb
dec
testl
mov
push
les
nop
cld
push
notl
push
push
sti
sbb
adc
out
lcallw
add
jns
dec
dec
int
inc
divl
test
out
mov
into
inc
sub
mov
fcmove
jb,pt
mov
jle
ret
and
jae
pop
hlt
dec
aaa
sub
add
mov
lods
insb
add
lock
mov
mov
outsl
mov
xor
test
dec
outsl
fiadds
cmp
inc
stos
addb
out
adc
cmpsl
mov
and
scas
shll
mov
mov
sub
pop
and
movsl
mov
mov
cli
and
push
sbb
adc
dec
cs
leave
imul
ja
adc
mov
and
xor
cli
jecxz
enter
ljmp
aas
pop
and
dec
xchg
cli
fwait
popf
mov
jge
cmp
jecxz
adc
inc
add
fisubs
fidivl
push
mov
adc
sarl
push
mov
fdivr
jge
sbb
shlb
aam
stc
lds
cmpsb
sub
out
inc
js
sub
fxch
cmp
sbb
sti
xchg
lods
addr16
iret
lods
fs
hlt
dec
imul
sti
mov
repz
jbe
testb
and
push
imul
test
sbb
mov
xor
jmp
xchg
popa
push
push
loopne
inc
or
adc
std
ljmp
mov
enter
repz
int3
aam
loopne
pusha
inc
int3
and
jo,pn
jg
adc
sub
jns
mov
xor
cmc
in
lea
push
mov
into
mov
pop
xor
jae
outsb
push
repnz
adc
cltd
add
into
mov
push
cmp
mov
roll
xchg
out
out
jb
fwait
or
cwtl
cmpl
jecxz
pop
inc
pop
mov
adc
pop
mov
popl
lret
cmp
lcall
fucom
jae
xchg
adc
ret
inc
lcall
adcb
mov
mov
xchg
ljmp
inc
cld
pop
mov
push
adc
sbbb
xor
or
cmp
sub
adc
inc
pop
dec
lret
mov
jle
or
xor
mov
orl
jno
mov
jl
add
sub
xor
in
sub
sti
call
mov
cli
inc
mov
inc
inc
repnz
lods
add
push
imul
jge
push
sbb
xor
lods
mov
scas
lahf
push
hlt
cmpl
shlb
pop
push
movsb
or
pop
add
sub
push
push
push
dec
push
pop
and
jmp
dec
call
sahf
cmpl
vrsqrtps
mov
dec
cmpsl
aad
sub
mov
dec
test
jne
dec
sub
lret
inc
daa
mov
addl
pusha
sbb
push
cmpsb
addr16
jb
pop
push
adc
xor
push
nop
mov
and
aas
mov
or
fsubl
sbb
add
add
or
xchg
in
aad
movsl
test
jmp
daa
jmp
movsl
push
or
push
shlb
ror
xchg
sbb
lahf
loop
bound
pushf
test
jl
icebp
mov
pop
cmp
test
jg
ja
mov
cwtl
int3
mov
and
mov
lret
iret
lret
lcall
push
add
lods
stc
mov
aas
addl
xor
xchg
mov
dec
stos
gs
push
ja
aam
in
movzwl
jmp
xchg
sbb
xorb
sbb
sub
and
int3
lea
repz
xor
std
xor
pushf
xchg
scas
mov
ss
inc
push
add
or
dec
jmp
icebp
loop
cwtl
mov
movsb
dec
jle
mov
jae
dec
cmpb
push
hlt
repz
xchg
push
mov
pop
ffree
pop
pop
jb
das
loopne
insl
jl
mov
sti
bound
repnz
mov
lods
and
jnp
mov
mov
jge
push
repnz
aad
jecxz
pusha
test
and
fldenv
stos
or
cmp
mov
andl
rorb
sbb
or
mov
orl
aaa
filds
pop
cmp
mov
test
sbb
or
sbb
cltd
mov
push
and
jb
lods
call
push
sbb
fs
in
fwait
ret
cmp
shll
imul
mov
scas
insl
adc
jge
dec
js
leave
mov
mov
and
jns
not
inc
lahf
and
sub
enter
mov
mov
inc
mov
or
hlt
dec
rcrl
popa
scas
pop
or
fisubs
sbb
inc
jmp
dec
mov
xchg
jp
xchg
imul
jmp
cmpsb
ret
lret
call
inc
xchg
adc
test
cmp
pop
das
mov
mov
sbb
enter
lret
cli
sub
ljmp
push
test
ret
pusha
loope
xlat
sub
into
das
pop
jb
add
pop
xchg
lret
jg
cmpsl
mov
mov
insb
lcall
movsb
xor
imul
inc
sbb
sub
repnz
popf
scas
mov
cmp
scas
cmpb
jns
add
icebp
cmp
pop
push
out
adc
fimull
dec
pop
daa
sub
or
fdivl
adc
xor
push
pop
mov
jae
pop
shll
xchg
fisubs
icebp
adc
daa
je
divb
adc
sub
stc
lea
rcl
in
or
mov
cwtl
xor
inc
sahf
push
adc
mov
fs
pusha
pusha
in
test
lods
cmp
scas
push
jle
push
xor
int
pop
cmp
mov
sub
ss
pop
pop
cmp
jl
mov
gs
cld
cmpb
pop
jmp
xchg
rorl
xchg
adc
loopne
inc
ds
mov
xor
fisubrs
mov
mov
fwait
lds
scas
dec
rorb
dec
xchg
dec
lcall
cmp
jb
nop
cmp
es
lods
fimull
mov
cwtl
movsb
or
and
pop
loope
mov
dec
and
cmpsb
jge
mov
cmc
xchg
dec
add
call
shl
call
sub
idivl
sub
decb
mov
lret
pop
sub
and
out
les
dec
sti
sbb
mov
outsl
imul
out
dec
adcl
test
adc
inc
push
and
in
xor
imul
and
mov
test
sub
addl
cmp
cmpsl
repnz
testb
and
push
lea
xor
jp
cld
add
or
cmp
mov
pop
das
pop
pop
mov
mov
mov
scas
leave
fidivl
cwtl
insb
add
jecxz
scas
mulb
sti
push
sub
inc
inc
lods
clc
mov
mov
and
sub
push
mov
repnz
mov
jb
lcall
hlt
ja
lcall
dec
and
mov
outsl
ficoml
push
pop
pop
int3
mov
ds
add
mov
jno
pop
inc
ljmp
loope
jl
ds
or
lods
out
std
clc
adc
push
ficoml
push
xchg
call
scas
or
or
sub
or
mov
fwait
cmc
cmpsl
or
mov
cltd
rcll
in
jmp
sbb
fs
adc
ret
outsl
int3
sbb
and
loope
ficoms
mov
mov
out
movsb
gs
movsb
inc
call
addr16
rcrl
stos
add
add
push
scas
cmp
xchg
fisubrl
popf
imulb
inc
fwait
add
stos
xchg
pop
mov
cmpsb
mov
inc
jno
and
and
jns
sbbb
hlt
into
lahf
add
pusha
inc
jae
js
lods
or
cmc
mov
cltd
shlb
shlb
pop
jp
push
inc
popa
push
or
pop
cmpsb
add
enter
pop
in
ljmp
xchg
mov
lds
mov
mov
inc
or
sub
icebp
mov
xor
fldcw
lahf
aam
sub
inc
mov
js
cs
sahf
ja
jecxz
or
xlat
pushf
pop
sub
ret
push
dec
cmp
pusha
cmp
cmpsb
testl
ss
addr16
ds
cmpsb
push
testb
test
or
movsb
rcr
lret
cmp
lods
push
cmc
sub
ficomps
scas
cmp
mov
in
xchg
shl
push
xchg
pop
int
adc
daa
and
inc
xchg
int
sbb
rcll
cs
cld
push
pop
fnstsw
cmc
fimuls
ret
and
icebp
inc
out
mov
mov
and
aas
jmp
push
cmp
mov
insb
outsb
scas
loopne
xchg
cltd
andb
rclb
xor
in
repnz
dec
ja
arpl
xor
fisttps
sbb
inc
push
into
and
inc
imul
data16
loope
imul
adc
stc
pop
aaa
xchg
pop
data16
mov
ds
mov
xchg
outsl
lret
stos
lret
adc
ss
pop
rorb
push
push
cmp
dec
mov
sahf
push
test
shll
and
cld
pop
push
xchg
inc
insb
pop
repnz
inc
fistps
lret
mov
xchg
sbb
xchg
lock
mov
and
lret
call
jecxz
int3
inc
jns
push
jmp
fs
adc
dec
and
jb
or
jmp
xchg
jge
fisubrl
fbld
hlt
mov
loop
push
sbb
xchg
cs
add
xchg
gs
jo
arpl
leave
jmp
and
sub
mov
mov
push
jbe
adc
movl
and
andl
mov
pop
adc
dec
pop
pandn
bound
fwait
pusha
jo
aas
dec
out
pop
movsl
sub
inc
pusha
mov
frstor
or
add
je
int3
movsb
add
push
cwtl
add
mov
loop
cs
std
out
dec
xor
int
mov
clc
and
or
mov
dec
xor
cmp
and
pop
pop
into
inc
lods
pushl
push
fmuls
jmp
scas
daa
lea
ljmp
sbb
ret
pop
dec
add
mov
push
insl
sub
push
xchg
fnsave
ds
icebp
mov
test
mov
roll
push
push
sub
lods
sbb
lret
push
arpl
jle
xchg
push
addr16
dec
jns
stos
add
cmpsl
dec
and
repz
or
ljmp
insl
scas
lret
jge
inc
rorl
mov
mov
test
jge
dec
jecxz
es
addb
into
sbb
cmpsb
or
scas
rolb
pop
xor
aad
and
xor
stos
mov
push
jmp
mov
stc
leave
dec
rcr
mov
adc
mov
aam
in
jl
mov
sub
arpl
sahf
imul
add
mov
xlat
add
dec
std
lahf
add
int3
xchg
jl
pop
mov
fists
sub
ret
test
mov
add
arpl
and
add
addb
rclb
int3
arpl
mov
movsb
pop
xor
sub
xlat
sahf
enter
popf
jp
mov
add
push
mov
mov
xchg
sarl
pusha
enter
push
andl
idivb
mov
arpl
orl
rcrl
sbb
sub
xor
xlat
lret
jns
cmp
int3
pop
pop
mov
inc
pusha
call
ret
mov
inc
jnp
aaa
xchg
xor
mov
and
out
cwtl
aaa
gs
push
push
pusha
jg
imul
xor
sar
sub
pusha
movsl
scas
cmpb
and
xor
pop
shll
jle
jne
repnz
mov
cmpsb
jg
dec
negl
repnz
cwtl
cs
mov
inc
or
xchg
dec
xor
and
jne
lds
roll
xchg
adc
out
fildl
pop
sarb
jmp
arpl
ret
pop
inc
mov
test
ljmp
fsubl
jne
or
cmp
daa
push
js
or
imul
mov
pop
jb
test
add
lret
add
dec
repz
cmp
cmpsb
daa
adc
subb
and
int3
imul
push
sbbl
cmp
mov
gs
mov
repnz
xchg
or
add
fidivs
sahf
mov
mov
shrb
cmp
push
inc
testl
mov
dec
stc
inc
xchg
imul
and
dec
adc
call
dec
out
jno
bound
jns
sti
mov
dec
stos
popf
adc
inc
inc
adc
mov
cwtl
aaa
divb
inc
and
push
lret
hlt
sbb
pop
icebp
loope
sbb
push
jg
ficomps
cmp
call
cs
pop
xchg
sbb
mov
mov
fwait
add
pop
je
int3
pusha
inc
or
jmp
loop
popa
adc
lea
repnz
leave
mov
fildl
out
sahf
movsb
pop
sbb
mov
cmp
aam
popf
mov
xor
std
in
mov
xchg
push
les
adcl
ret
je
insl
push
sbb
rol
mov
add
and
shll
stos
mov
xor
mov
sub
mov
enter
add
jbe
inc
decl
mov
push
enter
lret
cs
sbb
sti
in
repz
or
inc
int3
jno
jge
xor
mov
and
aad
mov
arpl
aam
add
mov
sub
aaa
adc
sub
inc
les
fnstenv
xlat
loop
data16
lds
push
xchg
xchg
mov
pop
scas
mov
cs
jae
dec
lods
mov
mov
inc
rorl
les
std
jp
lods
pop
or
leave
rorl
cltd
hlt
pop
fisttps
arpl
data16
xchg
dec
xor
outsb
cld
sbb
cmpsl
pop
mov
jecxz
sub
gs
mov
pop
test
dec
movsb
das
sahf
add
xchg
and
and
sbbl
or
jl
mov
add
cmp
fiaddl
xor
xchg
out
jge
xor
lahf
mov
push
mov
inc
xor
push
aam
add
sbb
hlt
cmc
mov
sarl
xchg
jbe
movsb
stos
cld
mov
out
sub
in
mov
daa
mov
shl
mov
cmpsl
push
fnstsw
cwtl
in
sbb
sub
mov
in
inc
icebp
xor
cmp
insl
adc
shlb
mov
int3
outsl
jg
sbb
in
mov
add
fidivrl
imull
notl
jne
test
cmp
inc
pop
dec
sbbb
out
in
fcmovnb
jl
push
and
dec
pop
jle
and
lfs
inc
cltd
pop
jae
push
lcall
and
scas
das
sub
ljmp
dec
test
es
into
or
push
cmp
fcomip
mov
aam
push
inc
imull
inc
push
jge
cmpsb
pushf
jno
int3
push
xchg
sar
mov
hlt
jmp
jmp
pop
loopne
and
arpl
jno
js
jge
sub
adc
jae
inc
xchg
inc
cmp
lods
adc
pop
xorb
call
xlat
xchg
dec
fmuls
in
pop
sub
pusha
dec
or
and
push
push
enter
mov
inc
or
pusha
sbb
scas
sbb
push
pop
jg
and
popf
jge
lds
fisttpl
mov
xchg
add
das
les
xorb
mov
and
cli
mov
dec
pop
or
jno
outsb
sub
or
and
xchg
pop
xchg
jo
mov
jo
pop
adc
adcb
into
jne
lcall
jb
jne
iret
sub
stos
ret
xchg
cmp
sub
push
mov
and
add
test
dec
pop
inc
adc
mov
fstl
dec
enter
test
push
jbe
add
jbe
jno
and
jbe
in
xchg
xlat
cmp
ss
aad
ret
sarb
mov
leave
jae
cmp
pop
pop
out
and
ljmp
inc
fwait
dec
movsl
mov
cltd
mov
jle
std
call
mov
imul
fbstp
dec
xor
push
push
je
data16
sub
inc
adc
ss
mov
mov
inc
jl
incl
cmp
pop
sbb
add
add
cli
cs
ret
cmp
or
adc
adc
cmp
stos
sbbb
jnp
ficoml
add
icebp
dec
scas
lock
xchg
adc
pop
std
xchg
aas
loopne
pushf
jp
loop
jmp
lahf
push
out
xchg
mov
pop
rcrb
cmp
aad
pop
dec
jb
xor
repnz
cltd
mov
mov
or
int3
sub
cmp
jo
xchg
repnz
jge
or
push
jne
inc
mov
inc
xor
repz
pusha
or
xor
jg
sub
add
sbbl
or
dec
pop
push
ss
push
insb
or
push
in
rsm
mov
aas
pop
shll
sbb
cmpsb
mov
sbb
mov
adc
cmp
pop
sbb
hlt
aaa
jns
pop
push
pop
test
loop
mov
ljmp
xchg
sub
inc
test
pop
hlt
pop
inc
jnp
sti
out
bound
pop
push
scas
mov
pop
jae
jno
dec
pushf
add
data16
jbe
lods
insb
mov
inc
jne
pop
mov
xchg
cmp
in
ficomps
sti
imul
rcrl
out
or
or
ret
ljmp
pop
inc
xchg
test
popf
push
sbb
add
fbstp
nop
pushf
dec
jbe
popa
sahf
in
test
inc
fs
sbb
mov
jp
outsb
jae
push
jmp
mov
sbb
and
daa
enter
push
in
cmp
test
and
das
cmp
add
call
sub
inc
add
aas
and
mov
jecxz
pop
xchg
addr16
sbb
nop
out
pushf
into
or
mov
jle
sbb
faddl
push
sbb
pop
push
lret
ficompl
mov
pop
pop
cli
addb
cmp
dec
jle
loope
lods
jl
ret
out
hlt
mov
mov
pop
fsubrl
std
pop
shr
add
in
and
adc
imul
jp
jb
addr16
dec
ret
scas
cld
and
xor
dec
mov
mov
push
ss
xchg
add
adc
and
dec
hlt
and
aad
loopne
ljmp
lock
aas
lret
pop
sarb
mov
pop
pop
push
out
out
push
xchg
mov
dec
and
scas
lret
push
or
loop
rcll
cltd
mov
stc
sub
outsl
outsl
bsr
add
inc
push
adc
xchg
int
pop
loope
aam
call
sbb
push
mov
data16
add
xchg
jb
sahf
cmp
scas
enter
xor
pop
fnstsw
repz
jae
and
sub
xchg
cmp
add
push
mov
xchg
inc
das
pop
xor
lods
ret
mov
jns
jl
pusha
dec
imul
mov
ja
pop
ret
shll
jno
mov
mov
sub
mov
ss
sbb
mov
push
push
mov
or
jbe
ss
mov
dec
jno
xor
loope
lock
ja
and
mov
xchg
jg
sub
aad
sbb
call
pusha
push
mull
fucomip
xchg
bound
or
and
fwait
push
pop
pop
adc
sbbl
fdivrl
bnd
xchg
popa
push
das
xchg
xor
imul
lock
push
das
inc
inc
fcmovnu
mov
push
lret
mov
outsb
aaa
stc
mov
enter
and
dec
pop
push
jno
faddl
and
cld
xchg
repz
ljmp
sub
mov
jbe
xor
xor
loop
or
popf
cli
orl
fisttpl
mov
pushf
loopne
pop
jno
movsl
pop
add
in
outsl
inc
fwait
rcl
sub
and
jo
gs
lds
or
jecxz
xchg
dec
std
adcl
xor
mov
popa
arpl
mov
pop
lock
cld
cmp
mov
movsl
imul
adc
iret
lds
loope
scas
popf
xchg
cltd
adc
fcom
insl
sub
scas
sti
jmp
pop
je
inc
mov
pop
xchg
or
mov
xlat
mov
and
push
test
out
pop
xchg
mov
add
push
into
hlt
jbe
or
daa
adc
testl
pop
xor
mov
push
in
enter
dec
loope
sub
push
mov
fcoms
dec
adc
cpuid
stos
loopne
leave
jno
xor
les
sahf
jb
inc
push
nop
mov
fmuls
fmul
in
movsl
jl
lcall
pop
stos
jo
xor
loopne
cltd
inc
adcl
fidivrs
xchg
xchg
or
das
xorl
xlat
xor
mov
fs
loope
mov
lcall
subb
pop
adc
fldenv
pop
mov
inc
cld
or
pop
or
mov
cmp
stos
icebp
mov
cmpsl
data16
mov
lret
negb
cs
push
mov
dec
fldenv
push
mov
inc
test
popa
outsl
outsl
cltd
adc
and
std
sbb
pusha
pop
pop
mov
inc
fmuls
mov
ds
cmp
rcrb
pop
xchg
mov
cmpsb
push
lahf
loopne
pop
xor
push
pop
js
push
xor
jns
flds
pop
and
mov
lods
loope
or
jmp
dec
hlt
mov
add
daa
pop
jb
fnstcw
pusha
sbb
mov
adc
orl
movsl
fstpl
int
popa
xor
mov
push
addr16
out
sub
ss
cmpsl
mov
scas
orl
loop
and
or
xchg
in
cmp
mov
pop
or
fdivl
aam
mov
xor
adc
cmp
call
mov
popf
pop
aam
jnp
sbb
inc
clc
mov
pusha
rcr
xchg
call
xchg
aad
hlt
icebp
aas
push
test
cmpsl
inc
or
dec
xor
popf
es
scas
mov
jp
and
outsl
add
pop
jnp
sub
pop
sahf
push
cmpl
or
and
xor
sub
sbb
test
xchg
mov
roll
dec
lods
pop
xchg
scas
jno
mov
in
adc
add
dec
pop
lret
mov
pusha
mov
or
cmp
subl
dec
xchg
pop
je
sti
xchg
std
incb
knotb
jecxz
sub
cmp
mov
jnp
popf
sbb
lock
insl
cmpsb
cmpsl
jle
or
inc
sahf
es
lods
push
stos
and
sub
push
mov
mov
inc
movsl
cld
or
inc
mov
add
cmpsb
dec
cmp
test
adc
sbb
cltd
mov
in
pop
icebp
es
lcall
fstpl
out
ja
jle
sub
or
mov
inc
add
int3
in
or
mov
fwait
ljmp
xchg
out
mov
outsl
aas
fdivrl
xor
xor
cltd
aam
das
cs
sbb
xchg
xor
add
lds
es
jae
push
cli
in
jno
out
jecxz
aam
mov
xlat
pushf
push
ss
fisttps
mov
lods
andl
and
or
clc
daa
scas
mov
outsb
jp
mov
mov
xor
mov
pop
clc
lahf
jo
fisttpl
cmp
in
sub
cmp
mov
mov
enter
mov
popf
inc
jg
inc
and
mov
mov
xor
arpl
fstpl
mov
insb
sbb
fsubrs
outsb
adc
out
adc
sub
push
fmuls
shrb
popa
call
gs
dec
fnsave
inc
jge
cld
int3
cmp
xor
push
pop
stos
cmp
aam
jae
rolb
movsb
ds
lcall
and
loop
outsl
lds
into
xlat
enter
pop
jle
fsubs
jmp
inc
aas
in
sbb
dec
stos
cmp
fwait
popf
fcmovnbe
loope
jl
clc
loope
add
testl
sbb
out
out
rorb
sbb
or
sub
mov
rcl
xchg
fsubl
rcll
jp
lret
lods
imul
hlt
ss
sub
loop
fwait
mov
std
lds
dec
lds
xor
js
loopne
stos
push
and
popf
imul
pop
dec
mov
cs
ret
inc
push
lahf
repz
jp
pushf
dec
sbb
jecxz
or
mov
adc
mov
std
divb
cmpsb
sub
and
adc
adc
pop
jns
imul
pop
sar
out
or
dec
jle
pop
popl
lret
arpl
mov
cld
dec
sub
pop
lahf
stos
and
outsl
addl
jecxz
cltd
jne
pop
xor
xlat
dec
mov
shlb
sahf
notb
std
push
inc
xlat
lcall
push
fstpl
dec
xchg
insb
sahf
pop
aad
js
in
mov
notb
cmp
sbb
int
sahf
sub
imul
cmp
xchg
shlb
aas
cli
out
pusha
push
lahf
cwtl
je
xor
aad
sbb
push
xchg
dec
nop
adc
mov
cmc
xor
mov
mov
mov
pop
lds
addb
mov
xor
sbb
dec
xchg
cmpsb
fscale
negb
fcmovu
popa
inc
or
xchg
repnz
jae
test
pop
outsb
mov
iret
mov
lock
bound
xor
repnz
testl
xchg
bound
sbb
je
iret
xor
jp
lds
das
mov
popa
mov
mov
loopne
dec
and
xchg
out
dec
add
movsb
repz
fmul
mov
adc
jns
iret
pop
pop
std
xlat
jmp
loopne
sar
fs
pushf
mov
xchg
fstpt
je
or
icebp
push
out
mov
addr16
mov
scas
cltd
insb
xor
popf
mov
cwtl
xchg
adc
or
sbb
test
mov
jmp
and
mov
es
bound
dec
mov
gs
lret
and
ljmp
or
dec
xchg
mov
jle
inc
mov
adc
mov
and
sub
divl
xchg
mov
repz
push
mov
xlat
mov
or
cwtl
and
clc
cmpsb
nop
mov
mov
dec
jne
xor
sub
xchg
xlat
popf
addr16
push
je
jmp
popf
push
imul
cmp
push
inc
push
xchg
cwtl
xor
pop
dec
push
mov
push
dec
outsl
cmp
jbe
add
inc
and
outsb
dec
in
test
jne
icebp
push
rolb
sbb
xchg
and
mov
sub
out
and
xor
les
bound
testl
movsl
adc
mov
push
push
jle
jne
mov
sub
sbb
popf
push
sbb
out
shll
inc
pop
mov
fbld
jnp
filds
or
dec
call
push
enter
aaa
push
enter
jmp
bound
pop
cmp
xlat
xchg
ficoms
mov
adc
mov
inc
std
bswap
xor
lods
cmp
es
adc
sbb
int3
mov
sbb
xor
pop
test
fnstenv
fimuls
leave
enter
out
pmulhuw
in
and
imul
mov
mov
mov
shrb
mov
push
or
pop
daa
push
xlat
scas
xor
jnp
fldcw
xchg
imul
fwait
or
bound
jnp
adcl
into
cmp
jp
pusha
arpl
jo
xor
adc
stos
loop
clc
cmp
sbb
cltd
in
fiadds
mov
xor
or
rcll
or
imul
mov
xchg
out
lahf
adcl
push
ss
jge
or
push
fistps
adc
lds
mov
fwait
pop
daa
mov
or
clc
aaa
cli
mov
dec
and
add
cmpsb
xor
negl
inc
mov
out
scas
pop
or
jb
lret
mov
inc
test
add
test
cmpsb
cld
add
gs
stc
scas
inc
fistpl
jbe
out
cmp
das
sub
hlt
inc
in
clc
repnz
xchg
out
test
and
hlt
jg
mov
hlt
cmp
dec
imul
loope
iret
jecxz
xor
stos
pop
ficoml
xor
aas
cltd
cwtl
add
pop
and
subb
call
or
fldt
shlb
fstps
lahf
testl
clc
or
jl
inc
mov
decb
imul
ja
fwait
pop
or
cltd
mov
inc
lea
xchg
out
les
xchg
jg
lods
adc
pop
ss
div
mov
mov
stc
jmp
inc
nop
popf
add
cmc
lcall
cmpsb
push
icebp
or
xor
mov
push
fldl
inc
in
cmp
in
dec
cmpsl
popf
and
ss
mov
into
outsl
movhps
out
into
and
jg
rolb
es
cmpsb
sarb
cli
out
sahf
dec
lods
popl
call
pop
cmpb
cmpl
mov
mov
test
cmc
das
sbb
xor
add
lret
mov
pop
mov
push
pop
sub
xchg
mov
jo
cltd
mov
cmp
pop
imul
inc
ss
hlt
dec
rorb
jo
fwait
js
or
aam
sub
push
loope
and
jp
test
js
mov
stos
lret
cmovns
or
xlat
pushf
dec
dec
xor
pop
push
inc
popf
clc
call
jbe
mov
ret
mov
sbb
rcrb
in
pop
aam
inc
aas
push
xor
mov
and
stos
add
in
pushf
cli
mov
ror
jl
push
sbb
ficomps
sub
push
icebp
data16
jo
jg
gs
test
imul
stos
out
xchg
adc
jle
xchg
mov
inc
stos
xor
push
out
add
push
push
loope
js
ljmp
xor
mov
mov
inc
imull
push
add
lret
pop
divb
loop
in
shlb
xor
pusha
shrb
je
sti
sub
cwtl
ja
xor
repnz
sub
insl
jne
iret
and
ds
out
jno
cmp
xchg
xor
lret
insb
adc
push
ret
cld
inc
fdivp
pop
jnp
pop
sbb
idivb
pop
shll
imul
imul
mov
cmp
mov
cli
adc
loope
add
xor
xchg
scas
movsl
testl
sub
cpuid
insb
cmp
cwtl
aaa
sub
jge
pop
adc
pusha
adc
mov
sub
sub
xchg
repnz
and
out
sub
mov
push
es
jmp
es
lods
aaa
adc
push
jns
xor
push
push
shl
popf
cmc
stos
sti
mov
sub
mov
in
jp
icebp
sub
mov
jb
and
cltd
aaa
dec
mov
fisubrl
jl
cld
inc
dec
adc
xchg
and
jp
fsubr
xchg
pop
imulb
and
add
sub
repnz
in
gs
inc
xchg
int
fcomps
enter
in
shrl
dec
xchg
sub
dec
ss
mov
and
jmp
rorb
test
insl
xchg
mov
fldt
dec
imul
loop
popf
dec
jne
pop
outsb
dec
cs
xchg
add
push
xchg
jecxz
jg
jge
mov
cmovbe
and
push
pop
mov
pop
ljmp
dec
inc
jmp
mov
sub
pop
je
aad
imul
jbe
adc
je
and
xchg
and
jle
sub
jl
int
mov
scas
int3
je
ds
mov
lcall
out
pop
sbbl
out
imul
lret
imul
adc
pop
pop
push
push
lods
test
scas
cmpsl
pop
sahf
mov
fwait
mov
lahf
adc
sbb
jmp
cli
mov
pop
xchg
xchg
push
sbb
stos
pop
jbe
jg
pop
inc
mulb
fadds
mov
stos
jg
insb
rclb
pop
xor
jo
rcrb
pusha
call
scas
lods
mul
dec
or
out
mov
mov
loope
adc
cld
cwtl
inc
lock
lret
imul
cmp
fisubrl
pop
push
jg
lret
das
xor
inc
mov
xchg
and
push
cmp
mov
stos
mov
pop
pop
repnz
push
dec
inc
sar
jmp
cmp
and
fcmovnb
data16
fisubl
pop
sub
aam
xor
and
dec
mov
popf
cs
iret
daa
xchg
pop
mov
negb
idivb
pop
add
call
sbb
mov
mov
mov
xchg
jbe
jecxz
jno
and
lret
daa
add
sbb
fidivrs
or
out
je
adc
push
jle
pop
mull
xchg
leave
adc
push
leave
mov
mov
push
int3
add
lods
mov
sub
insl
dec
mov
pop
adc
push
jae
imul
push
lods
mov
add
popa
adc
dec
fimull
sub
aam
jne
push
push
arpl
and
ja
imul
cmpsb
lds
jle
loopne
push
and
stos
adc
inc
push
notl
aam
xchg
pop
cmp
pop
test
aam
xor
imulb
mov
mov
std
dec
jb
and
repz
and
aam
and
or
scas
xchg
in
mov
sub
push
inc
les
add
movsl
cltd
or
pop
fisubrl
push
sub
inc
sti
jmp
push
and
stc
data16
mov
fwait
xlat
lahf
jae
xor
lahf
push
mov
scas
push
clc
xor
imul
xor
in
cmp
cltd
dec
cwtl
je
cs
xor
sub
pop
cmp
add
sti
rdpmc
stos
aad
add
shll
int3
movsb
mov
mov
jnp
arpl
ljmp
lahf
scas
fisttps
mov
out
cwtl
outsb
jo
cmc
fdivrs
fnstsw
int3
push
test
loopne
sbb
out
daa
inc
iret
fistpl
arpl
xchg
add
xchg
pusha
int
inc
nop
add
cmpl
ret
push
adc
mov
mov
cmp
cmp
and
push
mov
std
adc
or
aaa
imul
insl
movsb
pop
inc
movsl
clc
mov
les
stos
fdiv
ret
imul
jmp
add
fisttps
pop
jb
fadds
pushf
mov
push
mov
add
scas
xchg
sbb
adc
aam
jl
sub
and
out
sub
shlb
pop
out
leave
xchg
andb
ja,pt
push
out
and
fwait
or
xchg
inc
subl
mov
mov
adc
add
or
jno
nop
jp
loope
aad
sti
hlt
test
fimuls
push
or
xchg
shll
sahf
add
in
test
dec
pushf
lret
pop
popl
adc
pop
mov
mov
ret
ljmp
pop
out
int3
sub
and
shr
cmp
cmpsl
pop
imul
inc
dec
daa
sti
and
mov
clc
push
inc
insb
rcrl
cmp
and
sbb
fisubrl
adc
xchg
in
mov
mov
dec
pop
or
push
lret
cmpsl
arpl
icebp
or
jae
sbb
shl
push
lds
fldcw
mov
lock
pop
fsts
jp
aam
data16
orb
mov
or
push
sbb
pop
dec
cmp
pop
pop
fidivrs
andl
add
stos
adc
lods
jmp
imul
mov
mov
xchg
mov
inc
push
mov
jo
cli
xorb
pop
push
popa
iret
pop
mov
je
daa
in
jne
dec
in
shl
lret
cltd
push
test
lret
or
inc
lret
scas
scas
mov
outsl
stos
mov
dec
adc
xor
jne
or
cs
fstpl
inc
mov
push
outsl
lcall
or
or
xor
jecxz
aaa
sbb
inc
out
dec
daa
repz
fldt
push
pop
imul
push
mov
rolb
or
xchg
aas
popf
rcrl
fldl
or
subl
mov
sub
mulb
pop
clc
add
fidivl
fimuls
or
inc
ret
jns
xchg
aam
xlat
mov
repz
sub
dec
scas
imul
cmp
test
xchg
idivb
rcll
dec
xor
into
lds
loop
leave
lods
and
arpl
mov
inc
jbe
addb
inc
inc
sbb
cmp
stos
mov
pop
negl
scas
pop
std
cmp
sub
les
dec
xchg
and
hlt
pop
and
int3
fadd
cmp
enter
adc
push
xchg
xor
jg
or
xchg
jns
and
lret
jle
add
cmpsb
js
idiv
jg
inc
pushf
stos
jg
pop
test
jecxz
ret
jnp
sub
daa
fldt
sbb
lea
ss
aaa
insb
and
pop
dec
stc
in
out
sub
push
xchg
sub
cwtl
pop
aad
or
jmp
adc
rolb
addr16
mov
pushf
mov
xchg
aaa
fimull
pushf
stos
test
xchg
int
push
test
or
sub
mov
pop
mov
cmp
test
mov
out
setg
or
leave
mov
mov
cmc
mov
xchg
mov
outsl
hlt
aaa
and
addb
out
repnz
fcmove
popa
inc
inc
push
lock
jp
out
sbb
add
mov
lret
jp
or
mov
mov
mov
pop
xor
xor
mov
daa
mov
jnp
or
inc
int
or
lcall
and
push
shrb
adc
movsl
xchg
and
jl
dec
or
scas
inc
inc
call
lods
ss
jbe
icebp
and
sub
xchg
sub
cmpsb
add
mov
test
cmp
fwait
add
mov
lock
mov
pop
cmpsb
cmp
jo
es
je
or
dec
aad
inc
mov
ret
and
jae
mov
call
stos
je
ror
sub
ja
mov
xor
outsb
xor
xor
sbb
test
xchg
clc
addl
mov
test
shlb
mov
add
hlt
test
mov
mov
in
aad
ja
xchg
popa
adc
pop
fwait
push
jmp
sub
or
xor
mov
jmp
pop
xchg
jp
push
push
movsl
dec
movsb
daa
xchg
outsb
cs
jnp
imul
hlt
adc
daa
push
dec
pop
mov
mov
jle
fdivl
js
insb
cli
adc
push
xor
outsb
jp
and
and
pop
repz
sti
loop
mov
fwait
test
add
je
int
xchg
push
cmp
ss
rcrb
lea
mov
xchg
fistps
test
leave
mov
xor
mov
xchg
scas
or
jne
shll
sbb
jecxz
mov
mov
xor
in
mov
out
adc
xchg
pop
jge
outsb
mov
test
adc
ss
sbb
jbe
sub
sub
mull
adc
popa
lock
fdivrl
adc
and
inc
stos
inc
inc
outsb
popa
test
or
jns
jno
insl
inc
aaa
gs
jbe
cmp
add
mov
imul
sbbl
divb
jecxz
mov
imul
pop
mov
pushf
nop
fwait
pop
inc
xlat
aas
dec
aam
xchg
mov
pop
push
leave
jno
fimuls
rclb
dec
add
xchg
sub
rcrl
cmp
cmp
or
test
les
sub
pop
sub
and
ja
dec
mov
lock
daa
pop
push
pop
jecxz
xchg
stos
test
jmp
loop
divl
fisttpl
mov
pop
sub
xor
and
add
push
push
enter
or
insl
push
and
daa
mov
lcall
inc
xor
insb
cmpsb
shll
stos
daa
sbb
cltd
cmp
mov
in
cs
call
daa
ss
add
mov
aas
mov
dec
clc
rorl
xlat
in
in
je
cmp
aad
jp
sub
enter
jle
mov
and
in
mov
shll
into
cmp
gs
cmp
jmp
mov
loop
lds
mov
aad
xchg
xchg
stos
stc
mov
pop
push
adc
cmp
std
push
push
push
inc
dec
mov
test
sub
xchg
push
mulb
pop
push
xor
sub
aaa
mov
mov
sahf
jecxz
and
ja
cs
cmp
and
stos
push
adcb
jg
mov
test
mov
jno
xlat
test
repnz
inc
mov
loop
pop
cmpsl
jge
push
jne
pop
mov
pop
enter
xor
mov
adcl
ret
mov
push
in
pop
adc
and
leave
repz
pop
xlat
lcall
leave
cmpsl
ljmp
in
mov
push
pop
fwait
popa
movsb
enter
cmpl
decl
test
dec
xchg
mov
fistl
inc
fwait
jmp
loop
adc
sub
enter
ja
and
add
gs
xchg
xor
push
inc
jae
and
mov
push
cmp
xor
cltd
xchg
sub
xchg
pop
ret
push
cs
sbb
add
mov
dec
pop
sub
push
pop
push
adc
push
rol
mov
outsb
sub
es
and
out
sub
das
sbbl
mov
xchg
std
popa
xchg
mov
fdivrl
in
or
or
lahf
lods
mov
lds
movsb
pop
xchg
xor
aad
cs
sbb
repnz
jns
call
jne
int3
cmp
test
mov
pop
ds
call
lock
xchg
int
xor
xor
jae
jp
fwait
inc
jl
sti
enter
dec
arpl
sub
mov
stos
xlat
mov
pop
movsl
dec
jle
jle
pop
cmp
push
mov
outsl
insb
or
jo
aam
cmp
lods
push
data16
push
mov
xchg
jp
gs
lock
imul
subl
lret
cmp
fs
nop
fadd
inc
inc
and
xorl
jns
imul
imul
jbe
inc
cs
dec
mov
fdivr
xchg
dec
clc
sahf
les
sub
xor
dec
dec
pop
mov
pop
sbb
ljmp
and
cltd
xor
adc
nop
leave
sbb
jae
mov
jg
stc
cmpsb
clc
inc
fisubrs
sbb
xchg
loop
push
nop
es
lcall
pusha
push
fsubs
aaa
out
imul
mov
mov
mov
push
cwtl
sub
frstor
call
push
jecxz
popf
add
mov
movsl
jp
jecxz
stos
xor
cmp
in
imul
xor
cltd
nop
mov
mov
int
pop
add
push
or
inc
aam
mov
jp
test
iret
imul
mov
lock
test
enter
scas
mov
rcrl
les
mov
inc
bnd
nop
lahf
out
mov
scas
adc
mov
popf
sub
das
mov
out
mov
add
fistl
push
outsb
mov
ret
mov
test
pop
fs
scas
in
jo
sahf
pop
push
scas
dec
mov
mov
mov
imul
dec
push
ret
inc
call
xor
xchg
out
mov
pop
aas
sbb
fldl
add
jae
les
and
test
mov
sbb
movsb
cli
or
adc
fildl
lods
adc
pusha
jecxz
dec
lock
ret
jmp
bound
or
lds
out
repz
lahf
je
mov
pop
inc
add
les
sub
test
jns
xchg
dec
daa
scas
fcmovu
xchg
iret
sbb
clc
dec
hlt
xor
std
fdivp
repz
or
test
xchg
mov
divb
hlt
xchg
add
push
jmp
or
loop
jmp
mov
xchg
sub
lret
in
push
movsb
dec
pop
xchg
cmp
lea
xchg
inc
jns
add
les
daa
gs
mov
inc
or
cmovns
inc
bound
pop
or
lcall
stc
mov
mov
andb
mov
fidivs
bound
sahf
hlt
lret
lcall
cmp
xor
mov
repnz
and
mov
xor
ss
mov
jae
rorb
shlb
addr16
mov
shlb
je
ficompl
sahf
mov
xlat
cmp
loopne
stos
cltd
xor
mov
mov
test
add
and
ss
das
cmp
push
popf
add
sbb
sarl
cmp
xchg
aam
xchg
cmc
xor
ret
in
mov
adc
xchg
mov
imul
cmc
jnp
mov
push
scas
mov
pop
imul
pushf
shrb
xchg
cmpsl
lds
loop
scas
iret
aad
rcll
adc
push
push
icebp
loopne
xor
pop
add
popa
mov
pop
mov
xor
das
arpl
add
sub
insb
or
adc
dec
jns
imul
int
inc
sub
push
ret
aam
shr
insb
sbb
test
fsts
lret
cmp
hlt
cmp
jge
dec
cmp
ret
sbb
and
cmc
lss
movsb
xchg
push
in
ds
shrb
cmp
mov
mov
cld
std
xchg
sub
loop
rcll
pop
lock
xor
inc
decb
fidivl
mov
js
fwait
add
and
push
xor
lock
gs
mov
test
pop
xchg
in
sub
enter
mov
dec
incb
loope
push
rorb
mov
push
adc
rorl
in
adc
xchg
cmp
je
mov
mov
adc
movsb
sbb
in
sar
and
mov
ret
mov
push
lahf
lahf
xor
lret
loope
add
push
add
fwait
cs
scas
dec
lahf
push
push
xchg
inc
cmpsb
lret
jl
mov
and
scas
jnp
sub
rcr
movsl
ss
pushf
lcall
fcoml
cwtl
jo
dec
xor
jl
ret
mov
popa
inc
daa
mov
xchg
cld
and
fucomi
xlat
pop
andl
mov
mov
jns
cld
fmuls
sub
jnp
in
or
in
cmc
jb
lock
lret
add
fs
popa
xchg
mov
dec
add
gs
adc
fists
dec
xor
mov
mov
movsb
inc
jmp
xor
lods
test
shrl
daa
jge
fwait
out
sub
adc
iret
fdivs
mov
stc
cld
lahf
mov
xor
mov
add
outsb
int3
mov
bound
sti
into
inc
in
mov
popa
lret
and
rorl
test
fisubrl
add
mov
lods
push
mov
pop
sbb
out
repz
rcll
pop
dec
in
fiaddl
out
or
imul
jmp
lods
lahf
and
scas
push
pop
dec
or
iret
dec
mov
mov
jmp
fwait
dec
dec
xor
cmpsl
punpckhwd
and
filds
sbb
stos
and
adcl
pop
jb
and
jecxz
or
push
iret
popa
jp
loopne
popf
and
int
cmc
or
add
xchg
jmp
mov
lods
push
les
ret
push
ds
je
pop
mov
sbb
xchg
xlat
pop
adc
sbb
fidivs
push
daa
pop
sub
lods
jbe
inc
int3
xor
jo
jl
stos
in
dec
xor
xchg
pop
mov
xchg
mov
or
fdivrl
xor
out
adcl
in
pop
xchg
cs
sarb
or
and
ljmp
test
adcb
test
outsl
decl
xlat
divb
outsb
arpl
sti
shll
out
mov
testb
mov
or
jns
xlat
mov
cmc
leave
in
xchg
jae
xchg
roll
fmull
gs
hlt
push
push
sub
mov
mov
scas
es
adc
loopne
mov
and
std
push
arpl
testl
sbb
movsl
cmp
xchg
int
decb
jno
dec
push
dec
push
sub
test
pusha
inc
sti
pop
stos
fdivrl
pop
sbb
ljmp
xlat
icebp
pop
ret
pop
lahf
dec
pop
mov
jge
jbe
push
loope
lods
fcmovnb
std
xor
push
ss
or
popa
adc
mov
and
ljmp
fnsave
scas
scas
adc
or
mull
xchg
push
mov
ss
out
popf
roll
pop
loope
fists
jmp
bound
or
call
out
inc
cwtl
les
pushf
xchg
sub
pop
pop
sbb
or
in
rcll
int
iret
test
lret
mov
in
and
xor
popf
push
nop
or
test
sbb
leave
pusha
pusha
outsb
mov
mov
cmp
daa
sbb
shll
test
cmpsb
leave
sub
notb
inc
lahf
gs
leave
aaa
enter
mov
or
xor
ss
call
andl
out
aam
insl
mov
jns
sar
adc
mov
pop
pop
xchg
cmp
xchg
fidivrl
test
push
sub
and
add
cltd
mov
jo
loop
mov
push
mov
mov
ds
dec
cltd
leave
inc
int3
lea
jmp
cmpsl
mov
inc
sbb
dec
cmc
insl
fdiv
sbb
leave
xchg
xchg
loope
ret
cli
inc
and
push
data16
sahf
cmp
repz
shrl
loop
mov
xor
call
sbb
pop
addl
mov
jo
fldt
fldl
mov
cs
jl
in
dec
sbb
dec
sbbb
push
enter
lcall
stc
sbb
jb
sbb
dec
inc
pop
mov
inc
pushf
imul
adc
adc
ja
pmaxub
lds
mov
je
inc
into
movsb
lds
movsl
pop
ds
xor
mov
xchg
xchg
sahf
loope
mov
pop
jg
scas
fcoml
popf
jg
push
and
insb
pop
gs
fldl
inc
jb
fimull
jge
xchg
sbb
ret
and
cmp
mov
jae
push
sub
sub
lret
sbb
or
ret
xor
and
sarl
jecxz
xchg
xor
sarl
sub
pop
repnz
add
and
dec
or
mov
leave
mov
inc
ret
pop
pop
xor
js
xchg
jg
lahf
lcall
xor
enter
popa
mov
inc
and
loopne
cli
jb
pop
fwait
inc
xor
pop
hlt
nop
sbb
nop
jmp
ss
mov
iret
mov
shrl
dec
outsb
mov
jns
aaa
js
sbb
imul
aas
test
jl
aaa
pop
and
fs
clc
cwtl
rclb
dec
sub
lahf
pop
lret
popf
insb
lods
xor
dec
or
add
add
add
adc
add
inc
add
jo
add
nop
add
cwtl
cmp
pop
jl
add
imul
mov
sub
pop
or
jbe
lahf
xchg
outsl
enter
xor
adc
mov
aad
jo
fstpl
movsb
push
and
cmp
arpl
adc
pop
ss
out
jnp
push
push
add
push
pop
lock
jge
jle
dec
xchg
aad
fdivrs
sarl
sub
sbb
adc
jg
push
xchg
nop
imul
out
out
xchg
inc
pop
movsb
cli
or
pop
aad
sbb
lcall
mov
and
outsb
push
cld
adc
ljmp
stos
jnp
loop
ja
lods
mov
cmpsb
out
jmp
jge
add
mov
test
inc
std
cwtl
push
xchg
fidivl
adc
xor
loopne
mov
lcall
pop
lods
bound
add
imul
jl
cmp
or
aas
call
in
xchg
pop
lcall
mov
int
aaa
enter
stc
dec
or
or
xchg
jge
ja
pop
sub
cs
stc
call
xchg
push
pop
push
xor
rcll
insb
imul
addl
shll
int3
push
add
xchg
mov
mov
aaa
and
cmp
dec
mov
cmp
rorb
cmpsb
mov
adc
aam
fistl
xlat
cmpl
cmpsl
cmp
jb
insb
rclb
nop
mov
xchg
sub
nop
add
add
daa
xor
push
jge
fsubrs
cmp
dec
push
push
scas
out
jmp
fisttpll
jo
xorl
xchg
aad
lret
fs
inc
pop
inc
testb
pushf
pop
repz
ja
sbb
daa
fnstsw
ret
cs
mov
pop
nop
enter
aas
or
das
lock
test
mov
pusha
mov
frstor
push
insl
dec
mov
mov
into
sbbl
add
xchg
add
inc
sbb
fwait
lcall
or
inc
xchg
add
inc
femms
loope
lock
mul
or
dec
mov
mov
push
arpl
add
mov
popf
loop
jge
mov
and
add
rcl
loop
pop
in
test
lods
iret
adc
das
pop
or
iret
inc
sbbl
inc
push
out
cld
dec
adc
call
or
adc
push
push
lret
cwtl
inc
push
jecxz
idiv
in
xor
andl
cwtl
repnz
daa
cmp
cwtl
subl
es
dec
push
and
and
repnz
lahf
push
pop
dec
leave
cs
das
pop
cmp
cmp
dec
jp
fistps
mov
adc
jne
pmaxub
mov
dec
inc
rolb
mov
xchg
cmpsb
or
ret
aam
enter
stos
mov
sub
cwtl
sti
enter
adc
xchg
pop
push
or
loope
int
and
je
pop
lret
aas
nop
stc
xchg
ja
push
lds
push
fidivrs
lcall
xchg
dec
lock
fistpll
mov
outsb
enter
xlat
sub
xor
push
int
add
pop
imul
daa
mov
push
and
loopne
sbb
sub
jg
or
cmpb
xchg
cmp
dec
sbb
jbe
pop
sahf
ja
andl
scas
cmp
jmp
scas
push
mov
push
mov
xor
mov
test
cmp
jae
jnp
xchg
lods
sbb
cmp
addr16
push
rolb
push
ss
add
adc
push
in
mov
cmpb
aas
sbb
inc
push
test
mov
fsub
fldcw
inc
test
out
cmpsb
out
pop
in
subl
xchg
push
or
mov
push
add
shrb
sub
cmp
jns
frstor
ret
dec
stc
or
xor
fdivp
mov
rcrb
or
jbe
fidivl
sarb
out
inc
daa
js
popa
jno
sti
cmp
mov
push
cmp
outsl
pop
dec
gs
and
clc
sbb
stc
mov
les
fs
cmpsl
inc
inc
repz
lock
xchg
xchg
data16
xchg
xchg
cli
add
mov
aaa
cs
lret
fsubrs
fwait
cmpxchg
jecxz
jge
fcoms
push
push
insl
fnstcw
in
fisttpl
xor
cmp
loope
ss
jo
pop
repnz
xchg
xchg
test
ficompl
xchg
out
das
inc
jae
mov
push
mov
pop
and
fwait
xorb
nop
pusha
xchg
dec
mov
pop
out
inc
jmp
stos
dec
gs
cmp
cli
popf
adc
roll
or
ss
inc
push
add
insb
outsl
xor
mov
fisttpl
add
es
xchg
test
lock
xchg
nop
idivb
xchg
int
jnp
adc
fstp
or
mov
aas
ret
mov
jo
jo
sahf
mov
cld
inc
inc
out
imul
cwtl
mov
inc
add
sbb
adc
stc
dec
jg
dec
jge
es
test
mov
mov
adc
pop
movsl
insb
adc
lret
jnp
jle
outsb
imul
sub
insl
outsb
popa
dec
dec
inc
addb
cs
sub
lea
dec
jo
movsb
cmpb
mov
xor
push
lea
das
aam
hlt
adc
ljmp
std
or
inc
sub
ret
adc
fucomip
pop
sbb
inc
push
pop
sub
dec
sbb
xlat
xchg
xchg
mov
or
and
int3
pop
and
cmp
data16
adc
divl
jno
mov
push
pop
mull
imul
shlb
mov
xchg
cmp
or
push
add
scas
sbb
pop
fnstenv
lods
xchg
popf
or
jg
fidivrs
fwait
mov
sub
aad
xor
std
js
jg
add
aaa
inc
lea
adc
cwtl
xchg
fwait
xchg
mov
fstpl
inc
test
test
iret
mov
add
outsl
sub
pushf
mov
or
and
dec
sbb
mov
aaa
aaa
xchg
ss
popa
add
pop
jb
mov
movsb
pop
call
xchg
out
lret
mov
mov
and
bound
loopne
out
mov
push
loop
leave
mov
jmp
aaa
xrelease
ficoms
and
cld
push
scas
xchg
dec
sbb
pop
sbb
mov
jne
repnz
loop
daa
jge
jne
sti
or
stc
or
xchg
loope
movsl
inc
sahf
outsl
sbb
test
push
popa
xlat
mov
add
mov
sbb
mov
sub
icebp
aaa
mov
pop
mov
sbb
out
mov
imul
xchg
dec
iret
jle
pusha
push
push
iret
mov
inc
pop
loope
mov
pop
mov
xor
add
push
push
xchg
loop
cs
jnp
mov
sbb
loop,pt
lret
lea
test
cmpsb
clc
lock
pop
sti
mov
es
pop
xchg
pop
in
push
daa
cmp
jbe
mov
hlt
cmp
aam
ret
push
in
push
lahf
pop
pusha
dec
pop
sub
test
adc
and
cmc
scas
xchg
add
out
ds
addr16
cli
push
test
mov
mov
sbb
xor
and
test
sub
stc
push
aaa
xchg
into
mov
jg
scas
mov
dec
xchg
add
mov
outsb
lock
and
push
mov
into
mov
dec
out
sbb
insl
pop
hlt
lock
dec
mov
shl
adc
xchg
sbbb
cli
or
daa
ficomps
pop
mov
js
adcl
xchg
mov
fldl
add
cmp
sub
repz
or
stc
jmp
dec
addb
js
cmp
dec
rcrl
pusha
cli
test
mov
or
es
cltd
push
or
rcll
xchg
les
popf
arpl
iret
jns
push
mov
cmc
in
jl
pop
xor
pop
lahf
sbb
pop
adc
mov
xor
jp
or
sub
jns
addps
xchg
aaa
out
hlt
imul
test
aas
jae
jb
and
bound
adc
xor
add
movsb
in
and
movsb
ret
mov
push
in
mov
dec
dec
mov
or
aam
xor
insb
and
xchg
leave
jae
int
sbb
sbb
add
jnp
sbb
stos
std
cmpl
push
cmpsb
mov
push
cltd
mov
lcall
push
or
clc
pop
dec
or
inc
cli
xor
popa
dec
imul
or
adc
and
fdivrp
pushf
pop
hlt
lods
arpl
mov
jne
jp
pop
lods
hlt
je
xchg
pop
dec
loope
in
push
mov
xchg
sub
xchg
bound
jecxz
jecxz
pop
mov
out
test
shlb
cmp
jle
cmp
ja
push
or
adc
int3
rorl
sbb
ficoml
jno
lret
mov
pop
test
hlt
push
sahf
and
inc
pusha
dec
mov
fistl
and
movsb
or
pop
ss
test
je
mov
mov
cmp
bound
adc
ss
xchg
or
xor
scas
in
xchg
push
daa
das
in
fidivs
jecxz
iret
imul
sub
push
pop
jg
fbld
jle
pop
cmp
popl
add
orl
sbb
xor
mov
mov
scas
rcll
xchg
pop
jbe
out
iret
sub
adc
mov
push
sbb
push
sbb
and
sbb
jge
pop
inc
add
stc
xor
mov
push
dec
insl
movsb
cmp
stos
push
mov
mov
sbb
and
mov
sub
addr16
inc
push
jl
xor
mov
jecxz
imul
lock
push
mov
nop
pop
xor
inc
fdivs
mov
fadd
xchg
adc
out
loopne
scas
jo
push
jbe
rcll
adc
xchg
pop
xchg
xchg
jne
mov
sub
mov
mov
or
stos
xchg
repz
dec
mov
xchg
iret
cmp
sub
xchg
pop
inc
sub
je
add
test
repnz
pop
mov
xchg
jo
mov
adc
xchg
mov
and
mov
ljmp
lock
test
dec
push
aam
push
daa
sahf
inc
loop
mov
out
pop
je
pop
mov
hlt
mov
pushf
mov
fsubrs
mov
and
sub
jbe
or
sbb
frstor
mov
adc
xchg
jp
cli
mov
mov
push
dec
jbe
adc
aam
shr
push
gs
addr16
xchg
xor
fsub
sbb
jb
dec
or
js
rcl
xchg
jb
popf
and
or
jnp
mov
rcll
inc
stos
cli
test
or
aas
scas
pop
xorl
dec
int3
loope
aam
mov
xor
fisubs
ret
mov
push
dec
cmpsb
cmp
cmp
out
jnp
add
dec
ja
jp
xor
sahf
pop
cld
pop
pushf
imul
or
es
add
lds
dec
xor
adc
popf
sbb
pusha
jmp
and
pop
inc
fwait
jns
mov
jmp
lahf
in
add
cmp
push
imul
lds
in
jns
pop
pop
adc
sbbb
jno
dec
lods
in
inc
stos
cld
cwtl
or
jp
mov
or
out
mov
mov
xchg
xchg
jp
mov
cmp
out
arpl
rclb
ret
ret
jl
insb
xchg
xor
std
mov
jnp
add
test
shrl
arpl
mov
fmuls
sbb
jo
jmp
xchg
cmp
jmp
jmp
repnz
test
sbb
lods
outsb
imul
loopne
mov
sbb
and
in
inc
add
xchg
xor
iret
jle
test
add
mov
sub
pop
xor
fs
lods
test
nop
repz
inc
cmc
fucom
repnz
push
shrb
mov
and
jge
sbb
cli
daa
lods
cmp
xor
push
jg
xchg
cmp
cmp
add
or
icebp
lea
lahf
dec
mulb
sbb
sbb
popf
call
ret
sub
mov
add
sub
cmp
mov
jp,pt
mov
pusha
clc
les
addl
push
mov
cmp
xor
dec
mov
cmp
fcoml
xchg
adc
insl
andl
out
imul
dec
add
mov
mov
mov
add
aaa
out
hlt
or
add
inc
lods
rcrl
mov
mov
adc
mov
and
fstl
ljmp
inc
xorb
mov
popf
lret
stc
lea
inc
sbb
out
and
adc
outsb
lret
dec
das
sbb
mov
lcall
imul
popf
jae
mov
test
aam
aas
add
je
pusha
or
ret
sbbb
mov
ja
cld
push
mov
lods
push
dec
jne
adc
repz
cs
outsb
adc
adc
adc
sub
aaa
adc
int3
aam
lods
int
out
into
inc
in
sub
lods
in
test
inc
orb
inc
add
int3
mov
sbb
icebp
xchg
arpl
inc
bound
pop
enter
mov
repz
mov
ljmp
rorb
push
repnz
mov
jecxz
cmpsl
xorb
dec
iret
iret
push
and
mov
mov
rolb
stc
push
icebp
jnp
std
daa
cmp
sub
and
xchg
or
nop
mov
cmp
sbb
rcrl
adc
ficoml
pusha
mov
pop
leave
jg
test
cli
adc
cmp
sbb
bound
dec
stos
pop
jo
daa
mov
inc
arpl
rclb
icebp
out
xchg
inc
push
and
xchg
nop
jg
imul
adc
cmc
adc
out
mov
push
push
mov
mov
jae
icebp
test
mov
stc
call
sub
adc
xor
sahf
mov
iret
int3
push
arpl
jmp
sub
imul
sbb
lret
xor
into
push
jae
sahf
sbb
dec
mov
sahf
pop
loop
adc
jp
lods
lock
cmpsb
xchg
movsl
inc
ret
or
dec
or
xchg
loopne
xor
dec
aaa
jge
xor
pop
subb
push
push
test
test
push
je
mov
int3
cmp
mov
mov
or
push
push
daa
pop
scas
push
lea
test
inc
imul
or
std
mov
push
mov
lret
push
ja
push
xor
cld
fnsave
ret
adc
push
loope
pop
pop
int
cmp
and
lds
xchg
add
sub
mov
pop
cmp
adc
push
adc
mov
or
pop
and
cmp
pop
or
xchg
in
in
aaa
aaa
adc
andb
or
jb,pt
inc
pushf
std
lret
dec
jl
jns
xor
icebp
pop
out
mov
sbb
cltd
popf
mov
adc
cltd
mov
xlat
aaa
repnz
sbb
shrb
enter
rorl
jns
or
subb
adc
or
mov
sub
xchg
ds
fs
leave
push
faddl
jg
aad
rcll
ret
sub
mov
sub
mov
mov
fiaddl
dec
ljmp
or
jnp
sahf
pusha
aaa
mov
mov
sub
sbb
fldl
imul
mov
dec
jmp
sbb
mov
nop
pusha
sbb
cmpsl
in
test
loope
push
cmp
repz
mov
aad
fwait
dec
test
inc
xchg
bound
xchg
inc
xor
lret
or
and
das
inc
test
mov
mov
xor
mov
sbb
imul
push
sub
fdivl
je
jne
out
mov
insb
loopne
icebp
or
push
mov
jnp
cli
xor
jge
jecxz
addb
mov
outsb
enter
aam
stc
add
call
arpl
fisubrs
test
movsb
push
scas
nop
fwait
call
fdivrs
pop
and
imul
sub
ja
pop
bound
push
jecxz
mov
imul
xor
aaa
push
or
shl
xchg
pop
out
mov
add
and
mov
sti
mov
jp
loope
ja
adc
xchg
andl
js
gs
xchg
add
xchg
xlat
daa
jmp
or
jno
mov
lods
push
mov
dec
cmp
cmpsb
pop
inc
inc
lds
sub
push
pop
pop
imull
dec
into
pop
arpl
jge
jo
xchg
divl
int3
push
imul
sbb
pop
stc
pop
es
push
pop
dec
daa
push
xor
jl
jg
jle
mov
sbb
das
out
xchg
xchg
fimull
es
mov
ja
sbb
shlb
in
push
and
clc
insb
push
cld
cmp
es
cld
sbb
sbb
dec
push
push
cwtl
pop
push
cwtl
pop
or
scas
xor
xor
xchg
push
je
jb
fists
inc
sub
mov
out
mov
shl
sahf
mov
insl
jge
xchg
jbe
pusha
lahf
push
lret
xchg
movsb
jb
ret
push
repz
mov
xchg
movntps
mov
pushf
sahf
lods
aam
data16
and
inc
xor
dec
stos
push
jne
jge
or
sub
sub
mov
and
push
fcompl
cltd
pop
dec
lock
jno
cmp
ret
call
outsl
ds
adc
cmp
les
jge
cwtl
test
pushf
jl
frstor
sub
sub
mov
in
push
and
packssdw
jg
cmp
jmp
gs
test
add
loop
jl
mov
cmpsl
clc
add
outsl
sub
mov
movsb
xchg
loopne
fsubrl
movsl
inc
adc
and
pop
dec
add
mov
mov
notb
shlb
test
mov
hlt
mov
js
xor
push
mov
sbb
out
inc
js
fistpl
ljmp
jno
das
mov
pop
clc
xchg
cmp
iret
xor
or
fucomp
mov
inc
js
iret
lahf
lahf
jno
push
mov
push
out
adc
sbb
call
xor
xor
sbb
je
xchg
push
sarb
xlat
inc
int3
mov
fsubs
cmpsl
xchg
adc
xchg
or
int
imulb
and
push
aad
xor
push
adc
jnp
mov
jmp
xor
push
cmpsb
mov
xchg
pop
jg
xor
add
adc
sbb
arpl
mov
add
ljmp
js
pop
mov
and
std
sar
dec
repnz
xchg
fsubrl
aam
inc
gs
jecxz
xchg
sarl
mov
cmp
push
sbb
out
cmp
aas
jb
mov
aad
push
sub
incb
test
insb
pop
mov
fnstsw
test
sub
cld
ljmp
jb
and
int3
and
adcb
test
je
cmp
xorb
cs
jae
sahf
adc
add
int
test
loope
jge
fs
inc
shrb
sbb
imul
int3
jo
inc
xchg
shl
adc
push
xor
movsl
test
dec
adc
popa
lret
imul
jnp
dec
mov
lret
int
sbb
lods
bound
jnp
js
mov
push
out
mov
mov
imul
dec
xchg
dec
xor
lret
pusha
jl
mov
insb
pop
mov
xor
aaa
out
cmp
lahf
movl
mov
mov
push
pop
sub
jne
out
mov
mov
inc
mov
xchg
sar
jge
mov
xchg
sub
ss
int3
sbb
push
xchg
sbb
movsl
jne
jp
xorl
lock
push
lock
mov
cmpl
cmp
mov
jmp
dec
pop
inc
and
inc
cltd
push
mov
je
out
scas
and
mov
jno
mov
jp
pusha
xor
push
insl
xor
push
in
xor
andb
inc
fildll
sub
psraw
pop
insb
xchg
out
pushf
push
push
pop
and
pushl
sbbb
pop
iret
cmp
in
xchg
adc
loop
repz
inc
lods
xchg
mov
aad
inc
jno
mov
dec
ret
hlt
or
push
and
test
sti
fs
popf
loopne
in
mov
cli
lret
cmp
push
stos
add
mov
lret
dec
jg
je
stc
xchg
test
gs
xchg
ffreep
sub
mov
adc
les
loope
shlb
repz
inc
lcall
in
jg
notb
fidivl
and
or
pop
jmp
pop
cmp
test
inc
test
xchg
jecxz
inc
and
push
in
lods
dec
inc
aaa
xor
mov
cwtl
mov
and
sub
inc
out
push
pusha
push
lret
pop
cmovs
push
push
mov
enter
inc
fs
mov
and
popf
add
mov
pop
xchg
test
push
mov
aas
mov
xchg
sub
test
pop
push
decl
mov
aaa
ljmp
mov
dec
icebp
or
lret
push
jmp
or
jns
add
fidivl
adc
and
push
clc
dec
out
push
mov
loopne
and
rcrb
adcb
icebp
jnp
hlt
sbb
and
add
inc
mov
js
jle
jge
dec
rolb
xorb
rclb
cmp
xor
jns
loope
mov
push
loopne
bound
jne
mov
adc
xor
inc
sub
and
int
test
imul
ror
out
xchg
adc
lret
inc
push
int3
mov
cli
mov
cmc
xchg
xchg
test
mov
jno
jo
xchg
les
mov
push
jne
adc
popf
push
lret
inc
adc
push
sbb
call
sub
xchg
ljmp
mov
and
cs
jecxz
movsl
xchg
lcall
push
ss
imul
jle
adc
dec
mov
pop
jmp
imul
xchg
inc
orb
adc
mov
mov
in
call
cmp
jp
test
mov
dec
outsl
add
push
fcoms
inc
std
stos
cmp
mov
xor
in
pusha
scas
pop
jnp
pop
cmp
fcomi
lcall
fildl
cmp
xor
jo
xchg
out
push
repnz
xor
imul
mov
inc
enter
shrb
ljmp
ret
inc
mov
testl
cmp
xchg
jmp
mov
jmp
pop
jge
add
cli
mov
stos
inc
jmp
sbb
xor
add
adc
cmp
xchg
sbb
sub
inc
xchg
daa
fdivrs
pop
fistps
loope
test
inc
cmp
scas
movsb
cld
aad
inc
test
in
mov
adc
scas
mov
jecxz
mov
imul
jns
or
sbb
xor
faddl
ljmp
shlb
mov
inc
repnz
xor
test
adc
sub
jo
sti
in
jns
lods
adc
jge
sbb
sub
xor
ja
insb
adc
jno
mov
xor
in
sbb
jne
es
testb
ror
mov
aam
jno
mov
bound
mov
repnz
xor
sbb
rcrl
stos
xor
jnp
outsl
insb
sbb
sahf
data16
fistpl
sarl
xor
xchg
jl
sti
xor
jns
fidivrs
divb
inc
imulb
and
aas
dec
sub
addr16
fcompl
fstpt
push
cld
addr16
xchg
and
loop
outsb
and
nop
mull
ds
mov
add
test
pop
ret
push
mov
repnz
inc
push
lds
xor
adc
in
fisttpl
xor
sub
xor
mov
cli
fwait
add
daa
enter
ja
leave
daa
aas
push
in
push
push
mov
mov
lods
sub
movsb
aad
loop
xor
insb
mov
or
lds
jae
xchg
lahf
mov
or
pop
jb
int3
jnp
pop
pop
push
pmaxub
and
mov
cmp
shll
cld
add
hlt
and
add
mov
imull
pop
add
popf
sbb
fistl
cmp
mov
outsb
or
xchg
cmp
or
js
xor
fstl
lcall
outsl
ljmp
jo
cmp
jb
cmp
adc
adc
ffreep
pop
rcll
adc
mov
addr16
pop
pop
popf
test
mov
dec
test
mov
inc
arpl
jle
std
push
ret
aas
mov
icebp
cmp
icebp
out
mov
leave
cmp
insl
push
cs
inc
das
jle
jmp
sbb
and
xor
popa
enter
shll
daa
mov
into
jg
cmpsb
sbb
xor
mov
cmpsl
out
mov
mov
pusha
xor
and
pushw
int3
lock
add
icebp
sbb
xor
enter
add
add
sbb
push
mov
ds
jecxz
pop
sbb
inc
mov
xchg
push
cmpsl
mov
int3
imul
jbe
mov
xchg
sbb
xor
xor
stc
dec
out
cwtl
jae
gs
rclb
adc
pop
mov
aam
aas
dec
and
repnz
inc
fisubs
dec
adcb
push
sti
pop
cmp
lret
das
out
flds
add
or
arpl
or
divl
dec
dec
data16
test
lahf
imul
mov
mov
imul
pop
in
mov
jbe
adc
pmaxub
push
inc
aaa
dec
xchg
push
jno
jns
pop
cwtl
and
test
enter
out
mov
xchg
jo
sbb
outsb
xchg
sbb
pop
cwtl
and
aaa
test
nop
enter
icebp
testb
call
test
adc
outsl
jmp
bound
jo
cmp
xlat
xor
add
jae
adc
pop
aas
psubusb
movsl
adc
push
lret
and
jecxz
pop
push
aas
and
mov
test
scas
cmpsb
rcrb
ret
dec
shrl
lret
pop
mov
dec
sbb
xchg
fimull
jae
mov
movsl
dec
test
jmp
mov
push
sti
lcall
mov
inc
or
xchg
dec
sub
xchg
out
sbb
mov
movsl
sub
push
add
dec
dec
aam
daa
jae
sbb
jb
movb
xor
add
aaa
push
jae
pop
jl
mov
mull
push
adc
jae
loope
sub
stc
fucomp
or
fisttpl
in
aaa
push
or
test
call
inc
inc
loop
and
into
push
pop
fbstp
movsb
repz
loop
jae
enter
sub
divl
sbb
lods
dec
popa
xor
out
add
ja
dec
mov
sub
int
jmp
dec
fcompl
into
ja
inc
rcr
sub
cmp
lret
in
scas
adc
push
add
cs
or
xchg
pop
cmp
inc
push
lds
push
ss
popf
aaa
cmp
call
orl
sbb
outsb
in
inc
jo
leave
sub
pop
dec
pop
pop
je
push
pop
dec
cmp
fdivl
mov
clc
and
fs
pop
xchg
and
lods
bnd
sbb
push
sbb
jb
cld
cmp
adc
test
sub
cmp
push
cmp
or
cwtl
mov
dec
dec
adc
cmc
lcall
ja
lret
or
clc
mov
push
add
xchg
cmp
aas
mov
sub
int3
dec
out
lahf
pusha
or
and
rcrl
mov
je
test
rcll
emms
jge
pop
aad
pop
test
gs
mov
push
xchg
test
testb
dec
mov
stos
hlt
lods
and
mov
test
cmp
ljmp
iret
jmp
cld
int3
xchg
test
jne
push
jae
or
xchg
outsl
sbb
movsl
sub
inc
dec
aaa
dec
lcall
mov
xor
xchg
enter
cwtl
xor
push
mov
sbb
push
jns
test
mov
push
in
pusha
ret
out
and
out
pusha
jnp
lret
inc
mov
fiaddl
adc
les
les
push
inc
test
mov
pushf
push
scas
insb
cltd
mov
cmp
push
fcomps
das
insb
into
shlb
hlt
mov
stc
fsubrl
jne
dec
fdivrs
dec
push
lahf
sbb
test
loope
notb
cmpsb
roll
mov
and
mov
cmp
jmp
lea
xor
fsubs
or
int
cmpsl
and
pop
lods
testb
sbb
in
sub
dec
sbbb
cmp
adc
push
push
lods
push
out
shrb
in
dec
cmpsl
negl
pusha
pop
test
dec
dec
pusha
inc
and
dec
inc
xchg
enter
pop
imul
mov
popa
sub
jecxz
mov
push
xor
movsb
lods
xlat
fdivrl
sub
cmp
fcoml
std
pusha
imul
mov
mov
or
push
arpl
xor
jnp
std
lcall
sbb
mov
inc
push
data16
lea
out
cmpsl
aam
outsb
inc
inc
cmp
mov
mov
xor
and
stos
mov
addr16
push
xchg
inc
jbe
pop
inc
cmp
mov
pop
ror
dec
add
ret
sbb
std
xchg
aam
stos
mov
fdivl
inc
xor
in
pop
mov
aaa
and
push
xor
into
mov
mov
push
cmp
test
je
or
scas
lea
in
inc
test
jmp
scas
fdivrl
cmp
xchg
pop
in
cltd
es
mov
mov
fistpll
call
rcll
dec
loop
add
gs
inc
mov
fimull
js
pop
sbbb
in
xor
push
xchg
roll
gs
fs
shll
addr16
xchg
stos
mov
pop
pop
inc
adc
jb,pn
dec
je
nop
dec
xchg
cmpsb
pop
cmp
mov
or
movsl
mov
adc
scas
dec
icebp
lods
ja
push
lcall
insl
push
mov
mov
pop
lds
fisubs
lods
cmp
jge
aas
xor
push
lods
pop
push
repnz
outsb
test
mov
aam
lock
test
lahf
stos
mov
test
and
imul
mov
insb
adc
inc
mov
aam
push
sub
popf
or
dec
inc
mov
jp
sub
xchg
mov
xchg
iret
je
jb
dec
and
push
mov
lahf
or
cmp
xchg
dec
inc
sbb
mov
xchg
xchg
xchg
ret
mov
xchg
sbb
pop
dec
jge
enter
les
addb
lahf
lret
call
sbb
xchg
lahf
xchg
pop
adc
imulb
test
hlt
aad
mov
fnstenv
xorb
lcall
sti
ljmp
mov
xor
xor
dec
ss
sahf
lock
sbb
add
push
cmc
jns
inc
lds
out
xor
xchg
imul
mov
std
xorb
jp
and
jae
stos
sub
mov
movsl
jmp
lea
push
in
pop
mov
bound
pop
sub
decl
xchg
inc
mov
lds
pop
pusha
dec
push
mov
sbb
sbb
pop
mov
ds
ss
push
or
not
xchg
mov
shll
jbe
mov
loop
cmp
aaa
out
lret
jecxz
test
dec
inc
add
in
add
mov
sets
mov
pop
jge
dec
push
push
or
pop
push
iret
shlb
lcall
and
dec
cmp
cmc
push
cld
repnz
sbb
inc
enter
lahf
test
lods
gs
jl
aam
mov
xchg
and
pop
insb
push
cmp
in
leave
adc
std
dec
shlb
lods
xor
mulb
jne
xor
jne
jp
aad
fs
and
cmc
sbb
xchg
ja
movsl
cmp
lret
inc
jno
push
popa
inc
sbb
in
sbbl
mull
xchg
adc
fcom
dec
sbb
cmp
stc
fucomip
mov
fisubrs
data16
popf
and
inc
mov
pop
mov
xor
sbb
and
dec
sbb
nop
iret
lcall
pop
push
test
jb
xchg
jp
add
adcl
iret
fwait
shlb
mov
jp
pop
rorl
jle
xor
outsl
push
negb
mov
and
hlt
out
fadds
add
std
cmpsl
lods
add
into
jbe
cs
sub
or
adc
dec
lods
repnz
xchg
add
mov
repnz
aas
std
enter
jp
aas
daa
ret
adc
sbb
test
je
jecxz
mov
lahf
jp
insb
out
lea
push
addl
xchg
in
ljmp
stos
or
sbb
out
jne
adc
ffree
gs
push
int3
dec
pop
push
mov
adc
jg
cld
cs
aad
add
sub
mov
cmp
push
push
sbbb
loop
into
test
addb
mov
hlt
or
arpl
aam
int
mov
dec
sub
out
scas
arpl
call
dec
popf
call
mov
pop
cmpsb
pop
aaa
cmpsb
or
mov
jp
imul
loope
add
fcomip
sbb
add
mov
jo
mov
adc
sbb
loop
stos
ficoms
js
mov
pop
sbb
xlat
cmp
sti
sbb
outsb
and
shrl
mov
sbb
sbb
int
cli
js
cmp
outsb
cld
cli
mov
push
mov
popf
push
jno
adc
mov
mov
lret
jecxz
and
nop
pop
add
xor
push
divb
jmp
or
sub
sbb
roll
aaa
dec
sti
mov
mov
inc
ret
pop
mov
test
mov
and
mov
sbb
cwtl
pop
or
imul
cmp
aaa
icebp
sbb
jae
xlat
sub
in
mov
iret
arpl
pop
jecxz
mov
jl
pusha
clc
dec
xchg
add
addl
adc
mov
idiv
add
pop
jb
rcrl
movsb
data16
test
mov
out
ja
fisubl
push
jo
cltd
dec
xor
jmp
jmp
lds
xor
imul
clc
xchg
or
push
xchg
and
and
add
fidivl
into
jnp
mov
lcall
je
cmp
xchg
int
ret
jp
movb
adc
push
stc
mov
out
pop
mov
rclb
inc
push
popf
jmp
push
cmpsb
mov
dec
ss
rcrb
mov
out
sbb
sub
mov
mov
sub
pop
push
pop
xor
scas
lret
sbb
rolb
xchg
or
ret
sbb
outsb
inc
addr16
jecxz
ret
push
push
pop
out
pcmpeqd
hlt
insb
sbb
cmc
or
push
xchg
aas
ja
nop
dec
lret
mov
ljmp
xchg
jne
and
repz
cwtl
dec
jnp
ds
int
jb
xor
mov
and
lock
in
jle
mov
pop
ret
pop
imul
lds
and
incl
xor
ja
ljmp
ret
fwait
rolb
dec
shlb
or
stos
push
fisttpl
test
push
xor
out
sbb
xchg
xchg
adcb
stc
enter
fsubp
or
out
test
popa
dec
mov
mov
or
cli
xchg
je
jecxz
cld
test
jp
fprem1
fbld
loop
mov
mov
mov
or
pusha
pushf
clc
stos
cmp
fldz
repnz
addl
mov
out
xchg
adc
fcomi
pop
repnz
dec
out
fisttps
xchg
mull
daa
xchg
in
jmp
stos
loope
cs
cmpsb
scas
gs
jbe
ret
pusha
xor
es
sti
aad
lahf
into
cmpsl
sub
aaa
push
dec
cli
jno
jno
fistpl
ss
cmp
adc
je
add
jg
sub
or
pop
sub
icebp
test
fstpl
scas
movsb
cmc
gs
push
iret
hlt
mov
inc
push
jp
lds
lock
int
dec
imul
ss
inc
aas
jns
test
aas
and
inc
mov
adc
cltd
push
xchg
enter
bound
std
imul
lret
cmp
cmp
out
mov
stos
cmp
xchg
xor
fisubl
pop
cmpsb
jle
call
jne
das
iret
push
mov
pop
pusha
mov
sti
adcl
and
movsl
xchg
dec
div
jnp
popf
adc
sub
aaa
out
adc
nop
jmp
aad
mov
cmp
jne
orb
xchg
or
inc
aaa
cli
sbb
cmpsb
ret
pop
lcall
push
pop
iret
mov
mov
push
mov
mov
fisubrl
xchg
or
bound
sti
pusha
test
xchg
outsb
add
orl
push
xchg
add
aad
dec
or
jo
aad
and
mov
xor
dec
lea
mul
sub
hlt
fnsave
outsb
adc
cmp
gs
in
repnz
and
jb
adc
test
in
negb
sub
rclb
mov
pop
loop
stc
jo
xrelease
xchg
cmp
jno
adc
lret
or
scas
das
fiadds
into
out
xchg
jge
xchg
and
rcrl
xchg
mov
icebp
clc
mov
ss
mov
fiaddl
dec
lahf
adc
pop
hlt
xor
mov
xchg
add
std
ljmp
imul
mov
pop
rcl
imul
pushf
pop
push
scas
fists
dec
test
cmp
sub
adc
inc
ds
rcrl
cmpsl
out
enter
add
pop
scas
mov
sbbl
test
les
mov
es
int3
outsb
mov
dec
mov
adc
xor
and
xchg
mov
push
mulb
out
and
sub
mov
mov
pop
mov
repz
in
repnz
fs
loopne
or
orb
sbb
mov
push
movsl
scas
daa
jmp
test
add
mov
cmpsl
mov
mov
stos
dec
cmpsb
dec
insb
mov
push
cld
aas
mov
push
lret
aaa
sarl
rcll
lock
adc
jno
xchg
mov
leave
and
cmp
mov
mov
mov
stos
jle
pop
inc
lods
jae
push
lcall
jns
icebp
push
les
pop
sub
fstl
testl
mov
dec
add
nop
test
arpl
push
sbb
cmpl
imul
jg
cmpsl
int
adcl
idiv
xor
xor
xchg
cltd
pop
inc
pop
aas
leave
scas
es
sub
subl
adc
mov
lods
push
scas
test
sahf
out
cli
dec
lret
gs
pop
bound
iret
fisttpl
cmp
xor
xchg
cmp
xchg
jmp
inc
push
aas
adc
les
fs
dec
insb
push
lock
adc
sub
hlt
xor
mov
je
je
mov
mov
or
cli
inc
push
jle
dec
test
incl
add
push
ljmp
mov
mov
fidivl
ds
push
sub
into
and
cmc
das
xorb
rcl
negb
cli
xchg
arpl
cmpl
int3
addr16
xor
mov
inc
shlb
push
roll
adcl
sti
shrl
and
inc
fmull
sub
lret
adc
inc
scas
mov
loope
jbe
pop
stc
enter
in
jne
adc
jge
daa
mov
shl
pushf
test
xor
jno
pop
push
and
cltd
mov
or
pop
notb
out
pmaxsw
xor
ss
int3
js
in
pop
push
xor
inc
fsubl
and
dec
push
fisubrs
fistpll
mov
out
sbb
push
negl
std
push
mov
push
fs
bnd
add
add
mov
or
mov
dec
shlb
pusha
or
xchg
test
or
aam
mov
addb
adc
in
xor
lret
add
out
fildl
inc
aas
in
popf
addr16
les
xchg
jns
push
and
inc
in
xor
neg
mov
adc
arpl
ljmp
cmpsb
jle
adc
adc
mov
arpl
xor
dec
fsub
mov
push
xchg
fs
stos
mov
pop
js
mov
in
movsl
inc
cmpsl
inc
push
xchg
mov
or
hlt
test
push
xor
and
xlat
mov
in
lock
shlb
mov
in
mull
arpl
mov
jne
arpl
pop
test
push
ret
add
in
jmp
mov
or
pop
aad
movsl
ja
inc
div
xor
rclb
out
mov
xchg
sarb
pusha
subb
out
sbb
lcall
hlt
fcmovb
jmp
icebp
clc
cmp
jl
push
shlb
les
stos
xchg
addr16
jmp
mov
pushf
sbb
sbb
mov
xchg
icebp
add
pop
sub
adc
mov
lea
cmp
je
lcall
fnstenv
xor
push
je
pop
fs
push
pop
ss
mov
jbe
ss
mov
rorb
rcl
push
xchg
push
loope
sub
rclb
testb
or
add
aaa
cmpsl
push
loop
pop
sub
out
stos
push
inc
mov
and
mov
or
hlt
xlat
aad
cltd
js
cmpsl
push
jecxz
int3
sbb
dec
inc
mov
jecxz
pop
dec
loop
inc
or
loope
or
rcrl
xchg
fnstsw
pop
mov
aam
inc
les
aad
pop
in
push
xchg
daa
jnp
push
test
sti
pusha
and
shlb
push
mov
addl
popa
call
push
push
sti
xor
outsb
cmc
mov
fs
cmp
daa
dec
fcompl
jae
leave
into
and
mov
add
jo
push
cli
fldenv
clc
loop
cwtl
lret
hlt
cmp
pop
test
outsb
or
sub
test
sbb
shrb
pop
outsb
stos
pop
dec
mov
push
loop
out
pop
movsb
or
jl
popf
or
jno
cmp
add
lahf
loope
loopne
hlt
imul
adcl
add
adc
inc
sub
shrl
lcall
jne
jmp
mov
fucomp
dec
iret
or
rolb
mov
xchg
sbb
sbb
push
cmpsl
insb
fcoms
or
pop
and
pcmpgtw
mov
arpl
repnz
cmpsb
and
xchg
xor
sbb
mov
movsl
push
cmpsl
shl
sbb
xchg
std
js
aaa
iret
mov
jge
pop
insl
mov
mov
mov
xchg
test
mov
clc
adc
insl
shll
inc
pop
pop
xor
jne
out
aas
mov
add
int
mov
divb
into
push
dec
nop
shlb
add
xchg
cld
sarl
iret
lret
cmp
mov
sbb
ds
jle
inc
imul
jbe
jge
pop
hlt
pop
fwait
push
cmp
add
xor
lret
jg
aaa
adc
jg
jecxz
cmp
sti
sub
loope
arpl
outsb
cmpsl
daa
dec
das
fisttpll
mov
leave
jb
mov
sub
cmp
divb
hlt
cmp
test
mov
pop
out
jno
fwait
ljmp
out
or
jae
mov
ficompl
imul
cmpsl
xorl
sub
daa
add
cmp
mov
iret
xorl
sub
cmc
lret
and
add
xor
sbb
inc
outsb
xchg
pop
lds
mov
add
push
lds
dec
jb
cmp
pop
shrl
in
xor
test
push
mov
sub
in
ljmp
pop
mov
rcrl
xchg
cmpsl
iret
outsl
pmulhuw
ret
aaa
stc
jo
xchg
mov
mov
xchg
add
push
xor
or
dec
rolb
mov
das
das
inc
cmp
fs
sub
and
dec
and
push
xchg
gs
mov
test
jge
call
mov
pop
cli
stc
adc
pop
aaa
fmull
fisttps
dec
aaa
adcb
ja
das
cmpsb
aas
movsb
xchg
mov
mov
and
fdivrl
es
xchg
dec
dec
mov
jp
roll
sahf
pop
add
lock
ja
cmp
lret
mov
outsb
ret
xor
mov
sub
lea
mov
gs
push
cwtl
xor
push
idivl
pop
pop
in
jno
jmp
mov
mov
insb
popa
push
fdivrs
subb
xlat
mov
insb
or
sbb
sbb
in
pop
inc
lahf
pop
fiaddl
mov
out
hlt
arpl
cmp
add
mov
adcb
mov
mov
sub
test
lock
pushl
mov
mov
stos
push
jle
push
popa
lcall
aam
rol
lcall
ret
mov
aas
or
adc
out
cmp
fs
mov
or
imul
jecxz
mov
mov
in
mov
lret
adc
ret
sub
cmpsb
test
sub
dec
push
dec
pop
sub
jp
jl
fstpl
pop
out
ficomps
push
adc
and
mov
push
insl
mov
sub
clc
adc
fptan
fnstcw
test
clc
test
inc
das
xlat
in
aad
mov
fmuls
fidivrs
jae
movsb
ljmp
fcomip
outsl
mov
mov
mov
lock
ret
jge
jo
xchg
fldl
add
cmp
dec
mov
jne
and
stc
popf
jmp
inc
popf
jg
jle
sahf
loope
das
dec
test
fsubrl
rorl
adc
imul
fwait
pop
lahf
inc
mov
int3
add
fadd
cmp
add
gs
jle
fs
out
push
and
jbe
mov
mov
pop
mov
dec
mov
push
inc
xchg
and
inc
add
inc
int3
sub
jae
mov
push
push
inc
out
or
addr16
and
mov
mov
fsts
and
xchg
dec
sbb
jp
fidivrs
cmp
jnp
aas
adc
ja
jne
and
mov
sti
or
adc
negl
push
jne
cmp
cmp
push
dec
inc
mov
push
fidivs
insb
mov
lea
out
pusha
sbb
mov
iret
xchg
push
lahf
in
ret
in
lcall
jo
xor
push
pop
push
sub
call
jmp
popf
imul
pop
inc
cli
inc
bound
pop
dec
cs
push
mov
popf
stos
pop
add
iret
sbb
xchg
or
push
into
out
and
jbe
add
pop
xchg
jmp
shll
xor
int
xchg
cli
ss
stos
dec
push
inc
inc
fiadds
gs
iret
hlt
lret
aas
xor
ja
les
and
bound
test
push
nop
push
mov
cmp
gs
jge
lret
stos
jns
ret
xchg
test
mov
les
dec
pop
outsl
lret
sbb
dec
dec
pop
push
das
jnp
imul
pusha
sbb
xor
fwait
or
pusha
cmp
fsubrl
mov
popa
mov
sub
mov
mov
pop
sub
mov
nop
fstl
push
shll
mov
sub
pop
and
fwait
das
pop
cmp
sbb
rorl
pusha
imul
insb
test
dec
sbb
lret
cld
xchg
push
into
lods
dec
jno
xchg
mov
cmp
bound
add
lret
sub
aam
mov
push
pop
or
loope
vmwrite
xchg
cli
or
jl
jle
jmp
mov
dec
pop
notb
push
icebp
push
mov
out
cmp
jnp
push
leave
and
dec
out
xchg
scas
lcall
pusha
fbld
lret
push
mov
xchg
pop
add
loopne
insl
mov
ret
jno
popa
or
aaa
inc
inc
cmp
pop
adc
leave
inc
out
cmp
cmp
popw
out
das
or
cmp
out
push
jle
roll
test
loop
xchg
daa
mov
cmpsl
add
stc
shll
mov
fimull
xchg
shlb
or
dec
fistl
adc
adc
test
jns
lock
push
cmp
dec
xor
mov
lret
push
and
pop
adc
cmpsb
int
jecxz
adc
into
adc
mov
mov
aad
fs
je
out
mov
mov
leave
cmpsl
ljmp
dec
mov
jae
mov
inc
adcl
mov
dec
inc
cmp
xchg
adc
js
mov
cmp
rcll
fdivrs
jl
xchg
sbb
sub
or
mov
hlt
mov
push
or
ljmp
leave
popa
fucomp
xor
push
pop
push
daa
add
out
dec
outsb
sbb
aad
inc
fisttps
jle
in
ds
sub
and
sbb
lods
push
cmpsb
sbb
push
out
adcl
cmp
clc
mov
sub
inc
movsb
insl
lods
mov
imul
pop
inc
mov
arpl
xor
hlt
push
xchg
adcb
pushf
ds
pusha
fsub
aam
ficoml
or
lcall
push
adc
repz
sahf
cli
jmp
mov
adc
jbe
lret
pop
xor
fwait
lock
cld
iret
adc
ds
or
dec
mov
mov
rorl
or
loopne
mov
in
mov
mov
mov
dec
add
add
xor
sti
mov
loopne
scas
inc
cli
sub
sub
cmp
test
pop
in
mov
adc
aam
dec
pop
pop
sarb
mov
pop
jp
pop
push
out
ljmp
out
int
mov
xchg
cltd
mov
out
js
lea
mov
mov
adc
int3
sbb
pop
scas
gs
movl
shlb
cwtl
lcall
stos
dec
fldl
out
sub
int3
stos
subb
mov
mov
add
lret
scas
and
icebp
insl
mov
js
test
mov
enter
mov
pop
xor
lods
or
out
mov
iret
mov
and
xchg
mov
lret
and
cli
out
mov
dec
inc
jmp
mov
out
jo
fistpll
dec
push
pop
xchg
addr16
inc
cmpsb
repnz
sbb
insl
fimuls
mov
inc
pop
and
sahf
push
and
std
and
shl
cmp
ja
add
xor
bound
cmp
xchg
pushf
jno
sbb
enter
filds
xor
pusha
mov
mov
pminub
cmp
xor
xor
sahf
test
push
clc
aad
xor
mov
subb
or
mov
xchg
or
repz
movsb
and
adc
pop
out
inc
sub
repz
outsl
leave
rcll
sbb
mov
mov
mov
cs
rorl
iret
inc
fsts
cmpsb
pop
and
cmc
and
repnz
dec
arpl
jbe
and
gs
ret
mov
lock
mov
pop
xchg
cmp
jo
push
and
aam
fldenv
test
mov
cwtl
es
andl
adc
jl
mov
lahf
inc
adc
xor
mov
lret
xchg
inc
rcrl
or
jo
mov
mov
ja
push
mov
in
sbb
js
mov
sub
jg
decl
test
in
iret
sbb
or
mov
mov
sub
ficoms
stos
leave
sub
cwtl
int3
sub
stc
cmp
loope
jae
shrl
adc
add
and
int
xchg
ja
stos
push
jmp
xchg
mov
xchg
and
test
inc
xorb
inc
push
adc
jmp
add
xorb
xor
pop
mov
mov
fistl
xor
mov
shlb
test
pop
mov
xchg
jp
cmp
daa
cwtl
add
notl
subl
xchg
push
das
mov
lcall
jge
push
jbe
mov
in
xchg
or
push
inc
aaa
pushf
add
lret
push
and
xor
insl
adc
aam
or
arpl
sub
pop
cmp
cltd
aad
inc
popa
stos
pushf
negl
cmp
ss
fdiv
pusha
sub
shl
push
test
outsb
scas
jb
or
cmp
inc
sbb
imul
pushf
adc
imul
shl
sbb
mov
mov
in
jle
lcall
or
scas
icebp
push
jle
or
or
incl
clc
insl
mov
and
inc
mov
popa
or
add
inc
jne
or
jmp
jle
sub
outsl
push
cmp
cmp
jo
mov
sahf
sub
dec
or
mov
dec
repz
inc
into
out
jle
push
int3
xorl
mov
pusha
inc
mov
out
ret
and
lds
mov
mov
inc
xchg
test
mov
mov
imul
stc
mov
mov
cmpsb
sub
cmp
insl
fidivl
inc
or
mov
cmpl
add
push
std
fdivs
nop
add
mov
or
dec
cmc
hlt
add
inc
aaa
sti
adc
rol
rcrb
jnp
inc
mov
pushf
js
mov
xor
scas
xchg
imul
push
jg
pop
daa
or
pop
xor
push
dec
repnz
lcall
inc
imul
scas
dec
mov
and
sub
add
insb
mov
mov
dec
cmp
outsb
imul
test
and
ds
ret
dec
cs
inc
mov
leave
pop
cli
cli
mov
dec
xchg
cmp
jg
adc
mov
cmc
add
and
xchg
mov
int
xorl
jbe
cwtl
cmc
cmc
push
push
cmpsl
sub
ss
cld
xor
mov
push
push
pusha
scas
inc
std
movsb
pop
aad
dec
cmp
enter
test
dec
adc
mov
hlt
cli
arpl
push
xor
fisttps
fistpll
pop
faddp
inc
jo
insl
icebp
and
lock
push
mov
in
shll
mov
mov
imul
shrw
dec
push
sub
sub
add
bswap
or
shll
pusha
lds
sub
mov
fsub
inc
jo
dec
xchg
leave
or
enter
push
mov
cmp
xchg
adc
popa
int3
pusha
inc
fadds
scas
loopne
icebp
jnp
cmpsb
add
popf
and
in
and
ret
fnsave
loopne
fsub
test
mov
push
jo
pusha
fcmove
push
push
dec
jne
test
and
shrl
in
sbb
mov
pop
add
lds
out
mov
adcb
xor
mov
bound
push
loope
add
jmp
mov
and
dec
clc
push
and
pop
and
inc
or
rolb
cmp
adc
loopne
test
aaa
call
cltd
mov
cmpsl
mov
push
push
test
hlt
push
hlt
xor
pusha
mov
mov
test
cltd
jge
cmp
xchg
push
sub
jbe
xchg
jo
push
mov
aam
push
lret
push
sti
mov
xor
push
mov
xchg
das
jnp
scas
pushf
dec
out
add
mull
sub
cli
push
jl
mov
add
das
cmp
jp
bound
and
lahf
xor
cwtl
mov
lahf
cld
movsl
mov
xchg
sahf
sahf
mov
insl
pop
xor
outsl
subb
jno
pop
enter
dec
push
or
mov
lods
pop
lahf
icebp
test
mov
mov
jns
xchg
cwtl
sbb
mov
idivl
add
mull
add
cmp
mov
insb
jnp
jb
addb
xlat
aam
mov
adc
testb
sar
jne
out
xor
inc
cli
ljmp
and
cmpsl
pop
xor
fwait
loope
stc
bound
push
adc
dec
push
das
mov
cmp
sub
int
xchg
pop
dec
jnp
push
cwtl
inc
sbb
mov
daa
jbe
arpl
and
out
testb
jne
sti
pop
jle
cmp
cmc
cmp
icebp
bound
addr16
mov
aam
push
pusha
imul
inc
enter
incb
jns
js
jno
pop
inc
jo
xchg
push
repnz
int3
rorb
pusha
and
notl
pop
sti
sbb
xchg
pop
in
push
pop
dec
sub
pop
jg
addr16
shlb
mov
push
mov
cmp
ror
mov
mov
imul
ret
es
cltd
adc
xor
in
test
aas
mov
scas
jne
mov
repnz
xchg
pushf
push
sahf
push
jecxz
andl
xor
pop
inc
dec
mov
mov
pop
or
pop
dec
xlat
popf
lret
or
mov
mov
fmull
mov
ja
dec
cmp
jmp
nop
jle
adc
lock
sahf
cmc
insl
and
sahf
mov
dec
cmp
xchg
je
js
add
cmp
push
ds
out
sbb
inc
adc
cld
es
adc
and
jmp
or
or
out
and
push
xor
and
and
fcoml
add
call
inc
pop
mov
inc
fwait
in
push
xchg
cmovs
add
ficoms
or
data16
fnstenv
cmpl
bound
mov
xorb
fidivrl
shr
lds
pop
sbb
xchg
idivb
mov
lahf
inc
sub
jne
aad
lahf
jno
mov
cmp
jne
push
ja
inc
jnp
jo
or
sub
cs
lgs
pop
or
sbb
mov
xchg
mov
dec
repnz
dec
dec
bound
mov
test
rcr
in
into
daa
xor
out
fmuls
lods
mov
scas
xchg
pop
scas
outsl
cmp
sub
adc
cmpsb
cltd
pop
test
pop
xor
push
fwait
jg
inc
jbe
jne
mov
xor
cmp
push
push
aaa
rorl
jns
fisubs
mov
pop
jmp
andl
dec
mov
inc
loopne
inc
ret
out
fisubrs
jecxz
push
sub
push
pop
test
push
cmp
or
mov
xchg
cltd
test
dec
jb
pushf
xchg
adc
pop
add
push
adc
fsubs
jp
sub
scas
mov
cmp
push
sar
mov
cmp
cwtl
insl
arpl
mov
cmp
jmp
sub
addr16
or
sub
jle
xchg
loop
shll
int
pop
loop
pop
ret
aaa
push
pop
ret
aam
lret
push
orb
int3
outsl
mov
adc
bound
fldenv
sub
cmp
xor
jbe
jae
andl
dec
jmp
pop
cwtl
arpl
sub
insl
mov
add
mov
fiadds
shrl
mov
ja
cli
mov
xchg
icebp
movsb
subb
fisubl
daa
arpl
in
xchg
and
or
inc
sbb
leave
add
mov
mov
int
ret
ret
cmp
leave
popf
clc
mov
lret
or
insb
cmp
cmc
dec
mov
or
fstp
mov
push
les
pop
nop
dec
in
pop
mov
daa
bound
aad
xchg
pop
push
outsb
inc
fs
cmp
stc
fs
mov
jb
push
ljmp
shrl
int
mov
xchg
divb
mov
in
sbb
jo
out
xor
shl
insb
xlat
xchg
outsb
out
imul
stos
movsl
into
inc
sub
fldcw
xchg
es
ficoms
xor
inc
adc
mov
out
loopne
leave
testb
push
insl
fwait
repz
lret
das
cmp
push
dec
fidivl
pop
out
mov
arpl
xchg
and
loopne
cmpsl
mov
loop
jl
scas
fwait
cmc
cmpsb
clc
dec
insl
out
mov
popf
sbbb
and
jnp
cli
in
push
aaa
sbb
mov
sub
cli
and
push
cmpsb
and
sti
mov
xor
in
jns
stos
add
lahf
xchg
mov
ror
mov
add
mov
shll
ffreep
sbb
js
mov
mov
cmp
mov
push
xor
pop
dec
pop
adc
pop
div
sub
lods
push
cs
inc
daa
or
pusha
int
add
pop
shrb
roll
lea
pop
and
gs
jbe
iret
int
mov
stos
test
rcrb
pop
pushf
popf
add
mov
fistps
es
mov
xor
mov
add
push
mov
jp
inc
gs
pop
imul
ficomps
addb
cld
in
jbe
imul
fidivs
call
jle
mov
aas
xor
pushf
cmp
dec
fs
lret
fisttpl
outsb
jnp
push
mov
cmp
sbb
or
fwait
jle
scas
xchg
sahf
sbb
push
pop
jmp
in
mov
sahf
pusha
movnti
shl
rcrb
add
inc
pop
jge
jg
sbb
fldt
daa
ficompl
je
lcall
leave
shrb
sub
data16
pop
and
loope
imul
stos
lret
dec
lahf
lds
frstor
sub
jp
cmp
cld
imul
rorb
xchg
out
nop
dec
mov
jo
xchg
in
test
es
xor
clc
xchg
jl
jnp
mov
inc
and
cmpsb
pop
xchg
cmp
sbb
push
pushf
stc
repz
dec
mov
fisttpll
sbb
je
xlat
out
popf
repz
lock
in
out
fistps
adc
push
inc
xor
pop
adc
ja
mov
ret
mov
mov
lahf
mov
mov
inc
enter
cmc
add
aam
cmp
mov
xor
mov
jno
cmp
fimull
inc
jae
adc
dec
test
test
xor
inc
push
shll
jecxz
cmp
sub
xor
inc
in
insl
mov
cld
movsl
xor
pop
pop
in
add
sahf
cmp
dec
lods
cmp
dec
push
dec
pop
mov
mov
xchg
mov
dec
jne
inc
loop
les
les
dec
mov
fidivrl
imul
push
in
mov
gs
push
aam
and
push
cmp
sbb
mov
jmp
dec
cmpsl
sub
adc
mov
mov
jl
out
out
push
and
lret
dec
pop
popf
mov
je
mov
lret
dec
xor
mov
iret
jp
mov
mov
xchg
sarb
hlt
jo
lahf
repz
jp
ljmp
fidivrl
inc
fildll
fstps
out
scas
lock
push
sbb
mov
popa
fsubl
rclb
test
out
pop
js
insb
sub
stos
rclb
cmp
inc
or
lods
adc
push
mov
mov
sarl
sub
adc
lret
clc
and
ds
inc
mov
cmpsl
mov
adc
insb
orl
cmp
or
push
sahf
test
loop
mov
push
push
cmpsl
push
mov
xchg
in
jl
mov
mov
popf
dec
push
cmp
xchg
lds
addps
cmpsl
hlt
push
or
cmp
test
mov
sub
cli
lcall
cli
pop
fcmovne
int
pand
dec
fdivl
sub
sbb
inc
outsb
pop
repnz
or
repz
push
push
xchg
mov
mov
call
movsb
mov
ret
ror
or
fstpl
jge
repnz
push
cmpb
xor
cmc
roll
mov
test
cld
aam
mov
push
mov
adc
mull
sbb
rcrl
adcb
push
adc
pop
or
pop
jp
add
popa
mov
mov
rclb
jns
aas
lahf
push
xlat
clc
and
cmp
enter
andb
or
icebp
cmp
xchg
into
or
aaa
addb
mov
inc
pushf
js
push
dec
ljmp
lret
in
inc
pusha
mov
mov
cmc
xor
imul
or
hlt
mov
inc
cli
jo
xchg
js
leave
fcmovnbe
cmpsl
dec
sub
stos
imul
jmp
test
xor
xor
mov
add
mov
cli
aas
outsl
sub
xchg
test
cmp
add
dec
fisttpll
mov
xchg
negb
xchg
jecxz
and
leave
ficomps
sub
gs
sbb
mov
add
out
and
inc
jecxz
das
sub
adc
mov
push
into
push
mov
mov
pushf
or
ret
insl
sbb
rcll
and
pusha
pop
ret
cli
aad
adc
xor
idivb
sbb
adc
mov
jge
out
sub
loop
ret
xrelease
dec
imul
push
and
lcall
test
mov
inc
ficoml
sbb
mov
je
and
arpl
add
out
jnp
add
jne
dec
into
jecxz
fucomp
leave
adc
dec
movsl
mov
fldcw
xlat
pop
jle
mov
repz
mov
push
loope
jl
fisttpl
cltd
cwtl
bound
ja
imull
fmul
mov
test
mov
or
sbb
mov
mov
pop
in
or
jl
jbe
adc
decl
cmp
rol
es
imul
sub
in
fcompl
sub
out
cmpsb
rcr
cs
cmpsb
ficomps
sbb
cmpl
jae
shrl
outsl
inc
es
jo
int
xor
adc
loop
pop
ss
aas
dec
xchg
sbb
sbb
push
add
inc
dec
lds
xchg
lods
dec
and
mov
inc
sub
lods
scas
aad
adc
cmp
lret
pop
sbb
cmc
push
aas
ret
or
and
leave
mov
push
pop
dec
sbb
lret
pop
fldl
in
jge
daa
xor
movsb
ds
or
and
xchg
cmp
ss
cmpsb
mov
mov
xor
and
add
test
int3
lea
jge
sbb
jmp
fldenv
push
xchg
pop
lcall
xchg
inc
mov
je
xchg
or
cmp
inc
push
xchg
sahf
cmp
movsl
jle
dec
mov
cmpsb
push
ja
lds
pop
xchg
scas
add
cli
dec
lcall
jns
jae
out
aaa
sub
lret
mov
sbb
sahf
dec
adc
pusha
pop
call
in
xchg
pusha
or
dec
iret
lret
stc
cwtl
cmc
pop
sub
lret
mov
push
sub
test
jnp
fstpl
mov
inc
jmp
mov
push
sub
loope
lret
sbb
fwait
jnp
add
mov
popf
sbb
aaa
dec
stos
mov
ds
fwait
data16
movzbl
and
cmp
mov
popf
push
pop
stos
mov
mov
sub
push
xor
clc
or
pop
fiadds
dec
xor
ljmp
sbb
ljmp
jle
and
sub
hlt
fbld
popf
in
lds
lret
cmpsl
ds
mov
fwait
addr16
inc
imul
scas
test
pushf
les
dec
test
jns
cmpsb
in
stos
xlat
xlat
icebp
and
add
cwtl
stc
mov
not
lock
cmp
sti
cmp
xor
jle
cmp
adcl
movsl
neg
mov
push
fildl
testb
push
andl
loope
mov
stos
sub
test
cwtl
test
je
and
xchg
cmp
fwait
pop
je
test
shl
inc
ja
add
subl
fwait
jae
xchg
outsb
std
jge
pop
pop
and
sub
lcall
push
popf
out
lcall
rorl
inc
stos
aaa
lods
mov
aam
add
sub
jmp
shll
or
int3
stos
push
inc
sub
mulb
aas
pop
jle
int3
or
punpckhbw
push
sub
repnz
jmp
stos
std
cld
hlt
jae
gs
cmpsl
sub
sbb
adc
mov
gs
nop
adc
dec
sarb
push
pushl
lret
data16
lahf
arpl
push
mov
imul
jb
mov
stc
sti
cmc
mov
cmpsl
dec
loope
fidivrs
xchg
dec
call
aas
cmp
lock
push
mov
or
fstl
xchg
inc
mov
xchg
out
mov
cmp
out
into
loopne
xor
shlb
dec
lahf
xchg
popf
cmp
and
loopne
dec
adc
add
pop
cwtl
pop
jnp
pop
ret
rorb
mov
movsl
fadd
fcompl
or
movsb
or
pop
mov
pop
dec
lock
push
or
adc
mov
mov
data16
loop
cmpsb
leave
cmc
jle
sbb
mov
scas
mov
cmpsl
mov
mov
les
ljmp
dec
shrb
mov
inc
push
sqrtps
repnz
lods
sar
mov
aad
dec
inc
repz
insl
pusha
mov
mov
cli
add
insb
int
dec
mov
or
push
jo
jmp
and
fwait
mov
fs
inc
subw
mov
insb
addr16
gs
out
mov
mov
or
lahf
ret
cltd
or
xor
scas
call
les
repz
dec
lock
into
cmpl
pop
dec
xchg
daa
movsb
inc
das
lods
test
inc
xchg
xor
cmp
xor
out
out
bound
xchg
test
out
push
fst
in
movsl
sbb
fstps
xchg
xor
ss
dec
out
xlat
dec
pop
and
xor
popl
xchg
int3
push
sbb
repnz
stos
loopne
loopne
out
in
jb
add
mov
in
test
mov
pop
xor
std
pop
jbe
out
inc
xor
jno
jl
fwait
pop
cltd
adcb
inc
jg
inc
jg
std
inc
je
push
inc
cltd
adcl
or
test
test
js
push
xchg
das
imul
sbb
fcmovnb
jl
lds
fldt
icebp
loop
cmpsb
cmp
sub
add
cmp
loope
sub
push
and
push
jbe
ficompl
mov
out
loop
jmp
push
or
fcmovnb
and
push
pop
jp
std
mov
pop
and
and
stos
movsl
notb
xchg
dec
ret
cltd
iret
cmp
addr16
insl
xor
mov
shrl
cmpsl
enter
jns
repz
push
mov
push
mov
jo
outsb
adc
mov
add
xchg
mov
outsb
dec
or
test
rclb
int3
dec
mov
cmp
gs
jae
int
enter
push
push
adc
imul
inc
add
mov
fisubl
sbb
cwtl
in
mov
aas
fcompl
sub
mov
jbe
fimull
inc
jne
mov
push
pop
mov
mov
cmp
xchg
or
cmp
push
push
push
inc
xchg
lret
adc
sub
jle
iret
cwtl
lods
cmp
dec
sub
rcl
jge
or
cmp
push
je
lret
pop
in
fs
int
ljmp
in
xor
bound
andl
fiaddl
xor
daa
in
jg
nop
mov
or
push
dec
data16
stos
icebp
stos
add
cmpsl
xor
xchg
cwtl
jl
cmp
repz
cld
fcomps
add
cltd
xor
lds
shlb
adc
out
mov
cli
nop
cmp
cmc
pop
or
pop
mov
dec
xor
add
into
mov
stos
mov
aaa
fs
lcallw
mov
pop
cmp
sbb
and
in
xchg
outsl
or
push
lods
xor
stos
xchg
and
cld
xchg
or
dec
jmp
frstor
insb
arpl
jae
mov
xchg
adc
dec
negl
lcall
shrb
fsubl
and
rorl
dec
mov
loopne
into
or
popa
xorb
jl
and
pusha
fistpll
inc
xchg
push
iret
dec
pop
dec
fwait
out
movsl
sub
addr16
rcr
mov
lods
sti
add
push
jnp
add
xor
xchg
cmc
int
cmp
sbb
int3
mov
lods
sbb
mov
push
mov
pusha
fs
mov
jecxz
aad
xchg
mov
test
sub
cmp
inc
jmp
lret
out
add
or
fildll
add
cwtl
mov
ret
addb
call
jl
out
inc
push
les
mov
icebp
push
in
adc
cmp
pop
in
shrl
int3
movsl
sti
lds
pusha
cmp
aad
jg
mov
push
in
mov
lods
xor
jecxz
popf
add
mov
loope
inc
xchg
test
add
cmpsl
jbe
mov
pop
jae
pop
andl
insb
add
jns
test
imul
sahf
adc
push
das
dec
sti
insb
xchg
pop
jne
or
rcl
jns
mov
test
into
dec
faddp
movb
xchg
addr16
ds
cmc
addr16
adc
dec
enter
adc
loope
or
leave
je
repz
add
and
and
cmp
fcmovbe
and
xor
lea
dec
mov
sub
mov
xchg
out
aad
test
arpl
or
jno
addr16
stc
xchg
mov
enter
mov
int3
in
ja
mov
sub
inc
inc
gs
bound
les
xchg
xor
ror
das
and
sub
es
jbe
xchg
mov
or
inc
fs
aas
dec
mov
pop
sahf
adc
loop
cmp
test
add
ret
pop
sub
jp
out
inc
or
inc
in
popf
push
push
mov
mov
js
inc
push
jne
retw
divl
dec
push
add
js
int3
push
dec
aam
outsl
les
jno
xchg
push
das
shll
les
add
cmpl
lods
sub
pop
nop
jp
mov
lods
adc
shr
jmp
cltd
pusha
in
add
int3
adc
cmp
addb
adc
aam
xchg
sub
pusha
hlt
mov
jge
mov
mov
test
push
sub
ret
test
ss
pop
icebp
addb
inc
sbb
sti
cmpsl
shl
xor
pop
jne
add
pop
stos
mov
stos
pop
ret
test
adc
and
pop
rolb
sti
test
sti
ljmp
int3
out
add
sub
xor
mov
rcl
adc
add
repnz
xchg
adc
mov
add
push
in
int3
mov
push
pop
addb
sub
sub
call
test
popf
mov
push
xchg
aam
ficomps
loop
adc
dec
add
sub
test
pop
or
pop
jmp
push
in
rclb
fnsave
mov
jne
test
mov
jo
pop
leave
mov
jno
sub
xchg
imul
mov
jnp
daa
or
pop
pop
ljmp
sub
mov
sub
fwait
nop
test
imul
scas
popa
mov
clc
sbb
shlb
ret
mov
daa
mov
mov
aam
and
or
out
jo
pop
jle
ret
in
cli
push
ret
xor
xor
adc
jae
stc
jecxz
into
addr16
sbb
cmp
mov
push
mov
mov
adc
jns
in
jno
out
mov
pop
cmp
fistl
mov
push
xchg
popf
callw
and
pop
push
fcomip
fdivrl
sub
insb
inc
jecxz
and
add
aas
ja
adc
mov
adc
sbb
adc
outsl
pop
clc
jno
cmpsb
cmp
push
dec
sbb
mov
cmpsl
loop
sarl
jge
xchg
push
in
jno
push
push
rol
jae
rclb
pop
push
das
out
cmp
into
inc
jb
mov
add
cli
ss
lret
movsb
pop
enter
ja
pop
js
cmp
mov
add
arpl
jecxz
mov
dec
js,pn
loopne
ret
push
sbb
jecxz
notl
xchg
or
mov
enter
aam
stos
dec
pop
ds
andl
cli
sub
push
add
les
popf
jnp
add
dec
jno
pop
mov
movsl
std
add
jnp
mov
and
fadds
icebp
leave
in
inc
add
dec
nop
mov
mov
jnp
gs
arpl
xor
in
fistps
add
xor
stc
jp
push
xchg
push
es
xchg
enter
ss
pop
sub
xchg
dec
cli
cmp
movsb
dec
into
or
mov
cltd
jbe
mov
movsl
scas
xor
or
cmpsb
iret
clc
rcrb
mov
mov
imul
add
and
mov
add
cwtl
cmp
dec
adc
add
inc
jg
hlt
pop
xorps
lock
sub
add
cmp
cmp
xor
mov
mov
es
jns
sbb
cs
aas
das
bnd
dec
bnd
inc
les
lods
mov
pop
pop
push
or
shll
repz
pushl
enter
mov
in
aam
jo
dec
loope
fsubrs
lret
jne
cltd
sub
in
inc
pop
pop
mov
pop
and
clc
bound
jns
out
test
bound
add
or
aam
xor
addb
hlt
flds
fsubrs
les
pop
cmp
push
daa
push
adc
out
imul
jl
pop
orl
mov
nop
xchg
outsl
add
jmp
cli
clc
push
and
jne
stc
es
mov
iret
shlb
cmpsb
sub
mov
mov
mov
outsb
repz
mov
jno
add
pusha
or
jmp
dec
mov
pop
sbb
in
inc
aad
pusha
push
sub
je
pusha
adc
cmc
fsubr
out
mov
stc
adc
mov
in
sub
test
cmp
jne
cmc
inc
call
fisttps
ret
popf
ds
jae
or
pop
xchg
mov
mov
int
pusha
dec
dec
out
xor
push
ljmp
testl
popa
sbb
test
dec
lcall
xor
cs
and
rorl
xchg
sbb
in
xor
movsl
xor
scas
jg
pop
popf
pusha
xchg
fs
ljmp
sub
xchg
mov
sub
cltd
mov
hlt
mov
jl
sbb
push
xchg
xorb
jge
cs
ret
movsb
gs
xchg
push
test
hlt
movsb
xchg
repz
ja
and
into
ret
lds
test
jg
pop
and
pop
mov
or
xor
repnz
ljmp
sar
ret
test
repnz
add
cmp
sub
dec
cltd
pop
sar
cmp
cltd
mov
mov
push
insl
sti
aad
popa
sarb
or
ljmp
push
enter
cmp
stos
push
sbb
imul
push
sub
lods
xor
cmp
out
cltd
fmull
pop
xor
adc
std
push
lea
es
es
sbbl
jno
pop
ror
aaa
adcl
andb
pop
sbb
subl
jae
push
jno
imul
mov
mov
in
fldt
cmp
push
adcb
pushf
adc
pop
cld
stos
call
hlt
hlt
xlat
and
xor
test
stos
mov
mov
outsb
fcomps
mov
and
js
fs
out
es
jae
jge
cmc
or
push
sub
or
in
jg
outsl
ret
test
mov
lcall
loopne
std
gs
fnstcw
lods
shlb
and
push
mov
sbb
scas
mov
mov
mov
and
adc
pop
jge
cmp
into
mov
lcall
pop
and
mov
xchg
imul
add
rorb
adc
cmc
aad
ret
fisttpll
xor
aas
loopne
test
and
rcr
fs
testb
xor
pmaxsw
std
sub
jb
fucom
imul
push
mov
outsl
mov
add
or
jg
jbe
addb
cwtl
pusha
jbe
cmp
inc
cld
andb
bnd
loope
or
push
imul
pop
inc
lods
push
or
hlt
pop
pop
pop
test
repnz
sub
inc
roll
rorl
movsb
xchg
jle
inc
stos
dec
jbe
mov
or
icebp
movsl
sbb
test
inc
dec
mov
dec
mov
add
lds
or
mov
and
fcmovbe
mov
sarl
test
cmpb
in
pushf
jno
push
and
dec
xchg
push
inc
add
and
inc
ja
pop
jmp
roll
out
mov
cltd
adc
jne
popf
aad
sti
pop
pushf
adc
sub
aam
fmul
push
stos
lahf
mov
inc
mov
mov
mov
inc
lds
xor
out
xchg
mov
xor
xchg
je
inc
repnz
pop
aad
fdivrs
mov
mov
aad
faddl
popf
lea
sub
adc
pop
pop
jne
and
js
nop
xor
ss
rcrl
insb
shl
mov
dec
jl
xchg
pop
push
outsb
sbb
aam
aad
lret
enter
push
or
ljmp
inc
fisubrl
push
mov
mov
inc
les
and
fidivs
fdivrs
jp
pop
cmc
and
cmc
xchg
xor
inc
cld
push
sbb
data16
xor
cmp
scas
iret
leave
testl
imulb
in
jge
jns
psllq
xchg
pop
les
into
leave
or
ja
xor
mov
les
xchg
jle
push
insb
xchg
rcll
addr16
jnp
pop
ljmp
inc
jno
sbb
nop
test
mov
push
js
mov
enter
push
aaa
out
gs
insb
jle
call
dec
add
add
mov
jne
inc
ss
test
mov
pop
xchg
sub
pop
fsubrs
mov
int
and
xlat
aam
sub
jno
xorb
imul
ljmp
inc
das
pusha
loope
adc
pop
lods
loop
xor
xor
push
loopne
push
xchg
cmp
pop
jmp
flds
test
jp
leave
inc
inc
xlat
mov
hlt
std
mov
dec
call
test
push
pusha
jle
jo
dec
dec
jecxz
fadd
push
push
push
jecxz
xchg
sbb
out
daa
lret
cmp
loopne
inc
add
iret
or
nop
mov
push
sub
pusha
addr16
adc
call
lods
jg
pop
jg
inc
jae
scas
push
mov
xchg
sarb
bound
inc
xor
incb
mov
fiadds
mov
cmp
push
fnstcw
scas
cmp
push
adc
pop
add
push
repz
dec
sbb
je
push
inc
adc
pop
int3
xchg
movsl
in
out
cmpsl
xchg
nop
ja
testb
scas
rcll
aas
popf
loopne
cmp
push
sti
jmp
mov
nop
cltd
push
xchg
inc
cmp
fbld
out
mov
dec
es
je
xor
jecxz
cmp
mov
jecxz
fisubs
mov
sub
fcoms
int3
push
outsl
orb
and
fsubl
push
pop
std
aaa
lahf
fneni(8087
ljmp
xchg
cld
pop
mov
gs
ja
jg
pop
std
jecxz
data16
xchg
inc
dec
or
mov
int
mov
loopne
cmp
dec
ljmp
popf
mov
sti
std
jecxz
icebp
addr16
inc
dec
ljmp
fdiv
cmovns
imul
inc
orl
setnp
aam
loope
and
pop
add
aaa
mov
ds
call
sbb
mov
arpl
stos
cltd
and
leave
mov
xchg
push
add
sub
repz
ficomps
xor
xchg
jmp
jle
cmc
insl
push
fadd
rolb
mov
adc
sub
xor
and
push
ja
clc
or
inc
xchg
jle
shll
add
js
outsl
andl
cmp
loope
adc
filds
das
inc
test
stos
sub
stos
mov
xchg
adc
stc
cmp
jl
xor
mov
add
sahf
xor
cmp
mov
shl
mov
xchg
inc
sarl
sbb
sbb
push
xor
arpl
data16
cmpsl
mov
fldcw
aam
sub
push
subb
rcrl
out
and
lods
lods
mov
lea
movsl
imul
add
inc
mov
les
std
lret
or
addr16
pushf
or
add
scas
fildll
das
hlt
shl
push
and
inc
lods
test
iret
out
fisubrl
adc
icebp
and
inc
mov
inc
andb
test
cmc
sub
int
arpl
dec
or
test
pop
test
mov
popa
orb
mov
push
jge
push
sti
mov
xor
fistps
mov
jle
dec
jp
sbb
scas
lret
pop
mov
lds
in
adc
scas
fcmovne
push
ret
mov
inc
push
cltd
shr
cli
sbb
loopne
rcr
push
sub
call
lret
sahf
stos
loop
ljmp
pop
mov
pushf
inc
movsb
rcl
or
cmpsb
xchg
ficomps
addr16
lds
pusha
adc
xchg
pop
dec
and
out
mov
jae
test
or
jno
jecxz
add
mov
push
sub
dec
mov
push
pushf
push
push
fs
gs
cmp
mov
mov
pop
sub
or
pop
inc
hlt
stos
out
jmp
or
outsl
push
das
imul
insl
fsubr
loopne
in
js
xchg
mov
mov
inc
dec
in
ja
xor
xor
xchg
inc
adc
scas
mov
mov
int3
cmp
test
mov
mov
adc
jo
xchg
mov
cmp
mov
jne
je
mov
fsubs
gs
mov
xor
cli
hlt
shlb
test
xchg
imul
es
pop
and
mov
nop
mov
aam
fistpll
cld
sbb
insl
jp
inc
test
negb
xor
mov
push
inc
hlt
movsl
imul
cwtl
call
std
pop
dec
mov
push
fisubl
push
add
jae
jmp
dec
nop
sbb
repnz
jg
js
dec
dec
outsl
jecxz
sbb
popf
cld
or
arpl
movsl
adc
rclb
xchg
fildl
icebp
push
cld
sbb
sub
call
push
in
nop
pop
leave
sbb
push
rcr
inc
jb
mov
xchg
aad
test
adc
pop
and
mov
sbb
mov
stc
aas
adc
in
outsb
mov
pop
sbb
mov
push
pop
pop
and
iret
in
sbb
insl
je
cmp
inc
mov
mov
dec
xchg
inc
xor
fistps
dec
shrb
daa
jno
cmp
ret
jbe
packuswb
xor
fcomip
outsb
mov
movsb
into
sbbb
icebp
mov
repnz
mov
movsb
ja
test
xchg
sub
rol
sbb
add
xor
es
fsubp
push
pop
adc
mov
insb
lret
sub
sbb
pushf
in
xor
mov
push
stc
pusha
xchg
into
pushl
sbb
jno
cmp
xchg
fimuls
cmp
inc
aaa
fnstsw
loopne
jnp
adcb
push
int3
dec
arpl
dec
dec
or
nop
cs
ret
xchg
hlt
cmp
sub
lret
mov
rcr
cmp
jno
iret
xlat
movsb
xchg
test
jno
std
imul
mov
stos
mov
pop
inc
xor
inc
dec
inc
jbe
mov
adc
stc
sbbl
icebp
xlat
out
mov
adc
dec
imul
or
loop
inc
or
test
mov
pop
repnz
xor
pop
sahf
pusha
inc
inc
movsl
shrb
out
inc
mov
xchg
adc
fisubl
mov
loopne
cmp
sub
inc
sub
adc
xchg
cmp
xchg
loop
negl
adc
into
mov
mov
pusha
sub
leave
jo
inc
or
js,pt
sub
xor
mov
mov
sub
fistl
fisubl
mov
push
jle
cli
mov
and
jb
in
subl
dec
cmp
xor
push
add
sbbl
cli
out
cmpsl
mov
ret
out
mov
cmp
mov
cmp
cmpsb
fisubl
inc
into
dec
fbstp
ds
shl
jnp
mov
xor
gs
mov
mov
xorl
jmp
add
shrl
xchg
bound
jno
push
jb
into
sti
pop
push
int
jl,pn
jl
mov
xor
pop
or
pop
iret
sub
jo
in
iret
movsl
popf
cmp
cmp
mov
flds
mov
ss
mov
ljmp
xchg
mov
push
push
mov
fldcw
lret
push
dec
sbb
jb
mov
jge
std
cmc
rcrl
mov
les
push
mull
xchg
clc
xchg
aas
xchg
xor
insl
daa
out
xchg
dec
lods
cmpsl
out
mov
jnp
mov
sub
ret
test
out
popa
int
adc
jbe
into
sub
sbb
pushf
cmp
and
push
mov
and
push
ljmp
inc
js
loop
jns
mov
popa
dec
mov
add
imul
or
push
mov
inc
outsl
mov
rcll
push
imul
negb
xlat
pushf
or
aad
mov
data16
add
shll
and
pop
js
sub
jmpw
sbb
inc
lahf
fcompl
jns
sub
aad
push
sub
add
cwtl
in
sbb
iret
gs
mov
int
jp
jae
call
das
inc
xchg
or
gs
sbb
neg
in
cmp
jg
jne
cmp
test
stos
movsl
shrl
adc
lods
pop
cmpsl
je
out
cmpsl
pop
inc
lea
jo
js
push
in
jb
cmp
lds
mov
dec
insl
mov
or
outsl
or
popa
dec
xchg
insb
repnz
push
adc
sub
mov
jmp
leave
or
test
mov
dec
call
adc
dec
push
mov
or
mov
pop
shrl
mov
sbb
dec
mov
iret
xlat
jecxz
mov
add
ror
xchg
lcall
push
arpl
lahf
xchg
mov
sahf
mov
pop
lcall
lock
jns
pop
or
in
and
out
mov
sbb
push
sbb
dec
pop
jmp
and
into
sub
ret
xchg
mov
movsb
out
int
popa
xchg
jg
dec
loopne
fistpll
push
je
adc
jmp
and
push
dec
xchg
inc
sub
gs
jmp
sbb
fsubl
pop
dec
leave
call
mov
pop
cmpsl
cmp
pushl
hlt
xchg
and
mov
fnstcw
fstl
iret
popf
push
sbb
imull
push
fidivrs
hlt
shl
xor
push
sarb
daa
push
fmuls
cmp
out
mov
test
xchg
cs
ret
or
xchg
cmp
in
mov
cmc
dec
cmpsl
pop
into
arpl
fbld
xor
sbb
mov
or
cmp
mov
xor
sub
lds
dec
dec
ja
rcrl
movsb
lock
les
iret
sti
mov
enter
inc
mov
pop
ret
jmp
sbb
cmp
loop
pop
pop
or
aaa
loop
hlt
xor
push
mov
stc
in
mov
rorb
mov
aad
add
loop
fimull
stos
nop
test
insl
xchg
push
cmp
pop
jnp
xchg
stos
ds
sar
or
out
or
xor
adc
sbb
test
fidivrs
fadd
daa
xchg
cmpsb
pop
adc
sarb
jbe
sbb
outsb
loopne
aam
adc
loope
mov
or
dec
push
nop
out
cmp
dec
pusha
xchg
xchg
or
inc
adc
fisubrl
aam
jp
cld
mov
mov
outsl
jmp
sarb
dec
sub
and
and
negl
gs
rol
les
sbb
mov
dec
dec
mov
jle
stos
dec
sbb
mov
push
cmpsl
test
incb
ret
sahf
lock
sbb
pop
pop
pop
mov
xchg
imul
cli
dec
mov
inc
push
js
scas
sub
push
gs
cltd
sub
jne
mov
sbb
cld
repnz
jnp
aas
loope
xor
aam
jnp
sbb
stc
jle
scas
lea
xchg
gs
out
jp
in
dec
lock
clc
cmp
rorb
sbb
jp
fisttpl
fdiv
fimull
mov
sti
inc
filds
xchg
js
add
cltd
adc
aad
add
pop
std
sub
nop
xor
mov
jg
ret
je
mov
push
test
xchg
es
insb
scas
inc
cmpsl
enter
imul
lods
cli
add
pop
scas
mov
and
gs
test
repnz
jge
jnp
addr16
xchg
or
lock
push
bound
pop
cmc
cmp
je
jmp
adc
jns
fmull
and
inc
jnp
mov
test
jmp
mov
mov
pop
sbb
std
cs
mov
mov
pop
ret
jbe
and
pop
lret
jecxz
es
or
stc
fisubrs
fdivl
dec
repnz
mov
xchg
imul
out
or
xor
and
lock
mov
jge
mov
dec
and
lods
xchg
negl
push
jge
cmpb
pushf
outsl
jns
mov
pusha
adc
jbe
jno
out
push
jo
outsb
push
flds
imul
or
scas
inc
sub
and
mov
adc
lods
sub
sub
shrl
dec
pop
cmc
mov
in
jnp
dec
test
in
imul
call
xor
outsl
int
shll
inc
push
push
flds
movsb
lock
call
test
fwait
xchg
inc
push
shll
xchg
das
mov
pusha
mov
jno
cmpsl
mov
fisubrl
roll
out
or
in
repz
xor
cmp
enter
cmp
test
test
jp
mov
mov
jo
test
and
aad
pop
mov
in
movsb
addr16
adc
cld
dec
scas
stos
stos
das
and
fwait
jo
mov
ljmp
push
fidivs
jo
ret
or
push
arpl
xor
push
shrb
adc
mov
pop
push
hlt
xchg
pop
idivl
jb
int3
xor
sub
loop
and
xlat
mov
sbbl
push
test
daa
xchg
jns
pusha
in
jno
std
fsubl
fdivrl
xlat
rcl
xor
push
add
scas
in
ret
popa
xlat
dec
fwait
lret
jnp
outsb
lcall
xchg
rcll
cs
add
inc
jnp
insb
jp
je
mov
hlt
push
pushf
int3
es
push
xchg
dec
pop
push
mulb
ss
sub
push
outsb
adc
push
inc
aaa
sub
mov
adcb
push
in
push
test
push
rcrl
xlat
jb
inc
lahf
dec
xor
xor
push
int
leave
scas
idivl
data16
dec
rorb
xchg
aas
push
push
out
sub
dec
fs
test
mov
inc
fldenvs
inc
jbe
jno
xchg
cmp
push
xchg
and
clc
fld
adc
and
roll
mov
fs
push
add
pushf
clc
push
fildl
pusha
mov
push
xchg
sub
mov
fs
lret
into
mov
sub
lods
add
mov
mov
sub
xchg
sahf
xchg
mov
adcb
mov
in
das
fmull
jne
xor
call
jmp
push
adc
mov
int
dec
xchg
push
fninit
mov
outsb
xor
insl
int3
sbb
iret
inc
add
cmp
pushf
hlt
nop
jecxz
cmp
sub
pop
cs
cmp
int3
and
fsub
repz
orl
leave
js
inc
fwait
xchg
cwtl
js
aaa
sub
mov
mov
xor
lods
imul
rol
in
cmpsl
mov
pop
add
cmp
pop
mov
sub
cltd
adc
leave
popf
cmp
cmc
aam
or
push
xchg
int
iret
sub
push
cld
aaa
imul
sahf
arpl
hlt
leave
adc
fisubl
aas
and
xchg
adc
inc
push
ljmp
xchg
hlt
add
ds
sub
cli
je
inc
mov
adc
or
icebp
jnp
sbb
xchg
adc
jle
js
or
cld
xor
or
sub
fidivs
std
lea
inc
push
push
mov
in
pop
outsl
mov
jmp
sbb
inc
or
ret
or
loope
jecxz
loope
jnp
test
rorl
sub
add
fadd
mov
jmp
imul
push
inc
mov
mov
imul
call
inc
sti
jae
enter
daa
sub
cltd
aaa
dec
jo
insl
sbb
xlat
loop
push
rcrl
call
adc
int
or
cs
shl
add
leave
dec
mov
jmp
push
stos
arpl
mov
pop
cmp
jnp
pusha
insl
and
jo
cmpsl
in
call
mov
mov
sub
testl
mov
call
ljmp
fwait
or
or
jg
push
xchg
mov
andb
inc
jl
push
sbb
pop
xchg
imul
rclb
mov
cld
test
cmp
loope
imul
xchg
aaa
lods
mov
shll
iret
adc
push
fidivrs
int
inc
adc
mov
adc
pop
es
and
jnp
adc
shll
aaa
ret
insl
mov
lds
jecxz
mov
popa
hlt
orps
mov
mov
inc
push
pop
inc
ljmp
push
fadds
fs
sub
jb
dec
cmp
nop
xchg
iret
pop
addr16
std
sbb
lcall
lcall
xlat
js
cltd
mov
jbe
mov
sbbl
js
test
push
xchg
or
repnz
fadd
stos
add
lcall
jnp
sbb
gs
ficoml
pop
int
cld
sahf
lret
jge
lcall
enter
or
xchg
je
sbb
hlt
lcall
aad
iret
inc
ret
xchg
std
lods
lcall
fwait
mov
add
or
jo
stos
or
aad
or
push
pop
outsl
mov
xchg
add
push
mov
pusha
loopne
sub
mov
xchg
iret
fcomps
cmp
pop
dec
lret
imul
lret
xchg
pop
lret
div
mov
call
mov
mov
pop
insb
sbb
rol
aaa
inc
sahf
enter
stos
or
loope
repnz
jle
cmpsb
jle
mov
mov
cli
pop
loope
dec
adc
nop
xor
push
mov
test
xchg
repnz
adc
push
sub
out
adc
mov
repnz
and
push
stos
cmc
jl
add
stos
fwait
adc
or
mov
xor
xchg
orb
test
call
mov
cs
sbb
adc
mov
xchg
jb
push
incl
jmp
lcall
add
pop
fdivrs
and
push
lret
aad
loop
xchg
mov
pushf
outsl
cmp
ret
mov
adc
mov
cs
adc
cmc
sub
popa
dec
addr16
jo
xlat
movsb
loope
or
ficompl
loopne
dec
test
adc
imul
inc
sbb
xchg
call
mov
icebp
lcall
movsl
cli
pop
cmp
lock
mov
pop
xchg
jne
add
pop
sti
sub
addl
cmpsb
push
scas
push
rcrl
and
jnp
push
aam
fbld
shlb
std
mov
dec
xor
sub
fucomip
dec
scas
fsts
xchg
cmpsl
inc
mov
loope
mov
fcompl
cld
fistps
vmaxpd
sbbl
xchg
sbb
fstpt
addl
and
imul
sub
sub
rep
inc
repz
sub
sub
adc
int3
dec
or
lods
int
cmp
mov
dec
mov
mov
pop
pop
push
aas
pop
out
inc
jmp
pusha
lds
cld
add
and
ss
xor
into
jp
enter
mov
jecxz
or
inc
sbb
dec
push
push
push
lret
push
xchg
mov
int
es
std
stos
add
push
std
mov
call
filds
cmpsb
xor
pop
scas
sbb
mov
loop
sub
xchg
jb
mov
xor
and
scas
add
fdivl
sub
and
xchg
dec
xlat
pop
or
sub
adc
loope
fstpl
pop
icebp
fsubrp
loope
mov
cmp
cmp
jp
mov
outsl
sub
push
mov
fwait
or
or
int3
imul
or
mov
dec
mov
cwtl
or
mov
cmp
jp
lcall
mov
jne
mov
pop
lods
movsl
gs
jge
xor
add
sti
mov
mov
lahf
adc
cmp
push
es
clc
sub
outsl
sub
rorb
inc
repz
jbe
push
adc
cmc
push
cmp
cli
or
sub
push
push
ret
jg
sub
adc
aaa
rcl
add
push
aas
cld
int
add
and
in
sub
sbb
sahf
or
add
jns
clc
add
jne
insb
movl
setp
cmp
pop
out
inc
mov
jae
insl
sub
mov
or
negl
lea
add
insl
mov
pop
mov
xchg
xchg
or
xchg
inc
fiaddl
in
imul
cmpsb
aam
in
jne
mov
test
xor
fsubs
scas
cwtl
xchg
in
insl
daa
fwait
xor
js
mov
adc
std
dec
lock
outsl
dec
ss
cs
cmpsb
mov
jge
jnp
ljmp
int3
ljmp
repnz
daa
daa
outsb
xor
enter
push
pop
xchg
jae
insb
dec
jg
sub
lods
add
mov
repnz
sbb
xor
sti
loope
mov
dec
push
adc
in
js
pop
inc
cmp
ret
pop
leave
mov
pop
sbb
movsl
mov
bound
mov
int
sub
add
sub
push
pop
dec
movsl
int
enter
arpl
aaa
nop
adc
xchg
fimuls
lea
pop
ds
sub
lret
movsb
push
jle
and
mov
sbb
movsl
xchg
call
jle
scas
inc
inc
jnp
sbbb
scas
hlt
or
add
cmpsl
js
cmp
sub
les
and
leave
pusha
xchg
push
pusha
pusha
mov
aaa
fsub
jmp
stos
sbb
xchg
inc
mov
push
mov
testb
dec
and
shlb
inc
cmp
push
aaa
sbb
pop
adc
fildl
and
xor
mov
in
sub
pop
sub
fcoml
idivl
loope
dec
test
imul
mov
scas
xor
push
cmp
fisttps
adc
mov
lds
xchg
dec
cmpsb
pop
sub
push
inc
dec
inc
xor
xor
sahf
or
xchg
pop
lds
notl
mov
pop
pop
pop
mov
push
jbe
fmuls
clc
inc
mov
enter
mov
enter
cmp
push
xchg
xchg
sbb
rcrb
es
lret
les
xlat
mov
cmpl
gs
fnstenv
xor
ret
sub
add
or
out
push
and
dec
xchg
lds
add
xor
jge
xchg
dec
inc
fisubrs
cmovns
data16
adc
push
in
sbb
imul
add
sbb
xchg
fdivs
test
sbb
inc
inc
push
cmp
lcall
dec
sbb
mov
shll
out
mov
or
pop
fidivrl
adc
dec
fdivs
adc
adc
push
pop
sub
shlb
imul
xchg
ljmp
sub
lret
push
loopne
mov
jns
mov
stos
sub
and
adc
inc
int
mov
subb
out
xor
test
cld
lcall
cmpsb
mov
sbb
cmpsb
or
jmp
adc
int
xchg
sbb
mov
pop
jo
lods
pop
flds
add
jns
rolb
outsb
out
inc
dec
mov
add
mov
mov
pusha
sbb
daa
repz
sbb
js
xchg
nop
mov
insl
iret
mov
int
and
insb
sub
sti
scas
movsl
push
fnstenv
add
mov
repz
xor
fadds
lcall
popa
push
mov
jl
push
or
outsl
fldt
lods
dec
xor
lret
dec
scas
jae
or
xchg
cmp
int
mov
lcall
aad
int3
sub
test
pusha
fwait
data16
jbe
stos
test
fnsave
or
add
mov
test
ljmp
ret
add
inc
cmp
mov
mov
pop
pop
aas
test
push
imul
repnz
dec
icebp
sub
movsl
xchg
rcll
adc
jecxz
out
cmp
sub
int3
xchg
pop
ret
inc
sub
mov
in
jecxz
das
icebp
divb
popf
mov
mov
add
aaa
xchg
push
xor
push
cli
rolb
lret
mov
cli
shll
cltd
mov
adc
negl
mov
mov
aas
test
jnp
or
pop
mov
rcrb
dec
add
repnz
roll
and
mov
mov
mov
ljmp
xlat
cld
jl
push
gs
mov
adc
sbb
rcrb
shrb
lret
add
pop
out
adc
loopne
xor
xor
rol
out
jo
sahf
jle
outsb
jle
xchg
push
push
mov
dec
stos
aad
push
cmc
push
pop
aas
pusha
icebp
xchg
and
pop
xor
mov
xor
push
sbb
aaa
mov
adc
sub
movsb
mov
bound
sub
aad
outsl
sub
jo
stc
inc
aaa
cltd
mov
jb
stos
xchg
scas
cmp
adc
call
scas
sbb
sbb
jb
leave
ja
or
inc
inc
or
mov
jp
jmp
jnp
sbb
sub
pop
lock
cwtl
insb
pusha
aam
faddl
mov
ret
mov
out
xchg
or
adc
mov
xlat
dec
xchg
xchg
jbe
setb
inc
mov
icebp
and
cltd
push
test
push
mov
sbb
cli
push
ljmp
cmp
inc
fbstp
sbb
out
in
mov
cmp
and
mov
pop
cltd
push
add
cmp
mov
cs
es
and
push
sbb
js
add
adc
dec
add
push
scas
pop
or
aad
rcrl
pop
mov
mov
dec
dec
push
cli
cmp
fldenv
mov
add
inc
jecxz
cld
outsb
mov
loop
into
inc
mov
cmc
jmp
push
inc
cmp
and
mov
mov
scas
insl
mov
pop
sub
push
rcl
enter
ss
cmpsl
or
push
addr16
ret
ss
das
pop
ja
clc
fldln2
jmp
inc
jo
icebp
lcall
cmpsb
dec
xor
lahf
popl
iret
in
and
sub
out
push
jae
in
adc
jp
push
popf
shlb
aaa
imul
test
test
mov
imul
sub
or
push
adc
mov
ret
ljmp
mov
jae
or
aad
cmp
inc
pop
xchg
js
aad
stc
in
mov
push
cmp
clc
cmp
lret
lret
xor
fcoml
leave
pop
mov
out
or
or
and
pop
mov
inc
ret
movsb
dec
or
and
ret
stos
push
sahf
push
push
lret
push
xor
xchg
popl
movsb
and
sub
add
outsb
insb
frstor
xchg
outsl
and
cmp
stos
cmpsb
ss
jne
ret
lcall
cld
sub
sbb
jo
mov
pop
and
stos
jmp
aam
adc
jno
lods
rclb
pop
insl
jl
lods
es
mov
adcl
sub
rorb
nop
mov
jno
push
pop
imul
inc
lea
test
push
cmp
jp
lea
scas
push
pop
sub
les
repz
pop
mov
daa
sub
mov
inc
sub
push
into
and
mov
dec
mov
stos
push
in
or
subl
jae
xor
jb
or
ret
mov
dec
or
inc
cs
iret
jns
rcr
xor
sbb
cltd
push
lods
and
cmp
and
mov
stos
push
adc
jl
pop
add
jecxz
and
xchg
gs
sbb
leave
arpl
in
fnstenv
jge
dec
jmp
rorl
cmp
adc
sti
cwtl
adc
pop
xchg
rorl
xor
mov
out
pop
push
mov
mov
sub
xor
cmp
add
mov
pusha
in
out
int3
in
pusha
add
push
int
popa
andb
or
iret
jo
inc
sub
and
cmpsb
pop
and
lea
fsubrl
faddp
outsl
mov
cmp
cmpsl
cwtl
outsb
pushf
jmp
mov
mov
mov
jne
pusha
jns
test
int3
enter
xchg
mov
lds
stc
stos
mov
lret
mov
icebp
out
adc
shrb
in
xchg
push
arpl
jge
xchg
mov
jmp
lock
cmp
push
jecxz
daa
mov
shll
jo
aas
mov
xor
inc
ret
bound
xchg
or
sub
cmc
sti
push
sub
jge
test
adc
test
std
cmp
lds
and
cmp
or
fdivs
popa
test
clc
lahf
dec
xor
xchg
flds
sahf
inc
push
mov
dec
jo
in
cmpsl
aam
repz
cmp
mov
push
bound
jp
mov
mov
les
mov
sbb
mov
dec
jl
cmpsb
lcall
rcll
inc
es
cmp
push
jl
loope
pop
dec
mov
sti
cmp
cs
or
jae
scas
adc
hlt
addr16
xchg
push
or
je
ja
cmp
in
push
lcall
and
mov
adc
lahf
cmp
daa
or
aad
or
rolb
cmpsb
test
sahf
adc
push
mov
sbb
lds
mov
cmpl
dec
dec
imul
in
fcompl
xchg
adc
lret
mov
push
push
pop
jae
xor
adc
adc
pop
insl
and
clc
faddp
inc
jo
ret
cwtl
daa
xor
jae
jmp
iret
lret
dec
jge
fldl
scas
push
sbb
pop
lock
jbe
pop
cwtl
dec
sub
outsb
fstpt
addr16
jae
mov
lds
sbb
pop
pop
xor
lea
dec
push
out
add
scas
addb
or
jno
insl
or
pop
test
gs
xchg
add
mov
sbb
jl
xchg
jge
test
dec
add
cmpsl
int3
mov
sbb
aas
lcall
test
adc
addr16
mov
jno
insl
pop
cmpb
fisubrs
in
das
movsl
and
cld
shrl
loop
outsb
inc
mov
xchg
and
mov
movsb
mov
test
cs
xchg
inc
fistl
ljmp
inc
mov
pop
sub
xchg
clc
in
push
enter
xchg
cmp
lahf
push
push
xchg
nop
incb
or
xor
out
sub
xchg
jb
pop
cmp
add
leave
jo
jmp
gs
sub
or
stos
adc
and
inc
or
xchg
mov
fs
xor
pop
mov
stos
and
cli
xchg
mov
adc
movsb
mov
inc
or
fistps
inc
lret
cwtl
xchg
adc
add
add
add
out
mov
mov
add
es
and
sub
je
pop
mov
adc
stos
xchg
and
jmp
outsl
sbb
fwait
mov
xor
shll
ret
jae
sti
test
lods
mov
sarl
into
xchg
scas
ja
jg
mov
dec
jo
enter
and
sub
ret
in
cmp
dec
dec
scas
add
in
and
in
xor
jmp
mov
ja
addr16
xchg
and
jbe
mov
fstpl
test
scas
jp
outsl
ds
jb
rcrb
icebp
xchg
jl
pop
inc
pop
xor
ja
jb
add
fs
or
lock
mov
pop
jle
inc
cmp
pushf
mov
dec
xchg
ss
orb
lret
jge
pop
repz
cltd
fcomi
pop
insb
xor
lahf
lahf
jns
popa
cmp
cmp
push
mov
or
cmp
orl
adc
fisubrl
push
aaa
push
push
outsb
fstps
add
mov
in
mov
shl
lcall
jo
push
test
mov
adc
mov
out
rolb
aaa
and
pop
jl
inc
daa
subl
ja
sbb
stc
cmp
mov
cmpsl
mov
and
lcall
insl
xor
push
dec
cli
mov
push
jp
loop
mov
dec
push
cli
inc
jnp
enter
push
data16
xchg
sub
test
lea
add
sub
xor
xchg
in
cli
inc
ret
in
lea
nop
sbb
jle
es
mov
daa
sbbl
daa
data16
xor
push
mov
jb
cmc
jg
jnp
xchg
mov
or
aaa
push
stc
out
ret
mov
in
lods
stc
sub
add
dec
int
and
loopne
out
mov
dec
pop
pusha
in
iret
bound
in
lret
mulps
push
fcmovnu
or
fistl
xlat
loopne
je
push
dec
push
sbb
lds
xor
inc
xchg
add
testb
xchg
fldenv
cmp
mov
fwait
mov
jne
popa
cmp
les
das
lret
pop
icebp
xor
cmpsl
and
mov
cmp
lods
pushl
ss
or
mov
mov
adc
or
mov
jmp
mov
push
lret
xchg
mov
dec
ds
jp
inc
enter
jle
stos
fs
daa
fisubl
fidivrs
xchg
lea
pop
call
mov
mov
and
jnp
das
stc
sub
mov
clc
clc
fistpl
adc
ds
sbb
rolb
mov
add
jecxz
sbb
push
ss
lahf
lret
cltd
inc
mov
cltd
pop
cltd
ljmp
xlat
aad
into
andl
cltd
pop
std
aam
xchg
mov
or
mov
lea
gs
sbb
int
scas
aad
add
jg
or
pop
ljmpw
dec
fxch
cld
pop
lods
lock
push
leave
insl
pop
push
jecxz
or
lret
int
scas
jmp
push
xor
adc
subps
in
inc
rorb
jns
xlat
push
int3
aaa
jl
sub
aas
xor
mov
sarb
pushf
aad
fs
leave
jecxz
repnz
outsl
stos
daa
lods
rcl
dec
sub
pop
inc
std
stc
push
insl
les
mov
movsl
push
mov
inc
or
sbb
inc
test
jg
cld
mov
xor
arpl
mov
adc
mov
fisubrs
mov
push
icebp
mov
jno
adc
mov
pop
add
lock
int
arpl
int3
add
jo
inc
es
popa
aad
aam
insl
dec
in
push
cltd
xor
push
fbld
pop
inc
sbb
stc
xor
sbb
mov
or
dec
cmp
and
inc
xchg
pop
cwtl
movsb
fldenv
jns
das
push
cmc
in
in
lahf
scas
in
pop
out
jecxz
fsubl
scas
fs
sub
push
dec
push
test
loope
lock
cltd
out
test
xchg
movsb
sbb
test
dec
test
push
xorb
cltd
add
mov
aam
ljmp
loopne
lahf
or
daa
popf
js
mov
cld
and
shrb
nop
leave
scas
mov
daa
mov
dec
or
aad
dec
inc
jg
dec
lcall
push
adc
je
and
fcompl
out
dec
test
ja,pn
push
mov
and
jnp
mov
pop
lock
cltd
repnz
lahf
cwtl
stos
push
clc
adcl
add
jge
cs
das
out
and
sbb
pop
push
xchg
mov
dec
repnz
fwait
push
cli
dec
adc
loop
in
cs
mov
inc
testb
pushf
cmp
adc
or
addr16
push
out
loop
mov
adcb
adc
xor
int3
dec
outsl
insl
mov
stc
add
xor
lock
cmp
jbe
mov
mov
dec
pop
sbb
arpl
jp
inc
lods
mov
arpl
std
push
divb
dec
xor
and
sub
mov
ret
jne
push
loopne
idivl
std
mov
push
push
xor
mov
int
xor
push
test
jno
lods
leave
mov
fabs
popa
movsl
fldt
jecxz
outsb
push
sub
fnsave
aas
inc
mov
push
faddp
stos
dec
jecxz
and
or
sub
nop
enter
out
imul
push
xor
insl
fdecstp
inc
push
rorl
adc
je
sbb
jge
out
xor
dec
mov
ljmp
or
movsb
xchg
or
jnp
mov
xchg
pop
xchg
ds
sub
add
mov
insb
andl
cli
add
scas
pusha
lds
mov
nop
out
or
call
jbe
push
inc
nop
or
stc
pop
add
insl
jmp
out
jnp
jl
mov
addr16
in
stc
scas
ret
out
push
outsl
cmc
emms
jnp
xchg
ljmp
lahf
in
adc
push
push
in
shl
ljmp
pushl
or
push
push
repz
pop
push
les
sbb
dec
adc
out
orb
push
cmc
inc
popf
pop
add
enter
jge,pt
adc
dec
in
sbb
lods
stos
cs
cld
push
cmp
push
rcll
mov
push
out
push
cmpl
arpl
xchg
daa
dec
pusha
scas
cld
inc
movsb
arpl
push
orb
mov
sub
add
outsl
lret
cmc
test
pop
out
inc
int3
lret
sbb
xchg
push
inc
sub
repnz
jl
mov
das
jns
jns
hlt
shll
dec
cmc
xchg
mov
push
push
adc
rolb
ss
mov
call
int3
or
out
adc
adc
pop
mov
pop
cmp
add
push
xlat
insb
add
mov
mov
dec
loopne
je
fld
jmp
xchg
loopne
lods
cmpsb
js
or
cmpsb
dec
lcall
leave
test
mov
mov
adc
daa
insb
xlat
dec
lcall
lods
rcrl
shlb
mov
xor
in
mov
cmc
jl
mov
xor
repnz
inc
imul
into
iret
mov
or
add
cmp
mov
sarb
add
loope
int3
fistpl
mov
jae
lock
inc
in
lods
stc
rcrl
mov
pusha
ret
enter
insb
cmc
cmpsl
in
mov
imul
cmp
insl
adc
push
ret
out
leave
and
mov
push
je
xchg
push
inc
adc
mov
cmc
pop
add
and
arpl
imulb
pop
lret
add
mov
out
mov
adc
cmp
inc
pop
push
mov
mov
lock
sbb
sahf
popf
icebp
popa
outsl
sbb
cmpsb
stc
mov
fistpl
outsb
mov
loopne
movsb
inc
stos
cmpsb
sub
cmp
lahf
ss
lea
in
mov
stos
enter
dec
and
in
cmp
daa
rclb
xor
jno
xchg
jb
loope
xor
pop
stos
cmc
nop
jo
mov
sbb
fmul
fnstcw
bound
jne
sbb
adc
in
xor
push
cmp
push
fcmovnbe
and
nop
sar
or
shl
stos
int3
push
pop
in
mov
jl
dec
adc
jecxz,pn
test
stos
inc
and
xchg
stos
dec
out
js
addr16
cmpsl
sbb
mov
shl
ffree
in
dec
nop
out
and
xchg
loope
outsb
decl
sbb
mov
or
fldenv
jg
es
mov
ljmp
dec
jmp
cwtl
xchg
cmpsb
mov
out
xchg
outsl
out
xchg
repz
inc
lret
in
or
lret
mov
insl
int3
cs
add
jge
mov
fisubl
outsl
aam
jne
mov
or
xchg
mov
xor
and
push
mov
inc
fbld
and
sbb
repz
hlt
mov
xor
fcompl
lods
or
lcall
cmp
out
lea
push
ds
pop
xor
into
sbb
repnz
fmuls
xchg
mov
inc
jne
jbe
shrl
clc
push
fcmove
insl
lds
movsb
xor
scas
test
dec
cmc
xchg
mov
cmp
frstor
adcb
in
out
and
daa
pop
in
add
jle
stos
push
mov
inc
sub
sub
pop
pop
loop
pop
pop
rorb
push
test
adc
leave
lcall
push
mov
xchg
repnz
movsb
ss
andl
imul
adc
cmp
and
pushf
pop
mov
cli
iret
out
pop
push
mov
xchg
in
sbb
sub
inc
dec
mov
inc
sbb
mov
xor
mov
clc
mov
or
jge
popf
add
add
test
inc
mov
pop
add
sahf
aad
adc
cli
cmp
mov
pop
sbb
and
adc
mov
push
fistpll
jge
adc
cld
dec
imul
jl
xchg
pop
add
and
fld1
xchg
sbb
mov
nop
inc
aam
pop
jle
lds
roll
pop
shlb
pop
mov
add
cmp
scas
mov
fcoml
mov
sbb
inc
fcomps
sbb
outsl
inc
pop
pusha
or
inc
clc
lods
iret
xchg
adc
ds
mov
es
cmp
and
sub
notl
insb
pop
movsl
and
int
pop
scas
mov
jmp
shl
mov
scas
jbe
push
xchg
js
into
shrb
mov
cmp
nop
cmpl
push
push
lahf
test
mov
je
mov
jecxz
ljmp
ds
cli
adc
mov
push
data16
adc
dec
add
xor
iret
scas
arpl
xchg
aas
cs
hlt
mov
test
scas
lret
test
enter
or
dec
lea
cld
lret
lea
mov
and
mov
stos
cli
test
xlat
cmp
mov
push
popf
mov
push
pusha
fst
scas
dec
jp
dec
and
jl
out
or
clc
xchg
stos
into
inc
and
fimuls
std
stos
xor
cmp
iret
mov
or
lods
loop
pop
mov
mov
cli
xchg
adcl
adc
out
outsb
lcall
sbb
pushf
xor
cmpsl
lods
fdivl
nop
jbe
adc
jno
fcoms
cld
adc
add
xchg
cmp
xchg
and
xlat
jno
in
mov
xchg
repnz
push
cmpsl
jl
std
or
jae
inc
aam
push
xchg
push
cltd
pop
sub
push
sbb
adc
mov
adc
sub
xor
sub
into
adc
lret
test
daa
push
das
cli
sahf
out
mov
imul
dec
adc
shrb
jns
pop
and
mov
mov
cltd
adc
fldl
imul
mov
cld
stos
push
mov
adc
les
inc
xor
jnp
adc
fwait
bound
cmp
fstpt
adcb
fmull
and
sti
xlat
fdivs
lcall
loope
int
dec
push
bound
je
je
or
jae
ds
xchg
pop
and
xchg
and
mov
fwait
shlb
les
sub
or
jp
jne
rcrb
notl
dec
pop
fsubl
ja
xlat
mov
pop
add
pop
mov
cmp
push
repnz
or
mov
aam
pop
pop
stos
sub
or
shll
sbb
jp
cmp
aam
fcmovnu
ucomiss
add
fisttps
enter
inc
push
stos
xchg
pop
adc
fidivl
test
add
dec
outsb
cmp
mov
cwtl
dec
dec
test
or
jns
ljmp
cmpb
adc
mov
inc
mov
pop
and
jo
mov
ficomps
pop
ret
mov
outsb
test
scas
xor
test
pop
cmp
test
mov
xchg
dec
add
or
clc
mov
cmpsl
shrl
sub
cmp
cmpl
scas
and
and
add
jle
adc
jbe
movsb
inc
std
roll
add
out
or
pop
mov
dec
and
dec
jl
xor
and
dec
les
or
mov
loopne
decb
loopne
sub
jl
adc
mov
push
popf
call
jbe
stos
xor
out
jno
pop
mov
sbb
fidivs
lock
lcall
push
stos
shll
or
add
clc
sub
int3
push
or
ja
dec
mov
adc
dec
into
cld
or
sub
mov
std
sub
cmp
lahf
out
js
lods
push
fs
cmp
inc
inc
jnp
push
or
adc
pop
adc
jg
rcll
inc
jge
add
fucomip
je
or
push
outsb
sub
push
mov
pop
mov
addb
test
lret
inc
push
aas
cld
in
lret
push
mov
or
insb
xorl
mov
ds
cmpsb
jmp
mov
mov
cli
aas
cli
call
das
and
jl
sbb
jns
mov
pusha
sub
cmp
loope
mov
sbbb
pop
pop
rol
inc
ret
jno
adc
loop
and
add
and
mov
fisttps
adc
mov
mov
add
mov
xchg
adc
mov
push
sub
xchg
fcmovnu
sbb
and
add
stos
shrb
jbe
repz
mov
pop
stc
and
test
push
add
lea
loop
mov
rorb
call
out
es
fists
addl
push
in
mov
es
cmp
cmp
test
fisubrl
int
popf
in
adc
mov
repnz
orb
imul
xor
dec
dec
test
sub
xchg
pop
dec
cmp
pop
pushf
ljmp
jb
cmp
clc
push
cld
push
cli
fstpl
mov
pop
pop
pop
in
xchg
jle
stc
cmp
xor
mov
stos
or
repnz
xor
int
mov
lret
stos
lret
pop
imul
outsl
pop
or
in
or
je
call
cwtl
sub
push
push
popa
mov
addr16
cmc
repnz
mov
and
xor
mov
push
lds
jp
inc
repz
xchg
ffreep
outsl
push
dec
clc
rclb
cs
imul
mov
ret
mov
mov
in
leave
repz
jo
cli
pop
into
add
push
fsubl
fs
imul
mov
sbb
add
sub
movsl
outsb
jg
inc
xor
adc
adc
pop
pop
ds
sub
pop
jbe
popa
fimull
jg
adc
pop
mov
jo
movsl
in
mov
ja
mov
fcmovbe
imul
and
je
std
xchg
cwtl
adc
lods
pop
mov
or
fstpt
mov
or
xor
adc
shrl
and
pushf
lods
xlat
icebp
lods
and
test
sbb
mov
mov
stos
rcrl
pop
cmp
sub
pushf
mov
in
xchg
and
cmp
jb
jno
inc
push
and
aam
cld
outsb
sbb
hlt
andb
pop
add
test
pusha
mov
push
outsl
sub
repnz
mov
push
jle
sub
loopne
push
dec
dec
ret
adcb
ficoms
ret
push
mov
lods
cs
xchg
and
pop
popf
jne
jp
push
in
in
or
andb
lcall
shr
es
jnp
int3
pop
sub
cmp
in
sub
rcl
arpl
sub
rolb
push
xor
and
cwtl
test
or
ds
outsl
nop
fnclex
cmp
nop
xor
aad
mov
mov
mov
int
or
dec
rolb
mov
cltd
lods
out
fstpl
sub
dec
lds
pusha
aas
push
call
sbbb
adc
std
pop
sbb
mov
xor
xor
inc
or
into
adc
ljmp
jg
push
dec
fldl
lods
call
push
dec
lods
jp
mov
inc
ss
les
mov
sbb
cmp
ficompl
xchg
cmp
or
push
dec
mov
pop
xor
cmp
imul
cmp
nop
push
xor
sub
mov
xchg
mov
add
int3
and
sahf
int
jecxz
add
xor
addr16
add
testb
xor
xchg
pop
xor
and
in
jg
mov
popf
push
call
sti
inc
int3
int
inc
or
adc
push
das
lods
push
das
pop
enter
add
mov
sbb
and
das
lcall
push
enter
dec
sbb
cmpb
sbb
lahf
andb
inc
fcoms
jmp
mov
cmpsl
cs
sbb
test
push
push
sub
ret
xchg
jns
nop
or
mov
test
or
xchg
mov
test
jle
xchg
jno
fwait
push
cltd
cmp
sub
pop
sbb
dec
sbb
mov
adc
sub
mov
lret
dec
push
pushf
xor
mov
andl
add
and
inc
fistpll
xchg
cld
dec
loopne
loop
sub
xor
bnd
push
out
mov
mov
jb
sbb
ljmp
mov
xchg
inc
aam
test
lahf
jg
xchg
addr16
iret
dec
xchg
lock
addl
inc
lret
lods
and
loopne
xor
sub
push
or
dec
push
mov
push
pop
iret
outsb
add
sbb
cmp
mov
ljmp
mov
push
push
adc
mov
movsb
jbe
mov
fsubrl
sbb
cmp
push
xlat
or
lea
fldt
push
lahf
mov
sbb
iret
push
push
out
incl
jecxz
aad
mov
rclb
dec
mov
jno
add
cmpsb
dec
scas
push
dec
sbb
test
enter
outsl
scas
mov
sbb
dec
in
std
xchg
dec
sbb
inc
movsl
jecxz
push
xor
or
sub
xor
lret
sub
add
les
jne
sbb
sub
jmp
jle
adcb
mov
sbb
roll
xchg
xchg
or
xchg
add
add
jno
arpl
adc
mov
cmpsl
push
divb
scas
inc
lret
xchg
mov
pop
cmp
movsb
sahf
out
lea
inc
and
cmpsb
jmp
nop
sbb
lods
push
fdivs
insl
dec
mov
push
sbb
mov
mov
jge
mov
adc
pop
pushl
mov
mov
lret
push
dec
outsl
aam
ds
mov
push
call
push
jns
mov
sub
in
and
lret
mov
stos
xchg
iret
xchg
mov
push
cmp
lret
out
aas
inc
dec
mov
sbb
fwait
cmpsb
fs
fmull
or
pop
cmc
mov
mov
fisubrl
fimull
gs
mov
add
sub
repnz
push
pusha
dec
inc
push
sbb
add
adc
in
test
xchg
and
std
pop
dec
jp
mov
pop
pusha
inc
iret
enter
aaa
or
imul
and
or
mov
shl
sbbb
pushf
ss
repnz
popa
nopl
add
mov
movsb
in
ret
iret
stos
movsl
rcrb
nop
int3
call
push
jbe
push
ss
jmp
lods
imul
call
or
mov
adc
add
or
into
cmp
xlat
arpl
xchg
pop
and
repz
jbe
aas
cmpsb
loope
rclb
ds
in
ret
dec
leave
cmpsl
aas
hlt
mov
xor
xor
mov
xor
in
push
mov
inc
mov
fs
out
mov
lcall
ficoms
inc
aam
std
pop
jp
dec
sti
imul
xor
add
mov
add
cmp
and
es
pop
adc
insl
xchg
dec
xchg
je
outsb
sub
mov
out
test
push
pop
dec
orl
insl
mov
add
lds
insb
mov
repnz
in
cmp
mov
aam
insb
ja
adc
and
sub
jnp
push
mov
sub
outsl
and
in
sbb
das
mov
push
adc
cmp
lret
repz
jp
cli
mov
add
jb
push
stos
jb
push
rcrb
xchg
fs
mov
mov
jae
testl
xlat
fsubp
mov
fldt
push
push
pop
testb
jns
pop
mov
add
or
adc
push
out
imul
adc
popa
sub
sub
fstpl
cmp
push
outsl
rcrl
jo
adcl
scas
mov
cltd
shrb
mov
xchg
leave
inc
push
sub
into
stos
xor
jnp
jnp
sahf
jmp
pop
shl
mov
mov
push
cmp
cmp
push
dec
xchg
shlb
movsb
jg
int3
push
mov
jecxz
aaa
dec
movsb
sbb
mov
fcoml
cmp
sbb
adc
out
mov
cmpb
adc
sbb
lock
jl
push
in
or
imul
insb
push
mov
add
aas
jnp
sub
fsubs
cmpsw
xchg
mov
xchg
cltd
test
pop
sub
xchg
out
xchg
mov
xor
inc
pop
ret
or
fxch
pop
mov
mov
pop
imul
push
sub
jp
movsb
repnz
mov
mov
lods
mov
int3
and
jecxz
gs
mov
popaw
and
sub
pop
xchg
add
push
jns
mov
out
mov
scas
xchg
outsb
out
push
aaa
sbb
aaa
push
jb
cwtl
push
shll
insb
sub
stos
jp
js
push
xlat
lret
pushf
mov
rol
pushf
dec
andb
push
pop
mov
xchg
scas
mov
jp
shrb
adc
mov
push
dec
mov
mov
mov
jmp
ss
pop
sub
sbb
push
push
inc
ret
xor
cmp
aaa
push
and
rcl
insb
cltd
or
push
aam
mov
fiadds
fcomip
inc
gs
fsubrl
or
jo
js
push
das
shr
negl
or
xchg
outsl
shll
sbbb
imulb
inc
cltd
mov
nop
jno
imul
mov
js
fs
mov
dec
and
call
out
xor
jno
arpl
add
fdivrl
fiaddl
fsubs
ret
xchg
mov
rcll
rcrl
testb
mov
int3
das
lret
loopne
dec
cmpb
nop
lods
sbb
sbb
aad
adc
cmp
or
sbb
loope
mov
lods
cmpsl
aam
mov
jb
push
aaa
into
inc
and
adc
push
sub
pop
jae
addr16
mov
pop
mov
push
faddp
imulb
js
lds
fucomi
add
bound
xor
mov
ss
clc
shrb
repz
xchg
cli
les
outsb
mov
pop
xor
mov
inc
out
cltd
imul
jmp
daa
cmp
test
adc
pop
imull
jns
sub
ja
lahf
aas
roll
mov
xor
pop
jecxz
movsl
mov
jb
test
enter
pop
xchg
push
lock
daa
or
add
sbb
or
ret
cli
sub
inc
nop
adc
ss
stos
pop
popl
cmp
add
xor
pop
fstl
adc
fcompp
adc
inc
push
mov
mov
nop/reserved
int
scas
rcl
test
cmp
xor
push
jae
into
mov
inc
jge
xchg
mov
xchg
mov
or
cs
or
jmp
fisttps
rorl
cmp
fists
pop
arpl
loop
or
pusha
jle
fdivs
xor
jmp
fs
scas
addr16
gs
mov
mov
mov
out
jecxz
bound
cmpsb
test
insb
xchg
int3
test
shll
lret
jg
sbb
repz
jg
mov
into
adc
mov
cld
push
add
stc
frstpm(287
jp
repnz
or
sbb
je
adc
outsl
jle
subb
adc
test
jl
aam
xlat
cmc
popf
or
jmp
popa
or
mov
adcb
faddl
sbb
bound
xchg
ss
test
jl
sub
dec
dec
dec
sti
push
or
andl
or
dec
test
sub
xchg
arpl
lcall
cmp
das
fdivr
sbb
xchg
enter
dec
dec
sub
aam
out
outsl
mov
movsb
filds
into
cltd
pop
mov
xor
cwtl
mov
fdivs
lds
sub
mov
cmp
loop
pop
and
cmp
test
pop
insb
mov
add
lods
sbb
add
mov
push
leave
mov
pop
insl
loop
xor
push
ss
mov
sarb
add
lds
or
cmc
hlt
testl
into
add
shll
jbe
mov
jg
mov
rorl
test
nop
xor
cmp
repz
sbb
adc
fdiv
push
add
or
test
push
das
jl
and
pop
add
lret
rorb
es
add
jno
aaa
movsb
jg
jo
roll
jecxz
pop
pop
fiadds
je
inc
cs
ja
xchg
pop
js
xor
loopne
rorb
ret
insb
xchg
int
dec
adc
jne
pop
push
bound
sbb
sub
adc
outsb
cmpsb
out
xor
dec
cmp
or
sub
aad
add
pop
fs
mov
adc
cmp
push
dec
aas
or
fs
imul
or
shll
rsqrtps
sti
hlt
add
ficoms
pop
jp
roll
addb
xchg
test
mov
cmc
clc
dec
mov
int
cmc
jl
sub
jbe
popf
sub
sahf
pop
sbb
loop
dec
mov
mulb
roll
stos
xchg
dec
enter
sbb
lods
push
negl
loope
testl
jp
ret
out
push
mov
das
mov
or
mov
lock
outsb
push
adc
ficoms
or
lret
cmpl
loopne
dec
inc
sarl
fcoml
jbe
pop
jno
cli
jnp
cmp
ja
xchg
inc
jmp
lock
jp
cmpsb
sub
and
fmull
outsl
jne
loopne
pop
into
shll
pop
push
bswap
jmp
pop
mov
xchg
mov
cmpsb
push
mov
inc
xchg
dec
cmpl
stos
mov
loope
out
mov
sbb
sub
xlat
test
sub
jo
fiadds
out
int3
xor
addr16
push
adc
sarb
sub
mov
mov
mov
cmp
lds
or
stos
mov
dec
arpl
adc
mov
push
repz
dec
inc
sub
out
inc
cld
and
lret
adc
cmp
mov
negb
push
cmp
dec
je
addb
out
or
mov
lcall
test
sbb
ja
dec
jne
int
jmp
outsb
fstpt
adc
aaa
adc
fadds
cli
lret
and
xchg
mov
xchg
cmpsl
js
or
call
inc
js
adc
sub
loopne
sub
lret
pop
aad
popf
ficoml
mov
or
xchg
pop
cmp
loope
sub
mov
pop
dec
mov
test
arpl
adc
sbb
adc
and
icebp
add
aam
mov
xchg
add
stos
cwtl
mov
subb
mov
ja
sbb
mov
movb
xor
dec
ljmp
jbe
jmp
fs
or
mov
stos
aam
add
mov
sbb
jne
cmp
sbb
inc
add
les
sbb
pop
iret
rclb
addr16
xor
mov
enter
fadd
cmpsb
pop
add
jmp
adc
xchg
sbb
sti
jne
fdivrl
mov
jmp
sbb
outsl
arpl
mov
xor
xor
cmp
xor
mov
aam
sti
and
jae
jge
cwtl
es
and
pop
dec
inc
jmp
insb
mov
xchg
jle
mov
push
push
fidivrs
into
repnz
lock
ja
gs
dec
xchg
fwait
movsb
mov
inc
xchg
mov
sahf
dec
mov
mov
cmp
in
push
sbb
mov
push
dec
xchg
lahf
mov
pop
adc
xchg
dec
sbb
nop
mov
insb
push
push
ret
es
imul
xchg
xchg
cli
mov
add
pop
test
lock
scas
cmpsb
sbb
push
inc
xor
es
lock
add
mov
xchg
aaa
arpl
dec
iret
mov
pop
push
xor
sbb
or
mov
das
adcl
aad
mov
adc
popa
jno
ds
and
fmul
fwait
mov
arpl
fwait
mov
sbb
outsb
push
inc
inc
sbb
xchg
jmp
xor
movsb
dec
testb
jnp
stc
cmpl
adcb
shl
or
repnz
outsl
popa
jb
xchg
loope
nop
les
lret
mov
pop
addr16
sbb
dec
imul
xchg
xor
pushf
mov
lret
mov
jl
sbb
rclb
sub
sbb
dec
jno
xchg
xor
repnz
ss
imul
jb
movsb
sbb
leave
mov
daa
jno
movsl
fstl
ja
xor
mull
cmp
sbb
cmp
pop
bound
sbb
ljmp
pop
movb
cmp
outsb
mov
sub
xorb
xchg
add
mov
in
and
xchg
mov
data16
cmp
outsb
push
cmc
xchg
and
pop
test
shlb
ficompl
pop
mov
int3
fs
leave
cmpsb
pushw
lock
dec
mov
outsb
loope
or
xor
enter
inc
cmpsl
push
cmp
sbb
jp
out
scas
outsb
and
jecxz
loop
add
cmc
inc
cmp
adc
pop
jns
push
inc
aam
adc
mov
aam
xor
xor
jp
add
add
inc
mov
dec
into
mov
and
mov
and
lods
insb
mov
cmc
mov
out
cmpsl
pop
leave
insl
bound
out
and
lahf
loop
mov
je
and
loope
in
leave
loop
push
xor
loopne
inc
sbb
dec
aas
xlat
mov
cmpsl
repz
adc
enter
pop
outsl
gs
cwtl
int3
and
aas
pushl
mov
test
nop
les
js
scas
and
xor
xchg
aaa
mov
out
imul
add
cmp
lds
roll
or
fisubl
inc
xchg
pop
inc
or
mov
jbe
andl
pop
dec
or
jge
repz
int
xchg
aam
pop
sbb
lods
mov
pushf
in
ror
int3
mov
xchg
mov
pop
sub
call
cmc
dec
add
loop
cltd
mov
and
sti
outsb
push
mov
mov
jo
sub
add
test
nop
in
loop
cmp
stc
test
fcom
dec
loop
mov
insl
fiadds
stos
aaa
fwait
rolb
and
in
cld
dec
sub
mov
mov
mov
inc
andb
sahf
cmc
mov
addr16
push
or
addb
insl
push
adc
adc
jge
jbe
xchg
mov
xor
inc
pop
or
jnp
xlat
dec
icebp
stos
leave
mov
test
enter
xor
scas
mov
jle
jg
test
and
sub
or
aaa
mov
das
dec
cmp
sbb
xchg
xor
fmull
pop
pop
js
mov
out
in
stc
cltd
xchg
jecxz
std
rcll
gs
dec
cmp
out
dec
mov
ja
aad
inc
jbe
add
scas
enter
pop
push
cltd
sarb
rolb
lret
xor
pop
xchg
ret
std
jle
cmpsl
push
movsl
push
xchg
adc
cld
mov
or
in
and
cmp
sbb
mov
adc
fnsave
sahf
sub
int
or
into
outsl
out
fbld
jge
movsb
xor
in
rcrl
daa
add
into
adc
pop
dec
adc
sbb
les
in
out
mov
movsl
fistpl
das
push
clc
cmp
mov
add
loope
test
dec
in
push
cltd
pop
sbb
mov
sti
out
adc
add
ret
push
xor
int3
fs
sarb
stos
mov
push
mov
iret
cltd
rorl
xchg
lahf
mul
mov
cld
popf
xchg
push
in
call
cs
test
clc
xchg
and
aas
cmpsl
jmp
rcll
std
sub
fidivrs
cltd
into
sbb
enter
mov
loope
mov
inc
shlb
dec
ret
fidivl
imul
pop
add
xor
cltd
aam
or
cmp
mov
push
sahf
inc
cs
and
inc
jns
or
sub
sbb
sub
aad
mov
pop
notb
mov
mov
test
sbb
pusha
lcall
or
mov
pusha
inc
je
into
in
jne
jmp
sarb
test
flds
pop
imul
or
aaa
rclb
pop
cmpsb
sahf
pop
cwtl
aas
inc
loop
les
dec
cltd
fldl
or
mov
in
cld
inc
xor
push
or
xor
fwait
adc
sbb
pop
mov
pop
push
xchg
clc
mov
sub
test
fstps
jnp
lea
mov
addl
xchg
loop
test
xchg
mov
addr16
rcrb
adc
add
bound
xchg
cwtl
xlat
jno
es
fs
jmp
fimull
cmc
lcall
popf
pusha
nop
adc
jg
dec
aam
inc
mov
jle
mov
mov
out
fstpl
dec
cmp
outsl
dec
or
jne
orb
or
scas
adc
push
dec
mov
jne
daa
mov
sub
rorb
mov
pop
outsl
jns,pn
add
jmp
xor
pop
and
and
imul
mov
sub
mov
inc
dec
xor
pop
js
pop
jle
mov
std
int
adc
dec
mov
hlt
xchg
inc
mov
shll
stc
or
hlt
stos
sub
xchg
jo
cmpsb
rolb
in
push
lock
fidivl
fsubr
cmp
inc
lret
jne
mov
movsl
hlt
jb
divb
fmull
out
sahf
inc
out
fistps
mov
sub
and
lds
int3
adc
cs
adc
add
fbstp
sysret
lret
xchg
mov
mov
leave
shll
push
sahf
cmpsl
lods
fnstsw
movsl
test
fsubrl
fnstcw
in
imul
fucomip
dec
mov
jnp
mov
sbb
mov
out
out
xor
cs
sti
pop
ret
imull
push
dec
insb
std
mov
sbb
xchg
and
and
pop
es
psllw
outsb
and
repnz
lret
ljmp
cmp
shlb
xchg
jl
pop
rcll
pop
jnp
mov
andl
jl
rol
dec
outsl
pop
push
push
sbb
jl
sbb
mov
xor
mov
pop
in
mov
rcrl
xor
jo
mov
dec
lret
and
cmp
jnp
sub
pop
dec
lahf
lcall
fidivrs
mov
sub
out
xor
and
xchg
mov
bound
push
bound
sti
pop
or
inc
das
popa
js
addr16
enter
add
xchg
outsb
aam
jno
popf
hlt
adc
in
and
daa
or
pop
sub
dec
cmpsb
inc
mov
push
fsubrp
in
pop
sub
pushf
jb
xchg
incl
cmp
or
call
xchg
daa
jo
sti
test
negl
add
xor
mov
push
repz
ror
in
xchg
push
incb
xor
ret
int
sub
xchg
shrb
inc
jbe
jmp
mov
mov
mov
sti
push
inc
sub
xor
fstps
sbb
adcb
pushf
stos
pop
and
mov
inc
lahf
insl
ljmp
lods
ret
es
sub
push
mov
pop
adc
mov
aad
rolb
aas
jle
test
sub
dec
adcl
daa
test
in
mov
mov
adc
xor
adc
jo
rol
in
sub
sub
xor
xor
inc
inc
loop
loop
lret
insb
cmc
fistpll
or
and
xor
mov
mov
minps
arpl
xor
mov
push
sbbb
push
ja
inc
ljmp
fisttpll
mov
ss
fwait
int3
icebp
jle
adc
jnp
jae
in
jno
sbb
mov
loopne
subb
ficomps
xchg
sbb
outsl
in
cli
out
mov
aad
cwtl
cs
and
or
mov
idivb
jmp
adc
call
xchg
rclb
repz
popf
inc
add
pop
sub
mov
in
pop
cmp
add
xor
or
push
cmp
fimull
out
loopne
mov
push
icebp
pop
mov
and
or
int3
pop
nop
inc
push
or
jno
jecxz
push
cmpsl
dec
xchg
jecxz
pushf
push
jge
mov
cmp
push
dec
inc
adc
dec
push
push
gs
inc
xor
adc
fisttpll
dec
loop
stc
mov
mov
jge
lds
in
scas
pop
mov
das
adc
jecxz
inc
movsb
clc
mov
sbb
xchg
data16
or
jmp
ret
and
inc
aad
xor
xchg
push
jb
outsl
mov
push
and
mov
add
jo
lds
repz
add
push
lds
rcrb
xor
jle
cmp
jp
xchg
xorl
lods
popf
fimuls
fnstcw
aas
pop
cwtl
mov
stos
xor
rclb
add
fildl
xlat
mov
flds
stc
cmp
jle
mov
mov
aaa
sub
cltd
fwait
inc
cmp
gs
jns
daa
cld
xchg
xchg
pusha
pop
xchg
clc
add
mov
repz
add
in
sub
fdivs
loop
add
pop
push
out
mov
cmp
mov
sbb
out
clc
mov
and
mov
nop
sbb
scas
leave
mov
add
out
pop
in
adc
mov
stos
cmp
and
xor
nop
cmp
mov
call
or
mov
pop
incl
ds
test
ret
mull
mov
inc
stos
xor
push
xchg
pop
cld
cltd
pop
lret
fucomi
xlat
pusha
lret
je
sub
test
pushf
mov
mov
inc
push
adc
and
xchg
cltd
jg
pop
stos
or
add
and
xchg
sbb
rclb
ljmp
jg
mov
ret
mov
dec
outsb
xchg
rcrl
dec
ljmp
xchg
rclb
xchg
cld
fnstenv
ss
in
fdivrl
cmp
jnp
push
in
and
mov
push
subb
jbe
mov
jmp
stos
test
outsl
ja
int3
xor
inc
jns
xor
inc
lods
dec
loopne
jmp
int3
xchg
push
add
push
push
fcmove
mulb
xchg
iret
fwait
aaa
and
fiadds
nop
sub
inc
es
pop
push
repnz
ljmp
push
push
lods
dec
addr16
cld
sbb
dec
push
clc
and
test
sti
out
add
adc
jmp
scas
cmp
fcmovnbe
daa
imul
mov
sbb
shlb
mov
sub
push
and
jmp
xchg
icebp
push
cmp
movsl
or
pop
sbb
lret
rcrb
sub
sbb
push
aaa
sub
mov
gs
repz
and
scas
inc
lret
push
es
or
test
mov
xor
leave
stos
sbb
adc
add
hlt
ret
sub
ds
pop
out
mov
aad
cs
shlb
cmc
call
xor
lahf
int
jbe
mov
leave
lock
mov
sti
out
shrb
mov
mov
push
pop
mov
push
xchg
mov
sahf
leave
add
cmp
mov
inc
dec
or
insl
cs
mov
push
ret
cmp
loope
mov
stos
sub
jb
and
pop
push
popf
orb
movsb
cli
inc
jae
insb
pop
push
add
stc
jo
scas
in
dec
mov
or
faddl
aad
mul
xchg
xor
aas
cmp
fdiv
inc
pop
loope
pop
inc
mov
addr16
into
in
test
push
addr16
lock
out
add
push
fs
lea
add
sahf
mov
lods
cmpsl
outsl
dec
mov
sub
inc
mov
fbstp
xchg
xchg
dec
mov
mov
mov
cmp
jp
mov
xor
mov
out
insl
pushf
jno
aas
mov
cli
es
pop
dec
mov
addr16
outsl
lea
cmpsb
pop
fldt
aaa
lret
inc
jo
pop
dec
iret
pop
dec
fisubrs
xchg
jno
lret
jecxz
cs
sahf
popa
and
int3
das
adc
adc
cmpsb
nop
fptan
notl
fyl2x
push
or
shrb
pop
shll
movsb
cmpsb
out
orb
xchg
and
pop
mov
and
out
cwtl
sub
jle
sub
or
loope
lea
adc
pop
mov
imul
adc
adc
cmp
sbb
push
loope
mov
push
add
lds
fs
clc
int
and
pop
ljmp
loope
je
fimull
cltd
in
and
xlat
int3
push
add
sub
xchg
test
xor
xor
xchg
sbb
pop
addb
push
add
dec
add
data16
or
push
dec
push
daa
xor
pushf
dec
outsl
cmp
xchg
aas
das
out
cmc
shrb
xchg
das
fldl
out
dec
cli
loopne
push
lds
hlt
push
pop
jp
xor
bound
jae
cmp
mov
mov
cmp
sub
add
es
xchg
xchg
shl
repz
data16
and
add
repnz
push
lahf
fninit
ss
mov
popa
dec
xchg
in
outsl
insb
sub
jbe
ror
shrl
pop
push
add
and
enter
adc
mov
std
sbb
clc
cmp
mov
cmpsb
mov
outsl
lock
imul
mov
sub
add
js
inc
inc
xchg
daa
jnp
bound
jmp
popf
out
inc
cmp
mov
cmp
mov
je
lea
daa
stos
outsl
fisttpl
and
outsb
push
cld
call
dec
sarl
mov
push
fisttps
and
je
outsb
aad
cmp
pop
xor
je
enter
jbe
inc
fptan
pushf
arpl
mov
sub
stc
js
fcmovnb
fildll
sub
outsb
out
pop
andb
shlb
mov
xlat
inc
int
aad
pop
test
mov
fmul
xchg
cmp
jbe
in
shrb
mov
loop
movsb
jle
into
imul
out
popf
push
jmp
xchg
inc
call
jnp
push
mov
inc
test
inc
aad
mov
cmpsl
inc
aad
aaa
lock
lahf
shrl
pusha
push
cs
mov
pop
pop
cmp
mov
es
and
or
cmp
jle
fwait
or
jnp
mov
je
rorb
mov
or
and
pop
ja
repnz
push
lret
inc
jg
dec
jbe
fsub
sbb
ret
sbb
dec
mov
push
cmp
fwait
inc
jl
mov
sbb
push
jcxz
fadds
lcall
lret
pop
fildll
fsubr
dec
or
inc
push
adc
shlb
push
sbb
mov
pop
mov
test
insl
subb
mov
lret
out
lcall
outsl
scas
decl
loop
push
stos
repz
mov
and
insl
cltd
outsb
loop
int3
and
jmp
sbb
fldt
lock
dec
loope
movsl
and
fwait
test
incb
add
mov
in
ds
repz
cmpsb
add
sbb
xchg
add
xor
ljmp
lret
lock
movb
push
imul
add
ja
imul
rcll
add
mov
cmpsl
push
lret
out
dec
push
xchg
add
xchg
xor
cmp
add
or
imul
mov
sar
popa
pop
dec
adc
loop
cmp
fisubs
pop
dec
xor
jl
nop
jl
xchg
and
and
ret
xchg
pop
and
fcmovnb
push
jbe
push
adc
mov
pop
pushl
into
fs
je
enter
int
and
adc
ror
repz
pop
cltd
hlt
xor
loope
imulb
xchg
mov
ja
or
jp
shrb
sub
xor
inc
js
fisttps
jl
xlat
sbb
xchg
in
add
scas
sub
stos
or
mov
add
and
repz
mov
jbe
mov
mov
lea
xlat
push
fs
inc
xchg
test
add
ds
enter
fwait
loope
mov
adcl
sahf
lret
cmp
sar
lret
lcall
push
xchg
les
ret
xchg
xor
xchg
stc
lret
xchg
addr16
jb
rclb
lea
cwtl
fldenv
sets
mov
je
lds
adc
or
ja
jecxz
in
push
lret
and
pop
sub
aam
xor
addr16
inc
add
jo
scas
dec
or
pop
test
cmp
adc
push
mov
nop
sbb
or
cmpsb
lods
jb
xor
scas
xor
shrl
movsb
or
push
imul
jo
jecxz
ljmp
iret
jmp
testb
mov
stos
and
aam
jmp
pop
pop
mov
adc
adc
cmpsl
cld
out
cmp
pop
jl
push
inc
pop
movsb
rclb
jnp
dec
or
and
sub
loope
daa
es
jb
je
mov
pop
mull
inc
and
or
xor
rol
ret
or
fsubs
addl
xor
xchg
jbe
inc
in
xchg
pusha
subl
clc
inc
pop
xchg
xor
cmp
push
sar
jno
sar
mov
negl
cmp
sarb
and
je
aaa
pop
push
hlt
pop
sarl
sbb
out
or
sbb
and
mov
push
std
les
cmp
scas
scas
mov
nop
cltd
dec
hlt
push
mov
lret
mov
call
sbb
mov
pop
xorb
xor
in
and
dec
pop
ja
or
and
pop
dec
jl
pusha
xor
jnp
adc
out
mov
dec
iret
mov
mov
das
gs
push
mov
dec
xor
decl
loopne
or
pop
jno
sub
iret
add
std
mov
mov
std
aas
lods
mov
shl
jp
xor
jnp
xchg
and
or
xchg
std
cmc
ja
xchg
fmulp
pop
cmp
sbb
xchg
mov
sub
and
push
jecxz
addr16
and
push
jp
jne
in
inc
xor
xchg
mov
aam
int3
sbb
cmpsb
loope
lock
add
loop
scas
and
inc
and
push
jg
mov
push
aaa
pop
mov
push
mov
pop
ja
enter
cmp
call
and
inc
rcll
fsubrs
ds
fbstp
lds
shl
fdivrl
mov
jne
or
mov
pop
or
jbe
mov
mov
mov
jns
decb
in
ja
gs
xor
xor
shl
mov
mov
mull
ret
rcl
xchg
popa
insb
ret
cwtl
sbb
dec
fimull
or
jg
repz
bound
fmul
jg
out
ret
fsubl
lcall
push
mov
cmp
divb
adc
iret
lock
fwait
mulb
xor
jne
mov
stc
stc
incb
jmp
lret
icebp
mov
inc
sbb
idivb
push
loop
cmpsb
cld
loopne
les
mov
mov
mov
sub
push
push
push
mov
push
testb
dec
dec
fcompl
aaa
out
mov
jl
mov
cld
mov
sub
cltd
or
push
repnz
xchg
xchg
insb
mov
lods
imul
fdivrp
sub
push
rcl
fdivs
ss
aas
scas
jge
data16
jl
mov
cmpsb
adc
sub
jg
cmp
sub
mov
cmp
mov
shrb
dec
add
push
or
mov
mov
outsb
lods
shlb
xor
add
leave
fdivs
leave
jg
xor
mov
cli
mov
lcall
adc
or
shrl
loopne
inc
clc
inc
fistpll
ficoml
pop
inc
cmp
sub
xchg
add
pop
mov
jecxz
daa
dec
push
in
xchg
mov
out
clc
aam
cmp
cmp
pop
lahf
shlb
out
inc
icebp
cmp
leave
xchg
hlt
jne
and
lods
stos
std
in
das
loope
xchg
iret
mov
push
mov
fsub
test
inc
push
outsl
das
int3
sahf
enter
fwait
shrb
and
sahf
and
jecxz
sub
fs
jb
mov
and
ret
ret
clc
xchg
daa
sub
jl
cmp
jne
pop
jp,pt
jmp
inc
cmpl
scas
add
sub
pop
xor
jmp
pop
subb
mov
movsl
jl
jmp
ret
adc
cmp
jg
mov
imul
pop
adc
ds
push
ja
int3
insl
lock
in
mov
jnp
xchg
sbb
shlb
repnz
idivb
inc
lods
xlat
xchg
and
xchg
sbb
loope
adc
pop
adc
xchg
jno
fisubrl
cmp
adc
in
shrl
jle
loop
mov
push
imul
aas
pop
test
popf
data16
aad
test
push
adc
testb
xlat
movsb
arpl
scas
icebp
popf
je
pop
call
jle,pn
or
xchg
mov
stos
xor
fwait
adc
hlt
mov
pop
outsl
neg
sbb
adc
mov
jae
fsubr
aam
adcl
cmc
add
call
inc
jne
fmuls
daa
addl
push
aad
das
pop
add
test
in
stos
xchg
sub
mov
xor
push
jnp
jb
test
jle
cltd
test
lock
dec
ljmp
out
xorb
sbb
add
leave
jb
insl
xlat
pop
test
fs
les
pop
pusha
mov
jbe
shrl
stos
ret
loopne
gs
dec
rorl
mov
xor
vpcmpeqb
imul
lods
popa
in
aas
and
popa
cmp
inc
mov
les
xchg
bound
rcrb
ljmp
push
jo
movsb
enter
mov
movsl
inc
sub
xchg
test
lret
inc
mov
cs
cmpsl
mov
and
push
cmp
out
jmp
popf
add
xlat
and
icebp
inc
cmp
jmp
cmp
xlat
leave
insb
sbb
and
jo
loop
inc
jo
dec
or
movsb
jns
mov
cmp
sbb
add
andb
sub
mov
jecxz
in
and
push
mov
adc
jb
fisttpl
xchg
scas
jmp
out
dec
sub
ret
xchg
pop
push
ret
inc
jmp
call
jns
add
pop
jb
stos
pop
shlb
sbb
mov
cmc
mul
sub
and
xchg
add
addl
adc
ljmp
ja
dec
test
rolb
sahf
in
inc
jl
hlt
dec
lds
xchg
aaa
sbb
or
into
add
mov
es
pop
pushl
sbb
loopne
cmp
jae
sbb
jl
xchg
in
int3
push
fwait
jne
inc
aas
push
jae
cmp
sub
mov
cmp
movsl
mov
out
mov
push
add
lahf
in
fsubrl
cmp
in
lret
xchg
rolb
mov
test
repnz
mov
jmp
sarl
stos
xchg
jp
inc
sbb
mov
test
shlb
add
aaa
addl
sub
jle
push
cmpsl
cmp
dec
es
ss
mov
sbbb
lahf
xlat
movsl
or
xchg
sub
cmp
int3
inc
pop
adc
cs
in
mov
cmc
iret
push
xchg
lcall
ret
jb
outsb
lds
movsb
cmp
sub
push
int3
outsb
sub
lsl
jle
cmpsl
cmp
and
sbb
push
mov
jb
inc
pop
enter
loop
ja
scas
fbstp
mov
sub
or
adc
lock
push
fisubrl
popa
rclb
pop
testb
enter
jns
cmp
fcoms
adc
pusha
ss
lods
pusha
push
es
xchg
lret
sbb
test
mov
push
pushf
rcll
xor
jae
pop
inc
ret
imul
pop
push
jb
stc
out
adc
cmpsb
cltd
xchg
daa
add
cltd
es
cmp
mov
test
mov
inc
test
cmp
push
iret
test
push
not
and
loope
dec
ljmp
sti
mov
test
and
ffreep
insb
sub
ljmp
ja
jo
incl
adc
enter
jns
loop
mov
inc
xor
shlb
jb
pop
xor
mov
mov
push
jbe
inc
cmpsb
xchg
cmp
inc
mov
addl
jne
mov
or
stos
inc
fdivs
mov
pop
dec
cmp
mov
jns
and
iret
fadd
push
push
int
fsubl
rorl
popa
test
stc
fadd
pop
push
lret
cltd
sbb
subb
rcrb
int
push
add
and
aaa
push
dec
fstpt
das
xlat
in
push
xor
mov
push
sub
in
xchg
sbb
in
jae
arpl
push
bnd
adc
mov
push
cld
in
addr16
mov
jge
inc
frstor
into
dec
or
fmull
sti
sub
icebp
mov
or
and
faddl
hlt
pop
xchg
insb
hlt
sbb
push
outsb
jg
nop
psrad
data16
xchg
pop
enter
addr16
and
insb
sbb
mov
jb
dec
xor
adc
lret
jae
pop
sub
nop
inc
out
sbb
add
divl
cwtl
ss
aam
cmpsb
add
or
stc
cli
pop
push
out
pop
mov
scas
mov
repz
cmp
mov
cmp
data16
repnz
pop
cmpsb
in
dec
cmp
jg
jne
jg
sub
mov
arpl
lret
sub
gs
jbe
cmc
addb
dec
mov
out
dec
sub
cmp
dec
add
cmp
mov
mov
lea
cmp
xlat
aas
lahf
pop
push
inc
mov
jge
mov
sbb
imul
xor
or
jp,pt
pop
idivl
adc
in
mov
mov
scas
lret
je
adc
sarl
test
xchg
in
adc
or
mov
cmp
inc
dec
shl
pop
lods
fdivl
sbb
test
addl
push
out
mov
add
mov
xor
ret
repz
cli
mov
sub
inc
push
popf
into
inc
push
jno
jmp
push
pop
clc
mov
jg
out
adc
lds
repnz
pusha
fstpl
adc
sub
or
or
rolb
daa
inc
dec
ljmp
imul
pop
jmp
test
or
popa
xchg
cld
mov
add
shr
push
repnz
daa
sub
mov
add
xor
add
sbbl
and
jo
scas
pop
ja
lret
aaa
cli
mov
dec
hlt
sbb
xor
xor
pop
movsb
push
ja
test
shrb
sub
pop
cmp
adc
lds
add
dec
lods
sub
push
adcb
fildll
and
das
fdivs
imul
fwait
ljmp
sbb
lods
pop
inc
push
cld
icebp
jge
mov
pop
fidivrs
xor
bound
mov
inc
xchg
mov
loop
lcall
pop
sub
stos
ret
xchg
sub
sub
or
mov
cmpsl
mov
dec
push
mov
test
shl
mov
jl
sbb
mov
outsl
jmp
mov
xchg
ret
push
sub
mov
mov
popa
adcl
cmp
mov
adc
adc
sahf
xchg
rorl
pop
mov
pop
rorl
pop
pusha
push
inc
inc
leave
sbb
enter
push
jns
ficomps
dec
mov
cltd
test
flds
cmp
test
xchg
push
pop
push
sub
xor
mov
hlt
imul
sbb
pop
test
fisttpl
mov
and
mov
mov
out
adc
mov
ljmp
enter
scas
cs
aas
cmc
mov
jb
adc
mov
int3
or
imull
fstps
xchg
aas
call
sub
push
in
ret
push
and
outsb
jle
xchg
das
mov
dec
cmc
and
in
add
pop
lret
jo
mov
daa
push
inc
iret
mov
movsl
inc
xchg
and
cmp
das
pop
loop
cmp
loope
daa
pop
mov
mov
outsb
scas
mov
jbe
lds
mov
cmc
daa
sub
xor
mov
pop
shll
gs
movsb
fs
xchg
insl
mov
icebp
loop
in
imul
scas
mov
push
dec
cli
jg
int
add
repnz
loop
popf
lcall
sbb
mov
xchg
mov
nop
add
mov
jbe
outsl
insl
sub
adc
aam
roll
inc
push
in
jne
dec
notb
repz
mov
xchg
mov
incb
into
popf
packuswb
cld
and
inc
aam
cmp
cmc
aas
xlat
hlt
std
call
int3
inc
cs
popa
incb
in
nop
stc
sub
inc
ja
mov
jnp
or
mov
jp
mov
scas
or
ret
insb
mov
push
in
pop
add
fiaddl
push
mov
insl
stos
push
mov
sub
std
xchg
dec
sbb
int
test
xchg
push
daa
xchg
fs
mov
or
call
test
in
mov
xchg
gs
fsubp
mov
xor
or
es
pop
or
pmulhw
add
repz
xchg
lea
stc
fmuls
in
hlt
cmc
jge
add
push
ljmp
push
lret
dec
xchg
shrl
fisttpl
sbb
jno
xchg
ds
cmpsb
fmuls
mov
and
pop
pusha
fnstsw
mov
fldl
lods
xchg
pop
inc
lret
lahf
lock
push
cmpsb
dec
loope
mov
push
mov
cmp
fstps
btc
jecxz
cmp
mov
sbb
inc
popf
jno
xlat
ljmp
inc
pop
push
xchg
flds
subb
fcomip
xchg
test
sub
pop
mov
inc
push
ljmp
xor
pop
xchg
sti
mov
cltd
mov
inc
les
sub
ret
rcl
dec
sbb
push
and
jns
sahf
ss
pusha
push
sbb
dec
add
cld
in
addb
scas
imul
mov
rcr
or
and
pop
out
xchg
pop
add
xor
into
prefetch
add
xchg
and
dec
mov
sub
add
mov
rcll
mov
mov
dec
mov
mov
adc
div
pop
sub
mov
mov
and
pop
popf
inc
adc
repz
in
xor
addr16
and
adc
xor
nop
daa
in
cmpsl
outsl
xchg
loop
cmp
lock
sahf
sub
jns
outsl
fwait
lcall
push
out
xor
pop
or
jns
test
movl
xor
ret
cmpsb
fsubr
shl
and
add
inc
icebp
and
aas
hlt
aas
mov
aad
pusha
mov
jecxz
push
push
dec
ret
push
inc
dec
cwtl
fsubp
pop
adc
sbb
xor
aam
push
dec
mov
or
addb
add
aam
leave
mov
jl
test
hlt
push
rorb
lcall
movsl
mov
sbb
scas
push
and
lea
ror
sbb
xlat
xlat
daa
inc
hlt
push
fs
add
cs
pop
ret
iret
pop
pop
cmpsb
das
push
sbb
std
cmpsl
addl
mov
in
jmp
test
test
mov
cli
xchg
out
sub
int3
add
shlb
stos
or
stos
sub
mov
movsb
cmp
fldcw
pop
insl
notl
ret
jle
das
xchg
or
enter
ret
shl
mov
ret
sahf
pop
addr16
loope
ljmp
testl
insl
mov
divb
or
fbld
outsb
mov
mov
pop
sbb
test
ret
loop
xchg
mov
add
scas
push
cmpsb
push
cld
rcrl
or
repz
sarb
adc
repnz
cmp
jge
push
mov
jne
inc
jb
movsl
pushf
or
int3
es
lcall
stos
imul
lds
xor
insb
mov
dec
movsl
test
lods
repz
cmp
ret
clc
fnstsw
mov
scas
xor
jae
mov
or
cld
inc
dec
popa
inc
inc
and
xchg
mov
push
pop
mov
push
or
nop
push
jle
push
sub
mov
fistpll
and
test
mov
jecxz
jns
add
adc
cmp
mov
andb
push
or
sti
mov
ret
mov
jnp
sbb
lods
xor
or
repnz
cmp
dec
sub
push
clc
jbe
xchg
xchg
cmp
lret
test
mov
js
clc
idivb
pop
add
rclb
xlat
shl
shrb
mov
mov
cmp
inc
or
jge
leave
popf
push
or
shll
sub
mov
dec
pop
inc
cmc
xchg
cmp
push
jle
or
mov
jb
dec
popf
push
pop
lods
test
lods
push
cmp
out
lods
notb
ljmp
dec
push
aam
enter
xlat
sarb
jb
loop
xlat
xor
mov
mov
iret
call
pushf
cmp
jle
xlat
jno
xor
push
fildll
and
mov
mov
or
jne
adc
or
test
das
sbb
pop
cli
test
cltd
stos
xchg
inc
dec
jne
cld
out
shll
sub
add
stos
aaa
lret
inc
inc
fmull
push
sub
inc
push
jp
int3
inc
inc
inc
xor
andb
cmp
call
mov
mov
dec
pop
inc
ret
hlt
in
jp
call
add
hlt
inc
pusha
pop
cmp
cmpsl
pop
mov
loop
xlat
and
daa
aas
jg
pusha
mov
out
mov
stc
jmp
stc
repnz
cmp
inc
addr16
xchg
aam
data16
sbb
aad
mov
sbb
inc
mov
cmc
jnp
xor
mov
in
push
test
mov
mov
mov
mov
jno
jns
sahf
scas
mov
arpl
arpl
lret
mulb
mov
push
lods
xchg
pop
pop
imul
imulb
push
subb
cwtl
arpl
je
jbe
data16
jno
adc
dec
shrl
inc
lods
lcall
push
rcrb
icebp
xchg
add
mov
jbe
dec
lock
mov
cmpsb
xchg
andb
outsl
jl
jge
testl
iret
imul
adc
xchg
mov
adc
sbb
call
lahf
mov
test
jae
cmp
push
sbb
mov
testl
test
mov
sub
jmp
mov
fdivr
and
aas
push
dec
cmpsb
push
and
add
addr16
dec
cmc
mov
inc
push
roll
lods
fbstp
out
dec
pop
and
push
clc
mov
movsl
pusha
jge
imul
xchg
and
sbb
dec
inc
push
arpl
out
push
imull
lahf
je
mov
cld
mov
add
rcrl
pop
xor
or
push
movsl
xor
pop
sbb
es
aad
scas
mov
sbb
push
push
and
xor
inc
xorb
stos
and
inc
movsb
cli
push
mov
enter
out
push
mov
ja
nop
sub
xchg
xchg
lds
dec
aam
inc
repz
movsb
push
sbb
mov
xor
cltd
je
or
lea
andb
mov
mov
imul
or
aad
push
dec
jmp
imul
adc
mov
dec
adc
mov
lods
push
je
iret
pusha
cmpsl
xchg
cmp
xchg
jno
int
xchg
fs
clc
lds
sbb
loop
jnp
cmp
mov
cmc
movsb
adc
push
jne
inc
xchg
pop
cli
adcl
popa
xor
sub
outsl
add
xchg
adc
sbb
sub
cmp
xlat
dec
mov
test
test
aad
subb
inc
jae
mov
movsl
pop
push
xor
push
and
add
adc
sbb
inc
fldl
leave
mov
insl
jp
mov
in
out
xchg
xchg
outsl
jno
into
stos
add
sub
fwait
dec
jo
push
mov
xchg
sub
add
stc
ja
jbe
arpl
add
and
add
bound
into
int3
mov
ljmp
mov
into
je
or
add
push
cmp
cmp
addr16
mov
mov
fwait
or
aaa
les
mov
arpl
test
lret
mov
cmp
lahf
nop
shl
std
shll
ret
dec
mov
lret
inc
mov
pusha
shll
jmp
loope
das
iret
and
xor
fsubrp
adc
jl
fdivl
mov
addr16
test
pushl
jmp
std
jb
sti
jae
pusha
sub
mov
push
pop
daa
inc
lods
sar
dec
cmp
scas
sbb
popa
mov
repnz
xchg
loop
std
clc
ja
and
jge
push
shrl
mov
sub
arpl
adc
push
cltd
mov
or
pusha
inc
xchg
jae
sahf
sahf
int
inc
cs
inc
cmp
inc
jo
push
pop
les
into
test
xor
xor
in
mov
insl
fsubrp
ss
mov
xchg
and
mov
inc
inc
xchg
adc
jle
into
js
sub
fnstenv
shrb
aam
dec
xor
mov
shl
sbb
lahf
sub
inc
rolb
daa
fstp
int3
scas
push
jl
je
cmp
dec
add
icebp
out
and
and
dec
mov
orl
pop
pushf
outsb
stos
das
inc
cmp
pop
xchg
mov
cmpsb
xchg
xlat
mov
jle
mov
or
in
jmp
test
xchg
inc
mov
xchg
out
sti
and
sti
popf
popa
or
orb
push
and
mov
fwait
psrad
ret
or
fwait
jle
pop
mov
xor
add
inc
pushf
dec
mov
push
decb
daa
push
inc
mov
xor
pop
mov
pusha
sarl
jmp
jb
push
test
jp
lret
xor
jns
aas
pop
iret
xchg
lcall
jbe
and
add
dec
adc
or
out
mov
add
insl
xchg
jne
in
insl
jo
add
mov
pop
fistpl
push
xchg
test
push
inc
out
fbstp
rorl
into
pushf
shl
push
je
fwait
jae
sahf
jle
sub
test
sub
pop
jne
jbe
fadds
ret
add
jp
lds
movsl
lods
sub
sbb
add
popa
adc
cltd
addr16
stos
lods
add
xchg
rcll
adc
addr16
iret
imull
rcrb
fisttps
enter
jecxz
out
mov
sti
jb
test
sbb
xor
addr16
fsubrs
cmp
mov
mov
call
pop
popa
xchg
sub
or
daa
enter
je
jne
aam
or
mov
xor
icebp
js
popf
push
data16
push
test
xor
mov
and
jge
mov
fsubl
mov
std
hlt
gs
scas
dec
je
les
push
mov
bnd
and
icebp
aad
int3
cmp
aas
outsb
cmc
ret
sbb
inc
subb
fwait
xchg
push
sahf
and
adc
and
inc
push
push
pop
dec
cmovne
add
test
jecxz
add
cmp
or
sbb
xchg
xchg
es
stos
or
scas
inc
or
adc
test
mov
pop
or
mov
nop
lcall
test
pushf
ret
fidivrl
aam
repz
dec
pop
sbb
ret
sub
xor
insl
or
jle
cmp
inc
scas
inc
jns
sub
add
iret
lret
mov
inc
or
push
push
fstl
repz
out
jg
lods
cltd
cli
std
movsl
aad
cmp
push
or
sub
fistps
pusha
mov
scas
mov
in
pop
pop
xchg
out
out
mov
ret
inc
xor
shlb
cmp
aad
pushf
or
test
ret
xor
ja
lret
or
test
lods
pop
hlt
emms
push
std
pop
fucompp
or
leave
jae
inc
jae
out
jg
ret
outsl
lahf
das
loopne
xor
jne
cmpsb
xlat
mov
fsubrl
dec
or
add
shlb
les
int3
push
lfs
pusha
adc
inc
inc
pop
test
push
imul
pop
mov
iret
and
sub
cmpsb
cmp
pop
jns
fbld
xor
xor
cmpl
sti
cmc
jne
or
iret
jb
ljmp
jno
mov
repz
mov
jno
pushl
mov
js
mov
sub
enter
jo
cmp
sbb
pop
lret
jns
mov
pop
and
cltd
mov
push
gs
rclb
push
iret
xchg
cltd
cmpsb
aam
sub
nop
sub
jge
lods
add
and
lock
jb
in
ret
xchg
aas
int3
pushf
jge
das
push
ja
das
subl
scas
xchg
adc
mov
and
xchg
fstpt
je
rorl
test
lea
sub
pop
cmp
xchg
imul
xor
cmpsb
sahf
std
push
call
cmp
mov
lret
dec
push
in
push
adc
out
outsl
mov
in
mov
sbb
xchg
fwait
mov
bound
sbb
push
sbbb
xor
push
fst
inc
jne
movsb
cmc
pop
lahf
or
dec
push
xor
fsubr
push
test
xchg
mov
sbb
sub
push
loop
xor
jnp
xlat
cmpsb
adc
lock
push
int3
lahf
adc
mov
add
nop
or
pusha
and
cli
sub
push
jg
pop
adc
jle
xchg
mov
dec
inc
loopne
xor
ret
jb
hlt
pop
pop
xchg
stos
pop
mov
and
popa
xor
mov
divl
mov
xor
xchg
rcll
test
je
decb
add
cld
lock
dec
mov
cwtl
mov
adc
push
mov
adc
xlat
add
mov
stc
inc
or
aas
in
fs
sbb
jo
aam
add
cmpsl
sbb
xchg
in
call
push
cltd
cld
xor
fstpt
arpl
inc
xor
leave
jne
sbb
out
lcall
xchg
sub
lds
xchg
sbb
int
adc
jnp
xor
lahf
push
ljmp
fsubl
xchg
mov
sarb
jnp
stos
icebp
adc
push
nop
or
adc
xor
jnp
jle
push
lock
outsl
sub
and
mov
push
mov
push
clc
mov
rcll
iret
repz
push
xor
jo
sub
jmp
dec
xor
in
mov
pushl
aas
cmc
cmc
mov
repz
xchg
cmpsb
ret
mov
adc
sbb
es
mov
jne
jae
in
mov
repnz
sbb
push
or
fdivl
add
std
in
rcrb
inc
out
xchg
adc
std
cmp
jbe
rcrb
push
push
pop
enter
popa
jno
fstpl
push
mov
orl
fildl
jae
mov
lods
mov
pop
mov
cmp
ja
mull
push
add
xchg
insb
push
adc
call
lahf
add
jecxz
jns
outsb
cmp
inc
scas
pop
loop
test
add
cli
fwait
repz
jle
xor
ja
add
xchg
sub
in
inc
lret
xchg
cmp
pop
add
inc
ss
mov
fadd
es
pop
xchg
pusha
in
into
fwait
test
fildll
cltd
in
xor
ja
and
mov
push
ljmp
dec
adc
popa
and
movsw
lahf
mov
pop
cmpsb
pop
jns
sbb
sub
ficompl
rolb
jb
adcl
lcall
repnz
cmc
inc
or
xchg
pop
rcll
icebp
adc
dec
cmp
stos
or
cmpsb
sbb
gs
imul
xor
aad
movsl
jae
cli
leave
push
adc
jae
pop
mov
cs
inc
add
mul
xor
dec
lods
pop
sub
js
cmp
stc
js,pt
cmpsb
cmp
sub
push
add
adc
call
cmp
js
or
push
je
mov
outsb
loop
rcll
leave
push
add
lods
push
shll
in
xor
in
repnz
and
push
mov
dec
mov
xor
add
mov
push
dec
push
push
into
std
ljmp
mov
inc
mov
call
or
fs
inc
add
scas
loope
sbb
push
lock
lret
idivb
leave
lds
adc
pop
xchg
js
mov
stc
push
ret
dec
cld
dec
into
hlt
sbb
cmc
loope
ret
out
retw
cmp
xor
inc
xchg
xchg
sbb
mov
cli
cwtl
roll
nop
or
sub
or
push
inc
cmc
mov
xor
dec
fldt
std
adc
adc
lods
xlat
adc
mov
out
fcompl
push
xor
or
addr16
test
and
aaa
cmpsb
out
jne
dec
xchg
fadds
inc
pop
add
fisubrl
inc
sbb
jmp
cwtl
push
test
adc
pop
fsubl
cmpsb
test
xchg
adc
xchg
gs
jp
outsb
and
dec
fisubs
mov
je
in
movsl
bound
adc
cmove
subb
adc
jae
pop
xchg
sub
push
push
gs
test
jge
cmpsb
mov
aas
cmp
sub
xlat
add
cmp
jbe
shrb
outsl
adc
dec
or
mov
mov
out
loopne
int
sarl
sub
adc
call
sahf
dec
and
imul
push
jl
fmull
lret
push
cli
daa
outsl
aas
sub
xlat
or
mov
dec
jnp
or
add
cmp
mov
cli
adc
mov
outsl
jno
jae
sbb
inc
stc
jecxz
rorl
xchg
lahf
in
lahf
jl
popf
in
gs
inc
sub
xor
mov
in
nop
and
push
mov
push
mov
inc
pop
arpl
or
adc
push
enter
pop
lock
ss
push
test
sbb
lret
popf
cld
inc
push
mov
pop
lods
mov
fs
stc
xchg
test
xchg
push
jle
push
cwtl
pushf
inc
jns
int
add
sbb
push
and
jle
push
mov
jb
xchg
mov
dec
out
das
stc
js
xor
outsb
or
nop
shll
sti
sbb
sub
push
int
push
lret
dec
push
or
mov
xlat
inc
jge
call
stos
dec
out
sti
in
lods
aad
mov
int3
fidivs
stos
movsb
mov
xchg
sbb
add
and
leave
mov
orl
out
jbe
mov
loopne
movsb
prefetcht1
mov
push
mov
in
pusha
pop
cmp
adc
cmp
lcall
std
hlt
push
testl
ljmp
sub
xchg
imul
adc
sub
pop
and
or
add
cmp
shlb
mov
mov
cwtl
and
mov
pop
cli
jg
pushf
jo
jmp
dec
and
cmp
and
scas
inc
rorl
inc
insl
xchg
dec
int3
sub
dec
add
pop
mov
out
push
mov
jo
jb
and
fwait
jp
pushf
sbb
xor
adc
movsb
imulb
ss
jb
cld
push
in
fwait
xchg
icebp
cmp
sub
mov
add
xchg
in
jae
pop
xchg
aas
mov
iret
sbb
rorl
data16
pop
or
sbb
push
shld
mov
jmp
inc
push
xchg
icebp
lret
in
fcoml
push
push
mov
inc
dec
adc
jo
lcall
or
jecxz
mov
adc
outsb
and
or
or
xor
and
lret
loopne
xor
push
add
mov
out
rcr
jg
push
cltd
imull
push
rolb
inc
insl
and
cmp
mov
in
push
scas
bound
cmp
push
scas
sbb
fisubrl
push
pop
lods
stos
push
sbb
push
pop
mov
cmp
cmp
mov
dec
call
dec
push
jmp
lods
xor
mov
loopne
cltd
mov
sti
sbb
sti
bnd
andl
xchg
fcmovb
sbb
dec
and
sub
pop
jne
push
push
pop
inc
sar
and
add
cmp
inc
lea
sub
add
pop
test
out
sbbb
mov
rclb
mov
push
sub
inc
lcall
sub
dec
ret
mov
stos
stos
push
xchg
rcl
add
ss
push
sbb
lret
inc
and
or
clc
xchg
mov
cmpsb
idiv
gs
lds
stc
xchg
jge
xchg
fldcw
jbe
cmp
xchg
pavgw
lods
ss
daa
push
js
pop
jg
int3
pop
inc
xor
mov
add
xchg
mov
insl
movsb
pushf
stc
cmpsl
out
cmp
xchg
in
in
push
xor
out
daa
repnz
jmp
imul
and
in
pop
xchg
aas
das
push
push
xchg
xlat
outsl
lods
and
sub
mov
jae
mov
ret
xchg
in
insl
int
pop
cmpl
xchg
and
arpl
pop
in
mov
int
jmp
test
and
adc
loopne
gs
mov
mov
cld
xchg
lcall
pop
out
pop
sahf
xor
jnp
sub
in
push
jbe
or
xchg
cmp
lock
mov
fdivl
out
lret
xchg
and
xor
leave
in
push
out
out
lds
in
into
iret
mov
dec
xlat
addl
loop
into
pusha
or
pop
sbb
xchg
fwait
lret
mov
lds
add
lock
cmp
sbb
out
shll
mov
mov
stos
and
iret
mov
mov
and
ds
les
ret
nop
mov
adc
and
es
jle
or
jns
iret
fs
dec
push
stos
cmc
ffree
dec
mov
adc
sbb
sbb
in
mov
scas
out
idivl
push
sbb
dec
pop
movsb
cmpsl
lods
es
sub
sub
mov
mov
and
fsubp
mov
hlt
hlt
mov
nop
inc
sbb
jg
addb
fdivs
sub
ret
les
mov
or
xchg
xorb
in
xchg
xor
mov
xor
iret
sub
inc
mov
mov
cwtl
jns
dec
cmp
cltd
sub
pop
xchg
jl
stc
mov
inc
cwtl
or
pop
loope
outsb
jge
movsl
sbb
stos
push
mov
pop
jl
xchg
sti
jle
mov
xor
xchg
add
cmp
ljmp
loope
add
enter
sbb
mov
lar
jmp
shrl
dec
cli
xchg
rcrb
sbb
sub
cmp
pop
and
mov
cmp
or
push
xchg
xchg
inc
test
xchg
lods
push
add
repz
mov
in
loope
popa
pop
add
xchg
lea
dec
cli
adc
clc
mov
pop
aad
cltd
sub
xor
sub
testb
xchg
iret
or
cmpsb
outsl
out
jb
or
icebp
hlt
xchg
dec
sar
movsb
sahf
mov
stc
test
or
mov
fadd
xchg
mov
sbb
and
pop
in
adc
mov
enter
or
movsb
ret
pop
out
pop
jge
jnp
cmpsl
hlt
sbb
and
mov
lods
out
xchg
popa
jns
cmp
outsb
mov
lods
sbb
dec
xchg
and
cltd
jb
xor
mov
jb
or
add
ss
xchg
les
pop
and
pop
cmpb
nop
dec
enter
fcmovnbe
stos
ffreep
ss
das
mov
xor
and
mov
xchg
aam
add
bound
and
lea
cli
inc
negb
clc
ja
cmp
sahf
mov
dec
std
inc
mov
pop
xchg
sbb
sbb
xlat
sbb
je
repz
lret
and
into
stc
xor
cmpsb
std
push
les
adc
std
cmp
xchg
cld
mov
stc
push
xchg
cltd
ret
pop
dec
cmp
adc
femms
mov
fistpl
clc
pop
mov
mov
xchg
inc
stos
rcrb
push
inc
rorl
push
sbb
scas
sub
xchg
movsl
sub
and
sbbl
hlt
nop
imul
sbb
add
sub
jle
fstps
xchg
sar
mov
mov
test
push
mov
mov
pop
fisttpl
shr
push
pop
pop
int
pop
mov
bound
mov
jnp
mov
cmp
xorl
inc
out
cmp
inc
inc
jecxz
adc
shlb
cmp
lods
dec
push
xchg
es
push
jo
loopne
test
sbb
pusha
repnz
loope
xlat
cli
dec
push
push
mov
out
jle
insb
es
sbb
mov
lret
test
push
pop
ja
mov
mov
adc
fld1
inc
xchg
nop
dec
in
aas
mov
icebp
lret
sub
insb
or
jne
cmp
pop
mov
lods
push
scas
jle
aad
dec
adc
sub
xor
sub
mov
cs
or
shl
imul
sub
jp
and
movsl
ds
or
lods
inc
je
or
popa
das
js
mov
sarb
xor
add
sarb
out
cmc
ja
dec
mov
xor
xchg
lcall
lcall
mov
mov
inc
mov
sub
lcall
in
icebp
cmp
cs
das
or
jle
adcb
xorl
xchg
pop
in
mov
add
push
adc
in
test
stc
cmp
jae
in
mov
mov
in
mov
shr
ljmp
dec
sbb
rclb
xor
push
inc
adc
test
cld
xorb
jo
push
mov
ljmp
xor
rcll
es
mov
xchg
hlt
jle
test
add
mov
sub
add
push
mov
rcrl
test
jb
rclb
dec
int
adc
or
cmp
mov
jnp
add
mov
lret
sub
and
fidivrs
push
stos
outsl
mov
pusha
mov
jne
loop
adc
and
pop
popf
dec
repnz
fistpll
arpl
fsubs
movl
xchg
sahf
cmp
ret
mov
adc
imul
dec
leave
aad
jmp
out
movl
sub
xor
jg
xchg
push
lret
xchg
filds
lcall
push
fadds
mov
adc
cmpsl
cmp
ss
add
les
or
adc
out
aad
inc
das
mov
sbb
jnp
jecxz
js
roll
jne
pop
js
int3
jle
hlt
jnp
cwtl
inc
fnsave
push
add
adcb
stos
dec
pusha
add
sbb
pop
loope
pop
jns
lahf
push
aad
stc
fdivs
xchg
fisubs
push
sub
mov
jmp
mov
cmc
jmp
rcrb
cmpsl
xlat
and
mov
in
push
hlt
sub
or
hlt
inc
gs
test
inc
js
sub
jmp
out
js
dec
jb
sub
adc
pop
or
fs
lahf
lods
outsl
push
lods
xor
fnsave
int3
movsb
and
test
icebp
pop
out
adc
or
jno
xchg
addr16
sbb
xor
hlt
scas
dec
test
out
scas
push
jo
jge
jne
add
or
mov
mov
cmp
adc
cli
shll
icebp
sub
sbb
in
add
lds
popf
ljmp
sarl
bsf
jae
push
jp
xor
mov
cmp
cmp
andb
daa
imulb
inc
jle
jo
or
push
push
mov
cs
call
mov
jecxz
pop
add
mov
imul
xor
leave
cmp
outsl
jp
add
lods
mov
pop
cli
arpl
cmp
sarb
cmpsl
cltd
push
ficomps
in
and
sbb
jns
lock
push
inc
pop
outsl
sahf
je
in
dec
test
dec
je
out
sbb
imul
inc
outsl
ss
jae
cs
push
jo
mov
dec
jnp
out
lods
push
aaa
add
ss
jecxz
xor
sbbb
sbb
inc
and
repz
rcrb
outsl
cltd
cs
mov
in
xchg
addl
out
dec
gs
outsb
push
call
insl
loop
lock
scas
cmp
mov
jbe
mov
mov
adc
loopne
mov
in
adc
mov
mov
out
test
add
pusha
scas
out
and
pop
sbb
adc
in
inc
cmp
ret
mov
xchg
loopne
jge
lods
or
push
outsb
pusha
mov
cmp
in
jmp
cmp
loope
outsl
mov
mov
jbe
loope
mov
lods
and
data16
out
stos
test
xlat
push
pop
lcall
push
sub
fcomp
mov
xor
call
jl
xor
test
pop
sub
andl
sub
mov
clc
sub
outsl
xor
jp
xorb
sbb
jae
pop
idiv
or
in
adc
xor
ret
sub
jne
push
shll
aaa
jno
je
mov
pushl
ljmp
or
idiv
push
mov
hlt
jmp
cmp
adcb
repnz
xchg
cmovs
out
or
fistpll
pop
inc
cwtl
inc
push
mov
stc
movsl
rcrb
add
lea
mov
out
mov
imul
or
xchg
push
cmc
xor
dec
stos
xor
insb
mov
aas
lods
xchg
fiadds
push
aaa
lahf
repz
cmp
pop
gs
lret
mov
mov
filds
fldcw
push
push
push
adc
fwait
test
rolb
call
push
js
js
fbstp
jmp
int
cmpsb
jo
xchg
push
dec
scas
cmp
ret
movsl
dec
fcoms
sub
inc
xchg
dec
pop
jmp
or
push
sbb
les
pop
push
lahf
jo
mov
cmp
out
std
out
aas
shll
mov
pop
popf
inc
orb
add
scas
inc
mov
sub
or
fwait
pop
push
cmpsb
icebp
jno
data16
or
jmp
ret
mov
and
lock
mov
in
ja
sti
pop
cwtl
pop
inc
jb
mov
iret
sarb
xor
push
sbb
adc
adc
pop
and
jnp
insl
ret
jge
lods
in
and
add
movsb
stc
jl
cmpsb
cmp
inc
gs
gs
lret
scas
lcall
jnp
aad
sahf
xor
lcall
pop
cmp
shrl
mov
gs
out
add
bound
out
adc
out
lret
jg
rcrl
aaa
push
fsubs
mov
cmpsl
inc
dec
scas
lret
xchg
or
xlat
adc
and
dec
or
in
dec
jge
lods
lret
mov
xchg
sub
loopne
push
jecxz
das
xchg
repz
test
sub
pop
fildll
mov
out
cmp
pop
sbb
sub
mov
popa
outsl
push
push
mov
sbb
xor
and
fists
xchg
cltd
mov
stos
push
test
ficoms
mov
shlb
ds
out
jmp
jns
lret
jg
fisttpl
stc
lock
rorl
and
dec
repz
mov
das
push
inc
sbb
lcall
ffreep
inc
push
inc
mov
mov
jo
pop
lret
fcmovnbe
inc
and
fmuls
or
xor
xlat
nop
leave
fstp
in
test
ficoms
sub
enter
mov
pushf
test
or
fnsave
mov
leave
jg
or
hlt
out
insl
dec
clc
ret
ds
sub
adc
mov
add
mov
jns
xlat
sub
xor
xor
cmp
ljmp
cmpsl
sub
jmp
js
cmp
into
mov
int3
cmc
push
call
pop
test
adc
test
jl
mov
xor
add
mov
mov
out
xchg
sbb
push
or
lret
xor
bound
cmc
shrl
mov
loopne,pt
jae
fimuls
jno
scas
popa
sti
sbb
jg
sub
mov
lret
xor
enter
fadds
mov
sbb
mov
ss
imul
dec
mov
xor
sub
inc
mov
lret
add
rcrl
lods
push
outsb
add
aaa
jb
mov
xor
mov
iret
pop
rcll
stc
add
outsl
push
fistpl
xchg
xor
sti
or
pushl
xchg
js
enter
std
mov
test
mov
movsl
cmp
push
orl
rcrb
mov
subl
lods
push
ljmp
push
pop
cmpsb
dec
jmp
pushf
mov
jae
sti
dec
scas
loope
push
adc
pusha
outsl
ret
aam
sub
jo
mov
aas
pop
lea
lret
andb
and
out
scas
jge
cld
dec
pop
fistpll
dec
sbb
mov
or
pop
dec
fcmove
out
fldl
push
iret
pop
inc
push
js
jg
stos
in
dec
call
jnp
shrl
ds
push
imul
cmp
rolb
popf
sbb
xchg
push
test
xchg
fcomps
clc
inc
jg
sub
repnz
cwtl
fucomi
cs
fstl
xchg
sub
jecxz
xchg
mov
cld
add
hlt
inc
pop
xor
in
pop
repz
cmp
and
pushf
es
gs
into
mov
into
dec
fwait
jl
sub
jns
dec
leave
cltd
cwtl
push
arpl
add
jne
pop
fs
jp
pop
popaw
cld
in
pop
les
xlat
addb
and
dec
subb
xorl
lcall
lds
fs
dec
mov
std
adc
sbb
cmpsb
orb
mov
sbb
loope
fistps
roll
xorb
dec
leave
aas
pop
push
es
lret
pop
or
add
repz
adc
add
pop
dec
inc
insb
outsb
addr16
jno
xchg
call
mov
into
jbe
fadds
or
lahf
insb
sbb
xchg
xlat
mov
imul
enter
ds
xor
cs
out
cmp
cmp
lea
cmp
lahf
out
and
pop
inc
pop
mov
sbb
pop
mov
incl
cltd
or
rcrb
inc
add
jbe
mov
rorl
xorl
rcrl
xchg
ds
scas
jmp
fwait
insb
push
imul
mov
xor
and
aad
lcall
add
sub
cmp
sub
dec
loop
xchg
xchg
fsts
cmp
mov
jno
or
movsb
ds
lds
fldl
cli
push
xor
aam
stos
pop
pop
call
pop
sub
cmp
std
add
cmp
push
or
xor
call
cmp
xchg
xchg
sub
and
dec
lods
dec
add
leave
test
mov
push
mov
inc
xchg
cli
jp
adc
cmpsl
mov
pusha
outsl
or
dec
sub
les
out
in
ret
lods
fs
loopne
call
mov
stos
cmp
xchg
add
int
sbb
movsl
int3
push
out
in
repz
lahf
outsl
es
ss
inc
mov
adc
into
push
add
ljmp
xchg
dec
jmp
push
xchg
xchg
adc
add
fdivs
movsb
je
les
popa
xor
xor
mov
xor
xchg
sbb
jecxz
std
icebp
loop
imul
xchg
inc
dec
mov
dec
sbb
into
sbb
sarl
xchg
cmp
xor
pushf
jo
add
enter
xchg
int3
cmc
out
in
mov
jg
xchg
and
xlat
repz
int3
rolb
add
test
push
mov
faddl
pusha
inc
loop
call
cmp
cmp
test
or
mov
jecxz
cmp
sub
jp
mov
pusha
xor
push
xchg
mov
mov
out
aam
psraw
loopne
mov
inc
inc
stc
fs
push
sub
sbb
sahf
movsl
les
jl
add
push
lock
cmp
ret
fsubs
pop
push
push
push
testl
xor
and
out
je
mov
adc
sbb
cmpb
dec
out
pop
sbb
xor
inc
jge
jmp
stos
ss
mov
sub
outsl
outsb
lea
inc
add
ret
popf
push
sahf
xchg
cmpsb
xchg
push
and
sbb
ss
cmp
xchg
test
and
cmp
xor
mov
cmp
out
out
repz
sbb
adc
int
enter
out
cmpsb
cwtl
mov
add
stos
xchg
call
adc
cmpsb
pop
leave
push
and
adc
jmp
or
xchg
push
hlt
enter
or
push
jno
hlt
pop
jno
mov
loop
insb
call
negl
ret
ljmp
pop
pop
mov
pusha
xchg
mov
aad
pop
inc
pop
nop
xor
sbb
mov
int3
mov
push
mov
out
dec
pop
inc
mov
xor
imul
sub
pop
cmpsb
bnd
data16
xchg
mov
xchg
jl
inc
mov
pop
out
sub
xor
sti
push
out
jl
scas
cmp
imul
jp
pushl
aad
movsl
or
sarl
dec
inc
movsl
aas
jg
jbe
inc
add
cmpsb
dec
shll
int3
pop
shl
xor
in
lahf
and
subl
lds
add
push
mov
add
imul
push
or
adc
cmp
lods
push
add
dec
aas
cmpsb
lods
out
cld
jo
push
sbb
aas
fwait
xor
and
jle
push
mov
aaa
push
repz
xchg
ds
or
fidivl
pop
int3
test
or
in
lea
lcall
fcomip
dec
add
push
or
div
je
and
test
es
pop
sub
push
push
push
repz
ss
jecxz
add
mov
cli
inc
mov
stc
dec
arpl
dec
xor
jbe
test
xchg
out
sti
pusha
std
sub
shlb
add
mov
int3
add
mov
mov
test
ss
imulb
or
jmp
mov
arpl
aas
push
lret
push
call
sub
jns
fldcw
stc
pop
and
lods
ljmp
lret
mul
add
stos
out
and
adc
xor
or
ds
and
xor
insb
add
mov
pop
or
lods
int3
shrl
or
jmp
lret
mov
cmp
ficoml
test
dec
repnz
fcoml
sarl
sub
mov
ja
xchg
cmc
pop
sbb
imul
call
imul
int3
notb
push
adcb
mov
sarl
inc
lahf
dec
xchg
and
je
or
mov
sbb
test
dec
xlat
push
ss
ljmp
sbb
inc
les
or
pop
jecxz
push
fbstp
cmpsb
or
mov
push
test
cmp
insl
out
xchg
xor
popl
jge
or
push
mov
sbb
lahf
cmpsl
xchg
pushf
pop
and
ret
stos
scas
iret
push
add
or
and
jmp
insl
add
icebp
insl
jle
adc
adc
dec
jne
xor
jge
mov
sahf
dec
insl
inc
je
shl
jg
mov
test
js
dec
rorb
push
adc
jae
xchg
cltd
clc
xor
mov
es
inc
movsb
in
mov
mov
jl
sub
lods
xchg
mov
daa
jmp
out
inc
add
aam
cmc
sbb
or
lods
ja
xchg
adc
mov
jnp
test
imul
ret
imul
xchg
subl
ds
add
sbb
and
in
add
adc
in
loopne
push
outsl
insb
bound
mov
cmp
decb
sbb
int
mov
cmp
js
add
mov
push
mov
out
and
movsl
out
in
jae
mov
mov
fcoml
jmp
sub
push
fnstsw
test
adc
repnz
add
ret
and
cmp
jo
jae
inc
shr
push
out
cmpsl
bound
push
icebp
push
lret
test
enter
cld
mov
mov
xor
orb
pop
ja
mov
dec
popf
cmp
jne
mov
stos
out
xchg
jecxz
daa
mov
lahf
or
xchg
xchg
out
jnp
xlat
pop
jae
je
in
inc
lods
popf
sarl
pop
out
scas
mov
call
cmc
not
mov
fdivrs
pop
ficompl
add
lahf
lods
fldt
ret
lret
mov
stc
pop
xor
sbb
lea
xor
subl
and
arpl
leave
mov
mov
jl
mov
test
shlb
out
ds
mov
push
jb
push
rclb
xor
andb
stos
push
push
negl
stc
jp
push
cld
imul
push
movsl
jle
hlt
xchg
fnstenv
inc
push
aas
sarl
sub
mov
mov
xchg
cld
add
mov
test
popf
lds
sbb
mov
jne
inc
and
data16
mov
sub
inc
pushf
sub
rcrb
inc
leave
out
outsb
push
subb
decl
jecxz
add
iret
aad
test
pop
push
jcxz
and
aam
jbe
pushf
pop
ret
cmp
lret
jne
jg
or
aaa
sub
cmp
test
jecxz
inc
jb
xor
outsb
or
xrelease
ffreep
jecxz
aam
scas
xchg
jp
fsubrl
cld
insb
push
adc
loope
mov
mov
inc
out
out
mov
pop
scas
add
xor
inc
in
movsl
mov
stos
ret
or
jo
into
sub
jb
cmp
shll
jb
cmpsl
sbb
xchg
call
adc
pop
fs
pop
adc
add
mov
and
std
stos
mull
or
ds
out
dec
in
ss
jns
xchg
fwait
pop
jne
test
mov
outsl
inc
sub
jle
cmpsl
add
repnz
ljmp
push
and
jne
mov
and
cs
mov
scas
inc
in
imul
stc
repz
dec
ljmp
dec
aaa
into
in
push
inc
loop
mov
lcall
es
rcll
cmc
push
sub
mov
mov
xor
jg
push
cmpb
cli
xor
fsubrl
shl
iret
jbe
jg
mov
inc
sub
mov
out
test
repnz
jno
pop
push
mov
jae
push
cld
imul
or
cltd
mov
xor
pushf
mov
dec
cmpsl
mov
and
dec
pusha
jmp
movsl
xchg
push
push
add
or
pop
dec
push
decl
lcall
es
out
sbb
cmpsb
sbb
add
stos
mov
insb
mov
mov
or
mov
lods
out
add
out
push
jo
mov
adcl
aaa
lahf
jle
dec
jmp
repz
and
jnp
pushf
cli
out
or
cmc
idivb
movsb
sbb
mov
aas
fsubrs
xchg
ja
inc
daa
mov
shll
xchg
or
mov
jecxz
pop
cmpsb
pop
stos
mov
int
shrl
cmp
xor
fstpt
lods
lea
sub
mov
rorl
dec
adcl
aas
pop
push
repnz
hlt
rclb
iret
fcmovne
scas
xchg
push
pop
push
dec
sbb
outsb
insb
addr16
jae
pop
jmp
aad
pop
or
movsl
pop
sahf
lods
stos
xchg
mov
mov
lds
dec
xor
push
lds
mov
in
loopne
stc
stos
jae
inc
jo
pop
cmp
insl
or
insl
imul
or
push
lahf
out
push
popa
cs
xchg
mov
mov
xlat
adc
xor
xchg
stos
dec
and
push
xor
fldl
jge
in
sbb
loopne
pop
in
ret
adcb
or
or
popf
movsl
cmpsb
insb
pop
pop
cmp
flds
sbb
test
pop
xor
ret
cmp
dec
push
je
or
addl
push
inc
jo
lahf
xchg
out
jnp
stos
inc
pop
aaa
stos
popa
cmpsl
jne
inc
in
jns
dec
xor
cld
and
movb
aam
mov
mov
jns
add
mov
inc
pop
sbb
dec
sbb
jmp
xor
cmp
les
insl
jns
mov
pushf
out
cltd
sub
mov
jno
lock
nop
stos
out
mov
ljmp
inc
jns
cmp
mov
leave
sub
mov
jnp
mov
std
cmp
ds
stos
scas
test
pop
lods
adc
std
and
adc
sub
mov
enter
aaa
jp
rorl
cli
pop
into
push
sub
mov
data16
fidivrs
jmp
adc
mulb
jge
outsb
popf
mov
sbb
xchg
push
jecxz
xor
jmp
mov
std
cs
fcoml
or
lcall
pop
adc
enter
xorb
enter
and
sti
clc
cmp
inc
push
mov
xlat
add
ret
repnz
xchg
xchg
rcll
jne
mov
out
pusha
adc
repz
push
out
mov
push
jmp
cmp
stos
mov
setns
xchg
push
sbb
cli
push
xor
daa
xlat
cs
xor
shll
cmp
jmp
cmp
pop
or
inc
fcompl
jb
stc
lret
rol
add
lods
iret
jmp
pop
popf
ret
sbb
sar
sahf
je
scas
scas
call
pop
cmp
and
inc
pop
icebp
and
lret
dec
mov
xchg
jge
sub
or
pop
jmp
cltd
pop
add
sbb
mov
ljmp
sub
das
sbb
pop
mov
fs
or
adc
or
clc
dec
pushf
adc
mov
xchg
inc
jnp
and
cmp
adc
stos
xor
adc
push
inc
dec
dec
or
outsb
cmp
test
mov
add
push
bound
ret
mov
in
stc
cmp
cmp
adc
in
mov
test
loop
push
and
cmp
cltd
mov
leave
scas
repnz
xlat
adc
mov
mov
ret
int3
push
mov
into
ds
loopne
xor
in
jge
mov
and
pop
sub
lret
test
popf
mov
repnz
decb
xorb
sub
fbstp
movsb
cltd
adc
mov
lret
outsb
inc
jmp
cmpsb
mov
ljmp
xor
dec
sub
mov
repnz
aad
enter
dec
sub
stos
pop
out
sbb
or
out
inc
stos
or
jl
in
jl
sub
cmp
fnstenv
mov
cmpsl
mov
jecxz
inc
dec
adc
loop
dec
jbe
movsl
mov
fs
mov
lret
pop
jle
sbb
add
mov
push
or
lock
stc
pop
int3
in
sub
and
sbb
dec
adc
in
hlt
xchg
jno
pop
mov
and
mov
push
fstpt
and
js
fdivrs
cmp
out
out
fidivrl
or
pop
push
add
inc
sub
insb
cltd
mov
lock
aad
out
scas
shl
pop
sbb
or
sti
dec
aaa
popa
sbb
mov
mov
incb
ret
jmp
push
ja
int
pop
inc
imul
lds
andl
pusha
add
jno
add
mov
adc
add
adc
push
int3
fwait
pop
imul
scas
lret
int3
cli
xchg
aad
lcall
or
inc
lods
insl
dec
cmp
movsl
imul
dec
mov
or
jl
mov
cmp
popa
fcmovnb
mov
insb
sti
adc
cmp
push
es
lods
aam
xor
scas
mov
movsb
sarl
pushf
dec
inc
fisttps
pop
mov
inc
mov
test
data16
lock
in
sbb
adc
ror
into
fucomip
or
cmpsl
hlt
inc
and
jno
imul
bound
in
add
outsl
mov
adc
inc
into
in
xchg
xchg
adc
call
sti
jmp
sub
stc
pushf
push
daa
out
add
xor
fnstsw
push
mov
mov
sbb
mov
movl
jmp
pop
jge,pt
arpl
xor
mov
sub
clc
test
stos
imul
jge
or
imul
aas
lods
inc
lahf
and
les
enter
push
dec
jp
stos
sbb
scas
movsl
in
or
bound
popa
pop
loop
std
nop
insb
xchg
ds
mov
jmp
xor
out
incl
in
fnstsw
js
pop
mov
adc
pop
dec
fcmovbe
in
add
xor
jge
repnz
imul
push
mov
adc
or
clc
enter
pop
iret
add
lea
in
push
xchg
scas
or
mov
nop
test
inc
std
aas
out
cmpsl
js
sub
filds
idivl
imulb
push
mov
arpl
in
popa
lret
in
cld
sub
mov
outsl
out
mov
cld
sahf
dec
mov
pop
aam
out
hlt
push
repnz
or
cmp
mov
lods
out
sub
out
inc
xor
pop
or
and
in
ja
adc
fcomps
push
or
mov
sub
rorl
xchg
aam
cmc
call
or
jmp
aad
push
enter
aad
adc
mov
loop
and
sbb
sbb
push
mov
pop
or
cmpsl
shlb
in
jmp
stc
cmpsl
adc
in
mov
cmpsb
mov
mov
sahf
jae
add
stos
arpl
popf
xchg
inc
out
push
insb
or
fs
imul
adc
adc
jno
clc
fisubs
xchg
mov
imul
xchg
mov
jnp
sarl
pop
xchg
lret
mov
pop
sbb
xor
jne
loopne
fldenv
in
cmp
or
sbb
out
fdivl
out
push
testb
bound
push
ret
repnz
mov
sub
iret
add
call
in
sub
sub
adc
push
push
push
test
out
add
sbb
pop
daa
sub
aaa
push
adc
jl
in
adc
inc
add
and
lcall
fcomps
mov
sti
into
icebp
lret
loopne
in
rorl
inc
xchg
pop
mov
jno
shr
lahf
or
sbb
mov
scas
sub
std
and
das
mov
xchg
dec
iret
rsm
pushf
icebp
ficoml
lret
fimuls
jbe
std
mov
cmpl
ffree
notb
cmp
mov
mov
ja
jg
dec
scas
pop
xchg
mov
cs
ret
ds
cmp
adc
dec
sahf
xchg
add
push
lret
jne
push
psrad
daa
insb
pop
notl
pop
cwtl
fs
jle
fcmovnbe
loope
call
jmp
xor
fwait
out
loope
mov
les
rcll
xchg
add
mov
push
lods
xor
cmpsl
mov
inc
pop
out
push
sbb
outsb
andb
movsl
addb
and
nop
and
cli
call
inc
cmp
push
rclb
fs
xor
inc
in
sub
add
mov
mov
cltd
clc
adc
lea
imul
sbb
imulb
xchg
sti
cmp
push
cmp
je
push
xor
stos
in
divl
push
fs
sti
push
jg
cmp
stc
adc
sbb
cs
and
inc
lahf
mov
mov
mov
mov
mov
lods
test
cmpsb
sub
xchg
das
mov
sub
push
inc
int
lock
push
jle
outsl
and
jge
leave
xor
sbb
jno
mov
popf
andl
pop
mov
push
push
ffree
sahf
sbb
or
in
push
add
call
sbb
popa
xor
or
xchg
enter
arpl
cmc
mov
and
add
pushf
push
ds
inc
xchg
mov
sub
adc
cmc
ds
push
sbb
mov
mov
fidivrl
pop
fildl
adc
imul
imul
xchg
outsb
lock
cwtl
inc
or
pop
dec
and
shll
sbb
fs
outsb
rorb
jne
outsb
rolb
xchg
mov
pop
inc
pop
sbb
rcrb
cmpsb
rorl
dec
or
inc
shll
add
movsb
or
push
mov
and
mov
leave
rolb
scas
push
and
mov
mov
mov
aaa
gs
pop
popl
cmp
addl
inc
nop
sbb
sub
sbb
pop
cs
cmpsb
aaa
pop
push
and
enter
mov
mov
bound
addr16
ret
repnz
inc
gs
inc
xorl
jae
mov
push
scas
pop
push
ljmp
add
lea
mov
add
push
js
pushf
and
cmp
and
idivl
jecxz
cli
jbe
dec
dec
in
test
pop
mov
sar
pop
fidivs
dec
xlat
popf
leave
dec
insl
bound
in
jmp
cmpsl
out
pop
popa
mov
stos
sub
jne,pt
dec
mov
lods
out
out
cmpsl
test
jae
inc
and
and
mov
fldcw
rorl
movsl
inc
sub
jae
push
out
test
gs
jge
mov
icebp
lds
mov
pushf
pop
fmuls
sahf
jnp
adc
rcll
shll
jno
int
pop
fwait
out
aad
in
cmp
clc
mov
and
adc
push
mov
scas
imul
inc
das
or
sbb
dec
lods
leave
mov
out
inc
stc
pusha
pop
pop
sahf
mov
xchg
pop
cwtl
imul
push
testl
xchg
cmp
push
and
ret
enter
inc
mov
scas
pusha
xchg
in
cmp
mov
icebp
ljmp
call
push
or
jne
fcoml
out
filds
out
shl
mov
push
fcoml
js
ds
cmpl
loope
sahf
fcmovnb
sbb
mov
jbe
lds
aaa
dec
insl
mov
lret
sub
inc
loope
cmp
sub
in
mov
out
cmp
xchg
jnp
lea
test
fucom
push
insb
gs
ret
mov
or
cmp
fmull
loopne
push
sbb
mov
mov
in
mov
je
mov
rorb
stos
cmp
dec
add
lcall
insb
add
inc
jb
es
mov
movsl
pusha
inc
cmpsb
and
dec
fldcw
adc
lds
filds
sbb
xor
xchg
adc
mov
push
pop
fldenv
iret
push
sbb
or
ret
movb
xchg
jecxz
in
fnsave
adc
xchg
in
enter
cvtps2pd
cli
add
fwait
scas
xlat
or
xchg
and
jb
push
pop
out
mov
cwtl
jne
dec
lods
ss
adc
mov
add
sbb
orl
sbb
mov
fs
insl
jecxz
fmuls
pop
sub
lret
pop
adc
push
notb
arpl
mov
repnz
jmp
lods
iret
mov
mov
xchg
push
sbb
cld
pushf
cltd
xchg
sub
jno
mov
call
push
xchg
jmp
jmp
je
fnstcw
pushl
out
cmp
xor
out
pop
loop
sub
mov
inc
xor
out
dec
aas
sbb
inc
mov
pop
sbb
push
jns
test
roll
or
mov
mov
enter
rorl
les
xor
imull
xchg
jb
aaa
ret
scas
sahf
or
stos
adc
xchg
es
aam
xlat
out
addb
mov
mov
push
or
mov
loope
mov
add
jno
lret
dec
cld
or
loope
inc
leave
scas
ss
imul
and
pusha
sbb
dec
dec
mov
add
dec
dec
movb
push
jg
decl
push
loope
cmp
stc
jae
xchg
gs
pop
rcrb
or
xlat
xor
mov
repz
cltd
arpl
lret
lea
cmp
sbb
jge
mov
mov
fnstcw
jo,pt
loope
inc
mov
mov
stos
ja
cwtl
xchg
cmp
add
push
and
mov
pop
and
test
int
insl
inc
mov
negl
iret
xchg
mov
cmp
push
mov
xor
rcl
mov
pushf
sbb
out
inc
xor
jae
rcrb
stc
std
icebp
adc
setle
int
bound
rorb
mov
loope
popa
and
adc
mov
fnstsw
pop
ljmp
clc
fisttpl
repnz
enter
inc
stos
fwait
sbb
aad
push
xlat
jns
ss
sbb
stos
sub
cwtl
jo
mov
leave
cwtl
pop
sahf
adc
mov
cmc
inc
aas
aas
or
push
test
inc
mov
insl
aad
mov
filds
jnp
aad
sbb
leave
clc
cmp
push
push
mov
xor
cmpsl
ljmp
and
sbb
pusha
lahf
inc
mov
dec
add
sub
scas
adc
dec
add
add
mov
outsl
cmc
sub
sbb
in
in
rcrl
jmp
mov
mov
mov
out
jne
xchg
jmp
iret
xor
js
mov
imul
cmpsb
fiadds
jne
aam
cmp
in
cld
or
pop
mov
fnstsw
scas
sub
inc
test
pop
test
cmp
int
xor
sbb
jle
sub
sbbb
les
insb
dec
inc
pop
outsb
xchg
popf
pop
cmp
lcall
mov
or
nop
push
mov
push
or
xchg
sbb
push
jecxz
arpl
aas
push
jmp
test
out
pop
cmp
mov
mov
pop
adc
lods
int
sub
daa
ror
dec
cld
sahf
pop
mov
push
out
push
fistpl
lahf
pop
int
jmp
jb
push
rorb
es
testl
aas
cli
xor
cmp
inc
push
data16
add
in
sub
inc
xor
repnz
dec
and
xchg
adc
mov
sbb
xchg
add
call
sub
out
sti
adc
xor
sub
out
test
cwtl
pushf
lahf
out
out
cmpsl
lods
push
mov
popa
mov
mov
aam
pop
sbb
rorl
sbb
sbb
cmpl
cmp
pop
sbb
cmp
fs
push
ror
xchg
comiss
mov
add
pop
push
roll
stos
cli
fs
cmp
in
push
jle
push
pusha
push
mov
enter
fisubrs
jb
movsb
rcll
pop
insl
push
lahf
ljmp
or
aaa
add
jmp
xlat
lock
aaa
ljmp
mov
cs
mov
push
leave
or
pop
mov
adc
cmp
fs
add
mov
dec
fisubrs
pop
movsl
or
outsb
test
arpl
fstl
and
push
lods
lea
frstor
mov
cltd
push
out
or
jg
int3
pop
mov
ljmp
xchg
aam
lods
cmpsb
insb
icebp
xchg
add
jnp
popf
inc
sar
hlt
sub
testl
dec
icebp
out
es
sub
xchg
cli
inc
mov
mov
dec
mov
sub
add
xchg
push
push
js
out
test
xor
and
stc
cli
mov
pop
inc
push
mov
aaa
lahf
shr
insl
incb
daa
push
ficomps
lds
and
ds
fisubrs
xchg
stos
std
les
cwtl
jno
xor
lea
cli
les
xor
shl
mov
adc
jo
cmp
mov
mov
adc
push
sti
sub
push
mov
mov
je
aaa
push
xor
dec
movsl
mov
jns
dec
and
sub
sub
dec
mov
push
mov
ljmp
lcall
ss
dec
and
sbb
inc
dec
sub
pop
ss
xor
lret
andl
outsl
sbbb
or
cmpsl
push
imul
push
out
hlt
stos
jno
dec
fidivl
fwait
sbb
scas
movsl
mov
imul
sub
fs
or
or
aam
lahf
ret
add
dec
mov
inc
xorb
lcall
jecxz
jmp
out
push
int3
popf
push
push
xchg
les
and
adc
cwtl
mov
shlb
inc
inc
cmp
jp
cmp
sbb
cmp
dec
lret
fsts
call
or
in
out
cwtl
adc
imull
mov
jp
pop
cmc
repnz
push
mov
dec
dec
in
inc
push
or
rcl
test
push
pop
push
cmpsl
popa
icebp
push
xchg
ja
lea
mov
stc
mov
loop
push
gs
pusha
jae
mov
clc
xor
dec
sub
adc
iret
xchg
push
clc
subl
vpsubq
xchg
cld
sub
mov
movl
add
and
xchg
jb
xor
mov
cmpsb
cmc
test
cmp
pop
movsb
lods
mov
xchg
out
dec
xchg
lods
xor
movsb
jp
popa
dec
ja
mov
test
jmp
xchg
jo
xchg
jl
scas
ds
push
test
xchg
int3
gs
mov
imul
push
imul
push
scas
sub
pop
and
lahf
mov
xor
mov
mov
xor
fidivl
fmuls
lods
mov
rolb
cmpsb
lds
lahf
andb
lcall
sub
xchg
cmpsb
and
data16
sub
dec
and
inc
ljmp
jl
test
arpl
and
std
fdivp
adc
pop
inc
fwait
push
mov
push
pop
sub
lret
push
in
in
mov
sbb
jnp
adc
pop
jbe
sbb
pop
dec
fiadds
or
int
add
dec
mov
mov
xchg
popa
daa
jns
and
lret
imul
jmp
adc
dec
inc
dec
pop
sbb
shrb
push
int3
test
shr
jmp
push
imul
cmp
cmp
stc
cld
adc
ss
and
fisubs
dec
or
xchg
les
inc
insb
inc
and
out
das
les
mov
aad
imul
mov
addr16
push
repz
inc
add
mov
xchg
pop
dec
idivl
sbb
jno
scas
pusha
test
mov
push
xor
mov
cmp
icebp
imul
es
std
mov
pushf
lahf
adc
pop
inc
cltd
inc
add
insb
stc
jle
cmp
pop
push
aam
jo
or
xchg
sbb
lcall
addr16
sbb
fldt
divb
fsubs
pop
mov
pop
sub
mov
xor
jp
push
or
pusha
and
jmp
orb
jo
cmp
cmp
mov
dec
loop
sbb
mov
rcrl
push
sarb
mov
sti
xchg
sbb
inc
sbb
mov
adc
adc
pop
cwtl
jle
adc
or
jge
stc
cwtl
xor
bnd
pushf
ja
lret
xor
or
es
sub
xchg
push
mov
enter
push
loop
rclb
ds
cmc
sarb
mov
sub
dec
fnstenv
dec
int
xchg
mov
pop
pop
dec
jge
xor
out
data16
mov
inc
sahf
icebp
push
les
xorl
addr16
or
xchg
fs
ror
adc
jmp
cld
test
repz
clc
xor
test
dec
mov
fcompl
fcmovnbe
and
jp
mov
adc
into
sbb
sub
addr16
inc
mov
dec
push
adc
cmp
popf
lret
xchg
sbb
cmp
shrb
xchg
popa
mov
sti
mov
xlat
or
mov
sub
cmpsb
pop
hlt
adc
mov
stos
pop
jno
pop
mov
pop
cmpsl
pop
shlb
adc
orb
push
and
xor
push
dec
dec
cmpsl
push
inc
roll
in
shlb
push
pop
aas
cmp
aad
mov
xor
jne
push
mov
dec
ljmp
scas
loope
sbb
cltd
dec
cmp
jg
sbb
repz
sub
add
xchg
aad
bound
sarb
push
jle
sbb
fwait
mov
or
cmp
imul
lods
cmc
mov
imul
jo
mov
leave
sub
in
xchg
fwait
mov
mul
sbb
scas
ret
inc
xchg
jnp
jl
push
enter
dec
movsb
pop
sahf
mov
cmp
enter
dec
mov
faddp
loopne
es
xchg
push
fimull
or
hlt
cmp
xor
mov
cmp
push
fcompl
test
les
adcb
jnp
pusha
fxch
bound
cmp
xchg
out
insl
aaa
inc
mov
push
adc
int
add
cmpsb
loope
jge
sti
addr16
pop
sub
stos
push
mov
and
adc
into
cmpsl
pushl
pop
addr16
jne
addr16
add
mov
ljmp
lret
aas
movsb
jno
cmpsl
test
mov
cltd
das
addl
mov
leave
scas
aam
inc
cmp
mov
mov
jne
not
mov
push
add
std
adc
test
sbb
adc
and
lret
mov
xor
test
xor
fsts
sbb
rcll
and
jecxz
xchg
or
inc
mov
sub
pop
out
out
mov
popf
mov
cmp
ret
int3
cmp
pop
fistps
cmpsb
push
jl
test
sti
xchg
dec
rol
push
mov
lods
pop
cwtl
pop
loopne
rcrl
inc
movsb
adc
xchg
popf
aad
mov
cmp
bound
add
nop
pop
add
add
clc
ss
outsl
aam
inc
cltd
repz
mov
jae
loopne
push
dec
mov
aad
loop
int
push
lahf
hlt
and
mov
popf
fdivl
adc
rcr
scas
dec
loop
cld
jl
aas
mov
jge
dec
lahf
add
jo
mov
push
xchg
sub
jo
jp
mov
mov
inc
inc
push
push
or
int
sahf
in
xor
dec
inc
dec
insl
jnp
sahf
sub
in
push
sahf
sbb
in
dec
das
sub
std
test
pop
orb
call
into
imul
out
jbe
jge
loop
lahf
jl
pop
mov
push
movsb
or
xlat
cmp
or
jl
lret
dec
loope
call
aam
xchg
mov
pop
pushf
xor
pop
out
mov
add
fsubs
imul
dec
test
orb
out
out
mov
adc
mov
push
add
add
movsl
push
negl
pop
icebp
adc
and
out
xchg
mov
daa
out
sub
insl
xchg
clc
sbb
scas
add
adc
mov
jge
ror
cmp
aam
sbb
arpl
out
pop
fldt
jle
and
out
add
outsb
push
test
fidivl
sub
hlt
aas
lret
adc
fisttps
adc
jg
jae
jle
cmc
cmpsl
pop
stos
sbb
xchg
ds
mull
fstps
push
cmc
ret
push
xchg
or
pop
or
or
cs
test
dec
clc
mov
shrb
js
push
sbbl
mov
pop
pop
int
jbe
xor
mov
sbb
mov
ja
nop
xchg
mov
xchg
mov
rclb
push
imul
jle
fs
mov
popf
int
daa
adc
call
shll
inc
stc
fcoml
leave
out
push
in
mov
inc
mov
movb
inc
jb
cmpsl
adc
ficoms
lea
icebp
aas
mov
sarb
push
int
inc
inc
orl
mov
xchg
mov
push
loope
jae
inc
inc
das
jb
pop
stc
jnp
loopne
jno
inc
out
mov
out
xlat
shr
jmp
pop
popl
rorb
cld
pop
ret
outsl
lcall
vmovaps
pop
stos
repz
popa
dec
xchg
pop
dec
repnz
jl
rolb
je
and
jbe
out
leave
jns
adc
push
pop
push
and
call
jo
jp
jmp
sub
xor
ret
int3
inc
inc
adcl
push
inc
lock
jb
pop
pop
jns
rcrl
push
pop
cmp
mov
pop
scas
std
lea
mov
sub
out
std
mov
mov
dec
adc
and
lock
and
push
add
push
into
sbb
insb
dec
and
inc
or
xchg
imul
pop
jmp
mov
repz
adc
or
inc
pushl
sbbb
aas
push
cwtl
fisubrs
push
mov
mov
sti
sbb
inc
xor
mov
xlat
ret
popa
aam
pop
insb
mov
sbb
fsubl
xor
xor
shlb
lcall
pop
mov
jle
cmp
lods
scas
ja
popf
xchg
mov
rcr
mov
mov
aas
pop
xor
fwait
pusha
mov
ja
not
movsl
ret
sbbb
icebp
imul
mov
xadd
mov
out
fwait
mov
popa
rcrb
mov
shlb
notb
scas
mov
sbb
enter
push
out
push
or
pop
pop
mov
vpaddusb
pop
xor
ljmp
lock
mov
push
cmp
sti
sbb
xor
mov
mov
push
xor
jmp
xchg
cmp
push
and
jo
sub
cmp
pushf
subl
stc
push
icebp
stos
cmc
bswap
ret
in
push
ds
mov
dec
lea
dec
jae
dec
nop
adc
pop
jge
fwait
clc
ret
ja
scas
adc
inc
inc
pop
ret
cmp
mov
imul
push
or
jp
add
in
incb
jp
cltd
sbb
push
push
fidivrl
jnp
in
sub
stc
or
add
pop
movsl
mov
pop
movsl
mov
mov
cmp
mov
add
rcll
fists
or
sub
imul
pop
xchg
and
fidivrs
or
movsl
iret
mov
mov
les
add
mov
pusha
mov
loop
in
or
rorl
sbb
xchg
popa
adcl
jb
xor
cmp
sarb
xchg
or
inc
sahf
aaa
pop
cmp
sarl
push
cmp
or
adc
jmp
lds
mov
stos
mov
sub
push
in
inc
sarb
dec
movsb
out
fmulp
push
add
sub
imul
adc
mov
pop
rorb
xchg
clc
jnp
stc
jle
aad
or
movsb
in
in
movsb
mov
xor
fdivrl
test
jbe
sbb
pushf
mov
inc
pushf
pop
pop
add
ljmp
inc
in
enter
push
jmp
stos
jo
mov
das
dec
cld
mov
xchg
dec
pop
fmul
pop
enter
inc
int
push
fisttpl
mov
insb
rolb
xchg
jle
xchg
pushf
out
mov
inc
stos
out
dec
jle
mov
rorb
push
mov
inc
lea
jbe
enter
mov
mov
in
or
cs
hlt
pop
mov
popf
rcrl
lock
mov
pop
mov
xor
jmp
jl
pop
and
js
addr16
jnp
les
pop
inc
sbb
dec
inc
loopne
es
pop
mov
sub
inc
add
cmc
sub
imul
gs
mov
xor
mov
inc
add
or
fisubrl
ds
push
push
ret
dec
adc
sub
pop
test
cmpsb
or
cmc
lea
jg
jl
jmp
jg
std
or
pop
imul
mov
les
outsb
adc
hlt
xchg
iret
aaa
push
dec
sti
adc
iret
sahf
inc
jl,pt
dec
mov
lret
fildl
adc
je
aas
les
push
repnz
adc
imul
loopne
sahf
pop
out
bound
arpl
inc
cs
push
sub
add
jbe
xchg
pop
addl
loopne
test
mov
ss
mov
addl
addr16
leave
mull
xor
pop
jno
fs
pop
sahf
into
push
loop
xor
scas
mov
adc
mov
int
stos
cmp
push
dec
cmp
aam
test
dec
aas
cwtl
push
lea
jle
pop
dec
and
jno
push
sti
cs
add
sub
mov
lahf
fsincos
jle
xor
inc
imul
out
movsl
lret
sub
in
roll
push
mov
loope
jae
aam
scas
lea
or
inc
jecxz
fs
decb
cwtl
lds
outsb
mov
adc
sbb
jp
sti
es
cmp
dec
inc
mov
sbbl
mov
std
pop
stc
pop
mov
mov
sbb
mov
adc
fadd
pop
cmp
lcall
stos
push
loope
adc
inc
cmp
lret
in
mov
jmp
push
jb,pn
lea
cmpsl
mov
xlat
sbb
sbb
push
push
leave
xchg
out
cld
pop
push
and
in
xchg
rcrb
fldl
shlb
and
stc
cmp
ja
mov
pop
aad
push
xchg
mov
outsb
inc
fistl
test
mov
mov
or
stos
fsts
xor
mov
jae
imulb
in
cmpsl
xchg
cmp
aas
mov
jmp
inc
neg
scas
and
xchg
xor
insl
mov
mov
lods
mov
push
dec
mov
jae
pop
mov
hlt
out
repz
addr16
mov
insl
fiadds
movsl
adc
mov
enter
lods
push
sti
and
rcrb
mov
ret
mov
aam
jg
push
and
js
sub
mov
adc
mov
stc
adc
mov
in
call
loope
ret
and
sbb
ss
mov
xor
out
fstpt
cmp
push
and
or
push
sbb
mov
rcrb
adc
mov
repz
jle
test
ficoms
aad
out
inc
jg
add
lret
mov
dec
add
cmp
jns
mov
push
push
xchg
data16
pusha
jne
push
xor
cmp
ss
mov
inc
iret
adcb
lea
and
lock
jg
sub
mov
mov
xor
jge
jmp
jne
addr16
xchg
shrl
pop
mov
xchg
outsl
stc
int
push
push
les
fisubl
jne
and
outsl
cmp
or
loope
andl
ljmp
push
mov
push
jo
pop
inc
in
fcom
push
aaa
les
push
mov
cmp
aas
mov
arpl
outsb
lret
xor
sbb
js
xchg
test
lods
ret
sahf
add
faddl
inc
and
movsl
cmc
imul
mov
jbe
das
dec
ret
adc
jbe
and
enter
in
movsl
cmpsb
mov
test
repnz
lods
das
fwait
scas
sub
out
jbe
pop
cltd
subb
xchg
and
and
lds
add
out
push
or
testb
mov
push
mov
cmp
push
push
movsl
mov
add
outsb
lahf
mov
scas
imul
sbb
xchg
push
mov
xchg
jns
xlat
xchg
inc
sbb
jne
xlat
inc
mov
xchg
or
adc
xor
mov
lret
shlb
cli
cmpl
and
adc
mov
dec
bound
sbb
mov
sub
jb
push
dec
pop
push
test
cmc
into
mov
sub
jne
xor
fidivl
sub
cmp
rcl
mov
inc
cmc
sub
aas
adc
jo
insl
sarb
xchg
fcoms
pop
mov
or
jb
xor
add
js
push
push
ret
ja
jo
in
cmpb
jnp
inc
push
loope
inc
sbb
out
pop
or
or
lock
xchg
xchg
pslld
xor
leave
cs
jno
popf
mov
xchg
sub
mov
mov
int
mov
fmull
pusha
xchg
add
inc
xlat
out
and
mov
es
push
or
push
pop
pop
lds
jae
in
popa
lods
addr16
and
das
mov
adc
fsts
imul
cli
es
in
dec
xchg
dec
mov
loop
mov
mov
xchg
inc
push
sub
sbb
iret
sub
xor
fwait
ljmp
outsl
ret
jns
idivb
bound
mov
and
mov
mov
mov
aam
inc
je
dec
decb
cmc
push
aad
jae
fdiv
mov
fists
add
rolb
mov
icebp
das
scas
and
das
ds
lods
cwtl
xchg
push
mov
push
stos
scas
int
leave
sub
ljmp
repz
mov
mov
mov
xchg
outsb
cld
stos
add
mov
push
out
ret
xor
inc
popf
pop
sbb
jns
sub
and
sbb
sub
sbb
xchg
cmc
gs
aaa
cmp
mov
lods
lea
mov
fldt
movsl
pop
stos
cmp
cmc
pop
and
sub
out
movsb
js
mov
xchg
fcompl
jb
mov
loopne
loopne
mov
in
shlb
in
test
adc
dec
sbb
xor
fsubs
push
pop
mov
jae
outsl
pop
pop
dec
stos
or
lods
call
repnz
xor
pop
adcb
sbb
sbb
cmpsl
or
hlt
push
cmpb
bound
scas
arpl
fstps
ret
lock
or
ret
arpl
popf
movd
nop
dec
lret
popa
popf
xor
sahf
aaa
xchg
movsl
int
loop
mov
int3
popf
lret
loop
fwait
arpl
mov
or
loop
dec
xor
jg
das
jecxz
mov
xchg
and
popf
rorw
mov
mov
je
mulb
mov
in
xchg
and
fisubl
xor
cmpsl
in
pop
mov
xor
loopne
push
sahf
push
sbb
xlat
pop
jl
cli
lock
pop
xchg
inc
aas
lahf
sarb
insb
xchg
ljmp
je
ljmp
imul
aas
lock
push
ret
xor
jmp
lahf
ss
add
in
mov
jle
fisttpl
arpl
pusha
jnp
enter
cli
push
push
pop
decl
sub
push
xchg
bound
xchg
sbb
fstpl
mov
sub
mov
js
pop
inc
std
inc
jo
cwtl
fimull
dec
and
inc
je
add
push
imul
nop
mov
mov
mov
or
lret
dec
mov
pop
repz
addl
cli
lods
add
outsb
lahf
cmpsl
sub
ljmp
sbb
jecxz
mov
mov
ror
in
push
add
addr16
data16
icebp
xor
push
pop
or
pop
mov
fisubrl
lcall
cmp
fcmovb
out
xchg
int3
xor
test
xchg
mov
movsl
pop
mov
cs
mov
bound
rol
mov
jg
dec
mov
mov
pop
xorl
pop
out
bound
in
jne
pop
test
jno
jl
adc
push
jmp
sbb
mov
jp
cmc
orl
ja
adc
movsl
fildl
nop
pop
lds
or
lea
das
out
inc
lea
pop
inc
jae
sbb
bound
test
jmp
test
jg
jb
adc
scas
fisttpl
sub
cmpsb
xchg
adc
test
pop
inc
test
push
je
out
outsl
mov
ret
out
or
xchg
add
in
mov
fisttps
adc
mov
dec
mov
sbb
and
std
sahf
cwtl
cltd
ret
add
add
rclb
jmp
gs
lock
cvtdq2ps
popa
insl
lods
dec
sbb
sbb
fiadds
bound
pop
inc
jo
movsb
or
lcall
ret
lods
pop
negb
or
cmpsb
sub
insl
lahf
mov
loope
xchg
adc
xchg
sub
test
sub
cmp
mov
jns
test
dec
jae
push
int
ja
xor
test
mov
pop
js
push
subl
ds
lods
push
sarl
sbbl
cli
xchg
test
adc
cmp
mov
imul
lahf
push
mov
mov
dec
into
lods
adc
mov
xor
addb
xchg
dec
mov
add
cmpsb
push
data16
xchg
repz
aad
push
jb
jne
sti
mov
cmp
stos
xchg
repz
in
sbb
repnz
and
dec
nop
sbb
rcrb
adc
jo
pop
cmp
xchg
push
lods
bound
fdivl
cmp
repz
mov
mov
jnp
js
mov
mov
in
mov
sub
cli
xchg
fwait
test
ds
lahf
xchg
loop
jl
cld
pavgb
xlat
sbb
or
sbb
les
ljmp
ret
ss
loope
adc
mov
push
push
js
mov
lret
test
sub
cmp
adc
jle
fildl
in
jo
es
mov
mov
cmp
dec
lock
inc
cld
insb
out
cmc
inc
inc
jns
inc
nop
testb
dec
jp
loopne
pop
push
and
and
sub
pushf
testl
ret
subl
fucomip
mov
or
jle
pop
movsb
push
push
xchg
sub
icebp
cmpsb
push
jne
push
iret
sbb
jmp
orb
nop
cld
movsl
push
movsl
sub
or
add
jle
cltd
test
cmp
xor
xchg
gs
leave
loopne
adc
pusha
push
jns
adc
cmp
lcall
sarl
lock
lock
shll
add
mov
aad
xchg
outsl
jno
sub
popf
or
ucomiss
pop
inc
pop
sbb
sub
sbb
xchg
fnstenv
fildl
hlt
out
sub
xor
pop
ss
sbb
out
mov
push
sbb
cmc
roll
ljmp
sbb
mov
or
lcall
sub
adc
mov
fnsave
jge
sub
and
cld
movsb
dec
int3
rcr
imul
clc
sub
sbb
mov
outsb
sti
or
pusha
xlat
and
enter
mov
dec
roll
popa
aas
sub
cmp
xor
jmp
mov
mov
and
ds
sbb
imul
lcall
cmp
iret
gs
popf
out
mov
inc
andb
scas
jo
mov
mov
into
jecxz
shll
and
or
sub
mov
mov
daa
cwtl
add
rcl
jo
or
or
inc
lods
add
sub
leave
int3
orb
in
or
fidivrs
adc
fiaddl
popf
mov
sbb
push
xor
inc
or
out
cwtl
mov
call
rclb
xchg
push
repz
in
adc
inc
les
push
ret
loop
cli
sbb
fisubrl
outsb
icebp
fmul
dec
cmc
mov
adc
dec
inc
pop
dec
dec
sti
sub
sub
or
repnz
inc
enter
xor
inc
adc
jmp
push
ds
repnz
mov
out
lds
aad
sbb
push
mov
pop
orl
mov
fisubrl
lock
jno
sti
ret
movb
inc
xchg
sbb
andb
arpl
adc
pushf
sahf
das
std
pop
add
imul
cmpsl
mov
jae
add
fimuls
xchg
xchg
or
cwtl
pop
mov
lods
dec
xchg
fisubl
daa
sahf
shlb
add
fcoml
out
clc
movsb
xlat
loop
pop
adc
mov
xor
and
insb
lret
and
xchg
out
pop
loope
sbb
and
cmp
add
loop
xlat
int
jp
cmp
jmp
sub
ss
pop
dec
cmc
stc
or
push
pop
imul
cmp
in
add
mov
repz
adc
dec
mov
jge
repnz
stc
hlt
out
test
loope
mov
xchg
daa
in
inc
filds
into
shr
mov
pop
out
lock
lock
stc
movsl
jno
leave
mov
jae
lret
and
in
ds
addr16
or
sahf
add
inc
aas
pusha
cmp
jnp
push
jnp
sub
mov
mov
int3
lods
cmpsb
jl
cmp
mov
fbld
push
insb
dec
inc
lahf
pavgw
fdivrs
ret
adc
mov
mov
jle
mov
pop
xor
mov
cwtl
addr16
adc
cmp
push
jne
adc
mov
pushf
call
inc
push
xor
out
sbb
rcrb
dec
jg
lock
xchg
add
adcl
test
cmpsb
push
sub
sahf
cmpsl
sbb
mov
out
pop
in
aas
jae
loopne
pop
push
call
lahf
mov
pusha
sub
mov
pop
sub
sub
mov
iret
fsubs
mov
imul
xchg
xchg
daa
cmp
push
pop
sub
pop
sub
inc
sub
ljmp
icebp
xchg
sbb
mov
cltd
pop
jecxz
mov
inc
push
les
cs
xor
jp
mov
cld
aam
mov
cmp
or
xchg
and
movsb
inc
mov
lret
mov
dec
mov
mov
loope
cld
adc
push
ljmp
cmpsb
outsb
add
pop
lahf
xor
call
fldcw
je
jns
push
test
mov
adc
std
cs
cmc
int3
ljmp
jecxz
inc
cli
mov
cs
lcall
sub
mul
mov
aad
pop
xor
fcoml
ds
popa
ficoms
mov
mov
mov
ljmp
dec
sbb
jge
adc
adc
clc
adc
mov
push
ja
fidivrs
clc
push
mov
cs
lods
js
mov
push
mov
and
adc
andb
fldenv
aaa
jnp
sub
xchg
pop
div
das
mov
lcall
icebp
movsl
daa
or
and
mov
pop
dec
mov
std
jns
xor
add
insb
sub
sub
jno
mov
mov
es
sub
cmp
add
aaa
push
repz
mov
pop
in
clc
repnz
out
cmc
sbb
ja
jnp
bnd
dec
push
fwait
pop
mov
cmp
clc
andb
cmp
clc
mov
lcall
lods
or
push
lock
leave
lret
call
sub
pop
pop
inc
dec
enter
jo
add
jae
mov
mov
pop
add
test
inc
test
test
pop
pop
dec
aad
outsb
shr
lods
fwait
out
lock
inc
cld
sbb
mov
out
or
repz
sub
push
icebp
dec
xor
cmpsl
inc
hlt
ss
dec
xor
sbb
add
out
jmp
loope
les
mov
std
xchg
aaa
mov
xchg
or
xchg
push
int3
and
jae
xor
es
mov
jle
or
jnp
les
xchg
jl
or
and
adc
call
ret
cmpl
xor
jbe
clc
loope
mov
into
mov
pop
das
cmp
xor
add
pop
outsl
mov
pop
lods
fsubrl
lea
mov
mov
xchg
mov
out
out
xchg
mov
add
insb
xchg
inc
ljmp
mov
shl
insb
xor
mov
xchg
add
repz
adc
or
sub
xor
gs
cmp
adc
jae
mov
mov
je
out
jl
xchg
push
fwait
in
stos
outsl
or
out
pop
mov
mov
cmp
or
loopne
stos
cmpsl
mov
in
sub
mov
fdivrp
pop
mov
xlat
add
gs
insl
xchg
and
sar
push
cmc
aaa
pop
mov
mulb
lods
je
cs
xchg
sbb
imul
push
lret
orb
sub
adc
add
add
lds
jbe
and
mov
jle
xor
sbb
lret
mov
sti
cmp
subb
mov
pushf
in
aam
in
out
xchg
sub
leave
jp
add
or
jl
mov
xlat
mov
fwait
movsb
mov
pop
in
shlb
jno
mov
mov
or
push
int3
mov
dec
pcmpeqd
stos
shll
xchg
in
out
fs
mov
or
sbbl
testl
mov
outsb
lret
mov
cmp
cmp
fsub
sbb
aam
test
enter
or
mov
xchg
shll
mov
idivb
jge
pop
cld
popf
cmp
lds
sub
adc
and
cmp
mov
cwtl
pop
inc
popf
aas
xor
mov
fdivs
rol
adc
cmp
imul
dec
das
inc
mov
ret
xor
fists
mov
shrl
hlt
mov
test
add
ficompl
xor
dec
nop
sub
int
mov
movsl
mov
js
push
aas
hlt
push
sbb
lds
sbb
les
push
fld
jecxz
xchg
mov
sub
out
push
nop
and
xorl
movsb
mov
aaa
sbb
sbbb
test
loope
dec
pop
jg
cmp
pop
xchg
lds
dec
loop
cltd
mov
mov
adc
in
ret
cli
fsubrl
push
sbb
ficomps
in
push
ficomps
pushf
push
push
pusha
cli
div
mov
sub
cmp
cmp
cmpsb
or
data16
sub
adc
movsb
mov
pop
jmp
add
jnp
jl
push
testb
xchg
add
add
sub
or
mov
movsl
fnsave
mov
jne
adc
test
cwtl
cmc
add
test
jns
sarb
mov
add
enter
pusha
dec
pushf
xor
cmp
fsubl
lods
xor
call
int
sbb
mov
inc
jns
inc
xchg
pop
add
or
add
xchg
ret
ret
lea
pop
inc
enter
in
roll
fsubrs
cmp
std
insl
push
mov
lea
xor
xlat
cld
xchg
add
lret
stos
mov
int
jne
inc
cmp
ss
adc
xchg
xlat
js
pop
sub
jmp
inc
adc
cmc
pop
sbb
jne
icebp
sub
ss
test
mov
push
xor
dec
add
enter
lret
leave
repnz
mov
aaa
push
dec
mov
flds
sbb
pushf
mov
call
cmp
lea
jecxz
and
xlat
or
pushf
ficomps
into
pop
xchg
call
push
push
popf
mov
pop
cmp
pop
mov
pop
cmp
xor
jb
xorl
or
mov
lea
cltd
mov
divl
or
push
in
cmp
lea
fdivrs
insl
adc
mov
je
and
bnd
mov
pop
inc
movsl
adc
mov
xor
sbb
xor
mov
sbb
xor
adc
outsl
sub
out
push
lret
push
dec
les
int
push
jge
sbb
inc
mov
mov
xor
and
daa
lahf
into
fsts
push
dec
sbb
outsb
roll
dec
and
lret
mov
push
sbb
push
mov
frstor
insb
push
pop
push
push
into
fadds
ret
repnz
jg
jb
cs
jmp
ljmp
call
dec
push
sub
push
pop
iret
cs
mov
sbb
sbb
cli
push
jp
test
test
enter
mov
adc
sbb
bound
sahf
xor
xchg
add
ret
les
dec
cmpb
movsb
cmp
add
mov
or
leave
insl
in
mov
mov
cmp
mov
lock
int3
and
add
lods
push
jmp
pop
popf
or
rorb
inc
adc
cmp
out
out
mov
cmp
rcr
pop
inc
clc
ja
imul
ret
mov
xor
jb
dec
arpl
aaa
aas
dec
xchg
mov
jns
out
stc
xor
fcoms
clc
pop
jmp
hlt
adc
inc
push
jo
mov
xchg
sbb
negb
sub
inc
test
outsl
add
in
stos
or
cmp
orb
adc
pop
or
mov
jmp
jle
add
pusha
cmpb
cs
mov
cmp
xchg
sub
fbstp
mov
lock
xchg
push
icebp
lock
sbb
jno
sub
rcl
inc
rol
and
mov
sub
mov
sbb
push
and
shll
xchg
jns
sub
jecxz
mov
inc
lret
rcl
ret
xchg
popa
outsb
mov
dec
arpl
mov
mov
adc
mov
jge
fistl
pop
cmpb
sbbl
jp
xchg
shl
xor
lock
pop
inc
lea
and
xchg
insl
repz
mov
xor
xor
xor
push
fidivrl
pop
fwait
jbe
popa
arpl
in
cmp
xchg
movb
mov
jnp
mov
stos
in
test
dec
or
xor
cmpsl
mov
xchg
xlat
mov
fcompl
jecxz
push
jl
xor
sbb
dec
mov
cmp
fdivl
int3
int3
push
or
jo
mov
or
pop
dec
xchg
subb
je
iret
stos
inc
test
dec
popf
lods
xchg
pop
pop
and
xchg
sti
xchg
push
subl
clc
in
test
xchg
mov
ja
les
test
setno
inc
adc
add
push
inc
adc
lds
mov
je
mov
orl
mov
repz
adc
movsl
pop
pop
inc
loope
cmp
mov
subb
imul
lods
aad
fnstenv
ss
cmp
adc
dec
rcr
mov
lds
sub
adc
inc
orl
fsubrl
adc
cld
mov
xor
xchg
add
sub
mov
push
sub
inc
cmp
jae
xchg
call
xor
add
movsl
aad
push
inc
bswap
fdivl
fwait
sbb
dec
int
js
adc
fwait
add
sbb
out
cltd
insl
mov
inc
outsb
fwait
jge
pop
and
or
push
out
outsl
mov
fwait
mov
pop
rorl
adc
mov
stos
lahf
mov
pop
dec
mov
add
xlat
mov
data16
call
insb
xchg
loop
pop
pop
jge
rclb
rolb
inc
push
cld
dec
add
shl
cmp
pop
sub
add
lods
xchg
or
mov
mov
lcall
sub
mov
movsb
pop
loop
mov
or
sar
dec
jmp
out
jmp
cwtl
inc
sahf
imul
jns
sbb
cld
sub
xchg
xchg
pushf
adc
out
push
mov
inc
aaa
xchg
or
mov
mov
mov
arpl
repnz
ljmp
lret
daa
and
repnz
jl
mov
and
test
mov
inc
mov
jmp
mov
xchg
aas
pushf
ret
dec
into
sub
jne
add
sub
adc
cmp
adc
sub
clc
push
lock
push
lret
loope
push
clc
mov
stos
cmp
xchg
push
fwait
test
mov
sub
jbe
test
loop
pop
add
sti
jo
mov
test
add
mov
shrl
mov
dec
xor
rolb
rcll
dec
daa
sbb
js
cmp
inc
or
and
ret
xchg
outsb
addl
inc
adc
mov
addb
ljmp
pop
lret
mov
ret
xlat
mov
stos
cmp
je
and
add
xchg
cmc
mov
mov
daa
cmpsb
adc
imul
xor
fistps
mov
jmp
xchg
in
cmp
inc
or
or
inc
jge
add
xor
mov
shll
fidivs
fisubrs
imul
adc
inc
mov
fistps
inc
in
sbbl
addb
fcomps
sub
icebp
adc
jmp
jecxz
jne
ret
test
jg
jns
sub
fdivl
add
mov
out
fmull
xchg
and
ds
subb
or
mov
push
andb
mov
rclb
xor
pop
roll
and
pop
pushf
push
lods
push
mov
ret
movsl
outsb
out
movsb
sub
adc
fwait
mov
repz
shl
es
imulb
jb
lock
rcr
js
faddl
pop
mov
sub
out
mov
subb
nop
mov
dec
inc
aad
aas
cmp
or
daa
lds
adc
inc
and
je
out
xlat
iret
js
shlb
fs
outsl
lods
jmp
pop
add
mov
pop
xchg
bswap
add
and
jne
lock
dec
test
jo
lret
loope
push
sbb
adc
es
jbe
popf
mov
cmpsl
std
jge
daa
xchg
adc
pop
mov
or
fwait
xchg
mov
or
xchg
adc
pop
fcmovnu
or
scas
and
or
roll
cld
pushf
and
ret
fnstenv
je
xchg
jecxz
insl
outsl
leave
pop
push
outsb
js
ljmp
fsubrl
mov
and
lds
jcxz
or
int3
int3
mov
fistpll
xchg
mov
ss
mov
lahf
sbb
mov
daa
movsl
loope
xchg
cmp
mov
mov
sub
scas
lods
scas
lcall
pushw
movsb
fcoml
mov
hlt
jecxz
xor
or
push
jmp
loopne
movsb
jmp
cmp
sub
mov
sub
lret
mov
sbb
mov
les
dec
in
enter
push
insb
arpl
lret
stos
insb
cmp
hlt
xchg
sub
lock
or
mov
cmp
jl
lahf
xor
pop
lock
cmp
jp
mov
pop
pop
xor
fcmovnu
adcl
jbe
mov
push
inc
mov
cld
jnp
dec
pop
and
mov
ficomps
loope
out
dec
and
adc
push
ficoml
cmp
push
dec
or
popf
lods
int3
cmp
xchg
addb
adc
and
pushaw
lcall
inc
cld
rclb
scas
stos
outsb
lret
loopne
xchg
sbb
xor
out
ret
pop
cmp
push
pusha
andb
andl
clc
xor
les
jg
and
aas
gs
pop
lea
lret
mov
mov
pushf
cmp
push
not
sub
sti
or
js
repz
xor
jbe
in
mov
js
or
push
pop
sbb
jl
gs
pop
xor
push
adc
jle
nop
push
pop
adc
fcmovne
data16
add
jp
decl
sub
dec
not
pushf
jbe
sbbl
xchg
stos
or
scas
scas
jp
jbe
out
or
xlat
in
jmp
mov
jmp
mov
pop
loop
fistl
pop
call
divb
addr16
inc
mov
mov
push
in
into
mov
notb
mov
movsl
js
loopne
stos
inc
cmp
mov
data16
stc
mov
loop
xchg
xorl
cwtl
xlat
or
cwtl
fisubs
cmp
inc
mov
xchg
inc
sbb
xchg
xor
fisttpll
jl
aas
jge
sub
xorl
mov
divb
inc
xor
pop
divl
andl
lret
sbb
cmpsb
insl
add
test
and
ret
es
stos
pusha
add
adc
inc
clc
sub
mov
or
and
nop
xchg
cmpsb
lock
mov
push
adc
mov
sarl
cltd
std
cmc
insl
aad
loop
push
jecxz
outsb
mov
xor
add
jg
loop
push
data16
in
cmp
int
icebp
ja
xchg
fs
aaa
dec
sub
lock
lds
in
bound
xchg
lea
fbld
pop
stc
push
or
les
std
mov
pusha
dec
inc
cld
and
mov
subl
int3
push
or
testb
adc
ja
out
popa
jecxz
aas
or
dec
push
adc
div
mov
lock
mov
lods
stc
adcl
out
xor
movsl
xchg
mov
cmp
xchg
pop
fmulp
push
xchg
stc
xlat
inc
cld
stc
insb
call
mov
fstl
pop
dec
xchg
adcb
imul
or
dec
stos
or
lret
pop
and
jnp
jmp
cmp
ljmp
mov
fs
pushf
jg
xchg
repnz
jo
mov
or
xchg
xor
and
push
or
mov
loope
adc
cmp
mov
mov
mov
cli
icebp
fcoms
sbb
xchg
jo
or
sarb
mov
mov
push
ja
repnz
and
dec
pop
icebp
dec
clc
sbbb
mov
push
test
stos
add
mov
call
adc
jno
in
push
dec
loope
lock
inc
dec
xor
and
mov
mov
lock
cli
dec
mov
or
mov
push
je
add
jle,pt
sub
adc
leave
flds
into
mov
inc
mov
mov
mov
mov
jns
mov
inc
cmc
jae
cwtl
mov
pop
xchg
jb
and
add
loop
push
and
mov
clc
jae
insl
push
push
dec
cld
mov
shlb
add
and
in
repnz
inc
jl
repnz
fisttps
lods
and
lods
into
pop
cmp
jno
and
lahf
add
daa
fisttpl
mov
xor
xchg
xor
psrlw
xor
daa
sbb
inc
sbb
dec
push
xchg
test
js
xchg
test
rorb
shrl
arpl
sbb
nop
xor
or
push
inc
in
test
icebp
dec
das
sbb
or
insb
rcl
frstor
jno
incb
in
shlb
js
push
adc
cli
popa
cs
stos
hlt
pop
push
mov
sub
stos
stc
popa
int3
adc
cmpb
lea
mov
and
dec
mov
test
in
out
push
je
cwtl
popf
in
mov
push
daa
insb
sub
rcll
ret
aam
rcr
popf
fidivrl
xchg
outsb
adc
gs
sub
add
rol
sub
mov
adc
loop
mov
icebp
pop
inc
aam
addb
fs
hlt
adc
or
and
mov
sbb
roll
test
sbb
inc
and
call
push
in
call
fldt
fs
sti
add
out
mov
sarl
stos
cmpsb
dec
ret
dec
xor
lods
jl
mov
cmpsb
aam
mov
push
sti
and
dec
rolb
loopne
das
dec
cli
ja
cmp
add
arpl
dec
outsl
mov
decb
xchg
sbb
sub
cmp
push
push
pop
or
scas
decl
xchg
sahf
cmp
inc
and
int3
inc
lret
int3
lock
inc
xchg
ljmp
push
lea
sub
mov
xlat
xor
fscale
nop
add
mov
mov
js
pop
lret
aas
cmp
fs
arpl
inc
sbb
inc
aam
cmpsl
enter
bound
mov
shlb
insb
xor
adc
sti
imul
push
mov
cmp
xchg
js
jmp
jp
cmp
add
pop
or
dec
cwtl
pop
sbb
or
stos
int3
jnp
cmp
imul
fistps
and
loopne
jp
dec
push
xchg
xchg
sub
test
jno
add
push
test
je
inc
inc
mov
xor
ljmp
jle
into
ds
insb
xor
xor
sbb
adc
or
or
shll
pushl
mov
das
or
rcrl
fucom
inc
cmpsl
imul
push
out
pushl
mov
stc
cmc
jae
std
pop
roll
ds
fldt
adc
mov
mov
jmp
or
pop
mov
push
clc
iret
aaa
loopne
jge
push
sbb
fidivl
fxch
jge
mov
jecxz
sbb
mov
cmp
loop
mov
addb
adc
xchg
and
movsb
mov
in
in
inc
out
and
cs
xor
ret
jle
flds
push
xor
scas
xchg
aam
lock
pop
inc
mov
jmp
sbb
repnz
xlat
jno
cmp
cmp
xchg
popf
adc
aas
sti
mov
xchg
bound
mov
fcoms
inc
out
push
add
cmc
sahf
adc
jmp
and
mov
mov
mov
scas
popa
mov
jg
adc
stc
push
mov
pop
sbb
sbb
enter
mov
inc
dec
in
sub
lret
inc
pop
iret
add
loope
mov
mov
sub
popf
out
cltd
jno
data16
mov
dec
jno
mov
push
dec
imul
mov
dec
aad
sub
jns
jl
mov
sub
adc
sbb
sar
cmc
and
mov
aam
sbb
subl
imul
adc
jns
mov
ror
nop
push
sub
xchg
push
out
jl
sbb
nop
cmpsb
xchg
stc
fwait
test
call
iret
mov
pop
cmp
xor
jns
adc
xchg
ret
xchg
inc
loope
cmpsb
add
jge
lock
pusha
cld
movsb
sub
add
push
idiv
cmp
and
call
push
ret
mov
inc
enter
je
int
or
test
test
insl
inc
add
int3
lahf
sbb
nop
outsl
mov
mov
mov
repnz
push
outsb
sbb
xor
sbb
mov
add
in
cmp
xchg
pop
mov
cmp
sahf
pusha
orl
mov
pop
cs
or
pop
xchg
ret
jle
sti
call
imul
xor
jno
lret
aad
icebp
sbb
push
cmpsl
push
pop
mov
mov
jge
inc
mov
lahf
mov
popa
inc
pop
lods
cmp
xchg
pop
and
mov
mov
mov
push
jecxz
xor
insb
xor
mov
or
add
sbb
mov
or
pop
popa
scas
imul
sub
jno
imul
pop
stc
lods
in
xrelease
add
mov
lds
je
mov
sub
call
push
dec
jae
lahf
popa
fwait
xchg
es
pusha
mov
shll
dec
loopne
sub
sbb
fimull
jle
sarl
push
dec
test
jno
int
mov
ljmp
add
fs
push
sbb
adc
rep
xchg
push
pop
mov
int3
movb
mov
sbb
nop
dec
lods
cltd
pop
sub
dec
lock
loopne
imul
scas
mov
sahf
jno
pop
aas
cld
xchg
in
dec
ret
xchg
fstpl
sub
pop
xor
push
mov
inc
fnstenv
xchg
call
mov
xchg
cmpsb
pop
fwait
scas
loop
ljmp
adc
enter
loopne
popa
insb
sub
mov
xchg
ret
test
cmpsl
xor
fisubl
int3
pushf
imul
aaa
popf
lcall
jecxz
xchg
enter
popf
out
lods
sbb
add
lods
or
pop
mov
adc
xchg
lret
pop
cmp
jo
pop
mov
ret
sub
loop
daa
xor
repnz
adc
incb
icebp
jno
imul
and
ja
dec
xchg
or
es
movsb
shlb
or
cmpsl
les
mov
inc
add
pop
rcrl
adc
pop
jno
int3
dec
jb
roll
inc
add
or
pusha
lea
rol
outsb
mov
sahf
nop
imul
dec
mov
xchg
les
in
adc
stos
rorb
outsb
xchg
call
adc
mov
xor
add
sarb
sbb
cwtl
loope
test
jo
repz
adc
cmp
pop
mov
jb
jae
mov
push
add
adc
adc
push
pop
sarl
mov
jl
mov
insl
push
adc
into
cmp
pop
mov
mov
fildll
jnp
jae
orb
dec
lods
lods
sub
lret
adc
jnp
sub
mov
rcll
int
outsl
scas
jno
mov
push
xchg
xchg
out
dec
jo
imul
stos
divb
and
bound
movsl
cmp
jle
sbb
out
inc
test
notl
aam
out
bound
xchg
push
ror
mov
das
cmp
repnz
lcall
repz
jg
mov
das
xchg
adc
addb
outsl
imul
test
out
or
and
sub
jge
lahf
inc
xorb
cmp
call
outsb
sbb
lods
loopne
test
test
pop
mov
movsb
mov
adc
test
cmpsb
pop
push
and
push
mov
or
fdivrs
pop
iret
adc
arpl
jb
push
push
jmp
adc
stc
inc
rclb
mov
pop
call
xor
shl
dec
lock
ret
cld
dec
lds
test
pop
aas
jne
daa
frstor
ret
and
gs
xor
jg
outsl
fwait
scas
xchg
cmc
pop
pop
mov
mov
inc
fnsave
es
ss
add
jno
aas
push
bound
iret
cs
mov
and
xchg
mov
pop
cmpsl
in
pop
fisubrs
sbb
or
xor
mov
mov
add
or
rclb
add
pop
xchg
or
pop
add
test
jg
scas
adc
clc
add
movsl
mov
jne
mov
fildll
cmpb
sti
mov
mov
out
mov
out
inc
fiaddl
lods
and
mov
cmpsl
es
insl
mov
lea
push
ret
sbb
in
arpl
push
add
fwait
ss
fsts
icebp
pop
ficoml
leave
lea
pop
int3
push
xlat
mov
rorl
inc
lods
xchg
cwtl
add
push
xchg
cmp
mov
lock
leave
inc
cmpsl
xchg
jle
repz
jg
movsb
or
inc
mov
hlt
lock
cmp
add
cmpsl
lds
ficoml
and
or
test
js
jle
adc
dec
aaa
movsb
xchg
push
push
dec
mov
test
rcl
cltd
imul
das
movsl
repz
lea
pop
mov
fldenv
ret
enter
imul
enter
icebp
call
push
adc
adc
jl
out
ror
decl
cmp
insl
dec
lret
out
lret
add
leave
mov
mov
into
mov
bound
cmp
pushf
mov
es
test
insl
mov
inc
mov
cmp
mov
dec
mov
ja,pt
xor
rorb
ss
sbb
jl
cmp
lock
fists
movsb
or
xchg
sub
jmp
push
movsb
add
cmp
sub
ljmp
imul
mov
loop
adc
jo
cmp
es
test
sbb
xor
add
fiadds
pop
das
sbb
jno
inc
mov
test
xchg
push
pop
xorb
inc
sarl
and
jmp
dec
or
xchg
std
sub
lahf
shlb
stc
push
inc
ret
scas
out
inc
pop
pop
fwait
pushf
das
add
push
xchg
adcl
stos
mov
in
add
push
std
xor
mov
ret
mov
fldcw
push
sbb
inc
add
jb
cmp
push
ret
inc
xchg
and
sub
pop
test
mov
fldl
movsl
lret
or
mov
aas
and
sbb
fsts
sbb
cmp
mov
sbb
daa
test
xor
stos
sub
dec
hlt
ret
jmp
pop
mov
shlb
cmp
popf
xchg
inc
and
jp
fiaddl
stos
or
dec
xchg
adc
cmp
pop
int
mov
call
arpl
dec
xchg
or
mov
pushf
mov
pop
mov
inc
fidivl
mov
mov
pop
push
lea
mov
iret
js
fimull
outsl
outsl
pop
dec
roll
mov
or
js
pop
push
mov
mov
scas
jmp
and
lods
sub
mov
jge
test
mov
xor
dec
jns
pop
scas
out
fiadds
pop
hlt
stos
dec
mov
fstpl
jbe
inc
jp
xchg
shrb
adc
push
cmp
mov
lcall
insb
sbb
jns
pop
and
mov
arpl
fistl
test
jge
cwtl
test
pushf
rcrb
dec
sub
cmp
dec
imulb
ret
sub
scas
mov
xchg
cmp
mov
jge
sub
mov
idivb
pop
push
cmp
or
jg
stc
les
inc
add
jnp
and
jns
mov
sbb
pop
repnz
pop
sti
psubw
popf
push
scas
dec
or
mov
bound
insl
rcr
mov
out
and
lea
lahf
outsb
and
mov
pop
xchg
mov
fwait
lahf
mov
scas
notb
stos
sub
test
cltd
lods
xchg
xor
movsl
inc
jns
add
movl
dec
popa
push
inc
sbbl
daa
xor
ds
leave
sbb
sahf
xor
jnp
lcall
add
std
dec
pop
rorb
popa
mov
addr16
repnz
mov
add
sub
adc
and
movsl
mov
cld
or
or
jl
lcall
push
add
daa
inc
add
out
mov
cltd
adc
hlt
xchg
inc
inc
or
aas
or
vmovapd
dec
and
in
mov
dec
dec
sbb
pop
sti
test
call
cmpsl
ret
jnp
imul
mov
or
sti
cmp
int
sub
sbb
push
outsb
testl
dec
xchg
push
lods
roll
roll
fimuls
jle
push
test
loop
push
mov
popa
jb
daa
inc
popa
mov
pop
lcall
cmp
jecxz
std
sub
xchg
inc
popf
clc
mov
xchg
pop
imul
mov
push
sti
xchg
insl
push
aam
mov
insl
insb
cld
jecxz
stos
in
sbb
scas
push
outsl
pop
popf
jecxz
inc
push
dec
mov
int
arpl
lds
int
aas
sar
dec
xchg
xchg
adc
je
cmp
popa
sbb
stc
xchg
jg
popf
in
dec
inc
cmp
adc
cmp
cltd
mov
cs
mov
sti
and
adc
outsl
std
cmpsb
arpl
sub
ljmp
jl
les
cltd
cs
adc
pushf
cmp
in
xor
push
imul
addl
shrl
cmp
clc
ret
xor
push
inc
in
xor
mov
jne
ret
jns
dec
jmp
dec
loop
outsl
fdivrs
mov
jb
lret
inc
es
dec
aas
push
mov
inc
daa
test
sbb
dec
std
pop
imul
add
sbb
testb
stos
sbb
mov
mov
inc
pusha
push
and
popa
xlat
cs
mov
ds
aam
stc
sbb
cltd
hlt
fstp
js
clc
sub
lods
repnz
jo
lret
out
aam
mov
pushf
pop
jp
mov
xchg
pop
pop
cltd
cmp
push
push
cmp
xor
adc
xchg
push
sub
cltd
popf
ljmp
jge
cmp
pushf
dec
arpl
mov
push
pop
scas
mov
mov
mov
mov
cmc
mov
sub
popa
dec
test
fidivrl
sub
andl
mov
or
inc
mov
sub
or
pushf
pop
sub
outsl
mov
mov
aas
mov
daa
mov
push
loop
outsb
adc
xchg
xchg
sahf
xor
stos
mov
dec
in
mov
jge
pop
lods
and
pushf
push
inc
mov
sub
add
pop
dec
jnp
sub
fiadds
cltd
in
pop
pop
es
rcl
in
mov
out
movsb
daa
add
mov
xor
inc
jbe
es
or
int3
lock
push
out
xor
sbb
fldcw
ja
icebp
fisubl
xchg
jne
jecxz
scas
inc
cmp
mov
jecxz
leave
stc
add
enter
in
lock
or
movsb
sub
jb
daa
push
sub
mov
sbb
mov
inc
add
stc
fildl
int3
jbe
jmp
mov
push
dec
mov
daa
lea
inc
mov
repnz
int3
inc
out
cmp
dec
mov
test
jl
data16
mov
das
out
push
cmp
pop
pop
pop
cmpb
push
pusha
mov
mov
rol
mov
lea
testb
jae
xchg
aas
lock
sbb
mov
add
xchg
cmpsb
js
or
jle
pop
imul
pusha
add
gs
cmp
push
mov
adc
sbb
jne
mov
jg
cmc
dec
dec
xchg
pusha
dec
stos
daa
xor
push
mov
and
fsub
inc
xlat
fwait
jb
dec
fwait
inc
xchg
lock
jae
dec
jmp
imul
jae
inc
mov
push
rorb
pop
jge
pop
inc
pop
jg
pop
sub
adc
scas
adc
addb
stc
add
lret
test
sub
ret
mov
call
dec
jmp
mov
jnp
in
stos
cmpsl
cmp
pop
mov
xchg
adc
mov
aad
ds
jbe
test
inc
js
adc
les
cli
clc
into
outsl
mov
add
lods
push
cmp
sbb
mov
push
scas
dec
mov
pop
ret
in
rol
pop
mov
test
push
inc
inc
mov
lods
xchg
lcall
faddl
leave
outsb
mov
inc
xor
mov
sbb
jp
jp
sbb
fsubrl
hlt
xchg
pop
enter
cli
mov
add
incl
call
pop
sbb
push
or
int3
daa
jmp
xchg
inc
and
cmp
sbb
divb
mov
adc
push
es
imul
int3
jmp
xchg
es
rorl
pop
test
inc
xor
pushf
add
movsl
mov
jp
test
mov
xchg
test
inc
xchg
jle
test
sti
das
push
dec
dec
jmp
sahf
incb
jb
jl
stos
call
orl
test
add
push
xor
sub
sub
or
pop
or
cwtl
lods
pop
pop
hlt
mov
popf
scas
or
or
insl
push
dec
jo
push
jns
frstor
pop
xchg
fisttpll
xchg
jo
jp
inc
mov
andl
es
mov
push
iret
or
pop
jmp
lods
inc
fisubrs
mov
inc
sbb
popa
dec
cmp
pop
sub
mov
rclb
pop
rolb
inc
cmpsb
ret
stos
aam
nop
ja
rcl
fnsave
jg
shll
stos
in
dec
cwtl
push
rolb
testl
imul
jecxz
xchg
mov
dec
roll
fdivrs
icebp
mov
pop
mov
xchg
sbb
jmp
insl
jnp
sbb
mov
jae
hlt
test
or
ret
pop
xchg
sti
add
ds
aaa
add
out
mov
inc
nop
or
jnp
sbb
mov
inc
add
xor
dec
dec
imul
dec
push
pop
cmp
cmc
xchg
popa
sub
and
aad
jle
sub
pop
push
sbb
outsb
push
inc
daa
mov
in
mov
jns
fldt
leave
jbe
cld
jecxz
ror
dec
dec
popl
jg
xor
outsl
bound
dec
push
push
pop
insb
outsb
mov
cvtps2pd
xchg
xchg
push
loope
jp
jae
and
mov
shrl
inc
mov
push
sahf
inc
pop
out
mov
lods
sbb
dec
icebp
xchg
pop
add
xor
scas
icebp
scas
mov
and
stos
enter
push
outsb
ret
inc
mov
push
cltd
pop
adc
adc
push
pusha
cmp
out
jle
jecxz
aas
sarl
jp
cmpsl
cmpb
xchg
pusha
int3
jle
enter
les
inc
in
fs
pop
test
inc
jg
xchg
pop
jg
mov
int3
xchg
inc
jp
xchg
cmp
iret
push
rcl
mov
push
xor
imul
inc
and
lea
push
push
js
and
push
xor
and
jmp
pop
addr16
push
rolb
add
scas
add
xchg
imul
daa
ds
ljmp
ja
xor
dec
inc
xchg
dec
sub
pop
aam
mov
push
inc
push
rorl
call
fcomps
filds
mov
push
mov
jne
daa
data16
out
lea
or
push
jmp
mov
adc
push
dec
pop
sbb
aam
jo
out
xor
cmp
outsb
and
lahf
pop
lock
pop
iret
push
cmpsb
jns
mov
add
xchg
jae
dec
push
add
je
jno
or
xor
and
mov
sub
adc
mov
xor
lcall
add
dec
shlb
mov
add
out
lods
je
lcall
pop
stos
pop
insl
push
and
fcmovnu
xlat
in
arpl
push
stos
ret
or
mov
sub
mov
cmp
mov
lods
jg
adc
jecxz
int
popf
fistpl
jg
sub
test
popf
mov
pop
dec
imul
call
fidivrl
out
xchg
cmpsb
add
repnz
add
jecxz
in
pop
push
add
pop
mov
cltd
in
pop
ja
mov
xchg
xlat
pop
add
mov
cs
dec
les
xor
mov
cmp
lea
sbb
mov
sbb
mov
subl
cmp
cmpsb
xor
mov
out
push
arpl
imul
add
adc
mov
pop
loop
out
in
out
adc
bound
mov
cmp
scas
cmpsl
pop
icebp
loope
or
mov
mov
mov
jecxz
push
inc
pusha
data16
sbb
test
or
mov
xlat
mov
cs
adc
fbstp
inc
outsl
stc
adc
leave
scas
outsl
pop
fiadds
jmp
mov
hlt
cld
shrb
sbb
lret
mov
mov
pop
dec
cmc
push
mov
in
mov
scas
imul
mov
loop
aad
out
jbe
sub
mov
xchg
movsl
push
sbb
sbb
int
in
je
sbb
push
sbb
sbbb
xchg
mov
push
xchg
add
cmovo
cmpsl
mov
or
cmc
push
add
popa
test
add
in
mov
lahf
icebp
lock
sbb
xor
adc
pop
insl
cmpsl
cmp
icebp
iret
imul
fs
sbb
rcrb
pop
clc
pop
push
inc
xor
mov
mov
repz
mov
mov
push
mov
jae
mov
jmp
call
add
inc
or
sarl
clc
hlt
adc
cmp
es
mov
loopne
fnstsw
mov
lock
sar
adc
pop
push
stos
dec
scas
jae
mov
mov
lods
sbb
std
cmc
jns
push
sub
popl
or
sbbl
xchg
int3
mov
hlt
insl
xlat
or
inc
lcall
shrd
push
push
cmp
adc
mov
aad
pop
ret
test
sahf
jmp
push
rcl
enter
add
pop
cmp
dec
cld
mov
shll
sub
movsl
arpl
adc
adc
pop
xor
sub
xchg
xor
mov
cmp
and
enter
pop
int
js
push
cmpb
test
lahf
mov
adc
scas
mov
sbb
xor
xchg
in
cld
in
int
mov
mov
imulb
ljmp
sub
cmpsl
call
add
jnp
dec
repnz
sahf
mov
pop
and
sub
loopne
jge
push
popf
pop
in
pop
mov
jle
xor
sub
scas
push
sbb
ds
push
pop
dec
out
jnp
mov
jge
les
pop
mov
adc
insb
sbb
nop
lahf
hlt
mov
test
cmp
out
enter
and
adc
outsb
cmp
shll
sti
or
loopne
xor
pop
test
xchg
in
mov
or
add
sarb
sbb
loop
mov
fistpl
mov
in
adc
lods
xchg
popa
inc
cltd
xor
pop
js
cmp
xor
ss
test
test
push
std
mov
popa
dec
insb
cmpsb
fs
pop
jbe
inc
fistps
or
data16
xorb
pop
or
jne
lahf
jno
lahf
push
adc
cmp
in
jno
mov
push
pop
inc
testl
push
adc
jnp
mov
outsl
jge
ljmp
adc
add
xlat
inc
add
cmp
jmp
xchg
subb
cmp
shll
arpl
lods
fcomip
pop
fs
lods
scas
cmc
es
popa
push
fisttps
dec
pop
lods
ds
fimuls
pop
in
add
fdivs
insl
bound
mov
jp
push
punpckhdq
icebp
mov
insl
mov
stos
ja
stos
imul
cmpsl
negb
lcall
mov
jae
leave
jns
and
pop
adc
in
inc
push
lods
xchg
pop
xor
cmpsl
add
inc
pop
popa
mov
fcompl
mov
in
push
cmc
sbbl
push
mov
arpl
out
jne
add
lock
add
nop
leave
clc
repz
popf
out
mov
sbb
pop
outsl
cmp
push
xor
adc
mov
decl
cmp
sub
inc
or
mov
fbld
jmp
mov
data16
jb
shrb
ds
lds
dec
xchg
rclb
cwtl
mov
in
out
ja
xchg
or
dec
popf
add
push
inc
or
xchg
lock
icebp
cmp
xchg
sahf
sbb
in
xlat
hlt
xchg
in
fnstsw
mov
fdivs
imul
mov
out
add
clc
ja
and
push
lret
jecxz
pop
andb
mov
jmp
inc
iret
push
mov
fiadds
mov
mov
mov
or
sbb
lods
adc
cli
adc
pop
sti
pop
dec
inc
adc
xor
mov
push
cmp
jmp
jnp
and
lret
cmp
xor
pusha
inc
push
ds
stos
add
addb
lcall
jecxz
stos
je
subps
mov
dec
inc
rcrl
addr16
mov
sbb
jnp
fnstenv
xor
lret
out
aaa
jmp
movsb
mov
adc
shl
fstpt
and
scas
subb
or
push
into
xchg
jl
lea
test
add
xor
addl
adc
sbb
ret
jo
out
out
nop
pop
xlat
dec
lahf
add
iret
insl
xchg
sub
inc
pop
adc
pop
or
punpckhwd
les
enter
push
dec
icebp
es
adc
ffreep
cmp
int3
lahf
enter
mov
ret
sti
rclb
jnp
add
fs
pusha
or
push
imul
fxtract
cmp
std
test
test
movsb
xor
jne
push
xchg
cmp
filds
jne
aas
push
cmpsb
or
push
sbb
aam
add
xchg
mov
lcall
cmp
lcall
jmp
movsb
sbb
pop
ljmp
je
pop
jmp
shrl
mov
sar
pop
imul
out
pop
cld
push
xchg
mov
push
aad
mov
mov
ljmp
data16
cmp
imul
push
sbb
pop
inc
in
pop
xchg
xchg
test
dec
pop
pop
push
je
loopne
push
xor
push
or
mov
sub
aam
xchg
xor
testb
mov
lret
add
adc
cmpb
mov
cli
popa
and
xchg
jns
ret
push
push
xchg
fisttpll
mov
xchg
fcmovnu
cmp
out
ljmp
mov
jno
xchg
add
cmp
xchg
popf
sub
mov
std
sarb
popl
pusha
lods
sub
and
xchg
fucom
add
cmpsb
mov
pop
in
xlat
lret
in
dec
xchg
and
inc
rcll
pop
cli
fwait
inc
bound
mov
sub
loopne
hlt
cld
subb
and
push
adc
sbb
jb
loopne
jo
jno
rolb
mov
pusha
les
fstpt
shlb
loope
mov
rcr
imul
aad
repnz
push
jmp
push
xor
test
inc
sub
sbbl
js
shl
iret
ja
lds
outsb
xchg
popf
fildll
cmp
xor
inc
mov
shl
loopne
xlat
fbld
jne
out
sbb
shlb
mov
jno
ret
call
fstl
sbbb
cwtl
jl
mov
fmul
popf
aaa
dec
call
add
mov
inc
or
aam
dec
mov
pop
daa
xchg
sbb
sbb
push
mov
xchg
lds
push
pop
loop
lret
sbb
dec
inc
mov
popf
xor
je,pn
sti
xlat
fbld
imul
push
das
push
jp
and
jp
in
and
mov
xor
pop
idivl
xchg
int3
rcll
jg
dec
aad
inc
roll
inc
mov
mov
shl
or
fdivrl
loopne
jo
inc
pop
adc
and
push
fcomp
enter
mov
and
shlb
mov
add
or
pop
mov
neg
xchg
xor
cwtl
inc
xchg
and
jp
sbb
andl
fisubl
ss
sbb
xor
adc
and
xchg
or
es
cmp
out
dec
cltd
test
out
jo
enter
adc
or
out
mov
icebp
ljmp
call
inc
and
iret
cmp
test
push
xchg
das
xchg
and
popf
mov
jno
lret
es
and
loop
stos
jp
stos
mov
add
fucomip
push
xor
test
mov
cmp
cmp
mov
or
adc
nop
call
cltd
cld
out
push
adc
cmc
lahf
clc
stos
push
xchg
sahf
lret
inc
outsl
jp
mov
insb
fneni(8087
inc
aas
inc
rcrl
cmp
and
in
jl
test
jmp
ds
fcom
jae
pop
and
dec
ret
jg
push
mov
inc
enter
pop
mov
out
adc
xchg
xor
rol
or
sbb
adc
push
and
arpl
jns
pop
cmp
jbe
sub
mov
and
fnsave
dec
mov
out
shlb
int
jmp
mov
mov
test
mov
movsl
jb
lret
clc
or
pop
xchg
iret
outsb
mov
xchg
and
icebp
fwait
xchg
adc
insb
pusha
dec
setbe
test
push
inc
stos
sti
stos
xor
pop
test
cwtl
cmp
shlb
inc
mov
pop
in
bound
lret
int3
mov
fistpll
pushf
lods
push
push
rclb
std
dec
cmpsl
push
or
or
xchg
adc
mov
cmp
scas
mov
inc
into
je
push
mov
movsl
pop
mov
fdivrp
ljmp
dec
mov
mov
or
in
mov
sbb
loop
mov
out
pop
aas
or
pop
mov
nop
pop
add
int
jg
nop
faddl
push
pop
xor
andl
popa
sbb
or
adc
push
test
push
mov
pop
std
push
xchg
pop
push
mov
mov
test
and
cld
cmp
subb
repnz
hlt
adc
dec
int3
in
push
mov
xchg
pop
or
push
dec
or
push
cmpsl
lretw
iret
shll
int3
mov
mov
mov
and
and
mov
nop
cmp
mov
int
add
sub
std
je
pusha
xchg
or
fldt
arpl
test
data16
jo
jg
jp
pop
xor
sahf
xor
xchg
into
test
mov
lea
cmp
cwtl
pop
loope
sbb
cmpsb
and
jl
push
into
lea
jne
sahf
lock
sub
outsl
aad
pop
jp
jb
call
mov
std
mov
sbb
test
xchg
jne
mov
faddl
add
xor
sbb
jle
adc
push
fimull
inc
pop
mov
icebp
loope
mov
and
inc
add
movsb
xchg
sub
outsb
std
bnd
sub
or
cmp
jecxz
shll
inc
mov
adc
sub
xchg
ss
add
enter
imulb
mov
push
stos
pushf
lret
cmp
or
stos
inc
lahf
test
push
fs
mov
xchg
xor
lret
sti
mov
xchg
cmp
pop
sbb
xchg
cmc
nop
test
mov
cmp
mov
pop
cs
cs
inc
xchg
sbb
lcall
jmp
movsl
cwtl
xchg
popa
popf
lea
pop
call
mov
mov
cmpl
call
mov
dec
mov
pop
jb
lea
sarb
lods
xor
dec
imulb
loop
sbb
pop
jne
test
hlt
jnp
dec
lods
push
push
in
popf
jbe
and
or
test
movsl
pop
jns
fwait
mov
das
add
cmp
aas
insl
shrl
sbb
arpl
push
pop
pop
dec
fwait
adc
push
sub
mov
les
loopne
outsl
push
ret
pop
sub
cmpsb
andl
test
daa
and
lret
lcall
loop
movsb
out
cmpsb
cld
xchg
lret
incl
imul
dec
jl
gs
pop
sbb
cli
hlt
aam
and
mov
aam
aas
mov
sub
outsl
in
es
mov
outsb
scas
mov
testb
push
xor
subl
push
gs
pop
les
mov
cli
jle
dec
pop
loopne
dec
popf
or
fdivrp
push
scas
xchg
jge
testb
outsl
cmpb
jo
push
push
cmpsl
xor
mov
sbb
sbb
ljmp
pop
xlat
fcoms
lret
cmp
xor
dec
shlb
mov
jp
bound
cmp
dec
add
add
mov
orb
xchg
add
cmp
inc
sbb
inc
shlb
shll
adc
test
mov
add
out
mov
add
push
loope
out
xor
stos
mov
pop
shrl
sarb
movsl
cld
lcall
xlat
fmulp
xor
xor
arpl
aaa
cwtl
cmp
sub
xchg
pushf
mov
sub
or
push
rcll
jge
ljmp
out
xchg
negl
cmpsl
jle
push
and
sarl
addr16
or
or
sarb
sub
sub
in
push
xor
dec
push
sub
repnz
mov
sub
push
xor
jb
data16
dec
xor
push
push
rolb
pushw
fcomp
jb
fnstenv
add
or
cmpsl
adc
js
cli
mov
sub
lret
mov
mov
and
lds
aaa
in
xchg
sub
cmpsl
ljmp
or
cwtl
jae
mov
test
sbb
mov
xor
inc
and
faddl
into
xchg
scas
in
mov
gs
cmp
pop
push
sub
add
nop
mov
xchg
loope
xor
push
aam
out
dec
out
or
dec
inc
jb
cmp
sti
sahf
aad
enter
repz
and
mov
mov
out
loop
sbb
repnz
loopne
fstpl
cli
jmp
cmc
add
jno
pop
shlb
sbb
out
int
adc
arpl
push
insb
pop
ja
mov
in
gs
mov
test
push
adc
xor
es
pushf
fwait
cmc
cmp
repz
pop
das
xchg
mov
out
push
ja
bound
and
push
jmp
aaa
out
cmp
mov
jno
mov
lahf
icebp
jae
cmp
mov
enter
jne
or
jmp
es
lods
scas
sbb
js
js
mov
pop
test
cld
pop
nop
ret
xchg
push
sbb
int3
aad
mov
cmpsb
mov
pop
mov
cmp
add
test
int
testl
dec
daa
mov
aam
shl
andl
fucomp
cmp
inc
push
sub
out
mov
cmp
lahf
shll
sbbl
sbb
jb
test
inc
fcmovnbe
mov
inc
ret
mov
pushf
movhlps
andl
sbb
ljmp
xor
ret
cmpl
aam
popf
sbb
mov
xchg
sub
lret
mov
stos
add
fyl2x
mov
ss
inc
in
mov
jge
xor
imul
cmpsb
test
xchg
mov
clc
ljmp
push
sbb
xchg
cs
xchg
sbb
xchg
test
addl
clc
mov
loopne
cltd
sub
faddl
mov
pop
imull
jae
loop
xor
inc
jae
pop
xor
sahf
mov
xor
or
loopne
mov
push
push
pushf
addr16
mov
enter
jecxz
fld
les
jae
daa
iret
test
into
in
mov
lods
cli
dec
popa
in
sub
dec
ljmp
pop
xlat
inc
insl
xor
sub
dec
pop
scas
sbbl
push
clc
cmp
mov
fsubrl
nop
movsl
ret
int
arpl
inc
mov
sbb
mov
or
pop
aad
mov
jle
dec
insl
outsl
ljmp
push
outsl
lahf
jecxz
push
call
push
bound
imul
fsubr
push
dec
pop
int
push
icebp
jecxz
sbb
pop
sbb
pushf
xor
xchg
xor
popf
cld
pop
sbb
inc
pop
mov
lcall
pop
jge,pt
and
pop
cmpsl
dec
lahf
mov
inc
loop
sub
test
xor
pop
or
push
adc
xlat
daa
xchg
ja
pinsrw
fidivl
cs
les
sbb
imul
mov
pop
in
lds
faddl
clc
cmp
lods
stos
cmp
scas
mov
fildl
movsl
jno
lret
add
fsubr
and
sbb
mov
mov
sub
sub
aam
mov
mov
mov
cmp
adc
xor
push
xchg
insb
popf
aas
scas
push
push
xorl
fisubrs
fwait
adc
dec
aaa
xlat
inc
aas
jg
imull
adc
add
jno
in
fwait
sbb
jp
aas
or
bound
and
inc
add
js
loop
sahf
or
dec
das
dec
lods
and
adc
and
cli
xor
stos
aas
icebp
loope
adc
stc
dec
jae
mov
fwait
ljmp
loope
pop
icebp
push
fisttps
call
inc
test
mov
int
dec
add
rolb
sub
int
jo
imul
cmp
out
cld
sahf
lods
cmp
frstor
mov
sub
xchg
cmp
fsubrl
fsubs
sbb
mov
jp
pop
mov
addr16
jmp
push
int3
pop
sub
inc
mov
push
lcall
cmpsb
xchg
loopne
cmpsl
mov
mov
or
jecxz
xchg
and
pop
fsubl
test
or
dec
push
sahf
jo
movsl
insl
xchg
es
dec
push
and
xchg
xchg
cmp
pop
push
mov
test
lret
pop
int3
push
mov
in
nop
in
push
push
jb
scas
pop
xorl
sub
push
scas
and
popf
sbb
mov
pop
test
mov
repz
out
fisttpl
popa
rcr
cs
fidivl
mov
iret
or
mov
adc
rolb
xchg
mov
popf
or
int3
xchg
fs
call
pop
int3
out
sbb
int3
jecxz
fxch
xor
ljmp
mov
lods
rcrl
mov
cmp
iret
xchg
lods
aad
pop
adc
sahf
xchg
mov
out
enter
int3
adc
cmp
and
sub
xor
and
leave
inc
mov
stc
in
int3
es
sub
test
les
sbb
daa
or
sahf
insb
ja
in
sub
int
out
dec
les
jno
out
lret
sub
add
jns
and
xor
xor
lods
jle
dec
cmpsb
push
push
stos
xchg
insl
lock
sahf
pop
push
pusha
sbb
lods
mov
loop
gs
stos
and
or
ret
push
pop
pusha
cs
add
and
lock
fs
xor
movsb
fsts
mov
dec
in
into
or
aaa
out
mov
add
ljmp
icebp
scas
clc
adc
inc
xchg
arpl
clc
add
nop
jno
sub
sbb
orl
jl
cs
ffree
test
fists
jns
mul
sahf
mov
and
xchg
jge
cmc
pop
and
cmpl
imulb
push
addr16
xchg
mov
cmp
xchg
or
hlt
test
ljmp
outsl
imul
fdivr
pop
aas
push
mov
and
lods
inc
xchg
icebp
mov
jae
mov
jge
mov
hlt
xlat
cmp
jmp
or
loope
push
fnsave
ret
mulb
gs
movsb
mov
cli
cld
mov
mov
bound
mov
pop
push
xchg
fistpll
xchg
pop
xchg
lds
test
in
dec
mov
sahf
ficoms
push
rorl
out
mov
adc
jmp
jmp
test
clc
lods
inc
std
jno
test
mov
adc
loopne
out
mov
orl
cmp
jo
mov
shrl
mov
inc
rolb
fsts
ret
jl
inc
gs
dec
dec
inc
cmpsl
adc
sub
push
and
lret
xorl
scas
add
lds
lahf
push
cmpl
sub
or
push
imul
lods
testl
rorb
rclb
push
add
sub
add
shll
cwtl
or
in
inc
nop
mov
sbb
je
and
scas
mov
cmp
testl
jbe
pop
jnp
in
pop
adc
pop
mov
cwtl
sbb
push
clc
cmp
enter
in
cli
loopne
mov
mov
xchg
aas
or
jge
pushf
lret
cwtl
les
push
push
pushf
dec
addl
jecxz
mov
push
inc
pop
xor
mov
xor
sti
xchg
je
data16
push
ret
ret
testb
or
call
or
dec
stos
mov
jle
inc
add
stos
dec
sub
inc
rcll
mov
dec
jbe
addl
mov
out
mov
add
sub
shlb
and
gs
adc
testl
movl
fmull
inc
pop
inc
leave
loop
filds
pop
or
jo
push
dec
xor
daa
divl
rorb
cmpsb
xchg
in
inc
xchg
les
gs
sbb
cmc
xor
inc
fdivrp
jne
int
aaa
mov
add
jmp
pop
scas
out
sti
xor
push
addb
int3
imul
cmc
jp
xlat
push
jno
pusha
mov
dec
imul
ficoms
jbe
push
lea
and
mov
adc
scas
mov
pop
mov
rorb
popf
insb
test
fs
out
xlat
add
imul
das
push
pop
mov
or
andl
and
dec
pop
outsl
imul
mov
outsb
movsb
mov
xor
cmpsb
jb
add
pusha
movsb
out
mov
jno
jle
push
pop
outsb
sub
pop
mov
add
pop
scas
sub
popl
pop
test
mov
xchg
push
aad
loop
sub
into
sub
xchg
mov
stc
nop
mov
push
sti
mov
push
ret
out
lcall
fisubrs
lds
jns
xchg
mov
xlat
pop
sbb
shll
dec
test
es
jbe
imul
int3
pop
dec
sti
rorb
mov
scas
dec
adc
sbb
and
subl
sub
cmp
ret
push
jmp
enter
mov
icebp
or
fnstenv
fs
mov
rcrb
mov
add
aad
outsb
pop
xchg
pop
push
mov
push
inc
mov
fidivrs
js
jl
push
sub
fstp
fisubl
in
ret
popa
mov
aad
inc
xor
imul
inc
mov
push
stos
into
stc
push
lods
mov
push
jp
or
pop
sbb
xor
jg
adc
enter
lret
cmpsl
mov
pop
insl
out
ds
sub
ret
cli
push
dec
clc
pushf
push
and
cmp
shll
mov
divb
leave
jo
push
sbb
mov
gs
fiadds
xchg
cs
mov
xchg
xchg
enter
mov
aaa
ffreep
adc
subl
repz
ljmp
and
sub
lahf
cmp
xchg
mull
or
cli
jno
jle
jo
into
sti
sarb
sbb
gs
data16
arpl
mov
xlat
incl
jb
dec
outsb
xor
push
xchg
inc
sti
in
fwait
pop
fcmovnu
sub
loopne
call
lock
or
std
push
push
aas
cmpsb
in
mov
jge
fidivl
aaa
xor
and
inc
insb
cmc
fidivs
sbb
xor
sbb
ret
push
enter
sbb
cmp
rcll
out
xchg
aaa
fisttpll
pop
outsb
ljmp
dec
dec
inc
mov
jl
cwtl
inc
fnstenv
out
pushf
je
movsb
pusha
sti
std
xchg
jecxz
cmp
ljmp
lods
mov
cltd
imul
cmpsb
cmp
in
xor
xchg
mov
test
cli
mov
xchg
pop
jg
mov
push
xchg
leave
sub
and
adc
les
movb
jbe
push
call
xor
push
jne
fwait
mov
cltd
daa
inc
mov
pop
sbb
mov
push
insl
or
push
jne
xor
mov
in
jae
xchg
daa
int
mov
mov
out
add
and
ret
mov
lea
mov
iret
jp
and
jge
cld
cmpsb
stos
mov
pop
sahf
aaa
lcall
sbb
testb
jns
and
js
adc
dec
sub
cmp
shlb
pusha
dec
outsb
call
xchg
cmp
push
add
inc
and
addr16
sub
fwait
int3
or
mov
cmpsl
cmp
outsl
popl
xchg
xorl
int3
out
cmp
mov
or
in
sbb
adc
mov
jae
sbb
pop
je
data16
jmp
out
jb
fnstcw
sbb
sbb
xchg
outsb
pusha
lock
dec
mov
lret
mov
mov
jmp
insb
scas
push
lahf
in
inc
and
int
scas
jl
in
pop
in
pop
inc
ret
push
pop
and
add
negl
aaa
jg
ljmp
inc
mov
xor
aaa
push
mov
rcr
loop
cld
loopne
cmp
insl
mov
pushf
fidivrs
leave
mov
test
and
jo
inc
jne
int
pop
inc
pop
xorb
ds
ret
jg
dec
fmuls
push
xor
adc
jg
aaa
cli
xor
add
mulb
rclb
xchg
aam
adc
pop
jl
add
cltd
or
push
rol
lods
jmp
repz
add
mov
icebp
mov
ret
pop
sbb
out
mov
cmc
loop
pop
mov
imul
mov
out
rcr
ret
movsb
bnd
xchg
imul
mov
mov
fnstcw
out
out
fcoms
scas
pop
mov
mov
mov
clc
sub
scas
ret
divb
cltd
mov
les
xor
jne
pop
mov
mov
mov
inc
ret
add
adc
aad
imul
addr16
imul
movsl
jp
ret
ud1
addr16
jbe
sbb
inc
fdiv
popf
push
jle
popa
test
cld
in
jae
xor
pusha
jne
mov
add
mov
cltd
sbb
mov
aas
fisubrs
ds
ljmp
pop
fnop
cmpl
andb
adc
div
xchg
add
lods
adc
jno
and
loopne
jbe
cltd
xchg
test
push
outsl
mov
ds
or
repnz
jle
add
mov
xchg
jp
rolb
add
jns
mov
dec
push
jb
bound
fistps
loope
incb
push
adc
stos
push
sbb
repnz
push
in
dec
adc
xor
ret
or
or
mov
into
lds
imul
and
sti
mov
xchg
arpl
add
cli
dec
ret
decb
inc
lcall
inc
or
lds
push
add
xchg
cmpb
movsl
or
or
cmc
das
cltd
adc
or
cli
push
loop
shlb
cld
add
adc
dec
fwait
stos
and
outsl
push
or
cwtl
repnz
push
mov
jno
and
mov
or
jge
bound
pop
iret
ljmp
data16
dec
imul
ljmp
adc
jl
cmc
sub
insb
xor
lret
jo
push
das
gs
outsl
cmp
xor
pop
pop
cld
xor
xor
loopne
fsubrl
aam
ret
rcrb
ret
or
jl
jecxz
adc
jge
add
sbb
icebp
mov
call
jb
xchg
adc
and
mov
mov
ret
mov
jmp
data16
push
and
pop
mov
mov
lods
out
push
push
popf
inc
pop
popf
cmpsl
jne
repnz
divl
test
je
cmc
cmp
fsubs
sub
dec
add
jnp
jle
lret
cs
lret
jae
xchg
pushf
dec
sarb
hlt
ret
sub
jl
pop
pop
push
sbb
xchg
stc
sub
jmp
dec
repz
leave
lret
imul
push
or
ret
loope
jle
dec
xchg
pop
jmp
stos
call
mov
jae
xchg
scas
push
sub
jmp
pop
mov
sbb
xor
or
push
mov
into
xchg
push
mov
repz
and
dec
dec
outsb
nop
xchg
cmp
test
jno
dec
pushf
mov
sbb
mov
test
add
pop
or
cmc
jnp
scas
push
push
cmpsl
jg
sti
push
mov
or
cmpsb
jne
jbe
ficomps
jmp
enter
push
sahf
adc
test
xor
es
lea
aaa
inc
ss
lcall
sub
mov
xor
xchg
inc
pop
sub
mov
pushf
xchg
mov
push
ret
xchg
and
mov
mov
inc
stc
es
jns
fbstp
sbb
dec
inc
cltd
push
loopne
outsl
test
mov
pop
push
into
add
popa
jmp
cmp
pop
lret
fsub
orb
inc
cmpsb
inc
and
adc
in
ficompl
sbb
inc
jmp
add
test
jns
inc
imul
jae
adc
sbb
repz
loop
cmpsb
jae
jbe
push
and
clc
test
push
jnp
lock
or
pop
pop
push
scas
sub
mov
xchg
jns
or
cli
dec
cmp
in
insb
dec
jle
stos
push
jne
sti
xor
ljmp
inc
mov
mov
cld
div
dec
mul
fcmovnb
inc
fistps
inc
aaa
xchg
das
inc
push
xchg
add
lahf
jbe
dec
insl
pop
add
mov
imul
in
dec
pop
dec
or
insl
xchg
jbe
jp
in
push
mov
and
adcl
lods
adc
in
js
jne
pop
mov
sub
add
or
dec
jns
ret
sub
je
inc
inc
lock
fwait
popa
dec
sub
imul
xchg
cli
sbb
xchg
lds
loope
jp
mov
fiadds
lret
adc
sub
mov
mov
incb
imul
dec
sub
mov
xchg
inc
pop
nop
push
int
enter
test
and
lods
in
shl
add
test
imull
sub
scas
mov
je
dec
movsl
cmp
add
movsb
add
std
push
and
fistps
jmp
in
das
repz
xchg
push
lock
aaa
imul
lds
sub
lea
filds
push
inc
sub
adc
and
ss
cmp
rorb
push
mov
xor
fidivl
mov
push
pop
add
fsubr
mov
xchg
outsb
repnz
dec
jbe
arpl
scas
or
jl
mov
push
and
push
mov
lods
add
enter
test
add
fisubrs
and
ds
int3
dec
shrb
sub
es
fisubrs
mov
lock
mov
push
jo
sub
idivl
jbe
ret
xchg
roll
push
or
mov
or
xor
cld
in
js
lea
xchg
fs
ds
fsubrl
dec
clc
sbb
xor
xor
jbe
ret
lds
xor
addr16
add
lcall
xor
shll
lds
lods
mov
dec
inc
lret
jge
push
shrb
xchg
loope
and
sbb
push
cmp
lcall
shl
mov
es
xchg
dec
sarl
cmp
adc
andl
or
call
cwtl
pop
test
call
adc
neg
jge
cmp
in
mov
xor
xor
scas
fmuls
arpl
xchg
cmpsl
or
testl
adc
imulb
scas
leave
lcall
ret
cmp
lods
int
jns
mov
xchg
mov
decb
mov
add
mov
cmp
dec
sub
outsl
int3
insl
testb
xchg
and
aaa
push
es
fs
jae
mov
bound
aad
outsb
insb
les
mov
pop
fisttpll
or
dec
mov
cmpl
dec
cmp
adc
jnp
imul
sub
in
inc
mov
push
sbb
push
lods
pop
and
add
xchg
mov
cmp
sahf
jmp
arpl
cld
out
lahf
icebp
push
push
push
adcl
push
inc
loopne
xor
cwtl
or
jo
sub
pop
roll
push
mov
std
mov
inc
leave
xchg
enter
pop
imul
hlt
push
push
out
jnp
cmpsb
pop
hlt
ror
xor
repz
xor
jne
and
popf
inc
add
push
mov
iret
sbb
mov
mov
int
pop
mov
cmp
push
adc
push
scas
int3
cmpsb
ja
and
popa
imul
push
outsl
mov
inc
xor
push
cmp
lods
mov
ja
mov
adcl
shlb
xchg
sbbb
ret
xor
mov
in
fisubrl
icebp
lahf
test
je
add
cwtl
movsb
xchg
mov
ljmp
stos
push
dec
cs
sub
das
and
jbe
adc
xchg
push
xchg
jo
jnp
mov
jne
sbb
push
add
addr16
pushf
sbb
out
fsts
test
mov
sbb
enter
dec
sub
sbb
shr
orl
int
or
addr16
or
int3
js
xchg
inc
enter
pop
bound
out
pop
loop
cs
in
repz
pushf
mov
or
stos
push
jmp
popa
insb
jo
mov
subb
cmp
push
cmp
mov
xor
sbb
popa
pushf
test
std
sub
stc
push
jo
daa
sub
push
fs
push
and
movsl
mov
out
xchg
enter
cmp
push
rorb
hlt
xor
fstpt
mov
mov
mov
mov
and
addr16
dec
nop
rorl
or
mov
or
inc
or
inc
push
pop
leave
enter
jl
sub
cmp
andb
cld
pushf
negl
mov
cmpsl
ret
mov
inc
xor
decl
dec
sub
js
mov
sbb
push
movsl
pop
dec
pop
clc
pop
rolb
aas
adc
out
or
addr16
inc
jo
cmp
pop
jne
dec
mov
inc
adc
stc
test
jp
std
loope
std
lods
aad
daa
xchg
add
mov
cmc
movsb
divb
lds
mov
in
jb
cmp
test
cs
sbb
leave
adc
sarb
sti
mov
jae
icebp
pop
sub
xor
cmc
dec
cmp
pop
cwtl
xor
pop
movsl
cmp
add
inc
aad
xlat
jp
fwait
pop
fs
jle
adc
add
mov
mov
incl
fimull
roll
test
test
mov
inc
ja
pop
fmul
inc
lock
fs
lods
jnp
das
dec
call
jecxz
pop
sub
add
lock
jge
lcall
inc
sub
pushf
push
call
movsl
xor
inc
dec
rorb
rorl
cld
jg
jne
sahf
mov
cltd
cmpsb
fisttpl
std
fs
nop
push
pop
cmp
jae
mov
imul
in
jle
shl
scas
ljmp
add
ja
dec
xor
or
mov
mov
icebp
nop
mov
inc
test
pop
imul
sub
test
mov
out
loop
xchg
subl
and
ja
outsl
idiv
daa
dec
std
ljmp
lods
or
int
xor
movsl
cmp
xchg
or
loopne
repnz
sub
inc
lods
std
dec
popf
push
sbb
dec
out
addr16
fnstcw
mov
fisubrl
sbb
jnp
xchg
cld
xor
xlat
dec
inc
repz
nop
into
and
bound
fmull
cmp
add
std
pop
xor
lcall
data16
push
lds
lods
aad
sub
add
inc
mov
sub
inc
testb
push
inc
or
je
decb
pop
pusha
lock
cwtl
pop
xchg
jne
pop
out
pop
icebp
xor
mov
lret
jnp
inc
sub
dec
xor
jge
jp
jg
pushf
pop
pop
shrl
lcall
xor
push
xchg
cld
js
sub
push
xor
or
mov
pop
sbbl
dec
cmpsl
cli
and
cmp
and
mov
and
push
mov
dec
mov
push
jns
xor
lock
push
xor
cmp
shrl
mov
sub
cmp
sbb
cs
outsb
push
out
add
mov
in
adc
pusha
daa
fcmove
lret
xchg
push
cmc
sub
add
fsubrl
add
lret
xlat
mov
mov
xchg
sub
jecxz
test
mov
clc
jp
inc
lret
andb
nop
mov
out
nop
ds
mov
or
test
cltd
aam
lock
add
popf
pop
mov
lods
jno
add
cs
rcll
jge
fstpt
ss
pop
inc
mov
lret
rolb
jb
push
adc
cltd
sbb
mov
lret
clc
cmpsl
sbb
push
inc
std
mov
or
test
sub
nop
ret
jmp
mov
movsl
daa
sbbb
dec
jae
testb
push
std
add
movsl
outsl
mov
mov
push
fsubrl
std
xlat
leave
roll
mov
les
jmp
inc
and
out
loopne
lock
dec
cmp
aad
lods
mov
xchg
sahf
pop
inc
std
and
mov
push
inc
adc
jg
sahf
outsl
rol
cwtl
inc
cs
sti
sub
rorl
or
dec
inc
leave
jae
or
push
mov
and
andb
sub
push
and
mov
pop
cmp
pop
cltd
int
dec
sub
shl
mov
shlb
test
push
or
leave
pop
and
pop
and
insb
push
mov
push
leave
dec
out
nop
jbe
xchg
cld
sub
jo
cld
fmul
jge
add
xchg
sbb
ljmp
pop
sbb
jns
in
mov
xchg
push
inc
xchg
sub
je
mov
std
dec
pop
mov
cli
sbb
jno
in
adc
add
xchg
add
inc
add
pop
iretw
lret
pop
add
stos
inc
lock
xchg
scas
shll
lods
lcall
addb
sbb
fldt
sub
inc
xchg
push
xchg
test
push
inc
outsb
bndldx
mov
pusha
adc
loope
sahf
pop
lock
mov
aas
scas
xchg
dec
pop
cmpsb
sbb
fnstsw
cmp
aam
sahf
das
or
adc
dec
push
movl
cmp
dec
mov
popf
outsl
push
xor
sbb
cmc
bsr
pop
hlt
ja
mov
iret
cwtl
jmp
xchg
test
and
cmp
in
int
mov
xchg
pop
xchg
mov
imull
pusha
out
mov
cwtl
xor
iret
adc
pop
jb
mov
fnstsw
popl
xchg
or
hlt
jo
sub
push
mov
dec
rcl
idiv
iret
mov
divl
xchg
mov
mov
movsl
outsl
sub
mov
mov
js
adc
mov
es
cmpsb
sub
enter
and
cmp
mov
loope
test
mov
lods
pop
mov
nop
add
ljmp
fdivl
fprem1
jnp
adc
insb
call
std
ds
push
lret
test
jae
add
sub
shl
aas
aas
inc
sarl
inc
cmp
add
add
dec
add
push
jp
jno
aas
fldt
pop
inc
xchg
rorl
test
pop
mov
dec
rcll
push
inc
or
xor
mov
in
popa
fcompl
in
pop
push
in
or
cmp
or
lods
xlat
pop
add
xchg
cmp
or
adc
xor
lcall
jne
out
ljmp
andb
mov
pop
idivl
in
shrb
pop
test
lock
mov
mov
pop
dec
inc
add
call
fs
jmp
imul
fdiv
out
insl
cmp
dec
mov
imul
test
cld
push
lods
sti
xor
into
es
pop
fwait
insb
or
stos
lret
sahf
cmp
pop
sti
imul
jg
xlat
pop
outsb
sti
out
or
push
jmp
jae
or
jae
add
pop
xchg
mov
or
cli
fisubrs
inc
mov
cld
mov
scas
and
jecxz
imul
idivl
xor
cmc
stos
daa
test
and
jle
lds
shll
arpl
ret
and
adc
pop
std
lods
in
pop
test
adcl
jb
mov
mov
xchg
and
jnp
mov
and
push
adc
sub
dec
testb
rcrb
mov
lods
stc
jno
repz
lods
push
stc
mov
rcr
lret
xchg
imul
adc
int
adc
pop
sub
mov
lcall
push
std
and
data16
jle
xor
inc
mov
xchg
stos
dec
cmp
jg
mov
ljmp
xor
insl
and
fwait
stos
cltd
into
mov
xchg
push
pop
lret
adc
in
mov
pop
repnz
adc
ljmp
dec
add
into
call
in
pop
pop
fists
outsl
xchg
lds
scas
or
dec
or
sbb
dec
fnstsw
popf
or
inc
push
call
mov
repnz
mov
pop
push
stc
sbb
inc
in
rorl
mov
pop
pop
movsb
lods
loop
insb
cltd
mov
cmp
add
mov
jo
std
add
dec
out
inc
test
push
jmp
in
adcb
out
mov
jle
vunpckhps
imul
roll
cld
pushf
mov
int3
outsl
cmp
je
xlat
andb
jmp
fnsave
in
je
cmpsl
push
lret
xor
js
fstpl
xchg
inc
cmpl
std
into
sbb
jmp
xchg
and
xchg
adc
loope
xor
loop
push
sbb
shlb
test
push
xchg
or
stos
rcrl
inc
loop
test
lret
in
shrb
and
addl
shlb
sub
adc
dec
mov
pushf
lods
push
xor
or
dec
pop
cmpb
inc
jne
cwtl
ljmp
int
push
outsb
and
lret
pop
movsb
icebp
fsts
daa
inc
xlat
loop
rclb
mov
mov
add
repz
sbb
rorl
xchg
cmp
sbb
js
stos
pop
jmp
sub
inc
les
les
rclb
loop
xchg
pushl
add
aas
jno
add
sub
jbe
add
subl
mov
fdivrl
test
pop
add
cmp
sbb
in
addl
cmp
mov
sahf
lcall
push
fbstp
or
add
pop
add
popa
js
jecxz
and
insl
lret
inc
jecxz
nop
int
decl
inc
add
xor
cmpsl
mov
addr16
ljmp
aaa
fs
mov
sti
push
fdivrs
jecxz
shld
lock
leave
test
data16
popa
andb
dec
rorl
pop
push
xor
or
subl
sub
roll
sub
imul
push
daa
gs
repz
je
loopne
sbb
in
mov
or
jns
dec
sbb
mov
jg
into
sbb
das
aaa
loop
data16
sbb
jmp
adc
xor
scas
lods
sbbl
shrl
inc
cmp
lds
sub
xor
frstor
and
sub
daa
lds
out
jbe
lock
shll
nop
or
cltd
scas
fs
fldt
enter
cld
cmpsb
insl
adc
jl
mov
in
ret
cli
imul
orl
xor
jg
inc
sarl
xor
test
push
scas
pop
bound
adc
cmpsb
jp
push
pop
loope
hlt
loopne
jbe
xchg
dec
push
jns
dec
push
lret
mov
je
add
jecxz
ret
push
cmp
mov
inc
les
cmpsl
sub
dec
icebp
lcall
iret
cs
into
xor
insb
cmp
aad
adcl
mov
insl
cmp
jb
xor
add
dec
imul
xchg
dec
sti
leave
out
sahf
push
out
mov
mov
xchg
jp
mov
pop
dec
xor
xchg
cmpsb
pop
jns
and
cmp
scas
cld
push
jmp
dec
mov
das
lds
cli
sbb
aam
sti
std
add
cwtl
shrl
fimuls
repz
popa
iret
sbb
in
ja
adc
push
dec
inc
adc
test
imul
xchg
jb
inc
sub
jle
or
sub
xchg
outsl
mov
mov
cltd
rcrl
mov
test
adc
dec
repnz
jno
dec
enter
pop
jno
inc
jmp
cmpsl
js
or
cmp
inc
gs
out
addb
pop
xor
mov
out
pop
xlat
adc
push
subl
or
movsl
jle
jno
loopne
xchg
dec
xor
test
sub
in
dec
or
gs
inc
scas
out
xchg
xchg
cltd
xchg
xchg
lock
or
mov
jb
xlat
dec
lcall
push
push
es
xor
rcrl
sub
stc
jae
fcoms
pop
dec
gs
nop
mov
push
subl
adc
pop
into
jbe
add
pop
sub
mov
test
lahf
mov
sub
test
adcb
and
mov
in
adc
sbb
mov
es
fwait
adc
test
mov
jno
push
mov
lods
push
xchg
xor
adc
inc
mov
sbb
mov
lods
jge
adc
jo
mov
adc
xor
ret
add
loop
add
shl
shrl
inc
jp
imul
clc
arpl
leave
jecxz
lea
ljmp
or
pop
lods
int3
xor
loope
dec
sbb
sub
mov
mov
mov
add
mov
sub
scas
lea
mov
sub
dec
sub
in
rcl
push
cmp
sahf
mov
and
cmp
mov
sbb
jp
mov
sahf
mov
stos
shl
lcall
adc
sbb
fldenv
mov
push
jae
dec
rolb
jge
mov
pop
mov
or
es
or
adc
aaa
dec
xor
pop
xchg
pop
mov
in
negb
lret
shll
loopne
pop
arpl
xchg
fcoms
cmpsb
cmp
fisubrl
xchg
inc
or
push
cli
cmpsb
mov
les
xor
xchg
pmulhuw
out
mov
add
mov
lcall
push
inc
dec
fs
mov
mov
pop
cmp
fadds
cli
cltd
mov
add
pop
adc
xlat
xchg
sbb
cmpl
sbb
jmp
inc
or
mov
dec
icebp
stos
jnp
in
push
jmp
ss
xchg
adc
and
inc
in
hlt
jmp
mov
mov
imul
mov
movsb
xchg
fdivrl
psrlq
add
incb
mov
push
stos
bound
sbbl
das
xor
inc
cmpps
mov
cld
popf
sub
or
insb
fldcw
cmp
and
loopne
outsl
sti
pop
xor
jp
cs
scas
jmp
push
popf
orl
mov
lcall
push
mov
xchg
push
in
xorl
mov
mov
xor
dec
inc
leave
ja
out
jb
lock
arpl
lcall
sbb
jo
push
adc
add
jge
jmp
inc
lret
or
popa
daa
fcmovnu
mov
lahf
stc
rorl
fwait
dec
push
sub
pop
les
fstpt
je
addl
ja
scas
mov
jle
sbb
or
push
testl
dec
enter
push
sar
dec
in
pushf
mull
dec
inc
mov
push
pop
or
sbb
leave
ds
cs
add
stos
inc
adc
iret
cwtl
in
int3
outsl
cmp
cs
cmc
in
xor
jbe
loope
in
cmp
and
push
jp
xchg
mov
push
or
out
mov
bound
sub
pop
adc
jae
ret
mov
test
insb
loop
ljmp
mov
insl
fs
insb
out
sub
mov
add
push
aad
mov
push
add
xchg
dec
xor
popf
push
mov
jb
or
pop
jnp
hlt
jns
cltd
add
pop
push
pop
lds
in
inc
fistl
jbe
and
push
xor
popl
sbb
push
lds
pop
mov
jmp
lcall
lret
nop
xchg
cs
jnp
sbb
cmp
gs
pop
lods
cli
inc
mov
xchg
lea
mov
jne
adc
xor
jnp
les
int
out
xor
cmc
movsb
xchg
mov
sub
stos
pop
pushf
inc
xor
das
ja
dec
test
addr16
xchg
xchg
adc
test
fcompl
iret
jl
xor
int
and
jae
mov
and
data16
jo
test
jmp
pop
xchg
leave
or
mov
pusha
add
aaa
cmp
imul
xchg
inc
into
clc
jns
xchg
push
fsubrl
mov
jecxz
cmp
inc
popa
inc
dec
or
or
pop
mov
push
mov
pop
mov
dec
int3
sub
sbb
sub
push
out
in
jbe
or
cmpsl
stc
xor
ja
inc
push
mov
dec
mov
or
outsb
lods
push
adc
fstpt
jns
lods
pop
shll
and
jecxz
inc
and
inc
jbe
test
dec
mov
pop
push
jae
out
inc
lahf
loope
test
popa
jle
lods
cmp
jae
xor
or
in
xorl
xchg
stos
add
mov
add
inc
lods
iret
out
dec
sarl
and
mov
mov
lods
lods
cmp
dec
andb
xor
rcl
cs
adc
cmp
jb
stc
mov
mov
and
xor
mov
lods
inc
jnp
add
adc
imul
and
repz
mov
loopne
shll
jno
cmc
test
sbb
les
js
out
inc
decb
dec
leave
das
stos
mov
dec
mov
xchg
inc
mov
cmp
add
xchg
cwtl
test
cmp
test
jo
les
mov
jb
loopne
insl
std
fs
and
nop
icebp
or
dec
mov
xchg
je
sub
push
shrb
pop
pop
and
int
out
repnz
sub
leave
ljmp
out
mov
test
pop
xor
sub
ja
jns
icebp
hlt
push
sbb
jl
testl
cmp
std
daa
or
dec
ret
lock
mov
jbe
xlat
mov
scas
mov
push
mov
fwait
inc
out
subb
in
or
div
sbb
mov
inc
mov
addr16
dec
sbb
test
rorb
addr16
and
add
mov
or
dec
mov
inc
jl
aas
out
jae
aas
xchg
inc
push
rorl
loop
ss
inc
call
push
mov
push
fs
xor
push
sub
jmp
jp
stc
jno
int3
mov
pop
mov
pop
sub
cwtl
je
sbb
mov
rorb
xchg
mov
dec
adc
inc
pop
int3
stc
out
test
mov
shll
test
mov
fadds
sub
test
cmpsb
mov
aad
movsl
lahf
aam
pushf
xchg
jbe
out
cli
imul
cmpsl
cmpsl
sbb
cmp
add
dec
mov
iret
adc
xchg
sub
lea
inc
adc
or
dec
dec
jle
out
mov
xchg
cmp
iret
push
paddd
inc
mov
aam
push
out
jecxz
test
or
ss
aad
add
rol
or
xchg
ja
inc
sub
sahf
pushf
push
inc
sbb
dec
xor
sbb
jnp
dec
adc
inc
scas
jp
shl
cmp
sbb
dec
or
jp
and
in
test
movsl
fs
cmp
call
pop
add
mov
lds
dec
stc
push
jb
mov
es
adcl
insl
xchg
xchg
in
mov
xor
add
lret
mov
push
inc
loopne
pop
mov
pop
fnstcw
xor
push
cmp
or
cmp
push
lods
or
jns
xchg
pop
or
dec
adc
arpl
insb
in
pop
ret
jne
fwait
xor
push
insb
pop
pop
sub
adc
cmp
cmp
mov
pushf
dec
adc
pop
mov
lret
movsl
xor
mov
pop
out
mov
divl
das
lea
push
mov
sub
add
and
push
leave
insb
imul
xlat
cmp
xchg
add
imul
hlt
enter
or
addr16
cmp
mov
mov
inc
out
ss
aad
sahf
xor
or
cld
fcoml
popa
repnz
sti
pop
sti
mov
cld
daa
testb
dec
cs
loopne
pop
es
add
repnz
sti
das
inc
jecxz
mov
push
jb
mov
inc
mov
cmc
sbb
ret
lea
pop
lahf
sbb
leave
mov
arpl
test
lret
or
ret
loope
outsb
loop
nop
sbb
xchg
insb
jns
out
mov
sti
xchg
adc
aaa
pop
lret
push
cmp
mov
ja
fwait
mov
imul
movsl
outsb
push
mov
mov
push
testl
and
mov
dec
in
int
fists
xchg
aas
inc
dec
mov
ljmp
mov
xor
lret
das
mov
pop
std
push
add
leave
out
add
dec
ja
sbb
jo
lret
icebp
mov
inc
pop
scas
aaa
out
gs
fcomp
repz
insb
rorb
mov
xor
lahf
push
aaa
je
mov
jno
jp
scas
dec
jae
inc
insb
cld
adc
test
cltd
cmp
mov
sahf
imul
out
add
test
fmuls
sub
out
fucom
lcall
mov
outsl
in
arpl
insl
test
inc
pop
divl
imul
test
or
cld
ret
cmp
mov
sub
jl
dec
xchg
cmp
add
cmp
push
mov
or
and
add
arpl
mov
popa
leave
inc
xchg
mov
and
adc
sbb
adc
sarb
push
dec
sbb
inc
mov
adc
outsl
pop
lods
push
mov
mov
lea
push
fs
sbb
inc
ss
incb
data16
jno
insl
xor
inc
push
ljmp
pop
adc
push
and
test
fldt
xlat
add
cmp
data16
fmul
lcall
push
jne
sarl
neg
cmpsb
mov
jae
mov
daa
sub
push
bound
int3
outsl
ret
dec
leave
mov
scas
jmp
andb
mov
frndint
xchg
push
dec
add
shrb
jge
mov
mov
xchg
push
rorb
pushf
mov
cmp
inc
jmp
push
cli
rolb
xor
sub
mov
jge
lds
and
test
aam
stc
pop
dec
imull
mov
sub
mov
sub
cltd
xor
jmp
jle
repnz
cmc
sbb
fmuls
sbb
roll
int
jp
push
sbb
fadd
and
xor
mov
mov
fucomi
or
stos
xchg
lret
add
out
notl
mov
jne
cmpsb
fimull
add
test
or
adc
inc
and
or
loopne
in
cwtl
mov
shlb
stc
cltd
sahf
cmpsb
add
aam
dec
shr
xchg
pop
sarl
movsb
inc
mov
push
pop
sarb
cmp
stos
sub
fwait
sbb
inc
cmp
ror
sbb
jnp
and
cltd
dec
into
add
jo
jne
or
mov
scas
dec
in
les
sbb
pushf
jg
repz
sub
pop
fistps
inc
pusha
mov
loopne
jp
rorl
lcall
in
dec
push
mov
cmp
push
mulb
adc
jo
inc
add
mov
inc
fdivs
mov
mov
push
out
ljmp
ficoml
inc
sub
cmp
push
and
push
test
mov
mov
or
sar
jo
push
adc
and
dec
xor
dec
adc
lcall
mov
inc
or
xor
mov
out
inc
xchg
sub
and
stos
pop
pop
mov
mov
mov
mov
sub
cmp
xchg
lret
lret
push
andb
mov
fisubl
lahf
and
rcll
mov
sbb
push
xchg
and
push
fs
hlt
jae
loop
pop
xchg
mov
stc
test
xchg
add
sbb
lods
lods
xor
mov
aaa
test
xchg
xchg
or
push
inc
dec
sub
iret
xchg
mov
inc
gs
inc
lock
push
test
jae
xor
adcb
cmp
cmpsl
inc
in
mov
les
adc
jo
push
pop
inc
cmc
mov
jnp
iret
pop
push
orb
cmp
or
out
push
cmpsl
adc
js
xchg
mov
cmp
add
cli
pop
outsb
std
or
fld
cwtl
psrld
fwait
cmp
popf
jae
rcl
aad
adc
mov
addr16
sub
cmpsb
sbb
jae
xchg
sub
int3
xlat
add
adc
adcb
sub
dec
sub
rol
inc
decb
xchg
lahf
arpl
icebp
scas
jo
inc
jne
cmp
in
add
jb
sbb
push
sbb
push
add
das
jecxz
and
add
and
dec
inc
mov
leave
insb
mov
dec
imul
push
jns
add
gs
lret
mov
ds
fstl
push
sti
jg
or
stos
mov
dec
imul
insb
or
mov
stc
xlat
ljmp
nop
gs
imul
push
fwait
cld
ljmp
subb
std
fwait
arpl
inc
cs
sbb
gs
mov
int
push
sbb
pop
lahf
cmp
push
jmp
inc
mov
jge
stos
xchg
hlt
leave
aad
mov
lret
sahf
inc
or
cli
inc
shr
call
shlb
pop
in
movl
sahf
adc
stos
or
cmp
cmp
xchg
cwtl
sahf
or
dec
xchg
sbb
pop
push
push
lock
mov
inc
and
xor
lods
adc
xlat
adc
int
sub
fidivl
sub
xchg
sub
jle
ds
cs
push
mov
fcomps
jmp
mov
rcll
or
xor
or
stos
xchg
fildl
ret
cli
add
cld
or
inc
mov
out
shl
xlat
into
pusha
or
push
push
cmp
pop
or
xchg
ret
pop
mov
mov
lret
jecxz
and
cli
and
subb
push
mov
or
std
dec
mov
dec
in
inc
bound
icebp
in
cwtl
lds
push
cmpsb
dec
xchg
pop
xor
stos
in
int
lods
push
mov
je
cltd
lret
mov
sar
xor
fsubrl
inc
dec
add
call
mov
test
pop
sbb
jmp
sbb
fwait
jp
or
add
mov
inc
mov
xchg
lahf
and
sbb
insb
loopne
ja
sarl
dec
mov
out
fstp
ja
test
xorl
cmp
inc
mov
loop
out
inc
adc
in
nop
sarl
fisttps
aam
xchg
sbb
lds
and
js
jl
sahf
out
ror
inc
push
mov
xchg
test
jnp
xor
jbe
sbb
mov
lock
xor
mov
mov
adcb
dec
jmp
popa
inc
aad
call
or
sbb
scas
sub
xor
mov
sarl
lret
daa
pusha
xchg
movsl
iret
and
ja
pop
popa
sbb
ja
lret
jb
jg
pushf
cmc
xchg
jo
pop
inc
push
xor
inc
jg
inc
icebp
dec
mov
scas
push
mov
imul
cmp
sub
or
scas
insb
dec
push
gs
push
push
jns
test
mov
out
xchg
mov
stc
xchg
out
cwtl
mov
add
mov
mov
call
mov
mov
jns
shll
mov
popa
push
inc
xchg
imul
dec
mov
push
mov
inc
das
or
mov
pop
loopne
inc
aaa
rcr
lods
int
lock
iret
or
jb
fs
out
push
and
inc
movsb
icebp
addb
sbb
scas
mov
xlat
fs
push
mov
sbb
stc
mov
and
dec
ljmp
int
pop
dec
mov
mov
lcall
lea
fstpl
sbb
adc
adc
inc
mov
xchg
out
and
mov
scas
inc
stos
push
xor
or
xchg
fmul
jmp
cld
fimull
bound
dec
sbb
inc
dec
or
popa
add
push
dec
ja
bound
jno
aad
daa
out
mov
ds
or
or
jae
push
add
push
aas
in
sbb
pop
lret
cmp
push
push
sub
adc
push
xor
sbb
sahf
pop
scas
iret
fs
pop
out
xchg
sbb
and
fcompl
and
xor
ljmp
xor
mov
je
out
jmp
jg
mov
fdivrl
addb
push
lcall
cltd
and
ja
cmp
clc
and
push
pop
inc
test
fs
cli
test
and
imul
mov
sub
in
inc
in
fldenv
pop
out
pop
push
cmpsb
lret
sarl
rorl
mov
das
pushf
or
xchg
jecxz
lds
or
xchg
test
sahf
push
adc
mov
mov
int3
inc
xchg
or
mov
stos
inc
ret
pop
jmp
adc
sub
push
cwtl
clc
dec
push
push
xchg
inc
push
pop
out
jle
cmpb
jae
xor
lods
stos
cmp
lret
xchg
pop
dec
mov
cmpsl
lret
dec
lahf
shll
pop
sbb
adc
jmp
mov
sub
shrb
lahf
andb
sub
xor
stc
stc
xchg
fiaddl
lds
push
jmp
sub
pop
push
jnp
scas
test
inc
jmp
popf
cmpb
aas
push
dec
nop
jecxz
bound
gs
jmp
inc
fnsave
and
mov
mov
mov
fcomps
js
or
mov
mov
jno
adc
pop
paddd
jle
mov
addl
imul
jo
and
push
adc
gs
dec
rorb
lahf
xchg
inc
and
push
push
xlat
adc
sub
jp
pushf
dec
repnz
in
in
mov
test
push
mov
jmp
mov
clc
xor
inc
jmp
mov
mov
insb
pushl
mov
lock
lods
or
mov
ds
mov
sub
mov
jns
dec
cmp
stos
push
orl
popf
jl
or
mov
dec
inc
gs
jb
pop
and
pop
ss
sub
inc
es
repnz
test
add
push
mov
dec
popf
divl
cmp
daa
into
test
mulb
xchg
add
loopne
ljmp
ss
xor
xor
fwait
inc
mov
jno
push
sbb
sub
jo
jns
sbb
inc
stos
faddl
jp
out
ret
lods
push
and
cmp
cli
pop
sub
xor
mov
mov
daa
sbb
xor
and
jbe
push
ret
mov
rolb
xor
iret
mov
enter
je
mov
sar
add
repnz
fs
push
sbb
jo
xchg
mov
push
das
js
push
rcll
and
lods
mov
push
aas
in
mov
mov
es
dec
movsl
mov
and
sbbb
pushf
push
inc
stos
popa
rclb
or
lcall
push
sbb
adc
jo
mov
xchg
fwait
shll
mov
imul
pop
xor
sbb
inc
pop
push
jnp
xchg
dec
mov
push
in
ss
pop
jo
in
add
lahf
pop
in
and
push
mov
add
cmp
mov
ja
out
dec
outsl
in
test
data16
xor
xchg
cmpsl
lret
ret
lcall
pop
fiaddl
lahf
cld
cmp
mov
test
mov
aaa
hlt
pop
loope
jae
add
jb
cmp
addb
test
jns
shll
pop
mov
jns
lock
outsl
add
sbb
stos
lods
or
cmc
push
stos
add
xor
nop
mov
pop
fldt
scas
cmpsb
xchg
rolb
sub
adc
movsb
pop
jmp
popf
mov
sub
int
jb
call
cmp
stc
xchg
push
aas
leave
data16
int3
pop
mov
aas
pop
sbb
jne
jnp
jle
mov
lret
cmc
jno
cmpsb
adc
das
daa
pop
mov
aam
mov
pushf
fstpt
mov
cld
fwait
cli
shlb
mov
sub
adc
jns
adc
in
xor
mov
inc
cld
clc
pusha
lods
loopne
cmpsl
addr16
push
je
cmp
pop
addr16
jo
push
div
pop
sbb
lea
es
imul
mov
pop
xlat
loopne
mov
stos
mov
out
lret
rcrl
mov
test
dec
out
jmp
enter
out
out
aaa
inc
mov
in
arpl
mov
push
push
sub
fisubrs
sub
xor
jle
mov
adc
xor
inc
pop
adc
mov
xor
mov
lods
mov
push
sbb
mov
cwtl
sub
or
stos
push
adc
outsb
add
ret
xor
call
std
cli
sbb
jecxz
sbb
sbb
or
xchg
sahf
jae
fwait
aas
sbb
stc
into
xlat
dec
or
stos
mov
cltd
andb
enter
dec
push
mov
and
mov
sub
lea
fcomps
jg
push
lret
rcrb
sub
adc
push
mov
out
int
dec
fidivrs
aam
loop
mov
jb
dec
icebp
ljmp
repz
cmp
fucomi
mov
fcoms
fwait
mov
enter
sbb
push
add
mov
push
inc
inc
inc
shrb
xor
inc
mov
into
shl
imul
push
leave
cltd
in
lret
or
clc
adc
out
sbb
test
xor
pop
scas
stos
mov
sbb
or
insb
xchg
push
sbb
loopne
xchg
scas
sti
pushf
jecxz
push
sarl
jnp
pop
jmp
es
std
icebp
outsl
add
andl
jno
leave
pop
jge
sbb
mov
ficoms
ds
jae
mov
popf
sub
in
mov
pop
xor
jo
dec
dec
popa
test
frstor
xchg
dec
pop
mov
out
outsl
add
and
xor
mov
and
out
xor
dec
data16
push
jle
sbb
cli
add
fsub
je
jb
or
jge
push
fs
sub
lcall
cmp
pushf
xchg
sbb
cmp
add
cmp
aad
dec
jne
je
fsubr
roll
int
mov
xor
leave
xlat
mov
mov
mov
lret
imul
mov
push
sbb
and
jp
incb
sets
dec
insb
mov
scas
test
out
cmp
test
daa
adc
es
cmp
mov
out
outsb
inc
jecxz
mov
sub
mulb
ja
inc
les
push
pop
inc
in
insb
push
add
arpl
mov
es
push
jmp
jbe,pt
cwtl
mov
jne
addr16
mov
iret
mov
fs
sub
inc
mov
jle
sbb
push
popa
inc
test
xchg
jle
pusha
mov
fisubl
fisubrs
mov
mov
enter
xchg
nop
push
and
jmp
or
or
push
inc
sub
lcall
daa
popf
push
shr
mov
push
add
pop
sbb
and
das
lret
xchg
imul
inc
cltd
inc
or
mov
lods
adc
push
mov
repz
test
pusha
movsb
add
mov
add
sahf
inc
int
insb
cld
inc
outsb
out
push
mov
adc
jp
and
and
imul
fisubs
xlat
jecxz
int
insb
push
gs
sbb
lods
push
jp
xor
subl
ljmp
sbb
fdivl
push
mov
dec
pushf
sub
clc
out
sub
loopne
fsubrs
inc
adc
lret
nop
das
cwtl
bound
jns
test
jb
rolb
push
xorl
add
or
out
adcb
push
jmp
cs
cmpsl
inc
or
lods
js
sub
xchg
dec
shlb
loop
stc
ret
jle
pop
rcr
sbb
mov
jl
filds
jecxz
push
pop
je
inc
pop
pop
int3
pop
movsl
pushf
and
pop
mulb
es
sub
addr16
lahf
mov
imulb
repnz
xchg
push
add
movsb
xorb
pop
leave
xchg
bound
unpckhps
lret
mov
lahf
add
push
pop
push
daa
dec
push
jne
cmp
cmp
fbld
imul
xchg
xchg
jo
mov
push
ljmp
push
sub
daa
mov
test
mov
test
dec
mov
or
stos
test
sahf
scas
inc
xor
rcrb
in
push
cmp
sub
aaa
xchg
mov
aam
in
push
xorb
call
mov
xchg
jl
sub
pushf
ljmp
adc
fbld
dec
mov
sub
lcall
int3
addr16
imul
imul
or
popl
pop
cmp
int3
mov
lock
out
repz
js
call
adc
push
ret
sbbb
mov
jp
xchg
mov
insb
xchg
popl
inc
jnp
mov
popa
push
jbe
out
inc
push
aas
sbb
push
xchg
fstpl
lock
lods
movsb
sub
xchg
add
in
adc
negl
cmpsb
cmp
pop
jmp
nop
xlat
or
in
icebp
push
mov
dec
lock
push
test
add
xchg
mov
add
push
sbb
mov
push
out
push
fdivrp
loope
cmp
add
stc
xchg
inc
xor
sti
push
xchg
mull
jmp
fwait
adc
mov
and
mov
cmpsl
addr16
insb
xlat
xchg
cmpb
cs
gs
jo
lret
mov
enter
inc
and
cld
adc
fcomps
inc
xchg
pushf
out
sub
ja
sahf
inc
sbb
adc
cwtl
lods
xor
cmp
pop
jb
loope
pop
sub
out
ror
and
fdivs
sub
addr16
mov
xchg
stos
inc
fs
mov
xor
mov
pop
push
cmpsb
dec
sbb
pop
xchg
and
and
sbb
movl
and
sarb
shr
push
out
and
pop
mov
or
or
mov
out
lret
sahf
cmpsb
lcall
cmp
push
jns
mov
inc
bound
xlat
adc
or
test
repz
insl
divl
roll
loop
scas
pop
ret
dec
push
cmc
push
pop
xor
jb
dec
mov
dec
jmp
xor
ds
lret
add
adc
fwait
jae
mov
cld
jb
adc
mov
out
adc
in
adc
pop
adc
fucomip
and
addr16
adc
imul
mov
sbbl
cmp
lahf
mov
fdivs
stos
sarl
or
or
pushw
mov
daa
inc
mov
add
fmull
pop
pop
jno
inc
int3
std
popa
push
loope
aas
repz
int
mov
addl
stos
cmp
dec
imul
imul
pushf
outsl
loope
scas
jns
add
stos
into
mov
inc
sbb
mov
lcall
mov
add
mov
pop
lds
aaa
jle
fs
aam
rcrb
and
mov
add
int
ds
jne
mov
and
loopne
xor
mov
jne
lcall
in
adc
xor
daa
mov
arpl
enter
lahf
inc
stos
pop
in
test
jecxz
adc
fwait
mov
pop
or
popa
lret
xchg
sti
xor
mov
outsl
rcl
pop
xchg
scas
nop
mov
out
je
inc
inc
cld
fsubl
call
or
movsb
cmp
xchg
pop
hlt
mov
addb
push
cs
fucomi
cmc
mov
and
add
dec
mov
outsl
mov
and
or
popa
fsubrl
mov
jnp
into
in
push
sbb
lret
cmp
movsb
xchg
test
push
outsb
jns
mov
addr16
mov
mov
xchg
fmulp
lret
xchg
push
jp
ret
movsl
jge
jecxz
adc
mov
mov
je
push
jns
mov
std
ljmp
push
out
xor
mov
pop
shll
rolb
mov
in
xor
outsl
sbb
test
les
les
cmp
add
std
or
push
add
outsl
cli
lahf
arpl
xchg
loopne
xor
sti
or
dec
nop
push
jbe
aad
add
ret
aam
sbb
xchg
jbe
push
lea
xor
cmp
jle
data16
ljmp
stos
dec
pop
pop
insl
dec
cltd
jecxz
dec
fisttpll
jp
shrl
pop
jp
loope
mov
sbb
push
adc
dec
push
mov
add
dec
or
inc
jl
jmp
or
ljmp
fiadds
push
sbbb
xchg
push
inc
out
push
insb
insb
in
bound
jl
mov
arpl
lahf
daa
mov
js
pop
movsb
and
xchg
ss
xchg
cmp
fdivrs
jne
and
testb
or
les
dec
adc
insb
outsl
sahf
imul
jle
std
cmp
arpl
xlat
aad
mov
mov
movsb
sbb
fs
insl
add
leave
sbb
and
sbb
scas
movsb
mov
sub
loope
push
adc
xchg
sbb
pop
jp
dec
loop
push
or
cmp
and
sub
lods
cmc
add
mov
repnz
test
mov
movsl
ljmp
add
scas
fwait
sub
push
fnstcw
je
sbb
push
push
aam
push
js
xchg
pop
bound
fchs
out
test
das
push
and
mov
or
jp
mov
imull
rorl
jb
or
and
out
xchg
jle
mov
push
mov
and
scas
ljmp
sbb
loop
mov
divb
push
insb
jl
inc
adc
cltd
out
push
pop
cmp
pushf
fdivl
sub
cwtl
adc
inc
cmp
out
imul
and
lea
in
cld
lods
std
in
pop
cmpb
xchg
jmp
and
xor
dec
aaa
add
pop
test
mov
jo
mov
lahf
push
int
shrb
int3
fxch
mov
lcall
sub
sbb
pop
insl
dec
test
pusha
jmp
lock
xchg
mov
pop
mov
sub
or
roll
jb
jl
adc
aas
stc
jo
mov
and
xchg
movsl
ret
aas
cmp
pop
mov
or
inc
push
jmp
lret
orl
adc
cli
lock
mov
fdivrs
push
insb
sbb
in
mov
lods
pop
mov
push
repz
sbb
adc
lret
jbe
xchg
jae
arpl
dec
and
pusha
pop
outsb
mov
loope
cmp
jle,pt
xchg
sbb
andb
lds
jmp
push
in
push
dec
fldenv
pop
ret
mov
aaa
jbe
into
or
mov
mov
leave
sbb
ret
roll
cmp
mov
insl
and
dec
push
ja
push
cmp
push
or
jecxz
loopne
frstpm(287
gs
fs
xchg
mov
inc
lcall
ds
insl
mov
push
and
sbb
add
pop
cwtl
xchg
mov
aam
push
xor
test
ret
fsubrl
jge
push
in
and
rcll
mov
xor
sti
jae
mov
lret
das
cmpsb
in
sub
xchg
xchg
aam
xchg
jo
fiadds
add
aam
push
push
scas
lods
pushf
shrb
call
cmp
iret
jge
fildll
insl
and
mov
sub
into
xor
cmp
jnp
stos
xor
imul
adc
xor
jp
test
fisubl
sbb
int3
out
xchg
imul
jge
sar
fadd
ret
adc
loop
sub
sub
aaa
and
jmp
mov
es
sub
pushf
cmp
pop
pop
les
or
mov
mov
xlat
fdiv
xor
xor
mov
jle
and
jge
sbb
loope
lea
sub
inc
mov
lahf
inc
cmc
mov
out
xor
ds
mov
cld
outsb
loop
mov
cmp
xchg
mov
push
push
push
mov
insb
push
dec
cmc
mov
adc
sbb
and
mov
lret
push
xor
rol
jl
xor
inc
or
pop
lret
rcl
mov
test
pop
mov
jno
fisttps
mov
pop
push
mov
mov
push
and
xchg
das
enter
rolb
ret
add
dec
scas
lods
push
lret
xlat
popl
pop
and
daa
pop
push
pop
sub
jmp
add
int3
mov
pop
subl
test
stos
fwait
push
movsl
fistl
mov
ljmp
push
cmpsb
adc
adc
inc
push
jne
jns
lds
mov
cld
inc
cltd
gs
pop
sbbl
test
fadd
jbe
pop
arpl
jge
testb
fdivrp
loop
adcl
mov
jbe
inc
pop
xor
addl
pusha
or
pop
lods
out
stos
mov
sub
stos
xchg
xchg
pusha
bound
add
or
adc
push
rcrb
adcb
sub
scas
mov
rclb
fwait
mov
fsts
jae
rclb
pop
pop
pop
das
or
mov
ja
sti
mov
lret
pop
pop
lods
and
pop
fstpl
xor
pushf
in
xchg
nop
movsl
sbb
adc
fucomp
ds
push
movsl
mov
xor
scas
xchg
pushf
es
jb
jmp
mov
fninit
push
push
and
sti
mov
inc
movsb
add
mov
pop
les
sbb
enter
jg
inc
into
and
dec
fwait
cmp
out
ja
mov
xchg
test
mov
sub
xlat
sub
pop
jmp
sbb
stos
popa
adc
cmp
test
and
adc
push
mov
ja
dec
push
or
fsts
mov
push
ja
sub
gs
inc
movsb
jmp
test
jne
sbb
jp
aad
jae
xlat
iret
lcall
lea
mov
fxch
mov
dec
popf
adc
shr
outsb
das
inc
and
adc
shl
rcrb
lea
mov
adc
out
imul
push
jne
in
inc
enter
lods
into
and
ss
pusha
push
push
mov
mov
roll
clc
mov
ljmp
roll
add
cld
jecxz
jns
test
sahf
ror
jg
cmc
fisubs
jae
mov
dec
imul
lahf
ljmp
scas
and
mov
push
cmpsb
je
add
les
pop
stos
loopne
dec
push
dec
and
fs
jmp
or
fdivrp
in
rcrb
into
popf
je
sbb
aas
and
xchg
lods
push
popa
nop
in
js
pop
fcompl
mov
jecxz
sbb
dec
xor
cmc
repz
and
out
negb
ds
mul
xor
lahf
adc
jle
in
xor
out
and
shrb
sar
and
jecxz
cltd
sbb
adcl
xor
lea
xor
jg
xchg
cmp
sub
js
data16
cmp
imul
pop
and
jle
fs
inc
sbb
inc
test
fcmovnu
mov
std
push
test
cmp
inc
and
mov
xor
jl
mov
out
xor
fnstenv
lock
mov
pusha
ret
mov
xor
cmc
cwtl
sub
adc
inc
mov
xor
ret
and
xor
in
jae
xor
and
lret
or
imul
imul
cs
jne
xchg
or
add
add
sbbl
xor
nop
sbb
pusha
or
in
or
push
xor
outsb
and
loope
dec
fsts
fucomp
loope
sub
clc
jnp
add
stc
dec
pop
dec
mov
sbb
cmc
sub
dec
mov
pop
sub
dec
ja
push
pop
insb
dec
pop
pop
mov
movsb
sbb
or
sub
jg
or
mov
pop
fildl
inc
imul
ds
xor
out
cs
cld
push
in
sarb
mov
ljmp
cmp
std
imul
out
pop
jp
dec
sbb
ret
inc
or
jno
xor
data16
stc
lahf
and
sti
leave
push
push
stos
mov
sub
mov
push
xchg
jb
mov
mov
lret
push
inc
push
hlt
sarl
pop
xlat
pop
loopne
leave
cld
cmp
add
adc
xor
jnp
jno
inc
add
scas
addr16
ds
inc
int
ret
mov
aaa
in
push
outsl
icebp
lds
out
adc
stos
push
dec
jl
fstpl
out
int3
push
rorl
repz
pop
pop
pushf
xor
dec
incl
pop
push
loop
movsb
cwtl
jmp
push
arpl
std
add
loope
ja
nop
jle
add
fstl
inc
lcall
sahf
js
ja
ja
pop
mov
inc
mov
push
dec
popa
add
inc
jae
lock
shlb
or
je
ds
je
jmp
scas
loope
gs
imul
mov
push
bound
scas
and
inc
popl
leave
dec
mov
fwait
mov
mov
jge
movsl
inc
mov
daa
loop
mov
in
xchg
inc
test
test
enter
xchg
cmp
jl
jbe
icebp
test
inc
inc
imul
inc
subb
movsl
jae
fildl
jmp
adc
push
cmp
mov
and
jbe
mov
mov
pop
lock
out
mov
pusha
arpl
lcall
fs
addr16
popa
sub
xchg
jmp
and
xchg
test
mov
shlb
repnz
adc
lahf
push
gs
out
adc
xor
xor
and
adc
mov
add
jb
mov
test
loope
add
js
sub
and
adc
and
add
jo
or
or
es
sub
xchg
into
sub
inc
pop
xor
mov
push
in
xchg
popa
add
fstps
repnz
lea
repz
cli
adc
mov
pop
dec
aam
or
out
jo
push
call
push
movsb
and
mov
mov
pop
lcall
xor
test
sub
fadd
icebp
cmp
adc
xchg
cli
mov
cwtl
xchg
sbb
lods
jmp
loopne
jmp
sbb
pop
cmpsb
or
jle
mov
out
jmp
push
adc
add
repz
pushf
mov
dec
adc
ror
cmp
push
add
test
add
fs
lock
push
pop
mov
pop
mov
ret
aaa
outsb
xor
repz
mov
push
mov
and
cmp
cltd
rcl
sub
or
int
mov
popf
mov
jmp
lret
je
and
mov
rclb
or
in
sbb
adc
stos
aad
adc
push
inc
outsl
mov
lcall
inc
mov
inc
stos
xchg
ss
movsl
call
ret
shlb
imul
jae
int3
ds
dec
pop
push
cwtl
push
push
out
je
xor
pusha
mov
jne
mov
leave
insb
inc
push
jns
int
movsl
mov
jns
pop
xor
jmp
shl
sub
rolb
inc
inc
cmp
push
lea
mov
jg
aaa
mov
ja
xor
inc
fsubrp
clc
les
xor
repz
push
loope
mov
push
mov
dec
push
pmullw
mov
repz
popa
push
test
mov
pop
outsb
adc
sahf
sbb
sahf
sbb
fwait
int
xor
pop
je
xchg
xchg
rcrb
cwtl
seta
cltd
adc
clc
xchg
popf
pop
std
sti
mov
and
mov
int
out
adc
mov
push
jl
xchg
call
jno
mov
inc
je
scas
xor
shl
push
push
jae
loop
in
push
xchg
mov
call
add
cmp
xor
sbb
mov
popf
xchg
daa
adc
repz
pop
ret
enter
mov
push
insl
pop
loop
les
add
mov
dec
loop
inc
xchg
data16
or
xchg
nop
or
ds
jmp
xchg
or
push
xor
inc
in
sbbb
mov
bound
xchg
scas
pusha
mov
cmpsb
add
xlat
popa
gs
or
push
sbbb
out
idivb
mov
xchg
cmovo
xchg
mov
jle
and
mov
xor
in
jmp
add
psubd
enter
pop
xor
or
mov
pop
xor
mov
mov
pop
xor
psllq
in
mov
dec
xchg
test
pop
cli
jo
repz
add
rolb
jae
dec
lahf
in
arpl
nop
dec
clc
sub
in
xchg
mov
lahf
xchg
pop
sbb
pushaw
test
pop
push
xlat
lahf
jmp
ja
dec
cltd
add
mov
das
jmp
mov
rclb
mov
push
jbe
push
sahf
or
cmp
jg
sub
pop
lcall
fnstenv
stos
push
pop
mov
scas
jp
mov
fisttps
scas
insl
shrl
cld
mov
mov
ljmp
test
mov
push
inc
outsl
sbb
adc
cmp
test
ficompl
adc
aaa
ret
mov
xchg
test
add
pop
pop
lret
add
sbb
mov
inc
std
adc
dec
mov
xor
jbe
test
push
out
aam
movsb
clc
adc
rcll
nop
cmpsl
sub
inc
lret
daa
sbb
fcmovne
mov
movsb
mov
idivb
cmpsb
es
cli
lods
and
add
mov
push
aas
movsl
jecxz
data16
xchg
or
vmptrst
mov
bound
icebp
enter
dec
push
xchg
inc
push
sub
daa
testl
cmp
jge
push
stos
and
enter
mov
jns
mov
sub
or
ret
dec
bound
lahf
stos
lds
inc
xchg
pop
les
cmpb
testl
loopne
arpl
insl
aam
xor
jo
xor
lret
lds
js
pop
or
ss
out
fistl
jo
into
mov
push
sbb
pop
mov
stc
push
jnp
dec
or
imul
js
fidivl
add
mov
adc
jno
add
out
clc
mov
mov
push
mov
mov
and
fistps
mov
inc
and
or
push
push
push
loope
mov
jle
pop
jge
ret
and
or
movsb
push
push
std
or
sbb
push
jecxz
pop
insl
ret
mov
sbb
pop
xchg
notl
xor
test
mov
subb
lock
jl
cmp
cmpl
dec
les
mov
jne,pn
xorb
adc
das
popa
and
cmp
dec
jno
dec
je
jbe
xor
pop
enter
shl
cmp
shrb
arpl
mov
mov
pop
mov
insl
xor
gs
cmpsb
add
inc
into
fs
mov
mov
pushf
dec
or
push
push
jno
loop
clc
icebp
mov
xor
inc
xlat
movsl
adc
push
dec
out
add
mov
inc
andl
and
ret
fbstp
or
inc
mov
je
hlt
loop
aam
or
cltd
pusha
cmpsb
cld
lods
lds
fiaddl
cmp
pop
dec
data16
xchg
shld
adc
xchg
stos
xchg
mov
inc
cmp
les
icebp
lods
xchg
es
ja
or
out
fisubl
xchg
imul
push
xchg
data16
ja
push
mov
jecxz
shr
xchg
aad
mov
addr16
adc
cmpsl
rorb
mov
leave
xchg
subl
dec
push
jns
adc
jno
insb
sub
push
push
push
adc
loope
jmp
leave
arpl
ds
xchg
rcll
xchg
in
out
shr
fistps
dec
cmpsb
sahf
jns
cld
ret
jecxz
mov
lods
sbb
inc
test
push
mov
clc
dec
cmpb
aas
xchg
sbb
js
xchg
pop
inc
loopne
inc
push
out
movb
ror
adc
lret
sub
lret
xchg
adc
mov
sub
lods
stc
cmpb
movsb
xchg
cmp
inc
mov
in
mov
inc
insl
call
or
and
inc
sub
rep
aam
js
testb
ljmp
fld
mov
inc
test
repz
ja
and
fsubs
femms
push
insb
shlw
incl
mov
or
aam
insl
andl
test
les
sbb
dec
xchg
cmp
fsubs
and
sbb
hlt
mov
ret
dec
aad
push
add
xchg
test
fistpll
loope
aam
push
mov
in
es
push
ss
int
ds
cld
lahf
outsl
shrl
xor
cs
aad
adc
xor
clc
ljmp
mov
ss
mov
nop
mov
out
sbb
push
icebp
jo
adc
lret
and
sbb
xor
rclb
dec
mov
inc
cmp
andl
fiadds
stos
inc
pop
fcomi
sub
in
adc
lock
dec
sub
push
addl
shl
add
jl
or
repnz
xlat
gs
adcl
mov
add
imul
test
into
outsb
bound
rorb
and
and
cwtl
jnp
mov
xor
pop
fstl
fidivs
fstpt
cmpsl
sbb
ljmp
add
pop
add
jmp
int3
mov
cmc
or
testl
mull
ljmp
jp
int
movsb
dec
push
int3
nop
xor
fnsetpm(287
jb
icebp
mov
or
push
inc
mov
xor
cmp
daa
int3
movsb
jo
in
imul
jno
and
sub
cmp
cwtl
adc
in
sahf
mov
mov
jb
sbb
or
aas
fidivl
dec
inc
jecxz
stc
lods
mov
lods
and
daa
jmp
or
test
addr16
leave
adcl
jl
call
int
dec
xchg
mov
push
pop
adc
test
mov
pop
pop
in
push
dec
lock
jne
insl
clc
stos
test
inc
add
aam
sub
sbb
cld
xchg
mov
jge
sub
aaa
adc
cltd
jb
lock
fwait
lea
push
sub
mov
outsl
pop
jno
das
or
lahf
or
push
sbb
jge,pn
out
fistpl
sti
stos
mov
insl
insl
inc
enter
jecxz
shlb
xchg
pop
in
mov
enter
fbld
or
push
mov
mov
xchg
insb
mov
xor
push
push
test
push
mov
insb
lret
push
sub
push
or
mov
xor
push
mov
push
imul
mov
mov
in
jbe
stos
loope
repz
push
bnd
jmp
dec
out
pop
mov
scas
das
stc
fidivrl
cmpl
outsb
outsl
xchg
test
negl
xchg
jg
pop
rcrb
xor
mov
push
movsl
and
das
mov
jle
pop
fiadds
stos
sub
dec
movsl
out
mov
fbld
and
mov
or
pop
int3
mov
cmp
xchg
mov
jg
jbe
mov
fnsave
add
cltd
push
xor
xor
xor
mov
dec
lock
and
dec
mov
jge
ss
jne
jmp
outsl
add
and
clc
aas
sbb
jecxz
ldmxcsr
insl
sbb
icebp
push
fwait
or
cmpl
out
mov
sbb
and
and
out
outsb
pusha
add
es
fcomps
cmpsl
push
mov
mov
ret
xchg
fisubs
jmp
push
fmulp
popf
adc
mov
pop
ja
pushf
test
lea
xchg
mov
mov
mov
mov
pusha
gs
ret
std
js
dec
push
jae
push
xlat
sbbl
loopne
jae
cmp
xlat
pop
in
jae
or
pop
popa
ljmp
pop
mov
frstor
loope
ret
sbb
pop
cmc
xchg
jp
test
jae
sbb
cltd
sub
mov
loopne
sbbb
push
add
lods
cld
sbb
cli
in
pop
add
jnp
push
es
in
push
cwtl
fstl
inc
push
pop
dec
out
lods
out
dec
les
sbb
ljmp
push
push
adc
jnp
ja
jg
xor
hlt
call
lock
lahf
mov
dec
inc
hlt
push
mov
cs
imul
ja
pop
insl
sub
and
fwait
dec
sub
cmp
scas
fcoml
pop
iret
aam
ja
ss
popf
fdivrp
lret
or
mov
aam
fstl
add
dec
outsl
mov
pusha
setl
pop
cmpsl
adc
cli
inc
cmpsl
ds
push
xor
enter
or
ja
mov
pop
or
mov
sbbb
inc
fwait
loopne
xorb
jno
add
inc
icebp
jae
movsl
in
inc
jmp
dec
xlat
daa
leave
cmp
dec
push
xlat
push
inc
sbb
adc
adc
das
daa
mov
lahf
inc
dec
and
dec
mov
in
daa
lods
mov
push
adc
xchg
decl
dec
cmp
je
adc
push
adc
xchg
outsl
nop
jecxz
gs
mov
mov
shlb
in
or
push
dec
mov
dec
mov
adc
mov
jns
lds
inc
jp
or
aam
fbstp
sbb
dec
push
aad
fstpt
xor
xchg
push
mov
xlat
cmp
cmp
mov
mov
push
mov
pusha
test
std
mov
stos
mov
and
push
or
dec
or
or
outsb
or
addr16
adc
shrb
mov
and
and
mov
pop
and
sub
jns
ljmp
mov
loope
xchg
ja
pop
adc
mov
icebp
loopne
ffree
xor
test
dec
sete
adc
pop
stos
shrl
pop
mov
add
mov
cmp
jg
mov
fs
pusha
push
fcmove
fnstcw
loop
xlat
fimuls
jecxz
int3
sar
dec
in
stos
scas
aas
jb
adc
add
push
and
mov
fisubrs
loope
xchg
mov
cmp
dec
ror
mov
inc
mov
roll
add
cmp
xlat
xor
xor
pop
data16
sub
and
lea
popa
out
dec
adcl
jns
sub
cwtl
sbb
cmp
shll
in
repz
jns
out
mov
outsl
sahf
mov
arpl
mov
mov
fistpl
fstpl
jno
test
in
or
int
dec
or
in
add
syscall
push
and
fwait
xchg
into
outsb
imul
push
add
mov
lret
mov
push
xchg
loop
enter
mov
and
cmpsl
mov
dec
mov
into
inc
xor
daa
jb
xor
and
andl
fadd
inc
lods
sbb
add
sub
aaa
adc
dec
lock
jmp
add
mov
jmp
nop
daa
jp
test
sbb
hlt
xchg
jne
movsb
cmp
repz
rol
xchg
pop
arpl
mov
insl
icebp
mov
in
dec
pop
sbb
mov
testb
push
adc
cmp
cmp
aam
clc
or
and
shll
jmp
rcll
inc
jl
adc
dec
push
in
iret
push
pushf
or
xchg
xchg
xchg
jg
loop
jae
or
cmc
lahf
add
stc
clc
imul
or
dec
adc
out
ret
fwait
cmp
mov
pusha
loop
aad
stos
push
into
cltd
aad
stos
sbb
jl
xchg
mov
and
inc
inc
orb
addb
or
aad
lret
jecxz
xchg
cld
outsl
jns
sbb
mov
hlt
dec
xlat
or
jb
iret
xlat
xchg
push
je
lock
test
xor
cmpb
fisttpll
or
std
mull
nop
in
rclb
jl
lock
mov
mov
and
adcl
mov
shll
testb
jns
push
leave
das
int3
das
sbb
lock
into
dec
jge
dec
shlb
pop
inc
and
imul
xlat
fwait
cmp
jb
push
pop
lea
std
sbb
repnz
psubq
push
and
mov
in
mov
and
cmp
push
inc
push
insl
leave
mov
movsl
and
aad
pop
inc
add
mov
popa
inc
incb
lret
pusha
xchg
sbb
aas
cmp
mov
xorb
dec
xor
sti
fmull
cmpsl
fists
lcall
cmp
push
in
mov
int3
in
repnz
fwait
popf
lds
es
lea
jb
pop
xor
shrl
or
je
pop
pop
mov
sbb
int
push
jmp
add
push
cltd
and
mov
ja
sbbl
xchg
insb
xchg
push
popa
xlat
rclb
add
cmpsb
fs
push
xchg
push
imul
mov
lret
cmp
fildl
mov
nop
lcall
shl
dec
add
pop
in
push
add
jecxz
aad
push
lods
dec
aas
jecxz
sub
jmp
cmp
and
dec
in
dec
jns
dec
mov
ss
or
fcmovb
mov
pop
aam
cwtl
push
movsl
shlb
mov
nop
xchg
shll
gs
push
aad
xchg
into
xchg
sub
pop
pop
sub
dec
rolb
je
mov
or
or
adc
jae
push
mov
lods
daa
sti
adc
enter
outsb
and
mov
mov
push
push
lods
mov
incl
scas
dec
loope
push
in
mov
xor
and
roll
pushf
jns
xor
xchg
leave
cs
movsb
in
into
dec
push
xchg
adc
je
mov
subl
pop
std
adc
adc
sbb
xor
mov
je
pop
lret
mov
test
rorl
aad
daa
inc
test
jnp
shlb
test
dec
adcl
cwtl
jge
cmp
adcb
flds
xor
fs
mov
jns
movsl
sbb
test
sbb
push
out
shll
leave
jmp
mov
dec
clc
jle
aad
jno
fimuls
mov
leave
out
adc
jnp
std
xchg
orl
mov
cmpsb
or
int3
push
dec
jno
sub
sbb
add
sbb
in
sbb
mov
xchg
dec
inc
fidivrl
dec
xchg
lea
or
adc
testl
xor
rcrb
popf
mov
pop
add
fldt
sti
rolb
nop
dec
dec
jle
out
bound
add
repnz
mov
jecxz
inc
pop
cwtl
xchg
mov
adc
push
dec
je
jmp
xchg
out
dec
inc
inc
ss
xlat
xor
into
sub
arpl
jo
pop
mov
inc
jle
dec
pusha
xor
lods
xor
add
cmpl
pop
cmp
sbb
lock
std
pop
scas
push
add
mov
nop
pusha
and
push
nop
pop
aas
inc
mov
out
mov
adc
fwait
pop
jle
jne
cmc
pop
pushf
into
jae
xor
push
sub
aad
fwait
add
aad
mov
ret
pop
loop
nop
movsl
mov
jle
xor
pop
adc
sub
xchg
loope
and
push
xor
pop
adc
xor
cli
fs
xor
push
push
in
movsl
repnz
idiv
cmp
dec
mov
push
adc
inc
cmp
and
xorb
movsl
xor
sub
lds
div
mov
insb
cld
pminub
push
dec
jle
rolb
or
cmp
cmpb
in
sub
xchg
dec
mov
pop
stos
inc
mov
iret
inc
xor
xchg
cld
or
lcall
sub
test
pop
rcll
mov
into
mov
sbb
in
jnp
arpl
daa
hlt
or
int
rcrb
pop
add
sbb
xchg
loope
push
dec
das
sub
xchg
inc
mov
push
add
push
frstor
icebp
xor
mov
jg
cmp
xchg
dec
insl
js
fs
mov
cmp
lret
stos
data16
nop
xchg
inc
imul
ds
fistpll
test
mov
inc
push
mov
fcoml
adc
push
out
cmp
mov
mov
sbb
mov
ljmp
mov
jecxz
pcmpeqb
es
repnz
enter
mov
out
pop
cmp
jo
xchg
inc
jl
jnp
cmc
add
cmp
mov
les
and
loopne
aaa
xchg
ss
mov
or
scas
ror
jmp
stc
sub
push
cmpb
lcall
adc
sbb
sti
fcomps
shlb
cmp
into
sarb
andb
jmp
ret
xchg
cmp
fdivs
lahf
inc
rorl
js
sub
xchg
call
or
cltd
ret
inc
sahf
mov
ja
cld
fists
je
adc
pop
sbb
jb
sub
mov
in
lret
push
mov
mov
cmpsl
cmc
sub
dec
iret
dec
jo
inc
sahf
or
and
pop
leave
xor
fscale
cmpsl
lahf
in
pop
mov
dec
dec
mov
addb
sbbb
fimull
scas
popa
je
lea
sbb
ret
cs
mov
jae
or
sub
outsl
jnp
call
outsl
lret
mov
cmpsb
jne
inc
js
mov
je
inc
or
iret
add
std
lock
cmp
inc
filds
dec
test
mov
ja
lret
inc
les
push
push
pushf
mov
or
rcrb
pop
ret
cmp
cmc
jmp
jge
repnz
mov
mov
push
mov
je
cwtl
flds
mov
subl
mov
sub
mov
and
dec
push
imul
jne
xchg
pop
or
sar
push
aam
int
nop
nop
jl
cmp
add
rclb
int
sbb
mov
pop
pop
dec
push
sbb
out
jae
adc
jnp
cs
loope
test
arpl
lock
je
repnz
movsb
or
ja,pn
push
xlat
sti
mov
push
or
inc
mov
pop
push
outsl
std
add
sbb
jmp
std
dec
jae
xchg
cmp
cmpsl
jecxz
adc
mov
jge
and
test
mov
pop
and
ljmp
cmp
jmp
bound
xor
sbb
inc
les
loopne
adc
mov
in
inc
enter
or
mov
in
sbb
jle
shrl
cwtl
sbb
and
and
daa
fwait
or
add
fiadds
lods
cmp
jl
and
push
or
pminub
pop
sbb
std
push
push
adc
daa
mov
mov
repz
test
or
aad
pop
sti
cmp
clc
icebp
test
jmp
sub
mov
xlat
push
fs
leave
sbb
xchg
cwtl
aad
mov
mov
cmp
nop
cmpsb
mov
std
int
push
mov
es
jnp
pusha
cltd
cmpsl
mov
notl
addb
data16
out
imul
sub
lcall
test
scas
out
xchg
push
xchg
mov
mov
sub
mov
loopne
sahf
push
or
pop
idivb
sbb
aad
in
and
lret
mov
mov
sti
jp
fs
fcmovnu
enter
pop
ds
lret
push
pop
test
aas
das
sub
ja
dec
mov
push
xchg
mov
lock
in
push
adc
sub
adc
clc
or
cmp
xchg
sbb
cmpsb
sbb
push
cmp
pop
lds
cmpsl
insb
adc
xchg
int3
test
mov
loope
cmp
pop
xchg
je
sbb
xor
mov
daa
jnp
mov
sub
pop
divl
mov
jbe
push
arpl
mov
arpl
push
xchg
xor
and
pusha
enter
jl
push
rorl
inc
cmp
dec
outsb
iret
add
jecxz
scas
stos
dec
sbb
fidivs
sub
cmp
cmpxchg
cmp
pop
popa
xchg
push
sub
mov
mov
mov
and
in
pushf
and
mov
stc
testb
mov
inc
jbe
fstpl
jmp
xor
mov
lcall
mov
mov
pop
aas
push
jge
and
fcompl
push
mov
pop
or
shlb
dec
ja
dec
fneni(8087
mov
or
lea
adc
cmp
mov
clc
js
dec
or
dec
aam
adc
test
push
xchg
cmp
popf
cmp
sahf
clc
push
cs
lds
into
cltd
fdivr
sub
test
hlt
xlat
xor
add
sbb
jecxz
fidivl
sbbb
and
outsl
ret
repnz
pushf
insb
rcll
decl
cmp
mov
ss
xchg
xor
sbb
lahf
inc
mov
xchg
and
push
mov
int3
insb
dec
pop
inc
lods
cmc
sbb
lds
or
dec
fisubl
imul
lds
das
test
push
insb
inc
sub
jl
iret
cli
nop
leave
pop
dec
fcmove
jns
or
out
dec
imul
cld
xor
loopne
jecxz
add
cmpsl
ret
jns
cmp
rorb
fidivs
xlat
int3
adc
add
sub
add
sarb
cltd
cmc
fildl
xor
xchg
gs
add
cmp
mov
iret
aam
jl
xchg
adc
pop
rcrl
push
or
test
and
sub
mov
out
mov
pop
js
fcomi
sahf
cmpl
inc
movsb
popl
and
xchg
hlt
test
and
push
shrb
adc
inc
cld
cmp
fiaddl
stc
arpl
stos
mov
scas
sub
insb
sub
jle
cwtl
repnz
push
movsl
cmpsb
mov
and
fimuls
or
subb
or
inc
cmpsl
sbb
cmp
ficoms
arpl
jg
pusha
addr16
aas
jp
ds
sub
xor
lods
imul
ret
in
jge
icebp
mull
lcall
pop
push
sub
pop
and
jecxz
hlt
mov
les
je
fsubl
adc
sbb
and
mov
das
cmpl
jl
or
jbe
gs
jecxz
dec
mov
ficoms
lods
cwtl
and
and
pop
cmpsl
jle
inc
pusha
xchg
xor
push
mov
jbe
mov
dec
js
imul
fmulp
or
and
cmpsb
subl
ficomps
dec
mov
imul
in
add
cmp
adc
xchg
addl
fidivrl
mov
adc
pop
pop
out
cli
push
jo
testl
mov
mov
xorl
sbb
movsb
jmp
sub
ret
stos
imul
xchg
adc
or
mov
dec
scas
dec
aad
fmull
in
les
inc
pop
aad
and
mov
icebp
mov
or
jne
jne
ds
dec
ficoms
pop
ss
adc
mov
jnp
cmp
push
adc
mov
nop
outsl
lret
mov
dec
cmpsb
notb
popa
sbb
mov
in
arpl
mov
xchg
out
rorb
mov
dec
adc
dec
xorb
stos
add
repz
push
loope
daa
test
mov
mov
xchg
push
sbb
cmp
add
sub
cwtl
mov
imul
fbld
mov
outsl
jle
arpl
mov
adc
dec
sbb
scas
and
leave
mov
xchg
cmp
inc
adc
cwtl
mov
ret
iret
jg
or
lea
and
in
xor
jnp
xchg
imul
fildll
sub
xchg
xorb
xlat
cmp
into
cmpsl
mov
jg
popf
cmp
jg
sbb
cmpsb
xor
outsb
and
mov
js
testb
add
mov
jno
ljmp
push
adc
pop
negl
xor
shrb
cmp
rep
jns
mov
cmp
andb
mov
cmpsb
imul
out
cmp
mov
ret
push
adc
clc
jae
aaa
sar
inc
push
inc
fstl
and
cmp
ret
mov
js
inc
stc
jbe
jo
mov
xor
mov
out
imul
in
dec
js
ja
dec
xor
pop
sub
loop
push
sbb
inc
mov
or
mov
dec
es
divl
loopne
stc
lock
xchg
jae
xchg
sbb
in
mov
xor
pop
push
xlat
sti
xor
test
sti
mov
in
mov
pusha
mov
mov
lret
sub
sahf
and
add
mov
mov
pop
mov
mov
loop
mov
les
andb
pop
lds
sahf
shll
sbb
scas
loop
mov
xor
sub
shll
adc
jae
mov
movsb
pop
in
adc
into
push
int3
ret
mov
mov
sahf
shll
dec
mov
pop
les
ljmp
add
jns
pop
test
mov
aaa
pop
push
mov
aas
mov
fistpl
test
inc
popf
dec
mov
xchg
and
mov
push
arpl
cwtl
and
xchg
push
mov
pusha
sub
cs
adc
cmp
loope
out
ja
jmp
das
xor
cmp
adc
scas
and
sbb
xor
mov
or
ljmp
aad
sti
pop
xchg
pop
iret
sti
sbb
xchg
ficompl
cmpsb
jp
fcoml
pop
push
and
dec
dec
lds
pop
mov
xor
xor
test
cmpsl
loop
les
push
ja
pop
push
jb
xchg
xchg
in
adc
mov
mov
test
sbbl
int
sbbl
aas
sub
insl
adc
and
jo
frstor
or
dec
outsb
enter
lods
add
js
pop
mov
dec
xor
gs
mov
jb
test
push
or
push
loop
mov
pushf
and
pop
or
cs
nop
aad
mov
xor
shll
xor
scas
scas
jecxz
add
sbb
cs
clc
jp
outsl
fsts
push
outsb
scas
ret
insl
les
pop
test
and
xchg
out
roll
mov
fildl
dec
add
test
data16
lods
divb
lods
inc
inc
das
add
mov
pop
sbb
cmpsb
mov
lock
fnstsw
xor
aad
mov
fcompl
ljmp
xchg
cmp
mov
rcrb
or
and
jp
jg
in
filds
fdivr
jno
mov
sub
adc
aas
push
loop
fcmovb
pushl
mov
daa
push
out
sbb
int3
test
sbb
mov
jns
xor
pop
sub
in
rclb
cmp
shrl
inc
aaa
test
mov
xlat
or
in
out
in
sti
jge
mov
adc
pop
xor
test
aam
shrb
and
dec
add
inc
lea
jmp
test
mov
lods
and
jmp
scas
push
js
or
arpl
push
cmp
push
push
fs
ret
rolb
dec
movsl
ss
jge
inc
push
mov
cbtw
or
sbb
jnp,pt
lods
and
into
les
notb
mov
fnstcw
adc
pop
jle
scas
xor
lret
sti
push
mov
add
xchg
mov
xchg
pop
or
push
pushf
repnz
lcall
dec
iret
push
mov
int3
outsl
popf
xchg
test
je
repnz
orb
popa
push
or
cmp
push
sbb
popf
into
mov
icebp
fistps
and
and
adc
movsb
aad
inc
int3
lcall
ss
adcb
xor
xor
ret
arpl
lret
push
stc
fmull
mov
pop
push
mov
je
aad
ficoms
into
test
test
xchg
ffree
mov
test
inc
xor
mov
pop
loop
mov
enter
inc
imul
add
and
sub
mov
and
xor
mov
aaa
dec
outsb
pop
fidivs
and
xor
xchg
lods
adc
pusha
and
es
emms
test
jg
cmp
shlb
xchg
stos
sbb
test
jb
add
push
stos
sub
mov
rep
push
fmuls
cmpl
pop
xchg
cld
or
pop
or
inc
jg
fistps
and
jo
inc
jg
fcoml
jp
cld
or
ljmp
xor
mov
enter
lret
test
lods
mov
pop
and
hlt
mov
jmp
ret
les
iret
mov
add
mov
ud2
cmp
outsl
jge
enter
sub
popf
popa
pop
sbb
mov
xchg
or
jne
jge
xchg
mov
rcrl
mov
push
test
shrb
fs
push
cmpsb
add
mov
sti
les
stc
push
and
lcall
xchg
mov
sahf
sub
add
adc
sbb
jne
movsl
or
daa
push
and
mov
or
jne
or
ret
dec
push
jl
clc
mov
jp
and
loope
jmp
jbe
inc
push
cmp
sbb
repnz
inc
insb
jmp
inc
sbb
xchg
mov
orl
int
mov
sbb
inc
lret
fldenv
add
jle
or
push
rorb
mov
ficoml
sbb
int3
inc
popa
xchg
movsl
bound
mov
das
imull
jle
mov
daa
insl
test
jbe
sub
add
sub
push
dec
shlb
repnz
push
push
shl
int
iret
pop
je
mov
out
fwait
repz
stc
out
pop
push
movsb
sub
ret
add
pop
pop
xchg
test
push
cmpsb
insb
pop
sub
stos
push
xchg
and
ret
lods
adc
aaa
mov
aad
btc
adcl
or
cmp
push
aas
repnz
xlat
xor
xor
dec
dec
mov
or
sbb
lea
into
imul
xchg
jl
out
jnp
xchg
and
push
mov
or
jno
aaa
sbb
iret
sti
fwait
sub
ret
xor
pop
mov
test
repnz
pop
cmp
xor
dec
ljmp
xchg
add
test
cmp
dec
testb
in
sar
dec
mov
push
mov
inc
push
or
adc
divl
mov
xchg
iret
jbe
xchg
mov
negb
into
insl
xor
xchg
dec
inc
call
inc
xor
mov
jo
out
out
decl
mov
xchg
xchg
orb
cli
cmpsb
sbb
lds
adcl
jne
mov
sbb
rcrl
leave
imul
inc
out
out
lods
xchg
mov
cmp
imul
sbb
or
popa
xchg
test
xchg
mov
movsl
shrb
incl
les
out
jb
mov
cmp
cmpsl
lock
jp
imul
sub
stos
es
es
sahf
xor
xchg
or
xchg
imul
push
mov
add
or
fstps
stos
dec
ja
lock
ret
outsl
mov
dec
sbb
xor
push
daa
insb
mov
push
pop
mov
adc
cmovp
inc
or
sub
roll
scas
sbb
dec
cmc
cmc
mov
xchg
std
push
xlat
leave
pcmpeqd
dec
negb
insb
lcall
roll
setp
push
sbb
mov
movsl
andb
arpl
dec
or
push
js
push
and
adc
sbb
mov
push
outsl
sub
mov
ljmp
out
scas
dec
cmpsb
nop
mov
lock
and
jle
int
dec
cs
test
add
adc
stos
and
add
ljmp
cmpsb
sbb
gs
stos
jne
scas
cli
mov
xor
fdiv
inc
lahf
stos
or
cmp
push
xchg
gs
xor
decl
fucomip
add
ficoml
add
fldenv
enter
repz
shlb
loopne
pusha
jb
push
test
xchg
fidivrs
movsb
std
arpl
aaa
sbb
imul
lock
xchg
mov
jno
ja
xchg
xchg
jecxz
jns
jecxz
scas
sbb
inc
jl
mov
inc
mov
jge
mov
cmp
pop
stc
jo
sub
enter
dec
lock
or
cmc
stos
imul
adc
sbb
jne
outsl
sub
xchg
mov
jecxz
scas
or
xchg
faddl
stos
dec
lods
lock
sbb
sbb
fcmovnb
add
enter
std
int
bound
popf
inc
icebp
mov
fldl
inc
sbb
addr16
inc
push
mov
mov
mov
nop
xchg
sbb
aaa
sbb
cmpsb
lret
jl
into
push
sbb
inc
add
push
sahf
lahf
dec
mov
cmpsl
sbbl
push
aaa
dec
xchg
testl
ror
pop
fld
sub
adc
push
imul
cltd
popf
fists
addb
subb
mov
dec
std
ja
int
cmc
les
jmp
jmp
repnz
outsl
or
pop
or
push
ss
xchg
dec
xchg
cmc
xchg
and
hlt
clc
outsl
aad
mov
adc
and
mov
dec
xor
popf
in
cmp
mov
mov
mull
adc
jo
sbb
push
mov
dec
adc
popa
lds
sub
pusha
sbb
add
inc
push
push
daa
mov
jo
jmp
push
out
lret
aad
call
pop
adc
aas
mov
inc
add
sub
jbe
sti
test
pop
into
aas
adc
aaa
jo
push
jmp
adcl
popf
in
add
cmpsl
add
pop
movsb
aad
ss
push
dec
jns
add
pop
mov
pop
mov
xchg
bound
xorl
nop
stos
ja
mov
cli
mov
dec
xor
roll
leave
sub
push
enter
subb
adc
movsb
movsb
add
aad
push
lcall
adcb
adc
sub
dec
outsb
aaa
jg
jecxz
enter
data16
mov
fimull
xor
jns
fstpl
lock
adc
pop
fldcw
inc
push
and
pop
jb
mov
cmc
mov
out
ljmp
sub
push
cld
popf
mov
xlat
imul
and
jge
and
sbb
iret
ret
cli
xchg
mov
mov
mov
push
jbe
insl
out
test
dec
adc
mov
jecxz
jae
in
lds
mov
and
add
outsl
jo
inc
xchg
insb
icebp
sbb
jge
fldenv
stc
sbb
dec
mov
mov
shrl
jns
mov
pop
and
pop
fdivrs
inc
push
jo
push
pushf
lahf
sbb
pop
rol
cwtl
xchg
loopne
outsl
mov
mov
xor
out
xor
int3
insl
mov
jp
mov
adc
jno
adc
push
mov
pop
cmp
sub
outsb
sub
nop
lock
addl
int
pusha
outsb
iret
ljmp
jmp
jge
dec
inc
and
and
xchg
jns
pop
pop
xor
mov
or
icebp
out
or
cmp
sbb
clc
insl
mov
add
sub
sub
andb
xchg
pop
incl
mov
pushf
add
ds
data16
inc
or
mov
cmpsl
mov
addb
pusha
mov
in
xor
daa
fbld
adc
outsb
pop
sahf
cltd
iret
xor
cld
xchg
xor
inc
pop
sub
xchg
push
bound
fmull
or
fidivl
xor
rolb
jmp
leave
mov
xchg
xchg
sbb
push
jo
cmc
add
fwait
sbb
lahf
sar
mov
jp
gs
dec
and
cmp
repnz
sahf
pop
xchg
and
cmpsb
mov
sub
inc
jno
jno
jg
jo
ds
outsb
push
add
lock
insl
inc
lock
mov
xchg
mov
rorl
push
cmpsb
jo
mov
add
outsl
sbb
js
pop
ror
repnz
pop
xchg
inc
push
stc
jo
out
cmp
add
and
or
sub
fwait
xchg
jl
in
lods
inc
sbb
ds
and
pushf
ja
idivl
and
loopne
jge
adc
jp
in
pushf
or
mov
stos
inc
jbe
daa
or
sub
jnp
je
jmp
mov
movhps
loop
push
lcall
xchg
push
mov
sub
jle
mov
and
shr
lds
mov
sysexit
rorb
inc
push
mov
insb
push
loopne
call
test
mov
push
movsl
jmp
adc
dec
aas
mov
pop
xor
in
dec
adc
add
mov
cmc
inc
outsl
mov
pusha
mov
mov
jns
cld
cmp
sub
call
inc
or
leave
mull
and
xchg
add
mov
test
mov
sub
cmp
adc
and
loope
and
xor
rclb
jl
idivb
pop
lcall
ss
movsb
jb
lahf
add
mov
mov
dec
fdiv
dec
mov
lahf
ljmp
cmp
inc
add
xor
cmp
loopne
es
and
jo
fwait
sub
adc
xor
jbe
fsubrp
fdiv
fisubrs
jecxz
mov
jl
ror
mov
xorb
jl
adc
cwtl
inc
sahf
mov
lahf
aas
es
gs
cmp
push
mov
push
mov
orb
popa
mov
jno
out
mov
test
out
jnp
and
mov
pop
xstore-rng
cmpsl
les
je
repnz
xor
mov
sbb
clc
xor
mov
push
add
icebp
callw
out
loopne
fwait
sbbb
xlat
adc
xchg
mov
sub
xlat
nop
aam
in
push
mov
or
jno
jmp
pop
out
or
dec
adc
push
pop
std
sub
cmp
xchg
pop
std
cmpb
mov
stc
mov
enter
lret
xlat
mov
ret
inc
out
aas
push
dec
fiadds
inc
mov
in
mov
hlt
imul
nop
cwtl
mov
pop
push
inc
push
cli
inc
xchg
sti
shll
add
and
fisubl
jle
cmp
xchg
or
fldcw
pop
outsb
lds
and
mov
adc
ds
lcall
sub
cmc
xor
sbb
mov
cwtl
sub
jno
lret
mov
imul
mov
loop
adc
leave
jo
sub
rcrl
outsl
into
sbb
and
inc
mov
lret
icebp
push
ja
lcall
sbb
ljmp
add
insb
sarl
xchg
sub
xchg
cmp
loopne
shll
clc
jge
or
fisubrl
stos
jb
inc
inc
scas
stos
mov
in
aad
adc
lock
js
subl
in
loope
iret
ss
mov
mov
adc
push
xchg
push
push
mov
lods
gs
lret
out
pushf
or
sti
fbstp
dec
test
sti
push
and
test
mov
sbbl
add
sahf
adc
int
and
loopne
add
inc
enter
out
popf
jg
out
xor
iret
cwtl
loop
xor
xchg
dec
jns
add
sub
les
sbb
out
daa
ffreep
leave
adc
sbb
sbb
push
or
mov
and
rcrb
jnp
jge
lds
insl
mov
lcall
dec
fcoml
jmp
insb
xchg
out
push
fs
add
loope
mov
cmc
and
mov
aas
xchg
mov
lea
cmp
lods
sbbl
xor
mov
lcall
xchg
mov
popa
mov
push
jl
mov
jecxz
and
push
xchg
push
popf
jb
adc
mov
inc
and
xlat
inc
adc
cwtl
cmpsb
and
enter
outsl
sub
jge
jmp
jp
mov
std
jecxz
scas
adc
cmp
dec
pop
xor
out
ror
movsb
aas
sahf
insb
repnz
dec
out
sub
push
pusha
or
int
add
dec
pop
aas
es
push
das
jmp
or
sbb
sbb
push
bound
out
je
cmpsl
outsl
mov
mov
test
or
icebp
leave
test
nop
loope
les
xchg
fnstcw
inc
push
js
dec
mov
int
in
call
mov
cli
dec
rcrb
mov
mov
or
pop
and
mov
inc
fucomi
aad
cmc
add
idivb
dec
mov
dec
xchg
insl
push
std
xchg
mov
hlt
pop
jnp
and
enter
push
xlat
push
push
js
pop
or
stc
and
aad
jae
lea
mov
in
loope
sub
loopne
aaa
testl
pop
test
xlat
mov
mov
jno
sbb
rorb
pop
iret
sbb
adc
mov
sub
inc
loope
cltd
xor
adc
xor
out
loop
and
test
jne
in
das
adc
adc
push
rcr
jl
dec
sub
test
fadd
pop
mov
pop
shr
mov
in
xor
push
sbb
adc
mov
dec
mov
cmp
scas
int3
inc
aaa
les
nop
dec
lret
negb
test
shlb
enter
xchg
lods
stc
mov
xchg
mov
push
roll
adc
lret
fisubrs
stc
testb
mov
cmp
xchg
scas
test
repz
mov
mov
pop
add
stos
popf
mov
push
outsl
push
out
ja,pt
stos
or
das
jl
aaa
fildl
mov
pop
idivl
loop
int
cs
stos
mov
rcrl
scas
cmpsl
cmp
fcoml
lret
nop
imul
mov
sti
das
rorb
mov
js
insb
jnp
dec
mov
iret
xchg
cli
mov
sbb
shlb
dec
jbe
cli
fcom
mov
adc
insl
dec
jne
sbb
insl
cs
jmp
out
jnp
outsb
lahf
xchg
xor
aaa
sarb
je
or
test
sarl
ds
and
or
and
mov
gs
shll
hlt
je
mov
out
push
jg
xchg
into
mov
repz
add
push
mov
aaa
stos
cmp
imul
or
leave
shl
cltd
cmp
and
cmpb
push
cmpsb
mov
pop
inc
sub
andl
mov
mov
and
jbe
push
sbb
mov
daa
rolb
ja
mov
jns
xor
dec
js
bound
jae
push
loop
adc
aaa
data16
inc
and
pop
dec
enter
js
push
ret
inc
push
movsb
gs
mov
cli
dec
sbb
ds
jle
cmp
test
and
cld
daa
out
enter
dec
repnz
std
push
sub
adc
lods
pop
fldenv
enter
imul
push
mov
out
lods
test
cmp
hlt
and
inc
gs
adc
gs
sti
sub
mov
mov
es
repz
ljmp
cmpsb
ret
dec
inc
xchg
ret
fs
pop
push
cmp
arpl
and
push
out
push
insb
jne
pop
scas
xchg
rclb
dec
int
jp
mov
loopne
jns
insb
rclb
lods
cmp
xor
add
das
jecxz
adc
sbb
add
out
icebp
popf
jbe
sbb
jp
push
add
loope
fldenv
iret
inc
int
sbb
or
int
int
sbb
into
jo
ja
das
inc
jecxz
leave
mov
inc
or
adcl
fstpt
push
jl
fstl
lret
mov
xchg
mov
cmp
mov
jns
cmp
xor
mov
cs
dec
and
js
pop
cs
lds
cwtl
rol
and
mov
push
mov
cmp
roll
and
clc
push
jbe
je
adc
sub
xor
repnz
rcrl
mov
cmp
mov
test
pop
cmc
mov
inc
out
popa
es
stos
mov
cli
or
sbb
mov
xchg
xor
sbb
push
adc
mov
push
pop
fsubl
and
ja
fs
and
test
lock
mov
ret
push
mov
cmc
pop
push
push
mov
pop
inc
jle
shr
nop
loope
add
push
in
xchg
pop
imul
loope
int
pop
xor
adc
mov
fisubrs
xchg
add
cmp
shll
jno
xchg
dec
movsb
push
cmp
cmpsl
mov
cmp
test
ret
in
dec
mov
repz
stc
sbb
push
mov
fisttpl
add
ret
in
cmp
push
hlt
jg
jmp
arpl
mov
or
cmp
jne
cmp
lahf
pop
test
bound
xchg
xor
xchg
xchg
dec
test
xchg
xorl
xchg
sbb
inc
adc
nop
dec
daa
mov
pop
lahf
shrl
push
mov
cmp
movsb
in
fistpl
ja
shll
mov
movsl
push
scas
fwait
and
arpl
stc
scas
inc
xor
mov
inc
js
add
add
sub
xchg
jmp
xor
xor
icebp
push
into
lods
push
jbe
sbb
aam
mov
aas
adc
jmp
mov
xchg
scas
fiadds
leave
fcomps
jecxz
and
dec
outsb
aaa
int
test
sub
sahf
jnp
shll
xchg
fwait
loope
jle
loopne
inc
imulb
cmpsl
lds
ror
rcll
pop
inc
lock
out
xchg
xor
cmpsb
mov
jle
and
jb
in
imul
sbb
push
cli
popa
mov
ljmp
shll
push
dec
jge
lea
push
lcall
aaa
pop
or
test
ds
mov
mov
push
aam
in
xchg
js
stos
adc
mov
mov
xor
inc
or
dec
clc
mov
iret
jg
out
cmp
iret
pop
inc
dec
cmc
movl
sub
inc
pop
or
sbb
pop
iret
push
mov
jo
adc
lahf
mov
in
push
ret
dec
pop
mov
filds
in
fists
mov
push
out
andl
inc
addb
jne
inc
add
and
pop
test
fnstenv
addr16
in
xchg
jne
push
test
lods
in
stc
outsl
fildl
aas
scas
push
and
jo
hlt
out
pop
adc
popa
add
sbb
pusha
mov
rcr
orb
scas
inc
loopne
ja
outsl
scas
pop
div
or
push
sbb
cld
stc
loopne
push
cli
mov
xchg
in
ret
in
jns
and
scas
and
sbb
add
push
pop
push
add
push
jae
push
inc
mov
aad
and
pop
loope
in
scas
xor
pop
xchg
mov
in
leave
repz
cli
jge
jmp
mov
pop
sar
cmp
or
inc
icebp
out
sub
push
pop
push
outsb
pop
dec
shrb
xor
dec
cmc
es
mov
mov
inc
gs
mov
cmp
xor
das
out
inc
pop
and
dec
imulb
push
mov
call
outsb
dec
dec
add
ss
shll
or
loopne
mov
jne
jmp
pop
sahf
stc
fsubs
pop
cltd
loopne
jbe
push
inc
xor
cmp
leave
mov
imul
mov
mov
mov
dec
mov
test
nop
pop
mov
cwtl
push
cmp
nop
dec
add
mov
lea
lds
cs
push
add
hlt
rcrl
push
out
ja
cmp
add
movsl
div
jbe
test
xchg
adc
divw
cld
hlt
mov
jp
add
adc
mov
out
add
add
jb
pop
push
adc
and
ret
orb
cmp
or
mov
sbbb
mov
cltd
push
jg
in
mov
lods
lret
lret
sub
add
xor
into
cld
sub
cltd
stos
test
mov
xchg
sbb
hlt
adc
js
fwait
in
js
rcl
push
jmp
jo
dec
inc
sub
fisubs
stc
into
and
mov
and
sbb
scas
nop
lret
adc
add
inc
and
and
sbb
loop
clc
jno
add
pop
push
sbb
sub
mov
shll
jb
stos
sub
mov
pushf
ja
inc
xchg
mov
inc
jmp
pop
data16
push
mov
sub
dec
mov
imul
pop
out
xchg
jbe
fsubl
scas
lret
test
cmp
daa
add
mov
pop
cltd
inc
std
and
and
or
ficomps
ret
mov
sub
lret
jbe
add
or
ds
in
test
lret
aaa
add
aaa
lds
sbbb
imul
mov
pusha
and
push
lahf
mov
iret
lahf
cwtl
shll
and
cmp
mov
jecxz
cmp
adc
mov
icebp
cld
loope,pt
mov
sbb
cmp
notl
mov
sbb
out
mov
in
jg
repz
loopne
gs
repnz
mov
adc
repz
pop
lock
adc
je
daa
jno
add
adc
lods
nop
mov
test
pusha
mov
xchg
popf
pusha
inc
repnz
outsl
sub
cmpsl
or
rcll
xchg
loop
mov
cld
rolb
sbbl
mov
xor
mov
mov
dec
icebp
xor
cli
jle
and
lret
loope
push
mov
sbb
or
cld
sti
pop
and
push
sbb
dec
jmp
push
and
popa
push
adcb
xor
xchg
push
loop
aas
test
fcoml
call
jmp
loopne
iret
ljmp
xor
je
mov
sub
enter
push
dec
sbb
aas
popf
pop
pop
pop
push
movsl
xor
nop
into
jae
pop
fwait
notb
push
loope
mov
nop
daa
cmp
mov
adc
fcmovnb
sbb
dec
rcl
iret
aaa
popf
adc
push
mov
dec
and
xchg
stc
test
cltd
ss
xor
fnstsw
cld
push
inc
outsl
lret
rorl
add
xor
testb
lret
lds
imul
dec
mov
out
mov
iret
or
fs
adc
shrl
sub
fwait
popa
pop
mull
insb
out
in
cs
lea
jns
sti
es
lahf
add
inc
out
pop
add
outsl
jecxz
movq
scas
push
mov
scas
adc
mov
dec
sti
cli
mov
movsl
adc
adc
stos
bound
aad
test
int
push
or
xchg
sti
in
and
sbb
jp
mov
and
jecxz
fndisi(8087
scas
cmp
repz
mov
cmc
add
adc
call
into
or
cmc
mov
sbb
out
pop
inc
es
inc
into
loop
pop
pusha
int3
enter
fcompl
pop
in
rcrb
addl
pop
scas
movsl
mov
jno
add
cmpsb
pop
out
adc
mov
shrl
scas
shlb
out
dec
xor
or
adc
adc
mov
and
lock
and
aad
stc
add
cli
rcll
insb
adc
mov
jmp
repnz
mov
pop
add
fidivrl
in
pop
mov
call
push
and
ja
sbb
out
out
xor
cmp
inc
nop
cmpsl
test
mov
std
add
aam
es
xchg
xor
pushf
mov
push
mov
lret
mov
cltd
and
dec
cmp
add
mov
pop
outsl
ljmp
les
jecxz
mov
lahf
fs
xor
jo,pt
test
push
gs
lahf
das
xchg
dec
cltd
sub
addl
sub
lret
sub
testb
clc
xor
push
push
and
add
dec
or
cld
das
ljmp
mov
subl
mov
dec
out
in
xor
add
int
out
fimull
sub
xchg
fcomps
out
push
push
xor
mov
cs
xchg
sarw
cmp
outsl
mov
out
pop
mov
lock
incl
repz
aad
fidivs
jbe
cmpsb
gs
cmp
push
mov
cmp
scas
stos
lret
mov
push
xchg
add
push
inc
mov
mov
imull
xor
sbb
incb
aas
repz
mov
aam
mov
shrb
push
sub
lahf
es
jnp
xchg
add
mov
mov
lahf
in
in
mov
inc
lds
imul
fcomps
mov
outsl
mov
xchg
cmp
jne
adc
in
pushf
in
sbb
nop
mov
mov
aas
and
leave
push
das
rcr
cli
jns
nop
sti
lods
sti
pop
jle
cmp
mov
bound
adc
call
imul
and
fwait
or
add
push
test
aad
and
mov
add
and
js
lock
push
or
xchg
pop
ret
xchg
pop
icebp
cltd
or
jmp
lock
mov
mov
cld
mov
lahf
insb
aaa
jmp
mov
xchg
mov
aad
mov
mov
xchg
push
rolb
jne
popf
out
or
sbb
sub
int
push
dec
insb
xchg
and
push
lds
int3
jns
je
mov
pusha
notl
ja
sbb
sbb
dec
or
mov
cmp
cmc
idiv
xchg
xlat
insl
jb
mov
cwtl
repnz
pop
adc
in
sbb
xchg
push
in
mov
fsqrt
lods
inc
jecxz
rol
repnz
pop
jno
push
jns
fst
dec
stc
cmpsb
das
xchg
loop
nop
lret
cs
loope
sbb
jmp
or
loopne
mov
frstor
push
inc
inc
mov
movsl
dec
js
int3
ficomps
inc
xchg
push
aas
jp
roll
retw
bound
fdivr
jb
jmp
bound
aas
mov
sbb
cmp
xchg
jbe
or
sti
sbb
xor
pop
rcll
out
xchg
int3
pop
popf
out
sbb
mov
pusha
test
gs
mov
cmp
rcll
push
fsubs
cmp
mov
cmp
ret
mov
jl
mov
cmpsb
mov
mov
dec
pop
cld
call
jnp
mov
stos
sub
jmp
push
sbb
jno
xchg
push
clc
fcomps
call
nop
push
rcl
inc
fdivp
xchg
pop
cmp
push
xor
je
cmc
mov
icebp
ljmp
pop
mov
sub
imul
cmc
in
push
cmp
rolb
lcall
mov
lcall
xchg
xchg
shl
jbe
verw
int3
lods
popf
les
test
outsl
push
repnz
mov
fdivl
and
inc
cli
out
xor
dec
mov
es
cmp
pushf
push
scas
out
mov
test
lea
aaa
lret
fsubrl
ja
and
je
hlt
push
mov
add
gs
sub
sbb
repnz
pop
sub
out
xchg
sti
sbb
and
fimuls
pop
xchg
imul
mov
add
push
lret
mov
repnz
sahf
pop
cs
sahf
adc
call
dec
adc
ss
xlat
neg
jmp
and
mov
cltd
shll
sbb
dec
dec
inc
aas
xor
xchg
int
dec
movsl
jnp
popf
and
sar
in
icebp
push
lods
jno
dec
in
stos
fists
call
scas
add
data16
hlt
xor
les
mov
mov
pop
in
cs
cmpb
negb
mov
jnp
cmpsb
mov
data16
lods
mov
dec
dec
pop
jns
pop
sti
xchg
lahf
loop
sti
jecxz
in
inc
mov
pop
sbb
mov
dec
mov
pop
cmp
pop
cmp
jae
xorl
stos
mov
ja
leave
jbe
mov
and
out
sbb
into
and
and
dec
iret
add
xchg
fidivl
mov
rorl
popa
inc
pop
mov
mov
sbb
push
push
pop
cmc
mov
push
int3
ret
nop
les
push
push
stos
lds
mov
sti
mov
pusha
xchg
loope
and
sbb
fildll
addr16
ljmp
in
sbb
adc
mov
enter
lret
mov
jae
je
ja
inc
arpl
xchg
int3
mov
lahf
lods
push
jp
and
pop
sbb
jp
mov
stc
jg
adc
inc
out
outsb
cmpsl
gs
or
cld
gs
ljmp
fwait
adc
inc
fildl
inc
lret
mov
popf
and
sar
sub
dec
cld
xor
scas
xlat
xor
add
sarl
pop
inc
cs
std
pop
cld
jecxz
xchg
pop
dec
mov
adc
mov
je
sub
fs
adc
adc
jo
push
insl
inc
enter
lods
inc
shll
andl
mov
add
push
cld
pop
dec
mov
mov
push
fsubrl
sahf
div
inc
mov
sub
push
fwait
shl
sub
or
ret
lret
fisttpl
in
dec
pop
sub
mov
enter
pop
scas
pop
neg
fcompl
xchg
mov
fwait
loopne
mov
lods
fcmovnb
mov
inc
das
mov
adcl
sti
fwait
and
mov
les
xor
xor
push
sbb
cmp
stos
pop
mov
push
test
cmp
jl
fldt
push
mov
clc
loopne
fisubrl
mov
sub
cmp
push
bswap
mov
push
das
lret
scas
and
movsl
std
sar
daa
cmpsl
xchg
cmp
xor
xor
call
call
das
pushf
aad
xchg
and
aam
xchg
mov
stos
roll
fwait
push
adc
scas
pop
and
gs
test
lret
es
mov
imul
adc
decl
inc
push
jbe
js
dec
aam
cmpl
jo
and
ficoml
pop
inc
mov
adc
cmp
insl
stc
test
jecxz
dec
xchg
adc
ret
into
mov
or
jp
cmc
sub
scas
dec
orl
push
lahf
cld
mov
idivl
mov
push
jbe
mov
mov
inc
mov
ss
jl
mov
dec
pop
mov
je
and
jae
cmpb
shlb
lcall
out
out
sbb
loop
sub
adc
sub
rorl
lret
pop
xor
insl
test
out
fidivrs
xor
rolb
movsb
loop
bswap
iret
lahf
es
movsb
sub
mov
icebp
mov
outsb
aad
mov
fs
daa
sub
add
jge
loopne
jge
bound
jge
jnp
es
cmp
cld
mov
push
add
sub
push
push
pop
push
push
cmp
jnp
ret
add
and
notb
or
das
jns
jae
inc
push
leave
mov
repz
dec
in
pop
adc
or
xchg
movsb
mov
jb
pushf
cmp
push
lret
fcomps
mov
mov
dec
push
pop
sbb
sti
mov
jle
es
pop
icebp
dec
out
and
xchg
int
sub
xlat
mov
stos
repz
pop
fwait
inc
xchg
adc
mov
insl
xchg
nop
int3
cmp
jne
loop
pop
fdivp
mov
jno
xor
clc
xchg
jo
lds
xchg
cmc
mov
sub
cld
push
inc
cmp
pop
xor
imul
cmp
jo
loope
mov
pop
mov
push
sbb
dec
iret
xchg
pop
mov
mov
jecxz
sti
mov
adc
inc
xor
or
cltd
into
daa
pop
int
push
int
push
mov
loope
cld
movsl
jg
jae
arpl
adc
fstl
into
bound
out
cld
cmp
subl
stos
pop
imul
aad
pushf
ljmp
mov
add
push
inc
iret
call
leave
nop
sub
ja
and
cmp
rclb
scas
add
daa
mul
filds
mov
test
or
pop
adc
mov
scas
add
mov
or
ja
in
xchg
push
sbb
xchg
fistpll
lcall
jmp
lea
lods
out
mov
mov
aaa
or
xchg
jcxz
and
sub
stos
inc
jnp
adc
es
sahf
xchg
nop
push
iret
sub
sub
call
mov
adc
in
adc
adc
cmp
into
stos
divb
lock
idivb
cmp
push
xor
lcall
mov
scas
adc
dec
lret
lahf
mov
fstpl
and
jecxz
lret
fwait
pop
in
lods
arpl
mov
les
add
lret
cmpsb
movsl
fsub
mov
push
jns
mov
call
jae
les
movsb
xlat
cmp
inc
jnp
xor
ja
pushf
ret
pop
adcw
jle
or
xchg
mov
jo
mov
dec
xor
dec
push
js
out
inc
or
mov
loopne
iret
pop
scas
mov
push
mov
int3
inc
into
dec
pop
jo
jecxz
adc
daa
sbb
out
inc
subb
adc
cmp
ja
push
popa
add
lret
stc
lcall
mov
or
mov
push
dec
sbb
push
xor
bnd
and
mov
popa
loope
sub
lret
aam
push
out
repnz
in
cltd
aad
xchg
push
test
jae
cmpl
insb
jmp
sbb
es
daa
ja
icebp
rcrb
adcb
hlt
jg,pn
repz
xchg
push
or
ret
mov
iret
xchg
adc
mulb
rol
push
inc
clc
addr16
jns
mov
mov
fstpt
jmp
and
cwtl
xor
lret
fisubl
pop
out
xor
pushf
or
xchg
mov
pop
test
and
loope
sti
mov
adc
and
jnp
mov
add
cmpl
sbb
xor
in
push
fnsave
dec
scas
ret
fdivrs
xor
push
fdivl
fcmovb
and
shll
pushf
rcrb
inc
xchg
ret
xorl
and
test
and
push
pushf
in
inc
popa
test
stos
mov
add
mov
enter
das
lret
out
and
fdivrp
mov
pushf
adc
jge
aaa
pushf
imul
int3
cmp
out
dec
add
fidivs
imull
pusha
and
call
cwtl
cmpsl
push
das
xchg
xor
cli
sbb
pop
push
dec
in
gs
push
fsubr
sahf
mov
nop
in
mov
sub
jl
int
sbb
mov
jnp
inc
cmp
lcall
je
pop
fiaddl
jmp
cmp
out
sbb
nop
int3
xlat
fisttpl
aaa
cmp
ret
mov
ret
mov
jl
push
add
push
jg
cmp
or
in
xchg
jmp
push
ds
add
popf
pop
jl
cmp
aas
fimull
mov
pop
adc
in
or
mov
or
fs
adc
mov
jno
sub
iret
bts
or
scas
push
inc
sub
repnz
enter
cld
inc
ror
fidivrl
leave
xchg
in
push
mov
dec
mov
lahf
mov
push
and
lret
push
xchg
imul
pop
adc
mov
sbbl
dec
sub
lahf
or
and
add
inc
mov
je
lcall
je
fistl
cmp
push
arpl
les
inc
cld
adcl
sti
mov
jle
dec
inc
pop
sbb
inc
imul
movsl
and
fadd
in
test
push
cmp
insl
add
dec
mov
inc
sbb
scas
xchg
jb
lods
outsb
mov
adc
jecxz
jo
pushf
std
int3
ss
mov
js
adc
insl
jno
sub
mov
and
and
mov
push
cmpsb
pop
movsb
sbb
add
jecxz
xchg
pop
adc
ffreep
movsl
cmp
test
add
shrb
mov
mov
pmullw
inc
xchg
pop
adc
movsl
clc
bound
or
and
rcl
lock
xchg
inc
fcmovb
mov
pushf
cmp
stos
mov
xchg
dec
xor
or
xchg
mov
mov
jo
mov
add
aad
adcb
mov
cmp
shlb
iret
pop
in
push
jb
cli
mov
sbb
xor
aaa
test
fs
out
ss
mov
jae
fbstp
popa
arpl
adc
test
ss
das
mov
and
xchg
xchg
pop
das
shrl
jmp
fwait
call
cmp
aaa
mov
repz
test
mov
out
fwait
sub
cmc
add
movb
jg
cmc
add
push
push
sbb
adc
imul
cwtl
sub
lods
inc
popf
push
or
stos
xor
fwait
mull
jae
ss
pushf
add
nop
repnz
adc
mov
cmp
sti
inc
mov
cmc
or
inc
sbb
adc
ret
add
xor
repz
movsb
xchg
inc
shll
lahf
xor
push
lock
clc
mov
cltd
nop
addr16
clc
mov
cmp
pop
gs
mov
je
out
pop
xchg
test
leave
insl
mov
cs
fsubrl
cwtl
fildll
lea
xchg
push
mov
loope
aas
adc
jbe
xlat
or
in
mov
fcom
mov
pop
adc
xchg
inc
insb
mov
aam
push
push
mov
pusha
adc
leave
fiadds
xchg
mov
lock
mov
xor
das
dec
push
jnp
jae
adc
cmpsb
fs
adc
mov
sti
xchg
lret
stc
inc
dec
sbb
mov
xor
jnp
add
mov
addl
inc
and
mov
add
pop
and
sub
inc
leave
sub
lret
test
sbb
sub
mov
adc
xor
mov
pop
scas
mov
or
sbb
sbb
mov
inc
test
jne
lahf
dec
dec
adc
dec
scas
dec
and
outsl
push
xchg
push
adc
pop
cmc
sub
jno
lods
xorb
jl
xchg
fldcw
ljmp
out
ljmp
repnz
adc
jo
repnz
xor
xor
pop
and
cmp
xor
fnstenv
insb
and
clc
push
and
lahf
mov
cmpsb
inc
jge
jns
add
rolb
cmp
mov
xor
xlat
lea
stos
mov
pop
adc
adc
bound
fiaddl
pop
mov
adc
dec
pop
adcb
decb
adc
mov
cltd
push
pop
test
scas
out
cltd
rclb
cmp
insl
add
jnp
inc
shll
test
stc
mov
pop
mov
ds
stc
pop
mov
mov
fistps
js
sub
xchg
dec
push
lods
mov
ret
out
xlat
or
in
in
mov
fbstp
fs
jbe
mov
sbb
jle
lret
in
jb
lret
in
lret
int3
fs
cmp
xchg
shrl
inc
int
push
add
daa
push
inc
cltd
or
xlat
mov
rcrb
push
mov
pop
pop
mov
dec
xchg
lods
xor
xor
add
sarb
out
xchg
mov
test
inc
enter
cmpb
lret
les
push
iret
es
lods
ljmp
xchg
loope
push
fidivs
pop
cwtl
jge
imul
sub
aaa
or
mov
out
popa
dec
daa
or
incl
jno
lret
dec
push
repnz
fdivr
aad
inc
sub
fwait
jmp
lods
outsl
std
cmp
add
xchg
ss
mov
scas
scas
aas
or
lock
dec
inc
out
lea
dec
push
bound
rorl
orl
cmp
dec
lock
dec
ljmp
scas
jnp
jge
xor
sbb
pop
insb
imull
and
or
pop
cmp
add
pushf
bound
jmp
push
push
sbb
mov
ret
xor
jge
cltd
notl
jae
lret
pop
dec
and
xor
sti
lods
shll
lds
jno
stc
lcall
and
sbb
fidivrl
inc
mov
or
movsb
mov
or
mov
pop
sbb
xchg
pop
xchg
inc
mov
sar
cmovb
ret
repnz
mov
push
or
loop
and
mov
xchg
ja
clc
mov
jmp
in
shl
insl
cli
cmc
pop
sbb
shll
andl
push
out
and
lahf
in
jae
jbe
pop
xor
inc
gs
xor
xchg
aas
xorb
enter
xor
add
pop
dec
adc
mov
movsb
xchg
movsb
cmpsb
out
les
xchg
jl
mov
lahf
pop
add
pop
xchg
xchg
fnsave
mov
cmpps
es
insl
ljmp
scas
cs
scas
adc
aam
daa
pop
lods
jo
and
add
shl
arpl
and
sub
sbb
and
mov
mov
cmp
call
mov
inc
dec
les
addr16
jge
push
mov
sbb
pop
mov
daa
jle
js
mov
mov
mov
cmc
pusha
mov
mov
pop
cld
mov
inc
mov
fcmovnu
jae
sub
imul
jae
hlt
imul
ss
mov
enter
js
ds
loopne
dec
jmp
inc
out
or
pop
adc
xor
pop
mov
mov
pop
pop
push
pop
mov
rcrl
cmp
mov
sub
push
out
pop
cmp
xchg
cltd
aas
jge
test
mov
cltd
sbb
je
out
fscale
rorb
ljmp
mov
mov
and
lods
fs
lea
test
sbb
xchg
lahf
sub
cmp
test
push
addl
mov
jp
or
xchg
xchg
ret
popf
aam
push
jnp
or
inc
subl
ret
orb
std
repz
pushl
pop
mov
test
lcall
push
mov
imul
data16
or
mov
mov
sbb
iret
fistps
cltd
mov
lea
mov
add
fildl
int
leave
inc
cltd
sbb
fiaddl
push
cltd
nop
lock
xor
outsl
jp
loope
pop
adc
sbb
xor
into
clc
and
sbb
add
in
test
cmp
jecxz
inc
daa
ret
movsl
insl
xor
mov
add
mov
xchg
sbbl
mov
cmp
mov
test
jecxz
or
inc
push
pop
shll
cmp
sbb
push
push
loop
xchg
movl
lret
scas
sub
and
cmp
popf
xchg
jb
mov
icebp
sbb
dec
mov
dec
test
adc
mov
call
xor
mov
rolb
add
syscall
and
dec
fs
push
in
jno
mov
mov
lret
mov
pop
push
cld
enter
mulb
jo
mov
dec
andl
add
mov
push
in
push
add
jg
xchg
mov
jle
js
and
xchg
mov
push
add
push
inc
lahf
pop
je
sbb
xchg
rolb
sub
addr16
aad
sbb
insl
pop
cmpsb
add
mov
and
push
jno
aam
mov
push
mov
sti
lret
addl
push
gs
scas
push
cmp
sbb
std
xorb
push
psllq
cmp
inc
push
cs
sub
es
jnp
xor
mov
xor
cli
pop
imul
xchg
pop
roll
fcmovnbe
in
mov
in
lods
lahf
stos
mov
jecxz
mov
and
pop
push
jb
or
mov
sub
xchg
dec
aaa
shlb
mov
push
xor
cli
outsb
outsl
ficomps
add
push
not
push
jae
aas
addr16
cld
sbb
icebp
addr16
mov
inc
pop
jle
cld
sahf
ret
mov
or
fldcw
cmp
test
adc
fwait
pushf
xchg
jg
sub
and
mov
jns
push
cltd
es
stos
and
push
int3
jge
mov
je
enter
mov
xchg
cmc
rorl
push
andb
and
stos
bound
pop
push
xlat
dec
enter
push
pop
movsb
dec
jg
mov
enter
add
jb
mov
jp
fcomps
cmp
and
push
push
jge
jne
out
or
nop
fsubr
and
das
ret
in
xor
mov
mov
pop
lahf
jno
lods
inc
shlb
test
jo
push
sub
mov
repnz
xchg
or
cmp
sub
movsb
in
fisubs
ja
repz
dec
and
sahf
aam
sar
sub
cmpl
pop
sahf
outsl
sbb
cltd
test
arpl
cmp
shl
int
mov
jne
add
mov
adc
fdecstp
mov
in
sbb
insb
jle
mov
mov
lods
loop
sbb
fiaddl
pop
out
fdivs
je
mov
lods
add
adc
hlt
sub
adc
fcmovnb
in
mov
test
xchg
outsl
pop
pop
ficoms
out
adc
out
stos
pop
iret
xchg
sub
mov
and
mov
xor
rclb
cmp
mov
and
outsb
xchg
mov
loopne
sbb
aas
dec
push
adc
mov
mov
in
ret
jecxz
adc
out
lods
mov
repnz
sbb
add
sbb
pop
out
das
xor
js
push
mov
aad
pop
daa
ja
jg
stc
jno
inc
jo
js
sahf
or
movsl
adc
fwait
cmpsb
mov
jg
lahf
mov
loope
jae
and
stc
mov
ja
or
xlat
dec
or
add
gs
adcb
jns
sarb
loopne
icebp
inc
in
push
jnp
or
xchg
pusha
xchg
adc
loopne
mov
in
jl
xchg
cltd
and
js
inc
cmp
cmc
cs
daa
or
test
push
mov
adc
fidivrl
and
mov
xor
push
push
jecxz
movsl
jns
mov
push
sub
movb
js
cmp
icebp
fiaddl
testb
xor
aaa
jge
fwait
lahf
inc
ds
mov
pop
out
mov
jne
cwtl
lods
jge
and
dec
and
sahf
or
test
rcrb
lds
cmpsb
dec
stc
cli
ja
xor
xchg
mov
outsl
cmp
sarb
mov
push
int3
add
sbb
dec
adc
das
and
stos
pop
and
jns
fimull
hlt
add
ljmp
pop
imul
mov
mov
test
mov
adc
xor
inc
adc
pusha
icebp
inc
xor
jl
popf
or
push
mov
mov
adc
xchg
ja
pop
add
insb
add
enter
incl
aaa
pushf
jl
ret
sti
push
xchg
into
jmp
es
pop
imulb
jge
xchg
sbb
lahf
daa
lea
cmp
outsb
data16
lahf
and
or
ja
cmp
aam
test
addl
jbe
call
fstl
cmp
in
cmp
pop
test
xchg
add
inc
cmp
imul
sbb
xor
mov
add
cmp
sbb
in
mov
outsb
xor
inc
popa
xchg
xlat
jnp
sbbl
xlat
loopne
xor
mov
scas
iret
push
jle
iret
addb
mov
adc
inc
xlat
pop
out
aad
insl
es
ds
cli
jle
call
jbe
push
cmc
mov
das
sbbb
inc
push
and
ror
out
into
adc
or
mov
lods
jno
cld
push
cmc
xchg
popa
shll
adcl
aam
fwait
es
sbb
push
jmp
mov
pop
add
movsl
inc
inc
push
push
imul
inc
sub
mov
mov
data16
int3
and
inc
sbb
cmovnp
ja
test
shrb
mov
dec
xchg
push
sub
lods
xor
push
cmp
xor
pop
adc
out
into
cltd
enter
jle
dec
inc
int
push
jno
imul
fcomps
push
mov
mov
xchg
pop
out
aad
in
push
dec
add
ret
out
icebp
sbb
stos
cmc
add
idivb
inc
idivl
mov
in
jle
cmp
test
filds
loopne
mov
xchg
cld
in
mov
xor
test
test
xor
adc
nop
bound
xor
lods
lds
xor
in
aam
add
outsl
jbe
dec
movsb
mov
mov
push
pop
mov
dec
inc
loopne,pt
and
cmp
test
jns
jmp
push
adc
test
jmp
xor
sbb
in
and
and
sub
out
pusha
sbb
mov
mov
xor
out
es
pop
inc
and
lcall
ss
push
mov
sbb
pop
rcll
cmp
hlt
jbe
xor
and
pop
jge
jmp
push
sbb
mov
stos
cmp
cmp
pusha
leave
fcomp
cld
icebp
jp
push
pop
mov
sbb
mov
inc
shll
add
lds
in
insb
adc
push
xor
sbb
mov
jg
lock
std
push
mov
xlat
pushf
push
int
in
and
mov
imul
and
mov
fmuls
add
sti
and
fidivs
cmpb
out
mov
xlat
mov
mov
fistps
sahf
mov
push
add
arpl
mov
or
ss
das
push
lret
out
sbb
cmp
sub
dec
lret
call
repz
fsubrl
adc
aas
adc
sahf
in
cmp
loope
pusha
or
pop
jno
stos
push
aam
xchg
jecxz
in
fimull
push
ss
aad
sbb
sbb
and
pop
aaa
or
cld
and
inc
leave
sti
shrb
outsl
cltd
push
fldl
repz
mov
testl
sbb
or
popa
ljmp
test
jmp
jecxz
shll
ficompl
nop
sub
cmp
clc
mov
jecxz
xor
stos
jg
sub
and
xchg
sbb
mov
push
add
mov
push
dec
outsl
test
cmpsl
aam
jp
mov
jne
sbbb
push
xchg
jae
call
sti
test
loope
pop
std
xor
scas
jg
cs
repnz
sub
mov
or
ljmp
repz
or
inc
jp
pushf
dec
insl
or
push
inc
push
fsub
adc
aas
jo
add
shll
pop
les
push
fcmovnu
roll
popa
push
sbb
mov
pop
cld
mov
adc
push
adc
loopne
lcall
xchg
ror
mov
shlb
mov
add
scas
mov
lahf
cli
pop
mov
pop
mov
mov
or
das
stos
mov
mov
and
dec
xor
cmp
mov
jg
jns
fst
ds
and
bound
lods
mov
push
pop
push
or
adc
jb
fucomip
adc
mov
test
mov
fwait
add
pop
inc
imul
and
mov
cwtl
push
xchg
pusha
outsb
xchg
mov
or
out
mov
ds
jb
mov
and
and
push
and
cmp
cmp
int
xor
int3
mov
and
push
mov
xchg
mov
inc
shlb
push
mov
out
addr16
inc
mov
movsb
pusha
iret
imul
sbb
or
adc
mov
adc
lea
or
loop
cmpl
jo
orl
lret
cmp
add
and
ret
jg
cwtl
test
adc
cmpxchg
sub
int
jne
out
inc
cld
fsts
lea
mov
scas
jbe
lea
and
sarl
jnp
xchg
daa
enter
addr16
jecxz
aad
jl
cltd
jecxz
loope
stc
fisubrs
inc
cmpsl
dec
mov
push
lods
add
rcrl
es
push
bound
inc
sub
inc
mulb
jl
mov
jns
and
xchg
mov
into
push
cmp
add
repnz
das
mov
inc
adc
in
inc
pop
loope
loope
test
arpl
insl
mov
sbb
std
mov
shlb
fisubrl
addr16
sbb
test
in
fs
xchg
pushf
jbe
pushf
pop
mov
pop
pop
imul
inc
sub
in
aam
push
push
inc
repnz
and
or
call
pop
adc
mov
add
inc
outsb
sahf
jne
inc
lahf
cmp
and
adc
sub
mov
pop
in
adc
shr
jb
fimuls
mull
add
sahf
push
jb
mov
shrb
icebp
sbb
pop
in
inc
cmpsb
push
dec
int
add
rcll
ret
jae
mov
insl
xlat
pop
scas
je
inc
mov
fiaddl
dec
add
in
xchg
xor
fsubl
mov
test
dec
or
or
sub
int
sbb
xchg
inc
add
out
movsl
popa
xchg
mov
lock
mov
xchg
or
mov
cwtl
xchg
push
dec
enter
mov
addr16
imul
inc
rcl
fcoms
xchg
les
pop
jp
lds
jmp
push
sarb
or
ret
cmc
add
and
scas
jp
add
sbb
or
jmp
sbb
arpl
test
outsb
cmp
xchg
mov
jp
inc
push
inc
push
in
push
iret
inc
dec
or
mov
imul
addl
sub
lds
stos
or
mov
out
sub
fsubs
nop
xchg
jbe
inc
mov
in
dec
sarb
bound
insl
sbb
roll
in
test
insb
loope
int3
cmc
cmp
mov
push
shr
adc
clc
jae
aad
in
push
shl
or
sti
fiaddl
lods
mov
sub
lea
dec
pop
cltd
adc
and
fisttpl
pop
jge
aaa
dec
xchg
fwait
xchg
rol
mov
mov
mov
cmc
xchg
push
das
out
loope
into
xchg
sub
lahf
test
icebp
ljmp
aas
cmp
add
icebp
mov
and
adc
and
sbb
cmp
mov
fidivrs
xchg
mov
pusha
adc
stc
push
mov
test
pop
ljmp
sbb
push
lahf
mov
push
inc
and
pop
lret
insl
and
cmp
lods
imulb
fwait
sub
pop
cli
bnd
movsb
inc
push
sub
loope
xchg
into
or
out
xchg
pop
out
out
push
or
ja
fisubrs
stos
pushf
pusha
mov
inc
imul
je
xor
push
and
test
jl
add
jbe
add
popf
sub
imul
ds
mov
popa
and
mov
jbe
dec
xchg
xchg
lret
ds
mov
dec
fwait
push
cmpsb
sti
lods
incb
in
or
sub
add
cmp
ret
out
mov
pop
fdivs
or
rcrb
arpl
in
lea
movsl
xchg
lahf
cmpl
sbb
in
xchg
or
xchg
pop
inc
sbb
loope
add
adc
dec
mov
adc
dec
push
add
popf
mov
es
sbb
fistpl
mov
fldcw
sti
in
inc
mov
xor
mov
xchg
mov
incb
repz
repnz
movsl
mov
sbb
subb
mov
int
lahf
mov
fmuls
jns
cmc
in
fcompl
aas
and
xchg
jle
mov
mov
imul
fisubl
aad
test
sbb
pop
cmp
mov
ljmp
push
nop
mov
ljmp
add
or
adcb
push
daa
xchg
inc
sbb
or
pop
div
les
dec
sbb
in
sub
in
mov
or
add
sub
cltd
xchg
outsb
mov
dec
xchg
mov
jmp
mov
loope
lea
out
xor
and
sarb
jae
lahf
loope
lret
enter
bound
sub
sbb
fwait
call
jp
sub
f2xm1
jnp
outsl
push
and
jmp
adc
push
pop
shrl
lret
scas
insl
insl
inc
mov
add
mov
scas
cmp
jl
outsl
xchg
xchg
fwait
dec
pop
dec
inc
leave
and
ds
pop
xchg
xchg
cld
adc
mov
loopne
xchg
lret
and
push
push
inc
pushf
divl
ljmp
push
scas
mov
lret
pushf
push
lret
cwtl
jo
mov
jmp
mov
fisttpll
aaa
or
jmp
jg
in
xchg
fistpll
sub
or
jnp
gs
inc
jmp
cwtl
sub
mov
inc
or
repnz
mov
ftst
mov
inc
dec
xor
or
and
or
or
rolb
sub
push
push
adc
cwtl
out
subb
aas
cmp
fistpll
in
mov
jl
sub
out
sub
mov
cltd
xchg
mov
add
rcl
dec
pop
cld
test
inc
stos
cmp
sub
mov
mov
ja
and
jne
adc
mov
in
cmpsl
jae
adc
or
mov
cmp
outsl
mov
ljmp
gs
xor
dec
fdiv
scas
push
ds
push
invd
xlat
stos
filds
sbb
or
mov
cmc
jg
gs
push
mov
cs
xor
or
adc
pop
arpl
jge,pt
mov
popf
jae
mov
jge
in
roll
fsubrs
lods
inc
mov
mov
push
pop
popf
enter
add
xchg
sahf
pusha
adc
pop
adc
sub
imul
and
sub
xor
sub
xchg
lret
cmp
sbb
push
xor
popa
stc
dec
arpl
and
les
mov
inc
insl
pusha
daa
test
mov
stos
inc
inc
data16
in
xor
mov
xor
inc
jne
pop
mov
xchg
pop
enter
xchg
icebp
add
pop
cld
pop
sub
inc
out
mov
jl
fmulp
scas
jl
cld
push
cmpsb
fwait
jp
mov
adc
les
pop
or
push
xor
sbb
sub
push
roll
add
push
jae
adc
xor
pop
mov
fnstcw
mov
inc
addr16
pop
or
push
inc
int
int
cmp
iret
in
ss
jle
pop
jge
cmp
jecxz
pop
inc
adc
xchg
pop
mov
mov
sub
adc
pop
sub
jp
cmp
mov
xchg
sbb
movsl
xchg
into
inc
xchg
cwtl
inc
stc
js
jns
ljmp
jmp
push
ret
iret
dec
mov
jns
mov
jmp
out
cmp
enter
gs
sbb
iret
les
mov
inc
push
or
jb
roll
inc
shr
les
jns
xor
jb
pop
mov
push
pop
call
subb
and
cmp
jne
icebp
ret
std
rcll
scas
mov
sbb
xor
es
das
bound
push
cmc
xor
sbb
sbb
sbb
push
shlb
xchg
cs
outsl
scas
dec
test
enter
inc
jns
fstpt
add
cmp
xchg
adc
or
cmp
sbb
popa
insl
inc
mov
add
ds
jmp
cld
es
adc
dec
mov
ror
out
sbb
idivl
mov
pop
ja
cmpsl
inc
fsubs
inc
cli
fbld
pop
sahf
leave
in
rorl
shrl
mov
fmull
xor
sbb
lods
mov
mov
xlat
loope
sbb
gs
ljmp
jo
insl
stc
add
sub
pusha
rcll
mov
push
jl
xor
mov
ja
popa
cmpsb
xor
and
lret
popl
fsubl
lods
clc
pop
inc
add
jae
mov
push
aaa
dec
lods
lcall
dec
loope
js
lds
xchg
lahf
mov
inc
cmpsl
les
jne
loopne
jp
enter
mov
lock
scas
in
shlb
sbb
popl
popa
pop
or
xlat
out
xchg
sbb
push
outsb
xchg
push
xchg
js,pn
push
dec
std
inc
and
out
mov
push
scas
cs
gs
jge
sti
loope
push
pushf
lret
or
or
cmp
cmc
push
xchg
je
mov
lcall
dec
gs
int3
xor
mov
iret
out
xor
ret
mov
movsl
jmp
les
lods
push
mov
pop
mov
mov
push
test
xor
push
jb
xchg
sub
lret
loope
jbe
repnz
dec
pop
lret
dec
sbb
dec
outsb
cmpsb
push
or
cmp
sar
push
mov
fisttps
push
ficoms
xchg
leave
add
mov
mov
mov
ljmp
jno
es
rep
mov
cmp
sahf
call
mov
scas
cmp
test
xor
push
mov
cmp
push
and
sbb
out
icebp
add
leave
mov
xor
shlb
inc
mov
jbe
pop
mov
pop
rolb
test
std
sbb
es
cmp
sarl
jg
mov
mov
xor
mov
cmp
adc
jb
pop
notl
int3
popa
jg
jne
push
mov
pop
dec
mov
loopne
aas
and
xor
mov
fsubs
leave
push
in
xchg
pop
and
sbb
cmp
repz
faddl
inc
scas
inc
push
mov
cltd
icebp
insl
jmp
outsl
pop
push
sbb
ret
sahf
sbb
daa
inc
pop
lcall
sub
icebp
stc
mov
xchg
and
ljmp
loopne
lods
xor
jb
enter
cmp
fwait
cmpsb
cmc
cmc
mov
out
jg
mov
lret
fldenv
sbb
push
push
xchg
loopne
or
repnz
cmp
ss
sub
stc
ret
insl
push
repnz
add
inc
pop
push
or
jl
xchg
arpl
pop
xchg
jns
icebp
pop
sbb
xchg
mov
cmc
mov
dec
hlt
mov
pop
sahf
sub
fdivr
or
fisttpl
and
aaa
addr16
addl
push
inc
loopne
hlt
sub
out
or
sub
fs
movsb
and
sub
mov
or
aad
loop
lret
or
stos
add
scas
or
movsl
mov
jp
pop
mov
mov
test
xorb
jmp
xlat
mov
cmp
mulb
notl
sbb
adc
out
adc
jl
adc
test
pop
pop
cmp
adc
and
icebp
mov
jmp
insb
stc
pop
subb
xchg
mov
cmp
hlt
mov
rep
jae
ficompl
out
xchg
lods
jo
adc
insl
mov
std
xchg
xor
xchg
dec
inc
push
stos
adc
stos
xchg
cmp
jbe
sub
gs
ss
xchg
push
rclb
xchg
xchg
fdivrs
adc
call
je
xchg
leave
sahf
ret
out
aad
mov
add
push
mov
inc
es
xor
in
sub
push
and
popa
and
pop
dec
outsb
loope
mov
lods
sbb
sbb
cmpsb
lcall
adc
sub
inc
inc
mov
clc
xchg
cmpsb
outsb
daa
es
xchg
int
pop
inc
enter
cmpsb
push
jp
cmc
lret
mov
stc
mov
das
addl
mov
adc
fldl
cltd
adc
adc
out
mov
mov
sahf
dec
loope
cmc
push
add
ret
mov
mov
insb
mov
loop
cmc
test
pop
lock
bound
mov
inc
mov
adc
sub
dec
mov
sti
ja
pop
push
pop
mov
adc
pusha
sbb
dec
add
out
aaa
xor
in
add
cmc
out
cmovno
push
lods
ja
cmp
dec
int
mov
lods
lods
and
loope
rclb
xor
insl
fwait
stos
mov
mov
repz
and
ljmp
lods
cltd
cmp
outsb
xchg
js
mov
jae
jle
rcrl
inc
sbb
jae
and
rorl
mov
and
rcll
pushf
jbe
jl
jno
icebp
js
jmp
fdivrl
mov
pop
roll
mov
test
sti
mov
scas
mov
lret
call
mov
cmp
fxch
insl
movsl
pop
sbb
test
xor
or
jnp
sub
and
adc
adcl
cmp
mov
scas
push
cwtl
cli
add
fdivs
xlat
lcall
stos
add
mov
inc
pop
mov
aad
loopne
outsl
repnz
and
xchg
and
cmp
sbb
xchg
movhlps
ds
cmp
je
cld
call
lcall
inc
jne
gs
adc
jae
test
mov
in
call
sbb
arpl
adc
lds
jo
add
sub
inc
dec
cld
push
mov
cld
sub
mov
cmp
mov
push
addr16
addr16
xor
test
or
xor
mov
nop
push
and
push
test
mov
xchg
cmp
xlat
jb
scas
add
mov
pop
or
mov
push
mov
shlb
pop
clc
xor
pop
leave
stos
mov
shl
xlat
popf
testl
add
sub
or
jno
adc
icebp
dec
fnstsw
xchg
xchg
in
and
cli
test
xor
mov
mov
insl
dec
js
cltd
insl
pusha
popf
jl
xor
cmp
dec
rclw
scas
cmp
dec
cmp
test
push
aas
out
shll
jbe
jge
pop
mov
sete
lret
add
add
push
iret
enter
cmpsb
mov
dec
inc
lea
repz
sbb
nop
dec
shrl
inc
inc
xlat
mov
jae
aas
arpl
data16
jmp
cmp
cmp
leave
fildl
pop
rcrl
ror
addb
aam
addb
sub
cmc
push
popf
add
dec
repnz
pop
jae
pop
lret
jmp
dec
pusha
jb
mov
xchg
push
loopne
and
pcmpgtw
aaa
adcl
pop
adc
lods
hlt
push
cmpsb
mov
cli
xchg
and
mov
scas
push
mov
push
mov
ljmp
sub
dec
cmc
and
mov
jp
sbb
mov
shrb
cltd
cmp
mov
es
mov
pop
and
cmp
in
out
mov
mov
xchg
aam
jae
cmp
in
lock
inc
lods
dec
jecxz
repnz
roll
popa
pushf
push
loope
xorb
mov
or
adc
stos
or
lret
xchg
inc
popf
ss
fstl
sbb
aas
es
or
call
mov
pushf
imul
andnps
jo
jo
jo
lret
fdiv
xchg
sbb
fcoml
gs
xchg
ret
and
pop
insb
lcall
mov
sub
nop
das
scas
bound
cwtl
cwtl
fidivs
into
mov
push
push
xchg
rcr
inc
ds
enter
add
lods
je
fisubl
in
push
movsb
je
inc
test
mov
jmp
push
ss
dec
jl
cmp
or
retw
push
fs
or
jae
cmovae
lods
jge
xorl
push
out
xor
shlb
dec
mov
mov
popw
nop
mov
fdiv
call
aam
xor
mov
mov
or
je
mov
out
dec
rorl
jp
sub
call
sbb
in
cmp
cmp
outsb
pop
mov
test
mov
inc
scas
outsb
mov
lods
or
sub
aam
mov
fcmovnbe
repz
xchg
fucom
mov
std
xchg
sbb
in
jecxz
imul
shrb
xor
outsl
cwtl
outsl
xor
or
cmc
lcall
icebp
cli
mov
mov
shlb
mov
aam
roll
das
js
pop
push
out
mov
jp
xchg
ret
mov
cwtl
mov
cs
pop
arpl
pop
outsl
stos
ljmp
mov
lods
adc
and
sar
in
and
cmp
popa
xorb
int3
lahf
cmp
push
rcll
lea
in
lods
and
jmp
sbb
add
rorb
dec
dec
mov
add
and
xchg
subl
divl
cmp
jecxz
sub
adc
out
jo
mov
mov
jg
hlt
sbb
xor
js
dec
inc
dec
xchg
pop
iret
daa
je
js
mov
pop
ja
xlat
dec
cmp
mov
les
adc
adc
into
jbe
jmp
mov
scas
jne
test
cmp
or
jo
mov
cltd
adc
mov
adc
ret
xor
pop
enter
out
sbb
andl
dec
cmp
aaa
ljmp
test
xor
je
gs
hlt
mov
mov
pop
cwtl
data16
insl
ficompl
repz
imul
push
pop
es
dec
cwtl
loop
xchg
xchg
adc
sbbb
es
cs
mov
aas
pusha
hlt
xchg
cmp
push
nop
dec
int3
xchg
push
imul
add
insl
adc
xor
cmp
dec
jle
jns
movlps
push
mov
sbb
dec
fldl
cmp
push
in
fdivl
shrb
aas
dec
aam
jecxz
setnp
adc
cmp
or
lods
push
sbb
jbe
mov
in
jbe
mov
es
setb
add
cmp
dec
mov
iret
in
ljmp
pop
pop
mov
fisubs
cmp
sbbl
lock
addl
sub
and
xor
or
clc
movsb
xor
fistl
popa
xchg
daa
sbb
pop
or
fs
imul
into
stos
sub
std
insb
push
inc
adc
push
and
sti
xorb
jge
std
lret
pushf
xor
andb
cwtl
add
inc
cmp
mov
mov
sbb
daa
cmpsb
lret
jp
iret
loopne
or
popa
push
mov
pop
cmc
dec
repz
lods
scas
punpckldq
lds
pop
fsubr
cwtl
and
pop
lods
arpl
mov
sbb
inc
mov
sbb
mov
xor
cmp
pusha
jbe
call
jg
or
cmp
dec
out
push
ja
add
add
scas
insb
out
mov
inc
sbb
loop
sbb
mov
imul
popa
xchg
data16
imul
ret
adc
aaa
mov
lods
cwtl
jge
std
pop
in
adc
xor
xlat
stc
call
add
lret
insl
dec
fwait
rcrb
mov
sahf
lea
imul
imul
stos
and
xchg
test
cmp
in
cmp
cmp
and
enter
nop
enter
std
daa
sbb
nop
scas
in
bound
jg
pop
push
fs
lret
inc
scas
cmp
adc
sbb
mov
aad
and
or
jb
pop
cmpsl
inc
cld
daa
arpl
sub
jns
pop
and
int
xchg
aas
inc
call
stos
mov
adc
and
popf
mov
mov
sahf
ljmp
shll
lock
jecxz
dec
inc
sbb
or
dec
iret
roll
dec
rcr
push
sar
shll
adc
sti
movsl
adc
and
fst
fcoms
test
js
inc
jns
js
mov
repnz
mov
mov
into
leave
push
loop
mov
test
push
xchg
fsubr
fucomp
ret
sbb
sub
gs
lea
cmp
dec
jnp
inc
fs
mov
push
imul
push
mov
dec
cwtl
popa
insb
fwait
jne
dec
adc
push
sbb
pop
and
fmuls
cmp
orb
daa
mov
dec
mov
fsubl
add
das
aad
mov
je
mov
ret
push
pop
fisttpll
clc
sbb
lret
aad
and
int3
pop
sbb
xchg
fidivs
xorb
ja
adc
xchg
pop
pop
out
and
fs
pusha
in
xor
in
mov
test
dec
mov
or
xor
adc
pop
add
push
or
das
stc
mov
stos
push
loope
in
sarb
cmp
lock
ss
test
push
sub
or
mov
mov
loope
push
xor
mov
adc
push
push
pushf
sbb
inc
fwait
jae
and
or
mov
and
cltd
jno
adc
adc
orl
cltd
stc
mov
push
jecxz
arpl
jno
jmp
leave
mov
sbb
data16
cld
es
dec
ficoml
das
flds
cwtl
flds
pusha
repnz
mov
test
stos
pusha
daa
pop
push
lret
cmpsb
and
lds
ds
sub
jg
or
in
loop
jno
fs
jmp
sub
or
inc
mov
les
subl
dec
in
push
cld
pop
xor
sbb
mov
out
jge
sbb
cwtl
in
or
cmc
daa
aad
bound
out
cs
fldcw
mov
jg
adc
out
hlt
das
xor
mov
add
dec
sbb
add
push
fistpl
das
or
aam
inc
and
popf
xor
notb
adc
pop
rcrb
jg
adcl
enter
mov
sub
lds
sahf
and
shlb
ret
mov
mov
xchg
jmp
mov
and
xchg
mov
dec
out
addl
mov
xor
push
lea
or
addl
std
pop
jbe
jnp
stos
sbb
push
out
std
mov
adc
mov
sub
xor
or
stc
sub
jae
in
mov
incl
add
movsl
and
inc
cltd
hlt
or
sub
adc
idivb
jb
jp
xchg
add
stc
push
sbb
xor
arpl
pop
inc
ljmp
rcr
sub
int3
sub
push
push
or
xchg
xchg
xchg
jae
aas
mov
push
cmpsb
rol
cmp
aaa
gs
jae
test
popa
loop
or
mov
sbb
sbb
rcr
fistpl
out
adc
lahf
pop
int3
sub
cmp
xchg
repz
int
sub
mov
inc
pop
pop
xor
cmp
stc
or
and
icebp
stos
mov
xstore-rng
cmpsl
add
les
test
into
xchg
push
nop
fwait
ss
scas
and
adc
dec
int3
into
pop
push
dec
or
es
ds
dec
cmc
sbb
loope
push
mov
mov
adc
inc
jp
aaa
adc
adcb
outsl
xor
dec
and
pop
ss
pop
bound
mov
movsb
pusha
pop
cwtl
ljmp
jae
cmp
mov
jbe
jl
or
movsl
outsl
lret
mov
xchg
lret
fucom
mov
push
xlat
adc
fcompl
scas
es
fsubrs
int
icebp
push
inc
cs
pop
cltd
movsl
cmp
es
jae
sub
sub
mov
mov
xchg
ret
sub
loope
ljmp
ss
inc
or
popa
pop
cmpsl
sti
sbb
jmp
ja
sbb
repnz
jl
out
test
ljmp
or
or
test
sbbl
push
xchg
clc
lcall
ss
xchg
mov
leave
daa
inc
fs
inc
mov
aaa
and
pop
xchg
cltd
xchg
mov
fs
ficompl
into
or
imul
add
test
mov
and
or
xchg
sbb
xchg
insl
shll
rcrb
clc
fnstcw
add
cmpl
jp
shlb
mov
adc
fwait
push
or
inc
aad
jg
inc
das
cmc
xor
adc
pop
sbb
mov
rep
sub
cmc
sub
mov
adcb
jmp
xchg
lods
xor
fcmovbe
inc
mov
sbb
push
fdivl
loope
push
or
sub
push
xchg
shll
push
sarl
jo
aam
mov
repz
pop
cmp
mov
jg
data16
es
aad
into
cmp
mov
jo
daa
jno
pop
repz
mov
push
dec
lea
cmp
inc
addr16
int3
btcl
adc
rcll
loop,pt
dec
stos
jae
lods
xchg
inc
pop
xchg
inc
cmp
nop
pushf
call
push
andl
adc
into
sbb
inc
fistps
pop
xor
pop
mov
push
xchg
mov
lret
push
jns
mov
rcr
mov
pop
inc
in
inc
adc
hlt
int3
sub
lcall
int
add
mov
pop
sub
mov
hlt
data16
in
mov
add
xchg
loope
cli
sahf
aad
dec
inc
sub
ds
inc
insl
cmpsb
mov
in
test
dec
xchg
fsubrs
cmp
sbb
inc
cmp
dec
imul
lret
cmp
repz
push
xor
negb
or
in
dec
jbe
push
flds
loopne
xchg
push
iret
push
jbe
jge
mov
movsb
daa
das
mov
stos
test
push
mov
movsb
cmpsl
scas
movsb
aas
imul
iret
mov
push
cmc
sbb
cmpsl
sbb
das
mov
mov
aad
int
daa
mov
jmp
decl
loopne
sbb
inc
jp
adc
ja
stos
sbb
push
inc
les
mov
mov
dec
cli
push
inc
test
or
inc
lds
repz
imul
imul
mov
and
mov
je
ficoml
push
push
subl
xor
mov
sub
jg
es
ret
pop
idivb
add
push
sub
cmp
rolb
bound
movsb
dec
jnp
mov
push
mov
and
sub
mov
andl
rclb
loopne
fisubs
push
fisubrl
lcall
sbb
xchg
bound
pop
sub
test
push
pop
xor
lret
jg
push
xchg
das
xor
lcall
clc
add
mov
ljmp
sbb
push
test
inc
mov
jnp
pop
dec
aad
jg
imul
test
mov
mov
out
cmp
cld
adcb
jns
adc
mov
dec
pusha
sahf
aad
pusha
int3
cmc
jo
mov
shlb
scas
jne
scas
adc
jp
insl
push
or
adc
lock
mov
pop
xor
cmc
xchg
clc
mul
xor
jecxz
ret
js
xchg
sub
pop
mov
cltd
lret
lods
fcoms
jp
adc
mov
mov
sub
fwait
xchg
sbb
xchg
paddsb
jmp
dec
fwait
cld
jae
lds
enter
jb
loope
push
adc
push
or
adc
cmpsb
jp
mov
jg
std
ljmp
lret
mov
sbb
push
push
shrd
cmp
test
pop
add
into
pop
test
and
frstor
subl
les
enter
js
mov
lds
in
fcomps
xchg
dec
out
fdivrp
jecxz
mov
xlat
dec
out
pop
jnp
pop
popa
arpl
cmp
loop
stc
adc
int
outsl
outsb
lret
mov
loop
in
cwtl
mov
fwait
icebp
fld
in
pushf
and
jb
repnz
adc
mov
fnstenv
test
les
mov
mov
arpl
inc
call
jmp
adc
insb
add
inc
inc
mov
xor
dec
cmpsb
jp
in
mov
cmp
jle
lock
sbb
pop
js
sbb
xchg
inc
mov
jae
dec
jle
stos
std
push
mov
xchg
icebp
sub
stos
add
mov
repz
gs
sahf
test
sbbb
test
test
mov
jns
xlat
pop
pop
mov
add
xchg
out
xchg
lcall
pop
push
add
add
js
or
mov
lods
sbb
lds
cli
dec
shlb
jnp
and
adc
and
inc
loop
ds
icebp
leave
pop
mov
popf
shlb
mov
push
rolb
ret
dec
in
ss
ret
movsl
or
repnz
aad
insl
fstps
insl
nop
fildll
sbb
mov
jg
cwtl
mov
mov
push
push
inc
aas
int
movl
out
jae
pop
push
or
pop
inc
sub
jg
cmc
sbb
cmc
in
adc
adc
sub
mov
sti
jmp
scas
in
xchg
pop
pop
aas
push
push
int
add
or
jmp
dec
bound
icebp
pop
cmp
insl
sbb
jb
dec
mov
mov
call
aad
lods
jecxz
outsb
xchg
xor
outsl
ss
cmp
jecxz
dec
or
cmpsl
push
shll
sbb
cmp
lds
adc
sub
cmp
xor
movsb
xchg
repnz
cmc
cmp
xor
cmp
jb
sub
sub
dec
cmpsl
jno
push
mov
in
lea
les
cmp
sbb
sbb
stos
in
nop
mov
adc
stc
in
movsl
dec
push
lock
adcl
test
xchg
jge
dec
add
xor
shll
pop
xor
push
push
fmull
push
test
sub
movsb
es
push
push
test
cs
in
and
dec
out
mull
and
jne
push
scas
push
adcb
cwtl
movsb
mov
jmp
sub
adc
mov
pop
push
lcall
repnz
test
mov
xchg
xchg
xor
mov
aad
in
jecxz
and
lods
adc
xchg
xor
add
ret
mov
or
hlt
in
loope
push
dec
inc
insb
insb
dec
in
dec
mov
xor
sub
xchg
push
jmp
loope
pop
mov
mov
mov
sub
mov
cmc
xor
mov
adc
cld
std
xor
stc
add
sbb
std
sub
mov
sbb
adc
mov
gs
cwtl
and
inc
push
addr16
push
lret
xchg
int
push
pop
les
cmp
adcb
lock
pop
mov
lret
aad
cmp
sbbl
divb
stos
jne
sahf
aad
add
cltd
pop
movsb
test
fdivs
jnp
xor
pop
xchg
cmc
rorl
cmp
std
test
and
jge
push
pushf
cwtl
sub
out
jmp
xchg
cwtl
dec
aas
xchg
xor
xor
in
cmpsb
mov
sbb
pop
jecxz
into
push
mov
push
negb
and
add
out
adc
xchg
mov
xchg
out
add
ret
cwtl
ss
hlt
scas
push
cmp
mov
push
stos
and
stos
fs
sti
sbb
cs
into
xorl
xor
mov
push
cmp
push
xor
mov
mov
add
xchg
fdivs
repnz
pop
adc
mov
mov
dec
dec
jns
jecxz
and
pop
into
xchg
jnp
cmc
jb
jbe
jae
int
mov
mov
pop
sbb
dec
dec
cltd
add
cmp
add
sti
mov
cmp
hlt
mov
xchg
cmpsb
jl
cli
mov
stos
push
aaa
fdivrl
adc
xchg
sub
xor
test
mov
sub
mov
or
dec
fsubrs
pop
mov
dec
inc
push
out
insb
out
sbb
and
stos
inc
sub
or
out
mov
mov
pop
imul
xchg
cmp
push
icebp
cmpb
or
lods
out
sbb
int
sub
xor
sahf
pusha
cmp
daa
sbb
movsl
ficompl
dec
ljmp
jge
fs
inc
aam
and
lret
pop
jl
mov
push
or
aas
jmp
hlt
cli
mov
in
or
sub
xor
add
test
inc
insl
cmp
pop
stc
jp
dec
dec
dec
sbb
push
pushl
fidivrs
int
mov
inc
xor
in
stos
lahf
imul
insb
jmp
fdivrl
push
insb
inc
push
push
adc
inc
mov
jb
pop
dec
sbb
inc
jo
add
inc
push
inc
in
outsl
lret
dec
push
outsb
inc
sub
outsl
and
cmp
leave
ss
add
andb
fistps
fs
out
mov
out
ret
lret
sbbb
pop
fs
sbb
mov
add
xchg
sbb
push
iret
dec
leave
sbb
inc
dec
dec
aad
movsb
nopl
out
out
push
iret
into
flds
push
xorb
push
cmpsb
loop
hlt
or
xor
mov
out
jbe
cmpsb
int
add
or
arpl
and
popa
negl
insl
test
push
pop
stc
loopne
or
fnstsw
push
or
xor
sti
dec
iret
fadd
cmp
jb
mov
xchg
add
adc
push
pushf
int
aas
adc
test
repz
jb
nop
xor
leave
push
dec
daa
pop
xor
aad
pop
mov
clc
repz
mov
aaa
sub
jp
xor
in
sub
mov
mov
movl
pop
pusha
dec
pop
push
xor
cmp
jmp
push
xchg
popf
sub
or
jge
fistps
hlt
inc
adcb
jo
xor
jecxz
enter
cmpsl
add
testb
push
xchg
fsubrp
sub
loop
sbb
cmp
jne
jg
in
sub
push
mov
loope
loop
data16
sub
stc
ret
bound
adc
jbe
add
out
mov
test
aad
push
and
cmp
jno
dec
out
cltd
cmpsb
mov
insb
adc
cwtl
push
adc
push
test
and
imul
shl
cmpsl
daa
lds
or
cmp
inc
adc
je
enter
push
xchg
fdivrs
cmp
xchg
in
cmp
lods
add
push
int3
sub
or
or
outsl
cmp
fsubs
rcl
test
jle
cmc
xor
dec
gs
loopne
lea
adc
push
sub
xchg
push
inc
xchg
mov
push
arpl
jo
inc
sti
test
es
push
ds
adc
xor
mov
sub
out
mov
jns
jle
bound
popf
rcrl
ud0
subb
xchg
aas
add
inc
lret
idiv
callw
out
sahf
xlat
add
mov
int3
lods
fxtract
xor
mov
andb
mov
and
pop
pop
cmpsl
mov
mov
xchg
bound
nop
sahf
dec
dec
std
popa
adc
xor
or
icebp
sub
nop
insl
pushf
push
add
jne
jae
dec
dec
pandn
fs
dec
fsubrs
repz
shr
cltd
stos
out
xlat
aaa
stos
test
stos
fidivl
stc
pop
dec
mov
out
inc
cmp
fs
mov
lret
pop
popa
mov
dec
pop
mov
sub
adc
lods
shrb
pop
mov
inc
mov
fimuls
cmp
sub
out
pop
jp,pt
cmp
or
mov
test
lds
ret
test
lods
fbld
in
cmc
stos
addr16
popa
mov
adc
mov
mov
aaa
nop
push
rolb
mov
loope
and
rolb
popa
out
das
mov
aaa
rcll
jno
pop
pop
and
dec
push
cld
cmc
mov
and
sbb
jle
mov
rcr
and
inc
rolb
mov
jae
lds
jae
push
adc
cmp
add
jns
mov
out
inc
std
or
lcall
push
inc
jg
leave
lea
push
aas
push
dec
clc
int3
mov
cmp
mov
and
lcall
setne
add
mov
mov
pop
movsl
mov
das
push
std
add
rcrb
in
mov
daa
mov
cmp
sub
pushl
inc
fisttpll
inc
cmp
mov
jbe
jg
daa
add
ja
scas
jecxz
mov
mov
int
outsb
arpl
mov
insl
pcmpeqw
pop
out
jae
mov
les
imul
xor
push
fidivl
adc
repnz
subl
lcall
call
or
lcall
lods
pushf
pop
jmp
mov
lock
mov
dec
mov
dec
jg
rcrl
mov
inc
sbb
aaa
popa
pop
push
movhps
cmp
push
cld
stos
fldenv
jns
inc
clc
cltd
vunpckhps
imul
push
sahf
ss
aam
adcl
and
stos
out
add
jbe
lret
or
pop
pop
push
pop
cld
scas
cmp
sub
sub
inc
insb
in
loop
xorb
cld
ficompl
xchg
lea
outsl
xor
jmp
dec
xchg
inc
xlat
das
hlt
enter
pop
push
or
inc
cmp
shll
je
push
icebp
jne
jns
cmp
movsl
scas
mov
jg
xchg
stos
ret
mov
mov
jns
fimull
add
icebp
xchg
movsl
mov
inc
jl,pn
xor
add
sbb
jnp
lcall
jmp
sbb
lret
add
fadds
pop
mov
fisubrs
mov
push
aaa
push
mov
dec
jnp
cmpsb
std
sarb
push
mov
lods
or
in
dec
aas
stos
sub
xchg
and
and
dec
mov
mov
frstor
jo
aad
nop
mov
ds
dec
leave
mov
fyl2xp1
or
mov
mov
mov
xor
jmp
add
fsts
jbe
xchg
dec
push
lods
mov
lret
lds
mov
jmp
mov
or
mov
and
sbb
enter
jno
insb
lds
sahf
push
xchg
loope
lds
mov
jns
ficoml
inc
xchg
mov
movsb
or
imul
dec
pop
test
lods
fnop
data16
dec
jbe
inc
jno
add
mov
adc
test
fstl
ja
or
lahf
push
ljmp
sahf
inc
daa
outsl
in
mov
inc
ret
leave
inc
clc
jns
cmp
add
cwtl
add
jp
mov
inc
bnd
pushf
mov
vpandn
out
adc
rcr
divb
xchg
mov
mov
cmp
dec
call
mov
inc
jno
adc
mov
lret
in
fnstcw
push
adc
pop
adc
inc
mov
cmp
jns
sti
mov
cs
mov
pop
lods
dec
xchg
pop
fists
sub
test
or
cmp
mov
in
cmp
mov
pop
push
jae
cmp
xchg
mov
push
scas
jb
ss
add
xlat
cltd
mov
add
es
gs
cmp
jns
cmpsb
sub
xchg
xchg
icebp
sarl
pop
mov
mov
xor
popf
sbb
es
js
dec
andl
or
ljmp
fistpll
xchg
inc
andb
test
dec
xchg
add
adc
das
inc
inc
sbb
jno
push
dec
clc
adc
jnp
dec
add
sub
aam
fisubrs
push
stos
cli
aam
jmp
shrb
aad
out
test
adc
cmp
mov
and
add
mov
leave
rolb
xchg
dec
jae
in
adc
push
shll
dec
insb
lods
push
jo
icebp
pop
movsl
ret
jno
mov
cmc
test
xor
and
xchg
xor
lcall
cmp
cmp
filds
lcall
lahf
push
xor
push
scas
into
clc
pop
es
sti
cmpl
fsts
in
inc
sbb
gs
fdivrl
dec
cmc
pop
xchg
xchg
cmpl
jl
fiaddl
mov
stos
ftst
lock
jmp
push
dec
mov
cmp
pop
push
jb
jbe
out
cmp
sub
and
mov
adc
jae
icebp
inc
subb
int
pop
sarb
decb
inc
insl
push
pop
outsl
jecxz
stc
add
xlat
jno
lret
pop
sub
iret
out
sub
jne
enter
pop
and
mov
in
push
je
in
inc
lea
lods
pop
insb
es
mov
xchg
mov
fwait
mov
in
pop
das
out
daa
mov
push
inc
lods
and
insb
sub
xor
inc
xchg
icebp
mov
sbb
mov
pop
js
cwtl
mov
cwtl
jg
mov
and
sub
inc
jns
mov
xchg
cwtl
sub
mov
daa
jge
push
loopne
movsb
mov
sahf
xchg
sti
fidivs
or
lods
inc
iret
test
sub
lock
into
pushf
mov
cmp
lea
rcll
cmp
int3
mov
pop
pop
or
xor
fstpt
push
test
xchg
jno
push
pusha
repnz
int3
dec
nop
mov
dec
push
pop
dec
lea
pop
adcb
dec
test
sbb
bound
frstor
pop
bound
std
xlat
push
xchg
mov
push
iret
pop
data16
pop
int
sub
pop
stos
cmpsl
sbb
xor
xchg
insb
and
inc
sbb
mov
push
jne
adc
lcall
repnz
in
mov
mov
lcall
test
xchg
or
mov
ret
stos
movsl
lods
jne
leave
mov
sarl
jnp
dec
jg
cmp
and
testl
cmpsb
pusha
sub
pusha
mov
insl
movsb
adc
in
lock
add
mov
inc
xchg
repz
mov
fdivrp
movsb
cmp
jmp
ror
mov
dec
mov
cwtl
push
dec
push
movsl
loope
out
movsl
insl
push
lods
sbb
pop
mov
mov
dec
xchg
mov
push
inc
adc
rorb
lods
jmp
sub
loopne
insl
jge
add
jnp
cmp
or
mov
mov
fmull
mov
xchg
sarl
test
sbb
test
imul
iret
inc
jo
sub
cmp
rolb
fucomi
xchg
jnp
add
jp
mov
js
int
sbb
aam
lret
out
inc
pop
adc
mov
jnp
lahf
in
cmc
mov
mov
pop
jl
enter
fldt
mov
push
adc
mov
stc
xchg
xlat
lret
pop
push
adc
sub
enter
int
pop
push
jle
dec
jbe
test
xchg
ljmp
jae
cmpsl
popa
nop
jge
dec
lahf
mov
inc
out
aas
pusha
loope
pushl
clc
pop
fcomi
add
inc
or
adc
rorl
xchg
test
lret
outsl
mov
inc
call
ficompl
cmp
cwtl
push
insb
pop
scas
cmpsb
jmp
pop
adcl
mov
dec
je
sahf
lret
stos
out
cmp
jne
ss
int3
mov
sar
mov
mov
cmpsl
je
call
mov
inc
fcmove
lock
ja
imul
dec
jb
enter
sbb
repz
scas
aaa
idivb
mov
xor
adc
popf
xor
dec
inc
mov
aad
jp
sub
fidivl
and
and
cwtl
sbb
sahf
pushf
cwtl
out
dec
repz
out
aad
mov
mov
cmp
aad
mov
inc
fists
cmp
int
sarb
push
jge
cmc
dec
cmp
jecxz
dec
loop
pusha
inc
mov
xchg
adc
sub
fs
dec
icebp
test
cmp
fcompl
pop
pop
fwait
popf
in
ljmp
je
lret
adc
mov
pop
push
pushf
daa
hlt
mov
mov
iret
in
stos
int
cld
add
movsb
mov
xchg
mov
shrl
iret
insb
inc
test
out
inc
leave
rorb
mov
pop
mov
and
frndint
mov
sub
enter
jp
pop
or
sub
inc
daa
xor
pop
mov
pop
das
mov
pop
int
jns
pop
sub
inc
subb
pop
aad
test
xchg
mov
push
mov
out
clc
and
popf
sbb
mov
dec
xchg
jg
or
aas
mov
psubd
sub
lock
adc
test
add
cmp
xchg
pop
fdivr
dec
stc
xchg
cwtl
pusha
xor
in
pop
js
lret
jns
outsl
insl
xor
inc
or
mov
pop
fldcw
sub
je
lea
scas
gs
xor
shll
and
cld
mov
leave
push
push
push
jmp
mov
or
add
ret
inc
pop
aaa
sub
or
cmp
mov
sub
mov
hlt
or
sbb
pushf
nop
sbb
or
mov
lods
loopne
loop
roll
ficoml
in
stos
jge
mov
inc
inc
sub
xor
mov
movsl
jp
sbb
int
cwtl
jecxz
inc
flds
iret
repz
mov
imul
addb
fs
cmp
inc
scas
sbb
dec
and
mov
js
aas
push
sahf
add
mov
lods
cmpsb
mov
pop
adc
lods
and
divb
pop
pusha
adc
lret
call
scas
popa
push
fadds
bound
lods
mov
cmpsl
mov
and
out
orb
inc
xchg
adc
fidivs
push
jp
mov
and
lds
xchg
cmp
add
pop
popa
mov
les
jo
push
xchg
les
mov
dec
add
mov
mov
xchg
or
aam
add
mov
xor
jge
mov
stos
mov
popa
xchg
sub
cwtl
mov
sbb
shrb
xorb
sub
popa
pop
iret
jmp
icebp
add
leave
jae
push
add
fists
pop
xchg
cltd
roll
lea
gs
pop
and
test
and
divb
test
jbe
xchg
mov
je
push
loop
mov
pusha
rolb
adc
arpl
mov
push
in
test
cmpsb
shlb
push
movsl
xor
lods
loope
rcll
or
cltd
dec
dec
addr16
cs
hlt
lcall
push
mov
xorb
xor
cld
dec
push
push
aaa
mov
inc
ja
xor
sub
inc
ret
inc
enter
dec
xor
push
pop
pop
dec
cmp
mov
mov
xchg
cli
dec
add
sub
dec
mov
imul
push
push
adc
es
jmp
cli
cmp
stc
and
xchg
xchg
jnp
testb
adc
cwtl
cld
in
mov
xor
and
stc
sub
sub
repnz
mov
mov
mov
pop
inc
dec
xchg
out
mov
cli
mov
add
je
xor
fsubs
xor
and
cmp
or
add
outsl
ljmp
cmpsb
lods
loopne
enter
das
in
out
test
or
testl
mov
pop
pop
mov
fmull
sti
jl
outsb
jge
sub
repnz
icebp
pop
or
xor
fisubl
lods
or
std
jmp
js
jmp
push
pop
daa
add
xchg
fldt
xor
push
lock
movsb
push
pop
cmp
flds
cmp
mov
adc
cli
or
out
sbb
cwtl
cmp
faddp
push
pop
cmp
out
out
xchg
or
xchg
jmp
repz
fstl
imul
push
rcrl
lods
and
into
shl
sbb
insb
pop
jecxz
outsl
push
jns
das
inc
shrl
push
pop
and
in
push
push
ret
dec
cmp
inc
shr
xor
loope
add
movsl
cs
fdivs
xor
enter
cmp
aam
clc
cld
or
fdivs
daa
sub
lods
mov
movb
lds
out
in
dec
pop
sbb
inc
xchg
cltd
xchg
xchg
dec
adc
push
shlb
xor
roll
sbb
adc
in
xor
jp
es
push
sub
push
int3
cmp
sti
inc
insb
ss
sbb
mov
sbb
mov
xor
in
cmp
scas
mov
jp
ja
sahf
ds
jb
icebp
sbb
iret
cmpsl
sub
and
out
sub
xchg
rcr
ja
std
dec
jle
loopne
add
mov
ret
xchg
pop
test
pop
inc
lea
xchg
jecxz
imulb
pop
pop
and
fucom
jge
and
aad
push
cltd
mov
mov
outsl
jb
add
jae
adc
test
mov
xor
xchg
xchg
xor
xor
push
lea
adc
into
cmp
loope
sbb
push
dec
adc
xor
xchg
clc
push
bound
xchg
out
push
mov
mov
xchg
cs
pop
aas
add
mov
push
scas
dec
mov
stos
aam
mov
gs
mov
lret
bound
or
hlt
scas
jne
jg
pop
mov
enter
jnp
inc
add
jmp
lods
cmp
sbb
imul
pop
inc
mov
insb
mov
sub
lahf
std
arpl
push
sbb
iret
push
orps
fs
rolb
mov
cmpl
jg
in
mov
gs
jecxz
ds
mov
push
mov
out
fcmovnb
push
xor
inc
jecxz
sbb
inc
dec
pop
stc
xchg
jmp
js
lods
fstp
sub
xchg
nop
mov
stos
dec
mov
jl
pop
dec
xlat
adc
cltd
js
sbb
adc
rclb
stos
jl
cwtl
scas
mov
push
arpl
pushw
es
lret
push
jecxz
sarl
movsl
mov
in
in
out
cmp
mov
jg
cmc
cmp
mov
and
das
add
shll
mov
xor
sbb
mov
dec
cwtl
jecxz
mov
pop
inc
push
mov
xchg
xor
inc
pushl
cmp
cmp
je
pop
cmpsb
sarl
add
shll
lds
nop
jb
fwait
daa
shrl
out
jmp
leave
das
xchg
push
call
out
xor
xchg
fwait
inc
outsl
sbb
dec
jl
or
dec
movsl
inc
fwait
fwait
xlat
xor
xor
and
inc
enter
mov
push
xor
inc
pushf
out
dec
cmc
mov
adc
mov
mov
xor
xchg
xor
jbe
imul
dec
push
ficomps
das
movd
lret
repnz
sbb
push
test
fdivrs
std
push
popa
mov
or
fwait
cmp
cmp
sbb
mov
mov
push
jmp
xor
xchg
mov
and
aas
cmp
ss
pop
pop
ret
out
mov
pop
xchg
cmp
jne
popf
repz
cltd
push
inc
lea
rolb
ret
jle
in
fisubrs
cmp
stos
mov
mov
push
pop
fcmovnu
ret
divl
inc
cmp
mov
stc
xor
add
xchg
outsl
and
push
inc
mov
movsb
sub
xor
sub
and
mov
lock
cmp
jne
push
popa
lcall
loopne
cmp
jns
daa
add
shl
cmpl
jo
jmp
lahf
jmp
scas
pop
scas
cwtl
pusha
pop
xchg
pop
inc
mov
push
cmpsb
jmp
or
xlat
mov
loop
mov
testb
or
add
lret
lock
lods
mov
iret
add
mov
les
cmc
ret
and
sub
gs
cmc
mov
mov
fnsave
push
je
add
jo
aam
add
jmp
lret
jo
outsb
xchg
cmc
jl
outsb
repnz
add
push
or
sbbb
mov
gs
jno
mov
adc
sbb
loopne
xchg
xchg
add
jb
fildll
mov
pop
gs
into
pop
les
cwtl
jecxz
stos
pop
cmp
pop
insb
loope
mov
imul
addr16
cmp
stc
add
or
jb
push
les
add
lea
xchg
xchg
inc
insl
rcll
inc
cmpsl
xor
jle
lcall
outsl
shlb
imul
addr16
mov
loope
xchg
or
xchg
mov
or
aad
push
rcll
and
stos
push
mov
mov
lods
pop
test
scas
mov
pop
inc
cmpsl
xor
push
fistpll
sahf
jb
mov
jp
rol
lahf
xchg
stos
shrl
xor
push
fsubrp
ret
xchg
stos
xchg
mov
dec
inc
pop
xor
in
lcall
xlat
test
lahf
add
cli
jnp
or
mov
push
insl
outsl
xchg
fcmovbe
or
and
dec
cli
cmc
aad
push
mov
daa
and
xchg
jae
inc
xor
mov
dec
jne
or
imul
push
sub
jmp
sub
add
sbb
lock
hlt
dec
adc
in
fcmovu
insb
or
mov
shrl
notl
push
sbb
lods
pushl
insb
mov
inc
insl
std
ret
popf
mov
inc
xchg
dec
insl
decl
jns
inc
dec
pusha
fdivrs
inc
xchg
and
jmp
pop
shrl
fsubrl
imul
push
out
mov
iret
inc
xchg
jno
xchg
sub
ret
push
sbb
xchg
xchg
mov
jno
jbe
repnz
jbe
outsl
mov
add
add
cmp
ret
cmp
imul
in
add
xchg
adc
push
adc
xchg
sub
scas
loop
sarb
hlt
ficoml
sbb
xor
jge
push
jne
sbb
push
pushf
fisttps
sti
mov
andb
push
int3
sti
mov
dec
pop
jns
pop
jmp
in
out
xchg
stc
iret
int
repnz
lods
dec
lcall
mov
sub
dec
stos
mov
lahf
xchg
sub
enter
fiadds
in
xor
jbe
sub
inc
adc
jmp
popa
addr16
test
fsubl
gs
inc
sti
pop
add
andl
clc
es
add
mov
ret
pushf
mov
sahf
pop
addr16
mov
inc
mov
mov
and
push
mov
pop
lods
push
dec
pusha
xlat
dec
push
hlt
test
jmp
pop
xchg
and
or
test
jns
push
mov
stos
scas
gs
std
test
hlt
ljmp
xchg
fwait
cmp
push
xor
jb
sbb
stos
xchg
in
jp
mov
cld
ss
scas
lcall
clc
clc
sbb
and
movsb
rol
das
xor
out
or
xor
dec
or
xchg
je
push
out
cmpsb
push
pop
push
idivl
and
cs
lahf
jge
push
mov
mov
jmp
rolb
dec
mov
out
test
imul
add
add
push
add
aaa
inc
sbb
push
enter
mov
cs
nop
outsl
mov
adc
into
in
jnp,pn
fisubrs
movb
insb
sbb
sub
dec
mov
or
sbb
pop
jecxz
cmpsb
test
adc
fnsave
mov
sbb
xchg
clc
sbb
rcrl
cmpsb
in
test
je
cs
mov
nop
rorb
adc
dec
xlat
repz
pop
or
jns
sub
mov
dec
out
add
std
jp
cmpl
aam
xor
mov
stos
xor
sbb
and
aam
and
jo
cs
fucomp
mov
add
hlt
adc
outsw
cmpsl
or
push
movsl
add
mov
pop
jge
loop
pusha
jbe
cmp
aad
loop
sub
lret
ret
push
gs
mov
cli
xor
mov
jo
push
les
sarb
xchg
repz
loopne
ficoml
lahf
mov
int3
adcl
in
push
in
rclb
and
je
mov
insl
enter
lea
or
imul
test
stos
aaa
mov
cwtl
out
imul
outsl
pushf
jge
jle
adc
jo
outsl
mov
sub
loop
xor
pusha
lret
mov
xlat
cli
mov
dec
negl
in
scas
bound
cmc
in
push
sub
mov
loop
lahf
fs
std
pop
adc
add
pop
test
pop
lock
xchg
test
dec
sahf
xchg
or
xchg
out
xor
xor
sbb
push
add
pop
dec
add
xchg
and
sub
repnz
inc
fs
les
inc
pop
clc
loope
and
fiaddl
push
cmp
jne
repnz
adc
shrl
sub
sub
clc
imul
mov
das
sub
jg
test
pop
xchg
jae
push
stos
mov
xchg
sbb
mov
stos
jo
ss
shll
test
xchg
mov
mov
pop
fdiv
pop
stc
fiadds
push
or
ja
imulb
js
data16
stos
insl
inc
mov
push
jno
dec
dec
cltd
sbbl
pop
or
popa
cmp
adc
add
jo
stos
fwait
cmc
das
sbb
outsb
cmp
in
mov
mov
adc
std
pop
xchg
loop
xlat
arpl
ja
sub
add
add
out
mov
cmp
xchg
loop
aaa
insb
hlt
fdivl
lea
fadds
or
push
push
mov
add
jbe
repz
gs
in
mov
dec
dec
push
lods
jns
mov
add
sbb
lret
fisttps
das
fldenv
pop
icebp
jbe
sahf
sti
mov
push
xchg
and
lcall
dec
cmp
push
scas
loopne
outsl
or
ss
cld
pop
hlt
mov
push
pop
test
jl
int3
hlt
jns
bound
int3
outsl
iret
mov
fyl2x
jo
mov
mov
pushf
pop
in
xchg
mov
fwait
push
jge
cmp
and
inc
out
enter
adc
inc
ror
jl
bound
test
pop
ljmp
pop
mov
int
fwait
push
xor
in
inc
sub
fwait
adc
dec
mov
dec
mov
or
loopne
scas
mov
sbb
push
insl
scas
enter
jge
call
inc
jecxz
jae
movsl
mov
xor
out
out
shll
lods
push
sahf
xchg
fistpl
adc
push
mov
add
std
adcb
pop
fisttps
push
bound
icebp
clc
and
cmpsl
test
shl
lock
push
dec
mov
int3
add
adc
adc
mov
mov
jo
and
addr16
push
and
adc
mov
sub
xor
adc
stos
inc
subl
mov
inc
and
std
mov
xor
fcmovnbe
dec
xchg
add
das
mov
arpl
pop
xor
cmp
jb
sub
repz
sbb
mov
xchg
and
xchg
mov
adc
into
stos
and
sub
push
or
mov
cmp
sub
mov
add
pop
testb
cmp
ljmp
or
add
mov
jns
test
movsb
pushl
jg
xchg
dec
push
jg
lods
pop
fimull
inc
adc
pop
push
cmc
out
movsb
fimuls
fistpl
pop
aam
push
push
out
test
inc
lock
xlat
adc
js
xchg
nop
push
fimuls
cmc
dec
xchg
scas
push
inc
cmpsl
jbe
mov
adc
jmp
cltd
inc
aaa
data16
cmp
aam
add
daa
cmpsl
mov
outsl
jl
sbb
cli
adc
push
ds
idivl
addr16
pop
jbe
sub
in
int3
call
roll
mov
loope
aad
bound
sub
icebp
pop
sub
jg
imul
and
int
sub
fucom
ret
stos
arpl
fcomps
loop
jae
sbb
loop
sub
call
and
add
outsl
sbb
xor
popa
cmp
add
lret
adc
sbbb
mov
sahf
adc
adc
sti
out
jnp
insl
lret
aaa
adc
xchg
lret
faddl
bound
shl
jbe
idivl
das
dec
repz
imul
movsl
stc
jno
add
sub
pop
data16
fs
int
add
and
pusha
mov
fsubs
cmp
mov
adc
push
xchg
pop
or
mov
sub
push
jmp
cmpsl
dec
scas
cwtl
aad
pop
aam
imul
cmp
lock
stc
mov
or
pop
mov
add
xchg
sbb
dec
fdivp
push
adc
ljmp
push
inc
xlat
and
lret
rorb
xchg
sbb
jbe
dec
lahf
es
test
daa
push
jbe
aam
adc
test
mov
test
pop
push
xchg
jns
xchg
ret
or
xor
subb
cmp
sbb
pop
aaa
fs
out
mov
cs
inc
fists
lret
or
sbb
call
adc
gs
sub
xchg
rcrb
xchg
mov
pop
or
pusha
test
push
dec
stc
mov
inc
int3
push
dec
outsb
push
lcall
testb
popf
inc
jne
sub
pop
mov
mov
lahf
ret
pop
mov
lods
xor
adc
xchg
sub
jge
in
cmp
jns
loope
scas
data16
imul
cld
imul
push
lret
xor
decb
in
ja
movsl
or
dec
in
xchg
in
mov
xchg
pop
fistpll
ds
hlt
and
addr16
fdiv
pushf
fwait
push
cmp
cmpsl
das
cld
inc
or
mov
rclb
ret
popf
idivl
mov
mov
xchg
push
fs
dec
daa
xchg
dec
stc
dec
gs
and
dec
pop
push
daa
ljmp
xor
inc
daa
dec
outsb
cli
sbb
sub
cmpsl
outsl
ja
bound
sbb
mov
dec
in
jp
mov
or
xor
mov
ficoml
add
or
or
pop
cmp
mov
inc
push
lods
addr16
jnp
jl
mov
inc
add
in
lcall
mov
ljmp
push
add
popf
add
loope
xchg
fbstp
outsb
out
or
add
pop
push
dec
jbe
mov
dec
xchg
mov
nop
or
in
add
push
or
aaa
xchg
stos
popf
jg
adc
cmp
xor
xchg
out
or
out
or
ljmp
fucom
insl
movsb
sarl
fsubs
or
scas
inc
faddl
rol
leave
cmp
push
sbb
aam
daa
enter
hlt
adc
add
outsb
pop
pusha
dec
lods
lret
push
xor
fwait
xchg
in
mov
and
mov
fcmovbe
movsl
mov
daa
mov
mov
scas
aas
aas
mov
or
outsl
and
mov
aas
or
or
lret
sub
adc
shrl
push
shr
xor
loop
jg
lds
adc
addr16
push
and
leave
xchg
fcom
es
mov
loopne
pop
jno
pop
icebp
push
xor
aam
dec
lcall
mov
fnstenv
push
and
cld
jmp
mov
aas
sbb
enter
addr16
mov
test
stos
adc
dec
fcoms
rcrb
test
push
xchg
pop
iret
cmp
loope
xchg
sub
cld
cmpsb
shll
int
mov
jecxz
cs
or
mov
adc
lea
adc
inc
gs
dec
adc
add
mov
scas
inc
ljmp
inc
loope
jle
jne
gs
mov
dec
or
imul
cmp
aas
loopne
rorl
ret
xchg
cld
lret
cmpsb
sub
pop
cmp
outsl
cs
jle
jo
inc
mov
gs
vmread
ds
std
fs
fyl2x
mov
loope
outsb
lods
inc
push
jp
xor
daa
inc
enter
std
arpl
dec
jno
jl
or
xor
dec
fwait
push
jnp
stc
or
pop
mov
outsb
dec
cmp
xchg
mov
mov
xor
sarb
sbbb
cmpsb
add
mov
jnp
dec
adc
add
inc
mov
loope
sti
js
das
pop
in
jo
xchg
and
xchg
and
cmp
js
and
cmpsl
mov
stc
ret
das
shll
and
clc
and
sahf
insl
ljmp
outsl
ja
lret
add
push
cmp
arpl
sahf
sbb
push
mov
call
xchg
rcll
xchg
or
js
jle
inc
add
push
sub
iret
sbb
in
or
inc
pop
xor
inc
movsl
sub
jmp
xor
mov
and
push
hlt
out
push
xchg
pop
mov
xor
push
xchg
dec
push
cmp
mov
call
repz
and
jmp
dec
pop
sub
push
push
cmpsb
xor
cmpl
adc
jmp
sbb
imul
cmp
inc
cmp
aam
fwait
lods
xchg
push
test
xor
xchg
pop
cmp
in
loop
sbb
arpl
pop
inc
dec
xor
dec
or
js
subb
pop
jecxz
jle
jno
loope
cmpsb
repz
pushl
jl
lods
ljmp
and
jbe
mov
mov
adc
cmp
rcll
subl
and
repz
hlt
sub
clc
or
in
push
daa
xchg
xchg
xor
jae
lcall
mov
mov
adc
clc
out
jne
cmpsb
cmp
sbb
xchg
or
adc
jecxz
ja
lcall
and
aam
mov
pop
fildll
es
sbb
sbb
rcll
mov
push
stos
or
lock
andb
test
ret
sbb
push
mov
mov
pop
test
mov
loope
xchg
push
mov
ficoml
mov
sbb
ja
jno
int
xor
push
sbb
std
and
mov
mov
test
jle
dec
cld
or
xor
fists
dec
push
cmp
fisttps
das
jo
or
pop
aaa
cltd
mov
gs
stos
popa
pop
and
hlt
js
xchg
dec
xchg
test
test
and
sub
and
mov
insl
mov
sbbl
add
pushf
in
mov
stos
cmpsb
adc
aad
and
enter
pandn
cmp
cmc
add
mov
cli
fdivs
jg
nop
out
movsl
push
lret
lods
sbb
scas
aaa
mov
outsl
repz
jle
cmpsb
and
jmp
mov
lahf
rcl
enter
cwtl
mov
ret
push
dec
out
negb
addb
idivb
nop
and
cmp
imull
jne
aas
fsubrs
popf
lods
add
sbb
adc
inc
movsb
sbb
idivb
loop
mov
add
pop
xchg
push
mov
int3
push
cltd
adc
or
inc
mov
out
aam
mov
loope
jmp
or
rcl
push
lcall
cltd
jb
and
stos
cli
sub
fildll
adc
jmp
inc
shlb
out
and
pop
mov
jnp
data16
enter
push
xchg
outsb
adc
mov
sub
shlb
not
scas
mov
test
inc
std
sub
mov
xor
stos
jge
push
fistl
mov
stc
in
call
jecxz
cmp
adc
jl
filds
inc
cmp
push
aad
repnz
mov
and
rol
dec
scas
mov
or
aam
mov
imul
mov
ds
dec
fucomp
mov
xor
ljmp
inc
push
jcxz
jbe
or
sbb
xchg
xchg
jmp
xchg
fldt
sti
inc
pop
mov
dec
les
jbe
cwtl
sbb
pop
lahf
jb
loope
dec
jle
iret
movsl
ror
popa
ljmp
sbb
lahf
aam
jne
xchg
inc
xchg
ret
movsl
fsubr
mov
xor
cmpl
mov
adc
mov
test
and
aas
push
or
or
sar
or
pop
into
rcr
notl
movsl
push
and
enter
in
stc
dec
stos
jl
rcl
ja
mov
cmp
cmp
out
cmp
sub
lods
push
mov
dec
popf
jbe
cmpsb
repnz
fs
mov
inc
pop
pop
pop
dec
ror
test
xor
std
mov
push
andb
mov
and
aaa
movsl
fcmovb
gs
and
roll
insl
adc
and
xchg
scas
pop
sbb
push
stos
lea
repz
dec
jns
popa
jge
add
jmp
pusha
test
pop
jle
aam
adc
jae
dec
stos
add
popa
and
js
add
cmpsb
stos
sti
xchg
test
mov
lcall
ss
mov
dec
sbb
fimuls
xor
push
jnp
clc
rcr
mov
jb
cmp
pop
ud1
xchg
sbb
and
mov
mov
popf
cs
xor
push
call
jno
int
mov
fimuls
and
mov
xor
sbb
icebp
push
cwtl
sbb
inc
push
jmp
add
in
outsl
add
nop
fsts
ds
push
test
push
in
das
pop
fwait
or
popa
clc
jmp
adc
into
hlt
sti
les
stos
dec
cmp
mov
or
xor
cmp
imul
popa
sub
outsl
jmp
aam
add
adc
adc
je
jns
cld
xor
adc
adc
sub
fcmovnb
mov
mov
jecxz
and
mov
cmp
scas
testb
dec
jmp
stc
or
mov
sbb
adc
mov
lea
cltd
jmp
jle
xchg
mov
mov
fdivrp
xchg
stos
mov
mov
sub
sub
stc
pushl
loop
fs
das
mov
push
arpl
pop
mov
dec
shlb
mov
push
jno
test
and
xchg
and
sub
inc
or
cmp
push
or
popl
inc
pop
shrl
imul
pop
fdivs
lods
jns
push
and
xchg
pusha
and
insb
pop
cld
sbb
ljmp
inc
cmp
xor
outsb
xor
xor
bound
sbb
je
ret
int
lcall
test
mov
cli
ljmp
add
jns
pop
add
cmc
xchg
xchg
nop
test
xor
sub
push
inc
inc
dec
and
data16
aaa
xchg
mov
sub
sbb
cmp
mov
xchg
divb
mov
hlt
dec
and
inc
leave
addl
mov
rcl
fdivs
xor
addr16
pop
cmp
mov
or
sbb
imul
ret
sbb
cs
out
sar
imul
pop
ret
arpl
and
xchg
std
adcb
fisttps
adc
push
pop
inc
in
rcrb
xor
mov
sub
xor
cmc
xor
dec
push
mov
repnz
in
jbe
outsb
xchg
mov
xlat
jno
mov
mov
outsl
inc
in
jnp
add
pop
int
addr16
mov
push
add
pop
and
fsts
sti
push
jp
popf
or
pusha
cltd
icebp
mov
mov
pop
add
aad
ljmp
push
mov
int3
data16
out
inc
les
fmuls
mov
mov
push
jno
daa
push
mov
stos
and
enter
jnp
sub
pop
sbb
add
mov
dec
push
aam
push
ficompl
in
pop
mov
cmp
dec
movsb
mov
sbb
xchg
cmp
notb
lret
jbe
fwait
testl
pop
mov
rorl
adc
cmpsl
sbb
dec
loop
and
or
xor
dec
pop
nop
adc
clc
aaa
ja
stos
shll
pop
adc
inc
lahf
mov
fcomi
or
clc
sbb
pop
popa
xor
pusha
ds
cmpsb
dec
xchg
inc
arpl
or
jb
fistpll
jmp
pop
movsb
inc
sahf
sub
inc
insl
test
mov
aaa
enter
pop
mov
mov
arpl
cmp
in
push
jmp
cmp
xor
clc
je
iret
mov
push
add
je
mov
cmp
mov
jl
cmp
xchg
jb
mov
aas
sub
ja
and
adc
dec
ds
imul
lods
lock
sub
shlb
push
xor
scas
das
hlt
add
xor
ljmp
rorl
and
cmp
jecxz
jb
xorl
push
pop
add
aaa
std
xor
pop
dec
add
add
push
inc
jle
test
xchg
fidivl
mov
outsb
stc
fnstsw
jae
xor
pop
and
add
ror
insl
sysret
xchg
push
adc
fisttpll
jo
inc
ret
dec
jl
or
xchg
popf
rcrl
jno
das
pop
dec
dec
sbb
bswap
add
into
jg
clc
inc
lcall
mov
dec
mov
xor
out
rcrb
popaw
sbb
in
push
or
repnz
mov
fcompl
mov
mov
mov
push
int
xor
push
push
sbb
es
ss
xor
outsl
rolb
push
add
fimuls
out
in
stc
stos
inc
lret
movsb
push
xchg
inc
stc
mov
aaa
inc
sar
aad
pop
ss
mov
xchg
bound
xor
sbbl
adc
sub
mov
inc
jmp
inc
xchg
in
add
mov
in
and
lock
mov
ret
fwait
push
daa
mov
and
inc
push
mov
negl
jl
ja
sbb
xchg
dec
fiaddl
mov
fsubrs
mov
xchg
pop
adc
add
mov
and
push
push
mov
out
sahf
push
out
inc
adc
xchg
adc
xchg
push
fidivrl
cmpsl
mov
rclb
inc
outsb
test
sub
call
jb
lock
jg
aaa
data16
ljmp
or
xor
notb
mov
jge
mov
push
sub
mov
or
insl
movsb
shrl
imul
dec
int
and
mov
cmp
mov
rcrl
imull
or
mov
dec
outsl
cmp
sahf
pop
sahf
shl
cmpsl
dec
or
insl
mov
sub
cmpl
pop
cmp
mov
cmp
xorl
insb
loope
inc
lods
hlt
pop
cwtl
pop
mov
sbb
mov
mov
ret
sub
mov
mov
pop
ds
sahf
mov
cwtl
and
pop
jge
add
push
dec
rcr
dec
pop
cmp
in
stos
mov
lahf
lret
dec
sub
xor
loop
subl
sbb
mov
test
icebp
hlt
cmc
sub
movsb
out
mov
aas
lods
sbbb
jle
cmp
cmp
sub
leave
andb
adc
sbb
jne
ret
mov
aam
in
dec
leave
idivl
dec
call
pop
je
stos
sub
repnz
and
jnp
pop
cmp
cmp
outsb
mov
add
adc
into
sbb
stc
in
std
sbb
push
push
xor
mov
ret
dec
xlat
lret
jmp
imul
mov
push
mov
xor
pop
loop
sbb
scas
testb
xor
xchg
sbb
and
dec
dec
add
mov
pop
out
push
addr16
mov
test
add
xchg
mov
stc
xchg
faddl
imul
inc
dec
push
push
fistps
repnz
xor
aam
data16
daa
push
aas
int3
pop
icebp
js
jmp
test
sbb
mov
ret
ljmp
sbb
cmp
cmpsb
mov
into
jge
cmp
insl
dec
ret
insb
iret
push
enter
pusha
les
lods
pop
or
pop
mov
sub
mov
lods
sub
dec
into
fisttps
jo
pop
xor
xchg
loopne
push
jg
sbb
scas
pusha
stos
repz
and
jb
mov
shlb
sbb
cmp
das
in
shll
and
jmp
das
push
mov
sbb
movsb
and
outsl
mov
fisubs
sbb
inc
xor
sti
aam
es
dec
pop
repz
ds
insl
pop
mov
mov
fs
divl
hlt
lods
or
add
js
lods
das
sub
sahf
scas
out
xorl
arpl
negb
adc
xor
outsb
xor
pop
cmp
repz
test
cltd
xchg
dec
xor
test
adc
mov
dec
pop
outsb
lds
or
push
sub
xchg
jbe
xor
dec
imul
fistl
rolb
xchg
xchg
push
cs
out
xchg
inc
test
or
mov
enter
and
lcall
lods
outsb
addb
icebp
je
sbb
mov
push
pop
ljmp
in
in
push
mov
push
dec
aaa
in
movsl
and
rcrb
repnz
pop
pop
outsl
inc
fstpt
and
adc
add
jnp
insb
xchg
repnz
lock
and
jp
sahf
cmc
sub
lods
pop
shll
movsb
mov
jg
roll
adc
lods
sub
jg
ret
jle
mov
hlt
xorl
outsb
mov
dec
pop
dec
and
sbb
scas
mov
add
js
sarb
pop
and
aad
xor
das
mov
sbb
daa
jnp
mov
xor
dec
out
push
aas
sub
mov
int
fwait
ljmp
mov
stos
mov
hlt
arpl
enter
cmpsl
bswap
pop
mov
cmc
mov
mov
rcl
cs
lahf
dec
sbb
jg
add
mov
addl
movsl
mov
and
xor
loopne
jp
adc
cmp
arpl
ss
sbb
sbb
mov
mov
xchg
inc
mov
and
push
pop
pop
jle
into
add
cmp
enter
jns
xchg
xchg
mov
mov
fistps
mov
add
pop
cld
ljmp
push
inc
in
push
rorb
imul
leave
decl
adc
dec
jb
mov
pop
clc
mov
cmpl
jne
inc
sub
aas
jae
mov
jp
lret
add
divb
addr16
loopne
aaa
arpl
ret
iret
push
aam
jge
loop
xchg
lods
inc
aaa
push
out
jb
ret
and
movsl
push
and
mov
fnstcw
fnsave
jo
sbb
mov
in
jp
aaa
adc
lds
mov
lret
js
ja
or
mov
outsl
cmp
cmp
push
jg
or
jle
cmp
mov
cwtl
inc
pop
dec
movsb
int
cmp
repnz
xchg
add
cmc
orb
fisubl
cli
arpl
xlat
lea
fs
push
ja
jb
mov
mov
and
stc
mov
cwtl
testl
inc
fists
int
add
and
aad
push
push
or
adcb
ljmp
sub
arpl
and
and
lods
push
jnp
inc
insl
lods
or
mov
loop
mov
mov
fcomi
sbb
aas
in
cltd
jo
arpl
lods
mov
hlt
xorb
jb
cmp
mov
in
and
fcompl
sbb
loop
add
std
xchg
push
and
lcall
ds
cmp
inc
fs
jecxz
pop
pop
in
pop
xchg
xor
mov
scas
mov
stos
ret
sbb
lods
fnsave
dec
add
imul
sbb
stc
mov
pop
push
fsubrs
cmp
cmpsb
push
loop
and
dec
lret
xchg
mov
add
dec
outsl
sub
insl
pop
insb
mov
xor
mov
sbb
mov
test
xor
std
les
call
fsts
push
stc
xchg
mov
das
dec
xchg
ds
je
inc
sbb
push
mov
frstor
or
rcrl
push
decl
lcall
adc
push
out
mov
xchg
fildll
mov
lret
and
ss
adc
pusha
and
cmp
cmpsb
mov
inc
dec
stos
ljmp
pop
insl
je
jmp
mov
mov
clc
mov
loop
sbb
mov
popa
or
es
shl
rcrb
adc
sub
xchg
dec
add
daa
mov
mov
add
sub
js
loope
xchg
inc
sub
mov
stos
imul
mov
stc
cld
xor
xor
mov
not
sub
mov
orl
call
addr16
add
daa
dec
adc
loopne
sahf
pop
test
jg
and
xchg
movsb
and
shll
xor
cmpsl
pop
add
popa
aaa
pop
ja
loope
mov
dec
cld
cmp
mov
pushf
aam
cli
int
xchg
or
or
pop
mov
imul
inc
push
stos
ja
aad
outsl
ror
leave
inc
sub
xor
aad
add
shlb
in
daa
adc
mov
stc
pop
sub
aam
ljmp
icebp
int3
dec
add
and
push
jo
xchg
pop
call
dec
pop
ja
das
loop
inc
sub
leave
mov
mov
out
pop
sub
nop
xor
ja
jle
mov
inc
jo
mov
xchg
bound
in
jae
sub
mulb
dec
int
imul
or
out
sarb
les
inc
repz
sti
out
cmp
mov
das
stc
sbb
ljmp
push
push
lret
lcall
push
outsb
push
dec
shl
aad
lea
push
push
fnsave
call
jge
aaa
sub
xchg
test
outsl
lret
dec
push
jns
xor
push
cmp
into
push
or
jge
inc
jb
insl
lret
dec
and
sbb
cmp
aas
clc
fwait
loop
inc
lods
shlb
into
jecxz
fnstenv
mov
shlb
gs
xor
std
jmp
push
and
push
lret
and
je
push
pop
and
and
sub
push
data16
out
push
jb
inc
lahf
in
bound
cmp
mov
mov
mov
divl
shl
lahf
out
pushl
jle
cmp
xorb
add
mov
mov
popf
test
out
iret
hlt
loop
sub
xor
jecxz
shlb
mov
mov
into
mov
leave
or
repz
mov
cld
test
push
inc
or
xchg
push
out
call
inc
add
loop
icebp
lock
adc
jg
ja
sbb
xor
cli
in
int3
clc
or
push
shrb
sahf
adc
jecxz
or
ror
push
mov
stc
movsl
out
push
fildll
cli
outsl
adc
push
les
addr16
inc
int
pop
inc
test
jl
push
sub
adc
imul
mov
xchg
or
pop
inc
push
cltd
sbb
adc
mov
jbe
mov
mov
add
sbb
cmc
push
scas
push
dec
xor
jb
lret
test
insb
mov
js
or
insl
insl
shr
push
lahf
inc
and
in
mov
icebp
mov
dec
enter
mov
call
sbb
nop
mov
lock
push
add
subl
lret
push
mov
lcall
fdivs
mov
mov
push
cld
push
jle
pop
pop
rol
hlt
shl
xchg
out
fbstp
and
adc
inc
cmp
dec
lahf
rcll
push
dec
repz
movsl
es
jne
mov
adc
jecxz,pt
aas
push
mov
jg
mov
nop
mov
pop
cmpsl
pop
sbb
mov
add
xor
push
cmc
lea
sahf
add
hlt
std
and
cmp
and
mov
cmp
lahf
inc
or
cmp
xchg
inc
jb
pop
fimuls
aam
adcl
cmp
mov
jb
mov
jecxz
out
cs
and
outsl
pop
sahf
out
adc
clc
jb
adc
pop
xor
inc
jmp
jbe
mov
enter
ret
xchg
mov
sub
or
out
push
jp
in
int3
pop
cmpsb
out
cmp
icebp
push
icebp
loop
jle
dec
dec
jge
clc
and
adc
lock
inc
mov
mov
xchg
push
mov
arpl
jecxz
cld
or
scas
sub
test
adc
pop
sub
mov
xchg
and
sbb
mov
addr16
jnp
pop
repz
cwtl
push
sahf
cmp
jbe
idivl
es
sahf
repnz
fs
cltd
xchg
int3
mov
in
mov
mov
test
mov
mov
pop
inc
stos
mov
sub
test
sbb
xchg
jg
scas
or
daa
jge
cwtl
out
sbb
loope
jne
out
call
shrb
mov
fs
and
mov
test
out
dec
mov
aad
mov
stos
cli
xor
in
arpl
push
das
lret
mov
es
inc
cmp
mov
fidivrl
cmp
stc
or
jbe
rep
cmc
inc
jp
or
arpl
repnz
popf
frstor
push
jb
add
stc
stc
cmp
into
or
rcr
mov
mov
adc
mov
sbb
adc
pop
mov
or
stc
jo
fimull
or
push
movsl
push
sbb
clc
fdivr
sbb
in
test
push
pop
fsubrs
fmull
mov
imul
fnstenv
mov
dec
adc
dec
stos
ja
rol
lcall
mov
and
ds
gs
or
xor
mov
xchg
or
rorb
dec
cmpsl
push
stos
lock
je
mov
ret
mov
xor
mov
dec
xor
jns
mov
lret
mov
out
inc
dec
mov
jnp
lods
mov
cltd
add
scas
std
cmc
test
lods
push
fists
imul
mov
das
xchg
fcom
jnp
or
dec
movsb
cmp
loop
sub
push
add
aam
xor
add
pushf
jl
insl
sbb
mov
movsb
lods
stos
movsl
into
xchg
jns
into
sub
adc
pop
cmc
fcomps
sti
insb
push
push
mov
sti
jge
xchg
mov
pop
inc
out
mov
into
insl
imul
and
int3
jno
andps
shrl
cmp
jb
ljmp
stos
jno
dec
add
and
lock
loope
jb
fdivp
mov
push
cmpsl
sbb
cli
sbb
xor
cli
fldt
jno
in
mov
dec
subl
mov
mov
imul
test
push
lcall
jg
loope
ret
lock
add
dec
fucomip
test
stos
inc
bound
dec
je
orb
stos
mov
daa
data16
js
jo
std
cwtl
scas
xor
clc
cld
cltd
outsb
mov
mov
in
push
push
inc
sub
imul
lods
stos
nop
in
xchg
imul
sub
sbb
mov
mov
in
popa
adc
adc
mov
pop
pop
cwtl
and
push
xor
repnz
add
add
ficoml
mov
mov
dec
add
psrlq
fnstcw
rcll
fwait
mov
xor
clc
cltd
jae
push
stc
sbb
sub
mov
fadds
push
lret
out
inc
adc
loopne
inc
dec
mov
out
nop
mull
or
iret
dec
push
repnz
xchg
or
xchg
add
xor
popa
dec
div
fisttpl
mov
cmp
out
repz
les
or
xchg
sbb
push
pop
jnp
movsl
test
ja
inc
out
dec
movsb
adc
push
test
les
xchg
ficomps
fdivp
mov
xchg
leave
stc
push
mov
incl
or
mov
mov
sbbl
mov
cmc
movsl
mov
in
push
push
adc
push
test
dec
xor
and
addr16
inc
pop
jnp
mov
push
mov
gs
scas
lret
sub
mov
clc
lods
xchg
mov
das
test
xchg
jmp
inc
xor
jo
bnd
lds
inc
and
sahf
fidivrs
cltd
pop
mov
xchg
mov
lcall
stos
idiv
inc
notb
rolb
cmp
es
out
mov
adc
mov
outsl
sbb
les
add
push
sbb
and
in
ljmp
mov
jnp
or
and
xchg
and
arpl
sar
jne
mov
pop
xchg
fstpl
xchg
je
cli
rcrl
cld
and
push
add
jno
loopne
push
jp
mov
xchg
jge
dec
dec
cwtl
ljmp
lea
insb
inc
ficomps
jecxz
aaa
mov
lret
fldt
lahf
and
mov
rclb
test
lahf
sbb
scas
dec
jb
rclb
loop
arpl
addr16
cmc
bound
pop
es
xor
nop
mov
mov
fidivrs
push
push
les
push
rcrb
repz
dec
lret
aas
jecxz
cs
xchg
clc
fcoms
mov
lret
xor
loop
lahf
xchg
fnstsw
mov
xchg
mov
cmpsb
scas
pop
mov
movsl
fwait
mov
cmpsb
cmp
test
std
push
xor
jns
mov
push
loop
inc
dec
mov
or
scas
dec
mov
aaa
fdivl
push
decl
stc
xchg
es
cmc
and
push
sub
leave
cmp
imul
sbb
push
rolb
sbb
mov
shrl
fcoms
jecxz
sub
shll
pushf
es
out
dec
stos
sub
xchg
subl
int3
dec
call
mov
es
xor
adc
mov
cs
pop
dec
sub
pushl
xor
push
add
pop
imul
out
sub
ss
scas
xchg
cli
cmpl
je
jl
rolb
fsub
xchg
daa
fidivl
and
cli
pusha
push
push
outsb
xchg
and
pop
dec
jno
bound
push
jle
xor
test
outsb
xor
mov
push
rorb
jg
cld
shlb
push
jbe,pt
jl
inc
fwait
sarl
mov
xor
test
xchg
mov
add
inc
loop
jle
adc
push
in
out
mov
inc
cmpsl
enter
test
mov
adc
std
scas
sub
pop
sub
lret
push
pusha
and
cmp
sub
pop
ljmp
dec
test
lock
push
sub
jns
int
mov
cwtl
jp
imul
roll
mov
add
push
jbe
aaa
and
or
jne
fldcw
sub
test
push
popf
cmpsb
and
lret
pop
movsl
sub
test
nop
loope
inc
dec
jae
loopne
ja
clc
lret
mov
testb
mov
mov
jne
xchg
mov
fnsave
xor
hlt
cmp
jmp
stos
mov
mov
cld
mov
mov
lock
push
cmp
shlb
rcll
nop
loope
mov
cmc
cmp
mov
arpl
push
adc
pop
aaa
push
pop
sub
xchg
xchg
adc
or
loopne
pop
in
sbb
fidivrs
pop
mov
adc
notb
loop
lcall
gs
movsb
inc
scas
cmp
daa
and
nop
cwtl
test
mov
xchg
mov
orl
adc
jle
xorb
les
test
push
jb
sbb
mov
scas
inc
add
outsl
add
lea
mov
mov
push
cmpsl
int
scas
mov
scas
fstpl
pop
ja
shrb
out
fsubrl
enter
popf
push
imul
cli
icebp
cld
inc
pop
add
test
out
loope
stos
scas
fmuls
sbb
pop
sub
insb
jmp
std
mov
out
sbbb
movsl
rcrl
lods
imul
pop
fldenv
aaa
movzwl
xchg
aam
popf
push
pop
xchg
daa
neg
pop
addr16
pop
jnp
movsb
jecxz
or
das
pop
add
sbb
jmp
add
pop
mov
bound
mov
jp
xchg
ret
push
les
add
mov
adc
aaa
lods
jg
icebp
adc
and
pop
mov
sahf
inc
sub
dec
out
sub
xchg
nop
ficomps
jmp
pop
insb
xor
xchg
cltd
xor
xchg
jns
in
push
sub
sbb
js
mov
jl
and
ds
add
add
pop
lods
jecxz
sbb
mov
dec
xchg
ret
popf
dec
cmp
bnd
pop
mov
cltd
push
xchg
popw
push
xlat
loop
cmpsb
arpl
or
mov
or
and
fwait
cmp
or
loop
cli
pop
lcall
std
cmp
cld
jecxz
and
jo
inc
mov
lahf
cmp
or
inc
inc
xchg
sahf
addb
pop
add
aam
and
jp
sbb
mov
cmp
jge
mov
arpl
xchg
cld
or
dec
ss
lret
movsl
dec
jnp
and
nop
and
nop
pop
xchg
jg
or
nop
nop
icebp
xor
lds
dec
inc
sahf
or
stos
or
push
jg
out
pop
inc
jg
dec
insb
hlt
xchg
aas
jae
add
pop
cmp
dec
icebp
and
test
repnz
dec
jnp
data16
push
movsb
cli
insl
call
mov
sbb
sub
js
jne
imul
push
pop
iret
push
inc
cmp
in
call
dec
out
lret
lret
jge
lods
loopne
bound
es
sbb
push
cmp
scas
int
js
insb
jnp
cmp
rorb
lcall
adc
push
mov
jp
cld
scas
add
mulb
inc
xchg
and
and
hlt
cmpsl
repz
xchg
fdivrl
push
cmpsb
test
add
ret
aad
mov
cmp
mov
arpl
dec
or
mov
rcr
mov
mov
mov
loopne
mov
jbe
sbb
in
pop
int
jle
fldl
lock
sub
stos
ret
popa
add
ret
outsb
dec
stos
dec
xchg
mov
in
fnstsw
mov
insb
movsl
cmp
xor
imul
aaa
xor
pop
pmulhuw
int3
inc
lcall
fildl
cmpsb
mov
shlb
loope
lcall
jmp
jmp
mov
lcall
orb
arpl
mov
test
xchg
es
js
sub
pop
repnz
movl
or
or
or
stos
pop
inc
shlb
cwtl
in
scas
xchg
sub
inc
scas
pop
cmc
cmp
xchg
test
insl
imul
jae
fwait
aam
sbb
jecxz
mov
divb
xor
jg
insl
jl
out
lret
mov
xor
cli
pop
mov
inc
mov
add
aam
call
adc
leave
iret
adc
lret
int
mov
arpl
mov
out
or
aas
mov
int
jb
cmp
insl
int3
sub
sub
mov
out
out
mov
xlat
jmp
inc
mov
mov
jecxz
sub
sbb
fildll
sub
cli
push
out
mov
daa
push
inc
std
in
mov
and
cmp
xchg
flds
movsb
push
inc
jno
mov
leave
aam
ja
or
xchg
movsb
sbbb
sub
insl
inc
mov
pop
lret
rcrb
cmp
mov
sub
adc
or
add
daa
aaa
sbb
aas
cld
push
mov
lods
push
popf
lcall
cmp
adc
loope
das
inc
movsl
jge
pop
mov
addb
test
inc
cmpsl
xchg
push
and
mov
inc
jg
dec
data16
lcall
mov
xor
cmpsb
push
jp
push
cld
push
adc
faddl
mov
pop
sub
sbb
sub
ret
lret
dec
sub
xchg
add
inc
in
mov
mov
in
imul
mov
ss
jge
cmp
repz
ds
jno
jnp
and
or
cmp
mov
pushf
or
iret
pop
test
inc
cmp
rcll
fiadds
test
pusha
jno
cmp
cmc
ds
fstl
mov
sbb
adc
mulb
outsl
inc
sbb
push
pop
pushf
cmpsl
sahf
mov
hlt
stos
lods
pop
jmp
mov
xchg
push
jmp
cwtl
sbb
sub
push
pop
add
or
imul
inc
or
pop
or
mov
outsb
mov
test
mov
xchg
sub
call
jle
push
sbb
mov
inc
dec
push
pop
test
imul
mov
mov
adc
mov
fildll
lods
mov
cmp
add
enter
jne
mov
dec
mov
mov
lods
inc
mov
frstor
fcmovb
call
in
out
sahf
subl
mov
xor
cmp
dec
mov
das
fidivs
add
add
sbb
lds
inc
in
push
dec
mov
icebp
sbb
jge
fdivrs
aaa
dec
mov
push
jle
iret
push
pop
mull
mov
cmp
and
in
inc
loopne
adc
inc
mov
push
sbb
out
aas
xchg
pop
mov
loope
cld
cld
and
cmp
jge
gs
add
jbe
dec
fildll
fstps
mov
jge
sub
mov
into
inc
mov
movsb
ret
push
inc
xchg
xlat
addr16
mov
mov
js
int3
add
and
lahf
dec
dec
repz
nop
cmp
iret
popf
mov
inc
imul
mov
inc
in
xchg
gs
into
or
aas
pop
dec
or
test
mov
subb
push
pusha
adc
jmp
mov
cmp
adc
mov
orb
rorb
sub
add
add
nopl
xchg
test
arpl
std
cmp
jnp
dec
ficoml
or
mov
dec
fldl
inc
insl
int
call
rorl
call
test
push
mov
mov
sbb
or
or
sub
sbb
mov
inc
sub
sbb
adc
pop
mov
into
add
xor
pop
fcmovbe
stc
movsb
arpl
push
call
push
mov
outsl
mov
mov
add
adc
add
imul
add
mov
in
jnp
lahf
cli
je
hlt
nop
in
gs
jne
or
pop
sbb
outsl
ljmp
push
nop
es
cmc
mov
mov
stc
cltd
cltd
jb
mov
push
dec
out
fs
pusha
jecxz
mov
push
sbb
sarb
push
mov
dec
xchg
jecxz
decb
dec
js
jecxz
pushf
es
jno
mov
js
loopne
push
lock
stc
dec
mov
sbb
stos
popa
jge
jmp
xor
add
loopne
mov
cmc
dec
xor
inc
mov
dec
ss
negl
inc
or
fs
or
sub
xchg
cmpsl
push
aad
mov
mov
mov
je
iret
mov
sbb
cmp
in
outsb
lcall
mov
jl
xor
fbstp
mov
fs
lahf
xor
fninit
jp
aam
aaa
dec
add
dec
enter
and
clc
jnp
xchg
lock
ljmp
lods
dec
bound
loopne
ss
inc
dec
addr16
push
lock
xchg
mov
add
and
mov
lret
aaa
mov
hlt
imul
in
xor
push
jo
adc
jl
sbb
xchg
in
and
insb
jnp
jl
fsubl
test
dec
push
adc
xor
cmp
scas
stos
inc
cmp
mov
mov
sbb
jne
ljmp
pop
push
movsb
cmpsl
pop
and
xchg
push
adc
pop
rolb
fidivrl
pop
insb
xchg
add
xchg
mov
xchg
jg
shr
push
leave
arpl
loop
cmp
sub
mov
ret
dec
fbstp
pop
insb
cli
dec
fcomip
jmp
mov
cmp
test
inc
pop
jmp
pop
mov
mov
sbb
test
pushf
bound
mov
sbb
bound
mov
sahf
mov
mov
dec
mov
jo
push
mov
xchg
sbb
adc
jb
adc
push
movsb
sarl
sub
mov
test
ds
dec
fisttpl
jb
or
aad
xor
pop
jecxz
daa
lds
cmpsb
mov
push
mov
xchg
shl
mov
mov
cmp
in
fdivrs
movsb
pop
jle
or
sbb
lret
mov
jns
mov
test
stos
sahf
fldcw
adc
in
bound
and
aaa
pop
push
ja
pop
dec
repnz
xchg
pusha
ret
dec
popa
mov
push
jns,pt
lods
adc
dec
jmp
dec
mov
cmp
inc
lcall
mov
jno
and
dec
rol
aaa
ljmp
bound
xor
stos
sbb
mov
cwtl
clc
popf
push
or
mov
insb
loope
mov
or
lods
repz
add
lret
dec
lahf
lret
cmp
jae
les
insl
push
xchg
bound
dec
mov
jo
mov
iret
lea
mov
and
mov
push
fisttps
pusha
xor
fistps
push
lret
pop
jge
xor
aad
jl
loopne
sbb
push
out
ljmp
cs
xchg
mov
int3
mov
pop
sub
hlt
cmp
sbb
push
sbb
daa
rolb
rcr
jmp
outsb
sub
hlt
es
cmp
loope
add
mov
nop
fiaddl
adc
test
jmp
popa
ds
adc
loop
out
lcall
add
test
aaa
lret
ss
jno
mov
jo
inc
pushf
lods
push
repnz
push
hlt
test
push
mov
inc
cmc
outsb
gs
ljmp
ffreep
imul
cmpsb
jb
shrl
sub
jl
push
sarb
xor
fs
inc
lds
sub
add
sbb
mov
sbb
nop
testl
dec
movsb
push
mov
aad
aad
popa
nop
cmpsb
cmpsl
clc
push
fiaddl
mov
inc
mov
mov
xchg
shl
xor
jae
sub
xor
in
aam
lds
pop
icebp
sbbl
aam
bnd
mov
out
pop
xchg
repnz
pop
negb
out
mov
repnz
cld
mov
or
jno
out
xchg
into
jmp
rcrb
in
lock
push
dec
cmc
sub
jno
lcall
xchg
sub
loop
pop
dec
test
es
daa
das
lcall
int
cs
pushf
and
scas
test
mov
lcall
shr
sbbb
out
jne
cltd
std
xchg
hlt
inc
inc
push
hlt
mov
shld
je
or
lods
mov
popf
mov
fs
cmp
jnp
jbe
shl
mull
pop
aad
mov
cmp
fs
mov
cmpsb
xchg
cmp
in
scas
out
xchg
add
cmpb
mov
mov
and
clc
inc
mov
fbstp
into
scas
sbb
jmp
rcr
std
cwtl
aaa
pop
je
mov
lret
inc
fwait
aaa
and
mov
loopne
mov
in
jmp
lods
inc
pushf
mov
cmp
cmpsl
inc
mov
sbb
push
data16
popa
pop
cld
jge
test
push
adc
sub
ficomps
push
xor
pop
cs
mov
loop
call
add
sbb
testb
xchg
test
adc
loopne
dec
rcl
mov
test
scas
popf
ret
nop
pop
pop
and
pusha
imull
aad
xor
into
cmp
and
jo
loop
xchg
push
mov
jne
xor
cmp
sub
popf
loop
push
pop
dec
push
adc
mov
das
mov
stos
cmp
int
xor
lcall
int
cmp
dec
push
and
add
int
loopne
and
xchg
cmp
dec
sub
pop
pusha
or
ret
dec
js
pop
sbb
cld
dec
xchg
pusha
and
adc
mov
int3
mov
mov
jecxz
cmp
jns
sbb
sub
mov
pop
insb
sbb
or
call
add
fstp
repnz
jnp
mov
xor
dec
out
mov
lahf
mov
push
pusha
adc
aas
testl
add
outsl
nop
imul
bound
loopne
xchg
jp
into
push
hlt
inc
cmp
arpl
xor
add
xor
insl
pop
mov
fsubl
test
stc
ja
ds
push
lea
push
mov
xchg
and
pop
jmp
scas
lahf
pop
mov
and
mov
jg
mov
cmp
subl
enter
jb
xchg
lcall
int3
cmpsb
jl
jmp
js
mov
push
add
ret
xchg
dec
decl
push
dec
dec
mov
adc
jae
stc
mov
and
or
insl
sbb
in
negb
adc
cmpsl
in
jo
push
insl
bound
imul
pop
dec
jl
xlat
cmpsl
dec
mov
push
jmp
std
in
mov
jns
jno
repz
jmp
push
adc
stc
leave
jge
in
pop
lods
dec
pop
mov
mov
mul
add
and
iret
add
xor
xchg
sbb
sbb
aam
sub
scas
inc
mov
push
aam
push
pop
idivl
jp
mov
cmp
mov
ja
or
repz
add
je
lahf
loope
mov
incl
sub
adc
jmp
mov
push
xor
test
or
pop
fsubrp
xchg
stos
cmp
lods
mov
mov
ret
hlt
testl
or
lret
gs
add
cli
int
sub
sbb
cld
test
mov
fistpll
repnz
push
pop
sti
fwait
test
loope
out
out
xchg
push
add
fdivr
pusha
nop
andb
mov
xchg
pop
mov
flds
shrl
repnz
shlb
lcall
js
xchg
leave
shll
mov
lcall
xlat
pop
imul
incb
loope
pop
ja
test
in
icebp
mov
jns
shll
insl
lds
jne
out
push
arpl
mov
pop
add
and
mov
push
out
aam
xor
sbb
aad
lock
cmp
push
pushf
fwait
insb
iret
inc
ret
addr16
cmp
in
in
iret
cmc
adc
inc
movsb
xchg
outsb
shrl
nop
movsb
adc
sub
divl
ror
push
cmp
mov
inc
imul
and
mov
cmc
push
inc
mov
jno
aaa
sbb
insl
mov
jns
out
test
cmp
add
dec
mov
jl
out
jo
push
loope
push
cmp
cmpsl
xchg
pop
adc
movsb
leave
dec
jbe
sti
pop
xchg
sub
popf
sub
push
push
stc
ds
mov
shll
cmc
push
pop
in
and
in
jmp
jle
jns
pop
xor
sub
test
jge
mov
aas
dec
mov
adc
jne
lahf
mov
and
or
add
iret
test
xchg
xchg
lret
cmc
mov
sarl
lods
push
fnstenv
call
in
dec
xor
fimull
cmp
xor
test
and
imul
andb
inc
pop
xchg
test
aad
dec
cmpsl
aad
dec
lods
cld
cmp
test
inc
rcll
cmp
ret
cwtl
mov
adc
mov
aam
inc
push
mov
pop
cli
pop
mov
nop
sbb
dec
ret
ret
adcb
cld
rcll
xlat
jno
cmp
imul
mov
stos
aas
mov
push
mov
dec
in
push
jg
mov
aas
outsl
push
xchg
ss
jmp
xchg
and
xor
cmp
aaa
int
xchg
add
mov
cmpsb
iret
xchg
outsb
mov
in
aad
ds
or
or
daa
add
inc
mov
sub
adc
scas
shll
mov
sbb
dec
jmp
scas
fimuls
mov
inc
mov
cmp
dec
jno
cwtl
std
and
adcb
out
mov
es
movsb
lea
xor
arpl
sub
push
lods
aas
mov
push
mov
outsb
sbb
pop
add
fst
enter
cmp
outsl
xorb
or
int3
mov
xor
movsb
xlat
insb
cmp
incl
ret
cmp
fs
cs
jg
sbb
and
cs
and
inc
cmp
jno
aas
push
int3
jge
addr16
jae
adcb
inc
hlt
xchg
mov
cwtl
xchg
jae
push
imul
jae
popl
jno
xchg
sbb
dec
in
inc
mulb
adc
das
incb
subb
xchg
fs
add
ja
push
fisttpl
sbb
lds
pop
outsl
icebp
mov
pop
jns
inc
das
jne
mov
aaa
sub
test
xor
ds
inc
ret
fst
add
lcall
push
pop
stos
ret
out
rcrb
or
xchg
leave
dec
jp
ja
fcompl
loope
ss
outsb
mov
scas
cmp
popa
adc
sbb
cmpsl
jge
jecxz
cmp
jge
xor
push
stc
and
in
cmp
clc
das
mov
jne
pop
pop
cld
pop
sbb
addl
inc
dec
push
jb
gs
push
pop
out
jno,pt
or
sbb
outsb
or
jmp
mov
ja
mov
push
inc
in
lock
clc
hlt
mov
daa
fbstp
sub
push
and
lret
andb
adc
enter
inc
out
push
mov
add
in
xchg
sbb
pop
xor
mov
je
popa
jae
mov
push
sbb
rolb
inc
xor
cmp
cmp
cmp
pop
or
call
sub
or
and
mulb
jno
pusha
rclb
sbb
in
push
lods
imul
insl
mov
or
ljmp
and
mov
mov
xor
cwtl
stos
test
pop
sti
cmp
lcall
mov
repz
lock
mov
das
and
ds
push
sahf
xor
fs
stos
data16
mov
dec
bound
jg
push
cmp
pop
pop
pop
or
ds
rolb
push
pop
push
aad
mov
or
add
push
push
mov
rcrl
mov
dec
add
dec
iret
sarb
rcll
jle
jmp
jecxz
data16
jg
pop
nop
xor
js
pusha
dec
rorl
xchg
scas
test
or
push
push
sub
or
data16
push
xor
pusha
nop
fsubl
adc
inc
sbb
mov
push
mov
or
mov
mov
lcall
lock
testb
pop
dec
lods
fcoml
add
stos
loope
out
jbe
xchg
add
addr16
jns
or
xor
je
mulb
in
mov
stos
in
pop
xchg
pop
jo
sbb
dec
mov
push
dec
adc
sbb
pop
jg
data16
int3
and
gs
cs
lock
fisttps
stos
adc
mov
popa
fbld
mov
insl
nop
mov
bound
dec
sti
jmp
jne
cltd
cli
xlat
push
cltd
cmp
xor
test
jmp
pop
std
daa
push
push
inc
dec
scas
dec
popf
faddl
insl
pop
pop
in
push
xchg
aad
or
shlb
repz
mov
es
inc
rol
int
shlb
pop
aad
in
mov
add
inc
push
cltd
mov
enter
ret
mov
pop
add
xchg
in
adc
js
mov
std
jbe
mov
test
xor
mov
inc
xor
fmull
leave
enter
xor
adc
xor
inc
cld
dec
sbb
fstpt
mov
clc
jmp
xchg
mov
inc
sub
xchg
fcoms
pop
les
into
inc
or
jmp
and
lds
add
xchg
inc
cmp
sbb
imul
mov
sti
scas
shrl
mov
dec
popf
sub
ljmp
sbbl
dec
mov
imul
push
rorl
jae
clc
fisttpll
scas
popa
ljmp
flds
dec
cmp
ja
lcall
adc
imul
dec
aam
mov
aam
cmpsl
push
daa
scas
mov
nop
jno
jmp
fmull
aad
inc
rolb
aaa
adc
scas
xchg
cs
xchg
sub
pop
xchg
sub
mov
cmp
fistpll
stos
sub
out
and
sbb
sub
or
adc
inc
sbb
outsl
xchg
add
pop
pop
mov
or
nop
in
aaa
dec
sbb
xchg
xchg
js
out
mov
xchg
sub
movsl
je
out
fstpl
shlb
in
imul
cmpsl
or
cld
and
ret
xchg
or
repz
enter
cmc
test
mov
std
imul
xor
adc
adc
sbb
loope
sbb
out
lds
sahf
xchg
and
sub
stos
dec
ret
xchg
idiv
add
cld
add
lods
and
aaa
pop
mov
sub
inc
adc
shlb
clc
jbe
cmp
jmp
out
add
mov
or
movsl
sahf
movsb
fstl
decl
add
xchg
lcall
out
icebp
add
loopne
clc
push
inc
into
inc
inc
mov
cmpsl
fldenv
xchg
mov
and
loope,pt
xor
xchg
mov
pop
or
adc
xorb
sub
xchg
adc
imul
push
jbe
sahf
xchg
lea
ljmp
ds
enter
dec
pop
sub
mov
sbb
icebp
icebp
filds
iret
jae
lea
and
add
fdivr
test
cmp
ret
mov
push
sbbl
inc
addl
iret
gs
mov
lock
bound
and
outsl
sbb
mov
pushf
int3
dec
sti
pop
dec
roll
jne
nop
jne
inc
adc
sub
orl
mov
xchg
fwait
loopne
cmpsb
fs
mov
inc
test
cmp
in
in
movsl
fistps
lcall
push
xor
add
andb
add
test
shrb
loopne
gs
testb
inc
cmp
ds
or
push
xchg
dec
sub
out
in
add
cwtl
mov
xchg
xor
mov
mov
xor
jnp
xchg
adc
dec
pop
shll
mov
pusha
fidivl
xor
stos
mov
jo
push
mov
pop
dec
sbb
and
mov
mov
lcall
pop
jmp
sbb
xlat
cmpsb
mov
shl
cltd
sbbl
mov
cs
lcall
test
dec
mov
sbb
inc
scas
or
ljmp
fistpl
and
pop
or
pop
lcall
je
push
mov
jns
stos
push
jb
sbb
lret
aam
mov
lcall
add
sbb
push
jg
adc
cmp
inc
ja
adc
and
fmull
jno
stos
rclb
and
inc
jb
add
subl
lret
fwait
pop
jle
xchg
aas
fnstenv
xchg
mov
int3
push
in
cmp
in
mov
xchg
add
cmc
and
jecxz
jl
xchg
packsswb
dec
and
push
leave
imul
jl
ljmp
cs
dec
loop
fwait
ja
pop
or
xor
loopne
outsl
cs
je
pop
sti
lret
iret
push
sub
sub
mov
fidivs
leave
xor
xor
push
jp
adc
stos
cmc
movsl
andl
xlat
mov
mov
imul
into
jg
sbb
pop
fstps
rcrb
mov
ja
inc
out
pushf
mov
fs
psubsw
add
in
inc
inc
jle
jae
sub
cmp
dec
stc
mov
jge
jno
push
fildll
push
jae
sub
inc
cs
fucomp
mov
divl
adc
inc
xlat
jge
test
out
xor
movl
xor
loop
fnstsw
and
lods
cwtl
out
mov
dec
adc
int3
inc
jb,pn
and
cmc
xor
sub
stc
cmp
je
adc
xor
loop
stos
movsl
lahf
sub
decl
fsubl
jb
in
mov
sbb
inc
and
and
cli
pop
and
lods
ss
ret
or
xchg
je
cwtl
mov
dec
dec
in
and
std
in
and
cmc
inc
and
and
ja
adc
add
mov
pop
cld
and
rcll
jl
cs
adc
aad
or
lods
adc
nop
xchg
notb
repnz
push
xchg
mov
stos
sbb
add
imul
adc
aad
pop
frstor
insb
scas
or
and
and
push
insl
dec
mov
pop
aaa
mov
lret
push
dec
add
mov
sub
ja
addr16
xchg
bnd
lret
aaa
sub
add
push
inc
sahf
pushl
push
xchg
jg
in
insl
imul
cwtl
xchg
push
dec
dec
inc
ss
jmp
and
or
mov
mov
xchg
jge
cmp
xchg
mov
jp
js
popf
inc
cs
mov
mov
movsl
pop
pop
mov
popf
repz
call
sar
cmp
fistpl
xor
in
sub
xor
int
lds
cmp
stos
cmpb
imul
popa
ds
sahf
addr16
stos
xor
mov
cmc
movsb
ror
jbe
ds
and
incb
push
sbb
pop
mov
dec
mul
mov
push
repnz
push
pop
out
push
loop
mov
loopne
aam
popw
push
fdivs
push
mov
addr16
jl
and
xchg
test
ds
loopne
xchg
push
out
xor
adc
jno
cmpsl
mov
lea
xor
mov
gs
xchg
mov
adc
movsl
sub
jbe
push
mov
sbb
ja
addb
cs
or
mov
inc
jns
sub
pop
jnp
add
inc
push
leave
and
xor
cmpsl
mov
jg
js
loop
int
sbb
push
pop
mov
lret
mov
arpl
xor
inc
and
movsb
aas
js
cs
xchg
dec
ret
ret
pop
popa
cmp
sahf
pop
cltd
fcomps
push
mov
cmp
mov
inc
sub
aad
pusha
inc
mov
add
sub
pop
ss
sub
mov
pushf
xchg
icebp
test
sub
sbb
fwait
sub
adcb
lds
aad
movb
and
aam
dec
in
mov
mov
inc
mov
stc
mov
sbb
jle
mov
push
pop
test
stc
mov
incl
stos
iret
cmc
mov
movb
ss
mov
cwtl
add
add
dec
mov
jl
mov
cld
add
jecxz
cmp
push
aam
clc
scas
sbb
cltd
or
xor
pop
scas
lods
mov
push
mov
lcall
sbb
sti
jae
lods
mov
and
adc
mov
and
mulb
daa
inc
rcl
int3
dec
and
xchg
js
mov
in
test
dec
dec
cmp
sbb
cmpsl
add
mov
cmp
add
push
xchg
imul
inc
adc
rep
mov
adc
lock
clc
fucom
cmc
inc
arpl
imul
jno
std
out
cmp
cmp
lret
clc
add
jp
rorb
test
jmp
inc
shl
fisubrs
jb
icebp
fidivrl
in
mov
mov
popa
fnsave
and
stos
test
pop
dec
and
inc
lret
jl
or
mov
inc
or
mov
push
rolb
popf
js
roll
jnp
popa
aaa
push
loopne
std
testl
addr16
xor
imul
ss
lret
mov
call
addr16
aad
sbb
or
or
cld
daa
frstor
scas
mov
and
or
mov
mov
push
das
jecxz
push
xchg
popf
pop
cmp
lock
push
imul
xor
dec
repnz
js
xor
data16
outsb
jg
daa
int3
pop
mov
inc
pop
pop
aaa
pop
pop
sub
adc
mov
sub
mov
add
adc
repnz
es
jg
add
dec
cmp
sub
push
inc
and
mov
sti
hlt
mov
dec
loope
fnstcw
or
enter
xor
movsb
jno
and
pop
inc
dec
daa
or
out
or
call
cwtl
mov
pop
dec
inc
push
stos
test
pusha
inc
mov
inc
test
call
inc
mov
aaa
popa
lods
idivb
and
push
mov
add
fnstsw
test
pop
je
xor
xor
cmp
adc
push
xchg
lea
and
int3
xor
test
or
das
xor
sub
iret
or
inc
push
lret
inc
cmp
add
pop
push
or
movsb
and
xchg
lods
decb
add
sbb
test
xchg
sbb
pushf
mov
stos
mov
out
lahf
daa
xchg
adc
push
pop
xlat
cld
sbb
iret
lods
add
stos
jns
add
std
addr16
arpl
fcmove
stc
lods
push
xor
mov
or
mulb
dec
pop
loope
ret
mov
ds
out
lret
cmp
cmc
pop
and
sub
and
push
mov
loop
out
push
mov
scas
xor
scas
jne
out
rcll
mov
cmp
cmp
sti
in
mov
dec
mov
ret
and
dec
mov
jno
mov
push
mov
pop
add
jb
idivb
jmp
je
jmp
sarl
pop
xchg
jp
or
mov
mov
inc
fs
subb
push
adc
xor
mov
xor
clc
mov
lea
loop
lods
ss
mov
mov
jae
jle
imul
add
daa
rorl
lds
pop
pop
shlb
sti
jo
sub
cwtl
outsb
icebp
pusha
movsl
mov
add
xchg
mov
jb
mov
push
jns
add
lods
cwtl
lods
ss
dec
xchg
push
ds
push
cmpsb
ds
mov
or
pop
jmp
pop
push
in
test
popf
dec
mov
mov
push
test
bound
in
jl
insl
mov
loope
test
fnstenv
mov
mov
or
and
lea
pop
jge
xor
cmp
arpl
mov
lret
mov
aas
imul
pop
dec
pop
mov
lods
push
ss
pop
ljmp
jb
dec
enter
into
aam
test
fldl
lds
add
inc
mov
dec
sbb
inc
and
jae
push
sub
jmp
inc
push
bound
icebp
aaa
ljmp
push
cs
fldenv
inc
adc
incb
lcall
cltd
xor
scas
sti
xor
add
stos
jecxz
sbb
ja
sub
out
mov
scas
loope
fstps
jns
push
jbe
fisubrl
es
sti
and
pop
xchg
lcall
clc
les
fimull
rclb
mov
jp
dec
or
jg
sbbl
roll
push
bound
inc
fisttpl
cmp
push
mov
cmp
push
mov
cs
out
inc
add
jns
arpl
push
push
pop
enter
sub
je
fldt
mov
repnz
adc
sbb
push
xor
roll
sbb
call
and
jno
in
add
cmp
mov
jmp
xor
xor
scas
xchg
adc
lret
cmp
fistps
out
add
imul
flds
lcall
stos
fnsave
nop
sub
and
dec
mov
in
cmp
jno
mov
xor
ficomps
mov
pusha
aad
insb
inc
push
in
repnz
jl
push
mov
out
imul
into
or
inc
and
hlt
cmp
int
shl
cmp
sahf
xor
cmc
stos
pop
jl
sub
xor
mov
subb
xchg
xchg
ljmp
jno
into
popa
add
fsub
push
fsubrs
mov
fwait
lcall
mov
lret
sbb
or
lods
fwait
jl
adc
xorb
sub
jns
jne
and
mov
mov
lahf
cmp
mov
cmp
dec
loop
xchg
jle
jge
mov
mov
xor
sub
sbb
imul
xchg
enter
sub
gs
or
add
iret
sbb
pushf
fst
mov
and
sbb
dec
jo
test
movsl
icebp
xchg
mov
or
mov
cmp
pop
ror
xor
dec
test
or
pop
dec
loopne
repz
jnp
xor
fcomps
and
insl
pushf
add
movsb
hlt
jmp
lods
popf
mov
icebp
sub
pop
arpl
addr16
sbb
in
idivl
adc
push
mov
xchg
xchg
xor
push
outsb
dec
insb
jbe
xchg
add
cwtl
out
jb
clc
js
es
lea
movsl
jmp
jb
jmp
cltd
shl
xlat
xor
adc
mov
fdivrs
out
loopne
stc
dec
push
fs
cltd
jmp
jecxz
roll
shrl
jl
adc
xor
cmp
mov
addb
mov
out
pop
pop
cltd
mov
cmpsb
xor
jae
adc
cmp
outsl
sarl
stos
lock
lea
mov
cmc
adc
scas
or
mov
bound
cmc
fadd
cmp
repz
adc
out
push
cmc
in
inc
js,pt
pop
xor
and
shll
xchg
fs
mov
rclb
jecxz
jecxz,pt
repz
and
fiaddl
in
inc
nop
out
sub
in
cmp
jle
jle
shr
inc
or
call
dec
xchg
ljmp
lods
data16
xchg
in
sbb
test
sbb
out
xor
das
sub
inc
mov
aad
xchg
sub
xor
addr16
es
pop
and
or
fists
insl
cmp
sub
sbb
ret
gs
sti
fimull
lret
fisubl
shlb
cltd
and
and
cltd
call
repz
dec
jmp
mov
imul
xor
add
jecxz
mov
ret
jne
mov
xchg
rcrl
ja
mov
sub
pop
negl
xor
sarb
jle
mov
cs
adc
loope
sbb
inc
xor
orb
pushf
aam
add
aad
xchg
mov
mov
pop
outsl
mov
or
fs
mov
into
jle
add
sbbb
in
int
cmp
xchg
fldenv
cwtl
hlt
mov
outsl
xchg
and
fstpt
arpl
lahf
cli
cmpsb
adc
xor
push
and
push
adc
jmp
xchg
mov
addr16
xlat
ja
fldcw
adc
xchg
dec
int3
fwait
or
lret
movsb
ret
aas
pop
into
lea
mov
cmpsb
add
loope
sbb
or
loope
mov
fdivs
push
pusha
ljmp
inc
sbb
psraw
pop
jb
xor
or
push
mov
imul
dec
dec
hlt
insl
movb
fisubs
xor
jne
mov
push
inc
mov
or
pop
sbb
nop
movsl
sbb
dec
pop
or
pop
ret
cli
int3
pop
test
sub
mov
push
dec
out
lods
and
adc
cmp
xor
mov
cld
out
dec
xchg
add
lock
clc
push
lahf
jns
jae
enter
stos
mov
test
aad
mov
jno
insl
jg
and
aad
sbb
fwait
jle
in
movl
rep
dec
out
mov
aad
xchg
js
rolb
sbbb
ljmp
push
cs
fwait
repz
mov
add
fcomip
push
fwait
jle
fsts
xchg
pop
mov
out
or
lret
mov
test
cli
insl
dec
mov
mov
js
imul
cwtl
cltd
mov
ljmp
cmc
adc
ficoml
lods
jb
mov
in
dec
sti
aaa
push
rcrb
cmp
jae
mov
fsubl
add
jae
jae,pt
sub
cld
add
pop
mov
jno
and
or
stc
insb
imul
sub
xchg
int3
push
jbe
mov
pop
call
xchg
or
xchg
scas
pop
adc
rorl
out
push
repz
scas
sbb
aam
insb
nop
in
movsl
aad
das
sbb
negb
je
add
clc
nop
ret
lcall
stos
cltd
insl
ja
sub
arpl
xchg
in
mov
iret
out
mov
xchg
mov
lock
and
ljmp
inc
popa
mov
dec
jne
rcll
loope
cmp
pop
clc
add
je
sub
sub
out
sbb
lds
and
addr16
sbb
jne
jp
jno
adc
mov
sbb
adc
jno
cmc
inc
int
jns
cmp
js
lret
pop
les
sub
idivl
ja
test
and
rolb
cmpsl
add
stos
inc
pop
and
lods
adc
pop
cmp
or
adc
fmul
push
cmp
and
lods
scas
mul
in
adc
stc
stos
inc
fcomps
rolb
cmpsb
push
cmpsl
pop
sub
and
xchg
mov
lods
movsl
test
addl
mov
mov
add
dec
out
or
popa
gs
popa
pop
push
bound
sbb
aaa
add
in
mov
mov
enter
cs
fimull
mov
mov
ss
ljmp
clc
lock
mov
push
cwtl
xor
filds
cs
mov
movsl
jne
pop
ljmp
icebp
adc
push
jbe,pn
xor
and
je
sbb
vcvtpd2psy
stc
push
movsl
cmpsl
xor
add
in
dec
jo
test
inc
adc
adc
xor
add
inc
inc
and
mov
adc
movsl
cmp
arpl
test
mov
sub
das
inc
sub
xchg
inc
xchg
popa
push
mov
sub
jecxz
cli
pop
aam
fdivp
adc
push
loopne
mov
movsb
test
icebp
cmp
clc
movsb
dec
adc
xchg
cmp
sbb
shlb
call
mov
dec
mov
loop
sahf
in
imul
mov
cmpsb
sbb
aam
pop
lods
mul
or
mov
or
sbb
push
imul
fisubl
sbb
xor
cmp
xchg
mov
clc
mov
insl
inc
push
daa
aam
cld
out
sbb
enter
add
in
xorl
scas
pop
gs
pop
xor
mov
push
push
leave
cld
mov
pop
fwait
sbb
dec
lods
pop
adc
mov
fwait
sbbl
test
ret
jecxz
movsl
inc
jo
mov
ret
rcrb
scas
js
icebp
xchg
jbe
xchg
ret
jecxz
ja
adc
inc
add
mov
int
push
les
cmp
mov
int3
inc
xchg
add
or
mov
aaa
ljmp
mov
jns,pt
icebp
add
test
sub
das
aaa
or
mov
xchg
aam
and
movsl
out
movsb
arpl
sub
jno
xchg
ss
ror
and
aad
inc
das
xchg
xchg
jecxz
ljmp
jp
out
test
mov
mov
aas
push
dec
xchg
ljmp
sub
adc
test
lahf
push
jmp
mov
imul
xchg
rorb
pop
xchg
pop
test
inc
je
stos
dec
xchg
nop
shll
dec
push
enter
into
jecxz
xlat
addl
xchg
cmp
adc
jne
inc
adc
iret
lcall
pop
lds
cmp
push
insl
lea
mov
push
pop
fadds
jl
icebp
adc
test
setl
cld
mov
xchg
std
sbb
and
enter
neg
cli
mov
movsb
dec
xor
into
jg
test
and
jp
test
jmp
or
jl
dec
push
flds
push
push
sub
lock
ljmp
mov
clc
sub
inc
in
sbb
mov
mov
xlat
mov
insl
xor
jno
js
xchg
std
cld
fidivrl
and
mov
push
fsubs
cli
cltd
test
sbb
in
stc
idivb
shrl
cmpsb
sbb
xor
bound
add
insb
mov
jbe
mov
cs
imul
das
lods
mov
fcmovnbe
inc
call
dec
pop
mov
fsts
push
shlb
out
xor
insl
pop
jl
pop
stos
or
ljmp
shl
bound
mov
ja
cmpsl
inc
loopne
pop
mov
subl
cmpsb
fisttpll
rolb
jmp
push
int3
jmp
sub
sbb
popf
loop
xchg
stos
push
jno
fisubrs
std
les
lea
jo
and
call
scas
adc
jb
or
ljmp
push
addb
cmpsb
call
hlt
pop
push
test
mov
lods
loope
adc
int
lret
xchg
lret
daa
fsts
pushf
xor
jg
add
dec
pop
jnp
mov
pushf
xchg
into
xlat
jmp
movsl
pop
mov
fistpl
insl
or
add
dec
mov
pop
stos
jle
sub
jno
jno
dec
cli
enter
sbb
js
xor
out
int3
inc
pop
je
popf
or
rolb
in
into
xlat
jnp
std
imul
into
mov
push
es
ljmp
rcrl
rclb
mov
sub
mov
aad
push
mov
push
mov
xor
ja
xor
cwtl
xchg
fnstsw
bswap
adc
subb
sbb
stos
imul
mov
xchg
outsb
test
stos
cmp
push
or
xor
int3
insl
mov
jl
xlat
clc
pushf
push
call
dec
je
dec
or
jae
mov
cwtl
jnp
mov
ljmp
sarb
fldenv
xor
jns
clc
test
hlt
xor
les
mov
adc
xchg
adc
xchg
mov
adc
add
imul
xchg
incb
push
jmp
xchg
jmp
out
sahf
je
lahf
dec
mov
sub
mov
dec
daa
xchg
cltd
movsb
lock
adc
scas
mov
xor
jno
mov
sub
negl
dec
cmc
inc
movb
inc
test
mov
sub
inc
jne
pop
dec
arpl
jge
adc
bound
pushf
xchg
jecxz
fstps
rcl
cli
sub
sbb
add
sub
push
fisttpll
popf
popf
ss
inc
test
call
cltd
mov
dec
insl
xchg
arpl
out
aad
je
cmp
insl
js
aas
mov
mov
les
or
jns
jbe
shlb
fcom
loop
pushf
or
pushf
out
jp
add
imul
lret
push
dec
aam
mov
xchg
dec
adc
lds
sti
stos
push
test
sbb
sub
ret
ss
sub
test
fcomp
in
mov
jo
sbb
iret
or
ret
aas
loop
cltd
int3
jo
pop
test
stc
hlt
andl
sbb
fcoms
setbe
jns
arpl
push
shrl
push
jl
ret
cmp
adc
or
pop
mov
sbb
loopne
int3
adc
pop
fisubrs
fdivl
jmp
movsl
mov
sub
inc
testl
jmp
and
xchg
sbb
movq
push
rorl
jne
sbb
pusha
push
push
dec
jge
mov
in
xor
icebp
add
ja
jno
imul
add
mov
sub
out
pop
mov
sub
add
or
sbb
repnz
xchg
pop
inc
cmp
and
clc
imul
out
test
fs
adc
dec
icebp
xchg
les
dec
cs
jns
cld
lods
inc
inc
inc
add
adc
mov
pusha
pop
sub
mov
clc
pminsw
out
jge
inc
sbb
scas
lods
jb
fbld
repnz
push
xchg
repnz
cltd
dec
enter
jmp
ljmp
mov
jne
in
adc
mov
sbb
lcall
mov
dec
bound
xor
mov
or
andl
call
push
rorl
out
mov
adc
ret
add
js
xor
push
iret
stos
aam
je
sbb
fdivrp
inc
lods
addr16
sbb
icebp
xor
test
mov
pop
jbe
enter
movsb
stos
add
or
and
subl
aaa
ret
out
lds
popf
cs
andl
inc
sarl
push
aam
imul
fcomps
lcall
mov
repz
sbb
sbb
sbb
cwtl
pop
adc
fldenv
clc
jecxz
outsl
xor
xor
mov
pop
in
dec
iret
sub
iret
aam
lea
jbe
or
sub
lret
jo
or
in
lahf
jno
testl
inc
sbb
mov
outsl
sbb
add
mov
push
jnp
and
popf
js
push
lret
cwtl
xchg
dec
int
push
in
and
outsb
aam
mov
lret
xchg
and
lret
mull
xchg
mov
jns
pop
call
arpl
fs
cmpl
add
cmpsl
sub
pushw
iret
icebp
cld
add
dec
mov
push
fnsave
xchg
inc
inc
loop
shll
mov
rcr
jge
and
in
jnp
sbb
mov
outsl
fimull
insb
icebp
add
inc
popf
xor
push
imulb
in
pop
mov
popf
fs
scas
test
faddl
sub
sub
sub
fsubrs
sub
ds
add
jne
daa
sub
mov
adc
and
in
dec
xchg
je
mov
and
pop
cltd
pushf
iret
pop
push
pop
in
jo
xchg
xchg
fs
mov
lock
sahf
in
push
les
inc
mov
fldt
jbe
daa
push
jecxz
adc
dec
add
jo
jbe
divb
pop
mov
pop
xchg
fmul
sbb
dec
push
sub
in
jns
xchg
adc
adc
ret
loope
or
lods
jns
xchg
xlat
dec
pop
jp
fs
fisubrs
mov
imul
sbb
sbb
jbe
cltd
dec
loopne
shrb
xchg
xchg
jecxz
cmpsb
dec
jmp
mov
sub
ds
rclb
mov
popa
sbb
mov
xchg
cmpsl
add
ljmp
sub
sbb
stos
addr16
pop
push
pop
push
adc
std
jge
jg
cs
lret
in
mov
sbb
in
xor
sar
insl
or
and
rorl
flds
jmp
lret
test
sbbl
dec
lahf
ja
pop
dec
mov
push
xchg
into
fstpt
repz
mov
inc
cmpsb
mov
ja
add
outsl
sub
lret
xchg
fyl2x
push
and
sbb
int
inc
insb
imul
ljmp
enter
xor
push
scas
mov
jo
or
jg
xchg
testb
sbb
mov
insl
cmp
lret
in
je
sbb
popa
mov
pop
cmpsl
xchg
lea
sbb
outsb
mov
icebp
cmp
adc
das
inc
or
pusha
daa
inc
int3
xchg
dec
and
or
fsubrs
adc
mov
in
xor
out
idiv
out
xor
xor
test
stc
dec
rolb
add
add
das
mov
rolb
sub
push
mov
int
hlt
mov
inc
mov
daa
loop
daa
pusha
pop
mov
and
jle
enter
jl
mov
or
imul
movsb
imul
lcall
inc
inc
aad
pop
inc
cmpsb
jbe
inc
cltd
pop
xor
not
push
inc
std
or
mov
pop
mov
add
mov
push
ds
ljmp
movlps
sub
fs
imul
push
sbb
in
fimuls
inc
pushf
sarb
mov
lret
aad
add
fxch
in
inc
pushl
sub
mov
mov
test
inc
and
rorl
push
xchg
dec
adc
or
js
jbe
jno
pop
fidivrs
cmp
pop
adc
lcall
add
sbb
in
aas
sbb
mov
inc
or
gs
sub
adc
dec
ds
pop
sar
xor
push
mov
dec
xor
mov
dec
ret
test
insl
cmp
fisttps
imul
arpl
fsub
adcl
jl
out
bound
bound
push
ds
pop
sahf
ret
outsl
and
sarl
daa
push
xlat
inc
mov
stos
or
jb
cmp
push
sbb
jmp
jl
shr
adc
mov
sbbb
aam
mov
repz
mov
repnz
mov
pop
jp
pop
mov
and
push
xor
jmp
push
pop
mov
pop
in
mov
outsb
addr16
dec
mov
cmovbe
dec
pop
in
pop
cld
shl
enter
add
leave
fbstp
outsl
shrb
mov
call
movsl
int
xor
jg
inc
out
rorb
xchg
out
mov
shlb
pop
ds
lds
loope
pop
imul
dec
mov
dec
pop
test
test
test
push
inc
xorb
xchg
insb
jnp
ret
push
push
jo
cmp
inc
add
loopne
mov
push
inc
popa
and
adc
sbb
adc
mov
lret
xchg
adc
jno
pop
adc
inc
test
lahf
lret
gs
aaa
cmp
mov
mov
mov
xor
in
cmpsb
push
xchg
cld
fldcw
push
testl
or
sbb
dec
movsb
xlat
mov
adc
stc
xchg
pop
stos
adc
ds
repnz
loope
fisubrs
ds
iret
fnsave
xchg
cld
pushf
lds
mov
fisubs
mov
pop
xchg
ficompl
rcrl
pop
add
shlb
aad
pop
lds
cmpsl
push
test
push
sbb
inc
decb
icebp
sbb
outsl
sbb
imul
insl
jecxz
and
cli
pop
mov
ret
xor
popf
mov
cmpsl
adc
leave
pop
sbb
repnz
jnp
ljmp
mov
test
jge
movl
cmp
imul
movsl
jmp
jae
lret
ret
mull
mov
inc
push
push
jae
jno
xchg
and
push
lret
cmp
lcall
pop
jb
add
sbb
sub
inc
pop
popa
fs
sub
loopne
ficoml
mov
inc
push
sub
jne
dec
lods
jno
out
aam
lret
add
imul
mov
push
lea
in
sbb
cld
loopne
xor
pop
adc
int
mov
aaa
adc
mov
into
fimull
jne
adc
lods
mov
pop
pop
xchg
push
xchg
test
cli
enter
xor
out
mov
arpl
les
in
dec
fdivr
cmp
or
or
inc
sbb
fdecstp
int3
ljmp
in
cmp
daa
xor
pop
iret
outsl
push
mov
or
lahf
mov
pop
dec
insb
mov
cmpsl
push
lret
xor
jns
cmpsl
lock
orl
or
mov
or
ss
push
lahf
adc
out
lock
out
pop
sbb
xor
inc
sbb
fbld
sbb
int
es
sbb
cmp
adc
push
pop
or
pop
cltd
test
inc
mov
aad
lea
push
fnsave
mov
shr
int
pushf
lret
and
jb
fmul
jp
je
fmull
add
and
pop
shll
jae
or
xor
movsb
mov
xor
mov
xlat
dec
or
sub
mov
or
mov
in
int
jbe
pop
xchg
dec
pusha
pusha
and
enter
xor
nop
xchg
dec
in
mov
inc
mov
push
jle
xor
movsb
aas
lcall
push
cmpsl
fucom
iret
or
lret
lcall
popa
jne
nop
popf
and
out
fists
push
dec
outsl
mov
sbb
insb
mov
and
aam
out
mov
lret
dec
fiaddl
out
fsubrs
sbb
add
inc
not
sbbl
ja
das
setle
mov
mov
into
dec
mov
xor
shl
inc
hlt
shrl
mov
aam
cs
imul
test
jg
rorl
addb
mov
xchg
pop
and
int3
jp
pushf
xchg
imul
push
pop
mov
out
icebp
inc
out
push
mov
and
mov
inc
repz
pop
idivl
mov
cs
add
shl
sti
sbb
fs
mov
test
sub
nop
sub
aad
pop
daa
leave
pop
rcrb
push
enter
push
fwait
jo
mov
cmpsb
xchg
data16
mov
sar
inc
xor
jp
adc
es
int3
out
jb
push
bnd
and
dec
mov
into
cmp
fs
std
lock
in
stos
cld
push
lret
adc
and
push
pop
lods
mov
addr16
push
mov
push
dec
mov
cld
xor
ret
adc
sbb
adc
testb
leave
mov
scas
call
pop
pop
cli
loop
and
mov
jl
and
fwait
pushf
push
je
lds
push
mov
adc
stos
jno
xor
xor
mov
lcall
push
inc
jg
add
clc
push
pop
aad
outsl
ljmp
or
fwait
cltd
lcall
jle
pop
mov
adc
mov
sub
sub
cmp
and
hlt
cmp
pushf
jne
ds
pop
mov
mov
leave
inc
cs
cmp
xorb
lock
call
lods
imul
push
dec
mov
sub
sbb
jge
daa
sbb
push
xchg
lret
xor
cmpsb
imul
or
fisttps
mov
sub
imul
popa
ret
pop
or
out
les
in
fwait
mov
push
jb
sub
adc
push
pushf
cmp
inc
push
iret
out
add
sarl
sbb
pop
adc
dec
push
and
sti
xorb
jp
inc
cmp
fs
popa
test
adc
imul
out
je
adc
ljmp
lcall
mov
out
adc
lret
push
pop
add
push
jmp
cmpsl
xlat
dec
sub
cmp
sub
adc
pop
loop
xorb
sbb
cmp
test
fmulp
cltd
in
bound
xchg
lcall
ljmp
xchg
jmp
fs
add
imul
jno
jmp
xchg
aas
pop
imul
ret
aad
inc
call
lods
sub
out
aaa
pushf
xor
xchg
stos
lcall
jl
jmp
jno
mov
cli
xchg
push
imul
sahf
jge
icebp
sarl
sbb
xchg
stos
outsb
test
xchg
sub
int
and
mov
loop
arpl
lods
icebp
aad
mov
mov
orb
std
hlt
push
dec
sbbb
add
add
mov
popf
and
dec
mov
addr16
sbb
mov
mov
enter
int3
inc
push
in
cwtl
loopne
movq
mov
insl
icebp
out
inc
mov
pusha
sbb
leave
xchg
inc
les
repnz
mov
mov
fcoml
push
scas
std
or
xor
inc
push
imulb
xor
ds
mov
cmp
cmp
inc
or
in
stos
loopne
mov
hlt
insb
ret
pop
cmpsb
push
hlt
sarl
fwait
rol
shl
repnz
cmp
popf
add
mov
jbe
inc
insl
jle
ljmp
jae
sbb
mov
pushl
dec
push
dec
pop
dec
lock
in
pop
sbb
add
out
fdivrl
ds
xchg
mov
leave
push
push
clc
insl
mov
in
out
xor
sahf
outsb
repnz
lods
es
push
cli
sbb
popf
lock
call
sti
mov
push
ss
xlat
mov
jae
enter
dec
mov
cltd
stos
sub
and
xor
fwait
les
nop
imul
in
sub
cld
ja
push
hlt
mov
and
and
jmp
jl
int3
push
sbbl
movsb
add
push
lret
sub
int3
pop
jns
nop
popf
dec
call
bound
or
rorb
sbb
in
xchg
push
hlt
sbb
inc
mov
mov
fsubrs
fs
mov
mov
push
pop
push
push
add
cmc
push
pop
adc
test
mov
ds
lret
cmpsl
shr
pop
mov
ss
dec
and
imulb
scas
cmp
add
daa
outsl
inc
mov
pushf
scas
jbe
xchg
rorb
into
inc
pop
leave
jnp
cmp
add
cwtl
and
fwait
mov
fistps
mov
pop
fwait
adc
rcll
call
pop
or
cli
fcomps
sub
js
jne
xchg
and
xor
lea
jns
mov
out
sbb
into
stc
mov
js
xchg
add
lods
shr
dec
sbb
incb
ficoml
in
cmpsl
sub
fimull
pop
mov
inc
adc
scas
call
int
sbb
insb
add
out
aam
push
mov
js
xchg
add
dec
cmpsl
test
pop
aas
notb
outsl
popf
jl
cmpxchg
rclb
inc
es
mov
daa
push
enter
mov
mov
mov
shl
push
int
rclb
xor
xchg
adc
xchg
cwtl
mov
xchg
lds
fmul
or
jo
loope
push
iret
fsubr
js
sbb
or
insl
push
or
dec
or
lods
cli
adc
int3
dec
jo
dec
and
pop
mov
mov
mov
jnp
jns
negb
sub
in
nop
push
jno
dec
lock
push
lcall
mov
hlt
cmp
ret
add
int
jg
xchg
pop
push
dec
or
adc
adc
stc
js
sbb
iret
test
and
or
leave
xstore-rng
cmpsl
inc
or
out
pop
arpl
mov
or
mov
add
js
inc
fldl
xlat
xchg
out
pop
cmp
or
mov
aaa
push
mov
push
sti
mov
enter
sub
out
lret
aaa
mov
fcomps
mov
popf
mov
in
enter
jne
cmpsb
push
push
repnz
jecxz
xlat
xchg
sbbb
rolb
xchg
movsb
mov
dec
push
aam
xchg
xchg
negl
sub
cltd
push
cmpsb
les
or
push
mov
push
divb
fs
jbe
mov
mov
adc
fimull
out
xor
sbb
loopne
jge
popa
xor
xor
in
xchg
inc
push
jle
xor
roll
jecxz
gs
icebp
xchg
add
mov
jnp
xchg
inc
sbb
jo
fwait
mov
adc
adc
or
mov
jno
add
xchg
or
mov
enter
mov
lahf
lea
pusha
aad
popa
movsl
cmp
mov
push
loopne
test
insl
aaa
scas
inc
es
mov
idivl
icebp
ss
gs
xchg
sbb
pop
iret
test
xchg
rorb
clc
xchg
mov
fdivs
loopne
xor
xlat
jmp
fsubrl
rcl
pop
sbb
fs
mov
lods
mov
or
popf
mov
jb
repnz
push
adc
mov
push
push
pop
lock
push
call
inc
xor
or
jl
stos
subl
jne
mov
or
jns
ret
push
adc
movsb
cmpsl
sbb
outsl
lldt
jg
mov
call
xchg
repnz
push
cs
push
lcall
test
mov
pop
mov
sub
mov
mov
adc
out
lock
test
insl
lds
mov
loopne
adc
ffreep
sbb
jnp
cltd
dec
mov
popf
lahf
ljmp
jge
int
push
repnz
or
in
std
in
mov
inc
mov
xchg
jg
in
dec
sbb
xor
test
fsts
cld
stos
xor
cmp
dec
ss
out
jecxz
scas
stos
cmc
iret
std
ret
movsl
nop
jo
ljmp
fdiv
imul
test
adc
in
or
fdiv
es
mov
dec
sbb
call
adc
sahf
mov
xchg
pop
outsl
clc
mov
xor
test
arpl
and
mov
fcomps
icebp
dec
mov
sbb
sub
fisubs
add
sub
jae
in
insb
cmpl
cwtl
test
test
add
movsb
div
adc
repz
dec
rorb
aam
pushf
dec
mov
fimull
subps
dec
sbb
pusha
bound
jmp
fnstcw
sbb
xchg
cmp
xor
es
insl
inc
loop
sbb
aaa
pop
fmul
cmp
subl
cmp
out
out
pop
lret
mov
push
loop
in
sub
iret
adc
ja
push
and
lret
mov
xchg
or
lods
xchg
push
orb
fldt
bound
imul
xlat
and
lods
popf
sub
dec
sbb
push
sbb
mov
cmp
xorl
xor
fiadds
and
repnz
dec
dec
or
sti
sahf
jmp
sarl
sub
mov
out
add
repnz
push
mov
pop
lahf
scas
sub
fwait
call
mov
mov
out
jle
stos
push
data16
mov
push
and
dec
sbb
fcoms
sbb
jge
dec
inc
call
je
mov
mov
lock
cmp
mov
ja
dec
sub
ud0
jge
pop
int3
out
lret
stos
int3
inc
scas
int3
cmp
mov
mov
sub
mov
stc
loope
pop
rcrl
test
cmpsl
pop
push
daa
das
mov
push
and
ficoml
pop
loopne
fxch
ljmp
data16
icebp
pop
les
repnz
stos
cwtl
fldt
adc
outsl
ficoms
pushf
mov
popa
movsl
xchg
inc
dec
pop
ljmp
pop
outsb
lock
enter
es
adc
shl
mov
cli
mov
jl
leave
ljmp
roll
outsl
fsubr
pop
pop
push
fildl
daa
mov
subb
adc
or
icebp
or
mov
iret
mov
ucomiss
add
and
xchg
sbb
outsb
sbb
loope
and
loopne
loope
sub
fmull
shlb
mov
in
mov
jecxz
push
sub
shll
mov
mov
gs
jbe
cwtl
xor
fwait
mov
xor
mov
shr
mov
mov
rol
xchg
pop
andb
pop
dec
push
fistps
jge
sbb
ss
jecxz
mov
int3
movb
hlt
mov
xchg
mov
xchg
cmp
scas
jns
cmpsb
mov
lret
test
and
jge
push
push
fwait
int
or
jl
pop
fdivr
lods
imul
pop
inc
xor
mov
jne
pop
fistl
in
push
mov
test
fnclex
repz
mov
adc
repnz
pand
pop
popf
pop
shrb
loope
or
inc
push
cmp
std
pusha
mov
fldcw
ret
cltd
std
and
xor
push
into
sbb
icebp
repnz
stos
cmp
lods
clc
cmp
xor
mov
xlat
inc
test
je
push
jns
movsl
dec
div
aaa
xchg
cmp
int
sbb
nop
ret
pop
aam
push
push
pop
pop
pop
loope
mov
aam
fwait
movsb
mov
xchg
movsl
pusha
sbb
mov
xor
aam
jle
cs
mov
or
mov
adc
inc
adc
out
div
std
jmp
scas
fiadds
divb
popf
pop
and
and
cmp
shr
and
push
outsb
nop
push
cmp
lea
cltd
pop
fwait
cltd
sbbb
push
sbb
hlt
adc
dec
inc
push
test
stos
flds
inc
shll
push
cmp
xchg
aas
out
mov
jle
push
sub
loop
jb
int
adc
xor
mov
dec
push
pop
cmp
push
out
movsl
movsb
jmp
dec
adc
lea
push
pop
cmp
popa
xor
gs
mov
inc
addb
add
sub
adc
out
es
leave
dec
repz
cld
clc
adc
xor
fdivl
push
mov
mov
jl
shll
rolb
fs
decl
outsb
xor
mov
enter
xor
rorb
rcrl
test
mov
inc
push
mov
loopnew
repz
xchg
aam
xlat
and
pop
inc
add
std
testb
push
pop
fdivr
xchg
push
hlt
jle
and
paddb
lahf
enter
dec
mov
mov
and
loop
jns
push
fsubs
sti
pop
dec
cmp
insl
cmpsb
add
aam
push
outsl
or
pop
test
cmp
add
cmp
ds
dec
addb
ljmp
out
daa
sbbl
jnp
push
adc
xchg
jns
adc
and
cltd
ljmp
xchg
inc
jle
data16
js
mov
aam
rcrl
adc
xchg
adc
push
fcompl
push
cmpsl
or
call
std
sbb
mov
jnp
lock
push
shll
jge
mov
les
dec
mov
adc
fstpt
sub
xchg
movb
xchg
dec
mov
int3
enter
pop
lods
jbe
xchg
xchg
icebp
je
cmp
lret
cmp
cmp
inc
cs
inc
sbb
and
imul
dec
mov
sub
push
mov
push
fnstsw
stos
faddp
jne
mov
lods
xor
std
sbb
shlb
mov
outsl
mov
mov
sbb
in
add
ljmp
jnp
adc
mov
mov
xchg
xor
cmpb
xchg
mov
lods
jmp
jp
xchg
xchg
jecxz
loopne
add
jecxz
shl
ss
shll
pop
cmp
lods
inc
in
fsts
add
push
data16
xchg
sbb
mov
bound
xchg
insb
jecxz
hlt
es
mov
and
jl
fistl
pop
sahf
int
aam
clc
sbb
jns
test
and
fldenv
mov
loopne
fucomp
into
inc
and
enter
subb
imul
bsr
sub
pushf
xor
sub
imul
xor
fsub
lcall
xor
push
rcrl
and
dec
pop
jbe
rcrb
sbb
xchg
sub
orl
pop
cmc
sub
mov
rcpps
mov
or
dec
xlat
or
je
or
mov
js
xor
cmpl
mov
mov
push
aad
cmp
psubusb
js
mov
xor
imul
lods
xlat
pushf
jmp
loope
mov
lret
cmp
fidivl
cli
adc
daa
mov
jae
out
xchg
mov
sub
arpl
in
xor
pusha
sbb
mov
pop
daa
xor
or
push
cmp
loopne
fxch
sub
sbb
incl
cli
lock
add
pop
push
div
loopne
stc
lret
hlt
jb
loopne
add
idivl
xchg
mov
mov
hlt
pop
fldcw
stc
or
mov
cli
jmp
in
adc
jne
push
loopne
lds
mov
and
mov
sahf
inc
jns
xor
cmp
sbb
mov
mul
mov
je
aad
mov
fistpll
out
sub
testl
ret
jb
ljmp
cmp
int
xor
dec
test
lods
push
cs
sub
icebp
jo
mov
inc
std
cld
mov
pushl
call
jg
sbb
cmp
inc
adc
aaa
fisubs
in
jo
xor
mov
jnp
out
repz
cmp
cld
fisttps
pop
mov
add
cmp
ljmp
inc
mov
addr16
or
loop
ror
cmc
fcmove
adc
into
xchg
rclb
cld
std
sub
into
sahf
mov
mov
or
sub
and
test
push
iret
cmp
add
xchg
in
int
sub
mov
cmpl
ficomps
fmull
cmp
pop
adc
sub
mov
adc
jnp
and
cmc
cltd
jecxz
push
mov
sub
lret
mov
test
leave
push
inc
xchg
dec
popf
jecxz,pt
cmc
cmc
aam
cmp
mov
jo
xchg
hlt
stos
popf
fldl
sbb
lahf
loopne
sbb
pop
les
inc
lret
and
pop
ss
dec
push
mov
mov
jmp
xchg
cmpsl
std
imul
imul
xchg
xchg
mov
xor
loope
leave
mov
or
addr16
sub
gs
dec
adc
jne
mov
into
mov
outsb
adc
push
mov
cmpsb
aad
int3
stos
add
fwait
jl
insl
cs
cmpsb
pop
hlt
insl
arpl
mov
jp
mov
dec
pusha
inc
dec
in
aam
enter
adc
shrb
cli
jmp
cld
sub
sub
xor
in
ret
out
adc
xchg
in
mov
mov
repnz
pusha
mov
subb
pop
roll
imul
mov
inc
mov
xchg
lea
ret
pop
pop
cmp
xchg
push
addr16
imul
push
cli
xchg
dec
ja
fwait
mov
pop
sub
lods
fildl
call
cmp
and
loop
sti
in
pop
repz
repnz
lahf
aad
adc
jnp
int3
and
xor
and
cmp
pop
dec
sbb
dec
fwait
les
lock
dec
outsb
popa
aam
pop
lea
or
jne
lret
push
xorl
in
movsb
add
fstpl
push
push
pop
iret
sbb
aad
call
push
imull
xlat
lds
dec
lcall
or
fdivrs
cmp
outsl
dec
adc
aaa
out
push
lret
nop
loope
add
jp
cmp
lret
xor
jp
bound
repnz
std
lods
adc
dec
mov
push
mov
movsl
jl
xor
les
testb
rcll
adc
ret
lods
imul
leave
fs
sbb
in
push
xor
aad
dec
adc
js
test
inc
or
push
and
clc
sbbl
in
loop
sbb
mov
mov
mov
jecxz
mov
lods
push
jge
filds
push
dec
sbb
mov
jbe
fidivrl
pop
aas
ret
lret
pop
xchg
ljmp
push
mov
xlat
stc
lods
mov
jb
les
lods
inc
sbb
adcl
mov
stos
mov
jmp
rcll
push
mov
js
inc
outsb
sub
cwtl
pop
sbb
jo
pop
stos
add
pushf
mov
mov
jo
movsb
shl
push
rorl
sbb
mov
adc
and
nop
ja
ss
cltd
stos
test
mov
cmp
cmp
mov
adc
cs
adc
mov
loop
mov
pop
je
mov
es
xor
sarb
xor
loope
cmp
scas
out
jae
cmc
rol
mov
clc
int3
jne
out
xchg
das
and
lahf
add
pop
loope
dec
jo
lcall
inc
lea
loope
jmp
dec
jge
icebp
cmp
adc
dec
stos
fldt
sbb
push
jns
pop
xlat
jg
mov
cmp
mov
xchg
test
and
sbb
dec
rep
push
daa
gs
hlt
pop
sbb
sti
in
sbb
or
lods
hlt
mov
mov
pop
test
cli
mov
scas
nop
fdivr
inc
adc
push
scas
aam
lret
or
push
mov
mov
mov
push
loop
push
mov
cwtl
push
or
pop
sbb
mov
jmp
fdivl
inc
cmpsl
mov
nop
lret
out
sbb
or
std
mov
and
pop
arpl
in
push
or
push
je
cs
ret
add
cmp
cli
mov
nop
shrl
test
int3
int
or
sbb
sarl
sbb
hlt
in
sarl
pop
cmp
fs
dec
mov
movsb
cs
shrb
jbe
adc
movsb
inc
cmpsb
mov
push
stos
and
jp
test
call
ja
int3
mov
loopne
dec
in
mov
imul
inc
test
adcb
and
add
loopne
jo
mov
daa
icebp
pop
test
in
insl
ret
cmp
lods
sti
pop
es
lods
pop
es
sub
sbb
outsb
pop
fcom
inc
aad
lahf
mov
pop
bound
lods
nop
addl
lods
xchg
pop
mov
pop
shll
mov
je
and
test
add
daa
or
sub
out
xlat
pop
push
data16
sub
pop
push
mov
fmuls
adc
push
xor
cmpsb
xor
fdivrs
cld
fscale
and
pop
nop
add
nop
xchg
mov
push
inc
jno
cmp
loop
ret
mov
mov
cwtl
jnp
js
jns
icebp
in
jns
push
jmp
outsl
mov
loope
pushf
rcrl
sbb
or
sub
or
adc
push
std
cmpsl
xor
add
stc
scas
cltd
js
xor
mov
or
jbe
fistl
es
fisubrs
in
into
cmp
in
dec
imul
dec
test
adc
pop
js
movsb
imul
mov
repz
std
mov
jae
pop
lahf
outsl
fcoms
loopne
je
dec
jns
stos
adc
add
leave
xor
pop
rorl
in
xor
push
inc
add
push
call
cwtl
mov
sub
das
add
mov
mov
mov
pop
cs
pushf
mov
inc
stos
lds
rorl
cld
jbe
mov
mov
lea
mov
rcl
movsl
adc
mov
adc
push
pop
pusha
leave
scas
sahf
mov
cmp
stos
rolb
je
adcb
sbb
push
push
pop
test
jl
movsb
pop
movsb
insl
push
pusha
es
jb
sti
mov
pop
push
sub
jmp
lret
ds
cmp
mov
out
cmpsl
aas
inc
cmp
or
clc
xchg
mov
cmp
add
inc
or
aas
push
sti
imul
mov
scas
push
or
sbb
int3
jns
shrb
push
cmpsl
icebp
pop
xor
or
mov
leave
ljmp
jle
icebp
cmp
psubusb
sub
lods
data16
or
push
xchg
xchg
push
xor
cmp
daa
pusha
mov
or
stc
ret
add
inc
arpl
cmpsb
or
and
stos
jns
xchg
sbb
sahf
lds
cmpsb
test
cltd
inc
cltd
ret
addl
xorb
push
arpl
in
clc
cld
shll
mov
ljmp
je
push
xchg
or
pop
jo
orb
ffreep
fdivrl
icebp
sub
adc
dec
test
pop
sbb
aas
hlt
mov
jae
inc
data16
mov
mov
adc
loop
push
lods
dec
cmp
cmp
mov
popf
loopne
out
push
and
mov
subb
jmp
cmc
adc
mov
insl
cmc
sub
lock
jmp
xchg
cltd
bound
mov
test
pop
mov
ret
loopne
addl
adc
clc
xor
cs
add
sub
push
xchg
popa
xor
neg
ja
jp
mov
orl
stos
xchg
out
add
cmc
lahf
mov
shll
pop
shrb
add
adc
or
ret
rcll
jmp
ss
xchg
lret
stos
mov
mov
sub
sahf
or
cmpsl
cwtl
mov
test
loope
inc
xor
fsts
loope
jg
bound
bound
pop
or
mov
cmp
pop
movsl
dec
push
in
inc
js
ret
xchg
shll
mov
imul
arpl
xor
inc
shl
imul
xchg
xchg
push
lea
fstpl
adc
mov
inc
and
shlb
in
lea
lods
insw
cld
notl
push
call
mov
je
mov
sub
or
jnp
js
cli
cmpsl
jne
xchg
mov
push
xchg
push
shlb
add
fiadds
adc
stos
movsb
push
push
and
lds
in
mov
lock
jae
repz
jmp
push
cs
mov
xor
movsl
push
lods
lods
stos
add
test
and
jns
cmp
xchg
push
test
scas
xchg
pop
cmp
into
mov
movsl
clc
jecxz
mov
mov
arpl
pop
push
jbe
pop
mov
popf
add
ror
push
jo
mov
mov
sbbb
popf
fs
scas
lods
mov
mov
fs
js
scas
into
or
insb
mov
hlt
outsl
ret
call
dec
cltd
xorb
mov
shl
mov
flds
and
ss
mov
jmp
push
sbb
nop
sub
cmp
cltd
arpl
jmp
shrb
inc
loop
jae
xor
pop
or
xchg
adcl
loope
fucomip
ss
sub
xor
and
scas
mov
lcall
and
arpl
out
mov
ja
adc
push
xchg
test
pop
push
cmp
xor
stos
sbb
mov
not
test
cli
loopne
out
push
inc
jae
sub
ljmp
cmp
sub
adcb
cmp
mov
inc
or
pop
pop
cs
push
cmp
sbb
iret
xchg
das
test
sbb
pop
jecxz
mov
sub
insb
mov
jns
int
test
inc
push
mov
dec
addr16
mov
cmp
dec
test
or
mov
imul
push
mov
mov
and
cmp
cs
xchg
jne
sbb
push
cltd
in
pop
push
icebp
lods
cld
dec
cmp
scas
add
int
mov
mov
ret
xorl
data16
or
mov
ffreep
push
push
shrb
movsl
outsl
cmpsl
sbb
mov
mov
in
xchg
push
in
int3
stos
inc
insb
or
lods
bswap
faddl
cwtl
pop
sbb
loopne
add
aad
data16
in
mov
loop
cmp
fcmovne
adc
shlb
sbb
jo
aam
fstpl
mov
stc
lods
es
lcall
pop
test
lods
sahf
dec
sub
inc
daa
sti
mov
or
ret
lahf
in
sbb
mov
cmp
fsub
and
je
and
adcl
xchg
push
push
adc
pop
inc
sbb
push
or
sbb
xor
cmp
and
jns
ljmp
sti
inc
iret
push
dec
ss
xor
int3
xchg
aam
inc
push
dec
or
out
loope
repnz
push
mov
adc
jmp
test
cld
and
mov
cs
mov
int3
daa
mov
lcall
stos
fwait
pop
dec
jecxz,pn
pop
data16
roll
movsl
xchg
cmp
jno
inc
iret
xchg
dec
adc
test
xchg
jge
je
je
imul
incb
addb
and
insl
test
rorb
cmp
inc
jb
insb
push
pop
jg
lods
ficoms
mov
test
shrl
out
pop
outsl
stc
push
loope
xor
cmc
ja
pop
add
add
inc
movb
mov
mov
mov
jns
enter
push
imul
test
push
fmull
jmp
cld
fst
arpl
imulb
mov
ds
mov
jmp
push
push
mov
js
mov
jge
xchg
test
leave
fwait
push
fdivrl
xor
sarl
jle
jmp
inc
das
loop
push
pop
push
ja
pop
jnp
jae
xchg
mov
inc
dec
test
fdivr
lcall
adc
xchg
fwait
inc
inc
xorl
aad
pushf
and
out
mov
adc
mov
insl
push
pop
popf
test
clc
push
xor
pop
or
xlat
or
jb
jge
pop
popf
int3
xchg
push
ss
js
push
sarl
xchg
sbb
add
incb
push
mov
and
add
xlat
inc
js
mov
push
je
xchg
mov
aaa
push
sbb
test
inc
nop
cmpsl
mov
aas
cmp
xor
inc
out
cld
jge
sbb
lock
jnp
mov
cmpsl
fyl2x
xor
push
jmp
lret
loop
mov
rcrl
lods
outsl
mov
pop
fsts
bound
inc
xor
lds
lret
xor
adc
ficoms
jns
mov
movsl
call
xor
rolb
push
mov
xchg
iret
dec
scas
lods
sbb
jge
inc
shr
adc
popf
dec
mov
inc
cs
pop
jnp
mov
fdivrp
les
in
cmp
ss
mov
pop
pusha
loopne
sbb
cmp
sbb
add
insl
inc
push
test
out
jg
cmp
in
pop
mov
push
cmp
and
pop
fldl
fs
js
sub
out
pop
xor
lods
fwait
pop
and
rolb
xchg
cs
inc
or
inc
and
push
enter
xlat
jecxz
lret
or
xchg
aas
sbb
push
adc
fs
mov
sbb
insl
pop
sub
lds
cmpsb
aas
iret
loope
andb
jge
subb
dec
adc
repz
and
cmp
mov
cmc
imul
sub
call
std
imul
or
add
or
les
inc
lea
incl
inc
mov
shll
sub
xchg
or
rcrl
fstps
cld
push
jecxz
adc
jge
in
das
and
cwtl
pop
in
fiadds
ljmp
or
nop
test
and
and
jecxz
inc
insb
push
mov
xlat
rcrl
ficoms
xor
sub
cmp
in
or
cmpsb
and
fcompl
aas
jb
mov
xlat
pushf
jl
mov
je
xchg
dec
and
mov
jmp
mov
pop
pop
xchg
mov
out
rcll
data16
ljmp
push
hlt
test
xchg
imul
cltd
jp
and
push
in
or
adc
shlb
and
mov
mov
arpl
cli
jg
xchg
push
jmp
and
movsl
leave
pop
pop
inc
cmp
enter
out
push
xlat
ds
and
mov
sub
inc
call
push
xor
lcall
lods
pop
mov
outsl
push
jo
mov
sub
adcl
or
rcrl
out
gs
clc
mov
lea
inc
lret
mov
imul
jmp
adc
dec
jmp
pop
inc
mov
cmp
dec
cmc
adc
mov
xor
sbb
mov
xchg
push
in
mov
aam
scas
mov
pop
clc
call
pop
jo
pushf
xchg
xchg
lods
dec
add
test
mov
shl
jmp
popf
or
mov
sub
inc
ror
insl
pop
fs
movsl
or
in
and
mov
ljmp
frstor
inc
jbe
cwtl
test
or
rcrl
imul
aaa
push
dec
daa
aad
outsb
jne
and
mov
in
mov
adc
and
xor
loope
outsl
movsl
outsl
cltd
and
cmc
cmc
lods
sub
bnd
add
addr16
gs
mov
lods
mov
cmpsb
push
sub
mov
adc
jae
aaa
pop
fiadds
movsl
in
xchg
pop
and
adc
pop
jmp
hlt
jns
mov
cwtl
mov
and
sub
adc
adc
int3
sar
aas
outsl
sub
fidivrl
mov
cld
not
push
scas
in
mov
and
mov
lret
lahf
xor
out
xor
jbe
std
jl
inc
dec
mov
inc
sub
in
cltd
lahf
jbe
sar
pusha
cli
loopne
pop
movsb
or
clc
insl
mov
in
hlt
xchg
push
divb
or
inc
and
std
test
repnz
xchg
cs
xor
or
push
outsb
or
xchg
push
xchg
into
adc
negl
subl
insl
sub
or
shll
adc
dec
inc
icebp
sbb
jecxz
repz
push
or
int
cwtl
lcall
dec
fbstp
jge
arpl
or
jge
mov
lea
arpl
test
out
jecxz
lock
cltd
cs
mov
rorl
andl
add
jl
in
and
cltd
mov
mov
rolb
les
mov
scas
sbb
notl
dec
xorb
sbb
out
inc
sti
roll
sub
loope
jl
insb
seta
cwtl
jle
dec
sub
mov
jae
stos
pop
pop
stos
push
call
xor
cmc
xchg
sarb
lods
mov
das
dec
mov
mov
lea
inc
in
addr16
paddusb
xchg
push
fldcw
int
cmp
mov
jge
jbe
nop
cmp
scas
dec
js
cs
adc
call
sub
cli
fcmovb
mov
andb
lea
jl
or
call
xor
mov
sub
in
sbb
mov
mov
cli
and
push
inc
jo
enter
lahf
lock
int
fwait
clc
or
cmc
add
push
icebp
cmp
test
inc
push
sub
iret
add
pop
test
push
cmp
pop
scas
ja
sub
jno
fcomps
add
push
ret
add
fcmovnbe
outsl
sbb
or
mov
sti
adc
daa
jo
gs
ffreep
adc
cmp
pop
imul
clc
mov
lea
mov
sbb
in
xchg
fs
inc
int
mov
add
xchg
push
icebp
inc
out
cli
flds
mov
cmp
xchg
and
cmp
and
shlb
inc
xchg
dec
jecxz
mov
sbb
ret
lds
shll
xor
aad
xor
inc
inc
jne
push
lret
popf
out
scas
cmpsb
xlat
push
loope
aaa
addr16
xor
xchg
jb
int3
xchg
lds
movsb
out
pop
sub
hlt
add
int
orl
or
sub
fadds
jo
rclb
and
and
dec
xor
insl
mov
jmp
lret
aas
dec
inc
push
cmp
sti
adc
and
out
lcall
out
adc
push
test
mov
loopne
lods
lock
cs
sbb
push
sti
fiaddl
push
test
jbe
ljmp
test
inc
or
jmp
or
adc
dec
pop
ljmp
jmp
ja
arpl
mov
in
jp
es
or
lods
cld
jae
mov
mul
sub
cmp
mov
aas
mov
xchg
and
dec
rorl
adc
stos
xchg
and
jg
aad
xchg
jle
lods
add
mov
mov
mov
scas
jo
pusha
mov
fistpll
outsl
jae
jnp
test
xor
mov
adc
pop
out
xchg
sar
mov
jmp
lcall
std
ret
sub
jns
jns
mov
scas
dec
sbb
js
push
popa
fcoml
jle
clc
in
cli
test
sbb
stc
in
cwtl
gs
inc
mov
test
insl
aad
xlat
push
mov
hlt
or
sahf
and
je
cli
lahf
xor
or
xchg
jl
out
lret
sbb
stos
aad
mov
cmp
mov
or
int
cld
popf
je
cs
rcl
mov
lret
inc
sbb
jno
aaa
ret
sub
add
sbb
cmp
or
dec
in
sbb
push
pop
mov
in
mov
lods
dec
push
xchg
sbb
cmp
mov
jae
movsl
lret
rcrb
fadds
loopne
aad
and
popf
xor
xor
adc
lret
ret
xor
and
cmp
sub
aaa
cli
cmp
test
push
xchg
mov
lods
movsl
movsb
ret
lcall
fwait
pop
das
jle
cmp
sub
std
xor
lret
fstpl
leave
sbb
out
insb
push
push
sbb
in
mov
mov
loop
xor
and
out
fdivrl
ja
iret
adc
sbb
adcb
int
pop
jp
adc
int
ror
jne
dec
ds
mov
xchg
shlb
loope
or
js
mov
cmp
cmp
lcall
push
adc
mov
xor
pop
lcall
out
or
dec
mov
xor
adc
or
jmp
xor
sub
les
lahf
pop
sbb
mov
stc
mov
pop
subl
andl
add
insb
and
jnp
cmp
repz
cmp
jne
out
imul
outsl
mov
cmp
pop
lods
lret
pop
jne
pushf
dec
gs
sub
xchg
push
xchg
lret
xchg
mov
xchg
rorb
dec
cmp
xchg
data16
cmp
jnp
push
mov
insl
rcrb
sub
dec
aas
pop
ds
stos
add
fcmovnbe
mov
xor
cmp
dec
movsl
imul
leave
cmp
sub
sub
add
cmp
aaa
call
or
pop
cmp
repz
mov
xchg
ja
xchg
repnz
rcrb
aas
push
sbb
cld
je
lret
aad
dec
or
push
dec
gs
lea
mov
rcr
adc
dec
or
jge
push
aas
cltd
popa
xor
cli
cmp
in
inc
bound
stos
inc
aas
fsts
jge
loopne
inc
or
jmp
jnp
loop
xchg
mov
sbb
sub
add
loope
cmp
sahf
and
adc
or
inc
push
ds
aad
sbb
es
js
xor
sub
pop
scas
cmpb
rclb
fcom
pop
jmp
mov
cmp
jg
push
sbb
jmp
jns
fidivrs
lea
cwtl
push
es
addl
mov
inc
jp
xchg
cmp
out
sbb
lsl
cs
mov
je
adc
xor
push
arpl
scas
add
sub
and
aas
push
xchg
sti
pop
icebp
jl
xchg
stc
jp
sub
push
out
inc
sub
mov
push
sbb
popa
int3
or
sub
test
movsl
repnz
jge
int
in
daa
lock
enter
mov
cmp
test
lds
and
mov
aad
mov
mov
out
nop
ret
pop
jb
gs
sub
ficompl
aas
pop
cmovae
daa
std
inc
dec
cs
mov
cwtl
mov
scas
test
pop
mov
push
scas
sahf
cltd
jo
movsb
dec
in
out
adc
inc
cmp
or
aam
adc
add
stc
iret
sbb
mov
punpckldq
mov
adc
or
inc
mov
mov
in
jle
mov
and
sub
mov
lods
loope
xor
movsl
out
push
pop
jecxz
cmpsl
push
and
inc
push
pop
mov
das
in
leave
add
sbb
scas
sbb
lcall
mov
sub
and
adc
outsb
mov
das
rcr
add
cmp
rorb
mov
xchg
gs
jae
cmp
loope
mov
push
sub
mov
into
je
movsl
lea
daa
push
mov
nop
xor
mov
pop
cltd
andb
inc
cmc
nop
inc
loopne
jl
mov
cmc
loop
pop
inc
outsl
in
inc
cmc
push
push
jp
pop
xor
jg
sahf
test
cltd
jp
jo
sub
push
jl
inc
stos
aas
das
addr16
call
lret
outsb
int
arpl
xorb
test
imul
push
out
mov
ret
rolb
sub
jo
pop
xchg
popa
mov
xor
jmp
in
jge
cmpsl
dec
mov
addr16
clc
xor
cmp
xchg
aaa
push
jle
cmpb
pop
cmp
mov
iret
xchg
rorl
bound
jae
dec
ss
call
dec
gs
jmp
mov
mov
sub
push
mov
push
jecxz
sub
inc
push
pop
lods
xchg
decl
adc
xchg
not
adc
adc
nop
rcl
scas
cli
insb
jge
shlb
lret
push
dec
push
pusha
out
sub
or
dec
ret
sti
daa
inc
ds
lock
imul
psubb
scas
lods
push
pop
mov
shrb
or
aam
mov
and
sbb
pop
js
mov
rclb
jnp
jle
movsl
sub
mov
push
mov
or
dec
sbb
or
sub
mov
mov
mov
sahf
push
pop
mov
mov
jp
jns
jno
leave
sub
aad
jns
mov
inc
dec
dec
add
push
pushf
lods
pop
loop
inc
les
fwait
rcr
adc
addr16
shlb
pusha
lods
pushf
jno
outsl
pop
push
call
loopne
out
in
pop
out
ljmp
fnstsw
xchg
and
test
jge
mov
inc
sub
in
and
loope
dec
or
leave
sub
outsl
lods
addr16
sti
cmp
pop
cmp
mov
cmpl
jnp
cmc
mov
add
or
lret
repz
cmpb
pop
icebp
out
inc
ds
data16
sar
mov
in
cmp
std
xchg
inc
nop
dec
mov
loope
flds
mov
insb
inc
sub
imul
popa
mov
add
push
mov
jnp
sbb
fldcw
stos
jg
addb
inc
pop
mov
jg
int
mov
scas
xor
pop
and
mov
jnp
imul
imul
fidivrs
loopne
arpl
xlat
loope
xchg
shrb
push
cmp
sub
rorb
or
cltd
pop
xor
dec
sbb
inc
dec
nop
lcall
pop
push
std
pop
stc
lock
cli
sbb
xchg
jl
mov
sbb
sbb
pusha
mov
xchg
adc
fistps
nop
mov
adc
add
jb
inc
mov
pop
out
or
sub
cmp
jae
es
aad
cli
subb
testl
cwtl
jle
sub
lds
ret
cmp
xchg
popa
shll
adc
pop
dec
frstor
je
or
dec
in
stos
neg
inc
jle
test
and
mov
ficomps
mov
pop
scas
iret
outsb
mov
in
pushf
mov
push
je
aad
fisubrl
mov
lret
cltd
ja
dec
stc
int
jmp
les
xor
sarl
pop
jae
pop
mov
cmpsb
or
xchg
into
insb
push
loopne
fnstsw
call
loope
push
push
add
mov
xchg
sbb
mov
arpl
push
xchg
ret
push
add
lcall
call
mov
pop
stos
or
rorb
jecxz
cld
mov
fsub
jbe
dec
sbb
add
pop
int3
mov
push
mov
pop
stos
mov
mov
push
out
mov
test
mull
outsl
js
ja
xor
push
pop
cmp
xchg
sbb
gs
and
sbb
cmpsb
mov
imul
push
lret
mov
movsl
mov
mov
in
push
inc
jle
lock
adc
rol
and
cmp
mov
dec
movsb
lret
mov
lock
xchg
mov
icebp
sub
scas
add
add
or
push
das
aaa
in
lret
outsl
lahf
fcomp
sub
dec
xchg
inc
lods
pushf
push
sbb
and
sahf
std
sub
pop
jmp
xchg
and
mov
test
dec
and
add
pop
inc
dec
inc
mov
sbb
aam
imul
mov
movsb
dec
enter
adcl
pop
or
leave
or
test
mov
frstor
cld
ficoml
mov
pop
daa
add
pop
ja
and
jg
insb
test
lods
xlat
mov
mov
testb
inc
xchg
arpl
cmp
addr16
in
loop
sbb
fwait
xchg
rolb
inc
mov
mov
cmp
push
xchg
and
stos
ss
shrb
inc
mov
lds
lret
lret
inc
sub
adc
inc
loopne
cmp
jl
jl
cmp
jb
inc
xlat
fimull
jb
shl
xchg
and
enter
ds
adc
dec
xchg
sti
arpl
aaa
ds
inc
mov
mov
pop
nop
ret
xchg
ja
dec
adc
ret
inc
stos
imul
adcl
lods
push
mul
pop
ljmp
or
xchg
cmp
jle
test
pop
sub
shrb
cmc
mov
dec
jg
insl
sbb
jns
push
jg
cmc
mov
mov
lret
push
sub
and
jbe
enter
fdivrs
lods
push
jne
in
sbb
rcrl
pop
nop
and
jp
imul
out
inc
jno
xchg
std
dec
ficomps
subb
mov
aam
jmp
or
sbb
aad
cmpsb
xor
ret
je
sbb
cmp
into
mov
nop
jb
lock
std
mov
xor
add
rcl
cltd
xor
into
add
enter
fcomps
out
dec
loopne
ss
mov
test
lahf
mov
pop
inc
data16
aam
loop
es
mov
rcrl
jg
aaa
stos
orl
pop
sbb
sbb
lock
fs
stos
mov
push
scas
ds
add
jg
push
cmp
mov
loop
js
mov
insl
insl
out
fs
jnp
ret
mov
mov
push
push
test
out
inc
loop
mov
pop
inc
into
cmp
sbbb
btc
pop
jg
mov
popa
repz
lock
jns
pop
loopne
mov
out
es
cmp
fcompl
outsb
mov
mov
mov
sti
sub
dec
imul
and
sbb
aam
inc
stos
arpl
push
test
loopne
pop
aaa
add
mov
xchg
movsb
mov
mov
cmpsl
je
adc
hlt
imul
mov
xchg
je
pop
std
dec
inc
cmp
mov
dec
testb
or
sbb
icebp
movsb
fcmovnb
ljmp
data16
es
sbb
xor
cltd
mov
xor
add
shll
insb
rclb
mov
out
aas
aaa
sbb
sub
rorb
fistl
pusha
xlat
out
mov
lods
jg
out
ljmp
xchg
jb
insb
cld
cld
sahf
push
loop
enter
leave
dec
jge
dec
inc
or
js
cmpsl
jl
and
aaa
pop
stos
sbb
dec
jmp
mov
mov
dec
inc
mov
pushf
jo
push
in
fwait
cmp
push
cmp
gs
mov
lret
imul
mov
and
dec
jnp
je
lahf
js
leave
fisttps
sbb
and
xchg
pop
jae
and
stos
fimull
stc
pop
adc
out
jbe
mov
icebp
push
push
mov
inc
shll
add
jecxz
cmp
pop
adcb
out
cld
mov
inc
cmpsb
jle
xchg
sub
sbb
mov
test
jns
pavgb
ret
out
sub
test
pop
cmpsl
sub
dec
aas
fisttpl
adc
int3
add
jne
fisubrs
mov
jl
cs
cmp
sub
aaa
aaa
mov
adc
or
in
in
outsb
int3
pusha
push
call
enter
dec
rol
es
jl
xchg
rcr
jo
lahf
lcall
clc
in
enter
pop
adc
cmp
es
or
out
ret
in
cli
rol
push
outsb
mulb
in
push
pop
and
sub
mov
push
and
mov
pop
jnp
sub
mov
cld
cs
xor
mov
clc
pusha
mov
js
iret
inc
push
sar
or
mov
enter
push
push
mov
in
mov
hlt
xlat
mov
out
xor
daa
fdivrs
pusha
fadd
aas
push
pop
mov
adc
lret
cmp
and
inc
out
push
xchg
fimull
sub
jno
and
or
jg
jne
loopne
jg
std
xchg
or
cmpsl
sub
xchg
xchg
inc
movsb
sub
imul
std
jmp
adc
pop
movsb
xor
push
div
dec
dec
mov
loop
mov
mov
jne
rorl
aas
test
lea
jle
mov
lcall
inc
xchg
in
or
xchg
dec
and
jns
pushl
or
xchg
cmp
fistl
ret
sbbb
outsb
sbb
push
add
inc
pusha
mov
andb
inc
stc
bound
push
pop
leave
outsb
outsb
dec
cmpsl
cld
or
add
mov
and
arpl
or
sbb
adc
aaa
dec
sahf
aaa
pop
inc
clc
pop
shrl
or
roll
xchg
subb
out
jge
xchg
rorl
inc
movsb
xchg
jmp
inc
adc
pop
imul
pushf
xchg
jae
jg
jmp
js
in
scas
call
push
lret
cmp
call
pop
mov
jecxz
loop
push
jg
jge,pn
lret
jg
dec
movsb
inc
scas
jo
ficomps
imul
cmp
or
mov
loope
and
jmp
mov
pop
adc
mulb
lock
jo
pop
cli
repnz
and
rol
or
jne
sub
lods
dec
or
add
xchg
cmpsl
mov
xor
pop
orl
adcl
clc
mov
fimull
jne
xchg
jecxz
jecxz
leave
inc
insl
in
pushf
jge
dec
js
mov
xchg
js
fadd
cmpsl
push
test
mov
xor
mov
add
cs
roll
dec
int
ljmp
aam
adc
xchg
out
or
dec
lods
sub
mov
dec
mov
cmp
and
pop
sub
dec
or
movsl
cmp
mov
push
lock
mov
dec
adc
xchg
jmp
ficoml
mov
jo
mov
push
dec
push
jno
daa
stc
fdiv
sti
and
jno
insb
xor
push
mov
cmpsl
pop
gs
xchg
imul
sub
and
jbe
sbbb
mov
adc
insl
les
push
mov
icebp
push
xor
addr16
insl
insl
cmp
mov
addr16
out
cmpsl
cld
jl
mov
clc
or
dec
sbb
xor
hlt
mov
les
mov
sub
inc
add
in
movsl
push
or
xchg
inc
pop
dec
or
sub
pop
mov
ja
dec
jbe
push
testl
xchg
mov
add
mov
js
mov
add
les
addr16
aam
mov
add
xchg
dec
addl
add
gs
mov
aam
mov
mov
stos
xor
xor
lahf
shlb
insl
in
int3
adc
cmp
lock
and
repnz
xchg
fstpl
push
cs
pop
rolb
inc
dec
xor
pop
sbb
sbb
mov
jo
rorl
pop
jb
leave
dec
dec
pop
and
je
mov
ret
cmpsb
lcall
vcvttss2si
cld
cli
adc
inc
xchg
xchg
sarb
movd
int
loop
sti
clc
popa
adc
ljmp
ss
add
lds
jp
add
popa
daa
inc
jle
mov
aad
imul
xlat
icebp
push
sub
lret
jbe
adc
push
xchg
or
mov
xchg
mov
or
cmp
cmp
cmpsl
add
mov
jnp
inc
jmp
shlb
xorl
cltd
aaa
or
add
nop
mov
out
inc
adc
mov
test
sub
jnp
cmp
jns
scas
pop
lock
sbb
in
xor
or
inc
sub
xchg
and
jp
rcrb
daa
push
fiaddl
push
icebp
insb
loope
mulb
mov
iret
jg
xor
inc
pop
mov
and
xchg
push
adc
cmp
ja
test
or
iret
pop
aam
push
dec
jno
int
hlt
or
or
sarb
bound
push
cmp
jl
stc
scas
sti
pop
in
mov
fldl
lods
xor
pop
and
mov
ret
sub
dec
stos
sarl
push
mov
call
aas
movsl
jle
sbb
xorl
pop
repz
xor
scas
enter
xchg
dec
fdivr
test
dec
pop
add
pusha
or
push
lret
inc
add
cmpsb
cltd
cli
adc
js
jp
mov
lods
mov
or
pop
push
scas
mov
call
int
dec
and
cmpsl
js
xchg
js
xchg
dec
fs
xchg
in
pop
sub
lcall
mov
push
js
inc
mov
cmc
sub
xchg
push
inc
test
xor
icebp
xchg
jmp
int
test
in
lods
mov
lret
adc
cwtl
jns
fadd
xchg
adc
fwait
mov
xchg
adc
cmp
aad
shl
pop
and
scas
imul
or
int3
fiaddl
out
sub
push
jns
xor
addl
or
inc
cmp
pusha
xor
in
loop
test
gs
sbb
mov
cmpsb
loope
repz
mov
add
mov
cs
mov
imul
or
sbb
std
sbbb
test
cmp
sbb
xor
repnz
daa
jns
xchg
popl
ret
fsubrs
xorl
adcl
leave
mov
sbb
sarb
lret
lods
mov
inc
pop
das
and
mov
pushf
adc
dec
or
lret
aad
push
cwtl
sbb
dec
add
cmpsl
icebp
add
and
jge
js
mov
push
mov
xchg
add
cld
xchg
mov
push
test
mov
mov
lahf
les
or
roll
adc
xchg
jl
mov
aam
insl
and
cmp
xor
push
pop
adc
nop
cmp
push
fiadds
dec
sbb
mov
out
fucom
xchg
js
mov
ja
xor
mov
jp
daa
jp
js
test
loope
dec
and
out
stc
addr16
pop
jo
push
push
rcll
mov
enter
sti
mov
leave
pop
aam
jae
add
std
cmpsl
mov
sbb
lret
adc
xchg
aaa
cmp
aaa
xor
push
xchg
jecxz
mov
lods
xchg
inc
aad
jae
cli
sub
pop
popa
jecxz
jge
inc
xorl
and
fsubs
xchg
ss
leave
mov
bnd
negl
lods
jp
mov
adc
or
add
sarb
sahf
push
outsl
cmp
xchg
inc
out
loope
shrl
fsubl
daa
xor
rcrl
bound
fs
jmp
mov
mov
push
sbb
jl
and
shlb
outsb
fucom
dec
fdivl
push
enter
and
mov
pop
int3
cmp
int
dec
push
jge
aas
mov
dec
mov
aaa
push
cltd
dec
adc
jmp
in
xchg
mov
test
daa
stos
shr
push
jmp
aad
test
mov
push
jae
mov
xorl
ds
std
xchg
mov
imul
fsts
fcmovne
adc
mov
push
pushf
test
shll
adc
pop
pop
iret
mov
call
mov
adc
jnp
xor
pop
xchg
or
ja
shr
mov
push
inc
and
mov
aad
and
cmc
inc
pop
xor
mov
mov
in
cltd
sbb
sub
pop
xor
xor
call
sarb
ljmp
pop
mov
sbb
cmpl
pop
test
xor
lfs
xor
imul
dec
es
and
aam
xchg
jbe
xchg
mov
popa
imul
xchg
ljmp
into
mov
test
rorb
popa
aam
imul
repnz
mov
xchg
push
mov
dec
cld
push
jmp
rclb
mov
adc
cmc
add
ret
lcall
cltd
adcl
add
rolb
arpl
imul
sbb
lret
sbb
loop
push
popa
fisttpll
scas
dec
std
outsl
dec
test
scas
lds
out
push
mov
div
pop
dec
loop
mov
add
cmpsb
jb
popa
xor
sbb
outsb
xor
push
xor
inc
mov
loopne
sbb
sbb
xchg
jo
xlat
push
fistpl
stc
or
daa
sub
cmc
push
mov
push
jp
pop
sub
les
int
push
inc
xlat
push
pushf
push
jle
xlat
repz
and
rcr
sub
lods
fcomip
fwait
out
jg
jnp
adc
push
sub
test
clc
pop
xchg
out
sbb
push
stos
inc
and
fdivrl
rorl
mov
cmp
xor
in
mov
lahf
imul
pop
in
popa
and
jecxz
jne
fmuls
shll
pop
add
mov
jge
or
mov
cltd
mov
pop
jmp
dec
push
jns
cmp
mov
lret
cmp
rorl
mov
xchg
mov
xchg
pop
cmp
xlat
and
adc
js
xchg
shr
lock
xchg
lods
leave
dec
inc
mov
adc
aad
sub
push
pop
outsl
sub
mov
inc
mov
lds
aam
push
loope
vphsubbw
mov
push
jo
pop
sbb
pop
push
or
mov
dec
test
adc
stos
arpl
mov
cltd
insb
ret
jmp
push
enter
jg
push
mov
divb
and
pop
shrl
mov
insl
enter
daa
pop
sub
inc
jnp
jb
out
add
mov
xchg
cmc
popa
mov
push
mov
cmp
mov
lods
sub
cmp
enter
sbb
daa
call
push
xlat
cmp
iret
outsb
sub
outsb
mov
push
lock
aas
mov
lds
insl
push
and
add
popa
mov
ss
mov
mov
xor
andb
sub
sti
sbb
jo
lds
popl
pusha
imul
xlat
dec
popf
sbb
addr16
call
mov
cmpsl
adc
inc
aam
out
sbb
movl
cmp
std
ss
cmpsb
sti
stc
push
das
mov
pop
stos
jmp
sbb
inc
imul
rcl
jle
push
loopne
add
sti
dec
adc
jne
cmp
repz
into
call
xchg
enter
xor
movsl
pop
cmpsl
adc
enter
leave
push
sbb
pop
sub
jno
adcl
and
sbb
in
ljmp
xchg
jp
mov
push
shrl
das
and
or
mov
lahf
mov
mov
and
outsl
movsl
pushf
push
into
in
push
outsl
mov
lock
pop
adc
repnz
sub
xor
mov
fimuls
jge
push
sahf
push
xlat
popf
inc
pop
movsl
addr16
call
fcomp
icebp
push
inc
xchg
out
lret
repnz
xor
push
dec
jb
inc
nop
xchg
and
cwtl
xor
dec
xchg
and
xchg
shrl
push
push
push
push
je
fcoms
xor
xchg
pop
iret
jns,pt
inc
cltd
mov
jg
fxch
outsb
jae
leave
pop
dec
into
push
push
push
xchg
ljmp
repz
push
fwait
add
jmp
adc
out
inc
cmp
test
xchg
jae
fiaddl
mov
cmpsb
imul
sbb
pop
shlb
pop
lea
push
dec
or
and
mov
lods
sub
jno
lea
dec
jb
lods
pop
mov
scas
lret
dec
scas
je
mov
orb
jns
mov
adc
addr16
cmp
popf
push
insb
inc
je
pop
mov
dec
mov
scas
jge
xor
cli
popa
mov
and
popf
cmc
or
add
cmp
stos
sbb
out
fsubs
fldt
dec
xchg
inc
enter
cld
fcoml
addr16
mov
xchg
xlat
sub
push
sbb
cmp
mov
gs
pop
jmp
push
push
jmp
sti
lods
add
cmp
leave
jns
sbb
pop
arpl
sbb
pop
push
inc
arpl
adc
mov
pop
es
jae
or
pop
movsl
xchg
ret
pop
dec
pop
mov
push
imul
adc
mov
add
xor
sub
in
push
rcl
pop
lea
adc
arpl
add
lret
hlt
es
mov
xchg
mov
outsb
loop
inc
add
repnz
adc
fimull
pop
jo
test
mov
fadds
call
sub
jnp
fs
sbb
testb
cmp
mov
addr16
push
mov
push
push
sub
push
xchg
insl
inc
xlat
xor
js
repnz
mov
ret
std
mov
stc
lret
testl
scas
leave
jo
es
inc
add
repz
loope
iret
push
xor
adc
cmp
jmp
mov
xchg
or
hlt
or
lret
push
aaa
inc
mov
mov
loope
fisttpl
cmpsl
xchg
arpl
jb
movsl
jae
push
xchg
addr16
dec
pushaw
jae
add
pusha
push
sbb
testb
sub
pop
push
push
pop
add
xchg
cmpb
and
jno
arpl
dec
xor
js
sub
sahf
sub
and
push
pop
sbb
mov
ss
in
mov
xchg
std
mov
cli
cmp
adc
rcr
pop
mov
dec
out
xor
pop
leave
scas
imul
xchg
ret
lret
xchg
daa
xchg
in
mov
jl
ja
dec
sub
aas
jle
adc
test
jmp
gs
out
cmp
rolb
loope
mov
repz
pusha
cmp
xor
dec
jbe
popf
xor
xchg
or
sbb
push
xor
xchg
and
adc
xlat
inc
add
rcr
push
push
lea
cs
adc
decb
add
adc
iret
cmp
das
xchg
cwtl
dec
push
cmp
aam
jb
inc
in
inc
sbb
ret
add
lods
cmp
jbe
outsl
pusha
jns
sbb
mov
aam
jge
mov
pop
cwtl
push
movlhps
cmp
fcmove
leave
pop
push
inc
out
mov
ret
fdivp
imul
into
push
push
xor
lea
mov
sub
mov
in
jp
aaa
loope
aam
dec
mov
xchg
or
test
pop
adc
popf
in
xor
cmp
xor
hlt
mov
arpl
jae
stos
or
and
pop
adcb
and
test
out
fidivl
lods
dec
dec
jl
cmp
sbb
mov
mov
jle
jl
in
lods
fwait
sub
mov
dec
pop
pop
inc
sbb
clc
insl
sub
fidivrl
adc
push
mov
push
xchg
pop
int
in
jo
lea
push
adc
xor
cmpsb
ficoms
les
push
lea
sub
lcall
push
fistl
std
ja
clc
imulb
in
or
inc
sbb
int
imul
fisttpl
cli
xor
pop
in
adc
inc
repnz
jle
sub
mul
xor
daa
mov
inc
ja
xchg
call
xor
inc
aad
ja
lahf
in
xor
rolb
xchg
fisubrl
pop
arpl
int3
fidivl
pcmpeqb
ds
mov
sar
sahf
std
ret
push
scas
and
sbb
sbb
mov
cwtl
scas
pop
std
ja
or
in
rcrl
mov
rcrl
mov
pop
repnz
push
and
push
mov
js
sub
push
in
daa
cli
fwait
fs
pop
or
and
fldl
outsb
fistps
lahf
and
xchg
jo
sbb
out
add
sub
pop
sar
push
pop
loopew
les
cmpsb
cmpsb
xchg
or
dec
cmp
inc
mov
fdivr
fsubl
mov
movsb
inc
jg
cmpl
sbb
movsl
jo
pop
idivl
pusha
int
dec
sarb
in
xchg
repnz
pop
push
ljmp
cmp
jle
iret
mov
adc
sbb
roll
imul
mov
mov
sbb
in
aas
aas
push
popa
inc
jle
cwtl
loop
rolb
arpl
push
ret
test
in
add
pop
scas
sbb
loop
sub
cmpsb
daa
dec
lock
test
lret
fcompl
mov
hlt
jbe
sbb
cwtl
jmp
adc
scas
clc
xchg
xchg
movsb
fcmovnbe
mov
ret
test
xchg
or
insl
mov
sbb
aas
je
mov
cmp
inc
pop
inc
or
push
or
movsl
roll
stos
pop
xlat
xor
fdivs
movsb
negl
aad
jno
jae
jns
cwtl
pop
ret
mov
push
scas
rorb
sgdtl
in
push
adc
sahf
xor
push
fnstenv
fsts
movsb
sub
xor
loop
add
mov
inc
or
and
xchg
sub
pop
xchg
push
or
dec
xor
xor
mov
push
pop
test
sub
pusha
and
pop
xor
and
addr16
clc
jb
push
sbb
lcall
in
popa
xor
sbb
xor
sbb
sub
cmp
cmpsl
in
push
mov
push
stos
push
adcl
mov
mov
cs
orb
sub
ret
mov
mov
les
xor
sbb
pop
andl
inc
push
addr16
push
adcl
rcrb
xor
es
mov
sub
rcl
lock
dec
rclb
lock
lar
dec
push
and
sub
sti
cmpsl
jnp
mov
stc
and
pop
scas
or
daa
imul
enter
and
pop
fs
pop
xchg
inc
pop
mov
ja
jle
mov
lds
cmp
sahf
clc
outsl
mov
cmp
adc
jno
fnstsw
fstpl
test
movsl
call
jnp
gs
adc
out
pop
fstps
cmpsb
int3
lea
dec
xchg
mulb
sbb
mov
js
sub
addr16
bound
cmc
fbstp
fdivl
js
addb
fs
adc
jmp
mov
dec
addr16
cltd
inc
fcompl
arpl
inc
pop
lea
push
or
push
sbb
aas
lock
scas
xchg
jnp
lsl
es
jbe
mov
add
xchg
pusha
jp
jmp
mov
xor
push
leave
test
pop
cmp
push
xchg
lods
sub
sti
adc
push
adc
mov
pop
dec
flds
mov
insb
xchg
cmp
mov
int
pusha
xlat
pop
mov
aad
inc
mov
jne
es
cwtl
pushf
xor
jl
pop
enter
mov
leave
jecxz
mov
fldl
and
mov
add
push
stos
push
xor
mov
mov
dec
add
cmp
xor
jns
addl
and
add
shll
sti
inc
cltd
arpl
cmp
shl
into
xchg
push
decl
ret
out
sbb
add
pop
les
bound
jle
cltd
and
iret
popa
data16
pop
lahf
aam
mov
std
in
cli
xchg
xor
lea
ds
push
adc
add
pop
mov
push
jp
pop
stos
dec
imul
outsl
lds
add
jp
add
add
sbb
fists
out
xor
adc
or
mov
mov
outsl
dec
add
mov
fs
sub
mov
pop
jle
mov
dec
dec
je
cmc
cmp
inc
cs
dec
mov
cmp
enterw
sbb
push
in
jl
cli
bound
sar
add
inc
dec
sti
sub
pop
lock
arpl
fdivs
aaa
cmp
shrb
adc
ja
push
mov
repnz
adc
mov
mov
xchg
pop
sarl
mov
es
scas
data16
dec
xlat
data16
aas
fs
ja
dec
dec
