push
mov
push
push
mov
mov
mov
mov
push
mov
push
add
push
lea
lea
pop
call
push
push
lea
push
call
mov
mov
neg
add
add
sub
add
mov
imul
add
mov
imul
add
mov
mov
add
and
add
mov
mov
movl
mov
mov
lea
call
mov
mov
add
xor
add
decl
jne
addl
pop
pop
leave
ret
push
push
mov
mov
push
pop
movzbl
xor
mov
inc
and
rol
imul
inc
mov
add
mov
mov
not
mov
add
not
shl
imul
add
imul
dec
decl
mov
jne
pop
mov
pop
ret
mov
add
mov
test
je
add
add
add
add
add
push
mov
push
lea
xor
cmp
jbe
add
inc
cmp
jb
mov
add
xor
cmp
jbe
add
inc
cmp
jb
pop
pop
xor
inc
ret
test
je
test
je
test
je
jbe
push
sub
mov
mov
mov
inc
dec
jne
pop
mov
ret
xor
ret
push
xor
cmp
jbe
push
lea
mov
add
mov
mov
add
inc
add
cmp
jb
pop
pop
ret
push
mov
sub
push
push
push
push
xor
lea
push
push
mov
call
add
xor
movzbl
push
mov
call
inc
pop
cmp
jb
lea
push
mov
mov
movb
mov
movb
mov
call
mov
lea
push
call
add
pop
pop
cmp
je
xor
inc
jmp
push
mov
call
push
push
push
push
push
push
push
push
mov
call
mov
cmp
je
cmp
jne
testl
je
cmp
jne
push
pushl
push
pushl
call
jmp
cmp
je
push
push
push
push
call
push
mov
call
xor
pop
pop
pop
leave
ret
push
mov
mov
mov
sub
add
push
mov
test
jne
xor
jmp
mov
add
mov
push
mov
mov
mov
push
mov
add
add
add
mov
mov
test
jns
and
sub
cmp
jae
mov
jmp
xor
mov
cmp
jae
jmp
mov
mov
mov
mov
add
mov
call
cmp
je
incl
mov
cmp
jb
mov
mov
mov
cmp
je
movzwl
mov
add
test
je
mov
add
cmp
jae
cmp
jb
xor
cmpb
je
inc
cmpb
jne
push
lea
push
push
mov
call
add
lea
push
mov
movb
call
mov
test
jne
xor
jmp
lea
call
push
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
andl
lea
push
movb
mov
mov
mov
mov
rep
mov
pop
push
rdtsc
mov
mov
test
jne
movl
jmp
mov
not
xor
ror
not
mov
movzbl
lea
cmpb
jne
push
push
pushl
movb
call
mov
push
call
push
push
pushl
mov
call
mov
mov
mov
cmp
jne
movzbl
push
push
pushl
call
pushl
push
pushl
call
xor
inc
pop
leave
ret
push
mov
cmpl
push
push
jb
mov
mov
mov
pushl
popl
sub
lods
mov
xor
mov
stos
mov
sub
sub
rorl
sub
dec
mov
jne
pop
pop
pop
ret
push
push
mov
mov
mov
mov
mov
mov
mov
cmpb
jne
cmpb
jne
pop
pop
ret
push
mov
push
mov
movzwl
movzwl
andl
add
je
push
mov
push
lea
testl
je
mov
mov
and
add
push
push
pushl
call
jmp
mov
mov
add
add
movzwl
movzwl
incl
add
add
cmp
jb
pop
pop
pop
pop
ret
push
mov
push
push
andl
push
call
lea
mov
test
jbe
mov
mov
mov
and
rol
movzwl
dec
lea
mov
jne
testl
je
push
mov
and
or
add
mov
pop
mov
leave
ret
mov
xor
cmp
je
inc
inc
cmpb
jne
ret
push
mov
mov
add
mov
sub
test
je
andl
push
lea
lea
cmpl
mov
je
push
mov
mov
add
push
mov
call
mov
andl
add
cmpl
mov
je
mov
mov
test
jns
and
mov
jmp
lea
mov
mov
push
pushl
mov
call
incl
mov
mov
lea
cmpl
jne
mov
incl
mov
mov
imul
lea
lea
cmpl
jne
pop
pop
xor
inc
leave
ret
push
mov
sub
push
push
mov
push
mov
movb
movb
call
mov
xor
mov
cmp
je
mov
jmp
push
mov
call
lea
push
mov
push
mov
call
push
mov
call
cmp
je
cmpl
jne
call
cmp
jne
lea
push
mov
call
mov
mov
mov
push
mov
call
push
call
lea
push
push
push
push
call
mov
mov
mov
mov
push
lea
call
push
call
push
push
push
push
call
add
mov
test
je
lea
call
pushl
mov
pushl
mov
push
call
mov
sub
mov
mov
add
push
mov
and
add
push
add
call
mov
mov
mov
mov
add
mov
add
movzwl
lea
add
mov
movzwl
lea
mov
mov
sub
xor
mov
mov
mov
cmp
je
mov
cmp
je
add
mov
mov
mov
jmp
mov
mov
mov
cmp
je
add
lea
mov
mov
mov
mov
add
push
push
push
call
or
sub
mov
mov
mov
sub
push
push
call
call
test
je
cmpl
je
mov
mov
call
movzwl
xor
xor
mov
cmp
jae
mov
mov
addl
push
pop
rep
mov
mov
mov
add
add
mov
mov
movzwl
inc
cmp
jb
mov
mov
mov
add
mov
mov
pushl
mov
pushl
mov
mov
push
pushl
call
pop
pop
pop
leave
ret
cmp
cmc
cmp
outsb
add
add
add
adc
add
and
jb
pop
cli
mul
dec
js
mov
and
mov
inc
sub
hlt
fisubrs
je
push
xor
mov
jne
xchg
fistl
daa
fstp
pandn
inc
push
add
push
out
xlat
and
lret
inc
or
lods
in
or
sub
pop
sub
dec
lret
sahf
jmp
cmp
aaa
add
sub
add
lods
or
pushf
pop
push
out
dec
ljmp
in
mov
mov
mov
cmp
movsl
lret
lcall
pop
movsl
dec
in
test
push
fwait
lahf
mov
sbb
cs
xor
cmp
dec
cltd
jb
mov
leave
xlat
subl
fiaddl
movsb
xchg
hlt
loopne
mov
mov
jae
jmp
sbb
mov
xchg
leave
scas
xchg
addr16
or
filds
pop
test
fidivs
xchg
jmp
test
or
shrb
loop
xorl
inc
pop
push
jle
lahf
add
subl
std
aas
lahf
jnp
adc
inc
mov
dec
cwtl
sahf
lahf
add
xor
xchg
sub
mov
xorb
mov
sti
dec
ror
cmp
push
ss
push
cmp
adc
pop
inc
mov
xor
cs
aaa
push
inc
mov
mov
mov
fcomps
cmp
pop
incb
in
data16
call
mov
jge
rorb
sbb
popw
xor
xor
xchg
in
add
xchg
pop
imul
mov
lret
lret
roll
test
xchg
js
les
fstpt
or
pop
mov
xchg
sti
enter
mov
push
rorb
dec
and
aad
iret
cmpsb
push
ret
iret
nop
jge
jns
jle
je
cmp
insb
pop
daa
push
jmp
enter
sbb
push
fcmovb
loope
mov
mov
shlb
mov
pop
mov
out
dec
adc
aam
cmp
mov
addr16
dec
push
push
shll
sbb
in
mov
in
xchg
xor
add
xor
loopne
rolb
data16
mov
in
cmp
mov
imul
xor
out
outsl
ds
jo
fdivs
loope
xchg
sbbl
add
inc
sub
fs
iret
and
jmp
lds
mov
jns
bound
mov
push
ds
jle
add
fcomp
xchg
jno
dec
pop
cmp
jp
jg
cmp
mov
sub
xchg
paddsw
mov
jb
lahf
mov
xor
lods
loope
in
xlat
loope
je
jl
fwait
addr16
pop
inc
cmpsb
jge
mov
int3
sub
les
insb
pusha
or
or
test
push
aas
mov
mov
pop
lahf
jns
mov
aaa
cmc
xlat
add
sbb
int
movsb
cmp
imul
or
mov
pop
push
repz
mov
icebp
sbb
pop
js
adc
stos
cmp
adc
arpl
pusha
mov
mov
mov
stos
pop
aam
xor
pop
or
ret
dec
jnp
imul
mov
ljmp
mov
dec
out
andl
into
mov
inc
mov
cmp
fstl
jae
enter
dec
lea
in
rcll
dec
and
add
aas
scas
loope
adc
lret
push
xchg
pop
mov
les
and
movaps
mov
mov
cltd
les
xchg
arpl
and
test
jg
popf
pop
pushf
mov
mov
cmpb
inc
or
inc
jno
jae
inc
ret
add
adc
pop
jns
in
ror
call
xchg
inc
lahf
jg
cmp
cmp
and
sbb
mov
jno
shll
aad
push
mov
bswap
inc
dec
aam
pop
fs
pop
sbb
add
popf
mov
add
sti
lea
clc
testb
es
popa
outsl
popf
xchg
in
divb
cmp
lret
sub
cmp
test
cli
mov
and
call
fmul
mov
lret
inc
jle
mov
lret
clc
and
aaa
jecxz
gs
xchg
sahf
mov
sub
inc
movsl
pop
xchg
imul
jmp
scas
add
testl
mov
add
add
pop
pop
insl
push
dec
mov
cmpsl
aas
xchg
mov
loopne
mov
sub
mov
and
dec
out
addr16
jno
jne
inc
fimull
scas
jl
lcall
or
push
cmp
out
pop
imul
es
sbb
jbe
xorl
xor
add
repz
xchg
jmp
mov
out
stc
orl
dec
outsl
scas
lret
test
jb
jno
mov
popf
cmpsb
push
pop
leave
pop
adc
cli
sbb
dec
push
adc
roll
jmp
jge
lcall
inc
popf
cmp
repnz
xor
pop
flds
sahf
adc
xor
outsb
add
cli
push
insl
xlat
pop
and
jle
jbe
loop
jmp
dec
cli
pop
jno
jbe
clc
cli
jns
ficomps
push
ds
dec
pop
int
xchg
mov
loop
jmp
sub
jp
sub
js
sub
or
aas
push
sti
cs
adcb
and
add
insb
mov
aam
shrl
outsb
lods
xchg
cwtl
add
push
rcrb
sbb
das
cltd
sub
xor
popa
inc
aam
xlat
xlat
add
fnstsw
jno
lods
push
and
push
and
mov
jmp
fbstp
scas
mov
pop
mov
mov
xchg
push
adc
test
jp
daa
aad
into
and
jg
sbb
aam
lds
dec
jge
sbb
and
je
pop
hlt
jle
and
jge
scas
sahf
addr16
aad
leave
push
pop
shll
mov
push
xchg
cmp
xor
js
in
push
jg
pushl
pop
fisubrl
cltd
sbb
lcall
pusha
or
jns
stos
rcr
sbb
xor
aas
mov
and
xor
sarb
inc
mov
in
dec
sbb
lock
sbb
adc
outsl
pop
and
aad
cmc
sub
pop
js
inc
lcall
ret
mov
daa
subl
add
mov
out
add
inc
aaa
test
cltd
je
inc
lret
mov
test
out
bound
stos
cmp
fisubl
adc
inc
mov
mulb
jecxz
xchg
mov
sahf
lods
dec
mov
push
sbb
xlat
inc
cmpsl
aaa
cmp
xchg
cmp
or
push
pop
test
and
push
out
xchg
or
mov
insl
xor
out
adc
jl
push
fwait
jge
cmp
push
dec
imul
ret
mov
adc
dec
or
xchg
and
inc
mov
jp
hlt
incl
subl
sbb
add
xchg
bound
pop
imul
add
xlat
jnp
out
push
xchg
cli
sub
dec
divl
mov
loope
push
xchg
cmp
repnz
ljmp
push
test
xchg
fbld
ds
fcoml
jb
lock
inc
add
xchg
push
inc
xchg
stc
mov
inc
sub
sub
cli
cmp
mov
dec
mov
jge
cmp
mov
int
aam
lret
lahf
or
out
cltd
inc
pusha
dec
cs
lods
mov
xchg
xlat
lret
in
dec
mov
and
mov
or
inc
jl
call
es
stc
cmp
xchg
jl
mov
nop
into
xorl
imul
mov
cmpb
inc
adc
imul
adc
xor
jmp
add
and
and
mov
in
mov
fmuls
inc
xchg
adc
sbb
ljmp
mov
jecxz
mov
cmp
fnstsw
push
std
xchg
or
scas
call
push
push
lcall
jmp
popl
push
in
aaa
imul
rcl
cli
imul
sub
mov
mov
mov
sar
xor
or
test
or
aad
push
or
mov
sbb
pusha
bound
in
loopne
xchg
mov
mov
adc
lret
fmull
push
movsb
sbb
pop
cmp
ljmp
push
iret
aaa
jle
sbb
jle
xorl
or
cmp
cwtl
test
roll
lret
test
sbb
inc
mov
fs
mov
cs
sbb
ret
daa
sbb
cmpsl
xor
jno
xor
outsb
les
add
arpl
test
xlat
sti
test
andl
mov
int
movsb
cmp
subl
lcall
jle
out
cmp
xchg
adc
cmp
out
lea
stc
pusha
add
icebp
imul
dec
push
ja
mov
cld
fldcw
movsl
sub
shlb
rcrb
insb
push
or
mov
pop
mov
daa
push
mov
fiadds
cmp
mov
outsl
jae
daa
movsl
and
imull
xchg
or
xchg
out
xchg
repnz
sub
jg
stos
scas
mov
inc
dec
mov
lret
mov
icebp
pusha
pop
lahf
int
xlat
xor
push
xchg
xlat
mov
movsl
test
movsl
in
dec
shr
sub
loope
mov
loope
enter
pop
movsb
mov
cmpb
mov
pop
pusha
shl
loope
or
loopne
mov
sub
mov
xchg
mov
test
mov
aaa
or
mov
xchg
das
add
and
adc
out
sbb
pop
or
and
ja
xorl
lea
mov
pushf
jns
adc
add
sahf
push
mov
dec
jno
cmpsl
dec
in
ja
mov
pop
mov
out
cmp
jg
leave
mov
xchg
in
xchg
js
jbe
out
mov
ja
cmp
adc
xchg
test
cmp
daa
sbb
xor
sbb
jae
cmpsb
idivb
mov
xchg
out
imul
jmp
shrb
in
mov
cmove
sahf
test
cwtl
jo
dec
push
movsb
jp
mov
pop
and
fstps
lcall
add
test
mov
in
inc
and
mov
mov
jg
in
jne,pt
xchg
insl
dec
enter
push
mov
push
mov
inc
add
jge
cwtl
mov
icebp
enter
cmp
inc
and
xchg
xor
sub
dec
in
dec
xor
lea
jns
in
mov
fwait
inc
cltd
ficomps
mov
je
lods
mov
std
lods
dec
js
lods
mov
xor
rolb
addr16
add
fwait
repnz
and
aaa
scas
sbb
pop
and
test
cmp
jnp
sub
test
mov
pusha
imul
sub
mov
lcall
insl
ret
sbb
dec
test
test
xor
nop
repnz
ljmp
jmp
cltd
pop
mov
sbb
push
add
sub
out
sub
jns
pop
jge
inc
mov
bound
mov
pop
mov
les
mov
int
lea
and
xor
roll
dec
sbb
sub
xchg
sbb
jl
sub
pop
lahf
jmp
ret
out
pop
aad
rorl
lds
out
addr16
or
mov
shlb
pop
mov
mov
lock
xor
mov
jg
fcomp
xor
xorl
ja
jmp
or
push
in
cld
mov
gs
scas
add
dec
pop
and
jne
jns
jae
add
mov
cmc
repz
stos
xchg
jo
pop
push
pop
test
mov
pop
scas
sub
mov
xor
mov
movsb
sub
sbb
in
data16
rolb
addl
xorb
cmp
adc
cmp
lock
imul
lret
adc
lea
lret
vmovhps
lods
es
lret
insl
dec
mov
rolb
scas
fadd
pusha
movsl
and
push
dec
lds
imul
sbb
sub
pop
in
inc
shlb
loopne
jmp
fcmovbe
sbb
mov
les
xor
rcl
out
int3
and
mov
testb
lods
pop
xor
fisubs
mov
mov
pop
clc
inc
stos
std
aaa
dec
jge
rcrb
ss
mov
pop
push
and
jecxz
loopne
in
sbb
push
or
sub
jle
inc
cmpsl
cmpsb
inc
cmp
mov
aaa
sub
fdivr
pop
hlt
push
adc
push
push
gs
mov
sbb
insl
lea
dec
xchg
cmp
repz
test
mov
aaa
lcall
xor
xlat
icebp
arpl
pop
mov
ret
inc
scas
aad
sub
hlt
out
push
sub
or
arpl
and
and
ds
cmp
sbb
popa
push
and
roll
push
adc
cmp
loopne
and
ljmp
and
out
inc
cmpsb
add
lock
xchg
sub
add
int
xlat
pusha
outsb
loop
inc
fbld
movb
in
fcompl
out
fstpt
push
jae
call
stc
test
lds
push
nop
dec
cmpsb
and
sahf
imul
inc
xlat
and
xchg
cmp
pushf
jmp
shll
rol
lcall
mov
jge
push
xlat
in
push
in
clc
cmpl
fwait
movsl
dec
enter
pusha
dec
jle
test
clc
fwait
outsb
aas
pop
enter
xor
insb
lock
lds
hlt
xchg
and
in
movsl
cwtl
adc
cmc
data16
in
dec
jecxz
inc
pop
dec
xor
je
pop
cld
inc
mov
mov
mov
aaa
push
aad
jnp
adc
push
and
push
ret
pop
out
mov
pushf
sti
adc
jae
imul
pop
scas
jbe
cmp
or
cs
cld
hlt
sbb
leave
in
out
push
lods
pop
pop
pop
jg
fsubl
push
pusha
bound
ds
mov
arpl
std
cmpsl
call
cli
xor
xchg
sub
pop
push
xchg
mov
imul
leave
fwait
cmp
int3
lcall
hlt
stc
int
es
and
out
mull
inc
int
fistpl
sub
ror
and
inc
movsl
pop
pop
sahf
jg
push
pop
jecxz
mov
repnz
movsb
mov
rclb
loopne
add
sub
xchg
cmp
adc
or
sub
xchg
inc
lret
push
pop
ljmp
test
pop
push
fstl
ror
cli
pop
loop
aad
inc
xor
loope
scas
dec
dec
sub
or
hlt
pop
push
xlat
or
das
pop
test
and
sub
ds
adc
add
sub
mov
std
inc
mov
stos
mov
cmp
stc
jb
inc
jbe
cmc
or
mov
filds
and
mov
pop
lret
and
lock
sbbl
sub
xor
mov
addb
loopne
bound
ret
inc
inc
jae
fists
or
sbb
add
adc
shll
and
mov
fdivs
andb
leave
mov
pop
scas
aaa
mov
sti
xchg
mov
test
jno
icebp
mov
inc
dec
or
test
pop
add
rorl
fiadds
jle
mov
mov
lret
inc
and
pop
mov
daa
and
sbb
subl
fisttpll
out
jp
lods
sub
imul
adc
faddl
pop
fwait
and
push
xor
jbe
filds
test
std
xor
push
pop
scas
into
pusha
jnp
cmpsl
sbb
out
mov
and
das
cmpsl
jmp
xor
lods
subb
add
cmp
dec
mov
fdiv
adc
sahf
fsubs
mov
adc
and
xor
ror
mov
add
ret
fistl
and
call
hlt
mov
push
push
cmp
jae
pop
cwtl
or
or
mov
mov
mov
pop
lods
popa
popl
cld
xor
enter
imul
xchg
xor
and
jne
ljmp
jp
lods
aaa
shlb
jno
mov
add
nop
mov
cmp
aaa
aam
mov
push
xor
repnz
xor
and
in
aam
or
lds
pop
inc
xor
sbb
fisttpl
add
addr16
bound
push
jmp
jecxz
jp
and
shrb
pop
test
mov
add
bnd
and
and
test
outsl
inc
xor
or
jmp
int
fwait
xor
pop
mov
test
xlat
dec
rclb
mov
iret
ret
push
xor
loop
mov
mov
inc
xchg
cwtl
push
push
jnp
imul
repnz
scas
xor
fwait
pop
dec
mov
insl
leave
cmpsb
or
sbb
pop
mov
and
fcompl
test
insl
push
mov
decb
jbe
dec
add
aaa
sbb
sub
in
inc
xchg
inc
loop
jno
mov
jl
inc
or
in
in
scas
and
adc
fnstsw
and
pop
inc
jl
iret
aas
loop
mov
inc
and
add
or
xor
icebp
fiaddl
sbb
dec
fsubs
jbe
mov
inc
ljmp
popf
lods
mov
push
mov
roll
jb
sahf
inc
adc
loop
mov
xor
aaa
shlb
out
lods
and
push
pop
lret
das
xor
jle
clc
rcr
es
push
hlt
xorb
push
test
xlat
lcall
fdivr
pop
outsl
loop
ret
pop
hlt
in
movsb
psubusw
aad
inc
int
loop
out
sbb
xchg
push
push
xchg
cwtl
dec
adc
sub
adc
push
sarl
iret
movsl
mov
imul
jmp
out
add
in
jp
into
bound
lret
push
add
and
gs
jae
jno
in
push
sub
fs
mov
adc
call
sub
xchg
int3
inc
ds
outsb
mov
mov
jl
jb
or
cld
push
int
loop
and
and
xchg
call
into
test
sbb
sub
inc
test
imul
mov
roll
xchg
lret
xchg
and
push
inc
in
xchg
shlb
push
mov
repnz
xchg
mov
pop
cmp
sarl
ljmp
pop
movsl
xchg
stos
loopne
fdivl
add
test
push
sub
add
push
inc
fistpl
popa
sub
decb
testl
xor
dec
and
xor
fwait
call
fsubrl
xchg
test
hlt
lahf
lods
insl
pop
sub
inc
xor
mov
sub
mov
stos
in
add
clc
mov
sbb
or
xchg
sbb
jmp
adcb
jnp
sbb
in
xchg
out
add
xchg
cltd
popl
pop
push
xor
mov
xchg
and
add
out
lret
in
in
mov
adc
pop
cmp
pop
dec
push
and
mov
sbb
pop
dec
cwtl
orb
xchg
xchg
mov
mov
hlt
or
lret
push
sbb
scas
push
mov
mov
in
add
das
negl
or
pop
lods
mov
subl
dec
stos
notb
dec
sub
imul
inc
iret
dec
mov
mov
fldl
out
push
lods
cmp
push
data16
pop
in
mov
add
mov
add
cmpsb
dec
stos
in
pop
clc
jnp
jmp
insl
jb
mov
push
add
loop
xor
mov
xor
or
pop
sbb
mov
sub
push
dec
xchg
nop
and
sbb
or
ss
cs
xor
inc
mov
mov
insl
call
jmp
jb
jp
mov
fs
mov
pop
int3
push
pop
jae
dec
int3
js
pushf
dec
mov
dec
adc
cmp
shll
push
jmp
push
bound
xchg
xchg
mov
cmp
jle
pop
insb
fnstsw
cltd
hlt
aam
fldl
and
push
out
sbb
xchg
xchg
push
in
inc
daa
int
movsb
ds
jle
insb
leave
sbb
loopne
rcrb
lods
stos
mov
jbe
les
negl
and
ds
in
push
scas
insb
aas
call
daa
xor
mov
jmp
test
mov
cmp
jl
nop
and
cmpsl
repz
out
add
aam
stos
loope
andb
shll
dec
rolb
scas
mov
mov
sub
mov
jns
sbb
pusha
mov
rcll
fcoms
popf
cmp
imul
ja
cmp
adc
push
jb
outsl
sbb
cld
mov
in
les
jnp
decb
pushf
mov
andb
lds
xlat
imul
inc
shrl
fcompl
loopne
aam
fldl
stos
mov
mov
jne
or
push
inc
sub
mov
adc
push
jg
sub
cmpsl
xlat
mov
cmp
push
mulb
fldl
jno
add
lods
xor
jg
mov
and
pop
fwait
in
js
and
jge
cltd
insl
das
imul
xor
and
dec
pop
push
rorb
sbb
stc
int
sbb
xchg
mov
std
es
out
repnz
adc
jbe
sahf
sub
dec
xchg
cld
sbb
mov
pop
mov
insl
stos
int
adc
stos
add
loop
gs
ljmp
cmp
mov
adc
cmpsb
je
nop
call
lcall
jmp
popa
imul
jo
cmpsb
sbb
cmp
ffree
add
hlt
shl
int3
shlb
adc
pop
js
aad
incl
addr16
mov
imul
mov
mov
push
cltd
outsl
repz
pushf
xor
and
xchg
mov
and
icebp
add
pop
into
movsb
pop
ret
ss
addl
lcall
adc
and
nop
stc
jl
sbb
cli
nop
rorb
pop
cmc
and
sbb
dec
cmpsb
rorl
pop
lock
mov
notb
mov
mov
mov
andb
insb
lock
insl
inc
pushf
mov
sbb
imul
pop
add
fs
call
jg
cmc
xchg
rcrb
jge
imul
push
fisttpll
xor
orl
jno
lahf
push
arpl
adc
out
and
mov
cmpb
ret
pop
sbb
lret
fnsave
fucomp
and
insb
repz
pop
iret
test
test
mov
pop
popa
mov
cmp
mov
inc
das
inc
lret
in
add
rcll
xor
push
nop
and
adc
mov
dec
icebp
jp
arpl
jae
dec
jbe
pusha
and
aas
mov
in
mov
cmp
xchg
fcoms
pop
outsl
jns
mov
push
es
push
pop
insl
jo
pop
pop
xchg
mov
cmp
decl
aad
adc
sbb
lods
rorl
mov
jle
jle
sub
in
jp
clc
mov
push
pop
sti
bound
addr16
enter
push
loopne
mov
xchg
out
pop
mov
adc
cli
jg
aam
mov
aad
push
ret
jo
xor
adc
aas
insb
push
dec
pop
push
sbb
nop
clc
or
jnp
mov
push
lret
das
lock
push
jg
mov
in
sbb
mov
fisttpll
loopne
sub
fs
adc
loope
in
repz
dec
lods
sub
call
inc
dec
in
out
add
xchg
stos
add
sbb
fcmovnbe
inc
sbb
ret
movups
mov
inc
ss
hlt
repz
adc
xchg
xchg
push
or
mov
into
fisubl
adc
stos
sbb
lds
pop
idivb
aas
and
gs
sub
cs
dec
imul
movsb
sub
in
lahf
pop
adc
imul
addl
ds
xchg
sub
lret
cltd
jbe
pop
inc
adc
mov
lcall
bound
aad
data16
movsl
rclb
js
add
mov
out
int
lds
insl
xlat
dec
add
fistpl
test
mov
shll
lcall
jnp
scas
aad
stos
xchg
pop
adc
ret
jmp
cmpsl
add
cmpsl
inc
push
lock
xor
hlt
dec
push
test
ret
and
xchg
mov
aas
ficompl
xor
sub
add
popa
enter
bound
mov
das
andl
cmp
arpl
pop
adc
and
fists
cmc
dec
xchg
loopne
fsubr
icebp
in
pop
data16
pop
xchg
mov
pop
out
xorb
ja
in
dec
adc
sbb
mov
fldt
or
shll
jb
add
popa
sub
iret
cld
arpl
push
ljmp
add
je
fcmovnu
push
mov
lods
mov
pop
fcoml
das
adc
mov
jo
or
or
pop
cltd
pop
push
xlat
lea
mov
out
bnd
inc
push
fwait
arpl
xor
stc
inc
cmpsb
mov
and
out
daa
bound
out
scas
lea
push
push
and
xchg
cmpsl
cmp
repz
es
xchg
xchg
inc
dec
mov
xchg
cmpsl
gs
or
shl
jp
test
ret
fldcw
sub
lock
popf
das
inc
lds
add
jecxz
iret
ret
jnp
jne
add
mov
js
out
xchg
add
int3
mov
adc
push
add
fldenv
xchg
in
sbb
sub
ret
cmp
push
adc
out
xor
jns
sarw
es
and
stos
sti
mov
shll
add
je
sub
bound
cs
mov
push
cmp
or
xlat
rorb
xor
outsl
repnz
pop
inc
jae
shll
push
aad
imul
ljmp
clc
adc
jae
pop
test
sbb
mov
addr16
dec
xchg
jo
gs
cli
lods
xchg
xchg
mov
aam
jl
jg
imul
sub
orb
mov
lcall
xor
loope
xor
jp
mov
jne
fisttpl
cmpb
add
jge
xor
call
aad
pop
cwtl
enter
dec
lea
mov
out
es
mov
rcll
cmc
mov
push
mov
xchg
add
data16
mov
loope
or
dec
adcb
pop
cmp
inc
and
pop
push
mov
dec
inc
adc
sbb
lea
add
adc
push
xchg
gs
and
shll
cmp
sub
lods
pop
test
pop
cmp
pop
jno
mov
cmpsb
jp
lret
adc
sbb
dec
pop
jg
lods
shlb
into
pop
adc
adc
test
xchg
inc
rcrl
enter
mov
jecxz
push
or
pop
add
in
and
rorl
jmp
out
jne
mov
dec
push
imul
pop
xlat
rcl
jg
clc
dec
xchg
mov
cmp
inc
es
ret
pop
mov
ret
in
push
into
popa
pop
add
mov
xor
sti
orl
xchg
out
sahf
and
xchg
and
jo
add
mov
sub
jge
jb
pushf
pop
aam
mov
iret
ljmp
jmp
sub
imull
mov
cs
sbb
cmp
loop
cmp
nop
push
xchg
rcrl
test
stc
outsb
mov
inc
lods
mov
inc
jb
pop
dec
inc
rcrl
dec
gs
dec
mov
loopne
or
rol
stc
fnstsw
cmp
adc
xchg
daa
xor
or
subl
jo
push
xchg
pop
cld
dec
into
jecxz
inc
inc
xchg
fs
cld
movsl
mov
lret
sub
xchg
jae
or
push
sbb
inc
leave
dec
int3
sub
test
repnz
ret
jp
lods
cmp
in
std
xchg
dec
cmpsb
sub
inc
push
iret
or
xchg
add
jl
js
loope
jbe
in
test
cmp
das
add
xor
xchg
xor
cmp
and
ljmp
lods
pop
mov
aaa
push
xor
adc
std
push
sub
ss
cmpsb
and
fs
ret
les
js
cltd
int3
fisubrs
jnp
jns
or
stos
sbb
lcall
xchg
insl
icebp
ljmp
cmp
adc
pop
add
insb
in
dec
popa
stos
jo
rcr
fnstenv
inc
inc
mov
adc
stos
fistps
sub
xchg
aad
das
xor
ja
mov
fildll
add
mov
adc
or
fsub
xchg
addl
adc
lock
sbb
push
add
popf
xchg
jge
pop
cmpsb
cmpsb
lret
movsl
lret
inc
arpl
dec
and
or
or
cmpb
cs
fstp
fdiv
in
aas
mov
add
jg
lret
inc
pop
sub
mov
mov
outsb
push
movb
pop
or
mov
push
fcompl
dec
add
lcall
xorb
cmpsb
mov
mov
je
stc
js
lock
repz
xlat
arpl
jmp
sbb
repz
jno
mov
push
lea
jno
lods
adc
ret
inc
add
lock
or
and
lock
movsl
xor
fidivs
mov
lret
adc
jg
shlb
in
lock
out
jecxz
dec
pushf
pusha
sub
int
lods
stos
aad
xchg
mov
or
or
shrl
je
pop
popf
inc
lret
xor
popa
pop
jle
stos
push
cmp
rorb
jae
jg
fdivl
lcall
arpl
outsb
lret
xor
fistpl
imull
mov
aas
sbb
sbb
jno
xchg
lea
mov
fadds
lcall
inc
sub
add
pop
aad
subl
dec
xchg
mov
jo
xchg
imul
sub
es
fwait
test
xchg
xlat
mov
xor
sbb
lret
pop
mov
les
test
dec
mov
shll
pop
lret
movsb
testl
push
or
and
xchg
mov
sti
dec
mov
lods
outsb
inc
mov
xchg
das
out
push
jge
inc
jle
sbb
sub
inc
mov
inc
or
mov
dec
cmp
mov
inc
scas
cmp
mov
xchg
add
xchg
xchg
fistpll
arpl
in
jb
pop
xchg
out
jmp
and
cmp
mov
movsl
into
cmp
jne
mov
arpl
sbb
lock
mov
adc
jle
hlt
nop
repnz
outsb
sahf
xor
xor
addr16
xchg
push
mov
inc
scas
add
lods
sub
dec
out
or
cmp
repnz
and
jmp
gs
mov
je
or
mov
shrl
cmp
insb
mov
stc
push
sub
adc
push
jmp
cmpsl
addb
pop
cltd
mov
cmp
or
ds
iret
imul
cmpsl
xchg
push
pop
xor
into
add
mov
jbe
pop
lcall
add
ljmp
movsl
pop
adcb
clc
xlat
cmp
sahf
insb
shrl
dec
addr16
mov
sbb
gs
sti
mov
pop
jg
out
nop
cmp
mov
jne
aaa
lock
and
in
in
mov
orl
insl
sti
inc
daa
xchg
dec
fs
stc
lcall
lret
frstpm(287
icebp
cmc
sbb
pusha
dec
sbb
mov
xor
or
push
lds
jno
arpl
cltd
jno
xchg
mov
inc
dec
loop
dec
scas
adc
andb
sbb
adc
xor
test
ret
xchg
cmpsb
xor
and
push
aaa
jne
jmp
adc
cmpsb
mov
insb
out
shl
movsb
arpl
stos
insl
ficomps
bound
adc
into
push
push
add
lret
pop
or
push
shll
mov
mov
jg
stos
push
inc
mov
data16
fbld
mov
jecxz
lahf
int
lods
mov
mov
add
aad
out
lods
in
fwait
int
push
pcmpgtb
xchg
mov
fwait
jns
rcrb
or
mov
push
stc
in
std
loop
cmp
lock
xchg
xchg
mov
lahf
xchg
dec
xchg
xchg
aam
mov
and
xor
dec
sahf
pop
dec
sub
push
jno
or
mov
pop
rcll
shrl
movsl
cmp
jne
jge
adc
jb
or
and
cmp
ljmp
inc
cmp
mov
xor
insl
xor
sbb
mov
adc
sti
sub
xor
mov
mov
aaa
xor
jo
add
icebp
aaa
lock
stc
sbb
fistpl
add
xchg
mov
in
repnz
les
into
test
sub
or
jl
int
adc
lock
or
movsb
sbb
lcall
and
push
in
xchg
inc
lret
lahf
les
sub
cli
test
mov
jae
ja
push
lret
cmp
dec
hlt
sarl
cmp
lcall
jno
icebp
sub
test
setae
cld
push
into
nop
inc
sbb
insl
jge
dec
dec
jmp
or
stos
cs
mov
jle
cmp
mov
movsl
imul
pop
push
outsb
sbb
gs
rorb
push
pop
push
or
jge
in
push
mov
sbb
pushf
popl
mov
adc
movsb
in
dec
push
push
fsubl
cmp
jno
jbe
mov
fcom
pop
jb
in
insb
jl
leave
pop
xchg
mov
or
add
mov
aad
shll
lahf
xchg
jge
lret
sahf
or
std
xchg
stos
shlb
push
movsl
mov
add
inc
scas
es
mov
iret
sbb
adc
sti
pusha
jmp
cs
mov
pop
dec
outsb
imul
push
adc
jnp
loop
dec
call
rclb
cmp
inc
jmp
mov
mov
repz
mov
imul
xchg
mov
push
loop
add
shlb
movb
rorb
inc
pop
jb
out
test
test
xchg
inc
add
xor
xchg
mov
outsb
jmp
lret
repnz
adc
and
ret
gs
cmp
mov
adc
int
in
fs
mov
jl
adc
js
xchg
xor
dec
push
test
test
mov
cld
adc
pop
xchg
mov
pop
jmp
pop
jge
push
inc
scas
test
xchg
add
sbb
mov
sbb
scas
pop
scas
clc
je
jbe
push
jae
int
pop
pop
push
addr16
rorb
lret
cmp
or
pop
or
xor
jbe
mov
rolb
add
lret
mov
mov
dec
inc
inc
sti
mov
push
lds
adc
movsb
in
movsb
ds
call
nop
into
adc
stos
jns
cwtl
out
out
dec
add
push
test
jl
pop
xchg
fsubs
cmpb
mov
mov
xchg
mov
mov
stos
or
lds
xchg
shrb
aam
xchg
inc
mov
or
sahf
dec
ficoms
stos
call
mov
mov
mov
ja
push
outsb
lret
popf
mov
lds
icebp
push
inc
ss
lods
icebp
arpl
sti
xchg
sub
sub
sub
mov
mov
jo
mov
xlat
loopne
push
daa
mov
enter
pop
test
pop
pop
sub
jne
stos
sbb
pop
ret
call
dec
and
mov
dec
scas
sarb
jo
lahf
mov
aas
mov
into
enter
dec
leave
mov
stos
sbb
xor
dec
test
pushf
in
sbb
test
imul
sarl
push
mov
rcll
cmpsb
jmp
add
pop
or
aam
cld
push
xchg
mov
xchg
pop
dec
aad
sbb
cmp
mov
add
pop
dec
xlat
andb
aad
rcll
mov
xchg
mov
xlat
jg
mov
cmpl
dec
mov
fadds
nop
cld
sbbb
inc
add
out
and
and
out
das
mov
xor
xlat
mov
popa
pusha
scas
ja
push
xor
or
sti
rcrb
loopne
add
cli
or
je
daa
lods
jge
cltd
shrl
push
mov
cltd
xchg
orb
xchg
mov
push
pop
lods
or
sahf
out
popf
stc
mov
pop
dec
adc
ret
xor
outsb
loop
push
addl
pusha
mov
fdivrp
scas
fistps
sub
dec
and
cmpsl
sbb
push
insb
rorb
daa
js
pop
dec
stc
and
lcall
fimuls
arpl
fisubs
mov
mov
push
xchg
out
inc
mov
les
clc
fisubrl
push
popa
push
inc
out
push
xor
fldcw
sub
stos
sti
add
aam
in
or
or
fwait
jns
sti
mov
xor
jbe
jle
push
cmp
sub
pop
ss
push
add
subb
movsb
adc
cmp
mov
pop
xlat
jae
pop
mov
jg
pxor
sbb
add
sub
sub
js
hlt
int
shrb
fsts
aad
fdivrl
fdiv
and
rcr
loopne
repz
pop
adc
mov
cmp
xchg
or
addr16
push
mov
cmp
dec
sahf
mov
and
insb
mov
pop
aad
mov
pop
test
xchg
jl
cmp
fwait
xor
ficoms
or
add
data16
subb
add
xor
mov
shl
fcompl
jb
in
cmp
movsb
sub
jno
mov
sbbl
pushf
jae
push
and
lahf
cmp
mov
mov
mov
lret
sbb
jp
inc
shr
cmp
push
dec
adc
mov
pop
inc
out
hlt
sub
xchg
mulb
sub
sbb
mov
jl
aaa
jnp
inc
xchg
push
mov
fsubrl
daa
cmp
xor
dec
out
pop
iret
xlat
mov
inc
xor
and
jecxz
fstps
shll
or
sbb
push
add
rclb
movsl
xor
sar
adc
xor
inc
adc
mov
jg
xor
in
jmp
das
scas
aad
ffreep
dec
out
push
cmpl
cmpsl
jmp
inc
loopne
daa
sbb
xor
stos
pop
dec
jl
mov
repz
mov
scas
add
ljmp
lock
addr16
stc
sahf
sbb
sub
stc
mov
rol
mov
popf
add
loopne
xchg
mov
std
mov
lds
sub
stc
popf
int3
bound
in
outsl
inc
arpl
sub
mov
sti
dec
dec
cs
icebp
cmp
mov
cmc
in
addb
mov
mov
mulb
insb
clc
push
cli
push
loop
xor
lds
hlt
lea
icebp
sub
or
shrb
movsl
pop
and
and
sbbl
or
lcall
pop
jmp
cmp
inc
outsl
insl
in
sti
rolb
test
lea
cld
addb
outsb
sbb
out
outsb
or
popa
les
mov
aas
cmp
add
push
loop
push
sti
add
arpl
add
faddp
dec
push
cmp
mov
std
out
xchg
mov
rorb
repnz
movsl
leave
adc
sbb
or
rcl
xor
adc
sub
pop
mov
stos
push
jmp
cs
cltd
xor
sbb
ret
add
or
dec
je
cmp
shl
aad
mov
cmp
inc
movb
jl
cs
lret
shll
cmp
bound
pusha
stos
hlt
xchg
imul
fadd
inc
mov
mov
jg
out
lret
cmc
sub
dec
aam
sbb
mov
jnp
sbb
cmp
sub
mov
inc
pop
xor
mov
lret
fsts
sub
inc
imul
scas
jecxz
gs
xchg
push
sbb
push
cmc
test
xchg
dec
pop
pusha
inc
mov
lret
rcr
inc
sbb
repz
dec
ljmp
inc
lea
adc
mov
fidivrs
lods
lds
lods
jbe
popf
in
mov
xchg
mov
mov
adc
sbb
dec
inc
jne
into
adc
jg
fwait
xor
xor
mov
xor
mov
sub
add
and
sarb
xchg
shrl
lahf
cmpsl
shl
call
jno
lea
and
scas
outsb
push
inc
sub
sub
push
mov
xchg
add
or
add
loopne
stc
lahf
pop
sub
std
shlb
push
jp
into
out
fcom
push
movsb
mov
clc
je
cmc
leave
sub
js
push
push
movsb
inc
enter
lds
sbb
pop
add
fmul
adc
and
ficoms
xor
shll
clc
cwtl
out
int3
loop
leave
sbb
ret
mov
adcb
inc
sahf
pop
clc
lahf
sbb
andb
mov
sub
add
daa
in
cmpsl
arpl
pop
fmull
or
int
cwtl
icebp
jg
xlat
arpl
jg
jbe
fbld
loope
hlt
js
inc
add
leave
and
fwait
popf
popf
push
lods
leave
push
cmp
loopne
rorl
cmp
popf
xor
mov
mov
loope
mov
mov
push
mov
mov
insb
mov
leave
and
aam
push
iret
fwait
ss
je
or
lds
mov
js
out
int
adc
repz
dec
daa
testl
shl
inc
insl
dec
sbb
repnz
insl
jae
mov
dec
enter
inc
xchg
mov
cmc
mov
fdivs
testb
lcall
data16
push
sbb
loopne
fucomi
mov
daa
ja
mov
jnp
je
cmp
sahf
push
add
push
outsb
inc
mov
xlat
popl
jb
pop
mov
sahf
inc
xchg
ficoms
nop
mov
mov
pop
out
cmpsb
adcb
inc
hlt
out
shl
sbb
into
xchg
je
leave
lock
call
test
ss
pusha
push
and
imul
repnz
adc
cmp
cmp
in
fcmovnu
jg
dec
lds
out
popa
inc
outsb
and
sbb
jnp
hlt
xor
xor
cltd
jle
stc
mov
jle
cmp
movsb
push
push
jmp
int3
mov
jge
jle
mov
sub
loope
sub
mov
ds
lcall
pop
popa
scas
sahf
notb
cmpsb
divb
jb
int3
mov
cmc
add
mov
test
lock
jne
leave
cmp
mov
loopne
outsl
pop
sti
or
inc
pop
fs
test
add
cltd
fs
cmp
mov
dec
movq
mov
push
pop
pop
sbb
sub
cs
js
jmp
xor
sub
push
xchg
insl
mov
or
cld
mov
and
test
cmp
mov
mov
xor
mov
push
and
insb
fs
test
out
lock
pop
mov
ficoms
xchg
xchg
fs
cmpsl
mov
filds
mov
dec
add
sbb
imul
push
mov
dec
pop
rorl
repz
pop
push
inc
cmpsl
fs
push
mov
xor
or
dec
pushf
jo
add
add
pushf
xchg
inc
cmpl
outsb
stc
push
jle
psrld
sbb
icebp
mov
mov
out
das
cli
stos
cmp
fstp
xchg
cmc
sti
sbb
adc
icebp
xchg
mov
push
js
fidivrl
jns
stos
das
jo
test
shlb
call
gs
mov
shll
inc
adc
mov
loop
or
packsswb
cmpsb
lods
push
lods
insb
jp
lahf
lcall
add
clc
lock
into
jp
in
lods
enter
cmpsl
pushf
sbbl
sbb
data16
add
fsubrl
ljmp
ret
faddp
jb
push
mov
sbb
jle
push
lea
add
mov
inc
cmp
pop
sbb
lds
jmp
ss
loope
inc
aad
push
mov
dec
xchg
ret
mov
mov
subb
push
xchg
jecxz
or
jge,pt
dec
mov
dec
adc
pop
pop
movl
in
call
sub
mov
fisttpl
inc
push
aaa
fld
adc
sahf
push
iret
adc
or
es
dec
and
mov
mov
test
xor
imul
test
push
xor
cmp
and
xchg
dec
sbb
inc
mov
out
outsb
jmp
mov
into
xor
loopne
sbb
fstp
jae
fwait
cmp
mov
and
jae
int
jge
add
jmp
pop
pop
sti
mov
iret
std
movsb
imull
iret
cmpsl
aad
leave
sub
inc
inc
add
and
out
fsubr
ss
push
adc
faddl
cld
sbb
mov
adc
mov
lcall
sarl
js
jo
pop
push
popa
inc
mov
jo
test
adc
rcrb
sar
outsb
cmp
add
mov
pop
adc
rclb
setb
subb
xor
cmpsb
mov
pop
sbb
push
cmp
imul
jo
cld
fists
repnz
shrl
xchg
and
push
push
stos
mov
sbb
inc
pop
xor
inc
mov
nop
lds
push
into
out
in
pusha
mov
push
adc
cli
jecxz
lock
in
movsl
sub
mov
outsl
inc
mov
add
pop
inc
imul
jmp
push
mov
icebp
scas
or
cltd
ror
mov
push
fxam
sbb
inc
lock
xor
xor
sub
arpl
xor
fdivrs
mov
gs
dec
mov
push
ret
rorb
push
test
mov
cmp
xchg
sti
das
sub
push
sar
jecxz
pop
xchg
int
movsb
lods
rcll
xchg
mov
out
rorb
sub
lods
jae
addr16
push
scas
push
dec
add
ljmp
cmp
clc
movb
ds
add
push
loopne
ja
js
mov
int3
cmpsl
xor
aaa
inc
xchg
cmp
arpl
jge
aam
sub
adc
imul
aam
leave
cwtl
ds
inc
push
scas
xchg
sbb
mov
rorl
out
scas
nop
std
mov
ficoms
dec
daa
push
jae
mov
sahf
sbb
pop
cltd
push
popf
daa
mov
outsb
pusha
or
mov
fistpll
jno
mov
out
lods
incb
jge
pop
subl
cmc
mov
add
iret
adc
push
aaa
pusha
xchg
mov
dec
add
js
outsl
lds
aam
mov
loop
icebp
pop
cmp
mov
in
stc
fldenv
pop
or
push
lock
addr16
aam
jb
pushf
jbe
adc
fisttpl
adc
mov
mov
jno
xchg
test
xchg
inc
jnp
and
sarl
xor
mov
xchg
insl
mov
outsl
pop
sub
inc
lods
subb
mov
cli
loope
mov
pop
or
mov
sti
ror
and
fxam
lea
test
mov
push
jl
lea
cld
mov
or
addb
mov
sti
filds
ret
lds
lret
rcrb
std
or
mov
jmp
adc
pop
pop
aam
repnz
xchg
lcall
xchg
dec
cmpsb
mov
jae
fimull
inc
int
loope
fidivs
xlat
push
mov
outsl
ret
cmp
popf
lods
mov
in
mov
inc
or
movsb
loope
repz
repz
test
test
into
sbbl
pop
das
out
pop
mov
ficomps
and
gs
shl
xor
test
lahf
adc
mov
testb
aaa
decb
test
insl
add
das
daa
pop
xchg
dec
inc
int
mov
je
orb
nop
pop
rorl
sti
or
push
sti
or
gs
mov
outsl
popl
xor
push
push
lods
mov
out
orb
nop
push
push
push
int
mov
mulb
dec
mov
inc
iret
pop
inc
leave
pop
popl
adc
in
inc
shlb
jmp
fistl
mov
lahf
cmp
out
mov
icebp
xchg
sbb
pop
movsb
mov
push
mov
add
lods
jmp
inc
enter
push
xor
mov
fwait
leave
out
cmp
dec
or
hlt
add
int3
insb
leave
jmp
pop
cmp
stc
mov
daa
fsubs
xorb
or
mov
int
push
cmp
push
xchg
mov
mov
lahf
mov
and
ljmp
popf
or
dec
arpl
cmpsb
push
mov
pop
cli
sbb
bound
xor
push
pop
and
outsb
or
and
mov
std
or
ret
lcall
cwtl
mov
les
out
adc
subl
out
mov
test
xor
in
je
repnz
add
pop
fldcw
xor
xor
loop
test
pop
aad
sbb
jmp
repnz
push
cmp
pop
lret
mov
dec
cmc
mov
sub
jmp
das
cmp
xor
jecxz
and
stos
mov
xchg
popf
pop
cwtl
push
xor
lea
jae
pop
clc
inc
jne
aas
xchg
xchg
sub
inc
jo
adc
jne
call
loopne
lods
test
or
and
jb
dec
in
ljmp
push
jmp
or
add
mov
add
ret
mov
roll
lahf
popf
dec
xchg
mov
test
dec
pop
sub
cmp
jmp
push
push
push
xchg
xchg
dec
pop
stc
mov
fldz
jb
cmp
daa
cli
in
ss
aad
adc
fucomip
inc
test
fisubrl
inc
scas
orb
subl
push
or
xchg
sbb
fisttps
adc
push
jb
inc
mov
arpl
clc
mov
fimuls
and
add
lods
loope
scas
fs
pushf
sbb
xchg
jg
push
stos
test
pop
xchg
xor
popf
mov
icebp
lea
adc
in
add
mov
sbb
xor
pop
repnz
cmp
mov
cs
or
xchg
dec
rol
jmp
push
mov
in
cmp
inc
xor
and
in
xchg
cmpsb
dec
addb
adc
sbb
out
add
mov
leave
call
jae
cmpl
adc
sbb
xchg
mov
lock
cmp
xorl
jp
adc
cmp
inc
out
cmp
inc
stc
ja
mov
sbb
xchg
cmp
fidivs
stos
xor
sub
loopne
pop
aaa
insl
pop
push
and
dec
ficoms
jg
mov
test
in
mov
and
imul
sub
repnz
sub
xchg
jnp
or
pop
sbb
mov
lret
pushl
out
loop
and
arpl
mov
sbb
mov
xchg
inc
iret
fcmovnbe
mov
xor
loope
and
dec
adc
adc
mov
push
call
lret
insl
sub
sahf
jle
les
js
pop
push
adc
imul
push
hlt
dec
adc
stos
dec
daa
or
clc
push
xor
fs
jbe
rolb
stos
mov
dec
push
pop
rol
sbb
xor
xchg
or
mov
dec
pop
leave
sbb
scas
lds
popf
out
aas
mov
scas
pop
xor
mov
sti
jno
push
frstor
mov
dec
mov
jg
sub
int
sub
jbe
lods
enter
fs
fwait
adc
movsb
jge
xor
jmp
popf
xchg
sar
adc
idivl
cltd
mov
jne
push
push
rorb
sbb
daa
insl
jge
test
lods
dec
pop
out
lock
lea
dec
jno
sbb
and
cmp
xchg
push
mov
outsb
pop
pop
fidivs
jno
add
stos
cmpsb
mov
adc
insl
cmp
scas
mov
test
imul
adc
aaa
dec
jle
dec
rorl
or
ljmp
decb
mov
pop
testl
inc
loope
stos
jge
ss
push
add
lods
cmp
add
scas
out
mov
mov
sub
fisttps
aam
sti
idivb
stos
es
popa
mov
rcrb
jl
xor
sbb
mov
addl
test
pop
mov
lret
xchg
xlat
mov
outsl
lds
jl
or
insl
and
lods
mov
cmp
and
in
std
movsb
cmpsl
mov
test
insl
lahf
push
sbb
pop
mov
jmp
fdivrl
popa
mov
enter
and
xchg
jo
xchg
push
inc
inc
push
push
into
sbb
add
mov
rdmsr
pop
push
std
pop
stc
das
jge
dec
sub
jge
sahf
pop
outsl
sbb
loop
xor
jmp
pop
mov
pusha
shr
test
shll
es
fcmove
dec
clc
repz
add
and
push
fucomp
mov
mov
pop
sbb
mov
btrl
lods
jo
orb
ret
inc
xchg
aas
sub
outsb
daa
stos
jle
iret
test
pop
enter
add
ficomps
dec
xor
fdivrl
and
dec
jle
test
rolb
or
dec
jne
imul
cltd
cmp
mov
stc
sub
pop
xchg
lret
dec
jg
add
jge
xchg
cmp
lea
sahf
inc
cwtl
mov
decb
mov
mov
xchg
movsl
jmp
jnp
dec
jg
lret
adc
test
js
xchg
movsl
adc
sarl
pushf
cmc
leave
das
sub
pop
sbb
scas
lret
xchg
mov
jno
sbb
jecxz
mov
xor
outsl
sarb
fwait
sub
add
div
call
ret
pop
out
jp
xor
pusha
push
xor
sbb
mov
sti
inc
xchg
into
and
xchg
add
xor
jbe
int
cltd
jne
mov
jmp
xchg
or
mov
mov
dec
jne
test
je
inc
add
jecxz
jbe
pusha
pop
or
mov
idiv
add
jns
fstps
xor
mov
adc
nop
mov
inc
pop
xorb
clc
iret
xchg
sub
dec
xor
mov
hlt
pop
mov
mov
lret
out
push
shl
popf
push
jae
jbe
std
addr16
fcoml
cmp
test
popf
loopne
repnz
push
shrb
rolb
hlt
inc
out
jmp
or
jns
push
js
add
mov
inc
in
mov
add
or
mov
jns
out
adc
jecxz
and
stos
out
enter
shl
stc
adc
cld
pop
mov
jl
sub
mov
or
in
lahf
cmpsl
filds
cmpsl
xchg
dec
inc
lods
icebp
insb
into
pop
sub
sub
mov
stos
lods
cmp
popa
pusha
dec
into
jno
and
sbb
lods
hlt
or
jl
cmpl
fists
sbb
pushf
loop
aas
mov
jo
xchg
call
mov
add
call
cmpsb
xchg
mov
fidivrl
cwtl
cmp
mov
insb
inc
fistpl
push
mov
test
xlat
int3
mov
es
dec
in
pushf
pop
enter
adc
xor
call
repnz
sub
ljmp
adc
out
data16
ss
loopne
mulb
jno
out
inc
mov
popa
mov
sbb
sbb
xchg
adc
ds
and
stos
scas
ds
sub
les
daa
inc
test
adc
add
jmp
sub
mov
xchg
lret
inc
or
daa
aaa
sub
xchg
xchg
iret
jno
push
xchg
je
mov
mov
std
shrl
cmc
xor
xchg
push
sub
xor
add
arpl
mov
cltd
mov
bound
rorl
fst
fsubl
in
icebp
out
jle
movsb
jbe
mov
jmp
adc
scas
ret
or
int3
cmpsb
out
lcall
pop
push
adcl
ss
or
lock
loopne
fwait
inc
lret
mov
jg
in
xchg
aaa
cs
adc
adc
fsubs
and
mov
xchg
mov
popa
jns
enter
inc
test
mov
std
aam
inc
dec
shll
sbbb
mov
loopne
pop
jb
scas
insl
hlt
sahf
lods
in
pop
xchg
mov
lods
sbb
mov
ret
btc
push
push
adc
scas
bound
rcrl
dec
or
or
dec
add
ja
outsb
pushf
in
ret
xor
test
lahf
xchg
test
lahf
mov
fisubs
and
orl
dec
insb
nop
or
mov
cmp
ret
add
mov
movsb
test
aas
mov
fstpl
adc
lods
pusha
mov
and
mov
andl
shrb
xchg
mov
cmp
adc
pop
stos
sub
or
sub
mov
jb
push
pushf
xor
inc
jp
mov
pushf
clc
add
pop
and
jno
popf
xor
lret
cmp
mov
xchg
or
cmp
ret
mov
cs
insb
push
lret
mov
jb
push
xchg
test
ds
in
test
or
sub
cmp
adc
leave
test
icebp
mov
add
sub
lret
and
jecxz
mov
xor
lcall
scas
xchg
pop
push
stc
lea
ficoms
xchg
dec
out
or
push
adc
mov
mov
push
jae
aad
add
cmp
icebp
and
cmp
sub
jmp
pusha
pop
jecxz
stc
fisubrs
cltd
jb
jnp
add
int
jle
or
jno
xor
outsb
pop
mov
inc
leave
stos
leave
jne
cld
js
pop
mov
inc
adc
bound
pop
rolb
cli
stos
add
add
jp
dec
adc
sti
mov
and
and
jle
fildll
mov
push
cmp
cmp
mov
inc
pop
cmp
dec
mov
jge
ja
add
sbb
adc
cmc
xchg
sbb
or
addr16
js
into
rcrb
dec
fcmovbe
push
cltd
lea
cmc
jae
add
sarb
xor
cmp
cmpsl
jl
xchg
stos
xor
cs
mov
in
sarl
imul
sti
lcall
stc
subl
sbb
dec
pusha
mov
xchg
mov
mov
cmp
cld
loope
aam
stc
repz
mov
push
scas
adc
scas
popf
out
ds
pop
pop
mov
inc
adc
out
flds
cmp
gs
adc
inc
xchg
sbb
push
leave
arpl
mov
sbb
push
lds
lods
add
movl
sbb
pop
in
stos
mov
repnz
adc
aad
pop
sub
fidivl
jmp
rol
sahf
js
jo
divb
repnz
jae
daa
ss
and
ja
or
adc
pop
adc
divb
push
test
fists
push
jno
aam
sub
jl
sub
jns
aas
notb
sub
arpl
mov
inc
pop
int3
xor
sbb
jge
xchg
xchg
orl
cmp
int3
clc
popa
fdivs
out
or
aaa
sar
mov
fidivrs
fadd
jl,pn
sub
popf
jnp
inc
movsl
dec
push
dec
pop
or
lds
jns
nop
cmp
sub
dec
jg
cmc
in
sbb
mov
outsb
jo
bound
inc
scas
jmp
js
jnp
sub
in
aas
lret
call
aaa
cmp
adc
xor
dec
push
add
je
int
or
adc
dec
out
dec
cmp
sti
push
add
jg
sub
and
fdivr
add
mov
ljmp
flds
lock
xlat
fst
ja
shll
sahf
xchg
cmpsl
push
shlb
jl
mov
sbb
pop
pushf
sub
cmp
dec
out
pop
mov
lret
adc
or
xchg
cmp
add
ret
mov
imul
add
mov
or
push
pusha
lcall
cmp
sbb
fiadds
daa
jl
xor
xchg
xor
test
int3
xchg
repz
pushf
xor
ds
pop
pop
call
mov
clc
pusha
xor
iret
add
lock
dec
lret
arpl
aaa
ja
ficoml
jnp
xchg
aad
movsb
iret
xor
call
out
xchg
add
iret
mov
sbb
fsubrl
bound
rclb
es
add
insl
sbb
xlat
hlt
and
add
sbb
xor
fisttpl
imul
cltd
or
imul
imul
mov
sbb
jle
loop
lcall
pop
mov
fistps
imul
sub
es
movsl
mov
popf
rclb
insb
clc
jl
fildll
cli
xor
adc
hlt
jno
mov
cs
and
loope
pop
dec
mov
mov
cmc
stos
sahf
cwtl
xlat
pop
mov
sub
pusha
jnp
and
mov
sbb
in
rolb
and
repz
or
sahf
mov
add
inc
xchg
mov
jnp
inc
adc
dec
mov
test
hlt
outsb
cmp
std
jle
cmp
fcmovb
mov
push
repnz
inc
sbb
mov
lock
jb
in
cmp
out
aaa
mov
enter
dec
movsl
dec
jl
sub
jmp
or
insl
pop
pusha
mov
xor
add
and
pop
xchg
cltd
bnd
push
and
adc
in
jmp
mov
stos
ja
movsl
into
mov
sub
mov
add
iret
push
ljmp
daa
mov
loop
aaa
and
dec
int
sub
sub
push
insb
dec
lea
inc
jno
out
lret
jl
mov
lret
dec
sub
dec
push
rcrl
lcall
mov
enter
sub
and
jge
xchg
imul
movsl
xlat
lds
aas
popa
mov
add
dec
pop
jns
jmp
sub
pop
movsl
rcrl
lret
push
xchg
loopne
and
mov
and
movsl
lcall
js
aaa
int
in
mov
mov
pusha
orb
sub
jne
lods
push
loop
and
adc
mov
std
js
jbe
test
mov
xor
aaa
aad
stos
loop
pushf
xchg
jno
sub
scas
iret
movsl
out
mov
pop
ss
push
sahf
cmp
pop
cmp
inc
adc
pusha
mov
loope
sbb
sahf
jbe
or
insb
jae
or
out
adc
cwtl
xor
jbe
jo
push
not
outsl
inc
divl
andl
inc
inc
xchg
test
imul
xlat
or
xor
xchg
push
cltd
cmpsl
int
pop
mov
ds
outsb
add
adc
in
or
outsl
out
adc
xchg
sbb
push
sub
sbb
or
and
sub
dec
andl
push
mov
mov
mov
aam
cwtl
shrb
xor
hlt
lret
sbb
dec
hlt
pop
out
or
and
aas
pop
mul
popa
cwtl
insl
cmp
jns
mov
out
cmp
lret
sub
and
adc
adc
clc
fsts
repz
or
rolb
cmp
popa
xor
push
icebp
sub
jo
in
xlat
movsb
xchg
ret
cmp
int
cmp
repz
ljmp
dec
popf
imul
lahf
mov
pop
sti
lds
imul
and
adc
mov
out
cmpsb
mov
popa
stc
ret
in
inc
daa
ss
dec
mov
inc
int3
pop
scas
adc
mov
insb
pop
adc
jge
in
clc
mov
mov
xchg
mov
jmp
insb
test
stc
inc
das
inc
push
mov
pushf
xchg
and
clc
daa
and
mov
insb
out
nopl
mov
mov
cmp
popa
adc
jnp
call
ss
outsl
dec
jno
pushf
sbb
movl
mov
lea
test
xor
or
mov
je
das
mov
in
sbb
aaa
pop
daa
jg
xchg
addl
out
pop
jne
xor
aad
inc
mov
and
insb
loop
idivb
nop
jmp
lods
mov
dec
dec
and
pop
mov
mov
mov
xor
fwait
pop
mov
mov
sbb
mull
dec
mov
fiadds
iret
movsb
sub
mov
insb
push
insb
sbb
lods
frstor
cmpsb
test
mov
sbb
daa
aaa
xor
mov
add
shl
imul
in
sti
mov
pusha
popa
aaa
mov
dec
stos
or
inc
pop
dec
shrb
mov
pop
testb
pop
cmp
jg
jmp
jns
lahf
outsl
xor
ret
out
hlt
leave
sbb
adc
mov
jge
xchg
push
mov
fstp
mov
push
in
bound
cmp
xchg
sbb
ss
ret
cmpsb
mov
mov
mov
mov
das
js
sub
sbb
test
leave
mov
push
xchg
xor
orl
lahf
pop
jae
lock
das
mov
std
cli
das
push
pop
jae
push
xlat
jmp
stc
in
mov
mov
imul
xchg
add
cmc
cmpsb
lret
call
lods
idivl
cmpb
mov
ret
das
mov
push
aam
scas
lds
add
pop
sbb
or
ror
mov
xchg
addr16
aaa
in
and
mov
scas
or
push
test
cmp
imul
outsb
std
arpl
outsb
xchg
xchg
inc
lahf
outsl
fs
inc
sub
cmp
test
into
push
scas
stc
ja
xchg
cmp
fbld
gs
jle
lock
lea
lods
movsl
and
mov
fistpl
lods
xchg
xor
xchg
mov
ja
push
add
dec
and
jne
push
les
add
shll
test
inc
push
cmpsb
xchg
adc
js
xor
mov
push
mov
aam
mov
push
sbbb
pop
dec
outsb
xchg
jbe
jae
iret
and
ret
push
jbe
out
cmp
xchg
mov
mov
push
dec
fmul
cltd
and
roll
clc
fcoml
sti
ds
bswap
je
int3
pop
fidivrl
jnp
lds
adc
mov
fsubrs
xor
pop
xchg
push
pop
dec
push
mov
xchg
xchg
mov
outsl
jl
int3
psrlq
or
mov
ret
xchg
sub
loopne
sub
rorl
adc
mov
or
mov
mov
cmp
inc
and
xchg
loopne,pt
dec
xchg
push
in
xchg
ds
call
daa
shll
cld
arpl
mov
sub
shll
and
lret
mov
int
push
or
subl
sbb
scas
cs
fmulp
insl
addr16
ret
sarl
or
ret
repz
cmp
pop
and
jmp
loop
outsl
push
mov
stos
fs
or
imul
les
adc
xor
int
mov
call
cmp
push
add
and
xchg
jg
pop
pop
insl
or
imull
std
imul
jns
inc
xchg
push
dec
cld
lahf
jge
push
insl
jne,pn
outsb
inc
cmp
outsb
inc
in
es
mov
fildl
adc
int
out
adc
inc
push
inc
lods
int3
insl
dec
jle
pushf
dec
xchg
ss
sbb
std
pop
pop
mov
iret
test
mov
rcr
shlb
jecxz
movsb
movl
pop
push
cmpsb
mov
fwait
pop
nop
loop
scas
rcll
out
ljmp
stos
cwtl
add
lcall
dec
jb
stc
ss
sbb
lock
lret
mov
jg
aam
and
xchg
loopne
xchg
enter
aad
aad
cmp
push
mov
imul
push
les
xchg
cmp
add
fldt
insl
int3
mov
dec
inc
mov
add
sbb
push
sbbb
xchg
jb
jae
jno
mov
pop
sahf
mov
cs
out
push
pop
xchg
daa
xchg
xchg
xchg
out
and
ret
addr16
popa
push
in
and
imul
sub
clc
hlt
rclb
insl
pop
xchg
aad
inc
lods
push
mov
js
mov
lds
lret
jno
iret
xchg
sahf
js
incb
rolb
mov
clc
jb
leave
add
outsb
pushf
adc
popa
mov
imul
out
xor
add
jge
push
int
test
repnz
scas
push
fst
daa
jge
data16
sub
or
rep
subb
sub
pop
inc
cmp
cmp
aam
adcl
adc
xor
aad
mov
std
sbb
aaa
add
mov
dec
xchg
cmp
mov
xchg
cmc
add
jns
pop
jns
mov
shlb
into
pop
mov
xchg
add
movsl
iret
add
sbbb
out
test
arpl
mov
es
inc
mov
and
mov
dec
ss
push
or
aad
push
sub
decl
mov
xchg
cwtl
aas
lods
out
cmp
rcrl
jg
shlb
enter
mov
test
fs
icebp
pop
and
insl
outsl
in
lods
enter
icebp
mov
mov
xor
out
jno
dec
pop
mov
mov
add
insb
andb
cs
cli
and
sub
ljmp
push
sbb
and
push
js
pop
lahf
out
enter
add
mov
pop
mov
push
sbb
xor
loopne
mov
push
stos
jmp
int
xor
pop
jmp
icebp
jecxz
pop
loop
div
imul
cmpsb
iret
shl
xchg
and
dec
dec
out
dec
test
mov
jbe
shll
gs
or
mov
xlat
jmp
adc
jecxz
and
cmp
sub
lods
push
or
cmpxchg
gs
cmp
jecxz
cmp
and
mov
push
das
hlt
push
data16
fwait
movsl
mov
dec
cld
and
das
sub
jno
out
enter
jecxz
int
adc
lret
dec
outsl
cwtl
lods
scas
addl
imul
mov
sbb
js
push
ret
adc
and
pop
push
and
sbb
loopne
cmp
fdivr
and
cltd
imul
mov
jmp
push
sub
add
sahf
outsl
mov
cmpsl
mov
sbb
add
push
negl
and
mov
test
or
jne
cld
cmp
add
rcr
xor
pop
push
push
outsb
sti
mov
add
mov
aam
nop
cmp
clc
adc
xchg
jb
inc
lock
in
cmp
mov
adc
sub
mov
pop
push
xchg
fidivs
push
dec
sub
ficoml
je
inc
lds
in
insb
add
inc
fadds
sbbl
loop
imul
pop
mov
xor
xor
out
repz
ds
cmp
test
xor
mov
out
idivb
fdivrl
movl
in
nop
push
mov
sti
fcomip
pushf
scas
lds
repz
sbbl
aam
imul
js
jg
sub
adc
dec
sbb
jns
cmp
fwait
push
cmpsl
shlb
fnstsw
add
push
movsl
data16
push
jbe
adc
inc
cwtl
sub
inc
les
jecxz
jg
pop
xchg
adc
jnp
adc
jne
sub
xor
lods
pop
push
sahf
sbb
test
cld
out
test
lahf
mov
cmpsl
and
xchg
in
pop
arpl
stc
jae
not
pop
mov
mov
fs
notl
jno
aad
aaa
xchg
movsl
andl
inc
rcrl
cltd
cmpsl
and
and
and
das
enter
inc
test
push
clc
in
jge
in
dec
inc
cmp
xlat
daa
mov
dec
insl
dec
enter
stos
jo
out
or
add
loop
fstps
andl
mov
inc
xor
jb
xchg
cmc
dec
sbb
dec
mov
sbb
mov
pcmpgtd
cmp
sbb
or
mov
call
call
sub
insl
xor
clc
in
adc
pop
sbb
das
aam
xchg
cmp
mov
rol
icebp
jnp
xchg
or
pop
paddb
in
pop
andl
and
push
movsb
mov
lds
outsl
test
mov
dec
ror
jne
adc
outsb
sahf
cmovne
dec
adc
mov
mov
das
hlt
jae
aad
add
pop
push
adc
and
hlt
inc
pop
jae
pop
jne
fildll
mov
push
fmuls
mov
shrb
loopne
mov
in
mov
xchg
movsb
scas
lret
aas
leave
adcb
jmp
std
pop
test
xor
je
xlat
es
mov
push
lret
or
aam
mov
in
jb
and
xor
into
cmp
dec
test
test
lcall
dec
sub
push
es
mov
jl
mov
adc
add
xchg
and
test
mov
and
dec
pop
pushf
adc
addr16
add
cli
sbb
jg
out
or
sub
pop
inc
sti
add
mov
jmp
andb
jo
mov
adc
mov
xchg
int3
into
popf
imulb
inc
dec
aam
jmp
inc
push
popf
xchg
cmp
adc
push
sbb
xor
and
add
nop
push
pop
lcall
pop
dec
dec
outsl
mov
inc
lcall
add
shll
mov
cmp
push
aam
pop
ficomps
push
ljmp
cmp
lock
leave
out
mov
jmp
or
xchg
arpl
mov
ret
mov
sti
fists
jmp
popa
xor
fxam
or
pop
jnp
cltd
lahf
dec
rcrb
lods
push
fucomi
or
mov
sub
fisttpl
out
faddp
shl
lcall
cmc
xor
je
cmp
inc
loop
adc
jmp
adc
jae,pt
jp
push
cmp
pop
pushf
imul
xor
cli
cmpsl
inc
jb
mov
mov
int3
sahf
cmpsl
mov
imul
xchg
stos
mov
pop
pop
dec
call
xor
adc
dec
pop
imul
inc
push
mov
in
ret
cmpsb
fdivs
sbb
mov
mov
jmp
pop
outsl
jbe
mov
xchg
sti
sub
lret
sbb
xchg
aaa
inc
popf
and
mov
jge
xchg
and
cmp
pop
cmp
aas
scas
enter
adc
pushf
shll
mov
jle
mov
cld
sar
ss
inc
adc
jmp
sub
es
insl
dec
aad
push
setns
je
pop
jg
outsl
sbb
fldl2t
inc
inc
outsb
jae
fucomp
fists
dec
inc
aam
push
out
mov
mov
arpl
lret
xor
cmp
outsl
jne
mov
test
mov
dec
test
test
add
lods
hlt
mov
sub
test
rol
or
std
test
repnz
xchg
sub
mov
lret
inc
lcall
xchg
popa
inc
dec
jne
and
pop
adc
sbb
and
lahf
rcr
adc
lret
stos
mov
jo
out
pushf
mov
lds
ret
adc
cmp
faddl
gs
cmp
or
dec
xchg
lret
ds
outsl
orb
sahf
sbb
mov
je
inc
cmc
into
pop
inc
and
dec
out
adc
icebp
loopne,pn
mov
push
push
xor
cmp
outsl
xchg
jecxz
pop
out
sub
xchg
add
aaa
dec
rcl
push
outsl
push
mov
mov
aas
das
call
lock
mov
add
aaa
sub
test
popa
xchg
fwait
sbb
arpl
xchg
pop
fcmovu
mov
cwtl
xchg
mov
adc
das
enter
aas
jle
ds
mov
cs
push
outsb
mov
test
stc
cmp
add
add
and
je
in
jbe
out
and
inc
bound
xor
in
les
icebp
xlat
in
scas
enter
inc
test
shlb
mov
rolb
jo
popf
inc
insb
mov
or
mov
mov
popf
mov
or
dec
jmp
ds
pop
sub
fmul
fcompl
ss
jecxz
imul
push
sbb
mov
fsubr
movsl
int
dec
into
adc
mov
cmp
in
fldl
loop
rol
push
add
mov
xor
cld
mov
mov
test
mov
xor
sbb
insl
je
jl
loope
test
mov
sub
out
or
movb
fnstenv
mov
bound
jnp
sub
int3
cmp
repz
jbe
mov
mov
ret
test
lcall
pop
pop
pop
imul
cmp
push
push
bound
mov
xchg
cltd
sbb
addb
xor
int3
pop
outsb
pop
jbe
and
negb
add
jl
shll
xchg
dec
into
or
adc
xchg
lret
jge
jb
out
fiadds
adc
shll
inc
lret
out
and
aas
push
add
dec
fsubl
and
loope
daa
mov
mov
notl
xor
xchg
mov
addb
lods
popw
pop
or
push
jns
adc
mov
cmpsl
loope
mov
jb
gs
sbb
clc
repnz
nop
dec
fwait
je
inc
cld
pop
mov
loop
fsubl
mov
hlt
pop
imul
ret
cwtl
or
mov
jge
add
jae
hlt
ss
mov
jp
out
mov
pop
bound
jb
pop
xor
jg
pop
xchg
jp
ljmp
add
rol
int
xchg
mov
stc
pop
cmpsb
cli
movsb
pop
dec
cli
out
dec
clc
lods
push
xchg
mov
sbb
and
push
das
test
fs
and
xor
sbb
repnz
icebp
sbb
in
movsl
push
sahf
clc
ljmp
lret
dec
imul
adc
shll
into
or
adc
or
pop
or
shr
out
lock
sbb
inc
xchg
sub
iret
push
xor
push
bound
aaa
ror
inc
xor
imul
fnstsw
ret
nop
insl
push
mov
icebp
leave
push
and
inc
mov
fcoms
in
lods
jns
inc
adc
lcall
dec
cli
or
lds
ljmp
shl
jg
nop
xchg
js
pop
fcompl
mov
sahf
inc
js
mov
push
bound
mov
push
arpl
jb
push
inc
or
cs
test
fisubl
in
fbld
std
movsl
xorb
cmp
mov
nop
mov
xchg
test
cmpsb
lss
icebp
xchg
xor
lds
pop
sbb
call
push
repz
push
lahf
out
fwait
sbb
jmp
out
arpl
mov
leave
div
movsl
mov
push
gs
aad
cli
cmp
pop
lahf
ljmp
mov
fst
jmp
push
jp
push
mov
mov
imul
mov
dec
cld
add
jnp
xchg
mov
das
inc
aas
xor
sahf
sub
pop
repnz
adc
dec
dec
adc
jo
mov
xchg
adcb
xor
add
jbe
push
dec
jmp
jne
adc
fld
ds
adc
sub
insb
push
icebp
call
ds
lahf
sahf
xchg
dec
aaa
cli
mov
jecxz
cld
ljmp
fsubl
jle
movsl
pop
sbb
sbb
cltd
mov
mov
repnz
mov
mov
out
out
js
inc
sbbb
inc
xchg
cwtl
insl
jne
lret
sub
dec
mov
fdivrs
sub
decl
rorl
and
xor
in
pop
out
mov
in
cmc
sub
repz
pushf
mov
cmpsl
aam
push
aas
adc
sbb
dec
fidivrl
xor
sub
test
sbb
mov
out
inc
aad
push
es
orb
in
sahf
cltd
sarb
aam
into
arpl
inc
in
xchg
daa
gs
sbb
enter
push
cmp
dec
sbb
rcl
pop
xor
pusha
adc
mov
mov
cmp
test
sub
push
call
jmp
jp
ret
fstpl
jb
jg
pop
aas
call
repnz
mov
sbb
ret
sets
inc
xchg
cli
dec
fldl
imul
sub
xor
leave
inc
in
xchg
inc
sar
ja
lcall
mov
mov
sub
leave
inc
dec
scas
add
addr16
fdivr
fisubs
pop
add
jecxz
mov
js
sti
clc
cmc
inc
mov
sbb
test
cltd
xchg
stc
fadds
ret
dec
mov
cwtl
pusha
dec
xchg
inc
es
aad
mov
sahf
mov
sar
push
mov
mov
sbb
add
xor
cmp
fildll
jl
xchg
popf
out
xchg
or
test
dec
dec
xchg
xchg
pop
mov
ss
pop
std
daa
cltd
push
sbb
or
mov
sbb
loope
addr16
fs
cmc
sub
pop
arpl
mov
scas
test
cmpsl
mov
movsb
inc
cmp
mov
clc
adc
mov
lods
in
adc
sbb
mov
mov
jb
out
cmp
inc
pop
into
dec
mov
xchg
fwait
and
mov
inc
int
loope
dec
cld
subb
aas
mov
iret
and
lods
jo
iret
bound
sbb
test
popa
xor
xchg
xchg
push
or
mov
cli
fsubr
jge
outsb
pop
or
mov
test
inc
dec
push
test
out
mov
mov
and
and
lods
sbb
cmp
push
cmp
mov
imul
inc
test
cmp
sbb
sub
sbb
sub
imul
repz
jmp
xchg
icebp
ja
cmp
insb
pop
mov
cmpsb
fcmovnbe
pop
mov
push
popa
push
aaa
dec
iret
mov
adc
xorb
fisubl
nop
cmp
jle
pop
xor
shr
test
add
jle
pop
sbb
popf
sti
leave
les
stos
mov
divl
fnsave
popa
sbb
or
pop
xchg
stc
pusha
pop
lcall
xchg
adc
pop
dec
dec
rolb
fs
mov
inc
mov
xchg
add
cmp
je
sbb
pop
sub
nop
cli
sbb
popf
testb
dec
adc
pusha
jecxz
jbe
stc
aad
icebp
cmp
sbb
cwtl
sbb
shrl
and
cmp
push
mov
mov
mov
jle
push
ljmp
es
cmpl
ss
lods
outsl
add
subb
aas
push
or
scas
or
pop
xchg
decb
jge
jns
iret
sub
push
popf
add
cld
rorl
add
dec
dec
fdivrs
enter
das
lds
lahf
inc
cmpsl
rolb
add
xor
ret
pop
pop
jp
ret
sbb
or
test
cmp
mov
popa
xor
and
sbbl
lods
ret
xchg
mov
inc
push
xchg
das
int
mov
sbb
pop
sub
add
mov
xchg
nop
popa
pop
push
test
imul
jecxz
test
daa
insl
in
das
add
adc
add
js
ss
test
pop
push
add
push
xor
jge
push
jno
pop
aad
mov
sbb
lods
and
push
pushf
push
lods
ja
call
lods
add
add
jns
pop
dec
fdivrs
stc
sbb
xor
fs
insl
sub
and
int3
mulb
insb
ret
loop
push
test
xor
xchg
pop
or
mov
jge
test
mov
mov
or
inc
and
ja
loop
pop
test
push
mov
nop
fiaddl
ja
inc
ss
pop
testb
in
jecxz
inc
movsb
mov
add
push
mov
fildl
mov
js
lret
jmp
mov
xor
add
pushf
jae
and
lcall
push
subb
filds
push
insb
scas
mov
out
popa
emms
push
fiadds
or
js
fxch
arpl
shrb
fisttpll
pop
inc
lock
sub
dec
mov
movsl
add
sub
sbb
sub
mov
stc
or
pop
sub
fsub
sub
sbb
gs
jnp
lds
jne
repz
setg
adc
stos
inc
jmp
in
sub
lock
test
cmp
fists
fisubrl
mov
aas
push
pop
jmp
movsb
ret
xchg
imul
jge
jle
lea
out
push
cmp
iret
xor
sub
xchg
int
adc
mov
xchg
dec
mov
insb
arpl
xchg
or
dec
sub
jnp
rcll
sti
inc
cwtl
and
mov
jnp
ds
jns
cmpb
mov
ret
in
xchg
or
push
andl
mov
jge
lods
adc
dec
scas
and
jmp
cmp
jmp
and
cltd
inc
and
jb
mov
pop
call
or
cmp
repz
mov
test
adc
stc
mov
jmp
mov
into
inc
jecxz
insl
pop
lcall
js
sbb
xor
cmc
bt
std
out
sti
jne
out
sahf
imul
inc
pushf
and
aaa
cli
fcmove
xchg
push
push
sub
adc
xor
jne
mov
jb
fcoms
notb
xor
out
xchg
xor
jl
mov
jg
jl
cmc
mov
sahf
xlat
call
in
in
mov
ja
aas
xchg
add
fsubrl
mov
pop
or
dec
jno
jo
dec
loop
sbb
lcall
lds
dec
or
bound
inc
xchg
in
xchg
es
mov
jb
push
xor
ljmp
out
cs
jno
cli
add
ficoml
mov
loop
jle
in
hlt
lcall
push
pop
inc
iret
ss
xchg
xchg
mov
sbb
jns
sub
xchg
popa
add
into
mov
add
pop
dec
outsb
scas
jp
inc
jae
out
fistl
call
cmpsl
and
mov
adc
mov
in
mov
and
or
lret
xor
and
push
in
adc
hlt
push
mov
fidivs
ret
add
arpl
shlb
outsl
mov
into
stos
mov
mov
xor
xlat
cmpsl
pop
jns
into
or
push
adc
into
into
push
jno
test
icebp
in
jb
inc
fildl
adc
and
dec
add
mov
sbb
xor
filds
xor
dec
adc
mulb
loope
orb
mov
stos
cmp
movb
xor
fbstp
addr16
mov
add
aaa
pop
lods
pop
and
sbb
xchg
scas
std
clc
xor
mov
and
and
mov
dec
mov
dec
xchg
add
adc
xor
loope
fidivs
popl
call
mov
mov
dec
cld
ds
or
xor
outsl
loopne
push
int
inc
repz
sbb
add
adc
andl
call
mov
mov
push
jle,pt
push
fstps
out
dec
enter
loope
cmpsb
xor
das
faddl
and
clc
push
ficoml
and
xor
or
test
pop
call
cmp
cmp
ficomps
xchg
xor
shlb
mov
mov
xchg
or
scas
shufps
lea
fistps
jge
testb
out
add
imul
call
rcrl
out
stc
sbb
inc
in
sub
push
test
bound
mov
inc
call
dec
ret
mov
les
xor
lds
outsl
int
xor
mov
aam
xchg
and
fisubrs
int
pop
push
inc
mov
inc
jle
fstpt
out
int3
mov
ret
cmp
or
cs
fisubrl
or
notl
enter
dec
mov
pop
push
adc
out
stos
popf
xor
or
xor
divl
and
push
ret
adc
adc
jmp
jl
cmp
cmp
mov
pop
sub
out
fwait
sar
jecxz
icebp
aas
pop
nop
sub
icebp
sarb
out
out
scas
dec
sub
inc
jae
ja
mov
cli
adc
sti
mov
inc
sub
cmp
add
lds
mov
pop
sub
js
and
popf
pop
fstpt
xchg
sub
push
or
je
pop
lea
cltd
mov
sbb
jae
js
jbe,pt
and
mov
add
mov
jae
add
lds
sub
fs
or
push
jns
orl
jae
sub
inc
cmpsl
xchg
adc
cmpsl
adc
and
mov
jp
lea
push
push
imul
push
inc
add
mov
push
adc
dec
int
inc
adc
unpcklps
and
aaa
or
sub
jbe
rcrb
andb
insb
sbb
mov
pop
movsl
insl
lea
jmp
adc
fimull
andb
lahf
cmp
roll
mov
add
test
push
in
mov
jge
xchg
jnp
retw
aam
and
xchg
push
test
cwtl
iret
cltd
mov
lock
jl
mov
das
cmc
mov
or
mov
mov
lea
sub
and
sbb
rcr
xorl
push
sbb
test
scas
out
or
push
sti
into
roll
out
test
ljmp
lods
mov
fxch
and
mov
loop
jg
pop
shl
jmp
sub
push
fisttps
and
mov
push
adc
mov
adc
movsl
add
mov
sbb
pushf
xor
cmpsb
pop
adc
mov
dec
mov
pushf
and
popf
je
and
rcll
sti
fs
and
scas
aad
sub
jecxz
lods
dec
gs
movsb
mov
sbb
fadds
fcompl
jno
int
pop
jp
mov
scas
pop
and
xor
fstpt
std
out
rcr
iret
and
dec
xor
test
sub
iret
push
lret
nop
pop
jae
rep
test
add
add
adc
ret
mov
mov
cld
lcall
inc
insl
jo
sub
jl
and
mov
inc
fcom
pop
lods
fldt
rolb
faddp
mov
add
mov
fisubs
insl
stc
sub
inc
cmc
out
and
sub
lods
lcall
sbb
jo
aaa
mov
add
sti
jns
xchg
adc
mov
cmpsl
pop
sbb
mov
and
fistps
pop
xor
push
jb
test
add
inc
popa
sub
aad
enter
fnstcw
imulb
rcrb
and
dec
sbb
cmp
add
out
add
sbb
xchg
bound
xor
cmp
imul
mov
or
imul
mov
rcl
test
jmp
in
rdmsr
leave
vmread
out
cld
push
pop
xor
push
push
and
aam
push
xchg
out
test
sbb
rolb
daa
adc
pop
into
dec
rolb
and
leave
ret
pop
push
data16
mov
mov
int
bound
pop
mov
push
or
cmp
inc
jae
adc
imul
mull
xchg
cmp
push
mov
dec
dec
push
icebp
and
sti
mov
nop
or
xchg
mov
pop
jne
or
subb
add
sbb
sbb
jmp
pop
cmc
mov
cli
stos
cmp
cwtl
mov
dec
jnp
js
jne
push
inc
mov
fidivrs
adc
push
fwait
stos
inc
fs
in
xor
mov
sub
ret
dec
rorl
aas
push
jl
dec
push
into
outsl
push
push
mov
inc
pop
data16
out
in
pop
inc
lock
dec
fimuls
aam
fs
fsts
add
es
outsb
int3
mov
out
shll
sbb
and
push
inc
push
jp
cmp
dec
sub
je
mov
xchg
test
cmpsb
pop
inc
inc
sarb
adc
pop
lahf
mov
test
jne
