push
mov
push
mov
cmp
jb
xor
add
push
mov
je
push
mov
mov
mov
mov
mov
mov
mov
rol
mov
xor
imul
xor
mov
sub
mov
mov
inc
cmp
jb
pop
pop
pop
pop
ret
push
mov
push
push
andl
andl
push
push
push
push
push
call
mov
lea
push
pushl
lea
pushl
movb
push
pushl
movb
pushl
push
call
push
push
push
call
pop
leave
ret
push
mov
mov
mov
mov
sub
test
jne
inc
jmp
andl
push
push
push
lea
lea
cmpl
mov
je
mov
jmp
mov
mov
push
lea
push
push
add
call
mov
add
test
je
mov
lea
movsbw
mov
add
inc
mov
test
jne
lea
push
call
mov
test
je
mov
add
andl
cmpl
je
mov
mov
test
jns
and
jmp
add
add
push
pushl
call
mov
mov
cmpl
je
incl
mov
lea
cmpl
jne
mov
incl
mov
imul
add
lea
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
mov
push
mov
push
mov
mov
push
push
mov
lea
push
push
push
call
test
jl
mov
mov
lea
push
pushl
push
call
test
jl
mov
mov
push
pushl
push
call
test
jge
andl
jmp
mov
pop
pop
pop
pop
ret
push
mov
sub
push
push
mov
xor
cmp
je
mov
cmp
je
cmp
je
mov
cmp
je
add
push
mov
lea
sub
nop
lea
mov
push
mov
inc
pop
cmp
jb
pushl
lea
push
add
call
mov
test
je
mov
sub
mov
mov
inc
dec
jne
pushl
mov
pushl
mov
pushl
mov
push
call
pushl
mov
push
call
lea
push
pushl
pushl
pushl
call
add
pop
jmp
xor
pop
pop
leave
ret
push
mov
sub
push
mov
mov
imul
push
mov
cmp
jb
mov
imul
mov
mov
add
imul
push
push
xor
pop
div
mov
mov
mov
mov
mov
sub
mov
test
je
mov
sub
mov
mov
ror
xor
imul
lea
mov
divl
mov
mov
add
cmp
jae
mov
mov
imul
xor
divl
xor
mov
sub
imul
div
cmp
jae
mov
sub
test
je
mov
mov
sub
mov
mov
jmp
mov
mov
mov
mov
mov
mov
inc
decl
jne
mov
add
add
add
cmpl
jne
pop
pop
pop
leave
ret
push
push
push
call
mov
mov
push
pushl
xor
mov
rep
call
test
je
push
call
xor
inc
pop
pop
ret
push
mov
testl
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
pop
ret
push
mov
sub
mov
mov
mov
sub
mov
je
mov
test
je
push
mov
add
test
je
push
push
mov
sub
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
addl
decl
jne
mov
test
jne
pop
pop
pop
xor
inc
leave
ret
mov
push
mov
pushl
call
push
call
pop
ret
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
test
je
andl
mov
sub
add
mov
mov
mov
lea
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
cmpl
mov
je
or
sub
mov
mov
sub
add
mov
mov
mov
lea
push
push
push
call
mov
mov
mov
sub
add
mov
movzwl
add
lea
movzwl
lea
mov
mov
mov
andl
xor
cmp
jae
lea
mov
mov
addl
push
lea
pop
rep
mov
add
movzwl
add
incl
cmp
jb
mov
mov
add
pop
mov
xor
pop
inc
pop
leave
ret
mov
push
mov
push
call
mov
test
je
push
push
mov
lea
push
mov
push
lea
push
call
mov
push
mov
call
add
push
push
lea
push
call
pop
pop
mov
pop
pop
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
mov
call
mov
push
call
cmpb
pop
jne
push
call
push
call
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
mov
pop
ret
mov
push
mov
sub
push
lea
push
pushl
push
pop
call
test
mov
je
cmpl
jbe
mov
push
push
pushl
mov
pushl
push
call
pushl
push
pushl
push
call
pushl
push
pushl
push
call
mov
cltd
mov
idiv
push
push
pushl
push
call
push
push
pushl
push
call
add
push
push
pushl
push
call
mov
add
push
call
push
push
pushl
push
call
add
push
call
push
push
pushl
push
call
add
push
call
mov
push
push
pushl
push
call
push
push
pushl
push
call
push
push
pushl
push
call
push
push
pushl
push
call
add
push
push
pushl
push
call
pushl
push
pushl
push
call
add
cmpl
jbe
pushl
push
push
pushl
call
pushl
push
call
pop
pop
pop
pop
mov
pop
leave
ret
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
push
mov
sub
mov
push
push
push
mov
movl
test
je
mov
mov
jmp
push
call
mov
mov
mov
push
push
push
push
xor
push
inc
push
call
mov
mov
mov
push
shl
push
add
incl
push
push
call
mov
mov
test
je
lea
push
push
pushl
call
mov
imul
add
imul
add
cmpl
je
cmpl
jne
push
call
lea
push
push
pushl
push
call
mov
push
push
push
push
call
mov
add
lea
add
mov
pushl
lea
mov
push
mov
and
call
pushl
mov
pushl
call
pushl
pushl
pushl
push
call
push
call
mov
push
call
test
je
pushl
mov
pushl
pushl
pushl
call
cmpl
mov
jne
push
call
jmp
test
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
add
jb
call
push
icebp
xlat
add
add
out
mov
jmp
add
rcrb
into
mov
jae
adc
lods
rcrl
lret
in
inc
daa
xchg
out
sub
rorb
call
push
aam
xlat
cmc
dec
rcl
roll
out
mov
jmp
add
xchg
rcr
push
out
imul
add
jae
fnstcw
int
fs
sub
ss
push
add
sub
or
jp
pop
pushf
pop
sbb
shlb
loope
mov
push
jp
push
movsb
pop
clc
jne
cmpsl
in
addl
jle
push
mov
inc
outsb
cmp
ljmp
push
insb
lods
pop
sbb
inc
dec
pusha
iret
mov
je
scas
loopne
lods
js
lahf
pusha
imulb
rcrl
or
das
xor
mov
xchg
push
add
fdiv
xchg
add
mov
xchg
es
shrl
xchg
rclb
adc
loop
or
je
pop
imul
pop
ja
inc
in
loopne
mov
xor
data16
shlb
popa
aad
xor
leave
clc
subb
jp
enter
test
mov
add
or
jmp
stos
xor
sti
xlat
and
jle
mov
in
push
sahf
test
jge
adc
jge
mov
xor
adc
mov
mov
outsb
mov
stos
or
nop
sbb
mov
push
jns
xchg
das
inc
add
mov
lods
imul
sub
xor
imul
hlt
rorb
nop
push
bound
insb
push
pushf
in
xchg
pop
pop
bound
jp
push
mov
add
out
mov
inc
cmp
out
inc
out
jbe
repz
rorl
lock
mov
std
jo
mov
push
jbe
mov
xchg
xchg
jg
sub
call
les
dec
lret
movsl
jge
ficomps
push
in
or
call
dec
inc
in
sbb
mov
or
push
je
stos
xor
or
push
movl
add
add
adc
or
cli
lret
pusha
and
test
bound
cltd
dec
xor
iret
fstpt
pop
decl
sbb
sbb
out
clc
add
loopne
mov
js
lods
jne
lahf
clc
mov
scas
pop
in
mov
rclb
fs
ret
xchg
iret
adc
add
rol
testb
hlt
iret
push
aad
pop
add
cmpsl
cltd
push
repz
add
jne
lahf
mov
or
xor
push
and
add
imul
jne
imul
mov
js
ds
push
int
sbb
int3
adc
push
lods
push
jl
xchg
xor
mov
push
mov
int
xor
aaa
vmovaps
movsl
outsl
mov
into
cwtl
xchg
ljmp
cmp
sbb
add
dec
mov
fdivs
ljmp
rcpps
pushf
mov
scas
add
pop
aaa
ss
imul
fs
inc
xor
divb
rorb
and
mov
mov
std
jo
cld
mov
out
mov
pusha
push
cmpsl
lods
mov
pushf
xchg
push
inc
in
xchg
jns
and
movsb
out
mov
aaa
jb
mov
and
lahf
xor
outsb
push
push
sarb
lret
rcl
in
icebp
popf
cmp
add
inc
push
imul
idivl
pusha
mov
dec
mov
subl
and
call
jo
cmpsb
sbb
cmp
adc
fdivrl
mov
push
push
icebp
mov
pop
jg
ljmp
loopne
pop
jb
sbb
into
jne
inc
repz
adc
icebp
insb
mov
out
push
add
jo
pop
sub
sbb
jb
lods
rorb
out
repz
add
adc
pop
sti
jge
inc
pop
mov
add
pop
and
lahf
jne
inc
rcrl
cmp
jae
cmp
jnp
call
sub
in
pop
push
mov
clc
mov
xchg
xor
ja
lock
xchg
imul
jae
repnz
fbld
in
cld
cmpb
push
pop
test
adc
ret
xor
dec
arpl
push
cmp
sbb
add
movsb
push
add
dec
fs
push
or
pop
mov
xor
dec
adc
clc
mov
mov
mov
inc
and
call
subl
adc
xchg
push
and
jno
call
mov
fdivp
lret
push
imul
mov
add
and
sbb
mov
aad
popf
das
jle
test
push
cmp
inc
callw
rcll
dec
push
mov
lcall
stc
pop
cmp
cwtl
jmp
mov
dec
in
in
mov
pop
cmpsl
push
or
stc
je
and
dec
adc
pop
stc
mov
daa
in
xchg
cmp
and
sbb
fistps
jp
mov
push
cmpsl
push
lahf
sar
xor
cmpsb
cmp
dec
ret
inc
mov
cmp
mov
add
add
mov
lret
pop
dec
sahf
ljmp
test
nop
mov
push
daa
pop
mov
je
cmpsb
mov
xor
call
and
push
push
outsl
loope
pop
mov
lahf
ror
dec
test
jmp
loop
not
mov
or
je
jmp
out
push
pop
in
pop
mov
fadds
push
sbb
and
insl
mov
in
xchg
cmp
push
xor
pop
shrl
sub
ja
loopne
scas
ret
or
dec
cmp
clc
push
maskmovq
testl
or
pop
xchg
adc
lods
ret
fwait
mov
sub
jmp
cmp
rorb
jae
pop
cmc
pop
cmpsb
xor
jl,pn
pop
rclb
xchg
loope
xlat
pushf
push
outsl
test
aaa
mov
scas
pop
mov
xchg
mov
cmp
fidivrs
daa
insl
xchg
mov
or
lret
ret
sbb
add
add
sbb
pop
scas
pushf
mov
adc
push
push
insb
xor
push
pop
or
out
fwait
stos
popa
mov
mov
pop
lods
sub
adc
repnz
cmp
dec
inc
inc
imul
dec
xchg
in
push
lcall
push
xor
add
insb
daa
cmp
pop
pushf
jmp
int
xor
sbb
cmp
loope
setns
add
add
js
testl
dec
mov
add
inc
imul
nop
cwtl
adc
pusha
push
pop
iret
and
jp
mov
call
repnz
add
or
xlat
out
and
sahf
test
popa
mov
out
sbb
mov
jno
push
jns
and
mov
pop
sub
movzbl
xchg
std
cwtl
das
pop
pop
pop
es
push
mov
add
sbb
js
pop
mov
out
xchg
pop
sub
out
or
or
std
rolb
mov
mov
dec
jo
ja
loope
cli
shl
inc
mov
and
loop
push
xor
in
inc
add
sbb
add
addr16
inc
insl
adc
frstor
dec
aam
inc
icebp
out
lret
pop
jp
sub
add
test
pop
add
leave
inc
and
sub
add
fstpl
push
xor
push
sarb
add
mov
adc
xchg
push
cltd
ror
mov
sti
push
in
pop
push
outsb
std
rcrl
adc
je
mov
outsb
fldcw
jmp
in
seto
sub
add
and
mov
jae
dec
enter
or
out
cmp
fsubrs
addr16
dec
cld
ljmp
add
add
sahf
hlt
jg
jne
dec
adc
rcrl
pop
jge
fisttpl
or
fsubrp
pop
test
std
iret
jp
decb
hlt
mov
insb
movsb
push
out
scas
divb
lock
out
xchg
imul
popa
leave
sbb
and
jg
sub
insl
addb
xchg
test
cmp
in
sub
push
xchg
or
mov
mov
sub
xchg
mov
sub
loope
xchg
xchg
cltd
jb
decl
sub
divb
orl
sbb
subl
mov
xchg
jecxz
clc
sarb
jno
insl
push
out
fistpll
mov
in
dec
xchg
out
push
and
lret
popa
sub
das
xchg
and
testb
addb
add
push
jmp
fcoms
enter
lret
cwtl
fisttps
clc
fcmovb
fs
dec
outsl
push
xchg
adc
sub
fs
test
arpl
push
fxch
enter
fsub
jge
scas
sbb
test
push
xchg
mov
jge
cld
pop
insb
adc
pushf
push
push
pusha
stos
push
pextrw
lods
mov
dec
lock
repz
lcall
mov
pop
cmp
or
sub
cmp
mov
js
movsb
ljmp
add
xchg
imul
mov
inc
cmp
out
jp
push
jg
jg
mov
xlat
fldenv
fsubl
cmp
jmp
outsl
sub
gs
add
clc
mov
jns
pop
test
mov
sub
sub
jo
or
arpl
jle
insb
mov
scas
or
cltd
pop
sti
repz
ds
add
add
sub
loope
in
popf
loopne
xchg
pop
pop
sub
adc
jo
ja
sub
bts
mov
add
jb
push
jg
or
les
dec
and
mov
pop
aam
not
mov
sub
shlb
xlat
sahf
sbb
in
je
sbb
dec
jnp
shlb
in
add
ds
insb
test
inc
jns
inc
addr16
and
add
xchg
inc
mov
add
fwait
xor
roll
outsl
arpl
lret
adc
push
pop
xchg
push
fnstenv
jmp
test
add
ss
mov
test
imul
sbb
call
dec
xchg
or
mov
leave
dec
xchg
jecxz
sbb
dec
ja
mov
push
xchg
add
das
imul
orb
dec
xor
pop
imul
jmp
arpl
push
sbb
inc
cmp
test
into
mov
sbb
call
sub
repz
or
pop
xor
mov
cs
out
mov
push
sbb
pop
pop
je
xchg
mov
fwait
sbbb
mov
lock
jns
inc
adc
aam
hlt
imul
cltd
xchg
ret
aaa
cmp
rsqrtps
lds
sahf
insl
cmpsb
ficomps
push
les
and
dec
test
rcrl
in
mov
xor
into
movsl
cmp
cs
lods
outsb
dec
lahf
imul
xchg
sbbb
push
aad
outsl
fwait
sbb
lahf
test
ss
push
insb
mov
fbld
pusha
xor
push
sti
sub
inc
dec
js
sbb
adc
fst
into
adc
pop
mov
pop
call
mov
lea
sub
jb
ret
les
ja
out
xchg
pushf
xor
jae
inc
sub
adc
sub
cmp
lods
sub
fistl
lret
xrelease
inc
ret
bound
pop
add
and
lods
imul
fistpl
ss
dec
push
sbb
push
pop
es
aad
ljmp
pop
shrl
pop
out
mov
add
add
cmp
inc
pop
pop
jnp
xor
testb
lods
sub
mov
jnp
push
inc
add
mov
cmp
ja
xor
or
popf
inc
jg
inc
push
movsl
cmpsl
fsubr
adc
add
push
inc
ret
pusha
mov
mov
inc
lahf
rolb
inc
xchg
jno
adc
rorl
hlt
adc
jmp
test
mov
sub
mov
jbe
repnz
jns
dec
sbb
scas
jno
push
sbb
mov
popl
add
add
sbb
lock
xchg
popw
mov
jnp
ret
lret
jg
pop
sarb
movsl
popa
sbb
nop
xchg
push
add
add
mov
pusha
and
stos
push
push
dec
dec
push
popa
cs
mov
movsl
xchg
xchg
sbb
jbe
push
push
test
push
cmp
add
loop
mov
leave
stc
call
xor
mov
out
out
and
lods
lahf
insl
out
ds
pop
and
xchg
push
js
decl
push
in
rolb
xchg
cli
into
mov
push
xchg
test
xchg
lds
fistpll
sbb
xchg
test
sub
clc
jg
and
add
inc
lahf
into
jg
xor
mov
adc
ljmp
pop
xchg
adc
add
pop
inc
mov
pop
jecxz
push
rcrb
sub
mov
icebp
push
jp
and
jbe
in
out
ficomps
and
icebp
lea
scas
sti
pop
arpl
arpl
pop
cltd
int3
cmpsl
jno
fistpl
and
mov
in
faddl
pop
cmpsl
xor
or
int3
hlt
mov
insb
ret
cmp
add
add
in
adcl
mov
xor
lahf
push
mov
popa
push
inc
dec
hlt
sbb
movsl
ficoms
mov
cmc
call
or
stc
push
push
xchg
xchg
icebp
pusha
mov
push
mov
divps
pop
and
adc
lret
mov
shll
adc
pop
add
add
add
push
cmpsb
jns
mov
fwait
adc
mov
jl
pushf
lods
ret
adc
mov
out
outsl
push
sbb
cmp
rorb
sub
push
push
mov
xchg
shl
xchg
add
icebp
pop
mov
roll
popl
or
push
pop
out
xor
cmp
xchg
mov
ret
ret
inc
jbe
adc
add
repz
and
push
sub
rclb
hlt
jge
add
add
shlb
jmp
push
aaa
repnz
sbb
and
xor
fs
mov
loop
add
add
ret
push
lods
testl
jmp
cltd
arpl
mov
mov
jmp
xchg
dec
lods
addl
jecxz
pop
lods
cmp
push
or
fstpt
mov
add
mov
sbb
dec
lock
mov
dec
sbb
dec
stos
mov
mov
mov
cmp
xor
std
subb
lds
dec
andb
arpl
or
movsl
push
mov
mov
cmp
sbb
pushf
cmc
sbb
inc
cmp
push
push
es
shlb
mov
sub
in
dec
aas
pop
pop
push
test
mov
jnp
lea
push
aaa
jae
ja
data16
or
in
sub
cmp
test
push
jge
mov
jo
mov
addr16
jns
jne
inc
mov
fistpl
dec
add
popf
mov
inc
jmp
lds
repnz
push
jp
push
cmp
scas
jge
adc
mov
xor
mov
inc
add
ret
daa
jno
rcrl
sub
jno
mov
or
add
loop
dec
mov
mov
cmpsb
shrl
sub
add
jg
int3
lahf
inc
add
fwait
lret
sub
jbe
and
xchg
inc
test
xchg
insl
dec
and
test
and
inc
cmp
sbb
add
ds
sbb
mov
testb
insb
add
imul
jno
and
popa
pop
enter
inc
not
cmp
cltd
dec
or
sbb
cmpsl
in
int3
fstpt
outsb
rclb
test
and
data16
and
call
xor
fs
dec
push
enter
dec
xchg
orb
out
jb
push
in
cmp
outsl
movsb
bound
test
add
add
sbb
adc
lahf
pop
imul
ja
jmp
push
add
cld
adc
fwait
push
into
in
popa
cmp
push
dec
or
add
cmp
or
push
and
and
xchg
bound
mov
in
repnz
xchg
out
or
adc
stc
fidivs
sbb
hlt
adc
rolb
add
add
sbb
rol
insl
sub
negb
iret
mov
fcoms
insb
sub
xchg
les
outsb
xchg
and
repz
in
xchg
add
dec
aas
pop
ljmp
xchg
in
fwait
lcall
ss
mov
sub
stos
dec
cli
xchg
add
push
or
repnz
fisubs
negl
xor
ljmp
iret
xor
adc
pop
movsb
out
lret
cltd
lahf
hlt
xchg
cmpsl
addl
adc
fsts
jmp
jl
shlb
xchg
mov
in
aad
jge
dec
jbe
xchg
and
mov
xchg
testb
pop
je
fistl
xor
cmp
mov
in
popa
leave
sub
and
pushf
arpl
and
dec
and
dec
movsl
cmp
test
leave
xor
fmulp
jbe,pt
mov
adc
dec
jl
lds
outsl
pop
pop
stos
push
inc
inc
repz
fidivl
pop
pop
adcb
jnp
pop
xchg
ja
xlat
std
inc
and
add
adc
xor
test
pop
cmpsl
mov
xchg
pop
loope
sar
pop
mov
ficoms
dec
adc
cmp
xor
filds
sbb
dec
push
scas
adc
or
sbb
and
je
mov
xor
addr16
xor
cmc
lret
jg
icebp
sbb
add
mov
insb
popf
les
nop
out
push
cmc
inc
jbe
mov
or
cmp
jmp
ret
call
add
cld
add
sbb
sbb
clc
clc
test
push
mov
push
loope
popf
add
mov
dec
push
lods
add
cmp
jl
fdivr
adc
jg
lret
enter
mov
bndldx
sarl
adc
into
mov
inc
cmpsb
std
lret
ss
loop
sub
fmul
mov
aam
mov
lods
pushl
icebp
mov
je
loope
out
lahf
sub
daa
scas
xchg
movsl
jecxz
add
mov
ret
sub
icebp
ss
loope
ds
pop
xor
jmp
imull
adc
or
cmp
push
cmc
mov
insl
int
rcll
aam
loope
int
int3
adc
or
xchg
mov
insb
in
les
das
movsl
mov
inc
cmp
cmpsl
imul
cld
je
mov
arpl
mov
and
sbb
in
sub
xchg
mov
push
add
add
inc
ljmp
pop
in
pop
pop
cwtl
xchg
xor
adc
shlb
test
lret
add
fistpll
dec
and
push
and
adc
xlat
shr
or
test
sbb
xchg
cmc
dec
and
push
xor
mov
sub
movsb
fcomps
jbe
mov
ds
lret
scas
loop
sbb
lea
pop
bnd
icebp
mov
ret
pop
mov
out
daa
cmpsl
fdivl
int
sub
jo
js
jecxz
mov
mov
loope
pop
mov
pop
jp
testl
and
mov
sub
sbb
xchg
adc
jl
movsl
jmp
xchg
adc
lods
in
fmull
add
jno
les
mov
jg
cwtl
cs
mov
lcall
loop
cmp
sbb
or
aas
lods
dec
dec
or
jno
gs
or
nop
lds
cmc
jge
jmp
pop
aaa
mov
jbe
imulb
jl
lds
or
imul
xchg
leave
pop
dec
in
mov
jmp
insb
iret
lea
lock
into
mov
mov
icebp
jmp
inc
sub
xor
dec
add
mov
imul
jns
cmp
fdivrl
xchg
fs
and
addl
sbb
ja
sub
jmp
hlt
cmpsl
dec
xchg
rolb
mov
pop
scas
loope
ss
push
sti
daa
sbb
jp
out
sub
sub
and
addr16
mov
pop
ret
xchg
push
inc
and
pop
push
cmp
add
repz
sub
cmp
ret
xchg
mov
push
fmull
xlat
hlt
subb
push
and
gs
shlb
movsbl
cmp
sbb
pop
add
cmp
imul
fcoms
push
clc
dec
or
mov
imul
add
outsl
andl
push
sub
movsl
aam
scas
mov
cli
sti
jle
mov
xchg
add
inc
aad
sbb
movsb
jno
sub
cmp
pop
push
mov
cli
mov
add
mov
pop
xor
xchg
xchg
dec
insb
mov
sub
outsl
push
imul
add
pop
fldcw
inc
adc
jle
sbb
jns
aas
add
shl
lds
enter
mov
xchg
repz
out
out
mov
fsubs
push
popa
cltd
add
inc
xor
test
cmp
add
pop
inc
cmpl
mov
adc
outsb
popa
mov
sahf
rcr
loope
jmp
and
bound
in
add
push
loopne
add
pop
out
test
adc
mov
add
imul
loopne
or
test
pop
pop
iret
mov
movb
xchg
mov
jo
pop
jae
icebp
xor
sub
mov
daa
int3
aaa
faddl
xor
jl
call
jae
test
jne
push
int
jmp
pop
divb
sub
cs
lcall
out
add
add
in
xlat
popa
daa
xchg
scas
jae
add
scas
movsl
or
add
imul
inc
dec
aaa
icebp
out
ret
hlt
call
add
pop
sbb
sbb
out
xchg
push
insb
repnz
insb
xchg
insb
dec
sub
data16
adc
add
jl
fdivrl
jo
inc
xlat
jno
push
sub
sbb
inc
xchg
data16
push
fcom
je
pop
dec
and
sub
or
or
mov
pop
push
xchg
and
fildll
xor
jp
imul
scas
pop
inc
divl
ds
stos
sbb
pusha
imul
xor
pop
dec
clc
outsb
or
xchg
mov
or
test
dec
loop
adc
add
inc
add
xchg
mov
addr16
mov
inc
mov
mov
stc
ficomps
dec
pop
sarb
jae
inc
push
mov
sbb
fidivs
movsl
leave
jmp
adc
or
test
add
shlb
inc
movsb
out
cmp
jp
mov
pop
push
push
movsb
xor
rcrb
stos
cmp
jge
xchg
mov
or
inc
das
add
popa
jge
xchg
inc
mov
jno
popa
out
rorb
xor
iret
dec
movsb
sti
insb
aaa
aad
pop
adc
stos
test
mov
jmp
sbb
mov
sub
nop
bound
les
cmp
imul
xorl
nop
dec
jne
and
push
add
xchg
test
test
xchg
fidivl
jmp
cmp
xchg
xor
xor
pushf
sbb
mov
add
add
hlt
add
jle
daa
fs
push
insb
adc
mov
sbb
loope
mov
sbb
insl
loop
orl
xchg
xchg
mov
mov
stos
loope
fcmove
stc
add
cli
fcomi
jmp
or
in
or
test
stos
loopne
jmp
xchg
jbe
xlat
cmpsb
inc
call
inc
jmp
enter
push
mov
mov
fildll
adc
xchg
jle
adc
pop
push
jecxz
popa
sub
pushf
xchg
push
cmpsl
call
and
push
stc
push
pcmpgtd
sub
mov
jle
sarb
jl
sbb
push
in
pop
idivl
cmc
mov
fistpll
scas
sub
lods
or
mov
in
insb
rcll
mov
aad
movsl
aam
mov
pop
or
jle
mov
in
sbb
jg
das
sub
int
dec
jmp
icebp
inc
jno
pop
add
add
xor
enter
inc
ret
pop
add
mov
std
daa
mov
test
xor
xor
mov
xor
out
lret
xchg
push
out
push
pop
loop
mov
in
outsb
mulb
xor
outsb
pop
xchg
cwtl
push
xchg
repnz
sbb
fistpl
push
adc
mov
mov
adc
inc
inc
sbb
push
sub
call
insl
sub
adc
or
fidivrl
mov
scas
notb
les
xor
sbb
roll
add
add
jl
test
into
jmp
movsb
dec
dec
add
fsubrs
sarb
movsl
cs
loope
dec
jne
outsl
or
sbb
dec
hlt
das
mov
popf
dec
in
mov
ret
dec
mov
cmp
es
leave
mov
mov
push
xorl
adc
xchg
int3
push
cmc
xchg
xor
lds
mov
push
pop
xor
push
sbbl
sbb
or
ja
call
es
aad
push
loopne
imul
dec
sub
add
call
daa
pop
popf
es
sbb
push
jp
cwtl
arpl
add
and
mov
xchg
jne
jp
subl
or
and
ds
int
fimuls
and
push
cmp
mov
sub
add
movl
inc
dec
xor
add
subl
cmp
cmp
stos
cmc
jbe
xor
movb
or
cs
sub
dec
adc
pop
jle
sahf
jo
fnsave
cmp
jl
jmp
sub
push
loop
arpl
cltd
and
cmp
idivb
add
aaa
outsl
adc
xchg
xlat
mov
mov
stos
movsl
cmpl
add
inc
pop
jp
scas
add
sbb
jmp
push
push
jbe
inc
fld1
or
sbb
and
sub
and
inc
cmp
pop
cmpsb
sbb
mov
imul
js
jb
je
dec
inc
subl
pop
mov
out
pop
mov
xchg
ja
sub
cs
mov
and
rclb
orb
jbe
push
mov
xor
add
push
add
mov
and
aaa
push
scas
in
mov
iret
mov
xlat
int3
mov
xor
out
sub
push
cmp
ret
xor
push
int3
xorb
cmp
xchg
aaa
int3
pop
movsb
fadds
pop
inc
inc
stos
scas
adc
test
out
pop
rcll
jecxz
cmpxchg
or
push
sub
xor
lea
inc
movsb
mov
rorl
hlt
or
jnp
push
mov
add
ret
dec
inc
icebp
push
ret
fstpt
fwait
add
cmpb
cmp
pop
or
ss
repz
dec
and
lret
jmp
hlt
mov
std
sub
add
fdivrl
mov
shlb
jns
cwtl
fs
mov
and
add
mov
pop
jl
pushf
pop
lods
sbb
je
push
subl
scas
or
add
xor
test
xlat
mov
sub
outsl
into
xor
fistpl
add
xlat
scas
dec
adc
test
mov
data16
jecxz
sub
mov
inc
in
leave
pushf
leave
pop
and
sar
dec
ret
and
xlat
iret
or
dec
js
pop
aas
mov
into
sub
test
mov
xor
imul
ret
or
out
jp
mov
sti
mov
in
inc
in
in
jno
test
pop
mov
movsl
fwait
adc
enter
fs
pop
inc
and
pop
push
xor
jmp
sub
shl
adc
xchg
jnp
popl
pop
pop
add
fucomp
popf
and
push
shll
add
cmc
mov
shll
xchg
pusha
into
jo
mov
pop
add
sub
xor
cld
ret
aam
fimull
sbb
mov
out
pop
dec
fists
and
ret
mov
cmpsl
push
pusha
adc
mov
mov
ja
or
aaa
jo
rorl
add
int
sbb
dec
jle
jae
sarb
out
scas
daa
cwtl
pop
or
sub
frstor
dec
pop
jecxz
fdivrl
cmp
idivl
test
int
repnz
or
das
add
mov
mov
add
cs
imul
pop
mov
jmp
sub
fisttps
aam
and
pop
movsl
xorb
cwtl
xchg
pop
dec
and
xchg
outsl
mov
test
pop
inc
push
dec
stos
aas
xchg
mov
add
inc
xor
fcomip
fnsave
pop
loopne
imul
sub
stos
xchg
sbb
fldcw
ret
incb
pop
ss
fisttpl
pop
test
mov
jno
dec
int3
mov
jb
aad
xchg
cmp
mov
add
fstps
rcrb
jmp
push
mov
into
cmp
or
mov
mov
xor
add
fists
faddl
mov
repz
adc
js
fstl
cmp
andl
addr16
rorb
dec
test
out
icebp
xor
lret
dec
jne
jmp
out
in
aam
cwtl
mov
cli
cltd
cli
lock
inc
add
lds
sarb
xchg
mov
fisubl
cmp
pop
jno
loopne
or
roll
les
add
cmp
mov
and
sbb
pop
push
movsb
sbb
lds
add
and
dec
push
push
dec
ljmp
jno
cltd
cmovnp
in
dec
sbb
push
and
pop
jnp
mov
sub
xlat
fs
rorb
cli
ja
push
fsubs
cmc
dec
mov
fxch
mov
add
push
inc
sub
xor
push
cs
jge
mov
jle
add
or
pop
aaa
jp
scas
xchg
xor
push
stos
sub
mov
sbb
pop
and
ss
popa
push
dec
cmp
es
push
testb
jbe
xchg
repnz
jle
mov
addr16
dec
adc
insb
sti
jbe
ror
pushl
sub
pushf
es
or
outsb
dec
lods
mov
mov
mov
out
pushf
lods
dec
es
dec
lock
jo
or
movsl
enter
aaa
push
shll
sub
push
mov
insl
scas
or
push
movsl
nop
test
sub
mov
jge
inc
in
pop
cmp
aam
in
xchg
xchg
fstpt
pop
adc
inc
mov
ret
cli
repnz
pushf
sub
add
jmp
stos
push
mov
xor
or
aad
adc
cmpsb
sub
mov
les
repnz
jns
into
sbb
dec
push
rorb
pop
pop
aad
mov
push
rorl
push
shlb
xchg
rorb
adc
cmp
sub
sub
xchg
gs
lret
inc
test
mov
mov
mov
lock
add
add
cli
repz
icebp
in
cmp
dec
test
outsb
out
xor
mov
hlt
scas
cmpsl
arpl
cld
sub
aaa
xchg
clc
out
addr16
push
ret
in
mov
adc
add
out
xchg
addb
or
inc
jecxz
cmp
pop
insb
loop
mov
jp
and
mov
cmp
test
test
scas
rol
sub
cmp
push
add
add
popa
jno
cmp
ffree
jno
aas
xor
push
movsb
jl
cli
inc
dec
pusha
inc
imul
inc
cmp
int
dec
outsb
xchg
dec
test
js
dec
loopne
out
cmpsl
ss
rsm
push
cmp
and
cmp
test
sbb
or
sbb
lahf
fidivrs
dec
jae
loope
sub
test
loope
dec
jg
xchg
xchg
or
sub
or
xor
mov
dec
repnz
and
dec
mov
cmp
cmc
add
xchg
orl
fs
loopne
rcrl
push
test
mov
xlat
fbld
push
mov
ret
mov
ss
mov
adc
inc
jno
adc
data16
je
bound
add
add
mov
xchg
xor
imul
jnp
cltd
sahf
mov
sbb
fimull
pop
stc
aad
repnz
mov
frstor
cmp
data16
xchg
xchg
pop
scas
bound
lods
cmovo
push
inc
aas
fcomps
cmp
or
call
xor
rcl
dec
pop
sub
test
push
out
pop
and
xchg
and
push
sbb
jbe
add
leave
mov
mov
flds
add
cwtl
nop
sahf
std
mov
and
bound
dec
pop
imul
dec
ss
insb
sbb
enter
aad
cli
lea
imul
inc
test
test
test
enter
cli
cwtl
sub
cltd
jmp
mov
mov
int3
fdivl
fscale
es
mov
fnstenv
push
cli
xchg
lea
pop
pop
int
imul
mov
fldln2
mov
sub
dec
sbb
xchg
fdivr
shl
cld
out
sahf
inc
cmp
shll
add
ss
ret
or
test
test
cmp
push
push
mov
pop
pop
enter
