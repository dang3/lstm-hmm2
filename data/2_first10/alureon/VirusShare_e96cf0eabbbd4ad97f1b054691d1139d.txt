push
nop
xorps
nop
push
nop
xorps
nop
mov
nop
xorps
nop
push
jmp
inc
jmp
push
nop
xorps
nop
push
nop
xorps
nop
mov
jmp
add
jmp
pop
nop
xorps
nop
pop
nop
xorps
nop
pop
nop
xorps
nop
mov
nop
xorps
nop
sub
nop
xorps
nop
xor
nop
xorps
nop
push
nop
xorps
nop
push
nop
xorps
nop
push
nop
xorps
nop
push
nop
xorps
nop
push
nop
xorps
nop
push
nop
xorps
nop
push
nop
xorps
nop
push
nop
xorps
nop
call
nop
xorps
nop
push
nop
xorps
nop
mov
nop
xorps
nop
mov
jmp
xor
jmp
mov
jmp
push
jmp
push
add
pop
nop
xorps
nop
inc
nop
xorps
nop
je
nop
xorps
nop
sub
nop
xorps
nop
jmp
nop
xorps
nop
add
nop
xorps
nop
movl
jmp
push
jmp
lea
nop
xorps
nop
lea
nop
xorps
nop
push
nop
xorps
nop
push
nop
xorps
nop
push
nop
xorps
nop
mov
nop
xorps
nop
push
nop
xorps
nop
lea
mov
nop
xorps
nop
add
nop
xorps
nop
mov
nop
xorps
nop
mov
nop
xorps
nop
lea
nop
xorps
nop
mov
nop
xorps
nop
push
nop
xorps
nop
push
nop
xorps
nop
xor
jmp
xor
jmp
push
nop
xorps
nop
inc
nop
xorps
nop
push
nop
xorps
nop
addl
nop
xorps
nop
inc
nop
xorps
nop
push
nop
xorps
nop
addl
nop
xorps
nop
push
nop
xorps
nop
addl
nop
xorps
nop
mov
nop
xorps
nop
push
nop
xorps
nop
call
jmp
mov
jmp
mov
nop
xorps
nop
lea
nop
xorps
nop
push
jmp
inc
jmp
call
nop
xorps
nop
pushl
pop
nop
xorps
nop
nop
nop
xorps
nop
nop
nop
xorps
nop
cmp
nop
xorps
nop
jne
nop
xorps
nop
jmp
add
add
add
add
add
push
loope
je
nop
xorps
nop
add
nop
xorps
nop
nop
nop
xorps
nop
push
nop
xorps
nop
subl
nop
xorps
nop
mov
nop
xorps
nop
mov
nop
xorps
nop
mov
nop
xorps
nop
pop
nop
xorps
nop
push
nop
xorps
nop
push
nop
xorps
nop
push
nop
xorps
nop
push
nop
xorps
nop
pushl
nop
xorps
nop
pushl
nop
xorps
nop
push
nop
xorps
nop
movl
nop
xorps
nop
call
nop
xorps
nop
pop
nop
xorps
nop
pop
nop
xorps
nop
pop
nop
xorps
nop
pop
nop
xorps
nop
pop
jmp
movsl
jmp
mov
nop
xorps
nop
add
nop
xorps
nop
pushl
pop
nop
xorps
nop
xor
nop
xorps
nop
sub
nop
xorps
nop
mov
nop
xorps
nop
mov
nop
xorps
nop
mov
nop
xorps
nop
mov
nop
xorps
nop
xor
nop
xorps
nop
mov
nop
xorps
nop
add
sub
nop
xorps
nop
cmp
nop
xorps
nop
jb
nop
xorps
nop
push
nop
xorps
nop
push
nop
xorps
nop
push
nop
xorps
nop
mov
nop
xorps
nop
xor
nop
xorps
nop
push
nop
xorps
nop
pop
nop
xorps
nop
xor
nop
xorps
nop
push
nop
xorps
nop
mov
jmp
movzbl
jmp
movzbl
nop
xorps
nop
movzbl
nop
xorps
nop
push
add
pop
nop
xorps
nop
push
add
pop
nop
xorps
nop
movzbl
nop
xorps
nop
sub
nop
xorps
nop
xor
xor
nop
xorps
nop
cmp
nop
xorps
nop
jb
nop
xorps
nop
xor
nop
xorps
nop
mov
nop
xorps
nop
mov
nop
xorps
nop
inc
nop
xorps
nop
mov
nop
xorps
nop
cmp
nop
xorps
nop
jb
nop
xorps
nop
mov
nop
xorps
nop
xor
nop
xorps
nop
xor
nop
xorps
nop
pop
nop
xorps
nop
test
nop
xorps
nop
jbe
nop
xorps
nop
sub
nop
xorps
nop
movzbl
jmp
add
jmp
movzbl
nop
xorps
nop
push
add
pop
nop
xorps
nop
movzbl
nop
xorps
nop
xor
xor
nop
xorps
nop
mov
nop
xorps
nop
mov
nop
xorps
nop
mov
nop
xorps
nop
dec
nop
xorps
nop
jne
nop
xorps
nop
mov
nop
xorps
nop
mov
nop
xorps
nop
test
nop
xorps
nop
jbe
jmp
dec
jmp
movzbl
nop
xorps
nop
mov
nop
xorps
nop
movzbl
nop
xorps
nop
push
add
pop
nop
xorps
nop
movzbl
nop
xorps
nop
xor
or
nop
xorps
nop
mov
nop
xorps
nop
nop
nop
xorps
nop
mov
nop
xorps
nop
mov
jmp
lea
jmp
nop
nop
xorps
nop
push
add
pop
nop
xorps
nop
movzbl
jmp
mov
jmp
xor
jmp
pop
jmp
dec
nop
xorps
nop
jne
nop
xorps
nop
pop
nop
xorps
nop
pop
nop
xorps
nop
pop
nop
xorps
nop
add
nop
xorps
nop
pop
nop
xorps
nop
add
nop
xorps
nop
push
nop
xorps
nop
ret
nop
xorps
nop
pushl
pop
nop
xorps
nop
shr
nop
xorps
nop
mov
nop
xorps
nop
shl
nop
xorps
nop
mov
nop
xorps
nop
mov
nop
xorps
nop
pushl
nop
xorps
nop
push
jmp
mov
jmp
xor
nop
xorps
nop
mov
nop
xorps
nop
add
nop
xorps
nop
cmp
nop
xorps
nop
je
nop
xorps
nop
sub
nop
xorps
nop
jmp
nop
xorps
nop
xor
nop
xorps
nop
xor
or
nop
xorps
nop
lea
jmp
mov
jmp
mov
nop
xorps
nop
mov
nop
xorps
nop
lea
nop
xorps
nop
add
nop
xorps
nop
xor
or
nop
xorps
nop
add
nop
xorps
nop
ret
add
fucomp
cmc
adc
imul
xor
pop
fdivr
pop
or
out
lea
arpl
dec
pushf
clc
jnp
mov
out
es
mov
pop
xchg
push
push
mov
shrb
mov
bound
xor
pusha
xor
ret
int3
in
arpl
ss
clc
push
mulb
fwait
inc
mov
or
icebp
push
icebp
addr16
xchg
mov
inc
imul
aas
jns
repnz
sbb
std
int
pop
push
jl
xchg
cmpb
mov
push
xor
test
hlt
aam
in
jae
xor
cmp
pushf
cs
shrl
pop
pop
lcall
xor
cli
inc
jb
repz
mov
and
movsl
jno
call
test
nop
xchg
sbb
jns
enter
and
cwtl
addr16
xchg
mov
insl
stos
jno
clc
cmc
into
lcall
inc
ffreep
mov
pop
push
aam
xchg
mov
sarl
sahf
int3
cmpsb
nop
sub
mov
scas
lods
fcoml
add
mov
clc
int
or
inc
sub
iret
cwtl
inc
mov
repnz
outsl
lahf
jne
out
hlt
mov
mov
das
xor
xor
fcmove
imul
hlt
and
fidivrs
ds
jge
int3
sbb
fdivs
mov
jge
dec
sbb
sbb
scas
xor
scas
xchg
aam
xor
pop
daa
xor
xor
cmp
mov
popf
test
div
in
in
push
lea
jno
jmp
fsubp
orl
jns
outsb
sub
notb
jp
int3
nop
xor
mov
mov
out
das
jp
lock
pusha
enter
cmp
les
xchg
fnsetpm(287
dec
or
int
scas
cmp
lahf
xchg
int3
jge
inc
push
pop
add
mov
push
add
push
sub
hlt
fisubs
aaa
xchg
mov
sub
testl
xchg
sbb
push
clc
or
test
data16
fistpll
lahf
push
adc
cmp
or
aam
pop
mov
cmp
mov
andl
aad
out
or
adc
fs
and
sub
aam
inc
adc
pop
xchg
push
or
dec
jmp
rcl
lret
dec
out
out
inc
popa
stos
shll
mov
data16
cmp
cld
bound
cmovne
xchg
ss
sbb
xchg
aad
mov
loop
imul
sub
popf
xchg
mov
adc
adc
pop
loope
outsb
mov
mov
in
sub
sub
ss
dec
cwtl
pusha
jo
mov
jl
insl
pushf
inc
test
or
movsb
js
inc
adcb
sbbl
jp
pop
leave
out
inc
dec
aaa
jp
jmp
cmp
mov
sub
aad
jno
sub
push
jae
stc
fistpl
xor
imull
jne
push
sub
adc
jae
cltd
outsl
adc
jae
pop
xor
and
mov
mov
xchg
inc
mov
jle
stc
les
lahf
inc
push
push
aam
push
bound
or
call
sub
iret
push
xor
clc
inc
push
inc
insl
fisubrs
adc
xchg
xlat
dec
pusha
fadd
ljmp
mov
out
mov
lock
ds
pop
mov
out
or
mov
inc
cmp
lds
xchg
adc
sbb
inc
pusha
insb
popl
push
jb
mov
jnp
sahf
int
xlat
popf
adc
lds
cltd
jecxz
loopne
push
inc
sub
rclb
test
fstl
pop
adc
cmp
pop
pop
mov
fiaddl
cwtl
pop
out
sahf
and
jns
add
out
or
adc
clc
or
pop
fldl
jg
jecxz
cmp
je
sub
xchg
xor
test
scas
pusha
pop
dec
mov
cli
mov
nop
repnz
ja
lret
cmp
push
imul
mov
fistps
lret
or
hlt
ret
push
aaa
adc
enter
or
mov
sbb
jb
xchg
and
lea
data16
xor
fs
dec
pushf
pop
sahf
icebp
push
add
fwait
fwait
mov
push
pushf
xor
mov
or
push
mov
xchg
push
insb
or
and
fistps
incl
test
movsl
cmpsb
cmp
iret
popf
bnd
out
xchg
lods
pop
push
inc
cs
and
add
rolb
test
pop
jae
cmp
jge
mov
sbb
cld
movsl
push
pop
in
pop
fwait
inc
repnz
cmp
test
xchg
xchg
inc
mov
hlt
dec
dec
outsb
fnstenv
insb
adc
cmp
sbbl
xchg
and
mov
mov
jbe
dec
aam
adc
adc
mov
ret
inc
push
mov
roll
push
ret
pop
sti
imulb
ja
mov
jp
jno
mov
and
ret
mov
or
lock
ja
dec
jae
insb
mov
and
sbb
or
or
dec
inc
cmp
cmc
sahf
push
out
mov
dec
xor
mov
add
imul
das
cmp
fcoms
andb
push
ret
cwtl
jnp
jecxz
icebp
inc
aam
push
inc
gs
mov
fldenv
fxch
jns
nop
cwtl
cs
jl
cmp
jmp
stos
pop
into
jo
jbe
fidivl
subb
cli
ds
nop
xor
repz
jbe
cmp
jns
test
pushf
sub
cmpsb
clc
aam
lahf
jle
add
adc
daa
scas
xchg
mov
lcall
xor
movsl
adc
add
inc
notl
fldl
sbbb
xchg
fstps
xor
jnp
jo
sysexit
and
and
sti
adc
ja
out
jecxz
dec
xchg
push
outsl
sarl
and
cld
cli
ss
mov
lret
int
lret
sbb
je
adc
repnz
mov
loope
xchg
jecxz
jle
mov
scas
sbb
mov
dec
xor
inc
push
mov
sub
push
xchg
pop
lcall
jae
jo
js
insl
testl
xchg
arpl
sti
jo
mov
adc
hlt
xlat
adc
sbb
insb
mov
fwait
push
std
dec
sahf
mov
push
or
popf
dec
pop
sbb
cmpl
mov
les
cmpsb
cmpsb
lret
cmpsb
add
cmp
adc
mov
mov
mov
movsl
jbe
aam
ret
cli
and
xor
jae
adc
or
ljmp
push
jne
xor
cmp
add
inc
cmpsb
adc
fstps
xchg
dec
aas
jnp
mov
fdivr
push
add
insl
in
adc
and
cmp
in
adc
pop
ds
adc
fnstcw
test
into
mov
inc
pop
sub
add
mov
sub
in
jno
push
cld
adc
out
test
fcmove
fs
sbb
push
jbe
pop
mov
mov
mov
cmc
lock
push
jbe
xchg
iret
mov
pop
jmp
jbe
fisttpll
sub
out
push
into
in
push
mov
mov
loopne
mov
mov
scas
test
arpl
cmc
out
lea
mov
mov
mov
mov
test
loope
xor
mov
xor
fimuls
mov
loop
or
jle
stc
shr
mov
mov
test
outsl
sub
lods
pop
cltd
jb
jle
dec
push
stc
push
filds
or
iret
call
repz
xchg
jnp
out
dec
unpcklps
ja
clc
popf
icebp
jge
dec
adc
and
adc
ljmpw
cwtl
sti
or
dec
pop
stc
loope
cs
pop
rorl
or
adc
jmp
fsubrs
jnp
or
idivl
pop
lcall
call
pop
in
inc
lock
sbb
jns
lret
out
cmp
scas
out
decb
adc
pop
outsl
fs
loop
cmpsl
xor
mov
push
push
adc
push
lds
out
lcall
jbe
add
sbb
adc
insl
stos
subb
es
jns
sub
xchg
sub
int
test
rcr
cs
and
fistpl
sbb
sub
sti
mov
rcrb
cwtl
nop
add
data16
dec
dec
adc
cwtl
rcrb
add
sti
jnp
xorl
scas
insl
cwtl
movsb
push
dec
pcmpeqd
je
in
mov
cmp
push
add
mov
in
xchg
xor
xchg
inc
rorl
into
sbbl
int
jmp
enter
xlat
iret
mov
scas
sub
loope
into
jle
dec
add
adc
or
orb
out
jmp
inc
hlt
cmp
out
lret
push
xchg
in
enter
jmp
cmp
fcmovne
sub
shll
adcb
sahf
out
mov
jb
popa
jnp
pop
cld
stc
shrl
inc
popa
out
lret
jo,pt
or
daa
shlb
mov
and
psllq
addl
mov
mov
mov
xor
pop
lret
inc
dec
add
int3
inc
lcall
mov
mov
cmc
dec
imul
adc
and
dec
cmc
xor
cmp
jno
mov
pop
cmpsl
mov
test
push
pop
into
xchg
xorl
pop
lods
cmp
fs
imul
pop
ffree
dec
cmp
jae
sbbb
dec
imul
mov
mov
sub
popf
mov
lds
cmp
sub
mov
or
push
push
jmp
aaa
lds
adc
into
dec
cli
or
fnstsw
fstps
sbbb
int
std
xor
fcoml
hlt
jg
mov
jae
mov
inc
in
daa
push
pop
push
mov
clc
mov
cld
bound
into
test
loope
mov
ja
scas
into
or
add
adc
adc
data16
mov
hlt
lock
negl
sub
xor
iret
fwait
ds
cwtl
movsb
jae
adc
jo
jno
add
mov
icebp
insb
xchg
cmp
adc
aas
push
rcrl
mov
mov
stc
sbbb
repnz
gs
lret
pop
inc
mov
xchg
add
and
or
cli
inc
xor
shl
jno
mov
cltd
xchg
mov
outsl
sub
lods
int3
fcompl
outsb
and
cmp
fists
inc
dec
push
decl
or
into
xchg
mov
ljmp
dec
cmp
mov
lods
mov
mov
loopne
flds
xor
dec
sub
in
cli
dec
imul
push
aad
mov
xlat
mov
sbb
inc
std
sarl
jbe
imul
in
lret
fisubl
loopne
jle
xor
adc
mov
and
movsl
pop
inc
push
push
push
loopne
mov
and
insl
adc
cmp
and
mov
lods
in
mov
jo
movsb
test
dec
xor
sbb
jp
leave
mov
enter
sub
jl
in
push
or
push
idiv
dec
fwait
data16
fiaddl
inc
push
test
pop
fdivrs
out
les
push
fs
cmpsb
fisttpll
cs
stos
scas
mov
daa
jns
je
stos
adc
xor
push
adc
mov
sub
inc
and
push
cmp
and
in
call
mov
loopne
xchg
loope
cmc
xor
push
xchg
pop
sub
mov
imul
insl
and
mov
adc
jle
and
sub
movsl
cltd
cli
adc
sbb
push
cltd
push
cmpsb
lock
xchg
outsl
fcomi
fidivl
fwait
xor
and
jl
inc
loop
jae
pop
xor
and
cmc
push
ljmp
mov
dec
fisttpll
pop
mov
cmc
or
cmp
clc
sbb
push
mov
testb
xchg
out
and
clc
jl
lcall
push
ss
or
add
adc
push
mov
cltd
jbe
mov
bound
xor
bswap
or
mov
addr16
int
scas
loopne
ror
jl
test
lret
or
loop
sbb
mov
ror
gs
lret
sarl
es
into
test
adc
imul
dec
not
or
mov
lcall
mov
std
test
popf
ja
sbb
adc
les
or
pop
jae
mov
test
test
lret
es
dec
lret
mov
clc
jecxz
add
xlat
jo
push
cs
jns
jle
cld
leavew
inc
addl
or
fidivl
sub
fdivs
inc
cmp
clc
jmp
cmp
or
stos
and
jecxz
loop
mov
pop
push
stc
pushw
or
mov
sbb
jb
rcll
fwait
cmpl
jmp
add
ret
out
daa
adc
and
mov
into
cwtl
or
jo
cmp
popa
push
pop
pop
and
jecxz
leave
movsl
jecxz
lret
rorl
sub
or
stos
or
pop
dec
push
icebp
add
sub
mov
iret
xor
mov
sub
popf
in
mov
ljmp
outsb
mov
fwait
jg
popa
inc
call
cli
bound
sub
int3
mov
cmpsl
lret
xchg
mov
inc
inc
pop
mov
movsb
cwtl
add
mov
ss
gs
jns
inc
sahf
nop
daa
pop
arpl
insb
xchg
or
sbb
scas
andl
add
push
adc
or
push
fsubr
jle
dec
addr16
push
push
mov
or
ret
insb
sub
lahf
xor
mov
out
int
outsb
mov
popf
lret
sub
in
mov
rorb
mov
dec
mov
aas
xchg
outsl
data16
xor
jno
add
xor
fsubs
aam
mov
pushf
jecxz
jle
add
jno
fdivs
push
test
xchg
adc
scas
test
jmp
movsl
into
adc
dec
aad
xorl
inc
xor
jb
xor
std
fs
mov
cmc
and
cmp
adc
fisubl
in
test
and
int
cmp
adc
fucomip
roll
dec
mov
imull
mov
bound
cmc
pop
sbb
mov
jnp
imul
testl
aaa
xchg
lcall
in
push
inc
mov
mov
loop
stc
rclb
incl
mov
jg
inc
aad
and
in
ret
mov
int3
xchg
adc
and
stc
in
mov
shl
loope
pop
mov
ret
dec
inc
sbb
mov
sbb
push
jg
mov
lods
jl
inc
cmpl
sar
pop
mov
orl
out
loop
pusha
pop
mov
adcl
inc
clc
xlat
cwtl
insb
push
mov
or
faddp
inc
push
sub
cmpsl
mov
pop
mov
fdivrl
mov
subb
mov
les
iret
and
jl
sbb
mov
lods
xorl
ljmp
cld
sub
xor
popf
repz
fs
inc
neg
push
cmp
test
pop
shl
jle
ja
cmp
jge
jne
jmp
iret
rolb
mov
into
push
push
jbe
cmp
adc
sub
stc
mov
add
adc
sub
out
js
sub
in
pop
fidivl
stos
mov
ror
push
jle
dec
fwait
clts
dec
mov
fisttps
adc
mov
nop
out
enter
and
dec
int
in
std
inc
mov
xor
mov
fists
push
int
adc
xor
jecxz
iret
jbe
iret
movsb
pusha
stos
ljmp
mov
push
mov
inc
pop
pop
sbb
jge
mov
or
inc
jns
xchg
enter
aas
es
test
icebp
clc
jae
jo
push
loope
sahf
clc
jl
pop
test
xchg
sbb
out
sbb
add
sarb
cmp
mov
stos
jo
cli
out
sub
repnz
dec
push
sub
scas
dec
mov
jmp
adc
subb
jp
inc
mov
inc
mov
pop
stos
cs
mov
cld
out
mov
xchg
in
mov
lahf
sahf
leave
pop
and
ja
iret
mov
cmpsl
sub
pusha
xor
in
lret
mov
push
lods
jb
adcl
lahf
adc
add
sahf
std
ljmp
inc
divl
ds
bound
icebp
jne
iret
or
inc
inc
sbb
cmpsl
add
xor
sub
in
adc
cmp
scas
xor
jb
pushf
loopne
roll
dec
xchg
adc
sbb
aam
sbb
mov
stc
jle
hlt
cmp
inc
rcl
fwait
in
test
test
add
in
and
or
stos
int3
xrelease
pushl
xor
mov
mov
mov
push
arpl
outsb
pop
cs
leave
rcll
push
cli
mul
jb
pop
addb
jmp
ljmp
stos
dec
mov
jecxz
add
out
rorl
ja
outsb
xlat
mov
lods
mov
mov
popf
scas
xchg
mov
sub
mov
mov
mov
mov
ja
outsb
lret
faddl
cmp
push
jnp
popf
inc
fnsave
pop
mov
jnp
mov
adc
data16
loopne
out
or
and
or
or
mov
insb
xchg
xor
sbb
enter
repnz
cmc
push
jae
test
loopne
in
jno
sub
sbb
xchg
fsub
aad
pop
fnstsw
insb
sbb
mov
je
inc
aad
sbb
dec
popa
out
fsubrs
mov
fdivl
int3
test
aam
repz
dec
hlt
enter
cmpl
or
ret
add
adc
mov
push
xchg
inc
sub
push
out
ucomiss
mov
sub
test
test
mov
mov
or
push
imul
pushf
ror
cmpl
inc
push
std
data16
sub
enter
and
push
mov
sarl
push
aaa
cmpsb
and
xlat
call
xchg
int
push
jno
ds
and
jno
xchg
adc
stos
xchg
xor
adcl
scas
lods
cmp
fidivrl
jg
mov
jae
and
sub
xchg
sbb
xchg
outsb
xchg
push
cs
popa
mov
and
ret
sarb
enter
stos
stc
mov
shrb
test
pop
mov
add
push
int3
lods
fs
pop
loope
cmpsl
or
fcoms
pop
xor
mov
pop
aas
les
jb
xchg
loop
push
jl
jb
les
mov
sbb
sub
xchg
aaa
jg
sub
push
sbb
mov
aaa
sub
into
pop
in
fidivrl
push
inc
aaa
fsubrs
lods
add
js
cmpsb
sub
mov
outsl
fucomi
fwait
std
imul
and
mov
sbb
pop
push
mov
out
pop
and
xlat
xchg
and
popa
mov
imul
std
xor
xor
jge
mov
sub
jl
add
dec
and
and
repnz
mov
subb
les
add
jp
add
loope
push
push
add
inc
xchg
clc
cmp
cmp
add
rolb
or
jecxz
iret
add
dec
roll
loop
inc
fstl
pusha
pop
aas
ja
mov
push
xor
or
mov
pop
popf
add
xchg
sbb
notb
cmp
mov
stos
or
cmp
xchg
dec
sahf
xor
test
and
dec
pusha
dec
call
cmp
stos
add
lock
fcomi
shl
xchg
int
mov
xchg
xchg
test
insb
push
divb
rorb
inc
roll
cmp
dec
inc
rol
mov
push
push
sbb
pop
pop
cmpsl
xchg
push
and
mov
stos
inc
xlat
aaa
mov
or
scas
cmpsb
pushf
int3
icebp
cwtl
add
lahf
mov
jb
cmp
mov
push
push
lcall
xchg
push
ljmp
jo
pop
mov
scas
sub
jb
push
dec
lock
jp
adc
aas
push
jl
jae
or
adc
shrl
add
in
cld
int3
rolb
pusha
cmp
shrb
jnp
mov
aaa
dec
adcl
scas
rcrb
les
mov
push
cmp
xchg
mov
mov
test
push
mov
mov
xor
cmp
adcl
ja
mov
push
add
jno
out
or
mov
in
int
sub
and
fisttpl
sub
mov
das
loop
push
aas
in
das
push
push
sahf
xchg
pop
inc
mov
mov
pop
shlb
adc
test
js
dec
in
js
pop
and
inc
mov
push
inc
inc
shrb
push
ss
or
sub
xchg
jp
into
repnz
xlat
inc
add
mov
xchg
sub
jmp
xchg
adc
sub
xor
sti
sub
dec
mov
int
test
dec
rorb
ljmp
fadd
pushl
orb
cmp
jecxz
clc
mov
push
and
mov
sbb
mov
dec
insb
mov
out
fbld
push
ljmp
pop
jg
repz
leave
inc
push
in
mov
add
pop
xor
push
and
movsb
inc
dec
fdivp
mov
jo
mov
mov
outsb
mov
sub
mov
test
pop
mov
js
lret
aad
or
lret
es
testb
mov
decl
repz
movl
pusha
jl
and
sbb
sbb
loope
ja
pushl
adc
jecxz
or
negb
push
mov
jl
add
ret
popf
mov
sub
mov
popf
push
imulb
sbb
adc
lds
jbe
loopne
sub
shll
stos
push
cmpsl
push
xlat
pop
push
inc
sub
out
pop
loop
sbb
dec
inc
pop
pushf
call
addr16
cltd
sbb
pop
and
sub
aas
fwait
sbb
xchg
faddp
movsb
mov
xchg
outsb
xchg
and
push
inc
add
in
mov
inc
pop
or
jg
out
mov
fisttpll
nop
mov
ja
mov
push
or
inc
adc
and
ds
sbb
wbinvd
out
iret
mov
ljmp
inc
inc
mov
xchg
or
mov
mov
scas
xor
out
jl
rcrl
push
push
dec
int
in
callw
or
je
xor
outsl
ret
rolb
out
mov
push
jns
les
js
mov
inc
loopne
pushf
xchg
pop
nop
stos
sbb
lahf
in
jp
cmp
mov
jge
xchg
es
in
in
arpl
jecxz
lods
xchg
cmp
pop
repz
inc
sub
inc
sbb
fsub
in
lods
pop
dec
xlat
in
mov
das
out
inc
rcr
mov
testl
and
jns
pop
xchg
pop
icebp
xor
xlat
pop
pushf
imul
inc
sub
cmp
insb
cwtl
icebp
mov
sbb
push
cmp
lret
sub
in
popa
adc
dec
or
and
int3
sbbb
fisttps
and
mov
push
xrelease
out
inc
addr16
jb
add
sbb
bswap
jle
xor
mov
cmp
mov
mov
mov
leave
fdivl
push
cmpsl
adc
bound
repz
sbb
sti
xchg
dec
jle
pop
jae
push
fcoms
test
or
lcall
dec
dec
adc
cmp
out
cmpsl
mov
les
lahf
mov
sbb
mov
stos
fisubrl
mov
rcrl
stos
adc
cmp
pushf
jp
jo
mov
lods
jo
xchg
pushf
push
mov
adcl
orb
push
push
add
inc
stc
lods
je
and
sbb
imul
insl
jne
in
leavew
fidivs
fcomp
jge
dec
ret
in
cmpsl
cmp
push
mov
sub
sbb
movsb
es
outsl
fstpl
jb
rclb
dec
cmp
jbe
add
push
xlat
sti
mov
pop
dec
sbb
popf
outsl
mov
ljmp
insl
sbb
mov
out
xchg
xchg
xchg
jne
das
cld
sti
fwait
mov
cmpsb
inc
pushf
pop
xor
mov
push
jmp
js
push
cmpsl
arpl
mov
jnp
mov
and
inc
adc
jne
jge
bound
mov
cs
in
inc
mov
lods
or
xor
fs
mov
outsb
js
fwait
push
fsincos
ljmp
add
mov
xorb
or
inc
pop
xchg
repnz
mov
scas
xchg
dec
sbb
mov
jp
cmc
inc
int3
and
hlt
outsl
fistpll
test
dec
ljmp
and
add
lds
push
xchg
adc
insb
or
add
insl
lret
push
push
or
stos
mov
mov
mov
xor
mov
sbb
outsl
sbb
divb
aaa
rcrl
adc
repnz
jns
loopne
mov
cmpsl
mov
push
dec
js
mov
jp
in
xchg
xor
adc
int3
mov
xor
jmp
scas
xchg
outsl
push
adc
lds
inc
lock
jge
sahf
movsl
dec
dec
inc
je
inc
pop
lret
adc
loop
in
lahf
mov
int
mov
mov
xlat
dec
push
ret
push
mov
je
push
clc
sub
int3
lcall
subb
jge
push
push
test
xchg
xchg
xor
adc
mov
int3
mov
mov
repnz
cmc
pop
insl
jne
add
add
fs
inc
adcl
call
dec
pop
fdivrs
jo
xchg
xchg
aam
in
xor
push
incb
inc
sub
ret
stc
pop
cmc
ja
pop
mov
jg
rcr
cs
pop
sub
orl
fadds
add
dec
outsb
cli
ror
xor
shlb
lods
pop
nop
push
fs
or
adc
lds
insb
pop
push
lods
and
xor
cmp
mov
cmpsb
push
fmulp
push
push
adc
stos
jo
xorb
and
mov
mov
shrb
addr16
out
adc
jg
fadds
cmpsl
mov
and
shlb
and
add
fucom
scas
decl
int
or
sub
mov
cltd
dec
fisubs
xchg
or
lahf
mov
pop
mov
pusha
add
idivb
stos
iret
jnp
dec
cmp
cmp
pushf
lea
pop
xchg
lret
mov
dec
