jge
add
mov
add
popf
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
das
adc
add
add
pusha
adc
add
add
mov
add
pushf
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
pop
adc
add
add
add
xchg
adc
add
adc
add
adc
add
adc
add
adc
add
add
or
mov
xor
or
jg
aaa
in
fcoms
repz
add
loop
fptan
gs
pop
cltd
inc
clc
imul
jne
into
pop
or
dec
lock
mov
adc
and
ficomps
shrb
cmp
mov
jle
inc
pop
les
cs
lcall
lcall
jnp
xchg
insl
mov
xchg
xchg
dec
adc
gs
stc
mov
repz
pop
lods
iret
je
pushfw
cld
icebp
test
cltd
and
dec
aas
sbb
sbb
push
dec
subb
rclb
jp
fstpt
fs
push
mov
add
inc
call
inc
inc
call
add
push
xor
call
or
xor
movzbl
inc
inc
lea
call
mov
lea
lea
inc
mov
mov
add
inc
mov
mov
inc
sub
movzwl
call
imul
add
movzbl
mov
mov
call
lea
sub
call
sub
mov
mov
xor
add
sub
mov
movzwl
pop
add
inc
add
or
pop
imul
mov
pop
dec
lea
and
dec
pop
mov
dec
inc
dec
sub
or
dec
dec
pop
mov
imul
pop
sub
add
mov
movsbl
or
call
dec
or
imul
dec
ret
inc
lea
push
mov
or
push
mov
dec
push
inc
dec
push
inc
push
inc
lea
mov
add
add
push
mov
ret
push
add
dec
mov
sub
lea
dec
push
lea
lea
push
mov
call
pop
ret
jmp
inc
xchg
mov
imul
dec
lea
xor
mov
mov
mov
movsbl
inc
lea
movsbl
dec
jne
mov
mov
add
lea
pop
inc
dec
pop
dec
sub
pop
mov
sub
mov
mov
lea
inc
dec
dec
lea
inc
mov
add
ret
push
dec
sub
add
xor
dec
mov
movzbl
add
push
push
push
push
add
movzwl
dec
push
dec
lea
lea
imul
mov
dec
sub
mov
movzbl
mov
dec
push
inc
inc
xor
movsbl
dec
push
lea
inc
push
lea
mov
pushl
xor
call
imul
add
add
add
add
inc
mov
mov
inc
pop
ret
add
mov
inc
inc
dec
mov
inc
mov
dec
inc
cmp
jb
add
mov
lea
inc
xor
dec
xor
movzwl
imul
pop
xor
imul
test
jbe
sub
mov
lea
mov
dec
movswl
dec
mov
sub
inc
inc
mov
add
add
imul
dec
inc
and
dec
sub
inc
mov
and
lea
mov
add
movzbl
add
inc
add
xor
or
and
movzwl
mov
mov
dec
lea
mov
sub
mov
mov
inc
mov
mov
sub
lea
mov
dec
sub
mov
dec
jne
dec
mov
dec
dec
dec
mov
inc
and
sub
or
dec
add
mov
or
or
inc
mov
inc
xor
xor
lea
mov
mov
inc
test
jbe
lea
mov
and
and
dec
dec
xor
add
add
imul
mov
inc
imul
mov
dec
inc
mov
mov
mov
imul
inc
dec
and
inc
sub
mov
add
mov
movzbl
movsbl
movswl
add
imul
imul
and
mov
add
mov
sub
inc
movzbl
add
mov
mov
inc
mov
mov
sub
and
movzbl
add
and
add
add
dec
and
sub
inc
movzbl
inc
jmp
push
call
dec
xor
sub
sub
xor
inc
mov
inc
dec
dec
inc
and
dec
xor
sub
dec
movzbl
inc
shl
lea
imul
xor
mov
mov
push
lea
add
dec
call
mov
pop
movsbl
imul
sub
imul
inc
mov
mov
inc
cmp
je
call
call
mov
iret
dec
dec
pop
mov
ret
push
lea
add
mov
lea
dec
push
inc
inc
push
imul
push
inc
push
mov
mov
push
movzwl
lea
inc
sub
sub
call
dec
push
mov
push
mov
pop
inc
inc
mov
imul
imul
mov
mov
mov
inc
mov
dec
dec
je
lea
add
mov
mov
xor
dec
mov
mov
dec
mov
add
mov
mov
mov
or
mov
mov
repnz
lea
add
add
add
jmp
add
or
inc
mov
mov
imul
imul
inc
inc
lea
and
xor
inc
inc
mov
imul
pop
pop
jmp
ret
push
dec
inc
add
sub
inc
mov
xor
lea
mov
and
sub
dec
mov
movsbl
dec
mov
dec
inc
dec
mov
dec
lea
dec
sub
mov
imul
pop
ret
sub
movswl
mov
mov
dec
mov
lea
inc
mov
sub
movzbl
mov
sub
lea
xor
lea
and
mov
dec
mov
inc
sub
mov
dec
mov
lea
dec
cmp
jb
lea
push
lea
lea
push
sub
inc
push
inc
mov
mov
mov
add
xor
mov
mov
xor
mov
mov
xor
lea
imul
push
dec
or
xor
add
mov
mov
mov
imul
add
movzbl
add
mov
add
add
mov
imul
add
dec
imul
movzbl
mov
add
add
inc
dec
add
inc
mov
imul
imul
dec
or
lea
inc
cmp
jb
mov
xor
sub
sub
mov
jmp
push
aas
cmp
cmp
hlt
stc
push
xlat
fldcw
inc
int
jns
cmp
mov
xor
mov
xchg
sti
or
mov
mov
lods
xrelease
and
movsb
xlat
push
fadds
jmp
mov
push
dec
leave
xor
and
lret
out
in
loop
or
ljmp
lods
sarl
pop
outsl
nop
cli
cmc
xchg
insl
int3
or
and
inc
lds
loopne
lret
imul
mov
shlb
call
movsb
jmp
or
add
out
stc
lret
adc
lods
hlt
push
mov
int
inc
jecxz
add
imul
xchg
outsl
mov
lahf
scas
sub
adc
cli
push
push
jo
xor
in
cmp
xchg
into
stc
pop
out
jecxz
sahf
sub
sbbl
mov
bound
sub
aam
mov
hlt
push
sbb
sub
and
inc
insb
push
cli
dec
cmpsb
ret
ljmp
repz
push
or
mov
cmp
xorb
das
jle
mov
xor
dec
push
bound
xlat
nop
psrlq
ret
test
adc
jecxz
inc
fdivr
fwait
aad
push
or
or
add
push
mov
cltd
jno
push
aam
or
iret
cmpsb
sbb
lcall
dec
pop
pop
jnp
das
js
pop
mov
cmp
in
das
or
push
test
xlat
iret
cmc
ficoml
add
cmc
fisttpl
in
xchg
cmc
jmp
in
out
and
pop
dec
jnp
or
xor
repz
cltd
xor
icebp
jb
mov
lret
jnp
bound
mov
fstps
movsb
adc
add
push
jne
adc
sub
imul
push
jg
cwtl
in
fistps
adc
adc
test
xlat
dec
movsb
popa
mov
sbb
inc
xor
into
mov
push
lds
xlat
push
ja
sub
push
mov
push
test
xchg
subb
push
adc
xchg
mov
mov
mov
mov
jno
jecxz
push
jno
fidivl
fistl
ret
mov
bound
sbb
mov
ja
loopne
ret
mov
fsubrp
addr16
pop
cmp
loop
mov
jo
ret
je
imul
rcr
addl
mov
jb
mov
or
inc
mov
or
pop
xchg
jmp
in
cli
imul
sub
jg
cmp
out
cmpsl
pop
jmp
sbb
lret
xchg
into
push
or
add
or
arpl
dec
je
push
push
push
adc
testl
fxch
loope
pop
or
mov
mov
jbe
scas
orl
das
fcmovnu
cli
xlat
mov
lods
jno
js
inc
adc
icebp
int3
jb
lea
loopne
mov
adc
push
jne
dec
pop
lds
xchg
test
lcall
xchg
adc
cwtl
orb
mov
mov
sbb
pusha
xlat
xchg
hlt
pop
and
fiadds
lahf
clac
push
xor
jne
and
add
sub
jmp
cmp
pop
ds
xchg
fsubr
pop
fsubl
outsl
mov
xchg
pop
test
test
inc
xchg
das
mov
xchg
pushf
int
out
sbb
and
std
jmp
int
push
jp
cmp
cwtl
jge
mov
leave
push
icebp
addr16
xor
cmp
xor
cwtl
loopne
mov
inc
fldt
mov
xchg
adc
push
ds
mov
arpl
in
mov
mov
incb
xor
and
pop
in
cmp
ficoms
mov
jp
adc
nop
insl
add
jecxz
lea
aas
sbbb
inc
cmc
xor
jmp
push
or
cli
int3
xor
push
xor
into
push
ret
pop
or
call
je
packuswb
mov
cmp
std
rcl
mov
test
out
fcomp
repz
push
sti
pop
imul
shlb
lock
clc
dec
ficoml
mov
aaa
outsb
sahf
xchg
andl
in
xor
aam
push
aam
adc
cmp
iret
lcall
sti
icebp
repnz
and
mov
fldl2t
lods
loope
xor
mov
fnsave
xchg
dec
jecxz
test
mov
dec
outsb
jg
stos
mov
add
inc
mov
pop
cltd
sbbl
pop
in
inc
mov
call
pushf
dec
out
test
aam
push
shl
stc
jns
cmp
addr16
cld
push
cmpl
fdivrs
mov
jecxz
jecxz
jno
iret
push
adc
mov
mov
xlat
and
fcom
fs
dec
sbb
mov
nop
jae
js
cltd
xchg
hlt
test
or
or
cmp
ret
mov
push
push
jmp
xor
int
jle
jecxz
push
movsl
add
pop
mov
int3
add
adc
shrb
mull
xchg
or
out
cli
stos
fisttps
pop
adc
mov
popf
jo
data16
fdivl
pusha
xorb
repz
cli
jg
out
mov
rorb
dec
dec
mov
and
mov
and
inc
pushf
pop
sbb
sub
insl
es
ret
lcall
rolb
jb
inc
outsl
ja
mov
sbb
cmc
lods
andl
or
notb
sub
push
rol
push
jecxz
test
mov
push
or
jae
fisubrl
cmp
xchg
push
into
jno
jo
or
inc
enter
cmp
notl
xchg
call
mov
pop
push
loope
in
sub
fsubp
sub
and
fildl
icebp
xor
lea
pusha
jae
mov
scas
add
mov
pop
jecxz
inc
mov
jp
arpl
jno
lock
mov
mov
pop
cs
nop
cmpsb
sub
std
adc
arpl
fidivs
out
sub
mov
cmpsl
mov
mov
adc
bound
addb
inc
test
stos
sub
int
popa
lret
inc
inc
out
sub
mov
test
mov
jecxz
xchg
js
fidivl
push
jbe
sbb
push
adc
mov
aas
push
std
addb
push
sub
out
call
inc
mov
subb
hlt
ss
outsl
int3
jge
fdivrl
gs
push
aas
rcrl
popa
inc
mov
je
lret
std
nop
cmpsb
xchg
subl
lds
int3
mov
lods
repz
cld
cld
ss
call
out
lea
jp
mov
cwtl
addr16
xor
inc
pop
lret
mov
mov
bnd
mov
popa
inc
pop
push
dec
inc
jo
pop
pushf
cmp
les
mov
mov
pop
fnstenv
arpl
push
jg
hlt
dec
dec
pop
cmp
xor
pop
jo
cmp
mov
add
mov
lret
xchg
pop
pop
and
cmpsb
lods
push
cmp
insb
dec
in
outsb
dec
jecxz
add
mov
or
data16
jmp
sbb
hlt
sbbl
cmp
pushf
and
ret
call
push
lret
dec
les
push
fnstsw
scas
pop
push
push
xor
mov
inc
and
mov
add
jae
bound
sub
movsl
bound
pop
add
insl
lret
sahf
arpl
mov
hlt
stc
rcll
cmpsl
cmpsl
loop
xchg
dec
cmpsl
mov
jle
adc
cmp
ds
adc
mov
ret
jae
imull
push
jbe
rorb
xor
or
sub
mov
not
jbe
or
jne
push
je
call
adc
inc
mov
cmp
xor
ss
ret
je
pop
aad
lods
insb
pop
ret
pop
dec
lds
xchg
jne
ljmp
pop
sbb
pop
loopne
cld
and
cmp
dec
rcrl
dec
rcrb
shl
lret
js
in
sub
lret
mov
daa
inc
repnz
cli
dec
out
push
hlt
sbb
or
xor
mov
push
hlt
lahf
shrl
clc
call
mov
mov
add
inc
call
sub
into
jle
out
pop
add
stos
popf
mov
add
sub
mov
test
add
ret
push
es
xchg
lock
cmp
inc
ret
push
pop
pop
dec
inc
dec
lea
push
mov
sub
frndint
cmc
ret
test
push
inc
lahf
gs
movsl
clc
pop
cld
ficoms
clc
xchg
inc
in
aaa
cmp
fs
dec
push
int
mov
mov
inc
loopne
xor
sti
push
jnp
negl
cmpsl
clc
popf
push
adc
dec
shlb
test
mov
xor
popf
faddp
mov
arpl
fdecstp
rcrb
push
jl
mov
jnp
enter
test
xor
lret
or
sbb
lcall
and
cwtl
out
rolb
jecxz
sub
loope
lcall
mov
pop
loopne
or
pop
cwtl
cld
cs
and
cwtl
iret
inc
fdivr
imul
jo
fucompp
and
jae
sbb
pop
cmp
xchg
sahf
xor
ret
adc
or
pop
mov
fldl
arpl
clc
stc
cmp
aaa
in
sub
nop
orb
ret
pop
test
mov
mov
outsb
push
fiadds
testl
push
popf
sbb
subb
inc
mov
mov
adc
mov
test
rolb
add
mov
jne
and
sub
cmc
pop
cmp
xchg
enter
xor
aad
cmpsl
adc
shlb
mov
lret
jecxz
cmp
into
loope
or
daa
aas
in
sub
mov
add
imul
add
movsl
mov
push
cli
jmp
movsb
nop
or
or
test
mov
and
jb
and
cli
pop
push
mov
rol
das
pop
in
popa
xor
into
cmp
inc
in
sbb
orl
imul
popa
or
or
add
pop
cmp
hlt
sub
xlat
add
add
jle
mov
fiaddl
dec
cmp
mov
dec
pop
lret
ret
mov
adc
dec
jno
cld
idivl
push
nop
mov
test
aad
cmpsl
imul
pop
imul
or
push
std
and
loope
call
out
sbb
inc
push
test
sahf
or
push
jbe
inc
jae
push
enter
lcall
sarb
inc
xchg
pop
out
pop
mov
leave
sub
mov
mov
fistl
mull
fs
xorl
sarl
sbbb
or
fisttpl
gs
rorl
mov
inc
jge
mov
cmpsl
leave
mov
mov
int3
testb
cs
pop
inc
fidivrs
inc
sub
stos
ss
xlat
adc
data16
pusha
dec
loopne
mov
ds
jbe
repnz
dec
push
mov
insb
mov
sub
push
mov
xor
sub
sar
jne
adc
out
sbb
ds
addr16
push
in
cwtl
sub
sub
cmp
jmp
rorl
aam
cmp
repz
rolb
inc
je
add
dec
lods
sub
xchg
adc
add
or
xor
xchg
sub
pop
and
ja
jbe
inc
adc
lret
mov
xor
push
mov
or
dec
in
stos
mov
rcrl
mov
cwtl
dec
xchg
es
test
dec
cmp
scas
mov
xchg
lods
mov
addl
movsl
es
cmp
lret
arpl
pop
in
xchg
mov
pop
call
mov
mov
cmp
cmp
fisttps
or
xorb
mov
daa
mov
call
notb
adc
sub
mov
stc
ss
cwtl
xor
lods
daa
dec
inc
and
aad
jne
repz
loope
sarl
incl
push
lret
mov
movsl
xchg
inc
shlb
sub
icebp
xlat
cmpsb
mov
test
test
adc
cmp
int3
data16
mov
mov
ja
lock
mov
pop
mov
jns
fs
xchg
scas
into
push
shrb
movsl
sbb
sub
into
fabs
in
ret
dec
xchg
stos
cmc
dec
and
sub
in
aam
repz
shlb
mov
adc
pop
add
or
in
inc
and
sbb
loopne
dec
aad
mov
int3
nop
pop
mov
fistpll
push
out
outsb
xchg
push
xchg
mov
into
add
sub
lcall
loope
push
add
dec
sbb
adcl
xor
ror
adc
into
cs
popa
arpl
lcall
xorb
cs
std
or
push
cmp
add
mov
ret
aas
enter
iret
push
rclb
rol
data16
icebp
loop
or
int
push
aas
out
xor
pop
push
scas
rcll
mov
subl
xchg
and
inc
outsl
notl
popf
popa
push
or
leave
xchg
and
cmp
push
outsb
aam
pushf
bound
adc
sahf
popa
or
ret
xor
stos
pop
repz
dec
pop
mov
mov
popf
dec
ds
ljmp
ja
jg
adc
sti
adc
xor
inc
ja
adc
test
sub
lods
cwtl
sti
dec
push
pop
dec
in
clc
adc
and
jo
rcll
addr16
insb
push
cltd
and
dec
lahf
testb
push
stos
mov
push
push
and
push
popf
pop
fs
cmp
aad
arpl
cmovns
std
cmp
pop
lahf
inc
movsb
adc
ljmp
jae
and
jne
fidivl
fdivr
mov
cmpsl
mov
push
push
adc
mov
dec
enter
fbstp
xor
xor
xchg
adc
mov
std
fwait
inc
sahf
adc
mov
jmp
test
cmpsl
fstpt
gs
inc
jnp
push
sub
sahf
xor
push
es
jg
stc
pushf
fwait
cltd
add
mov
stos
push
ret
sbb
lock
in
xchg
inc
jl
repnz
ljmp
sub
lahf
xor
cwtl
addr16
jns
and
imul
cwtl
fdecstp
mov
int
cmp
imul
bound
imulb
lret
ljmp
jp
sbb
mov
xchg
push
test
std
loop
daa
ret
es
xchg
or
mov
adc
adc
movsb
scas
mov
xor
jge
and
ljmp
sub
stos
cmp
mov
sub
xchg
movsl
mov
or
or
xchg
shll
dec
lods
fs
fidivl
call
xchg
or
jns
push
lret
outsb
fisubrl
repz
pop
cwtl
repz
cmp
xor
dec
mov
call
fmuls
push
jg
xor
out
scas
xlat
fwait
mov
lds
popa
shr
add
out
push
sbb
in
jmp
lret
cmp
jns
pop
addb
into
push
xchg
adc
hlt
sbb
cmp
lret
in
cmpsl
jne
stc
imul
add
mov
push
popf
iret
movsb
jbe
ja
dec
push
negb
inc
adc
push
movl
cmpsb
xchg
aaa
xor
mov
dec
cmpsl
adc
imul
popf
test
leave
iret
cli
shll
vcvtsi2ss
mov
enter
mov
cli
mov
inc
cmc
cmp
cmp
clc
mov
sbb
add
dec
mov
jg
jae
jg
sahf
mov
addr16
sub
cmc
mov
sbb
sbb
int3
xchg
nop
sbb
adc
fsubs
jae
mov
loop
popf
out
mov
in
cli
mov
popa
jns
push
inc
push
sub
pop
lods
ss
push
cltd
mov
gs
jne
fs
sbbl
xchg
sbb
shll
aad
add
mov
push
and
mov
or
sbb
mov
add
adc
xchg
push
mov
popf
ds
mov
mov
frstor
scas
push
daa
pop
jp,pn
ret
sarb
test
push
cmp
cltd
roll
subl
mov
xchg
arpl
inc
into
ds
push
in
inc
stos
fisttps
inc
push
sub
loop
sahf
and
shlb
mov
mov
or
outsb
imul
cmpb
xor
fisubl
mov
test
xor
xchg
ss
cld
mov
aas
lods
in
clc
pop
xor
adcl
sbb
adcb
add
scas
stc
pop
call
icebp
aas
and
pop
dec
aad
mov
sbb
pop
jne
jo
add
mov
test
and
xchg
mov
mov
lods
jl
repz
mov
cmp
test
ja
inc
arpl
imul
shrb
push
ss
mov
mov
fidivrs
xchg
xor
movsb
mov
icebp
call
arpl
lahf
jne
push
stos
push
lcall
push
lret
and
rcr
jne
sbbl
fsub
lds
or
in
dec
push
shll
ljmp
pop
xor
fldcw
pop
outsb
cld
lret
mov
in
lret
pop
fldenv
cs
add
in
pushf
scas
lret
inc
cld
and
lods
or
mov
mov
lea
out
pop
inc
pop
jge
sti
mov
and
call
mov
cmc
out
call
or
push
mov
ljmp
rol
mov
xorl
pop
push
lahf
pop
cmc
fs
fcmovb
or
loopne
in
add
repz
bound
loopne
inc
dec
inc
push
test
inc
pop
mov
clc
jno
into
imul
leave
mov
test
insl
xor
mov
and
pusha
loope
or
xchg
leave
inc
subb
xlat
pop
sti
mov
fmul
pop
xchg
xchg
lret
ja
jmp
lret
stos
cs
mov
test
repnz
mov
dec
movsb
sub
sub
cmp
loop
cmp
hlt
rol
inc
xchg
sub
inc
dec
inc
out
stc
push
loope
fwait
int3
mov
loope
fdiv
jg
adc
jl
sub
in
mov
inc
add
cmp
out
xchg
sub
fld
push
pop
das
je
in
aad
dec
xchg
call
in
loopne
push
mov
dec
xchg
mov
cltd
jne
mov
sbb
push
rcrb
jo
movsb
or
jle
push
stc
mov
adc
push
jmp
inc
mov
and
lcall
cmp
mov
push
jnp,pn
fwait
pop
xor
adc
mov
mov
pop
cmp
es
xor
test
inc
inc
mov
in
dec
loope
fistpl
int3
lret
or
popa
push
ds
mov
ret
loopne
mov
scas
fxch
leave
rclb
imul
pop
rorl
xchg
aad
out
mov
mov
jl
adc
dec
xchg
mov
in
jnp
inc
call
mov
push
ret
pop
cmc
lret
mov
pushf
cmc
and
mov
push
pop
pop
push
popf
pop
jle
movsl
push
cmpsb
mov
push
icebp
sbb
dec
movsb
test
adc
call
subl
rolb
das
mov
ljmp
and
rorl
jmp
in
and
mov
pop
mov
pushf
shrb
jp
xor
aam
sbb
test
sbb
fnstenv
fsubs
testl
movsb
dec
push
test
mov
mov
sub
aaa
xlat
dec
out
mov
and
dec
add
xor
aaa
pop
ret
inc
scas
call
push
dec
mov
mov
sti
cmpsb
mov
add
jp
push
mov
repnz
mov
push
mov
add
cmp
clc
test
sub
cmp
addr16
adc
repnz
fimuls
in
inc
xchg
decl
imulb
and
ja
mov
pop
shl
je
maxps
mov
pop
push
in
std
mov
mov
gs
sbb
lea
pop
fs
std
into
mov
push
pop
mov
push
dec
into
jae
cmp
xchg
xchg
leave
test
xchg
cld
or
push
out
inc
cmp
inc
sbb
cs
cmc
xchg
sub
aam
clc
sahf
cli
clc
test
icebp
in
lock
sbb
xor
xchg
mov
mov
pop
enter
je
ss
stc
mov
sub
mov
fmulp
shlb
fistpll
lods
into
push
xlat
sub
push
and
inc
xchg
fwait
dec
pop
adc
enter
scas
jle
xchg
inc
scas
cmc
shl
mov
sub
pop
sub
ja
jmp
out
icebp
sti
xchg
pop
mov
cmp
setno
loop
mov
call
fsub
sub
push
cli
outsl
xchg
jle
add
sbb
mov
mov
xlat
fisttpl
mov
out
enter
es
sub
mov
cmp
push
push
shrb
add
sbb
pop
adc
fsubr
out
xor
mov
adc
mov
out
xchg
ss
xchg
call
sar
insb
push
jge
adc
cwtl
test
dec
pusha
sbb
mov
cmc
xor
mov
imul
xor
inc
xor
mov
or
test
mov
fstpl
aad
movsl
addr16
call
and
popf
inc
dec
mov
jne
or
pushf
jecxz
imul
xlat
adc
jbe
fistpl
test
mov
pop
iret
mov
pop
mov
cld
dec
jae
mov
xchg
push
push
or
xor
movsl
cmp
out
xor
jnp
int
lds
mov
ret
add
decb
test
sub
cmp
adc
xchg
mov
mov
prefetch
cmp
jmp
adc
subl
das
xchg
scas
outsl
pop
test
push
jecxz
jb
clc
sbb
in
dec
cmp
fwait
adc
pop
fldl
ret
loope
inc
dec
inc
dec
adcl
imul
fs
stos
or
ficompl
adc
ficoml
mov
hlt
fidivrl
cltd
push
in
xor
inc
sbb
stos
fisubl
inc
flds
aam
aaa
add
jnp
xor
xchg
cmp
dec
in
notl
das
inc
push
test
gs
test
test
inc
mov
fcoms
xchg
leave
push
out
stos
mov
jnp
sarl
fmuls
fnstsw
xorb
outsl
in
xchg
lret
cld
nop
loopne
icebp
cli
xchg
cmp
pop
fwait
jp
and
inc
gs
jp
fucomi
lods
push
cmc
dec
in
iret
roll
arpl
xchg
pop
insb
fs
mov
push
add
xchg
jne
scas
shrb
mov
mov
ljmp
mov
lea
sub
xchg
xor
fdivr
cmp
pop
in
cmp
xor
ss
aad
fdivr
xor
insb
ds
ror
fwait
or
aaa
pop
je
in
push
adc
mov
pop
js
cmp
or
insl
mov
pop
inc
dec
mov
in
mov
ds
aam
xchg
add
sub
into
sbb
xor
fdiv
cli
sbb
sbbb
inc
xchg
adc
shr
add
dec
out
cmpsb
cmp
xchg
pop
or
aaa
or
mov
in
inc
sub
adc
shll
jb
push
lods
cld
fprem1
xlat
lods
jecxz
sub
ror
or
fwait
lods
popf
mov
adc
lahf
inc
mov
lret
add
pusha
fiadds
jne
jb
cmpsl
and
lock
repz
ss
sub
xchg
in
adc
inc
adc
in
ret
sbb
aam
or
push
cmp
daa
xchg
jne
push
sbb
lods
adc
mov
clc
mov
les
cmp
jecxz
add
xchg
sti
mov
insb
dec
lret
mov
sbb
mov
popf
push
jb
xchg
mov
xor
scas
stos
xor
xor
in
mov
add
fists
outsb
jg
rcrl
mov
hlt
mov
xor
out
sti
movsb
mov
in
loopne
mov
mov
jo
mov
shll
out
xchg
into
push
push
push
fildl
xchg
mov
das
push
or
hlt
loop
iret
ret
xor
loope
outsb
mov
inc
popa
or
xlat
aad
in
adc
fiaddl
popa
sti
inc
daa
outsb
add
sbb
adc
je
sbb
pop
sbb
pop
xchg
jp
outsb
scas
int
lds
sarb
push
lock
xchg
fisubrs
cwtl
sbb
inc
and
fisttps
lret
add
push
mov
dec
jge
and
mov
leave
mov
faddl
test
adc
out
sbb
sbb
stos
testl
sar
std
xlat
fldl
in
pusha
sbb
pop
faddl
mov
pop
mov
icebp
in
dec
in
jnp
fsubrs
rolb
mov
addr16
push
in
add
push
push
jne
cltd
cwtl
stos
icebp
pop
outsl
push
stos
dec
inc
and
lret
or
and
orb
ret
inc
push
into
fnstcw
push
aam
shrl
mov
addr16
sbb
mov
xlat
arpl
into
mov
aas
push
sub
hlt
xchg
add
mov
ja
adc
mov
mov
mov
pop
mov
jnp
mov
mov
xor
push
and
out
mov
or
xchg
les
cmc
std
idivb
gs
jg
fistpll
lods
fcmovb
gs
cmp
and
inc
adc
in
mov
cs
in
cmovns
adc
stc
jl
add
sbb
lds
pop
sbb
push
icebp
and
dec
push
inc
lock
daa
lea
push
lret
inc
jnp
fs
xchg
ficompl
adc
int3
shl
push
ljmp
pop
sbb
scas
rcrl
and
inc
push
sarl
jg
pop
ss
leave
rcl
mov
cli
xchg
loope
fstenv
inc
lret
jl
icebp
mov
lahf
mov
sbb
movsl
jl
out
pop
jge
ret
pop
jge
cmp
in
mov
ret
pop
xchg
push
pop
movzwl
popw
outsb
addr16
cmp
loop
sbbb
fldenv
ljmp
add
lods
dec
out
inc
mov
jbe
push
sbbb
movsl
pop
dec
or
dec
in
jge
mov
cmp
pop
jbe
adc
xchg
loopne
outsb
or
inc
jmp
inc
sahf
shlb
outsb
jg
cwtl
fisubrl
xor
scas
jge
push
cmp
dec
ljmp
daa
imul
pop
push
fists
rorl
mov
jmp
push
push
adc
call
lret
xor
mov
int3
mov
clc
aas
in
mov
stos
sbb
loopne
in
mov
imul
and
les
fimull
int3
std
iret
xlat
adc
stos
dec
sahf
ss
call
jns
adc
ret
fisubl
inc
mov
incb
dec
mov
sub
jmp
imul
mov
xchg
lret
mov
jg
jae
enter
dec
inc
stos
test
aad
call
add
in
je
loopne
pop
pop
sbb
lcall
jno
fstpl
mov
jl
les
pop
cli
sbbl
mov
jecxz
jmp
test
sub
imul
insb
jg
popf
or
xchg
outsl
inc
fldcw
repnz
les
pusha
stc
arpl
jne
jno
roll
add
nop
into
loopne
xor
loope
aam
cmpsl
xor
and
icebp
adc
decl
fsubs
push
push
cmp
jg
jb
pop
cld
pop
lods
test
and
sub
test
adc
pop
inc
sub
mov
sub
mov
call
xlat
fabs
push
add
xlat
fisubs
shrl
icebp
cld
insb
ja
into
dec
pusha
stc
inc
stc
les
inc
outsb
out
xchg
aas
ss
dec
or
jecxz
aad
ds
mov
fisttps
or
mov
arpl
push
cmpsl
sub
mov
movsl
loop
mov
pushl
lods
in
xor
fdivrl
shrb
hlt
xor
dec
in
imul
mov
pop
ja
leave
push
or
xchg
xchg
loopne
or
movsl
mov
and
sub
and
push
push
fbld
test
insb
mov
testb
sub
xor
fildl
or
pop
sbb
mov
xor
dec
fldenv
mov
pop
cltd
mov
jb
in
into
popa
ss
stos
fcmovne
lods
cld
mov
mov
cmp
pop
incb
imul
mov
xchg
sub
rcrb
sbb
adc
add
mov
lock
or
pop
mov
lcall
out
nop
loopne
xor
sti
pop
push
daa
popa
roll
add
xlat
in
xor
test
lods
orl
adcb
pop
jbe
sub
push
ror
jle
sub
aam
int3
jmp
mov
leave
push
outsb
les
or
xlat
addr16
add
mov
mov
push
push
pop
adc
push
icebp
fisubrl
adc
std
movsl
repz
mov
loop
mov
inc
das
jnp
enter
sbb
or
rcrb
imul
movsb
sub
add
mov
popa
fcoms
mov
cli
cli
fsubp
cmpsl
bound
cwtl
hlt
adc
sub
push
inc
push
mov
ja
je
mov
aas
jno
or
ret
pusha
add
insb
insb
test
shrl
inc
movsl
mov
cmc
push
jl
xor
and
ret
sbb
cmp
sbb
std
dec
push
dec
test
jb
xchg
add
sbb
lcall
scas
adc
lea
adc
repnz
out
cld
push
mov
in
loopne
jp
mov
fs
mov
adc
cmp
mov
loop
mov
cs
mov
js
pop
push
outsb
jnp
pop
push
loop
insl
in
add
or
stos
lcall
stos
inc
outsl
xchg
xchg
pop
cld
mov
mov
jp
adc
fisubrs
lds
cmpsb
push
fdiv
xchg
nop
xor
mov
adc
iret
jns
inc
scas
dec
cwtl
adc
pushf
cltd
stos
pusha
hlt
aad
sub
dec
mov
push
in
in
int3
sub
sub
filds
add
fcomi
cmp
movsb
mov
xor
das
mov
and
mov
or
and
jge
dec
in
inc
sub
push
adc
clc
fcmovnbe
inc
std
sub
push
bnd
mov
inc
into
add
xor
xor
insl
add
movsb
or
jp
cld
jg
sub
mov
cli
pop
ss
cltd
inc
aam
mov
bsr
mov
mov
or
popf
lea
jg
add
jp
inc
xchg
mov
mov
es
and
push
adc
pop
jl
xchg
sub
xor
bound
loop
adc
push
sub
sbb
mov
stos
lods
out
lcall
jge
mov
cltd
dec
mov
scas
sub
cmpl
sub
notb
pop
push
pop
scas
and
adc
fidivs
mov
jl
or
cmp
aad
xchg
xlat
ret
jb
mov
xor
fcmove
pop
cmp
int
out
test
test
arpl
shrl
je
sbb
dec
sub
jb
stos
les
test
pusha
cmp
push
sbb
cld
cmp
lods
jg
ror
lods
nop
repnz
subb
jne
cmp
leave
jno
call
jo
sub
leave
adc
testl
and
outsl
stc
test
dec
fwait
lahf
pop
cbtw
cmpsl
pusha
js
push
cmpl
lds
mov
icebp
jne
push
pushl
adc
ficomps
test
push
test
test
push
sub
repz
in
push
clc
movsl
cmp
cmp
out
lds
mov
mov
push
cmpsl
mov
mov
ret
pop
jb
lods
push
mov
dec
orl
pusha
mov
dec
cmp
ds
lods
xchg
faddl
jge
call
pop
adc
shrl
push
shlb
push
add
loopne
pop
or
repnz
scas
rclb
xor
flds
pop
sub
sub
outsl
cmp
mov
outsb
push
movsb
adc
mov
inc
mov
mov
std
mov
xchg
push
shlb
and
bound
lock
jb
lea
inc
inc
out
xor
popa
push
orb
aaa
sub
pop
sar
push
mov
fs
dec
cmp
ds
aad
lea
rcrl
dec
xor
push
out
jne
mov
mov
xchg
cwtl
test
adc
ss
pop
dec
push
mov
pop
fs
lock
cmpsb
mov
sub
cmp
cwtl
push
dec
insl
mov
adc
sub
pop
xchg
cmpsl
clc
pop
int
sub
push
cmp
adc
sub
insl
mov
mov
dec
daa
mov
mov
vcomiss
mov
push
xor
ret
pop
ljmp
sti
sub
and
repnz
js
jle
pop
int
or
adc
cmp
sbb
bound
add
push
stos
in
ljmp
pushf
imul
push
ss
and
mov
xchg
shr
cmp
js
sti
lahf
test
pop
rcl
push
mov
mov
jp
xor
cmovg
lock
gs
jnp
push
xor
push
iret
rorl
fdivl
xor
push
adc
cmpsl
sbb
pop
cmp
mov
pop
icebp
add
sub
jecxz
jge
pop
movsl
mov
cmp
in
idivb
fidivrl
adc
or
jno
jecxz
lods
fcomp
cmp
inc
push
or
dec
mov
xchg
jno
mov
aaa
iret
mov
push
cmp
dec
scas
inc
imul
mov
dec
pop
std
jge
sub
arpl
mov
add
adc
stc
mov
cs
mov
adc
jecxz
push
cmpsb
xlat
test
loop
scas
push
shll
add
popa
out
stos
mov
inc
aad
mov
pop
cltd
mov
mov
and
or
insl
dec
ret
jnp
jmp
test
sub
pop
lret
imul
daa
push
and
pop
sub
ljmp
nop
sub
push
pop
xchg
pop
push
and
xchg
sahf
sahf
inc
mov
sar
xlat
movsb
inc
xor
clc
sub
lahf
pop
mov
jne
and
setp
stc
xchg
sub
stc
aam
xor
clc
push
dec
test
jp
xlat
ja
shrb
aas
fmul
push
mov
xchg
mov
arpl
xchg
push
rorl
inc
or
jbe
pop
sub
mov
and
in
andb
cmp
shrl
std
adc
ret
lahf
mov
push
insl
jns
jns
fimull
or
fwait
arpl
push
addr16
mov
imul
pop
nop
mov
cmpsb
repnz
into
push
clc
push
lcall
popf
mov
xchg
xor
mov
cmpb
cli
andl
out
mov
jbe
cmp
in
sub
push
mov
inc
mov
mov
pop
push
mov
push
pop
push
xchg
int
leave
pop
xchg
mov
mov
inc
pop
mov
clc
popf
sub
add
adc
pop
adc
sahf
in
push
pop
roll
jno
sbb
enter
aam
icebp
hlt
mov
pop
daa
pop
call
push
imul
sbb
out
push
xchg
pop
fildl
sbb
dec
lahf
lds
and
xchg
lcall
push
leave
mul
lret
sub
push
or
ja
movsb
nop
das
mov
cltd
push
rcr
push
fcoms
sub
fwait
cli
addl
inc
xor
sarl
mov
xor
cld
es
shl
xchg
push
and
push
sub
mov
faddl
in
or
popf
sub
xchg
js
stos
ja
mov
dec
movsl
loopne
loopne
jns
loop
adc
fwait
sbb
or
gs
push
sbb
adc
sbb
aaa
shl
push
push
repz
jp
je
mov
pop
push
or
sbb
jg
repz
mov
lcall
test
inc
or
inc
fwait
lret
in
stos
in
push
jmp
ret
insl
inc
stos
in
aaa
test
mov
lods
xor
add
repnz
push
das
gs
and
adc
pusha
out
dec
mov
fisttpll
xchg
jl
xor
roll
xchg
pop
sbb
pop
jge
fimuls
shll
mov
xchg
and
out
adc
lcall
xlat
test
cs
movsb
xchg
jb
sub
adc
mov
popf
xchg
adc
arpl
test
arpl
push
leave
jle
and
adc
aas
lock
cmp
in
and
or
sub
and
push
mov
lret
mov
jg
or
push
insb
or
and
bound
xchg
fsubl
ret
pop
fstpt
inc
fsubrl
lret
aas
es
and
push
mov
jae
ja
fdiv
fwait
test
add
in
loop
mov
mov
jmp
push
out
shrb
mov
xchg
push
test
arpl
fiaddl
jns
inc
xor
sub
jo
cld
lock
sbb
dec
cmc
sti
in
andl
jnp
mov
cmp
pop
lcall
out
lods
sub
fidivrl
and
pusha
mov
cld
mov
or
xchg
scas
fsts
xor
pop
push
dec
push
dec
sti
outsl
and
adcb
cmp
fwait
jg
loope
mov
movl
arpl
jns
repnz
outsb
push
inc
pop
outsb
addr16
sbb
leave
cld
and
mov
mov
sub
stc
gs
loopne
addr16
jle
dec
lahf
into
push
xor
lahf
scas
jg
push
jmp
daa
adc
adc
cmp
xor
test
lock
sbb
and
outsb
ja
daa
push
and
outsl
fbld
cmp
testl
pop
mov
aam
scas
xchg
or
js
ds
and
insb
sub
setne
jno
negb
mov
add
shl
stos
lahf
mov
mov
mov
leave
cmp
stos
add
xchg
aaa
mov
shlb
xor
icebp
test
and
leave
mov
and
cmpb
loopne
adc
inc
popa
jbe
xchg
in
inc
cmp
in
jp
mov
fisubrl
mov
aam
or
call
lea
je
enter
dec
rcll
pop
inc
scas
pusha
mov
cmp
int
pop
sub
les
pop
pop
inc
addb
enter
adc
sub
decl
xor
or
shl
sub
nop
dec
add
rcll
xchg
pop
movsb
repz
adc
in
sbb
pop
ds
sub
inc
cmpsl
pop
mov
lea
or
sahf
mov
push
add
jecxz
add
lods
movsb
jne
jge
gs
shr
bound
mov
inc
cmp
xchg
sub
idiv
pop
xorl
roll
sub
out
or
cmp
inc
xor
xor
je
fcoms
dec
xchg
ret
sti
pop
xchg
in
dec
les
test
xor
adcb
in
xor
xchg
out
push
es
rolb
call
or
ret
sbb
lock
test
and
push
lods
jns
xchg
add
into
stc
das
mov
rcll
test
aad
push
sti
dec
data16
push
jno
xlat
mov
pop
add
jo
push
xor
jb
inc
mov
lret
insb
popw
pop
inc
pop
sub
sbb
push
pop
ljmp
or
aad
mov
jl
cmp
add
and
addb
lds
cmp
js
push
push
jle
leave
ror
dec
imul
pop
jl
mov
rorb
icebp
or
insb
jae
xor
fnsave
test
adc
xchg
mov
adc
inc
mov
clc
insb
inc
clc
mov
xchg
inc
ds
inc
movsl
lahf
push
sahf
aam
cmpsl
and
dec
test
ret
inc
jge
xchg
xchg
pop
push
xor
lcall
mov
scas
dec
nop
xlat
cld
cmp
shl
sub
call
sub
iret
rorl
dec
loop
scas
out
test
push
in
jns
repz
popa
cmp
arpl
clc
test
jg
pop
popa
push
hlt
jmp
addr16
cmpb
addb
stc
arpl
cmpl
xchg
sahf
xor
push
mov
xchg
in
movsl
push
sub
mov
push
jne
lods
outsl
lock
aam
push
fcoms
xchg
pop
shlb
mov
ss
sbb
xor
pop
sbb
mov
and
xor
mov
cmp
loop
xor
fcmovu
lcall
int
jp
rcl
inc
subl
push
sbb
in
and
test
xor
inc
mov
repnz
sbb
aad
scas
sub
dec
shr
xchg
call
lret
sbb
inc
out
push
pop
stos
dec
lret
mov
imul
jle
fcmovne
inc
cwtl
fldenv
jns
outsl
cvtps2pd
out
mov
push
xchg
rclb
dec
fildll
jmp
in
pushf
enter
popf
jp
test
cmp
adc
inc
sub
ja
in
iret
jmp
das
loope
xor
iret
imul
mov
jns
test
and
insb
cmpsb
rol
push
aad
and
lds
sbb
pop
imul
xchg
lret
cld
mov
aad
aad
cmp
call
mov
pop
ret
push
xchg
movsl
pop
pusha
mov
adc
gs
push
cli
sub
out
test
pop
cmpsb
nop
je
push
ljmp
mov
xchg
jmp
add
shlb
iret
or
mov
cmp
and
jle
sbb
insl
cmpsl
adcl
push
xor
adc
jnp
mov
inc
push
add
xchg
pop
call
fcomps
test
nop
mov
clc
sbb
xchg
hlt
sbb
jo
mov
pop
xchg
push
sbb
xlat
lods
or
out
pop
xchg
cwtl
cli
pop
jbe
cmpsl
std
cmp
mov
adc
cmp
xor
shll
pop
loopne
add
mov
es
adc
push
nop
in
pop
daa
lea
out
mov
lret
and
loopne
lods
push
gs
dec
mov
popf
sbbb
pop
push
sub
stos
and
insb
rcr
xchg
lcall
mov
popa
cmp
iret
push
mov
scas
iret
jae
cmpsb
test
mov
loope
lds
mov
and
inc
lock
xchg
mov
mov
adc
push
sub
xchg
lods
popa
pop
push
leave
push
cmp
jle
lock
sbb
scas
add
mov
ss
sahf
sbbb
jg
inc
or
jge
push
movsl
inc
adc
clc
jle
js
cmc
cld
ljmp
ds
and
xchg
fidivs
adc
mov
popf
mov
push
mov
ret
adc
stos
sub
xor
lods
jecxz
jle
out
lock
inc
loopne
push
cmp
flds
andl
mov
mov
sbb
inc
push
fdivrl
call
pop
ret
mov
mov
xlat
out
int3
jb
sbb
mov
mov
push
jbe
out
or
pop
icebp
xor
out
rcl
mov
push
int3
jbe
jns
pop
pop
scas
ret
fwait
idivb
pop
leave
adc
ret
arpl
sbb
into
out
or
sub
jp
fcmove
jge
in
pop
sub
test
mov
jmp
xor
or
test
mov
movsb
xchg
dec
test
push
adc
xchg
stos
xchg
jns
dec
jmp
or
out
shrl
cmp
pop
inc
les
out
cmp
adc
push
mov
jp
dec
cmp
jg
loop
jge
xor
movb
jae
cs
push
xchg
popf
adc
mov
pop
jae
imul
in
mov
dec
aas
or
inc
xor
push
cmpsl
rolb
xlat
sbb
movsl
and
mov
imul
out
stc
push
inc
jbe
mov
and
sub
fsubs
lods
outsl
addb
push
mov
stos
mov
loop
cs
xor
pusha
psubsw
aam
lahf
sti
cmp
ljmp
sub
imul
push
out
sbb
int3
or
pop
es
dec
sti
dec
xchg
ja
dec
jbe
aas
stos
or
popf
imul
rorl
dec
pop
subl
daa
mov
fdivrs
push
js
mov
orl
or
add
cmp
in
dec
sar
sub
orl
xchg
shr
fnstcw
mov
push
lcall
inc
jp
clc
and
out
rorb
mov
inc
add
fldenv
jp
dec
pop
insb
aam
mov
and
jne
inc
xchg
ds
sti
push
ret
sbb
mov
mov
dec
push
jmp
jno
testb
daa
xchg
imul
sbb
popa
shl
js
lcall
and
adc
test
dec
ret
mov
jb
xchg
push
adc
jno
dec
imul
fcompl
mov
inc
ret
lret
xchg
cmp
push
out
pop
iret
stc
inc
ds
push
fwait
in
into
dec
or
pop
dec
jae
in
repz
push
mov
out
jmp
pop
push
outsl
inc
sbb
mov
jmp
mov
jno
stos
insl
rclb
shrb
pop
loope
fcoms
aad
xchg
mov
jo
loop
stc
cltd
cld
inc
stc
out
daa
mov
int3
xchg
inc
xor
jp
mov
shlb
add
mov
cmp
xchg
fs
xchg
or
jg
shl
fsub
adc
xlat
add
sub
repnz
aam
xor
outsb
add
xor
mov
movsb
pop
push
and
or
add
cmp
sbb
push
sub
and
and
xor
inc
xlat
ficoml
lret
cli
push
adc
fsubrs
add
and
cmpsl
imul
push
outsb
pop
inc
mov
mov
dec
xorl
es
push
jmp
cmp
fdivrs
mov
mov
ja
and
and
pushf
lds
push
cmp
mov
or
nop
mov
scas
icebp
in
enter
je
mov
cwtl
arpl
fldl
xchg
mov
cmc
iret
bound
push
adc
aas
arpl
scas
outsb
ret
ret
and
inc
lret
xchg
pop
stc
mov
push
loopne
sub
ret
dec
jo
inc
mov
aad
sub
xchg
mov
int
mov
dec
int3
ljmp
adcb
dec
pop
mov
pushf
mov
mov
out
dec
mov
sbb
xchg
arpl
ret
cmp
stc
in
cmp
les
mov
mov
inc
pop
cld
xchg
ja
sti
test
and
inc
mov
mov
dec
jl
dec
sub
sahf
cld
orl
hlt
push
xor
rcrb
ja
and
or
rcrl
out
in
xchg
inc
dec
and
movsb
mov
mov
pop
push
dec
imul
mov
or
aaa
lods
aad
cwtl
mov
mov
test
aas
sbb
clc
cmpsb
das
pushf
sbb
add
cmp
dec
xor
movsb
xorb
mov
test
jo
mov
add
shlb
jmp
loop
cmp
lgs
add
mov
mov
or
dec
fidivs
add
add
pop
jg
cmp
ret
push
lods
push
cmp
jp
inc
add
aam
push
in
std
mov
testl
push
ljmp
jne
gs
pop
inc
mov
mov
push
cmc
outsl
bound
loope
sub
cmc
mov
loope
daa
es
cmp
fucom
cmp
jae
jg
shll
test
and
sahf
mov
sarl
jnp
cld
pop
test
push
or
in
outsb
adc
inc
xchg
or
rorl
or
jo
xchg
out
fs
xchg
inc
sub
xor
test
sahf
jmp
fcompl
ret
mov
dec
test
pop
hlt
fsubs
push
cmp
pusha
loop
lret
out
fistpll
push
popa
lods
cwtl
inc
cmpsl
xor
pop
pop
sahf
ss
into
mov
adc
jl
pop
push
loopne
test
cmovl
cltd
mov
rorb
mov
aas
mov
out
pushf
or
adc
lods
inc
mov
cmp
mov
out
out
mov
scas
out
inc
repz
lcall
inc
js
adc
jae
push
pop
std
jge
ficoms
fs
aaa
mov
or
pop
mov
gs
stc
cmpsb
repnz
jg
mov
adc
sahf
js
loope,pt
jno
jns
loope
xor
cmp
int
test
rcrl
xor
cwtl
push
in
cltd
mov
aam
pop
sbb
aaa
cmpb
dec
mov
sub
mov
lret
outsl
sub
movsb
sahf
into
inc
test
out
mov
insl
adc
std
out
psubsw
call
dec
xor
testb
xor
sub
and
xor
cwtl
loope
sub
push
cli
cmp
fldenv
sbb
imulb
ds
pop
pop
imul
fistpll
or
sarb
xor
cmpsl
or
and
jo
movsl
mov
call
pushf
mov
insl
pop
pop
mov
in
stos
add
lea
adc
lret
fistpll
data16
adc
sub
inc
xchg
clc
xchg
jne
leave
mov
faddl
clc
adcb
mov
add
cmp
add
lahf
add
push
test
out
or
cwtl
pop
xor
adc
mov
mov
mov
ljmp
pop
jmp
sbb
adc
ss
imul
mov
out
ret
popa
push
jne
jmp
and
push
mov
cmp
adc
mov
xchg
int
dec
xor
cmp
test
adc
jmp
adc
loopne
das
push
cmpsb
sbb
adc
xchg
mov
ja
aad
stos
ds
das
jl
xor
and
fsubl
push
insl
add
and
mov
inc
rcrl
sub
out
test
push
fnstsw
push
jg
pushl
push
push
out
scas
add
dec
mov
cmp
out
test
mov
push
xorl
test
fildll
mov
in
inc
push
mov
sahf
jp
mov
std
mov
dec
movsl
imul
pop
jle
in
cmp
cltd
mov
daa
add
test
icebp
lock
jecxz
lods
adc
push
push
sbb
lret
jp
inc
sbb
sub
mov
icebp
sub
insl
push
test
push
push
call
push
sar
testl
add
cmp
push
cmpsb
pop
jo
cmp
int
rclb
inc
nop
sub
inc
cmc
jo
mov
add
mov
push
sub
mov
push
jnp
stc
jno
cmpsl
push
rolb
aaa
fdivrs
es
lea
stc
leave
test
imul
je
inc
sbb
push
jne
cmp
ds
lds
push
xlat
inc
lods
inc
jp
in
sbb
sbb
sub
sbb
jnp
add
and
mov
mov
xor
xlat
pop
mov
cmp
mov
or
mov
mov
ja
jmp
leave
loopne
mov
fiadds
mov
mov
ja
xor
xorl
mov
pop
jno
xor
aam
nop
mov
mov
dec
jmp
mov
stc
add
xchg
mov
dec
pop
sha1msg2
mov
xchg
xor
push
mov
push
pop
leave
adc
sbb
xorps
aad
adc
dec
lods
cltd
mov
or
sub
ret
mov
incb
sbb
pusha
out
or
jns
pop
add
mov
mov
popa
xchg
jae
dec
outsl
je
sbb
dec
sahf
rcll
into
sub
or
push
sub
rolb
or
ljmp
and
sbb
cmp
cs
ret
push
cwtl
mov
insl
sub
mov
adc
push
mov
cmp
adc
dec
mov
jae
dec
mov
int3
push
and
sbb
leave
fs
mov
adc
lds
out
jne
nop
jmp
mov
push
repnz
jl
and
sub
lds
lahf
add
jbe
xor
daa
scas
loop
out
nop
or
std
mov
xor
ret
mov
movsl
mov
mov
mov
test
or
or
in
inc
call
xchg
jle
mov
rorl
pop
and
andl
cmpsb
test
adc
xchg
test
pop
or
xor
push
sahf
pop
and
fs
hlt
in
push
jge
cld
dec
js
inc
cmpsl
mov
xor
sarb
out
lret
mov
stc
or
xchg
inc
push
sbb
loope
cmp
sbb
xor
outsl
fdiv
mov
add
decb
fs
xor
adc
int3
xchg
xchg
push
mulb
pop
dec
push
push
int
repz
cmpsl
rcl
pop
js
xchg
jnp
out
insl
mov
jle
fnsave
add
pushf
int3
leave
cmp
push
in
stos
lds
xlat
shrb
sub
sub
aad
lcall
aas
mov
rorb
or
lods
fs
mov
movl
faddl
popa
mov
mov
leave
aas
loop
sub
imul
cli
dec
arpl
lret
xchg
mov
cmpsb
and
jg
filds
dec
cmp
jo
cs
xorl
imul
sbb
rorb
into
ja
jp
fwait
andb
dec
push
push
jl
pop
sbb
xor
shrb
xor
call
add
ficoml
clc
xor
test
adc
jp
pop
fcomps
cli
mov
cmp
int
jno
jo
adc
test
stos
adc
xor
outsb
movsb
std
or
flds
push
cmpsl
add
stos
jb
pop
push
mov
jl
pop
sub
xchg
adc
aam
jae
test
aas
fs
mov
aaa
sarb
test
stos
ds
rcl
jno
or
xchg
lret
xor
enter
push
leave
pop
fstpl
or
ljmp
sahf
cmpsl
sbb
idivl
push
sahf
add
fstl
fucomip
test
jae
or
and
sbb
xchg
mov
scas
fdivl
xor
mov
das
mov
jbe
cld
jecxz
push
lret
and
jbe
add
pop
sbb
sahf
jge
add
jo
jbe
sub
les
pop
jmp
cmp
je
or
inc
aad
pop
icebp
pop
shlb
cmp
jnp
pushf
cmc
mov
ljmp
mov
push
ret
test
cmp
or
mov
pop
sbb
cmp
out
addr16
int3
push
mov
mov
push
cmp
scas
mov
add
stos
sbb
fdivrl
or
push
sub
popf
arpl
paddusb
test
inc
aam
decl
popa
xchg
sbb
dec
sti
xchg
lods
xor
idivb
pop
rcl
mov
add
adc
leave
orl
je
push
ljmp
leave
dec
push
jo
fidivl
cs
dec
and
or
mov
and
cltd
mov
mov
xorl
jmp
ss
sub
gs
sbb
cmp
jns
hlt
sub
dec
mov
jl
push
adc
pop
pop
push
and
sub
jnp
and
cmp
std
mov
imul
mov
jmp
or
jns
pop
les
xor
clc
xchg
lods
fcoms
scas
push
hlt
and
insl
dec
or
xchg
sbb
imul
push
enter
fwait
int
jo
ret
cmp
fwait
inc
es
or
cmp
pop
push
inc
adc
repz
in
pop
dec
dec
int
sbb
hlt
push
cmpsl
addl
push
fldcw
sbb
pop
jecxz
in
das
or
inc
bound
test
or
ja
cmp
sub
in
js
inc
push
std
sbb
mov
adc
pop
xchg
lds
and
mov
pop
cmp
inc
leave
scas
cmpsb
fmul
scas
mov
mov
sarl
jnp
mov
outsl
pusha
add
xor
loopne
pop
xchg
mov
ret
lret
cs
mov
imul
pop
jne
and
dec
fistps
mov
and
clc
xchg
mov
imul
mov
js
inc
xor
repnz
adc
xor
sub
push
inc
xchg
pop
xchg
ret
cld
add
jbe
xor
xlat
mov
xor
add
mov
xchg
test
int3
jo
inc
ret
data16
xor
lret
mov
fwait
cmp
add
jnp
sub
xchg
stos
pop
jmp
dec
cmpsb
or
nop
xlat
fisttpll
inc
adc
mov
cmp
mov
push
dec
xor
push
and
add
xor
pop
push
pushf
xor
gs
push
pop
pop
jbe
orl
mov
sub
jno
and
bound
cld
stos
insl
test
inc
lods
pop
fistpll
rcrb
cmp
repnz
mov
fisubl
xchg
stos
icebp
test
push
push
xlat
push
mov
adc
int
inc
or
mov
das
and
test
scas
stos
jb
loop
push
inc
andb
popf
je
jbe
pop
and
leave
psllq
adc
pop
mov
mov
testb
xor
push
pop
sbb
pop
push
pop
sbb
mov
adc
loop
ret
jecxz
pop
je
cmc
fsubr
clc
pop
inc
mov
mov
jp
sub
nop
jbe
js
sbb
adc
aad
mov
gs
bound
fisttps
cmpsl
inc
andl
inc
mov
sub
adc
inc
or
inc
inc
inc
cs
repz
ljmp
arpl
jne
xor
fwait
add
cmpsl
lcall
dec
fsubrl
push
mov
push
loopne
adc
test
mov
lods
push
xlat
cltd
xor
and
push
ja
int
aad
xor
jl
mov
lods
in
push
sub
jo
fisubs
pop
das
inc
aaa
sub
or
fwait
negl
mov
mov
or
cwtl
in
xor
cmp
jo
popa
xchg
or
cli
mov
incb
inc
mov
jge
xor
insl
pop
into
push
mov
movsl
mov
rol
or
cltd
xor
mov
xor
mov
add
jecxz
hlt
and
sub
cs
enter
cmp
cmp
mov
jg
xorb
in
fistpll
cwtl
mov
inc
adc
push
movsl
pop
sahf
test
mov
ror
cmp
pop
int3
clc
scas
lret
movsb
push
imull
mov
push
dec
push
aam
sub
imul
push
ja
push
xchg
pop
inc
shl
mov
bound
cmp
icebp
mov
sbb
lods
inc
mov
pop
rcrl
xlat
pushf
or
fcmovu
mov
jnp
mov
pop
mov
mov
daa
divl
clc
setns
mov
pop
lods
push
ds
xchg
mov
cmpsl
and
and
test
outsb
cmpsb
mov
cmp
scas
or
adc
xchg
push
aam
or
mov
iret
pushf
inc
les
mov
mov
or
pop
xor
sbb
pop
ja
adc
dec
mov
add
xchg
mov
cmp
dec
sbb
adc
inc
push
jo
ret
arpl
lret
mov
repz
sahf
loope
fstpl
mov
cltd
cmp
jae
test
in
lock
testb
insl
fwait
lds
out
roll
mov
les
inc
cmp
xor
call
outsl
shlb
xchg
in
lahf
dec
mov
or
inc
push
xor
ficoml
jnp
ret
lea
ss
mov
xorb
lret
test
jecxz
lret
lock
pop
mov
xor
cmp
push
pop
inc
out
jle
jb
adcb
jl
cmp
rcll
int3
jmp
push
mov
mov
mov
push
xor
push
mov
sub
lcall
add
repz
scas
bound
aaa
repz
inc
and
dec
xchg
cli
add
testb
callw
and
jnp
out
mov
scas
jb
mov
daa
sub
cmpsl
incl
addr16
mov
sbb
repz
pop
mov
mov
pop
lahf
outsl
jb
jmp
sbb
xor
shrb
cmp
popf
xchg
sub
test
loope
xor
or
push
jecxz
out
push
fs
mov
idivb
rcrb
fwait
push
in
es
mov
and
or
mov
jae
mov
sarl
and
pop
adc
jmp
or
loope
out
lahf
test
call
ljmp
push
and
mov
test
and
fsubrp
inc
rolb
pop
cmpb
or
in
pop
xor
fstl
out
stos
mov
in
fsts
inc
xchg
pop
mov
cli
dec
leave
xor
pop
addb
push
pop
pop
sub
imul
test
test
pop
pop
fimull
mov
pop
mov
pop
cmp
or
cwtl
loop
jnp
in
add
sub
push
outsl
mov
pop
mov
jle
mov
jne
push
jg
lds
test
mov
in
or
mov
cmp
jbe
mov
jne
push
mov
dec
inc
sbb
movsb
in
clc
add
or
pop
adc
jns
mov
imul
dec
fidivrl
shr
and
test
sbb
loop
and
hlt
mov
adc
repnz
movsl
idivl
push
bound
push
jg
sub
adc
cwtl
cs
in
rcrl
cmp
aam
xchg
sarb
test
mov
outsl
fdivrs
scas
mov
xorb
out
jecxz
frstor
dec
mov
popa
lea
and
jne
jp
xor
dec
mov
add
push
xor
in
xchg
icebp
mov
dec
lret
jle
lcall
cmp
enter
or
inc
xchg
fs
or
push
xchg
mov
push
nop
repnz
lods
xor
aam
sbb
jbe
or
jne
enter
mov
mov
push
pop
mov
xor
out
and
fstps
push
xrelease
push
fbld
jl
leave
lcall
push
xchg
in
movsb
sbb
in
clc
fistps
xor
pop
add
xchg
popa
jno
fsubs
pop
icebp
xor
mov
xchg
paddd
inc
iret
rolb
and
cltd
ss
gs
imul
sbb
inc
push
les
enter
in
bound
push
and
jno
ja
adc
mov
jge
loop
clc
std
shrl
add
pop
sahf
xchg
rcl
sub
dec
icebp
ret
pop
jno
loopne
pushf
outsb
lea
in
adc
int
call
insl
fsts
fwait
add
and
pushf
in
imul
pushl
sbb
and
sub
std
dec
lcall
fistl
mov
mov
in
and
hlt
stc
ja
mov
dec
repnz
fnstenv
and
outsb
leave
js
add
pop
ret
sub
push
int3
inc
sub
push
lods
hlt
mov
lods
cli
and
dec
pop
inc
arpl
mov
adc
imul
or
test
rorl
hlt
mov
dec
ljmp
stos
fists
aad
cmc
cmp
cmp
mov
jbe
push
dec
orb
fsubp
add
cmp
cmpsl
pop
rsqrtps
ret
loop
and
jns
jbe
loope
xor
dec
jbe
repnz
inc
ret
lcall
jae
je
mov
fwait
arpl
adc
mov
je
aad
lret
stos
outsl
jmp
dec
insl
adc
mov
cli
cwtl
orl
sbbl
xchg
test
rolb
out
or
imul
popf
ja
jmp
test
movsl
mov
push
test
pop
test
xor
push
add
mov
cwtl
inc
imul
xchg
insl
lret
imul
sbb
mov
push
stos
cmpb
ja
fistpl
mov
scas
je
mov
cmpsl
mov
ret
mov
cmpsb
push
pop
in
shlb
mulb
mov
loop
prefetchwt1
or
testl
mov
cli
daa
lea
inc
xor
sbb
insb
sbb
stos
or
mov
rclb
sbb
cmp
aaa
cs
insb
pop
cmpsl
into
stc
adc
pop
sbb
mov
or
sub
jnp
mov
and
ss
data16
push
fs
test
int
sbb
mov
mov
inc
jae
stos
push
paddw
lret
mov
adc
out
pop
or
mov
add
add
fnstcw
or
je
test
mov
mov
fiadds
imul
fistl
inc
gs
xor
and
sub
rcl
cmpsb
push
sub
mov
mov
ret
dec
ja
sbb
cltd
and
sub
or
mov
icebp
mov
sahf
lods
sub
cs
inc
push
shr
jmp
sbb
xor
stos
test
into
sub
mov
mov
test
xor
das
lahf
bound
adc
inc
loop
stos
cmpsl
stc
insl
xor
pop
mov
lcall
scas
xor
jae
int3
les
dec
xor
push
cmp
mov
jbe
lcall
cmp
pop
notl
sbb
fsubrl
pop
inc
decl
xlat
xor
out
push
scas
add
inc
rcll
or
incb
ror
iret
dec
adc
movsb
scas
push
sahf
bound
mov
and
repnz
test
rorb
adc
mov
sti
insb
cmc
xlat
adc
mov
clc
push
mov
ja
sar
sbb
push
rcrl
xchg
aaa
or
ljmp
movl
jge
or
jno
test
mov
cmp
adc
in
mov
lock
das
clc
andb
sbb
test
insl
xchg
test
pop
mov
movsb
mov
leave
push
cmp
ror
pop
cmpsl
xchg
sbb
add
add
push
pop
push
xchg
out
ret
in
out
jnp
and
pop
jno
xchg
and
jbe
add
mov
aam
test
push
pushf
gs
in
pop
or
mov
mov
outsl
push
add
xchg
mov
pop
sub
inc
scas
or
cltd
mov
cmc
lret
cmp
add
data16
rolb
adc
movsb
mov
mov
stos
mov
icebp
js
cmp
cmp
sahf
into
roll
dec
in
cwtl
pshufw
popf
sub
shll
cmpsb
pusha
jb
xchg
jmp
and
push
movsl
lock
jecxz
pop
lahf
adc
call
iret
divb
das
fadd
je
lods
xchg
repz
mov
std
fidivrs
ret
scas
mov
mov
push
inc
or
push
cmpsb
xor
push
cmc
sub
jbe
dec
cmp
iret
int
inc
frstor
pop
mov
movsb
push
lret
mov
sub
inc
push
add
ss
leave
jbe
rorb
xlat
mov
in
push
mov
das
mov
cmp
scas
push
sub
pop
jg
in
out
aaa
mov
xor
pop
or
sub
mov
cli
fidivrl
cmp
pop
lret
clc
sub
shlb
lahf
lods
push
jg
sbb
fdivr
dec
fiaddl
movsl
dec
add
mov
iret
adc
xor
jecxz
sbb
pop
inc
pop
pop
hlt
xchg
loop
dec
fidivrs
cld
popf
das
inc
sub
lret
mov
jb
pop
lock
sarl
jne
push
testl
mov
psadbw
scas
sub
xor
mov
pushf
aad
push
int
add
scas
jne
loope
pop
fistl
push
test
shl
fistpl
bound
and
mov
in
movl
jo
pop
jne
pop
dec
pop
loope
fbstp
pop
push
inc
jne
stos
xchg
outsb
mov
ljmp
testb
xchg
mov
ds
cmp
test
adc
inc
iret
push
add
ficomps
jmp
mov
jl
add
adc
dec
inc
lret
dec
call
into
and
std
leave
lods
xor
pop
pusha
push
movsl
push
xchg
cmp
sub
int3
test
mov
push
lret
or
dec
pushf
jl
xor
mov
adcl
pop
cmp
or
popa
popf
inc
xchg
and
mov
jecxz
roll
adc
daa
sub
xchg
or
xchg
lds
lret
push
mov
leave
push
stos
aad
iret
add
pop
jmp
sub
and
in
sti
xor
outsb
subb
mov
jecxz
cs
push
insb
pop
pop
mov
mov
ljmp
mov
inc
lret
enter
lds
lret
mov
dec
mov
das
dec
and
cmp
imul
mov
xor
fdivl
data16
dec
das
mov
push
lcall
ljmp
lea
lea
mov
dec
lret
jns
sbb
sbb
fnsave
bound
js
popa
sub
cmovns
push
jecxz
ficoms
out
cld
std
movsl
or
xchg
mov
inc
movsb
add
inc
add
repz
lret
dec
repz
cwtl
adc
rolb
sub
loopne
scas
ljmp
and
and
mov
negl
jns
cmp
or
scas
mov
testb
shll
hlt
push
fistps
test
push
aam
imul
mov
xlat
hlt
mov
xchg
enter
sbb
mov
or
pusha
jecxz
pop
push
aaa
mov
xchg
mov
shrb
pop
inc
xchg
mov
and
jne
sbb
xor
and
mov
daa
ss
aam
test
mov
repz
pusha
xchg
je
mov
ljmp
mov
orb
or
mov
fnsave
cli
leave
vpsubd
sub
mov
scas
jns
pop
or
dec
subl
popf
leave
lret
xchg
mov
popf
mov
mov
ljmp
and
cmp
mov
fsubrs
mov
and
cmpsl
divb
sbb
movsb
imull
jae
push
xchg
push
xchg
fdivp
xor
mov
or
sbb
lock
fwait
out
popl
push
pop
dec
pop
lods
fbstp
outsl
adc
xchg
std
xchg
leave
dec
push
imul
mov
pop
pop
push
popa
cmp
out
mov
mov
scas
push
mov
mov
dec
ljmp
xchg
mov
sarl
push
push
push
bound
push
addr16
pushf
fxch
add
pusha
insl
inc
pop
movsb
aam
inc
xor
inc
xor
imul
notb
outsl
syscall
shll
in
mov
ret
pop
inc
popf
add
jecxz
daa
loope
sahf
cmpsb
jne
or
fmull
lods
and
mov
mov
fcomps
mov
or
stos
dec
js
and
mov
xchg
push
sahf
push
or
sti
jo
dec
enter
mov
push
out
jmp
jns
jno
push
icebp
fcomps
cmp
shr
out
sarb
xchg
test
adc
cli
dec
popa
sbb
aad
xchg
icebp
push
cmp
xlat
inc
ds
out
and
sbb
fldt
in
repnz
int
sub
mov
sbb
lds
inc
je
aaa
cmpsl
cmp
and
pop
shrl
shll
scas
and
jb
in
push
mov
aaa
dec
push
jmp
adc
jle
loopne
push
inc
add
or
pop
stos
push
or
pop
sbb
pop
sahf
inc
popf
ret
add
pop
divb
sbb
xchg
and
sub
jne
fdivrl
cltd
adc
gs
iret
nop
xchg
add
push
bound
mov
rcrl
imul
leave
subb
lret
xchg
inc
ja
cli
fucomi
jge
pushf
subb
mov
sbb
in
cmp
mov
or
xor
xchg
arpl
fnsave
and
hlt
dec
dec
test
inc
jns
inc
sub
addr16
loopne
enter
mov
jle
jecxz
incb
mov
and
pop
mov
push
lock
arpl
add
ds
ljmp
jg
sbb
dec
jmp
jnp
pop
decl
mov
stos
sub
jg
and
dec
into
sbb
scas
xchg
out
ja
mov
inc
adc
cli
repz
int
mov
loop
inc
or
xchg
pusha
out
push
jl
movsl
sub
adc
push
repnz
pop
mov
cmp
in
push
imulb
jo
push
pop
into
cmp
sub
add
mov
cmp
sbb
lcall
xor
add
in
pop
mov
xor
or
or
jno
mov
inc
pop
xor
pop
push
cld
lahf
sti
loopne
mov
es
dec
iret
mov
mov
testb
adc
adc
mov
sbb
adc
aad
test
dec
push
or
or
push
outsb
sbb
cmp
adc
push
mov
lea
bound
mov
jb
jle
mov
inc
mov
mov
ss
sbb
add
shr
adcl
repnz
arpl
rorl
sbb
fbstp
push
cmpsb
shl
clc
pop
xlat
or
or
icebp
jae
mov
pop
xchg
ret
jbe
mov
rcrb
sbb
int3
icebp
pop
xor
leave
ja
adcl
pop
push
or
xor
cmp
push
fiaddl
rorl
push
pop
mov
ficomps
ret
data16
shr
into
mov
fists
mov
jns
pop
mov
das
les
pop
imul
push
js
repnz
mov
lret
arpl
add
hlt
aam
mov
aam
xor
mov
js
jecxz
or
out
dec
lea
adc
movsb
push
push
ret
xor
fstps
xor
imul
sbb
lods
add
nop
pop
xchg
popa
inc
loopne
fstps
xchg
sub
or
std
cmp
out
ffree
cmp
sarl
pushf
pop
mov
mov
inc
mov
mov
dec
stos
lea
hlt
pushf
scas
sti
xor
mov
mov
dec
or
adc
sub
jmp
test
jge
js
inc
pop
sub
and
pop
gs
je
shll
dec
shlb
and
das
jmp
movsb
arpl
ret
and
xor
das
ret
gs
jp
adc
sub
orb
sbb
rcll
sub
inc
push
mov
dec
cmp
inc
imul
xchg
loope
shlb
aas
sti
icebp
jle
in
popa
test
cltd
data16
xor
lahf
jl
jbe
das
push
mov
insb
xor
jo
imul
push
jb
mov
xchg
and
fsubrs
shll
ret
inc
aam
mov
ljmp
dec
das
les
hlt
and
and
or
clc
mov
jle
xchg
cli
push
pop
xor
add
scas
jae
sti
out
add
xchg
insl
repz
and
xchg
sbb
push
in
scas
pop
jl
xor
adc
ret
inc
aas
iret
fstpt
pop
ljmp
in
divb
mov
cs
out
les
mov
sbb
cmp
jb
sbb
push
in
dec
stc
push
push
addr16
mov
mov
xchg
adc
push
mov
jne
and
inc
int3
aas
mov
fmul
lret
mov
pop
std
sbb
dec
mov
pushf
sub
insl
aam
mov
and
std
push
test
mov
aas
int3
rorl
xor
in
ss
ret
jne
lods
movsl
push
sbb
and
jns
and
xchg
mov
aaa
add
out
jb
jl
jb
addl
sbb
mov
jmp
insb
insl
in
testb
mov
jb
adc
int
or
jne
push
pop
inc
xor
cmp
lods
mov
sub
mov
out
clc
cmpsb
adc
jno
push
stc
sub
sbb
fstp
lods
or
call
scas
push
and
push
push
mov
jae
add
imull
je
out
enter
lods
sti
in
jnp
sbb
lea
mov
pusha
sub
mov
or
sti
aaa
and
repz
and
xorl
xchg
ljmp
and
sub
scas
pop
lock
into
in
sbb
test
fcompl
mov
or
pop
ds
outsl
pop
xchg
jb
inc
dec
or
lods
xor
clc
xor
fsubrs
or
dec
gs
mov
mov
inc
lcall
mov
inc
outsl
cmp
inc
xchg
clc
jp
ja
xchg
jge
stos
pop
jecxz
and
shll
dec
mov
sbb
push
imul
cli
pop
inc
push
add
insl
outsb
loop
adc
mov
in
das
repz
inc
push
andb
sub
in
dec
sbb
push
xor
inc
adcb
fisubrl
sub
push
pop
add
lret
add
push
xchg
sbb
dec
enter
idivb
rcrb
ficoml
loopne
sub
push
enter
inc
cs
cltd
inc
xor
jb
jmp
adc
or
daa
push
or
dec
or
lods
jp
push
int3
fstp
cwtl
and
xchg
fbstp
pop
push
js
in
leave
aaa
jecxz
mov
and
leave
inc
push
sub
cld
mov
lret
add
scas
and
push
int3
aas
mov
or
add
mov
popa
dec
lods
aaa
call
inc
inc
cmpsb
push
test
or
mov
and
add
push
jns
jae
sbb
orl
xor
data16
inc
xchg
push
cltd
inc
ficoms
mov
pop
sbb
rorl
mov
imulb
dec
fistps
sub
lock
aas
out
add
scas
movsl
test
lret
into
jae
lods
imul
je
xor
pop
sbb
and
mov
test
pushf
sti
lock
or
test
push
dec
daa
add
fstps
inc
sub
rcrl
cmp
add
insb
mov
dec
xchg
mov
out
shll
mov
aas
fsub
mov
mov
mov
jo
pusha
lods
inc
lahf
fcmovnbe
inc
call
int
lods
adc
or
mov
arpl
andb
pop
ljmp
mull
push
adc
adc
pop
jne
mov
stos
push
add
in
fbld
stos
out
andl
sar
ljmp
repz
sub
mov
hlt
out
pusha
jne
mov
push
test
push
outsb
cmp
cs
cmp
adc
push
fucomp
sub
les
ljmp
test
out
and
movsl
mov
sbb
in
adc
push
ss
lds
daa
and
aas
clc
sub
gs
ds
fs
push
xlat
pop
and
cmp
mov
data16
cwtl
mov
lods
inc
cmp
fs
add
mov
and
rcrb
mov
fsubr
cltd
mov
es
fcomps
or
mov
mov
xchg
mov
adc
mov
data16
cmpsb
pop
bound
mov
shrd
inc
jge
push
mov
or
movsl
inc
inc
pop
mov
out
lods
sti
fs
jl
mov
mov
out
adcl
xchg
pop
lret
cmc
es
or
adc
jle
dec
js
push
call
cwtl
sbb
ds
stos
mov
mov
lods
stc
xchg
mov
fistl
add
movsb
daa
lods
cmp
popa
setbe
out
mov
imul
test
rcll
mov
movsl
jno
inc
dec
adcb
xor
loop
out
mov
jnp
repnz
shr
fwait
pushf
mov
sub
add
orl
movsl
pop
inc
lods
ret
pop
pusha
xchg
test
push
sbb
mov
xorb
cli
test
and
mov
or
inc
add
sbb
aaa
std
cmp
sub
mov
jp
es
push
mov
mov
adcb
pop
dec
mov
jo
xchg
lods
inc
cmp
loop
inc
nop
inc
or
loopne
test
sbb
insb
lahf
and
pop
loop
repz
fwait
push
je
push
lcall
in
pop
adc
lods
xchg
popa
pop
fnstcw
jle
rorl
xchg
ja
test
dec
dec
scas
dec
mov
push
test
stos
data16
ret
test
xor
pop
push
out
or
movsl
repz
jns
lret
xor
call
jns
int
call
jo
xor
in
xchg
add
mul
jns
push
xor
xor
jbe
lds
add
sub
push
ds
mov
jle
push
push
cmp
inc
aas
mov
ret
dec
repnz
inc
inc
loopne
jb
xchg
lahf
pop
sahf
jno
fs
mov
idivb
sub
popa
shlb
scas
dec
pop
dec
lds
pop
pop
mov
div
leave
cmp
cmp
adc
mov
out
push
and
out
inc
add
sbb
push
sahf
outsl
pop
cwtl
imul
leave
push
sub
push
lret
popf
into
push
mulb
fwait
int
and
movsb
das
int3
lea
rcr
fldenv
push
mov
mov
or
iret
jmp
pushl
sub
lea
mov
mov
jae
or
decl
stc
mov
mov
cmc
xor
mov
pop
inc
push
mov
pushw
adc
or
jge
ja
or
clc
ja
dec
movsb
push
cwtl
push
scas
mov
push
inc
fadds
lods
into
or
sbb
insb
out
pop
pop
push
mov
mov
fdivs
clc
in
ret
imul
pop
add
out
mov
dec
dec
fwait
pxor
sbbb
fisubrl
ljmp
leave
in
pop
pop
in
pushf
shll
mov
inc
and
ss
and
push
xlat
test
mov
mov
xor
insl
aam
repz
xchg
dec
push
mov
pop
and
test
and
xor
popf
cmp
mov
aam
pop
push
mov
ror
mov
lahf
or
xor
pop
xchg
xor
adc
cmp
movsb
inc
ret
mov
jo
lcall
popa
cmc
cmp
je
std
stos
imul
and
fcompl
sbb
into
inc
das
push
xor
adc
add
fiaddl
push
pop
push
push
in
aaa
jl
sbb
jmp
xchg
aam
outsb
jecxz
movsl
popf
push
inc
jnp
outsb
jns
cmp
inc
xchg
mov
loop
cmpsb
dec
mov
cwtl
push
mov
sub
jno
adc
xchg
inc
cltd
jp
fsubp
stc
sub
dec
lods
push
fsubrl
push
mov
push
sahf
cmp
out
cli
in
cwtl
xor
xorb
xlat
or
xor
push
inc
shl
clc
jecxz
ds
cmpsl
inc
adc
ret
sbb
stos
jno
mov
sarb
clc
fsubrs
mov
loope
scas
idivb
imul
xchg
pop
jbe
lods
cmpsb
xchg
add
imul
or
dec
in
fstl
das
es
mov
addr16
mov
std
sarb
add
scas
cmc
push
sbb
stos
fisttpll
push
cmp
aaa
cltd
and
mov
aad
data16
push
addr16
jno
mov
jb
test
outsl
cmp
out
dec
cmp
push
and
cmp
mov
pop
inc
mov
push
xchg
push
js
out
and
mov
jb
loopne
int
cli
add
mov
pop
pop
test
cmp
jmp
xlat
popa
sbb
adc
jno
outsl
rolb
mov
test
movsl
xor
es
cltd
dec
xor
pop
icebp
aaa
out
loope
stos
add
sbb
popf
into
mov
ss
xor
inc
dec
mov
les
push
sub
push
ret
icebp
pop
mov
cmp
hlt
in
ss
xchg
mov
and
in
fsubr
cmc
fildl
mov
cmp
popa
scas
insb
hlt
xor
fwait
out
popa
mov
pop
addr16
movsl
jo
pop
enter
popa
dec
adc
sahf
movsb
stc
mov
fsts
loope
ficoms
test
or
in
sub
in
and
xchg
scas
push
out
sarb
mov
xor
pop
add
mov
lret
stos
pop
loop
or
call
inc
adc
aaa
fs
orl
mov
lds
jno
mov
cli
mov
addr16
call
and
mov
test
sub
scas
in
mov
popa
aad
movsl
jae
jmp
mov
iret
ljmp
push
sbb
ret
or
or
add
mov
or
ret
cmp
movsb
test
mov
xor
adc
inc
mov
dec
clc
sbb
in
add
test
cmpsl
mov
outsb
ds
mov
movsb
lea
mov
out
dec
hlt
jp
sub
cmc
jae
add
rcrb
xchg
in
das
pop
pushf
lahf
jg
xchg
push
lahf
test
shlb
adc
int3
mov
in
jo
mov
fdiv
pushf
sbb
std
inc
push
stos
pop
push
cmpsl
dec
jecxz
dec
pushf
and
push
jne
cltd
xchg
mov
mov
jae
xor
les
negl
pushw
inc
jbe
pop
inc
mov
and
xor
lret
jns
rorb
je
mov
rcll
inc
add
and
rcrb
paddq
push
xchg
jnp
xor
je
in
push
xchg
sbb
pop
cmpsl
insb
inc
jl
lcall
xchg
std
push
mov
xchg
addr16
dec
xor
ds
gs
loopne
ss
lock
lret
imulb
mov
jne
jo
out
std
xor
sub
ja
imul
add
pushf
adcb
mov
sbb
cmp
inc
pop
rcr
sbb
sub
jecxz
lds
lret
push
cwtl
scas
xorb
stos
sbb
sahf
xor
fs
jb
imul
mov
xchg
lret
lds
and
out
mov
mov
xor
data16
addr16
inc
mov
add
push
into
mov
mov
cmp
mov
fidivl
in
pushf
jnp
push
sahf
lret
stc
out
shll
or
fcmovne
pop
and
fnstcw
xchg
mov
sub
sub
xor
adc
mov
inc
stos
adc
or
xor
test
ret
mov
add
popf
in
out
push
paddsw
mull
dec
sub
adc
mov
xchg
rolb
sub
insl
aad
pusha
jg
jb
xchg
rorb
pop
inc
lret
int
pop
sbb
call
into
popl
mov
scas
adc
xchg
push
add
mov
cmp
imul
fwait
add
mov
xor
stc
pmulhuw
adc
jge
jle
pop
mov
mov
pop
push
mov
icebp
loope
sbb
sahf
jne
dec
cmp
jbe
jnp
scas
inc
dec
stos
jecxz
sti
inc
jns
sbb
lods
jne
and
adc
xchg
pop
cmp
insb
sbb
ja
add
mov
bound
adc
fistpl
lods
leave
mov
mov
pop
stc
mov
adc
and
popa
add
mov
popa
inc
xor
faddp
xchg
hlt
and
outsl
dec
push
sahf
push
shl
jecxz
dec
fwait
enter
jno
or
in
pop
fsub
xchg
incl
inc
test
cmpsb
inc
stos
cmp
or
add
xor
fcomps
adc
mov
pop
push
dec
push
fmul
cmp
and
bound
ds
jmp
xchg
mov
push
adc
in
fwait
in
push
push
inc
test
rcrl
inc
sbb
stos
adc
add
xor
stos
xor
pusha
insb
pop
mov
dec
push
pop
stos
jnp
or
sub
mov
jnp
sbb
iret
fs
cmp
ret
pusha
or
dec
test
cmpsl
jae
push
mov
in
xchg
inc
and
call
pop
rcll
sbb
rcll
pop
or
push
cmp
fistpll
out
lds
add
ret
cmpsl
out
test
xor
push
sbb
ds
xchg
stc
add
decb
jae
cmp
out
pop
pop
xlat
stos
in
cmpsb
lret
and
and
sbb
inc
adc
movsl
lahf
sarl
inc
jne
mov
mov
or
repz
mov
cmc
xchg
mov
mov
fistpl
bound
les
cmpsl
xchg
stos
repz
sbb
imul
pop
pop
pop
or
sbb
sub
aad
or
test
jo,pn
add
rcrb
fiadds
lods
fsubs
lods
int
or
pop
dec
and
sbb
mov
data16
push
jnp
sub
sbb
or
dec
jmp
xlat
loopne
cmpsb
adc
adc
idivb
std
insl
xor
loopne
push
inc
andl
sub
inc
sub
cwtl
lcall
xor
adc
dec
insb
scas
imul
aaa
jge
xor
sub
ret
lods
sub
xchg
shrl
hlt
or
xchg
mov
sub
movsl
popf
mov
sub
sub
sbb
sbb
popf
push
add
test
cmc
push
jmp
pop
add
in
fiadds
jne
adcl
jmp
or
pop
lahf
cmp
or
scas
pop
xor
adc
dec
jo
aam
push
mov
stos
xor
cmp
popf
stos
into
int
xchg
and
xor
std
mov
ss
sbb
leave
fbld
cmp
icebp
pop
movsl
cld
jecxz
jge
js
dec
mov
es
cmpsl
inc
int3
pop
pop
lods
pop
aas
push
jbe
lea
shll
push
lds
ret
loope
push
fcmovnu
call
sub
sahf
mov
rcl
std
insb
imul
inc
roll
dec
test
xor
xchg
add
pusha
fisubrl
enter
aad
xchg
insl
insb
cltd
iret
mov
and
xchg
rclb
ja
cmp
pop
inc
push
aas
add
jecxz
inc
imul
adc
mov
ds
testb
das
pop
rorl
cmp
xor
pop
cmp
push
lret
mov
sbb
sub
dec
jne
jb
inc
mov
mov
pop
jge
pop
out
push
sbb
and
int3
mov
aam
popf
xchg
push
adc
push
lea
in
sub
outsb
dec
pushf
mov
and
mov
sbb
adc
jge
pushf
inc
enter
pop
in
pop
mov
loope
xor
and
jge
es
jl
mov
ficompl
aam
sub
aad
ljmp
push
f2xm1
cs
loope
or
push
in
insl
pop
jbe
rcr
push
jae
jecxz
adc
mov
js
icebp
pop
fs
mov
mov
loopne
xchg
in
cs
pop
std
outsl
mov
push
cmc
sbb
xchg
jbe
xchg
outsb
add
bound
fiadds
mov
xor
ss
push
outsb
inc
adc
mov
popl
xchg
lods
addl
cmp
sub
flds
rcrl
ficoms
jl
sbb
pop
es
scas
or
lcall
data16
lock
mov
mov
test
cwtl
lret
les
cld
je
or
cs
push
and
in
and
into
add
orl
or
adc
push
stos
rclb
into
test
fnsave
dec
pop
mov
test
and
ret
mov
ja
pop
cwtl
inc
aam
enter
cmp
loop
push
push
sbb
lods
loop
push
aas
in
sub
sub
xor
popf
mov
fstps
popa
mov
xor
add
jle
repz
fldenv
cld
mov
inc
mov
out
adc
cmpsb
in
sbbl
xchg
push
sub
lret
xor
jbe
ljmp
xchg
iret
je
fwait
fdivrp
aaa
jl
mov
ds
das
rcr
cmpsl
pusha
into
or
std
sbbl
test
pop
ret
sub
lea
inc
ficoml
fldenv
sub
jbe
adcb
mov
jle
or
sbb
cmc
push
xchg
leave
int3
xor
sbb
mov
jecxz
mov
sbb
dec
popf
inc
movsl
mov
jp
fistps
sbb
or
fwait
mov
push
orl
add
cmp
in
cs
gs
jmp
cmp
daa
out
adc
pop
pop
jno
or
arpl
xorb
and
mov
aam
lods
add
mov
repz
xor
jl
leave
sub
and
push
xor
popf
jbe
inc
fidivrl
test
call
dec
and
ret
movsl
add
out
cmp
out
int3
fwait
jmp
dec
loope
and
shrb
adc
lods
mov
inc
or
idivb
sbb
add
stos
push
movb
les
inc
pushf
dec
leave
je
es
sti
xchg
imull
cmpsb
repnz
dec
iret
and
adc
ds
data16
lahf
jae
faddl
lret
mov
int3
sbb
imul
xchg
popf
insb
sbb
shrb
and
dec
aam
inc
jge
in
call
xchg
sub
lods
mov
jg
shrl
divb
dec
ret
xor
iret
leave
popf
call
dec
xor
lods
shll
test
add
call
fwait
stos
push
std
andb
pop
sti
test
inc
ds
mov
dec
dec
mov
das
mov
or
jo,pn
adc
jno
sbbb
inc
mov
inc
push
hlt
xchg
shr
jge
fbld
push
frstor
or
lret
clc
jl
push
jno
xor
cmpsl
lret
cmp
pop
cmp
imul
adc
dec
aas
fistpll
jg
push
mov
inc
out
push
xchg
add
fildll
jno
xchg
fimull
sbb
in
jp
pop
std
mov
inc
pop
outsl
test
popa
cmp
jmp
ficoms
add
pop
jmp
or
and
pop
aad
or
loopne
out
jg
inc
fst
pop
push
scas
mov
sub
leave
mov
ljmp
repz
cld
dec
sub
cs
enter
mov
pop
adc
daa
loop
aas
fwait
or
pushf
push
out
repnz
iret
fstpl
adc
xchg
hlt
inc
dec
adc
test
push
pop
push
icebp
jle
cmp
mov
mov
daa
test
scas
sar
test
cmp
ret
scas
cmpsb
mov
lret
daa
jnp
inc
mov
inc
mov
rcl
push
movsl
and
pop
jnp
add
gs
cs
mov
sub
add
xor
xchg
lcall
ret
jmp
fxch
jno
cltd
dec
addl
test
and
psllq
rol
addb
imul
inc
or
movl
mov
mov
cmc
test
sub
or
int3
cltd
es
lcall
push
in
mov
xchg
sbb
add
jge,pn
stos
sub
pusha
mov
vmovlps
stos
jnp
scas
lret
fdivrp
jmp
mov
xor
je
mov
xchg
out
mov
pop
jbe
rolb
aad
xchg
lret
or
cmp
push
lret
lds
sbb
mov
into
mov
add
ds
lahf
fs
rcrb
push
out
push
sub
adc
shll
push
and
xchg
xchg
inc
xchg
pop
jecxz
xchg
mov
sti
cli
xchg
xchg
lahf
fsubs
fs
fisubrl
imul
mul
mov
dec
pop
cld
xchg
mov
xchg
adc
lock
xchg
add
int3
pop
mov
adc
or
xor
jno
xchg
pop
and
mov
test
mov
dec
inc
pop
add
adc
imul
lock
in
loopne
sbb
scas
push
xchg
jnp
cmp
sub
dec
mov
int3
cmp
sbb
iret
push
jmp
inc
mov
ss
insl
fwait
ret
int3
pop
fmuls
out
sti
ret
pop
imul
pushf
jp
pusha
xor
dec
imul
add
sarb
dec
adc
outsl
xorl
inc
mov
repz
ss
stos
test
mov
adc
push
fistl
pop
push
cs
dec
xchg
flds
loope
pushf
xor
shlb
rorl
jmp
xchg
es
mov
sub
or
shrl
insl
push
stc
mov
or
int3
fld
sbb
mov
les
mov
and
sub
xor
cmp
lcall
es
dec
add
mov
add
test
jbe
test
mov
xor
mov
or
xor
jbe
sbb
clc
cltd
jnp
mov
push
adcb
out
jmp
inc
jge
inc
lahf
arpl
mov
push
lahf
popa
popa
repnz
repnz
jbe
jg
mov
aad
sub
lahf
cli
and
inc
add
sub
stos
js
add
xor
jg
pop
test
ret
ret
jle
lock
ss
sub
rcrb
subb
inc
jnp
cmc
jecxz
and
movsb
pop
testl
mov
shrl
pop
mov
test
inc
fs
mov
push
stos
scas
imul
push
xorb
add
xor
push
add
push
pop
sbb
fimull
xor
lock
je
mov
mov
leave
aaa
and
mov
dec
lcall
mull
fsubrl
jg
or
inc
inc
in
mov
mov
lahf
cmp
nop
jecxz
adc
push
lock
insb
and
jp
add
in
mov
nop
and
mov
test
or
mov
xor
pop
push
cli
in
add
push
cmpsl
add
subb
jmp
inc
pop
in
iret
stos
mov
insb
mov
inc
out
mov
pop
pop
cld
cmpsb
les
pushf
xor
or
mov
inc
stos
aaa
pop
fdivs
jns
stc
repnz
gs
repnz
cmp
jp
or
hlt
cmp
lea
cmp
cmp
cmpsl
adc
aad
pop
inc
mov
jbe
adc
stc
add
les
xchg
mov
mov
xlat
sahf
or
cmp
push
out
shll
jl
sbb
xchg
ret
jbe
add
movsb
mov
and
inc
imul
mov
push
xor
mov
sbb
call
ret
lea
mov
mov
in
rorl
add
sbb
fimuls
ret
enter
mov
mov
cmp
push
mov
add
sbb
jns
mov
jge
decl
and
jnp
add
jne
pop
je
es
and
cmp
dec
cmpsb
pop
punpcklbw
push
push
inc
ljmp
ficoml
mov
xchg
xor
or
sub
daa
int
or
push
dec
mov
insb
popf
push
add
pusha
sbb
jns
pop
pop
in
pop
dec
or
mov
mov
into
scas
fnsave
mov
cmc
roll
fmull
sahf
test
adc
push
cmp
aad
pop
bound
cmp
xchg
xor
imul
mov
test
inc
lods
sub
mov
cmp
neg
lea
aam
add
cwtl
pop
lods
mov
cmp
lds
mov
arpl
sub
aad
popa
in
cmpsl
xchg
outsl
je
js
jo
cmp
into
hlt
movl
cmp
fldenv
out
fwait
push
mov
sbb
push
in
bound
xorl
and
sbb
dec
add
in
xor
mov
leave
mov
mov
adc
pop
add
aad
gs
push
or
mov
cwtl
sahf
divl
cmpsb
cmp
push
sahf
pop
leave
pop
mov
add
enter
pop
faddl
mulb
fbstp
ret
into
jo,pn
mov
sbb
mov
outsl
sahf
sbb
adc
inc
repz
in
xchg
enter
jno
mov
jmp
rcrl
jae
call
push
outsl
stc
ret
ret
jae
pop
inc
push
cmp
divb
aas
test
jge
xor
mov
out
jmp
mov
ror
cmp
leave
cld
cmpsb
or
cmp
pusha
lods
lods
jge
cmc
daa
push
sub
in
fisttpl
clc
lret
dec
fdiv
xor
lahf
imul
test
repnz
xchg
insb
ret
sbb
push
inc
jnp
call
and
or
xor
mov
mov
lods
stos
adc
cs
add
mov
les
outsb
repnz
in
mov
das
cmpsl
jg
cld
daa
pop
out
add
divb
cmpsl
aam
outsb
xchg
cld
hlt
mov
mov
int3
xor
sub
mov
dec
push
out
decl
testb
lcall
dec
sbb
mov
test
outsb
and
div
in
cmp
lcall
or
scas
cwtl
mov
jnp
dec
inc
out
mov
and
lods
inc
push
mov
mov
jno
push
dec
test
test
test
rol
cwtl
inc
addl
pop
sbb
mov
scas
xchg
aaa
scas
or
sti
outsl
mov
jo
and
repz
or
jg
pop
jp
lret
repnz
repz
mov
inc
mov
cmp
movsb
aas
jo
pop
call
adc
pop
mov
lahf
pop
fcmovbe
mov
mov
mov
inc
xchg
dec
mov
cmp
sbb
das
mov
and
pop
inc
outsb
pop
sub
jae
or
mov
call
push
sbb
les
xchg
cltd
cli
mov
pop
mov
loope
xor
mov
xchg
mov
xor
stos
dec
jle
stos
in
adc
popf
fldt
pop
fisubs
mov
dec
push
and
cli
mov
popf
xor
mov
push
inc
imul
ret
push
lds
sbb
push
test
int
roll
rdmsr
mov
mov
jnp
lods
jl
daa
rol
shr
aaa
sbb
nop
aaa
add
out
cmp
in
movsl
mov
cmpsl
out
fidivrs
push
inc
sub
xorb
xchg
sub
xchg
test
mov
inc
jne
xchg
xor
in
aas
fcmovb
test
cmp
inc
fistpll
mov
nop
imul
push
movsb
imul
xor
jns
jp
adc
and
sub
scas
fisubrs
out
in
jmp
outsb
clc
mov
mulb
mov
insb
sbb
insb
push
in
out
mov
stos
cwtl
push
or
mov
or
xchg
in
jle
and
cmovg
xchg
out
xchg
shlb
shrl
xor
mov
into
flds
call
rcll
mov
bound
out
push
repz
cs
mov
int
sahf
or
mov
xor
xor
or
shlb
in
jnp
cmp
in
int
adc
jge
inc
mov
andb
sbb
sub
add
cmp
xchg
xchg
jae
mov
ret
stc
sti
lods
loop
lods
movsb
xchg
push
loope
sbbb
mov
int
rorl
push
lods
push
insb
cmp
mov
sub
jnp
test
pop
xlat
xchg
out
aaa
lahf
cmp
inc
cmp
insl
jno
inc
sbb
ret
cmc
and
sarb
mulb
sbb
loope
addl
pop
jo
out
dec
push
outsw
inc
mov
push
test
stos
cmp
stos
enter
movsl
xor
dec
mov
xorb
dec
in
and
das
in
sbb
pushl
cmp
sbb
pop
insl
lcall
sti
inc
in
test
inc
inc
push
insl
mov
das
mov
jl
mov
aas
sub
lcall
lea
repnz
stos
pop
pop
jge
fs
push
adc
mov
subb
add
xor
insl
in
imul
cmp
push
les
pop
dec
lock
pop
and
loope
outsl
jae
fcomps
dec
pop
inc
imul
fiaddl
pop
imul
push
jno
push
fistps
pop
mov
cltd
cwtl
mov
inc
jo
xchg
in
push
stos
inc
cmp
mov
popf
ficomps
pop
decl
xor
out
ja
mov
xchg
roll
imul
sahf
xor
dec
xchg
imul
ss
aad
lret
cmpsb
rorb
cmp
leave
addr16
daa
imul
sub
cmpl
fisubs
xor
int3
cli
xlat
std
cmp
aam
fs
adc
popa
xorb
mov
mov
push
pop
xchg
test
inc
dec
cmp
pop
cmp
lret
rol
push
or
pop
and
aaa
xor
push
fmull
jg
addr16
daa
mov
dec
fdiv
pushf
xchg
outsb
jmp
loop
jns
mov
enter
in
dec
les
xor
or
xor
test
outsb
cmc
push
jb
inc
clc
push
cmpsb
sub
flds
lea
clc
xor
and
jl
or
data16
insl
shll
jbe
mov
ret
pop
nop
das
mov
rolb
loopne
and
or
in
or
push
jae,pt
test
pushf
pop
mov
xchg
xor
cmp
add
xchg
or
inc
lock
adc
ja
xchg
pop
addr16
push
pop
add
ljmp
mov
sub
jg
roll
fbstp
pusha
jns
enter
fsts
mov
lahf
lret
lcall
int
cld
cmc
push
mov
xchg
add
aad
push
pop
pop
fldcw
jmp
jne
aam
out
mov
aas
mov
push
xchg
xchg
lods
into
cltd
nop
xchg
lods
push
nop
sub
mov
andl
imul
test
push
dec
xor
inc
mov
mov
xchg
ds
mov
call
and
es
daa
pop
push
incl
sarl
mov
rcrl
stos
jnp
gs
jns
add
adc
mov
ds
push
and
cltd
jns
inc
mov
xchg
mov
ror
shlb
pop
orb
cmp
or
push
fs
pusha
and
inc
add
jne
push
outsl
push
sbb
sub
jp
mov
out
ljmp
mov
adc
inc
mov
cmp
push
test
or
add
adcb
cmp
lcall
mov
dec
jo
dec
mov
adc
std
arpl
pop
ss
or
add
sub
mov
fstps
cmp
je
int3
imul
insl
stos
xchg
lret
mov
sbb
mov
lret
decl
and
ffreep
xchg
std
mov
jo
loop
lock
aad
sarl
pop
fstps
dec
cmc
sbb
jne
push
mov
adc
xor
pop
int3
fiaddl
and
sub
test
das
stos
sbb
ljmp
jmp
test
fadds
xchg
cmp
ficomps
push
shll
mov
pop
les
test
sub
loope
popf
push
mulb
stc
push
push
ret
jae
push
dec
xchg
ds
cltd
or
inc
mov
fwait
mov
cwtl
sbb
mov
cltd
iret
or
inc
out
mov
mov
insl
repnz
scas
scas
lds
fsubrp
push
cmp
pushf
adc
gs
pop
out
push
jne
dec
sbb
mov
sbb
pop
push
je
dec
cs
fistpl
popf
test
loope
push
xor
adc
lahf
adc
dec
pop
insl
xor
cwtl
ficoms
mov
std
lock
stos
and
cmp
mov
cmpsb
fists
sub
insb
cmp
pop
test
or
aam
lds
insl
jge
fsubrp
loopne
push
pop
sti
popa
mov
sbb
jne
jp
test
int
or
cmpsl
jns
pop
cmp
mov
mov
lds
int3
cmp
dec
aam
lods
cmp
xlat
push
adc
push
adc
pop
adc
lods
movsb
jmp
bound
repnz
inc
lock
movsb
cs
sbb
sbb
sbb
mov
xchg
xor
aas
outsl
or
jecxz
lds
mov
push
mov
in
in
inc
scas
rol
xchg
adc
sbb
pop
sub
ja
orb
mov
orb
cmc
dec
stos
hlt
mov
addr16
lods
mov
cs
je
iret
pop
and
daa
add
dec
jecxz
cld
adc
xchg
sar
add
fsts
inc
push
popf
inc
adcb
lcall
xlat
nop
push
xchg
outsl
ret
data16
outsb
pop
cltd
jle
push
icebp
pop
xor
pop
aam
cwtl
jg
loopne
cmp
in
jle
std
mov
pop
loopne
loope
into
sbb
cmp
out
in
sub
pop
out
lock
jp
outsb
pop
mov
scas
or
adc
ja
cmp
popa
jmp
lcall
sub
add
popf
insb
insl
mov
or
inc
scas
and
es
push
or
xchg
pop
sub
loope
inc
stc
pop
mov
and
mov
int
mov
data16
jecxz
cmpsb
lds
ficoml
or
scas
sbb
mov
cmc
mov
aam
sti
pop
mov
and
inc
and
xchg
pop
xchg
xor
lea
mov
pusha
xchg
mov
es
jl
orb
das
mov
sbb
rcr
adc
and
dec
out
push
aas
inc
jle
fsubl
rol
jmp
and
out
pop
adc
aad
cmp
jl
loope
adc
adc
arpl
add
nop
test
sti
mov
arpl
mov
popa
and
mov
rolb
dec
fs
add
dec
mov
or
mov
out
and
fsubl
inc
daa
js,pt
jbe
movsl
out
inc
jle
inc
pop
or
or
xor
pusha
das
adc
xchg
cli
jle
dec
mov
sbb
movsb
jae
cmp
pop
test
rcl
int
mov
ret
push
cmc
push
sub
push
loope
jecxz
jbe
push
push
dec
insb
mov
sbb
fdivrs
into
add
stos
ds
jmp
bound
push
fldl
leave
pusha
test
xchg
pop
fwait
ret
movsb
add
mov
leave
fstl
lock
adc
adc
jge
sarl
add
sbb
fildll
push
lock
xor
xchg
sti
lea
lods
in
enter
mov
stos
enter
mov
pop
or
adc
mov
int
xchg
sbb
and
jmp
dec
addb
mov
jns
mov
push
xchg
in
aam
aam
lods
jae
clc
lret
mov
or
int
nop
ret
outsl
or
xorl
push
gs
int3
les
xchg
je
push
xor
adc
xor
cmp
pop
adc
mov
leave
mov
sbb
mov
stos
xor
ja
or
mov
jne
xor
cmp
fdivs
sub
fiaddl
cmp
mov
jae
pop
jbe
mov
and
adc
jg
je
sub
loop
mov
push
fwait
push
mov
sub
enter
lret
xor
shll
insb
fstpl
lahf
add
les
cmp
mov
aas
jns
cmp
xchg
or
pop
or
sub
fwait
ret
sub
leave
daa
je
hlt
xor
nop
and
jp
data16
fdivs
je
lahf
push
push
cmpsl
test
insb
mov
fbld
jae
test
outsb
cmp
mov
cmpb
mov
add
cmpsl
inc
fisttps
test
or
pop
dec
cmp
mov
mov
out
sub
stos
sub
bound
dec
cmp
inc
adc
fbstp
pop
jne
leave
repz
imul
adc
or
fimull
inc
pop
aad
lds
dec
mov
and
fidivl
insb
xor
rorb
sub
inc
addl
lods
adc
ja
mov
fistpll
loopne
ret
movsl
dec
clc
stos
inc
loopne
cmp
push
imul
lds
ljmp
inc
cmp
push
leave
pop
idivb
loop
fisubrs
pop
insl
clc
mov
xchg
push
cld
out
or
pop
fmull
xor
into
lea
aas
out
fisubl
sub
mov
in
stc
pushfw
xor
shlb
loop
xor
xor
adc
pushf
push
xchg
test
rcr
les
inc
pop
mov
nop
out
call
xor
divb
imul
xchg
lret
xlat
dec
xor
pop
and
cmpsb
jecxz
push
clc
and
lock
iret
jb
mov
inc
dec
inc
mov
js
xchg
dec
pusha
out
mov
rcrl
fdivrp
int
add
test
add
dec
test
loop
ffree
jnp
pushf
adc
sbb
jae
lods
in
jo
pop
dec
jecxz
jbe
mov
mov
pop
add
push
les
xchg
lods
mov
imul
movsl
push
pop
sbb
push
aam
sahf
add
popa
aam
push
movsl
adc
dec
sub
push
fdiv
repnz
repnz
gs
mov
xor
rcrl
or
xor
test
es
sub
in
shr
lock
mov
sub
mov
ja
xor
faddp
dec
fwait
test
and
inc
sub
pop
push
pop
or
and
xchg
cmp
and
std
arpl
jo
stos
cmp
jbe
sbb
mov
push
out
leave
mov
xchg
sbb
loop
out
gs
scas
int
xchg
xchg
jno
lcallw
dec
repz
adc
add
jbe
mov
shrb
dec
orl
mov
or
jg
sbb
loopne
mov
dec
and
pop
das
in
fimuls
mov
negb
mov
pushf
dec
mov
mov
mov
xchg
xchg
notl
mov
mov
add
loop
loope
shlb
adc
sti
pop
adc
test
outsl
dec
xor
mulb
dec
sbb
jp
xchg
dec
repz
test
imul
nop
lods
fildl
inc
movsl
push
and
enter
cmp
lahf
cmp
cmp
and
incl
xchg
sub
popa
dec
add
mov
mov
pop
mov
cltd
call
sub
mov
mov
fsubs
mov
aas
adc
add
mov
push
jl
test
and
inc
popa
jno
jle
mov
pop
shll
shlb
dec
xor
add
outsl
and
push
push
mov
sbb
pop
mov
pop
mov
push
loope
movsl
clc
xchg
sub
push
sbb
cmp
push
out
inc
lods
dec
movsl
cltd
icebp
pop
mov
out
icebp
pop
aad
or
test
cmp
mov
cmc
mov
loop
cmp
mov
fwait
jbe
dec
pop
or
je
mulb
mov
lds
in
lret
jbe
fldl
jge
pusha
adc
push
repz
pop
shlb
adc
hlt
and
fcomps
jne
adc
xor
outsl
sahf
add
mov
lcall
in
shlb
mov
mov
adc
fnstsw
lcall
pop
push
jmp
mov
dec
enter
xor
cmp
lret
cmp
aam
pop
push
jb
outsl
mov
xlat
mov
cwtl
push
lret
jb
cwtl
out
cmp
jp
xlat
dec
mov
xor
popa
pop
repnz
lods
and
clc
xchg
lea
movsb
fdivl
mov
ret
test
das
jno
cmp
popf
sub
out
lcall
push
sbb
inc
dec
pop
fcmovu
push
mov
lret
mov
mov
gs
cmp
cmp
or
add
push
gs
subb
pusha
fcmovu
dec
push
push
sub
sbb
xor
std
sub
in
or
test
sbb
test
cwtl
mov
daa
js
push
and
and
xchg
das
rcl
add
in
push
outsl
fisubrl
mov
xchg
mov
testb
jo
in
mov
push
aam
mov
fisubs
jle
xor
xchg
test
cli
sbb
jp
pop
insl
push
xor
lds
test
pop
add
adc
inc
lock
inc
imul
std
dec
xor
dec
in
les
dec
push
jp
in
and
ret
mov
push
sub
fldt
insl
cmc
xor
fdivr
cmp
fmulp
sbb
insb
pop
mulb
dec
xor
mov
dec
mov
xchg
sbb
pop
popf
fwait
mov
aad
adc
mov
cld
les
popa
js
mov
ret
xchg
call
mov
cli
add
lahf
notb
sub
daa
ss
hlt
out
adc
jno
movl
jne
or
xlat
mov
out
into
inc
les
add
lahf
imul
sub
jle
out
sar
sbb
jmp
sub
int
xlat
pop
sub
inc
sub
xchg
push
adc
lahf
mov
jo
out
xor
xorb
inc
xor
lea
mov
xchg
ret
sbbb
push
leave
cmp
ljmp
movsb
inc
cmc
pop
push
mov
push
ja
inc
stc
movsb
mov
imul
add
xchg
loop
add
in
add
push
and
cmc
cmp
jnp
ds
out
lea
and
xlat
xor
rorl
mov
inc
test
sti
jg
sub
xor
subb
push
leave
les
xchg
cli
push
ss
cli
pop
add
pop
or
xchg
add
repz
adc
pop
imul
mov
sbb
pop
aaa
mov
aam
lods
sbb
mov
cmp
push
icebp
clc
mov
ss
out
inc
mov
pop
dec
lock
and
aaa
or
xor
ret
andb
push
outsl
ja
movsb
inc
adc
in
push
push
mov
out
frstor
aam
add
imul
push
and
test
stos
in
xchg
inc
push
push
and
sbb
sub
scas
xchg
mov
test
sarb
jp
orl
imul
scas
xchg
clc
or
mov
pushf
inc
in
sub
pop
roll
sub
xor
cmpsb
push
and
pop
ja
jge
xor
xchg
xor
es
adc
shll
add
dec
nop
mov
inc
cmp
mov
pop
int
xor
scas
lock
push
sbb
push
jle
aaa
ds
push
dec
push
mov
or
jmp
mov
xchg
mov
inc
mov
or
dec
stos
xlat
cmp
adc
int
in
in
subl
sub
jo
pop
or
out
xchg
shlb
dec
idivb
repnz
add
mov
jp
out
jno
push
clc
cmp
aad
test
mov
fdivrl
push
iret
imul
cmc
mov
cltd
jl
fwait
add
jle
gs
mov
dec
call
jl
daa
pop
into
xchg
push
cmpl
sub
add
jns
xor
lahf
ljmp
scas
push
scas
test
fs
cmc
dec
out
out
cmp
test
bound
out
in
fldt
xor
and
aas
inc
int
xor
cltd
lds
sbb
push
jne
jbe
cmp
mov
xchg
and
push
out
addb
scas
mov
sub
stos
sti
jo
icebp
jbe
call
scas
out
add
mov
into
cmp
jecxz
xchg
push
icebp
out
inc
repz
and
ret
inc
sbb
or
pop
mov
fs
jae
lods
or
in
mov
sub
rorb
popa
sahf
test
push
leave
call
mov
inc
and
faddl
adc
mov
sub
mov
repz
sbb
cmp
sbb
pop
cmpsb
xor
mov
in
sub
gs
or
add
jg
jecxz
lcall
out
cld
inc
fcompl
in
test
xor
fstpl
mov
inc
outsl
loope
mov
outsb
sti
jo
add
les
jb
gs
cltd
xor
push
movsb
leave
lret
or
loopne
push
xchg
loop
dec
sti
cs
mov
dec
sbb
xchg
pushf
mov
insb
daa
nop
daa
pushf
adc
mov
out
mov
cmp
in
scas
push
add
adc
xchg
mov
adc
inc
inc
mov
mov
pop
inc
or
mov
mov
or
in
int
pusha
sub
out
test
or
jecxz
sbbb
rcrb
xor
in
fldcw
stos
pop
rcrl
sbb
jl
mov
fs
push
shll
add
arpl
hlt
sti
insl
fcmovnu
mov
xor
icebp
mov
and
jno
push
rcr
xchg
repz
int
out
ss
dec
loope
lods
imul
int
clc
and
and
bound
lock
ret
xchg
out
push
and
movsb
pop
mov
shlb
dec
int3
sbbb
sbb
stc
pop
bound
in
lcall
pop
outsl
ljmp
shrl
dec
sbb
shll
rolb
bnd
sbb
inc
sub
lea
sbb
pop
sbb
out
leave
jmp
imul
stos
mov
cmp
iret
inc
xchg
lahf
and
hlt
leave
dec
enter
scas
mov
into
mov
out
add
movsl
test
sbb
test
cmp
iret
pushf
in
push
cmp
fnstenv
sbb
aam
in
dec
push
test
lcall
add
jnp
cli
daa
into
idivb
in
fcmovb
mov
lock
mov
fnstenv
js
inc
mov
add
test
dec
subb
and
pop
xchg
negb
jae
add
psrlq
adc
es
jo
sub
mov
mov
fcmovnbe
in
mov
push
mov
xchg
cltd
xchg
nop
sahf
cmp
iret
sub
xor
lods
pop
test
adc
push
push
cmp
mov
scas
pop
enter
jl
or
jns
icebp
pop
das
loopne
fadds
and
xchg
xor
jns
test
add
lret
lahf
mov
lds
mov
nop
in
sub
fisttpll
cwtl
fstpt
dec
sub
stc
jecxz
arpl
roll
push
dec
sub
ja
dec
adc
dec
scas
call
pusha
pushf
fstps
jo
mov
and
sub
sub
mov
cltd
rolb
cmp
mov
fwait
cmpsl
push
mov
add
xchg
shl
xlat
sahf
add
or
shr
cltd
xlat
or
jo
cmc
cli
shrb
sbb
cmpl
adcb
aam
add
lret
mov
push
aaa
cmc
adc
xor
pop
sbb
xorl
movsb
test
sbb
fisttpll
mov
xorl
xor
je
xchg
jae
xchg
dec
ja
out
push
out
add
hlt
cmp
add
ss
add
sti
cmp
pop
fdivl
sub
cltd
jae
pop
ret
movsl
shrl
cmp
repnz
test
lcall
aas
jp
fbld
cmp
das
mov
imul
and
pop
and
out
pushf
or
xchg
adc
adc
cltd
sbb
pop
js
aas
in
test
movsb
aas
cmp
stc
flds
fstpl
add
sbb
xchg
popa
sbb
movsl
iret
iret
pop
or
xor
mov
adc
add
or
into
xor
adc
cli
scas
dec
jno
js
int
mov
movsl
push
out
jno
call
adc
jae
xchg
dec
or
or
jg
enter
in
lods
loop
jbe
and
pop
mov
sub
lock
sbb
call
mov
mov
cmc
mov
addr16
aas
inc
inc
mov
iret
jle
pop
movsl
cmpsb
xchg
stos
add
arpl
xchg
pop
cmp
icebp
rolb
cmc
mov
lds
dec
test
mov
mov
inc
iret
push
mov
ds
jge
push
ror
jg
or
test
push
shlb
repnz
cli
jns
scas
cli
int3
pop
dec
faddl
push
frstor
pop
mov
dec
fwait
jnp
popa
sub
test
push
xor
and
xor
cmp
or
fldcw
ret
aas
adc
lods
mov
pop
add
out
add
loope
aas
leave
shll
push
lret
clc
add
xlat
repz
push
push
mov
xchg
xchg
jecxz
pop
ja
mov
xchg
outsb
test
mov
sar
mov
flds
test
popf
lahf
push
cmpsb
popa
xor
lahf
mov
mov
mov
mov
int3
jne
je
fidivrl
dec
fwait
mov
mov
hlt
fimull
adc
pusha
incb
vphaddubw
sub
dec
fstpl
int
popa
lahf
movzwl
mov
pushf
in
lods
iret
aam
jp
adc
mov
dec
pusha
pop
push
xor
dec
xchg
ljmp
dec
sarb
test
cmp
fisubrl
mov
sub
pop
shr
mov
rolb
test
xchg
notl
cmp
test
push
or
mov
popf
mov
andw
xchg
fmull
cmpl
int3
dec
fnstenv
pop
sub
inc
xchg
push
hlt
ret
cmp
jle
jb
mov
arpl
cs
call
testl
mov
inc
adc
test
sbb
push
std
mov
cmpsl
mov
lcall
jo
xlat
mov
dec
pop
xorb
iret
mov
test
push
xchg
dec
out
repz
ficoml
jg
into
fisttpll
nop
mov
out
and
arpl
and
pop
icebp
inc
pop
cs
lret
push
cmpsl
xor
lret
push
adc
sbb
outsb
into
ret
push
jle
or
mov
add
fistps
xor
ffreep
or
sub
repnz
mov
test
int
cmpb
or
aaa
cmpsl
pop
mov
imul
xchg
jmp
jl
adc
xchg
aas
lods
jae
push
iret
sti
and
hlt
in
stc
test
test
inc
xchg
mov
jno
xorb
hlt
insl
ja
jb
push
xchg
sbb
mov
xchg
out
je
or
repz
xchg
jmp
test
inc
int
stc
fwait
imul
pop
pop
pop
lret
adc
ljmp
add
sbb
inc
xor
push
mov
fisubl
dec
dec
push
in
mov
scas
pop
jl
and
push
repnz
xor
mov
pop
clc
pop
and
sbb
mov
sub
sbb
lea
testb
movsb
jne
int3
adc
add
mov
sar
outsl
aas
faddl
fistpl
jnp
inc
pop
jmp
fisubs
test
mov
jg
push
fstpl
jp
adc
fs
xor
mov
pop
cmpsl
push
jmp
out
js
ss
push
ss
xor
sub
fmull
mov
notl
adc
ss
arpl
hlt
mov
pushf
imul
femms
sub
int3
bound
roll
sti
jb
cmp
mov
dec
stos
xor
mov
cltd
cmpl
enter
call
push
mov
sti
fistpl
addb
sbb
sbb
sub
push
shrl
sahf
aaa
mov
pop
imul
nop
movsb
add
ja
pop
adc
dec
pop
lret
int
xchg
mov
mov
ja
push
sbb
inc
inc
add
add
sahf
js
or
js
stos
outsl
jecxz
rcrl
mov
mov
xchg
add
cmp
dec
test
fwait
cld
xor
hlt
push
rorl
dec
pop
cmc
mov
and
jg
enter
lds
les
das
mov
into
arpl
and
enter
pop
adc
pop
rcrb
mov
mov
jmp
into
mov
ljmp
mov
push
push
int3
stos
test
popf
cmpsb
lret
pop
jo
xchg
mov
lahf
adc
adcb
fucomip
mov
cwtl
fdivs
inc
mov
or
sarb
icebp
jmp
les
cmp
mov
mov
fildll
xor
jae
arpl
push
stc
push
int
sub
out
or
mov
pop
pop
inc
adc
sbb
fucom
call
rolb
sbb
sub
sbb
adc
xchg
sahf
nop
dec
lea
jp
xlat
rcll
gs
push
lahf
push
mov
sub
adc
pop
out
and
sbb
cmp
pop
push
in
and
mov
xor
inc
daa
push
fiadds
cmp
lahf
or
lds
js
cmp
xchg
xorl
add
orb
mov
and
cmp
int
dec
jmp
push
mov
push
jne
mov
stos
shl
testl
lret
jbe
mov
int3
bound
and
pop
push
loopne
cmp
or
push
xchg
mov
in
pop
lret
movsb
push
mov
dec
repz
cltd
cltd
test
and
mov
sub
and
or
xor
fs
and
scas
push
add
insl
jne
je
mov
imul
xor
ss
lret
and
hlt
xor
mov
mov
cmp
mov
imul
jmp
jle
enter
int
aam
adc
aam
xchg
add
std
leave
pushf
icebp
nop
adc
lock
call
push
aad
push
mov
jmp
jg
push
hlt
adc
xchg
fimuls
mov
mov
call
dec
push
mov
clc
mov
xchg
das
fistl
mov
xorl
mov
jno
pop
adc
jle
mov
mov
imul
stos
arpl
add
lea
sub
cmpsl
cmpsb
mov
lahf
mov
arpl
mov
mov
and
cld
jnp
mov
xchg
popf
cmp
dec
test
cmpsb
mov
sarl
inc
ds
hlt
mov
jb
push
test
mov
js
jns
and
js
adc
pusha
insb
ljmp
out
lods
inc
inc
add
push
insl
pop
xor
cmp
xchg
inc
clc
sbb
notb
je
xchg
aas
gs
int
cwtl
jle
xchg
xor
push
sub
inc
dec
cltd
lds
iret
jge
and
das
mov
sarb
adc
ret
jp
pusha
dec
mov
rorb
fs
xor
test
fwait
or
movsl
add
out
and
dec
push
and
push
dec
dec
mov
addb
add
xor
in
and
mov
jg
push
insl
add
mov
test
or
mov
lcall
sbbl
shlb
sarl
sub
jl
cmp
jb
lds
cmp
in
es
in
jmp
dec
cmc
mov
add
dec
jecxz
enter
push
dec
arpl
or
push
cmp
or
fidivrs
jl
or
push
and
mov
scas
movb
outsl
outsl
pop
subb
mov
mov
add
ljmp
std
cmc
push
std
cmpsl
or
pop
stos
insb
xchg
imul
xor
pop
loope
sbb
and
mov
mov
js
xor
jl
aas
cmpsb
inc
loope
adc
or
test
add
notl
pop
int3
push
sub
lods
mov
scas
daa
test
out
pop
lods
int3
push
loopne
add
mov
sub
outsb
sbb
adc
cli
arpl
cmp
jbe
sti
scas
in
pusha
sbb
push
add
sbb
and
shrl
ret
rorl
and
out
jo
push
aaa
scas
cmc
sahf
jmp
or
hlt
xor
bound
xchg
adcb
scas
lret
xor
sub
int
out
mov
shll
daa
stos
fcoml
dec
cmp
mov
sbb
pop
mov
jle
push
sub
adc
fs
shll
add
add
nop
nop
sbb
fcomps
xchg
arpl
adc
aam
push
out
cltd
push
movsb
xchg
xchg
sbb
inc
pop
or
push
mov
xchg
jnp
add
popf
aas
add
sahf
jg
dec
xor
fimuls
or
enter
add
movsb
imul
loopne
lea
xchg
gs
ljmp
dec
ret
fs
lret
fmuls
and
std
sub
imul
fsin
ret
pusha
and
ficomps
xor
mov
dec
imul
push
inc
push
sbb
adc
mov
cmp
jl
inc
push
shlb
pop
mov
loope
mov
dec
push
mov
subb
imul
sbb
cwtl
sbb
and
cmp
lcall
lcall
or
or
mov
aad
hlt
insl
inc
add
lahf
mov
mov
in
out
mov
pop
mov
lahf
push
stos
popf
cmp
fwait
scas
add
add
lahf
lods
mov
aam
jo
movsb
jo
or
es
fnstcw
ja
aad
mov
sti
push
jle
add
mov
push
mov
fsubs
mov
mov
aam
pop
loope
in
pop
push
xchg
sub
jnp
mov
jle
inc
pushf
add
loopne
mov
mov
pop
std
int3
stc
push
inc
mov
sahf
out
mov
int3
mov
daa
xor
mov
mov
insl
sahf
mov
sbb
push
jge
scas
fmull
xchg
jg
mov
mov
mov
int3
and
iret
aad
pop
push
push
repnz
xor
aam
push
push
cmpsb
inc
add
repz
cmp
fiaddl
xchg
mov
nop
cvtpi2ps
and
mov
les
imulb
shrb
inc
xor
mov
test
mov
fstl
in
xor
push
sbb
ja
in
mov
inc
sub
into
bound
fdiv
fisttpl
cmp
sbb
pop
ds
in
sbb
pop
add
cmpsb
outsb
in
bound
mov
gs
outsl
mov
mov
jecxz
and
nop
inc
add
cmpl
xchg
mov
test
sub
sub
or
inc
sahf
imul
or
jbe
sub
bound
loope
arpl
hlt
sbb
or
mov
add
dec
fdivrl
dec
imul
std
das
repnz
pushf
pushf
enter
or
xchg
xchg
jae
idivb
or
ret
ja
mov
icebp
jmp
sub
out
inc
push
ds
pop
dec
jg
shlb
int
addr16
enter
sbb
cmpl
xchg
or
stos
cmp
nop
in
aaa
sahf
jb
aas
mov
and
or
dec
xor
inc
outsb
dec
pop
outsl
inc
or
sub
jns
frstor
in
scas
sub
add
imul
mov
cwtl
mov
and
pop
pushf
xchg
mov
xorl
cwtl
aaa
aam
dec
xchg
fucom
xor
mov
add
test
test
mov
xor
popa
or
mov
mov
jge
mov
jg
pop
ret
test
lods
aam
or
xchg
and
fnstcw
pop
repz
lock
fiadds
mov
test
fdivl
xchg
push
rclb
mov
jo
lret
or
outsb
and
jp
jo
repz
sub
mov
insb
cmp
repnz
mov
pop
add
cmpsb
mov
or
dec
sub
cmp
jbe
mov
inc
loopne
dec
in
push
mov
rcrb
sbb
lcall
outsb
xchg
cmp
enter
inc
sub
cld
add
mov
fstps
mov
push
and
xor
mov
pop
jbe
dec
lcall
cmp
adc
enter
lret
pushf
sbb
push
fmulp
sbb
lea
jbe
mov
test
das
enter
jb
jge
cwtl
movd
gs
test
add
imul
je
stc
outsl
cli
lea
addr16
push
jl
lahf
xor
test
xchg
mov
std
add
xor
dec
leave
data16
inc
fneni(8087
imul
aas
pop
lods
push
pop
pop
shrl
mov
mov
jno
jb
insl
imul
aaa
pushf
insb
add
rolb
push
lods
cmp
xchg
outsl
dec
xchg
xor
pop
pop
sbb
mov
jmp
push
lods
add
mov
adc
ja
leave
pop
add
out
fidivrl
xlat
sub
xor
adcl
cli
sahf
dec
xor
out
pop
push
or
or
enter
add
lods
jno
out
jle
test
push
push
mov
aam
mov
stos
in
rolb
into
imul
mov
pop
or
lcall
cmpsb
repnz
and
jns
dec
push
fists
fistpll
add
fwait
out
add
cmp
sbb
fidivl
mov
sbb
jg
leave
xchg
mov
adc
xchg
adc
inc
scas
jne
dec
rcrl
adc
in
xchg
out
dec
mov
scas
inc
and
sbb
ret
mov
mov
cmp
int3
push
fistl
sub
or
pop
push
mov
popf
je
mov
fnsave
mov
daa
jae
fiadds
mov
ret
test
popf
xor
mov
dec
mov
xchg
and
cmpsb
inc
xor
push
popf
sbb
je
mov
sbb
imul
mov
jle
inc
add
cmp
pop
xchg
rorb
mov
sub
cltd
add
adc
xor
or
gs
ljmp
push
inc
lock
pop
sahf
fldl
out
mov
pop
lods
mov
int3
int3
iret
addl
ljmp
pop
scas
push
mov
push
inc
inc
mov
std
stc
dec
arpl
mov
popa
push
popf
add
lea
enter
pop
push
mov
xchg
push
sbb
jmp
adc
je
arpl
es
les
push
cltd
mov
test
mov
pusha
in
inc
loopne
enter
aaa
ja
add
out
stos
jns
je
mov
cld
pop
pop
cmp
test
std
notl
pop
push
add
xchg
cs
push
popf
mov
jle
jle
daa
mov
push
adc
repz
clc
out
sbb
mov
push
bound
dec
or
sahf
icebp
sbb
cmovae
inc
repnz
dec
jbe
mov
push
repnz
icebp
xor
lock
retw
lods
push
pop
add
sahf
pop
faddp
jbe
push
push
add
out
cwtl
enter
inc
test
in
push
pop
jbe
pop
inc
cmpsb
push
mov
mov
movsb
fists
bound
inc
cmp
scas
das
fsubrl
ljmp
add
cmp
int3
inc
xchg
repnz
xchg
fisttpll
sarl
jg
scas
fcomps
mov
mov
dec
dec
out
dec
xor
xor
pop
pop
ror
pop
push
mov
test
shrb
inc
loope
fistpll
dec
inc
mov
push
and
ja
popf
mov
sub
fnstenv
sub
jl
enter
inc
pop
fwait
sahf
lret
xchg
or
lret
movsl
inc
xchg
lds
movsl
or
dec
cmp
and
movsb
leave
mov
js
sti
test
lret
das
imul
cmc
sub
hlt
bound
in
inc
xor
pop
sbb
xchg
ss
jns
scas
mov
push
pop
mov
jne
pop
aad
mov
icebp
jne
lock
push
push
dec
fcomps
clc
cmp
mov
mov
imul
dec
push
mov
push
mov
push
push
hlt
cmp
cmp
mov
jle
xor
push
inc
decl
enter
clc
and
xchg
les
stc
pop
mov
mov
and
ja
out
dec
movsl
mov
pop
xlat
pop
mov
jb
pop
shl
add
lea
das
mov
pop
xor
cmp
je
jno
mov
mov
push
fildl
xor
push
icebp
pushf
std
outsb
shlb
cmpsb
pop
sarl
xchg
aam
mov
xchg
or
fwait
lock
dec
add
cmc
aam
jmp
xor
pop
mov
fwait
dec
lods
sbb
xchg
ja
loopne
jl
dec
jl
popa
mov
jbe
pusha
pop
fld1
aas
ss
mov
and
push
or
push
sbb
loop
repnz
push
mov
mov
xchg
int
mov
pop
insb
mov
and
jns
iret
cmpl
loopne
bound
mov
jp
in
iret
or
sti
xchg
enter
mov
jle
xchg
outsb
aad
inc
pop
add
movsb
clc
mov
cmp
dec
in
outsl
fisttps
insb
add
dec
sub
movb
or
mov
test
pop
int3
xor
iret
fwait
subl
mov
repz
xchg
stos
testl
push
cmp
sbb
lock
fdivr
out
mov
add
jecxz
xor
mov
in
xor
fldcw
pop
and
xor
pop
sti
int3
xchg
and
mov
loope
shlb
jae
xchg
stos
vpmulhrsw
sbb
std
cmp
or
and
adc
mov
loop
jbe
xor
mov
lahf
loopne
cmpsl
lds
nop
cmp
bnd
flds
orl
icebp
mov
pop
dec
mov
jo
fs
adc
xchg
add
test
sti
inc
push
or
xor
push
inc
imul
aam
negb
cmpsb
aam
je
cli
sub
test
cmp
and
nop
push
and
out
mov
pop
testb
jp
xor
mov
nop
mov
xchg
sub
mov
pop
mov
stos
mov
outsb
sub
adc
mov
mov
cmpsl
or
popf
imul
and
fcmovu
add
stos
fdivp
or
jecxz
out
outsb
mov
loope
sbb
jnp
lahf
mov
hlt
clc
push
out
mov
insl
test
jecxz
jno
dec
push
sbb
pop
sti
and
pop
out
repz
inc
cmp
aad
inc
or
popf
push
or
popf
in
out
lods
mov
sub
mov
adc
out
push
pop
and
rorl
cmp
icebp
insl
cld
out
add
jne
adc
push
lods
pop
iret
and
cmovp
dec
pushw
add
and
out
jle
jno
daa
inc
xchg
aaa
mov
push
push
clc
psubsb
imul
test
fdivrs
stos
pop
stc
shll
pop
cmpsb
add
xor
loope
jge
pop
test
test
dec
sbb
push
inc
and
or
sub
insl
adc
lods
imul
pop
push
lock
loop
jae
cmp
data16
and
cmpsl
cmp
ja
pop
int
je
arpl
xchg
jnp
test
inc
ret
shrl
imul
dec
test
stos
xlat
or
es
push
cmp
aas
adc
aam
test
ret
stos
fmuls
test
push
inc
mov
and
push
sbb
cld
outsl
movl
movsl
mov
mov
sub
sbb
bnd
pop
xchg
je
loopne
lods
mov
pusha
mov
test
in
int3
inc
jmp
cmp
pop
stos
cmpl
repnz
incb
fildl
inc
cmp
pop
xor
repnz
or
xor
xchg
divl
inc
dec
stos
mov
inc
jo
in
pop
xchg
xchg
dec
push
mov
mov
add
stos
fistpl
mov
stos
adc
or
outsb
daa
or
and
lret
dec
xchg
std
inc
call
icebp
leave
ja
jmp
loope
adc
mov
pushf
imul
mov
mov
mov
add
add
addb
add
add
sub
add
ss
add
mov
add
adc
add
mov
add
cmp
outsb
jb
cmpsl
xchg
dec
ss
scas
mov
jge
push
shrl
mov
mov
sbb
fisubs
outsb
scas
or
inc
push
add
je
sub
test
xchg
inc
insl
fisttps
sbb
std
mov
outsl
stos
das
out
push
pop
sub
xor
in
les
mov
dec
xor
add
cs
cmp
loopne
fnsave
pop
mov
push
lea
fsubrl
xor
es
ret
loopne
ljmp
movsl
sub
mov
ljmp
mov
repnz
push
xchg
adcb
pop
cmp
lcall
adc
orb
adc
mov
mov
jo
and
cld
cmp
push
lcall
loop
xchg
outsb
adc
adc
movsl
aas
sbb
or
pusha
jecxz
and
test
push
iret
adc
xlat
sbb
mov
out
add
inc
or
fisttpl
xchg
xchg
push
sub
push
mov
fidivl
js
dec
leave
inc
sbb
jmp
popa
mov
lods
add
mov
xor
push
dec
xchg
adc
addr16
test
or
add
pop
or
pop
rcr
push
sbb
mov
subl
fimuls
int
ret
pop
add
rorb
imul
testl
pop
lahf
std
jo
lahf
mov
mov
out
punpcklwd
mov
sti
mov
mov
push
ss
aaa
sbb
mov
xchg
scas
cmp
jns
mov
lcall
test
cmp
shll
leave
sub
fnstenv
and
inc
cmp
repz
out
test
cld
lahf
cwtl
into
hlt
and
sub
movups
or
jl
sti
cmp
jl
adcb
adc
jl
ljmp
fildll
jae
cmpsl
dec
jbe
cwtl
mov
rcrb
and
pop
and
out
ljmp
jg
das
pop
cwtl
sbb
adc
das
mov
movsb
imul
mov
dec
cli
rcrl
test
andl
cmpsb
add
cmp
fdiv
push
aad
shrb
gs
cmp
jp
ljmp
mov
sub
rorl
xorl
pop
inc
pop
jnp
into
add
gs
xor
and
stc
cmp
sub
adc
cli
out
inc
xor
sub
aad
int3
mov
faddp
mov
mov
callw
mov
mov
outsb
lock
leave
cs
sbb
xor
imul
inc
mov
hlt
into
movsb
clc
mov
imul
scas
pop
add
push
sub
mov
es
fnsave
add
pop
arpl
bound
js
jo
pop
adc
adc
bound
bts
jne
arpl
repnz
jb
sbb
pop
sub
mov
push
jg
stc
lcall
sar
sub
fcompl
sub
int3
jmp
cmp
pop
xor
xor
adc
mov
in
push
sub
in
jmp
jl
jbe
js
add
dec
je
enter
and
adc
cmp
imul
dec
push
lcall
test
mov
scas
cmpb
mov
jb
sbb
cmpsl
mov
mov
cltd
push
push
out
clc
popa
pop
xor
sub
test
js
sbb
loop
add
in
mov
jb
dec
add
test
stos
push
ret
mov
add
mov
in
cwtl
aad
les
lcall
pop
add
sub
fisttpl
jo
scas
js
sbb
fsubrp
push
jle
int
cli
mov
scas
inc
cmpsb
cmp
and
adc
dec
xor
outsl
xor
adc
mov
push
push
add
jl
dec
aam
or
sbb
data16
hlt
aam
mov
pop
dec
mov
mov
scas
fisubs
aaa
cltd
or
lock
in
in
sbbl
sub
and
ret
in
js
stos
out
inc
lods
push
subb
fstl
sub
sub
ss
in
push
or
mov
mov
cld
adc
dec
xchg
cs
cmp
mov
pop
fisttpl
sbb
or
add
push
xor
mov
adc
pop
jae
fstpt
test
test
adc
adc
ljmp
dec
cld
sbb
cltd
ffreep
pushf
sub
xchg
xor
inc
pushf
mov
in
pop
nop
js
imul
xor
jp
movl
inc
xchg
add
addr16
dec
pop
shrb
cmpsb
test
ss
sub
cmp
fwait
mov
or
aaa
or
insl
rcrb
or
xchg
mov
mov
frstor
divb
adc
frstor
insb
jmp
jbe
bound
orb
stos
cmp
test
sub
cmp
movsl
imul
adc
popf
repz
mov
into
test
xchg
add
fisubrl
andb
push
mov
adc
je
test
push
mov
daa
mov
ljmp
and
jns
leave
mov
xchg
push
les
pop
in
and
pop
and
insl
lea
cmp
sbb
adc
fiadds
push
xor
insl
mov
std
lcall
add
lret
aas
cmp
pop
add
scas
fbstp
shr
lahf
clc
fcomi
in
xchg
outsl
cmc
sbb
mov
lret
enter
lret
lahf
sahf
fisubrl
divl
fidivs
das
pop
repz
ljmp
cmc
xchg
hlt
ret
das
jge
bound
flds
sbb
cld
fcomps
push
pop
loopne
push
push
ss
in
add
testb
sub
ljmp
mov
mov
dec
sbb
cs
mov
call
nop
pop
sub
ss
cmp
sahf
xor
dec
ja
mov
adc
adc
leave
movsb
jbe
xchg
inc
inc
mov
sub
jo
mov
jg
mov
or
pop
mov
sub
imul
test
ss
xor
test
cmp
iret
jns
pop
sub
adc
xchg
decl
dec
mov
push
jge
lret
mov
xor
mov
in
dec
loop
arpl
adc
shrb
ret
mov
mov
or
jle
inc
jo
cmp
jg
mov
or
negl
xor
pop
adc
xchg
xor
push
jns
loope
xchg
in
sub
inc
push
dec
or
int3
jne
mov
aam
xor
dec
ja
lret
jl
je
xchg
mov
lock
fwait
aaa
xor
fstps
xor
popa
mov
testb
xor
push
mov
sti
inc
movsl
adc
ja
dec
inc
lret
mov
mov
jg
rol
je
fwait
sbb
loope
mov
sbb
pop
lahf
sub
lret
lret
cld
mov
mov
int3
add
xchg
xchg
fisttps
rcl
mov
ret
scas
je
mov
fwait
aas
movsl
sbb
sbb
jbe
dec
pop
insw
inc
jbe
or
testl
mov
cltd
sub
pop
lea
xor
cli
jecxz
inc
xchg
pop
jo
cmpsb
fdivrp
sbb
inc
push
adc
mov
int
sahf
and
pop
out
pop
test
pop
mov
and
inc
sub
inc
flds
inc
shlw
add
adc
push
icebp
push
cmp
inc
or
adc
ljmp
imul
nop
aad
lock
loope
lock
fdivrp
cmp
push
jle
rcrl
mov
fists
pop
add
insb
inc
dec
xchg
sbb
inc
jp
lret
xchg
aam
dec
mov
push
jno
clc
cmp
lods
dec
pop
das
mov
jge
ds
jne
push
jp
int
sarl
sbb
mov
in
rolb
or
in
inc
dec
adc
fnstenv
jle
inc
lcall
ja
xchg
int3
mov
lods
sbb
shll
push
jns
in
xchg
into
sbb
daa
pop
jb
leave
or
push
es
inc
jmp
mov
imul
std
jne
push
fists
sbb
push
popa
pop
sub
lods
dec
cmpb
cmc
pop
push
add
pop
jecxz
inc
test
or
imul
nop
imul
jg
out
les
jle
std
rcl
in
jl
into
arpl
sub
push
ds
into
sahf
out
push
mov
pop
inc
aaa
and
jbe
mov
decb
mov
inc
pop
jo
loop
lahf
xchg
lock
mov
mov
sub
sub
sbb
dec
push
pop
xorl
jle
pop
jl
pop
scas
push
mov
in
xor
push
push
pushl
and
fwait
or
jmp
ljmp
sub
clc
mulps
loope
push
cmc
mov
pop
xchg
rclb
mov
out
dec
inc
push
adc
scas
hlt
das
add
inc
push
icebp
xchg
push
dec
shlb
daa
jg
push
add
xchg
mov
adc
ret
in
mov
fs
add
inc
cmpsb
stos
cwtl
and
jne
fcoms
jno
and
shr
es
inc
ret
jecxz
cmp
lods
jno
ss
adc
cmp
inc
push
out
or
repnz
inc
or
jmp
icebp
mov
jg
dec
xor
jo
or
mov
sub
xor
sub
lret
sbb
jmp
lcall
pop
or
add
std
loope
popa
xor
add
fcomps
shrb
xchg
push
loop
repnz
les
jmp
popa
mov
sbbl
cmpsl
fnstsw
mov
xor
imul
jo
push
test
insb
mov
push
test
adc
jl
sbb
jg
jge
lds
bound
into
int
mulb
and
stc
dec
syscall
add
mov
push
ds
xor
adc
cmp
sbbb
inc
addl
push
push
mov
popa
ret
scas
cmp
stc
and
sub
pushf
js
sahf
xor
or
movsl
add
sbb
lods
xlat
test
in
jo
push
std
scas
mov
and
xchg
adc
dec
repnz
fcmovnbe
mov
into
cmpsb
or
xchg
ret
sub
cmp
cs
out
xchg
xchg
push
sub
mov
xchg
icebp
mov
es
loop
mov
fidivl
mov
outsl
and
loopne
jbe
xchg
mov
sahf
and
test
adc
cmp
jmp
jns
jnp
add
outsl
adcb
xor
sbb
add
and
add
aam
insb
cmp
rorb
arpl
push
cwtl
lcall
jle
idivb
pushl
shrl
inc
sti
xor
mov
xchg
hlt
repz
iret
mov
jle
push
fldcw
sbb
les
shll
scas
int3
cs
outsb
popf
or
push
pop
rcr
fwait
cli
mov
adc
dec
inc
fwait
fwait
subb
xchg
add
push
xor
iret
nop
or
enter
adc
push
je
pop
lods
enter
mov
pop
xchg
cmp
push
push
pop
loopne
nop
adc
xlat
icebp
cli
dec
pop
pop
adc
and
and
pop
jne
fbld
adc
xor
dec
dec
in
cmc
cmpsb
mov
scas
mull
mov
push
and
lea
xchg
xchg
dec
add
arpl
or
add
scas
push
cwtl
dec
mov
movsb
xor
ss
sbb
aad
inc
add
int3
mov
sub
and
bound
mov
mov
jnp
int
sub
or
add
adc
xchg
pop
push
fcmovb
or
imul
rol
aad
cwtl
lret
fmull
je
mov
out
jnp
mov
mov
icebp
and
data16
xchg
lds
cmpsl
stc
push
cmp
jae
lods
aad
xchg
stc
inc
adc
dec
outsb
push
and
loop
stc
fidivl
aad
cmp
cmp
pusha
popf
dec
xchg
sub
mov
or
jno
sbb
mov
dec
or
mov
dec
xchg
lods
mov
ficompl
xor
inc
push
pushf
rdmsr
push
xlat
std
pop
lods
ljmp
andl
std
mov
push
bound
xor
lret
int3
push
mov
dec
arpl
cmp
jecxz
in
push
gs
adc
pop
cmp
or
mov
arpl
push
cmpsl
scas
test
sti
jno
pusha
xor
fistl
cmp
push
jbe
sbb
out
or
popa
int3
sbb
jns
ret
lahf
cmp
xor
dec
call
rorl
sub
adc
pusha
or
dec
aam
aam
repnz
dec
enter
jbe
push
sahf
pop
ret
jns
and
or
push
push
lods
js
xor
push
in
adc
or
aaa
je
popf
fld
mov
sti
add
add
or
cmpl
jo
js
sub
sbbb
aas
mov
push
in
out
pop
andl
repz
push
cmp
jecxz
int
push
jecxz
fstpl
mov
inc
jp
movsb
or
into
movsb
add
dec
pop
jl
xor
lcall
sbb
data16
mov
aam
fisubl
pop
jp
push
out
inc
clc
adc
jb
bound
mov
dec
pop
cmp
popa
push
sub
inc
cmp
lock
push
and
or
scas
sbb
pop
xor
jp
movsl
sahf
cmp
sbb
icebp
mov
or
pop
jbe
ljmp
jl
scas
xchg
inc
xor
dec
mov
in
fbstp
cs
sub
mov
or
pop
out
jno
lret
or
sub
or
dec
jecxz
test
dec
lahf
and
loopne
cmp
daa
inc
mov
xorl
and
sbb
mov
ljmp
cwtl
add
inc
ret
xchg
orb
and
mov
pop
add
pushf
das
out
repnz
les
iret
mov
sbb
add
bound
jmp
add
and
shrb
call
fnstenv
mov
shlb
or
aam
pop
mov
insb
cltd
mov
mov
pusha
pop
inc
ret
shll
xchg
mov
sahf
ret
sub
sbb
xlat
jl
leave
adc
mov
xor
dec
ret
jno
mov
jge
inc
cmc
dec
adc
shl
push
inc
mov
leave
das
xchg
sub
xchg
mov
fcompl
push
aas
ret
ret
out
push
add
or
cwtl
addr16
sub
mov
std
cmpsl
push
pop
push
sahf
pop
es
mov
lds
xchg
adc
cmp
inc
outsl
mov
dec
outsl
test
mov
push
popf
jle
push
lcall
jmp
push
mov
sub
xchg
aas
mov
push
or
test
or
push
jecxz
popa
xor
pop
movlps
mov
xchg
and
cmc
jle
pop
dec
pusha
jns
push
frstor
mov
ljmp
subb
dec
aaa
shll
push
subb
in
xchg
xor
addb
inc
aam
sbb
dec
mov
mov
inc
repnz
mov
ret
rcrl
dec
mov
arpl
std
repnz
or
fiaddl
je
mov
ljmp
or
ja
xchg
mov
divb
inc
cld
push
cwtl
ficompl
das
sbb
in
and
xor
iret
inc
xor
dec
jge
aam
jno
popa
xchg
repz
pop
mov
call
jge
mov
push
cli
in
add
lret
orb
xchg
push
pushf
sbb
int
push
clc
fcomip
sub
and
push
icebp
push
outsb
pop
pop
dec
dec
or
aad
add
out
pop
nop
mov
and
sbb
cmp
adc
addr16
int
fdivs
xchg
shll
dec
insl
cmp
mov
orb
imul
mov
ss
dec
repnz
mov
ja
daa
popa
ds
pop
inc
pop
mov
mov
mov
and
aaa
inc
sbb
loope
ja
outsb
adc
add
mov
stos
xchg
mov
pop
mov
lcall
pop
lret
push
pop
rorl
andl
xchg
sarl
js
int
hlt
leave
jb
out
lret
pop
sbb
insb
es
add
aaa
cld
push
clc
sti
divl
rcll
cmpsb
movsb
adc
enter
push
cmp
in
push
test
arpl
adcl
jae
cmp
out
pop
adcl
cltd
out
inc
push
inc
inc
stos
mov
movsb
rorl
aaa
outsb
bound
je
icebp
int3
pop
jb
jmp
mov
mov
lds
nop
mov
and
rcrl
sub
shlb
out
dec
ret
insb
cmp
jecxz
cs
lea
out
dec
add
xor
sub
shl
jmp
jg
loop
out
inc
sbb
fiaddl
inc
lods
or
in
add
mov
mov
call
dec
mov
lret
decl
pop
adc
out
std
xchg
lret
das
xor
push
test
cmc
lret
cs
scas
inc
mov
out
add
rcll
ss
mov
shll
aas
cltd
in
shl
and
out
adc
insl
xchg
bound
cli
outsl
mov
lock
jo
fwait
das
scas
rcrl
adc
push
push
jg
cmp
leave
jecxz
icebp
add
pop
rolb
pop
mov
push
cs
int
sub
xor
rep
cmp
addr16
inc
or
aas
mov
add
js
dec
dec
mov
hlt
xchg
das
inc
dec
leave
fmuls
idiv
in
add
lahf
dec
xor
xor
dec
loop
jnp
or
xchg
push
movsb
push
je
sahf
addl
out
lahf
ret
fs
cmpsb
inc
cli
lods
jae
popf
jbe
call
popa
popa
call
lods
and
icebp
mov
hlt
mov
aad
shr
push
or
pop
jb
jg
hlt
mov
out
js
cmp
out
idivl
inc
mov
adc
stc
push
out
in
repz
loope
lods
je
sub
fdivrl
sti
ljmp
sbb
fsubr
ss
sahf
cmp
addb
and
sbb
and
adc
or
and
sti
xor
jb
pmuludq
cmp
in
repnz
aad
test
clc
fnstsw
jge
roll
ret
xlat
lahf
out
imul
mov
clc
cli
into
test
jb
aaa
sahf
sub
and
andb
pop
xor
inc
icebp
lds
push
inc
shlb
mov
mov
std
aaa
sarb
mov
xchg
cmp
into
push
and
pusha
pop
cmpsb
arpl
mov
nop
jmp
mov
sub
es
cmc
insl
mov
movsb
stc
push
mov
cwtl
xchg
and
jp
fdivrs
aaa
nop
in
outsb
mov
inc
movsb
repnz
sbb
pop
sarb
sub
sbbb
jns
mov
mov
jge
and
lock
scas
insl
fs
scas
adcb
mov
or
sub
fmuls
iret
sub
mov
dec
shrb
xor
push
rcrl
and
mov
push
mov
cmp
ja
sub
jle
repnz
cltd
xor
fcomps
daa
push
repz
bound
mov
repz
xchg
sbb
divb
adc
scas
jmp
fidivl
cltd
xchg
jb
push
mov
jns
sbb
mov
incl
mov
push
in
mov
mov
lds
jge
and
or
xlat
test
adc
adc
aad
outsb
mov
iret
push
inc
js
shll
push
stos
mov
adc
fcmove
mov
testb
outsb
in
or
lret
xor
decl
jmp
mov
xor
pop
cmp
cltd
pop
sbb
jg
jmp
mov
and
stos
fisubl
les
inc
lahf
add
add
cmc
rsqrtps
jae
stos
adc
push
dec
push
add
fcmovbe
bound
call
fidivl
mov
lds
adc
aas
in
subb
inc
popf
jnp
cmp
and
sar
fildl
out
hlt
xchg
inc
or
mov
fwait
pop
xchg
and
xchg
adc
iret
jmp
lods
inc
push
xchg
cmp
lahf
cmp
or
dec
mov
dec
div
cltd
hlt
flds
movsb
insb
sets
add
in
xchg
jb
nop
jl
push
stos
outsb
lret
bound
cmp
es
cwtl
inc
xchg
loope
fistps
movsl
mov
sub
pop
cmpsl
mov
cmpl
lret
stc
add
mov
pop
dec
mov
test
cmp
push
lret
xchg
add
xor
mov
sub
loop
scas
cmpsl
sbb
rcrl
push
mov
sbb
mov
jg
or
or
mov
xchg
mov
add
mov
mov
repnz
jnp
dec
jne
repnz
clc
pop
sbb
mov
rcl
inc
sub
scas
sub
push
mov
cld
ds
lahf
notb
rcl
lcall
xor
in
rolb
sbb
mov
mov
es
jae
bound
pop
cmp
mov
mov
fadd
adc
test
push
push
mov
fadds
mov
jl
mov
stc
cltd
jae
pop
arpl
cs
testl
das
inc
testl
inc
les
ret
xchg
mov
cmp
sub
lods
pusha
mov
in
hlt
cld
xchg
fmull
push
pop
adc
lcall
mov
pusha
adc
mov
cmpsl
sub
inc
addl
sub
add
rol
xchg
xor
pop
and
aas
inc
jmp
rcr
adc
shrb
out
jno
or
scas
cld
ds
dec
pop
dec
pop
shll
nop
sub
sbb
das
mov
push
mov
out
outsb
add
mov
sarl
pop
or
and
test
cmp
stc
mov
es
test
inc
loope
sub
jge
add
add
inc
jo
enter
or
cmp
xchg
aas
sub
shrl
arpl
mov
data16
imul
push
sbb
stc
lds
dec
loopne
fistpl
shll
stos
movsb
cmp
stc
in
adc
std
mov
in
fiadds
sub
pop
pop
insb
aaa
repnz
cmpsl
outsl
popa
or
add
pop
add
lcall
and
sbb
xor
cmp
sbb
rcr
arpl
push
mov
add
or
mov
adc
mov
inc
not
aaa
mov
mov
cltd
mov
dec
insl
push
inc
ret
xor
dec
or
lds
pop
movsl
rolb
cwtl
ja
cmp
sub
dec
insb
test
dec
lret
xor
out
leave
dec
jnp
and
pop
movsb
dec
add
fsts
pop
adc
sub
or
add
icebp
fcmovbe
sarb
push
sub
push
sub
jecxz
xchg
nop
gs
cmc
and
cmpsb
and
and
test
push
lahf
inc
inc
mov
lcall
ficompl
int3
ljmp
int3
jl
xor
jle
test
mov
aam
cmc
inc
in
mov
gs
mov
xor
xchg
xorb
repnz
icebp
and
and
jecxz
insb
arpl
lret
in
mov
push
lds
sub
scas
mov
test
xchg
and
mov
push
ret
out
dec
add
mov
sub
inc
call
std
movsl
xlat
popf
mov
and
sar
mov
rclb
fisttps
mov
or
or
jg
mov
push
scas
shlb
dec
lods
pop
outsl
adc
xchg
fs
loop
and
cwtl
sahf
add
jne
xchg
pop
mov
dec
mov
jne
ss
add
stc
fidivrl
test
and
enter
js
movsb
mov
push
jae
daa
mov
std
sbb
mov
ja
jmp
imul
add
xchg
loope
mov
or
sbb
or
add
jecxz
dec
cmc
sbb
daa
dec
outsl
lods
out
test
jne
outsb
cwtl
dec
fidivrl
pop
int3
or
imul
out
pushf
jbe
adc
dec
push
push
enter
ficoml
jae
xchg
and
fisubrl
cmp
cmp
xchg
jmp
fbstp
idivb
lods
and
sub
xor
cmp
inc
add
lods
sbb
insl
iret
xor
les
in
sub
je
dec
popa
ret
push
cs
xor
insl
push
popa
ds
mov
outsl
jl
jne
dec
leave
sbb
push
pop
and
inc
jae
pusha
adc
dec
icebp
jmp
mov
loop
in
mov
sub
out
lds
outsb
sub
or
inc
rorb
jmp
add
and
cltd
hlt
sbbb
nop
xor
lea
inc
adc
stos
outsl
mov
xor
xchg
ss
push
and
rcr
cmp
int3
add
js
mov
xlat
xchg
jb
mov
mov
jle
negl
aaa
push
sub
repnz
stc
add
mov
pop
pop
out
xchg
xchg
sub
clc
scas
sbbb
inc
scas
imul
lods
pop
sbb
jge
in
rcrb
inc
and
pop
loope
mov
sbb
push
pop
xorl
into
xor
and
lock
mov
inc
pop
inc
mov
clc
hlt
or
fidivrl
test
mov
mov
ljmp
push
xor
jecxz
fstpt
scas
push
mov
mov
xor
cmp
loope
outsl
sbb
into
daa
inc
push
pop
sbb
xchg
sub
push
jmp
pop
xor
mov
push
inc
adc
mov
pushf
pushl
sbb
lcall
arpl
sbb
mov
loopne
or
push
push
daa
jle
pop
push
stos
and
pop
addl
pop
push
mov
inc
aad
sub
dec
sti
out
nop
adc
popf
sub
cmp
xor
lea
dec
ret
pop
or
add
cmp
pop
in
sub
push
fmull
fisttps
or
sub
jmp
orl
sub
shlb
jno
inc
inc
xlat
mov
push
das
pop
arpl
jns
sbbl
adc
dec
ljmp
jmp
push
mov
inc
or
sbb
add
fwait
js
pop
cmp
mov
loopne
rclb
addr16
mov
scas
rorb
xchg
or
dec
push
mov
mov
rcrl
push
pop
cmp
scas
adc
dec
mov
sbb
ret
jle
fs
or
lods
mov
mov
popa
test
xor
notl
cld
je
sbb
pushf
adcb
jno
xor
std
repz
mov
je
inc
stos
notw
push
xchg
mov
jmp
andb
aaa
inc
fdivrp
mov
or
push
xchg
addr16
pop
or
ljmp
repnz
mov
inc
jae
jl
inc
fxch
in
jge
pop
dec
cmp
jg
imul
push
mov
xchg
aam
sbb
cli
mov
sub
mov
push
cmp
sub
mov
pop
add
push
popf
cmp
pop
lods
inc
sub
imul
jp
outsb
ror
stos
sbb
sub
cltd
fsubrs
daa
leave
and
mov
xchg
nop
sysret
inc
outsb
mov
mov
lods
roll
repnz
pop
inc
inc
mov
mov
sbb
and
inc
cmpb
lods
retw
int
dec
sahf
jnp
xor
cmp
push
adc
push
push
iret
popf
pop
arpl
icebp
movsb
jae
jecxz
mov
movsb
imul
cmp
dec
sbbl
ljmpw
cmp
lret
push
jmp
rol
shlb
cltd
in
xchg
into
cwtd
cmc
movsb
xor
bound
cli
test
or
out
out
mulb
push
mov
xchg
adc
dec
cld
xchg
xchg
push
xchg
or
js
push
jg
stos
cmpsl
cmp
dec
dec
lods
clc
sbb
js
pop
cld
in
std
dec
mov
sub
in
in
pop
pop
scas
mov
rorb
jae
stos
sbbb
jne
in
scas
cli
mov
test
fwait
repnz
cltd
xchg
mov
jmp
pop
add
mov
sahf
mov
cmp
fs
mov
xchg
das
sbb
aam
jmp
ret
fmuls
mov
lcall
jecxz
fwait
inc
dec
mov
dec
fdiv
pop
xor
xor
lret
dec
dec
inc
xor
rclb
pop
jecxz
cltd
ret
adcb
push
jmp
inc
call
and
jbe
scas
sbb
insb
jnp
adc
jnp
jmp
sbb
jl
mov
fisubrl
out
neg
dec
jns
mov
or
xchg
push
xorl
dec
or
scas
mov
je
and
imul
dec
xor
scas
iret
in
fwait
aas
adc
inc
fbld
push
jnp
jae
out
mov
mov
jle
vpsubusb
es
mov
xchg
adc
xchg
adc
lcall
dec
movsl
pop
cmp
enter
rolb
inc
out
mov
pop
push
loop
xchg
push
cmpsl
lahf
add
rorb
aad
sub
mov
xor
cmp
push
and
jle
cwtl
push
cli
or
xorb
adc
out
pop
mov
add
sbb
loopne
adc
daa
sbb
and
lahf
push
xor
cmp
icebp
cmp
std
dec
hlt
add
das
dec
mov
or
xchg
dec
mov
arpl
or
add
ret
sarb
addl
jb
fldcw
mov
cmp
cli
push
xchg
repz
subb
scas
test
das
jge
or
or
inc
inc
pop
out
lock
or
jns
jg
push
push
in
cmpsl
stos
sbb
mov
enter
mov
mov
sub
sub
pushl
testb
jns
xchg
insl
lret
inc
mov
xor
adc
xor
cmpsl
leave
sbb
test
inc
sub
arpl
rorb
outsb
sbb
jo
dec
mov
test
add
and
mov
jg
sbbb
and
or
js
jge
lock
rep
push
mov
push
adcb
cmp
cmp
push
inc
fwait
lcall
in
sub
insb
cmpsl
js
leave
dec
pusha
jnp
jne
push
out
mov
ss
mov
sbb
shlb
xchg
je
imul
push
push
xchg
addr16
jnp
dec
inc
xchg
in
cmp
xlat
imul
inc
mov
jb
inc
sbb
cmp
loopne
out
lock
mov
fists
mov
daa
lods
push
repz
bound
inc
ljmp
mov
xchg
xlat
jnp
add
inc
push
ret
jb
inc
jne
repnz
pop
inc
bound
imul
and
push
mov
xlat
push
pop
mov
xchg
push
jp
and
js
pop
pop
enter
int3
xlat
and
daa
sbb
mov
dec
sub
imul
xchg
pushf
jge
push
test
orl
scas
xchg
fadds
gs
test
xorb
jne
icebp
fmuls
pop
or
jae
inc
sti
mov
jno
jmp
or
outsl
mov
sub
addl
cmp
xchg
adc
fildl
dec
mov
mov
sti
jo
adc
xchg
es
mov
pop
push
mov
mov
clc
call
pop
inc
nop
mov
subl
out
fcoml
jl
add
mov
in
or
dec
push
add
push
iret
sub
fwait
cmpsl
stc
add
xorb
sbb
sbb
inc
xchg
dec
and
test
sub
pop
ds
ss
or
xchg
movsb
into
pop
pop
mov
std
dec
push
sbb
xchg
lods
xor
imul
cld
imul
sub
lods
test
sahf
outsb
lret
fdivrp
xchg
in
push
gs
rcr
xchg
cmp
push
push
push
imulb
pop
fcomip
mov
loope
popf
mov
leave
cmp
mov
adc
je
movsb
cs
sub
rolb
cmpb
dec
hlt
fsubrl
mov
push
push
daa
stos
jp
add
arpl
and
xchg
into
arpl
cmp
aam
loopne
or
mov
xchg
shrl
into
outsl
mov
jg
push
sbb
cld
mov
aas
pop
or
jmp
jl
jb
ret
mov
out
push
push
sub
mov
mov
mov
add
popf
enter
push
sub
lock
dec
and
pop
sub
inc
mov
mov
test
fnstsw
jae
out
ficoms
push
in
push
inc
movsb
pop
mov
mov
popa
test
lods
pusha
imul
cmc
andb
fisttps
in
sub
ds
in
push
and
xor
push
fists
inc
and
jl
lods
repz
setp
mov
or
adc
pop
subb
sbb
sti
cmc
jns
jo
xor
dec
dec
push
sub
ja
inc
sub
les
ret
jp
jp
add
loopne
push
inc
add
dec
popa
inc
mov
pop
jle
pop
into
inc
sub
mov
das
ljmp
push
aas
or
cmp
mov
mov
leave
xchg
divl
cmpl
jns
leave
mov
mov
jecxz
mov
stc
pop
ja
lcall
inc
mov
addb
or
pop
mov
imul
negl
imul
fdivs
push
insb
stos
int
int3
mov
sbb
xor
xlat
stos
fwait
les
rorb
mov
add
adc
lds
shlb
jns
xor
push
fistpl
inc
mov
out
lods
push
out
aam
clc
xor
xchg
inc
es
test
add
inc
lea
inc
cmp
mov
inc
sub
mov
lea
arpl
mov
xor
mov
das
xor
xor
xchg
fsubrl
pop
mov
inc
xor
sub
andl
clc
addr16
aad
xor
mov
scas
sbb
rclb
push
jle
inc
dec
aam
cwtl
scas
movsb
in
jae
xor
sub
xor
in
inc
pop
adc
or
push
in
rclb
pop
or
loop
and
je
bound
cli
cmp
lcall
mov
arpl
mov
cli
xor
in
inc
pop
call
lret
fwait
push
aaa
into
int
cmp
sbb
sbb
sub
adc
jae
and
movsl
lock
cld
fisubrl
mov
lcall
mov
cmp
jb
mov
ja
or
scas
pushf
push
xor
out
xchg
mov
sbb
out
hlt
push
pop
sub
push
jbe
mov
shlb
sbb
inc
ja,pn
js
cs
mov
sti
shrl
iret
fimull
add
dec
hlt
mov
stos
mov
je
in
negb
test
dec
imul
call
push
test
rol
mov
call
pop
or
faddl
mov
clc
inc
arpl
inc
addr16
push
out
or
pop
push
jae
imul
and
push
push
sbb
cld
push
pop
inc
mov
sbb
or
js
xor
xchg
inc
iret
cmp
jecxz
and
or
jmp
popl
pop
aas
dec
imulb
mov
dec
sub
cld
or
lods
cmc
lds
mov
push
in
xor
mov
arpl
test
stc
inc
mov
scas
inc
mov
mov
mov
loopw
and
outsl
dec
cmp
fdivl
or
movl
sahf
ret
dec
mov
sub
cs
aam
into
or
out
push
pop
int
jecxz
jl
lahf
mov
or
ds
stos
sub
sbb
stos
mov
adc
mov
fwait
scas
arpl
repnz
sbb
rolb
cmc
sti
out
xchg
ret
lock
inc
and
lds
imul
loope
adc
sbb
or
in
or
mov
gs
jb
inc
and
adc
fidivrs
loope
leave
js
insb
add
sahf
adc
xchg
ljmp
mov
lcall
imul
xchg
movsb
sub
gs
or
sub
cltd
mov
or
and
addr16
test
cmpsl
and
sbb
xchg
mov
loope
jl
in
stc
mov
inc
fsubp
jo
xor
jne
mov
jae
sub
xor
in
sbb
dec
add
and
stos
adc
sub
movsl
lods
daa
mov
stc
rcpps
or
pop
inc
es
cld
push
xor
push
das
fiaddl
pop
lock
addl
rolb
pop
aam
pop
or
adc
adc
lods
ljmp
cmpsl
test
push
pop
out
xchg
xchg
adc
ret
inc
pop
inc
int3
jmp
adcb
pop
outsl
mov
or
jmp
cmp
imul
xor
mov
add
popa
out
cmpsl
inc
and
les
mov
xor
inc
sbb
mov
ljmp
rcll
cmp
inc
idivb
pop
shrb
mov
das
test
lods
and
mov
mov
je
or
repz
pop
cmp
push
inc
scas
ljmp
pop
xchg
enter
and
push
mov
mov
adc
fcmovbe
dec
adc
push
or
mov
mov
and
dec
cltd
shll
enter
pop
adcl
xor
xor
addr16
dec
sbb
popf
xor
outsl
jno
sub
into
stos
mov
pusha
mov
xor
sbb
xchg
dec
cmp
add
and
push
sub
js
shl
js
jle
or
test
pop
push
adc
dec
ret
cwtl
jecxz
icebp
and
cmc
popf
jne
mov
ljmp
sbb
ret
repnz
jmp
dec
xchg
jne
adc
jecxz
test
pop
fs
sbb
cmp
inc
daa
rol
lcall
icebp
xlat
and
jns
enter
or
repz
imul
add
cmp
or
sti
das
inc
add
sub
test
inc
inc
adc
push
je
test
fadds
adc
or
test
lods
je
into
inc
lods
mov
xchg
inc
pusha
in
popf
xor
sbb
fs
push
push
inc
cmp
add
test
lea
fadds
mov
mov
loopne
mov
push
orl
dec
sbbl
and
adc
leave
scas
cmpsb
cmp
xor
mov
inc
sbb
xchg
add
lret
cmpxchg
cmp
mov
daa
mov
add
mov
lret
stc
bound
jbe
jnp
call
arpl
jnp
fists
push
push
sub
ret
das
push
sbb
bnd
stos
ret
mov
pop
lods
das
and
adc
ss
dec
pop
in
cmc
pop
pop
movsb
sbb
mov
jecxz
mov
mov
ja
test
faddp
jl
stos
xor
dec
mov
push
xorb
cmp
push
bound
loop
fwait
xlat
pop
ss
rcll
in
sahf
in
sahf
xlat
mov
and
js
cmp
dec
xor
out
lcall
and
cmpsb
sar
int3
in
loopne
mov
push
or
mov
adc
mov
out
rorl
mov
inc
in
ss
and
scas
pop
jmp
in
dec
inc
xchg
lock
and
out
fisubrs
aas
mov
mov
cmp
adc
sub
or
add
mov
jns
xor
in
pop
jge
popa
adc
stos
mov
lock
mov
and
cld
daa
in
mov
mov
popf
arpl
loope
cwtl
sbb
sub
xor
pop
stos
inc
xchg
sar
xchg
aas
dec
jmp
popa
je
or
xchg
arpl
or
out
xor
movsb
cli
scas
inc
and
repnz
or
adc
jg
in
cmpb
and
cmp
pop
ljmp
sbb
cltd
push
loop
push
aaa
and
dec
sbb
sub
into
filds
inc
daa
outsl
hlt
neg
mov
or
stos
sub
xbegin
jnp
ret
sbb
cmpsb
xchg
daa
or
mov
ds
in
inc
or
aas
cli
mov
cmpsl
xor
mov
cmp
es
cltd
enter
cmp
imul
scas
aaa
xchg
dec
mov
call
bound
adc
dec
jmp
arpl
sub
push
jns
cmp
mov
cwtl
movsl
dec
xchg
call
pop
or
pop
pop
scas
adc
pop
aaa
call
out
ficompl
lahf
in
dec
cmp
repz
xchg
cmp
sbb
mov
leave
add
push
test
repnz
into
pusha
mov
sub
rolb
out
leave
filds
mov
dec
mov
mov
lret
arpl
aad
inc
lret
frstor
mov
inc
popf
push
xor
jg
jge
stos
jb
jmp
mov
adc
std
test
in
jmp
cwtl
pop
mov
cmc
scas
js
mov
sub
movsb
comiss
mov
xor
push
out
or
push
xchg
dec
pop
push
pop
xchg
push
pusha
cmp
fnsave
mov
jecxz
leavew
mov
pop
cmp
pop
or
hlt
divb
cmc
xchg
out
scas
fmulp
adc
and
xchg
jmp
jge
add
pop
jae
sub
or
cltd
inc
pop
xor
push
mov
repnz
and
cmp
cld
lret
push
dec
push
popf
mov
pop
aaa
jge
inc
test
sbb
dec
into
pop
aas
jle
mov
cmc
jb
fcoms
cli
xchg
pop
imul
popf
sti
test
xchg
jp
repz
scas
sub
test
pop
leave
cmc
fwait
call
addr16
test
clc
mov
sbb
dec
push
mov
inc
imul
xor
movsb
dec
call
mov
lods
pop
xorb
sbb
loopne
notb
lcall
pop
jbe
jge
gs
stos
in
movsb
push
les
lcall
gs
pop
mov
xchg
or
in
xor
sarl
jne
ljmp
insb
iret
out
in
shlb
out
lea
shl
fnstenv
and
push
xchg
scas
sarl
shlb
xor
dec
push
push
xchg
and
fcompl
dec
dec
xor
add
cmpsl
js
rcrl
jge
sub
dec
push
adc
das
sbb
xchg
jb
cmp
xlat
jge
pusha
add
popa
aas
mov
fwait
out
dec
jbe
sbb
jge
or
add
and
in
out
in
popf
ret
out
sbb
mov
ja
xor
rolb
inc
jo
sti
xlat
dec
or
pop
cmp
cmp
aad
movsb
pop
inc
jg
popa
adc
sti
xor
xor
dec
xor
sbb
xchg
sti
or
cmp
xchg
push
dec
fsts
dec
and
dec
nop
leave
popa
dec
pop
sar
test
fucomi
mov
cmpsb
adc
push
inc
jns
out
xchg
sbb
pop
fcomp
pop
fidivl
inc
pop
jnp
js
dec
fistpll
aas
popa
cmc
ret
jle
dec
and
dec
add
shrl
repnz
ss
mov
and
aaa
imul
inc
xchg
pop
jb
movsl
outsb
cmp
fs
insb
scas
inc
cmp
icebp
jmp
es
mov
jmp
aad
scas
stc
mov
xlat
arpl
cmp
mov
mov
lock
xchg
xchg
or
pop
mov
popf
pop
out
dec
or
data16
jns
xchg
mov
cmpsb
fidivrs
mov
mov
clc
cli
adc
dec
rclb
sbb
lcall
cli
inc
jnp
stos
xor
gs
adc
mov
mov
out
push
adc
dec
out
jecxz
or
push
int3
mov
aaa
push
adc
addb
mov
mov
cmp
leave
test
mov
sub
mov
test
push
scas
stc
adcl
jmp
add
xchg
mov
dec
cmc
push
dec
shrb
out
lods
rcl
push
decl
dec
inc
notl
push
pop
stos
push
pop
out
sbb
jmp
push
adc
dec
repz
stc
mov
add
mov
dec
xor
sub
test
sahf
dec
or
sbb
fcoms
fimull
and
cld
push
pop
mov
jno
mov
and
adc
fidivrl
push
inc
rorb
or
nop
jnp
cmp
icebp
lret
adc
shlb
add
pop
add
cmc
movsl
pushf
jmp
sbb
hlt
adc
push
jl
jmp
sahf
sub
cmp
dec
mov
out
push
in
incl
cmc
popa
pushf
dec
hlt
dec
mov
testl
in
xchg
sbb
iret
dec
push
pop
orb
repnz
adc
xor
mov
imul
jo
sbb
roll
pop
loope
lret
jno
in
adcb
inc
xchg
aaa
ss
fucomp
cmpsl
push
mov
imul
fdivl
push
adc
icebp
orb
or
add
xlat
push
sbb
mov
outsl
mov
xchg
sub
sbb
push
mov
xor
ljmp
jae
jo
lcall
add
ret
mov
shlb
and
arpl
jl
jge
or
cmpsb
aas
sub
ds
cmpsb
adc
daa
loope
js
jl
mov
inc
pushf
dec
add
shr
repz
push
movsb
sbb
clc
and
pop
outsl
pop
clc
xor
dec
popf
testb
ficoml
in
rcrb
repnz
xchg
pop
ret
mov
pop
lcall
xchg
nop
add
shlb
mov
out
xchg
lret
adc
xor
adc
rcll
mov
scas
adc
push
cmp
or
insl
pop
mov
dec
outsb
cmp
fs
int3
fmuls
pushf
js
jle
pop
pop
mov
inc
cld
push
fs
xor
pop
lds
pusha
in
sub
imul
rcrl
ret
outsl
loopne
and
loopne
cwtl
mov
dec
out
and
xchg
arpl
push
or
mov
adc
inc
adc
ret
push
imull
or
cli
inc
cmpsl
fucomi
loopne
pop
jmp
bound
repz
aam
cmp
add
lret
inc
sbb
daa
je
fwait
lret
push
push
cmp
mov
push
cmp
jo
dec
arpl
pop
mov
xchg
jo
jmp
cmp
repnz
jno
mov
enter
push
popf
mov
insb
out
jle
cmp
jecxz
push
cwtl
ret
aaa
fldt
clc
inc
iret
push
out
repnz
fistps
jmp
lret
cmp
push
cs
push
xchg
popf
pop
stos
sti
jle
aam
mov
iret
out
or
aaa
add
mov
dec
jno
stos
into
aam
add
pushf
inc
sbb
inc
xchg
pop
lods
ret
decl
iret
sub
mov
cmc
jb
outsb
repnz
xchg
lock
repnz
fs
jg
pop
test
rol
pusha
insl
push
enter
push
loope
pop
movsl
aas
jg
out
mov
scas
repnz
mov
fdivrl
push
test
xor
mov
jg
rcll
rorl
add
int
jge
xchg
xor
mov
stos
push
and
mov
aam
call
outsb
int3
int3
xor
jnp
das
mov
clc
fidivrl
sbb
ret
add
jge
out
push
pop
bswap
add
orb
mov
xchg
rcrb
mov
daa
test
es
outsl
lock
xchg
pop
xor
imul
mov
push
push
jnp
push
inc
push
sbb
and
jle
push
ds
dec
aad
cmp
fisttps
cltd
jle
pop
and
out
cmp
inc
std
push
cmp
enter
leave
sub
xorb
inc
mov
icebp
or
cmp
jg
mov
imul
mov
orw
mov
aam
enter
jmp
sahf
cmp
lcall
xchg
sbb
imul
neg
xchg
adc
icebp
imul
icebp
mov
enter
jecxz
mov
shll
push
xchg
int3
daa
adc
rorl
inc
mov
fistpll
jne
push
cmpsb
sbb
ljmp
push
mov
aam
mov
push
orl
mov
mov
loop
add
enter
inc
sbb
sub
add
dec
xor
pop
leave
scas
or
xchg
inc
pop
push
inc
aaa
lahf
leave
adc
scas
scas
adc
arpl
iret
imul
mov
xchg
test
xor
imulb
sbb
add
pusha
push
test
cmpsl
leave
jo
data16
test
inc
mov
test
inc
mov
aad
sbb
xchg
sbb
jbe
nop
fldl
movsl
inc
mov
xchg
inc
or
shll
ror
in
nop
ljmp
in
test
aaa
pop
nop
daa
inc
sub
std
and
rcll
add
sbb
mov
mov
adc
outsl
xchg
movsl
cs
mov
out
jae
ret
jp
dec
mov
insl
pop
in
ja
jne
dec
dec
out
or
lea
pop
xchg
in
adc
inc
out
mov
andb
lahf
into
loop
and
xchg
mov
insb
cs
test
xchg
mov
jmp
lods
in
addr16
daa
cmpsb
jno
and
aaa
push
aad
test
cmpsb
lret
xor
lods
mov
cltd
int3
pop
sti
lds
jecxz
fsubrl
cmp
add
lds
pop
inc
aad
imul
mov
out
outsb
adc
lock
or
out
mov
aad
jecxz
push
inc
inc
add
push
inc
mov
in
mov
test
clc
rorl
cmpsb
xor
sub
mov
inc
and
ret
or
aaa
das
jno
je
sbb
aaa
insb
mov
jmp
je
xor
std
mov
and
dec
dec
sahf
stos
mov
xor
pop
mov
add
clc
dec
imul
mov
mov
addr16
sbb
int3
dec
mov
je
mov
stos
lret
out
inc
jmp
outsb
test
pop
add
mov
outsl
push
inc
call
cmp
add
mov
sub
mov
adc
sarl
sub
jmp
push
pop
inc
jle
and
xor
lcall
sub
inc
and
aad
imul
xchg
cmc
andb
mov
decb
insb
lock
push
xchg
cmp
or
xchg
dec
mov
xor
mov
cmp
sbb
sub
pushl
sub
inc
sub
insb
fdivl
mov
les
fwait
cmpsb
insb
sti
or
popa
push
mov
js
aaa
imulb
lahf
test
pop
adc
data16
mov
movl
or
adc
sub
cmp
sub
push
sub
arpl
jb
lock
adc
inc
scas
dec
adcb
pop
int3
adc
mov
xchg
or
jae
push
xchg
movsl
xchg
sbb
xor
mov
jb
std
dec
ss
pushf
lock
pop
dec
xor
fsubs
shlb
inc
pop
mov
add
push
xchg
cmp
sbb
outsb
lds
sub
outsb
cmp
es
cmp
imul
push
mov
jmp
mov
fwait
rolb
mov
cli
xchg
or
daa
sarb
jae
fisubrl
outsb
mov
call
aad
pop
sbb
rol
rcl
adc
gs
in
fs
aam
sub
mov
popa
jo
mov
mov
or
stos
js
leave
lds
call
or
nop
std
imul
sbb
dec
pop
mov
sub
aaa
push
fst
pop
push
jecxz
push
or
scas
push
mov
sti
stos
jp
or
xlat
add
into
enter
std
xchg
or
lahf
push
xor
pop
cwtl
jg
and
es
in
cmovle
cwtl
lret
pop
sub
ss
sbb
cmc
dec
rorl
sbb
sbb
push
or
scas
dec
fimull
jo
mull
sub
movb
ficomps
inc
pop
xchg
mov
mov
lret
pop
pop
sbb
cmp
arpl
insw
out
mov
repz
jg
cmp
cmp
xor
addr16
leave
or
jo
dec
mov
sub
push
add
xor
sub
pop
mov
pop
pop
insb
mov
mov
jne
push
iret
fcompl
sub
mov
adc
or
inc
nop
and
ret
cmp
inc
pop
mov
and
or
outsb
mov
jne
stc
push
insl
cmp
mulb
lds
insl
faddl
dec
test
push
mov
cli
lret
xchg
subl
dec
or
iret
nop
pop
in
int
sbb
cmp
cli
add
xchg
sbb
ja
mov
in
cwtl
sbb
das
fucomip
clc
sbb
jmp
notl
pop
xor
lret
das
adc
mov
test
hlt
lret
lahf
shrb
lods
adc
lds
jp
push
jl
adc
pop
cs
mov
movsl
loop
jmp
fs
lcall
pop
mov
sbb
daa
les
push
pop
push
pop
mov
mov
hlt
and
les
roll
sub
mov
insb
mov
inc
jmp
fildl
test
xchg
inc
mov
sub
sbb
cmpsl
sub
lret
addr16
push
or
rolb
imul
cld
cmp
mov
or
lcall
jmp
mov
loopne
mov
add
js
inc
push
aad
bnd
mov
lahf
mov
cli
xchg
sbb
and
iret
aad
insb
dec
mov
xor
stos
icebp
clc
cmp
mov
jne
or
into
mov
inc
dec
fisttps
popf
xor
add
sub
cmp
lret
testl
cmpl
jb
mov
hlt
dec
jecxz
mov
xor
cli
fsubrl
fisubs
out
jnp
lcall
add
popa
push
pop
jp
jbe
mov
imul
mov
mov
in
and
push
cmp
test
inc
jns
jbe
ror
nop
and
lods
xchg
jmp
push
xlat
sti
enter
testl
lahf
dec
xchg
cmp
mov
mov
sub
sti
add
nop
inc
xor
add
cmp
mov
mov
cmp
jns
pop
push
adc
test
push
mov
fcomip
jbe
lret
push
xor
inc
push
mov
movsl
pushf
pop
bound
push
dec
or
sub
call
and
aaa
dec
cmpsb
sbb
xchg
jecxz
pusha
fdivs
jl
rcr
pusha
ja
or
xor
loopne
or
and
and
and
outsb
in
repz
lds
xchg
aaa
inc
pop
jp
lock
adc
jp
or
andl
leave
jg
xor
and
js
in
fnstsw
leave
jmp
loop
sar
std
xchg
scas
mov
mov
mov
movsb
sub
sbb
fdivrl
jg
je
popa
sub
or
pop
push
loope
lea
pop
push
ret
jo
neg
sahf
or
in
into
push
pop
lods
insl
stc
and
orl
call
insb
add
xchg
in
pop
bound
aam
scas
cmpsl
popf
push
out
mov
inc
scas
adc
fdivr
add
icebp
mov
push
stos
jp
testl
cmpsb
mov
sbb
test
ljmp
fs
shrb
aaa
inc
mov
lea
outsl
sbb
cwtl
cmp
dec
or
sti
es
lret
leave
mov
xchg
gs
and
mov
stc
mov
sbb
jo
lcall
inc
sub
mov
data16
imul
out
jmp
add
and
mov
inc
pop
push
cld
inc
push
adc
jmp
clc
lods
sbb
jle
gs
pop
lds
lods
sahf
pop
mov
aaa
popa
loopne
push
xchg
jno
dec
sbb
ret
popa
shll
ret
andb
popf
or
xchg
imul
and
xchg
pop
iret
and
les
loope
lcall
imul
sarb
mov
pop
sub
adc
lods
and
loop
xchg
into
lret
inc
in
sub
call
adc
pop
add
fidivrl
loop
out
cwtl
cli
nop
das
shrb
jb
mov
xor
lods
popa
lcall
das
xor
aas
and
call
xchg
testl
cltd
inc
lret
sub
lods
xchg
mov
xchg
aaa
aas
js
or
lahf
repnz
movsl
mov
data16
test
xlat
sbb
dec
lcall
xchg
ss
push
in
in
psadbw
scas
loop
outsl
inc
call
inc
and
fbstp
shl
pop
cmp
daa
add
lock
cmp
dec
call
mov
mov
xchg
mov
into
in
mov
xor
adc
int
mov
gs
rolb
push
mov
cmp
inc
shrb
mov
insb
add
push
cwtl
add
xchg
mov
mov
cmp
lods
jmp
out
jns
into
mov
mov
out
clc
adc
push
cmc
xchg
pop
xchg
xor
fwait
ret
mov
sbb
es
loope
mov
and
add
adc
jle
sbb
push
icebp
inc
adc
test
or
mov
push
leave
test
mov
lretw
xlat
std
pop
push
ljmp
iret
iret
cmp
jnp
or
outsb
shr
or
pop
mov
sbb
xor
xchg
pop
jb
arpl
xchg
sti
pop
mov
xchg
jecxz
mov
enter
xor
icebp
aaa
dec
loope
or
incl
in
xor
leave
xor
fnstsw
mov
xchg
shlb
lock
mov
testl
push
push
sbb
pop
inc
movb
fwait
stc
mov
mov
and
lret
jl
clc
call
adc
add
sub
sub
add
fs
dec
xor
sbb
out
cmp
scas
outsb
pop
push
stc
cltd
jne
lods
fwait
xor
xchg
dec
daa
repnz
call
hlt
repz
inc
loop
mov
lea
sub
rcl
push
dec
jmp
enter
leave
add
fimuls
or
jg
ror
mov
addr16
std
rorb
dec
add
jae
pop
mov
stos
out
cmp
movsb
sti
and
test
cmp
gs
das
out
add
xor
xor
mov
push
dec
push
xor
dec
cmp
movsl
movsl
rcll
fs
mov
xor
add
cmp
jne
cmp
push
mov
jne
xchg
mov
fcos
sub
add
sbb
pushf
insb
push
in
adc
sub
imul
push
xchg
sbbb
sub
mov
movsl
js
pop
sub
xchg
xchg
jne
lods
loop
lods
sub
neg
movb
xchg
or
sub
faddl
mov
popa
adc
dec
push
hlt
loope
scas
gs
mov
and
rorl
dec
add
js
cmpsl
sub
or
sub
mov
pushf
push
mov
sub
push
cmp
outsb
lret
arpl
repnz
orl
out
pop
xor
add
inc
jbe
pop
je
in
xchg
cmp
dec
nop
mov
mov
and
stos
std
sahf
jae
or
sub
popa
jp
sub
jecxz
iret
int3
in
leavew
jno
fcomps
aaa
pop
xor
or
adc
mov
pop
ret
int3
jmp
fdivrl
and
jb
fidivrl
sahf
pop
cwtl
mov
aad
mov
jne
sbb
inc
push
in
ds
pop
and
out
mov
lret
fstpl
lods
out
sar
lods
into
ljmp
add
mov
fucomi
jg
jo
jp
pop
jns
inc
push
and
mov
mov
loopne
jbe
pop
cld
je
mov
add
mov
not
arpl
lock
push
push
or
test
mov
inc
mov
jb
xchg
mov
mov
mov
outsl
xchg
lret
sbb
stc
pop
clc
sub
fxch
loopne
mov
xchg
fcmovnu
cmp
in
das
negb
xchg
cwtl
jb
adc
adc
and
push
cld
jle
sar
stos
add
cli
inc
push
jne
jge
xlat
popa
enter
mov
and
bound
dec
cmpsb
sub
jb
mov
push
mov
dec
jns
push
xor
cs
aam
push
sub
aas
aas
pop
arpl
ja
lods
push
cld
das
hlt
lock
adcl
lret
mov
xchg
xchg
bnd
ret
dec
sub
jmp
mov
lds
jg
mov
sbb
adc
sbb
outsl
cmp
into
inc
and
pop
xchg
xor
push
dec
mov
pop
adc
leave
cmp
cmp
pusha
inc
in
inc
dec
mov
into
cmp
push
imulb
rcl
std
aas
fnstenv
lds
mov
add
add
xor
out
test
aam
add
cmp
cmc
divl
stc
lods
push
add
push
push
dec
pop
pusha
push
mov
mov
jle
jmp
in
dec
lcall
lcall
enter
xor
inc
idiv
int3
inc
loopne
out
test
jno
adc
inc
lea
add
cwtl
mov
pop
add
es
mov
jo
dec
add
or
xor
inc
test
xchg
add
dec
stos
test
lret
xchg
test
das
ja
mov
mov
or
iret
popf
mov
dec
insl
jmp
inc
mulb
imul
arpl
push
mov
insl
shll
sbb
pusha
mov
pop
dec
pop
and
push
xor
or
add
jne
pop
xchg
in
aaa
mov
jne
sbb
cmpsb
std
mov
jl
pop
cmp
lods
sarl
out
in
incb
jg
test
in
out
jnp
jmp
dec
popa
cltd
xor
xchg
pop
sahf
mov
cli
jbe
dec
cs
push
xor
inc
pop
fimuls
lcall
imul
sub
inc
lods
enter
fnstsw
push
inc
dec
leave
adc
mov
test
mov
fs
lods
outsb
in
inc
mov
or
xor
fimull
sarl
mov
sahf
lahf
and
cmpsl
push
inc
es
mov
daa
push
and
divb
ret
inc
and
in
cltd
and
sub
arpl
inc
movsb
out
mov
inc
xchg
jmp
lret
rcll
sti
inc
jp
inc
jl
int3
pop
jge
or
js
dec
loop
mov
dec
xor
or
outsb
xchg
xor
lcall
popa
in
mov
or
adc
cmp
cmpsl
pop
notb
imulb
rcrl
enter
fimull
push
push
insl
lods
loope
sbb
lods
inc
pop
ja
cmpsb
sbb
das
mov
lcall
mov
push
loop
call
push
shll
sbb
xor
loopne
in
push
mov
xchg
xchg
pop
rcll
sti
or
xchg
mov
adc
pop
jp
mov
icebp
xchg
inc
jecxz
or
leave
push
aaa
dec
daa
xor
je
stos
test
and
mov
push
push
loopne
jmp
sub
mov
pop
push
and
cmp
mov
push
int3
popf
xchg
jb
cld
sbb
adc
mov
pop
xchg
ljmpw
jno
cmp
xor
adc
leave
fildll
jmp
mov
out
pop
dec
iret
inc
jmp
cwtl
rcll
xchg
scas
pop
inc
cmp
daa
jns
lods
xchg
int3
aad
push
and
push
std
lea
in
ss
sbb
sbb
xchg
aam
xor
sub
mov
lods
xchg
hlt
sub
pop
fsubp
push
fs
push
mov
mov
cwtl
out
cld
cmc
mov
movsb
pop
cs
or
pop
stc
test
ret
xchg
inc
iret
add
pop
jb
test
bound
rcrl
dec
xchg
insb
push
fwait
movsb
or
cmp
cs
ficoms
movsl
iret
lea
daa
jbe
xor
data16
cli
leave
rolb
mov
add
and
and
inc
add
dec
mov
mov
incl
jbe
pop
std
in
pop
jne
mov
mov
fldl
adc
fadds
fdivs
in
in
dec
push
mov
cld
mov
outsb
xor
sub
push
inc
add
imul
or
mov
pop
div
mov
push
loop
mov
stos
loope
inc
push
outsb
jne
int3
sub
xor
lcall
imul
add
std
inc
insb
and
cmpsl
jne
xor
mov
jbe
fnstcw
dec
scas
lret
jnp
push
ret
xchg
out
push
pop
outsl
popl
gs
sub
mov
rcll
mov
and
dec
xor
mov
mov
push
aaa
cltd
imul
mov
jnp
shl
es
mov
cmc
inc
scas
dec
lods
jmp
ret
in
push
neg
fidivrs
fdivs
jae
mov
sub
test
push
pushf
xorb
mov
or
pusha
and
rcrl
rorl
dec
inc
enter
xchg
sub
mov
inc
adc
dec
dec
or
arpl
clc
cmp
je
insb
sub
add
push
lahf
xor
mov
scas
je
pushl
mov
cwtl
repz
adc
add
xchg
sub
cwtl
outsl
lahf
push
jp
scas
mov
fisubs
cmc
mov
sub
adc
xchg
mov
cli
test
inc
mov
mov
pop
sub
xchg
jbe
adc
inc
mov
stos
flds
sti
shrl
fucomi
dec
xor
or
sarb
cli
test
sbb
out
mov
mov
push
test
gs
and
mov
fwait
jle
negb
add
push
inc
aad
and
lds
push
cmp
pop
scas
mov
stos
cltd
or
and
subb
dec
cmpsl
pop
sub
test
jnp
stos
xchg
push
pop
jne
sub
xchg
sub
push
xchg
call
mov
or
adc
cmp
sub
pop
fsubs
out
push
stos
and
scas
or
stc
xor
pushf
inc
mov
sarl
in
jae
push
cmp
icebp
sub
fwait
lods
xchg
adc
dec
inc
mov
adc
filds
push
jge
std
sbb
inc
jno
pop
js
push
leave
cmp
out
push
fucomip
jnp
jno
ja
pop
mov
xchg
adc
dec
not
imul
mov
jb
stos
dec
sub
stos
outsl
and
pop
or
inc
in
loopne
fstp
mov
pop
enter
daa
ljmp
enter
mov
or
andl
sub
sbb
lods
pop
mov
mov
rcrb
lret
inc
inc
inc
lods
sbb
icebp
and
out
xor
fnstcw
js
orb
clc
arpl
aam
jmp
pushf
divl
mov
xchg
loopne
fwait
sub
inc
ret
jae
mov
add
dec
out
mov
inc
fidivrs
push
ds
arpl
mov
pushf
aas
out
insl
sub
bound
iret
jmp
mov
daa
jmp
pop
jg
fs
sub
sbb
push
dec
dec
jg
pop
mov
repz
outsl
cs
and
xchg
in
daa
fdivrs
adc
cmp
clc
fistpl
inc
outsb
push
inc
fstps
dec
sbb
imul
daa
xchg
and
adc
pushf
popa
int
cmp
xor
inc
repz
xchg
sbb
cmp
xor
xor
fmuls
dec
mov
inc
sbb
rorb
xor
out
adc
cmp
jae
adc
popa
sarb
mov
jnp
mov
or
inc
inc
gs
jmp
mov
xor
sub
dec
or
push
jl
or
or
mov
sarb
inc
pop
push
call
jl
mov
add
mov
sbb
adc
mull
movsb
cld
fldt
aam
sub
adc
xchg
popa
sub
mov
insb
test
pop
cmp
lcall
cmp
lahf
movsl
xchg
mov
and
outsl
shrb
xchg
sbb
jmp
inc
lods
icebp
inc
cwtl
dec
xor
rcl
push
ret
jge
mov
cli
push
fcoml
test
mov
xchg
sub
movsb
inc
addl
fcmovnb
data16
fs
add
push
pop
lret
sar
sti
mov
stos
jb
push
gs
add
lret
ss
mov
cmp
dec
idivl
sbb
cwtl
or
pop
xchg
xor
scas
jmp
jp
repz
ret
popa
cli
data16
push
sub
or
jmp
mov
je
int
mov
pusha
inc
mov
jge
lret
mov
inc
pusha
jmp
nop
mov
push
dec
gs
hlt
push
push
ljmp
fdivs
stos
imul
pcmpeqd
das
in
dec
xchg
js
lret
cmp
out
xlat
int
jns
movsl
adc
xor
xchg
and
adc
pop
mov
scas
sub
pop
sbb
fucomp
inc
lock
inc
jmp
fcom
cli
jae
aaa
or
fwait
dec
into
cmp
jecxz
xchg
mov
jb
out
loopne
push
inc
jp
je
sub
fidivs
lret
clc
push
fwait
jo
arpl
cld
jp
add
xchg
dec
cmc
sahf
hlt
pop
fisttpll
sti
mov
outsb
das
test
mov
inc
loop
and
aaa
sbb
mov
pop
sub
inc
lret
lea
rcrb
out
stos
dec
sbb
pop
bound
inc
loope
xchg
movsb
or
test
or
scas
sub
xor
stos
mov
ljmp
icebp
sub
push
stos
xor
inc
jno
dec
fsubrs
ljmp
loopne
dec
shl
addr16
mov
mov
fimuls
inc
cltd
test
jmp
cltd
test
fmulp
mov
data16
adc
aaa
out
fsts
jns
adc
pop
sub
mov
mov
pop
lds
push
mov
sub
mov
add
mov
xchg
pusha
adc
test
xor
mov
leave
out
pop
push
cmpsl
lods
xor
pop
cmpsl
or
shr
pop
adc
mov
dec
popf
xchg
stos
test
clc
adc
or
mov
push
movsl
cli
fucomi
add
push
mov
sbb
sbb
loope
sbbb
jge
mov
fists
cmpsb
and
adc
sbb
and
push
adc
push
cmp
adc
add
ss
std
mov
and
fimuls
mov
jbe
test
mov
jp
jge
aam
mov
fisubrl
xchg
aaa
or
out
int3
int3
lods
inc
add
push
cmpsl
jmp
pop
push
test
mov
inc
sbb
cli
push
inc
cmp
xchg
insb
sub
inc
outsl
sub
cmp
and
aaa
inc
xchg
lea
xchg
movsl
jno
fsubrl
shlb
sub
call
stc
scas
or
imul
add
fldt
and
loope
in
lcall
cmpsl
xor
pushf
push
hlt
sti
dec
ficomps
aaa
or
cltd
dec
mov
das
subl
mov
dec
sbb
mov
xor
cld
jnp
into
push
xor
pop
pop
mov
xchg
push
scas
lds
add
sbb
lock
mov
in
inc
fcom
mov
mov
stos
test
aas
or
jl
add
std
xor
cld
loop
pop
adc
sub
arpl
or
jne
push
push
std
cld
inc
jmp
fsts
add
inc
js
jns
into
xor
sbb
lods
add
xor
xor
popf
push
out
stos
lock
pop
stos
call
cmpb
jg
xchg
js
xchg
int
xchg
adc
popf
setle
cmp
cmp
in
push
push
and
push
and
aad
jecxz
xchg
push
int3
and
shll
xchg
out
stos
loop
jbe
jo
add
jne
jno
sahf
das
loope
lods
mov
jbe
mov
shrb
dec
adc
loopne
cmc
fcmovu
jmp
test
rep
xor
inc
xor
sub
ja
jecxz
jb
pop
and
jp
jno
pop
out
stc
or
jne
int
cltd
fisttpl
xchg
pushw
jecxz
lret
adc
mov
fsubl
lds
mov
pop
movsl
mov
out
jmp
xor
imul
sbb
mov
ja
and
mov
and
ficomps
imul
mov
adcl
aaa
jno
js
movsb
push
pop
mov
jl
jmp
je,pn
bound
fs
mov
rcrl
jb
mov
fbstp
push
das
push
push
iret
mov
mov
pop
imul
inc
and
cmp
test
bound
pop
add
xchg
ljmp
push
push
cmpsl
ja
xchg
push
inc
sbb
pop
mov
into
stos
ljmp
mov
jp
or
lock
mov
push
add
push
mov
push
out
imulb
aaa
movl
inc
mov
es
jno
out
sbb
imul
rcrl
inc
imulb
lods
jl
inc
dec
fpatan
test
aas
push
mov
push
mov
fsubrs
cmp
outsb
fmul
jns
and
fcompl
inc
and
fld
push
idiv
out
mov
or
and
and
xchg
mov
xlat
js
rcrb
sbb
and
rorb
pusha
mov
dec
jo
or
addr16
sbb
scas
aad
shrl
xchg
aas
pop
xchg
or
push
sti
cld
lret
lahf
outsb
sbb
movsb
push
out
call
and
lcall
jns
ss
inc
aad
pop
mov
rol
dec
add
loopne
pop
ljmp
loopne
sbb
mov
inc
xchg
cmp
lods
xchg
daa
ljmp
int
xor
inc
and
push
push
mov
fisubrs
xchg
dec
lods
lods
mov
or
jo
es
xor
or
mov
frstor
sbb
sbb
test
mov
repz
arpl
out
hlt
ret
test
int3
aad
mov
cmc
pop
push
rclb
push
xor
popf
fcompp
rorl
dec
pshufw
lcall
and
mov
mov
pop
shlb
or
add
les
int3
mov
cmp
sub
xchg
mov
sub
popa
cmp
xchg
cli
mov
lcall
sub
in
and
jbe
arpl
ja
pushf
mov
xor
adcb
push
scas
cmp
stos
jnp
mov
push
mov
lock
pusha
shrb
mov
cmp
test
aad
popa
cltd
or
aad
mov
mov
ret
dec
movsl
jl
rcl
cld
mov
fs
aam
cmp
call
mov
js
cltd
cmp
add
lcall
xchg
mov
mov
adc
inc
cltd
mov
xor
mov
subb
mov
outsb
mov
xchg
stos
lret
and
sub
call
in
cmp
adc
xor
in
jge
lret
add
lods
mov
dec
mov
pop
jo
lods
jl
push
jne
jecxz
ja
insb
fdivrp
dec
push
fcmove
sahf
pop
enter
jp
pminub
mov
imul
xchg
pop
xchg
orb
aad
inc
mov
testl
cwtl
mov
jle
or
lcall
fcoml
popa
stc
lods
push
in
leave
in
lret
out
mov
sbb
xorb
jbe
push
int
add
in
cmp
sub
fldcw
inc
cld
jp
nop
mov
mov
test
out
loop
mov
mov
les
xor
repnz
add
and
and
scas
gs
or
aas
loop
xchg
add
sbb
mov
je
lahf
test
out
mov
push
cmp
sub
push
inc
outsl
stos
pop
and
cmp
xor
cmpsl
push
call
mov
int
cmp
sbb
inc
sub
into
lcall
lods
lods
inc
test
jne
mov
sti
xor
jae
shl
cli
jmp
add
mov
mov
push
je
or
or
pop
xor
jge
push
cmp
cltd
imul
int
or
ljmp
and
mov
mov
add
je
in
testl
in
xchg
lods
mov
repnz
mov
add
data16
add
stos
imul
xor
cltd
cwtl
xor
lods
enter
push
cmp
jno
in
jge
negl
fldl
add
pop
cmc
rcr
ret
push
lcall
out
mov
test
sbb
or
or
push
lock
pop
inc
cltd
sahf
inc
xchg
repz
lea
out
mov
fsts
out
xchg
mov
lcall
xchg
loopne
std
lods
dec
add
inc
add
xlat
jle
cs
dec
dec
cmp
dec
test
imul
and
loope
cwtl
cmp
nop
push
cmc
or
pop
jecxz
mov
push
mov
nop
jge
mov
and
test
sub
push
ljmp
addr16
leave
aad
and
std
je
mov
ror
adcb
arpl
pusha
out
inc
test
mov
cmpsb
inc
jne
sti
lret
dec
pop
adc
cmp
mov
adc
sbb
incl
fs
daa
dec
test
push
subb
gs
mov
jnp
test
xchg
sahf
jmp
inc
inc
andb
cmp
inc
mov
fsubl
jbe
and
jb
add
add
sbbl
jl
push
or
xchg
sti
outsb
xchg
and
xchg
cmp
jmp
cmpsl
int
icebp
and
adc
insl
lods
push
and
or
mov
cmp
sbb
mov
jne,pt
xor
xorb
bound
jmp
or
jge
mov
sbb
imul
inc
mov
pop
nop
push
sub
push
nop
ret
mov
jle
pop
push
lods
push
add
xor
gs
xor
imul
jae
je
jl
push
or
jg
inc
pop
jno
pop
lock
mov
mov
push
rcrb
imul
pop
popa
sbbb
ljmp
pop
sub
jmp
fcomp
js
lods
jae
mov
pushf
adc
fisttpl
xor
cmp
test
and
pop
sub
nop
arpl
mov
cmc
push
imul
in
push
dec
fldenv
shrl
cmp
adc
inc
das
mov
push
xchg
mov
imul
inc
out
cmpsl
add
xlat
int3
and
movsl
call
mov
loop
cmpsl
lock
aaa
into
enter
or
jns
mov
in
aaa
push
imul
testl
filds
push
xor
push
icebp
xchg
mov
xchg
clc
lods
xor
icebp
and
add
repnz
ss
out
mov
mov
and
lea
ljmp
adc
cmpsl
dec
lret
cmp
mov
dec
mov
je
jl
lret
mov
pop
cld
jno
or
lods
mov
mov
sar
dec
cmc
lret
mov
jb
mov
xchg
ret
cmp
test
addr16
and
mov
cmpsb
adc
repnz
loopne
je
testb
into
mov
fldl
gs
xchg
daa
and
mov
mov
cmp
dec
cmp
xchg
jp
add
out
stos
mov
cwtl
test
call
xchg
pop
outsb
adc
fnsave
das
mov
hlt
xor
rolb
adc
bound
fsubrl
xchg
or
inc
xorb
shll
xor
jns
pop
mov
stc
addb
pop
call
inc
push
mulb
xchg
daa
sbb
aam
call
dec
dec
mov
mov
mov
add
xchg
push
orl
call
lret
shrl
add
push
push
adc
insb
jle
out
and
mov
andl
xchg
push
or
xchg
mov
stos
lds
cmpsb
xchg
add
lods
xor
movsb
addr16
mov
push
mov
push
sbb
hlt
ja
jb
dec
cmp
inc
int
mov
fisttpll
popa
divl
cmpsl
mov
ret
subb
jnp
xchg
ret
xchg
dec
fidivl
mov
lret
mov
jno
movsb
xor
dec
add
aam
dec
std
cmp
or
cwtl
xor
xor
je
add
cmp
les
mov
clc
dec
std
push
insl
dec
daa
pop
andl
bound
jg
sbbl
jge
inc
mov
push
mov
testb
cld
aam
push
adc
lods
inc
js
repz
mov
jecxz
jnp
fsub
into
in
add
jmp
mov
xchg
fs
arpl
or
add
and
sub
icebp
and
test
mov
stc
cltd
mov
adc
rol
int
jmp
cld
testb
pop
cmpsl
repnz
out
push
pop
mov
jecxz
lea
sub
shlb
shr
adc
lock
dec
decb
xchg
pop
sbb
mov
lret
dec
les
mov
enter
dec
fbstp
sti
or
mov
xchg
nop
lahf
insb
ret
iret
rcr
jnp
outsl
pmulhw
popf
fildll
xor
lea
out
push
es
push
pop
stos
cli
movsl
push
push
sti
push
test
scas
mov
jb
daa
or
lret
aas
iret
pushf
push
add
nop
inc
and
pop
faddl
dec
mov
repnz
lds
outsb
jg
aaa
mov
mov
subb
nop
push
aam
or
faddl
or
pop
mov
aas
cmp
dec
or
repnz
xchg
pop
jnp
jbe
nop
xlat
popf
mov
push
push
mov
hlt
and
pop
fisttpl
inc
int3
les
cmp
xor
bound
sbbl
pop
pop
mov
xchg
push
movsl
ret
adc
adc
push
shl
inc
and
or
aas
std
xchg
inc
fidivrs
jmp
mov
arpl
jo
mov
cmpsl
test
push
add
add
ja
jle
mov
or
mov
mov
js
shrl
mull
jo
inc
push
pop
push
into
sub
shll
out
cmp
mov
push
test
movsb
mov
mov
fadds
adc
push
push
ret
add
sub
subb
cmpsb
cmp
lock
sbb
aas
int
sbb
das
push
mov
movsb
xchg
fucom
iret
sub
lcall
mov
movsl
mov
int3
cmp
push
cmp
cmpb
in
enter
test
and
sbb
sub
in
jg
enter
cld
addr16
test
cmpsb
lods
push
andl
jmp
int
mov
call
push
and
jae
push
add
push
fistl
in
rolb
xchg
mov
stos
pop
adc
jbe
movsb
lahf
movsl
dec
add
add
les
les
pusha
cmp
test
ja
pushf
dec
cmp
and
adc
jbe
icebp
cmpsb
enter
mov
xor
xor
add
sbb
push
call
push
rclb
in
inc
xchg
lcall
jp
adc
adc
shl
sub
xchg
mov
mov
push
mov
aas
mov
into
or
pop
cld
repnz
cmp
xchg
mov
loope
stos
jo
data16
out
pop
adc
xor
es
cli
sub
pminub
inc
and
out
add
scas
cld
mov
ret
sbb
loope
and
outsb
bound
clc
or
xchg
or
fisttpl
xchg
cs
loope
dec
sub
inc
movlps
loop
sti
pop
inc
push
aam
rcrb
rol
inc
cmp
leave
cmpsl
loope
pop
aam
mov
inc
pop
imul
data16
sub
xchg
cmp
cld
leave
ljmp
insb
or
and
xchg
mov
jmp
cmpsb
and
jge
pop
lods
repz
outsb
sub
xchg
sub
int
lahf
add
test
and
std
inc
mov
jno
jmp
or
jg
jae
dec
xlat
mov
rcrb
dec
jle
sub
cmpsb
mov
les
sahf
push
sarb
scas
int3
mov
sub
lahf
dec
sti
das
mov
cmp
pop
popf
test
je
inc
lea
inc
adc
jns
stos
cmp
out
pop
cwtl
fwait
push
pop
xchg
cmp
ret
sub
out
lahf
jg,pt
bound
out
clc
cld
daa
icebp
or
mov
cmpsb
aam
movsl
adc
arpl
mov
xchg
into
in
fwait
js
les
and
leave
in
in
popf
mov
icebp
add
pop
push
push
int
pop
or
mull
lods
pop
xor
mov
fwait
mov
mov
lea
cmp
mov
sbb
push
inc
mov
das
or
xor
filds
fisubrl
shll
mov
out
sar
pop
int
pushf
xchg
enter
cmpsl
lods
pop
xchg
and
xor
popa
xchg
mov
mov
dec
and
mov
out
mov
sarl
cmpsb
xchg
xchg
std
int
sub
jnp
jo
jno
pop
mov
add
push
cmp
mov
inc
jae,pt
insl
movsb
fstps
cltd
addr16
push
add
xchg
add
jmp
je
leave
fwait
adc
inc
sub
cmp
icebp
sub
shlb
int
sbb
or
mov
mov
sbb
sbb
xchg
push
jno
inc
add
mov
bound
subl
xor
fists
xchg
insb
iret
sub
flds
cmpsl
cmc
jecxz
js
or
pop
cmp
push
xchg
add
sbb
inc
mov
adcl
cltd
insl
call
push
scas
mul
loope
es
jle
and
mov
icebp
inc
subl
xchg
and
cmp
dec
arpl
cmc
jnp
inc
pop
or
cmp
movsb
xor
gs
push
mov
aam
addb
shrl
aam
ret
leave
lods
sbb
mov
adc
push
test
mov
add
fstpl
mov
xor
iret
adc
sbb
add
dec
faddl
xor
mov
add
ds
cmpsb
mov
je
xor
ljmp
mov
cbtw
rol
xchg
outsl
jmp
jae
pushf
adcb
pop
mov
dec
imul
popf
mov
xchg
mov
mov
pop
out
lea
push
sbb
mov
iret
xchg
cmp
mov
cmp
cli
jo
les
dec
xor
pop
out
lds
outsl
xchg
sbb
cmp
push
mov
xchg
xchg
inc
negl
sub
mov
push
mov
addr16
in
adc
and
insl
mov
rcl
outsl
mov
pop
jbe
addr16
fcompl
adc
pop
xchg
dec
push
mov
scas
fsubrs
shlb
fs
cmp
xor
cmpl
orb
insl
push
pushf
or
pop
dec
inc
jmp
in
in
mov
and
dec
push
shl
int
ret
in
sar
sbb
rolb
shl
xor
dec
pop
cmp
mov
movsb
data16
or
and
add
addr16
fsubrs
inc
clc
inc
pop
mov
dec
or
fnstenv
pop
mov
fistpll
stos
mov
xchg
sub
ds
out
mov
lret
fucomi
cwtl
mov
in
fldcw
push
sbb
std
std
adcl
loopne
lahf
and
test
mov
jmp
loop
lds
daa
repnz
lret
cld
cmp
outsb
dec
jnp
mov
push
push
cmp
mov
pop
lret
inc
mul
add
fiadds
shll
push
or
loope
mov
outsb
add
dec
push
cmp
jnp
jge
cmp
aaa
out
xor
jmp
cli
leave
imul
or
mov
inc
outsl
ret
aad
push
xor
adc
inc
popf
push
mov
and
or
jl
mov
pop
das
cmc
ljmp
push
jge
sub
add
out
adc
push
ror
flds
divw
xchg
jge
stos
adc
mov
sti
cmp
sub
xchg
test
scas
js
pop
scas
xor
inc
enter
pop
jge
loopne
mov
decl
lods
orb
dec
pop
mov
or
add
sbbb
outsl
push
mov
push
jmp
mov
sahf
cld
mov
test
imul
mov
fisubl
mov
xor
cmpsl
es
xor
jb
jmp
lcall
in
xchg
pop
mov
js
cmpsl
das
jmp
or
mov
inc
sub
dec
sub
in
or
lahf
and
mov
test
data16
xor
mov
pop
lock
jl
xor
out
fildl
xchg
push
mov
stc
or
mov
xchg
lock
push
jne
imul
stos
into
lret
mov
mov
pop
cmc
fidivrs
sub
mov
or
std
bound
fcomps
dec
inc
xlat
imul
or
xor
mov
jmp
outsb
push
hlt
mov
dec
jno
das
and
and
cmpsb
pop
add
push
sbb
adc
fistps
pop
mov
fwait
cmc
jne
mov
push
cmp
or
adc
xor
sub
sbb
mov
subl
stc
push
inc
icebp
mov
xor
jnp
and
jmp
xchg
stos
mov
notl
inc
in
je
sbb
shrb
mov
pop
jg
dec
pop
dec
es
xchg
ret
jae
cmp
lods
out
add
fsubs
cwtl
mov
insb
pushf
or
enter
inc
popa
jmp
sbb
ds
cmp
sbb
pop
pushf
cmp
xchg
inc
jp
adc
pop
adc
pcmpgtd
jg
inc
and
xchg
cmpsb
dec
xor
jo
sbb
adc
mov
push
jmp
test
or
lcall
push
outsl
xor
jno
dec
cmp
add
push
xor
sbb
lock
scas
cmp
lahf
cmpsb
jo
mov
negl
std
shll
mov
xor
mov
outsl
lcall
sub
cmp
xor
xor
ljmp
pop
inc
xor
insl
sahf
repz
mov
sbb
inc
insl
dec
clc
insb
add
mov
sbb
out
cwtl
ljmp
xchg
lret
sbb
adc
pop
mov
inc
dec
mov
gs
fsubs
bound
xor
pushf
loopne
out
addr16
pop
addl
loope,pt
aaa
xchg
add
jl
jl
jge
lret
pushf
pop
movsb
popa
loope
sbb
dec
inc
sub
push
cwtl
pop
inc
add
fimull
inc
mov
push
mov
push
adc
mov
mov
dec
add
stos
hlt
mov
or
xchg
mov
nop
xchg
mov
or
in
fldln2
or
and
sarl
lods
sbb
test
pop
xchg
ds
jp
lods
lods
sub
or
inc
jns
pop
into
cmp
loop
cmp
xchg
aam
cmc
xchg
sbb
inc
cmc
xor
push
xor
ret
popf
lret
push
out
jecxz
jp
pop
jl
out
jecxz
leave
scas
mov
jl
mov
imul
daa
jnp
sub
leave
cmp
aas
ss
mov
popf
fcomps
insl
in
repnz
outsl
push
loop
out
and
fmull
cmp
mov
rcl
rorl
xchg
test
xor
in
mov
mov
and
mov
test
pusha
cmp
cltd
lods
popa
int3
clc
sub
mov
mov
xor
sub
hlt
in
sub
cmp
ss
shr
jo
out
pop
xchg
or
jp
pop
cmp
xor
lds
mov
in
xchg
mov
sti
sahf
daa
into
loope
or
sti
pop
les
test
notl
movsb
cli
out
dec
dec
fstpl
or
dec
fcoms
je
sub
jle
jno
sar
outsl
add
add
fistl
imul
xor
jmp
sbb
add
xchg
popf
ficomps
aam
mov
cltd
jmp
pushf
pop
into
xchg
fistpl
je
push
enter
data16
loopne
test
adc
in
or
add
push
js
in
xchg
adc
sahf
ljmp
mov
jbe
scas
aam
int
push
inc
inc
int3
stc
pop
jge
jb
pusha
sti
or
call
stc
clc
mov
aaa
jp
push
sbb
push
pusha
sbb
stc
aad
mov
and
addr16
sbb
ss
push
addb
cmp
lret
adc
lods
adc
xchg
in
mov
pop
shrl
imul
cmp
add
fs
in
cs
ja
out
pop
and
xchg
cmpsl
rcrl
daa
xor
in
stos
clc
pop
aas
mov
mov
shrl
dec
repnz
mov
sbb
inc
scas
push
dec
push
ljmp
sub
add
jge
push
xor
jb
test
mov
push
push
dec
or
cwtl
add
push
rcrb
sub
inc
in
nop
int3
std
inc
add
rorb
call
lds
in
jae
push
push
and
lods
jno
mov
aaa
cmc
pop
dec
mov
cli
or
mov
test
decl
icebp
loop
scas
andb
int3
mov
fstps
outsb
cmp
fisttpll
cltd
adc
adc
cmp
push
repz
adc
je
fildl
push
dec
add
mov
mov
or
dec
mov
popa
cld
jmp
dec
imul
ret
data16
mov
subb
cmpsl
inc
les
or
xchg
cmpsl
pop
mov
push
aad
in
aaa
push
out
dec
adc
outsb
adc
and
pop
cmpl
xchg
test
cmp
out
out
das
inc
xor
fisttpll
lcall
daa
repnz
xor
sub
stc
push
in
in
stc
pop
xchg
xor
test
jl
loopne
ficomps
outsl
push
jge
dec
addr16
test
push
push
sbb
cmp
rclb
popa
test
inc
ja
outsl
push
loopne
cli
xchg
out
aas
frstor
fucomp
pop
mov
hlt
or
js
enter
jecxz
cmpsb
btcl
and
enter
test
cmp
gs
mov
call
jb
out
pop
and
call
add
dec
aad
jl
and
xlat
mov
in
push
cmpsl
xchg
pop
or
out
into
int
pop
movsb
and
inc
mov
sti
pusha
popf
loop
pop
fdivs
aam
daa
test
adc
adcb
add
scas
mov
adc
xor
mov
sub
orl
add
sbb
adc
pushf
mov
lds
ds
dec
shll
out
hlt
pop
xor
add
loope
sub
outsl
pop
lea
xchg
fistpll
xor
mov
cwtl
push
out
cs
sbb
mov
cwtl
paddd
cwtl
ljmp
mov
and
sbb
pop
fcmovnu
pop
push
pushf
bound
shlb
jb
pop
xchg
int
imul
iret
sub
icebp
pop
repnz
sbb
fstl
aad
push
xchg
xchg
and
aas
pushf
lret
sarl
pcmpeqb
pop
inc
inc
push
sahf
rcrl
icebp
cld
or
pusha
mov
adc
cmpsl
mov
es
jae
pushf
add
push
imul
xchg
dec
outsb
adcb
sub
sbb
adc
inc
pause
pushf
push
mov
pop
mov
scas
adc
and
pop
iret
add
in
std
out
push
mov
add
imul
lahf
push
jae
shl
orl
clc
repz
subb
and
jmp
popa
push
das
cmpsb
cmpb
out
or
bound
push
aas
outsb
mulb
data16
cwtl
pop
sub
xor
jle
lret
push
mov
loope
aad
mov
inc
or
push
shlb
fbld
imul
testl
and
int
and
notl
jge
xchg
jg
sbb
gs
in
ror
or
fwait
outsb
sub
cld
mov
inc
lds
iret
shlb
std
dec
xchg
xlat
fs
pop
into
and
inc
jmp
out
xor
lds
mov
ja
scas
js
and
mov
xlat
fnstsw
xchg
loop
xor
mov
rclb
mov
jg
iret
js
mov
jl
pop
mov
cmc
mov
sub
call
test
addr16
mov
inc
leave
add
cwtl
dec
fldpi
mov
stc
jbe
adc
cmc
lock
mov
mov
cwtl
test
or
xchg
pop
cld
xchg
outsl
add
out
cmp
dec
cmpsl
enter
pop
cmp
imul
stos
ljmp
loop
jb
leave
ss
jno
jne
jb
and
out
lcall
or
iret
pop
ljmp
and
std
jnp
xchg
dec
mov
adc
jmp
rclb
out
jl
sub
mov
mov
and
cmp
dec
and
or
pop
aam
fwait
ja
data16
rolb
push
icebp
addl
mov
adc
fcoml
inc
xor
mov
sub
aam
loopne
daa
clc
addb
jg
scas
jge
loop
pop
jbe
dec
loop
mov
sub
sub
push
dec
mov
aaa
dec
enter
and
jmp
jg
sub
lcall
inc
cmpsb
mov
mov
sub
andl
outsl
push
mov
push
scas
mov
arpl
jbe
mov
adc
dec
arpl
push
push
mov
pushf
mov
sbb
xor
es
dec
xchg
cld
out
ret
pusha
and
adc
hlt
push
cs
in
test
pop
jmp
cmc
inc
stc
pop
inc
mov
std
cmp
mov
xor
push
enter
sbb
loop
mov
lret
mov
pop
dec
pop
outsl
push
and
sbb
clc
xor
ret
mov
mov
push
adc
cwtl
fmull
or
pop
aaa
sti
shrb
sub
inc
addr16
cli
lcall
xor
sarb
fisubrl
mov
xorl
fwait
lds
out
xor
stos
cmp
cmp
adc
and
xchg
mov
loop
mov
jmp
shll
mov
jecxz
out
into
jp
mov
mov
fs
sahf
hlt
cli
xor
loop
and
std
pop
out
mov
jecxz
out
sbb
jno
cmp
ds
mov
or
ds
sbb
mov
pop
jb
or
int3
ret
in
push
inc
add
jno
sahf
mov
notb
fsubr
cmp
add
test
aam
sub
push
add
mov
les
cmp
jl
daa
push
loopne
pop
fwait
xor
mov
leave
out
pop
lcall
test
and
and
sbb
jmp
jl
jb
cmpsl
and
mov
popa
adcl
ljmp
dec
jns
push
xor
add
dec
ret
loope
xchg
loop
xor
inc
cwtl
pop
movsb
fistps
imul
outsb
and
aas
adc
pusha
int3
mov
mov
movb
mov
push
addr16
xor
xchg
jmp
jb
pop
ds
rorl
in
inc
sub
jae
xchg
pop
jmp
mov
cwtl
add
or
ljmp
decl
sarl
cmpsb
inc
jecxz
das
loop
cld
dec
sarl
flds
pop
mov
nop
jno
dec
mov
jbe
push
scas
ja
scas
xor
mov
cmpsl
lcall
lock
pop
gs
lahf
cs
fldenv
fildll
adc
popf
mov
sahf
jb
lret
rcr
sub
sub
imul
mov
sub
in
ds
dec
fs
jl
iret
push
and
ja
sub
xor
inc
lods
insl
out
cmp
data16
jg
dec
xor
adc
sub
fs
jne
fbstp
inc
jo
cld
sbb
xchg
ja
pmuludq
sub
adc
mov
mov
popf
stc
dec
push
xor
push
add
add
call
mov
in
dec
lock
or
xchg
xchg
aad
lcall
pop
jp
sahf
pop
and
push
xchg
std
xlat
mov
and
cmpl
cmp
mov
mov
stc
mov
mov
mov
xorb
mov
pop
xchg
in
adc
or
clc
push
jmp
cmp
xor
cmp
xchg
add
aam
xchg
jecxz
fisttps
mov
hlt
call
jmp
mov
xlat
lret
jp
sahf
push
ja
in
xchg
sbb
sub
or
in
add
push
fistpll
push
adc
jmp
arpl
lret
or
xor
fs
jo
mov
adc
jmp
scas
rorl
invd
push
push
jne
xchg
repz
rorl
inc
push
jae
sub
cld
sahf
out
xor
xlat
je
in
mov
jno
adc
movsl
jmp
mov
popf
and
inc
sub
adc
jae
jmp
push
fnstcw
daa
hlt
inc
outsl
push
daa
xchg
xchg
fidivrs
fbld
mov
inc
adc
inc
push
aaa
movsl
mov
or
and
xchg
sarl
push
movlps
push
mov
dec
push
jno
ret
jbe
nop
cmp
sub
test
or
push
rcll
sbb
shrb
adc
in
fdivrs
xor
dec
inc
sbb
sbb
aad
sub
das
mov
testl
cmpsl
xorl
xor
dec
mov
xchg
push
dec
cmp
sarl
and
pop
das
jo
mov
hlt
add
pushf
push
lahf
add
or
jl
loope
dec
mov
ret
call
sbb
ret
mov
fidivrs
pushf
outsb
leave
sub
jmp
and
inc
mov
cld
inc
mov
js
xchg
mov
adc
test
inc
cmp
adc
ss
pop
sbb
dec
sub
push
cmp
orl
les
xchg
int3
out
js
dec
mov
lds
jmp
rcl
dec
xor
icebp
les
das
es
add
push
aam
js
xchg
cmp
out
imul
fistps
or
imulb
into
enter
mov
pop
loope
lds
mov
and
adc
mov
movsl
xchg
add
sub
in
imul
out
fldcw
test
in
inc
clc
xor
shll
rcll
lods
push
add
sub
or
add
mov
lods
enter
and
aaa
pop
mov
mov
out
xor
inc
cli
dec
add
out
jg
cmp
jns
dec
iret
ret
icebp
int
pop
mov
fisttpll
ja
test
clc
sub
mov
imul
cmp
jmp
aas
push
arpl
xchg
cmpsb
lret
rcll
lret
je
mov
test
lret
push
jmp
imul
and
loope
jns
pop
pusha
xchg
or
push
inc
push
sahf
data16
es
ud2
mov
fwait
dec
ja
add
dec
cwtl
inc
iret
rcrl
sbb
jp
outsl
cmp
lods
rolb
out
cmp
sbb
fstpt
adc
cmp
enter
pushf
dec
mov
fmull
test
shll
xchg
stos
mov
aaa
rol
fwait
adc
cmp
xor
jb
lock
mov
jne
jp
inc
push
jge
sbb
scas
jecxz
aaa
stos
or
imul
sub
in
stos
aad
lods
add
fistl
fsubs
push
pop
enter
shlb
dec
push
stos
std
gs
or
push
push
outsl
cmp
in
les
mov
or
mov
jae
adc
lcall
and
xchg
lcall
ror
pop
sbb
std
mov
std
das
jp
add
hlt
pushf
and
or
push
jbe
push
test
ja
rorl
xchg
xchg
fstps
popf
jnp
aaa
aam
xchg
arpl
inc
pop
mov
jns
xchg
lods
test
pop
add
cmc
xchg
popf
pop
jo
fucomi
xchg
popl
push
mov
and
add
sbb
xchg
add
jp
pop
aaa
lret
push
sbb
jne
icebp
cmp
pop
shrb
imul
jp
pop
rcrb
das
pop
mov
jae
inc
movsl
mov
fs
adc
xchg
mov
repnz
daa
movsb
jl
call
cmp
mov
sahf
nop
and
or
fidivl
xor
mov
das
enter
lea
and
loope
mov
stos
ss
test
cmp
inc
fs
ret
add
cltd
mov
xor
add
xchg
ds
sbb
mov
lock
cs
ljmp
cmp
jmp
sub
in
cmp
mov
shlb
pusha
xor
rclb
in
jns
mov
icebp
inc
shlb
mov
imull
push
mov
or
ljmp
mov
mov
enter
mov
sbb
mov
ret
mov
rcrb
xchg
adc
mov
shrl
or
xchg
int3
dec
in
jae
popf
scas
fistpl
push
sti
dec
cmp
out
mov
sbb
in
dec
sbbl
add
pop
push
cmpsb
add
fisubs
inc
inc
or
adc
fcoml
add
adc
cli
in
cli
or
push
insl
fcoms
loop
inc
adc
add
dec
dec
pop
push
sarl
lea
push
enter
into
inc
addr16
cli
negl
xor
shlb
notb
bound
arpl
aaa
cmp
iret
ljmp
jb
mov
mov
mov
pop
jne
pop
js
push
stc
stos
loop
pop
push
dec
std
mov
cmp
rolb
xor
or
dec
mov
out
or
pop
sub
or
mov
addb
daa
fs
mov
pop
and
pop
fabs
outsb
xchg
and
cltd
inc
mov
dec
repnz
mov
adc
or
sub
out
incl
bound
loope
mov
adc
pushf
leave
sub
mov
and
adc
pushf
push
mov
inc
mov
mov
xchg
popa
mov
loope
lods
and
xchg
mov
imul
shl
mov
mov
aaa
std
mov
sub
push
rorb
sarb
std
outsl
out
mov
movsl
test
data16
mov
dec
or
or
push
pop
test
pop
xchg
push
das
pusha
mov
scas
out
std
call
test
bound
xor
shll
xlat
psllw
lods
mov
fs
lret
dec
mov
sbb
es
sub
xchg
sbb
data16
mov
xor
and
loop
sub
scas
jge
frstor
fucomi
out
lock
sti
mov
mov
iret
mov
cmp
mov
lret
lods
pop
sbb
inc
mov
stos
sbb
daa
std
xor
jns
push
lds
nop
insb
jns
mov
xor
add
imul
xlat
jne
mov
mov
mov
xor
shll
test
mov
je
aas
xchg
jmp
loopne
rcr
mov
fisubs
outsl
adc
xchg
imul
repz
lds
shlb
in
mov
std
lret
cmc
hlt
aam
shlb
cmp
pushf
enter
repnz
dec
aas
jnp
cmpsl
add
out
outsl
arpl
je
loope
sub
fs
mov
pushf
adc
mov
shr
out
clc
sub
push
add
test
mov
mov
inc
xor
pushf
pop
cmpsb
in
mov
ja
jl
sbb
bound
hlt
sbb
aad
jnp
nop
lea
adcb
adc
pop
ret
mov
cltd
push
dec
push
xchg
cmpb
mov
xchg
dec
or
jo
cmp
stc
sbb
dec
rcr
jg
leave
imull
add
shrl
adc
and
add
shll
lods
mov
insb
fbld
push
or
cmp
out
push
lods
lcall
xchg
es
dec
cmc
sahf
pop
lahf
aas
sbb
loop
insl
and
mov
cwtl
or
adc
mov
cs
rcr
dec
movzbl
out
int
pop
jns
aas
add
push
mov
inc
adc
mov
jo
mov
add
mov
pop
sbb
cld
jg
repnz
testl
jecxz
shrb
pop
out
repnz
pop
sar
cmp
fstps
sub
fnstsw
xchg
pusha
fmuls
frstor
and
push
fidivs
jbe,pt
data16
and
cmp
dec
stos
call
jle
or
push
std
xlat
stos
cmc
mov
push
or
stos
mov
jae
cmpsb
in
push
fsubp
pusha
adc
xorl
shrb
xchg
insl
lahf
decb
and
cmpsb
mov
mov
rolb
xchg
sbb
lcall
push
mov
sub
lret
inc
js
sahf
xchg
popf
jmp
pop
mov
fsts
jmp
iret
push
int
xor
popf
jg
test
lea
mov
in
movl
test
push
add
mov
stc
push
cld
or
inc
icebp
pop
dec
stos
inc
jno
mov
inc
inc
call
mov
adc
xchg
lahf
loop
and
fimuls
lds
addr16
xor
sub
push
loop
rclb
sub
loopne
out
jns
dec
lds
out
lock
gs
dec
out
mov
sbb
dec
outsb
push
fwait
pop
lcall
dec
and
fidivrl
testb
in
repz
arpl
dec
dec
enter
insl
dec
loopne
push
mov
popa
inc
dec
movsb
mov
sar
out
fs
mov
xchg
and
add
in
js
inc
push
mov
push
add
jno
mov
xchg
jns
cmp
mov
cmp
enter
scas
or
aaa
dec
xchg
adc
fsub
cmpsb
sbb
bnd
je
dec
movsl
pop
mov
xchg
sti
cmpsb
xor
mov
push
push
adc
loopne,pn
xchg
pop
adc
imul
call
stos
push
inc
scas
dec
add
hlt
pop
mov
inc
jmp
jo
jecxz
movsl
scas
cmp
ljmp
ljmp
fmull
add
jae
mov
sub
xor
sub
movsl
cmp
mov
ret
xchg
pop
jae
jp
rcrb
test
arpl
cmp
out
xor
test
jl
movsb
xor
add
push
cmp
aaa
cmp
rorb
pop
add
and
add
mov
insl
fcoml
bound
popa
jmp
xorl
mov
and
xchg
loopne
mov
insb
jle
mov
xor
xor
mov
mov
enter
iret
inc
in
pop
test
ret
fisubl
ret
push
inc
mov
std
add
jo
cmpl
dec
or
in
xchg
adc
pop
and
xchg
inc
ret
cmp
lcall
jo
push
adc
mov
imul
pop
mov
je
cmp
pop
push
mov
pop
leave
jle
mov
cmpsb
jge
sub
lret
inc
mov
and
loope
in
and
and
into
dec
mov
mov
lock
sub
adc
clc
hlt
addr16
mov
sahf
jbe
sub
sbb
into
inc
lods
push
mov
fstl
add
les
insb
neg
inc
les
hlt
or
dec
or
mov
jb
imul
out
test
ja
add
dec
xor
inc
push
pop
or
adc
pop
xor
lret
inc
rcrl
adc
adc
leave
push
xor
ret
add
nop
in
lahf
test
or
dec
aam
mov
xor
add
aaa
movsl
fmull
jns
out
stc
mov
rcrb
fimuls
push
dec
sbb
jp
rorl
xchg
push
mov
aaa
cmp
jnp
xor
adc
aam
add
iret
fbld
mov
and
aam
jecxz
shr
dec
iret
mov
pop
pop
cli
ss
jb
jmp
xchg
leave
sub
das
idivl
mov
adc
cmpb
adc
mov
fs
xor
mov
push
add
mov
adcb
dec
shll
fsts
lret
rolb
mov
push
inc
cli
sbb
push
xor
xor
inc
lcall
lods
sbb
dec
dec
jae
jmp
mov
sub
lahf
lret
sbb
xor
popf
test
or
imul
std
jb
adc
testl
lret
scas
outsl
xor
icebp
add
xor
test
int3
icebp
scas
mov
pop
xorb
mov
xchg
cs
fucompp
enter
outsb
mov
mov
ja
in
lods
cli
test
add
daa
je
mov
xor
mov
pop
push
add
clc
shrb
and
jbe
mov
ret
dec
jnp
xor
inc
clc
push
les
pop
enter
inc
inc
data16
ss
mov
ret
lret
cwtl
fcoms
dec
mov
xchg
mov
pop
add
inc
mov
popl
test
jmp
ret
push
mov
out
fsubl
mov
test
xchg
sbb
sbb
inc
bound
xchg
sub
mov
xchg
or
jl
and
imul
mov
jmp
xchg
dec
outsl
cmp
inc
and
mov
sub
dec
lds
sub
clc
add
jbe
addb
jb
leave
sbb
sbb
and
xor
pushf
inc
jnp
fsts
into
lea
jmp
addr16
out
test
clc
add
in
int3
push
rorl
and
popa
xor
jg
out
insl
xchg
testl
xchg
xchg
cmp
mov
xor
dec
and
jne
shl
push
xor
ficoms
out
bound
xchg
jno
fcoml
pop
cmp
mov
jo
ss
pop
loope
fwait
ret
bts
sub
cmp
jbe
clc
lahf
mov
mov
dec
or
and
jmp
sbb
mov
popf
aam
clc
hlt
xchg
pop
lcall
inc
push
adc
aad
and
jo
out
cmp
and
aad
rep
xor
push
mov
cmpb
dec
mov
inc
xor
psubsb
movsl
adc
lret
movsb
or
mov
mov
pop
fisubrl
cs
pushf
add
je
jb
ljmp
push
orb
cmp
mov
out
mov
addb
xor
xchg
push
lods
inc
mov
pop
xchg
adc
xchg
jnp
mov
cmc
aam
testb
jbe
cltd
xchg
scas
xchg
and
pop
cmpsl
and
mov
sub
push
jnp
add
in
loope
add
jb
adc
pop
into
imul
ds
enter
outsb
mov
ljmp
subl
mov
xchg
inc
inc
inc
jo
test
sbb
xchg
insl
sbb
xchg
pop
cld
movsb
outsl
shr
dec
stc
imul
mov
decb
push
pop
push
test
je
pop
test
clc
out
cmp
dec
shrl
and
insb
cmp
bound
lea
std
xchg
lds
repnz
add
pop
push
ds
dec
mulw
sub
imul
mov
out
dec
call
fdivr
jne
cmp
test
mov
push
add
sbb
pop
cmp
testb
outsb
bnd
xor
push
pop
xchg
mov
add
jecxz
push
enter
jg
sahf
push
cmp
sbb
clc
imul
arpl
insl
and
test
lea
fldcw
sbb
xchg
in
xchg
sub
imul
pop
and
loop
push
inc
add
adc
out
leave
scas
int
add
lret
adc
lahf
dec
dec
push
or
jge
shrb
loope
mov
out
shrl
subb
dec
daa
stc
or
lcall
pop
pushf
cld
pop
add
out
int
mov
test
jecxz
sbb
loopne
in
adc
movsb
fbstp
mov
push
push
ret
in
cmp
inc
lods
adc
xlat
movsb
vmaxpd
cld
jmp
and
scas
xor
bound
loopne
sbb
xor
int
cs
inc
sbb
repz
mov
fidivl
jge
add
xchg
pop
mov
loop
in
je
xor
mov
repz
test
jle
sbb
dec
and
adcl
and
out
sbb
dec
mov
adc
mov
and
ljmp
push
sub
cmp
or
cltd
push
mov
xor
pop
nop
aam
jle
pushf
dec
fwait
lcall
int
sub
es
ljmp
jge
sub
cmp
lret
jg
int
sti
add
jae
dec
push
dec
jmp
cmpsb
sti
sub
out
add
adc
dec
add
xor
mov
dec
outsl
and
mov
cmpsb
cmp
test
into
xor
cmpl
or
add
xor
cmpsl
in
cmc
cmp
push
mov
cli
xchg
je
mov
sti
aam
cmp
lods
shlb
fdivs
push
cmpsb
mov
or
and
testl
or
jo
add
xor
and
vmread
imul
inc
icebp
lahf
out
inc
outsb
xchg
cmc
pop
cs
dec
shll
ret
sub
cmp
cld
jmp
push
hlt
adc
xchg
pop
jb
jle
mov
inc
mov
xchg
fninit
out
daa
pop
stc
cmpsb
mov
cs
cmp
shll
push
mov
or
inc
mov
pop
std
jle
xor
add
inc
jns
lods
mov
lods
and
adc
jae
in
out
rorb
and
cmc
push
sbb
push
dec
in
adc
mov
mov
mov
mov
in
xlat
xorl
sub
in
cmp
mov
je
and
fcmovbe
sub
arpl
pop
jecxz
inc
sbb
out
xchg
ss
mov
adc
inc
cwtl
inc
in
js
lret
adc
xor
dec
jo
pop
outsb
mov
jns
jmp
dec
adc
je
ret
shl
sar
cmp
jae
aad
clc
jl
jne
jecxz
mov
cmc
pop
and
mov
ret
and
inc
sbb
out
in
add
dec
insl
in
test
std
push
mov
leave
pop
int
pop
mov
push
push
mov
xchg
xor
and
jae
xor
ja
int3
jg
sub
or
rorl
popf
jne
ljmp
pop
jl
rolb
rol
push
cltd
cmp
xchg
or
out
inc
clc
add
insb
inc
xorb
rcr
push
fstl
lret
xchg
je
ret
xchg
icebp
in
std
jecxz
add
or
sahf
sbb
sub
sub
push
dec
mov
outsb
dec
in
lahf
subl
jle
cmp
loopne
push
dec
fsubrs
ret
bound
and
loopne
bswap
jae
inc
push
sub
cmp
sbb
push
mov
mov
pushf
or
pusha
lret
aas
jmp
mov
loop
jmp
jg
inc
es
mov
les
jno
inc
push
das
imul
fcomps
and
jge
add
aas
mov
xor
or
sub
pop
enter
inc
sub
jle
cwtl
jp
inc
stos
mov
aad
lds
icebp
or
jnp
stc
ret
push
xchg
pop
xchg
aad
mov
xchg
xlat
xor
mov
push
hlt
push
dec
shl
loope
xor
inc
adc
in
stos
mov
bound
mov
shrb
sbb
ds
std
jl
icebp
popf
mov
push
in
push
pop
mov
mov
fstpt
adc
dec
adc
mov
and
add
outsb
scas
push
hlt
inc
fildll
xchg
and
fcmovnu
mov
bound
rcrl
sbb
dec
mov
daa
adc
push
rcll
sub
mov
pusha
addr16
popf
sub
dec
jae
lret
mov
test
sub
cmp
fwait
sub
je
add
sbb
mov
mov
ret
jg
jbe
cmp
fs
cmc
and
jg
out
mov
cs
addl
rorb
repnz
cmp
and
push
popf
or
cwtl
mov
lods
call
mov
sti
adc
dec
js
pop
sbb
push
mov
cmc
cmp
imul
aas
jl
jg
shl
add
add
out
ja
sahf
cmpb
ja
jp
adc
mov
insl
das
iret
inc
jl
mov
je
jmp
dec
xor
xorl
lea
int3
mov
push
push
sbb
outsl
pop
movsb
lods
stos
mov
xor
xchg
cmp
stc
fcmovb
arpl
cli
fsubs
fsubl
cmp
outsb
inc
jo
cmp
xlat
movsl
lret
arpl
inc
push
fildl
sbb
cmpsb
test
xchg
out
test
mov
cs
or
push
leave
sbb
jns
mov
loope
inc
sub
dec
cmc
stos
fstpl
push
int
cwtl
repz
push
pop
inc
pusha
cmc
sbbl
in
cs
movsl
insl
mov
inc
gs
or
xchg
jbe
inc
adc
insl
jae
pop
data16
leave
and
pop
cmp
mov
push
iret
add
sbb
aas
and
jo
push
outsb
das
adc
mov
stos
out
xor
sbb
xchg
pop
or
and
cmp
adc
inc
pop
xchg
les
push
stos
mov
jnp
sub
push
in
loop
pop
repz
dec
ss
ds
iret
js
push
scas
mov
mov
dec
pushl
add
in
push
loopne
mov
enter
and
pop
aaa
fnstenv
sbb
mov
outsl
das
arpl
cmp
stos
vmaxsd
movsb
mov
out
rol
addr16
add
xor
mov
xor
lret
in
sbb
data16
ja
jae
add
push
push
out
xchg
dec
stc
inc
inc
pop
jp
test
sub
or
fisubs
add
jge
push
xor
add
cltd
lea
xor
fiaddl
cmc
adc
mov
sub
or
ret
js
movsl
fisubl
movsl
dec
cmpsl
push
mov
jl
stos
repnz
pop
mov
mov
jo
addr16
fwait
mov
jnp
push
in
mov
vaddsubpd
or
pop
mov
out
dec
xor
out
outsl
dec
adc
loop
test
sub
pop
mov
inc
mov
roll
mov
sub
pop
call
push
fidivrs
lods
xchg
mulb
xor
push
inc
es
cmp
inc
iret
cmp
mov
xor
inc
pop
push
aam
sub
sbb
in
in
pushf
inc
clc
test
jae
and
mov
and
dec
cmp
mov
jns
gs
cld
out
lods
leave
cmp
aam
cmp
mull
loope
divl
pop
test
sbb
dec
push
ficoms
outsb
and
stos
insb
inc
xchg
cmp
fnstenv
aam
je
clc
cwtl
mov
rcrl
pop
shrl
adc
xchg
cwtl
inc
xchg
into
pop
pop
add
dec
cmpsl
xchg
lret
mov
xchg
pop
mov
test
idiv
sub
test
outsb
push
inc
cmp
shll
popf
cmpsl
mov
out
rclb
stc
inc
push
sbb
in
outsl
mov
ret
xchg
mov
or
xchg
jnp
es
pop
add
mov
fmull
mov
and
shl
lods
fsts
jge
xchg
lock
add
jnp
xor
aas
inc
ret
xor
filds
pop
imul
dec
int
mov
mov
aaa
mov
xchg
sub
dec
fidivs
std
adcb
jmp
adc
and
mov
mov
sub
clc
insl
cmc
cld
loopne
pop
and
push
sahf
cmp
test
push
ss
and
stc
sub
pop
mov
pop
fstl
std
mov
add
sbb
test
fdivl
pop
or
sbb
sbb
cli
or
sub
xchg
pop
lock
push
xor
rorb
dec
pushf
inc
inc
xchg
sub
or
push
pop
movsb
andl
int
icebp
dec
mov
ret
outsb
cmpsl
rcrb
xchg
jecxz
sarl
mov
ljmp
shl
adc
jo
outsl
fsubrs
adc
daa
mov
mov
sbb
xchg
mov
cmp
inc
arpl
inc
stc
fstl
pop
mov
mov
mov
aad
insl
xor
notl
xchg
fcomip
push
icebp
fwait
inc
mov
xor
hlt
mov
shrb
andb
addr16
aas
push
xor
pushf
imul
cmp
outsb
push
add
pop
mov
sahf
push
and
inc
f2xm1
lea
aas
out
dec
jns
mov
and
push
push
cmp
adc
or
mov
adc
pop
mov
jne
cmp
test
incb
dec
pop
mov
mov
mov
and
lcall
ficoms
and
ret
in
push
mov
in
lock
sti
pop
je
addr16
inc
mov
and
inc
mov
sahf
into
ss
imul
dec
jbe
nop
std
sub
in
in
and
and
in
pushf
imul
pop
xor
xorl
mov
push
in
inc
mov
xchg
ror
xchg
add
in
in
add
loopne
cmp
mov
pusha
cld
je
cltd
rolb
jecxz
mov
and
ljmp
push
pop
cmp
xchg
pop
cmp
into
adcl
orb
pop
imul
inc
js
fldenv
lock
dec
push
inc
into
cli
test
and
xchg
cmp
push
mov
mov
inc
fldl
mov
xchg
mov
adc
add
sub
push
push
add
rolb
jecxz
jbe
xor
or
xchg
jo
jg
adc
jg
fucom
push
scas
scas
xchg
pop
dec
ss
notb
rclb
mov
pop
test
ds
mov
pop
loopne
inc
add
pusha
fs
lock
cmp
js
sbb
mov
lcall
pop
and
inc
mov
adcl
repnz
js
ret
or
test
mov
inc
pop
pop
nop
or
lret
pop
jmp
pop
out
out
inc
fistps
and
orl
xchg
xor
cmp
scas
dec
mov
add
push
and
dec
xor
and
xchg
scas
fcoms
xor
shll
ds
lret
enter
sbb
test
inc
push
add
add
movsb
flds
dec
rcll
mov
xlat
xchg
nop
mov
imul
addl
and
cmp
test
mov
std
sub
sbb
out
ja
fisubs
aaa
sti
xchg
or
leave
jmp
adc
push
sub
dec
jne
movsl
in
push
or
and
daa
jge
int
mov
mov
movsb
aad
loopne
pop
mov
cmp
xchg
xchg
loop
mov
mov
push
fs
adc
sbb
mov
fsts
fs
mov
ja
fucomp
orl
or
gs
sbb
push
jnp
sbb
js
lea
cmp
push
movsl
pop
js
jnp
xchg
mov
js
in
ret
jmp
xor
mov
lret
inc
lods
in
xchg
idivb
mov
add
mov
dec
inc
jno
fidivrs
in
push
dec
loope
push
sub
mov
xlat
jg
sub
adc
mov
fistpll
addb
aaa
mov
repz
lret
in
sbb
dec
sub
mov
dec
and
lret
in
and
gs
mov
imul
sbb
jmp
sbb
add
xor
stos
in
rcl
rclb
aam
cmpsb
aaa
mov
mov
and
sbb
pop
dec
test
int3
xchg
mov
jne
sub
loopne
ss
and
sub
mov
xor
sub
push
adcb
out
iret
jae
cmp
mov
xchg
pop
lock
enter
nop
ret
xor
fadds
lea
jge
fbld
pop
out
repnz
sub
in
mov
ss
out
test
movsl
jp
lock
js
ljmp
dec
cmp
inc
repz
cs
stos
vmovups
out
xlat
cmp
arpl
xchg
dec
push
inc
xor
cmp
dec
test
push
loope
mov
push
scas
mov
mov
pop
pop
loopne
or
js
iret
push
lods
xor
mov
fists
cmp
out
mov
nop
xchg
sbb
push
fisttpll
dec
int
lret
xor
iret
or
mov
xchg
inc
sub
mov
test
in
add
les
insb
pushf
outsl
lret
adc
int3
stos
repnz
pop
in
ja
addl
test
sub
push
std
add
test
into
push
cmp
push
or
add
imul
ret
clc
sbb
adc
xchg
scas
mov
mov
pushf
push
xchg
push
push
repz
jns
adc
inc
test
paddb
adc
sbb
push
mov
imul
les
xchg
lret
dec
push
popf
pop
scas
mov
incb
in
out
dec
sbb
enter
pusha
and
jnp
add
int3
inc
push
aaa
jae
xor
add
jns
mov
pusha
dec
popl
loop
dec
sub
cmp
addr16
cwtl
xorl
push
je
mov
test
pop
stos
lea
sbb
sbb
aam
inc
push
dec
xor
add
add
pusha
dec
mov
push
clc
frstor
lods
jmp
mov
cli
das
aaa
das
cs
insb
aaa
push
outsb
mov
outsl
dec
pop
test
mov
movsl
mov
outsb
int
jb
pop
test
or
mov
xchg
jnp
push
and
xchg
shll
cmpsl
les
sub
les
mov
into
inc
ficoms
lret
addr16
sbb
movsb
test
mov
sar
or
loope
adc
adc
mov
lds
inc
and
fdivrs
mov
push
test
in
cli
mov
stos
adc
mov
cmp
fwait
stos
pop
xor
outsb
in
bound
hlt
jmp
pushl
or
jnp
add
lcall
shll
lcall
xor
gs
add
xchg
rcl
out
arpl
pop
sbb
mov
jnp
insb
dec
push
leave
pop
test
mov
outsl
cmp
sbb
cmpsb
xor
dec
stos
fsubs
push
std
outsb
xlat
push
movsb
das
mov
fxch
xchg
inc
jo
push
jae
mov
jp
jo
mov
and
cwtl
inc
inc
insb
lret
orl
or
dec
cwtl
ret
sub
jmp
jae
cltd
add
mov
insb
pusha
jno
xchg
push
subb
cli
mov
or
sbb
sti
mov
or
mov
inc
fistpll
js
sub
or
cs
pop
mov
xchg
pop
dec
or
test
dec
mov
pop
pop
lret
mov
pop
mov
add
jp
cmpsl
mov
ds
add
sti
inc
push
sarl
add
sub
fnsave
aad
pop
sub
add
and
arpl
in
lods
imulb
xor
inc
lods
or
cwtl
pop
or
xchg
in
bound
jge
in
cli
outsb
pop
mov
xor
sbb
dec
sbb
add
cli
fisttps
arpl
pop
arpl
dec
cmpsb
add
repz
pop
xchg
and
pop
into
cmp
out
or
mov
or
fldcw
mov
xchg
jl
jle
ret
faddl
test
hlt
or
daa
or
cmp
lods
dec
jle
lods
and
outsl
aam
jns
xlat
mov
fmuls
lods
push
insl
adc
and
repz
inc
idivl
lret
test
lahf
outsb
and
push
push
add
sub
or
pop
out
subl
in
lret
movlps
mov
aas
jo
pop
push
popa
idiv
dec
scas
push
add
leave
cmp
cmpsl
ja
xchg
mov
dec
cs
ret
add
dec
roll
fldl
lods
sti
leave
lahf
lods
add
sub
push
mov
push
dec
and
mov
mov
pop
std
pusha
mov
jg
push
xlat
lods
fwait
sub
or
imul
scas
lods
push
pop
jge
mov
dec
add
inc
stos
pop
mov
push
das
xor
push
mov
adc
pusha
movsl
les
dec
fldcw
adc
nop
cli
mov
push
mov
fildl
sub
mov
pusha
insb
sub
aaa
out
outsl
adc
sbb
and
les
dec
call
push
adc
dec
xchg
arpl
popa
mov
mov
mov
xchg
jecxz
adc
mov
ret
outsl
lahf
inc
arpl
ds
lcall
int
popf
jbe
pushf
push
lret
imull
insb
lret
test
das
or
loop
inc
sbb
pop
js
add
add
add
loopne
mov
jo
andb
jg
ds
cmp
push
jge
xchg
iret
loope
in
fildll
mov
rdmsr
mov
mov
push
xorl
stos
mov
mov
out
rcl
js
mov
push
xorl
pop
lahf
jle
dec
je
mov
test
mov
adc
insb
gs
movsb
movsb
stos
fs
and
jl
test
mov
lock
out
cwtl
iret
subl
dec
xor
ret
stos
call
movsl
mov
mov
sub
push
mov
push
xorb
mov
add
into
adc
test
loopne,pt
mov
aaa
sbb
push
shlb
outsb
push
test
fmuls
pop
outsb
pop
mov
jo
push
iret
cmp
aaa
push
ret
ret
jg
xor
ficompl
push
inc
stos
mov
mov
or
jmp
hlt
pop
sarl
repz
jae
mov
sub
mov
push
in
ja
pop
cli
fisubs
mov
es
mov
pop
xchg
int3
ret
insl
add
cmp
mov
or
sbb
aaa
jb
pop
xchg
jb
sahf
popf
cld
cs
out
cwtl
push
push
add
gs
jno
lcall
in
je
or
and
negl
add
and
sbb
daa
fstl
mov
xchg
push
test
in
cmc
in
mov
mov
mov
pop
jle
cmc
jnp
mov
sbb
in
add
xor
in
lods
test
pop
xlat
adc
loopne
aaa
xchg
lea
int
xchg
shlb
adc
loop
jno
imulb
push
roll
push
lcall
and
imul
les
jp
stc
negb
mov
sbb
mov
test
mov
xor
cmp
addl
xor
mov
addb
push
xchg
jns
jg
push
out
adc
xlat
cmp
pop
inc
imul
test
push
jne
pop
in
rclb
xchg
add
repz
nop
lcall
sbb
xchg
pop
fs
test
xor
sahf
cmp
xchg
test
rcrb
lret
inc
lahf
sbb
push
subl
add
mov
leave
and
aas
jp
insb
pop
lods
mov
in
ja
ljmp
dec
icebp
mov
les
push
push
mov
mov
ficomps
and
aas
mov
xor
test
ret
sbb
leavew
shlb
dec
jnp
addr16
scas
das
bound
jecxz
pop
or
fs
pop
arpl
mov
dec
lret
aad
cmpsb
ljmp
mov
xchg
push
adc
mov
adcb
iret
mov
fadds
hlt
and
andl
icebp
fcmovb
jbe
sub
xor
arpl
imul
sahf
popf
pop
outsl
pusha
dec
jmp
jmp
in
xor
pop
std
mov
bound
adcb
je
cmp
cld
cltd
rcrb
xchg
inc
leave
push
inc
mov
leave
mov
pop
sub
sub
adc
mov
jns
cmp
call
out
js
mov
imul
or
pop
pop
or
inc
pop
pop
addr16
xor
or
push
pop
icebp
jecxz
ficompl
test
push
xchg
scas
sbb
aas
inc
and
or
scas
inc
outsl
aad
cmc
xchg
pop
inc
or
dec
jmp
test
sti
jg
cmc
jg
je
jmp
xchg
ficompl
mov
vpshuflw
fwait
test
cs
sub
jp
cmp
lods
loop
mov
divb
int3
ds
repz
arpl
mov
sbb
jle
inc
hlt
ret
imul
add
stos
les
sbb
jge
push
pop
sbb
aaa
push
sarl
repnz
push
add
lods
mov
mov
fcoms
push
jb
shlb
mov
mov
mov
fs
dec
mov
jmp
out
fsubp
pop
in
es
insl
test
test
push
mov
es
jb
jns
cmpl
fnstenv
xor
and
outsb
mov
dec
clc
pop
push
movl
xchg
mov
mov
mov
lock
and
dec
lcall
or
sti
cwtl
movl
mov
mov
push
push
jge
sbb
push
aam
adc
fucomi
jecxz
ret
push
bound
cli
mov
out
sbb
mov
mov
jbe
lahf
sbb
lods
xchg
push
cmp
pop
mov
jne
fisttps
xchg
div
shll
push
dec
or
mov
and
jp
pop
jns
dec
cli
lock
lock
stos
je
sti
cs
jne
imul
repnz
sub
mov
or
mov
or
int3
fs
je
xchg
lock
je
add
pop
imul
sbb
and
push
into
jmp
cld
push
mov
xor
orl
add
out
arpl
jnp
xor
out
mov
jge
jbe
pushf
rcrb
mov
sarl
mov
aaa
mov
pop
cmp
adc
insl
and
insl
rcrb
orb
out
in
outsl
enter
push
cmpsl
and
mov
cmp
cld
xor
rorl
mov
push
and
pop
stc
and
push
cmp
fs
pop
mov
sub
xchg
repnz
clc
jmp
mov
data16
jl
fisubl
sub
lock
out
hlt
jge
insl
in
cmp
jae
stos
jl
jp
sub
jl
test
mov
repz
fldenv
and
adc
mov
jb
cmp
addr16
loop
xor
ds
data16
cld
bound
ja
jg
mov
adc
mov
movsl
loop
pop
mov
lret
cmp
mov
cmp
xchg
pusha
pop
stc
lea
popa
mov
mov
repnz
cmc
stos
add
into
xchg
xor
in
add
pop
sbb
adc
leave
push
push
movsl
sti
bound
mov
enter
or
push
test
sbb
push
jp
je
imul
cmp
ljmp
iret
mov
andl
mov
add
xor
fdivl
outsl
adc
cmp
cmc
outsb
sub
xor
inc
repnz
xor
imul
ljmp
mov
in
aam
gs
sarb
test
pop
ja
dec
out
fmull
xchg
daa
repnz
pushf
scas
rclb
out
add
aam
xor
jbe
cmp
xchg
fisttpll
lods
dec
dec
sub
jo
xorl
lods
out
leave
xchg
pop
out
mov
mov
loope
pop
adc
stc
pop
int
pop
and
pop
dec
mov
push
mul
pop
push
adc
jl
mov
mov
test
jne
jecxz
push
mov
inc
mov
cltd
or
insb
adc
int3
mov
into
xchg
mov
fldl
mov
in
notb
out
push
adc
add
dec
loop
lock
cmp
jae
push
leave
mov
outsl
in
ljmp
inc
and
aam
cwtl
jne
shrl
push
dec
leave
push
ficoms
xor
cmp
jne
and
push
sti
dec
adc
test
adc
xor
sahf
pop
mov
stc
cmp
pop
dec
mov
and
stc
sub
mov
int
sbb
out
pushf
outsb
jo
lods
inc
movsb
icebp
aaa
sub
xchg
xor
xchg
sarl
xor
pop
mov
mov
cmp
js
fwait
pop
mov
mov
rorb
sbb
pop
andl
cs
repnz
xchg
ljmp
mov
mov
clc
and
sub
clc
push
jne
push
pop
aaa
test
in
xchg
or
arpl
mov
lea
stc
push
jg
add
add
mov
subb
popa
test
xchg
loopne
mov
adc
cld
adc
mov
jnp
xor
jns
shrl
js
sbb
push
dec
mov
js
ficoml
sbb
or
inc
fiaddl
mov
xchg
daa
mov
mov
mulb
mov
push
lret
das
into
rorb
jo
aas
cmp
pusha
sub
mov
mov
std
out
lock
xchg
xchg
jecxz
sahf
pop
or
lods
stc
cmpsl
mov
xorl
mov
stos
mov
mov
xchg
pop
sti
dec
sti
enter
pop
dec
clc
pop
pop
push
out
insl
sub
sbbb
push
mov
jecxz
or
into
push
add
dec
ss
iret
inc
mov
sub
mov
lods
push
or
leave
ffreep
jmp
pop
adc
into
mov
je
sbb
dec
sub
pop
pusha
movsb
std
fisttps
jb
mov
aam
in
lret
sub
mov
sbb
loop
bound
push
imul
dec
sar
lods
pop
lret
jnp
icebp
fs
ljmp
xchg
xchg
inc
pop
push
iret
lods
in
push
or
loopne
ficoml
push
pop
mov
outsb
cmpl
inc
fnstsw
in
pop
and
sub
inc
jg
arpl
push
cmpsl
icebp
and
in
repz
stc
out
stos
rcr
movsl
inc
pushf
pop
fs
mov
sub
inc
mov
inc
push
rcrl
lods
pop
xchg
jmp
xchg
lods
sahf
lods
and
into
mov
fs
mov
into
subl
sbb
xor
push
jmp
mov
icebp
and
sbbb
lea
repnz
jnp
jecxz
xchg
sbb
xchg
cmpsb
add
stc
jo
jp
push
inc
sub
mov
into
rcll
subb
jg
in
jle
ret
adc
dec
sbb
icebp
cmp
adc
dec
int3
rcrb
jmp
xor
mov
pop
fnstenv
out
cltd
or
sub
and
ja
jl
xchg
add
lods
fcmovnb
xchg
xchg
filds
mov
add
jno
jle
pusha
pop
scas
push
sub
rolb
add
fwait
and
add
lock
mov
pop
fs
cli
aas
inc
mov
gs
jle
lea
xor
and
pop
mov
cld
testb
pop
mov
jmp
mov
outsl
mov
imul
adc
push
dec
xor
add
push
das
inc
adc
daa
loop
jnp
sub
push
mull
inc
lock
imul
aad
or
jg
mov
rorl
push
mov
gs
cmpsl
push
aaa
mov
ss
jp
std
inc
mov
cmpsl
xorb
mov
out
sbb
mov
jecxz
pop
pop
sbb
fsubl
xchg
inc
sti
imul
xor
pusha
cmp
pop
push
pop
pop
xor
lret
sub
in
aam
push
inc
rcr
sub
push
adc
dec
pop
das
outsl
ficoml
in
aad
push
nop
cmp
ficoml
pop
push
sub
inc
push
push
arpl
mov
in
jle
add
cmp
push
and
mov
push
inc
inc
lahf
ds
cmpsb
dec
inc
xor
in
lahf
jg
pop
cmpsb
push
add
bound
fcoms
mov
mov
or
pop
loope
push
jo
aaa
lods
mov
imul
jae
rorb
imul
inc
jae
push
mov
out
subl
adc
dec
push
add
movsl
mov
es
cmp
mov
les
pop
jno
mov
aam
jne
ror
xor
mov
inc
cmp
inc
fwait
jb
adc
out
jle
test
cvttps2pi
mov
adc
imul
in
ss
movsl
pusha
dec
inc
mov
ljmp
push
stos
shr
shrl
jle
sbb
inc
stos
mov
inc
ja
sub
inc
sbb
lret
push
dec
mov
cmpsb
pop
insl
push
push
imul
ds
sub
pop
sbb
ljmp
cld
std
xchg
lock
sbb
inc
jb
or
sub
sbb
mov
jle
dec
jbe
and
pminsw
loope
mov
in
add
pop
sub
jae
pop
dec
subl
mov
jno
sub
adc
jmp
push
mov
xor
mov
rol
mov
mov
test
enter
pusha
dec
pop
inc
lds
iret
push
add
xchg
xchg
xchg
sbb
inc
mov
mov
add
insb
cmp
cmp
std
inc
into
loop
push
and
rcll
mov
push
cmp
jmp
jmp
and
dec
sub
push
jmp
stos
cmpsl
pop
and
sti
aaa
xor
cmp
sub
push
pushf
test
mov
mov
xchg
jmp
mov
cmpsb
jo
mov
jle
xlat
in
cwtl
in
loopne
int
inc
subl
mov
lcall
movsb
xor
fcmovu
lcall
xchg
jnp
cmp
jnp
stos
add
in
push
es
sub
sbb
aad
decl
add
push
int3
dec
and
movl
cmp
cmp
mov
dec
movsb
inc
orb
push
ret
das
aam
jmp
daa
xor
in
jle
in
cmp
cmp
fs
sub
xlat
dec
lcall
ljmp
mov
iret
jne
sarl
mov
or
xchg
mov
mov
mov
and
out
sbb
mov
xor
cmp
inc
nop
jp
cmp
dec
inc
cmp
jnp
jae
jo
xchg
orl
cmpl
cmp
pop
aad
sub
mov
mov
clc
mov
adc
jne
adcb
in
mov
sbb
sub
jecxz,pt
imul
xchg
mov
mov
xchg
xor
adc
ret
mov
xchg
idivb
cmp
insb
mov
sub
lods
add
xchg
insl
mulps
js
inc
xchg
bswap
shlb
mov
ret
push
pop
jecxz
pop
jo
pop
or
fcompl
adc
pop
addr16
jns
inc
addl
xor
out
cmp
aaa
pop
mov
rolb
and
outsb
cwtl
out
mov
lahf
addr16
push
push
xor
fstp
es
std
es
add
sbb
insb
ret
mov
pop
pop
sub
outsb
xor
or
mov
adc
test
or
or
jnp
and
xor
push
mov
xor
adc
pop
out
mov
lret
sbb
mov
jl
xor
aaa
sbb
xchg
mov
sbb
notb
jge
pop
add
and
iret
dec
push
add
or
or
dec
test
aas
jne
sbb
xor
in
sbb
pop
andb
lods
sarb
sahf
xchg
outsb
in
cmp
push
jne
lock
data16
inc
pop
pop
jae
addb
orb
in
cltd
in
insl
adc
arpl
jns
and
mov
lea
mulb
pop
stos
mov
sbb
xchg
les
lods
xor
or
int3
and
add
add
xchg
jge
xchg
sbb
insb
mov
out
nop
imul
jae
push
in
dec
sub
into
jb,pn
xor
pop
ljmp
jno
fcmovnb
mov
jae
fwait
jmp
hlt
fnstenv
aaa
inc
clc
jnp
and
xor
mov
imulb
mov
fldenv
pop
mov
jecxz
or
ss
stos
fiaddl
lahf
jge
adc
in
std
rorb
mov
scas
cmpsl
and
outsl
stc
sbb
fiadds
addb
cmp
andb
out
aam
jne
adc
inc
or
fisubl
pop
jmp
mov
inc
inc
push
jmp
das
fnstcw
xchg
lods
xlat
fadd
in
js
xchg
test
inc
cmp
dec
sub
nop
mov
xchg
sbb
test
imul
push
mov
mov
arpl
sti
insb
std
xchg
loope
call
push
data16
and
dec
bound
cmpsl
or
pop
add
lret
rcll
and
in
inc
idivl
ret
int3
movsl
and
js
xor
mov
fmull
out
cwtl
dec
psrad
aas
and
stos
es
rcrb
xor
aaa
out
sub
xor
add
int
gs
andb
adc
stos
add
mov
sbb
pop
stc
xchg
dec
stos
xchg
sbb
or
daa
arpl
fcmovbe
fwait
adc
push
rcl
sbbl
xchg
movb
xlat
or
pop
fcmove
or
mov
push
push
xchg
or
aam
popf
push
cwtl
jbe
ret
int3
or
mov
sub
daa
addr16
mov
cmp
mov
pop
outsl
cmp
dec
sub
mov
xchg
fnstsw
inc
js
sub
ficoms
jnp
adc
ret
jle
push
and
inc
or
inc
push
xor
xor
and
lahf
ss
push
mov
jle
arpl
rcll
test
sub
adc
mov
sub
push
inc
dec
mov
push
aad
loopne
cmp
shl
les
add
cmp
out
dec
add
mov
lret
fcoml
hlt
popf
xor
sbb
aaa
sbb
ret
mov
and
in
faddl
xchg
sub
sub
mov
xor
xorl
jmp
pop
and
fcompp
aam
out
ret
les
inc
or
fsub
xchg
sub
and
movsl
mov
push
scas
jno
cli
iret
inc
fwait
loop
test
xor
pop
inc
pop
divb
jo
mov
xchg
jnp
ficoml
push
pop
rorb
mov
lods
push
cmp
mov
and
push
loopne
sub
in
mov
movsb
lods
decb
mov
xor
add
pop
fistpl
sbb
mov
lods
jp
mov
jp
xor
outsl
lods
adc
lds
lret
or
cs
xor
fsub
ljmp
xchg
ljmp
cmp
or
fldenv
lea
leave
cmc
push
cmp
inc
cwtl
xchg
mov
rcrb
pop
xor
sub
ds
mov
lods
xchg
or
das
mov
mov
xor
xchg
xchg
sbb
test
fldenv
jns
fisttpl
rol
daa
pop
outsl
loop
adc
sbb
xchg
mov
dec
push
sbb
addr16
sbb
cli
sarl
and
fs
jecxz
lock
nop
inc
mov
sbb
xchg
push
je
addr16
push
movsl
mov
xor
pop
mov
or
xchg
imul
loopne
cld
or
sbb
das
and
repnz
pop
xor
xchg
into
xchg
movsb
cmc
xor
lods
lcall
push
clc
xor
loop
dec
test
jecxz
and
lea
mov
stc
jmp
mov
and
cmp
jg
popa
dec
jmp
ficomps
sahf
push
push
jo
incb
das
fst
cmp
xor
sbb
rcr
loopne
aad
mov
xchg
xor
dec
mov
daa
add
xor
mov
lock
sbb
scas
push
pop
sbb
in
lahf
cltd
mov
xor
lret
rorb
push
lock
mulb
pop
loop
add
enter
add
addl
mov
push
sub
push
mov
and
inc
pop
or
ret
pop
jae
inc
inc
or
fiadds
out
add
mov
inc
mov
xchg
rcrl
sahf
scas
mov
movsb
jp
pop
push
mov
arpl
cmp
shll
inc
adc
jmp
add
xor
dec
add
and
in
fs
pusha
mov
add
mov
xchg
test
sbb
mov
imul
pop
cmp
clc
cld
xchg
test
sti
dec
daa
jmp
jne
fcomps
jp
fwait
sub
mov
popf
iret
js
xchg
repnz
rcl
out
dec
mov
insb
insb
xchg
inc
cmpsb
lret
sbb
mov
pop
repz
xchg
inc
dec
mov
imul
shl
mov
jge
mov
dec
dec
inc
fcoml
mov
ret
in
push
sub
arpl
xor
push
adc
lret
or
cmp
or
icebp
push
lods
movsl
cmp
sarb
out
push
jmp
aam
pop
add
addr16
into
lea
mov
cmc
inc
cs
sbb
sbb
test
ja
insl
add
push
out
test
mov
cwtl
rcl
sub
ds
jnp
or
stc
std
adc
mov
lods
insl
test
sar
daa
loopne
outsl
jge
sbb
mov
mov
push
and
jae
arpl
fldenv
int3
xchg
cmpsl
mov
rcll
mov
dec
mov
cltd
movaps
in
sub
xlat
pusha
jae
jns
fwait
xor
xor
dec
add
loope
gs
into
in
mov
and
shrl
arpl
mov
or
out
aaa
or
int3
movsl
lds
jl
pop
mov
cmp
add
xor
dec
ret
xchg
fdivr
es
mov
mov
faddp
mov
std
add
push
ret
ror
aaa
bound
xor
test
aas
popa
sahf
push
mov
sbb
jno
aaa
jo
stc
in
xchg
inc
xor
push
not
repz
fildll
cli
xchg
lock
mov
sub
fisttpl
add
ffree
cltd
into
fs
pushf
lcall
jecxz
addr16
cmp
add
mov
add
dec
js
inc
filds
sbb
jecxz
cmpsl
pop
jb
sub
dec
xchg
aam
icebp
or
push
sub
inc
mov
shll
jl
and
fcomp
sbb
fisubs
xchg
aas
dec
dec
add
pop
mov
shll
push
push
push
lods
cld
cmp
adc
ss
movsb
jbe
shll
pop
paddusb
cmp
jns
sbb
cwtl
dec
stos
ror
cwtl
inc
mov
inc
inc
lahf
sub
dec
mov
repnz
mov
pop
fwait
lret
mov
pop
dec
popf
jns
mov
xor
aad
int3
pop
inc
imul
fidivl
mov
mov
dec
out
push
cltd
pusha
ret
pop
movsl
mov
adc
fidivrl
push
in
xor
mov
cmpb
scas
jo
cltd
xchg
mov
dec
movsb
leave
xlat
scas
add
jnp
pop
minps
adc
jg
sbb
loopne
dec
pop
or
sbb
aaa
lret
adc
pop
cmp
clc
jl
cltd
or
cmc
sbb
push
shlb
data16
push
sbbb
cmp
icebp
stc
xor
push
xlat
test
cmp
mov
test
and
and
pusha
xor
pop
xor
testl
jle
push
xchg
mov
out
push
pop
lods
or
and
mov
or
push
jno
inc
pop
push
dec
cmpl
cmp
xor
push
jne
xor
stos
or
pusha
call
mov
mov
outsb
fwait
sbbl
jo
jle
pop
or
sbb
push
in
jno
les
repnz
ret
enter
mov
push
sub
add
iret
jg
inc
push
push
xor
mov
xchg
and
aad
lock
ret
test
out
ret
clc
faddl
shrl
push
sahf
loopne
jbe
push
xchg
lret
adc
out
clc
jecxz
xor
cmp
adc
xchg
mov
push
cmp
cmp
js
xchg
dec
lcall
repz
dec
fs
loope
cwtl
pop
outsb
sbb
mov
jb
xor
ds
jmp
and
add
lds
es
hlt
jmp
jmp
push
daa
inc
popf
xor
cmp
cwtl
sti
add
pop
or
movsb
cli
adc
nop
and
faddp
xchg
push
mov
lea
add
sbb
notl
mov
adc
leave
sbb
aas
adc
cmpsl
pop
inc
jg
jp
lea
xor
fimuls
mov
xor
mov
cs
sub
and
movsb
shrl
push
jnp
test
adc
std
in
das
pop
push
loope
xor
test
ja
rcrl
imul
cmpsb
repnz
mov
sahf
lods
jmp
pusha
or
iret
jno
push
inc
dec
js
xor
mov
out
stc
lret
int
ja
pop
scas
sti
and
or
shll
cmp
jne
inc
and
ret
fists
icebp
sbbl
enter
pop
mov
js
aaa
jmp
and
std
add
stos
push
cmp
popl
jns
fsubrp
sbbb
xor
sub
mov
addb
out
adc
rclb
faddl
test
dec
out
stos
add
mov
insl
stos
pusha
sbbb
xchg
out
ljmp
popf
and
add
push
mov
push
dec
or
insl
inc
and
icebp
outsb
pop
jg
sbb
xchg
cli
inc
fs
fisttpl
or
ds
inc
jo
jnp
push
xchg
add
loop
sub
ljmp
fwait
jecxz
pop
inc
or
jmp
cmp
pop
mov
movsl
dec
popa
sub
xor
mov
enter
mov
push
cmp
inc
adc
sub
hlt
notl
sahf
daa
cmp
mov
cbtw
pop
scas
ret
pop
push
cmp
or
push
loopne
push
dec
mov
movsl
mov
cltd
ss
sub
lcall
jo
xchg
cli
sub
inc
fiadds
and
in
test
lret
js
daa
pushf
cmpsl
push
inc
imul
push
popf
xchg
mov
aaa
shll
dec
jb
scas
adc
cmp
orb
inc
subb
popa
lds
or
sbb
std
push
and
mov
in
push
repnz
xor
hlt
mov
and
pop
stc
jnp
cmp
xchg
mov
xorb
shlb
xchg
sbb
add
fidivrs
xor
sbb
or
fcompl
mov
mov
insb
sub
insl
shrb
inc
mov
arpl
inc
rol
data16
jnp
push
ficoms
pop
sbb
test
imul
mov
xor
repnz
inc
push
or
dec
adc
adc
dec
push
sbb
xchg
dec
sarl
xor
cmp
add
testl
xchg
push
xor
fldt
insl
jae
pop
aas
stos
imul
sub
xor
int3
mov
pop
adc
sarl
mov
mov
push
or
adc
cmc
outsb
cmp
iret
call
sarl
aam
ja
mov
sub
clc
inc
std
enter
leave
filds
ja
fistps
std
jg
push
inc
and
lods
insl
fwait
mov
dec
sbb
int3
icebp
sbb
adc
test
notl
cli
mov
push
xlat
lods
cmp
faddl
and
dec
inc
xacquire
fcmovbe
loop
mov
pushf
pop
push
cwtl
xor
stos
stc
inc
mov
test
mov
mov
xchg
repnz
inc
out
fsubl
push
movsb
mov
xchg
ret
adc
mov
sbb
enter
pop
mov
insl
xor
push
ret
mov
jno
push
pop
or
jb
xlat
mov
jb
cmp
pop
mov
or
add
xchg
int3
jns
loope
and
das
aaa
xchg
testl
push
je
dec
jae
cmp
das
adc
jge
jle
or
push
shll
or
repz
pop
fsubrl
insl
pop
xchg
adc
and
push
fs
add
push
cmp
mov
dec
ss
pop
cli
stc
les
sbb
sti
push
push
gs
enter
por
addr16
addr16
jmp
nop
sub
into
fiaddl
cmc
and
aam
mov
or
jae
xor
test
andb
xlat
xchg
adc
shlb
stos
adc
ret
mov
mov
xlat
cmp
mov
loop
ret
cmp
stc
push
movsl
enter
inc
sarl
and
out
push
shll
movsl
jae
mov
les
and
test
dec
mov
in
testb
scas
iret
insb
int
push
inc
aad
sbb
sahf
inc
js
jb
in
and
mov
xor
aad
lea
pop
nop
mov
xchg
test
xor
sahf
and
add
xchg
xchg
xchg
pop
xchg
in
xor
xchg
mov
sub
scas
xor
mov
out
f2xm1
pop
mov
das
and
sub
dec
or
jbe
mov
andl
test
push
fimull
mov
cmp
scas
adcl
rcrl
sub
jnp
and
pop
mov
popa
mov
sbb
cwtl
test
jbe
xor
add
aas
repnz
or
and
or
pop
jnp
mov
aam
dec
xchg
rclb
sarl
test
mov
fcomps
adc
jecxz
jb
cmp
and
mov
divb
adc
in
cmp
xchg
jno
dec
adc
iret
jecxz
add
sarb
cmp
test
sbb
adc
je
outsl
pop
enter
sub
xor
lret
mov
pusha
sbb
and
out
inc
mov
jg
pop
stc
imul
add
and
cld
outsb
jl
stc
jns
es
sbb
shlb
xchg
lea
cs
push
bound
es
cltd
xchg
jb
cmpsb
in
fdiv
fldl
mov
insl
cmp
stos
inc
dec
leave
pop
sbb
mov
pop
sbb
sbb
lcall
cmc
dec
xlat
orb
in
insl
ja
addr16
adc
loop
add
std
out
cmp
mov
out
nop
ss
popa
inc
rorb
fisubl
movsl
cmpsb
mov
or
pop
or
mov
ljmp
mov
add
push
adc
push
iret
xor
enter
or
lcall
lea
xchg
gs
mov
mov
insl
dec
add
lea
mov
or
pop
neg
mov
jl
xchg
bound
outsb
mov
or
and
mov
xchg
mov
lods
jb
in
push
or
mov
fisttpll
push
push
stos
js
dec
insl
fldcw
inc
outsl
sbb
shl
mov
fs
sbb
lock
adc
int
or
aad
lret
stos
mov
shrb
adc
enter
pop
fs
adc
xorl
dec
jp
cmc
aaa
sti
enter
mov
inc
push
lock
int3
pusha
fstl
xor
out
adc
cmp
nop
imul
sbb
pop
cs
sti
and
and
mov
dec
push
or
mov
dec
xchg
out
sbb
or
push
push
xchg
jae
out
ror
and
lods
loope
das
inc
push
jecxz
push
pop
shr
inc
xor
mov
sub
int
add
dec
cltd
and
cld
xor
aad
xchg
pop
inc
fistpll
jmp
adc
iret
outsl
dec
jo
jge
cltd
lods
sbb
or
add
lret
sar
mov
shr
fcompl
mov
imul
pusha
xor
and
pop
nop
outsl
enter
repz
fiadds
fisubrl
data16
xor
jo
push
mov
mov
adc
mov
lds
rcrb
scas
mov
or
scas
pop
lods
into
in
xchg
popl
cltd
fmuls
dec
mov
xorl
jbe
pop
btc
std
lcall
cld
mov
in
inc
push
insl
sbb
or
div
mov
cmp
sub
inc
add
repz
sub
repz
int
aas
and
add
push
mov
cmp
lds
jae
or
cltd
xchg
ret
int3
inc
leave
lret
cmpsb
test
pop
push
shr
and
pop
scas
fisttpl
dec
pop
test
inc
sar
and
mov
lahf
and
xlat
iret
adc
je
mov
daa
jge
rolb
add
iret
mov
insl
mov
scas
cmp
push
mov
and
call
jae
xchg
rolb
daa
sbb
adc
imul
iret
cmp
mov
out
xor
movsb
insb
cld
push
mov
sub
sub
jns
inc
sbb
decl
mov
iret
js
mov
clc
xor
mov
cmp
mov
mov
mov
mov
in
sbb
dec
out
out
int3
lods
xor
pop
sub
sahf
faddl
sti
mov
mov
sub
cmp
out
iret
loopne
test
adc
inc
sub
add
pop
dec
outsb
ss
sbb
es
out
add
mov
mov
aam
iret
clc
insb
into
jbe
xor
or
sbb
mov
divb
out
sahf
ss
loopne
xor
jno
mov
lahf
xchg
rcll
mov
std
sbb
adc
cmp
sti
rol
fistpl
lcall
sub
insb
in
push
hlt
aam
mov
add
inc
jnp
push
sbb
jecxz
mov
inc
int
inc
loop
push
push
out
lcall
xchg
cli
jnp
in
pop
adc
ds
sub
xchg
notl
mov
or
aam
or
aad
mov
in
stos
hlt
jp
enter
sti
pop
add
lods
mov
lds
adc
jp
jmp
fcomps
daa
or
push
cmc
pop
cmp
sub
lock
notb
in
push
pop
push
add
xor
lret
outsl
aad
mov
xchg
sub
xchg
add
lahf
and
cmc
mov
dec
or
inc
je
in
sub
pop
ljmp
xchg
nop
or
or
aam
movsl
xchg
inc
jecxz
mov
in
sub
mov
push
jns
dec
cmp
popa
jne
push
mov
out
cmpb
je
fsubl
sub
sbb
lea
imul
mov
fisttpll
xor
data16
cmp
add
das
push
push
fs
mov
test
push
bnd
mov
xor
jo
and
aas
js
jp
sbb
and
sub
sbb
jns
xlat
mov
jno
cmp
lods
cmp
and
push
push
dec
or
sbb
push
fs
movsl
aam
les
dec
loop
pop
push
adc
paddusw
aam
mov
push
jp
scas
jp
sub
sub
out
mov
arpl
scas
push
cmc
push
mov
fisttps
mov
jae
aad
nop
in
mov
sbb
mov
push
xchg
test
dec
or
inc
lods
cltd
xlat
nop
and
or
jg
icebp
into
mov
outsb
lret
out
lock
pop
dec
in
mull
push
nop
leave
shl
addl
xor
inc
out
sub
pop
push
push
mov
subb
in
sub
ds
outsb
push
ret
add
outsl
inc
add
insl
sub
push
mov
mov
pop
mov
add
pop
jecxz
lds
mov
xor
adc
jp
xchg
ret
cld
ja
xchg
repnz
sahf
testl
test
mov
mov
push
jle
scas
js
je
push
and
daa
mov
sbb
mov
daa
mov
or
fld
xchg
cltd
mov
xchg
out
add
iret
push
lret
sbb
or
mov
cmp
xchg
in
jo
es
push
mov
jo
repnz
jne
cmp
or
movsb
lock
in
sub
in
aaa
shlb
inc
mov
scas
pop
mov
ss
es
mov
cmpsl
leave
jno
fildll
les
lods
and
xchg
pop
das
push
adc
std
or
jb
mov
or
push
fsubs
bound
shl
adc
mov
lock
aas
mov
addb
cmp
pop
cmp
xor
cmp
mov
pop
xor
arpl
add
sub
subb
loopne
rclb
and
mov
push
pusha
in
sbb
jbe
inc
repz
sbb
jecxz
mov
xchg
out
cmp
push
pusha
rclb
nop
mov
and
cmp
push
sbb
shlb
scas
sub
xor
fadds
push
imul
adc
cld
dec
jbe
rcl
jb
add
loope
push
inc
fdivrl
out
add
fistpll
mov
mov
stc
push
xchg
clc
ja
xor
xor
xor
js
addr16
ss
pop
rorl
daa
sahf
into
inc
add
sub
imul
mov
aaa
cmpsl
push
jp
fisubrs
lods
sbb
add
xor
andl
mov
mov
jo
xor
rcrb
push
mov
adc
mov
out
pop
fbld
push
dec
test
and
ds
addb
inc
int3
into
in
pop
idivl
ret
pushf
ja
push
lods
das
cli
ja
dec
icebp
inc
inc
or
mov
lods
rclb
push
ret
sbb
fdiv
mov
cmp
lret
imul
jo
sbb
pop
test
cmc
daa
sub
cmc
push
das
cmc
sub
dec
push
inc
jg
call
loop
sbb
push
repz
inc
inc
data16
shrb
mov
loope
add
rol
aad
xor
es
cmp
in
sub
lahf
lcall
mov
int3
lahf
pop
add
mov
fcompl
pusha
fcmovne
mov
cmpsb
mov
leave
mov
inc
dec
outsb
ds
pusha
mov
jns
mov
fucomip
int
push
jge
notl
jae
fmull
and
jnp
sarl
repnz
fbld
cmp
out
and
add
mov
pop
push
inc
dec
cs
push
out
pmaxub
enter
jmp
pop
das
outsb
sti
popf
jecxz
xchg
daa
and
out
das
mov
aam
xor
xorb
call
mov
push
incb
call
mov
fiaddl
cmp
mov
js
cmp
sbb
rcr
ja
sbb
ss
ret
popa
or
pushf
jp
mov
xchg
inc
sarl
push
jne
bound
rcrb
iret
movsl
or
or
fdivs
xor
pop
adc
jbe
inc
jne
insb
call
and
dec
sub
adc
popf
int
inc
pop
sbb
push
sub
out
mov
mov
je
and
sti
mov
push
inc
into
mov
movsl
sbb
inc
jno
aaa
leave
mov
mov
xor
inc
pop
mov
xchg
js
inc
sbb
pushf
mov
in
ja
shl
mov
aaa
ljmp
dec
xor
and
mov
mov
testl
xor
mov
xor
xchg
data16
mov
dec
insl
push
idivb
popf
in
inc
call
call
xchg
push
insl
push
xchg
lahf
lock
test
xor
mov
repnz
pop
cmpsl
dec
sbb
test
jo
or
xchg
cltd
sub
enter
inc
pop
and
push
xchg
push
mov
inc
enter
das
mov
pop
ret
push
scas
or
loope
ds
in
data16
mov
rcrl
aam
cmp
cmc
daa
loopne
jno
pop
pusha
mov
adc
enter
xor
jle
mov
adc
imul
rorl
xor
jne
cltd
lret
cli
fdivp
icebp
repnz
test
mov
add
xor
dec
jns
pop
popa
lds
inc
cmp
fwait
addr16
in
mov
gs
ror
or
movsl
sbbb
xor
daa
aam
inc
push
or
mov
sub
dec
fidivrs
aad
and
sbb
sub
and
cmc
stos
xor
dec
push
rcrb
icebp
lahf
aas
in
sahf
inc
popa
insl
pop
and
xchg
repz
sub
mov
or
add
mov
outsb
cmc
xchg
lods
sub
push
cmp
insb
jl
mov
cld
push
sub
mov
jl
ret
std
xor
gs
fildll
push
fisubrs
insl
cmpsl
adcl
repz
loope
xchg
ds
mov
test
adc
xchg
jmp
sbb
test
xor
std
daa
adc
pop
cmp
jb
xchg
add
inc
mov
fdiv
adc
enter
sahf
clc
cs
xor
cmp
enter
fxch
add
out
sub
jbe
xchg
call
bt
lock
inc
shlb
leave
js
lret
pop
decl
jecxz
aas
cmp
mov
xchg
cwtl
fadds
shll
repz
in
int3
push
inc
pop
nop
aas
mov
psrad
jbe
xor
inc
loop
mov
test
cld
flds
xchg
scas
daa
fcoms
iret
push
pop
cli
mov
xor
adc
rorl
lret
repz
or
inc
jbe
out
insb
in
mov
lds
stos
andps
mov
dec
ss
pop
mov
jge
dec
or
and
sub
inc
ja
push
int
vsubsd
pop
dec
les
arpl
mov
in
call
inc
scas
sbb
icebp
dec
jge
cmp
cmp
dec
aad
stos
add
mov
imul
mov
xchg
mov
sub
fdivrs
add
xor
lahf
fdivrl
cmp
or
pop
jno
in
and
ljmp
mov
sbb
push
xchg
and
cmp
xchg
jle
cmpsl
push
mov
sub
jns
mov
pop
int
adc
pop
fidivl
dec
out
xor
aad
rolb
jp
xchg
cmc
shufps
sub
ret
cmc
inc
xor
hlt
jmp
push
jmp
xchg
push
test
mov
test
cmc
das
loope
test
mov
push
rorl
sub
negl
je
pushf
xchg
fsubl
xchg
mov
mov
insb
cmpsl
push
lods
and
scas
push
aam
mov
popa
mov
sub
lea
shll
pop
lods
scas
xchg
dec
fiadds
push
jns
mov
rclb
mov
mov
sbb
and
aam
popf
push
jg
push
xchg
cltd
outsb
in
xlat
cs
aam
sub
push
lods
and
fwait
clc
inc
int
mov
inc
outsl
imul
inc
mov
or
jmp
cwtl
nop
pop
outsb
aaa
jo
lcall
xchg
aaa
pop
enter
xlat
test
leave
das
in
outsb
jle
pop
xor
pop
sbb
mov
cmp
cli
imul
xchg
inc
sbb
xchg
cli
popa
mov
and
xchg
sub
mov
cmpsl
hlt
stos
jae
repz
push
aam
fwait
mov
repnz
jmp
mov
jecxz
dec
cltd
push
lds
orb
int3
jecxz
shlb
leave
sahf
dec
popf
nop
in
add
and
into
gs
ja
aaa
xchg
popa
in
jae
aas
test
push
push
cmp
ret
loopne
pop
movsb
add
stos
fldcw
movsl
pop
lods
testl
push
mov
dec
sub
int3
cmpsl
mov
clc
fxch
xor
mov
mov
inc
movsl
aam
mov
sbb
xor
imulb
sbb
xchg
jb
jne
mov
xchg
mov
out
xor
jl
insl
sbb
shll
lret
and
test
leave
jle
add
lret
sub
mov
mov
ljmp
push
popf
das
dec
inc
daa
xorl
lea
lods
aas
lret
push
inc
dec
rclb
test
pop
or
subb
repz
inc
pop
sub
push
sub
je
pop
sub
mov
mov
adcl
sub
fildl
xchg
mov
orl
dec
cwtl
jmp
inc
mov
cli
mov
jne
xor
sbb
stos
ret
push
or
ja
adc
jnp
rclb
push
fsubrl
aad
ss
outsl
xlat
bound
push
mov
cmp
mov
and
jnp
or
pop
sbb
sub
mov
sarb
stc
adc
cwtl
inc
mov
faddp
and
loope
int3
popa
fs
cmp
int
mov
mov
pop
hlt
jae
or
in
mov
rorb
mov
sub
sti
into
aas
cmp
testb
scas
fcmovbe
cmp
roll
and
dec
cmp
sbb
push
and
outsl
pop
nop
movsl
xchg
leave
mov
orb
xchg
mov
sub
hlt
jmp
dec
aaa
inc
loopne
mov
flds
pop
sbb
cmp
cmpsb
movsb
sbbl
call
sbb
sub
aad
dec
loope
pop
scas
xchg
stc
insb
cmp
fisttps
cmp
into
jnp
pusha
or
fcoml
pop
insl
leave
cmpsb
sbb
loopne
loop
jmp
nop
imul
mov
mov
pop
pop
mov
das
adc
imul
xchg
in
mov
out
enter
push
pop
ss
lcall
hlt
into
hlt
lahf
stos
enter
lahf
xchg
xor
mov
jmp
enter
sbb
sub
mov
pop
cmp
jb
cmp
dec
jb
stos
mov
scas
out
out
rclb
xor
lods
or
incb
xchg
lods
add
mov
push
and
inc
inc
fiaddl
and
xor
test
shl
addr16
pop
popf
inc
xchg
test
cmp
mov
jne
and
pop
nop
les
inc
add
dec
out
jmp
adc
dec
pop
and
mov
mov
pop
sub
sti
sub
mov
mov
cld
out
not
inc
adc
sarb
dec
jg
lret
lock
imul
imul
dec
cmc
cmpsl
addr16
mov
cmc
jno
pop
mov
mov
jne
jg
push
mov
dec
std
sar
mov
push
psubq
mov
jge
mov
xlat
gs
push
inc
jge
mov
mov
mov
jns
adc
mov
pop
aam
xchg
std
and
fistl
push
test
stc
push
xor
xchg
dec
and
nopl
lods
mov
xor
fsubs
sub
pop
jl
jbe
aaa
icebp
enter
dec
pop
sti
lock
push
adc
sub
mov
push
imulb
sub
adcb
inc
sbb
mov
dec
imul
mov
mov
push
push
ror
push
mov
loope
inc
cmc
mov
iret
aad
sub
dec
scas
sbb
iret
clc
or
sub
incl
push
ss
jge
ret
adc
out
std
xchg
divb
js
xor
rol
out
outsb
mov
jle
jg
pop
bound
js
cwtl
mov
lds
jl
pop
cli
mov
sub
lret
pop
cmp
mov
sbb
bound
mov
sub
ds
iret
inc
shl
cmpsl
clc
jmp
test
xor
insb
mov
xchg
push
sbb
inc
inc
mov
out
jo
or
test
mov
inc
mov
dec
insb
bound
sahf
repz
pop
mov
jge
xlat
scas
adc
jae
fiaddl
pand
pusha
cld
popa
repnz
les
jp
movsb
jae
cli
inc
jecxz
inc
sub
movsb
dec
es
repz
testb
xor
pop
test
mov
xchg
or
fcoml
jge
mov
inc
test
and
xlat
pop
jmp
dec
movsl
pop
dec
add
sub
or
mov
mov
inc
loopne
mov
add
jecxz
xchg
fcmovnb
fiadds
mov
push
fsubl
cmpb
mov
xchg
sbb
adc
cmp
cld
repz
push
lods
clc
push
sub
das
test
clc
inc
out
xor
or
idivb
xchg
cmp
imul
mov
test
cmpsl
push
rcll
pop
clc
add
cs
mov
jns
test
aas
mov
ljmp
dec
fnstenv
bound
inc
dec
jae
hlt
xchg
lret
cmpsb
xor
jge
push
mul
stos
jo
cmc
sbb
lods
andb
movsl
arpl
pop
iret
pushf
roll
inc
inc
sbb
push
jp
push
fisttpl
mov
jmp
outsl
mov
in
mov
dec
jnp
xor
lret
adcb
cmpsb
mov
cmp
js
testl
addb
dec
mov
sub
test
out
mov
pop
in
lock
mov
cmpsb
push
ret
pusha
stc
mov
jae
dec
jecxz
lods
daa
lcall
jbe
push
in
ljmp
sti
mov
mov
mov
sub
sbb
xchg
sahf
movsl
data16
sahf
fisubrs
gs
xor
mov
loope
shl
fidivrl
das
add
fs
pop
movsb
pop
add
sub
ret
xor
add
pop
inc
in
hlt
divl
pushf
xchg
or
inc
ja
jecxz
cmpsb
bound
mov
ret
inc
or
cld
xchg
xchg
cmp
mov
fcmovb
jle
fsubrs
and
add
xchg
inc
mov
test
ret
xchg
cmp
ret
sbb
sub
and
jb
dec
add
xchg
mov
xchg
cmp
shlb
bound
sahf
std
mov
pop
adc
adc
js
fnstsw
aam
icebp
pop
andl
mov
ret
mov
jmp
xchg
int3
lods
mov
add
outsb
addr16
push
int3
push
push
mov
test
fcompl
add
imul
insl
cwtl
xchg
dec
cwtl
pop
inc
xor
push
int
lret
mov
push
cmp
dec
out
out
inc
cmp
adc
add
xchg
pop
sbb
ss
and
adc
inc
sbb
or
popf
adc
jp
push
adc
and
mov
xlat
or
inc
mov
add
mov
lahf
or
xchg
push
lds
pushf
sub
push
inc
mov
inc
out
push
or
test
jp
ds
js
pop
movlps
push
scas
jno
pop
xor
mov
sub
xorl
aas
rcll
imul
cmp
inc
adc
sbb
pop
lcall
shl
fmuls
fnstcw
xchg
jge
jae
insb
int3
xor
std
popa
mov
loop
mov
imul
and
adc
lods
or
sahf
pop
popf
movsl
stos
outsb
xor
stos
ja
aas
les
cwtl
sub
out
cmpsl
daa
das
test
pushl
lds
and
aam
mov
sub
jmp
or
ret
mov
sub
sahf
pop
imul
outsl
xchg
call
in
daa
lea
and
inc
push
andl
xchg
dec
xor
ss
or
ds
dec
push
inc
xchg
adcl
mov
test
dec
pop
je
div
mov
notl
sbb
lret
jecxz
sbb
gs
test
ljmp
xor
sbb
pop
mov
stos
xor
int
out
testb
andl
js
rol
shlb
test
cmpsb
add
xchg
fwait
dec
clc
sarb
and
imull
dec
cmp
into
xadd
mov
push
lods
push
ds
in
aam
test
icebp
std
sbb
mov
outsb
fcomps
xchg
icebp
adc
ret
or
stc
int
push
sahf
push
out
insb
mul
insl
xchg
xchg
pop
sub
js
pop
cltd
in
pop
cld
into
imul
cmp
add
or
leave
in
scas
mov
inc
repnz
xchg
rcll
push
pop
mov
pop
xor
inc
into
mov
out
lock
lods
ds
pop
pop
jmp
repz
cmp
rorb
aad
xchg
xchg
movsl
in
insl
push
mov
push
jbe
or
mov
push
mov
outsl
xlat
sub
jbe
outsl
push
and
adc
imul
repz
jg
aaa
movsl
jg
push
push
mov
loopne
scas
imul
xor
in
and
mov
mov
mov
mov
adc
imull
pop
sub
cmp
mov
rcrb
lahf
mov
and
cmpsl
jmp
push
sbb
pusha
outsb
ljmp
repnz
mov
mov
sbb
jns
cwtl
or
subb
es
pop
jmp
rclb
sbb
jb
xchg
mov
fwait
outsb
xor
inc
mov
and
jo
nop
jnp
test
mov
cltd
sbb
aaa
rcl
scas
jge
int3
int
pop
repz
mov
pop
icebp
mov
cmp
jp
subb
mov
cmp
popa
mov
mov
call
insl
inc
xor
or
dec
push
cmc
mov
sub
inc
mov
stc
pop
mov
sarb
ret
sub
pop
test
lods
xchg
lods
ljmp
lret
and
mov
jecxz
pop
lods
jp
loop
add
lret
jnp
add
fpatan
mov
dec
test
add
lcall
cld
stc
xor
xor
loopne
test
dec
sub
push
pop
iret
cmp
idivl
xlat
adc
xor
mov
jno
dec
push
cmp
jae
xchg
pop
scas
js
cmp
mov
roll
sub
cmp
push
add
outsb
jnp
leave
add
pushf
roll
cld
adc
add
jno
mov
add
mov
pop
and
pushf
mov
rorl
pop
add
lods
sbb
in
adc
int
mov
pop
cli
inc
rcrl
je
iret
aaa
cmp
jp
lods
sahf
mov
inc
leave
in
jg
jmp
outsl
cmp
fs
mov
add
fidivrs
loop
jmp
test
sbb
mov
nop
cmp
jge
loop
sub
sub
add
mov
addb
jg
adc
pop
adc
pop
push
fisubl
dec
pusha
jmp
das
bound
orb
mov
pop
jecxz
shlb
mov
pop
adc
rolb
xor
insl
xor
dec
jecxz
out
out
mov
dec
xchg
in
popa
test
data16
outsb
stos
cmpsb
add
das
xor
cmp
adc
lret
cwtl
mov
inc
add
cli
pusha
sub
add
and
cli
lret
decb
xor
jecxz
aam
add
in
cmp
adc
sub
shlb
sbb
sbb
pop
mov
mov
ljmp
inc
cmp
sti
sub
push
int3
bound
sbb
lock
jmp
cli
ficomps
add
inc
in
bound
nop
cmpsb
scas
jns
sbb
mov
push
scas
data16
adc
test
pop
and
sub
les
insb
movsb
jecxz
add
imul
scas
int
mov
test
jne
lret
ret
dec
pop
jb
popf
cmp
push
xchg
jb
adc
jp
stos
out
ljmp
adc
test
fcmovnb
rcrl
sub
dec
popf
jae
insl
rsm
testl
movsb
mov
aam
pop
mov
mov
daa
fdivl
mov
hlt
add
test
sbb
ja
addb
cltd
and
iret
scas
mov
fidivs
outsb
xchg
dec
xchg
fstps
fcmovnu
xchg
jo
adc
outsl
or
movsl
std
stos
xchg
push
scas
iret
mov
push
ror
lds
shl
cwtl
test
pop
out
adc
mov
push
dec
or
test
xchg
jl
das
lret
ljmp
das
push
xor
sub
dec
ret
sub
jae
mov
cmc
es
adc
xlat
pop
mov
cmp
push
fwait
or
lods
movsbl
add
push
ljmp
and
sti
out
stos
rcrl
int3
or
dec
ret
lcall
sbb
outsb
hlt
or
cmp
pop
and
stc
fmuls
outsb
push
scas
imul
or
icebp
stos
inc
out
mov
ret
or
insb
jmp
in
sub
adcb
jne
inc
mov
xchg
neg
jnp
mov
or
les
push
jb
push
add
pop
test
jnp
out
jle
loop
push
xor
pop
jmp
add
mov
in
jnp
mov
mov
fcmovnbe
sahf
rcl
jbe
and
sti
lea
mov
rcrb
loopne
cld
mov
cmp
repnz
mov
sbb
dec
insl
sbb
out
mov
aas
out
mov
sbb
lea
mov
aaa
mov
aas
in
jo
adc
je
int3
out
add
add
sub
in
push
data16
push
adc
pop
movsl
cmpsl
mov
mov
out
cmp
mov
leave
in
push
ja
jns
bnd
fldcw
outsl
and
xchg
fisubl
stc
and
adc
adc
adc
lea
jno
dec
cwtl
aad
inc
das
sub
in
jo
sbb
iret
std
test
and
hlt
lret
mov
lret
fs
testl
mov
repz
pop
sbb
add
cmp
ret
cmpsl
in
sub
loope
mov
jbe
sub
xchg
push
add
rorb
aam
pop
push
mov
mov
movsb
pop
mov
mov
dec
mov
add
sbb
sbb
xor
cmpsl
jl
mov
aas
call
push
std
dec
movsl
movsl
mov
cmc
inc
icebp
mov
push
sub
ret
cmp
mov
or
hlt
pop
lret
enter
dec
pusha
stos
inc
adc
cmp
arpl
popf
sbb
lock
cmp
push
mov
movsb
inc
mov
daa
pop
pusha
pop
push
pop
repz
push
add
pop
mov
jmp
lret
clc
aaa
mov
push
sub
mov
cli
ret
jb
mov
gs
mov
imul
lods
cmp
mov
mov
mov
jns
inc
cs
in
xchg
sarl
iret
dec
pop
ret
imul
cwtl
lret
stos
jnp
pusha
fcmovnu
sub
test
dec
dec
lock
and
rorl
cmp
or
fcomps
sbb
sub
lret
dec
mov
jns
mov
addl
loope
outsw
movsl
movsl
js
imul
lods
adc
jle
call
inc
or
popa
mov
xchg
add
and
in
jne
es
lds
in
dec
xor
daa
es
iret
lods
cmpsl
dec
sahf
sbb
sub
push
rorb
mov
lods
shl
mov
int
je
adc
jbe
add
into
es
sahf
push
test
loop
jbe
shlb
in
and
ror
stos
ljmp
aad
sub
std
mov
xor
inc
xor
call
mov
es
jno
pop
mov
xchg
imul
jnp
int
xlat
bound
push
inc
aad
addr16
mov
lahf
lds
push
jns
cwtl
sub
data16
add
mov
clc
mov
mov
mov
test
shl
subl
into
sti
xchg
ss
mov
rol
mov
fdivs
adc
mov
movsl
shrl
sbb
es
daa
push
pop
das
cld
xchg
fs
and
jecxz
fs
in
mov
popw
mov
inc
fidivs
add
fcoms
stos
and
mov
pop
mov
cmp
jb
and
imul
insb
pop
insb
iret
dec
inc
pop
xor
mov
fidivl
mov
adc
mov
stc
push
push
cltd
sbb
pop
mov
lods
daa
fs
jno
dec
leave
inc
push
jmp
and
mov
dec
cltd
jle
lods
and
shlb
add
insb
push
into
test
in
aaa
das
mov
ljmp
gs
sub
and
mov
lcall
jg
fstp
or
insb
iret
or
roll
sub
fwait
inc
ja
adc
lcall
int3
mov
push
add
jmp
adc
or
roll
add
adc
sti
xchg
jno
push
push
xchg
jnp
pop
pop
outsb
test
sub
adc
jno
fdivrs
ret
scas
jne
add
out
mov
test
add
movsb
dec
repnz
lcall
outsb
mov
xchg
shr
dec
xchg
sbb
xchg
or
stc
add
nop
sub
xorl
out
mov
sbb
popf
and
movsl
pushfw
push
push
adc
cmp
pop
out
call
stos
decl
test
cmp
je
mov
fisubl
and
scas
jnp
jge
sbb
fcompl
jno
cmp
sarl
adc
push
lcall
cmp
pop
in
scas
sub
pop
sub
in
mov
dec
insl
subb
jne
sub
pop
stos
push
test
cltd
lods
add
scas
daa
imul
sbb
ljmp
pop
inc
inc
pop
enter
lcall
jbe
pop
hlt
mov
push
add
mov
insl
dec
notb
fildll
roll
fwait
mov
cmpb
insl
iret
push
cmp
pop
jg
dec
cltd
jmp
mov
movsb
inc
enter
adc
dec
js
jp
or
sub
sbb
jns
test
dec
push
add
mov
dec
lcall
into
pop
dec
cmp
in
stc
jl
or
repnz
jb
lea
cmp
mov
push
add
inc
ss
cmp
xchg
arpl
fstpt
xchg
push
add
xlat
xor
pop
sbb
adc
jp
cltd
das
leave
idiv
add
sahf
fstps
out
dec
xor
mov
mov
nop
test
mov
nop
insb
popf
inc
test
pop
cmp
les
in
sub
roll
cmp
xchg
add
cli
ret
jp
cld
push
sbb
mov
xor
jb
pop
leave
mov
mov
das
mov
and
in
ja
sub
mov
mulb
sub
push
mov
dec
sbb
aaa
sbb
pop
pop
test
in
lods
sbb
pop
jmp
fdivl
push
dec
in
stos
cmp
mov
fiadds
pop
and
cmp
loopne
je
out
xlat
jg
fcomip
popa
mov
in
lea
lahf
xor
cmpsl
push
sbbl
inc
lea
push
aaa
mov
ret
mov
sub
adc
mov
out
call
inc
aam
pop
mov
pop
test
cli
push
scas
fstps
jns
mov
jo
addl
xchg
test
mov
mov
sbb
loop
out
lret
xor
mov
ret
sub
sub
scas
lahf
fbld
xchg
mov
push
mov
sub
cmp
daa
cmp
mov
inc
dec
sbb
mov
cmp
mov
dec
repnz
and
xchg
sahf
or
dec
aaa
std
popa
test
dec
fiadds
stos
inc
push
leave
inc
lods
dec
add
aas
nop
xlat
stc
pop
enter
pop
add
mov
out
mov
push
fs
inc
mov
dec
idiv
jae
mov
pop
in
sti
jno
and
sar
mov
mov
dec
rclb
xor
enter
stos
jmp
dec
xor
push
add
cmp
cmp
cmp
aad
movsb
cld
and
xor
pop
dec
jne
adc
or
sarb
test
lret
or
mov
bound
mov
mov
int
cld
xchg
and
es
fsubs
jne
outsb
lds
divl
loop
pop
adc
ljmp
mov
fdivrl
cmp
test
push
add
xchg
sub
push
push
sbb
pushf
in
std
xor
xor
clc
sub
cs
sbb
push
adc
mov
sbb
pop
cli
subl
les
repnz
jmp
mov
aad
test
subl
andw
out
or
pop
pop
jb
loop
jne
je
dec
dec
ficoml
fisubrs
les
aas
dec
insl
xchg
xchg
ret
xchg
test
pop
mov
adc
mov
aad
jae
mov
mov
mov
shll
adcb
fimuls
cmpsb
fwait
rcrl
xor
mov
xor
roll
shlb
inc
jae
cli
mov
cs
repz
pop
aam
add
push
mov
cmp
jno
mov
or
nop
add
sbb
hlt
xchg
stos
mov
lock
pop
lahf
pop
nop
outsl
mov
or
pop
ds
ret
pop
aad
loop
push
ds
outsb
mov
cs
scas
in
bound
mov
sbb
mov
dec
fsubs
or
pop
mov
repnz
jge
and
xorl
sub
and
lds
out
cmc
lret
aaa
leave
sub
push
jg
mov
jp
mov
sbb
xlat
mov
loop
cs
dec
xchg
das
lahf
sbb
sbb
nop
imul
jbe
ret
push
das
adc
ja
add
or
fidivl
fimuls
xchg
shrl
lea
fwait
and
adc
aam
push
movsl
cld
push
mov
xor
adc
pop
mov
sub
mov
mov
or
fidivrl
jge
fwait
cltd
dec
cmp
mov
pusha
out
mov
mov
lcall
lret
leave
mov
mov
mov
pusha
jnp
adc
cmp
sub
loop
add
cmc
fwait
int3
or
test
xchg
push
or
das
xchg
pop
cmp
ret
mov
inc
inc
push
xlat
leave
iret
cmp
lahf
sbb
stos
movsb
sub
push
test
xchg
or
sub
mov
leave
adc
orb
cmp
into
fisubs
inc
aam
cmp
imull
dec
push
jno
rolb
or
add
scas
insl
pop
sub
cmp
xchg
sbb
mov
mov
mov
adc
add
psraw
bswap
cs
sbb
push
movsb
cmpsl
shl
rcll
xchg
test
fcomip
push
fcompl
enter
fldenv
push
inc
mov
add
popf
xor
sub
inc
ss
js
dec
pop
jmp
jnp
and
leave
outsl
inc
rclb
cmp
or
addb
pusha
cmp
mov
inc
insl
repnz
and
push
sbb
insl
push
out
push
stc
xor
push
pop
mov
jle
cmp
ds
mov
mov
negl
ret
push
or
fnstcw
pxor
mov
mov
xor
mov
dec
das
add
sbb
fs
sbb
sub
lret
xchg
jecxz
pop
arpl
sub
jns
inc
mov
mov
inc
test
pop
cmc
shl
ret
in
add
out
popl
enter
or
fwait
das
lcall
adc
cmp
mov
loopne
pop
xchg
in
test
mov
shl
sub
xor
clc
fisubl
into
gs
push
repnz
cmp
dec
xchg
push
inc
ret
outsb
pop
cmpsl
mov
push
sbb
fidivl
loope
cwtl
lcall
out
icebp
scas
push
jmp
daa
ja
push
jb
and
adc
add
adc
aaa
stc
mov
les
stos
negb
out
loopne
sbb
add
ja
imul
test
xchg
mov
inc
xor
fs
lods
and
fs
pop
or
fs
mov
and
mov
int3
sub
jb
cmp
and
and
popa
pop
dec
push
xor
ljmp
cmc
stc
push
jge
rcll
add
sbb
adc
cmp
and
xchg
sub
pop
push
lods
insb
jbe,pn
and
movb
sbb
mov
cmp
mov
pop
lods
out
push
push
xchg
sbb
inc
or
rorb
push
xchg
int
add
jno
sub
lock
stos
ss
gs
cwtl
loope
mov
inc
adc
mov
aaa
dec
inc
cwtl
dec
sbb
mov
out
lcall
xchg
or
test
mov
addr16
or
fwait
inc
test
push
sub
and
rorl
and
cs
xor
inc
lcall
lods
pop
repnz
testb
shl
loop
nop
inc
or
xor
shll
lret
pop
sbb
jno
jno
jns
xor
mov
xchg
in
fisubs
iret
xchg
pop
inc
in
daa
xchg
mov
dec
imul
jecxz
jge
jno
inc
popf
cwtl
push
aam
nop
inc
faddl
or
clc
inc
add
sbb
shr
cli
jmp
pop
cmp
jae
decl
xor
rcr
mov
lock
sarb
dec
mov
sbb
add
adc
ljmp
inc
out
fisubs
xlat
addr16
mov
sbb
cmp
int3
rcpps
pop
jmp
idiv
xchg
subb
pusha
adc
fisubrl
lods
or
push
push
lds
xchg
adc
in
aaa
push
xchg
pop
test
xchg
notl
cmp
add
adc
das
subl
or
sbbl
push
mov
fcompl
mov
sbb
popa
xchg
jg
shll
stos
mov
jne
or
test
nop
and
fldcw
xor
int
push
jecxz
cli
lahf
xor
jge
jne
push
xchg
and
inc
add
push
xchg
les
sbb
fwait
clc
mov
jno
js
mov
xor
or
and
xchg
nop
jb
dec
mov
mov
fisubs
cmc
loope
mov
jnp
or
mov
xchg
cmp
mov
std
ds
jg
icebp
sub
sub
shl
or
mov
mov
int3
jb
cmc
clc
lea
lods
jmp
jmp
inc
pop
fdivs
pop
adc
add
xchg
lods
mov
lret
or
adc
mov
jnp
push
fwait
push
mov
cmp
mov
enter
sub
stos
cmp
lcall
out
jg
adc
mov
cmp
mov
push
mov
hlt
jl
loope
aaa
and
mov
pop
cs
add
pop
ret
mov
pop
ficompl
pop
leave
mov
pop
leave
lea
pop
fidivl
addr16
bound
mov
cmp
xchg
xchg
sub
inc
bound
das
loop
mov
daa
inc
inc
shll
or
dec
icebp
cmpsb
scas
daa
imul
jne
jl
add
and
xchg
test
lds
cmpsl
mov
jp
adc
lea
adc
in
fucomi
not
cmpsb
push
into
inc
jmp
mov
das
mov
dec
repz
inc
loop
and
mov
mov
sbb
push
xchg
ljmp
pop
xchg
jbe
fdivl
mov
add
imul
pop
sti
lret
aaa
fsubr
out
sub
mov
out
mov
jnp
mov
xor
js
push
xor
sub
xchg
fistl
repnz
test
cmpsl
adc
mov
cld
sub
adc
xor
sub
ja
dec
dec
testb
cwtl
pop
pop
inc
or
lret
push
popa
out
fucom
add
sarl
sbb
mov
inc
ds
ret
xchg
inc
pop
scas
incb
arpl
int
gs
not
aam
adc
pop
aam
scas
rcrl
int
lds
xchg
adc
sbb
add
subl
push
push
in
test
mov
push
lds
jle
repz
push
inc
shlb
lcall
xchg
jg
cs
or
aad
pop
ja
cmp
xor
or
fwait
mov
cmp
sbb
pop
into
in
ss
aas
add
stc
fildl
xchg
jbe
mov
ficomps
sub
int3
adc
rcrl
nop
mov
jmp
jl
test
sub
adc
cmp
cltd
inc
mov
aad
fwait
mov
xchg
sbb
jecxz
lds
sub
xchg
jbe
imul
test
enter
stc
cmp
mov
es
out
insb
cltd
sbb
mov
cmp
mov
mov
and
add
pop
dec
je
add
mov
test
in
push
xchg
mov
int3
xlat
bnd
adc
cli
jl
or
sti
xchg
cwtl
pop
add
ds
rolb
das
rolb
push
sub
inc
test
xor
adc
mov
std
jmp
add
jnp
hlt
sbb
mov
icebp
adc
lahf
out
ficomps
inc
aas
jle
lock
pop
xchg
aam
cmc
lods
cmp
jnp
jle,pt
out
loopne
daa
jp
fidivs
lret
loop
mov
or
sbb
icebp
mov
test
sbb
insl
sarl
mov
mov
or
sub
jmp
sub
mov
test
into
inc
mov
out
inc
add
push
cli
test
jb
or
push
insl
ret
xor
cmp
add
cltd
fwait
cmpsl
daa
ret
int3
push
jle
aas
pop
xchg
mov
ficoml
mov
lds
adc
shll
add
ret
fcomps
dec
or
fsubl
xchg
cmpsl
jo
xor
lahf
sbb
into
lret
ljmp
mov
popf
mov
jle
in
repnz
icebp
add
cmp
mov
rcrl
loope
nop
fisttps
jne
and
icebp
stc
push
inc
jmp
loope
add
cld
dec
loope
xor
bound
inc
and
lods
lock
and
push
cld
inc
mov
jo
cmp
ljmp
cli
rcll
xor
or
aad
mov
jns
cmpsb
lret
hlt
jp
mov
or
outsb
and
cmp
inc
dec
sub
ja
cmp
mov
aad
xchg
or
cmp
je
lods
addr16
add
in
adc
iret
enter
in
add
mov
mov
add
mov
lea
les
aam
js
push
mov
and
out
out
dec
rclb
sub
adc
pop
out
ja
fldenv
xchg
dec
lret
addr16
outsl
in
fmull
push
xlat
pop
xor
cmp
inc
mov
outsb
addr16
adc
mov
movsl
cmp
scas
sub
dec
jp
mov
push
divb
repnz
pop
inc
or
jb
or
out
dec
pop
push
out
pop
test
leave
insl
call
lea
lds
and
pop
mov
xchg
sub
mov
jns
lock
lock
push
xlat
js
test
jmp
clc
icebp
lea
test
mov
stos
jo
ljmp
jg
insb
lock
ds
shlb
fildl
leave
dec
mov
outsb
pop
xchg
xor
div
sahf
inc
or
mov
mov
pushf
loope
pop
ret
xchg
xor
lret
add
push
daa
ss
jle
jge
aaa
add
and
repz
add
out
dec
xor
jnp
inc
sti
and
mov
lock
sbb
mov
xchg
and
mov
or
sbb
xchg
ljmp
call
ret
inc
cmp
xchg
mov
adc
pop
ret
das
inc
dec
shr
das
ljmp
push
jge
push
lcall
mov
js
xchg
jmp
aaa
inc
mov
xor
dec
faddl
and
inc
movsb
adc
xor
xchg
cmpsl
sub
xor
popf
inc
popf
cmp
and
xchg
fnstcw
rcl
adc
jbe
rcrb
mov
pop
popa
xchg
test
sub
push
or
jl
mov
push
sub
imul
ds
test
push
sub
xchg
adc
dec
pop
xor
jecxz
fs
add
ret
pop
loopw
cmpsl
mov
dec
lock
push
jp
cli
iret
rclb
push
cmp
jecxz
xor
sahf
inc
loopne
pop
icebp
pop
xor
push
movsl
lock
lods
add
in
pop
std
loope
or
cwtl
cmp
ja
jmp
xor
and
add
rcrl
loope
dec
sub
outsl
nop
rcl
jp
xchg
fwait
hlt
lods
cmp
iret
pop
inc
pop
call
rorl
fwait
test
jmp
and
test
ss
cmc
fs
aaa
jno
lock
xorb
pop
in
pop
xor
adc
xor
jle
test
jecxz
pushf
ds
or
repz
pop
sbb
aad
rclb
clc
out
dec
mov
test
dec
gs
inc
xchg
push
sbb
jle
pop
stos
sbb
lret
scas
jecxz
inc
cwtl
aam
xchg
stos
dec
mov
sbb
daa
pop
pop
cmp
and
testb
sub
ret
sub
jmp
pop
sbb
mov
divl
fmuls
dec
add
mov
or
xor
mov
enter
mov
repnz
push
mov
inc
loope
sahf
xchg
pop
lret
pop
jb
xor
icebp
add
xchg
add
test
fnstenv
pushl
pushf
mov
mov
cmp
fcomp
inc
in
jo
sbb
cmpl
inc
jae
jle
mov
leave
fcmovnbe
int3
mov
sub
rcl
ret
cli
cltd
mov
insb
and
daa
push
sub
shl
out
adc
xchg
fwait
jp
stc
pop
pop
cmpsl
out
in
sub
lods
push
call
add
in
jns
aaa
addl
aam
sti
mov
mov
sti
rcr
aas
mov
adc
pop
pop
lea
xor
es
adc
in
rorb
sub
mov
in
ljmp
fdivrl
mul
dec
mov
xchg
std
int
loop
jbe
arpl
inc
mov
pop
repz
inc
push
movsl
pop
jecxz
arpl
pop
xchg
rcll
push
ret
aam
enter
add
arpl
jmp
out
cli
test
push
and
ds
stos
xor
push
lods
lds
xchg
xchg
cltd
add
pop
sbb
je
push
xchg
icebp
mov
mov
pop
jbe
jne
rorl
cld
lcall
gs
cwtl
shl
in
je
inc
daa
sahf
shlb
loope
adc
je
insl
in
pop
pusha
add
mov
add
xlat
xchg
outsb
mov
mov
stos
fsubr
mov
jecxz
test
fs
sub
dec
inc
into
fdivrl
movsb
clc
xchg
stos
addr16
sti
lcall
cmpl
int
lahf
push
inc
fwait
repz
dec
pop
push
imul
pop
push
adc
xor
sub
je
add
push
lret
pop
cld
xchg
aam
das
cmpsl
or
jge
les
dec
or
mov
mov
sub
sbb
mov
push
mov
repnz
mov
xchg
neg
push
in
dec
fwait
das
lods
sti
call
mov
mov
hlt
inc
or
imul
or
push
xacquire
sub
mov
xlat
adc
push
cmp
daa
jge
sti
orl
loopne
jle
cwtl
gs
and
out
fstps
je
inc
cmpsl
nop
cmp
add
iret
jge
fadds
and
dec
mov
xlat
xchg
push
add
pushf
adc
push
lds
fdiv
mov
ficomps
mov
fldt
cwtl
lds
mov
adc
push
insb
call
lea
scas
scas
sar
cmp
hlt
rcl
pop
sarl
cmpsb
leave
pop
fwait
inc
fsub
sahf
ja
shl
push
jae
arpl
jp
cs
jge
out
sub
push
int
ja
sbb
aaa
mov
cmp
cltd
add
arpl
ss
cmp
jecxz
inc
das
inc
mov
add
clc
insb
mov
js
stos
fsubl
imul
mov
arpl
push
stc
mov
popa
xchg
fisttps
fcomps
jne
push
imul
ljmp
cmp
xchg
rcrb
cmpsb
and
movsl
adc
sub
adc
mov
test
mov
sub
xchg
insb
jnp
or
sub
xor
test
pop
and
sbb
addl
push
scas
or
inc
mov
and
pop
add
fisttpll
sbb
mov
xor
imul
pusha
cld
push
cmp
negb
gs
adc
out
jl
sbb
push
stos
pop
stos
xchg
inc
cmp
pushl
es
xor
loopne
xor
out
out
stc
mov
mov
mov
push
std
or
and
inc
aaa
js
faddl
jbe
int3
call
leave
sub
cwtl
shr
insl
clc
fwait
loop
int
js
inc
mov
cli
pop
jbe
fsubrl
mov
push
aas
xchg
xchg
sbb
cltd
mov
iret
shl
xchg
mov
or
testb
ljmp
mov
and
inc
ret
js
jb
add
test
repz
testb
or
test
xlat
std
mov
sub
icebp
iret
mov
jecxz
push
clc
daa
out
shll
push
pusha
cld
ret
push
inc
bts
loop
lock
lea
push
push
repnz
data16
inc
iret
sub
cs
shr
out
ret
mov
push
cld
mov
adc
and
lret
jns
xlat
pop
push
or
pop
sub
mov
sub
or
subl
in
lret
mov
fisttpl
inc
lcall
in
xchg
call
mov
xlat
xor
xchg
jne
push
or
daa
xor
or
jp
gs
mov
jbe
cli
pop
add
jno
fs
mov
push
je
or
and
cmp
mov
aad
push
push
xchg
orl
and
or
leave
fiaddl
outsb
rcr
jp
popf
lret
pop
jo
jns
fstps
out
jge
push
inc
movsl
add
sub
mov
inc
int
ret
mov
es
in
xchg
fisubl
pop
mov
ss
in
mov
dec
movsl
mov
cmc
mov
mov
ret
sub
and
xor
or
popa
cld
or
mov
out
out
xchg
scas
arpl
ret
push
adc
jmp
std
cmp
adc
jo
lret
or
lret
mov
data16
sub
xorb
xchg
in
daa
push
or
mov
pop
adc
sub
mov
fwait
arpl
jle
dec
push
incb
lcall
jnp
mov
push
out
mov
cmpsb
jbe
pop
push
in
cmp
das
jbe
insl
jmp
imul
clc
rcll
jnp
out
popa
stos
inc
sub
loop
xor
xchg
iret
mov
out
ret
cmp
cmp
xorl
jnp
sbb
push
add
pop
mov
fiaddl
rolb
mov
das
and
xchg
movsl
pop
add
jnp
jge
inc
mov
mov
sub
dec
aam
pop
inc
outsb
jp
and
jp
or
fstl
js
mov
scas
loop
test
out
mov
and
into
outsl
mov
dec
cs
test
dec
inc
adc
mov
lock
mov
mov
addb
test
jl
mov
dec
jno
pusha
test
xchg
bound
shll
adc
or
jge
mov
sbb
ja
mov
frstor
xor
andl
sub
dec
adc
push
psrlq
push
dec
mov
mov
cwtl
pop
pop
ljmp
lds
adc
and
mov
add
ljmp
cli
jne
loop
out
movb
push
repz
clc
push
rcr
inc
ret
cmp
cmpsb
insb
daa
sub
xchg
cwtl
fldl
xor
hlt
mov
ret
pop
pop
les
xor
jmp
pop
sbb
push
lods
ja
mov
rcrb
sub
xlat
loopne
addr16
push
sub
pop
mov
mov
jno
push
xchg
mov
mov
push
mov
add
adc
cmp
pop
pop
out
ja
inc
ljmp
mov
adc
jo
call
cmp
jl
xchg
clc
les
and
push
jp
imul
jae
push
cmpsl
notl
xor
subb
xor
rcl
mov
daa
push
xor
in
xlat
adc
mov
fwait
aad
lcall
bound
mov
clc
xchg
dec
mov
cmp
xchg
test
fs
xchg
inc
mov
dec
push
pop
iret
shrb
jae
data16
or
mov
push
nop
or
or
xchg
bound
add
pop
lock
jae
inc
lds
inc
pushf
sbb
loope
jbe
sub
xchg
lahf
fwait
lret
jle
pop
add
sub
fsubs
inc
add
outsl
jmp
pop
xor
rorl
push
movsl
jb
pop
xchg
mov
je
jns
movsb
das
std
pop
dec
xchg
aam
pushf
ljmp
addr16
mov
pop
or
or
mov
mov
sahf
inc
adc
cwtl
mov
mov
dec
nop
push
rcr
lds
or
dec
mov
adc
and
roll
inc
cmp
pop
xor
out
ss
pushf
imul
or
std
add
cmp
inc
sbbb
lods
add
add
xor
aam
clc
pop
sub
outsb
pop
xchg
or
inc
add
jnp
icebp
mov
pop
or
sbb
push
sub
sub
pop
cmp
mov
mov
in
cmc
pop
mov
cld
shl
pop
stos
xchg
es
out
jge
dec
nop
xchg
fdivl
insb
push
and
stos
ret
add
je
pop
or
jmp
stos
cmp
push
rcrl
cmpsb
or
bound
loop
jecxz
jmp
adc
add
xchg
leave
stc
or
pop
adc
dec
and
xlat
in
mov
mov
jns
negb
lret
clc
adc
add
in
mov
xchg
sbb
xchg
dec
loop
jb
xor
fisttps
mov
pop
xor
mov
decb
sarb
scas
pop
jo
orb
fidivrl
pushf
call
or
cld
adc
lahf
pop
pop
mov
inc
insl
dec
gs
inc
aam
and
xor
mov
pop
sbb
scas
pop
clc
pop
jae
xor
mov
insl
icebp
lahf
pop
add
lds
int
xor
mov
fs
lret
dec
push
data16
pop
pop
testb
rcrb
lods
sub
or
and
push
inc
ja
frstor
fbstp
mov
adc
and
out
int
test
je
xchg
cli
xchg
jo
hlt
or
call
das
jle
lahf
mov
not
adc
arpl
xor
rolb
in
lods
je
decl
inc
addb
fwait
cltd
jb
arpl
data16
out
bound
adc
push
icebp
push
dec
push
fidivrs
cmp
fists
fwait
mov
adc
cld
mov
jecxz
lret
adc
test
outsl
mov
push
jo
cwtl
bsf
inc
out
data16
out
in
sbb
stos
insl
jecxz
in
rol
stos
add
cmp
mov
aam
movsl
std
int
test
push
cli
dec
jbe
xchg
ret
xor
jnp
pop
cmp
sub
stc
mov
xchg
dec
out
divl
test
aas
mov
lret
pop
and
fucomp
xchg
popf
pop
fs
aas
das
ja
cmp
adc
out
dec
dec
sbb
xchg
cmp
jmp
sub
mov
aaa
inc
mov
or
stos
push
faddl
decb
xchg
nop
clc
aad
dec
adc
fisubs
cmpsl
and
nop
push
fstps
outsl
xchg
dec
test
jg
pop
mov
out
push
fsubs
out
aaa
jne
lahf
pop
xor
sbb
jno
xor
sbb
mov
bound
rep
dec
cmp
jg
outsl
push
add
sbb
sti
jno
sbb
cld
aaa
popf
insb
out
aas
cld
cmp
dec
inc
sub
xlat
daa
and
insb
dec
sahf
pushf
mulb
mov
jo
cmp
out
pop
pop
xchg
enter
push
daa
fnstcw
rorb
mov
fbld
test
fistl
movsl
shrl
fisubl
mov
cwtl
sub
xchg
idivl
ficoms
add
mov
sub
pop
fsubs
std
adc
imul
gs
add
jge
adc
mov
pop
jne
xchg
fs
jnp
push
ds
addr16
cmp
xchg
imul
xchg
data16
loope
lcall
push
lods
mov
ss
or
mov
and
adc
mov
inc
mov
or
je
fidivl
lcall
enter
lahf
test
mulb
ret
xor
fstps
mov
pop
sti
xchg
test
test
int
inc
inc
pop
ljmp
adc
out
fidivs
mov
sub
paddd
pop
jg
lret
sub
ljmp
pop
jl
cld
imul
lods
xchg
jb
adc
lret
nop
xlat
push
fldcw
dec
jne
fistpl
mov
jae
push
push
gs
out
and
jge
into
push
sahf
xor
push
and
and
mov
adc
ljmp
inc
mov
push
pop
icebp
in
jbe
push
sub
outsl
mov
push
or
and
mov
cmp
cld
aam
dec
popl
or
adc
rcll
lds
mov
fcmovnbe
arpl
adc
shll
js
fildl
fldt
out
lods
xlat
ja
mov
adc
sti
icebp
add
adc
imul
imul
pop
mov
mov
cli
sbb
push
in
mov
xchg
dec
nop
adc
or
or
andb
mov
fistps
loopne
add
arpl
and
xor
jbe
mov
push
push
or
test
mov
aad
mov
add
and
insb
jecxz
sub
inc
outsl
pop
xchg
lret
cmpl
mov
sub
or
arpl
call
shll
push
jae
fcmove
sbb
mov
jecxz
adc
ficomps
pop
loopne
sbb
fadd
adc
into
mov
decl
sbb
adc
pop
add
loop
pop
iret
and
hlt
aam
push
xor
dec
jp
cmpsl
and
jge
in
jmp
sbb
push
xchg
mov
jmp
dec
jecxz
pop
sbb
mov
nopl
lcall
mov
sub
jge
icebp
pop
jns
pop
loopne
adc
test
cld
nop
enter
jns
jmp
nop
imul
xchg
sub
mov
mov
mov
add
flds
ja
clc
shr
sbb
popf
or
cmp
nop
jnp
sarl
jae
xchg
je
and
ds
lahf
aad
cltd
shrl
nop
test
mov
aaa
std
dec
lahf
jnp
aam
xchg
repz
sahf
xor
test
movsl
add
fmul
inc
insb
jne,pt
mov
or
dec
push
adc
jo
push
dec
jo
mov
or
xor
mov
dec
leave
popf
ds
cmp
sub
jne
icebp
movsl
fs
mov
push
pop
and
dec
adc
add
cld
mov
sbb
inc
scas
sarb
lcall
jl
lret
mov
bound
mov
int
mov
or
and
xchg
pop
jge
daa
out
std
and
loope
pop
ficoml
push
mov
in
inc
popf
jne
gs
insl
jns
cwtl
dec
cwtl
loope
push
clc
pushf
xchg
push
sub
add
xchg
fbld
mov
push
cmp
jmp
pop
adc
rcl
fcoml
ret
sahf
ficoml
and
lahf
jge
fbld
into
xchg
dec
das
mov
popa
insl
ss
insl
icebp
sbb
sbb
cmpsl
in
xchg
aas
sub
xor
out
dec
mov
push
xor
push
jp
and
lret
lock
jmp
mov
jecxz
xchg
outsl
push
mov
sub
xlat
stos
sub
rcr
pushf
pop
add
and
inc
push
mov
inc
cmp
jnp
inc
ds
into
cld
dec
adc
mov
xor
pushf
aad
xor
pop
pop
mov
loopne
ljmp
dec
push
dec
mov
pop
pop
lods
sbb
jmp
pop
lahf
sub
popa
or
cs
js
mov
adc
sbb
pop
shll
xorb
fidivrl
shlb
stos
pushf
xchg
cmp
mov
lock
arpl
test
ss
test
imul
add
jo
sub
leave
pop
mov
dec
es
aas
dec
mov
sub
mov
jle
jmp
mov
push
insb
out
lock
gs
pop
mov
inc
imul
push
xor
cmp
sti
push
xchg
xchg
jns
sahf
add
popa
loop
mov
or
jecxz
je
jns
push
addl
push
cwtl
fimuls
jg
out
clc
aaa
mov
mov
mov
dec
sarl
pop
sbb
scas
jl
cmp
xlat
bound
rol
rcrl
adc
lods
sub
int3
scas
jno
pop
inc
pop
out
dec
jmp
jg
sub
popa
add
loopne
repnz
dec
popa
in
imul
mov
mov
and
push
stos
icebp
jmp
in
aas
popf
jno
rcll
and
dec
push
xor
out
jo
int3
jge
es
sbbb
out
mov
add
mov
das
pop
cmc
adc
int
fistpl
ds
movsb
mov
movsl
push
lcall
loop
lods
pop
inc
sub
rcrl
in
stos
fstpt
add
pop
fistps
cmc
ret
icebp
std
push
sahf
sbb
sbb
adc
dec
jae
jnp
imul
dec
add
or
dec
shlb
inc
mov
insb
cwtl
out
cmp
test
daa
jnp
inc
inc
test
pop
jae
in
in
into
xchg
pop
xchg
mov
cltd
dec
sbbl
outsb
sub
xchg
or
adc
mov
fsub
aam
scas
hlt
dec
pushf
shlb
bound
flds
in
lea
lods
fdivrl
ljmp
lret
sbb
lds
rorb
push
pop
xchg
rol
nop
fwait
mov
cmpsl
roll
cmc
les
rolb
add
sbb
ss
cltd
jbe
aaa
inc
mov
sarb
push
sub
mov
data16
push
lods
xlat
stos
in
and
clc
shr
movsb
imul
pusha
xchg
scas
fs
arpl
dec
pop
scas
cmp
call
mov
xor
inc
leave
or
or
pop
add
in
inc
int
add
pop
loope
sti
mov
jecxz
fs
outsl
cmp
data16
ds
or
jle
dec
and
push
xor
nop
add
mov
mov
gs
dec
lret
xor
int3
add
je
cmp
bound
fstps
mov
jnp
push
movsl
mov
aad
add
push
fstpl
inc
xchg
fwait
pop
jg
mov
jg
add
jo
ror
pop
dec
dec
xchg
aam
ficomps
fisttpll
push
xchg
imul
mov
mov
jecxz
ret
push
shlb
push
push
popf
xor
bound
int
mov
or
cmp
pop
push
out
xor
add
lods
push
xor
xor
cmp
jg
aam
leave
fs
orl
movsb
sti
push
subl
inc
mov
jg
out
or
sub
popf
pusha
das
test
js
jl
test
push
mov
aam
fidivl
push
jmp
cmp
or
rcrl
add
jno
xchg
sarl
jecxz
jnp
or
imul
loopne
les
push
jg
scas
jle
jbe
inc
push
jo
stc
jge
jb
cmp
xchg
push
xor
sub
call
and
repnz
push
cli
inc
stc
js
pop
jle
pop
sub
adc
lods
outsb
mov
inc
test
pusha
fsin
push
stos
leave
fldenv
enter
loop
sbb
ret
shl
cmpsb
out
dec
xrelease
out
std
fcomps
sarl
and
pop
stos
jb
mov
inc
dec
sub
xchg
repz
and
stos
sarl
jl
ds
dec
call
cli
dec
sub
data16
int
aaa
sahf
rsm
outsl
outsl
jge
cmp
jne
lahf
aaa
cmpsb
jecxz
adc
loopne
mov
mov
hlt
and
and
pop
divl
inc
or
pop
mov
fstpt
vpmaddwd
test
lods
push
sub
adc
mov
iret
xchg
imul
dec
js
inc
call
sbb
add
bound
pop
cmp
aaa
cmpsl
mov
mov
std
mov
jg
inc
xchg
in
test
sbb
cmpsb
push
xchg
pop
jg
mov
add
add
pushw
fsts
loopne
movsb
jl
fs
lods
pop
out
jmp
inc
sub
dec
pop
popf
addr16
jne
pop
subb
call
sub
lock
push
mov
mov
mov
pop
sti
shll
mov
add
ljmp
jae
in
or
hlt
gs
out
cmp
jmp
mov
test
push
xchg
cmp
or
enter
xor
push
push
insb
das
ja
inc
mov
pusha
pop
testb
pop
cmpsb
push
mov
jg
cmp
enter
lods
shufps
sbb
sub
or
sarb
cmp
imul
mov
pop
add
popa
mov
mov
cmpsl
mov
jns
fcom
inc
push
jnp
and
addr16
icebp
dec
and
push
push
imul
xor
test
adc
sub
mov
ret
mov
mov
loop
push
sub
push
aaa
pop
aad
shrl
mov
lods
leave
addr16
jp
or
or
std
das
adc
lahf
pop
dec
sbb
lret
mov
mov
mov
push
xchg
addb
repnz
or
stos
pusha
push
xchg
sub
mov
lock
cmp
pop
add
push
gs
js
ljmp
fs
inc
jle
nop
inc
fcoms
lret
in
test
repnz
mov
nop
stos
xor
lock
add
repnz
ljmp
inc
fistpl
nop
and
xchg
dec
dec
inc
cs
fdivs
sub
cli
inc
ds
divl
aaa
add
js
mov
mov
xchg
mov
mov
sub
addb
iret
push
pop
pop
sti
push
mov
decl
jecxz
jp
inc
stos
lahf
icebp
xor
movsl
out
mov
push
popf
rcrb
dec
loope
gs
in
adc
add
cmpsb
push
inc
pop
dec
rcrb
cmc
fwait
outsb
mov
or
jp
xor
dec
in
insb
add
lahf
xchg
jne
out
fs
add
sbbb
sbb
add
cwtl
adcl
ret
loope
popf
adc
pop
pop
push
and
jl
popf
adc
add
mov
stos
iret
mov
dec
jle
or
jmp
and
jae
outsb
or
dec
add
xchg
xchg
out
fdivrl
incl
fwait
les
cmp
call
jecxz
test
pop
popa
imul
ljmp
test
in
push
xor
jno
fsubl
fadds
push
repnz
adc
mov
and
add
dec
adc
cmp
call
pop
mov
and
aas
adc
shl
lock
test
pop
sbb
repnz
sub
xor
push
jbe
fistps
addr16
mov
add
add
outsb
mov
fimuls
xchg
movsb
adc
cli
pop
notl
lret
test
adc
jp
xor
inc
push
arpl
ds
divb
xchg
sub
cmp
add
cmpsb
inc
notl
aaa
nop
cmpl
pop
and
push
insb
push
jl
dec
scas
shrl
aas
out
mov
cmc
cmp
roll
out
sub
int
int3
mov
ret
cmp
add
mov
inc
xor
insb
xor
jmp
aas
insl
ret
and
adc
call
push
mov
mov
lock
xlat
ss
mov
add
pusha
rorb
or
call
icebp
pop
mov
bound
sub
sub
mov
fldenv
mov
aad
out
insb
xlat
push
test
mov
jnp
dec
dec
jb
ret
sub
pop
out
xchg
int
leave
xchg
jo
test
xchg
xchg
sub
outsl
and
cltd
dec
or
dec
fmulp
aaa
push
jle
out
das
fistpl
add
xor
mov
xor
nop
pop
xchg
xchg
mov
lahf
repz
outsl
mov
push
or
mov
in
dec
data16
xor
sti
scas
xor
sbb
dec
mov
fwait
adcb
sarl
mov
adc
xchg
sti
iret
in
mov
cmc
adc
stos
xlat
inc
pop
and
xchg
repnz
xchg
mov
scas
dec
mov
dec
std
mov
push
xor
jmp
sbb
pop
mov
sbb
and
call
inc
cli
mov
aas
sarl
out
pop
cmpb
inc
pop
add
mov
or
std
fdivl
das
lock
sti
xor
test
dec
sub
mov
lock
in
out
mov
xchg
scas
fs
loop
cmpsl
push
or
es
shlb
pop
data16
sbb
jo
mov
je
lahf
pop
pop
stos
cmp
cltd
hlt
jno
mov
jmp
cmp
xlat
imul
aam
pop
repz
call
pop
mov
mov
add
bnd
mov
adc
xchg
sub
adc
dec
fdivrl
mov
add
shll
rorb
pushf
mov
mov
nop
call
in
inc
sbb
js
inc
repz
cli
cmp
inc
loope
and
xor
sti
mov
aaa
jb
adc
and
aaa
fcomps
jae
xchg
aam
dec
andb
xchg
mov
fsubrl
icebp
push
xchg
lock
loopnew
ficomps
and
cmp
lcall
imul
pushf
repnz
jns
inc
fistpll
std
stos
xchg
rcll
push
sub
movsb
pop
mov
fcmovne
xchg
pop
xor
out
bound
outsb
movsb
cmp
or
jnp
push
in
addr16
leave
xchg
sub
mov
mov
jl
push
and
sub
insb
jmp
clc
push
in
js
test
mov
out
dec
lods
lods
mov
inc
test
push
js
xor
aas
std
outsl
sbb
iret
mov
repnz
xchg
mov
xchg
or
or
sbb
sarb
push
gs
sub
add
jecxz
xchg
mov
xor
addr16
pop
into
fsts
mov
test
ret
out
pop
mov
icebp
and
fdiv
pop
test
jge
pop
inc
mov
pop
pop
rclb
out
cmp
push
sbb
pop
sbb
jmp
aam
xor
push
xchg
mov
mov
add
pop
cmpsb
inc
cmp
sbb
popa
js
cltd
push
adc
into
lods
ds
and
cld
push
nop
push
adc
cmovg
mov
inc
pop
mov
shlb
cmpsb
xor
add
xor
mov
mov
adc
mov
aaa
dec
divl
adcb
repz
mov
add
icebp
dec
push
inc
mov
shrb
adc
shrl
adc
in
mov
mov
lea
sarb
xchg
lahf
outsb
ret
fdivl
xlat
push
adc
lret
subl
push
fildll
and
fidivl
pop
push
jle
scas
add
mov
inc
lret
cmpb
mov
adc
and
jne
add
jp
jle
cli
and
push
rorb
inc
sbb
and
add
mov
shrl
cmp
pop
push
mov
sahf
movsl
mov
xchg
mov
cmp
dec
iret
pushf
or
stos
or
pop
mov
imul
sbb
int3
mov
push
mov
xchg
leave
adc
rolb
adc
jo
and
cmp
or
xchg
ja
jp
shr
inc
mov
lret
jle
in
aad
xor
xchg
jns
jb
addl
jo
sbb
movsl
or
movsl
add
fistpl
filds
jecxz
and
xchg
or
jb
data16
stc
inc
das
repz
movsb
mov
dec
out
sub
sub
xchg
jecxz
out
test
dec
ficompl
dec
into
cmp
mov
insl
inc
ljmp
movsl
insl
and
insl
cmp
std
add
xor
adcl
stos
pop
rcrb
out
clc
adc
xchg
fs
mov
push
dec
pop
in
pop
xor
sub
mov
xor
jns
fsubrs
stc
loope
loopne
pop
mov
xor
out
sbb
xchg
mov
xchg
jnp
nop
outsb
mov
data16
cmpsl
pop
incb
cmc
and
push
in
pop
call
and
shlb
adc
shrl
cltd
inc
jecxz
or
jbe
addr16
rcrl
mov
testl
lret
hlt
popf
adc
mov
and
decb
push
and
aad
in
adc
mov
sbb
lcall
in
mov
jnp
ljmp
pop
leave
xor
and
stos
sbb
xor
cmp
mov
outsb
xchg
call
cmp
jl
xor
insl
notb
xlat
jno
mov
mov
sub
lods
pop
imul
lock
push
mov
out
repnz
stc
vaddps
lods
inc
mov
add
ss
fisubl
std
iret
cmc
and
loop
xor
stos
or
pushf
mov
lock
jl
les
cvttps2pi
sub
xor
add
pop
js
sub
outsb
sti
lret
ret
and
push
rclb
fwait
dec
mov
sbbl
stos
lock
scas
xchg
inc
in
xchg
push
or
mov
ljmp
std
jno
xor
and
xchg
mov
mov
adc
mov
js
jae
lcall
sarl
adc
mov
mov
in
and
jmp
mov
popf
pop
jmp
inc
sbb
std
out
mov
popa
mov
sub
loop
cwtl
sub
out
mov
lea
scas
add
pop
inc
fstps
cli
lods
es
push
xchg
xchg
stc
ss
xor
ss
mov
enter
movsb
push
push
push
adc
aaa
cmp
cmc
xor
push
outsb
dec
cmp
stos
dec
mov
cs
dec
xchg
rcll
mov
stos
ljmp
push
dec
jg
cmpsb
xor
or
bound
les
gs
sub
icebp
push
int3
out
push
fs
clc
mov
mov
lock
fnsave
xchg
xchg
leave
dec
cmp
leave
aaa
xchg
push
inc
xchg
repz
sbb
adc
insl
push
loopne
mov
xor
sarb
xor
je
andl
jbe
and
xchg
pop
mov
pop
push
enter
aad
insb
and
inc
dec
es
cmp
mov
lea
imul
push
jmp
push
dec
xor
pop
mov
notl
mov
inc
repz
mov
mov
dec
xlat
lea
sbb
adc
add
xor
out
cmpsl
bound
push
and
xor
jae
xchg
or
inc
inc
ds
fs
in
stc
nop
push
mov
in
stc
mov
push
std
xor
cmpsl
out
fisubs
pop
xchg
int3
sbb
sbb
add
not
pop
scas
in
cmpsb
jmp
dec
shlb
push
sti
pop
xor
or
and
lods
inc
add
pop
das
add
or
cmpsl
shlb
cmp
xor
add
dec
push
bound
and
shrb
jns
mov
cmp
cmp
jecxz
push
or
mov
dec
mov
inc
in
sti
lahf
lcall
adc
lcallw
xor
and
jg
lds
fdivp
or
imul
dec
iret
lds
popf
pop
scas
cmp
mov
insl
imul
inc
xchg
sub
fcomp
js
push
xlat
roll
dec
or
sbb
test
pusha
pop
adc
fcmove
and
mov
xor
out
stc
and
outsl
sub
ret
lds
cmp
aas
jl
and
call
f2xm1
insb
jbe
or
cltd
fs
and
mov
aaa
jo
pop
mov
push
std
add
imul
aad
mov
daa
pop
mov
shlb
das
stos
hlt
or
in
jae
outsb
cmc
mov
ja
and
jae
sbb
aam
xchg
aam
movsb
outsl
push
inc
sbb
cmpsl
mov
mov
xchg
lds
jbe
int3
mov
cmc
repnz
lret
adc
xor
rcll
mov
outsl
insb
cmp
dec
mov
hlt
cli
push
pop
sub
pusha
sub
inc
sti
pop
xor
xchg
sbb
xor
mov
sbb
pop
mov
xorl
sahf
sub
lds
mov
enter
push
jg
lods
add
push
subl
inc
jne
lret
es
inc
lret
jle
mov
pop
call
dec
mov
adc
add
adc
sbb
cmpl
fists
adc
jge
cmp
mov
mov
nop
jns
out
cmp
and
mov
movsb
in
ss
adc
out
sub
pop
cmp
aam
mov
cld
and
jb
jbe
aas
aaa
xchg
dec
add
je
pop
cli
sarl
ficomps
lea
repnz
in
add
cmc
cmp
stos
lds
insb
test
int
shr
push
mov
int3
mov
rorb
cmp
mov
adc
sub
lea
je
sbb
enter
xor
into
add
jg
pop
xchg
inc
dec
es
dec
mov
int
out
lock
int3
push
sbb
ds
das
mov
jo
mov
mov
jge
sbb
or
enter
nop
repnz
ret
cmp
inc
outsl
push
push
mov
push
push
push
insl
jnp
push
sub
sbb
shll
add
sar
cmc
outsb
pop
mov
push
sbb
sarl
orl
shlb
subb
and
sub
xchg
subb
xchg
pop
nop
xor
lods
xlat
shl
lahf
push
mov
inc
lock
pop
jp
jo
in
jb
cmc
push
mov
or
jecxz
stc
rol
sbb
dec
sub
fisttpll
stos
popf
xchg
fisubs
scas
rolb
sub
jp
jb
inc
nop
ds
in
push
lahf
mov
adc
push
push
out
enter
mov
ja
insl
jbe
pop
xchg
scas
repz
cmp
sub
inc
stos
orb
in
add
incb
pop
xchg
dec
jnp
repz
call
jne
jae
push
aad
out
push
push
in
lds
push
divb
stos
xchg
aas
stos
add
sti
xor
test
out
dec
ss
dec
ds
inc
add
push
cmpxchg
push
fisubs
mov
push
mov
adc
mov
std
rcr
nop
mov
push
inc
mov
lods
negb
cmpsl
add
cmp
in
dec
jle
enter
jmp
sub
xchg
push
xchg
sub
or
sub
sbbb
add
xchg
mov
repz
into
mov
test
rcr
ja
jle
xlat
shrl
lods
mov
fstpt
adc
stos
mov
movsb
adc
pop
or
mov
mov
int
dec
sub
lret
jne
int3
sbb
rclb
xor
xor
and
into
push
movsb
popa
sbb
add
pop
inc
cmp
mov
das
cld
inc
bnd
cmp
cmpsb
notb
loopne
inc
and
out
cmp
mov
jbe
scas
enter
push
adc
movsl
mov
sti
sti
xchg
std
mov
outsl
insb
lea
enter
enter
mov
iret
cltd
fwait
dec
data16
das
lret
lret
xchg
das
pop
scas
ret
repnz
pop
dec
rorb
add
daa
cmp
push
std
fcomps
mov
jge
pop
mov
outsb
push
push
mov
mov
sub
mov
pop
test
push
mov
pusha
jae
mov
in
adc
sti
mov
inc
hlt
lret
inc
pop
add
cltd
or
in
or
adc
push
sub
inc
add
push
test
sbb
out
es
mov
test
mov
stos
mov
fldt
cmp
or
inc
xchg
mov
add
and
icebp
push
in
loop
lcall
jo
jp
test
or
pop
push
pop
xchg
lcall
nop
sti
lret
xor
xchg
sub
inc
cld
std
cwtl
int3
imul
sub
dec
out
dec
jbe
jnp
or
inc
aam
cmpb
cwtl
cmp
inc
cwtl
and
int3
mov
repz
pop
js
and
testl
fwait
fwait
movsb
push
js
jle
shl
scas
outsb
out
xchg
idivl
fmuls
loope
sbbb
mov
cwtl
push
xorl
mov
sub
in
sbb
push
mov
mov
fbstp
xchg
sub
xor
mov
xchg
cmp
fstl
movsl
call
push
adc
loopne
push
jle
jo
imul
lret
mov
mov
jp
fsubrs
aad
mov
xor
cmc
int3
and
nop
out
test
andl
pushf
pop
and
inc
stos
xchg
test
pop
add
jecxz
inc
int3
aad
shrb
sti
loopne
icebp
mov
push
and
cli
inc
pop
add
lock
das
sub
lds
cmp
mov
int
dec
fiaddl
cmp
and
int3
ljmp
adc
mov
dec
mov
fwait
jg
mov
sbb
cmpsb
loopne
ja
add
inc
pop
sub
outsb
movsb
xorl
fisttpll
clc
xlat
jle
push
sbb
shl
enter
daa
add
js
xchg
dec
nop
and
pop
imul
andl
orb
dec
sub
sub
in
inc
lock
int3
pop
popf
outsb
sbb
stos
xor
sub
les
mov
shl
cwtl
cltd
sbb
in
xchg
xor
mov
testl
loope
insb
sarl
ret
aad
push
add
lret
adc
iret
sti
cmp
push
add
test
iret
mov
je
test
pop
inc
adc
lret
int
or
test
call
iret
icebp
cmp
dec
sub
lahf
inc
test
sbb
lds
push
sub
mov
lret
cmc
shl
mov
sbbl
shl
sbb
jg
insb
pop
sbb
mov
bound
mulb
ds
inc
inc
xchg
add
pop
ficoms
mov
out
jecxz
stc
scas
sub
inc
add
cmp
imul
loope
add
in
leave
arpl
jp
dec
test
push
movsb
outsl
jecxz
cs
leave
and
jle
dec
mov
je
pop
and
rcrl
movsl
inc
loope
aad
fdivp
cmp
mov
repz
jno
popa
mov
sti
jecxz
push
dec
xchg
xor
out
imul
imul
xor
jle
pop
sbb
std
ror
add
sub
mov
pop
dec
dec
gs
xchg
jb
subl
inc
push
sbb
js
pop
xchg
adc
mov
cmp
cltd
and
int3
popa
addr16
aas
dec
rcl
in
push
fsubp
lret
aas
or
fcmovnbe
in
dec
xchg
negb
es
lcall
test
shl
xor
push
sti
xor
push
test
lret
data16
fstps
xchg
sarb
loop
mov
push
inc
daa
scas
daa
adc
xor
fs
pop
pop
mov
cltd
jno
mov
add
mov
push
xchg
sar
imul
ret
pushf
dec
and
rcrl
in
xchg
pushf
mov
mov
mov
cs
sbb
cmpsb
sbb
shlb
sarl
sub
les
subb
sub
cwtl
and
pop
fdivs
movl
sub
test
mov
jnp
or
jae
mov
sbb
aad
in
aad
sti
cltd
pop
mov
imul
enter
push
jl
and
pushf
enter
shrl
mov
arpl
add
inc
jge
inc
mov
or
push
inc
std
sbb
fwait
mov
pushf
lods
in
fdivs
iret
in
jo
mov
push
xor
stos
xor
cmp
lods
enter
sbb
jg
je
xor
jo
test
jge
pop
scas
push
push
pop
sub
scas
aad
icebp
jae
inc
arpl
pusha
mov
fstpt
into
adc
jnp
cltd
lock
cmpsl
das
or
movsb
imul
push
jne
popa
daa
xlat
idivb
adc
rcll
mov
call
sti
mov
xorb
gs
int3
pop
cli
push
fnsave
xchg
sub
test
cmpb
nop
xor
pop
mov
sub
push
sub
test
ret
negb
js
xchg
cmp
xlat
xor
inc
es
rcrb
sub
div
mov
jge,pt
sti
adc
xchg
mov
push
sub
push
inc
cwtl
lods
add
out
jnp
ret
mov
std
arpl
mov
xchg
mov
add
mov
cmpsb
je
sarl
lret
popf
mov
clc
outsl
fimull
lods
imul
call
enter
cmp
decl
pop
mov
pop
scas
jge
jns
pushf
xor
fcoms
inc
test
cmp
testb
stos
mov
xchg
inc
cmpsb
imul
dec
add
repz
in
and
imul
xadd
mov
jae
sub
dec
lods
cmpsl
and
dec
lret
repnz
jno
cli
cmpsl
jnp
cltd
push
lcall
sti
sbb
pop
adc
rcrb
jmp
push
mov
jns
aad
inc
xchg
scas
fcmovu
loop
sarb
dec
inc
mov
cmpsb
mov
sahf
rcr
sbb
sub
xchg
mov
cmp
lret
mov
mov
or
aaa
inc
loopne
sbb
out
or
mov
in
test
push
sbb
mov
mov
int3
and
cld
sahf
pop
xchg
add
popa
pusha
sub
data16
sbb
or
daa
jno
sbb
xchg
xor
and
or
jae
xchg
jl
mov
rcr
outsl
push
cltd
lret
stos
loopne
or
iret
out
jg
xlat
mov
sbb
sub
mov
mov
stos
pop
dec
and
mov
xor
imul
mov
and
leave
jno
lock
xchg
cmpl
inc
adc
inc
outsl
ja
push
outsl
ficoms
cmpsl
out
jl
jo
mov
inc
int3
cmp
stc
fidivs
arpl
adc
andb
cltd
bound
std
out
jae
or
sbb
enter
adc
jecxz
cmpsl
sbb
movsb
nop
or
test
call
loope
icebp
lret
or
repz
jo
pop
and
sahf
mov
repnz
adc
rol
pop
xchg
rcl
fisttps
mov
xchg
gs
les
dec
inc
lahf
mov
pop
xchg
jecxz
bound
fwait
in
repnz
dec
popa
and
and
out
in
mov
out
cmp
sub
out
andb
push
out
rolb
add
push
aam
test
clc
mov
mov
sbb
jno
js
jbe
cmpsb
daa
adc
stos
out
mov
inc
jo
sbb
sbb
lea
adc
or
xchg
mov
lock
ljmp
adc
mov
iret
fbstp
add
sbb
push
ret
rol
sub
adc
and
pop
data16
add
jl
pop
jmp
cwtl
push
insb
jge
hlt
std
leave
dec
pop
push
pop
add
mov
addr16
or
aaa
das
fmul
arpl
jg
mov
ss
mov
test
popf
or
pop
xor
push
faddl
fidivs
inc
test
dec
imul
mov
xchg
pop
pusha
mov
int3
movsl
xor
in
aad
xor
rcrb
jmp
cmp
dec
push
xchg
pop
shll
js
pop
es
into
inc
sbb
mov
and
or
daa
insb
icebp
outsb
lret
aaa
jge
pop
inc
add
pop
cli
into
mov
jmp
jp
hlt
pusha
cmp
in
push
xchg
push
mov
dec
mov
insl
adc
mov
repnz
into
adc
cwtl
mov
push
jle
mov
sbb
cmp
push
xchg
push
stos
dec
inc
imul
xor
dec
xchg
mov
popf
inc
filds
and
sbbb
mov
add
cmp
shll
mov
iret
xchg
repnz
ret
imul
fs
sub
dec
in
sub
stos
adc
sbb
fs
push
xor
scas
and
es
add
test
xor
xor
and
jae
je
push
loop
or
mov
std
add
add
jl
jmp
bound
sahf
push
fwait
xchg
mov
inc
pop
inc
xchg
fwait
mov
cwtl
sub
sahf
sbb
xchg
push
pop
shll
jge
lea
es
neg
sbb
sbb
xchg
pop
push
imul
jnp
in
push
mov
movsl
dec
fsts
sti
mov
cltd
xor
cmp
or
adc
inc
test
ret
out
sub
push
adc
jle
cmpsb
inc
in
pop
cmp
mov
mov
data16
stc
jp
jbe
sbb
imul
insl
mov
in
and
js
lret
inc
shll
mov
xchg
xchg
inc
push
fdivp
in
movlhps
jns
imul
fstl
mov
dec
sbb
push
pushf
aaa
lods
out
in
test
sub
jmp
imul
or
sbb
mov
test
loopne
sub
jge
aad
add
arpl
pushf
adc
sbb
lret
sbb
xchg
pop
and
jp
inc
mov
ret
jg
scas
repz
movsb
push
dec
lret
stos
fwait
lock
adc
fcomps
hlt
jb
jmp
mov
fmuls
stc
mov
movsb
xchg
sbb
dec
mov
pop
loope
stos
push
add
imulb
cltd
sti
pusha
pop
mov
add
xor
dec
jl
xor
shlb
rcrl
mov
pop
xor
and
in
loope
aaa
out
outsb
out
pop
sbb
mov
jo
sub
inc
xchg
js
xchg
nop
pop
out
jns
inc
xlat
shll
or
in
and
push
enter
xor
and
push
adc
test
inc
inc
out
imul
cmp
sahf
add
je
or
xor
jae
inc
xchg
adc
push
or
xor
pop
cmc
mov
fcompl
push
mov
into
jmp
icebp
ror
imul
divl
push
out
push
push
mov
push
xor
lock
mov
mov
test
mov
jae
dec
scas
stos
fwait
adc
stos
xchg
out
mov
push
arpl
inc
es
negb
rcl
clc
pop
xor
es
or
std
push
mov
insl
pop
aas
out
xchg
mov
and
fimull
jb
adc
push
jecxz
mov
out
mov
sahf
scas
cmpl
leave
outsb
mov
pop
jp
inc
bound
or
sub
add
and
jae
adc
insl
mov
mov
pop
je
call
xchg
dec
jne
jae
call
insl
adcl
lret
mov
xchg
xor
sbb
test
insl
and
fcmovnbe
data16
mov
and
adc
inc
sub
or
push
in
jg
sahf
mov
pop
mov
idivl
jg
jbe
test
cmp
sbb
or
lahf
lods
loope,pt
test
xchg
jle
daa
dec
mov
push
int3
rcrl
out
fucomip
pop
es
xor
push
add
inc
iret
rorl
addr16
mov
cmpl
dec
dec
rcrl
loop
jae
ffree
or
sbb
les
adc
ja
sbb
jb
stos
ss
sbb
dec
insb
call
scas
xor
in
enter
in
dec
leave
jle
outsb
outsl
cmpsb
fbstp
mov
repz
inc
shrb
pop
bound
adcb
int
inc
mov
test
mov
mov
loopne
mov
testb
inc
push
fdivrs
adc
dec
push
mov
dec
mov
in
in
test
pop
dec
insl
ret
xor
push
negl
or
cwtl
xor
loopne
pusha
test
stos
cmpsb
push
test
call
cmp
ret
inc
les
mov
jmp
push
ror
test
xor
incl
sbb
add
dec
ds
and
or
outsl
je
push
cmp
popf
mov
sbb
bound
test
sub
test
inc
jl
clc
ss
fistpl
ljmp
or
mov
xor
xlat
sub
movsl
sbb
xchg
mov
in
mov
daa
mov
jg
cmp
cwtl
pop
cmp
subl
iret
or
aam
mov
les
or
inc
xlat
or
mov
adc
in
xlat
stos
rcrl
roll
repnz
xchg
or
cmp
sub
cltd
mov
lcall
jmp
hlt
add
gs
roll
test
frstor
sbb
js
pushf
adc
cli
xor
inc
sub
mov
ret
jb
or
mov
addr16
scas
mov
xor
ficomps
test
xchg
lret
fidivs
scas
or
movsb
cmp
stos
jp
xchg
gs
loope,pn
fldl
push
inc
icebp
test
sahf
and
sbb
sbb
xchg
fdivl
xchg
mov
mov
mov
mov
pusha
stos
hlt
ss
in
daa
hlt
subl
hlt
stos
and
sbbb
sub
inc
or
scas
cmp
mov
das
jne
mov
scas
pop
dec
aad
adc
mov
pop
cmp
cmpsl
adc
inc
mov
andb
cmp
sarb
mov
stos
jp
or
sbbb
aaa
inc
jne
cmp
orb
adc
shlb
xor
pop
pop
fnsave
pop
lahf
jne
xlat
dec
in
in
int3
lret
test
mov
sbb
jecxz
push
test
hlt
flds
fcoml
bound
add
sbb
dec
mov
dec
pop
sbb
mov
cmpsb
sti
xor
sbb
fistpll
adc
cmpsb
das
nop
mov
cmp
mov
mov
leave
push
mov
sub
fs
ret
in
imul
lds
imul
call
and
fstpl
stos
mov
out
adc
dec
fildl
fcomps
insb
cmpb
nop
xchg
adcb
into
pushf
cmc
pop
sahf
jnp
adc
mov
icebp
movsb
stc
nop
jmp
bound
ja
cmp
aam
jbe
mov
or
adc
into
lcall
movsb
ja
add
fistpl
andb
mov
arpl
cmpsl
sub
mov
clc
fxch
pop
js
mov
jne
adc
hlt
sbb
iret
xor
repz
mov
outsl
push
xor
lret
movsl
out
cmp
mov
fistps
aas
push
fucom
insb
sub
in
repz
cmp
or
adc
out
or
fldt
out
test
js
lahf
sub
lcall
enter
sbb
mov
mov
shlb
shrb
push
inc
imul
ret
cmp
add
pop
and
dec
push
ljmp
pop
pop
lahf
sbb
cld
push
int
stos
push
lods
out
pop
movsb
mov
outsl
mov
inc
out
ret
cmp
in
inc
outsl
mov
mov
xchg
ja
clc
lods
add
sub
pop
or
dec
jo
mov
shll
mov
aad
xchg
movsb
xor
ficoms
test
sub
jle
or
mov
inc
lret
lods
jg
pminsw
xchg
dec
ret
jg
push
gs
repz
loopne
call
mov
or
repnz
into
clc
fwait
xchg
mov
lahf
ds
shrl
inc
xchg
xor
sub
lds
jb
outsl
rcrb
fsubrs
jp
adcb
inc
adc
lds
cmp
and
cmp
out
pop
test
test
stos
push
popa
xor
lea
test
rcrl
in
movsb
lods
andl
sub
sub
lds
shll
mov
fildll
fwait
adc
or
jns
mov
cmc
lds
iret
shrb
or
aad
push
addr16
call
sub
push
fidivrs
and
std
mov
ret
pusha
outsl
xor
notb
cld
cmp
jno
adc
mulb
pop
lods
sub
icebp
call
add
mov
sbb
sub
je
out
dec
jl
outsb
stos
sbb
in
negl
pop
sahf
xchg
dec
xor
inc
insb
cmp
fdivrs
fimull
push
lcall
or
addr16
cmp
or
jp
fstpl
mov
aam
jp
and
inc
lret
into
sbb
ret
out
push
pusha
add
mov
sub
push
stc
pop
nop
push
jecxz
cld
and
cmp
lock
in
pop
xor
enter
pop
sub
daa
aam
xchg
std
lret
subb
mov
add
out
imul
into
fs
into
mov
mov
test
lods
mov
pop
mov
rcll
ja
mov
or
mov
ljmp
aad
jp
and
std
gs
inc
sub
or
aas
or
cmc
stos
movsl
jmp
call
dec
inc
or
dec
xor
xor
mov
shll
push
in
dec
loopne
jbe
xchg
jge
cmpsb
pop
adc
ret
shrl
in
push
dec
insb
lcall
jb
mov
dec
cmp
mov
movsb
stos
mov
hlt
pop
dec
add
cmp
lods
imul
hlt
pop
iret
test
add
cmp
cltd
add
fsubs
imul
sub
cmpsb
int3
repz
leave
sub
les
pop
or
call
mov
std
xchg
ss
dec
lods
push
popa
push
call
sbbb
notl
add
add
adc
pushl
push
mov
pop
dec
rcrb
sbb
lods
pop
add
popf
sti
fnsave
pop
fwait
enter
and
mov
adc
hlt
in
fisubl
mov
xchg
int3
out
mov
or
shl
cmpsb
sbbl
sbb
fwait
add
inc
cmp
push
xchg
jmp
xchg
jo
hlt
xchg
pop
mov
pop
iret
shr
es
dec
mov
das
stos
jnp
rorl
mov
mov
inc
out
movsl
lods
rcl
inc
int
xor
mov
fwait
push
out
push
pushf
push
dec
in
mov
add
popa
or
daa
and
scas
inc
hlt
sahf
or
rorb
push
ret
in
jbe
or
cmp
out
in
mov
cmp
mov
jl
clc
andl
enter
add
test
iret
jl
fstl
hlt
add
sbb
lcall
mov
mov
out
test
test
mov
data16
imul
fmul
mov
hlt
and
inc
add
pop
xchg
xor
mov
cltd
fldt
ja
in
out
adc
sbb
jp
flds
mov
popf
cltd
sti
ret
sub
fcomp
lahf
pop
and
movsl
les
mov
pop
inc
fcomp
nop
or
out
xchg
xor
fs
xchg
mov
mov
push
lahf
fldenv
jle
adc
mov
adc
add
jnp
mov
cld
sub
lahf
inc
in
popa
lcall
cmpb
pop
leave
shlb
leave
decl
sub
into
cmp
lods
jno
ss
outsl
jp
subl
aam
mov
cmpb
fsub
inc
test
lcall
iret
xor
mov
cwtl
dec
adc
adc
ret
test
cwtl
push
mov
test
je
xor
cltd
cwtl
test
ficoms
pop
mul
cmpsl
or
mov
sahf
adc
push
adc
xor
pop
shlb
js
adc
jmp
sarb
jmp
xchg
mov
dec
arpl
adc
jle
xchg
add
sub
ds
sarb
jp
mov
rolb
rcrl
inc
add
pop
popa
xorl
jo
stos
ja
out
test
xlat
cmp
push
sub
ja
cwtl
imul
lret
imul
sahf
jns
pop
pop
imul
xor
mov
pop
shlb
test
inc
pop
mull
cmpsl
or
adc
mov
cmp
xchg
fadd
arpl
jo
adc
scas
out
mov
sub
popa
jbe
movsb
scas
or
push
fisubrs
xor
mov
pop
int3
leave
or
out
push
sub
sbb
in
adcb
push
sub
jle
repnz
jle
lret
add
ds
cmp
cmp
loope
add
out
shld
pop
xchg
pushf
mov
fwait
rcll
popf
imul
push
stos
add
dec
stc
mov
inc
es
or
ja
push
jne
shrb
xchg
in
ret
inc
jg
js
js
enter
cli
loopne
xchg
sahf
xchg
repz
or
pop
sti
jle
insb
lock
je
push
incb
xor
xchg
sbb
adc
sub
xor
lds
addb
cmp
repz
into
aaa
sub
pushf
aad
dec
sbb
or
push
loop
sub
fdivl
add
ss
add
push
or
and
loop
mov
mov
sbb
inc
mov
stos
mov
sbb
iret
and
divb
jg
sub
xchg
sub
sub
stos
test
les
lock
mov
fildl
sub
push
mov
inc
xchg
jb
mov
lahf
pusha
sub
movsl
push
cwtl
jl
xor
sarl
inc
adc
loopne
enter
xlat
movsl
gs
in
ret
jmp
xchg
mov
fstpt
adc
movsb
cmp
aad
sub
shrl
push
jge
clc
cmp
cmpsl
add
adc
arpl
mov
jns
pusha
ret
daa
xchg
in
jb
inc
mov
push
stos
outsl
int3
mov
testb
mov
sub
cmp
sbb
push
push
scas
fbstp
ja
rcrb
lods
cld
popf
jp
mov
imul
loop
or
push
mov
repnz
lock
cwtl
out
mov
or
imul
in
sti
cmpsb
dec
mov
sbb
btc
aad
xor
inc
mov
and
sbb
xchg
jo
mov
pop
lods
lcall
in
jecxz
out
cmp
test
jo
repnz
stc
jbe
fstl
jb
hlt
adc
jge
cltd
sahf
cltd
pop
sti
xchg
js
jecxz
adcb
scas
ret
popa
xchg
std
aas
sahf
stc
jb
scas
addb
xchg
cld
adc
sbb
fdivrs
mov
mov
je
shrb
adc
aad
ljmp
inc
push
mov
hlt
adc
into
lds
ja
fstps
push
xlat
mov
jae
stos
cmpsb
mov
inc
lcall
jl
cmc
mov
js
cli
into
or
push
push
sahf
xchg
leave
mov
push
loope
subb
sbb
shll
jns
push
shlb
jnp
xor
xchg
mov
jmp
daa
mov
and
cmp
mov
lea
int
jnp
inc
dec
test
pop
loopne
mov
xchg
sbb
mov
mov
dec
pop
mov
dec
inc
xor
jl
popa
imul
dec
bound
jmp
daa
les
xor
daa
xchg
ret
hlt
sub
dec
inc
mov
test
xor
adc
pop
pusha
je
cltd
addr16
lahf
addr16
sarb
sbb
inc
add
adc
in
aam
mov
out
fwait
repnz
cmpsb
rcll
or
mov
or
test
sbb
and
adc
scas
inc
lret
in
sub
push
js
adc
loopne
push
jb
mov
inc
or
repnz
xchg
mov
mov
mov
xchg
jne
arpl
cmpb
xchg
shr
or
or
inc
out
mov
stc
sbb
out
add
outsl
push
sbb
popa
fs
adc
jo
pop
xor
push
fistps
jp
and
faddp
push
dec
cli
push
pop
dec
xor
or
stc
pop
or
sti
ljmp
pop
test
jnp
adc
mov
adc
xor
movsb
popf
mov
leave
out
pop
push
push
sarb
mov
xchg
xchg
cmp
xlat
imul
sub
inc
mov
sbb
sub
lods
xor
adc
dec
push
jge
data16
mov
pop
cvtdq2ps
repz
jge
adc
sti
or
sub
pusha
repz
out
mov
pop
sub
adc
sub
mov
mov
lods
push
add
fistpll
mov
or
pop
lcall
lret
jmpw
aam
lret
cmpb
lods
xor
aam
data16
add
add
jbe
dec
shll
add
sub
push
outsb
sarb
aaa
leave
push
test
shlb
mov
mov
dec
incb
not
nop
jns
inc
imull
ficoms
sub
jne
sti
push
dec
pop
fsubl
iret
and
arpl
fnstenv
lret
cmpsl
and
cmpsb
mov
push
jl
shrl
sub
in
pop
insl
test
mov
add
in
cmp
out
std
dec
cs
data16
fstpt
jmp
mov
rcrl
es
icebp
add
cmp
cmc
cltd
js
jecxz
outsl
stos
pop
fsts
dec
int3
loopne
dec
data16
ds
popf
jmp
xchg
mov
rolb
imul
sub
xchg
dec
jbe
fwait
icebp
mov
es
icebp
lock
inc
push
jb
lods
jnp
mov
sub
in
lahf
or
xor
push
push
outsl
jge
or
jg
inc
es
scas
jecxz
xor
lret
addr16
lcall
aam
out
fsubrl
mov
jl
cmpsl
je
sbb
push
dec
xor
pushf
mov
push
xchg
repz
into
push
or
in
sbb
sub
cmp
or
mov
adc
lods
mov
push
test
test
cmp
cmc
push
cmpsl
lods
lcall
ret
push
cmp
daa
enter
and
lret
fsubr
cmp
sub
xor
outsl
fistpl
dec
or
lcall
mov
outsb
imul
xchg
in
rcrl
imul
xor
call
clc
pop
dec
sub
and
in
mov
xor
repz
push
outsb
jl
or
pop
pop
add
xlat
das
data16
sub
and
mov
or
xor
jno
out
js
jo
dec
jp
fcomp
into
cwtl
dec
push
push
dec
add
arpl
and
cmp
repz
pusha
add
pop
pushf
jbe
into
subb
out
push
ret
or
sbbl
clc
jmp
mov
in
xlat
push
mov
mov
pop
xor
inc
cmp
stos
je
add
mov
sub
shlb
xchg
push
clc
in
mov
push
pop
push
cmp
imul
pop
pop
in
incl
adc
adc
xor
aad
insb
xchg
or
aad
iret
pushl
jae
push
xor
ja
cmp
jle
xchg
sahf
cmp
pop
sbb
dec
add
popa
test
mov
or
in
xor
loope
and
pop
decb
pop
fs
std
ja
cbtw
pop
jb
xorb
push
ret
mov
and
mov
cwtl
sbbb
push
cmp
or
daa
sbb
add
push
adc
lret
flds
subb
sbb
xchg
repnz
gs
mull
stos
adc
jns
jne
and
push
xor
fdivp
and
xchg
mov
pop
lods
movsb
xor
and
outsb
out
jg
inc
push
aas
je
xchg
mov
icebp
outsl
cmpsb
jge
adc
mov
xor
arpl
cmpl
mov
pop
jmp
popa
sti
push
in
pop
cmp
xchg
repnz
out
push
push
xchg
adc
add
aaa
das
push
subb
jb
sub
cs
mov
imul
xorb
and
in
add
dec
mov
mov
mov
lahf
movl
mov
rclb
xchg
inc
mov
xchg
aaa
sub
push
andl
sbb
fisubl
test
pushf
shlb
ljmp
shrl
je
and
adc
dec
mov
out
pop
pop
jp
ds
iret
jo
dec
mov
rcll
mov
rcrb
shlb
cmp
hlt
scas
sbb
repz
xor
push
jg
push
lahf
mov
push
mov
jnp
sub
cmp
das
sbb
test
cmp
outsl
ljmp
xchg
insl
xchg
scas
sahf
dec
jge
cmp
xchg
jbe
aaa
xchg
fstpt
xor
adc
adc
mov
ds
inc
sbb
in
pop
push
incl
js
push
fidivrs
stc
daa
clc
imul
push
xchg
push
test
jg
mov
daa
xlat
push
pop
test
pop
popf
out
jp
arpl
lret
mov
inc
adc
sbb
pop
mov
fistps
enter
jbe
pop
lock
rcll
aad
adc
clc
fiaddl
or
xchg
fidivl
clc
sbb
lcall
inc
cmp
cmpsb
add
dec
subl
add
xor
mov
adc
outsl
sub
pop
jne
cmp
sub
mov
mov
pop
paddusb
mov
nop
dec
loop
in
add
cmpsb
push
mov
jmp
call
into
test
call
lcall
sbb
cmc
mov
insl
jnp
adc
push
gs
push
pop
push
adc
mov
and
test
mov
test
adc
push
jle
scas
jge
mov
inc
push
jae
loopne
jl
inc
mov
pusha
dec
ds
sarl
push
push
mov
stos
add
mov
add
mov
jnp
inc
jle
sub
andb
mov
cltd
cmp
dec
insb
call
mov
arpl
dec
inc
shrb
mov
jg
pop
xchg
imul
mov
cmp
aad
cmp
push
hlt
mov
or
ss
ret
pop
fwait
gs
mov
mov
and
inc
cmp
push
jl
mull
mov
sbb
lret
paddq
cli
jno
call
add
gs
ret
and
jge
stos
inc
stos
and
sub
jge
lret
push
les
daa
mov
aas
lret
mov
mov
mov
xchg
mov
out
mov
in
dec
and
sbb
push
aad
adc
dec
mov
pop
dec
scas
popf
cmp
and
dec
cmp
sub
ret
imul
jecxz
adc
xchg
mov
jns
dec
cmp
or
xor
mov
lea
push
jne
sbb
arpl
test
loop
ficoms
repnz
bound
sbb
push
repz
mov
mov
lock
lods
adcb
sub
jmp
push
push
int
aaa
stos
movsb
fadds
push
cs
nop
je
mov
fisttpll
repz
push
scas
push
cmovge
mov
popf
mov
int
jnp
lods
shrl
pop
adc
mov
and
insb
mov
shl
icebp
in
jmp
mov
rclb
clc
push
and
sahf
stos
or
popa
dec
inc
push
ds
fsubl
xchg
xchg
pushf
decl
in
mov
imul
dec
cwtl
shrb
and
popf
enter
jge
xchg
pop
bound
and
sbb
mov
mov
pop
mov
and
cmp
lret
es
mov
punpckldq
stos
lds
icebp
mov
xor
jecxz
adc
or
insl
out
int
dec
cmpsl
fbld
imul
push
push
mov
repz
lods
aaa
aam
arpl
test
popf
ja
imul
or
gs
push
xchg
repz
stc
adc
iret
lock
push
mov
mov
insl
sbb
lods
mov
cmp
xchg
out
into
test
ret
fisubs
test
sbb
sti
pop
mov
cmpsb
leave
mov
hlt
iret
cld
or
mov
fsubrp
or
push
dec
and
inc
arpl
xor
lret
arpl
jbe
jne
pop
jmp
cld
push
sarb
pop
adc
xchg
aas
mov
pop
push
mov
fstl
test
js
inc
lds
pop
jbe
lock
std
and
pushf
mov
pop
out
dec
arpl
cmp
scas
lret
gs
outsl
outsb
loopne
push
jae
test
in
mov
push
out
aaa
lds
push
xchg
lahf
mov
shll
push
xlat
pusha
data16
push
fmull
jge
stos
fistps
repz
aas
xor
inc
divl
wbinvd
pop
xchg
mov
jns
lods
add
ror
aad
sub
and
jb
cmp
clc
jecxz
cmp
or
cmpsb
xlat
jmp
dec
mov
mov
arpl
sub
mov
fidivl
mov
aam
inc
int3
fisubrs
mov
cmp
int
cmp
mov
mov
cmpl
mov
dec
adc
pop
inc
push
xor
jge
inc
jb
imul
push
test
adc
fs
out
cmp
jmp
mov
push
inc
mov
push
or
jecxz
call
xchg
cltd
clc
mov
or
pop
mov
inc
dec
loope
sbbl
jae
jl
mov
inc
test
xor
xchg
ja
test
outsb
cmp
jecxz
cli
movsl
nop
clc
jo
pop
jle
jmp
push
es
fdivs
push
out
jg
daa
out
push
pop
push
aam
fmuls
loope
sub
rcl
sub
fmuls
push
lds
xabort
and
out
xor
or
mov
lock
inc
dec
in
pusha
cs
dec
bnd
or
sbb
add
add
mov
ss
ljmp
out
dec
sub
std
std
outsl
addl
inc
ljmp
cltd
sbb
cmp
dec
lret
daa
je
xor
daa
jno
pop
ror
out
inc
lahf
scas
sbb
test
sbb
mov
loope
cmpsl
mov
mov
in
xor
and
xor
mov
daa
mov
xchg
push
cmp
mov
enter
out
ja
arpl
into
ds
outsb
das
ja
or
aad
ficoms
add
jne
int3
lea
sub
or
lahf
push
scas
jg
push
lods
insb
inc
out
jle
jnp
xchg
adc
dec
daa
jg
out
and
fstl
or
inc
push
jmp
pop
inc
dec
movsb
outsb
fucomip
and
jge
lods
repz
inc
repnz
pop
stos
jmp
cs
aaa
adc
cmp
push
mov
pop
push
or
add
jg
shrb
inc
adc
add
orb
add
sbb
pusha
test
xchg
out
aaa
push
in
pop
adc
andb
fcompl
and
mov
mov
mov
xchg
or
xchg
gs
xor
mov
push
jne
push
inc
stos
lods
push
and
jne
pop
subl
iret
out
negb
inc
data16
movsb
mov
gs
ret
test
repz
xor
ret
dec
pushw
test
mov
inc
in
ja
cltd
push
cmc
xor
testb
inc
mov
loope
fs
pop
dec
shl
xor
sbb
adc
outsl
dec
mov
into
adc
pop
popf
cmp
mov
mov
cmp
shrl
cmp
adc
pop
xor
mov
in
jmp
mov
into
aam
pop
pushf
xchg
jmp
cltd
idivb
mov
data16
ja
ds
and
push
movsb
test
ret
and
sub
roll
repnz
cmp
ret
sbb
mov
mov
jge
aas
pop
ret
xor
mov
add
dec
das
in
push
mov
lahf
jno
movsl
or
fstpt
jmp
aas
mov
shl
lahf
jne
imul
sbb
in
push
stc
lahf
lock
das
jmp
lock
cmp
sbb
add
out
daa
jmp
aad
cmp
pop
ss
aaa
mov
jp
mov
and
xor
popf
loop
mov
fildl
jbe
xor
leave
adc
xor
add
mov
or
mov
or
pop
negb
add
jle
adc
out
lea
adc
aaa
xchg
or
add
jecxz
adc
jle
push
ds
cmp
mov
mov
xor
mov
cmpsb
sbbl
jmp
popf
inc
xor
and
xor
pop
cmc
xor
ss
out
cmpsb
cmp
clc
out
xchg
mov
ret
cmpb
inc
pop
pop
adc
or
negb
jecxz
sub
jecxz
push
js
sub
or
sbb
pop
push
mov
cld
add
repz
xor
dec
neg
xchg
sti
bound
fldcw
push
aaa
in
mov
std
adc
fs
scas
mov
mov
movsb
mov
repz
mov
mov
sub
daa
dec
out
lods
lds
in
push
adc
inc
shrl
cltd
inc
mov
mov
or
cs
mov
mov
int3
insl
rorl
fsts
ret
mov
cwtl
out
push
icebp
nop
fldcw
inc
cld
addl
in
dec
pop
mov
add
test
loop
add
sbb
cli
mov
aaa
mov
stos
xchg
push
inc
mov
jns
dec
lods
ret
testb
add
adc
test
mov
lock
rorl
jnp
mov
out
xor
icebp
cmp
dec
sahf
cmp
inc
adc
jo
cs
orb
push
movsb
sbb
jle
int
lods
lea
sub
xor
dec
xor
lahf
mov
jnp
and
xchg
cmp
xor
into
sti
hlt
cmp
mov
sbb
jns
in
adc
aaa
inc
sub
adc
decb
leave
mov
mov
pop
nop
mov
jg
clc
shlb
mov
xor
hlt
jo
pushf
outsl
xchg
loope
push
popa
out
mov
sbb
out
push
lcall
in
or
scas
add
jge
fcmove
fsubrs
adc
cltd
cs
pop
dec
inc
out
test
cmp
jle
into
push
ja
jae
popa
push
pop
push
mov
inc
test
rcrb
shr
mov
test
into
mov
mov
test
push
and
jmp
cli
rcll
clc
and
mov
arpl
cmpsl
mov
daa
push
lods
adc
add
mov
or
dec
subb
call
cs
mov
imul
lret
aad
cwtl
ficoms
add
js
test
sbb
stos
jmp
sti
xchg
cmpsb
repz
aam
add
shrb
dec
loope
enter
dec
mov
or
lahf
inc
or
pop
xchg
es
pop
fisubs
addr16
int3
lea
and
insl
fistpl
shlb
cmc
dec
lds
inc
push
pop
cli
or
hlt
inc
inc
repz
pushf
data16
cs
add
jge
mov
ljmp
push
push
inc
cmp
std
sahf
lahf
mov
pop
hlt
push
xchg
dec
movsl
xchg
ljmp
test
shlb
mov
out
inc
mov
aas
loope
in
jb
jmp
or
mov
test
adc
cmpsb
or
push
pop
shr
sub
hlt
jo
ds
adc
sbb
mov
add
push
and
mov
out
js
test
pop
xor
sbb
ret
xchg
sub
jns
push
rorb
push
test
xor
jbe
jb
call
jge
mov
enter
pusha
arpl
push
popf
add
ds
and
jl
in
pop
mov
cld
mov
mov
cmpb
or
ret
push
lret
repnz
push
push
call
or
test
popf
gs
mov
pop
out
mov
cvttps2pi
aam
jmp
cli
iret
xchg
call
in
mov
stos
or
inc
cmp
or
mov
mov
pop
jge
sub
adc
ret
inc
inc
xor
dec
pop
cmp
inc
inc
rcrb
fs
iret
dec
sub
outsb
arpl
jbe
add
xor
mov
pop
inc
subl
and
mov
cmpsl
fxch
in
ljmp
and
xchg
sub
in
xchg
mov
ret
fucom
orl
and
cmc
sbb
xor
daa
sub
xchg
cmp
mov
into
aam
bnd
arpl
mov
les
mov
lea
std
xchg
out
xchg
mov
inc
sbb
leave
loop
iret
dec
push
idivb
aas
xchg
mov
or
negl
adc
imul
cmc
std
cld
repnz
dec
call
and
leave
aad
lret
mov
test
pop
cmp
and
into
xchg
aad
stos
inc
mov
call
jae
jp
jecxz
xchg
mov
addr16
ss
xchg
pushfw
adc
jae
sbb
lret
aas
pop
das
out
in
ret
pop
outsl
das
fdivrl
cwtl
mov
es
push
jmp
mov
outsb
and
sub
arpl
or
ds
sbb
fxtract
cmp
inc
popf
pop
push
loop
ljmp
jle
daa
mov
xchg
imul
xchg
xor
jne
push
ljmp
stos
mov
cwtl
cmp
lods
test
shl
push
mov
neg
push
mov
test
pop
jnp
add
stos
push
cwtl
adc
pop
jecxz
dec
stos
pop
lahf
insb
pop
and
mov
shll
mov
sub
or
push
pushf
xor
pop
ret
cmp
test
repnz
fwait
cmp
sbb
loope
cmp
jp
lods
xor
xchg
add
mov
inc
mov
pop
sahf
movsb
movsb
adc
mov
loopne
adc
or
pop
inc
fcomp
push
sub
cmp
dec
lret
stc
push
cmpsb
pop
cmp
lcall
popa
insb
push
pop
shlb
lds
call
in
das
cltd
adc
add
cwtl
jg
int
addr16
cmovs
sarb
std
repz
sbb
dec
jle
data16
mov
testl
aad
xchg
mov
push
call
jg
xor
pop
test
ficompl
cmpsl
outsb
xchg
cmp
out
xchg
lret
mov
jno
lret
push
jle
ss
pushf
xchg
insb
je
sbb
movb
and
stos
int3
cmp
add
xchg
pandn
rolb
lret
ds
aas
cwtl
pusha
stos
ret
scas
ja
out
inc
rol
das
mov
xchg
xchg
cmp
dec
movsb
push
jnp
mov
pop
sbb
aam
stos
mov
mov
scas
mov
mov
mov
mov
icebp
or
fs
out
movsl
add
adc
cmp
xchg
adc
cmp
add
and
iret
push
test
test
add
nop
ret
into
mov
arpl
int
mov
insb
or
ficoms
adc
cmp
or
aaa
add
mov
lock
mov
xchg
movsl
xor
push
cli
cmp
ret
mov
xor
dec
cmpsl
pusha
nopl
imul
ret
or
pop
mov
fcmovnbe
rolb
cwtl
lret
iret
ss
mov
cmp
shlb
sarl
lahf
dec
mov
push
dec
fisubs
jecxz
sbb
into
imul
push
loop
xor
add
mov
xor
pop
imul
movsb
mov
andb
arpl
push
mov
pushf
and
adc
fisubs
mov
fs
ss
sub
mov
mov
popf
adc
jo
adc
cmp
rclb
fcoms
rolb
clc
push
rol
or
xchg
out
stos
sbb
popf
xchg
dec
cwtl
adc
fnstsw
jbe
jns
sub
sub
inc
loopne
sub
mov
cltd
or
ret
rcll
stc
je
dec
loop
out
dec
mov
fdivrs
dec
xchg
or
call
sahf
jp
xor
fldl
ret
scas
cmpsb
pop
xchg
adc
mov
push
jl
dec
dec
shll
pop
orl
les
les
call
ret
mov
pop
fwait
mov
mov
add
daa
aas
jne
adc
decb
stc
xlat
cwtl
inc
and
inc
repz
lahf
rorb
add
enter
inc
jb
mov
xor
jns
sub
pushf
ja
sub
pop
arpl
out
fcmovnu
out
jb
popa
add
push
or
sub
mov
push
push
enter
jle
loope
lret
push
jg
loop
mov
sub
pop
mov
cltd
ret
mov
mov
fdivrs
lahf
rorb
xchg
xorl
jge
and
jne
mov
mov
adc
pop
cmp
inc
ja
in
out
out
mov
cld
cli
negb
mov
dec
lahf
roll
inc
mov
addb
xchg
mov
mov
xchg
sub
daa
mov
cmpsl
outsl
add
ret
pop
je
cld
lods
mov
test
xchg
enter
push
push
inc
popf
push
sub
jge
push
rorl
bound
mov
aad
add
pop
xchg
add
pop
mov
aam
out
out
xchg
adc
adc
jns
jb
mov
mov
in
insb
incl
sbb
cmp
jge
lods
xchg
dec
xor
repz
sbb
cld
adc
mov
xchg
lret
andl
sub
mov
or
mov
mov
in
mov
mov
sarl
xchg
sub
mov
jns
fwait
lahf
inc
sub
mov
and
aas
add
rolb
ret
inc
sbb
xchg
sbb
out
sbb
pop
pop
jo
jl
mov
dec
mov
pushf
lds
rclb
in
xchg
xorl
lret
je
mov
lret
out
mov
fxch
jg
mov
or
dec
xor
push
shll
dec
shlb
into
mov
arpl
stc
push
icebp
aad
xor
mov
das
out
add
roll
adc
mov
lret
add
add
fwait
sub
sub
jg
or
loope
cltd
add
mov
clc
rolb
xlat
pop
iret
jl
jmp
sahf
mov
xor
leave
outsl
xchg
inc
lea
lea
std
sti
jns
clc
adc
mov
in
inc
lods
sub
ret
out
sbb
shlb
in
fisubl
mov
bound
ds
sub
and
add
arpl
adc
jb
inc
out
sub
out
sbb
sub
nop
lret
pop
pop
sub
pushf
and
das
sub
mov
sbb
mov
scas
ret
mov
push
loop
outsb
cmp
lods
ja
pop
cld
cwtl
xchg
add
nop
rorb
jns
sub
jns
jmp
leave
stos
dec
pop
repnz
jnp
fsubr
test
adc
clc
add
addl
inc
xchg
inc
cmpsl
out
cmp
movsl
insl
pop
add
insl
pop
nop
adc
push
cli
adc
stos
xchg
push
cwtl
mov
in
pop
xor
shrb
les
repz
push
stos
jo
loope
push
adc
rcrl
icebp
or
sub
sub
sbb
arpl
cli
dec
lods
enter
pop
inc
pushf
sub
jp
sbb
jge
ret
fcmovne
jnp
orl
insl
pop
and
sbb
sub
sbb
rorl
inc
dec
cmp
addb
cmp
add
mov
sti
cmpsb
add
mov
inc
scas
push
setl
mov
jae
fadd
ficomps
andb
xchg
jmp
cmpsl
inc
std
inc
mov
into
outsb
dec
sbb
jbe,pn
mov
mov
dec
in
call
hlt
or
jno
cmp
cmp
mov
mov
lock
roll
les
sbb
pop
xor
pop
mov
dec
enter
dec
add
hlt
push
jo
or
push
hlt
cmpsl
adc
xor
mov
mov
movsb
pop
mov
sub
mov
sbb
movsb
cmp
jp
jb
sub
cmp
inc
mov
aas
lock
jns
dec
add
xchg
adc
in
sar
lock
push
leave
in
cli
mov
sub
lods
and
clc
ret
inc
pop
incl
cmp
into
mov
int
mov
imul
or
mov
or
xorb
ja
and
fists
pop
les
fimull
out
or
cld
lretw
sub
bound
xchg
inc
icebp
add
shll
mov
cmc
scas
int3
fistpll
or
arpl
dec
scas
xchg
enter
xchg
pop
adc
adc
or
test
adc
mov
sbb
mov
in
dec
sub
mov
arpl
push
inc
test
mov
pop
add
mov
xor
mov
jmp
inc
dec
test
jmp
cmpsb
inc
mov
dec
mov
data16
dec
gs
push
push
imul
sbb
push
adc
xchg
mov
push
xchg
jp
add
scas
sub
bound
cmp
push
repnz
imull
movsl
out
inc
mov
and
movl
lcall
test
or
push
jp
andb
mov
and
sbb
jle
xchg
lods
add
mov
adc
movsl
or
sbb
push
jae
mov
adc
inc
cmp
mov
ljmp
je
cld
icebp
sub
sbb
xchg
xor
filds
test
adc
nop
ret
sbb
aad
les
push
cmp
imul
cmpsb
dec
xchg
lret
mov
mov
int3
clc
add
jmp
jmp
int
lret
bound
jp
sbbb
jg
aaa
shrl
mov
sub
rorb
xchg
fiaddl
fbstp
pop
inc
add
mov
gs
cwtl
pop
mov
fsubl
xorl
jecxz
je
loope
xor
fidivrl
add
cmp
cwtl
push
in
mov
mov
inc
pop
divl
mov
inc
mov
add
lea
jecxz
neg
sbb
jmp
jmp
jo
clc
inc
push
aam
aas
movsb
std
icebp
lret
xchg
push
pop
sub
mov
sub
mov
mov
loope
cmp
push
inc
shrw
mov
cmp
and
mov
call
loopne
icebp
dec
scas
add
daa
dec
shll
cmc
xor
stos
pop
xchg
lds
das
jbe
out
adc
jle
mov
and
cmp
inc
popf
sub
add
inc
jle
xor
pop
cli
mov
ds
fildl
icebp
shlb
test
dec
or
cmpsl
loopne
and
sub
popa
adc
in
jl
push
arpl
pusha
sub
insb
lock
xchg
and
jmp
add
lahf
and
ljmp
dec
pop
adc
mov
jmp
and
sub
mov
inc
inc
pushf
sbb
shl
push
xor
sbb
cmp
es
mov
gs
xchg
dec
pop
shlb
fwait
push
movsb
jo
mov
leave
repz
jecxz
loope
cmp
movsb
movsb
mov
push
iret
and
psubusw
in
add
dec
lcall
pop
clc
xchg
sbb
xchg
hlt
add
sub
cmp
ss
mov
push
or
iret
xchg
aas
cli
mov
pop
idivb
loope
mov
push
lea
scas
lahf
andb
arpl
adc
jns
jb
leave
push
sub
into
ss
popa
jmp
scas
adc
scas
mov
in
cs
mov
jo
pushf
jbe
dec
inc
lret
dec
aas
jnp
cld
inc
pop
stos
dec
xorb
mov
sub
pop
scas
jno
xchg
cld
out
push
jb
sbb
sbb
cmpsl
clc
jnp
push
lock
out
out
or
and
fdiv
test
jmp
sbb
inc
push
adc
in
inc
or
sbb
loopne
cwtl
ds
and
sbbb
pop
mov
xchg
inc
inc
ja
inc
add
jae
pop
add
mov
insl
daa
push
pop
pop
hlt
out
xor
mov
cmp
inc
or
inc
dec
in
xchg
inc
imul
pop
pop
jo
hlt
hlt
jnp
and
add
ret
lock
ds
mov
xchg
aad
jge
out
mov
cmp
sbb
lea
adc
mov
mov
push
sbb
fadd
sub
sub
ror
divb
je
pop
stos
ljmp
adc
push
jge
mov
push
pop
adc
adc
cmc
das
mov
xor
in
push
xchg
or
mov
mov
mov
shrl
loope
jae
test
xchg
xor
orl
sbb
outsb
add
addl
and
or
mov
arpl
scas
cmp
lcall
in
inc
stos
arpl
push
mov
lds
ljmp
xor
icebp
mov
inc
fcmovnb
adc
test
add
xor
pop
movsl
mov
push
dec
cmp
mov
lods
sbb
mov
sahf
jmp
cmc
lock
icebp
out
call
aas
aas
add
jns
mov
sub
addr16
jno
lods
adc
rorb
jmp
pop
jae
pop
es
enter
push
stos
sbb
inc
cmp
xchg
sub
outsl
ljmp
or
push
imul
test
sbb
out
fpatan
mov
int3
icebp
jbe
enter
xchg
and
in
lea
mov
loop
push
push
mov
int
mov
insb
push
mov
push
mov
loopne
sbb
sbb
and
out
cmpsl
sbb
repz
xchg
daa
ret
adc
movsl
inc
jns
hlt
dec
cmc
sbb
jnp
pop
jmp
xchg
xchg
movsb
pop
in
cli
push
inc
fs
or
repz
xchg
loopne
pop
jno
mov
mov
jns
repnz
cmpsb
dec
push
adc
adc
mov
int3
es
xor
or
mov
popf
sahf
lods
enter
lock
movsb
leave
xor
mov
mov
xor
call
and
clc
push
mull
push
test
mov
dec
mov
pushf
or
or
mov
push
daa
sbb
adc
arpl
lds
mov
insl
aaa
or
sbb
dec
aam
jp
add
inc
lcall
jne
push
xor
shrl
jbe
jg
push
push
or
rorb
add
inc
cltd
dec
adc
leave
fldt
in
mov
das
dec
or
notl
scas
mov
je
and
cli
aad
out
xchg
or
jb
push
jg
btc
leave
test
stc
mov
subl
jno
pop
mov
testb
mov
adc
adc
sbb
lcall
gs
test
pop
movsb
xchg
xor
iret
movsb
mov
adc
cmp
sti
call
pop
cmpsl
jbe
push
in
pusha
arpl
mov
or
push
rcrb
test
pop
jl
and
jno
movsb
xchg
jmp
xchg
fildl
mov
int3
jbe
sbb
push
sbb
push
sti
sar
data16
subb
mov
outsb
aas
mov
sbb
mov
aas
mov
lods
inc
inc
loope
sbb
cmp
push
popf
jl
xchg
and
mov
adc
cltd
fsts
mov
leave
popa
rcl
inc
pop
xor
sahf
dec
cltd
popa
and
push
mov
pop
mov
mul
jge
in
lcall
sbb
cmpsl
cwtl
ret
pop
pop
cmp
push
data16
scas
push
loop
int3
sub
adc
push
js
fldl
gs
nop
add
mov
or
jmp
lea
aam
call
es
je
sbb
iret
subl
scas
mov
inc
push
cmp
mov
daa
mov
nop
rclb
push
cmp
movsl
push
inc
clc
loop
loope
pop
mov
cmpl
xchg
subb
cmp
std
mov
or
cmp
clc
mov
sub
aas
addb
push
outsb
xchg
outsl
das
scas
jg
mov
mov
push
cs
cwtl
push
test
cmp
jne
fs
jbe
lds
iret
leave
inc
pop
push
pop
mov
scas
or
push
mov
and
push
ja
mov
xlat
clc
adc
leave
out
mov
mov
mov
shll
sti
insl
call
call
add
mov
cs
rcll
es
roll
pusha
cmpsl
push
pop
push
pop
add
lcall
fdivrl
xlat
call
popf
pop
in
into
imul
jg
faddl
xchg
fwait
fwait
xchg
jno
mov
ljmp
cmpsb
xlat
mov
cli
leave
loop
out
sahf
mov
cmp
in
add
xorb
mov
xlat
inc
pop
inc
scas
shll
or
xchg
mov
mov
or
inc
jge
xchg
dec
int
pop
and
xor
pop
pusha
in
loope
cmc
ja
aas
in
jp
dec
test
dec
dec
or
mov
shrb
dec
or
push
out
idivb
enter
andl
movsl
push
gs
flds
and
xor
cmc
pmulhw
or
xacquire
or
sbbb
inc
jp
lods
mov
push
loopne
lahf
mov
mov
push
test
pop
mov
dec
rcrl
jo
mov
test
mov
stc
sbb
xor
push
adc
sbb
mov
mov
cmpsl
xchg
in
push
cmp
push
mov
fimull
fwait
sbb
push
pusha
sbb
mov
jns
test
fistpl
dec
in
or
imul
sub
loopne
cmp
addb
push
xor
xchg
xor
loopne
iret
test
xor
mov
push
loop
fnstsw
mov
addr16
and
aad
xor
lret
mov
inc
nop
mov
dec
and
jg
mov
and
pop
lea
xchg
mov
sbb
push
inc
pop
and
inc
pop
rcll
mov
add
cmc
cwtl
out
movsb
jns
adc
mov
lret
or
outsb
inc
fs
dec
cmp
dec
cmpsb
jo
rol
mov
mov
and
fmull
out
mov
sub
rorl
fsubp
xlat
imul
ret
jecxz
xchg
sar
ss
nop
fs
out
nop
or
adc
dec
lahf
xchg
push
inc
and
jbe
dec
jno
in
cmpb
int3
cs
xchg
mov
adc
rol
or
fildll
adc
test
sar
out
movsb
cmp
mov
rorl
mov
push
sbbl
enter
or
call
mov
lret
fisubrs
cmp
scas
sub
and
ror
push
push
ja
dec
sbb
insl
lock
xchg
js
jg
sub
test
xchg
inc
rolb
mov
fstpt
lret
adc
aaa
lock
cld
pop
mov
mov
call
or
add
mov
jns
xchg
int3
and
dec
insb
cmp
xchg
jmp
xor
xchg
jl
and
insb
xchg
mov
jmp
xchg
and
fwait
jne
filds
adc
outsl
lods
stos
mov
mov
leave
push
mov
xor
pop
push
mov
xor
cltd
and
int
mov
lcall
mov
divl
sbbb
sub
rcl
movsl
pushf
shlb
pop
and
movsl
mov
mov
test
cmp
mov
and
daa
and
lods
pop
movb
and
sbb
hlt
test
sub
and
rcr
shl
sub
jno
cmp
test
sahf
stos
mov
int
shll
cltd
pop
or
xor
push
mov
mov
sub
mov
or
dec
scas
iret
mov
adc
xchg
rorb
xor
mov
pop
sbb
in
mov
cmp
ss
gs
sbb
adc
inc
mov
decb
test
dec
test
imul
xchg
dec
adc
mov
lods
lods
inc
repnz
mov
mov
sbb
lret
andb
jmp
leave
int
and
aad
ret
pop
and
pop
jmp
mov
and
data16
xchg
shrl
movsl
cmpsl
test
jl
inc
mov
daa
leave
add
xchg
xor
movb
jnp
mov
inc
push
or
jno
pusha
inc
sub
in
dec
dec
cmp
sbbb
mov
bnd
out
pop
xor
out
xchg
xchg
shll
leave
test
and
pop
out
out
insl
and
add
cld
insb
dec
push
cmp
addr16
mov
jae
pusha
inc
scas
xchg
and
fdivr
sub
scas
dec
sub
jmp
add
xor
pop
xchg
data16
ror
xchg
cmpsl
lcall
mov
sub
jmp
push
push
sbb
add
call
xchg
stos
cli
ffree
sub
and
xchg
xor
mov
aas
stos
or
test
icebp
repnz
les
add
fldcw
movsl
mov
adc
icebp
test
dec
lcall
loop
aas
pop
icebp
into
xor
enter
mov
cltd
into
andl
pop
arpl
add
mov
lods
pop
mov
int3
pop
adc
movsb
fsts
sbb
add
ss
divb
pop
xor
sub
pop
adc
repnz
cmp
popa
test
aam
rolb
std
ljmp
sub
sub
jge
add
dec
mov
mov
inc
std
notw
sbb
inc
add
cltd
fsubl
push
cld
inc
inc
pop
dec
div
cmp
sbb
ficompl
cmp
sbb
dec
dec
or
outsl
jge
xchg
mov
cmpsl
stos
movsl
repnz
sub
je
orl
adc
movsl
movsb
xchg
lock
or
pop
push
pop
fcompl
mov
sbb
push
movsb
sub
lods
out
test
aam
or
pop
out
std
jg
in
addb
vsqrtps
les
jae
das
into
push
dec
sub
adc
xor
enter
fwait
das
and
or
in
push
mov
lods
scas
cs
add
or
out
add
fwait
insl
cld
add
jae
mov
push
push
and
mov
xor
mov
out
mov
outsb
mov
dec
pop
shl
pop
push
mov
fmuls
ja
push
repnz
sbb
jecxz
adc
pop
int
push
sub
fnstsw
stc
mov
test
cmpsb
mov
inc
add
or
jno
cs
ret
pop
mov
push
sub
cltd
outsl
cmp
pop
mov
mov
cmc
je
mov
lahf
xchg
jo
loop
jnp
in
jmp
cmc
iret
and
cli
adc
pop
xor
cmc
stos
and
addl
dec
clc
mov
dec
dec
push
xor
sub
mov
mov
cmp
dec
push
rcll
cmp
ret
jl
jg
mov
adc
rcrl
add
push
or
pop
jmp
or
adc
push
mov
cltd
and
shrl
jle
or
mov
stos
pop
out
pcmpgtb
push
pop
out
stc
imul
iret
push
push
and
orl
in
lcall
scas
sub
xor
movsl
lea
inc
aam
or
mov
ljmp
cmp
sbb
sahf
icebp
popf
xchg
and
test
adc
dec
dec
sub
fmulp
add
movl
add
addr16
movb
cmpsb
jmp
cmp
ffree
mov
sub
icebp
lods
jo
outsb
pop
adc
inc
sub
pop
push
xlat
js
push
call
push
ss
test
push
fdivr
or
adcl
pop
or
mov
into
jno
adc
push
xchg
sbb
lock
jecxz
mov
mov
mov
dec
clc
or
lods
imul
or
cmp
es
lcall
xchg
scas
fdivrs
mov
xchg
loop
inc
hlt
cmpsb
adc
stos
popa
dec
mov
xchg
loop
ret
mov
sub
push
jns
setne
dec
sbb
pop
call
in
push
push
in
or
xchg
sub
leave
ljmp
fwait
jno
jae
testb
push
pop
loope
shl
shll
or
push
push
push
sbb
or
outsl
ja
xor
das
sub
mov
mov
xor
sbb
jl
in
repz
sbb
int3
dec
cmp
push
jb
lds
inc
cmp
loope
xchg
push
std
repz
repz
enter
xchg
pushf
lock
arpl
int3
js
inc
cmp
test
or
push
push
out
dec
mov
stos
jb
xchg
fisubrs
out
roll
pop
cmp
leave
add
ds
ss
xchg
mov
shll
jae
pop
sbb
mov
mov
in
sub
imul
movsb
sbbl
sbb
aam
pop
xchg
arpl
xor
subl
mov
mov
or
out
dec
adcb
push
xchg
popa
pop
in
fcmovne
xor
push
sbb
xchg
rolb
push
xor
loop
sbb
jl
adc
add
push
enter
pop
in
pop
pop
andb
xchg
scas
push
daa
clc
pop
cli
pop
in
mov
jne
mov
mov
hlt
xchg
mulb
ss
ss
or
adc
xor
daa
jo
pop
imul
int
push
add
push
ja
jg
addr16
xchg
mov
fstpl
lock
inc
leave
icebp
leave
sbb
imul
jnp
divps
mov
xchg
sbb
sub
pop
jle
outsl
xor
int3
repnz
jae
addr16
inc
push
mov
jne
aad
imul
cmpsb
jg
or
or
pop
loopne
icebp
cli
arpl
enter
dec
add
and
fs
repnz
pop
je
mov
sub
push
mov
std
sahf
mov
pop
fidivs
das
pop
pusha
xor
pop
jle
mov
insb
xchg
int
pop
imul
mov
icebp
cmpsb
lea
fs
push
subl
std
push
pop
mov
call
push
cmpsl
jmp
mov
mov
inc
clc
jl
nop
rolb
in
mov
fistpl
push
aam
stos
repnz
add
jbe
aam
pop
cli
out
jmp
sub
sub
sti
bound
jl
push
leave
mov
mov
adc
lods
ss
or
fsts
repnz
pop
push
into
out
jge
lret
repz
dec
xchg
lcall
mov
out
pop
scas
repnz
lods
add
enter
push
ss
add
adc
mov
std
popa
outsb
icebp
je
jb
adcb
test
aad
jno
push
lahf
sbb
rcll
aad
inc
mov
lds
aaa
mov
or
lock
add
add
sbb
mov
lea
test
inc
mov
inc
xor
mov
push
out
mov
dec
pop
imul
cltd
outsb
or
adc
xor
add
mov
cwtl
je,pn
movsl
pop
std
outsl
cmc
rdpmc
inc
mov
or
data16
xlat
sahf
inc
pop
fistl
aad
xchg
mov
and
adc
mov
popa
xchg
pop
add
sbb
fwait
sub
mov
rcrb
inc
out
cli
fcomip
pushf
inc
mov
out
add
sbb
cmp
xchg
cmp
in
stc
bound
imulb
inc
sbb
daa
xchg
pop
inc
sub
xchg
test
aam
mov
add
loop
lret
adc
and
inc
andl
adc
add
pop
xor
xor
xchg
add
adc
add
popa
xor
jno
jns
xorl
