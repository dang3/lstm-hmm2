xchg
shll
pusha
paddw
pusha
test
aad
xor
inc
out
inc
into
jge
push
cmp
repz
adc
ljmp
dec
or
mov
inc
and
scas
fwait
adc
scas
pushf
test
push
mov
or
loop
pop
push
push
push
mov
push
scas
aaa
jmp
xchg
test
and
je
pop
cltd
mov
ja
popa
adc
mov
cs
mov
cli
dec
fcompl
jmp
scas
inc
and
into
scas
pop
out
sahf
inc
iret
fs
shll
imul
mov
imul
cmp
xchg
ficompl
jb
sub
jne
movsb
test
add
fmuls
pop
or
lret
stos
test
xchg
popf
jmp
push
loope
xchg
test
mov
into
xchg
out
inc
adc
mov
add
aas
out
push
xchg
jae
add
int3
jns
aam
mov
call
jl
xchg
jmp
negl
jp
es
mov
or
add
in
sub
or
out
into
dec
mov
cltd
mov
pop
sbbb
xor
aad
lret
outsl
scas
xor
dec
popa
es
cmp
jmp
mov
test
inc
nop
rclb
dec
push
xor
into
adcb
movl
or
xor
decl
push
ret
shlb
in
cltd
jl
lods
sub
add
mov
and
orb
mov
das
add
in
inc
fstp
cmc
into
push
les
push
repnz
nopl
add
cli
pop
mov
rcrl
or
test
dec
inc
xor
xchg
in
inc
add
mov
fyl2x
push
js
out
mov
xor
lods
lret
data16
in
jmp
add
in
out
push
sbb
push
out
cli
adc
xor
out
jle
and
sub
addb
mov
or
repz
push
mov
dec
insl
pop
movsb
fxch
daa
xchg
in
push
lahf
or
dec
cmp
mov
imul
iret
pushf
lods
push
repnz
xchg
push
adc
out
dec
out
push
push
pop
inc
js
jo
cmp
mov
pop
mov
test
pop
mov
imul
xchg
and
pop
jp
push
scas
das
adc
movsl
inc
cmc
dec
mov
rclb
std
inc
add
les
popa
mov
stos
or
mov
sbb
xor
in
jge
or
fs
or
subb
out
adc
sbb
jns
jb
pop
mov
out
iret
dec
pop
adc
xchg
cs
shrb
pop
repnz
ds
lret
sub
push
dec
or
cs
add
subl
push
and
popa
lods
out
mov
das
rcl
dec
scas
repz
mov
adc
pop
inc
push
adc
out
sub
push
jo
outsb
ds
pop
mov
cs
jg
pop
xchg
arpl
imulb
inc
in
jb
ljmp
pop
repnz
lock
mov
mov
fnstenvs
daa
mov
push
lret
outsl
je
out
add
jno
out
inc
popa
in
sub
mov
sub
fwait
jae
cwtl
jecxz
jg
pop
int
lds
adc
mov
into
adc
xchg
mov
add
sbb
mov
loope
pop
mov
mov
mov
inc
cmp
hlt
imul
mov
dec
inc
aaa
mov
jns
sbb
or
out
mov
pop
pop
cmp
out
in
push
rclb
cmc
xchg
and
fistpl
sbb
and
dec
adc
mov
pop
imul
xchg
push
sub
adc
mov
call
mov
xchg
xor
sbb
sbb
ss
lcall
test
mov
push
pop
sub
or
sbb
mov
gs
xor
in
xchg
push
mov
jp
mov
addr16
enter
sbb
pop
insl
dec
add
scas
pop
test
mov
hlt
or
dec
dec
dec
clc
orl
pop
cmpsb
mov
cmpsb
xchg
mov
cmp
ret
lods
bound
jo
sub
push
aaa
push
jl
test
jecxz
ret
cld
das
pop
xorl
pop
lods
in
mov
in
insl
insb
data16
inc
lods
cld
mov
adc
inc
sub
sti
xor
test
inc
cli
in
jp
xor
loop
clc
shll
subl
and
mov
mov
js
sbb
adc
jmp
js
insl
pop
mov
sbb
in
pop
mov
test
pop
mov
ja
fwait
test
rcrl
ja
jmp
add
xor
and
and
adc
mov
pop
leave
jle
adc
test
and
sarl
lea
movsb
lods
cs
mov
dec
or
jae
xchg
and
xadd
cmpl
int3
rep
test
pop
leave
jge
push
mov
jp
xchg
insl
push
dec
pop
adc
mov
or
rol
out
xchg
aad
push
sbb
cld
ret
stos
test
ret
cli
push
mov
mov
scas
jno
add
aam
and
aad
pop
pop
bound
lcall
add
push
enter
rcll
pop
xor
stos
inc
scas
jo
jae
scas
gs
sub
fldcw
dec
pop
jbe
xchg
push
xor
in
insl
adc
std
xor
mov
outsb
xor
stos
test
cmp
dec
mov
jb
adc
jae
js
dec
addr16
stc
add
cmp
pop
in
cld
test
fdivs
mov
cs
imul
pop
fbstp
popa
xor
dec
sub
shrb
stos
xchg
inc
pop
js
sbb
shrb
inc
push
jle
mov
pop
insb
and
cltd
mov
xor
jg
jne
or
pop
insl
xor
cltd
xor
push
jo
inc
stos
xchg
cs
cmp
das
fisubl
adc
xor
inc
sti
mov
dec
jmp
push
cmc
movsl
mov
ds
push
icebp
pushf
shr
xchg
cld
jno
mov
push
lahf
dec
pop
call
inc
sahf
outsl
js
call
xor
into
clc
pop
cmp
xchg
jnp
sbbb
flds
and
jp
js
shl
in
and
mov
aad
cmp
mov
lods
in
imul
out
cmp
flds
das
inc
and
push
not
mov
scas
je
dec
ficomps
jbe
aas
jb
xor
or
out
xor
fs
repnz
lods
nop
push
xchg
in
jo
ret
mov
movsb
inc
mov
jb
idivl
add
test
dec
pop
sub
xchg
cwtl
add
lock
mov
shrb
sbb
mov
out
gs
and
push
nop
lods
jnp
xlat
jae
ret
sub
popa
or
loop
out
dec
jne
sbb
loopne
cld
in
inc
aaa
rolb
jne
sbbl
test
filds
jmp
mov
xor
xchg
test
fcoml
xchg
push
call
daa
insl
pop
dec
js
dec
jne
sbb
aaa
pop
cmpsb
mov
push
dec
xchg
aad
notl
jmp
jle
das
jge
and
call
outsb
xor
shlb
iret
pop
cmpsb
push
hlt
movsl
insb
fmull
pop
ret
lods
xor
add
jmp
imul
and
nop
stos
pop
mov
mov
rorl
fs
or
movsb
xchg
jno
sub
jns
lods
popf
mov
dec
or
sbb
fld
sub
mov
jp
adc
and
imul
test
cld
push
aaa
fiadds
or
sbb
add
inc
enter
mov
inc
sbb
aam
fs
int
aas
jns
popa
push
lcall
hlt
sar
dec
insb
mov
clc
in
fimuls
mov
pshufw
lods
sbb
loope
add
ss
dec
mov
mov
cmpsb
jns
sub
bound
mov
sbb
inc
push
sub
pop
xchg
movb
stc
dec
outsb
or
xchg
push
fs
push
dec
xorl
jg
ja
jp
in
mov
mov
jmp
mov
dec
inc
les
ja
test
nop
adc
and
adcl
push
pop
inc
and
mov
pop
aad
push
mov
ds
cs
mov
pop
sub
cmpl
insb
dec
rcl
mov
sub
sbb
loope
loop
popf
jns
mov
je
bound
add
xor
insl
xchg
mov
cwtl
test
rorl
fadds
pop
lods
mov
pop
jns
stos
adc
fisttpll
mov
icebp
test
out
iret
test
mov
xor
add
leave
pmaddwd
inc
pop
pop
jecxz
inc
add
into
push
cmpb
cmp
sub
push
cmovp
sbb
jle
pop
push
repnz
js
jb
push
outsb
ja
dec
nop
loopne
pop
mov
mov
pop
push
jb
mov
addr16
xchg
xchg
fiaddl
or
and
jmp
or
test
rcl
addr16
test
rcr
clc
daa
lret
ja
push
mov
sbb
loopne
icebp
shlb
mov
mulb
mov
jns
add
loope
dec
in
sub
lock
into
xor
xchg
push
and
loopne
mov
call
shlb
and
hlt
xchg
adc
arpl
pop
mov
sub
mov
adc
cmp
test
outsb
movl
aam
data16
scas
sbb
jb
es
xor
mov
xor
mov
enter
clc
sbb
subl
jns
fnstcw
mov
ficoms
jmp
mov
push
mov
sub
lea
call
sub
add
call
mov
push
mov
call
mov
dec
inc
add
or
call
lea
inc
inc
add
dec
and
and
inc
dec
imul
lea
and
mov
call
inc
add
dec
movsbl
inc
call
lea
dec
call
imul
lea
sub
inc
mov
dec
inc
add
lea
pop
inc
mov
mov
add
movsbl
pop
lea
imul
pop
mov
and
dec
dec
pop
lea
inc
lea
dec
imul
dec
inc
inc
pop
xor
and
pop
movsbl
mov
mov
mov
inc
call
or
lea
imul
lea
ret
mov
mov
push
mov
mov
push
inc
mov
push
inc
dec
push
inc
add
push
imul
add
mov
mov
mov
push
inc
ret
push
dec
imul
xor
inc
inc
imul
inc
push
mov
lea
inc
call
pop
ret
jmp
dec
movzbl
and
mov
add
add
lea
and
mov
add
movzbl
dec
sub
xchg
mov
dec
mov
dec
xor
dec
mov
dec
mov
inc
sub
dec
dec
jne
sub
mov
imul
mov
pop
mov
inc
pop
mov
inc
pop
movsbl
mov
add
mov
inc
inc
imul
lea
inc
inc
mov
add
ret
push
push
inc
lea
push
mov
dec
dec
mov
dec
inc
push
lea
xor
lea
lea
push
lea
add
mov
lea
dec
mov
mov
push
mov
mov
inc
push
lea
movzwl
xor
mov
add
push
mov
lea
push
dec
imul
pushl
add
call
dec
add
mov
dec
inc
inc
inc
inc
lea
pop
ret
inc
add
inc
and
lea
mov
inc
dec
imul
dec
cmp
jb
dec
xor
mov
lea
add
mov
dec
add
inc
inc
sub
inc
dec
sub
mov
dec
movzbl
cmp
jb
imul
pop
sub
or
dec
dec
dec
inc
sub
inc
lea
sub
mov
sub
mov
xor
or
xor
xor
xor
inc
mov
inc
sub
test
jbe
add
lea
add
mov
imul
inc
lea
dec
dec
sub
dec
and
inc
mov
mov
add
lea
movzbl
mov
lea
add
mov
and
add
mov
mov
and
inc
mov
add
imul
mov
mov
mov
mov
and
add
dec
mov
sub
dec
dec
jne
inc
mov
add
inc
mov
sub
mov
add
inc
dec
lea
movzwl
mov
lea
inc
add
sub
dec
mov
lea
inc
mov
dec
xor
test
jbe
inc
mov
mov
mov
mov
mov
mov
movzbl
mov
lea
dec
inc
imul
add
dec
inc
imul
lea
add
add
inc
mov
and
xor
lea
mov
mov
imul
movzbl
mov
sub
add
mov
lea
and
dec
mov
mov
dec
inc
movzbl
add
dec
mov
inc
movzwl
mov
lea
jmp
push
mov
mov
or
add
and
sub
add
dec
mov
mov
sub
dec
mov
imul
mov
imul
movzbl
mov
and
movzbl
sub
dec
sub
lea
add
lea
add
inc
mov
xor
movswl
sub
inc
xor
sub
movzbl
inc
xor
imul
cmp
je
add
mov
inc
push
dec
inc
movsbl
imul
add
add
sub
sub
dec
inc
dec
and
sub
and
mov
mov
inc
add
add
mov
mov
inc
mov
add
mov
lea
mov
lea
sub
xor
sub
dec
inc
imul
or
call
call
dec
dec
xor
inc
imul
inc
inc
ret
mov
or
pop
and
ret
push
inc
mov
mov
mov
mov
push
lea
sub
push
inc
push
dec
push
dec
add
mov
sub
inc
call
dec
push
lea
dec
xor
add
sub
sub
neg
inc
mov
inc
sub
mov
inc
mov
xor
inc
mov
imul
mov
inc
add
mov
dec
je
or
dec
movsbl
mov
imul
sub
mov
xor
jmp
mov
mov
sub
repnz
xor
dec
add
and
jmp
xor
mov
add
mov
lea
dec
movzbl
xor
mov
mov
inc
lea
inc
lea
inc
movzbl
pop
pop
ret
push
lea
mov
movswl
add
xor
add
dec
sub
mov
add
mov
add
add
add
sub
dec
dec
mov
mov
sub
mov
mov
and
add
inc
and
imul
pop
ret
sub
movzwl
mov
mov
imul
mov
imul
mov
mov
lea
mov
mov
lea
add
xor
inc
inc
mov
add
mov
inc
add
lea
add
add
sub
dec
cmp
jb
lea
push
dec
or
push
movzbl
or
push
mov
mov
xor
or
sub
xor
dec
dec
xor
mov
movzwl
push
add
mov
mov
or
inc
xor
inc
sub
mov
dec
mov
imul
sub
movzbl
inc
imul
add
dec
add
add
sub
add
dec
add
movzbl
movsbl
imul
dec
sub
inc
jmp
xchg
push
lock
mov
flds
inc
jo
in
push
mov
inc
stc
or
in
pusha
sti
push
out
add
pushf
in
adc
mov
negl
cmpl
lea
cmpsl
pop
lods
inc
jae
mov
jmp
adc
cmpsb
cmp
movsl
ljmp
pushf
addb
sub
mov
sbb
fisubl
mov
repz
jae
mov
pop
push
inc
jnp
inc
cmc
cmpsl
lds
fcomi
je
jb
xor
jo
je
jmp
fidivrs
mov
pop
push
lcall
mov
add
cmpsb
call
mov
push
loop
dec
je
add
cmp
mov
dec
sub
bound
scas
push
cmc
stc
pop
dec
test
xor
add
mov
mov
jbe
pop
roll
mov
or
push
and
gs
sbb
cmp
ret
or
stos
lock
sub
loopne
iret
jae
imul
out
mov
in
jl
xchg
ret
xchg
inc
add
mov
mov
out
popa
pop
push
pop
fwait
cli
push
out
push
roll
inc
test
cmpsl
mov
mov
insl
add
lret
xor
dec
inc
lods
lds
js
or
shrl
sbb
dec
ret
movsl
pop
in
cmc
pop
xor
pop
pop
add
mov
fldenv
dec
loopne
pop
sbb
inc
and
xchg
std
clc
ret
sbb
in
pop
push
hlt
and
sbb
rclb
jnp
lds
push
xchg
cli
add
pop
lds
push
stos
jbe
pop
dec
pxor
sti
fisttpl
idivl
pop
ffree
lret
sub
jnp
push
mov
inc
clc
icebp
sub
ss
icebp
mov
or
lods
call
aam
mov
loop
in
add
icebp
xchg
xchg
loopne
leave
clc
in
mov
gs
rolb
aam
and
dec
xchg
lahf
mov
js
lret
minps
nop
sahf
loope
cmp
lcall
testl
add
shr
jbe
out
pop
xchg
cwtl
fucom
xchg
and
jns
dec
cmpsb
adc
jecxz
repz
movsl
dec
ss
imul
ret
lods
push
dec
icebp
add
jmp
xchg
jne
call
or
dec
outsl
xchg
cwtl
jp
shlb
lahf
lcall
fidivs
mov
sbb
push
mov
das
data16
sub
pop
popf
mov
bnd
data16
add
or
out
gs
xor
mov
lods
xchg
pop
mov
mov
push
xor
dec
xchg
sub
inc
xchg
cmpsb
aas
lods
jo
add
pop
aaa
pop
test
bound
out
outsl
pusha
inc
mov
pop
add
repz
call
cmp
xor
addb
xchg
rcll
adc
shlb
out
out
jmp
mov
out
push
xor
jecxz
lahf
aas
ja
adc
aas
mov
rcl
fidivl
mov
adc
mov
jo
imul
popf
sbb
xchg
scas
xor
leave
int
aaa
sub
mov
clc
xor
call
icebp
enter
sbb
mov
sbb
sub
sub
mov
xcrypt-ofb
cmpsl
scas
inc
xor
jbe
cmpb
popa
in
in
movsl
inc
cmp
push
je
test
fs
inc
add
nop
inc
xchg
xchg
out
xchg
inc
arpl
lds
in
xor
dec
mov
arpl
cli
push
dec
push
pop
pop
enter
lahf
jmp
xlat
push
mov
into
insl
pop
xchg
inc
test
jle
mull
jbe
push
mov
push
add
jns
and
test
leave
inc
push
jbe
jmp
adc
mov
mov
xlat
fidivl
sub
xchg
sbb
addl
mov
insl
or
inc
mov
pop
pushw
sti
cmp
sahf
mov
push
arpl
sahf
adc
inc
lea
pop
adc
sub
fimuls
sbb
jne
cs
cvtps2pi
xor
mov
popa
pop
rcrl
into
and
setnp
mov
imul
dec
mov
mov
and
loope
jnp
mov
jb
adc
jns
xchg
jl
mov
adc
imul
mov
rcrb
dec
iret
in
fsub
push
sub
sbb
popf
scas
jne
sbb
xchg
ds
mov
xor
leave
lods
imull
sub
jbe
cmp
or
js
push
fwait
and
out
fldl
jecxz
adc
inc
jl
into
mov
call
mov
in
fistl
dec
or
outsb
fs
jae
cld
les
bsr
sub
in
dec
jbe
enter
mov
mov
cmp
and
je
mov
pushf
cmc
xor
div
jns
sbb
lret
dec
shl
jecxz
dec
xor
call
inc
add
add
mov
push
xchg
mov
andl
sub
push
push
jae
cmp
ljmp
mov
cs
dec
or
sub
test
pusha
jle
cmp
add
pop
inc
push
popa
inc
jae
add
fsts
cli
xor
iret
pusha
push
jnp
es
dec
cli
rcll
cmpsl
dec
int
mov
out
dec
pop
in
testb
mov
cmpsb
inc
push
enter
movsb
stos
cmc
mov
lds
in
add
fcoml
out
ja
mov
rolb
daa
ljmp
pop
pushf
sub
mov
es
push
xchg
leave
in
push
push
mov
inc
aaa
je
cmp
push
call
cmp
add
sarb
and
cmpsb
dec
ljmp
mov
adc
jp
cmp
push
xor
in
and
lock
mov
pop
pop
ja
push
push
inc
out
arpl
push
jge
leave
and
sbb
sbb
sub
dec
gs
lret
mov
in
jae
in
int3
sub
cmpsb
std
and
mov
mov
sti
lea
ja
jno
mov
xor
mov
decl
popa
loopne
dec
cmp
rcrl
jnp
xchg
insb
dec
mov
jl
lods
mov
mov
mov
mov
mov
mov
pop
mov
cwtl
mov
jp
cmc
inc
orb
andl
out
fwait
lds
out
out
in
xchg
cmp
inc
jecxz
jp
dec
jecxz
sarb
push
and
popf
jle
xor
sbb
or
push
aaa
mov
xor
sbb
lock
je
popf
test
pop
int3
add
mov
sub
leave
es
fisttpll
in
inc
int
out
push
jl
push
inc
repz
mov
cmp
cli
mov
lds
xchg
jno
inc
jno
and
ljmp
dec
xchg
adc
iret
xor
or
in
or
cmc
xlat
dec
loop
add
mov
xor
jge
xlat
les
rcr
fidivl
repnz
ret
test
cmp
out
arpl
mov
ljmp
gs
push
pushf
push
aad
jb
adcl
mov
imul
dec
add
xorl
adc
cmpsb
jae
fldcw
adc
fisubs
lods
dec
movsl
inc
mov
stos
inc
sub
push
outsl
nop
sbb
cmpsl
and
nop
fadds
xchg
hlt
cmp
push
xor
leave
mov
and
dec
repnz
xchg
jmp
in
std
nop
int
fcompl
inc
adc
ds
mov
mov
je
fnsave
xlat
inc
lea
pusha
adc
push
or
cmp
js
jecxz
xor
mov
dec
xor
daa
pop
int3
stos
mov
stc
push
cmp
cli
les
pop
pop
rcl
ffreep
sar
div
sti
inc
enter
adc
add
cmp
addb
daa
into
cli
dec
inc
into
dec
mov
push
pusha
adc
sbb
stos
inc
out
xchg
add
je
fdiv
shrb
sub
popa
xchg
or
sti
outsl
cmp
test
and
dec
jne
dec
add
rorl
sti
es
jb
mov
adc
adc
push
add
mov
push
mov
rolb
xchg
jns
cltd
mov
and
mov
jb
lret
lock
push
fidivl
fildl
ljmp
shrl
les
or
int
out
pusha
leave
dec
xchg
push
or
arpl
adc
out
aad
sbb
push
xchg
sbb
and
dec
sbb
and
or
xor
mov
cmp
add
push
xorb
test
mov
mov
add
ljmp
pop
cmp
cmp
jne
pop
ja
loop
insl
lcall
xchg
pusha
mov
stos
xor
inc
mov
adc
daa
aaa
adc
mov
repz
jb
dec
lods
jmp
vorps
push
inc
fdivrs
xor
mov
ljmp
and
scas
fists
xchg
rorl
inc
shlb
int
mov
dec
pop
popa
cmp
gs
test
sub
int3
ffree
je
pop
xor
add
jno
mov
push
pop
adc
int3
adc
sahf
dec
ret
loope
add
jo
in
push
out
mov
test
dec
int3
movsl
sarl
dec
leave
mov
mov
mov
addr16
int3
loopne
addr16
mul
lcall
sub
je,pt
movsb
and
popf
jg
and
pop
adc
loopne
sub
or
add
mov
pop
jne
inc
lahf
cmp
jo
cld
ret
enter
pop
les
mov
shl
push
cmpsb
sub
js
imul
xchg
dec
stos
sub
aam
xchg
loope
les
xchg
sub
sarl
cmp
int3
int
or
lret
xorb
js
mov
xor
add
stc
daa
jno
xchg
cmp
imul
mov
sbb
out
adcb
negb
loope
sub
mov
adc
dec
cmc
ja
adc
mov
pop
push
xchg
xchg
xor
stc
lret
mov
subb
repnz
fstpl
mov
push
lahf
leave
out
push
outsb
cmpsl
cmp
fstl
jb
addr16
test
cmp
sbb
shll
jecxz
mov
add
cmp
mov
sbb
sahf
das
inc
xor
xchg
stos
jp
lods
cmpsl
es
cmp
popa
xchg
aas
shr
in
shr
fistl
subl
jne
xor
cltd
fnstcw
push
and
inc
sti
push
lock
popa
test
xor
xchg
das
ljmp
out
pop
add
int3
and
push
inc
sbb
jg
cmp
int
leave
push
jg
testl
sbb
pushf
aam
dec
lret
push
arpl
cmp
lock
ret
shrl
push
shll
in
sub
pop
add
sbb
or
xchg
in
neg
pop
mov
cmc
mov
scas
lret
loopne
scas
js
fwait
pop
cld
push
jmp
addr16
cli
or
cmpsb
clc
jge
popa
mul
lcall
mov
push
mov
and
fs
js
cmp
or
pusha
push
push
enter
mov
push
push
jae
pop
push
movsl
xchg
std
loop
outsb
adc
and
xchg
ret
push
fbstp
adc
pop
or
jnp
pushf
cmp
shl
mov
mov
dec
inc
mov
mov
mov
jl
orb
pop
jmp
push
pop
sub
cmp
push
cmp
mov
push
push
jge
or
xorb
dec
in
ljmp
mov
jecxz
pushf
xchg
dec
icebp
bound
dec
scas
out
push
mov
call
mov
es
dec
jmp
inc
bound
lea
pop
xchg
and
scas
ljmp
cmp
xchg
out
lea
scas
inc
stos
jl
frstor
mov
std
lret
arpl
pop
js
decl
les
inc
add
xlat
repnz
jne
and
jns
mov
add
xorl
les
in
dec
cmpsl
gs
stos
mov
scas
addr16
outsl
in
add
sbb
shrb
jp
repz
repz
cld
sbb
and
sub
cmp
outsl
dec
mov
jns
xor
loope
out
xchg
out
mov
aaa
es
jnp
jp
add
in
out
gs
mov
neg
mov
outsb
in
and
push
add
dec
test
jmp
xchg
cmpsb
pushf
call
out
int3
xchg
mov
mov
js
aaa
push
lock
sub
cmpsb
insl
mov
sub
jg
out
loopne
sahf
push
ret
sbb
dec
adc
lea
and
xchg
push
xchg
jae
rcll
imul
in
insl
ss
jbe
push
mov
ret
sub
cmc
lahf
jae
sbb
cmc
out
xor
push
cmp
jns
sti
cmpsb
in
enter
test
test
lahf
inc
jl
and
sbb
xchg
jecxz
out
xchg
inc
and
cwtl
jle
out
nop
fdivrl
push
fwait
dec
jbe
outsb
icebp
fucomp
mov
ss
sbb
cmp
sbb
sbb
or
mov
ret
xor
cmp
sbb
imul
mov
mov
clc
mov
lret
jle
or
andb
inc
pop
or
sbb
lcall
or
data16
pop
ds
clc
lea
enter
adc
jae
call
adc
xor
lea
sbb
mov
lds
mov
mov
lret
lcall
xor
adc
hlt
add
push
clc
xchg
hlt
int3
fsub
shlb
mov
lea
push
inc
repz
dec
movsb
dec
jecxz
pop
sahf
pop
pop
pop
mov
xchg
push
addl
stc
loop
jae
int
and
mov
repz
call
add
in
mov
xchg
mov
mov
loope
mov
jecxz
lods
jl
loope
jae
inc
add
loope
push
xor
pop
push
sub
out
fsubrs
add
scas
cmc
and
aam
sub
pop
sub
lahf
pop
jmp
cli
cmc
arpl
ds
dec
cmp
daa
and
je
lock
and
jge
fdivrp
pop
fbstp
out
sahf
fnstsw
inc
lods
js
sahf
fildl
xor
or
mov
ret
out
or
les
test
cmpsb
add
adc
or
jle
push
jnp
push
mov
inc
push
mov
jle
jle
cld
out
mov
or
cmp
or
loop
and
notl
dec
inc
mov
bound
mov
add
cltd
jl
je
iret
xorb
hlt
xchg
sub
sub
repz
mov
lods
out
arpl
adc
fucomp
popf
movsb
cmp
pusha
mov
lock
loope
adcb
stos
sti
dec
and
xchg
xchg
popf
sbb
mov
jno
es
aam
inc
mov
push
inc
out
sub
fistps
dec
mov
das
dec
fwait
mov
adc
lods
enter
dec
pop
jo
push
jmp
mov
in
push
mov
outsl
sbbb
or
cwtl
fadds
push
and
dec
clc
adc
jne
mov
xor
stc
xchg
jae
mov
jmp
lea
pop
movsl
sti
lock
int3
sub
add
shrl
cs
add
and
inc
fimuls
in
pop
sub
sti
scas
lcall
push
cmp
or
sbb
add
bound
dec
sbb
jbe
and
clc
fisttpll
lods
dec
mov
mov
push
mov
gs
and
ret
sbb
sbb
daa
gs
sahf
mov
fstps
mov
scas
aas
fsubrs
jl
rcrb
xchg
or
pop
pusha
xor
gs
pushl
xchg
cld
cmp
cmp
sub
mov
fimull
mov
xor
pop
imul
outsl
adc
jmp
aaa
and
flds
mov
fmull
pop
addl
fwait
daa
fidivl
test
mov
rcll
inc
mov
aaa
sbb
jb
aam
cs
iret
add
lret
xor
adc
idivb
push
lahf
lahf
rolb
into
imul
xchg
dec
inc
xor
in
es
aad
mov
sbb
add
cmpsb
loop
jae
push
or
jo
in
imul
push
fwait
stos
sub
push
push
int
add
insl
lods
xlat
mov
stos
test
movsb
pop
data16
mov
sbb
or
jge
imul
lock
jecxz
inc
adc
loope
jns
push
xchg
xchg
cld
xchg
mov
imul
sub
push
sbb
xchg
sub
xor
fimuls
neg
xor
repnz
loope
xchg
les
daa
and
fwait
lret
into
dec
adc
test
push
movsb
in
xchg
in
js
int
adc
fucomi
test
mov
and
pop
repz
movb
inc
jecxz
repnz
fcmovnb
xor
xchg
fwait
push
mov
gs
hlt
fsubr
loope
ret
outsl
mov
cmc
dec
je
sub
cmp
adc
jnp
pop
lea
in
pop
jl
xchg
pop
inc
or
mov
ss
addb
push
ret
int
dec
lods
mov
dec
push
orl
push
loop
mov
fimull
ljmp
xchg
or
loop
dec
shr
divl
mov
or
rcrb
sbb
xchg
popf
jo
test
or
pushf
jge,pn
fld
jae
fcmovbe
cmpsl
dec
xchg
pop
fstps
faddl
pop
mov
jns
sbb
push
inc
test
jl
fdivs
or
mov
jl
sub
mov
repnz
lods
mov
cmp
inc
dec
std
dec
enter
clc
scas
sbb
std
inc
or
cli
and
adc
pop
mov
push
mov
repz
inc
push
xor
int
adc
leave
adc
icebp
divb
and
or
push
dec
cmp
ss
jg
sahf
enter
jns
mov
cmp
jne
xor
scas
int
das
push
push
sbb
addr16
mov
arpl
stos
dec
scas
inc
dec
inc
adc
imul
repz
sahf
or
in
fincstp
jge
pushf
mov
sub
inc
sub
cs
into
mov
mov
nop
fildl
xor
or
dec
aaa
mov
cmp
loope
xchg
pop
js
mov
sbb
jno
stos
xor
mov
ljmp
lods
or
mov
mov
imul
dec
sub
xchg
fadds
sub
test
iret
push
add
scas
xchg
out
push
aam
cld
lock
sbb
popa
mov
cli
das
sub
movsl
push
xchg
push
jne
push
mov
jne
pop
insb
lea
mov
stc
or
push
adc
pop
xchg
pushf
cltd
jle
jecxz
scas
cmp
test
xchg
out
mov
sbb
lcall
dec
enter
mov
mov
inc
cmp
mov
aas
jo
mov
int3
stc
lcall
mov
mov
movsb
sbb
mov
push
sbb
lcall
mov
mov
push
pop
jle
ljmp
mov
fwait
xorb
mov
or
mov
imul
or
sub
ja
and
mov
cmp
cld
stc
xchg
push
pop
adc
aas
xchg
mov
pop
xor
dec
ret
adc
lret
sbb
arpl
pop
pop
push
push
lock
pop
fsts
sahf
mov
cwtl
or
xchg
mov
lret
xor
test
xchg
rcll
loope
jnp
inc
in
pop
out
inc
ds
xchg
mov
lcall
mov
xchg
jp
insb
xlat
fistpll
dec
and
or
dec
push
movsl
mov
push
js
adcl
adc
adc
cmp
jmp
adc
enter
ret
sahf
mov
daa
mov
ret
xchg
enter
das
test
rcrb
or
mov
xor
and
pop
push
adc
dec
xchg
jne
das
notb
lcall
lcall
mov
ds
mov
lock
pop
inc
test
push
stos
shrl
les
mov
stos
mov
or
sub
dec
rcl
add
dec
out
mov
movsl
push
pop
push
outsb
adc
or
sbb
jmp
xor
pop
lmsw
dec
xchg
and
sub
cs
inc
mov
pop
sbb
out
ljmp
or
ret
sarl
shll
pop
lret
add
test
cld
pop
jnp
stos
icebp
mov
push
es
adc
in
cld
in
enter
sahf
inc
xor
mov
ror
imul
pushf
stos
mov
rcrl
mov
lcall
lods
add
add
dec
iret
int
lods
cmp
jl
shl
nop
faddl
repnz
inc
outsb
es
inc
and
mov
jg
movsb
lock
loope
and
nop
jno
inc
push
push
fcomi
push
push
imul
loop
and
mov
jb
cwtl
enter
xchg
out
pop
jmp
je
xor
ficompl
popa
hlt
loope
mov
push
fwait
imul
add
fsubl
cld
and
shl
cli
stos
sbb
das
mov
or
or
mov
xor
inc
mov
pop
sub
out
adc
loopne
fsub
enter
rcl
mov
adc
outsb
daa
dec
movsb
aas
aam
mov
add
popf
insb
pop
xchg
add
lods
call
inc
int3
inc
inc
shrl
repz
push
sbb
or
out
cwtl
aas
mov
ss
xchg
pop
jle
push
mov
mov
pop
mov
adc
cmpsb
adc
xchg
movsl
int3
movsl
mov
and
push
dec
jne
scas
or
imul
or
mov
lods
dec
cli
outsl
xlat
sub
xchg
div
dec
push
sbb
je
and
or
fwait
inc
xor
mov
insb
jmp
jno
dec
sub
jg
jecxz
lret
aaa
out
cmp
push
das
dec
ja
mov
or
out
inc
jb
mov
or
ss
cwtl
and
nop
pop
jl
pusha
enter
push
mov
xor
or
pop
mov
sbb
xor
fistpll
ss
jns
xor
xor
and
mov
jecxz
jbe
out
out
and
call
xchg
xchg
cmp
unpckhps
pop
and
dec
xor
ja
push
lds
push
pop
xor
mov
xor
fdivrs
add
mov
addr16
and
sub
inc
or
push
fucomp
pop
add
daa
test
and
xor
and
rcrb
jb
jecxz
sbb
inc
in
call
adc
sbb
js
int3
iret
push
mov
xchg
movsl
push
jae
add
pushl
fsubr
fadd
out
inc
mov
cmp
icebp
mov
shll
cmpsb
push
mov
mov
gs
hlt
jl
subl
stc
xchg
int
gs
and
jmp
xchg
or
cmp
jg
int3
clc
popf
mov
xchg
xor
cmp
popf
mov
mov
pop
test
xchg
bound
data16
mov
jmp
mov
daa
sub
sub
adc
lcall
xor
mov
cmp
pop
inc
push
jg
fsubr
inc
jmp
jbe
icebp
or
xchg
lret
inc
push
shr
btc
xchg
jno
xchg
inc
fdivp
pop
popa
adc
imul
or
xchg
sbb
pop
mov
jno
cld
daa
adc
lret
sahf
dec
and
repz
xor
iret
push
lock
fucomp
in
jne,pt
dec
pop
jecxz
mov
inc
data16
sahf
add
sti
nop
leave
ret
in
dec
or
or
cmp
dec
pop
or
xor
arpl
push
hlt
mov
imul
or
jae
push
mov
mov
pop
aam
cmp
push
iret
push
imul
popa
ljmp
cmc
out
pop
xchg
nop
ret
inc
into
mov
aaa
inc
mov
ret
xchg
lcall
stos
add
xor
test
dec
push
repz
out
and
mov
sub
jno
push
sub
pop
jnp
fnstcw
leave
cltd
repz
mov
jne
adcl
and
mov
cmpsl
sub
cmp
jl
dec
jmp
mov
stos
or
inc
test
and
push
adc
outsb
sub
dec
mov
ret
shl
into
xor
jmp
push
mov
xor
repnz
gs
add
das
push
jb
and
sbb
inc
pop
push
lret
cmp
aas
repnz
xchg
cs
mov
lds
imul
sbb
inc
bound
cmpsb
stc
sub
test
xor
lret
movb
mov
xorl
loopne
mov
add
and
sub
pop
bound
inc
js
dec
fdivs
push
dec
js
outsb
iret
sbb
sbb
jecxz
or
fsts
repz
in
dec
dec
ret
jbe
adc
mov
testb
cmpsb
rorl
ss
mov
push
mov
loop
adc
mov
in
jecxz
imull
sub
das
jle
push
lds
pop
loopne
push
or
mov
xchg
popa
dec
in
mov
mov
xor
xchg
mov
inc
popf
ja
mov
dec
inc
scas
adc
add
mov
movsl
fidivl
mov
sub
popa
xchg
daa
setb
jae
das
xlat
imul
fstpl
dec
stos
mov
cld
out
jmp
xchg
pushf
daa
sub
adc
imul
xlat
scas
mov
fcmovbe
jl
les
outsl
arpl
and
cmpsl
rcll
xor
jmp
out
dec
enter
cwtl
scas
dec
sub
and
or
cli
insl
imul
xchg
rorl
adc
or
loope
and
and
in
pop
data16
mov
jo
xlat
inc
cmp
mov
mov
call
jae
mov
dec
not
mov
jbe
sbb
pcmpeqd
xchg
pop
aas
inc
xor
mov
mov
mov
cmp
int3
es
add
pop
in
jbe
ret
out
or
jbe
arpl
scas
pop
pop
sbb
aas
jbe
cmpsb
test
and
cmpsb
jo
popl
push
addr16
insb
mov
shl
std
adc
mov
repnz
jl
sub
cmpsl
out
adc
xchg
sti
into
cmp
andl
bnd
xchg
sar
daa
bound
mov
mov
movsl
jo
roll
jle
out
shll
xchg
aad
push
ds
jl
or
test
mov
jmp
bound
push
ds
push
add
adc
frstor
out
out
lea
push
push
jecxz
mov
ret
ret
fildl
das
dec
loop
push
scas
ljmp
push
and
mov
sbb
and
jo
cmpsb
dec
mov
in
mov
iret
test
js
pop
mov
shlb
and
xor
es
sahf
mov
call
pop
hlt
sahf
push
dec
xor
jb
iret
lcall
mov
mov
mov
cmp
sbb
outsb
aad
fimuls
vpmullw
jl
lret
dec
push
imul
cmpsl
push
mov
das
adc
addr16
test
movsb
xchg
into
fs
adc
movsb
xor
cltd
pop
loop
mov
mov
lea
int3
cmp
mov
into
sahf
aaa
imul
xchg
pop
add
fcomps
out
sahf
lods
pop
mov
inc
out
fcmove
lahf
test
sub
int3
lahf
cmp
rcll
xchg
imul
mov
outsb
test
jns
leave
pop
cwtl
scas
and
jl
mulb
jg
pop
xchg
mov
insl
aas
pusha
sbb
xchg
cmp
cmp
js
and
fwait
xchg
lods
shll
roll
inc
movsl
sub
mov
mov
pop
dec
stos
sub
aaa
mov
jne
andb
aad
popf
imul
xor
push
mov
js
mov
mov
mov
movsl
mov
xor
xor
push
insl
jnp
cmp
daa
and
les
pop
sub
leave
std
jbe
inc
das
jecxz
mulb
int
in
test
cmc
push
xchg
test
or
jge
lahf
push
leave
or
mov
push
loope
ret
mov
push
andb
push
mov
mov
xchg
pop
subl
mov
mov
adc
std
sahf
mov
mov
push
mov
test
push
aaa
out
dec
jge
and
cld
xlat
inc
ret
jmp
pop
outsb
adc
sbb
mov
dec
dec
jecxz
xchg
fcoml
idiv
push
mov
std
or
lcall
aaa
andl
and
sbb
push
pop
xor
mov
mov
mov
add
push
jns
in
bound
mov
jmp
jle
and
jne
and
movsb
sub
jl
xor
sub
enter
sub
sahf
ja
in
cmp
mov
dec
rol
aam
sub
cmpsl
inc
xor
fstps
pop
scas
int3
push
add
ficompl
pop
xor
sbb
ss
stos
nop
cmc
push
mov
mov
push
jns
negb
mov
lahf
notl
lock
addr16
pop
lods
fldcw
lods
fcoms
jp
mov
xchg
pop
lock
xor
int
ss
adc
dec
addr16
iret
loop
cld
rclb
repnz
pop
in
cltd
pop
sbb
or
pop
lcall
insb
mov
lods
xchg
xor
insb
lcall
clc
test
lock
add
test
shlb
lcall
jge
hlt
repnz
ficoml
xchg
mov
inc
add
jb
xchg
and
punpcklwd
sbb
push
xchg
ja
loopne
inc
mov
dec
or
aas
test
cmp
aad
ljmp
mov
xchg
test
pop
hlt
mov
cmp
lahf
mov
imul
test
popa
les
push
add
xlat
adc
ds
cmp
mov
lods
jle
testb
gs
mov
pop
leave
addl
aaa
push
dec
mov
lods
in
insb
sbb
and
pop
mov
inc
lcall
and
and
aad
jp
sbb
test
repnz
and
mov
ljmp
jbe
mov
lahf
xlat
gs
adc
xor
pop
mov
cmp
or
movsb
xchg
inc
cmp
xchg
pop
mov
push
jge
arpl
adc
call
jle
lds
sbbb
call
adc
bound
test
or
dec
pop
into
mov
push
push
add
aad
xor
fisttps
jecxz
pop
in
inc
inc
mov
idivl
daa
les
repnz
dec
sti
mov
xlat
leave
imul
jo
daa
jns
and
fwait
es
ss
cwtl
dec
out
aas
xchg
das
mov
movsb
mov
clc
popa
push
dec
push
xchg
cmp
xchg
fmull
ret
jmp
subl
sbb
sti
sbbb
test
or
pop
xor
and
and
jb
add
push
out
rcll
dec
jnp
xchg
sbb
sar
mov
add
dec
mov
mov
call
lods
pop
test
movsl
inc
dec
xlat
jns
pop
xchg
mov
add
scas
call
lods
mov
in
xor
repnz
pop
aam
aam
iret
mov
insl
jp
pop
or
leave
lret
push
clc
sbb
rcrb
sbb
ds
cli
js
cmp
repz
push
fdivs
and
loopne
xchg
pop
add
fisubl
pop
ret
call
sbb
add
mov
popa
mov
insl
cmp
icebp
and
sbb
mov
or
mov
mov
stos
push
mov
das
stc
pop
add
out
jecxz
lea
sub
xchg
mov
stos
inc
insl
inc
test
push
imulb
mov
cmp
adc
jecxz
mov
scas
pop
mov
aaa
mov
std
insl
iret
push
dec
imul
ljmp
roll
int
movsl
jle
mov
mov
inc
inc
dec
jle
sub
inc
push
ret
push
dec
mov
cmp
sti
lods
mov
mov
jne
test
popa
cmc
mov
push
stc
adc
push
mov
adc
outsb
cli
std
xchg
stc
test
lcall
adc
aas
jg
mov
mov
inc
repnz
insb
lret
push
add
fnstenv
shlb
dec
mov
stos
popl
adc
test
xchg
xor
sti
stos
push
push
pop
leave
mov
xchg
sub
jne
add
ss
mov
mov
or
test
sub
rcrl
xor
pop
xor
sbb
fcmovnu
ror
xchg
nop
add
push
fdivrl
inc
jg
test
cwtl
mov
pop
jmp
shl
nop
mov
aaa
push
es
pop
arpl
inc
lea
inc
pop
scas
data16
inc
add
mov
push
sub
leave
adc
mov
inc
cmove
testl
out
inc
jb
adc
fbld
cmp
data16
mov
out
fiadds
inc
xchg
daa
push
cmp
addr16
hlt
rolb
es
xor
push
sbb
xor
xor
jg
je
cwtl
xor
sub
lea
jecxz
dec
pop
and
int3
imul
dec
and
jge
enter
cmp
int
fsubrs
mov
add
inc
cmpl
dec
test
jno
push
mov
loope
out
std
xchg
and
cmpsl
pushf
xchg
out
sbb
jb
add
test
std
sbb
fcompl
jp
shl
mov
ss
ljmp
sbb
cmp
push
leave
push
xor
aas
dec
test
sub
iret
shll
scas
jnp
movsb
or
lea
shll
mov
mov
pushf
cmpsb
aam
adc
dec
sub
sbb
imul
ss
pop
push
rep
cmp
mov
repz
cmpsb
pop
test
sbbb
xorl
lea
jp
xor
movsb
xchg
jecxz
cmpb
or
in
into
sarb
fcomip
cwtl
xchg
mov
jp
fmul
inc
hlt
dec
enter
or
sbb
mov
xchg
lods
mov
mov
xor
enter
cmc
push
cmp
test
mov
jb
testl
dec
mov
sbb
call
dec
pop
jle
pop
push
loop
xor
add
test
add
ljmp
jb
in
pushf
fcoml
xchg
bound
call
pop
dec
lock
fcoml
or
jb
out
jge
rol
test
mov
lds
enter
mov
pop
push
sbb
dec
cmpsl
out
jbe
sti
repz
or
jae
in
dec
sub
std
into
pop
push
push
pop
lahf
add
mov
jge
out
cmp
adc
leave
and
lret
outsl
sbb
idivb
and
mov
imul
xor
add
jbe
adc
dec
popf
pop
mov
jae
shrl
jp
dec
clc
bound
and
mov
nop
lds
jo
dec
add
aad
data16
mov
cmc
and
std
dec
pop
xor
xor
testl
int
xor
dec
jns
xchg
ljmp
shrl
aas
lock
lock
std
rcr
push
sub
mov
dec
aam
daa
scas
lds
mov
fnsave
jbe
mov
xor
stc
cmp
nop
daa
mov
xor
jns
mov
dec
jae
cmc
js
sahf
sbb
pop
inc
jecxz
add
cli
insl
mov
sbb
and
and
shlb
hlt
pop
aas
aad
inc
test
into
mov
mov
jmp
insb
inc
pop
jno
jnp
outsl
pop
xchg
xchg
call
test
sbb
push
push
fdivs
xchg
fsubs
cmp
mov
je
cmpsl
in
lds
iret
and
int3
adc
ds
adc
in
mov
out
stos
pop
mov
pop
scas
push
clc
dec
inc
pop
ret
sub
sbb
pop
shl
cmp
mov
jge
mov
leave
xchg
fbld
or
stos
hlt
sub
mov
cmp
dec
add
add
cmp
lcall
ljmp
inc
repnz
dec
dec
idivl
dec
int3
mov
xchg
pop
into
push
inc
push
mov
mov
aaa
dec
cmp
sti
pop
popa
inc
pop
mov
data16
inc
push
outsl
pop
and
stos
xchg
sti
ficompl
inc
and
xchg
mov
sub
pop
add
mov
push
cmp
push
leave
xor
fmul
fsts
into
add
add
jmp
xor
insl
jnp
push
sub
jp
test
inc
sarl
iret
jge
xchg
sbb
ficoms
xor
or
xchg
fdivl
rorl
ret
pushf
sbb
xchg
lods
jl
and
and
xor
inc
arpl
lcall
add
or
lret
aam
fisubrl
loope
jne
sub
mov
push
fscale
xchg
repz
mov
dec
je
xor
dec
mov
sub
fists
cmp
add
xor
jne
aam
cmp
loope
push
lea
dec
xorb
imul
lret
jb
andl
xchg
mov
ds
shll
loope
daa
push
fwait
cmpsl
les
xchg
mov
jecxz
lahf
fstpt
adc
inc
int
ss
mov
sbb
adc
arpl
aaa
rcr
cs
mov
sbb
adc
in
pop
iret
cltd
ficoms
fwait
ret
aas
out
cmp
sbb
outsl
dec
lret
push
adc
out
xor
mov
mov
fisttpl
xlat
sub
mov
fmull
adc
out
shlb
aam
dec
bswap
inc
pop
lea
stc
call
adc
add
or
xchg
in
lods
xchg
ljmp
mov
cld
inc
mov
jns
lods
adc
in
or
sbb
enter
mov
test
mov
insl
dec
ficoml
arpl
repnz
mov
imul
xchg
gs
arpl
in
loop
dec
cmp
pusha
jp
mov
fwait
inc
mov
sbb
mov
rcr
aas
jl
adc
loopne
loope
ss
daa
aas
lret
jg
pop
loope
mov
and
and
test
sbb
fidivrs
pushf
sub
pop
lods
rol
dec
mov
mov
pop
push
pop
xchg
faddl
repz
mov
push
mov
int3
jne
pop
icebp
inc
aas
xor
or
or
mov
sbb
sbb
fcomip
das
pop
addl
and
into
sub
ret
sub
dec
ja
dec
insl
es
and
sub
pusha
dec
inc
mov
xchg
mov
pop
imul
cmc
pop
sub
xor
out
daa
daa
xchg
jp
push
call
push
dec
sahf
sub
aad
daa
lcall
mov
mov
lods
test
or
pop
mov
mov
pusha
jbe
and
ret
stos
or
xchg
das
pop
shlb
jbe
movsl
jl
stc
cmpsl
fstpl
mov
mov
sub
mov
mov
pop
ret
mov
xlat
ljmp
addr16
push
or
aam
loopne
rcrl
notl
push
dec
js
ljmp
pop
cmp
lret
hlt
negl
fwait
push
sub
pushf
xchg
pop
cmp
push
or
jmp
into
aam
das
test
mov
and
je
cmpl
or
xchg
push
mov
pop
xor
cwtl
hlt
fdivrl
test
mov
rcrb
imul
addl
dec
cmpsb
fbld
cmp
jno
push
pop
inc
add
xor
jnp
inc
jo
std
clc
push
out
aad
lods
push
pop
xchg
pop
pushf
inc
idiv
jbe
jge
dec
dec
inc
fwait
ret
xor
cmp
add
xchg
lahf
adc
sti
sub
mov
addr16
inc
xchg
shufps
jl
pop
sbb
mov
cs
dec
mov
mov
iret
insb
scas
loop,pt
jecxz
mov
lret
popf
cmp
push
push
arpl
in
fs
mov
push
mov
ds
in
and
shr
xor
add
fwait
push
data16
xlat
push
imul
push
out
fldcw
ja
daa
in
adc
rcll
dec
test
mov
jmp
sbb
add
xchg
pop
jbe
push
pusha
cmp
sbb
cltd
sub
mov
mov
or
sub
or
arpl
push
xor
iret
add
jb
or
or
int3
outsl
lret
test
mov
mov
cmp
sub
jb
scas
xor
jae
pop
jmp
cwtl
test
cltd
add
bnd
testl
mov
add
pop
xchg
adc
cltd
mov
push
scas
xor
cld
jae
pop
fsubr
insb
inc
add
movsl
sahf
mov
pop
lods
sbb
or
inc
mov
mov
nop
inc
jnp
data16
adc
jmp
nop
test
stc
jae
push
call
sbbl
cmp
fwait
mov
xchg
fildll
out
in
push
jo
and
repnz
fsubl
sub
pop
dec
and
scas
into
mov
xchg
insl
cwtl
aaa
mov
cmc
add
lods
jl
int3
dec
aaa
cmp
jl
and
pop
inc
add
inc
jnp
into
mov
xchg
cmp
inc
jl
scas
inc
dec
adc
ds
dec
or
or
pushf
or
fs
lea
jns
mov
sbb
insb
xlat
std
cmp
and
inc
call
pusha
ret
jne
cmp
jmp
stos
xchg
fucomi
mov
icebp
ret
inc
mov
test
cmpsb
and
lods
ret
push
push
jle
in
stos
call
adc
in
mov
dec
cmc
add
out
mov
dec
lods
dec
bound
push
mov
fcompl
cmp
lcall
lock
jmp
push
pop
inc
faddl
loop
pop
xor
mov
ss
xor
cmp
lds
cmc
inc
dec
roll
lods
jp
inc
dec
hlt
sbb
fisttpll
xchg
stos
push
mov
incl
clc
pop
movsl
push
shl
mov
add
lds
inc
mov
push
mov
sti
lods
bound
and
out
and
jg
and
jg
mov
pop
jbe
and
xorb
lahf
ficoms
std
pushf
dec
imul
idivl
cltd
in
sbb
dec
dec
and
enter
stc
adc
sub
adc
pop
rcl
jne
cld
cmp
cmp
sbb
jle
das
frstor
inc
sahf
push
mov
outsb
adc
mov
jno
sbb
jge
inc
jo
cmpsb
xor
or
add
jle
and
mov
inc
push
hlt
int3
xchg
dec
ret
mov
sti
sti
loopne
sbb
outsl
jle
inc
and
inc
mov
pop
sbb
rcll
int3
std
push
movsl
or
pop
push
mov
loopne
aam
int
icebp
and
xlat
push
cmp
dec
xchg
loop
sub
inc
dec
lcall
nop
jae
leave
shrl
adc
xchg
cwtl
scas
enter
xchg
fld
sbb
mov
mov
or
test
lea
dec
ss
addb
jle
cmp
mov
jecxz
js
icebp
mov
test
arpl
push
xlat
sub
mov
subb
shlb
jp
out
sbb
inc
mov
sbb
aas
aas
xchg
jle
push
mov
dec
push
inc
or
pop
repnz
std
sbb
mov
mov
mov
add
sub
sarl
and
push
jmp
push
outsb
push
rorl
adc
cmp
or
pop
cmpsl
bound
loopne
shrb
mov
test
ljmp
mov
inc
fsubp
pop
jae
and
cmpsl
sti
iret
push
sub
cwtl
or
xchg
inc
lahf
cld
lret
push
aad
xchg
pusha
inc
and
mov
nop
add
xor
sahf
addr16
outsl
divb
push
push
mov
sub
negl
repz
mov
pushl
cltd
inc
fmull
sub
aad
jp
mov
aaa
sub
int
subb
arpl
pop
in
sbb
dec
arpl
stos
popa
mov
cmpb
addr16
sbb
fimuls
adc
ljmp
or
pusha
sbb
in
test
movsl
test
ljmp
les
cmp
rorl
hlt
loope
xchg
and
rol
and
call
dec
push
lods
push
repnz
cmp
leave
mov
jge
nop
sar
mov
jnp
imul
cld
test
mov
jmp
or
lds
jge
xor
xor
inc
push
cmp
shll
pop
inc
xchg
fwait
inc
push
push
dec
mov
cld
inc
sahf
hlt
push
pop
ss
out
pop
push
xorl
stc
push
xor
rcl
and
xor
test
inc
jnp
mov
shl
inc
jno
pop
aad
mov
and
and
xor
movsb
cmp
rol
test
shlb
iret
push
rolb
pushf
sti
repz
and
mov
xchg
outsl
fstp
outsl
inc
into
add
lcall
jbe
mov
sub
shrb
mov
push
inc
xchg
mov
cs
popf
pop
push
mov
aas
insl
clc
pop
sbb
imul
jno
fildl
inc
sbb
imul
dec
mov
aad
xchg
out
jne
pop
es
js
jnp
sarb
jle
cmpsb
sbb
fstl
xchg
mov
loop
loope
data16
add
scas
loop
sbb
cmpsb
jmp
nop
in
xchg
stc
dec
pop
pop
scas
dec
xchg
xchg
aas
outsl
nop
mov
cld
bound
das
mov
mov
add
ljmp
cs
jo
cmpsb
xchg
cld
adc
rol
addr16
aas
inc
mov
mov
jbe
pop
pop
mov
out
sar
sub
jge
dec
xchg
push
adc
xor
sbb
xlat
jmp
mov
movsl
inc
lock
sbb
lret
add
bound
or
int3
loope
or
insl
movsl
stc
jne
shlb
sbb
jle
adc
loop
push
mov
cmp
jp
lea
sbbb
inc
push
add
pop
mov
push
fildll
movsl
sbb
popf
jge
dec
subb
sub
cld
iret
xlat
lods
mov
call
add
aad
dec
jbe
cmpsb
lds
push
enter
pop
popf
mov
mov
les
in
lods
adc
xlat
pop
adc
cmp
mov
lea
pop
push
xor
mov
les
or
outsl
push
std
dec
xchg
jne
jge
rclb
loope
mov
mov
lret
mov
lret
leave
stos
xchg
or
jbe
ror
jb
loop
inc
jbe,pn
sar
sub
ss
pop
lds
push
fsubs
sub
icebp
and
mov
xchg
or
xchg
mov
inc
pushl
aaa
sub
ret
add
and
add
xchg
in
jae
cmp
lods
push
push
or
xchg
sub
cmpsl
imul
jnp
notl
and
pushf
push
mov
pop
cli
fs
push
cwtl
adc
scas
movsb
inc
inc
int
out
sbb
lcall
jecxz
mov
test
xchg
hlt
inc
shll
or
enter
idivl
dec
outsb
out
icebp
pushl
jno
pop
data16
xor
xor
adc
xlat
into
sarb
dec
add
jmp
jmp
or
mov
fdivrs
sub
imul
cmpsb
movb
dec
mov
int
xchg
leave
dec
fidivs
pop
cmc
and
inc
ret
aas
dec
dec
xchg
insl
and
dec
shll
loope
scas
daa
inc
into
jno
mov
sub
sar
das
mov
push
roll
jne
les
std
adc
inc
fs
jmp
repnz
shlb
ss
and
push
std
adc
roll
or
ss
fxch
pop
jo
test
pop
test
out
mov
stc
in
stc
push
and
shll
nop
repz
push
cmp
xchg
and
outsl
sbbl
mov
loop
out
ja
pop
inc
js
sub
push
test
insb
jno
xchg
xor
dec
or
lods
lret
leave
lahf
lea
jne
mov
fnstsw
mov
xor
add
movsl
loope
lds
jno
sbbl
jecxz
mov
and
mov
push
sub
int
pop
xchg
sti
add
cmp
shll
hlt
cmp
lds
fcoml
ret
jno
popf
jmp
popf
inc
jnp
repz
fstpl
mov
push
js
repnz
xor
bound
dec
cld
arpl
or
mov
pop
mov
and
mov
mov
imul
and
jae
xchg
call
dec
mov
sbb
adc
cli
cmp
movsl
in
adc
es
add
jl
xlat
add
mov
push
push
sti
rcll
jb
fldl
popf
icebp
mov
or
push
iret
jg
lds
lods
aaa
xor
pop
ja
xchg
imul
sub
push
and
bound
fwait
in
scas
fstpt
rolb
mov
jo
adc
das
mov
out
bound
movsl
mov
call
dec
rcr
fiadds
push
fucomp
or
lret
testl
push
dec
mov
push
pop
mov
scas
mov
aad
cmp
daa
dec
inc
add
daa
clc
mov
in
mov
clc
and
mov
sbb
jmp
pop
lock
mov
or
test
dec
rolb
jecxz
mov
mov
test
stos
cld
add
add
or
pop
lods
cmp
xchg
push
and
rcrl
iret
sub
and
daa
addl
xchg
lock
lods
xchg
fadd
aaa
cmpb
adc
and
sahf
xchg
enter
mov
test
fdiv
ret
adc
sub
repnz
cwtl
insb
sbb
push
xor
repz
cmp
insl
lret
adc
xor
mov
sbb
loope
icebp
push
or
mov
xor
push
or
or
in
pop
xchg
in
sti
pop
push
or
cmp
mov
and
aaa
or
jb
scas
jnp
and
jno
sub
push
leave
out
mov
xchg
mov
inc
ljmp
pop
push
or
inc
mov
dec
xchg
cmp
sbb
sbb
fmul
or
mov
sub
shlb
insl
mov
add
inc
dec
or
mov
call
xorl
les
mov
imul
scas
cmp
setne
pop
push
jge
dec
cmpsb
es
pop
pop
jb
push
arpl
jns
sarl
cmp
mov
sarl
dec
dec
in
ljmp
out
test
push
in
dec
int
push
cli
adc
and
test
shl
xor
addl
lret
mov
add
insl
in
sub
inc
push
push
lock
pop
imul
repnz
out
mov
mov
push
inc
jg
imul
sbb
lret
jbe
movsb
inc
push
mov
mov
mov
jle
lea
adc
push
mov
test
xchg
and
lods
xlat
subb
or
faddl
mov
icebp
cmp
dec
push
inc
loopne
pop
repz
xchg
fwait
xchg
mov
pop
or
aas
dec
imul
jge
cmp
adc
jo
data16
aad
cmp
shlb
leave
cld
dec
shlb
clc
popa
popa
out
ret
jp
xbegin
roll
popf
roll
fwait
lret
stos
mov
push
cmp
out
mov
insb
arpl
bound
out
popf
ss
inc
mov
inc
pop
aaa
xor
fildll
adc
test
sbb
insb
mov
adc
leave
sub
test
and
je
ficomps
inc
movsl
push
inc
mov
sub
lret
in
fs
inc
pop
loope
lahf
push
sbb
addr16
in
adc
dec
sbb
rcrb
pop
in
pushl
loope
mov
sbb
jecxz
cmp
das
adc
aaa
mov
cli
outsb
icebp
shr
push
push
aam
pushf
call
mov
fistpl
popf
leave
ja
and
inc
cmc
mov
fwait
leave
lcall
sub
xchg
stc
lea
hlt
test
pop
pop
mov
mov
test
pop
xlat
lahf
stos
cmpb
stos
inc
xchg
xor
sbb
shrl
scas
scas
inc
cmp
jne
push
lahf
int
enter
or
sub
in
inc
mov
out
test
adc
and
mov
mov
rorb
out
sti
negb
ror
stc
cmp
mov
cmp
mov
jb
sub
or
mov
xchg
dec
fisubl
and
incb
push
and
dec
sub
lods
imul
sbb
iret
scas
test
add
mov
add
inc
xor
leave
pop
mov
jg
out
lret
pop
lret
loopne
scas
mov
inc
mov
mov
loope
dec
sbb
loopne
outsb
push
fnsave
cwtl
daa
mov
aad
shll
dec
sub
andl
xchg
shl
pop
push
std
jne
jl
movsl
dec
sub
lods
fidivs
loope
push
mov
push
imul
and
pop
push
xorb
mov
adc
push
push
xor
or
inc
pop
xchg
jmp
mov
sub
out
loopne
cwtl
pop
aaa
scas
in
lods
jnp
add
mov
xchg
std
sub
mov
icebp
loopne
sahf
out
cmp
adc
iret
bound
pop
or
mov
lcall
cmp
fcom
test
ja
mov
pop
pop
mov
es
mulps
inc
push
pop
movsl
mov
push
push
sub
mov
ret
ret
jge
sub
sub
mov
cmp
xor
mov
addr16
cmp
ficoml
insl
clc
leave
jle
arpl
ljmp
push
mov
scas
mov
push
jb
call
into
pop
jo
shrb
push
and
movsb
add
cld
aas
movups
mov
fstps
mov
out
lret
xchg
hlt
pop
outsl
mov
inc
jg
pop
das
mov
ljmp
mov
je
imul
inc
sbb
dec
rcrl
add
cld
cmp
aam
inc
xchg
and
adc
cltd
lret
add
sub
int3
sti
dec
add
mov
fidivs
push
shlb
bound
mov
gs
adc
cli
cwtl
test
inc
mov
mov
aam
or
ret
push
loopne
push
pop
stos
sahf
inc
pushf
rcrl
jae
jl
cld
mov
push
jno
sahf
push
mov
mov
mov
push
rcl
push
out
pop
daa
bound
popl
pop
arpl
or
lret
int
rcll
add
or
sub
out
sub
daa
fstps
dec
dec
xor
pop
repnz
movntps
mov
mov
dec
das
adc
add
lock
cli
mov
ss
mulb
adc
inc
dec
ljmp
xlat
test
cwtl
pop
lcall
sbb
clc
xor
lea
adc
push
inc
cmp
shr
cmpsl
jle
jnp
xchg
flds
xlat
rolb
add
xchg
xchg
sub
outsl
mov
mov
lock
push
jo
jo
addl
or
mov
daa
jnp
out
mov
xor
lret
push
je
mov
add
mov
fisubs
sub
das
dec
sub
sub
sbb
jne
aad
sub
pop
bound
call
xor
in
xor
sar
jno
xchg
shrb
lods
and
notb
pop
out
sub
sub
orb
cmpsl
xchg
mov
aam
cltd
das
ds
jmp
scas
mov
test
cltd
mov
mov
mov
ficomps
outsl
cmp
js
push
mov
adc
adc
clc
stos
ret
jbe
mov
ficomps
pop
leave
pushf
jo
mov
iret
arpl
enter
fidivrs
rorl
test
pop
sbb
push
fsubl
test
or
ret
sbb
mov
dec
in
mov
mov
cs
ds
pop
into
cli
pop
and
jno
push
test
out
and
adc
shll
dec
es
shll
fisubl
push
rol
int
dec
movsb
jmp
jnp
xor
cmp
dec
dec
mov
dec
pop
cli
out
add
ss
add
push
dec
cmp
xor
fnstenv
pusha
fwait
xor
ret
in
sti
cltd
push
pop
sbb
pop
pop
mov
cmp
fwait
and
cld
loopne
sbb
dec
jno
jg
es
mov
rcr
sbb
nop
adc
push
int
lahf
sbbl
cmpsb
mov
loope
mov
jecxz
cmp
movsb
jnp
add
cmc
mov
into
sarl
push
jg
cmc
ja
cmpsb
imul
lret
dec
cmp
and
xor
xor
std
ret
lods
adc
mov
adc
dec
imul
mov
cmc
test
repnz
mov
sbb
sub
lahf
jne
lret
cmp
push
and
enter
jp
mov
push
inc
rcl
adc
jmp
mov
stc
das
sbb
jge
rorb
sub
stos
andb
sub
mov
inc
pop
mov
mov
lock
sub
mov
fisubs
imul
pop
call
jmp
add
sbb
fisubrl
sub
addr16
jmp
test
sbb
lods
jnp
hlt
icebp
lods
lock
inc
and
push
lcall
nop
pop
lcall
push
ffree
pop
xor
call
inc
pop
xor
lahf
insb
pop
push
mov
cmc
cmc
jne
lods
inc
jle
cli
push
mov
ret
jle
jo
cmp
xor
icebp
bound
xchg
sbb
xchg
adc
adc
xorl
xchg
stc
inc
fldl2t
out
inc
mov
mov
rcll
sub
ljmp
int
test
cld
and
in
sti
test
clc
or
loope
sarl
adc
daa
pusha
mov
cmp
cwtl
adcl
jmp
mov
cmp
sbb
sbb
pop
dec
and
inc
repz
dec
inc
jnp
or
icebp
xor
out
repz
inc
ficompl
sub
or
andb
iret
or
cmpsb
push
cmp
or
sub
cli
adcb
mov
je
xchg
lea
dec
ds
xchg
jle
push
sbb
pop
mov
pop
shr
pushl
ss
mov
int
xchg
xor
pop
or
or
lcall
xor
xor
mov
fistl
sub
mov
stos
sub
dec
jge
xchg
push
scas
mov
jge
daa
inc
lods
or
stos
add
pop
add
scas
mov
pop
out
mov
enterw
nop
xchg
shll
je
mov
lods
cmp
out
shrb
sti
push
and
fnsave
lahf
or
dec
outsb
mov
push
mov
in
xchg
out
pop
mov
sti
ja
lret
xchg
ja
cmc
fadd
sbb
mov
inc
mov
insl
inc
pop
dec
mov
or
arpl
jae
mov
cmc
jmp
and
push
add
popf
adc
mov
add
adc
and
or
xor
inc
push
add
mov
xor
mov
insb
mov
aad
pusha
mov
mov
movsb
xchg
repz
dec
mov
in
jge
adc
mov
pop
lret
in
sub
mov
xchg
jb
cmpsl
icebp
jno
cmp
loopne
mov
lods
mov
lds
mov
addr16
cmp
xor
cmp
dec
sahf
xchg
int3
cmpl
adc
lods
dec
add
adc
int
add
imul
xor
add
and
sarb
or
xor
adc
adc
cmp
lcall
das
fldpi
imul
sub
xchg
dec
lods
bound
adcl
ret
out
xor
inc
or
ret
lret
cmp
dec
adcb
pop
xchg
sbb
repnz
ljmp
mov
xchg
scas
inc
mov
xor
lds
cli
imul
int3
mov
int3
mov
mov
bound
cmpsl
lahf
add
stos
inc
and
test
sbb
popa
mov
fs
test
cmp
test
cmc
fsubrl
dec
and
xor
enter
pushl
cmc
xchg
add
cli
inc
inc
in
movsl
and
cmp
mov
jo
or
pop
loopne
mov
aaa
pop
mov
je
jl
jno
add
repnz
and
outsl
cltd
pusha
jns
sbbl
pushf
addr16
fldl
add
pushl
mov
inc
stos
imul
inc
mov
sarb
addl
mov
dec
daa
jg
ror
dec
jmp
mov
scas
xchg
xor
sub
mov
fstps
sarl
sub
and
js
or
test
aas
cmp
iret
adc
das
andb
sbb
sbb
jge
xchg
loop
cvtpi2ps
mov
fldt
jge
fsts
or
pushl
xchg
pusha
push
mov
cli
std
inc
push
test
mov
cli
cmp
data16
mov
outsb
mov
mov
clc
mov
adc
lods
push
mov
push
aam
adc
or
lret
add
mul
inc
or
sub
je
fnstenv
movl
cltd
cmpb
std
rorl
ret
jl
mov
out
mov
jnp
cli
scas
popa
sub
loope
pusha
push
gs
add
adc
icebp
mov
cwtl
adc
cwtl
pop
mov
pop
pop
in
push
xchg
push
notl
adc
inc
dec
sbb
mov
and
repz
es
adc
cld
cwtl
adc
aas
stos
push
jl
mov
xor
out
cmp
sub
test
gs
push
adc
fiaddl
inc
dec
bnd
mov
mov
push
jecxz
in
in
pop
and
adc
pop
add
call
sbb
int
leave
xchg
shrl
lcall
jne
and
div
or
xor
aaa
movsb
into
xor
xor
jne
in
or
hlt
int
mov
mov
rclb
imul
cmp
or
sub
test
popl
push
push
xchg
cs
xchg
and
sbb
pop
pop
inc
test
xchg
ret
dec
lret
je
mov
in
pop
fsubr
imul
into
js
jne
in
loope
imulb
decl
insl
inc
push
rorb
or
ss
mov
adc
pop
dec
sahf
test
add
popa
adc
xchg
adc
add
lea
jae
cmp
ja
inc
lret
cltd
xchg
cmp
addr16
cwtl
mulb
mull
shlb
jbe
sub
mov
mov
sti
roll
imul
in
fs
or
push
inc
lret
std
scas
xchg
pop
add
pop
xchg
xchg
std
jne
pop
xchg
adc
sbb
mov
hlt
adc
jmp
test
inc
or
subb
pop
fistl
adc
pop
push
pop
das
arpl
inc
add
mov
rcll
add
xor
pop
popf
stc
mov
pop
mov
sahf
xor
mov
paddb
xor
dec
pop
in
xchg
cltd
icebp
pop
dec
data16
pusha
sub
hlt
mov
ss
add
clc
js
adc
fs
test
jns
lods
fstpl
clc
pop
ret
rep
shll
push
ret
and
sahf
in
lock
mov
jp
inc
add
test
dec
cmp
push
push
fcoms
in
out
ds
push
lea
std
insb
cmp
adc
pushf
mov
aad
xchg
sbb
fsubrl
xchg
lret
push
loop
pop
jmp
xchg
repnz
cmp
mov
bound
das
in
cmp
xor
outsb
lock
cwtl
inc
int
or
das
dec
stos
dec
enter
jg
mov
pop
dec
adc
dec
xchg
fistpll
test
outsb
pop
imul
hlt
pop
and
inc
add
xor
and
pop
outsl
clc
mov
adc
ds
clc
mov
test
mov
lea
mov
push
push
mov
inc
xor
cmp
push
int3
mov
rcrb
mov
fbld
dec
adc
jmp
mov
gs
mov
pop
popf
add
lret
or
rclb
cmp
cld
cmp
nop
inc
lods
fdivrl
les
scas
stos
jne
scas
lret
roll
inc
sti
fdivrl
aas
out
outsl
dec
iret
adc
mov
fdivs
aas
push
mov
popa
xor
sbb
out
test
mov
or
push
push
lea
ror
xor
loopne
out
fimull
scas
sub
movsb
sub
lods
jne
mov
mov
test
or
ljmp
nop
jo
xchg
pushf
repnz
or
adc
cwtl
leave
push
and
sti
sbb
xchg
sub
dec
cld
rcll
shlb
rcl
fs
inc
pop
int
and
push
icebp
jp
xchg
xchg
xchg
xor
add
adc
push
pusha
aam
inc
cs
or
in
cmp
dec
sub
rcll
ljmp
mov
or
insl
cmp
pop
inc
pop
xchg
cwtl
pop
sub
sbbl
call
out
xchg
mov
loope
je
data16
push
or
iret
adc
sbb
adc
lret
icebp
lret
push
adc
call
loope
sar
push
mov
push
xchg
jo
dec
aaa
test
mov
mov
arpl
imul
scas
gs
mov
imul
and
push
cli
xor
xchg
cmp
mov
mov
jmp
shl
ljmp
ja
mov
and
mov
mov
out
jne
mov
mov
adc
sbb
scas
mov
enter
lcall
mov
mov
enter
stos
jmp
mov
and
jg
mov
scas
sub
or
fisttpl
insl
shll
mov
in
in
push
mov
cmp
pushf
cld
adc
ja
test
movsl
je
dec
cwtl
test
xchg
mov
mov
push
aas
nop
jp
jno
fwait
cmpsb
pop
pop
xchg
pop
sub
push
jnp
push
adc
push
push
sub
adc
imul
and
cwtl
xchg
jle
jecxz
push
mov
xor
xor
out
addr16
pop
daa
sub
hlt
sub
lcall
push
sub
adc
lods
out
lret
xchg
mov
fsubrp
fnstenv
jmp
popa
xchg
cmc
ret
sahf
add
mov
stos
ja
xor
pusha
jmp
mov
test
adc
sub
lret
mov
pusha
inc
cmp
mov
loop
push
xchg
or
lahf
bound
pop
xor
aas
sbb
inc
clc
repz
pop
ret
adc
lods
js
mov
cmp
popa
dec
mov
cmp
and
cli
adc
das
ds
sarl
inc
dec
xor
xchg
push
out
xchg
and
inc
pop
adc
test
outsl
clc
sub
or
adc
sbb
jmp
mov
std
fs
mov
xchg
xor
xchg
ret
cltd
push
inc
aas
iret
jo
sub
jp
pop
lods
rcll
repz
add
stos
push
lret
sub
mov
movsb
add
cmp
or
loop
mov
in
rclb
pop
sub
jne
rol
mov
cld
lea
push
push
lret
sbb
jecxz
lcall
xchg
or
loope
es
call
jecxz
pop
loop
pop
pop
ds
mov
lret
lds
mov
pop
inc
mov
je
out
das
adc
addb
mov
mov
popf
push
mov
or
movb
bound
pop
out
inc
pop
sbbl
cltd
mov
xchg
push
out
std
stos
pusha
repz
dec
in
mov
fimuls
add
cmp
ret
iret
into
dec
mov
sbb
xchg
jo
xchg
cwtl
mov
test
and
xor
sti
es
lcall
push
and
out
leave
push
push
mov
sbb
aas
sbb
jb
xor
jle
xor
xor
rorb
and
inc
cmovge
in
pushf
jnp
push
add
fmull
jae
je
fnstenv
mov
das
pop
sub
repz
fcomps
stos
sahf
insb
cmp
mov
jae
mov
dec
scas
ljmp
ret
or
cli
add
mov
inc
shl
mov
fs
cs
dec
stc
test
xor
movl
cmp
icebp
aas
mov
dec
stos
data16
loop
xchg
and
xchg
adc
pop
mov
and
shrl
push
xor
daa
pop
pop
ret
out
movsb
sub
pop
sbb
push
inc
add
or
add
lahf
fnstcw
xchg
stc
pop
push
ret
lret
ja
repnz
sbb
cmp
xchg
lods
inc
icebp
lds
ja
adc
insb
cs
cmpsl
fistpl
mov
outsb
or
mov
mov
inc
bound
mov
xor
fsubl
xchg
aas
pop
decb
and
pop
and
rcl
adc
sub
or
repz
ret
jo
sbb
jne
jbe
fcomi
out
xorl
push
push
repnz
in
mov
imul
dec
and
inc
out
mov
fdiv
sub
pop
inc
sbb
sbb
iret
push
hlt
mov
movsl
push
outsb
push
push
or
mov
cmpsb
pusha
dec
inc
sahf
daa
mov
ret
stos
repz
cmp
aaa
arpl
mov
xchg
lods
inc
push
push
shrb
adc
jne
rorb
mov
fildll
ss
shl
in
dec
push
xchg
pop
and
aas
mov
imul
fsub
xchg
adc
sub
aas
xchg
das
mov
jmp
aam
sub
ljmp
push
aad
test
loope
jae
xchg
out
das
mov
data16
cld
decb
lahf
xor
xlat
pop
pusha
ss
mov
arpl
sub
adcb
jecxz
pusha
mov
lods
ljmp
push
sub
inc
icebp
nop
loope
sub
push
pop
push
or
inc
inc
pop
mov
loopne
xchg
push
and
cmpsl
cs
or
sbb
aaa
stos
loopne
push
jmp
xchg
mov
or
dec
mov
dec
mov
cmp
add
arpl
pop
sti
jg
pop
xor
insb
enter
mov
cmp
iret
nop
push
decl
xor
and
and
mov
and
out
mov
dec
sub
lret
jne
fucomip
pop
mov
xchg
test
fisttpl
insl
jno
pop
je
xchg
adc
repz
std
orb
test
mov
inc
movsb
fs
push
aaa
cli
outsb
add
or
stos
or
adc
mov
arpl
test
lds
clc
fsub
mov
push
sti
mov
pusha
scas
ss
loope
sbb
inc
clc
arpl
or
jmp
sbb
bound
arpl
mov
cltd
dec
inc
push
pop
jge
mov
cmpsb
pop
cmp
cs
jnp
in
push
inc
mov
and
dec
cld
jp
lret
push
mov
and
sbb
jns
movsb
sbb
scas
pop
jns
lods
mov
adcb
fbstp
xchg
test
arpl
nop
popl
cmp
data16
test
push
fs
loop
mov
adc
shlb
mov
cmc
iret
aaa
mov
int
and
xor
flds
mov
jp
les
xchg
pop
popf
mov
in
jmp
nop
loop
jb
scas
shl
in
sbb
fwait
les
add
cmp
stc
aad
sub
or
inc
xchg
inc
test
jbe
jl
push
inc
mov
cli
js
icebp
stc
sub
insl
mov
mov
pop
pop
jnp
cmpsl
or
hlt
jg
pop
mov
in
jmp
stos
outsb
pop
lcall
jg
cmc
jge
inc
adc
sbb
out
or
xchg
adc
push
sub
xor
xlat
lcall
pop
push
jnp
jp
jo
push
cmp
xchg
pop
jmp
cmp
pop
or
fidivrs
mov
in
xchg
sbb
sbb
xchg
xor
fldl2e
pop
in
pop
inc
ret
jecxz
out
or
das
dec
mov
pusha
lcall
imul
pop
lahf
push
js
cmp
sub
out
das
scas
stos
sahf
cld
inc
push
test
xor
sub
popf
adc
cmc
sub
dec
mov
jg
xchg
scas
fsub
imul
jb
outsb
lods
lea
popa
pop
dec
jecxz
inc
imul
in
mov
xchg
pop
xor
lea
fisubrl
pop
add
stc
movsl
ficoms
and
hlt
jo
cld
out
add
cs
lock
scas
jle
and
push
lods
in
jmp
mov
imul
xchg
sahf
inc
sub
outsb
dec
subb
push
nop
and
jbe
in
xchg
addr16
leave
in
xorl
pop
data16
es
popa
loopne
jae
pop
and
stos
jnp
jnp
pop
jmp
jno
movsb
or
push
movd
inc
pop
loop
push
add
fcom
imul
jge
into
iret
mov
push
fdiv
popa
pop
and
ret
scas
roll
pop
or
xchg
push
xchg
or
dec
into
sbb
cltd
ss
push
sbb
dec
das
into
dec
and
rclb
pop
or
mov
push
cmp
loopne
cld
mov
adc
insb
scas
push
in
loop
icebp
xchg
fs
xchg
outsb
sub
mov
dec
mov
das
lret
fldt
inc
scas
dec
fcompl
ja,pt
scas
scas
loop
test
dec
std
inc
push
pop
and
nop
test
lock
push
dec
outsb
and
xchg
sbb
add
les
mov
mov
int3
mov
xlat
andl
jp
dec
lahf
and
push
scas
aad
ror
popa
xor
inc
pop
mov
pushf
mov
aad
adc
mov
dec
cmc
rorb
adc
in
xor
icebp
testl
push
push
ror
std
mov
dec
sub
stos
mov
dec
and
fisttps
jmp
lock
and
sbb
mov
lods
sbb
nop
cmp
adc
mov
dec
adcl
clc
or
fists
sub
mov
ret
std
lahf
sub
and
xchg
aas
movsb
data16
push
stos
sub
push
vmread
sbb
jns
cmp
rcll
and
push
mov
lahf
lds
push
mov
shll
adc
jp
lock
shlb
cmp
ret
js
aad
xlat
loopne
outsb
insl
nop
rorl
std
clc
adc
sub
mov
pop
jae
fisttpl
fidivrs
xor
dec
inc
je
imul
fimuls
push
rorl
sub
mov
loopne
sbb
xchg
outsb
test
cmp
fbstp
dec
xor
hlt
jne
les
in
js
fucom
xchg
iret
das
idivl
iret
repz
cmc
xchg
lret
jmp
and
popa
push
mov
xor
sbb
imul
shr
jecxz
lods
add
lcall
xchg
jno
cmp
in
xchg
jp
outsl
bound
adcb
xchg
inc
fdivrl
mov
stos
inc
or
std
outsb
loope
jae
jnp
mov
fs
or
and
mov
pusha
shrl
jnp
aas
iret
sub
scas
pop
fs
push
xor
and
arpl
add
sub
pop
cmpsl
stc
into
xchg
cmp
jbe
add
and
stos
sub
mov
cmp
outsl
push
movsb
call
and
cmp
inc
test
mov
arpl
shlb
pop
ss
pop
sti
xor
pop
fdivrs
inc
inc
inc
xlat
sub
shl
push
mov
mov
or
cs
sub
out
sub
sbb
mov
mov
pop
jno
xor
mov
cmpsb
stc
in
call
push
dec
ds
mov
pushl
push
xchg
in
mov
mov
mov
repnz
jns
push
mov
idivb
mov
jl
sub
mov
xchg
lea
gs
lock
mov
es
inc
int3
pop
inc
jae
cmp
sahf
orb
jge
sbb
jb
mov
add
js
aad
pop
mov
orb
or
sbb
push
mov
add
and
mov
sahf
sbb
out
lds
shr
daa
add
sti
mov
roll
push
pop
fcoml
sahf
and
daa
insb
add
xchg
lret
jecxz
outsb
cmp
push
popa
mov
push
iret
jbe
stos
fdivrl
cwtl
pushf
push
push
cltd
ror
lahf
jg
cmp
orb
dec
ret
insl
fildll
and
nop
stc
xchg
repz
mov
mov
or
or
push
xorl
mov
mov
adc
sub
push
sbb
mov
stc
mov
xchg
ficoml
iret
les
mov
mov
xchg
test
mov
xchg
sbb
sarb
div
add
test
loop
jno
scas
test
lods
movsl
lcall
lods
aas
mov
dec
inc
pop
cltd
fisttps
mov
mov
das
sbb
and
je
adc
vcomisd
call
iret
dec
fimull
jl
insl
pop
xor
lret
add
sub
int
and
inc
leave
mov
push
dec
push
pop
mov
loope
roll
pop
cs
inc
loope
lahf
loopne
mov
mov
sbb
stos
iret
xor
dec
add
jae
or
insl
mov
das
xchg
cwtl
mov
fs
or
ljmp
add
sbb
sub
fcomps
leave
xchg
pop
mov
or
jp
das
lea
push
push
adc
mov
xor
or
in
insl
inc
pop
sub
test
xchg
bswap
xor
inc
xchg
mov
daa
movsl
inc
jl
jge
pop
xchg
test
and
sbb
jo
in
shll
and
inc
cmp
loop
dec
cmp
stos
shll
into
mov
pop
cmpsl
and
mov
mov
xchg
rorb
sti
insl
mov
arpl
dec
aam
jns
or
add
mov
clc
xor
sub
cwtl
lea
int
push
or
inc
lcall
ret
cmp
mov
dec
jno
xchg
mov
cmp
shrb
adc
sbb
dec
arpl
fadds
shl
out
fbstp
push
scas
mov
insb
or
lret
cltd
aas
into
mov
loopne
sbb
mov
sub
int3
mov
cltd
ja
xor
scas
pop
sbb
scas
lea
mov
ss
fwait
sub
push
adc
jmp
cmp
cli
cmp
imul
fs
pop
out
dec
sbb
mov
int
fdivrs
fmuls
sbb
xor
adc
dec
xor
aas
push
incb
inc
jne
push
lock
pop
dec
cmpb
sub
cli
lcall
icebp
or
add
jp
xchg
or
cmp
imul
sbb
sub
xchg
mov
inc
xchg
lret
xchg
jno
mov
sbb
sbb
cmp
bound
insb
dec
pusha
and
stc
shrb
adc
push
out
pushf
aaa
aad
xchg
loop
xorl
sub
xor
adc
inc
adc
mov
jmp
push
sub
jl
rcr
clc
pop
dec
scas
outsb
and
jg
lds
in
mov
mov
repz
fs
clc
in
stos
xchg
add
inc
sub
push
mov
adc
ret
jp
pusha
jl
bound
jmp
cmp
cmp
aam
stos
int
pop
xchg
cmp
xchg
in
out
aam
loope
inc
or
lahf
xor
mov
sbb
cmp
lock
mov
rorl
push
xor
and
mov
ret
cli
jge
jne
aas
jbe
jno
push
or
arpl
sbb
fcomip
icebp
jge
push
cs
cmp
loop
hlt
pop
fld
test
loop
roll
add
mov
ret
push
jns
mov
cmp
std
ret
adc
out
data16
mov
jb
sbb
lret
clc
add
sbb
pop
mov
int
jbe
inc
mov
sar
sub
inc
mov
ljmp
repnz
setb
fists
xchg
cmp
mov
pop
nop
and
cltd
jne
add
sbb
enter
test
sbb
jbe
in
inc
cmp
pop
mov
js
repz
dec
insl
je
sbb
fisttpll
sti
dec
fcoml
jl
mul
pop
pop
lcall
fstps
ror
inc
xchg
popf
push
inc
sbb
dec
jnp
dec
push
mov
pop
sahf
ror
xorb
push
jecxz
mov
xor
lret
cwtl
insb
cmp
gs
or
and
inc
enter
pop
sub
popl
lds
xor
cld
add
outsl
imul
ds
out
je
sbb
cmpsl
lea
xorb
out
push
fwait
sbb
int3
inc
inc
jecxz
cmc
xchg
out
or
jge
int3
cmp
pop
jne
mov
fisttpll
je
xor
out
jno
lret
mov
call
cmc
out
cmp
xchg
ficoml
mov
inc
jecxz
int3
and
mov
daa
nop
mov
lret
call
mov
add
pop
sub
loopne
in
mov
cld
fbstp
leave
insl
xchg
and
test
popa
js
pop
fbstp
push
inc
shll
outsl
inc
je
xlat
fwait
cmp
fstl
sbbb
dec
cld
fldt
into
cld
repz
push
popa
cld
inc
mov
btc
sahf
xor
stos
hlt
inc
inc
xchg
xor
mov
pop
cs
lahf
mov
fldl
inc
cmpw
add
test
mov
mov
xchg
push
and
fsubrp
and
jne
mov
dec
adc
lcall
and
cmp
pop
push
cs
stc
out
test
or
sbb
lahf
mov
lahf
in
xchg
add
push
sahf
ss
mov
flds
pushf
jo
test
cs
mov
xchg
ret
fiaddl
fisubrl
add
out
arpl
fisttpll
andl
xor
dec
mov
inc
leave
dec
sti
insl
in
xor
inc
pop
lahf
and
leave
cmp
scas
pop
pop
add
push
mov
int3
arpl
adc
cmp
adc
add
outsb
rcrb
dec
and
xchg
lock
cld
test
and
icebp
jns
int3
jl
mov
test
es
mov
int3
add
inc
repz
xlat
testl
or
jb
inc
push
scas
repnz
dec
call
mov
mov
out
inc
mov
mov
test
int3
add
pop
lcall
pushf
xor
push
gs
mov
lret
pop
idivb
cmpsl
pop
xor
xchg
lret
cmc
insb
fimuls
or
sbb
sar
mov
mov
arpl
cmp
adc
sbb
xlat
mov
jle
push
scas
ret
test
sub
daa
adc
pop
pop
loope
fstpt
lret
aaa
sbb
into
or
lds
push
out
jae
or
or
out
scas
or
xchg
or
in
imul
test
arpl
and
popl
dec
cwtl
movsl
iret
mov
cpuid
rolb
test
js
imul
xchg
lods
pop
mov
aam
mov
mov
imulb
mov
sti
dec
inc
pop
das
cmp
int3
scas
scas
cmp
dec
push
int
mov
or
push
or
leave
dec
xor
rorl
jl
mov
push
pusha
jns
mov
inc
mov
jle
or
adc
cmc
xchg
mov
fdivl
dec
sahf
xor
jmp
pop
mov
pop
push
lock
in
mov
jp
jg
in
xor
xchg
aam
jne
movsl
std
inc
shl
ret
sbb
sub
stos
je
insl
xchg
xchg
lock
cwtl
push
aas
lock
icebp
out
imul
out
fsubrs
call
inc
fwait
inc
or
cmp
jmp
shlb
cld
cs
push
sub
jno
scas
sub
xor
push
cmp
adc
sub
and
lock
pop
adc
pop
and
sbbb
pushf
cmpb
vmovd
fdivl
sbb
cmp
lret
xchg
jbe
shlb
xchg
aad
or
push
mov
xchg
xor
add
cmc
mov
lret
jle
test
inc
dec
movsl
mov
cmp
pushf
rol
xor
test
stos
xor
leave
loopne
xor
ljmp
xchg
dec
mov
sub
dec
sub
or
gs
mov
fs
inc
daa
xchg
and
xor
test
lahf
repz
int
ljmp
pusha
mov
push
add
cmpsl
insl
mov
push
add
rolb
cmpsb
cmp
cmp
cmp
cmc
push
in
inc
aad
popf
into
adcb
ret
out
and
imul
push
sub
push
mov
insb
xchg
xchg
fwait
push
aaa
in
mov
js
add
pop
in
pop
mov
ja
add
jnp
xchg
push
loopne
mov
js
mov
push
cmp
sbb
push
leave
stos
xor
pusha
lock
fsub
and
dec
pop
add
imul
loopne
or
mov
mov
shll
mov
and
pop
cmp
xor
sahf
leave
push
and
ret
sbb
sarb
jg
mov
sti
out
lock
add
push
and
add
jp
mov
jo
scas
cmp
push
push
cli
inc
arpl
mov
jle
fwait
xchg
push
out
enter
mov
scas
jb
adc
js
test
sbb
sbb
add
push
add
add
pop
cmc
add
cmp
cli
jae
sbb
ret
sti
sub
add
sub
lcall
adcl
adc
jge
jle
jne
call
mov
pop
mov
shl
or
and
sbb
push
adc
or
mov
rcrb
mov
mov
jle
divb
outsl
and
mov
sbb
divb
lea
jae
xor
fisttps
call
rcrb
sbb
iret
andl
test
dec
jmp
jecxz
push
out
cmp
cmp
aam
repnz
rcrl
or
test
sub
push
mov
sub
jmp
mov
lret
jne
lret
les
push
fmul
lods
inc
addr16
lods
ja,pt
rcl
mov
fistpl
push
xor
push
push
ljmp
mov
fs
ret
in
pop
adc
fstpt
jecxz
les
nop
out
sub
ja
out
jl
or
mov
pmaxsw
mov
mov
inc
popf
add
ret
in
push
aas
ja
ret
arpl
pop
mov
pop
sub
stos
mov
inc
movsb
insb
pop
mov
dec
xchg
sub
inc
stc
roll
into
das
ret
adc
cmp
xor
hlt
jmp
mov
aaa
movsb
add
movsl
dec
xor
sbb
push
ljmp
jns
movsb
push
insb
arpl
adc
stos
lret
lret
es
mov
outsl
std
jecxz
dec
and
sti
add
sub
and
push
scas
popf
lea
mov
cmp
xchg
push
dec
push
mov
jmp
in
in
cs
and
fnstcw
orb
push
mov
or
std
or
push
adc
outsb
insb
gs
jp
les
sub
fidivs
insl
in
icebp
or
cmpb
in
jbe
lods
xor
mov
xchg
lcall
sub
sub
jg
ret
lret
inc
lds
lcall
xchg
pop
and
inc
mov
xchg
repz
mov
add
daa
mov
dec
jge
pop
fwait
daa
je
sub
xchg
xor
mov
or
dec
sbb
stc
ss
out
xor
cmpsl
jecxz
lcall
ret
add
cmpsl
xor
push
jns
jg
scas
cmc
inc
enter
mov
outsl
jg
jmp
add
xor
lahf
sti
mov
and
repnz
jg
lea
gs
dec
or
jmp
or
add
push
sti
andb
add
sbb
and
hlt
cmp
lcall
or
adc
xor
insl
jno
rclb
pop
add
mov
mov
or
mov
aaa
daa
cs
enter
ds
lret
adc
adcb
mov
add
cmp
in
lret
std
mov
outsb
sbb
andl
outsb
jae
xor
dec
iret
pop
cmp
and
jecxz
andl
in
test
jg
in
pop
xlat
fmul
loope
inc
nop
mov
xchg
shr
es
insb
jns
lods
loope
mov
mov
aas
neg
pop
jae
ficompl
rolb
cmpsl
mov
testb
jo
fwait
pop
mov
jns
pusha
cmpsl
inc
xchg
sahf
fwait
aad
aaa
popf
or
les
cli
iret
mov
jecxz
mov
jae
xchg
xchg
push
std
dec
in
mov
jge
sub
div
push
in
stc
and
shl
cmpsb
sahf
shl
pusha
mov
jb
dec
repz
sahf
jecxz
rorl
cmp
imulb
mov
mov
jae
aas
mov
movsb
mov
mov
cmp
mov
js
cmpsb
sarb
add
add
into
loop
out
int3
lea
sub
cltd
mov
dec
nop
movsb
outsb
inc
test
in
fisttpll
bnd
cmp
xchg
mov
icebp
sbb
adc
xlat
jmp
jb
xor
jl
xchg
ja
xchg
imul
mov
loope
xchg
xor
fucomip
pop
insb
test
sub
sahf
sbb
popa
test
inc
lock
adc
imul
mov
or
daa
adc
jl
sbb
pop
or
xchg
and
xlat
movsl
and
ljmp
shrb
nop
pop
pop
ficompl
fldl
lods
in
mov
out
in
ss
jae
outsl
cmp
sub
and
adcl
jmp
aas
xchg
inc
pop
sbb
lret
test
inc
pop
add
test
subl
nop
lcall
or
xor
or
mov
push
pop
in
mov
mov
inc
sarl
outsl
les
xchg
out
aas
mov
or
jb
and
inc
lods
pop
xor
sbb
or
int3
test
xor
out
and
lea
int3
mov
xchg
inc
adc
rcr
in
stos
mov
and
or
xchg
mov
hlt
aas
mov
ss
bound
andl
mov
push
jle
and
adc
adc
mov
dec
rol
mov
xchg
outsl
rorb
mov
jle
out
adc
js
mov
cwtl
mov
test
inc
sub
call
pcmpeqb
cmc
in
mov
pop
cwtl
es
jns
push
fbld
inc
stc
mov
cld
ss
fwait
enter
xor
xchg
outsb
dec
icebp
mov
mov
mov
fwait
jno
fiadds
sbb
mov
add
arpl
cld
mov
lea
ret
mov
scas
mov
xchg
push
jmp
pop
adc
ret
pop
xor
lcall
in
xchg
cmp
loop
jl
je
sti
push
lahf
cmc
inc
mov
xor
aaa
mov
inc
inc
inc
pop
rol
adc
mov
jp
repnz
push
mov
mov
sbb
in
push
dec
das
push
aad
jbe
adc
add
add
in
test
mov
xchg
iretw
xchg
push
fwait
xchg
inc
cmp
ljmp
xchg
xor
push
fucomip
sbb
pop
leave
negb
pop
sbb
scas
aaa
sub
cmp
dec
gs
cmpl
je
dec
filds
mov
in
iret
dec
bound
shl
push
sub
jp
outsb
jmp
and
xchg
aas
xor
test
inc
icebp
out
cld
push
jl
cmpsl
inc
xchg
or
mov
outsb
cmpb
cmp
jae
adc
mov
cmpsl
repnz
movsl
sar
jl
xor
les
in
mov
inc
mov
repnz
pop
push
cmp
add
pop
shlb
pop
cmpsb
shrb
loop
out
iret
dec
push
pop
add
inc
sub
or
and
sub
xor
das
hlt
loopne
xchg
add
out
daa
loope
out
sbb
ja
xor
jns
mov
cmc
push
lock
push
in
jb
movsl
cld
mov
add
test
or
stc
cmp
sub
lods
dec
add
sub
cltd
inc
inc
pop
pushf
lret
jp
enter
jns
lea
shlb
sahf
sbb
dec
sub
push
jp
pop
sub
lds
inc
mov
mov
rcrb
jle
xor
int3
add
or
inc
mov
mov
jb
cmp
adc
sub
add
jle
cmpsb
and
cli
or
mov
xor
hlt
inc
lds
xchg
test
pop
inc
nop
xor
xchg
out
add
leave
stc
in
insb
loopne
dec
and
sti
xlat
sub
cmpsb
out
pop
in
push
loope
xlat
inc
icebp
jmp
lock
psrad
pop
mov
call
xor
test
in
test
xlat
push
dec
push
out
movups
push
mov
xchg
adc
dec
push
fcomp
popf
and
mov
cmpsl
add
add
push
pop
dec
mov
div
add
movsl
dec
mov
add
xchg
out
aam
outsl
jne
test
maxps
and
movsl
sbb
imull
daa
push
sub
divl
sub
in
popf
mov
imul
adc
xor
and
dec
dec
scas
ret
jnp
into
xchg
inc
and
aam
pop
jecxz
out
adc
and
mov
mov
jno
pop
push
pop
mov
aaa
mov
jg
out
fists
xlat
leave
jg
dec
sarb
pusha
jns
push
inc
push
insb
mov
and
push
add
scas
dec
ds
imull
rcl
aad
dec
adc
sbb
jl
jae
loopne
xor
std
int
xorl
ret
inc
movsl
cli
outsb
add
xchg
push
sbb
mov
ret
out
dec
add
shrb
sti
mov
jp
add
xchg
xor
pop
sti
dec
popf
leave
fcoms
add
loope
and
rcrb
sti
sbb
adc
ficompl
ret
xor
push
mov
mov
cmp
pop
mov
lds
andl
pop
fcmovne
rcrl
loope
dec
loopne
dec
out
movsb
jle
dec
xchg
push
or
cli
ljmp
jecxz
scas
stos
cmp
cs
fs
jns
scas
aam
pop
mov
addr16
and
aad
loope
rol
mov
sub
jae
addr16
sub
lret
xorb
push
mov
or
jo
jmp
adc
mov
xchg
scas
outsl
and
jae
imul
mov
sub
sbb
cld
ljmp
jle
xchg
jnp
pop
jecxz
lcall
adcb
scas
cs
lock
inc
insl
lret
push
push
jg
mov
push
and
xchg
mov
jle
ja
sbb
hlt
and
outsl
push
repz
sbb
xchg
sarl
mov
push
roll
ljmp
xchg
mov
push
std
test
into
into
imul
jecxz
jnp
push
out
mulb
lret
loopne
mov
adc
adcl
pop
xchg
scas
pop
jbe
and
and
repz
adc
mov
int3
xchg
lret
fwait
ds
push
in
mov
inc
rcl
mov
jae
adc
sub
adc
push
xor
into
rcl
pop
inc
dec
mov
repz
lcall
sbb
lds
clc
popf
test
mov
add
mov
push
push
test
dec
dec
mov
sub
insb
sbb
pop
icebp
clc
push
mov
cmp
cmp
inc
xlat
add
mov
hlt
les
cmpsl
inc
xor
mov
mov
jns
dec
lahf
mov
push
insl
mov
mov
in
stos
mov
jb
fldenv
sub
orb
adc
jg
cwtl
push
inc
ljmp
pop
mov
sarb
cmpb
icebp
jp
call
cld
mov
push
sub
mov
cmpsb
xchg
and
sahf
push
lret
movsb
fs
push
pop
ds
mov
enter
lock
cld
popf
pop
add
lahf
dec
fwait
cwtl
fdivrs
push
es
add
cltd
cmpl
jmp
cmp
xor
jo
xor
jg
fdivrs
mov
dec
mov
push
and
fsubp
je
lea
mov
lock
dec
push
cld
rcl
sti
cld
dec
push
aas
mov
rcr
and
adc
add
cltd
and
aad
dec
test
ja
push
pop
out
push
in
push
mov
daa
cmp
push
sbb
inc
and
cs
rcrb
mov
push
pslld
xchg
je
ja
arpl
testb
rcl
and
adc
cli
jmp
dec
aam
insl
shr
push
outsb
push
inc
pop
in
and
mov
adc
rclb
pop
clc
imul
arpl
mov
fldcw
nop
sbb
mov
xor
fstps
dec
loope
stos
dec
bt
pushf
iretw
xchg
add
pop
addr16
mul
fcomps
jbe
aas
jge
repz
roll
in
jno
cwtl
cld
fimull
or
inc
scas
rcr
dec
out
loopne
jnp
pop
imul
adc
push
out
mov
mov
out
push
jg
nop
dec
sbb
mov
and
clc
lret
or
push
jmp
icebp
jne
pusha
or
pop
mov
loopne
aaa
jno
cmp
xchg
ret
loop
pop
mov
cltd
jg
stos
mov
mov
cmpsb
lods
jmp
jo
xchg
push
mov
fbld
jbe
je
in
mov
rcrb
mov
cli
adc
fs
and
pop
leave
sbb
lods
loop
test
cld
inc
mov
sub
mov
cli
inc
inc
cld
inc
and
mov
dec
sub
ljmp
das
jmp
push
push
adc
cld
rorb
xor
inc
cmp
push
lret
xor
mov
sbb
mov
fildl
pop
and
and
push
jg
jl
fistps
mov
push
lcall
loopne
mov
shll
sub
arpl
push
mov
and
pushf
mov
dec
and
dec
xchg
push
sub
and
xchg
cld
mov
ljmp
jns,pt
sub
cmpsl
xchg
sbb
push
daa
sti
popa
inc
dec
cmp
arpl
ja
std
push
xchg
imul
iret
jg
inc
testl
aad
or
data16
stos
orl
decb
push
stos
add
mov
pop
fs
mov
jbe
scas
fadds
roll
cmpsb
ret
xchg
shll
loopne
pop
test
pop
xor
int3
mov
jnp
pop
add
mov
or
push
cmp
test
and
xchg
pushf
jae
or
fs
aaa
or
cltd
stos
movsl
stos
inc
sub
roll
mov
icebp
stc
mov
scas
mov
sarl
add
xchg
add
cld
add
aaa
aad
mov
scas
loopne
shll
outsl
shlb
dec
fisttps
out
jb
loopne
sbb
andb
sar
das
cli
or
in
and
mov
je
fimull
lcall
aad
cmp
dec
cmp
sbb
vpcomd
sbb
mov
in
adc
incl
loope
sahf
inc
mov
ds
mov
mov
mov
cmp
cltd
xor
sub
dec
imul
rorb
movsl
ficoml
std
sbb
sbb
sub
mov
negb
insb
data16
xor
mov
mov
je
icebp
jno
and
inc
popa
mov
loop
xchg
popf
jb
gs
adc
dec
sub
ret
jns
aad
push
jae
fwait
test
sbb
out
inc
jno
repz
arpl
and
rorl
jmp
mov
call
mov
insb
jp
popa
rorl
dec
push
pop
repnz
bound
add
add
cmp
jo
lret
out
push
popf
add
cs
iret
ja
cmp
mov
sbb
cli
daa
sbb
xchg
sbb
mov
xor
mov
mov
pop
push
subb
mull
test
cmpsl
and
and
repnz
movsb
cmp
jecxz
push
mov
in
imul
jo
mov
push
mov
push
cmp
mov
test
mov
lret
loopne
mov
jmp
divb
xchg
dec
inc
lahf
jb
movsl
push
push
fdivrs
mov
lret
in
and
lahf
test
loopne
leave
les
outsb
shl
mov
bound
adc
nop
gs
xor
in
sbb
mov
out
sbb
stc
jo
cltd
hlt
xor
mov
dec
lret
xchg
mov
mov
inc
mov
stos
dec
cltd
lret
jge
std
xor
jnp
or
pop
inc
ja
push
cmp
mov
push
push
jp
lds
sbbl
cmp
push
inc
out
outsl
stc
inc
push
push
in
fsubs
fistl
mov
add
jnp
mov
mov
dec
fmuls
movsb
lret
mov
dec
jb
cs
or
xor
jns
mov
ja
out
sub
dec
test
pop
pop
push
mov
dec
cli
pop
stos
pop
test
and
ret
subl
sub
xor
iret
add
insb
mov
mov
dec
sbb
jg
ss
xchg
jge
push
pop
sub
lods
mov
xor
mov
in
pop
xchg
xor
in
scas
and
ret
xchg
je
divb
popa
mov
repz
cmp
jns
mov
inc
cs
inc
mov
sub
cmpsb
add
pushf
pop
sub
pop
add
cmp
mov
in
mov
mov
pop
lret
loope
outsb
cs
push
add
jb
dec
jne
int
popf
mov
push
outsb
lds
push
iret
cli
inc
dec
cmpsb
push
inc
sbb
push
dec
fwait
push
notl
pop
loop
xchg
add
data16
adc
xor
and
add
lds
jae
jbe
les
rcrb
mov
xchg
or
jmp
cmp
inc
in
ljmp
jae
pop
addb
mov
cmp
fisubl
mov
sub
jne
and
scas
fstps
cmpsb
in
xchg
int3
xchg
sarb
sbb
pop
xor
stos
lea
xor
mov
fdivrs
sbb
mov
int3
lret
and
mov
xor
sbb
shl
lock
icebp
cli
inc
fwait
sbb
cs
xor
push
cld
lret
sbb
adc
inc
and
adc
adc
or
mov
adc
dec
mov
pushf
je
repnz
shrl
filds
in
mov
lcall
jg
push
lock
stos
sbb
shrb
and
push
out
mov
fisubs
sarl
jae
jbe
push
or
push
sbb
mov
js
leave
sub
imul
sbb
adc
into
shr
sbb
repz
fcomp
and
and
fbstp
div
xchg
movb
sti
pop
ss
sarl
out
scas
lcall
icebp
mov
test
in
test
aad
int
xor
leave
clc
cmpsl
repnz
mov
mov
mov
flds
daa
pop
mov
push
aam
add
sub
xchg
iret
xor
test
add
aam
sbb
xchg
mov
call
jo
jne
imul
mov
jp
bound
popf
bound
inc
and
fisubl
repnz
in
cmpsb
cmp
ficomps
cld
aam
mov
mov
push
gs
cltd
cmp
cmpsb
dec
mov
int
add
in
ret
jl
or
lret
cwtl
inc
xchg
aas
cmpsb
push
clc
incl
xchg
sbb
rcl
xor
cli
js
daa
inc
test
and
sub
movsb
imul
outsl
jae
test
shl
into
iret
repz
jae
cmpsb
sahf
imul
andb
mov
xchg
sbbl
push
addr16
jmp
mov
jno
icebp
ret
daa
push
test
mov
mov
pop
repz
jnp
mov
cli
cmp
int3
fdivrs
jno
or
adc
adc
mov
fiadds
enter
js
ret
jne
repnz
dec
mov
xchg
mov
cmpb
cli
xor
mov
jg
dec
mov
out
adc
or
jge
jae
and
xor
cmpsl
push
pop
stos
mov
ds
aas
scas
inc
inc
dec
jle
dec
pop
lds
hlt
push
xor
call
xchg
mov
adc
sbb
outsl
jnp
sarb
clc
insb
das
sub
adc
aaa
lret
fsubr
test
out
call
ss
mov
hlt
push
js
jecxz
jge
pop
and
cmc
popa
mov
pop
or
addr16
mov
insb
leave
out
arpl
lock
out
mov
fstl
push
sub
in
divb
pop
jp
hlt
sti
pop
sar
pop
fisubrs
mov
jmp
inc
adc
es
out
jb
pop
cs
clc
inc
push
jne
mov
imul
jo
icebp
cwtl
movb
sbb
jle
jnp
sbb
sub
call
mov
js
push
dec
or
jae
movsl
push
fwait
xchg
cmp
pop
adc
fimull
or
dec
loopne
inc
notl
push
and
push
idivl
fsubrs
daa
adc
imul
testl
push
js
cmc
jns
popf
mov
int3
clc
xlat
cltd
sarl
pushf
rolb
add
pop
repnz
fsubs
insb
push
dec
push
mov
js
mov
dec
mov
cmpsl
mov
sub
je
inc
fcomps
popf
pop
ret
adc
cmp
push
xchg
pushf
inc
out
jecxz
repz
mov
ja
mov
jp
xor
jae
add
hlt
mov
lods
sbb
mov
mov
nop
mov
imul
pop
pop
sbb
or
cmp
inc
stc
xorb
ficoms
push
jns
call
outsl
fwait
xchg
mov
das
lahf
in
aaa
jmp
mov
inc
fucomip
fiaddl
xchg
hlt
add
leave
xchg
push
xor
xchg
push
add
add
inc
mov
out
jge
sbb
or
or
mov
mov
push
jae
cld
sub
xor
aam
xor
xchg
divl
lcall
in
xchg
and
leave
lcall
xor
push
lods
pusha
jle
ret
cmc
push
je
test
cmp
aas
xrelease
pop
sbb
ss
jmp
gs
outsb
int3
and
adc
popf
push
push
xor
pop
sbb
cs
or
dec
pop
push
fwait
adc
jg
loope
into
or
leave
xchg
cld
adc
insb
xor
addr16
or
rorb
xor
cmc
in
inc
inc
pop
push
add
loope
es
and
jg
xor
mov
xor
adc
test
xor
fdivs
pop
cbtw
aas
roll
and
cld
inc
dec
and
fs
push
push
fisttps
cmc
mov
mov
xchg
mov
lcall
fildl
dec
push
push
sub
mov
mov
repnz
bound
mov
xlat
lods
enter
fwait
test
adcb
mov
dec
shrl
out
pop
movsl
stc
les
loope
dec
push
adc
add
mov
mov
int
shlb
xchg
fyl2xp1
pop
jmp
sbb
pop
ss
test
mov
push
mov
sti
push
mov
xchg
inc
div
sar
stos
push
repz
ret
mov
sahf
pop
and
repnz
mov
out
pop
call
loopne
dec
sub
dec
pop
xchg
stos
pop
cmp
cwtl
add
rcl
dec
ljmp
jg
lcall
adcb
cmc
mov
inc
fisubrl
mov
int3
movsb
adc
rcl
js
sbb
aam
arpl
mov
adc
mov
sub
sub
leave
mov
xchg
mov
andb
or
fidivrl
outsb
push
dec
sub
clc
and
pushf
inc
and
dec
loope
mov
cmc
das
cmp
sub
sbb
mov
xor
pop
cwtl
push
cmovo
pop
ret
jnp
pop
test
cld
fstp
movsb
add
int
adc
into
push
popf
leave
repnz
pop
xor
mov
iret
insl
mov
aad
cmp
jle
icebp
sbb
stos
in
jmp
xchg
sub
dec
xor
add
add
jl
cmp
gs
aad
insw
and
mov
or
fmuls
repnz
fsubrp
xchg
sbb
pusha
lcall
gs
cs
cltd
mov
mov
jmp
es
dec
adc
ss
nop
adc
insb
out
mov
loop
jl
push
jne
cmp
xchg
daa
cwtl
hlt
imul
or
in
xchg
cmp
sahf
fcmovnb
sbb
jge
icebp
stc
pop
mov
in
ret
pushf
loop
dec
shll
sbb
test
xchg
dec
or
or
test
pop
outsb
sub
jmp
mov
jae
pop
push
sti
pop
jecxz
inc
dec
movsl
enter
je
pop
push
adc
test
js
loopne
mov
cmp
cmpb
loop
and
inc
js
push
aam
push
pusha
cs
js,pn
pop
adc
adc
ret
cli
pop
inc
cmp
cmp
xor
push
fcmovne
iret
lea
push
lods
ss
mov
mov
lret
sub
sbb
jbe
and
imul
inc
jle
dec
cmp
pop
inc
mov
mov
fldl
fucomip
mov
push
rclb
push
pop
cs
mov
adc
mov
dec
imul
je
sub
fistps
jp
jae
mov
dec
pop
fsubrl
js
sarl
fisttpll
push
in
jp
adc
stos
sub
lea
mov
leave
mov
loop
push
sbb
arpl
out
das
ret
mov
push
inc
push
hlt
div
popa
mov
loope
push
popa
add
push
jae
sbb
bound
sbb
push
icebp
jbe
in
xchg
in
sub
mov
in
pop
xor
int
test
mov
enter
sti
mov
pushf
ret
sub
push
fmull
outsb
pop
adc
icebp
add
or
icebp
cli
int
dec
push
mov
mov
std
push
cmp
out
mov
loope
jl
sti
js
das
jb
xchg
cmpsb
cmp
sbb
xor
sub
je
cmc
xor
stc
jb
sub
movsw
in
mov
clc
jp
ss
mov
fnstenv
mov
push
dec
push
xor
sub
out
adc
pop
sbb
aas
jp
rcrl
dec
jmp
rcrl
mov
mull
dec
mov
das
icebp
push
mov
xor
mov
les
and
aad
ret
add
mov
push
aas
nop
mov
nop
fstps
jecxz
inc
js
out
or
ljmp
hlt
enter
cmc
sbb
or
dec
dec
sub
sarl
xchg
or
loope
iret
pop
adc
dec
int
or
xchg
or
jns
xchg
add
push
mov
mov
bound
jmp
push
xor
popa
inc
ja
sahf
ss
jmp
add
lea
daa
cwtl
mov
fwait
inc
adc
push
test
addr16
mov
leave
adc
sub
fbld
out
loope
push
sub
or
insb
movsb
pop
xchg
xchg
inc
sbb
insl
pop
dec
stos
xchg
shrb
jmp
or
mov
aas
decl
mov
or
jmp
das
sahf
ret
out
popf
add
imul
sub
pushl
mov
cmp
call
cmp
xchg
call
mov
xor
mov
or
lcall
gs
fldenv
popf
jmp
adc
mov
adc
fbstp
mov
push
mov
ja
jae
mov
rcrb
or
in
mov
and
dec
lret
int3
xchg
inc
sub
rolb
lret
cld
or
repnz
aad
or
js
daa
rorl
xchg
and
sub
xchg
mov
fcomps
fldcw
sub
lea
xchg
fldcw
sub
cli
push
xor
mov
out
cltd
les
sbbl
pop
shl
pop
nop
sub
jle
and
ret
test
imul
adc
aaa
mov
outsl
ret
dec
das
push
lods
movsl
clc
out
cmp
mov
adc
fnstsw
outsl
add
sti
or
test
cltd
in
lock
jbe
pushf
dec
sub
movsb
jle
xor
es
mov
addl
sbb
gs
pop
push
pop
or
aas
lret
ds
test
push
push
sbb
addr16
pop
sahf
jp
jb
das
aas
movsl
loopne
pop
jb
push
push
ja
dec
and
sbb
insb
sub
test
hlt
hlt
into
enter
movsb
push
xor
mov
pop
std
inc
nop
scas
repz
add
in
data16
sub
mov
idivb
and
lea
push
mov
loopne
or
or
mov
pop
xchg
in
jnp
push
sbbb
push
xchg
mov
test
dec
ret
mov
lods
rolb
aaa
dec
fsub
sbb
rcl
or
pop
pop
and
dec
in
push
mov
sahf
ja
lds
push
scas
push
mov
aam
sub
cmp
lock
mov
inc
and
stos
and
pop
or
mov
hlt
faddl
loopne
or
das
jl
xchg
xchg
cltd
cmp
rolb
xor
mov
gs
sbb
pushf
sbb
mov
hlt
icebp
adc
push
mov
lock
mov
repnz
enter
adc
maxps
jp
sub
add
lea
insb
lock
pushf
shlb
push
mov
push
lods
cmp
sub
mov
adc
leave
hlt
nop
mov
insl
dec
push
popf
or
push
outsb
mov
mov
ret
xlat
and
push
faddl
data16
jmp
cli
pop
lock
xor
sub
iret
push
add
sub
push
xorb
dec
pop
mov
outsb
out
je
movsl
fisubs
es
adc
pop
popa
xchg
dec
jns
xchg
pop
enter
rcr
mov
cmpl
pop
adc
jp
fsub
pop
hlt
pop
lds
push
and
int
insb
xor
imul
add
ljmp
jl
cmc
rcrl
dec
rcl
inc
movsb
je
ret
adc
mov
jle
mov
push
mov
shlb
stc
mov
sbb
clc
popa
jl
adc
test
loopne
fildl
or
and
rorb
push
xchg
pop
lret
lock
decl
ret
jge
mov
push
push
pop
aas
lahf
cmp
cmp
and
dec
cmp
mov
pop
sbb
push
jb
pushl
enter
jge
cmp
or
decl
loope
cmp
jbe
stos
jo
mov
test
out
pop
mov
jns
cmp
subl
jmp
mov
mov
push
mov
dec
sub
adc
cmp
stc
outsl
inc
push
jbe
test
dec
enter
xchg
inc
shll
mov
jne
scas
orl
or
in
and
fistpl
shlb
cltd
sahf
pop
rclb
repnz
mov
pop
in
mov
dec
ja
jnp
cmp
loopne
fisttpll
inc
inc
mov
loop
inc
sub
fidivs
stos
mov
insl
push
stos
push
rclb
ror
push
bound
or
pop
js
xchg
test
loop
sub
nop
and
test
gs
mov
jl
jp
mov
int3
fimull
fdiv
shr
int3
mov
jp
lock
icebp
sub
enter
push
loope
cltd
adc
scas
xor
pop
jle
ja
lea
aas
push
shlb
js
mov
sub
adc
adc
nop
dec
lahf
mov
sbb
jno
js
mov
fimuls
sbb
out
push
add
inc
push
in
jp
cmpsl
pop
fs
sub
push
jle
cmp
xchg
push
repz
pop
add
mov
outsl
cmp
or
cli
jmp
mov
ret
xchg
push
dec
mov
mov
adc
sub
adc
push
loopne
inc
andb
push
pop
pop
test
push
and
test
xor
adc
inc
xchg
xchg
scas
inc
inc
mov
clc
mov
jbe
shlb
shr
ljmp
push
adc
mov
fistpl
xor
mov
mov
xchg
das
mov
adc
enter
repz
je
sbb
arpl
rcrb
fimuls
sub
cmp
inc
cwtl
mov
jne
sub
jg
lahf
daa
push
out
jecxz
mov
sbb
sar
popa
dec
jo
stc
fsubr
rcll
in
bound
lock
inc
push
xor
mov
dec
pop
sbb
inc
mov
call
cmpb
fisubs
pop
sahf
push
ret
or
scas
or
js
js
sub
or
inc
inc
lahf
pop
add
call
les
cmpsl
push
xchg
or
adc
adc
xchg
loopne
dec
push
cmp
outsl
mov
push
push
mov
pop
xchg
xor
pop
adc
pop
cmp
push
lcall
mov
push
jg
bnd
mov
mov
pusha
sbb
aas
cs
andl
aas
gs
mov
in
sar
out
mov
int
mov
adc
cmp
rclb
mov
inc
jnp
lock
mov
sub
xchg
xor
icebp
xchg
pop
pop
fs
jnp
push
pop
aad
sti
std
sahf
fdivs
dec
shll
pop
and
cmp
fimull
int
loop
adc
movsb
aam
xchg
and
stc
imul
pop
sub
mov
in
pop
pushf
cmp
pop
shll
adc
das
int3
stos
and
mov
xor
aad
and
xor
xor
cmc
decl
aad
or
pop
and
push
mov
xchg
cltd
xchg
fimull
mov
pop
cmp
push
ror
xor
mov
dec
jg
inc
mov
push
aam
push
push
mov
push
cmc
cli
jg
mov
push
scas
sub
nop
inc
aad
mov
mov
xchg
or
lret
movsb
subl
popf
rcrb
add
push
stc
cs
mov
add
stos
rcrl
imul
jl
fisttpll
popa
cmpsl
mov
pop
orl
fmull
sti
cmp
push
shrl
sbb
and
orl
and
xor
fisttpl
xchg
mov
jg
mov
aam
stc
fidivrl
push
pop
mov
or
sub
imul
test
std
lret
in
fcomps
ret
stos
mov
test
inc
and
insl
inc
and
arpl
rcrl
nop
pminub
call
pop
sub
repz
inc
adc
sub
xchg
call
jg
out
andl
mov
adc
je
cmovae
daa
xor
fsubl
andl
jnp
insl
xchg
rorb
pop
add
lcall
add
cmc
mov
push
sahf
xlat
mov
lds
jne
cmp
adc
int3
inc
gs
pusha
xor
stos
cmp
cmp
test
pop
cwtl
lods
inc
decl
test
inc
imul
outsl
stos
and
xchg
adc
fisubs
jge
ljmp
fs
jnp
dec
push
push
in
mov
push
bound
xor
out
pop
dec
pop
das
loop
loope
pop
addr16
adc
cmp
les
sbbl
lock
stc
imull
fs
shll
pushf
jb
ljmp
lahf
and
lcall
nop
xor
adc
pop
movsb
xor
xchg
fs
das
mov
das
xor
arpl
cmp
rorl
mov
jge
mov
inc
shlb
fcomps
aaa
jae
lret
add
scas
mov
inc
ret
push
sbb
inc
adc
add
inc
fnstenv
call
jge
xchg
push
repnz
cmp
sbb
pop
in
and
imul
divb
clc
or
jno
sbb
into
inc
fsubl
cmp
push
inc
jmp
ret
shll
sub
jp
sahf
mov
pushf
pop
arpl
jl
pop
adcl
inc
inc
sbb
xchg
outsb
mov
pop
dec
data16
roll
mov
js
adc
xor
fs
aam
fwait
inc
dec
mov
jns
xchg
stc
sub
jb
sahf
push
and
mov
or
jmp
dec
inc
cmpsb
mov
dec
xchg
dec
pusha
mov
mov
imul
pop
fisubl
lock
fsubrs
call
and
rorb
or
xlat
and
xchg
mov
imul
or
dec
mov
push
xchg
pop
fcmovu
inc
jno
adc
jmpw
mov
loopne
inc
das
xchg
in
stc
ljmp
sahf
xchg
or
pop
xlat
push
cmp
popl
pop
sub
push
dec
and
jecxz
adc
and
sub
pop
jae
xchg
jns
xorb
xchg
or
adc
cltd
in
add
add
xchg
sub
add
mov
dec
cmp
or
add
xchg
insb
mov
cld
pop
cld
mov
rolb
or
fldcw
movsl
push
stos
and
lods
xor
sbb
mov
rcrb
adc
daa
les
cmp
das
add
popa
test
cmp
dec
dec
xchg
into
jmp
test
jmp
out
adc
fisubl
push
mov
ds
cmpsl
xor
mov
add
pop
iret
xor
sbbb
jmp
sbb
mov
xlat
push
cmp
into
sbb
je
xor
rcll
cltd
rcl
repnz
adc
sbb
gs
sub
mov
test
adc
cmp
repz
mov
xor
orb
int3
xor
scas
jnp
or
es
data16
fs
nop
test
jmp
cmp
out
dec
mov
mov
pusha
inc
lods
jo
outsl
mov
inc
cli
mov
jo
add
or
cmp
mov
cmp
lcall
inc
sub
add
ficoms
mov
out
xchg
mov
inc
aad
pop
adc
mov
pop
ret
shll
jecxz
sbb
fcompl
mov
xchg
js
iret
lret
pop
movsb
jge
dec
scas
testb
push
fwait
loope
sti
xor
pop
add
mov
jg
and
test
mov
push
jne
sub
xchg
xchg
mov
xchg
add
mov
xchg
sub
add
mov
into
sbb
fsubs
pop
sub
out
test
jnp
pop
dec
clc
mov
lcall
mov
daa
dec
cltd
clc
mov
rorb
lock
xchg
xchg
xchg
fst
movsl
in
or
insb
nop
pop
mov
mov
sbb
loopne
mov
popf
xlat
leave
cltd
dec
mov
adc
inc
dec
cmpsl
and
xor
and
ljmp
mov
mov
jno
ficoml
out
xlat
dec
push
jne
mov
cmc
iret
xchg
inc
and
pop
test
lcall
scas
fmul
xor
jae
sbb
or
in
push
xor
xchg
jg
xchg
xor
mov
in
xor
push
cmp
add
add
movsl
sti
lret
loopne
fidivl
dec
or
mov
movsl
or
jmp
add
sbb
add
inc
mov
xor
jge
jecxz
rorl
xchg
into
sub
sbb
mov
fcmovnbe
lods
xor
and
ja
std
sti
in
and
sbb
cmp
into
pop
push
ja
popa
xor
xlat
std
dec
cltd
loope
inc
in
cmp
fstl
jne
hlt
mov
jnp
xchg
jo
xchg
jno
addr16
mov
sub
pop
xchg
scas
sub
lea
mov
dec
lods
mov
adc
shrb
xchg
sarb
fldln2
int3
push
sbb
mov
adc
into
dec
cmp
mov
add
xchg
lret
mov
jbe
and
or
or
inc
push
push
inc
lea
pop
out
pop
nop
test
mov
mov
clc
imul
dec
nop
adc
cmp
cmp
mov
adc
loope
or
jl
push
sub
cmpsb
andl
xchg
dec
sub
sbb
out
lods
mov
roll
bound
jge
adc
divb
sub
jecxz
les
sbb
sarl
clc
test
push
ds
ss
lods
pushf
stc
and
xor
sub
xchg
movsl
and
jbe
xchg
jecxz
out
pop
movb
mov
jo
pop
sahf
jge
outsb
mov
aad
ret
negb
gs
jge
lock
adc
and
jno
scas
push
pop
push
jg
push
push
or
sti
or
mov
and
in
cmp
cmp
xor
ret
lea
sahf
icebp
cmp
out
outsb
add
sbb
outsl
mov
mov
add
push
and
sarl
pop
xor
xchg
stos
cwtl
pushf
rep
clc
jb
cmp
lret
or
or
push
imul
or
and
sarl
cli
fildll
mov
loope
sub
jl
cmc
out
rcrb
and
faddl
mov
jge
xchg
dec
dec
repnz
sub
xchg
xchg
adc
fstpt
jl
sahf
mov
repnz
adc
out
push
scas
test
jne
scas
mov
imul
push
or
outsb
mov
inc
inc
pop
iret
and
js
mov
rorb
xchg
cmp
mov
lods
push
dec
jo
out
jbe
and
fdivrl
ds
lods
repnz
into
lods
idivl
sbb
push
xchg
sub
andb
icebp
mov
mov
xor
jp
dec
pop
lret
add
test
jne
aaa
pop
lock
and
outsl
and
pop
cli
adc
push
push
adcb
push
jg
js
movzbl
push
pop
dec
adc
adc
out
aad
jo
dec
adc
cmp
cmp
les
test
rcll
sti
cmp
push
icebp
mov
lcall
and
mov
movsl
xor
xlat
aam
mov
hlt
xlat
faddl
ja
jg
mov
pop
xchg
and
inc
mov
aam
into
mov
push
jmp
sub
pop
aad
xor
xchg
xchg
test
das
xchg
jecxz
jl
ja
or
shlb
cmp
mov
sub
push
jno
or
je
and
fsubp
jmp
inc
lods
or
cltd
jecxz
push
inc
lock
cli
push
lds
icebp
push
sbb
sarl
bound
loopne
lret
sub
cmp
out
mov
xchg
mov
dec
xchg
sbb
pop
mov
aaa
insb
je
outsl
ret
gs
xchg
dec
push
or
test
push
loope
and
push
adc
and
or
fwait
mov
mov
push
nop
pop
neg
push
stos
dec
cwtl
push
push
call
mov
int3
mov
cmpsl
loop
int3
sbb
cmpsl
jp
mov
fstpt
adc
fnsave
sbb
push
dec
mov
incb
pop
dec
jge
jo
pushf
or
xchg
push
xchg
cmpsl
jmp
lock
sti
or
mov
aad
add
cmp
fimuls
push
xlat
jno
cmc
ret
adc
int3
lahf
pop
fmul
fisttpl
xor
les
sbb
neg
mov
jmp
aaa
cmp
and
mov
jg
add
adc
and
jnp
cltd
cwtl
inc
mov
ret
sbb
repz
pop
gs
pusha
dec
ljmp
pop
and
xor
lods
outsl
test
test
jae
ss
ljmp
xor
mov
pop
pop
std
or
popf
mov
ja
jge
scas
or
setbe
stos
xchg
xor
ret
and
xchg
xchg
mov
inc
and
test
push
cld
cmpsl
dec
adc
rcrb
sub
xchg
movsl
push
xor
adc
cmp
fnsave
leave
lods
inc
das
mov
rcrb
pop
push
jle
mov
test
mov
dec
and
push
jne
aaa
shlb
insb
jmp
and
jmp
adc
mov
bound
addr16
inc
push
xor
adc
jge
mov
sub
inc
mov
mov
mov
sub
daa
mov
repnz
out
mov
and
rorl
mov
adc
jl
dec
and
pop
push
dec
lods
push
out
das
bound
scas
sub
test
test
jb
inc
xor
pop
dec
inc
jns
mov
data16
pusha
mov
mov
idivl
dec
mov
movsb
aaa
fdivrl
sub
das
and
xchg
inc
jo
lret
addr16
mov
jge
pop
rorb
xor
or
adc
add
add
leave
xchg
inc
test
fsub
cmp
lahf
inc
rolb
jnp
aas
popf
sub
inc
testl
sub
and
shrl
fmulp
dec
je
and
int3
cmp
sahf
xchg
enter
mov
pop
ljmp
mov
jmp
jo
out
xchg
adc
mov
decb
sar
cltd
inc
xchg
aas
aad
cmp
dec
addr16
mov
mov
mov
lret
cmp
out
xchg
pop
aad
cltd
or
or
xchg
stc
push
dec
push
jnp
test
mov
subb
in
push
daa
mov
into
pop
sub
cmpsl
cltd
in
mov
and
imul
adc
ljmp
or
fsubl
loopne
pop
cmp
push
pusha
out
xchg
push
pop
bnd
adc
repnz
push
inc
call
insb
jns
popa
ficoml
push
call
pop
push
add
xor
add
pop
test
dec
jmp
jns
cmp
loopne
sub
inc
cli
out
pushf
mov
iret
mov
int
mov
gs
icebp
shl
cltd
xchg
negl
dec
mov
push
xchg
or
aam
rol
iret
jae
xchg
clc
pop
jge
enter
fstpt
scas
imul
clc
mov
or
pop
mov
xlat
inc
test
ljmp
aad
fmuls
xchg
aaa
or
fdivs
mov
pop
mov
cmpsb
pop
inc
scas
stos
es
mov
xchg
xchg
leave
hlt
inc
jl
pop
shl
inc
movsb
dec
fcompl
lret
aad
fdivr
jns
dec
sbb
je
shll
lcall
inc
outsl
sahf
sbb
adc
popf
pop
jb
sub
in
mov
adc
fistps
xor
loop
xchg
xchg
cmp
pushf
pop
mov
sub
sti
in
imul
cmp
es
pop
mov
fmull
dec
icebp
push
in
repz
dec
push
iret
insl
and
sub
mov
cmp
in
stos
iret
test
xchg
loopne
adc
push
push
jno
mov
mov
cmp
cmp
les
cmp
pop
in
jecxz
je
movsl
repz
pusha
lahf
sub
mov
jae
movsl
call
add
sub
data16
popa
and
movsb
jne
shl
push
fxtract
mov
xor
sbbb
mov
dec
add
xchg
jecxz
je
or
mov
lea
cmp
fdivrp
pop
call
cli
pop
leave
adc
loop
ja
dec
cltd
loopne
jbe
cmp
jge
add
push
xchg
sbb
jg
test
dec
inc
icebp
dec
icebp
cwtl
pusha
jmp
push
hlt
cmpsb
jns
and
je
cwtl
jge
jl
ja
leave
jle
iret
cmp
dec
or
mov
xchg
inc
addr16
push
rcl
cld
mov
loope
repz
fsubl
cmp
adc
lret
es
add
cs
mov
pusha
add
call
inc
or
fcoml
es
lret
mov
mov
sbb
das
add
and
pop
cmp
cmpsb
ror
and
mov
push
cmp
mov
jns
xchg
push
orl
push
jne
lret
ret
loope
cld
fs
test
stc
inc
cwtl
mov
stos
fs
cmpsl
orb
cmpsl
jecxz
fdivr
and
cltd
jg
mov
mov
push
ret
sbb
jle
and
mov
push
xor
xchg
push
xchg
cmp
popf
mov
inc
in
repz
xor
sub
fs
add
mov
clc
fistl
xor
dec
pop
mov
jp
mov
xchg
cmc
pop
outsl
mov
mov
mulb
jg
push
nop
sti
adc
icebp
test
sub
jle
cmc
ret
add
roll
cmpsb
out
jne
hlt
mov
and
sub
imul
fnstcw
ficoml
and
sub
pop
sbb
sub
inc
subl
jp
shlb
mov
sub
in
sahf
mov
stos
sub
cmp
out
inc
test
pop
jmp
aad
and
loopne
pusha
bound
lret
cmp
mov
movsb
in
int
loopne
cli
pop
addl
ret
cmp
clc
xchg
pop
nop
add
fidivl
cli
scas
fstp
and
testl
add
fcmovu
out
sbb
cmp
mov
push
or
arpl
or
test
xchg
pop
fstpt
out
loop
repz
pop
push
dec
test
dec
data16
add
mov
stc
in
int3
fwait
adc
scas
clc
or
sbb
cwtl
sbb
jg
pop
inc
out
jnp
out
fucomi
dec
xor
add
int3
aaa
pushf
fildl
int
jb
xor
insl
pop
or
gs
lods
loope
xor
in
mov
xchg
into
sbb
int
sbbb
lods
xchg
xor
xor
sbb
xchg
stos
in
test
mov
js
jmp
xor
jg
subl
movsb
cmpsl
mov
xor
scas
scas
sbb
in
fsubs
inc
cmp
enter
pop
shll
ljmp
and
andl
mov
push
push
mov
adc
mov
mov
shrb
xchg
cmp
test
cli
mov
sbb
xchg
inc
mov
stc
dec
adc
movsl
pop
add
mov
push
and
push
add
cmp
iret
inc
sub
inc
flds
in
js
mov
pop
push
test
pushf
push
xchg
mov
xchg
jecxz
je
gs
pop
loopne
add
fisubrl
or
cmp
aad
jbe
in
ficoms
mov
movsb
iret
sub
std
adc
jae
addr16
rcll
sub
jno
xor
mov
rol
je
mov
xlat
or
xor
jns
out
cli
xchg
outsb
pop
in
scas
in
js
dec
test
scas
scas
push
pop
mov
pop
gs
sahf
inc
out
or
dec
inc
adc
mov
movsl
fcmovnb
jo
pusha
inc
inc
pushf
mov
jae
fdivrp
mov
push
insl
int
repz
data16
out
adc
mov
fbld
push
daa
push
sahf
lahf
shll
jle
sbb
into
ret
pop
int
pop
mov
cwtl
jl
jns
push
loop
negl
jnp
les
xchg
inc
pushf
fcoms
or
gs
xor
pop
or
mov
or
pop
ret
es
scas
cmpsb
mov
testl
ret
insb
jl
adc
adc
je
mov
or
fisubl
cmp
arpl
ds
aam
jno
mov
xchg
jo
adcb
lahf
cmc
cmp
xchg
xor
cwtl
sub
xchg
and
xchg
in
adc
sub
mov
xchg
rol
or
add
jle
test
fwait
push
push
xor
pop
jg
xchg
push
icebp
insb
cmp
push
icebp
sbbl
stc
sahf
jo
lds
aad
push
mov
jle
mov
repz
stc
push
xor
fs
xor
mov
scas
cmp
mov
mov
xor
ret
je
push
rcr
jge
mov
imul
call
repz
xlat
jl
sub
sub
dec
fsubrs
cmpsb
cli
lahf
repnz
push
mov
pusha
mov
roll
sbb
add
add
xchg
mov
dec
mov
enter
out
lret
xor
push
fs
or
or
add
mov
and
stos
lock
lods
emms
rcll
les
out
dec
popa
inc
nop
aam
push
mov
insb
sbb
and
hlt
lret
fdivr
inc
add
jmp
pusha
shl
push
fs
sub
loope
test
jp
lahf
out
pop
sarl
cmp
addb
out
mov
mov
lcall
jno
int3
negb
cmpsl
int
sub
jne
pusha
cli
or
ja
out
mov
sub
cltd
int3
xchg
fmul
popa
loop
xor
add
insl
push
mov
xlat
mulb
es
xchg
push
push
jns
lret
jbe
cmp
jnp
push
sbb
xchg
lds
pop
mov
sbb
sub
orl
dec
adc
push
cmp
xlat
aas
and
xor
push
int
add
xchg
ja
mov
repz
mov
sub
push
xlat
mov
clc
sub
daa
stos
and
inc
rcrl
inc
or
adc
mov
out
lock
in
sarb
into
xor
push
pushf
std
in
sub
xorl
out
paddsb
sbb
into
mov
rolb
into
pusha
scas
ficoms
mov
push
adcb
push
jle
inc
xor
mov
push
xchg
aad
test
data16
pushf
sub
push
adc
cmc
rclb
shr
fstl
sub
les
es
cmp
sbb
dec
pop
mov
rorb
mov
or
roll
lret
fs
mov
push
pop
ret
mov
pop
mov
xchg
loop
cmp
pop
das
sub
aas
sti
outsb
mov
js
inc
inc
int
stos
ds
adc
imul
insb
je
pop
mov
leave
pop
fidivrl
mov
aas
sti
stc
movsb
dec
jge
imulb
jb
imul
or
dec
pop
loope
push
jns
dec
jbe
into
jmp
mov
aas
xor
fdivrs
enter
sarb
mov
fsubl
adc
std
ljmp
fisubs
adc
inc
stc
mov
pop
fistpl
test
mov
pop
nop
in
cwtl
jns
fldl
out
jbe
clc
add
dec
jecxz
mov
loope
je
lret
sbbb
in
out
in
scas
pop
std
inc
popa
jb
xor
les
mov
and
dec
inc
pop
mov
fsin
lahf
repz
fsub
iret
pop
mov
hlt
loop
daa
stos
sub
adc
mov
fxch
int
jl
cmpsl
arpl
fs
mov
add
inc
jmp
pop
inc
inc
lods
adc
mov
cmp
pop
mov
loopne
stos
pop
cmc
sbb
nop
mov
jns
lret
xchg
cli
fiadds
xchg
mov
and
mov
lock
cmpsb
inc
imul
std
shl
push
sbb
xor
xor
inc
add
xchg
cmpsl
dec
out
sti
leave
faddp
outsb
ss
icebp
fnstsw
or
subb
arpl
mov
lcall
jno
ret
dec
push
test
and
dec
mov
test
jecxz
arpl
sbb
je
cmpb
popa
aas
clc
cs
pop
dec
xor
les
xor
sub
divb
inc
pop
orl
sbb
inc
sbb
jo
jo
inc
maxps
fidivs
mov
lret
lahf
xchg
xchg
lea
sbb
insl
xchg
clc
andb
mov
ss
subb
jb
mov
and
mov
mov
pop
sbb
xchg
jne
add
loopne
lahf
and
iret
test
pop
aas
jge
mov
push
das
icebp
mov
stc
xor
xchg
sbb
mov
stc
sbb
repnz
mov
das
xor
popl
sbb
stos
aaa
pop
sbb
jmp
fsts
jp
or
out
push
cmpsb
inc
ror
pop
ret
hlt
stos
mov
mov
imul
testl
pop
push
xorb
outsl
dec
aaa
test
add
addr16
pusha
push
es
mov
andb
pop
arpl
sbb
icebp
test
xchg
push
aaa
dec
loope
dec
daa
adc
sub
or
mov
gs
dec
sbb
push
fmuls
aad
sub
popa
incl
mov
cwtl
mov
and
cmp
shll
rcrb
xor
mov
jo
leave
pop
lock
pop
popa
ss
repz
test
loope
pop
cmp
lcall
jp
xchg
jg
push
orb
push
jge
lahf
enter
dec
stc
ja
dec
rcrb
lret
jle
xor
inc
mov
loop
pop
popf
mov
arpl
and
jmp
daa
add
and
pop
test
jno
cmp
data16
das
jo
pushf
adc
jge
test
push
arpl
pop
mov
arpl
pushf
insl
int
leave
mov
stos
jne
jno
add
fadds
push
rorb
add
jg
and
fs
pop
mov
lret
mov
xor
shll
outsb
mov
daa
jp
divl
jbe
mov
xchg
mov
push
pop
aam
movzbl
ljmp
jne
fs
dec
or
inc
jecxz
cli
icebp
rorl
fsubrs
ret
inc
cmp
mov
mov
lods
jne
mov
mov
and
nop
fwait
mov
xchg
sbb
sub
in
pop
lret
mov
cmp
scas
inc
inc
adc
or
add
push
scas
les
mov
lcall
push
jle
sub
push
mov
inc
addr16
and
mov
rorl
sbb
sub
or
pop
lea
jb
scas
xorl
lds
das
and
int3
test
push
ja
add
decl
loopne
aad
lods
fwait
mov
sub
ljmp
test
mov
or
jp
iret
dec
loop
jge
push
inc
cmp
xchg
andb
jo
out
mov
imul
gs
sbb
add
and
or
jg
and
inc
pop
or
imul
cmp
ret
in
rcll
loop
daa
sbb
rorl
dec
shrl
jns
jge
insl
mov
push
mov
lahf
mov
inc
ss
or
jge
cmc
cmpsl
xor
fs
sarb
das
scas
iret
test
sub
shll
add
cli
call
loopne
xchg
push
mov
push
shll
xchg
dec
push
xchg
iret
mov
push
push
lods
xor
pop
stos
jnp
push
es
out
mov
mov
push
decb
xchg
shll
xor
jmp
pop
mov
mov
pop
loope
push
ret
xchg
dec
popa
arpl
xchg
cli
lret
imul
push
or
inc
lods
movsb
adc
cmp
fisttpll
js
mov
clc
mov
repnz
adc
jb
cltd
rol
cmp
icebp
fists
rcll
mov
dec
lahf
adc
test
mov
cs
sbb
neg
pusha
int
cmpsb
ja
push
adc
clc
scas
call
bndstx
jo
inc
fcoms
mov
popa
xchg
lods
sub
inc
ljmp
adcb
xor
notb
daa
dec
pop
jo
mov
daa
add
in
gs
repz
fdivrs
pop
lods
movsl
jne
pop
mov
jg
fimuls
repz
rclb
dec
bound
popf
ljmp
adc
push
jge
imul
loopne
cmp
out
out
lret
data16
roll
mov
cmp
icebp
shr
in
inc
mov
in
cld
mov
stos
fwait
xchg
test
lods
mov
xchg
ds
mov
inc
ja
fwait
pop
and
shrl
out
cmc
in
pop
mov
add
push
dec
dec
dec
jle
mov
or
shll
loopne
fs
mov
xor
push
lds
or
cs
clc
jno
dec
insl
inc
ret
testb
mov
xor
dec
pop
nop
xchg
das
movsl
jo
ja
mulb
pushf
loopne
sub
jb
sbb
dec
jns
sub
icebp
das
and
cmp
fs
fdivrs
push
aas
or
int
or
gs
add
jge
stos
insb
mov
jmp
mov
loopne
addr16
sarb
or
ret
and
ficoml
shll
pop
clc
push
inc
adc
sub
popf
mov
fsqrt
add
mov
mov
sbb
jge
mov
lret
iret
adc
cmc
jmp
sahf
jle
pop
loopne
ret
and
and
add
push
xchg
fidivl
or
clc
arpl
dec
sarl
dec
jo
cmp
fstp
inc
iret
imul
stos
pusha
inc
jo
rorb
xchg
stos
dec
cmp
push
rclb
push
fildl
mov
aaa
repnz
addl
in
mov
mov
mov
cmpsl
ljmp
movsb
xchg
mov
sub
mov
and
js
mov
jo
or
dec
fwait
les
add
push
scas
sub
mov
jb
pop
mov
inc
call
aam
dec
cmp
cs
mov
inc
xor
fldl
ss
lea
out
movsl
arpl
cmpsb
jae
ror
jo
adc
test
fsubrs
lret
adc
in
xor
xlat
and
movsl
sti
shl
mov
mov
mov
lahf
mov
and
add
dec
or
pop
sbb
dec
popf
lcall
std
push
adc
xchg
add
in
xchg
push
sbb
lods
adc
push
fisubs
inc
add
add
outsl
mov
push
jmp
mov
movsb
xchg
and
push
repz
cmp
add
mov
lds
mov
in
lret
mov
mov
jge
sbb
fwait
sarl
sahf
lock
pop
mov
xor
jg
mov
pop
adc
bound
imul
icebp
cmp
stc
in
adc
lods
arpl
ret
loop
mov
out
adc
push
mov
lods
loopne
mov
arpl
out
imul
das
push
inc
in
dec
inc
push
daa
arpl
rcr
fnstcw
call
mov
sbb
sbb
in
xor
ds
or
cmp
fcoml
sub
push
jp
mov
pop
cmp
add
lock
inc
ljmp
xchg
pusha
sbb
pop
xchg
jp
test
arpl
outsl
enter
mov
shlb
jns
sub
jb
stos
add
inc
call
insl
subl
dec
negb
pushf
ret
jbe
mov
shrd
sub
cltd
aaa
out
add
movsl
lret
adc
out
insb
ficomps
ftst
dec
insl
movsl
xor
push
inc
shrl
in
iret
hlt
ljmp
hlt
stc
out
cltd
mov
cmp
cmp
stc
in
popf
add
cli
add
dec
das
icebp
mov
dec
mov
pop
test
push
test
and
xor
repnz
adc
cmc
js
push
hlt
sub
add
dec
imul
test
or
fwait
hlt
call
inc
pop
ds
mov
inc
stos
fdivp
in
scas
cmp
int3
xchg
mov
std
mov
dec
xor
lret
rorl
adcl
or
jp
sub
sbbb
rolb
or
push
aad
add
int
ret
imul
pop
add
pop
sub
fs
lret
xor
lahf
sbb
jmp
pop
out
stos
lcall
xchg
stc
sbb
and
or
adc
dec
imul
add
out
jecxz
fisubl
and
dec
push
iret
mov
or
or
and
je
gs
lea
outsl
stc
lock
mov
nop
adc
jle
mov
lods
popf
jg
mov
and
hlt
and
in
test
pop
xchg
or
add
cmc
dec
mov
dec
stos
sbb
lods
rorb
xor
pushf
stos
xor
into
lahf
stos
inc
dec
add
xchg
gs
shlb
cmp
popf
mov
cmp
popf
stc
in
sbb
push
sbb
inc
fdivrl
out
faddl
cli
pop
into
push
imul
dec
popa
pop
orb
jmp
push
dec
or
int
scas
fwait
add
ss
sub
shll
dec
jecxz
dec
dec
mov
fdivl
cmpsl
mov
rorb
xlat
dec
mov
test
mov
and
les
repz
cs
loop
cmpsb
add
and
inc
sub
pop
xchg
push
adc
mov
ret
repnz
or
xchg
fsts
cmp
lods
dec
int3
pop
mov
test
push
push
sbb
mov
inc
insl
mov
call
dec
or
xchg
bound
inc
je
je
and
nopl
sbb
int
adc
xchg
mov
insl
fs
and
adc
sub
mov
sbb
arpl
nop
and
mov
loopne
lods
inc
int3
frstor
scas
push
imul
mov
shrb
mov
lret
repz
sti
lret
xor
lahf
and
mov
popf
or
loope
and
pop
sbb
jge
add
push
mov
adc
aaa
sahf
inc
loope
pop
push
int
test
bound
inc
test
jae
loop
cmp
imull
jp
fildll
jne
xor
mov
and
fnstcw
pop
test
in
dec
adc
adc
jb
std
mov
lea
jp
pop
das
add
lods
negb
imul
mov
cltd
loope
mov
cmpsb
jo
fisubs
cwtl
push
rorl
add
jle
cmp
pop
xchg
stos
adc
jnp
jmp
jne
add
rcr
add
pushf
fucom
xor
cltd
repnz
xchg
push
stos
push
mov
out
aas
mov
mov
xlat
jno
mov
daa
outsl
cmp
sub
cltd
dec
pusha
mov
outsl
repnz
mov
lods
and
cmp
loope
test
dec
daa
sbb
jb
jg
rcl
nop
xchg
sbb
adc
std
fwait
setns
inc
jno
dec
lea
push
xchg
aaa
out
sub
push
mov
aad
into
sub
jp
loopne
dec
jp
popf
mov
inc
jl
mov
add
inc
mov
mov
push
mov
jae
pop
sti
std
mov
mov
popf
iret
insl
cs
xchg
iret
out
in
enter
push
cs
mov
cwtl
mov
mov
jbe
mov
or
out
or
jbe
ljmp
mov
push
les
dec
push
flds
popf
and
test
aad
pop
sar
pop
inc
adc
mov
loopne
and
mov
cmp
xchg
mov
adc
adc
stos
scas
adc
pushf
mov
call
inc
pop
repz
jl
cmp
adc
or
setno
sbb
jno
shrl
cld
jge
mov
xchg
call
push
xchg
or
xchg
fnstcw
jo
test
outsl
mov
jg
incb
loope
cmpb
jne
sub
loopne
lret
sub
std
add
push
insl
hlt
pop
imul
xor
stc
cltd
xchg
cli
in
xor
sub
jae
nop
sbb
adc
cmc
xor
fldenv
xchg
popa
in
insb
in
shlb
mov
or
push
test
pop
or
loop
rorl
pop
test
pop
jne
sbb
jg
mov
pop
jb
nop
push
inc
nop
stos
xor
mov
xchg
mov
pusha
popa
adc
cmpsl
clc
cmpl
decl
aas
and
sbb
imul
xor
or
or
pop
je
lods
popa
xor
mov
fisubrs
inc
test
xorb
add
and
clc
cmpsl
test
nop
dec
inc
cli
mov
add
mov
cwtl
pop
add
pop
inc
and
and
out
or
add
aam
push
cmp
jb
adc
xchg
inc
inc
test
hlt
daa
dec
jl
frstor
push
jo
pop
in
sbb
imul
mov
lret
push
xchg
xor
mov
add
jnp
pop
or
cmp
mov
scas
lret
imul
pop
xchg
outsl
jg
orb
xchg
or
push
dec
or
divl
or
rcll
push
andb
xchg
sahf
jno
inc
aaa
xchg
mov
dec
hlt
int3
mov
hlt
nop
cmp
mov
out
pop
jbe
outsb
ret
out
bound
adc
mov
test
in
andb
xor
sbb
filds
pushf
rcrb
pusha
and
cmp
push
pop
jmp
jecxz
aaa
stos
sbb
faddl
rep
adc
mov
dec
subl
add
jmp
sti
pop
arpl
jle
jmp
mov
and
jb
repnz
pop
add
sub
add
sub
je
int
popf
mov
cmp
loop
push
jno
xchg
lods
cs
stc
call
scas
pop
mov
push
insl
mov
and
pop
cmp
hlt
sbb
xchg
cs
and
cld
push
sarb
xor
pushl
imul
outsl
nop
push
rol
jns
add
popf
ljmp
std
shlb
push
mov
popf
jns
fwait
hlt
cmpsl
mov
push
mov
jmp
push
xchg
movsl
xchg
pop
push
add
xlat
and
mov
sbb
push
rorl
lods
out
lds
iret
dec
cmc
loopne
dec
bound
movsl
sahf
pop
pop
xor
adc
xchg
shr
push
scas
mov
sahf
js
xchg
or
add
add
faddl
sahf
sub
lods
mulb
push
movsl
icebp
leave
fidivrs
mov
rcrl
sarb
loopne
push
outsl
add
cli
mov
les
cmpsb
lahf
out
sbb
xchg
jle
jp
rorb
mov
cwtl
incl
arpl
xchg
loop
sbb
mov
test
outsl
push
or
pop
xor
cld
pop
addr16
sbb
mov
jl
arpl
popa
int
sbb
jl
aam
fs
fmul
sub
mov
inc
add
push
ret
xor
stc
xor
jge
rol
xorl
cs
xchg
mov
xchg
sti
or
movb
xor
mov
and
ss
subb
pop
and
js
mov
and
jl
xor
repz
fcompl
xchg
enter
xlat
jne
jecxz
mov
xor
in
call
sub
out
rolb
mov
add
jecxz
testb
enter
inc
test
dec
and
push
mov
push
inc
repnz
iret
sbb
aam
jo
mov
filds
xor
iret
addr16
arpl
mov
movsl
mov
dec
fs
inc
or
popa
es
pusha
and
xchg
pop
loop
xchg
cltd
dec
inc
mov
cld
mov
test
xor
dec
or
xchg
out
stc
adc
lret
in
mov
xchg
push
xor
mov
dec
stc
js
clc
mov
movsl
repz
and
sarl
push
cmp
lret
aas
jmp
and
stos
es
lret
pop
mov
add
mov
mov
dec
lahf
lahf
scas
mov
inc
xor
adc
xor
iret
lahf
shrb
test
dec
ds
test
sub
aaa
orb
dec
out
je
lret
dec
rcrb
mov
shl
imul
ret
inc
fsts
inc
aaa
mov
jno
in
pop
cmp
xchg
in
jns
sarb
mov
inc
xor
adc
in
adc
or
mov
mov
js
dec
adc
sbbb
push
stos
dec
incl
cli
es
mov
ret
dec
dec
scas
fistpl
aam
lret
dec
in
ja
adc
pop
mov
std
shrl
mov
mov
push
out
xor
ja
pop
push
lret
pop
push
xor
add
xor
lds
add
push
and
lods
jmp
xor
loope
std
pop
sub
mov
repz
cwtl
push
orl
push
jmp
in
jae
shll
xchg
nop
ret
mov
aas
jecxz
in
rol
inc
test
aad
ja
jp
imul
test
mov
dec
movsb
jecxz
fwait
out
mov
lcall
inc
das
in
popf
add
adc
stos
inc
push
bound
jbe
and
das
cs
aam
pop
push
data16
dec
sti
xchg
inc
into
mov
test
xchg
mov
faddp
in
mov
mov
cmpsb
or
add
inc
add
sbb
sti
push
and
loopne
dec
aam
and
daa
outsb
xor
out
aam
test
pop
cld
loop
inc
mov
xor
push
jge
push
add
xor
mov
addr16
jmp
pop
dec
sbb
fcmovne
cmpsb
sbb
dec
pop
mov
das
out
push
jge
or
jae
mov
subb
notb
js
fs
mov
loopne
test
jecxz,pn
xor
ret
sahf
aas
mov
push
mov
mov
daa
mov
rcr
fstps
cmpsl
dec
inc
xchg
mov
jg
ss
imul
fwait
xchg
mov
xor
scas
jae
loope
xchg
aas
ret
int3
mov
xor
inc
mov
xor
and
mov
lret
and
js
cltd
hlt
leave
divl
clc
fisubs
inc
cmp
and
fbstp
push
arpl
ficoms
or
jo
in
out
js
sti
and
inc
xor
sbb
test
xchg
rcl
lods
inc
arpl
idivl
fdiv
fmuls
adc
ror
stc
sbbb
fcoml
ja
dec
bound
push
popf
xor
jb
xchg
lret
mov
pusha
or
push
pushf
pop
insb
pop
inc
pop
filds
arpl
jmp
imul
jns
test
popa
aas
lods
scas
and
loopne
sti
pop
ljmp
and
sub
inc
fstl
adcl
cmp
pop
dec
mov
push
movsb
int3
mov
inc
sub
loop
cmpsb
mov
outsb
stos
sbb
scas
out
pop
push
andl
jb
ffree
pop
jg
sbb
inc
stc
mov
call
or
xchg
mov
loopne
sub
pusha
stos
adc
dec
xchg
sub
pop
sbb
and
jmp
cwtl
in
lods
cmpsb
out
dec
add
fisubs
sbb
xor
xchg
mov
jle
pop
cwtl
lods
pusha
or
test
mov
lret
cmpsl
rcr
jle
and
fucomi
pop
push
out
mov
popf
sahf
sub
xchg
sti
movsl
mov
inc
lods
sbb
les
and
xor
inc
mov
jp
push
mov
fstpl
and
pop
ss
iret
loop
lock
xor
push
mov
int3
sub
outsl
insl
ds
leave
in
sbb
mov
fisttps
dec
jl
xchg
int
and
adc
and
fsubs
add
and
or
push
xor
mov
shrl
mov
addb
jl
notb
fmuls
repnz
sub
add
mov
loopnew
mov
leave
jge
sti
cld
inc
dec
ja
les
jecxz
xlat
movsl
fisttpll
outsl
pop
ljmp
jbe
xchg
sbb
xor
insl
jecxz
dec
je
in
and
pop
add
loop
adc
dec
sub
out
adc
mov
adc
aad
in
xchg
stc
push
es
mov
dec
movsb
fcomip
shl
jp
ret
jmp
or
sbb
add
test
ds
movsl
jp
and
cmp
call
cmp
negb
dec
mov
popl
ja
mov
loope
cmpsl
xchg
and
xchg
or
pushf
cmc
pop
movntps
mov
sbb
cs
dec
int3
out
shlb
out
insb
mov
scas
cli
out
lods
testl
cli
cmp
push
and
outsl
mov
sbb
sub
gs
cmpsb
les
push
test
lods
shl
jp
inc
inc
jg
test
popa
push
sub
xor
ret
testl
pushf
inc
roll
jge
bound
int
mov
push
push
or
and
test
jae
xor
pop
push
xchg
fwait
pop
mov
jne
cmp
lea
enter
inc
rclb
jae
pop
mov
test
sbb
cmpsb
rcr
ds
icebp
scas
jne
cmpl
jno
pop
sub
xor
xor
call
mov
dec
int
clc
bound
sti
mov
push
add
rcrl
loopne
pop
jmp
loop
or
add
mov
cmpl
orb
ret
jb
xor
adc
or
insb
pusha
pop
in
dec
cmp
cwtl
mov
xchg
and
jg
or
lds
das
xor
sub
mov
pop
adc
adc
inc
stc
lds
sub
ret
lret
enter
and
sub
out
rorl
xchg
push
push
fcmovu
sahf
mov
mov
jmp
pop
rcrl
movsl
negb
loope
gs
out
mov
xchg
out
out
hlt
aam
xchg
sub
scas
inc
xor
add
aam
lahf
arpl
xchg
cmp
or
xchg
ret
cmp
mov
jo
adc
and
test
lcall
pop
es
sbb
bound
and
fsubrs
js
js
lods
mov
jge
sbb
cmp
out
push
inc
adc
hlt
loopne
out
scas
test
or
incb
arpl
jns
cwtl
ret
and
xor
addr16
adc
pop
cmpsl
jns
shll
jg
mov
daa
dec
xorb
cmpsb
sub
dec
pop
mov
mov
xor
push
es
cmpsb
and
shl
lret
das
out
cmp
add
js
xchg
inc
mov
cld
mov
divb
xchg
and
push
stc
fldl
cs
jg
push
pop
in
fidivl
cmpsb
jl
in
jg
sub
stos
and
push
cld
out
leave
dec
je
cmp
subb
adc
push
ss
cli
push
ljmp
mov
pop
notl
out
or
pop
xchg
std
mov
cmpsb
sub
pop
or
cmp
jbe
aam
add
sbb
add
data16
repnz
clc
fiaddl
jp
inc
xchg
das
pop
xor
jno
mov
and
jb
inc
pop
pushf
pushf
mov
jle
mov
es
jb
inc
cld
push
out
sarl
stos
imul
mov
test
sbb
mov
mov
mov
cmpb
jbe
jno
pushf
pop
xor
cs
xor
cmpsb
and
out
in
cld
lods
ljmp
cli
scas
mov
sti
lret
pusha
std
dec
jns
test
lcall
out
iret
mov
pop
lock
jb
lahf
push
xchg
jge
xlat
xor
adc
aas
sarl
adc
inc
out
das
jo
pop
test
inc
mov
shlb
mov
jns
mov
in
pop
roll
cmp
cwtl
scas
xor
fmull
push
sarl
cli
test
inc
inc
push
cmp
xor
repnz
jo
ljmp
lcall
dec
mov
in
and
mov
pushf
xor
mull
add
mov
leave
adcb
xchg
mov
xor
mov
mov
fnstsw
jb
sub
stc
cmp
cmp
adc
shrl
add
adc
dec
test
cmp
sbb
lods
add
das
pusha
mov
lcall
add
gs
pushf
mov
mov
cmpsb
fistpll
cmp
gs
fidivrs
addb
addr16
aas
cmp
cmpsb
or
fistpl
cmc
mov
aam
shlb
jmp
jo
scas
jae
push
sbb
or
pusha
pop
movsb
orl
and
ret
or
push
mov
sbb
mov
std
fcmovu
cmp
and
ljmp
enter
lock
scas
cmc
dec
pop
in
ja
popa
jge
pop
out
dec
add
xlat
pop
pop
mov
xor
xor
ss
shlb
jnp
call
pushf
sub
pop
or
mov
scas
ss
mov
mov
shlb
sub
pop
pop
sub
adcl
fidivrl
insb
or
arpl
dec
shl
sbb
dec
pop
mov
add
push
add
es
ss
imul
in
popf
fidivrs
and
std
cwtl
and
xor
mov
cmc
xchg
ss
and
adc
orl
push
mov
ds
mov
stos
cmp
lcall
add
lahf
cwtl
test
xchg
sub
add
rorb
insl
inc
shrl
rcrl
iret
mov
jecxz
cmp
sbb
adc
xchg
int
imul
inc
lock
inc
sub
sub
pop
or
out
cli
movsb
add
jl
insb
jmp
out
cmp
dec
sbb
push
xchg
inc
lcall
inc
aam
cld
std
jmp
jns
dec
mov
enter
lahf
mulb
inc
jae
xchg
or
xchg
testb
lock
jecxz
sbb
or
xchg
popa
test
hlt
rcrl
shrl
push
xchg
or
xor
stc
hlt
pop
push
imul
bound
hlt
inc
xor
dec
les
bswap
mov
outsb
out
in
mov
into
xor
or
and
rcr
imul
xchg
and
popf
inc
or
xchg
inc
xchg
cmp
or
mov
inc
js
aas
mov
shl
stc
inc
movsb
out
daa
jl
arpl
ficomps
mov
sbb
leave
xchg
imul
pop
sti
and
xchg
mov
inc
mov
fs
pop
or
mov
mov
cmpsl
orl
adc
jmp
xchg
push
lret
jmp
ret
lcall
cld
inc
imul
xor
mov
push
adc
sbb
xor
adc
jmp
jg
pop
xchg
jge
add
sbb
bound
shrl
sahf
or
das
xchg
push
test
mov
mov
ret
xor
push
mov
jp
xor
int
faddl
xchg
int
lods
repnz
shl
jb
pop
and
cld
jo
out
jne
adc
add
push
lret
ret
fsubs
adc
sub
xchg
aam
xchg
lods
ljmp
mov
fidivs
push
xor
ss
mov
loopne
stos
stos
test
push
dec
mov
aas
xchg
and
push
adc
add
ss
push
aas
test
lods
add
or
xchg
lock
hlt
push
cmp
add
mov
popa
sub
jecxz
aam
and
dec
xor
pop
pop
jge
enter
mov
lods
add
inc
mov
push
dec
test
jl
lods
push
ret
ret
mov
xchg
sarb
pop
test
imul
pop
xchg
and
aam
test
dec
lcall
xor
lret
test
xor
add
dec
pop
es
mov
and
inc
adc
jnp
loopne
adc
int
push
add
hlt
add
test
lahf
xchg
xchg
pop
cltd
push
dec
sub
add
mov
loop
push
addl
mov
push
mov
xchg
scas
and
xchg
jne
mov
mov
mov
jl
insl
pusha
sub
shl
jp
xchg
sbb
push
daa
aam
mov
and
mov
or
mov
pop
push
xor
les
scas
mov
idiv
dec
sub
orb
and
out
mov
js
mov
pop
sbb
or
sbb
lods
dec
mov
imul
std
pop
jle
das
aaa
pop
jp
inc
adc
cmp
ret
xchg
movb
push
mov
call
imul
mov
out
add
pop
push
pop
push
add
sbb
sar
jg
jp
loop
xor
pop
addr16
in
scas
test
pop
aas
lret
cwtl
jle
fldl
dec
pusha
sbb
or
mov
cwtl
push
mov
cmp
je
cmpsl
pcmpeqw
cmp
push
clc
bound
mov
ret
xchg
lock
fdivrp
sub
stos
enter
jae
or
pop
and
and
shlb
push
pop
mov
and
pop
js
cs
mov
mov
shlb
cld
mov
test
cmp
push
push
pusha
jge
out
mov
js
rorb
and
push
lret
shlb
pop
push
add
ss
dec
cwtl
mov
rcll
lcall
imul
xchg
iret
xor
js
aam
or
mov
andb
sub
mov
or
mov
shl
lcall
es
inc
adc
cld
dec
insb
sub
xor
fistl
add
negl
or
adc
bound
aad
xor
fwait
sub
xor
test
add
daa
movsb
divl
daa
sbb
push
fstpl
cmp
mov
std
or
inc
push
fldl
stos
loop
mov
mov
shr
xor
add
add
xchg
mov
jnp
inc
nop
call
and
stos
sarb
cld
and
mov
cmp
jmp
cmc
mov
sar
lds
dec
and
add
out
in
ficomps
addr16
fdivp
inc
cwtl
pop
call
imul
sbb
xchg
adc
inc
sub
pop
push
aad
sbb
cmp
xor
push
ret
addl
aas
shr
adcl
add
xchg
cmp
unpckhps
xor
cmp
test
pop
int3
and
push
xor
and
or
mov
mov
adc
xor
push
aas
push
pop
jle
dec
fistpll
mov
test
adc
inc
incb
jmp
pushf
inc
or
dec
test
pusha
xchg
sbb
xchg
dec
ljmp
lds
sub
and
cmc
xor
mov
insl
xchg
push
divl
dec
pop
out
arpl
mov
mov
sbbb
scas
aaa
xlat
adc
lcall
nop
enter
repz
shl
lahf
xchg
cmp
mov
int3
faddl
jb
out
add
loop
ret
and
xor
pop
mov
lock
mov
sbb
mov
dec
sub
lock
add
xor
test
and
jecxz
das
mov
push
ret
pop
lods
lods
inc
jne
mov
out
sti
lods
ljmp
xor
lret
insl
push
fstps
sbb
rolb
xchg
and
imul
hlt
movsb
add
into
cwtl
sbb
jno
cltd
sahf
cmp
push
mov
aaa
loop
jno
xchg
gs
fadd
mov
mov
cmp
cmp
scas
fwait
xchg
cmc
xor
lahf
push
lcall
xor
sbb
imul
jmp
pop
dec
mov
loope,pn
mov
adc
dec
arpl
mov
adc
fstpt
loopne
ja
or
xchg
mov
push
cs
mov
in
sbb
dec
xor
sub
or
sahf
xchg
mov
fsts
mov
mov
fidivrs
loopne
push
shll
enter
mov
dec
xlat
in
int3
movsb
push
push
and
je
xor
xor
mov
jo
popf
cmp
cmp
lret
push
into
dec
dec
jb
sub
mov
push
lret
stos
in
mov
gs
fs
xchg
adc
scas
xchg
adc
es
pushf
sub
rclb
gs
adc
incb
xchg
pop
pop
adc
add
push
clc
nop
ja
test
mov
ja
or
dec
outsb
sub
sbbl
sbb
lcall
and
mov
push
dec
jecxz
cld
rcrb
mov
dec
or
stos
int
jbe
add
pop
jp
cmpl
or
rcrb
inc
inc
cmc
pop
mov
pinsrw
clc
xchg
mov
sub
popfw
jnp
gs
sub
mov
incl
int
cmp
dec
sbb
inc
fwait
pop
xchg
adc
out
jg
sub
push
dec
call
mov
daa
dec
imul
cmpsl
ficompl
dec
insb
clc
xor
xor
jp
fisubl
pop
sub
sub
outsl
pop
lahf
loopne
lret
ret
je
sub
jne
bound
out
ja
push
push
test
jle
jg
imul
mov
sub
out
es
pop
outsl
lahf
daa
es
sub
adc
je
lret
lcall
push
clc
mov
pop
scas
inc
jo
cltd
or
outsl
arpl
les
cld
sahf
xor
loopne
in
sub
in
repnz
out
mov
nop
lods
cmpsl
xor
lods
cmpsl
mov
lods
adc
stos
push
dec
popa
or
in
mov
mov
mov
out
cld
in
jns
cld
jns
fs
mov
adc
push
notb
cmp
mov
sbb
and
mov
lret
clc
test
cmpsl
clc
js,pn
mov
stos
cltd
lods
test
ret
mov
dec
push
ds
in
pop
jnp
inc
enter
mov
int
dec
daa
cmp
cli
xchg
andl
adc
enter
adc
leave
and
out
out
cs
mov
sbb
mov
xorl
movsb
test
arpl
add
outsb
inc
fcom
cmp
jbe
dec
ret
stos
cmpsb
data16
aas
adc
leave
lods
ds
int3
cmc
pop
aam
mov
sbb
aaa
and
shlb
pop
dec
jne
adc
jl
enter
clc
sub
xor
scas
stc
popaw
iret
arpl
jae
sbb
fcoml
xor
jb
sub
lcall
imul
push
aaa
call
or
aad
push
sub
push
dec
ds
mov
pop
jecxz
cmp
test
inc
loopne
in
shlb
rolb
pusha
mov
out
mov
xlat
push
mov
cmp
push
xchg
fs
bound
add
xchg
into
mov
arpl
push
push
xchg
sahf
daa
cmpsl
push
mov
pop
mov
out
mov
fnstenv
sbb
mov
push
mov
or
pop
push
adc
andl
loopne
out
bound
push
call
xor
push
mov
fiaddl
and
pop
lahf
fisubl
punpcklbw
xchg
jne
add
cmpsb
daa
pop
mov
out
pusha
sub
loopne
sbb
test
add
xchg
push
mov
cs
cmpsw
jo
psubsw
loope
mov
adc
inc
fldt
mov
divb
jb
stos
mov
subps
imul
fidivs
add
fimull
mov
mov
or
outsl
fs
push
sbb
out
xor
fnstenv
adc
fistps
push
movsb
xor
sbb
add
push
lcall
jo
cmpsb
push
clc
push
mov
addr16
and
push
mov
lods
lret
stos
imul
jne
loop
mov
or
sbb
lock
sbb
divb
or
xor
pop
pop
mov
xchg
mov
mov
and
test
pop
add
int
add
pop
jns
out
inc
inc
push
xor
lods
movsl
rolb
cltd
iret
sahf
or
dec
movsl
popa
nop
in
sti
outsb
test
jmp
subl
xor
fdivs
and
aam
and
icebp
addr16
inc
test
pop
dec
addb
insb
rcl
int3
lock
repz
mov
lahf
and
fstp
add
cli
sbb
out
push
and
sub
pop
rorb
fsubrl
and
sub
gs
in
xchg
inc
mov
inc
cwtl
and
pop
inc
mov
mov
jp
arpl
xchg
int3
sbb
xchg
inc
jge
bound
fidivrl
jmp
or
sarb
sub
sub
pop
das
and
mov
mov
lcall
stos
xchg
jns
sub
xchg
push
pop
sbb
push
pop
push
in
rcrl
mov
sahf
xor
pop
jnp
stos
pushf
jecxz
ss
in
push
xchg
jo
test
outsb
popa
jb
pop
cmpsb
push
push
ds
imul
mov
add
mov
jg
and
inc
fcmovne
movsb
xlat
adc
cmp
stos
popa
bound
pop
pop
xor
xchg
icebp
mov
jae
mov
pushf
out
push
mulb
jle
xchg
sbb
mov
jne
orl
sti
fwait
nop
lret
popa
and
push
pop
fsts
sub
aam
jne
mov
sbb
test
in
and
jnp
stos
call
fisubrl
jmp
testl
fcos
gs
fimuls
pop
push
jl
aas
jb
les
fwait
rcrl
cmp
stos
and
std
popa
inc
lods
insb
cmpsb
pop
gs
imull
pop
imul
in
fcompl
mov
adc
cwtl
dec
js
roll
sub
add
mov
inc
xchg
and
fs
pop
cmpsb
cmpsl
mov
sti
adc
or
pop
push
pop
sbb
fldcw
push
jge
fnsave
mov
mov
and
xchg
pop
and
test
add
fsubrs
xlat
lret
test
jne
jmp
push
cmp
rolb
mov
cmp
and
pop
xchg
jns
aam
cmpsl
and
cwtl
das
mov
adc
and
adc
repnz
sbb
inc
sbb
out
fidivrs
les
fisttps
inc
loop
xor
decl
mov
loope
daa
stos
jae
mov
lret
out
into
les
imul
mov
data16
pop
pusha
or
mov
mov
jnp
nop
mov
js
aad
and
xchg
icebp
aas
inc
jb
popf
adc
fcoms
in
pop
jae
imul
std
pop
mov
push
daa
add
cmp
and
jl
lods
mov
pop
int
cli
daa
sub
test
lds
imulb
push
repnz
adc
jle
pop
mov
mov
fildll
shlb
fcom
cmp
ret
jge
mov
xchg
cmpsb
subb
inc
jge
sub
loop
adc
sbb
jle
int3
ss
cmpsl
je
mov
and
cmpsl
mov
call
in
fmuls
pop
test
pop
xor
pop
dec
mov
pop
mov
in
movsl
shr
pop
jbe
popa
and
pushf
and
push
pop
pop
and
xor
ja
fisttpl
jno
outsl
push
or
enter
call
push
push
in
add
jl
and
loop
sub
adc
cmpsb
mov
xchg
cs
jo
movb
ljmp
xor
push
xchg
sbb
nop
andl
adc
aad
ljmp
aam
xor
pop
loopne
arpl
mov
push
mov
popf
loop
arpl
out
fcompl
jmp
call
mov
push
and
int
stos
jecxz
mov
popa
outsl
fmull
mov
jne
mov
adc
iret
movsl
lea
sahf
push
aam
pop
pop
xor
pushl
cmp
mull
in
lea
xchg
subl
cmp
inc
dec
arpl
sbb
in
jae
leave
bound
xchg
loope
std
mov
sbb
cmp
and
stos
out
rolb
jg
in
dec
enter
test
sbb
jmp
pop
xchg
cmp
mov
pop
add
lea
shrb
add
adc
movsb
ss
jp
xchg
loop
jle
int
test
xchg
sub
xor
sbb
test
sub
aam
orb
cmpsb
mov
push
sub
sub
inc
lahf
scas
icebp
adc
add
xlat
or
outsl
out
push
dec
push
xor
fwait
mov
into
cltd
dec
mov
arpl
lahf
scas
out
inc
jle
fisubl
mov
pop
cmpsl
imul
fbstp
xor
xor
cltd
std
jmp
repz
pop
dec
adc
loope
push
pop
pop
ss
iret
mov
loopne
lock
jecxz
test
mov
xlat
xchg
and
fsub
shrl
jge
out
xchg
rcll
mov
les
mov
push
imul
jle
call
jmp
sbb
xlat
xchg
push
outsl
mov
xor
icebp
ficoml
xchg
outsb
daa
pop
mov
sbb
jmp
popa
inc
cld
filds
or
shl
addr16
insl
jp
or
imull
mov
sbb
data16
mov
lods
adc
mov
inc
dec
iret
jnp
add
testb
mov
xchg
daa
data16
loopw
jle
pop
stos
jae
das
xchg
sub
mov
adc
fnstenv
jo
loop
fldt
sub
dec
lock
ret
inc
add
mov
les
mov
sbb
bound
add
lahf
cli
push
adc
outsl
push
mov
ds
add
mov
push
pop
pop
mov
movsb
sub
fsubrs
popa
shl
lods
das
roll
add
push
subl
test
mov
push
int3
pop
and
int3
ds
and
dec
rolb
pop
stos
lds
ror
inc
clc
pop
outsl
cs
mov
mov
xchg
iret
scas
dec
mov
aas
mov
call
out
out
mov
fwait
cmp
pop
sbb
mov
scas
mov
andb
lcall
sub
cmpsl
lods
cmp
pop
push
movsb
mov
decb
cmpsl
jmp
lcall
and
movl
xchg
fmuls
or
shr
adc
and
push
mov
xor
cmpsb
mov
imul
xor
xchg
shr
xlat
stos
or
hlt
add
xchg
aam
clc
sbb
xchg
and
push
sub
push
scas
or
mov
xchg
push
sub
xchg
fcmovnu
xchg
shl
mov
pusha
sbb
and
int3
mov
cld
fisubrl
stos
test
insb
dec
xor
adc
add
in
icebp
les
adc
scas
mov
add
xchg
popa
xchg
shrb
in
in
push
adc
dec
or
cltd
cmp
mov
in
test
or
int
push
fmull
and
mov
cmp
hlt
pop
arpl
xor
test
xchg
test
jle
lea
mov
mov
loop
sub
les
das
hlt
sub
lcall
mov
sbb
loopne
data16
mov
jb
les
out
cmp
xor
push
mov
faddl
mov
stos
lds
mov
subl
int
push
mov
hlt
cmc
jmp
pop
fwait
xchg
cmp
adc
mov
daa
inc
mov
push
xchg
movsb
mov
pop
sahf
repz
jbe
xchg
or
and
jge
pop
lret
js
jg
sub
out
shlb
lret
out
call
and
dec
in
jno
adc
scas
js
jg
jne
aam
imul
in
fdivp
mov
das
sbb
cmpsb
mov
out
jl
dec
add
and
fldcw
xchg
fisttps
in
lret
subl
or
inc
imul
lea
adc
add
mov
icebp
xchg
cld
pop
movsb
int3
mov
xlat
arpl
stos
icebp
inc
lret
jge
lds
and
rol
mov
dec
popa
xor
imul
add
cmp
lcall
test
mov
lahf
push
insb
xor
dec
jbe
pushf
adcl
xchg
inc
push
roll
ja
jnp
fadds
and
pop
fs
es
dec
mov
mov
cmpsb
popa
out
jl
jge
imul
mov
dec
and
cmc
cmp
insb
and
sub
fdecstp
dec
fsts
xorps
push
call
lahf
push
push
in
adc
jo
xchg
pop
or
cmp
cli
adc
mov
push
leave
aam
hlt
ret
mov
jae
xor
imul
pop
mov
jne
ficoms
test
dec
arpl
lock
mov
inc
fmulp
push
dec
push
mov
and
lds
dec
dec
sbb
xchg
fldenv
xchg
inc
and
out
xchg
dec
fs
mov
cmp
inc
sbb
jbe
clc
leave
xchg
lods
sbb
cmpb
sub
ljmp
fldenv
pop
mov
add
not
sbb
fisubs
cmpsb
jmp
jb
pop
mov
cs
fsubl
into
mov
roll
or
sub
lock
push
je
cmp
rolb
inc
repnz
clc
ret
pop
xor
das
xchg
mov
pop
stos
lods
xor
loop
pop
cwtl
imul
out
push
or
sbb
aam
lds
dec
push
adc
mov
aaa
sub
test
xchg
jmp
loope
aas
jl
clc
xchg
jecxz
cmpsb
adc
or
adc
inc
push
jo
cwtl
aas
push
xchg
mov
xchg
jno
nop
mov
das
jno
adc
notb
and
dec
pop
jmp
jmp
popf
jecxz
lret
inc
out
adc
in
cld
loop
jo
mov
inc
stc
sub
jge
lcall
ljmp
sahf
push
jecxz
icebp
inc
mov
sbb
pop
or
adc
fidivrl
fildll
mov
mov
or
fimull
cltd
lahf
xor
pop
sti
cltd
movsb
sub
mov
and
data16
loopne
jo
cli
sbb
lret
out
in
orb
aam
cli
push
movsl
xor
cltd
stos
and
ficoms
xlat
fwait
mov
sbb
stos
icebp
aad
fisttpll
aam
cmc
jl
mov
xor
enter
nop
cld
das
dec
cmp
stos
fcomps
add
fnstenv
dec
bound
jecxz
jl
lds
testb
mov
push
inc
and
lret
aam
faddp
std
mov
cmp
or
daa
inc
xor
add
or
stos
test
dec
scas
les
arpl
sub
xor
test
decb
mov
fadds
push
push
xchg
in
movsb
repnz
or
stos
adc
jp
les
dec
outsb
call
shrb
sti
pop
rcr
dec
decl
out
jne
sbb
pusha
mov
fisubrs
imul
sbb
push
imul
adc
xchg
adc
dec
cmpsb
xchg
and
insl
movsl
adc
mov
cmp
mov
test
shl
lods
dec
loope
pop
xchg
mov
int
pop
or
daa
push
jg
push
inc
dec
and
or
mov
stc
mov
fdivl
iret
xchg
add
call
mov
xchg
cmp
bound
daa
out
mov
ljmp
sub
subb
cmp
cmc
ss
repnz
fwait
push
mov
lods
inc
mov
ss
lds
test
into
lea
push
xor
out
xchg
jns
push
push
lret
icebp
jno
addr16
bound
and
fidivl
inc
ret
insl
xchg
test
mov
das
sarb
cwtl
xchg
inc
push
inc
insb
sbb
je
bound
mov
jg
fwait
aad
cmp
popf
cli
lods
in
in
aaa
jne
fwait
pop
adc
dec
out
push
in
nop
pop
loop
and
les
fs
xor
mov
mov
ljmp
dec
xchg
roll
cmc
hlt
lds
mov
xor
pushf
cmp
fdivrs
push
xlat
mov
mov
outsl
cltd
xor
cs
push
mov
pop
aad
mov
fildl
data16
ja
cmp
add
aas
in
xor
iret
mov
es
jg
insl
rcll
or
mov
mov
mov
lods
mov
mov
in
inc
jmp
movsb
pop
mov
movsb
fbld
push
sub
ljmp
cmpsl
mov
xor
mov
add
aaa
adc
cmp
xchg
outsb
cli
fcomps
test
seto
xchg
push
test
lahf
enter
sbb
dec
int
cmp
shlb
shrb
das
and
stc
push
scas
xor
adcb
push
push
dec
insl
in
cmpsl
daa
cmp
test
mov
insl
add
lcall
ret
aaa
shl
jmp
orl
xor
dec
and
sub
xchg
test
pop
lds
les
jmp
jl
loopw
pop
mov
cltd
imul
dec
add
mov
hlt
pushf
pop
push
aas
mov
cmp
xchg
cmp
push
enter
imul
xchg
add
sbb
and
notl
sub
mov
testb
rolb
push
jmp
je
shlb
pusha
push
mov
mov
imul
cli
add
decl
pop
stc
jns
xlat
xchg
mov
fsubl
lods
jnp
cs
ret
inc
jge
rorb
mov
int
inc
mov
lods
xchg
xchg
in
jae
ljmp
push
loope
sub
fs
xor
or
xor
mov
sti
ret
loopne
test
loope
mov
mov
cli
jecxz
xchg
inc
jle
mov
dec
and
stos
dec
imul
inc
cltd
push
fsub
loop
lods
sbb
subb
or
cmp
xlat
js
jmp
xor
push
cmc
fcos
cltd
addr16
fiadds
and
pushl
mov
popa
push
mov
push
mov
inc
xchg
mov
adc
imul
out
bound
loopne
dec
jbe
loopne
aad
test
add
inc
xchg
add
mov
imul
sub
or
aas
and
add
dec
roll
pop
es
jo
ret
add
and
pop
je
lcall
test
out
cmpw
push
sarb
jbe
lds
stos
call
es
jge
rcrb
add
and
es
lods
in
ds
sub
xchg
pop
pop
pop
loope
sarb
add
xchg
xor
push
xchg
xchg
roll
dec
out
ret
lahf
mov
push
das
mov
idiv
cmp
jmp
sub
inc
inc
adc
xchg
sub
mulps
popf
cwtl
sbbb
int
scas
push
aaa
fnstenv
aaa
notl
loopne
inc
mov
jge
jbe
hlt
fdivrl
outsl
mov
sahf
mov
loopne
or
lock
test
mov
add
fs
dec
filds
push
jbe
sub
mov
push
xchg
cmp
jge
push
cmp
jmp
notb
scas
fcomps
test
pop
mov
mov
insb
inc
out
gs
pop
mov
mov
fs
xchg
dec
add
push
lcall
mov
sbb
pusha
test
push
dec
scas
sub
sbb
clc
fs
xor
and
lahf
mov
or
mov
pop
jmp
in
lret
pop
dec
daa
cmc
sbb
jae
je
imul
loopne
sbb
stos
mov
sbb
jnp
imul
mov
repz
xor
jae
mov
mov
mov
repz
lock
add
push
movsb
and
cmp
sub
xchg
inc
dec
popf
dec
adc
in
lods
enter
inc
cs
fdivl
movsb
sar
xchg
in
dec
mov
or
cmc
dec
mov
inc
xor
je
jp
iret
dec
inc
aas
sbbb
cmp
frstor
and
mov
adc
call
decl
adcb
ja
iret
xchg
jb
es
cmp
inc
jae
or
pop
lret
xchg
cli
hlt
dec
and
push
cli
sub
lock
push
sub
test
dec
mov
loopne
loope
jg
push
mov
xor
jnp
mov
stos
xchg
addb
add
or
dec
xor
cmp
xchg
sub
shlb
repz
sti
test
popl
bound
rcll
jmp
push
mov
addr16
inc
pop
inc
inc
pop
add
lret
clc
popl
aad
mov
in
lret
cmp
call
outsl
push
adc
aad
in
in
aas
or
data16
pushf
inc
rorl
lods
adcb
shl
popf
jbe
fldt
out
loop
push
outsb
loope
shrb
sbb
in
add
int
in
loopne
pop
dec
or
das
mov
lcall
sbb
mov
pop
sub
mov
shll
daa
rcrb
push
mov
scas
shlb
adc
ret
pop
jmp
jp
fldcw
call
xchg
cmc
lret
ret
pop
and
mov
cli
scas
pop
scas
ss
cmp
xchg
vandnpd
js
jbe
adc
stos
xchg
addr16
cwtl
leave
or
pxor
jb
push
insb
test
push
lds
movsl
lea
mov
xchg
xor
mov
insl
and
addr16
fldl
jmp
loop
fs
sub
and
or
pop
bound
mov
dec
int
dec
loopne
data16
cli
mov
inc
loopne
fisttpl
cmc
xor
int3
daa
aas
jne
clc
sbb
stc
test
add
das
in
insl
into
cmp
iret
or
fbstp
bound
fildl
enter
insl
inc
nop
xor
or
push
xchg
les
mov
push
aam
cmp
shrl
js
jmp
cmp
kmovb
ret
xchg
jnp
sbb
cld
push
lret
sarl
es
xchg
or
divb
push
add
add
in
jb
andb
pop
pop
outsl
cmpsl
jmp
mov
cs
addl
push
stc
mov
imul
mov
into
sbb
and
addl
push
loopne
xchg
or
sub
mov
jo
lods
lods
xchg
pop
push
xlat
test
outsl
aaa
jecxz
lret
inc
or
inc
call
lds
bound
mov
ss
pop
pop
dec
call
mov
cmp
loopne
out
out
int3
jge
add
into
mov
sbb
push
popl
insl
loope
jl
sti
push
mov
in
sub
test
subb
lock
push
pop
sbb
mov
rol
and
in
push
add
cmp
cmp
mov
aad
xor
lahf
jne
xor
cmp
or
jl
idivl
mov
adc
xor
cs
and
arpl
popf
outsb
sub
push
repnz
mov
mov
cmp
sub
push
sub
cmp
and
xchg
fnstcw
es
lret
in
push
push
lea
scas
movsb
test
push
cwtl
inc
bound
je
jg
adc
ret
adc
and
fnsave
cmpb
mov
inc
adc
mov
stc
xchg
int
mov
mov
clc
dec
and
inc
mov
xchg
loope
mov
sarb
inc
xor
rcll
dec
and
les
adc
add
into
dec
rcrb
mov
mov
imul
xchg
ret
mov
cmp
and
or
repnz
inc
pop
jmp
inc
add
xchg
pop
and
dec
jg
mov
pop
mull
out
out
sub
xor
adc
pop
mov
ret
pop
scas
jne
mov
icebp
repnz
dec
lock
jne
push
dec
or
or
loopne
in
xlat
negb
outsb
push
pop
sub
jns
les
dec
jns
nop
mov
hlt
xor
jb
fcmovu
pop
xor
or
in
js
inc
stos
into
cltd
sbb
adc
add
mov
stos
xor
and
jmp
andb
xor
aaa
mov
clc
cmpsb
cmpsb
xorl
cmp
outsb
pop
int
out
fs
sahf
adc
and
mov
sbb
decb
rolb
inc
test
popf
jb
dec
mov
js
jle
pop
pop
shll
dec
lcall
and
jmp
movsl
fsubrp
sub
xchg
dec
adc
dec
aas
daa
jl
sub
push
mov
rcrb
stos
cmpsl
iret
xor
aaa
into
xchg
push
fdivs
dec
xor
outsb
jmp
lahf
or
pusha
js
sbb
andb
stos
movsl
mov
xchg
stos
into
lcall
push
mov
jge
call
jnp
repnz
add
std
cltd
cmp
out
jmp
test
add
lds
ret
inc
add
lahf
loop
xor
mov
mov
mov
push
sti
gs
pop
shlb
mov
sub
and
push
cmc
pusha
dec
cld
and
xor
roll
fistpl
and
push
mov
and
inc
cld
inc
mov
fsubrs
mov
push
leave
stos
rorl
cmp
xlat
shl
xor
outsl
pushf
loopne
mov
std
sub
jo
jnp
cmp
ret
sub
cs
mov
push
dec
push
arpl
pop
lods
repz
in
xchg
or
add
mov
daa
sbb
mull
or
pop
repz
mov
mov
inc
jg
rcll
dec
hlt
insb
cs
rcrl
std
repz
add
inc
mov
cmp
mov
adc
fcoms
enter
mov
ljmp
jge
fwait
cmp
xor
ljmp
rclb
push
inc
pop
mov
mov
mov
sub
xchg
dec
sub
mov
cli
movsb
lcall
push
jns
xor
mov
daa
dec
pop
fcmovb
mov
adc
fcompl
inc
cmp
push
lcall
mov
and
dec
mov
push
insb
imul
xor
xchg
data16
pop
movd
jnp
xchg
push
add
cwtl
dec
xchg
inc
push
push
push
jp
cmp
lds
push
aas
fbstp
push
jns
into
fildl
jb
xchg
in
sub
sbb
in
jg
ljmp
fcmovu
sbb
xchg
jns
cli
xchg
stc
xor
cmp
lahf
push
xor
inc
sbb
pop
cli
test
sarb
jbe
repz
xor
dec
fmuls
xor
cmpsl
or
or
or
mov
std
aam
cmp
stos
and
xorl
push
loope
push
pop
nop
or
pop
sbb
fadds
in
std
adc
lcall
or
add
rcll
xchg
insb
inc
pop
xor
popa
mov
xchg
sbb
sbb
xor
or
dec
sub
shll
test
mov
sbb
and
add
xor
jmp
xchg
or
xor
enter
sub
add
mov
addr16
xor
add
jl
cmp
xchg
scas
jl
jbe
sbb
pop
add
test
add
dec
xchg
shr
pop
loop
cmp
inc
sub
loop
je
cld
iret
dec
dec
push
fiadds
pusha
xor
dec
xchg
scas
jne
push
cmp
imul
pop
mov
mov
test
loop
adc
leave
and
mov
xor
mov
or
add
push
dec
mov
mov
daa
add
pop
je
mov
xchg
mov
cmp
ja
jecxz
fcomps
test
xchg
or
adc
inc
xchg
mov
mov
sub
aam
dec
cmp
aad
pop
dec
xor
rcrl
enter
loop
notl
cmp
popa
push
cld
inc
xchg
enter
sbbb
gs
imul
sahf
outsl
lock
inc
cmp
or
sub
jns
aaa
in
mov
jge
or
stos
dec
mul
ds
jle
xchg
push
cmp
jb
sar
fs
test
es
dec
aad
test
cltd
fnstcw
sub
inc
loopne
imul
stc
mov
mov
pop
dec
fs
aad
cmp
ret
or
pop
add
and
scas
cli
cmp
jmp
jecxz
pop
lahf
push
lret
fsin
dec
das
pop
or
insb
xor
jne
push
add
lahf
jb
sub
xor
xor
xor
adc
mov
out
sbbl
ja
lahf
arpl
or
sub
addr16
insb
sub
gs
mov
cld
pop
mov
aam
or
shll
int
cli
in
jmp
sbb
jg
cmp
sbb
or
arpl
ljmp
mov
mov
push
sbb
dec
mov
cli
push
add
test
xchg
mov
cwtl
in
push
push
lods
push
frndint
scas
xor
xchg
pop
fdivl
lret
inc
rcrb
into
out
aam
xchg
cmp
test
es
sbb
mov
gs
fdivs
rcl
out
mov
cld
dec
test
push
cmpb
mov
stc
pop
pop
ds
push
aas
int
ljmp
cmp
or
jo
push
pop
pop
cmc
pop
and
mov
xor
mov
inc
scas
popa
pop
mov
push
icebp
push
inc
call
aaa
gs
push
mov
sbb
jmp
dec
push
xchg
sbb
inc
popf
add
dec
andl
leave
push
push
xor
add
xchg
lea
aaa
xor
xor
lods
fcmovnbe
ret
cmp
cli
dec
bound
push
pop
jle
sbb
enter
ret
cmpsl
adc
sub
cmc
pop
push
cmp
adc
sub
and
pop
inc
dec
lret
push
push
es
gs
call
jge
or
jg
hlt
pop
push
mov
jge
or
xchg
inc
ja
push
xor
xor
mov
inc
push
inc
push
sub
push
push
jne
stc
cld
lods
inc
sti
mov
sub
push
out
xchg
bound
inc
ja
daa
push
and
movsb
add
sahf
mov
mov
mov
fs
clc
jns
push
inc
add
add
inc
mov
and
push
sbb
xor
mov
xchg
movsb
add
scas
and
in
cmc
pop
out
ret
jge
xchg
adc
xchg
sbb
cmpsl
inc
enter
daa
stos
fcompl
sub
mov
lcall
adc
in
mov
ss
aaa
and
jl
sarb
fwait
imul
sti
loope
mov
jmp
imul
testb
adc
movsb
into
mov
or
ror
add
cli
pop
push
sbb
sub
jb
inc
sbb
negl
dec
dec
lret
mov
std
cmp
push
stos
test
or
mov
sub
and
add
aas
cmpsb
mov
imul
cmp
or
dec
adc
lock
mov
mulb
movsl
adc
ja
xchg
add
out
mov
jl
dec
iret
les
pop
orl
xor
ds
sahf
sbb
or
xchg
andl
mov
cmpsb
xchg
xor
rcll
movsb
or
pusha
sbb
arpl
add
lods
pop
adc
inc
cmp
jmp
hlt
out
es
lods
push
push
pop
jmp
enter
lret
mov
cltd
pop
leave
pop
std
and
pop
mov
jb
push
clc
sub
add
aam
jecxz
je
or
xor
dec
mov
adc
hlt
add
jno
mov
mov
insb
mov
clc
xor
insl
xchg
outsb
imul
pop
dec
ds
sub
movsb
sti
jge
push
jns
sarl
scas
mov
push
pop
inc
cmc
sbb
test
test
lret
pop
into
ds
mov
fstpl
add
pop
leave
cmpsb
mov
mov
push
in
xchg
sub
dec
scas
mov
pop
lret
hlt
lds
or
xor
test
cmp
in
push
ret
rcl
cmpsl
lret
adc
pop
sub
and
stos
cmp
loope
test
ss
ror
jne
fldenv
mov
jbe
sub
mov
pop
dec
shlb
mov
mov
mov
add
jno
mov
clc
enter
adcb
lahf
aaa
mov
jmp
sbb
out
mov
repnz
jmp
stos
icebp
insl
mov
xor
into
loope
fidivrs
adc
xor
test
sbb
jmp
dec
in
testl
test
icebp
inc
and
dec
sti
cwtl
mov
cmc
stos
aam
cld
sbb
ret
inc
out
sub
jle
ret
or
add
daa
dec
mov
daa
push
loop
pusha
inc
mov
outsl
push
pop
in
jg
cmpsl
shlb
les
mov
iret
mov
inc
xor
and
add
or
mov
pop
test
add
int
cmp
xor
adc
sahf
loop
gs
or
jb
mov
xchg
or
jb
inc
xchg
push
test
mov
xchg
subb
out
mov
add
mov
fs
js
test
push
test
iret
adc
jnp
sub
add
je
cs
lret
push
daa
cmpsb
dec
dec
sub
sti
inc
fwait
xchg
xor
add
arpl
sub
add
mov
push
jmp
dec
fnsave
mov
dec
xchg
xchg
push
daa
lret
mov
aam
shll
orl
stos
push
repz
repnz
cld
sub
in
jp
pop
test
add
lods
pop
mov
ljmp
out
xchg
mov
lret
mov
stos
lods
push
mov
and
ret
outsb
cmp
fcmovnb
push
sbb
push
loope
push
push
and
leave
dec
cli
rolb
jge
dec
cs
push
js
mov
pop
xor
cmp
sbb
cmp
or
mov
push
shll
mov
mov
adc
nop
xor
xchg
and
dec
cmp
shll
pop
mov
cmpsb
insl
push
dec
shl
sub
sbb
cmp
scas
sti
rep
jno
es
js
dec
adc
jle
fdivl
pop
mov
push
pop
xchg
int3
cmc
test
enter
cld
mov
mov
pop
adc
mov
cmpsb
cmp
cwtl
pop
sbb
out
xchg
in
xor
bound
loop
repz
mov
xchg
outsl
adc
ljmp
movsl
push
pop
imul
cmc
add
and
lds
inc
inc
fdivl
or
movl
clc
adc
movsl
jb
pop
stc
sub
repz
pop
push
roll
xchg
call
cmpsb
mov
mov
adc
insl
lds
cmpsl
cwtl
sbbl
arpl
lret
pop
mov
in
adc
jae
test
mov
xor
int3
adc
lds
daa
lea
cltd
mov
vsubps
sub
and
rcrl
push
imul
lods
cmpsl
push
fwait
pop
hlt
mov
lods
jnp
add
fwait
jb
fadd
lods
cld
outsb
insb
xlat
pop
in
ret
fistps
or
inc
sub
enter
xchg
mov
repz
cwtl
add
ror
xchg
push
scas
mov
ret
inc
push
sbb
dec
lods
jmp
je
lods
popa
or
out
jbe
stos
ficoms
les
jl
cmpsb
dec
rclb
popa
add
mov
mov
out
lcall
inc
popf
ret
pop
add
in
xorl
mov
icebp
aam
cmp
and
inc
xorb
add
shrl
movsl
popf
xor
lods
jo
xchg
sbb
mov
in
mov
push
test
jne
pop
fwait
stos
in
in
cs
or
pop
inc
push
push
test
sbb
in
inc
mov
sbb
movsl
mov
adc
mov
and
mov
ljmp
fnstenv
sbb
mov
test
fldl
sbb
stos
out
lods
mov
jbe
test
addr16
fildl
in
sub
and
sub
mov
push
inc
shrl
and
jb
and
loope
add
in
pop
stc
inc
jae
cmp
add
adc
in
dec
stos
dec
call
jmp
mov
cmp
roll
stc
or
cmp
stos
inc
mov
ds
js
movsl
movsb
js
daa
pop
mov
adc
mov
fbstp
dec
fucomp
jg
sahf
into
dec
xchg
mov
mov
sbb
dec
mov
push
lahf
in
mov
xlat
test
loopne
fisubl
test
pop
pop
mov
in
in
or
mov
inc
test
sub
cmp
cmp
push
and
sub
cmpsb
jg
loopne
add
or
mov
sub
outsb
or
push
enter
mov
mov
mov
lds
movsl
sbbb
in
mov
xorl
cmp
addr16
repz
xchg
dec
or
call
std
pop
pushf
jle
mov
xchg
mov
push
enter
gs
add
dec
jmp
jp
xchg
pop
or
lcall
out
mov
cs
mov
and
xchg
sub
iret
lret
xchg
mov
pop
adc
mov
sub
call
and
and
lds
lret
popa
sbb
movl
mov
out
lcall
mov
mov
ficomps
out
sbb
std
scas
xchg
push
ss
sbb
pop
mov
fiadds
test
push
mov
push
push
mov
jne
xor
fs
cs
mov
in
fistl
sub
or
and
mov
dec
and
pop
dec
pop
push
loop
jg
and
out
mov
jno
jmp
sbb
jno
and
or
ss
ss
cmpsl
dec
in
clc
nop
mov
sub
xchg
pusha
daa
pop
mov
lods
sbb
das
mov
int
inc
add
xchg
or
mov
push
xor
adc
and
popf
cmp
dec
call
sti
cmp
movsl
int
or
mov
or
pop
movsb
xchg
daa
lods
jecxz
data16
fdivr
push
inc
adcl
inc
inc
xor
mov
push
xchg
call
mov
mov
lahf
lahf
dec
cmpsl
jne
cmp
add
inc
pop
into
in
cltd
arpl
pop
dec
movsb
xchg
out
popa
adc
loop
adc
and
ja
into
data16
jne
pop
in
dec
out
sbb
fnstsw
clc
xchg
inc
adc
mov
and
std
jae
push
mov
xor
or
inc
add
or
push
loop
jg
dec
cwtl
jns
incb
imul
sub
inc
sub
and
loope
lahf
push
adc
mov
and
aam
push
and
jae
xchg
xor
pop
das
scas
mov
imul
mov
sub
in
xor
adc
das
in
adc
dec
jl
cld
sbb
and
loop
sbb
sarl
js
jge
adc
pop
rcll
sub
scas
rolb
mov
clc
and
outsb
aam
mov
shrb
insb
or
fs
push
xchg
cmpsl
xchg
add
pop
add
aad
dec
stos
adc
xchg
dec
stos
lcall
jl
repnz
lods
roll
push
add
cmpb
xchg
add
xor
test
mov
xlat
aad
ret
outsl
mov
sbb
mov
cmp
or
jl
fldenv
cmp
test
movsb
and
xchg
xor
jmp
out
repnz
arpl
cmpb
out
cmp
outsb
std
jae
ret
pop
push
mov
adc
inc
roll
sub
add
gs
fmuls
call
aaa
std
mov
outsb
cmpsb
outsb
xor
addr16
ret
movsl
popa
loopne
push
mov
scas
dec
adc
repnz
aam
sbb
mov
pop
fs
stos
inc
jne
push
cmp
sahf
shr
adc
cmpsb
fstps
ss
pop
stos
mov
sub
movsl
inc
stos
in
mov
or
ja
mov
idiv
lds
lock
lret
mov
loope
nop
ret
xlat
lret
dec
js
lgs
sbb
push
fcomps
jle
or
or
loopne
jo
xor
cmp
call
add
mul
pop
mov
cs
mov
lret
test
mov
movsb
or
test
cmp
je
push
inc
cld
les
jp
int
or
jp
lods
arpl
and
mov
dec
inc
dec
jecxz
xor
js
hlt
jo
fwait
loop
cmpsl
sbb
insb
mov
xchg
push
pushf
jno
xor
xchg
and
jb
dec
sub
inc
mov
cmp
push
adc
int3
dec
mov
aas
jno
pop
xchg
xchg
jne
fcoms
xlat
pop
stos
or
xchg
or
in
lahf
aaa
std
rcrb
push
cmc
and
sub
sbb
movsb
sbb
dec
int3
pushf
aaa
mov
stos
ret
mov
mov
daa
add
sub
pop
jns
adc
addr16
and
sti
cmp
pop
out
xchg
mov
adc
leave
mov
js
jno
pushl
or
aad
sub
adcb
inc
das
mov
loopne
subps
bndldx
popa
lods
ja
push
cmp
andb
lock
ds
mov
or
cmp
mov
adc
inc
mov
adc
je
lea
or
mov
mov
or
push
inc
movsl
inc
test
mov
movsb
and
enter
sbb
imul
fildll
imul
inc
jo
shlb
and
pop
sbb
out
xchg
iret
xchg
repz
inc
aas
push
popf
in
add
bnd
xchg
mov
clc
repnz
xor
stos
lea
repz
pop
ja
fisttpll
pushl
xor
clc
mov
mov
mov
rorb
nop
or
ret
js
jl
imul
xor
fsubs
fdiv
in
fstpt
dec
adc
repz
test
jbe
dec
push
out
xlat
in
and
jbe
aas
fdivrp
and
xor
mov
mov
das
mov
sti
and
enter
cltd
dec
pusha
dec
and
and
and
shlb
and
stc
cmp
or
mov
pop
rorl
sbb
mov
and
out
cmp
pop
sub
mov
rcrb
fldenv
or
add
add
add
adc
lods
mov
xor
mov
mov
mov
mov
mov
mov
xchg
imul
sub
inc
mov
in
or
outsl
in
lret
shlb
aas
jp
test
sbb
dec
pusha
testl
arpl
sub
lds
ret
or
test
roll
xchg
jo
stos
or
stos
stos
or
dec
or
nop
in
cmpsb
gs
icebp
add
leave
inc
pop
adc
lahf
int3
out
shl
mov
test
jns
add
jbe
mov
mov
or
ds
sub
fisubl
inc
xchg
sub
outsl
fsubl
fs
call
mov
test
icebp
xlat
repz
lcall
pusha
add
shrl
outsl
bound
call
pop
or
lods
adc
cmp
xor
fisubs
clc
push
fists
loope
icebp
js
inc
adc
inc
andl
cmc
fcmove
sbb
sub
sub
xor
subl
push
in
sub
insb
jg
stos
adc
icebp
mov
leave
xchg
ljmp
lret
out
dec
xor
sbb
push
xchg
dec
ja
int
in
xchg
lret
daa
sbb
in
fwait
mov
jmp
out
cmp
out
icebp
add
xchg
jecxz
sahf
enter
cmp
fbstp
test
insl
test
in
fnstcw
rcr
aas
xor
mov
jno
scas
cs
ds
xchg
fiaddl
inc
cli
fwait
sbbb
ret
add
jl
or
inc
sti
nop
mov
aaa
lcall
movsl
inc
test
loope
cmp
pop
shl
push
jns
mov
nop
add
test
adc
sti
bound
pop
daa
push
xor
into
xor
test
pop
push
aas
add
stc
leave
push
sbb
and
ja
imul
inc
mov
cmp
mov
scas
and
subb
push
mov
mov
xchg
dec
in
xor
xchg
int3
push
mov
daa
push
mov
push
lock
loop
fisttps
jmp
mov
xchg
sbb
xchg
adc
cmp
outsl
pop
jl
or
out
int
jae
cmc
or
cmp
mov
cs
push
out
pop
mov
mov
out
mov
test
add
sbb
dec
add
sbb
aam
push
ret
push
sbb
or
call
lret
cmp
movl
dec
lods
fcmovbe
pusha
sbb
fst
push
and
mov
es
and
icebp
dec
into
outsl
stos
lods
xlat
cmp
repz
leave
jecxz
dec
lahf
lea
fisubl
cltd
insb
into
fcmovu
mov
cmp
xchg
inc
fstps
or
hlt
cmpsb
test
push
push
or
mov
in
cmp
cmp
pop
imul
stos
aas
cmp
rolb
dec
xor
popa
inc
xor
cmp
aaa
scas
ss
mov
jb
adc
cli
cmp
mov
add
leave
pop
shr
sub
inc
add
repz
xchg
cmp
pop
inc
call
mov
mov
sbb
cmp
in
jmp
in
mov
popf
stos
bound
or
push
xchg
and
mov
scas
mov
aam
pop
insl
nop
aam
cmp
jns
movsl
jge
pushf
push
cmc
and
xchg
aaa
add
imul
mov
jo
fwait
push
ljmp
dec
negb
std
rorb
mov
repnz
push
enter
je
aas
enter
inc
hlt
lock
mov
push
or
inc
ret
pop
popf
sbb
add
loope
push
movsl
jae
mov
lods
or
cmp
and
das
ds
gs
push
mov
xchg
jecxz
or
xorl
sbb
xchg
inc
mov
lock
and
fidivrs
mov
rcll
lea
jmp
sub
imul
rolb
roll
repz
lcall
bnd
jl
and
dec
xor
push
sub
mov
orb
in
dec
stc
jno
ss
ja
aas
sub
or
fstps
dec
movsl
sbb
or
shrb
mov
aam
hlt
mov
imul
je
mov
jb
push
test
ret
enter
mov
sub
mov
pop
pop
cwtl
pop
cmp
out
jb
dec
sahf
jle
xor
xchg
mov
mov
cmp
mov
pop
out
imul
inc
lcall
jg
movsb
test
adc
jnp
xor
mov
dec
lods
dec
jge
mov
cmp
lret
xchg
sbbl
dec
jmp
mov
dec
clc
fmulp
dec
mov
xchg
cld
push
pop
mov
daa
pop
scas
jno
jecxz
in
pop
ja
sbb
inc
pop
stc
js
rorb
adc
andb
mov
dec
cmp
rorb
lock
pop
mov
gs
aaa
loope
je
loopne
xchg
mov
mov
sbb
xchg
xchg
xor
mov
pop
fwait
mov
xor
sub
je
cmp
les
sub
dec
cmp
call
daa
call
dec
inc
add
sub
mov
cvttps2pi
test
pop
or
xor
dec
popf
clc
sub
fwait
add
sbb
cmp
lcall
jl
pushf
jmp
dec
shll
or
sahf
inc
dec
mov
xchg
xor
fists
mov
push
mov
sbb
push
and
sbb
dec
insl
cmpsl
je
fst
add
xor
pop
dec
mov
call
mov
frstor
lahf
dec
push
adc
fs
mov
shll
movsb
mov
insb
mov
mov
mov
aas
mov
sahf
xchg
test
xchg
insl
out
or
lea
leave
push
push
lret
aas
jns
mov
outsl
loop
or
mov
aas
mov
test
add
pop
and
in
fwait
xchg
or
pop
and
ror
add
jne
dec
into
push
imul
ljmp
aad
xchg
jo
jl
pop
js
add
xor
or
pop
jb
xchg
jo
mov
add
inc
out
insl
in
mov
adc
leave
pop
jb
xor
sahf
out
test
mov
or
mov
jbe
movsb
mov
in
rclb
xchg
jl
mov
cmp
in
jmp
jnp
mov
stc
imul
xchg
out
pop
push
xchg
push
jns
pop
insl
jae
jmp
dec
pop
sub
push
insb
pop
inc
lcall
dec
outsl
or
insb
and
out
mov
jb
lock
les
mov
les
cltd
adc
mov
lock
in
rorl
mov
pop
andl
lcall
inc
add
ss
in
insb
loop
mov
cmpl
jo
in
ret
test
jmp
test
in
xor
mov
mov
int
xchg
ret
loope
jno
jnp
nop
jmp
pop
adc
push
jecxz
mov
push
je
jbe
ss
test
add
jo
sti
arpl
push
out
pop
fs
popa
int3
mov
xor
fstpl
and
in
rorb
lcall
fwait
cmp
pop
xor
out
jnp
jae
push
xrelease
jae
mov
or
das
pop
dec
xor
mov
mov
lret
or
inc
add
dec
stos
xor
mov
out
mov
out
mov
jp
jg
jmp
fildll
test
sar
xchg
cmp
insb
sub
xchg
ljmp
imul
rorl
mov
pop
mov
imul
movsb
shr
mov
jb
pop
push
sbb
cmp
xchg
jbe
outsl
ret
pop
inc
stc
ljmp
cmp
push
das
popa
mov
mov
mov
negl
lret
jb
xchg
and
cltd
popa
repnz
rcr
sub
shlb
jae
xor
ret
push
jb
xor
movsl
cwtl
cmp
std
std
adc
daa
jo
push
ds
inc
mov
out
into
sub
lea
test
sar
popa
mov
mov
inc
adc
test
jl
cmp
push
popl
mov
maxps
dec
pushf
dec
mul
cmp
add
mov
push
addr16
xchg
xchg
push
jle
das
cmpsb
lret
xchg
sub
repz
out
xlat
std
hlt
ds
jbe
or
ret
push
daa
mov
push
sub
stc
cmp
stos
xchg
icebp
sti
sub
mov
cs
adc
dec
and
cmp
adc
push
or
adc
add
aas
cmc
dec
fisubl
cmp
adc
loopne
rcll
push
cmpsl
imul
xchg
xchg
lock
lcall
ret
aam
and
ds
aad
stc
mov
and
daa
std
mov
insl
xchg
out
and
ret
xchg
bt
mov
xlat
pop
jb
mulb
lds
sarb
sbb
jmp
fistpll
cmp
mov
mov
cmp
in
ja
mov
cmc
ja
xor
inc
adc
repnz
inc
xchg
movsl
push
movsl
out
test
int
push
mov
push
adc
jb
xor
add
lret
mov
jle
and
push
mov
imul
rep
cltd
pop
aad
test
ja
mov
insb
cs
and
negb
int
jnp
inc
pusha
push
mov
push
dec
pop
adc
mov
jbe
jp
xor
xchg
jle
outsl
je
lahf
and
sbb
out
clts
hlt
push
xchg
ds
push
test
test
mov
fucomi
sar
ret
ljmp
mov
add
adc
cmp
pushf
pop
push
lret
lahf
outsl
aam
push
stc
mov
cmp
mov
jge
mov
inc
mov
and
xor
inc
ds
lock
outsb
icebp
jne
and
and
mov
mov
lods
sbb
push
push
aad
mov
enter
xchg
inc
idivb
std
mov
mov
mov
imul
mov
jbe
ljmp
les
push
sub
sbb
lret
imul
adc
test
mov
and
xor
mov
call
into
fdivrl
mov
imul
mov
xor
lcall
inc
outsb
js
ljmp
mov
lods
or
cld
clc
stos
mov
jg
sbb
sti
sbb
or
xor
and
stc
push
std
mov
pusha
sub
dec
mov
sub
mov
xchg
int3
mov
pop
mul
scas
arpl
ret
xor
xor
loope
jo
and
or
dec
sbb
cltd
xorb
and
int
fistpl
iret
mov
inc
mov
movsl
cmp
ret
add
loope
stos
mov
xchg
push
push
lret
fdivrp
inc
inc
pop
jge
mov
xchg
or
test
out
ljmp
push
pop
sbb
in
or
shll
xlat
in
frstor
mov
lods
xchg
scas
lods
mov
adc
add
sbb
cmpsb
inc
shl
adc
cmp
pop
repnz
pop
cs
icebp
mov
xchg
arpl
loope
hlt
mov
imul
or
xchg
jg
mov
loope
dec
cmp
or
mov
add
in
add
rcrl
ljmp
push
test
lock
mov
mov
and
mov
outsl
jno
filds
jns
nop
dec
jae
fucomi
jmp
mov
push
or
inc
mov
mov
push
mov
leave
aas
and
imul
jmp
adc
outsb
cwtl
jle
aaa
les
cmp
imul
aaa
scas
cmp
push
incb
mov
cmpsl
in
or
inc
sbb
xchg
mov
cmp
or
aaa
insb
or
inc
pusha
cmp
test
push
sbb
cld
mov
rcrl
out
leave
and
out
popf
and
sub
hlt
push
out
inc
xchg
dec
in
addb
insl
jae
sub
or
dec
jge
and
scas
pop
pushf
sbb
sub
iret
ljmp
pushf
push
cmpsl
xor
jbe
dec
xchg
aam
pushf
sti
mov
fsts
xor
movsl
stos
shlb
call
lret
cwtl
stc
adc
test
orl
pop
movsb
sbb
mov
jo
xorps
fmuls
sub
cli
ja
mov
mov
movsb
adc
jo
sahf
pushf
mov
sbb
xor
inc
repnz
ds
adc
xchg
in
leave
out
mov
ds
dec
aaa
aaa
std
mov
das
xchg
fstl
addb
jno
lds
inc
adc
loope
lock
rolb
sub
and
adc
pop
xchg
cwtl
mov
movsb
movl
ficoml
mov
sbb
jl
xchg
movsb
sub
mov
push
and
cltd
test
fidivrl
or
pop
xchg
push
mov
sbbb
insb
lea
loopne
push
movsl
xor
or
int3
dec
add
adc
test
frstor
sbb
daa
cmovno
and
repz
idivb
push
in
ret
mov
mov
shll
dec
or
pop
scas
data16
test
outsb
cmpl
cmp
in
adc
ret
repnz
jmp
in
cmp
xor
lret
pushf
pop
in
movsb
aam
int3
lock
mov
int
pop
add
dec
loope
fcoms
jp
out
icebp
jnp
inc
add
clc
gs
and
mov
sbb
mov
adc
push
sbbl
cmpsb
fmull
cmp
in
and
insl
jp
push
rorb
xchg
fwait
scas
mov
clc
cmp
and
or
jp
ds
pop
insb
sbb
mov
inc
lea
out
bound
jns
jmp
lods
and
push
xchg
pop
adc
add
icebp
xor
incl
iret
daa
aam
lret
aas
in
fcmovb
in
sub
enter
nop
xchg
loope
push
sahf
adcb
or
or
in
push
jb
aas
adc
call
pushf
mov
pop
adc
ds
xor
adc
add
in
mov
ja
mov
leave
push
cmpsl
add
jmp
pop
jmp
mov
push
aaa
mov
icebp
inc
dec
mov
out
sbb
repnz
dec
in
xor
icebp
dec
and
data16
sbb
pop
xorb
fcoml
push
insb
xchg
mov
leave
mov
cwtl
mov
aas
movsl
pop
jb
cs
stc
nop
cmp
cmp
mov
inc
fcoms
mov
push
fildll
mov
adc
pop
ja
push
xchg
int
mov
aaa
mov
clc
xchg
mov
subb
mov
je
cmp
lea
int3
jb
loopne
or
data16
xchg
push
pop
push
iret
jbe
inc
loopne
add
pop
repz
inc
adc
sarb
add
in
xchg
xor
and
pop
sbb
add
jb
adc
pushf
subb
sbbb
ja
sub
and
nop
jbe
dec
rcll
jmp
xchg
cmpsl
pop
xchg
lods
pushf
cld
hlt
and
ret
xor
fwait
pop
rcl
mov
push
and
sbb
sbb
sar
or
repz
and
dec
bound
sub
mov
cwtl
lret
cwtl
inc
lds
orb
out
cmpsl
add
mov
inc
in
in
push
repnz
jge
inc
test
mov
mov
pop
loope
lcall
mov
fcoms
mov
ja
clc
cmp
stos
adc
mov
aam
fscale
ficoml
mov
scas
push
adc
cli
arpl
xor
mov
xor
mull
std
pop
int
repnz
push
sbb
jg
ret
lods
div
adc
pop
loope
ret
push
popf
jns
inc
nop
pusha
mov
xchg
fadd
shlb
jnp
xlat
inc
and
lret
xor
mov
jge
jl
pop
jge
push
jbe
cmp
inc
dec
cmp
xor
and
hlt
jns
mov
sti
repz
mov
or
fwait
ret
cmp
jbe
sbb
je
insb
xor
shll
push
inc
and
jns
cmc
push
push
mov
xchg
cli
cmp
fstpl
psadbw
dec
mov
loop
cld
xor
je
jg
inc
push
cmpsb
add
xor
dec
adc
fs
mov
sti
inc
jecxz
pop
xchg
enter
rol
xchg
scas
int3
icebp
cvtpi2ps
lods
scas
jl
mov
mov
inc
testl
pop
cmp
mov
inc
fidivrs
sub
dec
lods
push
dec
cmpsb
xor
in
das
sub
mov
test
movsl
cmp
mov
mov
and
clc
and
add
mov
gs
shlb
sti
inc
cli
xlat
push
push
fsubrp
jge
jg
aas
icebp
dec
divl
out
xlat
out
dec
dec
mov
xor
push
push
inc
imul
arpl
jecxz
out
in
imul
repz
pusha
das
movl
xchg
xchg
dec
outsb
cmpsl
push
test
clc
pop
cmp
add
ljmp
ds
push
adc
jmp
frstor
imull
mov
pop
not
add
int3
je
cli
adc
ret
cmp
pusha
gs
mov
cmc
jns
test
std
movsl
push
iret
cltd
cmc
sbb
push
sbb
dec
or
dec
cld
cmpl
movsb
into
push
aad
push
add
mov
int3
ret
stc
fwait
in
adc
jle
test
aaa
out
hlt
ffreep
jns
sbb
scas
pop
jmp
mov
addr16
ret
repnz
mov
icebp
push
adc
push
out
push
int
fstpl
ds
data16
inc
push
inc
jg
loope
sub
repnz
xlat
repz
outsb
in
sub
leave
mov
sbb
cmpsb
std
or
cmpl
testb
push
arpl
les
loopne
scas
outsl
outsl
mov
adc
dec
mov
xor
loope
ljmp
pop
scas
in
xchg
push
out
cwtl
or
cmp
pop
outsb
js
cld
out
iret
push
or
cmp
and
outsl
sub
mov
xchg
stc
xor
cmp
jg
jmp
push
fistl
mov
testl
or
sbb
je
cmp
pop
data16
jle
xchg
cmp
outsb
and
stc
pop
mov
inc
and
scas
outsl
adc
imul
inc
movsb
out
stos
push
iret
cltd
cs
or
call
out
int3
mov
subb
adc
data16
shlb
push
mov
dec
lea
lds
sti
shr
aas
std
sub
pop
mov
stos
xor
mov
adc
mov
dec
stos
jl
scas
test
jmp
sbb
mov
cmpsl
in
push
enter
jg
and
sti
push
push
enter
add
adc
insl
ljmp
mov
addr16
outsb
aas
xor
pop
push
xchg
aad
rcll
jge
and
in
and
and
scas
sbb
lock
add
cld
xchg
lods
mov
fldcw
outsb
je
cmpl
andb
cmpsb
mov
test
movl
adc
int3
outsl
out
push
leave
js
push
gs
xor
fdivp
pop
popw
and
in
add
ja
stc
cmp
test
cs
jne
imul
xor
xchg
mov
jge
sbb
lea
es
loopne
sub
out
loope
arpl
add
fs
xor
mov
mov
cltd
cmp
daa
dec
lret
or
test
mov
pop
js
mov
pop
ljmp
add
repnz
lock
add
mov
dec
add
insb
pop
lret
xlat
ja
adc
jb
jb
adc
in
ror
mov
cmpsb
cmp
test
mov
cmp
cmp
mov
imul
inc
sbb
add
test
dec
inc
jl
xor
dec
ret
pop
push
pop
jo
in
call
shlb
cltd
lahf
push
data16
cmp
sbb
pop
daa
outsb
shrl
cmc
pusha
lret
insl
addl
mov
sbb
jae
bound
mov
sbb
out
dec
mov
mov
test
mov
leave
mov
push
push
lea
or
cmp
lds
repnz
jmp
daa
xchg
cmc
and
inc
test
inc
out
int3
cld
mov
sub
sub
mov
or
mov
jns
ja
xor
mov
das
inc
inc
adc
mov
dec
cmp
mov
xchg
mov
jb
push
stos
in
and
rcrb
xchg
repnz
gs
cmp
sbb
dec
cli
aam
dec
pop
xchg
mov
mov
mov
lret
arpl
lds
or
imul
enter
inc
pop
aam
test
inc
rcrl
roll
popf
push
jge
xchg
roll
int3
xlat
pushf
dec
pop
dec
stc
insb
sub
jb
inc
loop
fwait
inc
inc
pop
mov
cmp
andl
jno
scas
sti
int3
in
cmp
rcl
popf
ds
adc
pop
sbb
dec
xor
pop
or
das
cmp
mov
fs
lods
lock
loopne
iret
mov
push
rol
mov
dec
icebp
cmp
mov
adc
mov
or
xor
add
out
push
or
xor
mov
pushf
sub
jp
sbb
xor
addr16
xlat
pop
mov
xchg
out
sub
scas
inc
push
jno
mov
test
inc
test
mov
and
aas
movsl
mov
pop
pop
aaa
xor
es
clc
pop
sub
and
out
mov
clc
out
inc
sub
and
fsts
mov
inc
push
frstor
repnz
jb
pop
adc
sub
not
das
sub
ds
mov
arpl
xor
decl
inc
lock
sub
cli
orb
sar
jp
enter
int
jmp
sbb
dec
mov
mov
mov
cwtl
fsubrs
jbe
or
arpl
add
mov
test
in
popa
jne
mov
ds
cmp
mov
outsb
scas
jge
stos
sbb
mov
mov
popa
adc
out
decl
add
pop
int
mov
xchg
xchg
push
pushf
and
shlb
test
outsl
lds
or
adc
or
nop
cmc
mov
and
lahf
and
imul
or
push
cwtl
mov
addr16
bound
sub
lcall
mov
movsl
scas
lds
jae
insb
jbe
jo
dec
adc
mov
add
and
xlat
sbb
jge
sub
add
dec
sub
mov
ror
mov
mov
jecxz
shll
pop
in
mov
mov
adc
push
add
xor
xchg
ja
inc
push
inc
pop
lock
sahf
dec
repz
mov
daa
mov
adc
sbb
inc
mov
addr16
jle
mov
das
xor
jp
dec
add
insl
rclb
cltd
mov
jmp
xchg
call
movsb
xchg
ljmp
mov
sub
lods
mov
test
arpl
jmp
out
add
mov
push
rolb
mov
adc
dec
push
sub
xchg
pusha
fistpll
push
push
jecxz
pop
leave
adc
outsl
cmpl
gs
scas
dec
mov
ret
fidivl
shlb
and
lcall
jl
xor
jb
rcrl
nop
xchg
call
scas
fisubl
cli
jp
lret
mov
xchg
mov
mov
jmp
ret
and
mov
loop
test
loop
adc
sti
fisubrs
data16
popa
or
and
outsl
movsl
insb
xor
ljmp
fistpll
and
inc
sub
xchg
out
les
addr16
cmc
andl
scas
je
cwtl
cmpsl
frstor
inc
jecxz
cmp
gs
cmpsb
icebp
pop
mov
xor
das
cs
lods
and
mov
push
in
enter
inc
mov
jns
mov
mov
add
scas
clc
sbb
dec
push
cwtl
es
cli
popa
xchg
mov
and
outsl
fidivl
add
test
or
xchg
jnp
xor
mov
cmpsl
dec
xlat
addl
repz
mov
mov
jecxz
sub
out
cvtdq2ps
dec
inc
mov
jbe
nop
ficomps
push
push
data16
mov
mov
xchg
test
push
push
loopne
push
xor
dec
and
xchg
aam
lret
mov
lds
cmp
ja
adc
dec
pop
leave
cli
sub
jmp
xchg
fiaddl
nop
xor
add
lret
aad
add
pop
mov
xchg
pop
ss
fs
mov
lods
xchg
scas
pand
test
xchg
repnz
iret
imul
mov
pop
insl
cltd
adc
or
and
adc
popa
xor
jo
add
add
mov
ror
fistl
push
pop
mov
cmp
inc
push
adc
repz
dec
sub
sub
cmp
mov
adc
rcrb
mov
out
gs
inc
mov
mov
fimull
push
cmc
sahf
sub
mov
hlt
cmp
push
fninit
jnp
roll
or
dec
mov
or
mov
fsubs
add
jge
pusha
and
data16
or
or
fisttpl
stos
jge
pop
aaa
psubb
and
adc
pop
mov
outsb
loop
mov
fistl
gs
mov
xchg
test
mov
push
jne
jb
dec
cltd
or
cmc
sub
pop
mov
lods
movsl
sub
xchg
in
sbb
imul
and
mov
js
cmp
outsl
cmp
jbe
inc
out
rcrl
fisubs
aas
push
xorl
sbb
lods
nop
jb
mov
sub
mov
cwtl
add
inc
push
imul
mov
dec
mov
cs
int3
sub
or
cmp
imul
sub
movb
repnz
subb
fiaddl
in
in
or
and
inc
jl
xor
into
push
push
cmp
clc
in
pop
mov
gs
cmc
jae
and
imul
out
dec
addb
pop
ficompl
call
loope
jg
push
cmp
lahf
or
lcall
leave
stos
data16
or
test
pop
idiv
pop
mov
cmp
xchg
add
ss
cwtl
test
mov
rclb
push
ljmp
pop
lock
adc
add
mov
sbb
aas
stc
push
inc
jmp
fwait
push
cmp
cmpsb
inc
adc
cli
xlat
addl
icebp
int
sti
int
adcl
sahf
rol
inc
fistl
add
cli
data16
or
xor
stos
xchg
xor
sbb
sbb
add
out
test
cmc
sub
ficompl
movswl
nop
dec
push
ja
cltd
icebp
pop
push
subl
inc
pminub
inc
and
xor
jge
shrb
sbb
clc
add
ss
leave
pop
divl
test
add
mov
jnp
in
ja
sahf
or
cmp
mov
adc
lds
call
dec
outsl
cmc
push
test
ret
sbb
cltd
xchg
push
mov
sub
shlb
subl
xchg
jno
push
dec
push
pop
clc
push
cmp
pusha
xchg
lret
ficoml
ds
add
pusha
cmc
and
fs
scas
mov
or
mov
shrl
or
fldcw
dec
xchg
dec
push
stos
pusha
fmul
loop
sub
jne
mov
ret
lea
inc
inc
cli
and
add
iret
fwait
cmp
icebp
mov
sbb
push
mov
imul
mov
fimuls
dec
adcb
fcompl
inc
mov
movsb
je
stos
dec
mov
movsb
dec
xadd
sbb
pop
mov
mov
sbb
fsts
dec
leave
aad
pop
mov
inc
imul
sub
std
jbe
gs
hlt
scas
aaa
outsb
mov
add
repnz
add
pop
enter
int
repnz
in
adc
test
cmp
and
mov
pushf
in
stc
bound
insl
insl
xchg
lcall
aad
out
push
insl
add
sahf
testb
mov
in
pusha
inc
cmp
imull
xchg
aaa
lahf
aam
cmp
testl
add
push
stc
dec
mov
cmp
fiaddl
sbb
xchg
in
mov
mov
adc
cmpsb
adcl
stos
pop
add
mov
mov
jle
push
cmpsl
dec
into
lcall
inc
cltd
ret
out
jbe
outsl
in
push
jg
push
in
cltd
jne
aaa
mov
push
test
jge
lock
cld
or
push
fucomip
stc
fwait
adc
cmp
inc
stc
mov
shrl
mov
push
daa
bound
sub
mov
sbb
in
sub
fbstp
out
inc
mov
xor
ds
inc
pop
roll
mov
lods
enter
lcall
pop
pop
std
movsb
push
fwait
mov
aam
notl
xchg
insl
mov
sarl
or
ret
mov
aas
adc
das
mov
sbb
pop
loop
loop
push
mov
sub
and
dec
repnz
sbb
mov
fwait
push
mov
or
jp
jg
jmp
call
sub
sbb
jle
cmpsl
sbb
nopl
lods
ja
push
inc
call
movsb
jne
push
xchg
jb
pusha
frstpm(287
and
shll
ret
push
sbb
rorl
xchg
jge
lret
into
lods
xlat
fisubl
ja
daa
fstps
int
jo
or
xchg
clc
inc
js
jge
inc
sub
shrb
test
jl,pn
or
mov
fs
and
dec
xchg
test
js
fisubl
std
movsb
jle
cmpsb
mov
insb
pop
dec
cmpsl
pop
dec
fsubr
aas
xchg
jmp
out
loope
in
out
loope
xor
call
inc
out
dec
cmp
lret
jb
jbe
stos
fwait
sahf
divl
shlb
cmp
imul
loop
repz
lret
adc
rclb
sbb
cmp
mov
add
xchg
out
or
sub
repnz
adc
jge
int
and
js
fcmovnb
pop
cli
xor
push
sbb
std
test
xchg
in
das
shrd
xchg
call
call
xchg
inc
add
jmp
push
pop
sub
mov
xchg
sub
loope
mov
jmp
or
add
pop
push
mov
mov
adc
sahf
mov
push
out
ds
cmpsb
push
pop
cmp
and
xor
adc
test
ret
sub
jge
dec
pop
int
ret
mov
pop
push
mov
hlt
movl
fsubrs
inc
dec
out
out
adc
and
arpl
fdivl
frstor
push
or
dec
sbb
sahf
sbb
lret
or
inc
sbb
or
jo
scas
fidivl
adc
pop
and
cmp
dec
rol
cmp
mov
push
mov
mov
sub
aas
sti
or
push
lods
fistpll
cld
adc
movsb
mov
mov
add
inc
push
lods
iret
cmp
dec
int3
iret
scas
lahf
push
cli
lret
lcall
sti
stos
jne
ss
addr16
xchg
sub
enter
jb
outsb
lock
test
shlb
add
inc
sahf
int3
mov
pushf
jg
pushf
and
dec
or
int3
lret
int3
jp
ds
mov
pop
sub
addb
xchg
xor
arpl
mov
cmpl
scas
inc
pop
fwait
jns
outsb
stos
xor
dec
testb
adc
lret
lcall
fcmovbe
dec
imul
sub
inc
into
inc
pusha
sbb
and
enter
mov
data16
stos
sub
dec
out
sahf
mov
aas
rcl
xchg
sbb
insb
in
xchg
xchg
sarl
fsubp
adc
movsb
ljmp
xchg
addb
ljmp
mov
mov
push
insl
jnp
vpunpckldq
mov
lods
inc
scas
add
dec
push
cmp
push
out
push
rorl
out
sub
cmp
ret
push
push
lret
test
sub
inc
xchg
pop
call
sub
test
jl
dec
pop
jp
scas
xor
int3
fdivp
xchg
ret
ret
clc
and
call
cltd
mov
mov
outsb
loop
fwait
in
jae
mov
jno
jns
cld
mov
dec
decl
xchg
ja
addr16
sbb
inc
mov
jne
xchg
push
subl
dec
inc
push
lds
icebp
fdecstp
pop
es
std
add
loopne
mov
mov
lahf
rcrb
cmpsb
sbb
dec
mov
dec
add
dec
mov
repnz
mov
add
pusha
in
mov
das
mov
popf
mov
jle
lcall
inc
rcrl
fwait
repz
aad
push
out
and
mov
push
mov
mov
cmp
sbb
mov
ficoms
dec
pop
mov
push
xor
popa
cmp
xor
inc
mov
pusha
pop
clc
clc
imul
mov
mov
nop
nop
addl
arpl
xor
xchg
cmpsl
push
cmp
fiaddl
push
xchg
fwait
dec
out
ret
lods
sbb
lcall
int3
sbb
je
test
into
mov
adc
into
pop
es
test
cli
mov
int3
add
fdivs
imul
jns
sbb
sub
scas
xchg
dec
push
dec
frstor
sbb
notb
insb
add
int
mov
insl
dec
dec
movsl
inc
cmp
into
jnp
add
sti
arpl
pop
in
out
es
and
in
aam
cmp
xlat
adc
fs
dec
enter
jp
loop
fidivl
ja
inc
movsl
sbb
repnz
stos
push
daa
roll
inc
call
or
cwtl
lods
lret
adc
out
stos
loop
stc
pushl
pop
daa
test
loopne
sbb
jae
sbb
jo
push
pop
push
pop
xor
add
bound
or
and
or
jecxz
ja
loope
mov
adc
shrl
sahf
rcll
or
jl
xchg
jmp
pusha
adc
sbb
jbe
jbe
pop
jg
les
mov
lods
insb
mov
mov
test
jecxz
test
inc
mov
dec
outsl
es
mov
xchg
mov
cli
fnstcw
cmp
fdivrs
scas
adc
gs
andl
pop
leave
out
mov
fnstenv
push
shl
imull
mov
rorl
mov
mov
adc
and
lret
inc
movsb
sahf
sub
dec
movsb
imul
lret
fsubr
and
pushf
pop
addb
cmp
mov
div
mov
ds
dec
push
add
insl
sub
out
inc
js
mov
dec
sub
sbb
inc
fidivrs
jg
scas
push
rcrl
ja
pop
dec
pop
sbb
sub
push
out
call
outsb
push
mov
mov
loope
pop
mov
sbb
xor
jno
fistpl
mov
sbb
test
push
loop
push
jne
pop
and
data16
xor
flds
aaa
inc
test
cltd
hlt
mov
push
jne
jmp
lea
rcrl
jae
leave
test
fadd
push
test
test
jb
and
inc
lret
mov
add
hlt
cmp
mov
aam
je
mov
out
loopne
jns
dec
xchg
movb
dec
scas
jo
cs
mov
mov
or
popa
outsb
adc
xlat
jns
enter
pop
or
pushf
leave
test
cld
jle
mov
jg
iret
xor
idivb
jne
push
pusha
and
cmpsb
xchg
imul
pop
cmpsl
mov
or
jl
mov
cmp
outsl
inc
mov
xchg
push
sbbb
test
or
xchg
xor
lea
jl
dec
mov
arpl
mov
and
shlb
addr16
dec
lods
or
sub
pushf
or
cwtl
in
hlt
lcall
mov
jge
xlat
stos
mov
and
mov
jg
inc
sbb
inc
add
pop
xor
pop
or
or
jge
mov
jno
cltd
dec
xor
aaa
or
cmpl
loope
mov
xchg
cmc
dec
adc
pop
jp
out
push
rcll
aad
lods
lcall
je
stos
xor
hlt
dec
mov
jbe
jne
push
lds
daa
jnp
mov
sbb
cltd
push
jb
add
sbb
sbb
icebp
pop
js
cmp
gs
add
test
mov
icebp
fisubs
dec
push
push
fildll
adc
out
sbb
call
mov
xchg
mov
mov
mulb
pushf
mov
sti
jle
ds
fcmovnu
push
lea
and
mov
pop
push
data16
jge
repnz
sahf
and
xchg
and
popa
int
push
int
in
jae
dec
cmp
or
sahf
sbb
mov
lret
xchg
fcmovb
sub
int3
scas
jb
push
xor
loope
jg
mov
addr16
pop
lahf
ja
scas
pop
leave
rol
or
mov
mov
lret
or
xor
jae
or
cmp
lret
leave
shl
mov
in
pushf
xor
aas
lret
roll
test
ja
int
fistpl
shrb
mulb
je
xor
xor
sub
jae
jae
pop
sbb
movsl
xchg
or
fldt
xchg
add
shll
pop
test
icebp
into
jg
fiadds
andb
sbb
mov
jge
add
fwait
or
jbe
pop
mov
aad
or
pushf
pop
jns
adc
sub
rclb
dec
push
push
jl
int
dec
add
mov
int
cmp
or
inc
cmpl
cmpb
fstpl
in
ja
pop
pop
sbb
adcl
inc
repnz
sahf
sbb
inc
shll
lock
shll
cmp
sbb
mov
imul
mov
xchg
pminub
jecxz
fwait
cld
xor
sub
xchg
cld
js
mov
shrl
es
loopne
stos
shrl
dec
dec
loop
sbb
adc
popa
dec
lods
inc
xor
adc
rep
shr
and
int
push
pop
lret
xchg
dec
je
push
push
jns
std
xchg
aam
or
push
pop
movsl
sarb
cmp
inc
mov
div
arpl
xor
into
sbb
clc
push
aad
xor
pop
ljmp
push
cmp
daa
lret
repnz
mov
or
aaa
js
and
dec
push
rclb
push
lods
js
push
xchg
xchg
mulb
int3
jg
dec
mov
and
repz
xchg
test
xor
cmpsb
pop
adcl
xchg
addr16
stc
or
mov
jb
xchg
sbb
pop
stos
or
repz
xchg
cwtl
mov
adc
sub
jecxz
in
cmp
lock
rcrb
and
scas
jbe
sarb
mov
xchg
lea
out
or
mov
scas
lea
push
add
rorl
repnz
les
repnz
leave
aas
or
es
cmp
ret
push
inc
mov
hlt
cmp
leave
mov
add
mov
js
mov
xor
scas
ret
lcall
lret
jp
mulb
les
outsb
push
adc
fmull
das
mov
push
push
loopne
push
rcll
fwait
inc
mov
stos
sahf
sbb
imul
pop
hlt
xor
and
xchg
scas
push
mov
or
jb
enter
sahf
in
sbb
sbb
jecxz
jmp
inc
xlat
imul
push
and
inc
jno
pusha
shrl
sub
lods
sub
and
jae
xor
pop
lcall
dec
cmpsb
xchg
pop
inc
pop
cs
adc
adc
mov
rcrb
in
js
aas
enter
jmp
adc
jecxz
inc
pop
std
test
aad
dec
mov
mov
aam
loope
cli
int3
or
dec
es
lods
fsub
in
cs
add
int
mov
xorb
lret
push
cli
adc
or
mov
pop
into
push
les
sahf
mov
gs
lock
int
repnz
popa
and
push
cmp
fisubrs
adc
fs
cli
out
xlat
sbb
inc
jl
lds
sbb
dec
loopne
mov
cmp
lds
aaa
inc
adc
bound
imul
into
xchg
push
jle
add
cmp
js
xchg
rcrl
xchg
mov
pop
jle
fsubrp
js
call
jmp
cmp
cmp
mov
fsubl
in
pop
add
popa
push
dec
add
enter
xchg
dec
scas
inc
fisubl
xchg
enter
int3
push
xchg
imulb
add
or
js
call
sbb
add
out
arpl
mov
repnz
sub
mov
loope
cltd
test
icebp
lods
aas
mov
adc
or
imul
int3
push
adc
sahf
xor
or
mov
leave
adcb
je
mov
or
and
cmp
mov
fs
inc
pop
cmpsl
cmp
cmp
data16
lods
jecxz
rclb
fs
fmull
cmc
xchg
or
cwtl
mov
mov
dec
sub
insb
xchg
mov
jp
xor
sbb
rol
scas
sub
insb
mov
jecxz
and
jl
ja
mov
jge
test
add
data16
ja
and
insl
out
cmpsl
cli
jb
in
fwait
xor
mov
sahf
sbb
add
loop
fistpll
or
mov
jmp
lret
aas
sub
push
test
popl
dec
idivl
das
adc
cmp
aad
push
in
js
xchg
roll
jg
sahf
mov
popa
xor
mov
lods
dec
mov
mov
andb
stc
repnz
dec
mov
push
je
mov
es
test
jns
mov
mov
jae
sbb
mov
popa
or
or
lods
sbb
adc
push
lods
jns
jmp
push
ds
cmc
jl
aaa
fxch
enter
movsl
mov
test
out
xorl
ret
rclb
push
sub
xchg
fwait
lahf
mov
or
test
add
movsl
outsl
mov
cmp
cmp
repnz
iret
push
xchg
ja,pt
subb
xor
leave
ss
mov
pop
inc
pop
test
xor
cmc
movsb
xchg
mov
fst
popa
jb
mov
jecxz
mov
adc
fwait
test
inc
and
and
out
xchg
xor
mov
movsb
add
xchg
push
xor
das
in
fldcw
and
popf
xor
xor
xor
push
sub
push
push
in
fsubp
sahf
mov
aas
lods
dec
ss
jb
adc
shll
xor
imul
js
cmp
jnp
pop
lcall
inc
jo
push
js
out
mov
or
mov
push
xchg
jno
into
push
outsb
xchg
sbb
das
shll
pop
outsl
sub
stos
sub
pop
push
cmp
push
jmp
cs
sub
inc
xchg
out
lret
lret
mov
ss
push
mov
fldcw
pop
flds
sub
adc
jae
jg
sti
sbb
jno
xor
add
add
ja
inc
das
icebp
or
adc
push
adc
xor
dec
push
add
cmp
hlt
jg
ret
in
jmp
and
push
lds
xchg
sbb
test
test
xor
outsb
daa
insb
fdivrs
inc
push
cmc
shrb
inc
call
and
and
sbbb
and
jbe
push
mov
adc
arpl
fsubrs
cli
dec
xadd
sbb
rcrl
pop
push
mov
sub
cmpsl
out
xor
lahf
mov
inc
xchg
xor
out
add
or
pop
addb
shrl
call
insb
out
gs
sub
into
dec
jno
je
das
aam
push
or
sub
fstps
ljmp
out
pop
jg
mov
pusha
das
inc
sarl
std
add
in
dec
stos
incl
lcall
adc
int
dec
insb
cld
stos
and
ljmp
push
aaa
xchg
cmp
les
dec
sub
stos
hlt
mov
xor
xchg
sbb
mov
in
imul
inc
ret
sbb
das
and
shlb
sahf
aam
xlat
lds
xchg
outsb
push
std
mov
dec
xchg
sbb
minps
das
pop
jb
mov
cmp
adc
xchg
xchg
dec
icebp
aas
add
jae
lcall
jns
cwtl
inc
adc
push
pop
mov
stos
xchg
loope
push
icebp
mov
shl
sahf
leave
push
xchg
cld
jp
outsb
or
fdivp
jb
xlat
jp
jns
inc
pop
cld
sub
push
push
jecxz
mov
enter
mov
flds
in
push
sahf
adc
add
nop
data16
and
mov
jmp
push
sub
leave
and
mov
imul
loop
mov
jp
xchg
sub
adc
lock
js
pop
cwtl
stos
incl
dec
jp
es
jp
dec
push
arpl
sbb
leave
lock
ret
outsb
sbb
sub
inc
jnp
inc
cmpsb
fucom
repnz
push
jecxz
call
push
jle
iret
jge
icebp
lds
loop
or
mov
insb
xsave
or
ja
adc
mov
cltd
jnp
and
dec
mov
pop
in
inc
je
sbb
cmp
xchg
xlat
pusha
ja
and
dec
pop
mov
sub
outsl
xor
clc
lret
lret
fs
xor
cmpsb
rcr
icebp
mov
pusha
js
jb
mov
cmp
add
jae
ret
mov
and
inc
fiaddl
testl
xchg
clc
ror
addl
test
mov
hlt
int3
and
ret
push
mov
jne
fnstcw
pusha
cmpsb
sbb
pop
nop
mov
sbb
popf
hlt
out
jno
mov
push
pcmpgtd
stc
pop
test
adc
out
out
hlt
push
faddp
movsb
xchg
inc
mov
xor
sbb
push
cmp
das
mov
int
aaa
test
cli
mov
cs
shll
push
test
stos
jo
and
xor
xchg
mov
dec
shll
popa
cmp
pop
add
hlt
or
mov
pop
icebp
aad
shll
sub
mov
arpl
repnz
cld
cwtl
push
js
pusha
scas
dec
scas
iret
xorb
mov
fsubrl
into
xchg
sarb
push
cs
ficompl
dec
dec
shlb
jne
iret
out
leave
inc
inc
jg
fdivrl
jl
arpl
rorb
xorb
xchg
or
subb
mov
in
aam
stos
mov
lret
in
add
pop
mov
inc
xchg
adc
mov
mov
mov
pop
sub
sub
lods
xorl
cltd
cmp
cld
loop
dec
ja
popf
adc
dec
ret
fwait
sub
inc
push
push
cmp
gs
mov
das
push
inc
lock
outsb
enter
ret
inc
jge
and
jge
into
insl
filds
ss
inc
mov
push
sarb
add
fistpll
and
faddl
add
cli
lds
out
sub
imul
dec
test
jb
push
lret
xacquire
xor
dec
das
pop
into
lods
xchg
fists
inc
fcoml
push
pop
cmpb
repz
in
pop
clc
cli
or
pop
js
dec
cmp
shlb
push
mov
ss
test
pop
cmp
push
cmpsl
ret
mov
push
mov
nop
lcall
xchg
xchg
imul
xor
add
lahf
mov
xchg
clc
mov
inc
dec
les
int
jno
divb
push
jg
push
xchg
je
add
mov
jecxz
mov
data16
push
sti
adc
dec
push
stos
xchg
add
in
fisubrl
insb
lock
mov
mov
mov
les
sub
popa
cmpsb
insl
shll
lahf
out
rcll
inc
or
test
les
or
ror
adc
roll
jg
lds
jne
test
je
addb
lret
addb
dec
ret
xchg
arpl
ds
or
mov
adc
adc
in
stc
mov
or
mov
popa
push
add
xor
or
sub
outsb
sahf
lods
or
pop
mov
xchg
mov
pop
fs
or
mov
negb
mov
jp
mov
bound
ret
and
shlb
scas
pop
insl
cmc
test
mov
call
divl
mov
clc
dec
mov
or
cmc
lret
xchg
cmp
mov
jecxz
pop
xlat
pop
adc
aam
ret
xchg
repz
sub
jb
xchg
rorb
lods
lea
jnp
in
inc
in
addb
push
push
add
into
mov
loope
push
lret
push
popf
mov
out
insb
lods
push
mov
fisttps
inc
fucomp
xchg
mov
neg
adc
nop
add
test
nop
gs
mov
xchg
cld
std
inc
mov
bound
enter
mull
jecxz
adcb
in
dec
mov
cmpsl
ficompl
popa
fwait
push
add
cmc
loope
rclb
test
pop
mov
cmp
push
je
ret
sahf
inc
jmp
mov
fistpl
ror
xchg
inc
cmpsl
push
sti
stc
insb
enter
lea
push
icebp
lea
mov
xchg
test
or
sbb
into
loop
aam
jo
repz
hlt
sbb
cwtl
outsl
cltd
mov
xor
sub
mov
nop
sub
lods
arpl
pop
fidivs
xor
xor
fwait
push
mov
in
lea
in
and
cmpsl
sbb
push
ret
or
add
jp
xlat
test
or
flds
test
rorl
out
lcall
addr16
out
pop
out
out
mov
jae
cmpsb
das
xorl
pop
xlat
or
fucomi
pop
pop
or
dec
ja
cmp
push
addr16
mov
jnp
scas
mov
cmpsl
out
mov
sbb
fwait
leave
pop
jle
out
push
fadd
ficoms
pushf
fldt
aaa
sub
in
pushl
cmp
mov
xor
or
push
mov
negl
mov
xlat
inc
test
jmp
data16
iret
outsb
cmp
idiv
ja
dec
pop
lea
popf
test
ret
dec
ds
xor
cmpsb
ret
popf
pop
call
cmp
or
pop
bound
mov
adc
inc
xchg
outsl
movsb
sbb
push
lods
fwait
psrlw
sbb
loope
xchg
iret
out
fisubl
pop
pop
sub
mov
jge
sbb
std
inc
jnp
and
push
aaa
addl
push
sbb
fwait
adc
pop
lods
push
enter
and
jbe
stos
push
mov
sub
cmc
dec
lea
jg
pop
lret
lods
add
lock
mov
sbb
mov
dec
aam
xchg
mov
cmp
es
xor
call
lea
jno
in
popa
push
inc
sub
mov
push
mov
lea
push
inc
call
xchg
lods
and
dec
lods
cltd
jbe
mov
fiadds
fnsave
pusha
test
or
in
lock
mov
test
lcall
dec
or
cmp
mov
rcrb
sub
mov
dec
xlat
loope
and
bound
jl
mov
lods
imull
mov
pop
inc
mov
movsl
mov
fists
sbb
leave
push
cmp
lret
ja
sub
xor
pushf
ss
dec
sub
push
mov
push
dec
jge
scas
or
cmc
test
sti
mov
rclb
rcrb
mov
and
test
js
jmp
lret
dec
cmpsl
cmp
shl
out
xchg
cmp
jb
mov
or
fdivl
xor
fcmovnb
push
mov
loop
inc
aam
and
dec
stos
pop
repz
and
sub
and
rorl
mov
push
add
mov
push
pop
fadds
lds
xorl
and
orb
dec
test
inc
adc
cmp
cmpb
push
inc
dec
push
jno
adc
rol
pusha
mov
pop
mov
cld
cmp
add
cmp
shll
cld
mov
dec
jp
ret
mulb
cli
mov
mov
sub
std
das
imul
fcmove
xor
add
xor
loopne
add
das
mov
dec
mov
dec
xchg
mov
into
add
stos
adc
lret
cwtl
sbb
jnp
clc
jns
lcall
stos
mov
cmp
popf
sbb
jmp
popa
mov
sub
test
cmp
xlat
rcr
popf
sar
movsl
cltd
lahf
popf
dec
lods
jns
mov
in
out
and
and
sbb
sub
shll
lods
aad
xchg
cmp
aas
xchg
mov
and
sbb
jle
lock
xchg
inc
jmp
out
rorl
ljmp
lods
das
cs
loopne
xor
lahf
addr16
repz
mov
dec
pop
add
enter
cmp
ss
loopne
push
ds
mov
adc
jb
sar
or
movsl
in
frstpm(287
setg
adc
cwtl
cmp
mov
lock
loopne
xlat
pop
xor
scas
cli
int
lock
lods
dec
in
int3
inc
ret
cld
cmpsb
sbb
mov
and
loopne
movl
lret
and
xor
cmp
and
cmpsb
push
js
setne
inc
test
cli
mov
enter
aas
cmp
dec
lock
fninit
xor
push
lahf
ljmp
scas
xchg
dec
imul
inc
mov
xlat
fcompl
pop
xchg
xor
inc
jmp
idivb
jns
sub
sub
sbb
out
clc
adc
ret
inc
addb
adc
xchg
push
mov
cwtl
int
sbb
sbb
fistpll
adc
bound
popa
out
fwait
mov
sub
jno
fmul
stc
jae
adc
jp
pop
dec
jb
mov
xchg
push
clc
loop
or
adc
and
imulb
or
fcmovb
xor
jp
cmp
and
mov
lret
inc
dec
or
les
pop
imul
clc
movsb
xchg
lea
lret
xor
shll
and
outsl
out
pop
pusha
push
pushf
leave
loop
xor
sbb
scas
jp
sub
ds
mov
mov
cmp
scas
mov
sbb
push
jnp
je
mov
repz
and
dec
test
or
in
sbb
mov
push
and
je
popf
sub
cmp
icebp
ds
mov
scas
ficompl
jmp
push
cmp
and
sbb
movsb
orl
sub
pop
mov
mov
cmp
pop
jl
adc
stos
sub
sub
mov
cmpsb
rolb
mov
aam
mov
xor
jp
jmp
jle
movsl
push
jae
cmp
fpatan
mov
lcall
pop
gs
sub
mov
cmp
xchg
ret
pop
loope
or
cs
add
sbb
dec
xor
cwtl
roll
je
sbb
inc
in
inc
sub
pop
lock
repz
cmp
outsl
jno
adc
dec
mov
mov
add
outsl
sbb
ja
push
icebp
sub
in
xor
xchg
outsb
bound
adc
mov
xor
xchg
mov
roll
sbb
in
adc
daa
popa
or
pop
mov
scas
mov
cmp
xchg
outsb
insb
add
shll
scas
push
cmp
nop
dec
sbb
dec
repnz
push
enter
je
jle
xchg
dec
out
push
imull
and
sub
add
shlb
daa
into
pop
fbld
and
and
loop
dec
sub
adc
mov
mov
xchg
mov
rsm
push
aam
notl
cmpsb
cwtl
mov
jg
pop
adc
fadds
lahf
adc
das
stos
test
fs
push
mov
cmpl
dec
inc
dec
add
mov
jne
pop
cmp
fwait
js
clc
push
das
sahf
or
insl
sbb
jmp
mov
cltd
sbb
ret
jg
cmc
push
adc
fdivr
dec
jge
out
imul
sarb
das
loopne
pushf
adc
xchg
sbb
das
mov
lock
adc
stos
outsl
xchg
xor
ljmp
pop
aas
pop
push
xlat
push
pop
xor
in
inc
bound
add
pop
cltd
jb
xchg
scas
dec
push
mov
or
adc
lahf
xchg
dec
pop
test
cltd
aas
xchg
jne
dec
push
lret
ret
in
pop
bound
cmp
mov
and
ja
in
sarl
cmc
repnz
ss
orb
xchg
pop
aad
and
add
xchg
jecxz
mov
shrl
inc
push
in
shlb
pop
sbb
int
jnp,pt
lahf
xor
dec
pop
imul
stc
xchg
mov
push
sub
mov
into
rol
dec
fisubl
cmp
test
ss
push
lock
movsl
jne
mov
arpl
gs
repz
cwtl
daa
ret
add
ja
js
arpl
popa
fisubs
in
popf
in
shrb
pushf
mov
jno
lret
repnz
inc
mov
std
iret
or
idivl
dec
in
xor
dec
push
mov
cmp
je
sub
jecxz
in
xchg
int
lahf
loop
xor
cs
movsl
xor
clc
sbb
in
faddl
add
lahf
mov
adc
dec
ds
pushf
pop
pushf
add
push
jo
xor
frstor
push
lock
jmp
mov
test
ss
imul
xlat
sub
pop
mov
roll
repz
movsl
mov
fsubs
test
fstp
xor
out
into
mov
scas
jmp
jl
and
in
or
arpl
push
cmp
adc
in
insl
mov
pop
test
ret
adc
mov
mov
hlt
sub
popf
jg
inc
push
cmp
fsub
and
test
enter
int
pop
test
mov
mov
sub
gs
sahf
mov
push
cs
or
push
pop
fs
out
dec
jbe
add
jno
mov
std
pusha
jmp
jns
popf
pop
add
cs
dec
pop
inc
dec
sub
stos
imul
std
lcall
pop
jecxz
xchg
rcl
test
push
and
and
jbe
hlt
js
xchg
ja
nop
bound
test
pop
add
push
aas
cmpl
jbe
xor
imul
loope
adc
pop
cmp
push
gs
fs
daa
push
repz
daa
scas
jp
mov
test
int
imul
pop
leave
loopne
fwait
push
jbe
andl
push
or
push
push
xchg
repz
and
sti
insb
enter
pusha
test
lret
loope
cs
aad
push
movsl
shl
jmp
xchg
lods
clc
mov
aad
sub
jecxz
lods
jno
aad
in
cld
sbb
xor
jns
mov
xor
aas
lods
je
pop
adc
dec
dec
loopne
ja
xchg
in
xchg
clc
mov
pop
sbb
jge
out
repz
sub
mov
cltd
lar
in
sbb
sbb
in
insb
and
and
xor
cs
fdivl
pop
sbb
imul
cmp
push
jae
lds
pop
ss
jae
mov
sahf
scas
insl
inc
unpcklps
or
repz
jge
out
add
pop
iret
sub
xchg
lret
sub
mov
pop
pusha
test
insl
inc
inc
pop
jno
push
jl
dec
movsb
adc
addr16
sbb
mov
push
xor
xor
mov
fmuls
pusha
mov
pop
clc
pop
pop
ds
cmp
jl
mov
movsb
in
mov
or
push
cmp
pop
push
fstps
popa
xchg
lret
call
cmpsb
pop
push
push
pop
xlat
xorl
aas
lret
inc
sbb
cltd
xlat
ljmp
cs
ljmp
in
nop
in
cmp
mov
dec
je
or
push
fbld
test
repz
and
gs
lods
int3
mov
outsl
and
mov
jg
xchg
mov
outsb
xor
mov
push
sub
sub
add
or
idivl
test
enter
adc
inc
and
add
test
stc
iret
inc
sbb
dec
and
jmp
lret
mov
push
lret
movsl
mov
inc
sbb
movl
mov
popa
ror
jp
xor
add
pop
nop
movb
leave
xor
je
inc
add
lret
push
lds
mov
addr16
shlb
dec
pop
bound
dec
addr16
inc
cmp
dec
insb
pop
push
out
adcw
sbb
cmp
in
sub
mov
andl
xor
popa
jge
mov
ficoml
lods
int
push
rolb
mov
rcrb
mov
in
push
or
push
sbb
mov
xchg
pop
stos
adc
pop
jns
xchg
xor
jns
stos
add
popf
push
inc
jecxz
in
rcrl
push
idivl
cmp
mov
adc
aas
das
sbb
cmp
or
test
ljmp
daa
pop
cmp
adc
push
mov
xor
in
stos
movsb
fcomp
pop
jecxz
sub
leave
jb
mov
and
cs
xor
pop
cmp
test
cmp
movsb
cmp
loop
imul
adc
sub
std
lods
lahf
das
imull
cmc
mov
push
lods
jno
js
push
ret
add
cmc
push
mov
scas
inc
out
mov
pop
jle
and
out
mov
ret
mov
mov
push
sbb
testl
lds
inc
jge
aam
cmp
push
testb
rcrb
xchg
adc
sbb
sub
push
dec
loope
and
cmp
xchg
xchg
in
cmpsl
adc
xchg
dec
mov
xor
mov
sbb
adc
flds
mov
pusha
or
adc
mov
iret
xorb
mov
jg
push
in
arpl
sbb
cmc
insl
xor
es
mov
jmp
imul
dec
std
in
push
inc
jbe
adc
sbb
mov
stc
loope
jae
mov
and
scas
jp
popf
push
insl
call
in
push
jmp
push
aad
pop
dec
repnz
lods
fwait
mov
or
mul
popf
jbe
pop
xchg
jp
cmp
xor
sti
xor
push
call
out
mov
and
addr16
adc
pop
loopne
mov
lods
jg
mov
pop
jmp
stos
sbb
push
xor
push
mov
cmp
cmp
pusha
fwait
insl
loop
jg
jl
cld
cltd
daa
or
fists
test
jg
push
iret
xor
insb
sub
fmull
and
ficompl
int3
pop
or
shl
dec
int3
lea
dec
stc
adc
lret
mov
add
xor
mov
mov
stos
jb
xchg
xchg
int
adc
xor
cmp
or
loopne
bound
out
lds
push
popa
out
xchg
cld
or
add
hlt
sub
xor
xlat
pop
xorl
inc
mov
out
out
imul
fdivrl
or
jnp
movsl
sbb
sbb
dec
sbb
jmp
fsubrl
int
popa
xlat
inc
aaa
sub
fnstenv
push
clc
iret
sbb
data16
add
div
mov
xchg
add
ret
ret
and
push
ljmp
js
test
mov
sub
jae
out
add
push
or
xlat
test
aas
int3
mov
sahf
xchg
adc
mov
xchg
inc
sub
data16
dec
jne
nop
jnp
test
xchg
lods
add
mov
pop
shrl
leave
inc
lds
mov
jge
pop
xor
ror
adc
mov
loope
pop
mov
mov
popf
lods
roll
add
mov
aas
or
adc
inc
popf
jecxz
addr16
cmc
je
imul
dec
inc
sub
mov
ja
in
or
dec
xchg
xchg
cli
pop
cmp
xor
cmpsb
dec
out
sbb
in
iret
fmuls
add
dec
cmpsb
push
and
mov
add
ss
hlt
test
rcll
pop
mov
ss
jle
cmc
mov
add
test
loop
inc
jo
lds
out
testb
inc
sub
js
adc
imul
cmp
out
xchg
cmp
out
jno
clc
mov
or
test
not
js
pop
dec
les
push
and
pop
aaa
dec
ja
sub
dec
sti
js
xchg
xchg
push
adc
dec
and
push
and
push
or
mov
mov
cmc
out
leave
and
cmp
stos
mov
xchg
nop
aad
cli
mov
and
inc
lds
dec
aad
sarl
repnz
test
movsl
xchg
push
push
xor
jge
nop
lret
xor
push
inc
out
or
push
in
dec
orw
pop
out
jne
mov
adc
lret
daa
idivl
dec
push
xor
enter
add
add
inc
pop
adc
jo
pop
mov
dec
inc
dec
or
mov
jmp
mov
pushf
cltd
xchg
mov
or
in
xchg
hlt
aam
icebp
pop
int3
push
push
popa
mov
call
mov
mov
stos
repnz
mov
stc
fisubl
mov
call
sbb
adc
cltd
or
adc
pmullw
xchg
repnz
cmp
or
mov
fstl
lret
imul
scas
pushf
or
out
outsb
pop
fiaddl
stos
daa
andl
sbb
iret
fbld
clc
add
lcall
add
xchg
mov
gs
pop
shlb
loopne
int3
stos
mov
sbb
sub
mov
push
call
xchg
add
lret
out
mov
pop
stc
insb
xchg
loop
push
mov
mov
push
push
test
aaa
adc
dec
scas
pop
std
rcrb
xchg
das
sbb
xchg
loopne
adc
xchg
arpl
rorb
scas
add
in
or
outsl
test
xchg
add
cs
in
xchg
out
push
aad
lahf
imul
adc
outsb
in
aaa
loope
aad
dec
xor
push
push
sti
pop
adc
jne
sarl
imul
xchg
adc
mov
fdiv
push
sbb
inc
loope
fnsave
cmp
imul
out
adc
scas
fstl
lret
inc
jge
mov
push
adc
pushf
aad
xor
fwait
lock
push
rorl
mov
imul
flds
add
push
fs
xchg
xor
push
pop
test
dec
pop
push
mov
imul
push
stos
add
dec
in
cmp
outsl
mov
pop
fs
dec
repnz
mov
sbb
adc
dec
stos
popa
in
add
xchg
cmp
fcmovnb
inc
aam
sbb
repz
jle
cmp
imul
lea
xor
popa
or
test
stc
ja
pop
lcall
in
cmpl
mov
xlat
in
rolb
pop
or
sarb
in
fimuls
and
adc
call
mov
cli
out
xchg
dec
fxch
xlat
sar
mov
pop
sub
icebp
inc
adc
aaa
lcall
and
sbb
aad
mov
adcl
push
jp
cmp
stos
enter
ret
lret
pop
fildl
pusha
add
sbb
mov
xor
fsubs
pop
inc
xor
sub
cmp
push
cltd
push
xor
scas
xchg
movsb
dec
stos
sti
dec
std
push
sub
movsb
mov
mov
push
mov
push
lcall
jecxz
scas
inc
jl
pop
nop
xchg
or
gs
out
les
scas
mov
xor
jp
aad
mov
stos
out
add
popa
cmp
mov
lahf
sub
pop
addr16
iret
push
aaa
lds
jns
mov
mov
lret
jge
movsb
scas
mov
fsincos
fidivl
cmp
insb
mov
and
pop
inc
outsb
inc
loop
and
push
shr
sub
or
enter
addl
or
rolb
cmp
cmc
ret
sahf
adcb
and
mov
movsl
lcall
int
aam
sbb
addr16
scas
ss
loop
imul
in
jbe
cmp
lods
loope
sbb
sbb
cwtl
sahf
out
scas
insl
enter
fcoms
pop
out
cltd
insb
inc
insl
rcr
lods
adc
das
movsb
aaa
scas
add
inc
add
add
addr16
inc
add
adc
add
xor
inc
push
add
mov
dec
add
fiadds
push
or
add
nop
inc
add
scas
cmp
xorb
mov
dec
test
shl
negb
ds
aas
les
adcb
mov
jle
inc
sahf
stc
hlt
cmp
mov
mov
addr16
jmp
jl
lods
adc
xor
lret
inc
and
cmp
in
fistps
ljmp
pop
or
push
push
fiaddl
test
arpl
jle
jbe
add
inc
in
stos
shlb
daa
mov
sbbb
and
and
mov
push
sub
outsb
mov
sbb
das
mov
fmull
push
out
xchg
mov
cmp
mov
insb
sbb
or
lahf
add
mov
dec
pop
mov
hlt
xchg
in
xchg
jge
int3
inc
push
pushf
out
adc
lea
push
xor
pop
dec
pusha
ret
test
enter
or
pusha
cmpsb
mov
lcall
hlt
idivl
and
xlat
test
clc
imul
mov
jle
push
jo
sbb
gs
inc
jp
sbb
inc
cmp
xlat
dec
ja
mov
ja
jne
js
scas
cmp
mov
and
imul
cmp
mov
lods
iret
pop
pop
loopne
int
sub
cmp
xor
adc
in
cmp
lock
sub
sbb
xchg
cmp
xchg
out
movsl
inc
stos
ss
jno,pn
mov
data16
sub
loop
jnp
push
lahf
jns
or
insb
js
sbb
pusha
or
ss
mov
cltd
js
fcomi
mov
jg
lods
mov
xchg
and
jns
data16
pop
ljmp
sub
jecxz
push
arpl
push
rclb
dec
push
pop
std
dec
sahf
shlb
lea
jecxz
mov
leave
lahf
pop
sub
jb
xor
in
jl
outsl
insl
hlt
subb
jp
xor
scas
xor
fidivs
loope
adc
lods
mov
pop
shlb
cmp
ja
mov
add
pop
mov
enter
push
loop
xchg
in
lea
jge
pop
test
rcll
inc
gs
push
inc
fisttpl
push
push
mov
insl
xor
dec
mov
ljmp
subl
mov
xor
sbb
scas
mov
daa
or
xchg
adc
jmp
mov
mov
negb
clc
inc
outsl
mov
shl
sub
popf
sbb
ret
cmpsl
add
cmp
scas
roll
xchg
in
out
fmull
into
push
lcall
fadd
stc
int3
aas
and
aaa
pop
scas
mov
jle
and
js
sbb
adc
xor
rcl
mov
inc
out
mov
or
xor
shlb
inc
inc
repnz
pop
cmp
push
jo
cmc
out
xor
cmp
stos
fisttpll
jmp
cmpsl
jecxz
repz
clc
imul
cmp
shrl
pop
fsts
sub
push
xchg
outsb
mov
dec
push
ficoml
test
xor
dec
clc
fsub
xchg
fwait
jnp
shl
shlb
dec
pop
push
test
arpl
popf
jg
pop
add
cmp
aas
ljmp
mov
sbb
dec
loopne
push
stos
adc
xchg
cltd
pop
and
adc
cmp
cmpsl
test
mov
ror
cmp
mov
inc
or
mov
add
xor
movsb
push
pusha
inc
outsl
loopne
dec
inc
aaa
add
arpl
pop
inc
xchg
xor
or
and
or
or
ja
je
fabs
or
jne
mov
jb
dec
in
shlb
and
inc
jbe
pop
xlat
jae
das
xchg
push
sbb
cltd
lret
push
test
loop
adc
cmp
cmp
cwtl
add
insl
add
cld
test
iret
jmp
jns
and
mov
sub
scas
push
nop
sbb
inc
pop
loop
sarl
mov
pushf
or
out
clc
xor
xchg
inc
ss
mov
pushf
repnz
imul
xchg
mov
into
xchg
cmpsb
mov
add
xor
adc
data16
adc
mov
stc
shld
push
std
inc
push
cmp
mov
xor
mov
les
lds
cmp
pop
ret
push
rorl
lret
xlat
loope
loopne
popa
or
sbb
pushf
push
push
outsb
dec
jno
add
cli
imul
or
pop
sbb
insl
scas
mov
aad
in
lahf
lcall
push
and
jg
push
push
je
dec
movsl
push
std
jbe
push
and
ds
sbb
lret
jns
lods
loopne
stos
psubsb
lcall
push
aaa
inc
faddp
popa
xor
mov
or
lods
sbb
int3
cli
mov
sbb
jl
sbb
jb
inc
xchg
popl
inc
movsb
mov
aas
movsl
cmc
push
std
push
dec
hlt
add
lods
inc
jae
xchg
ja
ficoml
addr16
mov
stos
pop
stos
jno
mov
jecxz
insb
dec
movsl
cltd
xchg
fwait
push
cmp
popa
jb
frstor
movsl
ss
cmpl
mov
jmp
jg
test
es
push
test
and
jno
xchg
sub
inc
pop
push
lcall
xchg
sarl
mov
mov
mov
jecxz
dec
push
add
iret
xlat
fildll
shrl
xchg
and
and
scas
test
rclb
les
insb
push
sub
mov
clc
jmp
dec
mov
insl
xor
sbb
movsb
pop
jns
xor
or
and
ror
sub
pop
jae
orl
out
and
push
cmp
sbb
jo
xor
pop
sbb
mov
fmulp
sbb
call
pop
or
rolb
pop
fbld
aas
mov
iret
jbe
ss
js
les
ja
popa
test
stos
lods
push
in
add
jecxz
outsb
in
in
xlat
adc
lds
adc
sahf
ficoml
dec
insb
in
jg
and
leave
dec
push
xor
pop
out
pop
push
out
ss
push
ret
or
sti
pop
mov
add
mov
test
push
int
mov
repz
aad
jnp
pop
ss
in
sbb
int3
aad
outsb
fstpt
std
mov
movsl
sub
bound
pop
pop
in
mov
xlat
outsb
loopne
sub
pop
test
call
cli
pop
add
mov
stos
movsl
pop
pop
outsb
add
xor
sbb
loopne
data16
dec
dec
cmp
xor
inc
sub
test
lds
hlt
pop
clc
icebp
rolb
out
or
pop
arpl
or
arpl
mov
push
and
push
sbb
clc
mov
xchg
sbb
jmp
sbb
add
repz
dec
xchg
push
mov
loopne
ds
movsl
sahf
int
push
mov
lahf
test
js
add
or
ds
mov
xchg
pop
les
mov
push
sbb
mov
mov
imulb
sub
sbbb
int
jno
xor
mov
jns
das
les
and
aas
fiadds
sarl
sub
xor
arpl
or
mov
sbb
push
inc
mov
daa
adc
adc
sti
or
jns
cmp
mov
xchg
movsl
cwtl
fisubs
push
popf
lds
sbb
xor
aad
xor
in
cwtl
sbb
popf
mov
pop
mov
fdivrl
push
inc
cmp
ja
adc
sarb
sti
les
xorb
or
push
cwtl
out
popa
orb
and
xchg
gs
xor
test
setns
or
outsl
push
mov
andb
out
cmp
cmp
push
mov
xchg
pop
inc
loopne,pn
adc
and
aaa
jno
mov
sub
xor
cmp
imul
push
and
ret
lret
sar
cmpl
inc
ret
xor
leave
aas
call
gs
mov
test
adc
jbe
scas
lahf
test
jnp
jae
pop
push
pop
add
sbb
test
int
outsb
sub
mov
or
mov
push
aam
push
pop
push
jae
adcl
shlb
xchg
adc
cmp
test
sbb
sub
mov
jnp
inc
sub
bound
arpl
push
lcall
mov
mov
dec
xchg
and
int3
popa
add
cwtl
pop
jns
inc
loope
jmp
mov
sub
in
stc
stos
in
orl
pop
mov
lea
imul
xchg
xchg
xchg
pop
jmp
popa
pusha
mov
hlt
iret
xchg
lods
sbb
test
xlat
push
sbb
jnp
sahf
movsb
pop
and
mov
fst
out
push
dec
or
iret
ja
mov
adc
cmpsb
and
cmp
js,pt
cmpsl
ja
call
popf
inc
int
sar
and
daa
jns
in
aas
add
add
dec
xchg
cli
lcall
loope
pusha
push
int3
mov
inc
pop
sub
aaa
dec
aam
testl
popa
fcmovu
push
pushf
test
fadds
cld
and
popa
pop
mov
rcll
push
ljmp
enter
push
pop
mov
cmp
add
movsl
loop
mov
jecxz
sub
sub
lahf
ret
js
int3
push
adc
scas
stos
add
gs
arpl
xlat
jmp
aas
push
mov
or
pusha
pop
sbb
jno
mov
inc
push
sub
inc
xor
loopne
jo
mov
pushf
xchg
mov
rorb
and
mov
or
adc
cmp
mov
test
pop
adc
and
shl
cmpsl
sahf
xor
inc
jmp
xorb
or
inc
pop
scas
rcll
ret
cmp
cmp
mov
cmpsl
out
outsl
test
std
xor
pop
inc
adc
xchg
bound
lock
ret
loope
or
jae
lock
out
test
dec
test
mov
std
push
pop
sbb
int3
imul
mov
int3
sbb
push
into
lods
jns
sub
cli
xchg
arpl
jp
add
stos
rol
fistpll
imul
adc
in
dec
ja
out
jge
lods
xchg
shr
outsb
stos
loope
loope
mov
addr16
rorl
aam
icebp
pop
push
shl
into
jp
scas
fldt
scas
mov
cmpsb
push
cli
cmp
fists
rcrb
dec
in
clc
into
jle
or
ds
sahf
and
or
loope
and
sub
rcll
pop
cmp
sub
or
jae
add
push
sbb
imul
adc
cmpb
xorb
jmp
jbe
sbb
sti
pop
sahf
shlb
insb
and
push
insb
jmp
mov
xor
mov
xchg
std
push
mov
adc
in
add
xor
enter
or
je
mov
push
sarb
sbb
inc
jbe
jmp
ljmp
cmc
add
lret
sti
inc
pop
mov
cwtl
pop
cwtl
jmp
and
and
pop
das
xchg
nop
pop
lcall
arpl
jmp
in
sbb
les
bnd
roll
inc
and
xor
dec
es
jb
std
dec
and
push
loopne
or
fidivl
pop
cmp
mov
push
sbb
cmp
xchg
subb
pop
call
mov
test
popa
aad
adc
shl
scas
xchg
mov
pop
jecxz
jecxz
clc
ds
sub
mov
das
or
movsl
xor
push
cmc
xor
sub
hlt
dec
arpl
jns
push
xchg
das
loop
add
pop
xor
popf
repz
mov
stos
sub
cld
jns
data16
mov
mov
sti
and
leave
or
mov
adcb
dec
lds
push
cmp
hlt
mov
faddl
lcall
jg
mov
jmp
sbb
mov
jl
aad
hlt
ret
pop
xchg
lock
test
ret
popa
xor
out
outsl
or
jnp
ljmp
xlat
mov
daa
push
iret
mov
pop
out
mov
pop
rcll
enter
mov
arpl
push
js
imul
xor
cmp
lds
out
xchg
jp
push
pop
cmp
sbb
add
xor
inc
pusha
mov
dec
jl
repnz
clc
insl
cwtl
pop
mov
push
mov
sbb
jns
add
insl
xchg
pusha
stc
pop
gs
sbb
notl
int
fistps
pop
stos
dec
mov
lcall
pop
xchg
dec
cmc
xor
movsl
dec
mov
adc
xchg
add
mov
es
cmp
loopne
push
jb
in
mov
xchg
movsl
ret
or
sbb
out
lods
rcll
addr16
xor
pushf
add
push
call
inc
add
adc
pop
daa
jmp
sahf
xor
cltd
mov
loopne
cwtl
push
pop
add
arpl
mov
popa
pop
add
xor
or
pop
dec
or
xchg
lea
mov
lods
lods
incl
inc
and
pop
int
stos
je
sub
out
int3
adc
lcall
dec
cmp
push
xchg
scas
sub
sarl
sub
sbb
or
jmp
and
xchg
inc
shlb
ss
push
leave
xor
inc
cmc
mov
add
jo
xor
adc
and
sub
div
xchg
nop
test
push
addb
fstp
ficomps
xchg
sahf
in
fwait
iret
xchg
loopne
add
xlat
lret
stos
xchg
jnp
dec
fxam
out
inc
outsl
inc
xor
popf
mov
roll
std
sarb
fisubrs
ljmp
out
xor
dec
jg
scas
add
stc
xchg
fadd
or
out
cmp
add
loopne
lea
add
cs
test
rorb
mov
push
mov
pop
push
nop
repz
xchg
adc
push
push
fucomi
push
or
gs
stos
or
sub
sbb
jl
add
mov
add
popa
sbb
xchg
mov
mov
add
mov
ret
sbb
ljmp
jnp
add
das
cs
or
stc
lds
adc
xchg
adc
push
mov
add
inc
fdivl
lods
lret
inc
mov
mov
lret
pop
or
cmp
sbb
jo
inc
sbb
push
xlat
and
ds
pop
iret
xor
mov
imulb
sub
push
jbe
and
aas
test
jle
xor
push
adc
mov
mov
push
and
sti
je
pop
testl
and
sub
xor
inc
mov
ljmp
fsts
in
pop
mov
nop
push
push
lret
dec
bound
mov
cwtl
inc
sub
and
sub
dec
and
orb
aas
repz
xor
test
jb
push
sub
sar
pusha
jb
mov
subb
test
cmc
adc
dec
push
jecxz
jbe
pop
shrl
jae
loop
sti
jp
lcall
js
sub
scas
in
push
xchg
pop
inc
fbstp
xchg
cltd
mov
loopne
inc
mov
lock
or
mov
lret
push
aam
xchg
xchg
push
jno
outsb
hlt
mov
mov
mov
insb
pop
dec
adc
jb
hlt
pop
in
loope
or
mov
mov
sbb
sub
aaa
fsqrt
sub
dec
call
mov
pop
mov
mov
xchg
jo
mov
or
or
daa
cmp
jne
jbe
and
mov
xchg
fldcw
pop
iret
inc
imul
jl
addr16
enter
out
in
cli
les
je
test
mov
pop
fwait
sbb
testl
xor
push
cltd
iret
cmp
pop
xchg
and
lret
repz
jg,pn
xor
pop
enter
and
lcall
pop
dec
ss
jg
loope
cs
rclb
mov
leave
lock
fbld
add
inc
fcmovb
mov
scas
aam
imul
fdivl
cmp
insl
pop
rcll
in
fs
int
or
addb
leave
dec
stos
push
filds
imul
ljmp
lods
cmp
test
jne
xchg
sbb
enter
mov
jecxz
xor
jb
ss
in
pop
sub
das
push
gs
movsl
mov
icebp
xor
pushf
jmp
jmp
adc
jmp
pop
push
push
loope
pushf
fdivl
lahf
scas
xchg
testl
icebp
push
movsl
or
jns
clc
or
cmp
je
mov
sbb
stc
pusha
xor
call
dec
mov
sub
mov
mov
shll
das
mov
fs
insl
pop
loop
push
cmp
push
or
mov
je
loope
sbb
mov
addr16
adc
cmp
xor
fisubl
inc
and
in
and
push
or
pop
aam
cmp
pop
jle
sti
movsl
mov
and
in
sub
cmc
push
cmp
sahf
mov
out
lret
loopne
jle
popf
mov
mov
stos
cltd
repz
add
movsl
pop
xchg
push
xchg
xchg
stc
pop
mov
cmp
add
and
pop
pusha
shl
lock
adc
pop
mov
sbb
daa
dec
int3
das
xchg
fsubrl
inc
scas
jecxz
adc
sbb
lcall
dec
pop
icebp
pop
loopne
sbb
rep
movsl
jl
and
mov
inc
jno
pusha
cli
lock
inc
popa
dec
in
jg
xchg
mov
mov
loopne
inc
iret
daa
dec
mov
mov
sub
pop
mov
test
push
loopne
lods
cmp
pusha
mov
mov
dec
dec
xorl
imul
cltd
cmp
lea
loope
mov
andb
sub
or
scas
mov
popf
and
sbb
nop
xlat
sub
jnp
add
xor
cld
inc
sub
popa
pop
xchg
in
pop
mov
insl
mov
test
adc
mov
enter
xchg
mov
jnp
jno
out
hlt
repz
stos
iret
nop
repz
aas
jmp
dec
aaa
popf
cld
loopne
rcrb
push
rcr
ja
mov
hlt
in
loop
adc
inc
flds
sbb
push
ret
imul
data16
fmuls
add
add
cmp
into
pop
push
cmp
js
outsb
rorl
testb
sub
xchg
rcl
mov
pop
repz
sub
pusha
jno
mov
mov
pushf
outsl
mov
or
jg
mov
xchg
das
nop
adc
aaa
scas
mov
ss
cmc
iret
popf
bound
sarb
pop
sub
aaa
adc
jge
xchg
ss
lret
sub
andb
mov
push
movsl
pop
pop
xchg
inc
lock
imul
mov
stos
jle
mov
mov
movsl
loopne
adc
pusha
lods
imul
dec
test
loopne
into
mov
sbb
sbb
inc
mov
push
push
or
andb
pop
cs
fisttps
movsb
xchg
xor
sbb
mov
dec
adc
lods
out
add
lea
sbb
imul
into
jge
mov
lret
aaa
xchg
imul
or
out
sub
daa
outsl
dec
and
dec
adcb
idivl
cmp
sub
test
int3
mov
subb
dec
inc
cltd
ret
inc
pop
in
cmp
ljmp
mov
data16
or
xor
scas
movsl
add
orb
pop
sub
bound
cld
mov
cmp
rcll
inc
in
insl
inc
cwtl
mov
cmc
and
adc
add
jp
and
pop
jl
mov
add
mov
scas
mov
aam
std
arpl
fistps
loopne
je
adc
jge
nop
mov
push
daa
int
add
and
inc
dec
mov
pop
cmp
in
fcomps
sbb
mov
or
jne
fnstcw
ret
sbb
inc
pop
or
dec
adc
pop
jecxz
repnz
shlb
sub
dec
bound
nop
xchg
cmpl
sbb
ret
pop
std
push
mov
cmp
adc
pop
addr16
adc
jmp
cwtl
add
js
mov
mov
lahf
faddl
movsb
ret
jp
pop
imul
test
jge
rclb
jns
in
xchg
scas
cmp
dec
mov
ret
dec
insb
push
cmp
cld
jbe
in
inc
ficomps
popa
xor
jno
fwait
test
push
jl
std
add
adc
fdivrl
sbb
arpl
push
sub
mov
stos
jp
pop
or
sbb
add
or
lea
aad
dec
loop
xor
sbb
inc
fisttpl
xchg
int3
jmp
sbb
les
or
aad
cmp
mov
mov
jne
adc
nop
jns
push
mov
push
icebp
pop
out
out
cmp
cwtl
in
shr
mov
push
ljmp
es
jo
not
lahf
xor
sub
jo
inc
mov
add
test
pop
jle
aam
sar
push
mov
xlat
push
inc
stc
xchg
cwtl
xchg
adc
call
mov
movsl
test
imull
insb
jae
sbb
rorb
xchg
fmulp
dec
jnp
shll
mov
or
dec
imul
sbb
hlt
fs
cli
add
push
divl
testb
mov
adc
inc
es
bnd
cmp
sub
and
jo
out
push
sti
fisubl
and
mov
adcl
mov
adc
out
ja
push
imul
and
xor
loope
cmp
scas
cmpsb
xchg
push
and
in
xchg
imul
mov
xchg
inc
movsl
jae
addb
xchg
cmc
pop
inc
mov
sahf
add
push
imul
adc
sub
mov
mov
mov
mov
mov
js
rcrl
gs
push
lods
xchg
daa
xor
enter
or
jno
mov
dec
xor
repnz
test
orl
shl
or
push
pop
mov
sub
inc
jmp
ds
mov
sbb
xchg
aaa
xchg
pop
in
push
stos
scas
fmuls
mov
jb
mov
cmp
dec
jg
mov
jmp
xchg
or
hlt
mov
jae
imul
adc
dec
shl
xchg
stc
sahf
das
out
adc
test
fcomps
sbb
jne
xchg
xchg
adc
push
icebp
and
mov
cmpl
push
sub
jne
sbb
cmp
mov
sbb
call
mov
popa
dec
xor
test
push
aad
fidivrs
jbe
jecxz
mov
js
outsb
jns
xor
ret
push
aaa
adc
and
and
xchg
adc
imul
lret
xor
mov
aaa
pop
xor
outsb
push
xchg
leave
and
mov
mov
pop
loopne
jle
push
pop
sub
bnd
dec
or
dec
adc
adc
stos
rolb
pop
cmpl
xchg
iret
mov
mov
cmp
mov
adc
int3
mov
imul
and
dec
xor
cmpsl
mov
push
xchg
dec
or
repnz
cli
mov
mov
negb
jp
inc
mov
call
sbb
lods
pushl
jns
mov
jecxz
adc
lea
and
push
sarb
pusha
fidivs
xlat
mov
je
or
mov
fwait
sar
int
sahf
test
sahf
or
jo
call
push
jmp
or
adc
mov
sti
fidivs
shlb
mov
pop
xchg
out
rolb
pop
fucomp
cltd
stos
arpl
jno
mov
jl
jl
fcmovnbe
ret
movsb
mov
mov
mov
scas
mov
mov
aaa
insb
movsb
sbb
cmp
mov
sub
jge
jmp
in
or
lret
insl
push
add
and
fldl
push
xor
or
dec
outsl
dec
mov
or
xor
in
jb
inc
fimuls
xchg
lret
mov
lds
mov
mov
fsts
lods
iret
gs
or
cmp
sbb
imul
jbe
test
mov
mov
dec
popa
das
imul
xchg
repz
test
cmpsl
std
adc
push
bound
jg
bound
outsl
lds
inc
xchg
movsl
fcoml
je
xchg
and
pop
mov
stos
or
sub
jne
jb
in
sarb
cmp
cmp
shl
rolb
lods
aas
jg
mov
cmp
jbe
in
mov
or
stc
incl
jg
fsubrs
sub
push
inc
das
pop
cmp
fcmovne
into
dec
rclb
shrb
pop
js
push
push
add
and
ss
cli
or
scas
incl
jb
cmp
or
std
adc
scas
daa
dec
enter
mov
ljmp
add
adc
push
or
pop
lock
pop
cli
push
or
inc
mov
dec
adc
push
das
jecxz
scas
pop
add
inc
ss
sub
pop
mov
and
dec
push
inc
adc
test
cmpsl
rcrl
pop
test
xorl
jmp
out
leave
jns
lret
and
push
mov
xchg
adc
inc
mov
xorl
data16
sbb
jno
out
leave
bound
sbb
loop
pop
pusha
sbb
xlat
or
inc
hlt
and
xor
dec
lock
xchg
mov
cmp
lds
out
sbb
xor
sbb
inc
shrl
mov
xchg
mov
push
mov
xor
ror
stc
daa
cli
int
sbb
xor
inc
adc
or
lds
mov
add
add
or
ret
repz
jl
mov
jle
xchg
push
mov
mov
push
jge
mov
imul
and
ss
jg
fbstp
fdivs
sbb
aaa
pop
xor
dec
pop
icebp
and
lds
push
mov
jg
pop
push
lret
pusha
test
mov
add
push
repnz
in
cs
repz
adc
jns
push
int3
addb
movsl
ret
sar
add
xchg
scas
add
cltd
shrb
mov
sar
cmc
mov
scas
sub
dec
push
aam
sub
adc
and
cltd
es
sbb
push
dec
jge
or
pop
and
ror
sub
adc
notb
adc
repnz
mov
or
idivb
cmp
mov
enter
pop
popa
add
ds
fdivl
inc
mov
dec
ja
popf
pop
cmpsl
mov
sub
in
jae
jle
mov
cmp
lea
pop
jns
jae
cmpsl
in
lds
jle
inc
and
idivb
pop
popf
cwtl
repnz
psubsb
fldcw
icebp
pop
adc
push
add
cmpsb
jle
loope
into
add
out
push
xor
mov
inc
pop
pushf
xor
mov
mov
stos
push
xorb
shrb
insb
cmp
loope
lods
jae
cltd
dec
movsl
dec
push
xchg
out
sarb
in
imull
imul
fidivl
cmp
add
pop
rorb
fcomps
lods
cli
cmp
outsl
pop
lret
mov
test
or
fcompl
in
mov
jbe
enter
dec
iret
mov
xor
iret
jl
mov
mov
xchg
push
pop
repz
arpl
pop
fwait
js
or
test
jb
jl
jecxz
pop
mov
imul
cmp
test
das
mov
lock
lock
mov
push
cmp
pop
sbb
xor
add
sbb
mov
jo
sub
mov
mov
sub
shll
xchg
neg
ja
stc
mov
loope
shrb
mov
mov
lcall
test
int
or
sahf
mov
clc
cltd
jmp
loope
xlat
lods
jg
inc
or
or
aaa
adc
mov
push
addb
jne
adc
scas
sbb
jb
jmp
inc
xor
sahf
test
flds
in
cmpsl
clc
mov
mov
insl
in
xchg
lcall
xorb
rclb
pop
sti
rcrl
jmp
and
push
adc
fadds
fidivl
scas
mov
mov
mov
xor
fidivl
stc
divb
jle
dec
std
push
and
es
movsb
rorl
xchg
inc
ds
pop
loop
bound
dec
jno
sub
xchg
adc
cwtl
mov
loope
mov
ja
loope
mov
and
cmpsl
pop
push
sahf
ds
pop
cmpsl
int
pop
mov
loopw
xchg
xor
push
ds
mov
hlt
fsubs
mov
sbb
pop
sub
jp
scas
lds
mov
push
jno
xlat
push
pop
inc
and
pop
xor
push
std
mov
jbe
inc
repnz
in
jp
dec
lcall
loopne
std
ljmp
and
push
mov
sahf
in
push
es
adc
ret
mov
push
int3
ja
in
adc
xchg
sub
inc
cmp
and
mov
sti
cmp
fs
mov
mov
xchg
xchg
cmp
jmp
out
xchg
or
pop
pop
inc
pop
in
pop
data16
bound
pop
outsb
cltd
cmp
mov
push
gs
mov
sti
jg
push
sahf
les
inc
das
sahf
ljmp
stos
xchg
and
mov
fstpl
mov
dec
rcr
and
sbb
pop
clc
and
leave
cmc
xor
jo
inc
xchg
mov
xchg
pop
xchg
lods
repnz
outsl
xchg
ret
xchg
pop
roll
in
sbb
sbbl
sub
mov
cmp
inc
pop
lods
jg
data16
mov
dec
int3
movsb
pop
cmp
imull
adc
mov
push
xor
dec
sub
outsb
xchg
jl
dec
xlat
scas
std
loop
stc
lahf
es
lea
and
loope
test
push
aad
mov
ret
jae
sarl
xchg
imul
jl
jne
cmp
pusha
js
mov
sahf
shlb
daa
ds
cmp
daa
xchg
cmp
clc
add
dec
test
bndstx
mov
pushf
xor
or
xor
adc
xchg
push
mov
out
aad
cli
push
imulb
cltd
or
xchg
mov
sub
jecxz
in
test
outsl
mov
pop
jle
inc
sub
in
test
les
mov
add
cmp
fcmove
dec
rcrb
lret
inc
imul
fsubs
sub
fsubrl
fdivr
pop
nop
inc
cmpsb
dec
cmp
mov
shlb
sbb
xor
inc
out
jns
imul
mov
loop
push
xchg
sahf
mov
ficoml
repnz
inc
xor
outsb
insb
fcoms
mov
stos
dec
jbe
push
iret
clc
push
pushf
add
fwait
stos
mov
daa
es
xchg
cmc
add
sbbb
xchg
lock
xchg
faddl
cwtl
push
mov
inc
incb
test
jns
enter
ss
repz
rol
cld
lret
sub
aaa
sbb
push
iret
loopne
lods
subb
cmpsl
jle
ret
sbb
mov
jmp
push
in
outsb
xchg
push
jb
and
orl
sahf
mov
pop
inc
mov
add
arpl
inc
adc
mov
cs
cwtl
test
imul
pop
addr16
jns
fisubrs
mov
add
mov
addl
and
xchg
into
jne
xchg
test
arpl
stc
int
xor
or
mov
cmpsl
push
dec
adc
mov
hlt
je
push
lahf
aas
repnz
stos
adc
mov
jno
in
pop
push
frstor
dec
fsubl
stos
aad
rorb
lods
and
xchg
das
pop
out
mov
cmp
daa
cmpsl
pop
hlt
popa
mov
xchg
mov
mov
inc
push
out
jnp
shrl
cmp
fdivr
dec
jp
cmpsb
xchg
rsm
add
or
jg
adc
ja
fmulp
data16
jns
add
dec
jle
dec
add
orb
shrb
enter
mov
out
mov
mov
pop
fistl
arpl
movsl
cmp
mov
outsb
jns
rclb
lea
rorl
mov
sub
cmp
mov
push
xor
loop
dec
bound
stos
out
pop
dec
fwait
ja
dec
scas
fs
lahf
test
inc
rorb
out
add
add
imul
and
push
mov
lea
mov
and
jg
roll
js
int3
scas
xor
xchg
jno
dec
cmp
fwait
push
jle
arpl
bound
fldt
mov
rcl
dec
out
mov
es
popf
push
or
pop
fisubrs
pop
or
hlt
jnp
and
pop
daa
imul
xor
outsl
mov
jnp
test
movsl
jle
imulb
test
out
clc
mov
dec
jge
jnp
fwait
imul
iret
dec
cmp
movl
out
dec
adc
pusha
and
mov
or
test
xchg
daa
mov
test
movsl
mov
and
fs
cltd
loop
xor
sahf
or
jns
sub
adc
pop
lods
cmp
xchg
xchg
stos
mov
jecxz
xchg
shlb
sub
out
aaa
jp
movsl
call
clc
ret
xchg
jae
shrb
rclb
mov
mov
mov
and
push
hlt
jge
cmp
shl
sub
sub
clc
push
das
add
xlat
xchg
fcmovne
xchg
js
fwait
dec
imul
inc
rcl
repz
push
scas
sub
push
mov
cltd
or
lock
mov
jle
add
push
shl
mov
mov
jns
xor
xor
mov
inc
incl
xor
icebp
push
or
jg
inc
xor
iret
pushf
repnz
add
ja
lret
xor
shlb
mov
dec
cltd
leave
adc
stc
mov
inc
out
sub
sub
pop
jp
pushf
cltd
out
cs
mov
cmp
dec
scas
popf
xchg
movsb
mov
fdivs
movd
mov
mov
sub
sbb
sub
fists
xlat
push
les
mov
pop
ret
lds
dec
hlt
pop
scas
jns
adc
jecxz
in
sbb
shrl
cmp
inc
jl
insb
sahf
jg
push
or
nop
repnz
push
jb
xor
shll
imull
out
data16
sbb
or
mov
lcall
inc
out
xor
jecxz
pop
and
ret
ds
lret
scas
test
pop
scas
insb
xchg
pop
sub
loop
sub
lds
iret
pushf
outsb
mov
sbb
mov
mov
adc
mov
pop
inc
xor
cmp
incl
ss
icebp
push
and
aaa
jo
repnz
inc
jge
sarb
scas
jne
xor
pop
clc
jb
fmull
mov
pop
and
or
mov
maskmovq
notw
cltd
call
xor
ds
mov
dec
push
imulb
xchg
inc
inc
test
mov
push
xchg
jecxz
btrl
loope
test
pop
mov
xchg
push
adc
sbb
fsubrl
hlt
leave
push
addb
std
dec
rcl
jno
fadd
pop
dec
mov
pusha
aam
sti
movsl
loopne
add
xor
aas
xchg
xor
lock
cli
and
mov
gs
ljmp
mov
jb
cmp
pop
push
jp
ljmp
movb
mov
cmp
loopne
shr
inc
xor
loope
mov
hlt
je
pop
out
inc
out
xor
fcmovb
icebp
loop
or
maskmovq
testl
out
and
adc
cmp
mov
pushf
sub
lods
shrb
aas
mov
cmp
or
jae
cwtl
faddl
lcall
adc
clc
mov
repz
in
pop
xchg
jnp
push
idiv
rorl
xor
push
je
mov
mov
out
leave
sub
pop
cltd
jecxz
xchg
sub
cli
imul
fistpll
mov
xchg
fstpl
ret
sbb
add
cltd
add
mov
cmp
push
ds
call
sub
jmp
les
xchg
push
add
jae
fsubrl
cld
pop
imul
cmp
bound
adc
adcb
rol
push
jno
pop
xchg
mov
adc
pop
mov
cwtl
mov
and
mov
scas
imul
bound
lahf
jb
fistpll
jns
mov
pop
jo
xchg
pusha
cs
add
sub
lcall
jle
scas
add
dec
fisubrs
jb
pop
ret
popa
mov
or
nop
imul
addr16
test
ret
mov
pop
out
test
mov
xchg
xchg
push
jp
out
or
out
rcr
dec
and
test
or
sub
cmp
dec
push
clc
xor
sti
rcrl
imul
dec
sbb
dec
scas
xor
mov
sarl
fisubrs
dec
pop
test
or
rcll
aaa
add
xor
movsb
cmova
and
and
addr16
xchg
test
hlt
mov
ds
fcoml
cmp
sbbl
mov
jp
xchg
mov
loope
hlt
ret
xlat
jns
jl
pop
scas
mov
dec
repz
ret
hlt
mov
sub
fwait
xchg
notl
and
jg
cmpsb
xor
imul
inc
mov
sub
stos
jo
inc
mov
ret
adc
xchg
jbe
into
sti
and
out
jge
movsb
adc
adc
sub
push
add
stos
or
jp
lods
ret
cmp
xlat
cmp
scas
and
pop
add
int3
aaa
ljmp
mov
push
in
adc
ljmp
repnz
les
mov
ja
inc
add
popa
mov
dec
cmp
mov
fsubrs
add
mov
popf
mov
adc
jbe
inc
pop
pop
out
jne
popl
or
or
pop
arpl
sahf
cld
xchg
xchg
sbb
cld
mov
or
lcall
std
jge
dec
and
cld
or
dec
push
add
scas
popa
mov
notb
popa
mov
push
iret
movsl
ljmp
call
inc
pop
scas
sti
cld
or
mov
mov
or
push
adc
nop
xchg
add
jmp
push
jl
or
out
xor
jle
sub
ja
pop
rcll
pushf
std
pop
mov
jge
iret
loope
and
push
xor
xchg
xchg
frstor
pop
push
das
in
xchg
test
or
push
cmc
int3
mov
or
jp
cmp
cmp
fnsave
repnz
jge
in
and
dec
mov
cltd
ret
add
in
mov
xor
lahf
sbb
imul
xor
and
dec
fwait
xchg
mov
gs
dec
jecxz
hlt
hlt
jp
xor
popa
loop
sbb
and
testl
xchg
lods
xlat
shr
dec
sbb
add
jmp
je
and
xchg
or
xorl
jl
adc
jnp
mov
lock
out
ret
std
fildll
fnsetpm(287
adc
loop
jg
push
lods
inc
sbb
lock
rorl
ret
mov
mov
stos
and
mov
mov
cmp
pop
mov
mov
dec
fs
sbb
inc
jmpw
xor
push
xorl
xchg
jp
imul
shlb
adc
daa
sbb
sub
lret
and
adc
aas
sti
cmp
mov
shll
mov
sub
dec
test
mov
xor
das
jge
cmp
and
pusha
mov
orl
cmp
fisttpll
mov
adc
xor
mov
je
inc
ret
sahf
mov
mov
jp
adc
sbb
inc
mov
repnz
lcall
or
aas
mov
loop
repnz
push
mov
inc
fldenv
test
lcall
and
vprotq
loope
cli
aaa
adc
jge
jbe
adc
pop
enter
adc
cmc
push
movsb
mov
test
fiadds
sbb
mov
xorps
jno
imul
and
cmp
or
call
xchg
xor
jo
mov
inc
jg
fnsave
push
ds
pop
clc
loop
adc
xchg
push
add
lcall
rcl
fwait
and
cltd
add
stos
addr16
cmpsb
cmc
rorl
push
or
fsubrl
xchg
pop
or
xor
clc
and
pop
fldenv
mov
outsb
repnz
cmp
shl
addb
or
cli
xlat
lret
mov
out
out
icebp
or
jmp
popa
adc
push
lods
iret
sub
xchg
js
and
and
je
fildll
cmp
push
repz
pop
out
out
loope
ss
mov
add
xor
ret
icebp
dec
into
in
pushf
xorb
jno
jmp
jmp
jno
jmp
mov
cmp
add
mov
out
mov
mov
jb
sbb
jmp
daa
cltd
pop
popa
pop
xor
mov
adc
cmpsb
dec
sbb
lcall
lcall
dec
out
lods
or
sbb
out
xchg
mov
ja
int
mov
jbe
xchg
jl
int3
cmpsl
xor
add
mov
mov
xor
add
mov
in
push
inc
ss
jo
jg
lock
cltd
jge
mov
cld
mov
sub
jne
cs
popa
aas
mov
add
mov
repz
dec
or
jecxz
call
int3
ret
xchg
scas
in
mov
loop
mov
stc
in
lret
add
dec
pop
hlt
adc
add
test
cmp
xchg
sub
xchg
insb
movsl
xor
xchg
xchg
scas
loop
cmpsb
sbb
jb
mov
ja
cmpb
jle
imul
sub
lahf
sub
inc
xchg
add
jmp
adc
push
mov
cmp
or
xchg
dec
or
mov
xchg
in
push
xor
sub
cmpsl
sbb
lds
mov
pop
jns
ret
insb
and
hlt
jne
jb
mov
ficoml
pop
inc
mov
test
shlb
sub
xchg
and
mov
or
andb
sahf
cmc
sbb
inc
push
or
dec
cmp
add
movsl
or
pextrw
lcall
mov
jp
xor
into
push
ds
lahf
inc
testl
add
push
popa
hlt
fwait
jno
ror
mov
jl
test
sarl
xor
adc
xchg
push
pop
jecxz
cmp
rclb
inc
and
pop
jno
push
adc
roll
inc
and
lahf
nop
push
lcall
pop
push
cmp
jecxz
sbb
inc
std
shll
sbb
jno
lods
lock
in
sbb
xor
adc
inc
xor
fldcw
out
test
inc
insl
lahf
pop
ret
mov
cmp
cmp
mov
push
mov
pop
test
cmp
adc
fldln2
sbb
pop
inc
cmpsb
inc
addr16
push
test
cwtl
je
daa
mov
push
iret
xlat
outsl
adc
sub
rclb
sbb
pop
mov
inc
mov
dec
dec
mov
shlb
lea
fistps
out
add
aas
adc
and
sti
sbb
arpl
pop
pop
pushf
popf
jg
xchg
out
ds
push
mov
fcmovbe
jge
out
dec
or
inc
inc
mov
out
les
test
cmp
repnz
mov
xchg
push
sahf
xchg
dec
int
push
icebp
adc
add
jno
enter
mov
pop
mov
or
mov
mov
mov
cmc
iret
add
popf
cmpsb
out
fdivrs
lods
lods
and
les
sbb
xchg
mov
mov
negb
xlat
aad
or
mov
add
push
int
stc
add
out
stc
cmc
jl
push
scas
es
inc
ret
lcall
mov
stc
jp
xor
mov
leave
push
xchg
es
ret
dec
mov
mov
add
cmp
pop
sub
test
loope
arpl
fs
jo
or
jmp
sbb
int3
stc
adc
jp
mov
mov
inc
cli
imul
push
nop
aas
ja
popf
and
dec
movb
out
loop
cvttps2pi
lcall
xchg
std
mov
sub
out
and
cmp
pop
cwtl
div
fucom
adc
xor
dec
xlat
dec
mov
or
and
sub
data16
sub
cmp
test
cmp
shlb
adc
call
mov
lret
xchg
ret
push
dec
adc
outsb
push
cmpsb
inc
mov
xlat
xor
mov
mov
ss
mov
test
and
es
adc
popf
jge
sbb
pop
scas
or
pop
dec
mov
cmpb
out
xchg
sbb
fcmovu
sub
nop
or
xchg
stos
mov
mov
cld
push
out
es
mov
xor
fmull
pop
mov
cli
int3
push
adc
push
xor
bswap
dec
in
mov
mov
mov
mov
mov
cmc
aad
in
popf
repz
cmp
or
xor
rorl
out
mov
clc
fwait
cmp
xchg
and
sbb
sub
pushf
imul
pop
clc
inc
test
or
xchg
roll
movsb
movsb
lock
adc
mov
sub
inc
nop
pop
outsb
insb
outsl
cwtl
add
movsb
sbb
popa
mov
push
mov
in
shr
mov
mov
mov
jp
xor
jo
mov
cld
pop
or
dec
sbb
mov
add
push
jmp
insl
inc
stc
cs
xchg
add
lea
or
mov
hlt
out
pop
jnp
loope
shrb
add
push
xchg
inc
mov
pop
push
cmc
jno
in
mov
sub
out
call
xchg
push
cld
pop
notl
cwtl
sub
pop
je
xchg
or
aaa
fldcw
outsl
das
ret
push
mov
subb
pop
and
jecxz
repnz
pop
sbb
ret
cmp
fimuls
jb
movsb
mov
add
and
xor
and
pop
std
js
push
popf
ror
xor
fwait
aam
adc
stc
dec
lahf
loopne
rcll
or
or
out
and
dec
add
and
mov
xor
adc
shll
daa
mull
pop
mov
or
jg
in
jb
push
dec
lock
sahf
dec
outsl
popa
push
int3
scas
test
xchg
mov
or
daa
mov
push
aaa
lea
stos
outsb
push
dec
xor
or
mov
sarb
inc
cmc
adc
arpl
cmp
pop
xchg
insb
js
inc
dec
sbb
fldl
aas
out
subl
push
push
out
movsl
fdivrl
ficoms
mov
fsts
cmc
pop
fisubs
adc
adc
push
mov
xchg
roll
leave
jmp
mov
mov
testb
mov
jl
bound
test
push
rcll
and
jg
jle
sub
pushf
or
pop
push
nop
or
pop
sbb
dec
adc
xorb
in
push
push
scas
rorl
loop
sar
xchg
pop
ds
or
popf
rcrl
out
jns
loopne
mov
pop
and
je
pushf
cwtl
or
adc
mov
repz
movsb
push
int
cmc
pop
push
mov
aam
push
adc
test
push
divl
or
jo
in
pop
popa
dec
and
xor
adc
mov
rcrl
sub
fwait
pop
int3
push
in
push
outsl
mov
rol
outsl
adc
push
and
popa
sbb
dec
pop
pop
in
stc
and
push
shlb
inc
sbb
pop
out
imul
xor
pop
stos
movsb
dec
pop
shl
cmp
rcl
cmp
push
shll
cld
sub
cmpsl
ljmp
imul
sahf
mov
push
out
lahf
and
mov
jge
add
mov
icebp
ret
sbb
mov
push
inc
sbb
mov
sub
cmp
pop
and
push
sbb
dec
adcb
lods
jns
test
jne
andb
jecxz
push
movsl
repnz
jbe
pop
adc
and
ret
mov
repnz
test
inc
sub
cmpsl
jle
sarl
lods
push
or
and
divb
das
or
xor
cmpl
scas
sub
inc
adc
popf
mov
imul
adc
sbb
rcrl
movsl
dec
int3
das
or
cmp
jl
stos
jl
push
das
gs
lahf
in
addr16
pop
std
mov
lahf
jmp
jns
sbb
or
lds
pop
mov
sbb
icebp
or
adc
xchg
pop
popf
or
pop
xchg
jb
mov
adc
test
mov
enter
push
ja
nop
xor
or
pop
fdivrs
or
mov
xor
out
mov
pushl
xlat
dec
repnz
mov
inc
jo
out
push
test
test
loop
fisttpl
das
or
jp
and
icebp
cwtl
jmp
aad
nop
xlat
mov
in
push
sahf
xchg
incb
mov
out
sub
mov
mov
xor
lods
mov
loopne
xor
fldl
cwtl
sbb
lea
pop
xchg
cmpsl
insb
xchg
and
and
jno
into
test
in
inc
push
mov
cmpsb
adc
cmpsl
push
jb
jns
lahf
xchg
stc
cwtl
into
dec
push
xchg
xor
popf
xor
sbb
imul
cmpsl
sbb
addr16
rcrl
inc
fucomi
or
xor
test
test
dec
and
mov
dec
jo
xchg
iret
repnz
sub
lds
fisttps
mov
test
or
filds
sub
loopne
mov
scas
mov
dec
mov
pop
test
pop
add
fimull
jb
not
jne
cmp
jecxz
fcoml
lods
adc
mov
addr16
lret
fstpl
jae
popa
jge
or
xchg
mov
stc
negl
sbb
dec
jb
pop
lcall
sahf
add
in
jge
xlat
dec
mov
xchg
adc
in
dec
mov
leave
add
test
rcrl
arpl
idivb
adc
cmp
inc
and
in
xor
enter
xor
xor
add
test
cmp
xchg
jo
and
fnstenv
sbb
fcompl
inc
mov
xchg
add
fistpl
js,pn
addr16
mov
fucomp
jmp
xchg
orb
pop
outsl
sbb
repz
stos
jne
xchg
pusha
imul
and
sahf
push
lcall
and
adc
gs
inc
or
mov
jbe
add
cmp
jg
mov
adc
sub
daa
cmpsl
mov
gs
ds
mov
insl
iret
shl
jne
sbb
adc
repnz
fs
out
insl
xchg
adc
ds
ja
int3
into
test
mov
repnz
insl
mov
arpl
pop
ffreep
jecxz
jne
fidivs
push
xchg
int3
insb
inc
mov
and
mov
sub
mov
mov
rcll
mov
mov
dec
bound
mov
lods
int
int3
loope
aas
xchg
std
xor
sbb
movsb
int3
mov
in
mov
fcmovnu
jmp
jb
mov
aam
iret
jae
mov
inc
fdivrs
test
pusha
loope
fiadds
mov
or
push
loop
xor
add
lds
jecxz
leave
ret
jmp
fstpt
adc
xchg
xor
adc
xchg
test
mov
or
andb
out
xchg
fimull
mov
mov
ja
adc
gs
inc
imul
scas
loopne
out
pushf
in
jp
rcr
mov
dec
aad
mov
lods
out
imul
test
push
jnp
daa
test
push
mov
loop
fsubrs
xchg
je
xor
addl
data16
test
adc
leave
mov
inc
mov
arpl
mov
imul
iret
dec
mov
or
jb
pop
ss
dec
push
insb
xor
mov
std
out
pop
xorl
push
cmp
jns
jnp
push
test
push
scas
push
push
xchg
jo
mov
sub
mov
sub
sti
push
mov
nop
pop
or
test
mov
loop
daa
sbb
dec
cltd
mov
dec
adc
out
or
loope
pop
mov
das
std
adc
xchg
test
xchg
ffree
sub
adc
into
sbb
cmpsl
inc
scas
pop
and
outsb
adc
pop
ret
sbb
cmp
sbbb
jmp
ja
stos
and
out
adc
stos
nop
lods
call
cmpsl
nop
addr16
fwait
or
ss
cmp
and
pop
dec
mov
mov
notl
jno
mov
aaa
and
sbb
pop
adc
and
icebp
inc
pop
int
inc
push
sqrtps
shlb
sarl
sub
cs
add
jge
dec
mov
out
pop
dec
std
add
jbe
inc
cli
mov
adc
lods
push
test
jno
out
inc
repz
aad
push
data16
push
xchg
add
fcomi
idiv
cmp
and
fldcw
leave
gs
int
lret
int3
mov
cmpsl
daa
push
in
jp
test
mov
push
add
ret
nop
xor
dec
cli
push
jge
xchg
les
adc
xorl
fdivrl
in
and
push
mov
lahf
mov
mov
dec
cld
cmpb
xchg
cwtl
addr16
int3
fwait
hlt
xor
mov
adc
cwtl
or
out
inc
sub
jo
shrb
jb
push
rcrb
js
stos
stos
lods
cmp
arpl
jnp
call
mov
pop
lds
xchg
ljmp
in
pop
lret
and
xchg
shlb
rorl
pop
adcl
imul
aas
jle
xchg
cmc
fmull
jg
adcl
cmpl
and
loopne
push
rorb
sub
fbld
adc
movsb
fwait
mov
std
mov
stos
sub
divl
jg
add
repnz
sbb
mov
xchg
test
mov
pusha
lret
xor
int3
nop
or
inc
cmp
fidivl
mov
cwtl
in
into
pop
and
sbb
ja
imul
aad
outsb
xchg
mov
sub
fwait
js
jmp
push
push
add
adc
imulb
addr16
inc
es
iret
cs
adc
xchg
aam
es
std
add
cmp
ficompl
popa
test
add
sbb
fisttps
out
fwait
test
imul
sbb
lret
dec
inc
mov
add
jb
mull
adc
stos
fs
add
adc
mov
inc
sub
lret
lret
lock
sbb
iret
cmc
sub
fcompl
cmpsb
aad
stos
fimull
pop
js
bound
mov
bound
aas
cmpsl
and
push
push
and
loope
and
mov
inc
pop
push
repz
xlat
aam
sub
call
les
arpl
popa
shlb
popa
mov
cmp
loop
lcall
dec
scas
aam
les
lret
or
cmp
or
inc
leave
mov
aam
outsl
cs
mov
das
xchg
xor
decl
and
fdivrl
testl
arpl
or
mov
jmp
mov
jae
cld
sub
mov
les
das
iret
xor
loope
rorl
adcb
cwtl
fcoml
mov
cmp
jae
jno
into
xchg
sbb
fnclex
stc
popa
xor
pop
lcall
xchg
cmpsl
or
fdivrl
push
daa
mov
inc
sahf
test
ficoms
iret
jmp
pop
dec
mov
and
add
fidivs
fstl
cs
push
push
xchg
add
or
pop
stc
and
mov
bound
pop
xchg
shlb
cmp
mov
and
aas
fists
outsl
sbb
mov
int3
push
jge
aad
xchg
jmp
push
out
mov
jp
or
iret
cld
mov
inc
jg
outsl
outsl
jmp
lock
fnstcw
insl
mov
jecxz
sub
xor
mov
in
imul
pop
outsb
stc
jno
sarl
arpl
shl
cmpsb
cmpsl
testl
push
xchg
and
xchg
add
add
loopne
jge
inc
cmp
cmp
push
xchg
in
lea
aam
jno
pop
dec
fnstenv
push
adc
push
add
xchg
cs
push
mov
mov
adc
stos
mov
test
cmovle
pop
push
lret
fisubrs
in
sub
adc
xor
out
popa
icebp
add
or
or
mov
mov
add
leave
dec
jg
push
add
adc
pop
mov
scas
repnz
std
lret
cmp
nop
dec
aam
out
mov
sbb
test
jne
mov
rcll
jge
rclb
filds
xchg
sbb
adc
xchg
addr16
pop
sub
out
adc
je
scas
fwait
sbb
fdivrs
jns
or
cld
dec
push
or
xor
or
fisubl
mov
mov
cmpsl
sub
shr
jb
ficompl
mov
shll
jo
pop
insl
and
mov
mov
adc
shrb
xlat
pop
cmpl
pop
jne
dec
pop
jo
and
add
lock
pop
movsb
push
push
xlat
gs
mov
add
add
and
sub
jmp
mov
fwait
add
inc
add
dec
or
out
add
sbb
jle
mov
xor
rcll
mov
out
push
js
gs
push
sbb
gs
std
repz
sahf
call
movsb
dec
push
outsb
aad
mov
mov
lahf
sub
jae
cmc
imul
pop
mov
cmp
lahf
add
push
rol
xorl
pop
dec
push
lret
jne
addr16
inc
cli
push
mov
add
inc
fs
ret
adc
adc
add
es
jecxz
icebp
xlat
sbb
and
and
jge
or
lock
scas
or
fdivs
pop
pop
cmp
les
cmp
loop
push
jmp
mov
jne
jp
cli
rcrb
std
jae
jno
xor
ljmp
or
scas
inc
jbe
mov
fisttpl
mov
sub
sahf
iret
xor
shrl
mov
cmp
popa
jge
jo
xchg
pop
in
mov
shr
out
fisttpl
or
jp
loopne
loopne
add
jb
mov
inc
jnp
xor
adcb
adc
mov
add
lret
enter
int3
mov
inc
sbb
fstpt
adc
leave
jge
imul
dec
ret
and
xchg
adc
stc
loope
test
xor
sub
movsb
neg
jb
jmp
xlat
fs
mov
sbb
push
push
mov
hlt
rcr
adc
jl
dec
mov
jge
xor
or
sbb
pop
call
aad
icebp
mov
ja
pushl
pop
or
adcl
lods
mov
mov
and
ret
in
adc
in
and
lret
lods
repnz
bound
inc
xchg
insl
pop
repz
loopne
subb
mov
aas
fcompl
jnp
mov
xor
mov
pushf
inc
xlat
pop
xchg
cmp
scas
or
cmp
adc
xor
rorb
and
push
sbb
jmp
out
mov
jle
mov
clc
or
jb
jmp
cmp
mull
adc
testl
fnstsw
sub
ret
icebp
add
in
mov
add
sub
dec
mov
out
and
sbb
in
xchg
xor
icebp
popa
add
cld
addl
inc
dec
scas
bound
xchg
in
pop
hlt
mov
in
xor
cmovge
push
xorb
outsb
sub
repnz
shll
mov
or
sbb
sub
pop
mov
push
in
cmp
fcomps
in
aas
out
mov
cmc
test
inc
loope
decl
ret
cld
lods
mov
push
call
jbe
adc
mov
inc
mov
mov
in
sar
outsl
pop
js
popf
int
cmp
xor
arpl
ret
mov
fmull
addb
outsl
jl
mov
clc
lahf
lcall
imul
jle
pop
and
push
int3
stc
fcompl
mov
repz
cmpsl
in
jge
push
inc
cld
mov
xchg
jnp
aam
jg
push
in
mov
xchg
insb
jg
or
or
ds
insb
pusha
xor
sbb
xor
push
dec
jb
leave
ret
xchg
subb
mov
out
add
arpl
hlt
inc
xchg
xchg
popf
sarb
scas
out
repnz
outsl
and
mov
lock
mov
insl
xor
cmp
cltd
and
fisttpll
cmpb
out
add
xchg
lods
popa
mov
fwait
movsb
shrl
pop
daa
push
adc
jns
out
int3
jmp
xchg
xchg
jb
stc
arpl
into
into
scas
cmpsb
dec
imull
je
mov
pop
divb
out
test
inc
dec
add
int
jle
jne
dec
sub
or
imul
cli
jle
aas
imull
hlt
sub
jb
push
cmp
mov
mov
sbb
int
stc
mov
push
jb
jmp
ficomps
out
and
adc
add
inc
xchg
outsb
ret
xor
add
mov
cld
jbe
push
int3
dec
inc
mov
ficomps
xor
test
aam
jae
leave
shrl
inc
jae
inc
movsl
inc
and
sub
sub
loope
xchg
push
add
mov
repz
pop
jnp
push
cmpb
pushf
xor
stos
lret
jl
aam
ret
or
and
cli
adcb
jns
leave
mov
mov
push
hlt
inc
jo
inc
in
lock
leave
adc
push
fdivr
cmp
cmc
shll
xor
adc
jl
mov
mov
inc
cmp
pop
lock
sbb
cmp
xchg
sub
mov
dec
sbb
sbb
test
adc
mov
inc
fistpl
mov
xchg
sub
pop
jae
dec
push
lods
mov
cmpsb
mov
stos
sub
lcall
lret
cmp
cltd
insl
ljmp
lret
into
inc
pop
xor
repz
push
sbb
inc
in
sub
faddl
inc
cltd
icebp
xor
or
inc
dec
test
jne
pop
mov
mov
loopne
cs
and
mov
sub
inc
movsl
lods
mov
add
fsubrl
arpl
push
ret
xchg
dec
mov
scas
cmc
dec
sbb
ret
aam
mov
imul
lcall
sbb
aaa
iret
insl
push
stc
pop
xchg
mov
stos
insl
jmp
insl
add
jp
popa
fs
mov
ja
sbb
jb
cmp
imul
xchg
xor
add
sub
lods
jbe
xchg
out
xchg
popl
and
push
push
pop
mov
sbb
mov
inc
add
jne
jne
je
out
push
imul
xchg
inc
ficompl
movsl
repz
fdivs
pop
or
jle
push
std
mov
mov
inc
jae
stos
add
int3
xchg
mov
lods
pushf
iret
adc
sub
or
xchg
rcrl
push
test
iret
into
mov
ss
std
push
cmpsl
pop
sbb
push
addr16
xor
sub
in
add
mov
aam
mov
test
mov
dec
pop
mov
push
adc
add
jle
fmull
xchg
and
jae
cmp
cmpsl
add
mov
dec
sbb
pop
push
fs
xchg
daa
dec
sbb
adc
lret
cmpsb
lret
stos
dec
test
or
mulb
fmulp
sbb
sub
mov
sarl
or
mov
mov
jbe
fisubrl
pop
std
mov
jns
out
scas
jnp
xchg
inc
lods
call
mov
bswap
xor
out
jge
lods
das
in
nop
outsl
lret
daa
aam
data16
cmp
sub
iret
dec
addl
addr16
jbe
fmuls
bound
lds
imull
in
pop
sub
in
push
clc
cli
push
sbb
push
loope
std
dec
sub
cmp
in
or
outsl
adc
addr16
dec
adc
jl
mov
xchg
xor
jmp
xchg
pop
enter
push
dec
and
xchg
int3
dec
pushf
xor
out
sahf
xchg
test
pop
cmp
xlat
xchg
pop
mov
rorl
adc
out
roll
and
or
aam
xchg
fsubrl
daa
bound
push
pop
inc
test
or
sahf
fldenv
jl
xor
sub
sar
cs
lods
stc
sbb
in
cmp
enter
ja
push
jecxz
test
sbb
mov
sub
notb
jne
jg
push
insl
lahf
or
loopne
and
scas
jge
dec
test
int3
xor
subl
neg
pop
xchg
add
lcall
dec
jb
pop
jb
fprem
sarl
mov
sbb
mov
ds
rcll
lcall
mov
scas
cmc
les
mov
xchg
xchg
ret
dec
xchg
std
adc
mov
enter
cli
sbb
shld
scas
cmp
gs
sub
push
add
sbb
loopne
jg
push
nop
fdivl
test
and
fidivrl
mov
lcall
jne
jle
fldenv
cmp
rol
bound
mov
mov
and
sub
imul
test
cmp
dec
cmpl
test
cs
xchg
sbb
pop
or
jecxz
jl
aas
add
insb
sbb
outsl
dec
cmp
pop
lods
cmp
daa
subb
cmp
ret
rcr
das
jno
nop
sub
fnsave
mov
and
lods
dec
cmp
jae
inc
rep
xor
fistl
lcall
js
xchg
push
and
roll
popa
and
mov
pop
stos
fcomps
pop
lret
test
dec
scas
and
mov
aas
sahf
enter
or
out
cmpsb
in
sub
lock
out
fildl
cmp
hlt
pusha
mov
cmp
mov
jno
cmp
bound
lds
mov
cs
sub
out
or
ss
mov
inc
clc
pushf
jmp
inc
or
mov
movsb
xlat
xor
fldt
inc
les
or
out
push
mov
das
jg
mov
push
add
cli
test
cmc
ret
sahf
out
enter
push
jecxz,pt
jb
movsl
repnz
cmp
popf
xlat
cmc
push
or
add
lock
dec
and
push
or
sub
sbb
cmc
ss
fdiv
notl
or
xor
jl
cs
cmpsb
mov
in
xchg
scas
mov
jmp
dec
pop
addl
in
aam
or
loopne
or
fsubs
mov
jg
loop
push
ljmp
shl
jge
xchg
or
pop
lock
mov
jo
mov
or
dec
ret
scas
mov
xchg
pusha
push
jno
cmpsb
push
in
ss
mov
ret
push
sub
addl
jmp
or
mov
jecxz
pop
mov
mov
movsb
addr16
jge
sbb
pusha
xchg
loope,pn
sub
inc
and
xor
sbb
popa
mov
sub
sub
shrb
cmc
cwtl
mov
in
roll
jmp
adc
and
lock
dec
imul
add
lds
mov
jns
jp
frstor
xor
xchg
outsb
test
mov
rcrb
jbe
pop
jl
mov
lds
and
xchg
out
lret
in
mov
mov
jmp
pop
lds
mov
mov
dec
cwtl
xchg
xor
call
xor
ror
push
sbb
outsb
lret
out
mov
add
es
test
jns
mov
lret
xchg
dec
dec
cltd
frstor
dec
in
sub
sbb
push
mov
dec
stc
or
push
lahf
lret
test
cmpsl
jne
in
add
mov
pop
inc
daa
jb
cmc
jge
lods
popf
sub
hlt
iret
jge
insl
mov
jns
xor
inc
fdiv
lret
test
rcrl
sti
jae
in
jp
pop
sbb
out
jl
inc
and
adc
std
jns
inc
rclb
adc
bound
das
push
jbe
adc
fwait
data16
data16
popa
daa
cld
fwait
insl
mov
push
push
sahf
outsb
ss
dec
dec
pop
push
cs
setg
mov
push
cwtl
movsl
jnp
fs
lret
ljmp
or
out
lock
sbbb
pushl
jle
xchg
call
clc
stc
mov
sarl
or
shll
das
cmp
jecxz
call
stos
fstl
xchg
imul
dec
xor
jmp
mov
mov
imul
decb
loop
and
lahf
test
pushf
in
fsubs
into
mov
xchg
je
add
mov
mov
lds
call
icebp
dec
push
jae
in
sub
jl
mov
fsubrs
inc
test
das
add
inc
pop
arpl
mov
out
sbb
inc
cwtl
std
ficomps
scas
cltd
je
lret
or
jecxz
ffree
mov
sti
sahf
push
cmp
test
leave
inc
das
loop
mov
add
addr16
and
je
loop
cld
push
cmpb
xor
jmp
push
xor
hlt
lret
inc
movsb
push
arpl
mov
xor
sbb
jae
xchg
out
jle
mov
outsb
mov
fwait
and
jle
xor
xor
dec
inc
and
aam
out
push
out
out
inc
fwait
mov
mov
dec
enter
sbb
jae
mov
leave
out
es
addr16
mov
push
fists
nop
arpl
int3
xchg
test
movsl
pop
dec
fistps
dec
movsl
pop
loopne
mov
pop
test
scas
into
idivl
lahf
fdivrs
xorb
inc
push
ret
xor
sub
push
pushf
fnstsw
push
or
cwtl
sbb
imul
lret
imul
adc
outsl
adc
fisubrs
rolb
jne
xchg
dec
mov
xchg
pop
stos
movsb
or
xchg
add
fiadds
movsl
test
ret
push
and
in
cmp
sbb
pop
outsl
je
cs
inc
shll
jmp
jnp
inc
or
jne
push
stc
sbb
addr16
fldt
shr
cmp
cmp
jp
or
xchg
adc
add
xchg
call
jnp
mov
push
jp
xor
stos
xchg
sbb
xchg
fsubrs
dec
push
mov
stos
cmp
shrb
cmp
pop
scas
jae
je
xor
push
xchg
rorb
sbb
mov
stc
add
sbb
mov
out
jo
adc
jmp
stc
xchg
xchg
dec
xchg
int
cwtl
dec
sub
roll
scas
jnp
jnp
add
xchg
push
lods
fstp
mov
repnz
xchg
add
add
mov
decb
arpl
or
mov
mov
stc
insb
xchg
mov
xchg
lds
add
push
and
add
imul
sbb
repnz
lcall
sti
bound
rorl
push
aaa
leave
mov
cs
add
jge
jb
jmp
dec
stos
in
inc
mov
mov
aad
outsl
mov
cmp
jne
subb
in
cmc
das
fcomps
call
test
fistpll
lret
inc
ret
icebp
inc
in
xchg
xor
es
add
imul
xlat
rorb
stos
sbb
ss
test
das
mov
ds
inc
xorl
sub
test
mov
mov
sbb
mov
jmp
in
test
movsl
push
movsl
push
mov
push
sub
out
jne
push
insb
add
ljmp
dec
xor
scas
sbb
mov
ret
sub
fmuls
inc
xor
sahf
xchg
cmp
scas
nop
jns
bndstx
lret
test
sub
xchg
xchg
js
sahf
fidivl
test
fstpt
mov
cmp
cmp
xor
cmp
inc
call
gs
andb
ficomps
ficoml
cmpsb
or
or
shrd
jge
ss
or
xor
mov
lods
push
inc
sub
sub
mov
hlt
inc
inc
sti
stos
lret
je
adc
sub
and
or
xorl
sub
ss
mov
and
mov
roll
add
push
sbb
popf
sti
inc
scas
aas
data16
addr16
cmp
arpl
cmc
mov
sbb
lea
loopne
aas
enter
hlt
jle
daa
mov
jne
add
inc
jp
sbb
adc
lds
jne
push
decb
cmpsl
loopne
mov
inc
or
rorb
inc
lret
dec
cmp
mov
xor
add
test
nop
lds
and
jecxz
add
cwtl
loop
mov
adc
mov
rclb
das
adc
add
add
loope
stc
data16
pop
or
pushf
xlat
out
imul
les
outsl
pop
call
xor
jge
jl
out
xchg
pop
jle
add
and
inc
ficomps
push
sub
test
dec
cmpsb
pop
scas
xor
adc
imul
ret
js
jge
cwtl
push
mov
inc
jl
fmull
loop
not
jbe
sahf
inc
push
and
std
orl
sub
mov
xchg
mov
add
mov
adc
testb
test
xor
cmp
fcompl
pop
dec
jg
into
mov
add
xor
xor
ret
clc
cmp
jne
adc
aaa
stos
mov
jle
push
mov
leave
cltd
dec
daa
dec
xor
jbe
insl
lock
dec
or
aad
cwtl
inc
inc
test
inc
xor
sbb
hlt
rcrl
inc
mov
jnp
ljmp
push
cld
lcall
or
and
dec
jmp
stc
jno
pop
adc
cmp
ja
mov
loop
lahf
mulb
les
add
das
mov
sbb
or
and
jg
fsubl
mov
inc
add
pop
lods
rcpps
mov
inc
jb
sbb
sub
or
div
xor
rcrb
sub
shrl
cmpsl
cli
repnz
cmp
dec
mov
sub
das
inc
daa
pop
loope
test
int
mov
push
es
hlt
xor
fcompl
insl
insl
fistpl
imul
sub
or
lds
repz
mov
jno
cmp
push
push
add
in
and
fsts
movsb
es
jmp
outsl
scas
cltd
pop
in
and
lods
jle
pop
jnp
fiadds
sbb
addr16
into
and
cmp
jno
cmpsb
xchg
inc
test
xor
das
stc
jne
les
in
rcr
adc
xor
clc
jle
icebp
addr16
out
push
popa
add
bound
test
or
push
sti
push
call
into
fs
ret
adc
mov
mov
sbb
mov
lds
iret
fs
je
js
les
cmp
dec
out
cmp
sbb
les
mov
arpl
aad
leave
into
std
lret
xor
push
inc
imul
mov
in
jecxz
xlat
sbb
leave
mov
rorl
jno
outsl
jo
movsl
inc
test
mov
or
pushf
sbb
insb
inc
int3
push
xchg
enter
push
adc
movsb
mov
arpl
xor
pop
dec
jo
sbbb
pop
add
pop
out
scas
xorl
mov
dec
ljmp
jae
sub
mov
insb
in
sbb
cltd
lahf
stos
adc
ljmp
sbb
addb
sbb
xorb
pushf
aam
mov
mov
mov
jmp
dec
xchg
sbb
inc
loope
icebp
int
mov
push
bnd
sub
shlb
jecxz
mov
jne
lret
fwait
mov
adc
int3
shrl
aas
testl
mull
jge
test
push
adc
pop
xchg
mov
test
rcll
out
jle
ret
std
mov
popf
shrb
cmp
into
bound
fdivrs
add
jb
rorb
neg
mov
dec
dec
cwtl
orl
addl
jo
inc
movb
int
cmc
lods
xchg
scas
inc
das
lock
mov
push
inc
cmp
stos
fcoml
sbb
mov
jns
daa
cltd
ret
pop
xchg
jo
dec
aad
sbbb
out
imulb
mov
cmpsl
cmpsb
dec
lret
xor
mov
pop
push
imul
fstpl
add
int
mov
out
aas
xchg
mov
or
out
ds
push
jb
pcmpeqw
repnz
insb
dec
gs
in
xor
cmpsb
xchg
daa
daa
shll
xchg
xchg
testl
sarb
popf
shl
xor
addr16
adc
sub
pop
cmp
adc
lahf
push
or
ss
sbb
in
inc
scas
mov
mov
adc
dec
dec
popf
sub
sbb
cltd
pop
add
push
bound
cmp
pop
push
sbb
jae
xchg
out
xchg
xchg
and
xor
cmp
scas
jle
ficoms
and
inc
movsl
push
pop
movsb
negl
pop
repnz
push
out
popf
lea
mov
rcrb
sub
sbb
or
push
test
jmp
arpl
out
les
inc
pushf
push
cmpsb
push
xor
aaa
ss
test
and
mov
or
gs
call
adc
adc
or
lods
mov
call
shl
enter
inc
dec
jnp
xchg
add
insl
jns
mov
push
cmp
jg
pop
inc
stc
hlt
cmpl
sub
in
push
sub
mov
adc
jo
mov
add
push
stc
and
sub
out
outsb
test
adc
inc
or
pop
clc
cmpsb
mov
pusha
sbb
hlt
test
lods
call
xor
nop
fsubs
in
adc
push
pusha
sub
insb
sub
dec
insl
mov
xchg
sub
jnp
inc
xor
setge
scas
sbb
test
sarl
or
dec
xchg
mov
lahf
mov
cltd
notl
pop
xor
fdivs
mov
jb
push
inc
dec
inc
aas
push
push
fcmovnb
mov
fcomps
mov
fwait
add
dec
jecxz
addr16
ret
sahf
out
sarb
loopne
in
cmp
shrb
cmp
jo
or
jge
or
mov
pop
push
jno
cmp
inc
mov
cmpsl
lods
mov
add
icebp
adc
mov
jns
jge
mov
stc
dec
mov
inc
adc
fldlg2
ret
push
cmp
cli
lret
adc
cmp
dec
gs
add
cld
dec
es
cmp
mov
inc
popa
and
sub
push
sti
divl
mov
push
call
adc
dec
cld
icebp
xlat
fsubs
aaa
inc
mov
data16
push
test
add
adc
decb
xchg
pop
pop
xchg
adc
jp
add
iret
sub
sbb
xchg
sub
push
mov
scas
ret
push
fstpl
cli
add
pop
out
mov
add
hlt
popf
arpl
je
fisubl
jp
cli
inc
inc
mov
pop
pop
in
mov
cld
adc
jne
adc
xor
mov
sahf
pop
into
push
movsb
jecxz
jge
lret
iret
push
imul
stc
cs
int
add
mov
cmp
inc
cmpsb
insb
sbb
pop
xor
xchg
test
fs
je
test
xchg
pusha
lret
and
repnz
insl
dec
int3
sub
push
les
mov
sub
test
in
fistpl
jle
pop
xor
lcall
scas
out
repz
in
dec
outsb
push
ftst
and
sbb
lods
xchg
call
and
sbb
std
std
jbe
or
cmp
mov
adc
mov
pop
fisubrl
mov
pop
or
out
mov
ret
mov
jns
and
aad
shll
push
mov
call
movsb
das
mov
leave
andl
mov
scas
sub
sarb
repz
aas
fstpt
or
sbb
xchg
das
lods
cmp
addr16
jns
outsl
sbb
xor
pop
or
xchg
xchg
dec
xchg
inc
sub
adc
iret
jne
add
xchg
add
push
mov
pop
test
push
xchg
in
pop
daa
cmp
dec
lock
rolb
pusha
pop
or
jp
frstor
aas
jb
or
les
push
ja
or
dec
mov
bound
andb
lcall
sub
xor
rorl
jnp
outsb
push
in
xchg
fbstp
mov
repz
pop
out
push
jae
arpl
fidivs
neg
in
enter
sbb
ss
fs
nop
mov
sub
mov
fistpll
pushf
push
sahf
pop
sub
jle
or
jl
push
mov
lret
out
xor
adc
cwtl
repz
int
out
dec
scas
and
jp
sbb
xchg
in
leave
dec
jo
leave
jp
cmp
add
cmpsl
lds
fs
test
jbe
mov
aam
push
stc
inc
add
xor
lods
or
mov
loopne
adc
adc
psrlq
mov
orb
jle
cltd
sub
ja
adc
movsl
adc
sbb
into
sub
jp
jl
lret
lods
out
das
clc
insb
repz
ret
lcall
lret
sbb
fistl
xchg
xor
sahf
nop
orl
or
stos
loope
push
cmpsl
sbbb
sar
imul
test
adc
sbbl
pushf
pop
jg
mov
pop
lds
insl
jns
push
std
lock
insb
jns
jb
je
outsl
jb
add
inc
mov
es
sbb
xor
cltd
mov
rcll
lock
ss
mov
inc
adc
pop
pop
in
push
adc
aad
add
add
sbb
mov
xchg
pop
adc
stos
or
popf
pop
ja
push
hlt
push
stos
lods
inc
fists
and
and
ds
cmpsb
mov
insb
jmp
or
insb
repnz
sahf
movsb
rcr
std
lods
fwait
repz
jo
lods
cli
inc
lds
int3
mov
sbb
sbb
xchg
pop
mov
aas
xchg
popa
stos
push
in
in
mov
cmp
inc
out
imul
add
push
lret
pop
adc
xor
test
mov
inc
add
cld
inc
pop
xchg
mov
inc
dec
bound
cli
test
lods
insl
cli
xchg
jle
adc
cwtl
pop
add
mov
add
adc
mov
adcl
jns
pushf
inc
mov
fildll
mov
adc
jecxz
sbb
clc
dec
jp
hlt
popa
xor
mov
jmp
push
mov
push
rcll
mov
jle
dec
or
popf
test
lods
sahf
push
jg
repz
imul
cld
pushf
out
stos
ljmp
pop
mov
pop
xor
jae
add
push
lcall
idivl
aam
jge
jmp
push
cmp
pusha
sbb
nop
add
mov
push
xchg
or
or
out
sbb
add
pop
inc
mov
add
xchg
fistpl
cmpsb
loope
shrl
arpl
iret
xor
pop
xor
dec
inc
outsl
adc
cmpsl
push
sbb
rcll
dec
notl
jge
je
aaa
ficomps
pop
cmpsb
jl
icebp
push
lret
aam
sub
sti
shlb
inc
pop
sahf
mul
gs
mov
call
jae
ds
sub
ret
es
mov
cwtl
shlb
je
ja
sbb
mov
outsb
outsl
sbb
inc
push
xor
or
bound
aas
pop
sbb
xchg
nop
cmp
add
add
cmp
in
fiadds
mov
cmp
jb
ret
adc
je
mov
push
ret
xchg
rol
insl
sbb
push
push
jecxz
js
jbe
shll
int
or
pushf
jae
sub
mov
push
loopne
fdivr
sub
shll
paddusw
mov
mov
dec
ret
insl
aaa
sbb
mov
les
jge
cmp
push
pop
sahf
popf
in
aaa
imulb
imul
popf
and
lea
cmp
std
das
cli
mov
lcall
push
enter
loopne
adc
repnz
test
pop
pop
arpl
std
in
mov
loopne
mov
push
sbb
sub
xchg
mov
add
scas
cmp
xchg
shrl
cmpsb
popa
add
call
bound
pop
cmp
mov
sbb
mov
sub
xchg
inc
push
xchg
pop
ror
pop
sti
adc
push
mov
iret
out
dec
into
outsb
sti
in
jns
mov
test
movsl
stos
sti
das
cli
pop
xchg
loope
adc
or
lods
aaa
inc
popl
cmpsb
mov
and
cmc
repnz
cmp
dec
js
mov
mov
or
scas
mov
rcl
jbe
loopne
add
mov
pop
mov
and
outsb
sahf
inc
addr16
dec
mov
inc
mov
adc
test
shlb
in
bound
jl
fdivl
cli
dec
enter
ret
lret
call
jmp
lea
pop
scas
popf
push
addr16
and
mov
movsb
adcb
mov
xchg
in
xchg
test
stc
jnp
out
mov
and
daa
es
jp
rolb
std
repz
insb
cmc
shrb
push
mov
jns
add
add
lods
cs
outsb
in
cmpsb
sbb
mov
cltd
or
sub
dec
das
and
mull
nop
or
loope
lea
iret
ja
jl
or
int3
cmp
popf
sub
out
fiadds
and
ljmp
xlat
push
add
xchg
pusha
stos
aas
scas
adc
pop
insb
push
movsb
push
inc
mov
push
pop
pop
js
fimuls
pop
ss
and
icebp
test
or
xlat
out
push
clc
rcrb
sbb
aaa
jnp
subb
std
das
and
into
mov
xchg
loop
loope
inc
gs
in
push
xor
lds
sbb
push
xchg
rcr
int3
lock
std
and
int3
inc
test
add
outsb
mov
sub
frstor
sub
in
mov
int
dec
jl
jne
push
pop
data16
jl,pn
lea
xchg
cli
repz
cwtl
pop
nop
adc
loope
ret
movsb
repz
cmp
repnz
lods
push
imul
sbb
jae
mov
mov
cmpsb
push
ja
mov
lods
cmpsl
sarl
cwtl
nop
cmp
scas
and
out
outsb
pop
and
cwtl
ds
mov
out
mov
or
clc
xchg
dec
cmp
inc
fisubl
hlt
rclb
sbb
mov
sub
mov
insb
cwtl
ret
push
cli
pushf
addb
xchg
and
fldcw
xchg
mov
push
ret
sti
fbld
cltd
out
insb
jl
mov
lcall
rorl
shrb
mov
adc
push
pop
mov
test
orl
push
je
lods
popf
sar
gs
mov
cmpsl
lods
cmp
aam
sub
outsl
pop
jle
or
inc
and
int3
dec
or
jae
les
out
test
push
imul
xchg
push
xchg
pushl
pop
jo
dec
jge
ss
sub
pop
mov
loopne
xchg
jb
inc
mov
cmc
call
xor
cli
fdivl
sub
test
mov
mov
ss
inc
pop
leave
mov
xor
ss
sub
adc
pop
push
add
cmp
jbe
push
mov
adcb
jle
or
push
fs
rcr
test
test
mov
mov
push
in
push
loope
ret
enter
clc
ljmp
adc
push
test
mov
clc
lods
cmpsb
xchg
xchg
inc
mov
out
aam
orb
add
in
jnp
adc
lock
fdivs
add
mov
scas
jmp
into
mov
pushf
or
xchg
pop
lret
repnz
pop
dec
leave
icebp
inc
in
into
push
leave
add
ret
sarb
xor
ja
ficomps
lods
arpl
xchg
xchg
cmp
fnstenv
es
mov
cmp
xor
ljmp
mov
aad
mov
loop
lea
cmp
add
outsb
lahf
in
daa
loope
iret
loopne
fidivl
cs
aam
pushl
sbb
repnz
mov
lock
popf
inc
mov
and
sbb
icebp
add
xchg
lret
cmpsb
out
adcb
or
inc
pop
pavgb
cmpsl
adc
test
pop
inc
in
or
sub
adc
arpl
aam
jbe
mov
mov
xchg
cmp
jge
add
movsl
add
and
xorl
pop
mov
xor
sbb
ss
mov
xorb
add
imul
rcr
cmc
mov
push
loopne
scas
xchg
push
int
imul
sti
mov
cmp
sub
mov
fdivl
cmp
imul
imul
shll
int3
pop
push
test
mov
lahf
inc
push
mov
leave
xchg
and
and
cs
in
mov
cld
repz
ficomps
sbb
sti
adc
pop
in
add
jmp
shrl
xlat
mov
cmp
sahf
or
mov
lcall
lret
aas
inc
mov
cli
cmpb
push
pushf
sub
cmp
push
imul
loopne
out
mov
jmp
cmp
hlt
cld
testb
movsl
jne
mov
jo
jecxz
lods
iret
mov
sub
jle
cmp
ljmp
ljmp
mov
push
mov
xchg
and
int3
xlat
je
ds
rclb
xchg
aam
ja
or
add
aad
shr
jo
lds
jno
xchg
add
adc
mov
xor
push
test
adc
pop
iret
popa
or
sub
jae
dec
stos
in
jl
movsb
sub
jnp
add
mov
jnp
add
mov
inc
insb
enter
imul
fwait
mov
enter
fs
movsb
inc
fwait
ret
test
and
xchg
jge
lea
xor
aam
sti
fwait
mov
imul
inc
daa
xor
add
pop
cs
out
out
mov
jle
push
shlb
and
xchg
inc
pushf
push
mov
cmpsl
lods
push
pushf
enter
mov
test
icebp
lahf
scas
in
pop
cmp
repz
add
outsb
inc
int
nop
pop
xchg
dec
dec
ret
sti
dec
pop
jbe
orb
mov
cmc
movsl
add
mov
sub
das
add
rcrl
jns
mov
jno
or
repnz
and
inc
addr16
xchg
pop
xchg
ljmp
push
call
icebp
add
icebp
push
and
inc
out
dec
xchg
fstl
test
lret
mov
lahf
leave
pop
mov
mov
mov
and
and
adc
push
xor
inc
lods
popa
sub
das
stos
outsb
outsl
sub
dec
push
bound
push
mov
stc
mov
test
loopne
inc
add
sub
push
mov
xor
es
xchg
stos
pushl
push
sbb
ds
xchg
ret
or
out
mov
inc
add
jg
pop
xor
iret
cmc
out
les
pop
dec
test
mov
cmpsl
test
pop
neg
mov
inc
sub
fnsave
push
push
mov
outsb
jne
in
cmpsb
pop
push
cmc
inc
in
outsl
inc
inc
cld
in
pop
push
sti
push
sbb
mov
aad
xor
inc
jno
adc
lods
mov
dec
adc
or
push
dec
test
rclb
out
push
jne
jg
push
lret
push
iret
aaa
fistl
scas
adc
mov
pop
adc
or
loope
movsb
mov
in
mov
insl
mov
lods
popf
int
popa
mov
mov
cmpsb
xor
flds
pop
sarl
inc
aas
shll
sti
sbb
push
outsl
fwait
mov
push
jbe
cld
dec
addl
mov
push
pop
add
adc
add
mov
and
xchg
outsl
xor
or
adc
pop
inc
sbb
push
sub
inc
or
jmp
stos
out
xchg
push
add
jle
jne
rcrl
xor
push
das
clc
pusha
xor
mov
adc
lods
outsb
adc
push
repnz
scas
loope
or
add
jg
inc
sub
adc
or
outsl
sbb
xor
loope
mull
xchg
inc
lret
lods
jp
mov
orl
cmpsb
nop
or
jl
inc
fwait
cmp
pop
xchg
outsb
jno
cli
dec
push
mov
int
xor
cli
sti
xchg
lea
data16
ja
mov
sahf
sub
adcl
roll
mov
int
sarl
mov
enter
sub
push
and
xor
sub
iret
pop
aam
loopne
cmpsl
movsb
fs
icebp
in
and
xor
mov
or
rclb
sub
cmc
stos
jmp
push
out
enter
cmp
pop
xchg
adc
mov
mov
xor
dec
inc
mov
imul
aad
pop
mov
stc
fistps
adc
cltd
aaa
out
jle
lds
jnp
jno
lds
xor
orb
push
and
mov
xchg
int
cli
fnstenv
lods
sub
xchg
sub
or
inc
xchg
fcoms
test
inc
addr16
movsb
test
dec
push
jmp
fsubrl
inc
mov
jg
xor
or
jns
mov
mov
jmp
push
popa
dec
add
nop
jp
mov
es
cltd
push
xchg
out
ljmp
inc
pop
mov
xchg
repnz
ret
mov
bound
mov
dec
adc
fistl
ficompl
or
shl
mov
sub
mov
jne
jb
mov
ljmp
xor
pushf
mov
mov
fldt
and
imul
movsb
fsubrs
call
cltd
pop
pushf
repnz
sub
sub
inc
pop
jns
ds
bound
into
leave
roll
mov
cs
xchg
add
jb
or
out
ret
xchg
pop
add
outsl
int
shl
ret
stc
hlt
inc
std
shrl
bound
push
xchg
addr16
xchg
dec
mov
pop
stos
dec
mov
scas
and
add
sub
lds
int3
insl
pop
int
divb
cli
fdivrs
push
sub
add
sbb
lods
pop
xor
add
mov
push
loop
dec
or
out
out
cmp
add
push
xchg
dec
and
push
mov
fildll
or
xor
xchg
scas
lret
dec
fstpl
imul
and
cmpsl
adc
xchg
adc
loopne
ljmp
push
cmp
in
adc
cmp
icebp
aam
shll
inc
insb
cmp
sub
jns
imul
fadd
icebp
mov
xchg
movsb
pusha
inc
aam
cld
adc
mov
inc
popa
sbb
das
xor
ret
in
clc
mov
sti
or
mov
scas
inc
test
lods
jbe
enter
pop
jae
clc
mov
test
fldenv
xchg
jmp
pop
push
and
jge
cmpsl
mov
lods
insl
fcmovnb
icebp
mov
movsl
jg
add
movsl
cld
inc
add
adc
in
out
dec
adc
mov
rol
jae
lahf
pusha
adc
and
push
enter
mov
jmp
or
out
cmc
pop
andb
jp
add
jo
add
data16
test
inc
std
add
scas
cs
push
sub
stos
inc
mov
xchg
in
scas
inc
lret
mov
clc
nop
push
xor
push
xor
addr16
cmp
sub
xor
repnz
inc
in
fsubs
shr
push
rcrb
jne
cmp
shrl
dec
js
test
mov
pushl
cs
js
ss
mov
loop
jp
jns
adc
sub
ret
outsl
sub
mov
mov
adc
out
test
dec
jae
or
test
shlb
and
xchg
scas
push
and
jmp
cli
ss
fnstcw
pop
mov
cmc
add
lock
inc
les
sti
cltd
push
push
mov
xchg
inc
dec
add
loopne
std
ja
or
push
out
sbb
xor
repz
push
rorl
les
je
es
cmp
push
mov
imul
ret
ds
and
and
popa
mov
iret
xor
cli
es
xor
pop
dec
in
mov
inc
mov
ljmp
mov
or
rcrl
js
sti
fwait
mov
xchg
lods
subb
inc
fbld
and
icebp
or
movsl
jbe
std
scas
cmp
ja
out
repz
mov
jge
cmp
neg
fiaddl
sub
idivb
test
pusha
insl
sbb
fdivrl
mov
or
insb
xchg
inc
xor
mov
cmp
jg
test
or
shrl
inc
das
or
jmp
dec
cmp
mov
shr
scas
divl
jno
jmp
pop
icebp
xchg
mov
jae
ret
xchg
int3
shlb
lods
test
iret
in
jp
jbe
lea
cld
xchg
lcall
jbe
in
jle
test
adc
pushf
lods
dec
xchg
xchg
ret
push
mov
mov
insw
mov
cmpsb
and
call
sbb
mov
rolb
cmp
xor
adc
cmp
ljmp
add
jg
cmp
div
and
leave
cmpsl
fcompl
in
pushf
add
cld
repz
pop
xchg
aam
or
xorl
push
outsl
sbb
movsb
jnp
outsb
fildll
lret
sub
pop
hlt
push
je
out
mov
xor
fmull
xchg
jnp
pushf
ds
icebp
xchg
fcoml
ret
ret
adc
mov
jecxz
aad
fnstcw
pop
test
add
ret
cli
and
and
sbb
filds
loope
adc
call
inc
fs
sub
fwait
lods
add
sbb
push
clc
int
xchg
mov
xchg
shlb
fbld
mov
or
sbb
in
imul
test
cld
sahf
push
push
loope
popa
jl
int
mov
cmpsl
jl
loopne
mov
xor
inc
jb
ret
std
nop
adcl
sarb
and
sti
cwtl
mov
pop
stos
adc
xchg
mov
cmp
sahf
adc
sub
pop
ftst
icebp
lods
sbb
pop
and
xor
icebp
add
loop
mov
pop
mov
xchg
aas
loope
aaa
dec
scas
rcrb
or
js
fisttps
and
mov
push
adc
call
xor
adc
loope
insl
out
andb
mov
cmp
or
shrb
pushf
jmp
or
out
cmp
mov
mov
mov
jns
ljmp
or
xchg
mov
mov
test
stc
mov
pop
fidivrl
imul
repnz
mov
push
inc
outsl
jb
lods
jmp
inc
fs
outsl
jg
add
daa
inc
bound
add
cmp
fdiv
xchg
cld
cltd
pop
jb
stos
add
xchg
cmp
cli
aam
cltd
mov
push
jl
add
or
jns
ret
mov
mov
and
dec
ret
repz
aas
je
orb
xor
sbb
xchg
cmpsl
scas
jl
adc
cmpsb
clc
add
lods
subb
aas
dec
fistpll
lahf
xchg
jnp
adc
mov
shl
cmpsl
test
jecxz
sti
xor
pushf
ds
inc
bound
cmpsb
je
lcall
or
sub
push
negl
jae
aas
movsl
cmp
icebp
outsl
es
test
and
out
loopne
das
mov
fsub
bound
outsl
sbb
sub
push
sbb
shrl
popa
fsts
inc
lret
sbb
add
push
pmulhw
test
add
xor
push
cwtl
decl
pop
xchg
loop
mov
jp
push
xchg
icebp
mov
and
add
pop
pop
imull
add
fidivl
and
jne
rclb
and
enter
push
add
data16
dec
pop
pop
cmp
mov
sub
gs
mov
xchg
sub
lcall
inc
push
pushf
xor
push
jbe
lret
mov
push
outsb
jmp
and
rol
push
push
fdivl
shrb
stc
xor
lock
jo
rolb
loop
enter
je
push
xor
insl
sbb
mov
inc
pop
fisubrl
popa
mov
outsl
fadds
vmwrite
push
stc
mov
lods
pusha
test
popf
les
adc
imul
jne
loopne
sub
int
fcmovnb
xor
je
jnp
cmpsb
icebp
iret
fbstp
or
sub
sbb
lcall
rorl
mov
cs
pop
add
fwait
pop
and
sub
or
repz
scas
add
cmp
push
ja
cmc
lea
outsb
mov
or
cmp
fnstenv
incb
aad
xchg
and
sti
cmp
inc
shll
add
aad
jl
xchg
loopne
aad
jo
pop
inc
cmp
fbld
dec
enter
jns
pop
les
sbb
divl
dec
and
xor
mov
out
test
cwtl
mov
dec
dec
and
out
test
enter
jno
add
test
ja
push
jae
lahf
imulb
mov
aas
test
and
ljmp
imul
cmp
and
cmp
or
outsb
push
pop
jg
add
roll
push
loope
mov
pop
and
clc
sbb
aaa
les
or
pop
in
loope
sub
popf
mov
xor
add
jge
out
out
jo
stos
repz
mov
je
test
imull
int3
inc
adc
inc
sti
sub
mov
jmp
dec
outsl
and
xchg
insb
pop
mov
mov
lret
xchg
mov
mov
mov
in
sub
sub
or
mov
and
loope
cwtl
push
sub
in
mov
pop
add
pop
cmpsb
xlat
ficomps
dec
inc
int3
add
xchg
aas
dec
add
cwtl
pop
dec
gs
in
add
or
stos
push
jb
xchg
cmpl
push
jns
sub
mov
xchg
mov
les
in
cmpsb
jns
cli
or
cmp
push
sbb
cmpsb
inc
sbb
cli
outsb
xchg
lret
push
xor
inc
mov
jg
mov
clc
insl
cmc
pop
or
adc
mov
fs
loope
nop
aam
sbb
iret
adc
js
clc
push
dec
fsubrp
je
pushf
into
aad
xchg
add
lcall
jbe
sahf
push
cld
mov
or
rcll
xor
hlt
insl
jmp
ds
vorps
adc
mov
fdivr
mov
pop
rcll
xlat
cmp
data16
notl
out
sbbl
insl
addr16
adc
pop
lea
push
daa
mov
fs
mov
lret
push
test
sbb
roll
insb
mov
xchg
nop
imul
lret
popa
mov
rclb
inc
push
daa
jp
decl
sbb
scas
sahf
stos
jne
jo
adc
mov
iret
icebp
fiaddl
sbb
cli
insb
mov
pop
cmp
int
add
jge
push
push
dec
lcall
inc
jecxz
mov
test
cmpsb
in
aas
adc
aad
out
cli
aad
adc
es
adc
movsl
fcompl
mov
ret
push
xchg
xchg
cmp
xor
cld
jmp
cltd
adc
psubd
fcmovne
adc
mov
je
mov
adc
das
push
mov
jecxz
add
and
push
cltd
adc
imul
hlt
fs
cmp
test
es
mov
sbbb
idivb
test
mov
dec
ret
imul
mov
dec
cmpsb
popf
xchg
pop
inc
loop
jge
or
add
xchg
sbb
adc
loopne
jmp
xor
aad
mov
inc
movsl
ror
je
and
or
notb
mov
or
add
out
movsl
jb
out
icebp
dec
mov
aaa
nop
jae
sub
fcmovne
push
test
dec
pop
pop
rolb
fs
pop
jne
test
es
std
mov
jno
jle
in
and
lock
loope
insl
dec
mov
jg
dec
jmp
lret
fisubs
lods
insl
lret
xchg
push
cmp
in
js
xor
shrl
add
mov
jecxz
xchg
jo
mov
jp
imul
aas
stos
out
outsl
fiaddl
mov
inc
outsl
notb
jecxz
push
xchg
pop
jns
xchg
loopne
js
jmp
push
pop
mov
xlat
out
mov
mov
fists
in
lods
gs
jmp
int3
xchg
dec
add
pop
lea
leave
add
adc
test
and
cmp
in
push
cmp
or
rorl
js
mov
loop
int3
pusha
mov
ja
movsl
filds
jbe
or
xchg
push
and
data16
out
negl
dec
fbstp
in
inc
jno
xchg
in
mov
mov
test
daa
and
mov
aam
dec
jns
data16
jp
pop
aam
imull
sarb
sahf
les
and
adc
test
jmp
dec
int
mov
lods
imul
repz
xchg
sbb
jns
mulb
or
pop
dec
dec
jnp
xchg
ret
mov
insl
js
test
inc
mov
xchg
clc
in
imul
dec
xlat
xlat
int
into
insl
xchg
sbb
sub
cmp
subl
sbb
adc
jmp
sub
sarb
test
hlt
cmpsl
lea
pop
in
std
inc
adc
pop
sub
cld
sbb
jg
mov
sahf
lret
lea
push
pusha
sub
and
sar
inc
out
movsb
xor
xlat
and
clc
mov
cmp
out
test
xor
jno
adc
movsb
cmpl
jns
call
loop
and
pushf
mov
xor
xchg
adc
sub
push
outsl
fisttpl
sbb
sub
and
aad
dec
push
cmp
push
outsb
mov
dec
cmp
jbe
data16
sbbl
out
mov
stos
repnz
xchg
aam
or
les
imul
cmp
xor
fwait
call
in
sbb
xchg
movsb
pop
fwait
stc
test
movsb
push
mov
not
enter
das
dec
push
xchg
lcall
push
mov
icebp
pop
lret
outsl
mov
or
loope
shl
adcl
sbb
xor
sahf
jne
mov
mov
pop
std
enter
sub
int3
push
add
test
or
and
les
cwtl
mov
in
jmp
xchg
mov
inc
push
add
loopne
icebp
adc
xor
mov
mov
adc
les
insl
fldt
xchg
xchg
inc
mov
mov
dec
lds
cmp
out
aas
shlb
imul
mov
daa
inc
mov
jne
loope
sbb
sub
arpl
pop
xchg
rcrl
xchg
sub
cmc
pushf
pop
packuswb
pop
stos
and
insb
mov
cwtl
sub
mov
jns
sub
adc
sbb
orl
in
sbb
in
leave
pop
fwait
lret
aas
xor
jge
xchg
icebp
mov
mov
fsubl
xorb
adc
pop
int3
inc
mov
ss
loop
mov
cltd
ljmp
push
out
xchg
cltd
imulb
xchg
push
ret
and
pop
sub
mov
in
sub
loope
add
pop
fs
jle
xchg
mov
mov
xchg
jns
daa
mov
pop
es
and
push
dec
mov
les
xor
xchg
mov
fsub
mov
movsb
les
fisttpll
mov
insl
sub
cmp
cmp
cli
sbb
add
nop
insb
pop
mov
lea
push
out
dec
xlat
mov
mov
in
pop
fwait
out
pushf
icebp
push
or
sub
mov
pop
icebp
xchg
jb
add
cli
pop
cwtl
loope
imul
rcrl
mov
jb
sbb
aam
dec
hlt
adc
cmc
and
dec
inc
sub
jmp
jecxz
outsb
pop
scas
into
int3
das
pop
sti
cmpsb
test
jnp
inc
mov
jno
repnz
push
roll
and
int
push
iret
loopne
xor
or
mov
add
adc
pop
scas
sub
sbb
scas
notb
push
mov
aad
adc
scas
and
pop
sub
fisubrs
add
imul
pop
mov
add
daa
pop
addl
loop
arpl
std
sbb
pop
jecxz
mov
jnp
test
and
in
sbb
dec
std
nop
jg
or
and
fists
inc
das
cmp
call
lret
mov
fucomp
mov
pusha
cmp
out
mov
jbe
pop
imul
insb
out
mov
mov
mov
push
icebp
pushf
and
leave
and
popa
mov
in
mov
fldenv
cli
jb
gs
js
or
mov
jne
xchg
pushf
leave
jbe
cld
cli
sub
cmp
lcall
xor
fldl
in
xchg
add
lret
mov
mov
aaa
xchg
imul
ss
movlps
scas
lea
mov
cmp
rcrl
outsb
pop
loop
cmp
js
fwait
mov
pop
and
xor
pop
cwtl
sbbb
jge
stc
cwtl
cmp
xlat
divb
pop
push
fmuls
push
dec
xchg
in
addl
lcall
and
stos
and
test
or
das
stos
xchg
xor
sahf
retw
sub
cli
pop
rorb
mov
lahf
shlb
jo
iret
scas
clc
inc
mov
lods
adc
aas
jbe
movsl
out
cmp
and
or
pop
repz
mov
xor
jl
int
mov
xchg
pop
pop
mov
or
cltd
pushf
jns
jp
and
ja
mov
repz
std
xchg
call
outsb
loop
sub
lock
cmp
xor
xor
jne
cmp
repz
sub
call
hlt
outsb
xor
sbb
bnd
cmp
scas
aaa
cwtl
adc
inc
lahf
mov
test
xor
pop
mov
xchg
int3
fdivrs
dec
or
sub
push
lock
mov
jmp
sarl
cmp
ret
mov
inc
jmp
lds
sbb
mov
outsl
add
jae
push
outsl
fisttpll
inc
arpl
pushf
jns
mov
iret
xchg
pop
fdivl
subl
loope
pop
stc
jg
testl
in
push
iret
outsb
push
addr16
adc
iret
into
pop
jo
xor
jp
std
arpl
push
movsb
mov
subl
ss
setg
adc
in
dec
jns
cli
int
cmp
into
sub
js
mov
in
cmp
outsl
jmp
imul
push
cld
push
sub
sbb
inc
pop
jle
outsl
pop
imul
dec
inc
lods
push
push
rcll
adc
inc
and
jo
jle
jnp
xor
lret
mov
adcb
adc
scas
lods
adcl
push
xchg
imul
mov
jmp
shll
or
xorl
adc
fwait
in
gs
dec
es
std
repnz
adc
sbb
icebp
xor
add
or
sub
clc
xchg
sti
lods
cli
lods
cmpsl
shll
push
call
aam
lahf
jbe
ret
and
add
xchg
je
push
shll
mov
sti
pop
leave
sti
insl
bound
test
sbb
jg
dec
cltd
xchg
outsb
sahf
and
adc
dec
mov
test
mov
das
or
xchg
adc
xor
int
mov
ret
stc
or
xor
pop
mov
push
mov
and
push
push
add
xor
out
push
cmp
neg
jns
stos
mov
aas
ljmp
xor
and
insl
jecxz
cld
nop
int
enter
mov
dec
cmpl
dec
dec
or
or
shr
add
add
imul
pop
push
cmp
out
mov
push
xchg
out
movsl
adc
outsl
dec
sahf
ss
sub
inc
pop
clc
enter
adc
daa
fcoml
hlt
imul
pop
xchg
loopne
inc
out
jg
cld
repnz
cs
dec
shr
lret
in
dec
fstps
xor
xchg
dec
jmp
cmpsl
mov
lcall
leave
or
aaa
inc
popa
cmpl
pop
lret
iret
sub
fisttps
pop
int3
out
insl
int
fstpl
mov
mov
popf
jle
jns
push
into
mov
adc
jle
iret
or
aam
cmc
setge
outsl
cmpsb
out
addr16
pop
stos
cld
ret
pop
hlt
adc
push
scas
push
push
movsl
ret
fwait
loop
adc
arpl
nop
cmp
xchg
mov
mov
xor
stos
fbstp
test
xor
cmpsl
push
add
lock
jge
xchg
hlt
or
dec
push
insl
ret
add
fiaddl
out
dec
fnstsw
arpl
lret
cltd
test
or
daa
pop
fistpl
fldcw
lret
and
shlb
stc
mov
rorb
mov
hlt
mov
lock
pop
out
and
cmp
fisubs
arpl
or
mov
adc
sbb
sub
fwait
jle
push
push
inc
lret
fwait
sbb
nop
icebp
std
insl
dec
inc
int3
dec
dec
mov
dec
mov
mov
fists
sub
into
xchg
push
mov
leave
jo
lret
dec
sbb
lahf
fsubrl
inc
out
in
andl
daa
inc
in
ret
rcrl
dec
stc
shll
scas
adc
sbbb
scas
cmp
fdivrp
incb
mov
fs
scas
inc
pop
adc
into
jno
sbb
and
adc
es
mov
cld
sbb
das
add
js
jno
les
inc
test
push
inc
sbb
sub
into
icebp
psrad
pop
dec
add
jae
mov
je
into
jmp
push
adc
push
orb
sub
insl
sbbl
sbb
xor
xor
jg
lock
mov
lahf
ss
loope
jno
bound
popf
jno
xchg
loope
clc
shlb
inc
mov
shll
loop
repz
into
add
in
xchg
sub
pop
movsl
mov
adc
in
lahf
out
out
inc
out
fdivs
jo
ds
test
lods
push
xchg
sbb
push
insb
jp
popf
enter
data16
adcl
dec
fldl
mov
or
call
sub
mov
ret
dec
inc
out
imul
xor
adc
dec
aaa
pusha
and
mov
inc
cmpsl
or
les
insb
cmp
mov
lcall
int3
leave
arpl
out
cli
gs
subl
sti
mov
bound
mov
push
xchg
pusha
addr16
jmp
adc
sub
jmp
and
jne
cmp
lret
shrb
ret
cmpb
jmp
loopne
inc
notb
xchg
xchg
ret
xchg
adc
xchg
out
dec
dec
pop
push
mov
or
icebp
dec
xchg
hlt
push
xchg
mov
jg
sub
out
dec
dec
imul
loope
imul
mov
or
push
fisttpl
mov
or
xchg
gs
push
movsb
sbb
cwtl
lret
and
test
fbld
mov
stc
aas
mov
insb
aam
jmp
in
sbb
inc
ljmp
lods
enter
xchg
fmull
mov
inc
push
cs
into
lcall
ds
xor
icebp
out
mov
addl
or
out
add
cmp
into
push
inc
ror
arpl
imul
push
insl
popf
adc
fcoml
jns
sub
out
xor
cmp
inc
cmp
or
dec
in
shlb
jne
lea
negb
lcall
fwait
movsb
sbb
repz
in
nop
jmp
loopne
loop
cmp
sbb
pop
mov
adcb
pushf
mov
add
ret
frstpm(287
xchg
inc
sbbl
xchg
mov
pusha
ss
sti
rcrl
inc
outsb
sub
sahf
xchg
jbe
cmp
aaa
pop
dec
ds
mov
nop
mov
in
ss
aad
std
iret
inc
addr16
stos
sub
pop
aam
je
dec
adc
and
and
sahf
inc
mov
test
das
stos
inc
ljmp
insb
sbb
add
aas
sub
into
adc
mov
in
mov
or
jns
mov
fcompl
xchg
push
lahf
sbb
push
test
pop
pop
add
cltd
leave
mov
or
icebp
shll
loop
adc
ror
mov
jge
mov
ds
or
arpl
push
mov
dec
fiadds
mov
fdivl
fildll
pusha
fxtract
pop
js
mov
mov
adc
sbb
jo
icebp
sarl
push
out
cmp
lea
hlt
mov
inc
inc
dec
mov
pop
shll
lahf
pop
xchg
and
jne
xor
push
enter
call
pop
push
rorl
xchg
cld
sub
fsubrs
test
xchg
xor
lods
jns
sub
jb
cltd
push
std
pop
dec
jo
int3
in
xchg
mov
jbe
inc
cmpsl
test
adc
fwait
mov
pop
jae
cmpsb
xlat
mov
in
pop
mov
dec
mov
xor
xor
mov
mov
fsubrl
adc
mov
and
mov
pop
das
dec
jb
idiv
inc
dec
xor
mov
xchg
inc
insb
mov
or
push
mov
out
in
sub
popf
leave
ljmp
sub
lock
cmp
negl
in
sub
clc
inc
mov
dec
outsl
and
shlb
das
xor
ja
sbb
xlat
and
pop
xchg
out
push
test
dec
mov
test
jge
das
fstps
mov
cmpsb
push
icebp
mov
jno
addl
dec
and
mov
dec
mov
xor
js
xor
addb
test
sar
enter
mov
lods
xchg
aaa
push
push
dec
pop
mov
sarb
out
xchg
sahf
add
out
mov
out
or
jno
out
fst
mov
xchg
xorb
mov
data16
mov
dec
pop
in
sub
cmpsb
mov
cmpsb
push
cmp
loopne
out
push
rolb
inc
test
fabs
sub
imul
push
jns
hlt
mov
insb
test
pop
xor
shll
idivb
ficoml
inc
jecxz
cmc
mov
jno
push
sub
movsb
je
adc
fnstenv
aas
jno
dec
daa
or
mov
dec
jp
xor
mov
dec
clc
sub
pop
inc
nop
mov
outsl
icebp
push
jmp
ljmp
cmp
je
icebp
inc
mov
scas
les
mov
cltd
jo
inc
xchg
sarb
in
out
das
pop
scas
dec
jbe
push
mov
les
shl
fwait
lcall
sbb
cmp
xor
mov
inc
js
adc
clc
orb
mul
rcrl
pop
bound
scas
fsubrp
push
lock
sub
cmc
leave
xor
cli
mov
pop
mov
sbb
fcmove
fdivr
or
lods
adc
test
idivl
aaa
sub
dec
push
push
int
test
push
test
js
into
in
cltd
fldt
rclb
pop
filds
popa
je
les
add
and
addr16
jns
dec
dec
add
push
inc
imul
mov
xchg
lds
js
mov
push
jg
cltd
push
shll
test
push
inc
push
push
in
cmpsb
jbe
jecxz
cmp
push
ds
xchg
cmp
nop
dec
mov
dec
push
test
into
xor
jecxz
rcr
gs
sahf
jmp
cmp
mov
mov
and
jne
or
or
jae
xor
xor
mov
xchg
mov
faddp
dec
xchg
or
jne
daa
aas
mov
sub
cmp
dec
aaa
jb
adc
sbb
test
jge
push
lods
enter
cmpb
and
movsb
xchg
push
addr16
ja,pn
lret
clc
gs
xor
sbb
and
ja
out
out
xchg
icebp
movsb
jg
dec
xor
jge
add
dec
aas
push
into
cmp
sti
adc
jmp
std
je
lcall
mov
insb
jno
adc
test
push
sbb
or
fcmovne
scas
and
dec
nop
push
lock
adc
push
enter
inc
rcr
fisttps
dec
add
jo
xchg
inc
ds
call
push
jo
pop
lds
push
push
pop
int
loope
inc
imul
mov
lret
mov
xchg
jmp
xchg
jecxz
pop
faddl
int
inc
push
popa
daa
aas
aam
sub
andl
pop
push
jbe
push
jne
imul
lret
mov
aad
nop
pop
lods
call
xchg
mov
mov
mov
or
xchg
or
xor
mov
pop
mov
repnz
pop
sahf
hlt
shlb
mov
and
subb
or
lret
and
mov
push
jne
mov
jne
push
add
xchg
scas
add
nop
das
sub
bound
neg
ficoms
inc
sti
aaa
sbb
cmp
inc
pop
xrelease
mov
dec
push
fwait
push
mov
leave
push
inc
jns
pop
mov
xchg
out
dec
or
ret
mov
fwait
add
jno
cmp
std
pusha
cmp
mov
test
push
add
and
xchg
dec
mov
mov
popa
push
imul
cwtl
jmp
je
mov
lea
cmp
cld
loop
mov
cmp
lods
push
jnp
pop
pop
xchg
in
out
fcoml
movsb
scas
cmp
shlb
mov
pushf
clc
adc
inc
jle
outsb
mov
mov
out
jg
sbb
call
pusha
push
stos
int
add
mov
bnd
jge
and
fiaddl
sub
rorb
fwait
push
stos
xchg
jl
pop
pop
movsb
cwtl
dec
imulb
or
adc
add
inc
mov
sub
lds
jo
test
mov
pop
fidivrs
sahf
xchg
xor
stos
lret
jnp
aas
mov
push
shrb
jae
nop
shr
bound
stos
push
mov
aad
mov
adc
orb
push
pop
sahf
imul
pop
aad
shrb
loopne
testb
and
cmp
jo
dec
adc
int3
and
test
into
jmp
outsl
sub
rcll
lods
fildll
outsb
rcrl
mov
sbb
addl
add
sub
imul
int3
push
notb
cmc
or
dec
mov
or
prefetch
inc
leave
and
cmp
ljmp
sar
inc
mov
loope
add
or
push
jno
sub
int
cmpsl
mov
cmpsl
sbb
dec
sarb
hlt
xchg
test
xchg
xchg
cwtl
out
imul
sub
or
inc
lds
fldl
rcrl
in
mov
pop
clc
lahf
inc
mov
out
and
cltd
mov
testl
push
out
imul
call
imul
ja
xchg
sub
sbb
std
xor
sbb
enter
arpl
cmp
and
fistl
outsb
adc
dec
jle
icebp
mov
jnp
icebp
or
and
ss
or
out
fmuls
cwtl
mov
aas
in
jmp
test
add
addl
rcl
into
rcrl
inc
hlt
test
sub
iret
lea
xor
mov
clc
std
sub
jo
pop
pop
fdivl
jg
loopne
or
pop
sub
shl
or
cmpsl
adc
push
mov
es
push
dec
mov
pop
and
push
ds
inc
imul
mov
adc
push
data16
push
dec
enter
mov
pushf
jns
loop
aaa
mov
aam
adc
gs
mov
inc
ds
int3
imull
mov
mov
cmp
sbb
push
mov
imul
cmp
hlt
xchg
test
add
xor
mov
cmc
mov
push
inc
jb
sub
shl
out
into
cmc
pop
addl
mull
xchg
lcall
scas
cmpl
cld
dec
xor
divl
cltd
pop
jno
lods
adc
inc
rolb
cmp
ds
add
aam
push
idivl
mov
and
or
loop
roll
fnop
shr
or
das
psrld
test
sarb
out
adc
sub
inc
add
push
fisttps
xor
mov
jecxz
and
enter
jmp
out
sbbb
cmc
sbb
aas
cmp
xorb
movsl
xchg
sbbl
in
pop
outsl
xchg
push
push
mov
cs
lahf
mov
cmp
es
inc
mov
stos
lret
mov
lods
jae
stc
jbe
inc
inc
loopne
dec
xor
repz
and
mov
xchg
imul
pop
jmp
mov
repz
ljmp
cmp
cmpsb
pop
add
notl
add
test
popa
adc
fdivs
outsb
out
xor
push
inc
mov
aaa
and
outsb
out
rcr
cmc
test
mov
pop
cmc
push
or
and
sbb
aas
sub
out
sahf
lcall
pop
mov
lea
nop
loop
mov
mov
pop
inc
push
outsb
arpl
and
js
test
test
lods
out
xchg
lret
icebp
xrelease
je
xor
adc
adc
daa
xchg
inc
fwait
repz
fistps
sub
and
mov
sub
data16
in
cmc
jecxz
mov
mov
cli
mov
adc
cmp
test
fbstp
and
sbb
popf
ficompl
mov
test
scas
sub
in
mov
adc
and
lods
aad
xchg
test
daa
movsb
inc
or
addb
scas
jge
fsubr
mov
cmp
mov
out
ss
inc
dec
dec
push
dec
lret
or
shl
notl
dec
movsl
call
pop
xlat
and
inc
xor
aad
stos
mov
das
clc
inc
cld
out
xchg
dec
mov
pop
jnp
mov
pop
gs
pop
sbb
ss
sti
dec
push
lret
aaa
bound
shll
jle
cmpsl
shll
inc
ret
jb
repnz
pop
inc
iret
xor
dec
mov
pop
cmp
stos
mov
dec
xchg
pusha
shll
xchg
stos
mov
pop
adc
cmpsb
sbb
xchg
xchg
leave
jno
dec
data16
rcrl
out
call
jp
insb
mov
push
rcrb
iret
dec
add
mov
xchg
pop
stos
dec
xor
out
adc
cmp
sbb
sub
pushf
xchg
les
fdivrl
cmc
out
add
js
aad
mov
add
dec
cli
or
dec
mov
nop
lret
fs
neg
add
out
scas
mov
push
movsl
inc
xchg
icebp
fwait
in
movb
lods
add
in
sbb
pop
stos
popf
adc
inc
sbb
mov
jl
cmp
and
faddl
ljmp
out
imul
sbb
je
cmp
mov
adc
call
cmp
fstl
fs
imul
insb
push
inc
add
push
out
shrb
lret
adc
movsl
cli
and
loope
sbb
shrl
mov
mov
int
fisubrs
loopne
sbbb
ljmp
and
sbb
cmp
mov
pop
xor
jle
mov
fnsetpm(287
mov
hlt
mov
cwtl
dec
adc
mov
and
mov
dec
xor
push
sbb
and
subl
in
jle
sbb
xorl
mov
mov
jg
xor
fisubrs
cmpsb
mov
scas
addb
and
jnp
xor
mov
jp
addr16
sub
lock
cmp
cld
sahf
scas
dec
aas
cmp
sub
jbe,pt
xchg
std
push
popa
mov
in
scas
pop
mov
mov
dec
rcr
pop
adc
jo
loope
fwait
ds
int
pop
sbbb
and
cmp
insb
dec
jbe
sbbl
jle
adc
xchg
pop
adc
push
xchg
loopne
addr16
xor
fwait
pop
rcrl
dec
or
adc
cmp
lock
cmp
jne
dec
arpl
sub
ret
dec
mov
push
fnstcw
xor
nop
xchg
jns
imul
test
mov
lret
jne
nop
jmp
shll
xchg
mov
jmp
addr16
ss
sbb
push
xor
nop
jecxz
or
mov
test
out
fstps
mov
int3
ficoms
sub
call
cmp
gs
lock
sbb
adc
jno
mov
lock
xchg
aaa
dec
in
jb
fmulp
sub
push
insl
inc
xor
ret
adc
stos
or
mov
and
or
xchg
mov
mov
outsb
xchg
test
jns
roll
sbb
mov
cmpsl
mov
dec
push
pusha
pop
minps
push
sub
mov
pop
jge
das
mov
sti
loope
mov
cmp
pop
call
push
push
mov
aam
aam
fs
fstpt
je
sbb
add
mov
push
push
subb
xchg
fwait
dec
or
dec
push
sbb
push
test
rorb
lret
and
daa
fwait
push
xor
sarb
cmp
xchg
into
mov
sub
movl
subb
rcrl
and
dec
push
sti
mov
pop
sbb
inc
les
dec
jnp
test
aaa
cmpsb
daa
cmp
lret
lds
or
xor
lcall
push
loop
jle
cld
jno
repnz
cmc
int
stos
lret
cmc
xchg
addl
bound
inc
pop
scas
cli
xor
jo
add
jns
inc
mov
out
dec
ljmp
cmpsb
push
in
mov
pop
cmpb
arpl
cmp
push
pop
out
jl
fbstp
adc
mov
pop
addr16
sub
jecxz
xor
loope
sbb
xlat
in
mov
mov
ret
shrb
imull
mov
or
sub
loope
jp
popa
mov
push
fstpt
gs
mov
aaa
lds
cmp
mov
lcall
inc
adc
cmpsb
xchg
test
cmp
or
shl
pop
adc
pop
and
xor
lea
jns
out
or
ret
jne
inc
dec
popa
xor
mov
cmp
popf
adc
xchg
in
cmc
sub
mov
outsl
rcll
sub
es
sbb
dec
push
cmp
mov
adc
roll
jo
lea
jno
into
ds
cmp
nop
jnp
js
sub
and
das
cmp
inc
daa
les
int
test
rorb
jne
cmp
addl
push
xchg
or
icebp
pop
inc
cmp
xor
mov
inc
pop
xchg
dec
inc
mov
mov
outsb
or
hlt
jl
xor
push
pop
loop
cmpsb
jl
jb
mov
fs
xor
xchg
sbb
mov
pushf
push
dec
cli
gs
shrl
xor
iret
les
xchg
jp
inc
cld
push
pop
inc
testb
xchg
xorl
jnp
sub
idivl
nop
jne
fprem1
push
pop
dec
mov
out
ljmp
in
and
in
nop
loop
js
outsb
fcoms
stos
call
inc
jmp
mov
sbb
je
aaa
fidivrl
jbe
cmp
jbe
pop
test
push
dec
stos
ljmp
aaa
ret
push
xor
ss
inc
cli
jle
cs
jl
int3
icebp
ret
xor
enter
jnp
sahf
ret
aaa
sub
or
pop
pop
ja
rcrb
imul
lds
inc
movsb
into
stos
mov
movsl
cwtl
leave
loopne
iret
and
push
mov
scas
xor
dec
and
addr16
push
push
pop
jge
mov
add
icebp
mov
jb
pop
adc
aas
orl
ffree
push
sbb
loope
or
inc
mov
mov
jb
add
and
cmpl
imul
mov
test
xorl
test
in
inc
mov
fwait
inc
mov
das
sub
add
mov
adc
xor
add
sub
jg
pop
inc
or
outsb
test
rorl
sar
repnz
add
sarb
cmp
adc
and
repz
fnstenv
sti
inc
or
aaa
aaa
or
testl
fidivrl
xor
mov
dec
xchg
xchg
mov
test
push
cmp
mov
test
addr16
int3
jne
lahf
addr16
enter
int
xor
das
xor
sbbb
loope
js
xor
sub
mov
cld
xor
pop
pop
mov
imul
repz
outsb
mov
aas
cmpsb
push
sub
inc
insl
or
add
lods
loopne
add
push
stc
cmp
jns
and
popa
mov
pop
insl
sub
jecxz
xchg
sub
outsb
ret
repz
jge
mov
idiv
inc
adc
test
jle
fcoms
jl
xchg
adc
addr16
sub
sti
xor
cld
into
push
lock
jae
sub
outsb
jle
and
jg
pop
lock
cli
outsb
imul
adc
out
fwait
sub
scas
push
repnz
fldl
roll
jns
mov
hlt
icebp
mov
mov
lods
xlat
adc
push
adc
out
jb
lea
cmp
xor
add
popf
jle
xchg
in
jo
in
cltd
jg
mov
xchg
xchg
jle
shrb
adc
scas
enter
sarb
repnz
sbb
pop
inc
xorl
js
data16
pusha
int
sbb
iret
cmp
arpl
shrb
int
outsl
xor
xchg
pop
inc
fisubl
and
mov
xchg
jnp
cmc
jae
imul
stc
std
mov
stos
js
cmc
fisttpll
dec
lcall
cmp
mov
arpl
stos
out
mov
sub
and
mov
jnp
je
mov
sbb
mov
or
push
mov
dec
das
dec
nop
pop
xchg
enter
call
cmpsb
sub
inc
xchg
subb
enter
push
stos
dec
sub
pop
or
cmpsb
lcall
pop
lods
pop
fdivrl
xchg
out
mov
jg
scas
dec
jns
jl
outsl
sbb
dec
fcmovnb
stc
daa
jae
xchg
test
int3
popa
mov
mov
mov
jno
mov
std
lahf
mov
mov
sbb
jmp
insb
imul
jp
mov
mov
cmpsl
lcall
outsb
sub
or
lldt
adc
hlt
test
pop
xchg
imul
dec
shrl
or
pop
js
lcall
cmp
into
xlat
mov
jmp
hlt
pusha
and
pop
xchg
inc
or
and
rcr
inc
js
mov
mov
ja
pop
js,pn
adc
test
jns
pop
jae
jmp
lret
push
jl
out
mov
jns
pop
in
xchg
xor
mov
stos
movsb
mov
sbb
push
jmp
jg
adc
loopne
clc
pop
mov
stos
xchg
out
out
mov
lcall
adc
dec
pop
fbld
outsl
xchg
loop
adc
sbb
mov
scas
push
dec
xchg
mov
rolb
add
jp
dec
mov
repnz
repz
imul
lds
dec
test
or
mov
lods
pcmpeqd
in
pop
cmpsb
xor
fimuls
sub
jge
out
cs
jne
pop
shll
dec
jo
data16
mov
sbb
add
xor
popa
stos
repnz
ficomps
or
mov
flds
cmp
inc
fcmovnu
cld
cmp
add
pop
por
sti
push
inc
pop
call
and
cmp
inc
cltd
push
push
pop
shlb
pop
scas
xchg
in
daa
mov
shll
dec
xor
inc
test
push
inc
cmp
andb
lods
ja
xor
test
sbb
in
pop
push
push
aam
xchg
sbb
sbbb
cmpsb
lods
daa
insl
in
xor
mov
mov
cs
adc
outsb
movsl
divl
push
push
lcall
call
xchg
addr16
jnp
ds
repz
into
pop
sbb
mov
jg
mov
loopne
cli
cmp
and
insb
cs
cmp
lret
in
inc
sub
jmp
adc
cmpsl
test
pushf
jbe
dec
ja
jno
inc
push
inc
decl
mov
xchg
fcoml
je
add
xchg
pop
pusha
dec
sub
pop
jo,pn
iret
xchg
rep
hlt
sbbb
bound
push
ficoms
sub
int3
adc
xor
aaa
mov
test
push
or
popa
dec
shrl
js
cltd
add
bound
sub
cmpsb
or
cmp
adcl
sbb
add
cwtl
sub
push
imul
lea
es
aad
xchg
lods
push
or
test
cmp
mov
cmp
ja
mov
xor
ret
xchg
ds
stos
addr16
fucomip
inc
jge
sbb
loope
mov
sbb
cmpb
nop
sti
sub
or
out
pop
dec
scas
leave
cmp
lahf
inc
lock
jmp
xor
mov
mov
and
cmp
out
pop
and
add
and
push
cmp
mov
dec
jnp
mov
lcall
ficoml
cmpsl
inc
mov
inc
sti
and
pop
add
lret
lock
sbb
mov
jne
fs
dec
cmpsb
sbb
mov
dec
rcrl
inc
cli
or
xor
push
mov
ror
ja
or
sub
scas
dec
and
out
mov
cld
lods
sub
bound
bound
aam
push
mov
mov
or
mov
cs
cmp
insl
mov
ss
stc
and
add
ljmp
int
and
stos
add
pop
aaa
xor
aad
subb
je
and
and
popa
lcall
das
sbb
pop
fwait
lods
imul
inc
push
popf
sbb
fdivrs
int3
cld
mov
sahf
in
xorb
pop
cmp
fildll
and
mov
and
outsb
filds
mov
jbe
cmpsb
sub
cwtl
cmp
mov
mov
lahf
repz
xor
outsb
xchg
and
ss
nop
insb
jns
sub
pop
fildll
loop
shll
pop
xchg
sub
movsl
dec
fmull
out
pop
mov
or
std
sahf
cmp
lock
scas
loope
jge
pushf
jmp
mov
or
int
cmpsb
add
xor
lods
adc
jb
xchg
jns
shrb
into
mov
add
or
pop
xchg
mov
inc
hlt
mov
push
mov
jmp
int
jns
pop
mov
inc
fisubrl
mov
movsl
cmp
loope
popf
inc
cmp
test
mov
or
push
rclb
sbb
mov
sub
jns
lret
mov
push
sub
mov
jecxz
sbb
mov
cmp
or
les
popf
sti
arpl
xchg
xchg
out
and
iret
mov
inc
sbb
jg
xor
sub
divb
push
aaa
add
sbb
dec
xor
xor
and
loope
mov
into
adc
repnz
add
je
loopne
test
imul
fdivr
push
test
je
jb
cmpsl
mov
imul
sar
mov
hlt
loope
mov
outsb
pushf
sbb
xor
lret
int3
pop
ds
inc
inc
xchg
into
fidivrl
push
js
dec
in
adc
lret
jo
cmpsb
rcll
or
loop
sahf
push
cmpsb
fwait
mov
sub
leave
in
inc
mov
xlat
xchg
popa
jge
xchg
shr
mov
ja
ret
xlat
push
mov
push
mov
sbb
mov
stos
mov
cmpsl
fisttpll
adc
out
xchg
out
push
clc
xchg
mov
mov
sub
into
faddp
sub
jno
dec
movsl
int
imul
aaa
xchg
imul
xor
popa
push
loopne
mov
jge
lods
mov
sub
xlat
jmp
push
mov
cli
mov
aas
xor
arpl
or
adc
add
jbe
aaa
insb
test
and
ret
adc
cmp
dec
pop
andb
outsl
or
cmp
in
mov
cmp
dec
pop
psubd
pop
fucomi
scas
cmp
in
stos
mov
mov
icebp
leave
out
jno
faddl
sub
cmp
xchg
inc
cltd
es
xchg
mov
inc
int
add
cmp
fdivrs
insb
call
enter
add
fadds
and
sti
jmp
imul
ljmp
cmp
dec
pop
adc
shrl
mov
dec
movsl
gs
jl
sbb
cmp
mov
jb
pop
mov
aad
dec
jl
push
adc
adc
pushf
ja
fs
adc
and
mov
fs
stos
add
jmp
pop
in
js
fwait
js
fisubs
gs
fists
and
fisubrl
mov
push
cmp
inc
les
inc
shll
das
pusha
pushf
cmp
xchg
pop
stc
imul
and
loope
adc
jmp
adc
testb
shlb
mov
icebp
pop
scas
pop
jo
iret
cmp
das
lock
gs
push
jmp
or
add
push
call
and
lods
dec
and
nop
adc
addr16
stc
scas
fdivr
push
scas
sbb
fwait
pop
les
mov
jl
aas
mov
pop
mov
jg
xor
jo
xchg
push
jle
or
ljmp
lea
insb
fdivp
addr16
jnp
pop
sub
and
sbb
xchg
or
cmp
mov
daa
nop
cmp
cmp
sar
cli
test
mov
sub
ffreep
pushf
and
iret
cmp
into
inc
adc
dec
into
xchg
in
jg
cwtl
stc
insl
xchg
dec
loop
das
insb
add
rcrb
loopne
cmp
insb
lock
xor
mov
add
nop
dec
andb
pop
ds
loope
pop
cmpl
dec
frstor
pop
pusha
incl
lcall
and
in
mov
inc
mov
iret
subb
frstor
insl
not
mov
les
loop
inc
adc
mov
pusha
fdivl
lret
dec
sub
cltd
stos
testb
hlt
sbb
xchg
mov
pop
mov
addb
sub
or
cld
jmp
shr
mov
cmp
pop
inc
loopne
or
movsb
aas
out
out
dec
mov
jl
adc
cwtl
loop
dec
adc
cmp
xchg
adcl
inc
cmp
add
fmuls
pop
cwtl
jge
jl
and
movsl
xchg
inc
inc
jb
lret
int3
dec
lock
into
shrl
mov
mov
jge
push
scas
pop
mov
sbb
xor
clc
jbe
inc
jge
sub
mov
or
cmp
filds
cmpl
out
sahf
lahf
add
roll
xor
jecxz
add
scas
pop
lds
test
sbb
cs
imul
fstl
lcall
add
push
test
sbb
je
inc
xchg
roll
cltd
and
add
cmp
in
hlt
mov
adc
std
xchg
outsl
pop
mov
mov
subb
xchg
test
popf
adc
lods
jnp
pop
outsl
sbb
mov
je
mov
cmp
dec
out
or
rorb
mov
xchg
push
mov
xlat
mov
or
adc
aam
mov
xchg
push
pushf
xor
pop
sub
cmp
cmp
aam
jmp
out
dec
sbb
xor
sarb
lock
sahf
or
or
insl
cwtl
mov
sub
sbb
inc
jl
push
or
movsb
lods
loopne
mov
loop
pop
pop
xor
cmp
pop
ja
ljmp
cmp
inc
mov
sub
dec
scas
enter
cmp
iret
fdivrs
frstor
mov
outsl
inc
jge
loope
dec
ljmp
sbb
add
mov
adc
movsl
xor
push
jbe
out
xor
vpmuludq
sub
jb
mov
push
dec
into
adc
sti
jecxz
add
sbb
bound
lock
mov
fidivs
adc
pop
roll
adc
rclb
sub
fs
loopne
pop
nop
test
mov
pop
in
push
addr16
xchg
cmp
cmc
test
aam
inc
bound
stos
jecxz
jb
shlb
int3
push
fdiv
test
repnz
call
int3
imul
xchg
sbb
outsl
cmp
callw
rcll
mov
lret
imul
out
add
mov
push
repz
stc
mov
daa
xor
loope
push
jbe
xchg
aad
add
xor
loopne
dec
xchg
push
movsl
mov
mov
rolb
mov
pusha
lock
imul
xlat
push
enter
xchg
int
sbb
ljmp
jae
sahf
add
pop
shrb
daa
out
js
ret
mov
pop
dec
std
loopne
push
or
ss
adc
or
adc
shlb
repnz
and
stc
mov
int3
scas
xchg
popa
jo
push
dec
inc
and
add
hlt
out
pop
stc
into
aam
or
adc
aaa
test
jle
jg
scas
gs
jae
mov
mov
cmp
in
xlat
xrelease
push
sub
dec
ss
jmp
leave
imul
jo
sbb
stos
add
push
shll
pop
jnp
inc
loop
shlb
mov
test
cli
push
das
mull
or
jle
mov
mov
push
jbe
add
daa
mov
pusha
adc
std
test
mov
mov
mov
mov
lret
scas
adc
adc
or
outsb
mov
and
movsl
mov
pop
pop
fstpl
cwtl
in
or
mov
movsl
vcvtdq2pd
lcall
mov
inc
add
scas
inc
sbb
and
adc
sbb
rcrl
fs
add
inc
jae
fisubl
inc
sbb
cli
mov
jle
mov
dec
or
adc
sbb
push
adc
xlat
xor
outsl
daa
adcb
dec
ljmp
xchg
mov
mov
mov
test
inc
fnstenv
pop
jns
xchg
pop
sub
mov
test
push
mov
lahf
jb
daa
hlt
ret
cwtl
fs
push
daa
fs
repnz
mov
sub
mov
mov
outsl
cmp
in
push
aas
mov
push
js
jp
test
jae
add
push
push
pop
sbb
cmp
test
sbb
mov
xor
push
add
mov
jg
jmp
mov
popa
pop
loope
mov
xor
lar
movsl
push
pop
imul
cmpsl
inc
cmp
push
inc
xchg
mov
out
in
dec
pop
pop
xchg
xchg
sbb
int
out
pop
ja
rcrb
cwtl
in
inc
adc
scas
pop
test
ret
stc
in
stc
fs
jp
cmp
test
pop
pop
iret
sbb
jno
mov
xor
rcrl
sub
and
inc
test
pop
fs
popa
pop
ja
mov
jno
sub
mov
loope
imul
enter
ffreep
mov
mov
fs
cmpsb
pop
sbb
pop
sahf
jp
ja
mov
push
ret
je
aas
out
popa
movsl
push
idivb
mov
fdivs
leave
out
cmp
add
jp
sub
in
push
ret
outsb
or
notl
sub
fildl
lcall
mov
or
jne
push
out
dec
sbb
in
or
add
add
mov
mov
jge
inc
xor
and
sub
add
mov
and
and
test
and
leave
pop
mov
xchg
cmpsb
shll
xchg
je
in
mov
jns
inc
mov
pop
jbe
mov
jb
fstpl
mov
xor
sbb
inc
push
stc
out
adc
mov
enter
orb
pop
sub
pop
push
bound
mov
mov
mov
jl
jae
shl
cli
add
push
ficompl
jno
int3
push
je
arpl
out
mov
mov
ret
roll
mov
xchg
or
cmpsb
mov
repz
push
cmc
cs
out
jno
and
fidivl
or
mov
nop
jl
mov
mov
shlb
pop
cmp
loop
movsl
test
jne
push
or
mov
mov
in
dec
in
aaa
fstp
mov
inc
je
test
pop
les
dec
bound
sbb
test
out
movsb
mov
xor
out
jecxz
mov
repnz
sub
jmp
dec
fwait
bound
inc
aas
push
push
jl
jns
cli
test
cmp
stc
cmpsb
out
ds
test
jl
aas
pop
loope
out
dec
aaa
sub
mov
dec
push
push
aad
jl
insb
pop
push
pushf
lds
xchg
movsb
jns
pop
mov
sub
or
clc
jl
aaa
inc
shrl
test
mov
out
loope
jmp
imul
mul
rol
fldenv
inc
ffree
dec
stos
or
fwait
xchg
aaa
or
cmpsb
cmc
imull
add
nop
jne
push
lds
xor
and
fadd
ret
cwtl
clc
and
test
testb
leave
test
and
push
cmp
pop
roll
rorb
pop
xor
adc
out
mov
test
cmpsb
int3
mov
xchg
sub
xchg
push
push
push
mov
jle
rcrl
jb
jp
and
in
mov
dec
add
xchg
pop
mov
hlt
ljmp
push
iret
nop
pop
cmpl
jle
in
rolb
out
mov
adc
stos
pop
sbb
jle
pushf
inc
insb
test
xor
jecxz
into
ljmp
loopne
loopne
mov
cmp
jecxz
es
xchg
add
stc
leave
sbb
inc
and
in
add
mov
inc
ss
arpl
xchg
dec
sub
cmpsl
fimuls
out
cmc
dec
dec
repz
shlb
scas
pusha
jg
movsl
jge
pop
mov
push
in
xor
push
xor
ret
stos
mov
jns
push
sbb
imul
add
and
lds
rcrb
rcrl
into
cmpsb
mov
xchg
mov
xor
pop
filds
sub
test
xchg
pusha
mov
mov
mov
pop
jp
sbb
or
sbb
push
cs
imul
inc
sbb
cs
test
jb
popa
aam
int3
push
cmp
xor
push
cmp
jge
std
pushf
das
dec
hlt
inc
adc
xor
mov
add
cmp
dec
leave
xchg
icebp
lret
xchg
cmp
push
cmp
adc
jnp
jg
pop
imul
je
loope
xor
loopne
add
cmpsb
cmp
je
fisttps
adc
push
leave
cmpsl
lods
les
repnz
shll
jecxz
loope
fildll
ja
mov
enter
js
sub
mov
sub
xchg
or
mov
scas
add
cli
xor
sub
fs
test
push
inc
das
insl
cmpsl
std
or
jp
push
scas
cmpl
pop
imul
cli
shll
pop
inc
add
xorb
cmc
enter
push
shr
pop
popa
push
mov
in
mov
xorb
movsl
xor
aam
rcll
aad
xchg
pop
js
jae
fsubr
push
xchg
pop
jge
fs
addr16
or
jmp
addr16
ret
cmp
inc
sub
std
in
call
movsl
dec
lock
sti
jp
jne
test
mov
mov
icebp
subl
fdivrp
movsb
sahf
mov
and
push
in
fimuls
inc
mov
stos
push
ljmp
aas
mov
pop
inc
xchg
adc
cmc
xor
cmpsl
andl
dec
sub
stc
pop
repnz
sub
jb
std
aad
lea
jecxz
or
mov
push
push
cmc
imul
fisubl
out
jg
pop
les
mov
push
sarl
sti
adc
cmpsl
fsubp
inc
popa
into
std
mov
jl
xchg
cmp
push
sbb
imul
scas
mov
jmp
xchg
jbe
leave
les
mov
dec
enter
mov
add
mov
or
and
lds
jb
outsb
outsb
xor
mov
xchg
jge
pushf
jg
cmpl
mov
mov
jo
ret
test
daa
lea
pop
pop
shrl
popf
fisttps
loope
add
loop
and
das
dec
pusha
scas
cli
jle
mov
mov
adc
scas
movsb
test
not
call
push
loop
mov
in
xchg
push
fs
cli
sbb
push
sbb
dec
or
repnz
push
int
jnp
jmp
int3
jnp
loope
mov
arpl
cmp
adc
cmp
sub
pop
push
add
out
dec
loope
outsb
loop
jg
gs
jne
iret
mov
dec
and
out
scas
in
sub
lds
xchg
loop
pushf
dec
fimull
xchg
pop
mov
mov
xchg
pop
into
out
push
jmp
ret
adc
daa
mov
out
jle
insl
ja
ret
mov
loope
jns
stc
pop
insb
inc
fs
jp
fidivl
and
js
mov
into
sbb
mov
es
mov
cmp
sub
jg
cmp
inc
pop
mov
adc
stc
mov
dec
adc
mov
mov
sub
jmp
dec
insl
pop
and
cmpsb
in
push
pop
js
and
mov
js
xorb
stos
xchg
cmp
inc
adc
mov
mov
add
mov
les
sub
and
push
mov
shl
int3
out
repz
sbb
adc
jo
out
out
outsl
pushf
and
int
jmp
mov
loop
loopne
jl
mov
cwtl
pop
mov
test
mov
pusha
fbld
lahf
push
jge
movsl
ret
into
dec
scas
xor
mov
clc
fsub
imul
or
push
inc
ret
out
adc
sbb
roll
cmpxchg
pop
into
loop,pn
adc
lret
ret
pop
ja
mov
or
jg
adc
ficoms
addl
pop
js
push
pop
in
out
mov
in
pop
sbb
in
lods
xchg
iret
jl
cmp
inc
sub
and
movsl
nop
push
push
mov
jae
psrld
pop
inc
arpl
or
pop
sub
pop
cltd
push
inc
mov
mov
sub
int
setge
sbb
lret
xchg
pop
cmc
jp
sub
or
mov
call
ljmp
add
xor
mov
test
mov
pop
add
aas
xor
inc
cpuid
mov
insb
mov
pop
out
cmp
stos
test
dec
rorl
and
in
js
xlat
cltd
and
ljmp
dec
push
shll
ret
sub
cmp
into
and
lret
fstpl
mov
paddd
lea
pop
sub
inc
jbe
jnp
pusha
lcall
das
mov
ds
mov
lret
and
mov
mov
test
cmc
ror
sub
js
fistpll
mov
outsl
stos
mov
inc
aam
nop
push
pop
or
movsb
out
mov
js
lcall
inc
mov
imul
leave
jge
sub
mov
cmp
or
ss
jne
inc
int
lock
xchg
sahf
leave
test
mov
dec
xchg
sub
in
adc
adc
mov
push
push
or
outsb
shll
cli
and
and
pop
lahf
dec
xchg
jns
mov
xor
mov
mov
cwtl
dec
sbbb
sub
rcll
hlt
mov
xor
or
mov
sub
rcl
mov
outsb
rcrb
stos
sbb
mov
movsl
push
icebp
add
mov
fistl
adc
leave
jle
loope
mov
mov
mov
loopne,pt
mov
sbb
call
push
xor
aam
scas
addr16
insb
cs
inc
mov
jg
fwait
adc
xor
mov
mov
and
stos
lret
xor
push
adc
xlat
mov
popa
jp
rorb
rcrl
xchg
aam
inc
add
push
sub
dec
push
sub
out
push
aas
mov
or
lret
pusha
dec
mov
cmp
popa
push
mov
jns
lret
orl
enter
lods
addr16
negb
sbb
jb
out
iret
cmp
cwtl
cmc
xchg
sahf
popf
stos
mov
cmp
je
sbbb
sbb
jne
mov
insl
inc
jge
aaa
pop
out
add
jl
lret
cld
mov
pop
enter
popf
cmpsl
jge
cs
out
and
outsl
adc
shll
pop
mov
mov
xor
push
jae
sbb
test
clc
cmp
mov
or
adc
push
je
cli
inc
sbb
mov
arpl
mov
imul
inc
xor
pop
adcl
mov
outsb
stc
push
mov
add
cwtl
fistl
lods
push
or
cmp
das
imul
cmp
pop
push
add
cmp
pop
push
mov
push
mov
push
mov
and
or
repnz
movsl
cmp
xor
aad
cs
and
inc
sub
nop
int
push
dec
xchg
pop
test
bound
cld
stc
leave
sub
push
out
test
stc
xchg
jecxz
pop
rol
pushf
mov
push
xchg
jecxz
xor
cmp
shrb
lahf
shrb
mov
out
pop
inc
divl
cmp
sbb
fmuls
imul
lcall
imul
lds
movsb
or
adc
mov
inc
fsubrp
mov
push
jnp
sbb
into
add
int3
es
add
pop
jle
pop
stc
cmpsl
mov
lds
jne
pshufw
fildl
leave
adc
xchg
es
stc
add
lds
add
jo
xchg
xchg
shlb
imul
push
push
jbe
lods
aaa
jp
mov
add
sub
pop
pop
jb
push
iret
sbb
push
aam
xchg
mov
pusha
dec
cmc
inc
fcmovb
adcl
cmp
xor
aam
imul
inc
mov
std
dec
mov
data16
adc
mov
lcall
lret
int3
movsl
shlb
xor
pop
and
xchg
add
and
mov
mov
ds
and
jno
cli
jl
xor
movsl
sub
pop
cli
ffree
ss
cmpsb
sub
jns
test
ja
mov
shll
fistpll
hlt
fmuls
mov
push
subb
cmp
adc
jmp
push
into
fsubrs
inc
xor
jne
lock
ss
pop
dec
popa
int
sub
lahf
sub
sub
mov
push
fisubrs
loopne
mov
xor
bound
insb
dec
or
xchg
test
inc
icebp
lcall
xchg
inc
sub
fwait
in
mov
and
pushf
rcrb
daa
adc
pop
call
in
sbb
ja
cmp
xchg
inc
stos
push
xchg
das
mov
adc
dec
fnstenv
lret
mov
dec
cmp
int
sahf
fwait
pusha
and
sahf
inc
ja
push
pop
mov
in
push
les
gs
adc
mov
ja
out
daa
ja
mov
fisttpl
pop
call
sti
mov
dec
cmc
inc
fs
pushf
fwait
jns
jb
mov
shl
mov
mov
mov
aad
pusha
je
xchg
push
mov
sbb
aad
jg
mov
inc
mov
cli
sarl
popa
cmp
dec
mov
fcomps
stos
pushf
insb
add
jno
repnz
jnp
pop
xchg
daa
inc
mov
and
pushf
mov
xchg
pop
pop
dec
jecxz
stos
mov
out
mov
pop
sbb
sbb
or
xor
fs
mov
sbb
sub
cwtl
jo
sbb
mov
push
lods
fwait
add
mov
scas
lea
aas
sbb
test
inc
repz
ja
mov
mov
nop
fbstp
adc
add
mov
insl
xchg
fwait
clc
loop
inc
imul
out
movsb
push
dec
xchg
xchg
nop
aas
sbb
test
jae
jg
imul
loopne
xor
mov
cmp
xchg
les
xchg
mov
mov
cmc
pop
push
aas
loopne
pusha
mov
aas
daa
xor
decl
mov
jl
xchg
inc
mov
xor
and
mov
xchg
sub
in
cmp
jle
rol
popa
shll
imul
out
pop
insl
loope
and
mov
jge
cmp
ja
outsb
mov
add
in
push
sub
notb
jno
cmpsb
jmp
cmp
mov
mov
out
mov
mov
pop
mov
call
adc
loopne
sub
mov
xchg
sub
add
or
fs
imul
push
xchg
ret
rorb
popa
push
inc
pop
sub
jbe
sub
jle
push
push
idivb
adc
sub
ja
lods
xor
mov
pop
sbb
xor
xchg
clc
mov
rorl
rcll
mov
or
sbb
lret
adc
and
jns
movups
addl
mov
xchg
xchg
mov
cmp
cltd
add
pop
xor
jle
out
sbb
push
pop
fildl
notb
fisubrs
cmp
push
lods
pop
cwtl
adc
xchg
push
push
jp
ret
mov
ljmp
push
xor
movsb
mov
aam
and
or
stc
or
xor
mov
popf
pop
in
notl
lahf
mov
adc
out
push
push
stc
xor
movsb
jbe
imulb
in
push
push
test
add
movsb
mov
inc
add
arpl
outsb
dec
dec
out
rcll
leave
sub
int
outsb
cmp
aas
cwtl
jbe
mov
mov
cmp
sub
test
pop
cmc
rcl
imul
xlat
in
pop
pop
cltd
cmpsl
movsb
sahf
aam
sub
cmp
aaa
std
call
mov
xchg
xor
sbb
push
and
sbb
jno
and
dec
adc
or
in
sub
sbb
xor
inc
xor
mul
xorb
sbb
or
mov
xor
sar
mov
test
or
or
or
inc
orb
sbb
mov
jnp
aam
je
in
scas
sbb
stc
add
cmpsb
scas
sbb
daa
repnz
xchg
outsl
pop
add
dec
add
fcmovbe
cmpsb
pop
jbe
fbstp
fstl
rorl
xor
sbb
and
mov
fsub
insb
mov
loop
jo
es
ss
jae
and
jnp
sub
cmpsb
pop
cmp
inc
xchg
jecxz
loopne
inc
cmp
inc
lcall
mov
xchg
pop
cmp
inc
dec
jg
xchg
push
push
test
clc
sbbl
out
or
mov
fnstsw
cltd
adc
loope
pop
popa
lret
or
push
sti
out
shl
ret
gs
aaa
xchg
add
pop
and
jne
adcl
lods
push
popa
mov
ret
call
sar
es
jno
push
clc
aaa
arpl
push
or
movl
lea
cld
pop
dec
andl
pop
test
nop
sbb
test
xchg
xchg
outsl
sbbb
or
out
fdivs
lds
outsw
out
movsl
rcll
test
mov
mov
sub
or
cli
mov
insb
in
and
testl
icebp
dec
add
xchg
dec
movsb
fwait
push
jae
adc
jo
rcrl
xchg
sbb
aas
popf
in
loop
inc
fdivs
jo
mov
xor
sbb
mov
xchg
mov
sub
sbb
xchg
int3
outsb
cmc
pop
mov
out
aad
sbb
clc
aam
mov
dec
fcompl
lods
jne
lret
lock
dec
aam
insb
cmp
push
movsl
mov
test
push
sub
dec
pushf
jb
mov
sbb
leave
in
loop
in
faddl
jl
repz
lock
inc
lea
mov
lea
shll
std
push
xchg
dec
imull
inc
add
xchg
iret
stos
xchg
xchg
add
cs
or
cmp
jmp
repnz
roll
sub
mov
fistl
mov
scas
mov
or
imul
movsl
push
into
jecxz
mov
mov
xchg
cli
push
scas
idiv
add
sub
cmp
pop
dec
push
dec
jl
jecxz
pop
jo
and
inc
fidivl
dec
and
pop
inc
test
mov
aam
push
test
fimull
cmpb
adc
sub
movsb
lock
insb
out
lret
orb
sarb
jne
aad
and
stos
movsb
outsl
xor
shlb
pop
aam
ss
jp
clc
push
popf
test
sbb
xor
mov
sbb
imul
cmp
neg
xor
push
pop
xor
test
push
jl
jg
jb
cmp
sti
push
inc
adc
sub
jnp
pusha
cmp
data16
inc
sbb
xor
and
xlat
mov
xchg
outsl
push
mov
cmp
jns
fiadds
sti
nop
addr16
mov
out
dec
jns
loop
out
push
pop
adc
mov
push
movsb
je
mov
add
sbb
cltd
pushf
ljmp
xlat
pop
push
dec
jno
lahf
xchg
rolb
sbb
lods
inc
and
fcmovnbe
and
jmp
pusha
in
movsb
or
sbb
pop
mov
adc
shll
or
sub
rcr
dec
outsb
mov
pop
mov
int
push
cmp
inc
pushf
lock
fdivs
dec
mov
ficompl
pop
cmc
addr16
aad
or
std
push
pop
cmc
shll
popf
imulb
aam
test
mov
pop
repz
call
lods
lods
lret
ja
stos
cmc
xchg
test
push
cmp
mov
repnz
dec
call
push
push
ljmp
jns
inc
sbb
xchg
lahf
bound
xor
adc
imul
mov
gs
das
cli
inc
cmp
xchg
push
jg
pop
neg
loop
inc
xor
fstpt
mov
icebp
daa
add
sub
icebp
insb
or
sub
jbe
enter
sbb
pop
stos
into
add
xchg
fprem
push
push
sub
and
cld
mov
jnp
in
lahf
lock
dec
imul
leave
jo
xchg
lahf
ret
fmuls
mov
pop
das
scas
es
lret
push
out
pop
lds
cmp
pop
mov
push
inc
xchg
cmpl
hlt
sub
lret
fisubrs
mov
and
ds
jne
ret
popf
mov
xor
inc
les
and
js
dec
repnz
add
mov
loope
jno
jp
es
repz
sub
out
cmp
jg
out
jg
fwait
cltd
sub
mov
add
xchg
ss
xlat
or
cld
xchg
pop
stos
sbbb
or
mov
pusha
fdivrl
sbb
mov
inc
adc
xchg
inc
pushf
xorb
repz
repnz
cmc
jmp
xchg
and
ret
popa
ret
xchg
xchg
adc
push
add
sub
cmc
xorb
fstpl
popf
mov
ds
or
popf
mov
add
add
outsb
in
sahf
in
inc
xchg
sbb
mov
jne
push
mov
mov
add
dec
mov
jge
jno
lcall
mov
push
add
outsl
stc
ret
pusha
or
in
mov
or
aad
cli
mov
scas
jbe
bound
add
mov
into
imul
xchg
int3
add
dec
cmp
pop
filds
dec
imul
push
xchg
or
cmpsl
mov
les
mov
cmp
fldl
add
cld
dec
lret
mulb
mov
mov
std
xchg
or
aam
and
push
cmp
out
mov
xorl
dec
adc
dec
mov
int
test
xor
mov
out
jae
pop
jecxz
fld
imull
stos
push
and
mov
dec
or
bswap
shll
xor
dec
jecxz
cmp
fdivr
inc
add
sahf
cli
jmp
out
jp
test
stos
into
jns
es
inc
stos
mov
pop
mov
pop
jmp
insb
xor
shl
daa
sbb
and
rorl
fdivl
xor
cwtl
xchg
push
addl
lret
loopne
scas
jo
out
inc
les
lods
fld
mov
add
mov
cmp
mov
sbb
popf
arpl
ss
sub
push
xor
ror
test
ss
inc
inc
lock
js
shr
mov
daa
aaa
sarb
js
pop
mov
repz
mov
push
xor
and
in
mul
rcrb
lret
push
pusha
push
jle
enter
or
mov
jle
sbb
jno
inc
sar
jns
dec
ret
into
xchg
imul
xlat
dec
inc
hlt
adc
add
pop
mov
outsl
or
adc
sub
mov
sbb
popa
adc
fidivs
push
lods
xchg
call
std
mov
pop
dec
mov
cmp
mov
lret
mov
pop
inc
dec
fildl
push
add
out
push
addr16
daa
test
arpl
clc
inc
add
movsb
jle
iret
es
shlb
sbb
mov
add
jne
inc
and
push
cmpsl
in
sahf
lret
pop
or
cwtl
jle
daa
and
jo
rorl
inc
fbstp
test
lods
fyl2xp1
scas
ja
movsb
call
pop
fisubl
and
dec
cmp
je
push
sbb
sbb
js
imul
into
inc
or
mov
sub
lahf
cmp
mov
push
fcomi
dec
push
cwtl
cmpsb
stos
push
xor
aam
pop
mov
in
or
push
fistps
dec
mov
sub
stc
incb
xchg
xor
mov
or
adc
popf
shr
ds
mov
inc
lcall
pop
in
out
clc
ret
push
cmp
inc
pop
lret
or
lret
cmp
ja
mov
stos
jp
jae
scas
dec
rclb
ret
push
push
push
mov
daa
jne
fistpl
pop
divb
push
aas
pop
pop
adc
scas
cmpsl
psubd
sbb
subl
xor
ljmp
hlt
imulb
sbb
mov
fstl
into
fisttpl
addr16
fstps
pop
adc
inc
sub
dec
addb
mov
popa
add
push
shrl
enter
cmp
jno
incb
add
int3
inc
xor
sub
jns
dec
cmp
jb
jmp
popf
push
jb
mov
fwait
ds
insb
inc
inc
xor
jmp
cmpb
xchg
and
lahf
into
in
mov
push
mov
sub
sub
mov
mov
ljmp
mov
pop
aaa
divl
and
mov
or
dec
repz
sti
add
add
jge
xchg
xchg
cltd
add
clc
repz
mov
rcrl
and
xchg
stos
in
mov
pop
jg
leave
fs
jae
lock
mov
mov
and
inc
or
in
lds
xor
mov
mov
iret
stos
out
fbld
add
add
pop
push
push
fstps
mov
jnp
inc
scas
xchg
test
and
cmp
mov
sahf
fadds
iret
ja
pop
cli
jle
es
mov
imul
inc
gs
push
aas
jne
gs
lret
or
sbb
mov
mov
lahf
and
mov
and
cmp
outsl
cld
pushf
roll
icebp
push
push
ret
mov
out
aaa
jnp
or
adc
push
add
aas
std
inc
push
lahf
flds
popf
fs
loope
adc
jecxz
scas
insb
cmp
jle
mov
int
popf
mov
lds
das
inc
test
lcall
push
lock
cmc
xchg
test
or
in
lahf
push
mov
add
test
rol
mov
dec
jp
es
dec
lea
aaa
fwait
stc
hlt
sbbl
xor
or
push
xor
insb
leave
arpl
mov
mov
push
fstp
iret
cwtl
out
sbb
scas
mov
ret
xor
mov
and
dec
add
sub
stc
and
shll
cmp
lods
adc
out
xor
pop
dec
adc
push
repz
cmp
imul
stc
or
sub
mov
leave
jae
lret
sub
jle
jnp
pop
xor
adc
loope
and
sbb
pop
into
mov
xchg
xchg
sub
je
add
shl
test
leave
sbb
mov
imul
xchg
lea
mov
negb
mov
andl
mov
fistps
sar
mov
mov
int
pop
sarb
inc
into
xchg
sahf
xlat
mov
dec
rep
push
mov
mov
push
push
mov
shlb
push
dec
loopne
out
call
or
xor
pop
je
xor
add
mov
test
mov
inc
xchg
sbb
add
std
cmpsl
mov
sub
jo
ficompl
cmc
push
enter
sub
out
and
lds
inc
sbb
movsb
pusha
in
pop
mov
out
mov
cld
cmp
popf
fstpl
sbb
out
mov
inc
inc
es
arpl
or
sbb
dec
sub
ljmp
movsb
sub
or
lock
int
mov
xchg
sub
ds
adc
mull
push
xchg
sbb
xor
out
testb
add
cltd
push
adc
leave
xchg
sbb
inc
in
inc
repz
arpl
inc
cmpsl
xchg
enter
fs
mov
xchg
add
mov
in
in
outsl
dec
std
mov
pop
dec
cltd
mov
test
test
mov
test
call
enter
pop
xchg
int
xor
stos
ficomps
lea
mov
pop
imul
popl
repz
cltd
inc
les
imul
or
adc
pop
xchg
jns
outsl
sahf
or
aaa
lods
jbe
loopne
scas
cmp
out
sbb
or
outsb
xchg
or
jl
cmp
fstps
jb
and
xor
xchg
aam
in
ljmp
pop
sbb
repnz
cmp
push
mov
lcall
mov
outsl
cwtl
push
push
and
xor
jno
lea
repnz
or
es
test
int
sub
int3
int
or
mov
adc
jne
xchg
and
arpl
shrl
sarb
mov
fs
cld
xor
rcll
mov
and
mov
addr16
mov
loopne
push
push
pop
int3
in
cmp
add
fimuls
push
push
sub
pop
adc
ds
movsl
popa
aam
mov
pop
mov
sub
or
xchg
jno
pop
je
xor
sub
insl
cmp
mov
inc
dec
icebp
ja
xchg
sar
lock
adcl
and
sub
imul
inc
sbb
mov
pop
push
ret
mov
inc
lds
lahf
xchg
test
or
scas
rcll
jbe
adc
int
dec
cltd
pop
jo
inc
mov
jle
or
rcrb
icebp
and
stos
popf
jmp
scas
scas
mov
and
push
mov
inc
jno
lret
popa
xchg
cmp
jl
or
push
shll
jnp
outsl
xchg
cmp
xchg
aad
iret
xchg
ret
mov
test
dec
adc
push
adc
lea
xchg
mov
xchg
movsl
lret
cld
lret
pop
imul
pop
mov
mov
and
in
stc
xor
mov
or
inc
dec
push
dec
subl
dec
shll
loop
repz
insl
lods
inc
js
mov
and
mov
mov
sahf
int3
lcall
lods
ret
jg
xchg
imul
cmp
add
mov
xchg
lret
sarl
icebp
mov
cmp
fmul
popf
ljmp
cmc
adc
stc
adc
jmp
ss
and
mov
push
xor
jecxz
pushf
adc
dec
xrelease
xchg
pop
pop
cmp
arpl
fadds
push
popa
cwtl
fdiv
xlat
mov
jl
sub
inc
jnp
mov
lcall
movsb
and
popa
adc
or
mov
lahf
jmp
das
out
repz
cmpl
push
and
mov
push
cmp
mov
test
dec
shl
pop
push
imul
mov
xchg
inc
int
inc
mov
inc
push
imul
fdivrl
xor
leave
loopne
cmp
mov
movsl
js
mov
sbb
push
aad
loopne
push
rolb
sub
mov
fsubrl
je
std
ss
nop
loopne
ret
call
inc
mov
cmp
mov
in
insb
shr
or
aam
rorb
lret
loopnew
adc
dec
push
loopne
xchg
test
mov
dec
sub
sbb
jge
xchg
xlat
or
loop
adc
cmp
sbb
leave
loope
push
idivb
sar
mov
lret
in
dec
test
fwait
int3
jmp
dec
imul
out
pop
xor
aas
leave
lahf
aas
add
xchg
push
sarl
and
inc
sti
rcrb
enter
lahf
repz
sahf
inc
icebp
lock
xlat
push
popf
push
paddusb
sub
add
cs
inc
pop
inc
aad
test
mov
sub
dec
inc
sub
mov
sbb
or
testb
cwtl
movsb
ss
and
loop
cmc
daa
fsubrs
aas
aad
dec
xchg
xor
mov
divb
test
sub
movl
adc
inc
jnp
shrb
nop
mov
int
add
mov
adc
push
fadds
out
je
lahf
movsl
jle
roll
pop
jo
iret
pop
aam
call
sbb
xchg
ficoml
jnp
iret
mov
lahf
leave
or
mov
and
pusha
test
mov
into
ret
push
out
add
mov
or
je
or
pushf
mov
xor
ljmp
inc
cli
lret
dec
push
lahf
lods
mov
icebp
sbb
lds
lret
aas
mov
sub
dec
scas
stos
mov
jae
mov
mov
addb
mov
sahf
test
cmp
or
sub
lret
cmp
pushf
jmp
xchg
inc
push
inc
pop
popf
test
movsb
cmp
jge
enter
sub
outsl
inc
mov
mov
push
scas
mov
or
inc
fdivr
stos
mov
dec
mov
xchg
imul
mov
mov
sub
repz
xor
pop
mov
jmp
int
jno
xor
sbb
ljmp
push
inc
push
jns
mov
sub
dec
mov
add
dec
fists
jmp
inc
hlt
sbb
sbb
lcall
popf
mov
aad
imul
out
movsl
cld
and
or
mov
jp
xchg
adc
push
daa
dec
les
adc
mov
adc
mov
and
jns
mov
gs
fstpl
sahf
xor
in
or
frstor
inc
dec
inc
sbb
imul
mov
and
into
in
lahf
imul
push
or
sti
andb
aas
mov
je
lock
test
push
cmp
jnp
mov
imul
shll
mov
daa
sub
ret
lret
and
xchg
sbb
mov
sbb
lds
pop
cli
roll
pusha
mov
inc
imul
push
xchg
loop
aas
sbb
adc
mov
mov
aaa
fst
xor
mov
pushf
inc
pop
mov
je
mov
push
pusha
dec
xor
cld
test
fimuls
inc
test
adc
lods
mov
pop
fcmove
cmpsb
xor
xor
popf
sub
je
adc
ss
adc
or
push
sbb
mov
mov
divl
call
xor
cmc
jno
test
aad
cmp
add
les
xchg
or
and
sub
and
iret
inc
ja
dec
mov
insb
test
sub
stc
stos
std
shrl
insb
out
push
add
movsl
addl
xor
lahf
xor
frstor
mov
mov
adc
adc
clc
xchg
mov
and
popf
stos
aad
stos
xchg
ffreep
xchg
ficompl
and
loope
sbb
insb
or
mov
jl
xchg
mov
adc
das
sub
lods
cltd
outsl
jmp
in
je
addr16
push
push
inc
mov
jo
or
and
gs
xchg
add
mov
push
and
insl
or
cs
aad
dec
adc
ss
adc
stos
fisubrs
cmp
das
sbb
xor
enter
scas
jno
lahf
testb
and
pop
aam
add
jp
push
mov
mov
jmp
insb
dec
mov
adc
or
mov
pop
pop
sbbb
add
in
jle
xor
scas
es
std
test
loopne
jle
xor
and
mov
bound
call
jns
jge
dec
fimuls
dec
mov
push
sub
test
popf
sti
inc
xor
adc
adc
movsb
test
pop
xchg
out
out
jno
xchg
adc
out
cmc
and
jl
movsb
add
push
hlt
std
or
mov
sub
pushf
loope
test
xor
push
jle
shrd
cmp
ss
stos
movsl
cmp
scas
dec
adc
pop
adc
jge
mov
and
push
bswap
inc
dec
popf
lods
decb
xor
shrb
lea
adc
xchg
dec
in
jmp
orl
sahf
imul
jb
loope
lret
and
in
push
adc
dec
pop
jnp
test
neg
nop
sbb
lret
aaa
adc
mov
jb
or
or
andl
jp
push
out
fcomi
inc
shll
xlat
push
daa
subl
dec
js
cmpl
push
pop
out
rolb
mov
lret
push
icebp
lret
inc
adc
rcrb
and
jo
pop
lods
sbb
js
ret
xchg
outsb
mov
adc
push
out
dec
add
gs
mov
inc
pop
insb
cwtl
xchg
pop
imul
pop
xor
or
push
nop
dec
test
mov
jo
cmp
mov
in
int3
daa
mov
setae
push
int
mov
push
pusha
dec
dec
inc
xchg
nop
xchg
fdivp
pop
outsb
inc
neg
sub
dec
or
push
call
into
cmp
es
pop
push
stos
subl
push
jmp
dec
inc
jb
and
popl
arpl
xor
mov
pop
out
push
jge
mov
adc
cli
stc
push
lea
and
inc
pusha
dec
xor
daa
out
fsubr
jbe
mov
lret
inc
insl
mov
or
dec
push
jg
jmp
fidivrl
mov
push
pop
imul
aas
sub
stc
push
cltd
in
aam
ljmp
cli
push
and
mov
or
fwait
lds
or
cmc
push
xchg
sbb
cmp
add
adc
js
jle
pop
jl
popf
sub
mov
in
jae
std
adc
cmpsl
jg
push
sbb
xchg
push
push
fwait
jle
pop
cwtl
cld
xchg
jp
xchg
mov
sub
mov
cmp
xchg
insl
subl
cltd
xor
push
insl
sbb
cmp
xor
leave
in
mov
xor
cmp
inc
sub
enter
mov
das
or
negl
addb
aam
pop
loopne
xchg
outsb
cmc
dec
jne
lds
xchg
xchg
and
divl
scas
sbb
popa
inc
insl
jbe
pushf
sub
rcr
aas
push
push
sub
jae
dec
stc
mov
aam
jmp
mov
xchg
push
outsl
cmpsb
mov
inc
cmpsb
mov
lods
sbb
xchg
jg
cwtl
movq
add
xor
rorb
jns
adc
stos
fs
mov
xchg
jbe
popa
cmpsl
nop
or
mov
ret
loop
xlat
inc
arpl
dec
xlat
mov
mov
jno
rcrl
inc
mov
sbb
jl
scas
mov
xchg
ss
mov
mov
sti
xchg
std
add
mov
aad
jle
mov
mov
notl
add
pop
test
xchg
lret
frstor
and
xchg
rcl
mov
inc
aaa
pop
into
repnz
adc
sahf
lret
xchg
xlat
push
jp
or
icebp
jge
add
mov
repnz
lods
repz
push
lods
push
rorl
sub
mov
dec
fdivl
loope
cmpsl
pop
js
test
daa
xchg
mov
ljmp
jecxz
and
test
inc
and
pusha
mov
mov
xor
dec
arpl
lds
fwait
packuswb
out
jb
mov
fsubrl
add
xor
stc
push
pushw
fistps
adc
loop
pop
push
cwtl
jne
add
inc
mov
shlb
test
sbb
test
mov
ror
mov
push
dec
ljmp
stos
xor
lods
dec
loop
inc
jmp
adc
inc
pop
xchg
adc
or
sub
cmp
ror
inc
xchg
lret
test
sub
cmp
pop
xchg
ds
push
stos
and
call
imul
inc
push
insb
pushw
add
cmpsb
mov
inc
jmp
out
sbb
lahf
test
push
push
movsl
lods
xchg
call
mov
adc
pop
cmp
mov
push
push
enter
test
inc
stos
mov
jo
xchg
aaa
jl
repnz
add
cs
mov
int3
xor
adc
cltd
lret
jno
movsl
and
sbb
cmp
je
mov
pop
sbb
loope
mov
out
ror
sbb
das
mov
sub
cmp
add
pop
jb
rorb
or
mov
dec
cmp
out
mov
push
pusha
cld
stc
pcmpeqd
gs
cmp
mov
mov
jns
call
mov
mov
sub
adc
pop
jecxz
or
pop
lret
or
leave
xor
add
cwtl
fwait
dec
test
mov
lds
gs
xor
mov
pop
or
jb
ret
ds
jl
push
push
mov
inc
xor
adc
loopne
xor
repz
jne
mov
push
ljmp
fcoml
mov
xchg
add
rcl
mov
sbb
and
arpl
ret
pop
jne
xchg
mov
aam
or
out
adc
sbb
test
mov
into
xchg
into
mov
orb
loope
ret
lods
or
or
mov
aam
out
push
jnp
jmp
scas
adc
pusha
lods
aam
cld
or
and
cmc
int3
mov
push
jbe
mov
sub
std
sub
movsl
jp
pop
or
push
lahf
add
in
mov
push
xor
sub
jle
movsl
push
adcl
lcall
xchg
jmp
stc
and
bound
dec
push
daa
shl
or
sbbl
stc
xchg
dec
pop
insl
prefetcht0
repz
sbb
sub
add
lahf
fwait
jbe
push
sbb
pop
fldenv
pop
enter
sub
test
add
dec
or
xlat
and
xor
cmp
push
leave
mov
sbb
lcall
dec
repnz
mov
in
aas
inc
mov
insb
xchg
loop
add
mov
add
movsl
jl
in
gs
mov
or
jle
mov
mov
addl
mov
jns
int3
cltd
mov
sbb
lods
push
jno
repz
add
out
es
rclb
xchg
insl
test
mov
mov
jmp
jl
inc
jecxz
out
cmp
and
or
ja
cmp
inc
ljmp
cwtl
inc
jbe
mov
fldt
mov
push
into
push
icebp
xchg
lods
lods
mov
aad
cmpsl
sub
push
leave
dec
mov
mov
test
xchg
mov
xchg
lods
dec
push
pushf
mov
xorb
addb
fimuls
jle
test
xorb
ficoml
sub
pushf
adc
cmp
fwait
repz
push
repz
jne
xchg
pop
cld
mov
in
push
mov
orb
and
lahf
cmp
notb
test
jecxz
inc
leave
jmp
mov
push
loop
sbb
adc
icebp
mov
cmp
sti
cmp
jae
sbb
lret
out
popa
mov
or
xchg
pop
rorl
inc
lods
xchg
sbb
pop
mov
xchg
jecxz
sbb
xor
push
enter
and
jbe
mov
adc
xchg
shlb
jmp
jae
xchg
or
fistpll
adc
in
lods
sbb
cmc
push
add
sub
lret
push
xor
xchg
scas
hlt
sbb
arpl
push
jg
cmpsb
push
cli
pop
sub
mov
and
imul
xor
mov
pop
mov
pop
and
xchg
divb
push
sbb
clc
add
andb
in
dec
imul
sbb
scas
mov
push
insb
leave
add
push
jo
bound
or
adc
sub
xchg
mov
arpl
and
jle
negb
ja
bound
sub
imul
in
cmpsb
adc
adc
add
jp
mov
sbb
xchg
shlb
aam
inc
in
pop
sub
scas
clc
xchg
clc
cmc
inc
dec
shrl
cmp
cmc
in
mov
pushf
jno
adc
loope
push
stos
jle
push
pop
hlt
xlat
bound
push
push
addl
pop
fistl
mov
cmc
jno
mov
clc
outsl
cmp
dec
inc
mov
lret
pop
dec
nop
pop
xchg
fisubl
mov
push
push
mov
ret
test
sub
dec
pop
pop
insl
xchg
aaa
ds
int3
aam
testb
xchg
cmp
in
int
mov
mov
add
sti
mov
in
aas
mov
imul
xchg
xchg
mov
dec
mov
push
outsb
sub
pop
push
std
cli
fbstp
mov
dec
mov
jl
ss
enter
hlt
push
data16
jmp
sub
jno
mov
orb
mov
and
pop
xchg
pop
inc
sbb
lock
push
sub
lahf
sbb
ret
imulb
mov
lds
mov
xchg
jmp
xchg
lret
mov
mov
mov
pop
inc
add
jno
or
xor
sti
insl
xchg
adc
fs
mov
popf
mov
in
ja
jns
mov
mov
int
lods
jno
jbe
shr
or
insl
xchg
cli
push
ds
inc
bnd
fsubrl
mov
and
into
add
cltd
out
outsl
lret
jae
lods
add
mov
lock
and
pop
aam
enter
insb
xchg
xchg
shrb
mov
je
ljmp
mov
test
push
sbb
pop
mov
mov
arpl
fmull
sbb
sbb
stos
xor
jecxz
lahf
pop
xchg
popa
iret
gs
mov
lods
aam
negb
mulb
stos
pusha
lds
or
ljmp
sar
and
cld
jg
jecxz
mov
pop
cld
mov
mov
jmp
mov
imul
js
shr
dec
sbb
clc
sub
sbb
add
inc
xchg
in
movsb
insb
inc
add
mov
push
iret
and
icebp
cmp
insl
je
mov
inc
dec
loopne
and
cmpb
xchg
xchg
mov
mov
mov
inc
dec
in
sub
pop
mov
mul
dec
shr
mov
out
notl
adc
movsl
loopne
sub
lcall
xor
sub
jb
mov
xchg
inc
push
fnsave
xchg
xlat
pop
xchg
fisubs
repnz
push
mov
xchg
or
pop
outsb
mov
mov
fnstsw
jmp
push
js
push
mov
and
lea
cwtl
dec
sti
daa
aas
fwait
cmp
xor
testb
dec
push
jg
mov
dec
jbe
jecxz
adc
pop
les
mov
jo
arpl
sbbb
je
addr16
loope
cmp
adc
ljmp
lds
rcr
loope
sub
mov
icebp
jns
fs
xchg
ja
fcomps
cmp
ret
es
xchg
sbb
pop
imul
sub
lret
lods
stos
cwtl
test
dec
or
inc
leave
loope
mov
shl
mov
or
add
or
cld
mov
fwait
mov
or
sub
jbe
fcmovbe
sub
jmp
jle
daa
outsb
sbb
mov
lahf
sub
cmp
test
and
dec
add
std
dec
outsl
out
testb
insb
lods
pop
clc
loopne
andb
mov
enter
cwtl
out
dec
adc
popf
pop
push
cwtl
lds
shr
sbb
icebp
cmp
nop
mov
clc
sbb
in
loopne
loope
call
test
pop
mov
dec
push
popl
sub
aaa
xor
lcall
push
push
repz
lods
test
or
xchg
jns
mov
sahf
jae
mov
sub
test
jle
adc
test
jo
gs
jnp
je
mov
into
inc
pushf
fidivrs
bound
not
loope
test
lcall
out
test
mov
add
cwtl
loope
loop
mov
aad
adc
ja
outsb
xor
dec
xchg
pop
stos
dec
sub
cmpsl
scas
sbbl
arpl
negl
repnz
ds
cmc
sub
dec
ret
rol
push
xchg
loope
fisubrl
inc
in
sbb
lds
push
sbb
mov
decb
cmp
xor
adc
xor
test
lcall
lds
push
into
mov
mov
js
xor
add
add
pop
xchg
addr16
lret
lock
push
pusha
popf
js
mov
mov
in
arpl
mov
xchg
ljmp
mov
sahf
inc
lds
mov
in
aam
cmp
repz
faddl
and
mov
mov
add
jne
inc
out
mov
mov
cwtl
sub
mov
cld
adc
inc
cli
stos
inc
jo
lods
ss
in
dec
ja
out
cs
sbb
xor
aaa
stc
leave
mov
enter
lods
mov
adc
pop
sbb
pushf
daa
add
call
push
inc
jge
cmp
dec
repz
dec
ja
pop
jg
test
mov
jl
sbb
dec
mov
push
data16
xchg
xor
imulb
xchg
pop
sub
inc
push
cli
inc
cmpsl
mov
icebp
and
push
jo
in
ss
pop
and
jno
mov
fmuls
repnz
jns
cwtl
add
mov
lods
sar
mov
jns
xchg
testb
adc
lea
test
cmp
jle
mov
xor
jbe
pop
xchg
stos
and
mov
jle
test
orb
ffreep
sti
dec
pop
mov
jle
test
ds
pushf
push
sub
mov
mov
mov
mov
test
mov
mov
sti
fcomps
lahf
loope
filds
inc
test
adc
lds
add
xor
and
dec
fcomp
cltd
mov
in
mov
sti
lcall
leave
jnp
pop
lret
add
jns
adc
sub
xchg
mov
mov
mov
fcomps
mov
jns
iret
int3
stos
leave
jecxz
mov
inc
jb
and
rorb
outsb
mov
in
scas
pusha
push
imul
rcrb
sub
jne
jmp
jge
fcmovb
rorl
xor
pushf
sub
int3
aam
push
sub
xchg
out
push
and
jns
shll
idivb
mov
imul
ffree
xor
and
and
in
cmp
ds
cmp
repz
ficompl
rcll
jno
jecxz
filds
mov
mov
mov
and
repz
adc
xor
movsl
xchg
in
ljmp
sbb
cmp
stos
jnp
in
shrb
orb
and
dec
stos
push
pusha
jnp
clc
jnp
inc
clc
fcoms
popa
adc
push
adc
fimull
mov
test
jae
cmpsl
arpl
addr16
add
lcall
lret
fabs
jp
iret
or
adc
lds
mov
jl
cmc
pop
or
mov
gs
add
cmp
cld
jmp
pop
xchg
mov
pushf
xor
and
mov
scas
fsubs
cmpl
std
xchg
mov
popa
xor
xor
add
mov
cmpsl
sbb
loopne
xor
xor
dec
inc
push
xor
push
pop
sub
les
mov
inc
sahf
adc
fisttps
adc
cmc
repz
pop
ss
push
adc
lret
mov
mov
jnp
xor
add
clc
push
sbbl
fmuls
cmp
lods
and
push
cmp
mov
pop
arpl
adc
push
fcompl
pop
popa
outsl
aam
stos
sub
xchg
fidivl
pop
mov
xor
mov
inc
cmp
push
arpl
cmovno
pop
xor
adc
mov
cmp
rcll
push
ss
push
ds
inc
mov
mov
add
jg
lcall
lret
sub
mov
es
lahf
sarl
es
and
push
ret
cli
movq
dec
shrl
push
test
mov
fsts
aad
jnp
add
out
mov
lock
in
fsubrs
xor
and
cmp
dec
sarb
dec
inc
sbb
pop
fstpl
loope,pt
xor
popa
push
movsl
fmull
imul
or
scas
mov
cmp
mov
imul
inc
out
das
test
cmp
movsb
push
pop
inc
dec
mov
mov
lret
flds
adc
sti
scas
adcb
movsl
and
jne
int3
fstl
jae
mov
rolb
movntq
mov
leave
fistpl
int3
addl
inc
cmpsl
imul
xlat
add
hlt
xchg
add
pop
js
xor
inc
lds
xchg
or
pop
jne
call
mov
lock
aaa
and
fmulp
mov
ds
ja
jecxz
lcall
pop
inc
iret
stos
xchg
mov
mov
popa
push
sti
mov
pop
fdivrl
inc
mov
insl
into
xchg
lcall
xchg
fldcw
repz
rorb
inc
orl
sbb
hlt
adc
jbe
rolb
sahf
pop
push
mov
fwait
aad
test
push
scas
sub
mov
xor
push
push
stos
into
sub
xor
test
clc
loop
ljmp
dec
fimuls
add
decl
jl
mov
sub
push
ret
and
icebp
inc
mov
jae
add
pop
int
lret
enter
jl
insl
in
shrb
lds
jge
insb
adc
addr16
fwait
push
int
push
dec
mov
push
js
sahf
cmpsl
adc
ret
mov
clc
push
push
out
loop
xchg
adc
cli
sbb
and
leave
mov
push
loope
sbb
or
ficomps
lcall
pop
push
mov
loop
and
push
shr
inc
lret
xchg
cpuid
mov
sbb
inc
mov
rclb
fwait
cmp
leave
mov
push
sub
clc
xor
imul
add
and
sti
nop
mov
sahf
dec
popf
sub
sbb
jns
insl
mov
repnz
into
and
pop
mov
push
sti
cmp
xor
and
sbb
insb
xor
adcb
lea
add
sub
cmc
mov
cwtl
dec
orl
mov
int
les
movsb
push
outsb
clc
mov
push
imul
ret
sbb
mov
jo
sbb
call
sarl
pop
out
movsb
adc
bound
aas
adcb
or
test
mov
hlt
mov
stos
xchg
mov
xchg
cmp
inc
sahf
mov
fnstsw
sbb
xor
neg
test
mov
mov
mov
xor
test
pushf
push
nop
fadds
outsl
mov
loopne
push
dec
ss
inc
push
div
push
lea
lock
lahf
adc
cmpsl
out
cmp
push
mov
sub
test
divb
repnz
jg
fistps
test
mov
arpl
sub
addr16
or
icebp
and
mov
repnz
xchg
push
lret
clc
lcall
or
popa
push
cmp
sarb
repnz
addr16
cmp
adc
fcmovnb
cli
fisubs
sbb
pop
adc
xor
out
or
outsb
or
or
dec
jo
jecxz
sub
xchg
push
jg
cld
sbb
mov
aam
push
sti
xchg
sti
rcrb
pop
in
mov
mov
das
scas
lock
xorb
add
icebp
nop
push
das
shrl
mov
daa
mov
sbb
xor
repz
xchg
lock
insl
cmp
insl
xchg
jge
mov
divl
push
testl
scas
sbb
mov
mov
pop
xchg
sub
outsb
repnz
add
inc
jl
in
fildll
outsb
scas
iret
aaa
fidivrs
sub
inc
test
rclb
insl
cmp
sti
je
cmp
jnp
aad
xchg
hlt
mov
mov
pop
mov
ja
nop
cmp
cwtl
pop
adc
inc
pop
mov
cmp
inc
sub
jo
dec
xor
inc
jmp
iret
xchg
popl
jecxz
mov
dec
daa
out
jl
pop
jne
in
xor
jg
test
mov
arpl
shll
shr
jno
inc
jno
stc
pop
push
loopne
mov
jb
popa
loop
push
jb
out
lods
orl
jmp
cs
cmp
lock
xchg
xor
jbe
ds
repnz
push
imulb
fld
pop
lods
in
icebp
es
fucomip
mov
repz
shlb
in
mov
lret
insl
addl
lcall
or
xlat
jae
cmp
frstor
cmp
popf
test
xchg
mov
hlt
movsb
or
jg
outsb
or
fwait
xchg
or
lret
inc
mov
or
mov
test
jbe
stos
imul
sbb
mov
mov
aas
jp
lock
mov
in
adc
sbb
xchg
push
arpl
lods
lret
jmp
or
xlat
imul
cltd
inc
adc
cld
xor
nop
aas
mov
lods
pop
lret
mov
xchg
or
inc
cmp
popf
sbb
sbb
mov
push
ret
gs
push
js
adc
fisubrs
and
ret
add
into
dec
mov
clc
push
lock
inc
cwtl
out
push
sub
dec
adc
js
mov
sbb
pop
cmp
jecxz
pop
pop
and
arpl
fcomps
and
outsb
sarb
mov
sub
gs
sarb
int3
mov
adc
jae
std
lret
ret
mov
ja
rcll
lods
adc
inc
dec
jge
rcll
jecxz
fistps
xor
jo
sbb
cmp
je
subb
scas
jge
cmp
pop
mov
inc
xchg
mov
out
and
imul
jmp
xcrypt-cbc
cmpsl
add
fists
pop
xor
or
xchg
and
mov
push
xor
adc
pop
in
andl
cld
daa
out
xchg
add
mov
adc
fimuls
divb
out
inc
ret
adc
movsb
dec
nop
add
inc
dec
shll
mov
fcoml
loop
dec
popf
adc
push
ds
sub
daa
mov
repnz
and
cmp
icebp
stos
leave
pop
push
mov
mov
and
daa
adc
xchg
ret
push
or
pop
or
ja
sahf
and
cmpsb
dec
js
jo
mov
xlat
dec
mov
js
addl
mov
pushf
inc
outsb
pusha
stos
mov
ret
inc
orb
ret
pushf
out
popf
es
nop
lcall
pop
jl
mov
mov
sbb
inc
repnz
fcoms
inc
and
loop
mov
je
lock
adc
aam
mov
lcall
insl
and
and
fisttps
lods
mov
pusha
into
nop
add
insl
repz
push
push
adc
in
cmc
adc
push
push
add
add
cmc
or
xchg
fsubrs
jg
in
push
xor
gs
pop
adcl
fsubrl
bound
xlat
sbb
pop
jg
jae
add
adc
imul
lock
lods
xor
ss
mov
add
mov
mov
setae
mov
pushl
fstl
pop
jne
lahf
ficoml
fisubrs
xor
sub
mov
sbb
std
daa
xchg
jmp
ss
mov
sub
adc
jno
sbb
loopne
loopne
mov
adc
xor
xchg
sub
in
scas
xor
sub
loope
mov
dec
lret
orb
and
inc
pop
cli
pop
mov
jp
cmc
shr
jecxz
ret
push
outsb
xchg
ret
hlt
add
or
adc
xor
outsl
out
push
sbb
jae
mov
inc
imul
pusha
push
add
es
mov
and
push
lods
das
inc
imul
add
push
int3
dec
je
mov
pop
outsb
or
repz
mov
bound
int3
cmp
aad
lods
inc
or
in
inc
xchg
push
adc
sub
cmc
pop
filds
mov
or
shlb
movsb
xchg
in
push
shlb
xchg
arpl
mov
fsubl
inc
mov
xlat
xor
scas
pop
popa
push
rdtsc
adc
sbb
mov
push
insb
dec
add
insb
add
xorl
out
rolb
xor
xchg
jg
mov
into
push
pop
xor
fisubl
mov
inc
inc
addl
fs
sub
shll
pop
push
sub
test
mov
jecxz
aas
mov
divl
xor
mov
aad
pop
loop
add
enter
std
mov
int
sub
aas
xchg
mov
pop
push
sbb
add
shl
dec
lret
mov
sbbl
arpl
mov
iret
pop
push
or
adc
mov
pop
jne
nop
pop
pop
dec
mov
or
in
dec
sub
sub
rolb
inc
xchg
push
pop
inc
push
mov
lahf
dec
mov
lea
shll
mov
xor
cmp
sbb
fsubs
and
mov
outsb
xor
sbb
filds
cmpsb
shll
push
test
sti
pop
add
lods
cmpl
aad
out
fmull
sbb
dec
or
push
arpl
xchg
icebp
popf
sar
dec
push
cli
jl
jne
push
and
fadd
and
cmp
lahf
push
mov
push
or
and
push
pop
jo
push
mov
dec
cli
push
fbld
adc
sbb
imul
in
mov
test
xchg
lods
pop
or
or
push
dec
shlb
lret
dec
mov
mov
sub
ss
movsl
jl
adc
ljmp
inc
mov
cs
adc
push
arpl
insl
sarl
addr16
ret
call
or
mov
and
lret
and
lcall
sbbl
jb
inc
add
xchg
ret
repz
test
mov
jle
fmuls
mov
scas
mov
outsb
adc
fsubp
xor
stos
jp
neg
mov
imulb
sti
les
fdivs
and
popf
xchg
movsb
push
repnz
mov
dec
shll
lahf
xchg
sbb
lcall
jae
fcoms
bound
data16
and
adc
in
xorl
sbb
and
nop
push
xor
or
mov
ss
cmpsb
rorl
call
or
data16
cmpsb
cltd
cmp
mov
outsl
inc
sbb
ja
add
inc
das
pop
lea
arpl
cld
loop
nop
ja
je
into
adc
cmp
push
sbb
push
js
dec
aam
pop
sbb
mov
jp
push
mov
mov
or
movsb
es
cmp
pop
mov
jnp
cwtl
push
xchg
lods
lds
adc
aad
jne
cmp
inc
and
cmc
fcomps
mov
cmp
repnz
addr16
pushf
enter
cmpsb
or
rcrl
or
mov
push
jmp
enter
nop
cmpsb
repz
add
je
sahf
mov
inc
rcr
sbbb
movsb
loope
mov
enter
push
mov
xlat
lods
and
sbb
sbb
pusha
arpl
lcall
xchg
pop
mov
jge
adc
cltd
es
jl
jl
stos
sub
cmp
dec
dec
jmp
mov
adc
pusha
lea
lods
jg
faddl
adc
inc
ss
adc
lods
int
sub
jnp
cmp
popa
fisubs
sub
call
sbb
sub
outsb
lcall
cmp
lcall
push
insl
rolb
ret
rcrl
pop
add
mov
dec
cmpsl
xchg
aaa
push
iret
pop
xchg
or
mov
or
mov
ljmp
lds
in
mov
sub
and
loope
test
loope
push
cmp
je
adc
rorl
or
and
repz
lahf
mov
push
shr
ret
xchg
add
nop
jae
bound
sub
add
arpl
or
push
add
cmp
push
scas
cli
mov
popf
inc
cli
dec
out
les
add
jge
push
adc
dec
jl
cmp
mov
mov
inc
call
mov
js
and
inc
inc
pushf
sahf
fidivl
inc
cmc
stos
lds
in
push
loope
mov
cmp
mov
data16
cmp
rol
and
cs
jp
jnp
imul
mov
je
hlt
ljmp
negb
in
sbb
jne
ret
daa
push
adc
dec
out
aas
sbb
push
xor
lock
mov
mov
dec
out
adc
sbb
pop
std
sbb
or
xor
jle
mov
jmp
mov
xchg
jecxz
lods
ja
lret
dec
and
stos
jno
lret
jb
aas
push
lcall
adc
add
pop
xor
lods
movsb
lods
repnz
negl
sbb
cmp
or
jmp
and
pop
outsb
dec
xchg
push
lret
arpl
cwtl
cmp
jp
outsb
push
pop
mov
iret
mov
je
and
inc
add
cltd
mov
repnz
call
mov
sbb
rcl
incb
sub
jmp
push
mov
iret
cmp
jne
inc
mov
and
js
and
sti
mov
pop
xor
mov
popa
sub
shl
shll
mov
adc
adc
push
add
sub
jl
cltd
cs
xchg
mov
and
jno
adc
sub
inc
and
cmp
mov
xlat
jno
out
pusha
jp
add
jb
mov
leave
adc
loope
rdtsc
aas
sub
in
test
adc
ss
es
sub
xchg
mov
repz
in
shlb
mov
xor
cmpsl
or
movsb
stos
mov
cmp
cwtl
dec
dec
or
lret
xor
aam
mov
out
rclb
jne
jg
inc
mov
push
lcall
pop
jmp
mov
sahf
jnp
jb
arpl
pushf
fmull
mov
aad
cltd
out
cld
scas
xchg
pop
test
leave
fmuls
jg
enter
into
add
dec
mov
out
adc
les
cmp
cmpl
mov
aaa
dec
sbbl
add
inc
cmp
push
jnp
mov
push
movsl
push
add
lods
hlt
insb
stos
jp
and
mov
lcall
aad
aam
out
pop
mov
sub
jno
jge
aaa
nop
push
or
jne
fcoml
xor
mov
das
lock
scas
scas
ficoml
js
mov
aaa
int3
push
mov
jb
pop
pop
popa
nop
push
or
das
aaa
mov
test
mov
xchg
pop
cmp
ret
inc
push
push
mov
das
loop
and
addr16
repnz
push
mov
aad
cmc
test
sahf
cs
push
stos
pusha
xor
lahf
int
cmp
js
daa
mov
or
gs
pop
mov
loop
ss
das
int
scas
mov
out
push
mov
xchg
cmp
pop
sub
xchg
mov
jnp
sti
push
sbbl
push
mov
cmc
rcrb
adc
iret
xchg
dec
insl
pop
xchg
push
mov
jo
mov
lahf
aaa
ret
jae
aad
mov
mov
int3
in
adc
dec
std
mov
add
in
or
insl
lds
lock
inc
call
stc
mov
subb
into
cmp
pop
les
outsb
repnz
dec
gs
es
insl
xorb
mov
repnz
adc
adc
xor
aaa
imul
push
sub
jmp
mov
lods
adc
adc
mov
ret
fisttpll
aaa
shll
jmp
out
sahf
data16
pop
mov
pusha
jbe
pop
inc
inc
incl
xchg
mov
cmc
sahf
and
out
loopne
std
roll
xchg
and
xchg
and
jp
stc
nop
dec
pop
adc
rcll
sbb
loope
dec
sti
in
mov
adc
cwtl
or
fs
rcll
dec
iret
loopne
fs
movsb
int3
outsl
mov
sub
std
in
adc
mov
push
jne
cltd
fsubl
mov
dec
mov
push
adc
dec
mov
shlb
jns
jbe
inc
inc
push
bound
push
mov
xchg
shlb
into
inc
push
sbb
dec
pop
shll
jns
push
aaa
cmp
ret
dec
push
mov
cwtl
pushf
or
and
mov
or
adc
lret
mov
loop
mov
pop
jno
mov
pop
leave
insl
gs
pop
push
and
jecxz
pusha
int
imul
adc
pop
clc
les
mov
push
repz
cmc
in
push
jecxz
xor
dec
inc
stc
adc
xchg
mov
imul
mov
adc
pop
push
fnstcw
xchg
aam
sbb
lods
repnz
sbb
int
xchg
sub
cli
jno
leave
adc
cmpsb
xchg
jp
push
sub
cmp
fistps
in
cmp
sub
icebp
push
stc
in
icebp
enter
add
loope
test
call
xchg
clc
test
mov
push
ret
fwait
ljmp
je
adc
fstps
lods
js
lahf
mov
mov
and
or
leave
add
je
cmp
inc
repnz
out
dec
jo
cmovno
cld
jge
andl
mov
lea
cld
inc
adc
push
sahf
imul
int
xor
jmp
fcmove
dec
cmp
pop
pop
mov
fcomip
fs
rorl
lret
push
mov
mov
dec
in
in
inc
daa
add
inc
into
into
fisubs
or
cmc
jno
aas
enter
imul
jne
adc
adc
repz
data16
dec
lret
mov
mov
cld
les
or
push
into
pusha
pop
js
lret
adc
or
push
xchg
or
cltd
jp
jmp
push
lea
int
push
mov
lcall
mov
jno
lods
mov
test
or
sub
les
cwtl
jb
jp
sbb
dec
stc
addr16
mov
mov
sub
inc
int
mov
mov
sbb
dec
ret
xor
and
jmp
xchg
or
mov
sbb
xor
xlat
cmc
es
scas
cwtl
inc
cmp
adc
out
jecxz
aaa
or
outsl
push
pop
popa
lret
jns
jne
jo
bound
mov
mov
fwait
pop
or
cmp
push
mov
xchg
dec
sub
add
cmc
dec
jb
imul
push
pop
and
sub
mov
push
inc
pusha
sbb
scas
nop
inc
imul
rcr
mov
mov
loope
and
std
notb
rorl
and
pop
mov
xchg
and
xor
xchg
xchg
outsb
shll
adc
sub
cltd
shl
hlt
mov
rcrb
adc
insl
mov
lods
insl
jmp
int
xchg
mov
aad
push
jbe
adc
add
int
shlb
sub
cmpsl
or
inc
pop
lret
dec
shll
repz
pop
adc
add
fdivl
pop
out
add
and
and
mov
push
lds
cli
jb
mov
cmpsl
ds
jmp
push
loopne
inc
aas
mov
mov
in
pop
fistpl
cmp
pop
loopne
testb
dec
xor
jmp
fisubrl
dec
xor
popa
dec
xchg
daa
push
rcrl
ds
cmpsl
out
mov
jnp
xchg
mov
fidivs
insb
cmp
scas
outsl
cwtl
stos
stos
inc
out
mov
xor
ds
ja
jl
fists
aam
jg,pn
subb
pop
stos
push
xor
and
jge
pop
shll
push
inc
mov
jb
dec
lcall
pusha
xchg
mov
outsl
add
rcrb
xchg
icebp
and
movsl
cmp
rclb
sbb
out
dec
jno
stos
mov
pop
xchg
nop
cld
add
scas
rcll
cs
cmp
push
loope
mov
stos
cwtl
test
imul
pusha
push
adc
dec
xchg
mov
mov
fisubrs
scas
mov
ds
jge
stos
insb
ret
test
in
xchg
dec
ret
cmpsb
cmpl
ljmp
sub
sahf
popf
std
mov
adc
cmpsb
pusha
fadds
mov
daa
add
mov
mov
mov
add
shlb
dec
insb
les
ret
data16
out
push
push
mov
repnz
mov
lock
dec
scas
roll
test
mov
xor
or
orl
cltd
fldl
in
lock
lods
cmpsb
mov
sahf
gs
aam
or
outsb
mov
das
aad
mov
inc
sbb
push
and
std
repnz
shl
test
loopne
inc
inc
insl
js
sub
xchg
inc
cltd
inc
outsl
in
in
dec
jnp
and
dec
lret
sbb
cmpsb
mov
negl
icebp
call
fcoml
loope
xor
popf
jle
mov
xchg
add
add
lea
xchg
mov
mov
add
xchg
aad
jo
dec
mov
out
cmovnp
les
adc
pop
mov
addr16
xchg
sbb
push
cltd
push
adc
xchg
loop
nop
es
int3
call
add
loope
rcrb
sbb
xor
stos
xchg
aad
outsb
dec
or
iret
cmpsl
add
cli
inc
pop
das
into
adc
pop
jae
imull
dec
push
push
mov
outsb
adc
inc
stc
pop
xor
jb
and
rcrb
in
dec
psllw
sub
jg
repnz
icebp
call
and
mov
xchg
js
icebp
jecxz
movsl
cli
ror
jno
push
push
sub
ds
xor
mov
shlb
cmpl
mov
out
leave
aad
xchg
cmpsb
shrb
rol
rcll
push
sbb
es
lea
pop
or
sbb
cltd
cmp
fsubrl
jecxz
xlat
bound
inc
test
sti
jb
push
dec
mov
and
mov
xchg
aas
loop
outsb
mov
bound
mov
rol
xchg
sbb
cmp
mov
mov
enter
mov
sub
or
call
push
mov
call
andb
mov
mov
cmpb
js
pushl
adc
cmp
pop
jb
inc
dec
aam
dec
sbb
push
movsb
jl
mov
lcall
hlt
insb
cmp
fistl
sub
out
out
mov
or
shl
mov
and
mov
out
jmp
mov
inc
push
addl
outsl
movsl
rcrb
pushf
or
imul
mov
cmp
test
sbb
xor
daa
sarl
cli
xchg
and
add
and
mov
adcb
sbb
inc
bound
add
and
jnp
xchg
mov
cwtl
sub
rorb
xchg
xchg
xor
and
shl
adc
lods
xchg
mov
gs
adc
and
test
in
and
dec
sbb
sub
adc
jmp
or
inc
dec
xor
add
or
adc
movsb
lds
cmp
sbb
sub
xor
or
das
daa
iret
pop
push
sub
inc
and
rcll
test
cmp
rolb
push
cli
cmp
push
xor
dec
scas
mov
fs
sub
pop
sbb
xor
cwtl
in
xchg
add
xchg
cs
clc
or
inc
orl
stos
cs
sbb
iret
ret
add
xchg
or
adc
icebp
loope
xchg
push
fstps
int3
push
subl
enter
xor
dec
sbb
shrb
xchg
out
jl
adc
mov
add
mov
dec
sbb
mov
std
mov
aad
pop
ljmp
push
sbb
loop
vpcmpgtw
pop
add
mov
push
je
jmp
pop
lods
pushf
jmp
in
mov
mov
rol
add
shl
test
int3
shl
lods
jmp
data16
adc
mov
rolb
xlat
sbb
fwait
or
dec
xchg
in
insb
dec
dec
sti
fwait
loop
aas
out
add
mov
les
or
jno
test
push
and
aaa
mov
jle
mov
mov
mov
dec
lret
nop
lds
xchg
sarb
mov
mov
mov
inc
fstps
ret
dec
out
cmp
js
inc
imul
fwait
jl
adc
push
movsb
imul
cmp
mov
test
into
inc
orb
adc
cli
jmp
xchg
ljmp
arpl
into
mov
cltd
push
out
jae
pop
sbb
or
mov
shrl
ljmp
ret
inc
lahf
pop
out
out
and
push
or
inc
jb
js
into
out
xchg
inc
and
pop
test
insb
fs
aaa
dec
mov
pop
push
adc
jns
and
sahf
jbe
loope
cmp
mov
aas
xor
dec
fucomip
and
fwait
cwtl
xchg
cmp
jg
int3
movsb
clc
mov
test
mov
aad
push
mov
jl
or
xor
ja
add
inc
sub
enter
jmp
mov
out
pop
sti
adc
add
xchg
sbb
sbb
addb
mov
add
xchg
jmp
lds
in
inc
in
icebp
or
dec
sbb
scas
addb
cmc
aaa
cmp
in
pop
outsb
pop
sti
jle
sbb
in
adc
adc
stos
fstpl
in
xor
fwait
leave
pop
hlt
outsl
adc
push
rclb
int
adc
adc
fucom
xchg
jp
xor
adc
aaa
imul
cmp
xchg
jg
add
mov
mov
push
or
lea
out
incb
sbb
cmpb
mov
and
data16
xchg
push
sbb
int3
dec
and
js
mov
arpl
mov
in
mov
xor
dec
icebp
push
rol
xor
xchg
pop
inc
lds
outsb
dec
and
inc
xchg
mov
mov
in
aas
dec
es
aad
dec
in
outsb
push
cltd
test
out
lcall
jl
cld
out
mov
xor
ljmp
flds
xor
mov
mov
adc
pop
jmp
sub
movsl
or
lret
push
jae
mov
add
sub
out
mov
adc
inc
ficoms
iret
lods
inc
pushf
mov
dec
cmp
or
add
mov
in
das
jl
ret
mov
stos
scas
andl
mov
cld
add
mov
xchg
subl
adc
add
fs
mov
and
pop
sbb
or
adc
pop
inc
movsb
in
pusha
fdivp
test
mov
pop
out
push
in
push
sub
xor
adc
jp
jle
stos
or
enter
jmp
arpl
and
cltd
adc
adc
push
sbb
pop
out
sbb
cmp
sbb
sub
dec
hlt
fs
add
xchg
orb
and
sahf
xor
stc
into
fistl
pop
das
lods
fs
sbb
andl
mov
adc
cmp
mov
and
dec
bound
jnp
jbe
fmuls
inc
fimuls
pop
stos
mov
pop
or
xchg
or
push
push
pop
mov
xchg
and
aaa
or
pop
in
jecxz
add
test
test
or
and
or
outsb
jecxz
inc
iret
mov
xlat
mov
push
cmp
mov
lds
je
cmp
mov
lcall
xchg
sar
pop
jnp
mov
lcall
pop
mov
leave
das
mov
fs
jb
and
xchg
in
repnz
outsl
sub
repz
outsb
mov
cmpsl
cmc
xor
ret
repz
push
pop
push
mov
lods
shr
or
fistpl
add
imul
out
repnz
adc
mov
daa
dec
inc
pop
shlb
stos
xor
outsl
xchg
mov
pop
mov
or
push
push
push
jnp
fisubs
lret
call
xor
and
je
outsb
mov
mov
scas
ret
dec
test
and
adc
dec
sub
mov
sbb
test
ret
stos
add
jns
add
icebp
in
das
adc
cmpl
mov
cmpb
fwait
pop
iret
hlt
cwtl
cmp
stos
aam
add
andl
adc
pop
dec
shl
pop
movsb
popa
cmp
loope
push
vpperm
test
cli
in
and
and
sub
out
jae
mov
loopne
pop
iret
dec
aaa
xchg
aas
cmp
jbe
jecxz
mov
insl
movsl
shl
or
das
arpl
add
js
in
imul
lret
aaa
lods
in
setp
subl
fdivr
push
cmp
mov
in
jecxz
in
stos
or
push
or
and
ss
scas
fwait
in
test
addr16
mov
inc
movsl
dec
adc
aaa
int
ss
mov
loopne
add
es
test
rcrl
cmp
xchg
clc
pop
mov
sti
div
jo
inc
shlb
test
xor
popf
cs
out
inc
jae
xchg
pushw
lds
or
adc
mov
fisubrl
xchg
xorl
cmc
rorl
inc
pop
mov
push
push
arpl
in
leave
inc
mov
sahf
mov
pop
mov
cld
fldt
imul
repnz
push
ja
pop
mov
fwait
sbb
imul
jle
fs
fiaddl
es
jbe
pushf
and
out
pop
push
mov
jae
jecxz
enter
ja
js
xchg
or
pop
xchg
fidivs
mov
in
lods
int
mov
jg
inc
push
roll
sub
mov
in
test
mov
mov
and
mov
nop
adc
add
mov
mov
lahf
and
inc
mov
mov
cmp
mov
pop
mov
or
nop
stos
negl
xchg
pop
push
test
call
movq
movsb
mov
shrb
jmp
pop
repz
fucomi
or
addr16
mov
adc
sbb
fldcw
dec
cmp
inc
or
pusha
outsl
sbb
ljmp
xor
stos
je
sti
aas
mov
add
pop
daa
jbe
aas
adc
ret
aaa
stc
in
les
insl
mov
sbb
adc
jge
and
sub
ja
xchg
lea
std
ret
fdivrl
packsswb
cld
jmp
pop
mov
add
sbb
pop
push
ja
pop
pop
jle
jae
sbb
pop
sub
sbb
and
xchg
fmuls
sub
push
push
push
lods
ret
mov
bound
dec
cmp
jmp
mov
push
mov
adc
adc
jmp
jl
lods
adc
push
imul
dec
in
dec
pop
dec
test
shll
addr16
sbb
or
mov
addr16
jle
fists
mov
mov
sbbl
mov
dec
add
cmp
and
sti
add
xor
and
stos
rcrb
pop
mov
push
mov
xchg
mov
mov
fildl
aam
cmp
jno
arpl
sti
inc
jge
and
std
push
les
and
fldl
add
rclb
in
push
lds
pop
inc
scas
repnz
sub
dec
add
sbb
mov
mov
sub
mov
lods
ss
or
std
fmuls
push
bound
lea
add
or
mov
es
es
adc
loopne,pt
xchg
rolb
xor
mov
test
in
rcr
sbb
movsl
jg
outsb
jmp
scas
pusha
inc
rcr
inc
jmp
stos
ja
mov
ja
out
sub
sub
push
fidivrl
pop
and
jbe
addr16
mov
dec
pop
into
es
sub
outsl
add
outsb
das
popf
insl
nop
pop
add
enter
iret
dec
xor
into
out
test
out
and
adc
clc
dec
add
int
mov
ljmp
lret
add
dec
sbb
mov
and
cmovb
movsb
cmp
loop
pushf
rorl
mov
insb
jle
push
enter
icebp
mov
in
xchg
cli
mov
in
call
bound
shlb
jg
lea
pop
sub
pop
cltd
inc
mov
inc
ret
stos
fimuls
std
enter
sub
dec
mov
xor
add
aas
mov
jg
push
sub
pop
nop
push
dec
rclb
adc
imul
xor
jnp
mov
hlt
jb
movsb
pop
aad
and
push
push
or
cmp
mov
js
fdivl
mov
lock
addr16
in
js
fisubrs
xor
sahf
xchg
out
push
cmp
pop
mov
push
push
xchg
push
sbb
pop
icebp
lock
movsl
mov
add
inc
push
int
in
repz
stos
inc
pop
ret
cmp
ja
bound
cmp
or
pop
push
push
push
mov
sub
sbb
sbb
enter
or
sti
dec
ss
adc
pushf
mov
or
push
into
loopne
jbe
movsl
push
call
mov
push
mov
js
je
adc
aaa
out
lods
jl
mov
xchg
mov
inc
push
in
push
or
fwait
jb
ffreep
push
jne
insl
pop
subb
xchg
inc
jecxz
xchg
push
pop
jmp
or
dec
outsb
iret
dec
jno
pop
mov
xchg
mov
sbb
push
pop
push
dec
and
mov
leave
scas
cmp
sub
fwait
lods
popf
jmp
cmp
sub
imul
inc
mov
enter
jns
mov
stc
popf
add
dec
in
js
xchg
jb
fnstenv
cmp
push
decl
sub
mov
adc
add
rcrb
add
and
sub
sub
dec
mov
int
mov
lods
aaa
sub
mov
cli
mov
inc
cs
sbb
mov
insl
xlat
mov
inc
icebp
cld
adc
ljmp
aam
outsl
and
and
subb
rcr
pop
imul
dec
dec
cmp
dec
das
pusha
std
scas
add
imul
xchg
inc
sub
or
jo
les
aad
dec
mov
mov
mov
iret
cmp
adc
ljmp
into
pushl
repnz
jg
pop
push
test
xchg
in
cmp
sti
iret
xchg
cmp
add
sub
add
dec
imul
aaa
in
comiss
sub
loop
jl
inc
ret
test
sub
in
mov
add
pop
enter
mov
xor
mov
mov
fdivrl
mov
push
add
out
xchg
mov
pop
ljmp
pop
fnstcw
divb
xchg
aad
repnz
xchg
gs
dec
aas
fdivrp
jb
xor
mov
xchg
or
insl
add
push
int
add
mov
fs
push
scas
sbbl
push
lret
pop
or
pop
test
and
xchg
mov
adc
movsl
decb
push
pop
ret
int
push
movsl
sti
in
ret
or
lea
out
cmc
test
cwtl
jge
stc
mov
adc
scas
sbb
ficoms
gs
pop
push
and
js
testb
test
popf
ljmp
and
xchg
jnp
lcall
pop
pop
cld
mov
fwait
pop
push
xchg
cmp
dec
xlat
dec
or
and
mov
adc
sbb
sub
cld
jp
call
lret
jbe
popa
mov
cmpsb
mov
or
jg
movsl
cmp
mov
rcrl
jno
add
push
insb
pop
nop
ljmp
int3
cld
insb
jbe
xchg
int
in
out
mov
js
das
mov
imul
xor
rcl
sub
cmpsl
dec
shrb
pop
xchg
pusha
jno
in
mov
insb
cmp
push
cltd
sub
sub
mov
jno
popf
xor
loope
call
and
shr
fsubp
nop
push
pop
fldenv
mov
enter
icebp
push
push
nop
cmp
or
hlt
cmpsb
stos
or
mov
popf
testb
mov
mov
idivb
pop
scas
dec
lods
rclb
xchg
bound
aas
mov
adcb
adc
aam
mov
sub
test
inc
fwait
or
int
xor
fnstcw
popf
dec
jmp
lods
lcall
sub
leave
mov
adc
outsl
pop
out
pushf
out
xor
mov
ret
jb
test
adc
dec
inc
xchg
fstps
iret
cltd
sbb
and
or
cmp
adc
mov
in
xor
nop
and
pusha
cld
loopne
lea
mov
movsl
into
pushf
mov
pop
fwait
aad
jae
scas
ret
sbb
fstpl
push
call
mov
mov
stc
mov
adc
fnstsw
loope
xchg
cmpsl
loope
jecxz
or
insl
inc
les
hlt
stos
inc
sub
push
outsb
lcall
dec
xchg
dec
cli
pop
jno
push
sbb
fldt
push
incl
hlt
pop
xor
jae
or
sbb
mov
std
pop
sub
jmp
inc
xchg
fs
scas
jp
push
in
aad
dec
fbstp
add
mov
mov
int
pop
and
dec
fadd
ljmp
add
and
push
test
xor
fcom
add
and
and
cmc
insl
xchg
rorl
inc
xorb
aad
movsb
push
xor
inc
mov
ret
outsl
es
inc
mov
aaa
cmp
clc
pop
insb
sub
mov
testl
or
outsb
lret
imul
repnz
or
dec
xor
xor
mov
outsl
push
fiadds
inc
push
mov
loopne
mov
lret
mov
fdivrs
xchg
xchg
jae
pushl
mov
lahf
cmp
loopne
in
or
inc
fdivrp
aaa
mov
mov
dec
sub
adc
aas
or
dec
inc
out
sbb
into
int
mov
inc
fcoms
gs
xchg
pop
push
lahf
lods
mov
jecxz
mov
cmp
cmpsb
mov
mov
stos
loope
cmp
mov
mov
xchg
fwait
rcll
push
insl
cmc
xchg
fwait
pop
cmpsl
in
test
push
or
fists
popa
jns
fsubr
cmc
push
and
push
scas
faddp
or
add
sub
popf
dec
mov
inc
push
jno
dec
push
dec
push
xchg
rcrb
xchg
fidivs
ss
pusha
ss
cmp
xchg
sbb
je
cmp
inc
neg
sarl
xor
push
lea
push
jmp
adc
mov
fldl
push
pop
add
adc
sub
scas
ds
mov
mov
adc
add
jg
jge
jns
les
cld
pushf
or
and
das
add
cmp
ficoml
fnsave
ret
mov
mov
lods
inc
fistps
addb
out
jl
mov
hlt
mov
xor
dec
mov
xor
insl
jbe
ret
mov
sahf
and
cmp
xchg
mov
arpl
daa
jge
mov
stos
adc
stc
mov
mov
int
pop
ja
sbb
inc
imul
add
movb
ljmp
aam
dec
inc
mov
xchg
ds
das
fisubrs
popa
cmpsb
cmpsb
pop
mov
rorl
enter
inc
push
mov
loop
cmp
bound
xchg
pop
sub
cs
add
inc
cltd
aas
adc
sbb
es
test
sti
ret
inc
cmp
inc
and
or
fdivrs
push
sbbb
mov
cmpb
and
cmp
sbb
shl
cmp
cmp
lods
xor
adc
pop
mov
dec
pop
mov
jg
loope
sub
fisubrs
jbe
jb
xorb
mov
jmp
mov
mov
repz
popa
add
jns
and
mov
lcall
mov
pop
inc
rol
sbb
ret
loopne
pop
adc
cltd
daa
xchg
add
or
ret
jnp
xchg
pop
fnsave
and
and
mov
movsb
xor
shlb
fstpt
stos
rorb
jbe
lea
fisubs
lds
jle
aam
jno
push
jno
int3
stc
adcl
and
mov
or
dec
mov
ss
jecxz
outsb
jecxz
mov
ret
sbb
xor
push
shlb
jp
pop
lret
dec
insl
jecxz
adc
andl
mov
mov
enter
mov
jo
or
dec
add
xor
inc
sahf
and
stos
jns
mov
add
sub
mov
pop
mul
push
pop
mov
movsb
insl
inc
subl
movsl
add
inc
mov
jg
lahf
sub
inc
jl
xchg
and
cmp
add
dec
cmp
iret
aas
out
lock
add
sub
cmpsw
mov
psubb
mov
testl
in
and
imul
pop
popa
stos
inc
sub
mov
mov
enter
jbe
fiaddl
lahf
fwait
dec
dec
popf
and
jne
daa
mov
movsb
js
inc
xor
loopne
mov
orb
pop
jg
cltd
sub
jecxz
in
lret
push
gs
enter
or
xchg
cwtl
sub
hlt
add
mov
push
out
sti
mov
jns
out
btr
and
mov
jns
stos
in
jno
xor
scas
and
mov
sub
add
cld
pmaxsw
push
xlat
cli
mov
push
imul
xor
mov
mov
sub
arpl
ja
xchg
push
push
push
and
mov
dec
pop
mov
mov
pop
mov
or
movl
orps
mov
jp
jbe
xlat
repz
add
inc
out
xchg
add
sbb
jns
and
push
lea
sub
jp
inc
cltd
mov
shlb
shlb
sbb
sub
das
pop
dec
adc
imul
test
or
jns
cmpb
dec
rcl
push
push
dec
test
adc
mov
in
xor
sbb
shll
sub
ret
icebp
ficoms
push
mov
mov
sbb
push
lcall
rcll
fisttpl
pop
fistpl
push
ljmp
shlb
addr16
sub
es
push
add
repz
cmpsl
jno
aaa
jle
movsl
sbb
pusha
int3
jo
daa
cli
mov
jbe
cmpsl
ljmp
xchg
cmpsb
movsb
dec
addl
std
mov
cmp
aam
mull
popf
xchg
fbld
cltd
cmpb
ret
xlat
dec
vphaddwd
loop
out
pusha
jne
cmp
sbb
inc
cmpsl
cwtl
lea
push
push
mov
adc
and
in
movsb
hlt
outsl
xchg
ficoms
sbb
adcb
xchg
push
or
lds
mov
andb
xchg
dec
sbb
sub
das
inc
mov
jecxz
xchg
sbb
sbb
out
outsb
jo
dec
cmpsl
cmpsl
push
lret
imul
mov
out
in
and
ret
je
fldcw
ret
dec
out
inc
test
adc
push
insl
cmp
js
das
or
dec
out
sub
adc
sbb
adc
mov
add
adc
xchg
sub
sbb
nop
jo
pusha
cld
cmpsl
cmp
adc
push
stos
and
push
inc
out
pop
mov
xchg
xchg
int3
adc
inc
stos
inc
fwait
or
mov
dec
xchg
jnp
xlat
add
push
in
and
pop
andb
pop
in
rorl
jnp
add
push
cmpsl
pop
das
shll
dec
dec
push
sbb
mov
push
dec
out
adc
inc
idivb
and
xorl
mov
sahf
cmpsl
es
xorb
jo
pop
cmp
jno
sahf
cmc
cwtl
adc
dec
or
fildl
mov
inc
std
mov
inc
jno
jecxz
sub
xor
mov
jb
mov
in
repnz
jmp
out
sbb
incl
dec
out
in
or
mov
mov
mov
lret
mov
outsl
pop
or
sbb
mov
imulb
push
out
xor
icebp
sub
ss
sahf
inc
add
push
xchg
cmpsl
and
pop
xchg
mov
sbbl
sbb
mov
arpl
in
repnz
ss
jecxz
mov
mov
and
jle
inc
scas
inc
pusha
int
sbbl
in
lret
repnz
inc
adc
pushf
or
and
jae
add
arpl
jns
ret
jns
and
and
xorl
test
push
insl
xchg
popa
andl
int3
mov
xor
ss
push
scas
lret
fadd
inc
xorl
cmp
lock
aaa
mov
dec
out
lock
jle
bnd
xchg
pop
leave
mov
pop
stos
ret
das
dec
pop
cmp
loope
fidivrs
jb
inc
stos
or
les
xchg
std
out
mov
sbb
jne
jge
and
push
sahf
adc
dec
mov
push
sbb
shlb
ljmp
push
sbb
pop
stc
pop
push
sbb
mov
cli
sbb
pop
inc
pop
or
push
out
xor
pop
sbb
and
les
cld
int3
sbb
xor
mov
lahf
sub
lods
cmc
cmp
push
push
aas
in
roll
push
out
test
lret
mov
jno
sbb
jnp
lea
cmp
imul
push
adc
fiaddl
sahf
mov
jbe
stc
popa
mov
pop
xchg
mov
and
in
inc
xchg
push
movsl
out
cmpsl
stos
and
iret
pop
add
pop
ss
or
loop
fldl
int3
jns
cmp
cmp
dec
notb
push
pop
pushl
in
dec
push
outsb
push
fldln2
sub
clc
gs
in
sbb
punpckldq
js
xchg
push
inc
imul
jno
jne
sub
add
fs
xchg
push
bound
xchg
jl
xor
sub
sti
pop
fistpl
sub
sbb
mov
sbb
mov
cltd
mov
hlt
mov
sub
in
and
rorl
xor
mov
mov
cmpsb
fldpi
arpl
movsl
dec
adc
and
jp
lods
inc
xchg
xor
add
test
dec
or
xchg
out
add
imul
testb
mov
aad
xchg
ficomps
or
xchg
cs
pslld
daa
adc
dec
mov
adc
inc
in
ds
int3
add
cmc
pop
test
jb
std
out
repz
adc
xchg
in
call
jbe
inc
mov
cmp
jle
mov
sbb
scas
mov
sahf
outsl
insl
outsb
aam
xor
sarl
scas
imul
ja
or
jge
lahf
das
add
jmp
lds
jmp
inc
loope
push
sti
hlt
call
roll
mov
pop
shll
std
dec
mov
sub
aaa
xchg
mov
nop
ret
clc
lods
xchg
mov
fistpll
aam
mov
jecxz
mov
into
int
in
jmp
sub
je
pop
mov
insb
sbb
jle
or
outsb
addl
paddq
lock
addr16
or
imul
and
cld
and
cld
jno
aad
xor
xor
dec
and
imul
or
mov
in
jp
sub
sub
gs
stos
es
arpl
lret
lret
lcall
or
mov
adc
test
movsl
adc
add
jmp
xor
inc
push
xchg
sub
imul
sti
scas
mov
ret
outsl
iret
pop
mov
xchg
lea
lret
push
pushf
dec
sbb
mov
adc
adc
int
shlb
xor
lods
add
mov
cmc
and
out
fwait
imul
mov
pop
cmc
and
jns
test
mov
scas
add
fcoms
out
ret
push
push
call
inc
xor
sahf
xchg
sahf
outsb
das
jbe
lock
sub
movsl
push
inc
shll
sbb
pop
cmp
out
orl
xor
jbe
movsb
imul
cmp
rcll
mov
sahf
mov
jae
inc
rcrl
push
inc
adc
jmp
pop
in
sub
mov
mov
xor
pop
pop
mov
pop
in
test
ds
std
sub
mov
push
mov
adc
int3
daa
shrl
jb
push
js
xor
lock
mov
test
arpl
lock
pop
push
cli
rcll
jmp
fs
push
jl
mov
int
mov
mov
aad
jnp
sub
out
shrl
cmc
aam
mov
ja
lret
addb
lret
or
pop
repnz
scas
push
jle
outsb
lret
push
ret
popa
ror
jno
notb
stos
pop
sub
shll
scas
ja
stos
imul
int
mov
pop
aam
pushf
jle
daa
mov
push
add
ret
sub
sub
insb
mov
and
dec
enter
cli
adc
add
mul
and
dec
sub
inc
pop
ret
cs
push
pop
imulb
add
fsubs
push
adc
aad
adc
jl
sahf
clc
bound
mov
push
rorb
mov
out
push
shll
outsl
out
sbb
sarl
xlat
mov
ret
lcall
jb
sbb
inc
and
jns
sbb
cmpb
sbb
xchg
cmp
fidivrl
addr16
add
cmp
xchg
sbbl
out
enter
mov
inc
scas
jne
inc
pop
mov
mov
rep
mov
ret
or
mov
ss
sti
adc
cld
push
sbb
sub
mov
cmpsl
or
xchg
xchg
and
clc
test
jns
fiaddl
out
inc
pop
rorl
add
xchg
insl
lret
cmp
sub
arpl
fs
fs
es
outsl
jae
fidivrl
mov
cmp
sub
mov
jp
push
stos
push
subb
cwtl
and
jne
xchg
sbb
fmuls
stos
js
fisubrl
mov
jge
test
icebp
pop
clc
lcall
arpl
js
bound
test
pop
push
into
icebp
test
push
mov
mov
pop
mov
and
icebp
cmp
pop
fists
push
outsl
jp
dec
or
out
fiaddl
pop
push
out
mov
mov
repnz
sbb
mov
ja
cmpsl
jl
mov
pop
pop
push
and
cmpsl
mov
scas
xor
stos
leave
mov
dec
sti
mov
cmp
push
mov
xor
das
mov
imulb
mov
cwtl
rorb
nop
aas
mov
push
xchg
ljmp
mov
orl
sbb
pushf
or
and
inc
mov
in
mov
out
pop
cli
sbb
mov
lock
mov
and
test
pop
ficomps
cmp
mov
cmp
aad
cmpsl
mov
mov
les
xor
js,pt
enter
lea
add
ficomps
cmp
cmp
cltd
mov
pop
les
xor
lds
and
lcall
or
out
test
inc
add
adc
outsl
xor
out
scas
fs
test
or
xchg
aam
or
mov
test
sub
pop
push
xchg
jmp
lods
sarl
cmc
mov
or
cmp
repnz
ret
test
mov
lds
lock
mov
imul
sub
pop
or
lods
inc
bnd
cmp
filds
lret
push
shll
out
lcall
popf
add
jl
dec
or
and
jno
inc
adc
mov
cmp
movsl
xchg
scas
add
add
lcall
loop
sub
adc
mov
fisubrs
scas
cli
dec
fildl
lcall
sbb
jle
pop
cmp
scas
cmp
outsb
mov
ljmp
les
or
scas
cli
outsb
cmp
jp
jl
mov
jl
outsb
mov
cld
lock
jo
subl
test
fildll
push
sbb
push
mov
fimull
jmp
dec
mov
mov
lret
jae,pn
call
jmp
incb
ret
rcrl
mov
or
xor
jno
push
cs
push
jmp
add
ret
push
int3
xlat
loope
cld
pop
pop
adc
pop
out
shrb
cmpb
xor
cli
mov
sti
inc
xor
leave
stos
sarl
and
test
jmp
pop
lcall
test
dec
dec
jl
sub
aaa
dec
popf
push
xlat
pop
mov
add
iret
and
cmp
jp
mov
mov
pop
inc
mov
mull
jae
push
mov
sti
adc
xor
clc
aam
mov
mov
dec
cmp
xchg
push
mov
aam
mov
aad
xor
dec
jbe
sbb
push
outsl
jno
lods
jnp
data16
fldcw
mov
jb,pt
push
stc
add
movsl
mov
sub
imul
xchg
pusha
in
mov
lea
mov
std
mov
aas
loope
das
out
xor
cmc
dec
sbb
xor
sub
xchg
les
cmpsl
fadds
xchg
les
dec
sti
or
push
out
xor
adc
add
push
fsubrs
ret
lret
out
loopne
cld
sbb
jge
cmp
or
adc
sub
push
xor
pop
or
mov
mov
cmp
sbb
pop
cmp
jecxz
or
pushf
fwait
sub
mov
mov
lret
pusha
pop
jns
lds
cmp
stos
inc
arpl
nop
das
xor
fiadds
incl
sbb
dec
add
adc
scas
popa
jb
cltd
xchg
add
gs
jbe
cmovp
sarb
sahf
xor
xor
mov
fimuls
test
cmc
cwtl
int3
ret
aam
test
aad
pop
fadds
add
cmp
mov
adc
xchg
repnz
jnp
jnp
xor
sub
icebp
mov
xor
lahf
mov
cmp
loopne
jne
out
or
xlat
shrl
jae
aad
cmc
cmp
add
jb
jnp
pop
mov
sarb
adc
xchg
ja,pt
fisttpll
push
mov
push
popf
mov
testb
pop
jae
mov
icebp
iret
add
test
sub
test
mov
add
ret
fldenv
inc
outsl
jle
xchg
push
pop
in
cmpsb
push
mov
test
mov
sbb
jne
sub
jo
jecxz
fwait
cmp
jno
sub
int3
xchg
cmp
mov
xchg
or
dec
cmpsb
cli
enter
mov
dec
lods
popa
mov
movsl
adc
cmp
dec
mov
int
push
sbb
push
lahf
push
mov
cmp
es
sbb
cltd
std
pop
push
fld
in
out
ljmp
jns
sbb
mov
insl
push
or
xchg
mov
lods
stc
icebp
and
iret
scas
out
scas
jp
mov
out
popa
pop
and
adc
mov
cwtl
inc
std
jle
add
leave
mov
xor
jb
push
movsl
rorl
dec
jle
cltd
cmp
sbb
jecxz
add
xor
call
push
push
inc
out
xor
loope
cmpsl
and
ss
fsub
xlat
lea
add
movsb
cmp
movsl
ljmp
call
movl
adcb
pop
dec
rorb
shrl
dec
in
jge
cmp
lds
pop
mov
pop
jle
aas
movsb
fldcw
xchg
add
or
push
mov
sub
jno
cld
push
in
xor
jno
and
mov
fwait
subb
or
mov
mulb
cmp
shlb
sub
and
adc
lcall
fdivl
mov
and
mov
call
add
fcomps
adc
rcl
popa
fwait
in
pop
fld
xor
cwtl
ja
fstpl
xor
add
pop
xchg
mov
lock
and
leave
and
stos
call
cld
ja
rolb
pop
lret
xchg
inc
out
lret
dec
mov
sarb
cwtl
push
push
or
imul
sub
pop
add
fstp
mov
sub
push
out
jg
xlat
adcl
icebp
and
stc
fisttpll
add
ja
rorl
jmp
loopne
push
and
js
pusha
nop
adc
adc
imul
pop
lea
pop
and
cmp
push
in
lds
add
push
imul
cmp
rcrl
test
fisttps
test
ficompl
inc
scas
andl
mov
dec
cmpsl
enter
add
inc
xchg
adc
mov
sarb
xchg
and
stos
int
jnp
or
fdivrs
insb
cs
inc
fidivrl
jo
fcmove
hlt
xor
xor
outsl
leave
sahf
adc
mov
pop
fdivr
cmc
movsl
popf
sahf
cmp
add
movsb
push
lods
push
mul
inc
or
insb
xlat
pusha
xchg
sub
ret
xor
loope
xchg
adc
push
xor
popa
adc
pop
popf
clc
ret
and
in
adc
add
xor
addr16
into
loop
sahf
jmp
ret
scas
xchg
ficomps
in
cwtl
pop
push
out
outsl
iret
cmp
add
fbstp
fistl
cmp
dec
mov
aaa
add
psrlw
insl
ja
lods
cmp
scas
add
mov
imul
addr16
fistpl
popa
push
adc
lods
push
xchg
jecxz
adc
sub
test
sub
push
pop
cmpsl
mov
pop
mov
movsb
add
sahf
les
adc
mov
subb
xchg
mov
mov
std
mov
imul
out
stos
sahf
in
in
lds
ljmp
fdivl
push
cli
loope
adc
sub
push
cmp
fcompl
jg
mov
fucomip
mov
outsb
movsl
fldt
inc
clc
fdivl
lret
dec
xor
cltd
mov
or
gs
stos
and
inc
xor
cmpl
popa
shlb
imul
mov
pop
jne
adc
cwtl
mov
sarl
adc
cmpsb
cltd
pop
cmpsb
test
ficoms
insl
stos
lods
inc
xchg
jmp
sub
jl
pusha
loope
imul
cli
sbb
lods
arpl
fs
xor
cmp
xchg
jae
mov
cmp
popa
mov
je
fiaddl
jl
lock
or
std
inc
sub
addr16
mov
or
je
or
arpl
out
int
stc
or
cmp
cmpsb
pop
stc
ljmp
sti
popf
inc
fs
stc
inc
push
pop
sub
xchg
sub
sbbb
sub
mov
dec
jb
pop
mov
lods
pusha
push
mov
loope
popf
shlb
fstpt
fcompl
mov
jge
adc
loope
dec
paddusb
lcall
outsl
in
sub
fbld
or
cvttps2pi
fsubrl
imul
mov
insb
pop
pop
sub
sbb
cmp
mov
icebp
mov
xor
jge
je
pop
mov
sub
cmp
pop
mov
mov
or
inc
out
pushf
inc
jae
call
mov
shrl
add
jns
jle
lret
mov
sahf
aam
call
in
jbe
pushf
xor
mulb
add
adc
clc
clc
fiaddl
je
jne
xchg
xchg
popf
mov
pop
lret
ret
mov
cld
aas
jle
shl
outsl
jle
out
dec
push
xchg
aas
mov
mov
addr16
call
sbb
xchg
dec
scas
add
and
mov
call
lds
inc
lock
sbb
adc
lahf
pop
push
mov
xor
jle
and
mov
mov
mov
sbb
test
adc
push
mov
jmp
stc
faddp
and
leave
pop
fsubrs
fsubl
inc
movsb
add
inc
inc
scas
aaa
pop
inc
add
jno
nop
fildl
adc
out
sub
pop
scas
push
in
clc
and
ljmp
push
mov
data16
leave
push
loope
mov
cli
jecxz
iret
mov
sahf
mov
xlat
xor
shll
and
lret
movsl
xchg
pop
xchg
xor
push
incl
into
cmp
xchg
iret
cmpsb
pop
jecxz
lds
scas
int3
lock
pop
mov
adc
mov
xchg
xor
and
and
or
dec
sub
push
ljmp
ja
cltd
jnp
loope
and
sub
test
and
xchg
push
cli
loope
jo
leave
clc
lds
push
push
push
fs
inc
dec
and
rclb
hlt
push
push
out
in
sub
xchg
xchg
les
in
insb
ja
pop
ret
call
sbb
inc
cltd
inc
cwtl
cmp
iret
inc
cmc
inc
fimuls
and
rcrl
sbb
inc
jmp
inc
out
cmp
sbb
mov
mov
sbb
push
push
sbb
xlat
int
add
out
sahf
xchg
mov
idiv
and
mov
popf
cmp
push
mov
mov
es
stos
insl
adc
mov
cmpsb
push
ljmp
aas
les
pop
lea
or
daa
icebp
xor
stos
popf
daa
loopne
xor
outsb
jmp
or
jne
arpl
push
xor
fnstsw
cmp
fwait
jge
in
or
mov
popa
pop
andl
cmp
jbe
imul
mov
xchg
sub
ret
xchg
inc
test
imul
mov
xlat
lock
push
pop
dec
testl
xchg
inc
push
rolb
and
push
jmp
repz
push
rcpps
icebp
sarb
mov
mull
or
add
stc
adc
popa
mov
mov
adc
sbb
rcll
mov
adc
lret
test
pop
clc
push
pop
lods
ficompl
roll
fcmovnu
or
iret
cld
popa
xchg
icebp
and
pop
in
mov
out
fidivl
cmp
pop
inc
fsubrl
lods
jmp
ret
shrl
mov
dec
lret
arpl
push
repnz
and
out
jp
fcmove
ficomps
sti
add
push
jnp
sub
iret
sbb
pop
popa
repz
cwtl
mov
and
mov
imul
call
fldl
adc
lret
imul
adc
loope
andb
or
dec
push
inc
add
mov
push
mov
int
jns
jae
jne
repnz
jo
imul
cli
enter
enter
adc
dec
push
push
push
xor
cmp
ss
sub
jg
pop
push
repz
xchg
sbb
data16
xor
popf
cltd
aas
cmp
int3
cmpsb
movsb
imul
xchg
push
pushl
sub
push
dec
test
sarl
sti
jno
mov
sbbb
xchg
adc
dec
cmp
scas
mov
sbb
mov
push
add
std
pop
repnz
rcr
and
insb
cmp
jo
test
in
sub
iret
dec
mov
cmpsb
repnz
push
out
shrb
and
push
aas
cwtl
cmc
adc
jmp
pop
mov
pop
sbb
lea
ret
out
insl
out
xlat
pop
es
dec
add
jp
or
inc
fs
js
xchg
pop
fs
jo
cld
iret
mov
pop
popa
pop
outsb
lret
and
adc
int3
in
sub
xlat
inc
lea
xchg
sarb
lret
jnp
dec
insl
std
jp
ds
imul
jnp
sbbb
or
jnp
jle
mov
dec
jne
cmp
or
sahf
add
cmp
mov
imul
sub
arpl
push
lret
add
shrl
mov
test
mov
inc
push
inc
pushf
xchg
sub
out
xchg
xor
ret
mov
xor
add
outsb
mov
call
es
sbb
mov
fisttps
add
in
cmp
call
push
xchg
xlat
sbb
push
add
sbb
lds
hlt
adc
push
sbb
fisubs
pop
mov
in
jp
in
xor
movsb
sbb
aad
lock
push
xchg
shrb
push
sbb
out
ret
sbb
mov
mov
mov
mov
mov
and
xor
icebp
push
sub
rclb
mov
cltd
movsl
test
test
pop
std
out
das
cs
xor
jbe
sahf
imul
mov
mov
mov
sti
adc
pop
in
adc
test
insl
dec
dec
xlat
mov
jo
sarl
and
mov
stos
shl
cli
dec
pop
ret
dec
mov
pop
dec
xchg
insb
mov
add
push
enter
sbb
jmp
or
push
sub
jp
lods
notb
inc
jge
fcoml
adc
out
push
adc
clc
cmp
repz
movsb
adc
inc
adc
sbb
and
pop
fisubrl
add
add
cmc
fsubrs
cmp
fistps
xchg
cld
loop
icebp
cmp
cmpsl
hlt
pusha
cmp
fidivs
sub
xchg
xlat
lahf
pop
dec
push
mov
mov
inc
mov
orb
xchg
out
icebp
addr16
adc
stc
push
mov
subl
das
xlat
bound
push
xor
xchg
mov
sbb
leave
mov
in
lret
loope
arpl
shll
dec
pop
mov
pop
shlb
inc
sarl
or
pop
mov
adc
pop
decb
xchg
lahf
push
sub
fisttpll
cmpb
movsl
push
xor
ja
arpl
mov
dec
dec
test
je
test
pop
mov
add
insb
jne
test
test
jnp
mov
dec
mov
push
aas
adc
xlat
aaa
cmovae
cmp
popw
xchg
test
adc
add
pusha
push
cmpl
ljmp
xor
mov
pop
lods
pushw
fs
scas
mov
mov
enter
scas
mov
testl
mov
fcomi
arpl
stc
loop
fucomip
inc
mov
sbb
jns
xchg
xchg
inc
inc
in
ficoml
mov
xchg
packuswb
adc
mov
adc
sarl
arpl
sti
push
sbb
adc
sub
adc
mov
movsb
and
lahf
push
xchg
pop
std
repnz
lcall
stos
xchg
rolb
and
cli
out
jl
pop
xor
data16
gs
lret
into
or
je
call
mov
xor
ljmp
jmp
fldcw
fisttps
jge
sbb
fisttps
adc
insb
or
in
jle
fisubrl
xor
fldl
jbe
lahf
adc
push
jl
mov
or
mov
sbb
add
jge
xchg
dec
sbb
sbb
mov
cmc
pop
data16
push
sub
jp
stos
cld
notl
imul
sub
lods
lret
arpl
in
mov
fsubrl
jae
push
enter
jge
push
mov
repnz
outsb
add
movb
push
push
lcall
popa
cmp
es
out
aam
ja
rcll
mov
fs
pop
mov
or
les
adc
mov
xor
xchg
std
and
shl
test
addb
inc
mov
push
sbb
mov
adc
std
popf
push
adc
les
cmp
icebp
dec
loop
fbld
mov
pop
mov
mov
xor
arpl
xchg
call
dec
jbe
xchg
cmpsb
adc
hlt
pop
xchg
movsb
xorl
jb
fisttps
out
push
sub
ds
xchg
je
dec
cmp
cwtl
jmp
xlat
push
cltd
push
pop
cmp
and
int
ret
pop
jp
cld
fwait
cmpl
xor
orb
or
xchg
shll
jmp
mov
imul
scas
pop
push
xchg
cmp
loop
or
xchg
insl
pushf
lds
mov
add
das
push
out
mov
mov
in
mov
mov
mov
and
jae
sbb
xchg
enter
and
adc
mov
repz
adc
fnstenv
cltd
adc
pop
xchg
and
pop
sbb
enter
sarl
adc
cld
out
pushf
xor
sub
and
mov
call
mov
stos
xchg
ds
rcrb
in
addl
inc
in
test
mov
ret
pop
icebp
jne
and
cld
xchg
fnstsw
cmp
mov
mov
or
cmc
mov
mov
aam
adc
pop
push
mov
xchg
shr
jecxz
in
cs
inc
hlt
xlat
fadds
ds
cwtl
pop
cmpl
fadds
push
lret
jle
mov
les
xor
add
orl
dec
ljmp
push
mov
inc
mov
js
xor
jb
adc
mov
pop
rorw
jmp
lcall
test
xor
cmp
mov
ss
int3
add
mulb
inc
movsb
test
pavgw
in
cmp
subl
ja
aad
adc
jmp
dec
out
out
or
sub
inc
sti
xchg
fcoms
fsts
fnstcw
lods
mov
orl
int3
test
icebp
inc
out
loop
add
cli
pop
lods
mov
lret
pushf
lock
add
jne
setae
mov
int
push
jno
add
adc
and
dec
sti
test
sbb
xchg
loopne
xorb
and
fwait
pop
push
mov
sub
roll
pop
jge
arpl
ss
cmpsl
jbe
call
adc
scas
jle
dec
add
test
cmp
mov
inc
inc
pop
add
xor
clc
in
sahf
lret
xor
outsb
aam
es
mov
pop
pusha
push
cmpsl
sub
mov
fsubl
dec
idivl
mov
jns
hlt
cli
scas
inc
inc
add
sbb
xchg
inc
repz
fidivrl
notb
and
add
mov
jl
repnz
push
rol
cltd
mov
arpl
scas
adc
jg
lret
mov
xor
mov
mov
add
jno
push
mov
pusha
fdivrs
lcall
and
and
movsb
rcl
lock
aas
xchg
popa
call
loopne
mov
lea
sbb
iret
jae
leave
popa
std
aaa
scas
lea
divb
pop
test
inc
push
in
mov
add
arpl
stos
push
insl
pusha
sbb
push
lret
and
cmp
jp
icebp
shrb
and
fwait
ror
shlb
fsts
jg
test
pop
and
mov
in
fdivl
ret
loope
mov
mov
jno
sbb
mov
inc
lds
pop
inc
jo
ret
add
out
lahf
push
mov
push
pop
dec
sti
ljmp
push
js
xchg
cmc
adc
sbb
sbb
imul
scas
jmp
sub
xchg
dec
aaa
jmp
sbb
dec
aaa
bound
fcomip
or
stc
arpl
fcoms
icebp
outsb
xor
imul
mov
in
mov
das
rcll
inc
int3
xlat
sbb
pop
sbb
pop
test
insl
mov
push
jb
sub
inc
or
rorb
hlt
fdivrp
rcrl
hlt
into
test
push
adc
outsl
pop
or
xchg
jb
jbe
int3
adcb
mov
stos
lods
sbb
cmp
and
add
pop
cmp
add
sub
xchg
xchg
pushf
xchg
lahf
lea
xor
lods
pusha
pop
sbb
jmp
sbb
and
stos
mov
negb
lods
mov
mov
outsb
dec
js
xchg
aad
push
cmp
pop
sub
xchg
or
cld
int3
aam
mov
pop
scas
aas
jg
push
mulb
pop
scas
jnp
mov
nop
add
lods
sbb
mov
scas
push
test
pop
test
loopne
lret
leave
imul
jbe
mov
dec
shll
dec
int
push
stc
gs
mov
imull
push
and
jnp
xchg
stos
add
es
out
das
inc
test
cmc
pop
push
insl
push
test
fcoml
sub
inc
hlt
add
add
inc
or
mov
fwait
popf
pop
sbb
xor
sbb
mov
pop
mov
call
mov
out
adc
xchg
shrb
gs
rcr
jbe
sahf
jle
pop
xor
test
aam
jne
stos
adc
movsl
rorb
arpl
xchg
jbe
xor
lret
xchg
ret
mov
mov
mov
sub
dec
jno
ret
rclb
pushf
mov
dec
cs
add
mov
fcomp
and
mov
lea
pop
jge
or
je
dec
orb
gs
movsl
into
lahf
cmp
inc
inc
jg
lret
jnp
out
xor
push
add
dec
cmp
insl
fs
outsb
or
pop
jmp
push
ret
and
pop
adc
out
mov
popa
cld
aam
mov
popa
lret
rcrl
jnp
je
dec
ret
fildll
cmpsb
and
hlt
cmp
nop
sbb
fldenv
std
mov
jae
mov
or
cmp
daa
dec
nop
xchg
setge
or
loope
fisubl
enter
inc
repz
shll
fidivl
outsl
lds
bound
cmp
cmpb
mov
loopne
dec
xchg
pop
out
jo
adc
dec
jno
loope
sar
jns
sbb
push
push
das
ret
or
sub
or
jg
test
loopne
int
inc
jnp
inc
push
mov
outsl
jge
mull
jmp
mov
test
add
jp
push
sub
jmp
mov
std
push
pop
adcb
pushf
cmp
imul
jo
jns
push
lcall
pop
rorl
mov
out
pop
mov
mov
gs
dec
or
or
in
adc
out
add
dec
out
inc
rcrl
aam
jnp
outsb
push
push
push
in
and
in
push
and
dec
sub
push
lret
mov
sbb
xor
pop
sbb
sbb
imul
cld
loop
cmp
dec
pop
push
enter
je
insb
insb
jnp
aam
inc
nop
pop
dec
lods
jmp
push
aad
cmp
fwait
loopne
test
and
fwait
xchg
int
adc
fisttpl
test
ds
inc
js,pt
push
lcall
sub
int
push
and
test
and
cltd
mov
arpl
fistl
fs
imul
out
sub
add
cltd
lds
inc
fnsave
push
or
stos
cmc
mov
aam
iret
mov
pminsw
fmul
cwtl
call
mov
and
push
jl
push
out
rolb
iret
jno
lcall
nop
rcr
sub
mov
xchg
adc
lock
iret
pop
mov
dec
out
add
in
push
mov
and
std
lods
sbb
jnp
mov
aas
sbb
stos
or
push
xor
hlt
data16
adc
sbb
repnz
push
fwait
mov
jne
aas
mov
mov
mov
jge
cwtl
mov
inc
dec
dec
pop
arpl
lcall
fwait
or
sbb
loop
add
out
jae
bound
dec
xchg
cwtl
rcll
or
data16
data16
lds
stos
adc
loop
mov
push
cs
push
mov
push
int3
test
fdivs
fmuls
sbb
inc
ss
cli
aaa
xchg
in
incl
ljmp
push
sahf
fmuls
addr16
fmuls
xchg
pop
xor
inc
dec
aad
into
inc
push
inc
decb
push
or
rcll
lret
jno
js
pop
call
loope
int
inc
gs
scas
mov
mov
xchg
jne
bound
out
repz
jmp
cli
cli
test
ret
fadd
push
push
sti
adc
jp
test
xchg
repz
divb
mov
call
push
dec
call
and
mov
dec
add
clc
clc
inc
or
loopne
pop
or
xlat
jno
inc
xor
xor
adc
cmpsl
jns
push
add
dec
xchg
pop
inc
call
xor
pop
push
push
sti
push
lahf
and
sub
insl
adc
mov
sbb
pop
fwait
sbb
jb
xchg
sub
mov
leave
sub
inc
xchg
outsl
pop
repz
cmp
call
or
aad
and
push
mov
mov
les
dec
lds
aad
jmp
mov
sub
push
xchg
repz
and
pop
repnz
test
hlt
aad
call
jle
scas
fwait
cmp
or
and
outsl
cs
fimull
xor
fwait
imul
sbbl
sbb
in
push
xchg
push
and
cwtl
enter
repnz
insl
outsb
fldl
repnz
jb
mov
and
mov
inc
dec
pusha
push
dec
mov
jl
mov
shrl
xor
in
sarl
aas
jae
or
xchg
add
imul
lds
or
sbb
or
insb
xor
enter
dec
pop
cmpsl
cs
mov
lret
pop
jbe
sub
push
stos
lds
sarb
push
je
andl
dec
outsl
fmul
out
stc
sarl
cmp
sub
es
imul
lret
adc
mov
jle
imulb
mov
lret
push
add
hlt
jmp
cld
lcall
fstpl
fildl
insl
loope
xchg
out
pop
mov
fisttpl
test
les
loop
int3
aad
mov
into
push
dec
pusha
push
aad
inc
or
sbb
ret
cwtl
cmp
mov
sbb
and
mov
ljmp
dec
jne
lahf
cmc
fidivl
push
sbb
xchg
clc
subl
sbb
inc
pop
scas
pusha
dec
movsb
arpl
and
pop
or
xchg
repz
movsb
cmp
int3
mov
mov
jl
arpl
out
or
rcrb
mov
popa
lock
add
rcrb
sbb
rcll
dec
movb
mov
lds
pop
pop
xor
xchg
sub
stos
jns
pop
jmp
push
jbe
repnz
adc
fwait
cltd
mov
adc
push
js
sbb
or
xor
mov
mov
scas
stos
lods
das
and
cmpsl
test
sub
xor
dec
or
insl
sbb
addl
jecxz
mov
dec
lea
and
xchg
ss
dec
rclb
jg
fstpt
into
mov
das
pusha
cmp
pop
add
xchg
mov
pop
stc
hlt
cmc
imul
fxch
xchg
cmp
sub
int3
pusha
shlb
and
adc
jbe
xor
std
cmp
ja
xchg
aaa
fs
and
ss
fisttpl
imul
mov
nop
add
fdivl
mov
shl
push
push
mov
cld
aad
fsts
dec
xor
sub
dec
mov
notb
pop
push
out
inc
sub
mov
jnp
push
lock
jle
out
push
mov
jnp
add
cmpsb
cli
pusha
pushf
mov
adc
cs
xorl
mov
std
ss
adc
push
sbb
je
loopne
xchg
xchg
pop
jecxz
adc
jg
mov
es
and
push
js
in
xchg
jns
adc
cld
xorb
aad
imul
inc
adc
rcrb
mov
cltd
dec
add
adc
outsl
ds
adc
cmp
fsubs
fadds
push
shr
nop
int
aam
in
jmp
push
dec
dec
fiadds
xchg
mov
jp
cmp
jnp
cli
call
xor
or
push
mov
gs
pop
out
jbe
insl
xchg
loope
rcr
test
ficompl
push
jae
insb
or
popa
mov
mov
cmp
je
inc
repnz
and
xor
ljmp
std
and
jmp
into
sti
cmp
xchg
dec
inc
mov
ret
xlat
out
fadd
and
fimull
and
fdivrs
sbb
xor
das
ljmp
inc
test
jmp
or
lahf
or
fwait
pop
dec
outsb
lcall
imul
sub
icebp
inc
insb
test
jg
cld
cmp
mov
or
fisubs
popw
ja
push
insb
xchg
ja
sub
or
addb
xor
imul
out
mov
movsb
mov
shl
or
cmc
and
insl
jb
push
or
pop
lock
test
jb
mov
cwtl
lahf
movsb
jne
insl
dec
lods
imul
sub
js
clc
xchg
lods
sub
cmp
pop
mov
fistpll
dec
cmp
sub
dec
fsubrs
pushf
fsubl
cmpsl
add
sahf
ror
cmpsl
js
mov
psrlw
inc
loope
mov
cmp
adc
mov
jl
aad
inc
mov
fidivs
scas
mov
or
shr
lods
cmp
mov
adc
std
inc
push
scas
xchg
mov
fdivrl
mov
leave
add
or
cmp
xor
mov
dec
pop
xchg
jmp
mov
daa
rcrb
inc
mov
cmpsl
pop
lds
nop
add
cmp
xor
sub
adc
jns
sub
push
movl
adc
xor
jo
xchg
pop
xor
lcall
cwtl
xchg
lds
dec
jns
jno
mov
outsb
and
adc
fidivs
pop
inc
insb
mov
ja
jnp
inc
test
lods
lcall
fbstp
leave
rcll
jno
mov
in
mov
xlat
push
push
stos
js
fnstsw
push
hlt
dec
xor
mov
andb
jo
add
add
mov
inc
dec
std
aaa
shl
sbb
xchg
test
jmp
cmp
or
jmp
lahf
cmpsb
push
xor
or
aaa
jge,pt
gs
dec
mov
mov
adc
mov
cmp
cmp
mov
out
addl
jmp
adc
push
stos
lods
ficoms
leave
ja
idivl
inc
out
sahf
cli
pop
mov
popf
add
add
mov
pushf
in
fdiv
and
xchg
sub
jne
insl
rcll
lahf
mov
ljmp
cmp
jmp
fidivrs
mov
lret
mov
movsl
sbb
std
pop
loopne
push
xor
adc
cmc
adc
jae
insl
ljmp
fmul
lds
ret
sub
rorl
stos
repnz
pop
outsl
inc
lds
xchg
add
cld
out
decb
popf
or
cmp
fs
push
cld
lock
mov
adc
cmp
mov
cld
jo
mov
mov
gs
int
hlt
fisttpl
mov
mov
pop
shll
cmp
adc
incb
cmp
mov
arpl
adc
mov
ljmp
arpl
fsubr
xor
subl
xorl
ja
pop
sbb
enter
mov
addl
mov
dec
movsl
pop
mov
jno
orb
jnp
sbb
sti
sbb
fs
bound
sub
out
mov
or
fdivr
andl
jne
jno
mov
jmp
in
push
mov
add
xchg
insb
test
push
pop
jne
cmpsb
sbb
push
push
andl
add
fwait
lods
test
cmp
push
icebp
lahf
fistpll
movsb
fisubrl
xlat
ret
ror
out
jg
jge
and
pushf
sub
push
ljmp
mov
ret
mov
nop
out
jmp
nop
pop
push
ficomps
add
dec
sub
outsb
dec
sbb
mov
movsl
fwait
int3
aaa
xlat
sbb
fcoml
rcl
das
into
mov
inc
mov
add
push
bound
add
lret
xor
loop
jbe
fs
inc
mov
mov
mov
xchg
shrb
inc
aas
and
andl
aam
xchg
jae
dec
push
pop
ds
xorb
cmpsl
jnp
push
cmp
repnz
imul
dec
jge
in
add
dec
cmc
mov
mov
lcall
pop
jg
dec
pop
gs
jb
sbb
push
or
js
fcmovb
pop
arpl
addr16
cmp
testb
jl
roll
cmpsl
std
stos
movsb
push
popa
cmp
fisubl
mov
xchg
fldenv
push
mov
aas
xchg
sub
mov
add
mov
mov
push
push
cmp
mov
fnstsw
ljmp
mov
ds
movsl
hlt
lods
mov
or
push
aam
lahf
sub
cld
push
dec
cmp
dec
cs
in
lcall
in
lahf
fisubrs
pop
test
inc
or
mov
push
sbb
aaa
jp
aas
pop
sbb
and
dec
pop
fs
aaa
xor
lods
lods
es
jns
dec
mov
pop
repnz
pop
fidivl
insb
or
xorl
and
mov
lds
adc
lret
cmpb
stos
subb
pop
outsl
cltd
inc
xchg
pop
lahf
adc
mov
pop
orl
xor
pop
or
data16
dec
xchg
loope
inc
dec
xchg
in
pop
push
or
bound
lods
cli
stos
jo
mov
push
push
mov
repnz
add
frstor
inc
jge
push
push
mov
jo
pop
out
out
test
sbb
ret
sub
xchg
sub
mov
jle
mov
jg
mov
and
icebp
data16
lea
pusha
icebp
lock
imul
popa
mov
inc
negb
lods
jno
daa
out
mov
pop
test
out
shll
lcall
mov
jge
push
ret
fldcw
pushw
test
pop
lret
and
fucomp
pop
adc
mov
xchg
js
push
je
or
loope
rolb
shr
test
jne
loopne
in
mov
add
arpl
push
cmp
scas
mov
xlat
aas
loopne
sbb
add
xorl
sar
or
sbb
iret
mov
add
and
mov
jne
shlb
out
fcmovbe
lock
pop
fstpl
jg
insb
push
xor
lods
mov
stc
cltd
mov
xchg
jo
idivl
sbb
jbe
inc
adc
and
and
dec
hlt
int
pop
inc
lahf
sub
fs
push
mov
aam
aam
sbb
push
cmp
cltd
xor
jo
jae
adc
pop
fdivl
lods
adc
inc
addr16
insb
fmulp
cmpsb
jp
ror
mov
cli
push
sub
or
in
mov
xlat
cmpsb
fdivs
push
sbb
lds
add
pop
add
xchg
jb
mov
cmp
inc
int
das
jnp
push
push
jnp
cmpsb
gs
insb
cmp
dec
mov
jmp
pop
test
testb
int
mov
mov
xlat
sbb
jnp
push
sbb
stos
les
popf
int3
jge
test
je
outsl
sbb
mov
adc
cltd
ljmp
dec
mov
adc
dec
shrl
push
inc
in
imul
rep
inc
mov
inc
test
jecxz
cmpsl
cmp
stos
xchg
subl
adc
ljmp
in
fstpl
or
lahf
push
es
mov
jae
jne
scas
jns
cmp
cmp
mov
mov
push
jle
rclb
push
lds
sbbl
cmp
fnclex
push
xchg
mov
cmp
sub
out
dec
outsl
xchg
fistpl
add
pop
push
cs
mov
mov
bound
jle
and
or
vpmaddwd
rolb
ret
pop
inc
enter
mov
pop
addr16
sbbl
popa
dec
xor
and
dec
xchg
in
out
push
inc
leave
sub
jo
ja
push
sub
or
cltd
shlb
xorl
daa
je
addr16
fcomip
insb
js
and
and
imul
sub
jno
pop
fbld
icebp
jl
fcomp
cli
orl
mov
dec
sbb
sbb
xor
adc
out
je
test
leave
mov
call
or
add
lods
lcall
and
or
jle
aam
mov
sub
popf
insl
cmp
cmc
or
lahf
arpl
fiaddl
pop
jae
sar
out
ficoml
pop
sbb
loop
pop
data16
mov
and
mov
mov
cmpsl
cmp
and
mov
sahf
inc
mov
push
push
pop
inc
je
ljmp
push
mov
mov
shll
aam
sbb
pop
hlt
cmp
xchg
push
js
and
xor
pop
aaa
jmp
imul
cmp
repz
xchg
je
pop
int
or
adc
das
push
or
out
outsl
and
add
add
push
and
mov
inc
xchg
repz
jne
jle
data16
mov
add
jl
loope
shrb
jge
and
mov
lods
adc
cmp
xor
insl
jns
xchg
loop
outsl
aas
and
inc
repz
out
xorb
imul
jns
mov
enter
add
mul
adc
jae
fsubrl
cmp
mov
pop
inc
sub
mov
mov
pushf
jbe
adcl
adc
cwtl
dec
cwtl
lods
mov
cmc
outsl
repz
insl
dec
das
or
mov
lods
sub
pop
mov
sbb
cmc
cs
lret
mov
cmp
adc
push
addr16
out
ss
push
sub
outsl
jl
xchg
xchg
insb
ffreep
jne
mov
mov
stos
test
xchg
outsb
lods
push
jecxz
inc
mov
scas
and
inc
inc
sti
mov
cmpb
test
sbb
add
mov
or
xchg
lcall
iret
xchg
sub
mov
icebp
sbb
into
pop
sahf
inc
adc
push
mov
lods
dec
xchg
pop
jge
fsubrl
pop
or
cmp
pop
hlt
sbb
addr16
inc
insb
arpl
pusha
add
xchg
push
test
pop
cltd
push
mov
cs
dec
or
in
dec
lds
je
fs
dec
push
cwtl
sti
push
or
shr
dec
jbe
inc
arpl
pop
divl
test
lock
outsl
jmp
sbb
jmp
fsubrp
adcl
fstps
adc
out
pop
mov
outsb
stos
or
fidivs
test
jb
and
pop
push
cmpsl
fiaddl
fimull
call
xchg
sbb
cli
pusha
stc
and
mov
aad
outsb
mov
push
ss
mov
fmuls
mov
test
jns
out
mov
xor
std
push
insb
pop
dec
xor
ja
or
scas
jbe
pop
pop
xchg
sahf
fsubr
lea
jo
mov
push
add
mov
iret
stc
loop
fs
das
push
push
sar
dec
rcll
outsb
rcrb
sti
stos
aad
add
lret
or
inc
test
mov
xchg
push
aas
pop
nop
adc
pop
dec
jp
adc
or
xor
add
inc
inc
fbstp
sbb
mov
xchg
and
cmp
jbe
add
in
inc
mov
roll
shll
jo
or
sbbb
lods
test
in
pop
jmp
mov
in
into
inc
cmpl
cli
test
cs
add
nop
and
and
lea
sbb
mov
shll
flds
xchg
pop
fstpt
int3
imul
insl
repnz
xor
gs
rcl
hlt
jo
pop
inc
cli
mov
pop
mov
js
mov
add
fstps
fisubl
cmp
inc
fistps
jae
stos
mov
sub
loop
cli
push
sub
adc
jnp
stos
mov
int
stc
mov
xchg
push
test
sub
cmp
out
sbb
mov
clc
fdiv
pusha
lret
cmp
outsl
sbb
mov
push
icebp
mov
stos
sti
subl
push
das
pop
jge
imul
adc
ja
push
nop
add
sahf
out
adc
icebp
push
imul
leave
ja
aad
outsb
int3
cmp
or
sbb
lcall
mov
cmp
push
mov
xchg
xchg
mov
out
jnp
int
test
iret
fsubrl
push
sarl
adc
dec
jns
call
and
les
push
lds
mov
pop
pause
dec
addr16
pop
fwait
rcl
scas
rolb
push
or
sub
pop
xor
mov
test
mov
ljmp
bound
imul
pop
xchg
int3
add
pop
shr
ret
mov
pop
push
imul
aaa
cli
add
cmp
fisubrs
cs
push
test
mov
scas
shll
cmp
pop
cld
aad
stc
add
or
dec
out
cmp
je
xchg
xchg
cmp
sub
cld
sbb
push
pop
add
pop
aam
sbb
cmp
mov
dec
jp
push
pop
sub
or
add
loopne
inc
test
cmp
push
test
cmc
dec
inc
push
clc
sbb
mov
pop
rcl
enter
adc
push
inc
push
or
mov
xchg
cmp
rcl
leave
lcall
outsl
mov
mov
in
jmp
aas
and
aad
outsb
repz
and
stos
addb
xor
sub
and
or
stos
sti
clc
loopne
pop
pop
adcb
inc
mov
out
jae
ficoml
enter
jge
add
call
push
xchg
pop
aad
pushf
in
jecxz
mov
int3
movsb
pop
movsl
dec
mov
xor
outsl
ja
iret
fsubp
cli
in
clc
jp
popf
mov
mov
xor
dec
popl
test
stos
sub
sbb
pop
sbb
out
inc
xor
dec
lcall
sti
xor
or
and
int3
lods
xor
and
daa
and
adc
lods
cmp
pop
int3
xchg
ret
jmp
adc
sbb
jo
aam
loop
ds
aas
outsl
insb
enter
push
out
sbb
pop
loope
iret
inc
jb
push
sbb
scas
lea
mov
cmpl
cmp
ret
adc
data16
andb
fcom
fwait
or
add
mov
icebp
and
nop
fstl
and
shlb
lret
icebp
jp
jne
xchg
fmull
push
mov
loope
mov
in
imul
jae
xor
or
shrb
lahf
push
out
mov
stc
inc
add
cmc
mov
add
jle
cmc
pop
jae
in
dec
mov
and
ret
push
push
sar
ficoml
mov
loope
jbe
cmp
push
testl
mov
cmp
inc
mov
mov
mov
in
jno
lds
sbb
fdivp
or
jne
mov
cmp
int3
das
clc
mov
pop
sbb
ds
outsl
cs
test
jl
movsl
das
mov
xor
or
shr
cmp
push
mov
inc
daa
hlt
adcb
sub
ror
add
lock
jecxz
and
je
in
nopl
and
adc
sti
cmc
ss
mov
and
scas
leave
sub
hlt
fwait
dec
cld
add
adcl
push
add
fsubl
loop
into
sub
add
mov
int
imul
out
push
flds
jge
mov
jo
mov
or
pop
les
mov
cwtl
cmpsb
mov
dec
push
cwtl
mov
sahf
inc
roll
mov
cwtl
push
ljmp
fmuls
or
mov
lcall
movsb
ds
clc
movsl
dec
push
enter
ret
jbe
dec
mov
cmp
dec
fstpl
xchg
movsb
sbb
aam
dec
repnz
add
fidivrl
push
cld
sbb
aad
xchg
daa
sti
dec
sbb
aam
or
push
mov
repz
into
inc
fidivrs
pop
pop
lods
aam
inc
imul
mov
inc
test
mov
adc
in
lods
cmp
push
mov
mov
cwtl
and
sbb
stos
out
aam
jge
jb
xor
in
dec
sahf
rcl
mov
add
cmp
movsl
das
add
pop
dec
mov
out
xor
or
sub
mov
cmp
imul
pop
xchg
add
jne
and
mov
mov
xlat
dec
mov
addr16
inc
inc
leave
push
push
xchg
cmp
xchg
arpl
jns
sahf
or
cmpsb
cwtl
xchg
mov
jmp
xlat
subb
cld
xchg
push
xchg
and
mov
cmp
ror
ret
jge
push
push
insl
je
inc
jmp
les
cmp
cmp
mov
rolb
push
imul
xchg
test
mov
cli
jnp
loopne
cmp
inc
add
clc
jmp
mov
jg
int3
dec
std
scas
cmc
mov
adc
jecxz
push
cmp
inc
push
insb
test
in
int
dec
jp
xor
adc
sbb
test
adc
adc
leave
pop
imul
mov
sti
mov
gs
enter
mov
lods
and
jno
ss
cmp
mov
inc
repz
sahf
push
add
pushf
push
imull
dec
lods
call
ljmp
fisubs
pop
jle
ljmp
test
dec
insb
movsl
fiaddl
js
mov
and
lcall
mov
out
testb
add
mov
jp
hlt
dec
jmp
mov
dec
sub
dec
pop
pop
outsb
je
xchg
sbb
pop
or
shr
daa
mov
scas
dec
inc
iret
jns
push
es
adc
add
sbbl
push
xchg
and
inc
push
push
mov
frstor
das
aas
mov
inc
shlb
push
imul
and
les
popl
sbb
rorb
rcr
adc
mov
stos
jecxz
sarl
sub
mov
dec
clc
jno
rcrl
pop
out
or
xchg
popa
and
xor
stos
mov
lds
fmull
orl
stos
push
mov
insb
pop
xchg
dec
lret
inc
sub
adc
ja
cmpsb
incb
adc
mov
jbe
xchg
jge
jo
stc
int
movsl
scas
push
lret
dec
xchg
sub
in
test
shll
cmp
push
push
cli
and
jecxz
addr16
clc
xchg
add
sub
add
mov
out
cmp
lcall
inc
je
sti
mov
mov
mov
lahf
in
sub
test
xchg
xchg
je
mov
mov
lcall
xchg
sub
jg
fwait
push
inc
jp
push
test
sbb
mov
ja
idivb
inc
xchg
add
mov
out
std
in
and
cmp
sarl
stos
repnz
mov
mov
sub
dec
lahf
lret
jne
icebp
jae
cli
fldenv
cmpsl
sbb
fdivs
sub
mov
adc
loope
add
stos
push
adc
or
inc
pop
or
pop
cld
movsl
rorb
cli
cmp
cwtl
lcall
sbb
mov
in
sub
fildll
and
sti
xor
and
pop
mov
mov
std
je
cli
lods
cmp
es
cld
aam
mov
ljmp
or
test
pop
adcb
into
mov
cmp
loopne
in
mov
adc
leave
sbb
les
insl
iret
imul
pop
push
daa
dec
mov
push
mov
adc
xchg
xlat
es
and
inc
loop
aas
shl
xchg
aam
jg
ds
shl
xor
add
fwait
mov
jne
mov
sub
and
mov
lods
and
mov
push
scas
cs
repnz
rcrl
das
std
mov
pop
mov
dec
mov
test
dec
push
je
or
and
jle
add
imul
decb
push
xor
jns
pop
pop
fwait
lcall
jmp
lret
push
or
out
push
inc
scas
lcall
push
mov
lds
outsl
adc
sbb
cld
fadd
xchg
mov
jnp
cmp
mov
lret
test
iret
js
dec
data16
mov
push
cltd
loop
sbb
push
mov
adc
sbb
mov
into
jbe
in
inc
pop
dec
inc
push
mov
push
add
lahf
sub
pop
mov
xor
sub
popf
pop
xor
xor
ds
adc
pop
cmpsb
xor
mov
mov
mov
in
mov
pop
fmuls
iret
faddl
inc
jge
insb
sbb
sbb
pop
idivb
xor
push
jno
and
cld
lods
sbb
mov
les
jmp
aaa
out
outsb
iret
jecxz
addl
jnp
cmp
jbe
push
mov
mov
push
sub
sub
xchg
push
shl
xchg
mov
push
repnz
mov
scas
aad
cltd
jb
fld
mov
leave
pop
inc
add
pop
or
add
enter
out
mov
sti
push
push
jp
add
loope
push
xor
test
or
popa
hlt
sub
dec
rorb
push
je
push
push
xor
imul
dec
popf
and
int3
lret
add
sbb
arpl
cmpsb
imul
scas
aam
mov
pop
jecxz
insl
jbe
rcl
or
cld
outsl
pop
rol
inc
mov
test
mov
dec
jne
jo
jns
sub
cld
js
hlt
in
xor
adc
daa
jl
scas
xchg
add
jno
mov
shlb
testb
push
nop
jno
mov
and
hlt
xchg
push
jecxz
scas
iret
inc
mov
test
pop
sbbl
imul
stc
jle
pop
adc
mov
jns
std
lock
lock
fisttps
fsubrl
mov
xor
dec
scas
call
jmp
frstor
pop
leave
mov
hlt
lock
inc
pop
mov
and
and
fnstsw
iret
lret
xchg
mov
mov
clc
inc
rorb
push
loopne
pop
in
pop
lea
mov
lea
pop
andl
aad
push
mov
xchg
xchg
call
push
pushf
js
xchg
xchg
and
add
xor
aas
mov
lahf
pushl
mov
fdivl
or
push
imul
or
push
int3
or
mov
adc
cwtl
shrb
mov
push
loopne
sbb
adc
and
movsb
sub
fwait
movsl
inc
outsl
test
sub
movsl
rorl
lock
cwtl
mov
mov
dec
imul
xchg
cmp
mov
mov
dec
enter
cwtl
stos
cltd
xlat
jle
movl
jo
dec
clc
dec
aaa
mov
pop
push
outsl
xchg
and
int
adc
pop
aam
mov
pop
mov
xchg
jp
and
cmp
dec
imul
jmp
imul
inc
xor
mov
xlat
adc
test
jbe
pop
push
ret
leave
shll
rolb
dec
sbb
xor
cld
cmpsb
popa
jne
sbb
cmp
stos
in
adc
hlt
or
dec
std
test
in
sbb
lcall
rcrb
cld
and
or
mov
das
aaa
cmp
jl
xor
sbb
push
cmp
pop
push
test
push
xor
and
sbb
icebp
mov
cld
add
xor
mov
loop
xchg
cmp
fcmovnu
mov
cmp
mov
movsb
and
test
pusha
aad
jb
aaa
movsl
sub
faddl
gs
inc
jl
adc
xchg
lods
push
ret
in
test
out
mov
in
std
push
jbe
jns
negl
insb
add
addr16
jb
mov
bnd
js
mov
and
loope
jmp
mov
int3
popf
loopne
fsubs
push
push
int
roll
fmuls
pop
insl
mov
xchg
inc
jg
jo
mov
sub
rorb
pop
or
into
roll
xchg
ror
cmovs
inc
daa
dec
movsl
mov
leave
add
cld
js
unpckhps
mov
test
adc
sbb
push
lahf
or
insb
out
push
dec
aam
mov
pushf
and
test
push
jb
mov
movsl
adc
idiv
mov
jne
test
fwait
push
in
icebp
jmp
popf
sbb
icebp
ret
sbb
push
rorb
cld
cmp
xchg
xor
out
dec
mov
fldt
cmpl
pop
arpl
lods
filds
push
fistl
test
sub
mov
hlt
jb
and
aaa
inc
loope
roll
dec
inc
or
in
jmp
subl
lods
xchg
das
ud0
and
pop
add
inc
inc
mov
sub
jle
or
pop
jle
dec
mov
mov
outsl
lcall
enter
push
repz
int3
add
sbb
add
rclb
add
out
scas
mov
or
pop
add
adc
and
shrl
into
mov
stos
push
in
mov
cld
push
pop
xor
pop
andb
pop
ficoml
lea
inc
mov
inc
lods
lea
filds
mov
jmp
leave
mov
lds
cltd
and
out
push
jbe
jle
sub
ljmp
pop
aas
icebp
xchg
mov
mov
or
mov
cmpsb
xchg
aas
or
fdivl
mov
jge
scas
mov
loope
aad
add
ljmp
push
fwait
call
push
pop
sub
cmpb
inc
push
jl
shr
rep
call
inc
mov
dec
pop
cmc
jb
mov
sbbl
add
jmp
or
sti
leave
pop
loope
mov
or
mov
xorl
cmp
dec
and
shr
icebp
loope
vshufps
xchg
das
add
mov
fcmovu
dec
xor
popa
sub
add
stos
mov
cmpsb
cmc
loop
or
test
icebp
cmp
mov
mov
sub
cmpsb
or
jp
mov
fs
out
fsubrs
pop
ss
rol
xor
ljmp
dec
mov
jbe
fs
sub
jl
jae
xchg
adc
fsts
stos
adc
pop
mov
push
imul
mov
mov
push
jne
jns
push
dec
pop
adc
mov
xchg
out
mov
loope
lcall
fs
in
js
insl
jecxz
stos
adc
push
mov
in
xchg
xchg
fcomps
sbb
push
test
jge
data16
adc
jmp
pop
xchg
movsl
cld
imul
pop
sbb
xor
push
adc
stos
pop
ja
pop
dec
xor
and
ret
fldz
pop
shl
push
orl
ret
mov
cmpsl
jne
pop
add
in
push
adc
sar
lock
pusha
ljmp
outsb
lock
out
pusha
fs
pop
daa
or
sub
mov
cmpsl
ret
sarb
clc
sti
jle
push
sbb
jecxz
xor
movsb
inc
dec
xor
popf
cmpsb
fwait
jl
push
mov
xchg
mov
rclb
mov
or
cmp
mov
dec
mov
push
ret
mov
lds
jl
stos
psubw
clc
or
sub
js
xor
adc
idiv
aas
fptan
push
movsl
inc
std
fwait
xchg
xchg
lods
lds
adc
insb
pop
jo
or
push
pop
mov
gs
xor
or
mov
mov
aad
aad
testl
aas
test
fnstcw
and
arpl
lods
mov
xchg
xor
push
add
fidivl
push
mov
jecxz
cld
aam
mov
mov
mov
cltd
xor
or
pop
shll
test
nop
pop
imul
dec
mov
aaa
outsl
mov
cld
test
push
cmpsw
js
dec
outsb
xor
ret
dec
ret
mov
sub
xchg
clc
adc
or
sub
popf
movsb
cmp
add
pop
mov
pop
xor
mov
pop
div
insl
jecxz
sbb
mov
loop
ja
scas
jb
dec
xchg
sub
stos
sub
pop
sarb
xchg
xor
sti
popf
cmpsb
lods
mov
test
pop
sbbb
subb
jns
cmp
sbb
xchg
data16
and
sbb
ljmp
and
imul
inc
clc
lret
rcrb
in
repz
xorl
jmp
jo
fsubr
inc
xlat
je
xchg
es
fcomp
int
mov
stos
jmp
push
xor
dec
pop
sbb
pop
lret
adc
sbb
pushf
addr16
jle
sar
add
mov
mov
dec
jge
movsb
fs
xorl
sbb
leave
iret
insl
push
iret
notb
faddp
jge
andl
ds
mov
loop
iret
sbb
add
dec
jmp
jae
push
lret
nop
jg
cltd
mov
das
shrl
leave
ret
in
sub
mov
jmp
movsl
inc
dec
in
aam
shll
inc
stc
es
or
or
mov
or
out
sbb
std
adcl
insb
imulb
loop
xchg
ror
lahf
mov
fbld
fwait
pop
setge
mov
pop
cmpsl
rcrb
imul
pushf
fadds
addl
cwtl
cmp
ret
mov
stos
into
fiadds
mov
mov
cld
fdivs
cmpl
dec
cmc
in
fldcw
adc
sbb
in
cmp
out
in
rcll
pusha
inc
sbb
lea
rol
dec
jecxz
jns
jl
jno
leave
xchg
xorl
jno
jae
pop
and
lds
inc
pop
and
jge
xchg
enter
xlat
sbb
inc
imulb
add
and
mov
imull
mov
sbb
dec
iret
repnz
rorb
pop
mov
or
xchg
jnp
push
out
fiadds
cltd
div
and
mov
rcll
jl
inc
scas
xchg
push
aaa
popf
dec
mov
inc
xchg
int3
cmc
xchg
fisttpll
xlat
and
out
push
cmpsl
scas
cs
push
repz
out
pop
mov
cmpsl
shl
cmp
subl
fnstsw
adc
adc
or
pop
add
fwait
leave
sbb
inc
outsb
or
push
adc
push
inc
stc
adc
mov
cmpsb
popf
nop
jmp
push
push
push
mov
cmp
mov
adc
std
shrl
cmp
rol
rcll
and
inc
scas
xlat
outsl
cmp
int
in
pop
jo
and
adc
std
adc
fs
adc
fsubp
mov
das
in
push
mov
and
test
hlt
ud1
adc
scas
push
cs
int3
test
mov
fwait
lahf
add
xor
in
inc
mov
sbb
fcmovnu
xor
rorl
push
xchg
or
push
lret
jge
js
aam
cs
xor
add
shrb
sbb
jl
push
and
jl
fidivs
jge
add
mov
fistl
cmp
cmp
adc
sub
inc
popf
roll
adcb
mov
insl
ret
xchg
out
inc
lods
xchg
rcrb
cld
adc
dec
xchg
xchg
lods
sbb
adc
push
jno
jo
test
rorb
je
and
out
cld
andb
xchg
push
mov
mov
inc
mov
and
cmp
call
pushf
push
push
lds
dec
fstpt
inc
inc
inc
dec
stc
cmc
push
dec
ret
push
mov
cltd
or
jg
mov
dec
jp
sbb
jnp
test
ljmp
inc
rclb
cmp
repnz
mov
pop
fwait
aam
and
cwtl
xor
enter
sahf
pop
mov
xlat
mov
out
addb
and
movsb
mov
adc
lods
adc
in
xor
push
insl
leave
or
stc
xchg
aas
das
jmp
pop
pop
push
js
cwtl
pop
push
lcall
cmpsb
mov
aas
daa
sub
cmc
stos
cmpsb
mov
fistl
ss
out
xlat
xor
aaa
lods
fmulp
or
xchg
stos
xchg
mov
fsubl
outsb
add
sub
xchg
inc
subb
rolb
lret
mov
lret
sub
push
inc
mov
mov
and
add
lock
in
stc
data16
aam
or
mov
cmp
int
sar
jl
sahf
mov
lret
mov
push
lock
add
jbe
jg
fcmovnb
sub
push
scas
fwait
sub
and
push
mov
cmpsb
dec
pop
push
cmpb
mov
mov
sbb
cmpsl
pop
aaa
cmp
sbb
mov
fiadds
movsl
cmp
add
das
or
mov
mov
jns
mov
inc
xlat
xchg
aas
das
js
fwait
inc
jns
or
mov
fldenv
out
jae
aas
or
outsb
leave
mov
stos
jle
in
ds
ficoml
xlat
loop
xor
sub
sbb
and
lods
aas
leave
lds
cmc
jmp
pop
outsl
jb,pn
adc
push
fsubrs
dec
daa
sysret
inc
subl
insl
adc
xchg
or
dec
push
dec
push
jmp
mov
xchg
decb
cmp
pushf
fs
enter
sub
adc
fstps
mov
pop
out
fdivrs
jo
jl
dec
mov
int
pop
cmp
mov
mov
mov
js
xor
negb
xchg
jns
or
pop
jmp
data16
fsubr
push
pop
xor
loope
pop
cmp
adc
and
fbld
sub
call
fisttpl
clc
scas
jns
dec
xor
imull
xorb
push
stos
inc
mov
inc
repz
inc
push
test
inc
mov
xchg
mov
pop
dec
add
loopne
leave
push
and
pop
mov
testb
aam
jb
cmp
push
xchg
adc
push
je
add
sbb
rorl
xchg
cwtl
filds
sarb
aaa
sbb
int3
movsl
sbb
lods
repz
mov
jnp
adc
push
lods
sub
mov
lahf
daa
fisubl
or
mov
xchg
inc
mov
mov
int3
stc
ja
mov
scas
add
in
popa
lcall
push
jno
subb
mov
push
das
arpl
sub
sbbb
in
rclb
fistps
sub
lds
sbb
in
jb
ret
jnp
xor
and
mov
ljmp
imul
cmpsb
jle
adc
or
or
cld
fiaddl
outsl
shr
mov
mov
rclb
xor
cltd
hlt
mov
out
push
test
outsb
jnp
or
inc
jns
cmp
or
mov
push
jecxz
out
sbb
pop
orl
cld
cmp
rcr
mov
shll
xor
or
mov
aad
xchg
cmpsl
adc
ss
jge
enter
sub
cmpsl
mov
mov
fadds
push
push
popf
popa
sbb
dec
fdivs
lret
stos
jmp
dec
cmc
hlt
add
or
loope
jl
call
mov
enter
pop
xchg
lods
cli
pushf
pop
lods
aas
pop
movsl
push
xchg
mov
mov
mov
sti
mov
cmpsl
out
lods
popf
fwait
das
in
outsl
add
int
jo
mov
xchg
jl
pop
dec
imul
push
dec
sub
mov
mov
mov
xlat
xor
mov
inc
cs
stc
ss
xchg
hlt
sti
sbb
rcrb
sbb
aaa
fdivl
cltd
mov
xchg
push
jo
call
jl
andl
in
xchg
cmp
enter
cmc
push
sbb
inc
mov
lret
xor
ret
pushf
fldl
xchg
mov
sbb
lea
stos
xlat
mov
sbb
lods
pop
loope
lea
arpl
xchg
lcall
cmovle
int
xor
aaa
cmp
aad
daa
inc
sarb
insb
mov
or
jnp
mov
gs
test
sbb
cmpl
cmc
xchg
mov
push
fisubrs
rclb
pop
repnz
test
xor
inc
sbb
xchg
adc
push
test
test
in
xor
and
insl
ds
xor
inc
shlb
fwait
iret
scas
loop
cmp
push
jg
or
call
inc
out
inc
dec
scas
and
mov
mov
movsb
mov
sub
mov
jge
outsb
ficomps
push
and
fucomi
xor
clc
popf
jmp
loopne
hlt
xchg
inc
jl
mov
loope
mov
imul
cld
cmpsl
dec
fisubl
cltd
sub
ja
int3
out
fwait
cmp
ljmp
andl
cmp
sahf
in
add
fsubrl
loopne
xchg
dec
cmpsl
dec
mov
fldt
fbstp
push
push
push
sbb
jnp
std
pop
mov
int
test
cmp
out
out
jp
xor
clc
push
aam
lcall
out
jp
add
or
fnstsw
jb
in
cmpl
and
ret
xchg
jns
and
in
mov
data16
cmpsl
movsl
cmpsb
mov
cld
add
push
rcrl
insb
pop
push
mov
test
push
or
movsb
popf
in
test
xchg
jnp
inc
cmpsb
dec
adc
jb
pop
add
add
adc
movsb
pop
out
cli
sbb
ret
pop
roll
outsb
std
movsb
mov
inc
mov
lcall
dec
add
ja
mov
jne
imul
xchg
sub
sub
xchg
aam
jnp
and
cmpsl
and
scas
outsb
mov
imul
add
push
lock
mov
sbb
repz
lret
xchg
scas
push
sub
xor
mov
outsb
fwait
aad
out
inc
imulb
adc
outsb
cmp
cmpsb
mov
outsb
mov
into
pop
fscale
mov
insb
mov
fistpll
les
outsb
std
and
mov
xchg
ljmp
dec
lds
jl
mov
jg
icebp
mov
sub
mov
cmc
out
pop
lods
cmpsl
out
shrl
popa
stos
popa
shrl
jae
fidivrs
in
push
jo
stc
hlt
dec
sub
in
nop
mov
mov
add
jbe
insb
movsl
add
in
jge
sti
enter
das
test
mov
pop
inc
repz
int3
notb
negb
xchg
cmp
push
ja
jnp
movsb
fs
ret
mov
pop
sbbb
daa
fdivrs
mov
fs
inc
insb
lret
sbb
push
rcrl
jae
notl
in
sbb
repz
push
cs
sub
leave
mov
sub
fsubrl
lret
jecxz
push
fs
dec
shrb
cmp
xor
aad
dec
mov
sub
ret
cmp
dec
fisttpl
sbb
dec
dec
sbb
loopne
dec
sub
cmp
inc
mov
cmp
add
xchg
push
ficoml
jns
xchg
lock
cmp
stc
test
push
int3
orb
mov
test
push
scas
dec
mov
imul
lahf
cmp
pushf
jo
mul
stos
jecxz
dec
jg
test
mov
jge
out
mov
daa
cmp
pop
and
rcll
aad
push
fisubrs
fistpl
sub
es
arpl
push
movsb
ret
xor
into
insl
movsb
inc
popf
loop
sbb
jl
mov
xchg
out
shrl
jl
cmpsl
push
jmp
std
inc
cmpsb
js
fisttps
mov
mov
inc
pop
pop
mov
mov
mov
nop
jmp
fisubl
stc
in
inc
lcall
cmp
les
mov
mov
sti
xor
push
mov
sub
movsl
rcrb
adc
js
adc
mov
inc
frstor
stos
fmuls
push
mov
dec
and
cltd
push
sbb
dec
fs
jp
test
jmp
je
popa
cmpb
add
negb
pop
lahf
jecxz
adc
xchg
xchg
ret
lahf
jae
sbb
je
and
sbb
out
and
movsl
outsl
sub
pop
clc
ret
lds
pop
sti
mov
cld
shr
incb
and
push
jg
data16
shlb
jmp
xchg
fyl2x
sarb
int3
or
gs
push
push
cli
lods
xchg
jnp
mov
popl
ror
sahf
push
mov
fdivs
das
insl
or
aam
clc
sarl
ljmp
inc
flds
lods
in
pop
andb
rcr
fs
int
loop
into
xorl
inc
push
pop
sub
rcrb
in
mov
lcall
fdivs
dec
xlat
and
pop
sarb
push
xchg
lea
sti
cltd
aas
out
iret
xchg
insl
cli
or
inc
dec
lcall
dec
lods
sbb
popf
nop
in
orl
pop
hlt
dec
orl
push
test
out
push
dec
push
adc
sub
pop
cmpsl
sub
fucomip
jp
je
xchg
fcmovnb
mov
mov
mov
mov
lcall
mov
mov
pop
les
aad
xchg
call
mov
lock
push
mov
sub
push
push
push
jb
and
adc
loopne
mov
mov
jp
dec
scas
neg
cmp
adc
ja
mov
push
mov
cmp
jl
mov
shrb
mov
clc
movsb
sbb
mov
mov
xchg
shll
jge
xlat
in
add
and
push
jno
pop
inc
add
rolb
sub
cmc
lods
cmp
enter
sub
mov
jge
cmc
js
fbld
xor
jbe
mov
push
and
push
sub
inc
scas
xor
cmp
in
pop
testl
test
test
inc
mov
and
aam
sti
lcall
sub
mov
sbb
pop
ljmp
loop
or
hlt
addr16
add
popf
jp
cwtl
sbb
shlb
xchg
arpl
and
jl
ja
jb
loop
sub
cmp
pop
fcoms
mov
js
rol
or
jae
dec
inc
leave
popa
gs
mov
in
adc
inc
sub
sbb
repnz
rcrb
cwtl
fmull
popl
xchg
out
inc
add
clc
jne
inc
add
inc
jmp
jb
out
pop
fs
jge
pop
mov
add
addl
push
int3
in
add
and
jmp
add
pop
xor
push
pusha
mov
ret
popf
cmp
add
sahf
out
inc
iret
popa
xor
and
out
and
cmpsb
xchg
xchg
dec
out
lret
stc
pop
sbb
fmuls
and
mov
cmpsb
out
loop
add
adc
pop
sarl
clc
icebp
dec
jnp
mulb
add
xchg
sti
sbb
pop
push
mov
cwtl
xor
jle
dec
jp
cmp
lcall
jle
dec
dec
xor
xchg
jae
xchg
imul
loope
pushf
xchg
pop
xor
cli
push
enter
fstpl
add
mov
enter
cmp
xchg
jns
push
mov
lds
jmp
mov
fwait
add
pushf
test
fs
mov
cmpsl
sub
iret
push
scas
bound
in
sbb
xchg
adc
xchg
add
and
or
int
mov
push
xlat
inc
outsb
popa
add
add
push
es
dec
push
fildll
std
push
mov
adc
push
rcr
add
mov
es
mov
aaa
pop
add
scas
dec
jbe
outsl
loopne
mov
pop
adc
das
fwait
mov
or
mov
outsb
sti
pop
imul
cmp
and
jb
jle
pop
pop
sbb
fwait
jp
xlat
and
xchg
jnp
movsb
pop
mov
add
pop
jge
xor
jl
iret
in
out
dec
ficompl
test
sub
sub
or
push
ja
mov
std
stos
popf
xchg
fpatan
dec
popa
sub
dec
jns
pop
dec
cld
sbb
out
pop
pop
in
pop
adc
sub
rolb
cmpl
clc
cltd
and
adc
and
ret
mov
mov
loop
stos
sub
inc
dec
mov
cld
and
add
test
jnp
or
out
imul
pop
fwait
mov
xchg
sbbl
mov
cmp
sub
jae
or
aas
dec
push
int3
enter
fwait
or
lods
out
pop
push
dec
sub
sbb
fstl
icebp
es
pushf
xor
or
insb
dec
and
addr16
push
pop
out
insb
aaa
sti
dec
loopne
or
inc
pop
mov
je
cli
cmc
adc
pop
push
xchg
aam
mov
sbb
and
and
dec
out
cld
jp
call
decl
pop
jecxz
mov
push
dec
xchg
out
sub
out
xlat
sbb
push
add
subb
je
repz
jnp
mov
arpl
pop
add
xor
leave
popa
js
outsb
mov
dec
sub
fcoms
leave
pop
and
sub
je
in
sub
cmc
sbb
jbe
lcall
xchg
mov
or
aam
into
push
sbb
rorb
iret
mov
les
mov
scas
cltd
mov
imul
mov
mov
push
xchg
test
sbb
shrb
adc
test
ja
sub
mov
mov
mov
mov
push
cwtl
popa
loope
int3
or
xor
out
adc
xchg
sbb
mov
out
scas
pop
je
ret
call
xchg
in
outsl
lods
cmp
cmp
in
add
call
dec
inc
cmp
xchg
and
xchg
loopne
movsb
fldt
cmc
mov
cmp
scas
jae
bound
and
sub
mov
dec
fimull
out
movsb
dec
jo
in
imull
jnp
flds
mov
xor
sbb
shll
insl
sti
leave
add
dec
lahf
jnp
in
int3
ja,pt
gs
and
inc
push
pop
loop
jnp
fcompl
push
data16
movsb
cli
outsl
xchg
enter
inc
lock
xchg
jne
cmpsb
ret
or
scas
adc
pop
lea
mov
jne
xchg
cmp
hlt
je
repnz
repz
jle
lret
cli
pushf
xchg
xchg
lods
push
pop
jae
adc
jge
cmpsl
adc
sub
ret
mov
add
pop
aam
mov
scas
sbb
xor
xchg
xchg
aad
movsl
add
add
sub
sbb
mov
addb
mov
lret
nop
ja
push
mov
xchg
and
rcr
cmp
jecxz
or
pop
xchg
jnp
sbb
mov
shll
mov
and
adc
mov
adc
cmc
xchg
movsl
pusha
push
hlt
icebp
cmp
sbb
cmp
xor
cld
frstor
movsl
cld
cli
sub
sarb
lret
xor
cmpsb
addr16
jne
sub
mov
icebp
lahf
sub
inc
add
stc
lret
decl
and
ret
fs
inc
insl
aam
ljmp
mov
mov
pushf
je
sub
test
sub
dec
xchg
push
xorb
push
push
popf
dec
push
popa
imul
fildl
sahf
repz
mov
push
pop
mov
lret
scas
add
and
push
sub
dec
fistps
mov
xchg
out
gs
cmpsl
movsl
cmp
push
mov
clc
jo
dec
adc
jge
into
xchg
and
and
sti
mov
jne
jl
int
xchg
xor
pop
repz
cmp
mov
fwait
int3
pop
outsb
out
out
sbb
add
inc
mov
sti
or
repnz
imul
into
imul
push
ja
cmovg
outsl
fnstsw
pusha
aaa
movsl
jb
xor
pop
or
adc
adc
mov
sbb
or
lea
jno
sbb
cltd
fbld
shll
mov
sbb
stos
ds
push
sbb
in
sbb
repz
call
sbb
mov
stos
shlb
cmp
jnp
ds
push
ja
dec
cmovp
daa
sub
pop
add
jg
add
xchg
call
jbe
adc
ds
xchg
cmp
xor
push
or
popf
xor
sbb
push
sahf
or
push
ficoml
cmp
and
xor
push
xor
jo
lds
stos
das
imul
shl
cmc
mov
inc
sbb
bound
mov
jae
cli
lret
movsb
pop
mov
fidivs
and
inc
into
mov
sar
jo
fcmovu
push
adc
sub
aaa
enter
addb
pop
das
out
stos
dec
xor
mov
or
add
lds
dec
mov
jmp
push
sahf
jp
cmp
pop
sub
popf
aad
adc
imul
call
je
sub
nop
xor
push
inc
push
or
in
mov
mov
cli
cmp
xchg
iret
mov
xor
test
sbb
mov
pop
lahf
mov
jno
xchg
lods
dec
out
and
xchg
fdivrl
dec
mov
add
xchg
xor
inc
mov
clc
xchg
mov
int3
cwtl
int3
fwait
xor
je
aas
sbb
in
pop
sti
mov
xchg
inc
bound
xchg
in
pushl
or
pusha
inc
lret
push
pushf
ret
push
cmp
daa
arpl
jbe
hlt
in
mov
push
stc
mov
out
pop
sbb
or
das
fildl
push
push
dec
xchg
or
not
test
push
std
in
repnz
fdiv
inc
inc
sbb
out
inc
sbb
rclb
ret
les
gs
sahf
stc
cld
pop
push
sub
rcll
xor
int3
jns
mov
out
dec
mov
pop
lret
xchg
pop
lcall
mov
insb
mov
add
sub
dec
cmc
push
xchg
and
lcall
mov
data16
fstpt
scas
lret
push
out
pop
inc
fwait
sub
inc
repnz
fidivrs
cld
imul
sub
arpl
scas
xchg
xchg
cmp
pop
sub
push
repnz
mov
xchg
rol
shll
fmuls
sub
lcall
xlat
push
out
cld
jns
nop
xchg
adc
ljmp
dec
fs
mov
push
test
push
filds
insl
cmp
mov
popf
in
xor
mov
ljmp
push
scas
loopne
cmp
xor
fldenv
cmp
int
sub
pop
inc
out
mov
inc
push
in
inc
lea
aas
movsl
jae
cmp
or
cmp
arpl
cld
xor
inc
ror
outsb
xor
aaa
loop
addr16
enter
sub
jnp
inc
inc
pop
fs
scas
cltd
mov
mov
enter
imul
mov
outsb
xchg
mov
cmp
add
inc
out
lea
cld
pushf
push
lcall
rcl
aad
arpl
jp
inc
mov
inc
and
sbb
shll
pop
scas
incl
clc
xchg
sbb
loop
mov
lock
adc
xchg
repnz
and
sbb
dec
aas
xor
mov
mov
faddl
mov
mov
push
adc
sbbl
sub
sub
loope
imul
xor
pushf
xchg
mov
das
or
jns
pusha
or
fmuls
out
fsubrs
and
pop
push
sub
imul
in
inc
cmp
out
push
out
pop
jl
xor
sbb
and
or
addr16
xchg
scas
inc
stos
es
jbe
cs
add
das
out
mov
sub
subb
pop
ss
dec
xor
jle
and
repnz
jl
fildll
push
push
aad
dec
les
faddl
fcompl
or
sub
ja
push
jo
cmovg
in
test
fdiv
jbe
xchg
inc
in
shrl
es
xchg
das
mov
jmp
dec
stos
rcl
test
scas
jp
das
xchg
icebp
out
xor
push
inc
dec
ret
mov
adc
fwait
and
or
push
and
pop
mov
mov
xchg
and
dec
mov
ficomps
cmp
insb
mov
shrl
pusha
gs
pop
fwait
dec
inc
insl
dec
loop
pop
fistpll
pusha
mov
mov
inc
push
pop
mov
rcll
add
pop
mov
test
cltd
add
dec
enter
lods
popf
xchg
mov
adc
jo
repz
adc
in
rol
or
mov
loopne
sbb
shl
fimuls
cmp
sti
xor
sub
cmp
dec
popf
fistpl
ljmp
div
jmp
mov
sbb
jecxz
in
pop
ss
mov
jne
xchg
movsl
inc
std
sub
xchg
or
into
into
or
xchg
adcb
push
xor
fs
out
push
loop
mov
mov
pop
cmc
fcomip
cmp
adc
iret
lock
cmp
ret
arpl
sbb
fidivrs
or
or
stos
flds
sbb
test
add
js
sbb
mov
mov
or
iret
pop
jnp
push
cmp
push
xor
push
pop
shlb
add
push
insl
adc
jno
adc
ljmp
fdivr
test
mov
aaa
dec
xchg
add
aad
mov
outsl
and
push
jg
push
inc
aaa
jecxz
sbb
lret
and
jmp
push
hlt
fcmove
cli
orl
sbb
mov
enter
outsl
pop
adc
sub
mov
pop
xlat
incb
cmp
andl
dec
adc
jl
pop
not
inc
sahf
mov
ds
adc
les
out
xor
sub
pop
mov
mov
mov
fprem
inc
loope
xor
push
dec
xor
dec
mov
rorb
mov
push
dec
xor
jb
dec
pop
sbb
or
pop
cmp
dec
dec
icebp
pushf
subl
lret
and
push
dec
into
inc
push
mov
fcmovbe
cmpsb
jne
adc
fbstp
jle
mov
xchg
cmp
and
pusha
ret
inc
lods
lret
jp
scas
dec
jne
shlb
push
ljmp
rclb
mov
pop
dec
cld
popa
pop
aad
data16
pop
xchg
push
ret
int3
hlt
movsl
insb
loopne
ret
cli
adc
int3
fstps
mov
jle
sub
jae
ret
subl
call
mov
add
es
adc
jnp
lahf
pop
aad
iret
aas
jae
fildll
push
dec
cmpsl
mov
scas
sub
push
lds
lcall
es
sahf
addr16
xchg
cmpsb
aad
mov
cmp
arpl
call
mov
sbb
mov
fwait
push
mov
fdivl
ret
imul
scas
test
fisubrl
in
loop
or
mov
push
and
xor
stos
cmpsb
dec
and
and
xor
js
mov
out
frstor
mov
filds
xor
roll
push
inc
mov
cs
frstor
aaa
iret
test
ljmp
xchg
aad
mov
scas
jg
test
xchg
aaa
mov
xchg
imul
xchg
xor
add
jge
popa
fildl
jl
mov
push
adc
insl
icebp
mov
add
jmp
mov
mov
das
orl
inc
pop
pop
push
imul
sbb
fnsave
mov
push
cmpsb
pop
sbb
inc
fcoml
scas
stos
add
lods
shl
cli
idivl
sbb
sbb
adcb
cld
push
cli
sbb
mov
pop
aad
jecxz
dec
ss
xchg
mov
push
les
call
ret
adc
ljmp
jne
mov
cmp
sbb
mov
fcoms
cmp
and
pop
pop
cmpsb
mov
pop
xlat
sahf
mov
mov
dec
inc
in
push
sub
in
pop
movsb
lods
ds
mov
xchg
clc
cmp
xor
cmp
or
jp
aad
mov
add
in
xchg
cwtl
cli
movsl
test
cmp
clc
dec
sahf
mov
jne
fildll
mov
and
mov
or
adc
das
or
sub
xor
mov
cmp
movsl
shr
cmp
popf
sub
and
sbb
sti
xchg
mov
lret
cwtl
mov
dec
out
in
or
push
and
add
fwait
inc
out
test
cmp
lea
insl
shr
mov
cmp
aad
leave
inc
cmp
outsl
loop
inc
pop
fldenv
popf
lods
into
dec
mov
loopne
cmp
jo
stc
clc
fstpt
rcrb
aas
sahf
jl
inc
or
inc
inc
sbb
hlt
dec
push
push
cmpsb
jg
imul
clc
lcall
les
xor
xor
outsl
lds
mov
mov
fcoms
jle
xor
and
cli
sti
ds
push
mov
outsl
jno
cmpsb
jbe
das
or
push
and
mov
and
sub
repz
push
sub
cmp
lods
xchg
xor
rcr
xchg
mov
jecxz
adc
and
addr16
cmp
leave
outsb
or
gs
push
in
dec
and
fsubrs
scas
sub
and
xor
jp
mov
jge
mov
into
add
adc
stc
mov
pop
and
es
xor
jne
cltd
repnz
shr
fidivrl
jle
enter
lods
xor
adc
add
insb
inc
xor
hlt
lret
subl
fcmovnu
ss
mov
in
jnp
pop
pop
jle
jno
out
mov
nop
cli
dec
test
pop
es
shlb
push
into
sbb
mov
mov
call
fstpt
or
and
cmp
inc
xchg
add
es
movsl
mov
sub
adc
inc
mov
xchg
lret
sbb
inc
cli
xchg
aam
cld
pop
and
loopne
test
mov
xor
sbb
xor
push
or
sbb
bound
push
iret
repnz
inc
dec
pop
imul
dec
or
out
ret
jne
xchg
adc
add
in
lods
or
xchg
push
pusha
adc
and
add
imulb
sbb
sbb
pop
xchg
lods
sarb
or
cli
in
sbb
dec
jmp
hlt
leave
or
testb
push
mov
negl
int
cmc
add
jmp
dec
lock
jbe
pusha
nop
push
shll
mov
mov
sbb
push
push
leave
clc
mov
es
cli
insb
aaa
push
sti
push
das
sti
into
xchg
push
push
flds
dec
in
lea
push
sbb
sbb
mov
cli
shll
das
iret
aas
popa
jl
insl
or
icebp
mov
imul
push
push
and
aaa
mov
mov
scas
jmp
fwait
mov
sub
sub
nop
pop
ljmp
frstor
mov
ficoml
or
and
mov
jo
lock
imul
adc
sbb
dec
test
lahf
xor
mul
sub
inc
lea
dec
jmp
jo
out
xor
sti
or
cmp
push
mov
repz
scas
pop
and
inc
stos
repnz
jo
cmp
jno
stos
loopne
xlat
jne
shrl
orb
jle
test
inc
bound
test
hlt
adc
stos
bound
jl
jecxz
in
jmp
xchg
xchg
repz
test
xor
lcall
mov
stc
sti
in
and
xor
ljmp
sub
test
xor
lock
mov
sub
mov
outsl
lds
pop
fcmovne
cld
mov
fcomps
adc
push
imul
push
ret
orl
popa
mov
test
xchg
stos
sbb
jle
jns
or
cld
dec
das
fs
leave
fdivrp
and
pop
jmp
test
roll
je
xor
outsb
add
test
ret
aaa
repnz
push
or
sbb
hlt
push
or
test
add
jmp
mov
loope
and
mov
fmul
or
cmp
lahf
or
xchg
aam
icebp
clc
jne
mov
dec
sub
push
pop
mov
out
pop
scas
cmp
and
jmp
xchg
mov
jne
pop
call
std
cmpsb
adc
and
jecxz
mov
mov
mov
push
mov
scas
sbb
adc
mov
cmp
out
cli
ret
bswap
pop
jo
xchg
loop
adc
xchg
xchg
xchg
cltd
pop
pusha
mov
fisttpl
sub
mov
ljmp
adc
mov
pop
inc
pop
push
xlat
scas
cmp
mov
add
aaa
mov
and
mov
vcvtsi2sdl
xor
call
sbb
push
jae
fwait
test
ja
sahf
cld
lds
out
std
lret
das
and
add
sbb
dec
jmp
sbb
or
push
xchg
movsl
adc
ds
shlb
aam
sub
push
subl
test
je
data16
movsl
add
mov
aas
sub
jp
testb
bound
xchg
pop
jmp
push
adc
mov
aaa
shrb
popf
mov
inc
push
ss
lds
add
test
add
xchg
add
cmp
mov
cmp
aam
shrb
sbb
aas
push
test
jns
xchg
xchg
popa
jo
inc
or
ds
cmp
test
out
pop
xor
and
scas
dec
mov
xchg
lcall
pop
insb
pop
clc
mov
sub
xchg
hlt
jge
ret
enter
adc
nop
repnz
cmc
loope
dec
shll
rcrb
push
mov
cwtl
test
test
mov
mov
ffree
dec
leave
mov
and
pop
pop
div
dec
cmp
or
movsl
fnsave
out
and
jecxz
aas
scas
adc
adc
or
fsubp
cmc
outsb
loop
dec
std
pop
adc
int
dec
ret
jbe
dec
pop
cmpsl
fmuls
iret
inc
les
sbb
ret
mov
std
add
insl
mov
fidivrs
cmp
popf
nop
outsl
shrl
sbb
int3
cmp
lock
fmull
repnz
std
out
sub
fildll
sub
in
ficomps
or
xchg
or
xchg
movsb
shl
inc
cli
push
dec
cltd
pop
mov
inc
repz
rcll
in
lods
adc
insb
movd
fbstp
dec
cmp
ret
pop
sub
jbe
out
xchg
rcl
xchg
fnstsw
cli
subl
fcmovbe
sbb
pushf
sti
pushf
std
lcall
loopne
and
or
inc
mov
mov
sub
data16
ljmp
pop
les
rol
mov
cmpb
jle
xchg
mov
test
pop
sub
das
jne
push
xlat
dec
push
jb
xchg
push
sub
imul
mov
and
jg
cltd
dec
dec
or
pop
out
dec
and
xchg
sahf
das
adc
dec
js
cmp
mov
add
jle
push
mov
mov
lret
jmp
inc
sti
sti
fsubs
mov
sti
push
mov
inc
jg
sub
adc
ret
inc
sbb
mov
pop
in
call
and
mov
jne
out
scas
fisubs
aas
fdivl
insb
and
push
sbb
pop
xchg
sahf
jb
fidivrs
mov
or
mov
movsl
fs
insb
pusha
or
mov
jbe
ljmp
jle
mov
in
into
push
sub
sti
out
mov
movb
in
bound
stos
pushf
call
pop
ljmp
sub
stc
mov
lahf
mov
fs
int
inc
fistl
inc
es
push
lock
aaa
mov
mov
mov
loope
jmp
pushf
out
arpl
push
or
inc
lahf
cld
dec
xchg
xor
es
pop
jge
add
adc
stc
or
xchg
ret
sub
pusha
and
dec
adc
ror
push
inc
mov
das
xor
lret
xchg
pop
jnp
xchg
adc
stos
inc
stos
inc
dec
jnp
stos
loope
cmpl
pop
jnp
not
dec
in
mov
inc
test
sbb
sbb
xchg
in
push
or
jecxz
out
pop
jae
fcoms
test
mov
xor
shl
push
cmpsl
jo
xchg
and
hlt
adc
xchg
dec
sbbb
mov
inc
in
test
xor
clc
mov
test
pop
aam
sbb
insb
enter
das
add
fadds
inc
or
les
mov
rcr
sbb
adc
es
pmullw
insb
test
xchg
sub
jnp
loopne
push
negb
loop
mov
pop
stc
loope
mov
adc
jbe
pop
enter
lea
mov
cmp
fnstsw
cltd
jl
mov
cmp
add
inc
mov
scas
gs
jle
add
cld
addr16
xchg
or
cmp
add
add
sbb
popf
and
push
fists
aas
cld
adc
pop
mov
sub
xchg
in
cltd
push
mov
mov
lock
into
push
rcrl
adc
inc
jns
mov
sub
push
mov
sahf
jno
dec
repnz
fadd
pop
pop
sbbl
pop
lea
xchg
loop
xor
mov
adc
push
sbb
fadds
push
fstpt
es
jo
sbb
int
flds
sub
mov
in
or
jl
aaa
xchg
pop
dec
repz
mov
mov
imul
sub
push
add
pop
test
ret
push
sbb
arpl
xor
sahf
lock
pop
in
inc
push
mov
insl
xchg
arpl
xchg
loop
fmul
roll
movsb
jo
insb
sbbb
mov
dec
push
or
sbb
scas
mov
push
sub
and
testl
mov
lods
add
out
xchg
xor
mov
ret
lea
prefetch
mov
adc
xlat
pop
jle
rcrb
sbb
pop
push
xor
cwtl
iret
inc
dec
fsubl
movsl
es
adc
pop
imul
or
std
in
imul
out
pop
sub
mov
add
test
push
ds
out
xrelease
cltd
cld
add
jp
stos
add
push
xchg
js
dec
or
fidivrs
fisttps
adc
test
xchg
aam
jge
mov
add
push
sbb
xor
inc
mov
loopne
jmp
jge
pop
jne
ss
push
aam
cmp
enter
das
notb
imul
movsl
mov
pop
sbb
clc
pavgb
outsl
jno
jmp
cwtl
dec
jecxz
loop
jb
cld
xor
mov
push
or
ljmp
std
mov
ljmp
mov
or
mov
call
mov
out
je
arpl
aad
pushf
and
daa
aas
fwait
push
xchg
add
data16
dec
add
jo
fcmovb
pop
cmp
ja
xchg
cwtl
jne
int
xchg
insl
mov
ljmp
cmp
arpl
sbb
dec
test
mov
rcl
test
setne
sub
insl
dec
ret
imul
fdiv
outsb
xor
add
jmp
xchg
cli
ret
jnp
hlt
mov
xchg
lret
add
sbb
push
outsl
shlb
push
cmc
mov
inc
dec
pop
xchg
fdivs
xor
shr
ja
sub
in
xor
and
or
add
cmp
pop
imul
mov
cltd
pop
insl
xor
arpl
pop
mov
sbb
les
push
xchg
adc
push
iretw
xchg
xchg
xchg
pop
sub
add
repz
je
push
xchg
dec
dec
mov
dec
mov
push
mov
int3
add
adc
mov
test
mov
or
dec
push
inc
sarl
hlt
dec
lods
jmp
push
loop
sbb
jge
cmp
pop
lock
loope
sbb
gs
jge
add
cmp
loopne
in
pop
daa
and
jns
jnp
stos
stc
push
out
out
loope
sbb
cmpsb
das
inc
bound
xor
out
jle
int
mov
fcomps
into
or
dec
icebp
xor
xor
popl
ret
or
shlb
repz
push
bndstx
xchg
adc
dec
loope
xchg
lea
in
mov
clc
and
xchg
xor
shrb
cld
inc
sbb
sub
and
into
jge
and
arpl
and
add
js
fs
les
sub
pusha
popa
es
js
xchg
and
mov
push
ret
inc
iret
mov
inc
mov
jae
fwait
pop
mov
sub
sbb
xchg
mov
adc
cld
jne
mov
pusha
jb
imul
and
mov
add
jno
fidivrl
sbb
mov
xchg
outsl
mov
in
in
cli
push
jle
xchg
mov
add
test
out
mov
sub
mov
dec
inc
inc
jp
dec
cld
js
cmc
or
pop
notb
fwait
jle
jns
scas
jg
jo
mov
add
dec
pop
push
cs
cmpsb
fdivl
lds
out
movsb
dec
dec
and
xchg
push
outsl
iret
stos
or
aad
ljmp
xchg
nop
add
ljmp
test
sub
xor
add
pop
int3
divb
add
sub
jbe
push
rorl
pushf
mov
cltd
ret
ja
pop
add
call
pop
xchg
insl
inc
cmp
aaa
add
stos
lcall
call
cli
das
sbb
cmp
jne
idivl
xlat
popf
adc
xchg
test
jecxz
jnp
sarb
test
jnp
aas
mov
jmp
pop
adc
pop
in
adc
push
mov
imul
int
cmp
out
test
or
jns
xchg
aam
loope
add
dec
out
icebp
mov
scas
push
push
lahf
and
int3
cmp
mov
sbb
mov
xchg
mov
adc
jno
aad
adc
fldl
inc
cli
jle
iret
cmp
xchg
popa
mov
leave
enter
aam
in
inc
cmp
es
bound
dec
dec
loopne
jb
and
mov
mov
in
mov
push
shrl
cmp
inc
les
cli
sbb
mov
mov
int
punpcklwd
mov
ljmp
jmp
sbbb
rcr
jge
mov
out
into
cmp
stc
adc
mov
sub
pop
xchg
shrl
and
adc
xor
xor
lcall
mov
hlt
fstl
xlat
or
dec
lret
aaa
out
mul
jecxz
rcr
pop
repnz
mov
pushf
fdivrl
aad
das
in
fildl
in
shlb
adc
xor
push
mov
and
pop
idivl
push
and
je
pop
shrl
fwait
mov
mov
sub
mov
add
pop
xchg
orl
out
aad
out
ds
icebp
hlt
jns
out
or
pusha
push
or
xlat
xlat
add
jecxz
enter
xchg
imul
rolb
pop
rcll
xchg
outsl
inc
cltd
sub
bound
xchg
lock
movswl
add
fsubr
stos
das
or
shrb
cli
daa
fs
outsb
je
fwait
cld
ja
cmp
jmp
fwait
les
or
jle
movsb
sbb
fstl
test
hlt
pop
imul
cmp
jae
aas
shll
sbb
cmp
add
mov
popf
or
add
cld
mov
dec
scas
pop
cs
es
add
and
fbstp
outsb
push
sahf
mov
mov
jl
mov
insl
gs
xchg
arpl
xchg
xlat
fistpl
inc
sub
cmp
les
adc
fldt
into
aad
jle
rcl
push
stc
daa
jp
outsb
jle
cmp
imul
movsl
and
clc
mov
ljmp
cld
lret
and
es
add
dec
pusha
repz
movb
inc
jge
fyl2x
clc
cld
ror
leave
aam
test
cltd
fnstenv
cmp
mov
inc
or
push
popa
outsb
sbb
aam
adc
jo
or
outsl
mov
cmpps
test
push
loope
xchg
scas
xchg
pop
push
push
mov
adc
and
add
inc
mov
add
repz
insb
into
jmp
popf
jb
adc
sub
and
out
xchg
lds
jl
push
cmp
jecxz
rolb
insb
in
dec
aaa
and
push
jns
xor
mov
inc
clc
movsb
inc
jns
push
in
loop
xchg
add
jb
xor
insb
std
sbbl
insb
enter
cli
jle
fwait
sahf
pop
bound
adc
rcll
lret
push
add
sbb
inc
sub
xchg
pushf
mov
addr16
shlb
pop
cmpl
out
aas
fwait
addr16
icebp
std
inc
lret
mov
mov
dec
pop
xchg
adc
fadds
js
ja
xchg
mov
sbb
jg
push
jge
inc
adc
xchg
jecxz
aaa
fbld
out
int
pop
movsb
inc
movsl
shlb
cltd
pop
xchg
ljmp
pop
das
xchg
scas
pop
push
mov
filds
adc
test
ljmp
mov
add
fmulp
int
sbb
push
add
push
mov
jecxz
notl
mov
imul
leave
cmpb
pop
or
out
inc
lock
cmp
sub
pop
xchg
scas
lds
and
sahf
and
mov
add
sbb
dec
jge
xchg
ds
lods
cmpb
adc
loopne
xchg
out
repnz
sbb
and
xchg
dec
adc
cmpsb
movsb
mov
adcb
and
in
cmp
push
xor
shrb
and
ljmp
pop
ds
and
pushf
and
outsl
popa
imul
sbb
adc
push
imul
pop
out
popf
clc
push
jnp
cmpsl
rcrb
loop
mov
ds
add
push
jp
les
enter
das
or
inc
int3
fwait
test
les
sbb
push
ljmp
lret
adc
lods
sub
js
xchg
sbb
pop
in
mov
cltd
sbb
add
shrl
ds
faddl
jns
gs
jmp
popl
mov
call
lock
les
and
mov
adc
cwtl
lods
cs
nop
push
pop
in
sahf
mov
addr16
sub
popf
pop
movhps
cmp
jge
dec
dec
and
sbb
fistpll
in
cmp
repz
add
cmpsb
add
daa
pop
aas
push
dec
add
push
daa
outsb
movsb
jmp
adc
push
xor
jp
cmpsl
arpl
cltd
nop
mov
repz
ret
dec
inc
je
mov
stos
mov
pop
xchg
icebp
stos
and
mov
push
ret
jbe
mov
mov
mov
push
mov
lea
and
ficoms
not
arpl
jae
dec
shr
mov
aas
mov
test
popf
pop
sub
jp
adc
in
imul
imul
ficoml
pop
sub
jl
push
out
dec
es
lods
in
jae
sbb
jecxz
jmp
adc
sarl
lods
int
adcb
mov
aas
inc
push
add
outsl
sbb
fadd
xchg
add
xchg
hlt
je
pop
out
shr
pop
pop
rcrl
enter
loop
enter
les
fisttpll
xlat
pop
das
cs
test
sarb
or
xor
js
jmp
pop
aaa
test
outsb
xor
cmp
inc
jecxz
mov
sub
and
outsb
mov
mov
scas
pop
or
stos
jmp
inc
cmp
pop
in
into
cld
cmpl
and
jecxz
aad
sbb
push
cmp
scas
pushf
cmpsl
cltd
in
cwtd
jle
movsb
in
test
test
ret
sub
dec
int3
in
pop
lock
or
mov
sub
test
mov
fidivrl
xchg
dec
sbb
inc
pop
fidivrl
push
sub
rsqrtps
loop
insl
stc
mov
andb
daa
and
call
inc
cmp
les
nop
pop
jge
insb
jae
pop
cmp
mov
mov
loop
inc
jmp
outsb
xchg
pop
inc
scas
pop
fisubrl
pop
mov
pop
sub
push
cli
popa
out
xchg
or
jnp
icebp
cwtl
ja
outsb
aas
mov
enter
pop
mov
xor
cltd
je
dec
add
dec
sti
in
arpl
mov
call
mov
inc
dec
lods
or
fsub
popl
insl
adc
jns
mulb
pop
xchg
push
cs
sub
cmc
ss
add
int3
hlt
dec
int3
xchg
sbb
leave
in
out
push
loopne
pop
test
xchg
rcrb
fidivrs
fistpl
mov
or
pop
loop
dec
out
pop
adc
pop
loop
or
int
scas
xchg
xor
xor
or
push
outsb
js
sti
and
adc
std
negb
rcll
mov
decl
daa
nop
adc
mov
sbb
sahf
mov
int
cmp
fabs
std
cmp
cmpsl
cmc
sbb
testb
pop
icebp
rcr
orb
leave
int3
or
adc
aas
or
mov
sub
fldl
push
insl
in
in
xlat
or
jno
mov
mov
mov
mov
lcall
pop
in
sub
int
jne
adc
xchg
mov
pop
frstor
cld
adcb
loope
dec
xor
xor
inc
inc
and
xor
dec
pop
jno
push
imul
jmp
adc
xchg
mov
je
lods
adc
mov
mov
jns
cmp
sahf
outsb
mov
fsubrs
jmp
cli
insb
jne
fldl2e
xor
stos
mov
call
pop
jb
loopne
adc
les
icebp
sti
jmp
sahf
mov
jae
mov
scas
hlt
pop
imull
xchg
daa
lahf
ret
sbb
jp
inc
adc
movsl
into
push
inc
xchg
mov
ret
sarl
aam
aaa
aad
shl
adc
adc
add
les
dec
int3
push
pop
cs
push
movsl
jge
sbb
add
mov
test
push
mov
mov
cmpsl
jmp
in
fmul
mov
jmp
imul
loopne
jg
ss
popa
into
jg
clc
push
dec
cmp
pop
pusha
leave
lret
jecxz
cmp
or
xchg
push
sar
cltd
iret
ret
pop
add
bound
imulb
xlat
dec
pop
dec
pop
sbbl
imul
and
push
iret
mov
fwait
cltd
movsl
fsubl
jb
movsb
iret
push
mov
bound
xchg
push
and
push
test
leave
jmp
pop
clc
scas
pop
jg
or
pop
je
pop
push
dec
pop
pop
dec
cmp
mov
daa
dec
pusha
int
sahf
push
out
add
cwtl
out
jb
popa
pushf
pop
push
adc
sbb
sub
mov
pop
sbb
jge
xchg
jno
fdiv
sub
es
aam
or
lods
movsb
xchg
jb
mov
aaa
dec
ss
jae
data16
adc
sbb
and
test
sbb
out
jmp
enter
jae
rol
and
inc
fcoml
mov
push
mov
jge
xchg
sahf
dec
sub
or
push
out
adc
sbb
dec
stos
adc
jge
push
mov
jp
add
add
xchg
add
sahf
mov
imul
add
xorb
jmp
rolb
and
imul
xchg
repnz
scas
sub
inc
cmp
adc
pop
out
imul
xchg
aas
push
or
cld
dec
mov
or
fstl
ret
aas
in
out
dec
push
push
lds
push
and
mov
or
xchg
push
mov
inc
lods
jg
scas
subb
dec
sbb
mov
aam
cmc
and
test
adc
subb
mov
inc
fwait
xchg
movsb
repz
xchg
movsb
ljmp
fstpt
test
pop
int
insb
xchg
ljmp
mov
mov
adc
out
rorl
add
dec
int3
and
xor
xchg
je
clc
inc
push
and
mov
push
dec
xchg
js
pop
inc
push
pusha
in
fdivl
and
rorb
inc
daa
sub
std
jp
bound
cmc
lods
js
jb
sub
jl
movlps
pop
jg,pn
outsl
xchg
add
xchg
mov
pop
lods
pop
push
insb
icebp
pop
pop
lock
push
mov
addr16
sub
mov
sub
jae
push
sbb
jmp
outsb
and
jns
std
sahf
or
mov
test
repz
push
shll
jno
cld
sub
dec
stos
mov
xlat
sbb
push
sbb
mov
movsl
mov
mov
insb
sub
in
iret
xor
rcrb
rcrl
sub
sbb
jbe
fwait
dec
mov
scas
in
cltd
scas
xchg
mov
dec
mov
jp
pop
mov
popf
or
push
pop
xor
rclb
lds
lcall
cmpsl
ret
add
jl
loopne
cmp
cli
mov
cmp
jmp
and
sarl
bound
in
test
sbb
mov
sub
gs
xchg
dec
nop
cmp
dec
mov
mov
jns
pop
shl
mov
cli
xchg
xchg
in
add
sbb
lret
pop
push
orb
or
sbb
xlat
dec
pop
in
mov
mov
push
adcb
in
pop
adc
lahf
jbe
or
jp
inc
xor
ja
ljmp
cmpl
mov
cmp
jp
fcomp
stos
push
arpl
pop
or
mov
sbb
ret
pop
sbb
inc
mov
cmp
cltd
add
push
in
clc
push
arpl
jo
xlat
and
stos
adc
lcall
jge
sti
push
cwtl
repz
push
stos
pop
xor
adc
loop
xchg
mov
push
xor
test
in
mov
lods
mov
ret
mov
out
divl
dec
pop
mov
jb
or
push
pusha
mov
sbb
and
iret
xchg
daa
lcall
pop
adc
iret
sbb
jns
cmc
jo
das
fwait
and
in
movsl
add
into
push
nop
xlat
mov
enter
jo
mov
jno
push
xor
test
dec
cmpsl
and
push
sbb
das
rcrl
loope
sub
and
jne
js
andb
mov
lods
dec
pushf
dec
mov
loope
rcrl
lods
cwtl
adc
lods
loop
cmp
mov
cmp
lret
out
imul
int3
or
add
jmp
dec
inc
lods
inc
shlb
pop
shr
mov
jo
add
mov
cmp
jle
orl
jp
mov
in
jg
gs
bswap
fs
inc
sub
cltd
mov
jbe
mov
mov
loop
ds
and
mov
fcmovnbe
xchg
inc
xchg
fistl
imul
xchg
ret
mov
cmpps
fwait
and
pop
xchg
enter
add
push
push
add
jno
sbb
jo
or
lods
je
bound
or
inc
aam
sub
mov
mov
sub
mov
xor
decb
aaa
in
mov
fcoms
mov
das
aaa
les
sbb
das
test
in
sbb
ljmp
fwait
or
add
mov
cmp
lea
push
mov
repnz
mov
ds
subl
pop
dec
dec
out
sbb
cmpsl
inc
jb
xor
popf
xchg
test
ss
push
pop
cmpsb
jmp
mov
pop
in
xor
dec
stos
mov
fs
fld
cmp
and
test
out
sbb
into
insl
sub
cwtl
ret
lock
insb
adc
imul
sbb
sahf
mov
and
aam
imull
jbe
sti
test
and
lcall
mov
fildl
in
mov
adc
push
pop
cmpsb
add
daa
adc
adc
jno
aad
and
mov
into
cs
ret
dec
shrb
dec
sahf
mulb
insl
pop
fidivl
push
aaa
jg
mov
mov
sahf
lods
xchg
cwtl
popf
cmc
cmp
xor
add
adc
movsb
push
mov
pop
call
sub
pop
das
push
cmp
fldcw
loope
scas
mov
shll
dec
jl
pop
jns
cmp
xchg
jle
insb
aam
push
imul
cmp
icebp
mov
add
daa
sahf
mov
cld
aaa
xchg
ficompl
or
sub
ret
in
xlat
scas
push
pop
dec
outsl
cmpsl
aam
jle
fistpl
outsl
pop
test
ljmp
sbb
inc
mov
dec
repnz
in
test
jae
stc
int
decb
leave
pop
fwait
adc
sbb
dec
mov
scas
sub
push
mov
pop
pop
xor
adc
sbb
es
xor
test
mov
es
loop
jb
or
or
in
mov
int3
lock
pop
dec
sahf
aas
outsb
fsubs
xor
insb
test
mov
adc
loop
mov
mov
popf
jge
in
iret
mov
or
scas
in
and
sbb
xlat
and
out
jae
jg
fxch
push
addr16
das
or
loope
cvttps2pi
aaa
mov
inc
leave
sbb
mov
pop
or
test
pop
xor
scas
arpl
lret
dec
xchg
and
hlt
clc
lret
repz
cmp
push
imul
xor
xor
cs
push
movsb
insl
sub
sub
inc
sti
add
lds
pop
cmp
js
aam
arpl
ds
push
inc
scas
in
inc
dec
push
lds
xor
dec
mov
aaa
pusha
rcrl
xchg
pop
in
fmuls
int3
push
outsb
xchg
and
sbb
mov
inc
xchg
arpl
push
or
insl
mov
jo
sub
push
mov
pop
pushf
xor
fisubl
xor
mov
and
fbstp
and
incl
es
out
movsb
push
imul
ret
movsb
in
adc
jae
jno
sbbb
fwait
fs
jl
imul
scas
stos
sub
sbb
lods
mov
rclb
aas
stos
mov
push
ret
pushf
add
sbb
pop
lds
cmpsb
sub
imul
or
cmp
loope
shlb
cmpsl
jl
pop
repnz
jle
push
lret
push
stos
lcall
push
rclb
adc
out
add
xchg
pop
mov
jnp
psrlq
lods
mov
insb
andl
fnstcw
push
int3
pop
xlat
les
cmp
jo
lret
xchg
cmpsl
outsb
add
daa
insl
jns
push
inc
cmp
jecxz
inc
mov
xor
pop
jl
lcall
push
fstl
pop
pop
sbb
xchg
in
addr16
adc
mov
jge
mov
ret
outsl
ss
scas
mov
int3
adc
cs
xchg
mov
add
repz
push
push
adc
jg
cwtl
sti
mov
mov
rcrb
inc
dec
fldl
cmp
jno
or
cwtl
adc
push
imul
pop
ficoms
adc
lahf
dec
orl
push
adc
mov
notb
rcrl
movsb
sbb
xor
stos
jno
add
adc
pop
cmp
mov
test
fstpl
jl
aad
pop
mov
push
cmc
mov
sbb
cmp
adc
es
les
jne
arpl
xchg
outsl
imulb
push
dec
mov
repz
dec
lea
cld
adc
ret
pop
lret
cs
and
pop
inc
xor
mov
push
pop
outsb
mov
push
sti
dec
addr16
inc
jno
add
cmp
xchg
jmp
int
pop
pusha
pop
jl
push
insl
gs
xchg
jb
pop
jl
cmp
and
lods
inc
inc
pusha
push
and
movsb
xor
jmp
mov
mov
dec
jl
shlb
pop
rolb
jecxz
mov
jo
ljmp
mov
popf
push
fistpl
or
xchg
mov
movsb
outsb
adc
add
dec
cli
add
push
test
ljmp
test
imul
xchg
aaa
stos
dec
pop
aas
jmp
cmpl
push
jmp
stos
pusha
xor
push
leave
pusha
notl
sbb
mov
and
loope
loope
out
or
xchg
in
fildll
sbb
sbb
pop
jns
mov
gs
stos
das
ss
ljmp
pop
sub
inc
pop
cld
mov
addr16
jp
addr16
cmp
stos
inc
das
mov
int3
or
add
sahf
jmp
sbb
pop
lock
outsb
imul
cmc
xor
xchg
sahf
lods
add
gs
jecxz
and
add
outsl
push
das
inc
dec
scas
xchg
mov
sahf
jecxz
mov
icebp
lcall
add
and
cs
scas
sub
jle
mov
dec
mov
adc
es
in
and
dec
add
add
je
leave
cmc
jecxz
sbb
jno
mov
das
xor
leave
inc
mov
jns
int
aaa
dec
cmpsl
aad
inc
xchg
pop
jne
xchg
out
test
repnz
movsl
clc
adc
scas
or
sub
mov
cld
or
popf
jo
call
repnz
jmp
adc
loopne
mov
in
jbe
xchg
js
and
aas
stc
mov
mov
test
sub
or
arpl
mov
mov
leave
and
out
jb
jns
les
das
dec
sbb
aad
shlb
icebp
or
popf
stos
sub
ficoml
dec
gs
and
aaa
cld
incb
xor
popf
test
adc
movsb
aas
adc
dec
stos
repnz
add
mov
cmpsl
xchg
inc
pop
mov
loopne
jnp
xorl
das
adc
jmp
mov
xchg
push
movsb
sub
test
dec
pop
or
or
dec
fistl
xchg
cli
xor
adcb
mov
sbb
ffreep
or
inc
jae
sub
or
push
gs
addr16
ficomps
xchg
xchg
movsl
out
and
xor
jae
dec
orb
jae
xor
mov
fmuls
fists
push
mov
ljmp
cmp
jg
outsb
cmp
add
mov
push
sub
arpl
cwtl
psrld
in
pusha
mov
rolb
inc
cmp
push
fucompp
lcall
mov
rolb
adc
stos
movsw
ja
mov
push
cli
je
xor
dec
adc
or
pop
sarb
pushf
push
into
aas
aaa
xlat
xchg
push
insb
out
fsts
fs
sbb
std
add
mov
iret
cmp
pop
aas
pop
cmp
daa
cmp
or
push
loopne
dec
arpl
pop
adc
jbe
jns
int3
inc
xchg
fimuls
decb
inc
jg
imul
arpl
cmp
jbe
inc
inc
scas
hlt
xchg
hlt
rcr
mov
pop
mov
xchg
mov
cmp
sub
pop
add
out
clc
push
adc
jo
mov
outsl
ret
mov
incl
daa
mov
pop
leave
inc
nop
das
test
ljmp
push
hlt
sub
data16
inc
adc
xchg
mov
frstor
mov
in
pop
and
shll
repz
xchg
outsb
sbb
and
sbb
mov
js
dec
fisttps
je
sbb
cmp
cwtd
jb
sbb
sub
mov
add
idivb
psubw
mov
mov
jg
sub
and
cld
dec
aaa
and
out
mov
outsb
out
insl
pop
push
es
faddl
insl
mov
fbld
clc
or
mov
stos
fdivrl
cwtl
je
in
push
xor
stc
aad
sub
add
aam
mov
loope
iret
shll
mov
dec
mov
ret
iret
cli
loope
mov
pusha
cmp
mov
and
sub
fistpl
cmp
cmc
xor
mov
orl
sbb
pop
lock
cmpsb
in
dec
popf
hlt
or
rol
and
jl
popf
lock
std
pusha
ja
shl
inc
jp
push
or
add
jle
mov
jg
rcr
push
addr16
enter
cmp
out
repz
mov
dec
or
add
add
nop
loop
xchg
mov
xchg
pop
hlt
lcall
mov
lret
or
dec
and
dec
dec
xor
jecxz
add
subl
pop
cli
incl
and
testl
popa
sub
pop
cs
mov
sub
xor
push
lock
popa
jae
xor
jge
std
xor
mov
adc
jp
jecxz
insl
and
cs
sub
lock
cmp
jno
rclb
addr16
jp
mov
sub
andb
xor
jmp
clc
adc
xor
mul
cmpsb
inc
stc
push
jae
dec
lcall
test
jl
adc
and
jl
push
push
je
loop
mov
jo
push
inc
pop
mov
sub
jecxz
decb
mov
loop
outsb
xor
lret
jb
or
hlt
cltd
mov
and
xor
rcl
push
cmp
mov
cwtl
push
jae
dec
sbb
jno
push
sub
xchg
mov
fwait
pop
mov
inc
in
mov
cmp
lock
cli
mov
xchg
and
mov
add
and
xor
clc
aaa
push
out
out
jne
ror
sub
dec
xchg
std
mov
mov
hlt
push
aas
imul
loope
jbe
fucomip
mov
lret
pop
out
nop
fstps
outsl
push
and
pop
repnz
daa
movsl
test
pushf
ret
push
mov
ljmp
sbb
jb
xchg
mov
addr16
mov
push
ss
shrl
loopne
or
jno
pop
bound
cmp
jb
popa
jl
enter
repnz
loope
xor
cwtl
cld
hlt
inc
pop
cmpl
mov
xor
sbb
sbb
and
pop
call
mov
push
iret
out
ret
jl
jg
enter
andnps
stc
pop
and
adc
incb
push
leave
or
or
lahf
mov
in
jecxz
int
icebp
adc
sub
daa
sbb
pop
in
inc
add
divl
mov
repnz
andb
stos
lahf
adc
xor
negb
jl
dec
stos
dec
mov
sbb
mov
mov
rorl
jl
icebp
sbb
sub
or
sahf
movsl
fsubrp
jl
dec
ja
outsl
fmull
mov
xor
fcoms
mov
arpl
int
out
repnz
mov
fwait
bound
or
jge
inc
adc
pushl
sbb
cli
sbb
cmc
negl
loop
or
xlat
sbbl
adc
test
int
es
jae
aaa
inc
mov
mov
push
mov
cmc
scas
mov
push
popf
mov
shr
das
push
mov
pop
or
mov
push
cmc
cmp
xchg
sti
adc
pop
xor
sbb
xchg
cmp
push
xor
add
or
int3
mov
loope
cli
cmc
mov
outsl
lds
sub
enter
sbb
fadds
es
dec
mov
xchg
sub
ffree
dec
sub
cmp
movsb
xor
sbb
xchg
ljmp
push
rorl
sub
test
mov
test
cmc
cmp
sbb
cmpsl
testl
xchg
xchg
add
jnp
cwtl
mov
rcpps
hlt
dec
insl
fisttpll
aad
ds
push
test
cmovl
bound
or
adc
lea
or
pop
negb
incl
jo
adc
xchg
stc
mov
jnp
jnp
or
lds
rolb
idiv
fisubs
int
orb
loope
les
add
dec
mov
xor
pop
jae
jp
adc
cmp
stc
sti
stos
in
or
and
ret
lods
cmp
jle
jb
pop
and
xor
shll
test
or
mov
loopne
test
insl
pusha
jns
sub
mov
sbb
dec
sti
dec
inc
jp
xor
nop
xchg
loopne
mov
ss
ljmp
inc
fmul
sub
ss
xor
int3
repz
es
aas
push
mov
and
shlb
push
sbb
cld
pop
or
icebp
outsb
xchg
dec
xchg
xchg
lahf
push
push
xchg
pop
or
sub
add
int3
xor
xor
xchg
lods
ret
sub
xor
cmpsl
xor
ret
add
stc
fists
stos
dec
outsl
push
cld
mov
pop
sbb
enter
jmp
fsts
inc
sub
daa
into
pop
add
add
fisubl
jb
stos
and
xchg
orb
push
sbb
lods
sub
xchg
cmc
stc
mov
xchg
fmuls
lds
je
daa
push
fcmovb
and
and
sbb
sub
mov
into
loope
add
xor
xchg
in
ss
lcall
imul
repz
lea
xchg
aad
or
fwait
mov
ficompl
mov
aam
xor
sub
mov
cld
cld
shlb
cmpsb
lcall
out
lcall
loopne
das
pop
sbb
mov
jmp
fimuls
add
fwait
in
cmp
sbb
bound
xchg
xchg
testb
mov
jne
aam
out
sub
mov
mov
aam
push
loope
mov
leave
pop
pop
pop
pop
adc
jo
and
dec
push
and
and
xor
sub
jl
push
mov
inc
cmc
cmp
pop
sub
fdivrs
push
adc
shrl
add
into
cmpsl
and
mov
enter
sbb
popa
inc
das
inc
and
inc
adc
inc
xchg
insl
popf
sub
xchg
pop
mov
ja
hlt
adc
aaa
aad
xlat
mov
shr
mov
jmp
xchg
add
or
push
rolb
cltd
xchg
imul
sbb
popa
cwtl
cmpsb
loop
dec
gs
pop
call
loop
xor
jp
mov
popa
in
loope
ljmp
aaa
mov
mov
in
outsb
rcl
lock
and
jae
dec
jmp
adc
pop
lea
test
mov
xchg
stos
sub
stos
pop
stos
cmc
and
pop
push
in
mov
jbe
jle
jbe
les
mov
rcr
lock
add
mov
dec
sub
xlat
push
dec
movsl
and
fincstp
lock
aam
icebp
or
scas
jmp
push
daa
or
and
xchg
or
mov
nop
bound
xchg
add
push
je
orl
dec
jns
push
aaa
mov
adcb
sbb
sub
repz
pop
sbb
sti
mov
stos
pop
jb
inc
ss
orl
cli
dec
repz
pop
push
dec
xlat
ss
jb
cld
fcoms
bound
inc
xor
bound
push
clc
cmp
hlt
jae
mov
inc
pop
ficoms
jmp
inc
and
enter
test
push
out
inc
dec
dec
mov
pusha
cs
cmp
ja
dec
mov
les
insl
jl
and
or
insb
aad
lods
in
ret
add
ja
rolb
out
and
ss
push
xor
icebp
repz
or
outsb
jle
out
inc
mov
shll
out
mov
aad
mov
sub
add
stos
icebp
fwait
dec
int
pop
testl
out
sbb
ljmp
fnstcw
mov
sub
inc
push
jle
mov
mov
pop
adc
in
mov
inc
xor
int
mov
mov
mov
stos
popa
jl
xor
popa
jae
orl
sarb
cmp
add
cs
les
and
or
xor
lret
lds
inc
shlb
push
into
pop
xchg
movsb
sbb
pop
outsl
hlt
out
inc
and
scas
xchg
and
push
mov
cmpsb
mov
push
jne
mov
lods
pop
out
lock
sarl
jmp
out
push
dec
leave
inc
jns
arpl
xchg
pop
lods
jae
or
leave
mov
pushl
iret
aad
sbb
loop
xchg
rorl
or
pop
daa
xchg
aas
pop
dec
mov
xchg
push
push
fcomps
jecxz
mov
das
push
outsl
mov
dec
dec
nop
xor
mov
and
fnstenv
xchg
xorl
xchg
mov
les
cmp
sub
shr
adc
je
pop
push
data16
add
sub
aam
negb
imul
push
mov
jle
inc
lock
cmpsb
jl
pcmpeqw
pop
xchg
or
jnp
jae
pop
adc
mov
arpl
jge
test
fcmove
popf
pop
aas
shll
ja
pop
iret
push
enter
adc
cmp
shrl
xchg
dec
lcall
std
fninit
in
add
in
rcrl
xchg
cmp
loope
in
jle
push
adc
pop
enter
push
sbb
mov
push
and
mov
pop
das
cwtl
sbb
cwtl
jp
xor
mov
faddl
in
add
xchg
push
lret
imul
arpl
mov
in
nop
dec
rorb
jp
stc
or
add
lahf
dec
cmp
imul
cmp
popa
add
or
pop
int
mov
loopne
jl
cmp
xor
jecxz
xor
push
int3
and
lret
sbb
mov
jno
roll
xchg
sarb
mov
sahf
fwait
sbb
sub
inc
hlt
imul
data16
lahf
adc
push
fwait
xor
imull
ja
sbb
pop
dec
xchg
add
es
jge
mov
push
sub
push
shrb
and
adc
out
add
or
fdivl
cmp
in
push
or
dec
xchg
pusha
push
pop
jecxz
int3
cmp
push
ficoml
cmpsl
push
out
push
sbbb
pop
pop
out
outsb
fisttpll
incl
imul
xor
adc
mov
in
pop
shl
cmc
ds
and
iret
push
push
or
lcall
sub
adc
jno
and
cmp
in
jge
inc
mov
lods
leave
das
out
les
mov
mov
push
inc
inc
fdivl
clc
xor
push
pop
pop
jecxz
test
add
cwtl
pusha
add
mov
pop
loopne
xchg
imul
cmp
es
inc
xor
sub
cmc
shl
adc
adcb
adc
aaa
sub
add
lea
mov
in
xchg
mov
sbb
je
movl
mov
imul
mov
mov
xor
add
int
movsb
js
mov
pop
mov
pop
data16
loop
xor
add
xor
repnz
fs
lock
mov
mov
lcall
loop
or
cmpsl
pop
repz
or
adc
and
jne
jo
and
xchg
mov
inc
jne
outsb
push
aam
out
lods
stc
fcomip
fs
push
pop
ret
rcr
stos
pop
cmc
loopew
lds
cmpsl
xchg
push
jl
ss
or
adc
addr16
pop
stc
or
add
inc
movsl
sub
sub
and
lret
cltd
xor
lcall
ljmp
dec
dec
popa
int
mov
lea
xchg
or
jp
mov
aaa
adc
call
fsts
das
push
lahf
mov
stos
or
cmp
repnz
pusha
cmpsl
pop
push
or
sub
aam
pop
rol
jl
push
cmp
jae
stos
in
orb
subl
xchg
lds
jmp
fsubrl
setl
mov
in
mulb
adc
sbb
mov
cmp
dec
cmp
dec
decb
aas
nop
shrb
jbe
out
aaa
jae
add
dec
xlat
or
pusha
scas
jl
outsb
lods
in
adc
cmc
xchg
and
sbb
or
pop
mov
idivl
shlb
sub
mov
xlat
pop
pop
or
or
inc
pusha
mov
sahf
lods
mov
push
jo
cld
mov
sub
into
mov
mov
aad
mov
rcrb
ds
int
sbb
insl
shr
cmp
push
or
lock
mov
xor
xor
dec
cwtl
mov
jg
mov
xchg
cld
aam
or
imul
sub
push
jge
insl
push
ds
jp
js
test
aad
decb
daa
outsl
ljmp
pop
outsb
mov
daa
iret
sar
cmp
movsb
or
in
sahf
ljmp
pop
scas
and
shr
jno
pop
xor
fs
xchg
inc
cmpsb
fucom
and
push
adc
mov
dec
cltd
imul
inc
cwtl
and
inc
sub
lcall
mov
push
and
ljmp
stos
dec
movsl
rcrb
lds
cld
aad
mov
add
nop
mov
xor
inc
sub
jge
mov
and
in
sbb
inc
bound
daa
and
inc
xlat
loop
push
dec
imul
sti
dec
pop
dec
push
fxch
fsub
int
hlt
idivl
jmp
nop
insb
popf
mov
push
mov
aam
jb
aas
enter
test
lahf
add
push
sahf
inc
sub
sub
dec
call
lds
lahf
int
arpl
testl
loopne
movsl
sbb
mov
sub
ljmp
repnz
dec
aam
loop
cli
or
std
jge
xchg
inc
in
outsb
out
sbb
and
out
outsb
cltd
adc
popa
mov
or
adc
push
repz
imul
add
xchg
fnstsw
adc
test
cwtl
sbb
jg
push
pop
icebp
push
xor
fwait
cmp
hlt
repnz
loop
add
popa
fstl
push
mov
inc
cmpsl
inc
test
in
add
into
sbb
or
cs
dec
int
mov
cs
jg
or
popl
std
and
fldenv
dec
pushf
mov
mov
pop
vminss
ret
inc
mov
shll
dec
stos
negb
mov
xor
add
push
sti
push
add
xchg
cmp
jle
fstps
test
ljmp
adc
movb
xchg
mov
fbld
adc
call
xchg
add
scas
mov
mov
sbb
mov
adc
movsb
pop
cmpsl
test
test
mov
or
or
icebp
jo
adc
movsb
ror
dec
movsl
push
push
sbb
test
xlat
lcall
insb
jmp
out
xor
mov
jl
pushf
aam
jo
negb
fabs
inc
test
jne
pusha
lods
and
outsb
das
in
repz
popa
call
and
int3
and
push
dec
sbb
or
and
xchg
movb
fwait
cld
in
adc
push
dec
mov
pop
jge
sbb
mov
xor
or
add
or
cmp
jne
mov
fstpt
and
inc
rolb
ss
cmp
cmp
sub
and
mov
adc
movsb
or
cmp
imul
jmp
roll
dec
mov
xor
sub
push
pavgw
sahf
lret
addr16
jmp
xchg
scas
iret
and
rep
loope
inc
mov
jp
pop
mov
push
test
or
stos
mov
iret
mov
push
jl
sete
adc
xchg
imul
mov
mov
mov
out
fsubrl
dec
jbe
pop
and
into
test
dec
cmp
or
and
inc
pop
out
jb
push
cltd
stc
and
mov
in
test
mov
bsf
inc
xor
jne
clc
xchg
add
test
stos
jmp
cs
mov
xor
or
mov
mov
and
dec
out
fdivr
or
stos
sbb
mov
shll
dec
data16
andb
cmp
lea
or
bts
sahf
cmc
loope,pt
sub
imul
xorl
cltd
mov
mov
loop
mov
push
fwait
xor
into
lahf
xchg
inc
pop
lods
dec
outsl
rorl
push
cld
addb
push
popa
pusha
sbb
fildll
jnp
push
js
sahf
imul
insb
mov
test
cld
fdivs
mov
jae
sbb
jle
mov
pop
leave
inc
mov
xor
sub
add
test
fldl
lock
outsb
push
xor
xchg
jp
in
and
push
lahf
add
mov
outsb
testl
jbe
into
mov
push
hlt
adc
mov
xor
push
data16
fnsave
sub
mov
mov
push
or
or
inc
mov
aas
mov
mov
lcall
cmpsl
cmp
pop
pop
add
mov
ror
and
xor
pop
lods
inc
xchg
jl
pop
arpl
xor
aad
adc
test
cmp
jns
xchg
insb
cmp
xchg
adc
xor
lret
call
in
test
sub
xor
movsl
call
andb
gs
in
out
inc
in
cmpsl
push
add
or
sbb
iret
add
ret
clc
andl
leave
add
movsb
stos
cmpb
in
shll
or
xor
shll
popa
push
cltd
imul
mov
lods
lcall
jmp
xor
loopne
sbb
sub
pop
mov
fwait
mov
xor
sub
mov
gs
pop
and
shr
dec
xchg
pusha
repz
fnstsw
lods
fidivrs
adc
sbb
inc
inc
js
mov
sbb
incl
addr16
cwtl
mov
rcrb
push
pop
fadds
dec
sub
into
rolb
jp
mov
sbb
fsubl
pushl
dec
mov
and
js
jns
faddp
xchg
pop
jecxz
dec
mov
xor
sahf
fs
fmul
adc
pop
fisubrl
or
pusha
jg
je
stos
or
ficoml
xchg
pop
into
mov
xchg
lods
inc
inc
popa
test
xchg
cmpl
clc
repz
cmp
fmul
aaa
loop
repnz
popa
cmc
mov
dec
inc
mov
sbb
cmp
sti
ret
sub
call
xor
xchg
cmp
clc
insl
je
pop
lret
xchg
dec
jb
dec
inc
push
cmp
xchg
roll
sarb
cmpsl
in
fwait
mov
call
ret
or
sub
lret
add
lea
sub
cwtl
push
mov
xchg
jecxz
sbb
popa
int
dec
je
mov
and
add
sub
aaa
bnd
dec
aaa
dec
fdivrs
sub
test
aaa
pop
mov
pusha
shll
add
movsb
into
mov
std
pop
aam
mov
or
inc
ss
xchg
xchg
andb
adc
rcr
int3
mov
fiadds
das
push
adc
jl
repnz
daa
dec
call
jno
cmp
loope
addr16
pop
cmc
loope
aam
mov
mov
pop
and
cmp
clc
sbb
outsl
sar
xchg
lods
sub
xchg
sub
ret
jp
test
cmp
cld
cmp
subl
std
xchg
test
pop
out
dec
clc
sbb
dec
sahf
xchg
sub
mov
dec
mov
ljmp
jno
sbb
fcom
add
fistps
xchg
les
mov
aad
jb
in
inc
cmp
out
call
mov
mov
or
dec
jne
jmp
sub
int3
mov
jnp
pushf
xor
pop
std
repz
adc
insb
rol
sbb
js
lds
jl
fistl
int
gs
xor
xchg
lods
loop
inc
pop
int
xor
incl
xor
xchg
imul
jle
adc
jge
inc
sub
gs
movsl
cs
mov
sub
jecxz
and
lods
and
dec
adcl
dec
cmp
movsb
sub
cld
jl
sahf
push
aad
roll
mov
aaa
cmp
push
add
aam
mov
lahf
cld
or
mov
lods
lock
lock
mov
hlt
sub
fbstp
lods
inc
dec
jae
mov
xchg
adc
std
adc
fcomip
sbb
test
aaa
mov
and
ret
addr16
sti
adc
mov
or
xor
xor
in
push
inc
push
or
pusha
or
push
fstl
xchg
push
mov
pop
xchg
out
jno
mov
or
or
clc
mov
dec
inc
cmp
fisubrl
arpl
out
mov
aaa
push
fcmovbe
mov
ret
pushf
fwait
mov
push
mov
xor
aas
add
adc
clc
rcll
mov
sub
mov
jle
pop
mov
and
dec
mov
and
aaa
and
jne
in
dec
cmpl
ja
mov
fwait
lret
inc
adc
push
xchg
sti
inc
lret
push
enter
aad
inc
rcl
or
and
xchg
sub
and
mov
inc
jno
adc
mov
adc
jne
sbb
sbb
pop
push
jns
hlt
pop
sbbb
ljmp
jl
jg
rcrl
cmpsb
pop
and
test
sbb
clc
jge
or
scas
sbb
scas
cmpsl
mov
stos
imul
and
stos
sbb
call
add
lods
inc
or
lret
mov
xor
js
loopne
pop
fwait
mov
vdivpd
sbb
jl
pop
dec
jle
mov
xor
mov
pop
scas
frstor
sahf
inc
xor
mov
mov
xor
cmp
call
cmp
fbld
sahf
sub
movsb
jp
adc
pop
jge
pop
test
jle
xchg
hlt
push
inc
in
dec
mov
adc
mov
faddl
out
sub
inc
sbb
mov
clc
xchg
shrb
scas
iret
jecxz
lods
daa
iret
inc
inc
lods
sub
cmp
pop
in
xchg
mov
jmp
or
fmuls
cld
add
das
add
push
aad
and
idiv
rorb
dec
in
enter
fstpt
sti
rorl
pushf
and
xchg
fstpl
xbegin
call
inc
mov
loope
ret
out
rcrl
xchg
lea
push
mov
mov
jo
adc
mov
and
push
sub
into
sub
test
and
and
or
push
jmp
mov
dec
shrb
pop
push
fidivrs
stos
inc
fwait
je
push
inc
lods
popf
rol
ret
imul
adc
repz
aam
add
push
hlt
out
fstpt
adc
shl
jp
aad
movsb
mov
mov
mov
pushf
aam
js
pop
mov
or
filds
push
add
cmp
mov
mov
outsb
lods
loope
push
icebp
add
idivb
jecxz
add
push
std
cli
sub
cwtl
arpl
cmc
mov
cmp
push
ja
pop
clc
repz
ret
jbe
adc
jmp
inc
dec
push
popa
jmp
jmp
aad
and
xchg
and
dec
stos
or
out
inc
pusha
mov
stos
aad
push
cmp
popf
lahf
inc
or
xchg
or
stos
andl
sub
sahf
test
mov
adcb
stc
xlat
jle
jl
lods
pop
sbb
fstl
pop
inc
jge
sub
or
inc
dec
clc
and
insb
popf
push
add
loopne
cmp
and
or
push
fnstenv
jo
outsl
cs
sti
loopne
cs
lcall
mov
test
xor
or
sbb
loop
fstpt
add
inc
les
movsl
mov
sub
and
xor
inc
inc
jnp
dec
cmp
bound
int3
jnp
cmp
inc
push
jno
mov
mov
xchg
hlt
imul
rolb
lret
jle
enter
je
clc
jb
pushf
fildl
out
jle
push
inc
sbb
mov
jl
stos
les
iret
aas
fs
icebp
push
cltd
sub
sbb
mov
fidivs
adc
and
sbb
imul
pop
je
into
scas
jg
add
insl
sar
xor
ja
jb
cmp
lods
ds
aad
mov
fcomps
in
cltd
mov
out
sbb
mov
xor
aaa
movsl
pop
es
cmp
xor
mov
pop
movsl
xor
xchg
cli
daa
mov
dec
xchg
fcomps
pop
jg
sti
mov
dec
out
lock
mov
inc
push
jl
and
iret
sub
cs
xlat
fwait
inc
cmp
addb
addr16
test
push
or
inc
je
pop
xchg
push
repnz
sahf
jmp
adc
sub
push
jns
repnz
nop
fcmovb
dec
enter
and
sbb
test
das
aad
nop
loope
es
cwtl
push
divl
mov
adcl
adc
push
movsb
sub
outsb
rcll
jecxz
daa
lahf
sti
ficompl
lret
dec
cs
lods
mov
popa
repnz
in
or
inc
sar
flds
iret
mov
ljmp
pop
sbb
xchg
das
fisubrl
loopne
adc
fwait
and
sbb
fildl
jne
movsl
cmp
add
sub
test
mov
xchg
push
es
shl
or
and
decb
in
cld
mov
dec
js
mov
das
jo
fs
sbb
mov
or
test
push
xlat
pop
fsts
lea
mov
mulb
mov
gs
shl
lds
sti
pop
loop
cmpsl
mov
mov
les
aad
and
and
pusha
fcoms
push
dec
pushf
shrb
cli
stos
jae
xor
sbb
xchg
jns
pop
push
addr16
cltd
sub
andl
sbb
inc
out
inc
inc
pushf
rorb
xchg
sbb
sub
lock
insb
sarb
shll
test
sub
stos
out
cmp
push
push
sbb
mov
out
mov
or
mov
mov
popf
pop
imul
pop
mov
xor
inc
mov
and
xorl
pop
mov
xchg
cs
test
out
cltd
ljmp
pop
fildll
test
pop
in
sahf
sbb
out
jbe
pop
or
gs
mov
sahf
out
mov
insb
movsb
and
sbb
fstpt
sbb
inc
push
loop
and
pop
cwtl
sbb
inc
lods
lahf
sbb
ja
cmpsl
sub
in
and
xchg
fdivrl
daa
pop
andl
mov
das
push
push
mov
add
and
sub
je
xchg
adc
out
iret
fcmovb
stc
or
ljmp
push
roll
movsb
adc
jno
stos
lahf
and
pop
jns
fdivl
std
icebp
xor
aam
hlt
fs
lods
xchg
std
lcall
stos
or
jne
loop
mov
add
dec
push
cmc
jle
inc
mov
lds
pop
cmp
pop
push
inc
add
cli
jbe
shl
adc
fiaddl
sub
mov
mov
fisubl
inc
insb
in
or
out
xchg
shr
pop
test
dec
imull
jecxz
icebp
xchg
and
addr16
out
inc
mov
dec
lret
cmp
push
jb
xor
mov
shll
pop
fbstp
xor
sbb
inc
int
scas
and
sbb
ds
sbb
aam
fwait
hlt
repnz
stos
adc
mov
push
mov
negb
add
mov
mov
push
cmp
aad
inc
xchg
incl
popa
dec
xor
pusha
cbtw
jp
mov
jns
pop
cmpb
push
sub
into
mull
in
push
adc
xor
loopne
sub
mov
mov
stos
push
fisubrl
shrb
ljmp
leave
ja
mov
in
mov
and
adc
jmp
cmpsb
mov
adc
sbb
cmp
mov
dec
in
andb
lods
cmp
das
and
jns
andl
ret
push
in
jp
add
mov
xchg
or
shll
lcall
aam
sub
add
mov
popa
mov
xchg
ret
bound
rcl
loopne
jne
rclb
pop
and
jns
ret
dec
pop
push
pushw
test
push
loop
mov
jle
rcll
sbb
inc
or
sub
xchg
popf
into
les
fcoms
add
repnz
outsl
push
mov
test
cmp
fldcw
dec
add
out
mov
sbb
cmp
rcll
cltd
dec
dec
movsb
mov
push
sbb
or
sbb
push
and
mov
and
pusha
jg
dec
ret
aam
dec
dec
sub
icebp
pop
outsb
mov
pop
sbb
insl
sbb
lods
or
hlt
jns
cmp
jns
pop
push
inc
sub
rorb
das
jg
fisttpll
inc
leave
dec
test
repz
out
jo
test
lods
sti
mov
mov
mov
jmp
or
repz
std
xchg
cld
add
cmpsl
fwait
sbb
jno
mov
xchg
mov
sub
aam
xlat
dec
lcall
push
mov
pop
test
dec
hlt
pusha
movl
gs
ss
dec
xor
cmc
nopl
xor
xor
adc
and
add
xchg
rorl
movsl
mov
gs
jecxz
mov
sahf
add
sbb
scas
nop
pop
daa
into
iret
xchg
popf
jge
out
rcr
xor
sbbl
pop
jbe
push
or
push
arpl
jo
push
xchg
imul
lock
or
or
xchg
push
test
fisubrs
adc
push
sbb
mov
pop
popl
stos
rcll
movsl
cmp
jbe
mov
ljmp
mov
outsl
sub
adc
xor
cmp
test
push
shll
pop
leave
pushl
insl
adc
sahf
loop
dec
inc
idiv
sub
outsl
movsb
cmp
xor
repnz
push
jmp
xor
inc
dec
add
aas
pushf
pop
push
xor
shl
jle
rorb
ja
dec
outsl
test
outsb
orb
cmpsb
test
inc
add
lea
mov
push
lcall
mov
divl
in
clc
ret
pushf
dec
or
xchg
jbe
mov
dec
cmp
icebp
push
sbb
add
sub
enter
fdivrl
pop
aas
movsl
out
stc
adc
and
loopne
iret
into
loopne
jp
add
mov
push
or
xor
xchg
dec
dec
aaa
xchg
cmp
int
fidivrs
mov
and
xchg
adc
inc
add
clc
mov
or
out
push
ret
mov
adc
and
pop
imul
arpl
jno
cld
inc
mov
dec
stos
jecxz
dec
mov
sbb
outsl
xor
xlat
mov
test
cli
and
add
push
in
out
inc
push
adc
lock
inc
clc
test
push
xchg
fdivrl
dec
ds
sarl
cmp
stos
dec
test
repnz
sbb
je
xor
test
shlb
test
mov
mov
mov
into
in
jb
rclb
adc
in
xchg
rolb
mov
aad
insb
add
jns
and
lods
mov
dec
mov
in
push
scas
push
int3
imulb
sbbb
push
test
pop
into
push
test
es
shrl
cmp
lock
pop
stos
or
sti
add
jo
cs
jg
mov
fldl
inc
loop
xor
mov
cltd
cmp
sub
aam
sbb
test
xor
punpcklwd
lods
add
adc
test
pop
bound
test
icebp
jno
sbb
shrb
jnp
test
dec
adc
jb
mov
ss
iret
addps
cmpb
stos
cmpsb
lahf
sub
popf
jmp
ja
daa
lea
lcall
adc
mov
push
xchg
fisubrs
lods
jbe
adc
pop
mov
pop
sub
ds
or
sub
loop
in
arpl
mov
sbb
jg
or
mov
outsb
push
dec
jmp
inc
cwtl
scas
jmp
or
rolb
loope
scas
ret
mov
notl
mov
in
pop
xchg
pop
pop
lret
xorb
stos
sar
stos
add
sbb
jbe
repz
insb
fucom
daa
cmp
adc
or
or
xor
or
leave
incb
aas
mov
cmp
call
cmpsb
xor
ret
push
mov
inc
add
iret
push
inc
mov
jmp
or
push
xorb
pop
sti
es
mov
mov
sahf
cmpsl
leave
push
jecxz
int
adc
xchg
adc
mov
cld
inc
mov
lcall
imul
sbb
cmovns
lock
or
fldcw
jp
push
pop
mulb
test
daa
sti
mov
les
leave
sbb
aam
push
sub
sbb
dec
divb
mov
cmp
mov
or
inc
ret
sbb
clc
mov
fcoml
jae
in
inc
sub
jp
pop
inc
mov
loop
add
into
repnz
pushf
fldt
jb
sahf
push
rorb
cmpb
pop
mov
adc
jmp
mov
in
incb
aam
aad
mov
xor
inc
in
or
ret
push
fisttps
std
dec
aam
ret
adc
repz
out
and
and
dec
lret
sub
pop
push
mov
out
adc
push
or
lea
leave
test
roll
dec
mov
iret
outsb
xchg
push
cmp
mov
push
lds
dec
sbb
aam
mov
xchg
mov
cwtl
enter
or
fcmovnu
fbstp
sbb
test
neg
lahf
or
pop
push
jb
and
out
cmp
stc
cmp
in
and
push
lea
jns
inc
movsb
pop
test
sub
int
aam
sahf
xlat
jae
adc
lea
nop
add
xchg
js
sbbb
imul
mov
mov
stos
xlat
add
mov
int3
stos
adc
lcall
pop
sbb
fwait
mov
mov
nop
lods
std
lcall
pop
sub
cmp
gs
jmp
add
ss
loope
repnz
mov
flds
cmp
insl
fbstp
push
jmp
ret
pop
push
rcr
stc
inc
aaa
aad
gs
bound
dec
jg
mov
dec
jae
pop
jmp
outsl
ja
or
xor
sub
imull
cwtl
push
inc
dec
add
cmp
mov
test
dec
push
xchg
pop
inc
cld
roll
callw
add
lods
xchg
aam
mov
sbb
iret
xchg
lret
jge
xchg
pop
push
add
inc
add
lret
dec
scas
les
inc
add
adc
fs
nop
add
push
lahf
int
addr16
loop
mov
les
ss
shlb
sub
add
mov
mov
outsb
sarl
out
jmp
shll
fs
pop
stos
sbb
fsubrl
jo
icebp
sbb
push
cmp
mov
ss
mov
mov
lahf
sub
aad
test
dec
xchg
jns
imul
cmp
or
les
sub
adc
test
dec
jmp
sahf
xor
inc
pusha
lret
pop
enter
sbb
sti
iret
out
sub
xchg
call
sbb
aad
mov
cmp
mov
subb
adc
adc
sbb
pop
mov
adc
mov
lcall
cmp
add
mov
clc
in
dec
or
mov
incl
idivb
cmp
out
vmovntps
and
push
mov
push
imul
test
adc
ja
jo
mov
jae
cmp
xchg
pop
xor
push
xor
popa
icebp
pop
stos
int3
mov
sbbb
pushf
sub
in
lock
inc
cld
inc
jge
dec
inc
insb
pop
scas
cmp
pop
mov
and
pop
icebp
sarl
lods
cmpb
fs
cs
addl
dec
dec
sub
call
call
leave
imul
xorl
icebp
mov
mov
cmp
das
inc
mov
dec
xchg
fs
mov
mov
cmp
push
les
push
xor
int3
adc
and
jbe
aaa
enter
mov
inc
mov
int3
sub
je
pop
dec
sbb
mov
cld
stos
xchg
pop
cli
mov
adc
jg
mov
leave
xchg
pop
xor
push
xor
dec
test
std
dec
xor
scas
sub
idiv
test
mov
sbb
repz
lods
int3
sahf
insb
imul
cli
shlb
add
and
xchg
adc
std
inc
inc
mov
dec
popf
mov
xchg
aas
pushf
cmp
add
adc
in
movsb
loop
data16
pop
or
fld
push
cmc
inc
cmp
negl
movsl
add
xchg
pop
mov
jp
jae
test
lea
subb
cmp
leave
jg
mov
shrb
mov
lods
add
scas
sub
add
lret
js
ret
push
adc
stos
or
in
mov
in
mov
stos
and
pusha
xchg
xor
fwait
jae
dec
and
inc
out
cs
xchg
loope
push
in
pop
jmp
xor
fistpl
jecxz
movsb
fildll
jmp
enter
pop
xchg
xor
jnp
inc
adc
xor
addr16
fwait
testl
mov
pop
dec
call
push
mov
cmp
xor
cmp
data16
neg
dec
inc
push
cmpsl
pop
repz
scas
push
cmp
mov
adc
or
sub
xchg
mov
arpl
lods
hlt
fidivs
fwait
mov
sbb
adc
mov
addr16
xor
jb
mov
pop
outsl
sub
pop
mov
push
push
mov
mov
cwtl
adc
hlt
jno
or
push
pop
push
xor
imulb
cmpsl
shll
pushf
std
out
and
dec
lret
dec
and
jb
rcl
push
cmpsl
jne
push
add
fisttpl
mov
lock
fisubrs
add
adc
mov
mov
cmp
fsubp
mov
push
xor
mov
outsl
test
fwait
pcmpeqb
movsb
cwtl
dec
inc
pop
fistps
fs
sub
and
fisttpl
movsl
or
xchg
mov
les
jl
test
dec
out
inc
icebp
dec
enter
jp
push
inc
adc
xchg
add
xor
pop
xchg
fisttps
jnp
sub
enter
mov
cmpsl
mov
std
mov
xchg
sahf
inc
iretw
xor
hlt
mulb
ja
repz
pop
mov
aam
fsubl
test
jl
adc
pop
or
and
xor
mov
imul
sub
and
stos
fsts
jg
leave
inc
es
mov
fdivrp
xchg
xchg
mov
xchg
sub
xorb
popf
pop
outsb
mov
or
into
out
or
dec
lds
xchg
fadds
pop
insl
pop
mov
nop
sub
jle
in
mov
and
cltd
fs
mov
xchg
push
inc
or
mov
mov
dec
pusha
mov
mov
test
add
sti
sub
in
out
nop
pcmpgtd
or
mov
push
imul
mov
stos
xchg
outsb
mov
jae
mov
lcall
mov
pop
into
adc
dec
pop
gs
sbb
jmp
cmp
orl
xor
push
cwtl
lcall
dec
xchg
stos
jmp
rcl
inc
cmpsb
das
xchg
adc
out
add
push
jb
inc
ficoms
sahf
mov
sbb
push
pop
adc
test
cmp
adc
in
jle
in
aas
jno
cltd
push
inc
out
mov
sti
mov
stos
xchg
add
inc
ret
lahf
imul
lahf
cmp
jge
lods
add
movsb
outsb
ret
gs
mov
jp
mov
data16
cli
cmpsb
and
in
dec
mov
xlat
mov
and
sti
xchg
rep
mov
inc
addr16
pop
sahf
or
mov
dec
sbbb
pop
dec
sbb
sarb
jl
mov
and
pop
cmp
fadd
int3
xor
inc
jge
inc
into
cld
pop
lock
inc
stc
push
outsb
mov
or
sub
jne
sub
lds
mov
mov
js
jnp
push
popl
push
mov
adc
jae
dec
ret
add
dec
adc
js
push
add
cmp
js
jl
inc
clc
lahf
push
movsb
out
dec
and
xor
scas
xchg
pop
adc
cmp
rcrb
popf
pop
adc
push
jmp
dec
mov
jg
mov
int3
roll
mov
leave
sub
int3
mov
inc
into
loop
sub
mov
dec
mov
xor
stos
notl
out
loope
insb
fs
lcall
and
and
push
in
pop
mov
and
xchg
mov
int
icebp
jno
or
push
lret
and
roll
pop
jb
pop
int3
loope
in
pop
loop
cwtl
mov
lock
xchg
movsb
adc
lods
enter
stos
lret
and
cli
jp
mov
test
imul
pop
push
lret
into
ds
in
pop
movb
dec
ss
jp
sub
sbb
sarl
test
imul
ret
sub
dec
xchg
mov
inc
sbbl
xor
sbb
add
inc
repz
pop
pop
aam
or
inc
mov
add
testb
dec
lea
pop
sub
popf
call
and
ja
aas
or
push
lea
ja
push
pop
fnstcw
lret
fistl
mov
lock
jne
jle
sbb
jmp
rolb
incb
cmc
sbb
and
or
push
stos
xchg
popa
pop
iret
xor
movsb
movsb
mov
rcl
loop
dec
and
cli
pop
jno
lock
push
mov
xchg
into
sarl
mov
and
aaa
negl
xchg
scas
fldenv
mov
inc
cmp
mov
stos
enter
das
adc
mov
jmp
mov
mov
or
mov
mov
roll
or
pop
das
out
out
adc
jno
add
pop
repnz
dec
pop
ficomps
stc
fistps
adc
and
shrb
or
jge
int3
and
in
xlat
mov
mov
in
inc
or
gs
cld
ljmp
lods
xor
outsb
shlb
jb
pusha
cmp
add
push
repnz
xchg
mov
jae
nop
test
xchg
inc
lods
test
push
mov
jns
repz
aad
mov
sar
add
push
cmp
call
mov
fadds
and
push
sbb
loopne
dec
outsl
cltd
in
popf
lret
daa
lret
mov
pop
mov
fistl
adc
shrl
push
pop
in
and
insb
out
das
stos
stos
mov
mov
sbb
fadd
or
cmpsb
imul
mov
cmp
pop
dec
mov
test
pop
adc
mov
cld
gs
inc
jnp
std
inc
int
lcall
enter
xchg
in
in
lcall
push
xor
shr
xlat
dec
xor
sub
sti
lret
subl
cmc
dec
mov
lcall
fcom
push
pusha
jmp
lahf
std
and
punpckhdq
push
out
xor
jmp
fisttpll
sub
cmpsb
mov
add
or
out
push
cmpsb
mulb
push
dec
adc
fists
data16
outsl
mov
xor
jns
xor
daa
notb
jmp
cmp
xchg
int3
ret
pushf
inc
pop
out
dec
stos
mov
nop
fmull
int3
or
push
pushf
xorb
xchg
mov
push
pop
adc
jae
jne
add
jae
inc
pop
sarb
out
test
xchg
ret
repz
arpl
cmpsb
adc
xor
dec
cltd
xor
inc
xchg
inc
insl
scas
or
and
loop
pusha
lods
shr
mov
mov
xchg
lea
or
cmp
pushf
lret
lock
mov
test
ja
xor
jmp
or
fadds
in
cmp
mov
dec
cmp
pop
pusha
insl
cmp
xchg
loope
cmpsb
dec
pop
dec
loop
in
lods
push
adc
das
arpl
popa
or
testb
aad
xor
push
scas
pop
cmc
or
sub
push
xchg
adc
scas
int3
lods
movsb
xorb
sub
xchg
xor
xlat
sti
jno
mov
pusha
test
sbb
ficoml
adc
cmp
push
hlt
pop
add
repnz
pcmpeqb
mov
jne
scas
pop
and
xchg
or
pop
adc
outsl
sbb
in
rol
inc
mov
shrl
out
stos
dec
rcrb
xorl
sub
rorl
gs
inc
inc
adc
jg
imul
push
popf
push
push
push
mov
mov
stc
out
add
in
jb
orb
pop
faddp
out
rcrl
adc
pop
cmp
jg
inc
mov
aad
mov
push
xor
js
push
xchg
xchg
loopne
addr16
sbb
sub
imul
pop
xor
sarb
push
daa
push
xor
push
mov
adc
jae
shrl
ret
jecxz
jp
jmp
cmc
pmullw
fwait
in
loop
cmp
mov
cmp
flds
pop
pop
jecxz
pop
inc
aad
ljmp
into
loopne
jmp
mov
mov
les
lahf
ds
lret
xor
mov
dec
mov
dec
sub
flds
xchg
jl
cltd
out
outsb
pop
and
inc
stos
push
cmp
sub
add
es
sub
add
jge
pop
cltd
jae
cmc
icebp
loop
mov
std
rcr
cmpsl
xchg
pop
push
sbb
pop
outsb
lea
cmc
or
sub
out
adc
stos
scas
outsl
ret
js
jns
pushf
dec
movsb
mov
or
bound
dec
mov
inc
add
imul
sbb
sbb
mov
cmp
enter
or
add
outsl
or
mov
push
push
subl
popa
sbb
push
push
cmp
mov
or
fwait
xor
f2xm1
dec
ret
int
lods
insl
xor
and
pop
lcall
mov
scas
inc
scas
add
push
jle
nop
aas
push
loopne
les
xorb
push
aas
fs
adc
ret
stc
mov
mov
cmpsl
add
mov
lods
adc
sub
fildl
insb
std
or
seta
cs
aam
xchg
movsl
gs
jecxz
push
leave
loopne
inc
cltd
sub
or
clc
test
push
cs
sbb
shl
adcl
pop
jp
mov
push
shll
imul
sbb
push
pusha
cmp
xchg
mov
mov
dec
in
pop
test
jge
and
int3
cwtl
mov
jecxz
nop
shrb
mov
mov
cwtl
and
pop
std
outsl
jne
stc
and
hlt
mov
pop
dec
cmp
orl
mov
push
mov
fistpl
and
test
loop
dec
pushf
ret
xchg
xchg
dec
add
cmp
xor
mov
or
je
push
add
cmpsl
cmp
jne
loop
xor
or
or
ret
daa
xor
jo
xchg
xor
inc
mov
push
arpl
push
lcall
je
mov
or
outsb
pop
rcl
xchg
pop
bound
leave
push
xchg
push
lods
out
cld
jno
inc
std
mov
insb
pop
pop
std
mov
repnz
xor
jge
push
mov
mov
lods
movsb
or
int3
rcl
mov
das
aad
fdivl
cwtl
jmp
shlb
pop
sbb
mov
sub
or
and
xchg
sub
and
stc
sub
lahf
sbb
dec
fidivl
jnp
mov
or
stc
pop
lods
sbb
mov
adc
mov
adc
sarb
mov
addps
jg
repnz
pop
add
adc
arpl
push
aas
mov
mov
jmp
stc
cwtl
adc
shrl
fildl
push
adc
mov
cmp
movsl
or
xchg
xor
xlat
xchg
cmp
cltd
cmp
stc
data16
das
mov
and
push
frstpm(287
push
push
std
add
sub
mov
jge
loopne
lds
jge
cmc
xor
cmp
or
xchg
lret
popl
xchg
out
inc
popa
and
xor
sub
or
mov
xchg
ja
xchg
xor
sbb
fsubl
mov
cltd
adc
push
mov
jg
sti
int
call
dec
pop
insb
js
stos
lahf
xor
mov
lahf
into
cmp
repnz
pop
mov
fdivp
xchg
adc
push
das
les
add
adc
les
leave
adcb
add
rolb
ffreep
test
push
out
mov
push
and
int3
sbb
add
adc
dec
or
cmpxchg
push
xor
rcll
lret
add
mov
scas
xlat
sbb
jle
adc
mov
jmp
xchg
inc
lret
ja
data16
movsb
sarb
hlt
rol
gs
daa
mov
cwtl
add
pop
push
pop
addb
cli
mov
in
sub
sub
in
mov
loopne
dec
int3
je
dec
insb
cmp
add
jg
xchg
pop
test
mov
ljmp
sub
ss
mov
add
sbb
daa
into
fmul
inc
push
adc
mov
mov
outsb
mov
sbb
xchg
mov
popa
imul
in
shrb
sti
cmp
sub
xchg
arpl
push
pop
aam
push
xor
push
xor
in
pop
and
push
ja
pop
push
adc
into
add
sub
popf
pop
jg
mov
lods
jp
loop
repnz
testl
data16
and
mov
pop
insb
push
sbb
neg
int
sarb
mov
clc
xor
stc
rorl
shlb
and
pop
adc
cwtl
inc
pop
inc
inc
xor
pop
push
in
nop
inc
loopne
xchg
cmp
je
cltd
add
adc
popf
cmpsb
iret
scas
jnp
mov
pop
jg
std
xchg
push
mov
mov
mov
push
pop
xor
ret
pop
xchg
mov
inc
mov
mov
xchg
sub
cmpsb
int
dec
bound
fadd
xchg
loop
ficomps
js
out
push
jecxz
mov
shrl
push
popf
ds
iret
cmp
fbld
or
out
mov
cmovne
movsb
pop
jbe
sbb
inc
dec
push
pusha
or
int3
mov
mov
pop
dec
xchg
sub
stos
shll
pop
test
cmpsb
mov
adc
xchg
pop
stos
lock
pop
fs
js
mov
xor
ret
and
cmp
movsb
or
fistl
jo
out
and
test
scas
inc
leave
lea
pop
out
push
pop
mov
adc
daa
dec
push
push
or
movsb
mov
cmpsl
mov
lahf
lds
add
pop
push
lahf
lahf
in
dec
dec
mov
ret
icebp
jge
fstpt
adc
push
popf
cmpsl
nop
lods
xchg
cltd
push
fimull
lods
push
inc
and
loop
pop
lds
pop
movl
or
ss
cwtl
sbb
cwtl
jge
daa
enter
pop
sahf
popf
and
adc
mov
mov
mov
mov
mov
and
fadd
mov
pop
repz
popf
cld
and
cld
sub
sbb
arpl
pushl
out
test
mov
xor
mov
pop
or
add
fiadds
and
dec
insl
call
nop
imul
dec
iret
loop
sub
xor
test
sbb
into
rorb
shlb
pop
add
std
xorl
dec
cltd
dec
test
mov
sub
shr
lds
mov
call
mov
push
mov
push
int3
mov
lahf
data16
push
stos
and
test
lret
jl
jo
push
xchg
das
pop
mov
and
mov
repnz
and
push
xchg
inc
or
outsl
jmp
sbb
mov
loope
ss
jns
aaa
jecxz
inc
pop
sub
lahf
push
jp
ret
call
and
insb
push
dec
jae
pop
cmpsb
ret
dec
inc
or
out
jb
add
pop
aas
scas
cmp
jo
jge
imul
mov
test
das
adc
out
and
xor
jne
jle
cmp
stc
inc
leave
sub
test
mov
adc
mov
mov
test
push
or
aad
data16
dec
push
sahf
adc
mov
sbb
out
push
in
psubsb
enter
inc
pop
fisttpl
jle
in
cmc
aam
add
adc
leave
insb
jge
pcmpeqb
mov
and
mov
dec
popf
lret
pop
push
lcall
jno
lods
adc
jle
in
xchg
and
ret
orb
add
fdivrp
outsb
cmc
pop
lea
push
mov
push
mov
sbb
or
jns
int3
or
loop
divl
jecxz
inc
dec
xchg
pop
out
mov
push
add
cmp
jbe
ret
fistpl
aam
mov
sbb
lock
stc
sti
insl
sbb
pop
xor
fwait
int3
push
inc
inc
adc
push
dec
addr16
mov
in
xor
push
cmp
ror
outsb
cli
inc
cmp
mov
mov
in
rolb
adc
pop
cmpsl
push
mov
sbb
and
scas
xor
jo,pt
clc
mov
mov
push
repz
mov
cmp
inc
adc
mov
lods
xchg
nop
cld
js
pop
lea
pop
cli
dec
jno
mov
jg
das
add
insl
insl
mov
mov
xor
lock
jns
xor
out
mov
clc
mov
insl
sub
add
dec
push
mov
out
jnp
dec
xor
push
les
mov
mov
sbb
cmc
jle
jae
inc
mov
loopne
cmpsb
loopne
repnz
push
gs
into
repz
jge
addb
leave
out
ja
loopne
data16
adc
sub
aam
roll
or
dec
stc
sbb
or
aad
sbb
frstor
inc
or
push
mov
je
cmp
fcoml
ja
adc
sub
das
int
jno
mov
cli
orb
ljmp
sahf
jno
pop
push
pop
dec
mov
cmpsb
sbb
ss
push
cmpb
mov
push
xchg
pop
ds
ljmp
aad
out
test
adc
sbb
popa
and
jae,pt
sub
xchg
pop
ret
dec
roll
dec
cmp
xchg
jnp
sub
or
jge
or
add
jno
xorb
add
jns
adc
push
inc
aam
push
mov
loopne
mov
cltd
and
mov
dec
inc
lahf
roll
jbe
clc
sub
push
sbb
and
mov
sub
popa
push
or
sub
or
or
sti
sbb
mov
iret
stos
imul
inc
jae
xor
push
push
or
sbb
pop
cmc
cmpsb
and
dec
jno
xchg
and
add
rcrl
xchg
or
sub
and
mov
fstpt
inc
imul
fsts
mov
jmp
sub
cld
popf
or
xchg
xchg
mov
pushf
xor
loopne
inc
cld
dec
jmp
adcb
jecxz
or
mov
jge,pt
sub
push
mov
js
insl
dec
aaa
mov
inc
or
adc
sub
xlat
movsb
cltd
sarb
add
sub
or
adcl
or
xchg
add
jmp
ds
xor
pop
pop
fcoml
in
imul
sub
daa
movsl
dec
pop
adc
in
je
adc
loopne
fdivr
push
cmc
mov
push
mov
mov
das
dec
pop
add
push
int
mov
jae
cmp
xchg
jnp,pn
dec
fisttpl
fwait
scas
dec
mov
clc
mov
dec
push
and
sahf
jnp
shlb
fucom
lret
scas
lods
sub
dec
xchg
mov
pop
in
push
dec
fwait
mov
int
sub
xlat
xor
leave
loop
xor
and
cmp
sub
add
pop
ror
pushf
testl
sub
xchg
scas
repnz
mov
cmpsl
push
dec
and
cmp
rcl
sar
icebp
dec
mov
inc
mov
lahf
rcrb
jp
pusha
jnp
sbb
addr16
iret
fwait
roll
lret
add
leave
sub
inc
pushl
adc
jecxz
aaa
sbb
cmp
sbb
ret
xchg
sub
loopne
out
adc
push
sti
arpl
stos
stos
jo
pop
out
and
in
adc
jns
push
sbbb
lds
mov
mov
mov
dec
xchg
add
xor
adc
popf
jo
cs
outsl
add
push
xor
mov
inc
and
mov
push
push
popf
inc
push
in
mov
mov
mov
arpl
mov
jecxz
inc
lods
jmp
mov
std
push
mov
js
pop
in
push
imul
insl
sub
sahf
xor
xor
bound
push
out
neg
dec
xor
shlb
pusha
leave
mov
ret
xchg
stos
mov
dec
xor
sti
adc
das
cld
pop
bsf
pop
das
mov
push
adc
and
adc
nop
jle
add
or
daa
icebp
add
xor
ror
or
sbb
stos
xor
out
sti
or
push
add
or
add
jae
pop
inc
inc
fnsave
in
je
movsb
mov
sub
je
stc
sbbb
pop
jge
inc
mov
add
aaa
pop
adc
mov
icebp
addr16
pop
lret
push
jae
aaa
adc
cmp
int3
ss
adc
mov
dec
xor
jns
inc
mov
mov
xor
int
push
add
fsubl
or
sahf
inc
mov
mul
mov
pop
or
insb
outsl
sub
icebp
adc
jae
fistpl
push
nop
pop
cld
out
in
daa
xlat
inc
mov
scas
in
xchg
inc
and
push
dec
fs
repnz
push
jb
dec
repnz
inc
mov
loop
sub
movsb
inc
out
and
rcrl
inc
cmp
inc
dec
mov
xchg
xchg
add
lahf
add
cwtl
scas
enter
fstpl
mov
imul
int
cmp
scas
das
ret
lea
lock
and
mov
jbe
mov
pop
sub
shlb
fldcw
xor
jae
lea
jo
ljmp
push
aam
test
into
fldenv
mov
mov
mov
lret
popa
and
dec
icebp
addb
inc
lods
xorb
mov
hlt
ja
sti
arpl
icebp
dec
or
dec
inc
fmuls
jns
lds
fwait
and
mov
xchg
push
inc
ja
add
gs
xlat
mov
sbb
ljmp
insl
call
dec
fistps
loopne
inc
xlat
movsl
out
out
stos
dec
dec
inc
es
adc
add
cmp
inc
dec
shll
cld
push
dec
aas
xchg
mov
nop
push
es
jb
and
adc
sbb
jo
adc
stc
inc
jae
and
adc
pop
push
dec
in
mov
xchg
or
aaa
loope
mov
insb
rorb
js
insb
push
push
sub
jns
outsl
cmp
xchg
xlat
imulb
and
call
fisttpl
in
shl
arpl
xchg
mov
inc
or
xchg
lret
sbb
dec
inc
cmp
in
lahf
aam
xchg
sbb
lret
sbb
shlb
loopne
xchg
push
xchg
movsl
imul
inc
cltd
cmp
test
dec
aas
cli
cmp
xor
in
sbb
lock
rorl
add
push
and
sub
adc
imul
pop
cwtl
and
int3
adc
jle
adc
fldenv
in
inc
add
popa
mov
rcrl
mov
pop
push
cmpsb
cmp
fsub
mov
into
mov
jb
shlb
inc
lahf
pusha
arpl
xchg
xchg
popa
repz
fidivrs
jns
jae
adc
fdivl
adc
xor
or
jo
lcall
orb
pushf
lret
jle
xchg
imul
mov
in
insb
or
dec
cmpsl
clc
dec
in
ljmp
cmp
in
xor
int3
pop
ss
int
sbb
lcall
adc
sbb
xlat
mov
aam
mov
stc
jge
outsb
mov
loope,pt
adc
pop
popa
and
dec
pop
fistl
clc
subl
jmp
jne
sti
sbb
push
movsl
daa
push
inc
pop
sbb
jnp
pop
jg
or
rcll
gs
push
pop
cltd
add
jbe
push
data16
adc
je
mov
dec
aas
cltd
inc
inc
addr16
pushl
adc
shlb
xchg
jl
dec
rcrb
aaa
dec
cwtl
shll
js,pn
sahf
test
aad
mov
arpl
mov
fs
stos
pop
xor
fimuls
dec
jmp
push
xchg
lret
jle
and
cmp
jl
icebp
sbb
pop
sub
push
sbbl
xor
in
shrl
add
mov
or
dec
mov
sbb
and
in
shlb
sub
push
sub
lcall
ds
repz
add
mov
out
mov
xchg
ret
add
add
lret
xchg
sbb
iret
sbb
dec
je
fsubp
cmp
in
push
xchg
inc
mov
dec
push
lea
sub
stos
ja
fdivrs
lret
and
mov
mov
jns
ret
cmpsb
pop
iret
add
daa
push
in
test
loop
mov
pop
shrb
jl
jge
cmp
pop
loope
pop
inc
idiv
imul
add
stc
arpl
mov
sahf
jp
mov
add
or
ficomps
aaa
frstor
jge
jnp
lcall
and
mov
shll
sub
jae
inc
or
test
loope
cli
xchg
cmpl
mov
push
aad
leave
pop
mov
pop
push
push
stc
xchg
pop
ret
mov
lds
inc
mov
lods
loope
add
lea
ja
xchg
aam
out
sbb
mov
insb
in
adc
xchg
sub
sub
pop
mov
adcl
or
push
pop
out
hlt
add
add
aam
std
cmp
arpl
cld
sbb
dec
lock
sub
push
fwait
movsb
cltd
or
sbb
cld
xor
jg
shlb
sbb
jb
negb
push
daa
stos
sub
orl
out
push
jge
sbb
push
dec
dec
inc
mov
dec
mov
inc
and
or
lret
adc
add
sub
cmp
xchg
push
pop
popf
push
fwait
add
repnz
jns
rcl
inc
add
imulb
into
cmpl
adc
mov
arpl
ja
sbb
dec
lahf
xchg
push
repnz
mov
in
sub
adc
cltd
cmp
addl
sub
xchg
das
push
mov
xchg
ret
mov
pop
mov
imul
in
loop
cmc
push
cmp
inc
cmpsb
jb
add
push
or
cmpl
add
jg
leave
rcll
cli
adcb
lea
mov
sbb
inc
cmpsl
dec
mov
pop
sbb
cli
dec
push
mov
push
roll
sbb
imul
xchg
pop
enter
xchg
xor
sub
add
or
into
jl
ret
pusha
fistpll
lods
dec
xor
mov
test
mov
mov
inc
aam
add
lods
es
test
dec
movb
cmp
inc
bound
sub
insl
out
pusha
sahf
mov
cmp
scas
xchg
and
test
dec
out
jmp
inc
mov
jnp
stc
adc
cmp
dec
js
testb
sahf
and
push
ror
push
push
xlat
push
dec
stos
je
testb
call
int3
sbb
mov
sub
push
push
mov
pextrw
cmp
lret
mov
insl
out
pushf
outsl
les
pop
test
into
sub
test
jcxz
mov
mov
in
test
jo
into
cmp
xor
xchg
jne
or
fnstsw
sbb
fnstenv
js
or
incb
adc
xchg
insl
push
xor
rep
shrb
mov
inc
xor
and
sub
pop
fisubs
cmp
and
cmp
or
jae
inc
or
adc
xchg
and
ljmp
mov
fbstp
cltd
gs
ljmp
sub
and
jle
push
leave
scas
test
jp
jnp
stc
sar
jge
jmp
roll
jg
aad
xchg
mov
mov
in
cmp
test
fdivs
pop
out
sti
xchg
lea
ret
out
out
mov
xor
je
pop
jp
std
pop
add
push
add
scas
adc
inc
cmp
sub
inc
popa
jecxz
dec
push
or
stc
sahf
cmpsl
cmp
jbe
les
out
les
jmp
loopne
xchg
cmp
push
sbb
jg
mov
mov
dec
mov
pop
cld
xchg
sub
fcmove
jne
xchg
xor
enter
pop
xchg
sbb
mov
in
sar
mov
cltd
rcl
mov
sbb
push
into
fs
dec
jp
xor
xchg
mov
push
repnz
add
jnp
xor
pop
ds
cmp
std
mov
cmc
jl
out
push
mov
xor
adc
ret
mov
cmp
lods
inc
push
jns
adc
in
fmuls
jne
and
xchg
lahf
push
push
outsb
push
cmpsl
xchg
dec
or
fsubrs
fstps
sbb
push
pushf
pop
je
shl
mov
into
call
sarb
xchg
lods
pop
xchg
mov
imul
int3
push
pop
gs
nop
cs
jne
add
popa
xchg
int
test
test
icebp
lcall
pop
sub
ret
push
cmpsl
mov
sbb
ds
mov
les
or
mov
jns
imul
test
xor
mov
insl
outsl
or
popa
call
jge
cwtl
xor
lcall
int
mov
dec
mov
daa
or
scas
sub
hlt
mov
pop
xchg
mov
lahf
aas
jle
je
pop
mov
pushf
sub
and
out
or
and
ds
pushf
in
call
xor
inc
loopne
sarb
ljmp
jl
popa
clc
popa
roll
push
das
xchg
repz
sbb
cmpb
add
add
push
xor
sub
cmp
mov
push
dec
push
mov
adc
fs
xchg
adc
stc
cmpl
pop
mov
xor
idivl
push
inc
mov
and
or
push
adc
stc
cmpsb
xorl
add
outsl
push
pop
mov
inc
scas
mov
in
loop
or
add
clc
inc
loopne
arpl
dec
push
into
leave
xchg
mov
pusha
sbb
shlb
mov
sbb
add
dec
pop
jne
sbb
push
fcoml
jns
in
adc
xchg
mov
pop
mov
fcoms
es
inc
outsb
add
test
je
test
icebp
sub
mov
cmp
sbb
pop
or
adc
lock
adc
and
lret
mov
add
ljmp
mov
mov
clc
fmull
jmp
in
pop
or
movsb
cmp
mov
sbb
mov
fiadds
xchg
xchg
dec
call
test
test
xor
ret
les
sub
aam
cli
fildl
pushf
outsb
mov
ret
mov
sbb
ds
push
roll
cltd
int3
ja
add
push
cli
movsb
push
xchg
and
push
add
and
dec
int3
inc
dec
ret
cmp
popl
sub
into
lret
decb
daa
sbbl
jle
out
test
adc
daa
aas
int3
in
lods
add
icebp
mov
stc
ds
and
ret
and
int3
sub
repnz
and
lret
dec
fbstp
out
in
clc
fisttpl
cmc
sub
dec
mov
lcall
dec
testb
xchg
mov
lret
test
pop
cmp
clc
fsubr
xchg
mov
xchg
add
cli
push
fmul
push
inc
imul
xor
pusha
stos
ja
inc
loop
pop
dec
jb
cs
inc
into
stos
cmpsl
cmp
in
mov
xchg
or
aam
xor
and
add
sub
rorl
mov
sahf
in
cmpsb
mov
cmp
adc
dec
out
xlat
adc
enter
mov
mov
xchg
mov
lret
xchg
addr16
pop
leave
add
or
xchg
push
jmp
arpl
incb
mov
rcll
stos
and
sub
repz
add
fidivs
cltd
or
fwait
cmp
mov
movsl
mov
lds
inc
stos
sldt
addr16
js
sbb
mov
arpl
jp
mov
je
cmp
cli
adc
es
mov
faddl
add
movl
cmp
iret
mov
pop
cmc
or
iret
repz
push
mov
popa
xchg
std
dec
aam
mov
add
inc
add
or
repz
push
adc
jl
mov
add
imul
call
in
and
fsubl
jns
xchg
mov
movsl
popf
mov
and
imul
xchg
mov
loope
push
jns
sbb
dec
or
inc
js
or
sub
jmp
outsb
filds
and
jge
adc
in
int
add
lock
pushf
call
rcr
or
inc
mov
adc
mov
xor
xchg
add
fiadds
add
inc
push
mov
and
jmp
cltd
mov
shlb
xor
mov
pop
mov
ret
pop
in
adc
push
sbb
pop
arpl
mov
out
loopne
es
rolb
into
lret
std
pusha
inc
xchg
mov
sahf
xchg
sbb
xchg
inc
pusha
dec
mov
pop
push
pop
in
stos
loope
popf
mov
jne
clc
pop
sub
mov
and
lret
mov
push
shlb
out
les
mov
mov
popf
mov
sub
push
test
outsb
orl
inc
mov
int3
call
out
adc
mov
fidivs
sbb
cmc
xchg
sbb
arpl
and
divl
mov
mov
add
lahf
cwtl
add
leave
lods
imul
adc
fcoml
jp
cmp
test
enter
jmp
xchg
stos
add
fs
fisubs
subb
loopne
in
popf
aad
mov
adc
mov
jecxz
mov
imul
jo
dec
mull
cwtl
fwait
pusha
dec
jp
notb
std
lods
jmp
push
cltd
cmpsb
xchg
cmp
shlb
call
dec
shll
inc
addr16
loope
pop
inc
mov
adc
adc
jl
pop
lret
jbe
gs
push
fwait
add
fists
xchg
loope
sti
dec
mov
and
and
mov
lock
mov
sarl
adc
arpl
and
pop
add
xor
push
mov
sub
cld
dec
xchg
int3
cmp
inc
test
ss
or
push
pop
in
lods
mov
jne
insb
push
movsb
cmp
fsts
adc
pop
cmpsb
cmpb
xchg
push
stos
mov
xchg
push
jae
cmp
subl
hlt
in
xor
movsb
mov
pop
cld
or
xchg
push
stc
repnz
addr16
icebp
jle
fadds
sahf
push
ss
push
sbb
or
cmp
mov
je
xor
mov
enter
jnp
adc
inc
push
imul
add
add
mov
ljmp
shll
scas
pushf
arpl
data16
mov
dec
insl
xor
loop
arpl
dec
or
sbb
int
nop
imul
js
add
mov
push
adc
or
inc
movsb
imul
lock
pop
jns
int3
sbb
out
bound
aaa
stc
sbb
mov
xor
ficomps
daa
mov
ret
pop
mov
sbb
test
not
xor
rcll
orb
sbb
or
inc
jmp
inc
add
adc
add
js
lods
or
jg
pushf
and
xchg
in
in
jo
shlb
mov
mov
sub
jecxz
andl
imul
fldl
and
stos
mov
sub
or
fdivs
loop
pop
iret
pop
sub
inc
or
add
nop
daa
cmp
sbb
scas
hlt
mov
in
sbb
inc
shrb
loopne
js
mov
mov
pop
cmp
fisubrs
insl
jge
cmpsb
outsl
or
xchg
lods
pop
stos
sbb
cmp
nop
add
addr16
mov
adc
jae
sbb
jnp
es
push
cmp
mov
sbb
push
popa
stos
cmp
daa
mov
frstor
xor
mov
cmp
fxch
cmp
into
cltd
outsb
push
sub
xor
push
fstpl
and
pop
cmp
ret
out
mov
ficompl
outsb
mov
je
in
mov
jle
sub
lods
jge
mov
shl
cwtl
cmpsb
cmp
ds
mov
pop
movl
xchg
rclb
jle
or
jl
lret
in
cld
negl
aad
mov
adc
xor
mov
mov
in
lret
loop
push
inc
mov
cld
fwait
sbb
xchg
bound
int3
into
xchg
int3
cmp
test
inc
sub
scas
ja
mov
sub
mov
xlat
cmp
lea
scas
jmp
cmp
shll
xchg
pop
sbb
rcl
mov
movsl
nop
sub
xor
movsl
adc
ss
push
fisubrl
roll
xor
jo
dec
es
mov
aam
aad
or
int3
jmp
fsts
cmp
or
push
dec
cmp
add
insl
nop
clc
lea
push
fs
cltd
in
push
inc
mov
movl
jo
and
sar
cld
cmp
push
fmul
mov
xor
call
icebp
push
xchg
out
jmp
xchg
dec
dec
aad
lock
in
inc
hlt
inc
sahf
aam
mov
mov
je
add
ja
cmp
dec
jmp
int
jnp
cltd
push
aaa
inc
stos
movsl
je
jge
lret
enter
mov
xorl
push
push
xchg
icebp
xchg
push
test
repz
jno
ret
adc
pushf
and
imul
push
das
push
inc
dec
pop
ja
lock
inc
sbb
sbb
lret
mov
push
ljmp
stos
daa
int3
stos
mov
jg
dec
sbb
push
jp
in
adc
int
jge
or
ret
push
mov
cld
sahf
and
mov
mov
cmpsl
loope
cmpsb
inc
mov
xchg
cltd
xchg
test
fdivrp
push
fsts
fnstenv
jno
jge
arpl
cmpsb
jns
push
int3
adc
and
and
fimuls
sbb
dec
xchg
pop
enter
dec
push
lret
mov
int3
and
fstl
test
pop
xchg
hlt
sbb
push
lods
das
gs
fnstcw
pusha
dec
daa
aas
pop
ljmp
jns
jp
jle
aad
add
stos
jo
add
and
add
add
cmc
subps
inc
push
movsl
dec
add
dec
je
nop
mov
ret
and
bound
ljmp
cld
test
xchg
xchg
loope
xchg
push
mov
outsl
xchg
sbbl
push
lds
mov
in
aas
xor
dec
dec
push
out
push
lea
lcall
add
cltd
pop
push
xchg
sarl
jnp
mov
jg
subl
mov
imul
in
ljmp
fwait
sub
fsubr
dec
push
jae
pop
inc
std
inc
pop
imul
ljmp
mov
popf
fstpl
inc
fldl
cs
addl
adc
decb
or
cmc
lahf
jbe
mov
xlat
fnstenv
repnz
jmp
mull
fidivrs
xchg
scas
xchg
std
adc
sbb
sub
xchg
and
cmp
fdivrl
lods
pop
fs
pop
and
fcompl
adc
lods
push
lcall
adc
adc
enter
or
arpl
ss
add
jnp,pt
mov
adc
and
adc
popa
jb
outsl
sub
xchg
cmc
add
rcrb
add
aad
xor
shll
clc
sub
mov
ljmp
push
xor
enter
lret
outsl
pminub
ret
push
add
call
inc
shrl
out
jbe
out
daa
and
test
lret
dec
adc
sub
sub
sub
lea
pop
adc
pop
stos
adc
pop
lock
mov
ftst
dec
inc
dec
es
jecxz
or
xchg
and
nop
mov
sahf
jbe
dec
imul
es
cmp
pop
sub
push
into
xchg
loop
mov
mov
stos
cmp
mov
jl
mov
jns
in
fdivl
inc
lods
out
or
mov
mov
jb
repnz
cmc
inc
aas
test
lretw
add
xchg
fmull
cs
lcall
sbb
push
pop
push
mov
pop
mov
repz
xchg
loope
outsb
mov
xchg
test
pop
xchg
mov
sub
mov
inc
dec
adc
cmp
pop
hlt
cmp
data16
mov
fsubr
aam
xor
iret
mov
fcoms
loopne
dec
cld
pop
dec
repnz
mov
sub
mov
test
popf
jecxz
aam
xchg
or
xchg
mov
aam
or
mov
push
and
scas
test
in
ficoml
lret
in
inc
add
adc
int
inc
xlat
arpl
cli
clc
adc
sbb
out
and
out
arpl
out
mov
lcall
add
jp
popa
js
and
mov
xchg
ret
jo
and
dec
mov
mov
xchg
sbb
sbb
out
xchg
data16
xchg
fnstsw
enter
xor
sbb
jb
cmp
push
cmp
lret
les
cmp
inc
shrl
into
nop
xchg
and
jb
mov
mov
out
int3
cld
outsl
mov
arpl
cld
mov
mov
sbbl
rorb
inc
loopne
xchg
insb
jbe
imul
mov
bound
add
fsubrs
mov
je
cltd
popa
adc
xchg
andb
bnd
lret
cmp
adc
jb
daa
jo
or
pop
les
xchg
push
lret
push
cli
enter
pop
rol
mov
imul
movsb
jl
out
cmp
push
adcb
add
ljmp
sbbl
push
jecxz
inc
push
jg
xor
icebp
xor
push
jno
xchg
fimuls
inc
push
push
mov
or
mov
cld
xchg
fwait
push
cli
lahf
ss
sbb
repnz
jae
push
imul
sbb
enter
aas
jo
push
or
mov
jmp
jnp
lret
icebp
inc
and
test
adc
cmp
adc
add
sbb
pop
cwtl
push
xor
or
rcrl
addr16
cmp
arpl
push
pop
xor
repz
cli
mov
pop
in
lds
movsb
movsl
inc
jge
aad
sub
push
or
out
rcrb
add
push
dec
adc
cmc
xchg
mov
xchg
popf
cmovo
adc
push
pop
or
nop
rorl
orb
mov
imul
and
out
cmp
mov
lret
clc
mov
xchg
mov
and
push
xor
test
call
out
stos
dec
adc
aam
loope
insl
pop
adcb
popa
push
mov
inc
lods
mov
pop
ffreep
lods
data16
dec
loopne
sahf
aam
ja
jge
push
sub
dec
imul
or
cltd
fs
or
in
mov
aam
cld
aas
fadds
leave
rorl
mov
push
dec
lret
daa
lahf
cwtl
movsl
fmull
push
sbb
int
cmp
add
cmc
mov
inc
fcmovnbe
xlat
or
mov
test
cmp
arpl
push
shlb
inc
inc
pushf
mov
cmp
cli
add
hlt
xchg
cmp
push
testl
repnz
inc
xor
sbb
mov
lods
sub
iret
add
loopne
push
push
sbb
lcall
xor
clc
adc
jge
int3
push
imul
pop
jne
push
inc
xchg
fimull
or
lcall
jg
xchg
jnp
mov
dec
insb
aaa
push
lret
test
sbb
mov
sub
adc
push
xor
add
roll
shrl
pop
or
out
jae
adc
fwait
outsl
mov
icebp
mov
mov
leave
push
xlat
adc
addr16
lret
lahf
jne
enter
aad
sbb
shlb
jle
pop
daa
sub
cli
repz
sti
dec
daa
fnstenv
dec
cmp
movsb
add
add
enter
push
imul
fisubl
push
sti
ficoms
pop
mov
addr16
mov
and
ja
xor
pusha
dec
mov
xor
fadds
xor
subb
xor
mov
add
cli
and
test
xchg
cs
mov
adc
test
mov
xlat
enter
push
shlb
push
filds
jbe
mov
je
fdivl
daa
push
cmc
shlb
pop
mov
sti
and
hlt
add
lods
push
inc
scas
pop
add
cmp
pop
mov
jge
xor
mov
pop
test
and
ljmp
pop
loopw
shll
shl
adc
repz
orl
testb
stos
mov
mull
inc
fistps
movsl
push
sbb
sub
or
out
mov
cs
push
inc
cmc
rorl
divb
sbb
mov
jns
cmp
jo
js
or
popf
cmc
push
push
xchg
ret
mov
popa
jmp
fisubrl
dec
add
sub
mov
or
sub
test
movsb
xchg
mov
enter
test
or
jnp
push
call
loope
cmp
aam
dec
add
mov
scas
mov
push
fildll
test
xor
jp
or
mov
push
test
mov
stos
jne
cmc
cltd
pop
fbld
lods
or
imul
and
cmp
and
or
jecxz
fildll
mov
sbbl
imul
cwtl
xchg
push
push
arpl
xchg
and
mov
cltd
movsl
inc
test
mov
paddq
inc
dec
les
adcb
dec
dec
stc
and
decl
lods
push
dec
lcall
pop
cmpsb
jle,pn
addr16
jle
inc
scas
sbb
insb
mov
sub
cmpsb
add
sbb
cmp
cmp
lods
mov
mov
repnz
push
int
not
fidivl
stos
xchg
movb
iret
sbb
xchg
adc
mov
mov
pusha
mov
test
and
fsubs
xor
sbb
in
movsl
mov
sub
test
and
dec
iret
cmc
mov
repnz
jp
fstp
cmp
cli
lods
sub
out
int3
call
mov
pop
pop
sbb
insb
or
ss
dec
lods
adc
ljmp
test
test
mov
popf
or
push
inc
inc
insb
in
sti
or
lds
orl
popf
daa
divl
pop
sbb
in
and
inc
sbb
jl
sahf
subl
hlt
or
leave
dec
jle
push
sbb
dec
pushf
add
scas
repz
sbb
je
shll
rcl
mov
sub
test
mov
cwtl
stos
xchg
daa
cmpsb
pop
enter
mov
push
mov
in
and
push
pop
clc
or
inc
lret
test
fcoms
add
sub
shll
call
add
sub
and
add
dec
popf
lods
imul
mulb
popf
pushf
es
imul
xacquire
aaa
movb
int3
fxch
mov
push
bound
cld
ret
adc
mov
pop
and
mov
pop
aam
das
outsb
stos
scas
jle
or
mov
pop
lret
ja
mov
inc
jns
mov
jmp
addr16
dec
sbb
test
fimuls
and
mov
cmpsb
icebp
mov
mov
les
inc
pusha
insb
lret
fbld
and
push
orl
int
pop
gs
xor
sub
in
lret
out
int
mov
add
mov
aam
not
ds
jne
sbb
rcll
dec
jecxz
and
stos
outsl
xchg
mov
sub
imul
xchg
push
clc
mov
movsb
in
xchg
in
sbb
adc
icebp
adcl
dec
xor
test
sub
mov
pop
sbb
into
xor
xchg
sub
dec
ret
push
cmpsl
rcrb
sub
mov
inc
mov
sbb
imul
into
out
js
jmp
and
pop
mov
mov
fcoml
mov
adc
sbb
or
mov
jns
hlt
xlat
add
out
repnz
pop
adc
add
aas
jmp
insl
push
mov
cltd
pushf
adc
jge
scas
mov
outsl
adc
sbb
lcall
mov
jnp
pop
add
cmp
xchg
ret
push
in
add
xchg
pop
mov
mov
iret
clc
out
das
mov
or
sbbl
and
outsb
sti
loop
sbb
push
jns
pop
enter
jle
xor
xor
jp
pushf
sbb
popf
inc
or
cmp
lret
mov
in
mov
and
shlb
pusha
loopne
push
das
int
rolb
int3
mov
cmp
out
mov
pushf
es
and
cmp
test
add
push
data16
lock
pop
xorb
cmp
pop
dec
lahf
loope
cmc
dec
inc
and
inc
movsb
sbb
lcall
lcall
add
pop
mov
jno
mov
mov
lahf
push
ret
mov
adc
xor
push
mov
mov
adc
out
ljmp
por
mov
dec
lods
xchg
jbe
add
dec
xor
pop
or
nop
pop
add
aad
lret
sarb
sahf
js
inc
fildll
call
jns
sbb
push
cs
cld
mov
ficomps
dec
rol
les
cli
cltd
sahf
or
add
push
jl
cmc
mov
cli
ja
push
in
mov
fdiv
mov
xchg
loopne
sti
out
ret
jmp
add
adc
lret
inc
ds
scas
jmp
add
cmp
dec
into
mov
fnsave
add
mov
inc
js
jae
push
add
in
jmp
das
repnz
pop
xchg
push
mov
fsubs
xchg
mov
andl
in
lods
xor
jo
inc
mov
mov
add
push
popf
sub
cmp
sbbl
and
push
dec
into
cs
js
hlt
shll
push
sub
ss
stc
in
cld
scas
in
add
ret
pop
dec
sub
bound
dec
call
ret
dec
pushf
push
stc
cmp
fincstp
sbb
jmp
test
decl
mov
mov
sarl
bound
mov
cmp
ja
sbb
and
sub
adc
fs
scas
mov
inc
insb
f2xm1
pop
in
stc
das
xchg
outsb
daa
or
sub
dec
ds
mov
js
push
adc
push
jle
and
out
cmp
dec
jnp
nop
sbb
fxch
fdivrl
lods
xchg
fidivl
in
cmp
inc
and
jl
mov
mov
add
mov
pop
lret
cmp
dec
ja
leave
mulb
xchg
mov
xlat
xor
int3
xor
aaa
sbb
xchg
fimull
and
mov
movsl
mov
sub
cmp
jg
shll
mov
insb
lahf
rorl
cmp
inc
lods
mov
pop
push
stos
mov
mov
jmp
mov
and
je
clc
mov
scas
mov
and
adcl
daa
and
adc
aam
xor
rcl
dec
mov
xor
or
adc
adc
mov
ljmp
imul
jne
adc
jp
pop
pop
inc
lods
inc
jmp
sub
lcall
add
pop
inc
scas
cwtl
ret
add
sub
cmp
sbb
nop
pop
sub
aad
loop
adc
dec
fidivrs
adc
fst
ds
arpl
repnz
cltd
test
int3
jl
sub
jecxz
mov
or
aad
jp
imul
xchg
in
ss
outsl
shlb
gs
jne
jl
sub
push
lret
int
add
pop
lds
lcall
mov
in
xor
ret
inc
push
dec
jae
mov
mov
mov
cmp
shll
inc
push
dec
sub
das
xchg
mov
cmp
cld
xchg
fucomp
mov
addb
mov
int
hlt
and
sahf
sub
ss
jno
mov
adc
in
sbb
imul
push
push
mov
bound
push
jg
push
fcom
sti
add
adc
xlat
sub
rcrb
pop
sti
fcmovne
popf
add
jae
xchg
fistps
mov
jge
mov
test
ficoml
rorb
test
cs
test
mov
hlt
test
lret
jns
aam
xor
mov
lcall
fs
fimull
popf
daa
mov
cmc
test
pop
call
mov
ret
out
daa
lods
imul
push
fcomps
lods
and
divl
mov
or
jl
add
jge
lret
dec
xchg
dec
sahf
cmp
pop
jp
insl
imul
jae
xchg
xchg
cmp
jmp
xlat
push
loop
lods
aas
call
lcall
cmp
bnd
int
mov
int
outsl
test
sbb
mov
and
imul
pop
add
and
adc
cmc
and
push
jge
rcll
adc
pop
inc
cmc
cmp
xor
imul
fcmovbe
xor
cmp
jo
and
sbb
lcall
push
mov
pushf
pop
mov
cmpsl
insb
mov
movsl
cmp
and
scas
push
mov
xor
pushf
movsl
mov
stos
jp
jae
stos
sub
fisubs
das
xor
lock
cmc
test
aam
jle
pusha
adc
outsl
jg
lcall
inc
fildl
ja
aam
add
push
pinsrw
fs
jne
cltd
jle
and
outsb
cmpsb
ljmp
add
mov
cmp
adc
mov
hlt
cmp
in
add
xchg
imul
in
insl
ret
pop
and
shr
jl
mov
jbe
ret
push
clc
sti
aam
je
xor
into
xchg
jg
sahf
lcall
stc
cmp
jno
jg
jns
push
mov
and
out
dec
rcll
and
and
and
xchg
nop
pop
arpl
stos
in
out
cmp
cmp
fs
jbe
xchg
repnz
das
cmp
cld
xchg
push
dec
jmp
shrb
sub
fisubl
ljmp
pop
inc
add
ss
xchg
cmpsl
inc
cmc
pop
lea
sahf
sub
in
add
sarb
leave
aas
push
cmp
outsb
rorb
jb
aad
dec
inc
das
out
mov
imul
add
push
xor
cmc
cmp
mov
cld
mov
cmpb
add
sub
xchg
inc
mov
push
push
pusha
lock
push
jno
push
jbe
inc
in
jno
and
aaa
addr16
push
loopne
loopne
mov
lret
lret
fs
jmp
loopne
sbb
sbb
fisubrl
pminub
sbb
and
dec
ficoms
push
xchg
and
xchg
fidivl
aam
loope
mov
adc
cmc
jmp
testl
out
jle
pop
call
sub
push
add
xor
lcall
mov
movsl
mov
rclb
in
add
add
repz
ret
mulb
dec
cltd
popl
sarb
mov
stos
jbe
jg
test
testb
call
jp
adc
mov
hlt
push
dec
lock
fistps
cmp
sar
stos
jmp
in
clc
arpl
pop
adc
imul
adcb
std
pop
mov
xchg
test
mov
lds
xlat
imul
int
sbb
adc
and
xor
mov
sbb
cwtl
les
lods
lds
pop
out
mov
aad
add
mov
xchg
repnz
mov
push
cmp
dec
inc
pusha
pop
dec
std
jmp
stos
inc
pop
stc
mov
ret
shrb
sub
mov
add
imul
movsb
dec
mov
sub
or
jo
movsl
cmc
xor
in
xchg
mov
push
sbb
loopne
mov
cs
mov
add
iret
into
mov
aad
movsb
call
dec
pop
pop
or
cmp
xchg
pop
movsb
or
adc
push
adc
inc
pop
push
pop
jno,pn
out
insl
dec
mov
adc
negb
cmpsb
pop
pop
popa
inc
fcompl
call
pushf
push
fisubl
std
lods
mov
shrl
loopne
mov
movl
sub
mov
sub
inc
out
xchg
subl
xchg
cmp
inc
ss
dec
fistl
and
int
jmp
outsl
add
pop
push
cmp
lret
sub
aas
jbe
inc
jmp
dec
dec
cmp
sbb
mov
push
dec
mov
xor
mov
lret
push
xor
sub
sahf
xchg
xchg
push
dec
mov
mov
push
push
cmp
ljmp
daa
pusha
mov
add
fidivrs
icebp
test
mov
adc
xchg
lock
pop
aad
inc
push
ss
adc
ss
jb
arpl
mov
int3
out
scas
popa
jg
add
out
mov
push
movsl
aas
dec
mov
pop
xor
clc
hlt
dec
fsubs
mov
lret
outsl
aam
cmp
mov
mov
pop
xchg
lds
pop
mov
add
std
clc
xchg
hlt
int
mov
push
sub
cmp
jle
nop
mov
aaa
lods
rclb
imul
bound
xchg
popf
mov
xchg
or
ss
inc
adc
sarb
shl
pop
mov
ss
loopne
pop
stos
mov
inc
std
add
into
stc
int
je
lret
xchg
fdiv
inc
cmpl
push
jp
imul
addr16
mov
or
ljmp
out
dec
ret
sarb
loopne
xchg
fwait
mov
mov
icebp
jno
cmp
sbb
lock
test
sahf
mov
inc
push
jb
aas
fisubrs
pop
jge
sub
sbb
jbe
lret
fs
cmp
sarb
ds
cmp
mov
roll
inc
clc
sbb
push
loope
int3
and
loop
lret
add
lea
mov
push
fstl
test
or
addr16
or
cmp
out
es
pop
dec
in
add
sub
leave
or
dec
mov
test
cmp
cmp
cmp
nop
sbb
mov
rcrl
sbb
adc
mov
int3
lods
fwait
sub
push
mov
rorl
pop
pop
mov
and
cltd
sbbb
fiadds
xor
fstpt
xor
cmp
mov
inc
jbe
fucomi
cmp
and
and
pcmpeqd
shr
inc
enter
loope
aas
test
jb
cmpsb
inc
mov
adc
loopne
js
cmpsb
inc
mov
jno
ja
jl
lods
mov
and
out
add
test
push
int3
jnp
xchg
dec
or
inc
mov
cmpsb
in
mov
lar
sub
and
jae
mov
in
mov
push
add
daa
xor
cmpsl
pushf
mov
sbb
les
pop
push
mov
in
es
or
xor
or
push
mov
call
and
or
or
jns
adc
mov
adc
repz
shll
adc
fwait
outsl
testb
mov
jnp
adc
inc
xorl
js
scas
jnp
sbb
cmpsb
ds
adc
and
sub
mov
xor
jno
in
push
inc
and
or
cmc
mov
and
lea
add
mov
jno
mov
and
mov
outsb
fildll
scas
xor
ja
jle
mov
mov
push
cmp
aaa
das
xor
popa
jecxz
push
test
pushf
or
pop
int3
mov
cld
pop
mov
fimull
daa
lods
cltd
cmp
enter
out
ds
or
pop
mov
cmp
or
sti
push
gs
jg
and
jb
movsb
fdivp
fnstenv
xchg
pop
ret
sub
movsb
dec
dec
into
out
push
fs
pop
push
int
sbb
movsl
es
arpl
mov
fisttps
dec
mov
pop
fmull
inc
jl
out
pop
mov
popa
daa
insl
pop
pop
xchg
es
jbe
mov
xchg
xchg
push
or
test
jbe
push
shr
ret
fdivrs
call
mov
xchg
add
xchg
sub
or
sub
hlt
addb
mov
or
sub
mov
cmpsl
xor
mov
ret
in
test
sti
dec
sbb
push
xchg
xor
aaa
out
xor
xor
xchg
stos
or
mulb
lret
or
movsl
mov
mov
mov
pop
hlt
jmp
jnp
jl
data16
mov
cmp
mov
rcrl
push
cmp
sub
pop
pop
scas
ss
in
cmc
jbe
pop
pop
push
mov
adc
or
sarb
ror
mov
xchg
jnp
aad
xchg
mov
movl
push
idivl
daa
mov
leave
rsm
cmpsl
and
pop
mov
ds
test
push
and
inc
sti
ja
jno
test
lods
dec
stc
dec
shlb
pop
xchg
lds
out
mov
das
pop
adc
xchg
xor
push
xor
lcall
in
sar
inc
popa
repnz
stc
cmp
fmul
cltd
daa
cmp
xchg
jo
pop
fstps
std
sbb
insb
add
sahf
imul
mov
jno
aad
add
push
pop
jnp
xchg
aaa
sar
inc
mov
inc
xor
cmp
mov
cltd
adc
mov
mov
sub
push
xchg
testl
add
sbb
push
mov
loop
mov
in
push
and
lcall
sti
aaa
adc
cmc
inc
mov
pop
mov
add
jg
ja
mov
push
pop
leave
mov
loop
jl
cltd
push
cmp
rolb
scas
inc
sub
addr16
add
movsl
add
ss
push
sahf
test
cmpl
arpl
lds
stc
out
pop
sub
ret
movsl
test
ljmp
xchg
adc
jl
push
loope
mov
mov
xor
cmp
mov
mov
jns
xor
std
pop
fstpl
je
sub
fiaddl
das
xchg
pop
ficoms
dec
push
xor
mov
sbb
outsl
mov
repz
xor
mov
out
mov
in
insb
inc
mov
subl
dec
mov
imul
or
adc
sbb
and
pop
sub
notl
adc
or
dec
add
inc
and
push
in
mov
xchg
fisubs
leave
sub
les
cltd
ja
test
cltd
xlat
mov
aaa
add
mov
mov
out
mov
add
shrl
mov
lock
rolb
or
shrl
lock
into
int
int3
psllq
cltd
jns
xchg
push
repz
push
adc
push
int3
ret
mov
pop
int
insb
pop
add
icebp
adc
inc
mov
inc
mov
popf
and
in
push
outsb
cmp
add
jmp
testb
mov
mov
and
mov
out
and
aaa
jp,pt
xchg
or
xchg
dec
in
inc
sub
mov
test
jecxz
shl
out
movsl
jmp
movsl
in
aaa
jo
sub
mov
push
or
lods
pop
mov
testb
fwait
cmp
loope
mov
fcoml
test
into
add
mov
jg
daa
sub
fidivl
or
pop
push
leave
push
add
cmp
cmp
pop
lret
mov
les
ret
imul
dec
out
int3
pop
cltd
jp
imul
out
jae
enter
mov
ja
stc
push
jecxz
pushw
xchg
rolb
sub
dec
fcmovb
decb
cmp
mov
insb
fnstcw
mov
decl
div
pop
les
outsb
push
cmc
das
fcompl
jl
inc
jnp
testl
xor
jl
loope
and
pusha
dec
sub
mov
movsl
int3
movsb
aad
push
inc
push
les
sbb
test
and
fwait
scas
pop
in
jg
aam
cwtl
inc
sbb
dec
cltd
movsb
xor
std
mov
pushf
cmp
jae
jmp
andb
loopne
adc
lock
mov
les
and
fisubrl
jns
out
icebp
xchg
push
mov
mov
xor
scas
gs
lods
out
mov
lock
movsb
incb
test
ret
add
scas
push
test
inc
sti
push
dec
adc
lock
das
ljmp
jecxz
stc
push
in
das
dec
loop
int3
pop
mov
imul
pop
dec
scas
add
sub
cwtl
mov
loop
jl
mov
lock
jle
or
fsubrs
jns
sbb
insb
dec
cltd
test
jg
je
mov
rcrl
out
xlat
stos
lea
filds
addl
jg
sarl
stos
dec
inc
int3
pushf
sub
shl
fsubs
xor
divl
adc
xchg
nopl
loop
xchg
cld
fsubr
push
test
cmpsb
mul
mov
pop
mul
ljmp
test
sub
xchg
sbb
mov
fidivs
sarb
add
nop
hlt
or
rcrb
jle
xor
stos
lods
sbb
mov
dec
mov
push
inc
or
das
and
push
cmp
pop
push
mov
jmp
adc
std
sahf
scas
push
andl
pop
xchg
lock
mov
dec
das
mov
and
inc
loopne
cltd
fucomip
lods
mov
jecxz
xor
nop
push
les
clc
gs
cmpsb
xor
cmc
scas
ret
fwait
dec
aas
mov
daa
enter
push
hlt
mov
and
es
adc
in
repz
and
and
jns
mov
incb
or
lods
hlt
dec
or
xchg
insl
mov
and
aam
dec
insb
inc
std
loope
mov
sbb
dec
mov
test
sbb
dec
sbb
cwtl
imul
or
adc
popa
mov
cwtl
cmpsl
ljmp
bound
add
adc
add
sarb
jne
shrl
ficoml
int3
shl
cmp
clc
jg
or
in
fs
out
or
lods
xchg
push
orb
cmp
sbb
pushf
movsb
orb
sub
fidivs
xchg
mov
nop
lock
hlt
xor
gs
cmc
xchg
and
lret
add
sbb
dec
ja
pop
xchg
mov
mov
jb
jl
pop
andl
mov
mull
mov
push
sbb
imul
loop
dec
inc
xor
xchg
aam
or
jmp
add
inc
sbb
and
aad
int
xor
outsl
inc
pop
int
jmp
das
ljmp
je
push
push
loope
or
gs
jb
aad
icebp
pop
sbb
pop
lea
xor
out
movsb
popa
mov
jns
sahf
int3
sbb
mov
inc
adc
iret
lea
test
and
cli
mov
dec
mov
mov
cwtl
pop
jns
pusha
push
and
dec
jne
cli
nop
nop
xchg
jo
in
mov
fisubs
mov
cwtl
pop
jmp
test
lds
dec
punpckldq
add
fstl
adc
in
out
push
jp
mov
pushf
jp
jg
rclb
add
jns
or
sbbb
and
jnp
shlb
inc
stc
xor
std
jne
test
shlb
mov
inc
ljmp
fcoml
xchg
ja
stos
ja
or
inc
push
and
and
cmp
decb
pop
ret
movsb
cmp
cltd
mov
sbb
lds
pop
push
in
sbb
inc
rolb
push
lods
sbb
inc
jne
shlb
call
aaa
xlat
pop
sbbb
js
sbb
mov
jno
popw
sbb
adc
mov
mov
mov
or
push
sti
xor
pop
ror
mov
icebp
xchg
cmpsb
inc
shl
push
aaa
leave
add
mov
sbb
out
mov
xor
and
fwait
je
std
addr16
ret
adc
push
imul
mov
jge
enter
push
and
jp
cmpsl
ja
popf
inc
test
lcall
inc
xor
mov
daa
lods
xor
scas
fldt
jmp
pop
stos
stos
movsb
mov
popa
icebp
or
jnp
loopne
stc
jbe
lret
jne
add
jmp
into
mov
sbb
icebp
das
xchg
mov
cmpsb
xor
jg
aam
mov
jp
fistpl
shl
mov
cmpsb
clc
cwtl
daa
pop
jmp
out
mov
jge
pop
sarb
or
sbb
daa
pop
popa
xchg
xchg
int3
cmpsl
test
sub
mov
pop
fistps
outsl
add
jb
push
cmp
cmpsl
test
push
dec
rcrl
jge
lret
cld
pushf
insl
mov
push
dec
inc
outsl
sarb
testb
fdivl
and
js
cmp
cmpsb
fsubs
jno
lds
add
pop
xrelease
jmp
aam
lods
movsl
fdivrs
leave
mov
sbb
pop
inc
sbb
hlt
jge
dec
mov
sub
out
add
push
cmp
test
or
mov
sar
inc
jecxz
loopne
pop
sbb
sub
loope
mov
dec
cmpsb
xorl
pop
addb
or
mov
lds
push
or
mov
push
push
divb
stc
push
sub
and
les
into
out
mov
rorl
push
xor
nop
sub
fdivrl
add
sub
and
out
mov
mov
or
ds
xchg
cltd
mov
hlt
into
fcmovnu
or
je
mov
loope
inc
lcall
fdivl
jl
ret
xlat
popf
lock
ret
sub
sbb
into
dec
shll
je
js
add
dec
add
int3
int
push
xchg
aad
mov
mov
fbstp
inc
push
push
mov
jns
add
popf
repnz
and
jecxz
inc
stos
push
sub
and
out
cmp
js
add
xchg
hlt
or
fstl
fmul
setbe
call
mov
jmp
inc
lcall
ja
cmp
mov
fdivl
jae
lods
xor
jne
aaa
inc
hlt
cmp
les
mov
adc
rcll
cs
fstpt
jnp
adc
subb
repz
dec
lods
stc
xor
mov
push
jnp
int3
bound
or
inc
hlt
cmpsl
out
cmp
test
mov
out
jp
test
fadds
sub
test
repz
cmp
mov
lods
push
adc
fisttpl
scas
aaa
push
dec
pop
sbb
bound
mov
mov
add
test
and
imul
and
xchg
nop
sahf
sbb
sub
push
int
jb
insb
cltd
rol
test
stc
cs
outsl
pop
pop
xchg
cwtl
xor
pop
out
fisubrs
dec
out
push
pop
cmpsl
xchg
adc
cmpsb
ret
xor
add
rcl
in
cmp
push
pop
fisttpll
inc
adc
adc
icebp
imul
mov
enter
pop
jp
pop
xchg
insl
adc
xchg
jb
dec
fwait
mov
testb
iret
insb
pop
mov
and
int3
mov
and
fstp
sbb
fdivrl
push
aad
cmp
mov
dec
out
push
pop
adc
out
mov
sub
mov
call
or
sbb
mov
data16
inc
jo
xchg
out
jmp
in
ret
test
mov
mov
jmp
mov
aas
les
movsb
xlat
enter
stos
jno
stos
aaa
sbb
popa
testl
push
icebp
mov
xorl
addr16
push
icebp
sub
imul
sbb
push
ja
in
pop
xor
mov
push
mov
add
adc
int
les
push
jecxz
pusha
in
test
dec
push
lods
xchg
icebp
pop
aad
jne
jae
int3
loopne
rcll
sbb
xor
mov
dec
out
mov
sub
in
popf
daa
cmp
lds
xor
faddl
xchg
pop
jl
out
test
mov
jnp
push
cld
sti
dec
cmp
pop
jbe
repz
icebp
dec
shlb
loopne
lods
addr16
xor
pusha
stos
test
movsb
or
mov
push
and
mov
jge
pop
mov
inc
data16
lds
sub
loop
pop
jg
jb
aas
mov
xchg
sbb
dec
dec
fistpll
sbb
lock
pop
or
jmp
xcrypt-cbc
cmpsl
aam
loope
sub
stc
cmpsl
sbb
popf
dec
mov
inc
cmp
clc
mov
dec
xor
loopne
sbb
add
mov
cmp
jmp
enter
and
mov
mov
push
fidivrl
add
js
push
mov
cmp
lods
outsl
aaa
lcall
push
stos
jnp
mov
mov
scas
push
into
pop
sbb
mov
out
sbb
push
dec
or
movsl
cmp
add
adc
jl
mov
sbb
imul
jmp
movsb
mov
adc
inc
popa
aas
in
push
mov
xchg
mov
mov
mov
sbb
inc
mov
movsb
sbb
pop
fbld
scas
push
cmp
out
fbstp
cmp
dec
in
test
jle
adc
mov
cmp
scas
cld
xchg
mov
pop
shrl
div
jnp
lea
arpl
or
mov
mov
rorb
dec
shl
lret
call
adc
mov
xchg
fidivrl
mov
flds
jmp
push
xor
inc
scas
cwtl
imul
insb
or
mov
ss
lds
sti
cwtl
push
orb
xchg
popf
dec
data16
sbbl
rcl
js
clc
or
dec
add
cmp
mov
cmpsl
mov
rcrb
das
fidivrs
addr16
add
cltd
jg
mov
mov
inc
pop
sbb
push
rorb
leave
mov
fcompl
popf
push
shrb
mov
add
or
add
cltd
mov
fbld
mov
into
clc
push
inc
adc
xor
cld
or
icebp
pop
sbb
in
push
add
cmp
pop
push
pop
cld
add
lods
dec
adc
add
lret
lcall
jne
out
push
mov
mov
lcall
sti
mov
ljmp
or
call
stc
mov
into
pop
sti
pop
addr16
ficompl
add
lea
mov
fsts
movl
and
inc
pop
je
inc
xor
pop
lds
pop
sbb
loopne
bound
lea
jle
addr16
fdivrp
or
sbb
into
sbb
jl
inc
mov
or
mov
mov
lods
mov
call
je
test
jl
push
jb
xor
fidivrs
ror
push
testl
dec
pushf
jnp
sbb
cwtl
push
jmp
mov
fisubs
pusha
sbb
xchg
adc
dec
pop
inc
in
or
adc
push
repnz
fcmovnb
sub
mov
pop
jno
lock
mov
xchg
and
shlb
ja
lods
sbb
outsb
xor
xor
mov
imul
sbb
or
pop
clc
cltd
mov
dec
sti
movsl
icebp
mov
add
pop
mov
je
add
cltd
mov
movsl
data16
adc
push
loope
pop
dec
pop
loop
ss
movsb
xlat
jns
mov
mov
dec
dec
mov
push
or
cltd
dec
repnz
leave
imulb
shrd
loopne
sub
xchg
mov
pusha
test
inc
add
testb
dec
mov
cmp
rolb
or
shl
mov
mov
fptan
inc
rclb
div
cmp
ret
test
adc
or
je
lcall
add
pop
jae
mov
test
sub
xor
sub
add
xadd
nop
mov
int
jns
rclb
push
sub
sub
mov
mov
cwtl
xchg
mov
dec
mov
sub
pop
ror
mov
pop
pop
push
mov
std
cmc
push
or
mov
dec
loopne
cli
xor
in
xor
lea
inc
fimull
xchg
je
sub
mov
xchg
inc
ret
sbb
jecxz
jnp
jmp
push
jbe
fwait
mov
rcll
mov
inc
and
jmp
lods
mov
mov
pop
bound
loop
insl
push
adc
scas
out
jns
push
adc
cld
lret
or
cmpb
jp
jns
jb
mov
aaa
rcrl
inc
mov
or
pop
jle
dec
lea
jmp
xchg
subb
sub
dec
enter
iret
cmpb
sti
jge
je
xchg
lods
add
mov
mov
cltd
ret
mov
hlt
dec
aas
add
cmpsb
pop
pop
jae
sub
fisubrs
insl
movsl
psubsw
into
dec
cmpb
ds
add
ja
pushf
fdivl
mov
xor
xchg
or
pop
cli
cmp
mov
ss
inc
mov
scas
xchg
test
loopne
push
jno
dec
icebp
sahf
jnp
cltd
sub
out
xor
js
or
sub
push
mov
cmp
sub
cli
cltd
mov
lods
movsb
xor
push
or
push
push
jmp
fistpl
and
adc
cmpsb
sub
iret
sub
arpl
imul
fldt
jmp
inc
pop
and
xor
clc
std
clc
push
dec
repz
xchg
adc
xlat
add
cmpsl
xchg
dec
xchg
xchg
cmc
xchg
pop
fwait
cmp
jmp
dec
jle
xchg
pop
lods
bound
decb
cmp
movsb
shl
pushf
stos
and
jp
lods
lock
cld
xchg
xorb
sbb
sbb
lahf
pop
cwtl
add
cltd
xor
mov
movsb
in
sub
fnstsw
ss
sub
mov
cmp
ljmp
ljmp
push
insl
sahf
or
sbb
enter
xchg
aas
pop
adc
sub
xor
cmp
dec
fadd
sbb
push
pop
push
fcompl
mov
jge
mov
mov
jp
adc
repnz
lret
int3
push
push
push
lret
inc
cltd
outsb
es
cmpsl
repz
push
out
lcall
cmp
xlat
lds
gs
push
cmp
stc
test
stos
aas
into
stos
add
ds
sbb
mov
adc
and
cs
adc
cld
cwtl
mov
or
sub
lock
fcmovbe
mov
stos
shl
dec
and
in
jmp
lods
fisubrl
mov
xor
xchg
call
pop
in
insb
lret
and
divl
xchg
pop
push
adc
push
mov
adc
fcomi
sbb
push
and
ror
lock
mov
fcoml
in
adc
jb
xor
fistps
leave
pop
insb
ss
and
fisubs
cmp
mov
pusha
pop
and
in
jecxz
into
stos
test
out
push
adc
stc
aam
dec
int3
test
lock
out
das
sbb
adc
in
mov
sbb
movsl
mov
xorl
lcall
or
inc
xor
ds
jo
inc
test
xchg
or
mov
mov
cmp
xor
inc
dec
lea
xchg
out
call
in
leave
sti
test
xor
nop
jbe
das
adcl
fldl
sub
ds
cltd
push
arpl
lock
xchg
cmpsb
sbb
push
pop
aad
imul
int
test
fmuls
stos
leave
or
testb
aaa
pop
or
and
test
mov
dec
push
sub
out
adc
sbb
inc
daa
and
out
shlb
lds
out
jno
clc
lock
cli
mov
in
sbb
addb
sbb
dec
xor
or
loop
mov
jno
sbb
or
push
mov
out
and
push
lock
mov
mov
insl
loopne
loopne
xor
lds
loope
fsubr
xchg
aad
or
xor
inc
sbb
dec
pop
stc
jge
aam
or
fiaddl
dec
or
adc
mov
mov
sbb
cmp
push
adc
inc
ficoms
loope
xchg
in
pop
outsb
imul
lds
xchg
ljmp
add
lods
xor
or
outsl
fs
es
int3
rcl
xchg
add
and
xor
sbb
fstpl
scas
xor
add
add
scas
sbb
xchg
or
arpl
lods
inc
mov
push
sahf
cltd
sub
ret
xor
mov
pop
sbb
fsubl
int
rolb
cmp
cltd
sub
push
std
jns
inc
xor
leave
dec
xor
imul
cltd
jo
stc
out
pushf
push
sub
sbb
jmp
push
sub
aaa
mov
adc
pop
jmp
jnp
xor
fcmovnbe
xchg
push
adc
icebp
ljmp
xor
icebp
mov
xchg
or
push
pop
mov
push
cs
cmc
ret
add
popf
jecxz
repnz
add
mov
or
or
push
add
add
mov
add
mov
fstpl
out
inc
andb
in
push
or
mov
dec
mov
dec
xorl
faddl
mov
jmp
int
mov
gs
nop
fcoms
loope
xor
push
sub
scas
jg
jl
xchg
cmp
roll
cld
insl
inc
mov
scas
test
sahf
popf
pusha
repz
in
mov
inc
dec
and
cmp
cmpsl
or
xor
int3
inc
sti
popa
das
mov
adc
repnz
xor
ret
xlat
adc
out
mov
leave
js
cmp
int3
inc
cld
inc
test
push
std
scas
sarl
push
inc
insb
leave
insb
mov
mov
xlat
les
cld
jnp
daa
les
and
sahf
push
ljmp
fbld
xor
pusha
pop
dec
dec
inc
stos
adc
dec
lock
jle
adc
imul
outsb
mov
dec
pusha
lock
jb
arpl
and
out
repnz
out
into
jge
filds
sub
mov
and
mov
push
nop
cmpsb
hlt
mov
out
call
inc
data16
push
sbb
popf
jmp
mov
xlat
mov
int3
mov
sbb
sub
inc
xchg
mov
add
lds
push
xchg
je
dec
test
sbb
push
fdivrs
lret
inc
xlat
mov
xor
push
xchg
dec
dec
or
adc
hlt
xor
cs
leave
mov
dec
lret
xchg
daa
das
outsb
push
push
xorb
insb
adc
jns
cli
push
lock
cmc
pop
fbld
add
push
or
adcb
fimull
mov
or
jne
test
adc
pusha
push
stc
ret
xchg
mov
out
sbb
imul
jecxz
jae
push
jg
dec
dec
adc
cmpl
adc
sbb
js
bound
adc
adc
outsb
xlat
scas
push
lock
dec
xchg
jecxz
shll
sbb
mov
mov
pop
lea
push
rorl
popf
lea
dec
pop
je
and
fnstcw
sarl
xor
pop
scas
in
fucom
adc
lahf
lods
lcall
iret
inc
mov
dec
and
loopne
cmp
xor
mov
pop
adc
push
cmpsb
lcall
push
inc
sbb
mov
shlb
sbb
loope
pop
push
je
loop
sub
addl
test
outsb
idivb
jge
xrelease
in
mov
out
testl
dec
loopne
int
lds
icebp
push
jnp
mov
pop
cmp
mov
xchg
cmp
cmp
imul
mov
dec
sbb
jbe
dec
pop
cmp
inc
push
mov
jno
xchg
fcmovne
pop
push
in
adc
test
ret
ljmp
xlat
pop
ret
cs
sti
sub
test
sbb
inc
in
sbb
jle
mov
das
xchg
arpl
out
imul
aad
or
or
iret
lahf
sbb
popa
stc
inc
jno
iret
inc
cs
push
mov
inc
aas
aad
clc
out
sbb
call
shl
mov
imul
mov
fldcw
pop
into
roll
xchg
int3
mov
cmpsl
push
sbb
inc
test
adc
jo
mov
outsb
aam
outsb
test
mov
xchg
movsl
dec
sbbl
mov
out
in
cmpsl
push
and
mov
push
or
pop
mov
dec
cmp
mov
leave
add
sbb
xor
outsl
inc
and
in
iret
aam
das
mov
dec
adc
xchg
xlat
sbb
mov
mov
divb
mov
cmp
rol
sahf
cs
adc
xor
fstl
pop
loop
lds
sbb
ret
daa
lods
dec
xor
aam
loop
jns
cmp
mov
dec
mov
rclb
rorl
das
mov
jmp
pop
jecxz
mov
xchg
push
data16
dec
mov
mov
pop
pusha
rcll
sbb
fs
gs
movsb
xchg
cmpb
xchg
lret
mov
das
and
out
clc
and
inc
inc
mov
xchg
dec
loope
or
sar
jp
mov
sbb
push
dec
add
popa
adc
popa
cli
loop
xchg
cmc
lret
es
fldcw
mov
aas
stos
adc
xchg
or
stos
inc
fidivl
data16
jns
pop
test
in
idivb
push
or
mov
sti
sbb
fisttpl
mov
aam
nop
jl,pt
lods
sub
jnp
icebp
xor
fdivrs
lcall
push
mov
fsubrs
shrb
or
mov
in
pop
pop
scas
fmull
and
cmp
repz
in
inc
ljmp
pop
data16
jmp
pushf
or
add
mov
pop
lods
aaa
scas
dec
pop
jmp
push
mov
subl
pop
scas
xchg
aas
leave
outsl
mov
push
adc
ja
xor
enter
jnp
sbb
xchg
push
inc
adc
icebp
cmc
cltd
add
xor
lahf
pusha
xor
ss
jae
add
ret
sub
sbb
rcr
xor
ret
jo
aam
shlb
mov
jmp
shll
and
or
sub
mov
imull
gs
mov
jmp
jle
and
mov
jo
sbb
adc
gs
push
lcall
in
xchg
montmul
cmpsb
les
mov
sbb
adc
icebp
mov
adc
data16
jmp
pop
push
jne
lea
imul
xchg
jmp
pop
xchg
hlt
shrb
int
pop
lret
test
adc
ja
mov
addr16
mov
and
cmp
cmpsl
mov
xchg
out
jecxz
mov
pop
mov
arpl
inc
outsl
ljmp
rcr
inc
fidivrs
xchg
pop
or
jecxz
les
repz
nop
mov
ret
or
lods
test
cltd
out
adc
add
push
inc
push
pop
dec
out
cld
xor
xchg
dec
daa
sub
jg
mov
or
mov
js
jmp
sub
inc
pushf
out
push
add
test
or
push
jmp
lea
inc
jp
cmc
sub
sub
and
sub
pop
pushf
mov
fwait
push
imul
adc
xor
push
arpl
fldenv
add
and
add
cmc
imul
push
fisttps
inc
jmp
lock
lret
push
xchg
jns
scas
enter
test
sbb
jnp
pop
mov
movsb
in
insb
jnp
push
into
ret
pop
test
stc
repz
xor
xchg
dec
cmp
sbb
sub
test
lret
loope
nop
lret
fmull
aaa
ja
ss
xor
iret
movsl
mov
imul
push
mov
rcl
xor
xor
lods
xlat
ss
mov
into
je
and
scas
adc
fnstcw
ss
xchg
aaa
xor
xor
mov
je
pop
mov
jbe
fistl
outsb
insl
insl
enter
jbe
scas
add
pop
jb
fimuls
cltd
rcrl
fdivrs
ja
ss
iret
push
add
push
mov
js
sbb
push
and
mov
mov
inc
addb
xchg
adc
subl
dec
inc
sti
or
add
lods
mov
jno
jge
lds
add
and
nop
div
sub
idiv
jmp
xlat
xchg
out
outsb
call
data16
sub
out
divl
and
stc
cmp
negl
mov
or
insb
outsb
es
or
push
inc
pop
scas
fsubrl
push
mov
sub
jno
pushf
xchg
or
lods
mov
lea
std
inc
lods
in
fistpl
sub
sbb
bt
sub
fnstsw
movsl
ja
rorb
xchg
mov
cld
lahf
pusha
inc
outsb
adc
bound
push
andb
stc
fstpl
aad
cmpsl
push
in
dec
leave
pop
test
jne
xchg
insl
orb
shlb
fildll
sbb
mov
sub
stos
dec
mov
jle,pn
ja
aad
cwtl
xor
jno
loopne
mov
jns
xchg
shll
cmp
inc
or
mov
or
data16
adc
lds
lock
outsb
cld
sbb
lods
or
push
push
mov
add
ds
push
pushw
push
bound
jge
jnp
lods
pop
jb
ds
lods
lea
push
sbb
std
dec
jnp
mov
mov
outsl
fdivs
jns
adc
sub
pusha
pop
dec
imul
loop
es
pop
ss
inc
nop
test
cmp
jbe
push
jl
call
inc
mov
mov
push
jmp
fwait
sarb
xor
xchg
cmp
divl
not
xor
insl
push
add
iret
aam
mov
sbb
mov
lret
or
jb
out
fst
loope
jb
mov
mov
mov
add
iret
dec
std
push
jg
imul
and
stos
les
fisttpll
adc
cmp
xor
adc
or
das
mov
lods
cmp
or
and
cmc
cld
pushf
push
mov
xor
aad
popf
lahf
adc
loop
in
sub
outsl
fcoml
out
and
insl
xchg
or
lods
test
jle
test
pusha
out
mov
cmc
imul
ja
xchg
loope
lds
xchg
popw
inc
cmp
loope
or
pop
sub
xchg
jle
mov
insl
fldl2t
iret
jne
shlb
out
inc
jmp
mov
dec
lock
loopne
cld
scas
sti
fcomp
mov
sbb
ficompl
xor
mov
outsb
jno
repnz
inc
jae
testb
insb
mov
lods
jne
adc
jge
fdivrl
push
jbe
xchg
lods
cmp
cmp
dec
out
insl
lods
or
addl
or
js
call
addr16
jb
push
test
mov
pop
in
orb
and
in
je
pop
mov
add
outsl
test
loop
xlat
push
push
fstpt
cmp
push
sti
mov
ret
xchg
xchg
jecxz
int3
mov
aad
pusha
sub
pop
pop
mov
pop
pop
hlt
xchg
hlt
inc
fdivr
out
jae
in
out
jnp
neg
push
shll
scas
cmp
jo
aam
mov
imull
pusha
mov
inc
subl
mov
xor
sub
nop
push
and
jne
sub
out
or
aas
pop
cmpsl
adc
adc
push
cmp
aas
inc
mov
mov
xor
push
add
into
aaa
es
mov
cmp
mov
mov
adc
test
jp
mov
mov
mov
loope
cmp
sbb
int
mov
lock
mov
add
test
pop
pop
adcb
jno
mov
movsb
mov
mov
in
cld
popf
clc
or
xor
nop
or
inc
mov
pop
in
lahf
lods
nop
in
adc
cmp
adc
cmp
pop
xor
aaa
dec
dec
cmpsl
mov
sti
pusha
mov
outsb
les
jl
xor
xlat
xor
sbb
pop
jnp
inc
push
bound
dec
and
push
in
cmp
jno
sbbb
fiadds
or
dec
adc
cwtl
je
mov
xchg
cld
int
mov
dec
cmpsb
cmp
or
testl
jne
cmp
loope
dec
std
cltd
push
xchg
lahf
stos
mov
roll
mov
or
out
iret
in
mov
pop
jg
mov
jns
pop
push
mov
inc
clc
sub
mov
arpl
dec
scas
in
jns
mov
mov
stc
mov
inc
loopne
dec
jle
dec
lods
lret
inc
add
dec
into
sbb
lret
dec
aam
adcl
imul
notl
daa
insb
scas
pop
mov
adc
pop
xor
lret
mov
pop
and
popf
dec
negl
dec
repnz
dec
xor
jmp
loop
loopne
hlt
dec
dec
jp
aad
fsubrs
outsl
inc
cmp
repz
mov
fdivs
ja
mov
clc
out
addb
repz
jnp
pop
cmpsb
out
add
adc
mov
test
jg
dec
adc
or
push
ja
sub
cmc
add
test
cmpsb
arpl
push
add
test
aad
xchg
repz
jge
pop
adc
shr
mov
popf
aaa
mov
aaa
cmc
lret
outsl
into
icebp
push
jg
cmp
aas
fstpt
mov
or
out
xor
nop
insl
hlt
push
in
pop
sarl
mov
inc
mov
psrld
ss
mov
or
push
sbb
mov
je
icebp
iret
je
stos
or
iret
aaa
xor
ds
jg
insl
sub
and
cli
inc
pop
push
cltd
jg
outsl
aaa
xor
stos
pop
xchg
fsubs
fcmovb
insb
xor
je
stos
mov
push
aam
pop
in
ret
mov
lcall
push
test
jne
daa
cld
push
mov
sub
shl
addb
into
pop
jmp
fisubrl
daa
test
pushl
mov
imull
sahf
fcmovnbe
je
rclb
outsl
gs
or
nop
push
sti
popf
mov
js
outsl
jbe
out
lods
subb
fadd
fdivs
test
push
inc
out
adc
xor
cli
hlt
push
mov
inc
adc
dec
mov
loope
mov
popa
int3
inc
push
or
add
addl
mov
mov
out
pop
roll
lcall
into
push
pop
jge
pop
sahf
fidivs
testb
mov
add
and
mov
adc
add
jmp
sub
jl
in
add
das
test
pop
xchg
push
mov
cld
push
ffreep
dec
pop
mov
loopne
or
adc
in
and
push
bound
ret
mov
jbe
jne
push
ret
or
imull
jae
mov
loop
ret
test
xor
ss
shrb
cmpsb
cmpsl
pop
std
jbe
dec
addr16
cmp
push
cmp
cmp
jns
sbb
fistl
cwtl
mov
je
mov
mov
jae
inc
insl
insl
lret
inc
inc
sbb
adcb
or
jne
mov
push
adc
enter
pop
dec
pushf
pop
xchg
sbb
loopne
push
aad
pop
cmp
lock
xchg
jmp
adc
sub
std
shrl
inc
adc
mov
movsl
lcall
push
test
sti
xchg
clc
inc
mov
pop
pop
push
cmp
mov
and
dec
jp
add
xor
iret
or
dec
ret
pop
enter
pop
sub
dec
leave
jne
lea
or
sbb
pop
mov
subb
mov
pushf
pop
dec
add
lods
mov
mov
into
arpl
movsb
leave
push
adc
pop
or
push
sbb
cmp
out
cmpsb
push
es
rcr
sbb
ret
xchg
sti
dec
xchg
std
hlt
lret
jle
fbstp
test
test
nop
dec
outsb
imul
sbb
lea
mov
ret
in
jbe
test
es
adc
push
xchg
adc
mov
aaa
sbb
add
into
iret
xchg
fsubs
rol
and
jle
pop
and
push
xchg
shrl
xor
pop
mov
sti
cli
shl
push
lret
icebp
cltd
mov
and
loope
xchg
push
out
mov
lods
sub
out
push
mov
dec
xlat
int3
mov
jno
push
imul
popf
mov
push
jae
test
jns
push
sar
dec
push
xlat
or
nop
pop
dec
push
mov
je
mov
mov
ror
std
cmp
mov
test
push
hlt
jno
int3
jne
and
shll
mov
jne
dec
or
mov
inc
and
stos
push
xor
pop
push
les
xor
mov
mov
js
push
adc
and
aad
push
lcall
push
mov
mov
xor
push
jge
add
lret
cld
loope
mov
pusha
movsl
sub
jecxz
xor
adc
lret
xchg
mov
jg
stos
loop
and
xchg
rcrl
xchg
xchg
xor
jge
loopne
jp
mov
jle
push
stos
mov
xchg
jno
mov
xchg
dec
ret
mov
or
adc
bound
push
aaa
test
ror
das
dec
das
pop
jp
add
mov
adc
adc
push
inc
fbstp
leave
and
xlat
cmp
ja
sub
add
int
cmp
movsl
test
outsb
iret
jne
hlt
mov
pop
adc
jle
out
xchg
inc
jnp
out
inc
fcmovnbe
xor
add
in
das
scas
insl
mov
push
jnp
loop
int
mov
movsl
inc
lea
int
lahf
adc
mov
xor
aaa
insl
xchg
push
sbb
dec
dec
jae
lahf
addr16
in
lods
jae
and
inc
outsb
fidivrl
mov
jne
inc
in
jp
sub
leave
test
mov
movsl
mov
mov
pop
data16
ja
popf
adc
adc
xchg
adc
push
ficomps
je
adc
out
in
pop
cwtl
or
imul
lret
es
cmc
decl
pop
adc
in
or
push
pop
repz
das
pop
xchg
dec
lcall
push
stos
cmpsb
rcll
jge
add
push
xchg
and
mov
cmp
push
add
ficomps
ljmp
and
xchg
mov
cmpsl
mov
lea
push
fidivs
pusha
sub
je
bound
mov
mov
xor
push
jle
sbb
adc
sbb
enter
pusha
pop
rcrb
add
mov
push
repz
test
xor
push
jg
push
fcoms
push
mov
sub
js
mov
sbb
mov
in
add
pop
aam
push
bound
adc
pop
dec
mov
movsl
xchg
sub
or
xor
insl
lea
ficomps
push
sub
xor
dec
in
sarl
std
aad
gs
adc
xor
ljmp
fiaddl
xor
xchg
and
popa
push
mov
jb
or
jmp
arpl
ds
or
or
pop
sub
sbb
cli
cmp
pop
into
in
outsl
or
sbb
dec
jnp
dec
dec
add
dec
mov
sahf
add
sahf
dec
jg
out
xor
rcr
sub
ror
lds
fdivrs
stc
pushf
mov
mov
mov
cmp
stos
push
mov
add
push
inc
push
pusha
out
mov
sbbb
xchg
sbb
sbb
hlt
pop
mov
push
stc
sub
push
call
mov
sti
push
jp
cmp
push
cmp
jne
and
push
and
in
les
xchg
cltd
jne
sub
pushf
cwtl
sbb
sbb
in
roll
clc
lock
mov
cmc
mov
int3
dec
cmp
aad
shrb
testb
daa
lock
in
xlat
push
imul
out
xor
sub
aas
out
mov
leave
cmp
out
push
mov
nop
push
shlb
jmp
xor
or
mov
js
rcrb
shlb
ret
mov
lahf
out
test
and
lods
dec
in
sbb
call
jl
neg
mov
sbb
outsb
cmp
lods
mov
fwait
cmpsl
sbb
in
scas
lds
push
mov
cld
sub
rolb
pusha
in
clc
xchg
xor
into
add
pusha
jp
mov
inc
int3
xchg
mov
mov
data16
in
xchg
lcall
cmp
add
pop
push
inc
das
daa
cmp
sub
xor
jmp
jne
sbb
repnz
push
mov
add
xor
mov
mov
push
sahf
cmp
dec
enter
jne
inc
dec
and
jp
outsl
aaa
shrl
insl
jg
fidivl
or
or
loope
push
ror
pop
stos
cmpb
leave
lret
in
and
mov
add
pop
nop
aad
inc
divl
mov
lock
jg
xor
orl
mov
fdivr
jno
jae
push
adc
push
ja
test
or
mov
pop
push
fisttps
flds
fimuls
es
in
inc
mov
in
filds
mov
xchg
mov
mov
push
mov
jns
mov
push
mov
pusha
fs
inc
and
jg
lea
xchg
int
pop
push
mov
mov
mov
data16
rorl
push
mov
pop
pop
and
test
inc
sbb
mov
sbb
sub
mov
cmp
pop
xchg
dec
lods
push
scas
add
sub
mov
fists
xchg
cmpsl
pop
out
push
ss
sbb
imul
cmc
clc
hlt
cmpsb
jg
in
aas
mov
push
and
add
rcrb
mov
mov
movsl
pop
pop
add
les
mov
mov
adc
xchg
out
mov
pop
mov
pushf
add
scas
div
lret
ret
sub
int3
jle
aad
mov
fisttpll
xlat
addl
mov
push
pop
mov
stos
jo
push
insl
push
xor
dec
and
aas
adc
repz
adc
pop
dec
push
imul
add
cmp
inc
sub
add
xor
xor
not
add
mov
out
arpl
or
add
or
and
pushf
pop
push
imull
psrld
mov
outsl
insb
mov
mov
es
add
stos
scas
mov
fidivrl
xor
icebp
cmpsl
jnp
sti
mov
push
movsl
pop
push
xor
lods
sub
push
add
lock
sub
in
subb
mov
push
and
xor
lods
js
mov
sbb
insl
adc
jmp
or
adc
fiaddl
mov
daa
sub
mov
cmc
push
dec
adc
adcl
lods
cltd
stc
mov
mov
xchg
cmp
xchg
mov
lret
test
push
push
jle
shll
out
sbb
loopne
popa
push
roll
add
and
sarb
movsb
add
xchg
xor
xlat
cmp
lea
inc
ret
outsl
adc
ljmp
loopne
cli
daa
jae
and
cmp
aad
insl
ja
or
mov
lret
inc
and
lods
sbb
in
movsl
dec
pop
adc
inc
fs
rclb
iret
pop
add
cmp
mov
cmpsb
insb
aad
dec
jae
inc
movsl
pushf
cmpb
loopne
addl
cmp
andb
pop
rclb
fwait
rolb
jne
inc
sub
fistpl
pop
or
xchg
mov
call
imul
pushf
je
dec
jae
repz
sub
mov
test
add
outsl
daa
popa
jns
xor
xchg
sbb
outsb
push
jle
sbb
test
int
mov
pop
loopne
ljmp
aad
test
outsl
and
inc
sub
add
ja
fisubl
push
and
cmp
pusha
les
add
mov
movsb
cmp
jnp
pop
movsl
cmp
sbb
xchg
dec
pusha
arpl
mov
and
popf
adc
and
add
push
cmp
nop
repz
aad
insl
repnz
jo
pop
sub
repz
fmull
xchg
dec
movsb
stc
sbbl
fistps
dec
push
mov
push
mov
mov
daa
xchg
xchg
push
adc
push
jl
pusha
and
push
dec
push
jbe
aas
lock
sbb
rcpps
or
or
fs
mov
rclb
hlt
sbb
and
bound
mov
cmpsl
stos
in
arpl
lods
paddsb
sti
jl
loope
shll
test
int3
jp
adcb
or
xlat
cmp
add
cmp
in
lahf
xor
and
jmp
or
cltd
in
addb
jo
xchg
mov
cmp
nop
stos
jge
inc
pusha
jo
loope
clc
xchg
out
stc
popf
sahf
enter
sbb
cld
pop
stos
dec
jecxz
xor
push
int3
mov
ljmp
pop
add
lods
imul
xor
clc
aad
xlat
lods
xchg
js
adc
sub
mov
adc
cwtl
adc
int3
add
mov
ja
add
in
aas
adc
ret
push
add
cmove
mov
mov
mov
mov
mov
mov
shlb
push
cmp
xor
cmp
mov
fildll
xchg
loopne
loopne
xchg
loop
mov
pusha
mov
add
mov
jnp
sahf
lods
cmp
jne
mov
add
pop
repnz
in
mov
push
xchg
je
inc
ret
inc
outsb
cwtl
lock
leave
fdivr
loop
mov
sbb
xchg
sahf
pusha
sub
dec
mov
sti
sti
icebp
test
mov
add
adc
movsb
test
int3
cmp
lods
mov
push
std
sub
push
pop
xor
fs
add
ret
scas
sub
sbb
pop
and
dec
popf
mov
pushf
lea
mov
arpl
loopne
fnsave
mov
movsl
out
xchg
mov
cltd
addr16
jbe
jl
pop
fcompl
clc
ret
outsb
mov
push
xchg
fsubr
push
adc
lock
scas
xor
adc
pop
dec
cltd
in
jp
in
ficompl
je
xchg
ret
xlat
and
dec
stos
test
lds
push
push
lock
retw
notl
mov
dec
add
into
add
adc
push
cmp
in
sbbl
movsb
aad
sbb
jns
out
js
les
loopne
out
xchg
push
pop
in
pop
cmp
ret
add
mov
data16
fldl
mov
lcall
push
pop
xchg
daa
dec
ds
repnz
adc
inc
enter
mov
into
loop
and
cmp
aaa
push
fadds
dec
push
lods
mov
ret
mov
pop
pop
xor
or
pop
jno
sbb
xorb
mov
pop
cmp
lcall
add
enter
test
stos
fs
pop
bound
mov
mov
dec
mov
mov
stc
or
insl
add
fnsave
lods
mov
aaa
sbb
jmp
mov
sbb
movsb
dec
mov
out
add
in
sub
or
fwait
sarb
pop
pop
xchg
mov
data16
das
out
cmc
sbb
and
xchg
movsb
mov
sub
lods
jp
or
add
je
scas
out
xchg
push
mov
jo
xchg
inc
dec
test
fmuls
sbb
movsl
outsb
xor
sub
testb
mov
jns
cmpsb
and
cwtl
testl
pusha
inc
in
bnd
xchg
scas
cmpsb
hlt
shrl
and
and
adc
add
dec
mov
fimull
out
enter
adc
in
shrb
pop
mov
mov
and
mov
inc
popa
inc
mov
fnstenv
ret
stc
rcrl
in
test
push
rorl
pushf
mov
jae
enter
jp
loop
shrb
divb
and
in
outsb
insb
inc
mov
pop
loope
inc
pop
sub
cmp
repz
std
rol
fmul
ret
pop
inc
loop
ljmp
leave
adc
xor
cwtl
push
lods
into
pop
pop
jns
mov
outsb
pusha
js
inc
mov
jb
pop
pop
push
push
mov
inc
jge
fists
dec
lea
dec
xor
and
push
