push
mov
push
push
mov
imul
push
mov
cmp
jb
mov
push
call
mov
add
imul
push
xor
pop
div
mov
mov
mov
mov
sub
mov
test
je
mov
sub
push
mov
call
xor
divl
mov
add
cmp
jae
mov
mov
imul
xor
divl
xor
mov
sub
imul
div
mov
cmp
jae
mov
sub
push
pushl
pushl
call
add
add
add
add
cmpl
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
mov
test
je
andl
mov
sub
add
mov
mov
mov
lea
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
cmpl
mov
je
or
sub
mov
mov
sub
add
mov
mov
mov
lea
push
push
push
call
mov
mov
mov
sub
add
mov
movzwl
add
lea
movzwl
lea
mov
mov
mov
andl
xor
cmp
jae
lea
mov
mov
addl
push
lea
pop
rep
mov
add
movzwl
add
incl
cmp
jb
mov
mov
add
pop
mov
xor
pop
inc
pop
leave
ret
push
mov
sub
push
mov
push
test
je
mov
test
je
cmpl
je
mov
test
je
push
lea
push
lea
push
push
call
mov
add
push
pop
lea
add
call
mov
test
je
mov
sub
mov
mov
inc
dec
jne
pushl
mov
pushl
pushl
pushl
pushl
call
mov
mov
mov
call
mov
add
push
pushl
pushl
push
call
add
pop
jmp
xor
pop
pop
leave
ret
mov
push
xor
cmp
je
cmp
push
mov
je
push
call
jmp
push
push
push
pushl
call
push
push
push
pushl
call
push
push
push
pushl
call
pop
pop
ret
push
mov
mov
push
call
pop
cmp
jne
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
mov
jmp
mov
pop
ret
mov
push
mov
sub
mov
push
mov
push
push
lea
mov
call
lea
xor
call
test
je
test
je
cmpb
je
mov
push
call
mov
push
mov
call
mov
lea
push
call
mov
test
je
push
push
push
push
call
add
push
call
test
je
push
push
push
call
mov
test
jge
push
push
push
call
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
call
mov
mov
pop
pop
pop
call
leave
ret
push
lea
sub
mov
push
push
push
push
push
push
mov
call
push
push
call
test
je
push
xor
push
call
push
mov
call
mov
cmp
je
lea
push
push
call
mov
mov
mov
mov
push
push
mov
call
cmp
jne
movl
push
push
call
push
push
mov
call
xor
cmp
setl
mov
mov
cmp
mov
je
mov
cltd
sub
sar
mov
push
push
call
mov
neg
sbb
and
add
push
mov
call
push
mov
call
movzwl
push
call
pop
pop
push
push
push
call
push
push
push
call
push
push
lea
push
call
lea
push
call
mov
mov
mov
movzwl
xor
jmp
cmp
jne
cmpw
je
inc
inc
mov
cmp
jne
jmp
xor
inc
lea
push
movl
movl
call
mov
push
pushl
call
push
push
push
push
push
pushl
mov
call
cmp
mov
mov
jne
xor
push
pop
lea
rep
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
movl
movl
movl
mov
movl
movl
call
test
je
mov
push
mov
imul
cltd
pop
idiv
push
push
mov
mov
add
mov
lea
mov
mov
shl
mov
lea
push
call
mov
mov
sub
sub
mov
cmp
mov
mov
jle
mov
push
pushl
neg
push
push
pushl
sbb
push
push
push
and
add
push
push
push
push
call
cmp
mov
je
lea
push
call
push
push
push
pushl
call
test
jne
call
xor
jmp
call
pushl
call
pushl
pushl
call
pushl
call
push
pushl
call
mov
xor
cmp
sete
push
call
cmp
je
call
cmpl
je
cmpl
je
push
push
push
pushl
call
xor
inc
pop
pop
pop
add
leave
ret
mov
mov
mov
rol
imul
add
mov
ret
mov
mov
ret
mov
push
mov
push
mov
xor
mov
test
movl
je
push
call
pushl
call
mov
xor
inc
pop
pop
ret
push
mov
testl
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
pop
ret
jmp
push
mov
sub
mov
mov
mov
sub
mov
je
mov
test
je
push
mov
add
test
je
push
push
mov
sub
mov
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
addl
decl
jne
mov
test
jne
pop
pop
pop
xor
inc
leave
ret
mov
push
mov
push
mov
test
je
push
mov
test
je
andl
push
call
push
call
push
call
test
je
push
call
push
call
mov
push
call
push
call
pop
pop
pop
ret
push
mov
sub
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
jne
inc
jmp
andl
push
push
lea
lea
cmpl
mov
je
mov
jmp
mov
mov
add
xor
nop
movb
mov
mov
inc
cmp
jb
mov
test
je
lea
movsbw
mov
add
inc
mov
test
jne
lea
push
call
mov
test
je
mov
add
andl
cmpl
je
mov
mov
mov
test
jns
and
jmp
add
add
push
pushl
call
mov
test
je
incl
mov
lea
cmpl
jne
mov
incl
mov
imul
add
lea
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
push
mov
push
push
push
mov
mov
mov
mov
cmp
jb
andl
add
je
push
push
pop
sub
mov
imul
mov
mov
lea
ror
lea
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
inc
cmp
jb
pop
pop
pop
leave
ret
push
call
pop
ret
push
mov
sub
mov
push
push
push
push
mov
movl
call
andl
movl
mov
movl
mov
mov
movl
mov
mov
mov
mov
mov
imul
xor
add
incl
mov
xor
push
push
push
mov
call
mov
mov
mov
mov
mov
xor
mov
div
mov
mov
mov
mov
sub
not
add
xor
mov
mov
incl
add
cmpl
jb
cmpl
je
mov
mov
jmp
push
call
mov
mov
mov
xor
push
push
push
push
call
movl
mov
push
shl
push
add
incl
push
push
call
mov
mov
test
je
push
call
mov
push
push
call
mov
call
add
cmpl
je
cmpl
jne
lea
push
push
pop
add
xor
div
push
pushl
push
call
mov
push
push
push
push
call
mov
lea
add
lea
add
mov
lea
mov
mov
mov
and
call
mov
mov
mov
call
mov
mov
push
push
mov
xor
push
push
mov
mov
call
mov
lea
push
push
push
lea
push
pushl
movb
pushl
movb
push
call
push
push
push
call
push
call
mov
push
call
test
je
pushl
mov
pushl
pushl
pushl
call
cmpl
mov
jne
push
call
test
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
mov
push
mov
xor
cmp
jne
mov
jmp
mov
push
mov
mov
test
je
mov
inc
inc
decl
jne
cmpl
pop
jne
dec
mov
movb
pop
ret
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
mov
push
mov
sub
mov
push
push
push
mov
mov
mov
push
mov
lea
push
pushl
pushl
call
lea
xor
test
je
push
push
push
call
add
test
je
push
add
push
call
inc
pop
add
cmp
pop
mov
jl
mov
mov
pop
pop
mov
pop
call
leave
ret
add
mov
cmc
mov
mov
or
outsl
pop
iret
ljmp
fiaddl
jnp
into
rolb
pop
sub
aaa
sbb
mov
push
add
leave
mov
testb
push
push
push
imul
xorl
sub
xchg
shl
es
in
mov
bound
pop
mov
cmp
pop
inc
mov
sbb
or
ljmp
testb
jl
int3
mov
xlat
add
loopne
sbb
pop
mov
fcomps
cmp
outsb
mov
adc
add
sbb
xchg
jo
loop
and
ss
adc
mov
loope
jbe
xchg
pop
dec
std
ja
jne
loopne
mov
cwtl
in
push
leave
fwait
dec
pop
shll
popf
or
in
push
sbb
mov
into
lret
hlt
mov
fs
mov
sub
popa
daa
and
add
add
insb
aad
pop
fcomp
add
enter
mov
xor
jp
inc
push
push
out
mov
push
sbb
mov
push
stos
repnz
loop
push
cld
or
imul
lahf
fwait
insl
out
add
leave
mov
out
pop
cmp
mov
mov
xor
mov
adc
daa
mov
sub
daa
enter
sbb
mov
add
daa
xor
add
dec
sub
sbb
adc
stc
movsb
lds
cltd
out
imul
das
enter
pop
mov
and
and
mov
ja
or
inc
mov
adc
and
out
das
loopne
sbb
jnp
pushf
test
jg
pushf
or
jmp
push
dec
sbb
es
sbb
stos
push
and
adc
or
push
adc
xchg
xchg
xchg
add
add
sbb
add
fdivr
data16
push
pop
stc
push
adc
dec
and
ret
pop
cmpsb
adc
jne
adc
pushf
and
adc
cld
jp
fwait
xchg
ds
fisubl
call
mov
stos
push
fisttpll
and
mov
sub
add
loope
cmc
addl
jge
adc
pusha
mov
popf
push
jg
jg
addb
xor
push
push
test
jg
push
mov
mov
push
es
push
loope
mov
cmpsb
aad
imul
mov
pop
outsb
xchg
je
fisubl
mov
push
sbb
cmp
mov
lock
daa
mov
add
rol
mov
ret
pop
clc
or
rolb
test
and
or
sbb
test
lock
mul
pusha
cltd
jns
cmc
lock
sub
sub
push
lcall
mov
add
shrb
movsb
mull
mov
inc
cmpsb
pop
cs
cpuid
hlt
or
andb
mov
sub
and
fmulp
pushf
inc
fistpl
xchg
repnz
sbb
jno
jno
neg
and
sbb
cmp
pop
mov
in
lret
bound
add
into
pop
cmc
lea
sbb
test
shlb
in
dec
leave
xor
icebp
sbb
ja
or
inc
std
cmp
fldenv
sbb
cld
das
clc
pop
lods
int3
mov
mov
sbb
sbb
aas
out
int
mov
scas
mov
cltd
repz
addr16
lock
jb
cmc
mov
xor
loope
cs
popa
dec
repz
sub
imul
xor
cmp
hlt
roll
sub
push
inc
sub
fistpl
out
jp
sub
jnp
xchg
mov
shrb
popf
adc
sub
mov
pop
mov
in
jmp
cmpsb
pop
cmp
xchg
pop
mov
sbb
xor
ficompl
movsl
cmpsl
or
outsb
lods
mov
mov
add
add
mov
popf
jle
orb
xor
icebp
or
int
dec
sti
mov
movsb
sbb
pop
and
addr16
movsb
add
mov
mov
test
push
aad
cli
mov
cmp
jge
mov
call
aad
bound
inc
test
sbb
popa
push
in
pop
lcall
insl
cmp
fsts
dec
lods
and
jo
add
js
pushf
push
dec
xchg
in
fidivrs
outsb
dec
and
out
xchg
bound
cmpsb
sbb
mov
dec
aaa
jmp
into
xorb
insl
dec
pop
cmpsl
shrb
test
cltd
push
pop
push
lea
ret
mov
into
test
std
stos
aaa
jmp
jnp
push
sub
js
xor
imul
pushf
pop
mov
xchg
imul
adc
push
cmp
jno
adc
loope
aas
push
movsl
lret
inc
imul
jb
ja
and
adcb
das
pushf
cltd
dec
cld
call
inc
data16
xor
daa
xchg
cld
out
pop
insb
into
dec
cmovle
xor
aas
inc
pop
in
rclb
mov
mov
cmpsl
mov
xor
cltd
cld
test
sub
pop
dec
and
push
jmp
imul
pusha
mov
jno
cmp
sti
cmp
mov
jecxz
insb
jae
in
adcl
bound
pop
push
aas
or
pop
lret
cmpsb
inc
js
add
stos
icebp
sub
sub
iretw
mov
jno
andb
inc
add
int
adc
jb
xchg
mov
mov
lock
xchg
or
fdivr
mov
add
add
adc
lds
or
mov
insl
add
fsubrs
stos
inc
mov
iret
dec
outsb
cmpsb
cltd
std
mov
out
arpl
and
push
and
lcall
xor
scas
shll
xchg
and
lods
insb
sub
adc
sbb
adc
fsubl
pushf
pop
sub
cs
fmull
mov
mov
insb
jno
sub
scas
movlps
pop
lock
in
xor
mov
add
add
pusha
dec
jnp
lea
sub
cli
xor
into
mov
in
push
jbe
xchg
orl
lea
and
rolb
je
push
lcall
lods
out
inc
xor
int3
popa
cli
dec
xchg
fsubr
sbb
mov
pop
sahf
test
out
fbld
outsb
jne
or
inc
cmp
inc
add
xchg
sarb
sti
sbb
xor
xor
aad
stos
std
mov
in
push
mov
sbb
fwait
sub
add
mov
mov
mov
pop
fldl
xchg
int
pop
jmp
push
sub
jb
pause
ja
int3
loopne
xor
jle
fcompl
out
jns
fwait
ret
dec
jbe
sub
jb
inc
lods
and
add
inc
stc
shl
xor
jne
test
repz
mov
aaa
add
gs
xor
fidivs
cmc
push
and
mov
fldl
xchg
jno
in
push
push
mov
jle
clc
push
shl
xchg
mov
inc
lods
fs
inc
mov
sub
sbb
inc
push
dec
scas
mov
test
mov
add
shl
aaa
cmp
cmp
add
inc
sbb
push
or
repnz
enter
ret
std
fsubrs
int3
or
or
adc
jno
fimuls
push
cltd
and
lahf
jp
mov
adc
inc
mov
push
jnp
pushl
inc
pop
xlat
insl
jge
add
into
movsl
inc
and
xchg
jne
xor
aaa
or
cli
loopne
rclb
inc
in
sbbb
xchg
jno
mov
mov
je
cmp
es
in
into
mov
dec
sub
ljmp
pop
add
testb
test
hlt
sbb
mov
pop
cs
mov
mov
sahf
jl
xchg
int
fcomi
jp
movsl
decb
pop
int3
sbb
fildl
sbb
inc
lret
xchg
add
pop
loop
mov
es
inc
and
roll
add
mov
jae
xchg
push
out
or
repnz
sarl
mov
push
fcompl
imull
aas
je
repnz
lcall
fs
pop
dec
nop
and
mov
inc
mov
add
in
rclb
ret
jo
repnz
xchg
jno
fcomip
in
test
sarb
lret
pop
mov
stc
mov
mov
js
dec
loop
push
xchg
into
pop
movsb
mov
loop
cmpsb
jmp
cmp
repnz
mov
cs
movsl
out
push
loopne
mov
aad
push
aas
cmp
mov
cmp
jno
sub
dec
scas
test
aas
repnz
fcomp
aad
popa
cmp
in
mov
pusha
sbb
test
shlb
hlt
repz
fnsave
and
sub
mov
jae
pop
fucomp
jle
inc
notb
add
add
mov
sbb
push
adc
shrl
pop
mov
push
repz
imul
xchg
push
cmp
mov
int
mov
stos
out
call
pop
js
add
sub
sbb
mov
inc
aas
loopne
sarb
dec
jge
sti
fisttps
add
bound
scas
dec
xor
add
add
mov
add
test
sbb
or
and
jp
iret
mov
xchg
data16
xor
jb
push
fildll
lock
sub
mov
pop
pop
mov
mov
ret
sbb
aam
shll
cmp
imull
jmp
pop
add
and
cmpsb
mov
aas
mov
mov
outsl
leave
lret
cli
sbbl
loopne
outsl
fimull
data16
data16
repnz
push
mov
xor
scas
scas
or
fxch
push
cmp
test
xor
repnz
or
add
cmpsl
ret
dec
xchg
int3
add
arpl
scas
xchg
xor
jne
mov
cmpsl
popf
jbe
std
inc
xor
arpl
or
xor
jbe
pop
push
adc
mov
xchg
xchg
stos
dec
push
mov
dec
mov
jb
mov
mov
cmp
pop
or
jo
xor
iret
push
bound
xor
adc
mov
dec
cmp
pop
data16
add
les
inc
daa
in
loopne
push
cltd
ret
mov
rclb
sbb
push
push
loop
push
xchg
dec
sbb
movsb
fistpl
aad
mov
pop
dec
push
lock
dec
orl
sbbl
sub
push
mov
push
pop
pop
jp
test
outsb
lea
or
in
cmp
mov
mov
movsb
sub
add
xchg
std
arpl
dec
movsl
mov
ja
mov
xchg
add
mov
mov
dec
arpl
das
rorl
out
popf
bound
movsl
inc
adc
stc
jmp
mov
clc
jg
pop
adc
mov
push
mov
icebp
outsl
aad
fwait
lcall
sbb
add
mov
out
push
xacquire
cmp
iret
in
pop
sbb
enter
add
cs
mov
mov
jge
ret
mov
mov
push
xchg
es
rcll
pop
pop
out
mov
shl
hlt
cld
pop
jg
out
mov
shrl
add
or
xchg
pushf
and
jo
dec
xchg
stc
in
ret
xchg
dec
sbb
loope
ror
int
pop
aad
dec
lds
out
pushf
adc
mov
add
pop
rol
loopne
adc
sti
mov
xchg
enterw
pop
jmp
iret
dec
inc
push
test
out
jecxz
lret
jb
sbb
mov
aas
lcall
subb
and
outsl
ss
lea
test
cwtl
push
in
fs
jl
xor
adc
jne
add
iret
and
sbb
pop
jp
and
or
aaa
pop
nop
enter
add
add
push
ficompl
shll
stos
in
mov
fistps
sub
sbb
pop
jae
repnz
sub
push
inc
mov
jmp
jns
mov
shrb
push
cmp
mov
cmp
gs
xor
mov
dec
ja
ss
pusha
and
cmp
outsb
repz
xlat
inc
jno
xor
test
jnp
out
inc
add
inc
popf
add
inc
add
add
add
fcmovnb
mov
adc
mov
lock
lcall
mov
outsl
int3
pop
aad
jp
aam
push
addr16
dec
idiv
xchg
pop
sub
data16
les
pusha
pushf
cmp
pushl
inc
adc
mov
mov
cltd
sahf
inc
adc
adc
movsl
pusha
push
mov
outsl
cli
rol
xor
mov
stc
gs
scas
jno
pop
pop
mov
inc
pop
pop
lock
add
pop
push
dec
push
mov
shlb
sbb
jo
mov
add
xchg
jmp
and
les
dec
mov
icebp
fdivrs
div
stos
xchg
subl
jg
and
daa
fdiv
fistl
pushf
nop
sbb
pop
cmp
loopne
outsb
mov
inc
adc
leave
xchg
sub
mov
or
cmp
test
or
les
jno
cmp
jl
sbb
add
add
fwait
mov
dec
fs
push
xchg
movsb
dec
add
lcall
sub
mov
or
pop
mov
cmpsb
shrb
cmp
push
inc
sub
hlt
xchg
xchg
icebp
rorb
movsl
adc
pop
ds
call
xchg
mov
mov
fldlg2
xor
xchg
mov
mov
mov
imul
mov
test
sub
les
pop
sub
add
mov
cmc
jmp
inc
ljmp
lea
insb
inc
les
or
xor
ret
ret
pop
mov
pushf
push
dec
mov
lock
add
ret
aas
jl
sahf
jge
ret
sbb
push
pop
mov
jnp
jp
pop
in
inc
outsb
adc
push
jae
push
dec
in
repz
mov
xlat
pop
outsl
xchg
push
stc
rorl
fadds
add
add
lcall
fidivrs
fs
into
int
test
test
in
sbb
jnp
ret
add
push
adc
ror
gs
xchg
gs
repnz
jae
dec
xor
push
inc
jo
cld
pop
push
clc
inc
sub
push
jg
popa
push
sti
fldl
lret
jae
cmp
dec
mov
push
pusha
test
pop
jbe
cmp
daa
add
add
ljmp
xlat
addl
loope
imul
adc
mov
xchg
in
pop
inc
pop
push
pminub
dec
or
inc
out
insb
push
cmpsb
xchg
pop
xchg
call
cmp
rolb
mov
or
leave
testb
enter
lods
sub
cmp
ret
dec
jge
loope
das
pop
cli
cmp
dec
fnstcw
and
xor
add
sarl
div
sbbl
sbb
add
ja
es
or
pop
test
pop
dec
cmp
add
mov
clc
int3
aam
mov
in
adc
cmp
pusha
inc
je
rol
sub
je
clc
aam
sub
movl
insb
dec
push
mov
push
push
mov
mov
xchg
mov
pop
ljmp
rcr
insb
dec
mov
imul
push
nop
or
mov
sub
jae
scas
in
stos
jecxz
add
sub
mov
or
frstor
int
cmp
push
inc
arpl
fsts
sbb
iret
dec
ret
mov
jne
xchg
mov
adc
add
and
mov
mov
mov
je
mov
cmp
pop
add
in
add
add
inc
pop
jmp
xor
add
mov
lea
insl
jmp
mov
mov
insb
mov
sti
xchg
clc
xor
lcall
push
out
pop
sti
into
xchg
jg
mov
stos
ror
mov
jp
xorl
xchg
ja
add
or
adc
gs
and
addb
nop
mov
ror
mov
lock
dec
sub
lahf
into
sti
push
inc
lds
mov
test
add
inc
popl
jg
add
mov
mov
es
lahf
int3
fs
outsl
icebp
mov
fxch
ret
inc
pop
cmp
ljmp
xchg
in
ss
adc
fnstenv
mov
popfw
pop
aaa
mov
push
lret
xchg
push
faddp
int3
std
adc
imul
adc
in
ljmp
sub
mov
dec
adc
aaa
out
pop
sbb
outsl
test
mov
xor
rcr
xorl
int3
add
add
add
not
stc
ret
sub
push
mov
rorl
out
inc
pop
pop
and
pop
sub
xchg
mov
jnp
outsb
aam
push
rol
pop
mov
sti
ds
adc
lret
fcoms
fildl
mov
cli
push
jnp
jno
mov
add
or
je
fstl
aam
dec
xchg
adc
mov
add
les
scas
cmc
xchg
inc
or
sbb
mov
int3
fisubrl
pop
and
cmp
cmp
add
fistl
add
test
jecxz
insl
lds
add
sub
push
cli
mov
cwtl
out
in
or
mov
leave
cltd
mov
lcall
sbb
mov
std
or
mov
mov
shrb
pusha
dec
push
daa
seto
lods
cmp
insb
or
mov
sbb
jmp
repnz
adc
shlb
add
add
jge
or
push
sbb
lahf
popa
insl
xchg
push
dec
push
jge
or
ss
ret
mov
js
jns
inc
lds
cmpsl
jp
dec
pop
sbb
bound
mov
in
push
xor
mov
loopne
xorl
faddl
icebp
push
arpl
dec
sahf
sub
pushf
jnp
ss
in
adc
cmpsb
cli
shll
or
or
adc
dec
loop
mov
add
push
xor
lock
and
clc
cmp
negb
popa
adc
lret
jns
andl
fisubs
lret
inc
out
dec
loopne
iret
popa
mov
int
call
sbb
push
adc
nop
repz
popa
outsb
and
fnstenv
mov
push
or
or
rcrb
js
push
push
inc
fs
enter
loope
jns
ds
add
add
cmpsl
sub
test
pop
insl
mov
pop
int
push
shll
imul
adc
stc
push
adc
ror
test
fidivrs
shrl
ljmp
cmc
add
jle
in
sub
mov
jo
mov
movb
inc
add
push
sbb
push
mov
movsl
out
cmc
out
cmp
arpl
icebp
add
and
scas
mov
in
into
lods
cmp
cmp
outsb
push
cmp
lods
ds
lea
mov
and
sbb
pushf
sub
dec
sarb
iret
and
inc
mov
mov
sarl
mov
mov
mov
sub
pushl
inc
sbb
std
adc
ja
or
out
add
or
test
xchg
int3
jmp
jecxz
std
add
iret
bound
inc
inc
bnd
sub
xchg
cmp
or
cltd
cld
jge
lret
adc
and
aaa
dec
mov
sub
mov
fdivrs
fadd
push
jle
fnclex
icebp
xchg
stos
mov
mov
cmp
pushf
stc
lcall
ret
jmp
subb
cld
insb
out
in
and
and
mov
jae
add
add
hlt
call
dec
es
orb
fs
aad
loope
jns
outsb
hlt
add
movsb
sbb
decb
mov
fwait
movsb
jg
imul
xchg
inc
testl
pop
mov
mov
jo
or
pushf
mov
and
pop
mov
divl
and
xor
lret
aad
aam
sbb
js
fimull
in
outsb
mov
imul
add
add
lds
rorb
mov
clc
mov
stos
jo
mov
push
imul
int
mov
popf
int3
add
xchg
cli
xchg
sub
js
rep
stc
ret
in
xor
test
sahf
rorl
push
testb
inc
fisttpl
mov
jb
pop
lock
mov
xor
xchg
cmpsl
pop
lock
stos
addb
push
jbe
push
push
loope
lds
mov
mov
test
out
jge
add
pop
xchg
inc
icebp
push
mov
ficoml
pop
jbe
loop
test
aaa
cmp
sub
sub
cmp
dec
cmp
ret
stos
jp
inc
mov
push
xor
into
loope
jecxz
mov
insl
fimuls
mov
movsb
sub
sahf
insb
and
mov
fisttps
not
in
int3
fldenv
push
add
or
dec
sbbb
cmp
cmp
mov
scas
lret
or
mov
push
sbb
push
flds
mov
out
lods
jbe
cmp
or
jmp
push
into
ljmp
ret
icebp
ljmp
adc
lret
mov
in
rcll
negb
sbbl
rorb
jmp
bound
mov
pusha
jne
sub
cltd
movsl
mov
mov
push
out
scas
cmpsl
bound
sub
add
in
mov
shlb
lahf
cmpsl
pusha
lds
cmp
xchg
neg
gs
adc
outsb
jl
xor
into
adc
test
iret
fs
inc
lock
cmp
in
cmp
dec
push
imul
loopne
and
out
push
aam
test
roll
cmpsb
movl
add
push
sbb
sbb
iret
mov
daa
out
push
jge
xchg
push
mov
push
loopne
and
dec
mov
push
movsb
mov
fwait
push
std
std
aas
rcrl
xchg
xor
in
test
add
adc
shlb
outsb
outsb
sbb
and
fxch
insl
lea
data16
jne
xchg
idiv
mov
stc
push
cld
inc
decl
mov
add
add
add
imul
sub
push
lds
stos
fisubl
or
push
add
adc
js
lea
lods
into
bound
in
repz
rcrb
call
pusha
xor
jo
xchg
ret
dec
push
jmp
movsb
in
sub
imul
cmp
imul
jae
rolb
outsb
ret
pop
insl
sub
shll
mov
mov
add
jle
dec
cmpsl
test
inc
pop
mov
add
fildl
push
fwait
jg
mov
fdivrl
xchg
das
mov
pop
sbb
pop
lret
gs
jle
cmpsl
aad
lods
gs
mov
dec
idivl
jl
je
mov
jne
lods
shl
mov
lds
fsubr
xor
and
std
lret
rcrl
popf
sbb
add
jl
ret
lods
clc
testb
sarl
testl
dec
and
jle
push
adc
cmp
pop
sti
cs
lock
pop
ret
movsl
mov
cmpsb
cmpsl
mov
add
ffreep
test
call
mov
cmp
xchg
add
imul
jb
cmp
xchg
sbb
xchg
movsb
lcall
pop
add
add
in
dec
movsl
sbb
sub
aas
mov
inc
cmp
xor
hlt
iret
fistps
aam
cli
jecxz
xchg
sbb
arpl
movsb
jmp
sub
sbb
sbb
loope
dec
xor
ja
dec
fwait
xor
lea
sahf
pop
cli
or
or
or
fbstp
mov
jo
daa
in
bound
mov
lcall
and
lods
pushf
cld
in
je
test
bound
mov
adc
add
push
fwait
stc
jg
test
dec
ret
xlat
sbb
adc
js
stos
stos
sbb
add
pop
mov
xor
pop
les
insb
or
jecxz
adc
cmp
popf
jp
jmp
rcl
ds
push
jns
fs
xchg
push
aaa
push
lret
das
stos
add
cmp
loop
dec
push
or
fiadds
ja
sti
adc
outsb
sub
cmp
add
add
dec
fisubrl
jg
fsubrl
inc
repnz
adc
sbb
or
int
shrl
js
loop
lods
out
cmpsl
ss
mov
sbb
rol
push
mov
cltd
dec
lret
lret
xor
fistl
cmp
cmp
mov
stc
sbb
sbb
or
clc
push
sub
mov
add
push
inc
test
push
and
int3
xor
add
repnz
popf
xor
repz
in
add
lcall
mov
repnz
jne
cmp
iret
aad
xor
jp
adc
inc
mov
enter
xor
mov
inc
add
pop
mov
aas
mov
leave
mov
inc
outsb
fisubl
xor
push
out
repz
add
add
adc
lret
mov
ss
cmp
int3
and
notl
and
add
mov
mov
fstps
mov
xor
mov
aaa
push
dec
fucom
arpl
xor
xchg
movsl
je
popa
loop
push
cmpsb
das
sbb
xor
jo
jbe
lcall
add
jb
lahf
mov
pop
mov
inc
sarb
xchg
pop
add
add
adc
sub
test
nop
xor
js
enter
xchg
clc
cmp
jnp
cmp
rcll
adc
inc
idivb
or
jmp
adcb
out
outsb
test
aam
sahf
cmp
movsb
xor
pop
jno
or
adc
inc
or
or
aad
rcrb
sbb
lret
rol
or
imul
and
imul
mov
outsb
popf
mov
inc
jb
fistpl
lods
stos
or
xor
das
pusha
xchg
cmp
cmpsb
repnz
arpl
lret
sbb
inc
mov
push
jg
push
cmpsl
or
repnz
out
idivl
pop
je
inc
mov
sbb
loopne
pushf
shll
daa
and
jge
jae
sbb
or
add
aaa
fildl
outsl
addr16
mov
icebp
dec
pop
lret
addr16
sti
xchg
in
cmp
lcall
out
jmp
aad
pop
cs
push
lds
cs
mov
out
mov
rcrl
fwait
lock
mov
xchg
mov
nop
add
outsb
movsl
stos
push
xor
lret
mov
push
cmpsl
mov
mov
pop
rcr
adc
xchg
pop
lods
or
cmp
add
pop
aad
pushf
rcrl
fidivrs
jl
and
and
inc
dec
mov
lcall
lcall
xchg
jnp
movsl
ret
and
addr16
push
in
sbbb
cwtl
test
inc
stos
addr16
imul
shrl
pop
test
bound
cmpl
cmp
mov
ret
repz
loopne
sub
sarb
stos
rolb
in
repz
add
das
dec
aas
outsb
rorl
dec
hlt
pop
rolb
dec
mov
jl
pop
aam
mov
mov
pop
into
mov
mov
or
scas
pop
and
or
pop
aad
divb
cltd
mov
dec
loopne
mov
test
loopne
cmc
xchg
cmpsb
pop
ss
fsincos
xchg
inc
sub
mov
adcl
test
pop
cmp
cwtl
sub
or
mov
push
outsl
jae
add
inc
daa
out
mov
dec
xor
push
push
push
sti
xor
jbe
sbb
mov
cli
or
or
loop
cwtl
shl
ss
icebp
inc
inc
inc
cmc
std
inc
cs
test
out
adc
and
pop
or
cs
lds
je
or
mov
inc
idivb
push
mov
popf
add
jne
push
dec
je
into
lods
push
add
inc
push
mov
gs
cmc
frstor
popf
mov
arpl
xor
iret
push
xor
repnz
int
mov
cmova
cmpl
test
loopne
cwtl
lea
inc
popf
movsl
xlat
push
lds
lret
jae
xor
push
in
jnp
mov
test
xchg
adc
mov
out
rorb
add
xlat
mov
mov
xor
scas
jmp
aas
les
test
jbe
mov
sti
push
inc
jle
jns
jecxz
xor
dec
or
ret
loop
cmp
jno
stos
dec
push
movsl
mov
mov
lds
aas
inc
ljmp
rcrl
repz
jl
jle
sbb
cmp
addl
