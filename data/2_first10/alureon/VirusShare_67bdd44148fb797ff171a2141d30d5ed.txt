jmp
cmp
jb
push
push
lea
xor
test
jbe
push
push
pop
sub
mov
mov
mov
mov
ror
lea
imul
xor
mov
mov
mov
mov
mov
mov
inc
inc
cmp
jb
pop
pop
pop
ret
push
mov
sub
push
push
mov
mov
rol
push
mov
mov
mov
push
call
dec
jne
test
mov
je
mov
mov
jmp
push
call
mov
mov
mov
add
mov
movl
mov
push
shl
push
add
incl
push
push
call
mov
mov
test
je
andl
mov
pushl
xor
push
push
push
call
push
call
xor
push
push
push
pushl
call
incl
cmpl
jb
push
call
mov
push
push
call
mov
call
add
cmpl
mov
je
cmpl
jne
mov
push
call
push
call
lea
push
mov
push
pop
add
xor
div
push
mov
pushl
pushl
call
push
pushl
push
pushl
call
mov
mov
lea
mov
lea
add
add
mov
pushl
mov
mov
call
pushl
mov
mov
call
pushl
mov
lea
mov
call
mov
add
push
lea
mov
mov
mov
push
mov
xor
push
push
and
mov
mov
call
mov
lea
push
push
push
lea
push
pushl
movb
pushl
movb
push
call
push
push
push
call
mov
push
call
test
je
pushl
mov
pushl
pushl
pushl
call
cmpl
mov
jne
push
call
test
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
push
mov
push
call
mov
push
call
pop
test
jne
mov
push
call
pop
test
je
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
mov
jmp
xor
inc
pop
ret
push
mov
sub
push
mov
push
test
je
mov
test
je
cmpl
je
mov
test
je
add
push
lea
push
push
call
add
pushl
lea
push
pop
add
call
mov
test
jbe
mov
sub
mov
mov
inc
dec
jne
push
pushl
mov
pushl
mov
pushl
pushl
call
pushl
mov
mov
call
mov
add
push
pushl
pushl
pushl
call
add
pop
jmp
xor
pop
pop
leave
ret
mov
mov
mov
rol
imul
add
mov
ret
push
mov
push
push
push
mov
mov
call
mov
mov
add
mov
add
test
je
andl
mov
sub
add
mov
mov
mov
mov
add
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
mov
add
lea
add
cmpl
je
or
sub
mov
mov
sub
lea
add
mov
mov
mov
mov
add
push
push
push
call
mov
push
mov
call
xor
pop
inc
pop
leave
ret
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
testl
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
ret
mov
push
mov
sub
mov
mov
push
mov
mov
push
mov
mov
movl
lea
movsl
movsl
movsl
mov
mov
push
movsl
mov
push
lea
push
push
mov
call
mov
pop
pop
call
leave
ret
push
mov
sub
push
mov
mov
mov
mov
add
mov
test
jne
inc
jmp
andl
push
lea
mov
jmp
mov
add
xor
nop
movb
mov
inc
cmp
jb
mov
test
je
lea
movsbw
mov
inc
inc
inc
mov
test
jne
lea
push
call
mov
test
je
mov
andl
add
cmpl
je
mov
mov
test
jns
and
jmp
add
add
push
pushl
call
mov
test
je
incl
mov
lea
cmpl
jne
incl
mov
mov
imul
lea
lea
cmpl
jne
xor
inc
pop
pop
leave
ret
xor
jmp
mov
push
mov
mov
pushl
mov
push
pushl
call
pop
ret
jmp
mov
mov
ret
push
mov
sub
mov
push
mov
add
mov
mov
sub
mov
add
movzwl
lea
mov
movzwl
lea
mov
mov
mov
mov
xor
xor
cmp
jae
push
push
mov
mov
addl
push
pop
rep
mov
mov
add
add
mov
movzwl
inc
cmp
jb
pop
pop
mov
add
pop
mov
xor
inc
leave
ret
push
mov
sub
mov
add
mov
sub
mov
je
mov
test
je
push
mov
add
test
jbe
push
push
mov
sub
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
add
addl
decl
jne
mov
test
ja
pop
pop
pop
xor
inc
leave
ret
mov
push
mov
sub
push
push
push
pushl
call
push
pop
xor
push
lea
rep
pop
lea
rep
push
pop
lea
rep
mov
xor
movl
mov
mov
movl
xor
mov
mov
movzwl
mov
lea
push
mov
call
cmp
mov
je
addl
inc
add
cmpl
jb
mov
mov
push
lea
pop
mov
lea
push
movl
movl
mov
mov
movl
call
mov
cmp
jge
push
push
push
push
push
push
call
call
xor
cmp
setg
pop
pop
pop
leave
ret
push
push
push
push
push
push
call
xor
cmp
jbe
pushl
call
inc
cmp
jb
xor
jmp
push
mov
mov
imul
sub
cmp
jb
mov
push
call
mov
add
imul
push
xor
pop
div
mov
mov
mov
mov
sub
mov
test
je
mov
sub
push
mov
call
xor
divl
mov
add
cmp
jae
mov
mov
imul
xor
div
xor
mov
sub
imul
div
mov
cmp
jae
mov
sub
test
jbe
mov
mov
sub
mov
mov
mov
mov
mov
inc
decl
jne
add
add
add
cmpl
jne
pop
pop
leave
ret
mov
push
mov
mov
push
mov
cmp
je
push
call
mov
pop
pop
ret
add
add
into
mov
cs
mov
mov
gs
in
mov
pop
lds
in
out
mov
dec
outsb
or
xchg
sbbb
aas
testl
xchg
mov
scas
test
test
sti
data16
test
stos
cmp
mov
pop
insb
into
mov
cs
hlt
mov
mov
dec
in
mov
pop
lds
in
out
mov
rclb
xor
shlb
jmp
pop
rcl
and
adc
mov
data16
xchg
push
mov
fsubrl
xchg
sti
movsb
add
dec
outsl
std
push
aam
jno
add
jmp
mov
call
xor
push
roll
adc
add
and
test
sbb
imul
add
mulb
or
or
out
and
ret
xchg
lret
popa
lods
push
xor
int
repz
shr
pop
testb
lret
into
xchg
jbe
cwtl
cld
cmp
fcmovne
addb
stos
sar
inc
outsb
int
sarb
mov
jle
out
pop
lods
mov
je
mov
cltd
test
addl
iret
pop
sub
ds
mov
pop
adc
fcoml
dec
test
dec
push
jnp
add
add
stc
scas
repz
in
dec
mov
push
inc
js
lret
sub
sbb
pusha
pop
loopne
adc
push
ljmp
repnz
mov
sub
sar
arpl
xchg
push
mov
xchg
stos
mov
pop
dec
mov
or
aad
inc
out
mov
inc
lds
inc
imul
sarl
jnp
and
jmp
daa
cmc
mov
add
add
add
add
pusha
push
out
leave
mov
add
jmp
mov
or
mov
mov
dec
dec
aas
push
jp
cmpsb
push
jmp
xchg
popf
iret
adc
es
mov
xchg
out
sub
std
xor
fstl
aam
pop
xor
and
lods
jns
int
or
adc
shrb
add
adcl
mov
outsb
icebp
hlt
loop
cmp
sub
cmpsb
or
pusha
push
push
aaa
movsb
cmp
push
adc
adc
mov
bound
icebp
xchg
in
int3
and
sub
shrl
or
subl
push
lcall
sub
fdivrs
cs
inc
push
out
lock
jbe
rolb
add
add
add
add
testl
orl
jae
lret
arpl
cmp
inc
dec
je
or
sub
and
jmp
jnp
and
test
mov
jne
sub
pop
popf
xchg
push
ljmp
pushl
dec
aas
jb
and
dec
inc
arpl
ficoml
test
pop
outsl
ret
or
cmpsb
xchg
cmp
stos
add
int3
add
push
cmp
lahf
sbb
cmp
jp
daa
fsubrl
lret
fucomi
mov
lret
das
and
jle
add
repz
or
notl
insl
insb
or
cmc
popl
mov
mov
and
xchg
push
pushf
lret
out
enter
xchg
lock
clc
lahf
add
aad
mov
les
call
rclb
and
xchg
hlt
subb
cwtl
add
add
sti
xor
mov
add
pop
mov
mov
sti
mov
jg
rclb
cwtl
dec
dec
pop
stos
mov
cmpsl
adc
or
add
push
fistpll
inc
and
or
nop
mov
xchg
dec
mov
loope
xchg
inc
fdivrl
mov
add
leave
cltd
add
inc
or
pop
cmp
jmp
xchg
add
or
popa
cmp
cwtl
clc
or
stc
jnp
mov
orl
dec
xor
mov
shlb
pop
gs
cmp
pop
fisubs
daa
movsl
cmp
movlps
into
repnz
ja
cmp
xor
int3
sahf
movsb
mov
test
out
jno
pop
shll
movsl
imul
xchg
pslld
iret
mov
push
fiadds
popf
lock
cmp
or
jo
dec
roll
add
mov
mov
mov
or
test
xchg
fsubrs
push
inc
gs
stc
mov
inc
js
sub
push
xchg
push
push
cmp
ss
sbb
ret
push
pop
pop
xor
or
int3
ja
inc
shlb
xrelease
cmp
dec
test
inc
shl
rcrb
sahf
mov
push
push
lea
movb
shl
push
pop
sbb
es
mov
loop
xchg
adc
mov
add
add
adc
xchg
test
sbb
add
std
dec
test
xchg
push
in
dec
cmp
jae
fisubrl
mov
sub
push
cmp
cmpl
popf
lea
js
js
mov
xor
mov
pop
outsl
dec
cmc
cli
pop
xchg
ret
mov
dec
adc
data16
sub
dec
inc
jl
arpl
ret
fiadds
xchg
jle
ret
cmp
xor
jnp
scas
test
pop
sub
loope
stos
iret
adc
cmp
xlat
adc
mov
pop
pop
ljmp
mov
mov
stc
clc
loop
repnz
xor
cmp
jmp
pop
adc
popf
addr16
inc
ss
pushf
pop
jns
addr16
xor
push
cld
dec
inc
dec
inc
repnz
mov
adc
jl
sbb
lret
cmp
sub
pop
or
xchg
add
xor
sahf
and
imul
cmp
iret
adc
jecxz
xor
inc
lods
addr16
dec
adc
or
std
or
iret
cmpsb
clc
mov
out
push
fistps
cltd
lret
mov
out
cmp
fisubrl
adc
cld
sub
jge
mov
int3
push
adc
xchg
sub
gs
fimuls
in
test
and
shrb
scas
push
es
pop
dec
inc
in
mov
sti
xchg
push
arpl
repz
add
in
jbe
push
fistpll
jg
call
outsb
sbb
test
stc
or
xor
and
testb
out
jae
aaa
sbb
mov
orb
xor
or
and
xchg
or
scas
fimull
test
js
cwtl
stc
in
filds
push
aad
pop
pop
push
std
gs
sub
pmulhuw
filds
add
jne
mov
not
and
rcl
rcll
jbe
stc
loope
outsw
ret
cwtl
mov
out
jmp
sahf
fwait
mov
pop
cmc
call
mov
push
cli
scas
test
lcall
mov
cmc
fs
dec
lds
orb
sub
insb
jb
push
and
mov
mov
movsb
ss
data16
pop
aas
mov
mov
shlb
sbb
mov
add
std
imul
ja
loopne
in
pop
add
xor
mov
rorb
cmp
daa
pop
sbb
das
popf
std
mov
test
out
addr16
push
insb
out
mov
lret
or
lret
out
shll
mov
mov
movsl
cs
das
add
ret
cli
lock
push
sti
rcrl
insl
into
ss
cmp
cltd
or
xor
outsb
sub
and
xchg
mov
add
pop
aaa
jp
lret
cltd
pop
mov
lods
dec
test
xchg
adc
xor
cli
neg
mov
pop
out
nop
into
mov
fisubrs
xchg
and
push
xor
pop
xchg
or
sub
add
nop
jno
popf
xchg
in
jb
adc
inc
xor
ja
daa
mov
into
jae
movq
lret
adc
jnp
push
iret
xchg
dec
mov
fisttpl
dec
xchg
gs
jns
and
lret
call
testl
add
add
add
add
dec
test
aam
push
push
adc
push
loope
jg
repz
ja
mov
inc
out
insl
stos
pop
mov
dec
cmp
js
inc
popf
loop
cmp
in
ret
cmp
sbb
sbb
add
adc
cmp
movsb
jecxz
lock
lahf
push
je
mov
add
sub
pop
xor
mov
mov
push
cltd
std
decl
call
add
add
add
insl
jle
loopne
xchg
sub
aas
bound
jge
repnz
aas
ret
pop
insb
mul
iret
ficompl
sub
sbbb
loopne
add
push
jae
push
push
inc
jle
adc
inc
sub
cltd
imul
adc
xchg
jo
or
xor
mov
dec
clc
dec
sub
inc
rolb
imul
sub
or
jns
hlt
lret
in
jmp
js
sbb
jge
add
ss
jne
outsb
push
adc
in
mov
push
movb
sbb
in
mov
fistpl
std
jne
adc
sbb
cmp
lcall
mov
insb
in
mov
xchg
cld
dec
int3
push
or
mov
sarb
add
into
mov
sub
sbb
in
lods
imul
push
bound
and
repnz
xor
add
sub
fstpl
push
test
ja
cmp
fstpt
fldt
fists
rcr
mul
push
and
scas
adc
mov
cmp
cmp
xlat
cmp
mov
mov
pop
xor
and
out
pop
cmp
sbb
sub
aas
es
dec
in
xorl
jg
cmp
push
insl
dec
fiaddl
add
push
xchg
pusha
adc
mov
in
loopne
lret
cmp
sbb
aaa
nop
out
adc
lea
jp
mov
sbb
imul
or
dec
cmp
xor
mov
sbb
jl
out
lahf
mov
in
jle
leave
loope
inc
mov
insb
dec
into
ficomps
jb
cld
push
jnp
mov
pop
outsb
jnp
add
xchg
nop
pop
and
idiv
loop
push
xor
ret
and
cld
arpl
js
push
pop
hlt
das
inc
iret
pop
ss
xchg
popa
jle
mov
dec
mov
scas
les
and
push
pop
dec
or
mov
rorl
stos
or
out
popa
cltd
mov
xchg
es
test
xchg
jle
iret
inc
or
push
xor
pop
jp
mov
fnstsw
push
sub
test
mov
les
lret
ror
sbb
aas
jmp
jmp
leave
xchg
or
fidivrs
aam
push
mov
mov
jbe
jp
mov
out
scas
dec
ljmp
int
mov
orw
sbb
xchg
out
jae
or
mov
cli
and
xchg
jbe
push
adcb
insb
test
push
shl
sub
ret
xchg
outsl
inc
sbb
or
repz
outsl
ja
add
add
jno
cmp
les
add
cltd
outsb
ja
push
pop
imul
cmp
fcomip
mov
xchg
test
cmp
mov
daa
sub
or
jne
addr16
daa
inc
mov
jno
xchg
bound
pusha
jb
icebp
fcoml
cwtl
ret
sbb
lret
pop
lcall
imul
out
jmp
add
ljmp
push
gs
mov
pop
imul
sub
mov
ret
mov
push
insl
lds
mov
jecxz
andl
xlat
pop
dec
movsl
and
mov
mov
lahf
inc
ds
mov
movsb
sbb
sub
or
mov
ret
out
pop
scas
dec
ja
ss
sbb
mov
sbb
inc
add
daa
hlt
add
ret
inc
sarb
jle
test
fwait
jbe
mov
mov
ret
in
push
pminsw
fdivrl
xor
inc
rorb
jp
pushf
sub
imul
nopl
add
lcall
sub
sbb
mov
loopne
push
mov
adc
push
adc
xlat
and
call
imul
mov
xor
jae
sub
add
or
dec
xchg
test
mov
jo
fidivrl
sub
shrl
lea
pop
lahf
imul
outsl
ss
dec
popf
xor
shll
aaa
pop
pop
mov
jp
xchg
jle
jmp
pusha
xchg
testb
mov
adc
adc
push
test
and
outsb
cltd
adc
decl
clc
xchg
jo
add
dec
cmpsb
into
mov
dec
jne
pop
or
ljmp
jl
je
lcall
fdiv
cmpsb
mov
pop
insl
cmp
push
in
pop
test
dec
xor
adc
clc
adc
insl
data16
cmp
add
jmp
add
jnp
pop
gs
scas
pop
iret
clc
icebp
add
add
or
loopne
jbe
push
iret
fwait
sub
pop
sti
repnz
jl
cs
add
add
lods
mov
gs
in
cmp
pop
mov
mov
addr16
pop
jo
mov
pop
call
jl
push
fstps
push
pop
iret
in
xchg
pop
adc
sbb
pop
incb
xchg
insl
pusha
push
inc
hlt
push
nop
ficoml
cmpsb
in
fadd
xorl
shl
mov
rsqrtps
ljmp
dec
inc
mov
xchg
push
sub
add
mov
into
rcl
stos
pop
adc
adc
xchg
js
popa
push
test
pop
lcall
filds
add
dec
sub
jg
xchg
dec
push
sarl
dec
cmova
jg
mov
int3
add
xchg
push
lds
pushf
pop
push
xchg
out
xor
mov
mov
and
mov
xlat
test
sub
mov
push
add
icebp
pop
push
dec
pop
int3
repnz
inc
mull
dec
cli
push
push
dec
ret
aam
gs
pusha
mov
ds
movb
imulb
lsl
mov
daa
xor
ficoml
push
loop
repz
aam
mov
cmpsb
cld
pusha
cltd
mov
leave
scas
movups
cmpsb
sbb
xor
xlat
and
negl
push
inc
enter
xchg
sti
dec
enter
ljmp
inc
mov
imul
cmp
aaa
and
ja
mov
ss
adc
xchg
in
inc
cs
pushw
sbb
gs
push
in
inc
cwtl
sub
add
mov
pusha
in
cmp
sub
mov
adc
sub
mov
cmpsl
and
push
xor
xchg
je
pop
mov
aad
mov
ret
mov
xor
adc
dec
les
loopne
push
fnstcw
fs
iret
mov
inc
imul
loop
mov
data16
jne
push
stos
mov
sbb
ss
jg
mov
sti
jae
jg
nop
enter
cmp
and
std
insl
dec
fists
mov
xor
jae
loope
aas
sarb
mov
inc
xor
rcll
xchg
mov
sbb
mov
or
mov
int
add
add
cmp
scas
xor
jne
mov
jno
mov
rclb
ud1
sub
cmpsb
sub
cmp
pop
fstp
lods
mov
inc
dec
cmp
sub
aad
popa
insb
push
inc
aaa
inc
sub
rclb
clc
cmpsb
inc
xlat
push
outsl
jmp
scas
add
mov
push
jbe
pop
addr16
call
fistl
or
sbb
leave
out
loop
pop
add
cmc
jbe
in
add
repz
mov
clc
mov
xchg
add
fistpl
rclb
test
ljmp
fidivl
movsb
stos
xor
test
adc
xchg
inc
xchg
testb
dec
mov
fidivrl
shrl
sub
repnz
push
fdivrl
mov
adc
jle
js
mov
inc
add
jle
cmpsl
shrl
jl
mov
push
xlat
out
jmp
sub
push
adc
sahf
in
addb
jge
inc
in
into
pop
push
les
pop
fistpl
ja
sarl
mov
adc
jl
mov
ret
adc
filds
push
addr16
lods
xor
lahf
fimull
lahf
push
mov
cld
cmpsb
inc
mov
out
xchg
push
les
push
add
add
imul
cmp
das
cmpb
jle
adc
inc
lret
pop
mov
repnz
push
pop
into
lds
pusha
fmulp
adc
pop
andb
sahf
xlat
das
test
rcrb
push
mov
pop
mov
mov
imul
push
arpl
ja
dec
jg
andb
push
addr16
and
insb
inc
das
adc
sbb
lcall
movl
pop
pop
dec
cmp
mov
xchg
jle
cmp
outsb
push
lahf
lds
int
pusha
pop
stos
aam
mov
gs
push
ret
test
sub
mov
lret
jl
or
or
icebp
pop
mov
pop
pop
fs
cmp
jnp
mov
sbb
imul
pop
sti
pop
xchg
stc
in
js
inc
call
lds
sub
mov
add
push
scas
pop
arpl
cmp
decl
mov
jne
std
aam
shrb
sbb
outsb
or
xor
fisubrl
sub
das
mov
outsb
ds
sub
cmpsl
cmpsb
pop
mov
test
fcomi
loop
pop
lahf
pop
fcmovb
xor
test
pop
out
jle
je
in
int3
jl
inc
cld
aam
cs
jl
add
setno
pop
cmp
add
pop
movsl
jecxz
adc
sbb
out
popf
fbld
xchg
aaa
jo
inc
arpl
rcll
adc
pop
sub
pop
cmpsb
push
dec
dec
adc
dec
daa
stos
mov
movsb
ja
add
in
cli
mov
lods
sbb
pop
add
ret
fadd
jg
out
inc
nop
rcrb
jno
pushf
push
adc
cmp
sub
icebp
dec
jo
cmp
sbb
add
das
mov
mov
lods
pop
adc
xchg
imul
cmp
pop
rorl
std
push
std
adc
loop
push
hlt
mov
test
mov
xor
cmp
clc
pop
lock
jle
aad
clc
jmp
ja
ret
decl
leave
mov
sub
and
je
cwtl
push
lods
jbe
lcall
dec
adc
aad
xor
lcall
xor
loop
add
cmp
or
or
mov
or
jb
mov
scas
push
mov
mov
add
sub
jbe
scas
xchg
test
sub
mov
adcl
mov
pop
xchg
fistps
lret
into
je
jae
jnp
in
scas
dec
push
dec
faddp
ror
dec
adc
dec
xor
loopne
in
mov
fwait
popa
pushf
xchg
roll
jne
sbb
xchg
mov
and
pop
fcoml
push
std
jns
sub
pushf
add
rclb
mov
adc
sarb
in
sar
mov
xor
aad
dec
cmp
mov
int
sbb
mov
jl
mov
dec
aas
lcall
out
and
inc
aam
outsb
shr
cld
jg
iret
adc
data16
xchg
xlat
lret
cwtl
std
test
addb
shl
jne
mov
adc
add
movsl
mov
lds
jl
vandnps
mov
mov
rol
push
push
pop
lcall
outsb
or
gs
fisttps
js
js
dec
push
test
test
mov
scas
scas
sti
adc
ljmp
mov
cmpsb
ljmp
icebp
inc
mov
push
inc
shll
add
cmpsb
lcall
nop
mov
insb
sarl
xchg
push
mov
push
rcrb
mov
pop
inc
sub
mov
jp
lcall
mov
cltd
mov
repnz
pop
push
js
clc
jno
out
and
mov
push
sub
int3
xlat
push
rcll
dec
in
cmp
mov
stos
fnsave
jns
movsl
xchg
filds
mov
jle
dec
rol
dec
test
arpl
imul
and
lret
push
jmp
leave
cmpsl
dec
jmp
add
add
add
add
xchg
aam
imul
mov
dec
mov
insb
add
cld
xor
mov
cmp
push
fcmovb
inc
fcmovbe
jg
xor
imul
add
mov
xor
ret
out
jne
stc
stc
pop
cmc
daa
adc
mov
sbb
call
int3
push
nop
lcall
jb
and
mov
mov
mov
add
add
add
push
pushf
mov
jnp
sti
pop
mov
jbe
enter
int3
inc
aad
adcb
cs
scas
cmc
call
cs
fwait
ds
mov
mov
pusha
push
mov
gs
mov
imul
ss
pmaxsw
stos
fimull
push
nop
mov
aaa
dec
xor
mov
mov
and
push
sub
add
inc
stos
pop
pop
adc
mov
push
mov
fmull
ret
cltd
mov
lock
mov
jno
insl
push
cld
mov
pop
aad
add
dec
fldl
popf
repz
enter
cwtl
and
mov
sbb
lods
sti
outsb
pop
sbb
ret
in
flds
test
dec
out
jno
pusha
lahf
cmc
sbb
rorl
inc
mov
nop
jg
xchg
xchg
lahf
jnp
fidivrs
add
add
push
push
xlat
xchg
daa
lods
rorb
mov
enter
aas
in
in
outsl
rclb
xlat
popa
repz
repz
sub
ja
mov
pop
mov
pop
push
and
push
mov
mov
sarl
push
fisttpll
push
or
sub
mov
test
jecxz
test
xor
loopne
mov
clc
or
fidivrs
aam
xor
xorl
rcrl
xor
mov
add
gs
jnp
pushf
sbbl
mov
fwait
jecxz
pop
dec
pop
pop
jmp
or
adc
lods
dec
xor
mov
jo
jbe
std
pusha
pop
dec
pop
out
jl
popa
mov
and
dec
ss
sbb
repnz
shr
pop
push
lea
in
stos
adc
xorb
dec
out
jne
and
test
fdivs
in
fsubrs
shll
aad
lahf
stos
and
decb
mov
add
add
push
dec
mov
jl
ret
fs
lods
xlat
popa
sbb
sub
imull
lock
jl
mov
cli
push
xchg
and
lcall
xchg
nop
flds
arpl
addb
jecxz
push
add
mov
out
lret
ja
fdivr
push
mov
mov
or
rclb
leave
pushf
sbb
mov
push
mov
mov
aas
int
pop
fisubl
sub
xchg
aas
cmp
in
out
js
bound
or
xchg
sub
inc
xchg
or
sub
adc
pop
pop
and
jo
sarl
loop
xchg
pop
and
mov
js
adcb
in
bound
and
or
ds
sub
push
imul
cld
or
in
sti
pop
mov
push
fisttps
add
aaa
subb
pop
mov
popa
filds
aaa
pop
lcall
inc
mov
aad
js
jno
sub
push
iret
add
cmp
cmp
adc
scas
jbe
lods
ja
scas
jmp
pop
ret
fstps
in
popf
cmp
and
mov
in
add
adc
inc
fwait
xor
aas
push
sbb
lods
sbb
mov
lret
dec
sbb
cli
ss
mov
fwait
out
sbb
mov
loope
roll
cmp
outsl
out
nop
mov
pop
jge
inc
lds
outsl
mov
dec
inc
test
in
pop
push
sti
pop
jle
lea
test
jmp
bound
jbe
cli
fcmovnb
into
loop
rolb
addr16
xor
sar
xorl
aas
and
mov
xor
incl
sub
dec
ds
icebp
xchg
orl
mov
cmp
outsl
mov
add
lret
pushf
das
adc
adc
data16
fdivs
movzwl
daa
and
ljmp
fistpl
out
imul
or
rclb
adc
inc
or
test
cli
dec
mov
imul
les
lea
das
pop
cmp
push
call
jecxz
xchg
jbe
mov
mov
add
add
add
add
shll
mov
ds
jle
cli
jo
xor
mov
adc
cmp
mov
ret
sub
sbb
lods
mov
es
ljmp
xor
push
stc
ficoml
stos
andb
and
mov
mov
add
js
dec
out
bswap
pop
mov
and
scas
in
push
addb
ss
add
dec
dec
sub
out
xor
push
jmp
jp
add
xchg
xor
xor
adc
addr16
adc
cmp
xchg
arpl
testb
mov
jo
je
lahf
adc
cmp
xchg
jnp
or
pop
jne
jno
rcll
cmp
out
add
insl
dec
sahf
clc
call
jo
loopne
test
pop
in
lods
dec
call
loop
das
and
jne
fistl
add
add
add
add
jo
out
in
pop
mov
shrb
loope
sbb
fwait
shrb
pop
mov
pop
xchg
mull
jo
pop
fwait
mov
xchg
add
cmp
jnp
and
and
jge
pushf
lret
loope
mov
gs
adc
imul
push
mov
mov
fwait
or
dec
aam
arpl
xchg
ljmp
sbb
xor
lcall
push
stc
outsl
dec
xor
jne
add
add
add
data16
and
out
outsb
mov
mov
in
ficompl
out
cmp
sub
dec
aad
fisubs
push
cwtl
and
add
rorb
jmp
xchg
mov
xchg
hlt
and
sub
inc
jnp
push
push
in
adc
and
xor
sahf
dec
xor
push
test
int3
xchg
inc
out
dec
and
add
sbb
aam
mov
outsb
cmp
xchg
int
aad
mov
cmc
adc
mov
pop
add
pop
sub
jle
in
pop
sbb
jmp
in
add
addr16
mov
inc
ret
cmp
mov
lea
bound
fidivl
adc
and
inc
loopne
jp
es
push
cmp
xor
and
xchg
mulb
cmp
mov
lret
sbb
add
cmp
rorl
mull
inc
mov
jge
arpl
cmpsb
sbb
adc
call
and
out
sub
in
sbb
cmp
cmp
cmp
xchg
sbb
xchg
or
ja
clc
pop
cmp
jecxz
push
sub
mov
cli
sub
lcall
sub
test
xor
scas
push
and
addl
add
sub
sub
push
call
aam
sub
cmpb
insb
or
fstpl
mov
jge
add
mov
sbb
jecxz
test
mov
jb
or
mov
mov
cmpb
xchg
cwtl
mov
sbb
mov
out
mov
push
fldt
dec
das
js
movsb
jbe
mov
or
sbb
adc
push
cmc
jge
dec
dec
fdivrp
loopne
je
test
sbb
loope
cmp
add
or
mov
hlt
cs
addb
pop
pop
push
sbb
std
inc
push
jecxz
mov
mov
add
movsb
dec
adc
xchg
cwtl
pop
add
ret
cmpsb
aaa
mov
int
mov
dec
push
stos
mov
mov
cwtl
cmc
push
mov
xchg
adc
push
in
or
or
pop
ret
and
cli
bound
mov
das
adc
icebp
movsb
icebp
push
mov
add
add
repnz
adcb
les
mov
dec
lcall
leave
cmp
imul
stos
inc
std
daa
fcomps
gs
cmp
dec
iret
mov
dec
ret
mov
jmp
dec
sub
stc
mov
test
in
nop
inc
neg
or
cmpsb
sub
scas
subl
and
mov
in
and
ret
es
push
mov
add
add
add
add
jnp
imul
sub
cmc
dec
clc
rclb
mov
cmpb
icebp
jae
mov
cmp
pop
fsubl
sub
push
mov
pop
pusha
jge
mov
out
cld
inc
mov
xchg
mov
pop
xchg
pop
fdivrs
test
or
jae
ljmp
cltd
stos
sbb
mov
rcrb
mov
movsl
cmpsl
test
aaa
jnp
pushf
int
outsl
bound
jno
fs
mov
add
jo
fistpl
jo
popf
adc
repnz
pop
push
dec
sbb
sarb
test
nop
js
cmpsl
jns
jo
scas
lock
aaa
jo
xor
sub
cmp
jmp
loope
stos
sub
outsl
addb
insb
cmp
sbb
xor
or
xchg
shlb
mov
push
jns
push
insb
add
fildll
add
add
push
jbe
movb
push
cld
and
stc
bound
jl
dec
js
mov
jl
push
and
addr16
shll
sub
fcmovu
sahf
sahf
clc
cmp
push
adc
out
mov
cmp
mov
imul
ljmp
jmp
aaa
pop
pop
pop
loope
mov
in
stos
ret
jl
add
lcall
clc
es
enter
xchg
dec
ljmp
clc
into
insl
fiadds
inc
pushf
lcall
sub
sub
mov
and
ss
cmp
dec
test
cmp
or
bound
in
test
mov
push
push
outsl
ficoml
jae
jne
or
ja
in
ret
sub
shrb
xchg
pushf
ljmp
xchg
cmp
sbb
cmpsb
addl
jbe
mov
push
pop
in
xchg
inc
mov
jbe
or
push
push
xor
mov
jnp
repz
add
inc
jnp
lret
jl
mov
enter
loope
sbb
push
jg
fcoms
mov
pop
fidivrl
jnp
pop
fisubrs
mov
sbb
and
ret
sub
cs
test
add
xchg
push
pop
and
or
hlt
loope
ret
pop
sub
loopne
mov
rol
add
mov
and
mov
xchg
ja
popf
or
int3
adc
addr16
mov
mov
lret
scas
and
push
xchg
add
mov
sbb
out
sbb
sahf
pushfw
in
cmp
xor
mov
push
fdivp
int
inc
mov
test
push
shrl
sub
and
testb
xor
adc
mov
push
cmp
pop
sbbb
cmpb
xchg
xchg
add
add
add
xorb
movsl
arpl
daa
ret
mov
pop
push
shl
push
jne
cs
mov
out
jne
in
loope
push
lret
pop
dec
xchg
imul
inc
inc
or
nop
in
daa
jl
cs
movsl
stc
sub
lods
fld
cmp
popl
lret
out
xlat
sbb
jle
jns
lds
out
mov
and
test
add
in
push
mov
jl
in
popl
pop
hlt
cli
insl
sub
in
test
sti
icebp
inc
mov
fs
pop
pop
pop
outsl
out
insl
mov
nop
leave
aam
lods
add
xchg
pop
and
push
in
xchg
rolb
sub
out
fiaddl
and
data16
out
xchg
mov
jmp
mov
sbb
jb
push
leave
das
mov
cmc
daa
mov
pop
fadds
add
es
mov
jmp
mov
mov
loope
pop
sub
cmp
jecxz
and
or
icebp
cmp
outsb
out
jns
mov
pop
fmuls
and
es
es
mov
popf
mov
scas
fiadds
xor
cmp
inc
stos
inc
dec
pop
xor
out
mov
fildl
daa
pop
jmp
icebp
rorl
dec
push
mov
inc
in
out
add
out
fwait
imul
and
pop
int
sbb
xor
ja
sti
testb
ret
fs
das
cmpsb
mov
xchg
insb
or
add
dec
sti
mov
dec
push
in
leave
shrl
dec
divl
out
push
mov
mov
cmp
dec
in
lea
and
xchg
mov
mov
jmp
adc
lcall
adcl
add
add
add
popa
pop
repz
mov
push
cs
sbb
ljmp
jo
mov
rolb
sbb
inc
add
adc
out
sbb
jb
mov
imul
jmp
jge
test
in
push
push
push
pop
mov
das
pop
aam
cwtl
movsb
cmp
dec
fwait
int3
push
sti
mov
jnp
jg
lret
fdivr
dec
hlt
mov
jle
flds
xchg
imul
mov
inc
push
jne
or
enter
test
jecxz
xor
jle
in
shrb
add
mov
inc
push
jp
es
js
cmp
sbb
out
push
aas
fs
aad
stos
out
push
adc
xlat
and
mov
xor
add
xchg
lret
xchg
mul
aas
js
mov
xor
inc
jo
mov
hlt
mov
xor
aaa
gs
push
and
adc
push
push
sbb
add
data16
push
fldl
mov
das
xor
stc
cmc
ljmp
dec
mov
and
jmp
or
jecxz
adc
rcrb
mov
mov
cwtl
jae
mov
hlt
mov
and
rolb
adc
xchg
pop
lods
shl
fwait
mov
es
mov
call
sbb
dec
push
pop
leave
push
enter
dec
movl
add
add
add
std
sub
push
xor
pop
in
inc
or
test
push
in
dec
cld
ss
cmp
push
and
cld
es
cmp
ror
lds
test
sti
cmpsl
daa
enter
test
cmpsl
xor
push
fsubr
xorl
mov
cli
adc
xor
dec
push
or
mov
sbb
and
adc
lcall
add
add
add
shlb
mov
jne
push
pop
pop
test
xchg
in
movsl
inc
xchg
sub
in
fldcw
aam
loope
cs
enter
xchg
sbb
jle
mov
scas
mov
pushf
lea
int3
adc
jne
xchg
mov
loope
or
adc
loopne
adc
shl
shr
sub
sub
jmp
pop
lea
dec
lret
push
movsl
add
sbb
fcmovu
pop
push
mov
inc
sbb
mov
add
idivl
mov
xchg
jmp
inc
pop
out
xlat
lret
adcb
xor
sbb
xchg
dec
mov
adc
sbb
inc
repz
rorb
xor
jg
mov
and
push
test
adc
inc
js
pushf
mov
iret
pop
lret
or
rolb
incb
mov
in
and
dec
mov
cmp
mov
scas
or
rolb
aas
enter
adc
test
pusha
sub
pop
