addw
push
test
add
test
add
test
add
add
jp
add
mov
add
mov
add
movb
add
addl
push
test
add
add
add
add
add
add
jg
add
add
dec
jg
add
add
jo
add
xchg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
add
adc
add
addb
inc
addb
push
addb
data16
je
add
xchg
add
mov
add
movb
add
addb
adc
add
xor
add
push
addl
add
jle
add
add
jle
add
mov
add
mov
add
rolb
add
addl
add
add
sbb
add
sub
add
dec
addb
pop
addb
outsb
addb
jl
add
mov
add
movsb
addb
fdivrs
add
jle
add
add
mov
add
jle
add
add
push
jle
add
add
cmp
add
add
incb
add
jo
add
addb
adc
add
add
add
addl
fadds
add
addl
in
add
push
addl
clc
addb
add
add
mov
test
add
add
add
add
or
add
add
add
ds
and
pop
and
and
pop
and
sub
and
and
pop
and
and
pop
and
and
pop
and
and
pop
and
and
pop
and
adc
dec
and
adc
dec
and
adc
dec
and
adc
dec
and
xchg
ret
loopne
and
xchg
ret
loopne
and
adc
dec
and
test
mov
and
add
aas
and
add
aas
and
add
aas
and
add
aas
and
add
aas
and
adc
dec
and
adc
shlb
loopne
and
add
loopne
and
add
loopne
and
add
loopne
and
add
loopne
and
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
in
ss
loopne
cmp
jg
inc
and
imul
outsl
dec
sub
jae
xor
jnp
cmp
mov
movsl
lea
xchg
jo
lods
xchg
je
mov
js
mov
jl
outsb
push
xor
pop
jbe
cs
and
xor
jae
xor
outsl
pop
xor
jno
cmp
insb
push
xor
insb
pop
cmp
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
jne
lods
mov
lahf
xchg
outsl
loopne
push
jne
lods
mov
pop
push
addr16
mov
outsl
push
mov
add
pop
push
jne
movsl
mov
mov
and
push
loopne
push
imul
add
cmpsl
xchg
dec
lods
mov
mov
ds
pop
add
mov
jne
mov
lea
mov
jne
mov
cwtl
and
xchg
sahf
jbe
mov
xchg
jne
lods
cltd
inc
dec
lods
cltd
jne
stos
js
push
lcall
inc
mov
push
inc
scas
mov
mov
ja
mov
add
xchg
sahf
jbe
mov
xchg
jne
lods
cltd
inc
dec
lods
cltd
jne
stos
js
push
lcall
inc
mov
pop
pop
addb
loopne
jle
xor
jb
and
cltd
inc
dec
lods
cltd
jne
stos
js
push
lcall
inc
mov
push
inc
scas
mov
mov
ja
mov
pop
and
xchg
jbe
ds
push
xor
jb
and
cltd
inc
dec
lods
cltd
jne
stos
js
push
lcall
inc
mov
push
inc
scas
mov
mov
ja
mov
pop
and
xchg
jbe
xchg
jle
xor
jb
and
cltd
inc
dec
lods
cltd
jne
stos
js
push
lcall
inc
mov
add
xchg
insb
inc
ds
add
lcall
dec
movsb
cltd
pop
mov
nop
pop
and
cltd
insb
dec
lods
cwtl
pop
xor
cwtl
jae
lods
xchg
push
loopne
xchg
push
inc
stos
mov
mov
ds
add
xchg
inc
inc
mov
and
inc
dec
mov
addr16
mov
jbe
ds
jo
mov
inc
inc
mov
jne
dec
movsb
mov
lcall
dec
mov
inc
inc
mov
jne
dec
movsb
mov
ds
add
data16
loopne
cltd
ja
js
xor
jae
xor
adc
xor
jb
js
mov
lcall
mov
xchg
ja
mov
dec
mov
ja
movsl
mov
dec
das
add
jg
inc
scas
cltd
xor
xchg
push
lahf
mov
pop
dec
jbe
jbe
xor
jae
xor
outsl
pop
xor
outsb
pop
add
arpl
add
mov
xchg
outsl
loopne
jae
ds
insb
inc
ds
jnp
ds
outsl
dec
ds
inc
loopne
and
add
ds
inc
loopne
cmp
inc
loopne
cmp
inc
loopne
cmp
inc
loopne
cmp
inc
loopne
cmp
inc
loopne
cmp
inc
loopne
push
xor
mov
and
insb
inc
ds
inc
test
and
outsb
push
xor
add
mov
es
imul
xchg
ja
loopne
push
and
je
and
jg
sub
data16
push
xor
outsl
dec
loopne
push
sub
jle
subl
loopne
lcall
cwtl
jge
daa
xchg
and
jno
xchg
xchg
outsl
push
ds
imul
insb
inc
mov
jbe
movsb
cltd
pop
aaa
cmpsl
xchg
addr16
mov
pop
and
cltd
pop
inc
mov
insb
dec
lods
and
jae
lods
xchg
push
inc
ds
or
mov
and
push
mov
xor
add
xchg
lcall
mov
jno
jg
add
xchg
push
push
mov
fs
lahf
data16
cmpsl
xchg
fs
stos
mov
loopne
xchg
ja
mov
push
dec
lods
mov
stos
mov
xchg
xchg
outsl
and
and
ja
mov
push
inc
test
and
ja
jg
xor
inc
mov
dec
inc
lahf
mov
mov
add
xchg
push
inc
lods
add
xchg
jno
nop
mov
cwtl
ja
ds
ja
lea
je
mov
and
ja
mov
push
inc
test
add
xchg
push
push
mov
xchg
push
inc
mov
push
dec
mov
and
ja
mov
push
dec
xchg
xchg
outsl
loopne
xchg
ja
mov
push
dec
jg
add
mov
jno
lods
mov
mov
js
sub
ja
sbbl
push
ds
and
dec
aas
inc
loopne
pop
xor
jae
xor
outsl
pop
xor
jno
add
arpl
sub
and
and
xchg
push
and
cltd
push
push
mov
xchg
addr16
movsb
mov
mov
lcall
ds
jno
mov
sahf
jae
js
sub
dec
jbe
arpl
sub
das
add
outsb
push
xor
ds
add
adcl
inc
js
sub
das
add
cmpsb
cltd
ja
js
xor
movsl
push
jae
scas
and
jo
xchg
mov
orl
loopne
mov
adcl
push
push
adcl
add
mov
jbe
jo
push
loopne
xchg
jb
mov
imul
add
adcl
imul
adc
lea
ds
push
inc
stos
xchg
ja
xchg
lea
lahf
mov
loopne
xchg
insb
push
mov
mov
mov
add
test
xchg
adc
dec
ds
dec
dec
mov
push
ss
xchg
js
mov
push
push
mov
mov
stos
xchg
lods
xchg
dec
dec
stos
mov
loopne
cltd
push
push
mov
and
push
push
mov
mov
and
push
push
mov
mov
stos
xchg
lods
xchg
push
push
lods
mov
mov
add
mov
jl
mov
ja
stos
outsb
jno
lods
xchg
jo
mov
jb
ds
ja
lods
mov
mov
jae
dec
mov
and
js
mov
jbe
lods
mov
mov
cwtl
fs
cmpsl
push
addr16
stos
and
addr16
stos
push
addr16
stos
and
inc
loopne
inc
inc
loopne
inc
inc
loopne
inc
inc
loopne
inc
inc
loopne
inc
inc
loopne
inc
inc
loopne
inc
inc
loopne
inc
inc
loopne
inc
inc
loopne
inc
inc
loopne
inc
inc
loopne
inc
inc
loopne
inc
inc
loopne
inc
inc
loopne
inc
inc
loopne
inc
inc
loopne
inc
inc
loopne
inc
inc
loopne
inc
inc
loopne
inc
inc
loopne
inc
inc
loopne
inc
inc
loopne
inc
inc
loopne
inc
inc
loopne
inc
inc
loopne
inc
inc
loopne
inc
inc
loopne
inc
inc
loopne
inc
inc
loopne
inc
inc
loopne
inc
inc
loopne
inc
inc
loopne
inc
inc
loopne
and
addr16
lods
cwtl
gs
lahf
xchg
addr16
mov
xchg
movsl
xchg
imul
xchg
jbe
stos
mov
dec
mov
xchg
push
pop
lahf
xchg
addr16
cmpsl
xchg
xor
xchg
add
mov
sahf
jno
mov
jb
test
and
jne
mov
fs
test
push
dec
stos
and
ja
mov
xchg
outsl
push
cmpsb
mov
mov
mov
mov
xchg
insb
mov
ds
jl
lahf
xchg
outsb
inc
mov
jb
mov
xor
xchg
add
lahf
cwtl
outsb
inc
lahf
xchg
fs
mov
xchg
add
movsb
xchg
jne
stos
push
outsb
push
lahf
pushf
outsl
push
mov
xchg
fs
stos
push
gs
mov
mov
lods
cwtl
inc
mov
xor
xchg
add
mov
jae
stos
xchg
insb
inc
lods
mov
mov
xchg
gs
lods
mov
mov
mov
mov
mov
ds
outsl
dec
mov
xchg
cmpsl
mov
mov
insb
inc
mov
and
jl
mov
imul
and
jl
mov
xchg
imul
xchg
jbe
stos
mov
inc
lods
xchg
add
mov
mov
mov
jae
stos
xchg
insb
dec
insb
mov
ds
js
lods
xchg
xor
and
jbe
mov
mov
ds
jbe
lahf
mov
mov
push
push
mov
xchg
xor
xchg
add
movsl
xchg
xchg
mov
push
push
insb
mov
ds
gs
lahf
cwtl
ja
mov
fs
mov
xchg
add
mov
insb
dec
test
push
dec
stos
and
ja
lods
xchg
addr16
mov
xchg
jne
mov
jbe
mov
inc
insb
mov
ds
jge
movsb
xchg
jb
insb
mov
ds
fs
mov
mov
mov
xchg
jb
cmpsl
mov
inc
lods
xchg
add
lahf
mov
mov
imul
push
dec
ds
jb
stos
xchg
mov
xchg
jo
mov
jb
mov
xchg
jo
xchg
xchg
imul
insb
inc
mov
jbe
movsb
cltd
pop
sub
ja
sbbl
push
lcall
xor
lcall
mov
add
arpl
add
add
sub
and
pop
add
ds
xor
imul
arpl
ja
lcall
dec
scas
mov
mov
xchg
loopnew
cwtl
pop
sub
ja
sbbl
push
lcall
push
mov
and
push
push
mov
insl
dec
inc
mov
jae
mov
xchg
outsl
inc
mov
lea
mov
inc
arpl
push
mov
push
push
cmpsl
mov
mov
inc
mov
add
mov
push
mov
adc
jbe
arpl
jne
mov
and
push
inc
lahf
mov
loopne
and
add
orb
push
cmpsl
fwait
push
inc
mov
add
mull
add
lea
jb
mov
popf
jae
lods
xchg
push
inc
ds
inc
loopne
mov
lods
pushf
jbe
mov
jo
lods
cltd
and
mov
mov
loopne
and
jo
xchg
mov
orl
loopne
mov
insb
mov
ds
push
lods
cwtl
jb
mov
pop
dec
lods
mov
mov
push
dec
stos
xchg
push
dec
pop
push
dec
mov
jb
ds
and
mov
jb
mov
pop
dec
lods
mov
mov
cmp
pop
and
push
adc
add
mov
jb
mov
pop
dec
lods
mov
mov
cmp
pop
and
jbe
data16
stos
mov
add
pop
dec
addr16
arpl
sub
mov
outsl
inc
pop
dec
or
loopne
mov
lods
mov
pop
js
push
mov
jne
xchg
push
xorl
ds
push
sub
ds
push
cs
and
jb
mov
ja
mov
push
xor
jb
and
cltd
inc
dec
lods
cltd
jne
stos
js
push
lcall
dec
lcall
push
lea
jbe
xchg
mov
mov
mov
xchg
mov
mov
xchg
ja
mov
jne
mov
and
mov
and
ja
orl
jns
mov
add
mov
jb
mov
pop
dec
lods
mov
mov
xor
cmpl
mov
jbe
lods
xchg
fs
ds
jo
pop
push
dec
mov
jb
ds
push
lods
cwtl
jb
mov
pop
dec
lods
mov
mov
pop
xor
add
mov
jb
mov
pop
dec
lods
mov
mov
xor
loopne
mov
lods
cwtl
jb
mov
pop
dec
lods
mov
mov
push
xor
and
jnp
stos
xchg
jne
insb
mov
ds
add
xchg
js
dec
mov
mov
orl
add
mov
inc
dec
mov
lea
xorl
loopne
pop
inc
es
inc
adc
jb
xor
outsl
imul
adc
xor
outsb
pop
dec
pop
ja
inc
and
loopne
xchg
jb
mov
push
inc
mov
jne
mov
and
jbe
arpl
outsl
dec
mov
jne
adcb
inc
mov
jne
mov
and
jno
lods
mov
insb
mov
ds
sbb
ds
jns
jbe
arpl
add
popf
xchg
add
xchg
jl
pop
bound
mov
mov
sbbl
cltd
sub
dec
adc
lcall
leave
jmp
adc
and
js
shr
imul
loopne
or
nop
aas
adc
imul
cmp
mov
inc
arpl
sub
aad
jge
pop
bound
js
ja
push
imul
and
jp
or
mov
pop
imul
or
mov
and
adc
test
cmp
mov
bound
and
xor
call
push
xor
jno
aaa
fistpll
js
leave
inc
inc
icebp
jle
insl
call
leave
push
das
icebp
jle
push
fists
and
repz
adc
ds
dec
inc
and
xor
scas
or
mov
sbb
or
in
pop
sub
ss
and
add
loop
loopne
and
add
add
and
add
mov
sbb
push
push
adc
ds
dec
inc
and
xor
and
outsl
sahf
inc
and
add
and
sahf
cmp
and
bound
mov
ds
add
leave
adc
loopne
jl
pop
jno
pop
adc
mov
fnstcw
and
add
cmp
sub
scas
mov
cmp
popf
pop
pusha
in
mov
imul
and
add
cmp
insl
add
lret
push
xor
stos
sti
fnstsw
sbb
fdivr
sbb
add
push
loopne
jmp
pop
sbb
sbb
ret
sbb
nop
and
cmp
add
xchg
adc
loop
in
cmp
jmp
pop
imul
and
jl
xchg
inc
sbb
es
cltd
or
hlt
addr16
sub
adc
imul
or
addr16
push
in
xor
and
xor
icebp
arpl
daa
cli
mov
rcll
adc
in
dec
fadds
loopne
push
imul
jns
std
outsb
ss
loopne
mov
in
xchg
pop
or
and
call
inc
mov
mov
jbe
call
jle
push
fists
adc
ds
imul
add
test
cld
mov
cmp
dec
aam
mov
fmuls
gs
ds
in
shll
in
repnz
enter
mov
add
cmp
pop
fists
nop
pop
jns
sbb
imul
add
cmp
pop
sbb
jmp
inc
mov
aas
pushf
or
xchg
mov
arpl
dec
movsb
cld
mov
add
leave
lcall
aas
and
out
ds
or
ds
add
ds
dec
rcrb
add
add
and
and
and
add
mov
jge
js,pt
cmp
dec
cmp
andl
pop
loope
cmpsb
in
ds
and
and
roll
shl
imul
leave
sbbl
loopne
call
sbb
mov
mov
in
xchg
adc
imul
and
mov
imul
lea
addr16
pop
pop
jle
mov
add
add
xor
and
or
push
imul
push
inc
loopne
sbb
add
mov
aas
icebp
jle
insl
sbb
and
addl
imul
pop
das
pop
jle
ret
add
es
add
cmp
sub
sbb
add
xchg
mov
cmpb
and
add
fildl
loopne
nop
xor
sub
icebp
andl
cmpsb
inc
gs
jle
inc
loopne
sbb
sub
ds
lods
loopne
and
add
dec
or
jmp
inc
and
adc
popl
dec
mov
sbb
lea
cmc
jle
rorb
add
xchg
and
imul
and
jne
mov
mov
cmp
xchg
jp
mov
and
dec
lea
jle
imul
add
xchg
and
xor
jne
and
lea
cmc
jle
push
xor
adc
lahf
inc
loopne
and
and
js
fists
add
test
cltd
cltd
push
fbstp
and
and
add
cmp
and
pop
imul
out
hlt
inc
and
pop
adc
xor
aaa
cmpsb
inc
sbb
lea
pop
cmp
add
xor
cmpb
add
xchg
jl
aaa
xchg
jl
and
xchg
jl
push
cmp
add
lcall
mov
nop
sub
add
cmpsb
add
and
jne
idivb
inc
loopne
and
mov
cmp
add
mov
dec
aam
es
es
loopne
test
in
lret
push
xor
jge
insl
ret
adc
loopne
jbe
fbstp
xor
js
lret
stos
out
fidivrs
adc
fistpll
xor
out
fidivrl
and
ds
mov
add
jb
inc
loopne
push
ret
aas
pop
jmp
out
in
and
cmp
add
add
cmp
push
adc
ds
gs
xor
xchg
ds
lea
ds
xor
and
pop
lock
mov
ds
add
xchg
mov
fdivrl
mov
ds
dec
call
lret
stos
fidivrs
lea
jle
add
and
add
mov
sarb
and
dec
insl
ret
and
fistpll
and
adc
ds
call
cmp
add
and
loopne
jbe
mov
lret
stos
fidivrs
and
fistpll
xor
fidivrl
and
pop
test
mov
and
add
mov
es
cmp
push
adc
ds
gs
xor
pop
aas
and
mov
xor
jl
pop
cmp
sbb
dec
add
xor
repz
and
lret
and
nop
cmp
pop
lahf
xchg
cmp
xchg
and
fdivrl
and
inc
loopne
stos
fstpt
popa
adc
ds
fdivrl
and
inc
loopne
and
sbb
gs
jae
jge
ds
fdivrl
and
aas
lock
nop
cmp
add
mov
and
and
insl
loopne
and
fdivrl
and
add
mov
and
and
insl
loopne
mov
and
and
fdivrl
and
inc
loopne
stos
fstpt
lahf
inc
loopne
cltd
sbb
jne,pt
imulb
jmp
fistpll
jne
cmp
add
mov
inc
loopne
mov
jmp
je
add
ds
cmp
add
mov
and
and
pop
dec
mov
or
xchg
cmp
lock
bound
cltd
out
xor
dec
sub
loopne
lea
in
and
add
test
push
enter
loopne
jmp
fistpll
jne
loopne
cmp
jle
mov
outsb
ss
loopne
stos
repz
stos
ret
push
xorl
sbbl
js
lret
stos
repz
cmpsb
cmpsl
in
and
loopne
mov
sarb
and
inc
loopne
and
sbb
add
adc
jmp
ds
xor
ds
add
xchg
loopne
lock
add
cmp
or
xchg
and
push
xor
and
add
ds
loopne
and
mov
xchg
mov
loopne
and
jmp
jle
add
xor
push
inc
and
or
cmp
loopne
and
fbstp
lahf
inc
loopne
cmc
sbb
jnp,pt
mov
or
loopne
loope
and
jnp
mov
dec
add
sub
lret
cltd
or
mov
bound
cltd
out
xor
inc
sub
pushl
jno
push
dec
jge
adc
xchg
lea
loop
and
add
push
xor
adc
and
dec
fcoms
sbb
sbb
jne,pt
xor
imul
inc
and
adc
ds
or
sbb
add
jp
inc
loopne
pop
aas
lock
nop
gs
loopne
lods
sbb
jne,pt
mov
pop
das
pop
jle
nop
gs
loopne
and
insl
ret
sbb
add
outsb
ss
loopne
jne
gs
loopne
popl
xchg
and
fdivrl
and
sbb
add
pushf
push
ret
cmp
jmp
out
hlt
inc
and
pop
adc
xor
aaa
cmpsb
sub
add
movsl
mov
and
add
xor
cmpb
add
xchg
jl
aaa
xchg
jl
and
xchg
jl
push
cmp
add
lcall
mov
nop
sub
add
cmpsb
adc
add
jp
inc
loopne
and
mov
cmp
add
mov
dec
aam
es
es
inc
loopne
test
in
lret
push
xor
jge
insl
ret
adc
loopne
jbe
fbstp
xor
js
lret
stos
out
fidivrs
adc
fistpll
xor
out
fidivrl
and
ds
mov
add
jb
inc
loopne
test
mov
sub
pop
loopne
mov
fcoml
fs
jl,pt
push
inc
scas
sbb
es
mov
add
xor
lcall
pop
loopne
jnp
cmp
add
xchg
jne
ja
and
nop
and
cld
inc
sbb
jne,pt
cmp
add
mov
cmp
and
ret
push
mov
aas
pop
jle
add
lods
mov
cmp
inc
loopne
stos
or
cmp
add
das
fistpll
and
add
fidivs
and
lods
mov
cmp
inc
loopne
stos
adc
cmp
add
xor
fistpll
and
add
lret
stos
fstpt
jl
fbstp
and
loopne
and
cld
dec
gs
mov
add
jb
inc
loopne
test
mov
inc
stos
stc
push
pusha
js
fists
adc
ds
fists
xor
jle,pt
mov
cltd
pop
nop
aas
add
incb
cmp
add
cmpsb
and
or
adc
add
push
inc
loopne
sbb
imul
add
cmp
and
push
dec
gs
add
ss
loopne
or
mov
xchg
mov
push
dec
jl
loopne
cld
push
fists
adc
test
xor
xchg
lea
jle
jmp
push
and
mov
mov
xchg
es
insl
andl
xor
pop
imul
pop
imul
and
popl
fists
inc
and
add
cmp
cmp
loopne
test
loopne
jg
and
mov
push
dec
ds
xor
test
pop
jmp
jmp
push
and
xchg
fistpll
ss
loopne
std
push
fists
nop
and
es
dec
inc
and
and
add
cmp
and
imul
add
cmp
and
leave
aas
pushf
sbbb
mov
ss
popl
aas
cmp
xor
jns
es
adc
ds
arpl
ss
mov
add
or
mov
dec
dec
add
lea
xor
add
fwait
int3
imul
int3
rcll
xor
fisubrs
and
push
push
scas
sbb
lcall
mov
mov
jmp
cmp
push
enter
loopne
jmp
jbe
mov
sub
es
loopne,pn
test
in
jns
mov
mov
push
enter
loopne
test
nop
and
cmp
xchg
in
and
add
lods
neg
cmp
ss
mov
jmp
imul
push
dec
jl
ss
loopne
js
push
xor
cmp
mov
mov
outsb
adc
dec
aas
addb
xor
add
mov
fwait
fists
adc
test
mov
sub
pop
imul
inc
imul
scas
js
mov
int
and
and
adc
inc
pusha
jmp
jb
loopne
jle
enter
loopne
stos
ret
cmp
imul
or
pop
xor
cs
mov
andl
cmp
and
out
sbb
and
ja
icebp
es
mulb
loopne
movsl
sbb
cltd
or
cmp
loopne
xor
js
ret
sti
cmpsb
mov
and
jne
arpl
add
xchg
mov
push
push
movsl
sbb
lcall
jne,pt
xor
and
dec
fcoms
add
jns
pop
push
dec
jnp
fists
adc
jne,pt
idivb
inc
loopne
push
add
xchg
xor
mull
sub
ret
dec
add
cmp
cltd
or
inc
sub
loopne
push
aas
pushf
out
xor
dec
pop
adc
popa
push
dec
jl
mov
jg,pn
shll
mov
jmp
cs
mov
cmp
leave
in
pop
or
push
fbstp
enter
loopne
pop
mov
es
hlt
ret
sub
cmpsb
aad
and
and
enter
loopne
jne
jbe
add
xchg
and
gs
cltd
or
inc
push
add
xchg
adc
loopne
in
push
dec
popl
je
sbb
add
inc
jne
cmp
push
add
cmp
test
in
inc
cmp
pop
js
fwait
pop
pop
add
lcall
enter
popf
sbbl
jnp
int3
jnp
out
and
imul
gs
cmp
loopne
movb
and
add
and
push
bound
loopne
push
add
cmp
sbb
leave
push
push
pop
js
mov
add
push
cmc
fidivrs
lcall
cs
inc
pop
inc
and
inc
loopne
push
imul
or
pop
cmp
loopne
and
ds
add
xchg
or
test
add
push
ss
loopne
or
xor
xchg
mov
call
jns
pop
push
sahf
mov
sbb
call
add
mov
mov
mov
pop
sub
jecxz
mov
clc
ret
out
mov
mov
and
adcl
andl
push
dec
mov
jecxz
jbe
mulb
in
icebp
cmp
and
imul
inc
mov
inc
test
fildll
xor
xchg
subl
es
test
pop
jmp
out
in
and
mov
mov
lock
aas
jecxz
cmpsl
cmp
andl
loopne
mov
pop
leave
jp
jecxz
mov
lock
adc
and
xor
mov
and
nop
hlt
aam
aaa
sbb
aas
shlb
sub
sbb
cltd
push
insb
jnp
mov
and
mov
xchg
cltd
pop
dec
inc
es
lret
stos
fidivrs
or
mov
add
nop
cmp
loopne
jne
imulb
stos
fidivrs
jno
and
mov
sbb
jmp
cmp
add
xchg
or
xchg
cmp
jle
mov
popf
sbbl
jnp
int3
mov
and
pop
aaa
movsb
cmpsb
cmp
cwtl
xor
sub
and
push
sarl
and
add
leave
imul
xor
mov
cmpxchg
jns
adc
es
leave
jge
or
popa
imul
popa
mov
fdivs
sub
sbb
cltd
jns
insb
jl
fnstenv
imul
mov
xchg
xor
int3
ds
add
lret
stos
neg
cmp
or
mov
add
and
loopne
jne
imulb
stos
neg
cmp
jno
and
mov
gs
and
jmp
cmp
cmp
cmp
mov
aaa
cmp
and
add
ds
faddl
and
jg
leave
dec
and
ds
loop
push
imul
adc
or
out
sub
inc
scas
push
in
shrl
cmp
cmpsl
sub
and
adc
pushf
sub
mov
lret
xchg
test
pop
call
push
sub
sbb
cwtl
pop
sbb
pushf
or
sbb
mov
shrb
xor
adc
test
pop
jmp
daa
in
ret
and
add
cltd
daa
lock
sub
test
mov
push
aaa
es
or
xchg
jle
daa
inc
adc
adc
test
leave
imul
add
jl
pop
cmp
imul
imul
enter
dec
das
shll
cli
cmp
or
xchg
sub
ljmp
sub
in
pusha
lret
andl
ds
xlat
clc
jle
imul
jno
and
jne
testb
ja
lret
jb
xor
jb
xor
sub
mov
cmp
daa
adc
cmp
sbb
push
xchg
adc
ds
clc
shr
test
rcll
arpl
sbb
xchg
jl
divb
adc
inc
loopne
adc
add
xchg
or
mov
scas
dec
fmul
pop
xchg
cmp
and
adc
ds
imul
jns
lret
push
cmp
ds
insl
subl
in
xor
and
outsb
in
push
insl
sbbl
loopne
mov
aam
sub
sbbb
lcall
xchg
js
push
inc
or
xchg
lcall
xorb
loopne
and
and
add
sub
imul
dec
add
fwait
sub
enter
enter
enter
dec
das
fsubl
cli
cmp
mov
jle
ds
xor
mov
mov
cmp
bound
push
fists
adc
jne,pt
push
bound
jmp
jb
add
xor
mov
leave
adc
loopne
jl
pop
jo
pop
adc
mov
fnstsw
and
add
cmp
iret
insl
pop
jno
pop
insl
sti
and
loopne
scas
cwtl
fdivrl
scas
inc
jmp
mov
fnstsw
and
add
cmp
gs
jmp
add
iret
nop
cmp
add
cmpsb
jne
and
jne
imulb
fwait
or
xor
loopne
adc
rclb
and
pop
and
and
sbb
add
and
loopne
jbe
push
outsb
and
fidivrs
jne
idivb
inc
loopne
stos
fidivrs
push
adc
ds
dec
fmul
push
xor
stos
fidivrs
and
loopne
fwait
pushl
lret
stos
fnstsw
mov
fdivrl
and
add
mov
and
popa
test
sbb
insl
loop
cmp
rol
sbb
xchg
and
pop
dec
add
cmp
and
out
xor
jnp
imul
mov
pop
nop
and
cmp
jnp
ds
insl
and
lods
add
ds
or
test
add
lret
loopne
std
out
dec
jno
test
xchg
jl
dec
inc
jnp
fistpll
and
call
inc
fs
add
xchg
jnp
dec
inc
jne
mov
mov
pop
ss
jnp
loop
fwait
fists
fwait
adc
mov
add
mov
inc
loopne
in
sbb
push
sbb
or
and
push
cmp
add
sbb
push
enter
loopne
fwait
or
cmp
loopne
popl
es
add
ds
cld
leave
call
xor
jp
imul
ja
lret
mov
daa
lock
mov
loope
and
adc
add
leave
pushf
imul
test
mov
dec
sub
out
ret
loopne
jne
testb
mov
dec
test
xchg
and
mov
sub
imul
es
pop
push
mov
cltd
xor
mov
adc
mov
jecxz
test
loop
jp
testb
adc
add
sub
in
icebp
mov
cmp
xchg
add
add
scas
inc
add
xor
aad
and
add
ds
add
leave
mov
loopne
and
add
ret
loopne
loop
sarb
and
addr16
and
push
call
dec
mov
loopne
and
leave
add
dec
add
ds
imul
mov
movsb
cmpsb
add
outsb
cltd
adc
and
mov
imul
and
add
mov
mov
mov
aas
cmp
daa
cld
movsb
mov
inc
popa
add
cmp
and
mov
movsb
mov
inc
popa
add
cmp
xor
xor
push
imul
ds
dec
fdivl
out
cmc
jg
arpl
sub
dec
xor
imul
add
and
mov
leave
andl
and
bound
add
inc
outsb
pop
arpl
adc
and
loopne
es
aas
pushf
sbbb
pop
ret
lret
xor
mov
jbe
ss
mov
call
leave
insb
aas
jecxz
xor
int3
imul
and
adc
adc
lret
xor
test
pop
test
push
inc
movsl
shl
ret
divl
lret
cmp
nop
jbe
fists
adc
ds
or
sub
lret
jge
ds
out
adc
adc
xor
dec
mov
call
xchg
xor
xchg
ds
adc
add
leave
data16
arpl
imul
loopne
and
xchg
and
mov
inc
push
push
lcall
test
sbb
leave
andl
leave
mov
cld
sbb
scas
dec
fadd
jp
pop
adcl
mov
inc
out
imul
and
in
cmp
push
add
shr
gs
lcall
cmp
and
and
xorl
jecxz
faddl
imul
packssdw
and
dec
mov
cld
lret
sub
mov
pushf
out
dec
sbb
inc
loopne
cmp
jle
mov
ds
mov
leave
pop
dec
lock
imul
imul
inc
loopne
pop
lret
pop
jle
add
ds
and
inc
loopne
cld
imul
sbb
inc
loopne
pop
lret
pop
jle
add
ds
and
inc
loopne
cld
imul
and
inc
loopne
pop
lret
pop
jle
add
ds
and
inc
loopne
cld
imul
add
cmp
and
sbb
ds
and
inc
loopne
cld
imul
add
cmp
and
sbb
ds
and
inc
loopne
cld
imul
add
cmp
and
jge
ds
orb
lcall
xchg
jp
aaa
mov
adc
add
imul
inc
mov
fists
mov
or
add
cmp
or
ds
xor
scas
dec
lock
mov
add
push
mov
and
xor
popl
imul
sbb
pop
add
and
sbb
gs
push
pop
adc
ds
aas
pushf
sbbb
mov
arpl
inc
pop
adc
js
xchg
scas
js
lcall
sub
add
or
fcoms
jnp
ss
jmp
jle
add
lahf
inc
loopne
jmp
and
decb
loope,pn
and
pop
ss
add
jne
neg
lahf
inc
loopne
jmp
and
ds
add
jle
pop
ss
and
or
jne
imul
lahf
inc
loopne
std
ds
ds
add
js
imul
lahf
inc
loopne
in
fs
add
test
nop
and
lret
push
imul
and
xchg
mov
xor
pusha
ds
int3
loopne
and
pushl
mov
or
ds
push
imul
add
sbb
mov
inc
scas
add
inc
jne
push
dec
or
xchg
sbb
jno
lea
mov
call
cmpsb
and
push
fists
jge
ds
ret
push
push
pop
js
mov
push
pop
inc
mov
aam
mov
ficompl
mov
lcall
jle
add
and
add
cmp
leave
jge
ds
js
mov
add
and
add
adc
ds
dec
rcrb
mov
arpl
xor
sbb
call
sbbl
jmp
ds
push
inc
push
ret
leave
adc
add
xchg
js
xor
and
sbb
scas
dec
aam
xor
divb
inc
loopne
fiaddl
loopne
jnp
fbstp
ss
loopne
push
push
dec
inc
scas
dec
fdivrs
and
adc
ds
insl
sbbl
call
jle
pop
enter
loopne
adc
outsb
xor
push
fbstp
sbb
ss
push
js
loopne
and
add
js
fists
jge
ds
sbb
lcall
test
add
jnp
div
lahf
inc
loopne
in
hlt
xchg
js
fists
lahf
inc
loopne
in
in
imul
xchg
and
test
cmp
push
xor
add
pushf
scas
dec
fistps
adc
loopne
jnp
cltd
lock
nop
popf
push
add
shll
jno
testl
ss
cmp
add
and
add
loop
inc
loopne
in
lods
es
leave
mov
fnstsw
in
dec
fdivrl
nop
xchg
mov
or
sbb
insb
or
loopne
in
add
shl
add
cmp
es
jne
and
loopne
in
cmpsb
fiadds
dec
mov
mov
and
leave
loopne
gs
leave
mov
xchg
jle
adc
jmp
ret
in
es
xor
add
shl
cmpsb
loop,pt
imul
mov
sub
les
add
mov
imul
add
cmp
cmc
inc
arpl
sub
jbe
jns
imul
jns
leave
nop
in
jne
pop
push
sub
cmpsb
inc
lea
cmpsl
pushf
add
add
add
cmpsb
aas
or
lea
aas
mov
fdivr
test
mov
cmp
push
dec
jle
pop
fbstp
and
loopne
cmp
mov
jbe
inc
loopne
jbe
and
cmp
pop
ss
stc
jge
ds
ret
push
sbb
fbstp
and
loopne
and
add
cltd
lret
dec
add
cmp
and
jns
cmp
and
xchg
mov
pop
jmp
out
push
xchg
jnp
adc
pop
ret
insl
mov
jns
mov
mov
in
movl
dec
aam
xor
fwait
or
div
xor
or
xor
add
gs
ds
out
ret
loopne
mov
int3
add
and
xor
cmp
pusha
cmp
jns
ds
add
add
and
or
cmp
jg
and
inc
and
dec
fadds
add
cmp
and
add
es
pavgb
mov
arpl
xor
rorl
xor
ds
add
ds
jmp
addr16
inc
loopne
jmp
or
ds
outsl
icebp
jle
mov
sub
loopne
popf
adc
ds
mov
inc
and
inc
loopne
stos
pop
in
and
add
inc
or
movb
dec
sub
loopne
jge
and
scas
mov
inc
and
inc
loopne
stos
sub
ds
add
push
or
ds
lock
mov
sub
loopne
mov
and
scas
mov
and
push
loopne
lea
cli
jle
push
fists
adc
ds
call
ds
add
leave
cmpsb
inc
in
and
inc
in
and
add
mov
imul
ds
adc
jle
pop
shr
dec
jo
and
testb
scas
dec
mov
lret
push
xor
push
xor
sub
ds
sbb
add
fs
es
leave
push
imul
xor
mov
and
add
jns
pop
out
ret
loopne
jne
dec
cmp
cmp
mov
addr16
pusha
lock
jmp
inc
and
push
insl
adcl
push
pop
ss
loopne
js
push
cmp
add
sbb
inc
and
sbb
dec
inc
jnp
push
es
fbstp
and
mov
add
and
add
ds
aam
and
es
loopne
test
add
loopne
js
xor
cmp
jns
cmp
and
adc
fisubs
sub
mov
or
ja
ss
and
fsubl
fistpll
cmp
icebp
jle
cmp
dec
lcall
jle
nop
and
push
int
and
jl
divb
orb
inc
and
fdivrl
and
dec
fdivrs
and
push
adc
test
pop
jmp
ja
dec
pop
fidivs
jns
js
leave
stos
aas
in
and
cmp
jbe
add
mov
push
xor
and
lock
and
push
cwtl
mov
sbb
gs
and
push
insl
out
adc
jp,pt
push
or
ds
sbb
jmp
ds
add
cmp
and
or
js,pt
imul
or
mov
sub
loopne
jle
mov
pushf
sbbb
jns
in
leave
jno
in
out
aaa
leave
push
mov
mov
mov
xor
inc
and
bound
mov
in
jno
push
ss
pop
out
ret
loopne
mov
sbb
mov
jg
push
scas
sbb
mov
loope
and
xchg
and
adc
add
leave
pushf
imul
pop
or
ret
loopne
mov
in
inc
out
imul
add
ret
in
and
aas
and
add
mov
imul
in
imul
test
cmp
add
mov
ret
out
ja
sub
mov
ds
mov
xor
jmp
push
xor
push
inc
or
ds
ret
out
ret
loopne
test
in
sub
gs
fwait
lret
sbb
leave
hlt
shll
ret
popf
add
cmp
sub
cmp
ds
add
ja
loopne
and
add
leave
mov
loopne
and
adc
add
leave
popw
insl
scas
sub
jmp
mov
imul
and
fiaddl
inc
es
and
ds
lret
add
movsb
mov
inc
popa
cld
imul
mov
movsb
mov
inc
popa
cld
imul
sbb
cmp
adc
gs
dec
fcoml
out
cmc
mov
fisubrl
aas
add
and
mov
test
cs
lcall
ds
dec
cmp
jge
ds
out
adc
adc
mov
sub
push
ss
push
aaa
mov
loopne
or
and
scas
adc
mov
in
aad
and
dec
aam
and
enter
enter
loopne
push
outsb
adcl
and
or
xchg
and
or
push
imul
push
inc
loopne
fcmovne
xor
push
out
hlt
jb
xor
push
fimuls
and
adc
ds
pop
dec
add
cmp
mov
add
inc
and
aam
cld
cmp
cs
leave
push
aas
pushf
or
xchg
mov
popa
sub
add
jnp,pt
sahf
mov
inc
loopne
loop
fidivrs
lret
jno
pop
insl
sti
sub
loopne
test
xor
jle
testb
mov
and
jne
testb
shl
and
add
and
loopne
jl
insl
mov
push
fisttps
jl
call
jle
push
fists
adc
ds
insl
ret
and
loopne
jbe
push
cmp
pop
fists
adc
ds
lock
jmp
ds
jmp
xchg
es
insl
andl
in
and
call
ds
arpl
xor
pop
cmp
ja
xchg
lea
loope
and
inc
icebp
jle
push
fists
adc
ds
imul
add
sbb
insb
cmp
add
cmp
and
lret
sub
mov
leave
adc
aam
test
fdivrs
js
insl
sbbl
idivl
jmp
inc
and
dec
aam
and
enter
enter
loopne
jmp
in
enter
imul
add
or
jmp
inc
and
cmp
add
es
test
add
dec
gs
hlt
lock
imul
aas
inc
loopne
test
imul
xor
and
inc
loopne
jmp
add
inc
and
fdivrs
es
cmp
stos
add
jl
loopne
cld
push
fists
adc
ds
rcrb
ja
xor
ss
loopne
pop
lock
lds
loopne
sub
add
jle
push
fists
dec
and
cmp
and
push
dec
add
cmp
and
mov
push
xor
mov
ds
push
cltd
push
xor
cmp
jle
imul
and
fidivl
cmp
imul
loopne
jne
call
adc
add
xchg
adc
ds
dec
loop
inc
loopne
and
fbstp
aas
inc
loopne
and
xor
cmp
stos
ficoms
insl
loopne
cld
push
fists
adc
ds
lock
dec
jp
loopne
cld
push
fists
adc
test
cltd
jle
mov
mov
sbb
jle
add
ds
fists
cmp
dec
add
stos
ficoms
sti
sti
jle
push
fists
jecxz
jle
push
orl
inc
loopne
cld
cmpsb
enter
gs
inc
inc
loopne
and
dec
out
inc
loopne
enter
and
push
and
jl
fdivrl
mov
subl
inc
loopne
cld
imul
add
loope
jle
ds
dec
lcall
pop
jle
add
ds
test
add
cmpsb
pop
push
and
js
mov
bound
loopne
enter
and
fimull
inc
inc
loopne
enter
and
fimull
inc
inc
loopne
enter
and
fimull
inc
inc
loopne
enter
and
fidivrl
pushf
enter
and
out
xor
and
sbb
or
cmp
fwait
sbb
inc
loopne
and
add
add
cltd
jnp
sbbl
loopne
js
dec
inc
and
fdivrl
xchg
push
ss
or
push
imul
push
inc
loopne
adc
nop
and
ss
jecxz
fwait
fists
pop
int3
sbb
insl
test
lret
and
ret
in
jns
jne
xchg
js
ss
and
fdivrl
and
add
and
add
lcall
xchg
and
and
add
cmp
and
pop
test
mov
and
add
add
and
push
fists
adc
ds
pop
cmp
xor
loopne
xchg
or
jge
mov
xchg
mov
popa
sub
add
jl,pt
pop
jno
pop
adc
mov
adc
rcrl
loopne
nop
xor
jmp
pop
ret
insl
sti
pop
add
cmp
and
iret
pop
jle
mov
mov
cmp
mov
nop
sub
jb
add
cmpsb
in
add
jbe,pt
push
inc
and
gs
cltd
aaa
insl
ret
pop
add
cmp
and
add
cmp
cmp
pop
jle
mov
jb
add
mov
in
cmp
and
adc
out
xor
es
xchg
jl
loopne
daa
add
mov
xchg
cmp
and
add
cmp
and
add
xchg
and
mov
cltd
bound
and
loopne
jbe
jbe
and
jns
es
loopne
mov
sub
add
mov
gs
cltd
das
insl
ret
std
add
cmp
add
ret
push
addr16
fdivrl
or
jle,pt
fbstp
and
shlb
cmp
and
add
sub
pop
fists
adc
ds
ret
aas
pushf
out
popa
sub
add
js,pt
test
aas
and
shl
jnp,pt
imul
lcall
ds
sbb
and
jne
call
push
inc
loopne
and
imul
ficoms
pop
ret
leave
push
es
lret
imul
dec
inc
and
mov
add
dec
pop
loopne
dec
push
dec
ds
xor
and
add
xchg
or
adc
add
dec
test
out
movsb
cmpsb
and
or
and
mov
cmp
pushf
loopne
and
ja
mov
popl
jno
nop
pop
bound
push
sbbb
inc
jmp
sub
loopne
and
nop
dec
add
stos
add
mov
add
jne
enter
loopne
stos
ret
cmp
dec
add
ds
pop
xor
imul
in
and
dec
icebp
jle
mov
push
popf
adc
adc
arpl
mov
loopne
imul
dec
bound
ds
loopne
mov
and
and
and
xor
sbb
add
cmp
js
fists
add
jle
inc
loopne
mov
add
cmp
add
jle
inc
loopne
imul
cmp
and
add
cmp
in
out
movsb
add
cmp
and
loopne
call
repz
test
add
ds
add
mov
add
xor
imul
and
insl
loopne
cmp
mov
sub
ss
jns
loop
cmp
push
dec
pusha
imul
aaa
jno
nop
pop
ss
pusha
aam
shlb
mov
fwait
add
scas
mov
push
fists
adc
js,pt
insl
addl
or
gs
mov
nop
and
lret
push
xor
xor
loopne
scas
pusha
fdivrl
and
bound
and
sbb
add
adc
fists
adc
ds
ret
out
shl
popa
cmp
jmp
out
cld
inc
and
add
xchg
jecxz
lock
mov
and
add
cmp
and
add
push
enter
loopne
push
arpl
xor
xchg
jl
test
inc
loopne
jl
imul
and
inc
push
add
mov
lret
push
xor
std
mov
pop
gs
mov
jmp
add
ret
push
pop
jnp
loopne
scas
js
es
push
loopne
mov
fadd
jmp
dec
fmuls
adc
cmpsb
andl
inc
and
aam
cmp
pop
cmp
es
lret
push
xor
popl
dec
inc
inc
inc
loopne
es
mov
add
xor
xchg
ds
fistpll
and
add
mov
and
scas
mov
mov
lds
scas
arpl
sub
loopne
in
loope
and
adc
mov
les
and
jmp
pop
and
nop
and
and
add
mov
dec
shrb
or
loopne
jbe
push
xor
jle
mov
and
add
cmpsb
dec
pop
and
jne
mov
ret
push
inc
jmp
fistpll
and
aam
mov
out
imul
pop
adc
ds
ficoms
insl
loopne
cmp
jle
push
fists
adc
ds
dec
fistps
jnp
int3
rcll
ss
lea
jle
imul
jno
and
jne
testb
ja
lret
jb
xor
cmp
add
and
and
add
cmp
and
mov
mov
xchg
dec
mov
test
lret
cmp
add
shr
aas
pushf
out
xor
push
js
insl
andl
xor
push
xor
and
sbb
ds
test
add
and
adc
ds
hlt
ret
in
in
or
ds
or
push
imul
push
inc
loopne
std
nop
push
sub
int3
dec
mov
test
lret
rorl
add
shr
imul
popa
cmp
jmp
out
lock
pop
and
ds
lret
clc
jle
add
mov
sbb
dec
add
cltd
cs
mov
ret
push
pop
mov
shrb
and
rclb
add
jae
sbb
lea
or
add
int3
mov
sub
push
loopne
js
aaa
test
ss
pop
ret
insl
sti
es
cmp
and
scas
inc
jmp
mov
loope
and
add
cmp
iret
insl
pop
jno
pop
insl
sti
es
cmp
and
inc
loopne
shrl
call
and
jg
ds
add
test
push
fbstp
and
add
cmp
and
adc
ds
cld
lret
stos
add
cmp
and
add
scas
and
nop
gs
loopne
and
fbstp
sbb
ds
dec
dec
add
lret
stos
add
cmp
cmp
add
cmp
and
imul
and
add
cmp
and
add
cmp
and
xchg
and
or
adc
dec
call
add
bound
enter
pop
gs
jle
repnz
pop
enter
loopne
stos
ret
cmp
call
mov
mov
and
add
jnp,pt
dec
jge
mov
cmp
sbb
mov
popa
adc
jle,pt
insl
ret
and
add
cmp
or
addl
mov
loopne
and
pop
loopne
test
in
lret
stos
add
cmp
xor
mov
push
aas
pushf
out
xor
push
js
aaa
jno
aaa
mov
fwait
or
scas
mov
rclb
pxor
mov
stos
idivl
insl
loope
and
call
js,pt
fbstp
or
xchg
add
xor
test
bound
xchg
jl
loopne
and
add
xchg
lea
loopne
add
scas
dec
call
inc
and
fdivs
lcall
adcl
fbstp
ss
loopne
in
add
push
xor
push
xor
push
xor
gs
mov
mov
cmp
test
pop
jmp
out
loopne
and
add
cmp
pop
ret
cmp
loop
fistpll
cmp
add
push
cmp
lods
insl
ret
and
push
cmc
jle
push
fists
adc
ds
lock
push
adc
ds
fbstp
fwait
or
mov
add
xchg
jne
gs
loopne
lea
xor
add
bound
mov
and
mov
and
loopne
and
add
and
inc
loopne
ret
cmp
jge
lahf
or
pop
cmp
or
pop
cmp
or
pop
cmp
or
pop
cmp
or
pop
cmp
and
loopne
imul
imulb
jmp
add
cmp
xor
add
or
and
adc
loopne
jbe
push
inc
and
sbb
add
sub
mov
js
sahf
ds
add
xchg
mov
and
add
test
add
jle
push
fists
jl
call
adc
std
pop
xor
and
jns
xchg
lea
jle
add
and
add
gs
ds
hlt
ret
add
xchg
popl
fists
fwait
dec
shlb
add
shll
push
dec
and
fsubrl
and
aas
leave
call
mov
sub
mov
aaa
dec
ja
mov
gs
rolb
xor
push
daa
add
xchg
jnp
dec
mov
in
popf
sub
add
mov
fnstsw
and
scas
dec
inc
scas
pusha
int3
call
daa
add
movl
inc
loopne
and
or
add
sub
add
inc
inc
loopne
push
push
dec
add
cmp
and
inc
loopne
call
nop
int3
cmp
push
fisttps
mov
int3
cmp
and
jnp,pt
mov
cmp
and
ds
andl
dec
aas
js
push
pop
add
and
pop
lock
mov
pop
mov
aam
mov
int3
cmp
out
xor
and
add
sbb
add
mov
push
enter
loopne
int
and
jne
and
ds
push
dec
and
call
cmp
and
or
mov
add
jb
inc
loopne
jnp
testb
add
shl
adc
sub
add
xchg
jne
push
ss
and
ds
sarb
test
pop
test
lret
push
xor
push
fbstp
jne
fists
adc
ds
leave
adc
adc
xchg
pop
add
xchg
mov
les
in
std
lret
push
xor
and
add
mov
jl
and
sbb
mov
mov
and
ss
sti
es
cmp
and
scas
mov
mov
loope
and
add
cmp
mov
insl
sti
es
cmp
and
pusha
lock
and
scas
mov
stos
add
cmp
and
int3
dec
gs
inc
and
les
add
mov
jmp
cmp
mov
cmp
add
cmp
and
and
loopne
nop
xor
mov
mov
inc
and
in
mov
xchg
and
add
cmp
and
push
cmc
jle
push
fists
adc
ds
loopne
and
adc
ds
hlt
popf
or
xchg
mov
popa
sub
add
js,pt
aaa
test
ss
sti
es
cmp
and
scas
mov
mov
and
and
add
ds
lret
lock
push
fists
adc
ds
loopne
and
js
xchg
lea
enter
loopne
jmp
mov
xchg
and
in
xchg
and
gs
lcall
cmp
and
pop
lret
es
pusha
lock
sbbl
and
in
cmp
and
add
xchg
out
xor
dec
sub
loopne
jnp
dec
jle
fidivrs
jno
nop
popf
xor
add
mov
fdivrl
shrl
call
loop
fistpll
and
loopne
shrl
call
jle
popf
aaa
and
loopne
ret
cmp
shrb
and
mov
fists
adc
ds
ss
jge
lahf
or
xchg
xchg
xchg
dec
and
insl
pop
test
jmp
dec
and
nop
gs
loopne
stc
and
jne,pt
imulb
jmp
add
cmp
and
adc
ds
fdivrl
sti
fnstsw
stos
neg
cmp
sbb
mov
cmp
add
cmp
and
add
mov
dec
and
push
enter
loopne
jmp
int3
mov
sub
add
js,pt
aaa
test
ss
sti
es
cmp
and
scas
mov
push
sbb
fwait
and
and
add
ds
lret
lock
push
fists
adc
ds
loopne
and
push
xor
cmp
lock
mov
shll
push
inc
pop
ret
lret
push
js
fists
adc
jnp,pt
fdivrs
and
pop
test
jbe
sub
test
fistps
scas
sbb
out
mov
lcall
movsl
popa
cmpsl
andl
loopne
and
mov
dec
and
push
faddl
leave
inc
test
or
pushf
scas
pop
fdivl
or
pop
dec
inc
jl
jecxz
and
call
jle
xchg
cmp
sub
xchg
mov
pop
ss
and
call
jle
mov
leave
std
ds
dec
jl
fbstp
and
mov
mov
mov
add
and
imul
xor
xchg
js
aaa
cmpsb
add
and
lea
jle
add
mov
sbb
dec
add
pop
stc
adc
mov
aam
lcall
xchg
pop
ret
insl
mov
imul
insl
adcl
loopne
jne
and
test
pop
ss
mov
and
mov
pop
fists
adc
ds
js
mov
mov
mov
insl
loope
fwait
sti
fists
and
scas
lock
add
mov
pop
dec
gs
adc
jns
cmp
test
pop
jmp
out
loopne
and
add
cmp
pop
ret
cmp
loop
fistpll
fwait
or
iret
nop
gs
loopne
sbb
and
jne
imulb
jmp
add
cmp
cmp
jle
insl
call
in
mov
push
cltd
adc
ds
fists
adc
ds
ss
loopne
cmp
in
sub
add
push
adc
loopne
or
fistpll
adc
loopne
jl
pop
jno
pop
adc
mov
int
and
add
cmp
add
and
mov
and
scas
mov
stos
out
fnstsw
add
cmp
and
dec
fmull
and
add
xchg
jne
loop
and
adc
ds
out
ret
out
loopne
jnp
pop
xchg
pop
ret
insl
sti
adc
loopne
scas
mov
aam
mov
mov
cmp
add
adc
loopne
in
loope
and
mov
scas
js
call
mov
int3
cmp
loopne
ds
add
cmp
xor
loopne
jmp
push
insl
ret
adc
loopne
jbe
insl
adcl
fdivrl
sbb
sbb
dec
add
popa
push
gs
pusha
shlb
jbe
sub
loopne
or
pop
sbb
jg
in
mov
movsb
cmp
imul
cmp
notl
jns
cmp
and
arpl
pop
jmp
out
in
and
ss
pop
ret
insl
sti
and
loopne
scas
cwtl
fdivrl
and
scas
inc
jmp
mov
fnstsw
add
cmp
iret
insl
pop
jno
pop
insl
sti
and
loopne
scas
cwtl
fdivrl
and
testb
sub
push
or
fdivrl
cmp
sbb
jne,pt
imulb
stos
fnstsw
sub
add
nop
cmp
loopne
fwait
or
cmp
and
add
mov
adc
add
push
insl
andl
insl
ret
and
loopne
jbe
ficoms
xchg
cmp
loopne
mov
fdivrl
and
nop
cmp
add
mov
jmp
aas
and
int3
mov
mov
mov
in
ret
and
in
in
adc
pop
cltd
and
leave
in
mov
cmp
and
sub
add
cltd
push
arpl
inc
imul
loopne
or
jp
add
mov
leave
and
cmp
mov
add
stos
stc
push
dec
mov
add
stos
ret
push
jp
arpl
push
pop
adc
and
add
and
sahf
lods
add
cmp
cltd
getsec
xchg
or
pop
imul
push
daa
shll
mov
cmpsb
popf
add
add
ss
cltd
daa
call
jnp
jg
dec
mov
sahf
ret
in
adc
imul
jle
inc
loopne
dec
shl
jl
insl
inc
mov
ja
insl
jmp
shl
lret
das
test
mov
popf
add
sbb
loopne
sub
and
and
test
add
cmp
and
add
ret
push
inc
popl
mov
or
push
jmp
ss
lret
push
mov
pop
ds
ss
jnp
push
dec
and
call
jle
mov
subl
hlt
mov
push
dec
and
in
cmp
and
sti
fists
adc
ds
add
cs
push
cltd
pop
nop
aas
adc
adc
andl
mov
ss
xchg
and
cmpsb
fs
jnp,pt
ss
sub
inc
loopne
in
sbb
mov
add
and
hlt
xchg
and
lock
inc
adc
ds
ret
push
dec
fists
adc
ds
xchg
dec
mov
add
jb
inc
loopne
and
aas
dec
mov
ret
ds
call
dec
in
xchg
jne
mov
js,pt
push
dec
and
call
jle
mov
sub
imul
and
jl
pop
dec
jl
push
dec
and
gs
cltd
packsswb
xor
push
dec
adc
imul
and
jl
push
dec
pop
adc
ret
push
dec
test
ljmp
bswap
sub
jns
cmp
and
pop
cmp
shll
push
jo
pusha
hlt
ret
add
ja
rsqrtps
call
inc
lcall
cmp
or
in
ret
in
jecxz
adc
imul
popa
cmp
mov
js
jno
popa
mov
jle
insl
in
cltd
daa
in
xchg
and
movsb
dec
add
lcall
ds
or
jl
js
leave
jmp
mov
imul
xor
mulb
cmpsb
pushf
call
inc
adc
lcall
mov
mov
subl
imul
and
pop
js
test
pop
fists
adc
ds
ret
push
adc
add
test
in
sub
out
sub
mov
popa
jmp
cmp
and
add
add
mov
andl
and
add
cmp
and
mov
mov
add
ss
loopne
adc
and
jle
popa
mov
cmp
jle
shll
jle
add
out
loop
gs
gs
sbb
cmp
adc
xor
jnp
testb
inc
loopne
in
add
and
and
or
inc
pop
ret
pusha
jl
adc
ret
push
inc
or
and
mov
sub
dec
xchg
and
cwtl
dec
gs
mov
add
bound
ja
cmp
and
loopne
in
imul
push
fbstp
and
call
jle
mov
pop
jmp
push
arpl
pop
mov
dec
inc
subb
cld
mov
dec
test
in
mov
mov
inc
scas
dec
fadd
mov
add
or
mov
mov
sti
cmp
and
cli
movsb
sbb
add
jl
mov
xor
xchg
loopne
stos
ret
cmp
je
fmul
push
push
dec
stos
ret
push
inc
fldl
mov
and
stc
and
test
pop
xor
cmp
cmp
and
inc
loopne
in
mov
inc
scas
or
cmp
sub
loopne
sub
loopne
test
pop
test
mov
and
inc
xor
pop
ret
leave
in
add
xchg
popl
lret
stos
outsl
fistpll
jne
and
in
mov
add
and
adc
ds
ret
out
ret
loopne
xor
gs
add
leave
mov
fistpll
and
loopne
xor
ret
sbb
mov
adc
add
sub
ds
mov
mov
test
in
xor
add
scas
inc
add
lcall
rcrl
imul
or
inc
jle
ds
lret
test
in
xor
sbb
add
scas
inc
sbb
add
pop
test
add
dec
mov
adc
mov
incb
loopne
or
insb
sub
add
cmp
and
adc
add
xchg
sbb
fistpll
enter
and
add
cmpsb
and
jnp,pt
xor
and
pop
enter
loopne
jnp
mov
cmp
inc
inc
loopne
js
push
cmp
mov
pop
add
loope
jle
ds
fcoms
and
fcmovne
mov
sub
pop
add
xchg
or
xchg
movsl
jnp
es
sub
xchg
mov
mov
imul
ds
adc
dec
inc
inc
loopne
and
sub
add
xchg
and
dec
dec
add
cmp
mov
popa
aas
pop
jmp
out
xor
and
insl
and
pop
ret
dec
dec
mov
mov
rol
sub
add
popf
fistpll
popl
sti
stos
fistpll
shrl
call
mov
mov
js
gs
add
xchg
jne
fists
adc
ds
ret
out
ret
loopne
xlat
lock
mov
stos
xchg
cmp
add
mov
loopne
push
lock
mov
and
loopne
sub
mov
add
stos
fidivrs
add
dec
adc
ds
mov
add
mov
pusha
cmp
add
scas
shrb
add
mov
lea
and
loopne
cld
push
fists
add
mov
inc
loopne
orb
push
mov
test
add
mov
negb
inc
loopne
add
mov
test
aas
icebp
jle
imul
and
fistpll
and
add
shr
insl
ret
sar
fistpll
and
add
cmp
leave
adc
ds
push
aaa
and
add
lret
aad
fdivrl
scas
mov
outsb
test
lea
push
add
lret
imul
ret
mov
fistpll
popl
xchg
and
sarb
and
jg
cmp
and
sarb
and
repz
adc
ds
mov
and
neg
push
mov
jns
cmp
and
fcmovnu
mov
add
inc
pop
ret
aas
pushf
or
xchg
mov
add
jl
fistpll
and
add
cmp
and
psrad
and
add
xchg
and
lock
and
adc
sub
loopne
mov
out
enter
ja
daa
add
popf
add
orb
mov
jg
jle
insb
mov
inc
call
jg
jle
fmuls
add
and
daa
in
xchg
mov
add
pusha
add
test
loopne
ss
cmp
mov
adc
imul
daa
in
mov
add
scas
or
lods
adc
add
xchg
mov
add
jl
imulb
inc
loopne
cltd
cmp
jns
ja
xchg
jl
mov
and
push
lret
sub
jl
pop
bound
ss
enter
push
and
pop
push
inc
scas
inc
push
aas
imul
lret
sub
pushf
call
aas
add
xor
ljmp
mov
add
int3
xchg
jnp
imul
and
and
in
jno
add
fwait
xor
leave
push
lret
xchg
call
inc
and
imul
inc
aas
jne
push
inc
or
push
imul
jb
inc
loopne
ss
dec
inc
and
and
add
cmp
and
jns
inc
add
enter
loopne
jmp
popa
cmp
dec
or
fwait
pop
adc
test
ss
and
adc
add
mov
adc
jne,pt
imulb
inc
loopne
adc
aas
icebp
jle
mov
leave
adc
call
push
imul
mov
loope
jle
js,pt
dec
inc
pop
ret
cmp
mov
or
enter
dec
fcmovne
imul
shlb
lret
imul
adc
mov
mov
mov
enter
dec
fcmovnb
imul
es
adc
scas
inc
in
stos
fistl
aad
inc
imul
lcall
jl
mov
loope
hlt
pop
mov
out
jecxz
imul
jecxz
adc
imul
call
ds
adc
cmp
movl
mov
cmp
cmpl
gs
scas
cmp
add
mov
mov
leave
push
or
cli
mov
cmp
xor
leave
lcall
leave
mov
ja
shll
push
ds
push
pop
mov
or
lcall
cld
add
mov
jp
add
cmpsb
cmp
mov
dec
filds
pusha
dec
lock
sbbl
mov
lret
xor
jb
xor
pop
imul
arpl
out
ret
loopne
scas
sbb
sbb
pop
imul
sbb
mov
lds
sub
lea
mov
mov
xchg
inc
push
sub
arpl
push
mov
test
setnp
lcall
in
mov
scas
pusha
add
loop
clc
out
js
sub
push
inc
pop
inc
movsl
les
ret
test
arpl
push
push
and
call
push
test
ret
aas
pushf
andb
push
lret
xor
inc
add
mov
pusha
jbe
ja
enter
lahf
mov
and
push
and
dec
sbbl
lcall
enter
mov
cmp
jecxz
adc
push
dec
dec
add
sbb
sti
pop
sbb
mov
sub
fs
fwait
cld
push
dec
or
jns
ja
jbe
ja
xchg
push
xor
sbb
sti
adc
mov
xor
mov
ret
in
repnz
mov
loope
jns
lock
jg
push
push
xor
call
mov
addr16
loope
imul
push
mov
imul
mov
rorb
mov
jmp
sub
mov
sub
xor
dec
pop
ret
adc
and
mov
mov
scas
sbb
pop
push
insb
movsl
std
cmp
xchg
or
hlt
out
mov
hlt
out
fistpl
addr16
dec
fcmovne
arpl
inc
out
jecxz
fcmovne
sbb
lcall
cmp
fwait
sarl
push
les
fwait
call
xor
lcall
mov
dec
call
js
js
jle
add
dec
lcall
inc
push
les
pop
gs
push
jno
and
mov
sub
add
inc
inc
loopne
enter
and
sbb
pop
jle
add
loop
inc
loopne
cld
imul
add
cmp
and
sbb
pop
jle
add
loop
inc
loopne
cld
cmpsb
cmpb
mov
mov
and
test
cmp
add
test
popa
adc
insw
sti
jg
loopne
jg
push
cmp
scas
inc
jmp
and
add
mov
add
fidivl
inc
loopne
in
out
in
les
and
add
fidivs
inc
loopne
sbb
jns
cmp
mov
ret
out
ret
loopne
xor
sub
inc
in
and
insl
sbbl
loopne
jmp
add
ds
or
push
imul
push
inc
loopne
jb
imul
scas
dec
call
jno
nop
pop
cs
fsubr
shlb
fildll
nop
add
cmp
loopne
nop
and
shl
ds
push
fbstp
and
xchg
es
mov
and
dec
arpl
cmp
push
inc
mov
int3
mov
add
cmp
pop
imul
cmp
ss
leave
push
imul
sbb
and
out
xor
dec
and
xchg
mov
and
pop
adc
out
xor
testl
and
pop
push
xor
inc
loopne
jmp
pop
dec
inc
and
imul
and
jne
mov
push
ss
insl
and
cmp
fwait
sbb
es
add
cmp
inc
xchg
fadd
imul
jbe
mov
ss
lock
jb
fbstp
mov
mov
call
push
sarl
test
loope
xor
divb
inc
loopne
jb
imul
xor
imul
jns
cmp
and
mov
mov
add
popl
fists
jbe
mov
and
call
adc
mov
es
aas
pushf
or
leave
imul
mov
bound
add
xor
xor
add
xchg
jnp
adc
ffreep
loopne
and
adc
cmp
and
loopne
shrl
cld
roll
ds
pop
insl
ret
addl
enter
loopne
jmp
add
cmp
and
inc
icebp
jle
push
fists
adc
ds
pushf
dec
add
mov
cmp
and
mov
pop
mov
cmp
and
add
cmp
jne
mov
in
fs
daa
add
leave
stos
outsl
fistpll
add
adc
daa
add
shl
fistpll
popa
adc
ds
or
inc
inc
loopne
and
arpl
test
loopne
sub
ja
fistpll
and
and
mov
cmp
ret
loopne
movsl
adc
lcall
cmp
loop
fistpll
lea
add
pop
fists
dec
aad
cltd
or
loopne
sub
ds
jmp
jle
in
fnstcw
and
pop
out
ret
pop
add
ds
inc
cmp
xchg
aas
lcall
xchg
and
sbbl
push
dec
lea
movsl
ds
push
push
push
test
inc
cmp
test
imul
and
adc
sub
cmpsb
shll
push
lcall
gs
lret
loopne
push
xor
inc
inc
loopne
daa
add
mov
add
sbb
add
cmp
jge
and
and
fdivrl
and
sbb
add
insl
adc
ds
in
cmp
jne
and
and
gs
lcall
xchg
and
insl
ret
xor
loopne
jbe
and
gs
adc
xchg
add
pop
fists
mov
cmp
pop
and
ds
gs
lcall
xchg
and
arpl
test
loopne
sub
loopne
push
sub
cmp
stos
jae
cmp
xor
fistpll
and
add
cmp
and
adc
ds
clc
sub
fistpll
stos
jae
cmp
xor
fistpll
and
adc
ds
lock
stos
paddusb
test
inc
cmp
lcall
leave
pop
aas
lock
js
cmpsb
or
add
cmp
movsl
rclb
add
mov
imul
add
cmp
and
loopne
lcall
cmp
in
and
jl,pt
mov
loop
fistpll
movl
adc
rolb
add
mov
xchg
cwtl
lcall
xchg
and
imul
pop
imul
out
loopne
and
add
cmp
pop
ret
cmp
loop
fistpll
lret
cmp
mov
insl
sti
es
cmp
sbb
push
pop
mov
loopne
and
add
mov
adc
jne,pt
negb
inc
loopne
add
mov
loopne
and
aas
icebp
jle
pop
insl
ret
and
pop
xor
repz
fistpll
sbb
inc
imul
lret
fiaddl
fistpll
cmp
add
cmp
cmp
sbb
jne,pt
imulb
stos
add
cmp
daa
add
mov
and
int3
mov
jle
insl
loopne
daa
add
mov
in
out
and
in
dec
add
es
add
cmp
and
sbb
dec
add
sub
test
cmp
insl
pop
xchg
pop
ret
insl
sti
push
fistpll
and
imul
aaa
and
loopne
roll
loopne
fsubp
loop
and
ret
insl
sti
lcall
mov
iret
jmp
daa
and
push
fbstp
sbb
ds
pop
fs
jle
xor
add
es
fistpll
sbb
add
es
cmp
std
add
js,pt
loopne
and
fistpll
and
test
add
cmp
and
inc
loopne
stos
sti
fnstsw
add
cmp
and
add
outsb
ss
loopne
in
push
test
imul
mov
fdivrs
and
inc
loopne
or
cli
mov
inc
es
mov
and
shll
ss
imul
add
cmpsb
mov
jmp
sub
pop
fists
lea
jle
imul
xor
jge
fistpll
and
nop
gs
loopne
and
add
cmpsb
test
mov
add
jne
sbb
popa
adc
ds
clc
lret
stos
mov
push
ss
mov
stos
sti
fstpt
loope
fistpll
push
dec
sahf
inc
inc
loopne
stos
mov
cmp
push
add
mov
insl
ret
loope
fistpll
or
das
and
ret
fistpll
and
jmp
sub
or
pop
insl
ret
sbb
push
enter
loopne
mov
fdivrs
and
xorb
stos
sti
fnstsw
add
mov
push
fists
adc
ds
ret
push
xchg
mov
fdivrs
and
mov
fists
mov
imul
dec
aas
jl
gs
add
xchg
jne
dec
or
jmp
adc
add
mov
pushf
xor
inc
loopne
and
aaa
xchg
mov
push
cs
dec
lods
cmp
pop
stc
sbb
fwait
fists
adc
jnp,pt
pop
cs
sbb
dec
add
jge
ds
call
out
popa
sub
add
aaa
test
ss
sti
push
add
cmp
and
scas
inc
jmp
mov
aad
and
add
cmp
lods
pusha
faddp
addb
fwait
and
enter
loopne
sub
ds
fdivrs
add
push
ss
loopne
and
cld
dec
add
sbb
loopne
jl
enter
loopne
pop
dec
icebp
jle
pop
gs
jle
push
lret
stos
neg
cmp
add
loopne
jne
gs
loopne
or
pop
xor
sub
and
idivb
loopne
stos
sti
fidivrs
add
loopne
jne
mov
in
in
imul
lret
stos
sti
fidivrs
add
es
loopne
cmp
stos
ret
push
inc
jmp
fistpll
pop
pusha
fnsave
fwait
or
in
es
lret
xchg
adc
jecxz,pt
jmp
and
fcmovnu
cmp
fwait
or
es
fistpll
addb
inc
jl
add
and
add
jl
ljmp
add
jl
xchg
ds
bound
cltd
out
jp
int3
jbe
insl
sbbl
idivl
jmp
push
and
insl
loopne
faddl
ds
add
mov
repnz
fistpll
lea
add
pop
enter
loopne
jne
scas
push
and
out
in
xchg
lea
adc
jmp
push
and
repz
loopne
or
push
enter
loopne
and
sbb
add
es
fstp
cmp
sub
and
or
xchg
cmp
lock
xchg
es
and
push
int
and
and
fdivrl
and
pop
imul
add
es
ret
fistpll
or
mov
popa
add
es
fistpll
add
adc
dec
jnp
fdivl
add
bound
add
mov
cmp
mov
popa
sub
add
js,pt
aaa
test
ss
sti
jbe
loopne
scas
mov
push
adc
mov
push
fbstp
sbb
ds
aaa
mov
fwait
adc
scas
adc
mov
mov
movsb
rcrb
mov
mov
push
push
adc
js,pt
insl
cmp
loope
and
or
add
std
mov
push
imul
repz
ds
or
ds
xor
cmp
cmp
scas
dec
fdivl
cmp
jle
nop
mov
loopne
xor
adc
cmp
cmp
repz
cmc
adc
ds
imul
jecxz
inc
and
sbb
dec
add
mov
pop
enter
loopne
adc
arpl
and
or
push
cmp
ds
fdivrl
and
adc
test
pop
call
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
add
add
cwtl
adc
add
add
add
add
add
jle
add
add
xchg
jl
add
add
sarb
cmp
add
push
jl
add
add
add
add
lods
jge
add
adc
add
jge
add
test
add
add
add
add
push
test
add
test
add
test
add
add
jp
add
mov
add
mov
add
movb
add
addl
push
test
add
add
add
add
add
add
jg
add
add
dec
jg
add
add
jo
add
xchg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
add
adc
add
addb
inc
addb
push
addb
data16
je
add
xchg
add
mov
add
movb
add
addb
adc
add
xor
add
push
addl
add
jle
add
add
jle
add
mov
add
mov
add
rolb
add
addl
add
add
sbb
add
sub
add
dec
addb
pop
addb
outsb
addb
jl
add
mov
add
movsb
addb
fdivrs
add
jle
add
add
mov
add
jle
add
add
push
jle
add
add
cmp
add
add
incb
add
jo
add
addb
adc
add
add
add
addl
fadds
add
addl
in
add
push
addl
clc
addb
add
add
mov
test
add
add
add
add
or
add
add
add
push
push
dec
inc
dec
xor
cs
insb
add
dec
inc
gs
gs
dec
gs
add
push
dec
dec
push
inc
push
dec
cs
insb
add
add
jb
insl
jo
inc
add
inc
gs
jb
arpl
jae
gs
jo
add
jo
jb
add
add
insb
jae
jb
jo
inc
add
sbb
inc
gs
popa
jae
inc
jb
outsl
jb
add
jo
gs
insb
insb
outsl
arpl
or
insb
jae
jb
outsb
inc
add
cltd
add
popa
jo
insb
insb
outsl
arpl
testl
jne
jb
outsb
je
jb
arpl
jae
cmc
add
je
jne
inc
bound
push
je
imul
add
je
jne
jb
outsb
je
jb
arpl
jae
add
inc
gs
outsl
fs
gs
imul
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
stc
add
jb
popa
je
add
in
push
jb
je
push
jb
jbe
je
push
jb
imul
imul
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
dec
popa
insl
gs
add
add
je
jb
arpl
fs
jae
add
ret
outsl
popa
fs
imul
add
or
inc
imul
bound
gs
add
xchg
add
gs
mov
push
outsb
insl
popa
jo
imul
insb
add
inc
gs
gs
inc
imul
imul
cld
add
jb
insl
jo
add
mov
inc
jb
gs
imul
add
jb
jo
outsb
inc
add
inc
gs
imul
je
add
add
je
jne
jb
outsb
je
push
dec
add
sbb
inc
insb
outsl
jae
dec
popa
outsb
fs
add
add
insb
jae
inc
jbe
outsb
je
add
add
outsb
inc
jbe
outsb
je
add
xlat
add
jo
imul
insb
gs
js
xor
popa
je
inc
imul
outsb
addr16
add
mov
je
popa
insb
inc
insb
insb
outsl
arpl
add
je
popa
insb
inc
jb
gs
add
jb
jne
insb
push
jb
je
arpl
addl
gs
push
inc
outsl
outsb
je
js
add
stos
add
jne
push
jb
arpl
outsb
inc
popa
arpl
add
add
jb
jne
insb
push
jb
je
arpl
add
add
je
push
inc
outsl
outsb
je
js
add
or
inc
gs
js
je
outsl
fs
push
add
push
gs
insl
gs
push
add
arpl
inc
jne
insb
imul
outsb
fs
gs
add
outsb
push
jb
arpl
jae
inc
add
gs
je
push
jb
arpl
jae
add
jno
push
gs
popa
jae
inc
jb
outsl
jb
add
inc
gs
gs
imul
mov
je
popa
insb
inc
insb
insb
outsl
arpl
add
mov
dec
jae
popa
fs
gs
fs
je
add
call
outsb
inc
imul
jb
popa
je
inc
jbe
outsb
je
add
into
add
imul
insb
gs
bound
arpl
add
je
imul
adc
inc
gs
imul
xor
inc
jb
popa
je
inc
imul
gs
jns
je
insl
inc
imul
jns
add
inc
gs
gs
jo
popa
je
inc
add
jge
inc
gs
imul
imul
jns
add
dec
add
gs
je
push
push
add
sub
inc
outsl
jo
inc
imul
gs
gs
jo
imul
add
adc
inc
gs
imul
add
jo
imul
insb
add
add
insl
outsl
jbe
inc
imul
jns
add
jge
inc
js
je
jb
arpl
jae
add
je
jbe
outsb
je
add
inc
js
je
push
add
sub
push
gs
je
jbe
outsb
je
add
add
imul
insb
gs
bound
arpl
add
push
dec
inc
dec
xor
cs
insb
add
scas
add
jae
jb
outsb
je
inc
add
lods
add
jo
imul
add
je
gs
je
jo
imul
mov
jae
addr16
outsl
js
add
jo
je
push
popa
addr16
add
addb
jb
outsb
jae
popa
je
dec
gs
popa
add
sub
inc
gs
gs
popa
addr16
add
inc
push
xor
cs
insb
add
add
addr16
outsb
jne
dec
gs
js
add
push
gs
insb
outsl
jae
dec
gs
jnp
push
gs
jne
jb
push
popa
insb
jne
inc
js
add
jb
push
gs
jo
outsb
dec
gs
js
add
push
gs
jne
jb
dec
outsb
outsw
dec
gs
add
xchg
push
gs
gs
popa
insb
jne
inc
js
add
rolb
inc
gs
outsl
imul
outsb
outsw
jb
popa
je
outsl
outsb
add
dec
jo
outsb
push
jb
arpl
jae
outsl
imul
add
add
push
jae
push
outsl
imul
jb
jbe
insb
gs
movsl
add
je
arpl
imul
imul
arpl
add
imul
push
arpl
imul
imul
push
push
gs
outsb
jne
push
popa
insb
jne
inc
add
push
gs
jb
popa
je
dec
gs
js
add
gs
gs
gs
push
popa
insb
jne
inc
add
push
inc
push
dec
xor
cs
insb
add
jb
push
push
js
arpl
gs
add
dec
inc
gs
jo
arpl
insb
inc
outsl
insb
fs
popa
je
inc
add
inc
dec
dec
xor
cs
insb
add
fs
insb
outsl
jae
push
jb
inc
popa
arpl
add
add
outsb
fs
gs
push
jb
inc
popa
arpl
inc
outsb
je
jns
add
adc
inc
imul
je
jb
inc
popa
arpl
inc
outsb
je
jns
add
dec
dec
dec
inc
push
cs
insb
add
add
cwtl
inc
add
add
inc
test
add
add
add
add
add
add
add
test
add
add
cld
js
add
xor
add
add
pop
test
add
add
add
add
add
bound
pop
outsl
ja
cs
add
jb
xor
pop
jae
pop
pop
ja
xor
test
not
neg
neg
js
or
call
pop
jo
jmp
push
pop
jns
ja
lea
xchg
neg
push
pop
btr
lea
mov
and
neg
cmp
test
lea
mov
test
xchg
dec
mov
push
pop
cmp
bsf
mov
xchg
not
xor
call
pop
push
pop
rol
call
pop
mov
mov
not
js
ja
call
pop
mov
lea
jno
cmp
xchg
shl
neg
jmp
call
pop
jmp
bsr
mov
cmp
jne
xor
xchg
neg
cmp
dec
lea
call
pop
mov
xor
cmp
call
pop
btc
shr
mov
cmp
pushf
push
pop
xor
call
pop
mov
inc
dec
dec
sub
nop
push
xor
mov
test
add
clc
push
stc
cld
add
not
movsbl
dec
jmp
ret
bt
inc
inc
pop
cmc
shrd
push
xor
inc
add
neg
dec
mov
cmp
clc
add
xor
mov
cmp
jmp
repz
inc
add
add
sub
inc
inc
inc
test
add
xor
dec
dec
cmp
jb
jns
sub
xor
repnz
xor
cmc
dec
push
pop
add
cmp
dec
dec
popf
jmp
