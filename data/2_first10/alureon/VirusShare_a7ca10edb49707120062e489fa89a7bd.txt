push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
push
mov
sub
mov
push
push
push
push
mov
movl
call
andl
movl
mov
movl
mov
mov
movl
mov
mov
mov
mov
mov
imul
xor
add
incl
mov
push
push
mov
call
mov
mov
mov
mov
mov
xor
mov
div
mov
mov
mov
mov
sub
not
add
xor
mov
mov
incl
add
cmpl
jb
cmpl
je
mov
mov
jmp
push
call
mov
mov
mov
xor
push
push
push
push
call
movl
mov
push
shl
push
add
incl
push
push
call
mov
mov
test
je
push
call
mov
push
push
call
mov
call
add
cmpl
je
cmpl
jne
lea
push
push
pop
add
xor
div
push
pushl
push
call
mov
push
push
push
push
call
lea
mov
lea
add
lea
add
mov
mov
mov
mov
and
call
mov
mov
mov
call
mov
mov
push
push
mov
xor
push
push
mov
mov
call
mov
lea
push
push
push
lea
push
pushl
movb
pushl
movb
push
call
push
push
push
call
mov
call
mov
call
test
je
pushl
mov
pushl
pushl
pushl
call
cmpl
mov
jne
push
call
test
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
mov
push
mov
sub
mov
push
mov
push
push
lea
mov
call
lea
xor
call
test
je
test
je
cmpb
je
mov
push
call
mov
push
mov
call
mov
lea
push
call
mov
test
je
push
push
push
push
call
add
push
call
test
je
push
push
push
call
mov
test
jge
push
push
push
call
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
call
mov
mov
pop
pop
pop
call
leave
ret
push
mov
push
push
mov
imul
push
mov
cmp
jb
mov
push
call
mov
add
imul
push
xor
pop
div
mov
mov
mov
mov
sub
mov
test
je
mov
sub
push
mov
call
xor
divl
mov
add
cmp
jae
mov
mov
imul
xor
divl
xor
mov
sub
imul
div
mov
cmp
jae
mov
sub
push
pushl
pushl
call
add
add
add
add
cmpl
jne
pop
pop
pop
leave
ret
mov
mov
ret
push
mov
sub
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
jne
inc
jmp
andl
push
push
lea
lea
cmpl
mov
je
mov
jmp
mov
mov
add
xor
nop
movb
mov
mov
inc
cmp
jb
mov
test
je
lea
movsbw
mov
add
inc
mov
test
jne
lea
push
call
mov
test
je
mov
add
andl
cmpl
je
mov
mov
mov
test
jns
and
jmp
add
add
push
pushl
call
mov
test
je
incl
mov
lea
cmpl
jne
mov
incl
mov
imul
add
lea
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
push
mov
testl
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
pop
ret
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
test
je
andl
mov
sub
add
mov
mov
mov
lea
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
cmpl
mov
je
or
sub
mov
mov
sub
add
mov
mov
mov
lea
push
push
push
call
mov
mov
mov
sub
add
mov
movzwl
add
lea
movzwl
lea
mov
mov
mov
andl
xor
cmp
jae
lea
mov
mov
addl
push
lea
pop
rep
mov
add
movzwl
add
incl
cmp
jb
mov
mov
add
pop
mov
xor
pop
inc
pop
leave
ret
mov
push
mov
push
mov
xor
mov
test
movl
je
push
call
pushl
call
mov
xor
inc
pop
pop
ret
mov
mov
mov
mov
rol
imul
add
mov
mov
mov
ret
push
lea
sub
mov
push
push
push
push
push
push
mov
call
push
push
call
test
je
push
xor
push
call
push
mov
call
mov
cmp
je
lea
push
push
call
mov
mov
mov
mov
push
push
mov
call
cmp
jne
movl
push
push
call
push
push
mov
call
xor
cmp
setl
mov
mov
cmp
mov
je
mov
cltd
sub
sar
mov
push
push
call
mov
neg
sbb
and
add
push
mov
call
push
mov
call
movzwl
push
call
pop
pop
push
push
push
call
push
push
push
call
push
push
lea
push
call
lea
push
call
mov
mov
mov
movzwl
xor
jmp
cmp
jne
cmpw
je
inc
inc
mov
cmp
jne
jmp
xor
inc
lea
push
movl
movl
call
mov
push
pushl
call
push
push
push
push
push
pushl
mov
call
cmp
mov
mov
jne
xor
push
pop
lea
rep
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
movl
movl
movl
mov
movl
movl
call
test
je
mov
push
mov
imul
cltd
pop
idiv
push
push
mov
mov
add
mov
lea
mov
mov
shl
mov
lea
push
call
mov
mov
sub
sub
mov
cmp
mov
mov
jle
mov
push
pushl
neg
push
push
pushl
sbb
push
push
push
and
add
push
push
push
push
call
cmp
mov
je
lea
push
call
push
push
push
pushl
call
test
jne
call
xor
jmp
call
pushl
call
pushl
pushl
call
pushl
call
push
pushl
call
mov
xor
cmp
sete
push
call
cmp
je
call
cmpl
je
cmpl
je
push
push
push
pushl
call
xor
inc
pop
pop
pop
add
leave
ret
push
call
pop
ret
mov
push
mov
sub
mov
push
push
push
mov
mov
mov
push
mov
lea
push
pushl
pushl
call
lea
xor
test
je
push
push
push
call
add
test
je
push
add
push
call
inc
pop
add
cmp
pop
mov
jl
mov
mov
pop
pop
mov
pop
call
leave
ret
push
mov
mov
mov
mov
mov
mov
cmp
jb
push
push
mov
mov
mov
lea
xor
test
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
mov
mov
lea
ror
lea
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
mov
inc
cmp
jb
pop
pop
pop
ret
mov
push
mov
xor
cmp
jne
mov
jmp
mov
push
mov
mov
test
je
mov
inc
inc
decl
jne
cmpl
pop
jne
dec
mov
movb
pop
ret
jmp
mov
push
mov
push
mov
test
je
push
mov
test
je
andl
push
call
push
call
push
call
test
je
push
call
push
call
mov
push
call
push
call
pop
pop
pop
ret
jmp
push
mov
sub
mov
mov
mov
sub
mov
je
mov
test
je
push
mov
add
test
je
push
push
mov
sub
mov
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
addl
decl
jne
mov
test
jne
pop
pop
pop
xor
inc
leave
ret
push
mov
sub
push
push
mov
xor
cmp
je
mov
cmp
je
cmp
je
cmp
je
add
push
lea
push
push
call
mov
add
add
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
sub
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
mov
mov
lea
ror
mov
lea
add
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
cmp
jb
mov
mov
test
je
mov
sub
mov
mov
inc
dec
jne
pushl
mov
pushl
pushl
pushl
pushl
call
mov
mov
mov
call
mov
add
push
pushl
pushl
pushl
call
add
pop
jmp
xor
pop
pop
leave
ret
mov
push
xor
cmp
je
cmp
push
mov
je
push
call
jmp
push
push
push
pushl
call
push
push
push
pushl
call
push
push
push
pushl
call
pop
pop
ret
push
mov
sub
push
lea
push
push
movb
call
lea
push
call
add
cmpb
jne
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
mov
jmp
mov
leave
ret
add
cmpsb
inc
mov
jle
aad
push
or
xchg
addb
adc
xor
adc
inc
jne
iret
push
xor
aad
ret
aam
stos
sub
loopne
loope
imul
and
dec
pop
stos
or
leave
pop
sub
fists
popf
out
jne
cmp
fsubrp
fisttpl
enter
mov
jno
int3
ret
sti
negl
mov
lods
mov
jo
jg
cmp
lahf
insb
fdivrl
xchg
fabs
dec
dec
loop
pop
outsl
lcall
push
mov
add
notl
add
add
cmp
insb
jl
mov
cmp
movsb
pop
js
adc
mov
mov
cmp
adc
push
pop
mov
aam
into
in
cmp
xchg
pusha
pushl
andb
js
insl
test
sbb
inc
cmp
add
and
inc
mov
mov
sarb
js
jle
mov
subb
loope
jl
out
cmpsb
add
sbb
jmp
sahf
inc
sbb
idivl
lea
dec
arpl
mov
dec
adc
lock
inc
cltd
push
pop
stos
enter
cltd
pop
cltd
and
and
jbe
scas
in
sbbl
out
xor
je
push
fs
cld
fs
sbb
bound
sub
fs
mov
shl
ret
ja
out
int3
cmc
or
mov
add
and
mov
add
les
mov
sbb
into
lcall
cmpsl
outsb
in
mov
push
mov
clc
hlt
jmp
stos
stc
adc
imul
inc
mov
dec
or
mov
inc
bound
and
icebp
rorb
adc
xor
xor
cld
les
pusha
add
leave
lret
lret
mov
push
ss
mov
xlat
rolb
or
pushl
idivb
test
ljmp
jne
or
push
stos
lcall
mov
inc
mov
cmpsl
addr16
add
pop
in
shlb
arpl
jnp
ret
loopne
lea
mov
out
cmp
cmp
cs
mov
je
mov
scas
pop
mulb
sub
fwait
outsb
pop
in
in
sub
test
mov
xor
dec
sub
or
imul
and
cld
push
cmp
jbe
jo
das
sarl
push
test
dec
sub
pop
add
adc
mov
xchg
or
jmp
cwtl
cmp
or
or
imul
ret
jb
pop
pop
inc
xchg
mov
arpl
fisttpll
xor
xor
adc
add
inc
xchg
fs
ljmp
fs
xchg
pusha
pop
outsl
or
cmp
mov
out
into
into
push
jmp
pop
dec
mov
fldl
add
cmp
mov
pushf
fs
jns
ret
aad
outsb
adc
cmp
test
jb
xor
mov
xlat
jne
xor
or
mov
mov
mov
daa
cmp
sahf
add
inc
and
sar
pop
mov
repz
cmp
les
xor
mov
leave
and
mov
sub
cmpsb
mov
outsl
fwait
pop
outsb
mov
rcrb
cmp
fstl
push
jmp
ss
and
adc
shlb
shll
sub
pop
pop
int
test
push
aad
add
add
add
aam
lods
inc
sub
imul
xor
push
shlb
sub
mov
fildl
fidivl
xchg
clc
rcll
mov
ds
mov
pop
adc
pop
nop
call
loope
andb
jns
clc
movsl
test
cmp
cmc
and
mov
das
movsb
loop
dec
dec
pop
rcr
bound
lahf
lods
mov
mov
mov
add
nop
add
rol
inc
outsl
lret
push
dec
or
mov
jnp
cli
jnp
fmul
aam
out
mov
add
dec
orl
rorl
mov
or
inc
stos
sti
add
xor
mov
sahf
test
fmull
jo
stos
ret
xor
mov
add
adc
popa
jecxz
sub
cmpsl
mov
add
jle
ds
bound
ljmp
inc
sub
cmp
dec
dec
fcmovnbe
andl
push
test
xchg
xchg
lcall
outsl
imul
sub
js
int3
mov
jbe
sub
mov
push
repz
pushf
lds
push
lret
cmp
push
mov
in
jmp
mov
jecxz
imul
insl
push
fsubl
mov
add
xchg
add
js
rorb
int3
call
fcoms
movsb
cmpsl
mov
mov
jo
mov
sarb
cltd
mov
add
adcb
sbbl
fldl
and
push
adc
in
push
jne
pop
adc
pop
or
lock
fidivrl
jg
enter
cmp
negl
aaa
mov
jo
xlat
pop
lock
add
sub
negb
jae
push
jge
int
cmpb
jle
mov
cmp
out
adc
dec
or
jo
add
aaa
loope
jmp
push
sbb
sub
adc
lahf
jnp
pushf
cwtl
add
int3
dec
jge
int
mov
inc
pop
xorb
push
rclb
lods
loop
flds
pop
dec
mov
cmp
and
add
and
outsb
mov
test
in
lock
nop
cmp
cli
xorl
negb
sub
sbb
sbb
mov
dec
cmp
rorb
xlat
mov
add
push
sub
jb
sub
mov
mov
leave
mov
mov
es
ljmp
push
lods
jg
pop
mov
aas
das
outsl
pop
ret
mulb
cwtl
ret
mov
jnp
mov
sti
mov
add
clc
adc
pop
add
addb
jmp
adc
inc
cmc
inc
cmpsl
sub
adc
aaa
xchg
cmp
pop
ljmp
mov
insl
adc
jo
in
loop
cmp
inc
loopne
or
mov
and
div
test
adcb
popa
dec
inc
push
lods
mov
jecxz
cmpl
loope
lods
cmp
mov
pop
xchg
sub
movsb
in
and
add
pushl
popf
subl
leave
push
push
int
and
add
xchg
int
mov
sub
inc
pop
shrb
icebp
rol
add
xor
sub
cmc
push
sub
adc
push
popf
es
scas
lret
cmp
mov
push
xchg
adc
jns
sbb
movsl
xchg
xor
xchg
xchg
out
xor
cmp
mov
fiadds
add
cmp
lret
sbb
adc
cltd
daa
mov
pusha
xchg
sbb
das
cmp
cli
jp
sti
inc
jmp
mov
push
outsl
scas
lock
or
notb
cmp
mul
out
pop
push
push
pop
pushf
mov
sbbb
pop
and
adc
in
cltd
pushf
lods
repnz
fstpt
ret
int
and
cld
push
out
pop
arpl
jbe
mov
inc
and
lea
das
jne
add
repnz
inc
jmp
ja
jne
hlt
es
pop
jbe
and
fidivrs
sub
mov
push
xchg
in
push
adc
xlat
stos
test
js
rclb
test
mov
fisubrl
mov
movl
xor
sub
stos
cld
mov
lods
js
ret
xchg
cmp
adc
inc
xor
and
push
sub
jecxz
sbb
mov
ljmp
ret
repnz
cltd
mov
lcall
adc
jmp
lods
push
mov
shrb
ss
fldcw
mov
divb
adc
dec
jg
testb
outsb
movsl
push
fstps
cmp
popf
mov
jl
xor
ficomps
inc
jmp
in
cmp
add
bswap
mov
jmp
mov
aam
or
mov
dec
repz
roll
scas
xlat
bound
jnp
leave
push
lods
ffreep
sbb
in
push
movsb
cmp
xorl
icebp
push
sahf
ds
shlb
cmp
out
and
pop
ret
mov
loope
add
int
add
movb
adc
add
pop
push
sub
sbb
mov
out
mov
mov
jmp
dec
out
xchg
and
stos
loopne
sub
bound
xchg
scas
push
jne
into
and
adc
fisubrl
cmpl
mov
out
lds
aad
call
mov
or
adc
inc
lret
punpckhbw
fmull
sub
fcmovnbe
cmp
xchg
jo
addr16
mov
add
add
dec
popa
ficompl
sbb
int
scas
jnp
jmp
jbe
ds
lods
fisubl
adc
das
pop
or
inc
push
jae
adc
icebp
jecxz
lss
cld
sbb
xorb
mov
pusha
mov
scas
shrl
lds
xchg
loop
dec
xchg
repnz
or
dec
mov
push
push
jne
or
and
and
add
sti
jnp
xchg
movsl
xor
lds
int3
mov
out
repnz
add
leave
xchg
cmpl
mov
mov
fstl
mov
imul
add
or
push
scas
aas
sbb
or
je
mov
xchg
cli
daa
add
dec
orl
std
cmpsl
andb
sti
in
loop
sub
push
add
leave
lods
cltd
jmp
pop
hlt
mov
shlb
mov
cmp
xchg
and
push
and
call
out
cmp
push
push
push
aad
loopne
or
je
push
push
mov
jge
xlat
jbe
in
daa
cmc
cs
add
pop
int
inc
insb
cltd
dec
pop
sub
push
sub
repz
pop
and
imulb
stos
lds
outsl
pop
and
add
add
les
shrl
jmp
inc
jo
mov
gs
call
outsb
sbb
test
fcomps
je
lahf
cltd
pop
pop
test
movsl
sub
lret
jle
cltd
cmpsl
adc
arpl
xchg
aam
xchg
pop
test
mov
or
decl
lods
push
repnz
daa
cmp
lcall
sub
in
lret
ret
add
cmp
imul
add
sub
in
in
arpl
mov
sub
adc
pop
mov
or
fsts
lods
stc
int
add
jno
mov
mov
rolb
lret
add
or
xor
sarl
out
ss
dec
sarl
stc
pop
mov
xor
and
mov
cmpsb
stc
inc
cmpsl
jns
negb
sub
lahf
mov
rolb
add
push
push
dec
mov
lock
jo
xor
xchg
out
arpl
loope
xchg
mov
add
cmp
mov
dec
jns
or
add
je
into
repnz
jg
cmpsb
lock
cmp
ljmp
fmuls
jp
push
lahf
jl
pop
pop
add
lcall
jg
add
std
out
xchg
push
std
xchg
sti
mov
cmp
cmp
loopne
ret
lock
subb
cmp
in
ret
inc
inc
bound
xlat
popf
mov
xor
push
mov
cmpsl
test
dec
pop
add
or
cld
es
inc
pop
sbb
test
cmpsb
lcall
dec
xor
ja
and
ja
int3
and
xchg
out
jp
xchg
mov
testb
fidivrs
das
rorl
lock
imul
rcrl
sbb
push
add
add
les
xchg
loope
jae
jle
inc
inc
or
sbb
sbb
and
inc
and
in
or
pop
in
lahf
outsl
cmp
and
ficoml
inc
adc
lock
pop
or
pushf
and
adc
jns
adc
xchg
popf
or
sbb
xor
jne
rolb
mov
das
add
ret
sbb
int
and
not
cld
adc
and
jne
add
add
rorl
dec
xor
repnz
mov
stc
insb
lcall
lret
inc
out
fldt
xchg
push
adc
sub
and
rcl
orl
fs
cmp
dec
cmpsb
movsl
push
test
ja
inc
nop
inc
les
out
mov
xor
mov
out
rep
imul
sahf
adc
movsl
sbb
lret
std
cmpsl
scas
inc
inc
sbb
mov
adc
fcomip
popa
mov
mov
add
add
shll
xchg
cmc
xchg
and
test
jl
mov
dec
mov
cmp
cmp
sbbb
or
push
lds
mov
or
xor
std
inc
mov
das
mov
daa
addl
enter
pop
jl
mov
push
aam
stc
cmp
xlat
mov
subl
cmp
sub
lcall
adc
jb
out
pop
scas
inc
pop
clc
cmc
xchg
xor
add
leave
imul
sahf
popa
xchg
adc
push
iret
hlt
rcrb
jo
in
push
insb
xor
test
test
add
adc
pop
stc
int
ljmp
push
outsl
fmuls
adc
mov
sti
inc
push
in
lock
lret
shrl
les
imul
ret
rcrb
pushf
sbb
test
push
clc
sub
or
mov
jg
pop
mov
ds
push
rolb
cmpb
loop
ljmp
daa
mov
insb
mov
xchg
outsl
cli
stc
rcrl
popa
or
inc
mov
cltd
gs
mov
hlt
cmpsl
in
dec
aad
shll
mov
jb
es
mov
push
mov
or
jne
push
loopne
data16
push
shll
psrlw
mov
iret
icebp
jp
fsub
lcall
inc
mov
insb
mov
push
mov
cs
add
cltd
aaa
je
das
pop
push
sarl
pop
or
sub
ljmp
xchg
or
test
sub
and
xchg
mov
xchg
cld
incb
gs
idivl
adc
fucomp
jb
loopne,pn
loopne
nop
dec
scas
cmp
outsl
into
rcr
lods
mov
or
xlat
add
add
add
jecxz
inc
sub
das
repz
ss
mov
call
andl
scas
and
in
mov
add
mov
mov
and
dec
mov
pop
bnd
rol
push
sbb
imul
loope
addr16
loop
xor
sub
outsb
add
xchg
pop
push
rorl
loope
or
das
and
sub
add
clc
pop
loopne
xor
test
pop
aad
mov
push
sub
mov
push
push
gs
dec
inc
dec
ret
fwait
inc
mov
jns
push
mov
dec
mov
pop
es
fistpl
dec
rorl
or
xor
xchg
inc
data16
pop
arpl
inc
adc
shll
loop
xchg
sarb
jge
add
and
xor
enter
lret
xchg
mov
cwtl
loop
movsl
push
leave
add
pop
mov
add
lock
fcoml
xorl
int
and
stc
orb
ficoms
cmp
popa
stos
js
push
dec
gs
loope
pop
xchg
mov
push
and
jnp
fisttpll
lods
sbb
add
test
adc
add
lds
pop
mov
mov
push
fidivrl
jg
sarb
cltd
scas
or
jno
inc
das
mov
xchg
sti
push
mov
insl
cmpsb
mov
jge
pop
divb
mov
sbbl
int
xchg
ret
adcb
and
mov
jle
aas
movsl
das
adc
sbb
loopne
fnsave
test
push
mov
mov
cmp
imul
and
add
divl
loopne
or
std
cmp
pop
cmpps
add
lock
dec
test
ror
aaa
andb
arpl
cld
nop
push
xchg
fwait
add
inc
hlt
fwait
lods
scas
out
sub
shl
mov
sbb
jp
jne
cmpl
clc
fsubl
insb
fadd
or
arpl
scas
pop
icebp
mov
aam
fisubrl
enter
clc
cmp
test
or
fprem
push
int
jne
cmp
add
add
insl
loope
pusha
mov
adc
repnz
and
xor
mov
inc
in
clc
sahf
dec
stos
outsb
pop
test
addr16
loope
xor
xchg
pop
xchg
and
fwait
mov
pop
test
adc
clc
xor
imul
hlt
or
and
dec
push
dec
outsb
pop
leave
je
xor
add
xlat
and
xchg
xor
in
xchg
jb
pop
mov
icebp
xlat
sbb
loopne
lock
sbb
xchg
jmp
inc
or
daa
adc
push
xchg
or
fisubrl
add
or
aad
push
mov
mov
add
push
pusha
pop
ret
cwtl
xor
popf
inc
inc
xchg
sbb
push
std
aaa
movsl
lods
into
loopne
fwait
pusha
loopne
push
es
sub
popa
ja
pop
inc
push
push
out
jno
mov
add
xchg
push
test
dec
into
fdivr
outsb
jmp
jecxz
stos
arpl
addr16
ret
maxps
add
sub
stos
pop
mov
pop
cmpsl
inc
xor
cmp
inc
adc
das
jnp
test
push
mov
in
sub
jecxz,pt
test
ret
xorb
xor
sti
pop
lods
cs
loope
lahf
data16
adc
fst
mov
inc
movsl
fwait
idiv
in
add
xor
mov
jmp
dec
inc
push
dec
pop
sbb
movsl
and
inc
fists
leave
mov
mov
cmpsl
cltd
push
xchg
or
inc
cli
popa
lods
xchg
inc
mov
lock
push
sbb
out
pushf
pop
pop
dec
fs
xchg
shll
push
mov
int3
lock
or
sub
repz
sbb
pusha
scas
mov
add
lock
sub
mov
push
dec
mov
std
mov
mov
add
xor
stc
ucomiss
cmp
out
pop
ja
push
xchg
sti
arpl
cmp
aad
jle
sbb
push
fwait
es
cmpsb
dec
cld
push
popf
jp
jae
pop
movl
xchg
jnp
inc
loopne
push
jb
adc
mov
jne
mov
add
jmp
mov
mov
ljmp
faddp
roll
add
cmp
cmp
cmp
pusha
ss
outsb
xor
mov
push
in
xor
lods
inc
push
pop
jnp
bound
and
xor
sarb
pop
pushl
push
and
mov
dec
dec
mov
sbb
pop
jmp
roll
mov
cmp
stc
rcll
mov
std
rol
test
dec
cmp
fsubrs
jl
push
or
out
sbb
add
mov
jl
xchg
mov
inc
lret
xlat
xor
adc
xor
add
cmp
fstl
cmpb
je
pop
or
sbb
jle
mov
mov
adc
or
push
push
ds
aad
mov
aas
or
jecxz
inc
add
xchg
pop
idivb
jle
mov
mov
icebp
inc
or
sbb
insb
rcrb
add
add
inc
mov
cli
xlat
push
mov
jo
push
xlat
xchg
dec
mov
mov
push
ficoms
add
dec
and
sahf
push
sub
mov
mov
test
xchg
mov
push
sbbl
pop
and
sub
out
shrl
fisubs
jmp
loop
out
imul
xor
pop
in
mov
rolb
xchg
add
enter
call
test
fidivrs
adc
scas
fldcw
push
test
cmp
mov
pop
mov
lret
loope
push
test
bsr
js
lods
or
mov
fdivrl
xchg
add
and
mov
mov
sub
roll
push
fcmovu
sti
fisubs
xchg
enter
jo
pop
iret
aas
nop
sahf
sub
shlb
dec
push
jnp
vmwrite
pop
mov
sbb
loope
inc
dec
aas
mov
test
out
mov
mov
mov
mov
es
cmc
xlat
icebp
pop
jmp
mov
mov
pop
pop
jae
in
add
cmp
pop
enter
xchg
mov
push
mov
mov
std
jae
orl
call
stos
inc
insl
push
jecxz
mov
js
push
dec
push
sbb
pop
sbbl
lea
inc
add
fldt
repnz
jno
mov
or
js
sbb
and
pop
push
mov
dec
cmp
adc
rcr
push
dec
xchg
cli
shl
push
sub
add
orl
push
aas
adc
rcr
std
fidivl
sub
dec
sub
idivl
addb
cmpsl
das
loop
cltd
sbb
loope
stc
sub
mov
xchg
into
out
mov
insl
fs
mov
cmp
add
insb
in
ds
adc
sti
es
test
push
fwait
mov
imul
xchg
into
pop
xchg
cmp
inc
inc
jle
mov
repnz
daa
cli
stos
jno
shr
stc
push
notb
pop
jae
stos
scas
adc
mov
lahf
test
stc
loopne
incl
adc
mov
push
mov
in
subl
or
popa
ret
repz
cltd
mov
fistpl
popa
mov
ja
divl
pop
add
jae
cs
mov
mov
cmp
loope
xor
sub
adc
rorb
push
inc
inc
mov
mov
daa
lds
jo
adc
pop
scas
or
out
lahf
pop
adcb
arpl
fcompl
clc
movsl
ja
mov
pushf
popa
test
ret
sub
jp
mov
cmp
dec
repnz
xchg
insl
dec
xlat
xchg
xor
test
xchg
lea
sbb
mov
loope
add
ljmp
adc
orl
add
xchg
jno
xchg
push
movsl
imul
xchg
insl
cmc
negb
test
dec
dec
jecxz
adc
add
lahf
nop
test
out
adc
jg
test
dec
adc
gs
daa
outsl
xchg
pop
out
mov
xor
leave
mov
cmpsb
sub
sbb
ficomps
add
enter
and
rclb
cmp
cld
xorl
mov
gs
adc
mov
movsl
cmp
jae
movsl
adc
push
fsubr
inc
ljmp
pop
and
sbb
popa
sbb
xchg
mov
mov
lock
sbb
xor
into
outsl
pop
cmp
xchg
inc
pop
adc
out
mov
mov
add
out
pop
cltd
in
push
or
xor
add
sub
jmp
sti
mov
jge
xchg
mov
testb
repz
sti
mov
ja
xchg
cs
adc
js
shrb
into
mov
adc
outsl
lods
in
dec
xlat
fnstenv
notl
loope
jp
pop
pushf
or
cld
push
inc
or
add
aas
push
jb
mov
push
jecxz
mov
scas
add
dec
stc
xchg
cwtl
cmp
aam
pusha
pop
dec
and
inc
iret
xchg
hlt
mov
in
inc
iret
mov
and
fs
pusha
and
aam
and
sti
imul
adc
mov
jb
sbb
add
lret
icebp
mov
and
mov
adc
inc
in
push
xchg
jne
mov
sbb
arpl
ss
dec
hlt
add
addr16
xchg
ljmp
fdivs
mov
jnp
outsb
aad
mov
add
pop
mov
xchg
jae
div
add
pop
push
push
icebp
aad
jbe
iret
rolb
mov
adcl
ret
into
es
stos
fwait
mov
xor
mov
in
shl
adc
jmp
outsl
lret
mov
leave
shrb
xor
arpl
mov
cmp
je
mov
sub
push
jbe
dec
and
or
shl
adc
data16
adc
mov
mov
and
inc
ret
mov
sahf
add
push
test
fs
clc
push
in
popa
mov
cs
mov
popf
push
mov
cmp
stos
and
les
cmp
cwtl
es
pop
or
sub
mov
shrb
sub
int3
ss
and
out
insl
aas
stos
sbb
xchg
jbe
loop
jae
std
cmpsl
sub
stos
add
les
movsb
lods
sarl
xor
cld
test
inc
outsl
sub
fidivrl
pusha
adc
add
std
xchg
dec
xchg
push
xlat
jg
mov
mov
scas
mov
mov
pop
mov
loopne
push
xchg
imul
clc
inc
inc
lahf
daa
fcompl
adc
cmp
popa
cld
sbb
movsl
inc
int3
lods
add
inc
xchg
cmpsl
aam
jecxz
cmpsl
inc
xchg
sbb
and
pop
push
inc
popa
sub
movsl
push
repnz
push
data16
pop
jp
sbb
filds
adc
mov
icebp
mov
xchg
xor
cmpsl
add
push
jl
fstps
mov
xlat
adc
mov
int3
in
cli
sbb
out
pop
mov
dec
xchg
and
cmp
inc
add
xlat
dec
out
mov
cmp
int3
pop
dec
int3
movsb
mov
xchg
add
aaa
fmul
adc
mov
hlt
ljmp
xchg
rorb
xor
xor
adc
mov
sub
push
inc
mov
adc
cli
es
mov
sbb
cmp
jmp
mov
mov
mov
pop
xor
sbbl
sub
adc
adc
rcl
lea
cmp
mov
push
loop
adc
xchg
fsubrp
aas
sbb
jmp
mov
insl
lahf
lret
pop
insl
testl
ja
and
rclb
or
es
sub
out
xor
jl
ret
and
ja
xchg
mov
sub
cmp
out
xor
rcr
add
or
testb
adcb
push
fldpi
mov
adc
cmpsb
mov
dec
inc
push
push
ljmp
fists
pop
add
fdivr
fwait
jmp
push
add
sub
add
xchg
lea
mov
mov
mov
dec
arpl
leave
inc
jb
outsl
fldcw
fcoms
add
aad
mov
push
mov
dec
aam
cwtl
push
mov
pop
mov
lods
add
jbe
pop
sub
leave
jne
bound
insl
xchg
ds
or
push
in
mov
add
add
test
sub
in
fldl
sbb
fldt
add
fsubrl
cmp
cwtl
ror
movsb
cmp
stos
jb
dec
mov
adc
jge
or
mov
and
stc
inc
xchg
push
outsl
ret
cmp
lods
gs
cmp
mov
mov
xchg
int
push
fmull
push
outsb
hlt
and
mov
fiaddl
add
cwtl
jo,pt
lea
mov
out
jnp
loopne
addr16
imul
sahf
cmp
call
outsb
xchg
mov
out
cld
fdivr
dec
and
roll
sub
out
out
jmp
sub
rcll
dec
mov
popf
popl
mov
ja
sbb
scas
test
test
sub
fcoms
sub
mov
add
jl
mov
mov
cld
inc
mov
adc
jl
jg
cmp
add
pop
cmpsl
sub
pusha
pop
fmuls
not
sbb
sbb
mov
mov
js,pn
scas
jnp
and
js
dec
mov
mov
push
push
pop
and
and
imul
sbb
inc
iret
pusha
cli
add
cmp
dec
jo
xchg
je
push
shl
cltd
add
cmpsb
aad
push
outsl
add
add
add
jmp
or
int
sub
mov
cltd
mov
mov
adcl
mov
xchg
jg
mul
inc
dec
lcall
xchg
add
and
out
lods
aas
lret
dec
imul
and
lock
pop
adc
test
out
or
loopne
jmp
xlat
int
add
lods
ja
test
scas
pop
xchg
xor
adc
add
add
add
pushf
lock
xchg
aaa
jno
ror
xor
xchg
sub
mov
cmp
shrb
xchg
aas
dec
cltd
and
insb
inc
push
sub
and
subb
sbb
sub
jno
xchg
xchg
out
shrl
scas
mov
pop
inc
xor
lahf
arpl
aas
mov
dec
jb
xchg
cwtl
dec
popf
fstl
sub
cmp
out
lock
mov
mov
jbe
mov
jl
ret
mov
jbe
add
loop
adcl
cs
shlb
or
jl
fstps
pop
stc
push
cmp
stc
xchg
repz
lahf
ret
enter
repnz
push
xchg
test
scas
addb
sbb
adc
aaa
xchg
rorb
sub
