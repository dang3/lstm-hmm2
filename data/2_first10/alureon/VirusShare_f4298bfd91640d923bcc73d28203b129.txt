adc
movsl
imul
popa
imul
pop
cmp
push
aam
sub
call
leave
loopne
inc
ds
adc
push
push
sub
popa
rcl
lds
scas
test
sbb
fisttpll
aad
add
sti
inc
cld
inc
add
xor
aam
stc
and
ss
adc
mov
pop
roll
xchg
repz
or
pop
in
or
jnp
lods
imul
dec
dec
rcr
mov
adc
outsb
pushf
or
cmp
sub
in
pop
mov
sub
mov
xor
out
inc
out
js
scas
xor
xor
xlat
int
jge
ss
movsl
mulb
aam
sti
xor
test
in
scas
fs
sbb
sbb
roll
xchg
sarl
mov
fadd
insl
cmpl
jae
xor
mov
or
and
je
fs
jbe
lock
cs
dec
mov
mov
sbb
pop
jg
je
sub
mov
pop
push
or
lret
movsb
lret
jmp
gs
push
in
out
imul
adc
je
xchg
pop
cmc
jle
sub
decl
or
mov
xchg
ljmp
push
pop
push
pop
push
xchg
jbe
repz
mov
and
iret
iret
lods
leave
inc
dec
pop
movsb
ret
mov
mov
mov
leave
notl
fsubrs
pop
adc
push
divb
test
sub
rol
adc
fnstsw
test
in
sti
nop
leave
rclb
jge
sahf
and
mov
aas
out
push
sub
push
adc
push
jne
mov
icebp
mov
jns
cwtl
mov
and
adc
cmp
push
mov
xor
xchg
sbb
data16
xchg
sbb
jl
shrb
pop
imul
sbbl
xchg
popa
mov
cltd
xchg
cwtl
cltd
mov
sbb
sub
push
daa
mov
daa
jnp
in
rclb
fisubrs
inc
mov
push
shll
pop
out
decb
mov
inc
and
sub
jno
lods
mov
in
repz
lock
mov
xor
cmp
scas
mov
xlat
mov
jns
xor
sbb
lea
jnp
loope
ss
xor
je
push
nop
pop
jne
pop
sub
push
push
daa
push
or
ljmp
fidivl
rcrb
orl
dec
insb
jne
xchg
sub
aad
popa
out
dec
les
add
ds
cmp
mov
jbe
ret
pop
mov
xchg
jnp
adc
mov
push
adc
out
xchg
inc
int
fldcw
cs
das
rorl
loop
loop
and
ds
repz
icebp
push
xor
push
adc
cmpsb
and
sub
shrl
adc
fildl
mov
icebp
loopne
rcl
jecxz
jne
pusha
lahf
fwait
leave
testl
mov
shr
sbb
cmp
jmp
xor
jne
mov
lock
call
pop
xchg
jecxz
pushf
js
sbb
jle
js
or
or
jl
mov
iret
ljmp
rolb
add
movsb
insl
push
es
mov
movsl
test
add
push
sbb
test
int3
lar
jne
imul
ss
mov
inc
mov
xchg
movsb
scas
xor
sahf
xlat
dec
and
jae
jb,pt
sbb
xor
int
addb
sub
jbe
movsl
push
xchg
fsubl
stos
add
add
jge
faddl
ds
test
dec
add
icebp
subb
mov
sti
cmp
add
push
outsl
xor
jge
jge
jnp
loopne
in
pushl
mov
add
mov
pop
loop
push
popa
push
fwait
sub
int3
into
xchg
mov
shll
hlt
ss
lret
outsb
adc
jae
std
outsb
repnz
fildll
data16
pop
in
cmp
add
into
push
cmp
out
imul
adc
lret
repnz
in
push
pushf
jb
push
xchg
cmpsb
push
dec
fwait
push
dec
bound
pushf
and
pop
sbb
daa
imul
xchg
pushw
or
mov
sbb
xchg
push
icebp
jge
movsl
dec
push
xlat
testb
int
add
sub
std
lret
xchg
sbb
add
inc
into
push
add
xchg
xchg
xchg
cltd
pushf
movsb
test
adc
and
movsb
imul
mov
xorl
ret
mov
repz
and
jge
scas
mov
sbbl
cli
or
rorl
push
mov
inc
adcb
pop
pop
outsb
orl
es
dec
jecxz
aad
sub
and
subl
dec
mov
enter
xlat
out
sti
jne
jbe
jmp
ret
inc
cmp
xchg
ror
pop
mov
or
jmp
int
inc
scas
push
jbe
cwtl
dec
and
sti
test
stos
mov
xchg
adc
imul
mov
mov
xchg
or
dec
xchg
and
sub
jl
dec
inc
cmp
ret
int3
loopne
lret
stos
push
pop
and
icebp
popa
repnz
mov
bound
fwait
cli
and
xchg
ss
sbbb
fsubp
pop
cld
sti
push
out
lcall
in
xchg
ds
sahf
add
dec
test
add
xor
insb
fdivrs
les
lret
es
sbb
sub
mov
inc
xchg
fistl
sub
ret
test
sbb
cmpsl
sub
lcall
shrb
cmc
movl
fxch
xchg
dec
enter
ret
xor
add
imul
push
or
xchg
inc
iret
stc
test
test
lcall
push
scas
sub
or
stc
xorl
xlat
push
adc
mov
jl
mov
cld
or
stos
popa
sbb
jecxz
push
mov
in
pop
cmp
out
mov
cmpsb
je
movsb
pop
cmp
lock
push
adc
mov
int
mov
jne
int3
nop
xor
rcrl
sbb
add
jno
sbb
cmpsl
jns
sbb
jp
xchg
add
add
adc
xchg
mov
mov
jecxz
xchg
mov
sbb
sti
bound
push
stos
imul
push
jl
stc
roll
xchg
test
xchg
out
push
mov
mov
mov
pop
aad
test
addr16
cld
test
jb
lcall
mov
xchg
pop
ljmp
xor
inc
pop
mov
rorb
daa
or
push
emms
jp
data16
pop
roll
inc
and
bswap
dec
out
jo
dec
lcall
lods
pop
andl
call
aas
jne
xchg
negl
inc
ljmp
ds
xchg
popf
inc
inc
dec
sub
xor
pop
sahf
fsubs
inc
xor
mov
or
lods
lcall
sub
les
mov
ret
pop
cmp
call
fdivrl
negb
aam
out
mov
addr16
add
push
std
outsl
jecxz
ljmp
pop
jo
fnstenv
cmc
jo
scas
or
hlt
push
sub
mov
repz
inc
cld
or
loop
sbb
enter
mov
js,pt
xor
jne
fcompl
test
jno
call
and
and
inc
lods
cmp
nop
mov
push
pop
pop
loope
dec
aas
adc
adc
mov
inc
mov
mov
sbb
push
sbbb
enter
push
sahf
xor
cmp
fstps
call
dec
inc
cmp
cld
cs
mov
mov
imul
xchg
adc
add
inc
add
mov
push
mul
test
int
xchg
add
fcomp
stos
sub
rcll
loop
mov
lea
add
mov
push
pop
lcall
fsubrs
sub
push
add
dec
jbe
mov
push
mov
mov
add
call
add
lea
call
mov
push
dec
call
imul
lea
imul
lea
dec
mov
call
imul
add
lea
and
and
inc
dec
add
mov
imul
dec
call
mov
add
inc
sub
inc
call
mov
inc
call
inc
dec
lea
mov
add
inc
lea
mov
add
pop
mov
lea
xor
add
add
pop
or
dec
pop
lea
inc
and
dec
pop
sub
lea
sub
xor
dec
dec
lea
dec
pop
add
inc
pop
add
add
mov
mov
inc
call
mov
dec
mov
movzwl
ret
add
mov
push
mov
dec
push
and
dec
push
add
inc
push
dec
add
push
movzbl
inc
mov
and
add
push
dec
ret
push
sub
add
add
inc
dec
mov
push
inc
lea
inc
call
pop
ret
jmp
inc
and
xor
or
movzbl
sub
dec
xchg
sub
inc
lea
mov
xor
sub
lea
movsbl
dec
inc
mov
dec
dec
jne
mov
mov
mov
lea
pop
lea
dec
pop
and
add
pop
xor
mov
mov
dec
imul
mov
sub
lea
and
sub
inc
add
ret
push
push
movsbl
mov
push
inc
mov
lea
inc
mov
xor
push
inc
dec
sub
dec
push
or
dec
xor
dec
imul
add
lea
push
mov
mov
inc
push
lea
mov
xor
dec
sub
push
inc
or
push
inc
dec
pushl
add
call
sub
add
inc
inc
dec
dec
dec
imul
or
pop
ret
lea
cmp
jb
lea
xor
dec
xor
mov
sub
dec
mov
inc
inc
dec
dec
inc
sub
inc
mov
cmp
jb
sub
pop
sub
mov
inc
inc
inc
sub
lea
sub
inc
inc
inc
lea
xor
mov
xor
dec
and
mov
lea
inc
test
jbe
dec
or
mov
sub
xor
inc
mov
dec
dec
imul
dec
and
or
mov
mov
lea
dec
movzbl
dec
xor
add
dec
lea
and
inc
inc
mov
add
mov
mov
dec
or
mov
movswl
inc
mov
add
dec
dec
sub
movswl
dec
jne
inc
mov
add
dec
sub
lea
sub
add
dec
dec
dec
add
mov
movswl
movzbl
dec
dec
dec
inc
mov
lea
mov
movsbl
dec
test
jbe
xor
mov
dec
dec
xor
dec
and
dec
sub
mov
mov
xor
inc
or
sub
inc
lea
sub
sub
inc
inc
sub
and
mov
mov
mov
mov
dec
movzbl
and
inc
add
lea
mov
and
xor
dec
mov
lea
inc
movzbl
or
lea
mov
or
dec
mov
mov
mov
movzbl
lea
inc
add
inc
jmp
push
dec
inc
mov
mov
mov
mov
dec
mov
lea
lea
inc
dec
movsbl
add
inc
and
xor
mov
sub
mov
imul
mov
sub
lea
xor
dec
or
add
sub
add
inc
lea
add
dec
dec
inc
add
or
movzwl
cmp
je
inc
inc
inc
push
inc
call
call
mov
lea
call
call
mov
add
mov
dec
mov
mov
xor
ret
mov
mov
pop
add
ret
push
movzwl
add
mov
mov
inc
push
lea
inc
push
lea
push
inc
push
xor
dec
mov
add
lea
call
dec
push
movzbl
mov
xor
imul
sub
mov
neg
sub
mov
lea
add
imul
imul
mov
mov
mov
mov
or
movsbl
inc
inc
mov
dec
je
imul
movsbl
add
mov
mov
dec
mov
or
movzwl
inc
mov
repnz
mov
mov
add
inc
jmp
xor
mov
imul
inc
inc
dec
mov
dec
jmp
inc
inc
dec
lea
mov
inc
movswl
mov
pop
pop
ret
push
inc
dec
lea
inc
inc
lea
dec
inc
or
add
lea
mov
mov
add
lea
or
lea
lea
inc
mov
xor
mov
mov
add
dec
mov
lea
pop
ret
sub
mov
mov
dec
mov
mov
inc
inc
mov
and
inc
mov
lea
lea
xor
mov
dec
mov
inc
inc
inc
imul
inc
mov
movzbl
add
lea
cmp
jb
mov
push
imul
add
push
lea
inc
push
or
movzbl
xor
mov
mov
xor
sub
inc
xor
imul
imul
push
lea
lea
mov
add
xor
mov
dec
and
mov
inc
movzbl
lea
mov
dec
mov
add
sub
add
add
mov
movzbl
inc
inc
inc
movzwl
add
inc
xor
lea
mov
mov
inc
movswl
add
jmp
or
les
jmp
addr16
sbb
insb
cli
addr16
lea
lods
sub
dec
outsb
ds
shl
loope
sbb
xchg
mov
enter
xchg
nop
enter
and
loopne
fmuls
push
jns
pop
fcmovnb
lahf
dec
repnz
push
into
pusha
mov
cmpb
dec
loop
inc
outsb
jg
scas
in
insl
ds
int3
aas
leave
jmp
in
cli
add
jbe
mov
les
sarb
push
mov
mov
repnz
adc
adc
push
cmp
adc
ficoml
loope
dec
inc
mov
pusha
cmpsl
mov
cmpsl
lret
xchg
flds
push
shlb
imul
jmp
aam
in
pop
sbb
add
sub
sbb
adc
stc
cmp
jmp
push
imul
loope
jge
lea
sub
or
jp
out
mov
pop
adc
pop
mov
mov
pmaxsw
scas
arpl
cmp
dec
and
push
jp
icebp
push
and
pop
cmp
shrl
push
jge
movsl
inc
jns
cltd
inc
mov
cmpl
cmpsb
or
es
je
or
popl
icebp
xor
mov
in
mov
sub
jecxz
out
imul
clc
inc
addr16
xchg
in
sub
push
sbb
das
arpl
mov
mov
mov
dec
adc
stc
fldt
notb
in
sbb
addr16
add
push
ds
icebp
inc
gs
or
stos
sbb
aaa
jo
rorl
cmp
in
push
cmp
pop
pop
das
mov
add
mov
movsb
pushf
hlt
mov
jmp
stos
int3
sbbb
inc
mov
fiadds
fnstsw
jecxz
inc
inc
sbbl
sbb
iret
pop
mov
scas
push
cmc
mov
push
push
test
and
dec
mov
pusha
inc
and
sar
ja
leave
fs
mov
ss
adc
bound
mov
in
sub
jbe
mov
lods
sbb
cltd
aam
mov
mov
pusha
test
push
aad
sbb
and
push
and
inc
pushf
iret
loopne
test
addr16
and
scas
adc
mov
mov
dec
or
lods
in
js
mov
dec
cmp
js
repnz
outsb
cs
mov
xchg
cmp
or
leave
push
daa
push
sti
sbb
fwait
and
push
cli
or
movl
jbe
notb
and
ss
jo
es
addl
xchg
dec
mov
mov
insl
aam
pop
add
scas
pop
pop
fisubs
jo
ds
imul
inc
leave
icebp
cmpsb
lock
ss
mov
mov
imul
pop
ds
rol
jns
loope
gs
jl
adc
cmp
jle
push
addr16
jmp
and
cwtl
mov
lds
std
adc
sub
scas
dec
and
dec
aam
hlt
loopne
shl
cmpsb
mov
das
jle
pop
ficomps
scas
and
push
inc
ret
in
jae
pop
jmp
sub
mov
cmpsl
lock
popf
sbb
or
mov
jae
sti
mov
sbb
fwait
fs
push
xchg
stos
lahf
shrb
pop
mov
test
and
xlat
fninit
ljmp
icebp
shlb
clc
test
imul
icebp
add
adc
jp,pt
mov
in
mov
arpl
mov
jnp
into
popa
and
sbb
aaa
cmp
lock
jae
xor
fisubrl
xchg
mov
div
jge
inc
push
bnd
pop
dec
cmp
push
and
call
mov
pusha
jne
pop
test
push
push
xlat
dec
lock
cmp
xchg
std
jns
add
shll
sbb
mov
das
inc
in
mov
nop
add
add
mov
inc
test
push
mov
movsl
outsb
fidivrs
push
inc
sub
in
ljmp
jae
jnp
sarb
mulb
sbb
test
pushf
dec
cmp
out
xchg
ss
andl
adc
dec
pushf
shlb
xchg
mov
xlat
cmpb
mov
inc
add
jge
jno
sbb
ljmp
sub
hlt
mov
xor
push
add
in
dec
dec
nop
in
pop
pop
mov
iret
mul
sahf
xor
cmp
push
cmp
jp
std
sarb
sub
jl
or
jl
gs
scas
cltd
mov
lcall
pop
ds
mov
je
push
xor
test
sub
scas
jno
je
inc
inc
in
fidivrl
stos
push
daa
push
xchg
sub
cmp
insb
es
and
pop
idiv
pop
jns
inc
mov
cmc
iret
in
jnp
mov
sbb
flds
push
imul
and
cmp
mov
imul
dec
add
and
mov
inc
pop
adc
inc
pop
cmp
pop
mov
jl
fadds
pop
sbb
sbb
ud0
cmp
jbe
mov
ja
dec
sbb
fidivs
ja
ror
mov
outsl
jbe
out
les
mov
push
inc
in
jecxz
bswap
loopne
adc
rep
and
push
stc
movsl
jns
lods
mov
jp
insl
scas
movsl
adc
adcb
test
mov
push
aad
lahf
xor
mov
adc
pop
dec
and
xchg
sub
ret
int
fwait
addr16
sarb
ds
cs
dec
iret
push
rorl
cs
inc
daa
movsl
push
jbe
ret
xchg
sbb
adc
pop
call
mov
iret
paddq
fwait
xor
jo
out
js,pn
lock
aam
dec
push
mov
or
cwtl
mov
outsl
inc
js
rolb
pop
mov
mov
adc
insb
data16
cmpsb
jne
adc
inc
and
les
shlb
push
and
jb
inc
test
movsb
jnp
ffree
stc
jnp
aam
inc
enter
testb
xchg
ja
es
jle
addl
popa
fidivrs
testb
mov
push
and
pop
int
fs
fisubl
int3
sbb
adc
and
orb
lods
adc
lock
ds
add
inc
imul
add
sahf
xor
dec
lods
frstor
ss
sahf
fistl
mov
xor
adc
mov
orl
push
sub
ret
xor
dec
xor
hlt
jp
adc
inc
sahf
xchg
cmp
inc
mov
inc
adc
and
repz
sub
dec
je
cmpsb
mov
addr16
mov
fidivrs
jne
or
mov
cmc
rol
xchg
shl
jl
sbb
dec
fwait
sbb
mov
pop
ret
and
out
cmpsb
pop
in
jmp
inc
and
mov
mov
jmp
cmp
push
cmp
arpl
adc
mov
or
fucomi
sub
cmp
stc
push
sub
xchg
movsl
mov
sti
xchg
cmp
jb
outsb
inc
pop
jns
or
fprem
shll
lock
or
rol
stc
out
push
pop
dec
ret
xlat
xor
cmpsb
int3
divl
test
ss
and
notl
sti
and
shrl
dec
shr
cmp
xor
sbb
es
inc
xchg
cmp
mov
mov
mov
addr16
xchg
aad
push
xor
addl
or
testb
mov
sar
arpl
jecxz
pop
dec
leave
mov
ret
lcall
dec
cmp
arpl
test
inc
mov
cmp
rclb
mov
sbb
fsub
add
dec
mov
jg
fisubl
in
icebp
or
jge
push
popf
fimuls
mov
addl
or
test
add
jg
ljmp
enter
inc
mov
loop
mov
sbb
in
add
shll
sub
lea
inc
sub
ljmp
int
and
push
push
movsb
fs
scas
mov
data16
mov
addr16
jge
or
icebp
leave
cltd
sar
pop
sub
lock
pop
cmp
or
shr
jge
dec
xor
sub
ss
aaa
loopne
mov
cmp
jl
jp
jns
pop
fiaddl
adc
sbb
push
cwtl
rorl
movsl
mov
adc
mov
pop
roll
fsubs
pop
cmp
aad
aaa
test
inc
cmp
sbb
stos
mov
xor
movsb
fstpt
xchg
ret
fwait
mov
lahf
addr16
fistl
or
iret
dec
adc
push
cmp
cltd
cs
xchg
push
pusha
xor
adc
loop
push
loope
test
adcl
aad
pop
inc
add
int
mov
push
imul
mov
and
hlt
das
mov
lods
xchg
add
xchg
subl
mov
jns
inc
mov
jns
bound
js
add
xor
bound
std
adc
jnp
arpl
jge
lock
cld
mov
dec
cmc
xorb
adc
push
push
push
push
ret
fsts
xchg
xor
push
scas
pop
test
stos
cmc
jo
mov
push
popa
pusha
cmp
dec
filds
cmp
rcr
int3
sub
incl
and
or
gs
es
push
xor
fcmovu
mov
pop
inc
imul
stos
and
mov
js
or
jp
xchg
out
sub
jmp
or
xchg
pop
insb
cmp
repnz
jns
cmp
xchg
rolb
int3
in
test
pop
xor
jg
cwtl
add
xor
stc
ja
sbb
testl
xor
xchg
sub
stc
into
push
insl
movsb
lret
repz
cmp
mov
loop
hlt
stc
ret
daa
in
or
pop
fs
fstpl
repnz
std
xor
jge
jg
movsb
ds
sbb
lret
ss
test
xchg
push
sub
push
sub
pop
imul
xor
ss
sbb
and
mov
mov
jp
rolb
cmpsl
push
in
ret
daa
lcall
loopne
mov
mov
push
stos
test
mov
cmp
jmp
dec
jp
icebp
pusha
mov
add
mov
or
pop
push
push
mov
leave
iret
in
sub
leave
loope
aaa
fdivrl
aam
fs
jae
sub
push
int
adc
dec
mov
test
les
inc
pop
jns
lcall
or
cmp
xor
adc
xchg
dec
mov
and
in
mov
cli
std
jge
cmpsb
out
notl
repz
or
dec
into
out
movl
xchg
lea
jae
fmull
push
or
dec
xchg
jns
and
stc
mov
std
mov
insl
xchg
jae
add
imul
out
adc
dec
imul
dec
insl
in
jbe
inc
pop
rcr
mov
insl
pop
clc
jno
rcl
hlt
lret
inc
pusha
jmp
push
fidivl
daa
jbe
lahf
sar
mov
inc
sub
fcom
scas
cmpsb
testl
mov
fistpll
mov
pop
ud1
outsl
adc
pop
cmp
test
add
sbb
mov
out
call
and
insl
call
adc
adc
ss
add
insl
lret
cmc
pop
xor
mov
sub
out
pop
push
andl
popf
jno
rcl
push
push
mov
pop
and
fisttpll
push
imul
mov
jmp
add
std
xchg
cli
mov
and
jp
add
lods
flds
in
addr16
mov
adc
mov
mov
xor
sbb
xchg
push
push
sub
mov
stc
push
clc
enter
cmp
movsl
xor
shrb
pusha
jl
outsb
cld
pop
lock
ds
shlb
rcrl
mov
ror
sub
dec
mov
outsb
inc
and
stos
lea
mov
mov
xlat
int
cmc
les
lret
shlb
xor
push
and
and
adc
cmp
dec
aaa
or
imul
sarb
cmp
jg
cmp
cmp
stc
cmp
dec
or
jmp
popf
into
outsl
dec
pop
stc
jg
lret
xor
add
xor
mov
xchg
enter
roll
fistps
movsl
or
std
std
stc
insl
arpl
aam
int
rcll
jne
addb
xor
sbb
nop
cld
in
loope
dec
fidivs
cmpsb
lock
sub
dec
mov
in
ficompl
adc
insb
xchg
sub
fdivs
push
or
add
out
mov
sub
dec
sub
pop
jae
dec
and
ja
xor
ja
cmp
cmp
add
cmpsl
ljmp
pop
cli
leave
dec
incl
lret
jne
into
inc
in
adc
cmc
sbb
xchg
nop
inc
jge
nop
aaa
mov
mov
adc
sbb
cmp
xlat
xchg
pop
dec
mov
ret
xlat
cli
popf
mov
les
inc
jge
mov
push
lea
and
add
mov
je
cmp
cmp
aaa
or
jo
adc
push
xchg
orl
test
sbb
lahf
sti
xor
or
pop
dec
pop
add
fwait
les
pusha
div
stc
and
sub
aas
rolb
ds
call
sti
movsb
cwtl
imull
and
mov
jnp
jne
pop
inc
dec
data16
push
in
loope
gs
sti
pusha
inc
pop
add
ljmp
lret
lds
arpl
jg
int3
mov
dec
cmp
cmp
or
call
shr
cmpsb
leave
dec
cmp
cltd
fistpll
in
inc
loopew
fisubrs
adc
adc
les
loop
jl
xor
cmp
sbb
leave
mov
div
push
sbb
pop
nop
mov
outsl
fnstenv
mov
ss
test
repnz
imul
add
leave
dec
into
mov
lods
mov
negb
pop
adc
xlat
or
jne
fisubl
ret
sbb
push
addr16
push
and
orb
mov
fimuls
call
repnz
xor
xchg
mov
pop
dec
int3
into
clc
sub
inc
push
or
ret
jg
mov
aaa
ss
or
scas
add
mov
mov
mov
pop
test
mov
add
loopne
push
mov
sub
outsl
push
in
pop
dec
cmp
inc
lret
and
aad
xor
popa
mov
lret
jae
or
loope
daa
jae
enter
pop
add
mov
out
data16
add
xchg
push
sbb
push
jnp
inc
repz
iret
mov
loopne
leave
out
in
mov
cmp
adc
outsl
mov
dec
loopne
fwait
ret
sub
lcall
push
jp
stc
adc
hlt
and
mov
dec
mov
xor
jp
mov
lcall
out
mov
lahf
cmp
das
rolb
pop
mov
dec
fwait
pop
jecxz
mov
xlat
cld
pop
mov
lret
aam
fildll
cmp
push
or
lea
add
out
inc
imul
mov
aaa
fildll
int
mov
dec
outsl
push
push
jb
xchg
jne
mov
or
pop
jb
adc
sub
pop
fstpl
add
cltd
enter
rcll
mov
in
cli
push
out
cli
inc
notl
imul
das
adc
call
jne
clc
dec
pop
iret
es
mov
test
stos
dec
xchg
and
mov
mov
sbb
pop
cli
push
dec
in
jae
push
or
xor
mov
lea
add
gs
iret
xchg
movb
outsb
rcll
leave
mov
push
xchg
jge
hlt
hlt
je
loope
fcmovnbe
imul
sbb
or
loope
and
push
jmp
mov
or
lret
adc
jl
lahf
pop
adc
ret
call
pop
inc
in
imul
inc
mov
rorb
xor
mov
ror
add
inc
cld
push
aad
int
cmp
fmull
dec
scas
lret
mov
cs
scas
cmp
iret
add
subb
xchg
jns
test
pop
pop
in
add
loope
and
pop
js
aaa
push
mov
stos
xlat
lds
popa
stc
ljmp
pop
js
jb
dec
add
aas
pop
movsb
jne
mov
pop
cmp
mov
in
fucomi
xchg
lock
shl
mov
sbb
fisubrs
jecxz
in
xchg
jg
cmp
mov
les
add
cmp
cli
fisttpl
xor
inc
sti
inc
popa
mov
mov
decl
and
inc
movsl
dec
cmpsb
movsb
pop
sti
lcall
push
push
inc
and
inc
pushf
or
pop
subl
or
mov
mov
cld
xchg
inc
loope
cmp
lods
push
addb
mov
sub
mov
std
lock
dec
lret
popf
push
mov
je
sbb
mov
jns
cmp
addb
scas
dec
cmc
sbb
ret
imul
notb
cmp
int
dec
lods
pusha
shll
sbb
insb
jae
mov
xchg
decl
lock
or
shll
inc
xorb
sub
mov
inc
je
popa
rep
cwtl
leave
adc
sbb
push
mov
cwtl
out
add
neg
ljmp
sbb
xor
stc
sbb
sahf
jl
mov
xor
or
and
test
dec
movsl
jns
xor
fs
fcmovnb
sub
scas
add
adc
lods
stos
jnp
sbb
cmpsb
push
scas
dec
jmp
lcall
xor
aad
mov
inc
xchg
popa
gs
incb
mov
shl
popa
shll
ret
aad
stc
ljmp
and
daa
dec
stos
xchg
mov
xchg
or
call
add
mov
sarb
call
cld
imul
ret
and
jle
mov
pushf
jb
mov
sub
push
fsubrl
icebp
adc
mov
xchg
push
ljmp
dec
mov
movsl
test
imul
fisubrs
lods
xchg
jg
cmpsl
arpl
call
or
neg
movsl
push
fisttpl
jge
mov
rcl
push
aad
je
dec
insb
cmc
scas
push
movsl
call
dec
pop
adcl
in
mov
addr16
clc
push
xchg
jg
and
push
inc
jb
sbb
cmp
mov
gs
test
cmpsb
ret
pop
pop
adc
fldt
nop
mov
adc
jbe
in
jp
xchg
inc
add
mov
push
dec
jecxz
shlb
rolb
adc
lgdtl
movsb
mov
decb
xlat
adc
cli
es
adc
inc
dec
mov
xor
dec
es
cltd
dec
sar
lods
movsl
ja
xchg
sahf
into
cmp
jns
lret
add
xor
adc
popa
shll
adc
loop
sbb
data16
pop
inc
jne
jg
push
cmp
sahf
cmp
imul
pop
cmp
rolb
lret
cld
cmpsb
mov
out
and
adc
fsts
es
jg
sahf
cmp
mov
fidivrs
pop
sub
or
test
push
jbe
mov
mov
jne
or
jge
mov
push
pop
and
cmpsb
dec
cs
shlb
fistpl
cmp
xchg
jl
mov
add
add
jns
pop
clc
aad
test
call
cmp
into
or
lods
cmc
mov
adc
stos
xchg
adc
popf
iret
aas
movd
dec
sub
cmp
mov
jmp
out
inc
mov
mov
out
push
push
ret
nopl
iret
cmp
xchg
dec
fdivl
and
dec
leave
xchg
mov
ja
fcmovbe
scas
add
push
xchg
pushf
scas
sub
fistl
add
mov
movsl
inc
mov
and
sub
loope
sub
adc
cmp
call
fdivr
jmp
aaa
sbb
push
cltd
inc
shrb
push
adc
dec
sbb
sahf
mov
pop
xchg
mov
mov
lods
punpckhwd
cmp
insl
sbb
pop
stos
adc
daa
loopne
lea
int
sub
add
rorb
cwtl
daa
jl
testb
fimull
xchg
jge
inc
aas
aam
test
in
dec
outsb
into
xchg
dec
insb
mov
adc
fnstenv
cmp
outsl
stc
push
push
xlat
pop
sub
repnz
fnstsw
scas
xchg
ret
mov
pop
subb
mov
mov
test
mov
fildll
and
jnp
mov
pop
adc
dec
sti
pop
jns
int
mov
dec
sti
enter
mov
cld
cmp
arpl
leave
sbbl
push
cmpsb
in
int
mov
scas
mov
and
lcall
adcb
jae
push
mov
stos
jecxz
adc
mov
out
aas
sub
mov
push
sub
pop
cmp
lcall
xchg
outsl
cwtl
loopne
jge
jne
lods
sbb
xchg
jbe
dec
cmp
xchg
or
push
int
pop
sbb
icebp
cli
cli
outsl
add
aaa
ficompl
push
test
ljmp
xchg
lahf
pop
mov
jle
mov
mov
cmp
movsl
test
adc
pop
xor
cmc
in
add
jg
ret
xchg
subb
push
jmp
sub
mov
add
or
repnz
ret
and
rcrb
fidivl
fnsave
arpl
push
jae
pop
fnstenv
ljmp
pushf
out
gs
cmp
clc
in
fidivl
push
and
das
push
popa
sahf
cmp
jno
cld
jg
lods
mov
mov
mov
inc
scas
inc
xchg
rclb
cltd
scas
mov
mov
nop
dec
not
je
cmp
fidivrs
mov
cld
push
je
leave
cltd
fldt
enter
in
out
push
inc
pop
out
filds
je
test
xchg
xchg
loop
mov
and
adc
sub
mov
add
add
arpl
jbe
cwtl
sub
sbb
pop
in
insb
sub
mov
pop
iret
aad
cli
cmp
pop
sbb
cmpsb
jp
test
sbb
sub
mov
inc
ds
mov
cmpsb
lret
jnp
imul
mov
xor
push
sbb
push
cmpsl
xchg
sub
mov
test
add
int3
cmp
shl
aaa
out
sbb
inc
xor
cmp
mov
lds
xchg
cmpl
xchg
ljmp
sub
add
cltd
shl
mov
stos
pop
fimull
adc
sub
sbb
push
xor
or
cwtl
ds
scas
aad
cmp
enter
insb
pusha
popa
xadd
cs
inc
lret
push
inc
sub
movsb
fmuls
push
mov
pop
and
dec
lods
inc
and
orb
sub
ds
shr
mov
arpl
adc
out
mov
pop
dec
test
or
and
xchg
pop
dec
sbb
lods
xchg
int
in
pop
pop
and
nop
push
fildll
dec
fidivl
mov
and
imul
roll
imul
add
loopne
ficoms
daa
pop
pop
into
push
add
and
cmc
inc
mov
mov
repnz
loope
adcl
inc
xchg
inc
sub
mov
lds
es
dec
jl
xchg
rolb
inc
cs
mov
adc
jbe
mov
idivb
xchg
push
pop
cmp
push
cmp
daa
jne
imul
out
sub
push
scas
sbb
cwtl
mov
fidivrl
xchg
mov
xlat
call
cmpsl
lods
jb
icebp
add
mov
aaa
movsb
data16
test
bound
je
movsl
jnp
daa
jb
and
sub
in
test
mov
leave
iret
and
push
add
notb
enter
ret
xor
mov
inc
push
ljmp
rcr
and
inc
jmp
clc
aam
push
sub
sarb
out
sbb
mov
pop
add
mov
push
imul
je
pop
mov
out
mov
jecxz
fcoml
cs
jle
mov
inc
clc
cmpsl
push
jo
dec
out
movsl
mov
pop
aad
adc
pusha
dec
cmp
je
addr16
jne
xchg
lods
jge
into
jbe
jno
bound
xchg
fisttpl
jno
repz
repnz
lahf
ss
xor
add
push
mov
cld
mov
out
jp
mov
xor
pop
mov
jnp
aad
cmpsb
mov
jae
push
repnz
sub
or
mov
xchg
jo
mov
fs
out
repnz
or
inc
adc
negl
adc
dec
imul
je
push
push
ljmp
push
or
dec
pop
cld
pop
fdivs
push
adc
xorb
push
cmp
fwait
push
and
sahf
lahf
sbb
dec
fnstsw
mov
pop
cmp
mov
or
jp
fisttps
call
out
repnz
mov
insl
push
sbb
nop
pusha
stos
scas
dec
pop
push
nop
xor
cld
clc
in
lods
ds
inc
gs
pop
push
movsb
add
cmp
imul
pop
movd
jge
dec
mov
sbb
adc
pop
sti
shufps
push
shrb
push
cli
out
and
jno
mov
lock
inc
notl
out
data16
sti
and
inc
out
dec
add
mov
pushf
mul
inc
pop
and
pop
inc
pop
scas
pop
lea
xor
dec
fs
rorl
in
nop
test
je
rcll
shr
mov
out
sub
scas
out
gs
or
imul
cli
sbb
push
aaa
fbld
lods
stc
jecxz
in
sti
push
inc
push
and
inc
add
movsb
sti
inc
jne
ds
mov
les
idiv
orb
jecxz
push
xlat
jno
push
inc
mov
pop
mov
xor
test
enter
scas
ljmp
sbb
sub
int
int
and
mov
in
loop
nop
in
in
cld
sbb
dec
jo
repz
negl
adcb
or
cmpl
inc
or
xor
frstor
mov
sub
movsl
jns
or
cmpsl
jl
jnp
jnp
and
jne
xlat
insb
pop
jae
push
std
icebp
fisttpl
sub
sti
push
enter
test
inc
push
loop
sub
daa
cmpsl
cld
sub
sbb
stos
notb
jb
loopne
pop
sub
xchg
push
mov
xchg
fs
sbb
inc
divb
add
pop
or
xor
into
out
sahf
and
jge
jge
enter
jb
mov
roll
sub
into
sbb
lods
cmp
xchg
in
xchg
add
daa
inc
sbb
or
jg
or
mov
cmp
dec
xor
or
cmp
push
cmp
lcall
add
ret
mov
adc
mov
sbb
mov
mov
adc
mov
sarb
test
les
dec
xchg
cmp
mov
dec
lods
sub
nop
hlt
jecxz
loop
cld
outsb
daa
push
scas
inc
inc
sbb
xchg
imull
repnz
adc
and
shlb
in
ss
jns
loop
cmp
sub
gs
add
iret
outsl
sub
fs
aad
imul
mov
mov
pop
insb
xor
mov
scas
rcll
dec
gs
ja
jg
adc
push
dec
adc
jmp
insl
jp
pop
push
lock
mov
loope
movsb
push
inc
subl
add
jno
pop
lcall
add
jno
je
pusha
repz
xchg
pop
vmread
sahf
fbstp
insl
les
push
shr
push
pop
pop
inc
rolb
inc
and
xchg
sub
adc
inc
repnz
sahf
fildl
mov
fnstcw
leave
out
pop
or
test
ja
inc
add
mov
push
pop
dec
in
dec
push
push
mov
jge
lock
cwtl
js
repnz
mov
inc
mov
adc
jne
and
add
inc
xchg
jbe
out
jns
adc
inc
xchg
stos
xchg
and
mov
jb
add
mov
loop
shll
xor
in
inc
outsl
xchg
lods
xchg
jg
shll
sarl
and
out
or
shll
fisttpl
mov
pushf
lock
popf
lods
repnz
xor
adcl
in
pop
imul
xchg
shrl
jnp
mov
xchg
pop
adc
cmp
fisttpll
add
xor
mov
add
out
sub
push
mov
mov
xchg
shl
xchg
jle
jnp
dec
jg
mov
xchg
mov
movsb
into
aad
mul
pop
mov
daa
push
mov
cwtl
add
aaa
add
cmp
nop
in
xchg
sbbl
push
fs
insl
hlt
popa
movsl
inc
adc
sar
sahf
popa
jbe
outsl
add
xabort
mov
jmp
or
sbb
je
std
negl
mov
sub
and
cmc
or
insl
lea
inc
xlat
push
cmpsb
jo
ror
push
add
pop
and
mov
lret
fildl
mov
icebp
and
dec
mov
addr16
jbe
idivl
xor
push
out
iret
sub
scas
dec
out
popf
or
aad
vcomisd
lods
push
sbb
mov
fs
aad
pop
pop
pop
in
jb
ret
mov
cltd
aad
iret
jno
pop
data16
outsb
mov
mov
sarl
sub
and
and
pop
dec
add
ret
and
out
dec
cmovl
sbb
xchg
ss
push
cmpb
sti
push
sub
adc
xor
movsl
mov
dec
xchg
bound
fsubr
sbb
add
data16
jns
leave
sub
sbb
jle
xlat
in
movsb
sti
push
mov
push
jae
cli
sub
or
sub
dec
jle
jle
pushf
and
mov
lods
cli
outsl
gs
cmp
fs
dec
movsb
stos
mov
aaa
les
adc
mov
and
sub
sub
stos
jne
mov
xorl
aas
sti
push
pop
insl
bound
xchg
aas
xchg
das
hlt
stc
enter
js
mov
outsb
sti
pop
push
dec
xor
xchg
es
loopne
xchg
and
and
xor
dec
jns
jmp
jno
cmp
test
xor
dec
adc
jecxz
add
outsb
add
sub
xor
in
pop
adc
mov
ret
bound
mov
inc
pop
push
sahf
cltd
pop
mov
inc
int
sbb
inc
mov
cmp
jecxz
mov
sub
repz
mov
xchg
dec
mov
pop
fldl
data16
in
cmp
dec
jle
cmp
mov
adc
or
rcr
rolb
adc
sub
lahf
or
iret
xchg
mov
loop
jg
inc
inc
daa
push
mov
popf
or
mov
repz
pop
rcrb
popa
daa
pop
jle
cmc
mov
in
ja
in
jne
mov
out
pusha
pop
stos
fisttps
rolb
aas
int
push
adc
adc
cmp
mov
pop
dec
pop
jbe
mov
adc
pop
xor
lock
mov
call
xchg
imul
scas
mov
dec
outsb
mov
mov
cmp
mov
xchg
sub
insb
adc
fwait
jbe
jae
pop
mov
jnp
sub
mov
xor
and
test
rorl
insl
or
dec
or
mov
xor
cmp
inc
lea
sti
fldcw
sbb
pop
int3
push
push
shll
or
pop
mov
in
pop
adc
mov
dec
and
je
scas
adc
inc
adc
ss
sahf
sti
icebp
mov
divl
ja
mov
adc
push
xchg
stc
scas
fmul
lock
or
mov
pop
jo
inc
shl
xchg
pop
test
insl
out
dec
push
sbb
mov
orb
insl
test
int3
insl
inc
pusha
xor
push
dec
pop
mov
jbe
in
out
mov
sti
fiaddl
popf
adc
mov
and
sbb
cmp
sub
ljmp
shrb
je
fnstenv
pop
xor
push
xor
out
lods
mov
lea
in
insl
pop
fcoml
xor
add
add
mov
mov
xor
pop
xor
faddl
aam
push
daa
ja
and
dec
mov
shl
or
out
lods
lds
xchg
sbb
out
aaa
lea
xchg
sub
stc
push
xor
pop
sub
daa
jno
mov
cmc
mov
jl
jno
rcrl
or
xchg
rclb
dec
imul
cmp
lret
mov
into
fwait
jae
cmp
pop
pop
jae
push
pusha
cld
call
or
push
ljmp
xchg
adc
or
inc
sti
pop
inc
mov
mov
mov
jmp
inc
mov
cmpsb
mov
cmpsb
mov
mov
sub
ljmp
test
jmp
repz
sub
inc
dec
jns
out
add
fmuls
imul
cmp
dec
rorl
xor
mov
sbb
mov
test
sti
inc
pop
roll
and
jecxz
mov
fldln2
mov
cli
and
jp
movsb
popf
and
shlb
fdivr
pop
add
pop
push
ja
mov
sub
add
and
cmpsl
mov
pop
and
imul
push
jecxz
lods
sbb
nop
mov
push
adc
mov
adc
andl
fisubl
cmpb
push
fdivrp
lock
cmp
mov
mov
negb
lods
sti
mov
lret
fcompl
enter
push
arpl
jns
cmp
repz
in
jl
jmp
push
int
fiadds
push
jge
enter
sub
sbb
sub
xchg
stos
cmpsl
lods
cmp
stos
addr16
mov
cmp
ljmp
or
outsb
mov
mov
jbe
out
mov
cmc
stos
mov
mov
cmpsb
rcrl
insl
test
js
mov
jns
mov
xchg
pop
outsb
mov
jno
add
jmp
aad
cmc
cltd
call
and
icebp
jecxz
repnz
pop
std
fstps
dec
inc
jbe
pop
ret
sbb
pop
lds
cwtl
loopne
mov
inc
ss
mov
scas
js
cs
repz
push
jmp
in
insl
inc
xchg
pop
mov
xchg
pop
clc
mov
jne
jmp
ret
hlt
and
add
sbb
and
jbe
dec
jne
out
mov
fstpt
shll
fisubrl
inc
pop
cltd
fnstsw
inc
jle
in
pop
lock
rcr
jno
sub
loop
call
pop
les
test
lcall
lcall
xor
and
sub
gs
aad
addr16
rorb
insb
jp
mov
adc
aaa
lds
mov
in
mov
fsubl
xchg
loopne
leave
xchg
das
jecxz
adc
nop
pop
dec
js
cs
sub
jge
daa
xchg
stos
adc
fcmovnu
or
outsb
sub
test
nop
mov
std
fdivrl
das
insl
lods
or
push
movsb
mov
sti
jns
mov
mov
mov
xchg
pop
jne
sub
scas
add
or
jg
js
das
and
add
jo
push
xor
cmp
popf
nop
imul
addr16
lahf
subl
pop
push
xchg
inc
push
sbb
pop
inc
jns
daa
popa
je
adc
inc
enter
lods
xchg
je
aam
jbe
xor
jecxz
sbb
data16
in
dec
jmp
jbe
fstps
popf
addb
out
leave
adc
mull
adc
mov
sbb
xchg
stc
xchg
lahf
push
aas
xchg
mov
out
push
cltd
inc
icebp
xchg
jb
std
out
add
xlat
push
fstpt
repnz
adc
rorl
std
loopne
pop
cld
into
inc
mov
out
jl
mov
fucom
sub
cmp
mov
xchg
lea
mov
xlat
mov
sbb
and
push
cmpsb
stc
into
in
lock
sub
or
lahf
push
call
call
ret
notl
cmp
push
xor
pop
dec
sbbl
sub
stos
pop
loopne
jns
or
lret
push
cltd
ljmp
int
mov
nop
or
lds
mov
add
shll
dec
push
addb
push
stos
rorl
add
bt
xor
sahf
adcb
test
inc
out
and
jmp
fiadds
and
inc
cmp
fcom
xchg
fcomp
ds
call
pop
scas
sbbb
sub
and
lahf
testb
or
test
mov
outsl
pop
mov
cwtl
jno
sarb
fistl
js
adc
inc
insl
inc
mov
inc
sub
mov
and
popa
and
push
xor
addr16
sbb
mov
ss
dec
ret
lret
sbb
pop
xchg
test
int
test
adc
mov
leave
mov
mov
rcl
ss
test
aaa
xchg
addr16
loop
jle
push
aas
ja
repz
xor
popa
mov
imul
push
aad
push
daa
push
add
in
sahf
cmp
ljmp
roll
stos
mov
adc
inc
jge
push
xor
insl
inc
sbb
mov
sahf
mov
fmuls
ljmp
mov
mov
pop
pushf
adc
mov
sbb
and
pop
test
sub
xlat
push
xor
fs
jl
test
jo
mov
adc
test
or
jo
bound
aas
mov
filds
inc
push
sub
lods
mov
stos
cwtl
cltd
pop
jne
cwtl
adc
fnop
outsl
in
test
xchg
test
insb
sub
pop
inc
push
xorb
gs
dec
sub
in
stos
adc
xchg
inc
addb
xor
lret
or
and
loope
mov
mov
mov
dec
mov
cmpsl
push
or
or
xor
shll
in
or
out
std
push
mov
mov
mov
add
dec
imul
test
js
mov
jle
xor
jge
push
adc
cmp
sahf
pop
faddp
inc
mov
iret
mov
cld
lods
xor
lods
or
pop
popf
sub
jmp
pushf
pop
inc
mov
loopne
xor
sbbl
jge
mov
sbb
lock
enter
push
loope
ja
les
sub
add
hlt
xchg
or
rcrl
bound
push
jns
aaa
in
es
mov
cwtl
adc
imul
nop
and
xchg
test
sub
sti
repz
aaa
add
pop
or
sarl
mov
ret
mov
js
movsl
push
insb
imul
dec
je
iret
mov
icebp
or
cmp
iret
mov
rclb
sti
mov
and
lret
add
push
stc
mov
lock
xchg
ret
lcall
xchg
xor
mov
pop
int3
imull
add
mov
ret
loop
stc
jg
push
ljmp
jecxz
addl
stc
popf
rolb
xchg
lods
mov
xchg
rclb
je
push
call
iret
sbb
jo
mov
fs
xlat
push
hlt
sub
push
cmp
mov
mov
pop
inc
xchg
pop
and
inc
lds
mov
sar
jl
pusha
aad
xor
and
mov
loop
mov
dec
ja
push
sbb
out
xchg
fld
lds
icebp
xor
cmp
shll
cmp
outsb
xchg
mov
dec
xorl
cmp
jo
cs
jl
lods
push
xchg
xorb
shrl
dec
test
xchg
adc
test
mov
into
add
or
mov
push
pop
adc
xor
sbb
push
cmp
jne
stos
pop
ss
inc
mov
xchg
mov
movntq
test
cli
mov
jnp
rcrl
stos
loope
fsubs
mov
or
inc
add
adc
nop
rcrb
mov
cmp
fisttps
add
subb
mov
cltd
push
dec
jb
push
cmpsb
stos
lds
cmpsl
lock
loopne
or
lret
imul
inc
jne
js
fwait
xchg
es
dec
or
dec
loop
icebp
mov
inc
lret
daa
add
orb
or
imul
stc
out
jmp
out
int3
repz
inc
data16
and
xchg
imul
mov
punpckhdq
push
cld
and
aad
xor
scas
clc
mov
mov
flds
fldenv
cwtl
xlat
in
pop
sbb
mov
lods
jp
xchg
mov
lea
push
xchg
xchg
ret
ret
cmpsl
dec
xchg
mov
jns
jle
sbb
inc
mov
jg
adc
lcall
inc
dec
dec
repz
xchg
pop
mov
push
xorb
hlt
xchg
scas
cmp
adc
cmp
dec
cs
popa
jl
add
pop
xor
cltd
or
pop
scas
inc
lea
pop
and
push
mov
in
out
repnz
push
scas
cmc
push
rclb
fldcw
inc
aaa
jp
aam
popa
lock
jb
mov
xor
or
pop
add
aas
inc
fs
adc
les
xchg
test
pop
cs
repnz
pop
sub
test
lods
mov
or
repnz
cmpsl
mov
fbstp
sbb
dec
inc
adc
mov
xchg
jmp
jnp
aam
mov
pop
imul
movsl
xchg
xchg
pushf
popa
cmp
add
inc
popa
xchg
loope
add
xor
stos
mov
ror
orb
xchg
sub
fwait
repnz
add
add
and
test
and
stos
fistl
cmp
fnstcw
scas
ret
or
push
stos
aam
cmp
gs
mov
cmp
xchg
mov
sbb
gs
sub
cmpsb
insl
mov
out
pop
sti
adc
adc
arpl
xor
jbe
js
and
jecxz
outsl
jecxz
dec
ret
in
push
fnstcw
push
or
out
stc
xor
iret
xchg
in
in
dec
dec
cmc
cmpsl
xchg
jne
fwait
dec
sub
push
pop
mov
add
jp
mov
and
or
lcall
dec
pop
mov
jb
aas
sbb
subb
or
leave
pop
sbb
fdiv
ljmp
call
je
shl
mov
sbb
sahf
mov
cwtl
sbb
dec
clc
inc
aas
gs
jae
addb
into
push
pop
call
test
add
imul
insb
pop
repnz
add
pop
adc
int3
mov
sbb
aas
push
ret
adc
icebp
lods
push
mov
ljmp
cmpsb
iret
je
xor
rolb
fs
adc
cs
cmp
cmp
cmp
push
dec
sbb
cmpsb
jo
addr16
or
mov
cmp
data16
mov
roll
sahf
outsb
pop
mov
add
mov
loopne
and
out
adc
and
add
cli
arpl
in
das
cmp
adc
mov
das
fbld
cwtl
inc
les
add
sbb
xchg
ffreep
pop
int3
jp
dec
push
mov
lods
into
clc
push
and
jecxz
out
lock
xor
addr16
inc
pushf
mov
ljmp
rol
sahf
hlt
pop
push
sarb
mov
lds
adc
subb
movsl
pop
jno
xchg
aam
movsl
inc
sub
cmp
out
nop
or
insb
cmc
mov
pop
mov
sbb
aam
out
js
jnp
dec
jb
enter
sub
daa
jg
test
xchg
mov
pop
push
dec
push
xchg
xchg
je,pt
push
addr16
cmp
daa
push
mov
gs
clc
mov
popa
xchg
xchg
adcl
or
mov
mov
cmp
add
or
push
lea
push
ds
aam
rclb
add
fdivs
add
lcall
call
lods
pop
lahf
in
aad
aam
jnp
sub
out
jge
inc
jno
sbb
mov
or
mov
lret
repnz
xor
xlat
xchg
lods
movsl
push
aaa
test
pop
or
jp
sub
lods
aam
cmc
call
lcall
lahf
sub
outsb
sbb
cld
pusha
loopne
jo
test
xchg
inc
in
es
pop
rcrb
mov
mov
and
popa
data16
mov
faddl
mov
insl
lods
repnz
call
mov
fnstcw
mov
pop
dec
repnz
lret
sti
push
cmpsl
pop
mov
ja
sbb
or
jb
subb
pop
fcmovb
push
add
addr16
mov
mov
pop
loope
jge
pop
sbb
scas
pop
lcall
jge
icebp
sub
lods
add
mov
shll
adc
je
cmp
fidivs
and
xchg
pop
in
pop
or
cmpsl
pop
out
cmp
fstl
push
sbb
jp
mov
aas
add
int3
dec
adc
insl
mov
pop
xchg
sub
insb
pushf
mov
enter
loope
aas
popa
popf
lock
orb
xchg
jns
xchg
imul
sbb
mov
outsl
adc
xor
imul
mov
daa
pop
test
xchg
jbe
in
adc
movsb
inc
ret
xorl
mov
jge
scas
jns
pop
push
loope
jle
fistpl
jnp
leave
aaa
jecxz
dec
mov
ss
mov
or
pop
inc
and
mov
mov
cmp
xchg
scas
das
or
or
shrb
mov
movsl
push
push
push
mov
adc
imulb
dec
outsb
mov
xchg
pop
inc
sahf
jle
mov
mov
and
hlt
stos
outsb
mov
inc
test
push
xchg
lea
and
sub
lods
xchg
sahf
fdivrs
call
jb
xchg
jne
jnp
pand
xchg
xor
inc
scas
imul
push
cmpsb
xchg
inc
ret
ficoms
and
adc
xchg
pop
adc
jnp
mov
jecxz
pop
push
cmpsb
mov
xchg
dec
adc
push
loope
cli
in
lea
mov
jmp
xchg
jne
cmp
or
cs
jle
inc
sahf
pop
jmp
jns
add
sarb
mov
lds
stos
cwtl
inc
call
or
addl
push
inc
dec
jnp
jno
xor
xor
pop
das
sbb
dec
mov
mov
cltd
cmpb
rolb
ret
adc
xlat
nop
iret
inc
xor
pushf
jl
and
xor
sub
pop
push
push
pusha
mov
mov
loop
cltd
jbe
ret
adcb
add
aaa
scas
loopne
sti
mov
int3
cmp
pushl
xchg
out
pop
cwtl
mov
outsb
cmp
fldenv
sub
mov
fidivl
fldenv
mov
ret
enter
shll
jnp
adc
push
jecxz
push
pop
orl
adc
push
std
jnp
clc
add
mov
inc
adc
es
xor
lods
rcrb
call
cmovs
mov
pop
push
xor
in
jbe
test
sahf
adc
mulb
push
sub
jnp
mov
dec
xchg
aad
mov
xor
and
lds
jle
insl
ja
sub
mov
iret
out
or
data16
scas
mov
in
xchg
iretw
cmpsb
xlat
pop
pop
and
mov
test
int3
mov
testl
add
leave
inc
cwtl
jns
icebp
imul
add
ja
mov
and
inc
jl
jmp
lock
popa
xchg
inc
fcmovnbe
out
mov
inc
dec
pushf
sub
xor
in
outsb
in
xchg
loope
or
push
sbb
in
stos
das
in
xchg
in
pop
pushf
xor
test
or
push
pushf
mov
test
lods
loop
sub
mov
mov
insl
inc
sub
or
divb
and
inc
push
test
push
popl
xchg
add
push
xchg
cmp
rcr
cs
sbb
xchg
lods
dec
jbe
jbe
push
std
js
adc
sub
inc
imul
pop
add
aad
test
inc
fldcw
test
xor
loop
int3
pusha
outsb
fidivs
xor
cs
js
mov
fs
pop
add
jae
and
cmp
cli
out
xchg
push
cmc
jecxz
pop
mov
add
adc
in
push
lret
mov
mov
inc
inc
loopne
repz
mov
gs
mov
hlt
shrb
jl
push
jne
jno
outsb
test
cli
add
inc
stc
inc
into
or
mov
inc
push
fsubs
stc
int
cmp
jp
dec
aam
and
push
fcompl
push
arpl
mov
pop
push
aas
test
or
mov
mov
shll
ret
cmp
jns
inc
pop
inc
xor
daa
and
aad
les
sub
out
lods
xor
jg
das
insl
test
jecxz
out
ds
fadds
pusha
push
sbb
mov
sbb
clc
mov
push
xchg
es
pop
in
sbb
imul
xchg
jmp
jecxz
cld
xor
inc
jne,pn
enter
push
adc
and
bound
hlt
sbb
mov
ficomps
pop
adc
fcomps
stos
clc
mov
sub
xor
stos
sub
add
pop
dec
nop
rcl
lahf
daa
push
ja
pusha
sbb
out
mov
lea
daa
loopne
add
dec
jne
stos
xchg
mov
and
shl
adcb
pop
lock
movsb
add
sbb
jmp
push
add
dec
cwtl
xor
outsl
pushf
lods
int
je
dec
xor
adc
xor
addr16
iret
mov
ret
daa
lods
stc
pop
or
pop
rcrl
mov
push
setb
cld
dec
mov
push
jae
xorl
inc
mov
mov
addr16
xlat
pop
push
sub
inc
ja
mov
or
and
pop
push
repz
nop
mov
cli
arpl
xor
jns
orl
xchg
movsb
neg
sahf
sbb
xchg
pop
in
cltd
sub
inc
in
iret
adc
out
inc
sbb
int3
nop
cmp
fbstp
or
movsb
xchg
jecxz
lds
ja
sbb
in
adc
mov
xor
add
jp
jecxz
push
outsl
lret
add
fbld
mov
xchg
aas
nop
in
test
repz
push
push
add
insl
jae
inc
mov
inc
shl
sub
and
movsb
sarl
int
cmp
repnz
pop
push
filds
and
mov
sbb
cmpsb
lock
inc
jmp
mov
dec
test
mov
mov
push
jg
popa
movsl
xchg
lss
pop
xor
or
lcall
sahf
int
repz
or
xchg
in
shlb
mov
int3
fisubl
icebp
sub
adc
scas
test
sbb
femms
lods
and
or
cmc
push
sub
and
inc
inc
push
rcrl
xchg
sbb
dec
add
add
fs
jmp
adc
orb
rcl
mov
xchg
mov
cmpsb
and
test
xchg
add
clc
stc
fisttps
push
dec
sub
jecxz
mov
xchg
add
pusha
and
mov
adc
mov
jp
out
mov
xchg
fsts
popa
lret
mov
ss
mov
scas
lods
adcl
jecxz
aaa
ret
xchg
mov
fwait
push
inc
dec
jp
fs
sarl
add
inc
enter
or
std
mov
shlb
popa
roll
mov
repnz
sub
mov
dec
push
das
mov
mov
pop
cmpxchg
shll
dec
repnz
pop
stos
lret
or
pop
rolb
sub
test
adc
jns
push
pop
fidivl
sti
mov
cmpl
jns
push
incl
inc
mov
push
xchg
mov
cmp
jl
mov
stc
jnp
cmp
jo
lcall
or
mov
movsl
inc
jae
xor
add
nop
loope
inc
cs
iret
xorl
push
xchg
mov
jmp
xchg
in
xor
mov
mov
scas
ffree
test
adc
int
shrl
es
insl
inc
mov
or
shll
inc
and
sub
inc
xacquire
out
rorb
cmpsb
and
xor
rcll
movsl
loope
imul
clc
loopne
xchg
insl
push
push
cli
push
jmp
inc
aas
jmp
mov
adc
int
add
lcall
in
cmpsb
mov
mov
inc
cld
jecxz
fadds
leave
popf
sub
bound
iret
faddl
mov
pop
pop
add
sub
mov
jge
arpl
vmovups
test
call
push
leave
popf
xlat
add
jl
call
adc
dec
pop
mov
repz
addr16
mov
es
stc
leave
call
xor
cmpsb
mov
jo
push
mov
inc
fists
sbb
jbe
insl
insb
pop
fwait
and
mov
sub
push
fsubs
rolb
pop
xchg
ja
gs
insb
daa
mov
clc
adc
fadds
in
gs
adc
lret
inc
inc
scas
cmpsl
and
sti
shlb
hlt
movsl
fsubr
lods
hlt
stc
insl
push
sbbb
ret
icebp
mov
dec
lock
popf
jae
out
jae
push
pop
xchg
jns
scas
push
pop
js
fimuls
pushf
dec
jb
push
push
cltd
xor
nop
daa
mov
aaa
call
pop
fs
add
test
cmc
cwtl
leave
adc
pop
jmp
mov
loopne
and
push
lds
sbb
dec
inc
clc
add
sub
div
out
adc
sub
adc
mov
scas
mov
enter
ss
add
sarl
sbb
call
jge
xor
jle
cmp
xchg
xchg
adc
dec
cmp
xor
sub
in
ja
in
lea
jl
fstps
push
icebp
dec
fiaddl
stos
int3
sub
inc
jg
mov
mov
divl
lock
xchg
xchg
push
insl
fs
mov
inc
mov
adc
test
mov
in
out
shr
push
rorb
int
loope
lret
shll
data16
aaa
add
cmp
push
dec
xchg
pop
add
sub
inc
daa
push
rcl
dec
je
shlb
movsl
in
stc
xchg
cmp
js
or
xlat
sbb
fcmovnb
add
pop
ljmp
pop
in
mov
dec
mov
jge
xor
inc
shl
sbbl
bound
mov
push
push
stc
mov
sub
push
inc
mov
insb
sub
jnp
lret
mov
xchg
lret
loopne
jbe
add
add
mov
and
out
jmp
jge
stos
lods
sbb
dec
inc
jp
cmp
adc
inc
jae
mov
movsb
lret
push
sub
add
mov
xlat
es
movsb
out
push
das
pop
cmp
pop
std
ja
mov
sub
cld
shll
sbb
mov
sub
push
mov
hlt
ja
mov
or
jne
outsl
iret
xchg
xor
mov
les
lret
pop
and
and
ljmp
adc
loopne
enter
xor
dec
xor
lret
jle
cmpsb
pop
subb
cltd
fisttpl
fnsave
dec
push
fcmovnu
inc
ss
sbb
decb
sbb
xchg
pop
xchg
insb
mov
lock
out
cmpsl
bswap
mov
loop
test
and
mov
cmp
fdivs
shlb
insb
fbstp
mov
sub
iret
insl
pop
hlt
stc
inc
test
ret
fwait
and
and
xchg
fimuls
or
or
addl
mov
jle
loop
adc
push
loopne
push
jmp
in
mov
inc
mov
cmp
filds
aas
xor
or
dec
inc
dec
xor
rcrl
adc
dec
call
adc
enter
test
jb
cli
push
mov
cmp
push
pop
push
xchg
jno
and
lods
shrl
pop
push
sahf
mov
push
push
jnp
xchg
inc
xlat
outsl
int3
lcall
outsb
dec
jmp
sbb
rep
out
jmp
sbb
rcl
sub
inc
jge
imul
cs
sub
xchg
jecxz
cwtl
sub
int3
hlt
jb
fistpll
or
pop
adc
cmp
jae
sbb
mov
int
push
out
lods
pop
sbb
xor
jne
mov
cld
insl
test
cwtl
daa
xchg
or
and
dec
mov
pop
imulb
xchg
fptan
inc
rorb
pop
or
movsl
movsl
pop
cmp
push
fcmovnb
xchg
mov
iret
jae
dec
test
push
xchg
les
scas
incb
jnp
jno
and
sbb
or
mov
loop
sti
out
aad
cmc
movsl
mov
adc
fidivrs
ret
fucomp
scas
jl
push
mov
call
stos
es
pop
rcrl
lods
mov
inc
push
inc
mov
xchg
xchg
ja
insb
jle
sti
stos
lret
xor
cld
pop
pop
sahf
and
fsubl
hlt
push
pop
mov
ret
decl
lcall
test
or
jecxz
jecxz
xchg
jns
xor
sbb
mov
dec
sub
inc
xchg
int3
jle
hlt
mov
in
add
pop
std
pop
mov
cmpsl
icebp
adc
cli
in
outsl
and
and
movsl
sub
mov
or
jne
sahf
pop
cld
dec
arpl
call
xor
adc
gs
cmpsb
dec
les
scas
adc
call
lahf
inc
pop
scas
xor
push
das
ficomps
addr16
loopne
sahf
and
sti
in
cmp
and
jo
xchg
pop
sub
out
setno
or
push
inc
ds
push
jbe
loopne
ljmp
outsl
imul
insb
data16
dec
mov
mov
sub
push
cmc
lods
das
xor
adcb
jl
rorb
mov
mov
in
cmp
mov
jne
pop
inc
arpl
fimull
rorb
out
xchg
fists
lret
sbb
fistpll
cmp
xchg
dec
fistpl
addr16
jnp
mov
bound
push
test
out
lret
imull
add
sub
or
dec
push
xchg
in
sub
sub
imul
push
dec
popf
ss
mov
lret
mov
adc
jbe
mov
ss
cld
gs
aas
int
fisubl
scas
adc
dec
les
sub
popf
xchg
cmpsb
sub
xor
xlat
rorb
mov
aad
mov
loopne
fldt
sbb
aaa
fwait
push
push
faddl
xor
mov
jmp
add
inc
sbb
in
mov
insl
dec
mov
pop
lahf
and
aas
jmp
jge
jns
or
and
add
sahf
jp
jnp
jno
push
insl
add
mov
nop
fsubp
add
mov
mov
popa
adc
movsb
int3
or
in
leave
mov
mov
mov
xor
hlt
cmp
dec
insl
in
ja
mov
ds
jmp
jmp
jnp
mov
xlat
out
xchg
mov
and
mov
fadds
stc
jg
jb
sbb
rclb
repnz
movsb
mov
jmp
int
mov
push
add
in
inc
repz
jge
or
adc
adcb
or
femms
pop
cmpsl
and
jg
test
mov
xor
lock
mov
popa
popa
fisubs
add
test
sahf
hlt
mov
pop
inc
mov
xchg
call
dec
filds
mov
stc
sbb
and
xchg
in
jle
cmc
movsb
shll
sbb
div
fldt
jae
or
jmp
xchg
lods
in
stos
fs
into
cmp
aam
inc
pop
sub
xlat
push
mov
push
call
sub
aas
add
adc
fcomp
sbb
xor
add
outsb
inc
inc
lret
cmp
xchg
sbb
lock
call
push
fmuls
sub
movsb
pop
cli
jne
cmp
xor
outsb
xchg
add
in
pop
mov
or
in
cwtl
aad
push
jb
xor
xor
jecxz
imul
adc
xor
dec
or
aad
jecxz
mov
aas
ds
inc
jl
mov
inc
mov
imul
inc
in
in
cmp
cs
adc
xor
inc
pop
and
call
call
outsl
js
sti
add
mov
mov
inc
popa
add
add
cmp
and
popf
iret
or
jno
mov
js
in
out
pushf
out
mov
lods
das
sbb
xor
orl
iret
cmp
mov
mov
jmp
add
scas
test
jg
ja
mov
add
pop
in
and
icebp
stos
daa
push
out
loop
push
mov
xchg
daa
idivb
outsl
mov
mov
inc
enter
pop
enter
jne
incb
jp
cmp
scas
rcrl
imul
pop
ljmp
out
ss
mov
popf
inc
xchg
lret
ficoms
mov
xlat
cmp
popa
sbb
mov
repnz
xchg
inc
mov
test
loopne
insl
rcll
js
sbb
ret
pop
jae
mov
sub
dec
pop
addr16
scas
rolb
fidivl
dec
adc
or
push
add
or
mov
mov
stc
mov
adc
sarb
xor
sbb
je
loope
push
into
aad
mov
mov
bound
jbe
loope
jecxz
jnp
sbb
xchg
les
loopne
adc
addr16
daa
mov
adc
jns
jbe
cli
dec
xor
sarb
push
pop
out
loope
cld
jae
dec
cmp
mov
xlat
lret
fwait
jae
mov
shlb
jo
adc
addr16
push
scas
xor
jo
fdivp
push
in
clc
popa
adc
add
push
fs
sti
iret
pop
or
fs
pop
dec
repnz
and
sti
test
scas
adc
sbb
dec
or
push
fs
movsb
cmpsl
into
das
pop
ret
scas
cmp
sbb
inc
lahf
sub
add
push
cmp
pop
lds
pop
sub
dec
bound
jae
stos
pop
jle
movsl
dec
jo
push
fnsave
xchg
sub
sti
adc
dec
mov
sub
mov
bound
dec
std
pop
int
lcall
add
or
lea
adc
push
inc
sub
repnz
xor
enter
mov
adc
mov
xchg
sbb
xchg
sbbl
int
aad
jg
out
sub
imul
pop
js
sub
add
sti
shrb
inc
mov
std
nop
loopne
push
xlat
int
sbb
nop
add
inc
popa
pushf
rcr
orl
jno
add
adc
mov
xchg
popf
cmp
xchg
in
sub
adc
idiv
dec
or
sub
xor
xor
xchg
cltd
pusha
pop
fistps
lods
mov
nop
adc
push
xlat
mov
iret
and
repnz
add
xor
add
xchg
and
add
sbbb
fidivs
into
lcall
or
mov
jmp
xchg
adcl
fnsave
daa
and
std
loopne
and
bsr
sub
jae
push
dec
push
xor
xchg
sbb
mov
xchg
sub
int
enter
xchg
jg
mov
je
cmpsl
in
cmpb
xchg
dec
mov
scas
pop
mov
inc
add
addb
push
lock
mov
push
repz
sub
pop
jl
std
shlb
xchg
pop
loopne
inc
push
mov
les
add
mov
sub
mov
push
stos
push
scas
je
call
int3
in
mov
dec
adc
sbb
inc
shlb
mov
into
stos
fsubs
les
push
cld
pop
mov
push
les
mov
pop
cmp
push
and
xor
push
push
inc
push
into
or
jbe
pop
or
scas
les
test
outsb
xlat
lds
cmp
out
mov
inc
pop
and
mov
mov
test
push
scas
pop
push
pop
popa
sti
ja
jbe
adc
adc
xchg
and
sub
fldcw
into
leave
pop
mov
out
lods
bound
mov
je
adc
mov
les
push
jp
movsb
adcl
add
shrl
inc
jge
andb
dec
push
mov
inc
movsl
inc
into
rorl
fnstsw
bound
inc
sbb
test
adc
push
xchg
lea
jle
add
faddp
cmp
sahf
inc
mov
mov
sahf
std
mov
mov
and
fs
shrb
jp
loope
mov
popa
push
and
pop
adc
das
in
bound
sub
cmp
sbb
lret
cmpsl
cmp
shl
mov
lahf
inc
push
lahf
dec
jl
mov
xor
pop
xor
das
or
repnz
icebp
cmp
push
std
cmpsb
stos
sub
jecxz
hlt
mov
sub
xlat
sti
aam
lods
clc
int3
outsb
pop
add
inc
jne
mov
mov
mov
xor
inc
aam
dec
rcrl
cld
popa
stc
das
inc
sbb
xor
nop
mov
out
add
xchg
loop
out
and
and
fstl
int
insl
xlat
stos
in
add
shr
fsubs
jnp
mov
pop
sbb
and
cltd
dec
add
sub
ds
call
add
imul
nop
aad
xor
xchg
nop
stc
fadds
es
mov
add
pause
mov
int3
lods
dec
fdivrl
in
movsb
mov
test
lahf
minps
adc
cmp
push
or
adc
mov
lds
xor
jp
or
out
sub
and
ret
mov
push
es
outsb
dec
out
imul
cld
cmp
push
mov
push
rorb
out
jl
cmpxchg
movsb
push
mov
inc
scas
jle
sub
mov
push
lods
xor
popf
xor
addr16
cmpl
sahf
in
sub
and
insb
in
sub
adc
mov
sbb
dec
nop
rol
lds
cmpsb
in
push
sarb
dec
or
add
daa
clc
adc
jge
cmc
mov
rcrl
aad
xchg
adc
cmp
dec
test
dec
std
cmc
insl
in
mov
lret
mov
xor
fnstcw
mov
sbb
jp
outsl
aad
aad
and
inc
cmpsb
arpl
scas
test
fucomip
xor
xor
int3
int
fldcw
lret
iret
push
lcall
pop
imulb
bnd
cmp
cld
imul
inc
xchg
jecxz
ja
jbe
or
outsb
add
inc
and
fildl
sahf
sub
sarl
fcomi
xchg
cmp
mov
aas
loopne
and
fs
mov
inc
mov
jp
loopne
mov
scas
popa
push
or
dec
js
pop
sbb
push
rorl
mov
dec
add
inc
hlt
and
stos
inc
lcall
in
lock
mov
mov
and
pop
add
std
movl
pop
lahf
mov
iret
mov
cli
insb
and
inc
aad
push
pushf
mov
pop
ret
push
push
mov
sbb
aad
mov
add
sub
lcall
add
push
bound
scas
inc
mov
mov
cmp
rclb
jnp
dec
inc
pop
dec
fbld
add
mov
repnz
out
adc
add
cmp
push
int3
push
imul
push
call
aam
mov
scas
or
xor
xchg
xchg
ja
out
dec
inc
and
arpl
ljmp
aas
fcomp
aas
repnz
insb
add
mov
xchg
push
push
adc
mov
int
hlt
lret
lods
adc
xchg
inc
jo
cmp
fnstenv
push
xor
mov
and
inc
sti
shlb
pop
data16
cmpsl
adc
es
mov
arpl
subb
jge
lock
int3
cmp
pop
and
xchg
sbb
xchg
js
mov
xchg
nop
mov
or
ja
inc
loop
out
imul
and
adc
outsb
movsb
icebp
or
stos
mov
out
leave
sub
scas
out
adc
shll
cltd
push
int3
imul
iret
pop
int3
cld
adc
shll
push
pusha
adc
mov
cmp
jp
cmp
stos
lcall
pop
add
cld
lret
loop
inc
insl
inc
inc
xor
and
jno
cmp
add
push
subl
enter
mov
test
mov
xlat
into
cmpl
adc
add
sub
xor
push
add
pushl
adc
or
cmpsl
mov
or
mov
test
test
loope
fnsave
lea
cltd
push
fisubrs
lret
adc
stos
std
push
enter
fsubl
inc
pushf
ss
cld
mov
jne
xor
pop
mov
adc
fucom
sahf
std
and
fnstenv
add
mov
jnp
out
xchg
loope
mov
rclb
not
pop
aad
lcall
sbb
cwtl
decl
out
daa
inc
xchg
cmp
sub
inc
popf
enter
mov
out
icebp
sahf
push
push
repnz
shlw
icebp
add
addr16
or
popf
xor
mov
pusha
je
and
mov
jle
mov
loope
decb
jnp
outsb
pop
or
adc
pop
rcrl
cmp
xchg
shrl
scas
mov
loopne
pop
ss
pop
in
icebp
fstp
mov
xchg
pop
int
clc
nop
mov
add
pop
inc
mov
xchg
fsubp
and
sahf
inc
jl
lahf
in
and
dec
rorb
out
scas
sbb
pop
rol
nop
push
lock
shr
inc
ss
xor
cmp
scas
push
mov
or
mov
fcmovbe
pop
pop
loopne
xor
test
ja
lcall
das
sbb
and
je
lcall
insb
aad
xchg
int
pop
xchg
test
fcmovb
inc
ss
adc
or
pop
sbb
mov
pusha
cmp
adc
dec
test
pop
and
pop
lret
or
loope
sahf
mov
mov
inc
adc
push
pop
inc
mov
pushf
in
test
dec
pop
xchg
mov
xchg
mov
lret
lea
xor
call
insb
call
stos
mov
hlt
sbb
mov
jo
xchg
mov
bound
lahf
std
sub
insb
clc
jecxz
sub
push
orb
sbb
add
rol
adc
adc
add
dec
dec
out
sarb
test
popl
pop
sar
mov
dec
sti
jp
aaa
jnp
xor
add
push
dec
cli
cs
cmp
shlb
mov
ljmp
bound
out
adc
std
bound
shll
mov
cltd
pop
fsts
call
lods
subb
inc
adc
add
push
mov
mov
dec
jne
nop
pop
mov
repnz
sub
sti
xor
ljmp
out
mov
loope
mov
xor
mov
in
stos
int3
jge
jecxz
inc
or
std
mov
int3
ror
les
lds
cmp
inc
cli
cmp
aam
sub
das
push
push
call
mov
pop
scas
jb
inc
ss
mov
clc
dec
add
in
inc
cmovl
cmp
jmp
addr16
dec
pop
mov
sbb
mov
adc
daa
adc
pop
add
or
push
xchg
aad
pushf
xchg
adc
sub
sub
push
inc
mov
insb
test
and
jo
push
push
cmpsl
push
fidivrs
xchg
xchg
incb
int3
adc
sbb
adc
lods
lods
mov
movsl
push
das
sti
inc
mov
jbe
bnd
pushf
add
addr16
jg
insl
hlt
xor
or
push
cmpsl
in
test
inc
daa
dec
cmp
icebp
sub
out
or
hlt
pop
sti
lea
out
pushf
jne
into
cmpsb
ljmp
dec
or
les
incb
je
test
jge
jg
iret
xlat
int3
mov
inc
push
xchg
push
inc
mov
dec
pushf
jnp
pop
fstps
or
cmpsb
cmp
insl
adc
repnz
jecxz
adc
loop,pn
jo
stc
sub
ljmp
adc
or
cmpb
enter
mov
pop
jns
dec
in
pushf
pop
push
add
xchg
xchg
div
mov
sub
mov
aas
in
arpl
xor
aad
shll
sahf
or
es
xchg
jecxz
add
mov
rolb
mov
adc
in
outsl
push
repnz
and
mov
dec
scas
sbbb
movsl
rcll
jle
and
lcall
test
dec
sti
fcoms
scas
data16
out
xor
adc
pusha
dec
cmp
aad
xchg
in
outsl
push
repz
dec
stc
mov
addb
lea
jns
test
dec
dec
les
xchg
outsb
push
gs
add
sub
push
fisubl
addr16
inc
lcall
sbb
fwait
xor
adc
lods
mov
adc
jo
lods
jb,pn
adc
loop
inc
inc
rorl
adc
out
je
movb
test
add
mov
cmp
lock
or
sub
jae
lcall
fdivr
adc
popa
dec
faddl
add
imul
push
rorl
cmp
xchg
fnstsw
and
imul
pop
dec
jbe
or
xchg
loopne
fadds
jmp
mov
jno
pop
xchg
clc
pop
xchg
shrl
adc
outsb
arpl
cld
pop
push
bound
sub
push
fimull
loopne
loope
nop
inc
scas
cmc
xchg
jmp
cld
outsb
arpl
fs
jmp
lcall
pop
and
adc
mov
sub
sub
mov
cmp
inc
sbb
xchg
mov
daa
pushf
das
adc
sub
xor
mov
jbe
idivl
xchg
adc
xor
push
dec
pop
call
arpl
leave
xchg
out
jo
out
push
mov
stc
xchg
sub
imul
push
cwtl
jg
sahf
pop
je
xchg
lods
cld
dec
push
mov
popf
adc
arpl
push
mov
mov
ljmp
into
mov
pop
hlt
inc
sub
dec
adc
xchg
jge
sti
mov
loope
or
pop
das
in
jb
push
dec
push
push
mov
lret
pop
test
in
cmpsl
jp
es
add
rolb
arpl
pop
and
adc
pop
jns
aas
sub
jo
jge
push
push
out
out
add
jno
push
mov
sbb
ss
inc
pop
mov
das
les
xchg
push
mov
jle
cs
mov
bound
inc
push
ds
test
scas
imul
call
mov
inc
lret
mov
xorb
adc
push
pop
mov
cmc
or
push
insl
jae
sahf
mov
add
andl
mov
xor
cmp
imul
sub
daa
or
or
das
aas
xlat
sbb
jno
or
adc
ss
sbb
xchg
dec
cltd
xchg
mov
xchg
adc
or
test
dec
cwtl
call
rorl
insl
shlb
and
and
dec
imul
rclb
repz
movsb
scas
inc
and
mov
lods
jmp
shll
mov
dec
sub
popa
movsb
pop
inc
pop
mov
mov
test
shr
iret
lcall
xlat
rorb
std
or
loopne
cmp
mov
push
rolb
jl
add
jo
aad
add
jno
lret
xor
mov
sarb
test
mov
inc
mov
in
stos
ljmp
lahf
mov
and
into
inc
sarl
xor
cmp
push
outsl
jnp
imull
stos
and
xchg
int3
adc
adc
adc
fistl
cwtl
pop
add
sbb
subb
push
je
adc
add
lock
shlb
in
push
cmp
mov
cld
or
test
fisttpll
mov
aad
sub
xlat
xchg
imul
cltd
inc
inc
repz
jmp
cmpb
ljmp
pop
cmp
test
mov
out
jge
je
aas
mov
stc
add
ret
xlat
dec
dec
pop
xchg
sahf
push
in
mov
push
or
cmpsl
or
push
or
mov
iret
sub
arpl
mov
dec
mov
jne
sub
push
pop
lods
inc
icebp
jg
lret
ds
and
xor
pop
adc
mov
movsb
dec
fs
push
pusha
into
aaa
lds
pop
shll
lods
addr16
insl
daa
xchg
jg
mov
mov
push
xchg
mov
push
popf
cmpb
mov
push
push
jge
inc
mov
or
jmp
mov
sub
shl
dec
bound
rcll
sti
mov
cmp
add
pop
aaa
jp
ss
cld
pop
inc
test
sahf
addr16
push
push
inc
fadds
arpl
dec
mov
and
push
cmp
inc
or
in
xorl
arpl
lock
mov
cld
jg
mov
xchg
mov
movsl
std
cmp
fwait
push
aaa
or
and
lcall
fldcw
cmp
xchg
mov
push
cs
call
push
scas
jne
repz
mov
sbb
cmpsl
jecxz
fcoms
sub
sub
out
dec
aad
sti
rorb
push
adc
rcl
test
fdiv
and
sti
push
push
cmpsb
and
nop
mov
jp
je
dec
fstps
lcall
ret
stc
xchg
fists
mov
pop
adc
pushf
add
jle
int3
jbe
icebp
fwait
movsl
pop
dec
sbb
loop
inc
ret
or
cmp
pop
xor
aaa
cmp
mov
mov
adc
jns
mov
add
lock
inc
cli
jle
dec
in
jno
lock
int3
stc
shrb
add
pop
push
pop
or
clc
xlat
mov
mov
scas
gs
inc
pop
in
gs
stos
xchg
cmp
shlb
jbe
xchg
and
stos
pop
dec
mov
push
adc
out
jno
cmpsl
mov
shrl
jae
sub
int
mov
jo
nop
add
jno
mov
popa
cmpsl
shlb
dec
or
or
jle
mov
mov
adc
push
cmc
mov
fnstenv
mov
fists
xchg
push
xor
adc
mov
mov
sbb
pop
jmp
aaa
imul
ds
dec
add
addr16
xchg
imul
xchg
jmp
popl
in
jmp
dec
push
mov
lods
cld
xor
out
push
dec
mov
lahf
je
loopw
nop
mov
push
std
jg
pop
fdivrs
xchg
sub
cwtl
mov
mov
cmpsb
imul
sub
hlt
jp
movsl
ret
sub
bound
xor
sbb
xor
iret
sub
push
add
jns
test
push
ror
jne
fdivrp
aaa
mov
shrb
sub
cmp
mov
stos
sahf
ret
data16
sub
xchg
dec
xchg
test
dec
stc
decb
push
sub
es
call
mov
mov
call
xchg
sbb
or
or
xchg
sbbb
fstl
aad
push
xlat
or
xlat
movq
lods
sub
bound
pop
scas
cli
aas
mov
cmp
fs
loope
xor
into
popa
loopne
mov
xchg
test
sar
push
cmp
outsl
pop
mov
sub
mov
cs
ds
mov
sbb
xchg
gs
push
sbb
jne
imul
mov
ret
and
mov
cmpsb
add
lock
insl
and
mov
sub
jno
sarb
push
inc
sub
sbbb
inc
int3
in
mov
push
pop
ret
cmpsb
xchg
lea
push
cmp
test
add
fidivs
sti
adc
test
or
mov
jmp
repnz
leave
push
dec
pop
mov
jbe
clc
jne
push
imul
pop
mov
stos
jns
outsl
xor
mov
xor
lods
mov
sbb
adc
es
addr16
jne
xchg
pop
sub
clc
insb
insb
add
rolb
jecxz
pusha
ret
pop
pop
stos
nop
adc
fimull
dec
mov
xor
push
imull
leave
shrb
popf
ds
test
pop
dec
push
dec
push
or
repnz
rorl
mov
jecxz
sbb
clc
out
cmp
jecxz
jmp
mov
pushf
or
xchg
insl
push
xchg
jne
mov
pop
incb
ds
xor
enter
pusha
mov
xlat
sbbb
cwtl
or
sub
adc
or
mov
push
sub
fdivp
inc
xchg
cmpsb
scas
ss
jae
bsf
lret
mov
popf
popf
add
fsubrs
ds
testb
js
cld
leave
jne
cmc
sbb
sub
jmp
inc
jae
inc
mov
addr16
int
je
pusha
xchg
rorb
jne
lret
pop
sbb
nop
inc
and
sub
push
das
popa
and
clc
and
cmp
stos
outsb
out
dec
push
ficoms
addr16
bound
adc
jmp
test
aad
sub
xor
in
test
mov
or
ficomps
test
popa
cmpsb
out
xor
inc
xor
mov
add
outsb
sub
mov
sub
shl
jmp
inc
mov
loopne
ret
dec
orl
les
pop
and
xchg
lock
rclb
scas
pushf
jns
loopne
cld
dec
mov
mov
jp
push
fsubp
sti
sbb
xchg
add
dec
jmp
sub
push
hlt
dec
push
popa
sub
pop
lds
and
fidivs
sahf
add
jle
repz
cmc
fwait
rorb
ror
or
pop
and
mov
push
testb
jae,pt
test
xor
adcb
stos
jae
scas
push
sub
fisubrs
lock
in
int
xchg
add
testl
jmp
iret
stc
decb
xchg
insb
jne
xchg
les
inc
sub
mov
push
movsl
mov
xchg
jae
aas
arpl
push
mov
daa
jle
add
sub
xchg
std
inc
cmp
jmp
clc
sbbl
mov
fildll
push
cmp
xor
adc
xor
addr16
pop
imul
sahf
xor
fistps
dec
jg
outsb
sub
push
pop
push
xor
xchg
cmp
mov
dec
jns
pop
bound
cmp
or
mov
ds
je
push
push
stc
sbb
int3
cmp
dec
inc
out
test
shrl
nop
fidivrs
lahf
shrb
das
outsl
sub
incb
push
or
push
sub
cmpsl
pushf
test
into
test
mov
pushf
sub
add
add
cli
movsb
fs
fcomps
xorl
es
cmpsl
es
pop
xchg
pop
and
ja
cmpsb
lcall
shrb
or
pop
call
clc
sub
add
adc
and
jmp
adcl
test
cld
fstp
jne
jle
lods
sbb
cmp
dec
mov
jns
or
jo
xchg
mov
push
bound
subb
cmp
icebp
into
cli
adc
xchg
stos
jg
add
xor
enter
mov
push
mov
sub
mov
mov
xchg
adc
push
xlat
and
lods
das
mov
fildll
adc
pop
das
xorb
push
loop
lcall
pushf
sub
xchg
mov
cmpsb
fnsave
aaa
popf
adc
push
imul
movsl
cld
icebp
mov
dec
or
movsl
inc
pop
imul
ret
adc
jae
les
add
cltd
xchg
pop
and
mov
ja
or
leave
and
popa
popl
popa
nop
and
roll
xlat
lods
repnz
nop
push
shlb
push
hlt
mov
and
cmp
or
push
inc
dec
adc
push
shrb
pop
ret
cld
rcr
cwtl
sub
inc
xor
sahf
ss
arpl
dec
jno
outsb
dec
or
loop
cmp
xchg
mov
clc
fsubs
popa
xor
outsb
add
rcll
push
test
xor
ret
mov
cmp
dec
shrl
adc
lret
sbb
mov
mov
cltd
clc
in
lock
ret
ret
jl
inc
mov
mov
inc
and
mov
adc
dec
ljmp
xchg
xchg
xor
out
outsl
adcl
push
xchg
sahf
pushl
mov
lahf
iret
dec
push
cmpsl
push
pop
pop
lret
ds
sbb
sub
xor
or
mulw
sub
call
les
xor
inc
mov
fists
inc
xchg
pop
xchg
aad
fs
push
dec
ja
add
ds
dec
jns
lds
daa
xchg
movsb
orb
cmp
std
push
fsts
hlt
in
mov
les
in
mov
cmp
sarb
push
repnz
lock
into
xchg
cli
mov
lea
adc
pop
repnz
lds
in
pop
iret
pop
push
mov
sub
mov
inc
sbbb
pusha
repnz
mov
jae
das
jno
dec
adc
sub
mov
jmp
aas
xchg
popf
lahf
or
push
rol
sub
sbb
cmp
cmp
xor
xor
pshufw
ljmp
out
cmp
mov
xchg
push
sub
jne
out
add
pop
ljmp
fisubs
xchg
and
inc
and
mov
aas
shlb
mov
xor
sahf
data16
cmp
mov
lods
adc
xchg
inc
mov
or
xchg
cltd
lret
jns
scas
mov
sti
push
sbb
mov
mov
mov
jmp
out
jmp
test
adc
sti
mov
shrl
push
cmpsl
fimuls
repz
inc
clc
fs
in
push
ficoms
dec
cmpl
fstl
pop
ja
pop
sub
lcall
pop
adc
or
dec
mov
pop
in
sbbb
in
xchg
sub
rorb
jno
rol
loopne
loope
std
insl
xchg
pop
xor
test
loopne
push
cmp
test
jmp
xchg
sub
ficomps
scas
das
ret
scas
inc
pop
xor
cmpl
xchg
push
fcmovnbe
inc
and
js
fmuls
mov
xchg
aam
dec
fst
int3
push
sub
mov
or
add
hlt
push
leave
jge
push
nop
sbb
push
jno
xchg
fildl
add
inc
pop
mov
and
jne
pop
negl
ja
sub
adc
jl
and
pop
dec
cs
js
pop
daa
jne
lret
pop
das
cld
xchg
inc
enter
mov
sub
insl
ja
into
popf
mov
movsb
mov
in
push
xorl
xchg
mov
sub
repz
xchg
pop
push
fcompl
pop
jle
popf
fcmovnbe
mov
push
repz
lds
xchg
add
xor
jnp
mov
sahf
scas
and
shr
cmp
sbb
shrb
loop
mov
sbb
test
sub
mov
sbb
pop
ficoml
jmp
xchg
mov
fldl
jb
movsb
enter
mov
mov
scas
mov
jbe
sub
mov
cmp
mov
mov
mov
popf
mov
pop
int
test
lods
ucomiss
ret
jns
imul
es
inc
inc
fldcw
loopne
mov
add
out
addb
jo
adc
push
frstor
push
popa
mov
iret
or
stos
int
add
or
xchg
push
aas
pushf
mov
bound
out
xor
mov
push
lahf
insl
das
sbb
in
mov
jge
les
pushf
das
add
cli
adc
sub
mov
xchg
in
in
sbbb
pusha
into
insl
aam
lock
push
hlt
sub
sbb
lock
dec
sub
in
dec
mov
repnz
fucomp
cmp
lods
adc
jb
fldcw
xchg
cmp
push
icebp
aas
int
cmp
orl
dec
mov
es
leave
into
inc
cmc
xor
mov
dec
pop
int3
stos
xchg
neg
inc
mov
push
pop
push
mov
mov
xor
cmpb
ss
leave
lds
in
cs
push
xor
sub
push
push
lahf
or
push
arpl
push
in
push
push
cwtl
mov
dec
cmp
mov
jmp
sbb
and
call
jl
cmp
daa
mov
xor
sarb
mov
outsb
aaa
jl
xchg
pop
popf
test
aaa
jmp
pop
bound
lea
mov
push
xchg
jb
and
mov
adc
jle
xor
insb
push
fisubrl
stc
outsb
subb
aad
lea
jno
or
sbb
cmp
sbb
cld
jnp
leave
push
dec
fstl
push
add
ret
xchg
inc
out
out
jae
into
add
dec
shrb
jp
push
ficoml
inc
cmp
fadds
fiadds
repnz
gs
rcrl
jecxz
sub
mov
out
mov
pop
shrl
inc
mov
mov
and
push
sahf
test
mov
mov
add
ret
push
into
sbb
sbb
jecxz
or
pop
cs
sub
xor
cmp
mov
arpl
out
xor
xchg
inc
xlat
test
jl
leave
mulb
push
mov
xchg
or
test
cmpsb
or
jp
cmp
push
mov
xchg
pushl
fistpl
mov
and
test
sub
imulb
call
mov
inc
push
and
scas
mov
fnsave
pushf
jo
imull
push
ret
jnp
push
shrl
jge
lods
testb
push
or
cmp
ss
push
daa
jmp
lds
psllw
inc
fstpt
xor
imul
xchg
loopne
pop
jns
test
das
sahf
adc
sub
shlb
inc
mov
mov
push
push
andb
adc
xchg
jmp
cmc
popf
ljmp
push
call
std
dec
cmp
inc
dec
push
ja
rcrb
jne
push
ljmp
loopne
xor
mov
cmp
scas
jne
in
lret
pop
mov
mov
shlb
and
cwtl
or
shll
fists
sbb
int3
add
fists
lcall
push
lds
sbb
push
fnstcw
and
or
or
jl
pop
aaa
movsl
sbb
push
jl
jl
adc
rcll
xchg
sbb
xchg
cwtl
scas
gs
lcall
mov
es
cwtl
cs
push
outsl
xchg
mov
call
mov
ja
punpckhdq
jge
jg
and
fdivp
mov
or
sbb
test
stos
cmp
jecxz
pushf
out
repz
shl
test
or
je
xor
fwait
shll
adc
jo
cli
add
pop
xor
sbb
pop
mov
gs
cmc
shll
mov
das
add
arpl
cmpsb
inc
and
addb
ret
jl
lret
jae
add
ds
pop
mov
xor
jp
mov
or
sbb
ret
arpl
sbb
mov
xor
out
inc
data16
out
adc
mov
xchg
lods
xchg
pop
mov
pop
std
adc
xlat
adc
jg
xorb
dec
sub
xor
mov
fidivrl
int
fmuls
add
aad
xor
or
or
out
pop
inc
pop
inc
dec
pop
add
cmp
repnz
lods
inc
mov
lahf
loopne
out
mov
sbb
sub
mov
aaa
movsb
mov
adc
jno
push
inc
stos
lret
fsub
cmp
test
aas
lock
pop
lret
cltd
pop
xchg
dec
xchg
out
cmp
xor
add
pop
inc
mov
setns
aas
and
jle
es
loopne
ja
jg
mov
jae
shlb
sub
ret
inc
dec
mov
inc
std
sub
xor
xchg
add
inc
push
rorb
mull
in
pop
push
lods
test
mov
dec
jl
mov
pop
and
add
push
movsl
xor
xchg
jnp
lock
pop
pop
in
dec
sbb
mov
push
cmp
insb
inc
mov
loopne
shlb
or
cmp
mov
test
repz
push
int3
jp
mov
push
pop
jb
ja
hlt
mov
xchg
push
adc
clc
lahf
ljmp
jp
testl
jns
sbb
shr
mov
sub
xor
and
rorl
rorb
loope
inc
xchg
inc
inc
scas
insb
sub
push
int
fsubl
test
shl
dec
add
push
ret
mov
add
cmp
negb
subl
pop
sbb
jno
push
or
lret
and
jnp
jmp
dec
test
sub
pop
fs
lds
and
mov
dec
into
popa
mov
decl
push
mov
scas
pop
arpl
adc
xchg
push
pop
fcmovnu
sub
jnp
mov
es
rcrl
and
pop
inc
sbb
push
cmp
cmp
mov
push
jle
test
divl
mov
int
fcmovne
addl
add
sbb
dec
dec
pop
nop
xor
adc
xchg
nop
in
mov
out
insb
xchg
add
sub
nop
popa
xorb
push
popf
aad
or
and
push
lahf
aaa
inc
clc
sbb
cwtl
or
jp
leave
test
mov
cwtl
loopne
pop
sbbb
fs
sbb
je
jns
push
xchg
aaa
nop
mov
mov
and
lcall
cmp
xchg
mov
repz
mov
gs
movsl
xorb
loope
sbb
roll
pop
mov
test
outsb
aad
inc
add
sbb
push
lock
mov
test
jns
push
mov
ret
lea
pop
loop
lcall
test
sbb
scas
jp
mov
mov
lods
push
adc
imul
cmpsl
xlat
pop
fwait
mov
mov
int3
insl
mov
sti
adc
in
xchg
data16
stos
arpl
outsl
or
xchg
out
mov
stos
std
cmp
sub
xchg
aas
out
rolb
and
stos
inc
mov
pop
sti
pop
ds
jle
popa
aad
add
rcl
inc
sbb
enter
sub
enter
xchg
out
dec
daa
test
jo
cmp
test
adc
jbe
fdivp
jb
mov
pop
push
cmp
and
xchg
leave
stos
or
loopne
sbb
adc
test
das
add
push
outsb
mov
cltd
xchg
sub
xchg
mov
adc
dec
lea
les
fisttpl
and
iret
subl
jo
pop
shlb
inc
es
leave
xchg
negb
push
jmp
aad
sbb
cmp
icebp
iret
imul
adc
xchg
dec
inc
xchg
dec
jo
es
aaa
xchg
shll
sub
xor
dec
mov
insb
jns
fdivrs
inc
mov
mov
pop
mov
and
jl
fstps
sub
jle
inc
fsubr
test
push
lea
push
xchg
stc
nop
jb
fsubs
popf
cld
cmp
js
enter
mov
mov
stc
rcrb
fstl
pop
insl
cbtw
pop
loopne
jno
add
jp
mov
jne
inc
push
push
mov
addr16
mov
jge
insl
icebp
into
sub
ds
pop
shlb
mov
repz
jg
in
cmp
push
fdivr
cltd
jnp
scas
add
aas
loope
hlt
jno
js
in
les
movsl
lods
cmp
orl
rcl
jmp
xchg
xor
gs
sbb
add
lret
or
jl
jg
inc
push
push
jne
xor
ficoms
xor
nop
xchg
inc
stos
aad
stc
out
addr16
insl
mov
jns
mov
dec
mov
push
imul
stos
inc
mov
or
test
xchg
pusha
or
mov
xchg
in
sub
mov
sub
add
push
lods
xchg
push
insb
nop
sub
int
jmp
mov
sbb
sub
test
and
mov
xor
and
pop
sbb
and
fimull
sub
fadds
subl
jmp
mov
je
push
mov
imul
je
pop
stos
inc
jno
jle
mov
xchg
adc
push
shl
scas
inc
shlb
mov
dec
mov
std
xchg
add
push
scas
outsl
fwait
mov
out
adc
push
xor
in
je
jnp
xchg
cltd
push
xor
ret
fimuls
jno
fwait
sub
xor
jb
ret
daa
fcoms
in
mov
sub
mov
mov
add
pop
pop
push
cltd
js
and
xor
xchg
dec
sbb
push
pop
and
fs
iret
push
lcall
ret
data16
jns
repz
xchg
jle
shl
mov
addr16
push
aaa
dec
cld
adc
std
int
or
mov
nop
push
xchg
pop
ljmp
xchg
outsb
hlt
jmp
out
cli
js
mov
mov
sbb
push
js
out
jnp
mov
divl
into
adc
inc
fdivrl
and
xor
in
sub
sub
sbb
xchg
decb
aam
fdivs
inc
sbb
xchg
lods
mov
jmp
enter
jge
push
daa
fcoml
je
push
pop
aaa
pop
neg
out
mov
push
inc
inc
push
bound
jmp
push
pop
shrb
sbb
js
mov
loopne
jmp
mov
cli
roll
jnp
cmp
mov
add
dec
ret
or
cmp
cld
jp
aam
loope
jg
out
push
sub
repz
pop
aam
ret
pop
xchg
nop
rcrl
push
adc
dec
repz
adc
lods
out
cltd
fs
imul
mov
xor
shlb
scas
add
mov
ja
adc
mov
mov
shlb
jbe
mov
and
repz
mov
pop
lods
inc
pusha
shl
test
sub
lods
mov
xchg
inc
or
cmp
pop
push
sti
add
mov
pop
out
shll
push
mov
in
and
ror
or
ljmp
and
movsb
aad
inc
cmpsb
insl
fiaddl
sbb
cmpsl
xchg
jno
add
rorl
in
jl
shll
ret
jb
popa
popa
or
cli
out
lds
cmpl
xchg
sub
ret
sahf
imul
enter
sbb
mov
outsb
shll
shlb
pushf
fisubrl
hlt
sarl
dec
dec
rolb
jge
test
inc
mov
cmp
pop
and
and
dec
popa
leave
inc
fwait
push
stc
ljmp
movsl
cmp
adc
aad
out
adc
mov
mov
xchg
and
jmp
pop
adc
cli
test
popf
jge
cmp
cld
lock
sbb
shl
pop
jb
or
jae
fstps
mov
loope
dec
clc
sbb
xchg
xor
shrb
shrl
jg
sub
fxch
xor
std
mov
cmp
xor
ja
cmpsb
cmp
lcall
cli
insl
int
lahf
aad
xor
test
hlt
iret
sbb
sbb
pop
lcall
imul
lcall
inc
or
xchg
cltd
push
jecxz
loop
int3
adc
cmp
sub
and
pop
push
out
mov
dec
mov
mov
mov
stc
jge
jmp
popf
mov
mov
scas
lret
sbb
scas
mull
lock
int
mov
scas
sub
loop
out
sub
shlb
fimuls
cmp
fisubs
push
xor
roll
and
xchg
mov
mov
push
daa
aaa
fnsave
cmp
cmp
lret
stc
mov
pop
jmp
cmc
adcl
in
inc
pop
mov
and
jle
mov
jecxz
xchg
push
data16
jae
fiaddl
push
test
mov
adc
js
out
fwait
xchg
incl
push
inc
out
iret
dec
xor
cltd
cmpsl
ss
insb
out
ret
xor
loopne
or
jle
mov
cmp
and
push
xchg
fs
inc
imul
rcrl
lea
fisubl
inc
xor
pop
addr16
mov
fldl
pop
jo
mov
shll
xchg
cmpsl
pop
js
insl
jle
cmp
inc
xor
sub
imul
xorl
repnz
mov
iret
pop
lods
xchg
xchg
movsl
and
data16
cmp
xor
dec
ja
sbb
int
xor
loop
mov
jecxz
sub
add
std
push
ss
push
or
jle
push
xchg
lods
and
sub
in
into
dec
mov
pop
lea
or
aad
repnz
cmp
cmp
fsubl
mov
lods
rcrl
les
repnz
std
sub
out
loopne
sub
cs
add
idiv
cltd
popa
hlt
xor
cmp
pop
rorl
add
inc
dec
add
lea
test
sub
out
xor
insb
inc
int
push
dec
in
scas
scas
cmp
jbe
ss
xchg
mulb
int
push
stos
push
mov
xlat
fisttpl
rclb
add
arpl
mov
divl
mov
push
popa
mov
pop
lods
out
pushf
dec
dec
pop
inc
ret
and
push
jle
mov
inc
popa
imul
jmp
pushf
jge
xor
ds
das
not
and
push
movsb
outsl
jl
xorl
jnp
jo
cmpl
lods
in
test
mov
insl
mov
mov
cmovb
jecxz
arpl
loopne
scas
fs
adc
fcmovnb
sub
mov
nop
or
xchg
fdivrs
cli
loope
out
mov
pop
int
push
push
or
inc
js
dec
fiaddl
mov
sbb
fs
mov
sbb
sbb
jg
dec
mov
cmc
jnp
xor
xchg
jmp
add
cmpsl
cmp
rcr
mov
or
addr16
jl
fidivrl
mov
lret
insb
mov
andl
mov
outsb
sub
pop
sub
rcrb
dec
fiadds
pusha
nop
add
jbe
mov
pushf
out
xchg
decb
cmp
jp
ret
jns
imul
mov
cmp
mov
ds
mov
or
mov
bndstx
cmp
sbb
push
mov
and
xor
nop
les
push
lea
mov
fwait
inc
js
mov
pop
je
jae
fisubs
pop
adc
xchg
or
cmc
loop
insb
adc
loopne
sarb
sbb
add
or
sbb
mov
xor
add
lock
dec
out
mov
test
or
loopne
xchg
in
and
sub
or
aaa
sbb
push
sti
imul
enter
je
lret
lret
xchg
xchg
mov
enter
jb
mov
cmp
inc
sub
test
ss
call
data16
jle
lcall
inc
lret
clc
xchg
fcos
mov
xchg
mov
sub
and
in
popa
ret
cmpsl
mov
out
pop
stos
mov
cli
les
inc
sub
bound
test
mull
dec
fimull
push
dec
rcll
lds
pop
sub
in
push
adc
mov
sub
adc
xchg
sbb
into
adc
out
sbbl
aad
lret
cmp
js
push
jbe
out
xchg
dec
into
or
dec
mov
mov
and
and
sbb
xchg
lcall
addr16
xchg
les
fwait
xor
arpl
and
sbb
cli
jg
xchg
movsb
outsl
mov
pushf
jno
cwtl
mov
in
inc
pop
sbb
and
jge
jecxz
add
addr16
push
push
sub
xor
mov
push
daa
pusha
decl
adcb
in
daa
shrb
ret
adc
jge
inc
fisttpll
leave
jne
cmpb
add
mov
dec
call
push
mov
bt
int
sbb
cmp
les
std
fdivrs
mov
xchg
dec
xchg
ljmp
mov
test
push
shr
bound
cs
cmpsb
adc
pop
fbstp
pop
in
sub
push
lds
ljmp
or
out
pop
add
popa
repz
dec
pop
xchg
mov
sbb
clc
pop
aaa
mov
pop
fiadds
push
dec
push
aam
xor
je
or
jno
inc
mov
pop
out
testl
out
test
nop
sbb
cmp
or
pop
sbb
ret
fcmovbe
out
jge
and
xor
adc
and
adc
push
xor
hlt
jecxz
add
adc
stos
mov
push
jb
push
add
mov
int
mov
in
in
sub
jo
jmp
pusha
loope
pop
inc
loope
shrl
and
notl
push
xchg
add
add
jle
cmp
mov
jae
out
mov
xchg
mov
sbb
mov
ret
dec
adcb
cmc
movsb
test
leave
adc
shl
push
jb
cmpsb
arpl
lds
outsl
adc
push
dec
fcmovbe
inc
out
les
pop
mov
sub
hlt
call
xor
jle
in
sahf
test
fsts
pop
xchg
es
push
mov
sahf
xchg
pop
xchg
out
adc
lea
inc
dec
adc
xlat
sub
in
out
jns
pop
mov
movsl
into
xchg
nop
cld
cmp
sbb
loop
inc
inc
mov
fsts
out
stc
or
aam
jnp
jo
stos
pop
dec
pushf
push
jbe
and
push
les
mov
popf
in
int3
stos
sub
hlt
dec
push
push
nop
int
xor
and
arpl
jns
jo
and
xchg
inc
push
xchg
mov
gs
outsl
push
sub
aam
dec
ss
je
adc
imul
test
sti
xchg
inc
fs
int3
int
in
scas
sub
sbb
stos
mov
inc
gs
mov
test
xchg
mov
lock
add
dec
aaa
xor
lahf
pusha
hlt
sub
stc
call
mov
or
jp
push
into
ja
xchg
pop
fidivrs
ja
sbb
jns
sti
shrl
lret
stos
xchg
pop
mov
push
insl
repz
lahf
call
or
es
leave
sbb
mov
cmp
neg
das
cmp
sbb
or
jae
xchg
xacquire
enter
rorb
scas
and
js
push
pop
pop
pop
adc
jg
adc
andl
cltd
lahf
enter
pop
shr
ljmp
dec
push
loop
je
repz
out
popa
je
mov
in
adc
stc
or
cmpsl
rcl
pop
daa
push
jmp
fcomps
adc
es
add
xor
push
xor
jecxz
sub
int
jbe
inc
cmp
sbb
addr16
lahf
ret
xor
idivl
pop
mov
pop
mov
xchg
frstor
arpl
pop
mov
xchg
jne
leave
xabort
rolb
add
or
in
push
enter
cmpsb
test
jle
fbld
cmp
addr16
jb
movsb
cmp
scas
push
jp
xchg
push
inc
movsl
adc
sub
jge
xor
cmp
cmc
clc
insb
imul
mul
and
and
test
in
cmp
outsl
or
in
jmp
add
scas
push
mov
outsb
in
push
loop
fldln2
mov
in
mov
movb
pop
mov
xchg
xchg
arpl
aam
jg
xchg
push
adc
adc
adc
jmp
popa
add
loop
and
inc
jb
and
push
mov
add
movsl
jmp
cwtl
fldl
imul
loope
in
mov
filds
mov
mov
mov
fdivrl
cwtl
movsl
jg
gs
xchg
out
and
int
jp
test
cmp
popa
push
jno
in
and
pop
mov
shrb
push
in
pop
cmovb
dec
push
sbb
fnstenv
pop
imul
ja
jmp
mov
jb
call
pop
ss
fwait
sub
movsl
andb
outsl
imul
decb
nop
rcrb
sbb
fucomp
imul
cld
pop
scas
sahf
pop
pop
cli
mov
mov
lds
inc
arpl
xchg
push
jp
or
and
mov
lcall
and
lods
popa
add
mov
daa
bound
pop
mov
lods
test
jg
mov
cmc
aam
inc
xchg
adc
neg
ret
jp
add
mov
jne
imul
je
inc
push
lahf
xor
pop
xchg
push
jp
lret
xlat
fadd
xor
mov
fstpt
repnz
pop
xchg
rorl
pop
js
test
cmp
lcall
scas
daa
xchg
jl
push
inc
div
pop
or
cwtl
pop
shr
mov
aas
or
cmp
sub
sub
push
jns
scas
in
mov
mov
dec
cmp
jo
push
cmp
pop
gs
out
push
mov
inc
shll
cmp
or
jns
and
xor
pop
sbb
in
shl
mov
or
hlt
cmp
les
pop
xchg
push
inc
das
rcrb
stos
mov
lds
jl
outsb
in
call
pop
jge
cltd
mov
lret
sti
fbstp
inc
inc
nop
jnp
rclb
mov
push
push
fwait
xchg
xchg
push
mov
cmp
scas
in
ds
ljmpw
jbe
inc
ret
sub
xor
lods
sahf
mov
outsl
or
fwait
push
or
xor
rorb
pop
loope
or
data16
add
mov
fdivp
lea
call
js
sub
cmp
jge
sbb
out
adc
cmp
enter
fistps
icebp
stos
push
stc
jge
cmp
call
jns
dec
div
scas
mov
fs
sarl
negb
dec
cwtl
jmp
sbb
mov
mov
pop
rcrl
xchg
jecxz
test
and
je
jnp
imul
xchg
jbe
nop
cmc
stos
out
adc
mov
nop
mov
mov
mov
dec
sub
mov
xor
add
psraw
xor
cmpsl
aas
fwait
sarl
enter
xchg
inc
cmp
repnz
aaa
xchg
fistl
lods
push
cmp
and
fwait
add
test
add
cld
cmp
adc
push
xchg
xchg
mov
jns
and
push
inc
inc
scas
pop
sbb
dec
dec
and
and
hlt
sbb
es
aad
and
mov
pop
cmp
loop
push
mov
fmull
gs
cs
icebp
dec
xor
fcoms
cld
lods
sbb
fcoml
call
mov
arpl
sbb
test
ss
js
cltd
pop
cld
ds
lahf
and
pop
mov
lods
sbb
xchg
mov
sub
jne
mov
mov
cmc
sbb
inc
mov
fmull
icebp
and
aaa
xor
fstpl
stos
imul
adcb
and
stc
sbb
and
mov
push
mov
pop
adc
mov
das
cmp
dec
xchg
xchg
jnp
arpl
rorb
xor
xchg
ret
xchg
or
std
pushf
jge
mov
jecxz
iret
push
adc
dec
std
lds
paddd
into
or
sbb
pop
cmp
es
or
push
cwtl
stos
fs
bound
jp
pop
inc
xchg
mov
xor
jns
test
imul
out
nop
dec
movsb
xor
mov
mov
xor
stc
mov
or
xor
xchg
iret
xchg
cwtl
sub
sub
addr16
mov
inc
mov
jae
sbb
aam
add
mov
jg
sbb
scas
dec
push
pushf
cmp
out
fcmovnb
dec
pop
or
rcrb
jecxz
xchg
std
xor
pushaw
mov
iret
mov
test
xchg
out
dec
push
inc
test
push
pop
jae
jo
mov
push
mov
stc
mov
pop
ror
xor
inc
aam
popf
sub
sub
pop
and
in
mov
popf
dec
mov
xchg
push
nop
sub
rcrb
iret
nop
xlat
xchg
nop
xor
cltd
dec
or
cmp
dec
imul
jno
scas
pop
imul
rolb
movsl
mov
inc
sub
jge
ljmp
int
enter
mov
test
es
dec
fucomp
das
xchg
les
notl
lahf
or
outsl
sbbl
or
push
jo
arpl
test
std
mov
jb
jns
mov
in
mov
sub
mov
mov
and
mov
xchg
dec
pop
xlat
dec
ja
icebp
xchg
and
sti
stos
and
sub
push
cwtl
inc
or
ja
push
sub
fidivrs
nop
mov
mov
jae
repz
xchg
push
adc
mov
or
pop
loop
iret
shlb
adc
xchg
cmpsb
jb
cmp
cld
mov
pusha
pop
mov
in
out
push
push
cld
mov
fs
daa
call
push
mov
sub
addr16
xchg
inc
dec
test
arpl
mov
fistpl
jo
orl
dec
sub
loope
sub
and
mov
aas
movsl
xchg
imul
pop
and
jo
jecxz
dec
adc
xchg
jb
stos
cs
imulb
pop
outsb
jl
xchg
push
push
pop
test
mov
shl
pushf
inc
mov
arpl
push
movsb
push
mov
dec
push
cmp
adc
lcall
sbb
jmp
mov
xor
add
sbb
mov
pop
pop
jo
divl
hlt
jmp
sub
test
lods
lea
aam
adc
scas
fildll
cmp
into
lea
xlat
inc
jmp
icebp
add
cwtl
inc
daa
mov
outsl
pop
push
call
mov
push
inc
in
mov
fsubrs
push
enter
lcall
sbb
adc
push
bound
or
mov
mov
pop
sti
jp
inc
fildl
xor
adc
xor
cmc
jns
or
scas
test
add
pop
cmpsl
sub
sahf
dec
lret
gs
cwtl
cmc
mov
or
xchg
push
int
cmp
xchg
xchg
pop
inc
loopne
adc
addl
es
aad
imul
push
aam
sbb
push
xor
fmulp
mulb
popa
dec
shlb
test
negb
jne
gs
shl
mov
mov
sub
push
pop
test
adc
jns
pop
push
mov
xchg
and
imul
scas
sbb
jp
rcl
adc
data16
imul
aaa
loope
mov
mov
std
arpl
iret
cmpsl
fwait
imul
push
mov
adc
addr16
jl
pop
leave
cmp
push
adc
lods
mov
adc
je
outsl
and
xor
dec
sub
stos
ja
scas
mov
cltd
sbb
push
push
les
and
stos
stc
pushf
imul
and
mov
push
mov
imul
sbb
jmp
push
inc
inc
shl
es
jl
movsb
cmp
test
iret
adc
cld
rcrl
push
ret
mov
jmp
gs
sub
mov
insb
arpl
push
xor
popf
xchg
ss
mov
or
loope
scas
shll
sbb
aam
jecxz,pn
mov
cwtl
loope
icebp
in
inc
gs
sbb
mov
jecxz
js
sub
imul
inc
popa
icebp
add
addl
jle
xlat
outsl
mov
call
add
sbb
adc
inc
inc
pop
xor
lret
in
ficomps
add
dec
sbb
mov
mov
mov
fcompl
mov
pop
jne
inc
mov
mov
jae
cmp
arpl
test
fists
mov
mov
pop
lret
sub
xchg
pop
pop
add
mov
cmp
ja
int
popf
outsb
icebp
xor
add
push
mov
add
jmp
leave
or
sub
in
ljmp
xor
je
cmp
jne
gs
in
fwait
insl
std
xor
ror
call
sub
mov
cmp
movb
mov
cs
test
and
subb
push
jmp
add
lods
std
xor
and
push
push
out
dec
jp
pop
sbb
pop
sub
xor
inc
rorb
sbb
cmp
into
pop
pop
mul
jb
leave
dec
shll
cmpb
push
dec
sbbb
nop
cmc
jp
mov
push
adc
or
shlb
imulb
movsl
cmpsl
sub
loope
out
cmpsl
lret
test
jnp
rolb
mov
dec
out
add
orl
loope
xchg
mov
lock
lahf
push
mov
sub
add
into
push
inc
xor
fildl
scas
xchg
insl
out
push
test
in
mov
fstpl
xlat
and
out
stc
jns
pop
cmp
adc
push
pop
in
adc
fs
pop
dec
test
pusha
imul
or
pop
out
enter
mov
mov
and
scas
mov
lcall
cmp
cmp
ljmp
jnp
xor
mov
in
sbb
outsb
xor
xor
add
or
sub
cltd
loope
out
insl
add
pop
or
pop
xchg
mov
movsb
sbb
shll
mov
sbb
rclb
cmp
ret
popa
cmp
xor
mov
lods
call
out
inc
iret
jp
movsb
movsl
sbb
cmp
fisttpll
out
aaa
mov
xor
fs
push
mov
outsb
cvttps2pi
scas
mov
add
xchg
mov
stos
xchg
pop
stos
std
mov
mov
push
int
mov
loop
mov
out
inc
xorb
arpl
dec
pusha
insb
lcall
insb
mov
xor
addr16
dec
shlb
push
out
push
pop
lcall
mov
nop
stos
pop
test
popa
insl
pushf
mov
shrl
shlb
xchg
ret
call
rcl
loope
sub
sbb
xor
sub
call
adc
sub
aaa
int3
inc
cmpsb
je
dec
cmp
xchg
enter
xor
sti
stos
dec
and
cmp
and
or
pop
mov
cmp
fnstenv
jae
mov
mov
add
xor
dec
mov
jle
xchg
bound
mov
xchg
push
aam
fnstcw
and
adcl
mov
inc
mov
pop
mov
aam
mov
fidivrl
or
cmc
push
adc
jp
lret
adc
xchg
jg
adcl
enter
test
mov
sub
pop
mov
js
add
out
imul
sarb
adc
sub
mov
repz
push
mov
push
idivl
inc
je
ja
xor
push
and
pop
add
mov
jno
ss
shll
out
jle
mov
and
or
xchg
outsb
test
cmpl
mov
dec
cli
inc
sub
add
mov
nop
ret
adc
js
in
pop
mov
xchg
imul
mov
repnz
mov
adc
xor
push
xchg
add
movsb
ret
sbbl
push
push
sbb
aad
push
pop
les
mov
outsl
xchg
jbe
mov
ret
pop
dec
push
dec
sub
adc
and
inc
outsb
and
sub
adc
add
and
nop
cmp
mov
add
or
lahf
push
aas
mov
ret
inc
scas
jno
and
mov
les
ret
icebp
xchg
icebp
or
mov
jge
mov
xchg
mov
or
loope
icebp
subb
enter
jnp
xchg
inc
movsl
xchg
add
out
rclb
fs
adc
ret
stos
pop
in
xchg
imul
movsl
sti
xchg
jo
adc
leave
cltd
aad
or
jge
in
movl
sarl
xor
insb
adc
push
xlat
ds
sbb
push
lcall
pop
adc
das
movsl
mov
pop
mov
movsl
outsb
xor
mov
jno
std
or
sbb
stc
in
adc
inc
xchg
ljmp
aad
lahf
mov
mov
mov
aas
bound
sub
lret
loopne
mov
pushf
push
call
sbb
pop
pop
stc
xor
cmp
mov
push
xlat
sub
xchg
popa
mov
mov
pop
cli
lods
adc
mov
int
decl
mov
push
repnz
xor
incl
clc
mov
pop
movsb
sbb
lret
repnz
mov
clc
jp
or
adc
outsl
xchg
lds
sbb
aam
rolb
mov
int3
sbb
sbb
int3
dec
cld
mov
pop
ficompl
mov
sbb
mov
sbb
mov
call
lods
push
xor
jb
mov
dec
and
aaa
push
rorl
sub
shll
jne
aas
mov
and
mov
mov
aaa
hlt
test
mov
mov
lahf
faddp
ljmp
jae
or
mov
nop
out
sbb
inc
movsl
mov
data16
es
iret
addr16
hlt
cwtl
popa
inc
push
notb
or
roll
inc
out
inc
mov
push
push
shrb
repnz
jecxz
sub
jge
cld
dec
dec
xor
js
test
xchg
adc
cmp
imul
pop
or
mov
daa
test
dec
ss
inc
fmuls
dec
and
jle
lret
pop
arpl
and
sub
ss
in
pop
out
loopne
push
jb
into
push
loop
mov
or
sbb
fcoms
pop
jnp,pn
and
inc
out
cmp
stos
push
pop
outsl
add
xchg
repnz
stos
inc
stos
cmpsl
test
cmp
push
and
mov
sbb
dec
push
fldcw
call
or
std
push
lahf
repz
mov
enter
mov
adc
add
ss
mov
js
test
aad
push
inc
and
test
pop
mov
push
mov
mov
lret
add
dec
insb
inc
rorb
push
adc
adc
ja
mov
jo
add
mov
push
test
inc
mov
mov
xchg
repnz
inc
push
mov
mov
jge
push
push
jbe
push
andb
test
pushf
or
pop
pop
lods
jns
cmp
cmp
jge
in
push
pop
jns
add
imul
mov
dec
into
xchg
lods
mov
loope
pop
sub
dec
lret
or
outsl
js
cmp
cli
jns
xchg
sub
mov
inc
push
inc
adc
lds
push
pop
cs
loope
fistps
jne
sbb
fnsetpm(287
and
xor
insl
outsb
popf
ror
cwtl
popf
dec
ljmp
mov
test
pop
into
pop
popf
outsb
ljmp
clc
push
ret
push
mov
pop
ja
or
sub
fbld
and
sahf
sub
push
cmp
and
out
rolb
xchg
loopne
scas
push
sbb
push
cmp
in
fistl
push
das
xchg
pop
in
dec
add
inc
dec
loop
movsl
xchg
mov
scas
jecxz
fnop
or
mov
dec
in
jmp
adc
push
mov
std
rolb
mov
in
fdivr
scas
jmp
imul
mov
lret
cld
jbe
mov
bound
fwait
mov
adc
and
cmp
xor
das
cmp
sub
pop
out
pushf
into
dec
pop
sub
pushf
sub
and
jbe
imul
hlt
jno
jl
hlt
sub
or
push
cmpsl
pop
push
inc
xchg
jp
xor
outsb
cs
jg
in
fs
insb
pop
hlt
hlt
cmp
outsb
test
mov
test
in
rolb
sbb
cmp
mov
xchg
in
dec
add
hlt
pusha
xor
sub
clc
dec
sbb
testl
mov
scas
lds
jo
bound
sbb
mov
mov
push
jmp
cmp
insl
popa
ss
test
fwait
add
repnz
js
jae
jns
imul
pop
mov
sbb
loope
inc
pop
std
insl
xor
sti
lcall
mov
ja
loop
and
push
jno
nop
dec
shrl
test
mov
jae
inc
mov
adc
adc
cli
push
xor
std
add
paddw
jnp
mov
pop
adc
cmp
dec
cltd
jg
testl
add
mov
push
dec
sub
fdivl
add
loop
or
in
in
int
pop
call
lret
and
or
fimuls
pop
popa
lods
fmul
mov
ss
xchg
mov
div
jge
jl
and
and
mov
inc
mov
test
idivl
dec
cltd
jmp
clc
mov
sbb
bound
dec
sbb
ret
push
inc
jb
lods
push
cmp
int
inc
cmc
into
sbb
mov
jmp
test
cld
xor
rcrb
cmp
dec
loope
addr16
stos
sub
out
movsl
sub
jp
enter
lahf
xor
mov
icebp
mov
push
or
cmpb
fwait
or
nop
mov
xor
mov
insl
in
je
xchg
pop
xor
in
mov
sbb
je
scas
in
popa
sub
pop
inc
mov
mov
xchg
cmp
push
ljmp
cli
fs
pop
xchg
push
sbb
aam
pop
lret
sub
pop
dec
out
xchg
movb
sub
outsl
imul
leave
xor
outsl
negb
and
sbb
dec
stos
sbb
mov
add
fistpl
ds
xchg
add
nop
cmp
movsl
scas
ja
push
xchg
xchg
or
sar
js
inc
push
cltd
pop
mov
stos
xchg
rcl
imul
or
fisubs
dec
mov
sbb
fsubrl
pop
mov
lods
or
pop
arpl
dec
push
inc
adc
data16
cwtl
add
mov
movsl
popf
pop
pop
andl
mov
xor
js
insl
push
inc
pop
dec
push
lods
push
jne
roll
es
arpl
test
cmc
ret
pushf
jg
insl
es
leave
cmp
push
cwtl
push
jge
or
in
add
pop
fs
lock
jae
xor
incb
adc
into
rcrl
push
or
arpl
fbld
mov
push
jo
xchg
or
in
inc
jns
out
test
repnz
dec
mov
ret
shlb
pop
sti
mov
mov
ljmp
cld
mov
movsb
icebp
stc
fsub
jg
addr16
inc
or
je
adc
add
inc
push
mov
imul
clc
inc
std
insb
cmp
mov
mov
ljmp
movb
dec
xorl
daa
sub
sbb
dec
sarb
dec
sub
loop
cld
ss
cmc
push
fs
out
leave
mov
rol
push
sti
mov
sahf
aas
into
dec
dec
aaa
data16
xor
dec
repnz
mov
lds
push
push
sbbl
inc
addl
mov
shlb
imul
mov
cmp
dec
xor
lret
lods
xchg
inc
shll
repz
push
push
popa
ss
sub
imul
sub
sub
add
add
sub
sub
or
push
test
in
push
inc
xchg
pop
mov
shl
test
inc
dec
mov
push
and
jne
loopne
jnp
mov
popa
enter
jb
adc
adc
sub
pop
loope
dec
mov
fistpll
out
mov
mov
xchg
xchg
sub
inc
add
pop
xor
mov
push
iret
repnz
jae
xchg
test
popf
sbb
or
stos
cmpsl
sbb
cs
in
je
lret
inc
out
pop
push
xlat
pop
stos
mov
push
fildl
or
lods
popf
mov
hlt
cmpb
out
loope
pop
es
xlat
push
push
xlat
jmp
or
roll
fcompl
rorl
xor
sbb
jge
lahf
xchg
out
lret
aaa
loop
popl
xor
push
inc
cmpsl
sub
xchg
dec
pop
test
or
adc
xor
mov
mov
repz
ret
mov
cmp
bound
insb
fidivrl
xchg
or
outsb
cmc
fucom
repnz
mov
push
mov
mov
mov
mov
or
xor
mov
sbb
sbb
xlat
jb
les
jp
iret
inc
xchg
adc
out
fstpt
jle
out
xor
shr
adc
test
sub
roll
xor
adc
pusha
iret
movsl
adc
dec
mov
ja
js
mov
addr16
mov
mov
sub
sbb
imull
fldcw
outsb
popa
repnz
gs
mov
mov
insb
sub
mov
nop
mov
inc
movsb
sarl
cmp
out
xchg
sub
mov
mov
popl
and
testl
pusha
pop
cvtpi2ps
push
cmp
push
jmp
xchg
xchg
dec
ss
mov
jge
xchg
xchg
or
and
insb
cmc
pop
pop
cmp
fmulp
xor
inc
add
gs
and
loope
jecxz
sbb
pop
xchg
mov
pushf
push
sbbl
pop
jnp
xor
sbb
or
jecxz
aam
fdivl
pop
dec
inc
fimuls
mov
xchg
ss
cmc
cmp
cmp
or
out
cmc
les
arpl
inc
sub
mov
icebp
push
push
hlt
mov
mov
jl
pop
shll
dec
mov
ds
cwtl
or
dec
or
or
aaa
sbb
add
outsl
mov
sub
insl
push
ljmp
ror
ljmp
mov
adc
xor
and
dec
loopne
mov
jns
push
rcr
inc
test
and
jmp
xor
push
inc
popa
pop
cmp
cmp
shl
inc
movsl
pusha
je
pop
xchg
ljmp
mov
push
mov
dec
test
bound
addr16
mov
adc
insl
fisubrs
and
mov
mov
cmpsb
and
mov
int3
lods
enter
mov
lcall
jge
stos
pusha
pop
fcomps
imul
pop
and
test
inc
sbb
pop
and
cli
mov
adc
frstor
flds
sub
jecxz
in
pop
jmp
mov
jns
add
fidivl
std
outsb
cmp
mov
fdivrl
jne
dec
jge
sub
fildl
add
add
jl
in
fst
and
mov
data16
lods
xor
popa
clc
ja
sub
mov
bound
cltd
mov
fcompl
xchg
movsb
pop
mov
rcll
lea
push
cmp
lahf
dec
jb
and
mov
jmp
xchg
pusha
imulb
mov
lcall
pusha
mov
sbb
aas
int3
mov
push
aam
insl
out
mov
xchg
sti
mov
stc
xor
mov
sub
xchg
cmp
jns
and
dec
shrb
and
lret
sub
pop
push
fwait
xlat
sti
arpl
push
nopl
in
mov
hlt
aad
jns
adc
pop
shlb
insb
fisubs
jne
loopne
add
lahf
imul
testl
push
or
push
jp
sub
ss
fldenv
mov
inc
sbb
mov
or
enter
bound
nop
arpl
test
cmpsl
lahf
shlb
adc
pxor
popa
es
loop
outsl
xor
jmp
repz
add
outsl
jmp
mov
inc
sub
std
ss
outsb
rclb
int3
inc
push
ficompl
jge
jp
add
and
cmp
jnp
xchg
mov
movsl
mov
pop
loope
mov
lcall
jge
mov
in
cmp
outsl
movsl
mov
bound
bound
add
jecxz
in
dec
xor
std
inc
scas
and
addr16
lret
addr16
imul
mulb
sbbl
xor
jnp
shll
test
dec
or
sahf
cs
jmp
xchg
mov
push
into
mov
pop
mov
mov
jl
mov
dec
xchg
nop
mov
xor
outsb
pop
stc
js
aaa
add
cli
ljmp
add
sub
inc
or
call
fadds
pop
mov
sahf
fdivs
adc
in
es
lods
add
or
mov
test
sbb
shll
mov
jge
mov
fists
jge
cmpsb
aad
lcall
push
jmp
negl
xchg
jge
fidivrl
sub
push
jmp
in
insl
rcr
lock
aad
inc
nop
sbb
aas
daa
loop
outsl
dec
lods
mov
outsl
bound
jge
pusha
fadds
and
je
cli
jl
jno
cmp
and
and
addl
xchg
add
cli
sbb
mov
dec
cmc
aas
je
gs
or
adc
repz
lods
cmp
mov
xor
sahf
stos
push
cmp
cmp
loopne
adc
xor
jbe
lret
rcr
jne
leave
dec
push
fsubrl
pop
jmp
add
addr16
inc
iret
jg
push
cmp
mov
mov
inc
xchg
cmp
push
pop
lods
adc
pop
sub
popf
pop
popf
pop
xchg
sbb
mov
and
xchg
adc
imul
pop
jns
aaa
jecxz
xorl
cmp
cmpsl
loope
rorb
and
bound
xchg
pop
push
jp
popa
hlt
sub
jecxz
xor
dec
loope
stc
fisttpl
xchg
cmp
lds
inc
aaa
cmc
stc
and
or
mov
pop
xchg
mov
cwtl
add
mov
inc
adc
or
cmpsl
dec
xchg
jmp
dec
shr
jne
cwtl
push
xchg
dec
sbbb
push
lea
or
shr
ret
pop
fisttpll
pop
iret
ljmp
pop
push
mov
mov
cli
enter
test
jg
jns
inc
mov
ja
dec
push
push
pop
mov
cld
or
aad
xchg
stos
ret
aad
stc
fwait
ljmp
xchg
lret
adc
out
xchg
jnp
dec
testl
lock
int3
lret
mov
repz
push
pop
cmpsl
js
leave
mov
icebp
scas
mov
push
pop
xchg
aad
or
xor
push
sub
nop
cmc
ja
ja
xor
jbe
mov
jge
pop
scas
jmp
add
out
movl
and
scas
cmp
pop
std
movsl
sbb
insl
add
cmpsb
mov
xlat
orl
add
ja
inc
ja
addr16
out
test
and
lret
jbe
push
lret
mov
and
insb
or
sbb
cmp
popa
andnps
jb
pop
or
jecxz
push
test
test
or
and
xor
jb
fldl
out
ljmp
jmp
cmp
mul
inc
xlat
fldcw
jmp
lahf
psubq
xchg
rcrl
and
movsb
or
push
adc
push
xor
push
mov
push
xlat
ljmp
inc
jge
pop
mov
cmp
dec
mov
pop
ss
jo
aam
aaa
cwtl
ficoms
dec
add
adc
pop
ret
fs
push
data16
mov
or
imul
aaa
adcl
mov
test
and
iret
inc
lods
cmp
test
loope
out
push
fsubl
cwtl
mov
std
adc
lds
adc
fcmovnb
popa
pushf
dec
cld
arpl
ljmp
stc
cmp
inc
push
test
outsb
lock
shl
inc
test
test
scas
lcall
push
xchg
ret
inc
dec
mov
mov
sub
popw
lahf
mov
aas
adcb
and
jge
pop
sbb
popa
pusha
mov
fcomps
outsl
dec
fnstcw
pop
movb
mov
or
and
das
push
mov
loopne
adc
push
mov
cmp
xor
fs
mov
or
inc
dec
mov
lods
xchg
je
in
ficomps
aam
popf
aam
test
mov
in
icebp
outsb
mov
into
adc
lods
adc
push
mov
add
and
pop
push
xor
mov
xor
inc
xchg
lods
outsl
dec
stos
addr16
aaa
xor
clc
in
loopne
mov
popl
xchg
mov
push
jmp
int3
data16
mov
xlat
test
fwait
popa
mov
adc
xchg
push
mov
paddd
orb
sub
popw
pop
ljmp
mov
inc
shlb
es
scas
and
cmp
idivb
cmpl
push
xchg
push
pop
fsubs
sbb
mov
or
mov
jecxz
and
pusha
fcomps
jge
fdivrs
push
mov
cld
xchg
push
mov
test
cmp
mov
test
out
or
push
mov
adc
movsl
mov
mov
sub
or
mov
push
shrb
mov
push
mov
test
das
out
mov
stc
in
in
lahf
mov
push
arpl
stos
and
imul
xor
push
xchg
pop
das
mov
and
and
pop
es
sub
stc
mov
dec
lahf
sub
jb
outsb
ljmp
div
jbe
adc
into
into
incl
sbb
movsb
ret
enter
push
mov
sbb
roll
js
mov
lcall
dec
xor
ja
test
xchg
gs
enter
push
mov
jae
add
pushf
mov
scas
test
push
mov
pop
das
fs
jb
pop
jge
sub
lret
push
cmpb
in
sub
mov
imul
or
stos
std
jb
stos
mov
or
dec
dec
lods
shll
mov
in
mov
rclb
sub
mov
scas
mov
xorb
call
cwtl
mov
push
ds
cmp
mov
xlat
ror
mov
in
xchg
scas
mov
mov
popl
fistps
or
lcall
cmp
ficomps
add
fdivs
pop
mov
xor
es
rcll
sbb
hlt
pop
inc
mov
ljmp
mov
add
jbe
sahf
or
pop
inc
sbb
push
jbe
sub
rcrb
jmp
stc
shll
sbb
scas
cmp
pop
popa
pop
cld
shlb
push
mov
or
and
push
fisttpll
iret
lret
lret
fistpll
movsb
sbb
gs
sub
cmp
in
int3
mov
cld
xor
movsl
dec
cmp
repz
loopne
and
dec
or
pop
sbbl
xlat
movsl
add
sahf
ret
ret
adc
adc
rcrb
jb
popa
sub
fwait
and
shlb
or
or
sub
xchg
jmp
ret
rcrb
mov
pop
rcrl
stos
xchg
repnz
xor
bnd
dec
repz
xchg
mov
lahf
mov
adc
je
js
lea
push
loope
or
xorl
pusha
sbb
or
mov
push
jno
or
jmp
out
inc
inc
cmp
fidivrs
loopne
data16
pusha
arpl
clc
repz
lret
rorb
jg
or
mov
cmp
insb
fidivrs
addr16
rcl
test
roll
sbb
mov
stc
jp
dec
add
adcb
int
dec
pop
xchg
repz
std
sbb
xor
push
imul
xchg
stc
ljmp
subb
es
dec
mov
or
movsl
lahf
sub
add
js
iretw
sti
in
jg
xchg
push
cmpl
pop
and
sub
push
out
mov
adc
mov
push
jo
mov
jns
js,pt
in
push
pop
fmuls
or
pushf
rcl
in
jge
dec
add
lret
sti
sti
and
and
mov
mov
test
into
lods
stos
inc
mov
jge
ljmp
mul
popa
xchg
push
mov
sub
add
sarb
addl
adc
ret
sub
test
xlat
jl
add
mov
dec
test
cmp
int3
sbb
mov
pop
mov
mov
mov
les
jb
jmp
repnz
or
inc
cs
aaa
ja
add
jl
and
lds
js
jno
ret
pop
ja
and
ja
arpl
sahf
scas
push
pop
xchg
insl
jne
cld
lret
ss
mov
mov
stc
mov
lds
xchg
pop
or
sbb
cmpsl
push
ret
xchg
addr16
adcb
cmp
mov
daa
mov
rcll
fwait
out
lock
lock
pop
jno
test
je
rcll
sbb
jl
fildll
fwait
jnp
out
inc
fldt
movsb
push
popf
je
adc
mov
sub
jne
xor
jecxz
neg
sub
jns
filds
cmp
imul
mov
mov
sbb
or
and
cwtl
jmp
outsl
mov
adc
and
jne
and
inc
movsl
mov
cmp
pusha
pop
pushf
sbb
into
mov
sar
cmp
cmp
popf
cmpsb
jp
rol
mov
negb
arpl
stos
push
imul
dec
pop
jns
sbb
cmc
mov
leave
inc
stos
sti
mov
aas
popf
fwait
scas
mov
or
dec
mov
sbb
and
sub
das
and
mov
inc
ud1
lret
mov
int
adc
out
fidivrs
jp
cmpl
jns
pop
rorb
enter
pop
clc
fisubrl
cld
scas
xchg
xor
stos
ret
ret
fwait
cwtl
inc
jecxz
cmp
jns
pop
sbb
shrb
inc
aad
ds
adc
ret
in
jmp
cwtl
sub
fs
ret
pop
sarl
mov
cmpsb
cmpsl
fldt
test
ret
xchg
cmc
icebp
pop
or
out
push
js
pop
inc
jle
fidivl
pop
fwait
sti
div
in
cli
aam
jle
loop
ret
stos
in
js
xchg
sahf
mov
enter
hlt
and
mov
jecxz
push
mov
sbb
pop
add
ret
push
enter
nop
xchg
xchg
pop
std
stos
and
rcrb
stc
adc
pop
jne
sbb
lods
jne
js
stos
inc
inc
hlt
pop
lret
xchg
faddp
mov
mov
int3
movsl
xchg
das
sahf
mov
fwait
inc
pop
out
sbb
cmc
cmp
sub
pop
inc
adc
popa
mov
jno
pushf
sahf
and
dec
push
dec
je
and
sub
push
imul
jbe
fdivrl
mov
sub
jp
mov
jae
sub
test
inc
js
and
out
pop
insb
jecxz
cmp
subb
insb
fists
popa
push
adc
sti
xor
pop
dec
fmul
jo
addr16
shr
add
fwait
scas
cs
mov
lret
jne
dec
aas
lds
filds
pop
aad
pop
push
js
jnp
stos
push
sbb
loopne
out
test
mov
ret
fld
scas
out
insl
jne
push
pop
xchg
and
out
mov
stos
lods
popa
andb
pusha
xlat
mov
mov
shrl
push
sbb
hlt
out
fmull
out
lret
sbb
cli
or
repz
and
xchg
andb
outsl
and
into
lret
hlt
mov
mov
inc
decb
push
mov
adc
mov
clc
inc
push
inc
mov
sbbl
hlt
jb
mov
push
jne
fcomps
sti
cmp
cmpsl
mov
xor
adc
cmp
stos
dec
in
sub
jnp
rorb
les
cmpsb
lock
push
or
notl
adc
push
pop
mov
fisubs
mov
mov
sti
adc
jns
push
mov
test
bound
andb
aas
or
add
ss
cmpsl
mov
xchg
push
test
lret
add
mov
cmp
aas
jne
stos
lret
loopne
inc
fdivrp
or
mov
pop
shll
and
add
mov
test
inc
sub
mov
push
ds
inc
or
mov
push
inc
test
test
lods
push
mov
sbb
sub
or
jmp
aam
je
ret
sub
vmovupd
inc
and
add
stc
sbb
cli
mov
data16
xor
dec
lods
add
in
jge
test
mov
mov
shlb
out
pop
sbb
inc
addl
pop
and
mov
inc
sub
mov
pop
xchg
fcompl
testb
jne
mov
outsb
insl
test
cmp
lods
dec
movsb
push
gs
mov
mov
aad
mov
cmp
loope
push
push
out
jno
pop
xchg
xchg
or
les
cmpsl
fwait
imul
shll
sti
xchg
jbe
cwtl
jb
iret
lock
test
imul
ja
push
mov
mov
jbe
push
adc
arpl
sbb
loope
jl
in
or
in
jns
pop
pop
jbe
popa
sarb
nop
into
lock
xchg
into
fcoml
push
addb
add
out
inc
xor
dec
and
push
push
stc
test
mov
sbb
inc
sbb
pop
es
sbb
pop
xchg
fildl
fcoms
gs
test
rolb
test
mov
cmpsl
xor
jg
jbe
faddl
xor
inc
fldenv
cld
repnz
sbb
dec
mov
mov
into
sbb
fildll
outsl
leave
jnp
xor
cld
rcll
cltd
iret
mov
sub
ljmp
jae
inc
jg
xor
add
sbb
stos
mov
push
hlt
enter
pop
in
mov
dec
popf
imul
imul
sarw
cmc
mov
idivl
xchg
xor
push
inc
scas
mov
sbb
lcall
pop
outsb
rcrl
xlat
mov
lret
in
add
or
rolb
icebp
neg
push
int
xor
sahf
stos
and
fwait
std
dec
or
push
mov
mov
and
mov
nop
in
jno
add
es
push
jne
nop
std
xor
rcll
fwait
xchg
xlat
mov
out
mov
jb
push
xchg
cmpsl
test
lret
push
jb
sub
and
or
in
std
xchg
add
add
out
inc
out
scas
pop
xor
ja
cltd
std
add
dec
inc
xlat
cwtl
jo
cmpsl
lock
mov
adc
pop
sbb
xchg
fs
shll
stos
jge
mov
lcall
out
enter
jge
lea
ljmp
testl
xor
add
adc
pop
into
and
xchg
repnz
mov
mov
cmp
push
pop
xor
and
cmp
daa
adc
mov
dec
fwait
test
cltd
xchg
shl
gs
nop
jl
push
mov
xchg
mov
rep
mov
subl
lea
pop
dec
loop
xchg
lret
adc
or
xchg
in
ret
xor
mov
sub
aaa
pushf
repnz
xor
sbb
push
mov
ret
adc
xchg
movsl
loop
enter
test
xlat
xchg
sbb
jg
out
dec
mov
call
or
stos
stos
add
sub
fs
jns
lea
inc
mov
xchg
add
outsb
or
rorl
lcall
jmp
fsubrs
je
mov
xor
outsl
movsl
hlt
mov
out
or
xor
and
and
jo
mov
stc
add
scas
or
sbb
ss
pop
loop
adc
pop
arpl
jge
out
jnp
ret
cli
fs
movsb
ds
aam
das
and
mov
rcrb
insb
jecxz
out
dec
es
sub
pop
jge
mov
sarb
and
xchg
xchg
mov
sub
aad
in
xor
fstps
arpl
cmpb
jge
push
cmp
lret
push
add
lods
pop
dec
fldl
sbb
push
daa
lret
xchg
sub
or
ret
insb
dec
das
imul
rcl
xlat
add
inc
icebp
push
push
and
insl
mov
mov
repz
shr
lods
mov
push
lcall
xchg
dec
mov
notl
int3
out
ja
out
test
stos
out
in
xchg
leave
sbb
xchg
push
push
cmc
ret
and
fwait
stos
adc
enter
xchg
movsb
imul
cli
add
test
jge
icebp
sbb
xchg
ret
xlat
outsb
test
loopne
cltd
hlt
rclb
mov
xchg
mull
mov
jecxz
pushf
push
mov
cmpsl
jo
xor
jns
and
jp
fwait
xor
orb
mov
insb
sub
aaa
loopne
cmpsl
adc
std
and
jecxz
and
push
add
fisttpl
adc
das
je
cmp
lret
mov
std
xchg
sbb
push
sbb
int3
xchg
dec
daa
or
mov
xchg
lahf
dec
sarb
repz
cmp
fidivrs
dec
mov
mov
mov
push
xor
hlt
std
xor
mov
jo
mov
jmp
xor
push
notl
mov
push
xor
pushf
push
xchg
outsb
xor
adc
jg
and
stos
lods
outsl
add
rcrl
in
or
xor
imul
out
cmpsb
lea
mov
out
pop
push
add
in
ja
jmp
into
push
xchg
inc
movb
mov
xor
subb
insl
movsl
pop
lret
pop
xchg
cltd
daa
imul
push
mov
cmc
adc
lret
testb
and
addb
daa
in
cmp
pushf
dec
outsb
arpl
fdivs
into
sub
ficoml
dec
je
into
mov
out
pusha
xchg
out
push
lock
add
adc
xchg
cmp
and
push
roll
inc
scas
xor
xor
sub
fidivl
arpl
test
pop
ljmp
sbb
inc
mov
push
lea
ds
adc
dec
push
xor
add
pop
out
ret
pushf
scas
cli
sub
lret
clc
add
xchg
loop
pop
jecxz
int
dec
test
xlat
aaa
cltd
rcll
pop
shrb
xchg
into
pop
xchg
movsl
addr16
cmp
outsl
lods
lods
sbb
cmc
xchg
imul
pop
aam
mov
mov
jbe
push
das
scas
add
clc
pop
loope
mov
rorb
es
bound
scas
mov
repnz
jo
mov
jmp
cmp
sub
enter
ds
dec
and
js
xor
lahf
push
es
adc
mov
inc
lods
nop
stos
mov
cwtl
jo
inc
inc
push
sub
stos
adc
dec
in
jg
outsl
scas
adc
pop
icebp
test
add
js
jmp
lods
pop
push
push
pushf
adc
loopne
movsl
jmp
xchg
cmp
in
xchg
stos
cli
pop
or
call
or
fidivs
push
outsl
insl
clc
add
mov
fstpt
ja
mov
mov
jbe
add
les
ficomps
inc
ljmp
mov
cmpsb
filds
pop
jg
loop
xor
pop
inc
sti
mov
push
out
aad
ja
loopne
inc
cmc
push
mov
cmpsl
mov
cs
cs
mov
cli
stc
mov
scas
xor
lret
sahf
jne
mov
aas
jmp
roll
mov
sbb
clc
lds
fstpl
je
pop
jb
jge
int3
jge
push
rcrb
xchg
cli
xor
lods
call
insl
cmp
fiadds
outsb
xchg
pushf
gs
mov
sbb
sub
mov
mov
xchg
add
adc
sub
dec
jne
rcll
aad
ret
jns
cmpsb
dec
jl
jnp
mov
faddp
add
dec
xor
out
add
nop
inc
insl
cmpsl
adc
push
test
out
adc
mov
pushf
dec
aas
orl
lds
cwtl
test
inc
lock
loop
add
xor
sti
shl
push
imul
jne
adc
sbb
cmp
pushf
out
xor
push
pushf
push
push
dec
sub
push
gs
leave
xor
mov
imul
flds
lahf
mov
cwtl
data16
mov
mov
push
sahf
cli
push
mov
jae
dec
cmp
mov
les
test
lods
aaa
shll
call
xor
pop
xor
aaa
ljmp
aaa
fldcw
int3
or
sbb
mov
out
dec
sbb
jae
mov
out
and
je
xchg
jp
mov
neg
insb
xor
sub
ljmp
stos
inc
iret
data16
repz
inc
pop
daa
aaa
sub
jns
inc
pop
pop
adc
les
mov
mov
leave
jno
push
shrl
mov
xor
mov
fisttpll
cld
les
neg
sbb
jne
fldenv
push
mov
xchg
sbb
addr16
dec
sub
leave
andl
push
movsb
or
jg
repnz
mov
cmp
mov
cmpb
insl
test
inc
std
xlat
xorb
pusha
pop
das
mov
cmpsb
sbb
cmp
cmpsl
or
cmp
xor
cmp
cwtl
lods
adc
add
or
mov
push
int3
jno
call
push
rol
and
mov
xchg
mov
and
push
adc
movsb
dec
cmp
js
xchg
sahf
jne
cwtl
sub
aaa
cli
cmp
ficompl
sub
sti
insl
adc
mov
push
loop
scas
mov
lods
ljmp
sbb
stos
aaa
imul
xor
addr16
pusha
ljmp
adc
rorl
data16
pushf
and
jb
into
push
in
xchg
cwtl
jae
int3
mov
pop
pop
insb
das
push
mov
imul
jno
sbb
jle
test
popa
sbb
rcl
movsb
icebp
imulb
lcall
push
pop
cwtl
cmp
bound
and
jg
or
jp
jb
mov
call
add
lret
cltd
xchg
jg
popf
cld
mov
or
cmp
sarl
mov
inc
test
shrb
mov
rcll
jl
call
lods
inc
xchg
pop
into
jb
scas
push
push
sbb
mov
cltd
xor
inc
cwtl
mov
xor
adc
mov
mull
pop
loope
mov
je
inc
ja
cmp
rol
mov
cmc
pop
pop
jl
inc
shlb
adc
mov
imul
mov
pop
pop
and
cmp
outsl
nop
nop
es
aas
sbb
xor
sbb
fcmovnbe
inc
pop
mov
xchg
jb
dec
xchg
xor
mov
jbe
gs
xchg
jnp
repz
pop
loopne
xorl
in
aad
adc
cmp
adc
mov
push
jb
dec
insl
negb
ja
jbe
adcb
popf
loopne
iret
decl
adcb
filds
adc
push
dec
stos
mov
mov
aad
sti
lea
cld
pop
inc
int
hlt
pop
xchg
sub
cmp
sbb
test
jbe
inc
mov
or
in
nop
pop
sub
add
in
dec
mov
push
int
ljmp
test
fcmove
insb
ret
dec
mov
sahf
lods
stc
int
and
mov
ja
xor
les
mov
xor
pusha
in
inc
jbe
cltd
mov
daa
negb
shll
jbe
push
movsb
popf
iret
test
imul
pop
repz
fsts
xchg
or
ljmp
or
mov
and
into
sbb
leave
arpl
imul
icebp
sbb
hlt
aaa
repz
inc
ss
popf
mov
mov
jge
outsb
hlt
push
repnz
repnz
ds
scas
cmp
push
sbbl
cld
icebp
cmp
dec
mov
out
push
movb
push
pop
dec
jne
gs
add
adc
inc
sbb
test
iret
imul
add
jne
inc
insb
sbb
test
movsb
arpl
fnsave
adc
shlb
sbb
inc
lahf
enter
cmpsb
addr16
lahf
cmp
cmp
xchg
mov
addr16
icebp
out
pushf
stos
xor
jg
xchg
mov
push
mov
jbe
mov
and
mov
out
int3
dec
loop
xchg
test
jns
inc
imul
js
icebp
inc
iret
push
scas
sub
sub
jg
stos
stos
aas
sub
or
or
push
adc
cld
ja
add
arpl
xor
std
subb
cld
rcr
fcomps
out
adc
addl
fimuls
dec
stos
jle
jmp
cmc
sbb
push
adcl
sub
call
jno
dec
test
subl
repz
and
ljmp
clc
mov
dec
adc
mov
inc
clc
xchg
cmp
or
ja
adc
arpl
xlat
jae
cmp
sbb
lods
mov
imul
dec
adc
pop
and
sahf
dec
xchg
in
add
mov
mov
leave
aam
pop
in
adc
andl
and
std
movsb
mov
loop
repnz
popa
mov
or
cmpsl
pop
gs
fiaddl
or
pushf
clc
rcrb
dec
adc
sarb
hlt
cmpsl
fdivs
mov
mov
xchg
mov
shrb
pop
xchg
push
dec
insb
jmp
cmp
hlt
icebp
in
push
adc
push
jmp
sub
in
in
inc
cmp
push
and
jmp
and
mov
ret
pop
or
lock
mov
addb
test
lds
fs
inc
mov
nop
in
push
cmp
pop
and
test
mov
push
imul
test
imul
cmpsl
fiadds
outsl
test
lcall
jo
jns
xchg
adcl
daa
push
adc
fsubs
lahf
insb
out
out
das
push
push
imul
mov
add
mov
mov
cmpsl
xchg
sbb
lock
xor
movsb
jl
jl
sti
inc
call
stc
out
movl
mov
xchg
and
js
mov
mov
xor
push
adc
adc
scas
mov
out
imulb
inc
xchg
xor
pop
sub
mov
es
sbb
into
sbb
dec
in
mov
push
mov
iret
xor
lcall
jecxz
sub
inc
sub
daa
jge
add
lods
adcb
cmp
push
mov
clc
mov
in
mov
cmp
adc
mov
xchg
lret
jo
bound
inc
inc
and
add
cmp
or
stc
mov
enter
sbb
mov
mov
jg
lock
cmpsb
icebp
cmpsb
pop
adc
cs
and
adc
mov
or
pop
insb
cs
insb
popa
sub
sbb
loope
into
addr16
es
int3
les
je
cmovns
mov
sub
add
adc
divl
ds
add
mov
xlat
in
fldcw
sub
std
sarl
mov
cmc
fdivrs
or
ljmp
inc
insb
jmp
jg
cltd
xor
popa
mov
sub
mov
inc
imul
and
imul
add
or
cmp
xor
sbbb
jmp
xchg
push
sub
jecxz
pop
jecxz
xor
push
gs
jno
lds
lods
inc
mov
lret
sub
push
loop
sbb
mov
loop
jnp
insb
ret
lahf
inc
push
dec
push
xchg
and
or
mov
pusha
pop
jne
xchg
movsb
sbb
icebp
sbb
dec
sbb
subb
fldlg2
mov
mov
leave
mov
jo
or
dec
ret
lcall
sbb
and
mov
daa
mov
add
jae
inc
lahf
out
xchg
xor
and
mov
mov
inc
dec
dec
xchg
imul
mov
or
mov
adc
jae
pusha
xchg
pop
jg
loop
or
fsubl
and
dec
ljmp
lods
out
out
and
inc
psubq
push
cmpb
mov
sub
cld
xchg
ss
xchg
mov
lcall
and
clc
pop
mov
sub
xchg
outsb
lods
dec
mov
movsl
ds
push
mov
mov
and
pop
or
mov
dec
xchg
pop
mov
out
sti
or
movd
xchg
or
mov
xor
lcall
jae
mov
aaa
jl
mov
std
ss
mov
dec
jl
mov
sbb
inc
xchg
scas
aaa
pop
js
ret
jbe
imul
dec
hlt
adc
enter
jp
sti
data16
sub
mov
adc
mov
mov
push
test
jecxz
cmp
int3
or
pop
inc
insb
fwait
gs
test
dec
loope
js
clc
ret
xor
xchg
sub
mov
push
lods
push
sti
pop
add
inc
xchg
xchg
cmc
sub
mov
test
iret
add
inc
sbb
dec
shlb
inc
sti
xchg
pop
orl
dec
jle
loope
mov
arpl
dec
mov
les
mov
pop
adc
jae
imul
dec
push
push
add
dec
gs
sub
and
and
sub
imul
in
pop
jecxz
ja
icebp
mov
sub
out
call
push
jl
pop
je
lahf
mov
js
mov
les
ljmp
sarl
lock
mov
int
pop
and
aam
call
aam
fadds
pushf
mov
out
dec
shr
xor
mov
scas
cmpsb
jecxz
add
jecxz
arpl
adc
xor
cmp
push
movsl
mov
cmp
les
pop
jge
mov
push
test
push
xchg
outsl
mov
cmpsl
push
das
andb
mov
scas
clc
mov
sub
ja
sub
sub
or
arpl
jnp
fidivl
out
mov
ja
stc
int3
in
cli
popa
jg
pop
ljmp
sbb
jb
jno
stos
pop
mov
test
and
sbb
mov
jmp
add
cmp
imul
add
loopne
xchg
rcrb
imul
dec
add
and
sbb
popa
in
stos
nop
push
add
daa
push
test
or
and
jb
mov
pop
lcall
jge
cli
ja
pop
inc
dec
nop
ljmp
xchg
cmp
lds
or
sbb
jns
loop
or
mov
outsb
sbb
xor
jp
inc
lret
dec
mov
mov
mov
out
lahf
lea
iret
push
fcompl
mov
sbb
call
or
sub
jp
stos
adc
add
loop
iret
add
mov
lcall
mov
xor
addl
sahf
imull
lahf
or
fisttpll
or
scas
lea
call
out
loop
call
aam
into
adc
mov
jae
popa
sahf
mov
test
and
sbb
dec
push
mov
or
cwtl
mov
jg
sbb
jae
xchg
mov
mov
adc
add
xchg
pop
or
es
cld
imul
bound
mov
or
xchg
inc
cmp
xchg
push
xor
mov
mov
jb
inc
jno
xor
out
pop
dec
xchg
xor
jo
js
mov
xor
cmc
stos
add
dec
daa
frstor
lcall
push
incb
sub
mov
mov
dec
test
inc
push
hlt
pushf
jno
sbb
nop
push
sti
sbb
repz
loop
add
push
jns
xchg
cli
lea
mov
test
bound
sbbl
jl
lea
mov
jg
adc
stos
cmc
test
lea
pop
xchg
nop
jb
cmp
ja
ljmp
jne
mov
xchg
test
stos
rcll
xchg
into
xchg
dec
cld
dec
jmp
mov
adc
mov
fistl
add
xor
aam
inc
pop
std
jle
push
cmovs
jae
imul
xor
jge
test
je
add
push
and
jbe
cmp
aad
cmp
mov
xchg
scas
shrb
jnp
out
insb
js
stos
mov
push
xchg
mov
jns
pop
int
lret
enter
sbb
add
and
xlat
push
add
je
dec
pusha
cmpsb
pop
adc
sub
into
popa
push
lret
and
es
in
aad
ffreep
scas
jmp
out
mov
dec
push
inc
jmp
dec
fsubr
mov
je
pop
lret
icebp
aam
dec
scas
sahf
push
add
cmp
dec
pop
aad
xchg
orl
stc
mov
repz
xchg
ffreep
mov
xor
pop
pusha
jo
pop
sahf
mov
sahf
push
dec
stc
lcall
jb
popf
shr
loope
popa
orb
pop
scas
xchg
sub
shll
bound
pop
xchg
fstps
pop
jnp
stos
pop
push
jge
in
xchg
das
mov
xor
or
cmpsl
daa
add
mov
lcall
cltd
mov
dec
dec
jno
add
repz
sqrtps
mov
jecxz
sbb
sub
cmpsb
mov
dec
jae
or
in
inc
out
clc
adcl
data16
jbe
test
rolb
mov
subl
pushf
aad
idivb
add
in
loope
push
or
xchg
xchg
cwtl
mov
jno
dec
mov
push
push
and
leave
fcomp
ljmp
cld
pop
cmp
mov
mov
mov
sub
and
test
test
lret
sbb
fs
xchg
jmp
mov
sbb
fsubp
adc
repnz
mov
lahf
lods
or
roll
aas
xchg
adc
mov
adc
fsubs
pop
and
mov
shlb
xor
mov
pop
loope
inc
mov
setae
pop
pushf
jbe
daa
call
or
frstor
add
fistps
out
cwtl
movsb
inc
ror
stos
dec
rclb
rcll
enter
lea
lea
test
int
xchg
xchg
mov
push
cltd
call
out
btc
test
ss
sbb
in
into
xchg
outsl
mov
sahf
xlat
cmp
xor
int
fidivs
jnp
mov
ss
out
mov
add
pop
shll
mov
bound
fstpl
or
xchg
and
lcall
xchg
pop
lahf
add
movsb
jle
aas
mov
push
dec
js
aas
pop
call
lods
negl
add
dec
enter
pusha
in
push
cmp
cs
pop
pop
stos
cmc
incb
mov
push
xchg
jecxz
xchg
insl
std
adc
jecxz
xchg
fisubrs
arpl
dec
out
pop
test
sbb
dec
push
ret
mov
push
push
aaa
insl
pop
and
lods
push
ss
pop
sbb
fmuls
xor
dec
push
lock
mov
or
mov
jmp
mov
cltd
jb
mov
rcl
popa
daa
cmpsb
cli
int
fnstsw
js
dec
in
nop
lods
dec
mov
sbb
jecxz
push
leave
fwait
inc
adc
and
ds
aaa
adcb
xchg
xor
jno
leave
sub
mov
out
pop
sub
roll
push
shl
sub
push
or
cmpsl
mov
lcall
add
hlt
sbb
outsl
jmp
adc
jbe
fldenv
add
ret
aaa
ret
lret
lret
and
lods
fildll
fcompl
lods
dec
mov
scas
push
xchg
jmp
mov
sbb
cmp
jb
xchg
es
inc
xor
jne
fsts
aaa
movsb
adc
sarb
mov
data16
shl
dec
hlt
jbe
sbb
aam
jbe
fsts
addb
mov
mov
mov
jl
fsubrl
int
mov
aam
cmp
mov
out
frstor
fistl
dec
xorl
iret
sbb
aam
rcrb
push
aad
fmull
movsl
outsb
mov
in
sbb
stc
or
and
fs
ficoml
stc
add
test
loopne
jp
cli
test
add
adc
int
sbb
stos
shr
dec
jnp
mov
rorb
rcrb
into
cli
jb,pn
cmp
sub
aas
pop
rcrb
ret
scas
cli
lret
and
xchg
and
xorl
call
push
jp
mov
pop
xchg
inc
in
mov
test
pop
aad
aam
dec
leave
lea
cltd
es
data16
stc
jae
movsl
andb
cmp
enter
and
adc
insl
stos
and
sbb
jb
add
push
cmc
fmuls
sbb
popa
in
mov
les
mov
pop
cmp
aaa
push
inc
xor
mov
push
mov
in
and
js
jge
pop
xchg
xor
xor
pushf
jns
adc
repnz
dec
gs
jne
sbb
lret
add
lahf
dec
insl
daa
jmp
cmpsb
pop
mov
mov
adc
idivb
pop
test
xor
movsl
addr16
mov
mov
pop
test
aad
insl
jl
incb
xchg
cltd
mov
mov
cmp
and
sub
in
push
cmp
inc
repnz
jp
or
cmp
push
push
sbb
fistl
addr16
aaa
in
mov
test
in
sub
add
cmp
mull
sub
inc
imul
xchg
adc
lock
loop
mov
bound
sarb
cmp
aas
mov
mov
and
daa
sarb
or
xchg
sahf
mov
insb
ror
mov
push
sub
data16
loopne
xlat
push
xchg
or
push
lret
fildll
shrl
pop
sbb
dec
imul
cmp
adc
dec
hlt
int
pop
jo
mov
int
jmp
jle
data16
mov
xor
adc
aam
mov
push
dec
cmp
js
jle
sub
aam
je
xchg
loopne
mov
jp
aam
lock
mov
mov
clc
out
xlat
and
jle
cwtl
icebp
lock
push
cmp
pushf
mov
jle
seta
pop
push
cmp
popf
in
je
push
negb
test
int
jbe
rcl
pop
jge
mov
mov
sahf
add
pusha
fs
hlt
fldt
sub
and
cld
jae
mov
insl
shll
jecxz
bound
repnz
pop
mov
cs
xor
insb
subb
jl
or
or
sarb
daa
or
and
das
dec
cli
rcll
loop
xlat
xor
cmpsb
inc
cltd
scas
sub
aaa
jne
adc
xchg
insl
xor
mov
sbb
mov
pop
aas
idivl
outsb
lcall
cmp
cmp
mov
jle
mov
jecxz
xor
dec
aaa
testl
out
mov
and
sbb
push
jne
lock
mov
jae
pusha
es
shlb
jmp
mov
test
subb
movsl
adc
xchg
out
jo
adc
inc
jle
xor
xchg
es
test
or
inc
mov
repz
jecxz
inc
dec
push
mov
gs
scas
jmp
sti
jecxz
pop
repz
dec
inc
sub
popa
and
das
xchg
sbb
push
pop
dec
ret
aam
in
into
pop
sbb
shll
cmpsl
jmp
jb
and
and
icebp
mov
pop
xchg
test
mov
or
mov
ja
dec
cwtl
cli
jmp
das
leave
pop
loopne
leave
jecxz
inc
js
adc
mov
mov
adc
movsl
movsl
xor
ror
push
mov
cmp
outsl
clc
je
push
sub
jno
cmp
push
or
inc
mov
arpl
out
jle
inc
pop
ret
enter
pop
xchg
stc
or
xor
jbe
inc
lret
or
adc
aas
jl
add
sub
xlat
pop
push
mov
xor
divb
mov
push
mov
pop
pop
repz
nop
outsb
or
ss
dec
arpl
add
ds
imul
int
adc
fsubrl
into
sub
sbbb
pop
fucomi
pop
inc
sbb
lods
push
ret
in
dec
std
cmp
flds
mov
das
inc
jo
fmull
lcall
push
loope
or
sub
insl
pushf
leave
fbstp
add
lret
out
inc
jecxz
and
insb
int
xor
jp
and
jae
sub
test
dec
out
out
xchg
call
xchg
ljmp
xor
sar
clc
ret
fildl
aas
mov
cmp
and
mov
xor
cmpsl
mov
movsb
cmp
fisubs
pop
adc
mov
inc
inc
arpl
xchg
dec
imul
enter
movsb
popf
cmp
jge
mov
dec
jecxz
push
pop
jg
decl
ds
mov
iret
adc
inc
or
sbb
cmp
sub
mov
mov
xor
xor
sub
out
clc
gs
dec
adc
push
jle
ret
adc
idivl
ret
cmp
stc
sbb
inc
rorb
dec
sub
das
xchg
lods
cmc
lret
xchg
jmp
dec
shll
pop
fistl
sahf
mov
aad
repnz
mov
dec
xor
jbe
jecxz
fsubr
sub
xchg
pusha
mov
idivb
repnz
inc
mov
repz
pop
inc
scas
ficomps
jne
push
idivb
sub
fdivp
shl
jmp
incb
mov
or
arpl
sti
push
xor
sbb
in
mov
inc
stos
cmpsl
iret
mov
insl
cld
insb
and
pop
mov
or
add
enter
mov
roll
fistpl
lahf
sub
jle
int
push
fwait
inc
bound
xchg
adc
imul
lods
pop
lcall
mov
push
mov
aad
int3
out
pop
andb
leave
imul
push
bnd
adc
xchg
push
dec
aam
xchg
fmuls
or
fwait
sbb
aam
ffree
mov
mov
idivb
int
pusha
jno
jns
mov
pop
insl
ror
lea
iret
cmp
jnp
lods
xchg
fisubs
pop
inc
sahf
add
leave
cmpsb
sbb
jecxz
sub
jmp
add
icebp
dec
cmc
push
xchg
add
std
mov
mov
push
loop
into
imul
pop
dec
inc
fcomp
or
testb
jmp
cmp
cwtl
int
fadds
inc
xor
lods
std
repz
aam
sarl
jnp
fldcw
jl
nop
push
pusha
cmp
stc
jle
or
sub
pop
rorl
sbb
and
lods
push
scas
popf
cmc
repz
mov
cld
mov
ds
push
sbb
or
sahf
into
je
int
repnz
lods
or
sbb
loope
push
xor
in
mov
ljmp
dec
and
xchg
or
in
cmp
add
mov
jo
aaa
xor
push
fsubrl
inc
je
sbb
out
add
xchg
or
cmp
mov
mov
xchg
inc
pusha
dec
add
mov
sbbb
mov
sbb
aaa
dec
or
loop
loop
mov
scas
inc
xor
mov
outsl
dec
xor
popf
jp
push
je
or
aaa
or
xchg
fwait
mov
aad
add
lods
fnsave
icebp
out
rcrl
loope
mov
jmp
leave
xlat
cmp
or
shr
push
add
add
pop
nop
pop
out
shll
inc
divb
incb
and
adc
mov
mov
repz
aas
sub
imul
dec
bound
mov
add
xchg
sbb
shl
xchg
mov
mov
add
ret
adcb
aad
fsubl
sub
addr16
sub
fsin
cmp
sbb
push
pop
test
clc
out
mov
sub
xchg
mov
stc
sub
or
sbb
loope
jecxz
out
daa
clc
cmp
add
adc
int
faddl
arpl
dec
cmc
inc
xchg
fs
in
fsubrl
mov
loop
lods
jo
lock
mov
cltd
jg
mov
sbb
loope
repnz
mov
sbb
sub
jl
or
xchg
dec
test
pop
lock
sbb
repnz
stos
jg
addr16
xor
inc
in
sbb
cmpsb
xchg
pop
call
sub
imul
push
inc
cmpsb
push
jle
push
mov
add
insb
sbb
mov
mov
dec
ds
bound
add
xor
and
jmp
jae
int
call
cmovge
push
push
adc
sbb
mov
roll
sahf
enter
lock
inc
pushf
sarl
xchg
div
cwtl
sbb
push
mov
shll
jns
and
and
mov
jl
cmp
nop
lods
sbb
repz
xor
sub
sub
and
xchg
hlt
scas
inc
cmpsl
cmc
mov
mov
fabs
cltd
int
inc
jge
pushf
cli
push
sub
hlt
xchg
push
scas
mov
inc
xchg
je
pop
cmc
test
mov
sub
cmp
ret
aad
xchg
sarb
test
testb
xor
aas
xor
and
lea
dec
test
lcall
inc
push
mov
jecxz
mov
mov
arpl
sti
push
in
dec
pop
out
mov
divl
xchg
rcrb
mov
mov
cmp
idivl
push
cmpsb
jmp
mov
add
cltd
cltd
cmp
mov
std
shrl
pop
sbbb
lea
or
jp
test
fwait
pop
mov
scas
pop
mov
pop
adc
cs
shll
mov
call
push
aas
out
push
xchg
or
push
mov
xlat
lret
sub
jp
or
loop,pt
pop
repz
mov
push
into
mov
jbe
cs
sub
push
jnp,pn
je
jmp
mov
psubusw
mov
mov
push
sbb
push
dec
dec
jb
aam
pop
das
int3
lods
out
aad
inc
mov
scas
cwtl
push
sarl
mov
ret
push
scas
in
movsl
sbb
fdivl
push
mov
push
push
or
push
pop
in
mov
jnp
mov
outsb
pushf
aaa
mov
jnp
or
sub
mov
bound
jecxz
mov
imul
fbstp
dec
out
inc
pop
pusha
jae
sbb
aas
jl
inc
xchg
lcall
and
dec
adc
test
pop
jne
cltd
pop
sahf
mov
dec
mov
lods
cmpsb
xor
call
ss
or
cs
mov
jle
cwtl
push
int
roll
popa
push
cmp
clc
xor
test
daa
jae
add
in
inc
outsl
insl
notb
sub
hlt
add
lahf
cmpsb
push
icebp
in
mov
xchg
enter
stc
cld
int3
push
shrb
xor
cli
mov
movsl
add
aaa
xchg
mov
sti
sti
sub
sahf
scas
mov
xor
mov
dec
mov
sarl
pop
test
and
test
outsb
push
arpl
mov
push
inc
push
and
and
cmc
aam
movsb
test
lea
test
mov
imul
lds
push
pop
cmpb
arpl
mov
aas
mov
or
pop
jno
pop
mov
push
mov
scas
xchg
lods
cmc
out
or
repnz
mov
jae
dec
sub
jo
dec
cld
xchg
popa
ret
mov
outsl
idivb
jecxz
pop
inc
add
xor
mov
call
mov
fmull
call
inc
cld
imulb
dec
mov
mov
cmp
xor
scas
pushf
xor
mov
mov
xor
stos
push
insl
js
out
je
inc
mov
loopne
insl
and
mov
jbe
lahf
cs
sbb
mov
xor
in
lahf
push
mov
push
clc
mov
cmp
daa
icebp
dec
push
data16
loopne
dec
sahf
pushf
push
cmp
jnp
popf
cltd
ds
mov
sub
inc
pop
add
clc
pop
ret
insb
push
cmpsl
jnp
jb
pushf
and
cli
push
dec
mov
sbb
cli
call
ss
add
sbbb
and
inc
mov
cmpsl
rcrb
popf
scas
xorb
push
inc
cmp
out
inc
inc
scas
fwait
mov
das
ret
cwtl
les
stc
std
addr16
movsl
gs
ljmp
or
dec
in
in
lods
stc
sti
cmp
push
mov
loopne
push
aaa
inc
and
xor
xchg
sub
cmp
inc
stos
adc
out
mov
cwtl
cmp
or
inc
fidivrs
sub
inc
jo
test
push
ja
rcr
cmpsb
pop
out
xchg
jnp
jae
data16
aaa
scas
adc
test
fscale
mov
mov
aad
ljmp
jb
stos
addr16
cmp
sub
movsb
xchg
xchg
and
aam
and
sarb
or
clc
rorb
sub
jmp
fs
pusha
jns
cltd
adc
pop
sti
cmpsl
cmp
dec
mov
jb
xchg
xor
push
push
pushf
jnp
idivb
mov
mov
fsubp
rcll
fcompl
and
jno
jmp
iret
loope
mov
stos
jl
les
inc
stos
sbb
pushf
or
and
je
dec
mov
xchg
int
push
stos
rcrl
mov
cmp
push
test
aaa
and
pop
popa
mov
notl
lods
mov
sbb
jno
jo
or
jae
mov
mov
int
lds
push
das
cmpsb
sub
cmp
inc
mov
jbe
in
movsl
popf
xor
out
dec
adc
xchg
outsl
mov
inc
mov
add
sbb
fnstcw
ljmp
int3
loope
fcomp
push
in
adc
movsl
sbbl
mov
dec
cmc
jecxz
jecxz
mov
mov
test
push
cmp
movsl
aam
aaa
pop
testb
and
fs
or
mov
pusha
xor
mov
mov
jp
and
std
ss
iret
ret
jb
lret
push
in
push
push
insl
or
stc
xor
mov
fadds
xor
and
aas
mov
inc
pop
loop
daa
pop
xor
test
lcall
popl
int
inc
test
out
push
filds
adc
fildll
mov
cmp
mov
push
insb
add
and
sub
jbe
dec
cwtl
out
pop
mov
std
stos
mov
sbb
add
and
lret
roll
jbe
mov
lahf
mov
dec
dec
and
push
dec
xchg
adc
jmp
xor
out
and
cmp
das
mov
enter
xor
xor
cmpsb
test
outsb
aaa
js
jle
xchg
and
mov
add
outsb
jne
fs
test
imul
loop
push
mov
pop
das
enter
add
inc
add
popf
addr16
inc
js
inc
jnp
xchg
fsubrl
lret
sbb
or
inc
mov
pop
jns
mov
rcr
mov
fcmove
dec
in
xchg
or
hlt
adc
cld
je
icebp
pusha
dec
mov
mov
push
xor
js
into
adc
mov
xchg
mov
push
cmpl
or
mov
repnz
jge,pn
mov
fistl
movl
loope
or
inc
hlt
lock
pop
or
sub
add
cmp
lds
and
loopne
stos
rorb
enter
mov
xchg
cli
cmpsl
cmp
out
es
out
mov
aad
sub
adc
adc
or
popa
cmp
lods
out
testl
mov
sub
leave
loopne
sbbl
mov
sti
notl
inc
or
add
push
adc
mov
jg
push
sbb
cmpsb
and
clc
mov
out
loopne
nop
jae
fcoml
jo
sub
loopne
sub
enter
gs
or
cmp
mov
scas
dec
mov
nop
jle
in
jle
cmp
les
out
test
mov
mov
adcb
jbe
add
mov
sahf
or
cmp
mov
jl
in
xchg
je
ljmp
sbb
push
sub
mov
lahf
add
dec
xchg
xchg
dec
mov
push
inc
dec
push
inc
cli
and
js
dec
and
dec
sbb
popf
inc
mov
aaa
mov
bnd
fidivrl
in
in
fidivrl
lcall
jl
inc
jno
stos
mov
gs
leave
pop
fnstcw
mov
inc
lock
fidivrs
inc
lods
movl
inc
pushf
jb
cmc
pop
out
imul
fstpt
scas
xchg
pop
fstl
leave
jae
pusha
lods
xor
mov
sub
repz
mov
sbb
xchg
mov
out
cld
pop
mov
dec
xchg
enter
push
dec
inc
lods
sahf
in
adc
cmp
mov
cltd
sub
lock
xchg
pop
in
mov
add
cmpb
cld
das
lea
mov
insl
jns
sub
mov
daa
push
js
sbb
lods
loopne
sub
push
shlb
test
movsb
push
adcb
mov
or
add
jnp
pop
xor
add
lods
mov
mov
lods
inc
add
jo
mov
push
inc
rol
push
mov
and
add
js
mov
pop
xchg
popa
jl
lods
mov
cmp
mov
ret
faddl
ss
in
sahf
xlat
xor
arpl
flds
xor
or
shll
sub
adc
seta
adc
jbe
stos
xor
ret
sub
ret
mov
int
add
pop
es
lret
out
subb
int3
xchg
jmp
wbinvd
das
add
adc
push
push
pop
add
outsl
mov
stc
gs
and
pop
cmp
jae
shrb
aaa
mov
jl
and
lods
push
int3
aad
std
imul
hlt
lcall
andb
push
jns
pushf
mov
pop
mov
pop
jb
popa
aam
fs
pop
lea
sub
lods
pop
imul
ss
xlat
jle
jge
and
jg
sahf
stc
xchg
stc
jmp
outsb
test
cmp
lret
aad
mov
cmp
xchg
pop
sub
enter
dec
xor
std
or
sub
pop
dec
ljmp
ret
int
xchg
jge
and
push
rcrl
xor
hlt
ds
xchg
push
xchg
test
jnp
xchg
mov
stos
or
imul
mov
xchg
into
sub
inc
mov
sti
mov
js
dec
sub
xchg
xchg
and
jne
or
cmpsb
iret
dec
mov
je
das
pop
fucom
and
push
repz
mov
stos
jns
sub
jge
mov
cltd
add
leave
cmc
imul
loope
ljmp
fdivrl
and
xor
xor
inc
cwtl
ss
std
ret
je
pop
push
push
jg
test
xchg
xchg
dec
adc
std
imul
arpl
dec
mov
adc
jmp
loopne
jne
and
mov
push
add
fiadds
xlat
mov
and
mov
inc
out
shlb
mov
mov
mov
outsb
popf
fstpl
imul
in
fists
bound
fst
xchg
mov
cld
movsb
popa
xchg
mov
inc
push
pop
xchg
movsl
and
jb
lret
push
cmp
and
hlt
fs
mov
rorb
mov
dec
sar
adc
clc
sahf
and
data16
dec
movsl
cmp
outsb
add
fadds
mov
sub
cld
inc
jns
mov
adc
ss
mov
xor
je
lds
lea
inc
idivb
lea
adc
fwait
jmp
jb
repz
mulb
popf
push
adc
ja
sub
insb
pop
sbb
cltd
adc
ljmp
push
sbb
adc
out
loopne
xor
test
ds
jns
ds
push
les
mov
or
cs
imul
fisubrs
sbb
add
sbb
pop
mov
push
popf
pushf
adc
movsb
mov
push
mov
fnstsw
adcl
shrl
daa
cmp
shrl
ret
mov
pop
fsubs
mov
in
arpl
mov
inc
and
ljmp
lcall
xchg
int3
push
jl
insb
cmp
repz
sbb
pop
lret
mov
lret
lret
xlat
js
or
or
xlat
mov
dec
pop
mov
add
cs
inc
pushf
or
push
repnz
data16
mov
mov
popf
xor
jmp
push
aas
movsl
mov
xchg
scas
lahf
pop
movsb
xor
lods
loopne
inc
xchg
hlt
dec
fadds
clc
mov
arpl
dec
out
mov
pusha
dec
adcl
fsubr
lods
pop
out
inc
xchg
jge
lcall
xor
xor
ds
inc
mov
push
adc
mov
pop
mov
fldl2e
loop
lods
bound
lock
xchg
inc
das
inc
filds
sub
sub
iret
movsl
test
test
and
test
lds
shll
add
dec
jp
push
xchg
ret
cmpb
pop
and
push
jge
psrad
insb
xlat
imul
in
fisttpll
pusha
cmp
push
sub
addr16
repz
test
jae
mov
aam
es
or
mov
xchg
jno
pop
push
shl
cld
cmpsb
cmp
aas
pop
imul
jns
fwait
sub
addr16
xor
insb
mov
xor
frstor
std
shlb
add
dec
cwtl
push
or
cmp
fcomps
lret
or
imul
aam
out
pop
push
outsb
out
cs
push
mov
or
xor
repz
mov
fildll
mov
movsb
icebp
dec
inc
and
sub
mov
jle
inc
cwtl
js
push
jle
mov
stc
mov
repz
lods
addr16
sti
or
pusha
or
and
into
pop
xor
and
xchg
cmp
lea
mov
jb
fbstp
lea
mov
movsl
lcall
xor
dec
xor
jmp
xchg
in
dec
dec
jo
aaa
lds
daa
sbb
cmp
jns
nop
movsb
sbbl
outsb
sub
mov
xchg
mov
and
push
dec
in
icebp
out
cmp
push
adcb
lods
and
sbb
cltd
jae
outsl
fcmovnb
adc
lods
cmc
scas
xchg
popa
imull
or
jne
int
enter
xlat
push
ja
sbb
dec
adc
xchg
aam
popa
add
xor
test
out
out
dec
mov
outsb
dec
in
push
mov
xor
in
adc
pop
nop
daa
push
pop
es
in
mov
lcall
ja
add
jecxz
mov
xchg
ret
lcall
jecxz
shlb
mov
ljmp
dec
sbb
bound
pop
outsl
iret
jns
test
movsb
out
mov
inc
push
fmull
arpl
mov
xor
add
das
ds
test
inc
sub
imul
shll
test
aaa
dec
mov
dec
adcb
dec
cmp
push
push
add
sbb
int3
fidivl
or
addr16
lcall
adc
nop
fdiv
js
add
adc
cmp
fldenv
mov
mov
xorb
push
adc
mov
xor
scas
cwtl
push
xor
orb
dec
ja
sahf
into
mov
jb
in
push
into
rorl
insl
rcl
mov
iret
adc
or
cmp
sbb
repz
js
jmp
ret
add
push
dec
jne
dec
add
adc
inc
mov
and
push
mov
push
jno
and
cltd
mov
sahf
es
pushf
loopne
fnstsw
fdivl
mov
cmpsl
push
cs
and
mov
js
push
pop
push
bound
mov
jns
xor
jge
stos
lret
inc
arpl
es
adc
clc
lea
ficoml
pop
inc
push
lods
je
dec
movsl
fisttpll
bound
outsl
aas
imul
out
pop
mov
stos
cmp
nop
sti
jl
sahf
dec
adc
into
pushf
aad
movsb
add
xor
lock
int3
xor
imul
sti
pop
xchg
or
mov
clc
adc
mov
out
add
dec
sbb
js
and
aaa
xor
mov
push
or
sub
and
inc
leave
xchg
inc
insb
xchg
jns
xor
fistl
std
data16
int3
cld
mov
retw
fstps
add
out
test
inc
cmp
mov
add
mov
cmp
test
xchg
ljmp
pushf
stos
sub
push
jo
shll
jl
jae
cltd
add
push
and
into
loop
lahf
mov
mov
sti
mov
in
inc
js
mov
adc
aam
bound
fsubs
xchg
movsb
lcall
push
mov
lret
mov
pop
in
mov
loopne
test
dec
cmpsl
xchg
push
lock
push
daa
jmp
call
xor
pop
jnp
and
cld
inc
icebp
iret
sub
sarb
xor
mov
jno
jge
add
mov
fldcw
dec
jno
jns
aad
addl
iret
les
insb
loope
mov
jno
push
inc
movsl
push
pop
xchg
add
and
push
rcrl
mov
and
pop
not
jmp
and
and
call
or
mov
repnz
xchg
stc
call
lret
xchg
jae
scas
push
outsl
xchg
jns
fstps
push
push
mov
inc
iret
push
xchg
cmpsl
inc
jnp
nop
repnz
leave
sub
add
jb
sub
ds
in
sub
cmp
adc
insl
pop
ja
adc
in
pop
vpxor
subl
cmp
pop
addr16
nop
enter
movsl
jp
xadd
test
lret
sbb
roll
test
xchg
les
insb
rorl
loop
aad
ficompl
mov
aas
sub
mov
dec
mov
sbb
movd
data16
shrl
sub
xchg
loope
mov
orb
add
nop
add
mov
fstps
or
cmpsb
pop
mov
cmp
add
add
mov
cmpsl
or
adc
xor
shlb
adcb
pop
jno
add
out
mov
inc
outsl
clc
pop
jl
push
aaa
dec
cmp
sbb
lahf
lahf
xchg
addl
add
cli
dec
arpl
ljmp
sahf
adc
lock
ja
xchg
movsb
push
leave
mov
cli
push
adc
das
or
inc
out
inc
mov
mov
mov
cli
mov
mov
pop
lcall
mov
cmp
xor
lret
mov
fldl
jg
es
push
scas
xor
pushf
mov
mov
adc
test
jbe
sub
rorb
rcl
int3
pop
inc
dec
sbb
push
jmp
insl
inc
or
xor
mov
call
mov
std
mov
jnp
jne
xchg
or
test
dec
das
xorl
pushf
jmp
and
mull
mov
jnp
jne
mov
aad
dec
jbe
scas
fmuls
mov
mov
sahf
test
mov
andl
xorb
push
sub
pushf
add
cmp
pushf
push
lods
loop
es
jae
jp
inc
daa
sar
mov
mov
mov
mov
jmp
pop
shr
inc
lds
pushf
movsl
and
nop
cmp
mov
jne
sub
data16
in
or
cmp
xchg
out
adcb
dec
cli
cmp
pop
cmp
pop
add
lret
inc
inc
fisubrs
mov
loope
sub
insl
repnz
int
pop
nop
fsts
and
pop
sbb
das
aaa
pop
jecxz
jle
add
jmp
stos
add
add
jae
addr16
sbb
ret
ljmp
mov
sbb
push
test
int3
cmc
mov
mov
aas
mov
das
lock
adc
jnp
or
cli
les
jecxz
fcompl
in
iret
mov
les
xorb
jmp
inc
xchg
dec
sub
jb
icebp
sub
cmp
loop
jl
mov
mov
adc
and
add
push
fiadds
inc
scas
mov
fdivrl
ss
loopne
xchg
pop
lock
int
and
mov
xlat
aas
in
mov
popa
add
xchg
xchg
sbb
lods
mov
pop
add
mov
ffreep
dec
rcr
ds
callw
xor
pop
lcall
testl
cmp
fdivrl
mov
or
xchg
xchg
aaa
push
movsb
sub
sbb
enter
xor
faddp
and
jno
out
and
fisubl
or
mov
testb
int3
xchg
jne
movsl
pushf
jg
xchg
pop
in
mov
fcomip
addr16
xchg
outsb
pop
gs
adc
lds
add
mov
cmc
imul
add
inc
ljmp
xor
aaa
int
movsb
clc
or
sbb
mov
call
repnz
pushf
in
or
push
mov
rorb
mov
cmp
or
and
out
jne
dec
testl
sbbl
pop
pushf
xor
push
les
mov
pop
pop
out
or
out
cwtl
test
lret
outsl
and
stc
ss
adc
pop
pop
enter
lock
dec
push
clc
jb
jge
pop
or
sbb
fmuls
mov
jne
ljmp
cld
inc
sarb
lods
aad
fnstcw
cli
loopne
mov
jae
push
xchg
frstor
xchg
aaa
or
jne
mov
ret
pop
fcoml
or
and
mov
add
inc
or
jmp
movsb
cld
adc
rcrb
cmp
ret
in
jne
insl
out
stos
mov
or
push
push
into
sbb
xchg
je
sbb
add
cmpsb
pop
pop
sbb
push
mov
dec
mov
lea
loopne
lcall
gs
mov
cs
jbe
or
ss
cmp
cwtl
leave
xchg
out
in
xor
rclb
jecxz
pop
rcl
or
ss
adc
call
ret
das
and
pop
orb
mov
push
xlat
jg
adc
outsb
push
mov
out
cmp
push
fcoms
stos
inc
xchg
int
xchg
testl
je
mov
in
daa
or
out
loop
std
adc
sbb
mov
cld
mov
stos
icebp
add
insl
mov
mov
adc
xchg
mov
das
xchg
and
xchg
enter
cs
int3
mov
jno
call
inc
xor
insb
pop
dec
gs
lcall
imul
jo
std
jp
data16
sbb
jbe
loope
xor
push
mov
mov
ja
mov
or
cltd
push
cs
mov
fmul
pushf
mov
inc
lods
imul
adc
rorl
cwtl
jne
push
clc
scas
lods
pop
or
fwait
mov
pop
inc
jmp
xor
fucomip
pop
stc
jae
arpl
inc
cmp
push
jmp
cs
into
and
or
test
call
xor
test
sbb
push
xchg
fnstsw
cmpsl
and
and
push
fisubrl
push
call
insb
ss
push
bound
dec
xchg
mov
fldenv
xchg
daa
cwtl
add
pusha
push
test
paddq
jb
dec
jns
cmp
or
jl
mov
push
pop
pop
ss
push
xchg
fs
test
sbb
je
cmp
icebp
popa
addr16
pop
push
pop
add
mov
mov
cmp
pop
sbb
movsb
fisubl
stos
nop
dec
inc
sahf
fs
sub
test
sbb
jne
sbb
into
xchg
cmp
in
cmp
test
push
mov
adc
sarb
mov
into
adc
xchg
mov
sahf
add
scas
aam
fwait
imul
es
outsl
in
in
aam
into
inc
add
mov
fdivs
iret
xor
outsl
mov
enter
cwtl
leave
cmp
out
mov
out
adc
pop
lods
out
adc
sbb
push
lods
mov
inc
daa
mov
add
pop
fsubl
add
bound
jl
mov
out
xor
or
jecxz
adc
scas
xchg
sub
scas
mov
inc
popa
movsl
sub
and
std
inc
js
pusha
sub
cli
pop
ret
rcrl
orb
idivb
mov
and
mov
lcall
jmp
enter
sbb
adcb
test
sub
pushf
pop
lock
movsl
rclb
in
nop
sub
fldenv
xchg
xor
es
lret
mov
xorl
inc
sub
in
pop
cmp
out
cmp
push
mov
inc
lcall
out
and
lods
add
por
xchg
leave
leave
xor
jno
addr16
int
fildll
xor
mov
add
mov
out
icebp
int3
sub
lcall
ss
push
jmp
cmp
stos
divl
out
mov
into
mov
in
jbe
sarb
dec
mov
lods
iret
dec
xchg
mov
sahf
bound
out
xchg
lods
daa
jg
sbbl
psubq
xlat
cli
call
arpl
mov
adc
std
inc
out
stc
pop
xorl
or
mov
scas
and
movsb
push
xchg
jb
xor
jo
into
cmp
pushl
xor
cmp
push
imul
sti
in
push
repnz
fstpt
sub
or
repz
inc
clc
mov
js
xlat
and
out
inc
push
jl
scas
mov
mov
xchg
lods
xchg
xchg
adc
mov
push
xchg
add
aas
int
or
mov
roll
push
popf
jl
cmpsb
sub
pop
mov
sarb
pop
xchg
sub
std
out
jl
arpl
xor
in
push
rcrl
fists
xchg
test
sub
lea
sbb
push
pop
mov
loope
or
loope
mov
hlt
pop
mov
iret
inc
xchg
jg
in
fimull
sbb
andl
xchg
cli
insl
cmc
std
adc
xor
add
int
push
icebp
pusha
shll
inc
inc
pop
test
pop
sbb
and
icebp
sbb
aam
dec
cmp
dec
mov
inc
push
pop
out
jmp
pop
cmp
xchg
test
fstps
cltd
mov
xchg
aad
sbb
repz
adc
xor
in
js
cmpsb
insl
shrl
fimuls
and
adc
push
and
sbb
xchg
repz
loope
inc
xchg
cltd
rcll
jo
std
mov
imul
inc
push
mov
test
xor
xlat
mov
ss
push
pop
mov
jg
add
lds
into
xchg
shll
push
imull
jge
test
push
in
push
jl
imul
popf
daa
gs
push
xchg
xlat
or
inc
aad
imul
loopne
xchg
mov
shl
sub
scas
fstpt
mov
stos
pushf
push
fs
mov
push
inc
jno
push
cmp
pop
stos
adc
sbb
inc
loopne
fdivl
test
out
mov
lods
xchg
mov
mov
push
sbb
mov
jecxz
cmp
stos
das
mov
int3
repz
iret
outsb
xchg
addr16
and
mov
xchg
and
xor
dec
mov
cmpsb
cwtl
imulb
sub
leave
mov
xorb
xchg
or
and
sbb
xchg
shlb
jne
mov
xchg
jg
das
sbb
lea
sti
fwait
int
shl
jmp
mov
xorb
cmpsb
push
sti
adc
nop
dec
adc
jno
mov
lcallw
loopne
xchg
xchg
dec
out
pop
mov
mov
shlb
subb
adc
je
jns
sub
dec
ds
sbb
fisubrl
jg
jecxz
rcl
pop
mov
ret
sbb
push
lcall
dec
pop
mov
jns
sub
sbb
leave
call
dec
mov
sarl
imul
push
rcrb
insl
adc
and
mov
lods
mov
imul
jg
data16
orl
in
fwait
mov
out
je
rcll
pushf
sbb
push
popl
jmp
cmpl
sbb
cbtw
jnp
xchg
push
push
adc
xchg
ljmp
cmpsl
mov
les
adc
jns
and
cmp
insb
or
cmpsl
and
test
sbb
mov
sbb
xchg
pop
movsl
cmpsl
int3
and
dec
mov
add
out
xor
test
push
xor
pop
pop
sub
adc
xor
outsl
ja
lods
xchg
popf
hlt
data16
mov
mov
mov
push
dec
negb
mul
in
std
push
popf
out
mov
aaa
and
inc
stos
dec
daa
lret
cmpsb
std
cmpsb
fidivs
ljmp
xchg
pop
stos
sub
sub
and
lret
dec
nop
bnd
hlt
shl
sub
xor
push
ss
lret
shrl
mov
mov
inc
dec
mov
outsb
add
and
mov
ret
imul
int3
push
ret
inc
and
repz
pop
or
push
js
insl
inc
ja
sub
xor
lret
pop
add
cld
pop
and
rol
pop
push
push
push
imul
and
js
xchg
imul
xchg
pop
hlt
dec
adc
push
cmpsl
mov
sbb
sub
pop
mov
or
hlt
sbb
jl
and
leave
pop
sub
insb
dec
push
push
fsubs
leave
jne
cmp
xchg
jmp
push
aad
mov
ja
stos
cld
sub
jae
ror
gs
push
cmp
addl
pop
or
jae
ror
mov
sti
js
or
pop
scas
nopl
xchg
pop
add
into
xor
xchg
xorb
lahf
ret
jno
in
cmp
fidivrs
in
mov
inc
jmp
je
imul
cmpsl
ret
ja
xchg
fs
xchg
imul
lret
test
xchg
test
sub
out
pop
push
xor
movsl
xchg
test
rol
pop
dec
mov
imulb
cmp
or
or
nop
jae
in
push
push
and
sub
lea
sub
lea
mov
cmp
out
inc
sbb
icebp
cmpsl
cli
push
and
scas
fisubrl
inc
mov
or
ljmp
or
sub
adc
sar
loop
add
insb
cld
daa
mov
fnstenv
ds
push
mov
fcompl
outsl
and
ljmp
mov
lret
clc
shr
sbb
xchg
cmpsb
es
insl
xchg
test
and
rol
add
cmpsb
movsb
adcl
fnsave
xchg
lret
imul
mov
movsl
pop
jp
dec
mov
cmpb
sub
insb
rorl
mov
inc
sub
lret
sahf
sbbb
pop
nop
testl
rclb
addb
inc
daa
mov
push
and
or
and
insl
inc
into
bound
les
cmpsl
pushf
stos
mov
mov
mov
xchg
jle
or
dec
ja
inc
or
ret
sub
jl
lods
and
pushf
mov
addr16
jp
sbb
popf
jae
inc
mov
ljmp
lcall
imul
sbb
ret
inc
sub
sbb
xor
lret
cmp
das
push
and
xchg
mov
enter
mov
addr16
clc
jne
out
in
dec
jbe
dec
dec
mov
or
sarb
or
xchg
adc
jp
sbb
and
insb
rolb
lcall
mov
sub
jno
or
int3
pop
and
mov
int
inc
jge
movsb
xchg
xor
jae
movsb
mov
sub
mov
adc
inc
leave
inc
adc
imul
nop
in
lock
push
arpl
push
rolb
xchg
mov
jbe
lcall
les
icebp
es
adc
jno
mov
and
pop
in
stc
hlt
and
mov
clc
push
fildl
mov
movsl
pushf
pop
insl
mov
loop
lock
mov
sbb
cmpsl
ja
ja
mov
out
pop
lods
push
andl
mov
mov
jle
pusha
enter
cmc
jnp
clc
pushf
mov
inc
std
shll
pop
lahf
lcall
xchg
andl
clc
ljmp
xlat
outsb
jp
xchg
imul
mov
dec
std
dec
jbe
iret
xor
xor
inc
pop
mov
push
sbb
clc
and
data16
stc
in
mov
mov
cltd
push
je
je
jbe
add
ds
iret
loope
and
jg
mov
push
sbb
test
sub
in
xor
cmc
mov
out
jb
adc
fisubrl
pop
xchg
add
sti
into
adc
sbb
cmp
push
mov
xchg
jbe
subl
bound
dec
xchg
int3
andb
cmp
xchg
into
aam
nop
jnp
into
add
mov
cmp
lods
or
add
pushf
out
add
cmpsl
loopne
pop
pop
mov
xchg
jl
mov
loopne
and
movsb
icebp
xchg
cmp
sbb
lret
mov
mov
jg
in
sahf
shr
inc
adc
pop
adc
stos
test
lahf
fsubrl
addb
roll
enter
clc
fwait
dec
out
mov
xor
cmp
xor
out
xchg
imulb
sub
and
fmull
mov
mov
leave
adc
dec
dec
mov
addr16
cs
lret
sbb
aad
outsb
testb
push
pop
push
dec
in
pop
scas
mov
stos
loope
out
mov
aam
lds
insl
mov
aam
out
inc
out
lahf
dec
pop
testl
mov
lds
arpl
mov
dec
mov
mov
data16
rol
cmp
lcall
arpl
push
sub
stos
push
pushl
cmp
xor
xchg
mov
lods
add
fnsave
dec
lcall
jecxz
aaa
call
jp,pt
ficomps
in
add
or
mov
mov
jmp
mov
ss
pop
loop
pop
xor
or
notl
mov
xchg
adc
push
cmp
mov
mov
movsb
mov
hlt
nop
inc
sub
push
xlat
or
nop
adcb
add
xlat
in
aad
inc
lods
fisubrs
imulb
and
jle
out
sti
xor
xor
mov
leave
dec
add
gs
repz
sti
loopne
cmc
mov
ret
gs
push
or
mov
cmp
test
xchg
dec
fldenv
test
xor
mov
jb
or
call
pop
xchg
in
adc
mov
push
and
shll
stos
int3
mov
add
mov
mov
pop
inc
mov
enter
jnp
pushf
jae
inc
sbb
dec
cli
repnz
ret
mov
inc
dec
fwait
push
pop
fisttps
repnz
cmp
inc
shlb
enter
ds
dec
and
add
scas
and
cmp
repz
pop
inc
stc
in
rcll
or
sbb
xlat
push
sahf
dec
add
shll
loopne
cmpsl
mov
or
push
scas
push
lret
push
lods
jmp
outsl
outsl
test
mov
push
xor
mov
xor
and
ss
clc
mov
adc
rcl
inc
test
lds
or
scas
orl
subl
pop
mov
jb
push
inc
mov
ffree
push
dec
fsubs
rolb
add
inc
xor
cwtl
mov
add
jbe
adc
pop
je
in
fisubrs
mov
les
sub
add
cmpsl
jb
xchg
imul
clc
sub
aaa
mov
jns
xchg
roll
jecxz
popa
xor
sti
jmp
xlat
cmp
pop
call
orb
std
repz
cmp
push
xor
gs
sbb
sbb
cmp
mov
xor
dec
xor
test
int
nop
arpl
inc
imul
mov
add
adc
outsb
xchg
lds
jl
int
add
sbb
fisubs
iret
popf
rolb
clc
fsubl
pop
sti
pop
dec
into
adcl
out
or
hlt
push
loop
aam
inc
pop
mov
in
rorb
xor
pop
jg
xlat
pop
bound
inc
pop
xor
add
mov
inc
xor
mov
mov
mov
addr16
inc
add
lds
subl
mov
adc
mov
xor
stc
scas
and
pusha
arpl
xor
xlat
push
hlt
divl
das
out
icebp
pop
and
addr16
pop
pop
and
cwtl
int3
ds
push
pop
stos
in
fwait
pop
push
mov
pop
clc
outsl
scas
lds
pop
push
nop
inc
mov
dec
and
lret
inc
dec
push
lret
xchg
and
and
xchg
mov
and
sub
aam
pop
ss
mov
sub
cmp
inc
adc
sbb
push
adc
sub
shrb
cltd
sbb
and
adc
dec
js
sub
sbb
loope
jae
into
sti
ja
pop
test
or
idivb
repz
std
mov
cmpsb
cld
jp
cmp
cmp
mov
mov
xor
mov
in
cs
sahf
cmp
movsb
mov
push
inc
adc
scas
cld
cmp
les
lods
std
fidivrs
pop
out
imul
xchg
fisttpl
mov
push
jmp
pop
jge
repnz
jmp
sbbb
pop
fdivrl
pop
in
pop
add
cmpsl
outsl
mov
mov
xchg
ds
push
data16
pop
adc
adc
add
mov
enter
xor
fstpt
mov
cs
imul
in
mov
cmp
push
cwtl
je
jl
xor
add
incl
fnstcw
or
out
jns
es
pop
ljmp
cltd
repnz
idivb
repz
sub
inc
test
cltd
xchg
and
or
movsb
sub
mov
xor
mov
jecxz
xor
cld
dec
or
out
sub
lret
idivl
repnz
iret
cli
xlat
mov
pop
jb
sub
je
leave
lock
or
sub
sub
ret
or
aam
js
in
xor
dec
data16
adc
hlt
cs
sub
cmc
mov
cmp
mov
loope
xchg
push
pop
mov
xor
xor
outsb
jmp
xchg
vcvtss2sd
outsl
and
loop
aas
out
leave
inc
jne
ljmp
lods
loop
cld
sub
cmp
aas
clc
and
loope
jb
int3
rclb
movsl
inc
js
cmp
mov
pop
in
sysexit
movl
out
sub
ja
mov
sti
mov
inc
in
shr
push
xchg
or
lret
fistl
cli
dec
cwtl
jp
inc
ret
sub
mov
adc
push
pop
xchg
push
xor
dec
pop
incl
lock
sbb
je
call
data16
adc
pop
sub
addr16
les
shl
dec
jnp
add
cltd
push
sahf
sti
mov
sbb
adc
out
notb
sub
test
dec
addl
sub
or
loopne
mov
je
les
push
add
idivb
das
adc
jnp
mov
sub
inc
mov
bound
outsl
xchg
icebp
push
vpsrlw
mov
mov
loope
xchg
inc
test
scas
xor
aas
or
fidivrl
repz
or
jecxz
mov
stos
into
int
jns
aad
jb
mov
or
cltd
stos
test
push
test
ja
rol
rclb
scas
addl
fwait
mov
sub
push
aam
divl
stc
mov
mov
cltd
sub
pop
ret
pop
mov
out
adc
add
cmp
push
dec
repz
sti
mov
outsl
mov
loopne
push
test
mov
add
fxch
push
loopne
and
fiadds
nop
leave
pop
dec
adc
cmc
xor
adc
inc
inc
mov
adc
jbe
mov
xor
arpl
add
push
shrb
adc
xchg
adc
xchg
mov
cs
inc
cmp
mov
xchg
out
aad
mov
dec
pop
aad
add
dec
data16
les
pushf
clc
and
inc
mov
sbbb
mov
ljmp
cmp
xchg
add
push
mov
mov
shll
jl
pop
mov
movsb
jle
mov
sbb
pop
test
inc
xchg
and
and
or
xchg
pop
dec
cmc
ljmp
shll
ret
into
sub
lds
xchg
cmpsb
mov
pop
nop
pop
icebp
pop
mov
in
inc
je
lret
iret
cmpsl
lcall
add
inc
adc
ret
std
or
mov
sbb
inc
push
xchg
repnz
jecxz
or
sub
sbb
test
mov
mov
xor
in
ljmp
cmp
popa
fnstenv
lret
out
sbb
cmp
rcll
xorl
jp
mov
insb
mov
push
test
mov
xlat
daa
outsl
dec
push
dec
adc
repnz
les
xor
cli
xchg
mov
test
sarl
lahf
sbb
fs
jg
mov
lret
hlt
xchg
int3
jb
decl
icebp
xchg
mov
dec
pop
inc
aas
or
and
pop
pop
pop
aam
ret
xchg
sub
icebp
hlt
or
pop
add
xchg
ficomps
or
push
xchg
mov
clc
xlat
mov
out
dec
hlt
insl
jae
add
imul
addr16
jne
sub
sbb
mov
mov
loop
out
mov
scas
addb
bound
mov
repz
addb
fcmove
jne
push
es
jbe
movsb
dec
pop
adc
movsl
sbb
xchg
shll
adcb
fldcw
dec
fstl
repz
dec
xchg
xchg
mov
loope
in
fnstcw
fidivl
lods
mov
dec
js
ds
xor
cmp
test
cmc
loop
xor
and
fadds
mov
or
orb
push
mov
ss
add
addr16
cmp
mov
divl
and
sti
inc
adc
and
dec
sbb
xchg
push
sarl
xchg
dec
pop
daa
add
es
cmp
movsb
bound
mov
in
fists
push
ds
push
inc
stos
lret
sbb
pop
cli
loope
std
xor
and
jmp
je
mov
in
jl
xor
add
xor
outsb
icebp
fwait
inc
adc
jo
ja
add
imul
or
mov
adc
jge
jno
movsl
filds
push
mov
in
cmp
mov
jo
push
xor
cmp
mov
push
push
mov
sbb
ret
jp
pusha
or
xor
dec
push
outsb
inc
fsub
or
mov
dec
inc
orb
iret
xchg
lea
sub
push
sbbl
int3
dec
add
mov
lock
stos
hlt
or
sahf
in
callw
adc
popf
imul
mov
add
dec
or
xlat
xchg
jb
lods
in
sbb
mov
test
jg
and
or
pushf
cmp
cmpsb
add
call
jo
in
jno
mov
push
mov
push
push
xchg
popa
jp
xorl
scas
jne
sub
ja
cmp
mov
ret
pop
mov
and
push
out
je
mov
popf
sub
push
mov
mov
mov
jle
dec
mov
add
mov
adc
cltd
xchg
mov
fdivs
add
mov
inc
push
mov
mov
mov
xor
int
and
mov
aam
jecxz
mov
sub
mov
push
stc
data16
ja
inc
sbb
out
jno
sti
jmp
mov
jno
arpl
aam
addb
xchg
xchg
leave
xchg
fcompl
clc
ss
jb
inc
xchg
mov
pop
dec
sbb
push
pop
mov
das
mov
mov
jnp
mov
test
push
daa
or
mov
jle
je
mov
jl
lea
xor
sub
and
fisttpl
dec
pop
sub
gs
sbb
movl
or
into
out
aad
mov
adc
mov
dec
sbb
iret
xchg
lret
cmp
inc
jle
test
test
jo
enter
cmp
movsl
and
sbb
cmp
mov
movsb
push
or
add
xor
test
xchg
xor
fnsave
inc
adc
aaa
pop
mov
inc
in
jmp
es
shl
mov
imul
xchg
pop
push
cltd
xchg
mov
add
fiaddl
sbb
bound
cmpsb
cmc
sbb
jl
mov
xchg
mull
cmp
aam
int
xor
jmp
pop
fnstsw
aaa
lret
stc
dec
fwait
sbb
xchg
inc
cltd
inc
or
es
out
add
add
icebp
popf
mov
pop
testb
int
xchg
cmpsb
mov
repz
mov
cs
mov
push
add
jl
xor
dec
xchg
cli
xor
push
jl
filds
ja
push
in
xor
out
loope
scas
inc
adc
lock
cmc
loopne
fistpl
pop
ss
aas
ret
sar
icebp
mov
fs
in
and
std
dec
xchg
xlat
mov
jl
inc
jno
out
mov
xor
mov
lea
mov
sbb
ret
aaa
mov
push
pushf
dec
mov
cmp
inc
xor
xchg
mov
lcall
lds
fnsave
jecxz
push
xchg
stc
sub
adc
icebp
subb
ret
mov
adcl
int3
push
mov
or
cmpl
inc
jns
dec
or
push
inc
and
cmp
es
mov
xchg
fsts
bound
movl
mov
fstps
inc
sbb
jl
inc
mov
sbb
xor
mov
push
lods
and
jb
repz
pop
push
inc
cmp
mov
adc
add
test
dec
subl
out
mov
in
lret
push
push
sub
inc
cmp
subl
mov
ja
sti
xor
lock
repz
sbb
incb
stos
movsl
jo
and
std
les
mov
pop
push
cmp
xchg
idiv
hlt
jecxz
jae
leave
xchg
mov
add
adc
mov
push
mov
stos
cmpsb
mov
call
bound
jp
js
out
cltd
sbb
push
inc
pushf
adc
pop
mov
negl
js
ret
lods
pop
cmp
popf
cmp
mov
inc
not
in
mov
insb
sbb
js
icebp
dec
lret
jae
rsqrtps
push
out
stc
shlb
xor
inc
and
pop
push
scas
add
push
mov
adc
add
sub
mov
and
test
scas
dec
sti
mov
mov
adc
dec
cmp
out
and
ret
mov
imul
jns
adc
adc
popf
jns
cmp
iret
rcll
mov
or
xor
ss
mov
fst
cld
scas
rorl
rolb
lock
fstpl
or
sbb
jge
fidivrl
push
jp
sub
ljmp
movsl
cmpsb
mov
xor
adc
mov
push
iret
outsb
jns
add
rclb
popa
pop
push
leave
sub
in
rorb
push
xor
shrl
fiaddl
mov
daa
sarl
je
aam
lahf
stos
xchg
fs
adc
or
pop
pop
inc
les
jmp
js
adc
mov
pop
addr16
and
sub
les
pushf
mov
push
cmp
fwait
jae
sub
add
push
movb
icebp
fidivl
add
loop
jp
cmpsb
sub
fnsave
popf
popf
aam
xlat
jbe
mov
adc
push
mov
add
push
test
ja
rcr
sbbl
lcall
cmpsl
push
fcoms
jne
sbb
bound
addr16
scas
pop
or
icebp
test
xchg
js
divb
sbb
mov
add
jo
popa
mov
mov
jb
je
mov
rolb
sahf
lahf
cmp
lahf
pop
xchg
jmp
je
jmp
nop
pusha
adcb
and
add
test
testb
cltd
cli
xchg
jg
outsl
jmp
lock
mov
mov
fwait
test
rcrb
sub
mov
or
jns
insl
mov
and
sbb
cmp
and
in
shrb
mov
insl
fildll
sub
xchg
stos
movsb
mov
mov
jnp
aas
jg
dec
call
pop
testl
sar
pop
jae
or
lahf
imul
xchg
sub
pop
pusha
pop
add
mov
stc
stos
xchg
fnstsw
add
imul
sbb
adc
jb
sbb
leave
aam
inc
and
adc
ss
mov
rol
cld
sub
mov
adc
int3
push
and
pop
or
outsb
cwtl
xorb
xchg
ds
ljmp
push
push
pop
jo
test
notl
pop
cwtl
sar
or
xor
and
ficoml
xor
or
dec
inc
sub
int
jb
and
push
test
push
or
add
leave
test
mov
sbb
outsl
loop
imul
shlb
bound
push
xchg
xchg
out
ss
mov
cmp
test
fcoml
cltd
ss
sub
dec
adcb
add
dec
sub
xchg
inc
add
or
ficoms
pop
xor
pop
leave
jo
aaa
push
pop
sarl
fs
fdivr
push
jmp
sub
rcrb
jl
fs
rcll
jl
sbb
and
xlat
in
sub
cli
jle
xchg
cltd
in
aad
sbb
out
xchg
xchg
jns
sub
xchg
cmp
and
lods
xchg
pop
fisubrl
adc
inc
sarl
ret
mov
repnz
outsb
ret
mov
sti
in
jns
mov
shlb
pop
scas
add
icebp
pushf
xchg
push
sbb
jns
push
add
popa
pop
fwait
or
mov
lret
call
xor
xlat
daa
in
inc
cmpsl
and
mov
loopne
dec
sbb
in
mov
xor
jg
test
xor
dec
mov
fcmovnb
ja
sahf
fstpl
mov
sub
test
ds
movsl
test
jne
push
lds
or
jecxz
and
inc
mov
and
in
mov
add
xchg
hlt
sub
jae
mov
inc
lea
out
inc
adc
xchg
sbb
mov
cmp
xlat
dec
and
lcall
pusha
clc
or
mov
cs
cmpsb
mov
std
inc
pop
popa
adc
jecxz
xchg
js
lea
and
call
xor
xchg
adc
or
movsl
mov
push
gs
jle
xchg
fiadds
sub
xchg
pop
ret
jg
pop
cmp
push
mov
test
lret
jno
pop
les
xchg
sti
cmpsl
jl
repnz
or
mov
push
jmp
sbb
loopne
mov
popf
sbb
mov
ret
das
and
enter
testb
aaa
shr
sub
adc
push
int
fs
push
mov
cmp
imul
ficoml
xor
push
enter
add
add
cmp
sbb
xchg
sbb
jns
stc
or
pop
jp
aaa
insb
cmpsl
stos
inc
sbb
movsl
sbb
dec
and
jmp
pop
out
adc
xor
shrb
and
xorl
jae
test
xchg
outsl
or
arpl
xlat
mov
in
cmp
mov
mov
sbb
ret
icebp
mov
mov
adc
insb
or
xor
ret
loop
pushf
cmp
xchg
fistpll
lret
imul
jbe
xchg
in
cwtl
jae
rcrl
ss
mov
pop
mov
adc
sbb
shr
inc
mov
dec
lock
jb
and
sbb
ret
push
je
jne
lret
mov
pop
push
sbb
add
clc
lods
testb
ja
out
test
fsubrl
inc
jge
sarl
add
ror
lcall
dec
push
shrl
mov
and
xor
ret
jle
or
pop
stos
mov
pop
popf
loope
enter
lds
stos
lods
stos
sbb
inc
addl
jp
or
jae
pop
outsb
xor
push
sbb
xor
test
test
jae
xor
pop
mov
sbb
and
inc
push
mov
dec
cltd
mov
add
and
lea
test
iret
es
int3
adc
cmp
jnp
adc
mov
fidivl
pop
mov
xor
sbb
xchg
mov
dec
inc
cmpsl
sbb
loopne
imul
ljmp
xor
int
mov
dec
push
sarl
mov
push
jns
dec
sub
ja
add
mov
iret
data16
sti
movsb
fwait
das
int
adc
add
mov
inc
cmp
mov
jg
cmp
inc
je
addr16
pop
mov
jb
jg
insb
push
mov
sub
push
jl
add
mov
je
outsl
out
iret
adc
cld
fisttpll
popa
inc
daa
rcr
inc
test
insl
cs
and
shll
lahf
jge
cmp
dec
push
test
push
movsb
sti
xchg
push
cld
sbb
ds
adc
jae
pop
add
mov
sub
call
mov
mov
mov
pop
mov
clc
clc
stos
loope
and
ret
add
cmpb
je
fidivrs
leave
xor
test
mov
pop
mov
pop
inc
inc
cwtl
jp
gs
pusha
in
aaa
int
mov
or
loop
cmp
inc
and
inc
cmpsb
and
inc
orl
xor
leave
ja
pop
inc
mov
xchg
jmp
sbb
test
dec
sbb
push
or
daa
and
xorb
sub
cld
and
mov
inc
jne
daa
xor
sub
outsb
sub
dec
adc
push
insb
in
jb
or
nop
pop
xchg
push
inc
es
into
popa
mov
pop
mov
mov
bound
je
jo
jnp
movsl
repnz
xor
hlt
iret
dec
jno
shlb
xchg
add
dec
pop
mov
xchg
add
dec
aas
inc
mov
adc
xchg
je
fisttpll
and
jge
sub
nop
es
jg
das
push
and
inc
mov
test
clc
jns
rorb
lods
mov
imul
cmpsb
lds
inc
pop
ret
mov
jbe
dec
loop
gs
hlt
call
mov
mov
push
jp
push
dec
cmp
out
cmpsb
jmp
inc
pusha
movsb
pop
or
repnz
mov
cmp
popa
lret
inc
fmulp
repz
xchg
mov
and
jg
shll
sub
idivl
or
push
jns
sub
test
fcoms
adc
sbb
xchg
cmp
jno
pand
jb
sahf
pop
mov
jmp
lods
bnd
xchg
pop
jbe
mov
in
int3
push
mov
pusha
mov
ja
cld
cmp
sub
push
and
in
mov
adc
push
sti
pop
fucom
mov
sbb
adc
aad
mov
adc
push
mov
xchg
in
js
sbb
jp
psrad
in
add
movsb
jae
jle
or
imul
aas
add
movsb
and
xor
and
push
mov
mov
pop
dec
pusha
popf
cmp
insb
outsb
dec
arpl
jecxz
mov
jp
out
xor
ja
dec
lret
xchg
xor
outsb
push
lds
fiaddl
outsl
and
and
in
inc
loop
stos
aad
cmc
rcl
jae
cli
test
xor
sbb
xchg
in
sub
sti
mov
in
sbb
add
rcrb
out
add
das
push
jne
insb
mov
icebp
mov
les
pushf
test
frstpm(287
sbb
pop
inc
mov
and
push
pop
mov
push
mov
push
jp
cltd
jb
rclb
movb
push
mov
xor
and
pushl
mov
jle
mov
adc
or
add
ss
jmp
xor
add
xor
cli
jecxz
dec
jno
xor
movsl
cs
mov
push
sahf
cmp
shlb
pushl
das
jp
sub
jmp
testl
push
jecxz
fimuls
jmp
cmp
movsb
hlt
lds
adc
and
shlb
lods
hlt
pop
add
push
sti
add
sub
xchg
subb
rcrl
cs
lret
jb
or
dec
rorb
and
cmpsl
mov
and
cli
lods
mov
decl
mov
jnp
aad
or
add
mov
cs
es
pop
dec
lock
inc
push
lods
mov
hlt
stos
add
xor
and
out
xchg
mov
adc
cwtl
cmp
sbb
rcl
fucomi
es
ret
cwtl
ret
xor
push
lahf
adc
add
sub
jg
adc
ja
iret
lea
pop
or
push
out
mov
xchg
mov
fstpl
sub
out
popf
add
inc
stos
ss
loopne
xchg
fldl
es
xchg
dec
repz
jmp
jle
ds
push
rcl
pop
inc
lods
call
mov
add
mov
js
sbb
out
adc
and
add
mov
push
push
jp
xor
lods
dec
xchg
arpl
jnp
mov
fsts
cltd
push
sbb
pop
rorl
adc
test
and
clc
adc
fwait
fwait
xchg
aad
repz
clc
mov
jmp
pop
inc
cmpsl
fstpl
stos
adc
adc
mov
cltd
in
lcall
lahf
pop
mov
xchg
xor
lret
or
pop
cmc
icebp
inc
cmc
add
sbb
ret
sbb
xor
rcrl
ret
aam
inc
and
out
push
mov
xchg
mov
inc
xor
out
pusha
dec
insl
enter
test
cmpb
mov
daa
and
mov
fsubrs
mov
inc
daa
dec
and
loop
out
pop
add
pop
mov
pop
sbb
sbb
insb
xchg
repnz
push
scas
cmc
mov
push
sti
test
cmp
xchg
pop
ljmp
orb
add
dec
fnclex
test
inc
xor
jmp
xchg
lret
mov
mov
loopne
mov
stos
shll
lret
add
out
cld
sub
call
and
push
sbb
int
movsb
mov
jmp
push
decl
xchg
xor
dec
mov
xchg
pop
pop
js
lock
adc
in
loopne
mov
test
and
shlb
jbe
push
aaa
mov
ficoml
mov
nop
cwtl
or
fnstcw
and
lcall
lock
loopne
scas
push
push
inc
xchg
fdivr
and
clc
jnp
dec
sub
and
pop
fs
xlat
test
fbstp
and
sbb
push
or
imul
mov
xchg
fdivrp
xchg
out
cltd
data16
sub
fwait
cmc
push
or
in
or
mov
clc
adc
push
xor
stos
nop
cmpsl
and
dec
das
sbb
push
cmpsl
lock
movsb
cmp
nop
or
fs
sbb
add
pop
jo
jns
sbb
ds
xor
aam
outsl
xchg
jge
xchg
dec
xor
ret
ss
inc
jns
mov
call
dec
pop
test
pop
sub
pop
xchg
das
mov
push
outsb
movsb
nop
out
stos
leave
jno
cmp
mov
test
inc
mov
in
int
aad
mov
dec
sub
js
popl
mov
or
or
sub
repnz
imul
push
xlat
adc
jb
bound
sbb
mov
dec
add
pop
pop
hlt
pop
mov
cmpsb
loop
add
mov
mov
jecxz
in
scas
rorl
inc
shlb
push
js
and
push
adc
mov
and
sub
mov
cmp
cmp
mov
lock
out
lea
jp
stc
or
outsb
sub
push
test
arpl
xlat
push
test
lcall
outsb
sbb
outsl
out
sahf
adc
test
lahf
mov
shl
aaa
sti
ds
cltd
push
mov
push
loop
test
dec
mov
daa
mov
adc
in
inc
insb
inc
lds
push
sub
int3
sub
push
and
int
aad
les
cmpsl
daa
in
imul
dec
loope
test
insl
mov
js
mov
or
or
mov
inc
data16
mov
sbb
or
xor
push
shrb
sbb
loope
lds
lods
cmp
cli
cwtl
add
popf
dec
pusha
ja
fcmovnbe
inc
cltd
je
jecxz
push
les
mov
clc
idivb
in
inc
dec
add
pop
stos
sbb
fists
stc
mov
xchg
stc
fisubrl
cmp
push
bound
inc
lcall
imul
sbb
and
jno
push
bound
pop
xor
int3
jg
mov
insl
sahf
mov
rclb
sahf
xor
loopne
gs
jp
add
dec
pop
mov
and
sbb
jnp
imul
sub
lods
pop
ret
or
lahf
or
lock
adcb
sbb
test
daa
xchg
cli
sbb
and
jae
in
daa
sbb
dec
push
movsb
jmp
or
mov
fbstp
in
push
mov
mov
jge
add
mov
dec
mov
daa
mov
sub
ja
shl
in
cmc
mov
xchg
add
insl
and
mov
sub
pop
mov
stos
arpl
push
ss
jp
aas
arpl
jmp
outsb
rcrl
inc
sarb
loop
fwait
in
mov
movsl
add
aad
xor
pop
mov
xchg
aas
nop
xor
test
xor
lods
jmp
and
stc
sub
jae
ss
fnsave
pop
mov
pop
mov
loop
jae
dec
scas
stos
push
rolw
jle
out
push
adc
cmp
mov
out
ret
dec
divb
cmc
pop
and
out
call
cltd
scas
or
and
pop
cmp
adc
sub
imul
xchg
dec
mov
adc
aad
subl
insb
popf
pushf
das
sub
pusha
mov
lock
in
push
adc
lods
ds
insb
loope
dec
repz
mov
push
pop
ror
lock
fists
adc
test
in
xchg
fs
lods
sub
mov
mov
add
ret
mov
fldcw
negb
hlt
clc
sub
test
mov
dec
movsb
in
mov
pop
es
xchg
mov
test
fnstenv
dec
sub
mov
sarl
mov
stc
nop
pop
test
sbb
ljmp
push
and
fisubrs
cli
cmp
mov
inc
fmul
inc
xchg
mov
pushf
mov
shl
sub
lret
cld
andl
jbe
aam
or
aaa
bound
push
je
cltd
lret
es
push
or
cmovs
movsb
jnp
movsl
repz
out
andb
jo
test
aaa
cmpsl
in
mov
mov
xchg
jb
pushf
arpl
xchg
les
xchg
stc
adc
shll
cmp
and
lahf
jle
std
mov
jge
into
adc
mov
add
mov
add
cmp
cmp
rcrl
lds
popa
fs
sti
inc
add
gs
push
fld
pop
adc
mov
jne
loope
jno
cmp
call
push
mov
orl
jne
pop
jmp
cmp
ret
loop
and
add
sub
add
mov
cmp
int
loope
cmpsl
int
incb
mov
fs
lcall
push
dec
mov
ljmp
shll
or
jle
aas
int3
jge
jo
popa
jnp
inc
or
mov
mov
shrl
or
sub
out
pushf
push
cmp
mov
idivl
xor
cmpsb
adc
fbld
aam
loopne
push
lret
call
sbb
out
int3
mov
inc
jp
xor
fstl
leave
mov
dec
pop
mov
mov
mov
adc
xchg
arpl
lcall
push
cmp
or
inc
stc
xchg
mov
mov
jns
xor
sbb
and
sub
add
hlt
jmp
xor
push
ret
imul
pop
xchg
jle
loopne
imul
icebp
fstpt
sbbl
aam
sarl
jne
movsb
lock
pusha
orl
push
xchg
scas
sbb
fildl
push
adcl
dec
lock
mov
or
sbb
imul
xor
cmp
leave
mov
notl
cmpl
cwtl
pop
stos
dec
in
sbb
icebp
test
xchg
jae
adc
sbb
mov
stc
ja
add
xor
pop
and
inc
test
mov
in
add
sahf
dec
test
dec
out
inc
fdivrs
stc
add
mov
shll
js
pop
push
cmp
xchg
add
pop
xor
ror
xchg
jecxz
and
std
notl
adc
movsb
add
mov
fldz
aam
cld
or
pop
or
and
adc
rolb
test
mov
xchg
xchg
ja
mov
bound
aad
cmp
jg
pusha
xchg
dec
pop
mov
test
shlb
sbb
adc
insl
sub
repz
das
fistl
add
jge
in
int
sub
mov
jecxz
jle
test
negb
popf
out
mov
mov
inc
int
scas
scas
loope
or
loop
call
fwait
and
ja
insl
imul
mov
pop
bnd
push
add
add
lea
loope
lahf
mov
xchg
pop
frstor
push
int3
cmp
leave
mov
popf
ret
mov
cmpsb
push
repz
and
sub
pop
inc
fbld
sbb
xchg
pushf
lock
dec
mov
daa
or
inc
addr16
mov
or
adc
xchg
jl
scas
addb
les
sbb
iret
and
xlat
js
jbe
jne
popa
push
mov
and
int3
push
xchg
mov
int3
jg
addr16
call
icebp
push
push
mov
lods
loop
ret
adc
jg
push
xorl
dec
incb
es
cmpsb
fcoml
movsl
mov
sbb
jg
jnp
into
clc
jo
mov
jle
lods
xor
sub
mov
cmp
xor
cmp
push
frstor
addr16
push
fnstcw
mov
jne
inc
push
cmp
dec
imul
jp
daa
cmp
push
mov
mov
adc
adc
dec
inc
cli
cmpsl
jmp
inc
das
in
jns
add
pop
push
pop
xor
out
lcall
test
imul
lods
stos
lods
aam
mov
ja
mov
adc
lds
test
mov
cwtl
cmp
pusha
fcomps
push
pop
cli
out
jecxz
inc
jns
les
cld
jl
ror
cmp
sub
sbb
outsl
bound
mov
jge
sub
push
popf
adc
adc
or
ds
fbld
jo
push
lret
fdivs
prefetcht0
cmp
cli
or
mov
movsb
jge
and
jo
xor
sub
cmp
xchg
aaa
sbb
sub
mov
repz
jnp
sub
movsb
xchg
dec
imul
int
lods
jmp
inc
mov
imul
sarl
popf
cmp
push
xor
rol
and
sub
ds
imul
xchg
stos
inc
lret
ret
mov
roll
je
push
push
adc
rcrl
shrb
mov
popf
sub
lods
das
in
js
mov
sti
shl
push
jne
sub
mov
vxorps
xor
dec
stc
test
je
int
pop
in
fwait
iret
stc
inc
sahf
inc
out
add
jmp
fstl
addr16
mov
jne
sbbb
jg
add
sbb
fsubs
mov
jns
add
into
add
int
shrl
add
loopne
daa
push
popa
mov
mov
push
sahf
lret
add
inc
pushf
cmpxchg
popf
je
inc
xor
stos
pusha
movb
imul
shld
jbe
inc
add
mov
iret
mov
rcl
in
xchg
out
cmp
mov
dec
cmpsl
in
iret
test
xor
sarl
mov
mov
xchg
sbb
dec
xor
stc
notl
cmp
mov
arpl
hlt
sub
inc
sti
mov
lock
ret
dec
dec
ret
dec
xor
hlt
mov
mov
sbb
popa
sti
push
lea
jae
or
ds
dec
adc
jg
dec
aas
pop
paddq
subl
cltd
fdivrs
subl
xchg
es
sbb
std
push
inc
leave
shlb
adc
pop
loop
pop
enter
hlt
add
cld
xlat
test
jbe
add
imul
sti
and
xor
fs
dec
push
pop
jmp
lahf
mov
mov
mov
dec
dec
and
cltd
shrb
std
mov
mov
and
jno
or
rorb
addr16
xchg
lret
data16
jge
push
jb
mov
mov
scas
dec
in
outsl
pop
mov
push
add
jo
aad
inc
test
push
pop
gs
mov
push
sub
lahf
int3
pop
rclb
push
iret
cwtl
daa
sti
and
inc
sbb
pop
fildll
int
rolb
push
sahf
jnp
xchg
adc
lret
iret
fistpl
and
inc
pop
push
popf
lea
push
add
mov
jle
lcall
insl
in
lds
popf
divl
andb
in
fsubrl
out
ja
jmp
fstps
xchg
out
je
in
jl
inc
jo
dec
ss
inc
cwtl
mov
insl
xchg
pushf
test
dec
sbb
imul
js
or
jb
hlt
add
mov
hlt
mov
cmpsl
mov
dec
and
in
pop
push
jecxz
fstps
cs
lret
fisttps
cmp
sbb
inc
jb
mov
js
out
insb
or
pushf
jb
mov
adc
pop
dec
ret
mov
cli
sbb
shlb
cmp
add
inc
xchg
or
flds
dec
jno
mov
xchg
lahf
gs
dec
cmp
fiaddl
lahf
add
adc
loopnew
xchg
shlb
pushf
mov
aas
outsb
pusha
xor
lods
in
sahf
loope
data16
mov
outsl
jl
stc
push
sti
orb
pop
sub
sbb
imul
cwtl
and
sarb
ret
cmpb
pop
add
insb
pop
and
insb
mov
push
jecxz
ficomps
negb
or
jl
cmc
popf
add
lods
fsubl
mov
ret
in
fwait
sbb
mov
lds
and
pop
xor
inc
aam
jb
sub
test
jge
insb
dec
jmp
hlt
push
daa
dec
lret
shrb
les
test
sub
jg
cmpsl
mov
sbb
or
dec
push
add
push
mov
pop
jb
pop
sarb
jl
sub
cmpsl
fimull
repnz
push
pop
scas
fstps
ret
and
cwtl
pop
imul
sub
loop
push
xchg
sub
xor
pop
sar
scas
andl
iret
jno
dec
lock
sub
sub
xchg
mov
xchg
hlt
mov
andb
js
pop
mov
in
gs
jno
lret
mov
cmc
xchg
mov
in
push
add
xchg
fists
mov
lods
pop
or
and
mov
inc
sti
data16
adcl
dec
insl
imul
dec
into
pop
out
je
sub
xlat
sub
das
fwait
scas
stc
mov
aam
mov
sub
jl
rcll
je
in
in
or
in
jns
insl
jae
adc
xchg
rcrb
lcall
fs
outsb
pushf
mov
je
push
or
sbb
push
test
aam
add
adc
mov
and
fld
sbb
dec
shrl
icebp
rcrb
push
add
mov
lock
daa
adc
lea
and
inc
xchg
roll
pop
xor
jp
jl
jns
hlt
dec
cwtl
xor
cmpsb
shlb
adcl
mov
mov
lock
xchg
test
jo
and
sub
insl
ror
pop
leave
sahf
xor
push
ret
adc
cmc
and
lret
addl
pop
add
test
and
std
frstor
ds
popl
js
cmp
test
test
pop
push
pop
in
addl
cmp
in
jae
cs
xor
inc
xchg
or
adcb
pop
js
scas
push
roll
mov
stos
cld
pop
test
mov
out
loope
xchg
cmc
add
pop
fwait
cmpsb
cmc
adc
cwtl
out
xor
push
out
lea
cmpl
lahf
lahf
xchg
lret
sub
xchg
inc
or
fmul
rol
cmp
xor
add
cltd
sti
mov
and
push
ret
cmp
mov
repz
mov
mov
xchg
int
pop
xor
loopne
sub
sub
adc
or
fildll
imul
push
add
loope
cmpsl
xchg
dec
add
push
xlat
mov
xor
push
les
lock
xor
addb
jnp
dec
aaa
lcall
jb
popa
jae
shll
cld
int
add
aam
sahf
mov
pop
ljmp
xchg
sbb
insb
imul
dec
jg
inc
jp
mov
pop
push
sbb
inc
bound
lret
mov
scas
scas
cmp
inc
xchg
mov
popf
in
jecxz
outsb
nop
jno
mov
push
mov
jle
hlt
dec
inc
rcll
cmpsb
mov
daa
sbb
lret
shl
mov
inc
fwait
cmpsb
test
mov
loopne
or
cld
or
inc
shr
icebp
dec
inc
jg
shlb
call
hlt
lods
lods
pop
xor
clc
sub
ss
xchg
adcl
pop
sub
xchg
lods
cli
xchg
lods
fdivr
popf
cmc
jge
jae
cld
inc
call
and
xor
push
lods
push
push
mov
sti
add
push
fmul
mov
movsw
test
sbb
jne
fisubs
scas
in
or
lods
incl
frstor
xor
int3
inc
mov
add
mov
and
mov
pop
sbb
xor
mov
jb
lock
ret
sbb
adc
xchg
sub
xchg
shll
into
add
sarb
lods
fildll
mov
and
insl
pop
xor
rorl
xor
imul
ja
jbe
inc
leave
and
mov
imul
jbe
jle
inc
cmp
test
sub
inc
sar
mov
mov
lods
push
icebp
pop
and
jns
movsb
aas
test
mov
add
xlat
cmp
ljmp
xchg
sahf
add
inc
jecxz
push
aas
sub
adc
icebp
sbb
and
xorb
xlat
push
and
inc
and
jne
ret
daa
andb
dec
leave
cwtl
sahf
das
mov
jbe
sbb
adc
xchg
stc
leave
jnp
mov
pop
push
add
leave
xchg
mov
adc
inc
jne
cmpsb
test
mov
cli
sub
aaa
adc
std
mov
insb
push
add
cmpsb
xlat
in
int
inc
cmp
lds
lock
ret
push
fwait
sbb
jecxz
add
movsb
add
pop
flds
lods
outsl
in
fcoms
ja
in
je
cmpb
daa
mov
mov
xor
bound
pop
fwait
stos
jg
out
xchg
test
test
or
ds
and
test
sbb
imull
es
cmp
dec
sbbb
arpl
repz
pop
inc
negb
pop
lcall
call
js
push
fsubrl
mov
jno
xchg
sub
adc
movsl
rcll
dec
mov
cmp
dec
jnp
push
push
push
adc
sti
insb
push
adc
xchg
mov
fidivl
sub
adc
jge
test
out
or
push
mov
insb
cmp
outsb
pop
cltd
mov
ss
mov
lock
cltd
es
adc
inc
in
dec
xlat
jmp
inc
or
out
lods
mov
dec
sbb
mov
add
cmpsb
out
mov
repnz
pop
hlt
sub
xorl
ljmp
pop
push
std
popa
dec
add
jo
or
push
mov
mov
sbb
fcompl
inc
dec
pop
jg
add
mov
jp
dec
fldcw
hlt
rorl
adc
clc
xchg
xor
cmpl
imul
cli
mov
mov
frstor
test
popa
or
movsl
sahf
mov
imul
pop
adc
jg
shlb
loop
xorb
scas
das
push
xchg
loopne
cmp
push
ss
sub
sti
inc
jg
mov
inc
loop
in
out
or
cmp
push
mov
es
subb
dec
sbbl
push
add
icebp
pop
push
cmpsb
mov
aas
sub
nop
add
fdivr
mov
lods
out
jno
aam
push
repnz
rcrl
loope
or
push
popa
jmp
dec
daa
insb
jge
es
sub
cmovne
sbbl
ret
ror
bound
loop
in
cmp
push
mov
rcrl
mov
pop
fcoml
int
movsl
mov
movsl
xor
lock
mov
pusha
stos
dec
dec
and
xchg
mov
or
pop
pop
lret
lret
sbb
mov
and
inc
mov
sbb
test
stc
jge
insl
je
cmpsb
fs
es
loope
mov
cmpsl
popf
sbb
enter
dec
mov
inc
mov
in
insb
sub
xor
test
xchg
mov
sahf
pop
jns
lret
in
adc
popf
cltd
xor
jmp
jo
sub
call
cld
xchg
jae
in
dec
aas
mov
rorl
loopne
shl
jp
cmc
and
scas
cmp
jmp
inc
sub
sub
ret
adc
xchg
outsl
scas
mov
push
or
pop
ret
sbb
xor
jnp
sbb
shlb
mov
stos
lods
mov
sbb
cmpb
xchg
push
imul
imul
test
repz
mov
inc
fdivs
sub
mull
int
pop
or
testb
pop
mov
pop
and
std
sub
enter
mov
fs
loope
sub
xchg
imul
insb
out
mov
sbb
ror
lock
xor
sub
js
stos
mov
sahf
int3
fldenv
sbb
sbb
cwtl
cmp
cmpsl
fdivrs
mov
mov
or
mov
xchg
cmp
xchg
xor
push
insb
mov
sbb
cld
clc
je
sbb
mov
jmp
push
push
aaa
jae
jns
cmc
popa
loop
rcr
bound
mov
bound
xchg
stos
fbld
sub
out
imul
test
mov
ljmp
lea
push
hlt
inc
mov
cmp
lcall
pop
and
mov
mov
and
cwtl
mov
dec
aam
jg
lret
sub
mov
dec
in
cmc
jno
pop
inc
mov
arpl
mov
ja
cmp
in
out
or
jae
or
adc
mov
ljmp
and
push
add
push
jecxz
incb
push
jb
addl
adc
pop
es
decl
sbbl
jne
mov
clc
iret
ret
jno
adc
movsl
pop
les
xchg
scas
fdivrs
jg
adc
cs
fdiv
ja
insl
dec
push
data16
iret
mov
mov
adc
xchg
in
or
mov
jo
mov
sbbb
lea
mov
ret
aas
addr16
out
cmc
shrb
call
inc
and
call
js
push
fwait
inc
lret
and
testb
and
mov
jmp
add
shrb
jnp
pop
mov
inc
std
push
in
inc
scas
repz
outsl
push
push
lods
sahf
inc
out
pusha
and
or
mov
ljmp
xchg
cmp
fisubl
jp
sub
cli
loop
jns
jae
ljmp
mov
loopne
fisubs
xchg
enter
mov
sahf
adc
jns
sub
xor
rcrb
int
cltd
pop
and
stos
xor
gs
jo
cmpsb
sub
sbb
pusha
daa
xor
fildll
daa
mov
frstor
ljmp
xchg
and
adc
pop
mov
sub
sbb
cmp
into
setne
sbb
setp
mov
jp
push
mov
vmovups
mov
jecxz
or
test
xor
mov
outsb
mov
test
xor
or
imul
jne
test
or
cmpsl
repnz
out
dec
adc
xor
call
mov
jae
es
mov
inc
cmp
rclb
push
rcl
xlat
add
xchg
ja
insb
dec
sti
insb
lret
arpl
jae
outsl
scas
rcrl
test
addr16
movsb
in
enter
out
jb
lret
mov
mov
mov
sti
adc
xchg
xlat
sub
mov
xchg
loop
shlb
fcompp
mov
std
int
inc
inc
lahf
bound
sub
xchg
lcall
mov
pop
shr
or
push
push
jbe
cwtl
stos
push
in
notl
cmpsb
mov
add
ret
pop
fwait
xorb
cltd
test
fidivrl
jo
xchg
and
and
pop
cmpsb
mov
fs
fstpl
rolb
or
daa
mov
lock
sub
cld
mov
sbb
fadds
mov
sub
mov
mov
pop
pushf
mov
pop
fisubrl
cmp
faddl
lea
xchg
and
stc
fnstenv
jns
in
inc
int
andb
mov
bound
pop
mov
lock
ds
adc
mov
inc
arpl
shl
adc
cmp
lods
jmp
setle
arpl
dec
inc
push
hlt
iret
add
daa
pop
gs
js
jmp
outsb
je
and
cli
inc
adc
ss
test
subl
cmpsl
xor
push
pop
or
lods
xlat
jmp
aad
or
mov
mov
fildll
test
inc
cmp
mov
push
ret
dec
xchg
xchg
xor
and
cmp
call
and
mov
hlt
fisttps
or
fwait
outsl
insb
aam
mov
popf
pop
out
cmp
push
clc
aaa
pop
divl
cltd
popa
iret
test
and
adc
cmpsl
push
sti
sbb
shl
cmp
cld
mov
nop
fsts
les
ljmp
lods
mov
sbb
jg
loopne
loopne
xor
pop
icebp
cmp
stos
inc
jp
adc
aas
out
es
shrl
fs
ljmp
pop
cmp
xor
jp
cmpsl
xor
insl
jmp
lds
add
mov
clc
pop
je
fcmovne
pop
mov
cltd
xchg
jl
xchg
xlat
aad
jl
push
cwtl
test
or
mov
jo
vsubpd
inc
mov
adc
mov
or
mov
xchg
add
pop
jae
ffreep
loopne
rcr
popf
mov
mov
hlt
jle
or
pop
sti
int
cmp
jno
or
stc
ffree
ret
std
and
repnz
or
and
das
loop
fistpl
lock
push
popf
popf
std
xchg
jb
pop
scas
or
pusha
mov
or
sbb
rcr
pop
dec
inc
pop
jp
nop
mov
popa
test
sbb
lds
add
mov
and
rolb
lret
int3
jp
rorb
inc
xorb
call
repnz
outsb
adcb
inc
inc
mov
inc
xor
fidivs
fsubs
ds
or
jle
and
sbb
and
add
clc
in
stos
mov
stc
stos
gs
push
ljmp
int3
adc
jmp
sbb
std
pusha
jae
sbb
stc
xchg
cmp
pop
fcom
sbb
mov
jl
loopne
jle
fs
pop
cmp
mov
in
xor
fprem
imul
inc
in
sub
xlat
lea
add
in
push
cli
push
ret
pop
pop
leave
mov
dec
outsb
sahf
add
movsb
dec
in
add
inc
add
push
xchg
xor
xchg
push
sahf
fimull
xchg
jne
aam
sbb
stos
pusha
jns
or
xor
push
leave
fwait
pop
fwait
mov
out
cltd
or
stos
aad
jnp
mov
xor
fcomi
scas
lcall
jno
sbb
xchg
ret
or
mov
ds
ror
xor
es
dec
push
xchg
ss
ja
dec
push
test
xor
mov
push
inc
mov
xchg
sbb
jmp
sbb
sahf
aad
loope
sbb
jnp
cmpsb
mov
test
jnp
sbb
push
push
outsl
std
push
xlat
pop
adc
xor
and
jbe
inc
repnz
push
sbbb
cmp
inc
orb
jge
mov
scas
lret
outsb
lods
mov
loop
pslld
inc
in
faddl
cld
sub
scas
in
les
xor
sbb
xor
lods
and
int3
daa
inc
scas
pop
and
mov
add
clc
pushf
xchg
lret
sub
inc
imul
pop
mov
jecxz
jno
loope
sbb
mov
cld
shld
divl
pop
enter
cmp
cli
dec
pop
jo
mov
pop
cmp
pop
inc
pop
mov
mov
or
movsl
mov
mov
add
inc
push
add
jp
fidivrs
pop
lea
loop
movsl
mov
mov
aaa
or
mov
push
fdivl
and
dec
mov
mov
or
inc
mov
shlb
xchg
movsl
repz
push
out
mov
pop
push
and
xor
pop
lods
decb
repz
negb
mov
fistl
fistps
aas
mov
jb
pop
xor
xor
fistl
loop
mov
fbld
mov
lcall
and
loopne
pop
cwtl
insb
shrl
sbb
daa
pushf
push
ljmp
mov
int3
or
dec
movsl
push
push
and
mov
into
cmp
and
xor
mov
stos
mov
movsl
mov
cmp
fs
lods
lock
call
or
and
test
insb
leave
mov
dec
mov
lahf
xor
movsl
push
inc
mov
fcomi
jecxz
and
mov
cmp
orl
jmp
xchg
mov
mov
mov
xchg
xchg
popf
scas
pop
pop
pop
mov
add
adc
cmpsl
lret
mov
sub
jnp
adc
imul
inc
orl
or
mov
fdivrs
int3
push
call
xor
sub
scas
push
push
lods
jno
xchg
pop
lret
jbe
js
xchg
xchg
shl
repz
lcall
sarb
or
scas
push
xor
cmpsb
push
js
out
inc
negl
cli
xlat
pop
and
and
jo
pop
sahf
lret
add
into
repz
fsubrl
aas
subl
lea
xchg
aaa
adc
xchg
xchg
into
inc
mov
nop
lret
or
fs
xor
insb
push
pop
dec
leave
repz
add
adc
and
push
cmp
xor
jb
gs
xchg
mov
push
scas
or
leave
rorb
sbb
xor
mov
xor
aam
mov
push
enter
test
mov
fnstcw
movsl
insb
sub
das
pop
cs
push
jl
notl
cmc
and
jle
pusha
push
int
ja
aam
cltd
push
cmp
sbb
mov
xor
sub
outsl
and
gs
das
mov
add
and
pop
pusha
out
mov
cmp
dec
test
dec
xor
sbb
int
dec
pop
popa
lcall
out
js
daa
scas
out
or
stos
dec
add
mov
pop
bound
stc
adc
sub
and
leave
popf
adc
out
int3
outsl
lds
xlat
out
push
ret
adc
xchg
sarl
lods
inc
hlt
xor
pop
jae
repnz
cmp
xchg
cmp
jl
xchg
mov
inc
lret
loope
cmp
cmp
or
sbbl
dec
ljmp
cs
push
push
push
inc
test
test
push
dec
sub
into
or
repz
movsb
add
inc
cmp
out
dec
outsb
bnd
jns
fnstcw
adc
sub
dec
mov
out
inc
inc
cwtl
out
fwait
js
decl
sub
scas
rolb
jmp
xchg
imul
aaa
xlat
enter
in
lods
and
cmp
pop
clc
cmpl
or
jne
ja
adc
pop
stc
pop
fwait
inc
scas
add
loop
outsl
mov
popa
and
and
sbbl
adc
dec
andl
cmp
insb
cmpsb
fstpt
sbb
dec
aas
aas
push
ja
inc
shrb
adc
mov
inc
rcrl
mov
fsts
adc
mov
xor
aam
adc
ret
popa
xchg
incl
and
cli
pop
cld
pop
inc
jmp
repnz
sub
xorb
loopne
dec
or
cmpsb
dec
popa
xchg
dec
pop
pushf
cld
xor
push
cmp
lock
sbb
xor
movsb
out
sbb
xor
sbb
loopne
lock
cmc
jns
fsubp
shrb
lds
in
movsl
shll
notb
mov
push
int3
inc
push
push
pop
or
std
andb
xchg
imul
cld
and
femms
rcrb
add
cmpsl
adc
cld
pushf
mov
pop
or
inc
mov
sbb
mov
mull
popa
push
xor
jnp
and
fwait
adc
mov
mov
mov
shlb
mov
xchg
test
outsb
loop
dec
sbb
sarl
pop
fcomps
sahf
add
pop
cli
mov
mov
loop
mov
push
push
add
mov
jle
aad
addr16
push
jmp
icebp
test
mov
cmp
test
lcall
pop
and
xchg
js
adc
mov
add
pop
sbb
fnsave
sub
sub
ror
jl
dec
pop
out
xchg
add
sbb
jg
sub
inc
test
cmc
into
inc
in
lret
mov
cmpsl
lds
mov
bound
insb
adc
mov
push
push
ret
pusha
or
cli
xchg
sbb
mov
lret
in
daa
dec
push
adc
mov
or
xor
pop
lret
js
test
xchg
mov
jle
jnp
les
pop
and
enter
sub
mov
in
gs
negl
lret
cltd
adc
dec
dec
mov
and
jge
nop
or
rorb
popf
jne
jbe
dec
inc
mov
sar
mov
aad
jnp
into
cmc
push
adc
pop
cltd
bound
enter
adc
cmp
push
test
mov
mov
sbb
push
popf
ret
mov
mov
xor
lahf
scas
pusha
adc
in
pop
icebp
sti
jecxz
in
into
loope
stos
mov
xchg
xchg
mov
shld
frstor
lock
in
ss
or
aaa
outsl
or
cmpsl
add
sbb
negb
add
xchg
dec
dec
ljmp
mov
pop
or
dec
lods
push
fisubrl
rcr
dec
push
outsl
cmp
out
mov
ret
cmp
push
pop
ret
ret
inc
mov
pop
iret
sub
mov
jp
sbb
je
and
andl
add
mov
dec
pop
dec
cmp
mov
outsl
xchg
jge
xchg
dec
fadds
insb
cmp
cmpsb
sbb
sbb
sbb
scas
xchg
push
ret
test
sub
sub
or
es
shll
pop
and
inc
inc
jno
into
rorb
hlt
aas
sub
xor
sbb
jne
add
or
sbb
stos
es
add
icebp
lret
mov
rorb
in
inc
cmp
test
fistpll
jmp
stos
fadd
cmc
jmp
aad
negb
out
dec
mov
inc
cmp
in
and
sti
insb
adc
sbb
cmp
lock
mov
mov
and
and
pop
adc
or
das
out
test
push
dec
pop
adc
je
call
test
mov
and
or
fists
mov
gs
xchg
dec
outsl
pushf
aam
pop
test
loop
loop
and
mov
loop
out
fld
sar
pushf
sbb
bound
inc
xchg
or
sub
xchg
jae
jnp
repnz
stc
mov
jae
je
xchg
popf
mov
je
dec
lahf
sub
loope
ds
cli
ret
cmp
sbb
sub
je
daa
lods
das
ret
mov
push
shll
cwtl
xchg
cmpsl
fldt
jecxz
fstps
in
pop
fidivs
push
add
cmp
gs
or
loope
nop
and
outsb
insb
push
xor
ds
out
es
insb
pop
jne
and
imul
imul
leave
push
mov
in
adc
js
addb
jecxz
lods
gs
scas
and
enter
pop
icebp
pop
or
js
fcmovne
and
mov
in
xor
mov
push
popf
lret
xchg
loop
inc
lods
scas
sub
or
fld
cmp
out
dec
push
pusha
fcomip
xor
cmpsl
and
cwtl
ds
dec
jg
adc
hlt
jae
mov
mov
ss
adc
sahf
fildl
mov
mov
outsl
lea
cmp
dec
jne
fidivrl
fsubr
pop
cmovle
sbb
or
lcall
add
pop
sbb
enter
shl
imul
jns
shrb
pop
xchg
loop
inc
out
cltd
pop
dec
iret
cli
aam
push
leave
mov
xchg
out
pop
call
jmp
ret
repz
ds
push
xor
leave
jp
lret
lock
dec
insl
add
mov
push
sub
dec
push
fcmovnb
scas
xor
sbb
js
lods
cmp
popf
and
loop
arpl
js
dec
fs
fcmove
aad
inc
cmc
test
mov
mov
std
adc
insb
lret
shlb
scas
jnp
sbb
or
jp
call
and
lret
stos
movsl
insl
push
jo
in
cmc
adc
pushl
inc
nop
imul
mov
jbe
add
lret
or
mov
cmpsl
cmp
mov
push
mov
scas
cli
mov
sti
mov
cmp
imul
incb
lret
push
fidivrs
push
add
mov
pop
mov
mov
test
adc
loope
cmp
pop
insl
mov
mov
mov
mov
std
xchg
cmp
mov
loope
cmc
xor
stos
cmpsl
fldl2e
cmp
pop
inc
xchg
jge
lds
bound
mov
sbb
cmpsl
dec
adc
adc
push
jbe
mov
cmp
in
push
testl
frstor
fildll
mov
dec
stos
xor
push
pop
int
mov
cmp
add
clc
out
sub
pop
pop
loope
stos
dec
ret
push
dec
bnd
stos
sbb
loop
iret
sub
stc
lds
cwtl
ret
cmc
stos
add
or
out
jl
dec
adc
xchg
mov
inc
jae
and
pushf
jb
call
or
movsl
mov
xor
cmp
push
add
imul
pusha
mov
mov
loop
addb
pop
test
sarl
arpl
movzbl
das
mov
stc
sbb
jg
in
adc
mov
cmp
mov
dec
xor
out
sahf
out
sahf
xor
sbb
jae
in
in
ljmp
mov
add
pop
arpl
push
sbb
inc
dec
jbe
dec
pop
cmp
mov
lret
or
pop
mov
aam
mov
jl
out
jecxz
mov
cmp
cmc
outsl
mov
mov
daa
cmpsb
mov
jnp
sub
scas
add
mul
jno
xchg
ret
xor
loope
je
bound
out
repz
push
roll
jmp
cld
mov
and
adc
cmp
jno
out
adc
ss
imul
push
adc
mov
and
repz
imul
pop
jle
xchg
pop
push
sbb
lcall
or
xchg
sbb
or
mov
mulb
arpl
inc
test
adcl
imul
inc
add
jmp
popl
imul
fs
das
aas
or
mov
dec
stos
cltd
inc
inc
and
xchg
imul
sub
dec
fsubs
fdivrs
lcall
mul
cli
jmp
mov
daa
aaa
mov
mov
test
push
adc
testl
movsl
add
clc
jo
push
xchg
cmp
shll
xchg
mov
xchg
sbb
inc
in
mov
pop
frstor
ljmp
in
dec
mov
scas
dec
and
mov
fnstsw
and
fisttpll
inc
or
mov
sub
push
aaa
stc
mov
mov
mov
pop
fisttps
mov
mov
imul
popf
das
fdivs
enter
insb
xor
loope
push
xor
xchg
fimuls
push
mov
jnp
push
push
cmp
test
mov
mov
ljmp
mov
dec
cmp
popa
jb
jle
inc
push
push
mov
inc
adc
jb
pop
in
fstl
lret
les
jno
les
lods
pop
icebp
and
sub
in
dec
les
stos
dec
sbbl
inc
pop
mov
push
mulb
ret
lret
adc
lahf
loopne
imul
loop
mov
adc
push
fistpll
inc
lret
lea
xchg
add
fistl
incl
data16
lcall
lds
test
add
adc
arpl
repz
int3
lods
xchg
int
adc
clc
test
mov
mov
jmp
lahf
daa
mulb
mov
mov
clc
push
sbb
sbb
ss
pop
roll
call
scas
mov
ret
dec
cli
jbe,pt
rcrb
fmul
aas
inc
and
or
mov
mov
and
jle
and
shrb
sub
mov
mov
sub
fisubrs
lock
ret
mov
pop
lcall
mov
out
repz
test
insl
movsb
fcomip
inc
fnstenv
and
notl
xor
pop
out
enter
sarl
fs
xchg
mov
addr16
das
xor
imul
sub
mov
sub
push
push
lahf
testl
xor
outsb
bound
mov
xlat
xlat
dec
mov
mov
cmp
in
repz
or
test
subl
dec
mov
mov
inc
dec
ja
xchg
bound
fdiv
jg
xor
fmuls
or
and
xchg
mov
mov
in
fdivs
lret
in
xor
stos
push
jmp
xchg
cmp
push
push
xchg
scas
add
push
xor
push
aam
mov
xorl
dec
fdivrs
shll
sub
stc
ret
add
add
push
lea
addr16
sub
iret
push
cmpsb
fsubs
push
pusha
movsl
ror
xchg
scas
and
int3
inc
pusha
int3
xchg
jne
jne
xor
test
xchg
cwtl
xchg
fadds
sub
jnp
and
jecxz
je
push
push
sarl
inc
jmp
push
jge
js
cmp
sub
or
js
push
cmc
imul
inc
loopne
dec
into
mov
movsl
pop
fwait
adc
xchg
mov
ljmp
inc
add
add
add
inc
add
adc
add
das
inc
add
add
mov
js
add
incl
and
add
insl
loope
dec
lahf
mov
dec
push
adc
mov
fldcw
pop
push
int3
aam
adc
mov
adc
std
sub
add
mov
fwait
enter
cmp
sbb
mov
movsl
jmp
jmp
stc
mov
jno
divl
lret
dec
cmp
ss
adc
mov
imulb
neg
cmp
cmp
xchg
neg
mov
jecxz
aas
outsl
cmp
xchg
cmp
mov
ret
xor
repz
xorb
cltd
loopne
pusha
ret
les
push
sti
or
pop
int
sbb
inc
or
xchg
shrl
rcr
mov
push
movsl
dec
ss
pop
xor
lahf
test
xor
mov
sub
push
std
scas
fcoml
lock
or
xchg
popa
jmp
arpl
pop
sbb
sahf
in
adc
pushf
pop
cltd
xchg
mov
daa
jecxz
inc
mov
fcoms
data16
enter
cltd
mov
lahf
stos
pop
adc
pop
ds
arpl
inc
adc
push
scas
inc
js
pop
push
mov
ret
xor
std
cmpsb
mov
jns
notrack
in
xor
pusha
push
sbb
jp
xchg
cmc
cmp
dec
fwait
scas
lds
xchg
jmp
outsl
cwtl
or
fcoml
sub
gs
dec
inc
sub
loope
std
jg
cmc
rol
imul
mov
cmp
sti
insb
push
add
fs
icebp
xor
stc
sbb
jecxz
xchg
fists
das
test
cmp
test
add
je
mov
mov
cmp
push
shll
mov
mov
push
add
jp
push
fisttpll
cmp
mov
cmc
fdivrl
mov
xchg
and
jbe
ss
lds
xchg
subl
int
push
repnz
jns
and
xor
mov
pop
dec
jnp
pop
ret
pushl
mov
bound
js
scas
xor
xor
icebp
cs
xor
and
mov
mov
mov
aaa
pop
lret
push
jecxz
mov
xchg
shrl
xchg
push
cmp
dec
ret
jp
les
sub
inc
imul
xchg
pop
sub
jp
inc
mov
sbb
addr16
je
add
pop
mov
dec
popf
push
pop
xchg
adc
and
push
cmp
clc
loop
test
cwtl
xor
push
sbb
sbb
ficomps
or
cmovp
out
enter
jecxz
jle
push
xchg
push
out
adc
roll
jp
mov
sub
add
xchg
jmp
mov
xchg
xchg
int3
in
iret
push
cli
lret
stos
push
loop
iret
idivb
push
ja
dec
push
push
call
xchg
mov
pop
leave
or
pop
xor
mov
add
pop
out
pop
pop
sub
leave
pop
cmp
not
pop
shll
sub
xchg
jbe
pop
sarl
mov
cmp
xor
inc
and
mov
lahf
mov
aaa
sub
add
xorl
into
sub
pop
test
mov
cmpsb
neg
jl
sbb
push
lds
jno
inc
sti
movsb
xor
inc
dec
sub
adc
jge
adc
add
dec
dec
fsubrs
adc
sub
ja
clc
addr16
loop
push
jbe
fwait
mov
mov
xlat
outsb
xor
and
and
xlat
mov
repnz
sbb
nop
push
out
lret
insl
push
adcl
jae
pop
mov
pop
loopne
sbb
cmp
cs
inc
xor
push
mov
leave
lret
pop
cmp
sbb
arpl
fidivrl
gs
jne
xchg
inc
pop
xor
and
idivb
decb
or
and
hlt
mov
fdivl
aam
jae
jge
mov
mov
loope
cli
dec
pop
aad
xlat
jnp
push
fmuls
lret
ds
xor
jno
xor
loope
lahf
adc
mov
in
jmp
push
adc
cmp
das
fsubrs
hlt
jne
fiadds
cmpsb
mov
or
or
add
fiaddl
stc
push
shll
aas
xchg
or
cmp
adc
mov
xchg
repnz
sbb
imul
ja
and
das
rcr
xchg
jle
scas
arpl
and
push
sarb
inc
aas
sbb
shlb
fimull
sbbb
dec
mov
adc
inc
out
cmc
outsb
cmp
jne
mov
popa
inc
adc
std
sti
in
jne
xchg
in
dec
sahf
cmc
cltd
cs
add
mov
lods
mov
push
das
jle
sbb
pushf
jnp
insb
lret
ret
jb
icebp
lcall
xchg
pop
push
inc
gs
push
aas
mov
mov
cmp
pop
test
dec
push
mov
mov
lahf
int
fildll
cmpsl
je
push
aaa
fs
aaa
cmc
jnp
lret
xor
cmp
sub
loopne
or
loope
adc
adc
mov
sub
sarb
loopne
pop
sbb
jne
inc
xchg
popf
push
ficompl
faddl
lret
fcoml
test
cmp
adc
push
sbb
jmp
xor
xchg
xchg
pusha
repz
cmpsb
in
icebp
or
dec
bound
mov
test
test
repz
adc
push
or
and
outsb
cmp
inc
pusha
cmpsb
pop
add
push
xor
jge
and
negl
push
outsb
sbb
in
jo
jb
shl
or
or
sub
mov
gs
in
je
lret
mov
xchg
push
sbb
enter
fsubp
mov
psubusb
xor
std
cld
mov
xchg
enter
sbb
cmc
test
adc
jb
pop
enter
add
or
sbb
lcall
pop
mov
and
mov
insb
jge
in
sub
xchg
arpl
or
xor
fldt
fsubrl
or
and
jae
sub
push
mov
cmp
test
leave
sbb
inc
or
jbe
cltd
dec
xchg
sub
xchg
pop
repnz
add
imul
movsb
jae
orb
add
iret
mov
lds
or
sub
enter
xchg
xchg
ljmp
or
adc
hlt
push
jecxz
push
mov
jle
test
mov
dec
jl
and
mov
fs
lahf
fdivrl
adc
add
sarb
dec
andw
aas
jle
fwait
repz
outsb
mov
enter
outsb
push
push
leave
xor
mov
jp
inc
das
adc
cltd
pop
fdivrl
fdivs
jg
lods
lods
mov
pop
push
fbld
aam
push
push
je
mul
or
cmc
inc
and
pop
imul
scas
pop
insb
test
scas
sub
rcrb
arpl
dec
xchg
lret
jmp
push
and
xchg
mov
push
and
adc
out
fisubs
sbb
pop
loop
add
pop
mov
bound
bound
bswap
fadds
cmp
fst
xchg
stos
insb
popl
ret
sbbb
push
mov
rol
push
icebp
fisttps
dec
cmp
jmp
adcb
inc
push
inc
mov
or
pop
leave
clc
insb
sbb
idivb
sbb
adc
mov
push
cli
mov
into
cmp
pop
cltd
and
mov
pop
xor
dec
mov
sub
pop
mov
inc
jmp
adc
repnz
out
int3
call
sbb
loope
outsb
mov
xlat
rcl
out
jmp
stos
dec
test
fs
clc
mov
bound
mov
mov
lds
lret
push
mov
popa
adc
adc
arpl
and
arpl
clc
mov
mov
xchg
xor
xor
aas
movsb
addr16
or
mov
int3
mov
pushf
add
fsubl
pop
idiv
jge
into
push
mov
mov
pop
ljmp
sbb
test
inc
imul
push
imul
dec
sbb
xor
push
inc
jecxz
lea
ss
popf
mov
fst
push
jnp
xchg
push
popl
pop
and
loopne
into
xchg
pop
or
mov
je
fucomi
lret
std
lods
jle
imul
push
inc
loopne
loopne
push
adc
sbb
pop
pop
jmp
clc
or
stos
dec
scas
cmp
cmp
shrb
test
rolb
dec
call
andb
jno
inc
outsl
xor
pusha
rol
faddl
cmpsl
outsl
xchg
call
test
outsl
hlt
or
in
mov
jge
jae
movsl
mov
inc
addr16
les
ret
shll
xchg
mov
add
jne
add
jecxz
aaa
jb
icebp
out
dec
xchg
mov
ret
pusha
push
das
shlb
sbb
cmp
xorb
add
push
cs
jnp
mov
in
push
test
push
mov
add
or
mov
dec
cld
mov
cli
cmp
mov
xlat
push
cmp
pushf
hlt
sub
std
cmp
pop
test
dec
push
xor
in
test
jne
mov
mov
out
jge
and
pop
dec
push
jge
pusha
xchg
lds
andl
out
inc
mov
or
mov
je
imul
pusha
mov
pop
outsb
imul
test
iret
out
jge
aam
mov
aam
ficoms
mov
inc
dec
and
or
pop
push
cmc
imul
or
dec
ja
adc
pop
fadd
inc
fisttpll
js
inc
inc
dec
mov
rorb
lods
jmp
das
jp
jge
mov
inc
cmpsl
add
clc
pop
push
insb
dec
cmpb
or
adcb
jle
js
outsb
sub
test
sbb
outsb
mov
and
and
sub
adc
mov
mov
push
cmp
lcall
fisubrl
mov
add
push
or
int3
mov
jecxz
nop
or
movsb
out
mov
mov
xlat
dec
xchg
stos
not
pop
iret
sbb
mov
sbb
sti
and
jo
mov
pop
in
outsl
clc
jmp
push
and
hlt
pop
rorl
outsb
push
cld
data16
jo
cmpsb
lock
dec
fistpll
cmp
pop
inc
enter
mov
mov
stc
sbb
mov
enter
and
mov
adc
and
sbb
mov
xor
mov
jns
and
stos
mov
add
mov
jb
pop
stc
add
mov
jbe
pop
notb
inc
adc
pop
inc
call
subl
mov
dec
ret
jmp
mov
lret
push
pop
test
push
enter
push
mov
pop
or
mov
inc
call
push
loope
shll
imul
mov
mov
xorl
push
mov
push
cld
in
lret
pop
cltd
inc
call
jmp
mov
outsl
inc
jle
shlb
xchg
in
sub
adc
jp
stos
push
adc
or
aam
pop
jb
nop
push
pop
outsl
loop
js
dec
mov
jge
jb
mov
mov
arpl
lcall
push
dec
inc
in
insl
popf
dec
or
ss
add
mov
add
lahf
xchg
lea
jnp
add
push
sub
lods
mov
push
lcall
mov
sbb
daa
sub
in
ljmp
fbstp
mov
stos
xchg
into
sub
rorb
fiadds
xchg
pop
into
or
and
popf
push
mov
cmpsb
test
push
xlat
and
stos
xchg
jecxz
adc
ljmp
add
bound
loope
cmc
dec
sbb
sub
fisubl
or
std
xchg
fs
sti
dec
clc
add
push
jb
mov
mov
nop
xchg
or
and
add
mov
add
push
rorb
mov
fistpl
in
adc
adc
sbb
adc
repnz
adc
in
sub
mov
lods
sub
in
xor
adc
shrl
dec
mov
cmc
push
jecxz
or
repnz
out
sarl
or
ljmp
lods
mov
push
push
int
push
inc
data16
cmc
cmc
mov
inc
nop
inc
outsb
fcomp
insb
fisttpll
jns
inc
mov
aaa
dec
int
add
sti
cmp
jo
insb
dec
pop
sbb
or
sbb
mov
sbb
push
daa
sti
sbb
mov
adc
jns
push
adc
cmpsl
push
incb
add
mov
mov
push
int
loope
push
mov
mov
xor
in
fnsave
jle
bound
jg
movsb
and
jnp
addr16
lahf
out
shlb
jno
in
aam
imul
fdivp
cmp
mov
js
ficoms
bound
lock
push
jo
xchg
pop
jmp
pop
lahf
call
pushf
in
test
aam
xor
xchg
bound
sub
movsb
push
cmpl
mov
sub
xchg
test
and
mov
pop
jo
aam
mov
mov
xor
cmp
shl
xchg
and
mov
lock
popf
iret
push
das
lcall
fistpll
sbb
int
bound
fsubp
aas
mov
xchg
sub
cmpsl
lret
adc
jle
dec
sbb
leave
daa
mov
and
cmovae
outsb
outsb
stc
into
outsl
lret
add
mov
sub
jb
xchg
xor
stc
pusha
scas
ja
je
in
roll
shlb
int
or
mov
add
xor
sub
and
mov
inc
push
gs
into
push
fcomi
mov
int3
mov
enter
iret
sub
fistps
out
cmp
mov
push
sti
jp
mov
mov
and
mov
mov
xor
movsb
or
enter
dec
and
push
push
and
leave
push
std
outsb
mov
cli
cmp
mov
cmc
adc
lcall
out
outsb
loopne
sarb
inc
stos
mov
dec
sti
adc
sub
push
sbb
lock
fsubs
dec
pop
dec
jmp
jbe
cmpsb
inc
pop
imul
add
adc
mov
iret
ljmp
mov
or
cwtl
in
mov
push
pop
jnp
mov
mov
jle
shr
or
test
imul
lret
addl
outsl
xor
push
inc
and
lods
mov
loope
pushf
pop
push
ret
dec
pop
call
call
sbb
lcall
xchg
mov
adc
and
xlat
jmp
dec
cmp
out
fnstenv
jo
push
aas
outsb
sub
fists
mov
sahf
cmc
call
push
mov
pusha
push
add
mov
fimull
cmp
sub
into
adc
push
dec
adc
sbb
aas
mulb
lds
sbbl
fwait
cmp
test
cmpsb
std
in
pushf
je
rcl
cmp
sub
shll
adc
outsb
dec
sbb
and
int
mov
addr16
xor
jl
and
dec
adc
jle
out
inc
sub
dec
xchg
lds
test
cmpsb
dec
mov
je
in
jge
pop
cmp
jne
sbb
sub
push
xor
stos
or
ja
cmp
aaa
ficoms
xor
xchg
lds
jns
repnz
xchg
arpl
xchg
repnz
dec
repnz
imull
addl
insl
cmp
shl
mov
adc
push
test
pop
push
mov
test
jne
mov
push
or
inc
fistl
inc
and
mov
mov
ljmp
lahf
pop
adc
test
lret
adc
outsb
out
loopne
test
ret
push
jecxz
xor
je
dec
add
in
jae
mov
dec
jecxz
push
cmp
aaa
or
sub
dec
lods
add
sarl
divl
jnp
addr16
xchg
movsb
pop
jae
mov
std
fimuls
mov
and
jo
cmp
cmc
inc
jae
mov
push
insb
iret
sbb
adc
into
sbb
sub
test
mov
call
addr16
xchg
js
lcall
push
mov
and
pushf
orl
add
jbe
pop
xor
sbb
outsl
pop
enter
xchg
aaa
xchg
pushf
push
iret
jne
in
xor
pushf
out
cmp
clc
add
loopne
roll
imul
test
subl
inc
adc
dec
fsubrl
sub
sub
fistpll
adc
idivb
mov
ss
push
js
mov
or
xor
push
sbb
fwait
push
push
push
or
adc
mov
inc
lods
cmpsb
fbld
cmp
push
xchg
clc
hlt
sbb
push
xor
fisubl
sub
gs
orl
shlb
mov
pop
test
arpl
out
repnz
sbb
hlt
cmc
pop
movsl
gs
call
push
js
mov
xor
inc
clc
fstpt
test
cld
add
mov
xor
mov
jmp
mov
test
sti
xchg
sub
es
adc
mov
push
movsl
cmp
into
and
ss
pop
xchg
enter
xchg
add
mov
sbb
mov
lahf
clc
cmc
lahf
xor
sbb
jle
jle
adc
mov
pavgw
mov
fnsave
cmc
aam
aaa
je
mov
or
add
push
cmp
rorl
mov
inc
fiaddl
sti
mov
les
shr
add
loop
add
lds
repnz
sub
movsb
add
xor
cmp
scas
sub
into
mov
enter
aad
fistps
push
dec
aas
push
mov
adc
xchg
lcall
movsl
dec
mov
xor
movsb
sbb
aas
shll
cmp
cmp
jb
jmp
addl
xchg
pop
jmp
insb
lret
in
push
adc
in
push
push
push
mov
lods
lods
xchg
lods
fldt
fcoml
in
mov
sbb
push
cmpsb
jb
les
loop
and
mov
cmp
jge
jns
push
daa
xchg
jb
int3
daa
mov
in
xor
lahf
jmp
aam
mov
cwtl
call
or
test
or
hlt
notb
ds
int3
mov
int3
inc
mov
call
jecxz
mov
mov
rol
mov
cs
orl
inc
add
je
in
xchg
pop
jle
es
add
adc
in
pop
or
insl
cmp
push
ret
cs
xor
dec
sub
std
aaa
mov
lret
pop
xchg
sbb
push
ret
stos
fldenv
lds
nop
and
inc
icebp
sub
imul
push
cmp
push
test
dec
test
jns
and
ret
arpl
fwait
cmpsb
pop
mov
nopl
shlb
jp
outsl
fnsave
test
adc
xor
popa
andb
dec
int3
jno
jns
ret
das
shlb
mov
cmp
mov
sbb
fldl
movsb
jno
sbb
test
jge
jle
mull
mov
std
inc
jecxz
mov
stos
dec
xor
cmp
xor
in
in
data16
mov
mov
movl
lds
jne
jnp
fistpl
loopne
push
or
into
dec
mov
rcrl
rcrb
mov
inc
ror
xchg
dec
jg
dec
sub
sub
lods
xlat
cmp
mov
ja
jo
sub
sbb
loop
jmp
sub
repz
out
jecxz
ss
les
xchg
fwait
jb
aad
cmp
or
movsl
mov
imul
mov
add
test
xchg
sub
icebp
jns
fildll
pop
popa
cmpsb
cmp
mov
lahf
hlt
xor
sub
sbb
mov
imul
cs
mov
ljmp
pop
out
shll
gs
mov
cmp
pop
rcrl
fprem
push
mov
push
mov
jo
nop
sub
cmp
add
jg
push
push
push
push
rol
sbb
sub
dec
loope
data16
xorb
jne
add
jbe
mov
jne
mov
adc
sarb
pop
push
lods
imul
cwtl
ficompl
outsl
xor
jb
sbb
mov
lret
mov
xchg
cltd
push
imul
int
add
cltd
test
shrl
jns
push
inc
adc
addr16
mov
int
cmp
out
faddl
mov
test
idivl
repz
arpl
push
add
and
ficoms
in
cli
out
jb
loop
lock
in
fdivrl
pop
cmp
das
cltd
inc
and
je
xchg
jg
pop
inc
lds
sarl
adc
mov
pop
sbb
je
mov
xchg
outsl
mov
push
jns
aam
dec
push
jo
adc
mov
pop
jno
scas
push
adc
or
sbb
dec
popa
adc
adc
adc
cld
nop
pop
sub
dec
xor
mov
pop
ret
and
fsubs
sbb
int
stos
lods
filds
stc
pop
arpl
sbb
xor
sub
test
cmp
pop
pushf
sbb
loop
pusha
aas
inc
push
aam
push
andl
test
jg
lock
or
fstpl
cmp
dec
fisttps
jne
leave
xchg
dec
inc
and
jmp
sahf
mov
dec
fs
sub
or
fidivl
aam
adc
push
dec
sbb
sti
pop
out
push
ret
sti
xchg
push
scas
aas
add
cmpl
mov
pop
pop
cmp
std
out
mov
push
out
subl
jge
in
cmp
pop
sbb
push
mov
xchg
movsb
cltd
push
fsubrs
push
int
adc
js
stc
dec
scas
pop
in
imul
dec
cmp
cltd
mov
sbb
insb
add
ljmp
int
aas
std
cwtl
int
mov
cmpsl
xchg
jbe
inc
repnz
add
sbbl
dec
int
cmp
test
add
dec
xchg
fisubrs
sub
aad
pop
leave
adc
cmpsb
test
jae
ljmp
add
movb
pop
dec
jmp
sbb
lods
aad
je
adc
pop
mov
ja
in
insl
dec
lods
outsb
fcmove
xchg
scas
xchg
add
sti
mov
adc
pop
bound
test
inc
sub
mov
push
aaa
xor
fnsave
xchg
xor
cmp
mov
orl
leave
test
and
adc
dec
negl
and
xor
sbb
ss
sub
pop
push
xor
stos
sti
ja
das
sub
xchg
test
cli
jae
mov
ret
push
ret
xchg
sarb
xor
repz
pushf
mov
xor
adc
test
repz
push
or
mov
xchg
sub
gs
loopne
lods
sbb
ss
mov
push
mov
mov
test
jae
push
push
mov
pop
inc
ret
mov
test
pop
push
ret
daa
fs
sbb
xchg
and
aaa
adc
add
push
and
mov
or
push
inc
mov
test
xlat
pop
dec
mov
and
stc
xchg
xchg
pop
fdivs
dec
xchg
xchg
inc
cmp
nop
cmpsb
jb
sbb
in
fidivrl
pop
push
jae
add
sub
das
subb
or
addps
or
not
in
loope
int
sbb
insb
jp
cmp
xor
dec
addr16
rorb
adc
out
clc
subb
inc
pop
jecxz
fsubrp
adc
nop
xchg
mov
jmp
mov
ljmpw
stos
jmp
add
sahf
stc
xor
jne
mov
xchg
and
sysexit
cmpb
jmp
lahf
mov
adcl
dec
jnp
and
add
stos
cwtl
ja
fstpt
and
cld
or
shll
cmc
mov
out
daa
aaa
lret
lods
sub
rcrb
stc
dec
xchg
test
push
nop
lret
outsb
xchg
stos
or
jl
xor
xchg
dec
xchg
xchg
inc
outsb
shlb
inc
jo
dec
xchg
movsb
fdivrs
xchg
mov
mov
mov
loope
stos
pop
arpl
fsub
or
jl
mov
and
dec
pop
add
cmp
imul
inc
popf
les
fbstp
adc
sbb
mov
cltd
xor
hlt
mov
imul
mov
imul
js
sbb
sbb
xor
cltd
hlt
ljmp
int3
loopne
mov
aam
imul
xchg
adc
fildll
add
jp
mov
cmpsb
inc
fcmovb
lahf
cmp
ret
outsb
movsb
adc
pop
filds
les
mov
shl
dec
lea
sub
mulb
mov
cmpsl
cmp
call
xchg
or
repz
pop
lock
mov
jb
sub
mov
out
pop
sbb
jge
pop
push
mov
test
cmpb
decb
mov
out
ret
jns
xchg
xor
jno
jns
inc
in
into
sbb
jb
aaa
inc
xchg
jae
push
jle
leave
sbb
loop
fwait
xlat
je
or
and
or
and
sbb
or
pop
popa
inc
movsl
test
mov
out
hlt
or
dec
push
mov
push
shl
pop
leave
xlat
mov
ret
push
icebp
aad
adc
cmp
jmp
scas
rorl
fadds
incb
je
xchg
repz
xchg
sub
sub
pop
cwtl
add
rolb
jno
mov
and
xor
test
push
rorb
add
stos
adc
and
hlt
push
or
data16
in
pop
jbe
out
mov
in
or
and
popa
cwtl
cmp
xor
in
lods
lea
dec
out
adc
push
out
daa
pop
or
loop
int
jge
pusha
jecxz
or
lahf
sti
ss
lcall
push
mov
jmp
sbb
imul
daa
enter
inc
jne
push
out
xchg
out
mov
lcall
lret
pop
xchg
sub
int3
xchg
stc
mov
addr16
fwait
jnp
sarb
dec
jo
add
aam
js
or
cmc
add
adc
popa
dec
sbb
fwait
adc
and
sub
adc
xchg
mov
jl
sbb
pop
hlt
adc
mov
aam
out
adc
xor
in
fistpll
rcl
xlat
rorl
adc
dec
cmpsl
push
fldenv
test
out
add
and
push
and
lock
adc
jb
pop
push
push
in
and
mov
pop
ljmp
lods
rcrb
inc
lock
mov
and
lock
incl
dec
std
xchg
xchg
jg
mov
dec
das
into
rcl
push
and
insl
jno
nop
leave
push
int
push
or
shrb
mov
fldt
pushf
adc
lods
popf
jbe
cmpsb
sub
inc
mov
lcall
or
and
es
divb
jge
mov
jbe
xor
xchg
out
mulb
and
mov
and
pop
arpl
jge
daa
mov
scas
push
outsb
sbb
and
loope
pop
add
lahf
sti
rcll
mov
leave
pusha
imul
mov
pop
shll
int
imul
cmp
inc
mov
cmc
add
in
dec
mov
test
inc
adc
pop
es
sub
mov
push
mov
push
leave
and
imulb
outsl
out
sub
add
or
or
outsl
out
insl
scas
aam
out
inc
jno
adc
mov
mov
test
jge
loopne
mov
mov
in
ljmp
dec
mov
movsl
sub
adc
imul
lea
pop
xchg
cmp
push
movsl
adc
lods
dec
inc
add
pop
mov
lret
test
sub
xchg
sub
add
stos
xor
xchg
test
jmp
cmp
xchg
jno
outsl
jecxz
imul
stos
sub
push
mov
je
or
and
adc
pushf
cmp
push
lret
leave
aas
xor
push
adc
xorl
xchg
enter
mov
add
jns
mov
std
cmp
sbb
dec
ficomps
dec
pushf
orb
outsb
inc
jle
pop
outsb
fcoms
jno
dec
loope
adc
movsl
movsb
or
cmp
jo
mov
push
xor
dec
mov
jle
aas
dec
push
sbb
xchg
xor
push
sbb
and
mov
je
roll
dec
inc
mov
out
outsb
mov
lahf
sbb
pop
inc
jbe
rol
add
and
fbstp
les
loop
jne
xor
push
imulb
push
rolb
lock
aas
inc
rorb
pop
sbb
mov
push
stos
loopne
jl
aam
js
std
test
push
lods
mov
pop
lds
enter
inc
push
call
sub
fxch
mov
loope
mov
jecxz
andb
lods
pop
xor
add
dec
xchg
neg
mov
jle
push
mov
icebp
imul
pushf
jmp
cwtl
and
aad
movsb
mov
gs
mov
mov
jb
mov
stos
dec
stos
mov
int
push
mov
je
lret
inc
leave
mov
scas
jp
inc
xchg
sbb
std
xor
sub
push
fwait
vmwrite
cmp
mov
xchg
jg
rcrl
sbb
movb
mov
add
mov
and
and
stos
subl
call
mov
sti
mov
adc
fidivrs
ss
xor
inc
test
lea
in
mov
imul
lret
data16
jns
les
mov
gs
inc
pop
push
lret
icebp
jne
or
xchg
or
bound
push
gs
test
sub
lret
mov
lods
inc
iret
jge
ret
mov
mov
dec
push
xchg
stos
ja
push
ljmp
jg
frstor
sub
push
das
add
cmp
test
adcl
js
jle
movsb
pop
mov
dec
inc
dec
adc
cmpsl
shrl
and
repz
lock
outsb
and
stos
scas
xchg
cmp
lret
inc
insl
loope
jmp
and
inc
fistl
cmp
dec
adc
xor
push
in
pop
fcoms
mulb
jns
cwtl
jl
lock
fsts
fsincos
or
xchg
mov
cmp
fwait
push
fldenv
mov
xchg
sub
jp
cltd
xlat
mov
dec
inc
mov
and
sbb
cmpsl
cmp
in
inc
enter
sub
mov
fwait
out
nop
and
and
mov
movsb
scas
popf
test
test
fsubrl
int
rol
outsb
iret
mov
shll
ss
sub
adc
sub
add
jg
divl
mov
and
fwait
and
popl
stc
dec
test
ja
notb
nop
arpl
out
mov
popa
addr16
dec
pop
clc
jae
cmp
cmp
scas
sti
sbb
into
dec
imull
fistl
jb
test
mov
std
add
je
fidivrs
mov
sahf
mov
jl
ds
xlat
rclb
fisttpl
aas
rorb
and
mov
lret
sbb
push
mov
inc
lds
adc
testb
mov
mov
aam
add
sub
sbb
push
jae
xchg
jae
lahf
lock
mov
lods
sbbb
mov
out
vxorps
in
leave
push
jbe
mov
dec
cli
sbb
adc
push
leave
mov
pusha
xchg
xchg
xor
add
gs
lods
in
xchg
add
scas
pusha
xchg
adc
mov
ljmp
imul
sub
daa
cmpsl
lock
fcmovnb
add
ret
cwtl
adc
mov
mov
sahf
jmp
cmp
mov
and
outsl
cli
push
call
pop
mov
and
dec
pushf
xchg
pop
fisubrs
cmp
or
insl
or
pop
clc
inc
in
pop
adc
pushf
push
xor
out
loop
in
fisttps
jno
sub
add
mov
roll
mov
into
mov
enter
push
or
mov
popf
cmp
push
cmpsl
inc
xorl
sbb
ss
insl
data16
mov
mov
push
mov
xchg
dec
xchg
mov
push
sbbl
jnp
das
and
subb
imul
push
dec
aaa
pusha
adc
in
movsl
stc
fildll
lods
inc
adc
std
stos
mov
and
cs
pop
ds
push
mov
enter
push
idivl
movsb
in
stos
inc
ficoms
add
jno
xor
mov
add
pop
sub
sub
inc
or
jl
aaa
fcoml
sub
jnp
daa
xchg
iret
fdivrl
jb
fwait
add
pusha
sbb
mov
pop
mov
inc
jo
mov
aas
mov
sbb
sub
push
add
pop
or
repnz
mov
mov
mov
call
dec
cld
sub
dec
ficomps
jne
jbe
xor
pop
stos
adc
test
xchg
sbb
push
insb
pop
in
into
add
xor
fadd
pop
jnp
mov
shl
mov
ljmp
out
cmp
mov
shl
cwtl
mov
dec
mov
out
cmp
dec
shrb
fs
sahf
cmp
pop
inc
sbbb
pop
jle
es
sub
inc
cmp
aam
adc
mov
sbb
sbb
sub
or
aaa
pop
push
cmp
imul
lea
cmp
fisubl
jae
inc
cmp
imul
stc
out
and
pop
addr16
int3
sub
cmp
out
je
mov
aad
cld
cmp
mov
push
andb
cmpsb
cmp
inc
loop
mov
push
xchg
ror
insl
lahf
jp
mov
dec
jae
enter
in
dec
xchg
in
aad
inc
cmp
in
dec
cld
insb
in
xor
out
xchg
test
jo
in
fistl
test
mov
mov
into
sbb
repnz
add
mov
and
mov
push
insb
push
xchg
lods
nop
mov
repnz
popf
cmc
sti
sub
pop
lahf
inc
daa
jecxz
hlt
inc
inc
pop
mov
sub
pop
fadds
aaa
arpl
jno
cwtl
popa
or
enter
add
iret
adc
inc
ja
xor
notl
xchg
xchg
xor
std
inc
mov
pop
test
lds
xchg
or
rcrb
cli
add
lret
mov
lods
mov
clc
dec
sbb
inc
out
push
xor
mov
ficoml
clc
xor
fdivrl
sbb
test
lds
rcrb
sub
cmc
mov
xchg
in
test
xchg
hlt
mov
xchg
mov
mov
js
movsb
jb
bnd
cmp
in
les
xlat
mov
cmp
push
insb
xor
sub
dec
adc
pop
dec
mov
mov
or
push
sub
rcrb
shll
scas
icebp
sub
lds
mov
movb
out
mov
cwtl
repz
xor
imul
cmp
sbb
sub
js
jg
ret
cmpsb
movsb
jns
stc
jno
or
xor
inc
or
xchg
and
push
subl
icebp
mov
mov
push
in
cmp
test
inc
jmp
aam
outsl
stos
in
inc
mov
pop
xchg
mov
je
outsb
add
or
sbb
test
imul
out
inc
sub
pop
adc
repz
xchg
mov
es
mov
cmp
popf
je
pop
adc
xchg
in
stc
add
mov
rorb
mov
out
sub
in
std
lcall
adc
jl
enter
dec
sahf
mov
loop
test
push
rorb
test
cmp
dec
mov
jge
and
lds
pop
jge
fs
ja
push
sbb
ret
lods
lea
inc
mov
pop
cmpsb
cld
xchg
pusha
xor
in
ljmp
xchg
mov
mov
pop
out
jnp
pop
int3
inc
roll
imul
insl
xor
orl
push
es
dec
nop
pop
xchg
pusha
jg
ret
orb
inc
or
lds
mov
xor
out
stc
lods
push
pop
repz
bound
pop
ljmp
mov
scas
pop
outsb
push
test
pop
movsb
dec
lods
dec
adc
cmp
test
xor
xchg
push
pop
mov
mov
dec
add
or
sahf
dec
xor
jb
ljmp
inc
movsb
testl
icebp
cli
cli
test
dec
and
push
sbb
mov
mov
pop
and
xchg
sbb
mov
lds
ss
adc
pushf
and
pushf
cmp
jmp
inc
mov
mov
mov
mov
mov
xor
adc
mov
ds
stos
cmp
scas
xchg
push
mov
sbb
xchg
pushf
push
or
xchg
add
pop
inc
cltd
jbe
push
lahf
fmuls
ret
adc
jbe
jmp
rcll
rclb
xchg
fdivl
shlb
imul
dec
in
push
insb
mov
inc
mov
outsb
push
dec
aam
cmpsb
es
xor
cmp
or
mov
and
xchg
inc
pop
xchg
movsl
xor
inc
pop
dec
cmp
push
mov
xchg
sbb
imul
adc
test
mov
mov
mov
test
cmpsb
mov
sub
fildll
sbb
ja
jmp
jbe
imul
repnz
mov
inc
sbb
ss
in
pushf
dec
mov
scas
jne
dec
hlt
pop
out
loop
xor
jns
dec
daa
cmp
jae
movsb
mov
xchg
sub
lcall
xchg
test
arpl
adc
dec
push
aad
mov
ret
xor
out
xchg
dec
inc
divl
sub
out
jno
add
inc
scas
push
mov
pop
fildll
test
xchg
adc
cmp
divl
lcall
jp
mov
push
pop
dec
mov
add
lea
out
and
xchg
xchg
mov
pop
mov
shll
xchg
inc
cs
popf
inc
stos
sbbl
jne
and
je
mov
das
repz
jg
xchg
cmp
mov
notb
mov
jne
test
pop
iret
enter
popa
dec
sub
xchg
loop
fistps
lahf
mov
pop
fdivs
out
push
outsl
pop
test
addl
icebp
mov
push
or
sbb
dec
div
out
imul
xor
push
push
iret
shufps
adc
ret
lds
mov
add
fnstcw
dec
add
lret
mov
mov
fnstcw
imul
push
clc
mov
nop
pushf
loope
xchg
jp
out
and
dec
xor
push
iret
hlt
rol
icebp
shl
fimull
sub
sub
stc
and
sub
mov
std
clc
clc
repnz
adc
cmp
add
push
ljmp
idiv
and
lea
test
fistl
mov
xor
fs
push
add
aam
imul
xchg
ja
fcmovbe
xchg
aam
cmp
rdmsr
outsb
push
inc
pop
fstpl
lret
cmc
int3
mov
in
or
add
mov
jge
pushl
sahf
pop
add
leave
jp
out
fcomps
cwtl
mulb
jae
push
shlb
pop
test
cmp
or
xchg
push
repz
inc
adc
adc
cs
std
jp
arpl
repnz
sbb
xchg
pop
shll
push
mov
orl
ljmp
mov
pop
cs
xchg
dec
dec
add
cs
loope
aad
shll
in
repz
mov
lret
add
inc
fucomp
and
pusha
sti
fbstp
out
push
add
jbe
jne
sbb
pop
nop
fisubl
ret
rol
call
push
jl
addr16
inc
and
leave
movsl
loopne
inc
xor
ja
xchg
push
insl
fiadds
jl
orl
xchg
and
xchg
mov
jbe
jne
aaa
inc
xlat
or
scas
lods
ss
cmp
push
cld
and
sarl
cli
and
imul
stos
into
rcr
mov
rol
fldenv
out
cwtl
xchg
aad
push
lret
xchg
push
ret
dec
push
fdivrs
mov
ljmp
cmp
mov
mov
push
in
nop
inc
xchg
out
adc
and
lahf
nop
xchg
inc
pop
pusha
test
pusha
push
cwtl
into
stos
cmp
or
adc
xor
jge
test
or
cmp
mov
cld
into
sahf
adc
xor
les
in
add
fimuls
js
loop
jmp
outsb
test
inc
push
mov
xorl
loopne
insl
and
mov
xlat
dec
adcb
push
mov
jmp
dec
jne
push
sbbb
xor
mov
adc
fcmovb
clc
mov
fsts
scas
es
xor
pushf
adc
jp
mov
call
decl
xchg
aad
mov
cmp
xchg
mov
adc
cli
jmp
imul
lds
mov
adc
outsl
sbb
inc
pop
lock
jns
dec
sub
fxch
scas
aam
mov
fdivrl
ficoms
ret
bswap
xchg
push
cmp
mov
cmpsb
jae
or
dec
les
and
and
cmp
test
shr
jb
addr16
out
subl
fnsave
push
mov
cmp
out
movsb
stos
pop
xchg
in
outsb
inc
ja
sub
mov
rorb
subl
cmp
mov
mov
cmpsb
adc
je
cltd
stos
ficoms
scas
push
cwtl
ss
cmp
pop
aad
mov
leave
push
dec
hlt
mov
or
enter
mov
cwtl
bound
das
sbb
xchg
sub
push
add
mov
jnp
mov
jmp
add
stos
xchg
leave
push
add
mov
scas
aaa
cmpsb
sbbb
inc
jg
cld
xor
in
mov
ret
insb
sbb
outsl
lcall
jmp
cld
jno
xchg
jbe
fisttpll
scas
movsl
xor
test
pop
sbb
andb
in
pusha
push
out
pop
pop
les
mov
fisubl
xchg
addr16
pushf
out
mov
mov
inc
sub
outsl
subb
xor
enter
dec
mov
nop
repnz
inc
popa
mov
lock
mov
sti
cmp
push
ret
inc
sahf
outsb
shll
test
mov
jb
call
inc
cmp
mov
xor
mov
cmp
leave
adc
mov
xor
inc
daa
nop
inc
push
stc
or
or
gs
adc
xchg
out
mov
outsl
icebp
mov
jbe
clc
xor
pop
pop
mov
test
cltd
inc
push
arpl
push
loope
add
stos
or
mov
lahf
aam
sub
dec
icebp
cmp
test
ljmp
xchg
or
aas
sub
imul
data16
dec
adc
test
cwtl
push
insb
jg
fcmovnb
shr
ljmp
adc
aad
and
push
and
insb
jl
rolb
ret
sbb
push
outsl
mov
mov
scas
movsl
jl
xor
out
sub
inc
iret
push
mov
leave
repnz
xor
or
mov
fwait
aaa
mov
jmp
or
es
in
xchg
adc
jecxz
in
cmp
push
jle
jecxz
inc
jg
sahf
fisttps
clc
je
add
dec
push
fdivrl
shrl
leave
xchg
idivl
cmc
cmp
xchg
pop
cmpsb
out
inc
iret
mov
cmp
in
dec
xor
ret
insl
sahf
ffree
adcl
outsb
mov
add
mov
pop
rcrb
xor
fidivl
shll
mov
addb
cmp
push
shl
insb
sub
inc
cmpsl
icebp
aam
es
adc
mov
xchg
cltd
add
les
daa
sub
mov
sub
repnz
xchg
cmp
fists
push
cwtl
mov
outsb
mov
mov
fwait
mov
aaa
lea
sarl
xorb
jle
mov
jne
jp
out
xor
xchg
pop
notb
adc
cmp
mov
inc
jae
imul
cmpsl
vpaddb
popa
mov
xor
inc
popf
and
ret
mov
fdivs
clc
xor
inc
mov
jle
lret
mov
lahf
stos
in
lods
adc
sti
sub
push
add
cld
repnz
pop
jl
cmpl
mov
out
scas
add
mov
nop
jnp
adc
movsb
mov
mov
sarb
xor
mov
jp
cld
pusha
push
inc
into
pusha
jb
pop
push
das
inc
sahf
ja
xchg
into
and
shll
dec
aaa
loope
outsb
or
bnd
dec
pop
and
pop
pusha
fdivl
jns
mov
xchg
jbe
dec
xchg
je
fistps
jmp
sub
push
dec
stos
add
cmp
xor
scas
inc
outsb
ss
stos
cmc
outsb
cmp
dec
fildl
cmpsl
mov
xor
ss
mov
gs
push
sub
fists
push
cmc
ret
in
stos
mov
adc
xchg
sbb
cmp
push
xor
dec
stos
fimull
shll
mov
stos
pop
filds
adc
enter
sub
or
das
or
inc
shrl
mov
inc
repz
inc
add
inc
push
pop
test
fcoms
shll
les
and
mov
call
fmull
aas
outsl
push
icebp
dec
push
out
mov
and
add
popa
dec
sarl
push
fwait
subl
sbb
insl
push
mov
xor
and
ret
jg
jl
mov
ret
jl
data16
out
iret
push
mov
sub
push
xor
pop
pusha
int3
mov
bswap
adc
push
cmp
inc
aas
jge
leave
adc
inc
push
dec
aad
push
xor
inc
jb
push
xchg
in
add
and
xchg
mov
nop
daa
lods
adc
adc
add
mov
xor
add
ret
test
cmpsl
mov
pop
or
stc
cmp
int3
push
ja
push
dec
in
repnz
ds
std
sub
push
mov
fisttps
lret
roll
sti
inc
loop
pop
push
or
cmp
fwait
mov
pop
or
sub
push
pop
imul
xchg
call
jl
lahf
loop
out
testl
enter
inc
push
and
xchg
xor
js
adc
or
sbb
sti
shl
in
decb
lahf
repnz
jmp
sub
fadd
leave
and
adc
ficoms
mov
sbb
outsb
insl
fwait
imul
adc
push
cmp
int3
je
xchg
pop
int
xchg
adc
xchg
and
scas
inc
fwait
and
jp
dec
push
jne
hlt
jp
enterw
push
mov
mov
sbb
test
add
pushf
jo
scas
icebp
in
stos
mov
sub
out
out
jl
pop
imul
push
and
pop
arpl
cmpsl
test
repnz
xchg
leave
pop
andb
lret
fldl
ret
pop
out
loop
and
data16
cmpsl
mov
stos
mov
rcrb
cli
sub
push
incb
aam
xor
mov
cmc
sbb
addr16
or
je
in
ss
fistpll
cmpl
test
push
and
mov
cwtl
and
sahf
unpckhps
shlb
dec
mov
xchg
ja
dec
xchg
imul
sbb
gs
adc
mov
lret
pop
jb
push
push
inc
cwtl
ret
mov
inc
push
imull
popa
xchg
cmc
fisttpl
fucomp
cld
test
mov
cld
jae
pop
mov
jo
lret
cltd
xor
les
xchg
push
pop
ds
shl
dec
jnp
data16
daa
fs
dec
in
add
sbb
push
clc
loop
aas
cmp
push
arpl
lock
ja
mov
lret
out
scas
push
inc
xor
mov
xor
cmpsl
js
fldl2t
out
leave
sbb
int
int3
jnp
dec
sahf
mov
arpl
fdivrs
or
mov
inc
inc
pusha
jle
sbb
inc
pushf
and
pop
andb
js
imul
cltd
and
cmp
lods
push
and
lret
repz
pop
mov
int
xor
shll
dec
xor
push
fwait
dec
mov
inc
jmp
js
enter
ja
shlb
sbb
pop
or
jmp
mov
push
aaa
cmp
pop
cmpsl
and
sahf
arpl
std
ds
int3
ffreep
push
movsl
into
cmp
insl
sbb
and
repnz
pop
rorl
cmp
dec
cmpsb
je
mov
sub
xchg
shlb
outsb
cmc
hlt
arpl
ja
jne
sub
jmp
jae
and
and
pusha
repnz
inc
inc
cmp
mov
cmp
mov
sub
div
popa
pop
es
clc
xor
data16
mov
prefetchnta
xchg
sti
mov
lret
popf
mov
push
mov
mov
xchg
fwait
pop
cs
mov
and
ficoms
sar
push
insl
sbb
pop
ss
or
sarl
mov
and
divl
xchg
push
and
jmp
and
and
jmp
mov
sahf
mov
inc
fadd
in
loope
movsl
ficompl
cmp
call
jp
and
mov
adcb
push
ret
rclb
jp
scas
stc
test
push
pop
xor
aam
sbb
int
add
into
and
add
aad
and
or
push
mov
pop
xchg
outsl
bound
sbb
dec
push
mov
and
inc
jnp
pop
repz
mov
mov
js
rcll
aas
lcall
mov
and
je
int
das
or
out
mov
and
dec
inc
xchg
cmpb
adc
stos
aad
pop
fdivr
cli
clc
pop
mov
ret
xor
hlt
into
add
mov
rol
int
icebp
xor
pop
jmp
enter
in
in
mov
push
int3
or
sbb
int
xor
es
and
mov
movsl
mov
jmp
xor
in
mov
cmpsb
sar
ja
data16
sub
js
into
sbb
mov
push
pop
jmp
and
cmp
test
jne
js
jecxz
fdivr
inc
or
and
add
dec
xor
push
loope
dec
mov
sar
es
and
jnp
adc
mov
mov
ret
lods
lds
lret
xchg
in
mov
adc
loope
jecxz
xor
jp
or
aas
xor
sbb
cwtl
imul
jmp
bound
mov
cmp
inc
loopne
mov
mov
or
dec
jecxz
ror
mov
inc
mov
cmpb
std
mov
sub
jae
fbstp
pop
imul
and
xchg
push
inc
pop
fadd
mov
pop
shrl
icebp
leave
loop
es
push
nop
divb
sub
es
repz
xor
xor
fsts
and
dec
adcb
loopne
sar
push
push
les
mov
mov
mov
test
loopne
imul
sbb
xor
insb
imul
xlat
xor
and
push
jae
scas
dec
js
jp
test
sbb
imul
sbb
icebp
or
xchg
ljmp
mov
adc
and
imul
adcb
push
ja
fwait
jns
mov
ljmp
sub
xor
aaa
iret
mov
push
cmp
lods
mov
mov
push
shll
xor
and
sti
xchg
sub
repz
mov
movsb
repz
dec
adc
pop
fs
ja
sub
xchg
out
lcall
mov
imul
push
mov
mov
sub
mov
inc
je
push
or
mov
mov
fiaddl
into
adc
and
adc
lds
sub
lret
xor
sub
sbb
imul
rorl
cmp
mov
hlt
xchg
fwait
sub
popa
jmp
jno
pop
cwtl
clc
out
or
adc
or
push
ljmp
repz
mov
fstpl
inc
int
inc
aaa
jb,pn
inc
cli
dec
loopne
and
sub
pop
sub
rcrb
and
mov
ljmp
cmp
cmp
sbb
and
xchg
scas
outsb
ret
call
push
jbe
sar
sbb
mov
in
fistpl
es
inc
push
jbe
shll
xchg
sbb
or
and
adc
mov
sub
test
shrl
fstps
popaw
inc
cwtl
out
ja
call
mov
lahf
mov
pop
xchg
or
in
sub
ljmp
adc
daa
daa
and
inc
cmp
or
dec
cmp
adc
xchg
out
shll
xchg
movl
push
dec
bound
lret
imul
add
lcall
imul
jbe
sub
popa
test
and
mov
jbe
mov
fsubrs
out
push
xor
stos
inc
sub
sarb
push
mov
adc
dec
maxps
pop
fstpt
in
cli
mov
add
push
or
mov
scas
in
imul
pop
cwtl
repz
fdivl
or
psrlw
leave
jl
push
orps
ja
adc
xchg
test
mov
loopne
inc
mov
cmp
pop
inc
les
int
mov
sahf
mov
in
shrl
push
adc
add
mov
rep
test
mov
add
fwait
bound
lret
xchg
mov
mov
mov
mov
ret
push
fildll
fnstsw
sbb
sub
bound
xchg
inc
mov
jnp
cli
lea
mov
cmp
or
jne
aam
daa
out
ret
and
fs
mov
shll
jnp
adc
shrb
mov
mov
sub
in
cld
adc
add
cmp
jp
mov
dec
fnstcw
or
aaa
insb
jg
mov
cmp
fisttps
pop
pop
ja
ret
dec
lret
inc
ret
ret
mov
mov
or
subps
test
shll
pusha
jno
dec
dec
popf
inc
fisubrs
mov
sti
mov
jne
sub
jne
std
daa
push
loopne
ja
je
cltd
cltd
shl
xlat
negl
mov
mov
shrb
jo
adc
out
jne
xchg
aad
dec
mov
or
push
xor
or
mov
inc
cmpsb
add
dec
dec
inc
xchg
lcall
cmpsl
jecxz
addr16
jg
fsubl
scas
cmp
cmpsl
pop
inc
xchg
shlb
inc
shll
loop
push
sbb
int3
add
xor
xor
in
jmp
mov
mov
mov
push
mov
rorb
lods
and
push
cltd
push
sarb
mov
sti
and
fs
loope
cwtl
fs
test
fdivrl
pushf
in
fwait
fs
mov
mov
lods
sarb
ss
or
xchg
and
cwtl
scas
and
cmp
repz
xchg
cld
sub
cs
push
sti
shr
lods
jecxz
and
in
push
sub
cmpb
xchg
sti
test
in
fcmovu
mov
lock
dec
xor
cltd
cmp
mov
inc
fcompl
cmp
pusha
mov
push
aam
cmp
inc
fucomp
cmp
dec
push
cwtl
out
jp
dec
adc
pop
es
push
ret
xchg
sbb
pusha
push
out
mov
pop
adc
ds
sub
sarb
cld
test
push
sbb
xchg
inc
sub
or
adc
mov
subb
pop
and
cmpsb
imull
filds
ret
xchg
lods
call
andb
mov
aaa
dec
push
push
dec
lret
jne
mov
cltd
jge
in
rclb
mov
push
xchg
jo
sbb
push
cmp
pop
sahf
sub
aas
xor
xor
in
imul
xor
insl
xchg
addr16
mov
roll
insb
adc
lds
fdivs
pusha
lret
xlat
push
xor
mov
arpl
ja
rcrb
loope
testb
push
xchg
lods
shll
std
sahf
imul
push
jmp
push
lods
fsqrt
jmp
mov
adc
and
cwtl
daa
bound
cmp
mov
mov
add
push
push
sub
cltd
xor
test
pusha
sub
aas
push
mov
ret
pop
sti
je
lcall
add
jp
popa
scas
push
or
out
or
xchg
jbe
dec
dec
mov
pop
xchg
sbb
sub
imul
jg
ret
fadds
sbb
or
pmulhw
xlat
test
push
shl
cli
or
fwait
pop
pop
ds
dec
xchg
xchg
xor
out
andnps
xchg
fcoml
mov
pop
cmc
xchg
cmp
rcll
pop
data16
bound
mov
pop
bound
inc
push
rcr
sahf
lods
fadd
aas
pop
divb
inc
jg
jnp
xlat
dec
jg
scas
mov
subl
add
out
or
xchg
mov
cmp
ss
ret
or
int
sub
jb
loope
stos
fisubrs
test
int
xor
push
or
sub
and
daa
nop
jle
mov
je
in
dec
pop
addr16
scas
cltd
xchg
ljmp
subps
enter
sub
lahf
sub
aad
es
cmp
sub
stos
mov
mov
pop
rorl
sub
rolb
setg
cmpsb
rsm
sub
out
flds
idivb
aad
and
inc
sbb
lea
out
icebp
test
rorl
call
push
into
mov
adc
push
push
jb
cli
cld
ljmp
or
xchg
jecxz
push
shlb
jnp
and
lock
jno
jne
jecxz
push
mov
jb
inc
mov
or
and
jns
lahf
cld
add
stos
bsf
dec
sub
mov
repnz
inc
xor
call
jecxz
mov
cmp
lea
nop
lcall
sbb
push
ds
loopne
sbbb
cmp
ss
fadd
jg
cmp
dec
cmpsb
xchg
jo
adc
and
icebp
nop
pop
repz
popf
push
scas
adc
cli
neg
pusha
dec
sbb
aad
cmp
out
xchg
sbb
dec
repz
dec
push
nop
ret
movb
lods
sti
mov
rcr
cmpsb
pop
sahf
lret
cmc
adc
push
cli
push
ret
fisubl
or
roll
sti
pusha
jmp
insb
sub
jecxz
push
push
mov
sahf
cmp
or
out
sahf
fbld
test
call
in
or
xlat
cli
jg
enter
imul
mov
in
jg
pop
xor
and
ret
xor
aam
sahf
aaa
fstpl
push
mov
in
in
les
jmp
js
imul
dec
mov
cs
cmpsl
lret
sub
xor
jge
jns
dec
mov
pop
nop
or
cwtl
push
cmp
scas
and
ja
fcmovb
aaa
lahf
loope
xor
in
mov
push
xchg
das
lret
or
neg
jle
dec
push
or
outsl
xor
sahf
xchg
inc
insb
mov
dec
das
sbb
mov
xchg
test
les
push
orl
xor
mov
inc
aam
jmp
shl
add
rcll
fs
sub
xor
mov
loope
xor
pusha
push
push
inc
push
int3
add
sbb
dec
stos
mov
je
out
out
cmp
cmp
mov
out
insl
pop
adc
xor
repz
mov
jp
xchg
nop
mov
jnp
jo
aaa
push
pop
jae
xlat
mov
mov
sub
ljmp
nop
xchg
push
jp
mov
popf
stc
les
add
mov
fdivs
call
fs
mov
jle
icebp
lret
not
inc
jo
sahf
mov
enter
ja
inc
movsl
lcallw
cwtl
sub
cmp
jb
inc
push
out
jbe
pop
xchg
xlat
xchg
mov
jns
lret
fdivs
pop
test
inc
sub
in
mov
cmp
clc
dec
idiv
das
lds
in
leave
jmp
scas
aaa
and
subl
pop
arpl
ror
add
xlat
aad
nop
push
iret
data16
jecxz
push
jbe
lret
mov
inc
mov
jge
ror
pop
movq
xor
jg
jo
js
je
mov
enter
out
in
les
filds
test
dec
jnp
mov
lods
icebp
adc
js
lods
pop
pop
push
inc
pushf
rorl
fsts
xor
shrl
inc
xchg
mov
and
mov
sbb
sbb
xlat
in
testl
sbbl
mov
shrl
mov
dec
jne
mov
out
push
fisttpl
push
out
flds
mov
sub
dec
and
mov
xor
inc
cmp
enter
mov
pop
sbb
pushf
mov
enter
scas
sbb
inc
test
outsl
mov
popf
inc
in
xchg
or
jbe
insl
inc
lock
punpcklbw
inc
sarl
mov
mov
pop
push
mov
fdivl
lahf
xor
rep
adc
pop
addr16
test
dec
popl
subl
push
and
pop
mov
add
mov
inc
xchg
ds
mov
and
outsb
cli
xchg
and
lahf
jnp
xlat
neg
xor
dec
xchg
call
in
mov
nop
repz
mov
shlb
dec
pop
out
test
or
mov
cltd
cwtl
lcall
gs
or
cltd
test
cmp
push
and
xchg
push
inc
pusha
jecxz
clc
push
mov
xchg
fsincos
mov
fidivl
adc
movsl
bswap
cmp
out
popa
push
cmp
xchg
ja
aas
in
dec
mov
push
popa
call
dec
inc
cli
adc
or
xor
cmpsb
ja
dec
lret
jo
sub
inc
ljmp
pop
jp
jmp
stc
sbb
pop
sbb
and
cmp
sbb
jg
add
push
adcl
mov
sbbl
cmp
cmp
inc
in
testl
imul
shr
xlat
das
add
fmull
popf
sets
imul
push
inc
cmp
leave
push
les
out
ds
fwait
pop
ja
xor
push
mov
push
rolb
cwtl
pushf
or
push
jne
pop
push
addl
mov
lcall
dec
jnp
int
mov
out
sbb
or
not
fsubs
into
into
or
jle
repnz
shll
adc
pop
int
dec
andb
xchg
nop
les
scas
xor
lahf
jge
inc
into
push
sub
cmc
pop
js
jl
xchg
sbb
in
jbe
mov
jmp
jl
movsl
dec
ja
adc
inc
mov
lret
xchg
pop
sub
mov
in
outsb
cmp
jle
andb
jp
dec
cmp
test
and
pop
repnz
add
repnz
stos
sub
mov
mov
aaa
adc
arpl
cmpl
inc
add
je
in
mov
or
add
inc
pop
cmpsb
push
dec
push
aam
fs
pop
int
push
push
jmp
mov
rolb
jge
and
in
push
pop
aas
stos
repnz
xor
int
pop
mov
mov
jnp
ret
mov
dec
outsb
testl
mov
inc
mov
fwait
insb
dec
jns
in
test
inc
imull
cmp
inc
sti
jecxz
rcr
mov
pusha
jno
stos
clc
and
mov
std
shll
out
int3
imul
cwtl
addr16
jnp
icebp
push
jg
dec
mov
mov
mov
mov
lds
aaa
rcrl
adc
lds
xlat
mov
dec
ja
adc
arpl
les
jmp
cmp
push
xor
jmp
stos
loopne
cmp
push
outsb
sub
cmp
and
pop
aaa
pushw
sub
movsl
cmp
lods
dec
adcl
ret
testl
filds
and
pop
mov
fcoml
fstpl
in
pop
shll
out
mov
add
sub
jbe
ss
mov
stos
fiadds
pop
push
inc
adc
call
sub
inc
jmp
ljmp
and
rolb
sbb
push
adc
mov
jmp
mov
loopne
push
fwait
outsl
mov
add
fcoml
sbb
call
fwait
sub
insb
pushf
scas
adc
dec
shl
stos
mov
xchg
seto
cltd
push
jnp
call
push
cmpsb
mov
pop
mov
dec
stos
decl
pop
fistpll
in
xchg
lret
shlb
pop
sbb
es
incl
daa
xlat
std
cmp
inc
pop
or
pusha
cmpl
mov
mov
stc
xor
lock
repnz
scas
or
mov
or
imul
add
pop
add
repz
data16
int
in
cs
xchg
sbb
cmp
negl
sbb
shr
enter
lcall
fs
rep
jns
idivb
and
mov
mov
cli
insb
mov
xor
int
mov
inc
bnd
jbe
cmp
repz
add
pop
jb
and
in
xor
and
scas
std
clc
das
xchg
cwtl
jns
push
movsb
jmp
mov
ror
repz
mov
ret
ja
ljmp
ret
push
lcall
pop
mov
cli
push
xor
pushf
pop
imull
jne
mov
ds
mov
add
je
pop
xchg
in
aaa
shrl
mov
ret
sbb
dec
and
in
xchg
out
xchg
lods
lods
ret
stos
xchg
xchg
fidivrl
push
testb
dec
mov
cmp
in
lcall
cmp
jne
test
ds
or
mov
adc
xchg
mov
pop
aaa
aam
movsbl
das
ret
cmpsb
fs
adc
cmpsl
jbe
push
fdivp
shlb
inc
out
xor
push
xchg
sti
push
push
leave
lea
push
mov
popa
pop
ret
mov
shrl
adc
sub
dec
sarb
data16
sti
int
sbb
les
filds
jbe
and
arpl
and
pop
movsb
iret
mov
lret
addb
lea
xlat
mov
mov
scas
inc
out
shrl
add
xchg
daa
lods
nop
jo
ds
ljmp
pop
lods
or
add
mov
pop
addr16
loop
test
leave
add
cmp
js
sbb
jmp
movsl
sbbb
stc
dec
and
loop
lret
fdivrs
mov
mov
and
pop
inc
cld
inc
inc
xlat
test
ljmp
les
js
imul
xor
jmp
cmp
imul
cmp
jo
les
push
or
icebp
mov
push
jmp
dec
adc
mov
outsl
push
sub
cmp
adc
testl
jg
fwait
popf
push
stos
mov
cmp
mov
jae
lcall
cmp
and
roll
adc
test
mov
adc
test
and
or
mov
push
dec
push
inc
mov
and
cltd
sub
cmp
test
adc
bound
push
push
mov
in
loop
mov
jo
mov
dec
and
mov
stos
add
out
sub
vpsraw
inc
adc
mov
stc
sub
out
push
test
in
sbb
lret
jbe
arpl
pop
xchg
inc
shrb
inc
mov
and
into
or
and
cmp
adc
jl
in
cmp
mov
nop
gs
dec
scas
ficoml
cmp
pushl
test
inc
xor
cs
imul
adc
sbb
clc
pop
int
xor
push
mov
nop
dec
xchg
mov
add
and
push
or
pop
push
and
add
subl
mov
ja
cmp
adc
lods
pop
clc
loope
cld
loopne
jno
popf
cmpsl
pop
sbb
xor
cmp
or
rcll
jns
dec
or
mov
jge
push
pop
mov
cmpl
or
adc
sbb
jp
jno
loop
jne
int3
jb
lret
imul
lcall
rcl
popf
mov
cmpsl
das
pusha
and
iret
xor
enter
aas
lahf
jne
cmp
movsl
popa
pop
xor
pop
stos
cmp
in
imulb
lock
aam
jae
test
mov
mov
insl
pop
or
test
outsb
sub
fistpl
insb
and
lret
and
fnstenv
out
cmp
adc
adc
sbb
cmp
pushf
xchg
sbb
jo
sub
in
sub
ret
jecxz
mov
movsl
xchg
xchg
scas
and
push
nop
movsb
sarb
lcall
lea
inc
out
jne
lcall
cmpl
pop
lods
int
mov
popf
loop
dec
call
hlt
stc
mov
cld
adc
mov
sahf
sbb
xor
iret
cmpsb
xor
ss
and
dec
xchg
imul
add
scas
into
jne
ja
mov
gs
shll
adc
push
std
jmp
mov
pop
mov
pop
test
aad
push
pop
out
int
xchg
push
push
cmp
sub
adc
push
mov
pop
pop
push
jnp
jbe
lds
popf
test
adc
xchg
sub
mov
dec
adc
dec
jecxz
inc
jbe
or
jle
or
pusha
into
dec
scas
dec
inc
es
inc
sub
loopne
std
rcr
adc
int3
or
and
sub
frstor
fimuls
mov
push
push
or
ret
xchg
test
sub
pop
ret
icebp
int
inc
popf
das
xchg
int
cmp
pop
icebp
push
shl
aas
and
push
jg
or
mov
mov
xor
cwtl
bound
jge
movsl
push
lret
outsl
aam
inc
sbb
cld
cltd
dec
pop
and
mov
pop
and
inc
fisubl
jmp
inc
fwait
ret
mov
ud1
aas
arpl
cwtl
push
mov
jne
pop
pop
aam
mov
test
in
cmpsl
mov
push
imul
push
cmc
hlt
mov
dec
sbb
lcall
enter
jmp
jge
pop
push
scas
push
lret
into
push
adc
fs
sti
in
or
sub
xor
orl
shlb
push
sarb
sbb
iret
nop
or
xchg
out
dec
add
pop
or
int
dec
dec
sub
pop
shl
loop
push
lret
iret
jg
sbb
lock
fs
dec
dec
imul
stos
cmp
add
aas
push
outsl
ret
sbb
push
fwait
or
adc
and
mov
pop
mov
repnz
leave
lret
push
adc
jmp
add
lock
jg
mov
sbb
subb
add
or
aad
push
outsl
in
fcoml
and
incl
outsb
rol
mov
sub
or
or
scas
fcmovb
cmp
xchg
xchg
xor
xor
inc
ds
gs
les
jb
and
roll
mov
push
mov
cmp
inc
mov
mov
push
mov
hlt
test
dec
xlat
ja
and
imul
inc
insb
js
out
lea
insb
int
pop
outsl
mov
xchg
sbb
mov
push
mov
pop
mov
pop
ss
mov
repz
or
sbb
fdivrl
inc
mov
ror
stos
mov
out
imul
mov
sub
or
push
inc
mov
pop
int
rorl
paddd
pop
sbbb
mov
mov
dec
push
adc
mov
in
imul
idivl
loopne
cmpl
sbb
xor
push
pop
push
jge
xchg
cli
pop
push
inc
jo
mov
add
or
add
cwtl
ja
dec
in
mov
jne
mov
jne
mov
jl
dec
mov
in
lea
mov
inc
shr
jns
jno
add
pop
lahf
cwtl
out
adc
or
out
pop
int
fidivrs
mov
lret
popa
test
cld
int
xor
xor
mov
jg
jne
jp
dec
cltd
or
mov
cmp
add
mov
daa
mov
leave
cmp
push
not
mov
push
jg
pop
icebp
adc
insl
stos
shl
xor
or
cs
movsl
lds
mov
stc
push
add
sub
std
fucomip
add
test
cs
jecxz
popa
push
incl
aad
inc
sbb
jnp
pop
mov
pusha
jno
insl
shll
jle
jb
fistl
rolb
add
cli
out
xchg
inc
pusha
xor
daa
mov
lods
shrb
jns
jmp
int3
les
lds
repz
roll
sub
je
mov
pop
roll
jnp
lods
pop
lahf
sbb
imul
enter
xchg
jae
inc
insl
idivb
mov
call
clc
cltd
and
push
add
in
loopne
test
jne
mov
mov
lock
pop
adc
or
add
aas
push
jge
inc
xchg
inc
sbb
mov
mov
push
repz
addl
jb
jno
mov
sahf
fwait
das
negl
popf
or
sub
pusha
insl
loop
hlt
xor
int3
lea
xchg
das
xrelease
xor
jmp
je
sub
in
hlt
sub
sub
incb
mov
cmp
and
das
out
mov
in
jp
push
sahf
lea
mov
push
jns
mov
mov
adc
and
jo
aad
jge
das
dec
push
xchg
xchg
push
push
not
sbb
dec
dec
jecxz
mov
push
arpl
mov
or
or
movsl
sub
jmp
mov
imul
cld
jns
push
aad
gs
adc
pusha
out
and
or
mov
add
mov
out
cmp
ret
lret
fucom
jle
iret
lods
inc
out
adc
xchg
test
fcmovnbe
ljmp
or
addr16
iret
jno
sub
ret
adcb
inc
sbb
ljmp
mov
cmpsb
outsb
or
lret
mov
adc
mov
sbb
lcall
push
push
addr16
movsb
addr16
push
xor
push
adc
lret
adc
icebp
cltd
and
adc
xchg
dec
lcall
jmp
mov
xor
push
es
xor
out
pop
inc
and
es
adc
cmpsl
test
push
aam
xor
pop
jge
cwtl
pop
loopne
movsb
adc
insb
jp
xchg
das
pop
lret
sbb
xor
mov
jmp
jo
push
imul
imul
nop
jno
or
popf
and
jbe
pop
pop
mov
daa
cli
xor
pop
sub
cmp
insb
pusha
cmp
xlat
icebp
jg
xor
fimuls
lods
cmp
xchg
sub
imul
shll
mov
sub
push
sub
jle
cmovo
mov
das
cmp
popa
ret
pop
jp
stc
icebp
jne
adc
lahf
and
or
pop
pop
je
or
dec
adc
add
push
mov
pusha
jns
aad
dec
push
test
into
fwait
mov
mov
out
insb
fs
repnz
les
push
xor
cmp
xchg
push
je
cmp
repz
pushf
imul
xchg
adc
test
inc
enter
jg
cltd
icebp
fstpl
pop
and
mov
mov
mov
jecxz,pt
adc
pop
xchg
inc
mov
loope,pt
adc
int
lret
inc
out
jle
xor
push
xor
inc
sbb
nop
aam
outsl
and
mov
cli
jge
lds
out
sbb
dec
pop
mov
test
stos
push
mov
pusha
pushf
push
push
pop
adc
dec
xor
sahf
rcrb
gs
pop
lret
repz
xor
mov
dec
or
pushf
xor
push
sub
test
mov
aas
sbb
loop
out
mov
pushf
mov
xor
in
mov
addb
sbb
lret
lods
jle
mov
push
cmp
mov
mov
lods
shrl
mov
push
jne
push
jl
xchg
pusha
sbb
mov
push
shlb
push
mov
fwait
push
enter
pop
mov
push
fldl
adc
dec
std
pop
xor
push
push
ja
and
sub
mov
fcoml
xor
mov
add
es
sbb
clc
data16
sub
or
adcb
xor
push
xor
aaa
or
imul
sbb
fisttpl
cmp
icebp
fisttpl
push
jp
sbb
dec
mov
dec
fmull
xchg
fcompl
pop
in
and
loop
mov
xlat
mov
push
call
imulb
int
gs
push
sar
aaa
arpl
mov
or
cmc
fwait
or
std
out
movsb
xchg
xor
hlt
rcrb
mov
or
mov
addr16
ljmp
lahf
mov
enter
sbb
xchg
int
ss
push
setno
sbb
stos
jle
or
xlat
imul
and
adc
lock
xor
jne
dec
jmp
sti
xchg
test
or
push
fbstp
or
pusha
outsl
cld
jne
sbb
push
or
test
stos
cmp
push
mov
in
or
dec
add
into
add
psraw
sahf
xor
or
xchg
mov
lret
fbstp
insl
mov
fmull
movsb
jae
mov
push
shll
mov
and
sub
cmp
repz
movsb
popf
push
xchg
rcrb
sbb
pop
out
xchg
mov
xchg
pop
xor
or
xchg
ljmp
or
jo
add
push
or
xchg
stos
xchg
ficompl
and
fsubr
fstl
pop
movsb
rcl
lods
sbb
fisubl
and
and
inc
leave
cmc
and
outsb
into
sti
hlt
inc
mov
pushf
rclb
or
mov
sarl
xchg
push
sti
mov
jp
mov
mov
inc
pop
sar
push
ljmp
cmp
mov
push
test
movsb
pop
in
inc
scas
lods
adc
hlt
out
cmpsl
ljmp
pop
pop
lock
aaa
lcall
sub
mov
sub
mov
jmp
and
fdivs
mov
xchg
adc
adc
sti
les
in
mov
pushf
in
test
add
icebp
movl
ret
mov
mov
sub
xor
jle
lret
xchg
std
push
bound
outsl
push
jne
mov
adc
jg
jne
pushf
jg
sub
test
push
fmuls
mov
mov
ds
add
imul
adc
inc
imul
sub
mov
jle
pop
or
je
fisttpl
dec
and
xlat
js
enter
push
cmpsl
add
xor
js
scas
outsl
fucomp
je
out
sbb
int3
push
mov
repz
xor
adc
pop
call
and
stos
mov
sbb
push
and
in
std
add
ret
xor
and
dec
xchg
mov
loopne
jnp
das
loope
faddl
mov
in
test
xor
stos
and
lret
in
xchg
cmpl
and
imul
xchg
cmp
push
js
xchg
pusha
adc
lea
inc
lea
or
add
xchg
loopne
jno
js
sbb
inc
jmp
push
and
fwait
cmp
fidivrs
push
and
ljmp
cmp
pop
mov
xchg
daa
inc
mov
dec
rcr
into
add
inc
cltd
adc
add
insb
sahf
loopne
jmp
push
lahf
jecxz
mov
jecxz
in
push
adc
dec
dec
or
outsb
jo
inc
push
sahf
xchg
or
xor
sbb
cltd
xchg
arpl
repnz
in
sarb
movsl
call
jl
sbb
jp
test
js
test
pop
cld
jns
cltd
push
and
lds
add
adc
fistpl
sbb
dec
mov
sbb
enter
and
cmpsb
popa
xchg
mov
fnstcw
cmp
pop
out
fsubs
or
lcall
cmc
push
f2xm1
pop
ljmp
mov
xchg
shlb
or
lahf
cli
mov
add
cmp
mov
pop
sahf
lea
mov
pop
mov
fistpl
inc
sbb
fiadds
add
dec
sti
push
mov
insb
in
ret
adc
and
movsb
cmpl
push
inc
out
rcrb
jecxz
test
mov
jae
stos
jmp
or
pop
rcrb
ljmp
jo
addl
rorl
fcomps
push
mov
repz
lods
je
int3
into
inc
in
cli
and
inc
xorl
xchg
pop
mov
and
repz
mov
hlt
insb
push
xor
icebp
mov
xor
rcrl
push
addr16
push
jbe
mov
jge
adc
out
inc
xor
pusha
clc
mov
es
fldt
dec
in
pusha
jecxz
inc
fadd
cmp
aad
xchg
adc
es
dec
cmp
push
cmp
insb
das
xchg
jmp
gs
adc
dec
rcpps
sub
pop
or
shlb
shll
cwtl
clc
loopne
xchg
lea
out
andb
movsb
ja
pop
jne
mov
jle
fisubrs
xchg
pop
notl
xchg
es
sub
push
xor
jl
int3
or
in
lea
xchg
sub
je
pop
outsb
mov
lret
lods
scas
inc
insl
std
jae
jae
rorb
shl
and
add
sbb
push
pop
inc
sub
sub
and
sbb
lods
dec
cli
push
lret
and
pop
push
mov
pop
repz
mov
dec
fnstsw
mov
lcall
push
xchg
and
push
mov
filds
xchg
cs
lahf
popf
sarb
mov
mov
or
jle
test
xor
scas
imul
adc
adc
out
jbe
popf
and
push
les
jecxz
sbb
popf
stos
jns
lcall
icebp
decb
ja
or
push
jns
dec
dec
jns
int3
xchg
xor
in
icebp
aaa
mov
jmp
shll
fistpll
push
dec
sub
stc
jecxz
and
dec
adc
add
cmp
mov
movsb
orl
fidivs
mov
mov
in
clc
xor
or
xor
push
jo
scas
add
jle
add
ja
jbe
dec
inc
xchg
pop
scas
xor
lock
jp
mov
cmp
push
outsl
lea
push
leave
iret
ljmp
sbb
jbe
out
or
cmc
sti
mov
mov
sar
aad
pop
ret
push
push
lea
inc
mov
aam
shlb
xor
outsb
repnz
push
xchg
xchg
ds
addr16
mov
xchg
dec
sub
inc
sahf
jns
fisubrs
push
pushf
stos
mull
xor
out
add
sbb
lret
out
fsub
sarb
pop
push
ret
mov
sti
pushf
sbb
fs
idivl
sarb
mov
xchg
roll
stos
rorb
bound
pusha
mov
pop
in
repz
aam
call
in
mov
test
xor
repnz
lcall
rol
imul
sbb
fidivs
pop
lods
cmp
or
mov
xorl
xor
ret
pop
jae
mov
add
adc
push
jns
testl
mov
xorb
sub
outsb
inc
cld
and
fisubl
rcrl
mov
dec
dec
xchg
aaa
popa
push
hlt
sub
icebp
icebp
movsl
inc
loopne
lcall
pop
jb,pn
jns
inc
push
dec
or
out
or
insl
in
push
and
and
aad
push
leave
xor
xlat
jmp
mov
ds
in
mov
push
inc
mov
repnz
push
jecxz
test
cmp
arpl
push
pop
jne
push
inc
push
and
aas
sbb
in
cli
lcall
xor
jns
cmc
js
or
icebp
shll
andl
cmpsb
dec
clc
test
ljmp
adc
sbb
repz
lret
lods
ret
repnz
pop
mov
sbb
or
mov
notb
std
xchg
lret
adc
xchg
mov
call
adcl
push
mov
push
and
add
sbb
cmp
stc
negb
daa
add
mov
stos
xchg
xor
dec
and
add
stos
inc
jmp
repnz
cmpsl
popl
cmp
rcr
jp
nop
fisubs
in
lds
push
scas
popa
jmp
es
xorl
imul
push
icebp
sbb
adc
sbb
lods
sahf
ret
jle
fadds
aad
lcall
je
and
jecxz
or
lahf
add
xchg
cmpsb
push
pop
pop
pop
lods
inc
cmp
mov
dec
cmp
cmp
cld
xorb
and
lcall
add
mov
xorl
inc
insl
pop
jo
dec
add
adc
pop
push
out
ffree
cmp
add
inc
mov
aad
mov
push
xchg
dec
cmp
mov
push
ret
xchg
push
aas
arpl
insl
nop
xor
adc
xor
out
sub
jno
cld
mov
cmpl
jns
xchg
insb
jg
jmp
cmp
or
dec
xlat
insl
ret
mov
shlb
cmpsb
popa
push
cmp
fbld
inc
xor
sbbl
lahf
stos
ljmp
hlt
fisubs
pusha
mov
repnz
fldenv
dec
lods
jb
jmp
aaa
ja
cmp
lods
in
andb
xor
lds
xchg
loopne
or
or
pop
and
loopne
movsl
push
xchg
mov
jne
sbb
js
loope
loope,pt
pop
mov
icebp
push
stos
in
sbb
cmp
sub
mov
stc
pop
outsl
xor
xchg
xorl
or
subb
dec
outsl
aad
movsb
jmp
mov
mov
mov
xchg
cmp
mov
pop
pop
fsts
adc
cmp
push
dec
push
ret
push
xchg
and
and
inc
rcll
mov
in
cmp
or
cwtl
lods
hlt
in
in
iret
mov
loopne
mov
jb
jp
std
xor
call
push
in
decb
cs
popf
cmc
fcompl
push
ficompl
pop
testl
call
sub
cwtl
jmp
mov
out
js
leave
xchg
cmp
mov
inc
xchg
lds
aad
mov
out
push
fisttps
in
fs
loop
adc
mov
mov
mov
fcoms
cmp
scas
stc
or
jle
mov
sub
sub
mov
xchg
stc
mov
mov
xor
mul
pop
or
mov
int3
aam
aaa
pop
shrl
roll
adc
mov
out
push
mov
insl
imul
inc
in
mov
sti
cltd
xor
jbe
clc
popf
in
push
mov
loop
test
cmp
inc
xchg
xchg
mov
aam
sub
inc
ja
insl
cmc
gs
cmp
add
mov
fsubrl
inc
outsb
jg
xchg
xchg
push
test
fmull
nop
pop
add
xor
les
enter
test
test
xchg
adc
jne
sbb
jp
int3
jge
xor
in
sbb
sarb
xchg
jmp
xchg
test
dec
push
cltd
dec
mov
fyl2xp1
je
loopne
cmpb
out
sbb
xchg
das
popa
and
dec
push
xchg
xor
pop
popa
dec
xchg
lods
out
gs
sub
inc
bound
mov
pop
fwait
stos
jmp
push
outsb
inc
push
mov
mov
repz
mov
and
push
sub
xor
repz
nop
outsl
arpl
call
fdivrl
jns
imul
mov
inc
insb
push
cmpb
mulb
nop
push
add
pop
jg
push
lahf
inc
stc
push
mov
mov
dec
arpl
sahf
pop
inc
mov
ja
push
sti
xor
and
aam
cmc
lahf
into
or
sub
cmpsb
sar
fldt
aaa
clc
out
loopne
push
mov
shrb
dec
sub
cmp
lahf
push
ret
add
popa
inc
bound
outsl
xor
sub
sub
js
mov
arpl
and
pop
out
mov
fwait
sbb
rcll
sbb
mov
sahf
out
xchg
fnstcw
add
scas
add
mov
pop
sub
test
out
int3
add
out
lret
and
cmp
inc
jmp
rorb
push
pop
sub
aam
xchg
inc
jnp
mov
pusha
jb
out
mov
mov
ja
std
stc
fistl
push
int
or
cmp
dec
repz
sarb
pop
movsl
mov
stc
imul
repz
cmpsl
push
jbe
lahf
out
aam
cmp
lea
jb
and
sbb
repnz
lods
inc
jns
stos
dec
arpl
in
std
sub
popa
jns
js
and
xlat
enter
shll
and
pop
ja,pn
jno
in
jle
dec
cwtl
je
add
mov
lock
push
arpl
xchg
cs
in
insl
add
xor
push
add
cmc
cli
outsb
aam
xor
aam
es
xchg
inc
xchg
cld
jmp
paddb
mov
mov
pop
popa
addr16
pop
add
movsl
mov
std
outsl
aas
push
adc
jp
jae
scas
mov
fwait
xchg
bound
out
jnp
daa
std
mov
xor
mov
fstl
xchg
clc
cmpsb
mov
sbb
push
push
adc
aaa
sbb
std
and
insb
mov
aad
test
adc
call
sar
push
adc
ficompl
in
mov
mov
loop
jmp
sub
dec
dec
cltd
inc
outsl
insl
lds
movsb
cltd
add
and
lret
fsts
jg
jae
xchg
sub
add
push
cmp
sbb
xlat
mov
out
xchg
mov
imul
jmp
jmp
add
lock
lock
sbb
adc
fwait
xchg
jnp
cmp
mov
das
int
in
shl
lods
xchg
out
jle
xchg
adc
jg
ds
stc
pop
popf
sub
aas
or
jg
int3
lcall
adc
pop
add
mov
pusha
xorl
aad
sar
mov
xchg
or
add
gs
mov
imul
inc
xor
add
push
and
mov
push
aam
in
aam
cmp
insl
gs
push
cltd
divb
sbb
jae
mov
xchg
push
das
fldt
in
jb
pop
lods
inc
mov
cmpl
pusha
jmp
jno
lock
mov
mov
and
mov
pop
sub
mov
jae
push
mov
lods
pop
nop
sub
stc
pop
jne
xchg
mov
push
mov
inc
jle
or
pop
ja
fs
add
fmull
repz
push
xchg
mov
movsb
out
test
xor
inc
sarb
xlat
bound
adcl
stos
mov
and
ret
xchg
mov
jbe
mov
cmpb
mov
call
in
iret
cli
sub
inc
sbb
inc
pushf
jnp
pop
lea
xor
lea
daa
arpl
xchg
push
in
or
iret
xchg
push
push
test
xchg
pop
mov
jnp
in
test
loopne
and
pop
and
in
sti
bound
push
testb
arpl
xchg
and
int3
dec
shr
dec
mov
shll
in
dec
mov
popf
in
aad
imul
into
jbe
sub
cmpsl
mov
bound
and
or
xchg
push
adc
inc
fists
lds
xchg
and
push
add
pop
stc
add
std
inc
adc
xor
scas
imul
aas
pop
iret
sahf
or
dec
into
push
push
cmp
lahf
mov
add
push
xor
daa
bound
sti
ret
mov
loope
adc
jae
mov
push
push
jnp
inc
xchg
push
stos
mov
out
pop
sub
js
push
and
les
enter
pop
mov
popa
movsl
lret
loopne
dec
jl
fmuls
fdivl
inc
mov
mov
lods
icebp
jl
cmp
ret
inc
adc
cld
jg
scas
dec
xor
aad
dec
or
aam
jmp
div
rol
xlat
xor
dec
push
push
push
out
adc
imul
cmpsb
pop
pop
sbb
jmp
mov
add
or
mov
push
pop
int
mov
cmp
test
mov
pop
add
mov
jb
pop
or
sub
sbb
push
repz
cld
iret
mov
cmp
jp
popa
mov
lea
dec
addl
jne
cmp
out
pushf
frstor
pushf
in
pop
and
pop
ret
inc
lahf
sub
shll
call
pushf
in
stc
add
nop
lret
xchg
rsqrtps
mov
add
cmc
push
cmp
jmp
or
add
ds
ret
ss
or
mov
jnp
pop
jns
mov
jnp
lret
push
addr16
add
fcoml
jg
inc
movsb
jb
ljmp
fsub
fbstp
mov
cmp
rclb
push
xor
or
out
sub
push
movl
fdivl
fildll
mov
frstor
cmp
sahf
or
ja
push
jne
sub
sbb
lods
shll
ret
push
adc
lea
jg
add
icebp
das
jo
fsts
in
shl
xchg
dec
pop
ds
dec
lea
mov
mov
sbb
xchg
std
mov
push
xchg
jg
jp
fimull
xchg
adc
mov
pop
and
orps
mov
cmpsb
mov
dec
inc
push
popl
mov
cs
mov
jmp
push
aam
mov
jo
aad
nop
ret
sbbl
fildll
push
xor
mov
push
add
sbb
sub
pop
mov
jo
mov
popa
pop
mov
addr16
xorb
pop
sbb
subb
lahf
jnp
jo
add
cld
out
adc
inc
hlt
add
sbb
in
mov
sbb
mov
add
xor
ja
fst
fistpll
xor
or
sub
push
mov
mov
addb
cmpb
ret
addr16
subl
add
int
dec
insb
jns
jne
mov
push
mov
sbb
outsb
test
push
sbb
jle
leave
pop
mov
test
xchg
gs
sbb
inc
mull
inc
pop
xlat
out
ss
dec
sub
mov
testb
xor
lcall
inc
jecxz
xlat
xchg
lea
add
sub
dec
and
adc
fldt
stos
mov
stos
fcom
jnp
lock
push
sbb
push
mov
out
in
mov
cmp
cld
std
js
ds
jns
inc
bnd
lret
sub
daa
jae
cltd
in
inc
sbb
mov
xchg
int
movsl
pushf
inc
out
out
daa
xchg
pusha
fdivrs
lods
shl
je
or
out
jnp
add
sbbl
cmc
dec
bound
inc
sahf
jl
lcall
aaa
sub
adc
repz
inc
repnz
inc
cmp
push
jne
scas
mov
jo
imul
adc
dec
jmp
ljmp
test
adc
in
iret
scas
pop
mov
add
mov
push
mov
push
sbb
dec
xor
ret
push
mov
int
mov
fcmovbe
sub
xor
jl
and
xchg
pop
in
sub
jmp
pusha
adcb
xor
xlat
sub
adcl
fiadds
mov
xor
aas
xchg
aas
js
aad
inc
and
je
mov
lcall
pop
fs
scas
mov
outsl
lods
ljmp
adcl
sbb
inc
sub
shlb
jb
pop
xchg
cmp
dec
mov
data16
mov
pop
ja
xchg
push
addb
xor
jle
cmp
les
dec
push
push
sub
mov
adc
sbb
lock
mov
popa
ljmp
clc
push
insl
enter
adc
jl
cmc
rclb
les
sbb
bound
test
jg
fstps
add
aad
or
pop
jns
push
dec
je
addr16
outsl
ja
outsb
xchg
shlb
lea
xchg
out
outsb
adc
movsb
aad
sub
loop
sub
aaa
jg
fmuls
outsl
mov
fcoml
sbb
xor
push
dec
rolb
icebp
pushf
div
xchg
data16
shl
sub
inc
or
add
aam
mov
sub
jl
inc
cmp
mov
fcmovbe
add
fs
mov
leave
cs
sub
mov
lods
inc
push
scas
jecxz
adc
mov
cwtl
mov
mov
iret
imul
inc
xor
mov
mov
imul
aaa
cmp
xchg
push
jno
les
pop
sub
loope
rorl
leave
mov
push
jecxz
mov
dec
outsl
jmp
lret
inc
sbb
shll
cld
lods
adc
inc
and
mov
cs
push
pop
sbb
iret
outsb
mov
push
sbb
cmp
xor
fsubrs
inc
mov
fwait
mov
addr16
das
lcall
adc
sub
loopne
pop
subb
cmp
xchg
push
mov
add
cmc
xchg
xor
mov
jo
popf
pop
cli
cmp
jmp
add
and
movsl
incl
push
cmp
sub
into
sbb
pop
lea
test
aam
loop
popa
cs
bnd
fnstenv
rcr
or
data16
pop
push
dec
outsl
scas
cmp
leave
outsb
pop
jne
and
cmp
hlt
repz
testb
sbb
dec
sub
xchg
ss
cmpl
mov
push
pop
push
adc
xor
xor
mov
xadd
sbb
in
mov
lret
jbe
mov
jne
clc
pop
in
icebp
shll
cltd
and
andl
sbb
sub
add
iret
push
and
add
or
out
test
lcall
jo
mov
inc
sbb
call
cwtl
sub
movsl
sbb
addl
insb
cmp
sbb
stc
lock
mov
push
idivl
jecxz
andb
stos
imul
jle
push
cmp
scas
dec
pop
push
js
lods
aam
add
aaa
popf
hlt
pop
icebp
sbb
mov
jns
into
aas
adc
sbb
and
mov
and
xchg
iret
addl
es
adc
in
xor
aad
loop
jle
cmpb
lcall
leave
cmpsb
jg
jmp
les
inc
or
lret
lret
addb
or
fmuls
insb
xor
inc
jge
pushf
sahf
inc
mov
stos
push
movsb
std
lea
shlb
jae
in
pop
pop
ficomps
or
aad
or
fisubs
sbb
icebp
cld
dec
adc
pop
cmpsl
add
jo
xchg
rorl
cmp
lds
xchg
test
push
cmp
scas
ret
or
data16
jb
cli
add
imul
sbb
rolb
cwtl
fdiv
xlat
addr16
sub
sahf
mov
mov
pusha
sub
dec
sbb
scas
imul
stos
lret
vprotw
inc
add
mov
adc
out
aas
mov
jecxz,pn
mov
rcl
or
ljmp
pop
cmp
cmpsl
loope
inc
into
mov
in
push
push
mov
pop
dec
imul
loope
lahf
jo
lea
push
aam
or
mov
jmp
icebp
jle
lret
ljmp
and
cmpb
push
push
dec
std
rclb
test
pop
push
mov
and
sbb
push
cs
xchg
mov
cmpsl
or
fs
in
and
data16
jg
bound
iret
dec
adc
push
movsb
pop
out
lahf
add
or
or
push
jecxz
xchg
push
aaa
jle
int
dec
iret
popf
movsb
sub
sub
inc
push
push
add
jg
ljmp
gs
jb
aaa
and
dec
mov
dec
dec
push
mov
jae
push
xchg
mov
les
into
fldcw
sub
pusha
mov
jl
popa
dec
stos
lods
jg
imul
mov
cmp
add
adc
inc
push
or
dec
daa
pusha
pop
jno
fistl
sahf
add
fldl
stos
pop
or
push
pop
push
dec
fs
jno
inc
cmp
jbe
loopne
arpl
out
xor
cmp
or
lret
add
lock
jmp
test
dec
lret
jo
mov
sub
dec
cmpsb
mov
push
outsl
mov
sub
push
pop
gs
lds
xchg
insb
adc
or
cmp
cmpl
mov
mov
fs
fs
cmpsl
adc
test
dec
mov
ret
mov
cmpsl
rclb
adc
xchg
in
lods
mov
mov
pop
in
les
jno
push
jmp
leave
mov
lods
pop
adc
flds
add
push
lods
mov
pop
jmp
or
xor
mov
sbb
es
and
lahf
add
mov
add
sbb
push
sbb
push
mov
nop
and
lea
adc
adc
stc
dec
cmp
sbb
cmp
fcomip
ja
dec
adc
std
cli
fisubrs
lea
test
aaa
mov
shl
loop
mov
sahf
sahf
je
pushf
mov
or
scas
ja
mov
btcl
in
push
xchg
stc
inc
dec
push
jge
jmp
imul
into
das
cli
jle
xchg
adc
movl
lret
and
mov
and
push
lock
addr16
push
cmp
filds
push
bound
in
adc
pushf
xchg
sbb
inc
out
cld
pop
movsl
sarb
insl
negl
inc
add
outsb
pushf
in
xchg
mov
imul
pop
fadd
dec
or
ret
leave
jge
mov
jns
iret
xchg
jae
les
loopne
call
push
movsl
cld
roll
cmpb
mov
in
sti
in
test
test
icebp
cmp
push
jg
lods
imul
movsb
cmpsl
popf
mov
push
popa
add
inc
pusha
test
xor
push
pop
decb
sub
fisttpll
repnz
mov
arpl
add
shlb
or
jle
push
mov
jb
call
clc
ret
cmpb
jne
jmp
mov
fildl
sbb
popl
out
inc
rcr
out
aaa
adc
enter
fsubp
xor
sbb
aad
scas
mov
xchg
jo
mov
daa
cmp
fidivs
dec
jp
cmpl
dec
pop
fld
les
mov
test
mov
lods
push
cmc
outsl
fisubs
pop
pop
or
lock
sub
or
sbbl
jnp
inc
adc
and
arpl
xor
pop
inc
mov
pop
mov
sbb
sub
lahf
mov
cmpsl
mov
cld
cwtl
mov
sub
rcr
sub
push
repnz
aad
loop
cmp
inc
loope
fmuls
fwait
jo
xor
rcll
mov
std
fwait
movsl
jge
ret
mov
add
and
jnp
icebp
mov
testl
leave
and
mov
or
arpl
and
push
sbb
and
dec
cmpsb
inc
xor
xchg
imul
mov
dec
inc
jge
pushf
push
jg
or
or
inc
mov
mov
and
push
dec
dec
stos
out
cmp
roll
insl
sbb
dec
into
mov
lock
pop
dec
inc
xor
mov
or
popa
jle
jmp
in
xor
pushf
cmp
push
insb
push
aam
mov
xchg
cmc
lea
push
jg
push
aad
dec
sahf
or
fcoms
fsubs
sar
cmpsb
xchg
and
inc
fldcw
inc
and
lret
mov
in
or
pop
je
fcoml
test
sub
lock
jl
movsl
adc
adc
jp
shl
dec
les
out
enter
or
mov
mov
jnp
cli
ja
inc
push
clc
or
sub
test
jo
or
popf
iret
daa
add
jno
xor
and
scas
sub
addb
popf
int
pusha
cld
mov
sar
ljmp
in
cltd
cmp
and
mov
stos
sahf
pop
sbb
jne
frstor
scas
sub
js
fnstsw
out
ret
pop
mov
push
adc
in
inc
in
inc
xchg
arpl
daa
mov
jl
xchg
push
cmpsl
cmp
pop
jg
loope
ljmp
insl
addr16
imul
xor
push
dec
mov
add
sub
and
ds
dec
inc
mov
xchg
mov
xchg
leave
and
mov
cmp
sarb
xchg
stos
sub
pushf
ror
enter
or
sbb
fs
xor
inc
call
pushf
push
in
pop
mov
xchg
data16
sub
sahf
shrb
dec
arpl
adc
adc
mov
cmpsl
sub
sub
jg
add
mov
cwtl
or
negb
jp
test
jns
add
xor
icebp
xor
sub
fiaddl
pop
cld
sbbb
ja
sub
incl
push
cmc
sub
ret
ss
mov
mov
cmpsl
mov
jno
xchg
sub
xchg
mov
addr16
insb
or
add
int3
mov
or
leave
pop
lods
dec
icebp
xchg
cmp
call
outsl
shll
das
push
mov
imul
mov
adc
subl
mov
nop
testb
fwait
loop
or
clc
cwtl
iret
cmp
shlb
das
xchg
dec
add
inc
mov
lods
or
cs
cmpsl
sub
leave
icebp
loope
sub
pop
and
aas
ds
inc
xor
jge
dec
pop
ds
push
sbb
xor
out
ret
adc
xchg
insb
mov
ja
in
mov
pop
enter
stos
mov
sub
ds
loope
insl
push
sbb
stos
insb
aas
jns
in
pop
popa
inc
adc
mov
lcall
call
or
mov
repz
cld
loopne
xchg
dec
rcl
dec
imul
stc
addb
test
sub
cmp
cmp
mov
xchg
test
imul
sti
mov
nop
add
jp
arpl
mov
sbb
bound
cmc
dec
mov
add
bswap
addr16
out
xchg
sbb
outsl
pusha
push
pop
std
jle
jmp
or
cmp
aas
pop
cmp
inc
inc
push
insl
adc
cmp
add
dec
out
push
and
cmp
sub
xchg
mov
dec
inc
xchg
pop
push
ds
rol
adc
dec
mov
or
mov
imul
test
mov
in
xor
pop
or
dec
pop
les
daa
dec
adc
or
andb
stc
pop
pop
add
sbb
sbb
xchg
das
pusha
scas
and
leave
mov
cli
lods
sub
rorb
fdivrl
jbe
mov
scas
fidivrl
or
dec
clc
in
push
cmp
cwtl
imul
jbe
cmp
out
std
and
in
mov
cmpl
dec
and
seta
or
enter
push
sub
loope
sbb
pop
outsl
arpl
stos
xchg
and
mov
xchg
xchg
clc
inc
or
lahf
add
inc
sub
lea
js
cltd
jmp
dec
stc
jae
testb
pop
jecxz
jmp
fwait
inc
loope
imul
sub
decl
xor
mov
mov
push
sbb
in
sahf
or
pop
cli
out
imul
mov
and
clc
sbb
pop
lea
subl
sbb
aaa
dec
int3
aam
or
push
iret
adc
xchg
sbb
and
out
insb
mov
std
cmc
movsb
jle
fimuls
inc
pop
mov
fimuls
ds
dec
rcrl
dec
loope
inc
inc
rclb
outsl
lods
jg
mov
add
lcall
adc
push
mov
test
jo
xlat
inc
aas
dec
inc
repz
and
jne
cmpsl
paddsb
sub
or
and
aad
jg
xlat
aaa
adc
mov
scas
cmp
arpl
mov
jae
add
cld
into
jp
movsb
push
mov
addl
xor
fdivrl
jbe
inc
inc
hlt
push
mov
add
outsb
mov
push
rcll
fwait
arpl
out
push
and
fisttpl
outsl
in
xchg
xor
sub
sub
fiaddl
enter
or
cmp
imul
xor
sbbb
orl
rcrb
dec
leave
jnp
jbe
negb
and
xchg
sbb
test
fidivl
mov
cmc
lea
inc
gs
insl
fmul
mov
sub
js
dec
ja
subb
cmp
iret
pop
cmp
ss
inc
sbbl
sbb
popf
mov
test
inc
mov
jl
mov
jnp
mov
or
aam
lahf
fmull
jmp
sub
pop
mov
inc
push
pop
dec
push
inc
push
dec
mov
pop
cmpsl
mov
mov
test
mov
jp
aas
imul
lea
loopne
xchg
lahf
sub
pop
fcomi
push
outsl
adc
gs
xchg
sbb
aas
aam
cmp
fidivrs
mov
dec
mov
mov
mov
out
and
xor
ja
rcrb
or
mov
test
in
nop
test
sub
dec
lods
stos
mov
xor
into
and
test
andl
pop
add
dec
inc
in
daa
loopne
test
leave
sub
ss
je
inc
mov
icebp
pop
bound
inc
push
dec
out
lds
popf
fiaddl
push
push
jb
cmp
es
push
test
ss
cltd
sbb
add
es
fdivl
andb
pinsrw
test
mov
sub
fmull
aam
pop
dec
imul
or
int
inc
cmp
adc
cmp
add
jne
dec
in
xchg
test
gs
pop
rolb
in
rcr
jp
fsts
xorb
sbb
popa
pop
fs
jns
sbb
addr16
sub
fildll
dec
lcall
adc
sbb
or
repnz
xor
xlat
loope
in
push
rcrl
inc
mov
pop
pop
cwtl
and
mov
sarl
fisttpl
jmp
adc
pop
or
jmp
clc
cmp
xorb
xor
sub
pop
mov
leave
mov
push
icebp
pop
mov
mov
psllw
insb
into
pop
mov
sub
jle
push
scas
xorl
or
jp
and
aaa
inc
jae
ret
imul
jmp
mov
aaa
or
stos
mov
xchg
test
and
fstps
or
inc
daa
lcall
cld
push
popf
cmp
lods
out
rcrb
lock
in
ret
xchg
push
jb
or
sub
pop
add
insb
mov
cltd
mov
mov
in
ljmp
push
in
pusha
out
aaa
inc
xchg
mov
push
aas
jmp
jle
cwtl
jnp
imul
sbb
data16
imul
ret
lret
test
iret
cmp
mov
jae
sbb
jo
push
and
leave
jae
cmp
les
mov
aaa
mov
and
and
aaa
push
dec
sahf
and
xchg
imul
lcall
mov
lret
or
sub
aam
imul
mov
cmp
inc
insl
call
xchg
insl
sub
cld
out
cmp
outsb
or
mov
stos
iret
out
clc
or
xchg
jns
test
popf
es
mov
and
fidivrl
das
rolb
testb
push
xchg
mov
xchg
cli
jns
test
push
dec
mov
push
xchg
out
movsb
ljmp
cmp
bound
push
lret
push
mov
pop
and
or
ftst
jp
jbe
cmpsl
mov
push
test
push
jmp
out
push
pop
adc
fwait
loope
int3
dec
sub
loope
xor
lock
cmp
loope
adc
fs
mov
sub
jo
scas
mov
jl
push
cmc
inc
mov
insb
fwait
and
mov
and
cmp
inc
call
mov
pop
bound
adc
sti
fisttpll
or
jmp
add
popa
ljmp
pop
lea
in
mov
or
call
mov
les
lods
sub
stos
mov
adc
rolb
std
icebp
push
cmp
es
push
into
in
das
xor
int
jbe
subl
sub
idivb
cmp
pop
ljmp
jecxz
or
mov
sub
test
xlat
in
jbe
pop
fdivr
or
sbb
in
cld
xchg
ljmp
fldcw
insb
or
loop
in
sbb
ljmp
cwtl
negl
jmp
jmp
jnp
jp
shll
cmpsl
enter
leave
cmp
out
mov
or
xor
icebp
adc
jo
dec
fisubrs
lods
mov
sbb
or
sbb
dec
sahf
mov
mov
dec
jbe
mov
ret
mov
sbb
dec
imul
outsb
std
pop
fbld
hlt
gs
or
out
cmp
fstps
fstps
test
arpl
fstps
jb
jb
pop
int3
shlb
data16
mov
lahf
pop
in
push
bound
add
pop
add
nop
roll
jge
daa
nop
movlhps
pushf
fistpll
cwtl
into
push
xlat
popl
out
xor
lea
lahf
ret
lcall
daa
addb
dec
jg
enter
test
test
leave
sub
sub
dec
lahf
and
mov
cld
mov
pop
scas
inc
push
sbb
xor
and
shll
dec
push
ret
loop
mov
xchg
aas
jmp
enter
xchg
fst
lods
ljmp
mov
into
data16
sub
mov
mov
shl
lock
aaa
and
scas
pop
mov
and
js
jg
xor
xor
and
sub
mov
sbb
pop
push
jle
notl
adc
mov
and
jg
mov
jo
in
xchg
xlat
insl
fldt
outsb
sbb
sub
movsl
lods
mov
sarl
jge
das
jnp
cmp
sbb
into
decl
icebp
sub
in
dec
add
mov
jnp
cwtl
adc
pusha
pop
and
pop
inc
push
lret
stc
cmp
xlat
and
cs
xchg
addr16
cmp
shrl
mov
xchg
insl
cmp
push
insb
xchg
cltd
aas
mov
xor
pop
call
insb
mov
insl
push
repz
sti
mov
xchg
dec
out
jno
add
mov
sbb
mov
add
mov
popa
loopne
pop
mov
push
xchg
in
in
pop
movsb
sbb
subb
stc
ja
loop
push
clc
pop
mov
aaa
inc
leave
jno
movsl
and
aam
sbb
cld
bound
jns
fbstp
test
cmp
out
jmp
jbe
cmp
push
cmp
das
das
pop
es
xor
in
sbb
lret
leave
addr16
into
mov
add
cmp
cmp
or
sub
stos
rcrl
lret
daa
mov
cs
js
sub
push
mov
in
sbb
pop
push
adc
sbb
inc
add
imul
movsb
cmp
pop
adc
inc
hlt
stc
jg
sub
pop
dec
lock
int
mov
push
jnp
push
add
lcall
pushf
xchg
test
xchg
es
or
pop
cmp
jg
mov
jge
cmp
mov
out
mov
mov
out
daa
cmp
xor
js
sbb
jle
scas
lock
bound
in
xlat
icebp
jmp
lahf
lock
adc
push
adc
sub
icebp
adcb
insl
stos
mov
cmp
xor
leave
aaa
add
popf
lods
pushf
cmp
dec
mov
mov
stos
dec
dec
xchg
lods
inc
in
sbb
idivl
mov
mov
push
sahf
lcall
rcrl
stc
lock
cmp
xchg
mov
adc
cmp
sbb
je
movsl
cmp
sti
sub
cmp
mov
inc
sbb
das
dec
pop
lahf
idivl
jp
push
and
cmp
sti
pop
mov
mov
sub
jb
movsb
dec
mov
jecxz
fnstsw
fdivrs
mov
out
sbb
sbb
int3
push
ja
pop
daa
roll
jno
xor
movsl
inc
pop
mov
loop
jmp
sbb
movsb
xor
divb
shlb
ficoms
mov
pop
mov
arpl
lods
jg
je
sub
in
fsub
pmaddwd
or
cwtl
mov
enter
mov
or
pusha
sarb
mov
mov
js
xor
andl
test
mov
xor
cli
push
imul
mov
lret
add
int3
popf
inc
lret
aas
fnstsw
aam
xor
jg
pop
mov
push
mov
add
lcall
test
and
push
test
add
sbb
aad
lldt
das
repnz
sub
pop
aas
sti
cld
cmp
popa
divb
cltd
jmp
push
leave
cmp
sub
sub
divl
mov
jbe
mov
sub
mov
or
push
jge
or
sub
out
ret
adc
mov
push
mov
fwait
cmp
push
mov
cmc
xchg
scas
and
in
jp
push
push
or
into
imul
inc
es
mov
lcall
daa
pop
and
pop
add
cmp
and
xchg
nop
adc
mov
lahf
testl
or
jg
and
outsb
sub
mov
jp
adc
lods
icebp
xor
jmp
mov
push
loopne
mov
xchg
sbb
imul
inc
stos
or
cmp
loope
push
sbb
fimull
or
bound
xor
sub
jle
enter
and
faddl
fwait
rorb
jns
sub
lahf
push
hlt
and
inc
pop
xchg
movsb
fmuls
lcall
into
imul
mov
inc
mov
pusha
jno
nop
sub
push
pop
and
push
pop
xchg
lock
xchg
push
test
xchg
cmp
cwtl
popf
aad
xor
sarb
hlt
dec
or
in
dec
pushf
push
pop
pop
push
push
push
mov
test
lret
rcl
ds
adc
pop
cmp
mov
add
add
inc
push
in
adc
push
or
pop
dec
cmpsl
ficoml
aaa
lods
mov
push
sbb
cmpsb
aaa
lods
out
rcr
outsl
xchg
out
int
ds
sub
jle
sahf
lahf
cs
xor
sbb
add
push
mov
in
pop
xlat
imul
jge
push
push
sbb
rol
lock
inc
sbb
clc
mov
leave
add
inc
and
mov
rolb
out
cs
mov
cmp
push
inc
subb
repnz
add
testb
xchg
inc
xor
or
mov
xchg
test
loop
out
in
hlt
mov
out
push
inc
lretw
xor
ljmp
and
cli
mov
or
in
std
lea
test
or
mov
test
push
lods
outsl
mov
fwait
xor
pop
adc
ja
stos
test
pop
repnz
xchg
xchg
adc
rorl
jmp
jo
pop
jl
mov
or
lock
mov
pop
and
push
xchg
lahf
in
cmp
mov
xchg
out
imul
dec
push
js
vmwrite
imul
push
mov
push
dec
sti
outsl
pop
lret
into
dec
leave
xchg
fstps
add
mov
movsl
test
jb
inc
faddl
xchg
or
adc
test
mov
cltd
je
mov
pop
addl
bnd
test
mov
outsb
stc
dec
arpl
cmp
mov
inc
jbe
xchg
leave
xor
xor
aam
sub
mulb
popa
mov
test
push
push
adc
sete
sbb
lahf
lea
push
cmp
pop
addr16
dec
sbb
aaa
incl
sbb
dec
movsb
cmp
cmp
sbb
into
push
sti
into
ss
fldl
jge
jecxz
xchg
mov
and
in
out
jp
inc
testb
js
leave
insb
dec
pop
xchg
in
fs
int
mov
jle
hlt
iret
push
rcrb
fidivs
mov
cli
mov
test
dec
std
sarl
sub
inc
mov
sub
ja
test
sub
mov
outsl
out
insb
xchg
mov
enter
xor
pop
inc
and
ss
fs
pop
loop
mov
insl
push
sbb
outsl
fldenv
jge
push
dec
cli
push
in
jnp
popa
mov
xchg
out
gs
xor
mov
stos
xchg
adc
stos
push
jns
fcmovb
mov
mov
jp
jb
es
loop
lock
and
test
sbb
dec
pop
ficoml
xchg
mov
movsl
mov
dec
jo
fisttpl
jae
repz
push
mov
sbb
push
xchg
shrb
dec
jb
cld
lds
mov
dec
cmp
insl
aad
push
pop
fldenv
mov
frstor
mov
fistpll
btr
fdiv
aaa
ss
loopne
pop
test
scas
pushf
in
jo
push
lds
int
loop
fs
inc
fisubs
fs
dec
jo
mov
sub
lock
arpl
inc
lods
sub
push
clc
cmpsl
mov
scas
cmpb
stc
sarb
add
cld
es
std
inc
sbb
adc
jae
push
xchg
cmp
pop
mov
fimull
aad
pop
shll
xor
push
call
ret
lcall
sbbl
pop
push
sbb
rol
test
jp
dec
lcall
adc
jns
cmp
cmpsb
hlt
sti
jmp
sbb
mov
cmp
push
inc
jl
fsub
push
scas
stos
ret
pop
cmpsb
mov
inc
dec
add
aam
in
adc
fs
lds
and
loope
cld
jge
mov
dec
adc
mov
xchg
lea
lcall
inc
xlat
mov
push
in
xchg
lahf
jmp
xchg
mov
xchg
push
outsb
xchg
or
push
and
push
add
cs
and
lcall
mov
decl
sbb
ret
fs
aad
sbb
loopnew
adc
in
cmp
fiaddl
lods
adc
outsl
test
in
mov
js
gs
cmp
dec
xor
scas
pop
push
imul
movsl
and
jb
lds
fimuls
mov
bsf
and
dec
out
outsl
push
cmp
pushf
cmp
mov
lret
lahf
xor
xlat
stos
xchg
cmp
sbb
inc
cld
jmp
popa
mov
sahf
pop
leave
mov
lds
pop
dec
pop
mov
lret
mov
jge
movsl
gs
and
repnz
in
nop
stc
and
jge
in
adc
aad
and
adc
cmp
fs
cmc
mov
sbb
std
inc
pusha
lock
mov
fcoml
jmp
jle
cmpsl
movsl
xor
or
jl
and
jbe
rorb
sbb
fstl
stos
mov
mov
push
addr16
inc
lahf
lahf
cmp
jl
or
or
push
or
js
loope
inc
fidivrs
cmp
xchg
push
pop
imul
xor
jbe
jl
js
imul
adc
daa
adc
ljmp
mov
adc
cltd
dec
xchg
xor
adc
mov
mov
cli
pop
fnstcw
rol
lock
ljmp
and
inc
loope
iret
xchg
scas
xlat
mov
mov
inc
cmp
jne
test
mov
lret
inc
in
popa
shlb
inc
jno
ret
jp,pn
mov
movsl
sbb
loope
cwtl
pop
dec
shrl
in
hlt
test
cmpsl
loop
lcall
push
roll
add
data16
dec
lea
add
lea
sub
ljmp
aam
dec
test
xchg
adc
jge
inc
fwait
subl
xchg
jne
adc
add
repz
int
sahf
mov
mov
test
add
call
sbb
lret
jae
in
adc
lret
cmp
xchg
jge
insb
outsb
rcrb
inc
inc
mov
movsl
xor
pop
subb
dec
std
push
jbe
xor
mov
out
sbb
mov
ljmp
jo
xchg
xor
sbb
cmp
sub
xchg
mov
imul
daa
jge
inc
adc
and
push
mov
push
adc
adc
idiv
stos
mov
je
lahf
lret
pop
fistpl
push
xor
sub
stos
test
or
hlt
hlt
mov
cmp
or
filds
sahf
sbbl
cmp
jbe
xor
fisubrs
and
jp
mov
push
in
arpl
sub
int
add
std
mov
adc
sti
leave
xlat
jg
cmpl
sbb
aam
pushf
ds
xchg
jno
cmc
pusha
adc
push
xchg
inc
jo
adc
inc
cmpsl
cmpsb
cld
repnz
lods
add
jmp
aad
mov
mov
repz
in
insb
pop
bound
data16
adc
test
lret
cmp
push
mov
dec
mov
jp
xchg
faddl
fwait
jne
and
insl
xor
inc
jg
dec
dec
add
call
ljmp
gs
fisttpll
xor
aas
rep
rcrb
dec
pop
mov
rorl
int
fimull
adc
aaa
fadds
into
insb
lds
sbb
push
push
add
lret
sub
btr
lea
iret
inc
hlt
mov
dec
mov
add
enter
fnsave
in
add
scas
mov
xor
loopne
test
mov
xor
push
in
mov
dec
pusha
dec
or
mov
mov
int
outsb
pop
pop
ja
or
fistpll
xorl
and
in
push
mov
aad
popf
pusha
and
loop
lods
xor
arpl
loop
into
jns
lcall
sub
pop
sbb
cmc
mov
mov
stos
hlt
push
std
daa
ja
adc
sarb
mov
jg
mov
cltd
dec
pop
das
add
adcl
or
mov
testl
popf
cmp
popa
cmp
sbb
cmp
shll
les
shll
adc
xchg
or
jp
stos
fisttpl
ljmp
std
sub
jns
add
cld
inc
lock
and
sti
cld
out
sti
adc
ljmp
insb
push
mov
cmpsl
add
stos
popf
jae
lock
pop
xlat
mov
scas
lret
inc
out
and
push
pop
jne
inc
jp
insb
xor
adc
mov
xchg
dec
jno
sub
jmp
sub
out
aas
mov
clc
mov
xor
cmp
pop
sbbb
xchg
neg
sbbl
cwtl
daa
jp
popa
out
mov
jno
dec
mov
mov
sub
bound
stos
or
arpl
xchg
jge
pop
sbb
mov
test
push
data16
dec
repnz
jns
and
out
aad
push
lods
dec
lods
lds
sbb
and
mov
repnz
xlat
test
js
outsl
mov
lret
ffree
adc
add
mov
pop
inc
mov
shrb
mov
mov
push
lahf
pop
jl
lds
sub
sbb
insl
mov
inc
aas
mov
mov
push
xchg
mov
in
adc
jno
inc
aam
and
mov
js
in
bound
gs
inc
lds
jg
imul
flds
push
shrb
ret
pusha
cmpsb
xchg
xor
sbb
xor
mov
enter
lods
hlt
mov
pusha
popf
mov
jge
dec
data16
mov
pop
pop
xchg
sbb
fs
std
inc
jo
mov
push
sti
roll
push
out
sub
push
cmpsl
cmp
mov
daa
pop
out
aad
inc
and
xorl
hlt
add
jo
xchg
dec
push
int
mov
mov
push
aad
inc
popa
das
xchg
mov
adc
outsb
mov
movsl
add
leave
jnp
ret
roll
fildl
mov
cmp
shr
dec
pushf
cmp
shlb
push
dec
fisttpll
mov
into
jle
orl
test
loop
jecxz
xchg
pop
dec
call
and
dec
mov
dec
rcll
test
sbb
xchg
cmp
arpl
stos
cmp
lods
push
mov
sbb
jg
ret
stos
stos
enter
dec
ret
push
or
fcos
sbb
mov
stos
imul
cli
xchg
adc
jne
dec
sbb
mov
pop
cmp
sti
dec
push
int3
mov
in
jge
fisubs
cs
pop
jl
fnop
in
or
push
data16
mov
loope
xlat
cmpsl
call
loop
xchg
xchg
sbb
arpl
in
hlt
inc
adc
fistpl
sahf
mov
jne
je,pt
and
les
pop
jae
aaa
data16
sti
shr
inc
leave
out
xchg
cmp
out
mov
xor
jge
fwait
loop
les
ss
rolb
fisttpll
push
pop
push
ds
mov
lods
adc
repnz
jae
frstor
movsl
imul
cmp
inc
xchg
std
pop
cwtl
jle
mov
sbb
movsl
rol
mov
cli
lds
and
out
andb
mov
pop
push
aad
pusha
repnz
lahf
in
andl
dec
pop
in
fsub
cmp
bound
mov
and
aad
jg
cmp
inc
pusha
add
xor
mov
push
xor
iret
inc
push
cs
stos
in
pop
jo
arpl
xchg
push
push
push
subl
push
or
xor
enter
aad
mov
push
loopne
xchg
mov
shll
andb
push
xlat
outsb
xorb
jle
stos
stos
shll
xchg
mov
cmp
xchg
xor
repz
rcrb
add
mov
pop
shrb
int
cmpsl
cmpsb
lcall
aaa
inc
repz
clc
jb
xchg
sbb
andb
sbb
inc
notb
push
mov
add
pusha
and
jle
addr16
or
roll
sub
pop
movsb
out
cmc
incl
inc
and
pop
arpl
push
stos
out
ret
out
cmp
adcb
push
fs
mov
call
sub
je
lods
xor
jbe
test
mov
not
cmpsb
jge
inc
jecxz
and
test
pop
movsb
push
mov
xor
dec
inc
mov
jae
xchg
in
push
inc
ja
dec
dec
lahf
test
cli
dec
pop
faddl
clc
es
loope
push
sbb
and
test
cmp
mov
and
ret
pushf
movsb
ret
popa
xchg
iret
test
arpl
dec
push
dec
lahf
push
sub
sub
stos
and
jae
sahf
fistl
sub
repnz
jnp
push
xchg
ja
cmpsb
insl
cmp
push
fwait
out
das
loope
push
pop
cmpsb
pop
mov
push
xchg
adc
daa
test
in
mov
iret
ja
fisttpl
repz
inc
cvtps2pd
mov
cwtl
xchg
and
sbb
dec
ds
jo
sub
in
adc
adcl
lea
xchg
xor
rcrb
lods
jns
mov
stc
flds
cmpsl
xchg
imul
in
imull
push
cmpsb
in
ja
mov
fmul
inc
push
and
ja
jb
cmp
jl
adc
addr16
add
sub
dec
sarl
inc
xchg
aam
out
pop
inc
push
lds
frstor
out
out
jmp
jae
cmc
rcr
cwtl
in
sbb
dec
aaa
inc
sub
sahf
mov
les
pusha
mov
lcall
sbb
lret
pusha
adc
aas
sbb
int3
mov
dec
rorl
mov
int
xor
jns
inc
dec
mov
inc
dec
jno
js
cmpsl
push
add
notl
decl
imul
test
les
push
stc
dec
das
push
mov
out
dec
gs
and
in
int
jnp
es
repnz
mov
dec
test
sub
xchg
scas
repz
jl
xor
mov
iret
jmp
inc
xchg
pop
inc
xor
bound
test
xchg
pop
lcall
dec
scas
ret
loop
cmp
push
rorb
push
xchg
fdivs
inc
jp
dec
xlat
stos
aad
js
out
jbe
or
sbb
ret
int3
mov
xchg
sbb
and
flds
xchg
jmp
xor
inc
push
fdecstp
aad
jge
pop
xchg
fistl
pusha
sbb
lods
cmp
sub
lods
aas
insb
stos
aad
stc
xor
dec
mov
imul
xchg
or
inc
pop
push
ja
es
push
arpl
icebp
dec
aas
gs
inc
mov
sbb
xchg
out
cmpsb
pop
sub
push
xchg
in
push
mov
sub
and
or
pop
inc
and
and
sbb
jb
jno
and
js
or
enter
mov
mov
les
in
inc
test
push
inc
loope
repnz
rcll
inc
inc
imul
out
push
fs
mov
add
inc
faddl
les
dec
xor
or
jp
lahf
repz
sbb
add
ss
mov
mov
mov
sub
jne
sti
outsb
sub
jno
add
adc
pop
sbb
andl
pop
lret
mov
xchg
ret
pop
sub
xchg
jbe
mov
inc
addr16
loope
insb
leave
out
dec
out
and
mov
popf
hlt
into
xorl
mov
inc
jo
dec
rclb
pusha
fists
mov
jns
aaa
inc
scas
push
imul
nop
pop
lcall
aad
dec
gs
mov
jne
jne
shr
je
cmp
lret
xor
mov
cmp
gs
cmpsb
mov
pop
sub
sbb
pop
clc
xor
mov
xchg
dec
and
adc
jo
push
icebp
push
mov
push
cli
bound
mov
cmp
dec
orl
sbb
dec
xor
sub
push
in
mov
pop
cmp
push
sbb
out
ret
xchg
cli
es
les
mov
adc
xchg
lcall
fwait
push
shll
add
sbb
push
popf
jge
mov
jae
sbb
in
shlb
movsl
lret
dec
fistps
xor
inc
rcll
aad
loopne
fiaddl
test
je
cmc
scas
xchg
or
push
in
sbb
mov
mov
popf
or
imul
mov
xchg
outsb
jo
fisubrs
push
jp
or
dec
ret
sub
mov
pushf
mov
jmp
shll
lods
test
stos
push
mov
std
sbb
add
fsubs
or
mov
cmp
lret
inc
ss
stos
negb
cmpsl
jnp
mov
sbb
push
mov
sbb
cmp
dec
ljmp
adc
add
mov
stos
les
fs
inc
pusha
adc
out
inc
shl
pop
mov
jmp
jge
imul
inc
out
mov
xor
and
loop
popa
dec
sbb
sub
dec
jp
movsl
xorps
cmp
je
test
jecxz
and
in
dec
in
sarl
or
into
push
push
lock
movsb
cld
inc
outsl
enter
into
mov
ds
push
lret
cmp
mov
clc
rclb
jp
addr16
mov
and
test
in
enter
dec
sti
or
push
push
xchg
sub
xor
sbb
sarb
or
test
adc
lock
add
xor
pop
mov
in
ror
mov
push
xchg
jb
out
pop
mov
cmp
inc
cs
xchg
pop
adc
aas
xor
xor
fdivl
pop
faddl
or
jbe
dec
pop
pop
or
je
clc
xchg
lret
repz
das
fs
out
fwait
inc
popf
mov
xchg
out
mov
sub
mov
cmp
and
pop
fdivrs
push
adc
pop
xor
scas
lahf
rcll
iret
loope
loop
mov
push
sbb
mov
jge
xlat
stos
lods
fisttpl
lahf
stc
xchg
outsb
test
mov
push
cltd
dec
mov
int3
pop
int
sub
jne
lds
ficompl
out
ds
sbb
and
inc
pusha
out
or
adc
pushf
or
test
cs
mov
push
jmp
pop
orb
les
rclb
daa
enter
pop
call
sti
mov
or
mov
aas
outsb
mov
adc
cs
call
ret
inc
jmp
mov
test
lds
iret
dec
stc
xchg
cmpsl
push
call
mov
clc
cmpsl
and
aas
mov
std
or
rol
mov
mov
jle
mov
inc
and
repnz
sbb
pop
ret
xchg
push
rsm
xchg
xchg
sbb
mov
inc
adc
fucomip
jp
jno
scas
push
lds
aam
push
jg
jne
cmp
pop
mov
cli
dec
loopne
ja
jle
cli
dec
cmp
inc
and
xor
cmpb
pop
mov
inc
fdivl
cwtl
jmp
lds
xor
in
into
sbb
lock
mov
adc
cld
popf
in
aas
push
push
mov
in
xor
or
adc
test
rorl
xchg
add
movsl
fcomip
out
les
push
push
lds
and
adc
and
cltd
inc
cmpsb
pop
jno
dec
fsubl
ret
popa
movsb
adc
mov
cmp
jmp
sub
mov
cmp
nop
sbb
test
cmp
outsl
push
pusha
icebp
outsl
inc
inc
mov
test
repz
xor
pusha
jmp
test
std
les
and
fs
ljmp
jle
icebp
cli
outsl
rorl
sbb
ljmp
pushf
pop
mov
orb
scas
leave
push
cmp
cli
pop
movsl
jp
push
and
pushl
jno
sub
cmp
cs
subl
dec
divb
jg
jbe
add
push
jae
stos
bound
add
cmp
adcb
cwtl
sbb
sub
pop
push
daa
pushf
and
add
mov
push
xor
push
js
popf
jg
int
ret
cwtl
adc
fldl
sub
dec
and
mov
mov
into
dec
push
adc
jecxz
dec
mov
shl
scas
fstp
lcall
xchg
inc
push
mov
sbb
dec
in
lods
inc
test
xor
xor
adc
mov
ljmp
mov
js
incl
fidivrs
xor
movsl
push
divl
mov
add
mov
clc
pop
dec
fmull
aad
sub
sarl
xchg
in
daa
daa
les
daa
ljmp
jecxz
cmp
dec
shl
cwtl
mov
bound
adc
das
push
push
xchg
call
dec
es
repz
pop
jecxz
movsl
xchg
and
stos
adc
mov
mov
pop
sahf
fisubs
cmp
jnp
mov
add
lret
and
cmpsl
dec
imul
int
push
push
lahf
jae
in
dec
mov
cmp
negl
clc
popa
push
or
cmp
sub
mov
jne
fcomi
xchg
out
xor
div
psubq
pop
shrl
push
mov
xchg
xlat
aam
lods
add
adc
add
out
mov
insb
adc
ret
or
out
cmc
mov
icebp
xchg
push
mov
sbb
push
and
or
js
je
dec
imul
jmp
ret
fimull
emms
adc
jo
xor
xor
jne
pushf
inc
fcoms
jge
xchg
fadds
fsubp
xchg
pop
pop
sarb
pop
mov
push
inc
lds
mov
xchg
push
xlat
add
or
inc
incl
xor
pop
jle
xor
loope
and
loopne
sub
push
aam
pop
mov
in
xor
in
lods
mov
push
les
or
push
jo
pop
in
dec
decl
retw
fstps
out
jl
in
sub
inc
or
cwtl
outsl
pop
dec
push
cmp
xchg
sub
fdiv
in
inc
add
mov
repz
adc
out
inc
lds
leave
sbb
push
mov
cmp
stc
in
out
xor
mov
out
sbb
pop
lahf
loope
and
shll
mov
and
mov
orl
mov
mov
xchg
lea
daa
out
aaa
xorb
pop
or
insl
sti
mov
mov
jno
sbb
xchg
cwtl
loopne
ret
jp
lods
xlat
sub
xor
jmp
fiaddl
xor
jl,pt
scas
adc
int
mov
cmpb
push
out
subb
leave
fistps
mov
scas
imul
lret
pop
xor
or
jbe
xor
fs
sahf
jmp
sub
out
pop
out
js
mov
aaa
insl
es
cld
pop
imul
js
subb
pop
rcrb
mov
pop
insb
clc
mov
fwait
in
sub
jno
cmp
enter
fs
sbb
mov
pop
imul
fiadds
jnp
aaa
jge
popa
fidivl
dec
test
sbb
cs
cld
pop
fistps
add
add
hlt
mov
sbb
into
or
pop
movsb
insl
imul
xchg
cmpsl
mov
divb
pusha
mov
ficoms
pop
in
mov
aam
movsl
mov
in
test
push
mov
fsubrl
pusha
xor
push
rolb
shll
lahf
in
sub
lds
sahf
stc
ss
cmp
mov
mov
test
or
cs
cmp
xorl
aad
push
sub
inc
sti
ret
out
push
mov
dec
loope
mov
jmp
clc
mov
mov
ret
cltd
mov
in
arpl
ret
int3
sarb
adc
out
dec
dec
fisttpl
sbb
sub
imul
out
sbb
test
mov
imul
push
adc
imul
jb
test
rcl
inc
lds
shl
insb
or
loop
in
cmc
js
cli
inc
faddl
fmull
sub
movsl
xor
mov
hlt
jmp
adc
inc
xor
push
clc
mov
pop
jbe
add
incl
mov
jns
add
or
xor
fdivs
xchg
fldcw
sbb
nop
loop
stos
jge
stos
xchg
add
add
and
in
cmpsl
test
cmp
shll
xor
jo
jmp
cld
repnz
je
mov
jo
sbb
bound
test
mov
sbb
fstpl
jp
cli
rep
repnz
shlb
lret
pop
pop
and
mov
ss
outsb
fwait
lea
jecxz
or
je
jmp
fstl
adc
imul
adc
mov
sbb
mov
and
lret
aam
outsb
leave
ffreep
mov
pop
pop
push
jle
add
outsb
dec
mov
mov
arpl
xor
scas
mov
out
hlt
and
aam
push
aad
out
sti
cmpsl
je
shrb
ret
or
mov
mov
adc
int
mov
add
push
div
sub
mov
outsl
sbb
cmp
sub
ret
push
mov
das
in
cmp
jge
gs
inc
pop
fistl
sub
call
push
mov
mov
jl
mov
push
xchg
orb
inc
rolb
jnp
jno
in
dec
xchg
xor
adc
fmull
fs
inc
repz
sbb
adc
ss
mov
out
mov
push
in
dec
adc
jae
xor
data16
fcomps
cmp
fwait
scas
pop
fdivrl
and
pushf
mov
xchg
es
push
fldt
and
cmp
cld
mov
out
les
xchg
fists
mov
test
call
lret
adc
fst
xchg
or
lret
lds
or
fdivs
aaa
outsb
fisubrl
or
fisubl
or
cmpsb
in
pop
dec
in
xchg
popf
cmc
push
es
idivb
xor
lcall
cmpsl
mov
popf
mov
push
sbb
mov
testl
cmp
in
mov
xchg
mov
cli
xor
add
jecxz
mov
jae
and
sub
and
sti
push
icebp
stc
inc
fildll
add
sbb
cs
pop
or
std
cltd
inc
push
cmpsb
hlt
or
int
push
and
adc
cmp
pop
cmp
icebp
scas
pop
pop
and
mov
je
stos
xchg
rcll
fdivr
mov
das
push
push
ficomps
fs
mov
outsb
sub
add
int
jg
add
push
xor
das
imul
rcrl
push
fnstenv
leave
jno
daa
inc
lods
call
decl
mov
loope
movsl
in
jnp
push
lcall
xor
push
sub
pop
adc
cld
mov
cmp
push
xchg
lahf
ja
movsb
test
add
jb
arpl
into
or
mov
xchg
mov
ud2
add
sbb
out
stos
mov
adc
lock
test
fwait
or
nop
mov
push
mov
push
bnd
fiaddl
rolb
iret
or
clc
inc
adc
push
ja
push
mov
ja
inc
mov
xor
xchg
out
scas
inc
mov
subl
jns
push
fidivrl
ljmp
mov
stos
idiv
xchg
out
aas
iret
sarl
aas
jl
adc
dec
inc
cmp
outsb
push
and
negl
pop
adc
arpl
and
dec
cmp
sbb
clc
lods
outsb
fisttpll
mov
jle
xchg
jo
mov
pop
jno
inc
xor
jmp
dec
lahf
and
cld
pop
cmpsb
dec
insl
mov
push
sub
xchg
jo
jne
pop
mov
out
jecxz
leave
loopne
push
mov
out
cmp
or
outsb
stc
mov
inc
add
mov
fstpl
mov
cli
sbb
sbb
xchg
enter
or
shlb
test
jbe
xchg
or
cltd
push
popa
add
stos
sub
jb
int
pop
lock
addr16
test
pop
xor
dec
cmp
push
popf
movsl
mov
xor
out
lret
call
jl
dec
xorb
jle
cwtd
pop
std
mov
mov
mov
nop
iret
add
ret
add
hlt
daa
sub
mov
in
in
xor
lods
loop
pop
and
ret
lods
push
cwtl
mov
cmp
fmull
jge
jnp
or
push
push
mov
mov
jg
pushf
cld
push
cmp
push
ret
cld
sub
insl
repz
xchg
xor
lods
sub
sahf
mov
imul
lock
adc
lea
daa
adc
mov
in
cmpsb
mov
mov
aad
jbe
adc
cmp
addr16
mov
enter
ret
jb
fdivrs
iret
xor
out
in
cmp
dec
xor
pop
movsl
fcmovne
popa
arpl
or
movsl
xor
sub
and
cmp
push
sub
outsb
pop
sarw
iret
popa
mov
mov
mov
or
test
in
inc
lea
arpl
loope
cmp
jmp
leave
add
jle
out
std
sub
mov
rolb
sub
stos
pop
ret
mov
lods
mov
scas
dec
xorb
je
clc
jg
sub
pusha
sbb
ja
dec
cmp
repnz
lods
cmp
icebp
cwtl
loop
inc
lods
shrb
in
int3
mov
rorb
push
ret
rcpps
mov
mov
adc
das
test
lret
lods
js
mov
out
mov
jmp
sub
scas
cmp
mov
pop
gs
shlb
mov
mov
add
pop
rclb
dec
adc
sbb
insb
mov
scas
addr16
adc
scas
aad
mov
in
ffree
std
xchg
adc
clc
jge
sbb
xor
daa
insb
cmp
cltd
out
scas
push
stos
xchg
mov
ror
mov
and
lret
out
cmp
jle
cltd
sti
dec
sti
enter
xchg
mov
sbb
and
adc
adc
nop
pop
jbe
mov
sbbl
and
sbb
in
sbb
test
pop
cld
into
imul
fs
mov
sarb
lds
pop
xchg
xchg
int3
dec
xor
add
ret
push
mov
dec
adc
sbb
adc
inc
jne
cmp
push
mov
adc
dec
loop
inc
mov
flds
pslld
mov
push
sti
or
or
cmp
pop
push
sbb
loopne
xor
movl
dec
xchg
add
sti
lods
push
out
xchg
call
das
dec
scas
push
cmp
pop
cmpb
loop
inc
clc
or
scas
aad
icebp
dec
sbb
imul
ret
pop
adc
and
xchg
mov
out
cwtl
dec
lret
inc
and
fisttpll
xorl
mov
fsubrl
xor
or
mov
sahf
and
mov
in
stc
cmpsl
fisubrl
dec
push
sbb
jl
sub
repnz
jns
aam
mov
mov
loop
xchg
add
mov
mov
sbb
les
and
mov
loopne
adc
mov
or
sbb
jp
jmp
sbb
and
imul
xor
jl
in
lds
sub
das
cmp
cmp
mov
or
push
cmp
dec
adc
test
jns
mov
jno
xchg
mov
xor
xchg
mov
lcall
mov
add
cmp
sbb
sti
add
mov
xchg
cmp
inc
ja
daa
in
cs
xor
sbb
dec
and
ds
into
hlt
push
xchg
out
insl
cmc
bound
mov
jno
mov
xchg
jb
mov
mov
push
in
mov
out
lret
lods
push
inc
jle
cmp
push
mov
xchg
lock
xlat
or
dec
or
sub
inc
add
repnz
in
aas
icebp
push
xor
push
pop
xor
cwtl
movsl
sub
inc
addb
sbb
push
mov
and
cli
inc
dec
pop
push
ret
imul
jbe
in
xor
out
inc
cld
imul
std
daa
int
ret
stc
fcoms
dec
test
test
sub
aam
inc
lret
lods
arpl
stos
int3
xchg
dec
or
xor
and
fisubs
jmp
xorl
imul
andl
push
dec
cmp
and
adc
into
jge
jl
jl
movsl
loopne
out
inc
dec
cld
xor
jns
dec
mov
jno
rcrb
mov
jo
ret
or
es
addr16
jg
pop
cld
mov
ss
jnp
or
dec
jb
and
adc
movsl
adc
mov
pop
and
scas
push
sbb
cmp
mov
xchg
xchg
adc
adc
in
enter
ljmp
add
mov
sti
std
or
inc
and
in
fsubp
test
mov
negl
cltd
dec
out
pop
insb
pusha
sub
push
int3
hlt
lret
in
or
fnstenv
lods
or
mov
dec
xchg
xor
ret
jmp
out
xchg
xlat
int
pop
or
xor
xor
shrb
xchg
jmp
das
stc
xchg
jp
sti
cmp
mov
jge
xor
jae
aaa
movsb
int
addr16
xchg
mov
stc
push
add
popf
mov
sti
push
mov
inc
add
xor
mov
lret
mov
jl
lock
lds
subl
and
jle
lret
cmp
and
jns
sbb
mov
xorb
data16
adc
sub
nop
lret
mov
add
lea
pop
pop
pop
out
xchg
cmp
adc
mov
or
fwait
add
leave
stos
inc
mov
add
es
aaa
lahf
dec
jae
lea
mov
xor
jle
repz
pop
and
insl
into
in
outsl
pop
imul
xor
test
cltd
scas
ljmp
sub
sbb
push
dec
fwait
lret
lret
iret
cmovns
fsubrs
imul
ret
outsl
inc
and
negb
into
mov
lods
shr
adcb
ljmp
fwait
pop
aas
dec
xor
jge
sbb
adc
ljmp
lods
add
add
orb
add
jnp
inc
adc
sti
inc
and
mulb
sub
in
push
dec
dec
lret
sub
mov
or
push
jns
fbstp
std
inc
jmp
dec
popa
icebp
and
jmp
movsb
dec
imul
push
scas
nop
lahf
aaa
push
dec
xchg
pop
xchg
mov
push
mov
cmp
cmp
cld
popf
cli
lret
xchg
jmp
push
stos
mov
addr16
fists
dec
mov
gs
popa
adc
pop
xor
push
pop
or
out
lods
fldl
push
jmp
shll
sbb
or
cmp
repz
jg
pushf
mov
arpl
adcb
sbb
or
push
in
dec
nop
or
adcb
xchg
inc
push
mov
xchg
stos
mov
dec
mov
jo
and
xor
pusha
imul
iret
mov
sbb
out
mov
scas
inc
or
insb
mov
xor
xor
xchg
jno
xlat
inc
xor
dec
jns
sub
pop
aad
mov
adc
adc
pushl
cmpsl
dec
daa
push
dec
and
cmp
sbb
jb
dec
dec
mov
add
jle
mov
dec
loopne
sbb
aam
sub
mov
cmp
iret
in
inc
fmull
jl,pn
lods
jge
cwtl
mov
negb
mov
cmp
cmpsb
xchg
dec
jmp
in
shr
jae
lret
addr16
mov
stos
mov
loop
xchg
and
or
cmp
or
jb
push
sub
repz
lods
lahf
mov
lods
cmp
pop
shl
int3
mov
inc
mov
xchg
jo
int
jae
notl
dec
pushf
mov
cmp
xchg
subb
mov
push
push
addb
imul
adc
rorl
insb
dec
fldenv
adc
gs
mov
sbb
je
cmp
xor
aad
imul
ds
pop
and
mov
ljmp
jmp
push
enter
adcl
and
fcompl
and
ret
pop
mov
test
and
sub
movsl
ret
push
adc
mov
test
fdivrs
repz
mov
mov
data16
xor
or
xor
push
ds
lea
out
add
cld
mov
mov
push
shll
mov
outsb
add
scas
ljmp
jo
mov
stos
jbe
stos
clc
xor
pushl
mov
clc
jns
imul
push
jmp
mov
mov
decb
add
mov
imul
js
cmp
ds
in
lds
imul
pop
movsl
push
and
adc
dec
fstpt
ds
push
aad
mov
mov
jbe
in
out
jg
adc
in
enter
outsb
mov
adc
pop
test
aas
rcr
imul
int
adc
push
push
cmp
push
mov
dec
mov
stos
insb
jno
pop
adc
adcb
sub
mov
inc
gs
xor
mov
xchg
xor
inc
jne
mov
cmc
jmp
mov
mov
clc
push
adc
out
adc
aad
xchg
jmp
dec
and
jo
dec
outsb
mov
mov
out
push
push
jle
mov
aam
cmp
pop
push
mov
or
loope
movsl
not
jae
out
jmp
pop
lea
stos
lods
xor
xor
and
xchg
jne
adc
xlat
movsl
ss
jecxz
mov
adc
out
enter
shr
rcr
jne
xor
push
les
cmp
adc
add
add
sub
inc
xchg
popf
dec
sbb
cltd
mov
pop
and
inc
mov
or
jl
mul
mov
mov
pop
sarb
mov
cld
sub
sarl
in
adc
inc
mov
lret
add
xchg
aad
cli
cmp
push
popa
cmp
cmp
loop
dec
in
and
hlt
pop
xor
mov
dec
or
push
dec
inc
fcmovnb
sbb
scas
call
sbb
jle
push
sahf
jp
scas
mov
enter
pushf
leave
movsb
inc
mov
fisubl
push
push
fs
popa
enter
dec
subl
pop
jo
rclb
cwtl
dec
sbb
loop
imul
or
ret
pop
xchg
scas
or
add
jp
ret
gs
jbe
movsl
push
push
call
xor
mov
inc
imul
addb
jg
sti
cmpsl
lret
mov
nop
pop
pop
cmp
xchg
stos
sbb
jb
sub
test
mov
and
clc
mov
xchg
ljmp
iret
mov
in
xor
push
push
je
xor
dec
loope
xchg
adc
pop
push
or
mov
cmp
or
outsb
cmp
push
pop
orl
std
les
jne
in
xor
fildl
out
pushf
ror
dec
aam
mov
fisubl
pop
mov
or
outsl
sti
xor
in
out
xchg
and
adc
outsb
rorl
adc
adc
push
ficomps
mov
pop
shlb
xor
mov
seto
je
pusha
fs
mov
sub
leave
sahf
and
sub
aas
rcr
jmp
inc
cld
mov
mov
sahf
inc
inc
lret
push
lods
icebp
pop
mov
fdiv
lods
aaa
mov
add
sbb
jl
shll
jecxz
sahf
lcall
out
mov
scas
push
imul
roll
push
outsl
sbb
pop
es
or
lea
adc
or
sub
scas
icebp
outsb
lret
pusha
in
out
mov
loope
mov
mov
mov
dec
adcl
mov
dec
dec
pushf
push
xlat
daa
lock
scas
push
cmp
and
add
push
jg
xor
rcl
subl
lods
adc
push
out
filds
pop
ret
push
scas
insb
int3
js
push
push
mov
loop
ljmp
cmp
lret
push
pop
cmp
iret
cmp
sub
into
fwait
cmp
js
in
popa
jg
call
add
std
cmp
int3
mov
lds
clc
or
jmp
pop
mov
neg
pop
mov
hlt
aad
hlt
mov
sub
js
pop
mov
mov
mov
adc
mov
adc
dec
or
sub
xorl
or
mov
pop
aas
mov
inc
sbb
add
adc
repz
jp
outsb
and
lock
and
fisubrs
push
xchg
dec
insl
adc
jno
pop
xor
jo
xchg
pop
cmp
scas
mov
stos
movsb
dec
inc
xor
mov
mov
pop
inc
pop
sub
push
mov
int3
aaa
sahf
push
dec
inc
test
test
stos
out
xlat
push
mov
or
xchg
insl
addr16
mov
movsl
std
sub
fsubrl
pop
incb
mov
lcall
nop
push
or
pop
dec
sbb
adc
adc
xor
insl
daa
cmp
lea
roll
scas
mov
cmp
das
test
shl
idivb
and
mov
xor
mov
lods
xor
loop
sti
fists
lcall
out
jns
fsubrl
sub
inc
fidivs
sub
push
out
stc
into
dec
xlat
lock
jecxz
outsb
dec
push
ds
mov
js
sbb
push
and
ret
mov
xchg
cs
inc
pop
sahf
dec
add
ret
in
icebp
jge
pop
pop
stos
or
insb
je
fmull
ja
insb
bound
push
jb
mov
in
clc
pop
cmp
adc
imul
sbb
sti
dec
inc
mov
mull
out
movsl
aad
cmpsb
inc
jae
popf
in
or
aas
inc
fwait
cmova
xchg
aaa
fldpi
jns
imul
popa
pusha
popa
pop
push
mov
inc
sbb
sbb
loope
xor
mov
mov
cmc
daa
jecxz
cmp
xlat
divl
ljmp
mov
scas
and
dec
lret
sub
mov
fldcw
xchg
insb
add
add
test
dec
out
arpl
lea
xlat
mov
xchg
gs
ja
into
gs
push
call
rep
into
add
cmp
xchg
js
ffreep
aas
fmuls
roll
cmp
int
cmp
adc
shll
mov
push
push
popa
adc
add
add
inc
es
and
nop
call
mov
int
andl
cmp
push
xchg
clc
mov
xchg
dec
sahf
xor
out
insl
jb
lret
push
cmpb
pop
inc
mov
cwtl
xor
fs
lret
xorl
sub
jo
cmpsl
push
je
pop
and
and
pushf
cmp
inc
fdivl
cmp
add
popf
rcrl
pop
lods
fdivl
roll
mov
fdivs
fdivrs
es
xchg
je
clc
es
addr16
mov
xchg
enter
in
pop
sbb
mov
inc
insb
inc
das
adc
or
shll
lcall
or
ss
add
cmpb
insl
cltd
dec
addr16
sbb
fsubrl
inc
mov
orl
leave
gs
mov
mov
popf
lret
into
xchg
dec
adc
ret
test
nop
enter
faddp
jl
or
push
mul
jle
hlt
sti
cld
popf
inc
cmpsl
mov
push
or
inc
adc
push
enter
or
in
mov
add
mov
pop
mov
mov
in
popa
jnp
xchg
lds
jne
jns
mov
push
data16
cmp
mov
mov
test
insb
icebp
mov
pop
push
loope
dec
cmp
cmpsb
fwait
adc
fmull
fadd
pop
aad
xor
jmp
fcmovnbe
in
idivl
pop
inc
fsubl
ljmp
les
cli
push
test
or
dec
add
ljmp
lock
mov
stos
mov
fisttpl
jnp
xor
sbb
and
fwait
shlb
cmp
outsl
add
cmpsl
push
cmp
mov
jne
mov
mov
adc
add
add
test
pop
or
mov
add
or
pusha
add
stos
int3
ss
jns
jnp
mov
jp
in
mov
cmc
xchg
loope
push
mov
test
ljmp
lods
dec
mov
cmpsb
push
push
jnp
aaa
jns
push
mov
inc
addl
incl
cmp
sub
mov
scas
loopne
add
cmp
cld
jecxz
mov
pushf
andl
mov
test
pop
stc
je
xchg
sub
jp
jp
jae
mov
add
enter
xchg
testb
into
mov
lret
mov
daa
loop
fwait
cmp
fidivl
lock
scas
pop
mov
dec
inc
je
jg
cmc
mov
xchg
adc
insl
sub
cs
xchg
fbld
mov
and
sub
sbb
cmp
mov
jp
inc
adc
mov
push
pushf
add
cmp
or
idivb
xchg
stos
insb
ret
xchg
repz
inc
enter
jae
add
clc
push
push
dec
adc
ja
out
and
gs
inc
xchg
push
mov
inc
dec
push
fs
jns
jo
jp
test
push
testl
imul
fs
pop
addr16
mov
popf
fiadds
loopne
das
or
mov
dec
push
and
mov
xlat
xor
or
aaa
cmpsb
and
xchg
test
or
push
cmp
pop
sub
add
call
mov
xchg
fimuls
ds
jnp
jno
test
pop
sbb
fstps
fwait
jmp
imul
mov
insb
xor
mov
mov
pop
arpl
mov
sbb
fsub
es
xor
outsb
clc
dec
mov
jb
mov
les
fcomps
das
mov
push
or
dec
inc
dec
jb
sbb
sbb
scas
stc
mov
insb
lcall
mov
les
push
testl
cwtl
inc
xchg
rcrl
sub
mov
outsb
push
jmp
jnp
mov
adc
mov
orl
dec
adc
sub
xchg
ds
fimuls
inc
pop
pop
inc
inc
mov
or
dec
cmpsb
push
rcr
fistpll
icebp
in
cmp
sub
cmp
push
mov
inc
mov
xchg
push
rorb
jnp
les
ret
mov
mov
movsl
add
pushf
repnz
ds
sbb
xchg
sub
movsl
sbb
inc
lret
jmp
shlb
xchg
push
and
addb
cmpsb
jae
imul
push
imulb
movsl
iret
inc
pop
xchg
in
or
mov
push
outsl
jnp
test
xchg
xchg
hlt
mov
jne
push
rorl
or
jb
pop
cmpsl
lret
ljmp
mov
xor
xor
mov
adc
xor
inc
aas
xlat
popa
xchg
hlt
pop
mov
cmpsl
iret
xlat
mov
add
adc
in
test
cs
push
inc
mov
push
insb
mov
lret
mov
adcb
gs
mov
test
and
xchg
data16
fnstcw
jnp
ds
jge
sbb
sbb
test
dec
fstp
mov
sbb
in
xor
jne
jnp
idivb
insb
fstps
xchg
cmp
int
jmp
mov
mov
add
jmp
dec
mov
jg
inc
hlt
push
sub
xchg
dec
mov
ret
jge
mov
int3
fs
jns
mov
movsl
and
adc
xor
or
fdivs
into
or
fwait
and
mov
dec
push
push
out
or
out
xor
mov
dec
xor
xor
jno
mov
aaa
pushl
mov
cmp
jmp
xchg
or
jecxz
pushl
adc
inc
cli
sbb
in
cmp
inc
loop
cmp
insb
test
test
js
pusha
mov
xchg
xchg
je,pn
push
xchg
stos
xor
das
push
daa
ret
xor
lret
ja
mov
adc
jmp
dec
sub
adc
pop
jns
les
movsl
sarb
and
loopne
xor
loope
jo
jp
mov
enter
int
out
clc
mov
out
mov
mov
inc
lahf
inc
cmpsl
adc
hlt
arpl
jbe
rcrb
adc
adc
stos
lods
sub
ret
push
cli
inc
jmp
xchg
es
sbb
jo
or
inc
cmpsb
cli
fcomi
imul
fdivrs
mov
cld
les
adc
sub
mov
dec
into
and
shr
mov
dec
fmuls
cmpsb
sub
cmpsb
xchg
mov
inc
pop
in
mov
mov
neg
adc
sbb
cli
loopne
mov
push
cmp
add
pop
or
mov
push
ds
jecxz
rcll
lret
sub
icebp
cmp
stos
and
xchg
push
push
inc
cld
fisubrl
push
mov
popf
sahf
fdivs
pop
inc
decb
jae
loopne
mov
jmp
cmp
inc
cmpb
push
adc
mov
cmpsl
push
xchg
cmp
leave
pop
je
add
pop
iret
in
js
adc
pop
lret
mov
and
lret
xchg
or
ss
lcall
lcall
xor
add
mov
mov
ljmp
in
xchg
loope
jno
push
pop
arpl
int
das
cmp
test
xchg
and
rcrl
call
fistl
pop
dec
wrmsr
add
nop
mov
hlt
or
rclb
and
push
jp
ds
jg
cli
mov
popa
inc
stos
fcom
sub
fmuls
jbe
addb
mov
andb
lock
cs
adc
inc
stos
rcrb
pop
push
aas
imul
or
sahf
jns
xchg
lea
fptan
and
subl
mov
in
inc
lret
mov
repz
adc
sub
mov
icebp
aam
mov
push
mov
mov
inc
cmpsb
jno
xchg
adc
clc
dec
cmp
outsb
enter
pop
mov
xchg
mov
pop
xchg
pop
sbb
xor
xlat
adc
jne
arpl
push
enter
out
pop
mov
jns
adcl
sbb
xor
sbb
mov
int
mov
repnz
out
push
push
pushf
dec
mov
sti
mov
or
cltd
push
leave
mov
or
test
mov
vmovq
stc
pop
mov
lcall
cmp
adc
mov
insb
test
sti
arpl
pop
push
adc
lcall
subb
scas
out
inc
stos
popa
mov
push
je
cmpsl
adc
add
jle
out
pop
mov
lea
out
and
pusha
clc
outsb
or
sub
test
adc
xchg
pop
xor
mov
call
sbb
mov
pop
test
js
sbb
mov
cmp
push
enter
cld
js
imul
inc
mov
cmp
int3
inc
enter
fmul
lahf
cmpxchg
pop
dec
inc
xor
out
addl
movsb
dec
mov
insb
outsb
pop
dec
lods
adc
mov
cs
dec
popa
jbe
jmp
pop
scas
dec
jmp
ja
cmc
cli
mov
in
jg
pusha
scas
shlb
and
mov
push
xchg
sub
movb
fsubrp
mov
test
sub
fsts
xchg
fsubrp
xor
inc
adc
push
jns
bnd
lcall
jno
stos
js
mov
icebp
mov
scas
sbb
dec
bound
sti
repz
mov
fwait
mov
pop
inc
adc
xor
fmulp
stos
dec
pop
cmp
scas
xor
and
cmpsb
out
adc
jns
push
mov
jae
sub
mov
sub
cli
fwait
int
or
cmp
insb
into
cmovne
jmp
cs
jmp
xor
or
mov
push
mov
jg
movsl
push
test
mov
aam
or
or
jecxz
xchg
pop
mov
cmp
je
adc
rcrl
lods
pop
mov
inc
movsb
push
stos
or
push
dec
stos
fistpl
stc
push
push
pop
jae
sub
addr16
roll
and
sti
cmpsl
adc
xlat
mov
out
dec
adc
insb
js
arpl
lds
repz
aad
movsl
inc
mov
adc
pop
rcr
xchg
cmc
jae
scas
stos
jg
lods
mov
loop
adc
cmp
xor
movb
adc
xchg
cmp
cld
cmp
sbb
mov
ficoms
int
push
xchg
sti
test
adc
sub
enter
cmp
outsb
negl
repnz
sub
jl
xor
push
sbb
inc
cltd
jb
inc
pusha
xchg
out
push
nop
jle
cmp
leave
or
out
test
adc
jmp
enter
or
pop
and
stc
dec
and
mov
xchg
movsb
sbb
xchg
and
cmp
jl
out
add
pop
stos
cmp
and
inc
sahf
adcl
xor
insb
and
sub
inc
pop
jl
jle
div
pushf
add
pop
add
add
or
hlt
enter
flds
jmp
cmp
repz
movsb
or
cmc
dec
sub
decb
cmp
pop
enter
sbb
xor
xchg
mov
jmp
inc
pop
fcoml
add
addr16
out
inc
inc
addl
mov
fisubs
sarb
pushf
fsubs
dec
scas
xchg
jne
repz
lods
movsb
mov
mov
movsb
jne
loope
lea
aad
xor
lcall
fcoms
or
sub
sub
push
scas
shll
inc
arpl
push
ret
test
lahf
dec
dec
push
mov
pop
mov
imul
sbb
enter
adc
mov
jb
or
lea
mov
mov
ds
fyl2xp1
clc
xchg
push
xchg
fwait
add
mov
inc
pop
cmpsb
pop
dec
ret
imul
ljmp
movsl
push
push
mov
cmp
mov
and
fs
mov
adc
shrb
xchg
add
xchg
out
int
sbbb
xchg
rorl
loope
stos
push
jecxz
rcl
and
imul
jg
adcb
in
mov
push
jae
lods
insl
lds
hlt
sub
cmc
int3
loop
or
jp
adc
mov
daa
jne
jae
pop
stos
loop
rorb
jmp
add
pop
sti
mov
cs
repz
test
add
in
nop
movsb
or
je
fs
inc
cwtl
in
stos
xchg
xor
inc
mov
inc
or
mov
mov
pop
divb
movl
inc
stos
push
outsl
ret
sarl
aaa
mov
lods
decl
fs
or
sbb
repnz
or
jmp
leave
jb
push
mov
aad
in
pop
cmp
pop
out
dec
mov
and
pop
and
scas
xchg
sub
stos
stos
cli
popa
xchg
popf
xor
inc
into
daa
sti
add
add
mov
imul
mov
sub
loopne
sub
push
push
add
aam
add
mov
push
repz
xor
jb
mov
mov
push
mov
out
popa
or
cld
push
lret
loope
and
aam
sti
daa
jbe
mov
jge
mov
test
dec
add
cmp
xchg
jecxz
pop
stos
shrb
pop
mov
in
pop
cmp
loopne
loope
mov
pop
pop
cmc
mov
mov
dec
and
dec
push
sbb
mov
adc
enter
add
addr16
cmp
pop
mov
lea
cltd
xchg
fcomp
mov
jl
cmp
xor
inc
jg
scas
or
nop
outsb
cli
push
outsl
push
adc
pop
cmc
outsl
imull
jae
enter
mov
fcmovu
mov
or
add
mov
adc
adc
loop
adc
cmp
dec
adc
push
adcl
mov
adc
mov
in
pop
mov
enter
arpl
cmpsb
imul
aad
xchg
push
jmp
std
cli
mov
pop
das
cmpsb
rcrb
inc
mov
add
loop
xchg
stos
mov
jnp
adc
jge
aam
jecxz
std
sbb
and
dec
cmp
inc
jge
cmp
imul
outsl
stos
jne
sub
adc
insl
push
sbbb
mov
nop
xchg
dec
dec
inc
mov
xor
movsl
in
dec
mov
mov
lret
lds
inc
push
jbe
mov
adc
or
sbb
popa
or
test
inc
cmp
adcb
jmp
inc
cltd
pop
mov
jge
cmp
test
mov
call
xchg
cmp
inc
push
scas
je
lret
adc
sbb
mov
jno
mull
adc
add
mov
test
pop
clc
repnz
cmp
ret
mov
pop
call
lds
test
add
mov
or
cmp
xchg
jnp
ret
call
aad
mov
xchg
ret
iret
cmp
push
push
push
shll
jae
dec
push
cld
jecxz
push
mov
in
ficomps
pop
sbb
and
jg
out
xchg
sbb
add
lahf
xlat
mov
popf
repnz
in
push
jnp
sbb
sub
pop
jp
and
sbb
dec
lods
adc
mov
in
scas
ja
sbb
scas
into
ss
std
std
mov
scas
aad
lea
in
bound
lret
jne
or
adc
lahf
inc
jp
mov
mov
add
dec
push
sub
cmp
std
subb
inc
and
pop
cmp
insb
jg
dec
xchg
mov
out
movsl
lods
ja,pn
cmp
enter
out
jns
jb
inc
fldl2e
mov
pushf
adc
or
cmp
xor
cli
mov
push
mov
addl
movsb
jge
mov
adc
inc
sub
xchg
test
in
adc
pop
adc
cli
cli
aaa
stos
sti
roll
inc
or
orb
inc
cmp
or
and
dec
scas
pop
cltd
mul
in
jmp
and
xchg
rorb
pop
int
mov
mov
mov
and
test
add
dec
stos
and
mov
push
sti
or
xor
insb
sbb
adc
push
inc
stc
cs
in
sbb
fwait
cmc
mov
sub
insl
shlb
inc
cmp
xchg
aam
sbb
cmc
pusha
mov
mov
cld
push
or
dec
rclb
adc
mov
jno
into
out
bound
test
fstpl
sbb
sub
test
push
test
xchg
fbld
cmp
xchg
cmp
call
and
add
loopw
xor
cld
imul
jle
push
movsl
icebp
testl
mov
push
push
pmulhw
test
ret
push
cltd
cs
cmpsb
cs
jl
xlat
rcr
iret
out
and
nop
int3
mov
js
dec
inc
push
idivl
mov
push
mov
aam
ja
add
sti
xor
jbe
pusha
addr16
lods
pop
loopne
adc
fisubs
mov
nop
rcll
mov
xchg
sarb
sub
cmp
add
and
xor
jmp
movsl
pushf
stos
fcomip
cmpsl
mov
xlat
shll
cmp
mov
dec
mov
or
scas
push
jmp
xchg
adc
lret
clc
cmpsb
out
inc
mov
pop
jbe
pop
scas
mov
ljmp
push
fs
test
fcoms
iret
push
adc
andb
dec
cli
adc
push
xchg
mov
clc
fiaddl
and
sub
or
stos
lods
add
mov
ret
mov
cmpsb
imul
dec
cmc
rcl
xchg
pop
fildll
fwait
hlt
inc
imul
repnz
xchg
call
jmp
inc
les
push
rorl
arpl
adc
gs
or
cmpsl
fwait
dec
in
sub
sub
push
imul
test
ret
push
test
mov
mov
pop
add
cmc
xchg
xchg
push
int
in
push
out
pop
popf
orl
adcl
and
and
test
pop
out
nop
cmp
xlat
mov
sbb
subps
or
push
fidivl
cld
fadd
cmpl
xchg
pop
mov
fmul
cltd
aam
pop
fptan
test
or
jecxz
outsb
push
shll
and
addr16
out
or
lods
cmpb
xor
xor
push
js
hlt
nop
push
subb
rclb
fistpll
lret
lret
bound
popf
jo
lock
cmp
lea
je
sbb
icebp
das
loopne
int3
insl
cmp
pop
sbb
iret
andl
leave
imul
mov
xchg
into
mov
fwait
cmp
daa
push
jecxz
cmc
adc
pop
test
fbstp
fxch
int3
addl
adc
mov
es
push
insb
ds
jle
push
fwait
les
cmp
aad
movsb
into
movsl
fdivrl
shll
sbb
pop
push
lock
jo
or
test
sub
cwtl
and
pusha
mov
dec
adc
adc
test
fisubs
sbb
roll
sbb
push
lcall
sbb
sbb
xorb
stos
adc
iret
subl
push
sti
jbe
push
jmp
lock
sub
fstl
sub
push
add
and
dec
jnp
mov
pop
xor
mov
pop
push
and
repz
dec
into
frstor
jnp
xchg
pop
pushf
gs
mov
xchg
ja
aaa
push
fwait
add
jno
dec
cmp
push
mov
lcall
dec
sarl
inc
cmpsb
and
fwait
inc
cmpsb
jle
mov
sub
sbb
arpl
icebp
pop
push
lock
out
xor
sub
xor
cmc
mov
pop
cmp
adc
mov
pop
iret
mov
mov
leave
cld
cmp
add
mov
mov
pop
das
jle
or
jb
xlat
dec
fdivs
mov
lret
dec
xchg
sbb
lds
adc
jmp
sbb
pop
dec
jmp
clc
insl
dec
mov
les
ja
int
adc
das
adc
ljmp
inc
aas
ret
test
outsb
insl
or
out
cmp
cmp
cmpsb
mov
mov
sahf
push
js
stc
shrb
insl
shl
push
xchg
cmc
sub
add
arpl
rorb
loope
inc
sbb
and
xchg
mov
std
je
jp
es
push
aaa
popl
xor
stos
or
repnz
cmpsl
lods
outsl
popa
ljmp
jp
pushf
testl
adc
nop
imul
mov
xor
mov
sarl
je
shlb
dec
jmp
pop
or
sub
jb
lcall
mov
xchg
add
pop
xchg
pushf
shrb
sub
adc
mov
pop
mov
stos
xor
sub
leave
stos
mov
clc
ret
dec
pop
movd
sbb
dec
pop
lcall
ja
sbbl
fidivl
and
xor
or
add
mov
aam
pop
clc
dec
cmc
or
fistpl
dec
aad
lock
test
and
je
adc
jg
stos
mov
inc
movsb
shll
shlb
pop
mov
jbe
mov
addl
fidivl
push
or
sub
mov
mov
dec
mov
sub
cltd
mov
and
xor
int
push
gs
mov
lret
inc
std
jmp
in
arpl
in
jno
cs
push
mov
out
fwait
inc
dec
or
push
mov
or
cld
pop
inc
incb
clc
dec
movsl
push
es
mov
mov
xor
or
clc
or
icebp
cmp
movsb
mov
sarl
mov
cmp
je
push
xchg
dec
inc
cmp
out
xchg
push
add
push
pop
leave
mov
push
les
std
jne
jbe
mov
or
and
jge
xor
cmp
jg
lea
ss
out
fnsave
fs
mov
or
ret
movsl
inc
ret
mov
pop
cmp
ss
repz
and
pop
xlat
sub
aam
push
loope
xlat
popl
mov
lahf
jns
lods
push
shr
lret
scas
xor
andb
mov
dec
int
fs
outsl
test
pushf
pop
loop
or
test
fnstcw
push
clc
pop
xor
repz
pop
hlt
push
xchg
push
and
movsb
mov
pusha
cs
push
iret
mov
sbbl
mov
mov
xchg
push
jnp
insl
bound
loope
out
adc
mov
leave
cs
sti
push
and
stos
xor
inc
and
mov
and
int
daa
push
or
mov
ja
push
inc
add
xchg
daa
test
or
dec
stc
fwait
lds
lock
idiv
jge
inc
imul
enter
and
add
jbe
push
mov
stos
adc
xor
jno
ja
cltd
pushf
fistpl
jae
mov
in
cmpsl
dec
outsb
nop
fmull
cmpsb
jnp
mov
int
sub
movsb
push
movsb
pop
dec
dec
xchg
stos
xchg
dec
xchg
rcl
insl
shll
xor
js
leave
ret
in
in
mov
adc
lds
jnp
lods
inc
inc
jecxz
mov
lret
pop
cmc
push
sbb
addl
or
in
mov
mov
add
add
fcmovnb
ds
fdivr
dec
cli
stc
mov
and
adc
stc
cmpsb
imul
add
and
jl
divb
mov
xchg
pop
repnz
cmpsl
daa
out
pushf
test
ficoml
mov
mov
movsb
in
sti
jbe
push
bound
or
outsb
adc
jl
sub
mov
ficoml
sbb
ficomps
dec
dec
movsb
gs
cmp
cmp
and
mov
pop
les
or
fnstenv
ficompl
out
sub
push
mov
jle
and
dec
jo
mov
mov
popa
out
inc
sub
out
test
add
mov
daa
test
popf
inc
cs
sub
lret
mov
pop
mov
pop
and
sub
loop
imul
hlt
fists
punpckhbw
int
negl
clc
jbe
dec
in
loope
ss
dec
hlt
ljmp
ret
mov
cs
sub
aad
adc
shrb
js
cmpsb
mov
cli
xchg
inc
into
sub
rcr
mov
lock
jb
fdivrp
xor
shlb
lret
cmpsb
jmp
dec
repnz
cld
cmp
jmp
push
mov
lods
and
scas
das
mov
cmp
bound
std
mov
cld
fwait
jle
sub
test
int
decl
adc
andl
push
leave
in
daa
and
xchg
je
mov
push
arpl
imul
pop
in
mov
in
jp
imul
pop
inc
cld
push
scas
call
jge
fnstcw
sub
xor
adc
adc
dec
inc
xchg
in
loop
popf
sbb
xor
cmp
cmp
aaa
rorb
sub
ss
xor
call
or
cld
adc
div
gs
push
jb
or
and
xor
push
mov
adc
out
jo
je
in
in
out
mov
leave
mov
jns
rol
or
adc
pop
and
imul
dec
fisubl
sub
inc
dec
fimull
or
jmp
aas
mov
mov
lahf
or
sti
inc
xchg
dec
lret
movsb
daa
cltd
hlt
and
pop
arpl
fs
adc
adc
mov
jno
jne
nop
pushf
cmp
dec
or
scas
cwtl
pop
jl
mov
adc
adc
insl
xchg
push
je
dec
xor
pop
push
pop
or
cltd
mov
xchg
test
cmpsb
sbb
mov
mov
punpckhdq
iret
pop
add
outsb
inc
rolb
jo
and
in
rorb
push
call
shrl
bswap
pop
lcall
ds
pop
xchg
ficomps
push
test
test
call
lods
mov
dec
push
sahf
loope
loopne
pop
subl
dec
fs
fs
rcrb
jmp
lret
sub
daa
fmull
cmp
loop
clc
lds
pusha
lods
lret
add
stos
add
test
jnp
xchg
into
fs
shrb
push
aad
jns
sub
aas
scas
fsubs
jecxz
dec
sbb
test
scas
in
out
leave
inc
test
leave
jbe
mov
sub
xor
sbb
ljmp
dec
mov
inc
sbb
in
jne
jg
cmp
mov
testl
mov
mov
lret
imul
pop
decl
xor
sbb
xor
in
push
ja
pop
adc
jnp
stc
es
mov
mov
inc
jno
out
lcall
les
inc
mov
cmp
xor
dec
mov
xchg
jecxz
jle
sub
mov
cld
or
sti
push
out
add
jnp
push
xchg
and
insl
test
adc
sahf
stos
aad
mov
xor
test
sbb
cmp
jno
int
push
fs
mov
ret
mov
add
lods
jae
jbe
xor
es
incl
repnz
cmp
lahf
jge
out
dec
ja
cmp
call
cmp
daa
cli
sti
sub
scas
cmp
push
sub
shl
push
das
cmp
scas
repnz
inc
mov
inc
nop
test
mov
mov
xor
mov
jno
std
mov
into
jecxz
out
cltd
jg
out
call
mov
cmp
cld
push
push
std
mov
nop
out
xor
mov
movsl
js
adc
aaa
lahf
bound
in
cltd
repnz
out
pop
cmp
movsb
outsb
sahf
jmp
jp
sub
shl
add
cwtl
jecxz
ds
add
loopne
jb
shll
scas
stos
gs
cmp
std
xchg
nop
outsb
push
leave
xchg
shrb
ret
pop
loopne
loopne
mov
inc
fs
mov
mov
mov
dec
pop
mov
jae
xchg
imul
gs
xor
repz
push
sub
outsb
lcall
cld
pop
out
cmp
stc
xor
and
stos
test
adc
mov
sub
sbb
mov
test
fsubl
and
dec
cs
out
xor
and
loopne
or
pop
sub
xchg
orl
sbb
adc
js
jo
inc
in
fwait
test
xor
sub
loope
pop
or
out
jl
mov
arpl
push
and
sub
dec
jns
or
jg
dec
sbb
xor
ret
adc
sub
aas
dec
insb
pop
out
add
adc
andb
in
add
or
push
stos
sti
cmp
mov
jg
jne
mov
dec
or
ret
sbb
cld
adc
mov
pop
ss
cli
pushf
std
idivl
enter
jbe
popa
repnz
cmpsl
movsb
les
mov
and
mov
push
pop
cmp
call
pop
cmp
in
pop
sub
jbe
movntq
cmc
ja
popa
push
pop
fstps
movsl
arpl
jb
gs
pop
push
push
xchg
pusha
out
add
call
das
cli
dec
in
jl
dec
push
jo
loop
dec
pop
mov
bound
dec
inc
pusha
push
stos
jmp
sub
sub
insb
pushf
xchg
cld
mov
or
fcomps
repnz
mov
ja
jnp
add
js
std
or
enter
lock
and
pop
inc
add
fninit
pop
lret
mov
push
je
movsl
sub
dec
out
mov
sbbb
pop
inc
out
sub
pop
adc
dec
xchg
insb
rcrl
mov
mov
push
das
push
jge
inc
sti
adc
ret
dec
and
push
jmp
cmp
xchg
pop
add
mov
scas
mov
pop
pop
or
mov
and
sbb
jl
and
xchg
dec
stos
dec
mov
lret
ja
mov
cwtl
push
sarb
pop
arpl
push
test
pusha
mov
pop
mov
js
leave
movsl
stc
das
dec
xor
push
inc
mov
enter
scas
pop
insb
dec
or
pop
sarb
loope
mov
cmp
testl
xchg
pushf
cmpsl
pop
icebp
rcl
xor
aas
or
lcall
sub
lds
movsl
andl
mov
aaa
adc
sub
mov
stc
dec
pop
jp
sub
inc
jbe
pushf
mov
int
sbb
pusha
sti
jo
xor
loope
and
inc
imulb
cmp
fcmovnb
icebp
mov
out
mov
sarb
data16
xchg
sub
jge
pop
jno
stc
ficomps
xor
dec
stc
cltd
es
and
sub
or
add
jbe
in
cmp
add
loopne
xorb
mov
pop
dec
movsl
test
in
xlat
sub
jg
xchg
cmp
or
sub
lret
xchg
popa
cmp
push
lret
decb
adc
sti
add
loope
xor
add
xchg
cmp
andl
mov
push
sbb
push
or
enter
jb
test
scas
pop
xchg
xor
sbb
sbb
inc
ss
iret
sahf
je
push
or
push
popa
in
xchg
xchg
add
jae
cmc
out
shll
fnstcw
mov
icebp
mov
jno
jg
adc
pop
sarl
push
pop
imul
repnz
jecxz
or
xor
xor
cmp
sbb
or
pop
mov
ljmp
cltd
push
int
cmp
and
fs
push
aaa
aaa
out
enter
sub
mov
scas
popf
sub
out
xor
cs
inc
nop
adc
int
fcoms
inc
repnz
aaa
mov
pop
popf
pop
stc
cmpsl
adc
in
movsb
xor
mov
xlat
dec
mov
into
mov
pusha
idivl
cmp
fsubl
push
lock
ja
ret
pop
xchg
pop
mov
andl
pop
inc
adc
rcrb
std
lea
into
add
xchg
pop
fcomip
mov
in
or
sub
adc
dec
mov
jnp
cmpsb
ficomps
std
pusha
inc
sbb
and
sub
jle
ret
andl
arpl
cmpsl
loope
xor
jg
xor
lret
insl
push
jmp
inc
xchg
in
lea
push
dec
xchg
repz
adc
add
inc
movsb
push
and
lock
and
test
icebp
popa
jmp
or
jb
push
dec
sub
cli
shrl
fstl
jg
sbb
das
or
pop
jle
xchg
push
jmp
mov
jbe
insb
lret
fdiv
xchg
xchg
arpl
dec
insb
aaa
or
subl
loopne
enter
pop
fcomip
adc
xor
dec
ds
inc
mov
xor
outsl
hlt
push
mov
idiv
jle
push
insl
xchg
xor
insb
test
mov
cmp
fstpl
out
inc
cmp
loop
loope
pop
hlt
cmc
gs
dec
or
clc
out
push
dec
test
xlat
xchg
pop
popa
push
shll
add
jge
sub
push
hlt
in
cmp
std
in
mov
imul
push
push
shr
popa
les
push
mov
dec
sbb
test
and
mov
and
ret
test
gs
sbb
out
or
cmpsl
sbb
loope
les
fbld
sbb
cmp
dec
add
outsb
cld
pop
inc
mov
loope
les
pop
mov
adc
push
lcall
mov
je
or
xor
clc
adc
and
cmpsl
popa
cltd
imul
xchg
inc
fisttpl
das
cld
lock
sbb
mov
cmpsb
shlb
fidivrl
push
mov
fadds
add
sub
push
mov
push
mov
mov
mov
push
jns
dec
scas
mov
mov
cmc
clc
outsb
lock
jb
fldcw
or
sbb
imul
je
pop
pop
mov
out
in
or
or
mov
jno
xor
mov
cmp
push
mov
jne
das
cmpb
xor
mov
movsl
in
or
lahf
mov
lock
push
and
mov
dec
mov
mov
push
push
jge
sbb
fsts
inc
mov
cmp
dec
fucom
xchg
mov
or
jmp
cld
pop
dec
push
or
stc
sub
mov
into
mov
movsl
dec
push
and
fcmovbe
jecxz
xor
repnz
push
mov
jmp
jo
push
mov
cmc
fs
in
sahf
clc
idiv
enter
ja
stc
arpl
dec
test
mov
dec
dec
les
jg
leave
outsb
and
mov
or
jg
fistpl
jg
scas
and
stos
add
cmc
sub
xchg
and
lds
push
dec
xchg
mov
pop
xlat
dec
pop
rcr
dec
pop
jle
sbb
fidivrl
jp
and
lock
out
adc
xchg
aam
add
jecxz
in
fucomp
xchg
xor
aad
xor
jge
cmpsl
add
jbe
lods
sti
mov
cmp
dec
addr16
js
jmp
cltd
test
sub
sbb
daa
movsb
fdivs
adc
in
pushf
sbb
idivl
pop
or
fwait
mov
cld
xchg
out
inc
sbb
mov
inc
cmp
xor
mov
sub
xchg
push
mov
int
cli
movsl
dec
fldl
imul
sahf
addr16
and
neg
adc
jne
or
ja
dec
cmp
inc
cmp
rcrl
daa
inc
sar
addl
cmp
push
cs
out
mov
imul
mov
pop
fnsave
daa
fiaddl
test
in
pop
test
es
xchg
and
mov
inc
jg
jecxz
xor
mov
ljmp
loopne
lock
sub
std
fsubrs
mov
xor
aas
insl
roll
mov
mov
xchg
xor
xchg
cmp
loopne
out
jbe
jno
or
pusha
add
pop
adc
and
ja
pop
jns
and
cmc
lcall
leave
shlb
dec
sbb
dec
cmpsb
xchg
sbbl
fwait
out
sbb
popf
jle
mov
lahf
pop
test
orb
sbb
shl
ja
xor
aam
and
lea
jb
inc
movsl
rolb
sbb
xchg
fsubr
or
inc
icebp
sub
sub
push
add
cmc
lcall
inc
das
ja
int3
sbb
jge
sti
insl
push
dec
adc
iret
add
inc
xlat
subl
stos
dec
movsb
push
jns
and
mov
outsb
scas
dec
xor
xchg
adc
repnz
ret
jb
mov
sbb
icebp
arpl
mov
lahf
cli
xchg
xchg
inc
test
dec
jae
shr
rcll
rcrl
adc
cmc
in
pop
mov
push
sbb
scas
jb
movsl
mov
push
sub
aaa
fsubrs
popa
sub
subb
lea
incb
add
gs
movsb
mov
test
sbb
sub
xor
adc
add
dec
xchg
rcll
sub
dec
inc
test
or
mov
sub
loop
test
xor
mov
dec
jne
insb
pop
jecxz
mov
fisttps
jae
mov
jg
pop
ljmp
lock
es
lret
popf
mov
xchg
mov
insb
inc
and
ret
int3
ljmp
lock
ja
insl
pop
pop
fsub
xor
and
in
fisubrs
jmp
jecxz
sub
pop
and
xor
sub
sub
mov
inc
mov
push
ret
push
adc
mov
add
xchg
in
in
mov
xor
adc
insl
sbb
mov
movsl
dec
push
jne
sub
cmp
fidivs
daa
fstpt
mov
cmpsb
aas
sbb
sub
cwtl
and
xchg
push
mov
dec
movsl
in
fs
pop
fstl
iret
xor
mov
repnz
ror
sbb
into
iret
test
inc
dec
and
ficomps
cmp
xor
dec
cmp
sahf
cmp
sahf
cld
ja
mov
hlt
or
shlb
sub
and
test
je
adc
xor
imul
pop
fs
data16
pop
add
mov
outsb
test
in
loopne
adc
aaa
lret
jno
sti
outsl
popa
setle
incl
xor
pop
lods
inc
ja
aaa
pop
pop
sarl
or
inc
mov
mov
cmc
mov
dec
xchg
lret
aam
lods
sbb
or
and
daa
mov
aas
imul
xchg
xchg
loopw
ljmp
cmpsb
pop
lcall
mov
ds
cmpsl
sbb
popf
nop
out
mov
mov
mov
dec
aas
shlb
jp
ja
out
cmp
dec
notl
cmp
call
sbb
clc
outsl
dec
cmp
mov
inc
stos
in
es
lret
popf
pop
mov
push
jno
incl
sbb
add
xorb
pop
xchg
dec
scas
jno
xor
xchg
inc
pop
or
cmc
pop
sbb
aas
adc
xchg
das
add
ljmp
push
mov
je
mov
inc
adc
sti
stos
rorl
imul
ss
xchg
jmp
inc
inc
jp
mov
or
push
lret
add
gs
dec
adc
inc
mov
testb
fs
adc
shrb
sub
test
out
test
xlat
jp
shr
sti
mov
cwtl
cli
mov
int
adc
mov
aas
out
sub
roll
add
xor
fisubrl
mov
sbb
out
rorl
pop
dec
dec
into
sub
lds
mov
in
dec
fisubrl
jbe
daa
outsb
filds
xor
out
mov
popf
bound
dec
out
ljmp
xchg
iret
aas
inc
push
push
out
jnp
test
fnstcw
aad
mov
loop
jg
push
cmp
xchg
push
xchg
sar
xorl
int3
pop
dec
jno
insb
enter
insl
inc
mov
test
add
test
push
enter
inc
outsb
xchg
push
out
dec
lods
xor
sub
mov
cmp
jae
aad
xor
stc
push
sbb
fistps
outsl
cmp
inc
push
psubsb
mov
and
cmp
call
pop
mov
sub
pop
adc
cmp
cmpsb
mov
cmpl
xchg
inc
jne
scas
or
sub
and
movsl
aaa
push
cwtl
xor
mov
movsl
inc
sub
lcall
push
push
iret
mov
faddl
cmovnp
push
movsb
mov
jb
in
cltd
push
shrb
out
push
inc
or
cmpsl
or
jo
or
enter
int
and
add
or
scas
cmc
add
mov
push
or
or
jae
aas
mov
aas
in
jbe
dec
data16
data16
sbb
ja
out
or
mov
lds
and
xchg
int
jl
ljmp
arpl
jbe
sub
jne
mov
aas
iret
stos
stc
jne
sbb
test
mov
add
dec
lret
push
movsb
addr16
popa
leave
leave
mov
jae
and
dec
shl
in
add
add
dec
imul
test
xchg
push
fsubrl
sub
jns
cmp
or
xchg
mov
les
xlat
dec
arpl
xchg
lods
cmpsl
loop
push
fisttps
ljmp
movswl
orl
add
push
or
jp
outsb
xchg
xlat
je
out
imull
adc
enter
cmpsl
pop
imul
nop
dec
mull
in
lods
and
rol
into
push
orb
scas
roll
push
flds
sha1msg1
add
repz
jecxz
xor
dec
dec
cmp
rcrl
jae
lds
jb
add
call
addl
fimuls
jmp
fidivrl
xor
jb
mov
pop
xor
js
sbb
inc
fidivrl
lret
jns
mov
cmp
mov
nop
pushf
pushf
iret
jno
cmp
cld
fimuls
or
sbb
ret
sub
in
movsl
lcall
add
addr16
mov
movsb
dec
ds
ss
fisubrs
hlt
or
jge
xchg
call
jmp
adc
aad
add
jmp
inc
adc
fildll
in
icebp
cmc
or
movaps
xor
mov
out
mov
les
inc
xchg
jne
and
jb
mov
jbe
subb
cltd
add
rcll
jno
mov
xor
je
sbb
dec
pop
hlt
pushf
xor
or
in
dec
mov
pop
pushf
mov
aas
mov
xchg
inc
test
or
mov
adc
mov
iret
mov
test
inc
cld
adc
fcoms
pop
frstor
test
push
rcrl
sub
inc
add
out
mov
lret
cmp
insb
insb
inc
jle
pop
std
leave
lret
jecxz
inc
xor
pop
jno
into
into
das
push
out
and
push
mov
stc
div
mov
cltd
popf
in
roll
adc
pusha
pushf
lock
lret
int
cmp
shll
pop
mov
mov
push
add
fwait
mov
jbe
enter
loope
out
fists
sbbb
mov
clc
xchg
sbb
pushf
cmp
jb
push
sbb
or
sbb
push
adc
or
xchg
stos
jns
and
repnz
int
faddl
cld
gs
jno
mov
ss
jmp
or
stos
sub
int
cs
lods
aas
ljmp
adc
xlat
push
inc
xchg
shll
or
fwait
pop
inc
add
mov
scas
aam
add
jmp
push
sbb
sub
icebp
mov
les
int
push
cmpsb
push
out
xor
inc
xchg
imul
lds
add
arpl
mov
xchg
cld
sbb
and
jb
stc
in
or
aaa
push
push
nop
xchg
ffreep
jmp
sti
mov
loop
aas
lcall
push
fists
jecxz
mov
iret
add
ss
gs
fimuls
decl
pop
in
jo
sub
dec
push
popf
mov
cmp
repnz
fs
jnp
test
xor
mov
sub
xor
ret
cli
inc
xchg
enter
pop
gs
aaa
adc
aad
sbb
xchg
jmp
inc
mov
out
cwtl
sahf
scas
inc
and
or
cmpsl
movsb
shr
outsb
out
jmp
mov
mov
ret
mov
std
push
ret
xchg
lea
imulb
das
xchg
xorl
cmc
test
ss
aad
sub
test
imul
xor
addb
mov
rcr
ja
imul
jmp
lret
mov
pop
fidivrl
outsl
int3
fdivl
bound
jnp
in
rclb
or
xchg
and
mov
pop
xchg
cmp
jne
iret
mov
aaa
ss
cltd
mov
jno
add
icebp
mov
adc
shlb
mov
lahf
outsb
adcl
cmp
xor
sub
vmaxps
popf
xchg
cmc
mov
leave
push
je
insb
addl
lods
dec
leave
xor
inc
dec
fimuls
xor
mov
jae
mov
jno
fxch
shlb
andl
bnd
pop
sbb
int
cld
jbe
sahf
mov
dec
movsl
mov
mov
xchg
ret
daa
iret
and
cmp
push
sbb
gs
jge
les
push
jns
into
cltd
push
mov
inc
sarl
inc
das
push
pop
js
push
xor
fs
mov
in
mov
jno
imul
dec
xor
int
fdiv
adc
popf
cli
lcall
daa
scas
mov
sbb
mov
or
mov
xchg
xor
lds
sub
add
xchg
hlt
loopne
mov
pop
pop
mov
xchg
sub
mov
rcl
or
and
jb
notl
add
pop
mov
test
mov
mov
hlt
loop
add
xor
leave
movsl
fistpl
sbb
pop
fstpl
xchg
push
xor
shl
aaa
aas
jo
lock
xor
mov
xchg
hlt
adcl
cmc
inc
les
out
mov
xchg
leave
xchg
bound
loopne
fcomps
jb
push
pop
lods
cld
mov
adc
aam
mov
sbbl
fwait
cmp
iret
movsb
jne
push
lods
cld
push
cmp
adc
sub
inc
ljmp
adc
leave
aas
orb
out
aaa
or
stos
and
lea
xor
outsl
push
mov
mov
pop
xor
int
mov
add
fcoms
hlt
mov
imul
xor
mov
leave
mov
enter
add
inc
cmp
pminub
ss
xchg
pop
cld
and
push
xchg
mov
cmp
inc
mov
and
out
ret
jmp
call
ficoms
int3
stc
pop
dec
mov
cmp
mov
lds
mov
mov
inc
mov
nop
xchg
jp
pop
mov
sarb
flds
testl
les
add
int
int3
sub
xchg
pop
pop
aad
lea
adcb
cs
mov
jno
cmpsl
or
jle
ror
lock
lcall
mov
mov
jge
leave
arpl
jno
sub
dec
inc
pop
push
or
dec
jne
mov
jbe
xor
jnp,pn
pop
adc
jae
and
pop
cmp
xor
lods
rcl
inc
iret
or
mov
adc
sbb
pop
jp
dec
dec
mov
loop
mov
sbb
jecxz
in
cwtl
std
push
push
jbe
lods
xchg
leave
xchg
xor
lea
outsb
inc
pop
clc
fdivr
ret
sub
sub
jo
mov
int3
aam
adc
mov
sub
lds
insl
mov
inc
push
push
sbb
cwtl
or
out
lods
scas
aas
ja
js
push
jl
lds
cmpsl
pop
add
subb
dec
cmp
cmpsb
es
scas
xchg
xchg
sahf
scas
test
pop
push
andb
add
cwtl
or
popf
adc
cli
es
out
test
adc
xchg
or
and
int3
stc
loopne
ja
push
clc
pop
xchg
lock
in
dec
push
int3
daa
dec
mov
js
cli
jmp
jl
or
cmpsb
xchg
jbe
adc
push
mov
xchg
fistpll
fucomi
jg
ret
cmp
mov
aad
and
lea
lock
push
mov
icebp
bound
icebp
cmp
dec
add
push
add
jle
stos
or
stos
mov
loopne
movb
loop
jb
imul
test
cs
cld
pushf
xlat
sub
jmp
inc
mov
andb
cwtl
push
mov
pop
notl
out
insb
incl
sbb
lahf
add
std
test
iret
dec
int
mov
fidivrs
arpl
pusha
sub
fcomi
xor
std
sbb
loopnew
mov
mov
jbe
jmp
mov
lds
pop
lcall
nopl
popf
add
jo
rcl
sbb
inc
test
mov
jg
cmp
pop
jo
xchg
adc
out
mov
add
mov
in
push
ljmp
test
insb
xlat
and
ret
ret
push
arpl
inc
lods
dec
insb
je
cmp
xchg
enter
mov
cmp
dec
push
jg
sbb
in
les
jg
mov
jno
xor
cmc
lods
mov
inc
push
addr16
scas
adc
and
out
aaa
scas
je
movsl
mov
mov
dec
rolb
jno
ret
mov
mov
lret
mov
inc
push
aad
decl
pop
dec
pop
jmp
pop
js
cmp
pop
sub
das
sub
out
inc
bound
adc
or
or
test
das
lret
cld
jmp
addr16
inc
dec
mov
push
xor
jo
push
loopne
lods
je
dec
enter
outsb
repnz
loopne
sbb
xchg
jae
je
icebp
int
and
xchg
mov
aas
jg
jge
jmp
pop
or
mov
cmpsb
mov
das
pop
xchg
push
mulb
cmp
shll
iret
jo
test
mov
jo
dec
mov
or
fwait
push
or
movsb
sbbb
mov
add
loop
int
push
orb
jbe
push
jnp
jae
movsb
or
jecxz
es
add
rolb
xchg
sbb
jmp
xchg
and
mov
xchg
fsubrl
fdivr
pop
inc
adc
sti
add
aam
popl
adc
jb
aad
and
fsubs
and
pop
lods
scas
xchg
imul
roll
or
mov
jecxz
cmp
std
and
out
in
pop
inc
in
loop
jb
bound
ds
stc
repnz
pop
mov
sarb
sub
pop
mov
jno
xor
out
ljmp
pusha
pop
pop
jmp
inc
mov
test
mov
repnz
push
pop
int
mov
inc
mov
fadds
loopw
jg
sti
lahf
inc
mov
fldt
adc
and
push
movsb
cli
mov
loopne
sub
xchg
aad
jp
js
jmp
push
and
inc
xor
out
add
movsl
inc
add
aad
or
inc
repnz
ljmp
sarb
jo
les
dec
movsb
dec
les
popf
inc
fisttpll
push
inc
cmc
cmp
add
pop
js
insb
aam
hlt
xchg
inc
repnz
jmp
addr16
lret
lods
rcll
mov
cmp
jo
xchg
push
jno
xlat
push
mov
cmp
and
xchg
fucomip
sti
popf
lret
jo
mov
out
push
shrb
loop
push
mov
mov
das
sbb
int
imul
push
dec
lods
push
mov
xchg
test
pop
mov
xor
in
xor
push
jo
sbb
sbb
subb
mov
sbb
cmpsl
fmull
cmc
stos
add
push
xor
repz
pop
pop
sti
add
dec
xchg
xor
iret
divl
mov
movsb
mov
aad
lods
loope,pt
lods
scas
test
outsl
jb
mov
mov
ret
pop
xor
xchg
in
sbb
out
mov
out
push
xor
lea
and
jmp
rcl
inc
cld
jmp
xchg
pop
xor
cmp
mov
out
dec
jo
fnstenv
sbb
fwait
xor
push
addr16
cli
xor
pop
es
insb
movl
dec
inc
add
repnz
mov
fbld
push
daa
psubq
mov
ret
pop
xor
insl
out
add
loopne
lods
sarl
sbbb
mov
inc
push
xor
xchg
out
cmp
addr16
movsl
pop
and
imul
sub
mov
lods
mov
adc
jno
leave
mov
fwait
jnp
jecxz
addw
mov
cltd
rcl
es
or
cltd
add
pusha
or
sarb
pop
enter
push
dec
adc
inc
in
aam
gs
or
aam
sbb
lret
pop
inc
adc
rcll
les
push
bound
movsb
inc
imul
xchg
jo
mov
adc
add
xor
cmp
add
push
add
jae
ficomps
std
sti
mov
fstl
aaa
and
stos
inc
in
pop
mov
in
mov
dec
xor
shlb
mov
pop
or
push
mov
dec
aam
popf
mov
or
dec
popf
fsubp
jg
sti
clc
pop
enter
ds
xor
imul
jno
stos
je
loope
xchg
stos
dec
push
mov
cmp
mov
scas
sbb
daa
cmp
lcall
call
lret
insl
sbb
lods
cmc
aas
int
cmp
and
ret
pushf
dec
ja
outsl
mov
aaa
sub
mov
push
mov
dec
adc
xor
cltd
mov
mov
pop
and
or
xchg
xchg
or
lret
ret
subb
ret
jp
sti
out
loop
in
jmp
lahf
dec
jo
pop
or
mov
ucomiss
pop
push
push
sbb
xor
aaa
loope
das
fdivl
dec
mov
sub
dec
clc
mov
xor
jle
mov
loop
repz
daa
in
mov
cmp
fs
rcll
sub
jg
push
cmp
sub
add
xchg
xchg
pop
imul
stos
add
cwtl
insb
div
jo
pop
test
push
jge
stos
fwait
jge
cmp
push
into
fldl
xchg
fstpl
bound
push
psubsw
xor
jg
or
and
mov
fidivs
fstps
into
inc
sbb
push
and
pop
stos
push
in
movsl
shrl
popa
loopne
into
xchg
std
push
push
mov
incb
fsts
mov
ret
jb
ss
xchg
mov
lret
mov
mov
aas
or
test
push
cmp
push
jb
sbb
cmp
and
sub
ret
je
jo
icebp
cmpsb
adc
pop
sti
cmp
stos
inc
xchg
nop
pop
adc
test
xor
cmp
mov
mov
and
pusha
lret
or
push
xchg
incb
add
cli
loop
call
add
and
dec
jecxz
mov
or
jecxz
gs
daa
sub
inc
mov
xchg
lea
cmp
fidivs
mov
sub
cmp
stos
testl
or
jbe
add
push
pop
int3
ret
jae
popf
mov
mov
sbb
sbb
dec
mov
xchg
loope
jmp
jnp
imull
adc
int
push
fcmove
jmp
insl
aam
andb
scas
lock
ds
icebp
push
or
ljmp
in
cmpsl
insl
icebp
adc
cmp
push
push
pushf
mov
shlb
add
pop
pop
mov
lret
nop
sub
mov
dec
dec
lds
sbb
cwtl
int
sub
push
lock
mov
inc
pushf
mov
cmp
add
adc
xor
pop
push
add
popf
stos
push
hlt
mov
mov
dec
or
mov
mov
std
fisttpl
mov
jecxz
movsl
cli
outsl
sbb
mov
push
xor
pop
sti
pop
arpl
add
push
lds
jne
or
dec
loope
int3
lods
pop
imul
push
xorb
mov
jo
js
outsb
arpl
push
mov
insb
sbb
daa
pop
pop
fnstenv
cmp
pop
or
push
dec
es
in
jle
jo
inc
inc
lods
mov
mov
aam
mov
sbbl
xchg
xor
mov
or
fdivs
or
pop
sub
and
out
push
push
adc
dec
and
test
or
adc
adc
andl
in
pop
mov
loop
das
js
out
dec
cli
cs
add
andb
popf
xor
pushf
outsl
sbbb
shlb
push
mov
cvttps2pi
insb
jecxz
stc
clc
and
mov
cmc
pop
mov
shll
adc
fdivs
add
inc
insb
ja
sbb
push
iret
mov
add
sbb
add
xor
jge
int
popf
arpl
cmp
or
cmpsb
clc
adc
adc
sub
jg
icebp
sti
push
adc
pop
into
fsts
in
mov
jo
test
sub
int
ja
jge
adc
adc
pop
mov
out
test
jo
je
or
hlt
into
pushf
mov
filds
in
cltd
in
mov
jb,pt
pop
je
sbb
arpl
mov
sub
cmp
int
lret
cltd
mov
jge
xchg
mov
bound
add
insb
fld
lcall
xor
xor
daa
cmpsl
and
jge
ss
sbb
mov
fisttpll
orb
or
fcoml
test
pop
stos
rcrb
in
int3
test
sbb
jne
jecxz
mov
sarl
test
outsl
pop
pop
rcll
push
jp
ret
inc
es
mov
popf
xor
sahf
outsl
inc
pusha
mov
lret
in
jb
repz
test
inc
add
xchg
lret
scas
dec
adc
movsb
jp
cmpsl
gs
pop
outsb
adc
fwait
int
leave
pusha
or
scas
and
push
push
out
fmul
push
cs
add
push
dec
out
popa
add
ss
jg
repz
into
mov
add
pop
cwtl
jno
cmpsb
push
enter
mov
pop
outsl
add
aam
enter
clc
gs
sub
pushf
mov
sub
test
xor
sub
mov
mov
mov
cmp
sbb
push
scas
movsb
sub
in
mov
jbe
xchg
jns
jl
or
sub
movsb
adc
xchg
dec
cli
int3
ret
add
ljmp
xor
sqrtps
popa
shlb
and
mov
mov
xchg
pop
push
sub
adcl
outsb
jmp
daa
xor
lret
xor
repz
xchg
push
subl
add
jns
pop
enter
jle
test
mov
lahf
fdivp
clc
es
das
pop
push
loope
adc
nop
push
jecxz
mov
add
out
or
push
xchg
inc
test
pop
stc
mov
addr16
hlt
mov
cld
pop
mov
decl
mov
pop
repnz
jnp
add
lcall
push
test
call
mov
icebp
mov
pop
pop
rcll
inc
push
xlat
data16
mov
mov
xchg
andl
insl
jno
mov
xchg
inc
push
mov
lock
outsb
ret
in
add
xor
push
mov
ret
je
and
pop
scas
int3
mov
or
sub
out
cld
scas
xchg
pop
adc
cmp
rorl
idivl
push
in
xor
outsb
sbb
xchg
xchg
add
pop
aas
cmp
ds
pop
cmp
aam
xor
ljmp
sub
lret
push
lret
push
pxor
add
sbb
xchg
lahf
aas
outsb
icebp
inc
push
or
int3
mov
sub
lods
ret
sbb
push
out
and
sbb
fstpl
mov
jge
sub
data16
aam
fwait
pushf
adc
sub
jae
lahf
repz
mov
mov
xchg
bnd
xchg
pop
push
push
sub
inc
outsb
repnz
push
fdivs
and
pop
inc
mov
and
push
mov
xor
or
fwait
or
push
cmp
aad
or
shlb
sub
repz
sahf
push
ret
xlat
adc
jmp
mov
cmc
imul
mov
push
shrl
push
sarb
shrl
sbb
in
pop
mov
pop
push
fs
je
and
into
adc
test
outsb
sub
jecxz
imulb
lods
push
out
shll
jmp
psllw
add
test
loope
mov
cld
pop
or
and
sbbl
repnz
mov
js
add
inc
repnz
outsb
scas
xlat
cmp
ss
out
adc
cmp
jmp
jmp
cli
sbb
loope
jns
ret
xchg
pop
js
pusha
mov
insb
cmpb
lahf
jo
mov
mov
xchg
repnz
aam
mov
and
repnz
or
cltd
sbb
mov
clc
push
jl
outsl
out
fldenv
je
mov
dec
movzwl
pop
in
xor
sbb
mov
pop
inc
pushf
pop
sub
cmp
push
adcb
dec
pushl
fcmovbe
pop
jl
addr16
adc
mov
sbb
cmp
sarb
int
imul
xor
divb
jp
xor
imul
out
inc
lcall
adc
cltd
cmpsb
ret
bound
mov
sub
ja
out
out
jg
es
fwait
popf
mov
aad
push
std
insb
clc
adcl
inc
inc
and
daa
pop
xchg
sahf
mov
pop
and
sarl
es
cmp
pusha
mov
ljmp
sub
int
and
sub
inc
sbb
cmp
lret
inc
jb
pusha
cmpl
inc
jl
leave
sbb
ss
cmpsb
je
stos
pop
je
iret
lahf
cmp
jae
add
cmp
inc
call
popl
mov
add
push
mov
xchg
sbb
sbb
pop
pop
leave
aad
sub
and
cltd
sar
sub
out
or
jo
stos
pop
shll
add
enter
into
and
adc
out
nop
andl
pop
loopne
imul
movsl
add
out
jnp
pop
inc
mov
jnp
mov
fistpll
dec
xchg
adc
dec
or
mov
dec
ljmp
pop
mov
jno
xor
jle
sub
mov
xor
dec
mov
ret
xchg
cmpl
into
cmpsl
das
lcall
flds
jne
xchg
jl
lock
xor
xor
cmpb
pop
xchg
mov
shlb
xchg
pop
dec
jg
dec
or
add
sbb
mov
jno
inc
rcrb
test
stos
pop
dec
ds
pop
mov
mov
pop
or
popf
lret
adc
jmp
outsl
dec
mov
sub
xchg
in
sub
das
adc
fs
dec
push
repz
test
sub
xlat
mov
hlt
outsb
jg
pop
scas
jae
mov
fs
sti
cmc
jmp
stos
push
negl
dec
mov
jae
std
cmp
fisubrs
repz
push
inc
pop
arpl
cmpsb
lock
out
notl
mov
lea
out
addb
add
adc
scas
je
test
cwtl
dec
lock
inc
and
mov
sbb
dec
enter
test
ja
orl
inc
lods
and
sub
mov
and
push
jnp
loope
and
inc
scas
test
pop
test
fucomip
mov
jnp
ds
lahf
sbb
or
and
mov
stos
or
lods
cmpsb
jo
rcll
pop
sbb
int
aaa
push
mov
aaa
js
mov
das
arpl
jbe
fbld
adc
sub
ret
aas
test
imul
fwait
jle
popa
das
xchg
call
test
mov
or
cmp
cmp
xor
sbb
sti
out
xchg
and
mov
ja
mov
js
fmul
inc
mov
in
mov
ds
fidivs
cli
inc
mov
movl
jmp
dec
xchg
pop
dec
js
ds
jp
sub
and
or
or
cltd
fsubs
jmp
lret
sub
insb
push
stc
xor
mov
dec
in
push
mov
xchg
rcl
or
and
and
cmp
adc
js
jl
test
aas
pop
cmpb
movb
pop
divps
repz
loop
outsl
push
stc
pop
or
ret
mov
jbe
movsb
sbb
dec
das
insl
sub
or
or
push
or
inc
and
or
add
add
cmp
daa
shlb
push
push
push
lret
int
mov
push
add
xor
mov
lock
jmp
std
mov
mov
mov
or
shl
mov
or
adc
xchg
sbb
pushf
das
mov
ss
push
aad
sbb
ja
aam
xchg
adc
lock
neg
and
cli
fmuls
mov
movsl
fwait
movsb
sbb
inc
cmpsl
lcall
pop
std
in
shll
xor
and
pusha
mov
aaa
fcomps
addr16
dec
sbb
dec
sbb
sbb
push
or
sub
xchg
les
aad
jno
loope
nop
incl
lret
popa
fucom
push
push
out
in
inc
aad
in
mov
xchg
sbb
mov
cmp
jle
sbb
aaa
sbb
in
cmpsb
xchg
jbe
test
repnz
js
dec
dec
mov
shll
inc
push
fadds
imul
cld
pop
cltd
mov
mov
inc
or
ud0
pop
jg
mov
inc
xor
jne
testl
lret
push
je
pop
ret
xor
mov
lcall
shlb
lret
das
shll
cli
fcom
sub
or
fdivp
movsb
in
test
in
jnp
dec
adc
push
push
popf
mov
dec
mov
in
sub
jecxz
scas
pop
sbb
push
xchg
dec
insb
orb
sbb
mov
sbb
lret
dec
mov
scas
insl
mov
xor
inc
and
jnp
push
xor
push
or
jmp
cmp
push
cmp
ss
sbb
das
mov
mul
mov
dec
jae
and
popf
sbb
adc
mov
sub
pop
lods
cmp
stc
in
andb
mov
jg
adc
cmp
int3
es
lret
dec
and
xchg
inc
adc
out
dec
jbe
sbb
loope
cmc
or
daa
and
xor
into
push
gs
mull
jbe
gs
in
adc
pop
jp
mov
sbb
pop
sti
insl
out
xchg
pushl
test
lds
fstpl
test
sub
push
add
flds
mov
fimull
cmp
jecxz
pop
lock
outsl
xor
ss
cmp
aaa
xchg
mov
aas
mov
lock
daa
fistps
mov
jmp
sub
shrl
fnstsw
cwtl
pop
out
adc
push
call
mov
push
in
dec
mov
xchg
aaa
push
daa
pop
or
pop
push
scas
jbe
push
aam
repnz
xor
fisttpll
popf
loopne
push
test
push
insb
fdivr
xchg
inc
xor
push
cld
inc
les
mov
aam
sub
or
sub
sbb
cwtl
loope
insl
or
cmp
dec
cmp
and
and
and
mov
push
push
jmp
jp
aam
fmuls
xchg
ficomps
ficompl
add
out
pop
mov
stos
xchg
sarb
lcall
subb
prefetch
das
cmp
nop
popaw
fbstp
cmpsb
cld
lcall
jo
adc
mov
mov
jmp
les
sbb
popa
or
out
loop
xchg
fmull
call
or
sbb
mov
dec
mov
pop
inc
push
mov
push
sbb
mov
sahf
cwtl
sti
mov
add
and
sbb
or
cwtl
loopne
je
repnz
add
jmp
push
fbld
std
jo
lret
fcoms
cmp
cld
lahf
ja
dec
mov
ja
dec
jne
pop
ret
xor
repnz
jns
mov
xlat
scas
popa
cld
adc
adc
fmuls
inc
pop
test
mov
and
cld
das
pop
add
push
mov
int3
pop
clc
and
mov
xor
sub
jp
stos
jmp
or
ljmp
dec
lock
scas
cli
or
push
pop
add
adc
jb
int3
lds
ja
dec
loopne
hlt
outsb
xor
mov
in
xchg
push
inc
icebp
not
sbb
bswap
jb
test
sbb
mov
into
cmc
aad
fildl
mov
mov
and
pusha
pop
lcall
sub
clc
mov
nop
das
jb
jmp
rolb
jmp
sub
jp
ljmp
aam
or
push
push
sahf
popl
inc
push
jb
lret
sbb
sbb
pop
pavgb
out
sahf
imul
stos
hlt
sub
out
pop
loope
frstor
sub
cmp
and
aas
stos
mov
xchg
sbb
mov
push
adc
cltd
test
add
cmpsl
mov
dec
cmpsb
incl
fistpll
jb
mov
lcall
fwait
loope
lcall
push
adc
movsl
cmc
in
sub
xor
or
xchg
fs
or
insb
and
mov
jns
cwtl
inc
push
aaa
sub
loopne
inc
ret
cmp
repnz
push
jle
jbe
mov
mov
inc
outsl
dec
xchg
jmp
daa
cmp
scas
fwait
popa
cmp
xor
in
leave
shlb
imull
xchg
push
and
inc
inc
jnp
sbb
jmp
flds
fcmovbe
fisubl
aad
sbb
and
call
add
add
test
mov
jle
iret
sub
mov
jb
nop
mov
arpl
pop
push
add
dec
and
icebp
imul
sbb
nop
stos
les
clc
mov
xor
adc
lds
test
fsts
popa
fnstcw
pop
pop
inc
mov
and
sub
addr16
repnz
enter
xor
das
sub
sub
or
fwait
psubusw
int
idivl
and
mov
dec
pusha
pop
pop
jge
jns
push
push
pop
adc
ret
push
mov
int3
xor
jl
ficompl
subb
mov
adc
out
adc
cmp
sbb
mov
xor
imul
sarl
push
pop
ror
nop
lahf
push
leave
iret
ja
sub
xlat
sbb
iret
jne
pushf
mov
dec
call
cltd
cmpsb
inc
cmp
mov
aad
xor
mov
in
lcall
mov
jae
lock
dec
lods
sub
imul
mov
dec
mov
sub
push
dec
testl
inc
mov
mov
cli
mov
add
mov
mov
or
mov
imul
rolb
ja
inc
int3
xchg
pop
push
sbb
cld
add
xor
xchg
fdiv
fsub
jg
pushf
pop
jno
aas
mov
insb
arpl
outsl
jnp
jge
fs
cli
popa
aam
outsl
mov
insb
movsb
jmp
push
in
imul
leave
jo
fnsave
int
sar
cmp
inc
fwait
test
into
popa
adc
or
sub
mov
arpl
xor
aam
push
cmp
mov
cmp
xchg
testb
popf
and
scas
lea
add
mov
xchg
push
fsubrl
mov
lods
loope
mov
pusha
mov
fbld
cmp
xchg
cwtl
mov
cli
mov
lock
shrl
nop
mov
add
pop
aas
pop
or
mov
xchg
jo
xchg
iret
sub
fcmovu
mov
mov
mov
lahf
push
insl
push
jle
push
addr16
push
fistpll
push
or
dec
sub
in
ds
push
xlat
push
outsb
mov
movsb
mov
mov
jmp
sub
nop
inc
add
jp
dec
insb
sbb
jbe
rcrl
mov
dec
test
push
jge
in
in
xor
fists
hlt
out
xor
movsb
inc
inc
cmc
sub
jns
mov
stos
in
jo
in
cmc
xor
xchg
jge,pt
out
movsl
mov
je
das
push
ret
jp
jecxz
dec
stc
mov
pop
add
cmp
cmp
jle
inc
gs
aas
stc
call
fstps
dec
in
mov
loopne
fnstsw
enter
xchg
mov
les
adc
nop
or
mov
int
rcll
xchg
adc
jne
inc
rol
loop
cmp
sub
jb
iret
xor
fmuls
movsb
addr16
outsl
and
es
add
negl
in
shr
jge
jne
pop
notl
stos
or
and
jl
jp
jns
or
mov
pop
fwait
xchg
clc
xchg
movsl
clc
mov
push
stc
test
lods
add
ja
xchg
scas
test
inc
add
mov
xchg
push
fdivl
pop
enter
jge
cmpsb
add
sbb
inc
xor
adc
loop
mov
inc
mov
sub
sahf
jg
sub
mov
dec
push
pushl
ffreep
pop
pop
jnp
lcall
add
lock
cld
mov
adc
add
data16
movsb
or
std
or
popa
jg
mov
add
cs
cmpb
adc
mov
or
inc
cmp
cld
imul
rcll
mov
xor
push
cmp
jp
hlt
testl
push
movsl
repnz
mov
sub
sbb
xor
lods
mov
adc
aam
mov
cmp
sub
fildll
cmp
add
daa
xchg
xchg
inc
out
bound
fcmove
fsubrl
lods
jmp
mov
push
daa
mov
inc
loopne
push
subl
lds
jbe
clc
sahf
clc
movl
mov
sarb
sub
mov
mov
shr
stc
and
in
inc
out
push
lock
cmc
fbld
xchg
fcompl
cmc
neg
add
sbb
daa
lret
out
ret
ror
jo
cmp
pop
adc
xlat
movsb
movsl
test
movsb
xor
mov
push
dec
sub
pop
sub
rclb
lahf
jne
fcompl
push
jecxz
xchg
inc
gs
mov
push
outsl
outsl
insb
cmp
pop
and
in
sub
and
jnp
outsb
pushf
adc
adc
pop
push
dec
ror
test
out
mov
jnp
cmp
jle
outsb
loop
cmp
and
mov
push
out
mov
push
mov
test
cmp
mov
and
add
pushf
addr16
push
pop
nop
pop
cmp
in
inc
addr16
inc
sar
cmp
pop
fildl
xchg
lret
outsl
pop
or
adcl
lahf
or
adc
outsl
pushf
sti
hlt
or
mov
les
push
push
mov
pop
movups
arpl
adc
popf
shr
xor
pop
sbb
ljmp
mov
arpl
ja
dec
int3
test
out
pushf
fwait
insl
mov
std
jbe
icebp
jne
sub
cmp
jge
inc
lods
mov
xchg
repz
lods
or
mov
stos
lret
adc
cmovp
push
and
icebp
or
lret
pop
adc
sub
pushf
ret
pop
mov
loopne
add
jno
sub
out
cmpsb
sbb
pop
dec
mov
add
repz
out
sbbl
add
popa
mov
mov
int
cmp
push
push
cmp
xchg
pop
mov
scas
lret
adc
push
sbb
out
mov
ucomiss
ds
lret
ss
insl
inc
adc
pusha
xor
std
lret
mov
cmp
rcr
loope
dec
add
lods
push
ficoml
lcall
dec
sahf
sti
sub
aad
adc
dec
xor
call
lahf
mov
mov
jnp
je
jae
out
mov
cmp
or
es
xchg
ja
jmp
push
arpl
jecxz
mov
mov
movsl
push
test
xorl
jns
clc
mov
ja
rcrb
pop
cmc
ds
mov
pop
sub
push
pop
loop
fmull
xchg
scas
rclb
push
fmull
scas
pusha
test
and
aam
js
fwait
xlat
fdiv
es
fucomp
dec
jne
lods
aad
sti
lahf
push
and
inc
mov
cmp
rolb
out
dec
popa
shl
dec
sbb
test
mov
outsl
popf
mov
mov
mov
jne
popf
xor
aad
jns
shl
jg
xlat
loope
aam
popa
stc
clc
push
outsl
add
loop
xchg
stos
dec
cmp
lahf
lahf
inc
adc
jp
lock
jecxz,pn
shll
lods
inc
mov
test
aad
imul
push
mov
and
das
je
push
jmp
dec
je
lret
and
xor
pop
fistl
adc
push
cmc
pop
loopne
ret
lock
ljmp
je
jnp
add
jmp
mov
cmp
inc
ret
inc
cmp
or
fidivl
sbb
aam
lock
sbb
iret
call
fisttps
pop
shlb
xchg
mov
adc
xor
mov
lock
inc
cmp
or
or
data16
aaa
movsl
sbb
adc
inc
jne
shr
cld
movsl
fcmovne
rorl
icebp
lods
add
scas
bound
pop
ret
mov
lods
in
clc
sbb
push
jp
loopne
sub
sub
cmp
xchg
xor
mov
mov
mov
push
das
in
jnp
dec
push
jae
push
out
and
orb
mov
je
ljmp
add
push
loope
jecxz
es
scas
test
or
outsb
icebp
imul
mov
fucomi
sub
sub
popf
stc
pop
sub
xorl
decl
leave
ja
scas
ss
mov
xchg
xor
adc
in
pop
pop
sbb
mov
mov
enter
xchg
pushl
fadds
in
out
sbb
push
popa
imul
int3
sahf
jae
mov
jg
sti
cmp
add
hlt
int3
les
ficoms
cmp
push
mov
and
jg
loope
sbb
mov
xor
rorl
mov
rcl
imul
mov
mov
repnz
repnz
pop
ret
popa
out
or
mov
fwait
rol
popf
push
push
mov
stc
pop
rcl
sahf
outsl
jno
out
push
push
hlt
sbb
push
add
xor
or
mov
mov
jo
js
jne
cmp
xchg
push
fistps
pop
scas
mul
cmp
mov
test
cmc
aaa
cltd
pop
push
popf
ror
fldt
cs
sti
pop
lea
lods
pop
and
pop
mov
sub
loope
pop
cmpsl
insl
push
out
add
mov
cwtl
lret
outsb
pop
or
sub
ja
mov
jg
dec
lcall
inc
inc
cmpsl
mov
xchg
adc
mov
xchg
scas
xor
adc
add
sbb
stc
sub
das
daa
cmpsb
push
decl
push
mov
lcall
push
leave
jecxz
push
sbb
push
add
and
test
lea
clc
mov
bound
scas
arpl
mov
aad
inc
jg
movsl
xchg
repnz
in
scas
outsl
and
fistps
push
push
push
inc
insl
cmpsl
dec
xchg
rcll
mov
pop
insl
std
in
jae
jl
inc
inc
rorl
or
cli
jle
xchg
dec
ljmp
movsl
or
jbe
mov
sub
hlt
popf
es
sahf
ret
in
ret
testl
ret
sbb
xchg
sahf
sbb
int3
mov
insl
ja
test
push
gs
lods
mov
enter
fistps
mov
bound
mov
mov
orb
xor
rorb
sbb
add
fistpl
sub
cld
jmp
ret
and
cmp
or
xor
adc
adc
pop
rclb
adc
sbb
sub
xor
jns
cmp
sbb
pop
pop
mov
ret
and
xchg
fsubrs
jle
cmp
mov
rcll
push
sub
sub
push
loop
cmp
adc
lea
mov
frstor
mov
dec
xchg
cld
loop
in
cltd
inc
pop
inc
cmp
and
mov
out
pop
jo
mov
ss
nop
or
mov
sbb
fisubl
outsb
xchg
mov
fldenv
out
pop
xor
jo
xchg
xor
push
icebp
aaa
xchg
outsl
jne
inc
jl
repz
xor
xchg
lock
out
push
loop
les
fdivl
pushf
inc
movsb
lock
mov
in
lret
pop
mov
mov
mov
adc
dec
cld
js
xor
lret
arpl
into
enter
rcrl
push
xchg
int3
sbb
mov
flds
in
out
adc
cmp
lea
pop
fbld
mov
pop
fsubrs
lds
insl
push
xchg
sub
aad
mov
mov
or
mov
sbb
pop
scas
mov
dec
cltd
xchg
test
outsl
or
xor
fcompl
push
addb
jle
imul
adc
mov
pushf
aas
sbb
xchg
test
out
lahf
lock
pop
fnsave
mov
fadd
js
rolb
scas
repz
push
mov
mov
jno
js
insb
sbb
int3
mov
inc
push
adc
mov
jmp
cmpsb
movaps
inc
mov
and
mov
jg
ja
movsb
cmp
sahf
pushf
ret
mov
lea
xlat
mov
dec
cwtl
mov
ret
das
inc
outsb
in
scas
daa
das
sbb
and
lock
inc
and
xchg
pushf
mov
pop
int3
add
inc
xchg
and
gs
cmp
jns
mov
mov
push
fisubl
mov
inc
in
adc
pop
ja
pop
inc
lahf
or
jb
dec
xor
sbb
xchg
inc
shll
push
mov
jo
inc
push
pop
xchg
and
push
pop
push
call
in
push
cmp
xchg
in
out
jge
scas
pop
xchg
mov
lea
in
jb
imul
xchg
pop
bound
loop
lds
xchg
cs
lds
push
pop
xor
jno
push
shll
pop
dec
je
mov
fdivl
pop
cmp
inc
push
jle
scas
in
xchg
sbb
jle
fnop
xchg
inc
jmp
sub
and
cli
lods
pop
sbb
mov
jns
aas
pop
lock
mov
adc
test
add
mov
dec
xchg
dec
test
sbb
mov
mov
xchg
mov
jae
mov
push
mov
cmpsb
pushf
adc
in
jae
pusha
lcall
jns
push
cmp
jle
inc
cmp
fdivl
push
into
shll
push
inc
subl
push
dec
sub
ljmp
insl
add
rcrb
xor
leave
pop
mov
scas
dec
jne
hlt
or
sti
jbe
or
ss
mov
mov
or
sub
and
sahf
data16
mov
movsb
or
mov
jno
cmpl
mov
stos
pop
aam
ja
fs
cmp
fucom
inc
lret
and
inc
add
out
lds
test
popf
dec
imul
cli
push
jae
jg
shrl
add
mov
in
rolb
jbe
mov
inc
movsl
adc
mov
xor
sbb
push
mov
inc
test
xchg
jbe
or
lret
ss
xchg
call
push
lret
loop
mov
cs
and
push
hlt
or
xor
adc
pop
neg
push
and
sbb
loope
outsl
jae
ja
add
jp
js
mov
xor
jp
data16
sub
push
inc
jmp
ja
mov
mov
js
pop
jns
ds
cmp
jno
insb
icebp
mov
das
pop
inc
xchg
xor
sbb
xor
add
mov
add
xchg
clc
lods
pop
arpl
and
add
pop
dec
lahf
pop
xchg
fisubrl
mov
xchg
sbb
push
sub
add
mov
das
mov
xchg
push
mov
sbb
dec
aad
sti
mov
fdivl
repz
out
push
pop
fs
jb
adc
mov
push
mov
leave
cld
cmp
jmp
stos
sbb
jae
ss
nop
inc
sbb
insl
out
lds
mov
lret
dec
xacquire
push
popf
out
jnp
pop
mov
pop
mov
mov
xor
andps
mov
shrl
out
insl
push
insb
fisubs
in
dec
sub
sub
cmp
push
and
cli
scas
loope
sbb
lods
push
rcrl
shll
sub
ljmp
push
lret
inc
dec
push
clc
aaa
gs
jne
cltd
mov
cmp
fnstenv
add
cmp
inc
xchg
and
pop
add
nop
jge
fnstsw
add
adc
cmpsb
sbb
push
fcmovu
sbb
sub
jns
sub
mov
mov
ja
dec
jg
subl
sbb
mov
sub
mov
vpcmov
or
sbb
jge
lds
lret
xchg
aam
dec
mov
sbb
outsl
enter
ret
mov
mov
stos
imul
push
mov
mov
jl
imull
sbb
rorl
adc
mov
sub
lahf
sub
sub
dec
idivl
call
or
push
add
inc
ds
xchg
xchg
mov
ret
stos
cltd
daa
test
shll
mov
insl
mov
imul
sbb
pop
mov
or
mov
sub
jb
or
movsb
gs
addr16
lcall
pop
rcr
and
test
aad
lds
in
inc
push
sbb
push
mov
scas
dec
cmp
lock
jb
xorl
xor
fsubs
int
nop
inc
mov
jne
inc
cli
movsl
stos
jl,pn
mov
add
add
mov
pop
jmp
and
jb
sub
mov
cmp
out
sub
jmp
mov
jnp
xchg
add
jp
xor
or
inc
mov
pop
jp
aas
pop
mov
jne
add
sub
or
lods
mov
lea
aaa
lcall
fdivr
xchg
jnp
jns
or
rcr
and
sbb
in
cwtl
inc
dec
movsb
adc
insl
adc
cmpsb
rcl
mov
and
stos
pusha
imulb
imul
aaa
jl
shll
push
cmp
jnp
lock
jl
xor
int3
mov
xor
aad
mov
inc
les
jo
sub
xchg
stos
dec
out
ret
pop
pusha
enter
xchg
lods
jp
sbbb
bound
inc
add
fdivrp
repnz
test
scas
sub
add
push
orb
cmc
push
sbb
or
mov
sub
xor
in
push
and
push
sbb
push
fwait
shrb
or
mov
pushf
pop
dec
jg
sub
negl
xchg
push
lods
pop
in
bound
enter
adcb
adc
push
pop
cli
dec
enter
mov
jno
jmp
daa
jnp
mov
pop
pop
cld
adc
sbb
fsubrl
push
dec
push
fsubrs
inc
cwtl
mov
outsl
cmp
push
in
sbb
outsl
cmpsb
popa
pusha
cmp
add
sub
adc
dec
cltd
mov
gs
in
jmpw
rcrl
push
xchg
mov
or
icebp
sbb
pushf
cmp
fsubp
movsl
or
pop
mov
inc
bound
add
lds
movsl
inc
hlt
lea
dec
mov
test
lds
les
es
mov
push
dec
lahf
or
into
int3
inc
pop
into
outsl
adc
xor
into
inc
mov
fildl
das
cmp
mov
test
mov
lods
loop
mov
sub
add
popf
rcrl
pushf
mov
add
mov
push
in
daa
out
mov
pop
pop
jns
lret
sbb
push
out
pop
pop
enter
sub
loope
das
rol
notb
rorb
push
mov
inc
dec
cmpsb
pop
jl
mov
pusha
sahf
in
push
setbe
cmp
mov
cmp
addr16
cwtl
addr16
mov
xchg
xchg
mov
mov
inc
pop
push
xchg
or
pop
and
push
lcall
xchg
pop
dec
ret
jae
add
aam
adc
or
rorl
pop
or
or
jg
popf
aam
sbb
mov
idivl
pop
jge
rorl
scas
xor
mov
sbb
adc
mov
mov
xchg
push
imul
and
addr16
jne
pusha
or
mov
cmp
push
outsb
xor
int3
jnp
ja
mov
popf
sbb
lcall
je
das
subl
call
xor
popa
sub
and
mov
pop
int
nop
ss
insb
dec
sub
dec
std
xor
stos
sbb
xor
cwtl
les
xchg
inc
adc
jae
mov
add
pop
xchg
pop
jo
mov
jne
sbb
dec
outsb
fists
cmp
xchg
push
sbb
std
xor
bnd
pop
mov
int3
out
imull
pop
inc
cmp
inc
mov
leave
inc
jge
loope
sahf
cmpsb
into
pop
jg
and
mov
xor
ror
movq
inc
jle
outsl
sub
jno
xchg
ss
leave
stc
mov
push
lds
xor
cmpb
ds
fnstenv
mov
inc
dec
cmp
fdivs
dec
hlt
mov
xchg
cwtl
sti
jbe
aas
leave
ljmp
daa
or
cmp
sbb
sbb
adc
aad
ret
xchg
leave
and
jbe
xchg
inc
push
adc
adc
dec
jp
or
mov
adc
in
scas
sub
rorb
fsubr
gs
fs
hlt
pop
sahf
push
push
shlb
mov
push
xchg
xchg
sbb
popl
rsm
mov
mov
stos
pop
repnz
push
sbb
test
xor
push
xor
ret
pop
xchg
clc
jmp
pop
mov
mov
lahf
push
imul
mov
jle
ret
cmp
cmp
mov
enter
inc
mov
mov
sbb
mov
mov
scas
in
notl
aas
cs
mov
jge
pop
and
fcoml
add
out
arpl
cmp
inc
repnz
je
jbe
mov
test
punpcklwd
xchg
sub
test
test
jnp
aas
stos
inc
nop
in
xchg
mov
fldl2t
aam
push
ljmp
fnstenv
popa
and
pop
rol
test
rcr
nop
xor
je
or
aaa
mov
mov
pop
xchg
jge
add
loope
cmp
xchg
movsl
sub
insl
push
pop
adc
xchg
sub
inc
stc
addr16
lcall
add
scas
sbb
mov
lahf
stos
jl
pushf
pushf
stos
push
in
inc
pop
mov
mov
inc
in
sbb
mov
sub
ficoml
mov
pop
int3
jmp
jae
bound
addl
pop
and
int
rclb
mov
and
sbb
adc
pop
push
imul
aam
sbb
jg
adc
mov
sbb
mov
mov
mov
lods
pop
mov
and
out
hlt
out
xchg
inc
shlb
xchg
sbb
xchg
pop
jmp
and
int3
frndint
pop
imul
inc
ss
ljmp
aam
and
inc
cmp
inc
mov
inc
out
jbe
mov
mov
sbb
pop
rcrl
jo
xchg
aas
scas
inc
or
push
add
shrl
mov
sarl
dec
jl
repnz
adc
xor
repz
lahf
int3
daa
je
mov
popf
and
incb
sbb
fwait
scas
push
push
test
aam
lods
pusha
mov
lea
scas
xchg
adc
jp
fldt
in
repz
mov
shrb
aaa
dec
loopne
jg
jmp
outsb
mov
and
xchg
test
cmc
insb
push
test
mov
das
orl
jae
inc
shrb
in
jns
mov
push
pop
cltd
les
sbb
insb
rorb
cld
nop
jb
in
popa
sub
cmp
inc
jg
popf
stc
adc
jmp
dec
lods
mov
pop
rcrl
xchg
ret
mov
mov
sub
inc
pop
pop
pop
fwait
xchg
inc
movsb
roll
jmp
jb
hlt
or
inc
inc
push
faddl
imul
mov
ret
mov
lea
cld
stos
lock
jbe
mov
push
jp
jle
pop
popf
repz
icebp
test
mov
sub
cwtl
movsb
xchg
mov
or
add
mov
or
jne
les
bnd
jbe
sbb
test
or
pop
mov
push
data16
xchg
hlt
imul
jge
inc
push
ja
rcr
inc
xchg
cmp
dec
jno
rorb
into
ja
cmc
add
mov
xchg
add
scas
inc
dec
push
hlt
xchg
shl
aad
mov
dec
push
jo
sbb
testl
adc
in
xchg
pusha
cwtl
mov
into
fildll
rolb
inc
int
push
xchg
xlat
repz
sub
pop
xchg
mov
insb
and
mov
add
jle
lods
repz
mov
mov
ljmp
xor
pop
jns
bswap
daa
or
sub
jge
mov
mov
adc
xchg
jmp
sbb
add
fldl
sbb
push
push
out
adc
out
xor
cltd
inc
daa
flds
and
sbb
int3
pop
es
stos
ds
aaa
lret
mov
mov
ljmp
test
inc
movsb
loop
outsl
out
cmc
rcrl
nop
outsb
push
adc
pop
test
lret
jp
mov
leave
cld
jbe
add
and
add
cs
dec
cmp
enter
or
jmp
push
jo
xchg
shrb
inc
fucomip
mov
cmp
or
adc
outsl
mov
pusha
xlat
neg
jp
xor
or
in
jp,pt
lock
sbb
sub
ds
push
pushf
xchg
add
and
sub
rclb
out
pusha
mov
popa
vmread
lock
cmp
test
inc
mov
scas
or
jmp
mov
jge
test
outsl
daa
or
adc
pusha
pushf
and
dec
insl
les
cmpsb
mov
dec
insb
xlat
popf
pop
fisttps
pop
mov
cmp
fstpl
and
xor
js
loop
pop
adc
pop
in
roll
add
lret
rcrb
test
call
dec
sti
pop
lods
cltd
inc
sbb
jl
sub
xor
scas
mov
je
fwait
mov
mov
pop
rorb
out
cmp
andb
xchg
out
push
mov
test
or
jns
data16
fcmovnu
rorl
jp
mov
push
inc
mov
rcr
mov
xchg
or
inc
and
cltd
movl
mov
pop
icebp
sti
inc
lods
pop
xchg
lahf
int
mov
dec
sub
push
lret
scas
cmp
std
inc
push
xchg
icebp
or
hlt
pop
mov
push
cmpsl
dec
fsubrp
gs
lods
push
mov
fcmovb
lock
jg
rcrb
jmp
or
les
push
jae
sub
add
stos
outsl
dec
das
loope
xchg
cmpsb
lods
das
add
adc
cmp
mov
jp
and
jmp
lods
sbbl
sbb
mov
cmpsl
stc
pop
xchg
inc
xchg
out
jmp
and
or
cmp
jg
das
iret
dec
test
popa
cmp
outsl
loope
xchg
push
cmp
or
dec
cmp
out
jae
push
pop
add
jge
mov
lea
lret
cmp
loope
mov
inc
leave
cmpsb
stos
cld
xchg
jg
sar
mov
mov
mov
mov
test
in
add
dec
mov
std
xchg
insb
dec
ja
cwtl
in
sub
or
pop
cmp
or
es
and
ja
lahf
mov
data16
jne
or
mov
sub
ret
cmpsl
xchg
push
mov
push
in
mov
and
mov
mov
inc
test
jg
loope
in
out
rcl
incl
lds
insl
adc
es
and
push
mov
xchg
inc
mov
dec
rorl
sub
jnp
xchg
xchg
xor
lret
mov
xchg
jecxz
or
sbb
sub
lods
ss
dec
mov
ret
jo
adc
les
and
mov
loop
shll
and
mov
cmp
test
movsl
xlat
sub
push
pop
fistl
popa
xorb
mov
cmp
xor
ds
mov
mov
xchg
in
push
lods
cmpsb
pop
mov
iret
cmpsb
add
mov
out
out
adc
inc
ret
stos
or
dec
adc
push
and
dec
daa
cmp
add
cmp
mov
hlt
leave
mov
inc
or
sbb
lea
rorb
push
int
bound
stos
xor
in
pop
sub
sub
out
stos
loope
testl
mov
pop
jl
arpl
bound
dec
jb
mov
cld
xchg
xor
rcr
add
scas
xor
aam
insl
test
jb
xchg
cmp
fdiv
mov
xchg
push
fidivl
movsb
sub
or
jmp
inc
pop
inc
nop
xchg
mov
xchg
dec
lcall
adc
sub
inc
rorb
fldt
or
pop
xor
sub
fstl
mov
cwtl
imul
scas
sub
inc
sub
jnp
iret
punpckhbw
dec
add
sub
sarl
mov
adc
sbb
jg
xchg
adc
lcall
and
adc
test
adcb
pop
lock
jbe
mov
push
mov
jmp
lods
cmp
xchg
scas
mov
xor
jns
out
sbb
int3
mov
enter
push
scas
lcall
xorb
bound
sub
push
faddl
inc
cmpsl
popf
inc
sub
popa
movsl
fistpll
in
mov
clc
loop
dec
jbe
into
cltd
inc
push
out
popa
add
clc
clc
sarl
fdiv
inc
flds
lods
roll
call
mov
jae
xor
test
mov
mov
movsl
scas
jmp
jp
sbb
mov
xchg
loopne
inc
dec
add
jnp
cmp
addr16
sti
dec
fnsave
dec
in
push
adc
cmpsb
in
test
mov
push
decb
cwtl
insl
mov
and
mov
dec
dec
stc
orb
aad
jbe
sbb
pop
xchg
pop
imul
xchg
sub
cld
pop
or
outsl
mov
cwtl
testl
mov
stos
ds
das
adc
jg
pop
out
cmc
mov
xchg
js
jp
fs
leave
jne
orl
mov
cmp
jno
push
je
inc
push
and
out
mov
mov
cltd
loop
iret
lods
push
xchg
or
dec
insb
and
dec
in
sbb
mov
xchg
inc
adc
mov
popa
push
xchg
insl
xchg
inc
xor
and
cli
xchg
sarb
dec
sbb
fsub
cmpsl
ficoml
lods
adc
xchg
dec
push
jo
cmp
arpl
push
mov
jae
in
mov
lds
xchg
dec
adc
pop
dec
pop
pop
sub
push
or
mov
and
cli
mov
gs
cmp
inc
pop
into
fwait
push
jmp
or
inc
sbb
ds
in
rcll
pop
push
icebp
fsubl
cmp
pusha
sub
mov
imul
jge
pusha
outsb
jecxz
dec
xor
mov
dec
xor
cli
jmp
out
cmp
pushf
inc
pop
cld
ret
fs
imul
fstps
mov
pop
mov
leave
cmp
scas
jecxz
or
fs
mov
andb
sub
dec
lcall
test
hlt
mov
aas
xor
mov
xchg
push
aaa
pop
push
cltd
in
pop
jno
scas
add
push
dec
scas
sbb
out
dec
insb
int3
jns
mov
pop
lahf
out
stos
insb
pushl
mov
pop
push
xchg
mov
push
outsb
data16
pop
cmpsl
inc
lcall
or
mov
dec
flds
fwait
cwtl
sti
cli
imul
mov
pushf
js
jae
jmp
cs
xchg
xchg
lret
lret
sbb
ret
mov
or
cli
cltd
mov
cs
ljmp
pusha
repz
mov
adcl
nop
xor
insl
mov
sbb
imul
mov
mov
jnp
das
add
push
inc
xchg
in
mov
inc
mov
mov
sub
ljmp
xchg
xchg
movsb
and
inc
or
jbe
mov
jb
adc
dec
pop
packuswb
pop
stos
sbb
int
pop
mov
data16
sub
into
pop
or
mov
mov
mov
xchg
jl
mov
lods
lret
shr
aam
cs
cld
sbb
or
dec
in
shl
push
enter
inc
dec
ja
jno
cld
pop
inc
sbb
jmp
mov
cli
pushf
jg
cmp
push
cwtl
pusha
and
fnsave
outsb
xchg
mov
sbb
inc
fwait
cmc
sahf
jns
inc
popf
jbe
arpl
fistpll
mov
pop
pop
cmp
adc
scas
and
out
movsl
sub
fwait
cmp
sti
jmp
cmp
mov
dec
push
pushf
xchg
cmpsb
xlat
and
sbb
jae
cld
aad
fmuls
mov
shll
shlb
dec
ljmp
stos
cmp
mov
cmp
xor
sub
rorl
rorl
cs
adc
in
into
lahf
adc
push
cmp
mov
sbb
fsubrs
pop
loope
push
xor
cs
xchg
addl
shll
adcb
sub
aam
mov
in
xchg
cli
jae
mov
dec
fwait
pop
movsb
pop
mov
js
cwtl
or
push
sbb
jb
gs
mov
xchg
inc
mov
in
mov
or
lock
aam
sub
push
xchg
push
test
fstl
sbb
loope
push
sub
mov
fdivr
ss
inc
sbb
add
lahf
addb
cmp
movsb
ss
xchg
adc
mov
cmpsl
gs
cmp
and
stos
push
jmp
push
jmp
sbb
jp
inc
ret
mov
push
or
test
pop
cmp
inc
mov
pop
decl
shlb
cmp
out
xchg
lods
mov
cli
fcoms
or
int3
xchg
lock
leave
mov
ljmp
jb
rep
jns
imul
mull
sbb
jns
jl
dec
jnp
cmp
pop
pop
jbe
outsl
in
xchg
ljmp
mov
lcall
mov
sbb
int
pop
jae
jbe
dec
pop
lret
pop
leave
mov
pop
lahf
or
icebp
clc
dec
dec
ret
js
mov
add
fs
mov
ret
mov
lea
mov
lods
push
pop
pop
mov
inc
insl
add
neg
dec
push
sub
inc
push
push
pop
loopne
rcl
sti
sub
jbe
sbb
or
in
pop
push
mov
mov
cmpsb
and
sub
scas
cmpsl
ret
jbe
cmp
movsb
push
jge
mov
push
sub
mov
roll
mov
iret
mov
cmp
jl
xor
fidivrs
cmpsl
pop
ret
sub
fldcw
pop
lcall
xchg
adc
cs
adc
ret
dec
cmp
sub
xlat
xchg
adc
out
sub
mov
sbbl
xor
inc
add
je
in
cwtl
and
enter
inc
push
xor
dec
xadd
pusha
push
outsb
hlt
add
dec
pushf
call
mov
rdtsc
mov
mov
pusha
roll
mov
xor
lods
jno
and
int3
or
sti
mov
xor
add
mov
bndcl
sub
xor
push
mov
add
jne
and
push
dec
inc
sbb
push
dec
pop
jecxz
mov
dec
xor
sub
mov
jns
out
sbb
ja
aaa
neg
xchg
aaa
sbb
jo
in
and
js
push
adc
jp
loop
in
or
xchg
hlt
ds
xchg
inc
mov
hlt
push
xlat
mov
mov
add
shlb
divb
pop
leave
cmc
dec
xchg
aas
mov
arpl
test
mov
mov
les
adc
aas
mov
dec
xor
sti
mov
int3
xchg
jge
pop
dec
add
ss
aaa
push
mov
cmp
and
aas
addr16
lret
pop
or
inc
jmp
mov
lods
mov
mov
xor
xor
mov
mov
adc
sbb
int
into
into
jecxz
idiv
adc
jno
fistpl
test
push
xchg
mov
fildl
adc
lret
test
cmp
sbb
mov
cmp
hlt
ficoms
mov
adc
aad
mov
cli
jb
lds
out
pop
rcrb
int3
push
cli
rcrb
adc
mov
inc
sti
jmp
mov
in
adc
inc
xchg
cmp
pop
popf
or
inc
scas
pop
shll
adcl
push
mov
xchg
cmp
in
cmp
fiadds
sub
add
sbb
leave
push
pop
xor
push
bound
mov
stc
mov
ja
jbe
pop
cmp
push
int3
jnp
in
sub
stos
jle
cli
hlt
hlt
dec
sbb
cmp
sti
icebp
mov
jle
xchg
out
jnp
repnz
rcl
mov
mov
dec
mov
inc
sbbb
pushf
js
roll
or
mov
movsb
lods
cs
xor
pop
sub
xlat
jae
xlat
sub
and
mov
adc
push
out
int3
inc
cli
sbb
adc
cmc
inc
pop
xor
fcmovb
dec
shlb
outsb
fldt
decb
addr16
ja
sti
push
and
cs
iret
out
mov
sahf
cmp
sub
jmp
mov
cmp
xor
xor
jp
mov
or
mov
push
cmp
and
mov
pop
lods
mov
out
aas
add
aam
movsb
ss
fwait
in
push
push
sub
imul
adc
mov
xor
fisubl
mov
ficoms
cmc
ja
pushl
xor
outsl
lcall
or
test
adc
jge
fdivl
shrl
jns
data16
jb
push
aas
scas
in
jecxz
lds
in
jae
and
xchg
ret
jae
mov
jl
jae
and
mov
arpl
or
mov
inc
push
aam
and
sub
imul
xor
out
mov
shl
icebp
in
repz
or
in
cmp
mov
adc
cmc
ja
fimuls
test
jae
and
pop
pop
xor
adc
mov
in
pop
xchg
dec
out
aad
mov
test
cmp
push
iret
cwtl
repz
cmc
sahf
dec
int3
mov
cmpb
and
sub
imul
jbe
lods
lret
pop
inc
dec
push
mov
xor
jbe
mov
in
ror
push
je
sub
cwtl
lds
dec
mov
bound
mov
xchg
jae
pusha
mov
out
in
bnd
cmp
in
lret
ficompl
clc
push
cmp
cmp
sbb
gs
push
jl
pop
jne
sbb
mov
repz
jae
int3
push
mov
movsb
leave
sub
sub
mov
add
je
nop
bound
jae
mov
push
push
lcall
in
call
leave
clc
pop
fmuls
add
inc
out
inc
stos
stc
int
and
xlat
ret
push
or
hlt
xchg
inc
add
arpl
mov
je
daa
enter
add
jecxz
sbb
scas
pusha
popa
call
fisttpll
jmp
adc
cmp
fucomip
sbb
insl
or
lods
out
jae
bound
cld
xchg
outsl
jo
fs
lea
stc
cld
in
mov
mov
iret
rol
loope
cmpb
add
stc
repz
add
icebp
mov
xor
pop
repnz
mov
mul
mov
mov
and
sahf
lret
sub
dec
pushf
push
ja
push
adc
in
mov
xchg
add
imul
mov
pop
dec
xchg
jle
push
std
add
test
in
mov
fdiv
loop
add
gs
mov
lea
roll
movsl
ds
add
mov
test
test
xor
aam
mov
jmp
sub
mov
xchg
and
sub
mov
loope
gs
in
ja
jae
inc
jp
inc
ds
lea
lret
ret
mov
dec
mov
out
jmp
dec
xor
xchg
cs
mov
mov
insl
ljmp
adc
lcall
jo
pop
inc
pop
shlb
push
push
jg
jp
push
xchg
fcomps
pop
sbb
out
and
push
pushf
add
sti
cmp
cli
jne
bound
mov
cltd
hlt
push
aas
and
lret
andl
stos
mov
sbb
test
ljmp
inc
cmpsl
repnz
fldl
outsl
jp
out
mov
cmp
movl
lret
and
fwait
aad
pop
adc
std
dec
xlat
adc
insl
push
jb
rolb
inc
jno
rcl
pushl
inc
sub
ljmp
mov
xor
dec
push
jl
adc
inc
cmp
nop
out
nop
push
andb
int
fistpl
movsb
into
cmp
xlat
loope
mov
jo
ret
mov
roll
stc
push
mov
pop
aam
sbb
call
gs
std
push
pop
jo
inc
mov
xchg
dec
cmc
cmp
out
popf
or
add
in
mov
inc
rclb
sub
mov
xor
movsb
mov
repz
sahf
push
out
inc
push
fisttps
xor
stc
jnp
or
xchg
fiaddl
add
out
pop
lahf
xorb
sbb
and
xor
jne
mov
inc
push
cmp
cld
adc
push
cmp
rorb
cmovl
repnz
scas
pop
xchg
xor
pushf
mov
inc
add
mov
into
cmp
insb
jmp
gs
loopne
movsb
js
mov
cmp
cmc
div
mov
les
push
mov
push
int
xchg
push
mov
jecxz
pop
xchg
loopne
std
out
hlt
out
and
aam
rcll
push
sbb
add
pop
andb
out
arpl
jnp
jb
clc
cmpsl
mov
jecxz
xor
push
cmp
push
scas
mov
push
out
lock
arpl
xor
jle
adc
jmp
push
fdivl
aaa
stos
ds
or
sbb
loope
repz
mov
mov
sarb
popl
aad
je
cmp
jb
push
xchg
hlt
fidivl
sbb
or
fstpt
dec
jge
negl
sbb
stc
bound
push
call
dec
or
jecxz
cmpsb
or
dec
mov
hlt
adc
jbe
gs
sbb
mov
aad
cmc
loopne
mov
inc
out
xchg
sub
cmp
sahf
cs
mov
jbe
mov
pop
jg
jge
nop
je
inc
sub
loope
enter
cmpsb
sub
into
xchg
int3
sbb
dec
and
dec
pop
rolb
pop
jle
or
rcl
add
lock
pop
inc
adc
shll
js
int3
pop
mov
xchg
cmp
xchg
fsts
ja
or
pop
cmp
sbb
adc
jnp
mov
test
movsb
lods
push
push
sub
push
adc
xchg
add
cwtl
mov
shl
cmp
ror
out
pop
sbb
pusha
or
push
push
xchg
adc
mov
mov
mov
mov
shl
bound
addr16
aam
fcoml
rclb
inc
stc
push
or
arpl
ds
inc
jle
add
das
out
outsb
inc
nop
mov
enter
fists
push
pop
mov
sbb
sub
ret
popa
and
cltd
popa
stos
addr16
mov
iret
adc
or
fists
cltd
shl
xor
in
stos
lcall
and
std
hlt
das
or
add
cli
cmp
sub
or
mov
pop
fistps
sbb
xchg
mov
scas
sbb
lret
dec
cli
adc
mov
sub
filds
call
test
jb
sbb
mov
and
andb
adc
xlat
dec
lods
or
push
mov
inc
scas
in
fmull
shrl
data16
add
sbb
pop
jns
loopne
sti
and
cmp
fdiv
jb
cmc
dec
mov
push
mov
xorl
xchg
out
sbb
mov
jmp
testb
jo
scas
ljmp
or
push
and
rclb
out
jl
pop
sub
mov
cmp
dec
lock
fdivp
fisttpl
pushf
pop
sub
aam
pop
jnp
push
sub
mov
mov
test
rclb
or
stos
push
push
dec
dec
cmp
mov
xchg
xor
cmp
gs
loop
adc
fadds
rcll
js
xor
ret
pop
fs
fadd
xor
xchg
mov
mov
stc
or
iret
mov
rorb
xchg
lock
or
push
push
lret
shrl
and
pushf
inc
outsb
das
cmp
add
insl
mov
test
ljmp
push
pop
jg
mov
ss
dec
stos
div
or
lret
jle
cmp
stos
mov
mov
repz
add
movsb
fs
fcmovb
adc
test
lods
into
jmp
imul
push
mov
sbb
sub
jp
pop
movsb
pop
aam
mov
cmpsl
xchg
sub
mov
inc
lock
addl
mov
mov
cmc
movsl
jmp
jge
cs
cmpsl
pop
hlt
push
or
mov
iret
aas
xchg
daa
ljmp
stos
xchg
cmc
stc
sbb
out
xchg
pop
loopne
mov
push
fwait
cli
ds
pop
fcom
xchg
in
and
pop
sbb
xor
inc
jp
cmp
clc
lcall
jge
cli
mov
sbb
add
imul
mov
data16
xor
mov
inc
repnz
mov
cmp
xchg
mov
sarl
jg
in
adc
imul
or
cmc
shll
or
mov
out
sahf
iret
repz
aas
enter
xchg
and
sbb
lea
cmp
or
pop
mul
lods
aaa
decl
jg
sbb
inc
mov
add
xchg
pop
push
mov
inc
cwtl
dec
xchg
lret
sbb
sub
mov
mov
or
dec
push
mov
inc
push
sbb
stos
sbb
push
stc
dec
bts
iret
rcl
ss
inc
add
cmp
xor
mov
mov
pop
rcrb
lret
out
xor
add
out
scas
dec
fmull
dec
pop
fnstcw
or
lahf
jge
xor
out
lods
loope
xchg
pop
xchg
sbb
and
xor
cmp
not
icebp
pusha
inc
sbb
cwtl
mov
mov
and
mov
dec
je
orl
sbb
fisttpl
adc
lods
mov
stos
cmp
insb
inc
adc
pushf
pop
cmp
adc
adc
pop
in
cmc
cmc
sbb
loopne
push
movsb
add
push
movsb
ljmp
or
gs
jmp
fidivrs
jg
xchg
inc
mov
add
icebp
push
push
test
fcoms
mov
js
push
leave
leave
sub
imul
sti
hlt
imul
std
xchg
xchg
leave
repnz
movb
cwtl
lods
hlt
pop
les
leave
sub
mov
xchg
scas
or
push
pop
aaa
shl
leave
mov
in
fisubl
rol
cli
fcoms
ds
or
int3
push
stos
iret
aas
jb
in
nop
fnstcw
shrb
repz
sarl
cmp
rclb
rolb
inc
lods
mov
cltd
cmp
xor
jns
jne
and
out
ljmp
mov
bound
add
jmp
cs
cs
xor
mov
add
and
cmp
jnp
jae
sub
inc
faddp
xchg
push
es
clc
mov
sub
or
xor
mov
cmc
xchg
jne
adc
js
pop
call
xchg
notb
xchg
or
push
lret
inc
int
push
mov
add
sbb
and
push
mov
out
scas
jmp
test
adc
test
inc
sub
lods
je
int3
lods
mov
inc
jno
xchg
pop
sub
mov
jb
imul
xchg
hlt
add
sbb
mov
add
xor
mov
sbb
xor
push
out
mov
ret
ret
inc
sub
inc
push
mov
into
test
xchg
xchg
jmp
mov
ja
mov
mov
outsl
mov
mov
outsl
jecxz
and
jle
mov
negb
xlat
push
cmpsb
adc
lahf
sbb
rolb
sbb
pop
cmc
pusha
mov
mov
dec
add
je
aad
arpl
mov
test
faddl
mov
lcall
mov
pop
fsub
cmp
pop
sub
pop
push
scas
dec
cmp
mov
push
stos
add
shr
push
lods
es
add
mov
mov
cld
test
lods
out
sbb
push
in
and
jno
hlt
inc
mov
in
into
adc
loope
in
stos
dec
mov
lcall
testl
inc
cli
xchg
shl
mov
xchg
rorl
daa
cmp
add
mov
xorb
xchg
fistl
rcrb
int3
loope
mov
sbb
sub
mov
ds
push
sar
inc
xchg
push
cmp
addr16
sbb
xor
movsb
movsb
sub
scas
bound
ret
addr16
xchg
cmc
push
cmpsl
pop
or
imul
jmp
sbb
es
pop
aas
ss
dec
je
push
pop
pop
ret
jl
int3
cmp
cmpb
test
mov
mov
test
inc
pusha
or
fwait
jecxz
and
shrb
add
dec
adc
dec
icebp
xchg
cmpsl
mov
gs
loope
rorb
into
int
or
jmp
mov
xor
testb
dec
pop
stos
les
push
cmc
movsb
test
mov
fwait
mov
insb
xchg
add
pop
fdivrs
arpl
add
mov
mov
cmp
adc
mov
movsl
jle
xlat
dec
push
insb
mov
mov
or
dec
add
xchg
das
mov
xor
push
imul
into
repz
inc
ss
or
inc
rol
ja
test
sub
pushf
mov
or
jp
pop
movsb
push
xchg
push
jle
ret
xchg
stc
inc
xor
stc
and
mov
into
cmp
popa
adc
loope
mov
bound
ljmp
out
push
mov
int3
xor
fdivrs
pop
imul
stos
loop
mov
push
xchg
fistps
rol
out
in
sub
inc
hlt
cs
xchg
push
push
imul
ret
mov
out
icebp
adc
pop
or
mov
lods
fs
fistl
xchg
sub
push
adc
jb
dec
test
repz
xlat
jne
cmp
add
cmp
and
lret
cmc
sbbb
or
mov
mov
add
mov
pushf
jno
in
outsl
sub
daa
xor
and
and
adc
mov
sub
fsubrs
pushf
das
pop
jns
cs
lret
cltd
leave
ds
sbb
test
mov
movsb
aam
sbb
clc
cmp
hlt
xchg
loop
stc
mov
and
and
repz
shrl
pop
xor
jmp
sarl
test
pop
jge
or
stc
inc
iret
adc
sub
inc
inc
jle
in
jno
lods
stos
int3
sub
sub
lds
clc
scas
stc
pop
jns
mov
jo
in
mov
lret
int
cmp
outsl
add
sub
inc
cmp
pop
inc
cmc
movsb
shrl
int
mov
lret
mov
jmp
mov
std
cmp
cmpsl
insb
pusha
lcall
mov
shrl
mov
jne
push
ss
xor
mov
daa
sub
push
mov
push
jle
push
or
inc
popa
and
push
fwait
jecxz
dec
push
aas
std
repz
pop
sbb
insl
push
sub
pop
push
mov
pop
sbb
insb
xchg
aaa
aaa
push
rolb
iret
lods
jne
popf
fstl
popa
inc
pop
mov
int
inc
mov
test
xor
xor
movsl
pop
or
test
jne
inc
das
sub
mov
fmul
xchg
rcrb
out
fnstenv
push
push
jb
and
xchg
cs
sbb
xor
jle
mov
sub
mov
and
push
xor
push
dec
int3
and
pusha
xor
mov
xor
jmp
cmp
mov
xchg
mov
arpl
push
jl
dec
fsts
pop
arpl
mov
fs
fistpl
ret
je
aad
cmp
sar
push
push
in
std
sub
add
mov
inc
and
mov
sub
mov
jmp
mov
out
loope
xchg
lret
ljmp
loopne
mov
add
adc
adc
jnp
sbb
push
inc
sub
inc
sub
add
adc
repz
mov
add
push
mov
sbb
inc
cmp
inc
or
cmpsl
cmp
pop
pop
jle
shl
cs
or
pop
add
test
jmp
dec
mov
xor
out
js
pusha
into
cld
pop
in
jo
adc
in
push
mov
dec
push
ljmp
sub
sub
movsb
fyl2x
into
jnp
jl
cld
xor
ret
loope
call
pop
and
jnp
cmp
xlat
sub
or
xorb
cmpsb
imul
add
aaa
movsl
movsb
les
sub
push
and
in
in
inc
push
repz
or
mov
or
fistpl
dec
add
pushf
je
in
jle
or
sub
xchg
jns
pushf
fxch
es
push
lret
sbb
add
loopne
adcl
lret
jbe
pop
sbb
mov
lods
ret
cltd
in
ficompl
movb
inc
inc
outsl
adc
mov
ds
mov
jno
lods
mov
repz
lods
push
mov
inc
cld
pop
xor
jae
mulb
nop
cmp
xchg
sub
lcall
loopne
scas
xchg
es
add
pop
adc
andb
mov
insb
mov
hlt
dec
cmp
push
push
mov
add
mov
jg
push
mov
pop
adcl
jle
pop
pushf
adc
mov
mov
or
push
stc
aam
ficoml
aaa
push
out
stos
and
sbb
cmp
out
lea
jne
ror
adc
popf
mov
sub
add
mov
test
loopne
sub
fcomip
dec
int3
mov
jge
stc
bound
cmp
sub
insb
and
add
outsb
dec
dec
add
shl
mov
push
dec
out
adc
das
icebp
push
mov
and
cmpsl
push
xchg
xchg
iret
clc
lret
or
xchg
jo
outsl
xchg
mov
xor
inc
icebp
outsb
dec
out
jecxz
xchg
fwait
mov
clc
xchg
mulb
and
mov
xor
je
cmpsb
lea
inc
nop
ds
mov
shll
insl
sbb
cmpsl
cmpsl
mov
mov
incl
mov
adcb
incb
sub
pop
add
cmp
pop
xor
imul
jecxz
or
loope
xchg
cmp
data16
or
enter
mov
sbb
data16
cmpb
mov
mov
fiadds
insl
sbb
pop
jp
xor
xor
xchg
pop
and
inc
movsl
and
lahf
fcoml
sub
or
mov
sti
das
loop,pt
pop
das
in
out
lea
sub
ja
les
stos
xor
and
fs
mov
or
ret
lcall
ds
xlat
out
aam
pop
xchg
je
push
pop
mulb
sbb
sub
repz
adc
shll
push
sbb
sub
stos
enter
xor
mull
cmp
push
add
adc
cmpl
out
je
pop
jge
jmp
or
dec
cwtl
mov
and
adc
pop
push
and
lret
or
dec
pop
dec
push
hlt
sub
jl
imul
cli
stos
mov
cmp
pop
iret
cwtl
int3
jae
fnstcw
popf
xor
sub
cmp
fcoms
mov
rcl
xchg
lock
xor
mov
pop
leave
mov
and
or
mov
aad
test
sbb
jb
inc
hlt
loopne
mov
jb
cmp
movsl
dec
repnz
push
scas
xbegin
mov
jl
pop
frstor
cmp
jns
fnstenv
add
cmp
push
rorl
jb
das
data16
mov
cs
and
outsb
inc
adc
and
cwtl
push
stos
mov
sub
jo
pop
clc
movsl
movsl
movsl
sbb
dec
fwait
sahf
push
daa
add
sti
jg
outsb
sbb
mov
mov
rcll
and
jns
pushf
addb
test
xorl
shr
sub
adc
adc
out
push
jne
mov
pushaw
adc
sbb
add
outsl
orb
cli
adc
mov
lcall
pop
stc
pop
roll
ss
push
js
inc
add
dec
sub
push
aas
test
xor
out
dec
dec
repnz
xor
outsb
and
push
cmp
fisttps
daa
lock
mov
stos
cld
push
icebp
sub
xchg
out
xchg
fidivrs
fsubrl
cmpsl
loope
and
addl
fcoms
cs
jl
mov
pop
pop
lret
pop
mov
jbe
cmp
or
out
imul
cli
inc
in
pop
out
scas
fisubl
cs
lcall
jge
mov
mov
je
xor
dec
loope
cmp
test
adc
outsl
mov
popa
or
or
adc
or
mov
fs
pop
inc
sbb
stos
mov
push
mov
or
leave
sbb
lods
out
push
inc
in
adc
mov
lea
push
fisubrs
xchg
pop
mov
adc
jo
in
dec
jno
ja
sub
inc
stos
push
push
filds
scas
jnp
test
lret
xor
int
or
mov
mov
ret
int3
or
outsl
dec
hlt
mov
mov
sbb
xor
cmpsl
movsb
out
mov
insl
mov
mov
mov
pop
inc
aas
mov
mov
cmpsl
inc
jbe
insb
inc
loope
stc
jecxz
iret
lods
sub
cmc
rep
inc
xor
and
mov
or
hlt
add
jae
aaa
mov
icebp
aaa
icebp
jl
mov
xchg
scas
mov
pop
outsl
popf
fs
xchg
mov
jecxz,pt
fxam
jge
cmp
int
test
jno
mov
mov
lahf
push
lds
test
push
or
pop
pop
pop
mov
push
mov
aad
add
mov
loope
cmp
cld
ja
ljmp
add
mov
push
or
adc
aaa
or
sub
in
jo
push
hlt
xchg
sarb
rolb
pop
gs
xor
mov
sarl
sub
inc
lds
jne
test
inc
xlat
or
xchg
and
outsl
mov
nop
pop
jbe
mov
out
xchg
sbb
mov
cmp
leave
out
xchg
clc
fdivrp
add
inc
jae
sub
adc
push
iret
or
add
sub
in
iret
dec
sbb
push
jmp
jge
push
lcall
mov
adc
push
cmp
aaa
in
sub
es
adc
lret
push
sbb
and
es
xor
xchg
mov
adc
pusha
cmp
jo
push
int
out
jecxz
sahf
fsts
imul
sub
and
out
push
enter
cmpsb
adc
add
lock
adc
mov
mov
push
dec
xor
sahf
push
clc
aaa
repnz
inc
mov
push
in
push
in
xor
xor
leave
pop
cltd
mov
sub
test
cli
push
stos
fwait
cmc
test
cmp
add
cld
mov
push
xchg
scas
stos
stos
es
mov
lods
dec
jge
ret
inc
sahf
addr16
push
mov
mov
jno
and
pop
mov
stc
out
push
mov
jp
icebp
mov
sbb
inc
pop
xor
cmp
sbb
outsl
sub
scas
or
mov
xchg
jnp
testb
scas
dec
out
xorl
mov
stc
mov
pop
and
fisubrs
subl
sbb
jecxz
add
jp
lds
cld
jle
cmp
sbb
call
mov
insl
fnstcw
fs
xchg
fwait
dec
out
mov
push
out
stos
push
sub
scas
lret
ja
imul
test
sti
adc
or
mov
aad
outsl
cwtl
adc
add
leave
add
jb
out
jo
sbb
xchg
sahf
mov
insl
dec
jns
mov
add
cmp
insl
inc
idivl
sahf
and
inc
bound
or
test
inc
push
sarb
das
inc
aas
inc
dec
adc
icebp
cli
pop
testl
sbb
xchg
rorl
jnp
rolb
aam
mov
fs
iret
add
call
fsubr
movsb
jmp
aas
bound
ds
js
mov
imul
push
xchg
nop
sbb
xor
fnstcw
mov
lods
cmc
xor
cltd
int
xchg
mov
jne
xor
aas
pop
cltd
pop
not
xchg
lea
mov
js
subb
scas
cmp
fists
cmc
inc
cmp
int
fbstp
in
sub
push
dec
inc
xchg
xor
xor
mov
xor
dec
mov
push
std
repz
sbb
test
repnz
mov
leave
xchg
loop
mov
shll
xchg
cmpsb
dec
insb
jne
clc
ja
icebp
xchg
sub
cmp
xchg
push
fstps
aas
and
xor
incb
sub
in
stc
mov
dec
fwait
pop
out
pop
dec
jecxz
pop
mov
fldt
and
push
jns
lods
in
push
lret
fistl
jg
push
loope
bound
inc
fnsave
sbb
ljmp
jp
repnz
push
push
out
loop
pop
pop
ds
inc
cmp
into
mov
xchg
in
and
jnp
push
addr16
daa
cmp
pop
add
jb
or
mov
xchg
mov
jecxz
jno
mov
xchg
repnz
sbb
out
adc
pop
jmp
pop
pop
pop
es
add
add
fs
sahf
in
into
lahf
arpl
insl
daa
inc
xchg
sti
sub
mov
les
movsl
add
fwait
inc
fimuls
scas
or
pusha
jge
data16
shll
inc
mov
test
push
pop
add
adc
addr16
push
mov
lret
jmp
subl
adc
ret
inc
enter
je
sbb
das
mov
jp
scas
nop
dec
aad
mov
mov
xchg
out
jb
mov
push
inc
lock
mov
add
in
sub
sbb
popf
out
int
dec
jge
mov
xor
outsl
das
dec
jl
out
adc
inc
hlt
aam
mov
jp
or
popa
push
fsts
test
and
jmp
std
mov
jp
pop
xorb
outsl
scas
in
test
pop
shll
mov
mov
add
push
cltd
mov
sub
fldenv
cmp
xlat
lcall
insl
or
push
pop
xorl
xchg
outsl
inc
jo
xchg
push
xchg
mov
add
sub
lahf
lahf
and
std
inc
divl
adc
jecxz
push
mov
jg,pt
mov
pop
or
mov
into
lret
and
out
imul
lds
ja
fwait
pop
adc
dec
cltd
popf
pop
gs
fistps
repz
ljmp
pop
icebp
loopne
popf
movsl
push
mov
xor
add
int3
xlat
sub
mov
mov
cmp
sarl
add
je
pop
je
mov
dec
mov
push
notb
mov
ficoml
pop
add
sti
jl
mov
nop
mov
or
push
adc
push
xchg
sub
test
aaa
outsb
pop
add
push
lcall
mov
fwait
lock
mov
adc
sbb
push
in
xchg
movsl
hlt
add
xor
pop
xchg
in
movsb
pop
xchg
and
dec
add
cmp
out
sub
ret
adc
enter
pop
and
cli
push
xlat
add
push
lock
in
cmp
or
insb
cmp
andl
ds
jge
movsl
rol
cmpsb
adc
adc
icebp
mov
dec
je
mov
mov
mov
in
insl
jl
mov
jg
inc
pop
sub
popa
pushf
popf
add
and
mov
outsl
and
pop
xorl
rorl
ds
mov
je
cmpsb
mov
xor
cmp
xchg
xchg
dec
jmp
test
leave
clc
popf
push
addr16
push
adc
aas
push
and
cltd
lds
call
in
mov
fadds
mov
int3
push
cltd
fstpt
inc
pop
mov
sbb
adc
mov
xchg
cmp
pushf
popf
andl
inc
shlb
insl
in
cmp
aad
pop
mov
dec
dec
jg
pop
add
int3
xor
dec
xchg
shll
sbb
nop
cli
testl
and
neg
sub
mov
sub
sub
sti
sbb
sub
mov
cs
pop
dec
pop
lods
xchg
loopne
ja
clc
ret
addr16
pop
adc
xor
jne
scas
gs
push
adc
pusha
pop
cwtl
fimull
inc
cmp
xchg
sbb
aaa
jmp
scas
sub
sbb
out
popa
cmpsb
pushf
outsl
inc
or
cmp
js
mov
fidivs
ror
aas
iret
xchg
ret
adc
sahf
testb
dec
push
pop
loop
push
jo
pop
push
mov
jns
aam
cmpsl
sti
movsl
cmpsl
ljmp
pop
or
dec
iret
outsb
dec
je
popf
xchg
sbb
sti
pop
xchg
inc
adc
xchg
adc
adc
lea
jns
mov
addl
mov
lret
adc
ljmp
ss
stos
push
ds
adcb
insb
adc
mov
inc
mov
sahf
mov
or
aaa
xchg
aam
fadds
jmp
inc
mov
xchg
mov
add
jb
pusha
jae
int3
loopne
xchg
scas
xchg
jge
add
sahf
stc
cmovnp
lds
push
out
aad
mov
push
xchg
or
cmp
enter
call
sub
icebp
lahf
faddl
out
or
inc
pop
arpl
dec
adc
cmpsl
cmpxchg
xor
jg
lret
lea
mov
sti
mov
mov
xchg
xor
or
jno
mov
in
cs
push
mov
ja
jns
cmpb
cmp
out
hlt
adc
rclb
inc
mov
repnz
adc
push
aad
lahf
gs
mov
mov
pop
lock
dec
js,pn
inc
loopne
or
movsb
nop
mov
adc
jne
xchg
inc
insb
pop
xchg
or
add
or
stc
int
lods
or
ret
std
scas
add
push
jg
pusha
push
dec
gs
cli
cmc
js
xor
and
data16
popa
mov
xchg
repz
stos
xor
jp
in
and
push
and
iret
ficomps
xor
push
push
inc
inc
rorb
movsb
jl,pn
ds
xchg
hlt
das
xor
mov
mov
mov
push
add
pop
push
fidivrl
ss
das
in
es
xor
mov
into
jno
xchg
pop
mov
fildl
and
sub
out
hlt
cmp
inc
fmuls
fidivs
sub
outsl
dec
das
out
ffreep
arpl
xchg
sbb
fnstsw
icebp
lods
xor
mov
add
cli
in
inc
push
insb
cmp
lret
jge
out
leave
nop
ljmp
fcoml
lret
xor
sub
in
ss
mov
adc
stos
loop
mov
mov
movsb
stc
add
mov
push
and
pop
ljmp
push
aaa
or
mull
pop
jbe
fisubl
inc
push
mov
jecxz
iret
jbe
cmp
adc
iret
or
lret
jb
jae
fimull
jnp
loopne
add
fistpl
imul
mov
fdivrl
adc
mov
lret
sbb
mov
out
fchs
add
xchg
fs
push
add
inc
test
mov
jmp
divb
push
push
scas
data16
sbb
js
push
dec
pop
les
fcoms
and
adc
jno
mov
enter
stc
cmp
add
mov
xchg
syscall
pop
cmp
addl
aaa
inc
xor
sub
pop
clc
add
lahf
xchg
adc
lcall
xchg
mov
sub
cmp
jge
call
mov
sbb
scas
fnstenv
and
xor
dec
sub
sub
mov
mov
xor
stos
jae
std
xor
push
or
mov
int3
adc
push
adc
int
int3
dec
cmpsl
movsb
rcrb
shr
idivb
dec
add
lds
popf
std
inc
loopne
sbb
popf
scas
cmpsb
mov
mov
add
xchg
test
in
nop
pop
into
or
aam
mov
and
mov
outsl
punpckhwd
xchg
jge
cs
rol
ret
ret
subl
mov
cli
add
sub
sbb
sub
and
push
in
inc
add
in
int3
push
aad
sub
in
mov
mov
add
push
xchg
push
nop
dec
fbstp
xchg
sti
or
pop
lds
or
sub
fisubrl
cmp
sahf
push
cmp
add
cmp
pop
fsubl
add
xor
push
cmp
cli
xchg
iret
imul
aam
mov
jb
cltd
xor
mov
mov
shlb
and
push
jge
test
cli
lds
test
and
aad
fadds
fs
test
jnp
fcomp
fcoml
cmp
jbe
and
pop
and
push
mov
ss
mov
int3
shlb
xor
sub
dec
stos
mov
or
popf
sbb
enter
out
gs
popa
xor
comiss
cwtl
fldcw
test
push
sbb
adc
xchg
lods
in
dec
cmp
xchg
push
out
mov
fbstp
repz
mov
mov
jecxz
bound
xor
push
test
sub
or
or
imulb
outsl
andl
andl
pushf
cmp
out
mov
dec
mov
mov
ret
add
fincstp
jle
in
mov
mov
fdiv
xor
mov
out
mov
sub
push
aas
jmp
lahf
addr16
insb
out
insb
aas
dec
sahf
loop
cmp
sar
and
mov
mov
jbe
push
sbb
jle
push
xchg
push
mov
movb
outsl
test
aad
gs
lds
nop
fildll
xlat
pop
in
dec
mov
pop
add
or
push
sub
and
addr16
daa
and
mov
dec
mov
leave
in
rclb
jmp
out
dec
mov
xor
pop
push
sub
add
aam
adc
xor
adc
inc
arpl
std
or
xchg
sbb
sub
mov
adc
jle
shlb
push
repz
xorl
cmp
dec
adc
mov
inc
popa
push
lea
jnp
mov
sbb
lahf
ss
jecxz
les
imulb
or
xor
loope
addr16
movsl
or
cwtl
pop
leave
cmp
and
ljmp
pop
fnstsw
lcall
sbb
out
adcb
ret
in
mov
iret
icebp
push
adc
dec
push
jb
xchg
mov
or
xor
imul
xor
xorl
sbb
in
movsl
pusha
shrl
insb
addb
xlat
xor
or
mov
pop
sbb
stc
hlt
stos
ljmp
adc
mov
pop
je
shrl
jge
and
ret
fidivrl
fldenv
dec
outsl
sbb
out
mov
dec
mov
xchg
mov
push
in
mov
in
out
fisubs
pop
sbb
lds
mov
minps
mov
in
adc
mov
inc
fld
push
pop
stc
and
in
ret
inc
sti
cs
ljmp
pop
loope
adcl
addl
lods
mov
push
cmp
sbbl
js
scas
jg
push
pop
test
push
push
stc
push
mov
mov
and
adc
sbbb
cltd
jmp
push
xchg
nop
loopne
rcr
fstps
dec
sbb
addr16
dec
push
inc
mov
and
mov
pop
rclb
mov
scas
faddl
int
rcr
lds
mov
rcrb
testl
inc
pop
mov
repnz
shrb
push
bound
or
cmpsl
xor
bound
pop
mov
sbb
outsl
mov
js
pop
jecxz
inc
xor
repnz
inc
inc
jae
popl
stos
ret
lret
inc
add
add
bound
test
push
scas
sub
lods
lock
xor
subb
dec
or
xor
das
jne
lods
xchg
out
nop
mov
pop
xchg
movsl
sbb
mov
mov
ss
push
or
cmpsl
adc
add
mov
cmp
cmp
sbb
cld
ljmp
xor
das
push
cmpsl
sub
insb
inc
in
out
inc
ja,pt
mov
repz
add
mov
imull
xor
cmpsl
jmp
ljmp
clc
insl
in
and
push
stos
das
mov
addr16
xor
sub
cmp
hlt
push
iret
inc
in
inc
xchg
in
xchg
or
test
ficomps
fdivrs
mov
pop
testb
push
cwtl
cs
fdivr
and
sub
cmp
icebp
dec
pop
push
subb
push
hlt
addr16
in
out
xchg
loop
dec
sbb
sub
outsb
dec
jns
aas
sub
stos
aaa
adc
or
sub
ret
adc
js
xchg
pop
adc
popa
in
fs
dec
mov
cmp
mov
push
jnp
js
scas
sahf
out
xchg
push
in
xchg
dec
ja
cmp
inc
pop
jnp
hlt
sbb
push
jecxz
jne
test
leave
pop
std
mov
js
push
addl
movsb
imul
mov
aaa
fiadds
fmull
mov
xor
mov
pop
jo
sub
aam
add
mov
push
sarb
ss
mov
mov
jo
sbb
icebp
jl
ljmp
stc
pop
jg
add
jae
insb
lds
push
cmp
pusha
nop
insb
xor
cmp
mov
mov
stos
dec
mov
inc
popa
mov
push
sti
jge
in
adc
inc
cltd
repz
ljmp
jb
lahf
add
sahf
je
loopne
and
add
ja
jb
in
pusha
inc
xor
or
das
arpl
push
xchg
or
divb
roll
cmp
orb
int3
mov
xchg
shr
ret
rorl
adc
int3
clc
xchg
mov
stos
and
inc
clc
xor
mov
loopne
pushf
inc
mov
icebp
mov
jae
add
xor
leave
hlt
mov
push
jb
fmul
xchg
push
nop
adc
ss
sub
xlat
out
jb
in
not
push
mov
jp
sub
sbb
popf
insl
mov
cmp
subl
call
dec
je
in
xchg
dec
cmpsb
cwtl
inc
xchg
inc
push
and
std
adc
mov
das
cs
out
fbstp
adc
add
jge
mov
lds
mov
aam
pop
mov
pop
inc
adc
sbb
js
popa
mov
mov
xchg
jb
adc
pop
jne
sahf
addb
add
std
dec
in
scas
and
repnz
dec
cmp
lock
xor
ds
sub
push
aam
hlt
stos
jecxz
mov
jmp
mov
fldt
test
pop
xchg
push
mov
test
lds
xor
movsb
pop
mov
mov
add
test
aas
btr
fcmovu
jmp
pusha
in
les
add
fwait
xor
ss
jbe
sbb
jge
add
loope
in
ljmp
pop
loopne
movsl
shr
fsubrs
ljmp
push
insb
inc
rol
sub
xlat
cmpsl
cwtl
and
cli
cwtl
sub
push
pop
jg
pushf
aas
daa
dec
sub
xchg
rcrl
add
lea
xchg
lret
and
nop
jp
pop
fdiv
mov
adc
mov
pusha
int3
repz
jl
ret
fcompl
adc
enter
not
cmpsl
dec
pop
mov
add
push
cld
push
sub
cs
mov
out
test
gs
cwtl
pop
sub
cmpsb
inc
dec
loopne
out
fsts
movsb
outsl
les
mov
push
sbb
fiadds
sub
das
jae
scas
pop
addb
jnp
cmp
repz
xchg
xchg
push
in
int
incb
rolb
in
rcrb
adc
loopne
arpl
aas
sub
mov
xorb
dec
add
lahf
out
movsl
addr16
sub
and
mov
stos
addr16
ficomps
push
arpl
jns
lock
outsl
cli
jno
imul
fcmovb
mov
shlb
pop
add
dec
add
jp
mov
lea
jb
loope
sub
jecxz
push
mov
cmp
xor
call
and
repnz
lret
movsl
loope
dec
and
into
aam
js
lret
testl
popa
fs
cwtl
add
sub
test
or
mov
mov
out
das
inc
jp
andl
fisttpl
inc
test
pop
sub
mov
outsb
aas
pop
push
pop
mov
sub
aad
dec
popa
dec
ficompl
xchg
jmp
dec
mov
outsb
mov
fistpll
dec
dec
add
lock
cmc
xchg
sub
dec
cld
icebp
dec
inc
jns
aaa
rolw
lret
or
ss
movsb
jmp
pop
mov
in
jecxz
gs
jmp
xor
outsb
xor
enter
pop
sbb
sbb
addr16
push
in
orl
imull
xchg
lods
into
imul
pop
push
dec
mov
xor
or
in
pop
sub
imul
mov
out
cmp
push
dec
or
or
movsb
jnp
sbb
adc
push
lcall
out
dec
xchg
add
out
cmp
hlt
ljmp
sbbl
lret
xor
push
jns
es
loope
mov
push
out
jae
pop
sub
mov
xor
jge
sub
addr16
push
in
push
outsb
fnstenv
ss
into
jns
fisttpl
jbe
add
pusha
fisubl
cmp
popf
in
hlt
or
movsb
insb
test
in
aas
xor
adc
xchg
lret
sti
aaa
aad
inc
shr
orl
mov
insb
movsb
rorl
repz
loopne
inc
jecxz
and
add
scas
int
arpl
jp
and
mov
mov
rclb
test
scas
pushf
sti
cld
sbb
cmpsl
adc
in
push
fwait
mov
pop
rclb
cmp
jmp
mov
scas
fadd
sti
outsb
jle
sub
sub
sbb
rol
cmp
idivb
mov
test
and
dec
xchg
mov
imul
xchg
pop
add
stc
paddusb
adc
xchg
ljmp
push
sub
outsb
jecxz
jne
xor
pop
jmp
cmpsb
dec
push
mov
sarb
shl
mov
or
cmp
xlat
or
mov
cwtl
insb
lds
mov
mov
push
xor
or
and
jmp
shr
mov
cmpsl
and
and
cwtl
das
ret
or
add
push
dec
dec
adc
or
inc
sub
bound
xor
cmp
ficomps
xor
inc
jno
xchg
shr
jbe
or
mov
xchg
fistps
rclb
mov
push
jns
lcall
pop
rcrb
addr16
aad
xor
add
and
jl,pt
mov
pop
adc
arpl
jecxz
cmc
jns
lahf
out
and
mov
iret
dec
inc
lods
add
mov
jb,pt
adc
rorb
pop
ljmp
shrb
mov
mov
sti
xor
mov
pop
inc
inc
mov
cs
cld
lock
lds
or
cmp
addr16
pop
push
mov
outsl
jp
jae
push
or
fdiv
jmp
sbb
int
cs
inc
push
pop
nop
and
mov
pop
mov
cld
out
imulb
mov
lcall
mov
fsubl
mov
jae,pn
mov
repz
movsb
mov
inc
push
clc
pop
sbb
in
out
push
push
pushw
mov
push
cmc
cmp
lcall
mov
dec
cmc
lahf
mov
loopne
imull
out
aaa
in
adc
loop
push
notb
jecxz
iret
xor
sbb
jmp
add
dec
in
xor
xchg
sbb
mov
lret
or
jmp
or
jnp
rep
jl
roll
push
xchg
add
push
sub
pop
call
push
sbb
cmp
xchg
mov
pop
inc
call
fimull
add
jp
cltd
add
dec
xchg
dec
mov
es
rcrb
cld
mov
mov
sbb
inc
in
adc
cld
dec
dec
shlb
stc
aaa
jp
movsb
jp
push
fdivrl
out
jl
call
fldl
jp
sarb
and
dec
and
xchg
xor
push
pop
mov
push
xchg
bnd
lcall
mul
push
or
jg
test
cmp
cmpsl
push
xchg
inc
pop
adc
or
in
je
push
dec
lods
es
inc
jl
jnp
xor
in
test
insl
sub
cmpsl
pop
xchg
gs
repz
cmp
xchg
sub
pop
into
mov
stc
aaa
sub
ffreep
sub
pop
push
outsl
jle
push
loop
mov
and
ljmp
dec
push
lcall
or
xor
sbb
xchg
adc
fsts
xor
mov
inc
mov
or
or
cwtl
imul
inc
push
and
cmp
fadd
push
inc
inc
cmp
rcr
mov
jmp
mov
sbb
fstpl
mov
xchg
imul
or
fwait
call
and
or
div
jge
inc
shll
mov
stos
adc
stos
sarb
jp
xchg
sub
push
push
jbe
cmp
fsts
aaa
jae
push
xor
dec
mov
test
jno
push
ret
mov
ret
insb
or
shrb
mov
jbe
data16
dec
cltd
inc
xchg
incl
inc
add
fldcw
push
jmp
fidivs
add
fld
xchg
mulb
cmp
aad
mov
dec
pop
sub
mov
int3
cmp
xchg
jo
or
xchg
aam
mov
fildll
loopne
xchg
dec
push
adc
add
js
cmp
cmpsb
in
xor
lods
adc
xor
adc
lock
pop
cmp
sub
inc
inc
or
imul
jns
mov
adcl
out
xchg
xlat
test
int3
add
je
jle
lret
enter
sbb
mov
mov
arpl
mov
sub
int3
add
icebp
mov
lods
loop
sub
or
enter
outsl
lock
xor
dec
inc
push
test
addr16
pushf
or
out
inc
mov
cmp
mulps
adc
aam
pop
sbb
pop
mov
and
push
mov
jo
dec
push
movsb
das
cs
iret
mov
add
out
or
sbb
lret
jb
mov
dec
xchg
jo
inc
or
repz
inc
rolb
int3
test
int
in
sub
testl
ljmp
fdivrl
out
mov
adc
in
mov
loope
mov
out
mov
sub
lahf
xor
cmp
sbb
out
dec
pop
xor
lods
inc
jl
jo
xor
dec
fstl
push
mov
adc
xor
xor
lcall
lahf
jge
roll
dec
adc
inc
and
inc
pop
xchg
fldl
mov
inc
push
add
adc
out
inc
dec
loopne
mov
fldt
push
imul
fidivrl
or
rorl
mov
sbb
add
xchg
jge
lock
pusha
out
mov
push
jne
push
jne
call
fisttpll
cmc
jp
fwait
sub
mov
mov
pusha
cmpsb
adc
test
or
scas
xorb
scas
and
movsb
add
fistpll
add
lea
sbb
sahf
shrl
cmp
test
and
clc
adc
push
sub
test
jns
jmp
into
dec
stos
stos
fwait
jp
jg
and
fimuls
dec
mov
push
inc
fwait
cmp
call
jmp
xchg
pop
jle
push
inc
jno
pop
int
adc
bound
movsl
es
lea
mov
je
outsb
scas
pop
lea
xchg
pop
inc
sbb
in
push
dec
pmulhw
mov
pop
ss
jmp
rol
incb
mov
push
shll
pop
loopne
push
jne
mov
mov
cmp
adc
fldenv
leave
pusha
repnz
mov
cwtl
lret
pop
aad
out
std
cmp
lods
jae
or
mov
mov
jle
sub
push
pop
out
in
or
sbb
cltd
jle
pop
in
popf
pop
cmp
in
sarb
std
xlat
iret
mov
lcall
mov
call
loope
fstpl
jns
data16
mov
mov
mov
fucomip
inc
cmp
ficomps
mov
adcb
lods
mov
repnz
cmp
jbe
icebp
jge
sbbl
lahf
int
dec
mov
xchg
cmpsl
pushf
pop
adc
js
xor
in
in
sub
cmp
push
pusha
adc
bound
leave
fnsave
test
mov
push
sub
clc
leave
daa
xor
dec
imul
inc
out
pushf
lcall
jbe
mulb
pop
aad
push
push
mov
add
fwait
arpl
lods
pop
in
add
mov
xchg
lret
rclb
iret
scas
push
mov
jecxz
ror
fadd
and
jg
pop
inc
shlb
adc
loope
inc
push
data16
push
push
jecxz
aam
out
pushf
cmpsl
in
fistl
sbb
cmp
repnz
mov
scas
cmp
jle
jle
pop
repnz
scas
add
push
xchg
push
fldl
adc
sbbl
lods
test
push
jo
mov
lock
enter
movsl
xchg
insl
adc
cmp
mov
or
aas
jbe
pop
lods
lods
jns
push
ds
test
cmp
ss
bound
out
inc
adc
sub
xorb
push
dec
adc
fisubs
sbb
in
std
push
xchg
scas
daa
int3
loope
xchg
lods
mov
and
dec
push
inc
sahf
add
shrb
in
pop
jo
lods
loop
shll
mov
aam
je
jecxz
lahf
sti
mov
test
out
or
push
sti
pop
stos
dec
jge
mov
pmaxsw
pop
mov
iret
xor
push
clc
insb
mov
pop
aaa
out
mov
mov
call
push
add
ljmp
jp
pop
xor
std
cli
fs
jl
out
cmp
or
inc
jo
pop
inc
jnp
ljmp
adc
cli
jnp
sarl
mov
or
jmp
les
push
lcall
xlat
mov
setnp
jle
shlb
cli
sbb
pop
sbb
jo
leave
or
cs
cs
lods
jbe
sub
lahf
mov
pushf
push
test
xor
out
jno
dec
idivl
push
dec
stc
in
ja
leave
dec
aas
push
into
call
pusha
push
dec
shrb
mov
idivb
push
jb
pusha
sbb
mov
mov
push
popf
mov
lods
addr16
lret
or
dec
or
xchg
ficoml
mov
dec
fisubs
lds
dec
jne
adc
mov
ljmp
sti
cmp
sub
sub
pop
push
frstor
pushf
cmp
pop
sub
push
jmp
jge
imulb
pusha
ret
xor
mov
cli
sbb
inc
ret
xor
jecxz
aam
incb
mov
mov
in
sti
adc
loopne
pop
call
int3
mov
bound
imul
inc
test
sub
sbb
push
leave
push
daa
iret
mov
pop
jp
add
pop
sub
mov
es
sarl
cltd
and
jb
scas
test
sbb
add
movsl
mov
fistps
fsubl
dec
add
add
shlb
lods
leave
adc
inc
adc
lds
mov
daa
cmc
js
data16
push
mov
mov
adc
push
jnp
xchg
ljmp
enter
rorl
add
push
cltd
xchg
call
mov
out
dec
pop
aad
out
jmp
fsubs
xlat
mov
mov
cmc
shrb
sub
fisubrs
aas
jns
ror
mov
in
movsl
mov
adc
adc
icebp
mull
cmp
nop
adc
es
mov
in
jno
aam
fldt
mov
movsl
je
inc
aaa
sbb
insb
pushf
insb
nopl
ljmp
insl
mov
dec
test
popf
inc
add
cmp
ret
pop
mov
enter
dec
iret
and
jle
fidivrl
daa
push
add
cli
mov
pushf
add
jns
pop
ljmp
inc
shlb
fadds
cmp
sbb
pop
bound
bnd
jno
fcom
pop
sub
jmp
push
dec
cmovb
jmp
iret
cmpsb
in
xchg
adcb
sub
sub
sahf
inc
rolb
cmp
xor
stos
pushf
enter
add
lret
xor
sahf
sub
sbb
testb
or
lods
lcall
lret
mov
adc
loop
add
or
cmpsb
jg
fadds
xchg
jbe
data16
movsl
xchg
jnp
arpl
es
sbb
cmp
mov
mov
push
sub
outsb
jle
push
pop
sub
xchg
sub
scas
or
test
out
xlat
sub
add
push
cltd
push
cmp
add
push
inc
push
imul
push
sub
les
add
xchg
mov
mov
xor
xchg
ss
nop
xorb
add
sbb
sub
or
lock
call
add
add
xchg
jge
das
dec
xor
mov
jnp
subb
arpl
test
jae
mov
ficoml
outsb
pop
dec
les
push
mov
es
xchg
stos
xor
lods
fsubrs
js
push
cmpsl
scas
cmp
nop
xor
xchg
mov
shlb
add
add
adc
enter
cmp
sub
nop
mov
xchg
cmp
add
pop
sbb
repz
fisubrs
scas
mov
lahf
bound
jecxz
enter
push
and
pop
popl
sahf
add
int3
addr16
jge
push
jo
push
xor
cmp
xorl
movsl
test
cld
inc
cld
sbb
lahf
out
push
aas
adc
enter
hlt
dec
push
dec
jge
mov
push
aas
loope
mov
sahf
add
jp
sub
mov
mov
or
cmpsl
incl
and
scas
mov
push
xchg
mov
cld
mov
cmpb
or
xor
jle
jg
aas
mov
sbb
andb
ja
cltd
jmp
mov
repnz
out
lods
adc
cs
ss
mov
add
inc
test
out
addl
pop
in
and
loopew
icebp
jle
sbb
lcall
sbb
fildll
repz
dec
test
hlt
cs
notb
in
mov
fildll
mov
aas
jno
push
cmp
dec
push
imul
xor
loopne
mov
int3
neg
or
mov
movsb
mov
push
add
into
pop
dec
push
gs
xlat
mov
inc
ret
push
ds
cmc
mov
jg
fidivl
add
push
loopne
add
sbb
sahf
lahf
insb
pop
mov
dec
mov
jnp
test
xchg
jge
lea
hlt
or
incb
and
clc
pop
lcall
gs
sbb
add
testl
js
mov
scas
out
ljmp
xchg
add
movsl
mov
adc
pop
inc
and
push
or
dec
pop
push
mov
sbb
ja
mov
add
xchg
inc
push
mov
movsl
shlb
xchg
or
mov
xchg
sbb
scas
cmpb
xor
popa
out
xor
add
sub
cmp
daa
lcall
loopne
jecxz
lods
mov
ret
lds
and
jg
mov
push
std
inc
mov
sub
xchg
cmp
int
cmpsl
mov
les
cltd
mov
add
outsl
fistl
add
and
sub
cmp
outsb
iret
fwait
xor
pop
insl
stc
sbb
int
lahf
fistpll
fstpl
into
int3
dec
inc
fld
jl
dec
push
or
fistpl
or
cmpsb
sub
icebp
or
jb
xor
mov
cmp
mov
stc
dec
xor
push
sbb
and
out
or
mov
cmp
push
repz
scas
jb
push
or
mov
sbb
jo
xor
in
stc
dec
repz
pop
push
and
cmp
push
mov
push
mov
mov
les
enter
push
xor
dec
lret
mov
aas
in
out
loope
pop
mov
fadd
dec
jl
mov
std
sub
dec
mov
or
inc
je
ret
cmp
xchg
sub
fnstcw
sti
add
stc
push
mov
mov
jno
aas
cmp
lods
inc
mov
add
xor
xor
sub
inc
and
xchg
scas
fidivrs
or
cmpsb
into
mov
cmp
xchg
call
mov
push
dec
fldenv
loop
jl
fimuls
and
push
and
sub
mov
cltd
xchg
sub
aam
stos
mov
imul
jae
xchg
fmuls
pop
lcall
mov
clc
shrb
sbb
je
ljmp
repz
mov
and
out
mov
lods
int3
xchg
dec
inc
add
sbb
jle
mov
mov
sbb
mov
rol
sub
jl
inc
addr16
addb
inc
mov
xor
jno
movsl
jle
or
dec
aad
or
xor
mov
sahf
popf
pop
jbe
rcrb
pop
xlat
cwtl
in
add
cwtl
inc
std
pop
stos
jge
inc
hlt
push
mov
pop
xor
negb
in
das
inc
mov
mov
stc
pop
arpl
hlt
pop
std
int
out
testl
je
or
xor
mov
scas
mov
insl
mov
in
movsl
fistl
cmp
adc
mov
imull
fidivrl
jno
mov
cmp
lret
nop
xor
add
std
or
dec
or
cmp
popf
add
cmc
push
sub
sarl
mov
pusha
scas
push
cmp
addw
jle
movsw
dec
addr16
dec
push
push
je
out
js
cwtl
mov
adc
jl
outsl
pop
and
sbb
inc
ljmp
nop
ficomps
out
ja
or
add
fsubl
and
movsl
in
insl
sub
shll
stos
imul
xor
dec
inc
js
mov
cmc
subb
mov
xchg
push
neg
dec
mov
bound
cmp
insl
sub
icebp
sbb
iret
lret
ret
pop
xchg
pop
xor
dec
mov
shll
daa
add
sub
lock
jb
inc
push
jbe
add
push
scas
cltd
mov
sub
dec
cmp
xchg
lea
ficompl
mov
add
sub
xlat
adc
mov
adc
stos
clc
les
xchg
jmp
test
jecxz
stos
inc
rcll
mov
and
sbb
push
xchg
dec
jle
imul
bound
pop
push
loopne
ljmp
call
mov
ljmp
ficoms
adc
adc
rclb
rcrb
mov
clc
xor
adc
out
sahf
jns
inc
or
sub
sub
fidivl
in
lock
aaa
lods
jae
push
ret
sbb
jb
jle
add
and
mov
xor
int3
dec
rol
mov
rcl
filds
out
stos
adc
push
inc
adc
mov
ljmp
xchg
push
xor
add
cmp
js
test
xchg
add
dec
and
push
cwtl
mov
mov
mov
add
aam
lret
arpl
sub
inc
inc
cmp
push
dec
aam
cmp
xchg
jl
lret
push
mov
leave
pop
sahf
loop
int3
aad
jo
jb
ds
xor
shlb
loopne
add
lock
xchg
lahf
and
pop
fadds
nop
sbb
shlb
repz
out
cmp
sub
sub
fs
add
and
xchg
je
ja
filds
int3
pop
iret
loope
int3
imul
xor
push
out
push
jecxz
cmpsl
push
add
inc
insb
jne
fwait
lock
movsl
iret
add
stc
mov
xchg
int3
in
loope
mov
cli
mov
and
jg
movsb
push
lock
push
adc
inc
add
or
and
adc
ret
cli
shll
add
add
mov
aaa
mov
mov
and
mov
xchg
inc
mov
nop
inc
fwait
inc
sahf
xchg
push
adc
sbb
inc
sarl
sbb
shll
jne
loopne
ja
pop
lods
loopne
mov
cmp
rcll
xor
test
lods
mov
outsl
pop
pop
inc
shll
pop
dec
xor
je
rcrb
mov
mov
pop
ss
mov
mov
add
mov
push
and
or
ret
es
lret
daa
jl
stc
xchg
cmp
push
fisubrs
sbbb
lods
inc
jp
stc
lahf
sbb
mov
ljmp
mov
mov
mov
cmp
pop
vphaddubd
fadd
stos
or
sub
aad
jle
daa
and
pop
inc
xor
xor
cmp
insl
mov
ss
adcl
cmp
daa
mov
inc
xchg
pop
pusha
lcall
inc
out
inc
aam
jge
cmc
mov
mov
mov
js
push
in
mov
cli
or
repnz
fdivrp
mov
stc
outsb
icebp
cmpl
push
cmc
add
das
mov
push
int3
xchg
cli
cmpsb
dec
push
sub
call
ficomps
mov
enter
fstpl
cmpsb
ljmp
shll
mov
inc
jl
inc
pop
sti
pop
xlat
sbb
call
cwtl
xchg
dec
rcr
inc
movsb
loope
add
ds
pop
fsubr
dec
outsb
and
ss
mov
scas
in
lret
clc
xchg
or
outsl
lcall
shll
imul
lahf
lods
mov
inc
add
mov
ds
mov
and
mov
or
aas
adc
jno
or
out
sbb
rolb
mov
adc
xchg
fldcw
mov
sbb
push
sub
jb
add
mov
inc
test
jmp
daa
mov
jno
fs
dec
es
push
pop
sbbl
fnstsw
inc
je
and
ss
lret
es
out
xor
cld
pop
jmp
xchg
sub
xor
sub
add
xlat
std
cltd
out
rorb
lret
jg
adc
mov
sub
in
push
mov
jg
pusha
into
sub
sti
repnz
lock
dec
push
mov
fs
mov
not
push
or
shrl
xchg
lds
push
jb,pn
push
outsb
out
push
jecxz
fisttps
gs
mov
pop
fnsetpm(287
mov
lea
test
xor
xchg
jmp
out
push
xchg
mov
sbb
jmp
ds
lea
out
mov
mov
hlt
cmp
xchg
leave
jge
mov
fs
arpl
mov
mov
inc
addb
jle
out
lcall
cmp
ror
stc
push
pop
add
loopne
mov
lock
and
outsl
gs
aam
into
pop
ljmp
push
inc
dec
lods
jb
test
inc
xor
cmp
ret
mov
cld
add
mov
cmp
mov
sub
or
mov
lea
mov
adc
mov
int
hlt
jne
fxch
negb
jae
pop
jbe
mov
stos
add
mov
jg
mov
roll
inc
mov
jns
fwait
aam
leave
daa
dec
inc
push
dec
stos
xchg
packssdw
mov
mov
jl
lea
and
and
roll
test
loope
out
fisubrs
cmc
mov
lock
js
add
sbb
ss
add
mov
jae
add
sbb
aad
xor
ljmp
pop
adc
test
lret
cmp
or
mov
xchg
mov
int
jp
ficomps
xchg
inc
outsb
mov
ja
jbe
out
jg
test
mov
dec
bound
push
fcoms
fwait
adcl
mov
insb
sub
mov
cmc
sub
lcall
std
adc
cltd
jae
cmp
xor
ss
xor
add
mov
push
loopne
jne
adc
loop
jp
xor
rcrb
or
lcall
xchg
mov
sub
push
rcl
pop
pop
iret
aaa
imul
imul
leave
xchg
add
scas
lock
lea
sub
jbe
pop
rorb
cli
xor
scas
jb
adc
adc
aam
inc
mov
jl
jns
sarb
pop
gs
xor
popf
push
jbe
xchg
add
push
loopne
jnp
movsl
sub
pop
hlt
xchg
lahf
or
jecxz
test
out
imul
fucom
lods
aas
mov
sbb
aaa
add
mull
jae
dec
mov
add
loop
sbb
adc
nop
stc
jg
mov
aam
sub
xor
xchg
lret
into
mov
js
push
mov
xor
pusha
fcmove
test
fcompl
sub
nop
inc
addr16
imul
add
jg
cmc
dec
test
decl
push
xadd
ficoms
into
in
out
out
or
outsb
loope
aad
jb
jl
pop
addr16
inc
push
stos
or
mov
daa
popf
push
jns
pop
push
sub
loope
cltd
sub
mov
mov
addr16
xchg
popa
sub
loop
popf
jmp
inc
sbb
in
stos
add
push
mov
test
fmul
fisttpll
dec
test
mov
sbb
mov
inc
loop
or
cmp
inc
sbb
cltd
push
addr16
push
or
xchg
push
fcmovne
les
xor
out
mov
mov
sbb
lods
or
adc
mov
ljmp
repz
cld
jp
insb
jae
hlt
add
daa
push
sbb
dec
lahf
shll
les
lods
mov
ss
ficomps
cwtl
lods
xchg
and
lea
push
push
sbb
xor
dec
pop
decb
pusha
and
stos
icebp
cmp
mov
push
mov
bound
add
jnp
adc
insl
xchg
int
orl
std
cmp
xchg
mov
push
fcom
xchg
lahf
sub
rcl
inc
pop
popf
xor
cmp
addb
pusha
push
push
push
push
dec
push
push
mov
fsubs
dec
sub
arpl
push
mov
sub
ljmp
gs
dec
xor
xor
sub
mov
iret
cwtl
sub
mov
inc
mov
mov
jecxz
fnsave
mov
iret
pop
push
add
test
mov
xchg
shll
sub
sub
iret
pop
xor
mov
dec
mov
sbb
mov
les
dec
insl
inc
cli
xchg
mov
and
inc
push
jo
jo
icebp
fstpl
cmpb
add
push
xor
lcall
mov
call
repz
lea
pop
cmp
divb
push
sub
insb
xor
adc
cmpb
xchg
mov
sub
mov
cmpsb
or
icebp
aam
add
nop
pop
push
sbb
lret
xchg
subl
inc
jle
pop
dec
and
fwait
pop
ds
mov
mov
aaa
lret
jno
scas
add
inc
inc
out
loopne
lahf
cli
cmp
cld
pop
adc
inc
sbb
cwtl
mov
loopne
int3
ss
movsb
aas
dec
add
imul
fs
or
out
jp
inc
ret
mov
push
cld
cmp
fld
mov
or
dec
lahf
push
loope
jbe
xchg
lret
sti
aam
mov
or
add
inc
inc
repz
stc
aaa
cwtl
inc
pop
xor
cmpsb
clc
pop
nop
mov
aam
sbb
push
out
and
loope
jbe
ss
sub
xchg
cmp
mov
sbb
dec
mov
push
add
sbb
cmp
mov
push
xor
mov
cs
test
mov
xchg
cmpsl
push
dec
enter
or
mov
scas
mov
pop
pop
andb
fdivs
fstpl
pushf
jnp
jno
and
das
sub
mov
mov
imul
push
cmp
les
pusha
jno
cmp
xchg
pop
cmp
test
insb
push
aas
enter
lock
mov
ja
ret
enter
fisttpll
fcompl
mov
imul
cmp
dec
mov
xor
dec
adc
popf
lcall
cmp
mov
mov
fldln2
shll
fistl
lret
pop
xor
into
addr16
cmp
jmp
mov
lahf
mov
sbb
int3
ja
dec
mov
pop
cmc
pop
negl
xchg
lds
pop
outsb
cwtl
mov
jecxz
dec
and
xor
lea
movsb
aas
jle
stc
out
cmpsl
popa
add
mov
cmp
nop
sbb
mov
fwait
jg
xchg
leave
inc
inc
call
dec
mov
lahf
test
outsl
pop
add
lock
inc
inc
scas
jl
inc
xchg
sub
mov
rclb
fcomi
sub
sub
dec
sbbb
fldt
leave
arpl
aam
dec
jp
xor
sbb
test
xor
jae
pop
jns
pop
sub
and
mov
add
jle
cmpsb
push
mov
sarb
dec
dec
aaa
idivb
jo
push
shlb
xorl
inc
mov
adc
xchg
mov
loop
push
xchg
dec
xchg
hlt
xlat
mov
push
adcl
repz
fcomps
out
rorl
sbb
sarl
adc
mov
rclb
test
xor
mov
mov
xchg
inc
or
xor
adc
fwait
addr16
jne
jg
jg
je
in
and
xor
mov
pop
xchg
or
adc
decb
imul
dec
add
lahf
pop
outsb
repz
ljmp
mov
mov
mov
imul
xchg
cld
xor
push
jecxz
cwtl
les
scas
xor
inc
orb
and
lret
enter
or
sub
and
sbb
xor
nop
jns
repz
test
inc
daa
fnsetpm(287
push
repz
push
mov
dec
adc
jno
out
pop
cwtl
aas
rcrb
rcll
and
push
sti
push
popf
outsb
mov
les
cmc
push
leave
ss
sbb
movsl
test
and
lods
arpl
cmpsl
jnp
dec
push
out
mov
out
in
pop
rcrl
addr16
mov
gs
stos
lods
mov
cld
push
in
sub
in
dec
test
mov
sub
sahf
mov
fdivrl
call
xchg
inc
insb
push
out
mov
or
jno
lea
fbld
subl
jmp
leave
dec
mov
aaa
mov
xchg
pop
scas
mov
add
push
icebp
in
inc
lds
inc
mov
aas
rcll
xor
add
inc
fdiv
xchg
mov
arpl
fabs
divl
cltd
xchg
sarl
enter
ja
mov
loope
sub
xor
pop
mov
iret
jg
mov
mov
add
add
clc
or
adc
dec
loopne
push
call
xchg
jne
and
and
fcompl
js
pop
fs
nop
sti
lods
pop
int3
sub
aam
adc
and
xchg
mov
sbb
mov
inc
addb
loope
jg
cli
dec
rcrb
pop
lea
das
lret
mov
out
or
and
xchg
and
fucomip
pop
in
lods
jno
stc
pusha
daa
or
imul
dec
outsb
xor
ja
jbe
pop
shlb
add
xor
mov
inc
xor
fldcw
push
out
cmp
or
js
xchg
cmp
ret
je
ret
adcb
jg
out
mov
mov
stos
testl
lret
cltd
and
stos
ja
das
pop
lahf
ds
xorl
pop
push
add
mov
mov
fwait
xor
das
push
hlt
jg
cmp
ljmp
sub
push
xor
inc
or
stos
pop
cmc
outsb
cmp
jp
dec
push
dec
test
mov
pop
lock
pop
aaa
aam
cmp
or
loopne
mov
rcrl
dec
std
mov
movsb
add
stc
xor
dec
push
sbb
xchg
dec
add
xor
pusha
inc
out
in
hlt
push
out
addb
sbb
cltd
jns
or
mov
mov
or
cmp
jle
add
mov
jo
aam
sub
mov
out
fabs
jge
inc
rcll
outsb
xchg
jp
in
jmp
nop
adc
arpl
fwait
xchg
mov
cli
add
lea
jle
jne
pop
shr
push
lcall
sub
ret
push
sbb
stc
inc
adc
jmp
cmpsb
or
out
xor
mov
sahf
nop
imul
xor
gs
mov
pop
stos
jbe
int3
xor
imul
xchg
pop
push
inc
ja
movl
sahf
mov
sbb
inc
push
je
repnz
clc
into
sub
mov
int
scas
inc
daa
push
or
xchg
out
jns
mov
or
rorl
mulb
pop
push
mov
mulb
cltd
out
adcb
xchg
lods
mov
fstp
lret
push
pop
sbb
sahf
lahf
mov
ljmp
loopne
es
xchg
mov
adc
test
dec
ror
adc
sti
fnsave
imul
inc
ret
popf
dec
xchg
and
pop
or
pop
data16
aas
cmp
cmp
stc
sbb
aam
push
and
pop
cmpsb
push
mov
aaa
cmp
push
jno
divl
mov
mov
dec
add
jecxz
mov
dec
in
sub
cld
adc
out
dec
pop
test
lods
and
sub
sbb
push
xchg
inc
pop
js
rcrb
mov
sub
cmp
gs
xchg
pop
push
lret
testl
and
or
cmp
sbb
inc
jb
test
xor
shrl
roll
mov
mov
add
adc
mov
push
out
mov
popa
mov
jo
sub
mov
xor
shll
pop
mov
data16
fisubs
movsl
fs
pop
jnp
sbb
out
divb
jo
movsl
inc
pop
push
push
int3
cmc
cmpsb
add
fsubrs
jmp
dec
aam
mov
test
inc
or
pop
por
cmp
stos
pop
add
jns
adc
gs
fsubrl
inc
dec
outsb
inc
xor
and
jnp
jecxz
push
jns
push
inc
leave
mov
fadd
scas
mov
xchg
aaa
lahf
scas
icebp
pop
jno
cltd
enter
sahf
add
xor
into
scas
xchg
xchg
fnstenv
push
int3
lock
xchg
add
jno
lret
push
ret
inc
mov
iret
sti
jo
push
xchg
sbb
cmp
jp
xchg
popa
outsl
xor
arpl
jns
int
sbb
into
adc
sub
cmp
and
cmp
xchg
stc
loop
jle
fcoml
mov
scas
imul
sub
xor
pop
arpl
dec
shll
push
stos
jnp
jp
leave
jmp
sar
sti
fnstcw
or
fs
push
arpl
pop
mov
icebp
add
int3
sbb
mulb
fisubrs
arpl
dec
xor
pushf
iret
or
jne
stos
loop
dec
cmp
add
xchg
add
or
mov
pop
cmp
call
ret
and
mov
dec
and
dec
fistl
sub
movsb
ficoms
leave
data16
add
push
testb
leave
pop
pop
cld
mov
xchg
adc
sbb
insl
pop
cmp
or
add
and
pop
add
push
mov
sbb
or
push
pop
mov
test
pop
xor
int
mov
je
push
push
sti
jmp
in
in
mov
and
je
out
mov
sub
dec
pop
xchg
outsb
cmp
pop
lock
es
pop
mulb
xor
pop
scas
or
pop
push
adc
stos
pusha
shrl
ljmp
inc
ja
sahf
or
test
mov
xchg
stc
popf
mov
sub
mov
xor
mov
or
das
sbb
push
inc
insb
push
sub
mov
fcomp
add
cli
xlat
add
pop
pop
push
paddsw
scas
shl
cmp
movhps
mov
push
cmp
loopne
lcall
mov
push
outsl
pusha
mov
inc
pop
cmp
lds
mov
aas
jno
insl
imulb
mov
mov
scas
sub
xchg
dec
inc
pop
lret
mov
add
fdivl
insl
test
mov
or
iret
jg
hlt
jno
adc
loop
dec
pop
lcall
inc
mov
insb
dec
and
ret
fmull
decl
fwait
xor
mov
push
imul
lret
popa
out
addb
sbb
pop
push
adc
aam
sbb
push
sbb
out
xchg
jmp
mov
pop
jne
aad
xchg
sub
stos
fisttpll
cmp
pop
hlt
add
mov
xchg
and
pop
xor
fisttpl
fiaddl
mov
repz
adc
cs
insb
inc
or
sbb
lret
pop
divl
cmpsb
mov
ss
pop
pop
stos
shl
cmpsb
psrld
sub
pushf
adc
out
cmp
adc
jg
jmp
xchg
bound
push
fmulp
repz
mov
ss
adc
xchg
push
sub
xor
dec
popf
pop
enter
pop
jge
or
mov
lret
cmp
cmc
es
enter
out
push
out
mov
faddl
shlb
gs
cmp
repz
popa
dec
jg
repz
inc
aad
loopne
add
arpl
push
sahf
sbb
mov
loop,pn
repnz
ret
jg
andl
imul
lea
mov
or
mov
sbb
add
adc
ljmp
lcall
adc
fmuls
add
jbe
lods
adc
mov
pop
mov
jbe
mov
dec
out
mov
ret
shl
pop
out
or
mov
adc
add
rcll
adc
push
inc
in
xor
push
push
mov
mov
lahf
cmp
mull
arpl
push
xor
leave
lock
pop
xchg
and
push
sub
mov
mov
clc
les
pop
inc
xor
clc
fwait
std
dec
enter
out
push
jo
sub
jecxz
pop
sub
dec
insl
fisubrs
shll
imul
mov
jne
fcomps
push
push
test
pop
sbb
push
sti
xor
gs
mov
pushf
mov
xor
scas
popa
fnstenv
dec
pop
or
xchg
and
test
adcb
xor
stos
add
les
cwtl
mov
fcomp
and
mov
insb
imul
shrl
out
popl
push
ret
scas
mov
cmp
pop
and
dec
into
lret
pop
pop
jno
in
ret
popf
push
mov
sbb
sub
push
mov
mov
inc
enter
adc
jle
imul
std
xor
pushw
ljmp
aam
jg
xor
aaa
push
clc
xchg
insl
mov
xorb
fcom
stc
ficomps
xor
adc
mov
inc
xor
dec
jmp
insl
sbb
out
xor
pop
hlt
push
fcmovbe
sbb
stos
jns
inc
add
getsec
scas
pop
xlat
arpl
mov
scas
int
xchg
cmp
test
jmp
cmp
loop
aam
aam
lods
scas
inc
lock
lret
ds
xor
jp
cld
or
inc
sbbl
mov
scas
lahf
pop
xchg
adc
test
loopne
sub
mov
xorb
inc
sub
pop
and
adc
popf
mov
fbld
and
jle
mov
lods
dec
jo
cmp
out
shlb
aad
mov
cmp
add
rcrl
cmp
sbb
and
cli
jecxz
movsl
and
cmc
push
rcrl
ret
fistpll
jbe
std
into
xchg
es
push
push
push
nop
das
or
xor
push
xor
js
popl
mov
jno
cmp
shlb
xchg
mov
aam
sbb
lock
add
outsb
push
flds
hlt
popa
jbe
test
xchg
lea
jl
test
sarb
add
adc
lods
jmp
leave
stos
xchg
xchg
add
sahf
mov
dec
fisubrs
cli
pop
mov
outsl
push
in
mov
mov
cltd
mov
and
and
js
out
mov
ss
push
nop
sarl
push
cmp
mov
sub
leave
loop
and
out
dec
or
xor
fisubs
add
sti
push
push
cmp
inc
and
xchg
mov
vrsqrtss
fdivrs
arpl
pop
stos
flds
or
cs
lcall
ss
testb
pop
jge
cld
pop
mov
jg
mov
mov
out
mov
push
js
cli
cmp
cmpsb
xchg
je
shr
adc
int3
bound
sbb
sbb
inc
cmp
add
aad
cmpl
lods
mov
push
sub
mov
dec
xor
sub
jle
cwtl
mov
mov
sub
xor
popa
push
aam
dec
lahf
mov
outsl
shlb
xor
push
outsb
mov
add
lods
adc
sbb
fcomps
inc
mov
fnop
enter
sbb
and
and
mov
mov
data16
ss
pop
lcall
mov
or
jge
lcall
push
es
js
push
shll
inc
pop
cs
inc
push
scas
rorl
ljmp
test
push
lret
aam
call
mov
rcl
fsubl
or
xlat
outsl
ficompl
jl
and
ret
xor
mov
int
jmp
pop
xchg
jecxz
popl
scas
inc
arpl
pop
cmpsb
push
push
out
push
push
fsubrp
cmp
adc
inc
pop
pop
scas
add
mov
xchg
dec
aaa
cwtl
sub
pop
out
add
das
jo
out
xorb
push
loopne
stc
jecxz
sbb
jbe
outsl
sbb
cmp
and
pop
add
icebp
daa
inc
or
sbb
add
inc
mov
sbb
hlt
add
cmp
ret
movsl
cs
lahf
outsl
enter
cwtl
pop
loopne
test
push
shll
fldenv
lods
ficomps
xchg
stos
js
loop
sahf
cmp
xor
add
xchg
sbb
cwtl
clc
rcrb
sbb
xchg
stc
out
jmp
ds
aam
sub
out
rcrl
dec
add
mov
loope
mov
cmp
into
mov
repz
dec
jp
into
daa
adcb
imul
and
cli
mov
fstpl
sti
jnp
icebp
and
mov
shll
pop
dec
andl
dec
outsl
lcall
sbb
jmp
iret
ret
out
dec
inc
xchg
inc
xchg
into
mov
aam
mov
scas
xchg
daa
mov
pop
mov
sub
jnp
xor
mov
test
add
jp
out
or
jae
adc
repz
leave
cmpsb
outsl
scas
push
aam
stos
mov
outsb
clc
jns
out
push
aad
fsubrl
add
shrb
pop
mov
cs
fs
lahf
scas
mov
adc
and
pop
fsubrl
popf
flds
leave
push
test
es
jae
loop
dec
sub
mov
cmc
scas
stos
mov
in
mov
cmp
test
sub
push
sub
push
hlt
imulb
mov
or
fs
das
push
or
adc
int
pop
or
out
push
je
in
jmp
sub
mov
mov
not
repnz
jo
pop
pop
push
and
or
sub
mov
and
xchg
mov
ret
cmpsl
push
fwait
or
mov
push
ljmp
fsubl
andb
push
push
in
leave
cmp
clc
sbb
aas
add
into
and
ds
pop
jo
add
and
js
mov
loop
lret
fnstcw
jp
lcall
add
out
pop
cmp
sub
adc
inc
push
push
andl
sbb
sbb
xchg
lods
sbb
or
mov
rcrl
cmp
xchg
repz
inc
leave
sahf
cmp
dec
mov
push
insl
push
push
ss
lods
jnp
mov
js
lret
inc
rcll
push
js
incl
add
sbb
insb
test
push
xor
and
add
jle
rorl
pop
je
test
out
jbe
scas
mov
leave
sarl
daa
sbb
cmc
adc
in
nop
push
ret
xchg
and
rol
shll
iret
mov
imul
mov
mov
jo
dec
sbbl
cmpsl
push
imul
es
nop
out
enter
cld
pop
adc
dec
loop
mov
pushf
mov
inc
xchg
sub
stc
lret
dec
out
outsl
jae
mov
clc
shl
xchg
unpcklps
test
mov
sarb
mov
incl
ret
xor
imul
dec
insl
adc
gs
push
adc
mov
lods
xchg
fdivrs
xchg
mov
push
je
lock
pushf
mov
xchg
mov
out
outsb
push
sbb
pop
mov
cs
popa
mov
hlt
jp
rclb
cli
xor
pop
iret
inc
ficoms
mov
sub
in
pop
mov
mov
jle
fisttps
sbb
xchg
mov
pop
add
ret
lods
or
sbb
dec
jge
add
stc
or
ds
mov
outsl
loopne
mov
insb
xchg
incl
mov
out
test
scas
add
in
out
mov
or
dec
mov
aaa
movsb
and
adc
aam
mov
arpl
mov
pop
dec
and
dec
pushf
hlt
xor
out
loope
pop
pop
pop
aaa
mov
enter
push
inc
pop
notb
dec
cmp
movsl
adc
push
out
std
imul
inc
in
sub
mov
add
sub
sbb
cwtl
cmp
dec
dec
lret
scas
fistpll
jle
outsl
ss
push
or
ret
out
bound
pop
sbb
int3
orl
jns
jecxz
fwait
pop
push
xor
sbb
sbb
out
pop
push
fdivl
les
lcall
push
xlat
sub
add
inc
shl
xchg
pop
or
xchg
roll
mov
cli
popa
and
xchg
pop
xor
push
mov
mov
mov
sbb
ret
mov
ljmp
push
repnz
ds
icebp
jbe
lret
icebp
loopne
and
or
lods
lahf
pop
jb
and
jle
push
mov
cmp
test
dec
add
xor
roll
jnp
and
aas
lret
testb
or
mov
clc
mov
ds
fsubrp
jge
dec
mov
pop
jae
pop
push
jb
jge
xor
pop
pop
mov
mov
mov
lret
jns
clc
xchg
jg
and
arpl
leave
dec
dec
xchg
outsl
sbb
fsubrl
dec
cmp
mov
in
sub
int3
and
test
lahf
dec
incl
or
bt
jnp
jns
shl
roll
gs
gs
bound
inc
adc
push
out
lahf
cmp
fdivrl
inc
daa
imul
adc
mov
and
mov
or
repz
or
gs
lret
lret
aaa
sarl
jns
out
hlt
inc
lods
inc
push
enter
xor
mov
insl
jg
xchg
arpl
sub
jl
jg
jns
stc
out
and
sbbl
xor
mov
std
push
sbb
push
xchg
loope
xchg
dec
inc
xchg
sbb
push
jmp
sbb
push
movsl
adc
cmpsl
test
cs
cmpb
adc
bound
add
mov
pop
xor
lods
into
and
sbb
inc
lea
test
xchg
push
sahf
test
lods
dec
es
out
or
mov
push
shrl
ret
mov
popf
scas
add
and
out
and
fistps
ret
out
xor
adc
mov
js
push
test
dec
mov
mov
popf
arpl
or
and
mov
jb
loopne
add
lods
mov
mov
jnp
pop
lock
mov
ljmp
jge
mulb
cli
insb
cwtl
push
push
cmpb
mov
adc
mov
std
cmp
lods
mov
cmpsl
leave
into
sahf
cmpsb
clc
repz
mov
adc
pushf
shl
test
or
bound
ss
outsl
popf
insb
fidivrl
cmp
cli
pusha
mov
leave
lds
stc
inc
ja
pop
cmp
xor
mov
icebp
add
dec
daa
popf
jmp
shrb
fwait
popf
ja
mov
in
sub
into
pop
push
movsl
adc
push
fdivrl
or
xlat
je
jmp
out
outsb
adc
popf
je
dec
xlat
adc
push
mov
add
imul
mov
popf
jle
mov
pusha
repz
xchg
addr16
arpl
outsl
arpl
lods
push
jbe
xchg
xchg
cmpsb
mov
jnp
mov
in
pop
pop
cltd
cmp
cmp
shr
les
xor
pop
mov
sub
mov
leave
add
inc
shl
push
addl
out
out
lcall
ret
or
cwtl
mov
je
dec
mov
dec
dec
std
popa
movsl
out
jmp
adc
push
jl
cmp
mov
loopne
jle
or
enter
push
iret
push
xor
mov
sbb
je
test
enter
jmp
leave
or
sbb
divl
push
movsl
inc
push
inc
and
cmp
icebp
and
adc
outsl
jmp
sbb
mov
data16
ficompl
insb
cmpsl
lds
es
mov
shl
mov
or
adc
sbb
incb
scas
lret
lcall
push
or
outsl
nop
push
bound
in
mov
mov
mov
mov
popf
pop
jge
mov
and
fs
jb
test
add
push
dec
ror
jp
cmpl
mov
in
or
daa
repz
mov
outsb
ds
fcmovb
cmpsl
sbb
push
in
imul
xchg
cli
lcall
in
iret
mov
test
nop
repz
fwait
sub
jp
je
sbb
cld
enter
rol
in
and
lea
fldt
mov
test
push
leave
fiaddl
int3
and
cmp
push
xchg
lods
cs
and
inc
call
dec
xor
cld
nop
cmpsl
fsubl
push
push
mov
ret
pop
xor
fidivrl
pop
lock
insb
pushf
stos
hlt
lods
sbb
fs
xchg
inc
and
inc
out
divl
pop
xchg
fs
addr16
dec
lods
sub
fcompl
pop
test
sbb
and
jmp
sub
sahf
or
fildll
rolb
push
sub
add
sub
les
sbb
xchg
add
or
fidivrl
pop
inc
xchg
lret
and
lcall
rclb
mov
fmul
jmp
jae
rcl
rcrb
dec
and
roll
inc
or
and
sub
sbb
fstpt
in
test
mov
jbe
dec
arpl
mov
mov
test
add
call
or
xchg
xor
popf
adc
dec
stos
in
cwtl
clc
add
adc
mov
mov
sub
std
or
xchg
bound
repz
push
in
lds
fisubs
clc
out
and
add
ds
mov
mov
ja
mov
lret
rclb
jnp
test
rorb
negb
out
ds
addr16
mov
sub
xchg
ret
pop
cmc
dec
pop
push
push
add
dec
mov
xor
sub
test
rcll
pop
bound
dec
mov
inc
sub
push
add
scas
fsubl
and
stos
lods
shl
int
jl
bound
fildll
es
pop
xor
push
sbb
into
outsl
cmpsl
outsl
xchg
jp
xchg
andb
mov
sub
in
mov
repnz
and
mov
inc
adc
jg
xlat
adc
mov
sub
sub
shrl
cltd
inc
ljmp
push
push
dec
mov
push
and
adc
xor
jmp
inc
jnp
bound
scas
cwtl
imul
push
test
adc
pop
fsubrl
mov
xor
shlb
loopne
mov
sub
mov
sbb
add
jae
mov
out
or
xor
sub
and
cmp
ljmp
xchg
mov
jl
sbb
pop
sub
in
mov
cmp
push
fwait
fimull
pop
rcrb
push
push
dec
das
and
sbb
dec
mov
lret
pop
dec
sbb
ret
and
or
stos
pop
adc
data16
sbb
sub
jno
or
mov
adc
cmpb
push
in
int3
pop
adc
jo
fdivl
js
loopne
out
dec
popa
subb
mov
cmp
std
jns
outsb
pop
outsb
iret
fcompl
xchg
push
pop
pop
cmp
popl
push
sub
lods
hlt
mov
scas
push
sub
mov
fistpll
rcrl
sub
mov
jecxz
fidivl
jns
fwait
xchg
sbb
lods
repz
outsb
inc
cmp
fistl
jl
jnp
shl
lods
int
lds
pop
daa
aaa
in
mov
clc
std
mov
call
lock
xlat
push
mov
add
add
ret
cmp
imul
roll
add
xchg
or
iret
pop
nop
xchg
mov
mov
jb
push
dec
stc
xchg
fsubs
inc
loope
out
dec
lods
stos
adc
pop
lock
mov
cmpl
jne
out
mull
mov
mov
inc
shrl
jb
and
inc
xor
movsl
cmp
jb
mov
mov
xor
mov
pop
outsl
cmpsb
popf
sub
pop
andl
stos
daa
cltd
jne
xor
imull
ror
dec
xchg
adc
jno
push
inc
into
add
daa
popf
es
xor
scas
mov
out
sbb
xor
fs
xlat
popa
addr16
faddl
jns
mov
xchg
mov
xlat
aaa
pop
mov
arpl
adc
xlat
shrb
mov
outsl
xor
std
mov
sub
icebp
scas
into
clc
sbbb
rorb
out
aad
inc
dec
sbb
cmc
or
loopne
int3
mov
inc
lret
mov
xchg
jns
aaa
jg
add
mov
pop
jmp
mov
dec
lahf
in
mov
test
cmp
xor
test
daa
cmp
pushf
cmc
lock
mov
jno
stc
stos
add
test
in
roll
pop
push
clc
imul
xor
adc
test
rorl
pop
jge
fstl
xchg
adc
hlt
sub
data16
clc
xchg
mov
sti
and
pop
adc
out
sbb
enter
push
iret
sub
lock
aas
stos
movsl
fs
inc
xchg
popf
adc
arpl
ljmp
pop
xor
scas
insb
repz
xlat
inc
jae
mov
psubb
sub
fwait
inc
fsubl
mov
jno
and
ljmp
cmp
fwait
sub
mov
inc
push
aaa
mov
shufps
aas
xchg
xchg
push
pop
pop
in
idivl
daa
adc
addr16
jecxz
mov
stos
dec
arpl
cs
or
shl
mov
and
xchg
sub
cmpsb
lahf
cmp
mov
xchg
add
test
xchg
push
mov
in
call
loopne
int3
adc
ds
push
sbb
popa
dec
fpatan
push
mov
int
mov
xor
cltd
pop
jle
mov
fnclex
mov
xchg
mov
cmp
bnd
add
push
pop
pop
xchg
test
mov
pop
add
gs
xor
cmpsb
ret
roll
jmp
or
dec
push
sbbl
iret
mov
add
adc
sbb
push
jle
mov
jle
dec
push
ljmp
dec
xchg
cli
adcb
addr16
dec
or
mov
js
subb
pop
insl
sub
or
add
cmp
mov
popa
dec
sti
rcrb
xor
mov
rolb
inc
cmp
imul
enter
mov
stos
mov
data16
push
loope
pop
mov
xchg
dec
gs
pop
mov
push
in
in
int3
adc
pushf
in
or
outsl
or
xor
jae
push
mov
inc
sti
inc
les
lahf
out
pop
std
daa
add
mov
mov
mov
out
dec
sar
imul
jge
or
push
std
imul
outsb
xor
push
js
ljmp
jecxz
outsb
fs
aam
or
mov
sub
stos
jle
in
idiv
xor
dec
add
jge
adc
sub
or
push
mov
outsl
lcall
sub
cwtl
in
iret
xlat
or
test
inc
pop
and
rcll
mov
fistl
mov
movsb
pop
mov
mov
cmpsb
imul
mov
mov
cmp
adc
das
xor
xor
fcoml
mov
pslld
pop
mov
lret
sub
mov
add
fwait
dec
iret
mov
dec
int
popa
push
cmp
cltd
lock
and
sahf
xor
pop
aad
movsl
out
xchg
aaa
push
sarb
xchg
movsl
cltd
jmp
pop
out
cmpb
cmpsl
jg
push
xor
data16
xor
neg
rcrb
pop
push
lahf
lods
push
inc
push
movsb
mov
add
xchg
es
dec
lods
adc
xlat
addr16
sahf
and
outsl
pop
movsl
insb
lahf
and
sub
jbe
jne
pushf
pusha
ror
mov
mov
stos
std
addr16
popf
push
stos
add
dec
scas
push
lods
add
shll
jmp
in
mov
or
in
mov
test
or
fwait
push
les
xor
pop
push
std
out
clc
pushl
shl
lret
add
pop
xchg
jge
or
ret
add
add
inc
jae
lods
adc
lds
sbb
jae
mov
gs
pop
jns
icebp
push
fdivrl
mov
fcompl
in
push
xor
cmc
leave
fimull
out
dec
sub
aam
sahf
dec
dec
and
fwait
mov
xor
daa
loop
mov
jb
sub
in
pop
cmp
mov
jecxz
fld
mov
add
fs
and
ja
ret
lock
fistpll
cmp
inc
push
or
insb
and
hlt
and
xchg
outsl
sbb
outsb
lock
sbb
lds
mov
daa
cmp
call
adc
xor
sub
xor
sub
arpl
or
dec
int
orb
test
inc
lahf
mov
lahf
xor
iret
cmp
dec
xorl
enter
das
pop
push
xchg
xor
pusha
xor
dec
mov
ret
add
lret
pop
pop
mov
and
push
add
dec
xor
int
fwait
cli
ficompl
sarl
cmp
movsl
daa
scas
stos
stos
iret
repnz
lret
fcoms
add
mull
pop
icebp
add
data16
fnstsw
adc
in
cmc
scas
sbb
addr16
push
xchg
aas
call
out
imul
push
adc
inc
hlt
into
in
jno
out
mov
fiadds
repnz
sub
dec
fstpt
cltd
or
cld
loope
std
out
aam
sti
leave
lock
jg
incl
xor
mov
xchg
sbb
mov
and
cmp
notl
lret
cmp
adc
mov
notb
sbb
mov
arpl
aam
add
sbb
ret
mov
loope
test
fs
cmp
in
ljmp
mov
jb
jge
int
cmp
xor
cmp
xor
xor
outsl
inc
insl
push
or
mov
xchg
jg
adc
clc
shll
pop
fnsave
pop
and
cmc
cmc
stos
shlb
arpl
popa
xchg
in
inc
inc
xchg
stos
std
mov
sub
cwtl
cmp
cwtl
push
xor
mov
sarb
jle
imul
dec
add
mov
scas
mov
insb
or
push
loope
inc
hlt
aaa
arpl
jge
scas
push
sbb
std
adc
mov
mov
popa
lret
sbb
xchg
jge
push
adc
out
or
inc
insl
mov
adc
das
data16
adc
cmp
hlt
rcrl
mov
in
inc
sahf
sbb
add
jmp
jbe
add
and
inc
mov
in
or
shrb
or
mov
stc
and
cmpsl
cmpsl
shrl
sub
dec
lea
or
inc
jge
lods
jl
jmp
cmp
testl
popa
imul
std
push
mov
pusha
and
imul
add
das
fstl
mov
xchg
add
pop
mov
dec
aas
xchg
outsb
pop
movsl
adc
stc
pop
sub
outsb
dec
add
inc
test
mov
dec
pop
in
fdivr
std
adc
push
xchg
out
or
faddl
sbb
popl
pop
jae
in
jp
outsl
xchg
add
mov
insl
and
or
sub
mov
enter
and
sbb
push
js
inc
push
dec
sbb
popa
pop
clc
dec
xchg
insl
inc
test
lcall
xchg
nop
pop
cwtl
sub
aas
or
push
push
jbe
js
pop
sub
daa
repnz
sub
sub
xchg
outsb
jp
test
out
ret
pop
arpl
imul
adcl
insb
add
mov
xorb
test
push
sub
sub
rorl
sub
inc
cmp
push
test
inc
scas
jle
leave
int3
aas
xchg
jb
and
mov
movsb
or
fsubs
lods
jo
push
xor
stos
insl
imul
and
dec
jne
xchg
ret
lods
xor
xchg
jo
xchg
test
nop
aaa
push
add
sub
stc
ss
xor
xor
inc
lret
pop
in
sub
or
xchg
fbstp
cltd
idivb
mov
push
jae
adc
xor
sbb
negl
mov
fstps
mov
mov
adcb
xchg
lds
mov
jl
ljmp
jmp
clc
shl
cmpsl
add
test
push
sub
clc
iret
sub
stos
inc
sub
sbb
mov
inc
and
mov
mov
pop
sub
test
push
xlat
jne
jne
mov
insb
sub
adc
lods
xor
out
mov
outsl
xchg
aam
xorb
sbb
or
xchg
xchg
into
jle
dec
or
mov
or
dec
or
stos
cmp
movsl
mov
sbb
and
sub
imul
xor
pop
dec
movsl
lds
inc
scas
or
mov
out
push
enter
mov
lds
jmp
push
sub
ja
jo
cltd
cli
rclb
testl
in
xlat
push
out
addl
popf
stos
enter
xchg
outsl
and
sbb
push
mov
mov
mov
int
leave
movsb
pop
fdivr
rcrb
push
pop
fdivrs
cmp
sbb
js
test
sbb
arpl
or
clc
jnp
and
fwait
dec
shrb
push
das
or
pop
lahf
dec
pop
lods
dec
ja
jae
cld
pop
jae
imul
stos
aam
cmp
pop
cltd
cs
das
leave
popa
fadd
add
imul
add
add
cmp
stos
cwtl
mov
movsb
scas
std
mov
jns
ret
negl
adc
jbe
inc
inc
jns
sub
addr16
cmp
mov
pop
lds
dec
jno
mov
push
in
push
push
adc
sub
ljmp
out
js
or
cmpsb
cmp
and
adc
jbe
lcall
pop
fdivl
jne
dec
fs
dec
repz
subl
lahf
sub
shlb
dec
movsb
jo
int3
mulb
push
mov
sbbb
aam
insb
fsubrs
test
cmc
in
add
das
cs
fdivs
out
adc
or
xchg
inc
cwtl
sbb
jns
adc
cmpsb
dec
aas
cmpsl
cmpsl
mov
ret
cmpsl
add
jge
or
mov
cs
cmp
fdiv
xchg
or
sub
inc
jne
push
lods
push
leave
cmp
push
aam
add
xchg
xchg
das
dec
inc
push
out
push
rcr
mov
add
pushl
in
or
mov
xchg
loopne
push
lds
mov
dec
mov
insl
in
push
cmp
xor
gs
outsb
mov
sub
dec
leave
or
or
into
or
inc
jne
jmp
sbb
xor
jno,pt
push
sbb
mov
out
xor
mov
lcall
dec
bound
cli
jne
pop
mov
xchg
dec
xchg
outsb
mov
inc
lcall
or
inc
fnstsw
ret
push
mov
lds
cwtl
xchg
inc
unpcklps
imull
addr16
outsb
repz
mov
enter
jno
add
nop
in
mov
fld
popf
roll
jl
imul
cltd
pop
pop
movsb
pop
enter
cmc
cwtl
push
sti
jmp
mov
xlat
addb
push
or
mov
mov
mov
lea
push
js
ds
fisttpl
dec
int3
mov
mov
movsl
or
insl
lods
mov
push
adc
jge
pop
icebp
clc
je
mov
dec
sbb
cltd
sbb
cltd
adcb
ja
sub
pushf
or
imulb
test
add
push
add
cli
dec
adc
insl
xorl
mov
xor
cli
loope
sub
xchg
int
out
sub
scas
add
fldenv
ret
inc
sahf
int
mov
mov
or
jo
movsb
shrb
cmp
jns
ljmp
movsl
in
jbe
pop
or
sysenter
in
in
arpl
int
cwtl
aaa
test
arpl
iret
movsb
and
cmpsb
outsl
mov
dec
pop
repz
btr
iret
cmpsl
pop
cmp
mov
rclb
call
pushl
int3
test
mov
xlat
sub
icebp
jle
or
rcrb
add
xchg
pushf
cld
ds
inc
cmpsl
inc
repz
pop
sbb
and
cmpsb
dec
stc
lcall
das
enter
je
mov
xchg
xor
fadd
dec
inc
pop
push
push
xor
xor
xchg
jmp
incb
mov
push
mov
fisubs
jmp
xchg
cmp
xchg
imul
out
mov
pop
mov
icebp
hlt
mov
flds
cli
sub
mov
inc
je
add
int
mov
sub
loopne
data16
dec
mov
test
ljmp
stc
mov
jae
pushf
iret
or
add
dec
mov
je
shr
sub
pop
call
roll
call
cmp
jbe
xchg
movsb
out
enter
sub
push
lahf
icebp
mov
mov
test
fldl
xchg
jno
jle
ds
pop
push
mov
jl
cmp
sub
movl
movl
xor
fbstp
aam
mov
lcall
pop
pop
mov
jp
add
push
das
fwait
and
enter
es
push
push
cmp
insb
popf
push
jb
js
loopne
sahf
std
loopne
xor
aaa
dec
mov
xor
or
cli
in
jmp
pop
mov
push
fsubrs
repz
movsb
scas
pop
cmpsb
sti
cmpb
mov
cs
jo
push
test
stc
aaa
js
dec
or
mov
or
stos
jne
cmpb
push
lds
hlt
jo
inc
dec
andw
xchg
test
out
jno
insl
sub
dec
ret
mov
repnz
adc
and
clc
or
jge
pop
add
sub
inc
mov
adc
rcr
sub
xchg
daa
jmp
push
pushl
test
cmp
dec
dec
or
sqrtps
fmull
cld
dec
in
xchg
je
cmp
test
xchg
xchg
rcrb
test
dec
popa
xchg
fsubrs
or
fidivl
or
dec
ficompl
cmp
pop
mov
cmpsl
addl
sti
or
lret
scas
inc
cmc
pop
mov
jbe
aam
sahf
adc
mov
cmpsl
add
jne
je
adc
sahf
mov
sbbl
cmp
jecxz
test
pop
mov
pop
std
jb
in
dec
sub
addr16
push
push
push
mov
or
loopne
cmpsb
hlt
cmpsb
jo
test
cmp
or
popl
jg
sub
sbb
inc
xchg
test
mov
loope
fnsave
bound
mov
std
cwtl
pushf
stos
enter
lods
movsb
inc
out
or
scas
adc
pushf
jns
jne
xchg
xor
and
ret
mov
push
es
into
mov
aad
lock
popa
and
or
dec
xchg
jg
in
sbb
pop
and
mov
xchg
lcall
inc
inc
movsb
les
push
and
pop
pop
imul
popa
pop
in
push
imul
lret
push
subl
std
sahf
sbb
movsl
inc
add
and
aas
faddl
pusha
dec
jo
and
cmpsl
sub
je
dec
lcall
adc
imulb
push
xchg
sti
inc
jns
adc
jg
jecxz
test
cmp
bound
pusha
fs
pop
rcrl
test
mov
xor
xchg
inc
out
and
inc
jbe
fistl
add
xor
cmp
add
sub
push
mov
jg
ds
xor
loope
cmp
ss
je
push
pop
mov
push
lods
std
mov
ja
fsubrl
sbb
jo
mov
mov
jae
pop
mov
sbb
repz
and
loop
adc
popf
push
dec
jge
jmp
loop
cmp
xchg
in
and
push
mov
sbb
jmp
je
int
xchg
or
pop
loopne
sub
int3
or
add
jmpw
pop
add
pop
orl
mov
or
mov
adc
loope
and
stc
icebp
and
mov
add
sbb
push
repz
das
add
aas
fcoml
cmp
jecxz
pushw
pushf
cmpsb
dec
cltd
mov
ret
and
sarb
cmp
out
in
sub
xor
inc
or
xchg
pop
or
jae
daa
je
fistpll
icebp
push
dec
out
add
dec
fadd
std
xor
push
and
mov
es
xchg
cltd
insl
into
arpl
sbb
mov
lods
cmp
movsb
or
sbb
and
popw
shll
inc
popa
nop
jae
sub
and
test
pop
mov
or
nop
test
fisttps
cmp
aad
jo
jecxz
pop
push
jg
sbb
jae
add
mov
stos
nop
add
add
negb
add
xchg
sbb
cmc
scas
add
movsl
fidivrl
mov
and
std
inc
adc
dec
cmpl
pop
push
cmp
je
sub
dec
lret
sbb
mov
loopne
movsl
je
adc
jmp
mov
sbb
add
sub
add
mov
xor
or
cmc
xchg
ss
mov
ss
sub
jns
mov
push
fs
fadds
ja
sub
sub
fstpl
cwtl
add
ljmp
mov
cs
pop
das
sub
xchg
pop
mov
aad
mov
mov
aam
cmp
pop
xchg
loope
bound
fdivr
cmpsl
data16
into
sbb
fildl
jle
push
add
mov
and
out
mov
xchg
xchg
in
pop
xchg
ffree
xchg
rorb
xchg
mov
pusha
inc
fildll
cmpsb
cmp
mov
and
jb
out
mov
aam
nop
leave
xchg
push
push
loope
and
and
imul
fstl
xchg
sbbb
push
test
outsl
shlb
or
aam
add
sbb
out
mov
bound
push
xchg
pop
jge
sbb
push
jmp
push
add
xchg
cmp
aaa
jae
jbe
mov
mov
cltd
xor
loopne
js
xchg
xchg
push
xor
dec
cmp
push
jbe
or
test
icebp
add
jmp
iret
adc
xchg
push
repnz
mov
and
arpl
jne
pop
or
mov
jle
arpl
mov
pusha
xchg
mov
cmc
mov
push
and
repnz
call
and
and
mov
repnz
or
inc
sbb
fnstcw
aad
movsl
clc
lods
adc
add
arpl
mov
or
and
mov
int3
add
inc
dec
aad
sub
mov
es
sub
xchg
pop
out
lahf
clc
jno
pop
and
aas
inc
insl
mov
mov
jecxz
test
popf
pop
mov
and
push
enter
and
cltd
sbb
mov
loop
into
fsubp
pop
jle
mov
call
shll
sub
sub
adc
ja
nop
ss
push
adcb
incl
inc
cli
push
dec
pop
adc
cmp
dec
int
push
repz
pop
std
test
cmp
and
inc
mov
ret
aas
inc
push
stc
or
xor
rcrl
pop
xchg
pop
inc
into
dec
jne
std
cmp
imul
jmp
mov
pop
aaa
hlt
cmpsb
adc
adc
jae
jno
aam
out
es
push
xor
dec
out
jo
sub
xchg
fdivrl
adc
jae
cmp
hlt
aad
push
jl
mov
jns
dec
stc
pop
dec
adc
leave
jge
outsb
leave
das
data16
xchg
adc
call
lret
pop
into
xchg
rcl
mov
dec
jo
mov
js
outsb
in
popf
insl
dec
xor
mov
fistpl
sub
jmp
mov
pop
cmp
cmp
jecxz
test
cmpsl
mov
dec
add
out
scas
enter
push
hlt
loope
and
cmpsb
cmp
pop
adc
dec
and
jns
pop
cmpsb
sahf
xorl
and
in
mov
sub
fistl
jl
movb
and
movsb
push
data16
xchg
mov
xchg
cld
sti
jno
dec
pop
addr16
mov
movsb
negl
ljmp
fwait
adc
outsb
clc
fidivs
popf
outsl
in
jp
cmp
push
adcb
stos
stc
pop
orl
or
push
mov
repz
jle
push
ficompl
jge
sbb
inc
stc
xor
ljmp
shll
or
sbb
and
outsb
in
int
das
pop
movsb
jg
repz
mov
add
pop
sub
adc
shll
cs
sbbl
imul
xchg
cmp
mov
pop
mov
cmpsl
popf
sarb
jmp
out
lret
push
sbb
es
push
or
sub
sub
mov
push
sbb
jle
icebp
rol
aaa
arpl
lahf
cmp
loop
lods
jo
test
cmp
mov
pop
insl
adc
lret
cmc
lds
sbb
insb
into
mov
xchg
and
inc
or
inc
stos
adc
xchg
dec
add
in
test
jecxz
push
mov
mov
popa
jns
and
andb
loope
movsb
frstor
xor
jmp
inc
mov
lods
push
sti
adc
jo
push
cmp
mov
movsl
out
push
lock
in
out
stos
add
push
sti
jmp
ljmp
push
cmpsl
mov
pause
cmpsl
outsl
imul
mov
incl
leave
imul
sbb
xor
fbld
mov
jg
sbb
std
xchg
push
jnp
fildl
lcall
cmp
push
xor
jnp
dec
inc
je
mov
mov
sub
and
in
pusha
int
scas
sub
or
popa
loop
jns
pop
ret
xlat
inc
and
mov
jno
dec
inc
aad
mov
stos
adc
sbb
push
dec
mov
dec
sbb
lock
or
int
testl
int
int3
sub
sub
mov
xorb
je
in
jle
dec
mov
jnp
xor
xor
std
add
lods
add
call
xlat
daa
arpl
pop
mov
add
cmpsb
inc
cmp
rol
push
movsb
in
mov
clc
add
lods
push
sbb
push
push
ret
cmc
rcrb
cmp
loopne
call
xlat
ja
aas
jnp
sub
loope
xchg
jle
sbb
dec
out
dec
pop
scas
fsubs
sbb
xchg
nop
test
mov
sbb
stc
iret
mov
fld
insl
pop
rcrl
cs
push
cmp
add
lret
mov
push
push
sti
add
xchg
ljmp
pop
cmp
xor
or
mov
stc
cmp
out
movsl
adc
fwait
or
fdivs
js
and
and
out
xor
inc
dec
sbb
fidivrs
cmp
stos
int3
and
and
adc
test
ss
scas
xor
xchg
cmp
ja
daa
pop
xchg
mov
subl
mov
mov
in
mov
imul
test
out
dec
vpunpckhbw
arpl
movsl
test
or
sbb
dec
push
jbe
mov
call
pop
dec
push
or
cmpsl
subb
push
push
jle
mov
inc
cld
test
or
ret
scas
inc
inc
fidivl
cmp
jo
push
push
cmp
xor
cmp
dec
call
inc
icebp
push
pop
dec
fsts
and
jp
ss
stos
push
aaa
inc
outsl
mov
in
out
stos
xlat
mov
cld
jne
pusha
dec
std
cmp
push
and
mov
add
frstor
cmpsl
xchg
movsl
push
stc
adc
sbb
mov
inc
int
or
xchg
fdivrs
or
mov
lahf
cmp
out
insb
loope
data16
push
lret
or
mov
sbb
xchg
cmpl
xor
adc
pop
sbb
xchg
pushf
sub
add
mov
and
dec
mov
sbb
mov
bound
mov
add
paddsb
out
int
mov
enter
ja
sub
addl
jmp
xchg
js
outsb
mov
xchg
mov
rclb
lcall
fs
daa
sbb
ret
jmp
dec
test
mov
lcall
ss
pop
cmpsl
scas
cwtl
ljmp
pop
nop
test
adc
inc
mov
and
clc
aas
pop
xchg
lret
and
mov
dec
pusha
sbb
inc
push
dec
test
je
jo
fstpt
xor
data16
ja
das
mov
push
inc
cmc
int3
pop
cmp
das
adc
out
lea
jmp
sbb
inc
adc
dec
ficoms
dec
adc
mov
xor
shrl
aaa
mov
pop
hlt
add
add
jnp
jbe
adcl
mov
sti
fwait
xor
mov
mov
sub
jb
pop
ret
movsl
aaa
mov
or
push
sbb
idivb
cmp
and
scas
pop
push
mov
adc
push
mov
adc
inc
loope
xchg
jb
loopne
or
sarl
out
imul
cmpsl
add
in
out
mov
movb
outsl
rcr
adc
stos
sub
xor
sbb
adc
dec
mov
push
sarl
jns
mov
push
and
push
xchg
cmpsb
pop
out
ret
fisubrl
insl
in
rcll
ds
jo
cmpsl
subb
sbb
add
xor
shll
rorl
mov
mov
jnp
dec
xchg
in
test
pop
xchg
pop
int3
adc
fs
jne
mov
jb
xchg
jmp
pop
cltd
xchg
pushf
pop
jge
int3
in
jg
fsubs
cmc
inc
aam
jg
pop
pop
outsb
pop
clc
shlb
cmp
fsubl
sub
sahf
test
cmpsb
scas
mov
cld
insb
add
adc
outsb
cmp
call
mov
dec
push
pop
mov
mov
in
mov
sbb
jp
iret
int
repz
cmpsl
jp
sub
inc
in
sti
sub
jb
xchg
sub
je
faddl
ss
xlat
lret
cmp
movsb
scas
inc
outsb
or
push
pop
in
xlat
push
sbb
loope
jo
movsb
lea
lcall
popa
pusha
mov
push
ret
cld
xor
xchg
int
int
out
inc
ret
jb
pop
call
mov
and
and
popf
push
mov
test
rcrb
mov
push
clc
push
lods
out
cs
adc
xchg
cs
mov
push
addl
std
lock
xlat
outsb
xchg
dec
xchg
xor
sarl
sarb
stc
movlps
cs
imul
rorl
mov
clc
and
int
mov
dec
std
test
push
jecxz
fsub
xchg
mov
sbb
mov
ret
loope
sub
and
mov
stos
aad
push
rcrb
jno
ja
sub
stos
xlat
ja
ficompl
lahf
shll
and
dec
mov
fs
mov
cmp
push
xor
mov
lods
cli
pop
mov
push
xlat
dec
popf
sbb
cld
push
in
xor
enter
lcall
inc
add
cmp
inc
mov
and
cli
mov
setl
pusha
out
cltd
insl
adc
xor
add
or
sub
lock
aad
sub
mov
pop
xor
outsl
rcrb
jns
cmpsb
or
dec
rcrl
xchg
dec
cmpsl
pop
pop
lock
and
fiadds
dec
xor
mov
push
pop
jo
pop
testl
fsubl
xchg
fmul
cli
dec
inc
xchg
in
mov
shr
pop
fimull
and
mov
lahf
jnp
loope
adc
mov
mov
jae
outsl
lods
xor
lcall
or
xlat
pop
shl
test
insl
pop
mov
inc
mov
dec
repz
xchg
daa
cwtl
aad
cld
insl
data16
dec
popf
aam
iret
lods
sub
and
shlb
arpl
sbb
ficoml
sahf
xchg
adc
adc
call
cs
pop
mov
imul
lock
cmp
jle
fcmovnb
xchg
pop
cmc
inc
aad
cmpsl
insl
stos
xchg
insb
fstl
ja
jae
push
mov
dec
loope
add
jae
xchg
cmp
pusha
mov
bound
cmc
fucomp
cmp
inc
ret
insb
fmull
mov
in
popa
push
add
in
cwtl
divl
inc
add
outsb
pushf
xor
in
cwtl
aaa
cltd
dec
jnp
push
lcall
adc
xchg
mov
imulb
shrb
jno
or
icebp
sub
mov
mov
or
cmp
pop
push
in
int3
mov
rorb
add
out
adcl
int3
mov
adc
outsb
cmpsb
mov
jg
pop
sbb
andb
fucom
icebp
jmp
icebp
xchg
xchg
jge
cmpsl
add
movsl
std
loope
pushf
jg
adc
pop
push
insb
clc
sub
jb
mov
stc
dec
or
in
sbb
stc
push
outsb
mov
adc
pop
es
sbb
das
sbb
fwait
js
lock
mov
add
cmp
push
push
scas
inc
ds
popa
jbe
cmp
std
add
cmpsb
cmp
add
inc
aad
fistl
push
daa
dec
cs
mov
mov
dec
mov
push
les
leave
sbb
mov
popf
inc
pop
xor
cmp
stc
cli
addb
push
lods
and
pop
rorb
imul
call
add
fistpll
sbb
repnz
test
lods
dec
cwtl
push
fsubrp
pop
xchg
dec
add
mov
cld
stos
leave
insb
mov
jno
nop
iret
mov
daa
xchg
cmp
pusha
mov
ds
mov
xlat
cmp
and
sub
loopne
hlt
adc
pop
dec
push
iret
int3
mov
gs
cmp
mov
xor
sbbl
sub
arpl
and
mov
adc
lahf
mov
repz
sub
outsl
outsl
and
gs
lock
movsl
or
mov
mov
test
int3
repnz
mov
pop
aas
fadd
insl
jg
cmpl
pop
shrd
add
pop
xchg
dec
dec
lret
cwtl
test
mov
push
push
call
pop
insb
mov
sbb
sub
xchg
sub
xor
lods
mov
and
xchg
xor
xorl
push
subb
loop
outsb
mov
inc
and
ret
xor
cld
in
cmp
add
add
add
mov
push
or
nop
add
mov
pop
and
dec
aaa
adc
xor
xor
or
das
lock
sbb
xchg
fistpl
inc
dec
movsb
stos
push
enter
mov
aaa
arpl
inc
pop
mov
sbb
andl
inc
inc
popa
add
pop
popf
push
dec
xchg
sti
daa
xchg
scas
mov
lods
shll
negb
in
mov
lods
jle
ljmp
inc
sub
ss
mov
scas
xor
inc
call
xchg
and
xorl
inc
mov
mov
scas
jae
jno
ljmp
rcl
jecxz
movsb
aad
push
pop
mov
mov
fistps
sub
dec
pop
hlt
inc
jl
fcoms
xor
out
adc
ss
push
mov
xchg
and
and
cmp
mov
push
and
adc
jno
cli
sti
ret
add
push
out
call
std
outsl
pop
repz
add
dec
add
inc
pushf
push
mov
aad
xchg
cmpsl
inc
pop
pop
scas
out
mov
test
in
jo
adc
movsl
cmc
pop
cmc
ret
sub
repnz
mov
addl
pushf
clc
loopne
mov
push
cld
or
jbe
ljmp
pop
mov
push
push
mov
mov
fcompl
inc
and
mov
fwait
pop
std
cmp
or
gs
and
cmp
mov
inc
idivl
push
addr16
xor
out
cmp
xchg
lea
in
inc
jae
add
pop
push
outsb
cmpsl
out
rep
out
pusha
scas
loope
pop
sub
sub
mov
mov
jg
xlat
les
and
adc
nop
mov
sub
sbb
out
subb
mov
mov
out
or
push
nop
stos
cmp
pop
dec
mov
pop
cmp
sbb
jbe
rcrb
daa
jge
ret
or
mov
adc
aas
pop
dec
in
sti
bnd
sub
mov
sbb
push
push
cmc
dec
in
mov
int
loop
mov
cmp
scas
icebp
in
mov
sbb
insb
sub
push
ds
fcmovbe
notb
pop
adc
xchg
outsl
push
dec
xchg
jnp
mov
push
lahf
xchg
outsb
sbb
lea
addr16
lret
cs
in
rorl
push
xchg
dec
enter
push
jo
pop
inc
sub
out
paddusb
and
dec
mov
leave
pop
and
mov
inc
loope
push
xchg
lret
sub
sub
das
mov
cltd
hlt
pop
xchg
repz
adc
cmp
cmp
loopne
adc
lds
cmpsb
mov
les
cmpsl
movl
pop
adc
push
adc
cwtl
in
inc
repz
call
sti
inc
enter
stos
mov
je
xor
je
fdivs
sbb
push
sbb
pop
dec
and
cld
jo
call
test
insb
ds
mov
in
sbb
sub
test
xor
in
int
xchg
ja
push
cmp
nop
in
fsts
cmp
inc
enter
ret
jmp
adcb
fldcw
adc
scas
jns
outsl
ret
inc
arpl
lock
daa
int
pop
mov
js
rclb
enter
int
sbb
sahf
mov
jecxz
insb
test
push
ds
pop
jecxz
mov
inc
dec
daa
mov
sbb
outsl
dec
iret
xchg
sbb
cwtl
cmp
sub
testl
jecxz
dec
mov
sbb
sahf
ret
insb
mov
xchg
mov
adcb
pusha
out
pop
adc
mov
mov
cltd
cmp
imul
jno
xchg
test
jne
xchg
adc
mov
adc
xor
mov
mov
cltd
cmp
inc
out
sahf
cs
jb
mov
sahf
xor
jl
popa
xchg
sub
and
pop
push
fildl
les
insl
fmuls
mov
and
mov
lahf
inc
mov
or
inc
mov
inc
clc
pop
mov
mov
jle
hlt
pop
jmp
sbb
xchg
inc
mul
mov
or
pushf
ret
mov
cmpsb
in
dec
hlt
in
push
inc
test
mov
xchg
xor
pop
cltd
cltd
out
adcb
and
std
cmp
stc
push
mov
mov
mov
push
xchg
cmpsb
adc
push
imul
cmp
adc
arpl
cli
pop
dec
fbstp
loop
or
jnp
std
dec
mov
mov
test
aad
nop
scas
loop
movsb
mov
mov
or
inc
push
loop
cmc
jge
notl
lret
fwait
xor
hlt
inc
ret
mov
fisttpll
out
adc
pop
rcrl
cltd
or
adc
mov
push
imul
vpsrlq
fistps
stos
push
mov
xor
insb
or
jno
in
ljmp
xchg
pop
shll
adc
sub
int
push
or
fsts
ret
filds
jno
insb
inc
cli
cmc
test
jb
popf
xor
dec
int
mov
jecxz
pop
inc
xchg
dec
mov
dec
les
pusha
mov
inc
in
loope
fsubl
mov
mov
pop
or
imul
jmp
sub
outsl
cwtl
or
and
movsb
leave
or
mov
push
outsb
add
out
xchg
sbb
jmp
jmp
daa
pushf
movsb
lods
xchg
cmpb
into
pop
add
inc
insl
jae
mov
aad
lock
adc
call
ja
pop
pop
or
lret
mov
movsl
mov
or
sbb
or
or
push
jle
lock
ds
inc
std
enter
inc
xor
cld
jg
inc
add
sub
cwtl
out
adc
push
xchg
mov
jl
cmp
dec
jge
mov
dec
xchg
popf
dec
addr16
mov
pop
fdivl
sub
popl
fcmovbe
xchg
in
in
dec
pop
push
xchg
cwtl
aaa
mov
jg
adc
cli
aaa
push
jo
shlb
lret
and
push
dec
scas
jmp
ja
mov
movsb
push
dec
sub
xchg
mov
adc
ret
in
push
stos
je
jae
in
mov
mov
cltd
pop
clc
shlb
popf
mov
adc
pop
sbb
test
push
inc
mov
push
xor
mov
dec
cmpsl
fs
sarb
push
mov
cmp
pop
xorl
aad
das
out
mov
imul
xor
sbb
mov
lret
adc
out
pop
icebp
cmpl
jbe
popf
outsb
inc
xor
fidivrl
xor
mov
ja
sbb
push
idivl
aad
es
inc
or
or
push
pop
lea
pop
mov
push
in
movsb
sub
leave
pop
clc
and
and
xchg
les
mov
outsl
pop
push
push
fnsave
clc
ja
xchg
push
lret
fsub
xor
pop
dec
jnp
filds
in
xchg
jp
lcall
add
js
lret
insl
jb
mov
stos
cmpsb
mov
mov
xor
jno
loop
mov
xor
jg
mov
movsb
divb
xor
adc
cwtl
xchg
fstps
xor
in
and
cltd
aad
mov
aaa
in
cmpsl
mov
pop
fisubrs
xchg
inc
add
sbb
call
xchg
hlt
lods
mov
push
shl
jmp
sbb
jae
mov
push
stc
add
mov
imul
pushf
pop
sub
sbbb
or
push
lods
jmp
out
sbb
in
inc
pop
rcl
es
repz
add
mov
call
fs
adc
psadbw
cltd
pusha
orb
xorl
ds
adc
sbb
out
pop
mov
and
test
xor
mov
das
js
and
dec
es
lahf
dec
push
xchg
dec
inc
cmp
push
push
int3
and
inc
xor
addr16
mov
out
inc
repz
out
cwtl
xor
adc
pop
hlt
push
inc
push
lret
gs
sbb
cs
clc
jge
mov
lcall
mul
xor
inc
inc
fidivs
and
add
out
inc
sub
stc
pop
sub
std
and
cmp
mov
or
clc
mov
pop
lret
and
mov
ret
push
jle
xchg
movsl
push
divb
push
mull
jmp
pop
mov
lret
aam
call
push
add
ret
decl
jb
lret
pop
test
xchg
jbe
movsb
mov
mov
adc
ret
sarb
fnstcw
lahf
insb
gs
mov
cmc
stos
jbe
movsl
scas
lea
hlt
inc
outsb
psubw
pushf
clc
xor
cmp
mov
pop
insw
rorb
or
adc
mov
pop
sub
mov
sub
sbb
adc
or
decl
loope
out
fsubs
push
mov
mov
xchg
dec
sbb
addr16
mov
mov
or
sarb
mov
rcrl
ss
mov
mov
add
jae
loop
mov
test
xchg
mov
lret
dec
imull
ret
fldcw
or
cli
pop
cmp
cmpsb
aad
xchg
int3
mov
mov
mov
aas
aad
and
int
iret
or
pop
mov
nop
dec
hlt
insl
stos
pop
sbb
mov
jns
xor
cld
or
popf
mov
negl
in
mov
popf
lcall
fsubl
sbb
add
pop
dec
bound
vhaddpd
jmp
inc
cmpsb
enter
inc
xor
push
dec
jg
push
out
lds
repnz
mov
push
inc
jl
push
mov
call
push
jb
inc
in
xor
adc
es
pop
ret
outsl
jnp
inc
jnp
sbbb
pop
add
xchg
xchg
xlat
pop
jg
iret
xor
mov
or
or
dec
jno
aas
push
je
add
cmpsb
inc
test
daa
xor
cmp
or
aaa
mov
cmpsb
shlb
adc
push
or
ret
shrl
xor
jae
jecxz
cwtl
adc
dec
mov
inc
cmpsb
push
xchg
lret
insb
push
and
adc
out
jmp
push
daa
mov
lcall
sbb
fldt
imul
inc
mov
enter
mov
cmp
divl
mov
jg
inc
js
pop
ds
shrl
mov
fstpt
sub
ja
and
ss
imul
mov
dec
sbb
push
dec
out
push
and
or
rolb
mov
lret
xchg
shrl
in
ljmp
cmpsl
les
or
pop
les
shrb
lcall
out
cmpl
mov
mov
jge
and
ficoml
jne
pop
add
add
cmp
inc
gs
shll
xor
in
sub
jg
jbe
dec
cmpsb
sbb
in
ret
xchg
xor
sub
out
push
sub
idiv
pop
cwtl
pop
ret
push
lea
sbb
lods
andb
pushl
pop
test
stos
in
lods
xor
pop
in
int
addb
dec
jnp
adc
aam
or
mov
or
inc
fs
fmull
fs
push
test
jmp
cmp
pushaw
mov
xchg
shl
test
fwait
lods
jg
dec
hlt
outsl
mov
pushf
xor
faddl
cmp
cmp
lret
sbb
mov
movsl
jns
ljmp
pushf
out
cmp
and
cmp
cmp
lea
dec
mov
notl
mov
add
xchg
shr
in
cmp
cli
imul
lods
sub
ja
mov
add
pop
ret
inc
push
and
xor
push
cmp
sti
pop
mov
jo
stos
int3
in
fisubrl
repz
jmp
inc
xchg
push
mov
jno
dec
sbb
xchg
push
in
in
cmpsb
inc
repnz
mov
push
add
ja
rcrb
ds
sub
adc
fcoml
ret
lcall
test
test
enter
ret
mov
or
push
hlt
shll
xchg
loopne
test
mov
fwait
xlat
xchg
inc
ret
inc
fwait
nop
adc
test
push
inc
nop
in
xchg
add
in
cli
out
or
cs
dec
dec
sub
mov
inc
mov
cmc
push
inc
pop
jno
rorl
or
cmp
lods
icebp
das
pop
aas
fnstenv
movsl
pusha
lods
lret
pop
out
pop
cmp
and
jb
mov
xchg
in
mov
cmp
jecxz
insl
mov
jp
dec
scas
jecxz
andl
fiadds
xchg
push
adc
call
jb
mov
pusha
inc
cmp
fistl
xchg
mov
cli
adc
sbb
inc
jmp
mov
push
shld
push
lcall
mov
shlb
xchg
xor
std
hlt
and
cltd
add
mov
adc
sahf
ret
xchg
or
fs
mov
gs
xchg
xchg
rcrb
cmpsl
fsubrp
mov
sahf
pop
fbstp
inc
lods
outsl
cwtl
mov
adc
enter
lret
pop
sti
adc
adc
jl
jns
daa
adc
push
xchg
int3
adc
pop
ds
cmp
stos
inc
cmc
insl
mov
les
pop
xchg
xor
loop
fmuls
insb
rep
mov
repz
xor
push
cmp
jle
adc
loopne
xchg
mov
adc
sub
data16
aad
mov
loopne
addr16
jo
sti
inc
int
repz
and
cs
mov
xchg
jl
push
es
mov
sti
or
push
fcoml
mov
popa
fs
sbb
mov
pop
jbe
jl
dec
mov
aam
aam
fstl
mov
psubsb
sbb
push
arpl
es
mov
adc
add
cltd
push
dec
or
pop
je
push
fwait
stc
test
loope
mov
std
cmp
es
rclb
jns
ljmp
mov
negl
lods
sbb
xchg
sbb
ja
mov
insl
adc
cld
mov
mov
mov
cli
inc
jno
sub
in
add
fs
push
test
es
shl
add
and
pop
inc
enter
mov
lret
loopne
pop
jmp
sbb
sbb
fs
and
mov
lahf
outsb
push
fs
incl
xor
popf
cli
sti
sbb
and
push
aam
mov
inc
mov
jb
xor
test
sub
sbb
imul
int
xlat
orb
stos
sub
or
pop
push
jl
pop
out
shrl
dec
stc
push
jl
icebp
aaa
inc
xchg
jge
sbb
inc
or
pop
filds
cmp
adc
lock
add
aam
sub
mov
roll
gs
pop
mov
in
mov
loope
jmp
mov
ret
cltd
push
divl
rorl
pushf
fiadds
push
test
sub
fldcw
or
cltd
add
aad
pop
adc
test
ret
andb
xchg
xor
jb
ja
pop
ss
push
mov
ljmp
mov
adc
mov
cltd
clc
jl
push
mov
mov
mov
gs
and
pushf
mov
mov
cli
stc
sarb
cs
dec
mov
adc
push
and
cmp
push
shll
xchg
mov
int3
insb
cmp
xor
adc
loop
call
out
and
jge
push
js
sbb
cwtl
xchg
push
jecxz
dec
fs
dec
sbb
out
inc
mov
xor
mov
xchg
arpl
loop
push
adc
and
or
sbb
push
iret
rol
push
jo
loop
pop
stos
push
insb
mov
mov
mov
jae
mov
call
aaa
stos
out
insl
inc
xchg
cmp
mov
inc
add
adc
aam
lea
std
out
mov
leave
in
mov
and
sub
sbb
cmp
fsubp
adc
xlat
jno
sarl
cmp
movsb
std
aaa
stos
mov
lcall
mov
pop
push
pop
dec
mov
pop
dec
nop
in
xchg
nop
xchg
xchg
test
notb
fcmovne
xor
leave
mov
jne
mov
cmp
adc
sbb
xor
lcall
mov
movsl
push
loop
scas
xchg
adc
adc
or
mov
outsl
sub
jp
out
adc
sub
subl
iret
fs
xor
jbe
push
lcall
cmp
test
mov
cmpsl
loop
in
push
roll
adc
cli
mov
push
xchg
std
test
andb
cmp
jo
cmp
mov
push
mov
les
shlb
pushf
or
adc
sahf
xor
lock
xor
loop
sub
repnz
push
fsts
pop
out
mov
mov
adc
and
jae
mov
jle
dec
daa
add
mov
imul
fisubl
jecxz
daa
mov
popa
int3
jne
clc
dec
xor
push
xor
and
lea
xlat
sbb
shll
mov
ljmp
fcomp
imul
je
shl
push
fildll
sub
ret
mov
dec
icebp
xlat
aaa
imul
xchg
std
testb
movsl
std
fdivrs
nop
mov
adc
add
cli
out
jbe
pop
popf
movsb
loope
loope
or
xor
mov
xchg
shl
and
mov
es
mov
movb
xchg
sahf
cmc
lods
cmp
dec
and
es
mov
dec
mov
xor
adc
mov
je
out
and
sub
jle
jecxz
push
pushw
cmp
push
lret
lds
add
clc
jnp
inc
aam
enter
popa
cltd
subb
xor
xchg
stos
or
fwait
ljmp
mov
imul
push
in
and
cmpl
cmp
adc
lods
sbbb
push
mov
and
aaa
stos
lds
xor
mov
mov
pop
adc
or
lds
sbb
add
out
push
fwait
cmp
cmp
call
cmp
cld
pop
fadd
ret
rorb
add
mov
lock
mov
mov
xchg
pop
jecxz
into
dec
sbb
xchg
movsl
pop
lret
pushf
mov
lea
xchg
adc
hlt
mov
mov
mov
hlt
push
aad
cltd
sti
adc
jns
aam
inc
out
mov
push
jns
or
and
call
shll
pop
xor
mov
cmp
cmp
adc
adc
adc
ljmp
cwtl
arpl
xor
aad
stc
imul
pop
stos
xchg
negl
lahf
adc
cltd
test
out
test
push
repz
add
mov
outsl
xor
ds
lods
fwait
xlat
out
faddl
mov
outsb
aam
push
jge
mov
jbe
mov
cmp
sti
add
inc
aam
fcmovb
inc
xchg
shrl
sbb
imul
cmp
push
xor
out
je
sub
add
in
dec
cld
dec
xor
test
sub
jecxz
xor
inc
cmp
sti
lods
push
mov
je
xlat
push
loope
imul
aas
adc
pushf
mov
mov
jl
sbb
ficoml
punpcklwd
add
test
xchg
pop
aaa
in
fnstcw
lcall
aaa
ss
pop
out
cmp
push
test
jl
dec
mov
outsl
xor
dec
outsl
xor
add
and
call
adc
sbb
push
push
jb
popl
or
clc
call
mov
mov
sub
jg
or
pop
lahf
or
pop
fcomp
test
gs
cld
sar
mov
mov
jle
loop
out
aas
push
mov
fimull
inc
sbbl
jns
sbb
pop
mov
fidivrl
sbb
scas
cmp
jge
sbb
dec
in
pop
repz
jnp
add
cs
push
sub
sbb
hlt
les
xor
dec
rorl
sbb
scas
sub
mov
outsl
mov
mov
scas
push
aas
adc
outsb
xchg
mov
clc
dec
jae
enter
jb
mov
out
ljmp
push
lock
push
pop
or
fwait
loop
icebp
or
add
pop
jmp
cs
jg
andl
dec
mov
inc
scas
mov
cli
inc
inc
adcb
xchg
mov
ds
cmp
mov
pusha
test
jb
andl
pop
xchg
les
mov
push
inc
xchg
out
lret
mov
cmpsl
sub
and
xor
enter
sub
jo
mov
add
dec
sahf
or
cmp
out
fmuls
ret
in
nop
adc
aaa
and
and
cwtl
xchg
pop
push
mov
test
jge
adc
mov
cmc
stc
and
stos
packsswb
adc
pop
inc
push
mov
ret
push
adc
cmp
test
aas
or
push
push
jnp
stos
dec
sahf
mov
dec
push
rcr
add
loopne
inc
push
add
mov
rorl
push
cmp
leave
pop
push
out
push
sahf
outsb
xor
sbb
aaa
jb
hlt
sub
inc
xchg
out
pushf
stos
out
mov
jl
add
incb
push
sbb
mov
cltd
sbb
sbb
adc
xchg
hlt
popf
inc
mov
mov
xorb
mov
xchg
xor
mov
add
fadds
movsb
adcb
scas
fisubrs
or
cld
lea
push
dec
sub
mov
sti
divl
lods
divb
jne
mov
cmp
mov
out
xchg
adc
mov
mov
inc
shll
dec
xor
nop
mov
test
sahf
sub
scas
jmp
mov
shl
cmp
push
sbb
mov
adc
fsubrl
fldenv
stc
loopne
aaa
sbb
idivb
cmp
add
pop
cmp
ja
cmp
sub
jnp
aas
adc
mov
cmp
xchg
mov
out
xchg
xor
cmp
mov
gs
mov
jl
add
pushf
in
or
pushw
mov
std
cmp
out
popf
xor
pop
push
ret
inc
or
or
out
cld
push
inc
test
data16
mov
pop
ja
daa
mov
in
pop
cwtl
call
and
mov
les
shl
mov
pop
mov
xorb
cmc
loope
dec
jl
cmp
jae
data16
loopne
sahf
popf
push
fs
rdpmc
jne
test
add
sbb
adc
pop
pop
push
xchg
sub
ret
sarb
imul
in
fwait
xchg
cmp
addr16
scas
xchg
bnd
lea
mov
fisubl
and
dec
cmpl
mov
or
xor
clc
nop
sti
push
xchg
lock
mov
adc
or
sti
gs
fistpll
sbb
cmp
jle
mov
in
mov
or
mov
loop
dec
sbb
sub
mov
vaddsd
dec
pop
call
xor
ret
or
adc
int3
xor
adc
and
cli
pusha
adcl
movhps
sarb
add
ja
int
mov
bound
clc
mov
jge
inc
cmp
adc
dec
out
in
call
ds
mov
jp
sub
loopne
push
sub
sub
out
cli
xchg
cmpsb
lods
addr16
stos
adc
aaa
jmp
lret
mov
stos
out
cmp
sbbl
testl
cs
cld
xchg
test
jecxz
imul
push
popa
shlb
subl
mov
jnp
cmp
xor
jno
decl
cmp
push
stos
lret
mov
mov
mov
mov
push
popa
push
mov
std
pushf
push
jbe
int3
inc
sub
push
movsb
or
incl
popf
cmc
ficomps
rcll
cmp
loope
fmull
int3
pop
insb
outsl
or
ret
fst
push
push
ror
mov
cmc
jmp
push
sbb
cmpsl
orl
jg
pusha
int
mov
aad
inc
adcb
gs
cmp
push
in
test
inc
sbb
shlb
fs
xor
add
cli
cltd
sub
loope
ret
add
mov
add
add
lahf
scas
in
int3
xor
mov
lods
mov
scas
mov
popa
push
push
aaa
xor
cmc
dec
stos
nop
sbb
push
pop
push
xor
push
mov
xor
int3
fldt
fcomps
xchg
dec
dec
cmp
cld
popf
sarl
dec
cwtl
pop
sarb
add
insl
inc
jp
push
cmp
pusha
push
or
dec
xchg
popa
lods
adc
sbb
jb
movsb
jg
mov
push
inc
cmp
in
mov
shrl
pop
adc
push
push
push
xor
add
mov
pop
imul
push
jle
aas
cmp
mov
sub
xchg
xlat
push
push
sbbl
sbb
lea
shll
imul
insb
dec
xchg
mov
movsb
push
cmpsb
cmp
mov
and
inc
and
mov
push
jge
mov
and
adc
aaa
inc
or
std
iret
and
popa
push
aad
or
ret
into
aas
inc
inc
bound
inc
xchg
sbb
xor
sti
sub
jecxz
xchg
mov
xor
cld
jnp
cmp
dec
mov
mov
xor
cmp
mov
call
fiadds
lahf
xchg
push
add
xor
ja
mov
loop
inc
xchg
sahf
push
pop
mov
dec
mov
pop
xchg
mov
mov
shlb
mov
mov
push
cld
daa
jae
xchg
push
lock
nop
mov
das
add
in
xor
repnz
mov
fisubrs
insl
out
push
fnstcw
mov
pop
and
sub
push
sub
push
and
adc
mov
or
loopne
insl
stos
inc
stc
gs
addl
pop
cmp
adc
je
inc
jecxz
pop
ja
lock
xchg
inc
repnz
stc
js
test
mov
stos
mov
cmpsl
out
popf
in
gs
imul
int3
inc
sub
adc
fldl
push
push
in
loop,pn
dec
aas
test
mov
rorb
cmp
icebp
dec
cmp
pop
aas
int
xchg
fildl
push
mov
sub
loope
sbb
add
jnp
ja
shlb
adc
mov
pop
out
rclb
add
repz
sti
test
inc
mov
mov
negb
push
inc
mov
jp
xor
test
pushf
mov
push
lods
xchg
stc
pusha
es
repz
pop
addb
in
inc
sub
lahf
pop
jbe
push
add
push
mov
call
pop
fimull
not
cmpb
push
arpl
pop
pop
cmpsb
stc
and
lahf
lods
aaa
and
xchg
fs
test
adc
div
and
ffree
mov
sti
cmp
dec
jle
xlat
and
pop
leave
push
movsl
add
cmp
pusha
rcr
loope
leave
loop
cmp
imul
adcl
pushf
mov
add
inc
ret
xor
jnp
popa
dec
addl
inc
aas
jle
loope
and
sub
repz
xchg
jbe
cmpb
sti
cmp
fwait
or
pop
clc
shll
int
jg
stc
sahf
movaps
mov
mov
push
mov
cmp
push
sarb
push
mov
add
in
dec
testl
in
add
aad
sub
lcall
loopne
stos
jmp
loop
enter
call
int
fildll
lock
add
push
xchg
scas
mov
inc
adc
jmp
out
jmp
icebp
sub
adc
xchg
pop
push
addl
or
cltd
out
loopne
cmp
mov
mov
mov
dec
cmpsl
xchg
fs
int
xchg
pop
icebp
and
cli
cmp
popa
dec
mov
add
lock
jns
mov
xor
gs
mov
xchg
cmp
mov
dec
pop
or
jns
adcb
lret
sar
movsl
push
mov
pop
and
leave
dec
jne
sub
cmp
adc
add
lret
xchg
mov
and
pusha
movsb
pop
or
adc
xor
insl
or
pop
dec
lock
jl
pop
jl
cmp
jge
and
pop
xchg
jecxz
ss
lret
lods
cmc
cmp
mov
repnz
movsl
outsl
pop
stc
lcall
and
sbb
inc
mov
shrl
lret
mov
push
mov
hlt
loope
sub
insb
dec
mov
ret
xchg
les
popf
fisubl
rcrl
cmp
ss
mov
add
int
sbbl
mov
mov
xchg
out
inc
in
mov
insl
aaa
sahf
xor
push
xor
aas
mov
or
xor
loope
and
pop
iret
subl
push
int
ret
es
aad
cltd
pop
mov
or
inc
rcll
daa
rol
fwait
daa
xor
movsl
test
add
and
or
in
dec
dec
or
fdivrs
jnp
cmc
dec
sbb
ljmp
xchg
in
cwtl
mov
cmp
cmc
outsl
lret
pop
or
loopne
insb
dec
xor
push
mov
mov
aad
andb
sub
ret
cli
cli
in
mov
sub
stos
stos
cmpsl
mov
loopne,pt
xor
mov
jne
out
jbe
cltd
push
into
dec
xchg
add
ret
mov
xor
xor
popa
clc
dec
push
iret
pushf
cld
in
cmp
mov
je
and
pop
pop
sbb
and
dec
sbb
xor
out
cmp
sbb
call
mov
ljmp
sbb
inc
xchg
out
jl
mov
sti
out
test
sub
dec
inc
push
xor
mov
cltd
xor
cmp
std
mov
pop
pop
out
adc
jecxz
dec
icebp
outsb
sub
lahf
mov
fldcw
push
pop
push
shl
xor
jns
movsl
fstpt
ss
sub
mov
jb
dec
xlat
nop
and
add
xor
xchg
jno
xchg
es
push
les
mov
out
rcr
add
sarb
scas
mov
call
jge
mov
mov
inc
sub
jbe
js
fiadds
sti
mov
mov
mov
outsb
and
add
stos
sub
mov
mov
jle
mov
push
or
jle
ss
xlat
stos
push
sbb
lret
sbb
mov
clc
repnz
rorb
fs
aaa
xchg
push
cwtl
nop
ds
fdivs
adc
fmuls
inc
cmpsb
mov
lahf
push
mov
imul
loop
std
mov
xchg
pop
push
or
xor
push
rcr
sbb
movb
adc
into
fwait
mov
repz
js
ja
ret
in
movsb
sbb
add
mov
test
adc
xchg
mov
mov
aas
fidivrl
add
inc
test
popf
push
push
jne
lds
gs
mov
mov
and
shll
fnstcw
loopne
sub
lock
nop
push
mov
scas
cmp
inc
repz
inc
dec
dec
pop
ret
mov
adc
mov
push
xor
and
ror
dec
xor
aaa
nop
int3
mov
mov
xor
or
jmp
shlb
sbb
cmpsl
ret
mov
jg
xorl
sahf
lock
repnz
das
xor
mov
lods
add
xor
add
cltd
pop
add
and
pop
sub
shlb
mov
stc
xor
fidivrs
jp
fld
adc
ds
jnp
xchg
lret
cmpsl
addb
js
sbb
mov
popa
into
mov
inc
daa
stc
test
add
pop
xchg
pop
subb
xchg
mov
dec
xchg
ds
cmc
lret
xor
int3
inc
clc
and
f2xm1
mov
jg
cmp
mov
jl
sbb
push
stos
jmp
das
sub
mov
lods
inc
fwait
std
sbb
mov
sub
mov
leave
test
push
and
mov
imul
cmp
mov
lods
loopne
popa
pop
imul
mov
scas
sbb
adc
inc
mov
xor
subl
or
mov
popa
jno
daa
fisubrl
mov
xor
fisubl
lods
xor
and
mov
mov
push
fldenv
out
movsl
pop
dec
mov
clc
mov
mov
es
adc
test
out
jo
sub
mov
insb
xchg
add
loopne
pop
or
das
push
jmp
add
movq
ret
aam
cmp
xor
inc
fwait
add
mov
and
lret
les
xchg
scas
pop
loope
add
xchg
or
fisttpll
xchg
mov
push
daa
inc
sub
lds
add
adcb
out
sub
fimull
popf
mov
cmp
push
push
ja
add
cld
sahf
sahf
mov
fsubrs
int
mov
sub
arpl
popa
sar
shll
pushf
xor
sbb
mov
or
xchg
cltd
add
imul
jbe
mov
jg
mov
into
jl
jge
sarl
fisttpl
cmc
lea
mov
sub
push
mov
and
out
divb
iret
sahf
cmc
push
andl
inc
in
mov
pop
cmp
or
popa
sahf
adc
sbb
push
sub
in
out
adc
sbb
and
mov
push
add
cmp
jge
adc
ds
mov
sti
or
je
aam
test
les
xchg
aad
lock
fisttpl
test
jp
pop
rcrl
xchg
das
cmc
dec
mov
les
cmp
xchg
sbb
fidivl
ljmp
scas
or
push
ljmp
fadds
popa
in
add
ljmp
js
dec
dec
adc
inc
or
mov
mov
dec
psrad
mov
and
ret
orb
push
pop
jge
es
push
sub
iret
lret
or
and
jecxz
fstp
pushf
insl
push
jmp
outsb
icebp
adc
mov
mov
xchg
inc
es
ret
add
jnp
xor
mov
cs
aad
add
iret
jg
cmp
push
inc
mov
clc
addr16
cmp
jl
xchg
scas
int
pop
sbb
inc
lcall
or
int3
call
lds
aas
jne
outsb
adc
inc
or
jge
mov
sbb
xor
or
adc
sbb
mov
dec
jae
call
insl
inc
xor
jge
mov
mov
nop
outsl
add
das
sti
aad
push
addb
ljmp
out
cwtl
cmp
rclb
add
xor
cmc
add
xchg
xchg
lds
push
out
test
xor
in
fldl
rcrb
lock
sarb
pop
mov
pop
sbb
loope
and
imul
cmp
nop
and
or
adc
into
sbb
push
sbb
subb
lcall
mov
das
add
push
push
cs
mov
daa
mov
inc
cwtl
mov
cmc
mov
push
cmp
inc
mov
mov
mov
or
dec
rorl
dec
lods
rcrb
hlt
arpl
push
call
subb
clc
mov
movsb
std
repz
divl
popa
loop
or
out
js
push
pop
pop
add
pop
aad
jne
mov
ret
xchg
sbb
mov
push
jge
in
imul
int3
mov
bound
push
dec
fs
lods
dec
sbbb
sahf
and
std
mov
ss
aam
xor
cs
add
cltd
fwait
cs
mov
and
xor
sbb
inc
cmp
pop
cmp
idivl
frstpm(287
inc
dec
mov
addr16
ljmp
out
add
iret
outsb
out
mov
jge
movsb
lret
pop
jb
cpuid
fwait
pop
lahf
pop
push
leave
loope
ret
neg
and
loopne
loop
iret
stos
mov
cmpsb
xor
sub
mov
stos
shrl
or
ret
dec
rcll
in
mov
aaa
add
aas
mov
adc
fwait
sbb
inc
dec
xchg
or
stos
cmp
in
add
add
cld
addr16
and
fwait
adc
lock
mov
sarb
outsl
jp
popa
jne
mov
lods
jg
std
insl
loope
insb
js
cmp
cmp
roll
xchg
mov
out
ljmp
mov
aaa
jns
test
insl
rclb
xchg
inc
adc
push
fs
ss
ret
lret
mov
mov
and
stos
dec
arpl
push
cmp
push
xchg
dec
pop
mov
lods
lods
in
push
and
mov
loope
or
fs
loope
pop
sbb
mov
je
adc
fbld
xchg
xor
pop
sbb
jge
adc
push
xor
stos
nop
sub
out
movsb
inc
subb
inc
mov
aam
pop
sbb
repz
jae
xor
xchg
daa
cmpsb
cs
mov
inc
sub
push
cmp
nop
pop
push
xor
push
adc
mov
cli
and
fildll
sbb
and
inc
jmp
push
xchg
xor
mov
punpcklwd
xor
je
mov
xor
cli
movsl
lods
scas
cld
mov
add
popw
clc
and
pushw
pushl
inc
sbb
xchg
int3
cmp
das
mov
cmp
es
mov
xchg
dec
pop
sbbl
add
adcb
jno
jl
sub
cmpsb
cld
cmp
jp
clc
mov
and
add
add
and
inc
or
dec
cld
out
dec
in
fmul
popf
lahf
outsb
into
out
rorl
smsw
std
fwait
sbb
add
push
cmp
loop
adc
xor
or
jp
movsl
pop
dec
xchg
lret
test
mov
dec
outsl
jle
mov
or
mov
mov
jp
jno
bound
jp
inc
jmp
insb
fadds
frstor
bound
cmp
mov
pushf
lret
loope
xlat
add
xchg
test
gs
sbb
push
and
sub
push
mov
jb
jb
and
jg
jl
push
stos
test
gs
shrl
loop
adc
inc
scas
add
repz
idivl
sbb
std
cltd
test
adc
xchg
sbb
lods
adc
fsubs
push
sbb
jg
shrb
push
or
bound
mov
jecxz
push
mov
aas
sbb
mov
ret
jno
cmpsl
nop
out
add
xchg
clc
cmpsb
clc
out
push
sub
sbb
dec
gs
mov
in
fcoml
movsl
fsubrs
add
jae
insl
loop
mov
ljmp
stc
into
inc
out
sub
cli
mov
pop
pop
sub
bound
in
int3
lret
push
fildl
cpuid
xor
dec
push
dec
mov
insb
mov
stc
mov
mov
in
mov
dec
cmp
xchg
jae
xchg
cld
cmpsb
mov
icebp
jl
out
mov
movsl
pushf
or
xchg
sbb
cmovp
inc
push
xor
aas
in
pop
xor
mov
cmp
jne
xor
xchg
in
sahf
icebp
cli
jns
sahf
cs
adc
fldt
jg
xchg
mov
mov
xchg
and
ret
push
or
sub
movsb
dec
xor
add
shlb
push
adc
or
fcmovnb
sbb
and
ss
xchg
lods
cmp
lret
mov
pushf
sub
inc
nop
mov
jno
rorl
fisubrs
lahf
push
aad
stos
data16
lds
mov
push
dec
jae
bndstx
in
lods
arpl
and
int3
negb
xchg
fmuls
pusha
in
rol
ljmp
add
fisubl
or
cltd
cmp
push
clc
sub
pop
shlb
mov
xchg
jne
and
pop
and
or
popl
scas
loop
mov
sbb
jb
popf
adc
ret
mov
lret
jge,pt
push
and
mov
dec
or
cmp
jbe
iret
jle
lods
add
out
push
sbb
and
mov
push
fs
mov
sub
or
in
xor
insl
lods
out
ret
cmp
pop
inc
mov
adc
or
ret
aaa
dec
data16
lcall
mov
cmp
mov
push
call
jecxz
stos
jmp
push
nop
lahf
xor
insl
xchg
test
mov
mov
sub
xor
adc
mov
push
mov
test
mov
cwtl
adc
jno
adc
jo
jns
ds
jne
mov
adc
mov
std
sbb
jo
js
dec
push
dec
imul
jp
scas
and
pop
jecxz
in
in
or
out
jmp
in
and
es
mov
mov
out
mov
bound
aaa
shrb
xor
jne
sbb
inc
cs
push
mov
xor
daa
jns
mov
xor
sub
test
arpl
inc
lods
and
push
push
mov
adc
and
inc
pop
mov
mov
mov
imul
cmp
das
cmpsb
xchg
xor
ljmp
or
stc
inc
sbb
aas
mov
pop
icebp
add
mov
or
or
cli
rolb
test
data16
aaa
ret
adc
dec
mov
sub
add
adc
or
sbb
push
pop
or
adcb
sub
xchg
fimuls
hlt
cmc
in
inc
cmp
jge
aam
fists
or
mov
mov
cmp
xor
sbb
or
cmp
popf
movsl
outsb
jmp
punpckhdq
cmp
pop
sbb
adc
setl
adc
push
lret
add
fisubl
lock
aad
or
in
sbb
out
test
push
mov
push
mov
mov
mov
sbb
mov
ret
movsl
mov
mov
shl
fisttpll
mov
out
js
stc
inc
xlat
mulb
xchg
mov
loope
hlt
inc
sbb
nop
adc
sbb
in
and
mov
add
sbb
scas
test
mov
cli
sbb
and
sbb
sbb
cs
pop
push
mov
jnp
popa
mov
fcomp
adc
push
or
cmp
xchg
stos
daa
clc
out
outsl
xor
pop
jno
sbbl
or
adc
mov
jl
or
mov
cmp
mov
xchg
inc
daa
daa
inc
jae
add
fbstp
je
hlt
mov
lds
add
jo
sbb
mov
leave
xor
push
rcll
jg
jg
dec
cmc
mov
int3
cmpsb
repnz
jnp
mov
call
and
jb
xor
test
xchg
aad
jne
scas
sti
aaa
out
lock
int3
aad
or
jmp
andl
and
pop
shlb
or
mov
aaa
int
daa
inc
jl
pushf
loopne
mov
outsb
rcrl
int
cmp
ds
jne
std
cltd
fcmovnb
xor
in
into
ret
pop
inc
fldt
inc
decl
fcmovu
adcl
jge
mov
rcll
xor
cld
pop
xor
mov
lea
test
clc
loope
jmp
das
frstor
mov
jl
add
in
mov
mov
push
inc
in
jmp
jo
sbb
dec
popf
andl
or
dec
lds
and
xor
mov
or
mov
xor
pop
insb
aaa
add
fbstp
mov
data16
ror
inc
dec
sub
sbb
popl
push
ret
iret
add
pushf
add
fsub
cmp
lds
out
add
dec
sbb
cli
ret
lock
les
sbb
movsl
mov
rolb
inc
std
aad
cmp
xor
xchg
arpl
xchg
cld
xlat
ret
js
lret
xor
hlt
fsubrl
jp
test
shrb
stos
hlt
mov
mov
xor
inc
test
adc
sti
das
cmpsb
ret
cmpsl
or
inc
movb
rclb
in
jo
aas
fdivs
sbb
orl
imul
jno
lods
imull
iret
adc
or
movsl
pop
mov
mov
pop
cmpsb
inc
bound
inc
inc
dec
pushf
repz
mov
pop
dec
sbb
mov
adc
ret
mov
jle
mov
out
sub
sbb
gs
xadd
dec
pop
roll
jmp
shll
mov
lea
sbb
xchg
mov
sub
stos
mov
into
add
mov
movsl
sub
js
or
mov
or
jmp
repnz
mov
insl
out
pop
js
enter
jmp
sbb
ljmp
fadd
fisttps
scas
ret
stos
lods
push
mov
mov
jg
add
or
aam
rorl
or
sbb
push
jb
in
inc
fcoml
inc
sarl
add
arpl
aam
pop
sti
clc
popa
xchg
jne
xor
and
js
pop
fidivs
mov
fwait
xadd
loop
jmp
sti
std
mov
sbb
ljmp
push
out
cmpsl
cs
cmp
jo
sbb
sahf
pop
out
fs
push
mov
sbb
add
into
roll
ficoms
sbb
das
dec
mov
jle
in
dec
enter
dec
in
mov
or
aam
dec
pop
adc
pop
sub
jnp
adc
push
cmp
jmp
add
cmpb
filds
dec
push
pop
xchg
jp
add
aaa
or
sub
outsl
mov
and
je
aad
ja
leave
js
repz
pop
scas
adc
shlb
lret
sub
mov
inc
pop
out
push
adc
jns
add
xor
sbb
pusha
mov
sbb
xchg
xor
mov
xchg
or
mov
cmpsl
push
adc
sbb
cli
pusha
testl
fstl
and
and
mov
jns
cmp
lods
mov
or
rcr
leave
fs
dec
dec
or
lahf
cld
data16
mov
pop
lea
and
push
jle
xchg
or
icebp
sbb
inc
jnp
orb
mov
mov
popf
out
cmpsl
push
repz
sti
iret
into
cltd
out
cmc
aam
mov
hlt
or
pop
and
outsb
fdivl
lods
dec
outsb
sub
mov
pop
int
xchg
xchg
and
pop
out
jno
xchg
test
test
aaa
xchg
or
dec
in
jp
xlat
xor
cmp
lock
xchg
movsb
or
mov
lods
out
rcll
pop
nop
pop
lods
cmp
jl
mov
or
lahf
cs
pop
dec
sarb
stc
mov
shlb
jmp
cmp
lods
sarl
mov
push
out
xchg
jle
mov
mov
mov
sbb
dec
scas
mov
inc
jne
add
fstpl
cmp
leave
call
fcoml
scas
loop
jmp
mov
push
or
scas
mov
and
add
pop
sbb
popf
jns
xchg
jae
jne
stos
cmp
xchg
xlat
mov
or
xor
in
jmp
mov
push
lret
sahf
in
shrl
je
pop
sub
lock
imul
sub
mov
jmp
jmp
lcall
loope
push
xchg
sbb
sbb
mov
not
adc
and
cmp
dec
fadds
enter
data16
push
ret
mov
insl
or
je
jecxz
mov
mov
mov
cmpsl
hlt
adc
mov
mov
inc
inc
cmpsb
cmp
enter
bound
inc
xchg
cmp
sbb
push
lea
lods
xor
pop
aaa
shrl
pop
cmp
dec
xchg
pop
dec
jne
ds
sbb
push
int3
mov
clc
jb
pop
jno
das
subb
cmc
push
fmull
add
jmp
aad
push
cmpl
test
popa
aad
push
fnstcw
scas
incl
es
and
mov
or
pop
dec
xor
mov
ja
mov
in
inc
adcl
and
xchg
xor
push
rcr
dec
sbb
repz
xor
into
jae
sbb
test
cmp
ja
out
pop
jb
mov
shl
xchg
sub
xor
sbb
jmp
imul
mov
ja
mov
jge
inc
subl
cmp
sbb
insb
call
jg
jbe
mov
or
cs
callw
inc
pop
pop
mov
daa
ret
in
pop
push
and
int
jecxz
add
hlt
add
stos
sbb
pop
fldl
fstpl
mov
push
nop
mov
xor
arpl
mov
mov
enter
fisubrl
mov
repnz
imul
mov
adc
adcb
stc
lock
sti
roll
scas
xchg
imulb
pop
lods
std
iret
xchg
pusha
lret
das
lret
inc
outsl
jmp
sub
add
test
rcl
mov
ds
mov
mov
mov
adc
xchg
or
cmpsb
and
sarb
sub
cmp
mov
ja
inc
ljmp
in
std
test
push
loop
fstps
sub
sbb
or
inc
out
movsb
jnp
das
mov
mov
jp
mov
pop
shr
ret
in
push
sbb
in
xchg
push
add
push
movsl
jp
fbld
out
mov
ror
dec
inc
shlb
mov
cmp
rcrl
add
repnz
mov
pop
das
sti
daa
dec
fwait
sahf
mov
mov
pop
add
mov
test
jno
out
popa
loopne
push
mov
pop
lret
cwtl
addr16
dec
mov
nop
cmpsl
mov
or
mov
or
fs
adc
mov
mov
jle
leave
pop
in
das
sbb
cltd
adc
es
cmp
sbb
ds
shll
pop
jo
loopne
adc
pop
dec
rorl
mov
fcomp
mov
dec
out
insb
mov
add
mov
jmp
sti
push
inc
cmpl
lahf
mov
mov
mov
popf
repz
lret
shlb
call
mov
sbb
shrl
inc
sbb
cwtl
hlt
dec
in
addb
in
ljmp
sub
push
push
sti
inc
mov
fs
mov
sti
aad
out
iret
xor
inc
or
jb
push
mov
push
and
add
sub
pop
push
inc
popa
arpl
xor
push
ret
pop
push
pop
leave
dec
mov
mov
sub
sub
test
push
dec
stos
sub
outsb
lcall
inc
nop
cwtl
push
dec
imul
mov
aaa
loop
push
sbb
ret
pop
in
ret
outsl
xchg
inc
imul
sbb
scas
repnz
les
push
dec
jne
sarb
nop
mov
out
out
sbb
sub
jo
mov
lcall
pop
cmpsl
mov
jecxz
xchg
or
outsb
aad
ja
aas
add
call
decl
xchg
shl
imul
mov
xchg
push
mov
or
js
out
stos
jae
loop
mov
fs
xchg
xchg
nopl
insl
ficoms
lret
and
cmp
cmpsl
sbb
mov
icebp
cmc
call
sub
sbb
mov
mov
imul
mov
aas
adc
ljmp
cmp
sub
mov
in
repz
jb
and
xchg
fldz
dec
repnz
loope
mov
push
int3
daa
mov
pop
or
or
mov
inc
insl
xchg
sub
mov
pop
or
xchg
adc
rolb
insb
pop
je
and
dec
mov
shrl
cwtl
jge
test
popa
mov
lds
jge
push
cli
das
pop
pop
jmp
jns
mov
mov
mov
addr16
scas
sub
dec
jne
push
and
cltd
ss
lahf
add
loop
pusha
pop
movsb
lods
ds
jae
jbe
sarb
fdiv
mov
dec
cld
xor
sbb
outsl
sub
addr16
dec
push
pop
jo
rclb
sub
jl
adc
popf
adc
shrl
pop
out
xchg
mov
lcall
and
jae
inc
mov
mov
add
jbe
lds
xchg
scas
and
insl
jge
sarb
lcall
mov
les
fidivs
inc
dec
pop
inc
repnz
push
sarl
pop
pushl
es
fdecstp
out
stc
test
hlt
jno
fisttps
movsl
sub
fnsave
ss
test
xor
in
sbb
leave
mov
mov
inc
xor
mov
adc
mov
fistl
out
scas
lods
inc
mov
cs
and
adc
ja
mov
test
subb
xor
jnp
enter
out
fidivs
ss
out
sbb
mov
xor
stc
data16
repz
or
fmull
mul
push
sbb
out
dec
fdivr
ret
jg
fisubrs
mov
aaa
sub
adc
cmp
xor
pop
insb
and
lahf
stos
dec
jbe
or
sti
mov
sub
xor
cmp
and
ja
test
adc
scas
jg
mov
dec
push
je
pop
jg
outsl
jbe
sbb
inc
jbe
fisttps
aad
xchg
or
adc
jbe
jno
pop
pop
lods
shll
popa
pop
popf
call
pop
xchg
xchg
aad
mov
lds
pop
stc
adc
push
dec
shrb
rcr
enter
testb
xchg
popf
cmc
xchg
addr16
in
dec
lret
hlt
ret
inc
inc
aam
and
sub
jnp
pop
fisttpl
sub
mov
dec
out
addr16
mov
sub
lods
cmp
push
adc
cmp
out
push
sbb
or
lds
fimuls
sub
das
sbb
cmc
jge
loope
mov
sbb
adc
stos
daa
out
mov
repz
cmp
aas
sahf
loopne
test
bound
dec
cs
popa
or
mov
xor
stos
jmp
data16
or
stos
mov
mov
inc
stos
xor
test
sbb
dec
mov
je
inc
dec
mov
testb
insb
fs
lods
sbb
inc
hlt
rol
shrb
mov
push
shl
jnp
lahf
mov
popa
sbb
sti
and
fisttps
push
clc
mov
mov
mov
inc
mov
adc
pop
xor
pop
jbe
sbb
es
out
sti
dec
pop
lods
test
fiadds
jb
ret
and
mov
sub
out
dec
or
push
dec
ret
mov
push
test
sub
out
je
jmp
add
cmpsl
pop
scas
sbb
icebp
mov
mov
inc
inc
pop
push
aam
test
roll
sbb
nop
sbb
leave
gs
scas
and
out
xchg
dec
in
sahf
imul
test
pop
inc
mov
mov
push
mov
cmc
and
rorb
cmp
mov
call
xchg
dec
xor
aam
push
pop
mov
lock
lcall
inc
jp
jae
fbld
cmp
scas
stos
mov
shrb
push
mov
jns
rclb
jle
in
and
mov
arpl
mov
adc
loopne
fst
lret
das
mov
or
lret
loop
sti
pusha
push
cmp
push
pop
stos
lea
or
dec
cmp
and
xor
popf
cli
shlb
nop
out
sbb
adc
sar
fnstenv
push
pop
xor
out
cmp
lcall
mov
push
push
lret
mulb
mov
add
adc
lret
inc
push
loope
jecxz
aam
or
cmp
push
in
into
sub
mov
xor
aas
pop
adc
mov
fs
xlat
popf
in
sbb
sub
add
sub
in
hlt
js
mov
inc
dec
imul
push
dec
mov
fldcw
mov
jle
xchg
lret
mov
out
jmp
std
subl
les
sub
xor
dec
dec
jae
push
das
out
pop
std
into
outsb
pop
xchg
fisttpl
into
and
in
jb
and
aaa
sbb
aam
div
test
xor
and
inc
les
insl
int3
push
inc
js
test
adc
mov
cmp
je
stos
pop
pop
jg
mov
mov
insl
loopne
pop
fistl
loope
nop
and
mov
lret
push
mov
push
fwait
out
es
adc
sbb
sbb
add
cmp
or
lahf
ret
dec
es
outsl
inc
mov
mov
ja
xorb
iret
pop
pop
bound
cmpb
insb
mov
out
clc
stc
sarl
es
cmpl
ljmp
or
rcl
lret
add
jns
mov
fistpll
dec
lock
shlb
jnp
adc
sub
cmpsb
in
cmc
in
cmpsl
jl
das
jae
adc
inc
jae
cmp
mov
dec
pop
add
pop
je
out
cmp
mov
dec
pop
aas
inc
js,pt
ret
sti
adc
rorl
popa
push
push
pop
mov
rcl
outsl
mov
sbb
add
sub
and
add
and
cmp
inc
mov
into
sub
mov
mov
dec
mov
outsb
adc
lahf
addr16
cmp
push
mov
movsb
mov
cmpsl
add
xchg
divb
or
mov
outsb
push
int3
shr
xadd
pop
jbe
cmp
cmpsl
movsb
insb
push
add
clc
mov
sub
std
xchg
cmp
and
cmp
cmp
sub
addr16
lahf
xchg
mov
add
mov
rcr
cmp
ja
xchg
aas
xchg
and
inc
add
or
arpl
stos
push
xchg
mov
shrb
loop
or
sub
and
xchg
jae
pop
mov
dec
outsb
orl
shrb
repz
sbb
arpl
pushl
outsl
imul
stc
xchg
imul
push
mov
ret
pop
rcr
fwait
daa
dec
mov
sbb
push
loope
es
int
clc
repz
mov
mov
rcr
in
movsl
jecxz,pt
out
xchg
or
das
loop
enter
insb
fldl
sbb
push
cmp
push
jl
das
shr
scas
push
mov
je
mov
xchg
adc
lock
lret
dec
ret
jecxz
mov
lods
jle
movsl
arpl
outsb
pop
cmp
mov
pop
cltd
jmp
mov
or
stc
add
or
jb
mov
lock
hlt
lcall
in
push
ret
and
xchg
push
lods
sbbb
in
outsl
daa
xchg
ja
push
and
mov
aas
cmpsl
jbe
shrb
xor
dec
lcall
jbe
rol
mov
stos
stos
xlat
lret
cmp
movsl
dec
push
inc
daa
les
adc
leave
movsb
cmp
sbb
sbb
fisubl
in
and
testl
dec
cwtl
loopne
fldenv
push
gs
push
sbb
xchg
push
and
push
hlt
and
mov
mov
xchg
ret
scas
loope
rcl
pop
js
sbb
lods
cwtl
mov
xor
mov
push
shl
dec
daa
cmpsl
scas
rclb
sbb
xchg
xchg
clc
add
leave
aas
fisubrs
push
dec
mov
dec
aas
je
imull
out
jbe
push
mov
pushf
imull
js
subb
in
js
test
dec
cmp
pop
and
jno
cmp
and
adc
popf
stc
xor
adc
loop
inc
mov
insb
mov
lret
out
cwtl
prefetcht2
stos
xchg
fisttpll
mov
daa
sti
pusha
pop
sub
add
sbb
pop
and
fisttpl
or
mov
adc
fidivl
out
push
lahf
inc
mov
pop
stc
and
cmp
enter
xchg
inc
pop
aad
jp
gs
testl
sbb
or
test
pop
mov
daa
inc
outsb
adc
mov
repnz
jb
data16
xchg
movsb
int
push
dec
jns,pt
add
and
mov
mov
sbb
push
inc
hlt
rcr
adc
popa
and
jl
add
les
jae
mov
push
sahf
ds
inc
insl
cmp
xlat
pop
cmp
insb
test
sub
rcrl
mov
jb
xlat
jmp
sub
addr16
and
push
lcall
aam
filds
cltd
dec
pop
mov
xchg
push
sbb
pop
aad
lret
test
inc
adc
mov
lret
jno
cmp
jnp
mov
mov
into
jg
sti
outsl
lahf
fsin
fsubs
jo
push
call
insb
cmpsl
jg
mov
jae
xchg
das
dec
xor
or
jmp
in
pop
or
add
pop
mov
dec
jle
hlt
dec
cmp
mov
xchg
jmp
in
push
lods
mov
out
repnz
push
push
aam
lds
pop
jns
push
jmp
sub
arpl
jg
and
mov
add
mov
push
into
or
mov
inc
das
jl
lds
rolb
cmp
out
mov
out
sbb
xchg
lods
sbb
call
das
int
xchg
lcall
aam
xchg
jns
adc
mov
pop
mov
nop
sbb
arpl
mov
lods
orl
stos
test
cmp
xchg
adc
mov
xchg
mov
bound
dec
lds
pop
shll
or
jae
dec
jo
add
inc
mov
repz
scas
adc
sub
test
inc
lock
jle
xor
icebp
into
adc
push
mov
push
mov
and
sub
mov
das
push
pop
push
ljmp
cmpsl
mov
pop
js
loop
movsl
inc
ljmp
jp
hlt
insb
or
push
and
inc
loope
daa
sbb
push
mov
mov
stc
jae
fsubrs
call
ss
or
mov
clc
in
stos
aam
and
fisttpl
test
pop
psubsb
scas
fs
inc
adc
mov
pop
xchg
js
jno
mov
in
in
dec
shlb
sub
push
dec
int3
xchg
add
and
sbb
mov
fldcw
or
mov
iret
push
iret
out
mov
push
jnp
lds
mulb
daa
shll
add
test
stc
decb
rsqrtps
lea
test
arpl
sub
cli
dec
popa
add
jle
popf
rolb
ret
dec
or
xor
lret
fsubrs
shrl
neg
mov
shll
sub
mov
test
mov
add
cmp
sub
int
jp
xchg
int3
arpl
cmpsb
adc
dec
dec
cmpps
leave
adc
push
push
pop
fisttpl
jb
xchg
iret
dec
jmp
fstpt
dec
imul
adc
or
and
and
and
lea
push
scas
or
subb
sar
dec
imul
mov
fwait
adc
push
ror
push
adc
cmp
mov
ror
inc
add
fisubs
jne
inc
cmpsl
xchg
push
ljmp
ss
mov
jae
mov
and
sahf
mov
and
inc
loope
ljmp
cmp
js
cmc
jnp
ss
pop
add
leave
nop
gs
pop
das
jo
pop
fisubl
mov
out
push
cmpsl
xchg
jecxz
xchg
ret
push
pop
movsl
mov
repz
loope
push
and
je
sub
stos
je
rol
lods
sbb
orb
pop
xlat
or
add
stc
dec
push
mov
fbld
data16
shlb
nop
mov
movsl
mov
adc
inc
ret
aas
nop
dec
mov
test
dec
pop
add
nop
push
cmp
repnz
and
rolb
call
ss
pop
popa
lods
roll
mov
mov
add
insl
pop
icebp
rcrl
js
adc
aaa
inc
sahf
mov
pop
and
cld
scas
fldt
les
jl
outsl
pusha
lock
adc
mov
sub
adc
insl
mov
adc
fmulp
sub
cmp
fcomip
orl
jle
aad
push
and
mov
jbe
lahf
imul
mov
lret
pusha
cmp
sbb
aas
adcb
pop
or
fstpt
add
ret
movsb
jae
pop
cmp
xchg
cmp
sub
mov
loop
add
ss
mov
mov
in
dec
jnp
hlt
add
push
xchg
fcomps
push
cli
sbbl
mov
insb
sbb
jno
cld
xchg
mov
dec
sbb
ljmp
in
cmp
pop
out
dec
sbb
or
mov
mov
xchg
iret
loope
test
or
mov
bound
mov
jmp
aam
and
mov
inc
inc
test
test
int
repnz
mov
push
push
xor
mov
test
mov
inc
or
add
fildll
mov
push
pop
xor
dec
cmp
cmc
notb
stos
mov
pop
mov
mov
mov
jp
outsb
mov
mov
push
les
adc
add
jne
test
adc
cmp
or
or
add
sub
popa
arpl
fwait
out
dec
sub
inc
cmpsb
ret
xchg
pop
xor
pushf
and
imul
add
iret
stos
mov
ss
icebp
sti
leave
mov
xchg
jmp
or
in
sbb
addb
movsl
loopne
mov
mov
jge
xor
push
xor
push
dec
mov
aam
out
outsb
aaa
stos
pop
es
and
sub
xchg
push
or
mov
jle
scas
leave
jns
xchg
push
out
jp
outsl
fdivrl
lret
test
pop
mov
les
and
mov
iret
test
sub
mov
lcall
addb
cs
fwait
adc
adc
shll
and
dec
pop
cmp
push
dec
jl
push
sbb
nop
shrl
sbb
pushl
xor
jmp
mov
in
in
add
lock
shll
push
pop
ljmp
imul
stc
lods
adc
mov
jno
lret
insl
iret
inc
or
lret
sbb
movsb
or
xchg
lods
pop
and
repnz
jbe
fs
adc
jbe
add
hlt
xor
int
negb
sub
iret
push
ret
push
sbb
xchg
sub
mov
dec
test
les
in
mov
xchg
das
scas
mov
sub
xchg
cmp
lods
and
ficoml
jns
mov
scas
pusha
insl
stc
pop
arpl
pop
dec
push
testl
push
cld
das
outsl
movsl
loop
sub
popf
bound
cmpsb
dec
push
xor
mov
cmpsl
jg
bound
inc
adc
call
xor
mov
test
shlb
mov
or
sahf
daa
jl
mov
cs
popa
push
add
fldenv
sti
test
push
push
cmp
lods
and
das
outsb
popa
iret
sbb
insb
pop
and
jo
xor
jne
lea
les
mov
cmp
ret
and
add
in
test
adc
jmp
jmp
jl
cmpsl
mov
jle
rcrl
out
cmp
pop
adc
xchg
std
dec
into
mov
mov
fidivs
jno
sub
clc
xchg
das
inc
cmc
sbb
adc
pop
xor
cli
int3
sub
arpl
ja
mov
enter
jl
push
inc
imul
push
jmp
xchg
add
jecxz
xor
fists
xor
xor
pop
pop
mov
in
pop
inc
inc
push
mov
lock
fldcw
mov
pop
push
rorb
mov
push
sahf
pop
cmp
xor
xor
pop
lods
test
push
mov
push
mov
push
or
mov
add
lock
pop
jl
idivl
mov
dec
push
loop
push
int3
das
push
jl
jg
pop
outsb
repz
mov
loopne
scas
subl
pop
xchg
sub
mov
fimuls
in
test
shlb
in
dec
lods
fstp
mov
out
in
stos
lahf
jmp
sbb
ljmp
mov
mov
xor
out
inc
rcll
inc
lcall
nop
mov
sahf
pop
mov
mov
sbbl
cmp
jb
xchg
jecxz
or
or
inc
jg
dec
popa
imul
mov
xor
js
dec
pop
cmp
test
in
push
mov
pop
cmpsl
lahf
xor
inc
xor
mov
lcall
incb
insb
addr16
mov
and
xchg
push
lahf
sbb
jno
mov
or
xor
sub
cmp
gs
stc
sub
push
lods
cld
jge
fs
inc
xor
fs
pop
iret
in
push
cli
pop
mov
int3
loopne
push
ss
mov
add
les
xor
out
test
outsb
mov
mov
sbb
or
lods
mov
jbe
xor
xor
loope
and
jl
shl
lret
mov
movsb
jp
test
push
dec
or
stc
add
mov
int
mov
pop
mov
jne
xorb
xchg
lds
push
jo
adc
cmp
mov
je
xchg
bound
push
test
das
and
mov
popa
sub
outsb
mov
and
jmp
cld
cltd
or
jl
loopne
in
in
test
aad
iret
ret
pop
and
clts
ret
adc
lea
xor
int3
add
sub
cs
lds
popf
sti
hlt
ficoml
cli
out
aam
shrb
scas
mov
or
fcomps
xchg
insb
adc
in
fisubrs
int3
xor
cmp
or
test
ret
stos
pop
dec
notb
mov
mov
pusha
mov
test
push
inc
jnp
dec
jb
inc
mov
add
incb
inc
push
xorb
xchg
xor
push
mov
jo
add
je
scas
dec
fidivrs
cmpsb
lahf
lcall
test
sbb
jl
sbb
stos
mov
outsb
lret
xchg
cmp
and
in
push
js
jbe
arpl
sbb
icebp
xor
push
jo
jge
ret
ret
xor
hlt
mov
dec
xor
leave
push
mov
jg
mov
add
jecxz
xor
adc
jne
push
icebp
fsubrl
mov
orl
jge
outsl
loop
test
cmp
xchg
aad
sti
adcl
mov
movsl
xor
ror
clc
aam
mov
adc
jge
scas
push
int3
ret
testb
jl
js
pop
sub
or
mov
or
ret
data16
or
rcrb
lret
cmp
adc
push
fs
adc
fstpl
addb
hlt
iret
inc
scas
cmp
int3
push
sub
lock
lods
lea
pop
xor
or
cmp
sbbb
add
mov
xchg
dec
add
hlt
in
sbb
jbe
push
and
test
stc
les
stos
rcl
stos
nop
xchg
aas
and
jle
jl
jne
xchg
cmpb
in
and
roll
out
xor
cli
xor
and
pop
push
mov
lahf
jge
mov
scas
arpl
adc
ljmp
insb
xlat
jo
jne
mov
push
sbb
or
or
les
gs
and
inc
dec
cltd
jmp
jnp
jb
popa
outsl
scas
std
mov
xlat
or
enter
fldenv
outsb
pop
and
fs
xchg
push
push
jp
push
cmp
mov
stc
mov
mov
sub
cmp
dec
and
mov
sbb
sbb
xchg
movsl
sub
jno
mov
jns
or
notb
mov
xchg
mov
xchg
sub
imul
pop
jae
cmpsb
incb
and
xor
push
mov
cmp
sahf
prefetcht1
roll
and
clc
call
imul
push
push
xorb
inc
lcall
int3
and
stos
xor
iret
adc
cmpsl
jo
cmc
xor
mov
insl
cmp
fsubs
pushf
not
pop
lret
pop
push
push
adcl
adc
in
popf
fisttpl
testl
mov
mov
mov
movsl
jnp
in
sub
ja
sbb
std
outsb
jbe
push
ja
sub
sahf
jae
xor
mov
dec
mov
leave
jae
daa
popf
add
movsb
and
sarb
xor
xlat
xchg
dec
mov
pushf
dec
imul
mov
in
mov
dec
scas
pop
mov
and
cmp
push
mov
ljmp
cmc
popa
orb
cli
dec
pop
cmp
aam
or
xor
xlat
jne
clc
lock
das
pop
movsb
mov
cs
mov
inc
and
das
call
addr16
dec
cmp
mov
cld
push
adc
loop
adc
mov
push
int
cmpsb
loop
aam
lahf
mov
dec
xchg
mov
arpl
sbb
and
test
or
fsts
fwait
inc
ds
mov
xchg
dec
sbb
insl
sbb
push
mov
pop
xor
mov
mov
clc
inc
pop
sub
shlb
loope
test
ds
jp
sub
sub
inc
jecxz
inc
mov
inc
addb
or
mov
lret
mov
inc
aam
rorl
mov
pushf
insl
xor
adc
xchg
fs
dec
fs
sbb
repz
cmp
cli
sub
sub
and
pop
dec
cmp
xor
loop,pn
enter
mov
jo
xchg
xor
daa
outsl
push
and
test
leave
dec
arpl
aas
cmp
lret
sub
add
adc
push
pushf
push
sbb
xchg
ficomps
gs
mov
jnp
scas
or
int3
sti
cmp
cmp
inc
push
jle
xchg
out
inc
or
mov
pop
sbb
push
inc
sub
data16
xchg
cmc
sbb
outsl
shll
lods
push
pop
leave
repnz
pop
jl
mov
xchg
pop
int
lret
test
fs
decb
push
push
push
fbld
adc
mov
mov
fcoml
aad
adc
sub
in
adc
xchg
aaa
adc
jo
dec
push
pop
jle
fwait
nop
jb
jecxz,pn
daa
loopne
mov
sahf
pop
xorl
lahf
movsb
cs
inc
jb
jge
lods
nop
mov
aam
aad
dec
int3
mov
xor
push
pop
sbb
mov
shrl
pop
ss
stos
add
mov
sahf
lret
cmpsl
adc
push
jge
loope
mov
je
sarb
shll
add
and
sbbl
mov
sub
xchg
push
lret
xchg
add
push
mov
pop
inc
nop
or
adc
imul
xor
in
push
stos
dec
mov
int3
xor
int3
jg
sbb
ds
mov
in
pop
sbb
sbb
xor
insb
es
mov
xor
call
scas
scas
lahf
hlt
std
xchg
fildll
lods
inc
cwtl
adc
jmp
loopne
pop
or
into
loope
dec
push
push
mov
sub
mov
or
int
push
cwtl
in
in
popa
adc
mov
dec
ret
popf
int
mov
jnp
jb
hlt
insb
push
pop
xchg
adc
es
xchg
dec
cmp
pop
insl
outsb
mov
mov
icebp
jl
lods
es
shrb
fbld
out
enter
inc
aad
je
xor
scas
add
rep
cmp
ret
jg
xchg
xchg
jns
dec
add
push
jmp
pop
outsb
ds
test
out
sti
mov
dec
fisubrs
cltd
and
xchg
xor
jp
icebp
out
inc
pop
into
cmp
out
cmpb
and
sbb
dec
popa
ret
or
imul
fwait
sbb
jecxz
pop
sub
push
push
adc
push
mov
aam
push
xor
mov
adc
test
loope
sahf
sub
pop
icebp
mov
mov
push
test
fbstp
xor
mov
movsb
outsb
inc
bound
jg
xchg
push
dec
xor
call
ja
mov
das
and
orb
sbb
mov
mov
outsb
imul
mov
inc
sub
gs
xor
push
dec
cmp
jmp
dec
push
jecxz
leave
movsl
aam
ds
lea
xchg
rclb
mov
dec
ss
jb
out
imul
sub
aaa
or
mov
and
pop
lret
mov
test
ljmp
xchg
xor
inc
cmp
sti
dec
into
cmc
lret
add
cmc
add
aas
xor
jbe
and
fistps
xor
into
pop
inc
scas
out
mov
jl
iret
xchg
pushf
orb
mov
pop
push
xchg
xchg
leave
pop
imul
in
sub
xor
xchg
stos
stc
xchg
mov
and
xchg
jbe
mov
xor
ja
and
outsb
lahf
in
mov
sub
mov
or
inc
sbb
cmpsb
jle,pn
in
scas
add
mov
sarl
iret
sbb
adc
in
rorb
pop
negb
out
lock
dec
out
ret
ss
mov
lret
icebp
pushf
aad
popf
jae
fisubrl
inc
fstpl
les
outsl
push
imul
in
jo
cmp
and
xchg
push
xchg
fisttps
into
insb
push
mov
xor
int3
pop
sbb
dec
pop
aaa
push
pop
inc
repnz
xor
jnp
add
push
mov
fsubrp
insl
push
dec
enter
cmpsb
inc
jmp
mov
call
add
jl
ret
pop
lods
cmp
shll
mov
mov
mov
mov
add
fcompl
std
flds
sub
pop
mov
mov
in
jp,pt
movsb
in
scas
dec
hlt
sbb
popa
mov
xchg
fadd
and
imul
jno
fisubs
mov
xchg
inc
adc
roll
in
sub
hlt
sti
int3
rorb
loop
jle
mov
mov
rolb
jmp
sbb
in
mov
addl
fstps
xchg
xor
popf
into
push
mov
insl
sbb
test
js
cmp
lock
imul
inc
sub
mov
push
aas
cmp
xlat
out
inc
imul
shll
insb
xor
and
cs
incl
mov
pop
dec
jp
sub
movl
js
cmp
je
notb
mov
pop
scas
notl
fdivs
mov
subb
pop
pop
and
ds
faddl
cmp
xor
jge
int3
and
stos
ret
orb
push
jle
lods
mov
movhps
xchg
insb
xor
xchg
imul
jae
mov
add
mov
insb
sbb
pop
adc
repnz
mov
aad
sarl
jmp
mov
pushf
xlat
xor
rcll
push
xchg
icebp
adc
int
cld
out
enter
add
add
movsl
popa
inc
add
jo
dec
pop
cmp
lret
pop
mov
pop
cltd
mov
sbbl
les
repz
xchg
pusha
ljmp
loop
inc
rcrl
cmp
dec
jecxz
imul
adc
push
sti
pop
mov
jno
inc
enter
insb
xchg
leave
dec
into
jge
jmp
mov
pusha
adc
inc
mov
testl
lret
push
xor
and
and
and
push
shr
mov
test
add
fs
rcrl
jl
mov
out
mov
sub
ljmp
dec
pop
pop
jb
add
sbb
or
in
shl
mov
jbe
test
jge
leave
sub
push
aad
xor
fistpll
and
inc
cli
ss
inc
jmp
xchg
enter
mov
call
scas
int
cmpsb
jmp
xlat
ljmp
pop
pop
jl
mov
inc
fisubl
enter
adc
adc
fadds
mov
loope
sbb
mov
and
push
lret
pop
dec
ficomps
add
xchg
test
fisubrl
test
dec
cwtl
fisubl
and
push
rol
push
loopne
xchg
push
ret
and
jp
cmpsb
add
sbb
mov
movsl
mov
repz
out
inc
mov
lret
pop
pop
push
cs
cltd
pop
std
and
dec
mov
sbb
jl
fadds
sub
lea
jno
dec
inc
imul
xor
adcl
fmuls
rclb
sahf
jbe
testl
out
mov
ds
shlb
mov
lods
and
jl
push
aad
movsl
sahf
jns
inc
jle
movsb
cmp
mov
ret
aaa
mov
pop
and
pushf
outsb
hlt
icebp
aaa
iret
add
dec
lock
mov
inc
test
or
enter
popf
cmp
lods
mov
push
mov
jns
pop
xchg
push
cmp
xlat
packsswb
into
push
imul
test
xlat
stos
gs
jecxz
dec
data16
xor
lret
psadbw
mov
jae
cmpsl
lock
add
inc
imul
cmp
jg
add
std
cmpsb
outsb
jg
pop
imul
inc
adc
nop
mov
xchg
sbb
inc
shrl
insl
xor
and
and
les
shlb
push
mov
cwtl
jb
pop
jnp
jl
movsl
jle
stos
stos
inc
cltd
in
mov
insb
mov
movl
int3
dec
xor
pop
xchg
jae
mov
cli
adc
shr
stc
stos
mov
mov
movsl
cmpsl
xor
mov
push
sbb
out
bnd
xchg
repz
dec
sub
fstpl
es
dec
inc
and
mov
jne
lock
lret
out
leave
sbb
xchg
xchg
mov
or
ret
loopne
cld
fwait
xchg
pop
arpl
dec
add
out
mov
in
cmp
bound
fwait
mov
jg
cmpsl
lods
sub
xor
loope
mov
push
inc
lahf
aaa
adc
loope
inc
jnp
sub
pop
ret
in
pop
or
or
or
lcall
xchg
add
push
sti
fimull
rcl
add
mov
int3
pop
sub
rcrl
jmp
push
mov
rcrb
xchg
loopne
sub
jno
push
and
lock
and
int3
movsb
sub
mov
insl
sub
mov
rcll
push
or
mov
cmc
and
dec
xchg
sbb
sbb
jbe
jmp
stos
call
add
xchg
fildll
push
mov
scas
or
xchg
mov
push
inc
sub
sar
ja
pop
cltd
popf
stos
int
mov
out
je
cmp
cmpsl
pop
jmp
rclb
loop
cltd
xchg
xor
fcomps
xchg
sarb
lds
scas
cld
cli
push
iret
mov
pop
in
mov
int
or
add
push
subb
pop
mov
sbb
mov
sub
in
sbb
cli
filds
cld
push
call
outsl
mov
adc
jp
pop
and
sbb
mov
jmp
or
or
sti
ret
lds
ret
xchg
lcall
mov
xor
popf
jae
push
mov
dec
int3
iret
ljmp
pushl
repz
lret
imul
and
adcb
enter
lea
xor
int
xchg
or
dec
add
push
cmp
imul
fadds
mov
cmp
cs
adc
pop
ss
mov
call
mov
xchg
cld
loope
dec
pop
xorb
mov
or
jmp
test
insb
lret
mov
pop
adc
pushf
xlat
inc
sarb
enter
jmp
out
test
shrb
jns
mov
xor
sub
shrb
jl
inc
ds
mov
jecxz
sarl
std
sarb
hlt
lret
lret
int3
xchg
xor
mov
inc
test
inc
pop
sarb
fdivl
cld
jmp
out
ficoms
xor
add
pavgb
and
ret
loopne
mov
fs
std
rorl
adc
jnp
js
sbb
ljmp
mov
mov
mov
xchg
popa
js
push
jg
push
loopne
sahf
jecxz
andb
mov
in
pop
ret
je
mov
add
dec
dec
repz
popf
mov
out
mov
rcr
rclb
enter
add
pop
sub
push
push
imul
lret
hlt
int
pushf
in
inc
in
test
sbb
lret
push
mov
mov
adc
dec
dec
aam
ret
jne
sahf
in
mov
in
add
cmc
ds
notb
ss
loopne
sbb
mov
ret
push
mov
daa
in
add
popf
shll
push
cmp
out
and
pop
test
stos
in
push
dec
call
push
mov
pop
hlt
loop
xor
mov
sti
add
stos
lret
or
xor
jbe
loopne
stc
sbb
inc
xchg
push
dec
inc
ret
mov
addr16
dec
push
or
jl
shlb
and
rcrl
clc
pop
jmp
cmpsb
fidivs
mov
icebp
mov
pop
mov
cmpsl
pop
ljmp
or
lahf
into
add
adc
pop
iret
lret
and
dec
gs
add
or
cltd
cmp
mov
outsl
push
fistpll
gs
lahf
mov
inc
jae
cmp
xlat
or
lock
insl
iret
xchg
dec
push
sbb
mov
imul
mov
mov
dec
sbb
xchg
mov
xchg
bound
sbb
sbb
mov
popa
adc
push
push
es
xchg
ja
mov
mov
lret
xor
jecxz
xor
pop
dec
push
cld
iret
jo
stos
aad
pusha
cwtl
add
xor
jb
dec
dec
mov
mov
xorb
in
mov
or
push
insb
fwait
pop
xchg
mov
repz
andb
add
xchg
mov
cmp
push
imul
jp
pop
add
hlt
xor
adc
je
jns
les
inc
cmc
or
jp
ret
xor
popf
cmp
push
mov
and
out
jne
loop
dec
jae
dec
adc
jecxz
lcall
daa
fsubrs
inc
lock
adc
sbb
xchg
flds
xor
arpl
pop
fstpt
xchg
add
mov
pop
mov
xor
inc
mov
mov
or
dec
xor
mov
fstpl
sbb
cmp
push
mov
mov
jmp
xchg
push
jo
shll
imul
dec
push
rcrl
scas
pop
and
mov
out
mov
push
mov
sbb
out
xor
cmovp
aam
sarb
mov
sar
push
mov
ret
mov
xchg
leave
sub
xchg
and
push
xchg
and
popa
jns
jecxz
push
pop
in
jb
xor
mov
gs
in
xchg
gs
xchg
icebp
pop
mov
push
mov
mov
imul
pusha
xor
inc
mov
ffreep
jmp
clc
in
ficoms
sub
fdivs
in
jge
in
pop
hlt
xlat
and
in
stc
js
negl
push
adc
pop
hlt
cmpsl
pop
stos
jge
inc
pop
mov
cmc
test
repz
dec
adc
test
in
test
dec
in
sub
pop
cmc
fnstenv
push
test
add
cmp
ret
sub
sarb
fsubrs
xchg
push
xchg
mov
sbb
sub
jg
sub
push
sbb
dec
fistpl
pop
pop
or
repz
mov
shl
jbe
lret
adc
mov
das
loop
xor
pop
push
xchg
in
mov
rcr
int3
scas
mov
mov
insl
sub
jge
out
push
push
adc
sub
pop
cmp
int
scas
push
aas
sub
or
sbb
xor
ljmp
shrl
iret
popf
inc
cs
imul
lea
or
cmp
in
xor
add
mov
lret
lret
inc
sbbl
cmpsl
mov
add
cs
pop
rcrl
xchg
rcrl
jne
fs
fnstenv
cmp
mov
and
xlat
lahf
adc
adc
rcll
push
push
cmc
dec
nop
or
dec
int
mov
rorb
inc
clc
cmp
les
adc
mov
dec
sub
mov
and
xchg
or
in
push
adc
cmp
pop
dec
loope
popa
mov
jnp
std
icebp
cmp
jbe
cmp
dec
repnz
push
leave
movntps
stos
imul
lds
andb
sbb
add
out
lcall
mov
je
es
pop
mov
push
fstpl
pop
xor
mov
pop
movsl
fisubrs
or
cld
dec
es
mov
stos
mov
xchg
xchg
and
fadds
cld
call
iret
pop
in
out
dec
repnz
shrl
pop
or
loopne
cmp
add
sbb
es
popa
jge
and
das
icebp
sub
add
sahf
fldenv
adc
cld
hlt
pushf
mov
sti
xor
enter
std
clc
addl
dec
inc
lcall
fnsave
lcall
out
or
pop
fcomp
ds
popf
pop
loop,pt
sbbl
mov
je
scas
je
jg
fcmovnb
mov
gs
testb
adc
outsb
push
fisttps
fldcw
xor
loope
clc
lahf
test
push
mov
gs
cmpsb
shlb
sahf
adcb
test
push
push
push
insl
shl
dec
fmuls
cs
lcall
mov
xchg
mov
mov
fisubrs
shl
xchg
mov
and
inc
pop
icebp
mov
scas
pop
loop
out
cmp
jge
and
loop
mov
scas
xor
mov
mov
lcall
sbb
inc
add
and
push
inc
pushf
or
ljmp
inc
adc
and
cmp
inc
stos
sbb
adc
dec
in
inc
pop
ss
clc
fnstsw
pop
cld
adc
idivl
xchg
sahf
mov
jp
and
mov
test
out
pop
jl
lds
shrb
dec
loop
mov
push
sub
aad
or
sub
sub
pusha
xlat
nop
cmpsl
jg
test
push
nop
cmpb
daa
mov
lret
gs
mov
sbb
mov
xchg
test
mov
pop
fwait
add
jp
fldenv
jbe
data16
sub
in
jmp
ja
js
nop
jb
pushf
dec
pop
fnsave
loopne
outsl
xor
dec
data16
rclb
cmp
shrb
jb
scas
push
mov
pop
ja
pop
idivb
dec
push
cli
repnz
mov
pop
and
out
fsub
nop
repnz
mov
xor
out
aaa
outsl
js
test
pop
jne
imul
cld
push
push
and
out
cmp
mov
fistl
shl
inc
repz
cmpl
out
jbe
lods
sahf
push
loope
repz
mov
lods
sbbl
add
leave
xchg
push
push
cli
ret
arpl
psubsb
pop
daa
into
ljmp
and
push
imul
sbb
int
dec
insb
scas
leave
mov
sbb
dec
sub
add
ljmp
ljmp
adc
ja
fwait
jge
insl
xchg
mov
xchg
xor
adc
pop
and
data16
or
rcrl
loop
jle
xchg
arpl
ret
xor
xor
stc
xor
les
fisttpll
pcmpgtw
in
loope
add
lods
test
ret
test
cmpsl
xchg
jb
fldt
movl
or
push
sub
fwait
xchg
mov
fsubs
test
lock
sub
xchg
addr16
push
fwait
mov
jno
sub
fmulp
pop
sti
pop
fsubl
in
cmpl
jns
shll
andl
add
cwtl
pop
out
divl
sbb
mov
pop
cmp
push
scas
or
jbe
push
dec
mov
in
mov
adc
int
and
jg
pop
mov
push
sbb
mov
mov
repz
fwait
jg
iret
xchg
xorl
xchg
sbb
jmp
mov
mov
lahf
sub
js
sub
loopne
add
pop
les
prefetch
arpl
sub
daa
mov
mov
jne
push
adc
xchg
and
movsl
hlt
adc
sbb
arpl
mov
std
mov
imul
test
lcall
push
dec
hlt
cmp
push
mov
addb
enter
cmp
push
mov
mov
jmp
arpl
xchg
outsl
pavgw
cmp
jns
mov
mov
dec
lods
scas
arpl
in
xor
or
out
adc
jp
out
or
push
mov
dec
mov
sbb
add
jo
cmp
out
stos
in
xor
lsl
dec
enter
pop
aas
and
mov
jecxz
mov
xor
cmp
inc
out
leave
les
push
std
xorb
jle
inc
pop
xbegin
cmpsb
pop
add
mov
js
movups
add
push
inc
pop
sub
test
bound
xchg
imul
ret
test
push
mov
adc
xlat
bnd
lret
xchg
push
mov
lods
sti
sub
or
test
push
xor
pop
inc
xchg
dec
sub
fdivl
jb,pn
cwtl
add
pop
sarb
je
pop
scas
sbb
lods
push
cmpb
fmuls
pop
fs
aas
cmpsb
and
ja
sbb
hlt
push
sub
mov
jp
fucomp
or
test
adc
mov
or
sub
jg
sub
orb
mov
dec
negl
sub
add
jecxz
lock
or
cs
mov
mov
push
test
xchg
cs
and
andb
add
iret
sub
sub
ja
cmp
pop
stc
xor
sbb
or
dec
int3
mov
xchg
cli
sti
mov
into
ret
out
push
fldcw
and
fsubr
ss
sbb
sbb
jge
fildl
ret
fs
orl
jle
sub
mov
xchg
bound
cli
je
fstps
push
sub
xchg
push
fcompl
fnstcw
jne
pop
stc
mov
xor
fsubs
mov
mov
int3
rcl
mov
lahf
call
mov
inc
xchg
bound
add
adc
sub
loopne
mov
aad
jp
cltd
out
movsb
add
push
popf
mov
sbb
in
daa
scas
aaa
iret
into
outsb
test
loop
xchg
jnp
div
jl
push
lret
jg
js
out
test
adc
and
xlat
inc
mov
inc
push
mov
xor
push
out
jecxz
cwtl
pushf
mov
push
aad
movsl
sti
inc
jge
adc
arpl
loope
mov
jl
mov
mov
sub
unpckhps
pop
shll
sti
mov
in
and
cpuid
icebp
adc
push
push
aaa
jg
dec
ret
mov
push
jle
pop
cmp
out
fwait
idivl
add
inc
push
mov
fnstenv
neg
aaa
les
clc
sub
sbb
into
add
stc
in
sbbb
xorb
dec
psrlw
aam
adcl
add
sub
inc
insl
jle
and
mov
or
sub
lea
loope
or
xchg
mov
scas
leave
sub
leave
xlat
scas
and
pop
test
mov
ds
jecxz
inc
cs
icebp
lret
int
jle
sbb
sbb
pop
mov
inc
mov
in
xchg
push
dec
sti
cli
cltd
sbb
jmp
mov
inc
shlb
cli
inc
fisubrs
xor
aaa
push
and
dec
push
fisubs
rolb
scas
fstpt
or
call
add
push
testb
stc
dec
out
xchg
je
xchg
mov
push
mov
shll
addr16
mov
js
bound
xchg
mov
inc
xchg
mov
hlt
cmp
inc
cmc
dec
sbbl
cs
mov
fidivrl
fists
test
stos
aad
jnp
and
lock
xor
and
in
inc
cmp
mov
mov
popa
mov
mov
pop
jge
mov
int3
xorl
mov
fisttpl
cmp
adc
pop
movsb
fisubs
fbld
outsb
insb
arpl
adc
rolb
push
jne,pt
jo
xchg
mov
sahf
xlat
pop
xchg
jns
lret
outsb
cli
mov
loopne
fdivrl
adc
fsts
inc
test
xchg
xlat
divb
mov
insb
add
in
lahf
inc
addl
sahf
inc
sbb
out
or
sbb
mov
adc
pop
fidivrs
cs
xor
mov
cmp
pop
and
jmp
ds
pop
add
and
add
das
jge
sub
pop
adc
mov
sbb
scas
ljmp
pusha
pop
lahf
adcl
or
xchg
fwait
fwait
in
mov
mov
das
sub
push
xor
std
addr16
mov
sub
inc
dec
cmp
cmp
adc
jmp
xlat
nop
sub
add
lret
test
dec
push
adc
xchg
add
jl
or
xchg
divl
jae
cmp
sub
push
pop
pop
or
and
cmc
je
std
aaa
push
xor
mov
pop
jmp
cli
adc
shlb
jo
pop
push
movsb
adc
inc
xchg
sbb
cmp
push
insb
inc
inc
cmpsl
xchg
or
inc
push
xor
fidivrs
ds
fs
popa
fcompl
in
enter
ja
repz
xor
adc
inc
dec
jmp
iret
outsl
or
scas
pop
or
cs
mov
push
ds
cmp
pop
mov
cs
and
nop
sub
cmp
pop
idivb
inc
aas
shl
cwtl
popa
cmpsl
fnstsw
cld
xor
scas
ret
sti
xor
lods
imul
adc
out
dec
xor
and
dec
imul
inc
mov
jmp
mov
inc
out
or
sarl
sub
xor
ja
and
xor
xchg
xor
add
mov
aas
adc
fstpt
inc
lcall
insl
aam
pop
gs
leave
push
sbb
pop
or
arpl
or
or
jp
subl
pushf
out
dec
ret
pop
in
scas
int3
mov
outsb
dec
insb
loop
jmp
and
movsl
pop
pop
dec
je
outsb
mov
jb
inc
ja
jo
mov
std
xor
push
push
lds
sub
lods
leave
clc
jge
mov
aaa
xchg
roll
mulb
xor
sub
scas
push
jmp
push
cmovo
repnz
pushf
pop
mov
pop
pushf
cmp
fnstcw
pop
pop
in
in
ss
mov
dec
mov
out
jb
rcll
pop
mov
mov
jge
les
pop
cmpps
push
pop
inc
jmp
call
inc
in
or
jecxz
push
jp
adc
mov
clc
ficoms
mov
call
movsb
shll
jnp
je
sti
imul
pop
mov
test
fidivrl
cmp
out
add
add
sahf
lea
mov
icebp
cld
dec
lahf
leave
adc
pop
mov
ds
xor
dec
jae,pt
fstcw
pop
push
sub
shrl
inc
adcl
rcl
cmp
sarb
ds
mov
mov
fbld
lret
adc
xchg
pop
out
mov
mov
inc
mov
cmpsl
je
pop
jb
dec
and
popa
xor
cltd
mov
movsl
and
inc
and
inc
mov
outsl
fistpll
js
ret
mov
aad
jae
loop
test
mov
pop
jmp
out
or
mov
mov
loopne
push
xor
pop
inc
imull
in
aaa
add
cwtl
push
add
ljmp
repnz
xchg
push
mov
push
sti
sti
out
lret
out
lahf
lcall
outsb
pop
fnsave
test
jne
adc
jg
sahf
cmpsl
pop
lcall
pop
cmc
dec
lds
test
mov
pop
push
adc
and
or
push
divb
xor
rcl
ret
js
mull
shlb
or
cmp
mov
movsl
popa
xlat
mov
jge
hlt
and
sub
aad
xchg
fisubrl
push
ret
xchg
inc
mov
stc
popa
leave
mov
fiadds
idivl
mov
scas
ja
fdivr
mov
xchg
out
nop
sub
out
jne
xor
fildl
pop
sahf
jo
popf
sub
and
jmp
ficomps
sbb
jg
fmull
xchg
testb
jecxz
xchg
rclb
bound
addr16
gs
xchg
in
aad
mov
add
out
inc
sub
out
je
mov
fldlg2
or
int
jmp
push
les
mov
adc
dec
and
push
mov
jbe
or
aaa
ret
jne
lcall
lds
xchg
or
dec
std
pop
pop
daa
sbb
in
rclb
pusha
inc
scas
mov
adc
push
fs
mov
dec
adc
data16
stos
cmp
sahf
dec
mov
add
leave
ret
ja
insl
out
mov
ss
scas
lock
or
mov
jl
sbb
xor
dec
mov
stos
mov
mov
pop
cltd
bound
and
mov
out
ror
rcl
push
inc
mov
push
repnz
dec
sbb
icebp
gs
iret
aad
stos
mov
xchg
xlat
test
jnp
sbb
cmp
out
mov
xchg
ds
xchg
and
sub
lock
or
jnp
inc
or
mov
out
std
repnz
fs
pop
lcall
jle
outsl
dec
addr16
pop
sub
out
lock
and
outsb
lock
mov
mov
and
mov
fdivrp
push
call
insl
dec
sbb
cmp
push
sarw
push
js
ret
mov
push
xor
push
mov
stc
outsb
adc
pop
test
add
pop
jmp
inc
hlt
dec
adc
sahf
lahf
pop
mov
jle
push
ret
jo
inc
jg
xchg
cmp
cmpsl
aaa
sti
sub
loopne
or
incb
mov
iret
out
lods
outsl
push
hlt
loope
sbb
jge
push
arpl
shrb
cmc
lods
adc
add
xor
xchg
push
push
push
pop
out
sub
push
mov
es
or
fnstenv
push
and
mov
lea
fstl
lea
and
shufps
push
push
fwait
push
sub
repz
sub
xchg
mov
jl
push
mulb
mov
or
adc
sub
xor
sbb
mov
movsl
stc
inc
aad
pop
pop
repnz
ret
push
addr16
rolb
pop
sti
and
pop
dec
cmp
andl
sbb
loopne
xor
cs
rolb
xor
pop
and
cmc
add
lcall
shl
loope
cmp
fdivl
or
push
cli
jae
cmpsb
xchg
in
push
inc
mov
jns
jns
popf
fstpt
xchg
and
xchg
subb
jno
sbb
mov
sahf
mov
xor
arpl
and
xchg
insl
movsl
dec
dec
in
push
repz
out
daa
jg
jg
inc
leave
in
jo
and
jbe
jae
adc
sbb
repz
aaa
pop
scas
sbb
sbb
aam
fsts
cmpsb
adc
xchg
idivb
les
jnp
fldl
imul
divb
mov
fsubrl
xor
mov
mov
xor
ficomps
cs
stos
dec
xchg
inc
xor
inc
mov
jp
xchg
dec
imulb
inc
outsb
push
fldt
mov
xor
xor
add
sarl
lock
cmp
jae
dec
dec
outsl
mov
mov
rclb
dec
sbb
js
fwait
inc
adc
decb
repz
jmp
rcll
mov
mov
enter
jb
jecxz
insl
sahf
cmp
fisubs
mov
dec
or
testl
cli
push
pop
dec
inc
jo
push
fnstenv
push
gs
clc
or
xchg
jl
in
repnz
sub
pop
imul
filds
mov
int3
daa
or
inc
rcrb
pop
stos
in
mov
test
addb
ss
in
leave
ret
sub
inc
js
adc
pop
cld
sub
sub
and
dec
iret
pop
push
scas
int3
ljmp
hlt
adc
push
int
je
push
xchg
pop
add
cmp
les
cmp
movsl
lret
lds
jo
aas
add
mov
pop
sbb
mov
or
xchg
pop
movsl
and
test
into
rcrl
and
fists
mov
ficompl
rolb
stos
in
mov
stos
lahf
push
sarb
jnp
xor
sub
dec
fwait
fwait
xchg
xlat
mov
mov
xchg
in
mov
pop
inc
cwtl
adc
push
daa
into
push
push
orl
aad
aaa
sbb
frstor
dec
stc
negl
cmc
push
js
jns
mov
lods
lods
push
ljmp
out
xor
sub
cmc
dec
push
dec
gs
push
pop
sub
pop
daa
xor
mov
inc
or
les
roll
and
cmc
aam
cld
sbb
jecxz
icebp
iret
mov
fs
pop
xlat
xor
xor
push
pop
andb
fsubrs
pop
ficoml
ret
sub
insb
not
imul
jle
adc
and
leave
sub
shrl
mov
sbb
jne
pop
adcb
lods
sbb
ds
or
pop
insl
rolb
push
leave
mov
add
cmp
inc
adc
cwtl
mov
mov
mov
cld
xor
push
add
outsb
adc
pop
push
ja
stc
xchg
pop
mov
ror
inc
jecxz
inc
outsl
test
mov
sub
orb
inc
mov
scas
adc
pusha
scas
out
sbb
loope
push
sbb
das
ljmp
in
jle
xchg
pop
pop
sbbl
lahf
lock
add
shrb
cmp
pop
mov
inc
push
insb
inc
outsl
pop
pop
call
push
adc
rcr
scas
sbb
mov
push
hlt
dec
xchg
aaa
xor
orb
out
add
shlb
and
aad
lods
sti
pop
add
push
push
ds
mov
outsl
mov
add
test
cmpsl
das
or
push
xor
cmp
jmp
pop
les
add
sbbl
mov
adc
dec
popf
fmull
push
insl
add
xor
lea
lds
fsub
dec
in
stc
and
cmp
std
insl
sbb
iret
std
mov
imul
pop
push
jno
nop
jl
cmc
push
and
jg
outsl
scas
mov
adc
out
adcb
adc
push
fs
xor
icebp
cmp
out
das
movsb
std
int3
aas
sarb
scas
testl
insl
insl
xchg
jp
inc
sub
jp
test
jg
cmp
mov
sbb
scas
push
test
stos
mov
in
lods
jno
inc
mov
mov
mov
jge
mov
adc
imul
jge
xchg
inc
or
pop
ja
or
sub
in
adc
sbb
dec
xor
outsl
ret
gs
rol
cmp
jmp
hlt
shl
lock
sub
adc
push
mov
sub
sarl
xchg
pop
sub
insl
mov
ret
pop
sub
cmp
call
scas
pop
nop
dec
mov
adc
dec
jno
jb
aas
or
mov
cmp
add
mov
insb
pop
push
mov
inc
ret
add
push
add
pop
hlt
fidivrl
fidivrl
sbb
js
in
and
dec
jnp
xor
adc
xor
cli
lret
dec
cmp
cmp
loopne
leave
xchg
rorl
and
das
inc
push
imul
aaa
sbbl
outsl
icebp
cli
cld
or
repz
or
push
pop
xchg
dec
dec
nop
dec
loopne
sub
mov
pop
lret
pop
repnz
pop
in
cltd
aad
imul
loopne
fdivl
popa
gs
adc
sub
in
cli
xor
stos
out
ds
movb
jg
push
fld1
fstpt
pop
dec
or
cli
xor
xor
cmpsl
sbb
push
or
std
nop
push
fsubrp
movsl
fisubl
arpl
push
repnz
adc
std
sub
pop
cwtl
inc
sub
dec
xor
dec
ljmp
push
popa
jle
outsl
sbb
inc
test
cmpsb
add
popa
xor
push
gs
imul
fildl
or
xchg
push
cld
mov
dec
or
fists
scas
arpl
cmp
inc
fdivrs
inc
push
repz
mov
mov
jmp
xchg
fldenv
shlb
orl
out
and
xorl
pop
inc
cmp
leave
scas
out
add
hlt
outsl
adc
xchg
enter
and
lods
fidivs
cmp
icebp
jo
loop
jo
push
mov
jge
dec
push
pop
push
xchg
test
add
test
and
fsubrl
std
fisubs
add
test
cli
push
or
les
cli
push
lret
cwtl
dec
aaa
ss
test
xor
bound
in
out
cmpsb
mov
lcall
or
adc
test
push
mov
cmp
mov
dec
and
xor
xorb
dec
mov
sahf
test
fmull
cld
scas
push
jle
push
scas
bound
stos
imull
xor
mov
ret
test
adc
add
shlb
imul
sbb
es
push
xchg
js
sub
arpl
fists
dec
sub
mov
mov
sub
daa
add
and
push
mov
dec
sbb
mov
inc
push
sarb
lea
fidivs
jnp
lods
cmp
int3
add
adc
into
add
lahf
jnp
dec
paddusb
mov
fmuls
pop
jb
jbe
sbb
cmp
mov
sbb
cmp
pop
clc
xchg
dec
sbb
sar
push
jb
pushf
shrb
sbb
leave
xlat
sar
and
aas
add
mov
pusha
scas
xorl
mulb
test
mov
imul
fsubrs
pop
cwtl
jno
xor
dec
cmp
mov
xor
xchg
stc
into
xchg
xor
xchg
or
mov
and
and
mov
rol
stc
andl
mov
mov
cli
mov
dec
int3
repnz
outsl
jne
scas
rol
cli
leave
sbb
xor
mov
add
xchg
jmp
fadds
push
movsb
negb
das
shll
popa
arpl
fsubl
arpl
scas
lock
pusha
add
add
addr16
aas
cmp
or
lret
imul
pop
xor
push
insl
fwait
aas
mov
and
out
pop
jmp
push
movsl
pcmpeqb
dec
lds
mov
lret
jbe
sti
pop
mov
xlat
inc
dec
repnz
sub
mov
adc
jg
mov
mov
fwait
jae
cltd
push
dec
je
mov
fucom
insl
imul
call
mov
test
add
popa
xlat
std
rorl
pop
inc
mov
aam
jno
repnz
ss
pusha
test
ret
mov
xchg
scas
pop
dec
fs
int
outsl
mov
cld
add
sahf
mov
dec
popa
jno
les
fiadds
dec
add
push
xchg
sbb
adcb
fstpt
push
jbe
adc
stos
cld
mov
adc
xor
mov
sub
out
pop
pushf
jno
or
cmp
ficompl
fldenv
adc
jae
sub
nop
int3
aaa
sub
mov
sub
mov
fidivrl
aaa
jle
inc
sub
xor
sarb
push
aam
push
cmpsl
inc
dec
add
sti
mov
daa
adc
out
test
sub
adc
shlb
xchg
dec
std
out
sub
vpsubb
mov
mov
les
cli
or
cmpsb
cmp
loop
repnz
inc
int
cmp
cmp
jmp
aas
mov
or
cli
cmpsb
xchg
add
fisubs
cmpsl
pop
ljmp
into
pop
mov
mov
cmpl
add
adc
and
push
jb
inc
jg
sti
js
dec
pushf
adc
mov
jl
fiadds
aam
pop
add
and
jecxz
out
or
mov
sub
icebp
pop
sub
jb
call
sub
mov
stos
adc
add
ds
xchg
bound
xor
adc
outsl
rclb
xchg
pop
adc
psubq
minps
arpl
inc
cld
xchg
js
adc
dec
lock
mov
sahf
in
jb
xor
movsb
mov
inc
and
into
pusha
bound
notl
sbb
sbb
popa
jp
dec
jmp
adc
and
ret
mov
pop
lret
adc
push
xor
adc
rolb
das
sub
popf
int
ret
xchg
daa
icebp
lea
add
lret
add
into
sbb
ja
mov
outsl
out
and
jle
xchg
cmp
hlt
mov
adc
dec
jae
xor
and
and
fdivl
xchg
in
and
lcall
dec
enter
or
mov
pop
ja
iret
cmp
std
ljmp
adcl
imul
dec
aaa
sar
in
stos
int
or
inc
sub
rcrl
leave
into
pop
push
cmpsl
scas
pop
xor
xchg
dec
jmp
pop
pop
sub
in
jb
cmp
orl
mov
adc
mov
rcrb
or
sub
pop
or
push
sahf
out
jge
jne
sti
mov
adc
daa
cmp
ffree
cmc
enter
cmc
mov
push
ljmp
call
inc
test
dec
inc
stos
pop
sbb
in
movsl
add
shlb
sbb
inc
cmpsb
in
pop
pop
pusha
jne
mov
mov
mov
mov
sti
cmp
pop
sbb
add
adc
movsl
bound
ja
push
or
out
addb
pop
inc
sahf
jmp
xchg
sbb
lret
or
dec
mov
mov
imul
ret
sub
and
mov
sbb
or
cmc
loope
outsb
cmp
inc
inc
mov
loopne
inc
test
and
dec
rcrb
sti
and
into
jmp
insl
push
stc
pusha
push
out
xor
js
push
mov
in
dec
je
dec
addr16
gs
add
pop
movsl
cmp
jmp
and
xchg
xchg
scas
fldl
hlt
jne
jl
jcxz
cmp
ret
dec
dec
dec
pop
mov
cmp
jnp
jo
or
mov
sub
leave
out
in
std
dec
aad
add
xor
mov
clc
orl
lahf
cmp
daa
scas
ret
jmp
loopne
cmc
pop
push
push
test
movsb
cmc
xor
and
jbe
fimuls
pusha
mov
push
imul
mov
cmp
xor
orb
sbb
xchg
add
mov
jae
mov
and
sbb
adc
mov
enter
lds
jl
push
in
and
fcom
cs
std
mov
stos
inc
sbb
addr16
mov
push
nop
lcall
aam
lahf
test
test
add
mov
ror
repz
aam
adc
xor
dec
mov
out
sbb
out
mov
gs
sbb
std
mulb
mov
stos
clc
cli
push
pop
aaa
stos
loopne
dec
testb
ss
stc
mov
mov
cli
sbb
bound
sahf
test
frstor
clc
aam
shrl
lods
or
cmp
pop
repz
lret
out
movsl
xor
cmp
ret
or
sbb
add
mov
pop
or
xchg
mov
punpckhwd
sub
clc
cltd
arpl
push
mov
inc
jle
lahf
sub
adc
stc
fisttpll
aam
xchg
xchg
aam
sub
imul
out
jns
pop
ds
mov
inc
sub
jb
js
cmpsl
add
jp
sti
cmp
xor
ljmp
arpl
lods
push
push
mov
push
xor
adc
push
nop
fwait
das
dec
es
or
sub
push
stos
mov
adc
test
out
xchg
out
or
decl
adc
repnz
test
inc
fmuls
add
pop
cmp
mov
sbb
bound
jl
lahf
mov
sbb
or
dec
sbb
lock
pop
push
inc
jnp
fstps
lcall
les
incb
pop
xor
call
sbb
adc
pop
loopne
pop
mov
jp
xchg
cmp
sbb
fcoml
popl
push
cmp
out
xchg
aaa
hlt
out
test
jp
push
push
jmp
and
inc
and
push
mov
dec
aam
clc
lods
mov
push
and
jb
jmp
cmp
inc
mov
pop
dec
mov
shrb
or
cmp
mov
push
dec
xchg
xchg
sbb
ud0
add
jg
imul
xchg
push
outsl
adc
aad
mov
add
mov
insl
clc
or
loopne
cwtl
pop
ss
movsl
mov
lea
inc
test
ss
adc
sub
inc
inc
fsubs
icebp
sub
mov
inc
sti
fldl
sti
add
mov
lret
sub
or
cs
mov
adc
sub
dec
lds
pushf
out
jp
popf
aad
popa
pop
jbe
leave
cld
bound
push
rorb
jno
lahf
and
lock
lods
mov
pop
inc
ja
or
ret
and
sub
add
mov
or
sbb
push
and
mov
or
scas
jno
aaa
cvtps2pd
jo
push
into
mov
mov
ss
pop
fldl
dec
mov
fnstcw
mov
aad
aam
pop
pushl
mov
test
cmc
fwait
gs
xor
mov
lret
sbb
cmp
inc
arpl
jmp
add
sbb
int
mov
sub
movlhps
ja
inc
in
in
xchg
inc
or
je
div
outsb
adc
mov
add
cmp
inc
or
shlb
enter
jecxz
inc
add
cmp
xchg
adc
inc
mov
stc
jo
pop
fbld
and
dec
or
inc
fidivrl
ss
lock
pop
je
out
mov
adc
mov
xchg
adc
push
inc
or
les
xor
push
push
addr16
cs
fwait
scas
rclb
add
stc
cwtl
mov
xor
cmp
jns
mov
and
outsl
addr16
xor
xchg
cmp
jo
pop
imul
ffreep
lea
lock
jg
push
out
dec
jecxz
fwait
lret
or
rol
mov
int
lods
dec
xchg
cmpsb
mov
lods
mov
insb
cmpsb
add
xor
jmp
imull
sbb
out
add
pop
dec
adc
mull
cmp
adc
add
out
sbb
in
fdivl
in
popa
das
add
jp
sbbl
pop
pop
mov
in
movsb
xor
fcomip
jno
shl
ja
inc
pop
jmp
inc
data16
add
and
xor
xor
xchg
popa
and
dec
mov
inc
add
adc
insl
mov
mov
pop
test
push
xchg
aas
push
rcrl
and
je
pusha
dec
test
inc
push
mov
rorl
icebp
frstor
dec
lret
push
lret
in
aam
or
insl
add
insl
nop
inc
imulb
mov
xchg
pop
push
jl
xchg
adc
aad
sar
pop
rol
fistpl
lahf
mov
outsl
repz
pop
rcrb
ja
mov
xor
lahf
adc
pop
pusha
adc
push
addr16
and
pushf
xor
mov
flds
dec
cmp
test
call
xchg
popf
mov
ds
xchg
xor
mov
cmpsb
lock
shl
sbbl
scas
imul
add
cmc
cmpsb
xor
mov
xor
es
dec
adc
cmp
clc
xchg
daa
xorb
lahf
add
cli
mov
fistl
dec
push
push
mov
push
fisttpll
jb
loope
inc
scas
andl
shl
pusha
mov
jmp
pusha
fidivs
sbb
push
sbb
mov
xor
test
loop
scas
fisubl
call
mov
pop
pop
mov
adc
xlat
les
popa
ljmp
dec
cmp
fdivrp
decl
cmpsl
aam
xor
pop
mov
inc
repz
add
lods
add
xchg
sbb
nop
cmpsb
sbb
add
rcr
je
mov
pop
int
xor
xchg
mov
shlb
cmc
sub
loopne
xchg
test
sub
sbb
std
or
lcall
ljmp
addr16
aas
xchg
fs
cmpsl
ret
adc
lods
sbbl
lock
mov
jnp
loop
and
fisubl
xchg
inc
in
fisubl
sbb
rorl
les
cmp
push
cmpl
icebp
mov
inc
out
xchg
sbb
adc
mov
fdivr
mov
push
xor
iret
adc
mov
inc
xor
jns
add
sti
loop
cmp
or
stos
ss
mov
pop
inc
popf
xor
bound
jne
pop
repnz
xchg
pushf
xor
mov
rclb
sarl
inc
xor
adc
and
inc
jg
insb
xchg
outsl
imul
call
dec
xor
add
fwait
mov
push
add
pop
push
cld
sub
cmp
sbb
jb
orb
or
popa
out
clc
mov
jns
ljmp
das
out
mov
sbb
fisttpl
iret
pop
fdivrp
rorb
adc
mov
jmp
jl
mov
adc
mov
repz
adc
shll
or
mov
mov
mov
push
nop
xchg
mov
in
imull
xorb
sub
mov
aas
mov
movsl
popf
inc
call
and
hlt
ljmp
hlt
out
outsl
mov
mov
pop
push
cmp
dec
shll
cs
mov
fidivl
cmp
pop
xchg
out
jnp
mov
jg
jp
int
sub
adc
dec
mov
movsb
icebp
adc
int3
nop
inc
int
mov
push
cltd
les
test
lret
lds
push
cmp
stc
mov
test
mov
into
sub
fdivrs
cvttps2pi
adc
add
dec
mov
jg
jno
xchg
popf
mov
xchg
popa
mov
nop
in
scas
out
lds
bound
push
stos
pop
icebp
loopne
cli
inc
mov
ja
add
loopne
arpl
cmpsb
lods
push
nop
insb
pusha
pop
and
scas
aaa
mov
fnsave
fisubl
ret
jp
sub
fstl
and
xchg
jns
js
sbb
aad
cli
and
cmp
adc
jmp
gs
push
and
loope
cmpsb
xchg
fxch
test
push
or
xchg
dec
test
leave
adc
jo
iret
fisubl
rorb
test
xor
xor
ret
jle
in
sub
lea
aam
dec
sti
xlat
xor
sbb
push
pop
add
push
jae
cmp
nop
push
push
lock
dec
outsl
int
lods
add
fs
push
pop
out
rcll
in
pop
in
cltd
and
push
or
lds
mov
ljmp
mov
adc
cmp
pop
adc
adc
es
jns
arpl
lcall
fmuls
arpl
insl
xcrypt-ecb
cmpsl
lcall
leave
jnp
sbbl
dec
mov
mov
adc
repz
or
ljmp
dec
cwtl
fcomi
or
lret
xor
xchg
mov
cmp
aad
sbb
pop
out
dec
xchg
jecxz
gs
sub
fs
orb
or
cmc
mov
sbb
ljmp
jge
inc
pop
imul
mov
hlt
mov
mov
gs
jmp
mov
nop
xor
jae
daa
fimuls
test
sti
outsl
inc
mov
pop
mov
sbb
call
test
add
add
pusha
ret
sbb
xor
mov
cli
fstl
mov
clc
mov
testl
mov
push
or
xor
scas
js
rorb
repnz
sub
shrb
int
cmp
aad
out
mov
sbb
jns
loopne
or
imul
jle
push
fidivrl
cmp
testl
hlt
lahf
xchg
and
lds
inc
pusha
add
pop
mov
xor
and
cmpsb
mov
sbb
jg
aas
mov
add
pushl
fwait
mov
and
les
loopne
mov
dec
xor
or
add
xchg
mov
and
xchg
inc
addb
outsl
add
test
inc
pop
mov
ds
ja
mov
clc
loopne
push
jne
andb
sub
sub
ret
xchg
out
scas
xor
mov
lret
pop
stos
sbb
push
pop
add
inc
mov
cmpsl
inc
xor
cmpb
inc
pushf
sti
xlat
mov
out
mov
out
aam
ja
and
out
jmp
xchg
push
movsb
mov
adc
leave
pusha
orb
push
jb
jb
data16
xorl
pop
xor
fidivrs
scas
imul
mov
je
sub
aam
js
mov
add
inc
std
les
movsl
cwtl
sarb
cltd
and
add
inc
int
mov
and
sbb
xchg
stos
fstpl
pop
xlat
xor
pop
addr16
jnp
fnstsw
sbb
sti
test
mov
xlat
mov
jl
mov
cmp
out
xchg
push
lahf
push
clc
sbbb
arpl
mov
test
mov
ja
or
adc
xchg
lds
inc
mov
pop
jo
dec
dec
int
pop
lods
push
mov
movsl
or
imul
pop
add
adc
sbb
fcmovu
arpl
cs
mov
aaa
pop
xchg
ja
ss
ret
xor
or
or
or
mov
cmp
sub
xor
test
adc
pop
jns
test
mov
adc
inc
repnz
repnz
orl
cmpsb
loopne
mov
mov
mov
out
add
insl
into
cld
lcall
pop
loopne
lods
hlt
mov
sti
xor
xchg
adc
fstpl
or
stc
mov
cwtl
loopne
xchg
push
pop
lret
add
stos
xchg
sbb
push
mov
or
xchg
jp
data16
mov
xlat
clc
dec
adc
iret
stc
xchg
lock
ret
inc
mov
mov
pop
mov
pop
fwait
pop
sub
fwait
or
mov
fwait
je
out
addb
cwtl
jle
fwait
mov
pop
cmp
enter
cmp
adc
xchg
rclb
cmp
ficoms
test
and
inc
cmp
jne
pop
mov
jnp
icebp
jns
scas
mov
push
jb
or
in
aad
std
push
push
lea
ss
das
aas
and
lcall
dec
or
movsl
jmp
and
insl
or
fwait
push
addr16
jne
das
sub
push
test
shlb
jns
pop
imul
pop
out
mov
test
push
mov
jns
sbb
lock
cmpsb
jnp
xchg
xor
in
add
dec
ret
adc
mov
rol
mov
lods
pop
cltd
jbe
jno
imul
fwait
fwait
insl
or
and
aas
sub
and
cli
ja
subl
dec
push
pop
imul
shll
push
and
xchg
mov
fisubs
lret
movsl
std
mov
lock
cmp
mov
rorl
rcll
data16
lock
add
push
cmpsl
outsb
push
call
mov
out
inc
sbb
inc
imul
mov
test
xor
push
fcompl
add
loope
xor
mov
jmp
dec
pop
lcall
imul
mov
push
pusha
inc
and
aad
fstpt
xor
pop
call
fucompp
xchg
mov
sbb
xchg
mov
clc
adc
outsb
dec
jnp
les
add
inc
sbb
ret
mov
mov
mov
mov
mov
jmp
push
adc
fisttps
dec
jb
xchg
xchg
in
shrl
xor
ret
add
cmp
int3
cmpb
call
sahf
enter
aam
aas
lea
pop
sbb
jb
sub
cmp
iret
jns
xchg
mov
test
lahf
arpl
sub
std
imul
jge
adc
scas
gs
mov
popl
jbe
int
lahf
cmp
fnstenv
jle
dec
rcrl
dec
or
fs
jb
cmpsl
push
imul
std
fmull
lock
adc
cmp
jae
mov
push
ret
repz
aad
add
or
xchg
cld
in
sahf
popa
inc
or
cmp
repz
jbe
mov
cmc
push
cmp
or
outsb
sub
cmp
sbbb
inc
mov
pop
fcmovnbe
pop
repnz
das
inc
push
add
leave
mov
rcr
mov
add
mov
pusha
push
xor
mov
in
movsl
leave
xor
popa
cmpsl
inc
xchg
fistps
sub
sbb
add
mov
jae
shr
movsb
or
movsl
jns
xchg
mov
mov
xchg
scas
pusha
or
dec
pop
push
lock
arpl
call
incl
add
cmpsb
pusha
xorl
dec
call
push
cs
fwait
cli
aas
push
insb
in
lret
push
ja
rorb
imul
sub
data16
test
jae
jecxz
xchg
cmpsb
mov
cld
push
mov
sarl
das
pop
sub
ss
test
rclb
mov
out
test
shr
loopne
and
repnz
outsb
mov
mov
repnz
sbb
jno
and
pop
inc
cmpsl
fdivrl
fstpl
xchg
push
mov
mov
lret
ret
aam
or
rcll
fs
gs
xor
adc
push
sbb
sub
jle
in
cli
mov
xorl
rorb
or
xchg
testl
mov
mov
imul
icebp
mov
xchg
sarl
or
ficoml
xchg
sub
xor
push
jg
cmp
scas
pop
ja
jecxz
fwait
scas
cmpsb
pop
cld
mov
in
aaa
or
cmp
mov
pop
inc
leave
rol
push
push
insb
stos
add
inc
xor
fldcw
jle
xchg
mov
in
and
or
jl
inc
add
xor
mov
xlat
gs
xchg
pop
lea
stos
xchg
fiadds
pop
cld
call
add
push
rclb
testl
push
jne
frstor
mov
ljmp
imul
pop
aaa
faddp
xor
push
cmp
xchg
pop
push
xchg
push
fwait
jecxz
cli
nop
lods
add
xchg
test
mov
pop
jbe
sub
pop
sahf
pop
sbb
test
add
dec
add
jp
xor
jg
movsl
mov
jecxz
cmp
leave
repz
xor
ds
jge
jbe
jle
push
out
sub
cltd
into
stos
cltd
inc
or
dec
mov
mov
idivl
jle
arpl
jmp
sbb
mov
int3
or
dec
clc
lds
jno
adc
jo
lods
fildll
push
jecxz
or
cmpsl
or
jno
mov
push
mov
xchg
push
in
clc
clc
jg
stos
fldcw
cwtl
or
jp
loope
jmp
or
xchg
sahf
ret
cmp
dec
aam
std
push
mov
inc
arpl
pop
inc
jns
ss
mov
jle
xchg
imul
xor
jae
dec
and
leave
inc
push
ljmp
mov
or
fwait
mov
shll
lahf
std
xorb
rorl
fnstsw
xchg
pushf
push
and
outsb
aad
movsl
repz
test
cmc
xchg
mov
mov
and
mov
cltd
jae
and
lea
xchg
lret
rcrb
std
pop
xor
popa
scas
mov
add
jge
inc
push
add
dec
push
lock
out
imul
push
adc
in
jne
dec
out
mov
fbld
inc
popf
int3
mov
mov
jo
ret
cmovs
cwtl
xor
aas
jmp
mov
jae
cmpsl
repz
in
push
lods
adc
mov
mov
stc
ficompl
mov
loop
sub
pusha
cmp
test
xor
push
xor
ds
sti
int3
lods
loopne
jne
je
mov
add
and
push
das
cmp
stos
movsb
sub
dec
pop
pop
push
dec
jp
movsl
mov
adc
inc
shlb
out
pop
fldcw
xchg
outsl
cmp
repnz
pop
cmp
dec
and
dec
jns
inc
stos
das
movsl
call
inc
sbb
ret
scas
outsl
adcb
outsb
js
cmp
outsl
cmp
leave
mov
lcall
inc
jnp
sbb
or
pop
mov
dec
add
psubusw
stc
cmp
or
in
in
jns
add
add
imul
movsl
push
in
test
test
in
jl
sbb
rclb
mov
push
xchg
mov
out
pop
xor
jle
addr16
sub
xchg
cli
inc
jne
push
pop
jbe
fstpl
mov
int
lds
sbbl
shlb
xchg
xchg
sbb
js
push
mov
rolb
pusha
jecxz
int3
jne
sub
call
adc
cld
clc
cld
push
test
into
push
in
mov
mov
subb
pushf
clc
addr16
xchg
ret
movsb
divl
and
jge
push
xchg
mov
mov
mov
xchg
mov
add
and
leave
mov
cmp
push
cmpsl
and
lods
inc
rclb
mov
sar
mov
insl
leave
cmp
ss
inc
jo
icebp
adc
mov
pop
inc
xor
or
repnz
imul
mov
add
mov
adc
mov
or
lcall
mov
jmp
insl
popf
test
loope
pop
cmp
addr16
bound
or
xor
fwait
lea
dec
repnz
outsl
push
cmpsl
negl
or
out
sbb
cmp
push
out
sarl
cmc
mov
cmpsl
pop
pop
mov
pop
pop
jne
aas
daa
mov
cmp
out
xchg
fsub
add
aas
jb
mov
fnstsw
iret
int3
or
cmc
add
cmp
jae
and
lahf
and
sbb
push
out
sbb
jl
cltd
mov
add
cmp
mov
and
popf
scas
mov
push
fucompp
or
push
js
faddl
pusha
inc
iret
stos
cmpsb
inc
in
cmpsb
pusha
les
data16
add
pop
rolb
sbb
push
mov
insl
pop
loopne
push
sub
and
sub
xorl
imul
shll
or
push
sub
repnz
int
push
inc
ja
dec
loop
xor
mov
adc
out
sub
xor
stos
push
cld
mov
mov
sbb
es
xchg
xor
add
lods
mov
movb
pop
clc
das
mov
rcll
mov
dec
fs
adc
cld
sbb
or
je
sbb
cmp
jae
cmp
cmc
std
dec
cmpb
sub
outsb
sbb
loopne
push
addr16
add
push
xor
inc
mov
adc
push
test
and
xor
sub
cmpsl
or
fisttpl
push
cmpps
testb
or
es
popf
push
jp
sbb
cmp
sti
das
pop
jp
cmpsb
jp
and
jge
jae
out
mov
mov
subl
push
das
mov
repz
push
daa
rcrb
into
stc
adc
pushf
and
push
data16
loope
jbe
jbe
and
xlat
in
jg
cli
mov
rcl
inc
mov
idivl
stc
mov
jb
adc
push
sub
adcb
sbb
js
pop
jnp
mov
dec
int
push
mov
mull
push
push
jno
paddd
sti
shrl
rolb
or
jb
sahf
add
cltd
call
pop
icebp
movsb
movsb
int
push
jo
sbb
add
cmp
insl
inc
pop
inc
insl
das
dec
nop
shrl
sahf
push
pushf
jecxz
movsl
icebp
stos
xchg
out
scas
scas
fildll
push
adc
jmp
in
mov
es
mov
insl
sbb
andl
test
cwtl
jle
sarb
daa
insl
pushf
rcll
pop
jle
xor
sbbb
lret
imul
push
or
test
cmp
sbb
push
fimuls
mov
int
pop
rcrl
push
lea
mov
mov
xchg
addr16
jl
adc
addr16
ds
mov
icebp
ret
insb
popf
addb
push
xor
mov
ret
push
or
inc
ror
jne
jnp
mov
testb
fstps
ret
mov
and
push
nop
add
or
pop
jno
icebp
and
adc
xchg
mov
inc
imul
scas
pop
inc
stc
mov
arpl
inc
cmpsb
stc
or
jae
sbb
lods
inc
insb
andl
cmp
inc
stos
andl
jmp
adc
or
push
push
push
test
pop
dec
sbb
repz
cmc
cmp
push
rorl
int3
adc
insl
test
aaa
mov
mov
roll
xchg
int3
mov
mov
cmp
rcl
push
sbb
loop
mov
inc
cwtl
mov
adcl
xor
stos
in
icebp
sub
and
insb
lcall
push
outsl
push
pop
dec
mov
xchg
inc
lret
es
fs
lahf
scas
inc
addr16
adc
jo
movsb
jb
inc
inc
das
aaa
add
flds
fistl
fxch
inc
les
push
test
iret
push
xchg
cmp
cld
xchg
nop
pop
insl
int3
or
lock
or
rcl
push
push
lcall
adc
and
inc
xchg
lret
sub
dec
push
std
sbb
mov
mov
in
cmp
aaa
test
mov
out
xchg
movsl
jmp
pop
fcomi
pop
push
mov
sub
inc
sti
ldmxcsr
or
cmp
mov
mov
xor
ret
lret
out
inc
cmp
xchg
loope
mov
imul
shl
mov
scas
cmp
imul
hlt
rclb
mov
in
inc
lret
cs
and
test
lahf
dec
cmpl
test
cs
sahf
inc
dec
mov
jns
popa
popaw
mulps
aaa
mov
ljmp
imul
pop
js
add
es
jno
fistps
stos
pop
es
adc
adc
int3
ljmp
gs
cmp
mov
add
pop
jae
cmp
mov
rcrb
repnz
clc
push
or
mov
sbb
mulb
xlat
insl
push
nop
xchg
mov
and
and
insb
dec
int
inc
or
pop
dec
adc
fnstenv
pop
inc
stc
lahf
rorl
jp
loope
add
repnz
shlb
pop
or
add
push
jae
scas
das
std
aam
idivb
enter
inc
gs
cli
adc
fisttps
scas
icebp
mov
fs
sub
dec
mov
sbb
pop
cld
outsb
mov
dec
push
dec
lock
pop
inc
hlt
cmpb
mov
lods
ja
add
test
mov
idivb
insl
dec
sub
leave
and
lods
adc
xlat
jp
int3
jecxz,pn
jle
out
mov
pushf
enter
dec
sbb
lock
aas
push
pushf
adc
and
jne
mov
cmp
ret
std
pop
aad
xchg
push
inc
mov
jle
fsts
cmp
rcll
sbb
sub
mov
lods
mov
dec
cmp
cmp
call
nop
fildl
inc
dec
dec
insl
imulb
push
adc
inc
cmp
add
iret
repz
mov
or
mov
xchg
xchg
or
or
fdivrs
shrl
test
andb
sbb
cwtl
push
imul
xlat
gs
jb
clc
cwtl
dec
jl
add
sbb
push
stos
xor
pop
mov
lods
mov
xor
cmp
jp
or
jnp
push
stc
mov
sbb
pop
sub
adc
dec
jmp
adcb
test
pop
push
push
test
add
addl
scas
rorl
hlt
lea
and
addr16
adc
dec
add
test
les
mov
push
or
ljmp
fs
mov
in
and
pop
loop
out
addb
mov
pop
jno
sub
daa
add
leave
loop
nop
inc
lock
lea
push
jbe
test
or
sbb
xchg
sbb
out
push
xor
jno
adc
test
sbb
and
mov
sbb
dec
mov
or
scas
jns
stos
mulb
push
je
mov
mov
testl
cmp
add
xor
loope
fimull
and
cltd
adc
jno
frstor
mov
rclb
stc
idiv
inc
mov
mov
add
inc
mov
in
mov
push
inc
fisubrl
inc
pop
inc
mov
xchg
rolb
add
push
rcrl
es
sbbb
mov
push
push
mov
xchg
daa
push
sahf
or
mov
dec
sub
orb
shlb
xorl
enter
add
insb
dec
je
adcl
mov
fwait
adc
and
in
add
movb
pop
in
test
sahf
cld
repnz
std
test
mov
iret
out
or
sub
aas
inc
pop
xor
call
dec
mov
js
pop
xor
lahf
cmp
pop
test
mov
out
push
mov
inc
mov
mov
jge
aas
arpl
or
in
pop
sar
sbb
jge
add
adcl
shrb
fiaddl
jbe
xchg
lods
jp
pushf
inc
repnz
ret
das
out
jecxz
sbb
js
jge
sbbl
push
sarb
push
jp
or
pop
mov
dec
sti
mov
cmp
push
outsb
pop
adc
mov
xchg
loope
hlt
loop
insl
sub
push
hlt
add
scas
push
push
shll
out
xchg
imul
push
and
push
and
mov
mov
jae
bound
fistpl
mov
or
les
fisttpl
in
dec
int
ss
repnz
mov
jne
jp
pop
outsl
sbbl
inc
stos
xor
icebp
clc
loopne
fwait
mov
or
mov
jo
lret
jle
mov
jb
clc
aas
or
pop
pop
mov
stos
xor
mov
imul
inc
icebp
dec
jge
mov
call
cmpsb
cwtl
pop
fwait
ret
outsl
xchg
fcompl
insb
stos
lds
data16
pop
mov
pushf
xor
push
mov
sub
out
inc
pop
and
test
fwait
inc
jne
aad
dec
adc
aaa
bts
xchg
jo
bound
lret
cmpsl
mov
out
pop
daa
sarl
cwtl
xchg
sbb
cmc
insl
fistpl
mov
add
fists
and
jae
hlt
mov
call
iret
imul
or
mov
insb
cmpsb
cld
jns
popf
sbb
add
insl
pop
xor
dec
mov
lea
imul
dec
or
sbb
into
subl
push
xor
mov
idivl
mov
add
pop
inc
daa
adc
sub
cmp
mov
cmpsl
repz
in
in
sti
mov
jo
jne
xor
or
push
fisubrs
pop
mov
jne
lea
leave
xor
inc
xlat
inc
lods
imul
into
in
pushf
fcoms
xchg
frstor
sbb
dec
pop
popa
testb
in
mov
sbb
dec
mov
xchg
aam
cltd
subl
ret
out
stc
adc
inc
iret
jbe
aam
imulb
mov
push
xchg
pop
rcll
ret
call
mov
in
cmpsl
jl
lret
sbb
mov
lret
inc
in
jnp
lods
push
mov
fstl
mov
dec
inc
and
sbb
sbb
sbb
movsb
or
dec
jne
mov
and
fstl
rcrb
mov
cmpsb
cmc
pop
iret
mov
mov
xchg
jmp
lods
mov
cld
js
sbb
mov
outsl
mov
push
arpl
pop
mov
add
pop
ss
mull
testl
cmp
xchg
shll
scas
mov
push
test
xchg
sub
jg
xlat
lea
xor
fcmove
push
frstor
enter
push
es
push
stos
movsl
xor
mov
leave
shlb
in
inc
fstpt
outsl
push
ljmp
lret
arpl
das
jle
xchg
iret
stos
je
in
lahf
jge
adc
mov
or
sub
cli
add
jge
xor
movsb
jbe
dec
xchg
or
ret
jle
xchg
add
jb
arpl
cmc
adc
xor
inc
js
cmp
aad
test
out
adc
cmpsl
push
jnp
hlt
mov
mov
xor
movsb
pop
test
sub
pop
mov
aad
stos
mov
mov
or
or
ja
scas
daa
scas
outsl
ficompl
mov
jns
insb
xchg
or
fs
xor
xor
pop
xchg
pop
and
call
movl
cld
jl
daa
test
in
notl
call
addb
sar
pxor
mov
movsb
sbb
mov
mov
lret
lret
cmpsl
jbe
or
add
insl
sub
cmp
dec
lods
nop
cmpsb
or
add
pop
push
sti
push
popl
mov
mov
fldt
sub
inc
inc
jle
jg
fwait
push
scas
cmc
and
jecxz
out
pop
test
outsb
push
addr16
arpl
ss
push
mov
bound
cs
mov
mov
inc
stos
jl
add
add
jb
fisttps
push
and
mov
repnz
test
cmp
iret
addr16
mov
jo
mul
push
rcl
arpl
cmpsl
adc
pop
les
rclb
shll
pop
sbb
xor
repz
dec
xchg
xor
repnz
cmp
test
cmpsl
clc
jmp
sarb
or
lds
outsl
mov
xlat
fmull
hlt
loope
mov
ljmp
lret
out
sub
sbb
add
sti
hlt
test
mov
ficoml
in
outsl
rorb
pop
xchg
mov
and
call
jne
nop
js
xor
out
mov
cs
or
lods
pcmpeqd
les
mov
jl
cmp
hlt
jg
add
fnstcw
insl
pop
mov
jl
js
scas
xchg
inc
hlt
movsl
in
cmc
leave
rolb
adc
loopne
push
and
ficoms
test
lahf
push
loop
int
cld
or
fists
xor
push
gs
mov
orb
das
clc
adc
dec
sbb
pop
push
adcl
ffreep
ret
add
cmp
cmp
andb
ret
test
or
mov
movl
cmp
fldl
test
cmc
push
cmp
fwait
push
push
fidivl
ljmp
or
into
lock
popa
and
inc
lock
push
push
sub
sub
shr
sub
jecxz
inc
mov
repnz
cmpsl
inc
inc
mov
jg
push
xchg
push
mov
inc
or
inc
xchg
mov
dec
scas
dec
mov
inc
mov
push
or
push
push
int
inc
cld
in
and
adc
ret
mov
sahf
dec
fstpt
outsl
int
daa
mov
xor
test
jbe
jecxz
aam
inc
cmp
xor
adc
xor
mov
pop
loop
loopne
lret
mov
mov
xchg
xchg
sahf
push
loopne
aad
adc
sub
xlat
repnz
dec
cs
icebp
dec
das
jb
sbb
sbb
adc
decl
and
ja
dec
xchg
scas
and
scas
inc
cmp
loopne
mov
sub
cli
or
js
inc
xchg
mov
test
lods
cmpsb
test
add
adc
adc
xchg
stc
adc
mov
mov
out
lcall
or
fs
mov
and
sbb
fistpll
stos
mov
mov
lahf
cmpsl
push
arpl
adc
xchg
cmpsl
ljmp
ja
xor
leave
adc
mov
xor
mov
jge
std
mov
jno
hlt
rcl
sahf
lods
adc
lcall
pop
push
mov
add
xchg
imul
lea
inc
lcall
xor
clc
rorb
and
sbb
push
popa
adc
pusha
fldl2e
cs
aaa
das
shlb
or
sbb
jge
mov
in
fbld
sub
sbb
push
pop
ret
clc
dec
add
test
xchg
movsb
xchg
gs
fs
push
negb
push
hlt
dec
inc
loop
push
gs
stos
push
mov
in
lret
scas
sub
ds
aaa
sahf
aaa
push
in
sbb
mov
inc
imul
cmp
push
cmp
popf
clc
int3
dec
cmp
jecxz
loope
enter
fwait
fwait
xchg
push
pop
sub
add
push
jae
add
adcb
and
dec
cld
cmp
and
xor
dec
fwait
pop
in
sbb
jecxz
add
scas
ret
jp
or
subl
lods
stc
pop
mov
movsb
inc
popa
shrb
loop
or
jae
movsb
decb
test
popa
dec
cli
in
pushf
divl
cmpsb
insl
push
cwtl
add
jl
repnz
and
xor
cmp
mov
mov
cmp
dec
fbld
xlat
out
cmp
es
dec
jae
cmc
xchg
imul
test
les
out
mov
rolb
sbb
lds
jecxz
bound
fsubrs
jle
pushf
mov
fildll
inc
enter
popf
rol
orl
pusha
add
icebp
fidivrs
andl
aas
mov
inc
sbb
jae
fisubrs
jbe
cwtl
jno
sbb
sti
and
dec
adc
and
andl
leave
push
in
clc
sub
adc
sbb
pop
insl
mov
mov
inc
pusha
aad
lock
lahf
mov
mov
ja
pop
or
les
jge
std
pushf
lret
sbbl
into
xor
nop
xchg
fldcw
dec
xor
cmpsl
mov
iret
lods
add
xor
js
mov
sbb
inc
bound
lret
mov
inc
push
inc
outsb
repz
jmp
cmovbe
pop
cmp
and
cmp
test
add
cmc
stos
pushf
xor
dec
neg
lret
daa
pop
ret
sub
inc
adc
jle
subl
repz
or
arpl
add
and
mov
lret
repnz
int
push
mov
movsb
and
mov
icebp
xor
cmpl
stos
push
loopne
mov
push
test
dec
sets
ret
sahf
fcmovbe
je
mov
pop
adc
jnp
jmp
cld
jae
jae
loop
nop
mov
rcl
fisttpl
push
insb
or
cld
mov
std
or
sub
lea
xchg
xor
mov
std
rcr
popa
into
aaa
cli
outsl
sbb
fimuls
add
fnstsw
ret
es
inc
ja
add
adc
mov
int3
in
lret
cmp
or
les
mov
movb
xchg
ret
sbb
dec
int3
dec
push
loope
mov
shl
test
dec
xchg
pop
mov
mov
addr16
lcall
fsub
pop
lock
xlat
popa
hlt
test
and
int
sbb
sbb
js
ret
arpl
jno
loopne
mov
lods
cmpsb
jge
in
jno
xchg
call
and
cmp
ljmp
cmp
rcll
adc
mov
push
push
out
pop
jae
inc
and
dec
mov
sbb
and
ret
rol
das
dec
jbe
mov
xor
add
pop
dec
leave
xchg
or
add
rcll
stos
mov
cmp
imul
jmp
loope
dec
js
pusha
lcall
jno
mov
cmp
test
dec
out
mov
enter
imul
sbb
cli
mov
insl
adc
mov
xbeginw
imul
roll
mov
js
inc
cmpsb
xlat
push
cld
test
xorb
leave
push
pop
sub
mov
push
sub
leave
shl
pop
aam
cltd
fisubrs
add
and
or
test
and
and
sbb
mov
ljmp
xchg
rorl
in
js
adc
pop
insb
pop
fstpt
xorb
mov
cmp
add
mov
das
scas
sub
outsl
lcall
xchg
mov
add
daa
xchg
and
std
or
stos
sti
xchg
movsl
xchg
sbb
popa
scas
adc
jl
mov
js
push
adc
mov
enter
das
lds
adc
push
xor
clc
or
decb
jp
aaa
add
xor
cmp
in
inc
mov
xchg
popf
mov
mov
push
dec
es
dec
xor
lods
inc
inc
fistpll
add
jbe
jle
pusha
adc
sub
mov
mov
jecxz
jne
testl
in
xchg
mov
shlb
mov
lds
das
adcl
xchg
call
sub
sarb
cmc
in
lock
inc
mov
mov
or
xchg
lret
loopne
inc
xlat
mov
cmp
adc
aad
jne
cmpsl
xchg
dec
sarb
jne
movntq
or
or
mov
jle
clc
dec
test
test
add
lcall
xor
cli
mov
rorl
sub
movsb
adc
dec
jecxz
lret
add
insb
insl
jmp
adc
cmp
fildll
aas
cmc
scas
cmp
push
lds
daa
cltd
shl
add
call
mov
pop
and
fiadds
dec
xchg
shl
lods
popf
lret
mov
movl
xchg
adc
popa
cmpsb
loopne
mov
dec
xchg
sbb
lods
pop
dec
jae
imul
xchg
jge
ss
sub
jge
leave
mov
jmp
jge
out
leave
lods
add
mov
add
push
dec
movsb
add
inc
add
sbb
and
int
push
aaa
inc
das
iret
add
lea
mov
out
xor
dec
inc
cld
int
repz
jge
jns
mulb
sbb
mov
aaa
mov
rcll
rol
dec
ret
inc
fildll
stos
sti
jne
js
mov
push
rcl
inc
jno
pop
cmovp
or
testb
xor
push
fisttps
mov
inc
jbe
push
mov
xor
test
push
data16
pop
dec
pop
inc
fidivs
and
jecxz
or
sub
sbb
in
psubb
and
jns
repz
or
xor
mov
aas
icebp
fwait
sbb
cmp
mov
lret
aad
xchg
xchg
mov
rcl
mov
outsb
data16
sbb
jne
pop
jno
jnp
mov
insl
jp
gs
and
lods
imulb
aad
fs
into
xchg
xchg
sbb
jg
xor
or
inc
daa
xor
push
adc
cmpsl
movsl
addb
xor
sub
les
jno
dec
outsb
cltd
pop
mov
pop
cmp
pop
and
cmc
and
sub
sub
mov
and
and
popf
xchg
fwait
insb
sbb
dec
negb
js
jno
lock
icebp
std
mov
adc
cmp
cmp
add
push
xchg
mov
jle
pop
cmc
pop
mov
lret
mov
aad
mov
cmp
adc
mov
add
lret
mov
insb
in
nop
cwtl
pop
pop
pop
mov
dec
adc
jp
rcr
icebp
bound
js
adc
mov
not
enter
data16
xchg
sbb
notl
jbe
adc
ljmp
in
mov
repnz
adc
push
fstpl
popa
daa
sbbb
and
int
mov
sub
scas
add
cld
daa
jns
je
ret
mov
outsb
sbb
pop
mov
movsl
rorl
sbb
and
inc
jle
sarb
jns
push
ret
xor
fdivrs
cmp
cmpsb
cmc
imul
aas
in
cmp
outsb
test
stos
and
dec
aam
push
xchg
mov
mov
ret
xchg
ss
mov
lds
push
xchg
int
mov
insb
mov
sub
xor
jnp
adcl
adc
sbb
adc
xor
xchg
xchg
mov
xorl
ret
divl
push
push
iret
adc
cmp
int3
in
fiaddl
pop
push
jne
xlat
decb
xlat
fucomp
inc
test
pop
movsl
push
mov
xor
insb
cmp
repz
mov
or
pop
rcll
xlat
mov
cmp
in
out
xor
popa
cs
jmp
mov
push
cli
xor
pop
mov
cmpsb
mov
sar
int3
outsb
repz
test
dec
movsb
or
nop
imul
cmp
push
cwtl
mov
jae
push
mov
repnz
adcl
push
xlat
sub
aam
push
mov
push
add
mov
ja
pop
adc
or
push
mov
movsb
push
lahf
daa
add
mov
adc
popf
push
jae
inc
les
pushf
xor
test
test
mov
adc
popf
test
mov
jo
test
pop
or
clc
or
pop
in
loopne
movsl
push
mov
int3
imul
mov
loop
pop
sbb
data16
nop
push
xchg
and
sub
sti
lret
and
push
mov
xchg
push
test
loope
test
into
xchg
sub
sbb
clc
cmp
push
dec
repnz
cli
setg
cmp
out
inc
rcrb
xchg
xchg
incb
out
bound
xchg
xor
icebp
adc
dec
push
mov
mov
push
mov
push
rorb
mov
and
ss
out
pop
jmp
imul
shlb
test
orb
sub
adc
jp
and
xchg
loop
inc
enter
ja
sahf
lods
push
lods
in
sti
shll
inc
xor
push
ljmp
repz
sti
hlt
icebp
das
sub
lds
sti
data16
cld
mov
or
push
mov
mov
lcall
les
scas
xor
jo
leave
mov
stos
add
sub
pop
pop
mov
and
orb
fidivs
or
push
fs
aad
mov
out
sbb
xchg
fucomi
or
sbb
inc
ja
aaa
mov
push
decl
sbb
ljmp
fists
cs
bnd
popa
or
xor
popa
insb
pop
fs
dec
aaa
icebp
lcall
sub
inc
jne
or
cli
adc
inc
sbb
test
out
cmp
int
mov
orb
push
xchg
dec
test
sub
or
gs
test
mov
add
test
mov
adc
bound
inc
mov
add
dec
pop
dec
fnsave
sub
add
movsb
dec
lds
jo
mov
jae
test
mov
pushw
pop
out
aaa
and
cmp
mov
cli
ss
jecxz
xchg
mov
es
add
push
and
repz
mov
inc
daa
mov
sub
inc
imul
loopne
inc
pop
cld
lret
in
fs
stos
repz
sbb
inc
push
aas
dec
and
mov
mov
imul
xchg
repnz
mov
jg
mov
aas
xchg
test
xor
xchg
mov
cmp
or
or
xor
scas
mov
jecxz
sbb
mov
inc
pop
or
in
lods
fs
add
sbb
ljmp
int
push
jge
inc
iret
es
push
test
adcb
sub
ret
jno
inc
repz
mov
loop
jbe
sbb
adc
out
dec
out
add
or
xchg
cmp
push
ds
das
mov
dec
inc
aaa
mov
dec
repz
inc
mov
adc
jno
loope
mov
sub
mov
out
jno
jge
mov
jo
xor
cmpsl
enter
arpl
cs
cld
inc
add
lods
sub
push
repz
pop
lahf
mov
sub
sahf
xchg
mov
mull
cmp
ds
mov
pop
sbb
pusha
lea
push
jge
push
mov
xor
inc
dec
dec
add
mov
stos
hlt
mov
jmp
inc
dec
xor
pop
shlb
clc
mov
add
sahf
inc
dec
xchg
daa
cmp
jo
add
pop
mov
test
test
mov
add
insl
jmp
push
jnp
xchg
pop
test
jnp
sub
mov
push
pop
ljmp
mov
pop
or
outsb
xchg
iret
nop
cmp
dec
fcomps
jge
shl
cld
jg
call
imul
xchg
ret
cmp
loopne
dec
cld
push
xchg
xlat
mov
sub
mov
shrb
int3
mov
inc
dec
inc
ljmp
lock
pop
test
mov
loop
test
ffreep
sub
movsl
add
imul
and
sub
adc
out
mov
sbb
mov
aas
sbb
jno
adc
arpl
hlt
mov
addr16
sbb
dec
cmp
mov
or
repnz
ja
repz
pop
cld
decl
out
cmp
fsub
iret
nop
mov
xchg
push
daa
sub
ret
sub
int
add
div
lcall
outsb
add
push
les
outsb
es
cmpb
lret
mov
je
in
cmc
mov
sub
xor
adc
cmc
shl
leave
stos
pop
ss
icebp
ds
cmp
std
xchg
xchg
cmp
in
sub
push
mov
in
aam
ds
pcmpgtb
and
mov
aad
cmp
shlb
into
pop
hlt
adc
mov
loope
pushf
rorb
psraw
jb
es
loope
and
pop
mov
mov
mov
mov
push
or
repz
popa
mov
adc
cmp
cmp
sub
mov
pop
jp
aaa
inc
xchg
dec
pop
out
imull
push
cld
scas
jg
xchg
cmp
pop
cmp
or
and
shl
pusha
ret
insl
ret
test
pop
fdivl
test
xlat
inc
cmp
xlat
ret
lret
adc
xchg
and
fcmovb
inc
and
iret
leave
inc
or
ja
add
fwait
out
mov
mov
xlat
fcoms
mov
ss
icebp
dec
mov
pop
leave
ja
ljmp
xlat
mov
mov
leave
in
fxch
xchg
jmp
rolb
cwtl
add
and
sub
jp
mov
js
incl
scas
inc
mov
push
jecxz
inc
mov
lret
js
ficompl
test
and
aad
cwtl
shll
push
or
pop
xor
outsb
jl
pop
jb
mov
das
data16
iret
leave
daa
cmp
push
in
hlt
je
sbb
lds
out
cmpsl
pop
icebp
enter
push
cmp
mov
fwait
test
fistps
dec
insl
xchg
jno
jne
pop
xchg
lock
test
xchg
out
jl
jne
scas
mov
push
jno
xchg
scas
rorb
out
jbe
popa
sub
pushf
insl
roll
ljmp
sub
mov
inc
arpl
mov
repnz
test
movsl
in
jge
mov
mov
pushw
sbb
mov
xor
xchg
cmpsb
xchg
adc
stos
aad
add
xchg
ljmp
cwtl
dec
or
das
in
sahf
lea
cmp
sbb
xor
lahf
add
push
js
test
or
adc
es
in
bound
xor
lock
daa
lret
cmp
cmpsl
fidivs
and
dec
shlb
xchg
and
fs
imul
add
das
xchg
add
or
aaa
loop
inc
imul
jb
mov
inc
cmc
clc
hlt
inc
sbb
pop
loope
es
hlt
roll
lds
ret
mulb
imul
ja
mov
mov
push
test
loopne
cmpl
push
and
add
mov
movsl
test
out
mov
pop
test
icebp
pop
ljmp
push
sbb
sbb
sbb
popa
les
or
ljmp
jno
push
sub
pop
jae
fidivl
jo
sub
push
mov
pop
push
sub
adc
in
aas
pusha
cmp
into
xor
cwtl
cmpb
mov
or
xor
je
mov
adc
in
jecxz
xor
cmpsb
xor
add
adc
sub
repnz
cmp
fwait
mov
aas
jb
fcomp
mov
sub
ss
jae
outsl
sub
push
adc
pop
lret
or
test
addl
test
dec
ja
or
dec
adc
jge
pop
out
cltd
mov
test
and
mov
std
sahf
mov
mov
push
mov
push
sbb
push
mov
dec
sub
mov
lods
add
repnz
xchg
lcall
das
dec
inc
daa
out
fistpll
mov
mov
push
push
jns
sub
jp
dec
pop
mov
sbb
push
test
test
adc
mov
cmp
mov
adc
pop
xchg
das
out
pop
mov
negl
pop
mov
fs
or
mov
fiadds
dec
pop
mov
out
jns
jle
push
cmc
pushf
xchg
jl
daa
mov
mov
mov
jl
adc
sub
or
lock
fstl
fnstsw
repz
popa
addr16
mov
sbb
push
sbb
addr16
inc
adc
loop
jne
bound
es
shrb
push
fistl
out
ljmp
stos
imul
add
adcb
and
das
jne
movsl
lret
pop
es
les
jecxz
and
mov
xor
repz
adc
test
mov
mov
sbb
cmc
movsb
cmpsl
mov
cmp
cmpsb
sti
scas
pop
repz
sbb
push
pop
sub
in
daa
cmc
mov
mov
leave
and
mov
jae
mov
push
push
mov
inc
fadds
push
and
dec
aam
mov
negl
or
lahf
aam
addb
bound
shll
mov
das
and
cmp
test
mov
imul
mov
inc
sarl
add
daa
mov
out
mov
adc
repz
mov
xchg
mov
les
sub
imul
mov
dec
inc
jae
cmp
pop
mov
jbe
jl
imul
cmp
xor
xor
jne
aam
mov
int
roll
xor
pop
push
lods
jb
sub
cmp
cmp
sub
xor
test
movsl
sbb
mov
ja
fcmove
sbb
push
xchg
dec
push
sub
and
cwtl
dec
sbb
ljmp
loopne
imul
sti
and
pop
aad
sti
ret
inc
ja
lds
pop
mov
outsl
loope
sub
into
jb
inc
xchg
nop
je
cmp
cmp
dec
sub
ja
repnz
pop
or
push
rorl
mov
icebp
sbb
loop
or
cmp
incb
outsl
cli
jne
fs
sub
or
sub
data16
xor
pop
int3
pop
pop
or
dec
or
pop
or
jge
imul
ret
push
cmp
mov
into
ret
sahf
xor
aam
adc
movb
sbb
cmp
lock
sbbl
mov
sbb
adc
loope
mov
sub
add
adc
ljmp
inc
add
stos
mov
lcall
xor
mov
das
daa
pushf
pushf
loope
aas
jl
gs
sahf
xor
sti
std
lds
imul
cld
sub
sarb
add
adcb
jl
test
imul
fstpl
repz
xchg
adc
cmp
clc
jae
sub
xor
jle
mov
mov
push
repz
ja
adc
cmp
cmpsb
outsb
bound
add
or
mov
mov
mov
int3
inc
loope
mov
cld
add
jmp
sbb
lret
fistps
in
inc
jnp
jl
imul
sahf
inc
add
cmc
je
or
aam
mov
jae
jle
inc
and
jg
cli
es
in
aad
push
jge
add
inc
mov
sbb
in
xchg
sub
jo
sbb
scas
cmc
xchg
in
into
out
fldt
cmp
jno
dec
ror
jmp
clc
inc
jcxz
xchg
dec
push
mov
mov
stc
fwait
mov
cltd
jae
mov
out
aad
enter
mov
je
je
leave
lock
mov
bndldx
adc
sbb
lcall
mov
popf
call
cmpsl
int3
cmp
dec
cmpsb
jg
lahf
lcall
inc
jae
cli
testb
dec
push
cmpsb
ljmpw
test
pop
cmpsl
xchg
push
pop
sbb
adc
je
adc
push
pop
in
bound
pop
and
bound
mov
andl
or
jge
sar
or
mov
call
mov
loope
mov
sub
or
jge
cmp
inc
adc
pop
jb
sbb
or
xchg
les
daa
dec
shll
add
aam
aad
mov
or
sub
stos
add
int3
fs
and
and
call
mov
push
outsl
xchg
cmc
arpl
xlat
fs
jecxz
into
and
xchg
jp
or
cmp
aam
pop
clc
adcb
popf
arpl
dec
mov
shlb
mov
imul
push
push
icebp
cmp
adc
enter
xchg
jno
insb
sahf
mov
rcll
mov
das
mov
pop
cltd
push
daa
in
test
out
shr
test
test
sti
loope
lret
and
decl
sbb
jnp
mov
xchg
and
adc
cmpsl
loopne
and
jmp
call
repnz
loope
xor
mov
xchg
mov
jp
test
dec
ror
imul
gs
fsubp
xchg
mov
add
xor
add
stos
rorl
jae
in
push
jp
aad
pop
sbb
mov
ss
xor
pop
dec
jb
mov
xchg
loope
push
xor
sti
shll
xor
dec
jae
xor
shr
xor
mov
scas
lock
movsl
andl
sbb
rolb
movsb
ja
out
pop
inc
pushw
mov
sbbl
ja
sbb
sbb
loopne
dec
inc
shrb
out
neg
test
xor
add
add
lret
jns
mov
lds
push
call
jp
adc
adc
hlt
mov
lea
pop
mov
pushf
mov
xchg
jle
add
data16
jecxz
fisubrs
mov
fisubrl
sub
cmpsl
jp
sbbb
mov
inc
mov
repz
repz
mov
popf
push
mov
loope
stos
adc
pushf
rcll
neg
in
xor
push
mov
incb
ljmp
adc
testb
jle
mov
insb
pop
outsl
adc
mov
inc
pop
sbb
push
push
fsts
xchg
jo
xor
sub
mov
fcomp
imul
in
inc
mov
jle
jae
lret
loopne
mov
test
mov
sbb
mov
xlat
orl
fwait
test
ror
and
into
jp
sti
lret
push
mov
mov
pop
hlt
leave
push
enter
std
lret
cmp
jns
bound
push
jge
outsl
fisubrl
in
data16
jp
inc
push
sbb
hlt
xlat
mov
inc
sbb
cs
sbb
push
sbb
mov
out
gs
jae
mov
jo
push
mov
jne
fmull
jno
cmp
adcl
ljmp
mov
sub
mov
iret
push
cld
ljmp
daa
orb
mov
inc
mov
fidivl
lds
jmp
jmp
ja
cmc
pusha
mov
iret
movq
xchg
push
push
jmp
xchg
mov
jae,pn
pcmpgtw
xchg
and
adc
lret
pop
mov
mov
cmpsl
push
cwtl
push
sarb
sub
shll
sub
stc
add
lahf
aas
fistpl
stos
daa
mov
push
xor
xchg
mov
mov
sbb
bound
xchg
addr16
and
imul
or
insl
icebp
mov
repz
dec
push
push
add
mov
adc
test
mov
inc
dec
orb
adc
inc
jp
cmpsb
rcl
je
push
scas
push
rcll
lods
addr16
es
notl
lret
dec
add
loope
pop
popf
sbb
mov
push
std
inc
test
cmp
outsl
xor
jg
sbb
xchg
xchg
xchg
ficomps
xchg
or
daa
les
bound
adc
jne
sub
pop
and
add
movnti
jne
push
jns
pushl
ja
or
and
fcmovnu
sti
push
or
in
adc
popa
daa
mov
call
fs
lahf
adc
push
mov
fwait
mov
xchg
clc
filds
jmp
stos
daa
std
cmp
push
mov
dec
and
data16
jno
cmp
sub
ficompl
or
xor
xchg
sub
loope
pushf
aaa
psrld
idivb
sarb
sti
mov
jge
out
xchg
scas
lcall
or
bswap
stc
xor
jl
jmp
pop
lret
lock
lods
mov
xchg
pusha
dec
cmpsb
or
jecxz
mov
neg
xchg
aam
xchg
orl
fcoms
sub
and
push
add
in
push
mov
cmp
out
les
idivb
mov
fcompl
fisubl
rolb
jl
pusha
xlat
jmp
xchg
rol
mov
test
add
jno
inc
mov
jnp
test
push
cmp
inc
out
inc
cmp
test
hlt
mov
push
pop
xchg
lcall
push
pop
mov
mov
iret
loop
bound
mov
fcomps
mov
cld
fidivl
xchg
push
adc
test
mov
rcr
add
sub
cmp
cmp
int3
xor
xchg
push
rorb
mov
push
js
jg
addr16
sub
cmpsb
pop
mov
dec
xchg
mov
inc
mul
cmp
scas
rorl
mov
test
insl
jge
sub
rep
add
loopne
or
stos
lods
cmpsb
fsubp
or
dec
and
sbb
mov
ljmp
push
lea
mov
xor
add
fsubs
pop
push
cmpsb
mov
pusha
sbb
push
push
aaa
mov
ret
pop
jg
mov
adc
push
popa
sbb
dec
xor
cmp
clc
ret
dec
xchg
rcl
mov
pop
and
stos
adc
fildll
dec
or
jo
scas
daa
or
fdivp
adc
jae
fcomps
mov
leave
push
jle
push
inc
data16
test
add
inc
cmp
pop
in
push
outsl
lret
cmpsl
cmp
subl
stos
dec
ret
xchg
stc
stos
sub
sbb
stos
push
jmp
add
sub
test
push
mov
addr16
pop
inc
mov
push
push
adc
cmc
sbb
push
sbb
int
xor
shl
int3
mov
sti
jle
cmp
inc
jae
sbb
mov
and
mov
xor
jg
push
fwait
or
inc
pop
in
or
sub
stos
in
icebp
test
lock
es
daa
gs
mov
notl
cwtl
mov
sbb
push
xor
div
lods
push
adc
fwait
out
mov
mov
xchg
ret
jnp
aaa
jno
lds
cwtl
cmp
es
inc
cmp
xor
lcall
mov
data16
test
lcall
push
push
push
mov
lds
fistl
push
jnp
sub
lods
mov
lret
push
xor
push
xor
idivl
push
xor
pop
ss
out
dec
mov
jno
adc
xchg
jo
dec
imull
std
ljmp
shll
and
ret
fadds
into
outsb
dec
xchg
xlat
dec
pop
add
xlat
stos
gs
or
ret
inc
xor
aas
and
frstor
cmp
jno
adc
and
push
cmpsb
fidivs
jnp
jae
scas
push
xor
js
aas
dec
repnz
xchg
and
pop
mov
popa
lret
scas
outsl
shll
xchg
sti
pop
iret
mov
push
stos
test
xchg
pop
jge
pop
mov
mov
fstps
aas
pop
inc
ljmp
out
divl
arpl
mov
mov
mov
ds
fwait
push
cwtl
pop
lock
push
push
out
push
dec
push
das
cmp
addr16
xchg
mov
stos
sbb
xor
push
and
das
roll
xchg
mov
mov
jp
decl
nop
pusha
mov
subl
js
dec
xchg
sub
xchg
inc
lock
xchg
dec
xor
fs
shll
lret
out
inc
sub
dec
pusha
ficoms
ret
mov
sub
mov
das
and
ds
xchg
fcmovu
bound
sbb
divl
jo
test
mov
mov
nop
test
add
sub
inc
xor
subl
lret
pop
sbb
mov
mov
dec
sbb
je
push
mov
pop
jmp
andb
les
ret
out
xor
std
mov
aam
inc
push
fdivl
adc
aas
ret
movsb
shll
lea
jge
push
sbbb
adc
sbb
lret
pop
xchg
push
rclb
sahf
xchg
movsl
inc
dec
dec
insl
cmp
sub
mov
xchg
xor
outsb
jo
inc
jb
push
imul
insb
lcall
ds
pop
stc
std
dec
outsb
hlt
xchg
adc
ljmp
sub
push
nop
pop
sub
iret
fistpl
push
ret
sbb
shl
push
cmpsb
sub
lock
jae
cmp
mov
cmp
fmul
adc
xchg
iret
imul
pop
pop
icebp
lds
out
pop
imul
cltd
enter
mov
cmpsb
cmp
sub
mov
sbb
pop
es
sahf
mov
add
xchg
popf
sub
lods
pushf
cmc
repz
jle
mov
mov
int3
les
in
sub
adc
or
cltd
movsb
inc
and
lods
pusha
gs
and
jl
push
nopl
sbb
test
jle
push
xchg
sbb
sti
mov
inc
push
js
or
jae
cwtl
cld
sub
pop
dec
adc
popf
xchg
push
imul
gs
cmp
leave
sbb
cld
pop
loope
cmp
outsl
lcall
sub
mov
cmp
repz
mov
fcomp
cwtl
popa
sub
jno
in
pop
testl
incb
add
pusha
hlt
loopne
loopne
cmp
inc
sbb
std
fimull
pop
clc
out
or
add
xlat
loope
sub
push
cld
mov
jge
inc
xlat
xlat
arpl
out
sahf
leave
sub
cmp
lock
stos
loop
sbb
xor
inc
fisubrs
xchg
xchg
sub
mov
cmp
xchg
ss
pop
push
leave
fimuls
or
fldt
or
cmp
out
ljmp
pop
jbe
add
aad
lods
fcompl
and
mov
mov
paddw
mov
add
inc
sbb
xchg
xchg
shrl
cwtl
out
inc
sarl
xor
outsb
gs
pop
xor
fnsave
inc
xchg
push
dec
xchg
loop
aas
stc
or
sbb
decb
in
jecxz
jmp
mov
xlat
push
mov
push
sub
cmp
mov
jge
xor
in
xchg
pop
mov
jmp
rolb
jno
pop
mov
or
sub
das
push
xchg
ss
mov
jno
xchg
stc
stos
jl
fdivrl
mov
xor
push
sbb
mov
sbb
fstps
push
push
sahf
test
sahf
inc
ficoml
scas
xor
and
adc
inc
dec
dec
leave
dec
pusha
or
ret
rcrb
ds
pop
push
xchg
mov
mov
add
or
sbb
test
lcall
dec
lcall
mov
mov
cmpsl
xchg
inc
es
xchg
xchg
xlat
inc
fcoms
cmpsl
jbe
movsl
cmpsb
pop
daa
or
xchg
lods
movsb
mov
popf
adc
mov
out
jg
in
imul
mov
insl
popf
int
add
popa
popf
test
jge
stos
int
ds
mov
cmpsl
jl
add
add
push
dec
fcompl
in
add
mov
adc
andb
mov
adc
lahf
sarl
lcall
iret
lahf
cwtl
roll
and
sub
or
push
out
outsb
sbb
sub
pop
fwait
push
jnp
nop
cli
mov
psubusw
aad
pop
jecxz
and
jmp
xchg
push
fiaddl
sbb
inc
ret
andl
daa
cmp
adc
and
push
rclb
aas
xor
jbe
xchg
jae
aad
pop
pop
add
jno
mov
adc
pop
push
loope
addl
adcb
xor
lods
dec
hlt
stos
je
mov
and
scas
sbb
sbb
xor
orb
push
shrb
test
std
push
shll
dec
ficoml
cmpsb
push
je
and
dec
test
push
jne
cmc
in
sub
adc
adc
adc
and
clc
mov
stc
fildll
inc
in
imul
xor
push
inc
call
sbb
notb
inc
mov
adc
leave
mov
outsb
push
xchg
pop
or
ss
inc
sar
add
dec
clc
dec
push
nop
pop
mov
in
mov
ja
jne
icebp
outsb
push
inc
push
je
cs
mov
cmp
dec
mov
push
mov
ret
push
add
push
add
sbb
std
xchg
xor
ds
clc
mov
scas
adc
pop
shlb
lret
or
stc
data16
repnz
xor
popa
sar
sbb
mov
fbstp
in
dec
inc
and
adc
in
xor
lea
shr
pop
dec
jge
mov
js
jle
jne
gs
adcb
mov
repnz
push
mov
sahf
in
sbb
pop
inc
lcall
shr
mov
inc
fiadds
xlat
stos
fwait
push
test
rclb
sub
mov
inc
scas
rsqrtps
push
cwtl
xchg
and
dec
je
aam
mov
cmp
jp
xchg
nop
mov
sbb
jns
sub
clc
lcall
insb
jecxz
cmpsl
pop
add
and
mov
and
and
sti
jo
ss
lahf
xor
sub
popa
cwtl
inc
fwait
push
jl
shlb
dec
lods
call
jmp
imul
das
stos
add
mov
push
ss
incl
jbe
inc
or
cmp
push
cmc
jmp
cmpsb
cs
gs
sbb
adc
dec
xchg
test
dec
arpl
aaa
pop
mov
inc
mov
lds
add
lret
fistpll
js
pop
inc
pop
repnz
out
push
xor
out
jg
xchg
insl
and
repz
les
divl
std
cwtl
movsb
xlat
push
pop
pop
ret
push
loope
dec
dec
xor
shlb
fldcw
dec
iret
ja
inc
out
or
jl
push
dec
sub
mov
in
or
cmp
mov
jecxz
addr16
sarb
add
sub
add
mull
insb
push
rorl
adc
sub
add
dec
cs
enter
add
dec
cmp
je
outsl
sub
sbb
movsb
ljmp
mov
xor
loopne
aaa
mov
xchg
add
test
enter
sub
sbb
cmpl
mov
adc
rorl
adc
xchg
pop
stos
jp
ja
mov
pop
in
jmp
push
cmpsb
lods
test
insb
mov
test
subl
testl
mov
mov
imul
lods
jle
je
mov
mov
push
adc
addr16
mov
sbb
xchg
addr16
jl
lods
push
push
cmp
or
dec
push
loop
sbb
sti
inc
push
xchg
add
fs
int3
adc
add
xlat
adc
lcall
roll
ss
sarl
inc
rorl
test
addl
push
cwtl
ja
mov
in
movsl
sub
or
inc
mov
lea
je
dec
jmp
mov
std
xchg
cli
loope
jp
stos
test
cmovne
jp
cmp
or
cmp
ret
xchg
shr
xor
iret
inc
xlat
sbb
mov
xor
adc
rclb
mov
lds
xchg
jns
sbb
xorb
jae
mov
cltd
inc
icebp
mov
push
loop
int3
xlat
mov
push
aam
cmpsb
cmp
loope
and
xor
mov
push
jle
icebp
sbb
pop
pushf
shr
daa
fimuls
add
and
dec
repz
xor
pop
in
lret
xlat
ficomps
fldcw
in
sbbl
test
nop
pusha
daa
ja
adc
add
movsl
add
mov
cmp
mov
mov
iret
popf
jl
mov
mov
and
loop
sbb
cmp
lds
std
or
jae
pop
sbb
cltd
jb
pushf
push
xchg
and
pusha
mov
pop
or
ss
data16
aad
out
aad
sbb
push
mov
and
or
push
pop
or
cmp
stos
dec
cmc
xor
or
pop
js
dec
in
pusha
xchg
push
ss
mov
repnz
movsb
int
int
jns
scas
sbb
imul
dec
sub
fsub
notb
stos
leave
sbb
out
sub
xchg
jne
stos
mov
push
repz
sbb
sub
or
scas
or
das
push
inc
jl
loop
add
cmpl
mov
movsb
add
mov
lock
rcrb
js
roll
xor
pop
imul
cmpsl
cli
test
xor
push
call
and
jo
insb
cmpsb
inc
test
sub
or
mov
pop
jne
ljmp
shl
pop
or
inc
hlt
inc
and
cmp
shrl
stc
mov
push
jmp
pop
dec
outsb
sahf
mov
fcmovbe
lea
pop
mov
idivb
lock
jbe
sub
or
int
add
scas
call
mov
mov
ja
popa
or
pop
mov
push
push
and
mov
loopne
rcrb
jmp
rcr
popf
sub
mov
sub
cmpb
adc
icebp
arpl
mov
cwtl
aam
mov
and
pop
ds
jge
or
dec
fisubrs
jmp
push
in
xchg
fucomi
les
subb
mov
push
aaa
jmp
in
sub
sub
push
aam
cmp
int3
adc
mov
push
jmp
and
xchg
adc
cmpsl
enter
jmp
xor
push
xor
into
inc
jbe
popa
js
or
aaa
fwait
xor
je
ret
test
ss
sbb
in
call
inc
fstps
faddl
sbb
inc
push
and
sub
mov
push
pop
mov
inc
js
andl
xchg
jl
cmpsl
mov
ret
lds
fs
push
inc
cltd
xchg
sbb
add
mov
mov
cs
inc
xor
popa
movsb
jne
out
xchg
adc
inc
loope
popa
loopne
mov
mov
stos
cmp
repz
repz
sub
adc
cmpsb
aad
dec
xchg
fldt
push
stos
jno
lea
mov
cmpsb
mov
enter
leave
jnp
ja
or
mov
and
inc
pop
pop
test
movsb
inc
add
int
es
movsb
xor
xor
or
add
pop
idivl
push
cmp
dec
jmp
hlt
mov
rcrb
cltd
add
loopne
mov
adc
push
std
into
sub
mov
mov
push
testb
insl
jb
fildl
xchg
pushf
ja
pop
adc
les
subb
lea
testl
aam
and
std
jns
hlt
inc
pop
ds
jb
jle
ja
ds
pop
insl
push
lock
adc
sub
xlat
add
xchg
inc
daa
into
jno
daa
sbb
jbe
dec
sbb
pop
xlat
mov
lea
adc
xchg
out
xchg
arpl
gs
push
pop
imul
rcrl
repnz
push
aas
fisubs
imul
out
adc
leave
imul
lcall
cmpsl
xlat
dec
addl
push
pop
cmpsb
mov
cwtl
adc
rol
cli
fcoms
sbb
jnp
cmp
jecxz
or
stos
aaa
fstpl
jbe
std
jg
imul
sub
cmpsl
gs
cmp
cmpsb
cmc
xor
and
es
push
mov
mov
jmp
mov
fstps
pop
sub
int
xchg
adc
xlat
out
pop
mov
hlt
in
and
xor
jb
adc
add
outsl
mov
add
sbb
jle
inc
mov
idivl
push
popf
mov
mov
ds
and
inc
gs
jb
mov
mov
cltd
lret
dec
sbb
outsl
ds
dec
xchg
aam
pop
cld
cmp
xchg
xchg
movsl
dec
inc
int3
cmp
cmp
push
mov
popa
inc
psllw
shr
ljmp
xor
pusha
mov
addl
or
fs
inc
mov
jecxz
aas
out
mull
mov
and
dec
lds
pop
push
movsl
hlt
pushf
movsl
outsl
dec
inc
pop
lea
cmp
mov
inc
xor
shlb
or
push
rcrl
test
pop
dec
xor
shrb
aas
jp
push
out
xor
cmp
mov
jp
lret
jg
push
test
xor
lcall
xchg
gs
xor
sbb
mov
or
cld
les
inc
ret
xchg
mov
fstps
fucomi
mov
test
jmp
ret
cli
shr
repz
push
or
fwait
mov
mov
or
fwait
push
dec
cmpsb
cwtl
rcr
xor
mov
fcompl
mov
sub
repnz
push
fwait
pop
fdivs
mov
push
dec
jecxz
cli
adc
ds
adc
mov
xor
and
es
stos
lds
in
add
adc
cltd
outsb
mov
lret
xchg
dec
mov
ret
cwtl
fistl
fisubrl
and
push
xor
cmp
dec
rcrl
xor
sub
xchg
jecxz
mov
sub
and
adc
in
mov
sub
loopne
adc
ljmp
inc
mov
and
push
je
and
aam
sub
cmp
pop
fistps
or
xchg
mov
jmp
roll
loope
call
jecxz
push
jp
mov
loopne
xchg
mov
push
mov
test
arpl
movsb
mov
icebp
or
movsl
jecxz
insb
xor
xorl
repz
pusha
mov
jle
dec
push
lret
or
and
mov
in
push
adc
xor
lret
jle
js
das
jns
outsl
push
fisubrl
add
or
pop
out
int3
and
push
mov
imulb
and
inc
arpl
xchg
xchg
add
push
cmpsb
js
ljmp
jae
js
movsb
jae
xchg
in
ljmp
repz
stos
mov
adc
xchg
call
pop
adc
mov
sti
jae
push
adc
mov
jl
and
cltd
and
cmp
data16
fistpll
div
sahf
std
add
lret
clc
and
imull
int
aam
mov
jecxz
dec
inc
pop
or
icebp
sub
mov
jg
ljmp
js
jge
xchg
mov
jp
in
push
push
ds
adc
jp
xchg
aad
cmp
cmp
pop
js
jnp
xchg
push
in
jno
mov
jbe
dec
dec
or
mov
mov
and
add
or
movsb
lret
inc
lods
or
mov
jae
lahf
push
sub
pop
and
cmp
std
pushf
neg
pop
test
ret
mov
cltd
add
xchg
xor
ja
subb
imul
iret
add
dec
or
cld
mov
or
jl
movaps
mov
call
inc
adc
in
mov
mov
test
jg
out
scas
add
add
xor
out
push
pop
xchg
aad
fimuls
mov
xchg
xor
adc
loope
xchg
orb
push
push
adc
pop
add
data16
mov
jg
jmp
sbb
test
add
fisttpll
sbb
dec
push
movsl
dec
or
iret
repnz
lahf
movsl
lods
shl
jns
xor
pop
ret
ret
bound
and
push
and
and
dec
cmpsb
scas
iret
pop
shl
test
jne
add
addr16
imul
into
ss
aad
sbb
or
sbb
sub
pop
pop
ja
ficoms
ret
loop
loop
mov
push
inc
pop
loop
cmpsb
lahf
xchg
loope
mov
std
aam
gs
lahf
jmp
push
mov
inc
in
in
jl
dec
fs
bound
xchg
jge
hlt
adc
lods
outsl
out
dec
xchg
and
add
int
inc
inc
ds
sti
stos
cwtl
push
dec
hlt
popa
jmp
xchg
xchg
adc
sub
call
xorb
lea
test
ljmp
out
add
adc
lock
jae
mov
test
jge
out
jg
sbb
andl
ja
dec
sub
jge
inc
adc
mov
jnp
lahf
mov
and
sbb
incb
int
push
lods
out
add
mov
lret
pushf
int3
outsb
dec
outsb
orl
add
pushf
out
pop
int3
test
and
outsb
xchg
jns
iret
imul
or
xchg
fdivl
iret
pop
jmp
ret
mov
orl
cmp
cmp
ret
bound
aam
add
inc
pop
scas
idiv
jb
inc
xchg
imul
loope
orl
pop
fucom
lods
lret
repz
pop
insb
jl
iret
jb
lock
int
push
sub
jbe
and
pushfw
and
jmp
jecxz
hlt
iret
je
cmpsb
cmp
xchg
in
dec
jne
fwait
out
dec
or
lret
cmp
xchg
arpl
mov
std
cmp
push
pusha
loopne
lret
filds
push
lcallw
jg
lods
xor
pop
mov
xchg
iret
aaa
dec
sahf
pxor
xor
mov
jmp
push
cmp
sub
xchg
and
and
cmp
int3
jae
jbe
mov
push
inc
push
imul
nop
mov
lahf
cmp
cmp
xchg
nop
mov
mov
push
mov
pop
mov
int
outsl
stos
fnstenv
pop
stos
les
jb
iret
mov
mov
clc
mov
jno
xor
add
nop
mov
cli
stos
push
test
mov
daa
out
ret
ja
push
repz
test
mov
or
or
movsl
lret
inc
push
dec
mov
ret
pop
in
jne
push
out
test
pop
cli
push
push
push
cwtl
stos
add
mov
jae
lret
xchg
lods
arpl
rcrb
cmpsl
test
sbb
mov
rolb
lcall
add
repnz
pushf
sub
fisubrs
jp
push
cmp
push
ret
add
fwait
int
xchg
iret
jmp
out
inc
lds
mov
jb
pop
jns
jno
xchg
test
pushf
and
icebp
outsl
fwait
inc
dec
sbb
jmp
out
mov
shr
add
jo
push
and
inc
js
pushl
lods
call
rcrl
inc
shlb
sbb
pop
in
outsl
fsubrp
cmp
and
xor
pushf
in
mov
inc
lcall
dec
inc
add
cmp
lea
mov
lock
xchg
popa
fdiv
xor
push
or
xchg
jb
popa
jmp
mov
iret
insl
jg
in
or
add
movsb
idiv
jae
dec
pop
or
frstor
arpl
mov
cmpsl
xchg
loope
mov
or
popf
jl
cmp
leave
test
jecxz
je
out
enter
xchg
mov
fisubl
adc
xlat
add
ja
andl
sub
sub
dec
add
leave
cwtl
aad
fnstcw
mov
push
enter
pop
mov
push
mov
cmp
out
push
or
aam
and
mov
mov
out
and
cs
mov
jo
leave
fldcw
mov
outsl
jmp
cwtl
or
jne
loop
daa
std
mov
dec
test
loop
sub
pop
lods
xor
xor
mov
fimull
sbb
jnp
or
bnd
add
pop
mov
scas
xchg
pop
inc
push
lock
mov
lods
add
nop
rcll
jo
push
jl
jle
arpl
xor
mov
pop
jo
je
add
mull
pop
inc
dec
xor
sbbl
loope
jns
inc
push
cmpsl
lods
vfmaddsub132ps
fidivl
fisubs
or
aad
pop
fimuls
pushf
mov
insl
aas
dec
arpl
fldl
aaa
xchg
xor
push
jb
loop
mov
xor
jg
and
cli
popf
jge
pop
mov
insb
jo
je
in
repz
inc
bound
push
adc
idivb
mov
scas
mov
xchg
fisttpl
push
sub
mov
imul
mov
in
cli
jge
mov
mov
rcrb
xlat
jb
mov
out
sub
mov
iret
hlt
shl
leave
sub
jnp
adc
fdivp
shrl
daa
in
scas
dec
into
sti
mov
int3
cmp
add
pop
sub
push
push
mov
pop
sub
mov
inc
push
movsl
dec
cmp
mov
dec
aam
pop
popa
int3
into
and
repnz
sub
int3
ss
jns
jg
push
jle
in
jecxz
mov
fsub
xchg
inc
repnz
dec
push
sub
movsl
insl
pop
jg
mov
pusha
adc
mov
add
cmp
mov
in
out
sbb
cmp
shll
push
loopne
cmpsl
mov
fidivs
popl
xor
jl
hlt
mov
sub
insb
jg
faddl
stos
and
dec
push
push
xor
jno
inc
mov
push
cmp
addb
pop
ja
or
sub
sbb
sub
bound
cmc
add
sub
adc
lcall
imul
outsb
and
pop
lret
xchg
shll
daa
cld
roll
mov
movsb
mov
lock
push
xchg
jae
int
dec
jns
pusha
les
mov
in
cmp
in
lock
add
cli
dec
fnsave
cli
lods
ss
and
xor
xchg
xchg
xchg
dec
dec
adc
dec
imul
mov
clc
stos
cmp
sbb
and
clc
inc
mov
daa
push
in
and
xchg
xor
aas
adc
out
pusha
fwait
es
imul
add
sar
stc
dec
sbb
sub
js
int
repz
fs
jno
add
sub
mov
add
pop
in
outsb
inc
jo
inc
mov
dec
jmp
mov
dec
adc
clc
fists
jb
push
mov
andl
xchg
mov
mov
enter
fdivl
sub
jbe
pop
or
gs
push
jecxz
clc
cmpsb
lcall
loop
mov
icebp
rclb
mov
nop
fimull
loope
push
data16
and
lock
sub
or
jbe
ret
and
fwait
movsl
add
xlat
or
incl
dec
test
lods
lcall
xor
add
loope
das
inc
pop
jae
xor
sbb
push
xorl
repz
mov
cli
std
insb
icebp
sbb
xchg
push
sbb
scas
ror
pop
pop
jbe
jo
sbb
pop
dec
mov
add
leave
out
out
sbb
adc
stos
in
lret
mov
lahf
into
fwait
jo
sub
adc
mov
xchg
cli
mov
xor
add
sub
rorl
lods
ljmp
jns
mov
push
inc
sub
mov
push
jne
movsb
jle
mov
pop
mov
or
daa
jle
inc
inc
push
add
sub
iret
rep
or
push
fnsave
es
ret
dec
jns
shlb
push
mov
xchg
or
std
imul
xchg
push
or
push
xchg
cltd
imul
mov
mov
sub
mov
out
jae
or
pop
scas
sub
icebp
mov
into
xorb
jmp
int
dec
lods
aam
xor
jno
int3
jg
dec
mov
sbb
push
push
sub
push
push
cmp
in
sub
inc
or
inc
mov
xchg
adc
jl
adc
xchg
outsb
jge
push
cmp
scas
mov
hlt
mov
adc
adc
cmp
push
and
add
dec
dec
cs
movb
test
orb
mov
lods
lock
cmp
push
xchg
loop
icebp
out
and
inc
add
pushw
xchg
and
jge
add
jecxz
movsb
out
loope
jle
xchg
daa
push
mov
hlt
mull
sub
aaa
rorl
rep
aaa
inc
pop
push
and
push
xchg
add
or
mov
lret
mov
pushf
cwtl
mov
adc
push
ret
stos
mov
fsub
scas
sbb
inc
mov
shll
mov
or
mov
mov
ret
insb
pop
sbb
push
enter
xor
lds
je
sbb
xor
push
scas
shlb
or
into
push
jo
imul
sbb
sub
dec
mov
push
jo
es
nop
cmp
cmp
insb
call
mov
push
repz
pushf
das
mov
pushf
sarb
sub
or
icebp
pop
fsubs
movsl
popf
xor
es
pop
pop
mov
lea
mov
js
cs
pop
mov
jb
mov
pusha
mov
xor
push
xchg
adc
test
xchg
xor
mov
mov
pushf
push
xor
mov
rorl
add
and
mov
shl
dec
add
add
sbb
adcb
pushf
aam
dec
movsb
xchg
jp
repz
mov
rcll
or
int3
in
add
js
sbb
fldcw
test
mov
int3
sti
stc
lahf
dec
enter
call
lea
pop
loope
pushf
xor
int3
and
dec
pusha
push
repz
mov
out
jne
pop
stos
dec
iret
inc
xlat
mov
shrb
fistpl
dec
adc
push
cltd
add
insb
mov
inc
mov
fsubrl
test
fidivrs
aaa
xor
adc
jo
and
shrl
push
lods
mov
aam
test
xchg
hlt
ret
add
xlat
push
sub
std
stos
pause
jmp
sub
xor
push
mov
test
xchg
insl
enter
and
icebp
dec
hlt
insl
mov
xorl
pop
dec
mov
cmp
and
cmp
ret
mov
mov
mov
scas
mov
jecxz
jge
push
or
sub
aad
add
test
xor
jle
stos
movsl
in
repz
jge
sub
std
adc
mov
fisubrl
enter
loop
pusha
mov
ret
xor
push
mov
scas
sbb
adc
adc
push
lahf
out
or
int3
outsl
mov
add
aam
jle
adc
out
push
popf
inc
lock
popf
out
stos
mov
movsl
and
repz
pop
push
add
xorl
rol
repz
push
adc
ds
sbb
push
sbb
xchg
add
sub
push
ret
dec
adc
or
andb
popl
es
inc
cld
mov
adcl
sub
popf
add
mov
arpl
bound
in
mov
not
jns
xchg
je
push
aad
push
insb
mov
cli
lods
sub
je
sub
adc
mov
xorl
mov
mov
les
sub
xor
xchg
inc
mov
adc
pop
fmull
push
pop
jp
cmpsb
xchg
cli
lcall
or
push
int3
aaa
fsubrl
cmpsb
xor
mov
add
fs
lret
adc
mul
iret
test
gs
or
enter
push
inc
inc
xor
or
and
and
dec
rorl
jg
sub
jge
jnp
dec
mov
daa
mov
xor
pop
or
pop
nop
fcmovu
aam
pop
stc
aad
leave
sbbb
xor
push
nop
lock
sub
addr16
sbb
and
stc
je
mov
fiadds
add
test
and
mov
lret
data16
scas
or
xchg
xchg
or
ja
inc
jg
sbb
cmp
push
adc
pop
pop
pop
mov
jns
ret
push
movsl
mov
sub
int
test
dec
cmp
and
cmpsl
add
movb
jmp
imul
inc
orb
imul
mov
ror
pop
cwtl
out
fnstenv
shll
addr16
xor
xchg
fcoml
lret
lods
or
add
mov
out
fcoms
add
push
add
cmp
ss
pop
cmp
out
adc
out
stc
xor
rolb
loope
inc
push
jecxz
popa
and
out
shr
mov
or
pop
movl
mov
or
mov
push
sub
cwtl
outsb
imul
xchg
adc
push
cmc
add
push
push
aad
mov
add
pop
hlt
push
add
pop
jl
add
das
mov
pop
ficomps
sub
cmp
mov
flds
xchg
inc
lea
xor
xchg
add
scas
mov
out
shlb
testb
das
into
push
test
stos
pop
fsub
sarl
aas
cld
insb
push
stc
clc
fcmovb
je
dec
jns
fidivrl
xor
push
cmpsl
jmp
push
jmp
into
mov
mov
adc
cmpsb
xchg
popf
mov
out
mov
insb
nop
das
push
xor
das
inc
lods
pushf
sub
sbb
std
lea
cmovg
lcall
xor
push
arpl
jae
or
push
adc
and
bound
enter
add
adc
jb
out
xor
xchg
cmpsl
push
loope
and
rcll
pushf
gs
roll
sbb
add
dec
cmpb
xchg
sub
mov
push
push
arpl
add
adc
pop
mov
push
lcall
jle
scas
mov
inc
enter
xchg
and
jne
pop
mov
xor
adc
ret
inc
lcall
mov
imul
jle
add
scas
add
les
jmp
or
adc
lock
sbb
shrb
cld
jp
loopne
fidivrl
frstor
or
jnp
xor
orl
cmpsb
fbld
pop
mov
orl
int
inc
rorb
and
out
stc
js
sub
push
je
sahf
xor
sub
mov
lock
scas
push
std
xor
jb
sub
popa
icebp
sbb
mov
jno
sbb
cmpl
push
mov
pop
in
fsubrs
mov
cmp
sbb
sub
scas
mov
pop
push
pop
stos
and
ret
popa
pop
fildll
mov
je
xchg
cli
stc
or
adc
sbb
mov
out
dec
sbb
sbb
fcom
mov
mov
mov
jge
aam
mov
jl
pop
inc
and
aad
mov
xor
and
push
xor
xor
mov
movsl
stos
loope
mov
pop
lods
stc
xor
cmp
dec
fisubrs
shll
mov
outsl
jne
outsb
jp
inc
or
sub
push
pop
push
xchg
inc
fdivrl
inc
mov
ret
xor
inc
fistl
push
sbb
jecxz
jns
pop
jp
inc
ds
loopne
push
cltd
jle
sbb
ret
repnz
stos
adc
dec
inc
mov
mov
cmc
pop
fdivr
fildl
repz
sbb
shrl
pop
ret
inc
mov
shlb
push
xchg
stc
dec
mov
or
and
add
insl
stos
push
ret
cmpsb
sub
js
jo
or
dec
cltd
or
fwait
scas
sahf
mov
das
and
pop
lods
cmp
cmpsl
xchg
leave
js
hlt
mov
arpl
pop
cmp
js
jg
push
sti
add
add
mov
repz
aad
add
in
or
ss
dec
data16
adc
ja
shll
fmul
dec
cmp
sbb
push
lods
stos
dec
lahf
sahf
dec
pop
xor
les
dec
in
jnp
mov
inc
sbb
cmc
arpl
mov
test
dec
pop
leave
push
gs
inc
in
mov
cs
xchg
ja
jae
xor
js
mov
cmp
je
fildll
iret
push
push
add
sbb
push
push
inc
inc
pop
scas
jo
sbb
cs
dec
mov
daa
push
scas
inc
jmp
testl
dec
fnstcw
cwtl
xor
pop
cmpsl
jb
jae
adc
jmp
lds
mov
push
or
in
dec
mov
adc
sbb
aam
ficompl
iret
out
mov
sbb
push
sbb
sbb
or
xchg
lock
push
in
jbe
bound
std
push
daa
test
add
mov
dec
loopne
mov
push
mov
fwait
test
test
dec
lcall
push
lods
jnp
push
pop
fimuls
shll
xor
cmpsl
sub
sub
pop
mov
sub
cmp
xor
xchg
pop
sub
adc
gs
mov
and
adc
pop
aad
jmp
int
in
ss
jge
or
and
pop
leave
mov
inc
push
dec
jns
daa
pop
rorl
jae
xlat
push
out
mov
xor
sub
sbb
cmp
stos
pop
sar
sub
sbb
in
inc
jne
mov
shrl
clc
pop
jg
add
add
movl
jge
data16
jmp
adc
sub
push
push
mov
out
loop
loopne
decb
nop
enter
lcall
adc
inc
bound
fnstenv
clc
aas
push
dec
mov
ja
es
or
push
int3
movsb
mov
rol
and
fcomip
sbb
stos
or
dec
dec
movsb
cltd
enter
lret
cmp
scas
dec
inc
inc
imul
xchg
xor
insl
pop
lcall
std
js
inc
add
int3
add
imul
enter
pop
xor
sbbb
xor
dec
lcall
ret
inc
in
jmp
pop
aam
imulb
cmp
adc
loopne
lods
pop
pop
js
pusha
js
cmpl
daa
dec
gs
or
mov
shlb
inc
fidivs
lcall
jae
xchg
xchg
adcl
shll
lock
mov
subb
xor
rcrb
jno
pop
fmull
ljmpw
outsb
or
add
add
pop
dec
jnp
mov
daa
or
fstpt
push
clc
inc
int3
push
dec
lods
add
mov
out
or
push
fbstp
mov
dec
rcrl
mov
enter
out
or
sub
cmpsl
dec
inc
scas
arpl
add
push
mov
add
mov
adc
add
imul
and
sahf
inc
xchg
nopl
xchg
inc
and
es
pop
and
sub
and
sti
in
sub
lahf
xor
mov
jae
in
jbe
cmp
fmuls
dec
movsb
mov
test
lea
inc
fwait
inc
int3
dec
cli
hlt
fsts
jno
aas
sub
scas
adc
call
cwtl
push
mov
jecxz
lods
lahf
test
inc
repnz
or
nop
push
push
jb
jb
das
pusha
jb
in
sbb
stos
mov
xor
push
adc
cmp
cmp
mov
dec
into
cmp
jge
movsl
or
pop
mov
inc
lea
xor
cmp
add
jp
pop
cmpsl
dec
xlat
ret
add
ljmp
lret
or
ljmp
mov
mov
xor
xchg
inc
adc
iret
in
jo
ljmp
xlat
mov
cld
push
mov
xlat
adc
stos
xor
adc
std
in
nop
jle
shr
push
ljmp
push
js
shlb
sbb
add
out
mov
rcr
idivb
sub
es
leave
in
aaa
daa
pop
jne
rcl
ss
movsl
imul
clc
fs
rclb
lods
mov
das
and
rorb
pop
jb
call
push
cmp
cli
mov
xor
enter
das
fnstsw
or
add
mov
lods
sbb
cmp
inc
mov
inc
mov
adc
shll
mulb
paddsb
jo
mov
xchg
cmp
es
lods
xor
pushf
pop
lock
es
insb
sbb
fisubs
fcompl
aam
dec
test
xchg
inc
dec
mov
fs
pop
mov
sti
fiadds
mov
mov
jp
push
push
push
mov
rcl
inc
mov
and
pop
jns
jnp
ds
in
sti
add
mov
adc
stos
adcl
lret
stos
sbb
push
mov
mov
pop
test
dec
or
pop
cmpsl
andl
mov
push
xor
dec
and
or
cmpsl
mov
enter
sbb
sbb
int
xor
cmc
fistl
jbe
mov
xor
std
les
cmp
mov
jnp
xchg
xor
leave
cwtl
lock
mov
push
out
leave
test
push
sbb
imul
inc
inc
rorb
mov
mov
scas
adc
push
mov
pop
mov
cmpsl
mov
into
in
push
add
mov
movsl
das
sub
aam
fbld
inc
xor
subb
divb
fwait
cmc
inc
cli
xchg
cmc
dec
les
aam
xchg
les
aad
pushf
or
lods
jno
add
mov
fmull
fcmove
hlt
inc
inc
push
rcrb
cmp
fildll
mov
pop
loopne
frstor
mov
add
mov
lcall
scas
iret
inc
sbb
mov
pop
pop
std
mov
out
push
into
fwait
cltd
aam
inc
push
cmp
call
mov
iret
xchg
xchg
mov
mov
mov
mov
mov
lds
and
bound
test
push
icebp
dec
mulb
and
inc
xchg
inc
add
jo
fidivl
lods
cmc
jecxz
xchg
pop
cmc
ljmp
aad
adc
fmuls
mov
jns
push
scas
iret
xchg
movsl
es
pop
mov
xor
jp
repz
fldl
and
lcall
shl
ror
pop
jp
loop
adc
lds
mov
xor
inc
adc
jae
xor
or
fbld
or
int
push
cmp
testb
outsb
lock
fwait
cmpsb
xor
jp
jae
jecxz
daa
sub
in
xor
pop
inc
sub
jno
das
fsub
mov
mov
inc
xchg
or
dec
lods
xor
cltd
sub
xlat
je
mov
neg
test
inc
loop
or
cmpsb
push
xchg
jmp
pop
lret
loopne
adc
cmpsb
lea
adc
cmc
dec
arpl
or
push
xlat
jnp
call
mov
xchg
adc
je
push
inc
push
cs
int
pop
movsl
in
movsl
out
lock
push
lahf
das
push
ret
jns
dec
mov
or
sbb
xor
xchg
fwait
sub
fs
add
mov
push
push
mov
pop
stc
inc
jmp
fsubrl
cmp
ljmp
mov
jb
cmc
push
clc
fnstsw
into
fildll
mov
pop
cmp
mov
std
scas
push
movsl
lds
in
adc
push
pop
lahf
pushf
mov
jmp
jae
aas
push
shlb
cmc
xchg
xchg
andl
mov
jo
or
sbb
sahf
fadd
or
popa
lea
xchg
jl
imul
jns
ret
repz
jb
sub
lret
aam
out
lret
add
sub
sahf
push
jl
fptan
push
xchg
pop
and
mov
call
pop
fisubrs
xlat
pop
cmp
mov
sti
cmp
pop
inc
adc
dec
bound
sub
stc
mov
mov
jmp
bswap
jp
mov
or
aad
cmc
xchg
dec
sub
lret
popa
add
clc
or
enter
pop
pop
dec
fstps
sbb
adc
mov
xchg
ss
xchg
or
fwait
mov
sahf
jge
xchg
or
lcall
int3
sbb
or
mov
add
jno
pop
call
mov
pop
push
xchg
dec
shrl
lods
fisubrl
outsl
xchg
ss
ljmp
sahf
mov
mov
cmpsb
pop
xlat
or
push
adc
rcll
clc
pop
cmpl
xor
cmp
stc
cmp
pop
enter
test
sahf
pushf
inc
divl
pushf
nop
out
mov
lret
sub
inc
scas
dec
inc
mov
insb
xchg
fisttps
push
movsb
jge
int
leave
insb
sub
xchg
stos
jno
dec
ljmp
pushf
pusha
and
lds
jns
add
test
add
loopne
stc
pop
mov
mov
dec
pop
sbb
gs
daa
jge
mov
and
outsl
ret
adc
pop
jl
adc
das
test
xchg
jb
ror
shrl
je
sbb
out
iret
mov
cmpsb
pop
in
fldcw
test
cmp
test
popa
xor
jge
add
hlt
lcall
sbb
inc
xor
repnz
test
adc
cmp
cld
add
daa
sbb
ss
fimuls
mov
sub
lea
fmull
cltd
testl
fidivs
cs
fbstp
das
inc
lock
push
mov
imulb
jb
mov
ja
cmp
dec
and
subl
sbb
fimull
dec
pop
sub
int
cmc
shrl
push
add
repz
adc
pop
popf
push
mov
push
sub
xchg
lcall
jo
std
iret
jmp
fs
outsl
push
fnstenv
fsubl
repnz
in
ret
test
sub
iret
jmp
icebp
xchg
cmp
testb
push
sbb
sub
mov
and
call
push
decl
jmp
sbb
inc
xchg
idivb
push
dec
cmp
aas
jmp
ret
in
js
insl
pop
inc
test
mov
sbb
sbb
cmc
xor
decb
lea
call
jnp
push
add
test
js
sbb
stc
mov
add
add
sbb
mov
insl
mov
cmp
pop
or
imul
xor
xchg
mov
insl
fwait
jge
int3
mov
push
das
dec
pop
mov
pusha
or
push
add
jmp
xchg
xor
sub
loop
mov
xchg
add
dec
inc
in
mov
pop
lods
bound
jp
icebp
jne
push
mov
addr16
xchg
jmp
test
fst
jp
dec
pop
lret
push
push
arpl
or
xchg
and
or
fmull
mov
mov
or
dec
fwait
push
sti
jae
out
push
out
or
add
cmp
rcrb
xchg
iret
cld
adc
add
adc
dec
sti
xchg
fcoml
and
outsb
in
es
pop
cmp
popa
jns
rcl
sti
shll
nop
aam
mov
dec
sbb
or
mov
and
and
loopne
movsl
and
jno
adc
popa
or
push
imul
fadds
loopne
int
cli
scas
movsb
or
jo
sub
fs
or
add
ret
mov
xlat
jecxz
xlat
xor
xchg
jmp
cmp
sahf
cmpsl
cmpsl
lock
xor
inc
loop
loope
lods
lea
sub
push
sbb
loop
xor
mov
out
aas
add
cmp
notb
pop
leave
xchg
loope
lahf
sbb
shrl
push
out
cltd
add
into
pusha
add
sahf
xor
and
loopne
insl
cmp
and
sbb
cmp
aad
and
je
pop
jo
icebp
andl
int3
int
cmp
mov
dec
jmp
gs
cmc
push
dec
push
jg
pop
push
sbb
loop
fbld
push
sub
xor
loope
inc
jge
cltd
int3
js
scas
pop
push
dec
aad
pop
jmp
cmp
push
xchg
lds
into
cld
pop
jecxz
inc
aad
imul
push
xor
pop
push
gs
pop
cli
pop
or
aad
mov
mov
in
sarl
js
pop
inc
add
adc
mov
loopne
adc
mov
lret
mov
cmc
sub
fs
add
xor
aaa
xchg
aad
inc
test
mov
rclb
pop
sub
leave
aam
push
pop
test
xchg
hlt
addl
stos
enter
jne
lock
pop
test
sbb
pop
rorb
lahf
dec
jl
push
ss
mov
dec
cli
cmp
test
leave
mov
mov
jl
movsb
cmp
mov
mov
push
sbb
push
pop
sbb
cmp
inc
xor
mov
xchg
mov
adc
jae
movsl
pushf
xor
pop
cwtl
out
xlat
fdivs
lahf
mov
sbb
jno
imul
push
adc
or
imul
cltd
xor
mov
cwtl
in
xchg
cmp
test
cmp
fcoms
aad
test
jo
stos
push
sub
fs
push
insb
and
cmpsl
icebp
dec
push
enter
repz
push
scas
popa
cmp
jmp
push
pusha
pop
adc
adc
in
mov
jo
stc
fists
daa
out
lret
sub
jp
cli
mov
pop
cli
out
jns
outsb
sub
hlt
in
orl
loop
pop
pop
ror
sbb
insb
xchg
out
std
sbb
adc
add
testb
xchg
adc
dec
inc
push
push
mov
xchg
insb
in
pop
dec
cmp
jecxz
add
mov
or
outsb
movsb
daa
int
xor
jo
in
push
add
pop
pop
stos
ss
cmp
das
je
ror
repz
cmp
xchg
add
inc
sarb
in
or
lea
jb
loope
jnp
lret
lret
push
pusha
pop
cs
adc
pop
or
jae
jbe
sbb
push
push
adc
xor
or
test
inc
lock
cmp
push
mov
pop
lods
lret
cld
leave
and
fisttpll
rol
ja
push
test
add
loop
or
sbb
cwtl
insb
dec
aas
sub
adc
sbb
cmp
ficomps
pop
xchg
es
and
ret
mov
and
rcrb
mov
mov
lods
mov
pop
sub
fisttpl
mov
xchg
cmp
pop
fadd
push
shrl
out
push
movb
aam
mov
imulb
loop
jle
jle
addr16
fisttpll
pop
inc
add
inc
stos
pop
outsl
cmp
repnz
insl
lea
testb
icebp
es
test
adc
rclb
xchg
jmp
test
scas
push
imul
aad
ds
jb
pop
sub
daa
mov
add
or
jmp
es
in
sbb
ja
sbb
pop
mov
jg
pop
aam
push
iret
int3
jecxz
mov
pop
rcl
add
cld
xchg
shrb
push
aas
dec
les
add
xchg
cwtl
push
mov
es
pop
adc
enter
mov
mov
gs
or
cmp
insb
inc
sahf
lds
dec
gs
movsl
mov
call
xor
pusha
sbb
cli
leave
sbb
push
or
pop
cwtl
fadds
mov
fnstsw
mov
and
push
add
push
das
xchg
pop
add
mov
cli
mov
dec
fdivs
pop
jmp
sahf
mov
lret
fstpl
pop
bound
ds
pushf
dec
and
and
xchg
or
jl
push
insb
jecxz
jbe
or
hlt
out
shll
cmp
je
nop
sarl
out
inc
pushf
repnz
js
stos
jb
push
jecxz
rcrb
imul
addl
es
push
int
add
out
hlt
xor
daa
cmp
mov
jne
daa
push
jge
adc
sbb
faddl
iret
icebp
inc
les
cmp
xchg
xchg
lret
push
rorb
pop
inc
ficoml
add
xor
addr16
push
mov
adc
ret
and
imul
stos
subb
xchg
pop
dec
and
lahf
or
inc
call
mov
ss
ljmp
out
push
fdivrl
adc
int
dec
mov
mov
fwait
mov
dec
js
sbb
mov
or
int3
out
aas
rorb
cmpsl
clc
popa
xor
in
jbe
cmp
stos
and
lahf
loope
addr16
lods
testb
or
rclb
in
cmp
mov
mov
adc
pusha
sbb
adc
outsb
xlat
addr16
pop
or
xchg
mov
push
xor
mov
int
pop
xchg
mov
out
xor
out
jae
sub
pop
and
mov
dec
inc
sbb
int
fs
pop
inc
shl
sbb
jb
loop
push
pop
xor
jb
frstor
add
fs
fbld
mov
jecxz
pop
lds
xchg
sub
stos
jge
adc
mov
icebp
add
in
fdivr
icebp
push
daa
push
xlat
dec
or
mov
fwait
adc
or
cmp
es
and
arpl
inc
scas
mov
mov
out
jo
add
cmc
test
sahf
adcl
pop
in
lahf
mov
push
icebp
adc
fcoml
mov
mov
mov
jbe
test
cmp
inc
dec
stc
mov
jle
outsl
inc
out
push
daa
pop
cs
xor
inc
jo
sub
movsl
and
sbb
add
stos
stos
and
data16
pop
mov
or
call
iret
pusha
test
inc
daa
ret
xchg
repnz
fldcw
shl
sbbl
sbb
add
cmp
sbb
lahf
xchg
popa
ret
mov
into
push
popa
imul
in
out
repz
jl
enter
jnp
cmovb
addr16
cmp
jo
mov
leave
and
add
jge
sub
out
ja
mov
imul
and
adcb
mov
push
jge
sub
repnz
rclb
jnp
xchg
lret
mov
pusha
jge
jno
loop
sbb
mov
adc
push
push
push
mov
pop
jle
cmp
mov
jge
push
sahf
cmp
shll
outsl
fmull
shl
dec
jae
inc
imul
dec
inc
scas
cmp
inc
dec
mov
jae
jle
int3
ficomps
fmul
hlt
lahf
orl
sub
andl
or
stos
imul
incb
inc
cmp
ret
pop
or
fldcw
mov
fdiv
ds
pop
leave
sub
mov
mov
dec
in
out
and
xchg
sti
xchg
hlt
aam
adc
outsb
in
cmp
movsl
mov
push
je
je
dec
lahf
mov
jp
stos
ljmp
bound
sub
lret
stc
jp
push
cs
cli
or
sbb
push
arpl
xlat
inc
popa
xchg
inc
les
adc
or
or
scas
cmp
shll
bound
xchg
imul
sbb
and
cmp
std
insl
imul
std
mov
cmpb
mov
aad
imul
fldt
ljmp
shl
gs
mov
lret
icebp
jmp
push
mov
scas
bound
addr16
mov
hlt
mov
push
adc
cmc
push
js
sbb
insb
and
stos
ret
mov
push
pop
testb
xlat
popf
or
stos
jne
sub
xor
sub
popf
call
jl
push
sti
sbb
inc
adc
ljmp
lods
xor
xor
xlat
ds
orl
and
and
sbb
sbb
xor
mov
jmp
mov
and
lret
jmp
push
and
cmp
sar
mov
into
dec
popf
data16
mov
loopne
jns
fimuls
pop
rcll
inc
pop
inc
adc
test
mov
cmp
add
mov
push
jp
mov
push
dec
stc
xlat
or
cmp
mov
mov
mov
test
jmp
fcmovnbe
lret
or
push
dec
push
push
xor
sarl
loopne
sub
test
mov
sbb
fs
aas
loope
sub
jmp
mov
jmp
dec
mov
cli
mov
xchg
pushf
outsb
pop
or
push
iret
nop
lcall
mov
xor
mov
cmp
xor
mov
dec
insl
test
jg
sahf
push
fstp
icebp
adc
sub
cld
sbb
lret
ret
iret
pop
test
outsb
mov
inc
movsl
push
mov
sub
lods
jle
iret
and
mov
add
mov
int3
push
pop
in
cmp
inc
fisubrl
xchg
dec
xchg
test
enter
fwait
rolb
fnsave
mov
jo
push
lret
cmpsl
pop
paddb
loop
gs
xlat
inc
push
and
dec
jmp
ret
fsubs
ret
std
in
push
cmp
cmp
xor
imull
int3
and
inc
cmc
sti
popa
and
mov
lock
jo
jmp
xlat
ja
push
je
addr16
lds
mov
mov
xchg
inc
or
xorl
cmpsb
mov
in
popf
xlat
in
mulb
or
sbb
movl
mov
aad
cmp
shrl
movsl
xlat
xor
repnz
inc
jae
mov
and
mov
and
test
and
pop
lods
and
push
push
cmc
mov
mov
pop
lret
xchg
lret
jno
aaa
xchg
pusha
or
mov
mov
jne
pop
jno
mov
jo
lret
and
sbb
xor
movsb
rol
loope
test
xor
cmpsb
jnp
inc
xor
arpl
push
add
pop
scas
mov
xor
popf
mov
and
push
jbe
in
mov
mov
or
dec
dec
xorb
stc
mov
jno
sub
add
fsubrl
rolb
sub
lret
rcl
das
mov
out
xchg
add
push
sbb
test
sbb
les
arpl
hlt
xor
add
mov
loop
enter
pop
ljmp
in
std
cmp
cmpsb
loope
mov
and
inc
cmp
outsb
mov
add
lcall
push
mov
push
loop
das
sub
mov
dec
fwait
cld
and
and
mov
rdtsc
shll
push
lods
pop
or
sub
add
popf
or
mov
insb
imul
inc
sbb
inc
ret
xorb
xchg
dec
bound
mov
aaa
or
mov
data16
jbe
inc
xchg
aad
push
lret
ja
test
orb
mov
push
jae
sub
clc
push
sub
out
shlb
pop
xchg
or
sbb
sub
sahf
add
dec
dec
mov
pushl
inc
or
jb
push
or
jl
andl
insl
leave
lock
gs
cmpsb
adc
mov
mov
je
leave
jle
enter
inc
jbe
or
cmc
aam
adc
cmp
mov
cmp
add
lods
inc
or
out
jg
leave
in
sahf
in
rsm
pop
mov
mov
ljmp
rcrl
rcll
sub
inc
mov
add
inc
mov
xor
lret
xor
in
push
movsb
mov
mov
mov
mov
lods
mov
mov
sub
dec
and
pop
mov
movsl
jecxz
pop
roll
mov
xor
pop
mov
mov
js
and
int
pop
push
movsl
out
xlat
imul
mov
notb
lds
mov
inc
pop
fucomi
xchg
nop
lds
xchg
sub
jecxz
mov
std
nop
ret
sub
xchg
and
test
push
fnstenv
int3
dec
cwtl
xchg
fisubrl
fsubrs
push
sti
pop
pusha
filds
sahf
add
sbb
fimuls
dec
jnp
mov
and
cmp
test
pop
sbb
mov
mov
push
scas
repz
adc
mov
cmpsl
and
mov
int
data16
jg
adc
loopne
fisubrs
push
lds
lds
or
push
popf
mov
fildl
lea
aas
lds
shr
jle
pop
sub
xor
cmc
adc
lcall
adc
sbb
xlat
fidivs
sub
pusha
sub
clc
loopne
add
adc
int
lea
mov
sub
in
cmpsb
add
jmp
adc
cmp
gs
sbb
jge
xchg
jno
sub
add
mov
psrlw
dec
xchg
int
add
or
push
push
dec
cmp
pop
ret
mov
les
mov
repnz
loopne
imul
mov
dec
xchg
in
and
int3
mov
lods
or
inc
pop
or
jno
stc
popf
xor
inc
cmp
mov
xor
pop
push
adc
xlat
rcrl
mov
sbb
add
aaa
shll
arpl
cmp
xchg
jl
sbb
imul
cli
xchg
adc
push
xor
sbb
xor
iret
negl
in
scas
push
loopne
orl
movsl
mov
dec
lret
adc
jbe
and
pushf
popf
fs
fldt
popf
cmp
jno
dec
aas
ds
fucomip
gs
idivl
mov
mov
pop
push
push
out
fidivs
in
push
jne
inc
pop
xchg
xor
sub
std
or
pop
fstps
pop
jge
xchg
sub
repnz
xor
push
sub
mov
mov
div
jge
pop
jae
and
popf
lods
cmc
pop
call
sti
pop
dec
rolb
xlat
add
xor
fimuls
aad
ja
or
dec
add
cmp
push
push
adc
sbb
mov
xchg
insb
xchg
dec
inc
jne
pop
cmp
mov
xor
cmp
xchg
jp
notb
mov
movsb
xchg
sbb
adc
inc
aam
in
add
imul
sti
int3
int
pop
add
cmc
xchg
in
movb
dec
or
push
inc
mov
xchg
inc
inc
add
jecxz
clc
or
jl
xor
mov
addr16
bound
push
push
or
xlat
fwait
js
sbb
adc
aam
sub
mov
dec
testl
mov
fsubrl
mov
idivl
aad
stos
inc
stos
aam
cli
test
push
and
sahf
mov
mov
or
inc
mov
stos
fmul
sbb
or
orl
xchg
xor
pop
mov
pop
cmc
out
add
mov
mov
xchg
sbb
repnz
pushf
scas
xchg
lret
movsb
pop
les
cs
into
sub
adcb
fwait
jo
cmp
mov
rcrb
jnp
dec
test
push
xchg
pop
sbb
push
mov
mov
sbbb
out
cwtl
pop
in
ljmp
inc
out
push
jmp
ret
inc
dec
call
jns
push
lods
enter
xor
movsb
movsb
dec
lods
add
out
jbe
movsl
xchg
jo
and
push
aaa
ror
out
sub
dec
mov
xor
push
adc
repnz
dec
fwait
mov
fwait
and
dec
les
mov
fldenv
or
sbb
jb
rcr
mov
into
ljmp
stos
roll
bound
xlat
inc
sbb
or
sbb
push
loopne
loop
dec
and
mov
orl
pusha
dec
dec
and
cwtl
mov
push
rcrb
xchg
stc
filds
in
enter
rcll
fwait
mov
xor
mov
adc
add
jno
dec
push
cmpsb
push
xchg
mov
cltd
mov
add
lea
aad
imul
jno
xchg
orl
mov
jne
jno
and
js
loop
les
pop
fldlg2
sub
mov
push
subb
or
movsl
inc
mov
xor
test
push
icebp
dec
dec
into
ja
mov
popf
iret
stos
test
icebp
mov
aad
sbb
push
push
jo
push
popa
mov
cmp
sbb
in
adc
or
pop
mov
ret
xchg
push
push
scas
fidivrs
push
roll
insb
emms
jl
pop
mov
daa
jae
cmp
dec
repnz
sbb
sub
mov
mov
cld
push
sbb
lock
xor
dec
dec
mov
shlb
movsl
les
loope
mov
jmp
call
insb
pop
stos
nop
push
mov
dec
mov
lret
mov
ret
out
sub
iret
cmp
cli
jmp
and
int
push
pusha
mov
loop
sbb
fidivrs
or
fidivrl
inc
outsb
add
jo
add
jns,pt
xchg
inc
mov
push
pop
out
sub
push
jl
mov
push
pop
or
mov
rorb
rclb
sbb
jno
lock
imull
pop
push
xorl
pop
adc
adcl
and
ds
call
xchg
adc
mov
or
test
nop
je
imul
push
stos
gs
clc
jbe
test
ret
jb
fstpl
inc
fmull
jb
jb
pop
sub
shrb
inc
xor
or
in
push
js
and
arpl
repz
jne
sub
fsubrp
dec
outsb
xchg
daa
popf
and
or
mov
out
icebp
orb
add
jmp
mov
pop
aad
lcall
sub
mov
cli
lcall
les
push
cmp
clc
pushf
cmp
dec
pop
jp
inc
push
xor
out
test
xor
push
dec
stos
int3
cli
jmp
push
jae
mov
dec
mov
rclb
mov
ja
adc
mov
rclb
vphaddubd
and
scas
inc
or
nop
cmp
fs
cmp
scas
cli
mov
and
movsb
xor
repz
clc
jmp
and
mov
jg
jne
cmpsb
enter
sbb
cmovge
insl
jmp
push
lcall
jnp
lods
xchg
test
cmp
clc
cs
jbe
xor
adc
test
cmp
fadd
shl
inc
in
jns
jns
sub
push
inc
or
adc
ret
xchg
jl
lahf
lds
shll
mov
add
sbb
aas
cmp
in
adc
adc
mov
add
loope
rcr
cltd
xor
mov
xchg
ret
mov
push
call
fdivrl
rcrl
andl
das
mov
aaa
pop
lret
shlb
iret
lret
out
sub
stos
scas
mov
dec
add
mov
data16
es
xor
sbb
ss
idivl
mov
cmpsl
adc
xchg
inc
scas
xor
pop
and
dec
sbb
sub
in
add
insl
outsb
pop
cmp
pop
xchg
sbb
outsb
sub
shl
xchg
dec
xor
inc
int
and
mov
hlt
imull
push
push
loope
andb
scas
ss
jmp
rcll
popa
push
shlb
testb
das
push
scas
adc
movsb
jp
outsb
das
or
mov
sbb
xlat
mov
cmp
adc
in
and
test
xchg
mov
sub
add
das
arpl
add
jg
mov
cli
sub
lret
jmp
insb
into
sub
xchg
bound
adc
and
imul
cld
das
push
xchg
sbb
pop
pop
add
jnp
xor
int3
aam
mov
mov
stos
push
pop
mov
pop
shrl
jmp
in
loopne
pop
outsb
xor
fidivs
mov
andl
outsl
inc
or
scas
ds
xchg
xchg
cmc
xchg
jl
adc
sub
mov
or
sub
scas
lods
pushl
inc
mov
jb
sub
pop
dec
and
mov
daa
add
popa
fs
ret
push
sub
push
jp
and
xor
sbb
sar
cwtl
iret
into
adc
rolb
fcmovnb
add
lea
test
cmc
mov
mov
add
pop
inc
int
out
fidivrl
ret
sub
fisttps
mov
ja
pop
fmull
push
push
daa
jbe
push
popa
mov
jbe
rcll
ljmp
scas
pop
in
test
pop
pop
add
rolb
xor
test
test
fldt
sub
out
push
cwtl
mov
sar
das
mov
stos
dec
nop
mov
outsl
jne
xor
pushf
jnp
mov
add
loopne
rol
pop
roll
mov
jmp
jo
cld
addl
sarl
dec
test
pop
rorb
js
mov
inc
add
test
subb
daa
cli
adc
pop
leave
sbb
dec
adcl
push
stos
push
fcompl
dec
dec
add
sbb
test
and
push
or
pop
mov
mov
jne
xor
push
insl
sti
sbb
in
jns
imul
cmc
mov
imull
cli
xchg
sbb
divb
inc
cmp
xchg
je
mov
lahf
cltd
andb
lods
into
jo
lret
movd
lock
addr16
jg
pop
divl
testl
enter
xchg
push
push
ret
or
jae
fcompl
adc
sarl
outsl
mov
push
inc
mov
mov
push
jp
push
in
push
or
push
sub
jb
inc
pop
jno,pt
fcompl
mov
add
in
adc
push
mov
or
or
or
mov
es
jg
jmp
sbb
push
push
add
and
xorb
mov
jl
sbb
xchg
enter
jno
loopne
mov
xchg
fwait
cltd
mov
sbb
pop
ss
add
adc
std
push
xor
cmp
les
ret
lods
jo
pop
scas
scas
xchg
dec
mov
shll
ficoms
push
mov
lods
xor
sub
cwtl
mov
lods
mov
jo
fwait
inc
mov
cwtl
xchg
sahf
pop
nop
mov
mov
push
je
data16
leave
sbb
cwtl
cmp
jne
push
outsl
xchg
mov
cmp
fnstsw
inc
js
dec
push
leave
test
mov
jecxz
pop
mov
stos
imul
movsl
in
dec
sbb
dec
repz
jle
das
fs
sub
out
gs
fisttpl
push
loop
sarl
mov
adc
mov
ds
jae
push
idivb
pop
mov
movb
dec
test
subl
pusha
or
bound
addl
push
imul
inc
jg
push
jae
hlt
jbe
loop
dec
hlt
stos
jo
mov
jge
leave
jge
cmp
in
lahf
cmp
lea
out
mov
mov
cmc
mov
jmp
inc
shlb
movsb
in
dec
cmp
cmpsb
ja
adc
push
mov
sbb
hlt
mov
lds
loop
mov
push
ret
pop
jp
test
cmp
std
and
mov
cmp
adcb
sbb
movsb
pop
adc
loopne
cmpsl
lock
mov
lret
adc
rcrb
jns
loop
xor
jecxz
aas
mov
xchg
ret
daa
cmp
inc
jp
int3
les
clc
jnp
outsl
push
lods
negl
dec
cltd
dec
lock
hlt
cmp
movups
ljmp
sub
pop
inc
in
dec
mov
pop
mov
outsl
out
dec
and
mov
aam
cmp
pushf
push
jge
pop
cmpsb
mov
jns
xchg
in
add
int
sub
or
dec
sub
repnz
sub
sbb
pop
je
ret
dec
loopne
cwtl
pop
insb
pop
rep
sbb
mov
add
or
adc
imul
cli
dec
arpl
adc
xchg
pop
jne
or
or
pop
sbb
xor
mov
add
mov
mov
lds
or
mov
inc
into
add
stos
dec
das
test
xor
pop
std
lret
pop
into
outsb
mov
inc
adc
dec
cltd
pop
pop
lods
mov
insl
outsl
rcrl
jmp
imul
lods
loopne,pt
scas
sub
leave
fbstp
leave
adc
or
and
cli
pushf
jo
call
movsb
add
test
mov
and
cmc
mov
or
js
scas
mov
inc
out
shrb
movsb
loope
lods
or
push
fsub
add
lret
xchg
jecxz
jae
pop
cmp
lret
dec
mov
sub
xlat
ljmp
testb
mov
mov
outsl
movsb
cwtl
jmp
cmp
pushf
dec
adc
movsb
test
xchg
out
push
inc
adc
js
sti
out
jmp
inc
mov
lock
mov
and
mov
jp
ds
fadds
mov
cmp
xchg
rep
mov
ret
xlat
mov
or
dec
cmp
push
lahf
adc
movsb
mov
testb
orb
ja
sub
fisubl
cmp
jle
fwait
xorl
lea
push
jno
movsl
stos
push
mov
and
iret
pop
ret
mov
adc
test
mov
xor
pushf
into
jmp
push
ljmp
jnp
lcall
testl
inc
jmp
addr16
cs
scas
pop
mov
jne
dec
and
pop
adc
fisubs
pop
fdiv
arpl
mov
out
lret
mov
add
push
pop
xchg
mov
clc
dec
push
int
dec
addr16
insb
shr
outsl
mov
inc
jno
ffree
scas
int3
movb
sub
cmp
sti
out
add
dec
pop
insb
inc
mov
jns
xor
xor
dec
stos
jbe
xchg
sbb
dec
ljmp
jle
push
xchg
jge
add
sub
test
push
xchg
jbe
pop
popf
fstpt
loope
and
mov
icebp
aas
push
push
mov
stc
sbb
jns
popa
pop
mov
stos
cld
inc
inc
popa
inc
out
adc
and
stos
push
push
mov
pop
mov
add
clc
scas
aaa
lret
sub
push
sbb
jbe
xchg
mov
jle
outsl
fcomi
out
add
jmp
jl
shll
enter
in
cmp
mov
sub
mov
lods
pop
rorl
int
nop
stos
int3
pop
stos
cmp
cmp
sbb
movsb
mov
mov
fs
lahf
cmpsb
jne
mov
xor
sub
xchg
dec
sub
sub
out
call
std
lods
stc
or
ret
in
repz
mov
lahf
imul
stc
arpl
jnp
loop
or
gs
sub
sahf
inc
cmp
inc
out
dec
mov
sub
in
pop
and
call
mov
push
and
add
mov
icebp
scas
sbb
lret
rol
lret
imul
mov
scas
mov
sub
dec
or
aad
mov
mov
xchg
dec
pop
mov
sub
mov
mov
adc
sbb
enter
movsl
xchg
jno
cmpsl
push
data16
sbb
inc
mov
jnp,pn
adc
fwait
add
cmp
jge
pop
adc
aad
fcmovb
pop
mov
cli
sti
rcrb
stc
in
ja
pop
test
fdivrs
inc
or
sub
bound
inc
add
out
push
or
mov
scas
cmp
xor
jb
jns
adc
xor
movsl
sarl
sbb
push
aam
xchg
or
in
sub
lock
xor
push
xlat
gs
shlb
out
adc
out
clc
out
aad
adc
popf
add
jo
in
ret
mov
sub
test
das
sahf
mov
add
test
jnp
jle
sarl
mov
rolb
cmp
xor
test
pusha
fistpll
aad
push
jae
adc
out
addr16
repz
mov
add
mov
mov
popf
icebp
popw
jno
ret
and
je
mov
mov
mov
cmpsl
mov
lret
or
pushf
sub
mov
shl
jg
mov
xchg
pop
leave
shll
in
lret
pop
pop
sbb
pop
dec
mov
imulb
push
xor
pop
in
or
cmp
pop
xor
mov
test
cld
adc
hlt
sub
outsb
int
out
icebp
lds
lds
xchg
adc
fldenv
mov
test
sbb
iret
or
out
add
sbb
add
and
nop
sub
pop
pop
mov
mov
push
ljmp
xor
dec
divl
ret
jmp
adc
lock
jmp
xchg
jmp
xlat
push
xchg
roll
adc
ffreep
in
stc
lcall
push
lahf
pop
adc
movsb
xchg
fbld
push
ret
rolb
jge
lahf
ret
jb
adc
xor
mull
repz
lds
ljmp
outsl
sti
pushf
in
cli
add
cmpsb
mov
sbb
pop
or
roll
shl
fstps
orb
mov
xchg
in
icebp
mov
add
jae
pop
cmc
insb
jo
and
mov
jb
lahf
aam
mov
push
data16
xchg
daa
adc
test
or
xor
fldt
pop
js
push
test
jae
mov
jbe
dec
popf
inc
xchg
pop
cmp
cmp
loop
cmc
aam
ret
pop
test
fstps
ds
shrb
cmc
push
sub
mov
ljmp
popa
or
xchg
fdiv
mov
and
jno
cmpsl
jecxz
inc
inc
mov
pop
jae,pt
out
mov
or
jl
xchg
imul
cmp
push
mov
adc
pop
jge
fmuls
int3
jecxz
cmp
rcrl
outsl
rcrb
aad
mov
repz
repnz
cwtl
push
xchg
pop
clc
subl
sub
mov
mov
xor
mov
sub
push
sub
rclb
jb
ljmp
lods
ljmp
icebp
push
mov
lea
in
xchg
aas
outsl
inc
sub
adc
out
adc
xchg
sbb
mov
insb
sub
sbb
and
push
loope
call
pop
ds
mov
jno
sbb
xchg
mov
and
ja
mov
xchg
lock
lods
sbb
mov
jnp
aad
or
add
test
inc
pusha
js
cli
mov
filds
ljmp
sbb
sub
xor
push
pop
or
test
in
fucomip
test
outsb
inc
pop
ja
in
test
imul
mov
jecxz
sub
loopne
and
gs
push
or
pop
mov
dec
fistl
inc
mov
daa
ljmp
call
in
mov
sbb
fistpl
inc
xor
cld
cs
in
fwait
dec
loop
mov
scas
mul
jge
js
int
andb
sbb
lods
push
inc
mov
scas
inc
push
cmp
mov
stc
leave
dec
negb
add
scas
inc
jae
orl
xchg
pushf
sti
mov
out
cli
ficomps
bound
jbe
push
mov
mov
adc
aad
jge
sub
subl
mull
dec
push
rorl
xchg
mov
es
add
adc
mov
cmp
jo
sbb
adc
mov
out
inc
mov
inc
cmp
clc
cmp
push
xchg
repz
mov
iret
inc
adc
aam
stc
sub
push
mov
sahf
adc
fdivs
pop
xchg
rorb
and
outsb
push
mov
sbb
and
xchg
call
jecxz
fistpl
ret
or
cltd
lret
pop
mov
repnz
or
cmpsb
mov
imul
mov
mov
adc
mov
mov
cmp
inc
sub
jo
fsubrl
rcrb
push
dec
sbb
inc
cs
movsl
xor
out
jb
out
fisubrl
cs
lds
cmp
ljmp
jne
and
or
lods
out
icebp
and
ljmp
mov
movb
inc
movsb
jb
pop
daa
in
sbb
cmc
addr16
inc
cmp
lods
add
shlb
fsub
sbb
and
rclb
or
