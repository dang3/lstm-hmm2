push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
push
mov
testl
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
pop
ret
push
mov
push
andl
push
lea
push
push
call
add
cmpl
je
push
pushl
call
pop
pop
test
jne
push
mov
push
call
push
call
push
call
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
push
call
push
call
push
call
mov
pop
jmp
mov
leave
ret
mov
mov
ret
mov
push
mov
xor
cmp
jne
mov
jmp
mov
push
mov
mov
test
je
mov
inc
inc
decl
jne
cmpl
pop
jne
dec
mov
movb
pop
ret
push
mov
sub
mov
mov
mov
sub
mov
je
mov
test
je
push
mov
add
test
je
push
push
mov
sub
mov
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
addl
decl
jne
mov
test
jne
pop
pop
pop
xor
inc
leave
ret
mov
push
mov
push
mov
xor
mov
test
movl
je
push
call
pushl
call
mov
xor
inc
pop
pop
ret
push
mov
sub
push
push
mov
xor
cmp
je
mov
cmp
je
cmp
je
cmp
je
add
push
lea
push
push
call
mov
add
add
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
sub
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
mov
mov
lea
ror
mov
lea
add
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
cmp
jb
mov
mov
test
je
mov
sub
mov
mov
inc
dec
jne
pushl
mov
pushl
pushl
pushl
pushl
call
mov
mov
mov
call
mov
add
push
pushl
pushl
pushl
call
add
pop
jmp
xor
pop
pop
leave
ret
mov
push
xor
cmp
je
cmp
push
mov
je
push
call
jmp
push
push
push
pushl
call
push
push
push
pushl
call
push
push
push
pushl
call
pop
pop
ret
push
call
pop
ret
push
mov
mov
mov
mov
mov
mov
cmp
jb
push
push
mov
mov
mov
lea
xor
test
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
mov
mov
lea
ror
lea
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
mov
inc
cmp
jb
pop
pop
pop
ret
jmp
push
mov
sub
mov
push
push
push
push
mov
movl
call
andl
movl
mov
movl
mov
mov
movl
mov
mov
mov
mov
mov
imul
xor
add
incl
mov
push
push
mov
call
mov
mov
mov
mov
mov
xor
mov
div
mov
mov
mov
mov
sub
not
add
xor
mov
mov
incl
add
cmpl
jb
cmpl
je
mov
mov
jmp
push
call
mov
mov
mov
xor
push
push
push
push
call
movl
mov
push
shl
push
add
incl
push
push
call
mov
mov
test
je
push
call
mov
push
push
call
mov
call
add
cmpl
je
cmpl
jne
lea
push
push
pop
add
xor
div
push
pushl
push
call
mov
push
push
push
push
call
lea
mov
lea
add
lea
add
mov
mov
mov
mov
and
call
mov
mov
mov
call
mov
mov
push
push
mov
xor
push
push
mov
mov
call
mov
lea
push
push
push
lea
push
pushl
movb
pushl
movb
push
call
push
push
push
call
mov
call
mov
call
test
je
pushl
mov
pushl
pushl
pushl
call
cmpl
mov
jne
push
call
test
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
push
lea
sub
mov
push
push
push
push
push
push
mov
call
push
push
call
test
je
push
xor
push
call
push
mov
call
mov
cmp
je
lea
push
push
call
mov
mov
mov
mov
push
push
mov
call
cmp
jne
movl
push
push
call
push
push
mov
call
xor
cmp
setl
mov
mov
cmp
mov
je
mov
cltd
sub
sar
mov
push
push
call
mov
neg
sbb
and
add
push
mov
call
push
mov
call
movzwl
push
call
pop
pop
push
push
push
call
push
push
push
call
push
push
lea
push
call
lea
push
call
mov
mov
mov
movzwl
xor
jmp
cmp
jne
cmpw
je
inc
inc
mov
cmp
jne
jmp
xor
inc
lea
push
movl
movl
call
mov
push
pushl
call
push
push
push
push
push
pushl
mov
call
cmp
mov
mov
jne
xor
push
pop
lea
rep
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
movl
movl
movl
mov
movl
movl
call
test
je
mov
push
mov
imul
cltd
pop
idiv
push
push
mov
mov
add
mov
lea
mov
mov
shl
mov
lea
push
call
mov
mov
sub
sub
mov
cmp
mov
mov
jle
mov
push
pushl
neg
push
push
pushl
sbb
push
push
push
and
add
push
push
push
push
call
cmp
mov
je
lea
push
call
push
push
push
pushl
call
test
jne
call
xor
jmp
call
pushl
call
pushl
pushl
call
pushl
call
push
pushl
call
mov
xor
cmp
sete
push
call
cmp
je
call
cmpl
je
cmpl
je
push
push
push
pushl
call
xor
inc
pop
pop
pop
add
leave
ret
mov
push
mov
sub
mov
push
mov
push
push
lea
mov
call
lea
xor
call
test
je
test
je
cmpb
je
mov
push
call
mov
push
mov
call
mov
lea
push
call
mov
test
je
push
push
push
push
call
add
push
call
test
je
push
push
push
call
mov
test
jge
push
push
push
call
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
call
mov
mov
pop
pop
pop
call
leave
ret
push
mov
sub
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
jne
inc
jmp
andl
push
push
lea
lea
cmpl
mov
je
mov
mov
jmp
mov
mov
add
xor
nop
movb
mov
mov
inc
cmp
jb
mov
test
je
lea
movsbw
mov
add
inc
mov
test
jne
lea
push
call
mov
test
je
mov
mov
add
andl
cmpl
mov
je
mov
mov
testl
je
push
call
mov
and
push
pushl
call
push
jmp
push
call
push
call
mov
add
add
push
pushl
call
push
mov
call
cmpl
je
incl
mov
mov
lea
cmpl
jne
mov
incl
mov
imul
add
mov
add
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
test
je
andl
mov
sub
add
mov
mov
mov
lea
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
cmpl
mov
je
or
sub
mov
mov
sub
add
mov
mov
mov
lea
push
push
push
call
mov
mov
mov
sub
add
mov
movzwl
add
lea
movzwl
lea
mov
mov
mov
andl
xor
cmp
jae
mov
mov
mov
mov
mov
mov
addl
add
push
pop
rep
mov
add
add
incl
mov
movzwl
cmp
jb
mov
mov
add
pop
mov
xor
pop
inc
pop
leave
ret
mov
push
mov
sub
mov
push
push
push
mov
mov
mov
push
mov
lea
push
pushl
pushl
call
lea
xor
test
je
push
push
push
call
add
test
je
push
add
push
call
inc
pop
add
cmp
pop
mov
jl
mov
mov
pop
pop
mov
pop
call
leave
ret
push
mov
push
push
mov
imul
push
mov
cmp
jb
mov
push
call
mov
add
imul
push
xor
pop
div
mov
mov
mov
mov
sub
mov
test
je
mov
sub
push
mov
call
xor
divl
mov
add
cmp
jae
mov
mov
imul
xor
divl
xor
mov
sub
imul
div
mov
cmp
jae
mov
sub
push
pushl
pushl
call
add
add
add
add
cmpl
jne
pop
pop
pop
leave
ret
mov
mov
mov
mov
rol
imul
add
mov
mov
mov
ret
mov
push
mov
push
mov
test
je
push
mov
test
je
andl
push
call
push
call
push
call
test
je
push
call
push
call
mov
push
call
push
call
pop
pop
pop
ret
add
add
inc
adc
pop
arpl
and
jecxz
mov
mov
scas
add
ret
jmp
loop
out
daa
jg
add
andl
leave
add
fnstenv
das
pop
mov
stos
sarb
in
iret
test
les
xor
dec
sbb
push
subl
adcl
imul
adc
adc
push
adc
push
or
add
insl
leave
xlat
das
xchg
fiaddl
in
es
xor
daa
jg
out
dec
stos
test
xchg
xlat
and
sti
gs
push
push
mov
cmpsb
and
lcall
mov
push
xlat
scas
mov
or
pop
rcrb
imul
add
stos
test
shrb
cltd
lret
lret
int3
sub
fistpll
movsb
add
push
pushf
cmp
inc
push
fs
int3
out
clc
sahf
popf
rcrl
jae
pop
pop
daa
pop
xlat
jl
pop
fists
jb
dec
sbb
mov
xchg
repnz
push
orl
arpl
and
aad
jge
into
inc
or
les
xchg
loope
imul
mov
mov
adc
and
push
fcompl
cmp
aaa
subl
add
out
pop
mov
mov
dec
pushf
cmpsb
movsl
loopne
push
mov
pop
sub
js
jmp
stos
xorb
pusha
pop
pop
test
mov
ss
mov
mov
adc
and
dec
js
mov
jnp
mov
adc
scas
cmp
fs
lret
cld
lods
pop
push
mov
fdivrl
out
mov
rolb
inc
aas
bound
cmpsl
mov
cs
stos
xlat
aad
sbb
push
imul
mov
sub
jl
push
int3
mov
jo
ret
xor
and
mov
popa
out
fnstcw
or
enter
int3
cs
add
pushl
bound
push
js
bound
scas
cltd
and
cmpsl
mov
andl
add
mov
aad
inc
pop
sub
popa
mov
sub
lcall
jno
pop
lahf
inc
into
movsb
push
jne
xor
sar
xchg
or
dec
mov
jge
or
pop
xchg
lock
aaa
pop
cmp
lods
lret
popa
pop
aaa
cld
iret
push
imul
scas
jns
jg
push
popf
aaa
dec
setbe
xchg
xchg
lcall
daa
rcrb
adc
and
jle
subb
or
add
mov
test
fsub
sbb
test
pushaw
aaa
cmp
push
sub
jmp
and
or
mov
insl
pop
mov
inc
fsubrl
inc
cmp
out
xchg
dec
mov
add
sbb
add
push
insl
mov
jg
ficoml
test
adc
pop
inc
ljmp
push
cmp
xor
or
or
mov
add
add
jb
mov
cs
or
xorl
lret
cmp
jb
ficoms
inc
shll
int
fwait
mov
mov
mov
xchg
dec
dec
fldt
mov
ss
test
push
mov
call
cmpsb
or
repz
lea
jns
lret
pop
adc
jg
mov
jl
or
lcall
cs
mov
xchg
lret
lea
push
jg
xor
scas
push
jge
fsubr
les
pusha
dec
hlt
pop
sbb
outsb
sub
jg
push
jl
mov
push
xlat
lock
dec
add
adcl
stos
mov
loopne
ret
or
jmp
mov
jge
mov
dec
in
lea
or
mov
sub
xchg
push
fwait
mov
aad
mov
stos
insl
xorb
cwtl
hlt
adc
iret
test
int3
sbb
jecxz
mov
add
fnstcw
mov
adc
fs
xchg
dec
pop
lock
call
cmp
adc
mov
pop
sbb
testb
mov
in
sub
xchg
repnz
and
or
cmp
dec
mov
hlt
xchg
sub
es
cwtl
or
and
cmpsb
fisubl
repz
mov
adc
out
sbb
sbb
inc
mov
pushf
int3
jnp
into
mov
dec
mov
in
fs
hlt
xchg
imul
xchg
jp
xorl
xchg
sbb
fmull
movsb
out
daa
popf
lcall
cmpsl
je
push
rorl
cmpl
push
sti
aam
and
das
sub
jecxz
mov
or
xchg
in
aas
lret
xchg
lods
rclb
fs
out
push
imul
leave
xor
xlat
out
inc
xor
ljmp
nop
bnd
mov
clc
mov
pushf
push
mov
jg
aad
aaa
jmpw
loopne
cwtl
cltd
test
xor
mov
cmpsb
jne
xchg
loop
dec
xor
mov
pushf
push
push
cmpsl
out
mov
xchg
xor
add
jbe
jecxz
mov
mov
sub
fisttpll
insl
sbb
add
cmpb
insb
cmp
orb
pop
fldcw
mov
lret
ljmp
mov
aas
cwtl
ret
mov
or
pop
xchg
aas
mov
jecxz
lods
movsl
sub
pusha
push
sub
js
xchg
adc
inc
js
xchg
test
sbb
or
adc
mov
pop
addr16
pop
test
sbb
clc
inc
xchg
push
adc
sti
test
mov
into
add
adc
mov
sub
sbb
adc
sbb
cmp
test
aad
push
cmp
cld
sub
pusha
adc
dec
adc
imul
popf
inc
aam
in
ljmp
cmpsl
fcmovnu
and
leave
jbe
sti
rcr
repnz
aas
sub
jp
inc
test
sti
or
pop
adc
or
push
into
mov
cmp
inc
sbb
stos
lods
imul
pxor
cmpsb
dec
stos
xchg
movups
pushf
popf
xchg
aam
push
inc
pop
cmpsb
adc
pop
test
cmp
jo
stos
jne
mov
rcl
nop
xchg
daa
scas
adc
jns
test
or
push
mov
inc
xor
pop
add
mov
out
xchg
xchg
stos
dec
mov
mov
mov
jns
cmp
dec
dec
sbb
loop
jo
cmpsb
add
sub
add
add
sarl
frstor
add
stc
mov
xor
push
inc
stos
ss
dec
cmc
sbb
andb
in
mov
in
inc
pop
int3
push
pop
sub
push
ror
iret
mov
out
into
std
mov
scas
jnp
mov
lahf
scas
push
xor
loopne
or
inc
jne
repnz
adc
in
mov
cmp
xchg
mov
pop
mov
xor
out
xchg
add
popf
scas
jge
cltd
dec
push
sub
add
inc
sar
jge
mov
lret
xlat
sbb
aaa
jecxz
loopne
mov
leave
add
leave
loop
or
dec
dec
inc
ljmp
mov
and
xchg
hlt
mov
int
xor
nop
cmp
sub
scas
dec
pop
scas
lea
pop
xchg
mov
push
fwait
sbb
xor
dec
fcom
popf
fiadds
xchg
lahf
lret
add
test
pushf
sbb
pushl
push
xlat
inc
mov
cmp
repz
cmpsl
xor
mov
xor
mov
ret
pop
push
sub
cld
push
sbb
mov
jbe
pop
rorb
and
pusha
dec
je
push
pop
jno
mov
test
mov
dec
leave
fsubs
test
push
mov
outsb
or
jo
ficoml
enter
fidivrl
add
add
gs
push
and
loope
icebp
daa
into
jge
call
inc
test
out
mov
push
xor
sub
mov
xor
xor
sbb
push
sbb
or
icebp
and
xchg
std
xlat
xchg
repnz
enter
adc
mov
repz
fstpt
jno
daa
cmpsl
pop
pop
mov
push
jbe
lods
pop
pop
dec
add
pop
mov
enter
cltd
xor
std
jmp
cmp
cltd
and
jne
sbb
dec
sub
enter
pop
jp
adc
xchg
dec
jno
dec
and
icebp
jne
std
scas
cmp
jl
push
insl
shr
dec
out
out
pop
testl
cwtl
ret
icebp
xchg
add
mov
imul
in
and
cmp
cmp
vmovupd
xchg
add
test
ja
add
popf
mov
cmp
roll
mov
jmp
and
int3
in
out
cmc
xchg
pop
and
mov
lods
loope
mov
and
jl
adc
pop
inc
dec
xor
inc
enter
adc
inc
and
lret
fisttpll
pop
jbe
xor
int3
cli
pop
test
fmulp
fwait
mov
cmp
inc
sub
push
in
push
xchg
das
adc
inc
test
add
out
push
jecxz
in
out
cmp
cmpsb
push
mov
inc
std
fldl
xchg
push
pop
pop
cli
test
pop
and
cs
push
in
imul
dec
int
and
jp
pop
adc
xor
fldenv
xchg
adc
dec
mov
xchg
mov
inc
mov
push
fcompl
mov
mov
test
xor
xchg
pop
mov
enter
adc
maskmovq
es
lret
sub
add
add
push
inc
cmp
je
xor
mov
add
add
pop
mov
movsl
dec
rcrb
jl
add
xor
lret
pop
std
pushf
sub
cmpsl
dec
push
sub
cmp
test
xor
pop
imul
jbe
push
sub
icebp
inc
ja
arpl
test
lods
movsl
xchg
mov
or
jne
pop
mov
adc
push
adc
cmp
jmp
xchg
push
lret
add
add
add
jns
xchg
mov
xor
popf
push
pushf
xor
or
mov
mov
xchg
dec
aam
and
mov
cmp
push
inc
repz
or
push
xlat
movsl
scas
adc
or
or
aam
sub
int
jno
int
imul
movsb
test
cmp
mov
sub
xchg
or
add
fld
adcl
mov
pop
mov
inc
jl
xchg
lret
or
mov
xor
fstpt
cmc
fcoml
stos
adc
inc
cs
je
mov
movsl
jmp
insl
aas
shrb
lcall
and
lods
adc
dec
dec
out
dec
fsub
mov
dec
sub
mov
and
xchg
rorl
dec
add
movsl
pop
aam
mov
cmp
out
cmpb
cwtl
xchg
add
jmp
push
and
stc
aaa
push
mov
nop
add
cmp
test
jnp
leave
insb
jle
xor
nop
repz
popf
push
loopne
popa
ret
jno
add
pop
xchg
mov
sbb
pop
add
stos
mov
test
jbe
ret
out
loopne
mov
push
lods
add
mov
pushf
fwait
das
ficompl
push
andb
mov
adc
mov
call
push
push
in
adc
sbb
push
push
loopne
sub
aaa
call
clc
jne
cmp
gs
cld
out
dec
addr16
cwtl
dec
pop
fld
cmp
mov
add
push
inc
aas
decl
cmp
mov
sbb
sahf
mov
add
fiaddl
cmp
fildl
pop
xchg
pop
js
push
pop
jp
xchg
and
push
pusha
dec
imul
mov
outsl
and
ljmp
pop
and
pop
push
and
mov
inc
sbb
cmp
jns
hlt
aaa
out
arpl
rcrb
pop
loop
xchg
clc
fwait
insb
cwtl
std
cwtl
mov
push
or
xchg
add
stc
add
cwtl
scas
or
add
hlt
dec
testb
sbb
aas
cmp
lea
fwait
subl
mov
jns
push
adc
or
pop
add
xor
adc
icebp
cmp
cmp
cld
cmp
js
popa
movsb
and
rcrl
mov
pop
pop
clc
jno
lcall
or
push
lods
iret
jno
andb
cs
xchg
sub
add
add
pop
repz
cmp
in
adc
addr16
hlt
inc
mov
pop
pop
adc
int
aam
scas
gs
sbb
add
sbb
shl
mov
out
cli
mov
add
stos
cmp
stc
sub
xor
cmp
fnstenv
xchg
lcall
lcall
ds
daa
xor
dec
or
aaa
xlat
mov
add
es
shll
add
sub
hlt
push
mov
inc
lret
lea
js
xchg
mov
fcoml
pop
mov
je
mov
mov
jmp
xchg
popf
sub
pusha
mov
fwait
loopne
in
xlat
pop
inc
sarl
xchg
inc
sbb
mov
xor
pop
mov
mov
xchg
data16
fdivr
in
add
ja
call
cmp
and
pushf
xchg
or
fsubp
cltd
adc
es
sahf
and
imul
or
jecxz
xchg
fnsave
sub
cmp
int3
cmp
cmp
mov
scas
jmp
add
add
add
sahf
fnsave
jbe
pop
jge
dec
cli
or
std
add
cmp
popa
fidivs
sarb
add
sub
ficoml
arpl
fdivp
outsb
and
addr16
jmp
lcall
mov
xchg
in
scas
xchg
out
ss
loop
lock
inc
adc
in
bound
lret
xchg
pop
jmp
mov
jp
lods
setle
sub
repnz
push
outsl
call
call
xchg
jnp
fldcw
sub
push
rcll
mov
mov
lahf
push
xchg
sub
xchg
and
xor
out
in
mov
sahf
dec
into
fsubs
leave
call
les
das
pop
call
xchg
movsl
loop
adc
mov
cli
ss
iret
sbb
cli
and
mov
jl
adc
fwait
jbe
inc
jp
xchg
add
sub
hlt
add
add
subl
lock
jns
push
xor
sub
aam
dec
lahf
inc
push
sbb
add
add
xor
fidivs
int3
sub
in
jns
dec
mov
pushf
adc
jmp
lahf
sbb
jp
popa
push
mov
aaa
addb
sbb
jno
js
sub
dec
es
mov
pop
mov
mov
and
mov
ficoms
mov
push
enter
push
jg
mov
adc
cli
jge
cmc
xor
lods
popa
inc
dec
cmc
cmp
fadd
out
loopne
dec
or
shll
jp
xchg
out
and
jmp
and
cmp
lods
inc
mov
cmp
test
xor
pop
xchg
mov
jo
pop
test
add
jg
mov
std
mov
daa
dec
sarl
cmp
xor
je
shll
add
add
sarb
in
xchg
int3
sbb
adc
leave
lret
leave
test
adcb
cltd
lods
loop
fisttps
inc
mov
aas
pop
jne
dec
fwait
inc
inc
outsl
mov
or
test
lods
movsb
daa
xor
scas
icebp
notb
add
cmp
jae
jo
push
outsb
lret
or
incl
xor
push
ret
sub
mov
add
mov
popa
pop
add
sub
inc
jg
xor
lret
out
sbb
pusha
mov
jo
adc
pop
jge
leave
push
add
idivl
cltd
push
fstpl
mov
mov
inc
push
pop
adc
jmp
xor
stc
rorb
inc
pop
aas
jbe
out
rorl
inc
inc
ljmp
jecxz
pop
dec
addl
add
and
pop
pop
data16
cmp
arpl
jae
out
sbb
xchg
add
out
test
out
xchg
sahf
dec
mov
pop
mov
jbe
xchg
pop
aaa
loop
scas
add
ds
jne
enter
cwtl
jecxz
push
sbb
lds
stos
rorb
repnz
push
cmpsb
xor
xchg
or
enter
loope
out
dec
fldl
add
sti
or
lods
stos
xchg
sbb
mov
jmp
daa
jbe
mov
xor
push
lock
rcrl
sti
cmpsb
mov
adc
in
mov
in
outsb
in
xchg
nop
adc
xchg
cmp
repnz
fisubs
xchg
cmpsb
daa
outsb
mov
stos
dec
aas
sbb
movsl
jno
jne
inc
lcall
inc
cmp
add
sbb
mov
mov
movsl
lock
jecxz
iret
mov
fstps
adc
and
sub
mov
out
iret
sub
xlat
test
xor
xor
add
gs
mov
jb
jg
stos
and
pop
fcomps
mov
rcrl
fnsave
push
lods
and
mov
mov
fwait
popa
push
jecxz
jp
sahf
dec
pushf
insb
mov
loope
jp
inc
call
and
add
sbb
mov
cmp
repnz
push
in
pop
dec
fwait
rol
mov
pop
xchg
jbe
inc
push
test
xor
mov
fbld
cvttps2pi
js
and
jae
and
out
xor
mov
in
or
push
cltd
mov
scas
aas
pop
mov
dec
sbb
cmpsl
arpl
rclb
fs
lret
bound
jns
push
lds
mov
mov
ret
cmp
or
nop
pop
sbb
adc
add
add
lar
jns
loop
xor
push
jae
and
pop
xchg
rcll
ja
pop
fwait
cmp
mov
mov
sti
fs
loope
aaa
lret
jb
fimuls
shrb
fimuls
cs
adc
push
jo
push
push
hlt
insl
push
add
push
je
mov
sub
sub
shrb
pop
push
gs
inc
cmp
dec
stos
xchg
jmp
fisubs
xor
add
lret
adc
mov
das
lds
xor
outsl
test
push
dec
cwtl
lret
jb
data16
int3
sbb
shrb
push
add
inc
cmp
shll
test
in
out
shlb
or
mov
imul
mov
push
xlat
ss
movsb
cmp
sub
lahf
push
repz
divl
int3
jne
adc
fcoms
lcall
scas
jge
loop
add
addr16
cs
mov
pop
xlat
imul
pushf
jg
or
movsl
movsl
jbe
or
dec
cmpsl
xchg
sar
push
jp
xor
ljmp
sub
imul
bound
fnstenv
popa
repz
dec
repnz
ret
mov
mov
movsl
sbb
bnd
js
mov
add
xchg
mov
adc
sub
gs
nop
dec
add
push
or
sbb
aad
stc
sbb
sbb
test
jb
add
jge
mov
lret
push
addl
cmp
ficoml
adc
popa
ret
movsb
mov
cmpsl
jl
sub
cli
mov
movsl
test
cmp
jg
mov
in
mov
dec
xchg
pushf
rcrb
add
jns
inc
mov
jnp
andb
xor
or
mov
mov
stc
mov
and
pushf
inc
ficoml
adc
es
push
mov
or
je
cld
and
les
subb
rorl
ret
dec
rcll
and
sub
mov
ret
sbb
std
pop
sbb
cmp
scas
pop
add
pop
shrl
mov
dec
movsb
dec
adc
call
and
mov
add
xchg
adc
out
xlat
icebp
pmulhw
outsb
test
xor
mov
jno
rcr
fwait
xor
push
popa
sbb
cs
loope
aaa
lds
sbb
mov
or
es
push
mov
dec
push
push
xchg
mov
iret
data16
sub
and
aad
add
pop
add
or
shlb
mov
je
adc
inc
pop
adc
push
dec
shll
lcall
popa
call
fucomp
mov
mov
mov
push
jbe
call
insl
orl
ljmp
ret
push
sbb
push
test
dec
sub
mov
sbb
test
fiadds
add
lcall
push
arpl
pop
lcall
dec
mov
pushf
mov
enter
pushf
mov
cmp
shlb
xchg
mov
and
push
popf
and
imul
and
lods
mov
scas
icebp
rcl
clc
imul
out
lods
imul
arpl
inc
mov
xchg
jl
sahf
out
clc
cmp
or
push
adc
bound
mov
faddl
add
add
add
sbb
inc
addr16
mov
xchg
cmp
imul
outsb
mov
repz
push
das
imul
test
sbb
pop
mov
push
psllw
cmc
dec
mov
sub
andl
hlt
ja
xor
mov
jae
pop
nop
notb
aad
xor
sub
cmp
or
xor
inc
xor
pop
adc
out
inc
and
add
cli
or
icebp
pusha
subl
idivb
push
xorb
push
movb
mov
lret
aas
and
out
add
xchg
loopne,pn
insl
mov
cli
jbe
das
adc
iret
hlt
push
cmpsl
mov
jle
mov
mov
ds
sarl
cmpsb
or
pop
in
jo
daa
pop
sub
ljmp
jae
cmc
aam
jge
repz
lds
push
push
pop
mov
cmpsl
fwait
iret
and
shlb
mov
out
mov
push
sbb
icebp
aaa
adc
or
daa
or
jge
xchg
sbb
dec
adc
fsubr
jne
sbb
adc
mov
lods
icebp
xlat
lock
jg
inc
dec
call
pop
pop
mov
insb
rolb
into
sbb
dec
fstpl
pushw
shrl
rcrb
xchg
movsb
xor
jge
call
push
adc
dec
xchg
cmpsb
pop
add
sbb
add
inc
in
dec
mov
das
sbb
dec
pop
scas
mov
add
fstps
into
adc
sbb
push
lock
cwtl
inc
movw
enter
mov
pusha
adc
loop
test
xchg
xor
clc
fsub
dec
insb
mov
hlt
fisttps
xchg
popf
out
es
inc
cmp
lret
shll
mov
adc
iret
mov
filds
fisttpl
rorb
add
pushl
fbld
out
stc
push
mov
mov
loopne
mov
jge
cmp
icebp
jb
mov
push
dec
cmp
out
lods
xchg
inc
lea
fldenv
outsl
sub
jg
adc
xor
lea
mov
sti
xchg
popa
mov
lods
or
lret
inc
test
mov
push
sub
and
sbb
test
add
add
and
ret
test
stos
rolb
shrl
xchg
inc
repz
push
jns
daa
and
sbbb
sub
loopne
insl
in
mov
sub
ss
cmpsl
out
pop
jge
ret
out
lods
pop
or
mov
insb
fimuls
xchg
mov
add
mov
jmp
adc
cmc
dec
ds
fdivr
std
stc
cmpsb
cwtl
ret
mov
add
or
std
bound
insb
mov
jp
jg
loope
insl
lcall
jp
xor
ljmp
out
jp
jmp
inc
inc
cmp
rcr
xchg
dec
sbb
and
cmp
inc
and
mov
outsl
test
add
jmp
cltd
mov
aas
ja
in
mov
jnp
mov
lods
out
lahf
orb
sub
add
in
sbb
daa
fstpt
jae
rclb
in
ljmp
xchg
mov
jnp
sub
je
inc
push
cmc
test
aad
out
jo
mov
push
js
push
sub
stos
xchg
xchg
inc
jmp
es
dec
sbb
adc
jecxz
sbb
aam
sbb
stc
stc
dec
call
mov
out
and
or
cmp
shrl
or
sbb
add
cltd
data16
sub
or
repz
xchg
flds
adc
ja
mov
sbb
mov
ret
xor
sahf
jge
jecxz
je
add
lahf
inc
testb
or
out
sub
sbb
daa
push
pmaxub
and
dec
mov
inc
popa
jne
imul
dec
push
and
xor
bound
push
loope
rcrl
sub
add
bound
lahf
clc
frstor
push
loop
lock
jp
insl
mov
fists
xor
and
inc
js
sub
dec
icebp
jns
push
mov
icebp
sub
out
mov
cmc
pop
gs
inc
mov
push
dec
mov
cld
dec
lds
imul
shlb
cmp
jo
mov
enter
jge
or
cmp
dec
sbb
inc
cmp
outsl
cmp
ljmp
add
add
out
sar
xchg
popf
jp
sar
imul
xchg
popf
push
xchg
xchg
shl
dec
clc
inc
sahf
sub
fsubs
std
push
ficomps
sub
aas
sbb
dec
aad
sti
out
mov
and
mov
test
movsl
pop
inc
mov
xchg
xor
and
fmulp
std
fwait
daa
xchg
jmp
clc
lods
es
lret
jno
jp
popf
lods
cmp
dec
xor
add
xchg
push
xchg
pop
and
xor
pop
enter
cmc
xchg
push
and
out
shrb
mov
pop
ficomps
pushf
and
sarb
push
cmp
daa
imul
sbb
xlat
loop
mov
int3
loopne
mov
aad
mov
push
ljmp
mov
jg
mov
int
sbb
insb
aas
cmp
pop
add
pop
pop
inc
add
sbb
in
movsb
add
fstpt
mov
insl
enter
push
pop
lcall
ja
mov
jne
popaw
or
push
iret
das
jge
mov
out
jne
cmp
fdivrl
mov
add
sbb
inc
xchg
fdivrp
stc
int
or
insb
jo
sbb
pop
mov
add
adc
sub
add
inc
sbb
daa
lahf
movsl
inc
mov
imul
add
and
sub
in
dec
outsl
jne
mov
cmp
xor
cmp
mov
aad
xchg
push
shr
shrb
or
pop
jmp
aaa
fistpll
fdivs
aam
xchg
sti
int
pand
lods
pushf
addb
mov
repnz
in
sahf
test
add
xchg
mov
adc
pusha
les
sti
xor
jmp
mov
adc
stc
mov
dec
jge
push
cmpsl
mov
dec
sbb
push
popa
fcmovnb
lods
adc
dec
dec
jp
mov
js
pop
cli
js
add
adc
cmp
ljmp
pop
add
popa
push
mov
xchg
xor
scas
dec
pop
mov
xchg
push
lahf
pusha
xchg
in
cld
jecxz
mov
mov
fwait
gs
pop
pop
push
push
sahf
push
sub
add
and
push
insl
lret
add
popa
mov
mov
push
pop
xchg
sub
inc
pushf
add
iret
push
mov
iret
fs
fldt
inc
push
mov
js
xchg
sub
test
cmp
ds
int
in
je
ds
pop
addl
ret
pop
xor
test
adc
jp
or
jecxz
xchg
add
mov
pop
notb
mov
out
adc
add
cld
dec
lds
mov
add
lahf
pushf
mov
xor
push
lods
stos
adc
dec
loop
xchg
test
lahf
mov
and
jns
pushl
scas
outsb
jecxz
dec
mov
aad
push
out
pop
xor
cmc
addr16
mov
xor
xchg
leave
pushf
test
mov
cs
mov
mov
mull
pop
shrb
mov
out
sbb
pop
add
xor
mov
sar
xor
mov
sarb
test
movsb
push
mov
sub
dec
or
and
adcb
cmpsl
inc
xchg
pushf
xor
int
jge
jmp
imul
mov
add
mov
and
adc
cmpsb
sbb
movsl
lock
jae
dec
shll
in
cld
icebp
test
lret
add
add
mov
imul
loopne
insb
sti
dec
aaa
das
pop
test
shll
mov
jnp
clc
cld
sub
jl
xchg
pushf
ds
inc
test
xchg
xchg
addl
roll
or
lret
or
dec
push
dec
in
jl
test
mov
popf
and
scas
xchg
add
mov
push
push
scas
fwait
clc
push
pop
pop
cltd
jae
jge
add
add
mov
push
test
enter
xor
ret
fstps
ret
or
mov
movsl
jp
dec
mov
cld
adc
adc
adc
std
mov
cmp
clc
and
mov
push
