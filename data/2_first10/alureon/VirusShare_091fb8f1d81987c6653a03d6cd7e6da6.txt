push
mov
sub
push
mov
call
mov
mov
add
call
mov
add
push
push
push
addl
call
mov
mov
add
inc
cmp
jne
add
add
sub
jmp
mov
add
sub
mov
ret
pushl
pop
lea
mov
mov
add
cmp
jae
sub
inc
add
jmp
mov
mov
add
add
jmp
aam
out
fdivrl
jl
out
inc
xor
out
cmp
arpl
repz
popa
movsb
out
enter
idivb
jbe
cmp
test
cmp
and
addr16
cmp
mov
out
jnp
out
inc
js
out
xor
jo
adc
jnp
hlt
and
out
cmp
lock
mov
pop
fs
pop
repnz
enter
jge
sbb
loop
out
dec
cmpsb
fs
sti
push
and
cmp
mov
add
shlb
push
out
lock
jnp
xchg
inc
sti
jno
jp
lods
icebp
xor
ljmp
mov
jne
pop
inc
pop
push
repnz
inc
xor
out
cmp
out
shll
jb
movsl
arpl
pop
lock
and
cmp
out
cmp
mov
out
jnp
xchg
inc
sti
xchg
ret
arpl
lret
test
jae
das
cmp
test
cmp
pop
dec
mov
fimuls
sbb
cmp
out
cmp
out
cmp
xchg
and
cltd
and
insl
int3
xchg
and
fwait
daa
jne
xchg
and
cltd
and
insl
rcll
daa
jne
faddl
mov
pop
popf
pop
mov
sahf
push
popa
mov
fs
fidivl
mov
or
bound
mov
ficoml
out
rcrb
adc
xchg
jecxz
inc
movsl
and
fs
sbb
gs
sbb
arpl
and
push
lahf
sub
xchg
scas
lock
fsubs
cmp
out
mov
lock
jbe
cmp
out
dec
add
cmp
add
push
cmp
fs
aam
das
cmp
out
dec
push
gs
cmp
add
aas
cmp
fs
jmp
das
cmp
out
dec
or
aas
cmp
add
daa
cmp
fs
add
das
cmp
out
dec
adc
cmp
dec
aad
js
sbb
cmp
out
dec
sbb
cmp
dec
idivl
xor
cmp
mov
inc
xor
fs
inc
out
mov
je
mov
pop
mov
out
cmp
jp
repnz
pop
cld
ficoml
jnp
adc
sti
movb
nop
repz
dec
pop
out
shl
lods
lock
imul
sti
mov
loop
push
add
dec
cli
xchg
jne
hlt
jnp
cmpsl
pop
mov
mov
fisubrl
xlat
adc
insb
insl
inc
idiv
fs
cmp
aaa
out
push
data16
lret
jp
xchg
or
and
cmp
fs
testb
or
movl
addr16
pop
rorb
cs
add
push
and
gs
adc
das
dec
xchg
out
cmp
sub
test
cmp
xchg
inc
daa
cld
sub
or
xor
popa
iret
das
movsb
adc
cmp
gs
cmp
sub
bswap
nop
insb
sbb
pop
jno
jl
repnz
movsl
out
jbe
jge
dec
in
or
outsl
sbb
daa
or
jnp
lods
mov
out
dec
test
out
cmp
movsl
out
push
sub
dec
push
jp
and
jno
cmp
gs
jnp
out
out
out
ds
repnz
mov
xor
dec
mov
mov
cmp
outsl
mov
mov
cmp
gs
mov
sbb
dec
jp
out
into
pop
ja
cmp
imul
mov
out
cmp
jo
xchg
and
cmp
incl
cmp
inc
add
sbbb
out
les
xor
call
hlt
dec
push
fwait
mov
dec
gs
call
mov
out
scas
cwtl
lock
mov
dec
fisubl
mov
mov
dec
lock
push
mov
repnz
jnp
out
lea
addr16
jns,pt
cmpsb
cld
pop
sub
dec
ficoms
cmp
fs
mov
leave
adc
xor
lea
addr16
hlt
gs
cmp
sbb
push
call
mov
sub
jl
out
mov
fsubs
into
mov
mov
add
inc
xor
sbb
dec
mov
jl
dec
stos
das
cmp
mov
cmp
js
out
mov
jb
test
mov
jge
mov
hlt
jg
icebp
cmp
pop
cmp
gs
mov
sbbb
dec
les
into
lret
cmp
mov
arpl
lock
mov
out
lea
cmp
bound
mov
gs
scas
stos
xchg
scas
and
gs
cmp
mov
and
gs
cmp
cltd
daa
push
cmp
adc
cltd
gs
es
and
mov
add
pop
inc
clc
out
xchg
out
cmp
bound
cmc
scas
test
out
sbb
jge
icebp
mov
cmpsb
mov
jecxz
add
fcomi
lds
xchg
mov
cmp
gs
cmp
pop
mov
sub
or
