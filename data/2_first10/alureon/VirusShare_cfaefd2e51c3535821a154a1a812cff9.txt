mov
outsb
xchg
push
scas
stos
mov
subl
add
loope
ds
push
xor
mov
adc
daa
mov
pushf
xchg
sbbl
les
xor
or
adc
push
xchg
xchg
sti
pop
pop
lahf
cmpsb
add
add
bound
xchg
fisttpll
xchg
addr16
push
cmpb
ret
cmc
mov
mov
sahf
fwait
leave
jecxz
in
jg
rcll
std
push
addr16
sbb
inc
pop
pop
ljmp
add
ret
jne
jmp
sub
mov
or
fwait
pushf
sbb
dec
pop
or
sbb
mov
cmp
fldenv
sarb
out
stos
out
fisubl
xchg
ja
mov
cmp
lods
aaa
popf
int3
cmp
fsubr
cmp
inc
in
xor
mov
nop
fistl
sub
pop
pop
data16
sub
adc
ss
sub
fbstp
pop
scas
into
inc
cmp
dec
popa
xor
sbb
daa
push
aad
lock
test
push
push
pop
mov
and
mov
cmp
fadd
or
notl
sub
into
cwtl
clc
xlat
sbb
popf
fcmovne
mov
and
jge,pt
ljmp
mov
and
xchg
out
pop
mov
int3
out
sbb
ds
jbe
cmp
mov
aad
aas
imul
popf
dec
mov
jp
pushl
and
loopne
pusha
adc
jo
jns
call
or
das
insl
cmp
nop
dec
stc
add
sbb
clc
ds
sbb
lahf
gs
rcll
fisubrl
fcomip
sbb
push
addb
xchg
pop
adc
jmp
outsb
cltd
popa
adc
popa
subb
scas
cmp
push
mov
insb
out
out
mov
and
cmpsb
mov
mov
or
lock
test
push
add
pop
ret
mov
adc
mov
pusha
cmp
mov
add
sub
xchg
rcr
les
in
pop
inc
and
cld
mov
jns
jne
lods
push
out
xchg
and
mov
adc
popa
sbb
dec
cmpb
xchg
fidivrl
xchg
add
rcr
scas
sub
lret
rol
imull
mov
push
sbb
test
dec
dec
mov
jbe
xor
and
movsb
hlt
insb
nop
add
inc
idiv
gs
adc
inc
mov
out
mov
jge
stos
sub
dec
adc
lds
pop
das
cmp
stos
xor
aad
push
xchg
xchg
insb
popf
scas
cmp
jae
movsb
in
lret
xchg
mov
enter
shlb
xlat
shlb
test
xchg
push
je
ret
rcl
int3
inc
and
pop
push
loopne
lret
xchg
aaa
cmc
or
leave
and
inc
iret
xlat
push
repnz
fisubl
ficoml
mov
xor
pop
int
mov
pop
sub
xchg
mov
and
push
aam
jae
lret
inc
xchg
mov
xlat
or
or
js
clc
icebp
or
mov
jmp
sti
fldt
adcb
popa
jecxz
insb
insb
jg
inc
push
into
ss
jo
movl
dec
jnp
add
cmp
xchg
nop
enter
or
jno
stos
add
out
jnp
and
or
dec
or
sbb
sub
ret
movsl
xchg
cwtl
aaa
dec
mov
out
xchg
lods
ljmp
in
outsb
mov
outsb
stc
inc
or
mov
sbb
data16
sbb
sbb
sub
repnz
es
mov
dec
mov
and
dec
outsl
shrb
fisubrs
sbb
jno
outsb
mov
mov
movsb
lods
bound
lret
mov
adc
in
leave
hlt
cmp
adc
rclb
outsb
pushf
adc
sti
test
jno
ret
adc
outsl
dec
test
mov
add
and
push
pop
xlat
or
in
cmp
or
jne
int
adc
sub
cmc
int
mov
sub
xor
dec
ss
adc
fdivrl
sub
lret
add
cmp
sub
pop
aam
sbb
inc
dec
mov
mov
xlat
adc
xchg
int3
mov
addl
lret
in
icebp
loopne
outsb
ljmp
fildl
mov
push
insb
shrl
push
fcoms
popf
js
sbb
cmpsl
dec
or
mov
aas
push
jo
sbb
addb
je
xchg
or
dec
fdivr
es
xchg
outsl
jmp
sbb
das
pop
lock
mov
or
mov
pop
fisubl
leave
mov
pusha
adc
jb
loop
jmp
sbb
cmp
stos
dec
xchg
cltd
push
pop
nop
add
lock
or
xor
and
push
jmp
xor
sbb
push
add
lea
sub
jb
out
cmp
pop
out
sbb
and
push
xchg
sahf
out
mov
orl
sbb
dec
dec
cmp
cltd
movsl
std
adc
xchg
dec
pop
cmpb
sub
cmc
fyl2x
lds
repz
fnstenv
pushf
mov
push
lret
and
add
ss
ror
adc
outsl
call
arpl
int
mov
mov
adc
jmp
and
and
xor
ret
mov
leave
jp
push
jb
sbbb
push
ret
ficoms
int3
test
mov
inc
or
xorb
sub
int
cmp
int3
sub
lret
or
fisubrs
sub
pop
adc
sub
push
push
lock
inc
pop
jecxz
mov
xorb
les
addr16
int
loope
jp
out
pop
cli
add
aas
adc
push
inc
mov
loope
push
div
push
fcomi
or
adcb
sub
pop
insb
fistl
sbb
int
mov
mov
mov
cmp
dec
jmp
shll
dec
arpl
leave
push
std
or
ja
push
mov
frstor
faddp
cmp
int
fwait
dec
adc
mov
adc
lcall
fildll
mov
adc
pop
xchg
out
shlb
pop
orl
call
xor
ss
sub
sub
sbb
inc
inc
push
adc
mov
mov
and
sbb
pop
pop
imul
mov
or
out
sub
pop
in
cmp
fucom
or
jg
hlt
dec
outsb
aas
fidivrs
jp
popa
hlt
out
movsl
sbb
and
add
addb
push
fdivrl
sub
xchg
cmpsb
nop
push
cld
pop
xor
jg
or
aaa
jno
test
ja
cmpsl
sub
call
andb
outsb
adc
sbb
hlt
adc
outsl
int3
xor
cltd
testb
adc
pop
dec
repnz
mov
inc
mov
out
jl
dec
loop
mov
sbb
mov
mov
push
inc
mov
cltd
sbbb
mov
shrl
lods
and
ficoml
xchg
mov
jmp
sbb
mov
fisubrl
adc
rcrl
lahf
cmp
lahf
ss
add
lret
push
loopne
mov
xor
mull
mov
fwait
mov
inc
jp
pop
mov
cmp
dec
push
in
mov
add
in
dec
loop
mov
movsb
xor
clc
push
sqrtps
lcall
fistps
lcall
add
fisttpll
lcall
cmp
and
sbb
out
mov
add
jle
add
or
inc
es
cs
icebp
movsb
push
lret
stos
pop
cs
cmp
ja
scas
jae
lods
inc
mov
inc
fstpl
pop
rdtsc
lds
inc
fsqrt
outsl
mov
repz
in
test
bt
xor
mov
fcoms
insl
and
adc
jle
cmp
sub
xchg
imul
popf
xchg
xchg
pop
rorl
adc
cmpl
scas
pop
insb
jo
addl
mov
jne
aaa
pop
pop
shrb
pop
bound
cmp
lahf
in
inc
pusha
xchg
popf
or
mov
fcom
xchg
add
in
test
jmp
cmp
mov
xchg
flds
int
andl
inc
mov
dec
in
mov
or
jecxz
in
insb
je
inc
xchg
leave
xlat
pop
data16
push
add
dec
aaa
rcr
lcall
aad
call
xor
jns
dec
test
sub
sub
mov
mov
xor
xor
push
inc
push
rcr
fistpl
mov
sti
mov
pop
or
push
mov
add
sbb
adc
sub
add
out
lret
iret
subl
leave
orl
clc
push
xchg
push
divl
and
inc
les
popl
mov
or
divps
sub
insb
fs
fisubrl
outsb
jae
jns
scas
pusha
jae
leave
xchg
push
mov
jecxz
xchg
ss
dec
pop
xor
pop
sub
arpl
imul
push
xchg
adc
sbb
insl
xchg
scas
call
scas
ds
push
dec
sbb
xchg
xchg
lcall
inc
jne
mov
les
dec
xor
daa
mov
insl
mov
cmp
aas
call
xor
in
mov
lret
lock
dec
push
inc
dec
ret
pop
ret
fsts
sub
jns
adcb
fstps
cmp
nop
mov
inc
jnp
pop
cld
lds
outsl
fisttpll
int3
inc
pop
loop
xchg
xchg
mov
fisttps
inc
add
cmp
subb
inc
hlt
push
mov
aad
insb
call
pop
test
sub
jmp
pop
mov
mov
push
adc
daa
mov
int
push
lret
dec
jns
cmp
dec
lea
dec
inc
pop
rolb
lret
mov
mov
push
and
inc
fstpl
xchg
fimull
rcrl
stos
sub
adc
jle
stos
mov
and
jbe
in
jo
hlt
jg
mov
ret
aas
push
jb
pop
ds
inc
jne
add
xor
das
sub
ss
adc
pop
fsub
jnp
jnp
cmp
negl
mov
js
push
xlat
movsb
push
inc
and
into
mov
test
dec
sti
cmpsl
push
in
leave
inc
push
movl
or
pop
adc
mov
ljmp
out
cltd
in
pop
mov
inc
push
jmp
sbb
out
pop
xchg
ret
and
daa
mov
ret
cmp
rorb
mov
or
mov
pop
xor
orb
call
movsb
fmulp
and
scas
mov
inc
or
fldt
subl
mov
lds
pcmpeqd
mov
call
cmpsl
mov
jo
pop
add
sub
jns
scas
jb
mov
push
mov
mov
pop
test
or
or
jle
loope
jge
pop
ret
or
imulb
mov
and
xor
subb
adc
es
loop
int
add
imul
inc
rorl
lret
repz
jmp
cmpsl
insb
ja
pop
subl
repnz
movb
call
jg
lods
int3
jbe
into
pop
sub
repnz
cld
nop
ret
shl
popa
sti
sub
jg
test
gs
int3
cmp
mov
insl
jbe
or
lret
popf
pushl
ret
pushf
loopne
in
jl
rol
mov
inc
in
sub
addb
ja
cmc
sub
push
aaa
mov
jbe
rolb
mov
fucom
inc
popa
push
inc
add
push
cmp
push
stos
adc
cmc
jno
cmpb
add
push
mov
movsl
scas
fiadds
push
mov
dec
add
call
imul
dec
call
dec
push
mov
call
mov
dec
add
mov
sub
call
add
movsbl
xor
mov
dec
lea
mov
mov
inc
xor
and
dec
add
call
add
sub
imul
imul
call
dec
add
call
mov
mov
dec
mov
mov
add
mov
dec
inc
pop
mov
dec
inc
add
lea
pop
add
inc
pop
lea
mov
sub
sub
pop
xor
inc
mov
mov
lea
dec
mov
sub
pop
imul
inc
pop
inc
lea
mov
add
add
call
lea
inc
and
imul
ret
dec
mov
push
add
movzbl
push
dec
and
push
or
sub
push
lea
mov
push
dec
add
mov
lea
dec
push
movsbl
ret
push
mov
and
sub
add
lea
lea
mov
push
dec
add
add
call
pop
ret
jmp
sub
mov
dec
dec
movzbl
mov
dec
add
dec
mov
and
movzwl
sub
movzbl
imul
add
xchg
inc
lea
sub
mov
xor
inc
xor
dec
lea
inc
dec
movsbl
dec
jne
movswl
mov
dec
inc
pop
sub
inc
pop
mov
dec
pop
mov
and
xor
mov
add
dec
inc
mov
imul
mov
mov
add
ret
push
inc
add
add
mov
dec
mov
movzwl
add
push
push
push
push
xor
mov
mov
push
sub
add
mov
sub
xor
dec
lea
add
lea
mov
inc
push
mov
mov
xor
sub
mov
push
mov
or
push
add
movzbl
pushl
mov
call
lea
add
movswl
lea
sub
sub
sub
sub
mov
pop
ret
inc
movswl
xor
sub
inc
inc
dec
mov
xor
dec
lea
sub
sub
cmp
jb
inc
xor
lea
and
mov
dec
inc
mov
inc
inc
inc
sub
movswl
inc
inc
add
movzwl
mov
dec
movswl
cmp
jb
xor
pop
dec
inc
imul
mov
add
imul
inc
inc
lea
inc
xor
mov
sub
xor
dec
mov
mov
inc
mov
test
jbe
lea
mov
inc
dec
inc
lea
sub
dec
dec
xor
add
and
or
add
mov
lea
lea
movzbl
and
dec
add
movsbl
lea
and
lea
xor
mov
add
dec
mov
inc
inc
mov
imul
and
mov
imul
movswl
dec
or
and
inc
dec
jne
add
mov
imul
add
mov
sub
sub
inc
inc
mov
sub
dec
mov
lea
inc
imul
lea
mov
inc
inc
inc
mov
add
add
test
jbe
add
movzwl
add
or
inc
sub
inc
dec
movsbl
add
inc
inc
mov
dec
mov
inc
inc
dec
dec
add
dec
dec
and
sub
mov
mov
dec
sub
movzbl
lea
imul
add
lea
mov
and
inc
add
mov
mov
dec
movzbl
inc
add
mov
lea
jmp
push
dec
dec
add
mov
mov
inc
sub
sub
dec
add
add
imul
mov
mov
sub
dec
mov
inc
lea
add
dec
lea
inc
movswl
add
mov
inc
lea
mov
lea
sub
dec
mov
lea
inc
inc
dec
mov
lea
cmp
je
call
call
inc
lea
dec
and
dec
lea
mov
dec
add
mov
dec
inc
add
imul
inc
inc
inc
xor
sub
add
dec
lea
mov
lea
dec
mov
mov
sub
dec
add
imul
lea
mov
mov
mov
movsbl
inc
dec
add
movsbl
inc
inc
lea
imul
lea
mov
dec
ret
movsbl
mov
pop
add
ret
push
add
add
add
mov
dec
push
inc
xor
push
dec
push
mov
push
imul
mov
mov
dec
imul
call
sub
push
mov
sub
xor
mov
sub
inc
neg
imul
mov
lea
xor
dec
mov
mov
inc
or
mov
mov
mov
inc
inc
sub
dec
je
mov
imul
sub
mov
mov
jmp
sub
mov
inc
and
xor
movsbl
repnz
mov
lea
add
or
jmp
add
sub
xor
inc
sub
add
dec
mov
sub
add
and
imul
inc
dec
sub
imul
pop
pop
ret
push
add
mov
lea
add
dec
lea
imul
imul
mov
imul
lea
xor
xor
dec
mov
dec
lea
mov
lea
dec
sub
xor
add
inc
inc
dec
dec
pop
ret
sub
movzbl
mov
mov
imul
mov
add
mov
mov
mov
movswl
mov
add
lea
xor
xor
imul
mov
lea
lea
inc
inc
mov
lea
mov
mov
mov
cmp
jb
inc
push
inc
or
push
mov
lea
push
add
dec
xor
or
sub
xor
inc
dec
xor
or
inc
push
dec
dec
mov
sub
mov
xor
movsbl
lea
mov
dec
dec
mov
xor
movzbl
xor
sub
dec
add
dec
movswl
add
or
dec
movzbl
imul
dec
jmp
and
loop
sub
outsl
pop
or
cld
adc
fs
adc
and
lods
mov
ljmp
test
fwait
in
out
adc
fimuls
ret
xchg
mov
mov
add
dec
ja,pn
inc
icebp
add
xlat
bound
sbb
mov
and
hlt
rolb
mov
pop
inc
push
push
mov
cmp
int
dec
pop
mov
dec
push
les
sbb
out
fwait
cld
fidivl
popf
loop
sbb
mov
pop
incl
xlat
ljmp
loopne
lods
xchg
lods
add
test
dec
cmp
in
inc
inc
lahf
adc
and
adc
lcall
fnsave
shlb
xchg
mov
push
std
insl
fcmovne
in
inc
mov
add
mov
pop
out
mov
cmp
mov
arpl
push
out
lcall
mov
or
shlb
scas
mov
jo
in
sbbl
add
je
cmp
shll
cs
xchg
cli
outsb
shlb
fistpl
mov
cwtl
and
movsb
jb
rcrb
adc
sbb
adc
gs
xor
nop
push
xchg
repz
jo
mov
fwait
sub
adc
in
mov
adc
sti
hlt
nop
ret
mov
cs
ds
loop
ljmp
daa
or
out
xchg
sbb
dec
xor
icebp
into
orl
and
je
add
jmp
dec
xor
insl
jle
int
out
adc
jmp
sub
test
imul
pop
mov
mov
clc
ss
sub
mov
mov
mov
outsb
adc
int3
fadds
pushf
test
pop
scas
inc
mov
je
mov
sbb
je
into
mov
xor
xchg
dec
xchg
xor
and
lods
leave
sub
jp
cmp
cld
sub
jno
loope
xor
dec
es
andnps
pop
sub
xchg
leave
outsl
jge
icebp
cmp
cmpsl
addb
sbbb
pop
js
arpl
or
xor
xor
pop
jne
xor
insb
push
dec
test
pop
and
in
in
lds
das
popf
xchg
xor
adc
enter
dec
sub
xchg
call
adc
test
repnz
fsubrs
daa
or
nop
pop
or
pushf
arpl
sbb
jo
mov
ss
fldt
test
add
sub
dec
add
inc
and
adc
jnp
pop
out
daa
dec
sbb
jge,pn
add
mov
sbb
push
jbe
ds
sbb
inc
inc
cmp
inc
fstl
js
push
shl
mov
inc
push
ffree
cmp
xor
sub
sbb
mov
adc
cmpsl
inc
ja
stos
jno
aas
add
mov
lods
jno
xor
lods
rolb
jecxz
pop
sbb
sbb
sub
mov
stos
inc
xchg
push
push
aad
ret
stc
aad
in
sbb
mov
movsl
test
pop
cmp
arpl
mov
test
mov
in
in
pushl
test
lret
lds
push
bound
mov
sar
fadds
in
out
sub
cmpsb
into
add
aam
movsb
hlt
ret
je
leave
stos
cmp
adc
rolb
loopne
jno
addl
daa
xor
aad
dec
and
dec
stos
sub
and
or
inc
cmp
out
jae
mov
sbb
and
loope
sub
outsb
repz
mov
mov
fldenv
pcmpeqb
ret
test
test
lods
add
dec
bound
adc
push
mov
ljmp
and
sbb
and
fisubrs
loopne
and
cmp
sub
das
sbb
mov
nop
mov
xchg
test
out
out
lock
inc
shll
sbb
and
xor
stos
sub
ljmp
popf
adcb
cmpsl
add
add
add
stos
rclb
inc
add
mov
or
icebp
pop
repz
std
cmp
ror
and
push
fs
in
sbb
add
mov
repz
scas
std
mov
testl
inc
out
jg
mov
mov
inc
fdivs
or
outsb
and
cmp
xchg
inc
xor
cwtl
sbb
cmp
mov
cmp
pusha
mov
cli
icebp
xchg
jno
stc
sub
and
sub
scas
in
xchg
cmpsb
and
lock
sbb
push
in
lods
pop
mov
jno
das
ret
sbb
pusha
and
adc
std
sub
adc
inc
or
rclb
lds
mov
dec
inc
addr16
pusha
out
sti
pop
jo
sbb
out
out
jne
dec
jecxz
push
daa
inc
adc
and
pop
pop
add
sar
ja
and
in
punpckhdq
or
mov
inc
stos
out
dec
dec
xchg
fs
lods
dec
loopne
mov
and
and
ret
aam
pop
insb
dec
faddl
xchg
dec
ret
mov
inc
test
push
jp
push
and
xchg
ss
mov
and
pop
out
aaa
add
mov
fucomip
push
bound
test
mov
lcall
imul
fisttpll
and
popf
or
inc
imul
lahf
jmp
sbb
test
shrl
pop
int
pop
cmp
imul
nop
data16
lcall
mov
call
aas
push
das
and
into
cmpsl
or
push
pop
in
call
cmp
push
xchg
addr16
inc
popl
stos
rclb
je
pop
pop
sbb
pop
outsl
leave
pop
lcall
xor
push
loop
push
lcall
mov
pop
jmp
push
pop
and
ja
adc
mov
sub
fs
xchg
or
fdivrs
pushf
inc
loope
sbb
call
pop
or
xchg
mov
dec
dec
and
xchg
pop
adc
movsb
sbb
dec
ror
mov
into
xor
aaa
orl
add
lds
sbb
aaa
ja,pt
mov
out
jp
fnstcw
pusha
mov
lock
jl
push
stos
movsl
lods
inc
and
scas
xchg
mov
sub
iret
loope
out
inc
enter
mov
xchg
cmp
push
jmp
xchg
inc
mov
icebp
pop
icebp
and
outsl
popa
shlb
call
stos
jae
jecxz
mov
scas
jmp
cli
push
pushf
cmp
sbb
sub
fnsave
mov
mov
mov
orl
stc
scas
or
call
test
popf
rorb
push
fwait
add
ror
dec
sbb
iret
pop
dec
aas
repnz
mov
add
ljmp
test
mov
popa
stc
icebp
dec
or
xor
lea
dec
mov
negl
mov
stc
call
adc
outsb
stos
sbbb
and
test
addl
shr
cmp
cmpsb
inc
push
adc
sub
jne
xchg
dec
sub
aam
mov
mov
movsb
sub
push
into
or
mov
loope
mov
das
movsl
or
lret
sti
mov
or
loop
mov
addr16
push
ds
dec
dec
int
daa
xor
shrb
sbb
int3
sub
std
dec
mov
xchg
add
xchg
pop
adc
in
push
pop
jno
sub
push
and
aaa
lahf
stos
lds
sub
sub
jl
aam
in
or
mov
loop
lret
aas
scas
pop
mov
daa
ja
fldcw
pop
loop
mov
adc
mov
sub
jno
push
mov
ss
mov
and
outsb
push
repnz
xchg
xchg
ja
jge
sub
inc
addl
sarb
ljmp
push
cmpsb
fcompl
sub
test
sbb
lods
and
mov
in
in
and
xchg
stos
out
in
pop
jmp
rolb
or
ret
lea
xor
scas
push
sbb
add
mull
cwtl
in
xor
outsl
push
fs
es
in
jecxz
and
cld
testl
xchg
mov
popf
push
xchg
mov
jae
sbb
mov
dec
mov
xor
ja
mov
xchg
and
insb
cmp
lods
jmp
int
pusha
cmpsl
int
inc
ss
inc
mov
aad
xlat
out
xchg
push
sub
outsl
iret
loopne
jmp
inc
xor
jnp
scas
lea
inc
jg
sub
clc
sub
stos
push
jle
imul
dec
mov
pop
lahf
add
mov
push
cmp
sbb
xor
sbb
lret
pop
stos
adc
test
ja
push
inc
adc
mov
mov
in
fpatan
jmp
daa
mov
js
sub
pop
sbb
pushf
jl
xlat
and
pop
mov
out
mov
add
cmpsb
in
les
lret
fldenv
rclb
adc
mov
movntps
dec
mov
or
sbb
adc
imul
mov
rorb
adc
pop
test
jnp
sub
pushf
mov
cli
andps
imul
scas
jno
mov
insb
lods
ret
sub
sub
xor
xor
pop
lock
mov
loope
cmpl
stc
xlat
mov
push
adc
sbb
sub
and
and
cmp
xchg
mov
adc
loop
aaa
cmc
and
insl
pop
mov
add
mov
mov
int
psadbw
inc
je
cld
jae
sbb
push
stc
clc
pcmpgtd
stos
stos
repnz
fnsave
arpl
dec
xchg
lds
test
sbb
loopne
cmp
repz
pushw
movsb
xchg
aam
rolb
inc
nop
int
jnp
inc
and
f2xm1
and
xor
movsb
imul
sub
fists
xchg
mov
dec
inc
daa
cli
mov
or
adc
add
rolb
cmp
mov
add
cmp
add
mov
push
sub
test
cltd
push
fildl
jmp
sbb
push
mov
xchg
add
cmp
push
ljmp
inc
aas
hlt
add
and
loopne
adc
les
jecxz
dec
in
sbbl
dec
mov
in
out
divl
mov
inc
mov
mov
inc
push
lahf
xor
inc
sarb
lds
push
cld
inc
mov
int3
pop
xchg
mov
inc
mov
mov
aam
das
pop
push
outsl
movsl
sarl
notb
sub
mov
pop
mov
push
xlat
cld
sbb
out
jae
add
jne
xor
dec
push
xchg
adcb
mov
fdivrl
sub
into
fiadds
xchg
cli
xor
mov
push
push
out
mov
add
icebp
cmp
mov
cmp
xor
into
sbb
or
orl
push
xchg
sahf
mov
adc
jo
jg
fisubs
addr16
fadds
pop
pop
add
mov
pop
dec
dec
xor
dec
stos
xor
cmp
or
xor
fs
sbb
ffree
rcl
in
xchg
mov
in
dec
inc
or
xchg
fwait
pop
repz
in
test
int
rolb
and
adc
push
inc
xchg
lock
mov
test
add
adc
mov
push
out
pushf
adc
and
bound
test
add
or
cmpsb
sti
jo
lcall
pop
hlt
stc
aam
xchg
pop
aam
adc
mov
addl
mov
rol
jno
adc
mov
xchg
cmpsb
test
fldl
jl
push
jb
fld
add
fs
lods
push
or
sub
dec
push
push
jns
jns
ret
mov
aaa
js
shlb
sub
and
cld
aad
jb
push
ror
pop
or
arpl
xchg
push
inc
aam
push
outsl
out
push
pop
mov
mov
aas
push
sub
push
adc
popl
pusha
push
insb
mov
sub
fistl
sbb
sub
int
cmp
pushf
xchg
mov
sub
stc
jmp
clc
mov
cmpsb
inc
inc
out
inc
js
cmp
pusha
xchg
cmp
in
cli
push
dec
add
inc
fistl
clc
jo
adc
sbb
out
add
jmp
pop
adc
orb
jb
sbb
jne
dec
ds
mov
es
lret
push
dec
clc
push
das
pop
and
bnd
mov
and
lret
pop
pop
sti
xchg
push
or
push
hlt
sub
shll
lock
push
dec
adc
xor
inc
cmp
lahf
aad
stos
sub
cmpsb
xor
sbb
sub
das
repnz
push
xchg
stos
mov
repnz
jle
test
push
inc
cmp
xor
adc
push
or
add
cmpsl
cs
mov
into
dec
xor
lock
stc
push
jle
rorl
or
add
adc
pop
fdivrl
mov
fsubr
push
adc
add
insb
inc
sbb
sbb
shlb
jae
push
add
cmpsb
mov
mov
ss
ret
inc
loopne
sbb
jno
or
jg
shr
rolb
std
mov
jmp
movsb
and
mov
stos
in
lret
mov
sbb
imul
pop
jnp
xchg
loope
fsubs
enter
into
pop
mov
pop
je
dec
xchg
dec
test
insb
jecxz
stc
mov
fidivrl
mov
jle
mov
shll
sub
inc
dec
mov
push
sbb
rorl
rolb
jle
stos
add
ret
je
dec
sbb
pop
xor
jno
or
scas
outsb
fwait
sub
iret
xchg
cltd
inc
sti
lods
push
mov
mov
cmp
sub
pop
push
dec
rol
jp
xchg
ljmp
mov
fists
test
inc
push
push
mov
insb
mov
mov
sub
mov
fs
jle
mov
sahf
cmpsl
xchg
cmp
fisttpl
inc
add
out
and
call
dec
inc
popa
popf
stos
dec
mov
inc
adc
mov
mov
adc
jge
in
mov
mov
int
cmp
lahf
inc
sbb
mov
rcr
inc
shlb
enter
xor
aad
fwait
push
frstor
jo
pop
mov
cltd
test
rolb
stos
icebp
lahf
jb
sub
lods
add
and
popf
aas
pop
imul
xchg
lock
jle
jl
dec
mov
lea
push
lret
push
or
pop
test
xor
mov
mov
inc
adc
inc
out
pop
jno
mov
mov
mov
mov
loop
lock
dec
mov
push
dec
inc
xchg
mov
sarb
lret
cmp
adc
rcll
fldt
outsb
push
ja
xchg
repz
adc
leave
push
mov
enter
iret
mov
mov
ret
mov
or
mov
aad
mov
shlb
movsb
maxps
hlt
stc
stos
and
push
ret
sub
loop
lret
sbb
inc
out
aad
movsl
push
arpl
cmp
sti
xchg
cmp
jnp
pushf
movsb
and
mov
sbb
cltd
test
sbb
push
add
cmpsl
arpl
out
outsl
mov
lds
out
inc
inc
add
xchg
test
shr
sbb
inc
je
xor
mov
ret
out
pusha
mov
jge
lcall
dec
and
xchg
sbb
jle
ja
fdivl
aas
arpl
test
cmp
sbb
fs
int
and
aaa
in
pop
xchg
test
mov
mov
arpl
cmpsb
rcll
sbb
sahf
addb
add
xor
push
dec
mov
ss
jg
in
xchg
add
lcall
arpl
mov
sub
or
pop
ja
dec
fiaddl
sbb
push
in
mov
cmpb
cmp
mov
cmp
into
imul
xchg
loop
out
ret
pushl
or
jmp
shl
stos
add
data16
jecxz
push
mov
sub
imul
jbe
aas
popf
in
sbbl
dec
sti
repnz
cmpl
pop
int3
jb
fdivs
add
lods
movsb
xorl
lahf
xor
addr16
pop
xor
inc
mov
imul
xchg
mov
add
in
cld
enter
inc
sbb
stc
dec
fsubrs
mov
lods
push
iret
cmp
cli
jmp
cs
mov
popl
es
in
xor
repz
adc
ret
mov
mov
notb
subb
xor
shll
scas
insl
mov
repz
sub
adc
out
lods
dec
jge
sbb
lods
mov
dec
imul
cmp
in
sbb
or
sub
das
jle
fwait
in
add
pushf
sub
push
les
xchg
in
into
aaa
adc
push
jno
push
into
fwait
lcall
aas
push
mov
inc
ret
arpl
mov
sub
test
scas
push
cld
rolb
inc
cmp
xchg
popa
jo
nop
mov
inc
je
icebp
popf
pop
adc
push
sub
jbe
sbb
imul
pop
out
xchg
outsl
and
jns
xor
and
xchg
mov
pop
mov
out
imul
pop
push
loop
cmp
aaa
outsl
mov
sub
nop
dec
es
pop
jge
jae
lahf
and
sbb
inc
or
jns
rorb
jne
addr16
add
jge
stos
pop
xor
sbb
xor
sbb
les
push
mov
and
xchg
xchg
loop
jb
mov
popl
ja
xchg
pop
lock
int3
enter
jge
adc
jge
loope
pushf
ja
dec
sub
and
add
xor
push
or
shlb
mov
and
mov
stos
int3
test
xchg
pop
fists
call
jle
push
dec
jns
jp
fmul
outsb
or
jne
call
push
inc
jo
xor
push
mov
test
fcompl
andb
jecxz
test
insl
popf
loopne
leave
push
maskmovq
negl
fisttps
popa
mov
stc
jb
jmp
push
scas
test
rcrl
bound
fnstsw
or
pop
and
inc
cmc
or
cmc
pop
arpl
push
pop
dec
push
jle
repz
xor
cmpsl
xchg
and
cmpsb
jmp
jp
jno
ljmp
rclb
mov
push
lcall
out
cltd
jno
xchg
aas
mov
fsub
adc
sub
mov
loop
std
clc
in
cmp
and
rorl
or
arpl
mov
loop
add
mov
retw
mov
sub
fldcw
push
inc
add
xchg
sub
rol
jne
sarb
mov
not
xchg
imul
pushf
pop
fcomip
lea
mov
fstpl
add
push
xchg
adc
subb
inc
imul
mov
xor
xlat
leave
ljmp
push
ljmp
sbb
xor
scas
and
fimull
addr16
push
sub
stc
pop
insb
jns
pop
jg
add
push
int
les
mov
fucomip
mov
rcrl
fdivs
roll
mov
cmpsb
mov
sbb
pop
out
inc
xor
jge
hlt
ficoml
inc
insb
clc
out
fldl2t
lcall
rorl
and
mov
pop
push
push
repnz
sub
sar
pop
sti
dec
push
out
push
sahf
inc
pop
je
sbb
fisttpll
sub
sub
hlt
andb
pop
les
sbb
cmp
cmc
inc
jl
sub
mov
xor
ds
mov
shrb
pop
jne
mov
movsb
mov
mov
in
stos
add
dec
bound
fistps
mov
pop
or
cwtl
cmp
inc
xchg
or
cmp
sar
addr16
cmovnp
mov
xchg
and
xchg
xchg
mov
cltd
add
shrl
mov
push
push
xorl
xchg
xchg
xchg
lods
mov
sub
dec
xor
and
push
or
sbb
test
sahf
leave
adc
aaa
sbb
dec
inc
fildll
jno
xor
fildl
sub
jb
addl
add
sbb
pop
out
mov
pop
pop
ret
pop
mov
call
xchg
or
stos
mov
imul
xchg
mov
add
lods
imul
jbe
mov
xchg
lods
out
pop
xchg
std
mov
cmp
cmp
pop
stos
cmc
sub
jbe
or
pushf
jp
ret
sbb
nop
fwait
mov
movsb
das
push
pop
add
hlt
sub
pop
sbb
sbb
mov
enter
mov
dec
dec
or
adc
xor
adc
sbb
out
mov
mov
daa
cmp
push
andl
push
fcomip
dec
sub
loop
imul
pop
xor
and
inc
mov
sub
mov
testl
cmpl
ss
pop
lock
sbb
icebp
cmp
insb
adc
push
pop
jle
xchg
fs
imul
push
jg
das
jnp
jp
lret
icebp
sti
fstpl
popa
das
xchg
das
sub
mov
xor
es
out
fs
fnstenv
dec
movsl
mov
push
mov
mov
bound
push
ljmp
xchg
inc
xchg
movsl
in
xor
out
sbb
cmc
sbb
push
mov
add
int3
ss
mov
push
cld
rclb
push
inc
jg
dec
sti
push
imulb
and
aas
jns
nop
dec
pop
push
jg
decl
in
scas
in
cmp
inc
mov
hlt
xor
mov
adc
arpl
mov
xor
xchg
hlt
sbb
mov
pop
test
insb
dec
sub
jmp
movsl
shr
fisubs
cmp
sbb
xchg
mov
add
ror
in
les
iret
cli
shr
lds
mov
je
xor
loopne
scas
test
inc
mov
xor
fsubrs
cld
inc
sub
repz
mov
xor
xorl
clc
push
push
hlt
cmp
xchg
xor
jo
push
cmpb
jg
pop
sub
out
or
push
outsl
adc
popf
in
out
and
adc
insl
imul
loope
pop
loop
inc
ds
cltd
test
insl
clc
sbb
out
xor
loopne
cmpsb
lret
mov
out
ret
cld
mov
pop
mov
cmp
test
push
xchg
push
sbb
sti
subb
add
in
outsl
dec
adc
jp
scas
adc
xchg
clc
popf
je
sub
adc
aam
inc
add
cs
or
or
loop
inc
int3
out
jbe
jle
pop
inc
lret
cmc
mov
pop
mov
xchg
cli
leave
push
mov
je
into
push
pop
loopne
hlt
ror
cmpl
inc
mov
push
repnz
fsub
add
cltd
and
in
add
push
jo
js
jbe
lods
jae
stc
je
cs
mov
pop
dec
push
fnstsw
test
ds
push
adc
fimuls
add
inc
pop
pop
mov
int3
adc
cmpsb
jg
clc
sub
hlt
scas
stc
shll
jmp
jmp
fldt
add
insb
jns,pt
mov
cmp
or
push
mov
push
pop
sub
loope
xchg
in
pop
mov
lds
sbb
loopne,pt
pop
sahf
imul
out
test
jb
pushf
mov
dec
sbb
es
repz
mov
dec
stos
add
xor
int
and
inc
jl
bswap
and
push
or
sbb
jp
push
dec
popa
pop
adc
cmp
mov
into
inc
mov
cltd
push
xor
subb
mov
divl
popa
sub
test
fildll
mov
xor
mov
lods
aaa
daa
and
out
or
cli
aam
inc
daa
xor
inc
adc
and
cwtl
arpl
pop
and
push
bound
mov
pop
cmc
mov
mov
insl
mov
sub
jl
in
aaa
lcall
xchg
jecxz
orl
testl
notl
imul
dec
cld
sbb
cmp
pop
push
jns
outsb
add
pop
fldl
mov
fcompp
cs
lods
or
ret
iret
mov
mov
sbb
and
pop
mov
lods
xchg
int3
ljmp
jbe
jbe
inc
fcomps
pop
mov
scas
inc
ljmp
lods
data16
movsb
cmp
pop
aad
xor
popa
jle
mov
or
fisubs
aam
sub
test
sub
mov
sbb
iret
pop
dec
in
pop
or
in
inc
jge
lret
pushf
or
or
jb
or
jg
mov
inc
cmpsb
cmp
add
hlt
bound
enter
dec
aas
push
pop
pusha
stos
es
int3
adc
and
lcall
sub
repnz
std
icebp
bound
in
jb
aam
iret
cmpsb
and
scas
andl
cmp
xchg
sbb
mov
mov
mov
fsubrl
enter
sti
push
inc
ds
lods
inc
jecxz
add
or
ss
xor
xlat
push
insb
fmul
sub
and
mov
sahf
inc
aaa
inc
cmpsb
adc
cmc
negb
pop
or
shlb
jp
iret
pushf
pop
mov
repnz
xor
jp
stc
scas
push
xchg
or
ljmp
or
loop
pop
xchg
inc
pop
mov
dec
int3
stc
inc
stos
insb
xor
pushf
jne
inc
pop
xchg
inc
call
sub
ds
jno
push
repnz
ret
adc
and
lahf
lahf
add
sub
mov
push
shrl
mov
inc
jmp
pop
leave
mov
adc
scas
inc
xor
cmpsl
mov
out
repz
ja
popa
jg
xchg
push
mov
and
cmpsl
adc
sub
in
fnstcw
je
xchg
in
setnp
sub
flds
aad
xor
lcall
mov
and
sub
ret
mov
mov
sbb
and
xor
frstor
mov
xchg
mov
rorb
adc
add
fstps
adc
ret
pop
sbb
adc
jne
pop
push
scas
stos
inc
ficoms
clc
enter
add
popa
addr16
ja
imul
sbb
push
test
ds
pop
rclb
push
mov
shl
nop
xor
mov
sahf
sbb
test
cmpl
push
mov
jo
mov
call
add
xchg
push
add
movsl
out
adc
cmp
scas
into
pop
aad
ret
aam
push
dec
push
imul
test
push
mov
add
inc
dec
sbb
stos
pop
out
mov
push
sub
lods
mov
adc
sub
xchg
mov
les
lahf
sbb
stc
dec
pusha
notl
arpl
cmp
push
filds
xor
psadbw
mov
aaa
lock
xlat
or
repnz
loope
stos
sbb
cmp
nop
pop
pop
mov
movsl
ljmp
cli
pop
leave
jnp
mov
cmp
sahf
sub
ret
cmp
gs
xchg
xchg
cmpl
jle
ret
inc
scas
rsm
jb
xchg
pop
pop
addb
and
mov
xchg
shrl
cli
mov
cwtl
xchg
push
daa
bound
std
dec
sti
mov
cwtl
mov
pop
imul
xchg
mov
nop
lock
inc
sahf
mov
and
jge
inc
das
ja
ss
jns
out
pop
ds
sbb
jmp
or
nop
sbb
push
repz
push
ret
scas
scas
std
or
cmpsl
mov
pusha
int
push
ret
dec
scas
inc
movq
pop
andb
int3
dec
fisttps
sahf
mov
aad
scas
mov
lahf
icebp
mov
xchg
fsub
sub
enter
insb
jge
sbb
mov
test
cmc
mov
in
cmp
stos
in
mov
js
push
pop
dec
fs
inc
adc
inc
cmp
sub
mov
out
aaa
pop
lds
or
mov
mov
add
fdivrs
mov
jnp
cmpsl
pop
xor
and
mov
pop
xchg
fisttpll
lret
out
aam
fildl
push
fcoml
hlt
inc
push
and
or
or
scas
or
pushf
push
aas
pop
inc
repnz
ficoml
pop
ss
out
add
daa
and
dec
push
push
jnp
sub
test
stos
mov
imulb
cld
ret
inc
lahf
outsb
shlb
negl
popf
pop
shlb
movhps
adc
movsb
addr16
arpl
xor
jbe
out
mov
adc
sbb
pop
push
addr16
sub
mov
mov
dec
mov
das
sub
bound
cmp
fwait
mov
add
jp
sahf
loope
add
mov
mull
and
add
push
or
sahf
test
or
fs
loopne
popf
addl
xchg
int
iret
lock
stc
mov
gs
aas
mov
adc
gs
or
out
cmpsb
cmpsl
mov
scas
dec
mov
push
dec
stos
sbb
cmc
push
imul
add
sub
lods
inc
ljmp
pop
inc
aad
aas
das
in
mov
inc
sub
sub
xor
addb
sbbl
pop
aaa
in
loopne
int3
push
add
adc
lcall
sub
adc
mov
mov
adc
lret
mov
and
lret
jo
loope
push
cmp
jns
push
loope
mov
mov
mov
cld
nop
or
fistpll
xor
pop
mov
sbb
pop
outsb
xlat
stos
inc
ds
bnd
fldt
or
dec
mov
clc
adc
popf
sbb
pop
and
and
fucomp
pop
or
sti
aaa
adc
test
ret
pop
add
lock
mov
repnz
push
push
jp
sahf
sbb
cmp
lcall
and
mov
pop
or
pop
pushf
je
sbb
fwait
sbb
inc
xchg
es
fmuls
mov
mov
aam
push
mov
sbb
inc
pop
xchg
xchg
cmp
shl
sbb
decl
jbe
es
mov
jo
je
and
xchg
push
lret
clc
jecxz
clc
fs
xor
jno
adc
aaa
jecxz
xchg
fnstsw
jmp
mov
sub
push
mov
nop
fbstp
pop
dec
cmp
adc
mov
sub
pop
popf
dec
test
sub
addb
jne
test
pop
cmc
dec
add
xor
push
js
xchg
dec
lret
sbb
addl
pusha
mov
jecxz
loop
mov
scas
jno
std
sbb
mov
es
mov
and
ficomps
in
xor
pop
mov
cs
daa
icebp
mov
pop
add
aaa
pop
xor
add
xor
or
sub
mov
mov
js
out
mov
pop
jp
in
inc
mov
mov
inc
sbb
lahf
sahf
mov
dec
test
jne
pop
mov
push
jge
fs
ficompl
loopne
jae
sub
fwait
cmp
mov
stos
pop
enter
std
pop
sbb
mov
fsubs
mov
loop
or
sbb
dec
mov
popa
xor
inc
push
aaa
xor
and
rcrl
lds
in
adc
call
push
cmp
pop
xchg
cmp
dec
int3
sub
and
out
pushf
jmp
flds
xchg
push
add
ret
jmp
es
dec
xor
cmc
dec
ss
push
mov
mov
inc
test
push
sbb
mov
stos
jb
pop
jg
sub
sbb
xchg
xor
xchg
jecxz
cmpsb
insl
jp
pop
xor
inc
sahf
sti
lds
or
add
inc
jmp
leave
jle
jl
icebp
or
cmpsb
sub
mov
jg
push
hlt
sbb
mov
mov
fnstenv
cmp
in
jge
aad
cmp
mov
sub
int
lcall
pop
mov
pop
loop
mov
rorl
scas
ret
jb
clc
mov
sbb
mov
int
push
adc
add
cwtl
add
decb
xor
lret
sarb
sub
test
push
sub
data16
mov
data16
rsm
in
jp
jp
jno
cwtl
ret
ds
das
and
add
sahf
sub
xor
sub
cwtl
cmp
rclb
neg
pop
es
pop
fdivr
shrb
push
popa
imul
int
inc
xor
fstps
movsb
pop
out
xchg
sub
mov
and
nop
add
daa
sub
xor
addl
test
in
cmpsl
arpl
cmp
test
inc
call
lock
jnp
jne
pop
ficompl
pop
mov
shl
dec
add
cli
inc
jle
outsb
outsb
dec
cmpsl
cwtl
scas
adc
push
add
sbb
leave
mov
lock
mov
pop
outsl
fiaddl
aas
cmpsl
insl
mov
js
push
scas
call
add
mov
cmp
ljmp
aam
mov
adc
aad
fcmovbe
cli
push
loopne
aas
mov
jb
dec
mov
subl
jge
fcos
xor
cmpsb
xchg
fdivs
sbb
lahf
dec
out
cmovns
hlt
inc
or
loopne
inc
xchg
jmp
add
iret
lahf
clc
gs
sub
xor
push
frstor
inc
arpl
jmp
outsl
out
pop
aas
int3
sub
dec
push
add
test
pop
mov
nop
in
fs
inc
add
mov
pop
loopne
jmp
xchg
lcall
aad
push
xor
push
mov
repz
lea
jge
jbe
lret
mov
cmp
sti
xlat
test
xchg
les
sbb
cltd
cmp
aad
hlt
hlt
jae
addr16
mov
cs
mov
dec
mov
jmp
divb
outsb
popa
outsl
cmp
xlat
dec
mov
popa
cmp
add
fwait
inc
jns
sub
or
xchg
pushf
inc
cmpsl
jge
add
ljmp
test
jge
xor
xor
repnz
cmp
pop
cltd
lods
cltd
fmull
les
mov
out
add
sub
cmp
inc
mov
jg
cmp
cli
fsubrs
lods
cmp
data16
xor
jmp
inc
sbb
jge
int
inc
cmp
enter
ret
insb
je
imul
ds
sbb
lods
xor
repnz
fcomi
xor
ja
cld
jo
ret
fisttps
subl
xor
out
adc
daa
nop
or
jno
adc
test
shlb
repz
pop
xchg
ficomps
std
jp
jne
xchg
rcrb
xchg
sbbl
sbb
insl
jnp
cwtl
subb
mov
aas
xchg
pop
sbb
out
mov
jle
outsl
fisttpll
xor
imul
sahf
mov
sbb
jne
andb
test
adc
push
fwait
push
arpl
jne
jmp
mov
cli
fmuls
add
mov
loope
movsb
add
ds
dec
orl
lret
cmp
lret
sbb
pop
movsb
sub
iret
add
stc
jle
sub
pop
xchg
push
idivb
pop
mov
ss
mov
nop
sbb
jnp
addr16
mov
inc
dec
lods
xor
insb
cmp
clc
mov
pusha
mov
add
js
cmc
js
pop
sub
les
nop
into
xor
add
xchg
jmp
xchg
cmpl
dec
mov
or
mov
mov
pop
shl
ret
dec
mov
stc
jno
leave
and
dec
fldenv
lret
mov
dec
pop
jmp
dec
xlat
out
mov
ljmp
dec
push
dec
jae
add
ret
fmulp
pop
and
lock
and
add
xchg
pop
sub
std
mov
push
stos
push
mov
je
add
or
xchg
stos
outsl
sub
lahf
jp
scas
ljmp
ret
push
in
mov
loop
push
addl
adcl
popa
add
mov
xor
fbld
dec
add
cmc
and
outsb
aaa
into
jne,pn
adc
dec
dec
push
add
inc
or
lret
sbb
jb
lea
sbbl
scas
mov
lds
mov
jbe
push
push
sbb
mov
das
mov
xor
jmp
aad
cltd
mov
jmp
sub
test
mov
pop
adc
cmpsb
push
add
mov
adc
xor
cmpb
lods
inc
out
push
sti
pop
inc
lret
xor
cmp
mov
rorb
cmc
mov
adcb
push
je
xchg
mov
and
and
push
and
mov
sbb
mov
dec
xor
xchg
testb
lods
decb
or
and
daa
push
daa
fistpl
adcl
inc
stc
repz
loop
pop
pop
adc
fisubrl
or
filds
std
sub
jae
pop
ret
cltd
loop
push
sahf
stos
mov
push
pop
mov
xor
daa
xor
mov
push
int3
jo
fxch
std
nop
ficomps
sub
aad
mov
push
cmp
mov
pushf
into
adc
sbb
sub
lods
sbb
repz
mov
mov
stos
xchg
dec
adc
std
movsl
mov
lret
pop
data16
inc
dec
mov
out
ds
pusha
mov
mov
int
arpl
in
mov
test
iret
add
cmp
mov
lods
jp
sub
lahf
push
cmp
mov
fwait
cmp
jbe
addr16
pop
jg
cmpsb
push
rcll
mov
mov
jmp
xchg
cmp
sahf
sub
mov
or
add
cmp
adc
loopne
test
sub
test
adcl
xor
push
lods
mov
push
data16
loopne
test
mov
roll
or
outsb
mov
mov
push
icebp
mov
mov
fsubr
mov
lock
sbb
leave
jle
xchg
stos
adc
xchg
cmp
jecxz
icebp
jnp
mov
xchg
fidivl
jge
into
ss
mov
push
add
loop
ja
int3
inc
nop
outsb
movsl
mov
jno
imul
and
xor
lahf
jmp
fsub
lock
int3
lcall
xor
aam
push
cmp
or
sbb
shlb
in
neg
jmp
jns
das
addb
xchg
push
fcmovb
js
sub
jge
jmp
mov
dec
test
inc
or
rcr
and
inc
adc
pop
dec
cmpl
outsb
idiv
pop
fimull
pop
ret
insl
cld
push
add
mov
or
out
cmp
dec
int3
out
mov
pop
push
pop
aaa
adc
mov
neg
incb
pop
add
data16
sub
sbb
mov
push
mov
shld
inc
test
mov
mov
mov
cmp
pop
jbe
sbb
inc
scas
frndint
jg
push
out
aaa
lea
in
fsubp
out
out
pop
mov
outsl
xchg
inc
inc
xchg
js
je
mov
jp
inc
adc
aaa
jp
nopl
sub
adc
dec
stos
push
lret
xchg
testb
inc
mov
xlat
cmc
sub
movsl
xor
xchg
mov
flds
ss
insl
mov
aaa
lret
iret
mov
cmp
in
in
dec
push
adc
jbe
mov
and
test
push
adc
jle
fs
jg
fld
push
push
mov
and
addl
testb
shlb
push
sub
pop
call
mul
jbe
mov
stos
sbb
imul
mov
mov
mov
cwtl
mov
rcrl
shrl
jbe
imulb
mov
push
xchg
push
cmc
add
sbb
xchg
int
clc
orw
or
and
lock
adc
fs
ss
negb
xchg
adc
notl
add
lcall
xchg
faddl
div
dec
xchg
inc
sbb
jl,pt
mov
lcall
stos
jo
popf
leave
dec
cmp
xchg
xor
jle
nop
mov
fistl
lods
outsb
or
push
or
aam
lret
iret
and
xchg
enter
test
bound
adc
add
push
gs
xor
out
xor
sub
jecxz
or
add
xlat
inc
xor
cwtl
cltd
test
outsb
leave
aam
insb
out
lods
pop
cmp
mov
lcall
add
shll
rcl
inc
mov
stc
pop
subl
lods
adc
sbb
or
jno
mov
jl
mov
sub
inc
mov
cltd
push
cmpsl
test
inc
fsubrl
je
scas
ret
pop
sub
inc
cwtl
and
jp
xchg
scas
or
jo
shlb
adc
sbb
sub
mov
xor
repz
mov
adc
pop
leave
shlb
inc
and
in
mov
or
xchg
mov
or
sbb
pop
and
adc
adc
aad
mov
sbb
dec
imul
inc
loop
or
popa
pop
mov
fdivrl
sub
insl
or
mov
inc
push
leave
push
inc
scas
cmp
hlt
bnd
push
and
xchg
mov
popa
test
cmp
dec
jle
in
mov
mov
lret
xor
and
js
push
test
inc
mov
int
jnp
mov
dec
dec
xchg
fwait
jl
dec
out
mov
or
adc
rclb
pushf
scas
call
cwtl
sti
lods
ja
ds
inc
lods
push
jns
lds
pop
inc
scas
pushf
pop
pop
in
push
ds
out
sbb
lea
mov
push
jmp
xor
adc
xchg
or
dec
xor
fstpl
push
mov
cmpsb
ja
xchg
pop
sarb
jp
and
mov
mov
outsl
cmp
sti
dec
in
jl
sahf
negl
inc
cltd
xor
add
fwait
icebp
mov
jns
in
inc
push
push
adc
mov
mov
ret
xorb
push
in
and
int
mov
mov
adc
jmp
js
xchg
and
mov
test
pop
dec
int
or
mov
dec
sbb
insb
rorl
mov
fsubl
nop
std
adc
cmpsb
jns
sub
or
sub
xor
lods
mov
mov
or
inc
mov
ja
jge
mov
ret
nop
sub
sub
jmp
fnclex
stc
or
inc
sbb
daa
fld
jp
adc
push
and
push
lcall
insb
ljmp
scas
int3
cmpsl
inc
xchg
ror
sbb
ds
mov
mov
or
out
loopne
fstps
mov
and
fnstsw
cmp
lcall
gs
cs
ss
sub
rcrl
jmp
lret
pop
call
mov
popf
imul
enter
or
add
es
mov
outsb
gs
cmpsb
stc
iret
aaa
cli
fwait
movsl
sbb
fldenv
je,pn
lods
mov
dec
mov
cmpb
out
mov
les
pop
pop
ljmp
dec
sbb
inc
pop
icebp
movsl
sbb
jecxz
ja
cltd
push
sbb
mov
mov
adc
push
push
sbb
test
cmp
mov
xchg
mov
out
adc
mov
mov
dec
jae
adc
xchg
dec
push
je
push
sub
mov
in
out
cmpl
iret
scas
cmpsb
outsb
lea
call
jmp
int
push
push
push
jg
pop
sbb
fcompl
push
cmpsl
fistl
mov
loopne
or
jb
lcall
push
in
daa
pop
pop
mov
sbb
dec
sub
mov
out
je
orb
js
add
cmpsl
cs
icebp
or
jl
push
int3
xor
aad
daa
loop
inc
data16
mov
pop
movsl
and
repz
pushf
jb
cmpsb
mov
outsb
out
cs
loopne
dec
loopne
addl
xor
daa
ss
int
mov
inc
into
mov
xor
mov
iret
cs
int
lock
in
lahf
cmpsb
and
aaa
nop
jae
jb
push
scas
mov
movsb
mov
push
cmp
pushf
push
jne
push
je
call
js
aaa
xchg
xor
pushf
inc
sti
in
ljmp
subb
mov
mov
outsb
mov
sbb
loop
cmpsb
inc
mov
addl
mov
inc
push
int3
rorb
cmpsb
add
iret
loope
cli
dec
xchg
lret
loopne
das
repz
scas
in
daa
and
cmpb
mov
out
push
sbbl
mov
push
in
clc
sub
dec
out
ja
or
jecxz
adc
aam
loopne
cmp
std
pop
hlt
jb
out
xor
std
fnstcw
cli
sahf
imul
mov
insl
mov
cli
out
sbb
push
jbe
dec
call
out
dec
jg
stc
push
jb
stos
pop
push
dec
xor
sbb
inc
lods
mov
imulb
mov
nop
mov
adc
mov
int
xchg
pop
in
xor
sbb
cltd
mov
dec
jmp
mov
in
mov
add
fnsave
add
push
test
pop
fs
outsl
push
sbb
xor
mull
clc
jp
pop
sub
rcrl
aaa
arpl
cmp
mov
jecxz
sbb
mov
push
pop
lds
xor
mov
out
mov
lahf
fldenv
and
add
cld
in
pop
mov
xor
add
xchg
sar
push
rcl
sar
in
jp
lods
aam
mov
mov
out
scas
ljmp
fcomip
push
push
pop
sbb
aaa
outsb
insl
cmp
jns
inc
or
xchg
gs
push
push
notl
roll
add
mov
fwait
addr16
cltd
sub
dec
or
jl
pop
shl
mov
mov
out
jns
les
jg
adc
pop
mov
movsb
jle
add
mov
lock
push
mov
rorl
sbb
jo
push
ret
and
cmpsb
cmp
xchg
fcoms
push
insl
cmpsb
repnz
or
call
jno
push
sub
and
pop
test
pop
popf
or
in
jg
mov
sub
ja
cmc
push
dec
les
sar
mov
dec
adc
inc
cltd
cld
mov
pop
mov
cmc
jecxz
cmp
jp
stc
sahf
xor
add
repnz
in
or
mov
gs
ss
test
out
call
std
fildll
pop
cld
and
add
cld
pop
imul
cmp
add
sbb
dec
inc
ljmp
cwtl
call
add
mov
or
push
shlb
push
inc
movsl
xor
sub
xchg
mov
cmc
add
hlt
sub
jecxz
ret
loop
and
popl
loop
shrl
scas
sbb
pusha
jmp
adc
incb
popa
daa
rol
dec
xorb
getsec
xchg
cli
sbb
sub
sub
sbb
aam
lods
xlat
loope
testl
add
outsb
inc
xchg
sub
clc
inc
adc
out
pop
ljmp
mov
notb
inc
xchg
sub
int
cmpsl
pop
inc
movsl
sarb
add
mov
mov
jmp
mov
orb
adc
stos
in
cmp
jnp
loopne
mov
push
cwtl
or
push
je
cwtl
push
sbb
ror
adc
xchg
into
lea
clc
int3
test
push
sub
xchg
cmp
in
repz
cmp
jg
scas
in
mov
lock
or
cli
or
dec
sbb
bound
xchg
bound
adc
mov
lea
imul
xchg
inc
jo
lock
sti
and
ss
sbb
jmp
add
shld
jmp
pop
inc
cmp
fmul
cmp
in
and
insb
jno
das
mov
jg
inc
into
sub
mov
adc
cmp
jb
mov
xor
subl
xlat
mov
push
scas
cmp
cld
cmp
sahf
add
cmpsb
xor
jle
repz
mov
in
dec
lahf
cmp
add
insl
adc
shrb
repz
dec
cmp
stos
jge
popa
add
inc
out
lods
push
fimuls
sar
ja
cmpsl
dec
and
outsb
xchg
inc
outsb
mov
into
stc
jmp
movsb
or
nopl
mov
repnz
mov
fsubrl
mov
stos
adc
popa
and
mov
hlt
pop
movsb
cmc
and
add
adc
xor
lock
popf
jle
cmp
and
test
das
inc
dec
mov
adc
scas
mov
jg
lods
clc
pop
sarl
out
out
ret
call
push
push
dec
jmp
add
mov
leave
outsb
xor
adc
repz
es
jne
push
xchg
hlt
jl
dec
xlat
js
iret
jns
add
adc
cmp
push
insb
jae
jbe
insl
ja
stos
adc
jne
xor
mov
mov
xlat
dec
in
negl
push
cmp
in
aas
test
cmp
or
dec
mov
sub
fdiv
enter
dec
shl
xor
xchg
jge
xor
fcoml
fs
lods
pushf
xchg
test
push
roll
sub
jecxz
push
outsl
add
pop
mov
push
cwtl
mov
dec
adc
mov
jmp
outsb
xchg
add
jl
and
mov
insl
cmpsl
shlb
adc
in
push
data16
mov
test
cmpsb
pop
aas
pop
mov
xchg
lock
imul
shr
sahf
cmpsb
fstpt
pushf
push
adc
sbb
sti
jno
shll
cmc
test
inc
and
jmp
jne
rolb
outsl
insb
lret
xor
mov
add
mov
add
and
add
add
add
in
add
mov
add
out
add
cmp
add
add
pusha
sub
add
dec
cs
sub
leave
gs
xchg
int3
mov
lret
inc
xchg
shlb
cmp
decl
or
adc
stc
testl
dec
subl
xor
cmpsb
dec
enter
push
test
pusha
mov
das
imulb
jns
push
mov
and
mov
cmpsl
test
cmpsl
and
push
bts
pop
mov
repnz
jl
push
test
imul
arpl
sub
sbb
push
push
pop
xchg
fwait
rcll
and
or
mov
sbb
sub
fidivrs
jle
mov
mull
fcoms
sbb
scas
int
mov
mov
mov
xor
xchg
shr
sahf
cmp
lret
pop
or
xchg
fnstsw
mov
lea
pop
insb
cmp
adc
push
iret
add
ror
aas
xor
dec
iret
xor
jg
loopne
ficomps
orl
or
push
mov
call
dec
jnp
sub
jmp
cmp
push
out
outsl
cli
mov
adc
jne
in
hlt
push
sti
pop
xor
sbb
fcmovnu
ret
in
idivb
std
sbb
ljmp
cmp
jnp
mov
int
add
shll
addb
pop
pop
inc
cmp
jo
fwait
loope
mov
adc
loopne
or
shlb
inc
mov
push
adc
xchg
ror
sbb
add
or
sub
mov
and
push
test
mov
mov
push
dec
cli
pop
add
icebp
movl
nop
sti
xchg
adc
repz
push
mov
jl
pop
dec
fxch
push
sbbb
mov
inc
adc
fwait
loop
lahf
das
ja
repz
sub
scas
shlb
push
popf
push
repnz
std
jae,pt
push
lods
push
add
out
pushf
mov
imul
sbb
xchg
hlt
or
and
test
cmpsb
sbb
push
jns
popa
scas
adc
sbb
popf
xchg
cmp
ljmp
cmpsb
jp
jns
sub
inc
stos
pop
fimuls
ja
test
cwtl
icebp
cmpsb
pusha
or
xorl
cmp
cmp
cs
incl
mov
in
add
mov
adc
or
das
movsb
int
or
cwtl
mov
pop
mov
or
lods
sub
cmp
ja
rcl
fistpl
inc
icebp
cmc
pop
movsb
lcall
lods
mull
xchg
out
inc
or
push
test
mov
data16
cmp
fwait
subb
imul
mov
lock
xchg
jb
xchg
loopne,pn
mov
mov
cltd
sbb
lods
xchg
sub
dec
icebp
and
pop
jbe
dec
dec
je
mov
inc
mov
inc
push
xchg
in
mov
in
mov
pop
and
call
notl
jecxz
and
pop
std
icebp
dec
repnz
movsl
jmp
cmp
out
xchg
in
sbb
in
jne
and
inc
mov
icebp
lret
inc
cmp
imul
imul
push
xchg
mov
pop
dec
and
in
data16
sbb
mov
daa
push
rclb
out
stos
insb
cld
aaa
mov
push
xchg
dec
jge
or
frstor
ss
dec
repz
mov
dec
in
popa
sahf
out
pop
popf
or
pop
cltd
fs
aam
sahf
sub
xchg
sahf
or
or
pop
mov
shlb
push
hlt
ret
mov
xor
sub
leave
pop
xor
fdivl
mov
xor
add
mov
test
jg
aam
insl
xor
inc
das
popa
lahf
hlt
shrb
popf
nop
pop
into
lret
push
mov
jb
pop
mov
dec
imul
stc
in
pop
gs
pop
pop
mov
sbbl
push
mov
outsl
stos
idivl
ja
xchg
sub
dec
mov
sub
jno
outsl
pop
dec
dec
in
or
movsl
sub
push
mov
xchg
aam
out
cmp
gs
jmp
pop
test
adc
mov
pop
pop
test
and
mov
nop
push
pop
cltd
push
or
push
push
xchg
loop
das
mov
xchg
adc
xchg
cmpb
cmp
cmpl
xchg
cwtl
clc
rcl
push
cltd
insl
xor
mov
scas
jg
mov
sub
mov
pop
xor
mov
mov
jp
cmp
adc
mov
addr16
jb
loope
mov
jmp
sbb
nopl
or
shr
test
loope
loopne
shr
loopne
popa
lods
mov
rol
daa
bound
jmp
into
in
dec
xor
jle,pn
inc
sub
xor
or
fisubrl
mov
jns
lcall
mov
dec
leave
sahf
push
push
jns
inc
jae
sahf
fxch
jnp
lods
mov
xchg
mov
and
mov
mov
test
mov
movsl
mov
cmp
into
mov
mov
nop
in
in
mov
ficoml
outsb
xchg
fdivrl
mov
ret
rorl
or
movsl
arpl
sti
inc
xor
icebp
or
pop
sbb
jo
adc
decl
dec
mov
pusha
mov
out
add
mov
push
sbb
mov
daa
and
cmp
cmp
fs
dec
test
cmc
xor
mov
push
cmp
lods
aad
jb
adc
adc
sti
fs
hlt
ret
imul
into
mov
aam
adc
in
inc
les
std
mov
pop
movsl
push
sbb
mov
scas
and
mov
test
and
dec
xor
clc
fsubrs
in
mov
mov
push
lahf
mov
outsl
fwait
mov
aad
fwait
arpl
call
sti
ret
fs
and
ss
repz
shl
mov
mov
pop
mov
xchg
adc
jle
enter
negl
movl
jle
adc
ret
mov
push
xor
dec
movsl
xor
sti
neg
xchg
add
clc
repnz
sarb
xchg
jg
xor
dec
subb
stos
hlt
xor
movsl
or
mov
inc
daa
lahf
mov
adcb
push
pop
push
inc
loope
ficomps
cmpsl
shlb
int
or
call
cmp
int
aaa
or
or
push
xor
sbb
sub
lret
pop
mov
xchg
iret
enter
int
shrb
pop
adc
adcb
or
push
test
adc
pop
in
jge
pushf
or
test
in
mov
ficoml
aam
fistpll
shlb
pushf
sub
scas
pop
push
push
std
jne
lret
cltd
testb
test
mov
pop
xor
and
fbstp
mov
adc
adc
mov
or
mov
addr16
test
mov
dec
adc
pop
or
shll
jg
stc
ret
inc
dec
mov
xchg
mov
or
ret
loop
mov
adc
dec
mov
lahf
jo
inc
xchg
adc
ss
jle
dec
pop
popf
insl
fisubl
add
add
in
add
inc
cli
sub
insb
push
cld
push
jne
imul
fxch
nop
add
sbb
test
mov
jg
fnstenv
das
or
rcll
or
xchg
and
cmp
imul
or
cmp
lcall
ja
push
jnp
inc
xchg
lea
stos
addb
xor
sub
push
outsl
lock
mov
jle
shl
popf
adc
call
dec
aad
das
cli
mov
cld
shlb
aas
or
flds
repz
xchg
or
push
inc
insb
or
jnp
add
loopne
gs
mov
das
add
mov
xlat
add
jmp
aam
out
xor
xor
in
enter
xor
aam
cmp
and
je
lahf
dec
je
mov
sarb
cmp
xlat
push
sti
ret
xor
bound
dec
mov
mov
clc
es
jle
ror
pop
push
mov
inc
ljmp
cmp
rol
bound
cmc
mov
lods
add
dec
arpl
xchg
loop
pop
loope
dec
mull
repnz
test
push
lcall
mov
mov
sub
dec
insb
ret
mov
sti
jmp
aas
mov
mov
sti
cmpb
jo
pop
sbb
jmp
scas
enter
scas
loop
clc
xor
cmpsl
push
jmp
jle
or
movsb
dec
jle
inc
jmp
and
out
pop
xchg
shll
adc
je
hlt
inc
push
icebp
je
sub
or
je
shlb
xchg
dec
xchg
xor
fdivrl
push
loopne
jnp
cli
xor
ja
daa
aaa
movsb
adc
or
sbb
ljmp
loope
jbe
lcall
dec
sub
shll
and
mov
and
cmp
fidivl
mov
and
in
mov
push
jno
push
or
das
out
mov
lock
movsl
outsb
into
sub
sbb
out
out
in
add
inc
sbb
insl
test
gs
sbb
mov
jmp
push
movsb
mov
pop
sarb
dec
fldl
loop
inc
jge
outsl
mov
cmpb
aaa
xor
shrb
jns
test
xor
mov
in
adc
push
sbb
inc
mov
jb
fwait
lcall
mov
repnz
push
xor
lahf
imul
jbe
into
sub
in
int3
lret
scas
and
jp
rorl
sub
test
push
dec
cmp
gs
jne
mov
jns
or
xor
outsl
fcmovnb
cmp
imul
sub
jno
iret
xchg
loopne
push
pushf
aam
insl
push
ss
mov
cmp
xchg
jo
lret
into
inc
push
cmp
lcall
cwtl
mov
mov
pushf
mov
stos
leave
scas
in
cltd
in
mov
outsl
pop
dec
push
leave
lea
pop
lahf
pop
jae
lret
stos
pop
adc
call
sub
nop
mov
ja
cltd
inc
push
xchg
dec
not
adc
cmp
int3
mov
dec
inc
jle
mov
lds
sbb
clc
add
add
cmp
and
pop
dec
push
inc
lahf
fxch
into
fdivl
je
mov
dec
dec
in
sti
sbb
movsb
fdivs
pushf
jle
loopne
out
stos
sub
cmpsb
xchg
aad
mov
or
popa
outsb
pop
mov
cmp
test
mov
push
cmp
xchg
dec
jbe
fdivr
mov
mov
mov
mov
daa
mov
add
and
data16
sbb
pop
push
icebp
mov
hlt
xchg
jl
push
mov
addb
into
int3
adc
mov
imul
shlw
push
mov
jl
and
push
std
or
pusha
sti
insl
jl
std
in
push
dec
cmp
stc
lods
add
mov
psubusb
add
inc
sti
xor
iret
out
cmp
cmc
pop
push
loopne
bound
push
pop
xchg
push
das
push
mov
rcll
xchg
mov
inc
dec
aas
arpl
pop
inc
or
mov
xlat
dec
into
adcl
dec
lods
xchg
sbb
bound
dec
out
and
das
out
mov
cld
inc
imul
testb
inc
fidivs
and
sbb
mov
in
int
push
lahf
ja
push
push
dec
xchg
cld
xchg
gs
mov
nop
into
sti
hlt
imul
sbb
jecxz
dec
sub
mov
lds
insl
movsl
fwait
mov
push
mov
and
mov
dec
aad
jbe
in
cmpsl
mov
mov
sub
add
push
loope
mov
mov
pop
call
xor
jmp
rcrb
mov
jae
movsl
mov
insl
repnz
cmpsb
sub
fistpl
aaa
lcall
dec
mov
xchg
sub
mov
cltd
cmp
mov
sub
aas
jne
cmp
cwtl
jg
dec
bound
gs
out
push
lds
mov
dec
sbb
mov
adc
pop
pop
popa
cmc
sahf
mov
sbb
arpl
push
cli
mov
mov
xor
cmp
mov
pop
sahf
sbb
mov
ds
in
dec
or
hlt
push
sub
fidivs
vcvtsd2ss
xor
cmp
cmpsl
xor
aas
out
inc
add
ror
loopne
or
xchg
jae
mov
mov
cmp
movsl
dec
clc
dec
repnz
xor
xor
and
mov
xor
dec
xor
mov
stos
push
lcall
fistpl
cmp
ret
mov
add
sbb
jmp
loopne
stc
pusha
cmc
loopne
dec
mov
mov
push
loop
push
std
insl
jae
cmpsb
mov
out
in
mov
adc
sbb
cmpsl
add
and
jg
shrl
jns
scas
or
arpl
push
call
and
inc
add
inc
sbb
mov
pop
out
pop
aad
pop
jno
xchg
addl
jp
sbb
xchg
bound
xor
pop
sbbb
rorl
mov
push
dec
sub
stos
jmp
pusha
jnp
fidivrs
stos
or
mov
lret
mov
int
call
push
daa
adc
xlat
dec
push
xchg
mov
push
andl
xchg
movsb
dec
out
fisubrl
push
daa
insl
lods
pop
adc
pop
subb
or
bound
inc
fwait
mov
adc
adc
jp
out
inc
xchg
mov
add
xchg
in
sub
xlat
xor
fisubrs
imul
inc
push
rcll
jns
adc
das
xor
outsb
and
jbe
ljmp
nop
xor
dec
dec
int
sbb
pop
out
sahf
push
sbb
pushf
push
pop
std
lock
loope
stos
pop
divl
sbb
test
cmp
jnp
loop,pt
mov
xchg
inc
xor
inc
jl
test
hlt
mov
addr16
and
iret
std
or
push
jne
sbb
jbe
or
push
add
mov
mov
imul
js
mov
leave
xchg
bound
push
pop
xor
mov
jo
in
bound
xor
xchg
sub
inc
repnz
addl
mov
mov
sub
push
ret
stc
sub
loop
roll
fwait
dec
rcll
das
ja
sub
xchg
jle
les
mov
out
mov
call
sub
or
jecxz
ss
mov
es
sub
out
testl
std
xchg
sub
inc
ficomps
das
jae
dec
sbb
jae
sbb
push
in
push
bound
pop
ljmp
shll
mov
push
arpl
fsubs
or
mov
fildll
lock
dec
rclb
push
aaa
xchg
xchg
aad
sub
rcrb
inc
mov
jmp
cli
movsl
mov
mov
movsb
push
jbe
stc
jmp
test
mov
repnz
mov
jmp
sbb
dec
cmpsb
inc
and
push
dec
in
dec
icebp
outsl
pop
mov
and
out
hlt
in
xchg
lahf
add
cmc
in
dec
out
and
cmc
scas
xor
roll
add
sub
mov
shl
addr16
pushf
cmp
shll
add
add
pop
push
jmp
test
outsb
mov
mov
fstps
out
dec
or
fistps
aas
mov
push
push
add
scas
ds
scas
cwtl
repnz
cmp
mov
mov
stc
xor
pushf
mov
and
cmp
xchg
enter
mov
and
cmp
inc
adc
lock
pop
adc
pop
cmp
pusha
jmp
xorl
adc
jbe
add
mov
test
movsb
sbb
cmp
xlat
xor
outsb
dec
lahf
ret
fsub
aaa
dec
int3
and
dec
xchg
jb
gs
fidivl
lods
add
sbb
jl
lahf
int
push
inc
nop
sub
dec
loopne
pop
mov
dec
icebp
mov
int3
jno
mov
pop
das
ja
mov
xchg
hlt
xchg
fldt
ljmp
push
dec
in
jnp
pop
clc
stos
jno
out
cmp
mov
dec
fmuls
xchg
sbb
insl
push
cmp
pop
cmp
aas
std
mov
dec
test
cmpl
lret
ficompl
xor
mov
lods
adc
push
outsb
scas
pop
jge
and
xor
sbb
stos
roll
dec
fdivrp
cmpsb
cltd
fidivrs
pop
in
xchg
jl
pop
pop
lret
add
inc
push
fcoms
push
dec
push
cltd
in
mov
js
push
or
in
dec
lcall
repnz
in
or
push
ror
sbb
sub
vucomisd
loop
pop
cmp
js
push
or
sbb
into
pop
and
mov
or
cmp
xor
push
lods
and
jmp
xchg
nop
lcall
xchg
inc
push
ja
clc
push
cmp
xchg
test
add
fildll
and
ret
sub
in
fbld
int3
sub
out
lods
inc
lods
mulb
push
or
jl
imul
in
fwait
lret
idivl
adc
rolb
inc
dec
add
repnz
push
mov
cmp
jge
xor
xor
and
cs
mov
mov
je
ss
push
jno
subl
popa
add
mov
pop
xor
mov
or
bound
out
xor
sbb
mull
lcall
pop
lret
movsb
dec
mov
cmpsl
out
fcompl
stos
jmp
outsb
ror
cld
xor
cltd
cli
mov
jne
aam
or
outsb
inc
cmp
sub
insl
mov
mov
imul
mov
cli
xchg
fcomp
and
mov
or
mov
repnz
jle
idivl
jmp
sub
jnp
aas
sbb
push
xchg
push
mov
mov
sbb
and
inc
das
or
jmp
push
sub
fcmovb
mov
out
xor
rorb
adc
cmpsl
jae
xchg
pop
or
jbe
lahf
sahf
dec
or
insb
ffreep
dec
lret
and
rcrl
outsl
out
test
mov
into
aad
push
stos
cs
lret
add
jmp
add
ljmp
in
or
push
xchg
xchg
shrl
adc
and
pop
inc
inc
cmc
dec
es
lods
dec
inc
mov
ss
fwait
sbb
scas
std
inc
pusha
mov
push
cld
mov
aam
fsub
cmp
loope
lcall
rorb
adc
pop
cmp
rcrb
xor
cwtl
popf
mov
mov
js
negl
adc
adc
add
mov
and
fs
pop
movsb
dec
fwait
and
mov
cwtl
aam
lods
sub
cmc
add
insb
inc
repz
sbb
movsl
aas
gs
pop
mov
ss
jbe
dec
sbb
add
gs
lret
dec
dec
and
push
movsb
pusha
test
push
inc
fdivs
inc
in
dec
add
test
in
adc
mov
loop
gs
aas
pop
scas
imul
lods
clc
inc
push
dec
ror
mov
pop
xchg
filds
pop
add
mov
mov
mov
mov
jno
int3
es
fs
stc
pushl
and
stc
clc
test
pop
inc
and
fildll
dec
add
push
daa
mov
adc
mov
inc
lock
scas
pop
icebp
or
mov
rcrl
ss
mov
xchg
sub
das
scas
aam
ss
shll
dec
insb
stc
jns
jo
push
mov
xchg
sbb
loopne
fiaddl
inc
pop
xchg
xor
and
shll
or
das
jbe
popf
aam
fistps
mull
fdiv
mov
dec
popa
jb
xor
sti
inc
cli
out
out
and
dec
je
arpl
popf
subb
imul
push
mov
xor
mov
jmp
push
mov
call
cs
xchg
jo
test
rep
mov
inc
js
inc
arpl
out
xor
es
push
movsb
cmp
adc
imul
push
mov
stos
sub
popf
fucomi
sbb
dec
inc
jle,pn
add
sahf
sub
aam
daa
and
mov
sbb
test
lds
test
fs
insl
lret
in
inc
sarb
jge
out
jp
or
cmpsl
xchg
repnz
push
xchg
mov
imul
pcmpgtw
lods
insb
addb
inc
loop
push
push
aas
roll
es
jo
mov
mov
clc
add
jo
add
jno
rcll
xor
sub
arpl
mov
pop
test
xor
dec
and
ret
int
decl
test
test
scas
fistpll
lods
idivl
add
out
jne
jbe
das
xchg
test
test
jae
pop
mov
in
cmp
cmp
pop
xorl
push
and
ret
or
insb
adc
cmpsb
fimull
mov
insl
mov
add
mov
push
jle
pop
push
or
inc
mov
push
cltd
out
dec
mov
xor
daa
test
pop
adc
shl
inc
dec
cld
adc
inc
shrl
add
sbb
xor
xor
or
dec
js
jbe
scas
cld
scas
stc
sbb
lea
adc
ljmp
outsb
mov
inc
push
mov
pop
cs
jne
ja
add
and
icebp
dec
mov
loop
jns
lods
testb
xchg
jbe
cmp
pop
stos
mov
in
out
lea
repnz
jne
xchg
mov
repz
fnstcw
cmc
cmp
test
dec
or
into
aas
lods
js
push
jle
pop
xchg
loopne
mov
shll
lea
gs
fdivr
cltd
mov
pop
ja
loope
xchg
cmp
jle
xlat
push
xor
pop
imul
out
cmpxchg
repnz
pop
sti
xor
nop
sbb
subb
stos
and
fbstp
mov
xor
popa
cli
sbb
cmp
pop
jbe
test
outsb
pop
mov
jnp
xor
add
shrl
decl
jae
mov
mov
aaa
xchg
cwtl
push
popw
push
sbb
outsb
lods
cmc
notl
jae
in
ret
xor
cmp
pop
cmp
insl
mov
lods
xchg
sbbb
xchg
inc
shlb
mov
push
rep
icebp
aas
jmp
pop
pop
and
adc
clc
push
adc
out
les
mov
xor
sarb
cmpl
push
cli
xchg
push
pop
jb
sub
rcrb
pop
inc
aad
into
fmull
add
hlt
out
repnz
cs
push
inc
outsl
mov
cmp
or
jg
clc
aad
jb
insb
xchg
jne
or
pop
sub
pop
jecxz
out
xorl
test
mov
shll
push
mov
adc
and
insb
test
push
inc
jg
mov
aam
adc
scas
fistpll
sub
out
leave
aaa
mov
mov
orb
lods
mov
inc
pop
jle
std
stc
call
cmpsb
lret
in
xchg
aaa
fsubs
in
sbb
jg
mov
mov
es
call
jp
cmp
mov
movsl
mov
jmp
push
in
jmp
pop
sbbb
imul
rcr
pop
ss
ja
lods
adc
ljmp
pop
and
push
and
rcl
out
sbb
lret
das
add
xor
or
mov
loope
xchg
stos
cmpb
jle
leave
scas
subl
add
xchg
sbb
sarb
mov
mov
cmp
pop
mov
pop
add
bound
cltd
jb
es
sub
pop
xor
outsb
ljmp
clc
sbb
fisubrl
fidivs
cmp
pusha
lods
scas
adc
jnp
mov
inc
pop
enter
jmp
loop
pop
jnp
push
sbb
push
pop
cmp
xor
jne
loope,pn
jo
jmp
dec
push
cwtl
outsb
or
sub
push
iret
fcmovnu
test
lods
sbb
outsl
xlat
add
jp
mov
into
loope
xchg
mov
pop
enter
inc
in
push
push
ficomps
push
mov
mov
ja
std
mov
mov
fs
scas
arpl
sbb
fucomi
aam
es
out
add
jl
push
push
xor
lods
pushf
jnp
inc
pop
xchg
xor
orb
mov
fildll
test
into
mov
int3
test
ja
and
jle
jno
fcoms
ret
and
adc
cltd
sahf
sti
push
ret
xchg
jl
sbb
lahf
shrl
sbb
pushf
cmpsl
pop
or
xchg
cmp
cwtl
aam
fstl
push
lds
jnp
mov
jg,pt
cltd
and
andb
mov
push
in
xchg
xchg
movb
ljmp
mov
aad
dec
shl
sub
dec
mov
sbb
pop
push
or
jge
test
test
cmp
dec
dec
jle
notl
adc
daa
test
addb
xchg
lods
lret
jecxz
pop
jae
mov
pushf
lret
inc
inc
test
jbe
inc
repnz
fwait
cmp
scas
int3
out
jp
jge
lods
out
fwait
pop
and
sbb
std
hlt
dec
push
cmpsb
adc
int
pushf
cmp
aaa
cmp
mov
mov
cmpsl
icebp
mov
mov
jo
and
push
popa
inc
lea
cmp
mov
adc
lahf
sbb
xor
or
lcall
clts
jo
mov
mov
lods
sbb
xorb
outsb
mov
jp
pop
inc
inc
in
daa
loop
jne
scas
inc
jns
in
lock
mov
mov
test
push
lea
cli
lds
jmp
xchg
fcompl
sub
dec
jmp
in
pop
sub
push
sub
push
sbb
jb
int
mov
test
and
push
and
mov
jae
inc
jo
xor
sahf
cmc
in
mov
jno
test
pushl
outsl
xor
xchg
arpl
xchg
jb
dec
mov
movsb
ja
mov
sahf
movsb
xchg
cmpl
sbb
stos
insb
loope
cmp
jnp
sub
pop
xchg
data16
sub
cmp
mov
sarl
mov
jl
test
cmpsl
aas
push
adc
addb
in
sti
sub
inc
push
cmpsb
xor
cmpsb
dec
jp
mov
aad
stc
or
and
cmc
or
mov
stos
and
out
enter
dec
ret
push
xchg
cltd
push
lea
das
js
in
ror
sbb
mov
jbe
sbb
repnz
in
cmp
shl
jp
vxorps
push
lcall
xchg
sbb
cmp
dec
lret
mull
xor
lods
arpl
push
push
je
mov
jbe
adc
xchg
dec
fbstp
cwtl
inc
movsb
daa
repnz
out
pushf
dec
mov
xchg
outsb
add
adc
mov
ret
sub
popf
or
fidivs
jge
push
fwait
pop
lods
push
cld
vpackuswb
sub
mov
add
sbb
push
xchg
lcall
ds
mov
jl
stos
icebp
adc
mov
jae
mov
push
push
and
xchg
sbb
popf
mov
std
js
fs
ret
ret
pop
int
fcmovnb
inc
inc
or
xchg
pop
aad
lea
mov
pushf
incb
hlt
pop
cmpsb
dec
adc
sub
rcl
imul
sti
pop
pop
out
ficoml
jmp
inc
fidivrs
call
les
cmp
xor
pop
xor
sbb
sub
or
xchg
sti
or
notb
adc
sti
cmpl
mov
ds
or
test
mov
clc
push
dec
pushf
push
adc
jmp
sub
cmp
xor
jne
dec
int3
mov
mov
pop
jns
addr16
out
jno
in
cs
insl
in
add
xchg
or
fisubl
fs
mov
mov
add
jle
scas
mov
stos
jecxz
pop
inc
aad
test
repz
or
jecxz
inc
or
addr16
or
nop
mov
inc
mov
jp
inc
pop
jnp
xchg
sub
add
lock
jno
div
sbb
out
push
repnz
fmull
push
ljmp
in
inc
pop
out
mov
jbe
popa
in
sar
mov
cmp
movsl
out
push
jae
adc
lret
pop
add
jl
mov
lea
les
mov
and
addb
insb
jl
inc
mov
push
and
inc
call
xchg
lcall
das
loope
inc
aad
jmp
xchg
movl
jne
clc
inc
inc
cmp
loopne
test
pusha
addb
mov
pop
in
jle
xor
dec
jmp
fstpl
pop
add
nop
stc
adc
fdivrs
daa
mov
sub
adc
cmp
mov
insb
adc
dec
or
addb
imull
xchg
nop
and
rcrl
cmp
adc
jge
lods
rcr
xor
fiaddl
push
bound
clc
sbb
or
leave
jl
add
rorb
out
int3
add
inc
cs
push
imul
sahf
xor
stc
into
cmp
aad
push
sub
fsubl
add
loopne
sub
jo
sbb
push
icebp
push
push
sbb
xchg
jmp
aas
and
movsl
lods
call
push
jno
dec
adc
xchg
pop
push
enter
mov
out
jo
and
dec
push
add
shl
mov
xchg
cmp
mov
clc
sub
loope
call
mov
insl
incb
mov
mov
repz
test
mov
or
xchg
fldl
and
xor
sbbb
mov
in
ret
xchg
imul
mov
mov
scas
sub
sbb
adc
stos
dec
test
hlt
daa
xor
int3
mov
mov
jae
shll
push
call
ljmp
cmpsl
ret
add
push
push
mov
cs
inc
adc
mulb
ljmp
mov
addr16
nop
pop
cli
roll
cltd
inc
pop
adc
shlb
inc
aam
inc
cmp
dec
mov
cmpsb
push
cmp
inc
shll
mov
nop
fsubl
mov
std
jmp
dec
mov
jmp
ds
add
sbb
xchg
pop
sbb
and
arpl
test
add
ljmp
pop
movsl
aad
pop
pop
ss
add
lods
stc
lahf
mov
lcall
lods
pop
shlb
dec
inc
mov
gs
mov
or
mov
cmp
mov
pop
adc
xchg
mov
cmp
popf
lea
ret
mov
loopne
xor
adc
pop
test
lock
stc
pop
xor
je
mov
clc
out
mov
repnz
fucomi
jnp
push
xor
lcall
sti
mov
add
cwtl
je
repz
stos
cmpsl
add
js
aas
neg
adc
pushf
push
lea
inc
dec
sub
mov
ficoml
addl
inc
mov
cmp
aas
fldenv
and
arpl
sti
xchg
in
xor
lods
mov
mov
and
jecxz
or
cltd
sbb
cli
loopne
lcall
dec
inc
jo
fdiv
jecxz
gs
mov
cmp
push
icebp
lret
and
inc
popa
loop
aas
clc
inc
lret
mov
mov
sbbb
or
mov
repz
xchg
outsl
and
ds
fstps
outsl
push
push
or
or
push
mov
push
adcl
mov
lods
ja
jns
daa
scas
test
jo
out
mov
push
clc
fs
gs
ljmp
push
stc
push
xlat
out
add
xchg
sti
add
stc
inc
sub
gs
mov
bound
int
outsl
aam
fwait
cmc
dec
sub
mov
inc
dec
mov
xchg
outsl
or
and
cmp
ss
xchg
sbb
insl
jmp
movsb
scas
xor
push
in
pop
push
ss
pop
mov
ds
lods
push
push
pop
mov
into
ds
movsl
subb
das
fmull
mov
subl
shll
inc
fstl
bound
push
lret
adc
je
pop
sub
cltd
xchg
inc
pop
addr16
push
pop
arpl
mov
lods
cmp
int3
jg
gs
je
xor
hlt
mov
add
cmp
arpl
mov
scas
lea
pushf
aad
jle
sub
lds
fidivs
lcall
sbb
cltd
inc
ds
pop
push
out
mov
mov
pop
jmp
das
sub
jmp
jnp
loopne
and
jnp
and
adc
inc
cld
outsl
out
in
setno
jg
push
test
jmp
test
fdivp
fnstenv
leave
in
fsubl
ret
pop
lcall
and
repz
pop
cmp
push
dec
add
dec
movsl
sub
stc
jne
or
fcoml
loop
adc
mov
shrl
add
sub
fcoml
imul
das
xor
xchg
pop
or
push
pop
das
mov
xchg
adc
ds
or
testb
or
or
cld
xchg
fcomi
sbb
inc
xor
mov
and
rcr
xchg
scas
in
lahf
je
fisubrs
xlat
cmp
mov
ret
rcrb
push
jmp
hlt
pushf
jnp
jno
jp
sti
or
addl
and
inc
mov
stc
fs
andl
mov
pop
cwtl
gs
aam
sar
test
mov
dec
jb
push
mov
mov
mov
clc
and
xchg
push
repz
inc
cmc
cmp
or
decl
in
shl
fldl
stc
pop
mov
lahf
xchg
cmp
and
mov
wbinvd
cs
inc
mov
hlt
in
xchg
xchg
and
cmpsl
in
test
in
shl
and
sbb
pop
and
mov
insb
add
testb
push
sub
pop
cmp
mov
jmp
lcall
lods
mov
stc
lods
ljmp
repnz
or
movsb
mov
mov
pop
and
xor
mov
push
sti
test
jno
in
or
mov
mov
dec
popf
mov
insb
add
pop
mov
pop
xchg
gs
imul
out
test
or
fcmovne
xchg
mov
roll
add
or
pusha
adc
dec
arpl
or
insl
movsl
adc
xchg
testl
jmp
sti
push
in
mov
les
ss
out
pop
pop
add
sub
sbb
or
add
stc
subl
add
jl
push
clc
jmp
test
dec
shlb
sub
sbb
int3
aam
inc
jle
xor
or
in
js
mov
js
hlt
fstps
sub
mov
loopne
jp
adc
in
or
mov
dec
or
xchg
xor
mov
sahf
enter
or
add
repz
in
dec
js
xor
push
mov
xchg
pusha
xchg
mov
or
and
push
sub
xchg
lea
fwait
jo
clc
std
repnz
adc
fstl
fadds
sbb
or
pop
pop
xchg
push
fwait
mov
imul
ds
sub
push
cmp
mov
sbb
jl
pop
push
xchg
mov
jno
xor
xchg
push
cmp
ljmp
or
cmp
pop
cmp
scas
inc
lahf
inc
cli
sbb
xchg
sbb
push
sbb
aad
or
cmc
sbb
fistps
mov
inc
outsb
adc
dec
push
jg
and
sub
shlb
adc
inc
xor
out
mov
aad
xorl
outsb
sub
adcb
popl
ja
sbb
push
mov
or
mov
dec
mov
ffree
xchg
outsb
mov
mov
sbb
adc
sahf
add
push
js
xlat
rolb
push
push
cwtl
loop
pop
cltd
xor
inc
rorl
bnd
popf
or
sub
ret
hlt
mov
in
stos
ja
mulb
xor
jnp
ja
lea
fisubrs
sti
arpl
int3
jge
test
repnz
in
sbb
mov
add
adc
pop
xor
xchg
bound
sub
pop
or
aam
outsb
jg
ds
mov
sub
cltd
mov
sub
jmp
sbbb
loopne
aam
insl
mov
mov
or
insb
jbe
mov
or
gs
xor
mov
xorb
cmpsb
xor
lods
push
imul
and
data16
xchg
xor
in
mov
pop
enter
adc
adc
sub
data16
mov
inc
out
jne
jbe
mov
jmp
mov
inc
sarb
fistl
mov
mov
pop
push
aad
jne
inc
sahf
arpl
ds
rcr
mov
adcb
cmpb
cwtl
sub
add
sub
jns
or
cmp
je
xchg
mov
mov
fbld
rcrl
cltd
loopnew
fsts
dec
inc
sbb
push
pusha
push
add
fidivrs
fsubr
mov
mov
jp
pop
xchg
xlat
call
xor
push
addr16
dec
test
xor
inc
hlt
fdivs
imul
jg
mov
dec
int
sub
pop
aad
bound
out
call
push
mov
data16
mov
mov
add
ror
or
push
jb
les
out
xchg
or
cmpsl
stos
leave
xchg
push
lods
pusha
or
lods
cld
rol
es
pop
imul
nop
and
insl
imul
test
push
xor
jmp
clc
mov
sbb
or
gs
js
cli
mov
movsl
andb
aas
adc
cs
jbe
mov
call
mov
fldcw
sbb
lock
mov
hlt
push
add
and
sbb
adc
cmpsl
cmp
cld
les
inc
clc
ds
clc
mov
out
imul
mov
out
and
or
lods
mov
div
repz
sub
push
stos
add
pop
inc
and
cmovo
inc
cld
mov
add
dec
movsl
loopne
jp
stos
andl
mov
and
cmpsb
cmp
je
hlt
jle
fdivs
cld
xor
mov
cs
sub
dec
clc
mov
mov
sti
cmp
mov
adc
sub
mov
cmpl
shll
test
inc
out
daa
push
call
inc
les
push
jl
ret
popl
sbb
jb
test
mov
bound
aad
insb
sti
or
call
ror
and
mov
test
inc
out
sbb
inc
adc
dec
rorl
pop
test
inc
xor
loope
jp
and
xchg
ret
sti
ss
and
pop
cmc
push
sub
in
incb
mov
mov
sbb
fildll
lods
cmp
mov
mov
adc
dec
aam
jno
imul
mov
inc
cld
call
add
push
or
ja
dec
xlat
sub
gs
sbb
mov
out
imulb
xchg
test
sti
cltd
jne
mov
xor
jl
in
ret
movsl
cmp
jmp
xchg
fdivl
jne
xchg
and
outsb
arpl
xlat
lds
lea
dec
mov
daa
sbb
ljmp
or
fisubl
mov
movsl
add
test
popf
sahf
lret
push
imulb
push
jns
jbe
xchg
xchg
nop
jg
test
push
and
jp
add
and
mov
xor
xchg
scas
iret
sti
sub
adc
or
enter
and
lret
add
icebp
ss
push
imul
jb
ss
int
lret
mov
and
inc
in
repnz
stos
insb
mov
pop
and
mov
leave
pop
lods
xchg
mov
push
mov
push
sbb
mov
leave
rclb
and
outsl
push
in
inc
add
pushf
sub
loope
jns
out
icebp
inc
jge
jle
mov
push
enter
mov
mov
addl
and
js
cmp
sbb
push
mov
testb
rorb
mov
inc
dec
lcall
mov
push
xchg
xor
sbb
push
sbb
cwtl
cld
or
in
jns
in
mov
cltd
sbb
shlb
xor
rcrl
mov
dec
jg
and
loope
lahf
push
adc
jno
sub
aaa
or
in
xor
es
pop
mov
jb
mov
mov
mov
adc
mov
dec
scas
shrl
mov
pop
xor
push
add
es
xchg
aas
inc
mov
or
or
std
rcll
inc
fs
fisttps
mov
aas
fdivrs
arpl
roll
sub
js
mov
mov
and
movsb
mov
aad
dec
movsb
testb
lret
add
scas
inc
lds
or
jno
ret
mov
xor
nop
xchg
xchg
ret
cmpsl
imul
xchg
fstl
popa
jle
and
ret
ret
jmp
dec
adc
inc
xor
lock
push
sbbl
push
rolb
testl
aaa
push
mov
xor
cmc
test
out
and
adcl
dec
scas
xchg
fstp
inc
mov
mov
sbb
jmp
test
or
xchg
ror
fisubl
dec
imul
out
pop
orl
lahf
daa
xchg
fsubl
lret
fnstcw
mov
mov
test
sub
mov
and
mov
lods
and
xor
das
mov
fisubs
popf
ret
popa
mov
mov
hlt
xchg
mov
lock
inc
frstor
in
popf
loop
sub
data16
mov
dec
mov
fiadds
push
test
xchg
add
ss
jnp
outsl
je
iret
lahf
push
pop
xchg
jecxz
mov
das
push
sbb
bound
pop
stos
cmp
xchg
leave
push
stos
lret
decl
xchg
push
cs
sbb
mov
cwtl
push
lea
cld
sbb
inc
push
pop
cltd
pop
das
xor
pop
adc
cmpsl
cmp
stos
adc
push
int
cmp
mov
insl
pop
fistpl
es
lcall
int
scas
aam
cmc
cmp
aas
arpl
or
jb
inc
in
or
inc
aaa
push
push
add
js
test
ss
div
mov
test
or
push
xor
jne
jl
bound
aad
je,pt
add
jnp
sbb
cvtdq2ps
adc
or
adc
jbe
lcall
into
iret
mov
loopne
dec
ret
jecxz
mov
xchg
xor
not
push
inc
xor
inc
shll
ja
pop
mov
ret
stos
dec
or
fisubs
push
xchg
pop
fs
sbbb
outsl
adc
add
pop
sarb
inc
daa
mull
jmp
in
insb
inc
stc
in
cltd
jne
and
cltd
ret
push
cmp
push
push
mov
aad
rorl
enter
jne
aas
imul
aaa
shr
sbb
push
repnz
test
sub
js
cmp
pushf
fwait
ror
es
rolb
stc
rol
je
cmp
sbb
mov
add
xor
push
rcrl
idivb
out
neg
shrl
jb
push
xchg
mov
es
adc
test
sub
mov
shlb
xor
pop
sarl
sub
outsb
push
push
mov
xchg
in
xor
insl
ret
jbe
xchg
lds
int3
pushf
jnp
lock
mov
faddl
test
add
pop
lea
fisubrl
insl
xchg
lods
movsb
mov
subl
arpl
dec
jb
jne
jmp
mov
push
loop
js
loop
jle
daa
mov
lods
mov
jne
sbb
sbb
aas
sub
aad
xchg
mov
cmp
sbb
sbb
cmpsb
inc
mov
das
jmp
xor
and
rcrb
stos
xor
inc
and
xorl
and
pop
leave
insb
movsb
mov
dec
add
in
mov
pop
test
sbb
roll
nop
jns
enter
test
popf
repnz
daa
lock
movsb
mov
push
ss
pop
mov
lds
fmuls
data16
add
cs
jle
jl
mov
dec
xchg
cmc
mov
sub
push
pop
pop
push
cmp
sub
add
ficompl
stos
je
les
pop
lea
rorl
push
cmp
popa
xchg
inc
cmp
cmp
cmp
leave
in
rcr
dec
mov
nop
fwait
mov
jge
mov
or
xchg
imul
mov
cld
out
imul
push
shlb
mov
inc
cltd
ficoml
arpl
sub
mov
push
mov
sub
pop
cwtl
test
xor
aam
lods
int
loopne
sbb
and
xchg
jae
pushf
lea
xchg
bound
add
mov
adc
call
sbb
ret
jbe
and
aam
sbb
pushf
jl
jo
or
jmp
dec
icebp
adc
inc
outsl
mov
inc
push
jle
xchg
cmc
jns
jae
adc
xor
adc
xchg
xchg
lds
cmpsb
pusha
adc
enter
iret
lods
pop
mov
std
cmpsl
ds
sbb
add
pop
xor
adc
lods
adcl
xchg
dec
stos
stos
mov
fadd
sbb
sahf
ret
rclb
sti
mov
lea
ja
add
cmp
mov
divl
mov
out
stc
jno
insb
cld
xor
cli
lahf
xor
pop
cmc
sub
in
lret
icebp
int
cmc
cmp
dec
push
lret
jno
ds
xlat
iret
cmp
js
jge
mov
iret
in
jb
add
sub
sub
pushf
ljmp
cmpsl
rorb
jb
in
jns
aas
sub
push
movsl
jmp
lahf
cs
xchg
pusha
inc
mov
add
xchg
sbb
leave
cld
int
pop
jbe
pushf
shl
arpl
jg
inc
jbe
enter
push
dec
dec
jg
adc
cli
add
sbb
mov
lahf
stc
jae
imul
mov
call
ret
mov
push
test
jmp
adc
lds
mov
lea
cmc
mov
cwtl
push
mov
mov
mov
inc
jmp
fbld
xor
bound
test
jp
repnz
int3
lods
push
pop
and
jnp
lock
xor
jne
mov
jp
adc
ss
int
out
mov
push
sbb
ds
jo
xchg
std
and
enter
loopne
lods
push
and
in
adc
std
fiadds
cltd
xchg
stc
ja
inc
mov
mov
bnd
xchg
push
pop
push
jns
add
or
sahf
repnz
push
push
push
cmp
ljmp
xorb
out
imul
test
mov
mov
push
sub
pusha
cmp
loope
mov
lret
popw
add
push
mov
cmp
push
or
leave
xorb
jle
jp
jmp
testl
negl
mov
push
jbe
fisubrl
xor
out
xor
sub
test
in
int
daa
dec
adc
and
pop
sarb
adc
cld
popa
cld
xor
push
inc
int
inc
pusha
inc
add
imul
fld
int3
cmp
lods
dec
cmp
pushf
inc
push
dec
jl
shl
stc
pop
arpl
pusha
es
fmuls
mov
mov
add
xchg
repz
ds
push
pop
and
dec
hlt
int3
and
push
mov
nop
pushf
rcl
cmpsl
imul
aam
xor
xchg
mov
pop
inc
mov
sarb
les
mov
insb
lods
jnp
bound
addl
mov
cmc
jecxz
dec
sbb
and
dec
lret
inc
pop
imulb
ds
dec
sbb
scas
push
js
sti
loope
mov
ret
and
repz
mov
xor
outsl
or
pusha
mov
cli
mov
scas
adc
add
lcall
rol
and
mov
aas
fs
jb
testb
pop
add
and
jecxz
sub
xor
mov
adc
ror
mov
and
push
popf
out
xchg
std
into
repnz
andb
out
inc
inc
push
inc
add
mov
mov
jl
xchg
std
cmc
push
arpl
inc
mov
jg
std
outsb
js
xchg
mov
sub
repnz
sub
fistpl
adc
inc
out
cmp
ficomps
mov
bound
mov
pop
sub
sbb
out
inc
push
push
mov
pop
loop
lock
push
cmp
pop
mov
mov
mov
stc
orps
xchg
dec
push
push
push
mov
jae
mov
cmp
inc
mov
ret
dec
xchg
js
push
scas
add
xchg
sbbl
fistl
or
dec
dec
ja
aam
ja
xchg
mov
xchg
and
pop
test
mov
push
jmp
pop
cmp
push
stc
cmp
rcrl
jnp
fcomps
xchg
scas
add
mov
xchg
cmc
or
pop
mov
push
inc
int
xor
rolb
ss
push
jne
dec
mov
lods
in
inc
loopne
stos
jg
pop
lods
mov
frstor
rorl
out
adc
dec
in
jmp
daa
dec
mov
lret
xlat
in
int
je
inc
push
inc
push
mov
shll
test
popf
pop
mov
mov
sub
push
xor
pop
mov
aaa
ss
mov
mov
pop
notl
andb
adc
sbbl
lahf
das
push
jp
stos
mov
mov
cmp
mov
xchg
popf
sbb
and
fmuls
pop
nop
adcb
xor
pop
shlb
in
dec
les
jmp
dec
and
add
mov
cmc
stos
cmp
scas
jo
sbb
dec
test
sbb
inc
in
data16
cmpsl
push
incl
mov
sbb
cmp
push
mov
xchg
sub
test
aad
inc
dec
mov
shl
xchg
test
jecxz
adc
decl
xor
scas
shr
pop
loop
scas
lret
mov
dec
mov
mov
mov
scas
jns
xor
cmp
dec
fnstsw
movsl
adc
sbb
mov
pusha
add
dec
jecxz
pop
sbb
pop
jo
and
dec
and
mov
inc
insl
ror
xchg
clc
dec
in
jge
int3
xchg
and
bound
add
pop
pop
aaa
sbb
pop
insb
sbb
push
mov
fdivs
negb
bound
mov
out
testb
jl
mov
mov
call
insb
pop
dec
lahf
aaa
xchg
and
and
mov
lds
or
sbb
sub
adc
cmp
out
xor
mov
add
mov
cltd
cmovle
repz
or
adc
push
or
cli
ljmp
ljmp
lret
jbe
sub
je
paddw
push
xchg
aaa
ret
filds
ret
dec
mov
lahf
pop
dec
adc
pop
lods
xchg
or
mov
and
in
fisubrl
cmpsb
jl
rcl
push
popf
cmp
insl
shrb
jmp
movsl
cmp
inc
fisttps
and
incb
mov
jb
in
insb
enter
and
lods
ret
lret
and
or
mov
and
ds
loopne
andb
mov
scas
xor
mov
inc
insl
or
jp
sqrtps
loopne
gs
in
mov
inc
test
add
cmc
jns
cmpsb
push
sub
xchg
fsubrs
test
mov
push
out
mov
mov
fildll
and
jecxz
xchg
and
gs
loop
lcall
xor
stos
ret
subb
push
das
ret
jne
mov
fnsave
dec
data16
leave
mov
push
mov
int3
push
cli
xchg
xor
adc
repz
xor
sahf
cli
ja
les
mov
push
popf
out
loopne
mov
xchg
scas
jle
and
mull
insl
push
jne
xchg
push
outsb
dec
ja
cmpsb
repz
lds
insl
jae
rcrb
add
mov
fstpt
lods
sbb
out
cmp
dec
aaa
mov
xor
cmp
add
test
daa
movsl
cmp
mov
mov
dec
jl
div
pop
pop
pop
shl
and
jbe
pop
pop
popa
pop
setp
outsl
xlat
inc
jecxz
pop
jl
push
dec
cmc
test
mov
sbb
loopne
bnd
sub
repnz
mov
fists
jecxz
push
mov
xor
or
xchg
jo
mov
or
ficompl
daa
or
rcrl
sub
xorb
aaa
test
lret
add
or
in
xchg
movsl
movsl
movsl
sahf
shl
lods
fnstsw
jo
ss
jle
popa
xor
adc
inc
mov
cmp
fadd
cmpsl
imul
std
repnz
insb
push
not
bound
sub
xorl
inc
jno
pop
fistl
mov
adc
dec
push
mov
push
and
nop
out
stos
and
mov
xor
push
sub
and
fstpt
xchg
lcall
mov
jne
jp
inc
into
mov
mov
adc
dec
test
pop
inc
dec
test
shr
jg
push
add
movsb
stos
ffreep
into
adc
popf
lock
call
push
cld
lods
inc
or
cmpsl
pop
int3
adc
outsb
dec
das
pop
push
adc
jno
mov
mov
into
xchg
dec
jg
sbb
lahf
int3
pop
lcall
movsb
jmp
or
int3
xchg
cmpb
inc
pop
xor
insb
mov
divb
mov
shll
and
addb
popa
rorl
dec
ds
aam
fnsave
xchg
dec
in
aam
iret
add
fcmovnu
pop
cmp
pop
pop
dec
sub
int3
cltd
adc
gs
aas
xor
insl
iret
popf
sbb
and
std
pop
xchg
mov
fildl
mov
call
push
repnz
in
mov
mov
test
jp
mov
xor
mov
jbe
fldenv
add
dec
fists
cmp
xor
scas
mov
sbb
cmp
or
add
cmp
subps
js
lds
and
pop
shl
dec
cmp
add
pop
lods
mov
adc
push
ss
loope
inc
cmp
pmullw
repz
jns
cltd
fldcw
movsb
jne
and
jp
mov
add
add
dec
ljmp
mov
loope
cwtl
mov
mov
test
jecxz
mul
rol
jne
and
daa
out
data16
pop
cltd
in
inc
sub
mov
outsl
inc
mov
fmuls
inc
icebp
mov
ss
cld
or
jmp
pop
pop
mov
push
xchg
fs
ret
test
cli
mov
std
push
xchg
int
arpl
pop
mov
jno
jae
sub
inc
jecxz
icebp
rorb
lods
out
cld
out
mov
xor
push
cmp
dec
adc
ficoms
adc
sbb
ret
lods
sub
cli
outsb
rorb
insl
and
mov
dec
imul
xchg
dec
call
push
inc
xor
pop
sti
fisttpll
test
pop
dec
loope
pop
das
lods
mov
push
lret
mov
in
jmp
pop
add
and
cld
rcrb
aas
sbb
mov
mov
movsb
les
cwtl
sbb
test
lret
sarb
xchg
test
sub
test
sbb
mov
mov
pusha
mov
les
jnp
xor
xor
push
add
push
cmpsb
mov
jns
mov
subl
sub
insb
test
add
cwtl
or
push
movsl
sbb
mov
jle
pushf
cmpsl
imul
fdivr
adc
xchg
and
movsl
stos
orl
and
or
stc
add
lock
pop
stc
adc
shr
pusha
in
rcr
leave
gs
pop
into
sbb
xor
add
popf
inc
fisubrl
mov
cmp
xor
shl
rsqrtps
fidivrl
sub
rorl
mov
inc
fcmovnb
xchg
xor
rorl
fisttpl
xor
lcall
push
and
mov
xchg
push
dec
adc
scas
add
fs
stos
mov
mov
cmp
aas
test
imul
jp
repz
or
int3
sbb
inc
ja
ret
jl
add
loop
dec
arpl
adc
mov
adc
test
mov
hlt
pushf
scas
push
outsl
in
loopne
xchg
into
orb
xchg
mov
pop
add
mov
insb
mov
mov
sahf
icebp
out
bound
movsb
xchg
push
call
rcrl
inc
shl
cmp
lock
mov
mov
outsl
int3
adc
adc
jnp
mov
mov
cmp
or
mov
xor
cmp
dec
xor
aaa
push
inc
stos
pop
adc
mov
into
inc
mov
sub
cltd
jp
adc
xchg
sub
jmp
aas
loop
mov
outsb
pop
je
mov
sbb
xor
sub
test
hlt
add
int
xchg
js
mov
dec
push
sbb
out
add
loope
pop
cmp
scas
enter
sti
sbb
lret
lcall
fildll
push
mov
fstl
sbb
or
mov
add
mov
inc
push
fistl
addr16
inc
sbb
out
fisubs
loope
lcall
or
mov
filds
sbb
subl
cmc
mov
pop
mov
jecxz
sbb
pop
stos
and
jge
stc
insl
hlt
sub
in
mov
or
inc
pop
mov
mov
xor
ret
in
or
shrb
dec
mov
fstl
out
es
pushf
lds
cld
push
cli
pop
push
dec
push
movsl
lcall
gs
mov
pusha
ret
dec
jne
movl
bswap
inc
inc
inc
prefetch
push
bound
je
mov
testl
lods
insb
nop
cwtl
push
aam
add
rorb
mov
push
rorl
shl
mov
fnstenv
jecxz
shrl
dec
jp
fst
scas
add
push
fwait
test
xchg
popa
add
test
mov
fistpl
adc
and
push
add
es
in
push
inc
xor
or
bound
clc
add
lret
xlat
inc
push
test
icebp
sbb
xor
dec
mov
mov
daa
cld
pop
push
popf
sub
pop
sbb
gs
mov
xchg
mov
pusha
gs
jne
pop
cli
loopne
adc
mov
loopne
mov
pop
daa
sbb
inc
mov
sub
jle
andb
out
push
cmp
inc
pop
mov
adc
insl
imul
cmp
add
std
sub
jnp
pop
inc
pop
hlt
mov
pop
dec
pop
xor
mov
scas
dec
loop
and
dec
add
sbb
dec
sbb
ja
faddl
cmc
aad
push
pop
fs
jno
dec
cs
lock
jecxz
fimull
addl
movsb
mov
in
test
sarb
rorb
adc
popa
sub
inc
push
jbe
cmp
push
mov
hlt
adcl
jne
mov
push
ret
sbb
cmp
int3
mov
and
dec
or
and
idivl
mov
pop
mov
mov
jecxz
pop
jecxz
xchg
pop
fwait
fwait
mov
popf
arpl
add
das
inc
sub
xchg
jnp
xchg
andl
or
jmp
cmpsb
js
dec
mov
es
push
mov
jne
out
stos
std
popw
xlat
sub
inc
subb
movsl
imul
andl
push
pushf
push
je
inc
cmpsb
fstpt
sarl
ror
mov
mov
mov
pop
out
fsts
fcomi
es
cwtl
lret
cmpsl
fistpll
mull
or
movl
pop
mov
shll
out
pop
inc
outsb
jne
or
xor
dec
lret
push
iret
out
inc
lret
mov
ret
jns
popf
out
mov
or
sbb
test
xchg
mov
mov
mov
inc
loop
adc
insl
push
mov
sti
in
add
jnp
or
cltd
xor
in
sbb
mov
or
jecxz
sahf
sbb
xchg
inc
jne
mov
test
sti
fsubs
je
popf
loop
icebp
jle
dec
add
int
or
fisttps
subl
mov
mov
mov
andl
dec
dec
int
aas
inc
shll
insb
sbb
pop
out
mov
sub
sbb
fwait
cmpsl
in
dec
test
movsb
and
cld
fwait
sbb
fs
aaa
mov
mov
lret
or
pusha
or
mov
pop
je
cmp
cmp
mov
push
cmp
inc
dec
sbb
xor
sbb
xchg
mov
and
pop
add
out
or
inc
stc
push
fildl
add
and
test
in
test
dec
in
adc
popf
jp
add
movsl
scas
jmp
outsl
test
xor
sbb
pop
mov
dec
test
sbb
mov
sbbb
dec
dec
cmp
mov
jp
jb
and
mov
in
loope
out
jno
fwait
rorl
mull
cltd
ljmp
pop
loop
lods
pop
std
jle
jbe
push
pop
rcr
lock
dec
icebp
iret
jns
sub
out
adc
in
jns
insl
fdivrs
mov
mov
mov
adc
and
cmp
jl
sub
sar
adc
aaa
push
outsl
dec
repnz
loop
sbb
inc
outsb
aas
mov
mov
cmp
into
test
sub
mov
mov
addr16
ret
fsub
push
inc
dec
subb
jbe
mov
cmp
inc
int
into
xchg
xor
sub
cmc
or
lods
stc
and
sbb
lret
pop
push
movl
scas
pushf
jb
jo
repnz
enter
not
cmpsl
iret
xorb
mov
mov
mov
mov
push
int3
jne
daa
jne
outsl
ds
data16
test
push
add
push
les
mov
dec
push
mov
popa
out
add
push
jp
adc
mov
xchg
lcall
gs
decb
sub
std
mov
mov
cmc
loope
mov
push
loope
add
xor
clc
mov
and
or
dec
add
fbld
into
std
faddl
jb
pop
jo
push
xchg
shrl
mov
cs
loopne
scas
and
rcll
aam
repnz
loopne
shll
mov
mov
test
or
inc
push
shrl
xor
cmovae
pusha
cmp
inc
rcll
mov
xor
pop
dec
push
inc
or
push
std
dec
adc
dec
jle
jmp
pop
dec
dec
inc
xchg
insl
push
sub
xor
mov
aas
jo
in
jmp
aas
or
dec
scas
add
mov
mov
pusha
scas
cltd
pushf
lret
insb
push
sar
xchg
pop
sub
cld
clc
push
xchg
add
jle
push
pop
xchg
nop
fwait
enter
fisttpll
out
or
cwtl
loope
cld
mov
cbtw
sbb
out
ljmp
cmp
int3
cmpsl
rolb
add
sbb
mov
cs
push
mov
adc
mov
test
inc
or
inc
xor
adc
mov
mov
xchg
jne
scas
insl
js
cmpsl
inc
jle
mov
fadds
shrl
inc
dec
adc
or
popf
pop
nop
sti
jbe
dec
xchg
or
mov
dec
mov
or
movsl
shr
pop
jb
loopne
pop
sar
int3
push
jmp
pop
dec
pop
sbb
jbe
test
push
inc
cmp
push
bound
fdivrl
in
into
mov
or
cmp
jg
lods
daa
es
clc
pop
addr16
jnp
popa
xchg
or
iret
mov
popf
fiadds
adc
lret
or
pusha
cmpsb
in
fisttpl
push
cmpsb
ficoml
dec
xchg
dec
enter
or
aaa
inc
repz
cli
roll
jbe
jo
jg
jg
ds
dec
adc
mov
xor
and
cmp
jnp
xchg
fldt
push
int
or
push
mov
test
jno
test
fsts
shll
push
sub
sub
or
add
into
adc
inc
mov
push
frstor
lods
ljmp
lock
push
sub
xlat
push
cs
in
pop
mov
jmp
les
sahf
fs
mov
xchg
js
adc
sub
sbb
popa
adc
push
insb
in
es
cmp
jp
je
push
sub
cmpsl
ret
repz
rcll
jb
test
cmp
jmp
dec
push
jecxz
dec
ret
inc
and
dec
xchg
and
mov
hlt
or
popa
aam
mov
aas
cs
adc
jne
xchg
les
or
stos
xrelease
sub
sub
jp
add
mov
insl
xchg
leave
push
fadd
xor
out
ja
fst
add
lret
cmpsb
shl
test
je
sbb
shlb
push
push
daa
imul
es
iret
mov
pushf
mov
mov
aaa
mov
shlb
cli
cli
cmc
mov
sub
xchg
test
jg
in
int3
fcomps
push
lret
xor
inc
fcoml
pushl
jmp
test
sub
add
test
xchg
popa
push
in
inc
inc
insb
hlt
sub
fwait
push
call
stos
test
ss
cltd
repz
adc
int
pop
lcall
ret
jl
xchg
rcr
ds
pop
xor
pop
bound
add
adc
inc
pushf
sahf
push
or
addr16
sub
and
mov
popf
popa
jo
pop
jecxz
cld
add
xchg
jbe
out
inc
pop
in
and
divb
mov
les
sub
and
aaa
enter
popa
fcmovbe
lods
jmp
mov
inc
xchg
xchg
jg
gs
dec
and
adc
add
inc
in
sbb
push
xchg
int3
movsl
pusha
jmp
mov
push
adcb
mov
ror
outsl
push
ror
int
test
sbb
cmp
rcll
mov
hlt
dec
push
push
push
xchg
pop
jmp
mov
and
into
out
sbb
xor
into
jnp
mov
int
pop
jbe
clc
subl
std
setno
arpl
fsts
fnstcw
or
out
stos
push
lcall
dec
jmp
int
sbb
aas
mov
sub
or
pushf
mov
cmp
mov
mov
xlat
jg
xchg
fidivs
ret
mov
imul
fcoms
repz
pop
cmpl
pop
mov
popfw
iret
add
and
lock
fnstenv
scas
inc
insb
add
lahf
jnp
int3
cli
mov
dec
shrl
mov
add
mov
cmp
xchg
xor
cmpsl
sub
push
sub
das
mov
or
inc
in
push
call
fwait
jae
rol
arpl
fadds
pop
mov
mov
and
pushl
add
lret
add
int3
sub
sbb
mov
xchg
movl
mov
push
loope
pop
cld
xchg
mov
test
test
and
pop
xor
inc
pop
es
cli
fldl
jmp
push
lret
in
cld
xchg
and
dec
cli
xchg
test
aad
in
in
or
scas
nop
or
cmc
cli
popa
mov
add
mov
mov
inc
lock
sub
movsl
xor
movsl
loope
push
xchg
fistpl
hlt
mov
mov
lods
gs
test
push
loop
jge
sub
gs
or
das
scas
xchg
popa
lret
fsubl
mov
mov
inc
dec
fisubs
xorb
xchg
sbb
lret
cmp
push
mov
je
xor
push
dec
push
push
scas
cmc
jl
cmpsb
sub
pushf
scas
in
ret
mov
cs
test
xchg
stos
xchg
xchg
repnz
lock
inc
pop
fdivr
scas
mov
pop
pusha
lods
loopne
daa
les
add
pushf
or
mov
int
inc
add
mov
fdivrl
mov
data16
dec
out
dec
mov
push
test
lret
dec
mov
mov
loop
jno
mov
mov
or
inc
or
addr16
test
xor
pushf
sbb
std
sbb
sbb
sbb
pop
pushf
call
daa
xor
repnz
outsb
pop
movsb
imul
aaa
out
arpl
dec
lea
pop
push
mov
push
popa
xlat
mov
xchg
or
mov
popl
mov
mov
imul
in
ds
pop
jae
mov
lock
rorb
aaa
popf
fwait
or
sbb
inc
adc
mov
cmp
movsl
lret
or
add
imul
mov
sarl
pop
xchg
and
jge
in
push
popf
mov
movsl
or
or
insb
popf
sbb
xlat
out
adc
popa
lods
and
fstpl
adc
pop
pop
dec
sbb
ror
mov
push
sub
or
das
sbb
lret
je
xchg
mov
xlat
test
in
xor
cmpsb
xchg
subl
es
mov
and
stos
pop
mov
adc
xlat
dec
frstor
out
into
cmc
lret
push
pop
sbb
mov
rolb
xchg
ret
das
hlt
jo
jle
repnz
mov
fwait
repz
inc
add
nop
xchg
mov
orb
imul
mov
dec
and
mov
sbb
xchg
lahf
ret
repz
cmpsb
iret
jg
cmp
lea
mul
xchg
mov
jae
adc
inc
icebp
loopne
xchg
or
lods
jecxz
scas
outsb
push
or
xor
in
xchg
mov
out
mov
dec
hlt
cmp
inc
aam
cs
loope
movsl
xor
mov
pop
jo
jge
ficoml
sbb
mov
roll
shll
mov
jmp
pop
inc
push
aad
js
ret
in
call
call
push
sbb
and
jmp
dec
mov
rclb
loop
cmp
loop
cs
or
lds
fwait
scas
add
lock
or
imul
dec
insb
xchg
mov
mov
mov
push
data16
in
arpl
les
xchg
scas
ljmp
push
push
loop
ja
dec
mov
in
xor
adc
testb
call
fisttpll
push
sbb
movsl
xchg
in
xchg
fndisi(8087
cmp
cmp
cltd
out
in
loope
loop
lds
push
xor
das
pop
ss
fs
clc
pop
nop
fmul
push
repz
mov
test
add
cmp
sbbl
push
jae
xor
cli
pop
mov
and
jmp
xor
stc
xchg
mov
stos
pop
cmp
call
loop
ss
cmp
cs
push
jle
push
pop
nop
les
inc
fdivl
push
data16
pop
aam
lcall
mov
loop
fs
mov
push
lea
into
inc
inc
repnz
clc
jle
icebp
shll
or
push
gs
in
enter
jl
push
out
inc
inc
cld
pop
test
int
add
dec
push
cmc
add
sub
push
hlt
loopne
sar
hlt
sbb
int3
test
push
mov
mov
jae
jno
cmp
mov
movsb
push
dec
ljmp
aad
stos
data16
jl
sbb
and
mov
jae
fistpl
xchg
ret
idiv
insb
inc
jl
cmpsb
or
push
pop
add
push
jp
push
ss
add
lock
cld
stos
dec
mov
andl
sahf
pop
sbb
enter
or
mov
cmc
inc
mov
add
stos
outsb
add
cmp
in
ret
lcall
inc
fisttpl
xor
repnz
pop
pop
seto
rclb
inc
xlat
mov
mov
in
jne
and
test
sarl
aaa
ret
outsb
clc
int3
lcall
sub
jnp
mov
ret
adc
or
clc
mov
loop
out
sbb
or
pop
adc
push
scas
aas
dec
sbb
test
daa
icebp
iret
fs
jo
std
out
push
stc
addl
xchg
cmpb
jnp
ret
adcb
jl
in
movsl
and
sbb
add
stc
repz
das
xor
mov
outsb
imulb
out
outsb
lahf
mov
lds
or
and
mov
pop
and
inc
mov
pop
clc
dec
movsl
int
int
push
test
jnp
xor
cltd
push
push
cmp
mov
cmp
std
mov
rcr
rcr
lods
mov
xchg
mov
mov
hlt
xchg
stos
xchg
jnp
pop
dec
jmp
xor
mov
jge
sub
insl
add
cmpsl
mov
xchg
out
repnz
push
je
or
mov
fs
adc
add
das
push
sub
and
insb
adc
aad
xchg
or
and
arpl
xorl
dec
sbb
xchg
and
push
xor
das
fadds
out
pop
ret
inc
dec
lods
loopne
push
lret
adc
fsubrl
xor
cmp
lock
mov
popf
fdivrs
lock
jno
aas
sbb
rolb
push
inc
lcall
jge
in
movsb
stc
sarb
mov
inc
aam
xchg
int3
les
outsb
enter
stos
in
jp
mov
or
addb
ret
fucomip
push
cmp
das
sub
sbb
xlat
lods
dec
adc
mov
outsl
outsl
pop
pop
movsl
loopne
mov
add
lds
and
pop
push
inc
fs
xchg
data16
dec
inc
out
rorb
push
lret
pop
sbb
shll
or
add
iret
pop
lock
dec
inc
sbb
fists
sbb
sub
lock
pop
pop
mov
mov
add
outsb
mov
shr
rorl
cld
int
push
sbb
negl
dec
std
cmc
lret
addr16
inc
jne
sbb
fcmovnb
pop
mov
subl
xor
sarb
mov
or
push
mov
cmp
mov
in
insb
das
data16
xchg
sbb
stos
push
fldcw
xchg
in
xchg
mov
lcall
jne
xchg
pushf
dec
fdivs
aam
in
xchg
cmp
clc
add
mov
outsl
gs
push
push
jae
mov
in
test
cmp
loop
stos
jnp
pop
adc
inc
mov
rolb
sbb
mov
jb
movl
out
ss
in
push
xor
pop
xor
cmp
imul
push
rolb
out
dec
notl
call
test
call
or
dec
mov
fbstp
adc
sub
dec
sub
repnz
lods
jae
mov
les
push
sbb
xchg
mov
faddl
xchg
xchg
add
cmp
add
movsb
cmpl
push
mov
into
cmpsb
fwait
mov
mov
in
jp
mov
jp
lods
dec
inc
push
pop
stos
icebp
cmp
add
fs
loopne
mov
or
jmp
js
lahf
sub
jbe
dec
pop
or
sub
or
fsts
push
jg
sahf
inc
aas
lret
and
mov
or
dec
enter
xchg
jle
pop
mov
in
push
push
cmp
gs
mov
imul
int
jne
cli
push
into
xor
out
pop
decl
jmp
ss
lock
push
iret
lret
dec
adc
mov
sti
push
xor
incl
inc
test
test
lret
cli
push
mov
pop
popf
or
mov
fstpl
push
mov
ja
stos
outsl
sub
cltd
push
lea
mov
pop
enter
insb
cmp
dec
aas
sbb
push
repz
int
inc
imul
shll
fnstsw
cmp
les
inc
pusha
in
std
stc
xchg
lret
jae
popf
pop
jno
mov
mov
syscall
loope
push
popa
dec
clc
mov
sub
mov
leave
pop
dec
and
cmpl
out
push
scas
and
add
sbb
lea
xchg
enter
sub
cltd
rorb
cmpsl
cmp
cmp
imull
shl
cltd
das
mov
inc
aas
push
inc
mov
jecxz
jb
inc
hlt
lahf
sub
rcll
inc
filds
pushf
aad
fidivrs
pop
in
fnsave
mov
ret
push
std
jge
xchg
push
loope
xchg
sbb
dec
and
in
rorl
in
andnps
stc
roll
rolb
ljmp
mov
mov
hlt
xor
push
mov
add
xor
dec
bound
and
and
out
mov
sub
fnstenv
adc
pop
stc
push
add
pop
xor
and
daa
push
repnz
fwait
hlt
xor
je
sbb
adc
or
mov
bound
cmpsb
jae
aas
xlat
cli
cmovns
ret
push
test
cmp
rorb
shl
mov
nop
mov
or
pop
mov
mov
jns
xchg
ret
inc
xchg
je
mov
mov
push
in
push
add
es
fstpl
sbb
stos
ret
adc
sub
inc
adc
jmp
inc
pusha
es
into
nop
add
sub
stc
test
int3
xor
and
push
fsts
ret
inc
jmp
mov
or
pushf
xor
pop
pop
mov
lock
push
sub
mov
mov
push
push
push
sbb
pop
inc
push
mov
sub
jmp
jne
hlt
pushf
adc
mov
push
sub
mov
out
cs
adc
jle
cli
outsl
mov
xor
adc
aas
cli
inc
push
not
popf
in
push
or
adcb
fnstsw
out
int3
std
mov
mov
cmp
fdivrp
pop
dec
mov
sbb
aad
pushf
lahf
xchg
fwait
insl
loope
cwtl
sub
ret
or
lret
add
iret
cmpsl
mov
imul
aaa
fcompl
pop
mov
imul
aam
mov
pop
push
or
cmpsb
mov
adc
rol
rcrb
cmp
out
mov
imul
rolb
push
push
sbb
jb
clc
cltd
xchg
push
imul
inc
int3
cmpsl
mov
xchg
jns
or
or
movb
jno
sbb
mov
cltd
les
xchg
cmc
std
in
movsl
push
cmp
cmp
cs
jne
popa
ret
fst
inc
pop
jge
popa
fsubrl
mov
xor
pop
mov
sbb
add
lcall
sbb
addl
pop
sbb
int3
sub
jg
sbb
pop
jle
cmp
mov
fadds
inc
mov
decb
insb
shrl
xor
popa
cmp
orb
enter
inc
add
pop
add
dec
lret
jmp
pop
push
xor
or
xchg
sub
push
daa
adc
fstpt
dec
imul
aaa
inc
int3
mov
xchg
test
pop
sahf
int
jns,pn
int
xor
mov
adc
repnz
xor
jmp
mov
push
cwtl
and
in
out
push
cmp
jecxz
mov
loope
icebp
mov
xor
iret
jp
repz
mov
mov
js
push
fidivs
clc
jne
cmpsb
arpl
jb
in
lock
push
out
xor
test
fidivl
in
pusha
int
adc
lods
jns
out
aam
movsb
mov
das
sub
push
ja
pop
sarb
cmp
mov
test
xor
sbb
movsl
call
ret
imul
daa
call
pop
out
jecxz
fcoml
or
cli
fsubl
dec
hlt
mov
dec
notl
bound
int
ret
sub
int3
inc
mov
lret
mov
cmc
adc
inc
stc
fstps
cmp
out
xchg
ret
push
mov
jae
dec
sarb
xchg
adc
and
fists
jae
loopne
or
pop
daa
jae
xchg
pop
push
out
xchg
xchg
call
aam
inc
arpl
sbb
mov
sub
test
xchg
nop
xchg
mov
push
testb
nop
cmp
popa
rorb
jo
push
lock
test
mov
inc
and
sbb
incb
call
lret
sbb
shl
lahf
stos
cltd
cltd
adc
sbb
dec
es
and
shlb
cmp
or
cwtl
pop
ljmp
mov
scas
jecxz
stos
leave
in
test
fildl
add
out
stos
sar
mov
cmpsl
idiv
push
shrb
mov
mov
sub
leave
leave
addl
jno
inc
cmp
popa
pushf
fisttpll
xor
cmp
or
flds
fidivs
or
mov
jb
std
pop
sub
push
call
pop
aaa
mov
inc
leave
mov
or
aaa
mov
in
pop
mov
ss
sbb
cmpsb
dec
add
outsb
push
sub
sub
jmp
sahf
call
dec
inc
push
ja
test
inc
pop
jb
lret
stos
insl
mov
dec
into
aas
filds
mov
xor
ja
dec
jae
dec
or
push
daa
mov
xchg
adc
lcall
fnstenv
cmp
mov
pop
stos
mov
or
rorl
jmp
fiaddl
inc
pop
fstpt
mov
ds
mov
adc
jb
push
negl
fadds
in
shrl
jmp
inc
fldenv
add
dec
mov
or
sbb
pandn
push
mov
xor
fstl
fnstenv
dec
mov
daa
cli
pushf
mov
cmp
sub
pop
aaa
out
js
jp
insb
stos
push
dec
push
mov
cmp
je
push
mov
negb
and
aad
mov
mov
or
or
push
out
lods
int3
subl
pop
ret
mov
enter
testb
add
mov
mov
add
in
pop
data16
jg
inc
lods
jns
repz
xchg
rclb
adc
push
data16
sti
roll
sbb
jp
dec
jp
in
jg
mov
mov
cmp
call
jl
pop
jb
add
sub
out
neg
mov
push
mov
pop
outsl
lahf
xor
out
sti
fstpt
lret
cmp
sahf
enter
push
xchg
and
in
pop
lods
sti
add
sub
lahf
or
scas
pop
and
fwait
fdivrl
push
outsb
jecxz
jno
push
inc
ss
scas
lret
dec
adc
nop
xor
popf
xchg
mov
or
dec
ficoml
jmp
pop
cmp
adc
mov
test
cmp
scas
jno
std
sarb
xor
imul
lea
mov
xor
shlb
shlb
out
dec
pop
or
sbb
pop
aas
xlat
test
xlat
test
iret
shl
mov
decl
ret
or
mov
icebp
out
fmuls
push
mov
ds
bound
sub
daa
pusha
push
inc
js
into
or
call
mov
sbb
iret
or
jmp
or
pop
jg
addr16
popa
and
stos
jge
call
jle
add
fpatan
xor
call
movsl
sbb
push
inc
push
inc
xchg
shlb
int
mov
roll
pushf
out
mov
mov
mov
inc
andl
cmc
mov
jle
stc
or
pop
mov
call
add
insl
mov
dec
pop
cmp
out
fcoms
js
add
or
aas
or
cmp
inc
sub
mov
xchg
mov
jg
arpl
xor
or
or
and
push
mov
cltd
mov
cmp
jno
stos
enter
cmp
adc
imul
movsb
daa
pop
lret
gs
out
loopne
aad
loope
pop
clc
xchg
add
push
and
imull
sub
repnz
pusha
add
popf
xchg
cltd
fsub
mov
daa
push
movsl
out
and
fs
lret
cld
inc
in
stc
fwait
xchg
sar
adc
popf
fcomps
xor
xchg
sbb
mov
xlat
adc
jge
mov
adc
call
int
mov
movsl
pop
fcoml
xchg
mov
mov
and
jnp
sbb
fistpll
mov
xchg
call
mov
and
cmp
call
cmp
adc
mov
fucomp
addr16
sahf
xor
repz
sbb
insl
lods
in
sbb
xchg
aaa
and
out
test
call
cs
popl
push
data16
sbb
cmpsb
stos
jecxz
fidivl
jg
je
adcl
bound
jg
jbe
adc
je
ret
lret
push
sbb
insl
stc
sub
xchg
fnstcw
ss
aas
or
or
add
ror
sbb
loopne
jge
pop
or
mov
add
ss
cmpsl
push
daa
loopne
std
or
dec
pushf
inc
pop
lcall
imul
or
lret
push
mov
mov
sbb
mov
test
dec
popf
xchg
push
mov
dec
jle
stos
xchg
rcll
xchg
sub
in
mov
add
mov
xor
sub
and
out
iret
mov
pop
aas
xchg
rorl
icebp
jle
stos
cltd
sbb
push
dec
adc
cli
and
mov
xchg
pop
mov
stc
inc
jbe
int3
sub
push
les
pop
push
leave
jb
rolb
fdivs
mov
inc
jae
pop
pop
lods
aas
out
jp
cmpsb
enter
outsb
cmp
bound
aad
jecxz
push
inc
cmpsb
mov
xor
xor
adc
pushl
add
sbb
test
cld
adc
jl
push
sbb
rolb
push
and
fsts
pop
repz
iret
fs
stos
mov
jge
jle
call
test
and
in
jle
dec
outsb
cltd
push
xchg
sbb
shr
push
xchg
and
rorb
rol
and
movsb
and
loop
mov
add
dec
mov
add
popa
loop
int
add
cmpsl
fcomps
rcll
inc
pop
stos
pop
mov
sbb
fstps
mov
fnstenv
ret
sub
mov
rorl
push
xchg
xor
fwait
das
fs
xchg
cld
lea
daa
scas
test
mov
lcall
xor
rcl
dec
gs
adc
push
and
int3
mov
add
mov
aas
adc
dec
ss
push
and
insl
mov
icebp
stos
pop
or
or
movsl
std
test
pop
xor
cmp
and
movsb
and
ds
sbb
faddl
sarl
pushf
cld
sub
fs
sbb
in
daa
loope
add
shll
in
into
cltd
pop
mov
rcrl
pop
push
lret
sbb
xor
xor
sub
fwait
jmp
mov
jmp
mov
inc
push
jmp
mov
dec
iret
add
enter
xchg
mov
mov
jge
xchg
sub
sub
xor
enter
sbb
adc
imul
add
mov
and
pusha
shrl
shl
xchg
lcall
movsb
push
push
cmp
adc
push
sub
test
add
loope
xlat
jle
cld
and
xlat
cmp
xchg
les
inc
iret
lods
loop
and
fidivrs
lods
xor
jge
outsl
repz
cld
jle
mov
sbb
filds
add
dec
jo
leave
pop
iret
jecxz
pop
xchg
inc
loop
inc
cmp
aas
divl
ficomps
jo
jl
int
xor
cmp
mov
xor
sub
in
bound
imul
ljmp
xor
scas
xor
outsl
xor
mov
jbe
xor
out
dec
push
push
or
call
call
sbb
in
rorb
mov
cmc
int3
jl
pop
pop
add
movzbl
add
mov
and
push
push
push
in
mov
mov
inc
leave
sbb
push
jp
dec
inc
jg
xor
xchg
inc
loop
pushf
dec
jg
shll
and
fsubs
and
or
push
adc
movsb
cmc
add
insl
stos
sub
mov
in
adc
out
aas
sub
scas
ret
adc
sub
and
insb
or
lcall
add
imul
pop
mov
fiaddl
aad
inc
cmp
and
filds
xchg
mov
jae
and
pop
les
cmp
int3
lds
ret
pop
repnz
or
rclb
cmp
jl
fucomip
in
cmp
cmp
bound
dec
push
xor
iret
out
cmp
clc
mov
call
daa
jb
or
sbb
cmp
jns
mov
mov
jo
sti
fs
les
fwait
mov
pushf
aam
cli
js
dec
xchg
mov
mov
std
arpl
xchg
icebp
add
enter
push
dec
ret
outsb
adc
pop
je
out
dec
xor
pushf
pop
mov
jge
lods
xchg
hlt
inc
or
je
mov
and
mov
repz
jmp
jb
in
jo
or
mov
fnstcw
xchg
adc
mov
push
or
mov
ja
das
fldt
fisttpl
add
loop
mov
aad
shlb
mov
aad
push
xlat
arpl
fwait
repz
dec
and
outsb
cmpl
ret
jns
insl
push
call
daa
jmp
sbb
jae
mov
xchg
dec
ss
int3
je
adc
ret
xchg
in
aam
sbb
dec
insl
rorb
xchg
rclb
mov
and
xchg
inc
in
enter
xor
jg
aam
mov
or
and
xor
mov
inc
les
es
pushf
sbb
icebp
sub
mov
xchg
xor
call
imul
rorl
pushf
daa
mov
lock
sbb
or
loopne
insb
jl
sbb
repnz
dec
cmpsl
imul
mov
dec
jecxz
mov
aam
ljmp
xchg
sub
mov
or
inc
cli
fsubrl
mul
imul
orb
sub
pop
sbb
jo
mov
jbe
mov
add
test
xchg
arpl
shlb
inc
and
adc
aad
pushf
in
mov
jne
cmp
jmp
ljmp
dec
mov
je
mov
or
shll
sbb
mov
push
or
mov
test
inc
push
sub
clc
inc
insl
or
mov
mov
into
lcall
jns
cmpsl
add
pop
stos
scas
sbb
fcomp
add
fists
lahf
pop
cmp
inc
ds
pop
cmp
and
sub
or
aam
cmp
ret
insb
fcompp
adc
cwtl
inc
pop
xchg
dec
dec
xchg
push
mov
mov
mov
add
mov
sti
cmp
jbe
cmp
pop
add
push
mov
repz
dec
loope
mov
cmp
lods
hlt
mov
sbb
inc
and
push
push
push
dec
jns
pop
into
lret
pop
scas
push
mov
push
mov
xchg
sbb
arpl
add
pop
jno
push
sub
in
movsl
mov
pop
mov
adc
fs
dec
cld
pushf
addb
inc
inc
add
adc
insb
mov
mov
in
leave
xchg
mov
mov
xor
and
jnp
or
jb
andb
in
mov
jmp
shlb
sbb
mov
leave
and
popf
pop
mov
mov
icebp
mov
fs
xchg
and
test
mov
mov
int3
mov
movsl
pop
fsubr
aad
cmpsl
cmp
fwait
mov
jmp
sub
insl
mov
dec
or
cmp
setne
fisttps
aas
cli
xor
push
sbb
lods
or
push
nop
mov
xor
push
xor
es
mov
dec
mov
cwtl
add
stos
sub
mov
push
adc
add
cs
and
pop
push
rol
outsb
mov
xor
cmp
cmp
pusha
push
inc
and
xchg
pop
leave
jmp
out
inc
mov
scas
mov
inc
stc
or
shl
popf
mov
icebp
xchg
dec
cmp
mov
cmc
hlt
outsb
xchg
in
rorl
cmp
fistl
in
ret
dec
ljmp
in
cmp
mov
jnp
fmull
pop
gs
xor
jno,pn
iret
mov
cmp
push
loopne
stos
fwait
push
movsl
or
sub
test
pop
xor
push
sub
jp
ret
mov
mov
cmp
xchg
and
clc
push
pop
popf
xor
mov
xchg
add
mov
mov
push
xor
and
jb
cmp
rcll
std
loope
arpl
adc
or
and
lock
jne
stos
aas
bound
div
insb
das
sti
xorb
jnp
sub
lahf
pop
xchg
push
ss
mov
cmp
and
mov
cmp
sbb
mov
lock
jl
inc
sbb
adc
scas
fsts
xchg
int3
cmp
and
jne
lea
xchg
xchg
into
clc
dec
xor
test
xor
sub
or
test
and
fsub
jmp
lods
push
js
int
cmp
add
cmpsb
je
jp
out
cmc
push
mov
and
xor
mov
imul
push
fs
inc
outsl
or
inc
xor
sahf
movsb
mov
xchg
mov
in
sub
daa
push
mov
xchg
imul
sbb
inc
xchg
fisubrl
pop
lret
push
jmp
stos
sub
or
adc
aad
push
adc
ss
mov
mov
mov
or
pop
enter
jns
and
loopne
call
xchg
icebp
call
xchg
stos
int3
inc
clc
dec
pop
mov
push
lock
out
pop
mov
into
mov
cmp
jl
mov
subl
test
jo
in
push
push
xorl
mov
aaa
cmp
dec
inc
pop
sub
daa
mov
cmpsb
out
das
stos
sarl
adc
and
and
out
sub
je
fsubrl
jne
inc
mov
mov
add
in
outsb
incb
pop
out
sbb
push
andl
jb
jno
jle
lock
popa
repz
push
repnz
jae
mov
in
aas
push
shll
push
rorb
mov
sbb
xchg
mov
xor
insb
iret
inc
and
mov
mov
inc
mov
pop
inc
push
pop
inc
push
int
xchg
loop
lds
ja
shlb
sub
in
stos
and
iret
test
pop
mov
cmpsl
push
pop
xor
orb
sbb
cmp
inc
or
inc
out
or
lret
xor
stc
sbb
frstor
sub
push
and
push
mov
add
jbe
inc
dec
leavew
outsl
sti
ljmp
or
ret
xchg
and
inc
pop
shl
jae
hlt
call
and
adc
mov
mov
jns
pop
inc
dec
pushf
lcall
imul
lcall
mov
aas
sbb
cmp
jnp
enter
mov
push
mov
push
test
pop
jae
int3
ds
sub
push
call
insl
mov
jnp
in
pop
call
in
mov
lods
mov
xor
enter
xor
pop
int
xor
mov
stos
adc
lret
popa
hlt
xor
add
bound
cmpsb
jecxz
xor
jp
jae
xchg
lock
fcompl
and
jnp
loop
out
adc
mov
lds
and
jle
les
cltd
mov
add
movsb
gs
movsb
push
cmpl
cmpsl
or
sbb
add
xor
pop
test
add
sub
dec
pop
ljmp
repz
iret
lods
mov
repz
leave
push
test
xchg
ret
sti
test
fistl
pusha
inc
out
outsb
insl
cmp
adc
inc
fwait
sub
inc
sbbl
test
sbb
or
addr16
mov
popf
movsb
data16
test
adc
sbbb
int3
dec
mov
xor
sub
aaa
or
xchg
test
mov
add
mov
repz
inc
cmp
or
pop
sub
xlat
aas
add
subl
jle
mov
jmp
in
push
mov
jl
ss
xchg
inc
cmp
lahf
cmp
dec
bnd
pop
mov
push
mov
dec
and
fwait
aad
mulb
jp
andl
fadd
mov
or
lods
pop
test
fsubs
inc
mov
mov
imul
mov
xor
or
wrmsr
ret
popa
mov
mov
pop
mov
push
test
jae
dec
inc
jmp
mov
addr16
mov
sbb
mov
inc
loope
loopne
xchg
sbb
xchg
sub
sub
pushf
mov
pop
ljmp
and
inc
les
clc
jns
pusha
lea
dec
mov
pop
shlb
adc
pop
mov
cs
cwtl
aam
mov
mov
sub
iret
in
xor
inc
jne
sbb
xor
xchg
ds
add
push
outsb
outsl
jmp
xchg
adcl
cmc
sbb
dec
jns
cwtl
mov
adc
pop
xchg
daa
cmp
out
shll
sub
outsl
loopne
jge
inc
add
stos
and
dec
pop
fisubs
jmp
lcall
mov
inc
in
rcll
push
pop
sarb
push
imul
lds
data16
dec
icebp
and
inc
ret
push
std
adc
fisubrl
pop
dec
leave
pop
jle
mov
xor
pop
mov
inc
subb
pop
pop
test
icebp
sbbb
mov
dec
jo
fstl
dec
ja
lds
push
lahf
data16
js
fmulp
insb
stos
mov
popf
mov
lds
mov
in
push
pop
enter
adc
jp
je
push
mov
jmp
test
test
cmp
dec
jae
pop
andl
push
mov
jnp
inc
out
test
jle
jnp
pop
pop
mov
sub
jns
mov
cmpb
jno
lods
shll
movsl
les
add
push
cmp
cmpsb
sbb
scas
and
pusha
and
das
mov
stos
fnstcw
insl
jg
lret
push
push
jge
adc
idivl
dec
in
xor
out
dec
push
inc
mov
iret
in
fidivrs
leave
push
roll
or
ljmp
inc
mov
and
lds
test
in
sub
and
nop
lea
lds
gs
test
cwtl
mov
pop
aas
cmpsb
adc
inc
gs
shr
out
or
repnz
je
stos
jmp
push
add
sub
and
cmc
into
out
dec
xchg
mov
aaa
fiaddl
adc
push
jp
or
ret
push
hlt
pop
shlb
inc
roll
adc
or
sub
jp
mov
cmp
xlat
mov
jmp
or
icebp
push
mov
loop
mov
mov
jp
jmp
add
repnz
aas
jecxz
xchg
int
sbb
inc
mul
adc
sbb
dec
and
mov
addr16
loop
or
ficoml
dec
mov
test
std
jnp
cmp
add
ficoms
xchg
dec
lea
ret
gs
dec
add
gs
mov
jne
stc
mov
add
mov
xchg
dec
mov
test
fcomip
addr16
mov
cmpsb
out
movsb
fdiv
sbb
lods
inc
pop
mov
test
pushf
scas
pop
imul
xor
lock
adc
dec
mov
call
pusha
iret
and
rcrl
mov
stos
pusha
and
jo
pop
add
lods
mov
pusha
aad
jbe
gs
cmc
dec
mov
sti
pop
mov
cltd
fcoms
fisttpll
push
mov
lcall
lret
push
aad
in
or
cmp
test
push
rol
fcompl
fwait
pop
pop
xor
test
fisubs
lds
mov
fldcw
adc
emms
testb
cmp
mov
out
dec
outsb
lret
xor
popa
cld
add
aaa
cmpsl
bound
std
mov
cmp
insb
mov
shll
int3
