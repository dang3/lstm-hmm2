push
mov
sub
test
sub
andl
push
lea
push
movb
mov
mov
mov
mov
rep
mov
mov
rdtsc
mov
mov
mov
mov
not
ror
not
movzbl
lea
cmpb
jne
mov
push
push
push
movb
call
push
call
push
push
pushl
mov
call
mov
mov
cmp
jne
movzbl
push
push
pushl
call
pushl
push
pushl
call
xor
pop
push
add
pop
pop
leave
ret
mov
add
mov
test
je
add
add
add
add
add
push
mov
push
lea
xor
cmp
jbe
add
lea
test
cmp
jb
mov
add
xor
cmp
jbe
add
push
add
pop
cmp
jb
pop
pop
xor
push
add
pop
ret
push
push
push
push
mov
call
mov
jmp
push
push
mov
mov
mov
mov
mov
mov
cmpb
jne
cmpb
jne
pop
pop
ret
push
mov
mov
mov
add
sub
add
push
mov
test
jne
xor
jmp
mov
add
mov
push
mov
mov
mov
push
mov
add
add
add
mov
mov
test
jns
and
sub
cmp
jae
mov
jmp
xor
mov
cmp
jae
jmp
mov
mov
mov
mov
add
mov
call
cmp
je
incl
mov
cmp
jb
mov
mov
mov
cmp
je
movzwl
mov
add
test
je
mov
add
cmp
jae
cmp
jb
xor
cmpb
je
sub
cmpb
jne
push
lea
push
push
mov
call
add
sub
lea
push
mov
movb
call
mov
test
jne
xor
jmp
lea
call
push
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
or
mov
movzbl
push
add
pop
mov
mov
imul
lea
mov
decl
jne
lea
pop
ret
push
push
push
xor
call
mov
lea
test
jbe
mov
movzwl
mov
and
rol
add
lea
test
jne
test
jns
lea
and
or
pop
mov
pop
ret
push
push
xor
push
mov
call
mov
push
push
mov
call
push
mov
call
mov
xor
sub
cmp
jne
push
pushl
push
mov
call
jmp
cmp
jne
push
push
push
push
push
push
mov
call
test
je
push
call
push
call
push
jmp
cmp
jne
testl
jne
cmp
je
push
mov
call
pop
test
jne
mov
call
jmp
cmp
je
push
push
push
xor
call
push
mov
call
xor
pop
pop
ret
push
mov
sub
sub
mov
add
mov
xor
mov
cmp
je
add
add
add
mov
cmp
je
push
mov
push
cmpl
jne
mov
add
push
mov
call
mov
mov
call
push
pushl
call
test
je
mov
mov
add
jmp
cmp
je
inc
mov
mov
test
jne
jmp
mov
lea
mov
mov
add
sub
cmpl
jne
pop
pop
lea
push
mov
movb
movb
movb
call
leave
ret
push
xor
cmp
jbe
lea
push
mov
add
mov
add
add
add
add
cmp
jb
pop
pop
ret
push
mov
sub
cmp
sub
push
mov
mov
add
mov
test
jne
inc
jmp
andl
push
lea
lea
cmpl
push
je
mov
mov
add
push
mov
call
mov
test
je
mov
andl
add
cmpl
je
mov
pushl
pushl
call
mov
test
je
mov
mov
mov
mov
mov
mov
mov
incl
mov
mov
lea
cmpl
jne
mov
incl
mov
imul
lea
lea
cmpl
jne
xor
push
add
pop
pop
pop
pop
leave
ret
xor
jmp
push
mov
sub
sub
push
mov
push
xor
push
cmp
jne
push
mov
call
push
lea
push
xor
sub
push
mov
push
mov
mov
call
push
mov
call
push
push
push
push
mov
call
mov
mov
call
cmp
jne
cmp
jne
cmpw
jne
push
push
push
push
mov
call
push
push
mov
push
mov
call
cmp
je
mov
jmp
lea
push
mov
mov
push
pushl
push
mov
call
cmp
je
cmp
jne
lea
call
pushl
mov
pushl
mov
push
call
mov
sub
mov
mov
add
push
lea
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
call
mov
mov
sub
add
push
and
add
push
call
mov
mov
add
mov
mov
mov
add
movzwl
lea
add
mov
movzwl
lea
mov
mov
sub
xor
mov
cmp
je
mov
cmp
je
add
mov
mov
mov
jmp
mov
mov
mov
cmp
je
add
lea
mov
mov
mov
mov
add
push
push
push
call
or
sub
mov
mov
mov
sub
push
push
call
push
call
test
je
cmpl
je
mov
mov
call
mov
add
mov
push
lea
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
call
push
lea
push
mov
push
pushl
mov
call
mov
call
push
lea
push
push
pushl
mov
call
mov
call
push
lea
push
push
pushl
mov
call
mov
call
push
lea
push
push
pushl
mov
call
push
lea
push
push
pushl
mov
call
push
lea
push
push
pushl
mov
call
push
lea
push
push
pushl
mov
call
push
lea
push
push
pushl
mov
call
mov
mov
mov
mov
mov
xor
xor
cmp
jae
mov
mov
mov
addl
cmp
addl
push
pop
rep
mov
mov
mov
add
sub
add
mov
movzwl
add
cmp
jb
xor
push
push
push
push
push
mov
call
mov
call
cmp
je
in
push
push
pushl
mov
call
jmp
pushl
pushl
pushl
jmp
xor
pop
pop
pop
leave
ret
mov
xor
cmp
je
push
add
pop
push
add
pop
cmpb
jne
ret
push
mov
push
mov
movzwl
movzwl
andl
add
je
push
mov
push
lea
testl
je
mov
mov
and
add
push
push
pushl
call
jmp
mov
mov
add
add
movzwl
movzwl
incl
add
add
sub
cmp
jb
pop
pop
pop
pop
ret
push
mov
push
push
mov
mov
mov
mov
push
push
lea
mov
mov
mov
sub
not
sub
not
shr
add
push
mov
add
add
push
lea
push
mov
call
add
add
mov
mov
mov
mov
push
popl
sub
sub
lods
xor
stos
add
sub
sub
sub
roll
sub
dec
jne
mov
mov
neg
add
add
sub
add
mov
imul
add
mov
imul
add
mov
mov
mov
sub
add
and
add
movl
mov
pushl
lea
push
push
mov
call
mov
add
xor
add
add
sub
decl
mov
jne
addl
addl
pop
pop
leave
ret
push
mov
cmpl
push
push
jb
mov
mov
mov
pushl
popl
sub
cmp
sub
lods
xor
stos
sub
sub
add
sub
roll
sub
push
add
pop
jne
pop
pop
pop
ret
cs
sub
outsl
add
push
add
add
loope
and
in
xor
sbb
xor
ljmp
call
inc
mov
mov
xchg
mov
or
ret
popa
stos
and
in
sbb
jecxz
add
movsb
fistps
or
dec
icebp
pop
pop
or
or
rcrb
mov
scas
pop
imul
addr16
dec
data16
adc
out
sub
adc
xor
mov
in
ret
mov
adc
in
popa
add
aaa
popa
je
add
imul
mov
cmp
or
mov
cld
repz
sub
cmp
std
push
cltd
or
test
nop
xchg
and
stc
lock
mov
xchg
mov
pop
or
push
pop
mov
mov
mov
sar
xor
mov
fsubl
mov
mov
test
lcall
dec
pop
lea
inc
pop
popa
mov
xchg
pop
lds
mov
xchg
mov
cmpb
mov
xchg
mov
cmp
and
pop
inc
adc
cmp
sub
inc
js
xlat
pusha
sbb
xor
dec
sbb
shrb
rolb
dec
fidivl
movsb
xor
add
das
push
push
in
mov
imul
rclb
mov
mov
call
push
rol
test
push
sahf
lret
pusha
outsb
add
popa
cmp
mov
xor
dec
les
pop
cmp
mov
lods
jecxz
xchg
xchg
hlt
icebp
cmp
bound
scas
or
jmp
dec
cltd
sub
jmp
mov
sbb
je
cmp
enter
imul
scas
insb
add
stos
mov
cmp
xchg
lret
dec
std
xor
xchg
cli
mov
inc
push
mov
xchg
and
lock
sbbb
int
ss
xlat
lods
pop
fldz
xor
pop
out
iret
call
arpl
inc
xchg
loope
xor
xchg
pusha
push
and
js
xchg
or
push
ja
icebp
jnp
mov
int
push
or
cmpsb
sbb
push
pop
shrl
cmc
stos
ds
cmc
dec
arpl
pop
sbb
stos
jecxz
cltd
mov
out
pop
inc
idivb
rol
mov
rcl
fstps
subl
js
dec
les
out
add
push
outsl
cmp
mov
push
mov
aaa
sub
movsl
push
movsl
test
sub
xlat
add
push
hlt
jmp
xor
sub
mov
jnp
push
xchg
mov
repnz
push
aad
mov
testb
bound
mov
lds
out
and
jecxz
aam
jbe
xchg
fmull
dec
lahf
scas
std
stc
nop
sahf
and
adc
pop
push
js
push
int3
mov
aad
sbb
cmp
mov
pusha
inc
test
test
pop
sti
test
cwtl
inc
pop
mov
mov
aas
jnp
xor
cld
dec
pop
jbe
lea
ja
jne
and
adc
iret
jne
pop
xor
push
dec
adc
xor
xchg
shll
mov
mov
je
popa
movsl
push
adc
xchg
clc
sub
out
mov
mov
pop
add
cmc
push
cmp
lret
clc
out
push
outsl
cmp
push
ret
repz
jmp
pop
aas
jmp
adc
add
popa
mov
mov
std
mov
lcall
pop
sub
lahf
shl
sbb
pop
xor
hlt
pop
movsb
dec
fdivr
mov
inc
xchg
outsb
in
sbb
and
jb
sbb
inc
test
xor
aas
inc
hlt
iret
mov
dec
fisttpll
call
mov
xor
mov
pop
add
cmp
repnz
les
pop
outsb
push
push
push
cmp
aaa
cld
imul
mov
or
test
nop
xor
das
inc
stos
sbb
xchg
cmc
cmp
test
dec
pushf
dec
das
mov
cmpsl
jbe
sub
test
dec
add
outsb
pop
cmp
dec
sbb
test
lret
stc
int3
sub
pop
sbb
add
cli
fdiv
js
dec
stc
daa
sub
int3
andb
dec
cmp
test
scas
push
dec
ficoms
into
xchg
dec
idivl
into
arpl
negb
pop
in
out
sbb
lahf
insb
mov
jecxz
or
stos
ficoms
aad
cmp
and
cmp
movsl
int3
mov
xor
js
inc
leave
push
jmp
pop
pusha
dec
ljmp
adcb
ret
jecxz
inc
dec
pop
bound
mov
or
xchg
mov
dec
movsb
mov
test
js
jns
push
cmp
into
pop
fildl
es
imul
loop
cld
mov
std
into
setl
inc
fcoml
movsl
je
sbb
jb
stc
mov
xorl
sub
repz
call
addb
ret
addl
or
jle
in
lcall
cmc
mov
icebp
es
sub
dec
sub
data16
xor
cmovne
mov
jge
lock
mov
adc
fs
ss
pop
mov
aad
in
fidivrl
insl
leave
scas
jno
sarl
popf
push
mov
cs
lea
cmpsl
loop
call
inc
aas
pop
add
jge
out
test
and
or
out
notl
rorb
mov
cli
jmp
inc
inc
clc
cmpsl
ss
push
jp
cltd
cmp
pop
fsubl
outsb
inc
mov
and
nop
cmp
cwtl
test
push
psubq
jle
push
sbb
add
sbb
popa
add
popa
dec
inc
imul
aas
out
in
test
mov
rcr
push
ss
enter
lahf
ds
ret
dec
sahf
inc
mov
and
rep
dec
int
outsb
cld
xor
imul
adc
in
ja
repz
pop
dec
ja
bound
add
and
scas
or
mov
les
test
push
ds
mov
pop
dec
and
andl
stos
fimuls
xchg
mov
ret
scas
mov
mov
aad
je
cld
ss
aaa
ss
cmc
std
pop
sti
cwtl
pusha
push
popf
popf
mov
sarb
sub
jmp
inc
insl
movb
pop
mov
mov
push
enter
add
mov
sbb
jbe
push
inc
insb
aas
xchg
dec
aaa
aam
js
xchg
stc
fs
pop
push
jmp
xor
dec
push
nop
sub
enter
cmp
cmc
dec
lds
icebp
cmp
fstps
leave
pop
aaa
pop
bound
orl
xor
movsl
lods
filds
cmp
adc
pop
lds
outsb
xchg
fsubs
and
out
xchg
jbe
loope
test
movsl
scas
cmp
stos
dec
daa
gs
movsl
lods
ror
ss
std
lcall
mov
jno
loop
mov
ss
mov
cmp
mov
push
and
inc
lods
cwtl
lahf
adc
call
inc
add
xchg
and
xchg
inc
mov
inc
sbb
data16
rcr
and
mov
jecxz
jmp
jb
rcrl
mov
fists
mov
outsb
movsl
inc
sub
dec
adc
sub
and
cmp
pop
andl
add
sbb
mov
test
sbb
arpl
pop
mov
lods
pop
cmp
test
fs
push
cld
ret
xchg
cmp
lock
jo
sahf
dec
lret
stos
or
xor
pop
fcomps
adc
idivb
flds
push
adcl
xchg
hlt
mov
out
jo
insb
hlt
push
mov
shlb
loope
lahf
out
mov
cmp
lods
aam
sub
scas
sbb
cld
mov
nop
lea
int3
xor
mov
je
lahf
mov
repnz
xchg
mov
dec
or
stos
dec
in
sti
cmp
jmp
jbe
idivl
jno
cmc
jge
repz
test
cmp
cmpsl
or
test
add
mov
insb
lds
adc
jecxz
dec
push
xchg
sub
mov
into
fldt
or
adc
sahf
in
adc
js
or
test
dec
fwait
mov
lret
addr16
cwtl
cmpsl
mov
inc
test
or
dec
mov
sarl
add
jmp
inc
jp
mov
addl
xor
fnstenv
ljmp
cmp
jle
pop
setae
mov
push
mov
mov
mov
cmc
inc
mov
pop
xor
sbbb
push
ds
and
repnz
inc
xchg
push
insb
push
dec
and
mov
pop
in
pop
and
add
cli
mov
or
or
imul
lock
add
mov
mov
add
orb
cwtl
les
les
jae
add
adc
imul
jne
and
sub
xorl
aas
xchg
test
fs
inc
and
addr16
mov
int
xchg
pop
and
in
dec
cmc
scas
jae
mov
or
jno
in
and
pop
or
out
mov
cltd
movsb
mov
inc
dec
sbb
jae,pt
addl
push
inc
dec
cld
scas
push
inc
scas
stos
fdivs
xchg
mov
pop
pop
pop
std
es
mov
pop
inc
fs
mov
imul
lret
mov
inc
xor
stc
add
pop
daa
mov
inc
addr16
les
mov
lea
arpl
cmp
push
inc
ja
aam
pop
clc
fimull
mov
movsl
movsl
arpl
dec
mov
mov
out
jle
imul
jge
rcll
adc
icebp
out
sti
jno
mov
clc
dec
cmpsb
xor
mov
xchg
repnz
hlt
pop
ss
pop
jl
int3
cmp
mov
mov
int3
pop
popa
popf
sarl
js
popf
dec
shrl
enter
mov
in
vxorps
clc
insl
das
in
add
cltd
cmpsb
mov
jno
pop
dec
jo
mov
pop
mov
pop
sbb
xor
or
lods
adc
jo
mov
cmp
mov
movsl
dec
mov
or
cmp
out
jge
mov
jb
cmpsl
lcall
loope
add
rcr
mov
icebp
adc
test
in
mov
jl
popa
repnz
pop
adc
inc
popf
lds
xchg
mov
rorb
pop
push
mov
mov
add
jecxz
outsl
cli
cmpsl
jne
adc
inc
xchg
scas
loop
push
fmuls
jbe
jl
movsb
mov
dec
test
dec
push
pop
xor
imull
jno
lea
xchg
xor
mov
repz
into
mov
pop
dec
pop
fwait
xchg
xor
and
and
inc
xchg
lret
dec
adc
push
jnp
xor
push
je
pop
mov
les
adc
ss
out
jnp
mov
pop
data16
lds
inc
mov
shrb
fsubrp
hlt
mov
pop
arpl
sbb
xchg
mov
shll
mov
adc
aaa
push
aaa
int3
inc
inc
push
mov
test
jecxz
add
loopne
aam
lods
pcmpgtd
cmp
pop
or
adc
xchg
add
aas
insb
dec
jle
test
addb
push
xorl
jae,pt
movsb
movsb
data16
xor
push
dec
pop
push
mov
rcrb
add
push
test
sahf
mov
xchg
adc
enter
dec
lods
in
ljmp
mov
frstor
xor
ficoms
push
xchg
movsb
sbb
fisttpll
lock
inc
js
aam
jnp
push
mov
pop
out
inc
call
and
fiaddl
cmp
add
js
insl
mov
mov
adc
pop
push
test
jno
loop,pt
repz
scas
xor
aam
mov
stc
ja
inc
sub
fisubrl
lahf
add
add
dec
mov
push
fildll
sub
add
cmp
inc
and
into
stc
inc
fnop
jbe
lods
int3
mov
sbb
popa
sbbb
lock
push
mov
jp
xchg
xchg
fisttps
mov
or
push
push
sbb
iret
sub
dec
jmp
gs
xchg
es
fsts
ret
es
das
scas
imul
inc
pop
xchg
mov
popf
or
lods
lret
mov
pop
popa
pop
mov
inc
fdivrp
pop
push
inc
mov
test
jne
dec
or
lahf
ja
adc
cmp
xor
pop
mov
dec
sub
push
arpl
sub
lret
cs
add
js
and
xchg
push
xchg
sbb
stc
jno
jne
dec
inc
dec
mov
sub
adc
pusha
outsl
lds
mov
ja
mov
pop
xchg
daa
push
lret
je
pop
pop
jp
outsb
xchg
push
imul
sbb
filds
xchg
push
inc
lea
xor
push
inc
aad
mov
popa
mov
fildl
sub
push
push
stos
cmc
lcall
jmp
rcr
cli
shr
test
ss
std
jmp
sub
jae
cmp
jns
enter
jmp
scas
negb
jecxz
int3
mov
insb
aaa
fldt
adc
pop
pop
pop
in
ficoml
xchg
push
jb
shlb
aas
push
xchg
jmp
and
js
adc
pop
mov
sub
cmp
add
imull
les
xchg
sbb
jnp
aam
insb
and
cs
icebp
push
fildl
data16
mov
scas
inc
inc
cltd
fmulp
xchg
mov
movsl
sbbb
push
lcall
psubd
mov
inc
mov
aam
dec
imul
cld
inc
mov
das
jmp
lret
gs
lret
push
jmp
sub
push
shlb
xor
adc
push
mov
and
jmp
lods
ljmp
add
loop
scas
jne
mov
cmp
mov
es
lods
jno
sti
mov
xchg
fwait
cwtl
les
popa
stos
xor
test
pop
cltd
aam
lahf
lahf
aaa
push
mov
xchg
lods
push
andb
dec
jo
stos
inc
int3
mov
cmp
repnz
aaa
dec
pop
mov
adcb
mov
dec
sub
xchg
dec
pop
shlb
je
xlat
dec
sarl
loope
jno
ljmp
xchg
mov
adc
mov
sti
xchg
leave
xchg
into
mov
xor
xchg
mov
xchg
mov
mov
aaa
cltd
mov
test
mov
lock
iret
popl
or
fsubs
fbstp
int3
jae
insb
cmp
mov
out
and
inc
push
es
or
mov
xor
push
jne
and
je
int
sub
cmpsl
cld
jo
jecxz
inc
push
mov
lods
pushf
inc
pop
cld
xchg
push
in
sar
jecxz
es
mov
sub
lea
data16
jo
or
out
mov
mov
cmp
fistpl
mov
and
je
pop
inc
sbb
cli
sarb
stos
pop
adc
cmp
jae
mov
cmpsl
lods
jnp
or
andl
nop
sti
adc
gs
cmp
xchg
sbb
or
into
sbb
adc
inc
xor
xchg
push
pop
shlb
ror
xchg
jb
outsb
in
and
jb
mov
jnp
jmp
cld
je
scas
cli
cmp
iret
andl
cmp
std
enter
cmp
js
data16
xchg
fisubrs
add
popa
aam
testb
jb
jp
ss
jge
push
hlt
nop
stos
out
jo
sub
out
jge
sub
push
stos
js
xchg
add
sub
pop
push
pop
scas
add
mov
hlt
rcrl
xor
mov
addr16
jnp
or
dec
movsl
push
add
iret
pop
bnd
sub
lret
mov
pop
xchg
push
movsl
dec
mov
sahf
jg
test
test
adc
popa
or
mov
xchg
call
mov
sub
negl
sub
arpl
insl
cmp
and
mov
cmp
adc
rclb
cs
pop
cmp
icebp
pushfw
push
push
pop
pop
mov
push
and
movsl
stc
pop
inc
stc
lahf
or
test
mov
ja
nop
fisttps
xor
in
or
push
mov
lods
pop
mov
dec
leave
mov
stos
faddl
mov
jg
gs
in
cli
rclb
add
ds
stc
or
push
popf
mov
mov
sbb
or
ds
sbb
xlat
scas
mov
xchg
xor
mov
dec
test
mov
in
xor
or
scas
jb
ja
xor
dec
lret
ret
testb
es
lods
scas
movsl
push
out
aad
xlat
sbb
pop
aam
or
jmp
inc
ljmp
loopne
pop
jge
mov
ror
dec
rolb
dec
fcmove
icebp
stc
push
adc
in
lds
and
js
jo
in
push
jecxz
cmpb
insl
enter
mov
or
fiadds
push
ljmp
jp
sbb
int
dec
mov
add
aam
lret
scas
cmp
loope
cmp
insb
rorl
xor
add
mov
mov
fxch
or
sbb
mov
pop
mov
adc
and
xchg
mov
sub
pop
lds
inc
jg
fstpt
jge
aad
jp
out
mov
cmp
rcrl
sahf
xor
mov
adc
stos
pusha
add
fistpll
sbb
dec
adc
shl
fmul
outsl
lods
sub
pushf
fistps
add
dec
sbb
call
loop
movsl
aas
add
cli
jecxz
cmp
pushf
adc
rorb
ja
xchg
sbb
xchg
jecxz
push
leave
mov
data16
test
fsubrp
ss
test
xchg
sub
and
xorb
xchg
or
lds
test
sbb
jecxz
sub
shlb
mov
imull
jns
repz
jecxz
jl
or
call
enter
aam
popa
test
inc
jb
inc
jge
stos
lret
jbe
test
stc
cmp
cmp
dec
cltd
and
mov
jmp
adc
leave
push
into
mov
sbb
cmp
pushf
or
inc
jmp
pop
jle
movsb
jecxz
andb
xchg
adc
ja
out
call
test
out
xlat
adc
cmp
incl
mov
inc
shlb
inc
sbb
nop
mov
popf
mov
add
mov
sub
xor
lret
dec
push
pop
repnz
and
fisubrs
je
punpckhbw
das
mov
fcompl
adc
cmp
sub
ss
dec
or
xchg
pop
rcl
xor
jbe
pop
bsr
insb
ror
lods
mov
pop
or
pop
icebp
jno
lret
mov
mov
das
out
inc
sub
xor
xchg
jns
std
cmp
out
into
add
mov
sub
sbb
lret
xor
outsb
sbb
add
adc
or
xchg
rclb
jl
lods
cmp
cmpb
inc
mov
jmp
cwtl
inc
jle
cwtl
push
pushf
data16
xlat
bound
int
add
js
add
jbe
bound
lcall
add
test
pop
fisubrl
cmpsb
pop
xchg
jno
shll
lret
scas
xchg
dec
sub
enter
lret
clc
test
data16
jbe
mov
lcall
lods
sub
call
jo
mov
or
test
std
dec
xchg
ljmp
dec
xchg
or
inc
call
stc
mov
and
repz
pop
xchg
mulb
stos
mov
mov
dec
xchg
pop
std
jnp
xor
add
mov
push
orb
pop
pop
mov
pop
mov
inc
mov
cmp
sub
lods
jnp
and
push
cli
xor
lds
leave
cmp
adc
xchg
and
notl
fsubl
sub
jae
mov
movsl
fmul
sbb
pop
in
sti
pop
dec
jno
jl
push
addb
cmp
sbb
push
imul
sti
mov
inc
or
nop
sbb
loop
lret
adc
push
sub
pop
xor
lea
das
dec
stc
mov
pop
and
movsb
rcl
pop
jb
add
mov
cmp
sub
lcall
in
xchg
mov
std
cmc
jecxz
repnz
add
pop
andl
jne
lret
jb
cmp
shll
or
xor
shll
jp
mov
fdivrp
call
loopne
sti
mov
xchg
rcrb
and
lret
mov
sbb
xchg
insb
inc
rcr
sbb
dec
cmpsl
jg
test
adc
cmc
addl
test
pop
in
lock
clc
ljmp
push
in
pop
ja
mov
xchg
sbb
push
rclb
jnp
cmp
xor
mov
xor
arpl
inc
inc
stos
push
sbb
jl
lahf
scas
lods
std
pop
out
lahf
imul
sub
sub
cs
or
out
jmp
and
out
xlat
add
and
and
mov
cs
jmp
notb
add
mov
sub
mov
push
mov
mov
mov
test
int3
dec
or
scas
mov
jno
add
mov
jb
test
sub
jnp
jne
ss
enter
arpl
out
les
loope
psubb
cmp
rcrl
adcb
test
jmp
leave
mov
add
xchg
fldt
cltd
push
or
xlat
roll
ret
cwtl
push
shll
mov
sub
add
xchg
sbb
in
xor
or
mov
mov
push
or
xchg
adc
xchg
and
sti
add
push
mov
or
clc
sbb
pop
jbe
or
lea
pop
pop
cmp
sbb
sub
mov
jmp
notb
inc
sbb
fcmovnbe
data16
xor
xchg
sub
xor
add
jl
nop
ja
xor
lds
test
sub
scas
dec
int
mov
xor
jno
dec
rcl
fmuls
imul
push
mov
gs
fmul
popf
adcl
in
test
je
scas
mov
jecxz
pop
jge
or
inc
sbb
gs
jmp
lods
cmp
mov
pop
lahf
dec
mov
rcrl
adc
cmc
ss
dec
ret
fstpl
lcall
xchg
outsl
repz
dec
pop
dec
push
outsl
mov
and
and
fldcw
loope
and
insl
jo
xchg
fwait
out
fsubs
xor
popa
outsb
and
fcomps
xor
xchg
add
notb
movsb
push
dec
mov
ret
fstps
lock
mov
sbb
sub
cmc
inc
aam
cmc
push
rol
sarl
imul
pop
stos
lcall
jg
pop
xchg
out
adc
out
and
push
lret
mov
jns
scas
add
dec
add
stos
inc
mov
fwait
mov
movsb
sbb
cmpl
jbe
mov
dec
cs
push
cs
test
adc
bound
ljmp
mov
outsb
cmp
add
roll
gs
loope
cmp
xor
pop
stos
cwtl
xchg
jl
in
gs
sub
mov
inc
arpl
jle
dec
inc
sub
xlat
insl
cwtl
movsb
xor
inc
add
movsb
clc
jmp
aad
mov
cmpsl
jg
add
lret
or
xorl
mov
fisubs
ss
divl
aas
fs
mov
lret
clc
inc
out
mov
js
add
cmp
sub
jecxz
test
xchg
pop
push
cmc
data16
daa
xor
jp
dec
outsb
push
pop
inc
out
gs
mov
ret
dec
jg
lret
sbb
stos
fidivs
sbb
push
sub
push
push
scas
sbb
xchg
jb
out
add
cmpsb
mov
fistpll
loope
call
pop
pop
mov
std
mov
inc
jbe
clc
adc
sbb
mov
jb
xor
dec
sub
xchg
scas
test
repz
dec
orl
and
nop
aad
and
sub
mov
fcomps
jae
pop
dec
xor
clc
imul
or
xor
scas
and
int3
push
jb
jg
dec
movsb
jmp
jmp
cwtl
pop
xlat
pushf
mov
mov
inc
ret
insb
ds
push
inc
add
std
inc
inc
js
adc
out
daa
in
and
shll
push
jne
sbb
je
das
icebp
and
and
pop
psubsb
outsl
mov
mov
mov
aaa
stos
dec
mov
sub
sub
mov
xchg
bnd
scas
jecxz
xlat
mov
mov
fldt
loope
pop
jmp
xchg
fstpl
adc
in
dec
orb
insl
xchg
push
je
and
in
sub
push
jae
das
das
fmul
mulb
adc
and
cmpsl
loop
sbb
repnz
dec
push
add
icebp
sahf
adc
stos
les
mov
frstor
and
std
jnp
loopne
pop
push
out
das
jmp
nop
cmp
mov
inc
cmc
mov
add
and
mov
pop
lock
or
out
pushf
pusha
mov
in
out
insb
inc
rclb
gs
pop
dec
mov
jno
enter
jo
bound
or
mov
cmp
insl
pop
dec
fisubl
pop
xor
jae
mov
fstpl
jbe
movb
lods
lret
adc
outsb
adc
cltd
ja
imul
cmp
test
sti
jae
xlat
stos
ret
sub
cmp
pop
sti
dec
xchg
pop
dec
pop
pushf
xor
gs
mov
clc
cmp
mov
ljmp
sbb
push
fs
mov
test
rcrb
jecxz
or
xorb
inc
jmp
test
cld
clc
push
cmp
std
pusha
fmul
inc
xchg
ret
or
mov
ja
aad
dec
popa
insb
adc
push
and
popl
mov
add
ja
pop
out
ljmp
lock
and
stos
xor
sub
sub
cmpsl
lods
push
jmp
sub
rcl
mov
xor
cmp
cmp
mov
inc
push
mov
ja
popf
add
out
aad
bound
in
sbb
dec
test
cwtl
mov
into
xor
push
mov
sub
dec
or
incb
lods
sbb
xchg
arpl
std
cwtl
dec
push
push
popf
push
or
xchg
push
pop
fwait
or
xchg
pop
push
mov
jns
pusha
push
pusha
loopne
pmulhw
hlt
lods
mov
fs
inc
pop
lahf
mov
in
xor
add
out
dec
shll
dec
in
movsl
imull
add
mov
mov
icebp
dec
icebp
push
inc
mov
imul
popa
lret
std
stc
or
lods
cmp
cmpsl
adcb
scas
sbb
push
movsl
or
popaw
test
lret
jge
fldl
mov
aas
call
xor
mov
xchg
aam
mov
pushf
mov
cmp
stos
call
push
mov
xchg
ja
shrb
lds
add
jp
mov
or
jl
fwait
or
imul
inc
repnz
dec
cltd
fmuls
cmp
add
xor
or
cmc
inc
dec
sbb
inc
bound
sub
shlb
mov
repnz
sbb
loope
idivb
sbb
sub
iret
movsl
ljmp
inc
je
out
add
nop
ret
sub
bound
pusha
inc
xchg
out
hlt
pop
mov
pop
ficoml
mov
ds
js
sub
fcomps
je
dec
or
dec
sahf
std
mov
pop
sub
repnz
and
fdiv
sbb
pop
aaa
into
in
daa
jecxz
dec
xchg
pop
in
xchg
out
fildll
test
mulb
mov
andb
sub
nop
sti
push
dec
xchg
jno
hlt
mov
pop
ret
push
fidivrs
out
jle
and
xchg
lret
int
or
testl
pop
repnz
or
fdivrs
mov
or
xlat
pop
pop
push
add
out
xchg
add
ds
add
pop
jb
ret
adc
cwtl
adc
aad
in
icebp
andl
dec
cmp
outsl
dec
lahf
or
addr16
in
movsl
les
xchg
pop
add
loop
and
or
and
icebp
sbb
in
scas
lfs
push
fs
movsb
or
mov
shr
mov
fsubl
xchg
das
addr16
lods
cwtl
outsl
js
xchg
dec
xor
or
pop
int3
pop
int3
add
dec
inc
rcrb
das
sbb
add
xor
and
xchg
pop
outsl
inc
das
in
subb
loop
sbb
jg
inc
inc
adc
or
mov
fwait
or
pop
fstpl
push
pop
lahf
jb
adc
fimuls
pcmpgtw
pop
cmpsl
rcll
sub
push
push
dec
sub
add
ljmp
jno
xchg
cmpb
mov
mov
xchg
push
dec
in
pop
lods
and
idivl
inc
mov
pop
push
sbb
insb
lcall
mov
ret
cmp
fidivl
shlb
push
or
movsl
inc
mov
stc
repnz
inc
sahf
pop
mov
nop
ret
int3
imul
jbe
jg
mov
or
sbb
iret
neg
sub
jl
dec
fisubrs
and
and
inc
sbbl
lahf
lods
adc
push
rclb
sub
test
or
cmc
lods
cwtl
add
icebp
pop
push
add
mov
inc
add
sub
rcl
adc
mov
lret
popa
pop
dec
cli
sahf
and
jp
or
sbb
inc
iret
xorl
pop
sub
push
adc
sbb
je
mov
mov
cmp
push
xor
in
inc
inc
jl
das
push
jg
test
mov
sti
lcall
in
shll
ljmp
sbb
cmp
lahf
mov
inc
insl
push
add
mov
cltd
mov
add
mov
push
sub
xchg
push
xchg
aad
imul
hlt
int
pop
loop
sbb
lods
ret
movsl
push
cmpsb
cwtl
mov
adc
jnp
outsl
jg
loopne
ljmp
pushf
in
fistps
mov
clc
mov
and
daa
dec
out
dec
pushf
shrb
stos
adc
mov
divb
push
cs
lcall
dec
mov
dec
je
xchg
outsb
mov
xchg
rep
repz
sub
and
popf
ficomps
movsb
pop
pop
jp
ljmp
inc
icebp
adc
adcl
call
cli
mov
mull
mov
stc
cmp
adc
cmpsb
mov
stos
out
and
mov
mov
mov
fildll
xchg
push
lea
fdivl
in
fildl
push
push
cmp
inc
fcom
sub
xchg
out
jge
mov
pushf
push
mov
mov
iret
addr16
icebp
shlb
fistpl
push
push
jbe
inc
out
mov
mov
cmp
pop
sub
inc
in
imul
push
push
out
hlt
and
test
or
scas
inc
sbb
fdivrl
enter
cmpsl
push
lahf
rolb
jl
sbb
addr16
mov
sub
lea
mov
repz
es
fwait
cmp
adcb
add
adc
push
cmp
dec
mov
dec
scas
mov
cltd
repnz
xchg
das
into
mov
lret
stc
jg
mov
scas
bound
cs
fucomi
lcall
or
push
pop
js
adc
xor
fisttpll
ficomps
rcl
mov
notb
bound
mov
sahf
loop
or
mov
jmp
sbb
mov
fadd
dec
mov
inc
int3
inc
fsubr
xchg
ljmp
cmp
push
cltd
lods
leave
andb
js
lcall
int
repnz
cmpsl
adc
mov
out
mov
in
fcomps
ret
pop
aas
xor
ret
std
jae
mov
dec
push
stos
test
in
stc
jle
cwtl
out
outsl
mov
mov
xchg
lahf
ret
or
leave
xor
mov
sbb
push
aaa
push
imul
pop
cmp
push
dec
lahf
arpl
shrl
mov
rcrb
sarl
test
jno
or
push
mov
mov
mov
add
dec
mov
xor
fsubs
insl
outsb
push
pop
sarb
add
or
pop
fdivp
jns
mov
pop
popa
add
jge
sbb
fadd
ja
add
sub
mov
mov
mov
and
loope
loop
test
stc
cmp
cmp
stc
into
or
add
push
pop
mov
xor
mov
lock
jnp
inc
sahf
inc
in
into
sbb
popa
adc
jo
xchg
fiadds
arpl
sub
mov
arpl
pop
je
mov
lret
xlat
in
add
push
mov
gs
fimuls
pop
shlb
and
sbb
xlat
stc
rcrl
xchg
mov
xor
mov
mov
and
and
sbb
data16
inc
ja
dec
shlb
outsl
addr16
jg
push
push
ror
cmp
flds
xchg
push
sahf
jmp
dec
mov
mov
enter
xor
or
jmp
mov
pop
mov
loopne
fisubs
pop
mov
jle
dec
pop
leave
mov
sti
jmp
push
sub
cwtl
adc
mov
pop
add
or
mov
or
or
mov
fmuls
sub
xor
mov
dec
imul
xchg
lods
jmp
add
and
fs
inc
pop
lahf
bnd
xchg
out
fs
insl
sbb
lretw
addl
arpl
xchg
jg
lds
ret
call
lods
adc
cmpsl
jg
in
sub
je
push
aad
mov
gs
hlt
stos
xor
xchg
fnstenv
arpl
fldz
inc
cmp
adc
push
pop
cmp
test
ss
lods
call
jle
movsb
xor
add
and
repnz
mov
mov
add
mov
inc
xor
int
dec
dec
stc
shlb
test
xchg
push
xchg
imul
jbe
pop
inc
mov
shlb
jnp
jne
int
lock
fldt
scas
jle
pop
sub
xor
dec
addr16
dec
imul
mov
std
xchg
test
dec
lods
or
scas
xchg
mov
inc
mov
pop
mov
pop
cmp
cmp
adc
cmp
push
test
cmp
or
mov
orb
dec
xchg
ja
leave
stc
add
adc
sahf
add
shrl
push
scas
ja
jecxz
mov
jg
lods
adcl
sub
add
fsubp
mov
cltd
push
pop
push
xchg
add
adc
inc
lcall
out
stos
and
pop
ljmp
push
imul
aaa
fbld
les
jnp
dec
mov
movsl
jne
jno
pop
cmp
ja
jb
js
pop
lahf
cmp
clc
into
bound
or
insl
sub
sub
dec
fucom
gs
movsb
int
adc
pop
icebp
dec
mov
sub
mov
fwait
inc
adc
cli
sbb
xchg
rcrl
mov
mov
inc
daa
mov
inc
iret
push
xor
orl
sbb
mov
pop
push
hlt
std
mov
addb
jne
scas
cld
mov
std
dec
neg
add
or
idivl
imul
rcrl
outsb
sub
xor
das
dec
or
sub
jae
or
mov
jae
test
cmp
push
jb
mov
fwait
mov
imul
addr16
and
add
cmp
setl
daa
loop
inc
push
out
sbbl
stc
andb
das
lock
xor
and
adcb
push
push
enter
lds
pushf
inc
nop
lcall
mov
cmp
add
push
insl
lods
iret
sbb
pushf
andl
xchg
or
fsubr
mov
cwtl
cmpl
mov
loop
imul
inc
movsl
nop
push
xchg
pop
iret
arpl
sarb
les
and
push
xor
pop
mov
push
clc
mov
cld
insl
dec
xchg
es
aad
and
lods
mov
ss
add
xor
sub
xchg
imul
push
stos
jg
cmp
adc
imul
push
cmp
out
arpl
cmp
jbe
cmp
adc
sub
inc
ret
xchg
jl
stc
bound
shrb
push
xchg
test
cwtl
pop
pop
cwtl
add
je
popf
loope
sbb
outsl
dec
shlb
xchg
sub
push
add
insb
js
stc
enter
xor
loopne
shrl
mov
and
hlt
lods
enter
mov
addl
insb
mov
sahf
das
orl
pusha
mov
mov
jo
xor
xor
pusha
fcoms
iret
loopne
ljmp
arpl
outsl
fldl
imul
out
or
in
push
mov
mov
in
into
jge
cmc
cwtl
cwtl
mov
and
jne
mov
cmovb
add
sub
or
clc
lret
cwtl
clc
fiaddl
dec
aas
xor
push
inc
push
pop
jnp
add
adc
fistpll
cmp
xchg
mov
loope
imul
mov
push
jmp
lret
xor
lcall
repnz
cmp
test
nop
mov
mov
cmp
push
ljmp
sub
mov
and
cmp
sbb
sub
or
aad
sbb
xorb
mov
mov
mov
fiaddl
jb
inc
jno
adc
cltd
and
ja
loope
icebp
jns
xchg
pop
dec
fcomps
push
shr
fists
xor
dec
sub
aad
mov
aam
xchg
iret
outsb
push
aad
mov
movsl
imul
popf
adc
test
cmp
push
jl
mov
dec
push
outsl
psraw
dec
cmp
into
xchg
dec
xor
outsb
or
sahf
lahf
xchg
jl
sti
pop
outsl
cld
insl
in
inc
lea
pop
xchg
sbb
ss
xchg
xchg
aas
nop
or
cmp
and
xchg
sbb
mov
adc
adc
leave
mov
push
cmp
add
test
fs
ficompl
cli
pop
outsl
rcll
mov
inc
lret
pop
mov
jle
test
imul
ss
aas
or
stc
fidivs
sub
leave
popa
ss
xlat
adc
lea
int
xor
ja
out
sbb
jge
jnp
jne
scas
sbb
pop
push
stos
sahf
jg
pop
mov
es
fsts
pop
pop
or
into
in
adc
dec
fsubr
in
mov
ficoml
clc
test
adc
xlat
push
adc
loope
mov
int
or
sbb
sub
jbe
inc
movsb
xor
pop
mov
and
and
push
lcall
xchg
pop
pop
int
inc
mov
test
loop
jmpw
adc
fwait
dec
xor
adc
sbb
hlt
daa
fbld
xor
mov
outsb
icebp
add
mov
xorb
jg
lock
fbld
fldt
notb
sahf
in
loope
push
lods
jp
mov
mov
mov
rorl
int3
lds
pop
mov
pop
mov
mov
inc
push
push
aaa
stc
jb
outsl
dec
pop
outsb
adc
mov
mov
cld
lcall
cmpb
jbe
stos
data16
xchg
adc
xor
clc
call
imul
jle
repz
stos
jl
les
cs
in
insl
cmp
cmp
shl
adc
mov
add
lret
mov
sar
mov
popa
repnz
cmpsl
inc
add
int3
mov
push
icebp
scas
jbe
scas
sbb
in
pusha
push
ret
aam
orl
ret
inc
cmc
push
cmp
add
std
adc
mov
mov
push
sub
push
dec
movsl
fidivl
scas
inc
adc
dec
cmp
imul
mov
cmp
into
add
insl
jae
repz
inc
push
insl
repnz
mov
inc
pop
testl
sbb
add
sbb
scas
jo
fmull
ljmp
jl
add
movsl
cld
cltd
mov
pop
std
jl
sbb
fsubl
dec
inc
adc
pushf
sbb
lea
stos
add
lds
and
lds
jg
and
inc
fsubrp
add
movsl
movsl
mov
inc
or
fidivl
mov
xchg
inc
xchg
mov
idivl
sub
imul
cmp
lods
inc
sbb
and
std
pop
pop
mov
xor
repz
addr16
inc
std
insl
jle
push
arpl
in
test
push
cmc
mov
lea
in
cli
lods
cmpsl
aam
xchg
add
les
ficoml
aas
sbbb
int
lods
sub
in
jl
int3
stos
add
sbb
xchg
mov
xorl
push
rcrb
mov
jns
mov
cmp
cmp
out
movsl
pop
repz
loope
xor
xor
repz
xor
xor
cmp
es
pop
jb
sub
mov
fisubl
outsb
xchg
mov
ret
repnz
fnstenv
push
out
in
sbb
adc
rorb
pop
dec
lods
in
mov
jb
jp
pop
outsl
sbb
cwtl
xchg
fwait
imul
cmpsb
insl
imul
push
pop
push
push
pop
cmpsl
in
mov
jle
aad
cli
aam
imul
cmpsb
das
xlat
pusha
push
cmp
cli
and
repz
mov
test
bound
fstl
fwait
pop
test
call
xor
es
jno
loope
cwtl
in
hlt
mov
sbb
adcl
push
dec
in
dec
cmpsb
mov
sbbl
outsl
sub
das
push
inc
dec
sub
les
cli
xchg
test
mov
cmpsb
mov
jecxz
xchg
fmuls
adc
cmpsl
xor
jmp
xor
rcr
icebp
push
xchg
xor
mov
movsl
sti
imul
push
mov
sbb
dec
cmpb
jo
lahf
or
out
jb
lods
dec
repz
pop
faddl
push
or
inc
mov
jecxz
mov
movsl
or
xchg
inc
jmp
jge
sub
sub
inc
add
pusha
inc
mov
ja
cmpsb
popf
jmp
sub
and
ret
inc
imul
push
xchg
xchg
push
fwait
lret
jmp
or
dec
call
aam
xlat
xlat
sub
jge
int
fcmovb
les
loop
aad
imul
divl
ror
cs
adc
das
test
adc
fistpl
jo
jmp
xchg
and
insl
enter
mov
loopne
inc
mov
xchg
icebp
jmp
ret
sub
lods
sti
fwait
popa
xor
mov
imul
mov
cwtl
jle
sub
ret
xchg
push
mov
pop
std
rorb
cmp
ret
testl
test
dec
mov
xlat
add
pop
dec
rcrl
dec
xchg
inc
or
xchg
fldcw
push
xchg
jmp
mov
add
adc
mov
in
jmp
cmpsb
xor
and
dec
pop
mov
mov
fdivl
mov
mov
cmp
mov
pop
pusha
inc
and
clc
inc
pop
push
lods
sub
aaa
pop
inc
jae
lods
data16
sbb
int
mov
mov
lea
jle
dec
add
stos
fwait
loope
hlt
sub
pop
movsb
data16
xor
sbb
fadd
jnp
js
aas
vminpd
out
mov
or
and
subb
push
jns
addr16
int3
test
lods
push
sub
imul
adc
lock
movsb
out
sub
insl
cmpsb
or
and
adc
adc
insl
or
cmp
dec
push
mov
lock
mov
out
or
push
lods
scas
xchg
or
dec
ss
push
and
push
les
mov
test
mov
sbb
mov
mov
cmp
pop
ljmp
lds
js
loop
dec
dec
jb
in
mov
mov
mov
xchg
stos
aas
jecxz
movsb
jmp
stc
xchg
enter
add
out
jb
and
adc
test
xorb
xchg
adc
fisttpl
das
jbe
test
call
push
repz
pop
shrl
inc
inc
dec
out
lea
xlat
jp
add
fisubrs
clc
pop
lret
sahf
int
fdivl
xor
cmp
add
and
std
xchg
push
or
test
fldt
scas
dec
enter
add
dec
sub
pop
cld
into
mov
call
ret
jbe
jmp
aam
jae
or
sbb
jp
subl
leave
in
mov
test
jl
sbb
and
imull
fmuls
mov
push
adc
bound
inc
outsl
and
cmp
idiv
daa
mov
cltd
sub
les
movsl
enter
icebp
xchg
int
and
cmp
sub
sbb
imul
aaa
test
jae
int
out
push
pop
lods
mov
testb
inc
xor
pop
xor
push
and
mov
mov
push
push
xor
sub
cmc
stc
push
inc
fbld
xor
jnp
inc
adc
or
sti
push
mov
xchg
ljmp
cltd
shll
and
lods
mov
push
push
notb
insb
arpl
sbb
jge
das
loop
jns
mov
rcrb
inc
daa
push
xchg
inc
add
xchg
xlat
not
and
mov
or
jp
daa
mov
jg
loope
jns
sbb
rcrb
outsl
mov
daa
dec
orb
jle
pop
adc
ret
mov
jl
bound
cwtl
test
aam
inc
xchg
bound
lret
imul
popf
insl
cmp
nop
jb
repz
sbbl
fidivrl
iret
movsl
push
sub
sbb
jecxz
jge
icebp
xor
pop
in
jmp
cli
pop
push
insb
sbb
and
int
movd
out
popf
push
out
xchg
shll
repnz
mov
nop
jp
aad
orb
fidivrl
adc
aad
push
pop
sbb
pop
fnstcw
out
sub
add
cmp
inc
dec
sub
out
aas
inc
sub
or
rolb
in
out
int
jno
dec
cltd
decb
mov
negl
mov
mov
jl
aas
fcoms
lock
lcall
call
in
inc
cld
inc
fwait
aaa
push
add
pop
lea
aam
jle
mov
mov
pop
in
xchg
bound
xor
dec
sub
jp
les
lcall
aad
and
xor
fldl
fcmovb
out
ds
sarl
fs
xchg
ret
in
out
inc
rcrl
jo
jmp
rcrl
daa
outsb
das
test
xchg
mov
xor
pop
insl
ja
divl
push
gs
fldenv
outsb
fxsave
lret
xchg
subl
int3
out
sbbb
daa
fxch
mov
or
fisubs
jbe
nop
mov
inc
pop
adc
test
popa
inc
mov
orl
cmp
pop
dec
adc
or
fildl
imul
lds
je
stos
jg
dec
cmp
mov
pop
fldcw
int3
out
pusha
pop
addl
int
or
out
mov
xor
xchg
xor
faddp
test
or
les
in
outsb
scas
pop
xchg
cmp
jo
sbb
adc
fldcw
iret
mov
xchg
arpl
push
or
loope
dec
or
or
mov
mov
cmpsb
cmp
mov
pop
adc
add
pop
mov
into
adc
xchg
inc
cmp
scas
addr16
daa
mov
insb
lret
fildll
pop
mov
push
push
das
imul
ss
ds
insl
call
dec
pop
add
xchg
icebp
cwtl
inc
je
fsubrs
jecxz
cmp
xorb
loopne
push
adc
xor
push
cmp
push
push
or
ss
mov
in
inc
mov
movsb
fsubrl
cmpsl
mov
cwtl
std
mov
cmp
jg
xchg
test
fs
cmpb
pushf
inc
adc
lcall
cmpsb
mov
leave
sub
hlt
mov
jg
xchg
insl
in
call
mov
sub
jne
leave
xor
cmp
mov
or
sub
xchg
and
fidivs
inc
and
fildl
push
or
and
popa
sub
es
or
cmp
mov
pop
mov
popf
pop
pop
movsl
test
gs
mov
adc
cmpsb
into
pushf
inc
loopne
mov
cltd
lea
and
and
dec
pushf
cmp
xchg
ror
or
cld
inc
push
clc
xchg
imulb
jge
push
sahf
aaa
inc
std
inc
and
ja
jo
sub
loope
dec
mov
nop
loope
cmc
and
repnz
jns
loope
push
cmp
sub
pop
iret
xchg
xchg
out
lock
mov
cmp
ljmp
aas
mov
call
xor
inc
xor
xlat
push
fisubs
dec
inc
fdiv
cmp
jb
jne
add
push
or
pop
xchg
push
gs
dec
pop
out
sbb
pop
jns
add
xlat
sbb
jae
insb
out
inc
subb
pop
mov
push
icebp
shl
mov
bound
icebp
fmuls
popa
push
jmp
jne
xorb
xor
xchg
pop
xor
imulb
loop
fcom
into
in
jb
xchg
dec
jl
lcall
xor
mov
xchg
sub
scas
mov
shlb
or
mov
out
sbb
fistpll
fucomp
push
push
push
in
push
mov
push
adc
mov
sbb
jg
or
test
sbb
out
in
lea
xor
or
xor
jecxz
cli
dec
sti
mulb
jle
movsl
sbb
repnz
orb
push
notl
and
dec
loop
inc
push
mov
xor
sahf
icebp
lcall
or
arpl
cmpsb
fstps
or
adc
jbe
and
ror
loop
outsb
jne
cmp
xchg
mov
adc
test
ficoml
imull
and
cmp
aas
jns
scas
add
mov
xchg
pop
mov
test
and
pop
dec
repz
inc
mov
xchg
std
addb
pop
jmp
call
mov
dec
pop
mov
xchg
insl
xchg
jp
xchg
xorb
jge
lahf
sub
fdivrs
negb
pop
mov
jno
or
stos
outsb
pop
jge
data16
lahf
sbb
jl
rolb
pop
iret
shl
rcll
scas
neg
xchg
mov
pop
push
sahf
int3
jp
mov
inc
or
fmull
cmp
adc
push
out
mov
outsl
cld
subb
push
sbb
mov
xchg
pushf
repnz
in
int3
cmc
je
popf
mov
mov
inc
out
cli
xlat
xchg
movsl
jno
daa
out
xlat
or
dec
lods
push
out
push
popa
cmp
loopne
add
add
push
pop
adc
subl
inc
shll
mov
and
xchg
dec
inc
adc
nop
shlb
fs
sbb
adc
out
sbbb
pminsw
lret
mov
int3
jg
popa
in
pop
and
jle
insb
cmpb
rol
cmpsb
loope
adc
and
lea
ja
int3
ret
test
mov
jne
jp
hlt
ret
push
cmp
int3
lock
cli
out
lret
adc
or
jge
enter
es
ret
mov
add
fdivrp
and
fninit
xlat
xchg
cltd
cmc
push
fiadds
and
dec
sub
mov
int3
add
mov
cmp
and
clc
test
jl
and
adc
lods
jmp
sub
and
cmpsl
mov
cmp
lods
pop
enter
push
aas
negb
mov
jne
push
enter
pop
lcall
adc
test
pop
sbb
icebp
xchg
fidivl
dec
mov
lds
sahf
pop
and
and
add
iret
pop
dec
or
shlb
push
mov
lock
fwait
jecxz
sbb
mov
inc
pop
mov
pusha
shl
mov
andl
in
js
sahf
pop
xor
or
push
push
dec
mov
insl
push
jns
in
das
in
xor
inc
cmp
push
xchg
call
lock
mov
adc
xor
orl
leave
and
es
shl
and
push
faddl
jmp
addr16
in
mov
jle
push
push
loope
pop
test
shrb
pop
xchg
dec
pusha
test
aad
bnd
ret
loope
stc
inc
push
int3
hlt
addr16
cmpsb
jne
mov
inc
test
jl
fs
adc
pop
addr16
add
adc
pusha
sub
out
inc
rcl
dec
fbld
add
cltd
cmp
xlat
inc
push
aad
xor
mov
cmp
sub
dec
push
sbb
push
adc
xchg
xor
rcr
mov
mov
cmp
repnz
inc
lahf
int
sti
outsb
repz
cmp
xchg
add
jecxz
jl
push
fiadds
jl
loope
sub
popa
mov
pushf
out
enter
cmp
enter
les
or
jle
or
jle
addl
cmp
push
ds
lahf
mov
fldl
fistpl
mov
xor
mov
push
xor
mov
dec
pop
sbbl
push
data16
sbbl
cmpsb
adc
cmp
fsubs
out
adc
test
and
movsl
pop
xchg
nop
testl
sub
mov
in
mov
fdivr
sbb
scas
mov
pop
add
mov
lcall
push
into
and
and
inc
loope
dec
and
andl
or
pop
pop
sub
test
cmp
jnp
jno
aaa
push
mov
sbb
fldenv
jo
inc
data16
lcall
adc
inc
rcll
inc
jno
sbb
jnp
jns
xor
inc
jmp
adc
adc
mov
sub
xchg
mov
xor
lods
bound
fistpll
jno
je
sbb
sbb
in
test
push
jno
pusha
mov
gs
cmpsb
imul
jnp
hlt
fisubrs
sbb
test
sub
dec
pop
xor
pop
mov
mov
lods
xchg
stc
xor
push
ds
in
pop
pop
dec
call
mulb
testl
nop
fisubrs
lea
in
push
jb
mov
in
into
idivl
mov
out
mov
xor
in
mov
mov
mov
push
xor
sbbb
cli
lahf
cmp
push
stos
dec
dec
sbb
popf
sbb
push
or
les
cmp
xchg
movsl
jnp
shr
inc
flds
data16
imulb
lea
sub
add
fisttpl
cmpsb
addr16
push
xor
pushf
xchg
mov
mov
pop
pop
pop
out
in
dec
xor
pop
jmp
jge
mov
jns
sbb
sbb
jne
test
jp
jb
mov
cltd
test
cmpl
sub
jbe
push
xor
fwait
cltd
adc
or
mov
sub
mov
lahf
pop
sub
icebp
mov
mov
hlt
jl
jg
xlat
jo
pop
mov
fisttps
je
leave
pop
aaa
inc
cmpsb
adc
xchg
sbb
je
aas
push
pop
adc
mov
call
bnd
test
test
shl
inc
subb
push
jo
pop
mov
ret
pop
or
cmpsl
and
or
enter
movsl
fcomps
cmp
inc
push
dec
mov
out
fsubrs
and
test
push
cmp
cmp
cwtl
insl
shrl
lea
jmp
sub
mov
rorb
test
mov
fwait
cmpsb
ret
dec
dec
mov
stc
fstl
cwtl
xorb
int3
imul
rcrl
xor
add
insl
cmpsb
add
pop
jg
xor
adcb
dec
dec
or
sbb
mov
popa
sti
cmp
js
jecxz
lods
mov
lds
mov
jecxz
cmp
fstps
xor
data16
xchg
jecxz
push
hlt
add
fs
push
jl
ljmp
dec
lods
xchg
xor
popa
cltd
ret
int3
popa
or
rcrb
pop
out
jne
in
mov
mov
insl
fisttpl
mov
and
mov
hlt
xor
loop
sub
sbb
imul
repnz
insl
jge
arpl
xor
outsw
inc
mov
loopne
mov
pushf
sbb
into
adc
jp
inc
scas
rcr
movsb
mov
sub
fisubl
push
push
push
and
iret
push
and
dec
xor
xor
dec
push
lock
cmpsb
sbb
test
sti
cltd
test
int
inc
pop
dec
movsl
jae
adc
xlat
scas
and
inc
aam
ret
enter
adc
mov
cmpsb
mov
lahf
bound
add
scas
sar
int3
aam
out
sbb
es
xchg
mov
mov
adc
push
dec
mov
les
sub
test
scas
imulb
mov
cwtl
popf
inc
sbbl
icebp
and
adc
mov
add
dec
sarb
or
test
scas
test
inc
lods
shll
jecxz
jmp
or
pop
xchg
andl
enter
scas
mov
outsl
mov
js
mov
mov
mov
add
movsb
sub
lret
mov
jns
xor
clc
pop
inc
xchg
ret
add
mov
fimuls
es
cmp
sbb
fnstenv
add
ljmp
mov
mov
in
sbb
arpl
cltd
or
mov
add
js
pop
pop
lcall
mov
test
adc
push
std
outsb
icebp
ja
lods
sbb
inc
push
popf
push
je
out
adc
loop
jb
mov
jo
icebp
and
mov
add
mov
adc
notb
icebp
icebp
add
test
rclb
jecxz
pop
adc
mov
mov
pop
sti
push
and
mov
mov
fdivr
std
xor
or
arpl
add
mov
or
loop
jmp
fisttpl
mov
push
movsl
lds
fmull
mov
outsb
pushf
scas
jnp
mov
add
std
test
ret
dec
cmp
push
pushf
sub
loope
push
and
jne
daa
dec
cmp
fcmovbe
adc
iret
std
push
std
xor
ja
filds
mov
xchg
lock
iret
rcll
in
xchg
mov
mov
divb
inc
scas
cmp
cmpsb
xchg
dec
adc
lret
or
adc
mov
cmp
lret
mull
cmp
pop
lcall
int3
mov
mov
pusha
mov
fsubs
loopne
arpl
sbb
sub
jmp
ret
lret
lcall
sahf
dec
jp
jp
insb
ffreep
popa
xchg
into
jp
cmp
cld
ffree
xor
or
sarl
pop
loope
adc
sbb
in
xchg
push
dec
pop
add
cli
movsb
dec
jno
subb
loope
clc
sarb
rcrb
push
mov
mov
shll
sub
and
ss
loope
loope
loope
cmp
outsl
outsb
enter
and
in
sub
pushf
sbb
cltd
stos
push
add
add
xlat
outsb
gs
adc
inc
add
xchg
loopne
cmp
sahf
lcall
mov
sahf
in
cltd
orb
mov
push
les
and
xchg
cmp
ret
dec
into
push
xor
aad
pop
xchg
jnp
fimuls
into
arpl
cmp
std
test
loop
repz
adc
bound
pop
rcrl
and
test
cmp
pop
enter
repnz
push
mov
lret
nop
adc
call
and
xor
les
xor
fcoms
imul
out
ficomps
fists
out
ffree
dec
pop
mov
stc
inc
mov
jecxz
pusha
icebp
and
xchg
add
mov
sbb
in
push
sar
push
push
arpl
add
out
rolb
subl
enter
xchg
clc
fwait
outsl
cs
scas
aaa
jecxz
cmp
stos
or
movsb
dec
add
shr
dec
inc
push
repnz
js
out
ret
arpl
jbe
xchg
adc
jo
daa
aas
xchg
pop
jo
fidivrs
nop
fs
imul
cmc
in
sub
mov
jecxz
icebp
xor
repnz
nop
or
lahf
mov
loopne
jmp
ds
push
mov
mov
jnp
outsl
inc
sub
mov
mov
stc
aas
fbstp
sbbl
dec
ljmp
push
pop
sbb
add
sti
xor
outsb
adc
xchg
hlt
cs
pop
jne
rclb
push
or
lret
xchg
ret
and
stos
mov
aam
inc
fs
movsb
lahf
cmc
inc
cmp
sub
pop
and
push
pusha
add
sub
xlat
add
inc
clc
ficoms
push
mov
push
jg
sbb
and
shlb
add
dec
sbb
shlb
imul
in
aas
test
incb
mov
lcall
jne
mov
bound
jp
push
aam
in
mov
scas
jb
and
pop
ret
mov
jg
imul
push
std
push
push
fmul
ret
cmpsb
daa
cltd
int
rorb
push
mov
dec
mov
insl
leave
lahf
dec
std
lahf
out
xchg
add
icebp
xchg
movsb
hlt
vandps
stos
loope
jg
ret
add
cmpsl
inc
add
cmc
inc
mov
inc
lret
and
push
cmp
iret
pushl
xchg
dec
add
cli
pushf
jp
sti
add
fmulp
stc
xchg
xor
rcrl
insb
push
sbbb
jecxz
and
test
pop
clc
and
in
push
fadds
orl
into
push
insl
adc
xchg
enter
fistpll
ret
cmp
and
jne
xchg
push
addl
ja
sti
push
or
in
pop
push
es
pop
inc
pushf
aas
sub
and
push
test
addr16
icebp
jns
rcrl
imul
xor
ret
lahf
xor
xor
adc
pop
cmp
dec
test
xchg
fwait
mov
popf
rcrl
jo
push
leave
xor
call
or
sbb
dec
mov
jp
cmp
add
xchg
out
push
repz
pop
cmp
xchg
bnd
dec
push
push
out
push
add
stos
sahf
adc
pop
inc
mov
sub
cmp
loop
add
xchg
jns
loop
in
inc
pop
cwtl
sbbb
popa
icebp
pop
test
lods
sbbl
fs
mov
xchg
pop
or
mov
inc
pop
cwtl
and
lret
xchg
js
and
mov
sub
pop
adc
dec
fldenv
popf
cmpl
mov
adc
mov
in
adc
jno
dec
and
cltd
es
mov
cmpsb
push
clc
or
cmp
jae
pop
fstpl
cmp
sbbl
push
cld
xor
mov
clc
cs
loop
cmp
sbb
loop
pop
lds
sahf
push
fidivl
cs
inc
add
xchg
leave
es
or
testl
adc
or
xchg
dec
fimull
mov
mov
fsub
fidivl
mov
xor
aas
add
and
mov
in
in
andb
insl
mov
insb
lcall
mov
sbb
rclb
insb
or
xchg
leave
dec
cmp
add
cmp
insl
mov
lcall
push
sub
lea
call
push
iret
cmp
pop
pop
push
or
out
sub
and
pop
push
lods
outsl
sbb
loope
fists
cmp
enter
pop
fadd
lret
jnp
xchg
add
push
fadds
iret
cmp
cs
xor
mov
pusha
cmpsl
les
fwait
and
add
pop
push
adc
out
roll
or
and
push
push
dec
rcl
sub
mov
sub
arpl
cmp
je
clc
cmpl
jl
loope
push
add
dec
xor
in
movsl
mov
ja
cld
sbb
sub
mov
xlat
lock
fimull
mov
leave
mov
xor
mov
mov
dec
mov
push
push
stos
loopne
cltd
jge
out
adc
pop
xchg
std
jne
cltd
cli
lcall
and
out
add
mov
sbb
mov
imul
pop
std
dec
adc
adc
lds
mov
leave
out
push
nop
push
fisttpl
mov
dec
es
cmp
jb
in
push
xor
jle
fdivp
add
mov
stos
mov
mov
add
fbld
or
adc
popl
xchg
int3
das
lods
subb
in
mov
repnz
jmp
jo
pop
lods
lret
and
dec
xchg
stc
and
shlb
fdivr
stos
sbb
adc
les
stos
add
xlat
int
outsl
push
inc
leave
push
jp
jns
add
add
jb
shlb
xchg
xchg
jno
xchg
les
sub
dec
out
in
dec
lret
cmp
loopne
xor
xlat
repnz
mov
adc
lods
xor
mov
jb
and
cmp
mov
sub
fsubrp
imul
cmpsl
rolb
aad
xchg
cmp
imul
stc
pop
out
rol
gs
push
loope,pn
lods
mov
jbe
jmp
sbb
lods
stos
jp
test
ret
pop
test
sub
or
xchg
push
invd
and
and
shlb
pop
lret
and
add
inc
xlat
cwtl
add
out
js
add
fisttpll
std
push
mov
repz
ret
lods
scas
pop
aaa
fld
shlb
addb
sbb
pop
rorb
shll
rolb
add
rcrb
xlat
roll
out
inc
pushf
idiv
push
pop
in
xor
cmpsb
hlt
fucomip
enter
adc
ljmp
loope
adc
push
pop
cmpsl
rorb
xlat
outsl
pop
cmp
ja
aas
fdivl
icebp
sub
xchg
pop
lock
lret
mov
fistps
mov
cmc
inc
xorb
xchg
idiv
mov
jae
or
lahf
loop
cs
xchg
repz
test
cmpb
ljmp
inc
inc
iret
pop
sbb
fstpt
jae
fcmove
mov
mov
mov
sahf
cli
insb
mov
mov
fwait
pushf
popa
dec
lock
mov
ljmp
adc
push
dec
push
xchg
cmp
and
mov
cmovno
xor
fwait
je
xchg
fidivs
push
cmp
and
mov
aas
cmp
sti
subb
lahf
adc
adc
mov
stos
decl
test
dec
and
clc
lcall
leave
outsl
cli
jns
push
stos
and
or
rol
daa
cmpb
lods
sub
ret
aam
pop
inc
sti
dec
and
in
fsubrl
out
dec
aam
outsl
test
add
arpl
cwtl
mov
leave
loopne
xor
and
fildl
xchg
test
lds
test
rorl
lahf
fsubs
or
and
test
icebp
dec
out
popf
int3
inc
xchg
push
adc
loope
fbld
jmp
aad
dec
jb
adc
jle
out
pusha
xchg
in
int3
xor
jo
adc
push
fidivl
xchg
es
inc
cmp
out
xor
cmpsb
jecxz
sub
in
or
mov
inc
jecxz
ljmp
lods
fs
mov
mov
dec
sbb
jns
es
ret
sbb
cmp
dec
push
adc
jbe
cmp
mov
inc
and
sbb
ds
sbb
push
ljmp
inc
out
data16
ja
cmpsb
lahf
lds
popa
jno
rolb
jb
adc
pop
mov
roll
insb
insl
jle
mov
lahf
rsqrtps
imul
xchg
ss
clc
pop
cld
mov
jno
hlt
add
outsb
sti
push
cmp
arpl
pop
dec
mov
daa
int3
or
testb
imulb
jmp
adc
out
inc
cmc
icebp
mov
jecxz
and
mov
pop
add
xor
sub
mov
jg
or
xchg
xlat
addr16
jb
xchg
and
fidivrs
inc
xorl
negl
jmp
push
xchg
push
sbb
push
adc
xchg
sub
pop
cmp
test
popw
fists
int3
outsl
xchg
mov
inc
movsb
daa
test
adc
or
test
gs
pop
fsub
or
addr16
mov
or
nop
outsb
dec
add
push
dec
sub
adc
pop
pop
fldenv
jbe
fnsave
adc
jae
mov
cmp
out
or
js
xor
sbb
adc
loope
sarb
fnstcw
lahf
xorl
xor
mov
jbe
loopne
add
call
xchg
fmuls
cmp
jno
adcl
out
add
cmpsl
xchg
mov
cmc
adc
and
xlat
rorl
in
jne
jae
stos
imul
insl
adc
push
adc
les
dec
mov
pop
test
call
test
add
dec
jp
rcr
mov
xchg
ja
mov
mov
jb
sbb
and
lds
movsb
ds
jmp
push
inc
arpl
xor
sub
inc
dec
dec
imul
or
jge
inc
pop
mov
push
sbb
pop
lret
cmp
sti
add
ss
sqrtps
jle
pop
cmp
adcb
in
xor
inc
dec
pop
or
imul
loope
or
push
mov
addr16
cmpsb
movsb
sbb
push
scas
jnp
pop
icebp
add
fwait
sbb
aaa
call
dec
enter
jns
mulps
push
xor
pop
add
xchg
push
mov
sub
outsb
adc
sbb
adc
addb
fdivs
jo
push
test
shl
iret
pop
xchg
fs
mov
movsl
xchg
cmpsb
mov
jne
les
sbb
pop
xchg
mov
enter
push
shl
es
adc
mov
add
aas
ret
sbb
xor
sub
pop
push
into
sub
and
loopne
insl
xor
ljmp
push
pop
xlat
ds
shrl
jnp
je
rclb
inc
cmpsb
clc
inc
mov
loope
and
mov
ret
jl
mov
insb
pusha
loopne
inc
jns
xchg
xchg
pushf
sbb
out
push
mov
mov
mov
xor
incb
mov
ss
loope
cmp
adc
adc
pop
sub
mov
ljmp
cmpsb
lcall
add
adc
pop
insl
test
cs
jecxz
addr16
add
mov
jbe
cmp
adc
clc
test
lcall
xchg
cmp
lcall
sub
jmp
add
pushf
add
push
stos
pop
mov
ret
jecxz
cli
sar
rclb
xor
and
mov
mov
aaa
sub
mov
mov
cwtl
repz
dec
dec
je
mov
add
mov
es
jnp
push
xchg
mov
mov
xchg
sti
fwait
ret
lret
pop
popf
test
and
addr16
adc
xchg
daa
push
pop
and
sub
mov
into
sarl
push
adc
xorl
stos
cmpsl
fxch
outsl
ret
insl
add
mov
insb
int3
imull
push
hlt
dec
adcb
jg
dec
rclb
inc
stos
pop
inc
dec
int3
fcomps
mov
repnz
sub
outsb
sarb
xchg
ss
int
cmp
inc
popa
sbb
jb
addr16
aas
push
les
shl
dec
sbb
or
jmp
fdivs
xor
scas
gs
pop
mov
test
out
sub
sub
sbb
gs
rcl
xor
push
jno
inc
notb
or
cmp
nop
jns
push
sub
push
shlb
ret
mov
push
xor
in
push
lock
pop
push
dec
adc
push
inc
mov
shr
jmp
fidivl
pop
sbb
leave
sub
jl
jns
inc
les
xor
out
cmp
and
push
sarb
cld
mov
xchg
out
or
pusha
mov
cmc
or
jne
testl
sub
and
cmpsb
dec
inc
cld
cmp
out
and
xor
add
and
js
addl
movsb
orb
rcl
mov
fsub
xor
dec
into
mov
inc
pop
push
scas
aam
mov
jo
aad
scas
bnd
jmp
xchg
pop
pop
mov
mov
mov
shrl
mov
lahf
cmp
mov
das
pop
push
add
mov
int
add
aaa
loop
psubd
icebp
mov
sysenter
and
dec
pop
es
inc
push
mov
test
dec
jno
rclb
in
pop
imul
pop
mov
popf
clc
push
dec
fdivs
clc
outsb
shll
jg
add
mov
adc
sub
or
mov
cmp
pop
and
sbb
dec
add
push
jb
mov
dec
add
insl
add
stos
jo
incl
and
and
jl
insb
xchg
dec
cld
jl
imul
sarb
mov
loope
jno
xchg
imul
push
es
sub
cmp
int3
jmp
aas
testl
clc
outsl
bound
aaa
inc
xor
xchg
jmp
test
dec
mov
xchg
sub
dec
in
lret
xchg
addr16
fisubl
lods
dec
cmpsb
es
xor
push
movsb
aam
jb
clc
sub
adc
popl
aad
jns
sbb
scas
mov
andl
xor
jo
xchg
push
dec
jmp
out
xor
jo
jbe
addr16
scas
cmp
push
fiadds
stc
aad
mov
push
jo
dec
xchg
sti
sub
inc
call
lret
notb
dec
leave
lds
sub
dec
add
dec
sti
mov
pop
mov
pop
in
pop
rcrl
inc
stos
sbb
lahf
es
bound
mov
pop
jb
mov
les
or
fcoms
add
or
into
push
lahf
rolb
repz
ss
lods
dec
dec
sbb
cli
mov
push
hlt
push
xchg
mov
sub
inc
jno
or
das
mov
outsl
mov
jecxz
jle
stos
imul
push
cmpsl
push
cmc
fidivl
ds
pop
clc
or
aam
xchg
stos
scas
pop
push
sbb
faddp
in
jnp
mov
push
arpl
push
in
inc
jg,pt
cmp
sub
mov
jns
lcall
cmp
push
jmp
std
push
insb
addr16
pusha
hlt
js
sub
xchg
fists
data16
xor
xchg
dec
inc
into
jne
push
dec
mov
rcll
jle
ror
push
xor
cmpb
rcl
jnp
pop
xor
mov
loope
popf
cli
add
scas
or
push
mov
int3
jecxz
dec
out
aam
stos
push
pop
add
in
push
fcmovbe
ret
and
pushf
adc
jl
pop
ds
inc
sub
mov
jp
cld
addb
xchg
and
inc
sub
jecxz
add
jp
mov
mov
iret
jge
xor
pop
inc
ljmp
add
push
aas
je
cmovne
mov
pop
jnp
pop
lods
loopne
pop
mov
mov
leave
pop
outsl
lret
xor
or
xchg
fwait
es
inc
cmpsb
cmp
lcallw
movsl
push
mov
inc
mov
testl
cmp
sub
rcrb
cmp
mov
add
or
lds
jg
bound
mov
cmc
je
sbb
mov
cwtl
pop
ss
sbb
sub
aas
pop
cmp
jns
mov
int
mov
cmp
cltd
or
and
cmp
xchg
inc
cwtl
dec
pop
mov
movsl
int3
dec
sub
outsl
cs
push
mov
icebp
adc
daa
and
jecxz
arpl
push
mov
push
cmp
mov
inc
cmpb
daa
aas
in
imul
out
dec
push
cmp
data16
inc
mov
xor
xor
cli
or
xchg
in
pop
and
dec
fnstsw
mov
scas
push
arpl
xchg
mov
mov
mov
in
xchg
mov
fcmovnu
popf
push
adc
sub
sbb
and
dec
pop
push
xor
fstps
ret
jo
mov
jne
and
mov
dec
inc
mov
lcall
data16
sub
icebp
ds
mov
inc
call
test
jne
int
or
and
sub
jae,pn
shrl
sub
in
sub
pushf
xchg
mov
lahf
inc
mov
ror
mov
mov
stc
stc
or
lret
pop
out
lcall
testl
dec
enter
jne
mov
sub
cmpsb
cwtl
xchg
aaa
jns
push
inc
into
stc
ret
mov
or
pusha
lea
jne
mov
adc
fiaddl
dec
sahf
sarl
cmp
inc
repnz
test
enter
pop
in
aaa
jle,pt
adcl
cmp
xchg
iret
out
sub
bound
mov
xchg
shl
lea
mov
push
inc
lea
insb
mov
sub
inc
adc
test
pop
test
daa
je
icebp
push
test
cmc
add
sub
push
in
loopne
mov
xor
add
notb
lods
mov
fldcw
pop
xor
not
push
cmp
mov
cwtl
push
test
outsl
ja
lods
inc
or
and
sub
add
mov
daa
movsb
sbb
hlt
push
or
jge
mov
scas
fisubs
cmp
cmc
stc
push
call
push
or
jecxz
cwtl
loop
fwait
jp
int3
pop
rorb
sbb
pop
pop
cli
je
jp
out
movsb
push
cmpsl
jb
rorl
push
xchg
xchg
and
and
xor
mov
dec
data16
das
cmp
enter
cmp
jb
jb
bnd
jecxz
xchg
cmp
xor
cmpsl
mov
jne
sbb
mov
dec
fs
idivl
add
sbb
lods
out
int
int3
mov
insb
adc
int
cmpb
inc
mov
sar
test
dec
rclb
push
in
cmp
xchg
lret
shll
mov
xchg
cmp
in
cmp
rcr
fs
xchg
and
lcall
std
rolb
pop
xchg
sbb
push
add
popa
dec
sub
dec
xchg
sbb
adc
dec
repnz
mov
mov
loopne
loopne
imull
cmpsl
lea
adc
cmp
jns
bound
gs
mov
shlb
jle,pn
dec
subl
inc
jae
adc
pop
mov
sahf
mov
mov
add
mov
and
jecxz
aas
sub
subb
mov
les
out
pop
fld
es
out
rclb
add
inc
xor
jl
jle
jno
std
ret
mov
popfw
scas
and
mov
xchg
out
add
pop
std
icebp
rclb
push
xchg
ret
push
sbb
jbe
push
mov
mov
mov
xor
push
cmpb
int3
and
inc
mov
push
mov
pop
add
aam
ja
dec
test
and
test
push
roll
dec
xor
lret
cmp
shl
cmp
inc
nop
mov
cmp
dec
mov
dec
mov
addr16
pushl
mov
inc
lret
xor
mov
cltd
mov
das
dec
adc
mov
xor
pop
xor
mov
dec
gs
stos
inc
shrb
bound
mov
push
pop
add
test
inc
mov
or
or
sub
sbb
roll
lock
rcrl
and
pop
cmp
lock
shrl
mov
stos
insl
in
lock
jae
sub
les
sbb
mov
scas
adc
ficoml
out
daa
stos
adc
mov
std
cwtl
aad
stos
je
into
popf
movsl
pop
rcll
dec
cld
dec
pusha
and
inc
push
in
fistpl
jo
or
js
aas
in
xor
dec
push
cmp
jno
adc
cmc
xchg
addb
loop
mov
mov
ret
push
dec
add
adcb
stos
ficompl
sahf
fsubr
add
dec
icebp
out
pop
neg
sub
push
or
aam
sub
xchg
mov
cmp
mov
xor
push
cltd
push
psubusw
rolb
add
mov
sbb
repnz
cmp
shrl
mov
mov
subb
test
leave
iret
ja
push
pop
pusha
or
fs
sti
xchg
or
rcll
test
push
mov
loopne
push
rorl
rep
rcrb
sbb
mov
pop
cmc
lods
aas
loop
pop
rcl
in
int3
dec
pop
adc
stos
xor
xchg
lock
arpl
movb
in
push
clc
enter
cs
mov
mov
mov
or
dec
cmc
fdivl
adc
stos
loop
push
nop
add
push
out
int
fstpl
test
inc
or
mov
xor
inc
mov
mov
mov
push
sub
or
dec
cs
nop
popf
dec
dec
lret
xor
test
xor
neg
adc
decb
je
int
aam
add
xchg
pop
push
out
int3
outsb
fdivrl
xchg
cwtl
sbbl
jnp
in
stos
xor
ret
push
sub
adc
xor
sar
sbb
filds
xchg
je
inc
fnstsw
repz
clc
inc
dec
cmp
jl
mov
decb
out
xorl
push
jmp
mov
push
mov
dec
jb
in
leave
aam
and
stos
in
xchg
sbb
push
pop
and
inc
jns
test
jae
stos
jae
or
push
xlat
daa
pop
lcall
loopne
or
jp
cli
scas
push
in
cmpsl
cmpsb
cmpsb
clc
push
loope
or
rclb
scas
mov
push
mov
cmp
jbe
jmp
sarl
fdivl
int3
shll
stos
daa
int3
sub
cmpsl
push
inc
jl
fcoml
jge,pt
mov
insb
xlat
adc
addr16
aam
out
mov
dec
jo
in
xor
scas
movsb
stc
ljmp
add
or
scas
cltd
repnz
push
mov
and
adc
xchg
mov
imul
inc
inc
sarb
jae
adc
mov
pop
fsubs
lret
push
in
nop
lods
ret
lods
xor
mov
test
ret
in
cmp
pop
repz
inc
outsb
push
and
scas
popa
test
pusha
push
rcll
jmp
mov
mov
jno
push
or
outsl
jge
xchg
mov
lret
xchg
lods
lods
addr16
fdivs
fdivs
in
icebp
ja
push
pop
push
loop
insl
repnz
push
dec
ljmp
test
sub
dec
xor
mov
pop
stos
cmp
pop
and
aad
inc
push
iret
nop
movsl
std
aaa
filds
roll
fisttpl
xchg
pop
ja,pn
mov
mov
push
cmp
mov
in
aad
xor
sub
push
jns
jp
movb
je
and
mov
mov
push
push
cmpb
test
pop
adc
in
ja
addb
mov
or
jo
or
fwait
out
out
test
or
or
pop
jns
mov
or
arpl
jecxz
mov
inc
mov
xor
enter
xchg
stos
test
mov
push
push
xor
cmp
ljmp
into
ficomps
mov
into
not
dec
mov
push
sbb
jns
xchg
or
stos
insl
fwait
or
xor
sub
push
dec
aas
clc
mov
mov
loopne
lsl
insb
pop
jne
xchg
cmp
xor
outsl
je
pop
cmovno
in
mulb
stos
or
lahf
popa
mov
mov
mov
jne
jle
fists
push
movsb
and
sbbl
out
test
mov
stos
xchg
iret
sub
out
inc
outsl
incl
out
mov
ljmp
push
cwtl
mov
insl
add
jmp
lahf
mov
test
jp
sbb
adc
icebp
mov
repnz
outsb
inc
pop
xchg
repz
pushf
lcall
sbb
in
push
or
mov
pop
dec
test
push
dec
shrb
mov
sub
bound
int3
adc
outsb
cmp
cmp
addb
adcb
adc
and
ss
xchg
xchg
decl
xchg
stos
xor
imul
xlat
outsl
push
fwait
cltd
in
mov
or
sub
mov
adc
js
sbb
test
ret
push
cli
cmp
testl
ja
push
scas
push
insb
lcall
pusha
push
decl
ljmp
or
int
jl
xor
scas
andb
leave
ds
stc
inc
loope
out
cmp
scas
out
dec
ds
cwtl
orb
push
lock
sub
mov
adc
and
lds
ror
mov
cld
inc
mov
hlt
or
je
mov
xchg
cmp
push
out
push
xor
or
jl
sbb
jecxz
lret
mov
mov
push
lods
inc
imul
xor
or
mov
mov
xchg
xor
push
icebp
mov
sub
fwait
in
dec
mov
std
loope
sbb
clc
aaa
cmp
ret
ficoms
pop
pop
bound
lret
dec
or
jns
fadds
cwtl
movl
and
inc
das
inc
dec
aam
and
mov
adc
xchg
sarl
xchg
ds
mov
out
xchg
int3
cmp
out
sub
mov
out
ftst
stos
pop
inc
sbb
jo
lea
xchg
sahf
or
hlt
call
add
push
xor
rdpmc
mov
xchg
outsl
aaa
pop
pop
xlat
sarb
pop
cmc
or
fucomp
add
cli
pop
mov
add
loopne
andb
repz
mov
mov
or
call
mov
pop
or
xchg
shrb
pop
sbb
push
mov
stos
xor
std
es
xlat
sar
jl
jne
bound
add
cld
pop
rcr
or
cli
cmpsl
daa
adc
or
roll
rorl
jecxz
sbb
sahf
xchg
enter
and
cwtl
lahf
and
jecxz
sub
es
xor
outsl
loop
sub
test
add
jb
pop
inc
and
cld
sbb
jmp
xchg
loop
test
lahf
xor
and
jecxz
adc
mov
sub
mov
ret
test
sarb
ja
mov
mov
sub
jg
dec
jl
jl
shl
loope
imul
dec
xchg
mov
jg
cld
je
outsl
inc
in
les
push
mov
ja
js
adc
jg
bound
or
sbb
ds
mov
sti
cmpsl
call
sub
sbb
test
push
sbb
adc
jae
ds
ss
inc
xor
flds
iret
pop
push
cmp
and
push
add
mov
movsl
inc
dec
add
popa
mov
adc
test
add
fsub
adcb
xchg
jg
and
aam
stc
dec
push
mov
pop
or
popa
dec
mov
push
out
mov
sub
inc
cmc
push
sub
cmpsb
add
xor
movsl
inc
dec
cmp
or
mov
push
fs
in
sahf
loop
mov
cmp
pop
leave
arpl
or
cmpsb
je
adc
mov
adc
xchg
ficompl
push
and
test
arpl
jae
cmp
pop
jb
mov
mov
mov
stos
xchg
fsubp
shll
mov
out
pop
shll
xchg
cli
mov
leave
xchg
orl
retw
data16
pop
repz
add
call
pop
push
or
add
cmp
rcrl
cmp
add
inc
mov
and
out
and
daa
leave
pop
pop
adc
mov
mov
das
jbe
leave
out
mov
int3
push
lcall
push
lahf
daa
lahf
addr16
push
es
loop
pop
mov
outsb
out
cmp
jmp
add
and
ss
dec
int3
dec
sahf
push
xchg
iret
sbb
inc
out
jno
jb
mov
mov
lahf
sbbl
jo
jo
cmpb
outsb
sbb
mov
dec
das
sbb
ror
push
lahf
andb
push
std
jmp
ss
cmpsb
and
into
repnz
stc
lds
flds
or
lret
pop
sub
adc
xchg
jg
lock
mov
sbb
jo
add
dec
ja
mov
stc
stc
stos
cmp
fstp
xor
xor
loope
stos
aas
xor
in
inc
cmp
jb
mov
fcmove
bound
push
dec
scas
arpl
andb
pop
scas
pop
out
mov
dec
ljmp
dec
xchg
sahf
jae
xchg
stos
gs
push
loop
jbe
mov
push
jecxz
mov
addr16
scas
mov
pop
ficomps
dec
out
das
hlt
ljmp
insb
xlat
ja
jbe
insb
jae
cld
insl
add
stos
or
xor
je
mov
mov
add
out
out
hlt
pop
cmp
in
xchg
andb
iret
adc
cli
cltd
gs
jge
xorb
icebp
int
xchg
push
pop
xchg
fs
mov
jl
inc
test
fisubrs
jp
movsl
jno
rclb
xor
xchg
std
mov
and
xor
and
pop
mov
cmpsl
jno
adc
test
jecxz
insb
pop
arpl
data16
or
in
push
std
pop
xor
push
clc
sbb
pop
fsubrs
out
push
jno
out
inc
popf
xor
sti
dec
inc
orl
jp
mov
incl
xchg
xchg
rolb
out
pop
bound
in
data16
repz
scas
pop
adc
sub
das
and
push
xchg
cmp
loop
sti
push
in
fdivrp
ret
adc
adc
fstl
popf
inc
cs
sub
lret
faddl
aad
jno
jae
inc
loopne
sti
mov
xor
aaa
dec
test
fisubl
cmp
mov
mov
inc
mov
inc
mov
xchg
adc
in
clc
inc
jns
xchg
mov
ret
mov
xchg
cmpsl
inc
leave
sbb
je
jge
cmp
cmp
loop
add
pop
jge
or
enter
push
lahf
repnz
mov
into
push
mov
adc
sbb
loop
shrb
ljmp
push
scas
cmp
dec
mov
mov
pop
ret
test
fbstp
mov
flds
test
sub
faddl
add
add
add
insb
popa
push
add
data16
add
je
add
ja
insl
outsb
add
imul
outsl
outsl
jb
add
add
add
jb
add
je
inc
insb
insb
popa
push
add
jo
add
je
jns
add
popa
add
add
je
je
add
add
imul
add
add
add
push
add
outsl
add
jae
add
dec
imul
add
outsl
jb
popa
imul
insb
add
add
outsl
add
jae
add
jae
add
outsw
jb
popa
je
insb
add
jae
je
data16
insb
add
add
add
jae
add
add
jns
add
insl
outsb
add
add
push
add
add
add
popa
outsb
add
outsb
add
add
imul
add
add
add
add
insl
bound
jns
add
jns
outsl
add
add
dec
add
add
insb
add
add
add
je
outsl
jae
add
imul
push
add
add
add
add
je
add
add
jb
add
add
bound
je
gs
jae
add
ja
push
add
jo
gs
add
add
add
add
imul
add
ja
insb
add
add
add
add
jne
add
jne
ja
imul
add
jae
add
add
add
add
popa
add
add
add
add
add
add
insb
add
add
add
add
add
push
jne
outsb
add
add
add
add
add
jae
add
add
add
data16
insl
