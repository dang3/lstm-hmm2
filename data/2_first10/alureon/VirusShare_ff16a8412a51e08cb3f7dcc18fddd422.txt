push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
push
mov
sub
mov
push
push
push
push
mov
movl
call
xor
mov
movl
movl
mov
mov
movl
mov
mov
mov
mov
mov
imul
mov
xor
add
incl
mov
push
push
push
push
mov
call
mov
mov
mov
mov
mov
xor
mov
div
mov
mov
mov
mov
sub
not
add
xor
mov
mov
incl
add
cmpl
jb
cmp
je
mov
jmp
push
call
mov
push
push
push
push
mov
add
call
movl
mov
push
shl
add
incl
push
push
push
call
mov
mov
cmp
je
push
call
mov
push
push
call
mov
call
add
cmp
je
cmpl
jne
lea
push
push
pop
add
xor
div
push
pushl
pushl
call
mov
push
push
push
pushl
call
mov
lea
add
lea
add
mov
lea
mov
mov
mov
and
call
mov
mov
mov
call
mov
mov
push
push
mov
xor
push
push
mov
mov
call
mov
lea
push
push
push
lea
push
pushl
movb
pushl
movb
push
call
push
push
push
call
mov
call
mov
call
test
je
xor
pushl
mov
pushl
pushl
pushl
call
mov
cmp
jne
push
call
cmp
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
mov
push
mov
sub
mov
push
mov
push
push
lea
mov
call
lea
xor
call
test
je
test
je
cmpb
je
mov
push
call
mov
push
mov
call
mov
lea
push
call
mov
test
je
push
push
push
push
call
add
push
call
test
je
push
push
push
call
mov
test
jge
push
push
push
call
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
call
mov
mov
pop
pop
pop
call
leave
ret
push
mov
sub
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
jne
inc
jmp
andl
push
push
lea
lea
cmpl
mov
je
mov
mov
jmp
mov
mov
add
xor
nop
movb
mov
mov
inc
cmp
jb
mov
test
je
lea
movsbw
mov
add
inc
mov
test
jne
lea
push
call
mov
test
je
mov
mov
add
andl
cmpl
mov
je
mov
mov
testl
je
push
call
mov
and
push
pushl
call
push
jmp
push
call
push
call
mov
add
add
push
pushl
call
push
mov
call
cmpl
je
incl
mov
mov
lea
cmpl
jne
mov
incl
mov
imul
add
mov
add
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
jmp
push
call
pop
ret
mov
mov
ret
push
lea
sub
mov
push
push
push
push
push
push
mov
call
push
push
call
test
je
push
xor
push
call
push
mov
call
mov
cmp
je
lea
push
push
call
mov
mov
mov
mov
push
push
mov
call
cmp
jne
movl
push
push
call
push
push
mov
call
xor
cmp
setl
mov
mov
cmp
mov
je
mov
cltd
sub
sar
mov
push
push
call
mov
neg
sbb
and
add
push
mov
call
push
mov
call
movzwl
push
call
pop
pop
push
push
push
call
push
push
push
call
push
push
lea
push
call
lea
push
call
mov
mov
mov
movzwl
xor
jmp
cmp
jne
cmpw
je
inc
inc
mov
cmp
jne
jmp
xor
inc
lea
push
movl
movl
call
mov
push
pushl
call
push
push
push
push
push
pushl
mov
call
cmp
mov
mov
jne
xor
push
pop
lea
rep
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
movl
movl
movl
mov
movl
movl
call
test
je
mov
push
mov
imul
cltd
pop
idiv
push
push
mov
mov
add
mov
lea
mov
mov
shl
mov
lea
push
call
mov
mov
sub
sub
mov
cmp
mov
mov
jle
mov
push
pushl
neg
push
push
pushl
sbb
push
push
push
and
add
push
push
push
push
call
cmp
mov
je
lea
push
call
push
push
push
pushl
call
test
jne
call
xor
jmp
call
pushl
call
pushl
pushl
call
pushl
call
push
pushl
call
mov
xor
cmp
sete
push
call
cmp
je
call
cmpl
je
cmpl
je
push
push
push
pushl
call
xor
inc
pop
pop
pop
add
leave
ret
mov
push
mov
sub
mov
push
push
push
mov
mov
mov
push
mov
lea
push
pushl
pushl
call
lea
xor
test
je
push
push
push
call
add
test
je
push
add
push
call
inc
pop
add
cmp
pop
mov
jl
mov
mov
pop
pop
mov
pop
call
leave
ret
mov
push
xor
cmp
je
cmp
push
mov
je
push
call
jmp
push
push
push
pushl
call
push
push
push
pushl
call
push
push
push
pushl
call
pop
pop
ret
jmp
push
mov
testl
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
pop
ret
push
mov
sub
push
push
mov
xor
cmp
je
mov
cmp
je
cmp
je
cmp
je
add
push
lea
push
push
call
mov
add
add
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
sub
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
imul
mov
mov
mov
lea
ror
mov
lea
add
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
cmp
jb
mov
mov
test
je
mov
sub
mov
mov
inc
dec
jne
pushl
mov
pushl
pushl
pushl
pushl
call
mov
mov
mov
call
mov
add
push
pushl
pushl
pushl
call
add
pop
jmp
xor
pop
pop
leave
ret
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
test
je
andl
mov
sub
add
mov
mov
mov
lea
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
cmpl
mov
je
or
sub
mov
mov
sub
add
mov
mov
mov
lea
push
push
push
call
mov
mov
mov
sub
add
mov
movzwl
add
lea
movzwl
lea
mov
mov
mov
andl
xor
cmp
jae
mov
mov
mov
mov
mov
mov
addl
add
push
pop
rep
mov
add
add
incl
mov
movzwl
cmp
jb
mov
mov
add
pop
mov
xor
pop
inc
pop
leave
ret
push
mov
sub
mov
mov
mov
sub
mov
je
mov
test
je
push
mov
add
test
je
push
push
mov
sub
mov
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
addl
decl
jne
mov
test
jne
pop
pop
pop
xor
inc
leave
ret
mov
push
mov
push
mov
xor
mov
test
movl
je
push
call
pushl
call
mov
xor
inc
pop
pop
ret
push
mov
push
push
mov
imul
push
mov
cmp
jb
mov
push
call
mov
add
imul
push
xor
pop
div
mov
mov
mov
mov
sub
mov
test
je
mov
sub
push
mov
call
xor
divl
mov
add
cmp
jae
mov
mov
imul
xor
divl
xor
mov
sub
imul
div
mov
cmp
jae
mov
sub
push
pushl
pushl
call
add
add
add
add
cmpl
jne
pop
pop
pop
leave
ret
mov
push
mov
push
mov
test
je
push
mov
test
je
andl
push
call
push
call
push
call
test
je
push
call
push
call
mov
push
call
push
call
pop
pop
pop
ret
mov
mov
mov
mov
rol
imul
add
mov
mov
mov
ret
mov
push
mov
xor
cmp
jne
mov
jmp
mov
push
mov
mov
test
je
mov
inc
inc
decl
jne
cmpl
pop
jne
dec
mov
movb
pop
ret
push
push
mov
mov
mov
mov
mov
mov
mov
cmp
jb
push
mov
mov
mov
lea
xor
test
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
imul
mov
mov
mov
lea
ror
lea
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
mov
inc
cmp
jb
pop
pop
pop
ret
push
mov
sub
push
lea
push
push
movb
call
push
lea
push
push
call
lea
push
push
call
add
test
jne
push
mov
push
call
push
call
push
call
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
push
call
push
call
push
call
mov
pop
jmp
mov
leave
ret
push
or
lods
dec
xchg
das
sub
adc
leave
jno
sbb
adc
dec
adc
and
and
jno
test
in
fisubs
mov
ret
sub
inc
aad
mov
jle
dec
jns
xor
test
mov
jg
dec
enter
xchg
ss
leave
in
mov
and
adc
test
dec
sub
push
dec
fnstsw
add
inc
lea
sbb
fisubs
repnz
push
cmc
xor
xlat
inc
add
mov
pop
jo
cltd
sbb
push
push
adc
in
in
add
dec
mov
stos
lahf
loope
add
dec
aad
pmaxub
sub
dec
repnz
out
push
jle
cmpsb
xchg
push
dec
and
mov
test
pop
inc
mov
lds
outsb
int
orb
hlt
or
rclb
or
stos
sub
add
mov
stos
dec
xor
xor
push
add
stos
pusha
addr16
outsl
repnz
cmp
mov
dec
mov
xor
adc
mov
pop
fwait
xlat
scas
sbb
xchg
xchg
and
add
dec
mov
push
faddl
scas
bsf
dec
lock
push
xchg
pop
mov
dec
sbb
das
ljmp
mov
je
or
int
int3
movsl
icebp
sbb
cs
jne,pt
daa
outsl
in
cmc
pop
ja
jmp
mov
jne
data16
xor
push
fsubrl
pop
xor
cli
pop
imul
movsl
jle
mov
sbb
das
stos
test
dec
stc
adc
and
fwait
repnz
push
lret
shll
sub
adc
out
pop
lret
hlt
scas
into
mov
or
cmp
cs
add
andb
ljmp
arpl
lcall
inc
push
fwait
cld
daa
push
adc
loop
jge
popa
mov
repnz
jl
mov
loope
cli
repnz
in
fidivrs
in
ret
sub
mov
mov
ss
out
or
mov
add
sahf
push
sub
mov
les
mov
out
pop
pop
in
or
pop
rorb
adc
ficompl
and
mov
mov
sbb
inc
sbb
add
add
inc
inc
jmp
adc
out
pop
lods
stc
nop
mov
scas
sub
aad
outsl
int3
pop
andb
pop
inc
dec
imul
jb
xor
arpl
ror
cmp
out
mov
sub
cwtl
xchg
dec
sub
or
in
jns
rcll
shlb
push
xlat
dec
rorl
pop
add
inc
test
icebp
xor
fisubrs
in
jnp
into
in
jle
mov
sbbl
sub
in
push
dec
rclb
rol
mov
push
addr16
loope
inc
enter
xlat
dec
push
cwtl
dec
mov
or
jmp
dec
lcall
add
add
std
fmull
sbb
add
sbb
into
mov
xor
xor
xchg
jno
fnsave
faddp
movsl
xchg
jne
jecxz
or
pop
mov
lahf
cmc
push
xchg
arpl
int
bound
ljmp
sbb
gs
xchg
sub
orb
mov
pop
fnstcw
mov
idivb
imul
inc
mov
inc
arpl
dec
ret
jae,pn
add
add
faddp
jne
lods
lahf
cmpsb
or
lds
rcl
sbbb
sbb
or
data16
xchg
icebp
jbe
sub
pop
push
sti
stos
lcall
xor
sub
add
xchg
adc
pop
and
add
in
mov
xor
dec
stc
xchg
dec
sub
add
or
add
cmp
push
mov
loope
test
jb
add
pushl
mov
sbb
xchg
fwait
cwtl
inc
push
push
in
mov
sub
xor
add
pop
arpl
sbb
pop
inc
mov
icebp
stc
es
mov
repz
imul
js
stc
enter
pop
or
je
and
out
sti
je
push
sahf
pop
inc
add
mov
movsl
inc
bound
fnstcw
xchg
js
dec
movsl
shlb
mov
mov
test
push
mov
adc
xchg
mov
mulb
ror
dec
or
xchg
es
cld
and
sbb
xlat
xlat
js
mov
push
sbb
cli
push
addr16
imull
mov
xor
jno
sub
out
push
push
lods
or
inc
mov
fisubs
ja
ficoml
rcrw
stos
xchg
movsl
dec
or
xor
sahf
int
adc
cli
mov
jne
aas
mov
cld
clc
dec
dec
enter
cmp
addr16
stos
jecxz
std
arpl
lahf
popa
das
scas
jp
loopne
adc
ds
jbe
in
fld
out
fidivl
imul
mov
stos
push
aad
sub
push
or
mov
int
mov
or
testb
cli
and
sub
add
jo
dec
jp
nop
iret
sbb
and
out
pushf
or
inc
test
jae
mov
pop
cs
push
lods
mov
insb
cli
movsb
mov
enter
mov
push
and
lds
pushf
mov
bound
mov
sub
jnp
insb
enter
push
pusha
cmp
out
push
loop
sbb
push
dec
enter
pop
add
and
lret
mov
sub
jb
xchg
decb
into
jecxz
inc
repnz
jl
sub
lock
imul
fwait
pop
dec
sarb
mov
mov
mov
push
aaa
push
in
loop
push
sub
jae
cmp
mov
xchg
sti
dec
lret
xchg
int
andb
jo
movsb
fsubrl
xchg
jp
cmp
shrl
es
shlb
sub
add
clc
mov
je
aam
enter
adc
adc
jns
dec
dec
push
xor
rcll
xchg
lcall
cmpl
std
insb
add
mov
mov
clc
js
rcrb
jne
shlb
push
out
lret
leave
fs
testl
add
add
loopne
jne
mov
push
mov
lcall
orb
lea
test
je
movsb
and
scas
ljmp
lods
and
jg
pusha
inc
adc
mov
sbb
push
sub
push
push
popf
int
scas
push
mov
aaa
sti
andb
js
push
inc
lock
inc
sub
cmp
aaa
bnd
mov
fimuls
out
clc
sbb
jmp
cmp
clc
dec
cld
pop
jmp
in
ficomps
adc
and
fstpl
xor
test
insb
xor
notl
xchg
and
lret
xchg
cmp
jp
sub
add
in
mov
aaa
inc
orl
dec
xor
pop
lahf
mov
lock
testl
sub
sub
cwtl
or
movsl
pop
in
pop
jnp
mov
bound
add
rcll
and
aam
lcall
test
int3
fildl
outsl
repz
mov
pop
inc
jg
cmp
loopne
xchg
ror
add
mov
fwait
rorl
mov
in
js
orl
cmp
out
add
sub
sub
into
push
push
pop
pop
mov
cmp
or
jo
pusha
outsl
xor
enter
dec
or
adc
mov
fldcw
pop
fnstcw
cmp
mov
pop
inc
stos
or
sbb
inc
mov
cs
and
insl
xchg
fs
cmpsl
je
sti
lahf
cmp
stos
lcall
into
rcr
lods
jb
je
jmp
es
subl
xchg
arpl
imul
lods
push
loopne
inc
sbb
mov
sub
movsl
dec
ds
xchg
mov
daa
xor
test
stos
xchg
xchg
sti
mov
or
jmp
push
sub
dec
sub
pushf
clc
mov
push
addr16
iret
lods
mov
into
inc
sbb
mov
shr
bound
xor
mov
pop
fdivs
xor
pop
jmp
ss
shrw
sub
adc
pushl
sbb
dec
xchg
mov
test
pusha
dec
aas
xchg
jb
mov
or
incb
cli
cmpsb
out
icebp
mov
pop
addr16
pop
in
rcr
push
pop
mov
pop
fwait
inc
adc
jnp
xchg
fists
inc
jecxz
add
ficoml
and
and
jg
xchg
arpl
lea
add
gs
aam
lret
dec
jle
notb
das
not
hlt
out
xor
add
es
jge
push
arpl
push
or
pop
push
mov
cmp
movsl
fisttpl
inc
push
cmp
or
pop
sub
loop
push
mov
cmpb
scas
test
cmp
dec
pop
add
sbb
or
mov
xchg
add
bswap
dec
cltd
pop
pop
xchg
cmpsb
test
icebp
sbb
fadds
mov
mov
pop
or
scas
dec
sub
mov
cld
xor
jns
add
repz
clc
out
fidivrs
jecxz
add
inc
pop
and
sub
aas
pushf
loopne
jp
or
leave
pop
mov
xchg
jb
jno
sub
les
arpl
test
mov
jnp
ret
mov
xchg
ficomps
xorb
xchg
lret
pop
lret
or
test
dec
sbb
rcrb
bound
mov
xchg
cli
xor
dec
inc
add
push
sub
cmp
lcall
jns
mov
sbb
xchg
icebp
mov
imul
sti
insb
fs
sti
jne
inc
mov
and
popa
ret
xchg
test
xor
mov
cmp
in
push
or
jo
add
adc
outsl
pop
popf
stos
sub
ds
xor
push
cmp
dec
sbbl
sbbl
push
pushf
xchg
pop
add
cmpsb
lcall
sar
push
jmp
mov
dec
cs
call
inc
cmpsb
or
aas
stos
aad
aaa
push
or
push
outsw
add
cmp
push
arpl
inc
and
jmp
add
imul
xchg
outsb
fwait
push
cmp
or
mov
jge
js
ja
push
out
mov
jecxz
ljmp
das
mov
fistps
scas
ljmp
add
sahf
sub
scas
dec
icebp
jecxz
jo
mov
add
mov
mov
test
in
leave
xchg
pop
fwait
jns
sub
pop
adc
addr16
stos
jle
push
or
addb
inc
push
pop
xorb
push
or
dec
les
and
add
xlat
pop
hlt
gs
mov
push
stc
xchg
sbb
aam
mov
cmp
scas
xor
pop
stos
xor
fisttps
push
stos
ds
mov
fdivrs
cltd
call
dec
cs
cmc
fidivrs
mov
popf
jo
fld
lret
mov
cmpsb
outsl
push
pop
xor
cs
jbe
dec
pop
popa
lds
mov
jp
mov
cli
and
and
lret
aas
pop
outsl
movsb
or
add
outsb
push
dec
loopne
ds
pop
ret
mov
pop
jae
pushf
xchg
xlat
gs
mov
aaa
in
dec
mov
dec
cmp
arpl
testb
shll
hlt
fadds
xchg
push
jecxz
mov
int
adc
sbb
push
xlat
sub
xchg
push
movsl
es
int3
add
mov
imul
fsub
addr16
mov
cmp
lret
xor
inc
into
mov
xchg
out
repnz
cmp
pop
or
outsb
adc
inc
xchg
xlat
scas
adc
imul
push
repz
ret
mov
test
mov
fs
shrb
jl
ficomps
test
add
mov
pop
addr16
and
mov
mov
cmp
ds
jno
push
push
imul
cmp
cld
cmp
mov
imul
xchg
rolb
mov
sub
cmpsl
cmp
mov
cmp
jge
insb
adc
jle
cmp
daa
cmp
mov
jbe
dec
ss
pop
das
cmp
push
mov
mov
mov
idivb
fs
or
ljmp
fisttpl
icebp
or
arpl
mov
sbb
in
in
cmpsb
test
cltd
jno
test
jns
in
stos
cs
roll
xor
sub
mov
ds
cmpsb
bound
insb
dec
lock
push
pop
adc
inc
and
mov
rolb
pop
push
jl
xchg
fsubr
fwait
aad
orb
popa
sbb
shrl
xchg
test
imul
pop
xchg
jecxz
pop
pop
stc
hlt
enter
cmp
shl
ljmp
scas
push
xchg
in
stos
jmp
xor
jno
mov
out
jle
xchg
test
gs
lds
repz
inc
push
and
lods
pop
lods
jo
ds
dec
sub
or
mov
push
sub
add
mov
push
xor
dec
sbb
add
fistps
gs
dec
insb
into
ss
in
in
or
repz
and
adc
fsubrl
ja
das
and
cli
push
jb
inc
mov
fldt
scas
inc
adc
mov
inc
xchg
test
popa
std
dec
mov
dec
and
cmp
pop
cmp
sbb
aas
or
mov
inc
scas
popa
jb
data16
push
loop
and
mov
mov
sbb
bound
sbb
jp
fldenv
jle
arpl
inc
jno
fwait
jge
hlt
mov
fwait
inc
mov
es
mov
xor
lods
mov
clc
inc
inc
mov
lods
call
test
outsl
loope
xor
jg
sbb
das
mov
das
leave
mov
ficompl
insl
or
std
mov
pop
xchg
xor
into
leave
xchg
jnp
fiadds
sbb
int
adc
repnz
mov
sbb
pop
fidivrs
mov
mov
icebp
aas
push
and
push
xlat
nop
stos
movsl
add
jne
xor
and
push
or
dec
cltd
addl
push
iret
int
sbb
fdivrs
cs
cmp
movl
add
add
push
or
inc
pop
aaa
xor
push
sub
loop
pop
xor
jecxz
mov
inc
out
dec
sub
xor
jae
dec
add
inc
bound
out
add
xor
enter
pop
enter
ret
pop
mov
sub
xor
dec
ja
out
dec
sbb
push
mov
or
out
es
xchg
inc
sbb
out
inc
les
mov
lahf
sbb
fbstp
mov
icebp
pop
in
mov
jmp
inc
mov
fildl
filds
add
jge
adc
cwtl
popa
movsl
jle
sub
popf
lea
fcomps
cmpsl
std
lret
es
test
push
push
inc
mov
cmpsl
loope
es
sub
xchg
add
lcall
mov
or
pop
iret
jmp
dec
in
mov
add
repnz
sub
adc
sbb
push
insl
jecxz
adc
push
das
jne
inc
adc
adc
mov
push
addr16
xor
subl
inc
rcr
fwait
and
fmull
dec
in
loope
imul
add
outsb
hlt
out
push
mov
xor
lahf
mov
xchg
or
inc
ret
inc
ret
stos
sub
adc
push
xchg
xorb
nop
popf
pop
and
mov
push
adc
push
rcrb
ret
lret
or
sub
lcall
lret
inc
aam
cmp
les
test
dec
pop
scas
icebp
or
outsl
je
bound
jno
jmp
push
mov
int
add
es
pop
mov
sub
cltd
pop
pop
jmpw
fldcw
pop
and
add
add
push
ljmp
cmc
dec
loopne
loopne
and
enter
mov
fcmovb
and
pop
push
xchg
outsl
lret
pop
jp
jno
ljmp
mov
xchg
xor
stos
lcall
pop
mov
scas
je
pop
pop
adc
clc
icebp
jmp
jle
and
repnz
dec
cmp
cmc
pop
aad
test
adc
in
inc
das
cmpsl
mov
push
dec
lds
and
jae
jp
ja
and
aad
sbb
mov
dec
mov
pop
fnsave
loope
lret
test
add
add
jg
pop
in
dec
mov
jns
pop
fisttpl
out
sub
mov
cmp
sub
add
mov
push
mov
xchg
sub
xor
or
pop
rcll
andl
vcvtss2si
lahf
push
cltd
cmp
in
pusha
jmp
aas
leave
cmp
sub
push
std
gs
add
xchg
pop
dec
fidivrl
push
mov
pusha
mov
shlb
cmp
clc
gs
cs
mov
movsb
pop
ds
popf
jns
ja
mov
add
pusha
mov
leave
nop
mov
fildll
mov
push
les
jb
or
cmp
mov
loopne
cltd
int3
pcmpeqb
pop
lret
and
imul
ret
mov
lds
std
rcll
push
loopne
xor
leave
jecxz
or
fimuls
or
jecxz
inc
fstp
jae
xchg
popa
rorl
rcrb
daa
mov
mov
xor
xor
sub
inc
mov
add
cmpsb
adc
test
add
xchg
stc
loop
pushf
sbb
iret
mov
mov
or
mov
neg
loope
xchg
sbb
push
mov
xor
fiaddl
addr16
dec
fxch
pusha
mov
and
mov
add
inc
arpl
insl
notb
and
ret
xchg
xchg
cmp
adc
mov
gs
and
xchg
in
es
cmp
mov
adc
ror
pop
fistl
push
fdivr
out
xchg
or
pop
es
jo
mov
add
adc
mov
out
popf
inc
pop
xor
inc
pop
and
or
in
jb
push
int3
dec
shlb
mov
jle
jg
jmp
shll
mov
or
sub
xchg
outsl
lods
cmpsl
mov
lock
into
cmpsb
pop
test
fwait
pop
mov
daa
addl
incb
cmp
dec
add
and
add
sbb
xchg
sbb
cmpsl
lcall
mov
xor
adc
mov
pop
cmp
call
xchg
and
mov
mov
push
add
add
fmull
jno
stc
xor
insl
lret
int3
jno
inc
call
mov
cmc
das
movsb
cltd
lea
xchg
pop
rcr
outsb
test
bound
movsb
jo
mov
push
incb
xchg
adc
inc
stos
dec
mov
xchg
bound
js
call
jno
pop
jnp
push
sub
jl
mov
adc
arpl
int3
jae
and
push
pop
xchg
pop
sahf
push
jp
lahf
and
mov
xor
js
cli
in
mov
cld
push
and
lds
mov
add
add
ja
gs
mov
inc
lock
jmp
clc
mov
inc
mov
fwait
xchg
cmp
ret
cmp
clc
jl
movsl
sbbb
fs
in
inc
mov
cmpb
or
jl
aad
or
je
repnz
aam
jo
stc
jno
pop
add
divb
sahf
inc
cmpsl
xor
or
cmp
scas
mov
inc
movsl
dec
aaa
mov
push
stos
ds
data16
ficompl
loop
inc
and
fistpll
outsl
repnz
pop
or
dec
fidivrs
dec
jl
xlat
test
lea
xor
and
ret
add
add
mov
fsubp
movsb
bound
xor
mov
or
push
sub
scas
inc
std
add
jb
dec
xorb
mov
jg
imul
test
or
mov
dec
xchg
clc
mov
push
pop
sub
shll
mov
mov
popa
pop
test
pushf
out
jp
lret
jmp
cld
fnsave
bound
in
addl
xchg
rorl
dec
negl
test
das
xchg
pop
in
sub
xchg
xchg
mov
inc
dec
fs
jmp
xchg
mov
sahf
sub
add
js
xchg
adc
xlat
fabs
add
sub
mov
mov
xor
sbb
cmp
or
rcr
mov
mov
mov
out
aaa
fmull
es
cmp
pop
jle
pop
sahf
mov
xchg
fiadds
aam
dec
negl
aas
push
fdivs
in
jb,pt
fstp
es
lods
insb
jb
fcomps
pop
pushf
sti
sub
scas
fiadds
and
or
xchg
leave
xchg
sbbl
fcoml
imul
add
add
stc
cmpsl
pop
xchg
data16
dec
mov
fdivs
or
js
fisubrs
out
pop
sbb
and
jp
or
cli
push
jp
push
push
pop
mov
cmpsb
inc
add
add
stc
sbbb
pop
lock
xchg
jnp
pop
stos
nop
scas
sub
and
lret
xor
test
aas
out
add
js
movsb
fidivrs
push
xchg
sub
sbb
inc
loopne
pushf
cmp
cli
add
in
or
test
dec
lock
jp
out
mov
inc
jnp
repz
pop
adc
stos
jns
or
cmp
dec
xor
sti
iret
les
test
not
pop
fwait
jb
in
push
pop
mov
cmc
sbb
jo
sbb
pop
sub
es
xchg
aad
dec
add
mov
imul
sub
scas
sti
fwait
test
mov
insl
or
les
lret
pop
inc
mov
adc
sbb
inc
xor
pop
jle,pt
imul
mov
cltd
pop
or
movsb
pop
jle
jecxz
mov
or
lcall
hlt
mov
cltd
in
mov
mov
add
push
adc
add
add
add
je
xchg
loopne
dec
in
jmp
inc
in
jbe
psadbw
in
insb
mov
fidivs
push
mov
outsb
imul
mov
pop
shl
enter
push
sbbl
les
sub
mov
adc
loopne
sarb
cmpsl
mov
jecxz
addr16
inc
mov
cmc
lock
mov
or
adc
loope
fsubs
hlt
xchg
and
aam
aas
clc
ja
mov
dec
mov
aam
adc
shlb
cltd
outsl
into
push
mov
pop
dec
andb
lea
pop
push
or
add
add
pop
pop
lahf
iret
jmp
xchg
cmpsl
dec
cli
adc
outsb
xlat
and
loopne
mov
loop
shrl
gs
jb
push
cs
inc
ror
push
movsb
stc
aas
ds
inc
sbbl
push
add
scas
adc
push
lret
aaa
lods
mov
nop
lahf
repnz
imul
in
fwait
repz
inc
xchg
and
into
jbe
andl
inc
mov
std
mov
mov
add
stc
flds
inc
sub
insb
mov
movsl
xlat
push
movsl
adc
push
outsb
cs
xchg
rcrb
add
shll
mov
sub
test
jecxz
or
push
iret
adc
or
aad
pop
imul
cmpsl
jmp
sbb
jp
and
pop
cmpsb
cmp
dec
notb
jle
sahf
adc
std
or
mov
cmpsl
sbb
or
pop
ret
scas
andl
adc
jb
add
push
lods
mov
and
lcall
movsb
lock
sub
pop
add
sbb
and
jne
cmp
jle
psadbw
bound
fwait
out
repz
xchg
repnz
orl
sub
mov
xor
pushf
mov
cmpsl
ret
repnz
push
daa
sbb
add
aam
rorb
adc
pop
push
fwait
imul
pop
lcall
jle
inc
xchg
fwait
bound
fiaddl
ret
xor
cmpsl
jo
out
add
into
inc
popa
enter
cmpsl
cmp
add
add
loope
cld
lea
cmp
and
add
mov
and
push
lret
in
pop
push
and
jo
cmp
xor
mov
fs
push
add
aas
xchg
and
adc
push
stos
gs
mov
add
cmp
imul
int
push
repnz
lret
cwtl
mov
mov
pop
push
push
or
xchg
imul
in
dec
ja
rolb
push
aaa
enter
adc
subl
pop
jno
enter
ret
dec
cmpsb
mov
add
jne
xlat
call
test
aas
decb
std
js
and
nop
jne
mov
enter
or
fisttpll
mov
insb
rcrb
mov
std
mov
xor
mov
mov
rclb
lods
stos
btc
sbb
rcr
lds
cmp
dec
pop
push
loopne
cmp
cld
xor
jmp
fsubrp
mov
xchg
xchg
xor
or
mov
mov
pop
sub
add
int3
loop
mov
rol
add
sahf
es
jno
push
add
jo
outsl
mov
inc
lods
and
stc
cmp
das
mov
xchg
mov
dec
incb
inc
xor
mov
inc
jb
shll
inc
cs
and
test
xor
cmc
fdiv
dec
lods
jl
add
mov
loopne
cld
stos
fistps
inc
or
aaa
jmp
pop
mov
push
mov
pop
push
lock
fmul
adc
fistpl
pushf
add
jnp
dec
add
add
dec
cld
hlt
inc
sbb
xchg
or
add
insb
dec
pop
mov
dec
int3
nop
sbb
mov
cmp
cli
pop
pop
mov
out
xchg
sbb
push
out
movsl
sahf
les
mov
jl
mov
inc
fdivs
push
push
das
dec
aad
fcompl
jge,pt
sub
fwait
adc
lret
out
cltd
jp
sub
stos
leave
mov
cmp
pop
mov
fmuls
repz
int3
add
movsb
adc
ds
cld
ja
out
int
adc
or
insl
je
inc
sub
rolb
cmp
repz
jb
or
sub
dec
shll
mov
xor
test
inc
cltd
incb
std
test
lahf
xchg
sbb
add
call
push
or
int3
pusha
rcll
popf
push
adc
lcall
rcrb
inc
xchg
jl
into
add
clc
dec
je
xor
leave
sahf
or
sahf
es
lahf
and
mov
leave
mov
adc
pushf
cltd
lcall
jno
icebp
andl
or
or
pop
mov
sub
addr16
inc
leave
cwtl
les
inc
jp
aas
add
mov
in
dec
out
lea
inc
adc
mov
aad
jbe
push
xchg
ds
cmc
cmp
add
test
push
add
fs
movsb
sub
mov
jnp
dec
mov
das
cli
mov
and
xchg
ss
mov
mov
pop
fsts
repnz
jb
dec
insl
cmp
out
xchg
test
sbb
imul
aam
test
imul
jecxz,pt
push
cwtl
dec
pop
rcrb
insl
daa
iret
lret
jno
mov
es
gs
xchg
push
out
aam
fbstp
jne
adc
xchg
cld
pop
addr16
push
dec
mov
outsb
test
nop
xchg
fcmovnu
sbb
push
fisubrs
adc
hlt
mov
in
pop
outsb
mov
pop
cmp
mov
dec
call
fisubl
xchg
push
xchg
movsl
mov
push
stc
push
dec
cltd
out
jno
decb
je
ss
or
lret
mov
cld
dec
jno
add
xchg
popf
and
xchg
xor
cld
cmp
lds
and
push
pop
mov
sub
int
es
sub
lods
sbb
add
popf
scas
inc
insl
aam
push
sti
mov
popf
inc
inc
cltd
fwait
sub
add
cmc
dec
outsb
lods
arpl
sub
cli
mov
sahf
pop
adc
shrd
inc
cmp
inc
out
je
xor
negb
out
push
mov
fdivrp
inc
rolb
mov
subb
jl
lret
push
adc
std
xchg
pop
and
fldcw
aam
int
fbld
dec
xor
push
add
mov
es
cmp
xor
es
push
fildll
mov
sbb
adc
popa
dec
cmpl
das
mov
les
pop
sub
xor
dec
cmp
xor
shll
pop
xchg
jns
xor
pop
lock
xchg
fistl
mov
adc
inc
pop
xchg
cld
dec
or
sub
cmp
insb
inc
cmpsb
mov
iret
or
