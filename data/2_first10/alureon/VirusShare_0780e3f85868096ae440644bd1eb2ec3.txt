push
sub
sub
shrl
xor
add
push
xchg
pop
mov
add
push
xchg
pop
lea
add
push
xchg
pop
xor
add
push
xchg
pop
pop
ds
sub
ds
or
jmp
mov
jmp
push
ds
pop
ds
and
ds
push
ds
xor
ds
push
ds
add
ds
push
ds
push
jmp
sub
jmp
push
ds
decl
ds
inc
ds
inc
ds
add
ds
xor
ds
push
ds
call
ds
inc
ds
push
ds
mov
ds
xor
ds
mov
ds
mov
ds
pushw
ds
pop
ds
mov
ds
ss
ds
add
jmp
call
jmp
sub
ds
lea
ds
lea
ds
push
ds
push
ds
push
ds
push
ds
neg
ds
push
jmp
pop
jmp
xor
jmp
lea
jmp
push
ds
inc
ds
push
ds
mov
ds
add
ds
decb
ds
inc
jmp
seta
jmp
push
ds
mov
jmp
jne
jmp
push
ds
lea
ds
push
jmp
je
jmp
inc
ds
mov
jmp
mov
jmp
call
jmp
add
jmp
push
ds
push
ds
push
ds
push
ds
push
ds
call
ds
call
jmp
add
jmp
mov
jmp
dec
ds
push
ds
push
ds
call
ds
mov
ds
mov
ds
push
ds
subl
jmp
cs
jmp
mov
ds
pop
ds
push
ds
push
ds
push
ds
push
jmp
pop
jmp
xor
jmp
lea
jmp
lea
jmp
push
ds
call
ds
add
ds
mov
ds
add
push
lea
pop
pop
jmp
lea
jmp
pop
push
lea
pop
pop
jmp
xor
jmp
lea
push
lea
pop
inc
push
lea
pop
mov
push
lea
pop
xor
jmp
push
jmp
mov
push
lea
pop
sub
push
lea
pop
mov
push
lea
pop
mov
jmp
push
jmp
xor
push
lea
pop
lea
push
lea
pop
stos
push
lea
pop
inc
push
lea
pop
cmp
push
lea
pop
jb
push
lea
pop
pop
push
lea
pop
lea
push
lea
pop
cmpb
jmp
pop
jmp
mov
push
lea
pop
call
push
lea
pop
call
push
lea
pop
call
push
lea
pop
call
jmp
movl
jmp
call
push
lea
pop
call
push
lea
pop
int3
jmp
add
jmp
lea
push
lea
pop
lea
push
lea
pop
inc
push
lea
pop
sub
push
lea
pop
jb
push
lea
pop
lea
push
lea
pop
push
push
lea
pop
push
push
lea
pop
push
jmp
pop
jmp
mov
push
lea
pop
xor
push
lea
pop
lea
jmp
pop
jmp
push
jmp
movzbl
push
lea
pop
mov
push
lea
pop
movzbl
push
lea
pop
mov
jmp
add
jmp
add
push
lea
pop
cs
jmp
add
jmp
mov
push
lea
pop
cmp
push
lea
pop
jb
push
lea
pop
xor
push
lea
pop
mov
push
lea
pop
mov
jmp
mov
jmp
lea
push
lea
pop
sub
push
lea
pop
mov
push
lea
pop
mov
jmp
movl
jmp
dec
push
lea
pop
lea
push
lea
pop
jne
push
lea
pop
xor
jmp
add
jmp
pop
jmp
inc
jmp
mov
push
lea
pop
mov
push
lea
pop
test
push
lea
pop
jbe
push
lea
pop
inc
push
lea
pop
sub
push
lea
pop
mov
jmp
pushl
jmp
mov
push
lea
pop
add
push
lea
pop
xor
push
lea
pop
lea
push
lea
pop
mov
push
lea
pop
mov
push
lea
pop
push
push
lea
pop
lea
push
lea
pop
mov
jmp
pushl
jmp
movzbl
push
lea
pop
add
push
lea
pop
add
push
lea
pop
mov
push
lea
pop
shl
push
lea
pop
add
push
lea
pop
xor
push
lea
pop
inc
push
lea
pop
dec
jmp
lea
jmp
pop
jmp
push
jmp
pop
push
lea
pop
add
push
lea
pop
pop
jmp
xor
jmp
push
push
lea
pop
mov
push
lea
pop
ret
jmp
add
jmp
mov
push
lea
pop
pop
push
lea
pop
ret
push
lea
pop
mov
push
lea
pop
pushl
push
lea
pop
push
push
lea
pop
push
push
lea
pop
pop
push
lea
pop
pop
jmp
push
jmp
mov
push
lea
pop
add
push
lea
pop
cmp
push
lea
pop
je
push
lea
pop
inc
jmp
push
jmp
jmp
sbbl
lahf
cli
incl
and
call
addr16
incl
lea
pop
inc
push
lea
pop
mov
jmp
lea
jmp
inc
push
lea
pop
add
jmp
push
jmp
mov
push
lea
pop
lea
jmp
inc
jmp
mov
push
lea
pop
add
push
lea
pop
ret
add
add
mov
clc
sub
adc
test
fcoms
ret
sub
pop
lcall
pop
stos
popa
push
push
or
and
or
enter
pop
inc
mov
push
aas
das
clc
cmc
push
or
xorb
sbb
xor
xor
out
dec
out
and
hlt
mov
sarb
shrl
aad
and
gs
popf
cs
dec
clc
inc
pop
xor
sbb
dec
inc
sub
shl
jo
xadd
mov
out
adc
dec
mov
or
inc
mov
inc
jp
gs
cwtl
push
push
jp
inc
mov
ror
jl
or
int3
fisttps
pop
lods
push
daa
mov
les
and
fwait
mov
pop
and
clc
mov
push
cltd
iret
mov
lret
arpl
inc
push
in
dec
mov
adc
cli
dec
mov
add
jle
ja
cwtl
xchg
fs
enter
lret
add
jle
sbb
or
mov
or
jbe
loop
jnp
insb
jg
ljmp
mov
cmp
aas
sub
jle
xchg
or
adc
insb
pop
lcall
and
lcall
pushf
aaa
pop
test
sbb
popa
inc
sbb
sbbb
jne
pop
or
push
lods
adc
cmp
add
outsb
push
repz
or
and
js
fistps
add
imul
cmp
in
int
in
push
cwtl
push
xchg
inc
leave
jnp
mov
std
inc
mov
push
sahf
adc
aaa
xchg
bound
inc
cwtl
inc
test
inc
cmp
pushf
hlt
inc
inc
imul
iret
aam
movsb
mov
sub
mov
out
imull
ljmp
jle
loop
dec
or
cmpsl
jge
pop
adc
lea
mov
cmc
mov
and
popa
cmp
stos
dec
pushw
fisubl
je
push
cmp
test
loopne
repnz
cwtl
cs
inc
aad
decb
sahf
xchg
inc
aas
leave
mov
push
sarb
xchg
xchg
stc
arpl
inc
stos
mov
pop
cmovge
push
sbbb
add
push
jbe
mov
mov
or
jae
bound
add
sbb
dec
lock
fdivrp
mov
dec
stc
xchg
ljmp
pop
sahf
fstp
jecxz
sub
pop
cli
outsb
mov
fwait
pop
in
fucomp
lahf
jmp
jae
adc
rcr
pop
fdivr
cmp
nop
mov
and
sub
xchg
and
add
imul
pop
mov
mov
xor
xor
xchg
out
and
lret
xchg
adc
xor
inc
push
add
xor
jle
mov
into
mov
sub
sub
and
mov
jge
mov
push
outsl
push
xlat
ret
mov
mov
xchg
in
loope
ffree
loop
jbe
bound
aam
pop
adc
cli
bound
roll
adc
adc
pop
push
mov
clc
adc
mov
mov
sarl
push
clc
jne
and
orl
pop
lods
orl
mov
popf
popf
pop
add
dec
mov
enter
push
mov
push
xchg
rcrl
lods
and
arpl
cwtl
cmpsb
aam
add
faddl
mov
cmp
push
fdivrs
in
in
cmpb
loopne
and
pop
addr16
icebp
mov
test
or
sub
adc
mov
loope
sbb
cmp
or
sarb
arpl
jne
lcall
pop
xlat
movsl
gs
stos
je
dec
ret
dec
cmp
rcll
in
mov
out
xchg
or
push
pextrw
xchg
les
mov
fbstp
popa
dec
lea
push
lock
testb
mov
fs
sbb
cmc
push
cmp
sarl
push
mov
jecxz
push
repnz
loope
addr16
adc
out
ss
jg
bswap
cmp
push
lret
mov
sub
dec
mov
loopne
fistl
dec
and
xchg
fisttps
js
jne
cli
lods
adc
sarl
xlat
push
xchg
adc
adcl
mov
add
stos
mov
sub
mov
imul
pusha
lret
inc
inc
jecxz
sbb
sbb
lods
stos
in
jbe
mov
inc
sar
mov
add
sub
pcmpgtw
cmp
mov
aad
std
lods
mov
jg
mov
jne
dec
xchg
jge
iret
sub
jbe
inc
and
add
pop
mov
and
mov
in
xchg
cmpsb
inc
pop
adc
ret
imul
cmpsb
cmpsl
fwait
mov
popf
sub
imul
or
push
int
jb
and
outsl
sub
rcll
mov
inc
std
or
and
jecxz
int
cmp
sub
hlt
je
sub
adc
sbb
dec
mov
fimuls
imul
add
xorl
xor
mov
roll
lret
pop
inc
sub
xchg
pop
dec
sbb
xor
pop
jbe
push
jmp
push
or
pop
inc
pop
test
xchg
xor
cmp
mov
dec
movsl
scas
lret
add
dec
push
pop
bts
ja
scas
fadds
cwtl
jo
cmc
lcall
pop
lret
ljmp
or
add
jge
fcomps
leave
cmp
ds
pop
enter
mov
mov
aaa
gs
inc
adc
sub
mov
mov
ja
pop
mov
pushf
testb
or
or
fdivrs
xor
mov
out
iret
pop
shll
arpl
xor
or
call
ror
dec
cmpsl
mov
rcll
push
imul
xchg
add
mov
fsubs
add
aas
fiadds
mov
hlt
adc
xchg
jl
mov
lcall
add
imul
icebp
pop
stos
sub
cmpsl
cs
pop
cwtl
cli
cmp
rcll
inc
mov
xchg
frstor
dec
xor
cld
sub
inc
xchg
sti
sub
aam
icebp
fistl
fxch
xchg
add
mov
inc
xchg
cmpsl
or
or
scas
adc
xchg
fcmovb
rcrb
jl
push
loope
sub
sti
leave
jle
lcall
cmp
filds
das
add
loopne
jecxz
adc
dec
fistpll
jp
lret
jp
mov
jmp
add
shlb
insl
and
add
das
jge
sub
fs
sbb
inc
push
sub
xlat
imul
xlat
cs
aaa
and
cmp
test
subb
shll
movsb
or
jle
in
adc
mov
mov
mov
fmuls
pop
icebp
stos
jp
pop
sbb
push
sti
push
syscall
adc
insl
sub
add
nop
rorl
lret
inc
jae
test
jl
mov
out
lahf
or
rol
sbb
iret
jg
lret
cmp
cmc
lods
dec
cmp
loope
adc
cs
sti
gs
ljmp
jno
inc
xchg
stc
loope
sahf
mov
test
cmpl
inc
xor
mov
xchg
outsl
cli
sub
sub
and
dec
stos
fiadds
fnsave
cld
sahf
mov
sub
cmpsl
scas
push
xchg
mov
inc
jg
jnp
jl
sub
cmp
pop
sub
pop
pop
cmp
jae
dec
xorl
out
lods
mov
xor
sahf
jno
sub
jae
mov
shrl
ss
idivb
xor
pop
pop
mov
nopl
loopne
sub
mov
mov
inc
arpl
add
cmp
lahf
jno
push
inc
mov
dec
xor
in
faddl
cmpsl
pusha
nop
loopne
or
repz
rolb
fldenv
lock
mov
test
nop
test
idiv
fwait
jecxz
std
or
iret
inc
xor
rclb
out
sub
ret
xor
inc
andb
adc
xor
pop
mov
jbe
ss
or
jbe
sbb
mov
xor
imul
enter
orb
xchg
add
outsb
pusha
sub
gs
cmp
or
ss
xchg
stc
movl
outsl
aas
div
or
pop
shl
add
pop
das
mov
or
aad
push
shlb
mov
pop
pop
ficomps
xlat
sub
js
cmp
xor
adc
dec
xchg
aas
mov
xchg
imul
jle
lret
clc
or
jae
push
lret
pop
out
lds
inc
xchg
adc
push
js
push
push
icebp
push
sub
lods
inc
and
push
push
push
ret
adc
pop
aad
pop
jl
jo
daa
or
movsb
scas
jns
cmp
icebp
pop
pop
sbb
jno
inc
lret
cmpl
inc
int3
inc
and
jg
xchg
dec
pop
out
mov
pop
fs
inc
pop
out
dec
int
neg
scas
pop
mov
lods
cs
cs
add
mov
xchg
scas
mov
jmp
popf
jmp
lea
and
mov
jl
arpl
inc
push
jno
jle
mov
or
and
aam
sub
jbe
bnd
push
cmp
push
and
mov
mov
stos
push
fiaddl
loopne
testw
inc
cmc
sbb
cmp
mov
pop
push
mov
pop
and
jge
push
insl
mov
cmp
mov
or
push
sarl
das
mov
loopne
insl
dec
addr16
sub
pop
testl
cld
fnsave
push
dec
fwait
dec
add
push
aad
insl
xor
loop
dec
or
gs
push
fimuls
mov
or
popf
pop
nop
mov
cmovl
add
or
add
and
push
lock
arpl
cld
inc
pop
jae
incb
movsl
shlb
dec
mov
jb
test
dec
dec
xchg
mov
lods
lret
mov
ss
subl
sbb
cmp
les
in
cmc
inc
lahf
and
pop
pop
push
pushf
xor
dec
adc
pop
or
xchg
jp
test
imul
lcall
fcoms
push
add
inc
inc
jmp
push
sar
pop
push
test
lcall
mov
jl
test
push
sub
jnp
aad
push
adc
push
shl
nop
test
cmpsl
cmp
jg
adc
xor
mov
push
mov
gs
adc
int3
pop
dec
in
adcb
cwtl
sbb
push
repnz
mov
or
xchg
jbe
dec
jp
or
sarb
mov
arpl
into
cmc
xchg
mov
mov
cmpl
cmc
lret
lret
jecxz
mov
push
or
xchg
pop
cmp
sub
jnp
fimuls
mov
and
fsubrp
fldl2e
nop
loopne
or
test
cmp
lock
jo
sub
hlt
push
gs
in
iret
test
jne
pop
out
inc
js
sub
add
ss
repnz
leave
mov
sbb
cmpsl
xchg
pop
adc
pusha
test
lds
imul
sti
jno
adc
sub
ds
stos
fwait
cld
xor
xchg
sbb
and
mul
mov
in
jnp
hlt
mov
sub
jb
push
push
jg
movsl
insb
ss
xlat
lea
mov
call
mov
sahf
cwtl
pop
test
ds
push
cltd
sarl
cmpsb
jbe
adcl
push
cmpsl
sbb
push
rol
push
hlt
and
cmpsb
hlt
pop
pusha
sbbl
dec
add
shll
mov
scas
fwait
lret
mov
mov
mov
fs
mov
movsb
jp
cmp
jns
or
sub
jl
push
sub
add
lock
sbb
inc
lock
inc
xchg
sub
jge
xchg
dec
decb
lcall
out
scas
sub
fistps
adc
cmc
sbb
push
mov
cmpsb
fcmovu
sahf
dec
shrl
mov
jb
xchg
ret
lahf
sub
icebp
scas
je
and
fidivs
lahf
mov
cmpsb
push
lods
aaa
jne
lcall
call
insb
xchg
mov
stc
xchg
pop
cmc
scas
dec
notl
popa
pop
adc
jbe
mov
push
xchg
pop
aaa
push
int3
nop
xchg
clc
imul
jno
scas
xchg
sarl
pop
roll
fs
inc
pushf
lea
cld
mov
fwait
add
mov
push
ljmp
add
dec
arpl
push
dec
mov
rcr
xorb
and
aad
xchg
xchg
and
push
jne
cmp
cmc
nop
push
cmp
add
or
jo
lret
test
pushf
xor
jecxz
ja
lock
inc
cmp
leave
sbb
inc
and
mov
sub
cltd
into
std
push
test
jb
adc
outsl
imul
jmp
rclb
insl
int
mov
repnz
sub
push
or
sub
imul
cmp
sbb
ret
notl
pushf
pop
or
mov
int
in
das
mov
push
jbe
dec
fimull
mov
ljmp
jnp
jg
pop
adc
xor
cmpb
and
adc
inc
js
jnp
dec
and
dec
cld
xor
pop
xchg
lret
fcoml
orl
pop
aad
fiadds
mov
fbstp
pop
dec
pop
or
out
cs
sub
es
push
outsb
adcb
pop
mov
out
jle
fisubrl
adc
or
lea
jecxz
sahf
pop
cmp
aas
out
ss
loopne
neg
dec
inc
sbb
mov
push
sbb
jbe
rcl
movsl
jb
imul
pop
cmp
mov
imul
loope
pop
mov
mov
mov
xchg
pop
aas
and
ja
scas
out
xchg
test
fimuls
cli
movsb
mov
arpl
ljmp
cmc
xor
mov
adc
sarb
lahf
imul
xchg
jecxz
and
inc
cmp
cmp
scas
scas
jle
movsl
sbb
ret
scas
inc
push
sbb
push
push
and
add
pop
divl
xorw
push
lock
hlt
dec
inc
arpl
mov
shl
dec
push
push
clc
mov
in
lds
push
push
dec
push
push
adc
sub
pop
inc
dec
xlat
sbbl
in
push
test
fidivrs
out
stos
rolb
cltd
mov
lds
arpl
into
jns
lret
mov
xorb
test
insb
add
sbb
jle
push
in
cs
dec
imul
or
insb
lcall
scas
fsts
incb
xchg
dec
movsl
and
sbb
ds
mov
cmp
mov
inc
arpl
mov
or
movsl
mov
inc
and
sbb
push
adc
lret
xchg
in
sub
pop
jmp
or
gs
bound
addl
gs
inc
arpl
pop
xchg
xor
push
adc
je
sbb
sbb
rcl
pusha
fwait
mov
lods
xchg
mov
cmpsl
pop
add
daa
add
xchg
inc
out
addr16
push
fcoml
test
push
ja
cmp
sbb
adc
sbbb
and
ret
fcoml
shlb
pop
mov
xlat
sbb
pop
sub
cmp
dec
mov
inc
mov
mov
adc
adc
test
lock
mov
iret
add
insl
mov
sbb
sahf
orb
add
popf
and
pop
in
pusha
divb
jno
js
andb
outsb
sbb
or
pop
push
dec
and
xchg
mov
push
dec
fwait
test
lea
push
enter
and
ret
xor
test
pop
cmc
push
in
dec
shll
insb
in
adc
xor
hlt
xchg
mov
jbe
and
cli
fstpl
aaa
test
fstp
jb
and
ss
fprem1
jns
nop
test
sbb
test
push
notl
enter
roll
stos
in
cmp
stc
shl
push
cli
xchg
cmp
loop
pop
adc
add
dec
loopne
sbb
jne
xchg
in
mov
mov
xor
ss
xchg
push
mov
shll
into
dec
addr16
pop
in
std
ja
or
mov
xor
cmp
add
fs
cmp
jmp
mov
pop
daa
add
scas
mov
out
sub
pusha
add
and
rclb
pop
insl
leave
xchg
mov
aas
call
adc
xor
out
xor
gs
jnp
fmull
fs
movsb
ljmp
cmp
shlb
addr16
xchg
sarl
imul
xchg
lret
les
mov
mov
mov
shll
xchg
in
lods
or
int3
sbb
cli
sahf
xor
mov
cmp
jp
xor
in
cmc
sbbb
sbb
pand
mov
fwait
adc
pop
inc
ljmp
add
pop
loop
lods
stos
aaa
or
mov
repnz
das
shrb
xchg
fcmovnu
mov
out
pop
add
out
pop
pushf
cs
jle
pop
dec
loopne
adc
aas
fs
mov
mov
jo
fiaddl
pop
xor
push
lock
sub
xor
stos
mov
stos
pop
jl
out
jecxz
or
jecxz
jne
mov
fsubrp
mov
inc
ret
mov
mov
add
add
push
mov
insb
add
repnz
push
jmp
adc
insb
sbb
xchg
ss
inc
mov
repz
jle
adc
fldenv
popf
pop
mov
loop
sbb
rorl
je
andl
lahf
mov
fsubrl
cwtl
push
and
lahf
xor
movsl
xchg
adc
dec
xchg
popf
aam
roll
rorl
iret
adc
cmp
push
push
add
mov
pop
add
test
or
stos
repz
gs
sti
mov
and
arpl
xchg
adc
pop
pop
and
jne
jmp
jnp
scas
inc
xor
push
pop
or
inc
popa
sbb
es
add
daa
push
inc
cmp
icebp
fwait
js
mov
xchg
xchg
popa
xchg
ja
push
push
mov
inc
adc
hlt
lds
push
daa
push
jle
pusha
sbb
push
sbb
dec
js
out
das
daa
pop
pop
filds
add
rcll
inc
cmpsl
stos
xor
sti
jl
rcll
fimull
ficoml
mov
jns
aam
fwait
jnp
mov
mov
leave
sub
movsb
cltd
js
sub
add
ljmp
imul
lods
imul
enter
ret
inc
daa
or
xor
movb
pop
mov
and
sbb
mov
test
lret
jns
out
out
push
cltd
ds
pop
mov
out
insl
sub
and
mov
sub
ror
cmp
shl
int
add
in
xchg
cmp
mov
leave
cwtl
cltd
mov
pop
push
xlat
pop
movsb
xor
pop
or
lods
mov
adc
jle
dec
dec
addr16
popa
addl
fwait
xor
and
ret
stos
sbb
xor
loop
inc
sbb
ret
js
push
push
lods
mov
mov
inc
mov
cmp
in
and
cmp
aas
inc
lods
cltd
jmp
les
mov
mov
add
out
repz
incb
addl
nop
ret
xchg
clc
orl
mov
push
adc
test
in
jle
and
es
ficoml
scas
inc
dec
arpl
fstpt
push
negb
test
outsb
fcoml
cmp
xor
jo
iretw
jp
fimuls
dec
in
add
call
dec
sbb
nop
fisttpl
filds
and
sahf
ja
bound
and
roll
add
cld
sbb
cld
add
out
mov
mov
xchg
xchg
ds
gs
lock
test
inc
xchg
mov
add
test
and
icebp
jne
test
sub
push
xchg
jbe
or
add
cmp
and
jns
sbb
flds
xlat
cli
sahf
out
jmp
fidivl
cmpsb
push
jge
ljmp
and
hlt
xchg
orb
sbb
fidivrs
into
mov
aaa
popf
add
mov
cmpl
rcrb
ss
jge
int3
fildll
add
mov
out
xor
inc
pop
adc
push
cmp
inc
ljmp
inc
mov
and
xor
jl
out
aad
cwtl
xchg
jmp
jmp
dec
call
or
aas
xchg
add
in
rclb
int
ljmp
rolb
int
xor
sbb
mov
mov
shl
jae
xchg
dec
adcb
pop
in
je
rclb
shlb
or
xor
out
movsb
cmp
mov
and
inc
sbb
fmuls
or
outsb
push
sahf
mov
adc
lods
push
dec
xor
dec
cmpsl
push
sbb
out
fdivrs
jmp
addr16
imul
int
outsb
lods
rol
in
in
push
xor
pop
bound
out
fsts
ja
push
mov
lea
sub
sbb
push
cs
and
inc
leave
adc
loope
repz
clc
sbb
pop
data16
mov
sahf
dec
sbb
lret
test
repnz
lret
push
jnp
in
mov
dec
daa
cmc
mov
push
lret
call
push
adc
sti
mov
leave
and
mov
pushf
ja
and
cwtl
push
loopne,pn
mov
lds
fstps
dec
jbe
popf
sbb
mov
es
loope
into
pop
adc
xor
xchg
or
inc
push
cmp
and
dec
rcrl
jecxz
loopne
sub
fldcw
lcall
out
inc
xchg
xlat
scas
xchg
or
mov
loop
push
out
push
push
insb
insl
les
pop
jl
add
push
cmp
lea
loop
dec
xor
jns
inc
push
sbb
and
mov
push
stc
lahf
xchg
fs
mov
out
sub
jbe
jb
xchg
mov
dec
jne
pop
iret
in
xchg
xlat
adc
aam
cmp
jo
add
out
adc
inc
xor
push
scas
xor
pop
fcomps
push
mov
xor
lea
test
cmp
jne
sub
inc
shll
pop
cmp
mov
gs
mov
inc
imul
addl
push
sarb
dec
daa
iret
sub
test
shrl
jne
dec
push
je
fisubrs
add
or
sbb
jg
xlat
out
or
mov
outsb
loopne
add
cmp
call
sti
push
in
or
xchg
ja
js
push
out
sarb
sbb
xor
push
adc
pusha
outsb
mov
push
rclb
dec
adc
movsb
loopne
dec
mov
ficoms
rcll
cli
jne
loope
lret
push
inc
mov
inc
mov
cmpsb
and
int
jle
out
adc
dec
jp
mov
cmp
adc
jbe
popa
mov
std
outsb
cmp
adc
repnz
lods
dec
shll
stos
fwait
xor
mov
mov
lock
lods
xchg
subb
cld
mov
mov
xchg
in
mov
ds
lds
inc
in
push
iret
leave
test
lds
stos
mov
dec
das
mov
fistl
sub
push
sub
fldenv
cmpsb
and
int3
pop
lods
out
iret
cli
xchg
push
int3
out
push
in
fs
popa
ljmp
fistpl
cmp
iret
clc
sub
dec
cmp
pop
bound
xchg
lea
cmc
push
dec
shl
repnz
push
cmp
sub
mov
fldl
push
jle
xorl
xor
jg
adc
enter
repz
xchg
out
dec
mov
adc
cli
lret
dec
jmp
jl
sub
cltd
pop
mov
movsb
sbb
call
sbbb
pop
mov
negl
popa
inc
mov
std
push
xchg
mov
xchg
adc
or
mov
mov
mov
mov
fucomp
adc
testl
push
pop
fcoms
xchg
mov
int
inc
daa
pop
pop
or
and
and
mov
mov
sbb
sbb
inc
pop
mov
or
std
pop
xor
pop
cmp
jl
push
ret
or
lods
enter
xchg
mov
xchg
in
jecxz
fcmove
push
je
cmp
cli
in
pop
lods
push
aaa
rorl
outsb
sbb
scas
or
das
xor
mov
or
ja
out
xchg
and
push
mov
jae
cltd
mov
pop
stos
xchg
adc
inc
pop
adc
adc
push
fisttps
sub
sti
mov
fwait
loop
jne
sahf
mov
cmc
xor
ret
mov
idivl
mov
mov
notb
lods
in
mov
inc
bound
insb
pop
inc
inc
xor
stos
outsl
push
insb
push
inc
scas
fiadds
jno
cwtl
lds
inc
adc
lret
sub
mov
jbe
dec
mov
shlb
adc
push
or
mov
cli
mov
xor
cltd
std
hlt
and
lods
out
xchg
orb
xchg
sbb
xor
jle
sub
mov
insb
cmp
insb
and
mov
outsb
movsl
lahf
dec
int
stos
mov
dec
mov
dec
add
mov
mov
mov
insl
test
xor
sub
pop
clc
xchg
aad
jp
xchg
and
jns
test
cmpsl
mov
or
cmp
mov
pusha
fs
pusha
cli
mov
jae
mov
or
xchg
mov
fldcw
xchg
mov
jns,pt
enter
xor
mov
test
js
dec
adc
push
shll
aam
dec
or
cwtl
inc
inc
push
xor
aas
shrb
nop
xor
sub
push
sbb
in
inc
ljmp
inc
mov
push
stos
mov
mov
xor
cmp
loope
sub
jno
adc
cs
ljmp
jg
push
sub
mov
xchg
sub
inc
dec
inc
popa
arpl
pop
pop
repnz
lods
xor
sub
loope
and
inc
and
sarb
sbb
adc
mov
add
mov
add
cmp
sub
leave
mov
jge
and
add
and
jp
int
mov
scas
out
xor
adc
push
aaa
aaa
push
xchg
popf
daa
and
scas
movsb
jmp
push
jl
in
jle
xor
movsl
sub
pushf
dec
adc
or
adc
mov
dec
dec
jbe
stos
jl
sub
add
or
sub
or
pushf
mov
jp
push
cmpl
ss
add
movsl
cld
in
push
pop
clc
xchg
cs
xor
outsl
sbb
rclb
std
imul
stos
nop
sbb
std
js
or
cltd
or
lods
jg
lods
popf
adc
test
xor
inc
cmp
lock
icebp
xchg
orl
jg
add
fiaddl
inc
dec
scas
mov
cmp
jae
mov
stos
subb
sahf
mov
push
jge
mov
call
fnstsw
jecxz
movsl
into
cmp
call
xchg
or
insl
stc
loop
or
jle
je
div
push
mov
adc
xor
loopne
and
jmp
fdivs
rorl
test
push
fimull
mov
sub
xchg
adc
or
mov
lcall
je
mov
mov
fidivrs
pop
insl
or
int
sub
mov
add
dec
jbe
test
xor
les
or
cmpb
add
dec
pop
sub
iret
mov
stos
ret
jge
sti
inc
mov
insl
scas
ljmp
andl
mov
or
andl
mov
loop
push
testl
inc
pop
xlat
call
adc
push
add
xchg
sub
push
ljmp
or
mov
inc
push
mov
adc
xor
repz
add
cmpsb
dec
adc
data16
sub
cmpsb
pop
jg
pop
or
inc
iret
mov
push
les
push
xor
stos
fimuls
shll
scas
out
or
test
data16
outsl
sti
imul
sahf
nop
aaa
mov
xor
pop
shrl
inc
sbb
mov
outsb
in
in
fwait
dec
gs
lret
fcmovne
cmp
fdiv
pop
inc
cwtl
call
mov
icebp
ss
push
mov
in
xchg
test
dec
in
pop
sub
in
mov
push
andb
jo
loopne
enter
in
or
dec
ret
mov
arpl
adc
jne
ds
jp
xorb
dec
gs
gs
push
bound
adc
jle
sub
pop
pop
cmp
retw
movq
nop
stos
xor
xchg
mov
xchg
fistpll
test
pop
das
les
scas
ja
mov
sub
jno
movsl
dec
int
jl
inc
es
mov
xchg
arpl
mov
dec
mov
xor
mov
ret
mov
ret
shrb
call
ja
cmp
jb
enter
imul
lahf
fadds
jp
popf
cltd
ds
mov
jecxz
sbb
or
xorl
inc
xchg
sub
sbb
dec
test
frstor
mov
push
jmp
mov
push
cmpsl
mov
rcrb
into
testl
das
arpl
out
xorb
enter
imul
fisubrs
xor
push
mov
adc
xchg
sub
in
mov
xchg
xor
movsl
in
xor
ljmp
std
and
cmpsl
outsb
fsts
lds
aad
test
insb
test
jne
mov
cltd
into
mov
jne
rorb
cmpsl
imul
jbe
mov
push
scas
jno
inc
inc
jno
jno
pop
dec
pusha
enter
scas
mov
lock
call
call
aas
dec
aad
pop
mov
jmp
sub
add
pushf
sub
imul
xlat
mov
pop
push
scas
les
movsb
das
jp
hlt
adc
mov
nop
xchg
dec
fsubrs
scas
lods
add
dec
sub
xchg
or
jl
mov
and
dec
adc
leave
faddp
mov
add
mov
les
push
sub
cmpsl
jb
mov
hlt
mov
push
mov
aaa
mov
mov
jmp
adcl
dec
jp
lock
cs
push
sbb
out
pop
sub
mov
dec
xor
and
mov
rcrl
ss
cmpsl
sbb
mov
rorb
push
jb
lea
mov
xor
mov
xor
mov
mov
ja
mov
lods
or
in
and
inc
test
adc
fistps
mov
movsb
mov
and
and
push
sahf
jmp
xlat
xchg
and
cmc
aam
cbtw
inc
add
mov
xor
and
outsl
mov
loop
push
sbb
xor
or
into
sbb
movsl
mov
ds
jbe
jno
inc
fs
mul
out
mov
fmuls
stos
test
sarl
add
shrb
mov
out
inc
xchg
mov
les
cmpsl
push
push
in
mov
push
iret
pop
nop
or
test
int3
mov
and
popa
rcrb
jns,pt
push
hlt
mov
dec
mov
mov
pusha
test
jb
popa
mov
cmp
pushf
std
adc
orl
divl
xor
jp
and
lcall
scas
sbbb
rorb
ljmp
push
leave
or
andl
movsb
dec
xchg
mov
fsubp
pop
and
cmc
mov
push
ljmp
std
int3
push
mov
inc
out
gs
jno
out
or
rcrl
out
cmc
call
mov
subb
inc
aam
lods
dec
push
test
ficoml
mov
adc
xchg
arpl
xor
aad
mov
in
pop
stos
subb
