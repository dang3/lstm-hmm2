add
xchg
mov
mov
mov
xor
mov
decl
jne
mov
lea
adc
lea
neg
jmp
lea
xor
mov
not
xor
mov
mov
neg
mov
neg
xor
mov
rol
lea
jmp
mov
ror
lea
xor
adc
mov
mov
lea
shr
mov
mov
mov
mov
jmp
lea
lea
xor
mov
xchg
pushl
jmp
push
mov
sub
push
push
push
mov
lea
ror
push
not
xor
shl
shr
mov
neg
mov
mov
mov
lea
shr
ret
rcl
mov
rcr
xor
mov
not
jmp
xor
xor
xor
xor
push
shr
shr
ror
not
mov
mov
xchg
xor
xchg
adc
jmp
shr
mov
adc
neg
not
xor
not
jmp
xor
mov
xor
pop
xor
not
xor
mov
mov
xor
lea
mov
xchg
mov
shr
jmp
mov
add
popl
xor
adc
shr
add
lea
xor
not
jmp
xor
xor
mov
not
adc
rcr
lea
lea
mov
xor
xchg
jmp
mov
mov
lea
neg
neg
mov
lea
jmp
mov
mov
lea
and
shr
pushl
jmp
lea
neg
adc
add
xor
mov
jmp
neg
mov
neg
mov
adc
rol
lea
mov
rol
not
not
mov
jmp
not
neg
lea
ror
mov
xor
lea
rcl
add
mov
lea
xor
rcr
mov
lea
jmp
shr
xor
xor
mov
mov
lea
mov
jmp
not
xor
add
mov
not
mov
jmp
shrl
lea
shr
shr
mov
lea
xor
neg
not
mov
xor
shr
xchg
xor
jmp
neg
mov
mov
movl
add
and
shr
lea
mov
jmp
lea
xor
and
xchg
push
call
mov
xor
xor
mov
and
xor
jmp
rcr
add
rol
adc
rcl
adc
xor
adc
shr
neg
not
lea
mov
xchg
jmp
push
neg
shl
adc
push
jmp
shr
adc
neg
xor
adc
neg
xor
add
and
jmp
mov
neg
xchg
mov
lea
xor
jmp
shr
not
rcr
jmp
adc
mov
lea
lea
neg
jmp
rcl
shr
adc
lea
and
xor
jmp
neg
xchg
xor
mov
not
lea
shr
neg
mov
rcl
mov
and
xchg
jmp
neg
lea
neg
neg
xor
jmp
lea
lea
mov
jmp
adc
lea
rcl
xor
and
xchg
and
xor
lea
adc
mov
add
jmp
shr
mov
shr
mov
mov
push
lea
xor
lea
not
xor
rol
rcr
jmp
not
rcr
xor
mov
call
jmp
rcr
add
test
insb
jnp
popl
popl
adc
insl
mov
jecxz
inc
sbb
or
push
add
push
or
mov
cli
mov
js
icebp
movsb
int
dec
jb
js
imul
negl
pop
loope
jno
sub
insl
push
jge
out
dec
fwait
mov
inc
mov
mov
test
fisttpll
dec
pslld
lock
test
das
and
xchg
orb
mov
test
movsb
repz
jge
and
in
sub
cli
inc
fdivr
fs
mov
icebp
out
repnz
call
stos
cmp
rol
xchg
jno
ret
lcall
cmp
hlt
orl
cmp
cmpsb
jge
sub
in
or
jnp
jge
rcll
push
mov
xor
mov
lods
or
mov
pop
sbb
mov
cli
mov
dec
or
pop
inc
fimull
mov
dec
jl
or
mov
jnp
in
mov
adc
or
pop
orb
sbb
nop
les
or
inc
ret
sbb
in
xor
cli
jl
and
push
dec
xchg
jo
rol
jae
and
add
adc
rcrl
rcl
xchg
adc
xorb
in
les
jne
testl
nop
les
sbbl
ja
data16
loope
sbb
add
sar
jae
loop
nop
les
add
inc
ret
std
or
inc
ret
and
add
mov
test
data16
add
fwait
sbb
ljmp
sub
sub
cmp
fwait
sub
aaa
outsl
mov
inc
sub
xchg
sbb
hlt
inc
cmp
cs
sbb
hlt
inc
dec
push
jg
adc
mov
dec
xchg
sbb
loope
jg
aaa
sub
xchg
loope,pn
notl
sbb
sbb
aam
movsb
push
or
jmp
jge
cmp
xchg
fsubrp
hlt
adc
adcl
sbb
cmpsb
dec
xchg
mov
iret
push
outsb
mov
adc
hlt
inc
jp
pop
and
and
dec
sbb
hlt
leave
imul
add
imul
fs
push
lds
lahf
and
addl
mov
xchg
cmp
jecxz
jmp
mov
mov
xchg
mov
test
sahf
add
pop
jecxz
inc
mov
aaa
out
sbb
in
or
pop
and
mov
adc
sbb
adc
cld
loope
add
push
mov
add
mov
dec
hlt
fisttpll
mov
cmp
sbb
mov
xor
push
je
movl
inc
sbb
add
or
pop
das
and
sbb
hlt
aaa
aas
push
testb
jecxz
push
fcoml
pop
nop
hlt
scas
hlt
inc
sbb
aas
xor
mov
sbb
pop
insb
mov
sbb
push
lock
test
jmp
lods
xor
hlt
inc
and
mov
inc
loopne
xchg
sbb
rcll
push
push
sbb
insl
notb
pop
icebp
xchg
sub
mov
jecxz
or
out
and
cmp
lret
jge
cmp
xchg
fsubrp
hlt
adc
cmpl
hlt
mov
sbb
lds
scas
xor
stos
pop
mov
cmpsb
cld
lods
sbb
hlt
inc
popf
iret
rclb
pop
mov
lock
sbb
jg
add
sbb
inc
sbb
sahf
inc
je
stc
mov
sbb
add
outsb
inc
adc
mov
jg
in
sub
adc
lahf
jns
add
sbb
leave
scas
jmp
inc
das
add
xor
mov
add
movsl
testb
aaa
add
mov
xor
sbb
int
pop
incl
jecxz
mov
loop
or
nop
in
add
in
jno
push
jecxz
adc
or
jecxz
iret
imul
inc
adc
inc
sbb
jg
adc
mov
sbb
push
iret
and
inc
popa
pop
divl
adc
jg
or
mov
cs
sahf
add
xchg
movsb
mov
jae
in
es
mov
add
shl
mov
mov
push
enter
repnz
stos
nop
loopne
push
push
clc
iret
push
jmp
pop
and
testl
adc
push
repz
adc
push
pop
xchg
add
jmp
loopne
mov
cmp
add
or
sbb
pop
and
jecxz
sbb
xchg
adc
cld
adc
ret
inc
mov
imul
xor
mov
addr16
pop
adc
divl
adc
mov
xor
add
dec
mov
xchg
icebp
inc
pop
jmp
add
mov
sub
cld
mov
jecxz
pop
scas
ret
pusha
aaa
push
testl
dec
pop
mov
adcb
dec
daa
or
xchg
pop
push
inc
sbb
hlt
xor
push
push
inc
sbb
jg
pop
sahf
cld
iret
push
out
lods
adc
sbb
and
xchg
cld
popa
jecxz
hlt
inc
sbb
push
push
inc
sbb
test
daa
adc
inc
sbb
pop
sbb
jecxz
xor
mov
test
mov
add
rolb
mov
sbb
cli
iret
in
jge
js
fadds
jg
adc
testb
iret
sub
test
hlt
inc
imul
add
or
test
testl
jbe
or
adc
and
testl
hlt
inc
xchg
mov
jg
add
mov
xor
push
xorl
add
inc
jge
movl
sbb
loopne
or
and
fs
test
inc
adc
and
pop
and
adc
call
inc
test
cmp
loop
test
mov
sub
outsb
mov
daa
pop
jmp
push
sub
sbb
cmpsl
inc
jno
nop
and
out
jge
cmp
cmpb
dec
out
push
sub
in
mov
or
cmp
cmp
sub
nop
mov
adc
lret
mov
jnp
test
cs
pop
cld
dec
or
test
cmp
adc
loope
inc
sub
stc
push
or
cld
in
arpl
mov
sbb
dec
cmc
pop
dec
int
jge
fwait
xor
xor
sbb
js
andb
jmp
and
arpl
sar
jb
std
mov
stos
inc
mov
lea
xchg
loopne
pop
xor
int
hlt
test
iret
test
push
mov
movsb
fnstsw
std
xchg
hlt
aam
adc
scas
push
icebp
mov
rclb
jne
cld
loop
cmp
fnsave
out
fisttpl
iret
push
jmp
repnz
repnz
daa
xor
rorb
adc
pop
dec
cmp
fsubs
and
pop
dec
mov
push
add
mov
pop
push
or
nop
fidivrl
dec
inc
sbb
jo
std
in
sbb
nop
or
or
mov
popa
testl
add
outsl
jge
adc
stos
and
aaa
dec
add
adc
sub
roll
inc
xchg
in
sub
pusha
xor
imul
xchg
add
fsubrs
int
loopne
xor
mov
fs
mov
and
mov
pop
pop
das
in
mov
aam
sub
add
stos
ja
aas
in
test
dec
in
pushf
sbb
cltd
lret
pusha
push
or
out
mov
jne
dec
bound
inc
cmp
push
int3
outsb
push
in
ja
and
add
mov
mov
pop
cmp
ret
fwait
or
ret
jno
xor
andb
lods
outsl
aam
add
repz
xor
arpl
jnp
int3
jne
pop
fdivs
ss
sbb
mov
push
cld
push
push
jecxz
adc
mov
or
mov
adc
pushf
mov
hlt
sbb
and
jmp
repnz
xor
mov
xchg
mov
push
loope
mov
nop
push
in
or
aam
cld
addb
dec
mov
cmp
adc
ror
lods
and
jno
push
out
loope
sbb
aad
dec
pusha
rolb
xor
fcoml
cmpsl
fs
mov
insb
adc
outsb
mov
repz
into
jecxz
mov
hlt
push
cs
dec
and
and
addr16
push
push
mov
pop
icebp
mov
cs
and
xor
add
mov
data16
sbb
leave
inc
ficomps
loope
adc
xor
hlt
and
jo
dec
rorb
dec
push
push
test
pop
xor
jle
aam
fsubrl
adc
out
sbb
inc
ds
out
je
sbb
mov
add
adc
xchg
xlat
lea
out
push
or
cmp
push
sbb
rclb
or
fcom
mov
push
dec
mov
dec
mov
scas
mov
dec
pop
xchg
or
mov
xchg
imul
mov
mov
push
in
filds
sbb
cmp
pop
or
les
xor
xchg
inc
jg
sahf
push
clc
mov
movsl
ss
jl
pop
push
sbb
mov
leave
ss
sbb
rcrl
bound
sbb
push
call
jo
adc
or
add
rclb
xchg
mov
add
and
and
es
xor
mov
cmpxchg
inc
popf
push
mov
jg
sbb
sbb
sbb
fcoms
je
and
int
pop
in
jno
js
in
mov
std
fmuls
cmp
mov
data16
rcrb
push
mov
mov
mov
xchg
adc
jno
out
adc
adc
dec
inc
in
jp
jo
shlb
jo
and
test
or
out
repnz
xchg
lds
mov
pushf
pop
cmp
sbb
ret
and
into
shrb
pushf
cmp
subl
loopne
aad
loop
in
scas
sbb
sub
mov
loop
mov
orb
popf
out
ljmp
fidivl
mov
lds
lock
and
pop
test
add
sub
dec
push
jmp
inc
lds
push
dec
mov
je
pop
shl
sbb
sti
repz
idivl
adc
in
push
in
pop
cltd
sub
adc
fisubl
mov
out
mov
imul
clc
jae
idivb
dec
adc
fs
pop
inc
mov
push
push
mov
push
sti
add
out
nop
inc
bnd
dec
nop
outsb
ja
out
mov
repnz
lahf
jb
cwtl
cwtl
jae
xchg
divb
xchg
sbb
dec
ljmp
and
mov
rcll
xchg
mov
xor
mov
sarb
xchg
xchg
mov
inc
sahf
je
adc
out
jmp
push
sbb
push
xchg
loop
push
pop
sti
xorl
in
lret
je
or
lock
outsb
mov
setne
jnp
loopne
xchg
fs
and
in
shll
shll
daa
std
adcb
dec
dec
pop
in
faddl
stos
addr16
push
mov
out
xlat
out
lcall
mov
push
sub
sbb
or
dec
aas
dec
sub
inc
mov
fisubrs
fisubrl
jl
negl
out
stos
adc
mov
xchg
cmpsl
ja
jg
sbb
adc
popa
or
adc
jae
pop
dec
scas
cld
enter
jae
ljmp
cmp
dec
rclb
pusha
leave
push
xchg
ret
and
int
mulb
dec
pushf
scas
dec
mov
sub
or
xchg
mov
pop
popa
in
cmpb
loopne
xchg
sbb
sub
popa
scas
loop
data16
sbb
mov
stos
sarb
mov
sbb
inc
or
pusha
dec
sub
icebp
test
sbb
imulb
sub
nop
iret
sbb
lcall
adc
jge
jmp
repz
jbe
inc
cmp
cli
outsb
cwtl
pusha
test
push
mov
test
inc
pop
or
mov
jae
jns
dec
or
into
or
int3
rcll
lret
int3
push
mov
add
cmp
shrl
repnz
jmp
and
ret
sub
and
dec
pop
jbe
mov
je
push
cmp
pop
daa
mov
push
loop
dec
dec
push
xchg
jbe
mov
bound
loop
dec
fbstp
xor
mov
dec
in
sub
mov
jo
in
outsl
push
jg
sbb
pop
je
ljmp
je
in
mov
push
dec
mov
add
or
pop
fsub
mov
mov
fst
sahf
sbb
sarb
shlb
dec
push
test
rorl
bound
adc
push
loop
fiadds
pushf
dec
dec
pop
push
pop
mov
pop
mov
hlt
in
test
aaa
pop
xorb
cmp
hlt
nop
and
insl
xor
jns
pop
fsubl
pop
push
in
leave
repnz
out
iret
pop
or
mov
mov
jmp
mov
push
sbb
in
