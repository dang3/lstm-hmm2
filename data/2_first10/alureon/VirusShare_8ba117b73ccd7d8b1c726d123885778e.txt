push
mov
push
push
push
pushl
mov
push
call
mov
push
pushl
call
cmp
je
cmp
jne
push
push
pushl
mov
call
mov
jmp
push
mov
push
push
push
mov
mov
call
push
push
pushl
call
xor
pop
pop
pop
ret
push
mov
push
xor
push
push
push
mov
call
cmp
jne
cmpl
jae
movzwl
test
jne
push
push
push
mov
call
mov
push
mov
call
push
push
pushl
pushl
call
jmp
push
push
push
push
call
push
mov
call
mov
pop
pop
ret
mov
add
mov
test
je
add
add
add
add
add
push
mov
push
lea
xor
cmp
jbe
add
lea
test
cmp
jb
mov
add
xor
cmp
jbe
add
push
add
pop
cmp
jb
pop
pop
xor
add
ret
push
mov
push
push
andl
push
call
mov
jmp
mov
movzwl
imul
add
mov
push
add
pop
cmpb
jne
testl
je
push
push
mov
mov
xor
xor
mov
and
mov
pop
pop
mov
leave
ret
push
mov
sub
cmp
sub
push
mov
mov
add
mov
test
jne
lea
test
jmp
andl
push
lea
lea
cmpl
push
je
mov
mov
add
push
mov
call
test
mov
je
mov
andl
add
cmpl
je
mov
pushl
pushl
call
test
je
incl
mov
mov
lea
cmpl
jne
mov
incl
mov
imul
lea
lea
cmpl
jne
xor
lea
test
pop
pop
pop
leave
ret
xor
jmp
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
add
movzwl
movzwl
incl
subl
addl
add
cmp
jb
pop
pop
pop
leave
ret
push
mov
add
sub
push
push
xor
cmp
push
je
mov
jmp
push
mov
call
cmp
mov
je
cmpl
jne
lea
call
mov
xor
cmp
push
setne
push
push
push
mov
mov
call
mov
cmp
mov
jne
xor
jmp
mov
mov
mov
rep
pushl
pushl
pushl
push
call
mov
sub
mov
add
cmpl
je
push
pushl
push
call
mov
mov
jmp
mov
mov
test
je
mov
mov
add
mov
mov
mov
add
movzwl
lea
mov
add
movzwl
lea
mov
lea
push
push
push
push
mov
call
pushl
push
call
mov
mov
sub
xor
cmp
mov
je
mov
cmp
je
add
mov
jmp
mov
mov
mov
cmp
je
add
lea
mov
mov
mov
mov
add
push
push
push
call
or
sub
mov
mov
mov
sub
cmp
mov
jbe
add
add
mov
mov
mov
add
addl
addl
add
incl
mov
mov
cmp
jb
pushl
call
test
je
mov
push
call
test
je
cmpl
je
mov
mov
call
mov
add
mov
movzwl
xor
test
mov
jbe
mov
mov
mov
subl
addl
push
pop
rep
mov
add
add
sub
mov
movzwl
inc
cmp
jb
push
push
pushl
mov
call
pushl
mov
pushl
mov
pushl
mov
pushl
add
call
pop
pop
pop
leave
ret
push
mov
push
push
push
push
mov
xor
add
mov
cmp
movzwl
push
lea
mov
jbe
lea
mov
xor
test
je
mov
and
neg
sbb
and
add
test
sub
jmp
test
jns
push
jmp
test
je
push
pop
test
je
or
test
je
mov
mov
add
lea
push
push
push
push
mov
call
test
je
movzwl
incl
add
add
cmp
jb
xor
lea
test
pop
pop
pop
leave
ret
xor
jmp
cmpl
jne
xor
jmp
call
xor
divl
mov
ret
push
mov
mov
mov
sub
sub
add
push
mov
test
jne
xor
jmp
mov
mov
push
add
mov
push
mov
mov
mov
add
add
add
test
mov
jns
and
sub
cmp
jae
mov
jmp
xor
cmp
mov
jae
jmp
mov
mov
mov
add
call
cmp
je
incl
mov
cmp
jb
mov
mov
mov
cmp
je
movzwl
mov
mov
add
add
cmp
jae
cmp
jb
xor
cmpb
je
inc
cmpb
jne
push
lea
push
push
mov
call
add
add
lea
push
mov
movb
call
mov
test
jne
xor
jmp
lea
call
push
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
add
mov
andl
mov
mov
add
mov
add
sub
add
mov
push
lea
push
mov
mov
mov
mov
rep
mov
sub
add
mov
imul
add
mov
mov
neg
imul
add
add
add
mov
push
lea
push
push
push
mov
call
mov
mov
movl
mov
mov
mov
lea
mov
mov
mov
mov
rep
mov
add
add
decl
mov
mov
jne
subl
addl
pop
pop
leave
ret
push
push
pushf
rdtsc
imul
pop
add
mov
and
rol
xor
pop
pop
ret
push
mov
push
push
xor
mov
mov
scas
je
add
jmp
mov
mov
pop
leave
ret
push
mov
add
test
sub
push
lea
push
mov
mov
mov
mov
rep
push
push
pushl
xor
push
mov
call
cmp
mov
jne
xor
jmp
push
call
mov
movzbl
lea
cmp
jne
movb
mov
mov
mov
rep
mov
mov
mov
mov
mov
cmp
mov
mov
lods
mov
sub
sub
xor
add
addw
sub
stos
cmp
add
mov
sub
sub
rol
dec
jne
xor
mov
mov
mov
movzbl
imul
xor
lea
test
add
jne
cmp
jne
mov
mov
mov
rep
push
push
push
push
mov
call
push
push
pushl
mov
call
xor
push
add
pop
pop
pop
pop
leave
ret
push
mov
add
sub
push
push
xor
mov
push
push
pushl
mov
push
call
test
mov
je
lea
test
cmp
jb
push
push
call
test
mov
je
cmp
je
push
push
pushl
mov
call
sub
jne
mov
push
push
pushl
push
call
test
jne
jmp
xor
jmp
mov
mov
mov
mov
rep
mov
pop
pop
pop
leave
ret
and
add
jne
add
cld
pushf
sbb
pop
lock
shrb
sub
cmp
rcr
mov
scas
xchg
fisttpl
inc
aad
add
mov
outsl
mov
cmp
xchg
lods
adc
or
xchg
bound
dec
xor
mov
ljmp
lret
and
cmpsb
cmp
dec
adc
pop
test
jb
stos
or
lcall
dec
loopne
or
mov
lods
mov
ja
pop
pop
pop
fbstp
call
xor
or
mull
adc
jno
jne
jmp
popf
mov
test
aaa
movsb
pop
mov
add
or
out
lea
into
clc
jmp
ret
mov
pop
loop
push
sahf
jmp
repz
inc
sahf
out
mov
out
rorb
jne
addr16
nop
mov
test
clc
mov
cmpsl
int3
call
aas
test
pop
shlb
cmp
insb
and
dec
dec
daa
or
dec
sub
sub
aad
xchg
cmp
sbb
cmp
jmp
movsl
sarl
xchg
push
xchg
in
pop
outsl
xor
ss
xchg
jae
pop
lret
mov
push
mov
repnz
test
arpl
dec
xchg
incl
mov
mov
mov
popa
out
lds
arpl
fcmovu
pop
imul
xor
push
add
push
daa
lea
push
test
les
mov
jmp
test
xor
inc
repz
xor
mov
cld
sbb
mov
fs
adc
aaa
sbb
inc
dec
daa
mov
push
pusha
push
cli
xchg
sub
scas
or
fisttpll
xchg
cmpsb
cmp
lods
aam
jnp
push
cltd
adc
adc
cmp
sbb
jns
rcr
lret
push
sub
and
dec
push
xor
scas
mov
ja
adc
and
inc
lcall
neg
fdivl
les
xor
adcl
sub
push
lds
jns
js
das
leave
pop
gs
sti
hlt
rolb
jle
js
stos
repz
arpl
cld
or
push
push
xorl
pop
lods
jnp
mov
inc
subb
insb
and
pop
outsl
aaa
jbe
xchg
jne
cmc
int3
mov
or
mov
xchg
mov
jge
mov
mov
stc
inc
cmc
dec
fsts
xchg
xchg
imul
sub
nop
xor
push
mov
daa
sub
ss
out
cli
jg
xor
arpl
cmc
jge
pop
jo
xchg
repz
cmc
sahf
fimuls
int
xor
inc
add
or
cld
xchg
sahf
jno
jl
mov
fcmovnu
pop
shr
outsl
das
cmpsb
out
loope
je
ds
iret
add
fsubs
push
jne
iret
lret
add
aaa
ret
ljmp
aad
mov
pop
add
or
test
cli
push
cmpsb
or
imul
mov
loope
fs
das
cli
fsts
aam
in
repz
inc
dec
mov
cmp
ficoms
add
in
fucomip
adc
outsl
subl
mov
sbbl
inc
mov
and
sbb
cmp
and
cmp
cmpsl
int3
sbb
inc
inc
rorb
lret
popa
in
loope
leave
aas
es
mov
mov
mov
xlat
sbb
repnz
aas
add
xlat
ret
sub
fcomp
out
stc
jb
das
mov
cs
es
pop
dec
cmpsl
xlat
jnp,pn
cmp
bound
sub
jmp
lods
push
dec
fnstsw
and
inc
ja
test
test
and
scas
mov
ror
and
adc
js
mov
mov
and
pop
test
inc
ss
out
pop
outsb
jmp
push
or
sub
pop
fsubs
inc
sbb
push
push
xor
in
xor
inc
xor
scas
push
xchg
jl
mov
cmpsb
sbb
or
dec
fsub
out
mov
xlat
rolb
movsl
gs
imul
pop
call
pop
cwtl
mov
mov
sub
and
push
push
xchg
mov
sti
or
sub
mov
loope
sbb
repnz
sub
mov
jecxz
mov
sbb
lock
push
std
or
insb
jno
fisttps
rcrb
xchg
repz
enter
cltd
mov
push
add
jle
push
adc
icebp
popa
das
idiv
push
out
jp
aam
arpl
inc
lcall
imul
test
in
mov
pop
inc
cmp
add
push
or
std
xchg
lret
andb
popa
stos
outsb
movsb
lcall
mov
xor
les
jmp
sub
aas
sbb
adc
xor
xchg
pop
jecxz
nop
xchg
or
fcmovb
sub
enter
sub
dec
push
adc
movsb
mov
mov
out
rol
popa
fwait
inc
shll
cmp
xchg
and
les
or
mov
adc
mov
cli
xchg
xor
dec
in
add
adc
or
scas
jecxz
idivb
mov
aad
hlt
xchg
paddusb
loope
ret
push
int
int
mov
mov
sbb
sbb
lret
inc
sub
out
bound
mov
mov
and
mov
sti
mov
xor
movsb
inc
flds
mov
data16
in
nop
cmp
dec
loopne
cmp
in
jnp
xchg
nop
cld
mov
push
sbb
rorb
sbb
jo
popf
loop
push
filds
sub
and
repnz
xor
mov
xchg
xor
and
push
mov
jne
lock
and
out
dec
jbe
jge
add
xchg
push
mov
fildl
in
xor
sub
loope
jmp
sub
push
add
ja
cltd
sbb
movsl
jno
pop
mov
in
orb
fidivs
fsub
xchg
outsl
or
rcll
pop
sbb
mov
aaa
lods
aas
int3
sub
pushf
in
mov
or
data16
mov
fldt
mov
ds
test
pop
lss
inc
pop
push
int
popf
mov
repz
ror
push
lock
xor
jo
aam
div
add
cmp
ja
add
xorl
cmp
cmp
cmpsl
mov
add
stc
jns
rclb
cmpb
xchg
xchg
or
ss
jne
sbb
adc
sbb
icebp
cmp
stos
pop
shl
call
das
jl
fs
mov
pop
push
mov
subb
push
cs
jnp
lret
xchg
xchg
jp
add
pop
inc
into
pop
shll
dec
out
cmpsl
outsb
mov
ret
nop
je
or
mov
gs
fimull
inc
xchg
mov
les
pop
aaa
lods
or
shlb
adc
push
mov
adc
cmp
ds
adc
lock
lods
sub
jl
or
or
lods
inc
xor
fs
cmc
adc
data16
in
repz
adc
daa
test
xchg
mov
fisubrl
inc
mov
shll
imul
pop
aas
pushf
mov
je
std
adc
int3
aam
aaa
lcall
push
popf
imull
nop
xor
loopne
and
sbb
jp
xchg
arpl
xchg
mov
mov
sub
jg
dec
inc
mov
jmp
mov
cmpsb
or
mov
xchg
inc
ret
cli
test
xor
bound
in
and
in
cmp
repz
push
test
stos
add
fmul
mov
scas
jl
mov
push
or
mov
rol
shrb
insb
std
aaa
pop
test
lcall
fstps
pop
push
and
jne
int3
adc
insl
ljmp
jl
cmpsb
addr16
xchg
fists
movsb
mov
jbe
push
nop
iret
cli
dec
mov
mov
outsl
cmp
lds
sbb
mov
inc
sbb
jnp
pop
inc
in
add
sti
pop
xchg
je
jecxz
sub
sbb
data16
push
add
hlt
es
je
mov
jmp
out
dec
test
mov
mov
negl
sub
dec
adc
ds
andl
out
rcrb
out
loopne
mov
sti
jg
cmp
add
cmp
push
mov
xchg
jmp
stc
gs
std
movsb
xbegin
cmpsb
lahf
sbb
test
mov
or
xchg
mov
aad
add
pop
xor
mov
adc
and
enter
sbb
mov
lret
stc
cmp
popf
mov
or
lea
mov
push
les
lret
xchg
daa
xor
mov
push
add
mov
pop
in
push
stos
out
mov
jmp
add
bound
add
rcll
xchg
inc
aam
dec
testb
mov
pop
fisubrs
lret
rcrb
mov
pop
mov
std
jns
cmp
shl
push
adcl
jne
push
sbb
sahf
mov
into
sub
add
les
mov
pop
or
add
out
sbb
lahf
jo
push
out
fwait
push
ret
cmp
jecxz
es
inc
aad
add
outsb
fsubrl
xchg
inc
cs
test
repnz
xchg
mov
pusha
push
cmp
repnz
mov
hlt
add
dec
adc
mov
jecxz
loopne
scas
mov
mov
fs
shlb
filds
insl
mov
mov
repnz
popa
jae
clc
add
add
push
adc
mov
mov
jg
fs
outsl
fdivs
into
pusha
pusha
icebp
mov
xor
sub
xor
stos
aad
lea
xchg
aad
enter
xchg
add
lret
enter
jmp
mov
xchg
mov
or
dec
fwait
cmpsb
ds
dec
fistpl
scas
fwait
pop
push
pop
push
and
jecxz
xor
shll
out
lahf
aas
mov
add
cld
jmp
fisubl
push
fdivp
sub
and
jae
das
inc
divb
sub
out
lcall
or
jae
jno
fdivr
imul
and
sbb
inc
mov
push
push
rorl
push
int
je
loop
dec
xadd
arpl
mov
in
xor
imul
jle
adc
push
inc
sub
es
aas
inc
pop
mov
bound
fadd
add
pop
insb
test
jno
adc
mov
add
idivl
or
js
mov
fnstsw
inc
inc
pop
cwtl
hlt
xchg
add
nop
jmp
stos
loop
frstor
pop
sbb
or
out
xor
cmp
inc
movsl
mov
adc
push
xchg
and
and
test
pop
sub
loope
jns
add
loopne
pop
rorb
adc
push
mov
add
sub
dec
enter
pop
or
mov
jp
scas
stos
inc
es
stc
dec
insb
jno
xchg
movsb
and
in
mov
ret
jl
mov
sub
sub
pop
sub
out
xchg
stos
ljmp
xchg
rcrb
aas
add
pop
xor
cmpsb
jns
push
dec
popa
hlt
divb
xor
mov
xor
lret
adcb
dec
fsts
movl
dec
xchg
xor
xchg
xor
push
cmp
sub
imul
push
pop
pop
fs
and
das
lcall
nop
mov
lret
sub
sub
push
js
jle
sahf
lret
xchg
jbe
cmc
mulb
rorl
mov
sbb
jb
enter
adc
stos
clc
sub
adc
sarl
test
lahf
xchg
lret
push
xchg
mov
sarl
jbe
ret
cmp
sub
mov
insl
push
imul
mov
orl
std
pop
shr
mov
pop
xor
subl
bound
sub
repz
jnp
xchg
and
in
popa
mov
cmp
aaa
sbb
aas
repnz
push
stos
cmp
pop
jb
xchg
sub
repnz
frstor
into
sub
pop
adc
mov
push
andl
int3
rcrb
cmc
int3
mov
imull
scas
and
in
in
sbbl
cmpsl
enter
xor
mov
pop
push
lods
stc
stos
mov
and
mov
push
jl
xchg
add
inc
hlt
fcmove
xor
cmpsb
cmpsl
scas
mov
jne
test
jmp
std
dec
aad
mov
push
pop
pop
movb
sbb
cmpsb
push
fists
arpl
int3
loop
or
mov
mov
or
mov
jp
xchg
mov
ljmp
jp
or
aam
xchg
cmp
adcb
cli
cld
push
xchg
ds
cmpsl
mov
add
shrl
pop
clc
and
xchg
mov
sub
sbb
in
or
out
xor
jne
cmpsl
in
sti
mov
sub
stos
adc
jle
les
push
sub
or
fcompl
dec
andb
std
adc
adc
fwait
jb
cmp
mov
push
flds
lods
xor
lcall
xchg
or
dec
cwtl
and
lods
jnp
jle
test
stos
push
hlt
push
std
cmp
xor
sub
pushf
xchg
mov
jno
mov
insl
fsubrs
lcall
rorb
push
sbb
stos
jmp
jno
jg
int
sbb
dec
cmpsl
int
rclb
mov
cmp
fdivrs
cmpb
scas
rolb
jl
cmp
push
inc
lods
inc
mov
inc
sti
in
icebp
movsl
or
pop
jbe
lea
insl
mov
dec
lds
jno
xchg
outsb
lcall
in
lds
mov
and
xor
mov
mov
pop
out
inc
xchg
pop
adc
int3
mov
jae
xchg
leave
scas
jo
mov
xor
dec
shlb
sbb
cmp
cmpsb
jae
iret
lods
popa
ds
add
insb
lds
mov
jl
push
dec
and
sub
mov
and
out
daa
xor
imul
test
mov
mov
mov
sub
sbb
push
test
test
jle
loop
jae
in
push
cmp
dec
add
pop
pop
adc
sub
inc
stc
ljmp
or
ljmp
add
fs
idivl
insl
pusha
pop
lret
jge
adc
mov
and
or
gs
mov
je
imul
xchg
sub
negb
sti
mov
das
mov
inc
fcmovb
inc
adc
data16
xorl
lea
repnz
cs
movsl
pop
xor
push
aaa
mov
outsl
mov
adc
loop
pushf
cmc
das
sub
out
mov
test
lea
fcomps
nop
inc
pop
add
in
ljmp
mov
jmp
lahf
push
jle
negb
loopne
sub
xor
movsb
roll
mov
ljmp
push
sub
dec
mov
arpl
fwait
jbe
mov
cmp
mov
pop
mov
cmp
cmpb
cmp
jns
add
ds
into
mov
imul
hlt
lldt
mov
add
fs
scas
mov
pop
outsw
xchg
lahf
adc
and
addr16
pop
popa
sbb
test
insl
sahf
imul
add
popf
stc
sahf
jo
sub
lcall
jg
dec
ss
push
lods
jns
lock
mov
mov
cmpsb
arpl
fs
aas
jae
aad
jbe
or
test
loop
jle
jae
shll
mov
lahf
in
jl
pop
adc
ljmp
sbb
ret
inc
mov
cmpsl
out
sbb
insb
push
addr16
jecxz
adcb
movsl
adc
cmovae
lret
aam
imul
rorl
jmp
aas
ds
fildll
mov
loopne
lods
insl
jb
xor
dec
or
and
ret
stos
and
lret
jns
push
test
data16
ret
push
fadds
xchg
insb
push
mov
dec
hlt
cmp
mov
repnz
addr16
mov
jnp
mov
mov
frstor
shrb
testb
cld
push
dec
pop
ret
mov
in
push
xorl
jmp
adcb
aas
mov
lcall
lods
and
sbb
pusha
mov
out
adc
mov
sub
sub
pop
sub
rol
add
xlat
cmp
test
jbe
lds
cmp
dec
loopne
push
dec
stc
sti
dec
sbb
in
inc
loope
mov
fisubrs
dec
and
mov
shr
jl
repz
nop
push
repz
pop
movsb
xor
jne
jge
rcrl
sti
es
nop
push
sbb
out
adc
pop
and
lahf
xor
push
lret
or
int
imul
loope
sub
xchg
ljmp
pop
jns
mov
pop
cmp
movsb
xchg
mov
mov
int3
cmc
jne
in
adc
inc
imul
xchg
sbbb
jbe
pop
lea
push
sub
and
cmp
bound
adc
lods
or
sti
icebp
imul
adc
loop
jle
push
mov
adc
scas
in
xchg
and
mov
pop
aam
push
out
jo
addr16
int3
scas
lds
inc
inc
data16
lods
repnz
adc
push
loop
adc
fnstenv
jo
mov
add
je
lahf
xchg
sub
or
push
cmp
jl
cmc
shlb
test
lcall
adc
sbb
ret
push
pop
dec
fnstcw
loope
sbb
cmp
ss
add
xor
or
dec
mov
sub
sbbl
std
sbb
arpl
pop
in
in
stc
int
push
lcall
into
xor
jecxz
in
fistps
data16
push
ret
pop
add
in
mov
imul
lea
js
sti
pop
sub
clc
std
imul
jae
adc
cmp
dec
aaa
stos
repz
ljmp
mov
mov
orb
adc
lret
fsubs
or
call
add
xchg
out
xchg
and
dec
xorl
movsb
out
xchg
outsl
mulb
push
sti
inc
push
pop
lret
adc
adc
inc
loop
dec
lret
sbb
adc
xchg
push
xor
pop
out
adc
aas
rcrb
pop
xchg
dec
nop
adc
dec
add
imul
jbe
sbb
sarb
ja
adc
ja
cmp
sahf
sub
sbbl
and
divb
loopne
rorl
stos
pop
adc
out
repz
dec
mov
dec
lods
add
scas
adc
mov
xchg
inc
leave
xchg
inc
xor
test
and
lcall
add
nop
imulb
adc
push
and
clc
call
loop
xchg
inc
and
fnstsw
fucomip
mov
xchg
add
pop
and
insl
jle
pop
cmpsb
cmp
xlat
lods
jle
pinsrw
mov
out
pop
pushf
fidivs
fnstsw
pop
lods
ss
mov
sti
push
sbb
and
xchg
sbb
mov
imul
test
push
mov
fincstp
push
add
mov
jne
xchg
int
es
adc
fs
push
sahf
cmp
mov
mov
dec
and
insl
inc
sti
cmpsl
xchg
xchg
pop
and
sbb
arpl
pop
lea
push
outsb
fidivrs
lock
add
iret
lcall
push
in
add
or
in
ljmp
dec
mov
aad
in
aaa
loope
jnp
fnsave
jg
xchg
and
std
fwait
jg
in
daa
cmp
or
lea
js
push
movsl
add
or
out
jp
and
shlb
aas
aas
push
sti
mov
lret
push
sbb
inc
sub
mull
scas
jae
xor
xchg
je
or
add
scas
or
outsl
add
scas
pop
notl
push
ficoms
jbe
sbbb
mov
adc
adc
adc
xchg
push
add
std
cmp
and
popf
testb
xchg
push
xchg
sbb
popa
sub
xorb
jo
xor
sub
mov
scas
pop
rorl
imul
in
ljmp
inc
adc
clc
sub
jne
rolb
andb
xor
lods
mov
sub
xchg
sbb
sub
push
ret
push
pop
push
xor
popa
inc
pmaxsw
cmp
jbe
mov
push
stc
loopne
mov
cmp
pop
ss
test
mov
popf
push
adc
sub
pushf
mov
ds
push
dec
dec
pop
out
dec
lods
in
popf
lea
xlat
test
cmpsl
std
inc
imul
or
out
jmp
jp
push
cwtl
repnz
mov
lock
jno
in
lea
jb
loope
sub
jb
hlt
ret
ds
xlat
cmp
mov
jb
cmp
stos
sub
sbb
cmp
xchg
add
add
cmp
or
adc
enter
dec
adc
xchg
cmp
ljmp
xchg
aaa
adc
adc
popa
mov
ret
or
fwait
xlat
add
xchg
and
push
lods
neg
pop
sbb
enter
push
cmp
int
out
inc
test
pop
dec
add
adc
lret
ljmp
inc
jge
mov
mov
jbe
fs
adc
mov
mov
mov
sbb
aad
ljmp
popf
pop
ret
jmp
jbe
shll
mov
testb
repz
inc
outsl
loop
mov
cltd
ja
mov
pushf
xchg
fnstsw
inc
xchg
loop
jge
in
scas
scas
lods
add
movsb
mov
xchg
imul
in
sarb
pop
lahf
lret
lret
sbbb
insl
dec
push
arpl
ljmp
daa
shll
sub
rclb
lock
cs
cwtl
aas
test
cmp
out
mov
push
loope
mov
fadds
sti
lea
xor
push
dec
out
dec
adc
lods
push
pop
mov
out
andb
and
add
xchg
mov
data16
sarl
popf
xchg
mov
movb
rolb
movsb
lods
insl
bound
mov
mov
xlat
mov
xchg
xchg
inc
lahf
fwait
inc
out
test
cmp
or
pop
addr16
popa
lahf
cmp
or
ret
sbb
nop
inc
mov
sbb
ror
pop
inc
and
dec
cld
aam
icebp
add
ja
push
cmpsl
fdiv
in
scas
adc
jae
jbe
pop
mov
mov
and
push
faddp
sbb
cmp
rcl
les
stos
add
dec
les
and
jg
or
jmp
ja
imul
inc
dec
cld
xchg
pop
mov
push
pushf
into
sbb
mov
push
test
cmp
fisubl
hlt
popa
dec
jle
movsl
jmp
ret
jge
popf
pop
sbb
rcrl
cmp
push
mov
lret
test
insb
dec
dec
lret
enter
mov
pop
push
iret
testl
sarl
sbb
xor
xlat
push
jbe
loope
imul
fistps
vaddss
das
outsl
lock
fs
add
adc
jge
xchg
fildll
cwtl
filds
jno
insb
adc
adc
sarl
cmpsb
pop
xor
cs
ja
cmp
sub
xchg
out
jne
add
sub
movsb
aaa
imull
iret
inc
xor
jl
xchg
rorb
xchg
or
cmp
mov
adc
pop
sub
mov
cmp
push
js
clc
push
sub
add
daa
enter
jo
out
sub
in
icebp
stos
xor
inc
stos
cmpsb
lcall
push
data16
mov
shll
test
push
cli
dec
mov
fsubs
xchg
lret
aam
push
adc
add
mov
into
xor
bound
inc
jl
jge
test
jle
out
lahf
les
sub
dec
test
sub
push
pop
clc
lods
out
or
cwtl
mov
aad
cmp
jnp
fwait
in
faddp
stos
cmp
pop
jl
dec
popf
movsl
sub
mov
jno
lahf
push
jl
mov
xchg
lock
lock
shrb
repnz
inc
ja
xchg
push
lock
push
push
shlb
int3
cmpsl
mov
movb
push
sbb
test
xchg
adc
inc
outsb
in
inc
lahf
cmc
lret
or
outsl
xlat
sub
adc
bound
and
fbstp
stos
pop
dec
mov
fidivrs
mov
cli
mov
movsb
jle
movsb
outsl
inc
sbbb
cmc
adc
in
out
roll
cmpsl
scas
and
push
out
clc
mov
insb
in
shlb
pop
sub
cmc
lret
adc
ss
push
mov
xchg
inc
and
cltd
push
cmp
fstp
push
pop
and
adcl
mov
les
popa
mov
push
push
cwtl
scas
mov
mov
sub
sub
fabs
and
cmp
out
and
enter
lea
popf
jno
xchg
ret
pop
sbb
adc
jmp
dec
sahf
ret
push
icebp
sub
mov
cli
jmp
push
imul
adc
jg,pt
mov
lahf
mov
lea
test
jl
mov
sbb
pop
sahf
jge
ss
adc
or
notl
add
shlb
cld
jecxz
pop
adcl
xchg
rclb
pop
xchg
aas
scas
into
idivb
lret
mov
aam
or
enter
mov
mov
psubw
jecxz
inc
jb
daa
dec
and
jno
push
xor
pop
dec
push
xor
lods
add
mov
or
movsl
dec
pop
hlt
push
and
dec
pop
adc
dec
pop
fmuls
lret
inc
out
bound
lea
push
dec
push
jp
mov
dec
xchg
jae
pop
cmp
push
hlt
hlt
xor
out
dec
inc
into
testb
sti
adc
popa
push
fwait
inc
call
and
stc
leave
push
test
rclb
adc
ss
lods
cmp
xchg
push
xchg
pop
adc
add
in
or
pop
cwtl
dec
in
sti
ljmp
cwtl
cs
xchg
jb
inc
xor
lcall
lahf
arpl
inc
aas
cmpsb
dec
cmp
dec
pop
repnz
mov
push
fistps
pop
in
mov
mov
mov
fcompl
xor
in
push
mov
sbb
fbstp
cmp
pusha
inc
jge
mov
inc
imul
ja,pn
mov
nop
mov
jno
hlt
fs
push
sarl
test
aas
loop
adc
imul
push
cwtl
stos
or
mov
aas
inc
cmpsl
repnz
cld
fwait
test
fadds
test
arpl
movsl
mov
cmpsb
mov
loopne
es
popf
mov
dec
in
jmp
adc
fucomp
jecxz
adcl
testb
xor
inc
cwtl
mov
popa
into
pop
inc
inc
push
ret
xchg
adc
ljmp
inc
pushf
and
sub
adc
sub
mov
add
fbstp
mov
ds
call
xchg
adc
loop
inc
pop
cmpsb
cmc
mov
inc
xchg
cmp
int3
jg
push
inc
adc
jle
fnstcw
cmp
enter
nop
idivb
shlb
cltd
xchg
cs
mov
lret
aam
cmp
mov
adc
mov
into
xchg
mov
xor
sbb
adc
ret
lds
cmp
push
mov
pop
mov
push
push
cld
mov
mov
mov
pop
sub
ja
jmp
pusha
mov
test
aam
push
js
pop
loope
cwtl
fistpll
cmc
sub
adc
aad
cwtl
sbb
pop
pop
test
add
push
out
shl
mov
sbb
data16
dec
jno
stos
lret
add
jp
aad
pop
sbb
add
lahf
sub
repz
das
pusha
jnp
adc
outsb
fsubl
ss
aas
xlat
mov
jle
lahf
add
outsb
cmc
add
or
jl
mov
sbb
mov
and
cmp
mov
out
add
jmp
roll
popf
je
xchg
sahf
ret
loop
loopne
aas
decb
enter
add
jmp
inc
xchg
outsb
xchg
inc
push
outsl
add
mov
lea
insb
jmp
push
fisubrs
mov
sbb
and
jb
push
and
cmp
cltd
sbb
xchg
xchg
in
add
lret
xchg
mov
rol
and
pusha
or
dec
cs
push
push
sub
rcl
dec
scas
out
dec
mov
xchg
xor
sbb
mov
fdivl
out
insl
in
outsb
cmc
xor
ret
mov
popf
pop
sbb
and
iret
pop
lahf
xchg
pop
cwtl
and
adc
popf
shll
repnz
cmp
push
inc
repnz
aam
sahf
mov
xlat
frstor
add
insb
lock
mov
cld
dec
paddusw
sbb
dec
lea
and
xor
enter
mov
mov
mov
sub
mov
orl
ret
or
cmc
lods
mov
loopne
or
xchg
sbb
dec
data16
sbb
sbb
or
push
fcomp
loop
pop
hlt
adc
out
test
enter
lea
adc
jbe
xlat
cmp
mov
dec
pop
scas
jmp
in
jno
push
dec
mov
ljmp
test
shlb
jge
in
cmp
fisttpl
xor
hlt
ret
repz
insl
xchg
jnp
push
jns
cmp
xchg
out
stc
movsl
jo
pop
test
sbb
pop
mov
inc
adc
in
mov
scas
add
pop
cwtl
sbb
xchg
gs
imul
repz
frstor
sbb
dec
sbb
aaa
dec
scas
clc
stos
mov
pop
sbb
sahf
orl
and
sub
repnz
xchg
or
xor
cli
stos
xchg
cmpsl
leave
pop
pop
push
xchg
mov
iret
ljmp
aaa
xchg
or
sbb
pop
jge
xchg
shll
dec
decl
into
lret
lds
jne
sub
out
pop
mov
or
xchg
repz
pop
leave
sbb
adc
add
out
sti
in
pop
icebp
imul
pop
push
adc
ljmp
ret
int
inc
lret
retw
lcall
xchg
lret
addr16
adc
push
pop
cmc
cwtl
jbe
sub
pop
mov
fnstsw
decb
outsb
in
jno
adc
call
push
jle
in
mov
loop
iret
mov
cmpsb
sarl
les
add
xorps
fsubr
les
mov
or
xor
push
cltd
rcrb
xor
add
mov
lcall
lock
jns
jge
sbb
test
rolb
negl
mov
mov
push
enter
pop
jecxz
cmp
inc
fbld
adc
add
mov
leave
jns
cmp
adc
jae
cmp
mov
inc
push
adc
xchg
clc
nop
sti
pop
dec
adc
cmc
pop
jl
push
cmc
cltd
cmp
push
dec
pushl
es
dec
mov
mov
inc
div
sahf
js
shrl
mov
cmp
inc
xor
and
push
dec
mov
or
push
push
push
arpl
push
and
jecxz
inc
idiv
sbb
jecxz
add
test
loope
divl
in
inc
xor
or
out
rcr
and
mov
js
lods
xor
icebp
pop
mov
je
lock
mov
orl
or
mov
dec
data16
fdivl
dec
push
cmpsb
dec
mov
ds
fsts
scas
mov
es
xchg
lahf
shrb
sbb
dec
sub
dec
les
pop
mov
bound
lahf
repnz
or
subb
mov
fdiv
and
mov
dec
sahf
adc
rolb
das
out
inc
cmpsl
icebp
pop
fbstp
test
insb
int3
shrb
adc
xlat
test
jl
mov
hlt
pop
xchg
pop
shlb
xchg
daa
mov
in
jbe
cld
loope
mov
in
add
push
mov
test
inc
ljmp
pop
int
pop
arpl
cmpsb
jb
icebp
mov
xchg
dec
sub
aas
xor
in
jns
push
dec
lret
fs
incl
mov
cmp
push
jmp
inc
pop
sub
hlt
adc
test
out
adc
and
ret
jo
adc
adc
mov
xor
test
sub
adc
or
bound
xchg
test
scas
gs
cmpsl
mov
das
lds
and
popf
dec
ror
mov
roll
mov
stos
push
jae
fs
cwtl
xor
pop
mov
sahf
sub
jle
mov
es
pop
pop
int3
js
mov
xchg
fs
mov
mov
lds
shl
test
dec
mov
sbb
daa
pop
loopne
mov
cltd
cmc
jno
inc
xchg
inc
adc
add
xchg
lea
in
lahf
je
adc
cwtl
push
cmp
iret
frstpm(287
dec
sub
lock
pop
jg
popa
gs
mov
push
mov
lods
push
imul
repnz
xchg
inc
in
ja
in
adc
pop
mov
mov
cmc
cmpsb
xchg
fwait
sti
xor
jmp
in
rclb
pushf
lds
imul
clc
ss
inc
cmpsl
pop
fdivp
xchg
inc
xor
or
pop
inc
sbb
pop
fldl
xchg
add
lcall
je
fwait
adc
jno
sub
lods
dec
pop
sub
jae
jnp
or
jge
xchg
out
test
pop
inc
jns
push
iret
add
lea
hlt
push
insb
data16
pop
repz
mov
fisttpll
jmp
mov
bound
lcall
leave
mov
cmpsl
fstp
ljmp
sbb
lcall
ret
xor
or
push
push
cmp
inc
adc
xor
repz
adc
and
or
loope
sbb
fistpl
mov
xor
das
mov
lcall
pop
lcall
or
and
push
inc
cmp
add
es
call
cmc
mov
and
xor
pop
push
out
sbb
pop
cmp
sbb
sbb
cmp
mov
cmp
lods
push
out
mov
and
mov
pop
shr
inc
loope
popa
pop
loopne
jmp
jae
outsl
clc
or
mov
nop
sub
fcoml
cmp
outsb
push
xor
lret
mov
mov
push
mov
fisttpl
scas
mov
pop
xor
adc
jne
int
xchg
movsl
mov
jne
push
and
stos
dec
inc
rcll
cmp
mov
test
cmpsl
pop
test
pop
sti
jae
or
pop
outsl
ret
mov
jbe
fistl
inc
sbb
outsb
xchg
push
cmp
into
js
sar
or
js
sbb
mov
into
inc
inc
aas
fidivl
push
pushf
or
mov
aad
ret
cmpb
pop
fwait
in
jbe
dec
or
aam
and
dec
incl
xor
pop
pop
or
jle
xchg
jp
dec
xor
push
jo
es
stos
sbb
arpl
adc
scas
fwait
cltd
nop
fwait
fwait
mov
mov
ret
adc
rcrl
jo
and
or
fildl
dec
pop
sahf
dec
sahf
fstpl
pop
ss
sub
gs
jg
aas
dec
stos
aas
stos
dec
pop
pop
pop
lds
and
sbb
sbb
in
in
hlt
ljmp
fs
xlat
mov
sub
out
rcrl
lods
nop
add
repnz
rorl
mov
punpckhbw
xchg
sbb
scas
adc
and
cld
and
mov
push
pop
sbb
insl
lret
pop
adc
outsl
jecxz
adc
mov
sahf
mov
add
jmp
int3
rcl
ds
inc
push
cmp
sub
add
sub
repz
dec
dec
push
imul
cld
cs
lea
iret
cmp
out
jle
out
push
mov
mov
jb
sub
sar
add
push
scas
xor
stos
mov
add
std
hlt
mov
pop
in
mov
in
je
jmp
inc
inc
nop
cmpsb
loop
ljmp
mov
loop
xchg
nop
lea
cmp
adc
js
lods
mov
aaa
lods
xchg
lock
cld
cwtl
xchg
pop
hlt
xchg
pop
aam
insb
jb
mov
mov
cltd
aad
sbb
adc
loopne
jmp
adc
pop
and
push
sbb
push
jae
sbb
movsb
test
sub
jae
aas
stc
bound
loopne
leave
xchg
scas
mov
jo
mov
cmpl
xchg
ret
ja
sub
into
cmp
jmp
repnz
loop
lahf
sbb
cmp
xchg
xor
testb
or
insl
jb
adc
out
dec
test
cmp
arpl
cmp
mov
mov
mov
nop
mov
ljmp
sub
push
mov
ja
sti
jne
inc
adc
repnz
jo
dec
lcall
fs
mov
inc
cmp
mov
push
xchg
fs
cmpb
xor
cmpsl
pop
notl
mov
and
popf
xchg
lds
aam
or
aad
enter
pushf
rorl
xchg
lods
fdivrp
mov
insl
inc
mov
mov
xor
outsl
je
inc
mov
mov
and
add
mul
mov
xor
outsl
jae
pop
mov
fcoms
mov
dec
ja
cmp
es
xlat
push
dec
pop
scas
sub
cwtl
mov
push
inc
loop
ficoms
push
lahf
jecxz
inc
mov
jb
sahf
dec
add
insl
fdecstp
or
mov
push
mov
mov
jbe
addr16
fidivs
xchg
cmpl
lret
lcall
les
jmp
je
mov
leave
and
add
mov
push
repz
rclb
sub
jmp
lea
sbbb
inc
cmp
dec
fs
push
cld
shl
insb
es
into
add
push
xchg
sbb
les
scas
clc
ja
fsubl
xor
push
cmp
cmp
stos
jecxz
lret
enter
ret
sbb
mov
mov
stos
inc
je
pushf
imul
lds
jo
dec
sbb
sti
enterw
add
push
cli
inc
jle
xor
bound
adc
xchg
in
bound
mov
int
out
mov
aas
pop
das
dec
int
sub
loop
jmp
rclb
pop
mov
sbbb
mov
or
cwtl
rorb
loop
bound
je
scas
aas
sahf
wbinvd
bound
mov
jae
mov
jae
mov
cmp
mov
cmc
xor
and
and
mov
bound
std
negl
adc
dec
lock
dec
push
jge
push
lods
mov
imul
test
arpl
sub
push
dec
nopl
pop
scas
dec
cmc
icebp
add
mov
cmpsb
je
into
mov
loopne
push
mov
mov
rorb
gs
cmp
lahf
das
and
dec
bound
mov
add
ds
mov
xchg
fstpt
sub
jecxz
pop
repz
dec
enter
mov
outsl
jmp
mov
mov
insb
lds
fldln2
addr16
jecxz
sub
mov
stos
xor
in
das
or
jb
mov
add
mov
or
or
jb
stos
jle
jg
sti
xchg
in
jmp
push
daa
in
insb
xchg
and
or
xor
sbbb
arpl
mov
push
ret
flds
and
adc
adc
adc
es
push
jmp
jle
mov
pop
cmp
rolb
popf
mov
sbb
xchg
xchg
push
ja
push
and
xor
adc
mov
xor
jg
js
dec
mov
pop
popf
cs
lea
lock
aam
imul
popf
and
push
rclb
pop
dec
stc
popf
mov
loope
popf
jbe
mov
js
cmp
cmp
mov
push
mov
scas
jecxz
sarb
shll
sahf
or
lods
pusha
cmc
jne
xchg
jne
out
adc
sub
adc
inc
test
sub
test
popf
ljmp
ja
sbb
and
mov
frstor
cmpsl
fidivl
int3
fwait
push
adcl
mov
fiadds
fidivrl
and
jae
ss
hlt
cli
dec
push
scas
adc
adc
lds
pushf
mov
scas
daa
into
adc
ret
cli
shlb
jae
mov
jmp
xor
sub
loopne
into
testl
jb
xchg
adc
fisubrl
out
mov
scas
xor
inc
rclb
mov
cmp
lds
aas
daa
push
pop
mov
dec
test
or
mov
pop
lret
out
push
lods
or
in
adc
push
flds
xchg
bound
sarb
movsb
cwtl
adc
and
mov
aam
imul
jbe
jae
or
js
fadd
dec
sub
xchg
pop
movsl
pop
lock
xchg
shll
push
add
jnp
insl
mov
adc
decb
mov
repnz
push
push
aas
std
int
jns
jno
push
jl
pusha
jmp
lods
mov
pop
js
cli
or
dec
adcb
lret
inc
mov
jmp
xor
mov
std
xchg
into
ds
inc
xchg
pop
xchg
ret
push
and
cmp
xchg
xlat
fucomp
inc
xor
mov
sub
mov
mov
and
add
scas
push
sbb
jp
sbb
jo
adc
mov
sarl
daa
daa
add
pusha
mov
and
mov
push
add
lock
dec
jno
dec
xchg
out
fwait
and
clc
rorl
cmp
xor
cmp
lahf
fildl
and
pop
xor
add
mov
sbb
movsl
push
jne
roll
pop
pop
adc
add
imul
push
push
fwait
loope
addr16
inc
out
fdiv
mov
xchg
add
lahf
or
pop
insl
dec
inc
or
fbld
add
cwtl
xchg
inc
jne
cltd
push
lds
cmp
mov
inc
fldcw
imul
js
imul
mov
in
insb
mov
xor
mov
push
sbb
loopne
cli
pop
stos
and
and
sub
mov
out
jae
jne
jne
fadds
repnz
gs
out
adcb
xorl
addr16
mov
out
sub
xor
arpl
pop
and
jg
xor
movsb
imul
scas
out
aas
xlat
jmp
ja
scas
and
inc
add
inc
mov
scas
arpl
mov
sub
mov
and
add
pusha
and
imul
in
outsb
in
dec
or
jo
pop
jnp
repz
das
pop
push
mov
sarb
dec
andl
sub
outsl
mov
mov
mov
mov
mov
jmp
addr16
aaa
mov
or
repnz
inc
cs
mov
inc
mov
xchg
mov
xchg
stos
inc
inc
and
cli
lcall
pop
fadd
jns
xor
ljmp
jnp
mov
stc
sbb
push
ds
mov
icebp
fidivs
add
shll
xchg
ret
dec
push
in
bound
xchg
rolb
lods
mov
push
cli
dec
ffree
clc
test
xchg
sahf
xchg
mov
aaa
andb
mov
sbb
xchg
mov
sahf
shll
hlt
lcall
rol
add
outsl
ret
jge
mov
cmp
mov
fs
call
pop
dec
and
pop
iret
push
repz
or
mul
xchg
in
sbb
sbb
push
adc
imul
out
aas
inc
dec
pop
cmp
dec
in
mov
pop
pop
jle
mov
cwtl
mov
dec
data16
push
lock
xor
mov
sub
and
mov
pushf
mov
ret
out
xor
add
sbb
sub
pop
cmc
or
pop
xchg
cli
sbb
jne
push
adc
lds
xlat
mov
lea
cmp
sub
int
push
fdivrs
aam
int3
cmp
mov
aaa
sub
cltd
sub
pop
sub
fcomps
xlat
mov
sbb
jb
mov
and
push
repz
clc
mov
aas
sarl
xchg
subl
sub
inc
and
aam
xchg
push
dec
mov
scas
dec
into
mov
push
add
jmp
inc
pop
xchg
fwait
and
nop
movsb
jecxz
sub
mov
js
or
dec
bound
sahf
and
and
arpl
pop
bound
sti
lret
pop
test
fdivrl
loopne
jg
dec
fdivs
pushf
dec
das
inc
or
cmp
mov
inc
jb
rcr
lock
or
jge
nop
add
inc
xor
sbb
mov
test
gs
push
out
push
jae
sbb
mov
fists
ja
ljmp
ret
sbb
xchg
jo
lahf
repnz
mov
mov
aas
sahf
jl
sti
aas
xor
xchg
cwtl
mov
aas
xlat
xchg
xor
pop
loop
jge
push
fisubrl
push
add
jne
pop
enter
xor
adc
dec
inc
nop
sbb
xor
sbb
sub
lods
cld
push
out
aam
mov
insb
mov
ret
sti
push
jbe
imul
pop
xchg
mov
add
xchg
mov
and
insl
mov
shll
or
std
lock
push
mov
mov
sub
dec
cmp
dec
fisubl
push
mov
repnz
repnz
push
inc
lret
jne
mov
loope
pop
xchg
dec
out
sub
les
jno
into
mov
and
xor
lcall
xlat
push
ljmp
in
jb
sbb
fimull
adc
mov
pusha
cwtl
push
jle
xchg
test
xor
push
xchg
in
mov
test
or
add
in
pusha
jo
popl
iret
mov
sbb
xchg
sahf
sub
dec
sbb
out
xchg
push
mov
mov
in
mov
ja
push
mov
icebp
push
xor
es
xor
in
es
and
xchg
movsb
andl
inc
or
and
push
xorb
xchg
dec
icebp
subl
dec
and
sub
je
test
mov
xchg
jecxz
popa
in
add
fwait
outsl
psubd
aaa
gs
clc
outsb
inc
sbb
dec
push
repnz
js
and
add
push
push
jne
dec
mov
arpl
std
push
in
mov
cli
sqrtps
nop
loope
and
hlt
ss
outsl
inc
mov
ss
and
aad
orl
outsb
fwait
jb
pop
push
stos
mov
adc
xchg
pop
and
xchg
sub
adc
jecxz
call
lods
and
popa
xchg
int3
aad
xorb
sahf
mov
jbe
jae
fs
push
rcll
push
cmp
movsb
jp
test
lcall
pop
nop
lds
add
push
loope
pop
sub
test
lea
mov
mov
add
repnz
pop
jg
push
leave
mov
in
push
arpl
cmpl
xor
popa
adc
dec
pop
icebp
jecxz
sub
sub
insl
std
insl
in
mov
dec
pop
imul
jns
lret
movsl
push
in
inc
ret
ljmp
jp
in
out
int3
and
sub
xor
adc
imul
xchg
aaa
mov
cli
jg
pop
mov
inc
cmp
and
xchg
cmc
adc
jmp
bound
inc
int
test
sub
hlt
mov
int3
jl
jne
cld
cmp
insb
fisttpll
insb
pop
pop
jno
lret
jo
dec
movsl
repz
push
mov
jnp
cmp
in
sbb
push
into
daa
mov
std
mov
mov
into
push
dec
adc
jge
push
jmp
jmp
ret
sahf
mov
xchg
int3
mov
sub
je
cltd
insb
cmp
sbb
dec
adc
arpl
fisttpl
orl
ret
cmpsl
sbb
adc
sbb
cmc
jmp
es
push
jb
and
cltd
jo
cmpsl
rorb
sbb
pop
gs
or
scas
out
fbld
push
fcompp
jge
xchg
clc
xchg
mov
or
inc
ljmp
mov
mov
dec
mov
out
ficompl
xchg
jae
stos
sbb
scas
dec
jno
mov
add
push
ret
std
add
imul
lahf
in
mov
jb
and
mov
inc
pop
movsl
inc
shlb
int3
clc
pop
mov
subb
push
rcl
fld1
dec
mov
movsl
push
in
repz
rclb
or
mov
xchg
xchg
jbe
insb
out
sub
and
jmp
std
test
ror
xchg
loopne
sbb
jg
xchg
aaa
xor
clc
gs
and
xchg
xchg
sub
aas
repnz
ljmp
insl
jmp
jns
je
push
in
or
lret
pop
mov
cmp
xor
and
or
jne
movsl
in
scas
mov
ljmp
jno
lock
rcl
xor
fmul
icebp
test
adc
popa
lret
and
arpl
inc
cltd
out
pop
cld
mov
int
lods
outsb
notl
add
lahf
lock
mov
cwtl
dec
sti
adc
in
movsb
push
cmp
jg
orb
xor
outsl
cmp
sbb
push
push
xor
dec
sub
dec
popf
roll
xchg
lea
inc
mov
inc
inc
xor
test
outsb
adcl
and
sti
clc
or
inc
inc
roll
adc
rorb
aaa
shlb
lock
gs
in
mov
or
dec
daa
pop
hlt
push
mov
and
pop
xchg
dec
fiadds
mov
xchg
rolb
push
mov
test
rcll
cmp
leave
pop
jl
sub
push
inc
pop
sbb
pop
mov
or
std
outsl
xchg
ljmp
dec
nop
push
xchg
mov
test
test
imul
daa
mov
outsb
xor
pop
popf
xor
std
add
mov
shll
int
imul
cmp
std
push
shlb
cmc
sbb
cmpsb
push
mov
inc
pop
shl
sbb
cltd
sti
orb
push
dec
pop
repnz
cmp
in
shlb
repz
dec
bound
adc
mov
shlb
das
arpl
xchg
mov
fdivl
cmp
push
js
js
in
sarb
mov
into
push
ret
test
pop
std
xor
ja
sti
xchg
mov
std
in
nopl
sbb
push
loope
push
or
dec
cmc
inc
jecxz
decl
xchg
mov
aam
mov
orb
aas
mov
mov
lret
repz
mov
and
cmp
mov
paddusw
mov
mov
loopne
sbb
popf
aas
pop
pop
andb
push
and
fsub
cltd
movsl
scas
iret
je
div
adcb
xchg
lahf
xchg
cmp
mov
push
ljmp
or
xor
iret
ds
dec
jecxz
xchg
sahf
pop
aas
mov
movsb
mov
test
aas
insb
fmul
adc
out
xchg
mov
jg
jno
js
or
enter
cwtl
or
mov
lods
in
push
mov
fcomps
adc
pop
lock
mov
add
jge
in
mov
cwtl
jne
test
test
ss
mov
fldt
mov
adcl
cli
out
mov
leave
scas
mov
push
shl
jnp
jns
mov
cmc
mov
cmp
cmp
pop
dec
mov
shlb
cmpsl
push
mov
push
push
out
inc
adc
das
mov
mov
pop
shl
xchg
sub
cmpsl
test
and
movsb
test
in
fst
lret
daa
adc
push
das
loope
add
js
sub
adc
lahf
test
add
xlat
sbb
lea
sbb
xchg
testl
es
adc
mov
dec
loop
pop
aad
xor
sahf
mov
test
stos
faddp
sub
test
fs
push
arpl
addb
xor
rorb
pop
mov
cmpsb
dec
xchg
test
and
xchg
cwtl
add
jbe
mov
inc
xor
or
pop
lock
cmp
cmp
jge
mov
fsubp
xor
mov
or
mov
ffree
jmp
int
jp
ss
sbb
aam
jns
sub
push
jge
xchg
jg
adc
ds
imul
mov
jbe
int3
in
fadds
pop
testl
dec
mov
clc
inc
scas
adc
sbb
xchg
sub
mov
adc
cld
inc
jp
pop
cmp
xor
push
repnz
cmpsl
adc
mov
andl
xchg
mov
in
out
pop
in
xchg
push
lock
decl
mov
shll
int
adc
jno
ret
and
sbbl
cmp
lods
scas
cmpsl
pop
push
stc
cmp
mul
mov
in
pop
mov
gs
js
add
rcr
cmp
or
xor
dec
cmp
iret
fwait
and
loope
pop
cmpsl
jge,pt
jl
aaa
jns
call
push
and
sbb
in
add
in
adc
iret
mov
mov
int3
sbb
or
in
sub
lahf
loope
dec
hlt
adc
psrad
int3
fld
cli
sbb
mov
adcl
sub
pop
adc
add
or
xchg
cmc
cmpl
dec
jb
pop
sbbl
inc
sbb
adc
stos
cli
mov
pop
icebp
in
mov
cltd
sub
pop
cmpsl
out
in
and
jmp
ret
sub
xchg
or
jecxz
mov
cmp
inc
mov
stos
aad
xor
imul
out
mov
fdivl
sub
and
cmp
mov
repnz
sub
stos
jge
test
sbb
mov
mov
je
scas
add
or
cmc
pop
psubd
scas
cs
imul
arpl
sub
daa
sbb
ret
out
and
pusha
pop
sub
pop
mov
fs
pop
stos
dec
adc
insl
pusha
inc
fbld
jecxz
mov
and
dec
xor
mov
xchg
imul
jo,pn
lret
xchg
push
add
out
mov
pop
les
add
test
jg
out
mov
push
push
call
cmp
jne
mov
mov
adc
sbb
jne
adcb
xchg
inc
push
xchg
aaa
test
test
mov
js
out
mov
xlat
cs
jmp
clc
mov
mov
rorb
push
xchg
inc
inc
repnz
cwtl
lock
in
add
stos
mov
adc
shll
fstps
mov
mov
sub
jns
jecxz
push
cmp
mov
xchg
ficoml
mov
test
fisubl
inc
loope
cmpsl
xchg
lock
mov
ficompl
push
push
xchg
ret
xchg
xor
iret
repz
or
sbb
in
and
mov
inc
dec
mov
push
push
test
int
cs
inc
stos
inc
mov
pop
daa
mov
popf
fmuls
mov
jmp
jne
les
mov
xor
xchg
pop
and
subb
xlat
je
cmp
ret
shlb
cmc
xor
loopne
mov
sbb
jno
and
mov
negb
iret
shrl
jnp
and
and
out
mov
repnz
lfs
xor
jle
lock
div
cmp
sbb
sbb
faddl
xor
xor
or
dec
mov
mov
sub
imul
xchg
xchg
iret
out
cmp
cmp
rcl
andl
push
enter
mov
int3
loopne
and
sub
pop
fisubrs
cmp
cmp
mov
xchg
push
jg
adc
and
ret
aas
or
cmpsl
push
add
sbb
dec
sahf
add
sbb
inc
inc
loope
adc
cltd
or
push
and
into
push
mov
cmp
shll
push
ret
vpshlq
or
jmp
xor
mov
and
daa
cmpsl
das
andl
mov
xchg
mov
ror
push
sbb
sub
push
mov
je
mov
push
xchg
mov
pop
inc
add
dec
sbb
out
cmp
cmp
sub
mov
out
xor
cmc
pop
loopne
fistps
mov
pop
mov
pop
leave
push
adc
sbb
push
xor
rcll
mov
fnclex
push
imul
push
push
and
mov
fldenv
add
fstpt
mov
lcall
jnp
fstl
sub
data16
iret
in
fwait
mov
cmp
xor
sbb
scas
icebp
or
popa
aam
shlb
and
fists
or
xor
addl
fdiv
push
jo
adc
mov
dec
xchg
das
aam
shll
and
xor
sbb
lods
pop
inc
iret
pop
xchg
lcall
test
mov
cli
jo
inc
fbstp
or
mulb
jl
and
and
mov
pop
pop
jb
and
cmpsl
mov
daa
fcmove
outsl
in
fld
orb
adc
mov
into
pusha
jo
sbb
sub
repz
push
fistpl
push
shl
ret
lods
push
xchg
jp
cmp
mov
jne
ja
xchg
addr16
rcr
bswap
popf
jno
aad
lret
hlt
cmp
call
add
pushf
xchg
in
into
mov
sub
fldenv
jb
mov
mov
and
inc
repnz
xchg
fisubl
xor
mov
xchg
lahf
cvtps2pi
add
aad
adc
inc
mov
call
mov
mov
pop
inc
fwait
xchg
mov
imul
lcall
andl
or
dec
jmp
jnp
adc
ret
gs
sub
jns
fcmovu
sarb
test
mov
movsb
jecxz
aas
fadd
cmp
mov
pop
push
cmpsb
fdivrl
out
push
cmp
enter
stos
loop
add
or
sbb
jne
cltd
xchg
cs
cs
jle
adc
popl
add
test
lret
fwait
mov
movsb
xor
nop
cltd
ja
fists
push
cli
and
imulb
aas
push
jo
cmp
aam
sub
pop
aam
stos
jo
popf
iret
jb
adc
gs
das
in
jle
rcrb
pop
sahf
fldenv
lock
mov
ret
sub
insb
fsts
push
push
adc
mov
and
outsb
jge
inc
cmp
mov
stos
adc
inc
mov
rcll
pop
mov
cmp
sbb
out
icebp
inc
lcall
ja
xchg
pop
pop
imul
pop
cmp
mov
repz
out
push
ss
mov
jnp
ds
test
dec
shll
push
jne
inc
in
jecxz
test
lds
lret
pop
nop
pop
jmp
mov
pop
xchg
in
fstps
pushf
cmp
stos
mov
mov
out
in
push
jle
jle
mov
insl
jp
in
pop
and
mov
icebp
movsb
dec
cmp
cmovle
dec
pop
imul
mov
sbb
xchg
dec
jnp
inc
mov
rep
dec
cmc
mov
daa
ret
test
dec
inc
test
push
scas
push
mov
imul
mov
cmp
shr
in
pusha
mov
lahf
imul
pop
cwtl
insl
add
js
shlb
mov
popf
mov
test
lret
and
out
xchg
cmp
mov
fcompl
lods
aam
test
in
rolb
xchg
je
ret
pop
stc
xchg
call
in
inc
xchg
or
call
or
push
ret
ja
sub
add
inc
and
rorb
adc
mov
push
or
iret
rcll
sar
jns
xor
out
cmpsb
push
mov
mov
or
fdivrl
fldcw
xor
jmp
push
jae
cmp
lret
push
pop
addr16
scas
and
in
lea
insb
inc
and
stos
xchg
pop
pop
adc
andb
in
test
shrb
cmp
adc
and
cli
mov
mov
cmp
mov
xor
out
icebp
sub
push
cmp
pop
icebp
xchg
cmc
xor
stc
add
dec
cltd
xchg
movsl
fstps
add
mov
dec
xlat
mov
rcrb
xchg
loope
out
andl
dec
sub
es
xchg
int3
test
pop
xorb
loop
mov
add
mov
push
popa
das
rorl
mov
rolb
mov
adc
mov
mov
add
test
fstp
xchg
frstor
insb
sbb
inc
add
sti
pop
rclb
outsl
xchg
in
or
pop
jle
dec
add
cmp
jae
jne
push
xor
xchg
les
jge
pop
into
ret
cmc
inc
mov
push
insl
adc
out
shr
push
sbb
mov
push
aam
arpl
adc
lret
and
add
mov
mov
mov
lods
sub
fidivs
lea
xchg
xchg
shl
mov
xor
scas
push
push
inc
pop
ja
insl
jecxz
pushf
sub
jae
mov
xchg
das
sarb
pop
cwtl
sarb
sub
jle
adc
and
sahf
aam
out
test
cld
lcall
int3
xchg
jg
stc
fnstcw
dec
push
fs
test
cmp
adc
out
shll
mov
mov
mov
inc
sbb
sub
lret
sub
test
dec
mov
push
push
xor
or
pop
movsb
addr16
sarb
aad
test
cmpsl
movsl
add
mov
stos
lods
inc
mov
or
jb
push
hlt
dec
push
shll
out
and
leave
movswl
popf
lcall
mov
sub
in
and
into
adc
pop
dec
lret
xchg
loopne
jge
aam
cli
lcall
dec
js
adc
out
leave
fwait
mov
subb
sub
push
lret
mov
xchg
adc
add
mov
movsl
adc
xchg
sub
lcall
xchg
sahf
mov
mov
sahf
pop
arpl
popa
mov
sahf
inc
jle
xchg
sarl
adc
inc
movsl
lret
ljmp
loope
push
and
pop
popf
cmp
mov
xlat
cmp
adc
mov
shll
stos
or
pop
xorl
imul
add
add
fdiv
popf
ret
shrb
repz
sbb
add
sbb
roll
rcr
mov
bound
idivb
cmpsl
movsb
mov
test
in
movsb
cld
out
pop
lods
lea
sub
std
rclb
xor
push
add
mov
mov
loopne
and
inc
in
cmp
jp
lds
push
sbb
mov
xchg
push
xchg
and
cltd
sbb
lds
aaa
into
sbb
call
push
xor
data16
cmp
scas
ljmp
or
mov
into
xor
das
mov
cld
xor
fmuls
outsl
ss
xchg
or
rorl
mov
leave
mov
lds
test
mov
sub
cmpsl
int3
cld
fwait
insl
sbb
clc
push
bound
adc
sbb
clc
mov
or
fwait
jno
ss
sti
ret
adc
dec
jge
xlat
sub
fnstcw
jno
ret
jae
stos
sub
sbb
stos
and
aaa
rcrb
push
dec
enter
add
mov
mov
push
rcll
xchg
or
push
iret
push
imul
hlt
sub
mov
and
push
lcall
pop
mov
les
test
sti
into
imul
or
mov
mov
mov
icebp
fmull
movsb
cmp
ffreep
add
push
xlat
jg
je
xor
mov
mov
repz
cmp
ret
fisubl
ja
adc
mov
cs
jge
es
inc
mov
or
mov
call
mov
int3
fimull
adc
add
int
push
aam
xchg
jb
ljmp
fisubrs
test
mov
lahf
sbb
cli
adc
mov
sbb
loope
sbb
jge
ljmp
dec
gs
jns
sub
mov
jnp
xchg
lea
sbb
mov
mov
lret
sarl
ljmp
fildll
sub
push
xor
and
lods
clc
jecxz
inc
sbb
cld
cmp
in
cmp
outsl
mov
xchg
or
xor
xchg
adc
sub
mov
lods
xchg
push
pusha
sbb
xchg
push
xor
imul
sub
cmp
ljmp
xor
cwtl
jne
and
stos
dec
stos
mov
xchg
xchg
mov
fwait
xchg
pop
out
adc
fmul
push
jns
cmpsl
mov
lcall
pop
stos
out
ret
mov
mov
out
in
call
pop
xchg
mov
sbb
jne
xchg
stos
jo
and
scas
dec
xchg
sbb
mov
dec
add
and
push
push
add
mov
pop
lcall
mov
mov
sti
xor
mov
dec
jl
mov
scas
cld
xor
clc
clc
mov
rorl
sub
dec
mov
clc
pusha
add
and
bound
jbe
push
push
pop
mov
push
mov
dec
cli
mov
leave
sub
nop
imul
loopne
push
cli
xchg
ret
mov
shll
fwait
add
in
xor
push
imul
aam
push
call
outsb
pop
mov
ja
cmp
ljmp
mov
mov
popa
pop
cli
mov
aad
jge
sub
dec
enter
stc
lcall
and
bnd
cli
pushw
mov
mov
sbb
mov
mov
out
movsb
xchg
or
pop
or
mov
xor
aas
jne
sbb
mov
aam
imulb
mov
imull
pop
xor
fistpl
adc
mov
sub
mov
mov
mov
mov
sar
mov
sahf
lds
or
xor
or
ficomps
es
or
subb
or
ficoms
mov
xor
fwait
jge
add
mov
fildll
out
insl
jbe
cmp
cmp
scas
xlat
popa
aam
sub
jmp
stos
andb
mov
sub
pushf
cmc
shlb
inc
inc
push
cmp
pusha
and
test
pop
or
roll
inc
inc
mov
and
mov
push
jge
addr16
mov
push
pop
xor
and
adcb
iret
ds
lods
mov
int3
cmp
xchg
sbbl
mov
lea
or
lret
idivl
rcl
pusha
and
mov
jbe
movsl
or
xchg
lock
in
xlat
in
pop
leave
mov
outsb
inc
cmp
mov
ja
mov
jecxz
clc
and
pop
mov
test
lahf
mov
sub
pop
mov
inc
out
lret
mov
xchg
loope
jns
mov
add
lds
in
xlat
sub
imul
add
pop
sbb
mov
mov
mov
xchg
pop
fs
ret
sub
sti
mov
pusha
cli
pusha
test
test
gs
fs
mov
push
mov
cmp
inc
jno
int
ljmp
inc
xchg
fwait
xchg
cld
bts
stc
ds
ss
hlt
pop
push
mov
repz
pop
mov
std
into
in
adc
daa
pop
push
dec
call
mov
scas
and
test
or
xor
repz
jne
xchg
loop
xchg
lcall
jl
leave
fiaddl
lea
mov
ret
cmp
add
mul
add
cmp
out
pop
pop
inc
fwait
and
fcmovnb
insb
fcompl
outsl
lea
lret
mull
dec
out
aad
repnz
xchg
or
xlat
or
or
mov
repnz
sub
mulb
jbe
jbe
add
pop
mov
jno
pop
fnclex
ljmp
mov
push
pop
outsb
mov
pop
jno
or
fldl
test
fidivl
cmp
sub
add
fimull
fisttpl
pop
sbb
insb
mov
add
andb
test
jecxz
dec
add
cmp
scas
cmp
jmp
pop
or
mov
test
mov
push
aaa
sbb
repnz
push
outsb
lcall
repz
je
int3
push
stc
movsb
adc
xchg
pop
inc
loopne
sti
sti
scas
mov
xchg
pop
sub
fwait
push
add
push
push
or
push
adc
add
mov
bound
dec
iret
pop
xchg
fnstcw
or
sbb
push
insl
out
ficoml
in
shrl
mov
in
mov
lret
adc
into
out
pop
repz
pop
lds
das
ljmp
xchg
mov
add
fwait
sbb
movsl
fstpl
dec
popf
outsb
outsb
sbb
arpl
repz
fcoml
iret
cli
push
div
dec
pop
das
xor
stc
or
jbe
aad
loopne
mov
jo
mov
add
loope
dec
pop
cltd
jge
and
push
pop
mov
xchg
outsl
sbb
jmp
fsubl
xor
in
cmpsl
loopne
dec
or
mov
inc
lea
dec
or
or
adc
inc
inc
cmpsb
ret
repz
sti
fcompl
ss
cwtl
lea
test
inc
pop
or
pop
mov
loope
fwait
and
mov
mov
test
gs
outsb
sbb
and
or
insl
gs
pop
push
jne
mov
cld
or
jns
xchg
pop
mov
subl
adc
push
push
popf
xor
outsl
push
add
add
add
imul
add
add
je
push
add
add
popa
insb
insb
sub
add
outsb
add
popa
jne
jns
add
insb
add
jae
push
outsl
sub
outsb
je
gs
popa
outsb
add
add
add
jbe
add
add
bound
outsl
add
jb
outsb
add
add
dec
add
inc
add
inc
add
inc
add
push
add
sub
add
add
outsl
add
add
add
add
jb
add
je
add
add
arpl
push
add
add
add
add
jne
je
add
je
gs
add
push
add
inc
add
dec
add
jb
outsl
add
add
add
add
je
add
imul
outsb
add
jae
jae
cmp
