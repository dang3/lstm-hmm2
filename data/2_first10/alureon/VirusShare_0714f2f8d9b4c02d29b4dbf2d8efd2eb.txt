imul
mov
xorb
xchg
cmpsb
pop
push
add
add
daa
xor
out
pop
jb
and
mov
ror
in
scas
imul
cmovo
xor
rcrl
mov
ror
loopne
push
and
scas
pop
push
inc
cmp
and
into
jge
and
add
int3
and
xor
cmp
jmp
mov
mov
inc
lcall
js
add
pop
insl
pop
shr
jae
xor
jae
jae
add
add
out
pop
add
pusha
push
in
in
cmpsb
inc
inc
xor
jecxz
inc
inc
push
inc
dec
push
inc
inc
dec
dec
in
in
mov
inc
dec
pop
inc
inc
inc
push
push
mov
inc
inc
sbb
mov
dec
push
inc
inc
pop
inc
dec
push
inc
pcmpgtb
fs
push
arpl
xor
push
adc
data16
popa
jb
pop
dec
imul
out
or
outsl
ja
pop
inc
jne
pop
outsb
je
gs
outsl
out
fsubrp
mov
scas
jo
outsl
adc
mov
jo
jg
cmp
das
xor
xor
xor
xor
jne
xor
mov
addr16
ja
bound
ja
addr16
addr16
xchg
inc
push
add
fcmovnu
insl
fbstp
cmp
je
sub
cmp
adc
mov
js
or
push
inc
sub
mov
sahf
sbb
dec
cmp
fdivs
outsb
or
add
pop
and
scas
sbb
scas
add
outsl
test
xchg
add
push
push
xor
push
mov
fsubr
out
pop
and
add
adc
mov
mov
mov
adc
add
das
call
decl
lods
lea
push
push
adc
les
repz
mov
mov
or
push
push
push
or
or
pop
adc
clc
pushl
lea
sbb
push
outsl
fistpll
insb
sub
dec
es
mov
imul
movsb
push
push
test
and
jne
mov
outsb
cmp
inc
add
insb
incl
pop
pop
pop
pop
jmp
jle
add
ret
nop
push
mov
sub
sbb
fisubrl
jg
aas
pop
xor
lea
stos
stos
pop
pop
insb
dec
out
fbld
mov
lock
paddusb
outsb
out
movl
push
lods
pushl
in
in
and
jl
or
or
fdivrp
fistpl
jl
or
adc
or
ja
out
in
fwait
out
je
add
add
pop
ret
sub
int3
add
xchg
scas
mov
or
or
in
outsb
ret
cltd
inc
les
add
xor
mov
fld
and
clc
not
add
arpl
dec
int3
mov
pop
pop
ljmp
clc
in
lock
addb
add
lret
mov
shrb
jnp
rorl
insl
fistpl
aad
push
adc
push
cmp
rorl
xchg
in
fisttps
jle
sub
jns
fldt
xor
adc
out
or
arpl
push
clc
mov
push
sub
push
or
test
adcb
aas
push
mov
and
pusha
loope
mov
xchg
push
popf
rclb
dec
push
pop
imul
jbe
mov
mov
pop
push
push
adc
pop
ret
outsb
mov
cmp
and
pop
cmp
icebp
and
push
xor
cmp
cmpsl
adc
shrb
and
pop
or
mov
sbbb
cmpl
xchg
and
and
mov
xor
add
push
js
dec
cmp
xor
add
jmp
sbb
adc
adc
test
or
pop
add
fistpll
out
xor
push
cmp
ljmp
pop
je
cmp
je
pop
pushf
jbe
ja
adcl
shr
daa
cmp
je
push
add
mov
mov
ja
pusha
cli
mov
stc
cmc
shl
push
inc
and
std
lock
cmp
je
imul
pushf
and
jmp
cmp
je
movsl
lock
and
add
neg
and
cld
data16
sub
dec
mov
test
pop
in
cmp
add
movsl
or
sbb
sub
inc
push
std
imul
imul
test
negl
or
xor
insb
adc
add
xchg
inc
adc
sub
jle
sub
lods
mov
push
and
xchg
je
out
jne
mov
jne
aad
and
add
popa
sbb
and
in
mov
nop
movsb
mov
xchg
and
or
fadds
hlt
daa
sub
cmp
or
or
dec
cmp
push
mov
add
ficoms
pop
xlat
mov
or
push
adc
push
sub
insb
in
pop
lcall
dec
or
add
sub
lea
xor
jb
into
or
push
enter
adcb
push
cmp
xchg
or
js
pop
mov
pop
mov
fists
sub
inc
adcl
rcrb
xor
adc
mov
rcrb
test
cmpsb
or
scas
hlt
xor
outsb
sub
aam
add
dec
xchg
dec
mov
jnp
sti
fimull
or
in
adc
mov
leave
xlat
lcall
jo
jnp
adc
jns
in
push
in
insb
lods
sub
loopne
cmc
add
mov
std
pusha
testb
pop
fld
xor
cmp
push
adc
or
fcoml
add
insl
xlat
jecxz
dec
adc
mov
movsb
sbb
cmpsb
pop
insl
inc
ja
imul
into
in
cmp
or
and
daa
adc
test
push
out
lea
mov
xchg
rclb
or
iret
int3
lret
jp,pt
jo
adc
or
rclb
dec
sbb
cmp
adc
arpl
rcr
push
push
push
push
clc
sbb
push
test
je
or
std
or
iret
push
ret
adc
pop
or
or
jecxz
adc
push
push
mov
inc
jp
les
fucomi
pop
cmpb
xchg
inc
data16
push
fistps
push
pop
loop
jne
dec
push
push
pushw
in
push
and
xchg
es
add
fimull
mov
jne
lea
fbstp
sub
lods
rorb
arpl
mov
dec
mov
push
add
push
addl
push
sub
insb
movsl
push
sarb
and
sti
lds
jg
sarl
push
insl
pop
into
movsb
jmp
xchg
cmp
das
repz
dec
cmp
jmp
shrb
loopne
xor
idivb
jl
adc
roll
les
incl
call
shr
test
je
xor
mov
adc
add
out
xchg
mov
fcompl
sub
lods
add
sub
rcr
add
jmp
mov
loope
mov
cmp
insb
sbb
push
cmp
fsubrs
mov
push
mov
xchg
lcall
dec
je
xor
jg
mov
pop
push
mov
ret
ror
je
or
push
insb
into
cmp
adc
mov
add
out
mov
sbb
push
inc
pop
insl
arpl
xor
mov
pop
cmpsb
orl
movsl
add
pop
inc
inc
rorb
adc
inc
dec
push
adc
pop
sbb
push
outsb
or
sbb
lahf
push
pop
out
xlat
addb
xchg
add
cmpsb
pop
je
add
push
mov
push
fstpl
jo
pusha
xor
cmp
jnp
mov
sub
inc
imul
push
arpl
dec
cmp
adc
js
rcrb
movsb
jbe
aam
loop
mov
fidivrs
mov
xchg
fstpl
cld
fisubs
or
mov
cmp
jl
lock
add
lea
adc
mov
push
cwtl
push
pushf
add
divb
repnz
mov
pusha
pop
xor
cmpsb
inc
adc
pop
loope
shrd
pop
push
dec
mov
push
insl
pop
ljmp
into
les
inc
inc
push
mov
fcoms
add
test
xor
mov
cld
pop
sub
mov
sub
lea
sti
add
push
mov
dec
inc
neg
cwtl
jmp
js
lock
adc
in
or
jnp
push
fld
pop
lods
cmp
adc
sub
xor
data16
jbe
sbb
movsl
mov
sbb
pop
out
pop
lds
cmpsb
add
mov
cli
cmc
push
testb
or
mov
or
mov
and
push
push
push
adc
je
push
sbb
or
adc
push
outsl
mov
adc
shl
add
add
inc
std
ret
pop
nop
ret
sahf
add
sar
fwait
push
pop
das
fnstcw
lahf
xchg
pop
fsubrl
pop
xor
addr16
sub
cltd
inc
idiv
or
add
jo
add
or
out
mov
xor
jle
inc
test
push
push
or
clc
sarl
add
mov
das
xchg
jmp
adc
xor
push
add
push
push
or
stos
push
jbe
xor
fisttps
fnstsw
cmp
jl
jp
add
or
leave
jne
outsb
xchg
shlb
cmpsb
xor
dec
jmp
cmp
push
lea
in
add
jne
sbb
test
add
scas
in
sbb
es
daa
in
jb
push
inc
and
loop
jg
or
sar
mov
inc
push
dec
cs
insb
addr16
popa
mov
or
mov
add
je
popa
jae
inc
jb
outsl
jb
pop
jle
insb
or
popa
je
inc
insb
outsl
jae
dec
popa
outsb
fs
gs
lea
arpl
jae
mov
daa
gs
jbe
sub
pop
jnp
or
sbb
add
or
or
dec
pushw
or
cli
push
outsl
imul
pusha
mov
mov
xor
in
fadds
push
jns
gs
inc
imul
scas
fnstsw
jo
push
cmp
push
imul
pop
negl
ljmp
dec
jne
gs
push
ds
mov
push
js
adc
jne
mov
dec
outsb
jne
outsb
inc
popa
arpl
int
ret
data16
adc
jbe
outsl
push
je
popa
insb
adc
sahf
dec
es
inc
jne
insb
imul
loopne
pop
mov
out
int
or
and
push
rcll
mov
fisubrs
inc
insb
insb
jno
pop
imul
or
sub
test
or
push
outsb
insl
pop
mov
fidivrl
jne
push
dec
popa
incb
sbb
outsb
or
mov
mov
sahf
sub
shrb
xchg
movsl
fidivl
push
int
dec
outsb
imul
inc
xchg
lret
insl
arpl
jo
push
push
arpl
inc
dec
insb
and
mov
imul
or
and
testl
inc
fs
pop
sub
imul
aam
fnstsw
adc
mov
insl
in
cmp
or
pop
shrl
fs
mov
sbb
ficomps
push
adc
jnp
or
imul
mov
jo
pop
jno
repnz
mov
imul
je
adc
fdiv
add
inc
push
pop
inc
fistpl
outsb
jecxz
ds
mov
test
ret
inc
mov
mov
jno
notl
add
test
fsubs
fs
ret
mov
pop
icebp
outsb
sbb
xchg
cmp
adc
adc
popa
out
jne
aas
out
xchg
lea
sbb
add
outsl
dec
or
pop
add
cmp
pop
push
or
inc
or
es
mov
push
push
sub
adc
pop
or
push
adc
es
adc
lcall
adc
inc
pop
sbb
push
addr16
add
xor
push
pop
adc
or
or
jg
call
dec
sub
cwtl
and
es
clts
or
dec
add
sub
ljmp
and
adc
inc
sbb
adc
pushf
or
dec
and
cld
xchg
mov
dec
add
add
push
inc
loopne
push
and
add
nop
out
mov
add
adc
xchg
jg
add
pop
mov
inc
fiadds
pop
rolb
lret
pop
adc
cmp
add
in
add
add
mov
adc
pop
fnstcw
jmp
cmp
cs
pop
fdiv
pop
int3
sti
and
repnz
scas
inc
sbb
adc
pushf
add
add
add
and
incl
add
add
add
add
jne
pusha
mov
lea
push
or
jmp
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
popa
xor
ret
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
popa
jmp
