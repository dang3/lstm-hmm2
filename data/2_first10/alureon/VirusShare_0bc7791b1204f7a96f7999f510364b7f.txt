lea
xor
xor
lea
mov
xor
mov
jmp
mov
add
mov
mov
jmp
lea
mov
adc
xchg
neg
mov
xor
rcl
jmp
shl
mov
push
not
lea
rcr
lea
adc
mov
xchg
mov
xor
ret
mov
xor
jmp
mov
ror
neg
popl
shr
mov
lea
lea
add
lea
lea
adc
mov
lea
neg
jmp
xor
adc
adc
mov
mov
xor
add
xor
xor
mov
add
add
jmp
ror
xor
mov
xchg
push
adc
ror
mov
mov
mov
xor
neg
rol
jmp
xor
mov
mov
add
lea
mov
movl
xor
neg
mov
and
jmp
lea
mov
ror
add
and
xor
rcr
jmp
decl
jne
xor
mov
mov
not
xchg
mov
jmp
mov
xor
add
not
mov
not
ror
not
neg
xor
xor
lea
xor
mov
jmp
mov
add
adc
mov
add
shrl
adc
xor
mov
xor
mov
mov
lea
jmp
lea
mov
not
xor
xchg
neg
xor
adc
jmp
and
xor
shl
lea
xor
lea
lea
xor
mov
add
mov
jmp
not
xor
rcl
lea
shr
xor
mov
shr
and
jmp
rol
mov
add
xor
xor
lea
lea
jmp
lea
mov
add
lea
mov
mov
mov
add
xor
not
not
mov
jmp
xor
shr
shl
and
not
lea
lea
jmp
adc
xor
lea
rcr
xor
rcr
jmp
lea
xchg
xor
xor
pushl
add
not
not
lea
neg
xor
call
jmp
rcr
neg
xor
mov
lea
jmp
rol
lea
shl
xor
pop
neg
neg
xor
xor
mov
xor
xor
jmp
shr
mov
xor
mov
neg
lea
rcr
mov
push
xor
xor
jmp
rcl
lea
xor
mov
neg
jmp
neg
jmp
mov
mov
mov
xor
lea
mov
ror
xchg
jmp
push
mov
sub
push
push
push
lea
jmp
xor
lea
lea
xor
and
not
jmp
not
rol
lea
push
mov
mov
xor
pushl
jmp
ror
mov
add
lea
lea
xor
neg
xor
xor
rcr
jmp
lea
lea
mov
lea
xor
ror
rol
push
mov
jmp
not
xor
mov
adc
lea
add
rcl
neg
push
call
add
xor
mov
mov
lea
jmp
neg
and
neg
mov
mov
mov
neg
lea
not
mov
xor
adc
mov
mov
jmp
rol
not
lea
mov
neg
rcr
lea
rcl
jmp
push
push
scas
std
out
cmc
xor
in
xor
push
or
cmp
or
add
or
movsb
aaa
ret
fdivr
mov
sbb
int
jmp
insb
hlt
test
mov
jnp
jle
mov
ret
fdivrp
stc
fadd
ss
mov
lock
dec
f2xm1
movl
sub
aaa
cmp
pop
jle
enter
xchg
add
or
mov
add
jle
ds
xor
or
cltd
movsb
push
hlt
jp
pop
ret
cmc
xor
addl
xor
push
xorb
sub
cld
lea
pop
jnp
je
in
cltd
pop
cmp
dec
mov
jecxz
push
bound
orl
xchg
je
mov
cli
mov
xor
or
aaa
int
pop
into
test
mov
repz
dec
mov
movsl
fsubl
repz
aaa
dec
std
inc
loope
pop
aaa
pop
lock
orl
mov
dec
sub
push
into
icebp
xor
xchg
lret
jnp
sbb
std
mov
shll
pop
xchg
mov
hlt
xchg
mov
repz
xor
outsb
jp
mov
cmp
or
xor
fsts
xchg
sub
xor
xchg
adc
lea
je
test
xor
or
lret
jnp
lahf
xor
inc
clc
cli
pop
in
lret
icebp
repz
xacquire
adc
push
adc
popa
push
xchg
add
cmc
mov
flds
cmc
gs
cmc
xor
call
jnp
jle
pusha
adc
in
test
jle
repnz
dec
cmc
mov
push
call
lea
je
xchg
cmc
out
les
mov
lock
xchg
push
pop
pop
mov
lock
and
call
movsl
fistl
cwtl
mov
fucomp
push
lock
jmp
call
sub
scas
jmp
fisttpl
loop
roll
add
pop
pop
cmp
iret
in
pop
loopne
inc
lcall
push
and
sbb
into
and
lds
sub
std
std
scas
jmp
arpl
rorb
arpl
scas
jmp
jecxz
fucomi
or
push
in
int
fs
sub
xchg
punpcklwd
mov
iret
stos
leave
inc
das
pop
push
lcall
mov
rolb
test
das
xchg
sbb
fiaddl
mov
xor
out
aad
xlat
ljmp
pop
push
jmp
scas
jmp
or
and
adc
push
pop
xor
inc
jmp
and
xchg
lods
loopne
inc
cmp
into
cli
adc
or
lods
lods
sbb
scas
ljmp
sub
int
bound
add
push
push
pop
add
in
int3
dec
jmp
in
push
cli
bound
shl
adc
das
fidivl
imul
call
and
fdiv
fisttpl
scas
lcall
inc
cmpsb
call
mov
inc
cmp
call
and
inc
roll
movsl
fisubs
hlt
pop
out
or
add
int
jmp
call
enter
xor
out
jl
or
mov
or
popf
enter
fistpll
fildl
add
xor
sti
add
push
pop
xor
sbb
test
int3
ror
and
lds
sub
loopne
scas
sbb
xor
push
jmp
inc
sbb
cmpsl
add
int
jmp
repz
jmp
icebp
lea
test
call
xchg
pop
pop
xor
lods
adc
sbb
icebp
lea
movsb
adc
jo
ss
mov
call
mov
call
lea
push
pop
imulb
icebp
lea
jmp
icebp
lea
popf
push
mov
dec
push
xor
lods
cmp
call
lcall
imul
std
ljmp
adc
xor
out
scas
jmp
int
pushf
loopne
rcrb
call
inc
cltd
ljmp
and
stos
es
incb
sbb
call
mov
mov
shlb
push
push
mov
shl
arpl
loope
arpl
loope
xchg
xchg
out
xchg
fs
shll
loope
mov
bound
test
sub
bound
inc
fscale
jmp
pop
ljmp
sub
shrb
push
popf
cmp
je
cmpsb
int3
add
xor
arpl
jmp
arpl
jmp
loopne
fsub
jecxz
fstpt
cmpb
adc
xor
gs
add
pop
inc
jg
xchg
frstor
jecxz
arpl
lods
pushf
loopne
shl
inc
outsl
popf
hlt
ret
idivl
out
test
pop
rcl
and
mov
add
aaa
dec
insb
std
add
mov
jmp
xchg
ret
fstpt
dec
frstor
call
inc
jmp
psubsw
int
xlat
jmp
cmpsl
bound
sbb
or
pusha
add
fdivrs
scas
jmp
push
inc
ljmp
int
push
int
jmp
arpl
jmp
arpl
jmp
loopne
loope
ret
ret
sub
in
pushf
lds
xchg
and
and
in
out
bound
bound
rorl
and
loopne
lods
jmp
fiadds
sub
int
ljmp
pop
popf
std
pusha
movsb
sub
int3
push
pushf
loopne
jg
add
lret
dec
fmul
scas
jmp
test
and
lock
cli
loope
popf
mov
out
inc
scas
shlb
xchg
xchg
mov
es
inc
repnz
mov
sub
leave
scas
sub
arpl
call
push
movsb
rclb
lods
in
loope
push
push
test
mov
out
ja
jmp
push
int3
jecxz
loop
movl
mov
mov
pushf
sub
mov
fidivl
cmpsl
mov
ljmp
es
sub
xchg
and
lds
inc
mov
sub
and
xchg
pushf
mov
mov
orb
mov
and
lret
or
lret
jecxz
cmpsl
in
jmp
cld
cmc
arpl
mov
insl
mov
sarb
fldl
out
fstl
rolb
call
jmp
mov
xchg
out
pop
or
out
jecxz
lea
les
loop
stc
std
rolb
imul
shl
bound
cmp
jmpw
mov
sahf
fldenv
cmp
outsb
imul
mov
mov
and
xorb
call
jmp
and
pushf
push
inc
sub
pop
shl
mov
adc
int3
test
xor
aaa
mov
jmp
out
mov
out
fistpl
outsb
add
jg
jl
loopne
call
and
pop
shlb
cld
mov
imul
imull
xor
fs
out
out
popf
inc
xchg
out
push
xor
sarl
xchg
sarl
sub
cmp
adc
xor
in
adc
in
and
ret
jne
roll
or
pushf
pop
xchg
rol
out
into
sti
cmpl
insb
cld
mov
divb
mov
fldt
andl
out
lret
out
rorl
and
lods
fmul
pusha
push
mov
aas
xor
imul
test
xor
pushf
out
lock
mov
popf
leave
mov
dec
sbb
add
in
cltd
fneni(8087
out
outsb
in
in
jecxz
test
sub
test
mov
mov
in
in
in
dec
test
imul
outsl
fnclex
out
loope
ret
sub
xchg
rcll
int3
push
lahf
out
xchg
fld
xor
fwait
sbb
f2xm1
addr16
test
sbb
sahf
scas
mov
or
mov
inc
mov
sub
cltd
lret
xchg
xchg
adc
pop
sbb
push
adc
mov
and
lahf
mov
mov
push
iret
cwtl
mov
sbb
pop
mov
add
mov
lods
out
mov
xor
pop
out
mov
dec
mov
arpl
mov
test
dec
jmp
cmpsb
leave
outsl
mov
fucomp
insl
cmp
mov
sub
int3
jno
sub
xchg
mov
dec
sbb
ret
cli
rcl
and
sahf
add
ficompl
out
jbe
mov
adc
outsl
insl
mov
mov
in
lock
mov
loopne
cltd
fisubl
insl
sahf
gs
dec
nop
hlt
movsl
mov
jge
roll
push
mov
repnz
or
mov
jge
in
xchg
imul
mov
outsb
repnz
sbb
rcll
and
addr16
lods
adc
push
fcmovnu
imul
mov
mov
xor
out
adc
jp
in
enter
push
inc
out
out
test
fucomp
stos
inc
in
repz
push
xor
xor
test
out
fucomi
leave
jmp
sub
test
imul
push
mov
sbb
jo
xor
mov
cs
dec
add
aas
pop
adc
jb
arpl
ret
in
cli
mov
mov
rcrb
hlt
pop
xor
out
or
xchg
or
jnp
out
adc
aas
push
push
sub
mov
or
cmp
xchg
lods
repz
sub
mov
jns
lret
and
int3
cmp
out
adc
lret
lods
or
fnsave
jecxz
bound
mov
and
xchg
sub
push
in
fs
loop
lcall
loope
test
dec
enter
test
enter
fnstcw
pop
inc
dec
out
in
test
fcomp
push
movsl
adc
jo
adcb
mov
out
lahf
mov
mov
shlb
adc
adc
mov
add
lock
ja
push
addr16
sahf
or
mov
out
lcall
std
jp
sbb
ret
xor
stos
repz
std
push
faddl
jbe
mov
stos
mov
lods
stos
mov
arpl
lods
mov
sub
movsl
fadd
mov
loope
aad
mov
insl
add
lahf
hlt
inc
jmp
hlt
sti
loop
mov
lods
adc
lret
scas
negb
or
es
add
cmpsb
in
xor
adc
adc
xor
dec
jmp
lret
icebp
ret
lods
iret
push
lds
jb
test
in
negb
js
lods
add
test
stos
loope
loop
mov
cli
adc
lret
cli
adc
jp
sbb
inc
loop
cmp
loope
repnz
or
mov
shrb
int
lds
out
push
shll
pusha
int3
out
stos
lock
ficompl
test
mov
das
popf
inc
pop
repnz
dec
stos
or
mov
addl
sbbl
or
or
mov
in
rcr
clc
sub
mov
mov
rol
fstpl
insb
ja
mov
cld
rclb
pop
lods
pop
movsb
out
mov
test
in
adc
in
cmp
adc
jns
inc
popf
inc
lds
lock
leave
inc
in
mov
add
or
dec
fs
and
jge
pop
pop
cld
mov
lods
and
xchg
jge
aam
loopne
mov
test
mov
cmp
iret
leave
pop
inc
adc
mov
test
dec
ror
inc
fwait
mov
dec
xchg
divb
inc
fucomp
jae
jmp
sub
mov
xchg
fs
outsl
cmpsl
mov
stc
out
rcll
leave
iret
sub
cli
mov
out
sbb
xor
fmulp
jmp
roll
out
lds
sbb
lods
xor
sbb
fcmovnb
add
imul
int
daa
dec
out
lods
nop
push
jecxz
lea
loopne
adc
out
mov
imul
fs
sbb
popa
loop
xchg
and
ffree
sbb
test
sub
enter
push
mov
dec
into
movsl
orl
movsl
sub
jmp
lods
insb
in
ljmp
inc
and
ds
sbbb
clc
lcall
mov
pop
fsubs
fwait
lret
fucom
cmp
jno
in
cld
cmpl
stc
pop
pop
into
dec
jecxz
mov
jb
sti
inc
out
xor
icebp
insl
mov
in
or
mov
in
imul
mov
gs
stos
or
aam
test
std
mov
int3
adc
lock
movsb
lods
fstpl
in
xor
sub
test
inc
leave
imul
dec
movsl
mov
insl
and
stos
and
sub
lret
out
jle
daa
inc
add
pxor
loope
