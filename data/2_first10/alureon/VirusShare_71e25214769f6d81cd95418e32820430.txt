push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
push
mov
sub
mov
push
push
push
push
mov
movl
call
andl
movl
mov
movl
mov
mov
movl
mov
mov
mov
mov
mov
imul
xor
add
incl
mov
push
push
mov
call
mov
mov
mov
mov
mov
xor
mov
div
mov
mov
mov
mov
sub
not
add
xor
mov
mov
incl
add
cmpl
jb
cmpl
je
mov
mov
jmp
push
call
mov
mov
mov
xor
push
push
push
push
call
movl
mov
push
shl
push
add
incl
push
push
call
mov
mov
test
je
push
call
mov
push
push
call
mov
call
add
cmpl
je
cmpl
jne
lea
push
push
pop
add
xor
div
push
pushl
push
call
mov
push
push
push
push
call
lea
mov
lea
add
lea
add
mov
mov
mov
mov
and
call
mov
mov
mov
call
mov
mov
push
push
mov
xor
push
push
mov
mov
call
mov
lea
push
push
push
lea
push
pushl
movb
pushl
movb
push
call
push
push
push
call
mov
call
mov
call
test
je
pushl
mov
pushl
pushl
pushl
call
cmpl
mov
jne
push
call
test
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
mov
push
mov
sub
mov
push
mov
push
push
lea
mov
call
lea
xor
call
test
je
test
je
cmpb
je
mov
push
call
mov
push
mov
call
mov
lea
push
call
mov
test
je
push
push
push
push
call
add
push
call
test
je
push
push
push
call
mov
test
jge
push
push
push
call
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
call
mov
mov
pop
pop
pop
call
leave
ret
push
mov
push
push
mov
imul
push
mov
cmp
jb
mov
push
call
mov
add
imul
push
xor
pop
div
mov
mov
mov
mov
sub
mov
test
je
mov
sub
push
mov
call
xor
divl
mov
add
cmp
jae
mov
mov
imul
xor
divl
xor
mov
sub
imul
div
mov
cmp
jae
mov
sub
push
pushl
pushl
call
add
add
add
add
cmpl
jne
pop
pop
pop
leave
ret
mov
mov
ret
push
mov
sub
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
jne
inc
jmp
andl
push
push
lea
lea
cmpl
mov
je
mov
jmp
mov
mov
add
xor
nop
movb
mov
mov
inc
cmp
jb
mov
test
je
lea
movsbw
mov
add
inc
mov
test
jne
lea
push
call
mov
test
je
mov
add
andl
cmpl
je
mov
mov
mov
test
jns
and
jmp
add
add
push
pushl
call
mov
test
je
incl
mov
lea
cmpl
jne
mov
incl
mov
imul
add
lea
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
push
mov
testl
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
pop
ret
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
test
je
andl
mov
sub
add
mov
mov
mov
lea
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
cmpl
mov
je
or
sub
mov
mov
sub
add
mov
mov
mov
lea
push
push
push
call
mov
mov
mov
sub
add
mov
movzwl
add
lea
movzwl
lea
mov
mov
mov
andl
xor
cmp
jae
lea
mov
mov
addl
push
lea
pop
rep
mov
add
movzwl
add
incl
cmp
jb
mov
mov
add
pop
mov
xor
pop
inc
pop
leave
ret
mov
push
mov
push
mov
xor
mov
test
movl
je
push
call
pushl
call
mov
xor
inc
pop
pop
ret
mov
mov
mov
mov
rol
imul
add
mov
mov
mov
ret
push
lea
sub
mov
push
push
push
push
push
push
mov
call
push
push
call
test
je
push
xor
push
call
push
mov
call
mov
cmp
je
lea
push
push
call
mov
mov
mov
mov
push
push
mov
call
cmp
jne
movl
push
push
call
push
push
mov
call
xor
cmp
setl
mov
mov
cmp
mov
je
mov
cltd
sub
sar
mov
push
push
call
mov
neg
sbb
and
add
push
mov
call
push
mov
call
movzwl
push
call
pop
pop
push
push
push
call
push
push
push
call
push
push
lea
push
call
lea
push
call
mov
mov
mov
movzwl
xor
jmp
cmp
jne
cmpw
je
inc
inc
mov
cmp
jne
jmp
xor
inc
lea
push
movl
movl
call
mov
push
pushl
call
push
push
push
push
push
pushl
mov
call
cmp
mov
mov
jne
xor
push
pop
lea
rep
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
movl
movl
movl
mov
movl
movl
call
test
je
mov
push
mov
imul
cltd
pop
idiv
push
push
mov
mov
add
mov
lea
mov
mov
shl
mov
lea
push
call
mov
mov
sub
sub
mov
cmp
mov
mov
jle
mov
push
pushl
neg
push
push
pushl
sbb
push
push
push
and
add
push
push
push
push
call
cmp
mov
je
lea
push
call
push
push
push
pushl
call
test
jne
call
xor
jmp
call
pushl
call
pushl
pushl
call
pushl
call
push
pushl
call
mov
xor
cmp
sete
push
call
cmp
je
call
cmpl
je
cmpl
je
push
push
push
pushl
call
xor
inc
pop
pop
pop
add
leave
ret
push
call
pop
ret
mov
push
mov
sub
mov
push
push
push
mov
mov
mov
push
mov
lea
push
pushl
pushl
call
lea
xor
test
je
push
push
push
call
add
test
je
push
add
push
call
inc
pop
add
cmp
pop
mov
jl
mov
mov
pop
pop
mov
pop
call
leave
ret
push
mov
mov
mov
mov
mov
mov
cmp
jb
push
push
mov
mov
mov
lea
xor
test
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
mov
mov
lea
ror
lea
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
mov
inc
cmp
jb
pop
pop
pop
ret
mov
push
mov
xor
cmp
jne
mov
jmp
mov
push
mov
mov
test
je
mov
inc
inc
decl
jne
cmpl
pop
jne
dec
mov
movb
pop
ret
jmp
mov
push
mov
push
mov
test
je
push
mov
test
je
andl
push
call
push
call
push
call
test
je
push
call
push
call
mov
push
call
push
call
pop
pop
pop
ret
jmp
push
mov
sub
mov
mov
mov
sub
mov
je
mov
test
je
push
mov
add
test
je
push
push
mov
sub
mov
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
addl
decl
jne
mov
test
jne
pop
pop
pop
xor
inc
leave
ret
push
mov
sub
push
push
mov
xor
cmp
je
mov
cmp
je
cmp
je
cmp
je
add
push
lea
push
push
call
mov
add
add
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
sub
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
mov
mov
lea
ror
mov
lea
add
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
cmp
jb
mov
mov
test
je
mov
sub
mov
mov
inc
dec
jne
pushl
mov
pushl
pushl
pushl
pushl
call
mov
mov
mov
call
mov
add
push
pushl
pushl
pushl
call
add
pop
jmp
xor
pop
pop
leave
ret
mov
push
xor
cmp
je
cmp
push
mov
je
push
call
jmp
push
push
push
pushl
call
push
push
push
pushl
call
push
push
push
pushl
call
pop
pop
ret
push
mov
sub
push
lea
push
push
movb
call
lea
push
call
add
cmpb
jne
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
mov
jmp
mov
leave
ret
add
cmpsl
inc
mov
jle
aad
push
or
xchg
addb
adc
xor
adc
inc
jne
iret
push
xor
aad
ret
aam
stos
sub
loopne
loope
imul
and
dec
pop
stos
or
leave
pop
sub
fists
popf
out
jne
cmp
fsubrp
fisttpl
enter
mov
jno
int3
ret
sti
negl
mov
lods
mov
jo
jg
cmp
lahf
insb
fdivrl
xchg
fabs
dec
dec
loop
pop
outsl
lcall
push
mov
add
notl
add
add
cmp
insb
jl
mov
cmp
movsb
pop
js
adc
mov
mov
cmp
adc
push
pop
mov
aam
into
in
cmp
xchg
pusha
pushl
andb
cs
dec
mov
add
xor
and
in
xchg
popf
loopne
cld
mov
cmpsb
cmp
mov
mov
jnp
dec
lods
mov
xorl
add
xchg
outsb
dec
and
hlt
add
pop
test
fistps
fidivrl
push
pop
pop
and
mov
jl
paddb
ljmp
data16
ljmp
cwtl
cmp
stos
and
push
das
mov
adc
popf
pusha
mov
push
sub
and
call
insb
dec
lods
fisttpll
int3
mov
mov
mov
imul
and
xchg
inc
cmp
lock
pop
add
lret
mov
pushl
xlat
lea
mov
jae
loopne
jecxz
push
int
rorb
mov
pop
xchg
movsl
rclb
jl
lret
and
pop
clc
out
fbstp
pop
mov
fdivrp
dec
mov
or
out
test
fcomps
dec
stos
es
adcb
sbb
cmp
cmc
in
jmp
push
cmp
into
les
add
jecxz
mov
mov
ret
out
hlt
popa
sub
jle
aas
pop
mov
and
adc
rorb
stc
stos
adc
push
les
jge
cmp
and
jge
push
cmc
dec
mov
sbb
jo
fwait
xchg
sbb
cmp
bnd
call
cld
imul
sub
mov
imull
mov
xchg
adcl
ljmp
add
add
xchg
mov
push
push
jo
fs
test
loope,pt
mov
cltd
out
test
inc
lock
scas
dec
xorl
lds
dec
fiadds
and
xchg
cmc
stos
repz
loope
push
sub
adc
hlt
mov
rcrl
idiv
mov
push
dec
mov
icebp
imul
push
push
add
popl
add
inc
lea
fldl
mov
or
xorl
mov
es
xchg
or
sbb
inc
rorl
fbld
dec
mov
mov
sub
jb
pop
mov
rcrl
pop
fldenv
inc
add
nop
dec
and
sbbl
lds
insb
leave
pop
stos
jnp
stc
push
dec
mov
test
popa
fisttpl
pop
and
or
pop
stos
add
pop
jmp
or
jecxz
cli
mov
dec
xchg
push
mov
out
out
mov
inc
cltd
ja
xor
fs
fcmovnu
xor
lret
clc
mov
fdivr
jno
inc
cmc
or
in
addb
out
test
inc
int
movsb
jg
mov
ret
fiaddl
push
and
xchg
or
int
inc
sub
pop
dec
add
sbb
add
data16
mov
loopne
adc
gs
shll
les
pop
jb
add
frstor
test
inc
mov
stos
pop
adc
mov
xchg
addr16
or
orl
sahf
aam
sarl
and
inc
adc
pop
icebp
sbbb
ja
jns
xchg
xchg
mov
add
add
sbb
cltd
fcomps
xlat
std
fmul
bound
aam
cmp
mov
les
fbstp
lret
push
xor
fcmovne
ja
cmc
sti
jle
or
imul
mov
insl
mov
enter
xchg
loopne
das
scas
xchg
pop
cmp
dec
iret
cld
rcll
stc
stos
jb
push
sbb
lret
imull
stc
pushf
sub
fs
sub
repnz
aad
imul
push
and
mov
push
enter
adc
inc
jecxz
mov
fldt
sti
fnstenv
cmp
pop
cs
push
stc
jae
mov
js
jmp
outsl
pop
push
out
add
adc
add
sub
cmp
aas
test
xorb
lret
push
add
inc
add
lret
add
test
xor
mov
aas
ds
mov
mov
and
pop
pop
jbe
fs
cmpsl
mov
bsr
hlt
lods
sarl
xchg
push
adc
jmp
jmp
fistps
lods
shll
fcom
or
sbb
fstpl
add
lods
imul
mov
fists
push
lret
jno
call
add
or
aam
push
and
or
lret
ljmp
movsb
xor
xchg
add
dec
mov
pushf
aas
mov
add
pop
ret
fdiv
outsb
jnp
aas
loop
add
aas
into
fcmovne
cmp
jne
xchg
data16
cmc
mov
pop
shr
shll
inc
pushf
movsl
pop
cmp
int3
xchg
mov
jb
mov
jge
out
fnstenv
aam
jne
cld
aaa
jbe
add
mov
xchg
popf
es
pop
xchg
mov
stos
loopne
loopne
lods
or
push
xchg
adc
inc
fimuls
mov
xchg
dec
lods
and
adc
jle
int3
fs
leave
lock
adc
hlt
mov
js
shll
fs
int
negl
out
pop
xchg
adc
pop
push
adc
xchg
xchg
cmp
jmp
sub
sbb
add
lahf
add
mov
test
insb
adc
out
js
stos
push
sbb
mov
xchg
dec
cmp
cs
mov
icebp
mov
mov
lds
sti
fdivl
push
push
and
inc
adc
mov
mov
adc
fldcw
shl
rcl
test
push
in
aas
mov
std
pop
add
stc
pop
ja
into
sub
subb
clc
cmp
movsl
lea
jg
popf
repz
dec
push
pop
lods
rclb
sub
mov
lea
mov
sbb
and
mov
adc
ds
lods
or
inc
rcll
mov
loopne
daa
mov
shl
sahf
jae
inc
cld
xor
mov
or
mov
sub
adc
and
mov
lods
imul
mov
cmp
lret
dec
out
ljmp
add
add
mov
lea
mov
repz
dec
push
lods
out
nop
and
test
or
pop
xlat
std
js
xchg
fnstcw
loope
sub
or
insb
or
shl
jo
pop
fsubrs
add
sub
pushf
and
clc
outsl
test
shlb
insb
mov
insb
fldcw
fmuls
inc
movl
xor
dec
add
testb
jmp
lret
add
and
repnz
xchg
push
push
xchg
pop
js
popf
sbb
fists
mov
adc
jg
stos
push
and
or
mov
mov
pusha
sbb
jle
jno
push
xor
test
sub
mov
cmpsb
sti
out
xchg
rclb
add
push
push
xor
adc
push
outsb
mov
shrl
push
test
hlt
sbb
add
jno
std
mov
xor
sbb
dec
rcrb
repz
popf
cmp
mov
out
and
andb
pop
int
enter
inc
cmpsl
rcrl
leave
push
imul
pop
and
insl
sub
addr16
push
fadds
pusha
adc
popf
xchg
inc
stc
push
mov
ror
rolb
inc
xchg
out
in
pop
loope
ret
add
insl
mov
popf
lret
push
add
mov
pop
jne
in
orl
ret
iret
push
sub
mov
jecxz
ret
int3
inc
lahf
cmc
mov
aaa
mov
and
or
mov
loope
sub
je
cwtl
dec
mov
lret
jns
enter
xchg
sti
and
pushl
int3
mov
rorb
int3
add
cld
das
cmp
add
add
fistpl
scas
aam
xchg
in
sbb
adc
fcoms
mov
push
mov
iret
adc
pop
xor
and
sub
push
adc
movsb
sbb
inc
mov
clc
pop
push
dec
dec
lcall
mov
sbb
sbb
enter
cmp
inc
cmp
mov
mov
xchg
dec
cmpsl
sbb
add
add
in
mov
iret
mov
lods
cmp
xchg
dec
sti
jne
mov
insl
loopne
addr16
jmp
lods
out
mov
sub
call
mov
jae
cmp
call
and
xchg
sub
inc
pusha
scas
or
xlat
aam
mov
fildll
std
ror
push
push
mov
arpl
dec
add
insl
insb
xor
sub
sti
mov
pop
mov
or
xor
les
xchg
out
xor
clc
dec
mov
std
and
dec
cltd
subl
lcall
cs
scas
lret
mov
shr
lret
mov
gs
and
push
icebp
sbb
adc
popf
dec
pop
sbb
test
out
xor
push
jns
lret
pushf
xchg
add
jae
jno
sbbl
lea
push
and
pop
ret
repnz
ds
sub
lea
inc
sbb
arpl
lahf
xchg
bound
icebp
cmp
rcrb
rcl
push
mov
mov
outsb
lcall
inc
mov
sti
jmp
mov
mov
movsb
pushf
push
rol
fwait
icebp
out
xchg
adc
jne
push
dec
stc
pushf
add
add
pop
sbb
fcomip
repnz
jb
or
and
insl
pop
idiv
xlat
test
fcomps
mov
jmp
push
jns
jno
fstpt
xchg
rorl
cmp
cmp
aam
mov
jne
arpl
in
lret
add
pop
mov
daa
jno
es
out
in
add
push
xor
push
or
ds
xorl
sub
adc
or
add
lahf
mov
sbb
add
add
xchg
jmp
mov
xchg
xor
pop
fistps
out
or
pop
jecxz
icebp
loopne
push
addr16
fiadds
ret
scas
xchg
std
jl
xchg
test
into
pushf
pushf
or
repnz
add
jbe
adc
xlat
mov
jns
lret
xchg
ja
xor
shll
and
les
add
add
cmp
aas
mov
xchg
mov
sbb
jo
mov
fbstp
insl
push
test
pop
arpl
pop
in
push
and
sub
or
mov
inc
mov
xlat
insb
adc
cmp
aas
adc
sti
inc
jmp
dec
mov
and
push
xor
int3
lock
adc
mov
sti
fwait
addr16
dec
jne
lcall
sub
dec
xlat
sbb
cmp
adc
lret
sti
pop
push
daa
cmp
adc
mov
jp
xchg
test
clc
imul
loope
in
push
dec
xor
cli
or
scas
xor
push
mov
fistps
popa
out
nop
pop
sarl
shl
xchg
mov
xchg
mov
shrd
add
ja
into
inc
insb
jle
sarl
sub
mov
shrb
add
mov
push
jl
mov
into
mov
pop
sbb
lahf
xchg
push
pop
testl
mov
ds
mov
mov
xor
out
ds
and
fstpl
mov
cmp
inc
cmp
loopne
stos
dec
dec
lea
jns
jg
mov
or
dec
lret
ret
icebp
loop
js
repnz
mov
mov
add
add
adc
jb
cmpsl
or
gs
jecxz
out
mov
and
mov
sbb
arpl
push
jg
fwait
ja
cs
shrl
lcall
addr16
jmp
test
dec
cmp
arpl
inc
mov
jle
add
fcompp
test
out
add
sub
sbbl
sahf
lret
shl
jp
mov
test
inc
lret
adc
clc
cmp
dec
sub
icebp
mull
adc
mov
lock
mov
shr
mov
xchg
pop
cmp
push
fwait
sahf
push
imull
aad
adc
mov
add
call
xor
rolb
leave
jae
xchg
lock
xlat
jnp
leave
lret
rcrb
cli
mov
notl
and
sahf
fdivr
jo
xchg
and
in
mov
pop
sub
bswap
mov
sbb
out
pop
sbb
adc
jmp
push
push
adc
jo
add
fldl
jmp
xchg
loope
popa
lods
pop
sbb
jbe
adc
shl
sbb
loope
test
inc
fwait
pop
stc
orb
inc
xchg
pop
mov
movb
add
mov
daa
mov
sub
and
enter
cli
dec
popa
xor
add
int
lds
or
mov
ljmp
repnz
pushw
pop
out
jns
xor
sbb
lcall
lock
cltd
xchg
sbbl
add
add
mov
add
outsl
jb
push
xchg
jp
movsb
sarb
push
or
cltd
dec
std
or
push
add
das
cmpsl
std
lea
push
jbe
inc
outsb
mov
std
xor
jno
dec
mov
mov
mov
xor
sub
dec
xchg
xchg
mov
mov
outsl
adc
push
icebp
inc
ljmp
push
test
add
add
gs
loopne
inc
xor
cmpsb
sub
subb
outsl
xchg
mov
xor
lcall
xchg
aad
dec
mov
insb
addr16
mov
push
popf
arpl
xor
inc
mov
rclb
js
cs
or
int3
mov
push
mull
loope
cmc
mov
mov
lcall
add
add
pop
push
mov
fildll
cltd
mov
clc
popf
pop
in
int
inc
int
divl
push
sub
xor
stos
xchg
outsb
mov
ja
inc
pop
push
imul
mov
push
jmp
mov
xorb
mov
adc
mov
ds
or
xchg
ret
mov
fnstsw
and
xor
fcomip
push
cmpsb
icebp
popa
ret
add
or
cmp
aas
sti
pop
sbb
adc
jo
xchg
fldl2e
jb
lods
rcrl
xlat
jne
nopl
ss
flds
out
daa
ja
negb
dec
jp
inc
dec
loope
addl
xchg
dec
outsl
push
dec
inc
ret
test
xchg
sbbb
add
sbb
cmp
mov
adc
mov
or
testl
js
test
lock
xchg
repnz
pop
je
sub
leave
xor
orl
mov
push
push
or
cmp
cmpsb
pop
adc
outsl
out
xor
xchg
dec
ja
xchg
push
dec
shll
cmpsl
mov
push
scas
or
in
pop
test
or
mov
arpl
clc
and
or
pop
testl
add
add
arpl
mov
fdivs
mov
xchg
aam
test
pop
data16
out
mov
ss
pop
sub
sbbb
cmpsb
into
and
scas
imul
pushf
lret
xor
pusha
mov
dec
inc
jmp
inc
jb
push
pop
push
mov
scas
xorb
lods
cld
cmp
mov
cmp
push
or
push
stos
cmp
mov
add
add
lcall
andb
filds
or
loop
push
gs
out
sub
lods
insb
scas
ds
sbb
and
push
inc
or
dec
mov
inc
lcall
push
hlt
mov
and
inc
pop
pushf
xchg
aas
paddd
xchg
jne
icebp
mov
or
lcall
aaa
fdivrs
inc
mov
jo
jb
js
je
sbb
mov
add
mov
dec
mov
test
sti
stos
arpl
cli
and
mov
adc
shlb
in
pusha
mov
dec
cmpsb
pop
repz
lret
js
aad
pop
fs
cmpl
sbb
int3
push
imul
aad
lcall
jb
sub
xchg
adcb
pminsw
in
push
xchg
and
xor
arpl
mov
jge
mov
scas
push
in
add
sub
add
add
outsb
faddl
shr
push
or
decl
das
push
jge
dec
xlat
enter
js
imul
loopne
mull
cwtl
push
mov
mov
mov
xor
hlt
mov
add
add
sbbl
pop
sub
inc
dec
pusha
sub
mov
jnp
in
inc
popf
add
or
scas
cmpsb
loope
cmpsl
adc
fisttpl
outsl
jp
jmp
les
fldt
call
adc
in
mov
adc
mov
mov
lods
dec
cmp
and
aad
cmp
mov
pop
jmp
add
add
xchg
loopne
xor
cs
cmp
leave
push
mov
jb
jge
call
shll
or
divl
nop
add
add
add
mov
mov
mov
fstl
cwtl
loope
xchg
xor
cld
xchg
push
rolw
popa
add
xor
out
ret
dec
pop
leave
xor
in
out
mov
fcomps
sbb
xchg
icebp
pop
pop
aaa
mov
pop
loope
jl
adc
cmp
cmp
sub
cmp
data16
lods
xchg
or
cmc
dec
and
gs
fsub
xor
mov
aas
and
add
test
daa
jb
aam
xchg
adc
mov
repnz
push
jmp
popf
jge
lods
mov
push
adc
out
jmp
xor
les
add
fimuls
cmc
aas
test
push
push
ret
mov
dec
inc
into
add
out
or
loope
test
sub
adcl
xchg
stos
ss
lds
out
fcomp
cmp
mov
xchg
out
add
push
popf
outsb
outsl
and
or
clc
lahf
xlat
jp
ljmp
mov
mov
dec
outsl
imull
add
bound
mov
mov
push
in
sbbl
enter
movsb
outsb
jp
mov
jnp
xlat
pusha
sbb
jmp
jbe
loopne
jno
shll
cmpl
xchg
es
mov
cmpsb
or
loop
movsl
mov
add
jl
push
mov
adc
xor
push
mov
xchg
ret
push
aaa
pop
xchg
cmp
cli
dec
call
iret
add
xchg
add
or
out
lods
push
arpl
add
and
jnp
lods
jno
cli
mov
dec
adc
ss
add
mov
xor
sbb
fsubrl
inc
repnz
hlt
out
pop
xor
add
add
dec
ficompl
ljmp
mov
inc
notb
mov
in
stos
inc
popf
push
pusha
fwait
xlat
sahf
addb
push
cmp
scas
popa
dec
add
fnstsw
and
addr16
adcb
int3
or
scas
lret
pop
shl
dec
inc
dec
pop
repnz
lcall
fsts
inc
xchg
xor
fidivs
out
ljmp
add
add
and
enter
dec
in
leave
les
xchg
lods
push
jo
add
in
aam
adc
loopne
add
push
add
mov
adc
adc
lods
aas
and
xor
clc
loop
pop
stos
adc
test
push
movsb
cmp
in
mov
icebp
pop
push
adc
mov
push
mov
xchg
loopne
push
xlat
pop
push
ret
jo
imul
pushf
leave
adc
and
and
and
or
add
add
ret
push
cmp
xor
and
repnz
pop
sbb
jmp
push
inc
ret
out
pop
test
int3
or
jge
arpl
jo
mov
inc
lods
dec
push
jno
dec
fisttpl
iret
loop
dec
into
lcall
cmp
add
inc
sti
jo
mov
xchg
xor
adc
inc
adc
fwait
jnp
dec
pop
test
js
xchg
mov
subb
and
mov
stos
add
je
jae
repnz
fcoml
add
xchg
test
or
cmp
lds
xor
xchg
pop
outsb
mull
jmp
ret
out
cmp
loope
jecxz
int3
lods
insl
add
lahf
cmp
in
arpl
dec
jbe
divb
sbb
xor
jb
fwait
loop
pop
mov
iret
pushf
cwtl
stos
pop
icebp
scas
aam
pop
push
je
add
cmpl
xchg
in
test
call
fsubl
jl
out
push
icebp
cmp
cmp
fisttps
jae
sahf
lods
cmc
inc
inc
adc
dec
jecxz
arpl
mov
mov
and
rolb
fstpl
leave
sub
dec
or
jle
aaa
cltd
dec
test
pop
xor
jno
cmp
sub
mov
cmp
repz
loope
and
or
dec
push
test
xor
pandn
add
jnp
push
ss
pop
loopne
mov
xchg
push
cld
dec
popa
das
into
push
fwait
mov
sbb
or
push
jnp
gs
ds
sbb
dec
popf
add
jne
mov
cmp
shrl
fs
stc
mov
mov
loop,pn
push
mov
lods
and
pop
sbb
rcrl
pop
ss
push
mov
aam
mov
push
push
xor
fisubl
loop
adc
add
adc
test
mov
mov
icebp
popa
into
cltd
sub
sar
inc
out
push
test
cltd
rol
mov
repz
mov
pop
loope
test
fs
cmp
mov
repz
mov
jne
add
mov
add
ret
hlt
jmp
mov
cli
rolb
test
sub
xchg
jno
pusha
daa
clc
and
rorb
js
clc
or
cmp
je
jno
mov
lahf
aas
mov
dec
mov
mov
adc
jg
insl
call
dec
rorb
and
ss
sbb
fmuls
xor
imul
push
lds
or
cld
adc
jg
cs
pop
mov
adc
push
pop
and
add
lock
mov
cwtl
xchg
lret
adc
fs
popf
jb
mov
shl
ja
mov
cmpsb
or
cmp
xchg
jbe
mov
aaa
jge
and
push
inc
movsb
loopne
out
aad
fwait
mov
or
aas
mov
mov
mov
or
rolb
and
pop
jns
rolb
or
pop
fiaddl
cmp
roll
cmp
push
call
lods
add
lahf
or
jl
mov
sbb
and
push
push
stos
iret
mov
or
ds
insl
jne
repz
dec
mov
xchg
mov
xchg
rcll
or
clc
clc
imul
mov
jne
push
cmpsl
xlat
ret
lods
fwait
loopne
inc
jmp
dec
jo
jo
or
pop
xor
lods
mov
or
test
xchg
push
jmp
mov
add
cmpsl
mov
gs
or
stos
test
xchg
xlat
mov
fildll
mov
ljmp
cmpb
xchg
outsl
test
dec
xchg
into
loopne
lcall
or
clc
sbb
mov
std
test
add
mov
lods
xchg
add
jle
lret
or
aaa
jo
fldcw
pop
out
mov
filds
inc
rcrl
dec
arpl
pop
jmp
mov
xchg
pushl
pop
nop
adcb
je
xchg
cltd
or
das
fcmovnu
xlat
jg
xorl
inc
insl
xor
and
or
pop
das
push
test
mov
insb
aas
setl
scas
mov
testb
movsb
xor
sbb
shll
pushf
jns
sbb
not
jne
bound
jnp
or
std
jl
cmp
mull
in
mov
es
xchg
insl
lds
xchg
xlat
and
test
std
leave
sahf
or
stos
sub
sti
mov
bound
sub
mov
sub
inc
leave
pop
pop
std
xchg
loope
mov
adc
push
ret
pop
mov
push
mov
popa
xchg
mov
jne
or
mov
add
add
adc
jne
ja
std
test
xor
das
or
in
jbe
pop
das
pop
out
inc
cmpsl
xchg
icebp
dec
into
mov
cli
or
push
jae
scas
popf
test
xor
test
out
xlat
or
pusha
cmp
in
lea
push
xor
call
push
push
scas
fnsave
insb
mov
sub
mov
or
mov
cmp
xchg
dec
inc
mov
or
add
jo
jno
mov
cwtl
inc
fwait
inc
jne
dec
lea
jmp
outsb
mov
dec
lcall
cs
mov
je
sub
outsl
jg
sbb
mov
ret
lds
adc
clc
push
loope
xlat
sub
mov
sub
pop
ja
xchg
lds
gs
or
mov
xor
cmc
xor
sti
lds
repz
pop
inc
xor
les
pop
mov
into
loope
push
add
inc
sti
imul
mov
dec
inc
jecxz
mov
push
xchg
lret
repz
push
outsl
add
cltd
sahf
jo
bound
aad
add
insb
inc
and
adcl
dec
inc
lahf
andl
sti
push
and
in
add
fwait
std
sahf
repz
fwait
cmpl
pop
lods
xor
dec
xor
push
inc
cli
enter
hlt
add
pushf
sub
mov
pop
jns
inc
enter
rolb
pop
sbb
insb
rorb
sahf
roll
jno
pop
xchg
cld
sbb
add
loop
sbb
cmp
jbe
cmp
rorb
push
adc
inc
mov
inc
push
lods
mov
jl
sahf
pop
sub
mov
jp
popa
jns
mov
loope
aam
stos
mov
add
stos
mov
mov
lahf
mov
cmp
sbb
dec
je
inc
fcoml
dec
add
jmp
xlat
ret
data16
pushf
adc
push
cmc
lret
out
add
sbb
mov
clc
rcr
add
pop
inc
adc
dec
and
xor
call
mov
or
es
mov
ud1
push
fs
mov
loop
add
cmpb
dec
ret
mov
mov
xchg
dec
mov
cli
xchg
mov
xor
loopne
xor
jle
jne
sbb
jmp
daa
iret
lret
stc
int
jne
dec
gs
jle
mov
fcmovnu
xor
stos
ss
dec
lods
and
jl
sub
dec
or
inc
int3
pop
icebp
insl
test
jno
push
mov
mov
addl
add
add
leave
xchg
popf
jmp
push
stos
movsb
leave
shl
or
mov
jne
cmp
stos
fstpt
js
push
dec
lahf
mov
xor
pushf
add
pop
insb
xor
out
movl
xchg
push
andl
mov
jns
or
cmpsb
pop
std
in
push
std
stos
imul
mov
jg
mov
adc
or
icebp
pop
inc
lcall
add
add
cmp
mov
lahf
dec
dec
sub
pop
cmp
pop
mov
subb
fwait
stos
add
sub
arpl
xchg
or
mov
mov
in
cmc
test
dec
lods
mov
cli
out
cmpsb
pop
jns
xchg
stc
nop
lahf
ds
aas
movsb
cltd
mov
mov
pop
pop
enter
movsl
push
idivl
dec
lcall
pop
lret
push
mov
seta
adc
pop
sub
cmp
and
scas
mov
lds
das
movsl
andb
je
pop
in
mov
movsl
loopne
xchg
loope
dec
loopne
mov
call
int3
jl
push
test
in
xchg
out
xchg
pop
popf
fadds
pop
loop
jne
pop
and
cmp
mov
lods
inc
xor
addr16
dec
imul
sbb
jb
add
cmpb
add
inc
cld
fsubl
mov
aad
push
iret
and
jne
add
xor
lahf
cmpsb
mov
mov
loope
ds
mov
sbb
mov
dec
scas
mov
dec
sub
inc
xor
ljmp
