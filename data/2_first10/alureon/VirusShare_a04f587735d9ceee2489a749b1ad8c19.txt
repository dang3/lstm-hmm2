add
add
adc
add
add
mov
xchg
xor
xor
add
adc
add
outsb
xor
jle
xchg
mov
lea
imul
add
dec
dec
add
xor
lea
mov
dec
jne
dec
mov
inc
add
pop
inc
or
pop
lea
imul
pop
add
inc
sub
inc
and
lea
mov
dec
inc
inc
sub
add
ret
push
sub
lea
imul
sub
sub
dec
inc
add
push
push
push
push
lea
mov
dec
push
dec
dec
dec
or
lea
movzbl
dec
add
sub
mov
inc
push
xor
lea
xor
mov
inc
push
add
inc
push
dec
add
pushl
lea
call
imul
add
dec
dec
sub
add
or
lea
movsbl
pop
ret
mov
inc
dec
add
add
mov
add
lea
cmp
jb
mov
add
inc
xor
inc
add
xor
add
lea
pop
mov
add
test
jbe
inc
inc
add
sub
lea
inc
inc
dec
inc
and
lea
mov
dec
inc
inc
dec
inc
add
lea
imul
add
inc
inc
and
add
xor
mov
lea
movzbl
inc
sub
add
dec
dec
and
or
lea
mov
movsbl
add
mov
inc
sub
mov
inc
and
mov
lea
movsbl
dec
dec
dec
dec
dec
jne
or
mov
lea
mov
dec
sub
inc
inc
xor
lea
mov
add
mov
dec
inc
dec
xor
lea
mov
add
inc
mov
inc
inc
test
jbe
add
lea
mov
inc
inc
dec
sub
and
lea
mov
inc
inc
dec
add
xor
inc
lea
imul
add
add
inc
dec
and
xor
lea
mov
movzwl
sub
movzbl
inc
sub
add
dec
sub
and
lea
movswl
mov
inc
dec
movzbl
inc
sub
mov
add
lea
mov
mov
dec
movzbl
dec
dec
add
inc
or
and
lea
movswl
movzbl
dec
add
xor
dec
sub
inc
xor
jmp
push
sub
lea
push
mov
dec
push
dec
inc
push
inc
sub
push
lea
mov
inc
inc
push
inc
inc
push
or
lea
push
mov
call
inc
mov
dec
dec
xor
inc
sub
add
lea
mov
inc
dec
inc
sub
cmp
je
xor
add
lea
mov
ret
sub
dec
dec
inc
or
lea
mov
dec
inc
add
add
add
lea
mov
add
inc
dec
inc
xor
lea
pop
mov
ret
push
dec
dec
dec
sub
or
lea
mov
add
inc
push
dec
inc
push
or
push
lea
push
mov
call
inc
push
sub
inc
inc
mov
add
mov
lea
mov
mov
inc
dec
test
je
add
inc
or
lea
imul
sub
dec
add
inc
mov
add
lea
mov
inc
inc
inc
add
xor
repnz
lea
mov
add
dec
jmp
inc
inc
dec
or
jmp
push
mov
movsbl
dec
call
dec
inc
call
sub
xor
call
lea
mov
add
dec
add
dec
call
sub
lea
call
mov
dec
dec
inc
dec
or
call
lea
mov
call
dec
dec
inc
push
inc
call
and
lea
mov
inc
call
add
sub
inc
pop
xor
lea
mov
add
sub
pop
sub
inc
pop
inc
add
lea
mov
pop
inc
dec
dec
inc
add
lea
mov
dec
pop
inc
dec
pop
inc
xor
mov
lea
movsbl
call
add
sub
inc
dec
ret
add
lea
push
movsbl
add
push
add
dec
push
dec
and
push
lea
mov
push
dec
dec
mov
inc
inc
push
add
ret
push
lea
mov
add
add
add
dec
sub
lea
imul
sub
inc
dec
inc
and
lea
mov
inc
inc
dec
dec
or
lea
movsbl
inc
inc
dec
inc
or
pop
ret
jmp
lea
imul
add
inc
sub
inc
or
lea
pop
pop
ret
push
movzbl
inc
dec
inc
inc
push
or
lea
push
imul
add
push
add
call
pop
ret
sub
inc
mov
add
xor
mov
lea
mov
mov
inc
dec
mov
dec
dec
xor
add
lea
mov
imul
add
inc
dec
dec
dec
xor
lea
mov
cmp
jb
inc
push
dec
dec
push
dec
or
push
lea
mov
mov
dec
inc
xor
dec
inc
xor
sub
lea
xor
movsbl
sub
push
dec
inc
xor
add
xor
mov
lea
mov
mov
dec
dec
movzbl
dec
sub
sub
lea
add
add
add
sub
dec
movzbl
add
xor
lea
inc
inc
dec
inc
inc
add
lea
mov
imul
add
inc
sub
inc
and
cmp
jb
lea
xor
mov
dec
mov
inc
inc
mov
inc
xor
inc
lea
jmp
movsb
jae
lcall
out
js
stos
lods
jb
mov
addr16
movsl
fsubrs
mov
rcrb
dec
cmpsb
and
int3
add
cmc
adc
xchg
mov
jo
lock
push
mov
pusha
push
dec
sub
sub
add
mov
mov
jmp
dec
fcomps
jbe
in
inc
cmove
dec
jno
lock
aad
inc
and
push
jg
and
push
sbb
and
lock
scas
lds
cmpsl
xchg
jne
cmp
mov
cld
sbb
lea
sbb
sahf
sbb
pop
cli
push
xchg
pop
out
divb
sub
push
out
enter
mov
outsl
mov
aaa
jne
xlat
mov
push
add
cmp
adc
mov
repnz
andl
pop
xor
push
mov
cmpsl
add
in
repz
test
js
or
push
sarb
push
jg
ficompl
inc
fimuls
and
movsl
lret
push
sahf
or
inc
xor
cmp
sub
lret
or
mov
fdivrl
cmp
daa
cmp
scas
xchg
lds
out
cmp
pop
aad
cli
frstor
mov
loopne
sahf
subb
into
jecxz
ror
rolb
stos
lods
cmpsb
test
add
psubd
jge
les
adc
fs
or
jns
dec
add
repz
cmpl
sbb
mov
or
cmp
push
loopne
test
and
add
fmul
jg
fisubrs
sub
rorb
cmp
inc
sub
jns
add
mov
add
xor
rcl
aam
aaa
daa
mov
inc
pop
adc
mov
dec
jb
sbb
fadds
push
jo
popa
inc
movsb
and
dec
lret
ret
mov
sub
jae
cmp
sbb
mov
leave
pop
adc
aas
xor
sbb
out
popa
data16
sub
pop
pushf
in
mov
dec
movlps
cwtl
add
daa
idiv
arpl
aas
lds
repnz
mov
mov
hlt
push
ret
pop
and
aas
xchg
mov
mov
dec
cmpsb
pop
dec
out
enter
jg
pusha
sub
int3
adcl
out
test
and
scas
inc
push
rorb
sub
pop
inc
fisttpll
js
sbb
insl
adc
pop
dec
std
insb
dec
notl
outsb
je
std
pop
shll
les
subl
xchg
inc
stos
rolb
das
sbb
pop
stc
sahf
xor
pop
mov
xor
mov
fnsave
leave
daa
mov
inc
lods
mov
push
adc
xlat
or
fcoml
sub
fmulp
mov
es
shll
addb
mov
bound
or
dec
shll
fidivrl
jecxz
xor
mov
add
int
lods
divb
shl
mov
add
mov
add
pop
das
loopne
imul
rclb
outsb
mov
ja
outsl
pminsw
or
mov
lods
int3
push
and
dec
jbe
test
test
or
xor
cs
out
fisttpll
xchg
and
mov
aam
add
out
inc
xchg
rolb
mov
sub
je
loopne
scas
mov
pop
stos
gs
add
lret
gs
push
in
loop
rcrb
xor
inc
lret
and
cmp
push
mov
cld
mov
shll
cmp
lcall
and
pop
pop
add
sahf
test
jne
test
dec
cmp
shlb
push
or
hlt
cmp
loop
add
add
adc
add
add
mov
xchg
xor
xor
add
adc
add
outsb
xor
jle
xchg
mov
lea
imul
add
dec
dec
add
xor
lea
mov
dec
jne
dec
mov
inc
add
pop
inc
or
pop
lea
imul
pop
add
inc
sub
inc
and
lea
mov
dec
inc
inc
sub
add
ret
push
sub
lea
imul
sub
sub
dec
inc
add
push
push
push
push
lea
mov
dec
push
dec
dec
dec
or
lea
movzbl
dec
add
sub
mov
inc
push
xor
lea
xor
mov
inc
push
add
inc
push
dec
add
pushl
lea
call
imul
add
dec
dec
sub
add
or
lea
movsbl
pop
ret
mov
inc
dec
add
add
mov
add
lea
cmp
jb
mov
add
inc
xor
inc
add
xor
add
lea
pop
mov
add
test
jbe
inc
inc
add
sub
lea
inc
inc
dec
inc
and
lea
mov
dec
inc
inc
dec
inc
add
lea
imul
add
inc
inc
and
add
xor
mov
lea
movzbl
inc
sub
add
dec
dec
and
or
lea
mov
movsbl
add
mov
inc
sub
mov
inc
and
mov
lea
movsbl
dec
dec
dec
dec
dec
jne
or
mov
lea
mov
dec
sub
inc
inc
xor
lea
mov
add
mov
dec
inc
dec
xor
lea
mov
add
inc
mov
inc
inc
test
jbe
add
lea
mov
inc
inc
dec
sub
and
lea
mov
inc
inc
dec
add
xor
inc
lea
imul
add
add
inc
dec
and
xor
lea
mov
movzwl
sub
movzbl
inc
sub
add
dec
sub
and
lea
movswl
mov
inc
dec
movzbl
inc
sub
mov
add
lea
mov
mov
dec
movzbl
dec
dec
add
inc
or
and
lea
movswl
movzbl
dec
add
xor
dec
sub
inc
xor
jmp
push
sub
lea
push
mov
dec
push
dec
inc
push
inc
sub
push
lea
mov
inc
inc
push
inc
inc
push
or
lea
push
mov
call
inc
mov
dec
dec
xor
inc
sub
add
lea
mov
inc
dec
inc
sub
cmp
je
xor
add
lea
mov
ret
sub
dec
dec
inc
or
lea
mov
dec
inc
add
add
add
lea
mov
add
inc
dec
inc
xor
lea
pop
mov
ret
push
dec
dec
dec
sub
or
lea
mov
add
inc
push
dec
inc
push
or
push
lea
push
mov
call
inc
push
sub
inc
inc
mov
add
mov
lea
mov
mov
inc
dec
test
je
add
inc
or
lea
imul
sub
dec
add
inc
mov
add
lea
mov
inc
inc
inc
add
xor
repnz
lea
mov
add
dec
jmp
inc
inc
dec
or
jmp
push
mov
movsbl
dec
call
dec
inc
call
sub
xor
call
lea
mov
add
dec
add
dec
call
sub
lea
call
mov
dec
dec
inc
dec
or
call
lea
mov
call
dec
dec
inc
push
inc
call
and
lea
mov
inc
call
add
sub
inc
pop
xor
lea
mov
add
sub
pop
sub
inc
pop
inc
add
lea
mov
pop
inc
dec
dec
inc
add
lea
mov
dec
pop
inc
dec
pop
inc
xor
mov
lea
movsbl
call
add
sub
inc
dec
ret
add
lea
push
movsbl
add
push
add
dec
push
dec
and
push
lea
mov
push
dec
dec
mov
inc
inc
push
add
ret
push
lea
mov
add
add
add
dec
sub
lea
imul
sub
inc
dec
inc
and
lea
mov
inc
inc
dec
dec
or
lea
movsbl
inc
inc
dec
inc
or
pop
ret
jmp
lea
imul
add
inc
sub
inc
or
lea
pop
pop
ret
push
movzbl
inc
dec
inc
inc
push
or
lea
push
imul
add
push
add
call
pop
ret
sub
inc
mov
add
xor
mov
lea
mov
mov
inc
dec
mov
dec
dec
xor
add
lea
mov
imul
add
inc
dec
dec
dec
xor
lea
mov
cmp
jb
inc
push
dec
dec
push
dec
or
push
lea
mov
mov
dec
inc
xor
dec
inc
xor
sub
lea
xor
movsbl
sub
push
dec
inc
xor
add
xor
mov
lea
mov
mov
dec
dec
movzbl
dec
sub
sub
lea
add
add
add
sub
dec
movzbl
add
xor
lea
inc
inc
dec
inc
inc
add
lea
mov
imul
add
inc
sub
inc
and
cmp
jb
lea
xor
mov
dec
mov
inc
inc
mov
inc
xor
inc
lea
jmp
movsb
jae
lcall
out
js
stos
lods
jb
mov
addr16
movsl
fsubrs
mov
rcrb
dec
cmpsb
and
int3
add
cmc
adc
xchg
mov
jo
lock
push
mov
pusha
push
dec
sub
sub
add
mov
mov
jmp
dec
fcomps
jbe
in
inc
cmove
dec
jno
lock
aad
inc
and
push
jg
and
push
sbb
and
lock
scas
lds
cmpsl
xchg
jne
cmp
mov
cld
sbb
lea
sbb
sahf
sbb
pop
cli
push
xchg
pop
out
divb
sub
push
out
enter
mov
outsl
mov
aaa
jne
xlat
mov
push
add
cmp
adc
mov
repnz
andl
pop
xor
push
mov
cmpsl
add
in
repz
test
js
or
push
sarb
push
jg
ficompl
inc
fimuls
and
movsl
lret
push
sahf
or
inc
xor
cmp
sub
lret
or
mov
fdivrl
cmp
daa
cmp
scas
xchg
lds
out
cmp
pop
aad
cli
frstor
mov
loopne
sahf
subb
into
jecxz
ror
rolb
stos
lods
cmpsb
test
add
psubd
jge
les
adc
fs
or
jns
dec
add
repz
cmpl
sbb
mov
or
cmp
push
loopne
test
and
add
fmul
jg
fisubrs
sub
rorb
cmp
inc
sub
jns
add
mov
add
xor
rcl
aam
aaa
daa
mov
inc
pop
adc
mov
dec
jb
sbb
fadds
push
jo
popa
inc
movsb
and
dec
lret
ret
mov
sub
jae
cmp
sbb
mov
leave
pop
adc
aas
xor
sbb
out
popa
data16
sub
pop
pushf
in
mov
dec
movlps
cwtl
add
daa
idiv
arpl
aas
lds
repnz
mov
mov
hlt
push
ret
pop
and
aas
xchg
mov
mov
dec
cmpsb
pop
dec
out
enter
jg
pusha
sub
int3
adcl
out
test
and
scas
inc
push
rorb
sub
pop
inc
fisttpll
js
sbb
insl
adc
pop
dec
std
insb
dec
notl
outsb
je
std
pop
shll
les
subl
xchg
inc
stos
rolb
das
sbb
pop
stc
sahf
xor
pop
mov
xor
mov
fnsave
leave
daa
mov
inc
lods
mov
push
adc
xlat
or
fcoml
sub
fmulp
mov
es
shll
addb
mov
bound
or
dec
shll
fidivrl
jecxz
xor
mov
add
int
lods
divb
shl
mov
add
mov
add
pop
das
loopne
imul
rclb
outsb
mov
ja
outsl
pminsw
or
mov
lods
int3
push
and
dec
jbe
test
test
or
xor
cs
out
fisttpll
xchg
and
mov
aam
add
out
inc
xchg
rolb
mov
sub
je
loopne
scas
mov
pop
stos
gs
add
lret
gs
push
in
loop
rcrb
xor
inc
lret
and
cmp
push
mov
cld
mov
shll
cmp
lcall
and
pop
pop
add
sahf
test
jne
test
dec
cmp
shlb
push
or
hlt
cmp
loop
push
pop
pop
testb
jnp
pop
inc
fildll
inc
cmp
fcoml
sti
and
roll
adc
fidivrs
xchg
sub
mov
cmc
adc
sar
popf
pop
and
pop
jge
addb
in
jnp
cmp
pop
sahf
or
cmp
cs
mov
arpl
stos
repnz
push
orb
mov
setns
xchg
scas
mov
mov
stc
shr
out
sbb
xor
jnp
mov
xchg
push
ret
loop
loop
jecxz
sbb
adc
pop
push
ja
movsb
mov
pop
loop
mov
or
in
sub
or
jbe
ds
pop
shrl
and
sbb
in
popa
xchg
pop
pop
mov
cwtl
inc
mov
negb
imul
xchg
lods
adc
je
xchg
fcomps
aam
or
inc
push
pop
out
movsl
ret
imul
aad
mov
cmpsb
out
push
jae
xchg
xchg
sub
addl
pushf
push
push
divb
cs
sub
xor
jl
push
or
jg
jns
mov
test
mov
mov
fnstcw
xchg
mov
arpl
adc
adc
jecxz
stc
out
out
jg
repz
dec
pop
daa
mov
mov
cmp
pushf
dec
popa
gs
jecxz
sub
cmc
in
xchg
mov
stos
leave
popa
cmpsl
or
or
and
sub
aas
in
add
mov
add
fmull
mov
dec
cmpsb
aas
dec
clc
test
or
push
insb
std
inc
aad
int3
pop
das
sub
or
jnp
test
fcmovb
push
lret
inc
xorl
mov
int3
fdiv
jae
fisubl
lahf
sbb
pop
sbb
jmp
movsb
dec
push
xchg
iret
and
xor
xchg
push
xlat
adc
add
inc
jmp
lret
lret
cmp
out
lock
imul
out
pop
adc
mov
jb
jmp
jg
scas
fmull
pop
jb
daa
mov
sbb
jmp
aaa
inc
rorl
sbb
add
fwait
js
shrl
mov
in
icebp
dec
adc
fwait
xor
xor
and
int3
mov
call
and
xor
xchg
and
mov
arpl
jo
gs
popf
lods
or
popf
mov
fidivrs
push
in
sbb
jp
ljmp
inc
insl
xchg
test
xchg
into
lods
inc
ficoml
ljmp
jns
cmp
icebp
stos
mov
mov
stos
ret
jecxz
lcall
inc
clc
sbb
pop
out
push
or
cld
cltd
sub
cltd
jecxz
jg
or
ss
jg
jo
cmp
cmc
out
jbe
or
or
jns
cmpsl
jo
pop
arpl
lcall
dec
ja
mov
aaa
hlt
cmp
ds
sbb
icebp
dec
sub
test
lods
and
mov
jo
rcr
mov
jne
xor
push
inc
addb
adc
dec
mov
or
stc
int
xlat
jmp
sbb
repnz
je
int
mov
bnd
leave
rorb
jnp
cwtl
push
insb
mov
pop
sti
stc
pop
pop
xchg
shl
sbb
xor
lahf
ret
push
xor
bound
leave
add
std
shll
mov
mov
and
and
sbb
leave
hlt
sbb
pushf
sti
ficompl
push
pop
push
sahf
or
ret
addb
in
comiss
aam
sbb
add
push
pop
pop
fsubr
xchg
std
and
sbb
dec
pop
or
mov
les
mov
dec
jmp
add
fdivrs
negb
jnp
in
sub
pop
add
int
xor
add
repz
cmc
mov
ret
jecxz
dec
cmp
sub
outsl
dec
and
pop
in
lods
lcall
push
adc
push
lret
movsb
sub
lcall
js
push
daa
adc
fidivs
orl
or
loop
stos
pop
test
or
addr16
scas
mov
pushf
jae
jg
mov
mov
test
mov
push
out
ja
xchg
std
ret
lret
push
in
loopne
popf
insb
dec
jns
or
mull
and
jmp
test
notb
ss
dec
pop
movsl
adc
pusha
jbe
jns
or
pop
jp
repnz
fwait
mov
mov
iret
pop
and
xchg
push
inc
loop
out
mov
pop
enter
add
in
xlat
loop
hlt
in
lcall
fcoms
adc
mov
cmp
daa
and
jbe
movsl
push
scas
push
and
bound
mov
add
xor
inc
outsl
rorl
push
mov
test
inc
in
fnstenv
dec
call
jmp
and
fcomps
cmp
sbb
pop
push
out
mov
je
cmp
mov
aas
mov
mov
xchg
pushf
pop
fdiv
fs
movsl
mov
adc
ret
mov
xor
imul
jp
mov
testl
cmc
or
jg
ss
xor
outsb
dec
xchg
sbb
popa
pop
nop
add
sbb
mov
push
mov
aam
icebp
ret
xor
cmpsb
xor
push
jb
inc
mov
mov
cmc
sub
out
add
xchg
cmpsl
pusha
mov
idivl
cmp
addr16
lea
sti
sbb
scas
sbb
and
out
sbbb
xor
lahf
sbb
pop
gs
jnp
leave
pop
pusha
ror
ss
xor
mov
pop
pop
sub
mov
sbb
cmpb
adc
subb
lahf
mov
jg
jecxz
sbb
mulb
lods
lock
mov
test
insb
hlt
pushf
xor
shlb
mov
cmpb
mov
inc
sub
jmp
scas
xor
icebp
into
push
std
mov
and
cmp
lret
cmp
xchg
and
mov
stos
aad
jae
rcr
or
out
insb
xchg
testb
inc
jge
fs
mov
fidivs
xchg
js
jmp
adcl
loopne
jl
sub
lds
rorl
in
sbb
inc
jns
and
sbb
adc
aad
repz
xor
sti
or
add
ds
jge
out
jb
cmp
or
outsl
mov
nop
mov
shlb
lock
cmp
out
in
enter
push
jmp
push
in
leave
cmpsl
adc
ja
sub
cwtl
arpl
subb
pop
pop
mov
adc
xchg
xchg
or
and
push
pop
fwait
xor
clc
push
rcrb
sbb
xor
or
jbe
insl
rdtsc
xor
xchg
lods
lahf
and
mov
dec
cmp
cltd
leave
notb
mov
xor
daa
xlat
arpl
popa
daa
repz
pop
rcr
jle
mov
push
hlt
dec
loopne
sub
or
insb
and
add
insb
outsb
and
cmpsb
and
lret
inc
imul
stos
push
es
ror
adc
imul
or
sbb
in
stos
adc
jmp
adc
ret
add
pushf
orl
mov
sbb
popa
loop
addb
shlb
jb
cmp
insb
out
jl
loopne
lods
cmp
mov
jp
pop
call
test
xor
lds
cmp
dec
adc
push
movsb
sahf
incl
push
dec
jg
mov
mov
adc
mov
sub
arpl
and
add
dec
sub
out
ljmp
daa
pop
cmpl
mov
pushf
or
mov
rcrb
cld
test
outsb
dec
sub
mov
mov
and
xor
jecxz
aas
push
cmpsl
cmpsl
int
repnz
lcall
sbb
push
adc
jnp
leave
imulb
add
movl
xchg
pop
movsl
test
test
push
xlat
jno
sbb
in
jmp
stos
stos
push
mov
mov
leave
sti
shlb
cs
lods
push
jb
mov
cmp
push
dec
dec
cmpb
aas
or
imul
ret
int
or
mov
pop
mov
divl
addr16
lret
and
pop
imul
or
adc
xchg
mov
scas
xor
add
adc
cmp
add
test
xchg
pop
push
aas
xchg
mov
mov
out
fcoms
and
pop
test
popf
mov
fcoms
mov
mov
adc
in
ret
lods
shlb
mov
push
in
and
cmpsl
nop
mov
mov
push
cmp
mov
sarb
mov
gs
mov
in
adc
call
xchg
add
lret
xor
aad
shll
lods
pop
aas
lret
enter
rol
sub
scas
inc
mov
popa
outsl
shll
push
fisubl
aam
loop
xor
dec
cmpsb
push
pop
sub
clc
ret
nop
sub
loopne
push
test
cmc
dec
dec
mov
pop
xchg
and
inc
int
lods
imul
push
xchg
pop
dec
sbb
mov
dec
lea
movsl
sub
sub
faddl
push
adc
call
jns
add
or
rclb
lcall
pop
fisttpll
dec
fisubs
xor
jl
repnz
in
sub
or
xor
xlat
push
adc
and
arpl
lahf
lahf
xor
in
jb
out
insl
imul
mov
jnp
mov
les
dec
mov
insl
sub
pushf
movsb
mulb
pusha
rclb
in
inc
inc
pop
out
stos
cmp
cmp
jecxz
lahf
mov
cmpsl
xor
adc
inc
outsl
jno
cmp
push
scas
scas
out
inc
addb
jmp
jp
pop
adc
or
and
jnp
xchg
popf
cs
cmp
les
sarl
rorl
dec
sub
dec
jnp
xor
rorl
xchg
jecxz
arpl
inc
dec
xchg
xchg
xlat
das
cs
mov
shrd
call
xchg
add
add
mov
push
ljmp
sub
inc
shlb
xchg
dec
scas
bound
and
xor
push
rolb
lahf
sahf
fidivrl
loopne
ja
add
fisubl
sub
push
fcmovu
push
xchg
push
aad
jbe
into
push
jl
xor
ljmp
pop
dec
and
inc
mov
mov
mov
cmp
mov
movsb
pop
mov
mov
push
adc
push
mov
das
dec
cmp
dec
outsb
and
in
xor
je
shlb
push
call
out
mov
xchg
mov
popf
ffreep
mov
mov
ret
stc
push
test
lret
adc
in
push
sbb
jg
sub
jnp
push
ret
sahf
dec
cwtl
adc
sub
and
add
push
push
loopne
out
add
in
std
sub
inc
fisttps
ds
mov
xor
mov
dec
pushf
xor
rolb
and
pop
int
mov
ds
jl
cmc
test
fcmovne
mov
add
cmp
dec
dec
dec
add
cwtl
add
cwtl
mov
dec
xchg
outsl
mov
adc
xor
or
sbb
les
sbb
push
xchg
xorb
pop
testb
push
wbinvd
cmp
out
mov
sarb
dec
int
cmc
xor
cmp
cwtl
aad
rcrb
imul
sbbb
aam
xchg
or
movsb
and
mov
jnp
sbb
jge
pop
xor
scas
nop
mov
or
xor
sti
imul
mov
rorl
push
sarb
xlat
in
out
mov
push
out
push
jnp
adc
mov
repz
jmp
push
rcrb
push
ljmp
jo
xchg
adc
and
ljmp
je
sub
pop
fadds
out
cmp
mov
in
sti
xorb
cli
or
cwtl
adc
mov
inc
xchg
clc
adc
mov
sarb
and
ds
insl
js
jecxz
daa
lea
test
in
or
push
test
cld
pop
sub
lds
inc
lods
sbb
mov
pop
cs
adc
fsts
push
cs
notl
addr16
xchg
int
rcrb
jb
stos
cmp
and
pop
aam
mov
bound
sbbb
sbb
movsb
out
jb
scas
mov
call
les
xchg
insb
or
dec
int
or
xchg
lods
orl
mov
int3
dec
bound
or
pop
xor
fninit
xchg
inc
mov
adc
jne
ja
repz
dec
push
xor
jge
dec
or
mov
xor
inc
imul
in
or
fcompl
inc
sub
aaa
fsubl
xchg
push
pushl
adc
sahf
cmp
inc
insl
cs
js
scas
and
dec
xor
mov
lret
or
mov
out
enter
adc
out
cmp
in
adc
dec
jae
jmp
jo
fstpt
jne
xor
mov
mov
jge
dec
enter
sbb
mov
push
negb
repz
mov
js
jbe
fidivs
and
inc
or
movsb
and
lret
imul
and
sbb
js
imul
pop
pushl
enter
lods
push
mov
dec
sbb
stc
fs
add
adc
out
mov
ficoms
xor
mov
inc
sub
pop
cmp
pop
cwtl
push
call
add
sarb
cmp
loopne
movsl
push
popf
mov
leave
xor
stc
or
loope
frstor
xchg
sub
imul
stos
dec
out
sub
xorl
pop
xorb
ret
adc
les
adc
cmp
push
int3
add
xchg
mov
cltd
mov
push
sbb
aaa
scas
lea
inc
lret
fs
push
test
mov
push
ds
push
mov
repz
test
cli
mul
rolb
sahf
pusha
xor
movsb
adc
lds
fwait
sbb
fwait
loopne
in
cmpsb
lea
loop
xchg
xchg
pop
shll
xchg
jae
cmp
lret
jb
fimull
sub
movnti
adc
sbb
bound
leave
repnz
pushl
cwtl
jo
insl
js
dec
or
mov
cld
aam
xchg
dec
jns
ljmp
or
dec
std
decb
inc
out
adc
cltd
dec
std
sbb
imul
mov
ret
or
sbb
roll
js
in
in
bswap
xchg
loopne
mov
xchg
loopne
cld
das
sub
lcall
in
mov
cmp
mov
sti
and
jle
push
jo
fcom
push
mov
mov
cmpsl
jecxz
pusha
cwtl
xor
sub
lods
ljmp
dec
dec
pop
dec
mull
xchg
mov
sub
xor
rolb
iret
pop
and
add
fldenv
or
push
movl
add
mov
jne
jecxz
mov
sbb
addb
xchg
js
dec
and
jno
stos
mov
scas
fsubrl
xor
pop
inc
mov
leave
aam
and
dec
into
int3
mov
pop
orl
sahf
arpl
push
pop
add
clc
cs
mov
imulb
pushf
pop
mov
jmp
pop
push
shlb
xor
cwtl
fwait
push
lods
std
mov
stos
cmpsl
mov
lock
aad
or
mov
sbb
test
pop
out
inc
mov
outsb
inc
inc
sbb
push
fstp
mov
cmp
rorb
ja
stos
cmp
sti
xor
pop
push
sub
inc
pop
pop
adc
mov
xor
repnz
inc
sbb
nop
cwtl
add
xchg
icebp
sub
mov
jge
pop
xchg
push
repz
bound
subb
imul
lahf
idivl
test
arpl
cs
ret
cmp
inc
cld
add
push
data16
push
clc
outsb
jmp
lea
cltd
jg
lods
cmpsl
and
je
jg
in
testl
inc
add
call
jecxz
movsl
out
repz
xchg
mov
repz
arpl
adcl
iret
clc
inc
lea
out
pop
je
ja
int
mov
jno
data16
aaa
xchg
mov
inc
loopne
nop
test
ret
cld
dec
jle
das
sub
cltd
inc
movsb
xchg
pushf
xchg
mov
ljmp
sub
mov
adc
jno
push
fwait
mov
mov
jae
sti
xchg
dec
push
lahf
and
inc
lods
jns
push
sub
sub
mov
sub
test
in
add
bound
mov
cmp
or
and
push
mov
cmp
jne
mov
mov
lret
mov
xchg
adcb
sahf
outsl
push
sbb
jecxz
ljmp
pop
xchg
leave
lret
pop
mov
jg
mov
or
pop
das
call
int3
out
add
ja
rolb
cli
xchg
inc
test
cmpsl
inc
cwtl
loopne
pop
lods
test
add
popa
push
dec
mov
test
cs
jns
test
mov
xchg
mov
fwait
push
daa
outsl
jg
xor
cs
xchg
push
or
xor
add
shll
cmp
daa
inc
xchg
xchg
sbb
sbb
aad
xor
xorl
adc
out
xor
push
fstpl
outsb
test
and
int
int3
push
repnz
xchg
dec
imul
mov
loope
push
or
rcll
and
es
fmuls
xchg
pop
ret
adc
ja
mov
push
xchg
scas
nop
jmp
sbb
sub
adc
cmp
sbb
andl
popl
sub
imul
sbb
push
add
ss
insl
sbb
pop
push
mov
cmp
test
xchg
loope
nop
cld
add
push
popa
or
mov
mov
es
and
xor
lcall
lcall
mov
sub
aad
xlat
dec
sub
pop
aam
aaa
cmp
jo
push
iret
out
cmp
lock
popf
call
cmp
xchg
pop
fxam
push
mov
xchg
into
inc
test
jecxz
jne
cmp
xchg
adc
mov
aad
addl
dec
stos
or
dec
mov
ret
ss
cmp
add
inc
ja
mov
sub
pop
enter
out
xchg
or
test
jmp
lods
mov
jno
mov
jo
mov
sbb
mov
mov
imul
pop
out
cltd
push
xorl
fs
outsb
cmp
mov
inc
jg
push
jne
mov
rcll
negb
cmc
jg
add
add
cmp
outsl
pop
cmp
fstps
lods
mov
push
call
adc
pop
adc
xchg
sub
inc
dec
mov
and
cmc
mov
cli
jno
push
xchg
mov
and
cmpsl
test
mov
faddl
push
mov
and
ret
mov
push
stos
xlat
push
test
outsl
sbb
push
out
leave
das
in
inc
pop
jp
and
xchg
or
sub
dec
push
int3
movsl
xor
outsl
adc
jnp
arpl
xor
and
outsl
insb
dec
jl
lahf
fimuls
sbb
adc
cltd
subl
inc
in
pop
movsb
sub
out
loopne
pusha
dec
addr16
pop
out
add
xorl
sub
mov
out
mov
cs
insb
rol
pop
mov
push
or
pop
pop
pop
inc
cmp
adc
lods
lret
andl
xchg
rcr
mov
mov
or
push
dec
outsb
nop
sbb
roll
jae
shrb
lea
stos
or
dec
xchg
mov
inc
out
jmp
outsb
pop
ss
mov
lock
test
jmp
xor
bound
sbb
testl
clc
add
dec
cmp
dec
mov
cmpl
cltd
movsl
std
repnz
xor
in
iret
nop
or
in
mov
cld
cmp
cmp
push
arpl
push
fnsave
dec
adc
jl
sbbl
aam
mov
lahf
xor
jo
roll
mov
shlb
sbb
lock
test
sub
imul
iret
out
inc
xor
pop
dec
jle
lret
lods
and
popa
fstpt
add
lahf
scas
cmp
movsb
inc
je
mov
push
cmc
movsb
pop
push
push
add
int3
out
repz
loope,pn
out
loope
pop
add
aad
jmp
ret
adc
xchg
adcl
xchg
mov
in
xor
movsb
xor
inc
push
mov
xchg
jmp
lahf
lcall
lret
xor
ret
out
push
mov
sti
pop
cltd
out
mov
xchg
outsb
es
lcall
andb
adc
lock
sub
ds
dec
pop
rcll
aad
and
in
test
mov
pushf
and
ds
sub
ja
jle
jbe
and
neg
jle
cld
pop
popa
stc
mov
ret
mov
lods
dec
mov
rcrb
aaa
or
dec
add
mov
push
les
rcr
pop
xchg
arpl
sbb
sbb
sbb
test
inc
leave
push
cmpsl
fisttpl
pushf
jmp
xor
sti
ja
shll
lret
icebp
jmp
jg
stos
call
push
xchg
fwait
sbb
lods
pop
push
lret
jmp
test
jl
fwait
jno
jle
sysret
xor
pop
xchg
jecxz
inc
icebp
out
jns
dec
in
xchg
es
mov
sbb
and
repz
xor
leave
int
lahf
mov
mov
std
push
and
xchg
int3
cmp
fstps
movswl
sub
ja
lcall
mov
incl
dec
ret
es
fwait
lods
mov
sti
sub
insb
test
ffree
js
in
jmp
scas
or
in
lock
shlb
sub
or
in
into
sub
ret
je
xchg
xlat
int3
mov
xlat
jmp
sub
in
push
sub
movl
sbb
adc
das
iret
cmp
jb
jmp
stos
sbb
aas
fnstcw
in
xchg
xchg
insb
dec
flds
jo
dec
shrb
ret
cmc
clc
xor
sbb
lock
or
jecxz
xchg
mov
cmp
xor
lea
sti
stos
divl
pop
mov
sub
bound
jne
xchg
orl
xchg
in
lea
add
test
pop
xorb
call
pop
push
or
mov
dec
or
add
or
and
pop
xor
pop
add
jmp
ret
and
push
push
mov
xorl
xlat
inc
or
icebp
fs
adc
inc
lea
stos
imul
fsubrl
push
push
pop
and
jg
pop
loope
outsb
jb
call
mov
mov
bound
jno
add
xchg
inc
jne
scas
dec
dec
in
int
in
and
push
push
or
xchg
dec
cmc
andl
bound
scas
sbb
nop
icebp
xchg
call
jmp
mov
jo
aas
sub
jnp
fcomps
xor
mov
shrl
jnp
jnp
aas
mov
rclb
inc
das
ret
mov
sbb
jg
inc
pop
movsl
push
mov
out
inc
test
popa
adc
enter
adc
enter
es
jle
icebp
jg
xor
sarb
xor
jbe
or
mov
mov
xor
add
mov
adc
outsb
out
or
mov
pop
xor
mov
push
lret
cmp
rcr
sahf
adcb
enter
movsl
mov
mov
scas
adc
or
or
jb
lret
jae
addl
mov
sbbl
cmpsb
dec
sbb
push
fcomp
push
push
lret
dec
leave
jbe
xchg
cmp
js
jne
xor
insl
pop
popf
in
call
lret
jb
nop
pop
pop
movsl
mov
mov
out
mov
and
faddl
mov
out
test
dec
test
inc
adc
popl
inc
aad
in
popa
mov
addl
lea
jg
cmpsl
pushf
mov
sahf
pop
jle
push
ret
mov
mov
push
aam
movsl
sub
xor
fwait
xchg
iret
cltd
add
fisubrl
adc
cmpsl
cld
or
test
xchg
test
xchg
push
notb
test
dec
or
inc
aaa
mov
push
push
into
scas
daa
popa
mov
stc
push
push
fldl
xchg
and
aas
mov
sbb
cmp
roll
scas
jns
mov
xchg
jmp
mov
sti
mov
dec
mov
lret
scas
aaa
rolb
ret
cmp
scas
ret
xchg
dec
outsb
mov
mov
ret
imul
push
mov
jae
leave
mov
dec
xchg
imulb
inc
divb
fstpl
loope
add
jb
xchg
ljmp
lock
dec
fmuls
cmp
ficompl
mov
cli
sti
jbe
repnz
pop
pop
incb
dec
cmc
imul
jnp
std
int
nop
rcrl
ja
lock
inc
or
popa
cs
add
orl
dec
aad
xorb
push
jl
sahf
inc
jno
mov
imul
adc
ljmp
xchg
xchg
roll
scas
pop
pop
add
push
sub
fnstcw
mov
hlt
push
mov
push
ljmp
incb
rcrl
sti
sub
sub
pop
add
ret
lahf
mov
mov
inc
adc
lret
sbb
int3
loopne
mov
pop
mov
adc
dec
dec
cwtl
mov
insl
cmp
push
adc
adc
insb
cmp
popf
mov
addb
or
paddw
test
bound
lock
xor
loop
adc
add
cmp
pop
inc
and
insb
adc
cmc
sbb
icebp
js
stc
add
in
mov
adc
adc
in
movsb
or
ficoms
shlb
mov
stos
adc
xlat
xchg
adcb
pushf
cmp
push
roll
xor
hlt
and
cmp
incl
out
cmp
test
mov
jae
push
test
pop
xor
push
or
shlb
pop
push
xor
imul
icebp
mov
and
jns
and
cmp
in
mov
mov
loop
in
sbb
push
dec
inc
movsb
adc
push
rolb
cmp
rcll
add
lods
negl
lods
xor
adcb
test
mov
out
mov
cwtl
dec
xchg
fsubr
or
das
mov
ret
test
xor
js
lcall
sahf
js
dec
xchg
mov
lahf
mov
repnz
jge
xchg
mov
xchg
mov
jae
cmpsb
pop
out
out
jmp
mov
lcall
pop
pop
ret
jae
cmp
cmpsb
rcrl
stos
add
stc
std
push
stos
shlb
jp
gs
ret
das
add
xchg
ret
fwait
test
js
mov
gs
fisttps
data16
cmp
mov
stc
mov
mov
dec
into
push
pop
mov
cs
mov
cmp
push
fsts
mov
mov
in
out
repz
aad
mov
push
and
lods
leave
sbb
sahf
pop
clc
stos
dec
fxch
inc
mov
lods
imul
ss
pop
fisttpll
out
insl
jne
loopne
repz
push
pop
stc
lock
mov
mov
mov
add
test
ret
sbb
cmpsb
cltd
pusha
rolb
hlt
mov
cmp
cmp
mov
or
lods
push
or
call
cld
mov
es
cwtl
push
cltd
pushf
stos
notl
lock
jnp
pushf
aas
clc
cmpsl
xchg
aad
andl
or
mov
sbb
in
dec
shlb
scas
cwtl
mov
xchg
pop
adc
stos
jne
xchg
xor
xchg
aad
xor
sub
loopne
adcl
push
adcl
cli
pop
adc
sub
sbb
push
shr
in
aad
gs
movsb
xor
popf
sti
cmpsb
inc
lahf
ficoms
mov
ret
pop
lock
aaa
xor
xchg
or
orb
jecxz
loop
call
xor
sarl
cmp
fldenv
hlt
stos
adc
cli
in
dec
imul
lods
repz
push
mov
and
movsb
adc
cmp
repz
sub
mov
push
add
cmp
lods
das
inc
fsubs
mov
aas
xchg
cmpsl
je,pn
adc
xchg
in
push
pusha
aas
push
aad
loopne
sub
test
pop
adc
repz
scas
es
mov
push
gs
cwtl
and
sbbb
sub
or
or
shl
popf
aas
mov
test
cmp
sub
mov
and
icebp
push
ljmp
jl
dec
xchg
sbb
lret
mov
mov
dec
flds
push
cmp
push
mov
jmp
stc
mov
adc
xor
imul
les
hlt
mov
js
or
test
in
in
push
mov
xor
loope
mov
push
dec
push
shll
movl
mov
xchg
fwait
mov
popf
cmp
int3
sub
pop
imul
mov
fs
mov
cmpsb
bound
jge
or
dec
stos
ss
test
fldt
jbe
scas
fadds
mov
push
and
arpl
rorl
cmp
jbe
inc
sahf
sarb
inc
and
mov
adc
jmp
outsl
insl
popa
sub
jno
mov
mov
cmpsl
xchg
and
pop
cli
xchg
in
jae
shlb
jae
push
push
fld
sub
fdivs
and
loop
pusha
dec
addr16
jo
mov
jge
jno
pop
js
pop
les
add
bound
mov
push
xor
inc
jp
pop
jmp
sbb
sub
cmp
jle
sbb
sbb
test
push
push
enter
inc
subb
xchg
test
and
xchg
push
xchg
es
sub
pop
out
xlat
inc
add
inc
jmp
cltd
inc
call
shll
push
pushf
push
scas
dec
shll
add
jmp
mov
subb
adc
jmp
push
out
in
xorl
cs
push
push
fstl
lahf
mov
add
dec
in
mov
jmp
xchg
jo
jl
mov
mov
mov
pop
rcrb
jo
add
mov
push
xchg
pop
out
mov
mov
sbb
mov
inc
ret
sbb
bound
jmp
xor
js
xchg
lret
jne
push
repz
xchg
popa
fidivrs
rolb
or
out
movsb
push
ljmp
and
outsb
bound
push
aam
cmp
fldt
xchg
jmp
mov
lds
and
xor
add
das
popf
orb
inc
add
cmp
inc
or
and
outsl
jbe
data16
sub
call
lds
push
mov
mov
test
mov
mov
imul
pop
ja
iret
push
pop
mov
sti
aam
dec
mov
add
add
ret
fdivl
sbb
jne
adc
icebp
jmp
sbb
pop
sub
stos
jge
sbb
inc
jp
pop
sub
andb
mov
mov
add
jo
cmp
inc
pop
out
mul
test
insl
xor
inc
dec
jmp
dec
jae
pop
mov
mov
add
repnz
gs
xchg
ljmp
scas
xchg
fs
mov
xor
xchg
xchg
rorl
jl
cmp
cmp
lods
nop
or
xacquire
mov
les
das
jmp
cmp
xchg
decb
push
dec
push
inc
push
sahf
xor
aaa
add
or
sub
fcomps
ret
nop
jnp
or
scas
and
aam
cld
or
pushf
add
test
les
dec
out
sub
xchg
sub
add
dec
icebp
mov
in
inc
es
mov
push
jnp
xor
pop
cmpsl
lods
add
in
push
mov
xor
mov
jns
lock
pushf
test
test
out
lea
cwtl
mov
push
xor
mov
outsb
lods
cmp
aam
push
aam
dec
pop
sbb
rorb
mov
push
popf
inc
mov
pop
and
dec
dec
mov
jge
stc
and
mov
andb
pop
sbb
cmp
xor
mov
and
shrl
mov
sarl
into
jo
sbb
cltd
insl
push
mov
js
cltd
std
push
insb
mov
sti
xchg
jecxz
ret
sub
xor
ds
xor
ret
mov
ds
iret
rorl
mov
xchg
fcomi
cwtl
xchg
int3
sbb
mov
xlat
mov
fsubrs
inc
mov
mov
cmp
xorl
ret
in
push
mov
push
les
dec
dec
sbb
sbb
adc
lcall
loopne
mov
ss
or
push
sub
and
mov
into
mov
or
frstor
jle
int3
jne,pn
lret
xchg
jg
mov
pushf
and
jbe
lahf
jae
lcall
movsb
popa
or
dec
add
fiadds
movsb
mov
adc
jg
cmp
lea
pop
pop
test
in
bound
jns
mov
mov
jo
or
and
aad
inc
nop
sub
mov
fiaddl
or
lret
enter
jno
mov
cli
xchg
push
adc
mov
aaa
adc
jmp
pop
mov
add
daa
xor
int
out
add
or
fisttpl
mov
sub
push
cmp
xlat
js
out
cs
mov
cmp
inc
dec
subb
sahf
adc
je
add
dec
aaa
and
cltd
adc
loop
xchg
sbb
dec
mov
ljmp
xor
imul
inc
movsl
xor
jne
out
cmp
cmpsl
mov
mov
pop
jp
fldt
sbb
push
insl
scas
sbb
pcmpeqb
push
es
rorb
rclb
out
xchg
imul
or
ret
jno
les
adc
inc
outsl
cltd
jmp
pop
inc
jno
cmpsl
mov
andl
mov
and
cmc
loopne
pushl
and
loopne
adc
fsubrl
and
mov
test
lret
int
negl
popf
shrb
mov
push
outsl
push
aas
or
sarb
or
fcomip
mov
adc
popa
push
iret
std
in
sub
dec
mov
cmp
fcmovu
dec
adc
pusha
fwait
inc
dec
and
mov
mov
mov
xlat
out
sub
jp
andl
jle
push
loope
jae
lret
push
pusha
mov
sbb
in
mov
sbb
test
call
imulb
int3
aam
roll
daa
xchg
adcl
sbb
cmpsl
push
in
jno
out
xchg
clc
mov
pushf
in
mov
mov
push
add
jne
rcrb
sbb
jne
daa
ficoml
inc
xlat
and
pop
push
ds
int
stos
jg
movsb
cmc
and
mov
xchg
pop
xor
cli
aas
push
es
repnz
mov
pop
sbb
jo
push
clc
test
pop
icebp
mov
notb
inc
pop
push
sbb
adc
xchg
leave
cli
jge
adc
orl
lea
push
mov
sub
pop
pop
scas
inc
fstl
mov
lods
fiadds
cmp
xor
mov
cwtl
rcll
dec
jae
mov
or
loopne
and
and
pop
or
arpl
pusha
xor
mov
inc
cmp
sbb
test
mov
pushl
sbb
lret
popf
jle
inc
fcoms
popa
shll
loopne
cwtl
jg
add
mov
push
icebp
daa
mov
push
push
pushf
movsl
sti
popa
sub
inc
xor
xchg
in
out
pop
pop
mov
pusha
sub
xchg
pusha
shl
lret
js
push
fwait
gs
sbb
dec
hlt
insl
cmpsl
sahf
cld
repz
insb
push
std
dec
dec
fcomp
mov
and
cmpsb
add
lock
sbb
jg
out
out
call
adc
out
xor
lret
cld
inc
das
pop
xchg
int3
push
fcoml
std
sahf
stos
lcall
out
pop
inc
fsubr
sbb
jl
ficomps
hlt
pop
mov
out
push
push
push
rorb
lret
lods
jbe
dec
sbb
jno
out
xchg
cmp
push
add
leave
adc
into
lss
shll
mov
call
pop
add
mov
push
scas
mov
push
adc
xchg
adc
mov
fwait
add
pusha
or
test
xchg
ret
pop
mov
xor
hlt
push
xchg
rolb
mov
jg
ret
rcrl
es
roll
pushf
mov
movsl
jne
mov
lea
out
ljmp
xor
mov
in
lds
dec
subl
testl
leave
or
loop
push
xchg
imul
outsl
and
mov
cwtl
mov
xlat
rolb
adc
mov
push
cmpb
push
dec
mov
loopne
and
pop
adc
pushf
mov
out
pop
jbe
std
push
jle
cmp
rolb
leave
ja
repz
mov
outsl
pop
test
outsl
mov
fwait
ds
das
in
ds
inc
and
popf
movsb
aaa
mov
mov
xchg
or
jb
fiaddl
subb
lods
jg
cltd
jns
fcoms
hlt
ret
jg
test
jns
sahf
int
gs
fidivrs
mov
fildll
sbb
insl
icebp
fcmovu
jge
out
sti
icebp
dec
pop
lahf
test
clc
dec
sbb
test
and
jbe
jb
or
xchg
js
or
cmp
xchg
dec
or
xor
xchg
pushf
pusha
sbb
or
jl
fsubrl
pop
scas
jecxz
in
xlat
fwait
inc
or
lret
bound
mov
push
dec
jnp
mov
xorl
into
lods
jo
lds
mov
mov
iret
test
cmpsl
shrl
inc
mov
std
dec
out
mov
dec
xor
pop
sbb
xchg
orl
mov
adc
cld
shrl
mov
cltd
sub
repz
push
into
aaa
adc
xor
emms
mov
or
mov
movsl
movsb
dec
sbb
adcl
mov
clc
cmpsl
jp
cmp
fidivs
jns
sahf
inc
call
xchg
xchg
mov
out
dec
lret
je
js
lods
fcoml
sbb
inc
ret
outsl
push
ret
xchg
jae
xor
clc
xchg
sub
fnstcw
mov
inc
jns
xchg
pop
mov
xchg
fwait
movsl
out
test
sub
loope
rcrl
and
lds
mov
loopne
cmpsl
cmc
imul
out
sbb
aaa
mov
pop
icebp
xchg
mov
call
dec
jbe
xchg
mov
push
loope
mov
xor
in
sbb
mov
push
stos
test
pop
push
and
sahf
jl
out
and
scas
cmp
insl
pop
pop
stos
lret
push
aam
xchg
int
das
mov
cwtl
or
ja
mov
mov
filds
xchg
test
cmpsl
push
enter
imul
ljmp
push
cmpsb
add
stos
jbe
inc
stos
add
add
ss
sub
jno
movl
lock
rcll
mov
sub
std
stos
inc
jo
xor
hlt
insl
or
sbb
inc
push
addr16
cmovl
sarw
fcompl
insl
jmp
rclb
rcr
jb
jns
je
jne
pop
mov
jg
pop
ljmp
xchg
pop
jmp
insl
arpl
jno
xlat
daa
pop
or
and
setnp
loop
mov
dec
rolb
cltd
cmc
sarl
iret
and
sbb
ja
cmc
xor
hlt
addr16
push
jne
iret
sarl
nop
jmp
or
pop
xchg
pop
loopne
cmp
xchg
add
mov
jmp
push
aad
dec
aad
and
sbb
sub
jmp
call
xchg
repnz
xchg
inc
popa
es
dec
sahf
ljmp
adc
ss
push
call
iret
jnp
dec
jne
cltd
pop
push
sub
cmp
mov
or
insb
lahf
out
imul
ret
dec
cmp
pop
ret
out
sti
hlt
pop
mov
or
inc
push
inc
test
mov
sbb
push
aaa
xchg
pop
jne
dec
repz
fiaddl
jmp
adc
adcb
mov
and
in
add
or
aad
xchg
dec
xor
jnp
sarb
xchg
mov
mov
icebp
movsl
fiadds
stc
cmp
adc
lcall
cmpsl
ss
inc
in
dec
scas
mov
int
outsl
lret
mulb
jns
sbb
mov
shl
loope
addl
js
adc
subb
xchg
push
iret
in
sub
cwtl
arpl
ja
stc
fdivl
jns,pn
cmp
repz
push
adcb
dec
pop
decl
imull
or
jecxz
xchg
enter
fcompl
ret
mov
adc
jmp
inc
fucomi
aas
xchg
sbb
sub
cmp
push
inc
repz
cmp
lcall
sub
sub
xor
xor
pop
out
test
test
jge
sub
cmp
xchg
fcmovb
jp
shlb
ljmp
push
jp
aad
adc
adc
pop
or
nop
add
notl
lods
mov
adc
jnp
scas
ss
and
inc
jb
jmp
adc
mov
mov
add
aas
lret
vpshufhw
cltd
pushf
mov
push
pop
sub
or
in
mov
xchg
lods
or
enter
inc
pop
mov
push
sub
stos
mov
jb
outsb
pop
in
mov
scas
out
in
push
jg
push
add
sbb
ret
sub
outsl
lcall
mov
xchg
out
inc
popf
inc
xchg
push
std
sbbb
dec
pusha
mov
lods
jle
sub
xchg
adcl
sub
icebp
mov
out
dec
mov
mov
jle
jmp
lods
lock
push
std
loopne
lret
cmp
push
xor
pop
ss
mov
cli
addr16
out
pandn
test
mov
pop
pop
stos
cmp
mov
xchg
popa
loope
sub
fcmovnbe
imul
int
enter
pop
lock
inc
daa
jb
shll
ss
je
mov
jb
jne
jno
rcr
popa
int
loopnew
and
mov
mov
jp
inc
leave
and
and
test
bnd
scas
push
cmpsb
pop
orl
js
outsb
stos
pop
pop
jmp
or
or
movsb
inc
clc
ds
mov
ss
or
ds
sub
xchg
adc
mov
xor
dec
push
mov
cmc
cmp
lock
pop
jmp
mov
sahf
rcl
lret
xchg
mov
xchg
inc
movsb
push
out
pop
mov
ret
jecxz
daa
add
mov
jo
arpl
sub
mov
pop
movb
xor
push
insl
push
cmp
cmp
sbb
std
roll
movsl
xor
pop
popf
mov
insl
pop
dec
sti
insl
mov
or
movl
inc
fadds
and
mov
jmp
sbb
and
dec
imul
cmpsl
sti
call
sub
fstpl
repnz
aaa
mov
push
call
and
pop
rcrl
out
ljmp
cld
inc
add
sbb
dec
call
les
xlat
scas
fs
fidivrl
pop
sub
lret
outsb
jg
and
push
pop
push
or
lahf
lret
mov
xchg
sub
xchg
push
push
inc
nop
cs
mov
pop
daa
dec
jp
lcall
sub
mov
adc
cmp
daa
ss
mov
jbe
lret
mov
dec
pop
mov
mov
pop
xlat
mov
sub
sub
fmul
adc
pop
lods
pop
das
or
pop
aaa
inc
in
leave
adc
jb
cmp
cmpsl
test
dec
adc
mov
je
hlt
push
inc
loopne
dec
and
inc
decl
jl
and
sti
xor
rcrl
hlt
mov
lods
movsb
sub
mov
mov
test
mov
in
sbb
sti
dec
insl
xchg
je
xor
xorb
jno
lahf
fldl
xor
or
mov
push
push
add
pop
nop
in
mov
fs
xor
cs
in
dec
cmc
outsl
lds
sbbb
ret
push
or
inc
orl
push
jmp
push
ds
cmp
dec
test
inc
lock
nop
call
mov
ds
jns
or
and
push
fcoml
outsl
mov
fildl
bound
mov
fldt
xor
adc
mov
inc
cmp
xchg
roll
cmp
rcr
sarb
sbb
ret
fistl
mov
dec
cltd
and
lahf
movsl
stos
scas
sub
xor
xchg
nop
mov
rclb
hlt
fisttpll
arpl
push
sub
dec
aas
xor
mov
xor
es
jne
inc
out
push
jmp
testl
pop
cltd
sub
mov
or
jnp
adc
dec
ljmp
cmpsl
or
out
and
loop
fldt
xor
dec
xchg
pusha
les
loope
or
push
aas
mov
pusha
out
movsb
cld
outsb
cltd
mov
scas
xchg
cwtl
jns
test
inc
stos
aam
mov
dec
adc
gs
or
outsl
iret
mov
xlat
outsb
cmc
fwait
jl
sti
push
xchg
jmp
xchg
dec
add
mov
fsts
dec
addl
push
fs
sbb
adcb
adc
outsb
lock
sub
in
mov
outsb
addl
xor
movsb
or
in
push
jecxz
push
jnp
addr16
and
pop
jle
les
shrb
jge
mov
fwait
int
aas
enter
ss
push
dec
sub
pop
mov
les
in
loop
loopne
test
jne
call
jbe
stc
imul
sahf
push
icebp
mov
sub
add
xchg
pop
xchg
aas
fcmovne
fcoml
test
jg
icebp
outsb
inc
xor
enter
and
daa
ret
repnz
popf
data16
cwtl
in
ret
lea
les
ret
pop
xor
push
add
push
rcr
imul
add
and
imul
xchg
push
adc
js
je
push
sub
ftst
jmp
and
mov
mov
dec
dec
or
loop
sbb
test
or
jnp
push
inc
push
aam
mov
push
mov
lret
adc
xor
push
jg
xchg
dec
sbb
sub
sub
cli
mov
clc
mov
jae
lahf
rorb
ret
lods
shlb
sub
sub
push
ret
mov
js
mov
or
or
xchg
push
jo
fisubl
mov
rorl
dec
sub
push
loopne
jp
imul
cltd
or
mov
mov
shrl
xchg
neg
mov
push
leave
roll
idivl
insl
mov
int
mov
repnz
xor
dec
call
jl
imul
fnstcw
adc
jmp
mov
pop
out
add
push
push
dec
shrw
push
dec
mov
sar
stos
scas
pop
xchg
andb
cmp
daa
or
sti
cmp
pop
jle
xor
mov
mov
push
frstor
pop
lret
xchg
mov
clc
sub
stos
inc
enter
cmc
aad
test
cmc
push
scas
ss
out
jmp
inc
pop
aad
mov
in
aam
xor
add
mov
xchg
sbb
xchg
cmp
adc
fcompl
nop
out
iret
and
pushf
mov
and
xor
mov
jae
loopne
inc
mov
mov
mov
fistps
aas
call
roll
in
pop
inc
inc
fsub
push
pop
movsw
je
jne
jle
pop
das
xchg
mov
out
jae
es
std
adc
jmp
and
push
and
mov
rol
add
mov
bound
pop
push
pop
movsl
add
dec
mov
dec
in
sub
insb
or
lahf
push
test
pop
cmp
lret
sub
push
enter
in
test
cmpsl
je
mull
cmpsb
lds
mov
adc
into
push
sub
xchg
inc
cmpsl
mov
int
int3
adc
orb
cmpsb
mov
cltd
lret
lcall
xor
mov
lods
test
jecxz
inc
ljmp
push
adc
mov
lods
or
loop
adc
mov
add
xor
xlat
test
int
imul
out
ss
add
lods
lds
ljmp
sub
pop
fidivrl
xchg
cwtl
imul
loop
loopne
xchg
rclb
sbb
pop
add
sti
and
pusha
fs
mov
push
or
adcb
pop
pop
outsl
push
push
pop
in
daa
movsb
xchg
pop
daa
sbb
push
out
xchg
and
int
add
xchg
pop
nop
mov
add
pop
mov
pop
loop
cmp
jg
mov
sub
gs
push
lods
cli
cmpsb
inc
sbb
iret
cld
mov
mov
in
push
mov
stos
lahf
out
mov
xchg
popf
nop
sub
ljmp
sbb
add
mov
jmp
and
and
adc
insb
jmp
mov
jo
pop
negb
dec
loope
push
push
jo
push
adc
outsb
stos
out
sar
push
push
sbb
xchg
xor
js
into
pxor
mov
sbb
cmp
into
mov
dec
push
push
rcrb
push
aad
cltd
aaa
inc
imul
jle
les
add
or
das
jb
pop
insb
in
cli
push
pop
jl
jmp
stos
pop
test
cmp
cmpsb
jo
aad
push
insl
or
dec
and
jecxz
out
das
jg
mov
out
adc
jge
sub
pop
enter
mov
enter
pop
loopne
push
cmp
rcr
loop
pop
rcl
popa
inc
xchg
xchg
xor
dec
fsubrl
sub
push
adc
cmp
cltd
pop
jl
clc
xchg
xor
loopne
aam
adc
mov
insl
je
dec
pop
lock
out
xor
push
sub
dec
fcoml
pop
divb
pusha
fmull
mov
sti
mov
xor
loopne
imul
jno
fwait
pop
pop
push
sub
add
cmpsl
adc
imul
sub
insb
lods
push
rol
iret
pusha
scas
repnz
mov
mov
xchg
jecxz
ljmp
pop
xor
mov
sub
outsl
jnp
clc
sti
sarl
loope
stos
adc
jge
adc
mov
pusha
add
jl
sub
mov
dec
mov
fldcw
in
mov
push
inc
cmp
dec
adc
ret
and
or
data16
push
cmp
pop
mov
and
ja
movb
dec
inc
incl
push
lret
imul
mov
dec
mov
movsl
cs
jo
fcomi
xor
push
ss
mov
in
pop
inc
data16
shll
or
popf
pop
mov
cld
rolb
sub
sub
loope
das
fisubl
inc
cwtl
add
into
mov
inc
clc
mov
iret
shl
push
iret
stos
clc
sahf
repnz
and
push
imul
push
scas
xchg
test
xlat
adc
test
imul
or
push
jl
mov
push
and
call
jns
xchg
push
cld
out
mov
cmp
inc
aad
xlat
ret
fwait
out
cmc
xor
sahf
cmp
push
cmp
cmc
aam
or
jmp
adc
inc
imulb
arpl
mov
and
adc
cld
dec
ret
test
loope
or
in
cli
insb
lods
or
js
dec
movsb
push
addb
lret
mull
inc
sbb
inc
push
push
cltd
xchg
cmpsb
dec
ss
pop
push
fldl
cmpsl
cltd
cmp
push
inc
mov
push
jns
pop
cmp
daa
add
cli
add
in
movsb
mov
add
lds
mov
sub
xor
rcll
sbbb
and
hlt
popl
mov
shr
dec
sarb
mov
and
sarb
ds
mov
pop
cmpsl
aam
sbb
stos
push
or
mov
insb
out
hlt
mov
mov
scas
inc
jp
ret
je
dec
adc
stos
pop
sarb
inc
sbb
lahf
fildl
fdivrp
pop
lret
xor
outsl
mov
xchg
cmpsb
out
lods
or
popf
mov
popf
gs
add
fs
dec
cmc
outsb
inc
pop
xchg
pop
mov
lds
dec
lock
fdivrs
mov
pop
out
inc
pop
lahf
loopne
inc
cli
cld
fdivrs
bound
mov
fstp
out
add
out
inc
xchg
add
shlb
cmp
insl
xchg
ljmp
ss
sarl
inc
sbb
inc
stos
push
fs
in
jle
sarl
insl
and
inc
sub
sub
cli
jb
outsb
lret
inc
cmp
in
movsb
dec
mov
xor
add
dec
test
aad
test
testl
pop
adc
dec
cltd
sbb
fldz
movsb
add
addr16
gs
sub
adc
pop
std
lods
in
mov
mov
pop
fldl
add
subl
sub
mov
cmc
dec
stos
hlt
pop
arpl
cwtl
in
leave
add
aam
dec
sbb
xlat
adc
sbb
mov
add
xor
into
inc
mov
divl
jp
scas
test
xchg
jno
cmp
outsb
dec
fldcw
movsb
xor
mov
xor
sbb
mov
imul
rcl
inc
in
and
or
inc
mov
hlt
or
stos
lret
mov
sti
sub
aad
ret
dec
in
jno
adc
mov
mov
daa
cmpsl
mov
mov
xchg
mov
xor
fildl
jmp
mov
ljmp
inc
cmpsb
or
nop
adc
sbb
cmp
out
dec
das
loop
or
push
into
lcall
into
imul
mov
push
xor
or
add
outsb
mov
daa
sub
ja
outsl
mov
jge
icebp
int3
mov
fcoms
pop
mov
mov
int
scas
sub
push
imul
sbb
repnz
push
push
pop
imulb
pop
cs
xor
inc
or
test
rorl
sbb
sbb
pop
jg
mov
jbe
dec
testb
sbb
inc
lret
sbb
push
es
icebp
push
mov
adc
sbb
jbe
xlat
mov
movsl
sbb
bnd
lea
out
xchg
sbb
insl
testb
pop
into
subb
popa
repz
stc
add
sub
mov
pop
movsb
jnp
ja
inc
enter
lret
arpl
fbstp
ret
xchg
jnp
jb
and
insl
fsubrp
insb
sbb
sarl
outsb
xchg
fidivrl
xchg
xchg
push
lahf
std
sub
out
hlt
ljmp
les
addr16
loope
add
mov
add
jne
sti
xchg
jb
and
mov
add
jl
or
mov
roll
sbb
xchg
mov
mov
push
ficoml
ja
mov
inc
sbb
add
inc
pop
shrb
ret
repz
jp
mov
lret
cwtl
arpl
mov
push
mov
das
mov
ja
aaa
ret
push
mov
add
aaa
out
push
jp
pusha
and
mov
push
imul
insl
mov
adc
lret
mov
stc
stos
fcoms
mov
mov
in
push
test
cmp
sbb
xchg
shr
shrd
into
pop
push
stc
mov
cmp
mov
push
pop
jge
pop
jle
sub
fldt
lods
or
cltd
adc
sahf
pop
push
jge
icebp
iret
pop
mov
cli
cmp
bound
pop
jmp
fisttpll
xchg
movl
xor
pop
sbb
shrl
es
fidivs
fwait
sbb
mov
adc
xchg
fildll
incb
lret
dec
adc
xchg
cli
or
or
xchg
out
mov
les
data16
nop
xchg
pop
mov
pop
stc
fildl
leave
mov
inc
scas
pop
adcl
mov
fs
imul
call
lahf
cli
jo
test
xor
hlt
push
scas
mov
in
sarl
dec
sbb
fdivl
push
jns
mov
or
lcall
inc
mov
xchg
mov
sub
mov
movsl
aaa
sarb
mov
mov
test
stos
idivb
in
mov
loope
data16
cmc
outsl
sub
push
or
scas
cmp
push
and
sahf
mov
inc
inc
push
mov
dec
xchg
nop
loop
lea
mov
xchg
lds
dec
subl
sti
sbbb
lcall
out
mov
jb
pop
lcall
sbb
mov
and
mov
or
mov
xchg
dec
lea
neg
out
sub
push
fnstcw
pxor
cmp
and
xchg
xchg
cmp
addr16
cmpsl
popf
push
pop
pop
jae
mov
adc
or
inc
test
gs
into
jge
xchg
shl
jno
inc
xchg
into
and
pop
xchg
mov
stos
cwtl
mov
jecxz
jne
pushf
stos
adc
mulb
cli
mov
gs
lahf
inc
add
fnstcw
je
adc
nop
es
out
mov
out
test
cmp
jg
testb
push
fldenv
push
xor
or
and
push
xor
popfw
add
sbb
mov
lods
test
dec
or
mov
mov
fisubrs
or
mov
loopne
jl
out
lret
xor
sbb
xchg
aas
sbb
repnz
ret
sbb
pop
pop
fwait
jecxz
cmpsb
jb
dec
mov
inc
sbb
stos
adcl
test
jo
scas
aad
mul
int
mov
xchg
int
scas
loopne
inc
jmp
inc
mov
mov
decl
cmp
cmp
fldenvs
sub
into
nop
xorb
jns
and
and
jmp
mov
and
clc
pop
sbb
jl
mov
mov
jnp
std
data16
or
rcll
stc
loope
pop
insl
subl
xchg
pop
sub
outsl
fdivrs
mov
inc
cld
push
pusha
imul
pop
call
dec
mov
imul
push
mov
pop
inc
dec
or
rol
sbb
ds
push
les
xor
mov
out
dec
sub
sbb
outsb
int
add
xor
fs
lret
cmpsb
add
sub
pop
loope
mul
hlt
bound
int3
arpl
push
lahf
inc
imul
jb
scas
repz
ja
push
aaa
in
stos
cmp
mov
push
jl
and
mov
repz
ret
ficomps
add
enter
loope
in
scas
nop
lcall
jp
sub
cmp
mov
jmp
daa
mov
push
imul
stc
clc
movsl
mov
jl
ret
sbb
mov
xchg
adc
int
lret
dec
shll
movsl
fdivrs
push
and
and
dec
mov
repnz
call
fsts
out
add
mov
in
imulb
cli
jg
inc
mov
roll
in
das
cmp
xchg
scas
inc
shrl
ret
mov
push
lea
and
push
movsb
jno
enter
inc
lahf
fwait
and
fistpl
xchg
adc
lahf
inc
ret
push
cmp
mov
xchg
mov
xchg
lcall
stc
insl
sbb
jbe
mov
sbb
ds
and
xchg
xchg
cmc
fadd
xor
dec
push
jg
int
push
or
negb
jecxz
mov
ss
fnstcw
test
push
pop
loopne
jl
pop
dec
jmp
icebp
loop
xchg
xchg
cmp
cld
mov
sbb
cpuid
xor
lods
test
sbbl
outsb
lods
xlat
jmp
lock
mov
fs
pop
sub
mov
fstpl
stos
stos
push
add
sbb
sbb
or
insl
jbe
and
insl
and
sub
add
mov
loop
lods
iret
in
xchg
or
test
int
ljmp
adc
jnp
dec
push
inc
xchg
cmp
mov
jno
push
jno
ret
sbb
mov
jecxz
out
jnp
mov
mov
andl
in
or
push
fldl
dec
lcall
push
gs
dec
jecxz
lret
pop
call
dec
mov
mov
pop
pop
fists
divl
ret
sahf
scas
push
dec
in
mov
lods
jecxz
int3
rsm
ret
rcll
sahf
jae
stc
in
iret
adc
dec
daa
or
rcr
out
scas
sahf
jg
mov
loope
fs
push
sub
leave
mov
out
fwait
add
dec
aad
fldcw
and
lcall
inc
or
rcl
push
xor
cmp
mov
aad
fwait
inc
lds
mov
sub
adc
and
das
sub
mov
add
or
jne
xchg
xor
mov
outsb
in
loopne
cld
lret
sub
sub
iret
scas
test
fsubs
sub
mov
jb
inc
popa
cmp
mov
adc
mov
adc
sub
mov
roll
imul
jb
sbb
mov
mov
push
bound
into
and
or
push
cmc
das
sub
in
xor
add
inc
inc
xchg
not
jle
test
je
push
mov
sub
dec
adc
or
dec
je
je
rcll
inc
std
arpl
outsb
cmp
leave
cmpsb
push
cltd
push
popa
leave
movsb
push
pop
jo
sub
ljmp
iret
xor
pop
in
pop
sar
shrb
jl
lret
jecxz
lret
xor
or
push
pop
fs
sub
test
mov
subb
mov
shrl
in
ret
lret
loope
sub
pop
pushf
dec
lods
adc
fwait
push
mov
mov
ja
out
jg
rcr
je
push
pop
call
push
sti
jo
int3
mov
adcb
in
idivb
insl
cmc
lods
cld
addr16
sbb
les
push
xor
xchg
movsl
shrb
inc
or
out
jp
add
push
pusha
dec
pop
cmp
pop
and
fdivs
daa
cmp
xor
fadd
ss
sbb
sub
mov
iret
sbb
das
add
mov
xor
je
sbb
push
cli
xchg
sub
adcl
mov
loop
in
out
mov
insb
and
dec
add
jge
or
inc
dec
mov
ja
shrb
xchg
mov
fmul
scas
inc
pushf
icebp
lods
add
xor
jno
mov
test
leave
fcoms
fsubrl
xchg
ja
stos
inc
cmpsl
cs
jmp
adcl
fiadds
jns
cmp
xor
jnp
inc
test
sbbl
push
sub
inc
leave
mov
xor
arpl
cld
push
inc
arpl
in
int3
sub
sarl
fbld
mov
mov
inc
dec
xchg
insb
adc
lcall
xchg
setge
bnd
push
mov
cmc
sbb
daa
int3
mov
mov
or
and
xchg
or
cmp
fildl
mov
jge
aad
dec
frstor
mov
mov
push
mov
mov
or
mov
jbe
or
jp
mov
sti
orl
rclb
jecxz
lods
pop
pop
imul
mov
jecxz
pop
pop
or
ds
xchg
inc
ss
sub
dec
xor
adc
loop
hlt
push
jp
fidivrs
dec
xchg
adc
push
jl
dec
ret
jl
push
stos
and
or
dec
push
popa
cmp
push
data16
cmp
fsubrl
pop
mov
ss
add
mov
arpl
cmpsb
mov
adc
inc
lcall
mov
inc
pop
ret
popf
mov
jae
idivl
push
rcrb
xor
outsl
bnd
clc
mov
int
lock
adc
add
xchg
mov
xor
in
fdiv
test
add
mov
movsl
xchg
xor
fsubs
mov
mov
jle
pop
or
mov
sbb
xchg
stos
add
xchg
nop
mov
jne
bound
insb
fdivrp
js
xchg
sub
gs
jmp
mov
add
ret
push
rcrb
xchg
jge
xchg
shrb
mov
adc
mov
mov
pop
mov
das
clc
pop
or
add
xor
pop
cmc
mov
and
outsl
cmp
xor
mulb
aas
xor
sbb
insb
cmpsl
push
jbe
and
lds
sbb
pop
out
xchg
aas
dec
and
bound
xchg
pop
insb
lret
adc
nop
std
mov
jno
mov
sbb
daa
lods
mov
or
lea
fbstp
ds
push
xchg
dec
push
into
push
mov
cmpsb
call
test
and
sub
or
in
jle
mov
mov
in
push
fxch
leave
mov
push
xor
leave
fisubrs
jmp
std
xchg
push
mov
in
mov
dec
stos
jmp
lret
cmp
mov
fidivrs
cld
mov
mov
lods
jno
ret
sbb
sbb
push
sbb
iret
xchg
sub
pop
daa
jecxz
leave
xor
ljmp
scas
roll
push
xchg
mov
jb
sub
add
or
mov
lds
iret
pop
sbb
insb
out
inc
inc
stos
mov
jmp
data16
sti
gs
or
push
mov
sbb
inc
shll
mov
push
xchg
cwtl
add
or
or
jbe
cltd
jle
les
adc
data16
mov
sbb
mov
xchg
mov
and
adc
jne
icebp
lahf
out
jns
cmpsb
je
mov
mov
adc
pop
sub
in
adc
fs
sub
adc
mov
xlat
lock
lret
adcb
mov
das
ret
inc
stos
jo
jns
xchg
outsl
inc
push
add
mov
aad
cltd
mov
sbb
sbb
into
and
js
cmp
pop
repnz
lea
pop
outsl
dec
mov
jne
pop
jg
mov
into
push
stos
je
mov
aam
push
inc
and
sti
mov
scas
mov
cli
push
sbb
mov
and
sub
jmp
dec
push
sub
lea
fiaddl
push
cmc
adc
adc
push
sbb
pop
ljmp
mov
ss
sub
mov
es
sub
insl
cwtl
jne
lods
addr16
pop
push
mov
jmp
or
mov
test
push
into
push
mov
rcl
sub
sub
out
mov
cli
aam
ret
sub
lds
mov
scas
cmp
cs
dec
lds
mov
jl
loope
int
ljmp
lea
gs
or
pop
lret
jl
push
and
jge
aam
enter
out
cltd
inc
adc
xchg
mov
in
mov
jg
data16
xlat
push
xor
inc
test
arpl
leave
xchg
imul
js
test
sub
push
push
dec
push
cli
xor
push
pop
add
xor
into
xor
jg
lret
or
lods
cltd
push
shlb
push
push
fadds
test
inc
and
lock
adc
pop
imul
in
inc
inc
sub
mov
fsubs
jecxz
into
mov
sbb
push
aas
fildl
test
jecxz
lods
popa
cmc
daa
scas
lahf
lret
dec
inc
xchg
xchg
mov
sub
test
dec
mov
out
or
and
xorl
hlt
iret
and
test
bound
add
hlt
push
ljmp
ds
sub
test
ret
or
push
pop
outsl
ret
dec
xchg
jl
sub
outsl
inc
inc
pushf
insl
in
cltd
aam
inc
std
ss
dec
ljmp
popa
mov
jg
push
mov
out
add
adc
xlat
loope
je
xor
popf
pusha
lds
movsb
mov
mov
mov
not
jl
pushf
sbb
int3
jmp
inc
add
push
sub
inc
cmp
mov
jnp
outsl
repnz
mov
leave
adc
sub
into
clc
sub
xchg
jns
or
pop
xchg
sbb
bound
dec
out
and
pop
mov
mov
xchg
sub
repnz
mov
inc
or
in
inc
ss
out
inc
roll
int
mov
and
loopne
add
sbb
jns
add
push
add
dec
test
shrl
iret
xchg
dec
inc
outsl
mov
mov
inc
cmp
rclb
sbb
sahf
imulb
in
xor
popf
or
pop
frstor
mov
jp
iret
inc
ret
sbb
xchg
js
sub
fiaddl
stos
cs
push
sub
sub
or
popa
call
sub
inc
push
mov
adc
nop
xor
mov
add
and
sub
add
cmp
xor
mov
dec
out
aad
pop
jl
stos
jge
xchg
adc
hlt
icebp
pop
sarl
and
jle
push
push
dec
push
adc
inc
push
cmp
mov
sub
into
ljmp
add
xchg
pop
add
mov
mov
mov
and
sub
repnz
pop
arpl
jge
push
loop
and
inc
insb
mov
jge
lea
lds
xor
lock
jmp
add
xchg
mov
or
mov
inc
pop
les
mov
je
jb
push
sbbb
push
int
jo
loopne
out
leave
cmp
mov
cmc
movsb
daa
into
add
push
stc
mulb
mov
cmpsl
mov
rorl
cmp
adc
out
mov
jecxz
sbb
incl
int
or
fmuls
lcall
adc
jge
push
call
sub
cli
push
adc
sbb
push
stos
xchg
and
xchg
imul
out
in
data16
jmp
cli
jge
fdivp
push
out
stc
mov
icebp
add
add
jns
add
add
das
push
push
cwtl
pushf
mov
sub
inc
out
cmc
jne
inc
adc
neg
adc
shll
lea
push
dec
mov
or
fists
mov
stos
jp
mov
imul
mov
xchg
mov
std
scas
xlat
xchg
adc
inc
mov
pop
gs
jmp
add
lock
add
bound
ss
leave
lret
xrelease
stc
cmp
cs
sbb
mov
xchg
inc
mov
ret
hlt
lahf
sub
push
js
outsl
sbb
or
cltd
xchg
out
pop
cmpsb
jne
mov
sarl
or
adc
push
and
xchg
popf
movsb
mov
int
lea
js
xor
pop
mov
jp
add
cli
xchg
adc
or
adc
icebp
test
jo
scas
mov
lds
xchg
mov
shll
orb
xor
in
dec
xor
mov
jmp
imul
cli
pop
xchg
cmp
pop
dec
adc
jg
pop
lret
push
mull
test
lods
notb
adc
mov
in
mov
addb
insl
push
sub
push
sti
sub
jp
cmp
cwtl
lods
jnp
je
inc
jo
and
push
sbb
scas
xchg
mov
xor
dec
leave
dec
icebp
out
mov
inc
dec
mov
xchg
test
roll
push
cmc
cmp
mov
test
scas
mov
pop
adc
rcl
pop
push
stc
imul
add
fisubl
xchg
xchg
push
xor
cmp
sahf
adc
out
mov
jle
jbe
jbe
cld
ret
out
push
xor
or
push
std
lret
test
push
stc
cmp
nop
or
aad
inc
fcomp
and
loopne
mov
and
or
aaa
imul
pop
dec
pop
push
pop
xchg
cmp
repnz
ror
fsubl
icebp
mov
inc
clc
adc
jae
dec
mov
fbstp
insl
test
shll
adc
push
cmp
pop
push
mov
iret
sbb
shld
push
in
and
movsl
xchg
sbb
xchg
imul
lods
popf
pop
aad
lods
nop
lea
jno
xor
nop
movb
std
scas
mov
test
jle
jnp
test
roll
sub
std
sub
adc
inc
mov
into
out
jbe
aad
xchg
outsb
mov
and
cmc
into
shll
adc
mov
fldenv
push
in
out
pop
inc
stos
push
out
in
xchg
aas
into
dec
mov
xor
pop
mov
int3
in
sarl
xchg
popa
adc
and
fldt
sub
jb
xchg
scas
lea
adc
lea
cmp
sbb
loop
into
rcll
int3
mulb
jl
into
cmp
inc
add
add
fwait
rolb
add
add
xor
inc
add
addb
push
add
push
inc
add
add
add
fimull
shl
xchg
push
sbb
sub
mov
mov
movsb
arpl
dec
sarl
or
xchg
adcl
ret
fs
gs
insb
adc
mov
xor
lahf
je
shrl
ret
cmp
inc
inc
and
sub
push
js
outsl
ljmp
or
sub
adc
jp
mov
push
inc
ret
ds
mov
lock
push
xchg
fisubl
je
xchg
outsb
or
cmp
notb
xor
dec
mov
fidivs
lea
jo
cmp
ds
adc
sarl
lods
rclb
add
cmc
and
mov
ret
push
test
mov
push
in
mov
jmp
arpl
pushf
pusha
dec
dec
or
sbb
dec
or
xchg
movsb
mov
xor
cmp
mov
jle
sbb
addr16
test
aam
scas
sbb
jecxz
ljmp
scas
cmp
pop
jmp
int
arpl
xor
mov
mov
dec
fists
push
adc
lret
std
addr16
mov
add
xchg
jl
out
push
push
inc
fnsave
nop
mov
push
sbb
into
and
repnz
mov
notl
ljmp
inc
imul
icebp
popa
frstor
mov
cmp
hlt
lcall
rol
add
pusha
hlt
mov
pop
les
rcrl
sub
mov
cli
nop
orl
cmp
and
sbb
repz
push
nop
xchg
inc
or
jnp
movsb
inc
rorl
add
addr16
bound
stos
push
loop
xor
xor
sub
js
cmp
sbb
addb
jb
or
icebp
das
ljmp
jle
int
lods
pop
mov
mov
pusha
or
adc
pop
xchg
bound
mov
lret
je
cltd
mov
sahf
stc
ret
loop
dec
repnz
daa
xor
cli
ja
orb
or
sbb
and
sbb
lds
rol
sub
shlb
jge
and
inc
cmpsb
mov
sbb
and
jg
iret
out
cmp
jns
ret
cs
mov
leave
mov
in
sbb
pop
jo
dec
push
add
sti
fmull
loopne
bound
test
xorps
mov
adc
jg
add
sbb
fwait
out
popl
shlb
in
stc
je
jmp
adc
mov
pusha
xor
insb
and
aad
cmpsb
out
int3
or
ret
inc
addl
test
pop
gs
sti
faddl
daa
arpl
mov
jne
ds
cs
push
mov
cmpsl
dec
lock
outsl
int3
cs
dec
or
cmp
xchg
rcr
cmp
insb
mov
imul
or
jne
mov
add
out
mov
andl
xor
iret
sbb
xchg
pusha
xor
test
aas
jae
xchg
dec
jnp
mov
popf
and
inc
mov
fildll
daa
pop
dec
test
mov
fimull
pop
mov
into
frstor
mov
mov
adc
adc
ret
cs
mov
push
sub
mov
ljmp
lods
push
cmp
movsb
fisubl
push
repz
pop
push
sar
mov
mov
cmc
test
lods
mov
test
aam
xor
cwtl
imul
adc
addl
cld
xchg
sbb
add
sbb
test
mov
lock
and
jge
mov
data16
adc
mov
push
mov
mov
sub
pop
je
movsb
mov
add
and
insb
push
arpl
mov
pusha
cmp
adc
test
je
lods
mov
cmp
pop
in
aaa
aaa
dec
ja
jb
je
into
mov
mov
movb
inc
mov
xchg
scas
and
cld
dec
inc
decb
xchg
jo
cmpsb
pop
imul
mov
scas
stos
pushf
push
sub
daa
fwait
in
push
cmpsl
jmp
sub
in
aam
out
fs
add
dec
pop
xor
and
aam
push
fiaddl
mov
inc
jecxz
in
jge
or
dec
sub
pop
sbb
gs
or
jg
pop
mov
pop
pop
pop
xchg
mov
out
repnz
jl
pop
movups
cmp
loop
push
xchg
cli
inc
out
mov
push
dec
std
push
dec
stos
jmp
insl
cwtl
in
lods
fisubs
mov
fwait
sahf
xchg
cmp
sub
into
lock
dec
sahf
add
inc
out
xchg
hlt
lret
mov
enter
ljmp
cs
in
fidivs
dec
adc
adc
enter
cmp
sbb
pop
testb
cwtl
push
jmp
fistpl
jl
jnp
mov
inc
pop
iret
cwtl
jmp
stos
add
cwtl
hlt
jle
lcall
and
mov
cmp
add
pop
sbb
enter
addl
adc
imulb
mov
pop
xor
push
add
jl
jle
push
icebp
or
imul
xor
aas
jmp
shl
jbe
xchg
icebp
sbb
push
mov
filds
scas
in
mov
xor
fidivs
lock
xchg
cmp
mov
fbstp
cmp
ljmp
fidivrl
pop
lods
mov
popf
and
xchg
imul
sbb
mov
adcb
xor
mov
mov
ljmp
pusha
add
in
rcrb
bnd
movsb
ljmp
sar
cmc
jo
push
sub
pop
lea
movsb
xchg
jl
mov
inc
adc
inc
fmuls
push
stc
out
outsl
stc
pusha
aaa
cld
shll
push
mov
int3
stos
jne
rolb
in
sub
add
call
cmp
cs
cmc
dec
mov
mov
sub
lods
push
mov
bnd
aad
shll
lret
sarb
inc
and
or
or
sbb
int3
sbb
fnstenv
cmpsb
pop
sbb
mov
inc
cli
sub
fdivs
movsb
addb
and
sti
jp
pop
xchg
inc
sub
push
in
lds
mov
cmp
or
xchg
shll
mov
and
mov
andl
dec
shlb
push
loopne
ds
or
inc
ljmp
mov
or
lock
mov
dec
mov
xchg
punpckldq
ss
pushf
jnp
fst
arpl
fnstenv
pop
pop
iret
xchg
enter
mov
out
aam
jg
leave
mov
cwtl
sbb
jb
push
loop,pn
and
movsl
ljmp
jmp
aas
test
mov
dec
dec
adc
out
ljmp
cwtl
int
cmc
out
dec
int
sbb
in
ret
daa
adcl
ret
stos
shll
mov
pop
sahf
gs
xlat
mov
mov
dec
jb
pop
xchg
jp
push
push
dec
sub
inc
mov
pusha
inc
mov
sahf
std
inc
cmp
mov
jecxz
mov
mov
or
mov
mov
or
and
pop
or
das
mov
or
sarl
ret
inc
div
outsl
mov
leave
or
rolb
imul
leave
cmp
lock
jmp
loope
sub
xchg
jle
pop
mov
xor
mov
add
mov
sti
movl
cmpsl
loop
jecxz
pop
rcl
stc
jge
lods
int
adc
mov
push
movsl
xor
sub
addl
jl
stos
mov
fcompl
movsl
mov
inc
push
shrl
or
or
push
push
dec
in
cmpl
sarl
cmp
dec
sbb
imul
arpl
into
mov
repnz
or
addr16
mov
mov
mov
or
xlat
ss
test
lret
out
lret
or
je
pop
popa
aam
sbb
sti
in
pop
nop
insb
xchg
addr16
push
and
adc
outsl
jecxz
add
cltd
lds
pushf
and
out
pop
incb
dec
pop
aam
cmpsb
leave
xchg
int3
sub
pop
call
loop
fstl
pop
mov
cli
jge
ljmp
mov
cmp
sub
das
subl
int
inc
inc
adcb
rcrl
sbb
stos
pop
push
dec
hlt
ljmp
iret
dec
push
ffreep
jns
out
ja
sti
imul
lods
addr16
cs
or
mov
inc
incb
stos
daa
sub
cld
inc
iret
aas
pushf
fisubrl
xor
lds
out
inc
cs
pop
push
jne
sbb
divl
aad
pop
fistps
test
ja
daa
arpl
lret
mov
jp
dec
enter
aam
xchg
cmp
fcomi
push
adcl
repnz
ret
push
add
loope
and
xor
lock
cmp
jno
cli
push
in
mov
push
dec
imul
das
jae
mov
sbb
in
cmpsb
xchg
mov
dec
daa
popa
icebp
into
loop
add
test
fists
jmp
cwtl
fcmovu
scas
fwait
adc
dec
stos
adc
shrb
mov
lods
mov
bound
or
stos
pusha
iret
das
jp
dec
mov
or
icebp
dec
mov
shll
aad
out
sti
pushf
xor
mov
mov
xor
aaa
jno
repnz
sub
pop
addr16
mov
xor
jbe
dec
xor
std
jbe
shlb
imul
sbb
test
inc
adc
sub
arpl
mov
mov
cs
add
std
pusha
xor
arpl
inc
lret
sbb
push
dec
std
xor
clc
ja
push
insb
dec
push
jecxz
inc
dec
mov
jbe
cmp
cmp
cmp
jmp
sub
stos
cwtl
aas
xchg
clc
sub
jge
xor
push
mov
ret
out
pop
loopne
xor
imul
lret
je
pop
mov
xor
popa
jb
lahf
outsb
scas
push
mov
xor
fstp
add
nop
fwait
adc
cld
shll
add
add
jmp
js
adc
shll
mov
xor
in
ret
jle
xlat
push
push
addb
popa
fwait
popa
pop
cs
notl
inc
jge
rclb
mov
cmp
sahf
mov
pop
mov
aaa
xchg
jp
cwtl
mov
lea
adc
in
cli
loopne
inc
jb
stos
arpl
lds
lock
stc
repz
xrelease
mov
adc
cmpsb
shl
xor
or
sub
mov
and
jnp
je
mov
jns
xor
dec
sbb
out
out
dec
movsl
cmp
mov
lods
xchg
sub
test
add
add
sub
push
sti
or
lods
push
repnz
cmp
imulb
arpl
mov
imul
adc
out
jge
int
aam
pusha
repnz
dec
dec
adc
ja
push
xchg
loopne
lahf
out
test
push
adc
addr16
shlb
int3
fsubrs
mov
lret
dec
push
mov
sete
pop
popa
nop
or
test
in
in
aad
rorb
xor
in
dec
xchg
xor
icebp
cmpsl
ss
fidivrl
cli
pop
sti
cs
lret
ljmp
push
mov
cs
jge
add
popf
push
movhpd
push
test
mov
lods
iret
inc
pop
cmp
int3
stos
push
pop
adc
xlat
sub
fcompl
xor
leave
adc
addr16
or
shll
mov
add
hlt
es
mov
and
mov
in
in
cli
add
stc
and
mov
mov
sbb
jo
push
mov
lahf
cld
cmpb
add
or
pusha
movsb
cmc
mov
popa
lcall
mov
arpl
jmp
add
call
icebp
je
jp
movsl
mov
mov
push
ljmp
or
push
xchg
inc
lahf
jmp
icebp
dec
jge
cli
push
xor
add
orl
mov
push
mov
add
aas
test
dec
fs
fldl
or
and
in
push
sub
dec
fidivs
xchg
pop
mov
sar
add
aaa
fistpll
mov
sbb
mov
jns
sti
js
movsb
jle
scas
outsl
and
push
lds
repnz
jg
gs
mov
push
jmp
cmp
pop
pop
fildl
or
cltd
xorl
mov
cmp
pop
movsb
pop
ljmp
mov
or
xlat
or
push
out
repnz
pushf
jne
inc
xchg
movsb
pop
cmp
sbb
divb
lcall
hlt
test
dec
add
mov
and
jge
jecxz
lods
cmp
adc
mov
aad
pop
mov
jae
xor
faddl
imul
jns
mov
fmull
inc
lods
fucomi
icebp
out
dec
lahf
bts
adc
sti
mov
out
pop
adc
insl
push
pop
lods
add
lods
mov
aam
jns
jmp
inc
push
cmp
fldl
mov
and
or
lds
fsubrs
into
sub
dec
outsb
xchg
scas
hlt
mov
in
es
pop
xchg
scas
sbbb
dec
subl
in
xchg
push
push
cmc
ret
in
xor
rorl
mov
xor
inc
loope
push
push
dec
aam
adc
mov
dec
das
in
divl
sub
outsl
pop
push
push
or
out
ret
adc
aad
pushf
mov
repnz
into
sub
inc
mov
inc
jle
cmpsb
mov
out
cmc
bound
inc
push
sub
cwtl
fisttpll
clc
sbb
fwait
sub
outsb
inc
sahf
cmpl
lods
xor
dec
xchg
mov
adc
stc
xchg
xor
fwait
ret
cld
xadd
mov
leave
cmp
lahf
jmp
stc
std
cmp
jnp
push
popf
rorl
xchg
out
pusha
fwait
scas
lret
push
push
sarl
sbbl
nop
push
in
out
xor
fs
aaa
lods
sbb
lea
lds
jecxz
pop
inc
jmp
sahf
fwait
ror
mov
pop
jg
mov
add
push
pop
mov
xor
mov
sbb
or
dec
addr16
push
sbb
inc
dec
pop
out
leave
xchg
cmp
repnz
push
iret
mov
inc
cmp
mov
fmull
cli
orl
in
sub
xchg
pop
push
mov
enter
clc
inc
imull
cmp
push
stc
test
fwait
xchg
ffree
gs
arpl
xor
cmpsb
cmpl
or
movl
rorb
lods
lea
sub
cmpsl
mov
mov
jl
cmc
ret
sub
sub
jg
sub
sub
int
loopne
xor
lock
aaa
mov
addb
movsl
mov
sbb
mov
mov
adc
test
fwait
repz
push
ss
jae
enter
in
ss
fisttpll
je
dec
clc
sbb
out
sbb
add
cltd
xchg
inc
pop
call
jne
xchg
cmpsl
adc
inc
or
inc
les
fcomps
cltd
xor
adc
pop
ljmp
adc
cmc
fidivrs
add
popf
mov
jb
add
xor
lods
stc
inc
cmp
insl
addr16
popa
scas
loopne
dec
pushf
push
imul
cmp
mov
adc
insl
push
das
inc
loopne
xchg
in
adc
into
loop
pop
cli
add
iret
xchg
pop
repnz
sub
imul
mov
mov
xchg
fdivrl
jl
outsb
xchg
mov
les
mov
mov
fwait
xor
push
mov
mov
pop
and
repnz
stos
inc
stos
pop
jae
mov
stos
pop
in
loopne
ja
inc
int3
arpl
popl
push
addb
xchg
mov
xor
bound
fwait
mov
adc
leave
movsb
push
xlat
test
fisubrs
adc
add
jle
and
rorb
ss
fucomi
cwtl
push
repz
sbb
or
test
jmp
mov
mov
or
pushl
out
in
sbb
stos
sbb
dec
fsubrl
mov
xor
or
out
insl
push
dec
mov
sbb
or
orb
dec
sub
cmp
pxor
outsb
sarb
jmp
cmp
sarl
std
fwait
or
jno
int3
mov
sub
ja
cltd
inc
mov
sbb
es
sub
divb
push
les
jl
mov
enter
push
mov
je
jae
ds
js
pop
add
lods
add
jecxz
scas
stos
xchg
in
xor
mov
xchg
clc
out
push
mov
pop
xchg
jb
add
jle
rcrl
stos
and
iret
fistpl
fsubrp
cmc
inc
in
aas
int3
xor
sub
pop
push
fwait
cmp
icebp
lret
lcall
scas
clc
cmpb
xor
or
in
jge
cmp
scas
idivl
aaa
ret
fiadds
inc
and
mov
mov
xchg
xlat
rolb
adc
nop
cmp
sub
jne
xor
fstps
inc
push
insl
vpshlb
xchg
add
lea
dec
adc
stos
mov
shrl
push
mov
fninit
lcall
jg
xchg
stos
shlb
mov
addr16
insl
mov
or
inc
or
xor
xchg
jbe
jnp
xchg
jl
sub
jle
or
clc
and
jb
inc
pop
jnp
dec
sub
pop
xchg
in
cltd
mov
add
arpl
and
fimull
outsl
testb
mov
adc
mov
xor
xlat
fs
ss
scas
cmp
imul
fstpt
xchg
insl
iret
or
sbb
outsb
je
sbb
adc
outsl
call
dec
mov
fiadds
push
scas
inc
test
push
mov
rorl
mov
push
xorb
in
sub
adcb
cld
xor
adc
sub
scas
inc
mov
aam
push
arpl
sbb
inc
test
push
addb
mov
or
inc
dec
mov
and
push
push
jno
int3
push
popf
xor
add
adc
xchg
std
ja
daa
or
dec
divl
mov
scas
cmp
cmp
outsb
jae
jecxz
push
fimuls
and
cmp
rcrb
cltd
bound
daa
push
adc
jge
insb
pop
pop
jo
insb
jb
cmp
jecxz
jne
mov
cmpsb
cld
mov
inc
test
mov
jmp
aam
cmp
sub
inc
mov
mov
mov
mov
mov
lss
or
adc
push
xchg
arpl
nop
cmc
icebp
sarl
and
xchg
orl
and
fbstp
fwait
stos
ja
iret
xor
popf
leave
ret
adc
cmp
push
adc
cltd
test
inc
rcll
adc
das
insb
sub
iret
or
sub
cmp
xor
mov
cld
inc
jne
ret
sbb
je
dec
es
shl
jecxz
sub
imul
mov
cli
es
in
xor
mov
lret
adc
mov
push
mov
push
out
out
xorl
rcrl
dec
cmc
lock
jg
movlps
aad
mov
jb
cmp
sub
jle
mov
repnz
jae
imul
or
lods
inc
jp
mov
or
sbb
mov
and
pop
insb
jp
cmpl
scas
xlat
scas
stos
push
not
ljmp
push
shr
pop
dec
pop
or
repz
pop
pop
faddp
and
scas
push
mov
js
pop
mov
inc
js
aas
scas
and
sahf
ret
popf
jno
jno
in
cwtl
imul
sbb
dec
fbld
xchg
mov
pop
lds
popa
gs
xchg
out
ret
mov
add
mov
hlt
aam
add
iret
inc
inc
xchg
sbb
push
xor
xchg
jbe
rcll
pop
enter
pop
test
add
push
in
xchg
mov
shlb
cmp
mov
scas
mov
jle
loop
jno
ja
xor
and
addr16
or
pop
in
inc
add
repz
mov
mov
xchg
push
fs
js
pop
imul
dec
mov
stc
cs
mov
xchg
std
and
push
frstor
aas
enter
mov
xlat
dec
mov
mov
insb
addb
fimull
ds
xchg
push
mov
les
imul
mov
sbb
mov
dec
add
pop
getsec
cs
xor
adc
rorb
clc
pushf
and
fs
and
sub
adc
jle
in
jb
push
test
ljmp
decl
std
adc
cmp
jp
mov
pop
loopne
or
dec
int3
jecxz
hlt
xchg
sti
mov
xchg
xchg
mul
pop
xlat
es
dec
pusha
jmp
mov
add
mov
lret
cs
in
hlt
xor
fadds
xor
sbbb
fdivs
xchg
arpl
inc
mov
mov
lds
sahf
addl
out
or
out
es
jecxz
xchg
fistpll
xchg
dec
aaa
insl
dec
mov
pop
pop
inc
bound
cmpsb
lret
xchg
fs
call
inc
rcrb
lock
add
push
sbbb
inc
sub
aas
cmp
jmp
incl
nop
test
into
syscall
xlat
or
fwait
adc
mulb
push
dec
and
add
cmp
incl
push
jb
mov
pop
xor
nop
and
scas
sti
fistpll
test
pop
sub
dec
out
pop
push
cmpsb
pop
cmp
stc
sbb
and
pop
pushf
or
sub
xchg
jae
dec
fs
adc
fsqrt
out
push
cmp
mov
scas
addl
xchg
mov
sub
into
sub
cli
outsb
scas
jecxz
cs
faddp
cmp
icebp
mov
call
pop
cmc
push
sbb
cmp
jecxz
aam
mov
and
roll
xor
inc
pusha
adc
jo
imul
pop
fldcw
mov
push
and
pop
sub
jp
imull
pushf
repz
aas
or
enter
loopne
in
jno
push
lods
xchg
loope
jo
fildll
ss
xchg
or
insb
out
das
xchg
xchg
push
call
lock
mov
mov
daa
ja
shll
repz
movb
div
jns
pop
out
lret
sub
les
xorl
cmp
pop
insb
xchg
xchg
fists
mov
into
leave
xchg
push
mov
imul
mov
sub
add
lods
mov
jno
mov
pushf
ljmp
icebp
jo
jmp
xchg
mov
cmpsl
cmp
idivb
cld
or
and
mov
push
cli
sub
fidivrl
daa
in
lret
xlat
insl
fbld
pop
pop
jmp
lahf
fists
jo
push
xor
pop
ja
jne
divl
es
xchg
mov
lret
push
xchg
mov
les
lahf
pop
push
shr
jae
cld
and
or
inc
cmp
inc
jno
ljmp
pop
mov
aas
dec
sub
pop
sbb
dec
push
jo
ret
adc
addr16
mov
mov
push
or
loopne
pop
out
iret
mull
or
addr16
ja
push
xlat
jle
or
inc
jecxz
repz
pushf
push
mov
out
mov
ljmp
hlt
push
ds
add
es
or
mov
pop
sbb
jne
push
dec
outsb
cmp
cmp
aaa
stc
xchg
inc
test
push
jno
jns
pop
rcrb
cmpsb
add
cmp
xchg
lcall
sarl
in
clc
pushf
call
cmpsb
cs
mov
in
jbe
loopne
xchg
aam
xchg
pop
mov
push
and
bound
lcall
test
jae
daa
les
test
and
xchg
repnz
mov
xchg
or
cs
jb
cwtl
shlb
in
inc
and
ljmp
les
enter
lcall
mov
rol
sub
fistpll
mov
pop
push
dec
jne
imul
ja
not
cmp
or
icebp
imul
enter
dec
punpckhwd
push
es
jmp
jb
movl
cmp
mov
jg
adc
es
pusha
aaa
lahf
inc
aas
fmuls
pop
dec
icebp
add
pushf
cli
xchg
xchg
frstor
pop
fdivr
cmp
in
data16
add
fisubs
scas
and
pop
out
jp
decb
dec
cwtl
aad
pushf
inc
cltd
adc
loop
jnp
cmp
xor
lods
pop
ja
inc
es
enter
shr
or
loope
jno
inc
fimull
mov
popf
and
fildl
test
mov
rolb
hlt
sbb
mov
mov
xchg
xor
movsl
nop
stos
push
or
scas
mov
cmp
inc
lds
push
and
shrb
outsb
mov
xor
call
daa
xchg
sub
les
std
stos
sbb
xor
shr
adc
xchg
fidivrl
pusha
push
or
mov
adcl
mov
call
popf
test
addr16
jnp
aad
lcall
push
mov
das
dec
sbb
and
lds
push
in
and
or
xchg
push
sub
inc
jg
jecxz
jle
sub
and
fmull
mov
fdivs
test
adc
fnstcw
mov
scas
sub
pop
xor
adc
adc
pop
mov
movsb
jge
mov
add
add
or
aad
xchg
ljmp
js
in
rcrl
mov
imul
stc
mov
xor
inc
inc
jbe
mov
jge
and
out
test
dec
pop
cmp
ret
xor
jp
icebp
cs
and
ret
dec
and
enter
dec
cmc
push
xor
faddl
jae
lock
fldl
push
gs
sbb
jbe
insl
mov
and
ds
and
or
fxch
test
adc
or
jp
inc
xor
ja
jecxz
jmp
fidivs
movsl
pslld
push
cmpb
mov
decl
lds
sbb
fstpt
pop
leave
push
sbb
cs
fcomps
mov
js
inc
lds
push
sub
dec
lret
jo
clc
mov
sbb
sahf
ljmp
pop
cli
or
test
adc
lods
add
ficompl
push
mov
add
sbb
mov
adc
stc
flds
dec
cmp
test
sti
jl
js
sbb
mov
pusha
mov
dec
rcl
bound
je
stos
xchg
xor
cmpsb
xor
mov
test
stos
hlt
fbstp
popa
inc
movsb
lret
cwtl
cld
ds
rorb
out
push
fisubs
pop
mov
mov
and
mov
int
hlt
push
lods
lcall
pop
xchg
pop
andl
mov
cmp
inc
jp
imul
mov
fadds
imul
pop
sub
mov
enter
fldt
xchg
pop
inc
outsb
fld
xlat
movsb
ja
fldt
fimuls
and
mov
mov
sbb
add
sarl
sbb
sti
test
pop
out
pop
mov
xchg
jns
mov
cmp
xor
sahf
sub
mov
jo
sbb
outsb
fmull
cmc
pop
pop
int
jb
lock
inc
inc
mov
test
mov
push
mov
and
pop
dec
xchg
sub
lret
push
mov
sub
repz
add
push
inc
adc
mov
ret
fs
lock
in
inc
jp
fdiv
push
cmpsb
out
insl
mov
jo
test
mov
xchg
sub
or
jl
jo
lret
jle
lock
adc
inc
sbb
aam
inc
arpl
adc
repnz
imul
shl
outsb
cmp
mov
dec
inc
loopne
dec
cmc
jns
mov
mov
into
pop
lods
cmp
mov
push
cmp
jle
push
jae
bound
push
pop
push
sub
xchg
xlat
mov
xor
adc
push
not
xor
arpl
push
push
stos
and
into
pushl
test
sbb
pop
repz
mov
cltd
fisubrl
sub
lret
sbb
out
cli
insb
xlat
push
or
mov
add
mov
and
sub
xchg
js
mov
sbb
movq
jbe
adc
inc
xchg
cwtl
sub
ror
push
aas
ret
movsl
mov
fdivrl
push
inc
ret
add
pop
add
and
pop
inc
loopne
sub
popf
pop
lea
add
shl
in
out
pop
lds
jnp
mov
mov
jns
cmp
outsb
sbb
iret
test
out
out
imul
sub
notl
ds
out
addb
movsl
jae
int3
sub
cwtl
xchg
and
jmp
pop
das
insl
and
test
or
xor
jl
das
push
test
insb
push
fyl2xp1
test
inc
rol
xchg
rcrl
push
mov
cvtps2pd
rcl
sbb
idivb
mov
int
pop
or
inc
test
ret
fidivs
xor
mov
hlt
sbb
xchg
sub
cmc
dec
cmp
xchg
inc
fldcw
adc
xorb
scas
nop
bound
pushf
lds
fldcw
cmp
in
iret
and
cmpsb
xchg
dec
aas
pop
fidivs
flds
out
es
das
movnti
call
pop
cmp
lahf
xchg
push
pop
nop
jne
in
xchg
fld1
dec
and
mov
mov
pusha
jg
or
pop
pushf
in
add
cmp
sbb
xchg
mov
cli
in
pop
jp
xor
cli
scas
popa
or
cmp
insl
dec
cli
roll
mov
inc
lret
jnp
test
mov
adc
mov
out
out
cwtd
bswap
pop
mov
addr16
sub
test
inc
pop
enter
loop
sti
lret
push
cmpsb
loope
cmpsb
test
ds
mov
cwtl
push
stc
inc
ret
sub
enter
jae
push
xor
pop
mov
push
mov
mov
int
sbb
scas
pop
in
out
fnstcw
jecxz
xchg
fidivrl
loope
lods
loopne
inc
mov
push
iret
inc
jb
push
mov
enter
xor
mov
xor
push
add
mov
add
mov
push
es
push
mov
test
lds
mov
pop
shlb
enter
xorb
push
arpl
push
add
push
lds
scas
daa
xlat
imul
jb
clc
inc
out
fmuls
lret
icebp
andb
lret
call
jnp
pushf
jb
int3
std
push
push
jmp
fldl
mov
mov
ret
jmp
mov
xorb
hlt
testb
test
xchg
stos
and
pop
xor
jbe
fninit
mov
in
aad
mov
xchg
push
xchg
sub
bound
sti
mov
add
daa
xlat
fsub
dec
lahf
inc
inc
xchg
xor
pusha
lcall
mov
gs
fs
xlat
in
xchg
mov
dec
adc
aam
jmp
add
jns
sarl
inc
and
pop
testb
adc
pavgb
in
xor
ficomps
lds
pop
inc
inc
push
sub
xor
sub
cmp
fisubrs
inc
cmp
imul
inc
add
jne
outsl
and
cmp
lcall
std
mov
inc
pop
push
jae
mov
das
aaa
pop
and
das
repnz
xchg
push
jmp
or
shlb
ja
mov
mov
mov
sbb
pop
and
ss
push
xor
push
sub
xor
insb
push
cmp
inc
jb
dec
pusha
xor
mov
nop
out
dec
int
aaa
xchg
dec
adc
push
xlat
lock
stc
mov
call
xchg
or
cmp
or
jg
xchg
insl
pop
adc
daa
cmp
or
inc
sbb
out
mov
dec
cmp
adc
jmp
mov
mov
jge
xor
adc
inc
xchg
aam
fs
ficoms
adc
xor
push
fisttpl
cmpsb
xchg
inc
into
loopne
dec
fsts
insl
dec
cmpsb
aas
adc
gs
scas
subb
movsl
pop
das
mov
orl
push
mov
adc
sub
pop
ljmp
xchg
jno
test
push
push
into
outsl
mov
sbb
out
adc
inc
and
imul
or
jb
daa
mov
int3
jl
lret
xchg
stc
or
add
lods
xchg
add
cmp
xor
in
nop
scas
adc
xor
fidivrl
imul
aad
je
flds
sbb
dec
stos
xlat
sub
popa
lcall
lods
fnstenv
lods
push
call
xlat
adc
add
int3
enter
xchg
pop
add
cmp
xchg
cmp
inc
rcrl
cwtl
inc
mov
dec
pop
mov
idivl
and
push
inc
andb
notw
sti
mov
iret
add
or
adc
mov
jge
or
pusha
pop
flds
les
cmp
push
pop
pop
fisubrl
and
int3
in
jb
hlt
mov
pushf
xor
dec
fstps
or
idivl
sub
xlat
add
jg
out
js
xor
jl
xchg
push
out
adc
out
xlat
mov
xor
ja
mov
mov
mov
repz
push
pop
pop
fisttps
adc
xchg
mov
add
mov
shlb
cmp
jl
sub
into
inc
pop
xorl
outsl
jl
les
movsb
add
outsl
test
jnp
cltd
xlat
or
stc
sub
mov
dec
das
pop
sbb
int
test
shl
inc
ds
es
mov
in
add
jle
rorb
ret
mov
and
add
fwait
call
pop
sbb
mov
popa
dec
mov
daa
or
xchg
ss
lahf
fldl
fnstsw
cld
dec
pop
adc
fisubl
fcoms
call
lea
xorb
pop
and
inc
pop
lock
std
mov
aad
xchg
sbb
push
or
cltd
cmp
popa
sub
mov
inc
cmp
adcb
dec
xchg
cmpsl
or
dec
add
fmull
cmp
in
test
xchg
dec
mov
fmull
sub
pusha
loopne
outsb
jnp
test
cld
enter
stos
js
cli
rcl
xchg
scas
movsb
sbb
inc
add
mov
mov
insl
or
mov
ficoml
xchg
sbb
daa
xor
xor
xor
xchg
aaa
rorl
pop
addl
insl
cmp
lods
int
mov
mov
out
pusha
xchg
addr16
push
movsl
pop
push
out
pusha
or
addl
dec
mov
mov
cmpsl
ljmp
loope
lods
jns
nop
cmp
ds
xchg
jae
sbb
or
insb
jnp
and
stc
mov
arpl
sbb
lret
scas
stos
add
push
or
addr16
mov
fs
add
cmp
xchg
jecxz
cmc
inc
pop
jbe
dec
scas
aas
push
scas
outsb
jmp
das
pop
cmp
rorb
jmp
sub
xor
and
mov
dec
sub
jae
insl
out
xlat
xor
mov
fcmovbe
daa
sub
sbb
das
shll
mulb
out
push
mov
dec
cmp
lahf
sbb
and
or
pop
and
inc
loope
mov
push
xchg
dec
loope
into
jecxz
sbb
mov
ret
cmp
test
push
sub
pop
test
sbb
xchg
iret
jmp
mov
ret
loope
sbb
jecxz
dec
out
pop
test
mov
aad
pushf
lea
mov
pop
jle
adc
into
inc
adc
xchg
add
testb
and
sbbb
mov
out
add
lcall
mov
es
mov
mov
sub
mov
imul
xchg
inc
scas
xchg
pop
pop
and
mov
es
push
aaa
push
inc
shl
mov
ja
cmp
add
adc
xor
cmp
mov
mov
rorb
jecxz
xor
shrl
icebp
or
mov
or
aad
in
mov
jge
sti
dec
dec
sysenter
cmp
loopne
popa
shll
call
mov
fisubs
pusha
faddp
cmc
push
js
sbb
fnstcw
in
mov
xchg
pop
repnz
andl
iret
mov
or
fwait
imul
or
xor
push
mov
scas
sbb
pop
fstpl
mov
mov
inc
movsb
xor
lods
in
fcoml
xchg
or
cwtl
inc
xlat
jg
xchg
cld
mov
hlt
dec
fcmovbe
enter
mov
scas
add
xor
les
cli
outsl
and
out
push
andb
pop
lea
push
negl
rcrb
pop
fucom
xchg
popf
test
xchg
mov
inc
ds
xchg
or
insl
lock
leave
rclb
sbb
mov
sahf
lcall
das
add
xchg
lahf
es
xchg
and
sub
daa
pop
cmpsb
or
je
and
out
xchg
push
fnstenv
stos
bound
loopne
int3
fldcw
daa
aad
cmp
mov
stc
push
lahf
imul
rorb
lcall
mov
ret
test
mov
pop
sbb
adc
cmp
jnp
test
cmpsb
dec
inc
stc
mov
pop
dec
cwtl
cmp
jno
push
adc
xchg
int3
rcl
pop
add
push
push
adc
pop
out
inc
mov
cmpsl
inc
adc
push
jecxz
sti
mov
cld
sub
xchg
repz
sub
mov
stc
pop
fdivl
pop
pop
repnz
push
pop
inc
or
jb
dec
mov
lock
dec
cmpl
xchg
cmp
push
repnz
lret
out
mov
lea
jbe
mov
repz
and
mov
inc
add
mov
push
je
adc
inc
inc
mov
ficoml
movsb
lea
push
fistpl
push
jmp
out
mov
mov
jmp
inc
jmp
fisubrl
movsl
scas
sbb
imul
mov
or
xchg
dec
xor
hlt
and
je
sub
xor
int
dec
push
mov
add
mov
mov
aad
jno
test
xchg
jno
pop
testb
inc
or
pop
std
cmp
or
js
out
pop
add
fst
in
cmp
dec
add
into
push
mov
rcrl
jne
mov
cli
xchg
popa
es
fwait
push
sarl
sbb
stos
cld
pop
iret
repnz
jnp
lea
std
fwait
xor
mov
mov
xchg
fidivrl
xor
adc
or
pop
xchg
rcrl
mov
jae
test
pop
jl
dec
dec
add
cmp
stos
add
add
outsb
call
pop
clc
out
bound
ljmp
int3
ljmp
xor
aad
mov
dec
push
sbb
div
mov
pop
and
cwtl
je
out
mov
fwait
pushf
loope
aas
dec
ret
adc
sub
arpl
adc
mov
push
fdivl
xchg
jbe
push
fsubrs
adcl
add
cmp
jp
out
out
shl
lock
xor
mov
inc
jp
adc
xchg
push
jg
pop
outsb
outsl
fildl
in
push
nop
and
aas
bound
xor
push
push
jg
xor
loope
inc
cmp
cmpsl
and
cli
pop
xchg
push
fwait
push
mov
sub
and
stos
aaa
inc
sbb
fmull
xor
xlat
lcall
xor
pop
dec
mov
cmp
cmp
ret
test
dec
push
aaa
adc
loop
out
loop
sub
ds
cmpsl
jbe
popf
jmp
xchg
adc
dec
xlat
sbb
loop
add
adc
loop
pop
in
cmpsl
addr16
mov
popa
xchg
lock
stos
in
sbb
push
adc
or
movsl
stos
imul
mov
ja
pop
ds
xor
pop
js
mov
outsb
repz
ds
push
lahf
dec
repz
xor
jno
mov
dec
arpl
push
or
cmpsl
lcall
outsl
push
sbb
rorl
jl
ret
stc
cwtl
cmp
and
mov
int3
in
adcl
jecxz
imul
add
xor
jb
jl
icebp
sub
or
mov
lods
imul
test
adc
dec
lea
dec
or
ficompl
icebp
fs
enter
push
push
in
jnp
mov
add
repnz
aaa
jae
mov
loop
adc
loopne
ds
jns
mov
fisubs
jns
sahf
in
loope
jge
mov
movsl
adc
pop
outsl
ret
cmp
cmp
fsubl
aam
jmp
and
je
roll
dec
and
outsb
cmp
dec
mov
xchg
cmpsl
xchg
pushf
sbb
fcompl
sarb
cmp
jb
jp
sub
cmp
ds
jp
dec
jmp
jno
mov
lock
subb
pop
daa
arpl
subl
mov
orb
in
inc
popa
test
pop
lcall
notb
add
inc
xchg
jle
push
mov
mov
nop
repnz
mov
xchg
and
jns
pop
sahf
movsb
popa
sbb
push
cmp
repz
mov
mov
add
fs
mov
pop
or
aas
mov
stos
push
pop
mov
outsl
mov
stos
inc
and
hlt
jecxz
adc
sub
push
fmul
test
xchg
sbb
out
scas
jns
jnp
inc
cmc
add
jl
dec
mov
mov
in
popa
out
scas
cmpsb
dec
sbb
fistpl
leave
cld
fstp
mov
js
xor
adc
inc
gs
pop
and
in
flds
jge
js
fdivrl
mov
pop
popa
sbb
cld
lea
je
rol
repnz
scas
aaa
mov
scas
movsb
or
jecxz
scas
adcl
outsl
jne
mov
pop
push
mov
ljmp
call
dec
and
sbb
lods
mov
lea
push
and
insb
movsl
sub
lret
fwait
es
cmp
out
out
adc
lods
xchg
cltd
dec
push
sbb
and
jle
jecxz
pop
and
jae
aad
xchg
jmp
addr16
adc
mov
testl
xchg
aas
inc
adc
loop
and
inc
mov
or
inc
pop
xor
inc
bt
mov
or
adc
cmp
sub
xor
or
scas
ret
ficomps
dec
popa
in
mov
mov
in
mov
in
xchg
dec
sbb
jne
pop
mov
pop
inc
add
adc
fadds
push
aam
test
push
mov
inc
test
or
mov
lcall
daa
mov
inc
or
jae
ffree
mov
adc
dec
jp
adc
jne
ja
push
mov
loopne
push
popa
push
je
jo
push
add
mulb
pop
int
pop
fdivrs
inc
mov
push
in
jae
xor
sub
lods
mov
je
dec
arpl
out
scas
lods
add
mov
daa
popf
and
lea
mov
dec
fstpl
hlt
jl
mov
js
fwait
sub
mov
pop
cmpsl
or
push
mov
sub
sub
je
incb
xor
dec
int
ljmp
inc
lahf
xchg
mov
xchg
aam
inc
in
inc
test
out
push
in
xor
fidivs
fs
sub
add
lcall
imul
xorl
xchg
xlat
call
movsb
shll
jecxz
push
fnstenv
sub
bound
mov
lahf
ret
icebp
aam
stos
push
lret
sub
sti
xchg
decb
push
sbb
sub
lods
lock
inc
inc
mov
inc
pop
test
dec
in
addb
repz
js
push
out
aaa
in
mov
xorl
xchg
pusha
xor
jle
xor
push
fldcw
pop
in
loopne
cltd
push
rolb
in
ficoms
cmp
lret
fwait
and
jg
popa
xchg
movsl
mov
scas
into
cmpsb
push
icebp
jae
shlb
push
sbb
and
xchg
decb
pop
jp
jno
sti
arpl
pop
cmp
dec
pop
incl
lods
mov
push
xchg
jne
xchg
fwait
lock
and
rorb
push
mov
mov
std
xchg
imul
ja
cmp
xor
fsub
cmpsl
sub
lret
scas
cmp
pop
loopne
loopne
adc
push
inc
push
rcrl
mov
lods
and
roll
and
dec
mov
push
mov
xchg
lds
subl
divb
loop
add
popf
inc
cwtl
adc
stos
das
sub
pop
adc
sahf
aam
add
adc
lret
add
testb
popl
add
push
movsb
or
fs
rcr
inc
aam
inc
sub
mov
enter
xor
jl
aaa
jno
pop
dec
out
or
lcall
sahf
frstor
cmp
cwtl
mov
jge
add
inc
jp
mov
dec
pop
adc
insl
test
fisubl
testb
sbbb
cld
jg
sub
mov
stos
subb
repnz
dec
std
rcl
mov
lret
xchg
inc
xchg
jp
mov
inc
in
push
int3
xchg
repnz
mov
stos
popf
aad
mov
mov
iret
or
data16
mov
mov
test
notb
dec
test
outsb
jnp
push
sub
dec
mov
int
and
rcr
jge
in
add
sub
sbb
push
decb
cmp
lods
xchg
into
and
jae
pop
inc
sub
subb
jno
or
xor
fcoms
shll
add
das
or
es
into
aad
push
int3
repnz
dec
aam
mov
pop
jge
int
pop
jne
loop
notb
aad
aaa
fwait
inc
xorl
lds
pushf
dec
in
imul
mov
xchg
mov
scas
clc
cmp
pop
lahf
stos
loop
jnp
ficompl
std
pop
dec
mov
pop
lahf
mov
push
out
jecxz
dec
in
pop
cwtl
insb
jp
ror
jg
stos
and
out
and
mov
adc
mov
cmpsb
mov
cmp
sbb
pushf
mov
inc
daa
test
sarl
push
loop
cwtl
jbe
adcl
push
std
aad
aaa
cwtl
outsb
pop
clc
fistpll
test
lea
dec
icebp
cmp
dec
add
imul
int
in
sbb
loope
pop
mov
or
mov
nop
jecxz
rorb
add
dec
ja
pop
xor
aas
mov
fidivl
imul
fistps
add
dec
lock
sbb
xlat
imul
cmpsb
imul
and
pushf
sub
fsub
or
inc
ret
push
push
cmp
cmc
shlb
xor
push
or
inc
sbb
inc
push
movb
bound
popa
fs
jb
pop
cmpsl
popf
adc
daa
loope
push
ds
sub
pop
xchg
xor
add
pop
ljmp
inc
pop
sbb
jle
daa
ljmp
into
fisubrl
popa
stos
sub
xacquire
test
add
xchg
test
pop
scas
and
jg
shrb
sbbl
xor
pop
fistpll
push
ds
adc
fsubs
mov
mov
and
sbb
in
pop
in
dec
cmp
mov
sbb
les
int
sub
popf
int
aas
call
sbb
sbb
adc
pop
jns
push
movsl
jnp
fdivrs
mov
adc
cmp
stos
les
xchg
cmp
lret
fcompl
repz
adc
lods
idivl
inc
cli
cmc
pusha
cld
cltd
iret
sarl
jmp
jbe
fiadds
pop
icebp
out
aaa
mov
lock
pop
xchg
push
mov
aas
cld
enter
xor
sub
jle
into
pop
cwtl
xchg
cmp
sbb
mov
adc
cmp
sbb
push
dec
mov
imul
push
fwait
pusha
push
fs
movsl
xchg
addr16
adc
out
insl
inc
movsl
dec
xchg
push
mov
push
jmp
push
mov
and
xchg
rcrb
cwtl
jbe
mov
imul
inc
ret
stc
xchg
fisttps
jg
ds
or
inc
lds
insl
adc
les
das
repz
pop
cmpsl
cmpsl
icebp
inc
repnz
push
xchg
fmulp
dec
xchg
clc
jl
push
je
jmp
gs
inc
sbb
mov
pop
xchg
daa
pop
cmp
sbb
aas
or
inc
inc
mov
fs
push
cmc
cmpl
out
mov
push
or
mov
ljmp
push
jbe
and
pushf
cli
xchg
fnsave
loopne
xchg
jns
sarl
in
jnp
cmpsb
sub
in
daa
in
mov
mov
or
xchg
icebp
pop
mov
pop
jae
stos
lock
or
mov
popf
popa
fcompl
add
fldcw
pop
adcl
pop
xor
adc
ret
ds
mov
imul
rcl
test
mov
pop
xchg
jne
jl
adc
pop
mov
mulb
sub
inc
inc
and
pop
xchg
out
sarl
data16
jl
jp
movsb
insb
sub
cmpsl
test
ret
push
dec
and
ret
leave
enter
dec
rolb
dec
roll
sbb
push
mov
repnz
pop
leave
mov
mov
adc
push
cmp
and
add
pop
popa
add
das
xchg
daa
jg
insl
das
and
call
or
jbe
push
jge
cmp
xchg
adc
aaa
jg
jge
ss
adc
fwait
pop
pop
cmpl
sub
and
xor
or
push
add
adc
inc
lahf
dec
jne
lcall
lret
test
shll
ja
fisubl
and
mov
cmc
dec
sti
outsl
push
cmpb
or
fs
jl
mulb
sbb
clc
fsubrs
shll
push
jge
lds
xor
pop
jne
fistpll
lret
icebp
pop
mov
dec
imul
push
fdivrp
cmp
mov
sbb
adc
mov
xchg
int3
rcrb
xchg
daa
jno
jmp
or
movb
leave
push
loop
and
cmpb
push
pusha
ja
pop
loopne
rcl
xlat
sti
je
std
shr
mov
mov
stc
xchg
filds
loope
add
adc
push
ljmp
repnz
ljmp
ret
mov
shll
inc
test
and
jb
sbb
mov
inc
cli
stos
and
mov
mov
aaa
dec
push
das
xchg
or
cmp
mov
xor
push
sub
hlt
stc
sti
mov
push
dec
mov
push
lods
adc
pusha
shrl
cli
lcall
int3
mov
out
xchg
rcl
mov
adc
std
shr
adc
std
lds
add
or
adc
adc
inc
lahf
leave
xchg
inc
pusha
fiaddl
imul
popl
mov
test
insl
xchg
outsl
out
shll
jmp
mov
imul
xor
xchg
cwtl
rclb
out
daa
inc
pop
bound
inc
fidivrl
push
or
into
popf
movsb
jl
mov
addl
fmuls
std
sub
aas
data16
stc
ss
mov
dec
pusha
in
cltd
enter
outsb
push
mov
shll
imul
dec
inc
sbb
bound
std
lds
dec
es
shll
cmpsl
sub
or
scas
cld
mov
scas
xchg
or
adc
sbb
xor
adc
fs
shlb
push
fimull
test
dec
outsl
cld
bound
test
lret
lods
fimuls
mov
nop
inc
rcrb
push
mov
inc
sbb
mov
mov
mov
or
mov
in
sti
adc
adc
jno
dec
stos
fwait
rcl
xchg
testb
iret
xor
lcall
mov
int
in
mov
ds
mov
imul
mov
sbb
inc
mov
cwtl
sbb
mov
aam
dec
push
mov
lods
or
cmc
lret
stos
mov
jge
stos
enter
stos
mov
lahf
add
repz
mov
mov
or
dec
mov
loope
testl
mov
cmc
roll
cwtl
jno
xchg
out
outsl
mov
cmpsb
sub
cwtl
pop
divps
dec
xchg
insl
icebp
inc
xchg
jg
mov
icebp
mov
cltd
jge
cmp
inc
and
mov
movsl
das
in
cmp
shl
pop
inc
lods
and
int
xchg
in
ficoml
fidivrs
nop
adc
mov
xchg
or
sti
push
mov
adcb
add
adc
mov
push
mov
es
pop
shlb
test
dec
add
lods
dec
icebp
xchg
scas
into
cltd
pop
lods
stc
insl
outsl
std
dec
push
das
inc
and
sbb
push
push
push
inc
divl
adc
cs
movsl
cmc
push
stos
mov
sbbb
jecxz
xchg
mov
aaa
andb
lahf
fwait
cmpsb
xchg
xor
mov
outsb
mov
shl
lret
daa
int3
mov
ja
push
iret
data16
push
cmpsb
cltd
cmpsl
adc
test
jbe
push
stos
push
fsub
daa
arpl
aaa
adc
int
mov
mov
out
jne
xchg
loopne
jns
mov
mov
dec
and
jmp
jl
mov
push
dec
movsl
addw
inc
je
rcrl
test
mov
fsubp
dec
and
mov
dec
push
adc
daa
fbstp
lret
sbb
mov
arpl
insl
adc
mov
hlt
or
es
inc
dec
inc
leave
mov
daa
adc
aas
cmp
mov
adc
jle
fisubl
sbb
loope
adc
and
or
fisubl
repnz
lret
js
mul
call
ljmp
mov
lea
adc
pop
test
jmp
adc
pop
movsl
xchg
mov
inc
xor
aam
mov
jne
cmp
aaa
in
ret
leave
cmp
jmp
das
lods
and
sbb
sbb
in
add
push
xor
dec
pop
jmp
scas
ret
orl
jne
pop
fnstcw
and
sysenter
sub
insb
xchg
jmpw
ret
ds
sbb
movsl
ljmp
sub
in
pop
add
aas
mov
rorb
dec
cmp
sub
sbb
and
adc
xchg
mov
push
mov
ss
fs
loopne
fdivs
daa
jno
jge
jne
xchg
sbb
nop
and
imul
out
adc
jp
cld
dec
lcall
adc
mull
cs
insb
cmpsl
sub
cmp
mov
in
out
jb
sub
push
inc
add
sbb
sahf
lds
cmc
mov
les
loop,pn
push
cld
test
shrl
cli
xchg
lds
and
into
add
mov
xor
jne
aas
out
orb
push
mov
call
adc
xor
mov
pop
fidivrs
pop
into
xchg
fisubl
int
dec
mov
jno
popf
jns
cmp
rol
ja
mov
cmp
faddp
out
mov
cmp
add
arpl
xchg
adc
pop
sete
fisttps
or
cmp
xor
jno
jbe
out
loop
mov
pop
ja
fildll
testl
bswap
add
adc
push
mov
mov
xchg
inc
cmp
xor
stc
lods
nop
inc
adc
lret
imul
cld
frstor
or
jb
inc
cwtl
lods
rcrl
pop
pop
cmc
mov
shll
xchg
rol
mov
int3
push
std
push
cmp
xlat
test
fs
dec
push
stos
and
push
cmovg
insb
mov
dec
jp
insl
inc
mov
cmc
and
inc
adc
pop
push
add
add
or
push
jp
movsl
jno
loopne
mov
jb
jl
into
je
rolb
cltd
adc
mov
or
stc
sbb
sbb
add
add
std
repnz
shlb
test
cld
insb
xor
popf
inc
dec
cmp
icebp
or
push
pusha
out
dec
sub
in
insb
mov
cmp
dec
xor
push
adc
mov
xchg
push
mov
out
adc
xchg
pop
add
inc
fistpll
mov
in
dec
aaa
mov
jne
clc
test
fdivrp
sbb
push
inc
and
xor
inc
xchg
jecxz
iret
shrb
scas
frstor
inc
xchg
dec
int3
add
and
push
jns
repnz
ss
shrb
fistl
pop
push
insl
mov
xor
rorl
dec
fdivp
lret
mov
cwtl
jg
rorb
adc
pop
sub
insb
int
pop
pop
xchg
lds
mov
push
sarl
inc
aad
dec
pop
ret
jg
daa
sti
add
aad
mov
adc
fsubp
mov
xor
loopne
inc
xchg
outsl
lods
lret
mov
les
scas
cmpsl
sbb
push
mov
outsb
leave
and
sbb
xchg
mov
xor
jmp
psubb
xor
bnd
sub
repz
sahf
xchg
data16
ljmp
inc
mov
xchg
xor
push
ss
cmc
jle
data16
mov
inc
push
jb
jmp
and
loop
nop
lods
je
jge
sbb
mov
xor
mov
pushl
call
inc
gs
pop
insb
or
fildll
jnp
adc
xor
fdivp
lahf
lods
sti
stos
jo
sub
inc
inc
xor
dec
add
inc
pop
sbb
lods
sub
jae
cltd
out
sbb
nop
jecxz
adc
mov
add
mov
mov
xchg
mov
jbe
cmpsb
lock
int3
xor
inc
add
lret
inc
cmp
js
inc
in
stc
pusha
fmuls
imull
cmp
ljmp
sbbl
out
sub
pop
push
jne
cmpsl
ficoml
pop
or
es
cli
cmpl
shll
dec
sub
clc
mov
pop
mov
ror
and
test
mov
fisttps
int
lahf
inc
je
int
pop
aaa
and
ret
pop
lahf
orl
sub
outsl
gs
outsb
jle
push
xor
sub
cld
cs
enter
arpl
pop
imul
mov
mov
inc
shl
mov
add
add
push
xchg
adc
sbb
mov
sbb
xor
popa
test
out
fsubrs
mov
pop
mov
mov
and
test
cmp
pop
mov
pop
jp
clc
les
addr16
pop
push
sub
ja
jecxz
js
jecxz
arpl
adc
rcll
out
int
pop
jbe
aas
and
cltd
movsl
stc
out
jb
inc
repnz
xor
in
pushf
popa
sbb
cli
lods
rorb
xor
adc
and
ja
out
adc
and
or
add
cmp
mov
push
pushf
lcall
pop
fdivs
xchg
in
fmul
cmc
or
xchg
lods
and
pushf
int
pop
nop
iret
xor
mov
fisubl
jbe
push
push
lods
adc
pusha
pop
mov
lret
pop
inc
test
jb
push
cs
dec
xchg
loope
and
or
shlb
add
or
outsb
gs
mov
mov
aam
filds
das
push
in
jge
call
jns
int
mov
fidivrl
mov
aaa
in
inc
cmp
pop
ljmp
shll
lahf
or
fldenv
fidivl
push
in
std
testb
fs
cli
jae
mov
imul
push
cmpsl
out
popf
push
push
daa
test
inc
pusha
sbb
orb
add
push
dec
decb
adc
xchg
jno
push
repz
inc
fwait
sahf
divl
add
cmc
mov
adcb
mov
cmp
push
addl
pop
lods
pop
jle
add
shll
cmp
aas
cmp
icebp
sub
loopne
xchg
iret
bnd
jb
add
cmpl
lods
mov
push
movsl
and
adc
xor
jne
jecxz
sbb
fnstenv
xor
xor
sub
xchg
aad
fucomi
jle
mov
clc
es
push
push
fdivrp
xchg
hlt
test
push
mov
fcmovbe
or
gs
or
and
xchg
sub
lret
adc
sub
xchg
sbb
cwtl
bound
push
dec
sahf
ds
sub
arpl
jl
push
sub
xor
or
sub
movsb
out
pop
mov
dec
ds
fstl
push
mov
sahf
jnp
fstpt
mov
push
cmpsl
jg
sbb
mov
pop
or
leave
int
cmp
mov
std
pop
mov
and
sub
lock
push
leave
jmp
sbb
sbb
loop
test
lods
mov
dec
xor
ret
pop
xlat
push
push
sbb
mov
scas
mov
lret
mov
hlt
add
iret
mov
pop
or
lods
negl
fcompl
mov
cmp
aas
mov
leave
push
roll
sbb
lret
push
jnp
sub
xchg
in
and
add
dec
ficompl
in
push
inc
repz
push
pop
sbb
mov
mov
cmc
mov
jnp
bound
aad
shll
inc
mov
xor
dec
mov
mov
pushf
rcll
adc
cmc
je
and
pop
loopne
shlb
ja
notl
adc
push
aaa
push
pop
cwtl
push
adc
scas
scas
lods
jae
push
and
cmp
leave
mov
fwait
pop
out
pop
iret
add
in
lahf
inc
iret
das
aam
mov
sub
lret
cmp
sbb
rclb
dec
dec
mov
in
sub
testb
test
add
fcomip
test
fldcw
add
daa
loopne
mov
inc
xor
nop
aas
jg
cwtl
mov
roll
dec
out
add
and
and
mov
pushf
inc
mov
hlt
mov
outsb
lock
into
sbb
xchg
dec
add
insl
in
lahf
xchg
jle
push
out
fdivr
mov
popa
out
in
adc
xchg
mov
or
xor
out
add
xor
xor
add
xor
fxch
mov
adc
pop
test
or
outsl
mov
or
mov
pop
pop
jno
loopne
and
mov
mov
xlat
lcall
or
cmpsb
cmp
lock
aaa
insl
shrl
xchg
push
cmp
add
rdtsc
lret
add
ror
xchg
clc
inc
sti
mov
pop
jl
movsl
jb
pusha
pop
out
dec
and
mov
mov
add
outsb
sahf
out
xchg
mov
jp
fwait
mov
inc
dec
inc
mov
in
and
or
pusha
and
fbld
mov
mov
sbb
daa
inc
xor
stos
xlat
sub
jne
jb
mov
insl
cmc
pop
ret
mov
in
int
or
mov
lret
mov
sbb
push
sahf
pushf
sti
popf
sahf
sbb
bound
fwait
and
xor
nop
inc
mov
xor
pusha
push
ss
sub
push
pop
or
outsl
lods
mov
into
inc
pop
pop
dec
inc
movsb
mov
sti
pop
addr16
mov
add
sbb
out
ss
out
aaa
lcall
lret
and
stos
addb
ret
fwait
daa
jnp
nop
test
mov
sub
add
xchg
in
xor
dec
test
add
jno
and
lret
js
fs
test
shl
adc
push
insl
jecxz
ljmp
jle
fadd
fdivr
call
aam
loopne
outsl
fwait
imul
data16
ds
aaa
shl
fsubs
lcall
fdivs
ja
clc
ds
or
fwait
test
sti
xchg
mov
mov
jle
cmp
dec
enter
lock
dec
jae
scas
test
inc
push
aaa
pop
pushf
pop
xchg
mov
jae
cld
pop
out
sbb
mov
dec
hlt
push
mov
and
das
popa
in
xchg
adc
movsb
cwtl
fisubrl
add
xchg
xor
je
push
loope
lcall
dec
arpl
das
push
pop
lock
sub
jne
jecxz
test
push
ret
or
mov
fdivs
xchg
adc
loop
lods
mov
lods
inc
mov
mov
outsb
sub
adc
popf
jae
inc
cmove
insl
lcall
jl
daa
jmp
inc
xchg
mov
dec
mov
adc
xchg
push
dec
outsb
jae
dec
mov
cmpsb
push
sbb
int
push
pop
imul
pop
adcb
and
ss
movsb
push
mov
pushf
pop
pop
negb
mov
test
or
adc
movsb
ret
or
xchg
jmp
repz
ja
adc
push
add
mov
aad
aaa
add
pop
faddl
popf
and
gs
xlat
bound
dec
pop
pop
mov
cmp
call
push
lahf
pop
fldl
xchg
daa
das
cmp
pop
pop
int
ljmp
xchg
mov
or
sub
mov
and
aad
pop
jae
int3
cli
xchg
out
lods
add
xor
ja
add
pop
mov
push
dec
fisttpl
dec
movsb
mov
mov
rolb
push
enter
and
out
xchg
cli
push
push
cmp
jge
insb
js
and
xchg
push
add
and
jbe
out
shll
dec
adc
pop
xchg
sbb
jg
insb
cmpsl
inc
sub
mov
cmp
adc
fiadds
fstpl
jno
sbb
and
scas
pushf
mov
outsl
xchg
push
fisubl
fistl
jae
daa
cmpsl
sbbl
add
push
daa
dec
add
stos
aad
add
xor
add
pop
pop
sbb
mov
jge
and
cld
scas
push
inc
inc
jns
xchg
and
fdivs
fdivr
push
adc
mov
scas
mov
mov
cli
xorb
sbb
mov
pusha
cmp
insb
dec
aaa
test
jbe
lods
adc
pop
or
dec
jb
movsb
xchg
cmp
andl
xchg
sub
mov
xor
xor
lods
daa
cmp
xchg
push
cmc
decb
repz
or
mov
jns
cmp
or
in
push
push
xchg
inc
xchg
sub
stos
dec
pop
pusha
aad
outsb
ljmp
leave
shlb
inc
fstpl
scas
movsl
les
lods
test
cwtl
in
cmp
mov
jg
lods
adc
xchg
cltd
clc
or
sub
sub
xorb
lds
addps
ret
add
stc
int3
dec
int
sub
add
dec
push
push
clc
xor
xchg
xchg
push
mov
jno
pop
cmpsl
js
mov
jg
cmp
pop
hlt
pop
fdivs
xchg
loope
inc
add
enter
pop
push
mov
inc
inc
dec
mov
push
cmp
sub
sub
ret
std
testb
push
and
movsl
daa
je
pusha
icebp
xchg
in
fsubrp
icebp
mov
aas
xor
out
fists
xchg
and
mov
rcll
mov
or
shll
int3
loopne
mov
sub
push
dec
imul
inc
pop
ss
repz
in
ficompl
sbb
mov
adc
inc
cmp
out
inc
stos
push
out
testb
sarb
pop
lods
or
out
mov
pop
push
hlt
and
stos
xor
xlat
push
sub
imul
movsl
scas
jl
fsts
icebp
jmp
int3
lock
icebp
mov
push
fdivl
inc
test
adc
imul
xlat
into
pop
pop
sbb
xchg
jg
mov
jmp
mov
xchg
and
jbe
roll
call
pop
in
adc
loopne
mov
std
ficoms
mov
imul
insl
out
fmuls
cwtl
cmp
and
sbb
xchg
mov
xor
dec
imul
xlat
mov
clc
icebp
mov
inc
adc
jb
pop
mov
pop
lret
ret
fldenv
dec
clc
in
add
insb
jmp
mov
lods
arpl
ja
sarl
sbb
sbb
pusha
aad
cmp
lds
roll
xorl
push
lds
add
cwtl
rorl
push
nop
lret
mov
fs
mov
jmp
cmp
mov
ds
ret
into
cltd
sub
mov
test
call
sbb
cmp
cli
mov
pusha
mov
out
push
mov
push
ret
dec
test
adc
test
or
test
outsl
push
dec
aas
ljmp
cmp
pop
pop
mov
jmp
imul
mov
repz
lock
lcall
stos
inc
add
test
cmp
dec
xor
imul
lods
dec
in
pop
push
outsl
inc
repnz
gs
aam
rcrl
add
lds
sub
lcall
iret
adc
mov
leave
lods
xchg
movsb
inc
xor
xorl
adc
push
sbb
shrl
mov
lret
sub
imul
lahf
subb
fsts
xchg
pusha
ljmp
jno
mov
adcb
fstl
loope
add
dec
test
push
data16
lock
pop
rdtsc
or
ja
pop
lcall
xchg
cmp
arpl
inc
mov
adc
adc
adc
mov
test
inc
js
adc
loope
mov
and
and
add
jmp
xor
mov
out
scas
in
jo
lret
mov
int
dec
enter
mov
shrb
fstps
cmp
add
mov
pusha
jne
or
ret
xchg
and
xchg
xor
mov
rolb
push
aam
sub
jne
cwtl
shrl
xchg
rolb
sbb
push
shll
out
dec
jecxz
dec
push
push
cmpsl
xor
push
mov
lock
int
idivb
pop
push
ja
fucomip
in
outsb
push
ret
jb
pop
mov
mov
xor
add
in
aad
movsb
mov
int3
cmp
rcll
std
mov
daa
mov
dec
push
xorb
xchg
fs
and
mov
mov
test
cmpsl
fnsave
repnz
daa
out
sbb
cwtl
ja
std
mov
les
mov
sbb
xchg
xor
jl
daa
and
imul
cmpsl
das
scas
out
push
jne
faddl
xchg
js
sub
xor
fwait
shll
or
jo
push
xchg
lock
fwait
or
orb
mov
addr16
mov
add
xchg
cmp
mov
adc
pop
add
int
dec
mov
ret
push
fists
cwtl
mov
gs
inc
mov
pop
lret
mov
push
stc
inc
into
pop
mov
add
in
dec
imul
push
int
push
jmp
out
std
xchg
cmp
jbe
xchg
mov
das
dec
push
jae
add
lcall
clc
xchg
pop
rol
jo
mov
inc
fldenv
nop
jecxz
push
sbb
popf
lret
sub
mov
and
mov
repnz
jmp
jge
cld
iret
pop
bound
push
mov
mov
nop
inc
enter
ret
dec
bound
inc
push
cmp
stos
push
adc
ja
sahf
fdivr
movsl
push
xchg
adcb
sub
shrl
cltd
scas
xchg
ljmp
ror
add
dec
rcrb
movsl
cmp
jle
aaa
push
mov
dec
pusha
cli
push
popa
sub
into
leave
inc
inc
and
ss
stc
xchg
lahf
stos
mov
push
cli
add
jb
push
dec
lds
xor
or
dec
lods
xor
cmp
push
adcl
loop
gs
mov
popf
mov
test
ljmp
adc
lret
in
sub
das
mov
cmp
cmp
outsl
cmc
aam
ret
cltd
jnp
iret
std
jecxz
orl
cmp
jge
mov
es
mov
popf
or
pop
or
das
sub
dec
std
or
test
lret
mov
into
ret
push
or
sub
sbb
push
xchg
inc
mov
sbb
sub
push
push
inc
mov
pushf
mov
push
xchg
hlt
dec
mov
pop
addb
xchg
mov
daa
or
pushf
dec
push
mov
sbb
fs
jg
subb
mov
xchg
jg
sbb
pushw
or
push
jp
jmp
lods
andb
cmc
rcrb
jp
stc
leave
xchg
pusha
lock
test
pop
xchg
pop
fidivl
dec
cli
cltd
dec
test
sbb
fcomi
pop
mov
push
and
jge
mov
notb
cmp
sbb
into
sbb
lds
std
mov
mull
xchg
sbb
xor
aam
out
xor
sub
dec
inc
xchg
mov
dec
or
pop
adc
xchg
adc
pop
in
dec
lcall
xchg
or
push
ret
fildl
int
outsl
insl
in
jae
imul
cltd
jae
bswap
lret
fwait
mov
sub
lret
cmp
or
nop
fsubrl
movsb
cli
fs
pop
xchg
loopne
mov
sti
imul
scas
sub
ds
movl
mov
jge
jae
lods
mov
lods
mov
test
pop
call
cmpsb
adc
add
and
mov
xorb
cld
loop
push
into
divb
adc
cld
push
or
lret
add
sub
lcall
imul
std
cmp
or
movsl
cmp
push
test
mov
hlt
jo
adc
mov
and
popf
inc
into
mov
xor
fdivrs
rclb
xor
cmp
fadds
fidivrl
inc
cmc
or
fcomps
push
aaa
ss
jns
xchg
adc
push
cmp
hlt
mov
jae
or
mov
and
jo
insl
sahf
push
jno
push
inc
pushl
fcompl
adc
and
and
aaa
cmpsl
pop
xlat
and
roll
js
xchg
ja
mov
jae
jp
push
stos
jnp
add
imul
shrb
notl
pmaxsw
xor
xor
sub
inc
sbb
nop
push
mov
dec
inc
mov
adc
mov
xchg
push
cmpsl
ret
inc
fwait
mov
cwtl
test
push
dec
cmc
int3
jmp
imul
loopne
sarb
sahf
sub
xlat
int3
add
adc
scas
add
test
xor
mov
xchg
imul
movsl
ret
pop
mov
mov
and
arpl
mov
sbb
aam
xor
ds
js
es
xor
mov
stos
push
xchg
adc
dec
inc
outsb
rcl
dec
dec
insb
fsubr
test
mov
aaa
jl
rcr
pop
jmp
gs
and
out
cli
lret
push
lea
cmp
loope
push
insb
inc
repz
or
imul
pop
sbb
xchg
shl
std
and
mov
lret
sar
orl
outsb
sti
into
popa
stos
jb
jge
and
stc
add
fdivrs
and
lods
loope
jns
add
hlt
jp
jo
clc
xchg
sbb
iret
cs
aas
push
push
insb
outsl
jg
out
ret
adc
or
mov
push
int3
mov
stos
ret
pushf
ret
jne
or
sahf
lock
mov
mov
sbb
leave
push
std
jne
pop
mov
adc
dec
jnp
popl
pop
add
in
sahf
xor
adc
icebp
mov
mov
or
push
mov
push
inc
repz
es
push
push
pop
repnz
shlb
mov
rolb
pop
es
push
sub
mov
pop
inc
jg
xchg
daa
addb
mov
enter
lahf
add
jnp
cmpsl
or
cmpsl
nop
mov
rorb
fistpll
sti
aam
dec
fadd
fsubrl
in
mov
xchg
pop
xchg
pop
cmp
cmp
dec
insl
sub
jnp
rorl
pop
pop
imul
adc
add
jb
or
outsb
lret
sahf
jp
or
jne
js
fstl
jl
nop
scas
lods
pop
pop
sarl
jo
adc
aad
mov
nop
aaa
repz
xor
call
cmc
inc
add
pop
enter
cs
dec
call
rolb
xor
or
imul
rcrl
adc
les
sub
lea
push
adc
cld
mov
enter
push
mov
and
or
in
fs
call
ljmp
adc
add
or
mov
in
mov
jecxz
ja
cmpsb
cwtl
xchg
push
sub
xchg
stc
sub
js
fs
out
dec
push
add
enter
or
les
inc
hlt
pop
lret
fisubs
mov
adc
pushf
pop
jl
xchg
ds
imul
jl
loop
cmc
or
push
mov
in
and
out
cli
ljmp
stc
dec
mov
decl
or
hlt
loope
xchg
jo
push
in
insb
ljmp
scas
daa
gs
add
mov
hlt
and
sub
fistps
mov
xor
lret
jne
lcall
dec
sar
mov
and
or
xchg
inc
leave
push
mov
das
dec
out
mov
inc
lock
dec
pop
fnsave
mov
shl
fwait
mov
fwait
and
add
aas
in
pop
xor
fs
adc
push
sahf
and
sahf
sbb
push
roll
pusha
out
fimull
adc
lods
cmpsl
or
ja
ret
sahf
adc
iret
xchg
scas
push
pop
cld
adc
dec
out
cli
or
shrb
dec
lret
cmpsb
add
ljmp
jle
cmc
aad
xchg
mov
ds
and
mov
sti
jo
jmp
nop
out
dec
xchg
insb
pop
jmp
dec
and
dec
adcl
jo
nop
jbe
or
or
xor
lcall
jo
fidivl
lret
jo
sarb
pop
outsl
mov
cltd
pushf
js
mov
in
out
leave
imull
clc
dec
cmpsl
xor
inc
mov
xchg
mov
das
int
dec
mov
lods
aad
scas
xorb
dec
adc
lods
mov
push
imul
dec
jmp
cs
js
aaa
pop
ret
mov
xchg
pusha
js
jecxz
faddp
mov
mov
xlat
pop
jge
dec
sbbb
shlb
cmpsl
pop
xor
lea
ds
and
pop
inc
sahf
fistpl
mov
cmpsb
jbe
mov
mov
pop
into
movsl
adc
outsb
jae
and
mov
pop
xchg
jbe
mov
pop
fwait
sub
addr16
jb
jb
mov
pop
testb
lahf
pop
adc
rorl
lret
arpl
push
inc
mov
aaa
bound
jnp
imul
mov
jnp
dec
or
fbstp
out
mov
mov
fdivl
loopne
cli
cmpl
dec
fwait
pop
fdivs
pop
xchg
pusha
and
mov
jge
or
push
jle
xchg
pusha
nop
fimull
mov
fldenv
jns
mov
test
sbb
pop
rcrl
mov
jns
out
outsb
jl
adcl
into
pusha
sbb
inc
or
and
loop
std
stos
subps
dec
mov
push
imul
dec
jg
fs
bound
pop
xchg
or
mull
jge
sub
adc
mov
roll
push
mov
or
call
insl
pop
icebp
imul
cmp
lcall
faddp
sub
push
sti
xlat
jb
inc
xchg
loop
call
or
in
sub
fdivrl
es
lret
das
sbb
or
mov
push
pop
fnstenv
jbe
push
mov
andl
push
and
jbe
daa
orl
mov
mov
mov
les
ljmp
add
add
bound
xlat
adc
das
lret
in
movsl
cwtl
out
imul
fcoml
test
test
fildl
cmp
jne
push
push
xchg
push
and
lret
mov
adc
pushf
lods
adc
xor
or
bnd
pop
shll
adc
sarb
xchg
sbb
ret
scas
pop
pop
std
scas
pushf
aad
pop
inc
pop
or
je
test
fwait
push
lods
mov
lret
add
scas
mov
push
popa
pop
pusha
inc
jb
sub
mov
aam
jg
into
andb
jno
repz
pop
fisubrl
or
add
ret
jbe
cli
push
jp
push
dec
sbb
and
outsl
imul
in
andb
or
dec
fs
loop
shlb
sbb
lds
scas
lods
push
push
mov
mov
test
sbb
daa
nop
icebp
adc
pop
cmp
sbb
incb
and
mov
insb
das
arpl
ja
jecxz,pt
rclb
test
adc
es
andl
dec
xor
into
xchg
test
fwait
xor
in
cmp
push
leave
pushf
xchg
cmc
fbld
sub
pop
mov
addr16
inc
mov
inc
and
addr16
bound
add
and
or
or
xor
enter
cmovl
cmp
lea
xor
rol
mov
mov
add
add
icebp
and
loope
push
xchg
repnz
movb
sub
or
xchg
sbb
ljmp
inc
or
jmp
mov
test
clc
jp
mov
scas
pop
jne
add
aaa
adc
jle
and
sub
addr16
cmpsl
push
mov
inc
sub
jecxz
rcll
mov
data16
outsl
ret
sub
in
jg
gs
clc
shr
cmp
cli
pop
fmuls
call
pop
and
jge
lret
sub
into
stos
cmpsb
dec
lock
and
or
mov
and
and
stos
addr16
and
sahf
shll
dec
xchg
push
dec
out
add
hlt
stos
popf
lahf
and
dec
mov
mov
rcrl
sbb
mulb
push
xchg
cmp
mov
movsb
jb
jb
inc
in
or
xchg
pop
mov
sub
cmp
adc
es
dec
lock
loopne
clc
and
dec
cmc
xor
int
add
dec
filds
push
cmpsb
jnp
push
xor
add
jecxz
call
lods
mov
and
pop
es
dec
or
out
aad
push
test
mov
jl
add
stos
pop
gs
sbb
xchg
int3
mov
dec
and
mov
add
imul
gs
xor
cs
insb
add
gs
xor
fs
insb
add
std
push
fimull
cmpsb
int
inc
test
jb
inc
inc
adc
fstps
ja
adc
out
cmp
and
cmp
lods
push
lds
mov
or
sub
sub
jle
in
call
xorb
push
inc
lcall
push
mov
push
mov
push
jb
dec
push
fadds
cmpsb
nop
repnz
sti
or
adc
mov
fstpl
mov
sti
inc
in
xor
das
sub
cmp
and
push
bound
sarb
jno
jmp
mov
cmpsb
xchg
mov
in
jecxz
jmp
mov
mov
mov
sub
in
mov
or
xchg
jo
mov
jle
jecxz
mov
sub
ret
lods
and
xorb
repnz
cmpsl
int
sub
pop
fldl
xchg
sar
add
jle
lahf
jns
sbb
lret
dec
cmpsb
cmp
test
xchg
inc
mov
pop
cmpsl
inc
push
and
push
or
out
loop
fdivrs
mov
sbb
in
jp
lcall
test
mov
ja
aam
inc
mov
inc
sbb
cmp
gs
stos
stos
movsl
mov
adc
pusha
adc
scas
lret
adc
fsubs
cmp
sub
xor
mov
imul
cmp
dec
xlat
mov
and
pushf
imul
add
fistl
mov
jl
lret
fisubl
sbb
pushf
push
add
pushf
outsb
aam
rclb
rolb
into
pop
in
push
lds
pushf
mov
pop
pusha
mov
pop
je
dec
bound
ss
push
jno
pop
fwait
sahf
push
bound
cltd
repnz
fcmovnbe
xchg
insl
lods
and
xchg
mov
sahf
or
pop
fistps
imul
imul
aam
ret
xor
int3
or
insl
notl
mov
pop
add
cld
sub
sar
mov
in
jno
xor
test
roll
jb
fistpl
fisttps
sar
repnz
pusha
xchg
push
xchg
cmp
jp
ret
sub
sbb
mov
popa
inc
xlat
scas
test
cwtl
int3
inc
and
inc
dec
adcb
adc
enter
js
sbb
dec
stos
mov
inc
xchg
bound
in
imul
hlt
inc
clc
stos
pop
ljmp
les
fnsave
call
adc
pop
incl
test
xchg
mov
cmp
push
ret
push
mov
add
fwait
stc
insl
insb
lcall
loope
int3
out
movsb
cmp
lods
data16
add
push
dec
add
loope
inc
dec
cmp
xchg
hlt
les
out
adc
xchg
es
xor
push
sarl
cmp
mov
js
sbb
sbb
popf
xor
inc
mov
loop
sub
je
jo
push
ds
mov
pop
outsl
push
fcomps
sahf
pop
pop
or
outsb
imul
push
dec
in
xchg
pop
shr
test
and
out
pop
jns
sub
pop
inc
test
xchg
sbb
dec
push
lahf
push
mov
stos
in
repz
pop
std
mov
sbb
movsl
mov
mov
xchg
lea
jno
xchg
ss
sbb
inc
frstor
add
fcomps
dec
jecxz
je
mov
sbb
dec
das
push
pop
out
adc
xchg
mov
pop
sbb
xorb
int
movsl
push
jbe
or
int
push
or
xlat
lret
leave
jg
notb
adc
icebp
sub
dec
dec
xorl
adc
or
aad
inc
lods
inc
mov
and
xor
or
mov
or
sub
mov
adc
out
in
xchg
jp
ret
out
push
rorb
dec
push
ss
cmp
xor
and
push
test
aam
imul
add
and
mov
sbb
or
notb
rol
push
fistl
and
je
aas
lcall
aas
inc
dec
adc
in
cmp
imul
pop
sub
fcmovnu
mov
dec
scas
in
add
jne
fldt
lds
addr16
pop
test
gs
xchg
out
pusha
daa
dec
call
jl
push
or
mov
orl
daa
inc
outsl
xor
pop
imul
fwait
pop
push
fldcw
fisttpll
adcl
cwtl
inc
adc
mov
adc
js
jns
mov
inc
rorb
add
ljmp
mov
lea
cmpsl
xor
sub
dec
mov
dec
shll
push
cs
call
ret
mov
test
nop
orps
pop
sbb
xorb
inc
fiaddl
or
push
imul
mov
and
pop
push
mov
ficoms
jp
mov
mov
std
pushf
sbb
mov
out
and
jg
lahf
mov
insl
hlt
into
popf
loop
or
jle
push
ds
cmp
adcl
xchg
lret
add
arpl
inc
xor
mov
aaa
adcb
pushf
xchg
shrl
sub
cmp
dec
lods
jle
loop
in
cmp
fbld
std
test
cmpsb
lods
push
xor
inc
xlat
jmp
inc
imul
or
lds
insl
xchg
sbb
mov
jmp
jnp
add
xchg
sbb
addl
add
imul
jl
pop
cmp
and
scas
sbb
shlb
mov
dec
mov
aad
push
lods
mov
adcb
mov
shl
ds
mov
fistl
and
cli
inc
xlat
cmp
cmp
and
sbb
fsubs
cmp
daa
in
adc
add
push
sbb
sbb
je
and
cld
stos
or
les
mov
dec
sbb
js
icebp
call
mov
movsb
sbb
or
mov
cmpsl
xor
outsb
xchg
mov
xor
xor
mov
pusha
adc
imul
fiadds
ret
pop
shll
dec
and
in
mov
add
dec
push
pop
xor
or
fs
pop
popf
mov
int
movsl
sub
ss
lret
mov
xor
jmp
or
xchg
mov
int
push
movsb
mov
fnsave
sbbb
icebp
xchg
cmc
inc
push
out
mov
cmp
xor
stc
jecxz
mov
pop
outsb
repz
mov
pop
or
pusha
or
push
ljmp
push
mov
call
sbbb
or
es
mov
xchg
xlat
xor
fucompp
jbe
clc
or
add
pop
ret
pushf
push
pop
lock
das
clc
popf
insl
out
stos
shll
notl
jmp
jne
add
sub
pusha
push
jae
div
jbe
dec
xchg
sbbl
negl
push
negl
pushf
and
lahf
out
out
adc
pop
mov
loop
insb
popa
shll
push
lret
data16
sbb
addb
push
lcall
call
sbb
jmp
hlt
fidivl
pop
mov
stos
lds
lea
pop
adc
xchg
xchg
sub
test
mov
mov
ja
test
lods
in
xchg
out
scas
lcall
sbb
lock
stos
jp
adc
jbe
out
out
mov
mov
je
adc
loopne
push
or
addr16
jecxz
aam
leave
push
mov
jns
sar
xor
arpl
pop
xor
mov
and
jp
arpl
push
jnp
or
shll
fcoms
cld
jo
push
inc
mov
push
das
mov
mov
mov
out
inc
push
sbb
and
in
fidivrl
ja
jns
cltd
negb
jnp
adc
adc
lahf
aam
fsubp
push
pop
in
add
imul
inc
in
insb
aaa
aas
sbb
sbb
or
fldcw
daa
cwtl
pop
and
outsl
jns
fwait
dec
pop
mov
stos
cmp
mov
mov
shrb
pop
jmp
push
jb
enter
add
jae
mov
icebp
loopne
dec
addb
inc
sub
mov
jne
mov
les
mov
shrl
mov
mov
cmp
adc
sub
add
xchg
push
into
dec
inc
adc
inc
jns
jb
xchg
insb
hlt
sub
or
ljmp
test
add
xchg
iret
jnp
push
sbb
dec
adc
imul
imul
mov
ret
shr
ljmp
jmp
mov
testb
andl
xchg
and
pop
xchg
mov
insb
pop
inc
pop
rcrl
in
test
sbb
xchg
leave
mov
xchg
mov
insl
nop
stc
fimuls
leave
mov
sbb
pop
push
sti
test
ror
jmp
xchg
add
xchg
hlt
pushf
fisubrl
xchg
mov
sti
adc
dec
dec
das
stos
ljmp
jns
fisttpl
std
sbb
ja
mov
cmp
sbb
mov
or
sub
dec
inc
jg
dec
sub
fnstcw
lret
fs
ret
lock
adc
mov
mov
mov
inc
in
inc
jbe
dec
mov
pop
mov
and
test
add
pop
rorl
jnp
mov
std
imul
adc
int
rcrl
jnp
inc
nop
imul
insb
mov
push
leave
in
cli
mov
mov
ljmp
cmc
or
jne
xchg
jb
scas
sbb
dec
js
outsb
jmp
sub
sbb
incl
cmp
mov
mov
and
data16
jns
loopne
sti
push
sar
pushl
pop
andb
popf
push
lcall
jnp
mov
push
rolb
push
sub
dec
std
jb
js
mov
movsl
test
in
icebp
out
mov
and
imull
fwait
sbb
adc
sub
cli
pop
out
or
movsb
pushf
inc
and
arpl
insl
jge
inc
or
xor
and
fwait
pushf
mov
fldt
cmp
jne
cs
mov
dec
mov
cwtl
scas
fldt
mov
jl
inc
mov
test
bound
or
mov
add
pop
pop
jae
sbb
mov
insl
sbb
subb
jae
bound
arpl
mov
pop
lock
fists
arpl
fidivrl
dec
inc
out
cld
inc
sub
xchg
ljmp
mov
ljmp
loope
or
or
jns
pop
mov
repz
cld
cmp
cmp
cltd
ja
cld
add
and
popa
pusha
push
aaa
cmc
leave
cld
neg
mov
and
cmc
mov
lcall
push
pop
in
fldcw
iret
mov
scas
outsb
sbb
sub
jo
inc
inc
jg
pop
xor
stos
add
ror
cmpsl
in
ret
pop
add
stc
fwait
sub
pop
dec
std
out
inc
addr16
jmp
add
jecxz
gs
xchg
stos
aad
aas
popf
push
push
dec
out
stos
cmp
sahf
inc
or
dec
addr16
fmull
xchg
in
adcb
outsl
dec
mov
inc
andb
sbb
shll
adc
pop
out
cmp
arpl
bound
xor
loope
out
clc
jl
jp
movsl
pop
push
ja
daa
out
test
and
cmc
pop
pusha
mov
loop
inc
mov
mov
mov
add
cli
sbb
ja
pop
mov
test
cmpsl
mov
mov
ret
daa
jns
xor
push
popf
loope
imul
ljmp
pop
icebp
mov
and
arpl
sub
and
mov
lods
in
stos
adc
push
mov
xchg
jb
frstor
add
out
out
mov
mov
and
mov
jae
pop
cltd
or
loopne
lods
imul
jb
and
into
and
jae
add
arpl
stc
jb
push
dec
add
xor
mov
mov
fldcw
jecxz
xor
into
push
inc
aad
jecxz
inc
outsb
mov
xchg
mov
inc
jbe
inc
or
std
pop
pop
pop
in
shrl
adc
cmp
xor
push
jmp
sub
push
or
in
imul
imul
test
stc
adc
daa
cli
jp
scas
dec
shll
rcr
lock
pop
sti
popf
cmp
sbb
lds
lds
dec
lds
cmp
pop
mov
xchg
shlb
sbb
sbb
iret
out
pop
dec
cmp
shrd
mov
mov
ja
mov
and
or
pop
out
sbb
cmp
or
mov
lock
ret
jb
mov
sbb
lock
movsl
jns
pop
out
mov
outsl
int3
in
mov
ret
add
rorl
pop
repz
or
cmp
mov
sub
pop
mov
cmp
jno
pop
sub
pop
loopne
mov
cmp
and
daa
mov
jg
pop
jg
daa
push
push
loop
mov
and
lahf
mov
in
cmpsl
jo
dec
pop
xor
outsb
push
inc
push
cld
ret
mov
pusha
lahf
ret
push
push
push
fisubrl
stc
push
aaa
pop
mov
icebp
cs
push
pop
mov
pop
test
in
jle
mov
fisubl
dec
xchg
pop
les
ret
in
addr16
cmpsl
loope
sub
push
roll
mov
add
dec
pop
cmp
push
mov
xchg
dec
repz
add
dec
cld
call
lock
mov
push
hlt
cmp
add
iret
cli
sub
jae
out
mov
inc
icebp
mov
jge
or
arpl
sub
xchg
inc
out
dec
ja
jae
pushf
inc
add
fadds
mov
cmp
xchg
push
xor
outsb
in
sbb
jp
clc
dec
mov
xchg
hlt
fadds
mov
mov
adc
subb
daa
lret
and
inc
cwtl
scas
sub
mov
push
fildll
sbb
shrb
das
not
popf
cli
mov
mov
inc
mov
dec
icebp
push
sarb
lret
sahf
aam
int
and
fnstcw
out
pushf
scas
or
mov
cmp
dec
int
mov
jne
mul
add
clc
pop
mov
into
push
mov
push
mov
scas
inc
cltd
or
pop
add
inc
adc
inc
nop
scas
ljmp
adc
fcomip
jle
dec
stos
aam
je
icebp
les
cwtl
ljmp
sbbb
out
mov
jne
jp
cli
xor
movsl
div
mov
and
movsb
in
pop
dec
mov
cmp
adc
push
enter
mov
popa
lahf
pushf
xchg
ss
in
int3
je
dec
imul
inc
mov
xor
ja
jmp
call
cmp
xor
dec
lea
dec
add
jo
int3
pop
test
dec
mov
xor
mov
pop
push
data16
aaa
jg
adc
into
add
clc
inc
sti
or
pop
jl
out
test
xor
inc
jle
and
push
xchg
lock
jge
inc
popa
dec
mov
movsb
jg
scas
cmpsl
fldl
sbbb
mov
out
mov
push
jb
fsubrs
fs
cmp
loop
js
xor
cld
and
sub
mov
push
and
and
adc
mov
sub
dec
sbbb
lods
aam
imul
jmp
std
adc
push
mov
push
or
adc
pop
mov
and
dec
test
insb
or
movsb
inc
sub
cltd
lcall
mov
sub
or
fstpt
xchg
pop
fadd
dec
push
xchg
icebp
jnp
push
dec
je
jg
mov
test
jns
into
cmp
test
xor
or
fdivrl
cmp
pop
sub
cmpsb
daa
lahf
push
das
es
loop
fisubrs
icebp
js
lahf
and
lods
out
adcl
push
jns
pusha
test
xlat
enter
xchg
mov
sub
das
push
orl
and
xor
and
sub
xor
jl
xchg
mov
mov
subb
loope
arpl
mov
jle
mov
mov
xchg
push
inc
dec
repz
rcll
pusha
ret
xor
les
cltd
sarl
and
push
js
jmp
or
addl
jl
lret
mov
scas
add
adc
push
fwait
mov
xchg
dec
mov
in
pushf
xor
mov
mov
jo
jbe
movsb
push
aaa
add
push
jo
scas
std
inc
push
insl
andb
pusha
and
or
iret
in
mov
cltd
data16
daa
sti
aas
dec
sub
pop
jl
popf
daa
fcmovnbe
inc
sbb
frstor
idivl
in
cmp
inc
jno
lods
or
hlt
arpl
iret
or
xor
pop
mov
mov
push
fstl
cmp
pop
es
and
movd
inc
daa
sub
push
cli
xchg
out
push
mov
and
and
mov
shl
dec
pop
pop
out
xchg
loope
jns
mov
sbb
dec
lods
cmp
sbb
les
stc
xor
xchg
mov
ja
dec
call
sbb
jg
jnp
outsb
mov
lea
rorb
jp
inc
xchg
push
inc
mov
mov
sub
add
fadds
andl
lea
loopne
shll
addr16
xchg
dec
sbb
xchg
dec
test
cmp
lcall
leave
into
lods
lret
jns
test
aaa
outsb
push
sarl
push
fsubrl
add
push
imul
dec
insb
gs
mov
cmc
add
test
sbb
cmp
mov
mov
sarl
jne
jnp
pop
call
rcrl
lea
icebp
mov
decw
in
je
fisttps
add
flds
push
fnsave
xchg
mov
sbb
mov
out
aaa
outsl
call
mov
fistps
mov
in
jp
popa
jns
movsb
xorl
and
inc
or
mov
call
rcll
push
outsl
mov
repnz
lcall
stos
imul
rcll
push
data16
sub
cmp
push
jecxz
insb
imul
pusha
push
repnz
add
mov
and
xor
cmp
push
mov
mov
ljmp
cmp
inc
into
pop
add
movsl
enter
mov
mov
cli
repnz
add
mov
pop
inc
sub
ret
gs
or
mov
cwtl
add
adc
imul
jg
lahf
push
push
rep
pushf
mov
insb
pop
xchg
cmp
push
xor
jno
xor
fxch
and
outsb
xchg
adc
xor
jb
adc
das
andb
pop
or
mov
loop
sub
lods
std
mov
lea
out
in
xor
mov
lods
push
xor
jge
pop
mov
call
dec
mov
inc
sbb
mov
orb
imul
movsl
enter
jmp
mov
fisubrs
xor
fidivs
jle
js
mov
bound
hlt
mov
xchg
dec
popa
dec
dec
xchg
sbb
cmp
out
neg
mov
push
jl
jns
ja
gs
adc
test
cmpsb
arpl
scas
mov
das
sbb
cli
outsb
add
pop
adc
xchg
enter
shrl
std
orb
mov
int
cltd
cltd
dec
stc
ret
xchg
cmpsb
sub
pop
inc
fidivrl
mov
xchg
dec
or
inc
jp
inc
add
clc
adc
inc
sbb
cmpsl
add
aad
mov
add
jne
and
stc
sahf
jbe
pcmpgtw
adc
test
adc
and
sbb
mov
int
lahf
jge
cld
test
sub
call
addr16
adcl
sbbl
pop
mov
xchg
rcrb
icebp
sub
enter
pop
xor
shrl
mov
aad
les
dec
fdivrl
adc
push
iret
clc
pop
mov
jno
dec
int3
or
add
and
ret
std
xchg
lea
pop
stos
rorl
add
cld
xor
and
adc
jno
fmuls
push
xor
mov
add
fildll
adc
enter
negb
test
loope
sbbb
xor
push
jg
xor
mov
lahf
or
xor
dec
lds
shlb
rorb
sub
int3
lret
jnp
inc
mul
add
mov
aam
mov
pop
cmp
or
sub
jecxz
enter
push
out
pushf
test
jle
push
stos
and
jb
adc
dec
lahf
cwtl
scas
add
movups
jp
insb
mov
outsb
cmp
push
jns
inc
mov
lret
cltd
repz
call
add
insb
xchg
sub
add
adc
lock
xlat
pop
mov
out
and
push
movsb
outsb
in
jbe
lea
mov
push
cltd
xchg
sti
mov
pop
pushf
xchg
fdivl
pop
add
fldln2
cs
push
insl
cs
jo
in
jl
call
push
fisubrl
xor
mov
test
add
imul
inc
fsubrs
mov
xor
psubsw
mov
xor
dec
pop
ficompl
cmp
loop
mov
mov
inc
jle
cltd
inc
inc
pop
xlat
jbe
jp
ret
gs
outsb
pop
subb
adc
dec
push
lods
cmpsl
adc
hlt
pop
xor
movsl
mov
outsb
dec
dec
mov
cltd
ja
jae
xchg
loop
test
test
push
cmp
jbe
jno
pop
arpl
faddp
push
leave
fs
arpl
test
dec
mov
jmp
push
add
mov
add
inc
std
dec
lock
repnz
sti
adc
insb
dec
aad
or
mov
fnstcw
pop
xlat
inc
mov
mov
lds
nop
and
adc
sbbb
push
repz
loope
mov
pop
pop
add
pusha
imul
xchg
inc
icebp
sub
stc
repz
inc
std
adc
aas
or
in
hlt
jo
and
cs
ss
out
push
mov
testl
out
dec
sti
bnd
sub
cmp
cmpsb
mov
or
test
int
movsb
pop
shrb
dec
sbb
push
popf
push
leave
dec
push
je
inc
push
into
jmp
mov
sbb
les
scas
mov
inc
jae
pop
mov
pop
leave
push
into
push
sub
clc
int
mov
mov
dec
subb
mov
rorl
gs
in
stos
or
mov
push
sti
shrb
inc
arpl
int
mov
out
ja
or
flds
int
int
xor
inc
mov
movb
cs
push
mov
lock
cmc
push
jbe
loope
cmp
jo
insl
dec
rcll
xor
push
addr16
test
mov
mov
jnp
xor
fmuls
mov
adc
outsb
dec
cmpsl
repz
xchg
or
outsb
add
mov
scas
and
ror
clc
insb
jge
fs
rol
fdivl
adc
jecxz
xor
insb
outsl
dec
or
sbb
or
push
sbb
mov
mov
inc
inc
icebp
adc
lds
mov
out
mov
mov
in
ret
mov
jbe
jmp
lea
sbb
or
push
cmp
call
out
mov
daa
pop
clc
arpl
xchg
inc
lahf
xchg
mov
xor
push
xchg
in
mov
dec
sarl
out
sbb
mov
adc
and
cltd
mov
out
cmp
xchg
sbb
jbe
imulb
loopne
jecxz
sbb
lds
roll
js
inc
stc
pusha
dec
mov
jg
mov
xor
stos
int3
dec
icebp
popa
out
ret
pop
fcmovnb
int
pop
rcrl
pop
jae
das
and
xor
mov
mov
aad
push
xor
mov
jno
mov
push
mov
test
cmp
fnstcw
push
push
mov
jb
fbstp
and
push
lock
popf
jle
dec
sbb
jns
jp
inc
daa
imul
insl
dec
sbb
mov
push
dec
clc
daa
pop
push
dec
adc
sub
push
mov
test
xor
add
pop
lock
mov
xchg
push
mov
adc
pop
ljmp
mov
test
addr16
fwait
std
xor
lds
clc
repnz
fcmove
insb
push
stc
jp
xor
test
orl
test
cwtl
push
in
and
push
in
movsb
push
in
nop
add
push
push
decb
adc
out
xchg
xchg
fs
les
xchg
lea
xchg
cmc
out
scas
pop
out
mov
cmpsb
mov
shlb
jecxz
loop
lret
jb
sti
testb
das
sahf
fldt
mov
pop
pop
sbb
push
cwtl
xchg
jg
subb
outsb
cmp
push
push
push
cmp
adc
or
jle
xchg
mov
mov
xchg
push
popa
jl
xlat
cmp
mov
cwtl
dec
pusha
fdivl
sarl
rcll
fst
mov
lret
adc
imul
jle
pop
and
testb
xor
lcall
sarl
mov
mov
sbb
iret
push
cwtl
adc
fwait
push
aam
mov
aam
push
out
jns
faddl
daa
mov
sub
push
adc
jo
jmp
ljmp
jp
cs
pop
test
popa
call
mov
or
repz
sbb
lods
xchg
cmp
mov
cld
call
jecxz
mov
sub
sbb
adc
push
mov
mov
cmpsb
pop
sub
jne
das
cmpsl
das
jmp
xchg
jbe
mov
jno
lock
sbb
aad
jg
push
pop
outsb
arpl
fnsave
and
pop
jno
arpl
sahf
subl
adc
pusha
dec
mov
sbb
repnz
fcomps
add
stos
popf
dec
pop
add
adc
sti
test
jb
aaa
mov
mov
and
mov
and
mov
shrb
pop
loope
aaa
ds
or
inc
and
imull
pop
fs
jmp
push
cltd
and
mov
clc
push
xchg
push
mov
mov
xlat
shlb
mov
imul
fldl
pop
xlat
int
and
add
xchg
rorb
pop
into
ljmp
jecxz
jmp
add
mov
xor
cmpsl
inc
inc
out
jg
enter
mov
xchg
push
or
iret
push
dec
popf
inc
xchg
cmp
ljmp
movsb
mov
add
add
js
xchg
cli
and
jo
push
ret
sub
fldl
js
mov
sbb
insb
xor
mov
cld
mov
push
arpl
dec
std
xor
sbb
es
leave
ja
jmp
inc
lcall
push
mov
cmp
inc
ljmp
test
and
aas
scas
mov
cs
push
push
jmp
xchg
loope
or
fwait
ja
cmpsl
mov
fisubrs
mov
out
mov
push
pop
jge
add
lds
adc
in
call
jp
or
dec
filds
mov
popf
repz
mov
les
jg
push
inc
mov
stos
fidivrs
sub
mov
mov
test
jg
xor
push
push
ret
insb
dec
sbb
sar
movsb
mov
sti
and
das
stos
outsl
pop
mov
add
mov
xchg
cmpsl
mov
pushf
lods
pushl
mov
fsts
ret
dec
movsb
aas
xchg
cmpsl
push
add
jle
int3
push
mov
or
stc
insl
adc
pop
and
add
or
sub
xchg
cmp
jle
push
shrl
mov
and
rcrb
call
mov
cmpsb
push
in
jnp
incb
or
pushf
in
clc
mov
sub
mov
loope
sahf
daa
sub
dec
or
lret
lahf
in
cmp
cld
leave
dec
mov
ljmp
pop
xor
je
addb
aam
repz
fnclex
mov
dec
xchg
outsl
insb
add
and
enter
nop
fs
mov
inc
lods
dec
or
repz
sbb
and
rcr
insb
adc
push
xor
push
xor
fcomps
push
adc
sti
outsb
rcll
inc
test
daa
lea
bound
daa
and
int
hlt
mov
mov
cltd
subb
in
fstps
mov
es
out
incb
js
or
mov
test
aas
lods
scas
sbb
daa
mov
data16
jle
lods
dec
adc
and
and
adc
pop
mov
stos
pop
jg
dec
push
ffree
xchg
out
cwtl
lods
jnp
pushf
insb
rcr
mulb
es
jl
push
jbe
cwtl
push
inc
dec
xchg
mov
pop
lea
inc
and
mov
push
pop
add
pop
sbb
aaa
cpuid
pop
loopne
xorb
cmp
scas
xchg
mov
mov
cmp
orb
jo
xor
test
mov
push
add
lods
inc
test
sbb
add
cmp
push
pop
or
pop
sbb
fidivs
fildll
aam
jmp
push
jecxz
pop
fucomi
adc
cmp
popf
mov
test
pop
aad
outsl
cmp
jne
std
add
mov
cmp
dec
int
scas
or
sbb
lret
je
icebp
out
xor
adc
xchg
push
out
insl
pop
outsb
stos
mov
sbb
mov
jnp
std
sbb
scas
cld
mov
pop
mov
je
mov
daa
dec
mov
and
repz
cmc
jno
xchg
loope
dec
pop
scas
aad
xchg
jmp
adc
in
test
jae
aad
dec
arpl
call
lock
sbb
aam
icebp
xor
mov
inc
push
lods
push
push
popf
dec
inc
mov
lret
jge
imul
inc
daa
mov
sbb
hlt
cmpsb
int
pop
pop
mov
aas
jb
cmp
call
push
imul
sub
jge
cmpsl
leave
stos
or
cmp
xchg
testl
test
in
inc
rcll
xor
mov
movsl
mov
leave
les
cmp
test
push
into
cli
jbe
dec
rcll
imul
fcoms
push
sti
cmp
push
jg
inc
rolb
pop
jno
lret
mov
mov
mov
push
ss
dec
push
cmp
push
add
inc
insb
gs
aas
fstps
fldt
xchg
imul
inc
push
adc
adc
dec
mov
leave
fsubr
fistps
sub
cmp
mov
test
lret
inc
dec
mov
ds
jg
sub
pop
pop
jg
cmpsl
test
imul
mov
dec
dec
mov
and
inc
ret
ficompl
das
mov
inc
leave
ljmp
test
call
jle
sti
sub
xor
sarb
mov
dec
mov
shl
add
outsb
or
sbb
test
pop
mov
fwait
pop
push
jg
or
xchg
ret
cld
xchg
into
sub
es
out
in
push
fsub
and
or
imul
push
test
mov
add
ficompl
popa
dec
rcll
and
scas
sahf
mov
jecxz
push
int
mov
or
or
in
add
repz
pop
test
push
and
mov
xorl
add
push
roll
dec
sbb
stos
clc
fcmovnu
sbb
add
pusha
test
imul
inc
xlat
loope
add
loope
cmpsb
shlb
mov
cs
sbb
mov
and
and
sbb
jmp
mov
dec
xor
pop
jo
xchg
xor
outsl
pminsw
hlt
cmc
sub
xchg
sub
add
dec
sub
xlat
xchg
fidivl
or
int3
push
and
mov
inc
adc
lcall
push
std
push
inc
add
sbb
mov
addr16
and
mov
test
scas
roll
in
iret
sbb
insb
fcmovne
mov
add
dec
xchg
ljmp
xchg
fwait
shrb
arpl
mov
adc
ret
mov
xor
imul
sbb
pop
sbb
cmp
add
mov
dec
inc
je
and
ljmp
cld
cltd
cmpsl
and
mov
xchg
mov
shlb
and
rcr
and
push
and
loopne
aad
pop
xor
insb
fs
cs
sbb
ror
dec
fdivs
fs
inc
imul
fsub
out
xor
push
or
nop
mov
push
loop
mov
dec
sub
notl
cmp
scas
pop
add
pop
sahf
rorl
and
rcll
and
lret
pop
push
sbbl
test
fwait
cmp
xchg
xchg
cmpsl
xlat
aaa
inc
adc
dec
cmp
sbb
outsl
xor
cmp
cmp
jb
mov
adc
daa
test
or
loop
je
loope
out
flds
ljmp
inc
aam
out
not
pop
stc
hlt
sub
adc
jmp
dec
inc
xor
jne
fdivr
mov
pop
xchg
lret
adcb
xorb
call
loope
sbb
xchg
mov
jbe
jp
or
aad
pop
xchg
popf
xchg
and
mov
insb
dec
dec
stos
outsl
lods
ficomps
push
pop
enter
xchg
jb
out
mov
notl
mov
dec
adc
dec
adc
or
clc
popf
mov
into
dec
xchg
sub
hlt
stc
xchg
jae
insl
insb
mov
mov
leave
std
fisttps
mov
aam
jle
jne
and
stos
mov
add
cmp
test
out
cmp
lahf
das
outsb
mov
jb
popf
insb
lods
loop
jecxz
add
mov
outsl
std
mov
scas
dec
mov
mov
test
dec
sub
dec
add
lret
xor
out
pop
in
inc
sbb
sbb
test
push
sbb
clc
jae,pt
jmp
popa
scas
push
push
or
push
add
lret
sbb
mov
sbb
cmpsl
sub
add
mov
xor
mov
mov
add
mov
push
xlat
xchg
mov
faddl
adc
and
jb
dec
lea
and
bound
addl
mov
out
adc
inc
test
pop
inc
dec
jl
fcmovbe
loop
testl
xchg
lds
jno
loop
and
popl
and
push
in
or
enter
rol
or
dec
sahf
aaa
cli
loope
imul
jp
in
aam
out
dec
into
or
sub
int3
cwtl
push
mov
push
into
shlb
mov
mov
pop
lcall
cmp
adc
jl
movsl
out
inc
movl
enter
inc
xchg
cmpsb
sbbl
mov
cmovs
and
xor
mov
shl
out
out
adc
add
xlat
movsl
mov
notl
pusha
mov
sub
xchg
sbb
and
xor
in
dec
ror
in
repz
sbb
sub
ret
and
push
sub
out
or
jns
mov
je
loop
call
bound
iret
mov
push
dec
out
fbstp
jbe
fmulp
pop
xchg
push
mov
nop
mov
mov
inc
mov
icebp
jg
cmc
or
pop
les
ds
fmuls
or
les
jne
jle
roll
outsl
addr16
aas
dec
ss
hlt
in
movb
or
lds
insl
sub
cmp
inc
out
add
xor
or
adc
mov
test
iret
stos
sti
push
movsl
xorl
pop
push
stos
bound
dec
lock
aad
cmc
addr16
and
mov
stos
out
push
int
push
or
add
pop
jbe
jecxz
repnz
xor
cmpsb
fs
inc
push
fists
clc
and
xchg
push
xchg
cmp
fbstp
jecxz
roll
aad
inc
aad
mov
sub
sbb
dec
cmc
ret
xchg
es
jp
cmp
lret
xchg
jle
add
mov
mov
sbb
push
push
mov
cmp
push
jnp
dec
pushf
dec
dec
pop
enter
pusha
sub
add
pop
mov
lea
iret
push
js
jae
je
jno
outsl
repz
cld
cmp
mov
das
sahf
sub
push
outsl
cmp
fwait
shll
cld
orl
lock
sub
in
nop
pop
sbb
fiadds
jecxz
xchg
dec
xor
push
lods
into
or
xor
or
sub
arpl
mov
out
jbe
pushf
or
pop
jecxz
fidivrl
push
add
aas
inc
aaa
loop
sub
jmp
ljmp
aaa
push
add
add
mov
idivl
sub
rolb
inc
test
jbe
sub
pop
xchg
inc
mov
push
mov
shlb
cltd
imul
sub
sbb
out
pop
ret
data16
cmp
aam
xchg
je
cmp
lds
sahf
inc
inc
inc
sbb
aad
sub
mov
pop
gs
out
mov
mov
xchg
push
sub
sub
jae
push
pop
test
cli
inc
and
sahf
dec
iret
loop
dec
into
sub
mov
stos
repz
and
cs
xchg
dec
pop
in
or
ss
add
dec
cld
mov
push
mov
push
test
xor
adcl
xor
mov
cmp
jecxz
xchg
mov
idiv
scas
lods
mov
mov
fildll
in
mov
fadds
jae
mov
add
divl
push
subb
stc
fldenv
push
adcl
pop
xchg
lock
sbb
ljmp
cltd
cli
mov
scas
fwait
mov
add
imul
sub
mov
push
xchg
push
test
lahf
jge
cmpsb
imul
mov
mov
ja
sahf
mov
out
std
add
pop
clc
in
jg
sbb
jecxz
fsts
xor
loopne
mov
adc
mov
sub
pop
es
popf
das
movsl
adc
ljmp
and
xchg
ret
mov
cmp
mov
jle
sar
nop
jnp
int
es
in
sahf
jmp
xor
adc
mov
mov
push
pop
mov
sbb
adc
lods
rolb
fimull
adc
leave
or
mov
jp
sub
lea
dec
adcb
sarl
inc
mov
loop
ret
sub
stos
ljmp
rorl
jns
dec
pop
dec
jbe
test
push
lods
mov
mov
cltd
sub
notb
xor
leave
rorb
sbb
fs
movsb
push
push
cmp
xchg
movsb
ret
hlt
sub
push
cwtl
fdivrp
inc
insb
and
rdmsr
cmpsb
pop
push
repz
jmp
aad
out
mov
pop
das
add
adc
aaa
aas
pop
daa
scas
inc
mov
jne
ljmp
sub
pushl
enterw
jge
orb
hlt
mov
dec
inc
test
cltd
jmp
jbe
ficomps
jle
mov
jnp
loop
arpl
sub
xchg
xor
xor
es
ret
xchg
sbb
rcrl
jle
jmp
cmp
test
sub
aam
ret
add
aas
lods
mov
mulb
push
add
cwtl
lahf
add
movsl
jmp
popf
inc
or
int3
jb
sti
iret
fbld
outsl
push
mov
sbb
aaa
out
test
rorb
mov
inc
lret
cmp
rcll
pop
or
pop
fnstsw
add
test
mov
push
in
pushf
lods
loope
inc
add
pop
outsb
movsl
cmp
das
shrl
sub
mov
push
leave
inc
xchg
fwait
pushf
leave
js
jno
add
decb
out
sbb
pushf
cmp
ret
adc
xor
push
nop
cld
pop
lock
jns
add
and
mov
add
xlat
daa
add
dec
cmp
and
sub
and
and
scas
andb
fs
jne
jno
jmp
movb
out
test
dec
lods
xchg
mov
mov
test
into
mov
jns
adc
jno
sbb
sub
pop
inc
push
dec
orb
lods
jbe
cs
adc
imul
int
dec
mov
or
dec
loope
stos
adc
push
test
xor
negb
je
cmp
popf
fstps
fdivl
fwait
push
cmp
hlt
dec
pushf
and
xchg
rol
add
lahf
pop
test
fildll
dec
int3
or
and
idiv
or
lock
jmp
data16
dec
xor
push
mov
rolb
jnp
je
or
scas
mov
jmp
imul
pushf
loop
in
fildll
add
and
mov
sbbb
out
and
push
cmp
and
cmp
cmp
scas
ret
das
aam
xchg
add
lds
popa
xor
outsl
rcpps
cmpsl
nop
adc
or
ficomps
into
out
push
mov
int3
gs
mov
mov
aad
sar
lcall
add
add
daa
xlat
frstor
xchg
aad
adc
sbb
xchg
iret
xabort
imul
mov
sahf
nop
int3
fidivrl
or
mov
lock
loopne
imul
add
aam
mov
push
inc
jno
clc
sub
dec
js
into
cmpsb
int
push
stc
jno
sub
sbb
bound
nop
mov
mov
loope
arpl
jl
repnz
xorb
das
sbb
jne
mov
cmp
add
cmp
imul
mov
push
push
jae
pop
adc
adc
dec
cmp
lods
adc
push
cmpsb
pusha
into
fmul
insb
stos
push
cli
lods
sub
popf
shll
xchg
out
aas
or
adcb
jno
push
cmp
lahf
pop
sarl
repnz
mov
jge
xor
insl
jp
popf
scas
add
rcrl
or
das
mov
mov
and
stc
aas
ss
mov
lods
cld
popf
ja
jno
pop
jmp
dec
push
out
rorl
std
push
cmpsb
push
jl
pop
cli
aam
mulb
mov
xor
leave
push
data16
fs
dec
in
data16
les
ret
sbb
mov
jg
mov
int
sar
mov
out
cmc
xor
addr16
mov
ret
lods
outsb
clc
outsb
shll
scas
pushf
mov
ss
fiaddl
push
flds
jle
and
xchg
push
mov
jp
add
jge
stos
sbb
mov
adc
lods
jge
cmp
jno
lea
mov
ret
jb
stc
pop
push
dec
and
mov
mov
adc
imul
or
outsb
scas
xchg
fsubs
mov
std
push
mov
sub
lret
into
lcall
std
xor
addl
inc
clc
push
mov
adc
jnp
nop
ror
lret
inc
sbb
lret
mov
dec
mov
dec
add
inc
mov
fstpt
dec
inc
cs
cli
lds
sbbb
cmp
outsb
gs
mov
xchg
cmp
xchg
fwait
mov
testl
push
inc
enter
out
or
cwtl
lods
and
mov
or
int
inc
push
mov
dec
loop
rcr
xchg
test
push
xchg
jne
dec
into
and
sub
arpl
aam
or
adc
fdiv
sub
inc
lods
mov
inc
push
ljmp
aaa
test
sahf
adc
inc
outsl
and
aas
push
stc
jl
lcall
shlb
movsb
dec
daa
pop
popa
lcall
out
add
mov
fistpll
cmc
lods
loop
xchg
jge
or
add
shlb
aam
hlt
xor
cmpsl
and
mov
cs
int3
xor
pop
scas
fldcw
jp
lret
rclb
add
mov
xor
test
out
int3
lret
int3
mov
movsl
int3
jb
push
dec
adc
xchg
dec
adc
inc
cltd
pop
movsl
add
lahf
les
or
jl
fldcw
jl
int
mov
ds
hlt
mov
fsts
and
int3
dec
sbb
jmp
or
mov
das
sbb
inc
mov
lock
adc
nop
dec
pop
mov
xor
xchg
xchg
movsl
dec
xchg
pop
inc
cli
fldl
gs
stos
stos
and
sub
imul
insb
jmp
lea
xchg
ret
mov
aad
xchg
xchg
mov
add
adc
jns
andb
insl
inc
inc
xchg
movsb
or
jge
lds
and
nop
xchg
scas
lret
or
jmp
repnz
fisubl
cmpsb
test
repz
add
ficomps
scas
add
mov
cmc
xor
mov
jae
in
addb
inc
ret
daa
adcb
push
in
push
and
into
jnp
addb
cmp
ja
and
loopne
mov
adc
mov
rcll
int3
sar
cmp
sbb
cld
pop
out
stc
bound
sub
lods
int3
insl
mov
adc
fisubs
std
sar
mov
cmp
fnstenv
adc
jb
cwtl
iret
aaa
rorl
fs
xchg
in
sbb
mov
push
ss
out
xor
repnz
mov
xchg
mov
pop
pusha
push
in
mov
sti
stos
xor
mov
sti
in
outsl
movsb
or
test
pop
cmpps
inc
cmp
jecxz
or
cwtl
cmpb
mov
pop
shl
dec
cli
je
and
jmp
dec
add
pop
ficompl
or
mov
sbb
dec
or
mov
pmaxub
mov
in
mov
loope
xchg
push
packssdw
mov
popa
popa
mov
bnd
xchg
test
and
adc
insb
daa
je
mov
int
mov
sbbb
aam
mov
lea
pop
jae
fwait
les
mov
pop
fwait
adc
xor
gs
scas
fstpt
mov
mov
sub
xlat
dec
push
mov
outsb
loop
sub
aad
cmp
mov
push
adcb
js
std
adc
dec
mov
pushf
sbb
cs
push
add
leave
call
add
pop
xchg
fldt
add
popf
push
repz
aad
ljmp
sub
cmp
add
pop
repnz
je
jl
xor
cmp
test
ret
psubq
push
aad
ret
imul
decb
icebp
into
mov
push
jecxz
int
mov
jle
xorl
inc
repz
push
jne
jo
sti
jbe
bound
fiadds
mov
arpl
je
cltd
outsl
fsubs
add
hlt
and
into
jmp
adc
dec
sub
mov
jbe
and
or
pop
jne
insl
sbb
je
daa
mov
call
and
inc
mov
mov
nop
push
data16
scas
xlat
bound
xchg
mov
cmpsl
out
and
pop
insb
cli
cmp
ror
rorb
mov
rorb
lret
jmp
sbb
bound
sub
add
jmp
xchg
or
jg
push
mov
ljmp
fcmovne
inc
add
add
insl
inc
lret
leave
push
popa
dec
enter
mov
dec
push
push
inc
adc
pop
push
push
mov
mov
jecxz
mov
xor
xchg
and
incb
arpl
mov
fs
mov
daa
add
shl
shlb
push
imul
lahf
stc
scas
push
xorb
in
adc
call
mov
pop
push
aam
rolb
push
fs
sbb
fimull
sahf
fwait
jnp
in
js
imul
push
fildl
dec
in
jmp
cmp
cltd
das
jge
into
cmp
outsl
pop
test
cwtl
pop
insb
icebp
pushf
jmp
in
or
xchg
stos
sbb
frstor
mov
sbb
cmp
out
or
ljmp
inc
je
mov
mov
mov
cmp
lock
xchg
test
repnz
das
mov
push
mov
xor
dec
mov
fcomip
inc
daa
cmpsl
idivl
repz
sbbb
jmp
inc
cwtl
shl
outsb
pop
or
es
jae
adc
pushf
out
adc
adc
cmp
mov
lds
aam
fnstcw
mov
cmp
mov
xor
mov
xor
inc
leave
pop
xchg
sub
or
jle
popa
and
cli
sub
mov
push
insb
jmp
les
xchg
lahf
aad
add
mov
pop
inc
or
out
stos
cmp
xor
popf
and
vmovaps
stc
lret
jmp
aad
dec
aam
lret
add
je
dec
repnz
jae
mov
stos
sahf
xchg
pop
jge
xchg
push
mov
fsts
push
scas
sbb
dec
stos
cmpl
jnp
add
jmp
pop
pop
pop
lret
imulb
cld
mov
and
insl
push
add
bound
popf
cwtl
mov
sbb
in
ret
cmp
jae
subb
mov
sub
mov
bnd
jo
pop
shlb
bound
push
inc
js
and
mov
inc
push
jmp
lret
jp
cmp
mov
mov
adc
push
movsb
sbb
pop
pop
fmul
sub
and
push
rclb
pop
sub
push
cmpsb
pop
or
xchg
add
mov
test
popa
or
push
adc
or
mov
testb
cltd
sarl
jmp
mov
cmp
sbb
pop
cltd
and
outsb
gs
mov
cs
and
lcall
popl
je
out
cmp
jo
jg
push
cmp
cmp
inc
pop
inc
out
inc
out
into
mov
loopne
sbb
aam
enter
aaa
sti
xorl
aad
cwtl
dec
out
cmp
push
gs
bound
aas
out
jbe
lods
shll
int3
addb
sbb
add
rolb
cld
lcall
out
xchg
inc
gs
dec
ret
inc
out
subl
daa
cmpsb
mov
fcompl
sti
xchg
jno
mov
les
rorl
push
fisttps
shld
loop
add
cmp
xchg
xchg
lods
rol
xchg
mov
push
mov
add
insb
jo
cli
frstpm(287
xor
mov
mov
das
dec
and
test
roll
pushf
xchg
push
jg
inc
xor
mov
jle
jecxz
push
sbb
rcrb
cmp
xchg
out
rorl
pop
dec
mov
notl
pop
xchg
push
inc
push
pop
pusha
je
xchg
dec
cmp
add
adc
sbb
cmp
mov
cs
or
inc
scas
dec
and
movsb
dec
mov
jo
ds
add
pop
adc
jb
mov
sbb
cs
mov
cmpl
movsl
xchg
jno
pop
or
mov
ret
pop
cmc
test
lock
push
dec
andl
arpl
lahf
xchg
adc
rcl
sbb
or
adc
cmp
mov
aad
out
xchg
pushf
sbb
mov
int3
pop
and
fsub
mov
mov
push
sti
sub
lock
subb
xchg
les
out
adc
mov
sbbb
sahf
pusha
xor
xchg
xchg
lods
inc
mov
or
iret
add
xor
outsb
or
imul
cwtl
data16
shll
push
xchg
jg
addr16
imull
mov
vmovddup
rorb
xchg
jl
sub
mov
push
repz
rcrb
jns
push
iret
push
add
pushf
sbb
inc
test
testb
cmp
cmp
addr16
inc
sbb
add
sahf
cmp
push
mull
mov
ljmp
int
decb
lods
out
rcrb
or
xchg
dec
jo
jmp
mov
jmp
sbb
cwtl
js
std
test
inc
sbb
and
dec
dec
nop
push
test
fldt
mov
push
gs
movsl
cmp
xor
mov
inc
jmp
testb
dec
add
repnz
pop
pop
adc
lods
sub
sub
xor
stc
inc
sbb
cltd
aam
out
fcmove
mov
test
adc
dec
mov
addb
jo
pop
jae
cld
scas
addr16
pop
iret
scas
mov
pusha
sub
cli
push
xor
loop
call
stos
mov
jbe
mov
jbe
test
ret
jp
and
sbb
mov
add
fwait
decb
push
movsl
adc
scas
popf
stc
pop
imul
nop
cmc
xchg
rorl
imul
and
pop
inc
pop
mov
data16
adc
sbb
loop
inc
movsl
xor
in
inc
lods
jecxz
mov
test
jae
out
je
push
push
pop
sub
xchg
or
int3
push
test
jg
jae
sub
dec
xor
pop
ljmp
lods
sahf
into
cmp
stos
push
loopne
jnp
lret
iret
lock
jne
cmpsb
scas
movsb
pop
xor
mov
imul
adc
adc
call
sub
scas
int3
cs
test
jmp
in
push
mov
xor
into
lret
mov
fnstsw
xchg
fcmovu
adc
sbb
fmull
xchg
mov
and
fs
cmc
cli
mov
jbe
out
test
das
out
popa
pop
push
jb
scas
and
bound
add
hlt
pop
xor
jns
es
clc
mov
jge
lret
pop
sub
out
in
push
ja
mov
lcall
cmp
or
addr16
inc
adc
imul
cmp
jne
adc
sbb
push
inc
add
add
adc
xchg
inc
rolb
insl
add
test
jns
ljmp
xor
jbe
mov
inc
mov
xorl
add
fistl
cmp
inc
and
fidivrl
in
in
fwait
ret
cmc
mov
iret
push
push
pop
jp
loope
sub
enter
cmc
xlat
out
mov
enter
cld
xchg
push
fnstcw
cmc
lock
xchg
mov
mov
mov
das
int
pop
sarl
or
mov
inc
int3
push
mov
jg
xchg
leave
cmp
jmp
or
pmaddwd
repnz
jp
loop
mov
add
imul
mov
leave
sbb
neg
lea
scas
inc
mov
testl
mov
mov
je
add
arpl
scas
hlt
loope
clc
cmp
cmp
jecxz
cmp
pop
fcos
inc
mov
nop
testw
lcall
aad
into
aas
ret
cltd
mov
mov
mov
adc
cwtl
sarl
jl
mov
sbbb
out
push
mov
push
push
mov
cmp
enter
imul
out
call
jns
xchg
xchg
enter
jl
pusha
push
and
in
mov
mov
xchg
dec
pop
fs
outsb
mov
mov
int3
mov
std
or
imul
xchg
and
mov
sub
cmp
mov
test
stos
and
adc
aam
fs
or
popa
jl
jno
mov
push
and
cmpsb
in
in
or
icebp
adc
lods
stc
add
lds
fucom
mov
sub
movsl
mov
mov
xlat
and
jl
xchg
test
movlps
pop
xchg
xchg
pop
xor
cmp
pop
stos
mov
aam
pop
dec
stos
dec
pop
jnp
pop
js
dec
pop
pop
mov
stos
push
jg
adc
psraw
sub
inc
andb
repz
fistl
jp
xchg
sbb
xchg
mov
add
dec
xchg
movsl
push
add
xor
push
add
fiaddl
sub
fwait
and
stos
add
pop
ret
into
int3
inc
add
pop
out
leave
jne
cmp
push
cmpsb
imul
add
jecxz
lods
lret
nop
jge
adc
jecxz
jae
shll
ljmp
xor
or
out
sbb
dec
ljmp
int
sbb
iret
incb
fldenv
rol
lds
rdtsc
inc
push
loop
pop
das
jb
jle
enter
outsl
adc
or
pop
pop
and
int3
jg
mov
xchg
mov
outsl
jne
dec
jno
fldl
std
inc
jno
les
out
push
push
hlt
xor
push
push
jge
pop
les
shr
or
cli
cmp
push
and
adc
test
xchg
xchg
faddl
and
cmp
cld
adc
dec
cli
push
pop
mov
adc
mov
les
shll
enter
inc
pop
and
pop
scas
out
pop
add
std
aad
shrl
cmp
stos
stos
test
movsl
xor
xlat
sbb
pop
cmp
jns
add
adc
in
pop
xchg
pop
sub
mov
pop
mov
sub
je
xor
push
subl
negl
cwtl
clc
fcomi
loop
sbb
mov
mov
movsb
in
inc
push
inc
adcl
test
jl
stos
mov
mov
int3
jbe
ds
pop
xchg
lds
xchg
in
mov
in
adc
mov
pushf
test
add
cmp
incl
lea
cmpsb
out
sbb
cmp
dec
pop
mov
pop
or
xor
repnz
std
ret
push
ret
mov
cmp
cmp
cmpl
mov
hlt
push
jb
imul
jae
cmc
sub
out
jne
sbb
test
jmp
adc
rcl
inc
addr16
outsb
pop
add
in
cwtl
xlat
push
sti
dec
mov
cmp
sbbb
sbb
jg
jecxz
jae
jb
subl
or
push
mov
int3
dec
xor
inc
addr16
sub
je
cmp
mov
testl
int
add
xchg
sbb
xlat
mov
dec
sarb
dec
xchg
and
jmp
loopne
pushf
loop
cmp
sbb
insl
lahf
test
lret
and
add
es
dec
mov
enter
push
cmp
push
cmpsb
push
icebp
repnz
inc
call
ret
ljmp
adc
mov
cli
pop
xor
fcompl
iret
sub
out
outsb
xchg
mov
scas
jne
pop
mov
pop
mov
jge
push
pop
mov
push
dec
mov
xor
in
inc
insl
int
cmp
add
lahf
mov
inc
pop
mov
das
hlt
xchg
cmp
cld
sub
je
jmp
cmpsb
dec
into
inc
xor
sub
call
add
enter
popa
mov
lods
dec
inc
jno
lods
fucomp
and
jecxz
mov
test
cltd
or
push
xor
fldt
dec
push
pop
push
cmp
xlat
int3
loope
jecxz
add
outsb
stc
mov
in
dec
loopne
sti
aas
fidivs
or
shrl
pop
outsl
scas
lea
cmc
in
sbbl
mov
shrl
pop
ret
call
sbbl
sub
adc
mov
das
pop
xor
lret
add
cmpl
mov
cmc
cmpsl
out
test
aaa
enter
repnz
daa
push
or
jne
lods
subb
outsl
pusha
imul
cmp
bound
xchg
dec
in
daa
je
pop
fs
repnz
sahf
ja
push
adc
cmp
sti
and
pop
push
int3
dec
mov
lock
xchg
adc
xor
mov
leave
adc
sbb
mov
sbb
aaa
arpl
sub
push
push
js
cmp
or
jns
sub
push
mov
or
inc
aaa
cli
xchg
cmp
push
rolb
popf
mov
mov
cltd
and
shlb
iret
xor
hlt
mov
iret
cmp
aam
lds
jne
sbb
lea
inc
imul
xor
insl
shrl
xor
push
xchg
mov
cld
jno
pop
filds
bound
mov
or
scas
iret
in
out
sbb
test
mov
stos
sbb
mov
pushf
push
sbb
popa
xor
mov
add
lock
lret
int
pop
sub
inc
inc
xor
loop
jnp
out
cwtl
xchg
sbb
push
bound
dec
iret
xor
dec
imul
mov
movsl
sub
and
mov
fmull
loop
mov
test
js
inc
xchg
stos
mov
pop
jge
out
sub
inc
jnp
pop
lret
daa
and
mov
sbb
daa
jb
add
xor
cmp
mov
scas
movl
add
mov
pop
dec
and
fwait
test
in
testb
dec
inc
xor
in
sub
aad
lret
xlat
js
xor
sbb
paddusw
adc
pop
test
cmpsl
roll
adc
xchg
pop
add
lea
xor
cmp
stc
mov
test
mov
pop
or
or
mov
dec
test
std
xchg
sbb
leave
enter
daa
test
jnp
shll
xor
dec
ffree
xor
cmpsl
adc
imul
in
and
hlt
pop
call
repnz
fwait
insl
cmp
jo
jno
push
push
jno,pn
xchg
push
fprem1
xchg
inc
push
das
daa
shlb
je
sarb
mov
xor
and
call
out
mov
sub
mov
xchg
ja
out
ja
ljmp
or
call
outsl
and
std
loopne
sbb
mov
jnp
xchg
cmpsb
push
mov
mov
cmp
pop
mov
scas
enter
push
dec
and
rcrl
jns
cltd
je
fs
negl
shrl
in
jl
adc
push
jne
cmp
ret
rorb
enter
clc
enter
outsb
stos
jmp
lea
into
lret
jl
ss
and
xor
je
aas
push
enter
outsl
aam
imull
adc
or
sbb
inc
inc
call
mov
push
fldt
movsl
int
aaa
push
icebp
jnp
sbb
jnp
adc
enter
fiaddl
ja
mov
jnp
shlb
gs
lods
shlb
loop
les
cltd
cmp
aad
gs
and
or
or
call
mov
jno
jp
pushf
hlt
jnp
je
jnp
push
in
cltd
jae
dec
and
arpl
ljmp
aas
cmp
sub
lock
dec
cld
fs
sbb
int
aad
mov
mov
dec
icebp
mov
pushf
outsb
mov
xor
aam
pop
dec
cmp
cmp
cmp
cmpsl
inc
in
xchg
stos
pop
mov
jmp
repz
xlat
lock
shll
fsubr
ds
loopne
jbe
cmp
pusha
xlat
pop
call
inc
fiaddl
push
xchg
fsts
pusha
and
fnstenv
sahf
cmp
dec
push
xor
fisubrs
xchg
ja
xor
scas
mov
cltd
scas
mov
arpl
sti
hlt
shll
sbb
sbb
push
shll
mov
ja
jbe
je
sbb
outsl
data16
je
icebp
negl
cld
adc
mov
into
loope
xchg
jmp
rclb
add
xchg
mov
mov
xchg
insb
ja
dec
jb
add
shrb
in
sbb
and
jns
cmpsl
stos
repnz
decb
push
stc
test
cld
xchg
sti
rcrb
sub
adc
sub
rcll
mov
adc
out
hlt
mov
mov
divl
mov
push
test
scas
push
imul
inc
pop
aas
ljmp
mov
push
test
shr
pop
adc
popa
xchg
je
ret
cld
pop
mov
insb
in
inc
jp
test
pop
sbb
xlat
push
pop
ss
mov
outsb
loop
xor
movsl
subb
int
cmc
imull
sub
das
out
sbb
out
outsb
mov
in
mov
dec
negl
ss
pop
or
in
loopne
cmp
data16
scas
xor
jb
aaa
or
dec
and
inc
push
or
push
pop
push
dec
and
decl
pop
lds
and
mov
cmp
divb
scas
push
jns
add
inc
pop
stos
add
add
testl
mov
jbe
lret
in
fldt
or
pop
xchg
repnz
or
sbb
mov
std
or
or
mov
xor
jae
and
push
ret
scas
adc
jo
add
inc
jns
pop
test
cmc
xchg
mov
rorl
sub
mov
addr16
rcl
stc
inc
pop
icebp
js
cld
jns
stos
mov
mov
std
jne
pop
mov
fistl
mov
jecxz
sahf
call
nop
mov
dec
test
mov
adc
inc
gs
mov
xchg
inc
dec
sub
daa
push
jo
pop
lret
mov
jp
jge
inc
xchg
sbb
fistps
dec
mov
movsb
inc
ret
icebp
or
bound
repnz
pop
adc
insb
or
sub
lods
cld
sub
mov
mov
xchg
hlt
inc
loopne,pn
xchg
xchg
cwtl
and
jecxz
repnz
push
lea
add
pop
stc
mov
xor
test
adc
int3
or
xor
test
cmp
popa
xchg
sarl
das
push
xor
es
shrb
cmp
cmp
inc
or
mov
mov
push
or
push
lret
xchg
fdivrl
jno
popf
mov
insl
mov
mov
or
repz
pop
mov
lret
dec
push
ret
xbegin
je
pop
mov
cld
add
xor
jg
pop
in
mov
repz
arpl
das
mov
sub
dec
mov
icebp
in
inc
gs
shrl
inc
out
repnz
mov
jb,pt
insl
mov
sub
push
cmc
repnz
popa
dec
pop
cld
dec
iret
push
outsb
jns
push
adc
add
dec
xorl
into
xchg
sub
lret
out
push
aas
sbb
xchg
mov
call
push
mov
xlat
loope
and
int3
test
test
fisubs
popa
lcall
js
les
cmc
jge
dec
mov
and
xchg
adc
out
sub
ficompl
or
bound
cmp
add
mov
ret
in
aam
cmp
mov
xor
pop
sbb
les
call
and
cmp
mov
add
dec
xchg
addr16
mov
push
addr16
fdiv
scas
pop
leave
xchg
pushaw
sub
sbb
stos
push
adc
push
aam
jne
inc
popf
int
addr16
jg
push
xchg
leave
pop
add
mov
pop
test
out
inc
sbb
leave
fmull
dec
pop
div
lcall
dec
fsubr
sbb
lods
xor
or
movsb
cs
lahf
lds
mov
enter
sar
push
push
mov
sub
add
out
xor
cld
mov
in
sbb
lahf
mov
cmp
or
dec
leave
stos
sub
mov
push
data16
setl
sbb
dec
iret
roll
adc
mov
adc
lahf
add
sbb
inc
push
and
and
insl
jecxz
pop
incl
ret
inc
adc
repz
jnp
rcll
push
cmp
jb
outsl
pop
dec
fwait
mov
jmp
adc
sbb
mov
lea
fidivs
jne
and
jb
aam
jg
xlat
jnp
pop
and
xor
inc
out
ret
inc
ljmp
nop
movsl
out
sub
mov
mov
lds
cltd
mov
inc
ret
lret
ss
pop
cmp
pop
sbb
cli
enter
cmc
fistl
xor
add
popa
dec
add
pop
mov
arpl
xchg
mov
cltd
popf
sbb
jmp
test
xchg
push
sub
es
mov
push
ss
leave
dec
fcmovnbe
cld
data16
jl
xor
std
ljmp
push
push
pop
inc
cltd
leave
adc
jns
jecxz
sub
dec
insl
jl
fwait
js
cwtl
pop
cs
andl
sub
flds
loop
mov
cltd
and
fldl
adc
out
subb
xor
popf
xchg
dec
sar
rcr
mov
jo
inc
std
test
movsb
pushf
pop
adc
dec
jl
icebp
inc
outsb
mov
pop
jp
in
push
mov
push
mov
jo
jnp
fistpl
aad
mov
jge
sar
cmp
mov
aad
bound
sub
push
or
inc
xchg
jne
inc
push
push
sbb
push
insl
gs
cmp
cmpsb
andl
inc
pusha
and
dec
out
in
popl
cmp
fs
mov
repz
sbb
int3
dec
daa
addr16
push
ss
call
orl
jge
mov
rorb
mov
inc
xor
out
inc
and
xlat
stos
mov
movsb
mov
test
dec
ja
es
pop
dec
dec
sbb
cmp
push
mov
test
sbb
mov
push
popa
lods
sbb
inc
scas
xchg
xchg
imul
cmc
mov
adc
adc
je
imul
xchg
or
inc
mov
cmp
bound
popf
and
jg
pop
push
repnz
mov
sahf
or
push
add
dec
dec
mov
add
outsl
push
inc
imul
loopne
sti
ret
fwait
es
lock
xchg
inc
into
pop
cmpsl
fsts
test
or
sub
nop
mov
mov
sbb
push
roll
retw
aad
out
adc
cmp
leave
dec
dec
ret
mov
call
fsin
push
mov
testb
adc
lcall
mov
fwait
pop
aam
aad
bound
xlat
lds
mov
cli
pop
mov
inc
mov
mov
inc
ficoms
in
loope
in
fwait
sti
mov
inc
mov
mov
mov
or
dec
xchg
or
jl
subb
mov
stc
mov
mov
pusha
mov
inc
leave
or
subl
aad
mov
punpckhwd
push
jl
mov
sub
lret
push
jg
clc
or
sarl
outsb
add
addr16
dec
in
mov
jb
punpckldq
loope
ret
inc
call
sti
mov
js
pusha
add
test
scas
pop
mov
ljmp
enter
sbb
enter
mov
or
in
les
loopne
push
cwtl
bound
lock
movsl
jg
fldl
jge
and
test
mov
sub
lret
sbb
xchg
xlat
pop
ljmp
jge
dec
pop
mov
les
popa
or
negb
sub
push
xor
push
mov
cltd
xor
test
les
jle
dec
lret
dec
test
inc
cmp
sub
xchg
bound
xchg
pop
addr16
xchg
jmp
lods
pop
mov
mov
mov
xchg
fwait
cmp
pop
sub
adc
fisubl
jecxz
sub
cmp
outsl
adcb
inc
cmp
lods
push
pop
ret
and
push
fwait
rolb
and
sbb
mov
out
test
mov
mov
pop
fwait
adc
cld
cmpsl
mov
out
xchg
loopne
iret
lret
inc
sub
push
mov
js
cld
push
inc
fcmove
sub
cld
sub
mov
mov
aaa
dec
sbb
or
push
adc
push
inc
xor
fsubs
lcall
mov
std
pop
mov
dec
shrl
cmp
insl
xor
mov
imul
fiadds
iret
loope
sub
outsl
pop
jmp
push
lods
iret
push
add
imul
push
xchg
sbb
into
loopne
pop
insb
in
push
pop
mov
adc
lret
xchg
movsb
jmp
fisttpll
adc
call
sbb
les
popa
xor
push
pop
ret
inc
push
cmpl
cmp
xchg
addr16
dec
inc
insl
xchg
popl
cmp
loope
mov
sub
mov
add
pop
fxch
sbb
addr16
sbb
int
ds
lods
les
pop
add
cld
mov
mov
mov
lds
daa
and
sahf
repz
xor
cmc
mov
inc
adc
xchg
mov
iret
xor
mov
inc
sub
aas
mov
in
xchg
insb
fistpl
iret
iret
sti
hlt
mov
pop
sbb
mov
xor
inc
out
push
adc
ss
jmp
test
mov
insl
mov
mov
je
xchg
call
out
push
test
jmp
int
mov
dec
das
test
adc
sbb
adc
stos
push
repnz
sar
dec
cli
notb
mov
dec
mov
test
pusha
mov
mov
dec
mov
fmul
rcrb
jg
mov
mov
out
call
jge
aam
pcmpeqd
dec
mov
imul
xchg
mov
test
ja
mov
cmp
movsb
inc
loopne
push
sbb
xchg
dec
sbb
push
imul
mov
fwait
aas
jg
xchg
mov
push
rolb
stos
ja
adc
jmp
mov
pop
sti
or
test
xchg
faddl
fwait
xor
imul
pushf
dec
rorb
mov
gs
repz
inc
fucom
jo
xlat
jne
aaa
jnp
test
cmp
dec
lea
push
mov
inc
lock
mov
ljmp
sbb
xlat
sub
lods
xchg
out
or
shrl
mov
or
mov
jnp
adc
imul
push
and
mov
das
in
cmp
mov
mov
sub
cwtl
mov
std
dec
push
jb
sub
xchg
clc
or
push
outsl
pop
mov
aas
or
rcr
stos
mov
and
imul
daa
pop
movsl
bound
insb
test
outsl
dec
dec
sub
das
dec
cmc
rorl
stc
stos
push
mov
or
clc
dec
cld
sub
test
popf
mov
insb
adc
or
pop
lock
mov
jns
push
pop
jnp
js
or
inc
lods
lret
cmp
inc
dec
movsl
sar
mov
addr16
xchg
out
inc
pop
into
jb
cmpsl
sub
in
cmp
or
jns
bound
inc
js
popa
in
and
dec
ljmp
mov
sub
xchg
or
stos
dec
cmpsl
addr16
leave
loope
mov
test
add
test
addl
test
push
call
dec
and
or
ret
jnp
xchg
mov
sarb
lret
lock
addr16
fidivl
add
fistl
jnp
into
dec
popf
icebp
sub
mov
or
pop
shl
stos
ret
std
movsb
shll
pop
mov
iret
push
add
cld
jnp
jl
xchg
and
push
fsubrl
out
mov
int
stos
insl
add
xor
or
fbld
dec
les
add
sub
cwtl
sbb
call
lods
imul
jle
cmp
lds
push
cmp
xchg
and
mov
in
or
ja
gs
stos
push
adc
sbbl
inc
xchg
xor
fldcw
test
repz
xlat
lret
xlat
xor
loop
inc
outsb
push
jb
jmp
int3
addr16
xchg
inc
mov
push
arpl
bound
dec
mov
jmp
pushf
mov
xor
les
xor
dec
lret
dec
fmuls
push
mov
adc
aad
lcall
leave
stos
xchg
adc
outsl
insb
cmp
or
orb
cmpsb
jl
xor
adc
es
sub
rcl
jp
sub
mov
cmp
pop
push
inc
adc
jl
cmc
mov
es
ljmp
mov
add
jmp
mov
or
xorl
mov
aam
ja
lcall
sub
inc
xchg
sbb
cmp
mov
adc
roll
xchg
mov
test
data16
mov
cld
sarb
cmp
daa
mov
loope
jge
and
mov
fsubr
sub
movsb
stos
mov
dec
sbb
inc
sub
orb
jmp
ja
jmp
ret
jge
mov
push
icebp
jl
inc
sbb
sub
or
lcall
push
lods
push
jno
jne
aam
into
push
and
or
insl
addr16
add
and
add
adc
xchg
mov
xchg
aam
dec
xor
xchg
xorb
cwtl
sub
sbbl
jp
out
push
add
push
mov
mov
add
imul
jae
insb
gs
outsb
jo
je
add
jb
jbe
je
push
jb
imul
imul
push
gs
imul
bound
push
arpl
add
je
imul
outsl
inc
dec
push
dec
add
add
insb
imul
outsb
fs
add
add
imul
insb
gs
outsb
jo
je
add
outsb
dec
outsl
bound
push
arpl
sub
inc
insb
jne
push
inc
jne
data16
add
push
popa
imul
je
jo
gs
bound
arpl
js
dec
add
je
jne
jb
outsb
je
push
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
push
add
inc
jne
jb
outsb
je
jb
arpl
jae
lds
push
imul
insb
insb
outsl
arpl
roll
push
outsb
fs
outsl
je
data16
gs
popa
addr16
add
ja
je
je
inc
add
add
je
insb
popa
jae
push
outsl
jb
add
add
jb
outsb
push
outsl
inc
insb
imul
inc
jb
popa
je
inc
imul
imul
jb
insl
inc
add
add
inc
imul
outsl
insl
bound
outsl
js
add
jne
je
imul
arpl
add
je
outsb
jne
and
inc
outsl
jo
dec
arpl
add
outsl
insb
insb
inc
inc
add
popa
insb
imul
add
mov
add
mov
add
mov
add
add
arpl
add
mov
add
scas
mov
add
mov
add
mov
add
mov
add
add
sbb
add
cmp
mov
add
jp
add
nop
mov
add
lods
mov
add
ret
mov
