mov
xor
cmp
je
inc
inc
cmpb
jne
ret
push
mov
push
push
andl
push
call
lea
mov
test
jbe
mov
mov
mov
and
rol
movzwl
dec
lea
mov
jne
testl
je
push
mov
and
or
add
mov
pop
mov
leave
ret
push
push
mov
mov
push
pop
movzbl
xor
mov
inc
and
rol
imul
inc
mov
add
mov
mov
not
mov
add
not
shl
imul
add
imul
dec
decl
mov
jne
pop
mov
pop
ret
push
push
mov
mov
mov
mov
mov
mov
mov
cmpb
jne
cmpb
jne
pop
pop
ret
push
mov
mov
mov
sub
add
push
mov
test
jne
xor
jmp
mov
add
mov
push
mov
mov
mov
push
mov
add
add
add
mov
mov
test
jns
and
sub
cmp
jae
mov
jmp
xor
mov
cmp
jae
jmp
mov
mov
mov
mov
add
mov
call
cmp
je
incl
mov
cmp
jb
mov
mov
mov
cmp
je
movzwl
mov
add
test
je
mov
add
cmp
jae
cmp
jb
xor
cmpb
je
inc
cmpb
jne
push
lea
push
push
mov
call
add
lea
push
mov
movb
call
mov
test
jne
xor
jmp
lea
call
push
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
push
mov
movzwl
movzwl
andl
add
je
push
mov
push
lea
testl
je
mov
mov
and
add
push
push
pushl
call
jmp
mov
mov
add
add
movzwl
movzwl
incl
add
add
cmp
jb
pop
pop
pop
pop
ret
push
mov
mov
add
mov
sub
test
je
andl
push
lea
lea
cmpl
mov
je
push
mov
mov
add
push
mov
call
mov
andl
add
cmpl
mov
je
mov
mov
test
jns
and
jmp
lea
push
pushl
mov
call
incl
mov
mov
lea
cmpl
jne
mov
incl
mov
mov
imul
lea
lea
cmpl
jne
pop
pop
xor
inc
leave
ret
mov
add
mov
test
je
add
add
add
add
add
push
mov
push
lea
xor
cmp
jbe
add
inc
cmp
jb
mov
add
xor
cmp
jbe
add
inc
cmp
jb
pop
pop
xor
inc
ret
push
xor
cmp
jbe
push
lea
mov
add
mov
mov
add
inc
add
cmp
jb
pop
pop
ret
push
mov
push
mov
mov
mov
mov
push
push
mov
add
push
lea
push
lea
push
mov
call
add
push
push
push
call
mov
mov
neg
add
add
sub
add
mov
imul
add
mov
imul
add
mov
mov
mov
add
and
add
movl
pushl
lea
push
push
mov
call
add
mov
xor
add
add
decl
jne
addl
pop
pop
leave
ret
push
mov
cmpl
push
push
jb
mov
mov
mov
pushl
popl
sub
lods
xor
stos
mov
sub
sub
rorl
sub
dec
jne
pop
pop
pop
ret
push
mov
sub
andl
lea
push
movb
mov
mov
mov
mov
rep
mov
pop
push
push
rdtsc
mov
mov
test
jne
mov
jmp
mov
not
ror
not
movzbl
lea
cmpb
jne
push
pushl
movb
pushl
call
pushl
mov
call
push
pushl
mov
pushl
call
mov
mov
cmp
jne
movzbl
push
pushl
pushl
call
pushl
pushl
pushl
call
xor
pop
inc
pop
leave
ret
push
push
push
mov
push
mov
call
push
mov
call
push
mov
call
push
call
add
xor
mov
push
mov
call
mov
push
mov
call
push
call
mov
call
push
mov
call
push
call
pop
pop
pop
ret
push
lea
sub
push
push
push
call
mov
xor
movb
movb
mov
cmp
je
mov
jmp
push
mov
call
lea
push
mov
push
mov
call
push
lea
push
push
mov
mov
call
push
lea
push
push
call
xor
add
mov
lea
push
mov
push
mov
call
lea
push
mov
call
lea
push
lea
push
mov
call
pop
pop
cmp
je
cmpl
jne
mov
mov
call
cmp
je
call
cmp
jne
mov
mov
mov
push
sub
mov
call
push
call
lea
push
push
push
push
call
push
push
push
push
mov
call
lea
mov
call
pushl
mov
pushl
pushl
push
call
mov
sub
mov
mov
add
push
mov
and
add
push
add
call
mov
mov
mov
mov
add
mov
add
movzwl
lea
add
mov
movzwl
lea
mov
mov
sub
xor
mov
mov
mov
cmp
je
mov
cmp
je
add
mov
mov
mov
jmp
mov
mov
mov
cmp
je
add
lea
mov
mov
mov
mov
add
push
push
push
call
or
sub
mov
mov
mov
sub
push
push
call
call
test
je
cmpl
je
mov
mov
call
movzwl
xor
xor
mov
cmp
jae
mov
mov
addl
push
pop
rep
mov
mov
mov
add
add
mov
mov
movzwl
inc
cmp
jb
mov
mov
mov
add
mov
mov
pushl
mov
pushl
mov
mov
push
pushl
call
pop
pop
pop
add
leave
ret
push
mov
sub
push
push
push
push
xor
lea
push
push
mov
call
lea
push
push
mov
call
push
lea
push
lea
push
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
add
lea
push
mov
mov
call
push
lea
push
lea
push
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
add
lea
push
mov
call
push
lea
push
lea
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
add
lea
push
call
mov
push
mov
call
push
push
push
push
push
push
push
mov
push
mov
call
mov
cmp
jne
push
call
push
pushl
push
pushl
call
push
push
lea
push
push
mov
call
jmp
cmp
je
cmp
jne
testl
je
cmp
je
push
push
push
push
push
push
push
push
call
push
push
push
push
call
push
mov
call
pop
pop
xor
pop
leave
ret
push
test
add
add
add
push
sbb
add
pop
jge
jl
loop
xor
sub
cmc
cmpsb
scas
cli
movsb
dec
rolb
int
ret
sbb
call
pop
fwait
jle
aam
imul
jb
jecxz
sub
adc
push
lret
cmpl
aaa
andl
xchg
aaa
jb
addr16
cwtl
ret
xchg
popa
dec
push
xor
in
sub
xchg
and
loopne
xor
jb
imul
dec
and
inc
cmp
loopne
push
mov
fmulp
pop
jp
mov
and
sarb
cld
xchg
imul
test
dec
stos
jl
test
xor
jp
and
and
int
xchg
add
stos
xor
cmp
mov
dec
pop
sub
mov
mov
orb
fimuls
ds
ret
push
int3
adc
in
jg
mov
dec
push
je
xor
fcom
xchg
jge
repnz
bound
cmpsl
mov
out
fidivl
inc
into
mov
subb
add
xchg
enter
cmp
or
inc
pop
into
add
mov
wbinvd
or
add
fsubrs
pop
sbb
int3
mov
mov
and
addr16
jo
iret
or
fstl
ret
jmp
jmp
sub
dec
pop
popf
scas
add
jae
outsl
aas
or
scas
jecxz
jmp
mov
push
adc
sub
jmp
stos
hlt
xchg
dec
movl
fisttps
imul
fdivs
add
subb
outsl
cltd
inc
ds
xchg
xchg
mov
or
insl
int3
rclb
adc
xchg
lahf
enter
add
insl
cld
mov
add
icebp
xchg
pusha
xchg
pop
mov
push
or
mov
pop
fldenv
push
imul
lret
fstps
pop
sub
sub
mov
je
shll
fsts
repnz
inc
divb
add
ja
sbb
ljmp
fidivl
sbb
popa
push
sarb
je
xchg
jmp
pop
push
dec
xchg
lahf
test
leave
xor
xor
xchg
adc
adc
push
pop
jo
xor
lods
sub
mov
mov
mov
and
shll
fisttpl
in
xor
mov
lock
mov
ds
arpl
or
pushf
push
push
xor
xor
daa
pop
gs
xchg
mov
sbb
xlat
sbb
es
ja
popf
enter
mov
cs
sub
cmp
xchg
mov
orb
and
jmp
nop
pop
and
sbb
fisubs
addb
mov
loope
out
push
movntps
ljmp
insl
ret
sbb
sub
insl
in
xchg
cs
sahf
in
lret
jno
push
xchg
aaa
adc
xor
jl
sub
sarl
sbb
fildll
xor
and
vshufpd
rol
xchg
push
dec
inc
outsb
movd
xchg
addb
xor
aad
mov
xor
or
sub
sub
mov
test
test
mov
jbe
mov
push
repnz
and
xchg
adc
push
cld
xor
xor
inc
imul
mov
xor
adc
clc
fstp
loope
fiaddl
outsl
popl
sub
mov
imulb
xor
adc
clc
jecxz
mov
sub
nop
loope
aaa
mov
push
divb
sbb
mov
daa
mov
jmp
popa
out
lret
mov
sub
lods
popf
adc
addl
orb
outsl
cld
in
out
jg
fcmovnu
test
mov
jb
int
cmc
sti
pushf
lcall
sub
push
pop
call
fsubrp
sbb
loop
pop
push
mov
sbb
sbb
popa
push
mov
push
mov
iret
xor
inc
or
xor
aad
xor
int
icebp
sub
sbb
sbb
lock
int
mov
test
inc
adc
mov
lds
in
mov
xchg
rorb
mov
mov
popf
push
push
repnz
es
mov
xor
add
scas
jne
rolb
mov
cs
out
push
leave
xlat
mov
mov
lods
int3
inc
jp
lcall
and
mov
ret
fmulp
mov
js
popa
stos
sbb
jae
jne
aaa
jge
fwait
clc
jo
xor
popa
push
cmp
lret
rorl
pop
mov
mov
fsub
dec
or
sbb
mov
fdivl
pop
fdivs
dec
std
inc
sbb
or
mov
lret
jg
sbb
sbb
xor
fnstsw
mov
loope
sbb
xor
outsl
sbb
call
inc
int3
insb
jge
mov
jmp
xor
dec
scas
pushf
mov
icebp
mov
sub
cmpsb
repnz
repz
stos
and
xor
negb
fwait
sbb
mov
stos
mov
jns
fidivrl
into
pop
imul
and
xor
pusha
jae
pop
aam
loope
stos
scas
or
jae
fstpt
push
test
in
stos
dec
cs
fistps
xor
mov
lods
mov
testb
push
sbbl
xchg
mov
xor
jle
push
adc
mov
inc
xchg
dec
mov
mov
iret
frstor
mov
movsl
pop
add
cmp
scas
cmp
outsb
pushf
cmpsb
jbe
jmp
movsl
sbb
femms
mov
es
call
daa
cmc
inc
xchg
mov
mov
cld
jge
out
es
and
mov
xchg
lret
testl
mov
inc
loope
xchg
xchg
movsb
mov
mov
mov
add
pop
adc
adc
dec
fsub
jg
and
xchg
and
sbb
incb
popa
mov
cmpb
pop
in
popa
cmp
mov
xor
leave
xor
test
mov
cmpsl
adc
add
adc
xor
out
out
inc
adc
addl
mov
ret
sub
pop
xchg
sbb
mov
fsubl
push
add
dec
mov
jae
dec
mov
lock
out
iret
inc
pushf
fcmovb
cmc
mov
stos
aam
pop
jo
jbe
or
cmp
subl
push
cmp
sbb
scas
fdivrs
enter
in
subb
scas
pop
sbbl
sbb
scas
les
or
test
ret
cli
adc
aaa
pop
cmp
call
lea
aaa
mov
xchg
push
out
jle
sub
xchg
cmp
imul
loope
jno
das
jg
ret
pusha
sbb
sub
loopne
adc
adc
sbb
mov
gs
fdivl
mov
pushf
mov
fstpt
addb
aam
adc
push
inc
jb
stos
inc
jne
test
mov
mov
in
mov
mov
dec
mov
push
mov
or
aad
push
pushf
sub
or
lret
pop
pop
jo
roll
jl
loope
rcrl
test
pop
arpl
mov
push
and
popf
xor
dec
or
xchg
pusha
fisubl
inc
pop
cmpsl
xchg
fwait
sahf
cld
jns
pop
jo
or
imul
cmp
fldl
or
dec
es
into
xchg
jbe
cmc
xor
loop
cltd
les
adc
lods
fisttpl
push
and
push
adc
cld
fsubl
and
lahf
mov
mov
lods
mov
nop
cli
mov
fadd
das
lds
pushf
mov
jmp
lcall
rol
insl
jecxz
stos
jg
add
or
push
aam
addl
loop
and
loop
or
rcrb
jns
push
daa
xlat
sub
cmp
xchg
xchg
xchg
and
inc
jnp
pusha
les
cmp
inc
cmp
shll
push
and
sbb
mov
cmc
mov
push
adc
aad
jnp
xlat
lds
adc
or
xor
cmp
lea
push
enter
fxtract
inc
movsb
in
fs
and
adc
or
xor
xlat
cmp
mov
jns
sbbl
cmp
cmp
mov
sbb
fcmove
jno
add
sbb
cld
dec
sbb
cltd
inc
push
mov
mov
and
testl
xchg
inc
mov
sbb
popf
adc
aam
mov
jge
push
in
cmp
jo
or
and
add
cmp
mov
es
sub
or
repnz
mov
daa
sub
movsl
pop
imul
leave
fs
inc
mov
and
jmp
sbb
or
das
push
cmc
test
stc
sbb
popa
sub
es
mov
jb
adc
lods
in
cwtl
and
push
jl
push
mov
jg
ljmp
subl
jo
pop
in
fidivl
pop
mov
pop
loop
in
popf
dec
xorb
mov
pusha
cmp
scas
jle
jo
incl
pop
push
pop
pop
xchg
push
mov
mov
dec
out
push
inc
stos
les
adc
jb
sbb
dec
sbb
outsb
dec
lahf
shlb
or
outsb
cmp
cmp
lret
cltd
jb
adc
sub
test
sbb
push
les
mov
mov
mov
add
int
arpl
sub
in
aaa
cli
add
push
add
sti
out
js
xor
sbb
ficompl
out
pop
loop
ss
fldcw
daa
jmp
push
xchg
ficompl
ja
aad
ret
push
scas
loop
test
or
ds
sub
pop
push
pop
scas
mov
dec
xchg
js
stc
pop
loop
arpl
add
fwait
xchg
iret
jns
hlt
cmp
xchg
inc
dec
std
lods
mov
mov
push
ja
jge
xchg
test
mov
stc
scas
loope
fisubrs
gs
or
hlt
pushf
pop
push
or
jge
scas
outsb
push
and
lcall
mov
scas
pop
stc
shll
adc
testb
inc
repnz
sbb
aad
xor
jnp
in
ss
mov
mov
inc
and
mov
int
xchg
cld
js
cmp
lret
xor
mov
xor
pop
shll
shrl
out
in
aad
jmp
sti
addr16
test
lea
int
jnp
jle
push
xlat
xchg
leave
bound
aas
shlb
cmp
mov
sub
fisubrs
call
mov
mov
inc
test
mov
fsubs
mov
xor
jb
sub
xchg
sub
adcb
push
add
movntq
out
cmp
and
mov
ss
adc
cld
or
mov
jnp
incb
mov
fwait
inc
add
adc
xor
mov
mov
shl
test
decl
sub
adc
jnp
lods
push
mov
push
test
iret
cmpsl
cmp
outsl
cwtl
ljmp
je
dec
dec
fsubrs
sbb
xor
xchg
inc
in
lcall
sub
push
rorb
popf
and
sub
mov
adc
pop
mov
mov
adc
push
jle
lds
mov
or
xchg
popf
jns
stos
pop
xlat
cmp
shlb
or
ret
mov
daa
adc
xlat
dec
popl
test
daa
dec
inc
sbbb
adc
pop
mov
sub
inc
sbb
mov
dec
mov
jge
add
mov
mov
repnz
fsubs
dec
js
repz
lret
lds
popf
outsb
jno
loopne
stos
fdivrp
jne
push
pop
daa
sbb
in
popa
sub
xor
sbb
mov
and
insb
push
inc
int3
sub
lds
xchg
push
or
jae
loop
ret
sbb
lods
push
xor
das
imul
addr16
lock
adcb
out
cmp
xor
mov
test
ja
addb
adc
bound
add
aaa
xchg
int
cli
push
in
mov
add
dec
mov
pop
ljmp
pop
cmp
arpl
adc
sar
out
inc
push
shl
mov
lcall
pushf
stos
ja
andb
push
insl
jbe
dec
daa
and
enter
push
cli
xchg
pushf
pop
or
mov
add
xchg
scas
adc
scas
rcr
mov
rorl
sbb
arpl
mov
dec
arpl
mov
mov
mov
stos
push
and
mov
lret
and
lcall
ja
aaa
popa
pop
mov
mov
or
xor
xchg
pusha
pop
ret
xor
and
ss
xorb
or
icebp
in
jmp
sub
frstor
enter
cmpsb
pop
adc
and
out
push
or
roll
cs
or
jae
lods
cs
mov
mov
inc
ret
xchg
pop
cmp
mov
add
sbb
loopne
sbb
push
insl
sub
jl
out
pop
icebp
shlb
stos
xchg
icebp
xchg
sub
les
pushf
pusha
jb
popf
dec
mov
ret
xor
xor
rcll
pusha
fildll
jl
jl
pop
fldl
out
imul
adc
pop
stos
enter
add
or
jnp
aad
pop
cmp
dec
in
or
jle
jo
pop
out
cmpsb
and
aam
xor
stos
dec
aad
popf
mov
mov
shrb
ljmp
lock
outsb
sub
or
fdivs
test
out
sbbb
push
std
add
lcall
pop
or
mov
outsl
or
scas
fs
ficompl
adc
xor
js
icebp
aad
popf
imul
sbb
rol
pop
popl
mov
xlat
pusha
inc
aas
test
cmp
ror
adc
sub
js
sti
adc
cmp
or
dec
mov
movsl
call
fcoml
daa
add
loopne
test
add
in
mov
fnstcw
mov
imul
mov
sub
jp
mov
and
or
jg
and
test
js
pop
aaa
fucomp
pop
pop
sbb
and
std
stos
jbe
test
mov
mov
ret
pop
movsl
lret
or
mov
lret
sbb
xchg
or
lea
nop
stc
in
movsb
imulb
je
xlat
xchg
or
into
or
push
or
mov
fidivl
clc
xchg
test
ds
mov
repnz
das
out
negl
jge
sub
addl
cmp
add
or
push
aaa
jo
inc
stos
cld
adc
xor
in
dec
push
sbb
inc
pusha
test
add
jbe
stc
loope
xchg
adc
mov
daa
std
mov
pusha
mov
xor
sub
adcb
mov
std
jbe
clc
xchg
inc
out
loop
mov
mov
push
call
mov
push
jno
inc
cmpsb
ja
adc
je
add
hlt
sub
sbb
cs
sti
enter
mov
pop
push
pop
rclb
int
mov
sub
xlat
mov
xchg
test
pop
jns
dec
cld
cli
xchg
mov
push
movsl
or
fwait
cmp
cmp
mov
negb
or
shlb
fstl
sbb
fnsave
sub
sbb
adc
mov
push
movsb
insb
scas
rol
shl
jle
mov
adc
jne,pt
mov
lods
jb
xor
pop
cmpsb
mov
js
ds
xchg
inc
mov
out
jne
dec
shrl
inc
and
xchg
xchg
adc
jmp
adc
push
cltd
rep
fcom
xor
ret
pop
imul
out
out
adc
cs
int3
cmp
push
pop
lea
jge
push
into
mov
sbb
pop
in
movsl
mov
jg
xchg
popf
xchg
inc
icebp
sbb
faddl
dec
loopne
imul
stos
je
out
mov
mov
cwtl
mov
je
in
or
xchg
subl
jg
jg
mov
mov
xor
lahf
push
mov
cmp
pop
cs
cmp
std
jbe
testl
fcomps
sbb
ja
out
cld
add
inc
cmp
inc
pop
or
mov
dec
ja
lea
cmp
outsb
push
xor
fiaddl
ret
cmp
ljmp
rorb
fidivs
lods
imul
aam
popf
fdivs
test
int
divl
insb
int3
loop
loope
adc
adc
push
mov
out
mov
movl
dec
cmp
mov
mov
mov
lods
hlt
dec
and
or
lret
js
out
mov
ljmp
xchg
mov
lods
and
cmpsl
ja
add
add
jnp
iret
mov
outsb
repnz
jmp
mov
rorl
add
xchg
jmp
mov
mov
cmp
pop
pop
sub
mov
push
inc
push
mov
movsb
dec
hlt
lret
out
jg
pusha
push
stos
sahf
pop
fisubrl
or
pusha
loop
pop
jo
push
cmp
rclb
pop
es
add
in
stos
xor
cltd
inc
jg
gs
cmp
std
adc
hlt
mov
subb
mov
push
add
jb
lret
mov
or
loop
jae
imul
xchg
dec
int
cmp
imul
mov
push
push
cmp
pop
pop
sbb
xchg
dec
mov
or
ljmp
shlb
inc
dec
int
lds
sub
push
test
mov
imull
aam
dec
in
adc
xchg
pop
dec
cmc
adc
xchg
pop
push
cmpl
mov
aaa
popa
ss
cmpl
mov
pusha
push
pusha
daa
rol
mov
gs
ss
dec
sarl
and
mov
jmp
repz
add
rcll
jbe
push
mov
rolb
xor
aaa
inc
push
cmp
fists
leave
and
roll
jmp
ret
mov
dec
sub
jle
push
mov
or
das
addr16
fstpt
push
ficoml
mov
sub
sbb
or
orl
push
out
cltd
stos
scas
cmp
repnz
mov
ljmp
fnsave
cmpsl
pop
add
scas
jecxz
outsl
cmp
ja
or
dec
in
negb
cmpsl
pcmpgtw
mov
pop
ret
or
sti
test
pop
sub
dec
inc
out
enter
xchg
and
frstor
sarb
push
decb
lods
pop
xchg
mov
gs
push
arpl
sahf
or
ror
or
inc
mov
and
loop
icebp
mov
mov
dec
sbb
push
jo
push
lret
xchg
loopne
loop
cltd
sub
arpl
mov
push
or
sub
leave
xchg
sbb
cmpsl
xchg
shrb
xchg
jns
sbb
push
rcrb
xor
mov
fnstsw
inc
insl
cli
cmp
dec
pop
in
and
xchg
fldenv
push
xchg
lods
cld
xor
xchg
push
or
mov
leave
test
fistpl
mov
jno
jnp
lods
call
inc
or
jmp
xchg
add
test
loope
mov
ret
imul
jns
test
stos
cs
es
jmp
jnp
test
lods
dec
andl
imul
pop
lods
xor
jae
dec
dec
mov
and
lret
test
loope
stc
xchg
aam
aaa
in
js
fwait
sub
and
rorb
sbb
push
xor
sub
mov
outsb
jl
mov
jb
push
sbb
std
dec
jecxz
mov
xor
cmp
jle
test
fwait
insb
sub
or
mov
mov
inc
add
xor
mov
cmp
repnz
mov
das
cmpsb
mov
mov
call
sarb
adc
fistpl
dec
xchg
or
cmc
arpl
out
push
ret
jmp
sbb
inc
ret
cld
push
in
lcall
imul
scas
jb
popf
dec
lahf
je
arpl
pop
sbb
jno
bswap
notb
int3
sub
sub
mov
lods
aaa
ja
rcr
pop
mov
movsl
enter
daa
ret
add
dec
leave
inc
sub
leave
xor
dec
outsl
arpl
push
pop
sarl
cld
push
mov
mov
or
fisttpll
mov
inc
and
data16
out
pop
jne
xor
gs
inc
and
add
push
movsb
jmp
int3
xor
mov
in
or
aas
mov
in
enter
out
xor
mov
xor
lret
inc
sbb
sub
xchg
mov
jmp
or
push
mov
jl
push
loop
xor
in
mov
add
ss
xlat
std
cmp
ds
jnp
xchg
jbe
and
lret
push
es
lcall
pusha
push
or
push
js
mov
orps
push
in
fdivrs
and
sbb
lock
inc
mov
xchg
loop
mov
arpl
jecxz
cmp
or
loope
insb
cmpsb
cmpl
in
gs
scas
sub
and
sbb
std
arpl
mov
loope
pop
fstps
mov
lret
xorl
adc
mov
jmp
push
scas
cmp
cli
and
adc
vmread
dec
mov
aas
test
adc
push
mov
mov
mov
imul
xor
inc
mov
test
pop
aas
mov
cmpsl
cmp
cmp
cmp
nop
repz
xchg
cld
cmpsb
popf
lds
dec
pop
ljmp
adc
bound
gs
or
lods
sahf
ljmp
enter
cmp
mov
jle
subl
addr16
loop
jno
cli
xchg
dec
pop
stc
rcl
add
adc
mov
sub
mov
cmp
test
lret
mov
adc
cmp
jbe
mov
push
pop
add
pop
xor
hlt
xchg
fstps
js
cmc
mov
pushf
jbe
xor
test
