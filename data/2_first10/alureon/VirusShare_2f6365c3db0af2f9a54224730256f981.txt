push
push
push
call
push
sub
mov
push
sub
mov
add
popl
lea
pop
add
ret
push
call
push
push
push
call
pop
push
push
call
add
sub
push
push
push
push
call
push
push
push
push
push
call
push
push
push
push
push
call
push
call
push
push
push
call
mov
mov
add
push
call
popa
push
push
push
outsl
pop
push
push
push
js
jbe
je
pop
imul
jb
pusha
outsl
push
jnp
bound
popa
pusha
jno
push
je
fs
push
jle
outsl
jne
pop
jbe
insl
push
jb
addr16
ja
push
push
imul
push
push
push
push
push
jp
jl
push
pop
imul
imul
jbe
jp
push
jbe
pop
push
pop
push
push
jp
push
push
pop
outsb
pop
data16
jae
jne
pop
pop
jo
push
bound
jbe
jns
add
push
call
add
mov
push
push
push
push
push
call
xor
push
push
push
call
add
push
lea
mov
add
xchg
push
push
push
call
push
call
mov
mov
push
push
push
call
add
push
mov
pop
mov
push
push
push
push
call
sub
jne
pop
pop
pop
pop
push
xor
pop
pop
xor
ret
mov
push
push
call
cmp
jne
push
push
call
pop
push
push
push
push
call
pop
mov
pop
mov
push
push
push
call
pop
add
push
mov
push
push
push
call
push
push
and
pop
push
push
push
mov
push
push
push
call
mov
push
push
push
call
add
push
call
jl
jge
pop
outsb
pop
insl
jg
gs
js
pop
popa
bound
jbe
jne
data16
gs
jg
jg
jnp
outsb
js
jg
push
popa
pop
arpl
push
jnp
ja
push
push
jbe
jle
pop
popa
pop
jb
push
je
fs
jl
push
push
jg
pop
jp
imul
fs
arpl
jne
push
bound
outsl
jo
addr16
bound
push
arpl
push
push
jge
jge
pop
fs
jb
addr16
pop
push
je
pop
push
jnp
jne
jge
push
jo
jle
push
jl
jg
jae
push
ja
push
push
jno
push
imul
push
ja
gs
jae
push
pop
imul
push
jo
outsl
pop
jns
push
push
push
push
push
jae
gs
data16
push
bound
popa
jbe
jl
jb
je
pop
popa
pop
push
pop
push
jne
pop
jo
pop
popa
pop
data16
pop
arpl
jno
push
jg
push
pop
jbe
imul
fs
pop
pop
pop
push
add
inc
add
add
jl
outsb
jp
jbe
push
jae
push
outsb
arpl
gs
push
pop
push
js
insb
pusha
jae
fs
insl
jg
push
jb
push
pop
push
imul
push
push
jne
je
insb
jae
push
jge
push
pop
pop
pop
outsb
pop
jns
push
jno
jp
pop
bound
arpl
push
pop
je
push
push
imul
imul
fs
insb
jg
jl
push
jle
imul
jl
pop
jg
pop
push
insb
push
pop
push
jo
jo
bound
jg
data16
jge
imul
push
popa
pop
outsb
ja
popa
insb
arpl
pop
imul
outsl
jge
fs
imul
insl
pop
push
je
pop
push
push
je
jbe
pop
jb
jne
outsl
jnp
push
push
jge
pop
outsb
pop
push
bound
pop
push
outsb
jne
imul
imul
pop
push
insb
pop
push
jns
je
jne
pop
jb
gs
outsb
jg
pop
bound
gs
js
insb
jns
arpl
jae
outsl
jp
jbe
imul
jb
pop
popa
data16
jb
imul
pop
jl
addr16
fs
push
jnp
pop
jg
addr16
push
jns
pop
jno
imul
add
ss
decl
add
enter
add
mov
push
push
push
push
call
add
push
push
push
push
call
add
push
push
push
push
call
call
mov
mov
push
add
pop
add
mov
add
add
mov
push
lea
pop
add
add
push
and
pop
call
push
or
pop
pop
pop
mov
pop
leave
push
push
call
xor
push
xor
pop
inc
ret
push
push
or
mov
sub
pop
push
push
xor
pop
call
push
call
push
add
pop
jmp
mov
push
mov
mov
add
xchg
push
push
push
push
push
call
call
push
and
pop
push
call
push
push
sub
mov
add
pop
push
push
push
push
call
push
call
push
push
push
call
push
push
push
lea
mov
xor
pop
push
sub
mov
xor
xchg
push
call
jo
pop
pop
ja
imul
gs
jns
fs
jns
insl
pop
pusha
pop
pop
je
push
pop
jg
push
jbe
js
pop
pop
jns
jne
popa
imul
jno
push
bound
js
js
pusha
push
jge
push
push
ja
pop
push
je
data16
jb
je
jp
push
push
je
outsb
pop
outsb
pop
jne
jl
jg
push
bound
gs
addr16
js
pop
push
jnp
jb
jne
jns
push
jg
jne
outsb
jne
push
gs
outsl
imul
outsl
push
outsl
popa
pop
jbe
jo
fs
pop
push
gs
pop
jo
push
push
jb
je
jl
jns
jne
jge
pop
gs
outsb
outsl
push
addr16
outsb
push
push
arpl
pop
push
insl
data16
gs
push
push
je
pop
jl
pop
outsl
ja
pop
imul
gs
gs
pop
outsb
jp
jae
pop
fs
pop
pop
jle
jle
jl
push
arpl
gs
js
push
jae
pop
insb
insl
insl
bound
push
bound
pop
push
gs
jnp
arpl
data16
pop
imul
outsl
jae
insl
jns
arpl
push
jae
ja
jnp
push
pop
jnp
insl
jne
pop
addr16
pop
js
push
jg
push
pop
jns
outsb
jno
jnp
je
push
imul
pop
push
push
pop
push
jo
je
imul
push
jp
push
push
arpl
pop
outsb
ja
jg
pop
jne
push
push
add
add
add
push
clc
ljmp
call
mov
movl
push
push
push
call
movl
push
mov
pop
movl
push
push
push
mov
mov
sub
pop
push
call
push
xor
pop
mov
call
push
mov
pop
mov
push
mov
mov
add
xchg
push
call
push
push
push
push
call
call
push
push
lea
mov
xor
pop
push
push
call
push
call
push
push
push
push
push
call
call
push
push
and
mov
xor
pop
call
jae
push
push
jno
jp
push
insl
pusha
jnp
outsb
gs
pop
push
jns
push
pop
pop
pop
jb
ja
pop
pop
pop
je
push
ja
push
outsb
push
addr16
outsb
pop
insb
jno
jb
pop
outsb
popa
push
push
outsb
data16
push
push
pop
insb
jne
imul
jno
pop
pop
push
jno
pop
push
jo
jge
jl
pop
push
pop
pop
pop
pop
gs
ja
jo
jno
imul
push
imul
insb
pop
outsb
js
insl
outsb
pop
ja
jbe
gs
push
data16
push
push
popa
pop
jae
pop
push
push
insl
addr16
pop
push
insl
jbe
push
push
insl
push
pop
pusha
pop
push
je
js
pop
pop
gs
pop
jo
jnp
js
push
pop
jge
pop
push
imul
pop
pop
pop
pop
pop
arpl
insb
jns
pop
pop
jle
push
push
jns
pop
imul
jp
jl
pop
push
bound
jle
insb
pop
arpl
je
push
push
insb
jp
pop
jle
push
pop
outsb
arpl
jno
jns
outsb
data16
jge
jae
pop
addr16
js
bound
jg
popa
jle
push
push
push
call
push
push
add
pop
call
push
push
push
push
call
push
call
push
push
xor
mov
add
pop
push
push
mov
pop
call
pop
pop
pop
push
push
push
call
leave
xor
inc
ret
push
push
push
add
mov
add
pop
push
xor
pop
push
call
push
push
call
push
xor
dec
mov
push
or
pop
inc
inc
cmp
jbe
jmp
cmpw
jne
push
add
pop
pop
cmp
jbe
push
lea
pop
ret
push
or
pop
push
call
add
jmp
push
push
push
call
mov
push
push
add
mov
xor
pop
push
push
push
push
call
push
push
push
push
push
call
call
xor
sub
push
push
push
push
call
push
push
push
push
push
call
jmp
or
je
xor
pop
pushl
push
add
pop
pop
push
xor
pop
mov
mov
push
push
push
push
call
mov
push
push
mov
mov
sub
pop
push
call
push
push
push
call
cmpl
jne
add
push
push
sub
mov
xor
pop
push
call
push
sub
pop
push
push
push
add
mov
sub
pop
call
pop
pusha
je
jae
jge
ja
jp
push
push
jno
jle
pusha
jb
push
outsb
pop
push
jg
pop
pusha
bound
push
pop
jb
bound
jl
push
bound
jl
outsl
outsb
outsl
jle
js
pop
jle
jb
je
imul
outsl
outsl
pop
jg
push
push
jb
arpl
push
popa
pop
insl
pop
pop
jle
push
push
push
jg
jp
je
js
push
jo
arpl
pop
pop
pop
push
push
push
fs
pop
data16
jb
popa
insl
push
addr16
jno
pop
imul
jno
push
jne
jno
jae
jb
jp
addr16
pop
gs
pop
push
push
insb
popa
jne
jns
pop
jno
jo
pop
push
pop
outsl
jge
imul
push
ja
jns
push
push
jge
fs
push
push
push
jne
push
jbe
ja
bound
arpl
push
jl
push
popa
data16
pop
push
pop
jle
pop
pusha
push
jns
je
insl
popa
jp
pop
jbe
bound
jbe
push
jg
insb
pop
pop
jbe
addr16
jbe
push
gs
data16
push
jg
jbe
push
pop
arpl
pop
pop
jle
outsb
push
push
pop
push
pop
push
jg
pop
push
gs
jne
bound
imul
jns
insb
push
pop
pop
pop
jno
pop
outsb
jle
gs
jg
outsb
outsb
jbe
push
imul
pop
imul
pop
insb
jns
imul
push
addr16
push
jp
jp
pop
pop
push
bound
jge
imul
push
pop
push
jg
jns
pushw
push
push
jbe
jo
fs
pusha
outsl
pop
push
jne
pop
push
push
pusha
push
jo
pop
ja
jle
bound
push
push
call
push
push
call
mov
push
push
push
push
call
push
push
mov
add
push
or
pop
add
mov
push
push
push
call
xor
push
push
push
push
call
add
add
mov
xor
push
lea
pop
rep
push
mov
pop
pop
mov
add
add
mov
xor
push
and
pop
mov
xor
push
lea
pop
mov
xor
push
push
call
add
add
push
push
call
mov
push
or
mov
add
xchg
push
call
push
sub
pop
push
push
push
lea
mov
add
pop
push
push
push
call
push
push
call
push
push
push
push
call
mov
push
push
push
push
push
call
mov
add
add
push
push
push
push
call
mov
push
push
push
push
call
xor
push
push
push
call
add
push
mov
pop
add
push
or
pop
mov
push
push
push
call
xor
push
push
push
push
call
add
push
push
push
call
rep
mov
push
push
push
push
call
xor
push
push
push
push
call
add
push
push
call
or
je
push
xor
pop
mov
push
push
push
push
call
xor
push
push
push
call
add
mov
xor
push
sub
pop
add
add
push
add
pop
rep
mov
push
push
push
push
call
xor
push
push
push
push
call
add
push
push
call
or
je
mov
add
rep
pop
push
push
lea
mov
add
pop
push
lea
pop
pop
mov
jmp
push
mov
push
push
call
add
push
add
pop
push
push
push
push
push
push
call
push
push
push
add
pop
mov
mov
add
push
add
pop
mov
add
mov
add
push
push
call
xor
mov
xor
rol
xor
push
or
pop
inc
cmpb
jne
cmp
je
add
cmpl
jne
push
push
call
xor
push
lea
pop
pop
pop
pop
push
lea
pop
pop
pop
leave
ret
push
sub
pop
mov
push
push
push
call
add
mov
push
call
push
push
call
xor
pop
pop
push
mov
pop
pop
pop
pop
push
push
call
leave
ret
push
mov
push
push
call
cmpl
jne
mov
jmp
push
push
push
push
call
mov
and
pushl
push
or
pop
pop
sub
jmp
sub
pushl
push
and
pop
pop
sub
cmp
jne
mov
add
push
push
push
push
call
movzwl
sub
push
push
push
call
cmp
jne
leave
push
call
data16
jle
ja
jbe
pop
jne
jno
je
jns
jge
pop
popaw
outsl
push
fs
insb
push
push
jbe
jge
jo
pop
pop
push
bound
pop
jns
push
gs
pop
jo
insb
push
bound
imul
push
jnp
push
popa
pop
jge
push
pop
jb
pop
imul
ja
push
fs
jl
js
arpl
jns
insb
push
push
push
pop
insl
jnp
jno
push
jp
addr16
push
push
push
jbe
insb
jb
popa
jbe
push
jle
insb
insb
pusha
push
pop
push
bound
bound
jl
addr16
arpl
imul
push
push
pop
addr16
outsb
pusha
jl
pop
jp
jle
insl
jb
push
jae
push
pop
outsb
jge
imul
push
jnp
push
pop
pusha
pop
push
fs
jge
pop
push
jp
jbe
jbe
bound
push
pop
push
pusha
jle
ja
jns
jle
pop
arpl
push
imul
or
add
call
ret
push
mov
add
push
push
lea
pop
push
push
xor
pop
push
push
add
pop
push
push
add
pop
mov
push
push
add
pop
pop
push
push
call
mov
add
push
mov
pop
mov
push
push
push
call
add
pushl
push
xor
pop
popl
mov
add
xor
push
push
push
push
call
lea
push
lea
pop
mov
add
xor
rol
nop
push
xor
pop
nop
xor
push
add
pop
nop
nop
push
push
call
inc
push
xor
pop
nop
nop
cmpb
jne
nop
nop
push
xor
pop
cmp
je
nop
push
lea
pop
nop
inc
nop
push
push
call
nop
push
add
pop
cmp
jb
mov
add
push
lea
pop
movzwl
mov
add
push
push
push
push
call
mov
push
add
pop
add
pop
pop
pop
push
mov
pop
pop
push
push
push
call
leave
ret
inc
in
sbb
aaa
sbb
aaa
sbb
aaa
sbb
inc
aaa
sbb
jns
sbb
aaa
sbb
test
cmp
outsl
mov
xor
jp
daa
jmp
jo
jns
fld
decl
add
leave
jne
ljmp
xorb
call
aam
notl
int3
pop
sahf
das
lret
pop
data16
or
jne
jecxz
mov
inc
push
mov
add
xchg
cmpsl
sub
dec
add
mov
sbbb
ljmp
insl
sub
into
mov
jmp
or
mov
pop
div
pop
fadds
hlt
mov
movsb
lahf
jno
sqrtps
inc
xor
out
popf
sub
xchg
sahf
push
dec
iret
rcl
out
lods
pop
psllw
rorb
mov
xchg
sub
xlat
leave
std
mov
movsl
jl
int
or
mov
push
std
push
sbb
inc
aas
rcrl
popf
stos
ss
dec
add
enter
pop
mov
jno
sub
scas
push
inc
adc
dec
shlb
add
cmp
popf
add
inc
in
push
ret
roll
jg
push
xchg
cwtl
and
and
pop
adc
cmp
inc
in
es
inc
mov
pop
outsb
dec
lds
jmp
add
fidivl
or
ljmp
add
mov
in
dec
mov
cmpsb
cmp
jae
in
inc
xor
aas
mov
push
sub
popf
cmpsb
xor
je
fwait
or
inc
mov
add
cmp
and
orb
inc
fcomps
jo
popa
mov
jecxz
or
xorb
xchg
add
sbb
add
test
aad
pop
lods
fimull
mov
test
or
mov
xchg
int3
inc
mov
jno
cmc
cmc
inc
and
out
lret
sbb
cmp
push
jecxz
cltd
mov
push
subl
cmp
add
dec
pop
add
push
addr16
xchg
sahf
cmp
insb
pop
addb
cli
mov
or
scas
or
jne
and
jnp
jmp
mov
movsb
test
daa
mov
shrb
jmp
inc
outsb
test
ret
gs
pop
pop
sub
push
addr16
dec
pop
mov
call
pop
inc
adc
mov
and
dec
ffree
outsb
mov
cmp
in
cmp
test
mov
mov
mov
adc
int
jo
adc
mov
push
mov
rcl
enter
mov
jo
mov
push
xor
sahf
jle
js
inc
or
or
outsb
lret
out
ljmp
pop
mov
dec
jno
notb
fistl
jnp
movsb
pop
mov
pushf
cs
adc
int
cmp
pop
scas
jae
add
fs
cwtl
jl
test
js
popf
aam
mov
or
inc
in
dec
dec
cmp
adc
sbb
out
shl
or
es
sub
mov
into
sbb
mov
stos
iret
jbe
test
fimuls
insb
dec
sub
or
lahf
or
dec
jle
mov
popf
inc
mov
add
fadds
arpl
jmp
sbb
mov
pop
ja
mov
imul
imul
flds
mov
sti
test
jmp
sub
rcl
les
sbb
in
pop
in
lahf
movl
mov
push
xor
sbbl
inc
subb
andl
adc
push
pop
leave
mov
xchg
aas
mov
in
stos
ds
push
dec
pop
stos
lock
mov
jo
xlat
jge
cmp
ficompl
jne
sbb
inc
or
add
loope
in
mov
mov
inc
xchg
mov
mov
pop
pushf
pop
arpl
shlb
mov
mov
push
test
mov
imul
int3
pop
mov
xor
sti
aas
inc
jmp
jnp
push
sbb
dec
push
mov
call
dec
fldcw
rcr
lahf
mov
das
adc
dec
mov
pop
fs
push
mov
mov
xchg
int
ret
jae
mov
mov
arpl
adc
add
sbb
add
fadds
and
test
pusha
icebp
push
fldt
int
test
repz
xor
rcrb
or
ljmp
das
jg
push
and
and
stos
shrl
loopne
std
jg
xchg
sarb
iret
rorb
fmul
in
cmp
mov
nop
fidivs
iret
or
repz
fwait
jno
lahf
push
je
sub
push
sbb
sub
popl
xabort
dec
mov
dec
and
out
push
xchg
scas
pushf
js
mov
xchg
cwtl
es
scas
xlat
jmp
cs
jns
stc
das
movsb
bound
ret
inc
stos
pusha
xchg
bound
orl
jbe
sahf
scas
xor
aam
aaa
fimull
mov
fs
lahf
loope
xor
jle
into
out
std
in
js
cmp
push
ficoms
inc
adc
dec
sub
adc
dec
sarb
pop
scas
and
jle
leave
mov
leave
jno
jnp
lods
mov
xor
ficoms
xor
inc
cmp
cmp
jecxz
ljmp
mov
and
and
aam
das
mov
int3
push
in
push
pop
xor
mov
sbb
xchg
push
xor
lcall
or
add
xlat
pop
inc
in
sbb
and
sub
xor
sub
lcall
xchg
adc
ss
xchg
lret
jnp
jb
push
sbb
add
adc
fistps
scas
mov
push
mov
cmp
ja
ljmp
push
cmp
push
fs
add
cmpsb
add
jl
scas
pop
cltd
pop
xor
sbb
fldl
pusha
xorb
inc
fcomps
add
int3
test
sar
dec
mull
pop
test
in
ja
pop
pop
xor
rcrb
push
sbb
jle
inc
jae
mov
add
mov
push
pop
xchg
inc
and
sub
fwait
xchg
pop
xchg
xchg
aaa
out
out
movsl
pushf
or
push
aam
xchg
mov
lret
jge
leave
int
notl
inc
xor
dec
inc
outsl
push
dec
pop
in
outsb
push
fisubl
add
mov
dec
call
loop
movsb
pusha
in
sbb
sbb
cmp
xor
dec
stos
adc
repnz
adc
lock
mov
xchg
int
sbb
inc
mov
pop
arpl
or
inc
rcr
data16
inc
cmpsb
andl
rorb
movsl
dec
push
mov
jge
push
dec
adc
mov
cmpsb
sbb
mov
mov
jmp
pop
out
dec
sbb
fists
icebp
mov
pusha
jmp
mov
stos
mov
frstor
sub
mov
das
mov
mov
and
int3
mov
pop
sub
jp
add
imul
in
js
insb
out
int3
sub
or
mov
ljmp
mov
lds
pop
adc
fldenv
add
in
fs
rcll
iret
or
add
cmp
loopne
out
push
mov
push
lods
or
mov
xchg
imul
lods
frstor
xor
mov
adc
testb
inc
dec
in
or
cmc
add
dec
xchg
mov
xor
jmp
lret
js
fsubs
mov
mov
test
cs
test
dec
popf
std
cmc
popa
sbb
imul
jns
in
push
insb
push
hlt
aaa
lods
out
sarl
push
jne
lock
sbb
inc
and
xchg
jle
mov
shll
sub
leave
repnz
fnstenv
push
pop
jecxz
les
xchg
idiv
sbb
faddl
aad
popa
lea
xor
fsubs
jns
je
ljmp
andb
lret
stos
test
jbe
sar
mov
adc
xchg
ret
sahf
jo
dec
mov
inc
sub
scas
arpl
mov
addr16
and
adc
icebp
ror
sbb
add
jecxz
or
enter
and
pop
insb
sub
repnz
dec
adc
mov
sbb
imul
sub
sarl
adc
mov
sbb
repz
mov
adc
push
mul
push
divl
incb
jne
bnd
cmp
jp
jo
andb
inc
andnps
arpl
push
jae
hlt
fsts
test
dec
mov
adc
aam
inc
fwait
xlat
mov
cmp
jnp
and
sub
insl
lods
arpl
addb
cmpsb
and
dec
xchg
es
xchg
lcall
mov
out
xchg
mov
add
pop
adc
dec
ja
and
xor
add
or
or
outsb
dec
out
jae
mov
mov
sub
movb
aad
dec
loope
clc
jo
inc
sti
add
pusha
outsl
jge
sbb
fnstsw
push
xlat
clc
mov
jg
sub
or
adc
rcll
js
clc
xchg
iret
sbb
test
cmpl
addl
test
faddl
or
sti
out
xchg
mov
fsubr
cmp
push
das
imul
pop
xchg
je
inc
xchg
mov
sub
push
dec
mov
das
jecxz,pt
or
inc
in
cmpsb
arpl
and
int3
in
pop
shll
scas
xor
icebp
sbb
bound
push
cmc
lea
cmp
mov
out
ljmp
sti
leave
mov
lods
std
mov
push
fsubrs
jecxz
mov
jo
jne
mov
mov
xor
inc
adc
lods
sbb
rorb
push
and
mov
sbb
or
xchg
movsb
out
mov
mov
pop
fwait
cmpsb
lcall
pop
mov
pop
sbb
push
lahf
jb
bound
fsubs
repnz
jae
out
lcall
xchg
mov
add
or
andb
mov
lret
mov
xor
in
lods
cmpb
pop
popa
dec
in
lock
add
sub
hlt
xchg
jl
adc
idivl
pop
mov
fcomps
xor
aam
aas
lods
fnstsw
and
stos
stc
mov
or
lods
lds
inc
or
jnp
test
stc
dec
or
aad
test
sub
pop
test
mov
add
mov
push
test
mov
jns
or
mov
mov
rolb
movsb
negl
jmp
into
mov
sbb
dec
pusha
call
sbbl
dec
movsb
out
stos
in
jg
xchg
xor
pop
pop
or
in
pop
jecxz
add
dec
mov
loopne
call
adc
or
aam
outsb
data16
mov
jmp
add
pop
sbb
xor
cmp
xchg
movsl
ja
cwtl
cmp
ja
test
and
clc
shrl
jne
mov
ret
sahf
pop
jne
sub
xlat
cmp
pop
jnp
push
dec
stos
outsb
add
xor
lods
popa
adc
stc
cld
sahf
adcb
and
call
aad
mov
lahf
test
fwait
sbb
cmp
cmpsl
icebp
enter
in
gs
lock
stos
mov
jl
cmp
fadds
xor
sbbb
sbb
jne
xchg
aaa
pop
push
repnz
lock
or
or
stos
xchg
pushf
cmp
fmull
ret
and
shrl
or
mov
lods
sbbb
addb
enter
clc
cmpsb
imul
repnz
mov
mov
incl
jne
jb
push
push
mov
dec
sub
call
std
or
and
jae
cmp
cld
lods
fisttpll
gs
out
call
imul
and
rcrl
fildl
cmpsb
in
xchg
dec
xchg
push
cli
cmp
imul
jecxz
addr16
push
loop
pop
loop
outsl
lahf
test
mulb
repnz
sbb
loope
push
das
xchg
daa
cmp
stc
popf
fs
cwtl
lock
xor
jmp
leave
popf
adc
mov
adc
pop
enter
stos
jecxz
push
xchg
inc
pushfw
ds
add
jge
inc
dec
and
push
lods
div
shrl
testl
pop
daa
test
adc
sub
pop
mov
pop
hlt
cmpsb
test
xchg
mov
ja
sti
or
mov
inc
int3
dec
xchg
sub
dec
sub
popf
sub
sub
ja
sbb
sbb
cld
test
ds
popa
std
std
adc
mov
dec
lea
outsl
arpl
adc
fdiv
inc
je
inc
js
push
cmp
jg
daa
mov
movl
inc
and
pushf
lds
dec
mov
sarb
jns
or
idivl
inc
ss
jnp
pop
jl
push
push
or
sub
or
xchg
imul
in
or
pop
push
stos
clc
mov
pop
arpl
push
or
decl
movsl
ljmp
mov
push
xor
mov
mov
int
xchg
lea
push
and
inc
or
sub
stos
jmp
cmp
test
les
inc
mov
xchg
sub
pop
sub
insb
push
jo
lcall
addr16
dec
clc
scas
lds
push
mov
test
outsl
repnz
and
ret
popf
scas
mov
fs
jp
xor
jge
pop
add
rclb
mov
pop
bound
sbb
xor
ficomps
push
sub
xchg
mul
insb
mov
sbb
ljmp
leave
pop
ds
adc
cs
aam
cmp
cli
je
data16
mov
cmp
jmp
dec
and
inc
sbbb
fwait
nop
fs
ds
add
cli
insb
dec
sbbl
pop
cmp
xchg
lret
mov
sbb
sbb
and
xchg
sbb
int
xor
into
bound
pop
movsl
cli
mov
inc
jge
pop
dec
adc
add
jg
xor
int
xor
mov
add
pusha
sbb
jg
pop
cmp
add
lods
lahf
add
iret
mov
repnz
movsb
mov
ret
dec
push
xchg
les
fucomp
mov
dec
inc
inc
leave
leave
out
insb
mov
repz
sub
sbb
cmpsb
xor
stc
inc
aam
dec
imul
mov
call
ss
xchg
mov
adc
xor
push
xor
cmp
or
xorl
jge
addr16
sbb
mov
mov
aad
leave
jge
and
inc
addr16
dec
dec
push
and
rorl
push
xchg
imul
int3
push
cmpsl
pop
pusha
daa
jl
test
cmpsl
jle
std
in
push
dec
subb
das
mov
add
pop
inc
push
xor
gs
fistl
xor
jne
mov
mov
jge
or
mov
aam
adc
jns
push
enter
leave
or
out
dec
fcompl
ficoml
dec
cmpsb
in
sbb
aaa
mov
mov
cmpsl
cwtl
les
repnz
call
fimull
gs
add
das
testb
xor
loopne
iret
test
hlt
cld
test
pop
je
mov
xor
aam
lret
mov
icebp
fcmovne
xchg
cmc
sub
loopne
add
adc
iret
push
xor
ja
and
add
pop
mov
in
sti
inc
clc
ja
xchg
insl
pop
aam
insb
aaa
cmp
pop
dec
sub
lods
out
cmp
xor
lock
add
mov
jg
movsl
in
pop
leave
mov
xchg
enter
out
mov
sbb
stc
push
insl
nop
int
sti
int
int3
sub
mov
push
dec
adc
div
or
outsl
xchg
int
pop
or
iret
test
mov
fdivs
mov
cmpsl
mov
rsm
lds
inc
rclb
daa
test
mov
jl
sbb
in
sbb
leave
pop
sarb
inc
fistpl
push
scas
hlt
pop
mov
adc
inc
inc
and
mov
in
sti
jne
add
rcrl
mov
sbb
in
ja
imul
and
ds
sub
ret
pusha
enter
aam
inc
dec
pop
mov
jmp
stc
or
jg
lcall
aad
lds
test
fwait
pushf
cs
test
mov
xchg
xchg
jns
xor
pop
pusha
stc
xchg
inc
mov
dec
adc
adc
shrb
jne
mov
out
mov
stos
jle
cltd
or
out
add
sbb
leave
sbb
xchg
jg
gs
xchg
subl
push
add
mov
push
jb
movsl
push
mov
test
test
push
cmp
mov
mov
or
or
iret
push
add
jle
mov
xchg
mov
arpl
clc
aad
cmpl
jne
ss
pop
push
inc
lret
mov
rep
xor
ret
sbb
addr16
pavgw
int
sbb
adc
pop
int
bound
and
arpl
dec
movsl
icebp
jae
sub
in
mull
jecxz
jg
je
std
mov
xchg
sbb
adc
pop
push
mov
cmp
adc
addr16
enter
ja
pop
add
xchg
jmp
fs
ja
frstor
out
in
jge
dec
scas
and
add
cmp
xor
xchg
stos
icebp
jns
lret
dec
cmpsb
loop
imul
aaa
in
dec
or
js
mov
enter
pop
cmp
cmp
inc
andl
shll
daa
pop
inc
cmpsb
mov
push
add
mov
fsubs
pop
mov
lea
ret
call
lret
das
fildl
mov
cmp
rcr
push
inc
cmp
into
fsubrs
std
pop
jo
fs
pop
inc
push
lods
bound
cmp
and
or
and
xor
mov
add
rorb
les
and
rclb
mov
hlt
cmpsb
xlat
in
ficompl
xchg
mov
add
lret
lods
and
gs
push
outsl
and
fiadds
mov
or
aas
or
aas
cmpsb
in
mov
push
mov
push
jns
ss
mov
ja
fcomip
movsb
scas
stc
out
fucom
icebp
stc
jo
lahf
sub
in
aam
ss
les
scas
adc
fisubrl
shrl
xchg
xchg
mov
lahf
jecxz
dec
jecxz
dec
push
aaa
std
js
push
popa
push
lret
jae
mov
fdivs
imul
fstpt
xlat
push
jno
xchg
lsl
add
inc
in
or
push
or
and
jns
lret
insl
dec
adc
hlt
popf
dec
add
jnp
cmpsb
lret
sbb
mov
push
cmova
mov
adc
add
push
loope
lods
adc
sub
add
mov
sbb
cmpsl
fsubrl
inc
lret
pushf
or
sub
lock
jp
imul
fwait
push
aam
pop
in
xor
hlt
mov
loop
mov
mov
out
and
or
mov
int
stc
inc
mov
inc
rclb
rcrb
xchg
clc
mov
out
and
jg
shrl
xchg
loopne
jb
jae
add
rclb
arpl
xchg
movsl
push
frstor
bound
mov
sub
and
sbb
test
rol
cmp
int
out
xchg
int3
push
dec
std
add
and
repz
mulb
push
movsb
cmp
cmpsb
insb
cmpsl
out
push
mov
out
push
push
lret
fs
jo
movsb
cmpsl
jbe
int
pop
push
cmc
sbb
int3
rorb
iret
insb
faddp
aam
dec
fst
pop
dec
pop
mov
test
inc
pop
daa
mov
mov
jne
dec
loopne
fildl
jne
xor
or
lahf
or
adc
push
push
push
stc
popa
pop
out
cmp
icebp
clc
cmpl
fsubs
push
stos
mov
mov
adc
push
xchg
mov
fistpll
ficompl
jecxz
jbe
sarl
lea
add
cmp
mov
mov
dec
sbb
insl
cs
lahf
mov
nop
jge
push
pop
xchg
repz
or
mov
pushf
and
call
fst
out
std
sub
in
aad
push
pop
mov
add
fsub
into
sub
fldt
mov
xor
out
jecxz
xchg
pop
pop
inc
stos
cmp
fwait
mov
fwait
dec
add
lret
or
sti
out
cld
lcall
int
ds
jns
and
loope
and
mov
xchg
pop
rorl
hlt
sbb
and
icebp
lcall
mov
in
ret
mov
jle
adc
cmp
cmp
subb
mov
xchg
dec
insb
xchg
cmp
rorb
loope
adcl
pop
inc
and
inc
and
arpl
mov
popa
jno
or
fcoml
mov
sub
or
pop
lods
mov
lods
push
inc
insl
lock
imul
lods
in
inc
mov
movsb
sarl
or
aad
and
xlat
xchg
lahf
jb
orl
sbb
sbb
movups
pop
push
pop
push
into
jl
test
inc
mov
das
sbb
loopne
jno
lret
fwait
mov
imul
mov
les
loopne
jle
push
xor
popf
popa
push
idivl
stos
jnp
scas
push
mov
adc
and
jl
fcmovb
cld
add
and
ja
flds
or
les
aad
jno
lcall
inc
aad
sub
cmp
mov
js
pop
rorl
mov
add
out
jmp
stos
jle
dec
jg
or
enter
pop
add
inc
aam
sbb
fdivrl
leave
std
hlt
nop
pop
lret
inc
lea
adc
pop
test
cwtl
out
stos
ret
mov
add
lcall
aas
out
pop
xchg
aam
lahf
cld
dec
adc
icebp
dec
xor
or
xchg
cmpsl
imul
scas
or
mov
out
xchg
adc
dec
push
out
addr16
test
mov
dec
jmp
aam
add
fiadds
sub
repz
lock
jmp
dec
inc
or
in
push
cltd
inc
mov
sbb
mov
sbb
xchg
es
or
cltd
sbb
jl
adc
cmp
cmp
repz
aas
rcrb
dec
icebp
dec
mov
shrb
jnp
cwtl
mov
outsb
adc
mov
xor
mov
stos
popa
or
outsl
push
cmp
stc
enter
inc
mov
add
push
pop
out
stos
jo
xchg
xchg
jge
cltd
or
mov
mov
push
or
pusha
mov
and
leave
sahf
mov
dec
adc
cmp
jle
rcrl
cld
scas
call
or
mov
out
arpl
shl
push
insl
mov
inc
sbb
in
fwait
test
pop
xor
jmpw
xor
fildl
fcoms
dec
push
out
jp
sub
lret
add
pop
pusha
xchg
shl
pop
push
loopne
out
loopne
hlt
mov
sub
mov
jno
sub
movsl
cmp
addr16
push
adc
pop
push
arpl
xlat
lcall
jb
ret
push
js
stos
shl
mov
pop
and
lret
add
loop
push
dec
mov
mov
cld
cwtl
popf
sbbl
cs
jg
xchg
arpl
xor
jle
fdivp
mov
inc
test
addr16
or
mov
int3
xchg
cmp
movsb
daa
int3
jg
loopne
and
mov
jo
pop
iret
insb
ficomps
in
ret
add
push
push
xchg
sbb
pop
or
repnz
push
idiv
jno
and
daa
jae
test
sbb
int
push
outsb
cmp
sti
addr16
push
pop
or
cmc
xchg
and
scas
pop
imul
add
mov
gs
jecxz
push
pop
lret
fcom
or
lock
insl
icebp
add
pushf
push
addb
mov
sub
adc
add
jmp
aas
xchg
push
xlat
clc
inc
cwtl
sub
mov
jne
test
jo
add
sar
push
mov
fstpt
enter
and
or
inc
push
mov
call
cmp
pop
xor
pop
pop
test
xor
mov
cld
sub
dec
rorl
jmp
or
daa
cmp
shrl
or
or
xchg
in
call
sti
and
loopne
je
mov
pop
pop
pop
sbb
jbe
mov
lret
adc
mov
fistpll
sti
or
push
roll
cmp
out
push
push
mov
dec
daa
addr16
or
add
fimull
sbb
in
testb
mov
sub
add
and
cmp
pop
lcall
mov
mov
inc
mov
or
loop
iretw
inc
dec
pop
xor
push
cmp
jp
inc
sahf
xor
mov
fsub
push
xchg
int3
push
mov
pop
mov
outsl
xor
jmp
fcomps
mov
test
xor
ljmp
nop
dec
sub
sbb
fcomp
imul
push
arpl
and
aam
xor
test
pop
test
inc
pop
shrl
enter
jbe
int
sbbl
mov
repnz
bnd
lea
or
in
jno
sahf
fs
mov
div
paddusw
mov
push
jp
shll
inc
ds
lds
mov
sbb
les
pusha
test
sub
add
push
std
aam
xor
test
out
or
push
cmp
test
aas
popa
sub
test
sbb
add
xchg
xchg
ljmp
fscale
inc
sub
int3
icebp
mov
inc
icebp
movsb
mov
dec
test
fsubrp
das
repnz
mov
les
popa
test
mov
testl
test
cmp
pop
fldt
dec
lock
sbb
or
sub
mov
repnz
cwtl
rcl
je
out
add
icebp
inc
adc
fwait
imul
and
jp
inc
in
gs
nop
mov
fsub
add
outsl
xor
ljmp
xor
aam
xor
xlat
std
xchg
mov
roll
mov
loop
fadds
cmpps
enter
adc
mov
in
lock
sbb
jbe
add
xchg
pop
jbe
loop
mov
mov
cmp
add
adc
fnstenv
fsubs
jmp
pop
gs
insb
inc
icebp
popa
pop
mov
mov
or
stos
xchg
je
imul
sbb
mov
fnstsw
outsb
and
movsl
jb
lods
xchg
arpl
roll
hlt
lret
mov
lret
divb
sub
sbb
ds
fdivs
xor
std
int
leave
ljmp
icebp
scas
orl
test
js
repnz
enter
in
and
cbtw
mov
push
lods
mov
or
imul
cli
leave
sahf
jno
and
sbb
imul
cmc
mov
jo
icebp
push
pusha
sub
aam
xchg
popa
scas
push
mov
shll
cmp
fdivl
lcall
shll
jns
imul
js
data16
sbb
in
sub
pop
xor
test
hlt
ret
xchg
inc
cs
fbld
roll
or
jmp
iret
loope
jp
scas
addr16
outsb
cmp
and
lahf
pop
imul
test
sbb
les
push
sbb
ret
adc
test
add
shrb
repnz
xchg
rclb
js
mov
outsl
outsl
fildll
inc
sub
imul
xchg
fcmovnu
jo
jle
xchg
cmp
push
dec
aaa
stos
jmp
adc
xor
mov
xchg
in
jb
add
rcll
jbe
xor
adc
or
adc
lock
fldt
int3
sub
or
leave
movsl
xchg
idivb
ljmp
jg
mov
aaa
xchg
in
adc
push
pop
xchg
inc
xor
movl
jmp
mov
jg
adc
cmp
out
icebp
pop
inc
rcrb
je
fcompl
dec
int3
in
out
mov
fcompl
mov
dec
sbb
xchg
ds
add
mov
cli
iretw
notl
push
repnz
shlb
insl
out
and
aam
dec
int
outsb
xor
jp
mov
or
sbb
into
es
adc
xor
or
cld
xor
sub
pop
jl
loopne
paddusb
enter
lret
outsl
jg
int3
dec
mov
lret
dec
mov
inc
lds
cmp
mov
fdivl
cmp
movsb
leave
loopne
enter
push
and
enter
and
outsl
xchg
movsb
pop
mov
stos
adc
in
outsl
xchg
sbb
stos
lea
mov
inc
outsl
lock
cmpsb
adc
cs
or
pop
test
mov
or
incl
ret
jae
addr16
rcl
lock
flds
push
pop
in
divl
xor
jmp
test
jl
or
xchg
add
sub
scas
cltd
rcll
push
jae
xor
int3
sahf
mov
pusha
lods
sub
lock
push
movl
sub
jl
mov
xor
shl
loop
or
pop
shlb
stos
cmp
pop
xlat
aaa
jecxz
stos
int3
mov
jb
dec
int3
leave
or
in
push
xchg
addb
cmp
jl
les
jmp
iret
enter
xor
sub
imul
pop
dec
add
pop
shrl
pop
in
mov
aam
xchg
dec
fstl
sub
sti
xchg
test
test
jnp
mov
and
xorb
push
jbe
clc
stos
jle
je
add
ds
loope
push
cli
sbb
jo
mov
push
into
movsl
xor
add
inc
into
inc
es
mov
jae
cld
mov
cmp
scas
or
add
push
mul
std
int3
pop
imul
dec
repnz
mov
pop
mov
gs
dec
sarb
jae
sbb
dec
or
push
daa
mov
xor
out
scas
pop
shl
imull
adc
pushf
mov
lock
jg
xor
inc
fstpt
loope
jb
adc
fisubs
mov
nop
mov
clc
push
or
fidivs
mov
leave
lcall
xor
pop
lods
xor
sbb
jle
xchg
mov
int
xchg
fcoms
fcomi
push
es
or
xchg
adcb
shlb
xor
jns
mov
push
stc
stc
dec
scas
cmpsb
jg
push
ret
xchg
jbe
or
sub
adc
adc
hlt
push
movsb
ret
and
inc
es
mov
mov
lahf
insl
jp
rcrb
imul
push
jne
jno
adc
test
in
mov
adc
sbb
adc
inc
pop
inc
pop
fistps
icebp
mov
inc
out
inc
pop
xor
stc
xchg
jmp
cmc
adc
and
rorb
in
xchg
lock
push
mov
adc
push
dec
pop
int
sbb
fwait
lea
sbb
fcomi
mov
addb
insb
jae
push
xchg
cmp
mov
je
adc
popa
imul
adc
mov
or
xchg
or
xchg
xor
and
fsubs
adc
out
jae
iret
push
inc
scas
nop
aaa
push
in
lahf
fwait
jl
dec
cld
cmpsl
arpl
iret
aad
add
pop
xchg
fucom
std
das
xchg
jle
jbe
int3
inc
in
jae
or
in
dec
insb
fwait
vfmaddsub132pd
push
pop
or
push
loopne
popf
push
sarl
int3
pusha
push
pop
call
jmp
je
adc
pop
dec
imul
jl
xchg
push
data16
shrb
xor
nop
test
lds
data16
rcr
out
mov
ljmp
sub
in
ds
pop
sub
jg
aaa
sbb
xchg
jae
jae
lds
xchg
pop
imul
and
hlt
fwait
sbb
and
xchg
ljmp
int
add
adc
repnz
lahf
jmp
mov
aaa
push
repnz
sub
cs
loopne
mov
xchg
pusha
fildl
pop
fisubl
fldlg2
cmp
or
mov
hlt
jle
and
pop
xor
stos
frstor
in
mov
lods
in
test
mov
add
lock
loopne
cmc
mov
xor
scas
cmp
push
enter
into
push
ds
and
psrad
cmp
push
fnstcw
arpl
mov
xchg
and
lock
aas
jae
div
divl
sub
cmpsb
xchg
jecxz
xchg
mov
fcomi
sub
outsb
mov
xor
fdivl
add
pop
push
inc
not
or
outsb
sbb
aad
cli
push
mov
sahf
loopne
test
push
outsl
jb
imul
xchg
xor
ret
lret
cmpsl
lds
sahf
jg
pop
add
adc
mov
mov
xchg
lcall
int
pop
cltd
cwtl
mov
mov
repnz
imul
cmpsl
fmull
je
mov
adc
sbb
test
and
call
iret
bound
or
lea
sbb
sub
lods
sbb
leave
xchg
push
dec
add
push
mov
inc
leave
mov
or
pop
loope
clc
das
mov
loop
dec
and
inc
scas
out
rorb
push
addr16
rclb
push
sub
aaa
stos
call
adc
or
sbb
lcall
test
ret
cmp
cwtl
dec
jno
sub
sti
or
leave
inc
bound
or
jb
stos
icebp
jo
repz
inc
dec
sub
lods
mov
aam
imul
insl
add
jmp
xchg
jmp
sub
mov
mov
aam
push
mov
test
jmp
in
call
mov
mov
movsb
data16
fsubrl
cmpl
pushf
les
test
dec
aad
fildl
roll
add
mov
add
xchg
in
mov
push
out
test
lea
mov
scas
outsl
jmp
mov
mov
jae
adc
ds
out
andb
outsl
arpl
xadd
mov
push
popa
and
andl
ficoms
push
mov
cwtl
add
stos
ret
xor
mov
jae
cmc
adc
icebp
cmp
cltd
sub
mov
repnz
fcomps
rorl
roll
sub
mov
adc
pop
mov
fs
pushf
mov
pop
mov
mov
inc
mov
cmpsl
adc
jecxz
xor
push
scas
in
in
inc
sbb
insl
push
inc
sub
dec
test
orl
in
sub
cmp
mov
inc
mov
insb
and
xchg
mov
adc
les
insl
sub
adc
outsl
out
jg
push
outsb
hlt
dec
das
lea
nop
push
leave
push
and
jmp
sahf
mov
adc
dec
notb
cmpsl
xlat
push
mov
mov
fisubl
add
mov
orl
fsub
add
or
add
pop
adc
jns
jns
push
sbb
dec
lods
pop
jnp
shrb
pop
cmp
mov
pop
mov
out
clc
popa
pop
add
ljmp
iret
and
ud2
xor
fnsave
mov
pusha
sbb
push
das
mov
repnz
fwait
xchg
and
mov
fwait
mov
add
sub
cmp
inc
mov
mov
mov
pop
call
sub
mov
xchg
dec
sbb
mov
and
cmpsl
fs
cmp
stc
pusha
dec
add
mov
xchg
das
cwtl
mov
dec
xor
insb
mov
cmp
xor
call
and
jecxz
adc
inc
cmp
push
sub
xlat
cmp
xchg
pop
xchg
stos
push
push
popf
xor
out
sub
inc
jnp
test
pop
xor
lret
add
pop
pop
pop
adc
out
dec
or
les
mov
push
insl
adc
and
jb
jne
icebp
cmp
lods
das
lret
out
jmp
xchg
mov
mov
sti
and
or
dec
xchg
xor
mov
push
test
adc
mov
arpl
lret
cmp
js
lahf
mov
repnz
pusha
sbb
dec
imul
mov
sahf
pop
xorb
cmp
rclb
adc
scas
or
pop
adc
push
xchg
es
je
test
into
leave
pop
jmp
rcl
lods
dec
rorb
push
ljmp
mov
mov
pushf
sbb
dec
ja
push
outsl
insb
movsl
in
popa
dec
xchg
sbb
cmp
nop
xchg
jle
push
adc
xor
jo
pop
mov
ja
popf
push
xlat
outsl
mov
mov
inc
dec
mov
adc
cmp
mov
or
loopne
pop
out
jb
enter
lcall
dec
ret
idivl
mov
gs
out
repz
mov
inc
aam
data16
and
inc
xor
inc
ds
test
cld
pop
inc
pmullw
push
adc
mov
js
jmp
xchg
push
push
fsubr
popf
jnp
inc
xor
lret
cmp
inc
test
xchg
int3
cwtl
out
mov
iret
into
out
leave
inc
xchg
imul
sahf
lret
xor
es
pop
mov
mov
sbb
or
xchg
divl
fidivs
and
iret
aam
fisttps
push
cltd
mov
xor
leave
popa
cmp
leave
pop
mov
xchg
into
mov
loop
push
mov
push
xchg
fistl
call
pop
pop
ret
pop
or
lods
negb
faddl
jne
fnstenv
mov
movsb
jg
mov
and
out
pop
xchg
xchg
icebp
push
movsb
pop
outsb
dec
mov
and
test
push
push
and
in
sahf
or
mov
incl
cmp
dec
mov
mov
stos
add
insl
sarb
pop
cmpsl
lret
ljmp
imul
add
mov
xchg
pusha
xlat
test
std
repnz
pop
push
sub
outsl
adc
popf
mov
inc
cmp
cmp
dec
lea
icebp
lret
div
int3
mov
or
ljmp
loopne
outsl
sub
mov
mov
add
cmovnp
mov
xchg
mov
in
push
sbb
xor
push
jmp
cmp
adcl
xchg
popl
xchg
pusha
pop
loope
xchg
orb
dec
mov
inc
dec
lods
cmp
mov
jb
and
pmuludq
out
mov
inc
add
in
cmp
add
add
test
xor
cli
fucomi
shll
pop
pop
mov
in
and
mov
sbb
addr16
xchg
xorb
mov
sahf
and
int
xor
gs
iret
push
push
adc
ret
int
push
mov
push
jge
and
mov
xchg
or
hlt
add
dec
pop
nop
icebp
sbb
dec
sti
enter
mov
js
fs
push
cmpsb
mov
adc
jbe
jmp
push
push
sub
mov
add
mov
and
scas
mov
call
cli
mov
lea
or
rolb
add
into
push
sbb
addr16
inc
rcl
jb
jge
cltd
xchg
das
add
add
fmul
aad
xchg
ds
sub
adc
pop
cmp
out
in
push
lds
in
cmpsb
or
xor
filds
cmp
addr16
mov
or
dec
adc
dec
inc
jnp
rorb
fildll
xor
xchg
fsts
jp
pushf
testb
data16
mulb
inc
imul
pop
inc
repnz
or
cli
addr16
push
in
arpl
arpl
xchg
icebp
je
add
xchg
xor
ljmp
aam
adc
mov
loop
lret
sbb
pop
repz
repz
xchg
aam
and
inc
inc
mov
sub
pop
outsl
into
mov
int
cmpsl
fidivrl
decl
inc
movsb
and
inc
mov
aaa
dec
maxps
pop
adc
adc
cmp
jge
and
mov
imul
jp
adc
mov
xchg
into
mov
test
xchg
cmpsl
ficoml
cs
dec
nop
stos
add
and
fwait
cltd
clc
inc
out
out
es
rcrl
sti
or
pop
mov
outsb
ret
sahf
repz
in
aad
sub
rclb
dec
push
cwtl
out
mov
mov
push
mov
ds
emms
adc
repnz
repz
aaa
push
adc
int3
mov
shlb
and
cmp
pushf
dec
xor
outsl
out
mov
out
sbb
arpl
jns
inc
adc
jo
dec
cmp
mull
inc
or
test
mov
sarb
sub
cwtl
scas
stc
cmc
fwait
mov
pushl
faddl
inc
dec
fsubp
js
jno
push
pushaw
mov
jecxz
adc
data16
xchg
not
int3
mov
rolb
ljmp
push
jbe
adc
in
test
enter
call
jmp
jns
test
and
aam
xchg
jmp
inc
and
cli
int3
and
test
leave
test
mov
call
in
mov
push
xor
xchg
mov
int3
out
mov
jbe
cmp
xchg
mov
inc
xlat
jae
stc
popa
jl
lods
jnp
sbb
mov
adc
jl
pop
add
ret
fwait
aas
and
xchg
adc
stos
scas
sahf
xchg
lcall
faddp
dec
or
je
cmc
push
xlat
or
test
jecxz
test
test
mov
sub
cmp
es
dec
fwait
out
dec
inc
jle
fcompp
inc
xchg
lock
lret
shl
pushf
pushf
xchg
lock
sub
push
or
fdiv
shll
cwtl
lea
test
jge
push
ret
sbb
xor
jno,pn
insb
xor
jae
xor
aam
jg
push
mov
iret
sub
outsl
sub
icebp
out
fistpll
cmp
fdiv
push
xor
int
jp
test
or
cmp
jbe
test
scas
adc
jnp
in
clc
ja
xor
inc
sub
mov
xor
aas
push
stos
mov
xor
jmp
ret
sub
push
push
cmp
xchg
push
xchg
sbb
push
dec
ret
shlb
rcr
adcl
cmpsb
pop
incb
aaa
fistl
repnz
add
jb
or
xlat
xor
add
insl
lea
aaa
lea
mov
mov
lods
imul
inc
jo
ds
inc
aas
inc
pop
fidivrs
sbb
mov
add
fnstenv
aas
ss
fisttpl
pop
sub
shll
icebp
mov
pop
cmp
fimull
gs
out
pop
lcall
push
pusha
xchg
insb
div
xlat
orl
fldt
call
mov
and
dec
movsb
pop
sti
scas
mov
jecxz
mov
mov
das
bound
xor
push
repz
mov
mov
mov
dec
outsl
pop
insl
xlat
fs
pop
push
leave
or
cmp
rcll
jl
push
push
or
pop
push
sub
push
mov
loope
sub
jno
lods
das
mov
sub
das
mov
mov
jns
xchg
sbb
loopne
stos
ret
xor
fistpll
lds
jb
lds
adc
cwtl
xor
pandn
mov
xor
lret
sbb
sbb
xchg
push
lock
int
add
push
xor
enter
stos
neg
mov
add
cltd
ds
jno
pop
add
mov
dec
jmp
xchg
rcrl
xchg
int3
add
arpl
sub
es
add
adc
cmp
jno
outsl
and
xchg
xchg
ret
push
les
xchg
fnstenv
imull
ret
sbb
clc
leave
cmp
cmp
xchg
sub
and
adc
outsl
and
mov
sbb
pop
or
es
xchg
inc
scas
pop
mov
jno
mov
and
insl
cmp
fld
loopne
movsb
addr16
les
xor
mov
in
xor
in
fcmovnbe
xor
xor
int
lods
testb
cmpsl
pop
nop
aas
xchg
push
cld
mov
or
cmp
xchg
test
sarl
pop
push
dec
pop
cmpsl
arpl
lock
call
pop
sbb
mov
std
mov
movsb
jb
or
sti
mov
jge
mov
mov
insl
dec
dec
les
js
push
cmpsl
aas
cmp
xor
repnz
adc
scas
push
jns
mov
idivl
fcompl
lock
in
out
flds
cld
decl
minps
loop
xchg
push
cmpsl
add
sub
adc
sbb
push
xchg
ja
ja
popl
mov
or
adc
rolb
mov
inc
outsl
pop
pop
fdiv
sub
dec
push
or
adc
xor
mov
mov
jp
cmpsb
adc
jo
addl
xchg
and
dec
out
mov
sbb
adcl
xchg
mov
mov
ret
mov
pop
mov
xchg
lea
mov
push
mov
sbb
mov
xchg
outsb
jae
jecxz
out
sbb
push
addr16
sti
cs
ja
gs
cmp
cwtl
jae
add
cmp
adc
cmp
data16
sbb
push
ret
enter
insl
aam
addb
lret
imul
icebp
stc
and
imul
or
fistl
dec
nop
and
or
stos
aaa
repnz
push
int3
xchg
stc
cmp
aam
adc
mov
lock
idiv
out
push
jge
dec
popw
xchg
rclb
jbe
pop
push
aaa
int
push
incb
dec
ja
clc
es
ljmp
insl
xchg
jo
push
mov
or
adc
jae
sbbl
pop
sahf
cmp
mov
jmp
rcll
fstpt
lock
jle
sbb
xchg
cmp
mov
outsl
andl
ja
je
and
dec
ljmp
xor
add
or
pop
or
cmc
mov
insl
decb
gs
cwtl
jno
sub
loop
enter
fisubrl
in
addr16
popa
lods
fcoml
into
xor
mov
inc
sti
add
call
dec
sbb
or
repz
xchg
sub
push
mov
jge
inc
fidivrl
sbb
adc
pop
outsb
cmovge
sub
or
pop
sbb
mov
dec
daa
scas
lock
mov
xchg
test
test
xchg
lea
movsl
dec
xchg
cmp
adc
clc
sub
sbb
cmp
lods
fdivr
outsb
dec
dec
mov
data16
test
fs
push
pop
stos
push
mov
mov
dec
push
jecxz
pop
stos
or
push
inc
loope
and
mov
cmp
xlat
les
inc
test
leave
mov
hlt
loopne
cli
fmull
stos
xor
pop
cltd
jmp
xor
mov
mov
aam
shlb
out
fbstp
mov
jmp
dec
add
jmp
lahf
lea
sbb
inc
jno
jl
sbb
push
mov
cmp
mov
enter
jge
pop
stos
mov
adc
jecxz
dec
out
roll
into
pushf
std
adc
les
xchg
movsb
sbb
mov
mov
insb
sbb
daa
std
lret
pop
cmpsl
movsb
add
mov
stos
out
daa
addr16
cmp
fwait
or
sub
jbe
inc
icebp
mov
dec
and
aas
inc
sub
adc
daa
rcrb
add
notb
ret
and
or
mov
iret
push
mov
push
js
xchg
cmp
cmp
and
popf
inc
cmp
pop
add
push
iret
insl
lea
jl
dec
push
aam
lods
add
int
sbb
loope
lea
xchg
leave
test
clc
mov
mov
sbb
add
xchg
leave
and
mov
cmp
dec
push
pusha
pop
fbstp
mov
push
fidivrs
arpl
jb
cltd
loopne
mov
cmp
cmp
leave
loopne
gs
sub
mov
cmp
pop
inc
ret
fldenv
sub
aad
mov
pusha
les
lret
jae
sbb
cli
out
lock
xchg
imul
adc
les
cmpsb
jecxz
push
mov
lcall
pop
mov
lea
and
sti
mov
push
cwtl
and
cmp
dec
xor
xchg
pushf
xor
inc
shl
sar
iret
xchg
sub
das
pop
stc
mov
push
adc
js
adc
xchg
pop
push
mov
inc
sbb
or
push
and
push
aad
mov
fcomp
sbb
mov
push
jb
xlat
insl
fnstcw
test
sbb
push
lcall
out
jno
pop
xchg
sub
out
int
xchg
cmp
insl
fwait
pusha
add
push
mov
jnp
push
cmp
data16
jbe
rorb
imul
jp
sti
orb
jmp
mov
int
addr16
aaa
mov
and
mov
jo
lods
int
lahf
cmp
lds
cmp
enter
or
push
xchg
jge
inc
or
xchg
das
push
arpl
adc
dec
daa
jns
cltd
pop
pop
inc
dec
push
insb
stos
sub
mov
jno
mov
pop
lret
repz
int
outsl
lds
push
xchg
dec
data16
cmc
xor
sbb
scas
aad
xor
and
mov
pop
arpl
pop
jp
lods
jle
sbb
inc
roll
pop
fstpt
cmp
dec
lret
cwtl
push
mov
sbb
mov
in
in
xorb
xchg
es
mov
ficoml
dec
sahf
mov
test
jno
enter
pop
xorl
sub
jmp
mov
fbstp
dec
xchg
fs
orl
adc
divb
das
subb
mov
popf
sub
pop
mov
imul
adc
xor
mov
mov
cltd
dec
push
lock
or
test
es
sbb
in
and
dec
out
xchg
adc
addr16
test
daa
push
mov
and
ftst
add
insl
fistl
addr16
int
ret
mov
push
stc
add
or
flds
add
or
out
mov
test
lds
jecxz
lret
push
movsl
test
rorb
dec
pop
jae
fdivrs
or
in
daa
add
leave
int3
cltd
dec
push
cmpsb
ja
cmp
test
jb
jecxz
jnp,pn
add
push
icebp
dec
les
testl
cli
fidivl
fcomp
jle
jns
shlb
frndint
repnz
mov
cmp
pushf
add
pop
cmp
cmp
dec
fdivl
xchg
push
ljmp
lret
les
add
aas
push
sub
push
xor
sbb
mov
adc
ss
rcl
push
bswap
xor
xchg
mov
push
pop
fisttps
sub
sahf
repz
aad
je
in
and
sahf
arpl
cmp
enter
pop
popa
inc
push
cmp
pusha
aas
lods
cli
ret
icebp
xor
ret
in
pop
sbb
out
xchg
or
aaa
pushf
push
in
and
cmp
aad
pop
push
cmp
scas
pop
shll
out
jbe
mov
add
cmp
or
dec
sbb
push
js
xchg
mov
gs
shll
and
push
cmp
or
in
stos
or
add
fucomi
cmp
adc
outsb
jbe
push
imul
fisubrl
push
enter
push
mov
fs
or
sbb
outsb
movsb
jl
cmp
push
push
jne
mov
pop
adc
pop
pop
inc
orb
ss
pop
mov
ss
jne
cmp
lods
pushf
xor
xlat
ret
addr16
aas
mov
adc
lods
ret
fisttpll
or
xor
pusha
add
jns
pusha
bnd
lret
test
imul
push
cs
hlt
or
mov
inc
dec
rcrb
sbb
push
cld
shlb
xchg
pushf
and
popa
call
pop
stos
pop
test
addr16
mov
mov
sbb
pop
lock
cs
rol
ret
mov
adc
rorl
sbb
arpl
mov
shlb
pop
mov
out
xchg
or
jl
xchg
jp
lea
insl
jge
xor
test
movsl
fucomp
xchg
outsl
jmp
cmpsb
pop
jbe
jecxz
cmp
mov
out
sub
push
insl
lods
pop
lret
push
sub
jge
aas
lock
push
jns
mov
js
les
jl
mov
ret
icebp
pop
mov
cltd
les
or
push
fwait
dec
sti
mov
popf
roll
imul
imul
xor
inc
jbe
xchg
stos
xor
es
repnz
dec
aad
dec
je
in
xlat
lea
ret
cld
fwait
xlat
shl
in
pop
xchg
bound
mov
repz
ja
aam
inc
cwtl
sahf
add
lret
ret
lds
jae
ds
inc
je
outsl
mov
add
or
push
mov
fsubl
scas
roll
fucomip
leave
push
dec
push
lea
mov
test
mov
xchg
pop
into
jmp
sub
mov
mov
jb
dec
fdivs
pop
or
xor
loopne
std
mov
push
insb
pushl
push
pop
push
ja
or
sub
iret
pushl
mov
iret
in
shll
iret
fcoml
out
roll
jns
leave
lock
push
int
mov
cmpsb
in
jb
mov
xor
mov
dec
test
dec
jne
jmp
mov
and
test
rorb
mov
dec
xor
pop
inc
or
sbbl
sbb
add
xchg
inc
pushf
xchg
lret
sahf
push
mov
xchg
or
outsl
push
push
pop
xchg
mov
sbb
js
jl
mov
movsb
mov
mov
sbb
mov
pop
leave
out
mov
out
push
pop
push
loopne
test
hlt
xchg
dec
push
ffree
add
mov
mov
cli
daa
add
bound
jmp
mov
gs
lods
fucomi
addr16
jg
xchg
cmp
jl
ja
outsb
ret
clc
xor
mov
or
mov
sub
cmp
aam
test
dec
call
mov
lods
loopne
pop
lret
pop
mov
mov
lahf
mov
push
aas
xchg
cmpsl
clc
in
mov
cltd
dec
out
jno
shrl
stc
mov
dec
jl
and
pusha
mov
jnp
ja
push
aaa
xchg
insb
or
push
push
inc
jbe
sbbl
push
lcall
mov
jb
jne
and
cwtl
sbb
jl
ja
lret
fmuls
jae
arpl
mov
icebp
jmp
sbb
inc
sub
mov
arpl
fbld
cld
cmc
add
rcrb
xlat
mov
insl
inc
jo
cmpsb
sti
and
sub
movsb
xor
inc
xchg
je
mov
adc
mov
gs
andl
mov
std
dec
insb
inc
adc
out
nop
ljmp
jp
lock
in
dec
or
push
xchg
xor
outsl
ljmp
fiaddl
clc
xchg
mull
sbb
mov
repz
fsubs
lock
sahf
jecxz
pushf
cmp
movsl
cmpsb
stos
fs
dec
data16
push
addb
addr16
je
and
or
lahf
arpl
je
jecxz
mov
adc
sub
mov
inc
in
data16
lret
andb
mov
jp
mov
jp
lock
mov
jb
fs
xchg
mov
push
jg
push
mov
lea
ss
pop
fnstenv
lock
xchg
cld
add
ret
push
xchg
movsl
in
aas
mov
scas
lods
mov
mov
sub
xchg
or
push
mov
mov
add
push
stos
pop
sub
lods
mov
mov
add
inc
js
je
mov
aaa
js
sub
push
andb
mov
dec
jne
int3
adc
lret
fwait
fs
mov
mov
mov
xchg
pop
pop
and
xchg
hlt
stc
std
es
dec
mov
mov
jbe
arpl
cmp
sub
pop
push
xor
hlt
ja
inc
pop
lret
fdiv
test
xor
pusha
add
jne
push
stos
in
cmp
arpl
push
popa
stos
pop
push
out
and
les
adc
dec
sub
xchg
jns
cli
pop
dec
dec
cmp
in
addr16
mov
xor
sbb
pop
pop
dec
mov
inc
ret
inc
lods
dec
jg
push
imul
mov
mov
mov
lahf
sub
pop
push
data16
sbb
dec
fldcw
es
or
mov
nop
fs
xchg
rcll
mov
lock
aam
jecxz
and
int3
xchg
lods
lods
mov
mov
rcl
adc
push
mov
and
js
pop
inc
push
in
lahf
add
add
loop
add
lea
cmpsl
and
pop
jge
and
aaa
adc
xchg
xchg
xor
inc
pop
dec
lds
jb
rcll
jecxz
in
gs
or
pop
mov
jle
xor
insl
fmulp
and
jns
xor
and
mov
mov
inc
add
xor
into
mov
jge
das
repz
jle
mov
stos
movsl
mov
push
pop
sub
leave
sub
add
lret
outsl
mov
xor
in
xchg
push
push
sub
movsb
push
dec
outsl
jb
imul
push
sahf
loopne
jbe
arpl
cmc
fs
es
shll
test
fldenv
inc
popf
mov
stos
cmc
pusha
push
mov
dec
cmpsl
mov
xchg
sbb
arpl
mov
outsb
or
jo
or
sar
xchg
pop
or
pop
stos
xchg
shrb
jecxz
sbb
pop
ds
xchg
lods
aad
clc
pop
imul
mov
mov
xor
in
data16
mov
enter
xor
and
sahf
scas
out
lds
into
imul
mov
fs
shrl
mulb
leave
xchg
addl
or
in
adc
mov
iret
push
pop
pop
jmp
jmp
js
mov
in
pop
adc
hlt
aaa
xor
lea
adc
push
ds
jae
push
pop
in
clc
rolb
outsb
enter
iret
test
cmpsb
mov
push
mov
sbb
sarb
and
xchg
incl
jg
ljmp
xlat
test
outsl
jp
jmp
imul
inc
vcvttss2si
add
add
lods
mov
push
sarl
inc
stos
mov
test
fst
xchg
jne
mov
mov
mov
add
arpl
insl
ret
jl
xchg
outsb
jg
jne
push
in
add
jno
inc
inc
mov
mov
loop
xor
test
lock
or
shl
mov
movsb
sarl
jo
int3
sbb
test
stos
out
in
pop
jmp
aam
mov
shlb
mov
mov
sbb
js
jecxz
loope
lret
mov
sarb
mov
rol
sbb
push
cmp
insl
xchg
push
test
mov
out
mov
pop
cld
ret
and
rcl
repz
dec
fs
xor
ds
mov
dec
mov
jns
js
push
icebp
cli
dec
xchg
pop
dec
por
cmpl
test
xor
adc
repz
dec
mov
lcall
imul
sub
adcb
out
int3
mov
dec
fidivs
aam
and
push
mov
es
xor
es
rcrb
cmp
leave
ror
lea
cmp
int
adc
mov
mov
dec
shr
xchg
pusha
and
ss
sbb
pushw
adc
pop
fidivrl
xor
or
jl
cld
xchg
dec
inc
sarb
insb
addl
jbe
lret
push
adc
in
mov
jl
int
popa
lods
rolb
inc
ja
and
out
imul
jnp
push
test
sub
jo
mov
xor
addr16
sub
inc
xor
and
ret
gs
xor
in
test
cmp
push
cmpsl
fucomip
sub
imul
pop
push
jmp
adc
je
cmp
push
adc
test
xchg
cli
and
fistps
pop
and
nop
adcl
sbb
cmpsb
and
mov
jae
ds
jmp
das
mov
test
jno
arpl
mov
ljmp
test
sar
lcall
dec
jle
sub
cmp
movsb
pop
stos
mov
lahf
lcall
outsb
pop
fnstenv
jne
cmp
ret
sub
mov
icebp
pop
xchg
pop
xor
dec
notb
rorb
test
add
js
pop
mov
and
subl
add
or
xchg
cs
jb
xchg
push
xchg
push
push
dec
cwtl
lret
push
lods
es
imul
sub
sub
jl
xchg
mov
pusha
out
fcomps
out
push
rcrb
mov
and
sbb
aam
mov
sahf
leave
icebp
pusha
lock
in
push
aaa
out
lcall
icebp
push
popf
inc
mov
pusha
int
dec
sub
push
lahf
sbb
push
push
jo
xor
or
pop
push
daa
aad
in
jmp
mov
sbb
scas
jp
insb
popa
pop
dec
push
mov
xchg
mov
dec
imul
dec
in
cli
pop
ja
insl
xchg
fbld
aaa
push
push
and
int
hlt
sarb
xlat
jmp
rclb
data16
das
push
sbb
movsl
ljmp
cmpsb
xor
mov
pop
mov
push
sbb
add
sub
fcoml
xchg
cmc
cmc
rcr
xchg
rorl
lods
add
ljmp
xchg
aaa
add
mov
cmp
push
push
nop
faddl
pop
rcll
scas
add
pop
and
mov
and
cmp
sahf
pop
inc
mov
inc
sqrtps
ficomps
ljmp
push
repnz
test
cmp
repnz
dec
xchg
and
cmp
xchg
adc
fstp
clc
mov
cmp
cmp
pop
inc
rcll
pop
adc
fildll
hlt
out
popf
mov
aas
inc
cli
out
setge
dec
mov
xchg
pushl
mov
mov
xchg
aad
dec
sub
in
mov
mov
leave
clc
and
xor
push
pop
pushf
add
ljmp
cltd
dec
in
jg
push
movsb
stos
and
insl
imul
or
mov
mov
fadds
mov
push
inc
dec
cmp
aad
fdivrs
lret
inc
adc
inc
lods
xor
or
dec
pop
mov
push
cmc
push
push
xor
arpl
cmp
and
mov
adc
fwait
lods
cmp
mov
push
inc
arpl
ret
gs
pop
or
ret
jne
jge
adc
aas
add
cwtl
ret
sub
test
insb
mov
and
test
dec
cld
stc
in
push
xchg
xchg
xchg
stos
ret
out
inc
inc
sbb
out
inc
cmpsb
cs
test
inc
loope,pt
jne
xor
or
gs
xchg
mov
in
movsl
xchg
out
or
fwait
idiv
popf
jne
and
cmp
cmp
ficoml
leave
xor
aas
inc
popa
dec
icebp
push
clc
leave
xorb
mov
cmpsl
test
pop
fstps
out
mov
mov
push
push
jae
popa
sbb
push
push
adc
outsl
outsb
sub
pop
scas
mov
adc
sbb
enter
lods
addr16
pop
notl
sub
fwait
inc
sbb
in
add
push
mov
or
cmc
lods
or
sbb
mov
in
out
and
sub
je
inc
bound
lds
pushl
dec
out
mov
mov
lret
mov
mov
xchg
out
ss
dec
out
mov
mov
add
in
filds
mov
in
dec
iret
push
clc
lds
daa
mov
rorb
cmp
xor
fnsave
fildl
dec
out
inc
arpl
push
add
cltd
sub
bound
push
ljmp
sbb
das
mov
sbb
jbe
test
push
sbb
sub
aam
mov
test
jl
mov
push
test
pop
cld
adc
inc
addr16
lret
mov
sbb
jb
les
add
jae
dec
dec
lods
mov
lcall
or
sbb
mov
xchg
dec
xor
rcl
inc
and
popf
mov
jno
push
inc
jb
lret
shrl
ret
sub
pop
push
insb
bound
add
adc
daa
cmpb
adc
sbb
jmp
leave
pop
mov
pop
into
call
daa
lret
sahf
lods
cltd
sub
pushf
ret
or
aad
icebp
lea
outsb
add
ret
add
xlat
loope
sti
int3
dec
xlat
mov
mov
arpl
lret
call
mov
pop
ficoml
pop
aad
je
inc
clc
mov
out
and
aad
mov
cmp
jp
fidivrl
in
adc
out
pushf
insb
packuswb
lea
ss
ss
sarb
mov
mov
fldz
test
dec
mov
mov
fsincos
cmp
in
mov
lahf
inc
idivl
lret
mov
std
into
into
call
sbb
adcl
mov
lcall
into
imul
cmpsl
xchg
mov
sbb
xorb
and
xchg
pop
inc
shlb
aad
add
sub
fadds
enter
dec
sub
out
mov
scas
in
dec
movsl
cmpsl
xchg
pushf
xor
iret
rorb
leave
jmp
out
test
mov
hlt
ja
jge
add
push
imul
cmp
xchg
pop
or
pop
mov
xor
inc
add
neg
push
xor
popf
clc
inc
outsb
mov
lret
pusha
adc
jb
cmp
push
pushf
mov
and
std
xlat
xor
popa
mov
jecxz
push
or
xor
inc
push
mov
inc
test
lea
rorb
insb
aad
loopne
mov
xchg
arpl
repnz
cwtl
mov
mov
fmuls
adc
sbb
jnp
xor
sub
push
jmp
iret
jae
ds
sub
cs
hlt
xchg
xor
pop
sub
mov
lcall
xor
pop
mov
or
mov
test
int
and
xlat
jns
mov
dec
cld
out
and
dec
mov
pop
mov
addr16
mov
pop
imul
sub
jns
aad
cli
insl
jne
mov
inc
inc
std
xor
push
idivb
xor
push
imull
mov
sbb
cmpb
je
mov
cmp
pop
cwtl
mov
push
add
ljmp
mov
xchg
mov
lods
lds
adc
mov
dec
mov
repnz
nop
jnp
movsl
fdiv
mov
mov
adc
sbb
jg
fwait
jb
mov
out
jnp
fwait
sub
xchg
cwtl
inc
subl
out
pushf
push
cld
movsl
pop
in
inc
mov
lahf
outsb
jnp
popa
jno
mov
outsl
std
test
mov
or
cmpsb
enter
lret
fwait
int
gs
int
cmp
rcrl
xor
repnz
pusha
inc
in
nop
jo
pop
clc
out
and
adc
cmpxchg8b
subl
ss
push
mov
xor
fwait
jecxz
repz
dec
lret
lea
mov
in
daa
jns
movsb
test
mov
cmp
xor
mov
jl
cmp
pop
pop
gs
sub
sbb
jne
imul
add
iret
lock
mov
mov
aad
dec
dec
pop
imul
aam
test
f2xm1
in
ss
or
mov
cmpsl
sbb
data16
dec
xchg
pop
addl
into
bound
xor
and
push
pushf
sahf
jge
iret
lds
cmp
or
lds
jg
imul
cs
pop
insl
cli
sar
in
mov
add
jne
and
jle
loope
lea
dec
adc
and
scas
nop
rorb
dec
add
scas
xchg
or
add
fwait
pop
pop
aaa
add
test
sub
mov
pusha
xchg
cmpb
dec
and
add
pop
mov
test
push
fistps
push
adc
mov
js
cs
or
mov
push
and
mov
push
cmp
sub
scas
xor
xchg
add
mov
cmp
or
data16
repnz
int
jnp
push
xor
lods
mov
fmul
inc
sub
xchg
jb
push
push
cmp
roll
add
xor
cwtl
xchg
aam
dec
sub
fidivrs
mov
dec
fisttpll
aaa
insb
aad
xchg
stc
ret
mov
sahf
mov
jl
jg
inc
push
jne
test
pop
negl
mov
jl
sub
lods
push
jbe
and
add
adc
repnz
cmpsb
inc
or
and
ljmp
test
movsb
cmp
hlt
mov
ss
xchg
imull
pop
push
inc
jnp
call
inc
dec
flds
and
les
sbb
mov
mov
movsb
pop
and
sahf
mov
movsb
hlt
xor
lret
and
out
dec
jmp
lods
sub
jno
jo
je
cmp
fnstenv
mov
push
or
stos
test
mov
les
addb
cmp
push
cmp
icebp
jbe
xchg
inc
adc
xchg
ja
sub
adc
mov
ror
inc
mov
jg
in
inc
stc
cmp
rclb
ficompl
ret
or
pop
fistl
cmpsl
inc
lods
dec
pop
ret
add
xor
push
dec
or
loope
mov
jmp
or
push
push
mov
cmpsl
out
imul
aam
lods
jmp
mov
lret
mov
imul
das
xchg
es
ljmp
repnz
cmp
and
stc
bound
movsl
rorb
addb
ja
jne
addb
cli
jle
and
dec
daa
inc
cmp
out
iret
push
ljmp
shrb
pop
mov
popf
xchg
jmp
movsb
sub
push
call
xchg
mov
hlt
icebp
pop
pop
les
test
add
jo
mov
fnstsw
or
rorb
iret
add
jbe
sbb
push
nop
loopne
popf
das
add
loop
and
hlt
popf
xchg
icebp
pop
dec
cmp
test
cmp
out
gs
hlt
loopne
or
mov
mov
dec
xchg
test
loope
dec
inc
jbe
adc
dec
leave
stos
int3
or
xor
jge
xchg
mov
lods
inc
aaa
inc
loopne
and
aas
lds
adc
dec
dec
jecxz
call
sub
jnp
mov
sub
mov
.byte
mov
