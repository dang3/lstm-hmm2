insb
repz
shr
mov
and
pop
ja
enter
mov
mov
xor
addr16
dec
sub
mov
aam
bound
adc
cmp
ja
mov
cmp
add
popf
dec
push
jae
repz
jp
pop
cmpsl
mov
jge
push
lret
inc
inc
push
testb
stos
cmpsb
shll
cmp
jmp
or
jae
push
shrb
push
dec
adc
ja
subb
in
pop
popf
outsl
inc
jno
mov
pusha
cli
cmpsb
test
cltd
pop
or
sbb
cmp
adc
in
pushf
adc
mov
inc
shrb
mov
ds
mov
je
mov
mov
and
xlat
add
adc
clc
jmp
mov
call
xlat
mov
imul
loope
cld
or
inc
xchg
mov
push
cmp
pusha
sub
jbe
out
adc
cmc
mov
cmp
inc
cmp
adcl
xor
das
fstps
pop
shll
testl
push
jecxz
xchg
pop
jb
adc
jl
push
cs
test
cmp
sbb
or
fldcw
stos
add
xchg
sub
jg
js
out
pusha
jne
jmp
jns
mov
js
hlt
mov
insb
test
jns
or
mov
dec
xchg
or
adc
lret
mov
mov
push
sahf
push
aas
stos
xchg
xchg
sub
clc
push
and
and
mov
lds
stos
fldt
xchg
mov
add
jno
roll
nop
push
or
mov
xor
addl
cmp
or
mov
dec
mov
inc
add
mov
mov
push
scas
insb
push
lahf
lds
jns
fstl
popa
idivl
jne
dec
sbb
jle
jecxz
imul
mov
push
call
shrl
mov
das
push
lea
and
shlb
pop
fildll
pop
in
push
mov
dec
out
add
add
gs
loopne
dec
hlt
lods
and
fmuls
pusha
sbb
je
mov
in
push
fwait
mov
lds
fisubrs
int
adc
mov
movsl
lret
cmc
div
sub
xlat
mov
test
mov
mov
jmp
push
out
mov
shrl
and
push
dec
lds
cwtl
push
pop
xorl
test
cld
lcall
outsb
les
test
xor
inc
inc
iret
inc
ret
insl
int
jns
push
outsb
jmp
dec
mov
xchg
shrb
cltd
mov
push
xor
outsl
dec
je
nop
mov
sbb
pop
pusha
out
idivb
adc
jb
jmp
insl
push
in
dec
gs
inc
ja
xchg
popf
in
stc
sbbw
stos
test
shlb
data16
sbb
outsl
hlt
inc
ja
out
int
xchg
and
mov
jns
les
loopne
js
mov
jle
fdivrl
sub
clc
pop
fcoml
aas
outsb
shrl
sbb
aaa
sbb
jne
push
outsl
dec
rolb
sar
mov
add
mov
rcrl
xor
add
mov
imul
rorb
mov
sbb
mov
mov
enter
out
iret
jg
cmpsl
mov
xlat
data16
mov
mov
out
xchg
inc
ljmp
mov
add
hlt
lret
add
iret
xchg
cld
add
pop
jmp
xchg
push
into
pusha
aas
sub
push
fistps
push
mov
aad
dec
dec
aaa
inc
or
cltd
and
mov
ljmp
sar
pushf
je
sbb
stos
push
leave
dec
push
lods
mov
test
lret
loope
stc
les
cli
push
dec
xor
stos
loope
push
jl
stos
mov
scas
xchg
xor
sahf
test
sbb
fs
mov
cwtl
jmp
lcall
orl
wbinvd
std
je
pop
or
aaa
adc
cltd
adc
test
insb
fists
pop
jge
xor
push
and
dec
xchg
or
sub
add
sbb
imul
subb
cmc
jae
cltd
or
cld
sarl
rolb
outsb
inc
ret
pop
sbb
ret
movsb
xor
mov
cld
push
adc
mov
pop
loop
hlt
call
or
xchg
pop
mov
shl
clc
hlt
ja
mov
cmp
stos
xchg
ja
test
lahf
dec
jb
mov
inc
xchg
or
rclb
into
push
es
pop
ljmp
iret
lret
pop
lods
js
cli
hlt
aam
xorl
sbb
mov
fisttpl
hlt
aad
imul
fdivl
je
jae
in
inc
adc
xlat
fcompl
lret
movsb
inc
les
xorb
jae
push
sbb
stos
sub
mov
mov
dec
xor
cmc
rclb
fwait
es
aad
push
or
jp
popf
or
ds
mov
dec
cmp
adc
ja
add
cmp
je
les
popl
pop
clc
pop
add
pop
cmp
jnp
and
insl
ljmp
mov
or
cwtl
rcl
and
xchg
jb
sub
or
cmc
and
notb
cmp
cmpsl
aas
addr16
sub
xor
mov
sub
cli
sub
or
sbbb
inc
mov
add
call
scas
into
ss
mov
movsb
repz
or
cmc
leave
sbb
pushf
lds
or
std
pop
xchg
scas
sbb
imul
add
movsl
and
mov
das
xchg
pusha
mov
andb
jo
addr16
scas
or
ret
xor
out
jle
out
sub
out
test
pop
pusha
inc
xchg
je
pop
stc
gs
adc
or
pushf
roll
dec
scas
test
subb
dec
sub
adc
lods
cmp
in
rcl
push
sub
jnp
xor
out
sbb
lea
pop
test
fcmovnb
icebp
mov
inc
jnp
jnp
dec
in
jmp
outsb
push
and
or
inc
inc
cmp
sub
std
outsb
clc
push
in
mov
xchg
das
jno
paddsb
std
ds
orl
sti
push
js
testl
pop
cld
jge
std
fisubl
jnp
lea
sarl
mov
in
test
es
pop
fwait
adc
xchg
pop
hlt
xor
out
push
call
or
mov
pop
fadds
aad
or
mov
xor
pop
jb
outsl
mov
sarl
negl
xor
sub
loope
sub
add
or
cmpb
dec
or
xchg
je
xor
in
dec
sbb
cmp
and
mov
xchg
cmp
adcb
sub
push
xchg
push
lds
dec
push
xor
rorb
movups
sub
mov
xor
xchg
addr16
add
in
jp
mov
icebp
jmp
jp
pop
jno
fucomp
jo
jge
jae
and
inc
push
mov
rorl
add
out
mov
ss
add
mov
into
mov
hlt
mov
jg
into
loop
call
sub
fwait
jns
fldcw
jnp
jmp
fcomps
repnz
in
lods
sti
mul
imul
scas
and
pop
pop
push
jecxz
loop
shll
out
push
or
mov
cmpsl
xor
sub
push
cmpsb
cmpsb
push
add
adc
out
dec
dec
cltd
repz
sarb
pop
push
mov
push
jns
clc
aad
sahf
fdiv
dec
inc
fmull
mov
push
push
sbb
mov
dec
cwtl
call
mov
mov
aas
push
int3
and
insl
clc
sub
mov
sar
mov
stos
dec
push
mov
push
cld
pop
daa
or
lret
repz
or
dec
rcrb
xrelease
icebp
arpl
ja
sub
hlt
jmp
mov
addr16
testb
popa
imul
movsl
jbe
fmuls
shrl
mov
jle
mov
pop
imul
jmp
and
fisubrl
sub
xor
fidivrl
jno,pt
add
and
add
mov
fbstp
test
fchs
xor
sbb
pop
out
filds
andl
mov
icebp
andb
ja
and
enter
pop
je
pop
nop
aam
pop
mov
js
mov
loopne
jge
sbb
pop
jp
or
lds
inc
in
or
sar
mov
sub
pop
lret
inc
sub
shll
jns
dec
mov
aam
lret
inc
jle
dec
or
aam
sbb
rorl
aam
out
lods
jecxz
dec
add
stc
aad
cmp
lret
popf
fs
sub
sub
insb
inc
mov
inc
scas
lret
jg
popa
out
into
xor
dec
dec
or
in
xor
and
into
aas
mov
das
add
mov
lds
mov
sub
jnp
jb
sub
mov
pop
mov
loop
fnstcw
fisubrl
mov
mov
sub
outsl
sbbl
push
push
ja
or
bsf
sub
sbb
jae
or
mov
mov
add
lcall
test
and
mov
xchg
cmp
sub
mov
stc
rclb
jns
mov
loope
push
inc
cmp
mov
xchg
sub
xlat
jb
ja
out
xchg
adc
mov
xchg
cmp
add
xor
loope
cmp
nop
mov
and
fildll
aad
mov
xor
ret
push
ja
add
push
cli
mov
pusha
inc
sbb
cmp
jg
rol
shlb
or
cmp
xchg
iret
test
loope
and
pop
and
jmp
out
pop
call
fnsave
push
dec
pushf
sbb
daa
lcall
in
xor
dec
call
mov
mov
call
imul
push
inc
call
xor
sub
mov
dec
sub
or
call
dec
lea
dec
sub
dec
imul
lea
mov
or
inc
add
lea
dec
movsbl
call
inc
add
mov
inc
call
and
lea
call
xor
lea
inc
dec
lea
add
inc
movswl
add
pop
dec
lea
add
sub
pop
inc
add
pop
imul
sub
inc
dec
pop
movsbl
mov
inc
mov
sub
mov
inc
sub
pop
and
movzbl
pop
movswl
inc
mov
mov
movswl
call
lea
dec
inc
sub
ret
mov
dec
push
inc
inc
push
dec
mov
push
lea
inc
push
add
dec
push
inc
lea
mov
inc
mov
push
sub
ret
push
inc
sub
dec
sub
xor
movzwl
inc
push
mov
inc
xor
call
pop
ret
jmp
add
and
mov
inc
movzbl
movsbl
dec
xchg
lea
dec
lea
inc
xor
sub
dec
mov
imul
inc
mov
mov
dec
jne
movzbl
mov
lea
xor
pop
mov
mov
pop
mov
mov
pop
dec
add
imul
sub
mov
add
add
or
inc
imul
mov
add
ret
push
push
lea
dec
push
dec
lea
inc
inc
mov
sub
push
mov
lea
inc
dec
push
add
inc
lea
xor
lea
dec
sub
push
dec
mov
inc
push
mov
sub
xor
inc
lea
push
imul
dec
push
lea
or
pushl
mov
call
dec
add
lea
mov
movsbl
mov
lea
lea
add
pop
ret
add
cmp
jb
inc
xor
dec
movzwl
mov
or
mov
lea
lea
inc
add
inc
xor
add
mov
lea
mov
sub
lea
cmp
jb
movsbl
pop
inc
add
inc
add
inc
imul
mov
imul
dec
add
inc
and
xor
inc
dec
xor
imul
sub
mov
add
inc
test
jbe
imul
mov
or
dec
lea
inc
sub
movzbl
lea
mov
dec
imul
and
imul
mov
inc
lea
movzbl
inc
mov
add
sub
dec
and
sub
inc
mov
xor
add
mov
add
and
mov
dec
xor
mov
or
imul
imul
inc
add
movswl
dec
jne
sub
mov
lea
mov
dec
xor
inc
mov
mov
add
mov
mov
inc
movswl
lea
sub
mov
sub
add
mov
mov
add
dec
test
jbe
movzwl
mov
add
dec
inc
dec
dec
add
imul
dec
dec
inc
dec
movzbl
dec
inc
imul
lea
lea
add
add
movswl
and
lea
mov
mov
lea
mov
movzbl
mov
dec
add
mov
add
and
inc
mov
mov
mov
mov
movzbl
dec
lea
mov
add
add
mov
dec
add
movzbl
imul
add
add
imul
jmp
push
dec
inc
add
mov
dec
add
movzbl
lea
mov
add
sub
dec
inc
and
sub
lea
lea
inc
inc
mov
inc
lea
dec
dec
inc
add
add
mov
lea
mov
mov
inc
imul
or
sub
dec
add
dec
dec
cmp
je
add
mov
add
push
mov
call
call
dec
or
call
call
add
lea
mov
or
add
inc
imul
ret
dec
inc
pop
or
ret
push
inc
lea
mov
inc
lea
push
lea
mov
push
dec
push
or
push
inc
dec
imul
and
dec
call
imul
push
inc
movsbl
xor
sub
sub
add
neg
add
imul
inc
dec
inc
dec
mov
imul
inc
mov
mov
lea
inc
sub
mov
dec
je
mov
mov
lea
mov
mov
xor
mov
movsbl
imul
movzbl
dec
repnz
xor
mov
add
mov
jmp
inc
movzbl
mov
add
add
inc
mov
movswl
jmp
inc
add
add
dec
lea
inc
dec
add
pop
pop
ret
push
dec
mov
inc
inc
inc
dec
movzbl
lea
inc
mov
imul
inc
or
dec
sub
inc
dec
inc
mov
sub
inc
add
xor
imul
dec
dec
lea
movzwl
pop
ret
sub
sub
mov
dec
mov
mov
add
imul
mov
lea
mov
mov
dec
inc
xor
sub
dec
mov
mov
dec
inc
dec
and
movzwl
mov
dec
inc
cmp
jb
dec
push
inc
add
push
mov
add
push
dec
lea
xor
mov
inc
xor
dec
inc
xor
mov
mov
push
inc
add
mov
mov
inc
xor
imul
inc
mov
mov
mov
lea
xor
movzbl
inc
and
and
add
add
and
dec
add
inc
movzbl
and
sub
imul
add
add
dec
add
inc
lea
movzbl
mov
add
add
mov
dec
jmp
pop
call
mov
mov
movsb
mov
inc
into
imul
lock
xchg
pop
pop
pop
pop
pop
inc
or
xchg
xor
mov
mov
test
orl
adc
fs
loop
mov
cmc
loop
jne
inc
jle
inc
inc
sbb
push
ljmp
cmp
jbe
xchg
enter
call
sub
push
sbbb
inc
jo
adc
xor
adc
jl
or
pop
das
cli
fsubl
std
jp
inc
dec
jl
push
lods
pop
sbb
arpl
pop
loope
ficoml
mov
sar
push
cmp
dec
mov
lcall
push
test
add
scas
xchg
xchg
mov
jae
inc
lock
xchg
jl
insb
and
cmc
and
filds
xchg
pop
int
shll
dec
and
mov
and
or
js
inc
popa
divl
repnz
cmp
int
cmpsb
aas
jo
insb
xchg
sbb
sbb
mov
mov
insl
sti
cld
adc
push
adc
xor
shrb
je
mov
ss
in
jo
pushf
scas
or
cmpl
lret
pop
pop
out
xchg
xorl
pushf
les
stc
mov
rcrb
cmpsl
stos
repnz
rorl
push
inc
imul
mov
or
dec
scas
in
mov
lret
rcrl
loopne
popf
in
xor
enter
pop
ljmp
ds
loopne
and
adc
leave
mov
or
or
xorb
push
nop
pushf
cmpsl
stos
mov
mov
lods
enter
insl
mov
sbb
xor
ja
xor
ret
loope
flds
shll
std
outsl
push
scas
pop
mov
ss
dec
lods
andb
cwtl
cld
mov
push
and
outsb
sub
cld
pop
ss
fsubl
pop
sbb
fpatan
test
popa
jl
push
add
adc
cmp
jecxz
jl
rorb
cmp
mov
sahf
or
pop
movsl
xchg
popf
mov
roll
xor
lret
push
stos
mov
pop
ret
test
dec
and
mov
jge
pop
icebp
inc
lret
jo
add
mov
leave
lret
dec
xchg
mov
out
adc
mov
pop
or
test
arpl
ja
pop
adc
lcall
negl
push
xlat
out
dec
sub
insl
jge
std
mov
ljmp
daa
push
add
cmp
xadd
iret
cmp
loopne
inc
jmp
es
push
movl
dec
and
xchg
xor
push
lods
pop
pop
mov
pop
and
scas
push
ds
out
mov
push
mov
test
jl
xor
bound
jne
ds
lods
jg
je
add
sub
pop
fldl
clc
push
pop
lahf
aaa
xlat
das
insb
fsub
xor
xor
bound
cwtl
mov
scas
inc
xor
jle
xchg
xor
lahf
incb
clc
xor
cld
gs
xchg
repnz
fcompl
int3
ja
or
in
fstps
icebp
add
mov
mov
dec
js
cli
ja
jl
fists
negb
push
lea
xchg
mov
cmp
or
fistl
stc
sub
clc
loop
sahf
or
adc
hlt
add
in
jo
bound
push
es
sti
imul
jno
outsb
xor
and
xchg
mov
and
and
mov
jg
imul
mov
mov
push
movsl
jge
outsb
sbb
pop
movsl
pop
shlb
and
mov
stos
mov
lcall
aas
xchg
jecxz
inc
ljmp
movsl
xchg
lahf
or
push
out
ret
repnz
jge
add
ss
xchg
mov
add
add
push
mov
subb
xchg
push
and
dec
sbb
mov
lock
xchg
xor
inc
jns
in
insl
js
dec
jecxz
cmpb
cmp
dec
pop
or
push
inc
fldcw
loop
test
stos
xlat
sub
jl
arpl
inc
push
stc
jb
mov
jns
mov
add
cmpsl
int3
pushf
std
sub
dec
xchg
xor
mov
jle
jmp
dec
jae
jns
fiaddl
aam
push
or
psrld
test
push
push
xchg
jg
push
mov
jle,pn
cld
add
cmp
shll
xor
pop
xchg
sbb
lods
mov
shl
popa
test
out
cmpsl
xchg
out
mov
push
pop
mov
sbb
inc
cmpsl
cmp
cmp
imul
imul
lret
orps
mov
stos
outsb
push
and
xor
jmp
adc
mov
ljmp
test
mov
std
popf
pushf
jg
or
in
mov
sub
pop
and
mov
push
cwtl
loope
jl
sub
sbb
repnz
pop
xchg
fdivr
lcall
mov
mov
popf
shll
adc
ret
rorl
out
inc
cmp
xchg
mov
rorl
sub
les
jmp
nop
aad
xchg
inc
btc
cmp
fcomi
xor
cmpsb
testl
daa
mov
dec
or
repnz
xor
mov
shlb
jmp
bnd
sub
or
sbb
sarb
ficoml
mov
mov
fs
push
imul
pusha
jge
sarl
ret
pop
mov
cmp
mov
jp
sbb
xchg
push
testb
test
clc
sub
xchg
sub
bound
adc
cltd
push
cld
adc
aaa
xor
movsl
cmp
adc
ljmp
inc
and
pop
mov
sbb
out
hlt
out
rcrl
bound
aam
fnstsw
in
fwait
sti
cltd
jge
insb
sbb
mov
std
mov
arpl
test
arpl
aam
mov
ds
lcall
clc
cmpsb
sarl
adc
adc
add
adc
sbb
popa
lahf
jae
cmp
mov
pushf
inc
in
jg
outsl
pop
push
sbb
icebp
outsb
inc
pop
leave
inc
dec
iret
lret
mov
lock
pushf
test
aaa
inc
push
xor
xchg
cmc
jae
dec
out
add
fldenv
push
mov
push
fs
es
mov
and
xchg
adc
inc
call
cwtl
ljmp
mov
jg
mov
repz
stc
out
cmp
mov
movsb
in
sbb
popf
jle
cmp
mov
sub
push
cs
mov
cmp
sti
push
push
cmp
std
test
test
fcmovnu
loopne
addr16
cld
in
xor
pop
sub
push
push
cltd
lock
xchg
out
repz
xor
lcall
mov
mov
into
xchg
cli
ja
adc
inc
jbe
pop
hlt
xor
push
daa
sbb
mov
out
enter
ja
mov
and
popa
mov
mov
dec
fiadds
mov
jecxz
jl
aas
inc
pop
aad
je
xchg
or
jbe
xor
jmp
jmp
movsl
cmc
std
jge
and
push
fmull
dec
cmp
aad
mov
dec
cmpsl
fcomps
mov
adc
test
xchg
es
cmp
bound
pusha
ljmp
out
pop
mov
mov
mov
in
cwtl
rcrb
jg
cmp
repz
mov
dec
and
cmp
lock
cmp
add
cmp
fisttps
jg
dec
push
mov
push
rcrl
mov
aad
sub
sbb
push
fimuls
add
aaa
mov
rcrb
add
int
mov
sub
iret
cltd
dec
add
adc
mov
insl
mov
mov
lods
adc
aaa
sub
and
hlt
lret
movsb
loopne
jl
sub
lds
xadd
orl
dec
iret
lcall
fcomi
cmpsl
out
or
jns
das
xchg
movsl
mov
sbb
mov
sub
dec
sub
pop
insb
xchg
mov
pop
and
mov
inc
cs
jb
mov
out
pusha
pop
dec
fwait
pop
sbb
and
movsb
inc
xor
bound
test
outsl
jo
shl
aad
loopne
mov
xor
outsb
cmp
xchg
ds
mov
icebp
fimuls
outsb
es
clc
sbb
popa
std
sbb
add
pop
mov
ret
cltd
and
scas
cmp
sub
jnp
movsb
cmp
inc
pop
mov
stos
mov
daa
xchg
add
dec
imul
cli
mov
xlat
and
test
in
push
sbb
mov
xor
ret
nop
mov
jns
in
shrb
push
xchg
repnz
test
add
xchg
push
cmp
cmpl
and
or
pop
cmp
inc
test
push
call
cmp
pop
data16
clc
dec
faddl
xchg
lret
das
aaa
push
into
cmp
in
mov
ja
cltd
fstl
jge
rolb
dec
xchg
mov
mov
jmp
push
inc
shrl
push
xchg
ret
pop
in
jb
mov
jae
mov
std
mov
mov
mov
nop
dec
jb
xchg
lret
out
dec
stos
sbbl
ljmp
cmp
ljmp
bound
dec
lret
jge
inc
negb
jl
cli
lahf
sub
out
inc
mov
mov
cwtl
mov
cmp
ljmp
pop
cli
fsubs
stos
rol
mov
mov
and
cld
sti
jmp
xchg
adc
or
push
out
fistpll
push
lock
add
and
or
daa
add
cmp
dec
or
mov
fisttps
cmp
fcmovnu
mov
dec
shll
mov
jmp
dec
ljmp
or
loop
insb
xor
and
ret
cmp
xlat
xor
xchg
mov
fimuls
mov
in
jge
aam
or
addr16
sub
pop
out
bnd
or
xor
sbb
orb
ja
push
xor
inc
mov
ja
std
aaa
dec
loope
iret
cmp
loope
sbb
test
js
jmp
xchg
aam
mov
cmp
pop
sub
ret
cmp
notl
lret
pushf
pop
stos
in
and
js
add
push
out
cld
or
rcrl
push
push
ja
hlt
fs
fs
iret
sahf
dec
sub
mov
test
fnstcw
or
mov
adc
xchg
inc
out
icebp
aam
loop
bound
cmp
outsl
pushf
lds
dec
inc
sub
clc
mov
xchg
mov
cli
lods
test
movsl
or
in
mov
das
rclb
mov
lock
out
addr16
jle
mov
or
stc
xchg
mov
pusha
sub
or
mov
xchg
jmp
es
dec
mov
pop
iret
sbb
loop
sahf
clc
inc
subb
sbb
pop
mov
fcmovnbe
mov
test
cmpsb
std
jge
bound
int3
pop
neg
fwait
sbbl
dec
fsubrs
test
xchg
mov
mov
xor
xchg
fidivl
pop
cltd
jle
and
fstpl
shll
adc
or
lds
sub
jnp
lds
push
pop
frstor
push
sub
cmp
mov
dec
inc
sub
iret
leave
lods
jmp
inc
sbb
mov
lahf
mov
sbb
push
or
lea
dec
mov
into
inc
adc
cmp
cmpsl
pop
and
not
adc
dec
adc
fs
lods
jp
popf
push
cmpsl
ret
ss
loope
xor
inc
test
mov
sub
mov
mov
out
add
ret
xchg
xchg
dec
stos
test
leave
es
mov
pop
push
or
dec
stos
push
sbb
scas
fwait
roll
shlb
sbb
pop
les
jecxz,pt
fcompl
cltd
push
rcr
cs
ja
sbb
dec
cli
or
mov
scas
mov
or
jno
push
mov
mov
push
test
adc
verr
mov
dec
push
mov
stos
dec
jne
and
mov
adc
cmp
sub
dec
les
push
out
test
and
repnz
push
sbb
push
hlt
mov
in
enter
ljmp
out
arpl
inc
inc
loop
not
xor
add
outsl
push
das
jnp
pushf
mov
push
repnz
ds
cmp
test
mov
push
inc
mov
je
call
lcall
test
enter
sub
repnz
popf
test
jle
cmp
xor
test
xchg
sbb
int
gs
dec
push
faddl
pop
scas
sbb
cmp
add
cs
fldcw
sti
das
mov
adc
adc
or
mov
test
pushf
repnz
bound
sbb
cld
pop
or
dec
imul
lcall
mov
ja
adc
mov
loope
lds
insb
lods
mov
mov
popl
neg
fs
in
lea
out
push
push
push
sarl
inc
divb
fldt
inc
aam
xchg
nop
mov
mov
roll
imul
xlat
pop
dec
xor
mov
pop
sbb
jge
rcr
inc
dec
stos
addb
shlb
test
cmp
ror
push
in
in
into
and
shll
dec
cmp
jg
mov
cmp
jle
push
mov
adc
push
leave
bound
mov
push
and
jl
cs
loop
mov
cli
or
out
lea
adc
xchg
lcall
xchg
fmul
iret
outsl
sbbb
mov
ja
cmpsb
sbb
ljmp
pop
wrmsr
sbb
xchg
cmp
jnp
sbb
pop
sub
stc
cli
pop
leave
cwtl
rclb
stos
loop
cmp
scas
bound
add
insl
mov
jbe
dec
cli
hlt
dec
jns
addr16
add
shl
nop
cld
popf
inc
xor
dec
sbb
out
xor
adc
sub
sbb
push
or
push
mov
xchg
cltd
and
ja
mov
mov
push
pop
push
pop
lock
adc
adc
mov
inc
and
je
mov
insl
inc
push
dec
dec
pop
mov
jmp
js
mov
fadds
mov
cmp
sbb
sbb
cmp
pop
popf
mov
sub
in
push
add
adc
movsl
in
into
js
pop
lock
imul
loopne
fbld
mov
sub
aaa
leave
lgs
push
sub
movsb
jne
dec
xor
out
idivb
pop
ret
sar
cli
not
jb
lret
push
ret
cmpsl
fldcw
pop
arpl
loop
out
das
jmp
pop
fcmovnb
push
jg
hlt
xchg
jl
pop
xor
dec
cs
ljmp
ret
shl
scas
lret
xchg
dec
dec
std
mov
test
jno
dec
sti
lds
cmp
xchg
outsl
mov
data16
sahf
leave
pop
mov
leave
cmp
mov
dec
movsl
rcrb
rcrb
loopne
adc
pop
xor
outsb
pop
sub
lds
test
dec
lds
mov
decb
lcall
popa
pop
sub
mov
in
pop
cmp
pop
bound
aaa
adc
inc
add
dec
stos
push
leave
dec
mov
pop
mov
iret
aam
pop
clc
data16
sahf
add
dec
mov
sbb
call
push
test
leave
fcmovnbe
jo
lods
mov
push
push
mov
lods
sub
dec
je
test
xor
inc
mov
sub
clc
into
in
testb
adc
fsubrp
mov
cltd
lods
adc
les
pushf
and
lahf
or
add
push
dec
out
jl
cmp
sbb
pusha
std
fisttps
push
xor
std
add
subl
adc
scas
test
fildl
cmc
in
in
fs
fisubrl
mov
nop
add
sbb
pop
mov
mov
mov
cmp
inc
rcr
test
lods
mov
mov
cmp
cmp
mov
shl
in
mov
or
lock
adc
pop
std
adc
loope
sbb
repz
shrb
jbe
xchg
or
and
stos
clc
jbe
movl
mov
dec
sub
js
stos
daa
jmp
clc
pop
fwait
jbe
inc
push
fsub
push
xor
imul
xchg
push
clc
add
lahf
loope
ret
mov
cmp
dec
ja
scas
notl
icebp
jns
addr16
add
jp
or
push
xor
je
inc
cmpsl
arpl
and
rcr
pop
out
push
push
jno
inc
into
fisttpl
repnz
dec
das
lret
loop
mov
inc
imul
mov
imul
cmp
rorl
xor
jg
loopne
mov
stc
pushf
push
hlt
in
stos
mov
push
pop
cmp
je
lcall
out
sbb
xor
stos
in
jle
push
lret
push
out
mov
jb
xlat
xor
pop
pusha
cmp
or
arpl
ja
xor
nop
repz
leave
int
fdivr
clc
dec
or
das
jne
adc
pushf
adc
mov
jo
xchg
enter
adc
xchg
popa
stc
and
enter
in
inc
push
dec
shl
sbb
lea
sbb
dec
cltd
lock
outsl
lcall
or
mov
aas
out
scas
sbb
xchg
adc
mov
movsl
scas
mov
mov
jae
aaa
pop
ljmp
loope
mov
sarl
ja
jnp
pop
xchg
push
add
sbb
and
add
out
jg
push
inc
mov
orb
dec
rcrl
and
push
movsb
stos
xor
inc
push
inc
out
xchg
push
pushf
mov
inc
lret
test
jae
fdivrl
push
jbe
cmpsb
sub
movb
mov
mov
push
sub
loopne
pushw
sarl
roll
imul
out
and
mov
andb
stos
insl
cmp
xlat
aam
aaa
lock
shll
ja
test
sbb
jl
insb
out
jle
inc
adc
sbb
dec
fidivrs
push
xchg
fcoms
xchg
adc
or
push
mov
daa
jge
idivb
jle
xor
and
outsb
les
loopne
sti
loopne
lods
fcompl
xor
adc
jb
mov
pop
add
dec
cld
cmpsb
lods
shll
js
mul
pop
addr16
xchg
insl
or
and
mov
add
aas
lret
add
pop
cmp
push
sub
mov
lock
sbb
sbb
ss
mov
add
gs
int
loop
and
xchg
sub
cmp
dec
dec
sub
cmp
mov
jge,pn
inc
inc
push
add
jb
scas
sub
push
in
push
cli
xlat
test
outsl
push
mov
roll
inc
cltd
jecxz
psubq
fcmove
push
call
in
test
cld
mov
enter
aaa
sbb
sbb
sub
mov
ret
xor
shll
pop
stos
frstor
icebp
test
xchg
lods
pop
or
dec
jb
aad
es
notb
or
addb
addr16
push
leave
outsl
push
push
gs
rorb
sti
adc
test
aaa
adc
and
push
sub
dec
lret
ret
inc
xchg
mov
popa
xor
xor
stc
push
or
loopne
mov
pop
xor
fisubs
jge
xorl
cmp
push
nop
sbb
or
xor
add
add
aaa
pop
popf
aaa
mov
sbbl
mov
lahf
test
scas
cmpsl
insb
cld
sub
xchg
in
inc
fcomi
mov
dec
adc
imul
js
int3
sbb
je
jae
andl
xor
shlb
push
std
xlat
aad
jg
push
les
les
add
loopne
incl
mov
daa
cltd
scas
test
or
jg
pop
cmc
out
ret
inc
pop
cltd
push
mov
pop
inc
sbb
add
gs
lea
adc
popa
xor
fisubrl
test
test
inc
fwait
mov
or
loope
test
fbstp
out
jmp
aas
push
pushl
hlt
pop
sahf
sarl
adc
rcl
cmp
jecxz
call
out
lds
add
adc
add
insb
lods
cmp
scas
loop
mov
xor
nop
testb
addr16
mulb
imul
jmp
push
mov
fistl
js
add
call
ficoms
hlt
cs
subl
test
sarl
js
and
push
cli
xchg
fscale
adc
cli
dec
adc
test
ljmp
cltd
jle
mov
xor
je
and
popf
orl
sbb
mov
out
lds
add
jns,pt
rcr
mov
cwtl
fcmovnb
cmp
frndint
mov
and
dec
pop
lds
cmp
inc
mov
divb
sbb
mov
sub
inc
xor
xchg
div
les
xchg
js
cmp
inc
add
push
sti
xchg
or
scas
xchg
add
aaa
pop
xor
mov
lods
inc
jecxz
sbb
xchg
sbb
dec
lds
or
ja
add
jecxz
lods
and
push
pop
mov
push
mov
or
sub
pop
mov
push
fbld
cmp
pop
push
jo
sub
cs
sub
aad
push
adc
insb
dec
sub
pop
shr
fistpl
pop
push
mov
or
mov
popa
jle
ret
inc
dec
popa
mov
fsubs
adc
fistps
inc
sbb
mov
xchg
ds
daa
iret
mov
test
jb
sahf
xor
xchg
dec
adc
fistps
xchg
and
push
hlt
cwtl
jbe
push
arpl
test
int
adc
cmc
cmpsl
lods
gs
or
iret
xchg
stos
icebp
ja
mov
adc
xchg
dec
dec
sbb
into
in
mov
xor
stos
cmp
push
cmp
repnz
sub
rcrb
pop
mov
xchg
cmpl
mov
aas
dec
ss
xor
jp
mov
inc
lods
add
pop
out
mov
imul
mov
cmp
addr16
loop
push
out
xchg
scas
stos
insb
scas
xchg
mov
sahf
lods
cltd
and
fstl
xchg
inc
push
jne
dec
cmp
sub
cwtl
leave
lods
sub
inc
and
mov
or
ss
sub
lds
stos
add
pushf
dec
push
dec
fidivl
imul
jge
outsl
test
inc
mov
into
cmp
xchg
sti
aas
or
out
mov
jns
jge
test
insb
scas
lods
sub
rcrl
mov
mov
js
outsl
dec
popa
faddl
and
and
jne
shlb
icebp
mul
das
dec
jae
sub
mov
sbb
stc
cltd
stos
sbb
loop
enter
cli
lods
mov
movsb
stos
sbb
pop
lcall
pop
leave
push
fisubl
int
shrd
jmp
fsub
enter
sub
out
int
dec
jmp
mov
out
adc
out
lds
into
ds
push
xchg
outsb
and
loop
inc
mov
push
fidivs
lea
sbbl
xchg
add
cmp
addb
fisubs
pop
cmp
ljmp
out
dec
dec
iret
ds
or
sbb
shrl
add
sub
sbb
test
sub
aas
dec
stos
adc
lods
pop
inc
adc
jge
jecxz
sti
mov
das
mov
into
cmp
into
inc
ljmp
mov
push
pop
mov
lock
jbe
orl
mov
mov
popf
adc
movswl
jae
ret
cltd
out
push
lret
push
iret
insl
xchg
sbb
adc
adc
sbb
dec
cmp
jl
daa
push
mov
xchg
sbb
nop
scas
loope
lea
sbbb
lret
add
jmp
iret
jle
stos
out
sbb
inc
inc
fmul
push
inc
xchg
lods
cmp
xchg
jo
fsub
mov
rolb
mov
or
jle
add
sub
sahf
pusha
jbe
loop
aas
lret
sbb
fnstcw
xchg
xchg
mov
pop
inc
mov
push
mov
or
xor
gs
xchg
fcmovne
sti
adc
cmpsl
dec
push
js
inc
ds
les
lods
xchg
leave
adc
and
sti
out
sub
dec
add
adc
bound
andb
orps
ret
push
out
push
jg
shl
js
cmp
cltd
dec
inc
insb
int
push
je
push
in
xchg
jle
lea
mov
ret
sbb
ds
sub
js
sahf
pop
pusha
mov
test
sarb
add
fst
or
xor
in
xor
jle
sbb
or
inc
push
inc
xor
js
jnp
ljmp
push
add
push
push
sbb
ss
clc
repz
sbbl
in
push
lock
in
iret
dec
cmp
pop
lahf
in
or
js
mov
mov
popf
add
xor
jno
sahf
arpl
xor
jne
incl
mov
mov
repz
fdivl
fbstp
inc
jno
dec
ss
int3
into
in
cmc
mov
sbb
fisttps
test
mov
imul
fidivl
push
push
pop
addr16
in
fucomi
in
addl
test
cmp
jl
inc
sub
cmp
mov
xor
add
repnz
scas
fnstenv
data16
or
bound
push
add
inc
jle
ret
aad
xor
iret
inc
sbb
cltd
outsl
mov
adc
test
jle
lahf
pusha
jge,pt
int3
mov
scas
mov
lret
rol
in
fisubl
inc
imul
ret
call
orb
push
inc
test
lcall
jnp
dec
mov
pop
adc
dec
jno
into
add
mov
xor
int3
sbb
lea
jo
jo
insb
leave
loope
mov
out
ds
stos
mov
fdivp
out
in
roll
mov
jg
js
out
loop
test
sbb
test
in
cmp
pop
sub
pushf
mov
aaa
and
int3
daa
xorb
fstps
adc
xchg
sbb
es
gs
cmpsb
int3
push
push
stc
and
cmpsb
jno
and
mov
push
ljmp
cmp
popa
inc
loopne
xchg
popa
jno
cs
cmp
xchg
push
cmp
addr16
daa
or
loope
add
das
or
add
push
and
insl
aad
mov
dec
jecxz
cmpb
iret
fidivl
jl
mov
dec
sbb
pop
sarl
jp
push
int
out
dec
push
ljmp
cs
lret
push
mov
jbe
loopne
les
cmp
push
push
aas
popf
data16
push
iret
xchg
pop
xchg
repnz
push
cmpsb
pop
into
mov
push
nop
out
jl
mov
dec
data16
das
inc
leave
stc
test
add
dec
fsubs
xor
loopne
call
sub
fstl
sub
xchg
xlat
xchg
inc
sbb
mov
pusha
movsb
mov
push
shll
out
addr16
nop
rorl
mov
mov
mov
push
add
mov
ret
subb
add
mov
arpl
or
jp
jno
sub
mov
mov
inc
cmpb
xchg
xchg
add
sar
mov
mov
xor
mov
sub
mov
sbb
insl
jne
call
add
icebp
fsubrs
sbb
inc
lds
inc
mov
iret
iret
cmp
out
xor
flds
cmc
add
add
jl
dec
das
jg
orl
jno
mov
popa
mov
fsubrs
xchg
jecxz
add
push
ja
leave
mov
in
sbb
push
rorl
ljmp
data16
test
nop
mov
sbb
cltd
xchg
lods
xchg
loopne
jns
inc
cltd
sub
dec
sub
addl
cmp
push
mov
loope
loop
in
jmp
cmpl
add
xchg
imul
addr16
negl
fptan
adc
pop
mov
shll
popf
subl
cmp
int3
mov
inc
nop
dec
cwtl
shll
pop
in
repnz
mov
neg
in
or
dec
dec
mov
mov
jnp
cld
negb
or
jo
inc
mov
jmp
dec
cmp
lock
push
jnp
test
int
nop
cld
push
pop
mov
cli
sbb
mov
iret
cmpsl
pusha
rol
in
sbb
movsb
aad
inc
or
ret
cwtl
jl
movsb
mov
xchg
or
dec
psllq
xchg
ss
cmp
in
out
and
pop
dec
jge
ret
int3
xchg
jne
mov
adc
xor
mov
bound
inc
pushf
sbb
vfrczss
or
movsl
xlat
insl
dec
add
in
loop
xchg
cmp
arpl
repnz
pop
sub
out
inc
pop
mov
xchg
popf
adc
imul
aad
jns
imul
sub
fwait
xchg
pop
subb
in
push
sub
bound
imul
stc
mov
daa
push
aaa
push
imul
mull
mov
xor
mov
repnz
and
cmp
dec
outsb
push
and
icebp
mov
ja
mov
rcll
aam
and
mov
inc
mov
sti
mov
movsb
fldt
jmp
leave
imul
dec
push
orl
or
inc
daa
stos
lock
mov
flds
imul
pop
jp
scas
pop
jmp
fdivrl
jecxz
and
pop
sbbb
jmp
mov
xchg
mov
jo
sub
add
mov
pop
dec
cmp
rol
fstpt
jne
test
xor
add
and
js
inc
arpl
push
pushf
sub
nop
and
cli
jns
test
in
push
lcall
lea
in
lahf
repz
xchg
dec
int3
mov
fdiv
ljmp
xlat
scas
lods
cmc
jb
in
adc
in
inc
je
mov
fcmovne
push
xchg
stos
mov
aas
imul
sbb
adc
sahf
fdivr
sub
sbb
xchg
jmp
call
ljmp
ret
mov
jmp
pop
xchg
js
outsl
pushf
sbb
sbb
fimuls
js
in
sub
jle
fcoms
ljmp
mov
inc
int
dec
pop
arpl
jnp
lret
pop
jbe
dec
adc
fsubrl
enter
mov
lods
std
push
push
daa
testl
cmp
xchg
cmp
mov
loopne
cmc
xchg
cs
pop
mov
hlt
mov
mov
stos
stc
out
clc
cmpsl
xor
xor
jnp
mov
test
popa
mov
adc
icebp
inc
and
fimull
inc
cmp
bts
push
insb
or
pop
aas
jp
imul
clc
es
or
nop
jo
add
imul
aaa
push
sub
minps
aad
lods
or
fs
je
xor
adc
push
into
sbb
gs
inc
stc
lds
add
aaa
inc
xor
xchg
jb
testl
xchg
mov
mov
cmp
icebp
sbb
ds
movaps
pop
sbb
push
cmp
sbb
mov
out
js
xor
inc
push
cli
sti
ja
movsb
daa
adc
fisubrs
shl
sti
sub
test
bound
fstl
pop
rcrl
add
das
ror
lret
push
mov
sbb
mov
mov
and
xchg
jo
pusha
xor
popa
mov
ds
addb
imul
or
sbb
xor
push
shll
xchg
jo
sbb
loop
lods
inc
or
inc
adc
fwait
or
lea
ret
mov
leave
mov
lds
out
add
stos
dec
mov
icebp
add
push
xor
sub
std
fs
push
mov
push
mov
in
nop
cld
and
mov
fbstp
lock
mov
rolb
popa
add
fs
mov
das
in
dec
pop
mov
pop
sbb
sub
clc
jle
xchg
pop
push
or
cs
pusha
std
dec
cs
pop
dec
push
fwait
xchg
scas
or
in
jp
mov
fnstcw
push
sti
ljmp
inc
or
xchg
xor
dec
mov
add
mull
psrad
dec
lcall
adc
es
int3
cs
in
cmp
add
fnsave
mov
xchg
xchg
bswap
mov
adc
mov
lahf
mov
ficomps
xor
fsubr
repz
stc
pop
sub
loop
imul
fsubrs
test
jns
sbb
xor
sub
and
xor
shlb
jl
cmpl
or
call
movsl
jp
int
pop
jo
mov
mov
cli
movl
mov
scas
sub
outsb
or
dec
push
xchg
and
pop
imul
aam
lret
pop
loope
test
dec
or
fcompl
fs
cmp
and
popf
mov
js
push
xlat
or
and
adc
imul
sti
imul
lods
mov
test
hlt
xor
add
inc
or
leave
mov
inc
sbb
cmpsl
push
sahf
sub
or
ljmp
out
add
mov
dec
cmc
imul
push
repnz
adc
pop
dec
ja
adc
push
sbb
fsubrl
cwtl
and
test
ret
jge
js
adc
daa
ror
fiadds
jecxz
dec
xchg
mov
jo
xadd
inc
jae
loope
or
cs
inc
mov
pop
icebp
cmp
ret
iret
dec
ja
sub
stc
or
sbb
or
or
ret
adc
fisubrs
arpl
mov
idivl
and
sub
nop
fwait
mov
lock
or
rcrb
xchg
ret
ljmp
lds
inc
xchg
push
fldcw
mov
xchg
pop
out
lahf
mov
sub
sahf
adc
enter
lds
dec
lods
jbe
xchg
push
push
mov
dec
fs
ss
mov
out
jecxz
mov
mov
xlat
int3
add
push
push
sahf
xchg
sub
cs
movsl
test
lret
mov
adc
fld
sti
add
xchg
imul
jae
mov
icebp
inc
outsl
adc
push
xor
sbb
int
and
cmp
mov
repnz
dec
xlat
mov
push
dec
test
adc
popa
mov
mov
jmp
xchg
adc
cmp
xlat
xchg
js
hlt
jbe
push
cli
mov
dec
fisttpll
aam
jle
mov
sub
daa
call
push
add
jmp
mov
nop
mov
mov
pop
nop
xlat
jno
lds
lcall
fmuls
in
lret
mov
mov
xchg
fidivl
cmp
xchg
shlb
test
mov
jo
and
ret
inc
loopne
jae
sbb
jne
mov
lret
call
lods
in
xorb
imul
dec
int
push
pushl
xor
xor
push
fsubl
inc
js
mov
jmp
xchg
insb
mov
jecxz
dec
jmp
imul
mov
cld
pop
or
mov
icebp
ss
inc
cs
adc
cmp
mov
and
xchg
pop
and
jmp
ret
xor
sar
call
jb
mov
pop
shrb
sub
push
mov
into
jnp
aas
int
xor
jg
sbb
iret
fucom
vmread
arpl
test
fcmovbe
lret
arpl
sub
add
xchg
jecxz
data16
sarl
test
push
mov
mov
repz
mov
cmp
aas
imul
into
je
fwait
stos
xor
leave
add
stos
push
int3
jmp
push
mov
cs
int
sbb
inc
mov
arpl
inc
arpl
cld
mov
aaa
mov
pop
adc
mov
roll
xchg
inc
fistpll
pop
pop
pop
jmp
gs
cmp
js
add
sahf
in
inc
mov
gs
xchg
outsl
cmp
jl
sbb
sahf
sbb
insb
jmp
pop
push
adc
jp
cmp
leave
mov
xchg
jns
mov
push
test
xchg
aas
sbb
lret
icebp
lret
adc
or
dec
inc
cmp
ljmp
mov
or
push
fs
mov
sub
mov
mov
jge
lock
jg
insb
xchg
xor
pop
cli
imul
sbb
scas
ds
ret
mov
pusha
sahf
xchg
mov
jbe
mov
or
pop
clc
jg
jp
ljmp
dec
and
pop
mov
out
leave
sub
fstpt
fwait
add
mov
push
mov
bound
sub
sbb
hlt
pop
xchg
mov
dec
mov
shl
mov
frstor
cmpl
sbb
aaa
sub
add
loop
aaa
outsb
or
punpcklbw
inc
je
sub
fsubr
jecxz
push
jnp
stc
stos
push
mov
sbb
push
out
push
jb
lods
je
pop
push
repnz
sub
and
or
push
push
stos
dec
xorb
shll
inc
sub
and
push
mov
aas
cmpsb
xchg
rclb
cmpsl
mov
inc
loopne
xor
add
sti
add
nop
jmp
lret
cli
rolb
mul
lret
fs
ss
mov
xorb
popa
sarb
cli
mov
push
push
inc
clc
jmp
or
int
and
add
jg
cld
dec
hlt
pop
rcrb
mov
cmpsb
mov
scas
popa
xorb
or
test
cmp
mov
push
pop
jbe
pop
dec
stc
je
jecxz
sbb
dec
movsl
in
cwtl
fs
jns
sbb
int3
mov
xor
push
lahf
ljmp
dec
jno
pop
loopne
mov
aaa
and
and
dec
dec
inc
adc
into
add
lds
add
std
aas
sub
cmpsb
out
loope
mov
xchg
jnp
sub
push
push
cmc
sub
scas
gs
xchg
push
imul
xchg
das
push
inc
cltd
lods
test
or
push
mov
or
xchg
pop
xlat
cmpsl
sub
dec
adc
adc
movsl
scas
int3
xchg
sub
fdivrs
stos
popa
ja
cmc
cmpsb
xlat
xor
test
je
imul
sti
push
jle
fnstsw
stos
pop
pusha
dec
sub
call
in
lahf
ds
push
insb
gs
out
xchg
add
aas
pop
in
insb
jbe
call
mov
cmp
pop
lock
mov
lret
nop
ret
pop
cld
bound
lea
out
or
fs
add
aas
mov
push
adc
sub
pop
ror
ljmp
jl
add
jecxz
push
inc
or
xchg
in
pushf
pop
mov
test
sti
outsb
test
js
bound
pop
adc
pop
sahf
lds
outsb
je
outsb
lret
cmpsb
cmp
into
and
cmp
lds
and
ret
cmp
repz
dec
cltd
sub
or
popf
inc
jo
addr16
adc
jb
jg
repz
cmp
jb
fs
test
push
mov
sub
cmp
inc
ja
cmp
pop
or
mov
fcompl
add
and
adc
mov
aam
pop
cmp
mov
aad
movlps
jge
out
adc
mov
mov
xor
mov
mov
outsb
jg
pop
lods
mov
cmp
xor
pushf
movntq
out
sub
pop
aaa
sub
cwtl
stos
mov
jae
cli
or
pop
loop
pop
movsl
inc
inc
rol
mov
repz
pop
cmp
in
mov
sub
jns
push
arpl
call
inc
xchg
adc
sub
out
sbb
inc
push
push
gs
or
push
imul
xor
push
repz
dec
std
push
ret
and
cmc
mov
ret
testb
sti
xor
inc
mov
jno
negb
and
je
pop
insb
addr16
fmulp
sbb
arpl
push
fadds
sbb
push
mov
clc
lods
sbb
sub
mov
leave
cmp
jle
shrb
sub
jmp
pop
enter
nop
xchg
aad
pop
scas
add
mov
mov
jno
sahf
push
lret
movl
leave
movsb
xlat
mov
dec
mov
dec
mov
mov
repz
mov
jl
int
stc
rcl
mov
popa
jb
lods
xlat
les
outsl
adc
cmpsb
xlat
sub
mov
jp
inc
cmp
xor
sar
mov
jne
inc
das
push
ljmp
loope
je
cmp
xchg
push
stos
cld
xor
adc
dec
jne
rcrb
and
adc
or
das
iret
mov
cmp
add
ds
scas
cmp
mov
fs
adc
fs
push
sti
jae
rclb
add
mov
push
push
test
sub
adc
jp
out
dec
lret
and
adc
test
xor
lret
inc
cmp
cmp
cli
mov
testb
ret
stos
or
add
cmp
pop
push
movsl
test
iret
and
rorl
cli
movsb
jp
lret
hlt
aad
inc
pushf
inc
jp
icebp
ja
insb
es
repz
mov
add
add
jle
aaa
scas
iret
loopne
test
loop
test
sbb
mov
cmp
pop
and
repz
xchg
adc
xor
xor
sub
push
jge
dec
ss
in
sub
add
mov
aam
mov
push
sahf
and
adc
add
lds
daa
aad
lods
dec
xchg
jne
fisttpl
mov
xchg
outsb
or
inc
sbb
add
iret
ficomps
ljmp
popa
push
pop
std
sbb
aad
add
pop
cwtl
imul
sbb
fwait
aam
hlt
daa
andl
test
mov
mov
imul
ljmp
out
rcl
loop
ljmp
xlat
pusha
pop
movsl
stc
push
and
dec
jb
sub
repnz
jnp
fwait
dec
cmp
iret
in
ret
enter
ljmp
test
into
xlat
add
popa
sahf
or
xlat
push
add
mov
or
fcom
pop
xchg
jp
mov
mov
sbb
mov
pop
jns
aad
jno
int3
fisubrl
call
xor
movsl
jl
adc
or
sbb
mov
scas
scas
adc
lahf
mov
insl
pop
insb
int
in
sub
shrb
cmp
cltd
push
or
sbb
mov
cmp
add
mov
xchg
nop
movsl
jne
lret
inc
or
cmp
push
aaa
mov
jmp
fsubl
xchg
mov
not
jne
cld
dec
or
int
lret
sbb
add
dec
push
xchg
pop
mov
xorl
pop
add
xchg
icebp
jno
sub
jb
notl
xchg
xchg
push
inc
pop
sub
sbb
adc
in
ret
outsb
add
pop
mov
in
or
mov
sub
test
adc
lods
ja
mov
cmp
jg
int
jno
mov
push
jecxz
jbe
cld
push
lds
mov
in
xor
in
inc
adc
inc
lods
push
cmp
xor
mulb
pop
dec
pop
xchg
jb
es
pop
pop
cmp
icebp
adc
lock
adc
mov
pop
dec
pushf
repnz
repnz
jg
pushl
pop
sbb
jb
lock
jle
dec
jecxz
or
add
sbb
hlt
push
popa
ret
test
stos
xchg
sub
lahf
lret
out
imul
sub
sbbl
push
sbb
ljmp
cmpsl
push
mov
push
mov
ret
rcl
cli
imul
and
out
popf
and
stos
inc
fmull
scas
test
dec
push
and
dec
mov
jg
movups
jp
lret
xor
stc
fcompl
mov
shrb
lahf
out
push
jmp
add
loope
ret
aaa
inc
stos
mov
in
mov
jo
in
and
push
push
hlt
loopne
adc
jae
test
insl
sahf
and
push
jnp
inc
lahf
mov
add
dec
arpl
cmp
pop
fidivs
lods
mov
push
leave
fwait
mov
sbb
test
gs
jbe
jle
adc
xchg
mov
and
jo
bound
jp
out
xor
outsb
lea
sbb
adc
push
mov
lds
jmp
dec
sbb
mov
gs
enter
fs
sbb
xchg
sub
mov
arpl
add
add
icebp
push
adc
pop
orl
clc
lea
roll
push
dec
mov
loopne
and
dec
pop
mov
adc
rcr
push
jbe
les
jbe
test
adc
enter
dec
add
mov
push
mov
je
insb
movsl
mov
fidivrl
jp
les
xchg
cmp
out
pop
insb
insb
and
and
ret
bound
idivb
pop
pop
jo
fstl
pop
push
jne
roll
mov
jne
mov
ficoms
std
in
lods
cld
mov
aad
orb
faddl
in
dec
cmpsl
pop
leave
sahf
pop
mov
scas
stc
mov
lcall
outsl
mov
scas
mov
xchg
nop
and
ret
mov
call
incb
jmp
xchg
xor
xchg
and
lods
mov
sub
sub
icebp
popa
mov
cmp
dec
jae
inc
jle
pop
push
lret
cmc
mov
jnp
shl
cwtl
cmp
std
into
orb
push
jl
mov
jmp
sub
xor
pop
popf
cmp
test
stos
xchg
fildl
xchg
loopne
mov
lods
pushf
push
pop
sub
xchg
fwait
add
lcall
pop
scas
leave
icebp
mov
push
fucomp
adc
repnz
push
stc
aaa
cmp
dec
divb
mov
shlb
out
out
sbb
xchg
dec
ss
inc
inc
pop
mov
inc
sub
jb
idivl
push
stc
sbb
sbb
inc
popa
bound
hlt
and
cmp
mov
enter
fldt
adc
xchg
adc
push
xor
inc
icebp
jo
push
jge
pop
xchg
and
push
dec
xchg
clc
sbb
push
popa
nop
int
inc
xchg
jne
lahf
jb
adc
ljmp
jno
ss
imul
les
inc
add
dec
popa
jbe
mov
jecxz
mov
jle
cmp
es
pop
std
aas
cwtl
sub
shl
and
fnstsw
stos
sub
jo
testl
xchg
sahf
js
fldt
vaesdec
sub
xchg
xchg
xor
mov
dec
ljmp
cmp
push
xchg
loope
jg
pop
aam
pop
sbb
repnz
xorb
add
cmp
dec
cld
cmp
mov
and
stos
cmp
jne
xlat
cmp
sub
jle
push
xchg
shll
add
adc
gs
push
sub
cmp
addl
mov
dec
mov
push
sbb
sbb
aam
sub
fnstcw
jmp
jp
push
xor
mov
js
js
or
je
mov
fldt
fwait
icebp
adc
lahf
jecxz
xor
leave
lret
fwait
xor
mov
xor
add
ret
pop
add
dec
pop
insb
mov
aam
pushf
mov
std
ficoml
nop
ljmp
je
and
mov
sub
sub
movsb
jmp
lret
out
fisubl
dec
adcl
cmpb
cld
out
add
ret
sahf
lcall
and
inc
js
and
mov
cld
add
sbb
lret
jecxz
xor
jnp
js
fsub
in
and
test
test
movsl
xorl
ret
pop
into
cmp
mov
dec
int
xor
pop
mov
push
add
iret
fidivrl
add
push
push
fimuls
das
dec
inc
lcall
out
fdivrs
sbbb
aaa
xchg
fldcw
jmp
jae
in
dec
scas
js
out
dec
jmp
cmpsl
sbb
insb
inc
loope
cmpsb
adc
lcall
mov
mov
jne
dec
pop
jl
mov
add
sub
shll
pop
fwait
repz
push
fisttps
pushf
fwait
sub
cmpsb
jl
iret
roll
or
aas
out
icebp
push
fistpl
jne
sub
mov
jl
and
mov
jns
out
stos
push
std
mov
test
test
and
bnd
dec
imul
mov
and
pop
mov
xor
sti
or
push
inc
ja
into
pop
mov
xor
xchg
inc
xor
enter
mov
pop
stos
pop
jmp
jp
push
pop
add
and
inc
lcall
inc
mov
xor
in
mov
mov
int3
cmc
cmc
push
nop
outsb
inc
mov
std
or
inc
fwait
je
mov
pop
sti
mov
add
pop
adc
jae
arpl
xchg
xor
test
or
inc
fldl
lcall
xor
mov
test
adc
adc
jns
pop
clc
cmp
push
add
pop
xor
bound
pop
or
loope
adc
icebp
out
mov
push
mov
testb
int
sbb
pop
push
push
xor
int3
and
xor
add
pop
jae
roll
xor
jb
inc
inc
pop
jl
jl
inc
stos
inc
mov
enter
repnz
test
fnstenv
add
pushl
int
fnclex
shll
xor
hlt
push
insb
out
adc
das
pop
dec
fisubrs
out
dec
inc
and
loopne
mov
lret
shll
lods
sub
ftst
je
ja
xchg
ret
and
sbb
or
mov
je
mov
mov
mov
jecxz
xchg
fnstsw
cltd
xor
fistpl
xchg
inc
rcl
cmp
leave
shll
mov
xchg
stc
lods
add
mov
scas
sub
or
lahf
aas
fcompl
cmp
arpl
mov
lcall
jae
fwait
mov
enter
pop
ret
and
xchg
sbb
adc
jmp
pushf
rcr
cld
pop
mov
mov
add
lea
cmp
mov
cmc
cmovno
pop
add
rcl
mov
jno
leave
stc
push
ljmp
leave
mov
loop
push
hlt
cwtl
cmc
jmp
sub
inc
xchg
data16
mov
push
sub
into
pushf
popf
call
sbb
jns
les
aam
mov
sub
int
popa
adc
sub
xor
mov
push
inc
mov
fdivr
and
outsb
cmp
dec
nop
adc
cmovne
cmc
dec
jecxz
add
ja
arpl
lods
push
enter
cltd
sub
std
leave
cmp
int
inc
scas
scas
or
cmpsl
sbb
out
inc
test
xchg
repz
cmovns
leave
test
mov
jp
mov
cmp
mov
stc
cld
cli
test
add
xor
pop
shrl
scas
cltd
jne
mov
or
and
or
outsb
inc
adc
adc
popa
push
dec
arpl
imul
adc
pushf
pop
adc
repnz
jb
lret
scas
popa
test
inc
loopne
movsl
pop
and
arpl
lock
dec
sbb
sbb
push
fprem
mov
imul
sahf
dec
test
loopne
mov
lods
jae
cmpsb
loop
xchg
jp
int
ds
or
xchg
xchg
inc
popa
cmc
push
inc
fbld
sbb
arpl
push
jne
xlat
scas
dec
inc
push
out
cmp
mov
mov
rcrl
xor
push
sub
push
cli
add
stc
pop
sbb
icebp
push
dec
fcompl
mov
lods
sbb
push
jns
mov
jne
add
imul
cs
or
cmc
push
shll
mov
lods
xor
clc
stc
dec
add
push
fs
jmp
cmp
or
iret
or
mov
adc
pusha
fbld
cmp
movsb
inc
int3
dec
mov
and
enter
in
rolb
mov
xor
jae
fdivs
xchg
flds
and
mov
cmp
push
dec
dec
or
rol
adc
add
mov
pop
cs
xchg
sbb
sarl
sub
stc
push
mov
add
push
mov
shrb
jmp
icebp
lcall
outsl
dec
or
push
bound
jae
jle
ret
push
inc
jo
push
mov
xchg
loope
add
cmovs
out
and
aaa
in
cmp
int
lea
xor
out
or
cmp
push
gs
cmp
leave
and
lds
test
jecxz
fs
test
mov
jg
push
test
fcmovb
xchg
xlat
jns
aaa
add
inc
cld
sub
clc
lcall
into
icebp
ja
out
sbb
cmp
ljmp
out
dec
in
flds
jl
mov
push
jge
mov
add
mov
enter
jae
leave
and
mov
mov
jecxz
xchg
push
push
leave
and
inc
stos
xchg
ds
repnz
ja
loop
das
push
dec
ja
push
mov
sub
das
lret
dec
loope
add
sub
fdivl
andb
push
sub
add
imul
push
sub
jmp
mov
adc
into
dec
aaa
dec
inc
lret
jb
push
cmp
and
xchg
sahf
out
lahf
or
gs
mov
sbbb
push
inc
hlt
loope
push
pop
int3
sbb
pop
mov
fdivrl
adc
scas
aad
dec
je
sahf
in
insb
lcall
daa
sub
fadds
jnp
fld
pushl
add
and
fucom
push
lods
dec
mov
jmp
jo
ss
adc
jb
pop
arpl
cltd
in
imul
fucomip
int
in
add
test
mov
cmp
jmp
cmp
mov
lret
dec
icebp
sbb
shlb
jge
lds
subb
lock
inc
push
sub
pop
popf
jns
popf
cmpsb
push
xor
ljmp
inc
sbb
adcb
xor
loope
push
lret
add
dec
mov
out
hlt
cmpsb
xor
inc
mov
xchg
inc
jo
ss
sub
lea
jmp
gs
jmp
push
pop
pusha
add
andb
daa
fdivs
adc
xor
mov
cmp
out
imul
dec
cmp
popf
aam
lods
aam
sbb
sub
cmp
push
aam
xor
push
mov
hlt
aas
mov
sub
sbb
jo
lock
push
out
faddl
mov
pop
lds
repnz
jne
jae
and
add
outsb
orb
sbb
jbe
ss
lret
cwtl
je
jo
mov
das
imul
sbb
add
in
mov
je
ljmp
pusha
call
or
jno
dec
lret
dec
icebp
cmp
gs
adc
fisttps
call
es
mov
pop
in
ds
ret
xor
xor
push
pop
das
data16
ficomps
mov
data16
mov
mov
sub
inc
jge
bound
push
aaa
push
mov
pusha
mov
inc
cmp
iret
shlb
pop
sub
push
repz
int
or
mov
sub
dec
dec
and
je
mov
dec
icebp
mov
lahf
int
cwtl
xor
iret
aad
aaa
dec
test
inc
inc
xchg
aas
cld
or
or
clc
cmp
jge
call
fistpl
mov
pushf
xchg
mov
add
call
cmp
fidivl
xchg
xor
fs
mov
push
ffree
inc
fidivl
inc
mov
insb
jge
or
adc
insb
inc
imul
fstpl
mov
addl
or
sbb
lcall
gs
dec
and
in
test
aaa
jmp
mov
adc
adc
xchg
sbbb
xchg
rorl
mov
pop
xchg
mov
ficoms
cmp
dec
mov
pop
cmp
out
es
cmp
inc
jl,pn
adc
xchg
out
sbb
or
cmp
pop
icebp
xchg
test
in
push
jb
sub
and
xchg
sub
xchg
dec
jg
mov
add
test
or
jle
iret
add
mov
in
mov
dec
pop
and
jle
incl
mov
inc
jp
movb
jns
fmuls
loopne
cwtl
jae
repz
jle
js,pt
inc
xlat
sbb
fs
mov
aad
out
xor
sbb
add
mov
mov
xlat
sbb
leave
out
and
mov
mov
mov
add
push
lcall
add
inc
in
into
push
pop
repz
mov
testb
mov
sbb
adc
loope
mov
imul
push
mov
add
int
int
leave
ror
jmp
push
test
stc
adc
and
pop
cld
jg
jo
mov
loope
inc
fwait
test
cwtl
or
mov
push
mov
pop
mov
test
mov
imul
aam
in
pop
mov
push
cli
out
out
arpl
cmp
xchg
adc
icebp
stc
jle
dec
push
mov
mov
xor
out
jge
data16
in
add
imul
call
or
add
mov
sub
mov
fiadds
les
xchg
and
sysexit
enter
dec
xor
pop
mov
adc
jbe
mov
jecxz
insl
inc
inc
lret
stc
lock
arpl
cli
or
aas
adc
mov
stc
or
jle
sub
or
fwait
inc
push
fisubrs
mov
cmpsb
cltd
add
out
mov
cmp
xor
sahf
push
push
xlat
cmp
pop
mov
mov
adc
jae
in
aad
push
dec
out
nop
jl
jnp
imul
push
mov
pop
pop
push
push
sbb
xor
rorb
push
mov
jg
add
clc
rcrl
inc
fnstsw
cmp
jno
ret
scas
xor
jb
mov
gs
dec
aad
jecxz
les
add
popa
cmpsl
pop
jbe
jbe
loopne
cs
test
cmp
mov
into
mov
dec
mov
cmp
in
push
stos
sub
je
dec
out
xlat
loop
dec
packssdw
neg
xchg
daa
xor
sahf
push
sub
add
push
popa
sub
mov
stos
mov
cmc
or
add
hlt
mov
adc
test
icebp
jo
or
inc
fsubl
jge
jmp
into
and
push
sarb
fldcw
outsl
inc
fiaddl
inc
or
shlb
movsb
sbb
jge
dec
jbe
dec
jg
xchg
push
loope
mov
push
sbb
dec
out
retw
repnz
test
push
or
sbb
inc
jno
lods
lcall
inc
ret
push
add
mov
jo
call
mov
pop
pop
out
scas
addr16
imulb
shrb
mov
sub
xchg
lea
andb
or
rorl
in
outsl
test
insb
cmp
sbb
cmpsl
aas
les
mov
push
jmp
nop
ja
pop
dec
push
or
loopne
call
xchg
cmp
sub
inc
andl
test
add
out
jmp
xchg
pop
out
ljmp
or
mov
rorb
push
and
inc
mov
mov
push
xor
cltd
fs
adc
dec
imul
dec
clc
movsb
pushf
stc
mov
xchg
lea
outsl
xlat
xlat
push
stos
jno
out
mov
mov
xlat
adc
repz
xor
cs
lea
loopne
div
lds
jae
addb
or
sub
cltd
outsl
adc
or
xchg
adcb
aaa
sub
andl
dec
jb
mov
imull
xor
push
je
add
iret
or
dec
dec
inc
stos
and
insl
leave
in
lods
jbe
mov
mov
or
cltd
outsb
xor
je
xchg
jmp
mov
or
or
cmp
push
dec
or
sbbl
arpl
aaa
push
add
test
loop
push
out
push
fsts
mov
cmp
xor
lea
sbb
in
mov
mov
stos
pop
mov
adc
popf
pop
dec
in
test
lahf
loopne
mov
insl
xchg
mov
int
lds
fdivrl
adc
push
addr16
inc
sbb
fwait
je
icebp
pop
cmp
add
push
sti
es
push
and
cs
dec
or
xchg
pop
jg
add
imul
movsb
es
clc
call
insb
pop
mov
cs
stos
sub
lahf
or
int
stos
test
fimull
mov
mov
das
sub
mov
push
push
lret
and
add
sbbb
or
sub
mov
aad
hlt
das
mov
or
cmpsb
cwtl
enter
push
sub
push
mov
fidivl
leave
xor
aad
imulb
das
mov
mov
push
jmp
sti
add
fwait
jmp
mov
or
and
stos
push
jmp
movsl
sub
xchg
movl
adc
lock
icebp
hlt
movsl
aam
dec
cmc
popf
dec
pop
pop
int
jbe
pop
inc
aas
call
roll
jno
sbb
mov
mov
cmp
gs
lret
inc
fsubs
push
jge
dec
fstpl
pop
or
jg
or
pop
jmp
jmp
fistpll
push
pop
mov
xchg
xor
inc
mov
push
mov
jle
mov
cmpl
jne
mov
inc
or
mov
lret
sub
ljmp
scas
cwtl
mov
or
out
xchg
and
inc
aaa
loope
jle
xchg
mov
xchg
test
cs
inc
syscall
push
mov
mov
pop
dec
inc
xchg
ds
pop
lods
or
sbb
xchg
fst
loopne
mov
test
cmp
push
loopne
xor
cmc
inc
ljmp
ss
or
add
fdivp
outsb
xor
test
sbb
xor
push
add
inc
movsb
mov
jge
xor
sahf
cmp
adc
sbb
imul
adc
xchg
add
stos
and
dec
fwait
jl
scas
sahf
mov
loopne
test
sub
fmull
xor
and
fs
push
cmpsl
mov
add
mov
addb
push
test
mov
inc
testl
xor
mov
or
in
dec
mov
sbb
lea
mov
lock
jle
adc
fcmovne
lds
jne
out
outsl
sub
into
repnz
lock
and
adc
xor
les
imul
or
scas
push
stc
shrb
push
addr16
push
inc
pop
mov
sbb
push
int3
repnz
sub
loop
inc
inc
dec
inc
cld
jns
push
pop
jp
mov
lea
vpcmov
popf
test
jl
xchg
out
dec
andl
jo
sbb
hlt
orb
mov
cwtl
cli
or
cmp
cmp
cmc
inc
lret
sub
pop
int
inc
leave
sbb
xchg
jne
xchg
jae
pop
mov
jl
mov
inc
dec
push
push
out
hlt
sahf
icebp
cmp
add
sbb
dec
lds
and
jns
pop
inc
xor
test
loope
in
mov
ficoml
inc
xor
imul
sub
mov
daa
int
adc
push
xchg
add
dec
dec
fstl
outsl
cmpsb
sbb
jp,pn
xor
int
lods
js
in
lods
push
adc
xchg
inc
icebp
subl
stos
lret
jmp
into
adc
movsb
stos
jne
scas
add
out
fildll
inc
or
lea
adc
mov
pop
lds
sub
or
test
pop
int
or
insl
jo
mov
inc
dec
dec
cmp
fldt
sti
mov
adc
es
es
inc
sub
cmc
dec
fdivrs
inc
repnz
leave
insb
xchg
out
cmpsb
push
sub
mov
ljmp
push
cmpsb
fcomps
sbb
mov
adc
call
test
fs
ja
imul
inc
pop
push
filds
clc
int
je
imul
iret
scas
jecxz
push
dec
mov
leave
sbb
jns
icebp
push
daa
sub
xchg
test
or
inc
pushf
jae
data16
mov
popa
pop
mov
daa
xor
sbbb
jge
shrl
sbb
notl
out
inc
fdivp
add
dec
push
xchg
int
sbb
subl
adc
stos
popa
and
adc
xchg
out
std
enter
fwait
fwait
mov
push
jmp
lea
sub
jae
inc
mov
jge
fstps
fnsave
clc
or
pop
repz
cltd
test
xchg
sub
mov
not
adc
aas
gs
fwait
scas
inc
pop
sbb
xor
dec
add
idivl
sbb
arpl
test
ret
mov
dec
shll
cld
push
jecxz
pop
push
jne
jl
push
xchg
xchg
jp
dec
cmpsl
sbb
adcb
leave
xchg
imul
repz
mov
das
inc
into
sub
xor
adc
jno
les
cmpsw
add
adc
ljmp
sbb
bound
xchg
jns
daa
in
inc
mov
or
imul
pop
shl
inc
push
movl
push
in
or
push
mov
aaa
adc
imul
xlat
mov
aas
dec
push
add
popl
push
andb
int3
movsb
mov
xor
adc
xchg
fucomip
cmp
adc
pop
lret
jns
insl
lods
and
mov
add
fildl
adc
pushf
out
or
sub
stos
push
jecxz
in
adc
push
mov
psubq
leave
aaa
gs
jns
jb
std
out
lock
movzwl
dec
push
mov
sub
data16
push
repz
jge
jle
imull
push
insl
jl
cmp
inc
orl
mov
int3
sbbl
in
out
add
ret
or
mov
mov
jno
adc
movsb
out
dec
js
add
push
mov
pop
pushf
dec
ficoms
push
jl
pusha
ret
mov
lea
ljmp
arpl
xchg
adc
ss
aad
dec
cmp
sbb
xor
jb
mov
xchg
xchg
les
fsubrs
nop
push
out
mov
adc
mov
sub
xor
jnp
outsb
mov
negl
out
adcl
dec
sub
rclb
mulb
daa
cmp
nop
in
or
push
jmp
int3
or
cld
test
aaa
das
xchg
insb
push
mov
push
xor
out
clc
jle
inc
sbb
cltd
aas
dec
xchg
and
xchg
xchg
mov
call
or
mov
cltd
mov
pop
les
rclb
lret
stc
mul
pop
pop
sbb
jae
lahf
xchg
into
gs
add
lahf
mov
pop
mov
pop
dec
jmp
mov
loopne
cltd
popf
aam
jns
les
adc
dec
xlat
mov
xchg
jnp
test
adc
jge
mov
dec
pop
mov
daa
les
mov
movsb
adc
dec
int
loope
jo
ss
jae
mov
cmp
mov
sbb
jns
jo
xor
jb
in
aam
pop
repz
stos
and
or
adc
add
sbb
rcll
sbb
push
mov
mov
push
xchg
xlat
push
clc
in
push
or
in
fisubl
enter
pop
imul
and
fwait
xchg
shll
lret
or
fcomps
lods
push
pop
sbb
cmp
dec
insb
mov
insb
push
loopne
pusha
call
inc
pop
inc
shlb
add
daa
and
cmp
push
xchg
imul
in
cltd
mov
adc
lcall
testb
add
jmp
int
sub
fdivs
and
call
mov
push
xchg
int
jecxz
in
pop
je
in
cmp
arpl
out
dec
and
xchg
sbb
ds
outsb
xor
in
add
push
mov
enter
adc
loopne
into
jle
clc
pop
or
ret
inc
push
mov
push
pop
sub
xchg
sti
addr16
mov
popa
adc
out
shrb
mov
scas
adc
inc
ret
cmp
xor
push
jmp
jl
jl
adc
fidivrl
fstp
enter
xor
or
call
int3
sub
push
jle
jbe
aas
mov
jmp
aas
add
push
dec
fs
inc
xlat
fwait
mov
ja
adc
fsubp
sub
test
mov
pusha
add
inc
les
sub
bound
jge
add
cmpsl
sub
mov
hlt
push
mov
inc
mov
cmc
inc
sbb
cltd
fcmovnb
clc
gs
out
xor
add
hlt
outsl
jmp
mov
inc
xorl
test
xchg
shlb
sarl
hlt
sbb
xchg
push
aas
push
call
ja
mov
int3
mov
out
in
lods
orb
repz
adc
stos
mov
ret
add
sarl
hlt
ds
xor
xor
inc
mov
and
sbb
out
dec
movsl
addr16
mov
aam
rcrb
repz
adc
jb
enter
loope
adc
scas
cmpsb
pop
jne
sub
mov
mov
sub
xchg
dec
icebp
arpl
mov
mov
sbb
sub
xchg
jmp
jle
insl
pusha
cmp
imul
cmp
rcl
gs
fwait
mov
mov
jge
or
out
iret
add
dec
aam
data16
icebp
imul
das
test
addr16
or
std
inc
in
sub
fiadds
sub
mov
loopne
shl
jo
in
pop
cld
inc
bound
fdivrs
scas
xor
call
xchg
mov
aaa
cmp
mov
incb
add
fwait
testb
cltd
rclb
movsl
rcrb
sar
cmpsb
push
lahf
mov
mov
adc
jp
in
sub
mov
add
mov
insl
lahf
in
push
cli
pop
and
inc
push
loop
sbb
pop
ja
dec
or
cmp
inc
dec
pop
mov
dec
jnp
dec
fprem
xor
add
cmp
push
repnz
ret
mov
dec
inc
sub
or
mov
pop
adc
in
lret
das
jl
es
jne
stos
inc
jmp
pop
aas
jbe
fidivrl
popa
dec
mov
pusha
dec
fwait
inc
std
jge
ljmp
mov
gs
pop
enter
adc
xchg
lea
jae
fdivr
lods
cmp
pop
add
adc
ss
sub
idivl
mov
mov
sbb
cmp
mov
adc
lock
xor
fildll
cld
popf
adc
sbb
mov
and
aad
or
notl
push
fwait
pop
adc
add
arpl
mov
mov
cmp
stc
dec
mov
dec
shll
inc
xor
push
sbb
pop
dec
shlb
ss
outsl
je
add
outsb
in
inc
mov
cmp
fidivrs
and
push
xchg
xchg
push
stc
mov
mov
push
sub
orl
mov
inc
or
pop
shr
and
gs
test
lret
jg
js
cmp
push
repnz
xchg
clc
push
out
dec
ret
cmp
sbb
inc
push
notl
mov
and
movl
push
mov
hlt
jae
enter
and
ljmp
jp
leave
icebp
jne
push
test
fdivrs
add
imul
jnp
es
lods
push
fistpl
cmp
sub
icebp
sub
lret
hlt
test
imul
pop
mov
enter
lods
je
stc
lods
mov
cmp
pop
sbb
mov
js
cmpsl
jle
lods
shrl
mov
mov
push
or
sbb
fidivs
adc
pop
jnp
sub
dec
scas
mov
cmp
push
pop
pop
sub
bound
xchg
inc
stos
mov
lds
xor
fidivl
ret
out
pop
test
jmp
pop
out
int
cmp
push
jle
push
sub
pop
adc
jns
xor
js
push
adc
mov
je
sub
test
mov
testb
mov
aad
dec
shll
sbb
mov
outsb
leave
cmp
and
fisttpl
out
fldcw
clc
jne
sub
lret
sbb
loopne
jno
es
xchg
jmp
int3
mov
push
adc
xchg
or
cmp
mov
cmp
in
add
iret
ss
lahf
add
push
jne
mov
mov
movsl
sarl
jp
mov
sahf
daa
iret
in
jae
cli
js
sarb
xchg
xchg
movsb
sub
adc
xchg
fsts
dec
fldcw
inc
cwtl
adc
cltd
cmp
popl
test
pop
xchg
fdivp
bound
jne
inc
adc
mov
test
clc
in
data16
xchg
test
add
push
lahf
stos
adc
mov
inc
sub
int3
sbb
dec
sbb
mov
xor
dec
dec
and
movsl
fcmovbe
orl
mov
jbe
out
lahf
add
sub
stos
sub
mov
stos
sub
push
mov
sbb
repz
xor
inc
movsl
fmull
outsl
mov
mov
movsb
scas
sbb
fistpl
rorb
fbstp
div
testb
aad
imul
outsl
loope
gs
js
sub
loope
into
data16
jnp
cmp
adc
jno
adc
inc
fidivl
and
jb
cmp
push
mov
add
sub
test
sub
and
in
daa
int3
mov
movsb
mov
pop
and
push
sbb
ss
pop
cmpsb
lret
fstps
add
mov
leave
stos
xchg
cwtl
enter
inc
pop
pop
adc
push
jle
dec
aad
mov
mov
aam
mov
xchg
sahf
lret
jns
adc
inc
outsl
inc
cltd
popf
add
jno
push
sarb
jge
into
dec
mov
idivl
jns
inc
and
insl
mov
scas
add
jge
xor
dec
inc
dec
push
xor
cmp
and
enter
xchg
xchg
into
js
cld
testl
push
mov
pop
mov
fdivrl
es
xlat
dec
or
cmp
in
add
adcl
jmp
sub
out
fs
stos
mov
mov
mov
fadd
mov
js
xor
push
mov
and
sub
pop
add
jg
push
ds
mov
sbb
rorb
inc
popf
adc
mov
push
mov
jg
sub
inc
inc
test
hlt
mov
xor
movsb
mov
ret
jle
mov
xor
mov
outsl
cmpb
mov
xor
arpl
push
cmp
ja
xchg
or
aad
pop
cmp
push
xor
mov
das
aas
mov
sbb
sbb
js
adc
mov
jge
arpl
lods
adc
daa
cmp
cmp
shll
mov
sbb
loope
and
adc
push
inc
jge
fistpl
mov
sbb
arpl
insb
clc
lea
call
ds
pop
cmp
lds
pop
sub
je
pop
aad
shll
js
jae
test
repz
xor
pop
mov
inc
mov
iret
mov
dec
mov
mov
xchg
fsubr
mov
sbb
sub
adc
loope
dec
xor
add
mov
mov
pushf
push
insb
cld
xchg
into
dec
repnz
push
adc
mov
pop
stos
pusha
dec
push
imul
jmp
lock
stc
pop
pop
inc
jae
jae
cmpb
fdivrl
sbb
subl
adc
repz
dec
jae
cmp
pop
jb
fiadds
fldt
test
gs
xchg
test
fs
sub
push
pop
mov
inc
dec
mov
push
test
jg
and
push
cmpsb
int
adc
jns
sub
arpl
rcrb
add
aad
add
ds
lret
xor
mov
jae
and
call
int
pop
test
lock
ret
cmp
jmp
roll
jno
pop
leave
out
push
sahf
idiv
mov
xor
enter
je
shl
addr16
stos
mov
mov
adc
sub
and
adc
out
add
aas
push
lahf
cmp
stos
add
mov
fsub
imul
imul
mov
testl
push
or
into
data16
shll
pushf
out
dec
push
and
flds
incl
adc
flds
bswap
movsl
or
ret
add
in
pusha
gs
push
push
adc
data16
pop
mov
lods
sti
jg
cmp
xchg
lahf
mov
test
repnz
cmp
aaa
adc
hlt
shll
pop
pop
sbb
insl
test
aam
sbb
xorl
push
insb
sarl
add
pop
add
jne
pop
push
nop
fistl
dec
idivl
ljmp
jecxz
or
cld
fwait
jbe
and
ja
rcrb
std
mov
loopne
jg
std
xor
sbb
adc
hlt
pop
lret
or
jp
add
dec
fldcw
lret
xchg
add
call
pop
cwtl
bound
fbld
push
ss
stos
stc
mov
push
pop
sbb
shll
mov
or
adc
and
ret
stos
mov
fcoms
mov
mov
fnstcw
negb
fldl
mulb
fildl
mov
xor
jp
cmp
idivl
insl
dec
add
push
inc
xor
loope
daa
and
jno
addr16
jg
mov
push
push
test
jns
pop
add
push
xor
pushl
imul
cmp
test
pushf
and
push
xchg
xchg
aaa
pop
in
cmpsl
inc
push
cmp
clc
pop
cmp
je
ret
and
or
dec
pop
or
mov
xorb
shlb
into
in
add
or
sub
mov
stos
or
popf
push
sbb
in
std
mov
inc
arpl
jge
in
out
ret
lea
add
xlat
test
push
add
xor
out
xor
and
adc
lock
sbb
fcoml
pop
push
cmpsb
mov
ljmp
insb
arpl
test
pop
out
mov
add
outsb
adc
roll
lods
mov
jge
sub
bound
popa
arpl
adc
cmc
cwtl
clc
fcmove
jo
xchg
out
into
shl
adc
clc
push
fisttps
fwait
enter
lock
xor
xchg
imul
subl
fs
jno
inc
jmp
in
lods
cli
outsl
push
jp
mov
out
andb
push
test
shl
fldenv
xchg
xchg
movb
pusha
lcall
mov
jbe
std
and
nop
aam
cmpsb
lock
hlt
outsl
cmp
insl
fwait
lods
mov
js
pop
shrb
mov
out
iret
mov
test
leave
jnp
loopne
addb
pushf
bound
sub
notl
mov
in
sahf
ss
popa
sbb
or
loopne
popf
or
jl
fdiv
into
iret
imul
mov
hlt
jnp
mov
movsl
push
fcomps
xchg
or
inc
out
aad
add
pop
xor
xchg
and
cli
and
adc
int3
and
dec
pop
mov
or
cld
and
mov
loopne
dec
fildl
dec
mov
dec
std
and
std
sbb
mov
add
sub
ja
sysenter
inc
inc
lcall
push
packsswb
pop
jbe
pop
rcl
sub
xor
ret
rcrl
mov
jp
jp
push
mov
movsb
ljmp
aas
dec
pop
out
leave
gs
rcl
sbb
and
ret
pop
test
pop
dec
jbe
mov
fwait
andb
add
gs
loopne
add
sbb
xor
push
sub
in
inc
mov
outsb
and
sub
stc
mov
pop
mov
jnp
cwtl
pop
mov
push
out
mov
dec
xor
jbe
mov
in
es
popa
push
push
repz
pop
out
adc
movsl
hlt
cs
arpl
lea
lahf
cmpsb
insl
cli
mov
and
push
mov
movsb
xchg
and
inc
xchg
outsb
dec
ficoml
clc
jg
cmp
push
push
add
lock
lods
or
sbb
sbb
xorl
mov
loope
adcb
and
mov
mov
int3
lcall
inc
addr16
addr16
cli
push
pop
test
dec
adc
sahf
xchg
ss
cmp
sbb
jmp
add
jnp
xor
cmp
subb
fwait
jl
push
enter
mov
scas
lret
shr
loopne
repnz
dec
stc
fcoml
push
std
jecxz
scas
insl
int3
aas
cli
stc
lret
dec
mov
jg
shr
mov
das
and
xlat
push
lret
and
fisttps
es
and
stos
add
in
in
enter
movsb
pop
js
dec
popf
cwtl
outsb
sbb
pop
add
mov
std
add
mov
pop
daa
dec
es
ss
jg
testb
ss
pop
test
daa
sbb
in
mov
and
jbe
mov
lock
cs
fdivl
lret
aaa
sub
fldenv
and
push
jbe
or
mov
lock
es
xchg
sbb
mov
pop
lock
adc
pop
addl
mov
aad
jp
outsb
cmpsb
lret
out
mov
add
lds
lods
mov
adc
das
mov
fldcw
clc
adc
filds
or
sbbb
mov
xor
cs
outsl
add
loopne
mov
pop
mov
dec
sub
idivb
or
pop
mov
rcrb
xor
xchg
inc
imul
push
push
notl
ja
adc
mov
dec
das
rcl
ret
mov
xor
cmpsb
xchg
int
mov
and
push
inc
jne
test
fcmovb
in
sbb
fcomi
ds
sar
pop
pop
mov
sub
loop
loop
mov
dec
lcall
sahf
add
scas
movsl
mov
dec
cmp
or
pop
adc
push
sbb
and
fldcw
mov
rclb
out
jae
mov
cmc
scas
mov
mov
lea
sub
imul
xchg
mov
xor
mov
cmpsl
aaa
outsl
mov
cli
fcomps
and
lcall
jecxz
addr16
int3
xor
adc
sub
jb
loop
ret
pop
xchg
pop
sub
add
out
scas
nop
xlat
or
adc
in
or
and
push
mov
in
cmc
push
imul
movsb
movsb
shll
cmp
loope
loope
addb
enter
jo
ficomps
mov
cmp
nop
sbb
xor
icebp
nop
add
pop
mov
mov
cmpsb
sub
xchg
add
add
movsl
pop
test
mov
inc
pop
and
jmp
inc
rcll
sub
insb
lods
sub
add
fcomp
aad
fsubl
out
mov
and
lock
lock
push
push
or
pusha
xchg
fnstsw
fcmovbe
call
cmp
add
std
xor
enter
mov
lods
jbe
enter
es
loopne
add
push
stos
lock
xchg
pushf
mov
neg
loope
add
xor
jmp
push
or
ja,pn
lahf
repz
fldl
sub
push
add
imul
xor
xchg
lods
jge
and
shlb
std
push
aad
int
jge
mov
fnsave
fists
out
mov
cmp
pop
fimuls
lds
rclb
jne
insb
lret
dec
repnz
lret
call
xor
adc
pop
mov
rclb
pop
std
bound
cmp
lret
pop
sub
or
and
test
lahf
loope
movsl
stos
and
xchg
fs
fstpl
vaesdec
repnz
lock
mov
or
test
out
lea
shlb
lahf
test
or
and
mov
pusha
xor
stos
push
enter
icebp
popf
cld
icebp
orl
xor
mov
ljmp
mov
sahf
cmpsb
imul
sub
inc
out
push
bound
insl
mov
addr16
push
aas
repz
sub
outsl
stc
jmp
sar
sbb
mov
cmp
fldl
mov
xor
cmp
mov
and
shlb
add
xorl
mov
call
mov
jge
mov
xchg
dec
jl
and
xchg
jle
inc
push
mov
cmp
les
out
or
mov
fisttpl
jns
mov
int3
clc
ds
mov
and
sub
into
adc
fildll
aas
lds
test
mov
out
test
dec
ljmp
add
xchg
addr16
fsts
call
neg
xchg
inc
mov
icebp
in
repnz
inc
xchg
push
out
add
movsb
pop
lds
pusha
insl
movsb
push
jno
cli
sbb
mov
aaa
or
and
pop
or
xchg
pop
movl
push
inc
pop
loop
xor
fstp
cmp
cs
out
xor
ficoml
aam
mov
cltd
lea
push
push
cmpsl
into
out
div
sub
push
cmpb
lea
ret
dec
mov
out
out
dec
andb
mov
inc
inc
into
xor
out
loopne
push
jnp
not
push
xchg
popl
stos
sbb
in
fldt
sub
ret
popa
adcb
push
pop
dec
or
dec
push
ja
ja
pop
psubsb
xchg
dec
movsl
loope
xor
mov
sub
adc
pop
aas
fstps
fbld
sbb
out
xor
popf
sub
push
cwtl
xchg
int
lods
icebp
pop
pop
ficoms
sti
andb
test
sbb
pop
aam
fldcw
dec
movsl
inc
pop
xchg
int
push
jl
rcr
movsl
jbe
lock
aam
push
mov
mov
and
rolb
adc
popf
or
cmp
std
out
mov
pop
mov
mov
data16
lea
push
mov
xchg
in
xchg
rcrb
push
mov
add
pusha
jmp
call
imul
lret
push
mov
push
push
imul
cli
ret
xchg
dec
loop
imul
mov
jecxz
or
xchg
repnz
daa
cltd
pop
pushf
out
sub
pop
mov
stos
sahf
mov
or
pop
popf
xor
mov
outsl
adc
shll
dec
hlt
mov
ss
cmp
push
push
dec
pusha
lock
aas
sub
inc
sbb
repz
fildl
sbb
fwait
lock
cmp
pop
sahf
data16
jge
xchg
jo
mov
hlt
pushf
xchg
lods
sahf
jbe
add
in
stos
push
add
dec
dec
cmp
and
pop
mov
push
clc
mov
inc
jmp
stc
adc
out
mov
es
jno
pop
in
xorb
decl
mov
sub
into
ds
mov
pop
int3
loope
push
scas
pop
in
sub
jae
imulb
inc
imul
cmpsb
sub
out
sahf
mov
push
imul
imul
stc
or
pop
inc
les
ss
nop
stc
xor
std
sub
pop
lock
sbb
push
inc
mov
aad
push
cs
xchg
lea
or
add
push
ret
lret
cmpsb
xor
aaa
ret
xchg
push
push
lea
mov
mov
sub
idiv
sub
sbb
in
jnp
rcr
sbb
adc
push
cld
dec
push
pop
faddl
es
pushf
mov
int
mov
and
jmp
pop
xchg
adc
xchg
stos
jge
test
in
or
addr16
popa
or
lcall
jnp
add
dec
xchg
scas
test
enter
mov
or
xlat
and
stos
jl
cld
add
add
mov
cli
pushf
cmpl
adc
in
fstpl
mov
and
mov
cs
and
mov
jecxz
jecxz
repz
sti
lock
and
and
jg
pop
mov
sub
jg
mov
xchg
xor
pop
nop
pop
stc
inc
mov
ss
inc
adc
imul
loop
jge
int
jl
test
sub
sbb
jb
lods
loopne
inc
mov
xchg
jns
inc
sbb
sub
dec
mov
pop
push
cld
fcompl
ds
sbb
orl
mov
repnz
sbb
pusha
sarl
movsb
lahf
or
adc
push
arpl
jo
scas
dec
xor
ja
arpl
mov
or
lcall
xor
out
es
mov
call
movsl
cmp
outsb
or
mov
shlb
pusha
pop
or
lret
insb
or
adc
fdivrs
push
pushl
outsl
ror
cmp
push
or
insl
ja
cmp
ret
jge
sbb
xchg
mov
into
rorb
sbb
or
negb
pop
cmp
and
repnz
or
sbb
dec
jge
and
xchg
jl
ds
adc
jge
cld
std
mov
push
std
push
mov
iret
fs
call
adc
push
fsqrt
cs
dec
add
fisubrl
mov
mov
cwtl
or
xchg
jb
inc
rclb
mov
jmp
xchg
add
outsl
insw
je
and
lds
or
push
inc
inc
xchg
lds
and
inc
and
bound
inc
loop
cmp
fnsave
mov
rorb
cs
fcoml
fsubs
jle
lcall
cmp
cwtl
popa
or
pop
push
cmpsl
mov
movsb
pop
outsb
jo
outsb
push
shrb
adc
aaa
js
dec
jns
jl
ds
test
andl
cmp
push
out
icebp
fwait
cmp
dec
lods
in
inc
mov
and
mov
movsb
jg
cmpsl
dec
xchg
pop
sbb
ss
add
jge
mov
add
insb
and
stos
adc
add
jge
sbb
add
xchg
mov
pusha
test
fldcw
test
lods
mov
inc
rolb
repnz
sti
neg
outsl
clc
pop
push
loopne
pop
mov
xor
scas
mov
pop
das
cltd
sbb
pop
cmc
ret
ljmp
lret
sub
cmp
mov
adc
js
cld
std
push
dec
dec
scas
sbb
push
scas
stc
xchg
mov
xor
iret
das
pop
push
adc
adc
imul
mov
push
std
sti
jae
mov
insl
arpl
fwait
cmp
add
fwait
fldt
mov
data16
pop
stc
sete
sahf
mov
mov
mov
xor
jbe
cmc
insb
orl
xor
aam
inc
fcomi
into
xor
inc
fcoml
sub
dec
pop
int3
pusha
mov
sbb
aaa
outsb
in
ljmp
jge
repz
dec
push
mov
ds
bound
out
sbb
lock
push
loop
push
mov
xchg
mov
mov
sbbb
jno
or
and
pushf
xchg
mov
sub
cmpb
fadds
mov
or
pusha
sbb
repnz
mov
js
fsubr
mov
aam
add
popf
test
jns
adc
cld
pushf
pop
adc
push
jns
pusha
repz
xor
das
xor
and
mov
push
push
and
mov
mov
cmp
cmc
js
mov
or
mov
jae
outsb
out
mov
xor
xlat
sub
cltd
inc
add
jmp
imul
pop
jmp
sub
test
es
std
mov
incb
xchg
dec
les
ret
jg
loop
jmp
cmp
dec
jnp
mov
pusha
mov
lret
stos
xchg
pop
popa
pop
or
inc
into
pop
mov
icebp
pop
lret
popl
out
imul
jbe
in
jmp
pop
or
test
push
iret
jge
jb
pop
and
orb
in
mov
xlat
cltd
cmpsb
test
sub
sti
call
ja
cmp
imul
jge
repz
rolb
es
test
add
cld
aas
popl
sti
xlat
lcall
imul
jmp
shl
ret
lcall
mov
ljmp
nop
pusha
inc
push
es
loop
fcos
fcom
decb
push
movsb
mov
outsb
orl
mov
push
xchg
xchg
lds
mov
push
call
add
fistl
sti
adc
mov
loop
xorl
nop
jb
or
ret
setge
je
sbb
inc
sub
outsb
clc
xchg
pop
cmp
push
cmpsl
cwtl
inc
movsb
and
push
shrb
das
mov
div
and
outsl
mov
add
mov
cmp
mov
mov
cmp
jbe
cmp
pusha
hlt
out
insl
mov
fimull
sub
aad
int3
inc
mov
test
push
xor
xchg
jl
xchg
test
jmp
fcmovnbe
sub
lea
sbb
int3
mov
cmpsb
clc
int
cmp
bound
cmp
out
subps
call
movq
xor
jle
dec
lret
push
loope
pushf
pop
adc
sub
fidivrl
in
cmp
inc
hlt
and
cli
stos
ficoml
test
js
jno
push
push
unpckhps
nop
adc
inc
pop
or
ljmp
ja
ds
das
outsb
cmp
enter
cli
push
mov
es
xlat
fstl
jge
movsl
lods
ja
pop
mov
xchg
mov
inc
add
and
xlat
rclb
xor
hlt
mov
mov
orb
push
pop
fdivs
sbb
adc
jg
arpl
jp
dec
pop
mov
push
sub
mov
xor
or
cmp
lds
fmull
imull
mov
mov
cmp
subl
mov
cmc
ret
int3
jno
test
inc
in
pop
cmp
in
adc
lds
or
test
cmpsl
lret
sbb
movsb
mull
test
ret
lcall
leave
add
pop
fcoml
jmp
cmp
cli
cmp
popf
cld
mov
sub
jecxz
adc
mov
jmp
add
or
bound
rorl
dec
jmp
cmp
jne
push
dec
mov
inc
out
rcrb
adc
je
jle
or
cs
xchg
jmp
push
scas
pop
in
rcl
push
and
pop
fs
icebp
aam
stos
xor
dec
sub
add
push
out
js
out
scas
adc
xor
pop
aam
mov
out
out
fcmovbe
xchg
mov
push
sbb
mov
inc
bnd
test
push
popa
jae
aas
push
scas
push
push
in
cmp
xchg
dec
cs
push
lods
aam
out
push
jmp
pushf
sub
jl
in
push
insl
cmp
sub
mov
iret
imul
pop
adc
sbb
push
dec
jge
pop
loopne
inc
ss
xchg
push
pop
loopne
imul
jb
xchg
out
inc
lret
mov
dec
sub
mov
repz
cli
cmp
push
cmpsb
cmpl
in
mov
dec
mov
inc
pop
dec
add
sbb
inc
xchg
sub
fsubrs
jno
jb
aad
adc
shlb
xchg
in
push
push
sbb
iret
xor
and
aad
test
test
das
in
and
pop
jmp
stc
icebp
pop
push
je
fisubs
mov
inc
jmp
test
push
push
js
sub
pop
subb
bound
xchg
or
push
pusha
adc
in
mov
push
pop
imul
inc
loop
fsubrl
insb
sub
add
jne
inc
pop
mov
add
cmc
testl
lret
dec
sbb
mov
scas
mov
flds
or
test
sbb
jae
ret
inc
sbb
test
xor
add
and
inc
insl
pushf
inc
mov
adc
and
fsubr
or
ret
mull
lret
push
mov
imul
xlat
add
fimull
imul
adc
inc
sub
test
lds
lret
out
sarl
fwait
xchg
jne
je
pause
jecxz
bound
lret
pop
push
pop
mov
in
push
aad
jle
push
or
adc
ljmp
call
aam
clc
ret
in
jmp
adc
nop
pop
cmp
jno
ja
test
cmp
int3
fcmovnu
ret
jno
push
inc
mov
dec
or
es
jne
daa
cli
rcll
ficoms
sub
std
outsl
fs
nop
jmp
jnp
cmp
push
enter
push
inc
jbe
fidivl
loop
andb
inc
mov
jmp
or
pop
pop
sub
mov
inc
into
fisubrl
jmp
aam
jmp
faddl
ljmp
popa
cmp
add
scas
mov
mov
fistl
push
xor
loop
pusha
pop
mov
addb
enter
jle
movl
pop
jo
xor
add
jp
addl
divl
sub
mov
cmp
sub
loope
add
leave
fmull
xlat
arpl
mov
sub
and
push
dec
fwait
cmp
mov
sub
cli
data16
stos
scas
lcall
mov
jae
enter
and
adc
xchg
cmp
aad
cs
scas
push
imul
pop
pop
cmp
jnp
gs
mov
sti
mov
fldcw
stos
xchg
pop
push
mov
add
in
rolb
add
dec
cmp
daa
mov
jno
cs
lret
sbb
lods
inc
or
into
jle
jbe
and
adc
pop
inc
scas
aam
out
iret
ja
sti
inc
sbb
push
icebp
xchg
call
stos
jbe
add
dec
xor
xor
lock
push
mov
iret
push
or
cmp
cmp
out
inc
call
add
data16
js
pop
stos
clc
movb
dec
mov
mov
add
fs
popa
imul
jno
mov
mov
test
and
pop
out
jl
adc
jmp
insb
test
mov
xlat
add
jmp
mov
test
xor
and
sub
cwtl
cmp
pushf
adc
pop
push
xor
ds
std
jnp
mov
jmp
mov
add
cs
push
divl
lods
mov
aam
lea
cmpsb
dec
dec
inc
jle
imulb
fildl
xchg
mov
mov
cmp
cmpsb
aam
aad
out
sahf
scas
aad
fxch
lds
pop
movsb
xchg
and
xchg
jb
jecxz
cmp
mov
rcrb
sub
dec
dec
addb
pushf
cwtl
clc
xchg
out
push
ja,pn
sbb
leave
ss
rclb
stos
xor
addr16
and
lods
ret
mov
push
mov
inc
push
adc
arpl
or
fnsave
insb
adc
sub
int
mov
sub
xor
xor
aam
in
fildll
sub
mov
sbb
nop
dec
jg
iret
test
outsl
ret
jmp
aas
ficompl
mov
sub
lds
hlt
cmp
add
sbb
cmp
cmp
add
adc
shld
icebp
xchg
rcrb
jmp
lea
push
fsubl
push
push
stos
lds
and
xor
popa
orl
and
jns
jbe
popa
pop
fcoms
pop
mov
hlt
push
dec
ja
jle
push
xor
fsubr
fldenv
js
sub
cmpsb
lods
aas
shrb
mov
in
push
sub
sub
les
stc
mov
add
mov
push
scas
nop
inc
sbb
jo
sub
orb
jl
mov
scas
mov
sarl
push
out
pop
add
fadds
add
inc
pop
daa
mov
cs
fwait
movsl
enter
mov
mov
mov
push
xchg
mov
ret
sub
mov
mov
xlat
add
out
xor
fadds
and
push
xor
pop
mov
repz
xor
pop
aaa
xor
sbb
stos
loope
ja
test
call
rcll
aas
sbb
aaa
inc
les
ret
jno
inc
mov
and
icebp
cwtl
push
xor
sbb
inc
push
jns
loopne
push
call
scas
and
xchg
iret
repz
insl
push
faddl
cmp
addr16
lret
loop
imul
xchg
sub
repnz
cmp
jo
inc
clc
inc
or
mov
xchg
mov
pop
or
mov
and
sub
xchg
mov
aad
inc
dec
push
sbb
mov
mov
test
into
mov
mul
mov
rolb
add
lcall
jns
mov
fmuls
insl
and
inc
push
aam
loop
mov
xchg
ljmp
sbb
lock
clc
jl
adc
mov
mov
dec
or
out
pop
hlt
pusha
pop
imul
xor
test
leave
pop
les
stos
xor
stos
inc
mov
inc
shl
cmp
adc
out
lds
shlb
xchg
data16
and
pop
pop
pushf
add
mov
pop
xlat
lcall
stos
ds
push
xor
daa
cmp
test
or
jnp
jnp
out
adc
sub
adc
std
or
add
fistl
cmpl
dec
frstor
sahf
repz
dec
lret
sahf
cmpsl
call
lcall
mov
loopne
pop
stos
xorl
or
adc
mov
xor
push
fcompl
cmp
jae
fstpt
out
push
stos
test
les
daa
in
loopne
shl
sub
std
pop
mov
jge
in
call
jge
mov
sarb
push
pop
aad
sbb
scas
xchg
icebp
lock
filds
or
mov
push
jge
out
mov
insb
jl
cmpsl
mov
pop
pop
or
push
pop
sub
aaa
leave
cmp
sub
sub
cltd
push
stos
push
outsl
in
push
imul
insb
sub
lods
out
xchg
xchg
into
enter
sub
in
xchg
cli
js
shlb
je
mov
xor
sub
mov
lcall
lret
cmp
jl
adc
push
pop
mov
sahf
aam
insb
pusha
dec
mov
adc
lahf
and
popf
or
in
fstpt
ret
repz
adc
add
adc
ret
fsubrl
sbbb
inc
jmp
dec
or
jne
lahf
or
adc
push
push
and
mov
mov
dec
fistpl
ds
sub
mov
sahf
sbb
sub
cmpsb
sarb
daa
out
dec
mov
mov
cmp
leave
dec
jno
cmp
pushf
cwtl
and
rcll
rorb
cmpl
fadds
xor
adcl
imul
repz
loop
hlt
add
jg
aaa
out
das
inc
push
xor
insb
add
push
in
xchg
enter
dec
mov
jecxz
leave
mov
dec
mov
insl
hlt
call
cld
push
insl
lods
and
es
dec
xor
push
push
loope
test
xor
add
jb
cmp
xorb
pop
mov
scas
jge
sub
xchg
push
adc
xchg
push
rorl
cmp
mov
mov
mov
cld
movsb
cmpsb
ja
imul
mov
xchg
adc
add
add
sti
xor
push
xlat
mov
test
inc
ja
mov
xchg
dec
sbb
push
push
out
inc
mov
aam
pop
sub
rcr
sbb
pop
lock
mov
xchg
sub
push
jno
dec
xor
loop
cmp
test
in
ss
xchg
push
loop
push
xor
inc
push
mov
sub
ds
push
ss
test
cld
out
push
repz
int
jmp
enter
ljmp
jg
fsubl
jmp
adc
sbbl
inc
hlt
cli
pop
xchg
sub
add
lcall
fists
jo
xor
pop
pushf
stos
push
in
xchg
jg
fcoml
dec
xchg
or
push
pusha
pop
out
lahf
enter
cmp
and
inc
hlt
je
inc
ss
aas
stos
and
je
test
ss
inc
fs
push
sub
xchg
ds
jecxz
adc
in
inc
pushf
imulb
jo
das
inc
inc
mov
dec
popf
scas
leave
pop
rorl
call
gs
lds
aad
jp
inc
push
cmpsl
push
repnz
out
out
xchg
in
sub
out
mov
xchg
cmpsl
adc
in
mov
lea
ljmp
mov
cmp
and
mov
sahf
and
mov
nop
push
aas
adcb
popf
arpl
inc
inc
mov
sub
sahf
cltd
test
xchg
outsb
pusha
pop
lea
sbb
int
popf
xor
push
mov
mov
dec
push
push
popf
in
add
jmp
js
enter
aad
adcl
ret
xlat
mov
aaa
aas
sbb
mov
pcmpgtd
push
mov
mov
aas
mov
in
into
push
repnz
push
add
sub
xchg
rorl
ret
cmc
aas
clc
adc
pop
xor
mov
and
mov
sbb
cs
icebp
pop
iret
fwait
xor
jle
lock
leave
pushf
aas
pop
mov
aas
mov
lcall
push
jmp
pusha
imul
push
xchg
insb
pop
stos
pop
xchg
fcmovnbe
jnp
data16
add
out
pop
or
cli
jo
leave
aaa
mov
out
cmp
xchg
stc
push
and
iret
mov
jbe
inc
xchg
sbb
rcrl
sub
mov
jo
jg
pop
cmpl
xchg
negl
ja
push
mov
sub
roll
test
sbb
cmp
in
and
std
das
jbe
and
aas
repz
ret
gs
mov
ljmp
in
mov
push
scas
jne
mov
out
je
push
out
cmpsb
jns
jbe
int3
cmpsb
scas
leave
lea
jecxz
int3
es
lret
xor
dec
mov
lods
push
mov
xorb
ret
sbbl
popa
dec
push
pop
pop
add
out
jmp
jbe
sub
decl
pop
out
cmp
aaa
mov
dec
jnp
test
jmp
fnsave
or
cmp
in
push
mov
pop
xchg
int
je
cld
sbb
rorb
sub
xor
orb
stc
xlat
out
ljmp
jns
inc
jle
popa
jno
mov
gs
imul
ss
stc
adc
data16
add
cmp
push
xchg
cmp
fdivs
inc
int
pop
jg
nop
in
decb
sub
or
shr
es
add
cmpsl
out
xchg
aas
cld
pop
es
rorl
ret
stos
jecxz
jmp
dec
pop
in
push
mov
lds
pushf
mov
pop
lret
jno
push
pusha
adc
inc
daa
rorb
loope
jp
push
push
mov
fsts
mov
outsb
cli
jnp
sbb
or
adc
hlt
data16
pusha
push
dec
jmp
int3
insl
mov
and
ja
push
out
push
inc
dec
dec
dec
add
in
pop
cmp
aam
int
mov
in
cmp
imul
sub
mov
or
or
mov
scas
js
outsl
insb
mov
sub
xchg
pop
outsl
shll
int3
adc
adc
iret
rolb
push
je
enter
les
push
aam
dec
shlb
mov
xor
sub
cmp
rorb
pop
sub
add
pop
push
mov
sub
lods
int
out
xchg
mov
mov
jne
cltd
cmp
or
and
jp
cmp
ljmp
imul
sahf
lahf
call
jmp
dec
pop
fstpl
add
mov
jg
xchg
lret
sbb
jnp
sbb
mov
xchg
push
and
adc
lahf
in
clc
push
cltd
les
lahf
xorb
gs
push
mov
bound
jecxz
xchg
lret
xor
mov
mov
in
lock
push
or
cmp
mov
imul
dec
imull
add
movsl
loop
pop
pop
xchg
ret
push
icebp
inc
out
aas
cmp
jne
movsb
imul
push
call
nop
rcll
out
int3
push
xor
lcall
stos
mov
dec
js
orb
lods
lret
test
hlt
xchg
or
scas
cmp
aam
fdivl
pushf
mov
add
xor
sahf
or
inc
bound
in
push
lret
inc
jmp
inc
xor
call
add
lea
push
or
test
loopne
rclb
add
lods
shrl
cwtl
jb
xchg
sbb
jg
idivl
outsb
sbb
shlb
dec
mov
jmp
push
adc
mov
cmp
sti
jo
mov
repz
test
enter
push
push
js
add
sub
sbb
and
popf
loopne
sub
testl
sub
xor
mov
stos
jp
jae
cmp
jb
jmp
mov
xchg
pop
push
je
xor
fldl
repz
jl
dec
adc
mov
in
and
pop
or
insb
push
into
adc
xchg
ljmp
jmp
lret
dec
dec
mov
cmp
adc
jmp
dec
add
imul
push
mov
cmc
outsl
cld
out
cltd
out
pusha
stc
or
pop
lds
and
adc
dec
add
xchg
sbb
xlat
cmp
cli
push
sub
iret
mov
push
out
movsb
xchg
dec
loop
pop
mov
sbb
popa
aas
cmp
scas
mov
gs
aad
rolb
xor
insb
adc
fs
aad
push
and
xchg
adc
mov
das
stos
popa
adc
out
sub
mov
mov
in
cmp
dec
mov
mov
inc
jle
fwait
out
stos
mov
dec
mov
and
movsb
jnp
fwait
mov
xor
jecxz
cmc
sbb
fs
sub
xchg
cmc
adc
cmc
loopne
xlat
ja
jl
test
ljmp
movsb
cmp
cmp
ficoml
subb
sbb
push
push
int
inc
fldenv
gs
sub
scas
jl
push
ret
cmpsl
cld
filds
lahf
jmp
stos
mov
push
daa
pop
sbb
out
adc
js
mov
mov
mov
cmp
sub
test
inc
sub
fdivrs
jp
dec
push
jae
mov
ret
shrb
sub
iret
clc
pop
sub
sbb
je
dec
sub
push
or
fiaddl
dec
stos
pop
push
push
fisttps
pop
mov
out
mov
add
jge
xor
inc
cmpsl
ficomps
inc
add
cmp
or
sbbb
aad
xlat
pop
or
mov
cltd
inc
enter
push
mov
sar
mov
mov
and
cmc
jns
inc
add
in
test
add
data16
out
add
push
lahf
addr16
aas
and
fldt
inc
mov
add
and
fimull
mov
xorl
orb
ffree
aaa
das
xor
or
sbb
pop
imul
insb
test
xor
cltd
daa
xor
jo
movsl
insl
lods
stc
lods
std
cld
jae
and
mov
dec
sbb
ja
sbb
mov
mov
lds
shrb
mov
nop
daa
cmp
aam
add
sub
fdiv
inc
aad
pop
ret
sub
lret
out
leave
cld
mov
inc
or
scas
pop
jl
out
call
icebp
test
or
cwtl
imul
xchg
ret
cmp
rcl
xor
outsl
and
push
lea
mov
loopne
movsl
sbb
fptan
mov
dec
filds
iret
mov
push
out
fdivs
arpl
mov
leave
mov
ljmp
mov
out
cld
in
add
mov
lret
nop
mov
inc
adc
mov
out
jae
and
addr16
sub
scas
lcall
dec
push
sbb
sub
xchg
shrb
sub
iret
xchg
nop
pop
jecxz
mov
and
outsb
mov
mov
outsb
jecxz
sub
sub
fnsave
jge
sbb
mov
out
ja
jne
pop
iret
das
mov
push
out
mov
nop
arpl
std
dec
scas
push
pop
test
lret
jecxz
sahf
jle
test
add
xchg
cmp
mov
adc
pop
mov
pop
xchg
and
sbb
into
icebp
into
xor
sarl
stos
sub
add
or
cmp
cmp
and
xchg
mov
outsb
xchg
and
mov
movsb
jge
lock
mov
pop
clc
pop
lea
push
outsl
inc
cmc
outsl
movsl
or
mov
hlt
imul
fldl
popf
cmp
mov
mov
xchg
shll
push
ret
data16
and
inc
jo
pusha
add
dec
das
cmp
popa
ret
rol
and
out
and
dec
rcrb
insb
popl
pop
cmpsb
pop
adc
int
imul
push
add
push
mov
test
rcrl
movsl
cli
mov
mov
pusha
repnz
pop
mov
filds
je
jbe
fistl
cmp
push
sub
mov
inc
rclb
and
inc
dec
jo
aaa
in
inc
sbb
add
int
pop
mov
aaa
aad
pop
jo
pop
push
jmp
and
je
push
and
rcrl
inc
call
aam
data16
out
out
xchg
ret
jmp
int3
dec
ljmp
cwtl
adc
or
xor
clc
xor
test
adcb
sahf
push
sub
sarl
lret
jmp
mov
inc
add
cmc
cltd
out
pop
xorb
daa
loope
out
iret
adc
pop
stos
push
sub
sub
mov
dec
inc
filds
inc
add
iret
sbb
xchg
xchg
ljmp
hlt
std
pop
cmp
sahf
cwtl
inc
loopne
jae
aas
jge
movsb
icebp
pop
aaa
in
not
sub
sbb
mov
xchg
cli
push
mov
xor
aaa
or
int
add
push
lcall
inc
or
popa
inc
mov
repz
mov
pop
icebp
popf
mov
cltd
push
jge
inc
adc
imull
xor
scas
push
ret
mov
mov
push
jns
jne
in
mov
push
dec
call
push
or
loopne
and
shlb
add
lret
sub
lock
push
sbbb
cmpsl
cmc
mov
dec
popa
nop
divl
jb
cmp
cmp
in
mov
lret
jg
aam
inc
pop
in
jbe
push
faddl
mov
jo
jnp
cmp
pop
hlt
pop
test
ja
jge
add
jp
inc
mov
into
cwtl
mov
pusha
scas
or
out
ljmp
or
pop
leave
pop
lock
or
mov
lds
push
out
add
inc
inc
jo
mov
fmull
in
add
mull
negl
inc
sbb
sbb
sti
push
imul
mov
aas
stos
mov
lcall
cwtl
jmp
inc
xchg
not
dec
popa
movsb
out
imul
push
mov
and
fdivrs
idivb
dec
pushf
enter
pop
cmp
cmpsb
mov
loope
xlat
sub
and
pop
cltd
xchg
lea
iret
int
fsubp
out
inc
dec
pop
pusha
dec
bound
test
fcomip
shl
fcomps
std
mov
xchg
lock
jp
ret
xchg
cld
xorl
and
pop
js
popa
mov
adc
push
dec
lcall
or
cmp
inc
sbb
and
sbb
stos
cmp
mov
pop
aaa
and
pop
scas
int
inc
mov
xor
das
xchg
jmp
and
fwait
cmp
jecxz
xchg
cltd
jge
pop
andb
fs
sub
ret
in
add
jge
mov
enter
insb
stos
mov
jmp
loopne
fcoml
enter
mov
cwtl
roll
arpl
push
push
push
or
inc
cmc
mov
sbb
or
push
clc
int
dec
mov
in
lock
cmpsb
arpl
clc
popf
fistpll
outsb
das
adc
out
nop
scas
sub
out
in
and
scas
push
sub
ss
int3
daa
push
ss
sbb
xchg
in
jl
cmp
dec
dec
dec
pop
in
mov
pusha
xchg
push
xchg
loop
push
sub
imul
mov
inc
fisubs
pop
ret
xchg
lds
das
imul
xor
push
out
mov
pushf
ss
and
dec
push
bnd
mov
fisttpll
inc
xor
adc
mov
xchg
inc
sbb
add
xchg
push
enter
fadd
rcll
sub
cmc
jno
inc
lahf
das
scas
popa
push
cwtl
mov
jo
pop
fidivl
movsb
fiadds
xor
in
inc
pop
js
or
hlt
pop
dec
stos
pushf
aas
xlat
sub
adc
push
add
sub
xor
pop
add
cmpsl
add
arpl
mov
lea
insl
xor
aam
lcall
lret
inc
insl
inc
mov
dec
clc
add
mov
out
mov
shrb
mov
leave
pop
les
imul
sub
inc
call
cmpsl
xchg
push
push
pop
stos
sti
mov
jae
xor
mov
inc
std
and
lcall
jecxz
ss
pop
adc
bound
mov
scas
mov
add
mov
push
inc
stos
pop
sbb
or
or
pop
test
and
add
mov
jg
std
sahf
out
ds
shrl
fisubl
jns
lret
push
mov
inc
mov
and
or
sti
inc
not
add
loop
dec
sti
mul
std
call
getsec
adc
or
inc
sbb
shl
sbb
in
push
test
mov
sti
adc
lods
test
mov
fists
push
loope
xlat
cmp
mov
ss
out
fstp
fisubrs
popa
scas
xorb
divb
popa
mov
orl
adc
jecxz
push
inc
xchg
inc
insl
and
popf
and
sbbb
jns
jns
pop
fstp
arpl
lods
dec
sub
and
dec
cmpsl
nop
jnp
test
scas
fdivl
jb
popf
shl
mov
scas
xchg
push
dec
arpl
sub
ds
cltd
cmp
test
pop
ror
pop
shlb
sbb
add
mov
adc
mov
xor
repz
pusha
mov
mov
les
push
push
lock
jae,pt
pusha
mov
dec
xor
stos
pop
push
jle
pop
aas
sub
std
hlt
mov
jb
nop
pop
jge
loopne
ret
sub
mov
adc
test
or
std
mov
pushf
or
out
lods
shlb
fnstcw
sbb
pop
out
insb
dec
push
inc
stos
pop
ljmp
or
mov
pushf
into
mov
and
lods
daa
scas
pop
xor
mov
cwtl
pop
out
imul
or
cmp
xor
xor
cmc
ret
inc
inc
incb
fs
xchg
and
es
or
pushf
cmc
jo
pop
sub
xchg
inc
out
pop
insl
cmp
xor
inc
insb
inc
in
cmpsl
jle
cmp
jb
loope
or
adc
sub
pop
add
cmpsb
fstp
add
xchg
lea
or
push
mov
jae
clc
pop
hlt
fisttps
mov
cwtl
inc
inc
nop
pop
stc
sbb
add
xchg
leave
mov
mov
pop
insl
fwait
sub
push
repz
sub
xchg
cltd
int
imul
in
fadds
and
shlb
fdiv
xchg
jp
sbb
push
mov
lahf
adc
setge
js
xchg
mov
int
mov
mov
call
cmp
push
add
and
int
out
pop
jecxz
mov
mov
mov
jbe
or
notb
and
test
jecxz
and
pop
xchg
test
xor
pop
cmp
out
push
pop
xor
ss
fwait
jmp
jmp
push
xor
rcrl
pushf
pop
loope
inc
pop
mov
lahf
mov
ret
loopne
icebp
stc
jg
orb
out
insl
pop
or
adc
dec
push
sub
arpl
push
jne
and
mov
out
test
mov
shlb
add
sub
sbbb
xchg
inc
shrb
lret
shl
add
push
xchg
cmpsl
xor
es
test
sub
into
lea
jg
iretw
xchg
popf
xor
imul
loopne
pushl
and
sub
ds
mov
int3
fmulp
scas
roll
es
idivl
adc
sub
mov
int
jmp
popf
test
in
push
idivl
out
jg
cmp
add
addl
pop
add
push
xor
popa
je
pop
dec
scas
dec
mov
mov
std
sbb
test
add
fs
stc
push
scas
mov
push
and
les
fildl
push
jmp
in
outsb
xchg
loope
pop
daa
mov
or
loopne
pushf
popf
xor
mov
or
dec
inc
std
jbe
test
xchg
jae
dec
push
adc
jne
xchg
psrlq
in
sub
xor
xchg
lods
je
outsl
push
inc
pop
in
mov
add
mov
sbb
and
mov
mov
or
and
sub
popa
pop
inc
repnz
test
push
pop
pop
mov
nop
sarl
out
mov
add
pushf
mov
ret
jns
ja
inc
xor
sbb
andl
jp
add
je
test
push
sti
mov
ret
pop
sbbl
das
lock
outsb
mov
dec
ds
sbb
orb
push
into
les
movsb
mov
xchg
fsubs
mov
push
xor
sahf
push
test
lods
mov
mov
mov
mov
popa
fldt
and
push
lods
push
or
mov
mov
movsb
mov
push
mov
and
mov
sbb
mov
shrl
int3
jecxz
xor
cmc
aad
pushf
or
jmp
ss
mov
fnsave
scas
pop
cmp
push
inc
data16
sbb
loopne
push
or
gs
adc
or
std
ret
test
sbb
in
les
rcrb
enter
in
stc
sbb
out
jno
fdivrl
or
lcall
cmp
jge
inc
in
dec
fwait
dec
mov
lock
lods
hlt
scas
inc
push
xchg
push
loope
arpl
dec
dec
xor
pop
imul
push
cmpsb
fisttpl
loope
stos
std
push
sub
mov
fsubl
hlt
out
mov
inc
scas
dec
cmp
xor
mov
mov
mov
jae
addr16
mov
mov
mov
aaa
mov
and
sar
in
sbb
sbb
xor
xchg
insb
rorb
xchg
sub
ret
movsl
sbb
in
es
mov
mov
or
out
leave
pop
popf
enter
jae
jmp
or
mov
dec
jae
ret
cmovbe
vmovmskpd
cmp
sbb
push
lret
lock
jp
and
inc
stc
enter
popf
aam
sub
inc
push
cld
jmp
push
mov
xorl
scas
cltd
xchg
mov
mov
lcall
stc
dec
and
outsl
movsl
xlat
xorl
pushf
sbb
mov
scas
cmpsb
jbe
clc
lea
push
in
lcall
sub
cli
jge
nop
outsl
int3
add
xor
addr16
mov
cmc
dec
sub
ficomps
or
mov
adc
pop
and
mov
stc
cmp
push
xor
sarl
icebp
xor
or
mov
lods
out
fldcw
cli
mov
adc
lahf
lret
in
cmpl
enter
cmp
push
repz
add
sti
sahf
mov
ja
shrb
mov
sub
pop
and
dec
xchg
push
sbb
sbb
fs
add
nop
cmp
adcb
xchg
sbb
lahf
shrl
fiadds
add
xchg
xchg
jae
punpckhbw
roll
cmp
dec
mov
add
popa
movb
repnz
push
fisubrs
test
mov
aad
out
jnp
repz
iret
adc
loope
fwait
dec
cs
insb
and
xor
mov
inc
push
ss
leave
pop
mov
in
sub
ds
pop
mov
cltd
cld
stc
inc
push
or
pop
and
sub
mov
mov
jno
push
cmp
xchg
sarb
arpl
outsl
addb
jne
cwtl
das
enter
ja
cltd
cwtl
ret
sub
inc
inc
iret
jbe
gs
lahf
scas
leave
cmp
sbb
and
addb
and
lock
jo
pop
and
mov
xor
xlat
dec
pop
in
in
or
cli
sub
jns
and
mov
lods
ja
loope
cmpsl
sub
imul
rorb
and
je
mov
pop
out
mov
fldcw
pop
fdivrs
xor
in
pop
mov
push
scas
cmp
adc
rolb
fsubl
scas
std
or
pop
lahf
outsl
nop
inc
or
jae
mov
adcl
fadd
mov
std
es
lds
sbb
pop
call
and
nop
imul
cmp
add
xchg
sbb
lods
cmc
mulb
pop
or
fistps
pop
popa
loope
out
xchg
sbb
sbb
mov
int3
xchg
inc
sbb
xchg
xorl
xchg
ss
cmc
or
or
adc
push
scas
add
add
negl
into
ret
mov
cltd
fcoml
addr16
dec
jbe
sub
jecxz
jecxz
xchg
std
jecxz
cld
lea
in
cli
xlat
sub
lea
dec
int
adc
push
xor
inc
shlb
dec
jl
rcll
pushf
into
ficoml
add
push
arpl
mov
push
xchg
sbb
aas
sub
test
cmp
push
shrl
lds
and
into
fwait
rorb
xchg
shll
push
jbe
in
aas
sub
xor
aaa
sbb
and
rcrb
inc
push
hlt
dec
jle
lods
divb
sbb
xor
mov
cltd
lret
mov
mov
ss
int
cs
xchg
data16
stos
push
and
mov
into
call
jb
popf
pop
adc
iret
scas
bound
out
mov
shrl
mov
loope
scas
add
daa
addr16
xor
jle
xor
inc
sbb
sbb
mov
mov
push
add
push
mov
into
jmp
andb
push
pop
movsb
andl
rcrl
push
pop
or
mov
test
jne
xchg
dec
pop
fwait
inc
subl
leave
lds
aad
lahf
sbb
adc
sti
movsb
enter
jmp
jge
std
xor
xchg
xchg
bound
std
cs
dec
mov
mov
arpl
sbb
cltd
idiv
test
inc
jmp
dec
dec
scas
jmp
lcall
cmp
int3
rolb
divb
sub
es
jno
mov
ret
dec
push
imul
sbb
push
and
add
mov
mov
repnz
mov
popa
or
add
xchg
inc
insb
shll
add
add
mov
and
push
out
dec
cmp
das
jle
and
out
sub
mov
cmpsl
ljmp
and
push
dec
xchg
test
xor
test
add
xor
imul
outsl
mov
push
dec
dec
mov
mov
lds
xor
push
sbb
shl
scas
cs
and
sub
mov
push
stos
cs
push
pop
fldcw
roll
je
lock
fldenv
push
and
and
inc
push
or
les
lds
jg
inc
mov
in
jmp
pop
and
fs
in
lret
mov
jmp
movsb
mulb
or
ds
jne
outsl
test
repnz
cmc
inc
lea
jns
mov
mov
mov
shl
sub
lahf
xchg
cmp
repz
rol
mov
xchg
pop
mov
dec
add
je
mov
clc
jl
ret
lock
sbb
sub
push
adc
fnsave
inc
xchg
aam
jmp
jbe
sbb
ret
jp
mov
rol
sub
mov
dec
imul
xchg
adc
pop
jae
mov
mov
cltd
jg
mov
jns
push
out
mov
scas
jg
scas
pushf
xor
cmp
gs
aad
test
mov
pop
cltd
imul
cmp
sub
in
sti
or
mov
or
jae
out
jns
push
and
add
inc
or
fcoml
xchg
xchg
cs
mov
dec
scas
push
mov
cmp
sti
push
mov
ftst
inc
cmp
pop
mov
xchg
dec
xlat
mov
cmp
lock
inc
ds
mov
fdivs
sbb
xchg
add
ja
mov
inc
add
and
xor
test
jb
popl
mov
push
das
in
pop
js
shl
js
sub
xchg
or
xor
or
sahf
in
je
out
dec
cli
push
add
roll
mov
jne
pop
xchg
int
xchg
dec
push
pop
inc
fs
inc
mov
dec
roll
arpl
in
add
dec
xchg
lret
mov
cmc
repz
jae
mov
ret
sbbl
imul
and
sub
bound
in
je
pop
push
or
pop
mov
outsl
pop
push
int
in
jae
jo
push
imul
push
enter
jge
pop
cmp
or
jnp
out
rcll
int
pop
sub
inc
test
rcll
sub
adc
xor
pop
outsl
xchg
pusha
daa
fwait
lcall
mov
fimuls
push
or
dec
add
adc
scas
jmp
sub
sarb
push
xchg
and
mov
mov
ret
rolb
outsl
icebp
mov
push
add
add
jo,pt
jb
cmpl
in
and
frstor
jno
xor
add
xor
rcll
xor
lret
loopne
ds
cs
jg
stos
test
dec
push
or
fisttpl
in
clc
dec
stc
and
add
and
push
aaa
xor
sub
xchg
mov
pusha
fimuls
jge
pop
in
or
testl
mov
sbb
sbbb
push
cmp
outsb
sbb
ds
add
lret
mov
xchg
fnop
or
lock
jmp
sbb
ret
cmp
mov
outsb
pop
sbb
and
test
or
les
inc
int3
aas
mov
cld
mov
test
lds
xor
mov
inc
int
cmp
aas
sahf
fldcw
cli
mov
je
inc
adc
pop
jmp
and
xchg
rolb
inc
out
push
out
pop
fstl
jno
arpl
imulb
stos
jge
mov
adc
jmp
jp
pushf
cltd
repnz
sub
out
aaa
daa
and
in
or
pushl
pop
fiaddl
in
rolb
mov
push
setbe
push
mov
test
divl
cmp
add
iret
mov
dec
mov
and
enter
jg
fdiv
lahf
js
push
cli
ret
push
cltd
sub
sbb
rorb
insb
adc
leave
add
loope
add
jns
mov
out
mov
sub
hlt
xchg
jmp
clc
cmpsl
jp
aas
jae
mov
mov
sub
mov
dec
mov
in
jecxz
fisubrs
pop
mov
jns
xchg
mov
xchg
call
push
sbb
xchg
shll
iret
and
mov
divl
test
xchg
xlat
sbb
rorl
mov
xor
loope
mov
pop
pause
push
cmp
leave
sbb
pop
movsl
fldenv
stc
sbb
inc
fdivs
push
sbb
jne,pn
xor
popa
push
ja
iret
jge
adc
negl
int
dec
fimull
movsb
aas
push
bsf
imul
fdivp
subb
lret
data16
lret
cmpsl
aam
jmp
loopne
and
popl
push
pop
or
les
dec
out
addl
lret
jg
and
cmp
xlat
jbe
jns
imul
mov
jne
push
decb
mov
inc
lods
xchg
pop
dec
and
jne
out
popl
mov
and
pushf
mov
inc
jns
in
push
jl
daa
out
adc
fsts
cmpsb
sahf
inc
jae
xor
out
or
pop
nop
fiadds
int
xchg
mov
xchg
es
jmp
mov
and
test
fcmovnbe
xchg
iret
or
cmp
mov
mov
mov
push
cld
add
cmc
flds
fdivr
jbe
jo
mov
xchg
mov
nop
imul
mov
mov
je
pop
sub
int
scas
hlt
and
int
cmp
pop
insb
and
aaa
or
imul
movsl
ficomps
in
or
inc
mov
fwait
sub
test
lcall
inc
mov
inc
xor
inc
rclb
push
lret
sbb
movsb
addr16
hlt
cld
and
addl
adc
fmull
dec
sub
movsb
movsl
mov
push
sbb
lahf
pop
jl
fmul
aad
mov
xor
roll
iret
adc
jbe
jmp
xchg
rcrb
cmp
into
arpl
xlat
sub
je
test
repnz
ret
jb
repz
cld
sarb
stos
cwtl
fistpll
mov
rcl
bnd
roll
aaa
lock
mov
aam
xchg
imul
push
je
movsb
xchg
leave
push
insl
sti
jmp
js
push
pop
jl
xor
insl
icebp
mov
imul
push
movsl
lods
xchg
outsb
or
push
sub
push
hlt
xlat
loope
or
loope
popf
nop
pop
mov
dec
push
in
jmp
in
mov
loope
shr
sbb
outsl
mov
test
mov
cmp
pop
es
pop
jmp
fisttpl
jo
inc
mov
push
adc
xchg
and
xor
loop
add
cmp
mov
jl
sbb
or
out
mov
std
jmp
in
ss
jmp
sub
jae
mov
cwtl
jb
loope
shrl
push
dec
les
gs
mov
std
add
int3
test
inc
xor
inc
mov
add
aam
bound
jbe
fldt
fcoms
pop
std
fxch
cmp
pop
loopne
pop
repz
scas
mov
icebp
leave
mov
add
cs
fidivs
mov
lods
movsb
popf
popf
pop
fisttpll
lods
fisttpl
jnp
popa
mov
push
stos
outsb
cmp
sbb
sbb
jmp
xor
pop
je
sbb
or
inc
xor
aas
jecxz
push
lret
cmpsl
leave
mov
sub
add
mov
dec
cmp
mov
inc
dec
sbb
hlt
dec
lret
out
pop
in
lods
jge
cmpsl
xchg
inc
sub
cs
xor
sbb
cmpsb
mov
fs
jge
mov
inc
pushf
jl
pop
lods
pop
fisttps
sti
mov
stos
sbbb
push
aas
fildll
loop
repnz
leave
aam
outsl
adc
xchg
faddl
repz
dec
cmp
bswap
pusha
cmpsb
aad
inc
inc
mov
push
movsb
lret
sbb
lds
cmp
xchg
es
test
sarl
nop
imul
insb
in
mov
popf
lahf
out
dec
jae
push
jmp
mov
mov
xor
push
adc
add
cmp
les
into
inc
push
lods
fisttpll
mov
fsubrp
aad
add
rcr
in
sbb
lcall
or
cmpsl
pop
ss
pop
adc
adc
aad
push
push
mov
adc
fcoms
shl
xchg
jge
gs
pop
imul
add
or
cmpsl
mov
in
in
push
fildl
jle
test
or
mov
push
push
push
dec
dec
cmp
in
mov
dec
add
pop
and
pop
mov
push
in
pop
aad
adc
sbb
sahf
fildll
xor
xchg
fsubl
mov
aad
mov
inc
pop
imul
test
mov
or
mov
and
shll
fstpl
test
inc
nop
inc
and
leave
push
or
inc
cmp
mov
leave
out
pop
gs
xor
call
repnz
jno
or
in
sub
add
vmovntdq
out
divl
lret
mov
cmc
insl
sub
pop
cmpsl
lea
aad
sub
jg
cmp
jge
mov
mov
cmp
js
jb
ljmp
pop
jle
cmp
pop
sbb
test
out
mov
mov
out
fsts
out
imul
and
in
inc
lods
xor
sahf
bound
sub
xchg
mov
cmpsb
sub
int3
shl
addr16
out
iret
loope
fldt
jge
mov
sbb
push
cld
mov
push
push
out
xor
in
sbb
fldenv
dec
cmpsl
dec
push
popf
insb
lods
mov
iret
or
int3
addr16
pop
insb
pop
ds
lods
dec
pop
insb
push
das
lods
push
stc
jae
ds
bound
lods
adc
sti
imul
call
repz
push
or
aaa
lock
js
push
pop
repz
sbb
scas
cmp
xor
jns
jns
mov
xor
push
sub
movsl
cmpsl
add
repz
dec
repz
pop
and
pop
das
shlb
sbb
in
mov
test
test
sbbl
fsubrs
push
sti
mov
lea
test
mov
fwait
scas
adc
xchg
mov
sub
data16
pop
and
loope
jo
rcrb
cmc
repz
je
out
pop
pop
mov
out
sti
out
subb
inc
mov
iret
lcall
out
loope
push
sbb
aas
fwait
call
dec
das
mov
es
int3
sbb
jg
cli
sarb
jb
fistpll
mul
mov
pushf
test
jno
dec
pop
ds
mov
pop
js
push
mov
arpl
pop
cli
inc
pop
cli
inc
or
push
hlt
push
jo
cwtl
mov
into
ror
or
mov
repnz
pop
cli
cwtl
push
adc
mov
daa
fstl
arpl
cmp
xchg
inc
ret
push
xor
repz
aas
push
iret
addr16
pop
mov
das
rep
adc
jp
inc
push
adc
or
dec
in
pushf
xchg
and
pop
test
jb
and
mov
jno
lret
and
xchg
mov
ja
ja
das
mov
pop
ret
rcrb
stos
sub
jg
sub
outsl
xlat
jb
jns
fdivl
mov
stc
enter
popa
fildll
movsb
cltd
lea
pop
imul
push
out
ljmp
cmpsl
inc
xlat
ds
mov
mov
pop
fsubl
xchg
push
inc
jecxz
jo
adcb
sub
mov
shll
in
xor
int3
fcmovne
ret
arpl
cmpsl
mov
mov
add
lock
shlb
pushf
mov
pop
cltd
jle
push
add
adc
inc
loopne
mov
sbb
out
adc
sub
mov
or
fiaddl
shrl
in
out
loop
jb
cld
pop
sti
dec
nop
xchg
dec
sub
or
cwtl
lods
out
out
call
push
scas
dec
stos
mov
xor
lods
lcall
loop
add
or
xchg
addb
aas
popf
sub
stos
loope
je
pop
sarl
jnp
fsts
cmp
sahf
mov
inc
or
jl
xchg
sbb
arpl
lods
mov
add
or
inc
pop
popa
call
jge
mov
mov
mov
and
inc
sbb
jecxz
shr
loope
push
and
shl
or
popf
or
imul
iret
mov
push
shll
xor
stos
pop
aad
or
cwtl
lds
je
lret
dec
or
leave
popa
roll
test
mov
xchg
nop
in
or
or
clc
scas
jecxz
xchg
sbb
mov
pushf
mov
sub
pop
adc
lods
inc
mov
cmpsl
icebp
rcr
pushf
adc
xor
jno
das
sub
pop
mov
js
movsb
jb
mov
pop
adc
push
int3
cmp
mov
jo
and
icebp
mov
outsl
xor
cld
push
out
mov
jbe
pop
bound
push
shlb
fldenv
imull
dec
sub
dec
cmc
addr16
movb
in
pop
jge
lret
stc
fldl
push
mov
mov
in
mov
mov
pushf
xor
notb
sub
dec
mov
add
jb
add
adc
je
das
inc
sti
pop
imulb
lret
mov
lcall
mov
mov
mov
mov
pop
pusha
sbb
je
sub
inc
ja
sub
xchg
push
lds
push
sub
dec
je
add
dec
aad
out
pop
ror
mov
and
mov
mov
and
xor
or
das
in
pop
nop
cmp
dec
jnp
mov
mov
stc
test
or
fwait
lods
repnz
pusha
ret
xor
inc
int
sbb
out
pop
shrb
lods
cltd
popf
jnp,pt
or
cld
push
shrb
cwtd
push
shrb
sbb
inc
inc
in
es
aam
shrb
cli
cld
sub
mov
inc
cli
adc
add
dec
in
pop
or
ja
mov
in
inc
lea
pop
sahf
mov
aad
push
mov
sub
fiaddl
out
jno
xchg
imul
push
shll
fsubp
pop
pop
adc
shr
dec
and
jns
mov
jl
sub
loop
into
int
dec
jle
or
sti
xchg
xor
jge
pop
push
lods
shr
mov
out
scas
sbb
movsl
mov
mov
cmp
into
cmp
jle
jecxz
lds
hlt
imul
adc
ljmp
pop
mov
mov
mov
out
out
push
pop
out
cmp
mov
cld
les
sub
jl
push
add
xor
fsubrl
ss
dec
or
and
pop
cmp
sub
dec
cmpsb
daa
adc
pusha
and
movsl
leave
mov
xor
sbb
mov
inc
ret
cmp
std
cmp
ss
lock
xchg
mov
jge
and
mov
push
cmp
insl
ret
ds
dec
shr
and
jp
popf
pop
outsb
inc
mov
movsb
mov
popl
bound
into
pusha
insb
push
mov
push
mov
jmp
fiadds
push
sbb
pop
sub
mov
pop
das
xchg
and
mov
enter
jo
lcall
cmp
rorb
lahf
mov
aam
mov
adc
xor
cmpsb
inc
mov
mov
xchg
adc
add
mov
sbb
xchg
into
lret
movsb
xchg
stos
enter
out
lock
mov
add
call
bound
insb
cmc
sahf
loope
int3
pop
setno
cmpsb
pop
stos
mov
push
sub
xlat
jbe
lahf
xchg
push
in
push
jp
adc
idiv
fcomp
pop
test
lods
adcl
cltd
mov
xor
add
cmpb
sbb
inc
xchg
push
xchg
ds
insl
arpl
mov
ja
mov
lock
or
clc
filds
pusha
das
subl
xchg
jno
daa
dec
pop
push
push
ds
cs
fstps
push
dec
push
bound
stos
ret
jo
mov
int3
aad
in
in
mul
in
sbb
sti
push
pop
in
and
jae
push
add
jmp
push
insb
orb
pushf
add
inc
or
shl
lahf
and
mov
or
aaa
cmpsb
sbb
cmc
les
dec
enter
roll
imul
imull
dec
lea
pop
pop
mov
mov
pop
cmp
testb
inc
push
ja
decb
pop
rcl
push
mov
test
push
vmread
cs
lods
inc
pusha
mov
imul
cmp
inc
jbe
sub
cmp
mov
pop
jle
or
lods
outsb
sbbb
ret
inc
es
mov
lock
aad
fstps
and
or
ss
dec
lret
mov
test
je
aam
out
and
xchg
into
hlt
mov
mov
add
or
mov
mov
pop
pop
frstor
fidivs
pop
pop
movsb
dec
icebp
orb
test
inc
dec
inc
sahf
fldcw
ret
add
push
jnp
cmc
divb
xchg
sarl
dec
cltd
sbb
leave
ljmp
push
dec
xlat
test
popa
add
in
cld
lret
mov
and
das
adc
fwait
mov
ror
jl
je
push
xchg
popa
jg
lds
jae
cmp
and
xchg
push
popf
push
leave
into
add
dec
dec
das
aas
sti
pop
add
pushf
fnstcw
rcrl
pop
repnz
psrld
rep
push
jle
popa
add
push
out
sbb
add
addl
stos
and
icebp
and
and
int3
test
xor
inc
pushf
sbb
xor
push
cmp
lahf
out
mov
xor
adc
mov
dec
clc
arpl
stos
push
pop
dec
in
out
fdivl
aad
and
sahf
push
mov
fdivrl
iret
popf
xor
jmp
mov
or
popa
stos
ficoms
jbe
pop
fidivrs
addl
sti
inc
test
cmp
push
test
xor
popf
lahf
and
pusha
aas
and
sahf
into
jo
data16
cltd
loope
inc
mov
rcl
lret
mov
push
xchg
mov
mov
inc
cld
push
int
lret
push
and
mov
lahf
cltd
xchg
insl
icebp
xlat
jl
int
fnstsw
imul
test
mov
xor
lock
call
sbb
out
xor
inc
lahf
sbb
adc
lea
or
js
jne
pusha
mov
pop
cmpsl
add
push
addr16
or
pop
in
inc
addr16
or
sbb
or
jl
lcall
ret
push
aam
and
and
mov
data16
xchg
rcll
pop
cmc
out
mov
add
xchg
pop
cmp
xorl
xchg
lods
jge
aaa
repz
sarb
jne
adc
jbe
mov
es
out
jo
decl
cmc
mov
loop
aam
addl
mov
or
sub
gs
lock
or
out
lahf
lcall
repnz
xor
es
lcall
js
inc
test
xchg
mov
sub
ds
mov
cmp
and
sub
cld
lods
sbb
dec
lret
mov
js
dec
push
ss
add
fcompl
jge
dec
or
push
add
xor
dec
sub
inc
inc
cltd
add
sub
sbb
lcall
icebp
loop
xlat
loopne
dec
pop
loop
lods
mov
push
add
fdivl
mov
sub
push
imul
out
pop
pop
fists
out
xor
mov
test
xor
fisttpll
notb
rorb
push
xor
orl
ret
std
fldenv
xchg
xchg
repnz
adc
xchg
int3
pop
rcrl
mov
int
push
sub
jge
cltd
divb
cmpl
cmpl
or
movsl
mov
lret
shl
out
rcll
sbb
fisttpll
ss
test
test
jno
adc
inc
ret
test
lahf
sbb
xchg
daa
pop
cwtl
mov
icebp
cmpsb
mov
pop
movsl
xchg
pop
sub
jnp
fisttpl
sbb
stos
mov
inc
sbb
movsl
ljmp
xor
dec
adc
aam
cmpsl
outsl
lret
cmp
xchg
or
cmp
imul
loope
testb
or
cs
jns
sub
xchg
jb
inc
pop
test
xlat
ror
mov
jg
repz
insl
data16
sar
roll
sbb
mov
scas
push
cmpsb
jo
mov
pop
es
pop
cmp
scas
ljmp
mov
aas
jle
xchg
sbb
dec
mov
movsb
dec
stc
pushf
nop
mov
vpsraw
sub
jge
xor
test
aad
sbb
rcrb
jge
dec
es
pop
shrl
sbb
or
mov
fisubl
push
cmp
sub
imul
testb
test
push
outsb
mov
repnz
inc
hlt
mov
cwtl
arpl
lock
ja
add
lds
xchg
iret
mov
cmp
std
cli
push
loop
cld
scas
add
jns
mov
mov
fwait
push
je
or
xorb
nop
adc
sbb
or
in
pusha
or
fcomi
xor
sbb
inc
cmp
adc
pop
test
cmp
out
pushf
ficoml
data16
xor
add
mov
xor
and
xchg
in
inc
xchg
mull
jae
lods
and
lods
lods
imul
cli
dec
gs
mov
adc
lret
movsl
cmp
jno
add
jbe
push
or
imul
mov
and
es
arpl
jg
or
mov
outsb
das
adc
push
arpl
imul
scas
xor
mov
mov
shll
test
loopne
jge
mov
xor
enter
adc
or
jg
pop
inc
daa
xor
mov
out
dec
jecxz
dec
loope
loopne
mov
out
lahf
mov
cmpb
idivb
adc
ss
cmpsl
stos
int
xchg
test
scas
ficomps
test
mov
cmc
sti
addb
outsb
addb
or
out
jg
stos
or
fdiv
inc
test
push
jecxz
mov
xchg
lods
out
ret
and
pop
xor
rolb
insl
sbbl
mov
dec
mov
pop
stos
sub
cmp
and
ja
addr16
or
mov
sbb
out
outsb
les
mov
in
pop
test
pop
movsl
repnz
jnp
mov
and
lods
push
mov
or
xor
subl
and
stc
insb
lcall
push
mov
pop
cwtl
cmc
int3
lret
mov
mov
dec
cli
rol
mov
ret
loope
movsl
xor
and
push
jbe
loope
or
int3
pop
sub
in
aaa
add
cwtl
in
xor
pop
xchg
xchg
shlb
inc
sbb
xchg
push
inc
xchg
dec
insb
pushf
sub
test
mov
and
cmp
scas
testl
ret
mov
ffree
loop
jg
iret
or
push
inc
inc
jmp
mov
xorb
xor
mov
xlat
fs
pop
jno
inc
adc
in
icebp
cwtl
cltd
mov
sbb
xor
test
jae
mov
daa
xchg
dec
lock
je
out
cmp
jmp
scas
mov
mov
je
or
sbbb
movsb
mov
cld
pop
sarb
push
jg
jae
push
sbb
jmp
sbb
jb
adc
icebp
mov
pop
dec
jbe
stos
test
fst
insb
loopne
xchg
ja
add
adc
inc
cltd
push
fcomi
xor
popa
sub
mov
in
scas
fwait
lds
and
sbb
xor
xor
push
inc
int3
repz
jo
fldl
inc
dec
gs
test
imul
leave
into
imul
adc
insl
repnz
cmpsl
pop
pop
mov
xor
into
addr16
add
fs
xchg
insl
imul
mov
testb
icebp
push
pop
dec
shlb
call
pop
or
stc
fwait
or
roll
leave
sahf
mov
subl
adc
inc
jne
adc
aad
push
sbb
jmp
repnz
dec
int3
jb
repz
push
lcall
inc
je
jbe
xlat
or
test
loope
movsb
pop
jge
cltd
mov
inc
sahf
mov
ljmp
push
out
push
js
adc
and
hlt
pusha
repz
ja
mov
mov
ss
dec
popa
jp
lcall
mov
fildll
andb
stc
xchg
test
js
test
pop
dec
sub
scas
mov
mov
push
cli
jbe
mov
pop
adc
cs
dec
sub
sbbl
jne
jnp
xchg
ljmp
sbb
orb
add
ljmp
sub
into
pop
mov
inc
dec
test
mov
mov
dec
scas
inc
rorb
cli
bound
leave
xchg
inc
and
imull
mov
sbb
mov
pop
loopne
adcb
clc
adc
out
sbb
outsb
psrlq
lods
adc
sti
jg
aad
popf
and
mov
jne
fnstsw
sbb
into
and
adc
mov
popa
out
push
out
cmp
adc
andb
or
in
cs
rcrb
in
jp
cmp
mov
pusha
pop
mov
mov
mov
cmpsb
xchg
stc
xchg
cli
ljmp
push
aad
into
push
mov
arpl
int
mov
adc
dec
lock
les
inc
mov
mov
mov
aas
rcl
and
sub
cmp
jge
jge
mov
in
push
mov
cmp
in
divl
stc
inc
push
cli
lods
aas
scas
shlw
push
fisttpl
mov
push
fmull
loop
lds
jnp
movsl
push
fdivrl
cltd
mov
cmpsb
inc
push
jne
cmpsb
lret
jmp
loop
pusha
movsl
daa
xchg
aad
popa
subb
in
sbb
cs
mov
push
es
popa
loopne
movsb
test
ja
pop
repnz
pop
sbbb
xchg
push
call
xchg
push
jmp
fucomip
dec
loop
jg
icebp
out
lcall
ret
int
mov
ror
mov
xorb
adc
sar
in
jo
dec
js
test
rcll
mov
push
jae
hlt
mov
ficoml
dec
arpl
fbld
sbb
arpl
push
rcr
cmc
xchg
mov
ret
push
and
rcrb
cmc
push
mov
mov
jmp
stos
or
cmpsb
jae
pop
dec
out
jmp
adc
xor
movsl
scas
jle
jmp
xchg
icebp
ds
xor
and
mov
adc
xor
jnp
lock
push
std
rcrl
xchg
pop
and
nop
xlat
jle
xchg
xor
jg
cmp
lods
adc
enter
xor
sbb
fildll
push
pop
sbb
daa
adc
fmuls
sarl
dec
xchg
pushw
fsubrp
out
jge
rclb
cmp
cmc
dec
outsl
cmp
mov
push
add
push
clc
cmp
and
push
xor
adc
fiaddl
push
fs
mov
movsl
jb
push
push
mov
and
movsl
xor
fdivs
mov
push
mov
stc
mov
pop
mov
loop
test
push
outsb
loope
adc
xchg
dec
jp
xor
lea
adc
sbb
pop
and
ret
sbb
jbe
pushf
push
xlat
shl
leave
mov
ret
inc
and
sub
push
int
es
lods
and
mov
insb
pushf
inc
cs
pop
cmp
xor
add
mov
push
sbb
rcll
inc
inc
fisubl
ss
push
push
fsub
jne
mov
std
adc
lods
or
sub
mov
int3
add
int3
js
mov
cmp
mov
or
sub
cmp
ss
sbb
jp
or
push
mov
add
mov
lods
jne
cli
xlat
out
addr16
jnp
mov
orl
push
movsb
or
ja
sbb
push
in
pushl
mov
imul
mov
imul
xor
xchg
fcoml
xor
sub
dec
iret
fcmovbe
jg
and
fdivrs
xchg
je
aam
ljmp
adc
mov
push
enter
nop
icebp
push
sbbb
mov
pavgb
rcl
cpuid
adc
fstpt
jns
arpl
aam
and
push
ficoml
mov
lret
rorl
mov
pop
push
pop
call
es
icebp
ja
jae
lret
scas
shrl
push
adc
out
frstor
dec
xchg
cmp
cmc
jecxz
fs
adc
pop
movsl
lods
sbb
icebp
lret
data16
andl
adc
into
movsl
xchg
pop
push
fcmovne
imul
sahf
sbb
xor
lods
ret
shll
pop
jne
xchg
mov
call
popa
out
int3
lahf
sbb
mov
push
int
out
lret
sbb
jle
mov
jae
ret
push
add
pop
xchg
aam
mov
push
and
movsb
sub
jmp
pop
xchg
movsb
lahf
imul
dec
cmp
movsl
jmp
cltd
jp
test
or
and
pusha
pushl
sub
mov
stos
hlt
clc
add
aad
test
xchg
dec
lret
jo
insl
mov
scas
sbb
fs
mov
add
inc
in
test
sarl
lret
fwait
arpl
mov
adcl
sbb
sbb
ljmp
faddl
das
push
cmp
xchg
call
sub
nop
icebp
outsb
sub
push
imul
call
fsts
xchg
sub
cmp
or
mov
popa
outsb
leave
cmpsl
and
mov
mov
fisubl
cld
push
ds
cltd
pop
xor
mov
jmp
inc
or
xchg
das
clc
push
nop
cltd
test
add
fwait
pop
mov
lds
js
jnp
ja
adc
sbb
push
push
bound
lods
das
sarb
push
stc
cwtl
jne
roll
fcomps
xlat
pop
in
bound
inc
mov
adc
ret
jb
jecxz
xchg
xor
jle
loop
xor
push
rorl
dec
xor
lret
xchg
sbb
fcomps
cld
pop
les
push
jl
mov
cmpsb
add
sub
add
push
fstl
xor
rcl
in
pop
sub
mov
in
lock
mov
sahf
scas
or
lret
lahf
pop
pop
and
dec
ror
jmp
iret
repz
inc
ret
xchg
add
adc
in
push
sahf
sbb
loop
insb
cmp
jg
loope
sbb
pop
push
call
std
inc
fs
pusha
mov
cmp
scas
out
ljmp
in
add
mov
jnp
std
mov
pop
cmpsb
and
test
mov
cmp
lods
data16
dec
repnz
add
in
hlt
ret
js
dec
inc
jno
xchg
loope
pop
mov
dec
mov
jle
mov
push
adc
cs
mov
mov
push
push
or
das
cmp
adc
shll
lcall
daa
scas
inc
xor
iret
sbb
sub
punpcklbw
mov
mov
pop
xchg
das
sbb
adc
push
test
pop
data16
mov
xlat
xchg
push
mov
lods
stc
jne
dec
rcrl
daa
mov
enter
std
dec
sub
out
push
dec
and
jmp
push
sub
nop
or
adc
es
movsb
adc
or
icebp
adc
cmp
push
or
jge
sbb
or
scas
xchg
lods
inc
pusha
mov
jae
pop
popf
daa
and
adc
je
js
and
popl
mov
jmp
push
les
ss
sub
cmp
mov
cmp
aad
pop
nop
lds
pusha
push
xchg
mov
inc
cld
mov
aad
push
mov
addr16
stc
xor
push
cld
cli
cmpsb
test
inc
out
mov
jmp
mov
push
xlat
cmpsb
push
ficoml
fdivrs
sub
lret
scas
cmp
repnz
dec
xor
in
mov
pop
insb
mov
lds
adc
and
repnz
inc
fsub
clc
xor
push
dec
mov
mov
std
imul
inc
pushf
hlt
and
test
inc
enter
mov
cmp
xchg
sub
cld
outsl
sub
fcoml
xor
iret
pop
jecxz
mov
lea
rorb
ret
cmp
sbb
dec
mov
xor
push
fidivrl
push
fstl
test
scas
lds
jne
aaa
sbb
push
cmpl
ficompl
rclb
in
or
sbb
fsubrs
jnp
mov
dec
sbb
roll
mov
adcl
push
fst
adc
les
jnp
push
test
push
out
mov
jecxz
loop
or
inc
inc
mov
shll
mov
fstpt
aam
sbb
pop
in
mov
and
mull
or
movsb
or
sarb
inc
adc
xchg
push
push
incl
push
pop
push
mov
loop
cmc
dec
imul
jge
and
adc
rcr
iret
jecxz
cmovge
movsb
or
das
repnz
jp
lods
stc
cmpsl
pop
lahf
xchg
dec
lock
lcall
mov
pop
and
enter
nop
pop
ror
shrb
jp
push
sbb
mov
cmp
clc
rcr
add
movsl
jnp
mov
sbb
icebp
mov
sub
sti
and
jg
popf
push
xchg
jnp
jg
data16
stc
add
mov
push
jmp
imul
andl
aaa
les
mov
add
xchg
je
add
mov
sbb
push
lods
fucomp
pop
rorb
sbb
frstor
cmp
fisttpl
data16
pop
fildll
cld
sbb
mov
shl
push
jb
outsl
repz
ret
pop
sub
push
xchg
in
push
inc
ror
stos
push
scas
jge
aad
test
sub
adc
adc
jns
call
lcall
test
xchg
jge
aam
cmp
repnz
call
dec
cmp
jl
inc
cmp
hlt
and
sahf
or
xchg
leave
sti
jmp
sbb
pop
call
push
repz
cs
mov
push
dec
adc
lea
mov
into
mov
xor
push
cmp
cld
adc
sub
stos
or
cmp
xchg
mov
pop
xchg
out
pop
push
mov
push
icebp
or
mov
clc
jp
jae
inc
shll
in
xor
pushf
jnp
ret
mov
or
sub
pop
sub
fildl
iret
vmwrite
pop
xor
mov
adc
mov
mov
loop
mov
lcall
xchg
mov
and
xchg
adc
test
mov
or
aaa
aam
dec
int
jns
jb
pop
rolb
push
or
mov
mov
loope
sub
stc
pcmpeqw
mov
pop
repz
mov
daa
stc
adc
dec
xor
push
sbb
rol
jecxz
pusha
cmp
lcall
cmpsl
loope
shlb
push
pop
cmp
stos
xchg
fsubs
mov
and
jns
push
mov
mov
mov
pop
xchg
inc
mov
data16
push
imul
in
hlt
int
out
jns
insl
sbb
dec
push
sbb
adcb
bound
or
in
add
ljmp
lahf
in
stos
fadds
out
cmp
sbb
movsl
sbb
xor
sahf
scas
out
cmpsl
stos
jge
repnz
mov
pop
fisubs
jmp
mov
fdivrp
shr
sar
ds
inc
sbb
mov
pop
repz
push
shr
imul
or
inc
xchg
mov
movsl
sub
jle
sbb
dec
cmp
leave
sbb
xor
popf
cmp
into
iret
jmp
xchg
sahf
mov
cmp
sub
mov
xor
in
mov
adc
ds
les
cmpsl
xchg
xchg
repnz
in
mov
sahf
push
jbe
scas
sbb
pop
xchg
and
dec
leave
test
push
xor
das
jl
mov
push
pop
je
data16
in
call
in
fcos
xchg
fwait
out
test
mov
pusha
sub
movsb
fdiv
not
stos
nop
mov
inc
movsb
lods
pop
stos
or
mov
push
mov
fcomip
in
mov
or
dec
mov
in
adc
pop
sub
mov
fcmovnu
xlat
mov
fisubs
dec
pop
lock
push
or
push
xchg
mov
mov
add
mov
jge
ret
push
cmpsl
jbe
and
xchg
pushf
fstpl
sub
rcl
ficoml
pop
push
cmp
rorb
in
and
fst
push
mov
xchg
popa
or
xchg
pop
imul
cmp
jl
pop
xor
gs
iret
inc
test
divl
repz
xchg
in
jb
loop
pushf
dec
or
sbb
sbb
xorl
and
mov
lret
ret
dec
pop
filds
imul
dec
arpl
rcr
orb
mov
iret
push
mov
xchg
iret
mov
push
sbb
mov
adc
out
xor
into
pop
leave
or
test
xor
scas
jo
movsb
mov
cmp
pop
fiadds
sub
in
inc
insl
cmpsb
std
aad
push
lock
pop
pop
pusha
sbb
lods
ljmp
fnsave
jmp
add
loope
mov
popf
fdivrl
aas
xlat
sarb
cmp
aam
adc
cmp
int3
mov
mov
or
cltd
movb
sti
outsb
jle
pop
xor
mov
addl
or
jg
push
repnz
je
shlb
cmp
mov
sarb
in
mov
add
jecxz
adc
mov
aas
insb
adc
xor
das
mov
mov
sub
or
out
imul
and
dec
cmp
shrb
dec
lret
aad
inc
or
dec
xor
or
jae
negl
mov
jmp
insb
fisttpll
cs
mov
xor
push
mov
push
pop
ljmp
add
pop
sbb
popa
outsl
xor
sub
adc
jae
adc
xchg
or
div
cmc
sar
fistl
and
xchg
push
call
shrb
push
sarb
jne
mov
xor
adc
rorb
push
in
add
push
fldenv
cmp
pop
sub
xor
xor
push
mov
cwtl
fcoms
test
pushf
dec
sbb
mov
mov
leave
sub
inc
mov
add
fimull
jge
int3
dec
adc
cld
hlt
daa
mov
rorb
call
mov
xlat
aas
adc
stc
imul
cmpsl
adc
movsb
clc
call
lcall
cld
jl
mov
dec
jae
lods
push
jns
xor
xchg
mov
mov
jo
shll
xcrypt-cbc
cmpsl
xlat
out
jecxz
ror
xor
loop
stos
aam
pop
scas
inc
cmp
mov
mov
cmp
pop
mov
stos
jmp
jns
movsl
js
mov
les
frstor
stc
push
mov
in
add
push
push
pop
xchg
jb
addr16
mov
js
stos
testb
out
orl
xchg
enter
mov
jb
and
pop
and
out
xchg
mov
xchg
push
pop
add
sub
xchg
sub
les
imul
stos
call
mov
sbb
jl
xchg
ret
cmp
jg
inc
js
add
imul
push
mov
jo
and
frstor
xchg
pop
in
scas
sbb
xor
movsl
push
gs
xlat
rcl
fcomps
push
add
sbb
jae
pop
fwait
out
sub
xlat
jbe
jp
outsb
pop
aaa
repnz
push
xchg
imul
mov
mov
add
mov
out
cmp
add
jle
jo
ds
xlat
jp
cld
lret
mov
add
mov
hlt
or
inc
data16
lret
dec
stos
dec
dec
popf
pusha
push
test
mov
add
ljmp
mov
and
jns
fsts
loope
bound
cli
roll
xlat
ret
ljmp
cmp
rclb
cltd
mov
mov
mov
loop
daa
cmp
or
mov
jns
pop
les
pop
jmp
pushw
push
mov
cmp
fisttpll
jl
shr
sbb
sahf
jno
hlt
in
cmp
adc
push
pop
mov
sbb
and
test
adc
jns
cmp
fsubrs
aad
jne
cltd
loop
mov
icebp
test
pop
scas
pop
mov
push
sahf
jns
cmp
mov
cmpsb
or
inc
sbb
xchg
push
pop
das
dec
cmp
sbb
cmp
adc
nop
dec
lods
stc
daa
push
xor
pop
dec
push
fwait
hlt
inc
gs
fs
int3
popf
cmp
xor
and
ficoms
mov
fisttpll
xchg
pop
lods
push
imul
js
leave
insb
jp
ror
nop
add
filds
xchg
dec
out
xor
sub
mov
es
loop
fiaddl
cmpsl
arpl
lret
pop
imul
add
or
scas
pushl
cmpsb
pop
mov
xor
cmp
bound
and
lods
or
subb
push
mov
sub
outsl
dec
mov
mov
leave
in
xchg
inc
rcrb
cmc
pop
lahf
rcl
pop
pop
subb
and
in
data16
and
adc
and
sub
repz
mov
xchg
lea
jmp
in
or
xchg
bound
popa
sub
cmc
je
mov
adc
mov
xor
gs
add
mulb
hlt
cmovns
inc
movl
cmp
cwtl
or
inc
mov
pop
xchg
and
aad
data16
dec
and
add
inc
arpl
loopne
xor
mov
stos
inc
xlat
movsb
fcmovb
mov
cmp
add
mov
add
int3
imul
jmp
inc
mov
leave
jbe
ljmp
ret
adcb
jmp
fisttpll
hlt
mov
inc
inc
xor
dec
sub
push
cmp
scas
popa
inc
fldenv
int3
mov
test
xorl
push
pop
pop
loope
daa
outsl
imul
mov
sar
xlat
pop
sbb
or
cli
adc
lahf
or
rorl
jmp
fstl
sbb
mov
out
orb
fwait
dec
jge
mov
mov
popa
in
pop
cmp
jg
push
inc
mov
and
das
or
pop
cld
cmp
sub
nop
pop
xchg
cmpb
fisubl
jno
call
push
rorb
jb
add
pop
pop
sbb
or
push
jmp
call
aam
orb
mov
imul
ud1
push
inc
ss
xchg
push
inc
push
jg
mov
push
nop
incl
movsl
mov
xor
sub
inc
in
push
out
es
mov
xchg
pop
call
dec
imul
adc
and
leave
mov
mov
sub
test
inc
bound
mov
push
pop
inc
jle
pop
addr16
and
xchg
dec
insl
mull
arpl
loopne
nop
mov
pop
add
xchg
sub
sbb
int
cmp
decl
mov
out
sbb
adc
cmpsb
test
mov
cmp
sarb
in
daa
out
xchg
ss
imul
pop
aas
das
cmp
std
push
xchg
xchg
shl
test
pop
and
or
or
fdivl
lods
fstps
sti
add
cmp
rclb
aaa
jg
int
icebp
xchg
popl
jne
lahf
jg
cmp
fsubs
push
mov
mov
les
addl
fildl
mov
adc
jg
inc
rcrl
sahf
mov
adcb
and
lahf
xchg
cld
fmuls
gs
lods
pop
sbb
movsl
pop
not
out
fistpl
xchg
ss
xchg
xchg
jle
mov
out
adc
adc
mov
aam
imul
push
dec
enter
adc
testb
imul
pop
jecxz
test
das
sub
adc
icebp
movsb
sbb
arpl
pusha
and
xlat
mov
stc
pop
test
push
fistl
das
cmp
xchg
mov
adc
aam
jno
jmp
inc
mov
jae
icebp
and
mov
adc
movsl
mov
jns
call
int
push
inc
or
dec
add
sub
fwait
dec
nop
lret
add
lea
push
jns,pt
ja
adc
cmp
pusha
xor
or
pop
outsl
inc
sbb
test
mov
pop
enter
sahf
mov
outsb
outsb
mov
js
aam
iret
int3
inc
mov
decl
fdivs
push
sub
lcall
icebp
dec
cmp
gs
cmp
xchg
jge
push
ret
aaa
or
ror
mov
mov
mov
mov
push
sbbl
into
repnz
shlb
into
pop
outsb
stc
inc
add
or
dec
sub
adc
mov
dec
push
add
sahf
mov
jns
dec
sbb
popf
or
dec
add
jle
push
pop
ja
loop
push
jmp
mov
in
lcall
xlat
scas
paddusb
in
pop
lods
lcall
in
inc
fs
repnz
pop
sbb
mov
pop
mov
mov
test
dec
std
add
sbb
sbb
pushf
sub
mov
mov
cli
push
jp
jno
dec
in
mov
adc
sub
or
and
loop
mov
xchg
dec
lds
daa
int
call
or
repnz
mov
js
lcall
hlt
mov
ljmp
push
jno
int
dec
repnz
xor
or
inc
ds
repz
call
push
and
testb
cs
push
mov
gs
lock
sarl
data16
pushf
xchg
lods
xor
faddl
imul
lods
cltd
inc
adc
pop
enter
cmp
xor
mov
and
mov
and
push
cmp
jne
clc
and
cmpb
inc
test
mov
cmpsb
call
push
jecxz
pop
or
jnp
jbe
pop
push
pop
mov
and
test
maxps
out
dec
ja
aaa
and
loope
lds
add
cld
fidivrl
push
jbe
mov
pop
sar
aam
aam
sub
stos
lea
mov
jae
rclb
cld
mov
addr16
xchg
adc
and
add
adc
sub
sti
pushf
push
mov
sub
out
push
das
push
gs
jno
push
mov
ror
sbb
push
sub
push
ret
mov
mov
mov
mov
icebp
ror
add
and
icebp
xchg
in
jns
xor
sub
cmp
stos
fstpt
aam
push
dec
fcmovnbe
and
and
xchg
movsl
mov
ja
insb
rcrl
scas
sbb
push
mov
push
inc
imul
lock
out
das
xor
popa
push
sbb
xor
movsb
xor
push
call
mov
lock
lret
inc
push
ds
xor
sbb
arpl
test
mov
inc
mov
mov
jle
aad
stc
lea
dec
cltd
fs
mov
xor
cwtl
pushf
dec
sbb
cld
popl
xor
push
push
mov
jo
cmpsb
in
pop
cld
arpl
decb
aad
gs
out
lret
std
sub
mov
rclb
add
adc
xchg
pop
call
popf
mov
mov
inc
mov
sbb
xor
cmp
add
repnz
mov
es
pop
divb
xor
icebp
iret
in
dec
aam
stos
dec
sbb
sbb
sahf
fldl
cmp
loop
in
adc
test
pop
sti
call
and
andb
es
mov
jmp
rcrl
fsubrs
mov
mov
pop
adc
xchg
lret
push
xchg
in
std
clc
dec
fisubs
imul
leave
xchg
icebp
jl
enter
mov
call
cld
pop
xor
jle
jmp
enter
cmp
dec
mov
hlt
mov
dec
or
mov
shrb
dec
push
scas
adc
call
jl
push
xchg
mov
in
call
pop
repz
sbb
mov
jge
jg
dec
in
aad
pop
in
imul
lcall
push
and
hlt
mov
mov
scas
adc
push
xchg
xor
push
int3
ds
sbb
inc
lock
sbb
cltd
outsb
push
sarb
int3
xchg
fidivs
fisttpl
cmc
repnz
and
dec
and
inc
inc
mov
xchg
mov
mov
pop
xchg
loop
add
lcall
hlt
inc
sub
stc
pop
rol
hlt
pop
cltd
sbb
out
mov
pop
data16
sahf
aad
sub
push
inc
orl
xor
rcrb
cs
lea
mov
mov
add
addr16
ds
sbb
dec
ret
into
movsb
add
repz
xchg
out
inc
rorl
stos
jae
jge
iret
push
cs
in
xor
aam
inc
in
inc
rorb
sbb
js
fucomip
out
test
jg
mov
push
into
mov
mov
pop
or
movsb
adc
jge
insl
xchg
not
dec
fisubrl
xor
xlat
sbb
push
xchg
stos
enter
pusha
add
pusha
aad
repnz
andl
decb
mov
dec
jp
cmp
out
and
sahf
jmp
mov
inc
fldenv
mov
clc
jmp
add
cld
int
addr16
mov
std
xor
orl
pop
lea
jmp
ss
ret
add
cld
daa
sub
sub
xor
xor
cmp
sbb
jo
lahf
mov
mov
adc
push
dec
xchg
jl
movsb
pop
sub
fdivl
push
mov
adc
inc
aas
jne
les
cmp
jl
and
pop
xor
clc
cmp
gs
incb
test
mov
adc
and
jae
push
inc
jecxz
sar
xchg
push
push
sub
pop
ss
adc
out
aam
int3
lods
out
mov
shl
nop
mov
push
push
les
sbb
jle
xor
aas
cmpsb
out
adc
lcall
test
idivb
sub
dec
loopne
adc
push
mov
sbb
dec
inc
lds
pop
lret
xchg
xchg
mov
add
jbe
add
xor
mov
push
xchg
shll
push
scas
nop
dec
add
and
mov
xchg
jecxz
pop
pop
shrl
mov
cltd
push
loope
outsl
and
adc
or
ja
dec
dec
cli
mov
rcrl
jnp
ret
add
xchg
jle
mov
inc
arpl
shll
loop
lea
jo
bound
and
sub
dec
or
pop
mov
add
sbb
lods
lahf
push
test
inc
lahf
xchg
out
mov
mov
outsl
push
mov
mull
sub
rorl
xor
sub
push
jne
push
stos
jle
adc
out
pop
lods
clc
addb
dec
loop
or
mov
cmp
andl
add
pop
lret
mov
insb
inc
cmp
xchg
lock
dec
movsw
mov
add
pop
adc
clc
mov
lcall
cwtl
push
mov
sub
in
int3
sbb
mov
jecxz
clc
jge
icebp
mov
sbb
xor
movsl
add
inc
aad
mov
xchg
es
pop
pop
pop
mov
gs
push
dec
xor
or
es
sub
jge
jge
and
mov
ja
sbb
je
insl
push
fsubp
pusha
add
xchg
leave
add
inc
xor
fidivl
sub
int3
das
sbb
lds
es
lds
popf
push
push
adcb
jmp
push
fwait
xorl
gs
sbb
fcomps
adc
mov
aad
xchg
cmpsl
call
outsl
cld
insl
lds
adc
ds
enter
insb
mov
out
lock
repnz
push
push
and
vmovddup
cmp
data16
repnz
ljmp
mov
jl
or
shll
stc
cwtl
push
inc
adc
push
fwait
psraw
jbe
xor
xor
jne
stc
ljmp
adc
xchg
push
mov
mov
sub
lds
aam
lock
jecxz
push
loopne
mov
mov
sub
dec
mov
addl
push
adc
lret
mov
xor
insb
mov
jo
cmp
add
pusha
jl
hlt
pop
inc
mov
push
fstp
in
dec
jo
movsl
lods
shl
pusha
dec
in
jo
push
cld
ds
dec
sti
outsb
jbe
inc
mov
lds
dec
add
ja
xchg
addr16
gs
adc
jmp
js
dec
ljmp
and
jmp
sti
cli
xchg
inc
in
sub
pop
out
cmp
pop
mov
loop
inc
adc
fwait
cld
shrl
and
inc
mov
xlat
out
into
jne
loope
jp
mov
jmp
ljmp
into
lods
mov
addl
jmp
out
enter
fs
cmp
aam
cmp
pop
adc
sbb
or
mov
push
int3
mov
mov
into
mov
mov
ljmp
fwait
nop
in
push
insb
inc
in
out
aad
loop
je
pminsw
out
xlat
adc
inc
stos
sti
incb
xlat
pop
sbb
ljmp
and
fcmovb
jo
ret
jge
in
fcoml
sbb
mov
shll
inc
dec
add
pop
in
dec
stc
or
aad
jo
xchg
nop
out
xchg
fcomps
xchg
iret
dec
das
pusha
push
dec
sub
int3
push
ret
jl
popf
mov
push
mov
iret
ljmp
shll
and
imul
repnz
and
jo
ja
int
sbb
jnp
adc
imul
ret
dec
push
ss
out
xor
xlat
mov
lcall
add
xor
xchg
mov
or
lods
sarb
sub
sub
cmpsb
push
push
outsl
roll
mov
jbe
adc
cmc
push
mov
inc
adc
xchg
sahf
dec
and
mov
stos
in
std
ds
sub
sar
test
cmp
iret
push
mov
std
sti
pop
jo
sub
loopne
and
add
push
insl
call
adc
int
je
lea
dec
pop
adc
dec
shl
mov
adc
ja
jbe
in
das
andl
push
lahf
subl
push
cmc
xchg
or
mov
cmp
jge
cld
push
jb
inc
jmp
subb
mov
cmp
xchg
loope
xchg
dec
loope
or
push
jae
add
dec
fadd
mulb
mov
test
sbb
inc
mov
mov
fidivs
negb
lods
and
xchg
xchg
mov
mov
dec
out
adc
sbb
xchg
add
dec
mov
test
cmpsb
sub
add
cmp
jle
push
ja
fs
outsb
adc
fcmovu
adc
repnz
mull
les
sbb
xor
sbb
jae
xchg
leave
fdivrs
nop
mov
mov
clc
adc
ds
int
or
js
iret
push
inc
pop
push
lods
ret
mov
lret
fnstcw
outsl
ret
or
xchg
mov
add
cltd
stos
aam
ljmp
xchg
jbe
adc
xchg
cmp
loop
sti
add
cmp
pop
push
mov
mov
fs
xor
rolb
xchg
loop
mov
mov
mov
add
push
out
in
hlt
into
imul
cmpl
test
pop
out
int
xlat
dec
mov
xor
mov
sbb
in
mov
outsb
iret
das
fstpl
lcall
sbb
mov
push
xor
push
es
aas
mov
pop
sub
es
scas
xchg
xchg
mov
lods
adc
mov
ficoml
je
fistl
jno
cs
or
pop
sub
imull
xor
xor
roll
lret
fsubl
cmc
les
pop
rcrl
lods
add
inc
rcll
pop
imul
mov
cmpl
lock
jge
rcr
popf
cli
pop
loopne
rcr
out
or
addb
jmp
and
imul
mov
int3
jne
pop
in
into
shlb
mov
and
popf
int
dec
lret
repnz
mov
es
cmp
not
clc
sub
cs
bound
je
adc
xor
imul
imul
testb
or
rol
lahf
jle
xor
in
cld
test
jno
fildl
mov
add
lret
dec
arpl
mov
push
loopne
scas
fs
fcoml
cmp
cmpb
or
lock
or
xor
in
shll
movsb
ret
push
sti
lods
addl
adc
mov
xor
imull
xchg
adc
jo
lahf
insl
into
test
pop
push
mov
jae
cli
inc
loopne
xor
imul
adc
pop
out
imul
jmp
lea
out
jge
mov
aas
sti
lcall
lret
sub
bswap
xchg
inc
call
stos
sub
inc
sub
mov
dec
out
sub
xchg
loopne
pop
mov
movsb
lret
pop
xlat
xchg
lcall
cmp
test
es
push
mov
outsl
adc
and
movsb
add
in
jnp
cmp
les
push
mov
repz
clc
rolb
cmc
lds
popl
pop
rcr
je
es
fdiv
cmpsb
ds
adcb
lahf
add
xorl
sbb
call
imul
push
iret
xlat
fwait
mov
push
ret
mov
pop
in
sub
mov
rcl
jmp
stos
scas
mov
decl
lret
imul
push
push
aas
cltd
sub
sub
aas
dec
cltd
push
mov
lret
sbb
sbb
lods
mov
sbb
mov
addr16
adc
das
mov
sub
inc
leave
sbb
fstp
jge
les
inc
mov
mov
ret
enter
mov
dec
mov
xchg
mov
stc
out
in
sti
out
pop
sub
push
out
repz
lods
bound
mov
cltd
push
repnz
ja
inc
cmp
push
data16
clc
jle
push
sbb
dec
mov
cmp
add
jbe
std
mov
shlb
pop
xor
ljmp
test
xor
cmpsl
xchg
mov
lcall
cmp
jns
xor
mov
jbe
push
int
in
push
adc
nop
push
fwait
mov
imull
mov
fs
test
sub
cld
test
pushf
into
daa
scas
out
mov
and
jne
push
fucomip
sar
sahf
sub
pop
lahf
in
and
xor
add
scas
cmp
dec
flds
inc
jle
stos
sub
push
pop
or
rorb
test
cmp
les
push
loope
pop
jmp
xchg
pop
imul
daa
xor
pop
insb
cmp
mov
or
das
sub
xchg
mov
lds
unpckhps
xlat
jmp
in
cmpl
fbstp
loope
adc
jmp
andb
lahf
mov
aam
js
addr16
mov
sahf
imul
mov
stos
add
ja
mov
negl
dec
test
mov
addr16
jbe
xchg
add
fwait
cmpl
mov
dec
pop
lret
in
cmp
addr16
jp
inc
mov
or
push
negl
xchg
ss
bound
cwtl
mov
aad
scas
iret
or
pushl
sbb
add
sbb
scas
sbb
test
adc
add
mov
xchg
testb
les
mov
and
and
outsb
inc
stc
sub
cwtl
outsl
fwait
pop
cli
fisttpll
sub
sub
add
inc
fdivrp
jg
pushf
lahf
addr16
and
jmp
mov
adc
mov
orl
out
cmpsb
mov
outsb
push
movsl
mov
insb
test
jle
push
lock
jmp
mov
cmp
fstl
std
int
fcmovnu
out
xchg
in
rolb
lahf
scas
xorl
jae
loopne
mov
xchg
add
xchg
sti
or
xchg
nop
cltd
popf
mov
sar
test
add
out
orb
popa
add
enter
cli
je
push
je
push
mov
aad
in
shlb
xchg
enter
mov
push
cmpsb
or
inc
xchg
mov
push
sbb
sub
sbb
push
testb
roll
mov
xchg
cld
add
push
dec
arpl
sbb
pop
mov
push
jne
xchg
cmpsb
lahf
jo
test
and
lret
adc
xor
stos
sbb
jb
mov
pop
aas
pop
ret
dec
mov
jmp
xchg
jmp
les
lods
dec
mov
rorl
jno
push
dec
movsb
inc
push
mov
adc
aas
es
mov
mov
pop
sub
sbb
lret
xabort
dec
icebp
adc
push
mov
gs
sbb
nop
and
faddp
test
inc
repnz
lods
jae
adc
insb
adc
in
mov
mov
push
mov
sahf
cmp
addb
in
subb
int
out
cmp
inc
mov
dec
push
add
ja
jns
mov
inc
icebp
sbb
shrw
pop
sahf
scas
add
jbe
mov
call
insl
pusha
adcb
inc
fimull
inc
mov
es
cwtl
roll
mov
hlt
mov
mov
lahf
mov
js
inc
andl
adc
loop
sbb
daa
sub
mov
mov
sbb
out
inc
inc
sbb
jge
stos
jge
lock
movsb
mov
leave
jle
xor
jmp
fstpt
add
repz
repz
xor
dec
pop
sbb
push
ja
sub
ljmp
jno
xor
jg
lods
cwtl
cmp
fnstsw
nop
push
gs
lods
xchg
mov
push
sub
outsb
or
sub
sub
jae
das
dec
inc
das
in
inc
xor
pop
loopne
testb
jg
mov
cs
pop
pop
xor
scas
xchg
in
test
loopne
pop
cmp
lret
aad
xor
inc
adc
das
into
fnsave
and
sub
test
adc
lret
push
jns
xor
call
in
or
scas
xor
imul
mov
add
insl
cmp
xchg
es
mov
xchg
fstpl
mov
cmp
loope
stos
adc
pop
dec
xchg
add
sbb
rorb
jg
rorb
xchg
xorb
dec
ficoms
mov
adc
imul
mov
int
test
outsl
shl
call
xor
sbb
lcall
inc
rcll
les
xchg
jmp
les
xlat
dec
outsl
lahf
mov
inc
jnp
mov
lds
push
dec
gs
lods
mov
adcl
dec
fcoms
pushf
pusha
outsl
lahf
xchg
in
fisubrs
in
cmp
test
add
ret
pop
imul
adc
clc
mov
sti
inc
mov
or
inc
xor
rolb
push
clc
adcb
cmpb
add
mov
std
mov
xchg
mov
jns
call
push
arpl
iret
fildl
mov
or
and
or
or
jno
dec
jle
xchg
pop
pop
add
dec
mull
dec
inc
pop
add
shrb
mov
xor
jo
inc
lds
jns
es
adc
push
cmp
dec
jbe
push
pop
and
divb
outsb
inc
inc
jns
sbbl
cmpl
shll
decl
shll
cmpsl
mov
sub
loopne
push
xchg
and
nop
cmp
sahf
cmp
xor
test
aas
scas
psllw
cmpb
pop
inc
loopne
out
repnz
or
jno
dec
xor
jbe
or
and
xchg
jmp
and
mov
sbb
jp
and
lds
jo
mov
test
out
rcr
jns
mov
sub
sub
rcrb
xor
dec
in
aad
scas
jns
pop
jne
loop
mov
imul
ds
daa
out
scas
ss
inc
in
test
dec
pop
xor
pop
jno
mov
cmpsb
push
push
cld
cmp
jae
mov
xor
call
lods
mov
into
push
push
js
inc
push
push
outsb
ljmp
lock
bound
jge
xchg
or
ss
push
cli
xor
add
jae
and
jbe
inc
leave
bound
jge
popf
jecxz
pop
int
out
js
cli
sub
sbbl
xchg
les
xchg
lcall
enter
xor
stc
inc
dec
leave
mov
mov
mov
not
push
lds
mov
fiadds
outsl
pop
test
rorl
push
xor
stos
jns
lock
scas
out
stos
popf
push
stos
cmc
in
out
push
push
mov
lds
bound
jmp
je
ja
pop
outsl
inc
xchg
or
je
stos
sbb
mov
cmp
aaa
movsb
fs
adc
jns
jp
pushf
shll
sub
adc
jge
and
ficompl
push
ja
out
push
jmp
cld
mov
inc
add
ret
je
insl
xchg
inc
cs
repnz
sub
lea
pop
fnstcw
insb
mov
or
jmp
sub
adc
cmp
jne
test
sub
and
sub
sub
jl
gs
mov
sbb
xchg
cmpb
and
sub
sbb
aas
cmpsl
mov
mov
fimull
jo
test
ret
cld
mov
jne
mov
jg
jp
pop
xor
cmp
pop
mov
add
jns
add
leave
add
cmp
or
lock
pop
leave
add
adc
mov
pop
inc
xlat
ret
or
iret
xchg
sbb
lahf
movsl
or
lret
fistl
jns
and
into
cmp
rol
cld
and
adcb
cs
push
push
mov
pop
adc
push
xlat
push
jb
movsl
scas
jb
in
clc
cs
mov
cs
popf
imul
mov
cmp
rolb
pop
add
fadd
loope
xchg
jns
sbb
int3
mov
out
jg
shrb
sti
cmp
and
bound
cmp
dec
cmpsb
icebp
test
dec
aaa
sub
or
mov
sbb
inc
or
mov
jl
ret
mov
mov
out
cmc
imul
and
lods
mov
lcall
imul
pop
and
push
ds
hlt
pop
pop
scas
mov
jmp
lcall
pop
iret
mov
in
subb
xchg
jg
fldcw
cwtl
shrl
jb
popa
ret
push
call
sahf
daa
fwait
xorb
inc
out
pop
out
repz
pop
fidivrs
lods
push
pop
xor
cs
mov
pop
xchg
adc
arpl
nop
add
push
fadd
movsl
fidivrl
cs
jp
pusha
xchg
add
test
int3
push
data16
jge
mov
sti
dec
cmp
push
and
add
loopne
jg
pop
stos
std
adc
cmp
aad
lock
mov
sbb
inc
mov
mov
out
pop
ljmp
mov
aad
int
addr16
pop
pop
push
repz
cmp
pop
dec
push
sbb
push
push
loop
push
clc
jl
js
push
add
pop
lods
lods
jge
and
jp
sub
mov
pop
lahf
leave
mov
mov
cmp
xchg
sbb
stc
shl
cmp
loop
pusha
xchg
imul
ds
cmpsb
test
mov
push
rcrl
jp
aam
push
insl
push
xor
in
pop
or
and
sahf
sbb
dec
movsb
add
loop
loope
into
lods
xchg
pop
dec
bound
inc
push
and
adc
xor
push
sub
jmp
mov
stos
jns
mov
pushf
jmp
pop
lods
movsb
jb
pushf
push
pushf
das
das
lods
pop
or
cmp
movsl
inc
cli
dec
lea
xchg
pop
push
repz
pop
icebp
stos
pop
je
inc
repz
and
shrl
adc
outsb
jecxz
sub
mov
ds
es
mov
xorl
push
je
push
je
mov
out
jmp
push
fwait
jecxz
mov
sbb
xchg
sub
leave
dec
test
std
scas
sub
sub
loop
mov
lods
or
sbb
jb
idiv
push
sbb
jno
pop
pop
sub
decl
nop
out
les
cmp
mov
fld
loopne
pushf
pop
call
mov
inc
scas
add
or
inc
and
sbb
or
mov
push
dec
outsl
shlb
mov
ud1
fdivl
test
mov
insl
fistpl
sbb
adc
add
movsl
repnz
out
mov
mov
jae
or
cmp
pop
sub
sbb
mov
add
jns,pt
mov
adc
cmp
xor
ljmp
or
push
fs
inc
in
sbb
test
addl
pop
adc
call
jne
inc
mov
cmpsb
sub
adc
jp
fwait
dec
scas
mov
inc
jle
or
mov
mov
cs
xchg
testl
lock
clc
xorl
mov
push
mov
adc
mov
or
pmaxsw
dec
ds
fwait
pop
jmp
sbb
push
ja
in
loopne
clc
stc
mov
add
sti
cmc
dec
and
popl
outsb
iret
insl
scas
xchg
popa
inc
enter
les
data16
and
andb
jo
fsubl
adc
ds
outsl
mov
xchg
inc
adc
divl
cwtl
into
cmp
insb
inc
cmpb
test
mov
arpl
push
not
jno
jmp
adc
scas
add
dec
jmp
jl
ret
xchg
mov
fidivs
fisttps
pop
mov
dec
xchg
imul
mov
pushf
bound
pusha
not
cmc
faddl
mov
inc
push
xchg
push
adcb
ja
sub
imul
jbe
lcall
movsl
dec
push
jmp
in
mov
fadd
mov
sahf
rclb
adc
inc
push
movsl
jmp
rcll
fiaddl
xor
decb
int
push
sub
les
or
mov
ss
cmp
jbe
jecxz
gs
sbb
mov
outsl
xchg
push
add
sbb
inc
adc
negl
clc
cmp
sub
mov
inc
fisubrl
stc
mov
pop
jo
mov
push
stos
in
cmp
outsl
jnp
lods
add
call
es
or
mov
inc
divl
arpl
push
or
jb
sub
ljmp
dec
pop
xchg
jae
cltd
xchg
pop
push
xchg
mov
sarb
mov
in
inc
cmp
in
mov
jb
mov
shrl
inc
jecxz
and
add
scas
pop
xchg
fnstcw
jns
mov
loopne
inc
loopne
rcrb
sub
cmp
inc
and
mov
adc
in
xor
ljmp
mov
jnp
repnz
ja
jo
repnz
scas
pop
fistl
mov
pop
fmuls
xchg
clc
cmpsl
dec
loop
in
scas
out
jno
pop
addr16
popf
mov
into
aad
cmpl
sti
mov
lcall
rorb
ljmp
sub
add
fstpt
stos
dec
fildll
sti
adc
fucom
out
jp
lret
ficompl
or
cmp
je
lds
and
dec
or
scas
cmpsl
stos
dec
mov
inc
fimuls
xchg
fs
sbb
xor
mov
shll
fimull
jmp
lds
dec
sbb
mov
mov
ret
inc
jecxz
dec
loope
jge
je
jg
in
ret
mov
sbb
or
mov
push
gs
daa
push
cmp
fistl
repz
std
sbbl
ljmp
jp
mov
dec
jo
xor
mov
pop
adc
insl
mov
lcall
push
mov
pop
popf
sbb
loope
addb
adc
inc
movq
in
in
add
sub
jp
pop
cmp
cwtl
fistl
inc
add
mov
jmp
adc
dec
push
mov
push
mov
fs
lret
call
add
mov
mov
lahf
adc
test
rclb
add
xchg
rorb
and
aad
xchg
mov
in
sbb
lods
lcall
rcr
add
sahf
test
sbb
inc
imul
sub
mov
nop
lcall
aam
or
xchg
test
loop
movsl
push
ljmp
mov
adc
pop
sbb
and
je
in
inc
ja
xchg
jmp
jns
push
sub
or
pop
test
inc
or
mov
pushf
daa
jae
sahf
jle
mov
dec
sub
ret
sbb
push
or
push
lods
mov
pop
leave
subl
outsb
sub
push
push
loop
stos
ds
xchg
cli
mov
mov
pushf
test
cmp
std
cltd
decl
xchg
divl
dec
fcoml
inc
call
inc
xlat
dec
lods
and
and
xchg
sbb
mov
inc
data16
mov
cwtl
outsb
xchg
pushl
push
sub
sbb
mov
rcrb
addl
flds
mov
into
gs
adc
and
cwtl
pop
je
ret
adc
jbe
sarl
mov
add
and
mov
out
scas
mov
rorl
pop
or
mov
test
push
sbb
test
subl
mov
pop
jae
movaps
js
pop
sbb
xor
mov
push
inc
cwtl
jo
push
loopne
sub
sahf
aad
fiadds
lahf
out
scas
in
out
xchg
ja
sbb
sub
cmp
push
mov
popa
out
mov
push
ljmp
mov
or
fucomi
mov
movsl
mov
push
sbb
dec
pushf
xor
or
jecxz
shlb
pop
xchg
xor
mov
rcll
pop
and
and
pop
lock
dec
stos
scas
popl
aam
mov
sti
or
and
lods
test
movsl
shll
lods
jle
rorb
adc
jge
stos
cmc
insb
dec
cmp
sub
adc
xchg
xchg
and
imul
cwtl
fs
cltd
lcall
inc
sti
mov
push
xchg
adc
cmp
loop
inc
ljmp
pop
dec
test
and
mov
push
nop
pop
sub
or
cmpsl
notl
and
ljmp
sbb
cltd
mov
sbb
add
pop
psubsb
mov
icebp
cltd
pop
je
jno
xor
cmp
insb
or
rcrb
sbb
or
out
mov
test
jbe
cmc
dec
jl
push
push
fisttps
repnz
jo
sub
sub
lea
add
xor
cs
xor
push
sbb
les
outsl
or
es
mov
jmp
mov
xchg
and
stc
pop
and
into
push
mov
and
stos
sub
bound
and
lret
test
sbb
sub
lock
sbb
dec
dec
mov
cltd
push
adc
mov
adc
xlat
xchg
push
xchg
outsl
adc
push
sub
or
rcrb
scas
xchg
and
in
lea
fmuls
push
ror
and
into
pop
mov
arpl
and
jl
cmp
xor
sub
mov
cltd
sbb
jns
stos
les
bnd
ja
push
movsb
popf
cmpsb
xchg
in
pusha
pop
xlat
add
test
dec
sbb
outsb
lea
rcrl
jne
and
inc
hlt
pop
inc
lea
sbb
inc
test
mov
mov
mov
jecxz
lcall
arpl
dec
push
cmp
cmpl
inc
inc
dec
sbb
imull
sub
lock
xlat
je
pop
das
int3
sbb
arpl
cli
repz
int
test
mov
mov
mulb
inc
fisubrl
sub
cmp
lcallw
or
rolb
jge
pop
test
fidivrs
cmp
mov
adc
pop
mov
imul
sub
mov
push
xor
push
imul
xor
shll
stos
icebp
inc
cmpsl
int
ja
xchg
data16
cld
xchg
pusha
test
loop
cmp
push
or
aas
jnp
add
lods
enter
xor
mov
ret
jle
mov
scas
jg
push
sbb
inc
mov
hlt
decb
leave
pop
rcll
dec
leave
mov
and
jb
push
decb
sub
addr16
pop
push
mov
sbb
bound
cmp
ret
dec
jp
push
out
and
jl
mov
jae
jo
add
aam
xor
mov
jbe
sub
jmp
cmc
fdiv
orl
scas
mov
jmp
dec
loope
rcrb
sti
out
jg
push
mov
xchg
mov
cld
hlt
sbbl
dec
mov
inc
sbb
imul
lods
add
hlt
sarb
mov
scas
divl
jmp
pusha
xchg
mov
lcall
mov
ljmp
mov
jno
repnz
fmull
add
xor
lcall
es
cmp
lock
jae
scas
xchg
bound
cmp
xchg
hlt
fs
pop
sarl
aas
or
insb
retw
dec
or
jl
and
lret
out
std
ds
lret
jae
popf
cmpl
scas
aam
insb
and
cmpsb
cld
mov
ret
inc
pop
call
sub
mov
or
test
cmpl
pop
orl
mov
daa
and
cltd
adc
mov
sub
mov
lds
ret
ljmp
sub
lret
push
mov
push
popa
out
adc
mov
adc
pop
cwtl
mov
orb
sub
lcall
adc
adc
icebp
cmp
cmpsl
hlt
push
stos
jns
pop
loopne
adc
popf
mov
sti
and
je
or
inc
add
xchg
lock
dec
push
sbb
mov
cltd
fadds
jb
lret
cld
lods
icebp
aaa
jae
bnd
adc
mov
cs
jmp
outsl
push
roll
xor
lahf
inc
cli
inc
sti
into
dec
dec
mov
push
fisubl
fistps
xchg
xchg
pushf
or
lret
out
xor
movsb
into
cwtl
fsubrl
int3
ret
addb
push
in
idivb
gs
xchg
insl
pop
repnz
int
int
out
data16
aaa
xchg
scas
dec
adc
push
loop
data16
aas
adc
mov
mov
cmp
and
push
lds
ja
push
out
cmp
mov
movsl
cmp
xor
lret
out
sahf
es
call
shr
lret
in
bound
xor
or
pop
bound
mov
dec
addr16
push
push
push
jl
popf
jle
mov
test
pop
inc
pushf
stos
lea
mov
mov
idivb
rcrl
enter
stos
cmc
jnp
out
hlt
xchg
jecxz
sub
stc
not
or
jne
sub
stc
call
rolb
push
imul
movsl
xchg
add
jae
mov
ds
int
add
xchg
dec
incb
stos
xchg
cld
and
aaa
or
mov
cltd
rcl
addb
mov
test
xchg
jo
or
in
gs
sub
lods
dec
sti
inc
mov
mov
xorl
mov
pusha
mov
add
in
jnp
pop
xchg
mov
sub
mov
lods
adc
mov
stos
sbb
movsl
jl
mov
aaa
jmp
pop
cmp
cltd
sar
pop
mov
cs
sbb
sbb
mov
ret
adc
in
dec
adc
aas
jmp
dec
mov
filds
push
cli
fld
in
or
in
into
push
cmpsl
fstl
push
dec
call
jle
movsl
add
lcall
scas
sbb
js
mov
xchg
push
cltd
shll
repnz
and
bound
mov
xlat
mov
lods
jb
loope
aad
sbb
in
cmp
test
or
std
push
stos
lret
jnp
add
inc
test
test
stc
pop
popl
out
pop
add
add
outsl
lea
xor
ljmp
dec
xchg
rcrl
dec
cmpsb
ucomiss
lahf
enter
enter
add
push
push
mov
jo
fldenv
addr16
fdivrs
rorb
lcall
jge
fwait
decb
repnz
mov
outsb
in
pushf
pop
mov
movsb
xchg
xchg
xchg
and
fcmovnu
xor
adc
jmp
es
mov
xchg
loope
inc
xchg
les
push
cltd
mov
xchg
pop
stos
jmp
jne
outsb
rclb
outsb
push
cmpsb
jl
negl
mov
inc
je
sub
push
sbb
jne
stos
sbb
in
hlt
cmp
push
mov
add
mov
loope
stc
xchg
sbb
mov
lahf
sub
inc
mov
test
push
xchg
inc
call
outsl
push
aaa
pop
lret
mov
lock
ror
daa
fbld
out
call
add
in
inc
dec
out
insb
jl
loopne
out
inc
scas
or
xchg
lock
in
add
xor
out
mov
insl
and
pop
push
mov
add
out
rcrb
insb
sub
push
test
mov
xchg
xchg
add
dec
hlt
and
test
push
xor
cwtl
mov
mov
mov
int3
iret
lods
mov
adc
xchg
iret
sbb
pop
fldenv
sti
int
mov
add
push
mov
in
call
jno
adc
inc
and
sti
dec
flds
adc
lahf
daa
mov
cmovne
divl
mov
je
lea
mov
lcall
pop
test
push
test
cmp
push
mov
daa
mov
pushf
sti
pop
inc
dec
in
dec
movsl
divl
mov
outsl
pop
mov
jl
lock
jae
out
or
fists
aas
push
movsl
cwtl
cwtl
imul
and
or
popf
jmp
xor
jmp
nop
cmp
inc
inc
and
data16
inc
test
xchg
mov
leave
ja
fisttpll
dec
in
mov
xchg
int
xor
jb
sub
mov
xlat
loope
dec
xor
insl
ret
and
mov
jge
pop
arpl
xor
dec
bound
lods
xchg
vpmacsswd
ret
icebp
nop
out
loope
loopne
push
cmp
push
sti
sbbb
and
andb
and
mov
out
stos
fmulp
fimull
mov
lods
and
cli
inc
xchg
jne
mov
stos
roll
sub
sbb
dec
fimull
pop
xor
repz
jns
in
and
daa
es
add
cwtl
adc
mov
inc
in
outsb
int3
in
les
xchg
ss
nop
in
cmpsb
movsb
int3
cwtl
pop
sub
js
lgs
movsl
push
out
fwait
clc
sub
and
add
push
rcl
movntq
sbb
or
lret
in
and
int
push
dec
call
cmpsl
ror
outsl
push
pop
lods
push
stos
out
push
and
addr16
ret
filds
sub
inc
mov
outsb
call
xor
pop
pop
sbb
pusha
fwait
pusha
adcl
and
cmp
test
sbb
cwtl
daa
and
sub
sahf
sbb
addr16
pusha
pop
mov
mov
shrb
mov
jecxz
dec
dec
mov
jmp
and
and
ds
lds
imul
ss
ljmp
and
and
nop
fs
pop
or
imul
dec
jae
mov
mov
xor
adc
bound
cmpb
lods
test
lret
arpl
in
nop
push
iret
sti
mov
xchg
push
push
addl
call
mov
mov
insl
insl
hlt
jmp
lret
mov
mov
xchg
bound
daa
test
cmpsb
rclb
andps
neg
aam
ljmp
pushl
test
xchg
cld
das
outsb
sbb
mov
inc
pop
jp
pop
sub
and
das
jns
mov
rclb
pushf
sbb
mov
gs
jno
aad
mov
push
fistps
mov
push
add
les
shl
sub
scas
insb
sub
mov
push
ficoms
cltd
xor
insl
adc
or
decb
ja
pusha
dec
pusha
cmp
add
lds
mov
loope,pn
xor
dec
mov
jo
or
hlt
scas
xor
call
in
push
in
leave
inc
addr16
sub
imul
stos
int3
and
and
out
les
cmpsb
sti
sbb
aad
fldl
xchg
jge
icebp
out
movq
nop
xchg
fdiv
lock
movsl
and
push
int
xchg
pop
cmc
cs
mov
and
inc
jns
add
lcall
fnstenv
jmp
cmp
fisubs
ror
sub
sbb
and
inc
xor
pop
ja
mov
jp
lcall
out
fwait
jecxz
hlt
jl
jno
pusha
pop
inc
movsb
call
cmc
add
mov
aam
add
jnp
repz
movsl
inc
nop
cmpb
fs
and
mov
stos
xor
mov
or
lock
call
lahf
add
ret
sbb
xor
jno
aam
pop
pushl
inc
jne
ret
mov
cmp
stos
aam
call
cmp
xchg
or
mov
dec
cld
jg
pop
xor
sub
xor
mov
fnstsw
xchg
inc
add
jo
xorps
push
mov
jmp
imul
mov
push
xchg
or
into
out
pop
xchg
aad
or
push
call
xchg
xchg
sbb
sub
out
out
ja
sub
jg
das
pop
cltd
sub
xchg
jne
cmp
mov
mov
addr16
hlt
sbbb
add
pushf
and
popa
ret
cmp
dec
pusha
loopne
aaa
mov
addb
fildl
pop
data16
mov
out
xor
popl
repnz
jns
mov
cmp
pop
jg
bound
jb
adc
imul
or
push
mov
repz
jne
push
insl
push
int3
inc
movsb
mov
mulb
les
add
mov
lods
mov
xor
fwait
cmp
ss
iret
jnp
push
fistl
andl
jecxz
inc
insb
aas
jne
enter
fidivrs
xor
fwait
push
rep
mov
xchg
jl
sarb
mov
out
push
dec
jb
pop
jns
leave
mov
loope
mov
dec
mov
xchg
or
in
insb
sub
xor
dec
movsl
cltd
in
add
push
loope
lret
push
xchg
lcall
jp
adc
xor
xor
dec
fists
xchg
orl
int
out
outsb
shr
lea
in
aam
push
into
out
add
aad
das
adc
sbb
jae
bound
ja
out
gs
cmp
negl
shlb
pusha
popa
pop
xlat
std
xor
leave
xchg
dec
mov
push
inc
or
enter
sbb
cmp
popa
pop
les
out
enter
or
cltd
inc
xor
ljmp
mov
pop
dec
and
cmpsb
mov
pop
mov
xchg
sub
mov
and
scas
mov
jmp
cwtl
lahf
fstpl
or
inc
add
scas
mov
cmpsb
pop
cmpsb
xorl
xchg
sti
arpl
push
push
jmp
pop
pop
xchg
push
aam
add
aaa
arpl
out
pop
in
pop
mov
sub
and
mov
push
cs
and
mov
lahf
mov
mov
push
jno
mov
mov
add
clc
pushf
jp
out
xchg
call
xor
jge
nop
mov
pop
or
imul
xchg
mov
insl
das
or
clc
mov
fnsave
sbbb
out
sbb
loope
into
adc
mov
rcll
mov
or
mov
leave
adc
mov
mov
in
mov
adc
inc
adc
sub
in
fnsave
in
jae
push
and
and
stos
repz
mov
or
pop
mov
mov
and
pushf
notb
add
cmpsl
lea
pushf
stos
jle
sbb
xor
mov
shlb
xor
mov
insb
mov
cmp
xchg
jp
testb
sbb
mov
jp
insb
mov
and
or
mov
fsubs
scas
in
add
pusha
mov
xor
movsb
dec
rolb
lret
add
push
dec
cmp
jmp
dec
and
jns
mov
flds
stc
popa
jecxz
mov
cltd
test
popf
outsb
jo
ret
cs
sub
lcall
sahf
push
fisubl
mov
lea
mov
xor
add
and
adc
sbb
stos
imul
jle
adc
xchg
or
adc
mov
sbb
xchg
jecxz
stos
fs
or
out
popl
sbb
jl
out
inc
addl
pop
outsl
pusha
mov
push
fists
jno
gs
jo
xchg
cmp
popa
and
pop
test
rcr
jb
ja
aaa
aam
inc
jbe
dec
in
sub
push
xchg
mov
inc
sbb
in
add
push
sub
sub
mov
mov
int3
fwait
jle
enter
outsb
xchg
and
fdivl
rorb
addl
adc
mov
dec
push
jecxz
rclb
sbb
cmp
insb
pop
or
pop
arpl
mov
mov
shl
das
pop
push
lock
xchg
mov
xchg
cmpb
sub
pop
pop
pop
out
ret
mov
movsl
loopne
mov
add
daa
es
adc
loopne
lahf
push
add
push
xchg
or
pop
mov
and
mov
sbb
xor
sarb
scas
out
inc
cli
fwait
arpl
xchg
insb
inc
adc
push
stos
push
bound
pop
mov
or
mov
fidivs
or
push
xchg
out
xchg
cwtl
idiv
xchg
idiv
inc
jns
ret
cld
jg
stc
vcvttps2dq
mov
add
xor
fiaddl
push
push
pop
shll
push
and
inc
jb
fildll
push
jno
dec
mov
aam
enter
dec
adc
call
dec
jg
mov
mov
sti
das
adc
fdivl
push
es
xchg
mov
mov
fcmovnb
scas
std
lret
jecxz
and
jmp
xor
pop
negl
dec
pop
mov
fimull
sub
rcl
movsb
aas
xchg
nop
or
ret
xor
arpl
dec
jbe
sbb
push
pop
or
leave
aam
addr16
cmpb
imul
push
or
inc
jne
lret
aad
mov
adc
dec
aas
push
ficoml
pop
jge
hlt
add
lea
mov
sbb
mov
xchg
popf
shll
mov
cs
ficoml
xchg
xor
lods
mov
jp
mov
int
ret
int3
adcl
push
push
imull
dec
dec
fsubs
imul
or
pop
jle
inc
test
fdivs
mov
aam
jle
movb
pop
push
mov
inc
dec
rcl
adc
jns
ljmp
dec
aas
xor
adc
test
xor
fistps
xlat
inc
pop
lahf
inc
push
push
jo
setns
sbb
add
loopne
daa
xchg
jno
push
and
add
rcll
xchg
inc
aaa
movsb
in
adc
stc
xlat
cs
xor
sub
inc
or
fstl
loope
int3
scas
xor
pop
insl
in
out
add
push
mov
ds
cmp
jecxz
push
pop
xor
pop
into
dec
and
jnp
xchg
mov
mov
pop
adc
or
ficompl
mov
inc
icebp
lea
adc
aas
rcl
push
mov
inc
pop
mov
and
sbb
xor
push
iret
push
xchg
dec
fimull
mov
lods
cmp
outsb
pop
inc
mov
adc
add
xor
dec
jle
loopne
mov
mov
push
or
hlt
hlt
repnz
rclb
adc
mov
or
inc
ljmp
xchg
xchg
daa
fsubp
xchg
enter
test
inc
repnz
sarb
jl
out
test
int3
pop
pop
mov
jp
test
dec
lods
mov
add
jne
mov
repnz
pop
loop
push
stc
and
imul
enter
dec
push
bound
ljmp
hlt
aas
push
cs
andl
scas
xlat
je
outsb
ret
sarb
or
imul
xor
sbb
mov
and
imull
jae
push
lods
mov
add
in
test
dec
mov
cwtl
xchg
pop
sti
into
loope
xor
mov
push
fdivrl
inc
ret
fwait
jle
cmp
push
mov
imul
or
cmp
mov
add
xlat
ljmp
or
mov
outsl
out
insl
mov
shll
fisubrl
sbb
cltd
arpl
add
sti
dec
rorl
into
loop
in
add
push
insb
popf
mov
push
sti
mov
fldl
jmp
sbb
sbb
push
pop
loopne
stc
cmc
shlb
pop
popf
sbb
jle
and
lock
jnp
cmp
in
push
insb
jl
sahf
rcrb
out
jg
cld
ss
scas
xchg
subb
adc
pop
adc
arpl
sub
shrl
fbld
adc
xor
or
lods
adc
iret
sbb
and
arpl
imul
push
dec
fwait
add
int
adc
pop
in
fcompl
int3
cmc
call
fistps
cmp
mov
call
add
stc
jmp
fisttps
ret
in
and
cmc
out
and
loop
sarb
xchg
xchg
or
sub
cmp
sbb
push
adc
arpl
outsl
imul
cmp
mov
xchg
pop
in
iret
and
js
push
jb
das
push
push
push
pop
sbb
sbb
xor
pop
mov
leave
xchg
push
int
push
lret
xchg
scas
aam
pop
shrl
push
mov
or
das
pop
mov
or
mov
xchg
or
imul
popa
mulb
or
sub
mov
rclb
sub
and
dec
add
inc
ss
inc
scas
dec
mov
arpl
aad
or
add
jp
sti
and
xchg
cwtl
pop
bnd
lock
int
adc
cmp
ljmp
in
je
insb
mov
inc
jbe
test
pusha
int3
adc
ljmp
lret
sbb
cmp
mov
js
test
ret
call
dec
scas
scas
mov
xor
pushl
test
adc
add
loope
sub
add
cmp
fidivs
xor
mov
mov
mov
push
adc
dec
push
rcll
jp
stc
xchg
sahf
sub
lret
xchg
out
repnz
lea
fcmovnbe
mov
mov
js
xor
xchg
icebp
out
dec
adc
loop
dec
push
fnstenv
in
shl
cltd
and
pop
test
jl
and
mov
push
cmp
pop
or
stos
insb
movsb
mov
lods
popf
jmp
pop
xchg
mov
pop
sbb
add
push
adc
adc
fiaddl
jmp
cmp
dec
inc
rorb
inc
movsl
insl
into
mov
out
add
add
mov
insb
sub
subps
sbb
in
add
mov
sbb
adc
jl
mov
pusha
push
dec
int3
mov
mov
mov
mov
mov
pop
fstl
sahf
ror
mov
jb
stos
idivl
fmul
xchg
daa
push
bound
xchg
rcl
fildll
jmp
stos
stc
popf
push
cs
mov
out
mov
sbb
add
addr16
sbbl
mov
cli
mov
cmp
adc
add
inc
inc
jecxz
scas
mov
xchg
pop
test
pop
inc
adc
dec
mov
in
das
rcrl
pushl
sbb
and
mov
sub
inc
push
test
repnz
test
lods
push
sbb
data16
fwait
clc
icebp
and
xor
xor
js
into
sbb
push
or
push
rolb
push
pop
imul
sbb
bound
xlat
orl
sub
fistps
adc
add
lea
cmp
push
bound
jae
mov
ljmp
pop
ficoms
les
mov
sbb
adc
call
test
repz
xlat
popf
mov
adc
cmp
imul
and
int3
inc
mov
ficomps
addr16
jnp
dec
iret
lcall
loopne
inc
js
or
jle
outsl
shll
sbb
sar
mov
jle
adc
insl
shr
pop
jbe
cmpsl
ret
xchg
scas
lock
pop
sbb
jmp
out
jle
add
test
shrb
cld
add
insl
in
idivl
push
clc
mov
clc
inc
sbb
or
add
ficompl
jmp
mov
cmp
js
cmp
ficoml
mov
jmp
xor
dec
cmp
dec
int
pop
add
shrl
inc
pop
lahf
ja
out
int
or
loopne
rclb
loope
pop
and
test
jmp
outsl
outsl
pop
imul
ds
mov
xchg
mov
pop
rcrl
cmc
movsb
dec
lea
ficoml
mov
mov
or
fldt
sti
popa
xchg
jae
testb
ficoml
movsb
and
hlt
sbb
add
xchg
inc
ud0
mov
js
pop
sub
jp
mov
gs
push
push
pop
add
mov
int
or
push
in
mov
popf
sbb
gs
lea
jbe
aad
adc
hlt
dec
jbe
jb
jno
mov
hlt
or
in
mov
xchg
pusha
jecxz
mov
push
pop
aam
add
add
imul
inc
jo
movsb
fidivl
lahf
adc
lcall
stc
clc
in
sub
mov
mov
dec
inc
inc
sbb
mov
cli
daa
pop
sti
jb
ret
or
and
jnp
sub
in
les
stos
ja
fisttps
mov
lret
jns
stos
pop
xchg
push
sbb
outsb
add
pushf
adc
push
mov
ljmp
mov
cmpsl
dec
outsb
or
das
add
lahf
pop
cmp
mov
imul
movl
mov
xchg
scas
sbb
popf
mov
xchg
in
and
inc
mov
xchg
mov
dec
pop
dec
inc
dec
insb
test
dec
out
ret
sbb
cmp
jns
mov
jg
insb
cmp
cltd
adc
sti
add
rolb
lret
shl
sbb
or
xor
mov
insl
mov
add
mul
pop
testb
pop
fwait
mov
sub
jecxz
or
pop
scas
aad
lea
mov
mov
ret
movsb
repnz
sahf
mov
cwtl
add
inc
lret
aam
cmp
shl
dec
xor
in
xor
mov
push
cmp
push
xor
mov
add
push
add
fstps
pop
sbb
mov
xor
movb
or
lahf
stc
test
cmc
and
mov
xchg
data16
mov
cmpb
mov
jnp
add
jne
int
test
mov
inc
mov
imull
xlat
cmp
repz
mov
into
adc
xchg
cmpsb
sub
jns
out
les
in
repnz
add
pop
pop
testl
stos
and
xchg
sbb
mov
jnp
add
out
adc
cmc
xchg
push
dec
xchg
inc
in
imul
xchg
lret
mov
in
fistps
clc
repnz
jp
dec
aam
mov
mov
hlt
jmp
shll
mov
std
mov
jne
shl
add
jg
push
mov
ret
pop
sbb
jle
xor
scas
cmc
sbb
insl
xchg
jo
or
push
adc
pushf
out
mov
aas
xchg
cwtl
cs
mov
pop
and
dec
dec
cmp
add
jns
data16
rcrl
clc
dec
mov
call
cmpsb
mov
cmp
push
mov
movsl
and
ljmp
jmp
arpl
or
sub
xchg
mov
push
loope
mov
inc
out
aad
aad
inc
icebp
imul
xchg
push
push
mov
add
add
movsb
add
imul
sbb
mov
xchg
xlat
push
into
cmpl
pop
push
test
xor
mov
das
mov
call
pusha
test
jno
addl
mov
mov
leave
lret
rcrb
xor
adc
add
add
sbb
daa
jmp
lds
shl
or
inc
and
xor
cld
aas
js
mov
clc
xor
incl
cmp
and
xor
push
xor
gs
push
je
lods
xor
ds
pop
xor
inc
repnz
movsl
pushf
inc
lock
insb
xchg
inc
or
xor
cs
cmpsb
int3
dec
insl
lret
pop
inc
mov
adc
scas
mov
stos
mov
mov
mov
push
int
ret
xchg
sbb
pop
repnz
jbe
into
sti
xchg
out
dec
inc
add
pop
pop
fsubp
or
negb
jge
xchg
cmp
xor
inc
mov
mov
aam
sbb
cmp
mov
cltd
add
dec
push
insl
xor
dec
movsb
or
repz
push
test
iret
push
lahf
jle
cmpsb
pop
dec
add
cmp
clc
testl
pop
aam
icebp
lret
xchg
aaa
ss
inc
jmp
stos
lcall
ret
ljmp
pop
sbb
or
xchg
xor
scas
gs
add
sub
xor
cmp
mov
mov
aaa
push
ja
test
add
inc
cli
pop
push
mov
inc
mov
pop
mov
adc
pop
std
pop
and
gs
adc
subl
data16
dec
cmpsl
in
pushf
insb
test
sub
ds
jb
xor
mov
mov
into
ret
in
ja
fisubrl
sub
xchg
xor
scas
les
jecxz
xchg
fists
lcall
mov
push
rcl
xor
fs
movsb
fldcw
jb
xlat
xchg
fsubp
into
sbb
lods
adc
imul
adc
leave
sub
jge
mov
mov
adc
lock
aam
sbbb
lret
lret
test
sbbl
mov
pusha
xchg
or
inc
cmp
dec
cmc
jmp
cmpsl
fwait
pop
mov
or
add
inc
inc
sti
dec
inc
gs
inc
mov
scas
loope
ret
clc
fs
cmc
inc
cli
inc
jl
repnz
adc
sahf
push
iret
mov
mov
lret
ficompl
in
dec
int3
cmp
mov
pop
and
insb
adc
push
lahf
cli
pusha
inc
daa
sub
lcall
and
xchg
add
mov
ret
negl
jo
and
sub
mov
clc
and
data16
xor
pop
cmpsb
popf
lds
adc
shrl
push
mov
mov
cmp
insl
jecxz
pop
lods
cmpsb
lods
mov
mov
je
aad
icebp
outsl
xor
int
sbb
mov
out
push
fdecstp
fucomi
pushf
mov
inc
shll
and
stc
aam
mov
adc
push
fsubrp
xacquire
inc
lods
pop
xchg
cwtl
mov
pusha
xor
je
push
xchg
or
push
test
add
bound
sub
mov
pop
fcoms
arpl
sub
test
cld
jmp
stos
js
lock
leave
cmc
pop
fstpt
add
sbbl
dec
sti
cmpsl
cld
push
mov
addr16
fiadds
xchg
sbb
cmp
lret
cltd
iret
sub
jg
xor
pop
cmp
in
lds
inc
lods
push
shrb
pop
sahf
or
jmp
sbb
loop
push
rcrl
sbbb
int
jle
call
xchg
mov
js
shrb
dec
jmp
xchg
es
adc
fcoml
scas
xchg
inc
mov
insb
jno
cli
shrl
jo
jbe
or
out
outsb
js
inc
lahf
xor
and
cmp
cld
pop
mov
mov
dec
hlt
and
js
les
xchg
mov
ds
into
sbb
jecxz
sbb
and
icebp
mov
popf
scas
test
sbb
jbe
ret
dec
xor
test
sub
jg
mov
sti
add
aam
in
xchg
movsl
sbb
insb
out
outsl
add
nop
jle
mov
mov
or
lret
fisubrl
add
loope
cmpsb
mov
push
pop
sub
jge
add
jno
pusha
or
pop
cmp
cmpsb
call
inc
scas
jmp
inc
and
pop
add
xchg
shl
stos
xchg
gs
pop
xchg
leave
loopne
mov
dec
cmp
xor
or
ljmp
or
sbb
jge
and
pop
in
ljmp
lds
mov
pop
push
pop
insl
dec
mov
stc
push
and
lret
call
sbb
sbb
lahf
jo
loop
jle
fstpt
jg
in
adc
adc
dec
mov
shl
divl
cmp
addr16
mov
addr16
xlat
gs
test
jle
or
sbb
xor
movsl
mov
stos
or
dec
inc
into
outsb
cmp
xlat
xor
lcall
mov
std
mov
test
cmc
pop
stos
sbb
divl
ss
es
jbe
rclb
sub
jg
xchg
sub
sub
sbb
inc
mov
leave
adc
mov
inc
push
insb
mov
xchg
es
push
flds
mov
add
iret
push
dec
ret
add
push
rorl
cmpsb
push
test
jmp
fdivp
cmpsb
pop
lock
or
mov
sub
cld
adc
ficoms
xor
repz
fs
movb
add
mov
loopne
mov
pop
sbb
mov
jle
into
aas
scas
xor
out
out
cwtl
mov
pusha
xchg
pushf
pop
jg
mov
mov
in
xor
js
xchg
jmp
adc
and
sbb
sbb
dec
sahf
push
je
rcrb
sub
jbe
mov
rcll
out
mov
push
mov
inc
out
aaa
mov
sub
and
fwait
mov
sahf
cmp
pusha
jmp
sahf
sti
mov
adc
inc
stc
jl
rcrl
sub
test
dec
hlt
ds
fists
les
popl
xchg
and
mov
or
mov
sbb
insb
mov
sti
jo
mov
cmp
sub
fsubrs
add
mov
xchg
lock
leave
xchg
jg
pop
jecxz
xor
jo
xchg
xor
es
push
mov
fdivl
lret
push
push
push
mov
mov
ret
repnz
add
inc
shl
adc
sbb
je
or
and
or
jo
mov
lods
and
push
or
xor
sar
dec
cwtl
push
icebp
mov
fidivrs
and
imul
adc
test
loopne
cltd
jo
popa
call
ja
mov
xchg
add
dec
cmp
push
int3
popl
mov
movsl
push
in
pop
mov
movsl
stc
pop
sarb
mov
addb
lock
mov
pop
stc
aaa
xchg
jne
adc
decl
cmp
mov
lret
xchg
scas
sub
stos
inc
lds
out
outsb
imul
imul
xor
jnp
clc
jecxz
sub
xchg
push
ljmp
bswap
mov
pusha
inc
lods
outsl
inc
repnz
out
and
push
call
in
clc
push
push
and
in
sbb
sahf
xor
ljmp
cmp
sahf
int
cld
sahf
mov
sub
rolb
and
loop
push
lods
push
in
decb
or
or
cwtl
fimull
add
inc
xchg
adc
xchg
jg
das
push
insb
inc
cmc
ret
orb
mov
mov
cmpsb
lahf
xchg
aam
in
xor
mov
jmp
add
sbb
and
sbb
lock
push
fimuls
pop
sbbl
pop
jbe
xor
movsl
sbb
xchg
dec
bound
ficoms
lsl
pop
jle
sub
loopne
xor
test
into
dec
xor
ljmp
push
mov
iret
lret
jg
cmp
lods
push
mov
xorb
or
js
scas
inc
dec
ret
adc
fnstenv
in
xor
push
cli
stc
push
jae
cmp
fldenv
xchg
push
jle
mov
pop
in
fnstsw
fisubrl
cmp
add
xchg
cmpsl
int3
int3
push
push
inc
sub
fcoml
movsl
aaa
xor
js
outsb
cmp
sub
sub
inc
mov
xchg
sub
jnp
mov
int3
adc
and
cltd
sti
sbb
mov
clc
movb
adc
dec
pop
add
lret
mov
adc
jb
and
test
xor
pop
cmp
js
adc
pop
aam
or
and
nop
mov
fmul
test
xor
decb
push
das
mov
xchg
in
je
pop
cvttps2pi
xor
adc
inc
pop
sbb
out
sub
add
and
lahf
insl
lods
js
aas
cmp
mov
adc
ljmp
jns
mov
out
cmp
cmp
jg
test
sbb
into
xor
xchg
mov
mov
dec
fstps
and
cmp
jg
push
cmpsl
orb
repz
popa
mov
push
arpl
test
push
sub
out
and
cmp
fdiv
xchg
cmp
lods
adc
and
xor
push
rcrb
ret
sub
push
jg
cmpsl
pusha
and
pop
mov
sub
iret
push
mov
mov
cmp
pop
lock
sbb
adc
sub
arpl
clc
in
cmpsb
dec
clc
cmpl
xchg
add
mov
popf
out
mov
mov
das
test
lret
xchg
mov
loopne
dec
cmp
lret
pop
push
out
mov
cmp
push
pop
xlat
fwait
pusha
daa
ja
dec
mov
pop
int
sarb
xchg
movb
enter
push
leave
add
pop
in
fdivrl
push
add
mov
mov
push
sbb
pop
mov
xor
cmp
sti
je
into
aam
lret
and
pop
loope
aas
jbe
lods
jbe
test
mov
xor
add
stos
pop
sar
hlt
push
push
xor
sbb
outsl
add
ja
ljmp
xor
jne
xchg
pop
sarb
pushf
lea
adc
sbb
jnp
inc
cmp
orl
mov
js
xor
ret
mov
jae
pop
jns
lods
add
dec
roll
cmc
jmp
outsl
pusha
fisttpl
or
jg
mov
insl
addb
mov
sub
les
scas
and
sbb
adc
mov
rorl
sub
fnstenv
lock
jb
sti
add
mov
cmp
mov
mov
int3
dec
pop
out
sti
cmp
xor
int3
scas
ljmp
ret
aad
pop
xchg
nop
lcall
sub
mov
rorl
fsubl
fidivl
shrl
out
mov
or
pop
mov
adc
xchg
jns
mov
xchg
stc
adc
cmp
dec
adc
sub
outsb
pop
mov
cltd
add
mov
xchg
popf
mov
push
inc
sub
aam
out
add
bound
sub
xchg
jnp
mov
outsl
cmp
imul
cmp
das
repz
mov
jecxz
test
out
bound
stc
or
aaa
sti
cmp
xor
js
in
loopne
jo
pusha
mov
push
cmp
aam
sbb
lcall
repnz
xlat
scas
jmp
fstpl
lcall
outsl
lods
cmp
andb
shlb
add
popf
dec
push
jl
iret
push
and
rol
fcoml
adc
pop
outsb
les
in
fdivs
cmp
jl
inc
jo
sub
lret
or
push
notl
cld
pop
bound
into
fwait
mov
sahf
subb
cmp
sub
jo
add
and
lahf
pop
xchg
popf
in
sbb
sub
inc
lret
shr
lds
adc
mov
cmp
mov
scas
xchg
sbbl
cmpsl
or
jno
or
mov
sub
cmp
add
xlat
out
fnstcw
sub
lcall
iret
stos
pop
push
jb
stc
movsb
dec
cli
xchg
test
das
in
mov
pop
lret
nop
outsl
mov
dec
add
mov
add
push
sub
sbb
or
sbb
mov
cmc
pop
into
imul
cli
mov
xor
jmp
mov
iret
push
mov
nop
out
adc
stc
arpl
shll
ds
jmp
flds
adc
sub
or
adc
cmp
push
xor
test
dec
xlat
mov
int3
ja
ret
sti
in
cmpsl
inc
aam
outsb
stc
cmp
mov
sub
xchg
pop
imul
les
cwtl
cld
adc
inc
mov
sub
push
es
pop
nop
dec
addl
mov
test
cmp
in
es
jno
aam
jbe
dec
es
mov
imul
cmpl
cmp
mov
jl
pusha
jmp
int3
sbb
outsl
add
jbe
aas
pop
push
mov
add
inc
popf
repz
aas
icebp
inc
arpl
test
das
pop
sub
das
pop
jne
mov
xor
xor
and
shll
jbe
outsl
in
stc
xchg
stos
sub
movsl
or
xchg
out
cwtl
es
lret
fimuls
jecxz
or
test
loope
lds
mov
stos
out
add
mov
rorb
in
cld
pop
out
mov
push
shll
and
mov
and
out
sbb
xlat
test
ret
ljmp
mov
xchg
loopnew,pt
jbe
enter
jmp
pop
pause
jb
add
pusha
xchg
fidivrl
jge
inc
lds
xor
out
lock
icebp
gs
jge
aad
ficomps
mov
mov
addl
lods
xor
movsb
cmpsl
xor
addr16
push
shlb
in
aas
jp
scas
pushf
inc
cmp
add
lds
add
xor
inc
push
inc
pop
sub
ret
cltd
jnp
sub
arpl
and
sub
ret
xchg
sbb
aam
call
cmpsl
mov
movsb
sbb
mov
sub
scas
vpmaddwd
inc
xchg
cmpsb
and
mov
sub
fcompl
mov
pop
jns
sub
mov
xchg
jl
outsb
push
pop
adc
mov
sbb
fisttpll
sbb
sbb
fdivp
bound
xor
adc
into
sbb
lahf
outsl
lret
xlat
xchg
sbb
or
lret
out
cld
sti
mov
stos
imul
in
out
push
dec
mov
add
jnp
pop
repz
stos
mov
stos
ficomps
jp
xor
ds
gs
jle
xchg
cmpsl
dec
mov
insb
rcrl
mov
ret
jle
shl
mov
aad
lahf
sbb
push
mov
sub
orb
jl
xlat
push
pop
inc
clc
adc
sub
dec
leave
test
add
roll
out
mov
cmp
mov
fsubs
movsb
xchg
jb
cmc
or
add
adc
aad
cmpsl
mov
cwtl
jno
subl
das
pop
cmp
xchg
xchg
adc
sarl
and
lret
jp
hlt
mov
test
sarl
movsl
xor
fwait
mov
dec
rcrl
int3
jns
xchg
jecxz
frstor
adc
packssdw
sbb
idiv
orb
rcr
inc
addl
punpckhdq
stos
adc
sbb
push
paddsw
sub
mov
sbb
mov
xor
shll
out
scas
nop
into
xor
jg
sbb
or
call
xor
ds
sbb
repnz
in
imul
in
push
sub
ficoms
pop
es
repz
push
ds
mov
movsl
hlt
adc
in
out
xor
or
jne
shll
les
cmp
fmull
shrb
out
call
pop
in
xor
mov
pop
sbb
nop
out
stos
bswap
jp
ror
pushf
cmp
jns
push
xchg
js,pt
mov
loope
andl
mov
and
andl
cmpsl
sbb
shlb
dec
mov
loope
jne
fisttpll
mov
push
cmp
cmpsb
or
stos
ljmp
das
loope
clc
push
aas
aad
jne
pusha
xor
mov
inc
xchg
sbb
sbb
add
mov
outsl
xchg
popa
data16
inc
aam
frstor
cmp
aas
bnd
lret
mov
inc
xor
ret
or
into
inc
and
jno
pop
push
mov
mov
adc
and
fistpl
outsb
xor
or
in
rol
xlat
popa
sub
insl
mov
dec
stos
adc
out
jl
cs
mov
into
scas
sub
push
mov
lods
mov
mov
js
js
dec
cmpsb
xor
mov
sub
lcall
mov
lahf
aam
dec
adc
push
and
lock
push
cltd
movsb
push
and
push
and
popa
hlt
icebp
jle
mov
mov
pop
jg
ret
sub
divb
subb
mov
jne
bound
aad
cmp
fwait
sbb
ret
dec
test
mov
loopne
ds
and
or
pop
test
imul
jbe
in
mov
lahf
mov
loop
or
cltd
push
xchg
movsl
pushf
enter
in
lahf
sub
inc
sub
cli
dec
cmp
mov
dec
cmp
add
out
push
mov
xor
stos
shll
je
nop
xor
push
out
dec
fcmovnu
ret
enter
pop
adc
add
lcall
dec
push
jbe
les
into
mov
outsl
loopne
add
outsl
add
mov
mov
adc
sub
and
mov
dec
into
in
clc
sub
pusha
pop
ret
sbb
mov
lods
and
mov
daa
mov
fldl
loope
test
and
aaa
insb
test
adc
add
cltd
outsl
xchg
test
and
loopne
rcll
arpl
and
ficompl
inc
dec
hlt
xlat
or
jb
mov
push
loopne
ja
hlt
cld
daa
fsubl
mov
add
inc
jecxz
xor
mov
or
js
dec
das
cmp
inc
mov
ss
in
outsl
or
mov
jecxz
loop
xchg
rorb
sbb
cltd
inc
out
pop
outsb
adc
jg
mov
jnp
dec
loop
cmp
pop
pop
push
cmp
pop
in
inc
fiaddl
aad
jg
scas
ss
mov
ss
adcl
int
xchg
cli
jg
mov
out
xlat
loop
arpl
bound
mov
int3
or
xchg
cmp
jmp
dec
mov
jnp
sub
dec
adc
inc
stos
daa
or
xchg
iret
sarl
inc
jle
hlt
jecxz
push
in
leave
stos
cmp
test
push
loope
shr
cmpsl
nop
inc
nop
iret
push
scas
add
bound
aaa
jnp
ss
mov
jns
lret
jecxz
jns
xchg
mov
mov
insl
add
cmp
mov
cmp
dec
bound
scas
push
xor
out
mov
mulb
test
dec
scas
or
aaa
popa
out
push
xchg
fsubr
scas
out
ds
push
stos
out
enter
icebp
shrb
mov
push
mov
push
cmpb
or
mov
mov
lret
adcb
mov
rorb
mov
xor
xor
jb
filds
fcompl
sbb
jecxz
ret
and
call
movsl
mov
cmp
sbb
jg
repnz
scas
jbe
xor
out
push
test
mov
or
adc
addr16
sahf
es
mov
mov
sub
in
pop
call
lcall
stc
push
and
jae
fwait
mov
popa
pop
cmp
jg
popa
push
test
test
out
pop
jp
daa
dec
mov
xor
push
ficoml
dec
sbb
inc
lods
push
adc
mov
or
inc
xlat
xor
pushf
sti
xchg
repz
popa
aad
aaa
cld
cltd
mov
call
push
clc
push
xlat
mov
insb
mov
adc
into
xor
fmulp
test
fwait
hlt
popf
lahf
lcall
adc
inc
push
pop
sub
or
rcrl
int3
add
add
mov
jp
insl
cmp
arpl
push
std
sbb
outsb
mov
out
sbb
adc
adc
and
adc
push
or
sbb
push
jecxz
shlb
ss
xor
sbb
add
mov
jno
cs
cmp
or
sbb
mov
sbb
jno
roll
outsb
dec
cmpsb
in
aam
pop
jbe
sub
and
js
jmp
arpl
dec
jp
icebp
or
fiaddl
mov
add
mov
out
ss
enter
data16
into
notb
dec
repz
jns
ss
repnz
stos
popf
gs
aam
xchg
addr16
jge
mov
insl
outsl
and
shll
push
dec
shrl
add
adc
rorb
cmc
and
dec
int3
pop
mov
fldcw
fcmovne
fisubl
jge
int3
es
rcll
xchg
mov
xor
clc
pop
outsl
mov
sub
sbb
mov
jb
inc
dec
lock
js
jnp
lock
fucomp
test
movsb
jnp
leave
movsb
pop
add
inc
sbb
and
xor
sbb
jb
dec
insb
or
popa
xchg
insl
push
loop
dec
or
lods
push
js
test
pop
mov
pop
cld
xchg
xor
sar
rorb
mov
inc
jle
mov
or
mov
mov
sbb
dec
int3
addr16
test
leave
pop
xchg
adc
push
push
jge
sub
sub
push
adc
arpl
inc
mov
imul
xor
xor
xor
orl
movsb
and
sub
aam
xor
xchg
into
jnp
add
jnp
rorl
and
loope
sub
adc
pop
rcr
mov
imul
mov
sub
xor
mov
push
jnp
ljmp
xchg
je
dec
dec
sbb
xor
adc
fcoml
iret
cs
inc
es
or
lahf
adc
sbb
sarb
testl
pushf
inc
push
add
add
movsl
cmp
or
mov
sbb
cld
popa
cs
mov
rcrl
popa
fimuls
mov
loop,pn
inc
add
sbb
lret
pop
push
or
jmp
inc
inc
xchg
das
mov
mov
dec
out
xor
outsb
xor
imul
jno
cmp
add
loopne
sbb
cmp
rcl
pop
xchg
xor
jbe
push
or
idiv
stos
mov
mov
adc
push
add
cmp
inc
and
mov
clc
sbb
sarl
ljmp
push
fistl
test
or
add
jno
roll
or
in
jg
jns
mov
push
icebp
cmpsl
mov
mov
in
clc
stc
rcr
mov
fnstenv
rcrl
jle
nop
jae
call
outsl
shlb
int
cmpl
jns
int
xchg
cwtl
rorb
xchg
mov
or
in
daa
out
dec
mov
sub
or
js
int
enter
sbb
test
jae
sbb
mov
jge
xlat
rcrl
or
dec
call
daa
sbb
add
outsl
sub
test
inc
sub
mov
rcl
in
popf
add
mov
addr16
orl
movsb
xor
pop
add
jae
dec
ss
popf
stos
and
xor
xor
jne
jmp
xchg
ss
lods
sub
les
imul
sbb
popa
cli
add
loop
dec
outsb
mov
bound
and
sub
icebp
dec
and
add
cltd
cld
inc
fstl
pusha
xor
xchg
pop
sub
dec
nop
js
inc
cmp
fcomi
push
adc
faddl
jmp
jbe
or
les
lods
decb
cs
ret
arpl
push
pop
jno
mov
subl
inc
bound
adc
and
adc
call
dec
push
add
pop
scas
pop
add
loope
xchg
adc
xchg
daa
pop
in
ja
stc
sub
cmp
ret
dec
dec
icebp
cld
stos
lret
xchg
sbb
mov
push
int3
jecxz
cmp
stc
es
aaa
in
gs
cld
test
dec
and
xor
test
jno
inc
and
clc
cmp
arpl
xor
repz
and
cmp
in
xchg
pop
lds
xor
lret
imulb
xlat
inc
inc
mov
fwait
add
lds
movsb
mov
test
nop
cmc
out
sub
or
sub
lock
mov
push
inc
sub
fcoml
push
insl
lret
loopne
inc
mov
add
fmul
std
and
adc
pop
arpl
mov
mov
test
or
mov
sarb
pop
sbb
jmp
xlat
jecxz
iret
jge
or
jl
and
push
add
xchg
test
ds
cli
push
or
scas
repnz
sbb
mov
mov
jno
pop
add
sub
sub
push
fs
sbbb
mov
push
or
sub
pop
or
sbb
inc
or
inc
sub
push
insl
xor
iret
xor
lds
pop
fisubs
add
inc
incb
mov
mov
push
repz
stos
cmp
mov
ljmp
mov
popa
inc
loope
cmp
dec
rcl
js
pop
aad
mov
mov
into
dec
xor
ja
push
mov
test
xchg
faddl
fsubl
scas
pop
in
adc
cld
dec
sbb
fs
jmp
adc
and
adc
xchg
lock
gs
lcall
pop
icebp
mov
add
js
nop
push
sahf
scas
into
hlt
dec
mov
into
xor
inc
in
jne
repz
gs
xchg
inc
mov
lods
xor
inc
xchg
dec
daa
pop
sbb
fistpll
mov
sbb
sti
xor
push
clc
outsb
push
insl
movsb
lret
popf
or
adc
xchg
lret
outsb
clc
cmpb
sbb
je
inc
mov
imul
aaa
or
out
mov
cltd
mov
out
mov
mov
push
cmp
outsl
nop
mov
je
mov
arpl
fisubs
daa
xor
cmc
cmp
std
aad
ret
cmpsl
push
fildl
push
andb
push
push
lret
js
jae
inc
mov
jns
mov
xchg
and
jle
jge
and
mov
dec
xchg
out
push
cltd
adc
inc
xchg
out
mov
jge
int
jle
adc
pushaw
aam
daa
pop
inc
jb
pushf
popf
adc
fisubs
pop
dec
mov
dec
lock
ret
and
or
xlat
push
les
push
sbb
stos
int3
mov
or
out
outsb
lock
mov
pop
pushf
jns
out
xchg
gs
cmp
jns
pop
call
imul
out
test
stos
adc
jae
or
fstps
icebp
push
cs
push
sahf
pop
xor
cmp
test
inc
jns
pop
mov
ret
loope
aad
cmpsl
xchg
dec
icebp
pop
add
push
stos
imul
xchg
add
push
flds
ja
cli
pop
push
dec
push
arpl
push
pop
lock
sub
cmp
fs
in
dec
and
jp
fld
subb
push
and
cmp
enter
mov
or
add
out
mov
xchg
imul
imul
ret
imulb
pop
mov
loopne
push
mov
rolb
jecxz
sub
pop
mov
or
sbb
xchg
inc
push
loop
faddl
lcall
jne
fldt
add
leave
adc
icebp
in
sub
push
adc
ja
movsb
mov
pop
addr16
jecxz
cmpsb
pop
cltd
push
sub
daa
lock
mov
push
jle
dec
push
mov
mov
xchg
mov
jmp
jb
mov
dec
push
aam
lret
mov
or
call
or
sub
jnp
and
mov
out
cmp
lods
pop
jl
push
jne
adc
and
cmpsl
inc
inc
pop
std
int3
sarl
add
jecxz
push
out
popa
in
xchg
inc
xchg
pop
in
sub
adc
sbb
out
mov
flds
and
cmp
popf
stos
xchg
movsb
sub
fsubr
jbe
cmp
xchg
lahf
inc
cmp
imul
hlt
movsl
repz
sub
into
xor
fists
jg
popa
lock
jns
gs
cmp
fcoml
test
mov
pop
xor
loope
ret
adc
ret
jns
rorl
dec
enter
out
stos
jmp
cmpsl
test
xchg
cmp
pop
or
imul
adc
ret
xchg
pop
sub
les
movsb
xor
push
sbb
arpl
insl
gs
jp
and
mov
sub
xchg
sub
cmp
xchg
jbe
in
push
inc
jl
adc
cli
sbbb
xchg
sti
jnp
enter
inc
mov
lcall
int
dec
mov
and
push
xor
hlt
adc
dec
inc
andb
and
ds
mov
fisubl
movsb
mov
dec
xor
mov
cmpsl
das
mov
rcrl
add
push
dec
xchg
mov
sahf
jle
sub
out
in
pop
push
jno
aam
push
xor
inc
xchg
pushf
jb
int3
mov
subb
push
in
pop
xor
fisubrs
adc
incl
xchg
sbb
and
cs
lcall
jnp
push
mov
fwait
loopne
int
loopne
inc
push
lea
adc
imulb
cwtl
lret
dec
adc
cld
es
andl
pushf
subl
pop
ret
push
jmp
jecxz
mov
cmove
cltd
fidivrl
mov
loope
dec
pause
pop
mov
test
ljmp
push
mov
nop
dec
fstps
adc
cmp
sbb
pop
sub
adc
call
jl
scas
cwtl
add
jp
push
fldcw
enter
mov
jbe
bnd
inc
out
sti
jg
dec
jmp
xchg
push
push
mov
push
mov
mov
cmp
mov
sbb
pop
mov
sbb
mov
xchg
xchg
popa
mov
das
daa
outsb
test
lret
test
pusha
xchg
shlb
pop
pop
sbb
aad
mov
sahf
lret
mov
repz
mov
call
test
cmp
xor
cltd
addr16
pusha
fsts
cs
mov
or
mov
pop
out
lret
sbb
inc
div
fsubrs
arpl
arpl
pop
pop
aam
int3
mov
jg
jg
cmp
or
rcrl
test
pop
jg
fnsave
mov
stc
in
les
stos
adc
cmp
push
pop
fdivl
jg
sbb
fidivrl
sarl
andl
push
mov
fildll
repz
call
ljmp
jb
js
xchg
mov
adc
pop
rcl
pop
bound
cmp
clc
daa
dec
jl
imulb
add
setle
je
hlt
dec
sbb
lock
fmull
and
adc
xor
cmp
sub
adc
push
scas
xchg
aaa
mov
clc
in
mov
aam
inc
popf
loop
mov
mov
mov
ljmp
push
jno
mov
or
push
sti
movsl
sub
jb
push
call
testl
aas
test
or
or
enter
out
mov
icebp
jo
push
adc
cmpb
rcrl
jmp
xchg
mov
mov
push
xor
rol
aas
cmp
cmp
mov
mov
je
cs
int3
xor
frstor
or
mov
dec
dec
dec
jo
dec
jae
mov
int3
cmp
mov
aas
shlb
adc
dec
push
or
cmp
fcoms
xorb
xchg
bound
sti
adc
push
sbb
daa
adc
cwtl
iret
js
andb
pop
in
push
cli
push
pop
xchg
jecxz
add
xchg
mov
inc
leave
push
sbb
repz
movsb
push
jle
clc
xchg
mov
aad
outsl
xor
aaa
insb
cli
jae
out
pop
dec
sub
push
pop
pusha
pushf
xchg
adc
pop
scas
jecxz
aad
lret
out
add
aad
mov
or
cwtl
sub
enter
pop
fldcw
sbb
push
pop
and
and
mov
jbe
sbb
mov
xchg
or
pushf
shlb
add
and
stc
and
ds
jge
rorb
dec
cmp
mov
jae
xlat
fbld
in
rcrb
and
clc
or
mov
call
out
sub
dec
insb
outsl
fcoml
fisttpll
ds
std
jnp
push
mov
outsb
lret
push
add
icebp
mov
jno
push
fldt
mov
movsb
sbb
push
add
inc
cld
pop
add
xor
xchg
cmpsb
push
jnp
out
xor
imul
shll
mov
in
nop
mov
jns
lahf
dec
mov
cld
pushf
adc
mov
mov
lods
pop
cmp
mov
loopne
xor
push
sbb
aaa
loope
ror
fnstsw
out
movsl
cmp
pop
mov
in
gs
arpl
push
mov
mov
fldcw
call
aad
imul
cmpsl
sbb
push
orl
les
pop
in
mov
inc
lret
out
sub
movsl
mov
imul
imul
pusha
daa
mov
add
cltd
mov
out
lods
push
adc
jnp
add
pop
mov
std
mov
cmp
jmp
or
adc
orb
inc
loop
lcall
push
loop
pusha
pop
js
mov
roll
bound
mov
dec
sti
dec
inc
push
orl
adc
xchg
loopne
das
pop
mov
pop
dec
mov
sarl
jmp
loop
cld
cli
movsl
mov
xchg
sub
insb
mov
imul
add
stos
verr
xchg
sbb
cmp
imul
arpl
xchg
adcb
fbstp
mov
push
pop
test
or
inc
push
mov
shll
ja
fistps
xchg
jge
adc
jge
into
stc
adc
rclb
mov
inc
shlb
sbb
inc
mov
test
outsl
xor
pushw
sbbb
mov
enter
xchg
sbb
ljmp
aas
cs
sahf
or
lock
or
xor
add
xor
and
mov
dec
fs
sbb
lcall
mov
cs
add
xor
insb
sbb
ficompl
sbb
xchg
jg,pt
or
mov
xchg
mov
sbb
iret
jecxz
add
ja
test
mov
sbbb
fs
fiaddl
jge
pop
pop
fstps
fisttps
pop
sub
dec
add
cwtl
pop
adc
sarb
shll
fists
xchg
push
jmp
dec
addr16
cmpsb
push
out
sub
pop
das
out
push
insl
push
fs
addb
push
pusha
aaa
dec
inc
insw
jecxz
sub
mov
mov
iret
sbb
and
fsubrl
rcr
dec
mov
pop
cwtl
pusha
les
sub
sbb
push
jb
iret
cmp
ret
lret
cmp
ret
lahf
adc
sub
jecxz
or
ds
inc
ret
mov
int3
fsubrs
xor
and
ljmp
cwtl
cs
gs
scas
shrb
aaa
outsl
cld
les
repnz
jb
xor
hlt
inc
leave
sahf
mov
jg
xor
mov
fcmove
push
push
and
les
outsl
xchg
ss
pop
push
ds
and
ja
ret
vpunpcklbw
push
sub
add
push
leave
xor
adc
test
repnz
out
push
push
leave
jne
loopne
or
jmp
iret
push
sub
mov
ret
xor
jp
and
gs
das
jp
cmp
push
pop
movsb
push
inc
aam
cmp
adc
lds
or
cli
addr16
add
mov
xor
ja
xchg
or
add
cmp
adc
mov
scas
pop
data16
jp
xchg
and
or
xchg
mov
arpl
sbb
pushf
sub
or
popf
sub
push
aas
lods
and
xor
lret
mov
jmp
insb
jmp
lret
iret
arpl
lret
cmp
pop
sti
pop
es
pusha
mov
stos
pop
inc
mov
xchg
xchg
movsl
jecxz
lods
aaa
aam
iret
cmp
mov
xchg
les
and
js
push
pop
jne
pop
aam
cwtl
jl
shlb
mov
pop
or
outsb
ljmp
and
lahf
sub
sahf
cmp
test
lret
es
pushf
mov
jne
mov
iret
inc
cmp
jecxz
cmpsl
jmp
add
int3
fwait
je
mov
fldenv
cmp
sbb
xlat
pop
fxch
popa
xchg
loopne
subb
jnp
adc
pop
in
adc
add
cmp
pop
pop
mov
sbb
cltd
jo
cmp
mov
dec
xor
test
out
push
shlb
mov
push
ss
inc
lret
les
movsl
jecxz
mov
add
test
pop
xchg
cltd
roll
add
mov
inc
sub
pop
pop
lods
les
ja
sub
popa
int
mov
sbb
test
js
test
sbb
lds
mov
ljmp
cmp
dec
sub
fwait
ds
xchg
add
test
mulb
mov
ljmp
jmp
loopne
mov
lea
test
das
mov
and
aad
daa
rolb
add
xchg
push
movsb
addb
aam
xabort
or
shlb
mov
cltd
lret
cmp
iret
xor
movsb
push
jle
loopne
adc
scas
in
cltd
test
rcl
sub
xchg
mov
dec
inc
pop
repz
jne
xor
fidivrs
cmp
xchg
fs
or
jmp
andl
push
in
mov
or
repnz
lahf
lcall
aam
pop
std
in
lret
sub
lods
in
dec
pop
mov
lahf
sarb
mov
push
and
or
mov
notb
jno
divb
mov
push
clc
aam
pushf
pop
movsb
inc
mov
inc
pusha
sti
mov
adc
loopne
cmc
jge
leave
outsl
aas
int3
les
lahf
push
loop
and
mov
adc
cmc
lcall
sub
pop
push
push
movsl
or
sub
das
push
add
push
xor
test
xor
or
add
rcr
push
out
cmpsb
or
mov
lds
dec
sub
mov
adcl
or
aaa
in
std
jecxz
in
shrl
lahf
push
cmp
mov
xchg
negb
xor
mov
addr16
xchg
sarl
scas
daa
jecxz
adcl
hlt
lret
adc
mov
insl
jecxz
clc
xchg
mov
lret
fwait
test
jp
pop
xor
dec
sub
xor
jae
add
and
ja
adcl
sbb
and
data16
mov
orl
out
cli
es
push
out
insl
shll
xor
jb
jmp
test
or
sbb
movsb
pushf
jmp
cltd
cmpsb
push
repnz
dec
pop
fcomps
mov
popf
push
cltd
and
sbb
jp
mov
insl
mov
mov
add
mov
adc
out
dec
xor
push
mov
jge
pop
pop
rcll
bound
mov
ret
mov
mov
jp
or
xor
into
add
xchg
pop
ja
push
sahf
and
iret
adc
mov
jo
rorl
scas
sub
sub
xchg
mov
mov
sbb
lea
sti
nop
fcompl
repnz
mov
inc
jbe
or
outsl
or
test
pop
enter
or
rorb
mov
shrb
movsl
aad
cs
imul
movsb
or
or
rcrl
add
mov
sti
outsl
adcl
dec
xchg
cli
test
pop
gs
daa
jo
scas
xor
fsubrl
jecxz
sbb
mov
jl,pt
test
inc
into
sub
mov
ret
mov
sti
int
push
pop
sub
mov
adc
lds
cmpsl
cmp
xor
pop
and
popl
cmc
xchg
jmp
movsb
sbb
mov
call
dec
aas
aam
in
jne
jmp
std
aad
dec
jno
pop
cld
mov
xor
mov
pushf
jae
fldenv
pop
xchg
xchg
scas
dec
rcrb
adc
dec
roll
call
adc
mov
sbb
pop
jne
loopne
push
pushf
ljmp
cmp
shrb
iret
movsl
rolb
lret
pop
xor
push
inc
fnstsw
or
shlb
xchg
mov
in
push
adc
inc
enter
jb
pusha
cmp
adc
movsb
ret
xchg
in
jecxz
cs
dec
sbb
mov
fcmovu
rcl
pushf
mov
jb
cmpsb
enter
andl
fwait
jl
adc
push
in
mov
pop
adc
clc
jns
mov
sbb
xor
pop
outsb
pop
gs
mov
push
mov
call
jmp
and
insb
jg
cmp
in
or
adc
sub
mov
arpl
or
sub
mov
int3
lcall
xchg
aaa
mov
popa
loopne
jne
test
dec
or
jo
loopne
add
enter
mov
movsb
subb
pushf
dec
push
mov
sub
mov
das
outsl
dec
movsl
test
popa
pop
xchg
lods
add
sub
cmp
push
cmc
lock
add
mov
ljmp
in
mov
lret
sbb
push
lret
cmp
pop
outsb
lods
lret
fisttpl
add
push
adc
cmp
xor
or
pop
push
push
add
adc
inc
stos
add
xchg
xor
int
push
rcl
dec
adc
mov
stc
in
dec
sbb
sbb
jae
sub
ds
mov
in
enter
or
or
pop
out
dec
shll
mov
push
mov
bound
ljmp
aas
push
push
inc
mov
sarb
mov
add
stos
mov
int3
lcall
outsb
push
lcall
nop
insl
stos
and
dec
shll
loop
out
scas
adc
add
cmp
mov
inc
dec
mov
pop
int3
mov
xor
inc
push
popa
cmp
lods
cmp
push
sbb
sbb
sub
daa
jmp
es
dec
xchg
mov
and
cmp
sti
add
jg
mov
xchg
pop
iret
inc
jns
or
mov
iret
and
cmp
movl
mov
or
pop
or
andb
or
ret
pop
cld
add
adc
sbb
jmp
int
mov
dec
inc
push
xchg
push
dec
xchg
push
push
and
and
sbbl
cmp
imul
shr
inc
pop
outsl
sbb
sbb
add
jl
sbb
lods
add
sbb
xor
stos
daa
sub
jmp
xchg
mov
cld
mov
cmp
cmp
mov
les
loopne
jmp
lahf
adc
rcrb
lahf
jp
aaa
nop
sub
sqrtps
sub
xchg
fxtract
xlat
mov
and
mov
aam
sbb
flds
dec
jns
ret
fwait
repnz
jo
out
dec
pusha
cmpsb
push
fidivrs
adc
lds
xlat
dec
sti
push
loope
test
xor
outsb
imul
shrl
mov
repnz
xor
fwait
test
xor
out
and
fstl
jecxz
shrb
addr16
push
jl
dec
movsl
add
sahf
dec
sub
jle
mov
aad
rclb
pop
xchg
out
addl
lods
lret
pop
jae
mov
xchg
testl
dec
lea
jmp
ja
mov
ficompl
lret
sub
dec
push
and
and
imulb
cmp
movsb
cmp
sub
add
push
ficomps
dec
sarl
mov
les
stos
jecxz
cli
mov
shll
xchg
inc
out
jg
jno
enter
jmp
loopne,pn
loop
lods
add
scas
mov
movsb
pop
add
push
sti
lret
xchg
lcall
shr
jp
ret
in
cltd
in
test
inc
sbb
ds
jbe
xchg
rclb
jbe
jnp
stos
hlt
inc
sbb
jge
sbb
or
outsl
inc
mov
or
movsl
pop
pandn
xchg
mov
sub
in
repz
inc
ja
xor
or
inc
inc
push
jnp
and
jmp
mov
xor
mov
jne
add
cmp
or
xlat
inc
insb
mov
pushl
add
fmull
icebp
and
push
jecxz
in
add
or
cmpsl
lods
xchg
cmp
rcll
xchg
mov
nop
data16
mov
fnsave
fs
xor
inc
fsubrl
prefetch
xor
lds
adc
popf
shll
sbb
gs
sbb
push
mov
pushf
inc
xchg
fidivs
int3
mov
out
xchg
xor
jg
push
dec
aam
cmp
rclb
mov
mov
push
testl
mov
xchg
fwait
and
jmp
inc
mov
test
xlat
leave
out
mov
jg
inc
cmp
sbb
iret
adc
dec
add
cmc
inc
insb
fsubr
daa
aam
mov
lods
sahf
test
sub
loop
fisttps
xchg
out
xchg
cmp
or
sbb
xor
pop
jno
lahf
push
jo
pop
dec
jnp
sbb
pop
add
orl
icebp
movsl
arpl
mov
jg
jns
cltd
imul
fdecstp
fnstsw
pusha
mov
add
in
sbb
insb
xor
sbb
xchg
xor
cltd
jns
mov
nop
in
jecxz
or
fwait
mov
sub
xchg
xchg
push
and
imul
mov
lcall
dec
inc
addr16
js
inc
in
mov
mov
dec
pop
ljmp
ja
fsub
loop
cmpsl
pop
jg
scas
cmc
int
pop
out
mov
out
out
sub
addr16
in
mov
imul
add
push
popf
in
sbb
push
or
enter
iret
mov
movsb
aaa
fisubrs
std
xor
cld
and
or
pop
sub
fldt
lods
icebp
push
rorl
pop
rcrl
sbb
and
rolb
movsl
push
pop
push
test
cmp
jae
add
lods
int3
scas
mov
sahf
push
or
repz
es
lea
imul
pop
in
das
add
xchg
push
and
add
insb
and
enter
fcoms
inc
pop
insb
add
pop
push
std
pop
mov
pop
es
sbb
inc
jl
adc
and
add
xorb
mov
aaa
xor
mov
ljmp
add
cmp
push
out
lahf
and
add
in
in
repnz
dec
dec
lret
test
mov
jae
fsubs
push
dec
sub
clc
cwtl
loopne
dec
xchg
fdivrl
repnz
cs
sub
arpl
xchg
repnz
aad
mov
sahf
cli
outsl
push
and
xchg
sub
loop
sbb
imul
mov
loope
sbb
and
push
imul
or
sub
in
sti
jecxz
mov
je
jo
sbb
sbb
rcl
leave
movsb
xchg
in
fstpt
notb
fildl
shrl
jns
mov
ss
das
faddl
inc
pop
and
das
mov
movsl
loope
xchg
inc
or
sub
mov
outsb
mov
nop
ret
push
jl
pop
inc
cwtl
into
rcrb
jbe
test
lods
jmp
fildl
subb
int
mov
adcl
call
iret
in
and
dec
sbb
iret
xchg
pop
fdivs
nop
outsl
repz
pop
push
lds
push
add
adc
jmp
stos
xor
fmul
mov
aad
rorl
jge
in
imul
sahf
sub
sub
mov
pop
ja
andl
push
jbe
lret
pop
clc
negl
xchg
sub
add
mov
popf
mov
addr16
add
xchg
repz
pop
cmp
push
leave
out
jb
sbb
jbe
shll
sub
sub
push
jl
std
cmpsl
mov
xor
sub
xchg
lcall
je
cmp
add
jle
pop
lahf
mov
dec
ffree
sub
dec
add
jge
ds
jnp
lret
push
mov
call
pop
je
mov
mov
arpl
frstor
popf
sbb
lret
and
shll
fimuls
mov
outsb
sbb
adc
xchg
cmp
aas
ss
std
in
mov
xor
aas
movups
clc
pop
imul
push
iret
arpl
push
sub
rorb
jmp
jecxz
push
gs
xchg
popa
mov
dec
mov
xor
add
cmc
jp
jmp
ds
cli
mov
xchg
fisttpll
dec
orl
jge
jmp
mov
dec
das
ja
push
idivl
fidivl
push
fmull
in
mov
pop
push
jle
aad
mov
push
push
dec
dec
dec
mov
out
or
daa
jae
aas
notb
or
add
loop
ja
xchg
clc
mov
push
or
mov
xor
jbe
into
pop
mov
mov
cmp
inc
fcoml
adc
mov
ret
rcrl
ret
mov
cmpsb
jge
sbb
mov
sbbl
frstor
pop
test
jmp
sub
aad
sbb
xchg
popf
sbb
lods
pushf
aad
aaa
inc
adc
loope
icebp
sar
pop
in
mov
push
ss
sbb
sahf
mov
add
xor
sarl
scas
sub
mov
in
pop
packssdw
dec
mov
cld
mov
jl
cmp
xor
loop
ret
cmpl
ja
scas
out
adc
lret
cmpsl
repnz
jge
ds
lods
out
xor
or
mov
push
mov
mov
adc
pop
cmpsl
mov
sbb
pop
pop
sub
sbb
xor
ja
mov
idiv
inc
loope
pushf
cmc
in
js
push
mov
cld
in
sub
pop
in
lock
enter
stos
dec
and
lock
cmp
call
pop
inc
nop
jns
fdivs
inc
test
movsl
pop
stos
repnz
imul
push
jecxz
push
and
iret
into
mov
add
mov
cmc
and
push
scas
aam
adc
mov
movsl
lret
pop
roll
sahf
xchg
inc
jecxz
psubq
int3
bound
xchg
push
xchg
fnsave
ret
xlat
outsl
pushf
les
push
push
loope
int
cmp
loopne
movsb
or
mov
cwtl
push
call
pop
and
fisubs
cmp
pop
sbb
dec
sbb
inc
movsb
sbb
and
aas
xchg
rcrl
dec
insl
inc
lock
push
shrb
cmp
add
lods
mov
gs
mov
add
sti
inc
mov
rcl
inc
pop
inc
mov
push
data16
icebp
xchg
inc
dec
rcll
or
xorb
pop
jg
test
mov
pop
cmpsb
jmp
cmpsb
push
or
sub
cmp
out
sbbb
add
add
in
lods
mov
adcl
fs
fldl
xor
mov
and
test
push
and
jbe
in
sbb
sarl
inc
sbb
adc
imull
aaa
imul
shr
mov
jo
adc
cli
xor
dec
pop
lret
sahf
jae
decl
sub
jo
mov
cs
aad
loope
rcl
lret
int3
push
scas
jne
pop
sub
sub
dec
mov
or
ret
pusha
leave
pusha
sbb
dec
cmpsb
and
arpl
repz
xchg
sub
test
sub
pop
iret
outsl
arpl
mov
mov
cmp
das
pop
into
sarl
mov
lock
mov
or
repnz
in
fdivr
scas
sbb
inc
ds
fsubrs
sbb
hlt
sub
sub
cmpsb
pusha
adc
mov
das
lea
insl
orb
push
mov
sub
and
push
ror
popf
fisubs
test
pop
cltd
cmp
sbb
pusha
pusha
test
inc
or
or
and
xchg
cmp
lods
ljmp
int3
aad
repz
xchg
cmp
push
mov
jp
mov
imul
xchg
inc
xorb
out
or
pop
mov
mov
mov
adc
push
push
xor
movsb
loope
ja
dec
add
jl
or
inc
jg
sbb
add
inc
in
dec
jb
cld
xor
and
jmp
mov
sahf
fnstenv
mov
movsl
lods
scas
mov
or
pop
pop
hlt
push
inc
test
out
outsb
testb
sub
pop
inc
cmc
jle
aaa
push
mov
out
add
adc
lret
bound
mov
ja
dec
out
out
lds
fdivrl
mul
push
mov
std
in
and
pushf
push
and
mov
xor
add
test
push
popa
cltd
jp
mov
scas
jne
mov
jno
outsb
fadds
int
and
outsl
imul
les
testb
aad
scas
dec
mov
out
outsb
std
lea
inc
loopne
daa
sbb
dec
dec
mov
stc
push
lret
les
in
ljmp
lahf
ljmp
add
xor
or
ja
dec
push
sbb
jo
add
and
jge
push
mov
orb
bound
mov
add
or
sub
lcall
and
push
pop
pop
cmp
in
test
cs
insl
into
lret
fnstenv
dec
int
add
scas
adc
test
and
mov
cmp
cmp
mov
sub
out
sbb
mov
push
push
push
mov
jl
div
mov
mov
jae
adc
sub
push
lret
sub
mov
inc
add
jge
ror
pushf
daa
mov
lds
dec
sub
push
mov
dec
inc
fucomi
fldt
enter
enter
inc
repnz
jbe
lods
pop
divl
rcrb
sahf
push
jnp
mov
cmp
pop
adc
pusha
adc
rorb
mov
mov
jg
jecxz
inc
int
int
xchg
jmp
loop
loopne
hlt
push
jle
sbb
rcrb
and
fs
add
dec
xchg
sbb
lds
or
fdivrl
outsl
aaa
adc
or
xchg
stc
sbb
lahf
push
ja
add
push
push
sub
dec
cmc
or
mov
hlt
xchg
push
movsl
out
in
xchg
ret
icebp
stc
fnstcw
add
xchg
in
add
inc
movsl
fsubrp
roll
fwait
daa
aad
mov
pop
std
adc
push
repnz
std
mov
frstor
push
cmp
lds
cmp
cltd
jecxz
add
xchg
loopne
add
ljmp
mov
and
fmulp
cld
cmp
inc
sbb
cmp
xor
mov
ret
dec
jns
addr16
stos
ja
cmp
lds
mov
ficoms
mov
push
push
sub
call
sub
add
cmp
dec
or
sti
int3
jo
les
scas
enter
sub
cmp
popl
add
mov
cli
jle
add
jl
xchg
orl
mov
fisubl
add
lds
rcrb
xchg
mov
stos
mov
cmp
test
and
and
leave
push
xor
out
outsl
rorl
popa
jnp
mov
xor
cwtl
lahf
sub
xor
stos
int3
xchg
inc
sub
jbe
sub
in
test
stc
add
sub
test
insb
rclb
xor
insl
push
or
push
sub
test
in
test
cmp
insl
add
cmp
addr16
pop
bound
shrb
call
xchg
dec
movsb
mov
jno
out
mov
arpl
call
nop
lods
jo
pop
push
lods
sbb
sbb
addb
fwait
jle
lods
inc
icebp
push
push
inc
int3
pop
addl
inc
cmp
pop
inc
pop
fnsave
mov
movl
and
sub
jno
mov
fiadds
cmpsl
xor
sahf
jle
into
icebp
mov
loop
scas
pop
sti
aad
mov
int3
pop
add
push
stos
shll
cwtl
jg
xor
in
mov
loop
mov
mov
sub
popf
push
shrb
loop
inc
mov
out
jmp
and
test
mull
mov
xchg
mov
les
addr16
pop
fstpt
imul
push
xchg
std
push
rorl
aam
ds
push
push
incb
shlb
adc
jecxz
inc
ja
fwait
or
mov
ret
lea
sbb
xor
rdmsr
cs
or
negl
in
push
xor
mov
inc
movsb
xchg
lock
dec
ljmp
mov
mov
jb
jnp
cmp
mov
add
bound
inc
out
movsl
mov
loop
outsb
inc
movsw
and
jge
lret
sbb
jg
jb
bound
roll
mov
push
arpl
sbb
inc
je
sub
xorl
pop
inc
lcall
or
pop
arpl
dec
daa
and
jge
push
sub
les
jnp
inc
sub
push
loop
and
sbb
clc
dec
insl
xchg
shrb
dec
popf
pop
dec
js
stc
push
cmpb
mov
shlb
mov
pushf
loope
pop
pushf
cmpsl
ret
insb
shlb
aaa
mov
mov
push
stos
mov
das
call
pop
popf
push
call
arpl
push
sub
mov
cmp
pop
adc
sbb
mov
pop
imul
mov
fiaddl
push
or
cmp
data16
es
and
outsb
push
push
insb
pop
dec
add
pop
pop
int3
fcmovnu
cmovl
sarl
and
movsb
xor
lret
sbb
mov
mov
xor
iret
push
out
xchg
jne
int3
lods
ljmp
cld
jmp
mov
mov
outsb
mov
pop
bound
jae
rorl
cli
adc
pop
pop
cmpsl
lcall
cmp
popa
and
not
fcompl
sub
gs
or
jecxz
lret
lods
test
mov
out
outsb
les
mov
inc
jge
cltd
fcoml
repz
outsl
sbb
shlb
es
mov
ret
push
repnz
in
add
movsl
push
call
adc
test
inc
loopne
imul
out
stc
les
xchg
sbb
shl
test
dec
aad
ret
xchg
mov
mov
testb
sub
jae
push
pop
pop
jnp
sti
mov
mov
cmp
and
lret
cmp
inc
les
add
dec
mov
loope
lds
in
xor
gs
cmp
xchg
or
inc
sub
adcb
scas
cs
mov
es
hlt
jge
or
mov
jmp
shll
cli
xlat
mov
mov
outsb
jb
jbe
fsubrl
popa
jp
lret
sbb
dec
sbb
iret
repnz
pop
in
fldt
out
aaa
xchg
lods
mov
repnz
jg
shll
or
fsubl
jmp
xchg
jae
mov
xchg
loopne
adc
mov
pop
addl
xchg
pop
inc
lahf
shll
mov
sub
pop
mov
fdivrs
les
or
inc
and
imul
pop
or
rcll
ss
in
stos
or
fwait
in
int3
shl
sub
lods
imul
pop
fistpl
lods
pusha
or
cmp
sbb
scas
push
out
fsincos
adcl
je
mov
push
das
out
mov
and
jecxz
xchg
lods
lahf
adc
push
inc
aaa
icebp
adc
mov
jecxz
sbb
ss
outsl
sub
jecxz
imul
jp
mov
jmp
shl
mov
jae
sub
js
hlt
insb
mov
jns
rorb
mov
push
sub
sbb
in
sbb
cwtl
cmp
pop
lock
pushf
test
sti
fdivl
xchg
das
out
jns
das
test
pop
sbb
sub
adc
inc
mov
xor
sbb
pop
lret
cmpb
dec
orb
dec
jecxz
mov
pop
movsl
mov
jg
push
into
test
mov
lea
pop
imul
jnp
insb
leave
sbb
pop
ds
in
xchg
sahf
sub
xchg
mov
adc
jo
fisttps
in
cwtl
gs
in
dec
cmpsl
pop
push
lock
xchg
jge
push
mov
pop
and
pop
jbe
mov
shl
push
mov
dec
push
cmp
insb
ret
scas
cli
shll
cs
xchg
dec
mov
pop
jne
fcmovnb
icebp
and
cmp
pop
xchg
les
mov
xor
cwtl
or
xchg
scas
sbb
inc
and
arpl
lock
clc
xlat
pusha
xchg
lods
punpckhdq
push
stos
xor
cltd
sub
sub
jno
xor
push
sbb
test
stos
push
clc
cmp
pop
adc
andl
insl
scas
aaa
pop
std
ret
test
jg
hlt
pop
jns
insb
insl
inc
mov
sbb
pop
lret
adc
or
fbld
xlat
xor
jo
dec
hlt
fbstp
fcmovu
xchg
lahf
jg
xlat
jge
jp
and
jae
jbe
xchg
mov
outsl
mov
bound
js
or
xor
pop
test
imul
jp
cmp
mov
sbb
sahf
fcmovne
sub
jb
push
shl
adcl
ljmp
into
push
fsubrs
jge
cmc
cltd
sarb
jae
ficoms
and
movsb
and
push
jle
popf
lcall
mov
push
jns
adc
inc
fldt
fidivrs
dec
call
mov
imul
mov
lret
push
in
popf
ljmp
popa
notb
or
inc
inc
invd
pushf
cmp
push
push
clc
mov
pop
cmp
movd
cmp
insb
out
cmpsl
nop
adc
in
sub
sub
out
mov
xor
jb
jle
fstl
in
rcrl
pop
xchg
fstpl
pop
mov
pop
xchg
cmpl
push
cmpsl
lea
jge
inc
jle
lods
cli
dec
popf
movsb
mov
insb
xor
insb
arpl
in
sbb
jmp
mov
insb
or
popf
ret
dec
lret
cs
mov
lret
inc
es
mov
lea
fsubrl
data16
call
mov
mov
fwait
pop
fptan
mov
es
and
adc
add
pop
or
lret
faddp
xor
cltd
lahf
test
xchg
jbe
push
cltd
nop
pop
push
je
sub
bound
rep
mov
mov
mov
mov
pop
pop
sub
outsb
movsb
jl
add
jo
add
aas
xchg
add
xchg
call
and
int3
in
test
jmp
movsl
push
lret
out
repnz
push
xchg
shll
mov
out
fmuls
lods
xor
inc
xchg
stc
mov
mov
aaa
and
rol
cwtl
outsb
xchg
sar
cmp
jo
mov
mov
mov
add
mov
les
mov
mov
jns
sbb
push
sbb
pop
mov
incl
or
cmp
ds
cmp
jne
jns
mov
pop
pop
mov
mov
xor
rol
pop
jge
adc
imul
pop
fsts
loop
imul
icebp
fistpl
je
mov
ja
jle
sub
js
inc
push
pop
fldcw
outsb
rorl
fidivl
xor
fwait
cmpsl
lods
fldenv
test
push
decl
mov
js
lret
icebp
out
mov
pop
jge
mov
pop
lahf
xchg
das
sub
stc
cli
std
or
fcomi
push
ret
push
cmp
pop
pop
imul
xchg
ret
push
push
rcpps
addr16
daa
cmp
mov
das
aad
mov
outsb
cmpsl
mov
lea
aas
add
clc
imul
push
mov
mov
adc
mov
mov
test
fisubrl
roll
cld
or
pushf
cld
scas
jno
scas
imul
dec
test
xor
roll
jmp
cmp
add
or
pop
out
orl
dec
leave
jae
sub
mov
jo
lods
divl
cmpsb
fsubs
lcall
addr16
and
out
inc
jb
movsl
ret
je
pop
and
shrb
mov
cmp
lcall
mov
sub
mov
mov
add
out
mov
and
cmp
in
mov
mov
xor
jge
movsl
pop
sub
mov
in
sub
out
scas
std
rolb
dec
inc
mov
and
cmp
enter
adc
cmpsl
ret
inc
in
fcomps
je
dec
mov
xorb
jmp
cs
jns
mov
mov
inc
sarb
pop
jbe
popl
xchg
cmp
popa
pop
popf
xchg
mov
push
mov
les
xchg
int3
ret
mov
mov
popa
sahf
sub
and
mov
or
pop
and
xorl
enter
mov
mov
mov
in
mov
sbb
jmp
cli
rcrl
inc
lods
adc
popf
arpl
call
cmovs
xchg
jl
and
adc
xchg
push
push
xchg
imul
dec
jb
push
scas
inc
ss
movsb
mov
lock
push
xor
xor
inc
stos
leave
jmp
mov
adc
inc
dec
ss
sbb
fs
sbbb
movsb
icebp
dec
xor
or
loope
lods
insb
imul
jae
inc
cmp
icebp
cmp
movb
sub
and
push
dec
stos
rclb
or
jo
enter
push
push
pushl
mov
mov
push
fwait
cmp
dec
aas
push
xchg
jl
test
popf
mov
ja
pop
sub
lods
arpl
mov
xor
adc
xchg
adc
loope
out
bswap
push
pop
je
xchg
fucomp
push
cwtl
pop
jge
test
cmp
jecxz
dec
incl
mov
sub
dec
add
and
mov
xchg
repz
push
push
push
mov
adc
xchg
mov
mov
aaa
cmp
push
jl
jecxz
or
xchg
mov
stos
jmp
les
adc
cmpsl
test
push
mov
or
cld
add
ljmp
fidivs
mov
xchg
cmp
ja
push
mov
or
pop
mov
in
mov
adc
loopne
sub
dec
push
pop
call
or
scas
lods
pop
test
lahf
pop
scas
cli
ja
push
or
cmp
stos
aas
cmp
or
jmp
int
imul
mov
mov
insb
cmpsl
jne
fistl
call
push
cmpsl
sub
arpl
outsb
pop
iret
cltd
addb
pause
mov
push
mov
sbb
mov
outsl
call
or
push
mov
sbbl
imul
imul
hlt
into
xchg
in
sbb
pop
mov
insl
adc
arpl
jecxz
fiaddl
push
les
cmpsb
insb
jb
dec
roll
push
add
int3
xchg
ljmp
sbb
or
addr16
add
outsl
dec
stos
push
test
sub
mov
and
mov
adc
jns
push
push
pop
mov
xchg
mov
lret
mov
pop
jae
pop
push
xor
fcoms
mov
pop
movsb
xor
xlat
ret
push
and
test
mov
sub
inc
push
add
cmc
pop
jnp
sub
loop
pop
jbe
mov
cli
push
jg
jecxz
mov
ds
dec
fists
pop
test
xor
inc
xchg
popa
jp
fadds
ret
mov
mov
xor
mov
and
ja
add
mov
test
mov
loop
inc
and
mov
inc
mov
test
into
adc
mov
jae
xchg
gs
repnz
std
cld
or
je
push
mov
cld
orb
out
pop
and
add
jno
mov
add
push
dec
ljmp
stos
xor
popf
dec
add
mov
jo
pop
jo
arpl
fcoms
and
roll
in
test
dec
or
adc
xchg
cmpsb
fwait
push
push
adc
and
add
and
mov
xor
les
repz
sub
in
dec
shl
mov
or
sub
imul
pop
mov
fists
lcall
sub
adc
inc
mov
or
pop
xor
mov
movsl
cmp
addr16
pop
ror
push
outsb
and
sbb
or
aaa
outsl
jmp
repnz
enter
inc
je
sbbb
fdivrl
xlat
jns
push
sbb
div
movsl
out
fisubrs
push
fiadds
and
inc
pop
cmc
or
js
out
ret
andb
faddl
insl
pop
mov
xchg
imul
fists
enter
xlat
jmp
hlt
rcl
dec
imul
add
jb
jmp
mov
adc
dec
or
sbb
test
add
hlt
push
mov
xchg
adc
repz
icebp
lret
int
push
adc
jge
sub
push
jmp
mov
aad
test
cmp
xor
add
cwtl
test
jae
or
xchg
icebp
inc
jbe
sbb
dec
pusha
xchg
scas
inc
xor
lret
mov
in
sbb
xchg
xor
cli
add
xor
add
gs
xor
jmp
unpcklps
sbb
push
mov
mov
ret
xchg
ror
lea
iret
add
iret
call
push
xlat
push
xchg
mov
sbb
pushf
jb
and
mov
dec
sahf
sub
pop
loope
dec
lret
sub
fwait
mov
test
fimuls
cmpsl
es
in
mov
inc
mov
and
js
or
pop
add
in
ret
sub
dec
xchg
push
jb
shll
test
pushf
insb
mov
test
incb
cltd
xchg
test
cmp
jb
out
aad
jmp
cltd
push
jle
push
dec
cwtl
push
movsb
jno
pusha
mov
adc
in
jecxz
div
fwait
or
enter
push
sub
insl
push
test
daa
lahf
stos
dec
sbb
jnp
inc
mov
dec
jne
jmp
mov
lcall
sbb
stos
inc
outsl
sbb
shl
inc
or
add
mov
add
scas
mov
cwtl
or
das
mov
add
rorb
xchg
or
or
sub
popa
rcl
add
stos
mov
insb
pop
adc
or
mov
dec
and
xchg
stc
test
iret
cmp
cmp
mov
pop
pop
rcr
dec
adc
jnp
outsb
mov
and
lahf
mov
mov
pop
inc
push
icebp
icebp
int3
add
add
aad
repnz
xor
sbb
das
xor
and
out
mov
inc
mov
push
cmpsl
mov
outsb
xchg
js
fisubrs
dec
lret
mov
rorl
jp
leave
rolb
lret
push
sub
insl
and
fldt
test
pop
sub
lods
ds
addr16
or
xchg
sbb
cmp
pop
mov
repnz
and
movsb
jecxz
and
cli
in
pop
and
dec
mov
adc
dec
test
in
test
lcall
mov
es
mov
add
out
xor
fdivrs
cmp
inc
adc
sub
or
std
cmp
sub
or
inc
push
outsl
mov
insl
loop
loope
lret
sbb
repnz
test
or
jae
push
dec
dec
inc
xchg
nop
rcrb
or
bnd
mov
imul
dec
push
fildll
out
fmull
fld
dec
hlt
and
or
pusha
mov
movsl
cmc
cld
data16
in
pusha
xchg
pusha
mov
pop
add
cmc
sbb
sbbl
xchg
jge
out
pop
in
push
mov
clc
adc
mov
cltd
pop
xor
daa
fwait
mov
adc
rcr
cltd
cmpsb
jl
pop
ret
push
mov
movsl
mov
mov
jnp
rol
xor
stos
lods
mov
adc
sub
loope
xchg
das
filds
popf
sahf
cmc
mov
pop
icebp
pop
lods
hlt
adc
dec
ljmp
in
testl
rcr
imul
xor
inc
mov
bound
lea
fwait
out
xchg
sbb
mov
cltd
pop
sub
cmpsl
inc
mov
movsb
sbb
xor
dec
sarb
movsb
in
xchg
xchg
pop
lcall
add
push
inc
cmp
fistl
inc
aam
in
xchg
sar
inc
jg
stc
adc
jbe
or
mov
and
pop
mov
jns
bswap
mov
inc
jl
sbb
sbb
add
mov
pop
test
sub
pop
fwait
cld
inc
cmc
mov
xlat
sti
popa
data16
or
fwait
sahf
inc
popf
push
jle
lret
adcl
mov
mov
enter
movsl
iret
sbb
jae
mov
stos
adc
js
fwait
jge
test
lret
mov
cmpsb
push
xchg
lods
cmp
leave
cmp
mov
sub
adcb
frstor
shll
jns
sbb
push
outsb
les
into
push
dec
push
outsb
notl
inc
jg
aaa
rcrl
mov
cmpl
in
or
stc
fbld
setae
fildll
jg
cmpsl
pop
leave
xchg
dec
in
ss
into
aaa
sbb
mov
sbb
jno
or
xlat
shlb
xchg
pop
sub
xchg
ds
xlat
mov
mov
fiadds
movl
sbb
inc
xchg
and
add
jmp
in
enter
in
sbb
popf
add
push
xchg
add
into
jae
add
pop
or
leave
mov
repz
out
sbb
ds
insl
cli
sti
mov
xor
inc
mov
loop,pt
push
cmp
inc
clc
lret
rcll
pop
rcrb
movups
add
adc
enter
out
insl
stos
mov
outsl
inc
pusha
sbb
jl
inc
orb
mov
push
sbb
fstl
cli
enter
shr
stos
gs
mov
outsl
fldl
mov
push
jno
xchg
pop
and
jns
rorl
and
add
shrb
add
sbb
rcll
jle
ds
lret
inc
jmp
jnp
mov
fldenv
ljmp
xor
cmp
mov
daa
adc
sbb
xchg
lret
pusha
aam
rcll
xchg
mov
rorl
pushw
jge
fistpl
adcb
imul
add
dec
pop
lods
pushf
test
xchg
sbb
fwait
mov
push
jmp
bound
mov
xchg
sub
das
dec
lahf
xchg
cmp
or
call
xorl
push
xlat
lret
xchg
adc
fwait
xor
adc
movsl
dec
aas
dec
ja
movsb
mov
mov
mov
stos
jo
adc
aad
and
lcall
push
lcall
cli
sub
push
int
fcmovnu
in
push
ret
or
aaa
or
cmp
jbe
pop
int
jecxz
hlt
ds
mov
insl
jns
rcrb
xchg
xor
lock
ret
test
scas
cmpsb
icebp
push
push
loopne
inc
sti
aas
and
jmp
jl
aaa
test
pop
enter
mov
inc
jno
repz
xchg
inc
dec
enter
in
push
add
pusha
jns
and
sti
xchg
imul
in
push
inc
push
mov
int3
lret
lret
jbe
push
lret
es
sub
ds
aam
xchg
arpl
ret
sbb
clc
push
push
jno
jnp
test
dec
mov
jne
fistpl
loop
dec
ret
div
fcomi
push
cmpsb
add
pop
xor
sub
jle
call
xchg
lcall
xchg
daa
push
push
mov
inc
and
sub
inc
and
or
xor
leave
sbb
or
adc
test
cmc
sub
hlt
mov
cmpsb
xlat
cmp
dec
sub
inc
mov
movsl
aaa
jmp
mov
xor
jge
loop
xchg
popf
lods
roll
sbb
sbb
sbb
test
jp
scas
sbb
xchg
fsub
icebp
jecxz
shlb
pop
inc
inc
mov
insl
into
sub
and
xchg
push
ret
mov
jbe
sbb
cmp
ficompl
push
rol
test
and
repnz
cli
cmc
mov
jb
xlat
dec
dec
inc
inc
in
std
out
xchg
repz
xchg
int
iret
andl
push
mov
sbb
sbb
mov
in
jecxz
arpl
inc
pop
add
jle
sub
jbe
push
push
pop
divb
loope
inc
pop
pop
mov
push
and
nop
or
clc
ljmp
dec
scas
dec
adc
jle
fs
test
pop
test
push
lods
push
testl
push
les
or
loop
std
jle
and
fstpl
in
rorb
ja
push
outsb
mov
jne
daa
xor
pop
and
les
stos
inc
cmpsl
lods
sub
cmc
pop
jnp
pushf
cmp
dec
ror
adc
and
lahf
xor
cld
sub
dec
aad
gs
test
lods
and
cld
inc
mov
push
jmp
inc
push
rcrw
or
les
inc
inc
aaa
mov
jp
push
inc
sahf
js
and
sbb
xchg
cld
cmp
cmp
testl
jne
rcll
cmp
outsb
sbb
shrl
mov
fistpll
testl
inc
jns
loope
mov
repz
push
into
jb
ljmp
pop
sub
cli
pop
adc
in
mov
or
paddb
aas
arpl
lods
pushf
iret
test
push
cmpsb
aaa
push
jl
mov
mov
and
movsl
pop
lret
dec
call
or
in
fstp
sbb
inc
and
sarb
enter
andps
sbb
pushf
outsl
sbb
xchg
shll
arpl
fs
jne
fsincos
or
mov
jg
scas
sarb
push
pop
jecxz
outsl
stos
jl
adc
loopne
dec
pop
lock
xchg
insb
ja
loop
push
mov
mov
xor
aad
pop
add
pushf
clc
push
fs
shl
inc
pushf
int
into
stos
repz
push
inc
out
bound
sbb
pusha
xchg
popf
or
push
pop
pop
loop
cmpsl
flds
mov
dec
scas
js
and
jae
andb
gs
lds
sarl
xchg
sahf
or
movsl
cwtl
cltd
sub
das
mov
clc
je
out
test
mov
bound
adc
mov
sub
pop
lods
jle
sbb
ret
inc
and
jno
aad
mov
cmp
popw
movsl
mov
shll
in
adc
in
ss
pop
inc
fmuls
bnd
push
cli
sub
mov
sub
enter
mov
adc
repnz
repz
notb
movsb
or
jp
lahf
fs
lcall
push
shrb
lcall
mov
stos
cmp
jae
xchg
sbb
enter
push
outsb
jl
jmp
xchg
jp
out
cmp
je
test
pop
inc
jg
fucomi
mov
cmpsl
mov
mov
jp
popa
pop
dec
les
ljmp
adc
xchg
fiaddl
dec
das
mov
or
adc
jp
mov
cli
cmp
je
adc
sbb
pop
lods
sarb
repz
insb
pop
stc
xchg
lods
iret
out
bnd
cli
push
push
mov
sub
cmp
lock
pop
iret
lcall
or
inc
inc
adc
lahf
inc
xor
movsb
pop
outsl
mov
mov
iret
xchg
push
cltd
xor
sbb
mov
pop
xchg
aam
pop
add
out
scas
fists
inc
cmp
lds
daa
inc
push
pop
xor
jns
std
stos
sbb
add
add
mov
inc
gs
mov
dec
mov
js
push
or
adc
jne
mov
adc
loopne
xchg
jno
push
ss
jno
push
fsubr
popf
pusha
dec
and
pushf
call
out
xor
repnz
pslld
jle
xlat
mov
fcom
push
mov
movsl
xor
ja
lcall
test
push
adc
and
lock
xchg
pushf
and
push
mov
stos
and
mov
cmc
dec
lahf
shrb
popa
aaa
les
or
cmp
mov
in
sbb
mov
jo
cmp
mov
ljmp
jne
xor
imul
ja
in
sahf
pop
fsubr
sbb
in
fs
ret
fwait
das
rep
mov
sub
movsl
mov
add
popf
stos
inc
jl
push
in
mov
sub
daa
shll
lock
push
jmp
rorb
subl
push
inc
jae
cmpsl
jp
sub
fcom
fcmovu
pop
push
pusha
jne
cmc
and
fisubs
xchg
data16
shlb
cs
insb
and
pop
icebp
sub
xchg
push
mov
pop
add
addr16
jmp
cmp
adc
mov
paddw
and
lahf
sbb
adc
fsubrs
leave
mov
outsl
scas
mov
mov
iret
sub
xchg
mov
ja
pushf
push
and
or
int3
bound
or
adc
gs
and
leave
lock
mov
lret
add
xor
push
fimull
jb
inc
aaa
ds
mov
test
adc
es
fistl
into
daa
adc
xor
rcrl
add
sub
loope
out
addr16
sbb
fmuls
inc
imul
bound
pop
and
mov
mov
inc
xorl
cld
push
aaa
comiss
dec
scas
cmp
imul
cli
adc
imul
outsb
cmpsl
add
jae
aas
mov
sbb
dec
enter
sub
insb
das
inc
mov
push
shrb
mov
xor
push
xchg
inc
inc
ljmp
jle
pop
or
loopne
int3
enter
stc
popl
mov
lods
lahf
jae
int3
jg
fwait
add
lods
xchg
add
sar
dec
lods
pop
cmpsl
mov
sub
jp
jg
into
cmp
popa
xchg
lcall
cmp
lahf
push
std
mov
sbb
dec
stos
jo
xor
adc
sti
sbb
out
decl
daa
popa
push
jl
inc
or
lret
iret
mov
xor
shll
rcrb
mov
xchg
scas
and
jg
addr16
mov
in
les
mov
pop
jae
aad
dec
mov
pop
xor
mov
popa
mov
jb
pop
xchg
pop
sarb
test
repnz
cmp
cmc
mov
push
fwait
dec
jns
lret
dec
loopne
imul
push
divb
push
add
push
sub
sbb
sub
push
stos
and
insb
test
loopne
bound
stc
lahf
fs
adc
mov
xchg
xchg
pop
push
jno
and
pop
xchg
cltd
popf
imul
inc
aas
mov
clc
dec
ljmp
or
ja
out
addr16
je
lea
xchg
pop
xor
rolb
sbb
xchg
sbb
iret
sbb
ja
adc
stc
add
push
jae
cmp
inc
inc
lods
mov
xchg
adc
fstl
dec
js
out
jns
aam
cmp
push
and
cwtl
data16
adc
pusha
push
int
aam
mov
adc
daa
mov
test
ss
hlt
xor
xchg
inc
outsb
sarl
dec
shl
cmp
add
fwait
jb
cwtl
mov
stos
mov
pop
xor
enter
pusha
xchg
push
mov
dec
lds
jmp
pop
jle
cs
cld
out
test
out
popf
sub
pop
mov
fdivrl
pop
test
shlb
inc
or
rcrb
shlb
push
mov
push
mov
mov
ret
pop
adc
repnz
lret
aas
enter
sub
mov
sbb
call
inc
pop
push
push
mov
or
repz
jb
pop
outsb
xchg
test
addr16
adc
xchg
add
in
sbb
bound
paddsw
xor
aam
iret
mov
stos
inc
insb
or
xchg
popf
jecxz
xchg
pop
mov
pop
add
aas
xchg
out
add
xor
imul
int3
repnz
stos
pop
test
cs
xchg
loope
adc
andl
xor
push
sub
daa
das
jle
out
loopne
icebp
mov
stos
sti
test
flds
subl
les
adc
push
sarb
inc
outsb
add
xchg
movsl
cmpsb
sbb
sub
xchg
outsl
lds
mull
pop
mov
pop
mov
sub
movsb
sbb
push
out
aaa
jae
fsubp
xchg
jp
mov
sub
std
in
sbb
dec
lahf
loop
fiaddl
sub
sbb
ljmp
out
cli
inc
or
jg
sar
fimull
mov
les
shrl
add
mov
adc
sub
repnz
dec
lods
pop
pop
xchg
xchg
inc
lcall
jne
xor
fcmovnb
stos
out
cli
dec
out
dec
mov
andl
xchg
pusha
pusha
jnp
pushf
shlb
sub
push
mov
mov
add
shrl
addl
jnp
in
mov
lcall
jno
addb
scas
cmp
lods
es
inc
adc
adc
xor
cwtl
and
push
jmp
inc
jae
xlat
mov
icebp
bound
pop
push
jb
shr
sahf
mov
lea
push
mov
inc
roll
xchg
lret
addr16
lock
fldl
adc
aam
es
shll
lcall
repz
xor
idivb
jne
fisubl
insl
inc
inc
inc
mov
adcl
mov
mov
imul
ja
mov
cmp
mov
repz
shrl
in
je
mov
jns
mov
idiv
or
arpl
xchg
dec
sahf
aaa
push
mov
inc
jae
je
cmp
and
out
fidivs
les
xchg
fstps
jp
pop
pop
lea
mov
aam
add
mov
or
adc
or
fdivrl
cmpsb
js
xchg
fists
lret
cmp
xor
mov
sbb
push
or
ljmp
ret
mov
push
int3
rcrb
push
push
aad
cmp
mov
add
inc
dec
iret
dec
insl
rcl
adc
sbb
mov
xchg
addr16
pop
repnz
sub
mov
arpl
inc
and
xchg
scas
ds
int3
mov
shll
aam
cli
push
xchg
fnstcw
dec
cmc
inc
or
push
das
xchg
mov
jl
inc
decb
cld
test
sub
push
push
sub
es
and
inc
aad
nop
inc
lods
sbb
inc
xchg
mov
lods
xchg
rclb
arpl
loope
add
cmp
push
mov
sub
lahf
sub
jmp
addl
push
xchg
jle
adc
je
ss
imul
call
cmpsl
out
xor
cmp
clc
popa
sbb
adc
add
push
push
ds
daa
es
movsl
aaa
pop
repnz
xchg
testl
sbb
repz
adc
ret
test
mov
ret
addr16
ja
loope
sbb
mov
jmp
xor
mov
inc
xor
pushf
push
add
and
pop
sub
xlat
in
push
or
mov
mov
sbb
jnp
jns
popf
push
pop
mov
sub
sbb
pop
and
inc
pop
sub
outsl
mov
stc
sbb
or
inc
and
xchg
inc
cltd
ds
inc
sahf
outsl
sub
mulb
jb
sub
out
pop
mov
mov
lret
pop
out
mov
mov
je
loop
int3
dec
lds
cwtl
add
fadds
jg
dec
pop
pop
es
jo
xorb
pop
push
testb
inc
add
subl
arpl
xchg
xchg
sub
enter
push
pop
adc
ret
dec
adc
xor
and
mov
or
lock
insl
sahf
xchg
cmp
dec
aad
add
and
push
cltd
xor
push
mov
out
pop
fists
mov
dec
in
mov
scas
and
xor
mov
imul
bound
inc
pop
loope
pop
sbb
xchg
bound
int
lret
lods
inc
dec
push
loop
add
mov
daa
imul
or
sbb
mov
sahf
aad
roll
dec
pop
mov
rep
push
push
xchg
or
mov
cltd
aas
inc
mov
sub
mov
xchg
mov
xchg
cmp
fs
and
out
shll
xor
out
addr16
shl
test
add
xchg
and
outsl
mov
and
pop
jno
loopne
fnsave
addr16
lcall
inc
pusha
rclb
aam
outsb
jae
ja
mov
add
adc
add
scas
and
cmp
ficompl
inc
mov
xor
in
ds
sub
movsb
sbb
add
popa
mov
sub
leave
cltd
scas
dec
add
pop
bound
fldl
jbe
xchg
mov
mov
and
rorb
adc
sbb
cwtl
bound
dec
xchg
inc
dec
dec
adc
pop
ds
out
push
nop
xlat
cmp
cwtl
stos
jecxz
jb
xor
out
push
jns
cmp
in
jmp
cwtl
dec
xor
shrb
addr16
out
outsb
xchg
xchg
je
push
mov
xor
inc
lea
outsl
lret
push
pop
or
shr
or
push
xlat
xor
fistps
mov
popa
cwtl
pop
cmp
lods
push
push
test
fucomip
pop
ja
leave
adc
or
dec
xchg
pusha
inc
inc
sbb
roll
cmp
dec
adc
iret
mov
cmp
sar
into
cwtl
imul
sarl
aaa
jnp
cmp
push
shl
adc
push
pop
push
lahf
pop
fs
adc
out
enter
outsl
pop
insb
and
hlt
and
ds
push
add
pushf
xchg
push
jae
scas
shl
push
mov
jmp
sub
int
sbb
mov
lds
mov
cmp
dec
cmpsl
stos
arpl
add
mov
mov
xor
ret
imul
cmpsb
push
pop
xor
jb
pop
sub
lods
add
daa
jne
add
pop
popf
andl
and
cli
movl
mov
sarb
icebp
mulb
insl
jge
leave
dec
movsl
push
sub
in
xor
push
or
pop
xor
mov
rcpps
xchg
imul
cmp
fadds
pop
jmp
outsb
pop
push
vpcmpeqb
in
pop
jg
mov
test
mov
sub
xor
xor
lahf
jge
add
mov
into
into
test
les
jl
add
je
dec
cs
pop
cmpsl
and
pop
mov
inc
test
test
testb
hlt
jge
inc
inc
movsl
jo
bound
iret
popa
stc
sbbb
lods
lock
pusha
lret
sbb
add
movsb
lods
dec
mov
mov
mov
add
jo
pop
cltd
pop
mov
add
clc
inc
negb
out
cmp
inc
push
lcall
pop
sbb
hlt
or
and
mov
roll
hlt
add
jne
in
mov
push
jnp
mov
xlat
popl
jle
xchg
push
sbb
and
fsubl
das
fwait
cli
inc
adc
mov
jb
and
les
mov
dec
stos
jno
sbbb
xchg
push
stos
push
sub
in
in
sub
xor
cld
mov
rclb
ja
push
mov
pop
sbb
jnp
pop
jecxz
add
fisttps
adc
mov
bound
mov
lock
lods
aam
mov
fwait
dec
stc
fstpl
in
in
mov
push
pop
movsl
out
dec
fdivrl
mov
sbb
fisubrl
loope
jne
loopne
jp
lods
inc
sti
xchg
in
mov
aad
ds
repz
dec
or
sti
int3
fs
adc
jns
cmp
repnz
ret
mov
into
ret
xchg
dec
dec
shll
int3
aas
mov
xchg
rol
fidivrl
pop
sub
stos
adc
sbb
lock
mov
xchg
xor
push
inc
outsb
in
cld
mov
push
mov
cmpsl
repnz
jnp
push
lahf
push
jbe
jmp
pop
inc
jb
dec
xlat
icebp
notb
in
mov
lea
push
and
mov
ljmp
arpl
xor
pop
shlb
inc
add
mov
pop
mov
jl
jnp
daa
mov
mov
sbb
and
add
adc
imul
jg
ja
xor
adc
shrl
cld
cmp
xchg
xchg
pop
jns
out
jno
int
add
in
dec
inc
bound
xor
cwtl
adc
add
je
jb
test
out
and
popa
sbb
daa
in
cmp
cs
push
neg
loope
jecxz
scas
dec
or
dec
aas
scas
pop
or
iret
or
cmp
or
mov
mov
mov
adc
loopne
repnz
mov
into
mov
dec
clc
lds
fstl
inc
loopne
xchg
leave
mov
push
mov
add
mov
adc
xchg
mov
insl
dec
jne
test
and
str
pop
jns
out
push
ss
mov
or
or
popa
jo
mov
inc
out
lea
fsin
call
add
mov
pop
jecxz
ret
flds
popf
jne
cmpsb
xchg
ja
sub
jl
rcl
jp
pavgb
cmp
sub
inc
mov
repnz
cmp
push
fdivr
gs
cmp
in
cmp
xor
out
xchg
in
cwtl
mov
sub
add
das
mov
and
push
cs
mov
xor
mov
out
pop
adc
lahf
push
jnp
adc
stos
push
loope
pusha
mov
pop
xor
sub
mov
pushf
or
sub
mov
cmc
xlat
in
push
mov
aad
lahf
out
arpl
std
enter
sub
insb
or
leave
fldcw
sbb
pop
hlt
in
test
cmp
stos
insb
lods
push
jns
sub
dec
ljmp
jo
and
orl
mov
roll
pop
mov
icebp
or
mov
sub
mov
mov
fidivl
lret
cmp
push
xchg
xor
pop
push
daa
pop
stos
movsb
data16
jl
mov
push
fadd
sahf
mov
dec
jmp
jl
stc
mov
ljmp
mov
cmp
adc
inc
ficompl
fwait
aaa
rcll
sub
mov
adc
or
notl
scas
test
jno
lcall
in
add
jge
or
je
pop
pushf
mov
jae
repnz
mov
adc
xchg
or
shr
mov
aam
cmp
pusha
mov
sbb
jnp
les
xchg
in
out
xchg
xor
call
add
outsb
inc
xorb
push
add
add
test
out
jbe
fisttps
loop
fidivs
lahf
xor
std
pop
leave
add
dec
sub
sarb
fs
mov
pop
in
clc
insb
popf
or
cmp
out
or
xchg
test
push
ss
sahf
or
mov
cmp
leave
dec
lds
imul
xchg
xchg
out
jo
and
xchg
rcll
popf
rolb
mov
and
and
cmp
popf
lock
in
sti
sub
shlb
mov
cltd
out
in
idivl
xchg
inc
jecxz
adc
mov
add
fwait
daa
aas
pmulhuw
aad
mov
lret
mov
jecxz
dec
mov
cmpsl
pop
fadd
jg
in
cmp
jle
filds
mov
cli
out
inc
cmp
xchg
aam
jne
xor
rolb
ret
sub
adc
stos
imull
add
lock
testl
call
fimuls
jns
jmp
sbb
ljmp
stos
lea
outsl
and
in
push
jne
pusha
ds
sub
fwait
cmp
mov
adc
es
xor
fwait
pop
sbb
insl
xchg
je
repnz
pop
dec
inc
pop
add
adc
push
repz
and
sbb
fs
gs
rorl
stc
xchg
test
lahf
xchg
imul
pop
in
lea
call
pop
xchg
sbb
push
insb
mov
sti
or
call
sbb
lods
inc
or
clc
jo
xchg
pusha
es
ja
mov
jmp
in
mov
add
pop
sub
addr16
jns
inc
add
sbb
pop
insl
lret
inc
testb
cmp
inc
shlb
and
inc
or
or
sbb
cwtl
inc
pop
mov
mov
int
fs
and
inc
jp
test
lods
sbb
mov
es
scas
sbb
dec
ss
rcll
cmpsl
cmp
push
frstor
inc
or
iret
lret
mov
outsl
movsb
xchg
and
lods
aas
sbb
xor
je
pop
pop
cmpsb
jae
fdiv
enter
mov
dec
mov
out
insb
push
cmp
sub
mov
mov
adc
mov
les
fsts
push
sbb
in
fcmove
add
sub
pop
cltd
mov
popa
aad
fcoms
sbb
mov
lods
ss
ds
mov
xorb
mov
and
push
adc
adc
scas
inc
add
jge
loope
cmc
xchg
call
xchg
ret
popf
es
icebp
fucomip
add
jbe
out
popf
stos
cli
jmp
cmp
mov
adc
add
dec
leave
xor
mov
arpl
int
jge
in
or
xchg
insl
mov
hlt
and
xlat
outsb
popa
mov
and
sub
mov
lea
cmc
data16
cli
ss
sbb
mov
cmp
jns
mov
cmpl
dec
das
in
rorl
mov
aad
pcmpeqd
add
outsb
int3
fisttpl
loop
cltd
lret
insb
inc
mov
adc
mov
cmpsl
xchg
cmp
fdivrl
clc
mov
push
testb
ret
fs
jae
push
arpl
jmp
rcrb
fucomp
pop
rorb
xor
pop
push
pop
xchg
push
movsb
jns
arpl
cmp
out
ret
sbb
dec
call
sub
xor
mov
sub
mov
mov
adc
js
xchg
mov
push
cld
xchg
pop
std
aad
repz
data16
in
int
std
stos
pop
dec
mov
sub
sub
mov
push
cmpsb
mov
je
stc
mov
lods
inc
pop
test
inc
xchg
leave
jmp
cmpsl
lods
dec
mov
into
clc
sbbb
scas
into
in
sahf
mov
mov
sbb
or
mov
push
arpl
ds
es
loope
dec
cli
mov
stc
fwait
outsl
push
xor
or
out
jge
sbb
sub
outsb
das
xchg
lahf
fstps
inc
insb
popfw
nop
jne
into
or
popf
and
sub
js
mulb
popf
or
out
sbb
mov
repnz
sbb
jno
scas
ret
jmp
push
cmp
add
push
test
stc
ret
fcomip
mov
sarb
insl
pop
gs
fs
xor
shr
ljmp
in
gs
cmp
divl
ret
jg
stos
pop
inc
repnz
cmp
xchg
shlb
add
dec
mov
cmpsb
nop
push
ljmp
push
inc
push
repz
push
decl
daa
jmp
call
dec
shr
dec
pop
inc
jl
jmp
stos
nop
pop
popa
outsb
inc
or
cs
test
mov
cltd
mov
mov
je
andl
inc
lea
cmpsl
iret
imul
mov
push
inc
hlt
pushf
push
sbb
dec
cmp
dec
dec
mov
mov
test
imul
mov
xor
sbb
sti
setle
sar
inc
ret
mov
aaa
xchg
pop
call
fwait
push
xlat
lret
ljmp
cmp
jne
out
inc
shlb
xchg
and
dec
mov
push
test
testl
int3
lea
pop
mov
das
push
mov
xor
sub
push
push
jle
je
bound
mov
outsb
lahf
add
enter
movsb
loop
mov
int3
movsb
aaa
pop
loopne
lea
add
imul
ds
nop
mov
push
outsb
sbb
lret
sbb
pop
and
dec
inc
add
fadds
icebp
int
sub
mov
in
jo
lds
sahf
or
mov
or
es
in
pushf
adc
sbb
sub
pop
mov
add
out
jmp
pop
jnp
sti
jmp
lods
add
fdivl
test
pop
push
iret
into
popw
xor
dec
mov
or
mov
insl
in
lods
cmp
les
lcall
inc
fcoml
aaa
push
je
fldt
lea
scas
sbb
cmpsl
push
mov
pop
frstor
enter
mov
or
pop
inc
sbb
jns
jle
xlat
and
sahf
roll
xor
cmp
stos
bound
repnz
pusha
xor
jne
ret
jb
xchg
jecxz
xor
arpl
out
cmp
in
icebp
xor
repnz
xor
adcb
aam
es
cmp
pop
push
xor
mov
mov
xchg
ja
xor
mov
mov
mov
in
into
movsb
hlt
adc
es
add
mov
jp
outsb
movsb
rcrb
addr16
mov
adc
mov
repnz
stc
call
jp
jmp
mov
add
in
in
ret
xlat
dec
stos
out
js
stos
insb
mov
data16
rol
cmovne
push
jae
roll
lock
jle
cmpsl
out
arpl
dec
das
or
push
mov
scas
dec
and
pop
mov
addr16
and
mov
mov
mov
sub
adc
lahf
cs
dec
pop
movsb
int3
pusha
test
aaa
icebp
out
mov
mov
xor
outsb
or
nop
es
int3
adc
int
bound
in
mov
lret
pop
daa
lret
push
xor
cmp
movsb
adc
mov
les
test
scas
cmp
push
stos
daa
push
pop
inc
mov
movsb
nop
mulb
lret
ja
mov
cmpsb
sub
aas
stc
jo
outsl
push
repnz
insb
mov
and
es
jnp
cmp
insl
pusha
jl
icebp
cmp
jmp
repnz
enter
scas
xor
into
xchg
movsb
add
ljmp
jp
dec
push
push
sar
inc
cmpb
mov
push
stos
xchg
nop
icebp
hlt
icebp
push
add
pushl
cmpl
insl
pop
add
inc
push
push
and
fstpl
movsl
jns
mov
jbe
mov
test
adc
cmp
mov
inc
sub
dec
ljmp
cltd
leave
jae
aas
pop
inc
push
pusha
xchg
cmp
mov
push
cmp
inc
pop
rolb
jl
popl
cmp
mov
repnz
int3
test
xor
out
je
push
fisubl
dec
adc
loope
js
jl
movsb
or
push
and
enter
xor
outsl
divb
bound
notl
lret
and
hlt
xor
lock
mov
or
test
xchg
lods
ds
sti
jno,pn
inc
test
cmp
cmpl
dec
movsb
jg
jno
jp
sbb
mov
ret
push
in
imul
insb
mov
add
test
inc
popf
lock
call
xchg
jle
mov
fdiv
fcom
movsl
or
cli
mov
mov
or
mov
cwtl
xor
in
lahf
scas
loopne
jns
xchg
movsl
adc
test
dec
lcall
inc
clc
xchg
aaa
leave
inc
xchg
cmp
clc
or
cmp
call
in
sahf
add
cmp
fwait
int
rcr
inc
mov
or
cmp
sbb
sub
sti
and
std
mov
sarb
scas
lods
mov
icebp
mov
push
addb
and
sbb
xor
cmpsb
out
stc
mov
mov
imul
mov
or
adc
sub
add
sub
out
adc
fldcw
xchg
dec
add
arpl
movsb
pop
pop
jns
inc
sbbl
sub
and
outsl
loope
xchg
fisubrs
mov
leave
mov
orl
aad
and
mov
leave
negb
fidivs
inc
mov
push
and
ret
xchg
inc
mov
je
inc
jmp
sub
iret
or
nop
jp
cmpsb
outsl
test
push
js
push
cltd
sub
sub
lds
pop
pop
adc
or
rcrb
pop
inc
ljmp
shl
jmp
lods
cmp
push
pop
sar
jp
and
jnp
xor
xchg
dec
inc
lret
sub
and
aaa
add
sub
gs
push
sbb
filds
sub
and
sbb
mov
nop
jge
in
cmp
enter
cmp
sbb
cmp
sbb
mov
lret
jmp
or
push
xchg
jg
rolb
pop
bound
xor
leave
aaa
lret
insl
test
enter
xchg
iret
repz
jno
push
cmp
add
push
jne
ss
mov
inc
pop
lahf
hlt
jp
inc
data16
cmp
test
int
dec
lcall
imul
stos
inc
shrb
sbb
and
cltd
jl
into
or
into
add
mov
mov
test
xor
pop
mov
push
icebp
cmpsl
cmp
mov
lret
sub
shl
js
cld
cmp
lods
stos
rorl
scas
cmpb
fdivs
adc
push
jnp
xchg
jle
mov
int3
jno
loope
std
dec
cmc
shrb
sub
ss
xor
dec
cwtl
sub
add
cmp
cmp
ljmp
jmp
inc
ljmp
dec
fucomip
mov
jbe
pusha
mov
jmp
push
xchg
fsubrs
sbb
icebp
xchg
and
jmp
pop
pop
clc
fwait
pop
xchg
clc
xchg
or
xchg
sbb
pop
fidivrs
loop
xchg
jecxz
lahf
lods
xor
xchg
cmp
leave
repnz
imul
pop
in
push
sub
dec
jo
push
pop
pop
lds
cmp
mov
pop
dec
leave
jp
jmp
xor
outsl
inc
push
aad
cwtl
mov
mov
and
std
pop
sarb
daa
jnp
aas
or
pop
cmpsb
cwtl
loop
or
add
cwtl
dec
jne
and
cmc
loopne
mov
iret
aam
mov
adc
xchg
push
aam
lea
fisttpll
jns
rcr
and
js
imul
negl
and
or
call
push
mov
sub
mov
out
lods
xor
lock
xor
loope
nop
test
hlt
lcall
dec
jmp
mov
lods
pop
movsb
and
stos
or
cli
cmp
mov
dec
aam
jl
ret
inc
mov
pushf
or
fcoms
nop
jle
jecxz
jne
test
jg
cmp
adc
movsb
jle
jmp
lea
cmp
arpl
cltd
aad
inc
shll
mov
outsb
out
mov
pusha
icebp
cmc
cmpsb
clc
xor
dec
mov
lcall
fcomps
aad
dec
adc
push
mov
xchg
cltd
mov
push
sbb
idivl
inc
dec
aaa
les
sbb
addr16
out
jae
bound
mov
movsl
loop
push
mov
cmp
cmp
ja
cmp
inc
push
test
xchg
jae
loop
push
pop
push
jae
lahf
mov
add
aad
and
lods
clc
add
bound
xor
mov
xor
mov
xchg
and
in
fwait
cmp
or
or
push
sub
mov
xchg
scas
es
lret
sti
xchg
fsubs
sbb
inc
lds
mov
outsl
mov
dec
das
or
sahf
inc
xor
arpl
jae
stc
popa
jb
dec
mov
out
xchg
gs
cmc
pop
mov
and
cmp
mov
or
js
or
push
inc
sahf
fimuls
repz
cmp
cmc
ja
xor
mov
rolb
lea
subb
sbb
dec
rolb
ljmp
sbb
xchg
mov
fiadds
mov
pop
test
cmp
ret
hlt
dec
sub
ffreep
jp
dec
sub
cltd
xlat
stc
adc
and
jne
xchg
icebp
push
stos
cmpsb
mov
sbb
push
pop
cld
sbb
jns
push
mov
mulb
out
or
lcall
js
or
out
testb
add
ja
push
push
ljmp
or
or
sti
loop
push
jno
cmc
hlt
lret
movsl
mov
dec
leave
ret
ss
cmp
sbb
add
xchg
jmp
xlat
cmp
push
xor
sub
inc
test
in
mov
sarb
mov
cmpsb
mov
mov
mov
ficoms
jecxz
pop
rorl
xor
outsl
push
and
xor
push
int
cs
pop
inc
jge
xor
fdiv
sub
jle
mov
sub
cmp
into
lods
adc
repz
insl
iret
inc
xlat
mul
jl
rcr
ds
jge
into
push
enter
out
jmp
in
es
das
ret
or
popf
imul
and
mov
icebp
scas
pop
andl
pextrw
daa
jle
test
dec
pop
lcall
lahf
repz
test
mov
fcomi
das
loope
roll
dec
adc
mov
testb
pop
cmp
cmpsl
scas
sub
xchg
sbb
cmp
mov
inc
sbb
lods
test
sbb
jno
imul
mov
test
add
ret
push
sahf
cmp
sbbb
sub
or
and
lock
mov
rol
lret
gs
dec
imul
add
popf
daa
fnstcw
clc
xchg
dec
or
sahf
adc
or
insb
mov
bound
icebp
adc
dec
inc
pop
adc
dec
xchg
sub
out
lods
mov
or
pop
dec
sti
movsb
cltd
xchg
inc
pop
insl
movsl
hlt
jae
cmp
clc
pushf
into
iret
imul
cmpsl
out
rclb
xlat
popa
push
pop
aas
push
push
dec
scas
cwtl
dec
or
call
aam
dec
dec
cmp
mov
jae
lea
stc
js
lahf
nop
add
fimull
into
out
and
xorb
jle
test
xchg
arpl
subb
shll
clc
fldl
jl
sub
ret
outsl
pop
int
xchg
loope
mov
push
movsl
jp
xchg
sbbb
adc
push
stos
std
mov
pusha
test
xchg
dec
and
cmc
mov
jb
mov
aad
outsl
cmp
ror
jae
sbb
cmpsl
push
loope
or
js
mov
jg
cmovs
inc
ds
test
dec
fmull
xchg
cwtl
jbe
ljmp
fwait
outsl
repz
cs
dec
jo
nop
mov
out
dec
dec
sub
adcl
cmpsl
inc
adc
flds
mov
xchg
xchg
mov
and
dec
push
stos
inc
repz
insb
ds
stc
lea
sub
xor
sub
mov
push
test
fldt
bound
subb
in
cmc
icebp
dec
xor
inc
movsb
xchg
xchg
adc
sbb
fs
daa
xchg
sbb
xor
mov
dec
cmp
mov
fistpl
xor
pop
jl
sbb
jae
push
daa
cmp
loopne
je
roll
packuswb
cmc
push
imull
lock
and
arpl
xor
cmc
push
mov
pop
shrb
and
movsl
and
jbe
xchg
int3
pop
or
mov
aas
cmc
jp
decb
cwtl
inc
mov
ljmp
ja
pop
xchg
daa
in
xchg
mov
jbe
add
and
jo
lret
je
movsb
mov
ss
cmp
loopne,pt
jmp
clc
scas
repz
pop
adc
pop
int3
ss
inc
mov
cmp
jae
or
cwtl
mov
fstp
mov
dec
jmp
jecxz
pushf
ljmp
sbb
addr16
fdivs
adc
sub
cmpsl
gs
adc
xchg
ss
lea
je
or
inc
ss
mov
xor
and
ljmp
sub
in
dec
push
shr
imul
jns
cs
ja
movsb
inc
push
repz
cltd
pop
pop
or
fs
inc
cmpsb
xchg
imull
xor
in
lods
mov
popf
xchg
cmpsl
mov
sbbb
loop
sbb
dec
addr16
and
gs
popa
aas
test
inc
imul
adc
cmpsl
xchg
insb
or
or
pop
das
sub
fnstsw
stc
pop
daa
iret
lahf
test
add
and
orb
shl
xor
sbb
push
push
imul
stos
loope
stos
xor
add
test
mov
fwait
stos
pop
push
push
push
or
cwtl
aas
sahf
push
dec
sub
or
lcall
lcall
push
fs
mov
mov
sub
sar
inc
xor
sbb
push
xchg
xchg
lds
int3
mov
movsl
or
adc
mov
jmp
int
or
sbb
mov
shl
cmp
cmpsl
mov
sub
arpl
pop
pop
and
mov
int
mov
cmp
lahf
sar
sbb
mov
lret
pop
xchg
adc
ret
test
sbbb
inc
movsb
stos
jbe
jle
dec
pusha
int3
sbb
out
sub
scas
mov
push
dec
insl
mov
lahf
pop
jmp
fwait
pop
aad
and
sub
call
js
mov
sbb
iret
pop
or
xor
in
xchg
lods
dec
mov
fldcw
mov
ja
fnstcw
inc
das
data16
movsl
rcl
clc
in
jbe
ret
lret
pop
pop
xchg
subb
jle
fs
loope
adc
lret
add
call
cmpb
adc
mov
daa
dec
cmp
adc
repnz
jg
jp
daa
mov
in
out
push
mov
cmp
mov
popa
push
testb
dec
pop
pop
std
cmpsb
imul
dec
dec
add
adc
rcrb
add
rcrb
pop
imul
lcall
or
dec
sti
dec
jmp
mov
dec
cmp
xchg
adcb
shll
cmpsl
arpl
push
pop
pop
cmpsl
scas
add
ret
stc
clc
mov
mov
out
mov
dec
les
push
xor
cltd
rcrb
pop
lods
mov
rorl
lds
or
xor
sbbl
cmp
lods
push
push
lahf
fisttps
ss
sbb
clc
pop
outsw
adc
clc
add
push
inc
pop
inc
and
pop
repnz
mov
pop
nop
add
ja
push
dec
xchg
mulb
sub
mov
pop
aad
xlat
pop
inc
sub
add
pop
jae
fwait
dec
adc
dec
pusha
stos
enter
pop
xlat
mov
sbb
mov
sahf
jbe
outsl
adcl
je
add
fcmovnb
mov
mov
js
je
js
dec
icebp
pop
out
mov
stos
mov
add
or
ret
ret
push
in
in
push
add
or
push
in
addb
mov
push
sbb
enter
xchg
inc
or
xor
xor
jp
add
aas
js
test
popa
fst
mov
aas
inc
jmp
test
sbb
pop
inc
sarb
cmc
sahf
and
cmp
hlt
rorl
xchg
push
out
xchg
inc
dec
repnz
pop
ljmp
int
test
enter
push
imul
test
pop
sbb
test
ss
jp
add
cli
xchg
enter
mov
push
pop
leave
test
jge
xor
out
xchg
repnz
stos
sub
scas
lahf
dec
add
pop
lret
in
cmp
fs
pop
leave
lea
mov
push
add
push
fldt
stos
mov
leave
dec
mov
cltd
out
data16
push
pop
jne
inc
jmp
movsl
inc
ds
leave
scas
inc
push
jne
mov
shrb
cmp
adc
add
repnz
lods
mov
pop
adc
jo
mov
cmpsb
sub
mov
xchg
lahf
imul
push
sbb
pop
sbb
pushf
je
loop
fwait
addr16
inc
cli
jno
shrb
scas
std
je
sar
std
inc
out
xchg
dec
cmc
popa
sub
xchg
and
cmp
push
and
mov
outsb
ret
sti
pop
sbb
jge
scas
sub
jae
mov
bound
imul
push
xchg
loopne
aas
xchg
cmp
lss
stc
sbb
and
xlat
or
out
jmp
xchg
mov
pop
scas
nop
dec
test
test
out
jae
xchg
cmp
jne
xor
mov
or
jbe
nop
vaddsubpd
mov
mov
dec
push
mov
cmc
test
fidivl
cld
push
mov
rolb
sub
adc
mov
repnz
push
xchg
cmp
lea
mov
pop
inc
pop
std
sbb
cmpsb
std
jl
lret
insl
lahf
add
pop
inc
push
ds
cmpsb
rcl
dec
in
mov
in
rol
dec
push
icebp
ss
push
mov
add
pop
mov
mov
mov
xlat
mov
xchg
add
inc
mov
shrb
add
cld
fists
inc
repz
push
je
adc
je
lea
mov
hlt
jno
jp
mov
sub
clc
bound
aam
loope
std
push
lahf
aam
mov
mov
mov
or
pushf
mov
rorb
mov
xor
stos
ficompl
push
lahf
jmp
mov
fdivrl
fwait
jbe
dec
cltd
mov
xorl
movl
hlt
int3
in
xor
js
cmpl
in
inc
add
inc
popf
jnp
stos
adc
stos
push
cwtl
test
dec
test
mov
inc
test
ret
push
outsl
mov
push
rcrb
fwait
pop
fucomip
cmp
repz
mov
movhps
push
dec
bound
mov
inc
pop
pop
icebp
push
and
inc
jp
inc
scas
pop
or
dec
arpl
outsb
arpl
adc
mov
int
sub
fdivrs
repz
jb
push
test
ret
jne
in
arpl
fistps
imul
cwtl
lahf
lea
pshufw
xor
lcall
mov
sbb
adc
sub
int
sbb
mov
imul
add
mov
repnz
xor
fmul
lds
inc
insl
movsl
aam
mov
pop
or
sub
mov
mov
pop
cmp
popa
rorb
into
sub
xchg
push
inc
or
pop
int3
cmp
scas
insb
cmpsl
jp
cmp
mov
adc
leave
mov
popa
ret
in
nop
or
sar
cmpsl
push
ret
stos
pop
movsb
inc
sbbb
push
fs
je
outsb
mov
or
mov
add
jp
iret
in
mov
fbstp
add
test
lods
push
lcall
daa
lods
mov
push
lea
loopne
cmpsl
push
fisubl
push
lret
sbb
test
mov
mov
sub
out
pop
sub
cwtl
inc
jne
movsl
pop
pop
add
inc
movl
lock
hlt
cmpsl
jle
mov
cmp
fcomps
or
push
jle
push
xchg
sbb
xor
sti
mov
push
out
pop
mov
enter
jb
enter
test
add
add
jmp
adc
inc
negl
jb
dec
movsl
and
insl
jbe
dec
adc
cmp
imul
jecxz
mov
mov
scas
sbb
aad
lret
cltd
dec
xor
iret
mov
cld
sub
in
jo
cltd
loop,pt
shrl
lds
shrb
cmp
cmp
fisttps
lcall
dec
aam
lods
sub
daa
das
sbb
sub
sbb
subl
test
xchg
sub
mov
mov
rorb
fistpl
mov
jne
push
xchg
jge
mov
sub
in
rclb
imul
jge
loope
cmc
imul
mov
jne
mov
stos
pusha
lds
pop
mov
inc
inc
mov
push
dec
inc
sbb
jo
jne
cmc
xor
xor
jp,pt
push
insl
scas
mov
pop
aas
pop
mov
cmp
int
pop
mov
jl
mov
add
rcl
dec
sarb
mov
and
scas
mov
ret
cmp
and
rcrl
or
daa
sti
and
sbb
imul
xchg
mov
xor
dec
movsb
out
and
data16
cmpl
jno
mov
push
cmp
or
push
push
stc
nop
mov
cmp
int3
lds
xorl
xchg
push
jge
adc
imul
cmpsb
iret
adc
dec
inc
testb
inc
pop
xchg
test
push
jge
int3
dec
cmp
cmp
pop
aas
mov
popf
rcrl
mov
xor
inc
loop
into
rcrb
outsb
loope
xchg
inc
neg
xlat
adc
and
push
xor
or
push
pop
lods
xlat
arpl
jae
rclb
sbb
sti
adc
sub
outsl
sbb
mov
leave
mov
jnp
sbb
out
lock
cltd
cmpsl
cmp
xor
mov
sbb
loopne
and
nop
out
inc
lret
es
cmp
loop
inc
insb
jbe
jecxz
outsb
mov
stc
incl
pushf
push
out
in
call
outsb
stos
cmp
test
adc
xchg
ss
inc
dec
sarl
adc
push
sbb
shrl
icebp
dec
mov
pushf
scas
xlat
out
mov
insb
sub
dec
cld
jle
imul
pushf
mov
lods
and
sub
fwait
cwtl
shrl
out
scas
fisttpll
push
and
xor
and
stc
mov
in
mov
lds
jg
out
add
lock
jge
fcmovu
pop
imul
add
push
andl
xchg
push
incb
push
pop
adc
jmp
es
test
mov
insb
mov
lret
sub
add
push
or
ljmp
enter
fldl
cli
add
das
mov
pop
push
into
dec
stos
xor
or
sub
insb
cmpsl
xchg
std
add
jnp
sbb
push
leave
ret
add
cmp
fstpl
cltd
mov
or
cmp
shrb
enter
insb
fsts
jo
lock
in
enter
inc
daa
mov
push
scas
addr16
mov
popa
mov
xchg
adc
int3
jmp
ljmp
pop
inc
add
add
out
push
dec
shrb
mov
dec
mov
gs
dec
push
add
push
inc
outsb
pop
mov
movsl
mov
adc
adc
mov
test
jmp
xchg
xchg
adc
lock
bound
mov
movsb
xchg
pop
sbb
cmp
and
imul
call
stc
icebp
xor
test
popf
push
sahf
aad
roll
xlat
lods
jno
orb
jmp
jg
sbb
mov
dec
push
pop
mov
xchg
xchg
out
pop
mov
and
add
push
notb
nop
cli
pop
adc
sahf
xchg
cmp
ret
push
push
adc
leave
int3
mov
loop
and
push
mov
sbb
inc
add
inc
add
inc
add
adc
add
inc
add
mov
inc
add
add
or
pushf
add
sbb
movsl
or
movsb
fucomp
pusha
movntq
out
iret
and
xchg
add
mov
hlt
inc
insl
or
je
rolb
imul
xchg
mov
mov
dec
mov
ss
xchg
inc
aas
data16
fs
icebp
add
adc
xlat
pop
sub
testb
xchg
pusha
push
in
fnstcw
adcl
scas
mov
sub
jae
mov
lcall
fwait
cld
xchg
hlt
add
push
aad
lahf
test
clc
sbb
push
fstpl
and
mov
lds
mov
and
and
in
xchg
dec
cmpsl
fmul
inc
fadd
mov
push
imul
pop
dec
dec
sti
mov
and
inc
cmp
sbb
inc
pop
imulb
mov
sbb
dec
lock
pop
mov
lahf
or
cwtl
mov
cli
mov
and
fstp
stc
push
in
lret
xor
ds
cmp
in
adc
mov
imul
cli
aad
jge
testb
ja
xor
mov
dec
xchg
cmp
adc
jecxz
lret
arpl
add
cli
das
adc
jne
bnd
cmp
mov
and
lea
lahf
xchg
lahf
and
imul
addr16
or
mov
adcl
mov
in
stc
pusha
mov
pop
cmpsl
scas
sbb
sub
js
sbb
test
mov
mov
sub
mov
pop
push
push
add
les
je
pop
push
inc
pop
int3
int3
mov
push
daa
lea
dec
xlat
sbb
xor
cmp
cmc
sbb
mov
sbb
stos
cwtl
dec
mov
mov
dec
mov
dec
pop
push
push
outsl
rorl
push
pop
cmp
and
outsb
fwait
mov
push
popf
xchg
pop
je
inc
aam
es
dec
mov
pop
movsl
cmc
xchg
andl
adc
xchg
sub
xor
mov
xchg
pop
ror
push
leave
test
dec
jae
stos
ss
xor
mov
ret
add
jmp
jmp
fwait
or
xorl
gs
test
movsb
mov
add
enter
cmp
fwait
jl
aad
push
mov
bound
decl
cmp
lret
inc
jmp
mov
fdivrp
or
test
mov
xor
mov
mov
andl
fsts
int3
mov
fsubs
or
scas
xor
xchg
jp
imull
lods
out
jbe
test
das
fcmovnu
outsl
scas
or
jmp
inc
pop
xchg
mov
add
jbe
xchg
push
andl
fwait
shlb
lret
into
push
clc
pop
sub
mov
lahf
add
in
clc
lret
push
sbb
jno
push
fcomps
xor
cli
movsb
les
mov
sahf
mov
mov
mov
sub
jle
imul
call
arpl
imul
pop
mov
mov
repz
mov
fmuls
jg
outsb
in
adc
insb
pop
imul
outsb
iret
inc
jns
sbb
ret
aad
pop
push
or
inc
pop
sarb
jmp
ja
jns
dec
jb
call
call
and
mov
lea
mov
leave
pop
or
mov
int3
inc
sbb
adc
negb
les
mov
jmp
push
test
outsl
ret
pop
fs
dec
scas
sub
and
pusha
jecxz
xchg
aam
aad
mov
stos
push
adc
lds
jns
aaa
mov
pusha
repz
xor
sti
and
and
das
jg
sbb
xor
fidivrl
sti
mov
xchg
pop
inc
in
mov
out
nop
cmp
movsb
push
cld
sahf
push
je
outsb
jl
xor
repnz
xchg
adc
mov
inc
fistpl
outsl
fwait
push
push
je
sub
add
fwait
xchg
mov
sub
movsl
pop
cmc
ss
lret
pop
loopne
fldcw
cmpsl
and
cmp
addl
imul
test
dec
xchg
dec
jge
repz
xor
mov
dec
push
add
imul
ltr
or
movsl
and
mov
icebp
lods
call
lcall
dec
mov
add
and
cmp
mov
fs
mov
repz
cmp
mov
es
test
loop
movsl
xor
das
xor
clc
mov
dec
inc
mov
out
shlb
push
repz
xchg
int
movsl
cmp
pop
sbb
xchg
pop
push
jmp
push
clc
stos
pop
fadds
jnp
mov
xchg
cmp
mov
pop
outsb
js
mov
inc
xchg
sbb
dec
adc
das
and
aad
lea
dec
and
movsb
shrb
mov
sbb
dec
bound
sbb
test
xor
daa
jg
jo
pop
sub
mov
nop
lcall
push
xchg
pop
inc
push
mov
ja
mov
dec
ja
lret
daa
sbb
mov
add
in
popa
mov
lret
xor
inc
int3
add
mov
incb
test
pop
push
adc
cmp
call
ficompl
jne
inc
scas
mov
out
cmp
sbb
insb
bound
cmovle
mov
stos
call
fdivr
stos
mov
mov
cmp
loope
hlt
xor
jp
je
movsb
xchg
jns
push
jns
enter
sub
insb
daa
lret
ja
addr16
ss
xor
xor
adcb
pop
js
mov
xor
hlt
lods
cmc
imul
cmp
dec
pop
pop
insb
inc
ret
imul
sbb
adc
xchg
icebp
pop
aam
rorl
addb
repnz
popa
push
andl
inc
pop
ljmp
xor
std
inc
mov
sbb
dec
dec
push
push
loopne
inc
xor
leave
aad
dec
js
fisttpl
or
push
loop
jnp
popf
and
xor
xchg
dec
repz
out
movsb
jle
outsb
cmpb
adcb
adc
jecxz
in
or
pop
lods
jl
push
imul
inc
lds
in
add
push
test
xchg
in
push
sub
xchg
jg
mov
loopne
cmp
cmp
xor
es
jl
xor
push
xchg
shll
xchg
sub
mov
mov
in
orb
sub
cli
fsts
sbb
imul
xchg
lret
push
jge
inc
in
cmpsl
push
xor
iret
enter
mov
jb
das
enter
loopne
sahf
mov
leave
inc
enter
jge
out
lret
cli
repz
cmp
or
mov
fwait
pop
stos
mov
aad
or
push
lea
add
mov
inc
jae
pop
mov
rcll
movsl
cmp
add
push
or
add
out
nop
outsb
aas
dec
mov
iret
dec
fists
cld
jo
and
jle
add
cmpsl
xrelease
xor
ja
mov
cs
insl
pop
xchg
or
ja
and
addr16
mov
pop
pop
jmp
lcall
push
cli
out
popa
sbb
jmp
ss
es
fsubrl
gs
cmp
notl
mov
dec
pop
inc
pop
rcrb
aam
cmpsl
dec
pushf
and
dec
push
ret
pop
sub
inc
push
stos
jne
aaa
jbe
test
movsb
orl
and
sbb
push
sub
in
mov
xor
and
subl
push
ficoml
add
pop
stos
lock
mov
or
cmpsl
jb
jbe
pop
fadds
fbld
in
in
in
pop
xor
stos
adc
mov
cmp
mov
cmp
mov
sahf
je
mov
xor
sbb
mov
call
xor
in
mov
push
shlb
adc
lods
push
mov
xchg
push
mov
jbe
jecxz
lret
inc
loope
sbb
cmc
lods
jl
test
mov
and
pop
sub
insb
aas
cld
sbb
in
mov
cmp
and
dec
jge
push
rcrl
jns
inc
or
je
push
dec
dec
pop
lret
sbb
cld
dec
adc
testb
sbb
xorl
rorb
push
stos
sbb
scas
call
mov
insl
stos
lea
pop
mov
push
inc
push
pop
mov
in
push
inc
lods
pop
sahf
push
mov
jl
clc
je
mov
jge
pop
pop
and
sbb
jge
push
nop
dec
push
test
sub
or
xchg
enter
shl
test
sarb
push
mov
mov
test
lds
cwtl
push
inc
xor
enter
pop
sub
dec
outsb
int3
cld
insb
mov
dec
push
dec
dec
inc
arpl
iret
mov
mov
adc
or
roll
lahf
test
int
ret
mov
mov
mov
or
xchg
fsub
inc
dec
int3
ret
lock
mov
or
mov
or
cmp
cld
dec
push
mov
out
mov
cs
loopne
and
mov
ljmp
push
cmp
addr16
inc
jnp
sti
pushf
jne
pop
bound
cmpsb
xor
jne
pusha
pushf
jnp
leave
nop
dec
push
jge
pop
mov
fwait
xchg
adc
cmp
addr16
mulb
mov
shlb
jbe
outsb
ds
push
adc
dec
sub
lock
mov
cmp
pusha
mov
imul
sub
pop
in
pop
xor
dec
or
push
jmp
imul
cs
rep
fstps
repnz
sub
int
int3
mov
shrb
xchg
xchg
outsl
lods
xchg
push
cmp
inc
pop
jo
arpl
dec
rcrb
push
aaa
int3
pusha
loopne
ss
push
add
or
cli
aam
insl
stos
jae
cmp
sbbb
mov
jns
pop
push
or
xchg
stos
cmp
dec
mov
cmc
jne
cld
dec
jmp
add
inc
mov
inc
push
or
repz
adcl
pusha
into
push
push
mov
jg
cwtl
xchg
mov
cmc
in
mov
xor
loope
mov
bound
adc
ret
mov
outsb
jne
sub
arpl
jns
add
jg
mov
pop
jnp
cmp
mov
pop
inc
xor
into
pop
push
or
pushf
and
pop
sub
jb
jle
or
adcb
fsubs
adc
out
mov
dec
sub
inc
push
fcompl
sbb
dec
mov
dec
aaa
jae
pop
cmp
mov
test
div
cltd
pop
and
aad
push
jl
orb
mov
xor
test
lret
jmp
xchg
insl
fisubrl
repnz
in
fisttpl
scas
adc
lret
call
and
push
cmpsb
test
jno
inc
cli
and
sahf
or
add
inc
push
sub
aad
cmp
sub
jo
orb
adcl
fld
mov
bound
inc
or
push
fwait
xor
outsb
push
pop
sbb
mov
nop
aad
jno
pushf
int3
xchg
xlat
in
sub
hlt
rol
push
push
scas
js
cmp
pop
xor
cmp
mov
fildll
dec
mov
jne
andb
sti
dec
mov
inc
push
movsl
and
cli
pop
inc
icebp
cmp
lahf
jmp
pop
call
add
mov
pop
cmpsb
repz
cs
rorb
mov
je
sub
cld
repz
inc
lods
cmp
js
push
movsl
sbb
xchg
cmp
ret
xor
or
stc
dec
lcall
enter
bnd
add
dec
mov
shrl
lret
mov
xchg
pop
add
mov
push
icebp
push
inc
aam
jno
lcall
jle
and
add
hlt
push
mov
scas
aas
out
push
aam
pop
jbe
fs
in
pop
or
aaa
jmp
mov
arpl
out
pop
in
sbb
loope
adc
pop
repz
or
sarl
jecxz
loopne
shr
dec
loope
out
jb
fwait
and
push
mov
fwait
sub
xor
int
cmp
jb
ja
mov
lret
jnp
dec
fsubrl
jnp
fdivs
mov
jmp
ror
stos
mov
hlt
imul
imul
push
inc
std
mov
pushw
push
std
xor
mov
jge
add
addr16
cmp
inc
push
jae
sbbb
aaa
ds
std
mov
aad
lret
mov
out
into
cmpl
test
push
xchg
jmp
mov
jp
outsb
xor
push
cltd
dec
rcll
mov
mov
data16
mov
sub
mov
mov
insb
push
pop
pop
std
dec
mov
cmc
lret
std
adc
std
xchg
mov
int3
test
mov
adc
jge
mov
lock
gs
jbe
int
xor
adc
jle
mov
lahf
lcall
pop
addb
dec
mov
pop
loop
lcall
daa
and
dec
push
xor
sbb
push
push
rcrl
out
scas
and
addr16
cmpb
pop
in
call
cltd
dec
inc
arpl
int3
lcall
push
iret
fdivs
dec
movsb
lock
int
mov
inc
adcl
xor
push
sbb
mov
mov
push
push
mov
xchg
pop
in
movsl
push
push
test
and
jmp
fadds
lcall
aam
ja
rclb
loop
js
mov
cmpsb
push
sbb
les
xchg
or
push
lahf
push
ret
cmp
adc
insb
ds
cmp
xchg
xchg
jnp
add
xor
fisubs
js
or
ds
sub
jecxz
daa
mov
cld
mov
and
cld
push
ss
std
test
cltd
fisubrs
mov
add
mov
jecxz
out
movsl
or
aaa
dec
inc
cmc
jp
mov
pop
jno
lahf
int3
out
call
add
in
xchg
data16
fsts
insl
sub
mov
loop
aad
mov
mul
scas
lods
pushf
stc
test
shl
stc
sub
jns
sub
dec
pop
jle
jp
xor
sbb
fsubp
rcll
cmpsb
movsl
out
sti
pop
sbb
js
scas
fld
add
or
les
in
cmp
add
scas
inc
xchg
movsl
push
add
fimull
mov
xor
jl
jne
cmp
test
insb
jp
or
es
mov
pusha
lret
test
mov
movsb
jb
shrl
push
lods
inc
dec
cmp
adc
outsb
fs
jmp
and
jo
sahf
push
ja
jg
add
jo
data16
fcmovnbe
adcb
xor
or
mov
sub
pushw
cmp
and
fwait
xchg
mov
xchg
and
pop
inc
push
xchg
mov
jo
test
and
outsl
out
cmpsb
mov
pop
mov
jo
mov
sub
les
cmp
jmp
fimuls
push
orl
int3
test
sub
pop
mov
mov
cmp
xor
sarb
addr16
test
test
adcl
dec
xlat
std
inc
ja
adc
aaa
je
or
inc
andl
dec
lods
neg
dec
mov
out
mov
add
push
insb
push
cmp
cs
xchg
jmp
cmp
inc
push
cmp
xchg
sub
retw
je
push
fistps
mov
inc
outsl
or
fldl
popf
fisttpl
xchg
fsts
xlat
mov
fdivrs
xchg
cmp
cmpb
sbb
loop
sub
repnz
sub
cmp
cld
and
push
mov
fnsave
xor
jbe
xor
sub
sarl
test
popf
rorb
stc
mov
push
jo
adc
sbb
sub
jl
or
fcomip
and
addr16
inc
mov
pop
stos
fwait
cmp
adc
and
and
mov
ds
ss
out
xchg
shl
lret
push
in
mov
pop
push
lods
push
loopne
movsb
in
xchg
push
sti
inc
dec
in
add
cmp
jne
sbb
stos
mov
adc
jl
lahf
out
movswl
in
sub
or
inc
jmp
xchg
jns
mov
cwtl
sub
dec
inc
popf
inc
or
mov
pop
roll
hlt
ja
inc
jp
mov
pop
sti
sub
lea
pop
bound
iret
es
lret
aam
packssdw
bnd
or
mov
cmp
test
call
push
out
bound
es
mov
les
sahf
or
lcall
jo
mov
adc
pusha
pop
inc
lock
out
sub
push
les
pop
test
lret
loope
xor
in
shl
in
push
xor
jo
adc
test
inc
cmp
lcall
rcr
or
out
cmpsb
cmpb
fisubl
jmp
pop
cmpsb
mov
aad
adc
jge
lcall
scas
xchg
lods
cwtl
fnsave
mov
mov
xchg
lock
fdiv
sub
or
dec
mov
cld
popa
pop
mov
ret
lahf
xchg
mov
in
popa
pop
outsl
scas
push
clc
imul
test
lea
xor
fdivrs
mov
add
sbb
scas
cmpsb
xchg
inc
jae
xor
or
movsl
and
test
cmp
adcl
or
push
add
cmp
pop
and
mov
push
out
add
in
jecxz
test
frstor
mov
mov
and
adc
sbb
dec
xlat
add
loope
sahf
mov
cmp
repnz
lret
sbb
xchg
mov
sub
jae
sti
mov
xlat
shlb
aad
call
fimuls
sbb
ja
mov
ds
push
ja
cmp
sbb
addr16
int3
sbb
lods
inc
loopne
popa
xchg
out
ss
cmc
inc
jne
jns
sbb
js
jb
inc
mov
and
lret
jo
loope
push
jle
stc
aas
add
pop
fucomip
daa
lret
jno
and
stc
xchg
lret
mov
jnp
into
or
nop
icebp
add
jge
lret
fstpl
or
jmp
aas
movsb
sarb
cmp
xor
xor
popf
inc
mov
jne
popl
or
xchg
addr16
test
sbb
shlb
dec
sbb
adc
xor
sti
cmpsl
mov
daa
mov
arpl
lcall
and
sub
or
mov
iret
cli
mov
jl
sbb
lret
stos
ret
decl
push
xor
daa
push
pop
inc
int
pop
add
inc
jecxz
push
and
dec
mov
aad
aaa
xchg
pop
ficoms
push
loopne
add
mov
or
adc
test
outsb
stc
mov
stos
daa
mov
cmpsl
lahf
mov
loopne
and
mov
cmc
push
mov
inc
dec
arpl
enter
pop
jb
movsb
rclb
cmp
adc
in
inc
mov
into
push
or
inc
mov
and
push
sti
and
repnz
push
mov
repnz
mov
push
jl
jecxz
mov
dec
mov
jo
in
lret
and
xchg
jb
add
push
in
insl
negl
sbb
mov
jecxz
mov
pop
divl
clc
add
in
add
mov
xor
mov
lcall
dec
xchg
dec
divl
inc
cmp
std
pop
fsubrs
arpl
mov
lock
mov
push
inc
lret
dec
cmc
lcall
jmp
lret
aam
orl
mov
cmp
dec
inc
jbe
xchg
xchg
das
jle
dec
or
push
fcmovb
mov
dec
icebp
dec
jns
pop
ljmp
mov
cld
jnp
push
movsb
add
mov
shll
sbb
imul
out
xor
stos
xor
xor
xchg
mov
xchg
xor
aam
data16
sub
jae
sbb
mov
cld
je
repnz
negb
lea
add
fsubrs
cmp
repz
pop
addl
xor
jo
inc
loope
inc
xchg
mov
out
xor
or
js
fcmovu
pushf
or
jb
data16
ja
and
ljmp
jmp
stos
stc
call
push
mov
push
cwtl
out
push
adc
sub
mov
es
stos
mov
jns
mov
pop
cmc
test
aad
push
push
pop
daa
mov
pop
inc
jle
lods
inc
fisubs
stc
cmp
pusha
call
mov
sub
mov
push
arpl
adc
stos
cmp
inc
pop
addr16
mov
mov
push
mov
imul
fdivrl
ljmp
pop
loopne
adc
inc
add
xchg
cmpl
es
dec
fists
sbb
insb
es
mov
repnz
rcrl
and
fstpl
push
or
push
sub
es
dec
pushf
insl
movsb
push
add
adc
shrb
mov
add
hlt
jmp
or
mov
cmp
movsb
nop
dec
fwait
ds
xchg
lahf
push
xchg
repnz
mov
dec
adc
outsb
cmp
gs
or
mov
push
add
sub
or
or
mov
fimull
jne
mov
test
rclb
mov
mov
cmpsl
mov
pop
enter
mov
test
adc
jnp
gs
nop
cmp
and
xchg
leave
imul
repnz
loopne
popa
mov
mov
aad
xor
mov
hlt
mov
jmp
insl
movsb
push
roll
mov
ss
push
xchg
scas
mulb
dec
loopne
stc
daa
cmpl
inc
mov
int
and
cld
in
inc
call
into
adc
mov
and
push
in
ljmp
xorl
lds
ret
sbb
xor
lcall
dec
stos
cmp
fs
mov
pop
inc
popa
mov
popf
xchg
add
jl
xchg
fmull
cli
lret
ja
cld
pop
sbbl
xchg
sub
daa
jecxz
dec
xor
lea
mov
xorb
or
loope
leave
popf
xor
jle
negl
mov
les
push
dec
fmulp
pop
out
js
jle
outsl
rcrl
xchg
outsb
std
pop
and
pop
xor
mov
dec
cmp
int
adc
ss
mov
movsb
les
arpl
xor
nop
push
mov
sete
insb
xor
mov
inc
push
xor
jmp
daa
bound
add
xchg
push
les
int3
repz
sbb
lods
pop
nop
dec
enter
jnp
push
out
cmp
push
out
mov
ret
cwtl
mov
pop
dec
mov
or
call
insb
mov
js
cmpsl
data16
cli
mov
jns
cltd
inc
cltd
cmp
popa
add
sub
movsl
lret
cwtl
andb
fnsave
cmp
jne
sbbl
cmp
cld
pop
out
sub
inc
mov
or
mov
daa
sbb
int
jmp
xor
xor
cmp
inc
mov
cmp
fucomp
nop
xchg
add
icebp
push
int3
dec
mov
les
cmp
mov
push
outsb
or
gs
aad
add
mov
inc
xchg
or
cmpsl
mov
idiv
push
add
and
dec
cmp
add
dec
push
cli
cld
xchg
pop
pavgb
jmp
pop
and
pop
dec
icebp
insb
or
pop
cli
jbe
mov
bound
int3
pop
xchg
imul
mov
dec
pop
sub
rorl
stc
sarl
mov
and
add
in
stc
jns
pop
negb
jge
pop
jae
arpl
inc
mov
repz
xchg
xchg
fists
shrb
sbbl
or
sbb
lock
mov
ret
loop
push
repnz
adc
imul
xor
les
out
aad
dec
and
hlt
mov
dec
inc
pop
push
fxam
lock
fsubs
mov
or
movsb
and
mov
andb
out
pop
sub
popa
dec
sub
loop
fmul
cmovno
fs
scas
int
mov
pushf
roll
or
out
jns
pop
test
cli
cmc
push
mov
cmp
sbb
outsl
pop
push
jno
ljmp
jp
loope
int3
push
xor
cld
pushf
sbb
mov
and
mov
enter
movsb
lods
arpl
adc
dec
cmp
jp
and
jbe
push
arpl
repnz
dec
add
mov
andl
or
xchg
push
cwtl
mov
sbb
and
xchg
pop
ror
cmp
out
inc
test
inc
add
and
loopne
sub
jne
pop
mov
dec
jne
adc
mov
cmpb
xor
fidivs
fldl
repz
xor
xchg
ljmp
add
stos
je
out
pop
adc
jg
push
popa
sub
repnz
push
jl
mov
daa
mov
sub
sub
stos
and
ret
or
and
sub
push
ficomps
sarl
inc
xor
insb
test
mov
pusha
jp
inc
orb
xlat
xchg
lret
mov
push
clc
dec
es
xchg
mov
cmp
sbb
lock
lock
test
dec
lock
push
cmp
clc
mov
mov
clc
dec
mov
xchg
mov
pop
dec
pop
inc
sti
andl
or
in
push
out
nop
pusha
lock
shll
stos
sar
xchg
je
divb
shlb
mov
sbb
push
mov
adc
les
pop
fcomps
daa
cs
call
mov
push
popa
sbb
lods
push
inc
fildl
mov
add
stos
sahf
mov
mov
pop
imul
xor
shlb
dec
jns
mov
pushf
mov
or
out
jecxz
jnp
and
sbb
in
xchg
clc
pop
mov
mov
or
xor
sbb
rolb
pop
lods
xlat
test
popf
cwtl
xchg
test
add
dec
pop
fimull
leave
aas
out
js
notb
xchg
shrl
xor
enter
iret
js
cmp
and
mov
inc
mov
adc
push
cmp
fstp
mov
mov
aad
cwtl
fcmovne
or
fisttpll
xlat
scas
insl
inc
lret
xor
or
and
xchg
cmova
xor
push
into
xchg
out
push
push
inc
dec
pop
out
add
fdivl
jno
cltd
fbld
popa
or
jne
add
and
rolb
ds
aaa
rcl
icebp
mov
scas
or
pushf
add
xor
jb
ret
mov
mov
loope
pop
fs
dec
dec
push
das
pop
iret
fwait
adc
xor
popf
sub
add
and
pop
gs
or
jg
mov
jle
mov
xor
jb
pop
push
repz
xchg
or
insl
jb
pop
adc
ja
test
lcall
repnz
xor
or
lea
adc
flds
xor
out
sbb
or
cmp
mov
in
gs
push
scas
and
bound
fsubrs
rcr
repnz
stos
xchg
lea
xchg
bound
push
xchg
push
sbb
dec
sbb
mov
mov
push
add
lret
sub
outsl
cmp
movsl
iret
xchg
lcall
flds
lcall
fucomi
add
lcall
mov
out
roll
push
mov
jnp
daa
mov
gs
or
fistpll
clc
and
or
imul
stc
push
jp
mov
jl
out
mov
or
dec
push
ds
sub
fdivl
xchg
and
xchg
add
jecxz
xlat
mov
push
cmpsl
cmp
ficoml
push
jle
aad
shlb
add
mov
jno
out
inc
cwtl
sbb
enter
xchg
pop
and
je
push
pushf
popf
lods
sbb
sbb
call
or
call
or
fxch
fisttpll
sti
outsl
aad
cmp
jae
adc
cmp
stos
sub
lock
mov
xor
inc
sbb
dec
or
cmc
pop
ret
sbb
insl
addb
int
sbb
sub
lcall
movsl
into
movb
sahf
nop
enter
push
mov
out
sarl
push
in
xchg
xor
loope
ds
sbb
and
repz
dec
mov
cmp
les
orl
mov
mov
les
outsl
cmp
xor
adc
sarl
dec
lahf
mov
decl
pop
xor
jnp
cmpsb
inc
dec
and
aaa
xchg
scas
js
addr16
sti
and
lds
sub
test
lahf
pop
adc
mov
fisttps
inc
pop
adc
mov
or
mov
jb
and
push
movsb
jbe
jne
xchg
rorw
pop
mov
insb
xor
into
and
iret
push
testb
int
cmp
sub
sub
jbe
add
cmpsb
movb
shrb
cmc
mov
rcrl
lock
cwtl
and
outsl
jl
push
and
call
dec
mov
inc
in
sbb
testl
rcll
fs
sbb
enter
mov
cmc
cmpsb
sub
mov
adc
xchg
jno
out
mov
andl
pushf
or
int3
ret
mov
popa
push
jbe
or
or
in
lods
mov
out
pop
mov
loop
lods
adc
mov
jns
mov
movsb
lock
push
mov
mov
lcall
cmp
inc
jno
xchg
mov
sbb
addr16
cmc
popa
jns
repnz
imul
js
xor
jge
mov
dec
mov
mov
and
inc
jnp
pop
scas
les
aad
fs
in
into
loope
add
call
ret
lahf
call
mov
insl
in
in
mov
cmp
inc
push
adc
out
cli
mov
jge
jns
and
dec
ret
push
xchg
push
in
sub
xchg
or
shrl
xor
sarl
lret
testl
add
mov
inc
std
cmp
cmp
mov
pop
adc
push
inc
cmpsb
daa
iret
fwait
cmp
inc
popa
mov
jno
or
sub
decl
stc
sbb
pop
push
pop
ret
jp
cltd
adcl
xor
in
mov
int
push
jecxz
test
push
mov
loope
fistpl
and
mov
jb
mov
call
xor
in
sahf
in
push
andl
xor
jmp
popl
nop
loop
dec
call
out
inc
cmpsl
pop
xchg
imul
add
out
loopne
test
jno
das
imul
rclb
scas
ret
lods
inc
aam
ljmp
and
lret
arpl
push
push
push
mov
jns
sub
push
int
pushf
dec
or
shl
imul
cmp
push
popf
mov
sbb
pop
add
fldcw
mov
lods
xlat
pop
loope
pusha
xor
in
sbb
or
shl
jge
je
push
popl
sub
cmp
stc
rorl
out
inc
sbb
sti
ror
pop
bound
cmp
add
jge
pop
in
jb
sub
inc
cmp
ss
into
mov
mov
jg
incb
movb
fisubrs
or
or
clc
jp
lahf
inc
daa
pop
dec
sbb
sub
adc
lds
insl
dec
sub
xchg
add
imul
pop
cmp
pop
js
mov
add
xchg
xchg
rcl
hlt
mov
imul
xchg
xor
push
pop
jmp
sbb
mov
insb
xor
leave
test
rolb
outsb
in
repnz
mov
inc
jne
xor
mov
push
jne
mov
es
jge
std
xchg
imul
test
xchg
or
sub
adc
popf
add
adc
in
ja
xchg
shl
xchg
sub
sbb
ficoml
push
push
cmovns
xchg
fcmovnb
mov
aam
push
jmp
xlat
iret
in
out
sahf
mov
cmpsb
fisttpl
icebp
test
enter
dec
xchg
mov
ljmp
push
in
imul
mov
adc
xchg
addr16
add
fcoml
lods
mov
add
mov
cmc
dec
je
sbb
jge
xchg
and
stos
push
insl
xchg
dec
sahf
mov
pop
dec
pop
or
cmc
sub
test
or
cmp
jle
sub
ror
pop
jb
xor
adc
lahf
mov
add
cmpb
movsl
imul
inc
dec
lea
mov
cmp
pop
xchg
xchg
add
in
out
cmpps
push
push
pop
push
cmc
sbb
cmp
and
jge
mov
std
inc
push
in
sbb
rcr
inc
mov
and
test
push
or
jae
push
mov
mov
scas
pop
mov
inc
out
jp
mov
dec
insl
push
insb
daa
sti
push
adc
jmp
add
pop
inc
fsubs
pop
insl
lock
bound
jge
pushf
push
mov
fldenv
ljmp
inc
adc
fwait
cmpb
cmp
jle
or
in
mov
adc
push
inc
inc
int
jge
out
jnp
or
jne
movsb
jo
xchg
push
or
nop
in
cs
and
pop
inc
imul
insl
cmp
push
lods
sti
dec
pop
cld
loopne
xchg
insb
or
js
bound
dec
mov
xchg
bound
pop
test
jecxz
pop
test
mov
mov
cld
add
mov
mov
xchg
lret
stos
popa
sub
pushl
jl
movsb
scas
mov
fistps
jbe
popa
clc
divl
pop
out
clc
int
push
hlt
pop
leave
adc
cmp
inc
popa
popa
inc
cmp
icebp
sbb
xchg
fxch
mov
push
jle
ss
enter
andl
push
xchg
rorl
mov
or
ficomps
xchg
fwait
jmp
jle
adc
inc
or
out
das
xlat
mov
push
add
jae
sub
das
int3
xchg
sahf
into
push
cmp
or
push
or
cmp
push
adc
and
out
jbe
jecxz
repnz
mov
cmpl
pop
or
or
jne
rep
push
push
int3
cmpsl
push
out
xor
sub
cli
cmc
scas
mov
gs
lret
clc
leave
push
icebp
and
aaa
sti
pop
push
mov
sbb
shlb
sbbb
fists
mov
push
lock
inc
inc
mov
and
mov
rcl
sub
sub
fimuls
movsl
mov
jbe
jno
int3
add
add
dec
or
jp
pusha
out
and
pop
fcmovu
xor
adc
pusha
xlat
mov
into
notb
shl
gs
jmp
inc
inc
push
push
add
lock
sub
mov
inc
repz
cmpsb
xchg
adc
iret
clc
adc
dec
imul
sbb
cmp
mov
cmpsb
gs
es
lret
mov
jg
add
xchg
jb
daa
flds
mov
cld
aam
xor
mov
out
jbe
movsl
loopne
das
js
cmpb
mov
lcall
lock
lret
adc
stos
sti
mov
fwait
scas
mov
popf
pop
add
cmp
enter
les
or
ljmp
mov
jno
scas
mov
imull
ds
xchg
push
mov
inc
mov
cmp
arpl
xor
call
dec
outsb
das
gs
jge
lret
pop
arpl
pop
pushf
scas
fadds
adc
arpl
shll
insb
sahf
call
hlt
mov
popa
sub
pop
xchg
and
in
in
push
inc
into
orl
hlt
int
scas
pushf
stos
jo
cmp
fdivl
in
lea
nop
fildl
popf
inc
mov
inc
mov
shrl
pop
or
lock
or
pop
cmpsb
scas
jmp
hlt
and
jns
mov
push
nop
loopne
shr
pop
cs
jns
in
add
jecxz
add
inc
popf
imul
in
mov
pop
insb
fidivrl
add
jb
jno
adc
cwtl
imul
inc
cmp
xchg
aad
mov
sahf
or
mov
test
xor
jg
dec
in
aad
fxch
xchg
popf
scas
adc
cmp
js
popf
addr16
sbbl
fadds
cli
dec
or
cmp
sub
push
decl
in
jae
ds
mov
inc
or
mov
cmp
outsb
mov
inc
outsl
cmp
mov
inc
dec
and
mov
imul
push
shrb
popf
mov
shll
inc
mov
xchg
lahf
iret
insl
icebp
pop
ficoms
test
add
pop
inc
xchg
les
popf
pop
cld
pop
inc
nop
mov
mov
jno
mov
mov
enter
cli
rorb
jbe
in
push
out
xor
xchg
jbe
or
jo
ret
pusha
mov
pop
in
pop
mov
push
mov
test
pushf
aaa
and
aaa
pop
stos
jle
mov
out
in
inc
out
push
enter
jecxz
mov
push
scas
int3
mov
sbb
fidivrs
cmp
or
sti
xchg
push
and
hlt
fidivl
xor
adc
sub
daa
insl
mov
and
jbe
inc
and
mov
pop
inc
xchg
aad
lret
ret
push
ret
pop
jne
and
inc
jbe
jmp
out
push
push
push
stc
dec
filds
aad
sbb
pop
pusha
aas
xor
mov
arpl
nop
xor
lea
push
sbb
mov
mov
push
iret
in
fst
mov
and
pop
test
mov
test
add
int3
setno
sbb
scas
xchg
frstor
shl
mov
cmpb
cltd
repnz
mov
fsubr
les
out
xor
adc
lret
dec
dec
cmp
loope
mov
jns
loopne
mov
jno
ja
add
xchg
jmp
jge
sbb
xchg
dec
aaa
daa
pop
inc
xor
cmpsb
outsb
or
out
repz
fisubs
pop
or
push
mov
int
xchg
pop
les
repz
inc
mov
mov
xchg
pop
or
iret
xchg
andl
pop
lcall
mov
icebp
stos
out
jmp
pop
jnp
in
add
call
cmp
add
aad
ret
and
loop
scas
cmp
in
sub
or
gs
or
mov
mov
add
int
and
inc
popf
or
cmpsb
insb
mov
sub
sbb
in
enter
sub
lret
shrl
or
lea
dec
adc
dec
or
or
xchg
call
inc
test
sub
jmp
cltd
sahf
cmpsb
or
lcall
cmp
push
or
mov
nop
lret
cmp
js
outsb
xor
add
xchg
js
pop
xor
sbb
mov
jns
cmc
push
push
repnz
fwait
cmpsl
and
in
cwtl
pop
enter
add
in
jge
add
mov
std
add
or
lods
into
sahf
fadd
cltd
test
dec
pop
ficoms
add
jmp
js
adc
push
mov
scas
mov
jbe
inc
insl
cmc
pop
xor
test
stc
sti
cmp
pop
stc
sahf
pop
clc
fldt
mov
aas
pop
orb
xor
fxam
sbb
mov
xor
mov
int
movsl
fs
xor
ficoms
pop
outsl
out
xchg
mov
loope
push
jno,pn
or
sub
rcrb
scas
mov
inc
scas
out
sbb
push
idivb
mov
and
inc
outsl
xor
rol
ljmp
out
cmp
mov
xchg
ja
call
jl
xor
mov
cli
cltd
jmp
push
std
cmp
sub
sub
lods
mov
in
test
in
mov
dec
sub
cmpsb
popa
popf
xorl
js
push
loopne
fucomi
test
icebp
jbe
sub
cld
jle
fucomi
and
mov
insb
adcl
mov
push
rcrl
mov
cmp
mov
ds
xchg
inc
lods
test
cmp
or
cmovg
xor
cmp
sbb
adc
pusha
or
mov
jnp
xchg
adc
mov
cmp
addr16
pusha
push
pop
inc
lea
fbstp
xlat
repnz
adc
lds
push
xor
xlat
jp
stos
sub
add
add
ret
push
outsl
mov
js
jnp
in
cmpsl
outsb
outsl
and
jno
mov
mov
pusha
mov
xchg
sub
scas
imul
jmp
imul
shrb
fs
shlb
loope
lcall
shlb
xchg
out
ja
movq
shr
rcrl
mov
scas
or
fldl
outsb
xchg
je
xor
ja
lock
xchg
dec
mov
aam
inc
xor
imul
aaa
fwait
dec
shll
lds
cli
sub
ror
ja
xorb
pusha
jmp
mov
loop
lods
ljmp
arpl
inc
mov
mov
movsb
ss
push
js
sub
pop
icebp
scas
xor
jmp
pop
shlb
pop
into
adc
inc
push
and
repnz
fs
jbe
push
shrb
fidivs
sub
sbb
mov
movsl
lcall
out
mov
rcll
in
inc
inc
leave
lahf
mov
jmp
iret
test
ljmp
inc
loop
adcl
jns
loop
movsb
stc
lds
in
gs
aad
jns
jge
sbb
mov
jo
test
lret
adc
ret
lahf
lods
enter
hlt
push
or
xor
scas
jg
inc
or
lahf
imul
icebp
cmp
mov
dec
mov
mov
loope
mov
inc
xchg
aam
push
dec
fwait
jne
ret
fstp
cmp
dec
repnz
shll
dec
shlb
in
xchg
mov
out
lcall
mov
fists
push
pushf
jae
cli
inc
jmp
mov
sti
jle
push
inc
sub
out
add
fiadds
pop
mov
cmpsl
out
mov
sub
cs
faddl
inc
outsb
adc
imul
std
push
out
outsl
dec
test
aam
mov
insl
repnz
mov
pop
mov
mov
or
repz
mov
arpl
je
je
fwait
arpl
dec
dec
xchg
pop
stos
jns
imul
lahf
popa
ja
sub
jne
and
adcl
dec
xchg
xchg
fmull
xor
movsb
stc
jmp
mov
sub
jmp
pop
in
add
inc
inc
push
xor
push
jns
pop
push
lahf
leave
enter
mov
jle
cli
sub
pop
pop
mov
cmp
addr16
lret
sub
stos
or
push
pusha
lret
cli
xchg
cmpsb
in
xchg
sysenter
fisubl
aaa
and
push
out
stc
das
xchg
jmp
popa
xor
jg
mov
mov
outsb
addb
test
test
out
data16
mov
mull
mov
mov
mov
or
adc
push
mov
jle
mov
int
ja
icebp
push
push
sbb
repz
mov
aad
pop
mov
push
cmpsl
pusha
adc
mov
sub
jge
ret
scas
test
jno
push
in
inc
cmp
call
outsl
das
test
mov
mov
repz
test
sti
ss
sbb
shrb
cwtl
rclb
in
imul
aad
push
mov
sar
aad
xor
repz
movsl
pop
or
sbb
scas
lods
in
xchg
loop
mov
or
iret
test
jb
fcmovb
push
sahf
sbb
push
inc
ffreep
xchg
mov
jo
jge
inc
mov
iret
cmp
inc
cmpsl
scas
jns
jecxz
mov
and
jmp
inc
or
xlat
out
imul
pop
or
inc
and
xor
icebp
sbb
stos
loope
push
cwtl
outsl
aaa
mov
enter
adc
dec
dec
add
out
xor
cs
in
add
imul
in
idivb
sbb
dec
stos
mov
lret
lret
xchg
iret
sub
mov
mov
dec
inc
xchg
sbb
das
push
sahf
dec
jae
or
divl
paddusw
push
push
testb
mov
lcall
add
fidivrs
push
cmpsl
xor
xchg
psrld
int3
into
sbb
jb
xor
jmp
or
push
cmpsb
mov
out
dec
xor
lcall
and
mov
push
cmpsb
rolb
push
sub
xchg
mov
lcall
lret
mov
clc
cmpsb
fsts
cltd
mov
repz
push
loop
shl
lea
int
out
gs
nop
mov
jo
adc
sub
mov
jle
roll
mov
imul
or
jecxz
outsl
adc
sbb
lret
pusha
xor
sbb
fisubrs
clc
addr16
ret
imull
push
add
mov
aam
jb
rorl
jb
daa
dec
push
aad
ljmp
shll
shll
data16
push
gs
into
out
lea
or
mov
xchg
es
cmp
fldt
mov
es
mov
pop
clc
fnstcw
jno
outsb
das
mov
mov
jp
jnp
mov
dec
outsb
popa
and
mov
dec
dec
mov
cmp
negl
out
push
jbe
notl
cmpsl
add
dec
dec
push
cmp
popa
jo
xor
mov
scas
xor
mov
shl
jns
pop
popf
stos
ljmp
shrl
test
xchg
aam
int
gs
mov
inc
inc
or
adc
fadd
push
xor
sub
addl
xor
lock
or
push
insl
adc
and
xchg
mov
into
scas
gs
fld
pop
stos
inc
aad
adc
popa
xchg
out
clc
scas
orb
sysenter
add
jg
test
pop
mov
rol
out
pop
adc
out
and
pop
popf
mov
aaa
ffreep
into
test
mov
or
add
js
hlt
mov
fstpl
adc
leave
jo
pop
or
inc
and
out
clc
mov
and
ret
adc
xchg
daa
ficoml
insb
jmp
imul
jae
out
pop
fnstenv
mov
imul
jg
pop
les
in
sbb
into
xchg
inc
xchg
movsb
pushf
mov
or
fidivs
in
repz
pop
mov
das
scas
ret
icebp
das
icebp
inc
jns
sub
mov
nop
jmp
test
test
inc
testb
loopne
inc
and
rorl
adc
mov
adc
stc
aad
push
sbbl
jmp
nop
arpl
daa
or
daa
pop
xchg
push
outsb
loope
nop
xor
js
loope
jno
inc
call
mov
or
jmp
sub
xchg
je
scas
mov
mov
jmp
in
loope
movsb
int
imul
push
fildl
inc
dec
adc
outsb
mov
cmp
jmp
popa
aaa
sub
cwtl
pusha
je
mov
jp
lea
cmc
mov
enter
push
dec
daa
add
jg
cs
jae
pushf
fs
jns
es
mov
les
insl
mov
cmp
mov
test
fldl
and
dec
dec
arpl
repnz
or
in
inc
jb
xchg
inc
out
arpl
pop
cli
test
repz
push
ss
dec
mov
cmp
fwait
pop
cltd
inc
fistps
into
roll
insl
mov
addr16
addb
lret
jle
pop
jge
mov
push
lods
pop
mov
cmpb
shll
xchg
cmp
sub
ss
inc
pusha
insb
mov
ret
enter
sbb
jae
leave
test
movsb
cmp
sbb
mov
cmp
test
pop
lahf
mov
xor
out
dec
xchg
faddl
call
mov
test
and
cld
mov
push
jmp
inc
das
jb
sti
cltd
pop
insb
in
je
and
nop
jne
xchg
inc
cmc
ljmp
add
adc
jl
push
mov
jnp
add
sbb
icebp
dec
and
xchg
or
mov
stos
push
imul
pop
cld
std
lods
cmpsb
jg
xchg
add
shll
cmc
stos
xor
fcoml
jbe
repz
int3
loopne
outsl
dec
jl
lret
scas
std
add
xchg
ljmp
scas
cmp
das
jmp
mov
in
xchg
mov
jp
adc
cmovs
sbb
insb
mov
out
dec
push
mov
cmp
cli
and
sub
call
lea
sbb
cmp
sbb
out
push
push
mov
out
mov
inc
sub
ficompl
inc
push
nop
daa
movsb
cmp
pushf
cmpsl
fisubrs
jbe
dec
xlat
pop
outsb
out
aaa
pop
sbb
jg
lret
movsl
add
lods
stos
iret
sub
cwtl
sbb
sbb
dec
push
sti
test
dec
push
push
xor
ret
sbbl
shll
scas
lock
push
mov
fcomi
lea
mov
sbb
sbb
jns
pushf
dec
mov
push
fldt
loopne
cmp
inc
xor
outsl
jle
adc
cs
out
insl
scas
jbe
xchg
xchg
fsubrs
mov
add
std
lahf
push
out
dec
jo
pop
jle
and
icebp
aam
inc
popa
push
pop
leave
cs
cld
xchg
outsl
dec
adc
ficoml
fmull
je
adc
mov
push
add
lcall
leave
pop
movsb
mov
mov
mov
push
cmpsb
xchg
aam
stc
std
in
pop
push
loop
cmp
ffreep
pop
and
sub
jge
sbb
xchg
mov
cmp
js
mov
lret
pushf
out
mov
jae
pop
dec
mov
scas
in
sar
sub
jne
rcrl
out
cld
mov
popf
sub
popa
dec
lret
cmpsl
idivl
dec
movsl
les
cmpsb
loop
mov
or
or
lcall
xor
push
add
inc
or
les
sub
jns
jae
inc
push
mov
push
mov
pop
and
stos
data16
or
and
sub
xchg
into
sahf
outsl
push
repnz
dec
xchg
mov
sbb
cmc
sbb
shlb
fisubs
xchg
jno
add
or
pop
hlt
sbbb
fcompl
jo
xchg
or
jge
adc
mov
jbe
js
mov
in
xor
lods
popf
push
fs
pusha
mov
push
sarl
out
or
mov
fcmovne
loop
jle
idivl
std
aam
in
and
push
sbb
jmp
fsubrs
loop
mov
stos
push
aas
sbb
cmpsb
or
pop
mov
sbb
pop
adc
or
jb
je
bound
and
push
enter
mov
dec
mov
shll
jae
lahf
test
pop
adc
lods
pop
mov
jae
mov
imull
lret
cmc
mov
rorb
fstps
and
ja
sbb
xchg
dec
cmp
stc
xchg
pushf
aad
fcmovne
pop
mov
lret
jge
rorl
inc
icebp
es
fimull
dec
mov
movsl
scas
mov
test
adc
xchg
jbe
sbb
mov
fiaddl
jbe
fisttpll
mull
fs
out
dec
add
test
cmp
jg
xchg
je
divb
imul
rorb
or
pop
into
inc
rcrl
cmp
xlat
sub
addr16
add
inc
pop
mov
lret
cmc
add
jle
add
mov
push
xchg
adc
jno
test
mov
mov
pop
adc
scas
ja
aaa
sub
lret
cltd
ja
mov
stos
dec
test
sahf
dec
loope
addr16
fldl
outsb
cmpsl
test
jg
mov
enter
lcall
inc
insl
xchg
mov
sub
add
pop
insb
push
mov
std
mov
push
loop
xchg
pushf
mov
mov
push
cwtl
inc
cmp
add
imul
orb
add
fwait
cmc
dec
and
cs
jno
ds
rcrb
fcmove
pusha
add
pushf
scas
jae
and
ljmp
sbb
push
mov
adc
push
add
push
lret
mov
jbe
push
or
fwait
dec
mov
add
jmp
cmpsb
in
xchg
and
add
fs
sbb
cmpsb
rorb
push
test
outsl
fldl
cmpl
rcll
lahf
push
loope
xchg
leave
popf
into
pushf
test
mov
mov
gs
rorl
call
hlt
sub
movsb
rclb
lock
sub
out
push
inc
lcall
rcll
cs
jb
in
adc
push
ret
mov
xchg
rolb
icebp
das
shl
in
adcb
call
es
jle
arpl
lds
xchg
sub
fidivl
cmpb
sar
add
xor
aam
ds
lahf
sahf
out
jmp
das
stos
mov
fbstp
push
aam
cmp
cmp
fwait
sbb
mov
jb
gs
inc
stc
stos
popf
jge
stos
mov
dec
mov
fisubrs
xchg
or
sub
dec
cmpsl
movsb
in
sbb
call
sub
xor
inc
insb
xor
mov
xchg
pop
mov
rol
aas
xchg
push
dec
add
push
sahf
rcrb
shrb
mov
pusha
sub
mov
test
and
nop
jns
xchg
xchg
and
sub
dec
loope
fdivrs
mov
imul
arpl
or
pushf
roll
pop
cli
xor
arpl
and
mov
sbb
mov
or
mov
jp
adc
sub
cld
push
fisubs
dec
push
or
idiv
cmc
das
or
arpl
jp
test
dec
in
mov
or
inc
stc
int
mov
mov
adc
jae
test
cltd
push
push
add
mov
xchg
mov
ja
stos
fdivl
add
sub
jb
lds
push
pusha
pop
pop
mov
push
mov
mov
lods
jmp
inc
movsl
pop
jmp
xor
push
scas
push
cld
push
aaa
sub
adcb
pop
pop
aas
and
jecxz
fistpll
cltd
push
pop
or
adcb
xchg
xlat
xor
int3
push
hlt
inc
xchg
mov
iret
mov
dec
fs
repnz
xor
test
push
mov
and
jmp
xor
xor
call
add
mov
mov
leave
or
gs
xorl
pop
sbb
ret
filds
jns
data16
xor
cwtl
xor
cmp
dec
push
test
daa
lret
arpl
jmp
ds
scas
or
cmc
mov
inc
xor
popf
cmp
add
cwtl
out
lahf
jle
pop
xchg
adc
arpl
cmpsb
adc
sub
scas
mov
movsb
xchg
jno
lcall
insl
leave
mov
push
enter
loopne
pop
jmp
xchg
cwtl
mov
mov
je
inc
pop
mov
mov
adc
mov
sbb
cmp
xchg
xchg
decl
pop
and
icebp
or
nop
jl
sub
popa
insb
ja
arpl
add
ret
dec
cwtl
sub
pop
fdivs
pusha
aaa
outsb
or
push
in
je
and
dec
dec
sub
and
xor
sbb
cli
and
or
fadd
mov
das
movsb
jl
fsubr
cmp
mov
dec
daa
dec
xchg
pushf
fucomp
sbb
out
jno
sarb
xchg
inc
push
xchg
test
jmp
int3
cmpsl
daa
xor
lret
scas
push
lcall
int
ss
into
mov
adc
rorb
adc
xor
inc
sbb
ss
inc
mov
mov
dec
in
fmuls
push
mov
inc
repnz
je
leave
xchg
lret
jmp
sbb
sub
lea
outsb
jmp
sbb
out
fidivl
leave
jns
dec
imul
jae
xchg
je
pop
movb
sbb
push
lahf
jmp
sbb
stos
adc
inc
test
or
mov
xor
sub
dec
jno
cmc
insl
pop
lahf
sub
inc
lds
ljmp
xlat
adc
pop
mov
mov
cmp
ljmp
jl
adc
lahf
push
sub
sarb
mov
inc
pop
mov
jns
subb
insb
mov
fistps
mov
add
int
cmp
mov
in
cmp
repz
aad
xor
mov
insl
insb
pop
xchg
adc
rclb
pop
xchg
push
mov
scas
pop
out
scas
out
ljmp
ret
xor
add
cli
and
in
add
ret
in
pop
lods
popa
addr16
or
insl
mov
aad
cmp
pop
or
data16
pop
xlat
pop
das
mov
xchg
andb
or
aas
mov
shl
scas
in
push
push
jb
inc
jecxz
or
jae
add
mov
mov
push
pop
les
lods
cmpl
fstl
mov
cmpsb
fisubrs
in
fcmove
js
inc
sarb
push
or
mov
xchg
inc
xor
push
jno
jmp
test
pop
jne
mov
jne
inc
mov
imull
pop
sbb
jbe
mov
mov
jecxz
adc
sub
es
jns
out
inc
dec
mov
cli
cmp
push
pushf
enter
add
mov
pop
aaa
adcb
sub
lods
cmp
fndisi(8087
ret
lea
push
xchg
loop
mov
cmp
lock
int
adc
push
jo
cmp
xor
or
test
xchg
and
shrl
in
xor
add
shll
or
cmpsl
in
or
icebp
dec
dec
xor
mov
cld
dec
add
dec
xor
push
xor
push
push
mov
ljmp
repnz
int3
loopne
jnp
dec
scas
cmpb
mov
popa
mov
ds
dec
sub
push
out
and
mov
out
add
decb
scas
xor
and
rcrl
cltd
adc
mov
out
adc
inc
out
cld
fists
sbb
movsl
lcall
xor
xlat
mov
hlt
ror
cmp
out
xchg
mov
sub
fbstp
rolb
mov
xor
xor
gs
bound
add
push
mov
cmp
add
mov
fimull
test
les
adc
xor
lea
cmp
push
bound
mov
add
inc
loope
fcompl
dec
pop
into
mov
lea
insl
mov
sbbl
jecxz
sub
adc
jno
mov
mov
jbe
aaa
decb
mov
add
or
push
scas
add
sbb
jge
lcall
mov
sbb
push
aam
lods
rcrb
cmp
in
sarl
fdivrl
rcll
mov
rorl
and
xchg
inc
dec
jg
sbb
pop
mov
and
xor
xchg
nop
mov
and
push
xor
jne
cmp
or
add
popa
xor
shrl
insb
mov
pusha
mov
push
pop
cs
dec
fidivrl
imul
or
jp
int
push
pop
mov
sti
mov
push
adc
mov
cli
ds
jns
mov
sahf
std
dec
push
cmpsb
xchg
addr16
mov
mov
or
mov
mov
sti
dec
lods
pop
mov
adcl
jno
mov
adc
dec
imul
lret
cwtl
dec
or
cmc
fmull
stos
js
cmp
nop
sub
pushf
dec
push
in
jo
lds
mov
sub
push
cmp
cs
inc
inc
das
test
bound
out
lods
and
mov
mov
jbe
or
cs
int
sub
icebp
pop
xor
fld
sbb
inc
sbb
pop
in
xor
xor
dec
imul
cmp
xchg
pop
outsl
adc
push
popf
inc
je
iret
in
daa
repz
and
ljmp
testl
sbb
ljmp
sub
lcall
mov
sbb
xor
pop
push
cmpsl
test
scas
jo
iret
loope
mov
dec
imul
mov
or
jo
insb
jl
psllq
push
or
lret
mov
outsl
cmp
pop
jno
nop
test
test
jno
mov
inc
pop
adc
xor
js
inc
mov
inc
and
in
inc
push
iret
cmp
ss
shrl
lahf
mov
pop
xchg
xor
and
jns
jmp
push
xchg
aaa
ljmp
pop
ret
cmpb
orl
ds
mov
push
jns
ljmp
int
fwait
pop
loope
push
in
cmp
cmp
mov
jnp
jae
test
jo
lret
mov
sbb
jg
leave
mov
mov
pushl
notw
pop
mov
cmpsb
and
int
lret
or
dec
xchg
aas
xchg
stos
ficompl
rolb
cmp
pop
sub
out
mov
or
xchg
xor
lods
aas
cmp
xor
mov
jo
jg
cld
shrb
jns
or
sti
es
push
test
popl
movsb
sub
cmc
stos
cmp
mov
pop
cmp
test
ja
mov
dec
inc
inc
test
popa
repz
pop
mov
or
xor
cwtl
arpl
xor
mov
es
xlat
bswap
shrl
sbb
sti
dec
sahf
lret
xchg
mov
iret
lods
popf
lds
das
in
js
or
xchg
cltd
in
mov
sub
jne
insl
in
jbe
rcll
sbb
adc
jp
mov
pop
add
mov
and
jp
aas
mov
mov
mov
stos
xchg
push
imul
dec
lret
out
jb
scas
mov
jecxz
sub
icebp
pop
fsubrl
jo
int
push
popf
sub
xor
add
js
negb
add
fisubrs
and
fsts
cmp
push
fdivrs
arpl
sahf
lcall
inc
loop
inc
mov
dec
je
inc
add
mov
stos
rcll
cmp
mov
xchg
les
fmuls
dec
and
rcrb
jp
or
push
mov
bound
int3
leave
fmuls
add
cmp
adc
mov
addr16
jle
sub
xchg
and
or
push
scas
dec
cmc
data16
dec
shlb
push
adc
mov
out
dec
imull
or
xchg
loopne
xchg
mov
loope
pushf
mov
push
or
fs
mov
je
sbb
icebp
lds
dec
arpl
std
mov
xchg
hlt
and
add
mov
mov
popf
dec
in
in
js
sbb
jmp
in
adc
pop
sbb
xchg
xor
out
push
push
sub
push
or
cmp
xor
or
aad
xor
push
call
adc
ljmp
sub
lret
insb
adc
push
pop
lea
xchg
iret
cmpsb
outsb
cmp
pop
mov
jl
in
mov
outsl
dec
iret
dec
adc
cmp
stos
fcomps
shll
add
xor
inc
imul
subl
or
in
in
and
pop
cmp
sbb
push
jge
adc
rcrb
xchg
mov
das
imul
fistpl
push
and
ficompl
jnp
xchg
inc
lock
scas
aas
cmpsl
ljmp
subb
out
shr
mov
outsl
sub
imul
clc
pop
pop
loopne
sbb
xchg
dec
sti
add
pop
cmp
sbb
add
jns,pt
shll
out
iret
xchg
xchg
jae
daa
xchg
jle
std
dec
mov
xor
scas
mov
icebp
imul
data16
andb
cmp
fsubs
adc
mov
push
cmpsb
mov
cltd
shlb
mov
xchg
mull
jo
bound
ret
sbb
shll
adc
int
push
xor
sub
adc
lcall
dec
jle
and
popa
and
or
cltd
dec
or
fwait
or
test
dec
jno
sahf
mov
cmp
outsb
pushf
mov
out
push
push
leave
lahf
jno
lret
mov
inc
xchg
scas
lcall
call
or
or
mov
jg
mov
dec
fs
mov
pop
hlt
pop
lds
fdivrs
ffreep
mov
sub
cmp
scas
lock
loop
leave
fsubs
movsl
icebp
lret
lods
roll
push
jl
xchg
jo
loop
es
lea
cmpsl
repnz
stc
gs
or
loope
push
mov
inc
xchg
lret
xor
ja
add
add
mov
mov
jl
sub
ficoml
in
pop
xor
push
pop
mov
dec
add
dec
pusha
enter
inc
mov
add
inc
lods
loope
jle
lcall
xchg
jnp
aas
rorb
cwtl
inc
mov
lock
lea
cmpsl
in
mov
int3
ds
jmp
jno
popa
xor
je
or
mov
push
repnz
cmp
mov
inc
mov
mov
addl
xchg
cwtl
daa
test
sbb
sbb
xchg
pusha
dec
sub
fadds
pop
mov
mov
test
xor
lcall
mov
or
add
ljmp
repz
xor
lods
sub
test
loop
std
paddq
dec
sbb
testl
cmpsl
out
cmp
lret
pop
lds
inc
jecxz
test
cmp
fwait
std
jmp
pop
inc
popa
sub
adc
mov
repz
imul
out
cmp
ret
stos
push
pushf
pmaxsw
pop
sub
adc
sbbl
out
add
push
cmpsb
xchg
sub
mov
enter
aad
jge
mov
inc
xchg
push
push
je
xchg
adc
and
ljmp
sub
push
ja
test
out
xchg
jb
lock
mov
push
push
fst
sbb
sbbb
sbb
pusha
xor
fnstenv
lret
mov
mov
jno
pushf
jge
add
pop
mov
mov
leave
inc
jb
stos
gs
int
les
xchg
fdivr
xchg
and
aaa
add
dec
mov
shlb
xor
xchg
bound
jo
cmp
push
or
in
jp
xor
popf
lcall
js
adc
mov
lds
nop
ljmp
mov
in
cmp
push
syscall
and
ja
dec
xor
in
scas
pop
mov
add
lret
std
subl
bound
ss
repz
sahf
jmp
xor
add
popa
shrd
in
xchg
mov
ja
jle
push
and
popa
add
loop
data16
adc
inc
sub
in
add
or
inc
ret
and
loopne
clc
or
call
cmp
pushf
jno
sbb
and
call
test
div
ficompl
pushf
jae
mov
mov
adc
ljmp
mov
clc
scas
mov
bound
jb
and
in
inc
outsl
inc
mov
dec
mov
fs
fcomps
es
push
xor
xchg
mov
jl
sub
popa
lods
jg
lcall
adc
sub
jb
mull
subl
add
shrb
jmp
mov
inc
sbb
mov
sub
mov
loope
xor
mov
sbb
push
dec
mov
aad
sarl
xor
xchg
movsl
adc
push
push
xor
lahf
jle
in
jmp
xor
mov
mov
nop
xor
out
std
gs
push
lcall
mov
cltd
fcomps
movsl
xchg
jno
sbb
je
dec
inc
or
add
push
push
sub
inc
mov
lret
daa
xor
or
push
push
xchg
mov
cmc
pop
ja
ljmp
push
jge
inc
inc
mov
push
imul
pop
push
or
cs
or
add
cli
sbb
mov
out
in
xor
ret
loopne
fildl
pop
sbb
jp
scas
xor
and
mov
js
sbb
xor
or
mov
pop
pop
out
outsb
fisubrs
test
test
mov
xchg
xor
arpl
sub
lahf
in
fwait
out
imul
cmp
test
loope
in
jne
or
jg
lods
daa
movsb
das
push
cmpsb
ja
mov
mov
xchg
mov
jl
sbb
dec
enter
rorb
cmpps
or
lods
mov
aam
imul
mov
into
lahf
out
test
pop
outsl
jge
mov
xchg
into
and
sub
add
outsb
jno
hlt
mov
and
fidivl
loop
ss
jo
pop
aas
add
jecxz
imul
mov
dec
sbb
push
sarb
mov
sbb
fldl
in
pushf
adc
fs
mov
sbb
mov
push
mov
mov
sub
push
mov
cwtl
or
pop
mov
mov
push
fwait
neg
push
xor
addl
imul
mov
mov
out
add
dec
inc
mov
shlb
mov
adc
xchg
aas
movsl
gs
pushf
inc
and
jmp
add
mov
dec
les
adc
inc
or
jge
dec
dec
ficoml
sbb
jae
ret
shl
jnp
dec
xchg
adc
mov
test
insl
push
or
dec
aad
enter
or
mov
fwait
and
adc
icebp
xor
lods
scas
mov
cld
pop
mov
jle
fdivs
mov
out
jbe
fisubrl
dec
cli
or
imulb
nop
mov
clc
lahf
push
punpckhwd
sbbb
jb
scas
cmp
pop
add
sbb
pop
mov
out
inc
loope
inc
xchg
mov
pop
dec
fcoms
lods
pop
movsl
pop
insb
mov
lahf
or
cmp
or
decl
jne
rcr
pop
push
ss
cmp
movsl
and
add
xor
in
call
outsb
jne
addb
ret
xchg
mov
adc
inc
and
jge
or
mov
and
fistps
pushf
imul
mov
push
add
pop
lods
xor
add
pop
test
cmp
out
jecxz
sahf
pop
ljmp
stos
cmc
insl
sbb
cmp
add
call
shl
or
cmp
dec
pop
xchg
adc
daa
jno
xchg
inc
adc
stos
xor
popf
ljmp
ljmp
jnp
pop
mov
shlb
testb
fisubrs
cmp
push
cmp
jb
shlb
jl
or
sub
lret
jecxz
mov
or
outsb
or
mov
es
into
fs
dec
push
cmc
inc
lret
pop
mov
addr16
xor
and
je
leave
rol
insb
push
jbe
aaa
inc
data16
into
ds
js
jle
mov
adc
xchg
stc
popf
or
xor
xchg
mov
mov
add
sbb
pop
lods
push
fsts
imul
pop
adc
adc
enter
out
repnz
lock
pop
scas
push
pop
test
fld
and
cltd
mov
lods
aaa
xchg
int3
push
or
push
cwtl
pop
or
je
in
out
pop
xchg
push
movsl
movsl
push
sub
ror
sbb
push
adc
out
xchg
pop
lds
jo
popa
repnz
or
xchg
dec
sub
aam
lahf
fs
hlt
mov
adc
and
jp
call
and
mov
lret
ds
cmp
repnz
ss
adc
mov
and
mov
jle
test
call
int3
jp
rcrb
push
je
sub
xchg
int
pop
pop
xlat
filds
mov
idivl
enter
cmp
repz
fwait
cmc
call
sub
jo
inc
mov
mov
cmp
add
jp
jle
or
mov
cmp
ret
mov
stos
imul
into
and
xor
movsb
adcl
cwtl
adc
xor
cmp
add
jp
dec
out
shll
inc
sbb
repnz
sahf
aaa
je
arpl
aam
or
cmpsb
cs
repz
push
rcrl
dec
jmp
lcall
popf
repnz
into
cld
add
cli
mov
sub
xchg
dec
dec
sbb
xchg
dec
jb
aaa
jns
scas
and
and
nop
jg
fimuls
std
mov
sbb
or
ret
fimull
int3
int3
call
cmp
cli
inc
movb
push
xor
sti
cmp
mov
mov
xchg
and
cmpsl
jecxz
testl
mov
in
push
sub
pop
mov
fs
add
clc
addl
ljmp
popa
or
push
jecxz
inc
push
into
or
mov
pop
push
pop
or
shll
sahf
adcb
popa
sahf
cmp
sbb
hlt
fldcw
test
jne
mov
xchg
sarl
mov
cmp
xchg
imull
and
sub
cs
seta
in
cld
mov
int
outsb
inc
or
push
xchg
int3
cmp
insb
pop
rcr
pop
xchg
add
rcrb
test
dec
jnp
cltd
or
int
and
loopne
cli
scas
sbb
loope
nop
jecxz
sbb
mov
mov
xchg
outsl
xchg
into
test
les
mov
cmp
or
xchg
dec
subb
pop
data16
rolb
cmp
sbb
pop
insb
pusha
lods
mov
ds
bound
push
cli
inc
xchg
in
pop
sti
sbb
shr
push
enter
and
test
fwait
lahf
je
clc
push
sarl
jne
in
adc
out
aaa
addl
fdivs
imull
pop
and
mov
mov
dec
popa
lock
movsb
mov
fcmovne
mov
xor
adc
call
nop
mov
lret
scas
inc
mov
dec
or
push
cmp
sbb
adc
sbb
testl
dec
and
inc
sbb
jmp
mov
out
int
fcomp
add
dec
imul
or
or
ja
imul
or
adc
in
push
mov
sub
mov
subl
add
mov
aad
mov
out
cmp
popa
movsb
shll
inc
insl
lods
repz
repz
pop
pusha
sarl
or
into
pop
les
jb
mull
int3
push
out
adc
out
inc
sbb
sub
sti
sbb
cs
cltd
fsts
adc
push
std
dec
push
scas
xchg
ret
pop
push
jns
daa
mov
mov
popf
mov
add
mov
mov
jle
add
std
lds
inc
lcall
jp
ret
adc
mov
dec
fbld
xchg
int
pop
push
lods
ja
out
mov
icebp
stc
push
into
and
imul
mov
ret
je
xchg
adc
xchg
mov
cs
inc
xor
outsb
mov
jl
ja
lcall
ret
cmove
ret
fstps
aaa
orb
pop
imul
sbb
insb
sub
and
dec
clc
sahf
mov
jns
mov
and
push
inc
faddl
and
sbb
xor
add
sbb
lods
jo
lods
add
or
sub
popa
sub
jns
jo
les
in
out
mov
mov
mov
lods
pop
mov
jl
sbb
mov
and
enter
xor
sbb
or
sub
inc
and
aaa
mov
sub
in
sbb
mov
jmp
clc
lods
mov
inc
pop
aad
ljmp
insl
mov
je
scas
insb
fwait
and
add
xlat
shlb
xchg
mov
les
das
xor
jge
adc
lcall
jle
push
sbb
jns
pop
das
shlb
into
test
jecxz
cld
lods
push
push
fstpt
sub
xchg
hlt
hlt
les
shrl
ljmp
call
movsl
or
rolb
loope
push
nop
test
adc
inc
push
adc
daa
xchg
sbb
xor
adc
out
xchg
pop
dec
add
cmp
rcrb
mov
sbb
dec
rclb
pop
outsl
pop
dec
divb
pop
dec
jmp
ja
add
or
fwait
mov
pop
cmpsb
push
sarb
dec
mov
push
or
mov
xor
lcall
test
jecxz
mov
sbb
and
adc
enter
mov
lret
cltd
js
fbstp
add
mov
xor
push
shlb
pop
xor
push
jb
ficomps
lock
add
imul
test
pop
cld
std
loope
push
pop
int
and
and
in
loopne
add
leave
cmp
mov
ljmp
adc
test
cli
add
xchg
dec
push
xchg
icebp
jp
sub
dec
pop
fmulp
push
mov
idivl
js
inc
les
push
jecxz
das
in
aaa
mov
push
fs
into
pusha
stos
cltd
out
in
fwait
sbb
push
inc
fsubs
je
jb
push
xchg
outsb
out
lods
mov
imul
ret
popf
adc
rolb
test
outsb
adc
ficoms
dec
in
sbb
mov
movsb
sub
sub
jbe
pop
test
repz
lods
test
out
pop
or
insl
in
add
ljmp
int3
xor
pop
sub
pop
lcall
pop
push
inc
aaa
mov
imul
mov
mov
and
out
push
mov
dec
sbb
inc
dec
adc
cwtl
jge
nop
xbegin
cmpsb
std
adc
cmp
mov
lahf
pop
orl
ret
sub
fnop
push
adc
scas
mov
jo
popf
cwtl
daa
imul
adc
popf
outsb
xchg
fiadds
repz
aad
aaa
jle
jnp
or
push
adc
incl
lock
int
sub
xchg
or
ja
xchg
std
mov
cmc
xor
scas
lahf
inc
sub
in
in
xor
adc
sbb
andl
insl
and
popa
xchg
pushf
and
push
and
mov
sbb
sub
fisttpl
mov
cmp
mov
lock
mov
movsb
out
popf
jp
cld
shlb
shl
xor
stos
mov
mov
adc
mov
xlat
xchg
mov
add
push
mov
das
push
mov
fisttpll
mov
mov
ljmp
cmp
sbb
cmc
cmpb
dec
and
push
push
shr
jp
fldenv
inc
and
std
aad
ljmp
out
push
stos
pop
notb
pop
pop
insl
dec
popf
test
or
testb
xchg
stos
dec
lret
adcb
arpl
jmp
mov
cmp
mov
jnp
in
test
loop
sbb
jg
cmp
loop
movsl
xchg
xchg
sub
mov
lods
jle
pop
mov
popa
adc
bound
xchg
dec
int3
push
in
rorl
shrl
stos
out
add
cwtl
push
mov
shrl
popa
gs
pop
adc
jbe
or
push
imul
scas
add
or
lea
bound
pop
mov
cmp
inc
aas
test
insl
fs
or
es
int3
cli
movsl
clc
jle
jg
int3
add
push
divl
aad
add
shll
sub
lret
nop
out
js
push
roll
pop
mov
test
lods
js
loop
ficoml
inc
aam
es
js
sbb
rolb
xchg
into
sbb
dec
xor
dec
mov
mov
cmpsb
fcmovne
inc
fmulp
nop
adc
inc
jo
pop
mov
push
lods
mov
fwait
sarb
outsl
sub
pop
add
rcr
mov
inc
test
mov
jne
add
icebp
adc
sub
lds
and
stos
sahf
and
lcall
les
out
xchg
sub
pop
cs
cli
popf
xlat
leave
add
lahf
orb
shrb
xchg
dec
push
lcall
mov
and
inc
enter
add
lahf
dec
lcall
or
sarb
ja
data16
jo
cmpsb
jmp
mov
sub
jo
xlat
rorb
cwtl
loop
mov
or
sbb
sub
xchg
lods
pop
push
sub
xor
popa
insb
imul
insb
pusha
adc
hlt
pop
mov
mov
out
xchg
push
or
leave
sub
push
test
into
repz
sub
inc
mov
xor
sarl
and
or
push
or
xchg
shrl
out
aaa
sbb
dec
pop
je
adc
cmp
inc
jbe
pop
fcom
jmp
cltd
mov
jl
fdivrl
dec
rcr
lret
mov
div
movsb
out
sbb
pop
bound
mov
lret
push
mov
jbe
int
test
pop
mov
mov
inc
test
jae
out
jne
fbstp
push
sub
insb
xchg
pop
aam
decb
popl
shl
sub
pushf
mov
insl
adc
dec
xor
sub
sarb
pop
push
in
cmpsl
ja
push
push
aas
and
mov
mov
ss
mov
mov
pop
clc
jbe
cmp
movsb
push
dec
stos
les
fsubl
cmp
or
xor
dec
pop
nop
sbb
test
mov
inc
add
cmp
mov
hlt
pop
add
cmp
jnp
adc
inc
mov
pop
js
add
inc
add
sbb
in
cmp
jl
cmp
push
inc
or
add
pop
int
movsl
push
lds
mov
aas
shll
fs
or
popf
or
fbstp
popf
scas
xchg
jns
jne
test
int
mov
cmpsb
insl
xchg
movsl
lahf
int3
leave
pslld
and
fcmovb
fcoml
adc
loope
dec
sub
mov
iret
cld
iret
cmpb
push
insl
mov
ret
sti
cmp
add
std
adc
ret
and
aad
dec
sub
xor
int3
inc
add
mov
adc
xor
adc
or
outsl
mov
push
dec
mov
mov
mov
loope
push
clc
in
adc
aaa
cli
mov
push
mov
mov
sub
shll
sbb
shll
loop
sbb
popa
cmp
mov
sbb
push
insl
in
stos
jbe
les
inc
gs
push
pop
xlat
int3
nop
in
add
mov
bound
je
lods
mov
xor
push
jb
in
xchg
or
push
jle
mov
dec
imul
cmp
fwait
xchg
enter
ret
adc
cmp
pop
das
jnp
sahf
sub
and
out
sarb
sub
daa
lock
insb
inc
add
xor
stc
push
loop
or
test
loop
rcl
pop
push
mov
je
and
jge
pop
test
lds
mov
insl
mov
pop
inc
movsb
leave
mov
mov
lret
jmp
dec
mov
jno
inc
dec
arpl
incl
les
xchg
repnz
push
mov
enter
int
xchg
dec
push
aaa
cmp
xor
pusha
mov
or
icebp
push
xchg
cld
subl
cmp
jge
mov
jb
xchg
adc
sub
testb
clc
ja
daa
data16
lahf
ret
jo
clc
adc
orl
add
bound
xchg
add
adc
push
push
mov
outsb
pop
mov
in
scas
mul
xor
gs
mov
mov
test
sub
cwtl
jge
loopne
test
enter
mov
mov
fcomp
add
imul
or
and
jne
cmp
lret
insb
out
cmp
pop
lahf
mov
orl
xchg
sti
jno
scas
or
outsb
pop
push
fisubrl
pop
mov
xor
cmp
stos
lds
or
pop
in
add
dec
roll
das
mov
insb
sub
sti
std
or
add
enter
jge
lcall
xor
adc
mov
stc
adc
loope
sbb
ljmp
std
dec
scas
popa
xchg
mov
stc
adc
dec
icebp
or
and
loop
mov
lds
stos
xorl
adc
push
inc
pop
cmpsb
jbe
add
movsb
test
cmpsb
xor
sbb
fcmovne
std
inc
aaa
pushf
add
shr
add
out
lcall
out
adc
cmp
mov
inc
cmp
mov
lret
xchg
imul
pop
je
imulb
int3
outsb
out
mov
lret
mov
and
stc
inc
mov
stos
mov
gs
pop
push
fmul
popa
jb
lock
fwait
pop
and
out
xchg
mov
xor
inc
fiadds
mov
insl
in
xchg
push
push
das
lods
loope
mov
pushf
inc
orb
inc
dec
clc
mov
out
pop
into
sarb
and
push
dec
cld
jmp
cld
pop
xchg
add
dec
and
repz
xchg
movsl
push
mov
mov
aam
mov
adc
fst
sbb
scas
movsb
aam
aam
fdivrs
ja
push
sub
mov
cwtl
std
cmp
pushf
add
or
aam
or
mov
jbe
pop
jnp
sub
mov
inc
negb
push
or
cmp
mov
push
or
into
icebp
jge
xchg
aad
scas
cmp
or
sahf
cmp
pop
push
movsl
xchg
inc
fwait
sub
dec
push
and
xchg
subb
pop
sub
testl
fmuls
repnz
in
lock
mov
push
addr16
xchg
pop
dec
insl
rcll
arpl
push
push
cmp
test
aam
in
popf
cwtl
xchg
pop
das
fs
jne
dec
sbb
jae
jp
mov
roll
inc
lods
and
sub
sbb
push
cmpsb
xor
test
sarl
addr16
enter
inc
mov
mov
or
add
pop
out
push
cmp
pop
sbb
in
popf
push
ret
jno
jecxz
mov
cmp
add
xchg
inc
sbb
inc
dec
inc
and
mov
repz
or
icebp
insl
sbb
jp
or
and
mov
and
push
int
iret
xchg
mov
das
outsl
add
mov
negb
inc
lcall
out
xlat
push
mov
inc
xor
sbb
or
push
addr16
cli
mov
test
inc
jg
adc
loop
cltd
bound
push
adc
ficomps
out
mov
mov
adc
shr
push
xchg
ss
add
jae
arpl
mov
push
pop
dec
lds
and
ja
lods
dec
stos
inc
pop
iret
cmpsb
sti
testl
pop
xchg
dec
cmp
mov
pop
mov
imul
dec
testb
xchg
scas
stc
pop
repnz
lods
xchg
adc
xchg
mov
lcall
mov
mov
inc
daa
add
mov
nop
test
jle
sbb
stos
push
loop
adc
jecxz
movsl
enter
jo
dec
jo
jl
cs
movl
pop
jne
mov
xchg
pop
lods
leave
xchg
or
outsb
stos
xchg
fbstp
rolb
mov
stos
xchg
movsl
jbe
call
xchg
dec
jbe
sub
xor
popf
out
orb
xor
movsl
and
popa
pop
xchg
xor
nop
lret
lods
aam
test
pop
xchg
xchg
push
cmp
mov
stc
aam
jge
xor
or
push
scas
mov
lahf
or
mull
test
mov
stos
roll
or
push
loop
dec
repz
leave
aad
jo
jge
imull
dec
pop
jo
mov
out
mov
adcl
enter
aaa
repnz
mov
gs
push
fwait
insb
mov
push
mov
bound
jns
stos
hlt
pop
loop
push
mov
inc
cmp
mov
aad
fldt
pushf
add
and
fdivs
repnz
jge
or
nop
or
push
clc
and
je
push
movsl
mov
sbb
or
inc
fsubp
add
jo
mov
data16
push
lret
outsl
inc
cmp
jb
out
rol
xchg
sti
std
xchg
mov
pop
decl
pop
mov
cmp
sbb
cmp
jae
pop
icebp
sti
xorb
fdivl
sub
lahf
stos
mov
lea
add
movb
inc
or
and
movsb
cmpsl
lods
fs
sti
fisubl
jnp
outsb
mov
std
cmp
jo
xor
push
mov
arpl
and
sbb
imul
ja
mov
jl
mov
sbb
test
pop
pushf
imul
ficoms
outsl
mov
mov
mov
push
imul
or
mov
jne
pop
cmc
mov
dec
jle
imul
mov
mov
mov
inc
push
rorb
fcmove
xor
movl
mov
sahf
mov
pop
adc
pop
popa
add
cwtl
test
stc
cs
divl
jns
xchg
add
loop
push
mov
jmp
or
outsl
add
inc
push
push
inc
push
shll
or
imul
inc
jae
mov
lods
jecxz
and
pop
mov
test
jl
xchg
pusha
pop
mov
add
sbb
dec
aad
das
test
mov
int3
dec
gs
fwait
add
stc
scas
fdivs
xlat
inc
int3
loop
and
cmc
mov
xchg
xor
ljmp
out
outsl
negl
mov
stos
jl
xchg
dec
movsl
xor
fwait
repnz
insb
mov
lods
pop
pop
repnz
pop
out
jg
test
cs
cmc
adc
popa
icebp
shr
add
arpl
cmp
or
aaa
mov
sub
int3
cmpl
cs
sbb
cmp
cmpsb
adc
sbb
push
lea
into
insl
mov
das
jle
cmp
sbb
inc
mov
dec
ja
pop
mov
jp
movsl
imul
sbb
mov
int
xorb
shrb
inc
push
add
ret
pop
xchg
pop
adc
fcmovu
sarb
pop
stos
mov
out
ret
daa
hlt
mov
ss
pop
into
test
iret
sub
test
sub
cmpl
jl
mov
push
and
cmp
push
and
fsts
mov
mov
in
push
daa
dec
test
aaa
inc
push
inc
inc
jno
jb
fadd
das
xchg
btr
jno
fisubrs
push
enter
in
push
insl
sbb
jno
sub
add
dec
scas
mov
dec
and
lods
test
xchg
and
push
adc
adc
test
inc
xor
loop
and
dec
stos
ret
aam
jne
imul
xchg
call
dec
push
lods
jecxz
cli
push
repz
mov
in
mov
mov
add
xor
mov
add
mov
pop
aaa
mov
cmp
loopne
add
adc
mov
subl
xchg
lods
in
cmp
out
or
sub
push
addr16
insb
out
fwait
mov
loop
sbb
mov
ds
sbb
cmpsb
scas
rcrl
jg
movsb
xlat
cmp
push
pop
add
inc
mov
dec
repnz
add
sbb
ss
push
adc
stos
jmp
jae
pop
call
mov
xor
mov
lea
daa
pop
adc
cs
mov
sub
arpl
cmp
mov
cwtl
mov
ret
fmuls
mov
clc
mov
and
aam
movsl
orl
fidivrs
mov
iret
lret
lret
shrb
jns
fwait
fwait
movsb
dec
pop
adc
testb
dec
fsts
in
mov
fisubrl
mov
xor
cltd
fcoms
push
cmp
std
les
cmp
xchg
roll
jecxz
dec
nop
cmp
jo
into
jnp
out
jns
inc
sbb
adc
sub
mov
xor
movsl
and
hlt
loop
int
adc
out
in
rcrb
push
and
dec
mov
les
sarb
imul
loop
cmc
jb
cmp
push
jb
xchg
cmp
clc
xchg
data16
out
sub
dec
out
into
xchg
call
shlb
mov
dec
jg
mov
out
cltd
jbe
dec
popf
insl
cmp
push
xor
pop
mov
shll
pop
push
hlt
gs
push
lret
enter
xor
adc
or
clc
cmp
in
add
dec
dec
sahf
shl
pop
das
lahf
mov
sahf
scas
xor
cli
jl
out
mov
int3
repnz
xor
xor
sti
lret
or
fidivs
je
in
push
push
xor
jle
aam
lock
insl
mov
mov
btr
sub
xor
pushf
into
leave
add
mov
pusha
pop
jbe
mov
xchg
das
das
push
mov
pop
js
inc
adc
xor
pusha
sub
jbe
test
add
jnp
pop
sbb
cltd
jnp
mov
pop
mov
sbb
and
mov
adc
addl
pop
test
push
push
je
out
adc
lods
dec
cmp
fildll
scas
cwtl
jmp
lcall
sar
out
or
xor
test
xchg
mov
out
xchg
pop
mov
mov
icebp
shrb
jg
aad
out
push
in
xlat
repnz
cmc
dec
mov
and
flds
setno
daa
in
scas
mov
xor
inc
sub
jmp
and
add
sti
arpl
push
call
cld
dec
and
sub
daa
aad
and
arpl
fcoms
jge
add
cmovge
and
stos
mov
mov
or
jns
popa
cmc
or
sar
push
pop
xchg
gs
jl
xchg
loop
cmc
inc
shlb
and
sub
rclb
or
xacquire
pop
mov
int3
or
jl
sbb
sub
lret
and
shll
inc
and
jae
jmp
call
jp
sbb
push
cltd
fs
sti
adc
pop
cmp
xlat
pop
enter
mov
mov
aad
dec
or
aaa
xchg
xlat
imul
pop
outsb
pop
lods
xchg
mov
mov
or
gs
popf
fwait
adc
lock
xlat
pop
cmp
adc
mov
add
pop
mov
pop
xchg
mov
dec
ljmp
es
xchg
js
mov
leave
dec
jne
pop
xchg
mov
mov
jno
xchg
call
push
xchg
cmp
gs
cld
gs
mov
mov
fidivl
xor
or
lods
lcall
mov
test
mov
xor
aaa
add
xchg
add
cmpsl
test
ret
and
cmp
or
sub
stos
jnp
cmpsl
arpl
in
rolb
in
xchg
adc
call
push
in
shl
mov
mov
cltd
inc
lods
jge
movsb
sub
push
lret
push
in
lds
push
mov
xor
jns
test
sub
ret
jbe
dec
mov
fldt
jl
fmuls
mov
mov
mov
daa
dec
sbb
fistpl
push
sbbl
int
nop
mov
out
jns
in
pop
cmp
push
aad
inc
fistl
int3
scas
ja
xchg
fstps
insl
jnp
into
ss
divb
mov
out
inc
xor
jle
and
in
inc
mov
pop
sbb
pop
pop
movsl
fmull
pop
movsb
divl
mov
sub
fucom
inc
xlat
dec
push
mov
or
mov
dec
and
test
xchg
adc
cmp
repz
xchg
int
adc
mov
push
stos
mov
cs
push
mov
jnp
inc
push
nop
add
sub
cmp
mov
xchg
sti
fucom
jl
xchg
lds
sbb
mov
mov
scas
test
scas
jb
sub
js
inc
pop
mov
int
scas
mov
pop
mov
imul
clc
cmc
out
pop
mov
xchg
pop
jge
lahf
dec
out
stos
into
pop
imul
and
sub
enter
push
adc
sti
in
pop
cmp
faddl
xchg
mov
sub
xchg
mov
fistpl
xchg
pop
xchg
sub
inc
fs
in
sbb
lea
xchg
ret
pusha
stos
aam
adc
test
xchg
push
lods
sbbb
lods
stc
push
sbb
daa
push
cwtl
mov
mov
dec
mov
rcrl
fldt
gs
adc
push
das
test
ret
push
lret
mov
aam
dec
jo
or
sub
xchg
aaa
outsl
cmp
in
dec
dec
stos
bound
test
pop
jnp
stos
outsb
insl
pop
mov
iret
adc
adc
jl
inc
cli
sub
dec
movsl
outsl
imul
outsb
lahf
bound
idivb
adc
imul
adc
dec
mov
or
add
in
xor
mov
ljmp
cmp
je
push
imul
add
dec
les
in
cmpsb
mov
xchg
mov
movsb
mov
mov
fcoms
popf
push
sarb
jbe
inc
mov
mov
jno
jo
fwait
xchg
mov
adc
test
pop
cmp
push
mov
cs
mov
inc
mov
sti
enter
xchg
and
and
xor
leave
xor
jmp
nop
stos
pop
mov
shlb
ljmp
inc
push
shl
sbb
and
mov
insb
aas
lret
jno
jmp
xor
and
sub
adc
fwait
dec
fs
fdivl
mov
xor
push
dec
mov
inc
add
loope
pop
pop
cs
push
outsl
sbb
mov
push
nop
xor
xchg
pushf
fcom
iret
in
pop
mov
mov
inc
pop
adc
adc
xchg
add
sub
cmp
fistps
sbb
mov
in
jg
aad
inc
inc
fldenv
loop
dec
sbb
cmp
mov
mov
aas
repnz
mov
ja
in
fisubl
inc
aad
test
hlt
out
or
shlb
int3
sub
push
pop
movsb
mov
and
lock
mov
insb
shrb
jg
mov
shlb
int3
jge
sub
fwait
repz
xchg
out
shlb
dec
pop
stos
push
shlb
push
sahf
sub
mov
dec
int3
pop
fsubp
dec
sub
outsb
rcr
adc
or
jmp
jne
lret
cmpsl
inc
sbb
inc
int3
aas
ds
pop
mov
mov
lret
movsl
jno
popa
mov
push
stos
add
mov
rcr
mov
sub
jns
cwtl
sbb
xchg
and
push
push
mov
rorb
lock
dec
shrl
cmp
push
fwait
nop
lods
dec
cmpsl
lods
je
movsb
lcall
sbb
fs
dec
and
adc
dec
pushf
push
or
mov
push
imul
sti
dec
cmc
cmpsb
cmpsl
pop
movsl
aaa
les
sub
arpl
inc
outsb
clc
sbb
xor
test
popa
lcall
cmp
mov
pop
jmp
out
cmp
cmp
aam
movsl
testb
lret
pop
pop
incl
test
adc
mov
sbb
arpl
orb
lcall
aas
pop
xchg
adc
adc
mov
insb
adc
es
sub
aas
xchg
outsl
lock
inc
and
lock
stc
popl
mov
aas
xor
scas
mov
cli
push
aam
add
inc
test
push
popa
pop
ljmp
fidivrl
jnp
ds
cmp
dec
loop
or
loope
in
cmp
neg
cmp
xchg
push
mov
push
xchg
in
xchg
sbbw
mov
imul
add
out
negb
mov
push
mov
push
jne
clc
push
outsb
loop
and
adc
hlt
fsts
loopne
mov
pop
sarl
mov
int3
cltd
sub
inc
sahf
int
mov
or
pushf
int3
cmp
adc
out
cmp
hlt
xchg
mov
mov
out
mov
xor
mov
cmc
adc
push
mov
mov
sub
mov
mov
frstor
insb
jb
ret
mov
inc
jns
stos
xor
hlt
fsubl
imul
and
cmp
cmc
into
bound
in
xchg
dec
mov
push
cmpb
gs
mov
sub
in
mov
popf
cmp
adc
add
icebp
jns
jmp
jne
stos
mov
mov
mov
mov
sar
cmpl
push
insb
rcr
lret
movsb
jge
inc
and
std
add
mov
adc
push
shll
dec
cmp
loop
pop
or
out
xchg
leave
dec
pop
popl
pop
dec
mov
rorl
pop
imul
adc
bound
sub
insb
jb
pop
test
dec
sarl
imul
aam
aad
adc
pop
sub
sub
ret
and
mov
std
scas
or
sahf
sbb
and
jne
mov
cmpsl
push
adc
push
fadds
out
sbb
xchg
les
std
insl
xlat
jmp
enter
sub
fs
adc
iret
jg
mov
rcl
cs
xchg
sub
add
jns
push
imul
pushf
sub
cmovae
arpl
hlt
xchg
dec
aam
cmc
pop
jecxz
cmp
les
test
mov
mov
ret
in
gs
lods
sub
mov
icebp
js
sub
jl
inc
and
jp
add
xor
add
and
sbb
adc
dec
jno
sub
pop
hlt
cmp
jl
inc
testl
negb
dec
stos
sub
outsb
or
cmp
adcl
push
mov
mov
sbb
test
aam
arpl
or
cltd
jb
lahf
cmp
fistpll
push
lret
clc
adc
pop
pop
lds
mov
add
or
shrb
mov
bound
pop
jmp
cmc
push
dec
scas
mov
jns
jecxz
mov
jne
in
inc
neg
in
mov
xor
repnz
fs
push
sbb
js
xor
jno
xor
in
popa
cmp
mov
adc
sahf
fstpl
pop
pop
insb
cmpl
fs
push
xor
fdiv
inc
out
addr16
ret
in
ret
xchg
add
mov
mov
rclb
jae
inc
push
and
xor
cmp
add
jge
je
aaa
je
lods
inc
dec
and
dec
int
aas
or
cmp
cmp
xchg
test
sub
add
sbb
adc
sbb
push
xor
sbb
adc
add
inc
stc
cltd
cmc
or
xchg
lods
mov
hlt
fcompl
or
cld
cmpb
push
xchg
push
int3
xor
outsl
xchg
dec
data16
insb
and
mov
jp
cmp
and
pop
mov
dec
jge
sub
push
adc
pop
shll
push
mov
mov
xchg
imul
out
or
int
push
lahf
push
jmp
sbbl
cmp
xchg
push
mov
cmc
fstpt
in
push
vmwrite
lahf
fidivrl
out
andb
mov
jns
or
add
pusha
movsb
pop
mov
movsb
or
xchg
and
and
mov
movsb
xchg
lcall
pop
mov
or
cs
in
std
push
sahf
je
inc
push
cmc
out
inc
clc
pop
pop
push
insl
cmp
adc
mov
sahf
insl
mov
test
adc
in
inc
gs
and
xor
nop
shlb
inc
fstpl
repnz
lods
inc
dec
jae
aad
enter
pop
outsb
jns
cli
or
mov
repz
scas
jge
and
sub
por
adc
ret
xchg
aas
out
jl
popa
mov
movsb
mov
mov
stos
outsl
pop
repnz
add
push
cmp
xchg
shl
push
xchg
jne
dec
push
ja
cmp
incb
cli
aas
sub
jae
xchg
mov
jnp
mov
mov
cltd
out
test
out
hlt
xchg
xor
pop
ss
push
cmc
xor
cmp
cmp
xor
or
jne
mov
mov
test
jg
in
xor
mov
add
push
std
and
lods
adc
sti
mov
inc
mov
and
aam
fldenv
push
enter
xchg
aaa
mov
insb
xchg
cmp
cld
cli
test
jl
pushf
inc
shl
xchg
cmp
pop
inc
in
jp
dec
out
scas
movsb
faddl
dec
insl
sub
mov
jl,pn
je
add
xchg
sub
cmc
cltd
setbe
sub
or
es
or
jl
xchg
xor
fdivrl
cmpb
mov
ret
fldt
sti
xchg
lahf
inc
mov
pop
sbb
notb
push
jbe
adc
lret
and
lahf
jnp
or
mov
sub
jns
cmc
mov
cmpsl
add
xchg
lea
xor
pop
push
cmp
xchg
sbb
insb
dec
cmp
outsl
mov
mov
cmp
popw
cltd
push
icebp
test
into
xor
loopne
xchg
jg
orl
mov
gs
pop
scas
inc
fnsave
dec
shrl
jno
or
jae
push
sub
cld
ret
push
loopne
or
fdivrl
and
mov
insb
insl
idivl
fdivp
icebp
xchg
std
les
jne
les
lcall
or
and
in
popf
hlt
sub
stos
ss
sub
mov
popa
push
sub
and
jp
jp
ja
gs
sub
outsb
jmp
fsubrl
cmp
xchg
mov
scas
adc
not
xchg
sbb
sub
cmp
and
or
popf
pop
mov
repnz
adc
pop
fwait
push
lea
imul
leave
out
outsl
dec
mov
cmpsb
pop
mov
popa
loop
adc
pop
add
cmp
and
popa
out
add
jecxz
xchg
mov
lret
add
and
mov
arpl
enter
out
dec
sahf
stos
sbb
mov
nop
sahf
xchg
dec
cmpsl
cmp
dec
movsb
fwait
sbb
stos
or
and
cmp
dec
mov
pop
pusha
mov
and
dec
cmp
outsl
sbb
ds
bsf
mov
xchg
iret
push
addr16
pop
dec
or
push
adc
gs
orl
lret
xchg
icebp
dec
pop
adc
je
or
test
dec
mov
rcrb
jnp
in
loop
and
cmp
pop
mov
dec
cld
inc
faddl
outsl
sub
inc
frstpm(287
inc
test
xor
mov
lahf
lret
out
gs
jl
setge
or
push
lret
pop
es
cmc
clc
aas
out
sbb
cmc
imul
aad
xchg
mov
xlat
inc
test
loope
test
and
pushf
mov
add
es
sbb
in
testl
out
movsb
out
sti
out
add
dec
inc
cld
mov
xor
ljmp
fstpt
push
push
or
shll
push
lret
ja
push
inc
dec
out
pusha
push
in
xchg
xchg
sub
sub
repnz
cld
adc
xor
into
movsb
sarl
iret
push
stos
push
shr
arpl
ja
sbb
mov
jne
shll
or
into
mov
adc
aam
shl
sub
cwtl
sbb
scas
cmp
sub
or
xor
clc
and
xor
dec
or
xor
loopne
pop
inc
jb
lock
mov
aaa
mov
mov
jno
lods
ds
insb
ret
cltd
xchg
jno
pop
push
mov
push
pop
lea
mov
push
out
jp
stos
orb
push
or
xlat
cwtl
lcall
add
pop
fwait
clc
outsb
mov
bound
aas
push
repz
ja
mov
mov
mov
mov
sbb
inc
mov
out
divl
daa
imul
out
sub
push
mov
xor
sub
xchg
imul
xchg
cmc
inc
cmc
enter
rorb
out
pop
daa
addb
sub
lea
add
jge
lret
inc
inc
mov
jbe
push
pop
pop
jmp
stos
push
std
sub
cmp
rcrl
jae
push
subl
and
mov
inc
mov
jo
mov
aad
pusha
into
sti
enter
jg
and
daa
insb
jae
daa
or
movq
dec
and
xchg
mov
mov
add
jp
stos
sub
mov
jbe
pop
push
into
and
and
pop
call
sbb
and
cmp
ja
out
jb
pop
out
int3
das
std
rorl
dec
insl
xchg
sbb
pop
add
pop
pushf
mov
add
mov
stos
dec
aas
inc
or
sbb
lods
mov
push
pop
add
dec
lret
nop
pop
or
shlb
push
movsl
cli
imul
jno
mov
fs
cmpsb
or
out
shl
sbb
pop
or
cmpsb
leave
mov
gs
out
add
int3
pop
push
sub
aas
loopne
clc
jp
pop
jp
jbe
lret
les
repnz
or
mov
mov
jl
mov
repnz
mov
mov
aad
ret
cld
dec
jne
xor
das
test
dec
dec
pop
mov
in
lret
xchg
adc
mov
icebp
xchg
pop
in
ret
aad
fdiv
test
cmp
mov
push
stc
fsubrl
mov
jg
mov
int3
xor
or
mov
push
cmp
xchg
popf
std
icebp
sbb
pop
adc
mov
or
dec
add
decb
les
jae
addb
adcb
ret
movsl
fidivrs
lock
add
mov
jp
lods
dec
mov
je
or
jl
and
lods
cmp
cmp
sub
movswl
jo
sub
bound
or
pop
bound
call
popf
jge
out
popf
jne
push
pop
imul
sbb
jge
bnd
cmpsl
xchg
call
shl
outsl
xchg
push
mov
insl
dec
mov
add
xchg
inc
test
add
popf
in
test
sarb
aas
mov
into
fadds
lds
bound
sub
mov
pop
push
cltd
pop
xchg
dec
cmpb
nop
jno
add
mov
in
fadds
push
add
aas
js
mov
negl
cmc
test
incb
cmp
in
into
add
cmp
add
imul
outsb
push
sub
dec
ret
bound
int3
enter
add
dec
xchg
repnz
fcoml
push
rolb
test
rcrb
outsb
push
mov
dec
xchg
jge
sub
in
pushf
adc
xchg
iret
xchg
add
in
push
insb
mov
sbb
int3
std
adc
outsb
jecxz
aaa
stos
xchg
lds
adc
imul
in
std
and
das
jl
mov
insb
clc
cmp
mov
cmpsl
lds
lret
ja
pop
push
pop
mov
ds
sub
dec
sarl
xor
xchg
mov
ljmp
cmp
push
shrb
loope
popf
add
pop
leave
rorl
nop
mov
push
and
cli
xchg
cltd
and
daa
std
sub
sub
addr16
jl
sbb
add
int3
or
or
dec
sti
push
enter
daa
add
icebp
stos
outsb
clc
inc
push
and
js
les
loope
adc
jge
add
dec
mov
and
and
cmp
dec
sarb
lret
movsb
push
adc
jo
mov
push
imul
das
inc
scas
cmpsb
cmpsl
out
cmp
cmp
dec
gs
out
fsubr
std
adc
nop
rcrb
dec
cli
repnz
sub
cmpsb
movsb
or
outsl
cld
cmp
and
or
loope
ret
or
push
out
dec
test
ret
add
cmp
mov
repz
mov
sub
pop
jecxz
das
idiv
inc
lahf
scas
ja
xor
xor
pushf
or
mov
mov
in
cltd
xchg
test
mov
adcb
sbb
cmpsb
mov
unpckhps
dec
jae
fstps
cwtl
call
adc
mov
pop
cmp
mov
out
andb
cmp
das
ljmp
sti
lods
jecxz
mov
xchg
scas
add
scas
xlat
push
ljmp
mov
je
xchg
jne
fdivrs
out
mov
out
lret
ret
fs
push
sbb
insl
stos
inc
push
jmp
jp
sub
or
into
xor
stos
out
jge
out
mov
popf
push
lcall
add
aas
push
clc
push
inc
sbb
out
xchg
cs
lret
pop
cs
call
xchg
outsl
sbb
dec
js
test
add
pop
outsb
shl
pop
xchg
inc
pop
insb
jecxz
pop
shlb
test
xchg
sbb
mov
mov
mov
mov
in
jge
mov
sub
pop
sti
fists
cmp
sbb
push
outsb
jb
lea
sti
lds
xchg
pop
int
cmp
sub
or
dec
call
jmp
dec
inc
xchg
test
ss
mov
ja
mov
jle
inc
js
dec
cmp
fldenv
call
imul
sub
fbld
jae
push
test
adc
add
sbb
mov
jge
push
jl
and
xchg
mov
dec
or
int
and
dec
rorl
add
jo
inc
popa
mov
test
bound
push
push
dec
fcomps
pop
mov
sbb
inc
mov
call
daa
addl
mov
mov
xchg
xchg
in
fsubl
iret
mov
lea
jl
repnz
dec
imul
cli
bound
or
lods
cmp
stos
jl
cmpsl
loop
fadd
mov
sbb
aas
xchg
mov
jl
mov
mov
mov
ret
cmp
or
pop
push
test
xlat
int
mov
pop
lcall
f2xm1
jge
test
push
popa
and
xchg
cmpsl
scas
pusha
mov
sub
dec
sub
shll
testb
rolb
push
pop
push
ljmp
inc
mov
call
lret
adc
sub
push
in
push
fldl
sbb
lahf
xchg
insb
push
lods
clc
sub
adc
rorb
pop
cmp
repnz
mov
dec
nop
jge
inc
pop
mov
les
and
in
pushw
aam
cs
ret
dec
ja
and
or
jge
adc
dec
dec
mov
notl
lret
dec
xchg
xor
xchg
dec
mov
into
movsl
clc
pushf
sub
nop
and
stc
out
lea
mov
test
xchg
pop
xor
sbb
icebp
cmpsl
rcrl
push
push
inc
rorb
dec
outsb
bswap
dec
imul
inc
movq
inc
mov
and
jecxz
rcrb
loop
dec
xchg
push
jecxz
pop
mov
sub
mov
daa
daa
dec
mul
fcompl
sbb
sub
and
jae
rorb
stc
les
sub
add
pop
add
sti
push
xor
js
repnz
cltd
push
icebp
shrl
cmc
sub
fcompl
neg
clc
pop
ret
mov
or
es
scas
fwait
aaa
push
ds
jno
idiv
int
subb
sub
scas
out
pop
ss
xchg
sbb
mov
sub
addb
int
adc
in
sub
fsubrl
mov
mov
dec
fbstp
testl
ss
dec
mov
sbb
and
adc
push
cmp
jmp
and
cmp
sti
daa
pushf
or
jle
ss
test
adc
mov
push
cmpsl
dec
stos
addr16
fwait
shll
loope
jb
cmc
cli
mov
mov
das
lahf
dec
add
stos
sbb
xor
gs
lods
fwait
jno
out
out
lret
mov
mov
lret
leave
int3
jb
stc
repnz
ja
and
outsb
scas
mov
scas
outsb
cmc
dec
stos
in
in
push
fcomip
push
movsb
leave
sarl
push
pop
fsubs
outsl
pop
scas
cld
fldt
add
cmc
test
mov
mov
nop
jl
add
push
jmp
cmp
pop
pop
mov
mov
shlb
imul
push
pop
popa
flds
pop
cmc
push
jne
xchg
dec
lret
pop
js
sub
je
js
jp
in
sbb
inc
leave
out
in
scas
test
pop
in
icebp
pusha
dec
cmp
xchg
mov
test
shrl
push
int
push
lret
and
imul
xor
push
inc
loopne
imul
out
imul
aaa
les
jl
ret
sahf
mov
lds
das
add
into
mov
cmpsl
test
mov
movsl
xchg
in
adc
cmp
movb
imul
cld
mov
lods
lret
leave
sub
cltd
data16
outsb
mov
mov
sbb
cwtl
out
inc
mov
popf
mov
sub
push
insb
xchg
imulb
add
dec
outsl
mov
movsb
push
jae
scas
pop
mov
push
or
dec
int3
jbe
outsl
mov
faddl
add
cwtl
fdivr
xor
mov
mov
scas
push
lock
aam
pop
inc
cli
adc
nop
popf
out
mov
xlat
push
addr16
cmp
roll
jae
pop
cmp
or
sahf
into
jb
js
cmp
push
jge
jns
in
icebp
out
pop
cmp
stos
and
xor
aas
lea
pop
pusha
js
mov
sub
jno
lahf
mov
icebp
dec
jge
movsb
inc
mov
daa
pop
or
outsl
stc
jnp
xchg
fisubs
dec
dec
dec
xor
mov
pop
rcrl
xlat
insb
cwtl
cmpl
insl
sti
icebp
mov
dec
mov
outsb
push
jp
dec
stc
dec
aas
pop
cmp
push
ja
cmpsb
movl
loopne
aas
adc
push
movsb
out
shrb
mov
or
decb
popa
js
mov
loope
je
push
adc
mov
and
pop
sahf
lahf
push
xchg
push
das
stos
sbb
ss
sub
aam
gs
loopne
popa
inc
inc
or
cmp
xchg
sub
sbb
ljmp
lret
das
jae
out
mov
jle
mov
adc
cmp
mov
pop
or
pushf
icebp
sub
mov
mov
dec
cmpsb
mov
adc
cs
pop
iret
push
adc
jle
out
and
push
push
mov
sbb
xor
jmp
mov
xchg
faddl
fnstcw
cmp
into
lods
stos
pop
mov
ljmp
addr16
jl
push
xchg
test
stc
lret
jg
lret
test
outsl
dec
inc
or
aad
idivb
fcoms
sahf
sub
pop
push
lcall
sbb
repz
jg
and
mulb
push
fisubrs
lods
cmp
aam
out
mov
lret
cmp
xlat
mov
and
xchg
adc
cwtl
lods
inc
mov
mov
ljmp
test
sub
pop
pop
ljmp
std
xchg
setge
inc
popa
xchg
cli
out
in
stos
icebp
das
mov
xchg
cmp
xchg
adc
or
pop
jb
mov
repz
xchg
arpl
or
mov
roll
jecxz
mov
push
jle
popa
cmp
mov
adc
mov
jb
gs
test
in
mull
hlt
pop
cmp
jbe
leave
subl
call
cltd
jae
xchg
repnz
sbb
push
lret
mov
lahf
data16
lock
insl
pop
arpl
leave
mov
add
jecxz
mov
push
mov
or
jecxz
add
mov
leave
jae
jno
push
mov
mov
xchg
test
sbb
inc
push
inc
idiv
call
jg
add
pop
lret
sbb
rcr
mov
testl
maskmovq
imull
cmpsl
je
int
push
mov
in
push
inc
ret
call
lahf
rorl
cltd
lfence
js
loope
loop
sbb
cmpb
jo
push
lods
pop
and
sub
adc
sbb
ffree
mov
es
cmpsb
mov
out
jne
icebp
pop
add
mov
mov
leave
cwtl
arpl
dec
cmp
sub
add
sbb
add
jb
sbb
mov
mov
jnp
lock
xor
add
loopne
mov
aaa
xchg
into
jno
xlat
out
stc
mov
xchg
mov
sbb
adc
call
xchg
ret
and
pop
ret
cmc
aaa
pminub
mull
outsb
pop
fisttpl
sahf
rcrb
or
fiaddl
stos
bound
xchg
jge
add
inc
xchg
mov
jl
and
jmp
push
jae
mov
int3
push
cmpsb
orb
lret
mov
scas
and
icebp
loopne
cmp
sti
and
adc
xor
lock
xlat
cmp
or
mov
into
ror
test
sbb
mov
pushf
out
dec
nop
sub
mov
mov
pushf
in
adc
sbb
dec
inc
pushf
add
sbb
jle
jecxz
jb
ds
dec
neg
push
shrb
std
imulb
test
fnsave
std
mov
dec
jns
jno
pop
scas
push
pusha
dec
adc
lret
jp
mov
sbb
sbb
in
out
mov
or
pop
xchg
xchg
rorl
or
and
mov
repz
repz
xchg
pop
pop
leave
push
rcrl
dec
test
dec
scas
xchg
mov
mov
mov
adc
nop
fldenv
es
sbb
or
push
es
fisttpl
xor
lret
mov
aam
imul
dec
cmp
cmpsl
adc
xor
movsb
dec
in
cmpsb
or
imull
dec
pusha
adcb
adc
pop
fnsave
cmpb
mov
cmpxchg
sub
in
jno
test
push
mov
pop
mov
push
sub
neg
mov
pop
pusha
push
outsb
sbb
mov
inc
push
jge
dec
jmp
ljmp
mov
call
subb
mov
xor
jns
dec
mov
ljmp
call
xor
push
jb
dec
cli
shl
in
cwtl
lret
mov
sbb
inc
in
push
cmp
test
mov
scas
das
add
mov
jmp
fcoml
divl
and
stc
mov
sub
mov
jns
push
jb
add
sub
push
add
lock
pop
mov
mov
xor
les
or
jmp
jge
insl
mov
adc
aaa
sbb
test
push
xor
xchg
dec
sbb
shl
jmp
or
setnp
pop
adc
lret
out
mov
in
adc
imul
orb
pop
adc
pop
negb
jb
pop
cmp
lahf
lret
ljmp
out
mov
pop
test
pop
mov
jno
ds
sub
cmp
fsubrs
scas
cwtl
aam
inc
ud1
push
cmc
fldcw
ss
xor
push
mov
push
or
movsb
fs
mov
fidivs
ret
mov
add
popf
inc
cmpsb
jnp
stos
pop
sti
movsb
sub
into
mov
je
les
pop
movsl
outsl
decl
mov
dec
sub
xchg
xor
push
sbb
inc
cltd
xchg
in
sbb
pop
inc
dec
adc
sub
je
push
push
je
pop
fiaddl
icebp
incl
rolb
rolb
push
or
sahf
imul
nop
shll
loope
mov
sbb
inc
lahf
mov
jg
jbe
shrl
ljmp
dec
fs
pop
push
adcl
jl
dec
jnp
pushf
fdivrs
inc
in
mov
pop
jo
cmp
movsb
xor
in
push
lcall
mov
push
or
mov
cmp
jecxz
push
in
push
lds
sbb
xchg
mov
jge
inc
xchg
sub
adc
in
mov
xor
jg
cmp
dec
lahf
xchg
lret
jno
aas
movsl
or
sbb
repnz
dec
addl
xchg
aaa
mov
je
dec
imul
sbb
jno
into
ret
inc
xchg
xor
inc
lods
arpl
sbb
jmp
ret
add
mov
dec
fwait
enter
sub
loop
aam
mov
cmp
repz
mov
int
ficompl
daa
xor
pop
ja
push
fcompl
decl
sub
ljmp
fnstenv
dec
clc
pop
iret
daa
imul
pop
in
les
test
cmp
adc
sbbb
stos
out
xor
mov
and
les
pop
nop
dec
rcrl
xlat
data16
push
jge
jb
xor
lods
and
and
pop
and
rclb
inc
sahf
lea
mov
or
insb
shufps
test
outsb
pop
mov
push
fsubrs
jmp
jae
sbb
lods
sti
mov
hlt
and
mov
call
cmp
call
jne
and
xlat
aam
mov
push
jb
cwtl
insb
sub
repz
xchg
call
loope
insl
int
push
test
push
aam
sub
xchg
fcmovu
loop
inc
sub
cli
xor
push
pop
push
cmc
test
add
xor
aas
imul
mov
sub
clc
sahf
pop
sbb
push
or
subl
repnz
lahf
adc
mov
and
pop
imul
jl
in
prefetch
mov
adc
push
int3
movsl
add
ss
fldt
inc
mov
in
sbb
xchg
scas
aaa
into
sahf
subb
add
sub
inc
in
mov
push
daa
sti
mov
out
out
xchg
in
jle
cmp
inc
mov
or
data16
loop
adc
int
faddl
mov
movsb
frstor
loope
in
stc
add
push
sarl
mov
push
stos
nop
pop
popa
mov
xor
pop
adc
leave
insl
dec
enter
mov
xchg
dec
pop
push
xor
stos
ja
jno
cld
paddusw
sbbb
int3
lock
push
mov
mov
scas
add
xchg
xchg
ljmp
mov
push
dec
popf
add
jle
xchg
clc
push
jo
mov
mov
sub
fcom
adc
push
repz
mov
fbld
rorb
call
mov
sbb
ret
stos
mov
push
lret
xor
in
aam
mov
test
pop
test
jns
xchg
outsl
cwtl
add
bound
cmp
xor
jmp
lock
sub
int
jmp
mov
stc
popf
pusha
mov
in
mov
hlt
test
es
mov
ds
xchg
adc
pop
pmaxsw
mov
mov
jg
mov
add
and
cwtl
aas
daa
negb
cmc
test
in
mov
mov
rol
cs
jg
es
lahf
xchg
lcall
fadds
psubd
mov
dec
data16
xor
add
xchg
in
push
sub
lods
shlb
and
lock
adc
in
cwtl
sbb
mov
lods
scas
lods
popf
jno
incb
aam
inc
cs
push
push
push
scas
mov
mov
sub
inc
pop
add
lcall
jecxz
sub
mov
daa
push
insb
lcall
daa
inc
push
sarl
mov
loope
test
mov
std
dec
sbb
cmp
dec
adc
lock
in
je
movsb
sbb
mov
jl
xchg
pop
les
inc
pusha
pop
pop
ret
lret
insl
fcomps
inc
aad
xchg
jne
pop
mov
dec
mov
add
daa
jmp
or
mov
int3
push
push
pop
lret
cmp
leave
shlb
nop
mov
dec
mov
or
in
or
stc
jb
aaa
push
mov
pushf
mov
shlb
fidivl
lret
and
fwait
jnp
mov
rol
sub
add
push
xchg
jns
lea
push
and
xor
push
dec
clc
ljmp
roll
repz
mov
mov
sbb
cmpsb
xor
push
cmpb
addr16
scas
jg
push
insb
pop
in
add
fwait
popf
nop
and
push
jne
enter
aad
xchg
test
jnp
mov
jle
mov
mov
lret
and
pop
addr16
mov
pop
lods
dec
movsl
aad
xor
test
es
pop
inc
mov
cmc
mov
xor
push
js
sbb
in
leave
or
pusha
sbb
or
cmp
aam
push
cli
icebp
cmp
or
inc
pop
cwtl
mov
mov
cltd
mov
lahf
mov
cmp
andps
mov
cmp
or
iret
or
mov
cmp
idivb
dec
inc
sbb
je
sbb
xchg
sub
mov
push
push
pop
add
mov
jae
int3
pop
xor
jl
in
cld
bound
mov
cmc
insb
cmc
jp
push
jge
inc
or
pop
sub
mov
push
int3
sub
lock
test
push
out
xchg
out
lea
inc
adc
leave
insl
mov
mov
xlat
fucomip
in
std
mov
pushf
mov
mov
add
lcall
xor
mov
popf
ljmp
and
int3
lds
add
pop
and
inc
icebp
push
xlat
dec
pop
xor
push
je
fs
mov
pop
icebp
lea
scas
sbb
ret
outsl
cmp
mov
mov
arpl
xchg
xchg
or
imul
test
inc
cmc
mov
push
mov
mov
insl
xlat
loopne
fimuls
add
inc
scas
sub
add
mov
scas
inc
pop
add
call
cmp
fcoms
pusha
sub
inc
mov
mov
jecxz
cltd
sub
dec
jns
pop
add
add
imul
aam
inc
push
ja
xor
aad
test
push
imul
fimuls
adc
xor
inc
pop
jle
mov
cmp
fstpt
stos
lock
or
iret
jne
mov
adc
in
add
pop
adc
pop
jne
sub
lahf
fdivr
fcmovb
lret
add
inc
scas
xor
out
sbb
pusha
pushf
and
push
cli
or
push
jmp
sti
push
clc
or
pop
and
mov
xchg
pushf
arpl
inc
ret
test
test
add
lods
lods
inc
push
mov
lret
xchg
jns
in
jne
cmc
fcmovnb
mov
addr16
mov
mov
lds
sbb
repnz
or
loop
lods
cmpsl
xchg
outsl
test
sub
dec
imul
adc
jl
notl
sbbb
rcll
movl
stos
int3
sub
lds
sbb
mov
repz
popa
dec
sbbb
add
and
cltd
fcom
pusha
ret
lret
test
push
aam
dec
rcl
mov
call
cmc
and
mov
jbe
outsl
push
das
lahf
test
add
adc
dec
and
xor
shlb
and
push
hlt
push
fnstenv
xchg
cli
test
mov
outsb
sub
test
jge
mov
enter
mov
popa
outsb
adc
mov
stos
test
sub
adc
fstpl
pop
movsl
rcrl
movsb
mov
repz
stos
and
int3
add
mov
push
jo
jl
xchg
or
aam
iret
lock
dec
cld
gs
in
shlb
and
mov
rcrb
add
mov
notl
mov
pop
out
inc
pop
push
fsubl
adcb
mov
jo
in
call
xchg
jbe
ror
fucomi
decl
add
cld
enter
lods
popf
fcmovu
daa
push
lea
mov
xchg
xchg
mov
or
lcall
js
das
stc
rolb
js
aaa
ds
das
movsb
aas
push
lods
dec
sub
mov
cmc
pop
nop
jo
fisubs
mov
lahf
fstpt
dec
push
aas
mov
int
fcoml
push
in
push
push
push
and
out
daa
sbb
adc
inc
cmc
out
dec
pop
xorb
mov
sti
js
gs
or
imul
call
mov
cld
filds
jmp
mov
in
and
pop
fstl
push
mov
dec
sbb
adc
jp
jmp
popa
rclb
pusha
and
out
mov
fwait
incb
add
cli
repnz
cmpsb
lods
or
nop
xor
sub
mov
jg
imul
jae
sbb
in
push
inc
xchg
fwait
ret
push
mov
sbb
add
leave
push
cwtl
loope
jg
sub
mov
cmpsb
and
push
pushf
and
mov
in
aaa
fildl
mov
rolb
cmp
add
lret
in
outsl
stos
jl
out
adc
cmpsl
fistpl
jl
xor
scas
or
fstp
push
popa
dec
fisubrl
in
mov
mov
xchg
xor
mov
stos
fistps
lds
xor
das
jb
pop
adc
mov
xor
pop
loopne
jo
and
mov
pop
sbb
cmp
fs
jbe
std
mov
rorl
outsl
cmpsl
or
pop
xchg
loope
jb
mov
and
cmp
pop
loope
mov
dec
jmp
adc
adc
and
dec
cmc
lock
sub
ds
outsl
lods
das
les
ret
pop
add
xchg
sub
add
push
test
mov
push
jecxz
xchg
or
dec
mov
cmp
nop
mov
push
or
aam
cmp
inc
push
push
push
or
xchg
icebp
xchg
sub
in
pop
adc
sub
lret
aas
sub
pop
lds
dec
ja
mov
pushf
cmp
and
push
test
imul
mov
xchg
jbe
out
and
movl
hlt
iret
loopne
cmp
andl
jecxz
inc
xor
fs
int3
in
jnp
fisttpl
popa
into
shll
icebp
lea
jl
pop
sub
adc
dec
and
test
mov
xor
dec
out
dec
scas
loopne
push
repnz
xor
les
leave
mov
mov
push
int3
movsl
jg
scas
push
or
testb
cmpsb
mov
sbb
iret
lea
imul
dec
xor
jns
push
iret
xchg
pop
repz
mov
lods
pop
bound
push
sbb
xor
mov
xor
stos
jge
stos
nop
jns
add
cld
gs
or
mov
dec
xchg
inc
mov
stc
outsl
mov
xchg
jp
inc
sbb
or
jae
jmp
mov
test
push
mov
inc
je
xor
and
and
mov
cmp
jge
cmp
cmp
dec
fs
cmpsl
mov
dec
ja
sub
jmp
cmp
jbe
cmp
ret
js
xchg
sbb
repz
xchg
fwait
adc
movsl
mov
sarb
mov
fsubs
sub
int
sub
push
out
jmp
mov
popa
outsl
mov
inc
mov
jecxz
pop
leave
and
sti
inc
lfs
jno
sti
das
pop
xchg
fs
fcomp
aam
adc
or
outsl
pop
popf
pushf
idivl
fwait
shlb
mov
pusha
mov
inc
add
shlb
popf
dec
inc
push
shlb
and
push
aaa
cmpsl
push
cmc
jp
jae
xchg
cmp
and
ljmp
nop
stos
dec
das
mov
jp
sub
jecxz
sbb
adc
jecxz
bound
in
loope
xchg
addr16
xchg
orl
sub
test
icebp
mov
dec
or
and
mov
sbb
gs
add
test
in
mov
pop
leave
and
addr16
mov
or
push
sub
jno
les
jge
cwtl
pushf
lret
fisubrs
fwait
sub
pcmpgtd
sbb
aaa
insb
loope
mov
fcos
int
jg
xchg
mov
cmp
fnstenv
mov
out
cwtl
mov
push
dec
push
outsl
push
shl
lock
jns
add
loop
sub
or
push
fcomp
mov
push
enter
lahf
mov
scas
sti
xor
mov
dec
mov
dec
pop
outsb
nop
mov
mov
stos
clc
push
rep
adc
sub
loope
or
dec
mov
adc
out
push
adc
pop
icebp
aaa
aad
jns
pop
sbb
adc
mov
popa
fs
mov
cmp
rcr
test
out
mov
dec
pusha
push
xchg
xchg
ret
add
and
pop
rcrb
xor
mov
xor
popa
push
ja
pusha
leave
stc
movsl
push
cli
sti
push
repnz
clc
mov
mov
pop
inc
test
into
cmp
popf
imull
sub
cld
pop
iret
xor
xchg
aaa
jae
leave
and
pop
jg
adc
add
repz
repz
adc
out
jge
mov
pop
mov
loop
lret
xor
ljmp
and
loope
cmp
ds
mov
daa
pop
lcall
jae
pusha
or
adc
or
jp
push
jmp
dec
or
mov
dec
and
icebp
out
lods
inc
das
pop
jge
in
mov
int
mov
pop
mov
aam
dec
jne
push
orb
ja
mov
inc
pop
faddp
xchg
outsb
mov
mov
mov
push
cwtl
adc
test
into
sahf
or
sub
shll
ficomps
iret
push
push
xchg
pop
popa
pop
hlt
mov
fnstcw
mov
fisttpll
sbb
cmp
popl
ja
fisubs
mov
xchg
lods
cmp
out
orl
inc
leave
or
mov
js
int
insb
faddp
inc
push
and
das
test
push
or
sbb
je
subl
aaa
cld
or
lahf
push
dec
sub
or
xor
bound
xchg
pop
xchg
pop
jo
and
adc
test
jecxz
outsb
mov
cmp
leave
cmp
dec
mov
add
mov
push
or
sti
int
jecxz
in
pusha
xor
arpl
sub
lock
fcomip
or
dec
pop
mov
xor
cli
push
and
xchg
lret
and
loopne
movsl
sar
iret
cmp
stos
cs
add
push
sarb
inc
pop
xchg
sub
sbb
mov
js
lods
lods
test
pushf
lahf
scas
js
pop
xlat
push
insl
pop
stos
dec
imul
add
pusha
pop
orl
mov
jb
push
jecxz
test
fstps
clc
xor
mov
inc
or
add
int
jmp
ss
test
insl
or
mov
dec
and
jo
sbb
jo
jo
push
xchg
jmp
xchg
cltd
into
out
into
rorl
mov
data16
testb
adc
cli
dec
cmpsl
int3
push
mov
cld
add
or
push
ret
cmp
xchg
xor
mov
add
and
fidivs
roll
mov
push
in
aam
pop
mov
jne
stos
rcrl
sub
arpl
cmpsb
rolb
mov
divl
lcall
outsl
mov
xor
and
push
xor
mov
fsts
rorb
je
xor
mov
ficoms
pop
pop
xchg
sub
loopne
in
add
icebp
mov
and
iret
insb
cmp
xchg
push
setns
inc
mov
sbb
xchg
add
cmc
xchg
fisubl
filds
push
fdivrs
hlt
sub
adc
cli
mov
and
pop
hlt
xchg
orl
je
and
mov
push
adc
jno
rorl
mov
xchg
outsb
sub
and
aas
push
jg
pop
push
jno
inc
xor
loope
insl
fcmovnb
cmp
les
or
sbb
shrb
adc
mov
dec
or
mov
mov
pushf
dec
aam
dec
adc
cmp
scas
lret
mov
lret
adc
push
push
mov
or
or
mov
and
pop
dec
jb
jle
add
aad
and
inc
rorl
pop
stos
stos
lahf
mov
iret
test
fisubl
subl
insb
das
add
xchg
pop
adc
sub
add
pusha
loope
adcb
xor
outsl
movsl
xchg
int3
or
clc
add
test
shrl
pushf
adc
push
or
jmp
xchg
outsl
fdivl
xor
std
pop
bound
ja
pop
fst
rcrl
fcoml
push
call
adc
xor
jnp
ret
sub
pop
add
fidivs
cmc
pop
filds
jecxz
adc
cmp
es
xadd
xor
subb
scas
aad
test
push
dec
nop
loop
xchg
mov
pop
add
jmp
hlt
push
movsl
ficomps
mov
stos
push
inc
xlat
inc
add
jg
aad
mov
jg
dec
pop
cvttps2pi
adc
push
leave
gs
and
scas
enter
popf
outsb
mov
sbb
test
add
jnp
aad
sub
adc
lahf
lcall
in
lahf
jmp
push
or
mov
clc
dec
xor
daa
and
adc
iret
in
xor
lea
adc
repz
push
jo
ss
ret
jne
mov
inc
xor
fisubrl
adc
push
or
outsl
test
sbb
int
add
mov
fcmovnbe
add
lds
pop
and
mov
sub
jo
add
cmp
fistpl
sbb
hlt
jne
pusha
dec
js
dec
popf
dec
jge
popl
lea
stos
dec
out
jmp
sbb
and
in
imul
add
push
xchg
xor
add
cmp
inc
sub
adcb
xor
lret
popf
std
or
xor
fwait
and
inc
push
iret
outsb
lahf
xchg
jmp
xor
lea
xchg
and
pop
xor
es
adc
addr16
push
mov
pop
pop
leave
shlb
ss
leave
sarb
dec
jg
adc
pop
ss
lcall
scas
mov
add
or
jae
ss
shll
pusha
mov
aad
test
sub
call
je
pop
dec
test
pop
aaa
push
jb
or
cmp
jmp
outsl
cmp
sub
pop
ret
in
sub
cmp
sub
rcll
inc
lahf
jecxz
mov
pop
dec
xor
insl
outsb
xor
adc
or
rcrb
push
icebp
ds
sbb
push
lcall
dec
xchg
mov
inc
fmul
sbb
push
jmp
add
jg
into
cli
push
pop
icebp
cld
test
rorl
ds
dec
sbb
ja
or
cmp
icebp
jecxz
movb
fs
jae
adc
mov
cmp
xchg
pusha
test
insl
sub
push
cmpsl
insb
movsl
or
mov
inc
inc
std
or
pusha
jecxz
sbb
jl
mov
and
inc
loopne
fwait
addl
push
sbb
out
push
out
push
repz
mov
inc
cmp
or
fnstcw
rol
jge
repz
add
sbbl
jmp
jecxz
leave
divl
in
pop
insb
push
sbb
stc
xchg
sub
sub
dec
sub
imul
adc
inc
lock
add
pop
subb
hlt
cltd
out
xchg
popf
or
in
sub
xchg
lea
dec
xchg
lahf
pushf
cmp
and
pop
fldenv
out
inc
sub
sbb
pop
in
sahf
repnz
jb
ds
sub
ficompl
movsl
fsubrs
cld
cmp
xchg
pop
add
pop
jae
push
shlb
xor
test
add
pop
inc
fisubrl
arpl
stc
push
mov
push
adc
sub
inc
push
test
arpl
lods
loopne
cmp
and
shll
or
mov
xor
scas
inc
scas
iret
int3
xor
push
sub
dec
xchg
addr16
rorl
enter
rclb
adc
fisubrl
lahf
frstor
fwait
push
pop
add
lock
fcompl
ljmp
shrb
add
popa
sbb
in
bound
movsl
push
mov
dec
dec
cmp
sbb
imul
nop
in
adc
pop
shll
xor
outsb
cmp
mov
popl
movb
nop
cltd
xor
imul
inc
cmp
adc
fldt
cmp
lahf
jl
js
adc
outsl
das
test
les
pop
adc
icebp
fwait
mov
adc
out
in
inc
xchg
repnz
add
dec
add
adc
pusha
imul
and
jo
cmpsb
jae
ds
pop
or
sub
pop
cwtl
int3
jo
rcr
or
push
std
xor
mov
pusha
loop
clc
rorl
sub
push
push
iret
gs
sbb
jle
add
adc
pop
cld
test
push
fsubl
push
mov
mov
push
add
loope
aad
add
leave
xchg
dec
faddl
xchg
jnp
lock
out
daa
mov
ds
cli
leave
in
sbb
add
into
sub
in
sti
enter
cmp
mov
and
call
mov
mov
jb
sahf
jbe
sbb
sub
adc
push
roll
sbb
xor
cmp
shll
in
mov
push
mov
dec
cwtl
mov
adc
and
ja
orb
pushf
xchg
cmp
pop
popf
jae
xor
jmp
add
jecxz
add
stos
pop
imul
mov
sbb
sub
adc
ret
clc
and
adc
into
js
aam
negl
aad
inc
xor
mov
popf
jns
ljmp
add
sbb
jae
add
jns
xchg
push
cwtl
into
jne
pop
push
nopl
push
xlat
or
mov
pop
add
insb
inc
fsubrs
in
shlb
inc
jg
adc
fiadds
push
decl
ficomps
pop
ss
mov
sbb
mov
loope
loope
inc
mov
xor
lock
in
aad
out
sbb
jmp
test
or
jmp
dec
lods
mov
push
test
push
adc
enter
pop
xchg
xchg
loope
out
out
xor
stc
sbb
cltd
mov
push
inc
or
push
mov
dec
mov
xor
jge
ja
pop
or
sarl
xchg
dec
pusha
pop
push
pusha
das
mov
mov
xchg
mov
cs
je
push
in
xor
decl
or
adcl
fbstp
push
sub
xor
movl
in
mov
andl
repz
xacquire
xor
xor
xlat
repnz
push
cmp
dec
or
leave
orl
dec
inc
adc
std
push
pop
jle
lods
test
xchg
fldenv
iret
sbb
and
adc
iret
and
test
ja
roll
mov
in
loope
or
jne
mov
icebp
ljmp
in
icebp
arpl
pusha
sar
mov
int3
arpl
cmpsl
fsub
push
ret
test
sub
jae
push
pushf
enter
push
push
sarl
orb
paddusw
mov
add
fcomps
dec
sbb
sti
cmc
ja
cltd
lock
sbb
mov
jno
inc
nop
int
lahf
orl
mov
scas
cmp
add
xchg
lock
arpl
xchg
insb
inc
enter
arpl
test
cltd
fbstp
popf
ror
leave
mov
add
xor
push
out
and
out
sub
pop
scas
es
je
nop
fistpl
fldcw
mov
sub
mov
dec
ds
outsb
inc
and
into
lret
test
mov
sub
adc
cmc
daa
ret
sar
popf
into
movsl
leave
sbb
push
sti
sahf
mov
jge
xor
cld
add
dec
stos
subw
cmp
aam
add
jp
test
out
scas
cmp
scas
scas
jb
pusha
cltd
xchg
sahf
push
or
in
inc
addr16
mov
xchg
sarb
sti
stos
add
mov
push
jle
mov
sbb
aas
sti
mov
sbb
cli
ret
mov
fwait
mov
cmp
sbb
mov
outsb
mov
xchg
inc
shlb
mov
lds
daa
in
jb
adc
mov
or
xchg
sbbb
fnstenv
or
add
icebp
or
sbb
push
scas
aam
cmp
xchg
adc
mov
mov
and
or
xor
mov
cmp
cmpl
nop
jge
push
jmp
rolb
push
jg
repz
mov
inc
mov
cmp
mov
stos
cmp
dec
inc
sbb
sbbl
pop
in
pop
faddl
cmp
jl
sub
xchg
imul
push
es
xor
sbb
mov
inc
movl
in
jl
push
dec
mov
push
cwtl
xchg
pop
fs
les
cwtl
iret
dec
jmp
rcll
loopne
enter
mov
test
repnz
inc
pop
push
imull
sti
arpl
jnp
or
scas
add
cmpsb
nop
dec
xchg
mov
fstps
push
lahf
in
xchg
and
jecxz
ljmp
adc
adc
and
and
bound
arpl
movsl
mov
lret
jge
scas
lret
pop
cmpsb
cs
pop
sarb
in
xchg
lds
mov
sub
rcrb
inc
add
sub
test
arpl
cli
xchg
ja
sub
push
loop
sub
in
arpl
movsl
or
mov
test
cmpsb
js
inc
cmpsb
jb
addr16
add
pushf
xor
inc
dec
mov
iret
lret
ffreep
jp
mov
adc
imul
lds
jnp
cld
xor
add
stc
cmpb
xchg
ret
in
mov
fld
fmuls
add
and
jo
or
mov
jb
cld
dec
lea
sbb
add
arpl
dec
cmp
andb
inc
and
jne
out
les
lds
sub
xor
cmp
push
lods
push
mov
clc
das
daa
xchg
push
push
push
sub
cmp
lret
cltd
jae
mov
mov
cmp
loope
mov
cld
shl
rolb
jbe
outsl
mov
sbb
pop
jp
lcall
inc
sbb
fidivrl
xchg
cli
popf
imul
call
ret
out
fwait
sub
cmp
dec
cld
fldenv
cmc
pushf
mov
aam
hlt
pop
call
jae
xlat
ss
and
pop
and
int
psrlq
mov
lret
mov
fistps
repnz
jno
mov
out
adc
f2xm1
stc
daa
push
shrb
lret
mov
dec
leave
rolb
imul
test
rcr
push
push
mov
pop
subb
mov
push
fsubrs
pand
aad
push
test
popa
inc
loop
mov
das
or
sub
imul
scas
mov
mov
icebp
int
mov
jae
fbstp
inc
scas
sbb
jo
xchg
test
or
adc
dec
push
mov
jbe
lret
push
repnz
je
cmpsl
iret
adc
or
jl
mov
outsl
and
fldl2e
xorb
jg
dec
icebp
sub
test
add
cmpsb
lods
jb
inc
lea
or
aad
lock
dec
xchg
adc
lea
enter
inc
adc
cmpsb
mov
jnp
out
int3
mov
lock
cmp
xchg
pusha
xorb
xor
int
mov
test
aad
sbb
ss
sti
xchg
fucomi
pop
cli
or
rolb
das
sub
push
popf
daa
repz
adc
mov
pmulhw
outsb
sbb
loopne
into
mov
hlt
shr
push
inc
aad
cmp
stos
xchg
das
shr
out
repz
lods
in
jae
int
inc
jnp
jns
sahf
rclb
bound
orl
sbb
cmp
ss
jmp
negb
cltd
movsb
stos
sub
sbb
hlt
dec
fs
pop
add
scas
dec
fcompl
cmp
sub
or
mov
push
aaa
jae
xchg
fwait
cmpsb
orl
cmc
out
cs
cmp
jo
and
lcall
jo
jp
fs
test
fistpll
mov
les
or
call
push
loop
cmp
sub
ret
fadd
sub
in
lods
pop
mov
xor
add
in
rcl
dec
loopne
lcall
outsl
mov
arpl
das
insb
lods
or
mov
std
jg
sbb
xor
ds
lods
xor
sbb
and
mov
or
lds
in
jne
mov
jns
sub
jnp
cmp
cmc
add
fs
insl
jae
inc
mov
int3
fsubrl
out
lds
pop
jnp
mov
hlt
repnz
arpl
push
pusha
movsb
mov
pop
sti
enter
mov
les
mov
dec
sub
addr16
movaps
mov
loop
pop
dec
mov
scas
push
sub
rcll
inc
fsubp
lcall
xchg
sarl
clc
inc
cmp
mov
or
loope
lret
mov
cmpsl
xor
clc
mov
jb
pxor
insl
mov
outsl
jge
test
mov
clc
shl
xchg
jo
movsb
fisubrs
bound
adc
push
fadds
mov
mov
adc
daa
inc
stos
call
rcr
dec
mov
sub
mov
pop
mov
sahf
xchg
sbb
out
mov
xchg
test
xlat
mov
cmp
stos
or
mov
add
movsb
leave
addr16
dec
pop
dec
hlt
vmwrite
in
cli
out
adc
inc
xchg
or
xchg
ja
push
mov
aas
or
fsubl
inc
push
adc
dec
fiadds
hlt
out
inc
fidivl
mov
fisubrs
cmpsl
fcomip
fdivl
push
dec
lcall
test
push
outsb
insl
mov
jmp
fcompl
pop
out
cmpsb
mov
inc
xchg
sbbb
shrb
adcb
mov
sahf
ljmp
inc
or
inc
pop
mov
leave
and
mov
cmp
xchg
add
mov
inc
faddp
sbb
mov
pop
arpl
dec
xchg
pop
ja
and
push
add
adcb
inc
sub
js
imul
push
test
mov
push
sar
ret
movsl
cmp
aas
sub
jmp
mov
filds
jle
cmp
jle
mov
mov
loope
jle
movsl
aaa
or
push
fistpll
jo
mov
repnz
jmp
add
pop
pop
cmp
cmp
out
inc
mov
cmpsb
lcall
out
add
mov
xor
mov
orl
mov
pop
pop
fildl
mov
test
mov
push
and
shll
fimuls
pop
sbb
jno
xchg
dec
pop
addr16
push
xchg
mov
sub
js
dec
leave
mov
dec
pop
push
or
push
mov
sub
dec
push
jp
and
out
cmpsb
xchg
loopne
pusha
sbb
push
aad
or
sqrtps
aas
add
mov
mov
and
in
pop
pusha
daa
push
and
sub
lea
icebp
xchg
sahf
pusha
jp
sub
mov
stos
pop
or
cmp
add
push
mov
insl
add
int3
jb
sub
mov
nop
lret
dec
and
test
xor
mov
sub
sbb
dec
fs
mov
stos
leave
sbbb
xchg
pop
inc
jmp
orl
ret
mov
jb
dec
xchg
nop
repz
adc
mov
aaa
add
mov
jne
lret
inc
out
cld
iret
in
dec
xchg
scas
and
cmp
jg
lds
cmp
pop
mov
sahf
xchg
cli
loop
test
insl
int
movsl
and
ds
pop
or
push
loop
mov
dec
add
div
mov
xchg
xchg
lods
pop
jns
fimull
cmp
dec
mov
adc
rol
push
cmp
mov
mov
or
dec
ror
movsb
mov
and
sarl
loopne
inc
mov
pop
repz
adc
jb
xorb
add
add
sub
scas
mov
push
sub
arpl
cld
loope
sbb
test
inc
push
push
inc
orl
lods
cld
lcall
xchg
repnz
es
or
imul
xchg
aam
fiadds
scas
fdivrs
lods
and
ret
or
sbb
jmp
inc
xchg
lahf
inc
sbb
dec
or
subb
fsubrp
dec
mov
push
pop
les
and
dec
scas
add
orb
push
xor
into
sbb
test
scas
push
cmpsl
ficomps
inc
scas
jnp
movsb
cld
pop
add
rcrb
repz
fwait
mov
and
xor
sbb
dec
sub
sbb
inc
push
sub
outsl
mov
jnp
lahf
fwait
lret
sub
shrl
mov
pop
addl
jmp
shll
lret
int
mov
xchg
mov
lcall
std
es
jmp
rorl
add
sbb
mov
sbb
stos
sarb
popa
ret
fwait
je
cwtl
fldcw
rolb
inc
repz
lret
mov
clc
sbb
nop
iret
mov
push
jb
in
lds
jg
lock
test
fidivl
loopne
add
and
sarb
and
sub
repz
jecxz
xchg
sub
adc
dec
and
aam
inc
jo
push
cltd
cmp
dec
f2xm1
dec
mov
inc
inc
lods
jmp
cs
mov
mov
cmovg
add
orl
pop
gs
pusha
pop
fstpt
pushf
jmp
add
pop
pop
sbb
subb
sub
test
add
mov
insb
rcl
dec
rcl
mov
js
movsb
jnp
icebp
xor
lods
cmp
cwtl
fistpl
sbb
jns
and
mov
pop
cld
clc
mov
test
xor
imul
into
addr16
mov
sarl
mov
mov
or
xchg
iret
cmc
sub
jnp
inc
jge
add
mov
cs
xchg
xchg
mov
int3
jle
insb
imul
xor
subb
xlat
cmp
in
fwait
lds
xorl
js
cmp
sbb
negl
int
lret
mov
jp
and
imul
dec
fstpt
stos
pop
and
xor
sti
adc
pushf
inc
inc
int
gs
call
popa
rcll
cmc
fdivs
sub
test
cmc
xchg
cmpsb
das
stos
ret
mov
jnp
stos
mov
cltd
push
mov
stc
fildl
adc
arpl
cmpsb
movsb
pushf
mov
mov
xchg
lea
dec
xchg
std
jbe
loope
test
sbb
lea
sub
scas
icebp
je
shrb
jb
push
filds
sbb
add
out
jae
cltd
xlat
pusha
lahf
mov
aas
adc
jmp
jno
popf
lods
insl
pop
dec
sbb
les
mov
adc
fimuls
fs
outsl
gs
push
sbbb
scas
arpl
or
mov
dec
fisubs
pop
sarb
lock
cwtl
cmpsl
popf
cltd
sub
mov
xchg
sub
cli
xchg
xchg
leave
pop
fstl
jno
sub
xor
xlat
sbbl
push
loope
xchg
xchg
sub
cmp
inc
fsubrl
xchg
lock
add
mov
insb
stos
dec
lods
test
sbb
xchg
pop
and
cli
cwtl
cmpsb
adcl
jae
push
and
pop
cwtl
mov
stc
dec
push
inc
mov
sarl
push
push
dec
inc
mov
daa
sbb
inc
xor
adc
xor
iret
or
dec
leave
movsl
test
test
or
icebp
xor
movsb
cld
repz
cli
inc
lods
loop
push
loop
mov
cs
cmp
in
jle
ss
xchg
enter
popaw
add
fdiv
scas
adc
xlat
inc
inc
mov
xchg
sbb
inc
push
or
loopne
push
adc
cmpl
sub
lret
fildll
sub
mov
jb
movsb
mov
push
sbb
fimuls
lret
hlt
insl
movsl
pop
mov
insb
fistl
pushf
push
mov
jmp
mull
adc
pushf
mov
das
fidivl
xchg
inc
cli
dec
iret
sbb
sbb
cmp
test
inc
jnp
testl
insl
fs
inc
iret
rolb
or
fimuls
fidivrs
xchg
mov
ja
scas
or
jp
dec
ljmp
in
xor
rolb
lret
sbb
jo
je
cs
adc
cld
xchg
inc
lds
inc
push
and
aad
xor
and
popa
xchg
cmp
push
add
pop
dec
push
cmp
adc
in
sbb
adc
push
stc
cmp
aad
inc
sub
jl
inc
and
std
jg
push
mov
and
push
jl
and
cmp
adc
div
lea
xlat
jmp
xlat
ror
mov
stos
pop
fisubs
xchg
in
fmull
cmovb
cwtl
inc
and
bound
es
and
or
sub
mov
and
fwait
lea
mov
test
fists
rcll
andl
daa
mov
pop
mov
and
out
jecxz
shl
push
push
jbe
xor
pop
std
cs
cld
adc
sub
xchg
add
add
sub
mov
lods
pop
mov
lods
cmp
mov
in
mov
mov
inc
ljmp
jecxz
add
nop
sub
popa
push
out
enter
and
xor
jbe
negl
push
jg
and
data16
fcomps
adc
jp
adc
fmuls
adc
fnstcw
dec
test
push
sbb
push
inc
inc
dec
imul
das
pop
xor
out
popa
gs
sbb
sbb
in
xor
fadd
rolb
jbe
sti
mov
pop
ret
int
cmpsl
mov
mov
adc
in
adc
inc
dec
push
clc
ret
cmpsl
mov
out
cmp
imul
scas
ret
int
mov
addr16
jo
psubusb
pop
cmp
shll
gs
jbe
mov
pop
dec
pop
sub
or
mov
push
push
jno
pop
imull
and
mov
push
dec
insl
jb
pop
cmp
addr16
push
int3
hlt
mov
mov
into
std
inc
lret
xor
test
adc
into
lea
cmpb
dec
sub
xor
mov
popf
icebp
fstl
test
xchg
mov
mov
rorl
cwtl
or
add
push
cmc
adc
ds
insb
dec
add
sti
xlat
stos
ret
push
mov
mov
xor
mov
cmc
push
fldl
add
sub
mov
add
xor
mov
push
sub
in
outsl
push
repz
adc
icebp
jmp
call
scas
pop
lods
loopne
rol
adc
test
or
bound
in
dec
cli
xchg
and
jmp
xor
jmp
nop
or
sbb
scas
sub
add
jae
lret
stos
scas
xchg
ret
xchg
lds
inc
andb
mov
xor
jnp
rcrb
test
mov
mov
jae
push
in
push
jbe
fmulp
and
call
adc
jns
out
push
mov
xchg
les
jp
lods
mov
stc
push
ja
push
xor
icebp
stos
pop
ds
pop
std
jg
in
dec
sub
adc
mov
mov
mov
xor
scas
mov
mov
lods
xor
or
es
jge
test
in
jg
or
aaa
icebp
icebp
cmp
xchg
add
cmc
mov
jbe
sub
hlt
orb
scas
pop
pop
gs
sub
mov
jecxz
pop
ret
push
or
lahf
in
daa
mov
sub
orl
sbb
cltd
push
fstpt
add
jae
adc
and
icebp
lcall
pcmpgtw
stos
arpl
sub
inc
std
pop
mov
fcomps
in
fs
push
lds
ret
pop
sub
and
push
movq
stc
roll
fidivs
cmp
xorl
cmpsb
xchg
mull
xor
lcall
inc
loop
or
xor
std
test
shlb
gs
cmp
push
in
les
icebp
mov
add
ja
cmc
test
pop
pop
int3
ret
mov
inc
push
jp
imul
dec
jae
mov
test
cmp
pop
dec
aaa
imul
push
push
mov
pop
or
fdivrp
in
jge
loopne
push
pop
inc
pop
pop
sub
or
ss
dec
out
sub
xor
mov
nop
inc
adc
clc
out
cs
test
stos
stos
stc
je
sub
xchg
adc
push
cmp
cmpsl
ja
add
and
lods
pop
sbb
jmp
jo
cli
sbb
adc
jae
out
xchg
subb
dec
test
xor
mov
cltd
pop
dec
in
mov
mov
bswap
mov
xlat
sbb
nop
jg
fstpl
sub
cli
push
call
sub
mov
xor
inc
nop
dec
inc
sahf
jmp
push
adc
and
int
jae
xor
xor
jmp
iret
in
cmp
popf
push
es
or
cmp
mov
repz
jbe
inc
fcomi
push
repz
leave
dec
mov
pop
test
pop
sbb
sub
cmp
cmp
popf
mov
and
or
aaa
repnz
inc
jb
or
fstpt
cltd
lret
scas
mov
in
xor
ret
xchg
dec
sbb
dec
lcall
adc
js
lret
mov
xor
jno
cmpsl
mov
cmp
int
bound
outsb
les
and
or
cmpsb
and
icebp
dec
int
popf
sub
lahf
xor
cmp
loope
add
test
fsub
fnstcw
adc
sbb
or
mov
inc
mov
je
jl
add
out
nop
ss
int
jg
push
pop
xor
jnp
movsl
xchg
lods
sub
mov
xlat
inc
jns
into
mov
jle
fiadds
cmc
cmp
or
jns
push
cmp
nop
sti
add
outsl
ss
mov
cmp
ret
clc
push
inc
je
adcb
xor
sahf
xchg
cmc
shll
das
js
aas
cmp
pop
rolb
les
xchg
in
scas
push
sarb
sub
adc
lret
mov
sbbl
xor
cltd
mov
and
mov
stos
out
and
push
into
fstpl
lods
jo
movsb
mov
lret
inc
cmp
pop
cs
js
inc
fstp
cmpsl
es
fists
sbb
test
lahf
cmp
push
xchg
jnp
mov
stos
xchg
add
lcall
sub
pop
aas
sub
pushl
testb
into
mov
addr16
aad
shrb
out
iret
enter
pop
or
scas
push
fildl
lret
cs
cltd
out
jmp
pop
push
dec
lods
dec
adc
or
ja
jb
mov
jl
xchg
mov
adc
add
mov
push
lea
addb
aas
daa
xchg
dec
cmc
das
jno
and
xchg
sahf
lods
sbb
lea
add
shll
dec
sbb
jns
add
cltd
lds
addr16
add
leave
inc
mov
pusha
inc
inc
xlat
adc
jecxz
test
das
sbb
int
fwait
iret
adc
inc
out
decb
sub
std
xor
sub
imul
xchg
stos
ret
lahf
xchg
stos
dec
xchg
aas
cmp
dec
cld
dec
lahf
std
jne
ret
les
and
outsb
sub
jae
xchg
mov
scas
mov
cmp
or
mov
xor
push
das
pop
jns
cmp
enter
movsb
enter
outsb
sti
push
lahf
or
push
popa
push
scas
imul
or
pop
les
fmuls
jnp
and
scas
cmpsl
ret
imul
add
xchg
jg
les
xchg
shlb
mov
adc
inc
mov
push
jb
lock
test
or
or
inc
sbb
mov
pop
sub
int3
mov
cmp
idiv
pop
in
pop
aad
test
ret
add
les
push
roll
mov
mov
push
outsl
dec
pop
loope
xchg
cli
or
and
inc
outsl
add
test
add
in
aam
into
outsb
outsb
mov
xor
js
and
mov
mov
xchg
andb
rcrb
adc
mov
mov
sub
mov
xor
pusha
jns
push
mov
repnz
sbb
cmpl
xor
push
push
ficomps
pop
cs
ja
push
insl
gs
sti
cmp
sar
adc
repz
jno
jb
dec
cmp
and
adc
push
xchg
stos
in
lcall
xchg
adc
cmp
lcall
fs
sbb
rol
mov
mov
orl
or
lahf
fcomi
sbb
inc
mov
rcrl
gs
xor
jbe
xlat
or
inc
fs
js
mov
rol
jbe
mov
dec
hlt
fwait
repnz
push
pop
mov
call
sub
push
mov
loop
lods
fcmovbe
sub
fwait
lahf
jp
pop
in
or
adc
and
das
adc
pop
dec
xchg
pop
fildll
repz
xchg
sub
jne
mov
mov
icebp
jae
ljmp
and
mov
daa
loope
clc
push
jle
stos
xor
pop
pop
addl
dec
cmpsb
mov
xor
aas
ficoms
dec
mov
dec
add
jnp
es
roll
inc
sbb
pop
xchg
idiv
hlt
lea
sbb
xchg
dec
fbstp
ret
stos
es
jmp
filds
xchg
push
aam
add
outsl
mov
lods
int
fwait
int
je
leave
xchg
jae
jne
jecxz
jb
xor
jbe
rdmsr
jns
repnz
insb
popa
jle
imul
int
cmc
js
adc
xchg
xchg
ss
faddl
sbb
nop
cmpl
dec
mov
mov
cbtw
jnp
push
cmp
aam
les
mov
adc
mov
clc
push
push
loopne
or
fmull
das
push
sub
pop
jle
test
enter
rorb
inc
pop
aad
inc
and
mov
jge
stos
jbe
push
xlat
push
mov
mov
or
dec
jl
lahf
pop
dec
or
repnz
cltd
mov
daa
ret
push
lea
imul
xchg
loope
incl
cmc
int3
sbbl
movsb
stc
mov
or
jne
test
add
sahf
mov
pop
mov
jbe
scas
xor
test
adc
je
cmpsl
gs
jae
xorl
in
jge,pt
push
pop
add
mov
push
mov
mov
dec
loope
incb
sbb
mov
push
jns
xor
arpl
aaa
leave
fldt
in
test
lsl
xor
xchg
fldcw
test
pop
mov
inc
fwait
or
out
aas
add
repz
neg
mov
and
lret
scas
add
push
pop
adc
adc
pop
and
xor
add
mov
out
push
loope
push
mov
dec
xor
adc
hlt
push
out
in
cmp
inc
es
in
dec
xorb
jns
xchg
cmp
insl
insl
jg
shr
add
push
aam
test
adc
lea
dec
lea
ja
ss
out
xor
aad
and
fisubrl
pop
divl
mov
int
mov
xchg
jge
add
pop
or
xor
mov
shll
loope
movsl
test
jmp
pop
and
sbb
test
icebp
lahf
sub
lret
jb
repz
in
sbb
div
push
fdivr
hlt
mov
pop
add
movzbl
imull
cmpsb
inc
lds
jecxz
pop
shll
lock
aam
into
push
insb
inc
xchg
fpatan
mov
jg
sbb
scas
sub
ss
insb
push
fmul
pushf
nop
in
push
gs
ss
imul
xchg
add
iret
fs
xor
dec
enter
mov
aad
mov
mov
in
out
movsl
or
pop
adc
jmp
push
call
or
out
sub
ss
xchg
mov
jno
and
lea
gs
mov
inc
fs
lods
inc
xor
dec
ds
daa
mov
adc
into
mov
bndstx
jp
fs
ja
imul
repnz
cwtl
int
and
pusha
subl
stos
add
pushf
jg
sbb
mov
fwait
aam
adc
bound
cmp
mov
stc
jp
shlb
leave
imul
dec
and
sub
push
loope
dec
gs
cmp
xchg
xor
test
mov
mov
clc
test
add
fucomp
test
inc
lods
sub
push
sub
stc
imul
mov
out
xchg
arpl
pop
and
sbb
add
push
ret
mov
or
ds
push
movsb
push
add
and
dec
aas
fistpl
mov
inc
jb
in
xchg
mov
adc
xor
and
test
aas
jne
mov
pop
prefetchwt1
xchg
repz
jmp
cli
jo
adc
push
cmp
out
test
push
icebp
jp
rcrl
inc
jne
fldenv
mov
sahf
iret
cmc
fwait
pop
push
sub
mov
hlt
mov
scas
sti
jp
mov
adcb
mov
push
and
pop
popf
sbb
dec
dec
sbb
xchg
dec
std
inc
xor
lahf
push
js
stos
xor
mov
pop
cltd
mov
test
fildl
push
xor
imul
mov
jp
int
jae
jne
enter
pop
cmpsl
sub
enter
cmp
xchg
jmp
or
repz
repz
rorb
pop
das
jl
pop
sbb
call
insb
xor
dec
fwait
aas
fucom
scas
inc
xchg
push
aaa
dec
in
ret
pop
push
fidivs
das
sbb
imul
cltd
pushf
xchg
nop
lock
jp
dec
push
mov
mov
cmpsb
add
or
jb,pt
arpl
out
data16
jl
mov
rclb
lods
mov
push
test
and
inc
loop
push
lahf
xor
cmp
pop
inc
imul
in
xor
loopne
loopne
iret
inc
dec
fcmovb
jmp
in
sbb
dec
repz
mov
aad
sbb
ja
ljmp
mov
add
pushf
call
inc
push
sub
fwait
push
out
cmp
jle
call
imul
sub
enter
mov
cld
jbe
push
inc
dec
mov
cs
popa
mov
aaa
mov
and
adc
jb
lcall
mov
ret
fwait
pop
pop
rol
mov
lds
dec
js
ds
sbb
out
pop
mov
mov
jns
ret
mov
cmp
test
mov
mov
out
popf
xlat
push
testb
ret
es
mov
xor
push
push
fnsave
inc
cmp
mov
into
out
iret
and
lret
and
ljmp
xlat
pop
add
pop
cmp
stos
or
mov
icebp
cmp
mov
mov
sarl
cli
mov
pushf
mov
or
cltd
and
adc
data16
das
leave
jae
mov
or
sub
fcoms
sbb
mov
mov
popa
aad
add
and
cs
popa
cmpl
mov
fs
jne
and
dec
ret
add
sbb
loopne
mov
push
sub
pop
sub
cmc
mov
cmp
fnstcw
gs
in
mov
test
jmp
in
jp
popa
or
ret
or
nop
filds
rolb
shll
das
divb
std
lods
sbb
dec
cld
lea
ds
aaa
add
mov
data16
leave
in
xor
cli
shrb
test
mov
or
sbb
ror
inc
jg
inc
int3
test
dec
and
mov
imul
fidivrl
movsb
call
stc
in
inc
loop
aaa
jge
jg
fidivrl
aas
fdivrl
mov
mov
cmp
inc
les
push
jmp
fisttps
pusha
outsb
pop
sti
insl
ds
outsb
cmpb
xchg
shlb
insl
add
in
xchg
push
sbb
imul
mov
fsubrl
mov
std
in
lods
in
inc
adc
out
cmpsl
jno
mov
orl
cmc
or
inc
jle
cmpsb
js
nop
sahf
std
push
mov
dec
pop
cld
mov
mov
push
jae
in
loop
mov
pop
mov
mov
icebp
xor
jge
sub
cwtl
ja
jmp
add
add
dec
dec
hlt
pop
adcb
or
dec
push
mov
mov
pop
jns
loop
das
inc
push
aaa
add
push
in
jecxz
loopne
cli
jg
and
push
jmp
pop
inc
pusha
pop
mov
sahf
jnp
xorb
ds
std
cmp
inc
push
add
sbb
xchg
mov
pop
imul
arpl
insl
push
inc
inc
or
aad
mov
iret
mov
inc
pushf
scas
or
xor
pop
xchg
stos
jns
imul
push
andl
jge
lahf
cmpl
mov
add
xor
aam
out
xor
jo
lock
incb
cmp
negb
push
xchg
fidivrs
ret
sbb
shr
mov
sbb
or
lods
jl
cmp
andl
dec
pop
adc
push
lahf
mov
push
xor
inc
out
mov
lret
pop
clc
and
stos
sub
xlat
xchg
bound
fstp
mov
sbb
pop
push
std
xchg
push
and
xchg
and
push
leave
add
adc
sbb
and
xchg
xchg
or
std
dec
or
stos
test
xchg
add
sbb
icebp
sbb
mov
clc
mov
mov
pushf
mov
outsl
sahf
xor
lret
lods
js
xchg
dec
mov
int
inc
pop
nop
push
lods
loopne
stc
pushf
dec
pop
sbb
iret
jno
dec
mov
push
dec
aaa
lret
xchg
xchg
test
repz
inc
jg
popf
pop
dec
mov
cld
cmpsb
stos
shll
mov
xchg
sarb
xor
outsl
sub
gs
ret
in
jmpw
rclb
pop
and
push
ss
pop
int3
mov
inc
mov
lret
mov
ljmp
ja
push
mov
or
mov
adc
fsqrt
test
or
sbb
push
imull
nop
jae
sbbl
aas
std
mov
cltd
sbb
or
jns
inc
xchg
jmp
inc
out
xchg
pop
insb
imul
jb
test
jb
mov
cmpsl
and
into
clc
dec
lret
xor
gs
adc
shrl
add
inc
nop
aas
jbe
pop
cmp
clc
pop
orl
xchg
pop
rcrl
push
sub
and
push
or
pop
push
jnp
jmp
sbb
lods
sbb
or
not
sbb
add
or
int
lcall
bound
in
cmp
fisubrl
adc
push
push
outsb
lds
and
pop
iret
xor
je
push
xchg
icebp
in
add
ret
fidivrl
add
push
jmp
rcr
inc
and
les
inc
lds
xchg
dec
xor
test
mov
ss
push
mov
mov
scas
std
jg
dec
xchg
loope
imull
inc
xchg
jae
les
sub
lret
cmp
mov
xor
repnz
cmpsb
jp
fwait
and
aas
push
xor
scas
dec
pushf
mov
adc
daa
lods
cmp
mov
fwait
out
add
lods
les
ret
lods
xor
movsl
dec
mov
imul
arpl
pop
in
mov
test
out
out
jo
jno
fwait
adc
fldt
addr16
cwtl
fisttps
imul
mov
gs
sahf
sbb
push
jmp
jge
outsl
sub
fs
aaa
xorl
nop
push
sub
xor
or
movsl
jg
pop
add
push
push
aad
push
mov
das
cmpsl
jmp
sub
js
scas
or
cmp
rcll
dec
mov
mov
and
pushf
xchg
sarb
sub
jmp
jnp
add
lods
sbb
scas
mov
pop
sub
xor
add
push
adc
xchg
sub
push
ret
inc
xchg
cmp
push
push
and
inc
inc
add
fwait
dec
outsb
xor
lods
xchg
or
sbb
pop
cmp
xchg
jecxz
adc
push
lret
insb
mov
inc
cmp
cmc
daa
mov
jnp
adc
cmp
cmpsl
xor
andb
and
orb
lea
push
sahf
pop
iret
push
fs
pop
int
rcrb
in
pop
lret
add
push
fidivs
fstps
imul
in
popa
sub
pop
fwait
dec
push
sub
mov
lcall
ss
mov
push
mov
lock
fmul
ss
cmp
sub
out
rol
dec
mov
jge
push
xorb
push
xorl
sub
inc
bound
xadd
inc
fcmovb
cmpsb
sub
addb
nop
cmp
test
sahf
popa
sbb
jno
shll
push
lock
leave
sti
jno
lods
shlb
inc
outsl
mov
mov
adc
dec
jp
push
fstpl
xchg
push
or
lahf
adc
cmp
daa
daa
pop
mov
imul
cmpsb
sub
sbb
and
popf
jg
sbb
clc
cmpsb
cmp
jge
mov
outsl
or
xor
inc
jne
stos
dec
mov
sbb
sbb
lods
dec
daa
mov
sbbb
iret
popa
clc
and
xlat
or
and
cmp
iret
cld
lcall
dec
or
movsl
shrl
cs
jae
lret
lods
cmp
inc
lock
jl
sub
in
pop
sub
or
test
aam
mov
out
xorl
pop
das
lcallw
mov
push
vminps
xor
aad
loope
jle
aad
clc
mov
fwait
rcr
enter
xchg
pop
jns
mov
pop
bound
lcall
lock
hlt
sti
gs
and
test
push
xor
rcl
pusha
push
rorl
xchg
movsl
cmp
xlat
xchg
hlt
cli
pop
push
add
nop
cli
popa
xchg
dec
aas
ljmp
stos
movsl
pop
sar
pop
pop
or
inc
jbe,pt
ret
je
call
adc
ljmp
dec
es
cmp
cmp
arpl
mov
jp
cmp
hlt
nop
jle
pop
and
les
sub
imul
lahf
lock
sub
imul
loop
mov
je
adc
push
call
cmpsl
xorb
mov
xchg
mov
sub
inc
loop
sbb
add
roll
or
sub
xor
or
jne
mov
dec
leave
lods
mov
std
push
or
fwait
jbe
lcall
lea
scas
inc
rorl
jnp
sub
jp
scas
loop
inc
ljmp
inc
shll
mov
push
bound
mov
cmp
dec
cmpsl
add
cs
repz
nop
arpl
mov
cmp
mov
xchg
inc
pop
int3
mov
sub
shl
iret
ljmp
scas
add
sub
jne
or
mov
and
loopne,pn
dec
rcrl
mov
imul
cmp
test
adc
fldl
dec
stos
stc
inc
lock
push
add
or
in
pop
jg
dec
add
jle
dec
cmp
dec
lods
test
cli
mov
pop
ret
cmc
in
or
outsb
std
inc
movsb
pop
data16
lea
ret
in
imul
in
dec
aam
xchg
cmc
cmc
push
outsb
movsl
sub
sahf
dec
mov
pop
mov
gs
outsl
fwait
mov
sub
jno
mov
pop
fidivl
imul
mov
cmpsb
data16
hlt
out
mov
out
add
cltd
jl
sbb
pushf
inc
cs
int3
cmp
int3
jmp
in
jle
xor
jno
cwtl
shlb
or
loope
popa
outsl
xchg
fisttps
rol
fdivl
dec
aaa
mov
addr16
test
pushw
int3
and
repz
mov
sbb
popa
dec
or
xor
rolb
xor
andl
jge
jno
fbld
xchg
adc
and
mov
sub
mov
decl
adc
mov
xorb
inc
sahf
adc
rclb
jbe
test
mov
addb
push
sub
push
insb
cmp
mov
push
insl
dec
outsb
repz
popf
arpl
rorl
dec
xor
jmp
or
popa
sub
repz
xlat
inc
mov
in
sub
pop
cli
mov
das
xlat
cmp
cmpsl
repz
cmp
and
pop
les
jo
jp
roll
adc
cltd
xchg
movsb
mov
mov
lret
adc
stc
inc
push
xchg
pop
sbb
xchg
nop
test
andb
packuswb
fcoml
arpl
cmc
cmp
jecxz
call
rcrl
or
rcrl
cmp
imul
sbb
mov
out
xchg
pop
mov
or
addl
leave
leave
jmp
fadds
sbb
adc
fildll
shl
push
ret
xchg
jbe
imul
jg
aas
inc
jp
push
lahf
xor
lret
movsb
add
and
in
fs
roll
jg
sbb
mov
stos
push
dec
ret
and
repnz
mov
movsb
outsl
sub
cld
inc
dec
mov
dec
and
and
sahf
in
push
cmp
jmp
cmp
jg
xor
aad
jae
ljmp
movsb
mov
dec
push
ficompl
loopne
xor
mov
inc
dec
testl
ficompl
pusha
mov
jo
call
mov
out
clc
mov
xchg
shlb
dec
dec
mov
cmp
cli
fcmovne
out
sub
jecxz
decb
iret
adc
dec
add
push
outsl
and
fldenv
mov
das
pop
sub
dec
rep
andb
pop
lock
xor
xchg
rol
push
mov
xchg
jmp
lock
insb
jmp
push
in
jp
jns
jb
xor
mov
sarl
xor
jge
lret
sbb
cmp
mov
inc
ret
jns
cmp
and
push
into
scas
sbb
pushf
sbb
loopne
mov
mov
and
scas
mov
and
test
ds
imull
lret
mov
or
cmp
mov
imul
push
mov
or
mov
shlb
push
ret
ss
mov
sbb
cmc
ss
dec
push
pop
stos
shl
sti
fildl
test
dec
inc
xchg
repz
sub
push
adc
pushf
sub
adc
inc
mov
ja
adc
sub
mov
shrl
jmp
std
movsb
cmc
ja
dec
out
pop
cwtl
adc
fwait
dec
sbb
or
in
sahf
mov
adc
lahf
out
rcrb
out
adc
lcall
fadds
fisubl
jbe
adcl
clc
mov
mov
mov
dec
repnz
orl
aam
add
sub
and
js
cmp
xor
fsubrp
int
out
jmp
outsl
add
leave
add
fwait
daa
mov
inc
mov
iret
iret
xchg
dec
fstpt
lcall
movsl
jle
add
lahf
pop
js
mov
mov
mulb
or
les
sti
shrl
xchg
pop
xchg
mov
xor
dec
mov
cli
and
pop
cld
out
xchg
add
pop
leave
loope
fisttpl
int3
jo
out
add
push
or
or
inc
xadd
das
xchg
dec
mov
dec
and
or
mov
sbb
out
into
ljmp
ja
xchg
push
push
xor
test
popf
iret
outsl
pop
je
mov
or
fwait
sarl
add
push
inc
and
mov
add
fdivrl
jecxz
mov
adc
out
hlt
ljmp
jbe
arpl
jp
and
jo
push
rolb
mov
mov
in
jbe
fists
dec
dec
xchg
mov
sub
imul
std
and
push
stos
jle
jbe
loopne
imul
into
pushl
inc
adc
cmpsb
fcoml
mov
and
pushl
or
mov
icebp
cmpsb
fsubrs
or
cs
inc
hlt
inc
xchg
mov
aas
push
mov
xchg
int
adc
sbbb
or
mov
pushf
sub
add
dec
movsb
call
pop
jb
imul
loopne
xor
push
cmpl
loopne
pop
sub
push
xor
push
fcomps
lret
xchg
sub
std
push
in
fstl
pop
mov
cli
cltd
pop
pop
insl
movsb
bound
and
cmp
fcmovnb
movsb
and
rorl
adc
int
sti
adc
or
pop
pop
lods
dec
cld
out
fsub
dec
jae
aad
xor
into
mov
and
mov
out
adc
iret
div
jae
pop
js
sub
jae
out
jnp
aaa
mov
imull
xchg
ret
aad
in
shl
mov
ret
ljmp
fsubs
add
xlat
clc
mov
fwait
pusha
fistl
add
xchg
test
jbe
jno
jae
repz
mov
mov
cmpl
xor
shll
jb
mov
sahf
divb
outsb
cmp
and
or
fmulp
fcmovbe
adc
mov
fstpt
int
push
xchg
and
mov
test
imul
fs
movsl
add
jle
repnz
stos
inc
stos
nopl
adc
fsubrl
rorb
lock
pop
cmp
je
xor
mov
adc
inc
mov
push
rolb
data16
out
lods
pop
cmp
fwait
mov
sub
cwtl
out
xchg
mov
jnp
js
jae
cmp
bnd
xchg
aas
wbinvd
dec
repnz
lret
sbb
mov
stos
out
jno
cmp
clc
movsb
sbbl
jecxz
pop
les
bound
movsl
ret
andb
push
jae
rclb
jge
pop
dec
add
into
xchg
mov
fldl
aam
xchg
in
or
inc
fnstsw
stos
and
fwait
mov
and
call
xchg
aad
xchg
sbb
push
ljmp
cs
es
adc
roll
sub
cld
pop
enter
dec
fnstenv
insb
jnp
mov
mov
stc
and
inc
jbe
ss
repnz
insl
cmp
gs
xor
rclb
adc
clc
adc
rorb
and
fld
push
mov
jl
les
shlb
cltd
int
inc
stc
icebp
negl
lea
ds
andb
inc
imul
xor
push
imul
adc
mov
adc
pusha
jne
adc
or
jecxz
ljmp
imul
or
dec
movsb
shlb
cmp
movsb
mov
loop
adc
sti
or
gs
cli
frstor
aad
dec
ss
push
scas
notl
xchg
outsl
xchg
movsl
in
mov
sub
sub
sti
mov
ret
mov
mov
lret
mov
je
pop
imul
out
hlt
clc
hlt
pop
mov
mov
xor
cmp
adc
add
inc
add
add
dec
adc
mov
or
popl
int
xor
pop
scas
sub
flds
push
jnp
jl
fcmovnbe
lods
orb
xchg
xchg
rclb
adc
stc
test
cmp
jge
gs
adc
sbb
mov
mov
cmp
or
pop
xchg
jmp
and
call
popa
insl
jne
mov
mov
xchg
or
adc
lods
aad
push
mov
shlb
push
test
jns
insl
das
stos
dec
mov
xor
loop
push
arpl
arpl
sub
add
mov
insl
or
insb
mov
push
mov
jmp
ja
aas
xchg
les
inc
push
mov
mov
call
jo
sahf
call
and
cmp
and
sub
add
mov
iret
push
dec
pop
pop
push
int3
insb
cmp
push
aam
xchg
cmp
dec
and
mov
cmp
cs
out
mov
pop
pop
ret
mov
cli
lcall
xchg
add
ret
hlt
push
xor
aaa
pop
test
sub
push
ficoml
scas
mov
lods
push
dec
das
push
dec
test
or
sbb
add
frstor
sub
sub
mov
rcl
adc
sub
stos
xchg
bound
mov
mov
lahf
or
cmp
or
cmp
mov
mov
daa
push
jl
inc
mov
lahf
mov
bound
and
push
insb
shll
sahf
les
sbb
fldenv
in
push
xchg
xchg
xorl
xchg
aas
lahf
or
mov
les
shr
or
and
mov
jnp
out
sub
mov
inc
clc
add
and
jno
dec
jl
cmp
cmpsb
xor
mov
rcrl
cmp
stos
out
xchg
in
jmp
and
fs
lcall
movsb
lea
bound
mov
stos
ds
rcrb
ret
jbe
jmp
push
xlat
lock
mov
fisttpll
pop
jnp
pop
shlb
mov
js
adc
mov
out
movsl
cmpsb
int3
jge
test
pushf
push
daa
ret
push
sub
inc
sub
adc
jbe
pop
xor
pushl
jecxz
cmp
fwait
mov
std
or
jp
inc
mov
xchg
out
sbb
jne
pop
dec
mov
movsb
or
dec
sbb
decb
push
lods
and
xchg
xor
cli
clc
or
mov
mov
lods
in
xchg
cmpsb
decl
lock
enter
mov
test
mov
arpl
xchg
sub
push
mov
out
jle
add
popa
dec
push
inc
dec
js
mov
or
mov
sbb
stc
sbb
loope
push
jbe
push
push
mov
repnz
sub
adc
stos
cmp
rorl
push
mov
es
flds
sbbb
mov
lock
shrb
aad
mov
imul
dec
fsubrp
aad
shll
adc
test
push
or
inc
inc
push
cmp
bound
cmp
das
xchg
and
jno
cmp
ljmp
jne
mov
pop
in
aaa
je
jns
clc
enter
xor
inc
scas
pop
inc
je
hlt
fldl
sarl
xchg
repz
or
or
pusha
xchg
pop
out
jecxz
mov
inc
sub
pop
mov
pop
add
fstpl
test
and
cmp
test
pop
js
jae
jns
cmpsb
out
filds
and
xor
mov
mov
and
and
sbb
mov
cmp
mov
cmp
jecxz
fildl
inc
nop
inc
cs
push
and
push
or
add
in
decl
sbb
loope,pt
ficomps
stos
mov
mov
stos
fadds
xchg
ja
loopne
or
out
add
arpl
jge
mov
rcll
pusha
inc
sbb
inc
adc
push
call
shlb
pop
lock
and
js
mov
and
popl
sub
loop
xlat
mov
and
addr16
xchg
cmp
and
sahf
sbb
jno
inc
hlt
insb
mov
fs
sub
fbstp
cmpsl
fisttpl
xlat
out
push
mov
dec
mov
cmpsl
sub
gs
jno
jmp
inc
pop
pop
loopne
cmc
mov
lea
and
push
push
lret
inc
ret
jno
or
iret
xchg
or
aaa
or
add
cmp
jecxz
aas
dec
cmp
int3
outsb
leave
stc
push
mov
dec
fnstcw
jb
jno
data16
pop
adc
outsl
add
int3
fdivrs
int3
data16
shlb
addl
call
cmp
daa
push
lds
or
cmp
cmc
dec
mov
repz
inc
ret
adc
int3
ret
adc
in
int3
pusha
cmp
out
mov
pop
jno
sub
jle
sahf
sub
or
push
hlt
divb
addl
jmp
repz
cmp
pop
inc
xor
fisttpll
or
mov
sub
xor
mov
popf
out
sbb
pusha
push
cli
arpl
call
lahf
lods
lock
mov
aaa
dec
sub
cmp
add
arpl
xor
dec
adc
add
or
ss
fidivs
shlb
pusha
imul
push
jae
dec
and
sbb
and
jp
dec
mov
cmpsl
jle
xor
in
mov
or
daa
mov
pop
pop
mov
mov
insb
xor
push
data16
lds
arpl
mov
xchg
sbb
mov
mov
or
repnz
loop
in
mov
pop
jb
jmp
pop
xchg
sbb
aas
jb
das
pop
sarl
shlb
repnz
sbb
int
mov
mov
call
xor
imul
and
in
and
mov
mov
mov
aam
mov
jb
in
add
iret
or
or
mov
xchg
inc
stc
inc
fwait
sbb
sahf
mov
loope
or
sub
jae
add
cmp
and
lret
xor
inc
cmp
subb
aad
rcr
dec
idivb
lods
sbb
pop
cmpsb
dec
xlat
and
pop
sub
or
jecxz
cli
addr16
dec
lea
jg
fistpll
orb
adc
es
rorb
movb
add
repnz
movsl
mov
mov
arpl
mov
pop
test
cwtl
sbb
add
ja
lock
add
xor
pop
iret
lret
into
test
mov
or
iret
daa
icebp
fisttpll
jns
insb
adc
xlat
xor
out
sbb
inc
fsubr
xor
adc
scas
clc
pusha
aad
xchg
adc
fsubr
ja
jp
rclb
or
imul
adc
daa
xlat
xchg
xlat
push
mov
aad
push
adc
jae
cli
test
lahf
push
into
and
xchg
mov
ficomps
sub
add
in
daa
dec
xchg
jb
dec
aam
mov
hlt
test
add
add
jo
fisubl
jnp
es
xor
xor
sub
sub
pop
popf
add
loopne
adc
inc
and
pop
adc
inc
or
aam
xchg
cltd
cmpsb
mov
sbbl
mov
and
adc
push
notl
data16
sbb
mov
xor
test
shlb
lret
jecxz
push
xchg
push
pop
mov
mov
negl
inc
mov
mov
lods
in
stos
jg
nop
mov
jae
xchg
lcall
xor
mov
dec
cwtl
fsubs
hlt
inc
xlat
and
inc
mov
adc
nop
inc
xor
fisubl
sarl
push
push
mov
push
or
aam
adc
inc
and
sbb
aad
hlt
push
pop
les
int3
rclb
jno
or
dec
dec
or
lods
lock
stc
sbb
xchg
aas
popa
and
sub
fbstp
add
sahf
int
std
inc
sbb
pop
ss
out
shll
xorb
or
sbb
jmp
cmp
dec
or
sbb
jecxz
std
popw
xor
popa
cld
outsl
xor
ss
lea
add
jmp
mov
mov
mov
not
test
in
sbb
pop
xor
or
mov
bound
cmp
pop
sub
mov
lock
cmpsb
mov
and
jmp
pusha
sahf
jecxz
push
pop
sti
out
decl
sbb
cwtl
mov
pusha
xor
arpl
pop
in
push
lea
push
push
mov
out
adc
test
adc
xor
out
mov
jmp
aad
pop
push
sbb
mov
ja
mov
add
and
imull
jge
cmp
outsb
jns
mov
xor
out
in
pop
rolb
add
xchg
cmp
dec
fisubrs
inc
and
push
jmp
arpl
out
test
jecxz
dec
jl
test
loop
push
loope
outsl
mov
aaa
push
loope
xchg
xchg
scas
mov
aam
fisubs
sub
incl
push
jns
hlt
adc
cld
ret
fmul
cltd
mov
sub
add
sbb
mov
clc
adc
add
lret
mov
dec
mov
lret
mov
inc
shl
dec
out
add
into
mov
insb
fnstsw
mov
jle
sub
add
stos
adc
cli
xor
inc
mov
jle
mov
adc
lods
xorl
out
adc
in
out
pop
push
inc
dec
fwait
inc
ficompl
outsb
sub
adc
cmp
jb
insb
movsl
in
cli
lds
jo
xchg
jle
mov
daa
mov
inc
or
add
xchg
sbb
jo
fadds
insl
dec
xlat
lahf
mov
fildl
cmp
and
mov
lahf
movsb
jmp
cmpsb
sti
cmp
inc
push
je
mov
mov
stos
dec
xchg
lret
arpl
outsl
int
test
jecxz
mov
push
cmp
aas
xchg
int
jne
mov
sub
pushf
fs
pop
das
cmp
adc
dec
je
sbb
pop
jb
cwtl
imul
pop
ror
and
jmp
push
xchg
neg
cmpsl
fnstcw
push
mov
inc
sarl
mov
fisubl
bound
add
ret
shl
fnstsw
dec
aas
imul
dec
mov
test
xor
sbb
decb
movsb
inc
popa
dec
pop
add
adc
rorl
enter
fadds
arpl
inc
adc
jne
or
ret
lahf
jbe
call
dec
call
mov
jmp
sbb
sub
xlat
insl
loop
repnz
repz
leave
fisubs
rol
push
mov
or
addr16
clc
pop
loope
xchg
mov
mov
mov
pop
and
mov
add
cmp
add
xor
sub
sbb
std
push
add
jecxz
mov
inc
or
invd
jnp
sarb
cmp
jecxz
leave
inc
xchg
in
pusha
mov
adc
push
and
mov
push
sarl
pop
out
mov
scas
xchg
test
push
and
sbb
mov
jo
sbb
hlt
call
sub
imul
and
mov
pusha
jg
shl
insb
xchg
xchg
into
cwtl
aad
popa
push
cmp
lcall
pop
inc
pop
jp
xchg
mov
inc
int
jp
push
cmp
cs
call
decl
sarl
fwait
and
fwait
inc
hlt
arpl
mov
fildll
add
mov
pop
cld
jne
adc
jnp
test
ja
scas
mov
mov
test
jnp
lcall
ss
lock
inc
test
pop
sarl
enter
or
hlt
xor
dec
fs
mov
int
call
sti
ljmp
cmp
and
insb
xchg
cmp
sahf
lret
push
outsb
fistl
cli
pop
xor
lret
shll
mov
push
int3
pop
cld
aaa
adc
pop
push
mov
and
gs
mov
je
cmp
push
pop
test
xor
mov
nop
stc
jg
jb
ficomps
aad
lcall
and
sub
inc
lds
xchg
and
out
test
or
js
rorb
out
fmull
shll
les
out
add
cmp
setno
aad
stos
sbb
std
mov
es
fucomp
cmp
pusha
loop
add
cli
rol
or
cmp
mov
xor
loopne
or
sub
bound
xchg
cmp
jne
cs
mov
inc
mov
mov
mov
adc
jecxz
jg
je
mov
xor
push
push
mov
cmc
xchg
scas
lahf
cmp
inc
mov
pop
or
cmpsl
push
inc
ja
mov
push
mov
pop
lea
lock
sub
test
mov
fmuls
xchg
and
ds
sub
add
adc
pop
dec
push
int
xchg
cmp
mov
outsb
scas
pop
dec
test
mov
call
xchg
rorl
jbe
rol
xchg
sbb
stc
push
lret
dec
loope
aam
je
ficoml
pop
xor
daa
in
loope
mov
test
gs
cmp
ret
dec
xorl
in
scas
fistl
cs
nop
insb
cmp
and
add
xorl
pushf
rcrl
adc
mov
scas
mov
inc
out
lcall
shlb
out
add
mov
subb
cwtl
ja
shrl
and
iret
lret
fwait
and
cmp
imul
les
mul
dec
jo
lods
movsl
sbb
and
std
ja
jo
test
shll
mov
js
lods
rorl
xlat
loopne
xchg
xchg
ds
pop
add
jp
pop
and
jmp
stos
test
into
addr16
bound
mov
pop
mov
enter
jo
sub
clc
arpl
jbe
mov
into
jg
inc
xchg
loopne
cmp
out
mov
in
mov
outsl
pop
insb
mov
popa
and
dec
sbb
pop
pop
call
push
rorb
cmp
and
gs
or
clc
jge
repnz
in
js
jns
in
adcb
dec
adc
imul
mov
inc
mov
enter
ret
cld
in
and
jb
push
sub
pop
loope
ljmp
add
call
not
jb
enter
xor
mov
aam
xchg
jmp
shlb
insl
mov
daa
bnd
cmp
sub
icebp
jb
fldt
and
mov
jg
pop
jno
sbb
adc
imul
pop
adcl
xchg
scas
ljmp
sub
add
and
dec
lahf
sbb
repz
push
outsl
loope
push
and
jns
xor
stc
xor
xor
ljmp
push
in
pushf
push
loope
mov
jnp
aad
sub
inc
insl
mov
in
xor
aad
pop
sbb
xchg
sub
pop
lock
in
jge
pop
mov
xchg
sub
or
pop
loopne
adc
mov
aad
pushl
cmpsb
jbe
xorl
mov
in
dec
dec
rclb
hlt
popf
adc
xor
lods
jl
mov
and
enter
in
rclb
cmp
fisubl
mov
mulb
dec
popa
inc
and
arpl
xlat
sahf
ljmp
int3
and
popa
int3
cmc
in
in
xor
jg
popf
call
sti
in
push
jb
lcall
lea
ljmp
mov
jae
les
inc
pop
fs
dec
movsl
mov
and
sbb
mov
icebp
cltd
adc
or
xchg
pop
add
cwtl
stos
test
test
addb
dec
lcall
lret
dec
push
lahf
ljmp
jo
aas
mov
and
mov
adc
sub
inc
xchg
les
push
rolb
test
faddl
cmpsb
mov
add
push
add
xchg
mov
int
cmp
dec
les
push
mov
add
mov
sbb
pop
pop
adc
mov
int
clc
fildll
pop
mov
lock
mov
push
cmpsl
adc
incb
inc
push
mov
repnz
fdiv
outsl
jnp
mov
sbb
jmp
push
and
scas
sti
push
pop
or
xor
testb
outsl
lahf
xchg
into
lods
fistpll
js
jge
xchg
lcall
pusha
fcoml
mov
sbb
in
xchg
adc
fneni(8087
jo
sub
stos
mov
sbb
sub
testb
in
push
pop
mov
lea
ret
and
and
add
mov
sahf
inc
xor
mov
fadd
cmp
repz
dec
mov
mov
cld
xchg
into
call
and
sti
add
ljmp
test
out
dec
pop
cli
cwtl
sbb
cmp
ret
outsb
in
inc
lods
mov
das
stc
pop
pop
lds
ljmp
cwtl
pop
ljmp
cltd
mov
mov
loope
mov
mov
notl
or
cltd
pop
sbb
call
in
test
rcrb
inc
ljmp
shll
daa
pushf
sbbb
rcrb
mov
mov
fwait
xorb
xchg
mov
jmp
and
pop
sbb
adc
mov
int3
mov
mov
mov
icebp
data16
lcall
out
xor
in
pop
aam
dec
cmp
aaa
cwtl
lret
xchg
pop
test
dec
dec
stc
sbb
and
out
add
int3
mov
jb
xchg
cltd
ficoml
mov
or
mov
pop
repnz
aad
jnp
pop
jle
pop
push
mov
scas
sbb
inc
and
mov
mov
cmc
jns
cli
das
mov
mov
mov
in
outsb
andl
notl
mov
mov
loopne
fisubs
fs
scas
jmp
call
stc
jmp
outsb
add
adc
out
int
loope
ficoml
pop
pop
ret
cli
xorb
push
mov
dec
divl
pop
jno
xor
or
shlb
lods
mov
stos
data16
scas
movl
ljmp
sbb
jle,pt
pusha
mov
scas
jae
sbb
call
imul
iret
inc
xchg
mov
and
jno
cmp
add
cmpsb
mov
cmp
push
mov
or
aaa
or
mov
sbbl
inc
jecxz
sbb
shr
and
jmp
lods
into
dec
xor
fbld
mov
sbb
xor
lret
inc
push
push
jl
scas
cmp
hlt
pushf
sub
call
mov
int3
sbb
inc
sub
stc
mov
mov
adc
sbb
call
ret
mov
add
pusha
push
popa
cmp
or
leave
stc
pop
xchg
test
call
jns
loopne
cmovno
mov
mov
dec
push
ja
aaa
inc
lds
cmp
mov
loop
out
fsubs
ds
outsb
or
sub
das
flds
jne
mov
movsb
fwait
nop
sbb
ficoms
inc
sub
stos
or
sbbl
std
push
sti
or
bound
out
scas
sub
inc
leave
push
or
daa
lock
das
mov
mov
outsl
into
xlat
pop
xchg
sbb
and
in
xchg
ds
mov
insb
dec
ret
adc
test
or
and
or
les
mov
in
jno
inc
leave
mov
cmp
test
out
sub
adc
fisubrl
es
insb
and
pop
jns
push
dec
sbb
repnz
push
and
nop
hlt
mov
xchg
mov
mov
pop
cltd
daa
inc
ret
aam
ss
add
sbbl
aas
not
inc
mov
inc
pusha
enter
push
lcall
lret
icebp
jle
insb
into
xor
mov
addr16
cmpb
adc
mov
iret
ss
xlat
ds
sbb
fsub
aas
sub
xchg
in
call
inc
sub
cmc
cli
stos
aaa
nop
and
or
jge
ds
aaa
jnp
or
mov
js
fsubrs
lahf
xchg
pop
stos
sub
ljmp
pop
jns
shrb
pop
aam
sub
pop
cmp
sub
je
cmpsb
push
shrb
sbb
shrb
orl
inc
call
inc
xchg
fst
or
or
sub
sub
stc
ss
lea
cli
push
push
lahf
aaa
insb
dec
mov
jae
daa
inc
add
inc
imul
scas
movsb
imul
jp
add
mov
jecxz
jmp
pop
shlb
pusha
in
add
and
and
dec
mov
dec
sbb
xchg
into
es
enter
int3
xchg
sub
mov
xchg
adc
fsts
pop
xor
mov
das
ds
xchg
lahf
adc
push
roll
loop
ss
repnz
loop
shll
rorl
lds
aad
mov
push
inc
jl
repnz
xchg
popf
inc
or
xlat
mov
sahf
jns
rclb
sbb
or
repnz
sub
roll
fs
cmp
pop
pop
jne
lock
jno
sub
mov
sbb
and
out
or
hlt
mov
jne
mov
add
mov
adc
xor
mov
in
xchg
mov
sbb
push
sub
mov
test
inc
xchg
cmp
stc
lods
popf
cwtl
ret
int
shr
mov
xor
stos
mov
jae
mov
push
cmp
mov
cmc
cld
iret
ja
pushf
sti
mov
xor
inc
mov
sbb
inc
call
cmp
lods
and
or
in
adc
addl
adc
lods
pop
cwtl
inc
rclb
gs
and
mov
std
push
add
ds
sbb
xchg
dec
cltd
lock
add
int3
mov
sub
mov
jno
jnp
jg
stc
fs
aad
shl
sub
and
das
or
or
imul
xlat
push
mov
sbb
xor
xor
std
aas
daa
cld
in
ja
std
cwtl
stc
pop
cltd
nop
fmuls
in
xchg
pusha
sbb
and
bound
or
sbb
xchg
jae
pop
xor
jb
fcmovnu
fwait
int3
test
pop
add
mov
cltd
rclb
imul
adc
scas
xchg
push
jne
stos
aam
ss
mov
loop
cmc
cltd
mov
pop
mov
rcrb
add
fdivrs
sbb
pop
daa
mov
clc
mov
or
dec
mov
popf
dec
out
shlb
outsb
or
mov
lock
sbb
adc
loop
pop
mov
push
test
add
push
stc
cmp
lcall
mov
stc
in
sarb
add
or
jo
pop
push
daa
and
sbb
or
cmp
cs
cmp
ja
idivl
jecxz
and
mov
mov
adc
push
add
ds
pop
inc
repnz
mov
and
enter
jno
shll
add
xor
push
repz
push
nop
xchg
cs
mov
dec
xchg
out
add
cmp
push
and
mov
cli
mov
push
xlat
data16
mov
je
fcomps
dec
imul
scas
call
outsl
mov
int
jmp
fisubrs
xor
leave
push
cmpl
xchg
sbb
in
call
sbb
xchg
jg
jo
push
test
sbb
xchg
mov
inc
or
cli
jo
jns
cmp
adc
inc
int
insb
sub
idivl
push
shlb
add
add
repnz
in
dec
lahf
xor
rcrl
xlat
fsubrp
push
jmp
dec
cwtl
lret
insb
push
mov
xchg
and
sub
xchg
test
sbb
push
xchg
inc
push
cltd
mov
cwtl
lahf
aas
mov
scas
pop
adc
pop
jge
sub
stos
cmp
test
jp
outsl
out
xchg
mov
add
movsl
fsubrl
dec
and
fcomps
or
ljmp
lcall
loope
adc
fisubrs
roll
xor
and
outsb
scas
pusha
mov
xchg
movsl
jno
shll
jne
out
xor
dec
cwtl
or
shlb
or
pusha
stc
ret
fists
pop
sbb
aas
adc
ss
and
pop
mov
call
cmp
dec
mov
mov
inc
xor
or
xchg
push
lahf
push
jmp
data16
cs
fucomp
bound
stc
jp
inc
ret
cmp
mov
lret
lcall
aad
fs
lods
lock
shr
aas
sub
iret
sbb
aam
sub
out
inc
andb
popa
adc
rcll
les
dec
xchg
cmc
sub
add
dec
sub
xor
xor
stc
int3
pushw
lret
dec
lahf
sar
loop
call
test
test
shll
jg
pop
orb
orb
popf
ljmp
mov
and
fs
cmpsl
jns
outsl
hlt
int3
aad
jns
das
movsb
xchg
mov
lods
xor
sub
or
ss
out
lds
cld
cmp
cmp
sbb
pop
dec
hlt
xchg
add
xor
fst
insl
data16
mov
mov
mov
mov
mov
xchg
shl
sub
push
decl
sub
push
add
or
mov
mov
insl
loope
dec
lods
add
enter
jne
aam
pop
int3
lret
xor
sbb
pop
mov
psubusw
movsb
and
adc
pop
cltd
fdivrs
pop
ficoml
data16
in
ja
lcall
push
push
int
cld
mov
mov
loope
dec
scas
insb
in
mov
xor
cwtl
fistps
mov
adc
sahf
inc
rcrl
cmpsb
pop
cmpsb
lcall
movsl
jns
iret
test
movsl
rolb
push
popf
scas
pop
in
int
fs
fstpt
xchg
xchg
cmpb
cmpsl
inc
dec
pop
das
out
push
or
mov
mov
sti
adc
adc
mov
and
push
punpckhdq
add
mov
or
mov
xorb
mov
lods
mov
sub
js
mov
clc
mov
push
in
mov
outsb
in
adc
cmpxchg
ret
mov
fisttpl
xor
loope
push
imul
loope
mov
push
andl
fwait
xlat
mov
add
inc
push
inc
addr16
sbb
mov
loope
test
call
or
cltd
mov
or
and
and
into
pop
cltd
insb
lcall
jbe,pn
icebp
lods
push
pop
sahf
add
inc
mov
push
lahf
mov
data16
sub
adc
imul
mov
xchg
cmpsb
mov
dec
lea
nop
iret
xor
mov
into
imull
add
popf
inc
sti
and
or
jg
inc
cmp
jl
loopne
and
pop
adc
pusha
into
xor
inc
lcall
pop
dec
shrb
scas
popf
xchg
jecxz
int
xor
xor
adc
mov
mov
xchg
mov
js
jbe
movsl
lcall
jno
rorl
in
xchg
fistpl
test
jne
pop
dec
mov
jae
jl
loope
adc
fists
jmp
and
mov
mov
ror
adc
pop
dec
int
xor
stos
pop
fistpl
js
ds
les
nop
inc
xor
sub
rcrb
xor
and
xlat
test
jp
cmp
std
fists
adc
test
pop
movsl
loopne
and
push
lret
xchg
in
inc
mov
outsb
test
test
aad
movsl
fsts
es
dec
jbe
and
pop
enter
popa
sbb
jno
loope
push
repz
out
add
mov
mov
pushf
mov
push
loopne
enter
pop
sbb
cmpsb
ljmp
popf
inc
out
lret
and
dec
pop
andl
sahf
imul
and
movsb
push
mov
mov
push
ret
push
mov
repnz
add
call
push
or
insl
sbb
outsb
into
ret
jg
leave
imul
push
and
jecxz
out
push
repnz
push
negl
mov
je
movsb
cmp
add
pop
pop
lcall
adc
push
and
push
jmp
xchg
rorb
xor
cwtl
dec
cli
outsb
lret
and
lods
or
mov
les
pop
adc
inc
pop
sbb
aad
mov
adc
shr
pmulhw
push
and
popa
jmp
fcmovu
enter
filds
invd
mov
pop
or
cs
add
pop
pop
adc
adc
fcmove
sahf
test
dec
sbb
mov
push
cmp
sbb
jne
mov
pop
in
bound
jg
lea
push
js
or
data16
gs
xor
pop
cmp
sbb
je
daa
jbe
in
dec
xchg
jbe
add
mov
adc
lea
vfrczps
cmp
bound
and
sti
mov
inc
push
inc
fnstenv
mov
mov
mov
arpl
idiv
jg
es
imul
xor
sbb
cwtl
into
and
inc
aaa
cltd
and
pop
fidivs
push
mov
stos
or
lret
dec
lret
add
shll
adc
cld
in
scas
ret
pop
xchg
or
enter
test
je
ljmp
and
or
aas
inc
or
push
lea
cmp
jg
enter
std
sbb
pop
in
pop
sti
xor
int
mov
xchg
fidivl
addb
mov
xor
jle
dec
adc
mov
cmp
lea
loopne
shrl
add
cmp
mov
pop
sbb
test
rolb
sub
scas
jl
adc
sub
xor
cmp
aaa
xchg
fisubrl
mov
add
pop
push
lock
addr16
cmpsb
dec
mov
hlt
xchg
inc
pop
ss
test
mov
push
or
sti
les
inc
daa
pop
int
cld
inc
dec
lret
or
push
stos
hlt
scas
test
call
arpl
cmp
jge
add
pop
pusha
pop
ljmp
xor
loop
mov
push
xor
repnz
sub
pusha
and
adc
cmpsl
nop
jmp
jl
cmp
jg
dec
and
or
and
xlat
xor
mov
cmp
inc
shll
std
stc
sub
int
aaa
fistpll
mov
mov
adc
or
iret
cmc
dec
inc
movsl
es
roll
sub
sbb
jns
addr16
inc
push
test
lcall
loop
flds
jmp
jge
or
fdivrs
ret
lret
inc
push
xchg
mov
insl
jno
pop
add
xor
jg
xchg
jo
add
stc
pop
lcall
sti
fisttps
es
mov
rorl
lods
sbb
addb
repnz
je
jo
or
dec
pop
dec
aad
add
xchg
xchg
mov
out
lret
daa
shll
jo
push
push
enter
out
pop
adc
mov
lcall
lds
outsl
call
andl
cmp
fsts
push
pop
lock
mov
leave
ficoms
fsts
mov
cli
aaa
sub
cmp
mov
jnp
loop
mov
pop
cwtl
xor
pop
das
jle
stos
imul
jecxz
aas
repz
push
mov
pop
sub
mov
rcll
aam
pxor
or
mov
cli
imul
scas
jne
jecxz
or
inc
mov
lods
jo
cld
aad
in
cmc
loop
mov
dec
and
pop
test
sub
jne
test
mov
in
push
rcll
leave
xor
lret
test
loop
orb
cmp
jmp
mov
mov
popaw
jb
push
addb
xchg
data16
fs
mov
or
or
pop
stc
leave
push
jmp
push
loop
sub
push
add
lea
int3
jl
mov
out
jae
xor
or
mov
fwait
xchg
lock
add
lods
addr16
aam
sbb
cmpsb
mov
pop
test
mov
cmpsb
cld
push
and
mov
test
and
jl
pop
leave
fisubs
ret
fsubr
add
cltd
stos
fdivs
sahf
mov
inc
mov
mov
xchg
test
dec
test
xlat
mov
and
enter
jns
or
ds
mov
mov
notl
dec
push
add
lret
in
pop
loop
iret
mov
mov
cwtl
es
mov
imul
sub
testb
fistpll
push
test
outsb
pop
cmp
idivb
scas
jge
pop
fwait
adc
js
xchg
xchg
lds
inc
pop
xchg
test
adc
push
cmp
mov
or
inc
insl
pushf
outsw
cs
pop
aam
fldcw
add
cmp
jecxz
iret
jbe
or
jge
andl
fdivrs
xor
pusha
push
cltd
mov
int3
je
inc
fistpl
sbb
sub
adc
jl
jb
mov
mov
jp
dec
inc
cmpps
xchg
subps
clc
sbb
movsl
insb
stos
cwtl
adcl
jne
in
ror
pop
or
cltd
int3
mov
es
pop
or
jecxz
mov
jg
cmp
mov
popf
testb
int3
mov
nop
pop
inc
fwait
loope
sbb
jp
nop
sub
les
jne
ficoml
fnstsw
cmp
dec
out
xorb
stos
push
add
push
add
pop
repz
jno
sub
xchg
push
scas
sbb
push
push
adc
xlat
sbb
cmp
aad
sub
sbb
cmpsb
cmc
lea
cmp
test
pop
mov
jmp
adc
inc
mov
out
jbe
jle
mov
and
loope
outsb
addr16
addr16
les
mov
push
or
mov
cmp
jl
rorl
repz
sub
mov
imul
push
jp
xchg
mov
fwait
mov
fstpt
dec
mov
xor
adc
rorl
mov
je
loop
dec
inc
cmpsb
test
data16
pop
call
push
adc
and
out
or
xor
dec
and
sub
imul
ss
and
mov
mov
fiaddl
adc
outsb
mov
adc
cmpsl
jns
or
in
inc
pop
daa
incb
xor
lea
mov
and
adc
adc
pop
jnp
in
add
jbe
jne
pushf
inc
ret
enter
arpl
xchg
outsl
cmpsl
test
dec
fwait
fs
mov
rorl
jns
das
pop
add
cmp
scas
pop
scas
loop
adc
jb
pushf
xor
std
push
sub
sub
inc
mov
jnp
sbb
pop
test
and
pop
es
cwtl
in
sarb
lahf
jmp
out
into
and
into
fcoms
push
outsl
sbbb
inc
ljmp
xor
mov
dec
jns
push
test
jne
testl
inc
inc
xor
jmp
mov
mov
shlb
xchg
jecxz
mov
mov
clc
test
and
or
mov
je
add
fwait
sub
and
pop
jbe
jl
mov
dec
push
subb
test
push
adc
mov
lret
mov
outsl
jmp
inc
cltd
mov
jb
add
jge
movsb
push
or
add
sub
and
xchg
push
mov
dec
stos
push
inc
les
aad
data16
icebp
mov
addr16
fs
stos
mov
je
push
cli
mov
into
push
cmc
xor
jb
cs
nop
mov
dec
pop
lods
insb
mov
stos
jl
fmuls
test
rorl
imul
push
icebp
pop
inc
in
pushf
outsb
and
das
adc
mov
cmp
add
inc
fldcw
arpl
test
ja
loop
mov
pop
leave
xor
inc
int3
push
sub
std
mov
test
ret
aad
cltd
mov
test
out
shlb
mov
imul
pop
cld
push
xchg
sbb
repnz
mov
push
pop
mov
jae
clc
jmp
pop
jo
mov
mov
lock
and
sbb
and
sub
lea
pop
mov
out
xchg
lcall
pop
or
mov
out
les
popf
leave
out
clc
test
inc
nop
adc
rclb
loopne
jge
pop
mov
das
rcrb
clc
in
add
sub
sub
outsb
repnz
dec
xor
repnz
cwtl
rolb
in
cmp
stos
lea
or
inc
mov
aad
arpl
pop
jae
pop
push
sub
adc
rorb
inc
mov
mov
or
jb
mov
in
inc
pop
js
add
and
lds
hlt
add
ret
pop
lock
cmp
insl
and
fldt
test
dec
mov
test
addr16
leave
ja
mov
ret
mov
fbstp
push
fucomi
xor
xor
jbe
clc
cwtl
inc
repnz
adcl
dec
adc
into
and
xor
jle
ss
xor
xor
insb
shrb
mov
mov
jno
inc
jae
cli
adc
mov
xchg
sub
cltd
andb
add
cli
pop
or
fisubs
jmp
xchg
jns
rcl
cmp
je
mov
xchg
ror
addr16
inc
push
pop
inc
push
mov
scas
xlat
les
mov
std
ja
mov
movsl
mov
fstpl
push
fdivs
out
rcll
bound
adc
sub
xchg
push
jl
xor
test
mov
ja
add
rcrl
dec
int3
and
mov
mov
in
out
adc
dec
xchg
mov
jecxz
lods
popl
inc
inc
cmp
mov
sbb
insl
dec
mov
out
or
pop
adc
cmpsl
push
arpl
ret
test
test
mov
push
cmp
adc
pop
mov
fisubrs
lcall
inc
cmpsb
xchg
gs
pop
or
dec
dec
jmp
add
pop
mov
jno
and
bound
mov
ret
xchg
insb
mov
jp
mov
xchg
popa
xor
fists
insb
push
lret
push
inc
pop
mov
pusha
push
je
ss
jo
push
or
add
pop
and
push
pop
pushf
insl
lret
in
lahf
cwtl
fdivs
cs
dec
or
fisubrs
inc
dec
pop
push
and
push
cmc
out
push
cmp
sbb
rcrb
sub
pushf
ficoml
jno
and
mov
xor
mov
mov
aaa
ja
xor
loop
jbe
cld
insb
imulb
test
sti
or
lds
inc
mov
and
js
dec
mov
repz
test
pop
lcall
jnp
lcall
dec
sbb
mov
adc
cld
sub
xor
ret
push
aad
sub
mov
mov
lds
dec
mov
pop
pusha
test
lret
fisttps
add
add
icebp
sbb
push
dec
sbb
sbb
test
orb
jl
adc
ret
jge
or
push
aaa
mov
pop
push
inc
mov
cmp
shl
jno
cmp
pop
mov
pop
mov
mov
int
add
popf
inc
dec
jmp
lock
inc
pop
in
xor
dec
xchg
push
dec
pop
sub
sbb
pop
pusha
data16
lea
sbb
push
pop
push
and
in
jg
notl
jg
adc
repnz
loopne
sbb
or
test
sub
adc
fnstcw
jne
pop
push
lods
sub
sbb
cmpsl
shr
pop
cli
inc
adc
loopne
mov
pushf
call
xchg
pusha
pop
outsl
push
inc
das
imul
jle
subl
push
pop
ljmp
adc
cli
jo
pop
xchg
leave
lret
pushf
js
jecxz
push
jnp
movsl
cs
mov
test
inc
les
push
movsl
mov
stc
fs
jl
jno
xorl
push
pop
dec
ficoml
in
push
sbb
adc
stc
and
test
sarb
sbb
aas
xchg
push
push
push
imul
lret
mov
and
in
inc
and
loope
xlat
fsub
sub
cmp
pop
enter
repnz
sbb
jbe
adc
cmp
sbb
outsl
mov
jo
mov
pop
mov
cmp
jb
mov
xchg
jae
shrl
jno
adc
in
mov
mov
pop
add
outsb
jp
cmp
mov
dec
mov
sbb
fnstsw
sbbb
popa
sbb
call
mov
jmp
xchg
ret
in
fadds
push
xchg
das
stc
fstpl
mov
mov
sub
pushf
push
popl
iret
xchg
popa
andl
push
adc
mov
mov
loope
repz
cs
loopne
adc
lock
mov
pop
enter
jb
daa
dec
jae
insb
or
test
ret
jp
push
je
outsl
les
sbb
lea
shrb
xor
aaa
stos
mov
push
ds
pop
or
sub
xor
mov
pushf
push
jmp
push
push
addr16
das
outsl
jecxz
arpl
mov
push
or
mov
pop
es
xchg
out
adc
xchg
loope
inc
jle
mov
jbe
stos
lods
add
pop
bound
jle
pop
cmp
ja
imul
jns
imul
flds
add
dec
mov
js
cmpsb
pusha
mov
out
push
rcrl
and
adc
or
sbb
enter
orb
and
lock
popf
xchg
cmp
sbb
xchg
cmpsb
in
loop
xchg
mov
inc
bsr
mov
jl
push
cmp
and
cmp
aam
repnz
idiv
xor
jge
rorb
dec
cmp
cmpsl
into
sbb
sahf
dec
and
jmp
push
movsl
insb
data16
lods
mov
ja
mov
dec
lea
clc
hlt
movsb
mov
out
cs
test
pop
mov
add
leave
imul
repnz
jo
int3
repnz
jecxz
mov
jae
xchg
imul
jle
add
adc
repnz
adc
stos
and
add
popa
inc
mov
jns
repz
push
xchg
mov
sub
sub
and
and
mov
iret
fcoml
arpl
aam
clc
mov
arpl
lods
mov
push
sub
and
sub
imul
repnz
xchg
test
inc
sub
and
stos
sub
jne
mov
icebp
xor
adc
jmp
fdivr
push
sub
arpl
pop
xchg
jmp
test
mov
cmc
pop
mov
aas
and
iret
cmp
adc
jg
test
lret
popf
mov
lahf
in
pop
nop
jns
cmp
jo
sbb
xchg
or
lock
sub
xchg
stos
dec
mov
insl
dec
mov
cmp
inc
push
mov
push
mov
push
nop
int
jne
inc
pop
mov
stos
pop
aam
in
ret
pop
cmp
hlt
les
pop
dec
stos
mov
lcall
roll
ret
sbb
and
notb
push
xor
es
jnp
in
ret
xor
cmp
sbb
mov
xor
mov
sub
sbb
push
aaa
das
or
mov
inc
mov
mov
sub
pop
and
ljmp
fdiv
cli
cwtl
inc
jne
mov
adc
cwtl
imul
adc
xchg
fcompl
pop
ror
push
cmp
sbb
jp
maskmovq
notl
lahf
dec
pop
push
push
insb
repz
fisubs
pop
push
rep
xor
inc
dec
sub
add
cs
mov
fwait
cmp
sti
loop
jmp
cmp
notl
aam
lret
xchg
mov
movsl
fimull
pop
push
sub
fstp
shl
pop
mov
mov
aaa
pop
jns
fimuls
test
test
bound
ret
mov
push
movsb
les
add
mov
xorl
ja
xchg
mov
es
mov
sub
cld
dec
int
out
loopne
xchg
aad
imul
pushf
rorb
les
out
stc
xchg
ret
push
and
lcall
mov
mov
sub
idivl
or
adc
mov
fmuls
push
lods
pop
add
push
push
xchg
icebp
loop
vsqrtpd
and
pop
inc
sbb
ja
cmpsb
jge
sbb
scas
aas
inc
loop
push
js
pop
add
cmpsb
sbb
jne,pt
mov
lods
cltd
xlat
les
test
and
add
rcrb
loopne
pushf
fsubs
adc
loopne
inc
cmp
push
ljmp
mov
lods
lret
or
insb
mov
xchg
push
gs
je
sarb
sbb
sbb
push
mov
cld
push
popa
dec
ret
or
and
push
in
cmpsb
lods
mov
push
stc
push
hlt
mov
push
imul
fisttpll
adc
in
sbb
ss
int
imul
and
or
sub
lret
shl
sahf
and
sbb
cmp
cmpsl
lret
mov
nop
rcr
push
aam
std
ds
add
aad
pop
pop
add
push
rcrl
pop
dec
lcall
imul
jmp
nop
bound
push
in
inc
ret
call
adc
lods
sub
shrl
outsb
subb
push
cmpsl
dec
and
and
jle
jb
xor
outsl
rolb
mov
dec
fs
pop
cmp
pop
sub
and
push
mov
mov
jnp
aaa
push
or
stc
lahf
xchg
mov
mov
or
pop
add
dec
push
repnz
adc
sub
and
mov
shrb
mov
aad
clc
dec
jne
pop
jp
fisubrs
in
cmp
addr16
jge
fwait
shr
dec
loopne
pusha
cmp
nop
negb
xchg
data16
push
aad
add
loopne
cli
push
fstpt
xchg
shufps
inc
test
andl
cltd
int
cmp
movsl
jmp
lods
ret
sbb
xchg
sbb
mov
sbb
loopne
std
cmpsb
js
xchg
leave
in
add
cmp
push
imul
negl
stc
and
mov
jg
pop
inc
arpl
adc
jl
fists
xchg
mov
cmpsl
dec
adc
dec
push
add
outsl
xchg
lea
notb
push
cmpsb
push
mov
into
xor
or
in
add
out
inc
test
adcl
fdivrl
xor
jns
mov
ss
test
out
cmp
sub
sbb
mov
fmull
pushf
repnz
cmc
lahf
dec
mov
sub
cmpsl
popf
mov
shl
jae
pop
xchg
add
mov
inc
filds
ljmp
adc
inc
xchg
jno
adc
xchg
jno
ljmp
pushf
sbb
enter
xchg
addl
or
push
jmp
pushf
jns
sbbb
clc
pop
push
sti
int
mov
sti
mov
dec
sub
jp
cli
mov
sbb
dec
icebp
jle
jge
fmuls
outsb
movsl
sbb
add
pop
push
lods
xor
scas
cli
inc
mov
xlat
scas
mov
mov
out
xor
les
xchg
fs
ljmp
std
fsubrl
inc
jle
clc
rcll
nop
ja
xor
xor
mov
mov
sub
xchg
idivl
std
cli
mov
mov
jae
xchg
cltd
shll
in
ds
mov
fs
jl
xchg
loop
cmpsl
adc
hlt
mov
ret
sbb
lret
xchg
jns
or
cltd
adc
cs
jb
xchg
imul
jecxz
and
mov
xorl
lods
jge
jmp
or
adc
lea
dec
arpl
add
sbb
cmp
loop
cmpsb
inc
pusha
dec
shrb
mov
add
test
leave
ds
scas
cmp
jb
push
adc
add
insl
cmpsb
lods
pop
push
scas
jge
jns
mov
sub
lcall
mov
cmovg
jp
outsl
fdivs
push
push
sub
inc
cltd
pop
ljmp
movups
and
inc
scas
mov
aas
push
loop
sub
imul
ja
call
outsl
jecxz
sub
outsl
xchg
sbb
mov
in
adc
in
mov
mov
or
bound
int
stos
in
cld
imul
popa
jecxz
aaa
out
mov
cmpsb
adc
out
addr16
dec
or
dec
add
aad
sub
stc
hlt
and
xchg
movsb
lods
bound
out
pushf
mov
ret
jg
inc
xor
shrl
lods
addl
add
aam
cmp
add
es
in
inc
mov
lods
ficoms
loop
push
push
imul
mov
sti
in
in
and
cmp
push
imul
rcrb
loopne
jmp
adc
add
push
push
gs
mov
xchg
mov
addb
push
mov
jmp
mov
fst
and
sub
ret
sub
adc
das
or
pop
subb
mov
out
jmp
loop
mov
add
adc
mov
xchg
mov
sbb
cmc
fs
fdivrl
insl
je
stos
test
mov
pop
push
out
test
xchg
xchg
outsb
stos
or
xchg
jae
mov
push
xchg
sbb
mov
das
xchg
enter
hlt
sahf
mov
mov
push
or
fsubs
aad
push
push
rcl
rorl
cmc
add
pusha
jl
gs
adc
ds
lahf
cmp
sub
aas
dec
arpl
aad
rcr
xchg
cmc
lods
push
icebp
clc
aad
adc
enter
xor
in
outsl
and
bound
iret
sbb
bound
pop
je
insb
sbb
sbb
in
ret
dec
push
outsb
rorl
ret
pop
ss
jne
lret
push
aam
push
mov
std
push
sahf
sbb
add
aas
fstps
jg
pop
add
shrl
fistps
xchg
icebp
pop
mov
in
sub
stos
test
and
dec
int3
adc
insl
adc
cmpsb
call
pop
dec
test
ja
add
mov
mov
xor
xor
xchg
jg
cs
pop
sar
shr
sub
jmp
das
int
stos
fnstenv
sbb
in
adc
or
push
xchg
pop
shlb
push
add
fxch
enter
andb
add
xor
mov
add
sbb
sbb
and
inc
fldl
shrb
leave
inc
jge
outsl
sbb
int
in
and
aaa
rorb
pushf
mov
dec
push
sbb
push
cmp
push
xor
cmp
popf
and
xchg
sub
add
mov
das
lods
stos
rolb
lock
xchg
pop
lea
cmpsl
pop
cmc
adc
dec
pop
frstpm(287
mov
add
pop
and
jp
mov
xchg
dec
cmp
add
pop
jl
test
cmpsl
mov
shrl
les
lret
push
inc
lods
mov
pop
push
in
xor
inc
in
push
fucompp
lahf
pop
jnp
mov
dec
inc
dec
mull
xchg
mov
mov
adc
inc
icebp
add
dec
sarl
out
js
call
cmpsb
or
jge
cmpsl
xor
fs
dec
mov
mov
inc
jae
dec
xchg
ret
sub
fildl
cld
xchg
sahf
cmpsb
ret
rcl
jmp
in
cmp
xor
push
out
outsl
push
ds
ret
mov
js
xlat
push
iret
dec
stos
mov
jae
mov
ss
jle
sbb
sub
in
icebp
or
arpl
xor
pop
sub
jecxz
pop
sar
adcl
mov
lea
lds
push
jo
lds
pop
cmc
arpl
inc
push
mov
pop
and
push
in
cmp
out
xchg
xchg
mov
push
jns
iret
pop
push
in
pop
hlt
stos
and
and
je
jae
mov
shl
mov
stc
mov
adc
jbe
lret
mov
leave
mov
pop
cmpsb
jb
aam
popf
mov
nop
mov
mov
cli
jne
push
xlat
test
adcb
sahf
mov
clc
adc
stc
mov
pusha
and
repz
mov
cli
loop
clc
mov
adc
add
out
xchg
faddl
fldl2e
mov
mov
add
push
aam
jns
lods
mov
lods
pop
lret
imul
push
xor
xchg
leave
fisubrl
scas
cs
es
sti
loop
ficompl
ret
call
or
imul
stc
adc
dec
cmp
mov
dec
iret
mov
sbb
idivl
sbb
inc
ss
imul
push
xchg
ja
test
mov
mov
lret
and
div
ja
xorl
sbb
mov
dec
jl
jnp
lods
dec
push
sub
adc
push
pushf
daa
dec
jne
adc
xlat
dec
mov
mov
push
mov
orb
das
push
sbb
enter
mov
mov
dec
in
or
jnp
lea
mov
lods
in
subb
jne
and
fistps
rcll
out
pop
or
adcl
repz
push
adc
cmp
rcrb
mov
in
jl
adc
aaa
mov
jb
lea
dec
fisubrs
je
cmp
xor
push
adc
gs
gs
lock
mov
lds
mov
cmpsb
and
scas
popa
and
push
xchg
jbe
push
fisubrl
adc
call
fstpl
fwait
add
pop
sbb
mov
adc
bound
ja
mov
jmp
mov
mov
cmp
mov
loope
fadd
imul
dec
pop
xor
repnz
ljmp
lock
xlat
test
cmp
and
cmp
mov
add
or
mov
cld
pop
sbb
cmp
cmp
ret
mov
scas
mov
ret
mov
inc
lcall
scas
dec
jecxz
mov
popa
ret
or
nop
inc
inc
inc
add
adc
sahf
pusha
xlat
cmp
fucomip
inc
xchg
rol
jne
cmpsb
subb
lahf
mov
or
aam
mov
icebp
push
cli
es
jne
mov
mov
je
cmp
add
das
icebp
movsl
xor
cmp
mulps
mov
pushf
clc
add
mov
bound
push
negl
testl
sbb
cltd
int3
movsl
push
inc
push
out
and
out
adc
std
sbb
mov
stc
stc
mov
daa
rorl
test
and
xor
test
arpl
lret
mov
decl
cmpsb
fistpl
cmp
xchg
and
es
repz
in
test
lds
das
stc
xchg
pop
imul
jbe
cltd
push
lcall
movsl
loop
sbb
or
adc
ficoml
in
push
mov
sub
jns
and
int3
icebp
sbb
jmp
aaa
ficoml
xchg
iret
jmp
movsl
lret
movsb
outsb
sbb
mov
mov
or
push
push
rcr
outsl
or
mov
in
ret
jge
loop
jnp
or
jnp
adc
cs
jnp
icebp
fisttpl
pop
cmc
sarb
jno
add
dec
mov
sub
ret
xchg
or
bound
mov
jae
add
fwait
mov
out
xor
icebp
inc
push
cli
fiadds
out
cmpsb
sub
ja
fldcw
mov
ljmp
adc
xchg
pushf
divb
jb
pusha
adc
dec
bound
xor
pop
std
ljmp
mov
xor
sahf
mov
mov
xlat
sub
scas
es
test
stos
jecxz
stc
scas
push
jg
test
mov
rorb
inc
add
mov
mov
adc
adc
int
mov
pop
pop
mov
clc
and
fnstsw
mov
pop
mov
incb
pop
jmp
inc
dec
sub
aas
mov
cmp
push
push
imul
imul
cmpsb
lock
loopne
and
pushl
push
fdivrs
xor
jl
xor
insl
adc
in
push
and
jl
out
inc
sub
andb
add
sbb
dec
loop
dec
fisubs
sahf
in
push
cmpl
jbe
mov
stos
sub
pop
aaa
cmpsb
mov
and
stos
dec
dec
rcll
push
adc
and
pop
cltd
into
xlat
pop
shrl
inc
cmpsb
insl
arpl
push
pop
add
mov
push
aam
scas
cmp
arpl
sub
js
ljmp
pop
push
int3
stos
jnp
adc
cli
mov
jecxz
push
pop
xor
les
lods
push
mov
jb
sub
call
stc
xor
push
fsubl
sub
jecxz
adc
outsl
clc
and
adc
rolb
mov
arpl
cli
jmp
or
push
sahf
mov
cmp
int
lods
pop
fs
push
dec
adc
push
sub
test
fildll
lcall
cmc
lcall
cmc
out
ret
push
imul
rcr
ja
dec
inc
add
add
mov
imul
rsqrtps
add
call
sbbl
fdivs
mov
adc
push
lods
add
adcb
push
xchg
cmp
dec
pop
mov
js
pusha
ficoms
mov
mov
pop
inc
sub
popa
notb
jb
ja
call
xlat
mov
mov
jle
sub
inc
ret
xor
xor
lahf
mov
imul
pop
pop
decb
jle
sub
xchg
cmc
mov
dec
jnp
inc
popf
ja
dec
cld
loop
ljmp
xor
inc
push
mov
mov
push
dec
ss
ss
add
dec
push
inc
dec
outsb
or
jge
enter
cmp
push
mov
mov
bound
mov
scas
jmp
in
loopne
cs
testb
jle
cmpsl
mov
adc
es
fs
push
sbb
pop
enter
xorb
iret
push
jne
xor
in
rorb
adc
adc
inc
and
movsb
out
sbb
add
outsl
aas
push
mov
addr16
sub
push
sbb
int
sbb
inc
cltd
mov
icebp
ss
pop
in
mov
js
mov
adc
mov
jno
jns
xor
rcr
cmpsl
imul
and
mov
cmp
jle
stos
adc
xchg
iret
xchg
stos
or
lahf
es
sti
and
jle
ret
cmpsl
dec
mov
inc
loop
rorl
leave
movsl
or
stos
aam
dec
mov
cs
ja
aas
cmc
sub
fdivr
mov
xchg
cmpsb
movsb
ljmp
ljmp
shrb
insb
enter
xor
sub
mov
sarl
loope
mov
pushf
jnp
shrl
xchg
stos
repz
cmp
out
xchg
adc
xchg
adc
sbb
sub
jnp
inc
mov
es
cmc
adcl
mov
push
or
sbb
filds
sub
inc
ret
mov
hlt
lret
inc
xchg
and
lret
lea
sar
lods
enter
push
pop
inc
lds
rcrb
xchg
sbb
xor
xchg
xchg
dec
cmp
loopne
cltd
les
jae
mov
jecxz
dec
dec
shl
xlat
mov
ficoms
jns
mov
jecxz
pop
adc
pop
add
ja
das
fwait
jnp
cmp
mov
outsb
sbb
out
jnp
call
inc
lock
in
cmp
cmpsb
ficompl
int3
jnp
and
inc
addr16
sub
or
ja
lret
fwait
adc
push
stos
pop
mov
and
dec
add
scas
int3
gs
in
or
lahf
cmp
imul
sbb
lahf
mov
insb
movsb
hlt
xchg
fadds
dec
aad
fwait
mov
fildl
std
mov
pop
sub
adc
jecxz
jp
aaa
scas
xor
pop
push
lahf
mov
hlt
xchg
sub
lcall
or
ret
xor
lret
call
jno
xchg
cmpsb
cmp
pop
mov
arpl
and
scas
fisubrs
bound
loope
lahf
imul
ds
mov
mov
dec
and
mov
pop
push
adc
pop
inc
jb
out
aam
dec
fdiv
push
adcb
ds
js
cmp
insl
mov
fdivrs
push
or
cmc
inc
cwtl
xor
and
cmp
mov
inc
ret
cmp
sbb
gs
mov
ja
scas
fistl
scas
mov
cltd
daa
jmp
stc
das
cmp
ja
stos
sbb
push
cltd
sub
enter
out
jnp
test
loope
test
mov
pop
and
push
cmp
mov
scas
inc
jecxz
lret
insb
idivb
and
and
dec
outsl
adc
lea
fcmovne
repz
or
ss
mov
rcrb
leave
push
jno
outsl
xchg
stc
mov
clc
sub
test
aas
paddsw
lea
inc
adc
xor
inc
stos
pop
cs
and
push
insb
sub
or
js
mov
add
int3
pop
scas
aaa
enter
xor
pop
xchg
lods
cmp
iret
mov
repnz
pop
inc
jp
roll
subl
pop
inc
testb
mov
lret
add
shll
fdivrl
jmp
ret
das
sub
add
mov
sub
icebp
push
pop
bound
int
jmp
loopne
dec
je
sarb
mov
push
ror
pop
dec
std
push
lods
subb
xchg
mov
mov
jp
repnz
shrl
and
adc
mov
les
xorw
dec
mov
sub
add
stos
lea
pop
inc
ror
jge
mov
xor
dec
dec
dec
sub
pushf
outsl
cltd
test
add
lret
or
movsl
mov
test
add
ss
push
sti
and
add
jecxz
xor
movsl
mov
inc
int
out
mov
pop
ss
dec
out
inc
xchg
adc
out
inc
aad
lret
scas
inc
xchg
xor
pop
notl
or
js
mov
or
inc
das
out
sub
and
cmpsb
xchg
enter
sbb
add
sub
sub
pop
and
sti
loope
push
mov
sub
push
int
jmp
roll
xor
ficoml
fistpl
pop
ja
aam
cwtl
into
movsb
add
stc
ljmp
dec
fstps
aad
cmc
mul
mov
out
mov
add
ds
pop
sbb
mov
movsl
testl
jns
inc
or
mov
xchg
sbb
test
push
sub
divl
out
repnz
mov
or
sub
mov
gs
test
int
rcrl
fildll
xchg
mov
enter
mov
inc
push
dec
sub
sbb
mov
push
lds
mov
clc
inc
cltd
sbb
test
sti
pop
adc
and
or
ds
repnz
jns
cmp
push
xor
xchg
mov
ss
pop
shrb
push
popa
int
pop
incl
pop
push
and
and
xor
imul
loop
dec
ljmp
frstor
mov
jecxz
add
pop
lahf
lds
xchg
xchg
loope
pop
pop
mov
std
mov
adc
xchg
xchg
sbb
cs
fcomp
pop
dec
lret
dec
gs
in
inc
xchg
clc
outsb
sbb
mov
sbb
mov
push
xor
mov
aaa
mov
mov
dec
push
dec
ret
push
inc
jbe
sub
rcl
add
test
pop
xchg
outsb
sub
std
out
and
aaa
xchg
lret
pop
lcall
xchg
push
sub
nop
cmp
std
push
out
fdivl
fildl
stos
movsl
sub
je
in
cli
xlat
dec
cltd
fistl
andb
out
cmp
push
pop
aas
rcrb
test
lret
aad
mov
sti
xchg
push
mov
hlt
notb
pop
mov
mov
inc
addl
or
and
sbb
aas
add
out
int3
sub
lock
mov
fwait
pop
andl
fcomi
push
and
cmc
pop
push
sarb
es
xor
inc
pushf
mov
xchg
or
movsb
mov
xchg
cmpsl
in
cs
int3
mov
mov
sbb
lret
ljmp
testb
mov
repz
je
mov
pop
push
aad
mov
insb
in
sti
push
mov
aaa
lcall
outsl
ljmp
dec
nop
mov
sbb
pushf
mov
sbb
fcoms
fiaddl
dec
jl
cld
pop
loopne
jns
xchg
xchg
mov
lea
pop
loop
inc
and
dec
sbb
mov
push
push
pop
xchg
popf
inc
xor
xchg
cmp
mov
gs
js
fisubrl
sets
popa
js
stc
xchg
lds
pop
ljmp
push
sbb
push
mov
jne
lods
movsb
test
pop
sbb
cmp
xchg
cmpsb
aaa
inc
nop
lock
sub
repz
inc
inc
ja
cltd
mov
sub
add
std
jmp
mov
dec
push
push
inc
lret
or
add
jl
movsl
ret
xchg
inc
int
ficoms
inc
popf
cli
add
cmpl
lret
fbstp
jp
fsubr
adc
aas
imul
jb
pop
popf
cmp
aam
std
in
loopne
xor
xlat
sub
inc
adc
fcoml
and
add
dec
jmp
je
dec
les
sub
sbb
and
sti
mov
lds
iret
sub
adc
inc
pushl
push
push
mov
jo
add
sti
dec
leave
rolb
dec
hlt
mov
mov
scas
xor
xor
js
mov
xchg
mov
insl
jg
sub
push
inc
js
and
mov
cmpsb
mov
bound
cmpsl
les
fisttps
or
in
xchg
jge
js
sub
popf
fdivr
in
push
xor
test
in
pop
and
push
outsl
mov
inc
push
pop
or
xor
sbb
stos
jge
jmp
cmpsb
inc
mov
lock
das
in
mov
jns
stos
int
inc
sub
pop
sbb
in
fucomp
inc
push
pushw
cmp
mov
add
outsb
adc
in
mov
mov
fcomps
cmp
lret
out
xchg
lahf
fs
xchg
insl
cmp
dec
cmc
xor
sti
xor
mov
cli
das
adc
mov
mov
xchg
je
cmp
mov
test
arpl
jl
idiv
cmp
fs
das
cmpsl
adc
add
mov
inc
mov
clc
arpl
adc
jns
xchg
gs
xchg
cmp
sahf
sarl
xchg
adc
inc
xor
inc
cmp
sub
mov
in
push
pop
lods
repz
or
mov
lods
mov
pop
clc
test
int
leave
sarl
arpl
movsl
ud1
add
fsubrs
in
push
das
scas
dec
ds
sbb
ljmp
rolb
adc
clc
lods
sub
add
lcall
andb
mull
das
jnp
out
add
pop
sbb
pop
mov
into
jo
loope
hlt
sub
fidivl
mov
dec
insl
data16
mov
fs
lahf
insl
fdivr
push
pop
sbb
xor
lods
daa
out
dec
xor
cs
inc
daa
inc
ds
dec
repnz
or
test
mov
jno
push
ret
sahf
inc
mov
movsb
ss
cmpsl
cmpxchg
mov
lret
mov
shrb
or
test
out
adc
sbb
std
pushf
test
enter
test
xchg
pcmpgtd
mov
xchg
cmp
pop
xlat
rcrl
in
or
jnp
out
adc
loopne
pop
lcall
push
lret
sub
bound
xor
sarb
dec
and
or
cmpb
ret
test
pushf
dec
sbb
inc
inc
pop
mov
cmp
scas
mov
sbb
imul
fwait
aaa
pushl
aad
int3
mov
loopne
sub
xor
jp
xlat
lods
dec
mov
sub
dec
rcll
test
or
xchg
ja
xor
fsubp
int3
scas
and
lock
sub
push
addb
cmp
mov
jmp
in
xor
stos
setno
and
aaa
ss
mov
cmpsb
mov
mov
cmpl
inc
mov
pop
in
scas
out
pusha
jb
jg
shrb
loopne
int
imul
movsb
sahf
pop
xchg
xchg
push
ss
les
mov
ds
jno
enter
cltd
cmp
xchg
mov
mov
inc
lcall
das
xchg
divl
mov
cmp
lock
test
xchg
mov
ja
sti
imul
jae
cmp
icebp
xor
and
dec
outsb
clflush
imul
adc
scas
and
lods
mov
lahf
test
push
or
mov
mov
ljmp
xchg
aas
ss
lock
fimuls
sub
sbb
add
stc
fstpl
pushl
test
jnp
mov
mov
push
cmpsb
out
push
cwtl
mov
jb
mov
sti
je
insl
mov
ljmp
lock
and
js
popl
xchg
testl
loope
mov
push
sbb
sahf
mov
push
mov
test
enter
xor
xchg
imul
and
xchg
mov
lahf
insl
orb
arpl
xchg
push
push
ror
loop
jmp
mov
push
popl
sbb
icebp
and
loopne
pop
push
stc
push
sub
sbb
sub
add
js
or
mov
and
cltd
ljmp
test
test
shlb
dec
lock
mov
mov
push
push
and
fistl
gs
push
loope
xchg
dec
pop
xchg
ds
in
loop
dec
cmp
pop
sub
push
push
adc
pop
xor
dec
mov
jae
cs
or
cs
cmc
stos
ss
fimull
in
les
daa
ss
lds
je
dec
mov
lds
ss
inc
mov
mov
lods
cmpsb
adc
call
sub
mov
out
sbb
cs
out
or
cmp
mov
mov
scas
cmp
cmp
inc
sbb
push
roll
outsb
add
dec
push
stos
pop
notl
push
mov
ret
xchg
andl
xor
push
repnz
leave
aad
out
mov
inc
mov
add
or
insb
dec
xchg
enter
lock
outsl
xchg
mov
push
pushf
jae
mov
xchg
cld
sbb
mov
imul
out
sub
mov
mov
lret
pop
mov
gs
shl
xchg
cld
jp
int
push
js
bound
mov
popa
or
jmp
mov
xchg
js
mov
mov
fdivrl
xchg
cmp
pop
sub
dec
pop
into
in
fisubrs
int
cmpsl
lret
inc
xchg
inc
push
jmp
es
std
enter
ss
mov
inc
xor
movsl
push
je
xchg
jbe
cmp
cmpsl
mov
fdivrl
icebp
repnz
mov
cmpsb
lahf
mov
or
mov
adc
lods
dec
xlat
inc
pop
add
dec
push
idiv
cmp
sbb
aas
sub
rcrl
xchg
or
int
jmp
enter
xor
mov
dec
cmc
xor
jo
enter
mov
mov
push
sti
insb
or
push
sbb
xor
mov
loopne
rcl
lahf
cwtl
out
das
adc
movsl
or
jge
daa
aaa
sbb
push
cmp
sbb
fnstenv
dec
dec
fisubs
push
add
adc
adc
dec
lods
mov
cld
out
shlb
dec
mov
inc
movsl
dec
data16
roll
frstor
jnp
mov
mov
lock
inc
jae
mov
jnp
int
pop
cmp
add
loopne
dec
hlt
icebp
ss
outsb
icebp
xchg
pop
jo
dec
mov
jmp
jecxz
xor
icebp
dec
and
fwait
push
add
xchg
fistl
cmpsl
ja
push
cmp
out
into
out
jns
sbb
adc
xchg
insl
mov
xchg
lods
and
adc
pop
shl
cwtl
and
sub
inc
sbb
xchg
sarl
pop
cmpsl
add
push
xchg
jae
xchg
cmpsb
imulb
adc
test
mov
ret
movsl
hlt
mov
outsl
sahf
add
adc
mov
repz
pop
jo
pop
inc
insb
rol
addr16
stc
in
jbe
lock
mov
jg
mov
inc
popf
sub
shl
pop
mov
test
inc
sbb
and
mov
push
sbb
pop
in
dec
sti
int3
fucomp
add
shrl
sbbb
jns
dec
out
push
insl
sarb
std
jo
lds
pusha
popf
dec
movsb
mov
aad
fcom
lret
mov
jg
ljmp
mov
ss
iret
hlt
popf
mov
popf
inc
xchg
xor
add
mov
into
sti
fwait
in
and
out
fs
lods
pop
mov
mov
int3
rcr
mov
push
leave
insb
cmp
dec
pop
clc
push
stc
pop
lahf
adc
daa
test
fimuls
mov
cmpsb
mov
stos
pop
cmp
or
inc
test
pop
aaa
pop
or
out
inc
cld
pop
sbb
mov
shlb
lods
int3
inc
out
ret
and
sbb
push
add
icebp
sbbl
jb
arpl
sub
cmp
add
or
add
inc
dec
push
sbb
sub
mov
inc
loopne
rolb
or
inc
ror
jnp
xchg
push
stos
call
jp
out
sub
inc
push
jp
inc
mov
push
push
imul
push
cmc
push
mov
inc
aam
sub
fwait
inc
xor
pushf
xor
scas
bound
testl
cmp
test
mov
in
sbb
push
mov
fnsave
xor
mov
add
stos
loope
jecxz
lahf
dec
sub
into
pop
imulb
aaa
dec
test
ret
mov
dec
jmp
jge
and
shll
pop
add
jmp
out
xor
fcompl
in
movsb
push
fwait
cmc
push
lods
dec
insb
sub
pop
xchg
jo
mov
bound
aas
jb
inc
push
sub
or
adc
shlb
lahf
push
jbe
mov
in
and
or
enter
repz
lret
inc
pushf
sbb
inc
fldenv
cmp
lcall
mov
mov
adc
xlat
popf
test
dec
stc
scas
adc
idivl
in
ljmp
fldenv
dec
loop
jnp
xor
ja
adc
icebp
xchg
insb
jecxz
fnsetpm(287
nop
and
mov
sar
pop
cmp
pop
jo
sbb
pop
pop
mov
ljmp
push
in
aad
jno
fcmovne
or
add
jecxz
aaa
shll
and
lods
xor
sbb
mov
ja
ljmp
sub
mov
jecxz
jmp
mov
xchg
faddp
test
and
outsl
add
lods
push
jge
movsb
add
inc
sbb
mov
push
mov
jb
adc
cmp
push
and
sub
bound
push
add
pop
pop
add
cli
testl
call
mov
ja
adc
movsb
and
jle
adcl
cmc
lds
lods
jg
into
fs
bound
hlt
mov
push
adc
mov
js
fnstenv
or
nop
mov
mov
sub
mov
andb
inc
xlat
sub
in
arpl
mov
stos
shlb
fs
fildl
jle
push
lds
sbb
pop
or
stos
imul
enter
in
daa
mov
ja
stos
jmp
fsubr
mov
jl
jns
mov
xor
cld
mov
xor
fisubrs
movsb
stos
loope
xlat
gs
push
and
mov
popf
aam
lea
dec
dec
adc
dec
sbb
mov
inc
push
mov
nop
xor
test
jmp
aaa
sbb
mov
fs
ja
pop
or
xor
scas
pop
out
fidivrs
nop
shll
inc
pop
fimull
pop
xchg
stos
jge
jecxz
push
rorb
js
xor
mov
sub
insb
or
mov
sti
mov
cmpsb
dec
sbb
push
mov
push
orb
push
les
lea
xor
in
fimuls
pushl
shr
mov
adc
xor
pop
shll
jb
adc
pop
push
imul
dec
rcrl
pusha
je
xlat
stos
sub
sarl
pop
cmpsb
in
sbb
sar
imul
inc
adc
insb
fmull
inc
mov
dec
mov
and
lods
mov
xor
mov
inc
push
push
xorl
hlt
mov
mov
repnz
fsubp
add
xor
scas
hlt
cmpb
pop
add
mov
xlat
test
out
addr16
shrb
clc
mov
push
jg
mov
xor
imul
shll
xchg
hlt
pop
adc
mov
adc
mull
mov
push
sbbb
adc
popf
outsb
mov
gs
mov
movsl
fwait
push
xchg
rorl
aad
inc
loope
lcall
outsb
sbb
testb
and
enter
pushw
addr16
sub
jmp
pop
pop
cmp
sahf
or
aam
pop
or
dec
adc
subb
mov
mov
cmp
icebp
jns
xchg
mov
aad
adc
out
aaa
or
pop
and
in
ficoms
lock
pop
aaa
ret
sahf
push
inc
or
outsl
adc
das
mov
jmp
jle
fsubrs
ret
pushf
push
xchg
jb
sub
sbb
cmp
out
fwait
adc
aaa
lods
cmp
jg
cmpsl
dec
frstor
rolb
shlb
daa
mov
out
mov
mov
lods
scas
mov
dec
test
into
cld
pop
pop
cmpsl
sub
shll
push
neg
push
sub
outsb
xchg
cmp
inc
loope
ljmp
arpl
pop
mov
aas
add
hlt
cli
mov
mov
push
nop
mov
enter
call
clc
cmpsb
jne
xchg
jecxz
mov
rcr
into
push
add
push
dec
int
cmp
mov
mov
add
xchg
stos
sbb
fmuls
div
and
aam
mov
mov
jp
ds
lcall
dec
add
sbb
loop
out
and
pop
insb
daa
aad
mov
cli
cwtl
popf
out
lock
sbbl
jno
popf
pop
test
shll
and
pushf
lods
orb
pop
js
pop
test
xor
pop
or
repnz
daa
ret
movsl
mov
popf
das
push
sub
test
xor
pusha
sbb
mov
jae
dec
je
push
xor
test
dec
push
test
or
and
nop
mov
sti
popa
xor
pop
loop
adc
out
cwtl
dec
ss
test
pusha
mov
pop
aad
insl
pushf
inc
xchg
fildll
nop
cpuid
mov
sub
ret
dec
cmpsb
ljmp
mov
add
dec
test
loop
jne
inc
shrl
ds
pop
adc
mov
sbb
ss
addl
cmp
push
xor
lahf
push
stc
ss
imul
cli
mov
into
sub
in
in
aam
int3
sbb
imul
and
sahf
sub
push
cmp
fistl
icebp
mov
push
jnp
loope
cmpl
ds
dec
and
inc
cmp
lret
es
mov
in
xchg
xor
mov
or
dec
mov
daa
mov
xchg
lahf
test
aam
rclb
lods
aad
xchg
add
xchg
aad
inc
pop
mov
jmp
fstpt
jecxz
aas
mov
jns
push
in
mov
add
jge
pop
mov
pop
jle
stos
dec
je
ficoms
cld
lret
lcall
mov
cmpsb
int3
and
in
push
jle
iret
mov
inc
jno
enter
dec
adc
mov
push
sub
addb
rcll
test
push
dec
mov
into
sbb
into
enter
pusha
call
mov
call
or
adc
push
subl
sti
pop
idiv
xchg
pop
ret
dec
mov
scas
jae
inc
test
subb
jle
sub
jge
sbb
lods
and
int3
ds
cmp
sub
mov
enter
scas
jo
div
push
lods
or
or
inc
xchg
test
in
mov
pop
in
mov
add
aad
xchg
cmp
jnp
iret
mov
bound
mov
imul
push
loop
jno
pusha
push
add
jns
shlb
mov
dec
or
call
xchg
sbb
and
ja
jl
add
fldenv
mov
lret
sbb
mov
xchg
inc
hlt
push
sbb
cmpsl
pop
inc
jbe
aas
and
mov
xchg
shr
sbb
ljmp
cwtl
mov
adcb
ljmp
jg
arpl
or
iret
xchg
add
dec
adc
stos
jmp
mov
sbb
and
outsl
mov
mov
xor
push
adc
xor
pusha
sub
xorl
insb
sub
cmc
or
fstp
sbb
into
test
repnz
aaa
cli
data16
fisubs
daa
jmp
pop
jl
in
sub
loop
movsb
push
fs
add
sub
lcall
rorb
lgs
sbb
push
movsb
pop
test
jl
mov
push
xchg
xchg
push
imul
ja
andb
out
movsb
mov
add
test
lret
faddl
gs
mov
insb
mov
cld
sbb
rorb
jne
add
sub
test
daa
int
hlt
mov
pop
and
sbbb
movsb
cmp
inc
sti
add
jle
inc
clc
mov
popf
adc
shlb
mov
xor
aas
lods
sbb
pop
dec
sub
fistpl
mov
inc
int3
and
in
jb
cs
mov
sbb
imul
sbbb
push
and
hlt
mov
aad
sub
xchg
jmp
push
mov
push
ret
jmp
repz
push
jg
pop
jg
pop
aaa
jnp
cld
movsb
fidivrs
addb
and
or
insb
inc
das
or
sarb
or
iret
cmpsb
out
jmp
hlt
sahf
jecxz
movsl
adc
and
std
repz
fimull
repz
das
mov
aam
ret
movsb
sarb
lahf
negb
jl
dec
push
addl
in
sbb
and
dec
cmc
lret
in
inc
adc
fwait
jnp
jecxz
mov
push
mov
sub
sti
add
or
mov
test
arpl
aaa
arpl
xor
insb
insl
cmp
push
lods
cmpsb
dec
cli
push
lock
out
push
std
js
cmp
cmp
jne
int3
mov
subl
leave
jno
mov
test
out
icebp
mov
outsl
push
and
int3
or
xor
dec
mov
subl
jmp
add
sub
imul
sbb
imul
lods
icebp
shll
loope
mov
cmc
add
cmpsl
adc
pop
repz
push
push
test
mulps
aaa
enter
aam
test
and
pop
jge
ljmp
gs
sbb
test
dec
jp
sub
mov
getsec
push
xchg
icebp
xchg
jge
dec
inc
aad
popa
pusha
or
cmc
sar
in
std
je
dec
popa
rcrb
cmp
imul
dec
mov
xchg
adc
xor
inc
fdivrs
scas
repz
in
and
dec
add
and
sbb
ss
popa
inc
cltd
shl
shl
jmp
pop
mov
stc
movsl
cli
fistpll
push
or
cmpsl
jl
xchg
hlt
inc
fisubs
mov
pop
mov
cmp
jge
adcl
mov
sub
push
ret
insl
mov
sub
mulb
mov
sahf
and
std
xlat
lahf
loope
scas
and
negb
cli
addr16
xchg
les
in
mov
pop
out
cmp
jg
fldcw
cmp
movsl
sar
jp
arpl
sarb
adc
mov
jp
ret
adc
or
imul
dec
jb
in
daa
mov
es
sbb
dec
push
pop
inc
cld
scas
aam
fldl
mov
xchg
lret
ja
shrl
add
std
bound
std
fcmovnu
and
push
or
out
push
push
or
jo
fwait
jae
fmul
jmp
outsl
loope
shlb
add
scas
pop
pop
jno
paddusw
sbb
imul
fstp
scas
mov
inc
cmp
fildl
es
shlb
imul
sub
lock
loope
mov
xor
inc
adc
fnstsw
dec
inc
inc
pusha
dec
jo
pop
mov
ljmp
sub
ljmp
arpl
mov
push
sbb
test
lcall
mov
mov
ror
dec
or
cmp
ret
push
inc
cs
xchg
outsl
scas
inc
js
pop
outsl
je
pop
ret
jp
lods
jb
xchg
cmp
xlat
mov
addr16
aaa
adcl
push
popa
jb
pusha
sahf
je
add
es
mov
push
sub
mov
mov
or
and
subl
push
inc
add
fldt
dec
push
adc
lret
aaa
dec
fcmovnbe
jb
mov
cmp
movsb
cltd
in
outsb
ljmp
sub
or
inc
inc
cmpsb
pop
cmp
dec
mov
inc
mov
test
addr16
jb
les
xchg
iret
push
or
or
fistpl
cld
mov
je
shll
sub
movsb
ss
mov
jmp
jecxz
fists
sahf
aad
push
cmp
sub
shrl
mov
cmp
push
lahf
stc
sbb
or
mov
jle
lea
lea
int3
jne
test
arpl
lret
nop
pop
icebp
leave
insb
or
rcrb
add
rcll
xlat
stc
adc
dec
popa
jg
push
lahf
rcrl
push
loop
dec
loopne
mov
xor
dec
mov
imul
fcmovnbe
loope
fwait
xchg
comiss
mov
test
loopne
dec
mov
mov
in
mov
push
add
jb
jo
shlb
sbb
or
cmp
sbb
fmul
mov
sahf
and
sbb
or
sub
xor
test
lret
imul
jg
or
xor
and
sub
or
push
loop
jle
add
in
mov
jnp
dec
push
in
mov
in
mov
mov
sub
fsubrs
add
aas
jge
iret
rcrl
pcmpeqw
or
add
addb
mov
fistl
xchg
sub
addr16
lock
out
push
pop
mov
orb
push
jl
mov
pop
insb
repz
cld
ss
popa
cs
pop
push
jnp
dec
mov
jl
push
enter
mov
or
cwtl
jo
sbbb
imul
lahf
fucompp
xchg
sbb
lahf
xchg
ljmp
mov
arpl
jb
cltd
out
add
insb
lret
aad
ja
ds
test
jmp
shrl
mov
out
stos
fldenv
imul
ret
lods
lcall
call
mov
stc
shrb
es
in
adc
int
fwait
mov
add
gs
add
lds
ret
dec
cltd
xchg
sarl
cltd
mov
iret
mov
cmpsb
mov
pop
cmc
negb
out
add
dec
mov
ja
push
jecxz
mov
cmp
dec
jp
dec
push
or
es
adc
call
dec
push
or
repnz
sub
mov
adc
cs
xor
enter
in
aaa
add
stos
flds
jl
aad
std
xchg
pop
out
jns
mov
pusha
dec
xchg
in
pop
pusha
mulb
in
mov
hlt
cld
push
push
or
pusha
loope
dec
mov
test
sbb
ret
les
lea
sub
add
mov
data16
mov
and
cmpsb
int3
lods
mov
test
add
mov
fsubl
cmc
push
sbb
test
cwtl
mov
mov
jg
mov
dec
dec
addr16
cld
xchg
push
test
pop
cli
mov
rclb
adc
mov
enter
xchg
dec
dec
xchg
out
xchg
icebp
mov
cmp
mov
or
push
push
lret
scas
mov
sbb
xchg
arpl
dec
test
daa
push
ja
out
push
pop
push
pusha
add
xor
les
sbb
lods
push
hlt
sahf
adcb
lea
ja
push
add
fldenv
sti
mov
mov
jb
pop
out
insl
xchg
pop
push
fwait
mov
jne
jge
or
mov
or
popf
insl
pop
and
adcb
cld
cmpl
cld
lock
in
cli
out
in
imul
inc
hlt
cmp
push
add
outsb
xorb
iret
ret
cmp
clc
aam
movsl
test
pop
dec
sub
insb
out
cmp
pop
mov
lret
pop
outsb
addr16
push
cwtl
cmp
out
jnp
cmp
jg
dec
ret
xor
xchg
loop
test
sbb
ret
and
and
xchg
iret
icebp
les
jnp
adc
push
aam
addr16
pushf
inc
scas
movsb
and
pop
iret
and
sbb
sbb
mov
push
leave
lock
insb
jo
rcrl
mov
sti
jns
inc
inc
dec
xor
cli
mov
mov
fisubrs
inc
rclb
clc
movsb
pusha
iret
and
xor
cmp
rcrb
mov
cmp
add
in
pushf
cs
and
lahf
daa
add
lods
xor
lcall
subl
pop
shll
fcmovnu
mov
xlat
sbb
mov
xchg
xor
sbb
sub
sbbb
out
cltd
inc
test
out
mov
aad
and
movsb
lret
dec
mov
notl
adc
or
popa
pusha
ret
sub
test
inc
push
pop
and
fisttpl
cmpsl
cltd
adc
aam
dec
xor
stos
mov
and
xchg
lock
jl
movsl
cmp
and
fsubrs
cmc
lret
cmp
lcall
push
mov
lcall
xor
adc
sub
jae
push
adc
xlat
mov
pop
pop
sub
and
jno
aaa
pop
add
repz
mov
sbb
and
lea
or
dec
jbe
ja
into
fmuls
add
sbb
xchg
cs
mov
repz
addr16
mov
js
xchg
adc
insl
mov
movsb
fildl
cli
movb
jg
popf
lret
nop
xor
les
add
cli
pop
sbb
pop
dec
push
clc
mov
fildl
push
pusha
stc
xor
sbb
jnp
xchg
dec
into
clc
xchg
out
adc
lods
lods
nop
sbb
ds
mov
loop
repz
pop
mov
jae
repnz
add
aaa
int3
test
xchg
mov
test
push
inc
in
clc
lcall
cmp
push
push
data16
inc
or
adc
add
jmp
mov
icebp
jo
cmp
sbb
ljmp
mov
std
jae
outsb
dec
aas
daa
filds
sbb
lods
arpl
cmp
or
hlt
mov
inc
push
dec
push
ljmp
sub
test
out
aad
jle
jae
test
test
test
out
pop
jecxz
in
adc
jnp
jle
mov
or
aas
mov
lods
mov
ret
xchg
mov
cwtl
inc
mov
xor
push
sub
adc
movsb
pop
aas
sub
jp
mov
cmp
mov
aaa
mov
pop
fmull
fs
cmp
mov
mov
rcll
fabs
and
popf
jp
add
sub
movsb
push
je
scas
sbb
pop
shll
rcr
in
fucom
and
dec
jecxz
bound
aad
xor
loopne
in
or
insb
jg
inc
mov
adc
xchg
ljmp
cmpsl
push
or
cmp
or
dec
js
jns
stos
cli
and
sub
call
cmp
or
scas
aam
push
aas
push
adc
and
lock
push
sub
xchg
js
pop
mov
subl
rorb
inc
popf
inc
sbb
movsl
pop
scas
sub
not
jo
mov
mov
sub
pop
mov
dec
mov
mov
stos
fmull
push
imul
sbb
add
adc
sub
inc
xchg
in
adc
pop
and
cli
mov
pop
sub
cld
lcall
cltd
shlb
push
fwait
xor
aaa
adc
lret
mov
outsb
out
test
shrb
jmp
cltd
mov
jl
cmp
mov
je
sbb
or
mov
xor
movsb
fidivs
insl
mov
inc
repz
and
xor
repnz
sbb
xchg
inc
clc
in
aas
xchg
push
push
lock
mov
arpl
lds
adc
dec
jle
aam
mov
pop
push
mov
xchg
xchg
mull
sub
jg
insl
mov
out
jmp
mov
mov
orb
data16
cltd
les
adc
push
mov
inc
iret
sbb
mov
cwtl
fcmovnu
in
xchg
add
mov
cmpsl
jns
sbb
xlat
xor
inc
loopne
lret
cmp
inc
fbstp
xchg
test
mov
mov
mov
bound
mov
mov
aad
dec
mov
or
xor
inc
push
mov
fs
sbb
jle
mov
lret
xor
push
sbb
lds
mov
imul
sti
mov
lret
lock
adc
stc
arpl
add
mov
cmpsl
incl
push
stos
and
imul
push
cmp
xor
fs
call
out
mov
sbb
lret
popf
mov
adc
loope
loope
fwait
xor
add
mov
sub
xchg
or
xchg
push
push
fwait
xor
jno
repz
ret
sub
pop
cmp
inc
mov
add
pop
dec
mov
dec
pop
lret
jg
orb
cld
jp
mov
pop
je
imul
xchg
movsl
cmp
jno
sbb
data16
icebp
lahf
cmp
jle
push
jg
pop
scas
stc
cmp
and
xor
xchg
dec
incb
out
icebp
mov
xlat
mov
sbb
aaa
cld
cmp
mov
lods
inc
cmp
adc
call
fstps
sti
aam
jecxz
jno
xchg
pop
sub
jp
rolb
test
cmp
or
lock
dec
mov
push
push
bt
bound
bound
pop
sub
das
lahf
or
xor
adc
bnd
dec
decb
pushf
les
scas
pop
lea
sbb
aam
push
aas
fisubl
ds
fs
aaa
mov
in
std
lods
pusha
iret
sub
add
shll
enter
jge
xchg
add
and
out
fists
add
fmul
and
and
mov
mov
cmp
in
lods
add
or
rol
pop
test
sti
ljmp
cmpsb
cmp
add
out
aam
mov
fwait
ljmp
aam
xchg
gs
dec
xchg
push
aaa
xchg
scas
nop
cmp
sti
adc
sbb
in
pop
xor
outsl
std
cltd
mov
faddl
xchg
iret
js
lods
ljmp
jg
and
and
cwtl
fstps
jno
inc
outsb
scas
push
stos
enter
add
imul
add
aaa
or
adcl
or
inc
je
dec
push
jp
adc
mov
sbb
shrl
test
insl
mov
dec
and
push
pop
pop
jge
out
xchg
xchg
cmc
adc
mov
lods
push
movsb
lods
ljmp
sarl
aam
orb
leave
test
outsb
enter
xor
mov
push
cmp
mov
mov
xor
mov
mov
dec
xchg
stos
inc
shrb
jle
mov
sahf
fcomps
and
or
sub
cmp
mov
push
inc
pusha
dec
jo
cmp
push
cmp
sub
xor
stos
rcrl
fisttpll
pusha
inc
sar
xchg
cmpsb
jl
jae
mov
and
inc
test
daa
lret
int
dec
loopne
adc
cmc
cmp
sub
movb
push
xchg
stc
shlb
push
loope
adc
pop
cld
mov
into
push
popf
stos
iret
mov
add
fistpll
xor
inc
addl
adc
outsl
pop
add
xchg
loop
or
outsl
jge
adc
aam
loop
data16
push
and
push
sbb
mov
bndstx
mov
mov
and
jmp
inc
fwait
dec
sub
xor
into
xchg
imul
pop
dec
ret
sub
add
add
fucomi
fsubl
add
addr16
xor
inc
pop
bnd
cwtl
pop
aaa
fnstcw
bound
dec
and
scas
mov
xor
ret
pop
cmp
gs
sub
jns
mov
xchg
enter
ja
cmp
xchg
in
inc
xchg
icebp
or
push
hlt
ds
add
cmpsb
fistps
sbb
popa
ja
adc
jns
mov
xlat
or
daa
daa
and
push
cmp
aad
inc
pusha
je
aad
imul
iret
movsb
adc
dec
hlt
jnp
push
push
adc
inc
mov
adc
pop
pushf
or
call
push
addb
mov
cmc
mov
into
insb
or
call
outsl
comiss
aam
mov
mov
pop
add
mov
sbb
cmc
leave
rcrb
sbb
stos
mov
adc
std
fwait
xchg
lods
mov
add
daa
add
cld
lret
fneni(8087
jmp
push
in
fwait
cmpl
mov
cmp
sbb
aad
pop
aas
sbb
lds
ret
add
sbb
adc
xchg
icebp
dec
or
addr16
inc
adc
xchg
jmp
xor
dec
pushf
outsb
pop
fidivs
sar
hlt
stos
cli
jmp
insl
jbe
jl
inc
xor
jae
iret
lahf
stos
adc
inc
xchg
mov
imul
aas
add
iret
xor
mov
imulb
test
xchg
add
mov
mov
sbb
jecxz
or
xchg
inc
pop
sbb
push
mov
hlt
leave
shlb
add
xlat
sub
or
add
sub
pop
mov
ficomps
out
push
out
push
test
jne
je
lahf
and
outsb
pop
cld
xchg
fldcw
lea
pusha
aad
aaa
gs
sbb
adc
js
pop
pop
pushf
push
push
rorb
cmp
mov
fucomip
and
popa
js
imul
pop
std
mov
rorl
and
adc
push
jmp
xchg
dec
and
in
push
xor
adc
inc
and
sbb
pop
pop
roll
lret
subb
incl
bound
inc
insl
cwtl
sub
sub
cmp
neg
jge
incl
sahf
sub
js
inc
xchg
mov
mov
adc
jmp
and
add
cmc
mov
xchg
mov
lods
xor
or
push
nop
jae
js,pn
add
mov
adc
pop
sbb
inc
stos
xchg
into
lret
sar
xchg
lea
mov
sti
cwtl
loope
aam
js
shl
inc
xchg
test
mov
adc
bndstx
adcb
sarl
fcomip
pop
sbb
inc
add
pop
loopne
xchg
xchg
xor
dec
push
in
cmpsb
and
fildll
sahf
ljmp
imulb
push
dec
imul
jno
loope
add
or
dec
xor
jmp
ja
mov
fs
sub
les
repnz
push
xor
rcr
ficoml
daa
jg
je
dec
sbb
mov
sub
push
lahf
setg
xor
mov
jl
scas
xor
push
out
lods
pop
sbbb
or
decb
dec
or
imul
add
inc
xlat
jnp
and
in
or
mov
inc
cmp
shll
mov
repz
adc
fs
lret
xor
pop
clc
cmp
mov
mov
xchg
and
push
mov
test
sbb
xchg
push
outsl
aad
pop
sub
lods
pop
xor
push
cmpl
add
cmp
lock
adc
jo
imul
jmp
into
das
mov
xlat
sbb
daa
jle
div
jns
inc
gs
dec
and
push
outsl
or
in
adc
bound
or
cmpsb
movsl
cli
iret
mov
add
insl
mulb
sbbb
aam
xor
jae
lds
aaa
fidivrl
pushf
mov
mov
mov
or
push
ljmp
or
xchg
push
ja
jne
jns
lods
aad
mov
shrl
mov
sbb
xchg
clc
push
sub
out
clc
mov
lock
mov
fisubrs
daa
mov
inc
movsb
movsb
lds
cmpb
push
lea
push
mov
lret
push
dec
ret
add
outsb
xchg
sbb
mov
je
push
jmp
sub
bound
sbb
jecxz
dec
add
cmpl
mov
repz
cs
cmp
add
aad
adc
xor
gs
movsl
sbb
jbe
movsb
insb
adc
in
clc
add
cmp
mov
dec
xor
add
sbb
or
sub
mov
and
jnp
sub
push
adc
push
mov
daa
mov
and
mov
jns
add
adc
hlt
inc
rcr
popf
inc
xchg
sbb
sub
cli
movsb
stos
pop
testb
lcall
scas
mov
out
adc
mov
pop
dec
xchg
cmpb
jg
mov
push
insl
in
divb
sbb
pop
mov
int
mov
pop
push
fcoml
jbe
loop
pop
push
adc
mov
iret
ret
jbe
mov
cmp
dec
pushf
adcl
xchg
ljmp
mov
pop
insb
imul
jns
ficoms
in
outsl
sti
push
out
aam
dec
stos
ja
dec
mov
jmp
fmulp
jnp
lds
notl
pop
push
bound
push
mov
jp
push
mov
hlt
sbbl
mov
ja
inc
fstpt
aas
data16
leave
out
cli
cltd
stos
pop
or
cmp
cwtl
arpl
mov
push
dec
mov
test
lret
xor
add
cmp
jb
cmp
pop
js
sti
sahf
adc
pop
movb
je
cmc
stos
dec
call
out
nop
xchg
dec
rcrl
xchg
shlb
fnstsw
mov
into
mov
cltd
push
push
inc
mov
jle
stos
mov
cmp
sub
sahf
xlat
imul
aam
jmp
sbb
mov
push
icebp
ret
stos
adcb
adc
sub
shrl
out
cwtl
std
fsts
fstl
addr16
sbb
rolb
cmpsl
je
xchg
js
jl
sbb
xchg
fimull
mov
sbb
add
addr16
add
addl
into
jg
adc
sbb
push
mov
and
push
inc
xor
mov
fstpt
sbb
lret
je
pop
add
cwtl
lahf
mov
je
mov
mov
imul
stos
add
add
lds
mov
stc
or
arpl
mov
xor
pop
sbb
repnz
scas
cmp
jnp
dec
movsl
insl
mov
sbb
jl
pop
ret
addb
push
and
daa
mov
lock
adc
mov
xchg
adc
jecxz
and
sbb
sub
sub
sbb
aas
sbb
sub
repz
decl
out
jg
mov
push
loope
inc
insb
orb
sbb
sub
daa
or
icebp
outsl
mov
or
imul
addr16
mov
sub
movsb
add
mov
mov
int3
mov
cmpsl
or
das
es
adc
imul
jge
mov
mov
pop
mov
sub
or
pop
inc
sbb
lock
mov
ret
xorb
flds
mov
adc
in
testb
cmp
mov
or
decl
enter
imul
or
scas
push
repz
in
xchg
cmpl
adc
sahf
popa
inc
sbb
push
in
sbb
inc
inc
jbe
jnp
push
lods
inc
fiaddl
push
inc
fs
push
mov
fnstcw
scas
in
push
xor
lahf
sub
test
mov
xchg
cwtl
push
mov
sub
imull
push
sub
fwait
adc
jno
sarb
push
xchg
mov
cmp
stc
inc
xor
out
push
cld
mov
jnp
aaa
jbe
stos
movsb
and
or
sbb
fildl
push
inc
iret
sbb
mov
xor
adcb
push
cmp
xorb
repz
mov
mov
aas
repnz
xchg
cld
inc
mov
cli
dec
fs
cs
ds
fadds
add
imull
xchg
or
add
mov
insl
xor
jp
adc
jns
lds
sbb
mov
je
imul
fsubs
and
bound
xchg
mov
mov
cmp
mov
jo,pt
xchg
jb
jmp
nop
sahf
cmp
cs
push
test
mov
insb
xor
aam
dec
sbb
insb
mov
push
sbb
fnsave
imul
push
push
popa
push
rolb
mov
stos
add
bound
sbb
and
lea
loopne
cmp
leave
incl
dec
jae
fwait
data16
loop
imull
es
scas
inc
pop
sbb
pop
mov
aad
movsl
xor
add
xor
cltd
lds
movsb
arpl
jb
xor
test
fildll
or
mov
out
cmpb
mov
sbb
or
mov
dec
add
push
popf
add
inc
das
jb
pop
orl
out
ljmp
pop
add
add
cli
sub
sbb
mov
mov
cs
incl
xchg
jbe
mov
decl
and
scas
jg
mov
adcb
add
sbbb
pop
ja
dec
mov
adc
in
aam
pop
dec
ret
dec
fdivrs
cmp
lahf
sbb
inc
call
ja
mov
aam
jnp
mov
jle
cmp
mov
test
data16
lds
xor
xchg
sti
cld
inc
push
xchg
pushf
push
int3
jge
inc
pop
and
mov
or
adc
pop
push
fiaddl
adc
sub
mov
mov
jge
jae
xlat
sbb
scas
inc
mov
insl
fst
add
push
xchg
push
xor
test
pop
test
jl
bound
cmp
std
and
add
pop
fcmovnu
loopne
test
ret
loop
cmp
mov
or
mov
imul
insb
jecxz
popf
inc
loop
dec
mov
fwait
mov
test
jg
ret
mov
dec
push
orb
mov
push
adcb
push
cwtl
dec
push
jmp
sahf
movsl
and
mov
ret
notb
mov
adc
aaa
inc
cmp
sub
stos
sti
or
push
push
sbb
cmpsl
jp
insb
push
arpl
mov
cmp
cmpsl
adc
sbb
rorb
jbe
rorb
fwait
inc
and
popa
add
lock
hlt
xchg
add
dec
arpl
lock
dec
ds
mov
sti
psllw
cmp
pop
imul
adcb
pop
inc
mov
dec
in
fdivrp
xor
das
xlat
stc
lock
inc
iret
pop
mov
loope
jp
push
mov
add
nop
and
lock
stos
dec
jno
jb
je
lods
mov
dec
imul
shlb
mov
mov
in
mov
fdivs
dec
movsl
mov
add
in
mov
dec
addr16
mov
lea
notb
push
cltd
lahf
movsl
test
adc
dec
xor
test
rolb
sub
xor
xor
shll
sub
inc
mov
dec
nop
xorb
pop
bound
les
test
xchg
cs
cli
test
leave
push
in
xchg
cwtl
adc
xchg
sbb
jmp
out
jg
jae
push
xchg
pop
int3
in
inc
repnz
loop
add
and
dec
sti
push
sbb
add
mov
dec
push
cmovge
xor
jnp
repz
fldcw
fbstp
sub
mov
nop
inc
je
out
cmp
mov
and
mov
inc
lods
adc
icebp
pop
pop
mov
mov
dec
jge
dec
mov
scas
dec
xor
jg
push
in
negl
mov
pop
jmp
js
xlat
dec
test
nop
scas
jnp
ds
jp
add
into
dec
or
mov
out
xlat
or
dec
and
adc
jle
test
push
test
push
cmp
add
jl
loop
add
and
test
xor
ss
jle
mov
and
lods
sbb
cmp
and
insl
test
out
inc
pop
int3
push
mov
loopne
test
mov
cmpsb
hlt
shlb
mov
sub
jo
pop
call
add
bound
icebp
mov
jg
fucomip
jecxz
push
in
nop
mov
test
dec
enter
push
push
push
push
test
or
incb
roll
xchg
shll
dec
or
stos
adcb
pop
repnz
repnz
stos
cmc
js
jecxz
sbb
cmp
mov
mov
xlat
andb
insb
cmp
inc
mov
lods
and
in
loopne
xlat
add
call
mov
stos
test
out
inc
adc
cmp
fadds
pop
mov
mov
or
dec
outsl
roll
clc
lahf
jmp
inc
lock
das
cltd
dec
jns
xchg
je
dec
shll
fwait
sbb
xor
hlt
call
cmp
lds
rcrl
pop
or
push
outsl
lock
int
xor
push
ja
cmp
add
js
dec
cmp
clc
sbb
pop
mov
int3
sub
add
filds
and
sbb
out
dec
sahf
sub
popa
dec
testl
cmpb
xor
lahf
fld
clc
call
aas
stos
scas
and
fistl
or
rol
xor
push
mov
fsubr
jp
mov
sbb
add
or
ret
iret
fld
mov
hlt
jg
data16
test
cmp
nop
mov
pop
dec
pusha
ja
mov
and
adc
outsl
dec
xchg
stos
xchg
fisttpll
inc
jg
cwtl
stos
xchg
jo
std
sbb
rcll
mov
or
push
idivb
jb
ss
xchg
inc
jecxz
loope
test
leavew
jae
insl
mov
bound
test
in
lds
mov
fcompl
repz
adc
shl
ja
or
gs
xchg
insb
dec
sub
dec
push
push
push
xchg
mov
sub
sbb
in
pop
lds
push
inc
arpl
or
xlat
or
cltd
fcompl
adc
xchg
and
sbb
cmc
cmp
mov
insl
cld
lahf
inc
fisubs
push
ja
lock
movsl
pop
jle
ds
nop
arpl
mov
jl
and
int3
popf
test
xlat
jnp
dec
out
push
xlat
mov
daa
into
lret
fdivrl
or
sub
mov
dec
jp
jno
mov
sar
data16
xor
cld
cmpsl
xor
pop
adc
add
scas
mov
cltd
aad
bnd
xor
addb
and
je
mov
sub
or
fidivrs
in
dec
adc
ss
cld
loop
xchg
cmpsb
lahf
popa
jnp
cmp
sbb
frstor
scas
xchg
arpl
orb
inc
mov
pop
dec
xor
shr
int3
sub
ss
pop
fs
or
idivl
add
jl
icebp
jecxz
cmp
lds
dec
pop
xor
nop
jae
inc
cmpsb
mov
dec
jle
sbb
dec
jbe
mov
scas
pop
xchg
jae
mov
out
pop
jbe
cmp
cmp
mov
in
inc
fcoms
lock
push
dec
jecxz
sbb
cli
mov
fs
mov
jg
dec
cmp
nop
push
mov
leave
adc
cmp
cmp
inc
mov
movsb
subb
repz
jecxz
jle
in
xor
pop
inc
leave
mov
int
decb
aam
mov
sarb
pop
jbe
loop
je
pop
or
xchg
sub
mov
jae
mov
mov
push
je
imul
addr16
loop
cli
pop
sbb
add
mov
mov
les
icebp
add
pop
ss
outsb
push
mov
stc
mov
xchg
outsb
push
mov
test
xchg
loop
les
sub
inc
pop
pop
cmp
lods
in
jp
lret
adc
adc
push
or
sbb
insb
movsb
aas
xorb
sbb
add
pop
insb
arpl
xor
jge
xlat
mov
fnstcw
pop
lods
daa
test
and
fiadds
lret
push
jecxz
lds
mov
jmp
jecxz
inc
rcll
hlt
mov
or
gs
push
xchg
pop
loopne
dec
pusha
scas
movsl
ds
movsl
mov
stos
hlt
adc
ficompl
outsb
mov
sti
mov
push
lret
fisttps
stc
lds
mov
test
addr16
aas
jge
mov
ja
mov
jecxz
cs
pop
aam
movl
mov
in
jnp
testl
rcrb
ja
add
add
jb
popf
std
sbb
lods
out
mov
mov
mov
mov
xchg
xlat
mov
cmp
push
xor
out
mov
xor
ja
jmp
inc
dec
lret
ret
out
xchg
push
add
mov
out
dec
enter
arpl
and
repnz
pop
mov
arpl
push
pop
mov
and
iret
in
fdiv
sbb
jle
out
es
out
and
subb
xchg
das
movsl
mov
mov
stc
push
jge
xchg
inc
mov
lret
push
out
outsb
pop
repz
imul
dec
mov
repz
ficomps
mov
jnp
add
jmp
jb
add
mov
dec
sti
outsl
cmp
sbb
push
out
lock
daa
xchg
inc
flds
push
div
sarb
ljmp
dec
push
and
scas
movsl
imul
loopne
sub
dec
or
xlat
loopne
shll
or
cmp
mov
lea
mov
and
inc
subb
xchg
enter
xchg
dec
pop
pop
xor
scas
flds
pop
pop
mov
mov
adc
sbb
rcr
data16
scas
xor
mov
and
mull
cmpsl
push
adc
movsb
cmp
xor
sbb
mov
jmp
mov
ljmp
test
mov
call
aam
sbb
imul
mov
mull
xor
push
mov
dec
mov
pop
lahf
sub
aaa
stos
ret
inc
pop
or
inc
sub
hlt
mov
not
sbb
mov
enter
push
in
pusha
pop
rcrb
test
mov
push
aam
int
jne
adc
jmp
aas
push
stos
out
jmp
mov
sarl
sbb
cwtl
push
dec
fldz
cmpsw
outsl
fwait
jns
cmc
sub
xchg
inc
idiv
mov
lret
mov
scas
dec
fsub
idivb
sub
pusha
and
push
push
push
jae
mov
int3
cmp
fdivl
mov
inc
and
mov
mov
out
sub
adc
fisubl
cmc
stc
cmpsl
xor
push
out
test
cmpb
movsb
inc
pop
xor
mov
jmp
out
cmpsl
xchg
push
test
sub
scas
js
outsb
sub
fimull
add
shlb
sbb
adc
rorl
test
inc
mov
inc
add
into
aad
sbb
mov
iret
jg
data16
test
cli
pop
cmp
int
push
fidivrl
mov
les
pop
add
aaa
xchg
xchg
add
mov
sbb
or
call
in
jbe
mov
sbb
int
xchg
pop
pop
sub
pop
cmp
out
ret
xchg
fwait
outsb
jo
loopne,pn
fwait
adc
mov
push
cmp
xor
clc
jmp
jge
ret
mov
aad
cwtl
pop
outsl
add
out
sbb
jb
xlat
test
jg
sbb
fcomip
mov
ljmp
add
hlt
jg
add
inc
pop
out
fsubr
or
sti
cmp
mov
xchg
jnp
add
idivl
dec
and
xor
shll
rorb
xor
sub
test
lock
ss
xlat
mov
stos
jecxz
mov
rorb
and
scas
push
aas
cwtl
inc
cmp
aas
inc
cmpsb
out
pop
xchg
mov
out
inc
sti
lods
cmp
sub
subl
stos
in
mov
repz
dec
inc
push
adcl
mov
and
imul
mov
das
adc
dec
cwtl
adc
sti
fidivl
fstps
adc
movsb
addr16
lea
mov
fildl
mov
stos
arpl
movsb
inc
xor
cld
mov
inc
shrb
and
int
pop
roll
xchg
pop
mov
cmp
mov
mov
jle
mov
scas
xor
je
ret
jnp
in
jno
mov
pushf
gs
divb
adcl
adc
sbb
mov
pop
push
in
xor
dec
mov
test
jle
in
mov
add
into
imull
pop
push
mov
repnz
cmpsb
int
dec
and
xchg
push
xchg
fwait
movsl
jne
roll
sub
movsb
fcmovbe
out
inc
push
fld
pop
adc
imul
mov
pop
jb
fwait
pop
mov
add
cmp
dec
sahf
pop
stos
or
lret
js
push
int
shl
inc
pop
push
dec
sbb
insl
test
cmp
mov
rcrl
fistpll
test
mov
stos
testb
aad
sbb
int
xchg
cmp
jns
dec
xchg
adc
aaa
inc
cmp
push
mov
push
popf
jae
int3
insl
pop
add
cltd
mov
sbb
fistpll
adc
sbb
int
or
daa
and
idivl
fbstp
fs
fidivl
pushf
jbe
insb
or
fcompl
xchg
mov
adc
dec
sbb
add
mov
add
stc
es
or
sub
movsl
push
xchg
cmp
inc
lret
icebp
mov
int
jp
push
iret
clc
ja
pushf
adc
or
xor
inc
push
in
push
lahf
stos
leave
aaa
lcall
push
popf
pop
xchg
xchg
xor
pop
pop
jg
add
push
xchg
cmp
stos
push
jo
and
pop
fisubs
jmp
lods
push
and
xor
adc
sbb
js
add
and
loopne
fdivrl
push
pop
int
jl
js
hlt
pop
mov
xor
jns
mov
out
pop
arpl
stc
mov
inc
test
ret
or
adc
or
test
mov
icebp
xor
mov
out
pop
fldl
push
or
bound
mov
icebp
jmp
mov
inc
or
imul
lahf
popa
pusha
roll
test
pop
mov
shr
add
pop
jae
push
inc
inc
gs
arpl
je
dec
bnd
outsl
stc
nop
push
mov
in
add
inc
sub
pop
jbe
insl
xor
jns
mov
pusha
es
in
lahf
mov
cmc
xor
std
mov
mov
test
adc
int
add
jl
pop
or
and
mov
add
ret
jnp
cltd
or
pop
std
push
add
imul
or
nop
or
mov
loop
inc
xorl
lods
pop
clc
mov
jmp
xchg
ficoml
lock
scas
push
iret
mov
das
jle
int
shlb
div
or
fxch
mov
fistpl
in
jp
push
sbb
or
sub
add
cmpsl
fisubs
mov
mov
add
sarb
dec
aam
cwtl
pop
pop
test
xor
inc
dec
push
popf
sub
in
cmpsl
pop
fistl
xchg
fsub
insl
xor
mov
inc
pusha
outsb
jne
xchg
fistpl
into
inc
inc
mov
jge
sub
ds
and
cltd
lret
or
xchg
out
int
mov
jae
mov
xchg
call
lds
stc
roll
adc
in
fs
inc
push
out
cmp
jns
ss
cwtl
out
cmp
mov
in
dec
fwait
mov
jno
imul
sub
and
out
arpl
xchg
or
push
mov
je
or
or
sbb
mov
in
pop
sbb
movsl
int3
push
jno
xor
daa
arpl
movlps
dec
push
popa
daa
clc
xlat
scas
lods
pop
sub
bound
mov
xchg
fsubr
xor
cmp
pusha
xchg
mov
icebp
outsb
push
or
mov
repz
push
jmp
adcl
mov
and
mov
addr16
sub
and
xchg
add
test
ljmp
nop
es
mov
enter
lahf
xor
and
dec
scas
into
add
pop
pop
jno
pop
cld
loope
mov
fsubrl
mov
inc
or
mov
jns
adc
jae
fcmovnb
xor
jne
nop
out
les
addr16
imulb
and
and
hlt
roll
das
fldt
cld
jmp
test
push
or
mov
cs
jb
lock
jbe
push
or
add
and
das
fs
sarl
or
dec
xchg
dec
and
push
loopne
mov
sti
sbb
in
shrl
test
mov
fnsave
mov
mov
inc
aam
mov
sub
shrb
xlat
xor
pop
popf
or
jecxz
add
mov
pop
add
xlat
and
fisubs
mov
fbstp
dec
flds
mov
mov
xor
sub
inc
cmp
pop
icebp
cltd
dec
in
jns
lret
or
inc
cmp
xchg
sub
clc
inc
lock
jno
cs
pop
fstpl
in
sub
pop
xor
xor
sbb
inc
mov
mov
cld
pop
sbb
movsl
fmuls
mov
das
std
call
cmc
pop
inc
add
jno
jle
cwtl
jl
imulb
mov
add
iret
std
bound
push
int3
jns
cmpsb
in
jg
dec
and
pop
xchg
cmp
sub
inc
add
sbb
push
stos
sahf
add
xchg
int
or
push
pushf
scas
inc
in
add
cwtl
and
es
ljmp
es
jmp
push
imul
test
add
scas
add
mov
sub
and
sub
jmp
mov
xchg
in
mov
cwtl
adc
loop
test
pop
arpl
inc
fs
dec
ret
cli
out
inc
sub
scas
jb
popa
pop
mov
call
jecxz
jnp
movsb
inc
enter
jg
jno
mov
add
lcall
imul
sub
popf
out
sbb
sub
roll
stos
lods
hlt
inc
or
cwtl
rcll
fnstcw
insb
insw
push
xchg
icebp
push
mov
jge
cltd
jl
or
mov
or
fs
push
and
out
xor
push
js
mov
dec
aam
xchg
insl
mov
push
push
mov
js
fscale
or
mov
mov
mov
out
push
mov
xchg
or
or
xchg
gs
cmp
js
stos
push
add
cmpsl
inc
fildll
or
loope
push
mov
jle
negb
pop
sbb
mov
stc
mov
scas
push
xchg
mov
pop
repnz
xchg
ss
shlb
fdivrs
test
cs
pop
push
pop
insl
test
xor
fstps
pop
mov
sahf
sub
push
jle
cmpsl
cmp
out
xchg
mov
aad
pop
out
cld
sti
sub
cwtl
jl
ljmp
insb
mov
jbe
outsl
inc
adc
xchg
repz
sbb
aas
cmc
push
pushf
mov
cmc
je
mov
dec
sbb
popa
cli
cmp
div
pop
imul
inc
mov
fsubp
scas
scas
mov
sbb
out
in
inc
xor
add
insl
lods
push
shr
xchg
scas
and
pushw
leave
mov
or
enter
ljmp
mov
cld
mov
sub
sbb
pushaw
xor
dec
ret
push
xchg
test
mov
hlt
and
ljmp
xor
movsl
mov
dec
out
jns
cmp
mov
idivb
js
divl
fs
cmp
mov
mov
outsl
leave
insb
dec
lods
mov
repnz
jo
mulw
adc
imul
adc
loop
mov
mov
stc
call
sub
aad
clc
mov
das
cmp
xchg
repz
repz
call
cmp
mov
or
xor
xchg
iret
adc
sbb
insl
loope
and
xor
std
sub
cmp
jbe
adc
and
clc
ds
fs
inc
cwtl
data16
test
dec
ljmp
aaa
sub
pop
stos
test
push
stos
testl
push
dec
fwait
adc
lock
std
pop
mov
push
add
into
push
lock
jnp
shll
inc
addps
aam
pop
orb
mov
cmc
adc
adc
fwait
add
int
mov
fldl
ljmp
roll
sti
mov
inc
mov
sbb
xor
ret
in
enter
cmp
push
mov
sbb
test
popf
pop
hlt
mov
jo
sub
or
prefetch
inc
push
jp
or
sahf
or
ss
aas
cmp
ds
pop
pop
cmp
in
fwait
test
les
int3
mov
ss
mov
je
out
cmp
lcall
outsl
test
pusha
lods
enter
xor
insl
clc
decb
mov
dec
cmp
pop
fiadds
xchg
cmp
add
testl
icebp
jg
lret
das
jne
fs
xor
mov
mov
pop
incl
cmpsl
dec
jg
pop
pusha
xchg
fidivrl
xchg
dec
xor
daa
push
popa
jecxz
or
mov
cld
mov
rclb
dec
pushf
sbbb
pop
imul
mov
add
and
les
push
lea
lret
xor
pop
dec
push
subb
or
jl
das
hlt
outsb
out
sub
repz
cmpsl
scas
ret
call
push
movsb
or
mov
sbb
orb
push
cmp
loope
rclb
gs
jge
ljmp
inc
mov
mov
mov
sub
btr
subb
ja
cwtl
cwtl
and
mov
fsubrl
mov
rclb
nop
insb
xchg
sbb
sub
jle
ret
scas
and
and
dec
pop
mov
mov
jge
inc
mov
bnd
add
jmp
adc
cmp
ja,pn
popa
in
dec
push
add
jp
dec
sbb
push
insb
popf
cmp
insl
mov
mov
fdivrs
add
lcall
xchg
out
scas
sbb
and
enter
cmp
push
xchg
pop
mov
jb
je
popf
rclb
sub
or
push
pop
or
movsl
dec
jle
jmp
dec
les
lret
mov
lret
lods
popa
xchg
adc
or
xor
sarl
adc
call
test
inc
adcb
int3
fbld
jb
ret
insl
ficoml
and
fs
inc
shll
mov
inc
jl
into
sub
mov
or
ja
mov
loopne
add
rcr
es
lret
stc
sti
cmc
adc
ljmp
sti
jmp
dec
stos
inc
leave
aad
sbb
std
push
mov
inc
cmp
mov
aam
arpl
inc
mov
dec
xchg
xchg
or
enter
incb
inc
es
enter
out
addr16
lcall
loope
xlat
addr16
sbb
enter
sub
xor
sbbl
xchg
and
xor
xor
dec
fcmovnbe
pop
fadds
xlat
cmp
out
out
dec
repz
pop
out
mov
inc
lods
pop
ds
lock
push
in
ret
ljmp
loope
dec
andl
sti
mov
pop
jnp
fstl
das
jb
jbe
push
mov
test
pop
mov
xlat
lods
mov
lcall
fsubs
inc
pop
mov
jne
lock
fidivl
mov
pop
jae
loope
ret
push
pop
mov
mov
pop
aaa
cli
popf
pop
test
cwtl
jb
xor
std
outsb
mov
inc
out
xor
push
mov
jnp
jle
test
jns
xor
aaa
xorb
iret
or
iret
jnp
sbb
mov
movsb
jge
out
fiadds
and
jns
stc
es
add
or
mov
stc
sbb
mov
mov
fdivl
jnp
dec
dec
pop
imul
es
fs
int
pop
in
enter
push
fsubp
in
sub
popa
clc
jbe
fsubrl
dec
mov
inc
fdivl
pop
xchg
lcall
fcmovnbe
jno
sub
inc
push
cmp
sub
fldl
add
or
sbb
aas
dec
jmp
movsb
inc
rclb
and
lods
gs
fidivl
enter
test
stos
scas
int
les
add
in
push
aas
cmp
subb
xor
sub
scas
xchg
hlt
testb
lds
stos
fsts
jbe
or
lds
and
pop
ret
ja
dec
dec
dec
shlb
jge
hlt
aam
mov
pop
jl
test
xchg
xor
dec
aam
es
and
into
mov
and
js
aas
adc
sub
and
in
das
sahf
outsl
sahf
popf
pop
and
lds
push
loope
roll
sti
jl
adc
or
push
aad
xor
mov
dec
add
xor
loop
gs
mov
add
lods
jbe
mov
fcompl
subl
mov
in
xchg
leave
je
mov
fwait
ret
pop
mov
into
shll
add
mov
adc
adc
xchg
adc
and
dec
fldenv
dec
adc
inc
pop
daa
and
dec
out
pop
xchg
int3
lea
inc
or
xchg
aas
mov
push
pop
es
mov
mov
mov
sti
mov
mov
shl
jecxz
or
bound
pop
insl
out
in
ret
mov
rorb
push
repnz
lods
pop
popa
out
push
outsl
mov
lret
test
int
aad
xchg
andb
sbb
test
or
fwait
shrl
imul
dec
test
mov
aam
negb
fildll
imul
shlb
or
xchg
mov
out
fs
filds
xchg
jge
pop
rorb
out
outsb
mov
lret
imul
lret
add
into
mov
push
mov
xor
imul
call
adc
mov
in
mov
pop
movb
push
jg
xchg
repz
arpl
fistpll
mov
out
mov
mov
mov
pop
add
rorb
or
test
or
das
loopne
aam
cs
mov
bound
sarl
nop
sbb
ror
inc
scas
mov
cmp
outsl
mov
mov
inc
lcall
add
cmp
xchg
mov
sub
mov
in
sub
js
ja
and
adc
out
and
dec
out
dec
filds
xor
sbb
xor
and
push
inc
adc
or
cmp
in
mov
jbe
packssdw
fwait
mov
psubb
inc
sub
push
pop
subl
adc
lahf
sbb
add
jmp
arpl
mov
push
aas
and
daa
push
gs
stos
push
or
movsl
fwait
sub
js
fmull
dec
push
cmpsl
shll
dec
sbb
cld
insb
push
ret
out
xor
adc
lret
inc
cwtl
ss
jmp
mov
jnp
dec
jg
mov
orl
dec
pop
jo
jb
sub
xchg
jge
imul
push
cmp
cmc
int3
shlb
and
lds
mov
or
clc
dec
and
and
fcompl
pop
ret
xchg
pop
and
into
lock
pop
shr
adcl
jno
repnz
fcoml
mov
rep
mov
bound
ja
push
mov
push
inc
xchg
cmp
bound
cmova
cs
or
xor
aaa
add
jo
movsl
cld
or
xchg
ret
icebp
sub
stos
dec
js
push
popf
rcl
insb
cmp
dec
cmc
cmova
test
dec
pop
pop
repnz
add
std
add
mov
mov
scas
stos
and
out
sub
imull
mov
loop
jne
and
int
data16
mov
sub
insl
scas
test
out
sbb
jle
inc
mov
stc
add
xchg
nop
sbb
pop
fstl
push
mov
mov
rclb
sub
xor
cli
and
xor
inc
xchg
cld
movsb
fstps
adc
pop
pushf
das
add
cmpsl
sub
xchg
push
call
mov
and
pop
dec
and
jb
imul
les
mov
sbb
inc
in
cmp
sarb
push
scas
ror
push
xchg
or
mov
or
lcall
jg
push
popf
fisubs
test
ds
ljmp
lds
dec
xor
lahf
cld
inc
xchg
ja
mov
lret
dec
fisubrs
pop
push
sbb
mov
xor
movsb
and
fistpl
or
clc
push
das
daa
add
cld
out
scas
adc
rcll
mov
inc
or
pop
cli
popl
aad
or
add
push
icebp
cld
cmpsl
xor
retw
pop
imul
dec
dec
jp
aam
jne
ret
push
lea
dec
dec
add
push
add
ljmp
je
mov
pop
mov
xor
stos
push
push
mov
cmp
push
ds
xchg
nop
je
pushf
int3
int3
adc
outsl
push
jb
add
inc
loope
mov
lcall
or
fwait
insl
outsl
add
cmp
stos
dec
pop
arpl
ss
cmp
fwait
mov
fnstsw
call
xor
mov
movsb
sti
movsb
jns
gs
cs
mulb
out
pop
fisubl
mov
lods
mov
inc
aad
cs
mov
lea
movsb
ret
cmp
leave
aas
lea
add
subl
mov
or
push
test
dec
push
clc
outsb
jecxz
fisttps
aaa
popf
lds
cmp
stos
adc
adc
adc
pop
and
inc
or
lds
mov
pop
mov
xchg
adc
repz
sub
test
aas
mov
or
and
inc
nop
xchg
mov
test
sahf
mov
test
into
dec
xor
sub
rorb
stos
insb
adc
dec
inc
movsl
nop
pop
sub
lock
movsl
mov
adc
neg
outsb
loop
adc
fmull
adc
sbb
stos
push
pop
cmp
ja
jne
sarl
push
jge
jbe
or
dec
push
rcrl
dec
pop
dec
push
xchg
jae
lret
dec
mov
test
or
movsb
add
stc
inc
mov
adc
addr16
adc
sbb
aam
outsb
das
push
push
fistpl
cmpsb
mov
int
xchg
jecxz
das
enter
or
and
push
bound
pop
nop
lods
jmp
dec
out
loop
psubd
cmp
mov
mov
add
cmc
cmc
lods
push
xchg
movsb
pop
imul
mov
rcr
test
outsb
inc
pushf
orb
cmpsb
sarb
ss
test
sbb
gs
adc
dec
xor
out
and
gs
out
inc
loop
loope
loopne
leave
pop
dec
mov
mov
int
xchg
push
pushf
push
psubusb
jno
lock
ss
adc
cmpsb
fwait
insb
les
in
or
pop
iret
mov
sbb
ret
hlt
mov
movsb
push
jno
ficomps
jne
rcrl
lret
dec
out
push
jl
cmp
xchg
vandnps
mul
decb
fs
aad
jl
in
cmpsl
mov
or
pusha
cmpsl
or
mov
hlt
mov
pusha
jl
xor
aam
push
xor
es
jg
fidivl
add
add
and
movsl
popa
xor
mov
mov
jno
pushl
stc
mov
jno,pt
jno
insl
jbe
add
stos
mov
mov
sbb
adc
aaa
scas
jp
lret
sbb
out
cmp
push
jl
mov
or
pop
cli
and
mov
push
jbe
in
adc
rcll
cmp
mov
sahf
lock
jo
or
or
scas
or
fldenv
dec
inc
idiv
aaa
addr16
sahf
ror
jg
fwait
xor
mulb
adc
inc
test
jo
adc
push
fwait
adc
adc
and
mov
mov
test
xchg
out
call
stos
xor
lcall
in
push
pop
xchg
stos
aas
faddp
mov
cmc
lcall
or
jge
dec
sbb
xchg
aaa
pop
sub
insb
sbb
fildll
loope
add
dec
cltd
sbb
push
push
iret
lea
pusha
adc
mov
test
bound
ds
cmpsl
inc
pop
mov
push
enter
push
pushf
jo
jns
dec
cmp
fistps
sub
int3
rcl
pop
fs
popf
sti
add
fs
es
mov
hlt
test
dec
ret
in
add
in
jp
rolb
std
push
insl
pop
add
lcall
jne
addr16
cwtl
leave
or
and
mov
or
sti
jne
imull
jge
xchg
adc
jo
xor
mov
in
or
out
push
push
sub
ret
sbb
jmp
pop
jg
or
add
repnz
clc
or
stc
push
repz
mov
push
fbld
pop
sub
imul
ret
imul
xor
inc
jb
sub
pop
xor
lret
mov
cwtl
mov
adc
movsb
and
fmull
pop
pop
ret
lret
pop
call
push
clc
incl
icebp
mov
pop
or
xchg
xor
into
sbbb
mov
mov
shl
xor
sbb
adc
into
and
mov
pop
into
xor
add
mov
xor
pop
sub
insb
mov
jecxz
pop
sub
jno
cs
mov
ljmp
mov
in
cmp
pop
sbb
push
pop
mov
int
cmp
enter
push
add
arpl
test
xchg
cli
or
push
jecxz
jne
loopne
icebp
shrb
xchg
dec
push
loope
mov
and
daa
ljmp
outsl
cli
pop
fwait
std
pop
lock
mov
push
fsubrs
imul
cmp
pop
push
dec
pop
lods
jne
fnclex
jae
sbb
data16
xor
imul
in
mov
enter
cmp
mov
stc
int3
inc
sarb
jb
leave
cmc
dec
adc
mov
push
test
movsb
popf
dec
xchg
mov
mov
nop
or
lods
add
xor
and
mov
cmpsb
test
dec
nop
fcoml
cld
pop
jge
stc
fcomp
cld
adc
add
mov
xchg
sbb
test
add
aaa
clc
or
fsubr
sbb
mov
jecxz
test
xor
mov
pop
das
fidivl
jae
mov
insl
inc
inc
mov
or
scas
mov
lds
push
fisubl
add
cmc
fadd
mov
mov
leave
shll
pop
repnz
push
pop
je
cwtl
jo
mov
arpl
imul
push
mov
aam
push
xchg
xchg
and
sub
or
outsl
dec
dec
or
lahf
pusha
sbb
and
xchg
push
mov
jb
xor
xchg
mov
mov
push
cli
stos
fucomp
dec
mov
insl
mov
lods
and
push
movsl
repnz
and
cmp
adc
aad
insb
inc
and
hlt
mov
int3
cmp
divl
fisttps
adc
mov
xchg
mov
lahf
or
mov
imul
pop
sbb
push
imull
addr16
xchg
jmp
mov
pusha
jne
decb
out
pop
aad
jb
jnp
xchg
sub
sub
xchg
test
mov
inc
jno
lock
cmc
cmp
sub
mov
sub
mov
and
adc
mov
jo
mov
subb
jg
mov
mov
movsb
test
push
pop
xor
xor
scas
les
stos
inc
out
aam
push
xchg
pop
int
sbb
pushf
adc
clc
xor
int
mov
jo
call
mov
mov
in
fcoml
and
xchg
aam
or
aaa
loope
mov
cmp
in
sub
in
out
cmp
adc
popf
mov
fldpi
and
cmp
cmp
xlat
mov
push
fsubl
out
insl
jb
xor
cmc
mov
cmp
std
cs
sti
push
xor
outsb
sub
pop
add
jg
aam
out
sub
adc
mov
call
out
jnp
sub
ss
add
loop
mov
and
movl
int
std
or
jno
dec
aaa
push
insb
popf
inc
cmp
mov
pushf
cmp
push
lods
fnsave
ret
aaa
mov
sub
jno
mov
mov
sub
lret
sti
cmp
mov
das
pop
je
xor
xor
or
stos
lret
xlat
adc
xchg
mov
imul
imul
stc
mov
jb
sub
fstps
jg
lods
pop
mov
pop
adc
cmpsl
push
leave
imul
imul
jae
inc
mov
mov
jo
mov
mov
rol
dec
push
out
scas
add
data16
lods
push
loopne
das
dec
cs
cmp
fwait
movsl
sub
loopne
dec
adc
push
aad
mov
mov
jmp
insl
notb
jo
cwtl
xchg
jp
or
cmp
sbb
lea
mov
dec
xor
xor
cmc
pop
les
sub
loop
stc
cld
shrl
cmp
mov
fiaddl
sub
push
mov
or
fstpl
jmp
xor
fisubrs
aaa
or
mov
sbb
popf
dec
adc
fmull
loope
jae
adc
cmp
scas
cmp
je
hlt
jae
xor
push
pushf
cwtl
xchg
xlat
push
shll
lods
jmp
inc
push
imul
push
xchg
sub
pop
cs
mov
incb
fdivrp
mov
cmc
in
mov
fstpl
xor
push
mov
dec
sbb
test
pop
mov
mov
in
pop
jnp
adc
int
sarl
sub
fs
test
shll
push
jo
es
cmpl
lods
ss
mov
xchg
push
jnp
push
xchg
loopne
outsl
jae
add
es
cmc
mov
inc
jp
aad
shll
leave
in
pop
inc
ss
cmp
xchg
or
sbb
jp
les
xchg
xchg
xchg
mov
xchg
sbb
fbld
ds
cmp
pop
pop
push
add
shlb
dec
dec
in
iret
dec
xor
cmp
je
sub
les
xchg
dec
rolb
clc
inc
into
cmc
cli
mov
inc
mov
mov
sub
call
lret
jp
mov
ds
js
into
addr16
in
loopne
mov
and
mov
push
or
cmp
add
add
xchg
and
pushf
ret
adc
dec
sub
fnstsw
clc
test
push
jnp
aad
in
lea
and
inc
cmc
orl
mov
xor
pop
cltd
dec
fcomip
cmc
sbb
sarl
mov
mov
mov
pop
int3
loope
lds
mov
pop
pop
std
or
orl
or
mov
es
xchg
je
mov
cltd
test
mov
stc
inc
mov
sub
add
push
mov
ret
sbb
and
cmp
sarl
and
addr16
test
lds
enter
mov
stc
filds
ret
sahf
aad
ss
jge
sub
out
jnp
int3
jo
adc
jg
imul
xor
jae
sub
push
scas
pop
cwtl
and
inc
inc
imul
fistpll
mov
or
loopne
int
push
pusha
pop
lods
xchg
or
mov
divl
xor
mov
out
xchg
icebp
add
aaa
sub
lret
in
sub
in
push
mov
movsb
dec
inc
adc
lods
mov
ficoms
icebp
add
dec
mov
scas
and
mov
add
add
lods
movsl
fsts
insl
idivb
imul
out
dec
imul
push
pop
xchg
inc
into
cmp
into
sarl
repz
insl
jecxz
mov
cmp
call
stos
aam
nop
pop
mov
mov
or
into
cmp
lea
sub
add
sub
fwait
outsl
pop
dec
mov
add
fcmovu
sbb
ja
adc
outsb
inc
fisubl
jecxz
addr16
daa
xchg
std
inc
mov
popa
test
mov
jg
jg
push
and
popf
or
xlat
repnz
adc
mov
jb
mov
and
mov
push
cmp
stos
jb
mov
popf
jg
gs
jl
icebp
pusha
cltd
cmp
dec
jl
pop
stc
jmp
fisubl
inc
cli
pop
push
lds
arpl
or
imul
outsl
int3
mov
fistpll
gs
and
nop
in
out
mov
test
mov
pop
sbb
out
sbb
hlt
sbb
mov
pop
sub
xchg
ljmp
xchg
sbb
loop
das
insl
push
sti
into
bnd
push
out
or
ret
in
jae
push
mov
out
scas
mov
xchg
jae
pusha
cld
stc
sbb
add
push
add
xor
mov
jo
das
cmp
add
jno
or
pop
pushf
jmp
xor
or
repz
leave
push
nop
or
jmp
push
dec
fildll
push
cmp
cmc
cmp
sub
pushf
call
xchg
push
insb
repz
dec
add
pop
dec
scas
ljmp
xchg
test
clc
fidivs
les
insb
jg
adcb
inc
pop
fcmovnu
pop
test
test
push
loopne
ficoms
push
pop
push
jmp
pop
pop
and
cld
push
cltd
lcall
stos
mov
inc
push
arpl
xlat
lret
mov
xchg
cmp
lahf
mov
cmp
lcall
push
sub
aam
xchg
add
int
lods
pop
in
xchg
sti
int3
lret
pop
insl
stos
into
das
mov
mov
xchg
adc
repnz
cld
push
or
push
dec
xor
sti
jnp
xlat
sbb
fstpt
aaa
shrb
mov
sub
inc
xor
jbe
fldt
lds
xlat
pop
pop
cmp
pop
das
xchg
sub
imul
xchg
test
sahf
in
jg
sub
and
push
std
xchg
and
sbb
push
rcrb
mov
insl
stos
aam
popa
and
push
lret
jecxz
add
mov
in
je
mov
push
jg
iret
pop
add
dec
shlb
jmp
les
mov
push
fcoms
dec
adc
insb
jne
in
repz
xlat
mov
shrb
xchg
inc
scas
dec
xlat
lods
aas
mov
imul
adc
lret
icebp
daa
inc
out
add
push
cmp
cli
fcomi
and
lcall
cs
mov
popf
dec
mulb
pop
out
mov
vucomiss
aam
sub
jo
inc
jb
adc
push
sahf
fsubs
inc
sbb
sub
mov
pop
cmp
lret
outsb
pop
in
dec
xchg
popa
jae
jle
fdivs
mov
jmp
dec
and
out
sbb
mov
aaa
ljmp
add
aaa
xchg
sbbb
call
rorl
push
out
xor
cwtl
insl
xchg
sub
lods
xlat
shll
sub
lcall
subb
mov
jmp
bound
inc
inc
clc
cmpsb
adc
loope
push
sub
inc
push
xlat
mov
and
sbb
pop
sbb
loope
lcall
psraw
sub
je
sub
lahf
pop
in
adc
ljmp
push
inc
pop
aas
jecxz
bound
xorl
mov
push
arpl
sub
lods
jp
lods
mov
adc
repnz
ljmp
sbb
mov
mov
stos
mov
dec
fstps
mov
push
pop
inc
xor
push
lods
dec
sbb
aad
enter
add
push
lahf
xchg
outsl
lods
xor
clc
pop
pop
stos
pavgw
gs
push
in
dec
lret
mov
iret
fstps
add
cmp
insb
test
mov
push
adc
add
gs
jmp
or
pushf
push
adc
stos
xlat
mov
cld
out
jg
shr
xor
gs
mov
loopne
stos
mov
pushf
push
enter
ds
and
daa
dec
pusha
in
push
mov
pop
xor
push
xchg
popa
and
xchg
inc
dec
jae
mov
jbe
add
cmc
cmp
inc
out
iret
fnstenv
adc
lods
adc
clc
push
mov
inc
add
xchg
mov
cwtl
xor
pop
lea
mov
and
jnp
rorl
mov
lds
pop
sub
sub
jecxz
repz
xchg
out
mov
mov
das
jle
mov
xchg
mov
xchg
mov
repz
jno
adc
stc
ds
xor
int
outsb
lret
and
mov
pusha
sti
test
cmp
push
fnstsw
sub
or
jne
add
and
test
imul
push
add
lods
add
and
dec
jns
mov
scas
out
xor
lcall
adc
cmp
xor
cmpsl
pop
jnp
pop
iret
dec
add
xor
cmp
shl
xor
sub
cli
push
outsl
push
jo
sbb
push
in
and
stos
add
arpl
stos
icebp
mov
bound
testl
aam
je
jae
inc
movb
loop
or
movsl
jb
pop
mov
mov
xor
gs
andl
push
mov
sub
aaa
xchg
ljmp
lock
add
mov
into
fs
sbb
adc
xchg
scas
jbe
aam
sti
mov
loopne
iret
mov
insl
mov
xchg
and
mov
pushl
popf
mov
inc
lds
inc
bound
mov
xor
xchg
jnp
rcll
inc
call
dec
fsubrs
fimull
pop
test
rcrl
outsl
pop
push
iret
fsubr
jge
pusha
stc
ss
rolb
mov
test
pop
add
sahf
imul
xchg
push
imul
mov
imul
int
xor
mov
mov
jno
lds
cwtl
mov
inc
jge
xchg
push
mov
xchg
ljmp
pop
pop
adc
add
push
flds
or
rorb
nopl
and
dec
sar
cmp
fs
or
sbb
and
add
mov
imul
loope
ss
arpl
xchg
lret
pusha
cli
dec
mov
lea
inc
idivb
pop
jle
mov
mov
dec
pop
mov
pop
adc
dec
mov
pop
lahf
faddp
sbb
pusha
jge
dec
jmp
cmpsb
out
scas
pop
mov
and
addl
xor
inc
sarl
mov
inc
push
jle
imul
sub
jle
cmc
sub
sub
movsb
lock
sbb
rcll
jnp
ja
cmp
push
adc
sbbb
pop
gs
or
inc
xchg
leave
jnp
adc
xchg
mov
push
cmp
sub
sbb
cltd
push
dec
fs
push
add
cmp
push
gs
lret
or
sbb
outsb
and
sub
sahf
sub
xlat
xchg
jl
adc
in
test
push
add
nop
flds
pop
push
xlat
inc
repnz
dec
popa
pop
jno
push
add
mov
lret
stc
and
sbb
std
ljmp
js
sub
xor
pop
lock
inc
ss
int3
popa
loope
xorb
cmp
and
push
push
rcrl
xchg
fimull
mov
jno
dec
stos
das
dec
and
or
mov
scas
mov
sbb
scas
sahf
cmc
push
push
incl
xchg
clc
sbb
fildl
xchg
xchg
in
hlt
push
push
push
inc
mov
jae
shrl
adc
cmp
ret
push
fdiv
out
xor
arpl
dec
mov
lret
mov
pop
imulb
imul
out
mov
ja
lock
inc
add
decb
push
ret
cwtl
sahf
pusha
and
fdivl
sub
shrb
setno
add
sti
test
pusha
lcall
fsts
das
imul
lcall
pop
push
adc
jecxz
inc
jp
int3
into
in
inc
insl
pop
fsubs
and
sub
dec
nop
sbb
adc
ret
fcoml
and
loop
in
js
mov
xchg
xor
rcll
cmpsb
lock
stos
stos
jmp
and
and
pushf
pop
jecxz
xchg
cmp
and
xor
movsb
inc
mov
int3
ss
call
mov
mov
je
mov
xor
enter
add
mov
jno
xchg
leave
and
mov
xchg
xor
lcall
xlat
mov
daa
insb
outsl
sub
cmp
jns
ror
and
add
mov
dec
call
or
movsb
jnp
jg
lock
outsl
stos
mov
jae
jle
shrb
or
xchg
xor
mov
cmc
es
into
add
inc
sbb
mov
mov
pop
or
or
pop
scas
xchg
mov
das
mov
fidivl
jmp
lea
ret
and
lahf
mov
xchg
loope
popf
lret
aad
mov
filds
test
scas
fisubs
push
cld
es
mov
ljmp
push
pop
fnstenv
jae
out
gs
sbb
icebp
cwtl
mov
sbb
aas
maxps
fisubrs
xorl
jecxz
adc
inc
ret
dec
cmpsb
repz
ja
jp
push
sarb
cmp
in
xchg
cmp
lods
xor
add
mov
sub
out
aam
mov
ljmp
lahf
xor
icebp
stc
adc
jmp
dec
dec
fadds
iret
push
jae
pusha
pushf
stos
aam
int
adc
ljmp
ficoml
adc
sbb
movsb
sub
inc
push
iretw
loope
test
ss
in
outsb
fbstp
push
xchg
xchg
movsb
xchg
xchg
mov
cwtl
aas
lods
dec
jmp
imul
inc
xchg
imul
xchg
insl
lea
jle
in
lcall
scas
xchg
or
test
mov
jg
pop
clc
sbb
mov
pop
ficompl
sbb
push
daa
push
lcall
xchg
xor
jg
inc
jns
add
ret
nop
pop
pop
iret
and
mov
mov
mov
shll
aad
inc
js
js
std
add
or
mov
pop
ds
js
cmp
and
or
stos
add
mov
lock
rclb
mov
out
aam
jb
mov
nop
mov
sbb
test
mov
xchg
push
clc
inc
nop
cmp
sarb
dec
aam
fsts
cld
sahf
std
xor
dec
imul
adc
gs
divl
inc
and
pop
loopne
cmp
scas
sbb
test
sarl
dec
icebp
and
call
jmp
jecxz
mov
inc
dec
outsb
ficompl
aam
mov
dec
jmp
sbb
nop
xor
and
lea
mov
jae
mov
popa
xchg
jns
iret
mov
xor
mov
and
cmpsb
in
fs
jp
lea
cmp
cmp
pop
outsl
mov
cltd
push
test
dec
pop
push
or
es
scas
repnz
mov
mov
pop
cmp
ljmp
xchg
push
inc
pop
push
xlat
and
loop
ret
mov
into
fstpt
xchg
add
repnz
xor
jg
ret
sti
push
loopne
icebp
mov
jle
in
add
sub
sbb
mov
xchg
repz
int
jg
cmp
pop
mov
in
jo
repnz
mov
pop
das
scas
fdivp
aam
movsl
pop
mov
les
xrelease
inc
inc
outsb
pop
pop
mov
scas
pop
roll
addr16
sub
mov
and
loope
stos
push
xor
push
mov
fcomps
sbb
call
mov
mov
rcrb
pop
push
mov
enter
ret
add
loop
dec
mov
pusha
mov
jle
scas
sarb
cmpb
sub
popf
movsb
cmpsb
ret
fistl
fwait
adc
out
xchg
xor
mov
fwait
jns
push
sub
lahf
add
shll
or
loope
pushf
aad
xchg
push
dec
and
data16
mov
test
add
inc
sub
enter
stos
adc
ds
sbb
inc
ds
adc
dec
es
and
mov
pop
stos
std
and
cmpsb
adc
sub
jl
repz
stos
lret
or
lods
adc
scas
pop
lret
adc
shrl
push
cmp
into
sarl
or
jns
dec
push
out
das
mov
dec
or
out
sbb
jge
decl
mov
push
repnz
mov
mov
jmp
sbb
jb
nop
faddp
xchg
pop
push
pop
cmpsb
leave
adc
insb
xchg
xchg
cmp
cmp
inc
out
xor
aas
or
mov
nop
sbb
setbe
mov
hlt
inc
pusha
sub
jnp
dec
sbb
xor
push
jne
shlb
jp
lock
pop
stos
jnp
stc
leave
insb
cmp
cs
add
adc
mov
add
sub
push
dec
jae
lods
pop
loop
cmp
or
ds
mov
test
pop
cmp
pop
or
add
xchg
pop
and
ljmp
and
adc
fs
out
push
mov
xchg
xor
clc
imul
cmp
cmc
push
cld
sub
sub
xchg
dec
lcall
fisubrs
inc
popa
lds
stos
and
xchg
jg
fbld
push
jae
cmpsb
mov
in
dec
xor
out
pusha
mov
cli
ficoms
jae
aad
jle
into
xchg
adc
outsb
std
fwait
jmp
xchg
jmp
sub
mov
into
sbb
jp
out
jbe
push
sbb
in
xchg
xchg
jo
nop
mov
outsb
orl
push
mov
push
or
mov
xchg
or
adc
xchg
inc
jae
push
push
mov
mov
fmulp
xchg
cmp
lods
dec
test
int3
pusha
call
cmp
xchg
scas
imul
and
push
rclb
es
xor
xchg
fsubrs
mov
xchg
stc
sbb
sub
jl
mov
inc
adc
stos
fldlg2
cmp
adc
mov
sarb
push
or
mov
into
fcomip
cmp
nop
pop
adc
lods
outsl
adc
jo
nop
push
fidivrs
xchg
adc
or
int
test
test
xor
cmp
mov
loopne
mov
mov
cmp
jge
pop
imul
movl
repnz
std
adcl
cmp
imul
or
sub
arpl
fistl
repnz
sahf
rorb
frstor
faddl
mov
rcrb
cmpsl
das
call
in
xchg
and
subb
int
or
or
out
mov
mov
lahf
inc
add
mov
pop
in
es
loope
aad
sub
xor
cltd
arpl
and
add
arpl
call
sbb
mov
fcoms
or
popa
pop
pop
push
decb
add
jne
loop
push
dec
mov
inc
or
repz
mov
sbbl
mov
mov
dec
in
mov
jl
inc
test
sbb
lahf
pop
add
inc
cmpsb
jge
dec
enter
pop
popf
adc
cmp
mov
mov
mov
stos
push
push
sub
push
and
into
xor
sbb
pop
adc
hlt
les
popf
sub
sub
pop
xchg
out
aas
cmp
rorb
push
add
lock
mov
das
xchg
mov
ror
cmp
sahf
add
int
sub
dec
and
push
lret
cmpsl
mov
push
imul
in
leave
mov
mov
pop
add
pop
jg
aad
shlb
push
add
dec
adc
clc
mov
add
fsubrs
mov
cli
cmpsb
loopw
or
pushf
gs
cmp
movsb
dec
icebp
jnp
inc
pop
pusha
jno
je
std
je
cmp
inc
inc
ret
or
stos
jae
dec
or
xchg
mov
jae
cmp
pop
test
mov
inc
sub
scas
sbbb
fsts
mov
jg
int
inc
std
sub
pop
xchg
adcb
cmp
sub
jg
dec
or
frstor
mov
xor
cmp
aas
add
add
rclb
sahf
enter
jnp
xchg
int
sbb
icebp
cld
leave
or
sarb
xchg
rol
and
mov
jb
pop
ret
add
lret
xchg
in
stc
mov
fstps
in
lahf
mov
dec
outsl
xor
rolb
push
mulb
jge
mov
movsl
enter
int3
int
or
dec
in
sub
ljmp
rolb
fildll
xchg
stc
fs
push
stos
dec
or
xchg
nop
sarb
sahf
mov
mov
xchg
dec
lods
mov
push
ds
adc
test
sub
jae
bound
fwait
imul
lahf
dec
pop
inc
repnz
mov
mov
cmp
ja
or
aam
sti
mov
jb
mov
out
sub
xchg
icebp
outsl
inc
push
dec
inc
cmp
sahf
dec
adc
cwtl
xor
mov
xchg
sbb
test
dec
dec
jg
loop
jae
das
ds
scas
add
icebp
jb
pop
popf
add
mov
or
int3
movsl
jp
outsl
js
sbb
mov
sbbl
add
add
push
sbb
iret
xchg
imul
test
pop
mov
and
test
outsb
mov
sarl
jae
xor
mov
or
mov
fsts
lock
nop
mov
xchg
cmpsl
daa
jo
inc
ret
sbb
ret
mov
xor
rorl
jg
mov
movsl
movsb
rolb
ret
jae
adc
push
enter
cltd
sti
xchg
je
pop
sahf
lods
jne
mov
mov
push
mov
jmp
or
outsb
popa
data16
adc
in
js
int3
and
insl
xchg
mov
sub
out
mov
mov
adc
fnstcw
jl
dec
leave
push
jmp
lret
cmpsb
lcall
repz
adc
in
push
cmp
into
fadd
xchg
out
enter
neg
ljmp
insl
push
scas
xchg
stos
xchg
push
sbb
mov
add
and
dec
std
jbe
and
cmp
movsb
movsb
or
loop
addr16
push
out
push
jb
loope
pusha
cwtl
into
cmp
dec
mov
jnp
push
test
ljmp
outsl
jo
jle
mov
cmp
sub
shl
mov
orb
test
mov
leave
mov
scas
xchg
ror
xchg
sub
mov
xchg
jns
jg
pop
adc
aam
push
es
and
cltd
repz
mov
push
bound
pop
mov
and
inc
shlb
mov
fnsave
jnp
pop
xor
dec
push
push
movsb
enter
sbb
jb
aad
sbb
jmp
mov
add
icebp
mov
mov
daa
push
or
leave
or
mov
mov
clc
xor
fs
jb
adc
popf
loop
sbb
mov
pop
xor
cli
cmpsl
test
fldl
jae
xor
addr16
cs
sbb
jnp
cmp
mov
sbb
dec
mov
mov
hlt
icebp
mov
fidivl
mov
subb
leave
mov
push
inc
cmp
mov
pop
inc
imul
add
cli
mov
adc
into
push
pop
lcall
inc
jae
jl
aaa
test
imul
push
jmp
fistpll
cld
jecxz
popa
lret
xor
adc
cmp
fmull
lods
adc
push
filds
imul
lahf
xchg
add
inc
nop
aad
mov
mov
cmpsb
mov
dec
inc
push
jbe
and
bound
div
fisttps
clc
inc
cmpsb
add
sarb
sbb
mov
ds
dec
jbe
jge
mov
iret
jb
je
fsubs
es
outsb
nop
mov
das
gs
lcall
push
pop
jnp
and
daa
mov
mov
lods
mov
sbbb
jae
ljmp
or
enter
sub
lea
pop
adc
jbe
inc
xchg
xchg
mov
mov
test
sahf
lahf
lods
xchg
push
jb,pn
jge
inc
loope
jg
sbb
pushf
out
loop
cwtl
shll
dec
std
push
stos
add
push
es
cld
add
fwait
or
sub
loope
dec
add
or
push
mov
xchg
orl
fisubrl
js
or
imul
call
sbb
mov
lcall
ljmp
repz
pushf
dec
inc
aad
scas
scas
mul
out
jle
into
test
out
sbb
push
mov
popa
xor
and
cmpsl
out
imul
mov
xchg
clc
cs
int3
faddl
push
cmp
push
iret
cs
ret
add
mov
xor
mov
stc
ficoml
xchg
leave
jl
xchg
jns
sbb
pusha
or
fimuls
cs
jns
xchg
mov
jo
pop
xchg
add
cmpsl
fsubs
rolb
std
or
dec
int
inc
cld
push
mov
daa
lret
and
pop
cmp
fimull
mov
daa
fstpl
inc
pop
clc
fldl
ret
or
mov
pop
arpl
xlat
jmp
call
inc
dec
pushf
pop
pop
mov
dec
addr16
nopl
andl
into
mov
jmp
sub
jno
cmpsb
scas
mov
jbe
or
inc
jns
mov
fwait
xor
xor
xchg
in
jno
jb
sbb
xchg
cmp
data16
les
fdiv
scas
mov
cmc
lock
xchg
andl
jge
out
mov
xchg
mov
inc
pushf
push
cmp
mov
rol
cld
jno
repz
jecxz
aaa
and
jg
ret
fcoms
into
rorl
or
mov
jge
gs
xor
testb
jg
ljmp
in
sbb
mov
jp
stos
sub
adc
or
jns
push
aad
enter
gs
inc
pop
sbb
or
xorl
ja
mov
pavgw
pushf
mov
repnz
stos
aaa
xrelease
or
dec
add
push
jecxz
pop
pop
xchg
dec
push
cmpsb
outsl
jl
icebp
cli
shrl
mov
stc
int
xchg
sbb
cmp
hlt
pushf
and
scas
ss
scas
pushf
test
inc
subl
push
jbe
mov
jne
out
out
cmp
xor
adcb
jmp
hlt
cmp
stc
mov
in
xor
push
or
and
and
add
lods
cltd
inc
mov
sbb
in
std
adc
xor
mov
pop
aad
in
ret
idivl
cli
push
iret
jbe
out
adcl
jl
mov
push
sub
push
dec
call
nop
les
insw
cltd
lret
std
imul
add
mov
stos
mov
pop
cmc
shl
sub
or
pop
xchg
or
jno
mulb
push
adc
ror
add
xchg
cwtl
gs
pop
mov
and
pop
jns
mov
push
inc
add
mov
jnp
fmul
cld
hlt
cmpsb
cmp
gs
outsb
les
mov
popf
roll
shr
or
repnz
xor
out
stos
add
bound
mov
je
mov
inc
cmp
ret
jge
xchg
and
dec
hlt
mov
xor
in
scas
cwtl
pop
mov
jg
scas
fimuls
pop
enter
adc
inc
inc
sub
xchg
int3
inc
mov
fstps
jnp
leave
out
xchg
movsb
adc
test
xlat
xor
xorb
pop
push
mov
fwait
inc
test
lcall
cmpsb
fwait
add
leave
pop
and
scas
imull
and
jp
sub
jns
sbb
repz
sub
sbb
cld
bound
dec
cltd
fildll
or
cmp
xor
cmpb
mov
nop
pop
lea
cmp
xor
nop
push
xchg
xor
dec
fsubrl
leave
enter
cmc
xor
ds
push
jno
repnz
xor
push
pusha
jle,pn
mov
inc
cld
fisubl
mov
mov
cwtl
mov
movsl
outsb
je
dec
or
jmp
or
push
mov
aam
repnz
add
test
jmp
out
repz
rcrb
sbb
fcmovbe
imul
mov
sbb
sbb
mov
out
mov
scas
push
mov
jbe
xchg
repz
sbb
mov
dec
add
cltd
cld
inc
mov
and
add
dec
pop
push
testb
sub
popf
jmp
xchg
cmp
add
jb
and
sbb
pop
loope
and
ficompl
sub
stc
popf
fists
arpl
repnz
adc
fwait
mov
pop
or
pop
adc
xchg
mov
push
jecxz
dec
hlt
sahf
out
clts
and
sub
jecxz
adc
imul
in
in
int
pusha
and
andb
xchg
sbb
cltd
iret
fldenv
pusha
cwtl
pop
cli
sbb
fnstenv
cmpsb
push
jg
je
shl
mov
mov
xchg
sbb
jg
add
xor
dec
and
dec
lods
adc
cmp
add
or
cmp
add
mov
add
push
push
pop
cs
or
sbb
add
jge
aaa
sub
inc
mov
into
xchg
rcll
push
sub
mov
loope
or
or
lea
xchg
mov
fst
sbb
jb
shrl
jns,pt
hlt
jl
stos
and
push
dec
movsl
cli
popa
pop
sbb
cmp
mov
mov
rcl
mov
and
dec
scas
dec
js
shrb
push
or
hlt
push
cli
adc
inc
nop
sub
xchg
mov
outsb
scas
dec
pop
inc
mov
pop
lods
fcompl
pop
dec
fidivl
pop
sbb
mov
xchg
shll
push
xchg
push
in
nop
xlat
arpl
xchg
into
mov
gs
xchg
movsb
fsts
sarb
scas
cmp
pop
std
stos
stc
add
sub
or
aad
into
push
dec
lods
inc
mov
cmp
fs
inc
out
pushf
fucomp
insb
xlat
cld
ja
push
cli
repz
xchg
push
pop
push
sub
jmp
je
jl
mov
lahf
mov
stos
dec
sub
xchg
popa
xchg
rol
dec
cli
or
cmpsb
pusha
sbbb
aam
arpl
cwtl
jb
push
push
fwait
push
sub
fsubrl
pop
mov
push
or
out
push
adc
or
icebp
dec
mov
mov
mov
mov
inc
adc
pop
sbb
cmp
pop
bnd
cmp
sbb
jp
pop
adc
or
icebp
mov
jns
mov
jnp
insl
and
sbb
rolb
inc
mov
pop
test
pop
pop
pushf
push
inc
push
mov
stos
xchg
rcl
add
adc
into
clc
cmp
addr16
sub
jl
jbe
xchg
mov
popf
daa
rcl
push
roll
es
xor
sti
jecxz
cmpsb
leave
stos
dec
filds
lods
jbe
xchg
stos
sub
out
loopne
lret
cwtl
lcall
or
js
shlb
rolb
js
adc
xorb
out
cmp
in
xchg
test
mov
mov
push
push
push
inc
push
ror
push
jno
repnz
jg
push
push
es
inc
jmp
testb
push
shrl
fcompl
push
sti
sub
loop
xor
insb
dec
inc
xchg
idiv
std
frstor
jnp
sub
xor
dec
test
aam
sub
xor
jne
inc
jae
cmp
adc
xchg
xor
int3
ljmp
sti
dec
mov
xchg
dec
mov
jb
and
jae
mov
push
mov
mov
dec
cmp
push
in
adc
pop
imul
ss
jno
push
add
adc
sarb
sbb
fstpl
xor
repz
xor
dec
cmp
lcall
inc
mov
ret
push
mov
inc
cmpsb
sub
jnp
arpl
insl
dec
mov
test
mov
dec
adc
cmc
push
or
xor
icebp
jb
push
adc
aam
and
jae
mov
repnz
add
test
popa
scas
push
jge
mov
mov
das
ret
inc
push
leave
sbbb
in
mov
lds
iret
mov
push
inc
fisubrs
push
or
mov
and
sub
sub
rcl
insl
nop
mov
repnz
stos
mov
fs
mov
js
repnz
lcall
call
jb
push
mov
scas
cld
adc
iret
sub
fildll
inc
sbbb
int
pop
inc
test
push
cmc
fisttpll
mov
movsb
outsl
or
js
pop
lds
int
sub
ret
pop
scas
or
sub
out
adc
in
or
fisubs
xchg
sub
mov
xor
jbe
jp
icebp
mov
aaa
dec
push
xor
or
stc
jne
shll
lcall
fmull
imul
add
or
pop
out
or
mov
test
cmp
int3
js
sub
cld
mov
push
jg
mov
pop
loopne
clc
test
pop
mov
shrl
inc
roll
es
imul
adc
mov
mov
lret
call
add
dec
add
xor
jg
mov
aam
jmp
pop
mov
hlt
inc
movsl
sbb
aad
sub
rclb
popa
test
mov
icebp
push
and
xor
and
out
xor
ljmp
adc
inc
mov
jge
in
mov
mov
movsl
mov
push
mov
gs
lods
cltd
cld
add
mov
shl
not
incb
inc
pop
popa
sbb
cmp
mov
mov
rol
cmp
fdivs
jg
scas
mul
and
and
enter
es
fidivl
push
dec
repnz
mov
mov
dec
mov
cmp
lods
pop
out
xchg
inc
dec
adc
dec
sub
add
push
jno
std
dec
xchg
fnstsw
je
cmp
loopne
pop
fidivs
call
insl
outsb
push
add
mov
push
inc
jmp
sub
adc
or
inc
aaa
test
test
stos
nop
sub
out
or
adc
cmp
mov
sub
ss
mov
mov
mov
sub
fisttps
int
shll
scas
pop
lret
push
ljmp
mov
mov
shr
xchg
xchg
pusha
in
xor
clc
mov
pushf
pop
push
or
sbb
cld
inc
xlat
ss
push
cmpsb
out
xor
in
mov
lahf
jns
xchg
fsubs
insb
das
outsb
jmp
adc
xchg
inc
cmc
cmpxchg
and
cmpl
les
outsl
mov
sub
cmpsl
cmp
jp
sbb
mov
in
ja
cmp
fs
mov
cltd
and
dec
inc
push
jecxz
pop
xchg
adc
fsubrl
int
imull
idivl
aam
pop
mov
ret
dec
mov
push
jns
icebp
xchg
hlt
and
mov
inc
adc
ja
xor
mov
xlat
ret
pop
jnp
xor
loope
in
fbstp
sti
sub
ljmp
test
dec
pop
cmpsb
pop
mov
xchg
in
ja
cwtl
xor
jecxz
mov
jp
and
mov
mov
mov
mov
mov
stc
arpl
or
sahf
jp
arpl
jo
mov
jg
movsl
test
mov
jbe
divb
mov
aaa
idivl
jl
xor
mov
and
lcall
and
or
out
add
add
mov
repnz
sub
mov
jne
out
imul
cmp
mov
sbb
int
lcall
ljmp
aad
mov
fbld
add
out
rcl
mov
mov
sub
lahf
mov
jb
jbe
ds
inc
sbb
mov
loop
inc
dec
dec
mov
js
es
dec
ds
mov
mov
or
les
lcall
hlt
cmp
shll
lods
cs
inc
mov
sarb
mov
hlt
xchg
xor
inc
fwait
cmpsb
mov
sahf
jno
dec
loope
aaa
mov
les
and
cli
sub
shll
push
jmp
xchg
jne
jnp
enter
inc
mov
sarl
mov
pop
xor
popf
dec
test
std
xor
xchg
adc
push
push
into
sarl
repnz
push
mov
idivl
pop
scas
rolb
js
mov
dec
inc
inc
sbb
dec
and
fadd
mov
sbb
mov
sbbl
cmc
adc
mov
out
inc
sbb
arpl
cs
sti
and
push
outsl
xor
jne
in
dec
ficoml
push
insl
scas
into
sbbl
cmpsl
movsb
out
mov
add
push
jb
sarl
cmp
cmpsb
and
adc
mov
xlat
lods
icebp
sbb
add
push
jmp
test
lcall
xchg
xor
jo
jmp
nop
lds
and
mov
data16
iret
and
sbb
mov
and
lods
test
andb
xor
mov
mov
sub
cmp
mov
mov
and
xchg
adc
pop
jmp
mov
pop
outsb
mov
icebp
jnp
and
and
fildll
loop
aaa
jp
pop
xlat
negl
divb
xor
sub
popf
into
xchg
xlat
out
dec
out
mov
or
cld
test
in
mov
cmpsl
clc
jmp
adc
sub
dec
aaa
movsb
negb
lods
or
movsb
out
test
int3
adc
bound
xor
sub
ficomps
xor
pop
mov
pushf
cmpsl
inc
and
pop
int3
je
call
cltd
vfrczsd
pop
repnz
pop
shll
cmc
insl
icebp
or
movsl
sbb
adc
addr16
lret
push
ja
cwtl
mov
mov
push
and
push
mov
pop
mov
cmpsb
es
sub
cs
sub
aas
aam
bound
loop
sub
lahf
js
cwtl
xorb
rcl
fwait
sbb
test
add
jno
fbld
es
mov
inc
cmp
in
xor
lret
and
sbb
mov
leave
test
mov
jae
movsl
idivl
add
cmpsb
pop
popf
into
paddw
push
stc
mov
rcrl
fsubl
std
fwait
out
jb
stos
test
inc
xchg
pop
fwait
sub
mov
jne
adc
test
std
mov
xor
dec
inc
xor
mov
daa
mov
xchg
adc
aad
pop
pop
clc
push
and
xor
jnp
cmp
ja
test
sbb
rcll
jmp
mov
clc
mov
push
mov
xor
push
cmpsb
xchg
test
mov
sub
push
lods
pusha
sbb
clc
jg
out
les
test
mov
out
sbbw
pop
dec
loop
nop
lods
shlb
dec
outsl
lods
mov
sub
jne
jge
fsubs
outsb
loopne
cmp
adc
xchg
pop
pop
sub
inc
sbb
xchg
xor
cld
imul
adc
mov
mov
inc
jp
cmc
xchg
gs
and
test
lret
mov
es
adc
pop
insl
bound
outsl
and
pop
xchg
cmp
jo
leave
in
and
pop
jo
xor
stos
xchg
in
cli
int3
imul
lods
lea
fwait
adc
stos
stc
loop
mov
mov
cmpsb
cmp
stos
clc
jno
xor
imul
sub
int
and
bound
outsb
and
xor
out
jnp
stos
stos
mov
inc
shr
movsb
adc
int
adc
fisubrl
sbb
push
das
xor
push
mov
sub
mov
or
mov
dec
stc
fiaddl
repz
sbb
lods
jmp
push
mov
sub
sbb
or
xchg
pop
ss
aaa
dec
or
in
repz
fimuls
mov
dec
bound
sub
fadd
sub
jnp
pop
loopne
cli
xor
enter
pop
xchg
cmp
lret
push
outsb
out
sbb
pop
push
mov
mov
fdiv
mov
inc
jo
andb
fdivl
mov
cmp
xchg
arpl
lret
cmp
mov
add
jb
shl
enter
pop
call
jne
inc
aaa
lods
and
mov
sbb
ds
das
and
test
xor
xor
into
sbb
pusha
lret
sub
add
orb
and
je
jnp
daa
dec
dec
mov
mov
push
imul
daa
fsubp
pop
aas
xor
in
pop
shlb
sbb
add
call
cmpsb
mov
or
ja
xchg
push
int3
ret
rcrl
cmc
mov
jmp
pop
stc
jle
pusha
pusha
xlat
push
xchg
ds
add
out
test
popa
inc
fsubrs
sbb
sub
jg
jnp
stos
cmpsl
inc
xchg
push
xor
idivl
pop
notb
mov
popa
xor
adc
mov
loopne
pop
xor
shll
pushf
mov
jg
cmc
divl
mov
pop
std
jo
int3
xor
push
xchg
pop
sbb
in
push
repz
pushf
loope
pop
fiaddl
mulb
rorl
mov
arpl
syscall
xchg
adc
ret
mov
clc
lret
pop
es
jp
dec
mov
or
ljmp
cmp
mov
inc
mov
lahf
mov
jne
cmp
data16
pop
pop
dec
mov
cltd
rcrb
push
lock
cmpsl
out
bound
pop
or
xchg
mov
dec
sarb
pop
cld
in
stos
or
imul
push
add
inc
push
push
and
mov
insb
in
jge
pushf
aam
push
ja
daa
in
inc
cmc
aaa
popf
fcom
js
lods
rcll
push
mov
add
lods
cwtl
repz
sub
out
cmp
sbb
lea
fiaddl
and
push
fidivrl
xchg
lods
xchg
scas
sarl
mov
rcrl
or
mov
cmpsb
hlt
mov
lret
test
xor
xor
fcmovb
dec
sub
pusha
xchg
pop
repnz
adc
jmp
sub
push
sbb
in
loop
push
sbb
notl
cli
mov
sbb
and
adc
add
andps
lret
pop
rolb
pop
add
xchg
sti
push
lahf
ss
aam
push
or
inc
out
xor
shl
lcall
sti
lea
jmp
and
inc
sbb
ja
rcll
mov
out
fcoml
xchg
jo
push
dec
mov
nopl
inc
scas
fstpl
cmc
hlt
xchg
xchg
pop
jl
xchg
bound
or
insl
and
dec
or
mov
ret
repz
outsl
push
cmp
sbb
inc
lock
xchg
push
push
mov
mov
fst
push
imul
pop
test
fcomi
bound
dec
push
push
addl
bound
int3
sbb
repnz
mov
stc
pop
fs
iret
push
sbb
iret
ljmp
mov
subl
jmp
sarl
sbb
lahf
inc
cmpsl
ret
sub
ja
lret
mov
sbb
push
and
adc
in
push
fdivp
jno
in
test
call
push
and
das
xchg
or
inc
jns
xor
testb
fsubrl
dec
in
sbb
add
xchg
pop
fsubrs
xor
mov
sbb
xlat
jae
cwtl
pop
pop
ljmp
int3
lret
xchg
jb
mov
lret
lahf
cmc
sbb
mov
mul
mov
aad
mov
jmp
dec
into
inc
imul
dec
cmp
loopne
jb
cmp
dec
cmp
lods
add
lea
or
subl
ret
jle
pop
or
xchg
sub
arpl
lret
insb
sbbl
mov
movsb
cmpsl
ret
stos
out
test
xor
ss
dec
into
aas
pop
add
push
jl
hlt
push
and
inc
jge
rolb
leave
cmp
xor
sahf
jl
add
adc
in
in
push
fs
add
test
arpl
cmpsl
ficoms
popf
call
push
in
add
test
ret
dec
xorl
enter
imul
push
outsb
mov
addr16
mov
cmp
cmpsb
rorb
cwtl
mov
sbb
pop
xor
movsl
popa
ljmp
call
dec
inc
in
jl
ss
pushl
fldenv
cltd
fnstcw
lahf
adc
leave
sub
enter
sbb
hlt
negb
mov
icebp
mov
int
sahf
test
push
arpl
xorl
pop
in
pop
adc
inc
push
data16
imul
cs
ja
mov
mov
inc
cmpsl
bound
jp
hlt
adc
lahf
icebp
cmp
mov
imul
insl
fists
sahf
xchg
mov
call
lea
inc
fnstenv
cmp
inc
push
jmp
push
sbb
mov
ja
sahf
rcr
or
pop
xchg
adc
outsb
and
sub
inc
sub
sbb
bound
stos
ret
add
pop
cmc
and
out
xchg
add
mov
out
mov
subb
push
subl
iret
cmpsl
mov
jbe
push
sarb
mov
inc
adc
add
push
push
fldl
jge
rorl
cmp
insl
pop
dec
mov
mov
cmp
or
idiv
lret
out
cs
clc
pop
pushw
negb
hlt
lock
lahf
fistps
mov
fisttpl
out
ss
les
hlt
cmp
mov
js
sub
push
fucom
pop
loop
or
push
movsl
adc
pop
mov
ja
stos
xor
movsl
pop
xchg
push
xchg
pushf
pop
push
adc
roll
or
les
loope
sbb
mov
movb
sahf
cwtl
xor
xor
jl
mov
mov
jns
cmp
sarl
jbe
jae
and
pop
into
je
test
sahf
stc
mov
jns
mov
sub
push
jae
mov
add
insl
scas
cwtl
loope
pop
dec
lds
loope
push
add
bound
adc
lret
pusha
les
cmp
pop
je
jbe
addb
dec
mov
mov
jbe
xchg
sar
push
adc
dec
push
jl
jecxz
outsl
rep
mull
cmp
stc
xchg
lods
xchg
mov
in
pop
inc
inc
movsb
add
movsl
stos
cmp
das
adc
pop
push
icebp
inc
adcl
cmp
add
loope
insl
into
cmp
imul
sub
xor
push
push
push
pushaw
xchg
inc
add
inc
lret
mov
imulb
inc
mov
adcl
loopne
loope
rcl
cld
lods
adc
sbb
dec
inc
push
push
push
push
jno
aaa
imul
aas
inc
and
pusha
xchg
sbb
mov
test
pop
mov
movsb
rol
cmp
mov
test
dec
call
cmpsl
cli
lds
pushf
xchg
flds
dec
adc
fmul
dec
inc
mov
fbstp
int
stc
adc
out
and
jne
adc
fcomi
mov
nop
inc
inc
dec
test
lret
pop
aas
and
lahf
and
lods
mov
jecxz
loopne
daa
ja
das
fstp
mov
fsubrl
mov
sbb
cmc
ja
pop
dec
mov
inc
in
xchg
push
std
jno
clc
mov
adc
and
cmp
xor
cli
sbb
mov
lcall
popf
js
std
loopne
cmp
push
mov
jmp
cltd
add
out
lret
jbe
cmp
stc
fcoms
pop
and
rcrl
fcompl
xor
sahf
int3
outsb
mov
shl
test
into
insl
mov
xchg
mov
jno
inc
jle
mov
lock
aam
test
call
pop
xchg
jne
push
sub
fcmovbe
leave
add
cmpsl
ds
fisubrl
xchg
inc
fisttps
popa
js
mov
pop
out
adc
and
test
cmp
fwait
inc
push
cwtl
popa
fwait
pop
cmpsb
mov
inc
jmp
mov
leave
push
or
movb
add
cmp
daa
sbb
ljmp
mov
data16
dec
xchg
fwait
nop
decb
mov
push
push
arpl
or
enter
lret
fs
out
xchg
testl
mov
int3
mov
sub
dec
mov
pop
mov
rorb
or
dec
outsb
lcall
add
mov
push
mov
lret
pop
dec
xchg
inc
add
mov
add
outsb
fwait
jle
lcall
push
mov
fbld
jle
andl
inc
out
out
sub
fisttps
movsl
and
ret
cmp
arpl
push
hlt
jle
dec
jle
mov
inc
push
adc
push
jb
iret
sarb
cmp
xor
and
pushf
jne
add
xor
fsubl
jl
ret
mov
xchg
pop
rcrl
push
xor
pusha
inc
loopne
pop
mov
insl
and
inc
adc
pop
add
xchg
add
adc
or
cmp
dec
sti
in
out
aas
iret
jg
add
xchg
fistpl
jne
push
pop
out
loope
pop
xchg
push
lods
std
sbb
ljmp
orb
fisubs
add
add
mov
mov
fldt
pushf
mov
out
sti
lahf
and
imul
xchg
xor
out
xchg
js
lock
int3
ret
gs
push
and
inc
push
js
in
dec
movsb
in
cmp
inc
sub
scas
popf
add
cmp
or
scas
popl
fistps
leave
je
outsl
fdivrs
jecxz
int
or
or
sbb
daa
lea
dec
aad
mov
pop
mov
mov
jg
js
xchg
fwait
mov
insl
fldt
xor
adc
jo
mov
les
or
and
adc
je
xchg
mov
add
jo
dec
ljmp
jne
in
subl
cmp
add
mov
sti
test
int
jecxz
jecxz
rcr
push
pop
addr16
jp
jae
outsb
push
mov
jmp
adc
xchg
inc
pop
dec
dec
and
out
in
lret
cltd
inc
out
mov
fsubp
mov
xchg
dec
addl
sbb
rcrl
in
andl
xor
mov
into
outsb
dec
mov
repz
mov
pusha
cmc
add
mov
movsl
mov
pop
jmp
fidivs
lock
ret
lret
repnz
outsl
mov
call
mov
pop
add
outsb
xchg
add
call
call
push
mov
popf
xlat
xor
stc
jb
pop
mov
and
push
xchg
gs
xor
into
sbb
mov
out
hlt
daa
cmp
xor
xor
dec
pushl
push
addr16
dec
test
add
cmp
inc
dec
pop
mov
hlt
addb
addr16
mov
xchg
lds
or
cwtl
icebp
push
in
leave
lds
cmovnp
mov
push
and
lret
sarl
incl
adc
dec
add
mov
and
mov
dec
idivl
pop
adc
icebp
pop
sbb
xor
movsb
ret
xor
cmc
mov
add
mov
test
xchg
aaa
adcb
cmp
ficoms
adc
popf
nop
push
fdivr
shll
pop
dec
add
clc
imulb
mov
sub
mov
push
cld
xchg
ss
pop
in
test
loopne
mov
enter
dec
push
pop
push
sub
lret
mov
push
jecxz
fadds
and
rclb
pop
in
jmp
insb
sbb
sbb
jns
add
inc
jne
mov
arpl
xchg
sub
jecxz
mov
push
leave
imul
out
imul
push
andnps
adc
imul
mov
xchg
cmpsl
mov
movsb
pop
push
sub
adc
rol
je
jae
mov
cmp
adcl
flds
scas
stos
mov
lcall
test
es
jge
fisttpl
jle
pop
xchg
mov
bound
pop
add
out
fnsave
jno
xchg
mov
xor
xchg
decb
shr
jbe
cwtl
adc
sub
in
cmp
test
rcrb
inc
mov
xor
pop
test
xchg
or
ret
sbb
js
stos
inc
aam
mov
dec
lahf
xchg
inc
cmp
lds
and
jecxz
pop
test
push
xor
lahf
mov
and
sbb
shll
mov
push
xor
jle
dec
rolb
mov
loop
loop
sub
xlat
in
xor
sbb
cmp
imul
popf
mov
loop
xor
cmp
sub
fmuls
fdivl
loope
je
fcoml
xor
sbb
cltd
pushf
lret
or
dec
movsl
and
xchg
push
cmp
ja
arpl
adc
xchg
in
les
data16
cmc
xchg
scas
mov
dec
pop
popa
mov
or
lahf
inc
enter
push
adc
mov
movsl
addr16
fildll
jmp
adc
aam
scas
scas
icebp
lcall
pop
stc
inc
bound
pop
mov
sbb
pop
lret
or
xor
mov
cs
fwait
scas
mov
bound
push
mov
sahf
in
lahf
mov
fisttps
or
push
mov
test
sbb
frstor
mov
xor
shl
aas
cmp
icebp
push
test
iret
adc
imul
div
push
mov
inc
mov
ret
rcrb
inc
aam
sahf
or
jecxz
mov
in
iret
ret
fisttpll
rcr
fs
push
enter
out
adcl
insb
jle
sbb
mov
in
xor
and
ljmp
fbstp
fcom
adc
adc
addl
mov
xchg
sbb
icebp
xchg
frstor
xchg
scas
loopne
push
ret
stc
pop
lret
lods
inc
cli
inc
push
jo
dec
mov
popa
lods
in
dec
scas
into
add
fsub
ret
int3
jne
push
sti
add
xchg
jle
cmp
jnp
incb
pop
fdivrl
int
sahf
mov
mov
add
clc
and
mov
mov
push
std
test
push
and
xchg
adc
ss
mov
ret
xor
int3
add
icebp
add
xor
cmp
fdiv
pop
stos
shlb
mov
xlat
jno
inc
jns
shll
mov
pop
mov
scas
sbb
rol
inc
xchg
js
sub
cmp
fadds
dec
sbb
iret
rorb
xchg
jno
cwtl
and
sbb
cli
xor
int3
js
jno
imul
cwtl
loop
pop
adc
dec
dec
xchg
mov
jo
insb
jae
and
rorl
xor
cmp
mov
sub
mov
addr16
outsl
hlt
outsb
outsl
cwtl
ja
jg
and
inc
and
add
pop
bound
cmp
cmp
pusha
fistpl
fsubrl
outsl
cmc
cwtl
fidivrl
add
sbb
sub
movsb
into
fdivs
sbb
add
mov
fcoml
inc
sub
jl
cmp
and
jns
nop
out
gs
sbb
cmc
addl
pop
jg
add
popa
fsubs
xchg
fsubrs
mov
mov
inc
int
pusha
ljmp
sarb
popa
adc
push
mov
sbb
lcall
cmpsb
stos
pop
xchg
repz
xchg
clc
scas
imul
imul
jl
fstpl
ljmp
aas
jno
mov
cmpsb
or
fisubrl
jo
scas
mov
fistpll
in
push
syscall
addr16
ljmp
or
adc
inc
in
mov
cs
jb
out
sbbl
push
push
out
xor
ja
dec
jo
push
icebp
sti
call
rcrl
call
cmp
adc
xor
testb
std
call
add
test
push
dec
xchg
cmpsl
push
sub
pop
jmp
xor
sub
mov
or
arpl
stos
jmp
gs
out
arpl
and
fs
ljmp
cmp
dec
out
inc
dec
stos
pop
mov
or
push
jecxz
sahf
aad
and
push
sbb
popf
or
push
or
xchg
fucomi
inc
ds
xchg
rorb
jbe
test
xor
inc
sbb
fsubrs
and
pop
jp
mov
jno
jl
out
or
fwait
sbb
mov
lcall
stc
ds
mov
movsb
lds
int
add
mov
dec
lcall
cmpsb
mov
aaa
inc
stos
inc
leave
shl
sbb
les
pop
insb
test
inc
add
stos
and
repnz
pop
mov
mov
jno
scas
sub
mov
and
mov
jle
mov
xchg
xor
scas
jl
cmp
and
adc
xchg
dec
mov
cltd
adc
push
cwtl
inc
pop
mov
xor
ja
sbb
leave
ds
push
sahf
mov
dec
aas
ret
lock
pop
sbbl
test
icebp
rdtsc
in
and
add
fcoms
movsl
dec
cmp
and
into
add
cmp
fucomip
js
push
cmp
ljmp
xor
lret
into
and
popf
addr16
fimuls
out
mov
ret
dec
and
out
shll
pop
pop
aas
or
cli
es
fsubrs
dec
loope
push
ljmp
insb
loope
mov
push
jge
jge
adc
xchg
adc
lods
loop
lods
lock
scas
pop
push
mov
test
xor
pop
xchg
cs
push
in
dec
dec
iret
test
aaa
mov
stc
mov
jno
push
int3
mov
add
rolb
fmul
ljmp
xorl
sahf
das
test
and
stos
pop
and
lods
sub
addr16
add
adc
mov
cmp
out
add
and
shlb
mov
mov
sub
mov
fiadds
mov
mov
lret
xchg
test
dec
push
inc
inc
rclb
sbb
jns
mov
ffree
inc
pop
and
jecxz
push
jb
nop
cmp
add
xor
stc
clc
out
xorb
cwtl
xchg
cmp
addl
mov
jns
mov
sbb
fisubrl
and
repnz
lcall
mov
nop
int
adc
sbb
pop
mov
and
pusha
sbb
add
xorl
cmc
mov
popf
call
cmpsb
test
xchg
dec
push
les
mov
or
push
add
sbb
sbb
sub
ret
push
scas
dec
std
loop
or
ljmp
shrb
adc
mov
cmp
lea
ret
xor
mov
pop
cmp
stos
cwtl
jno
cmp
and
dec
mov
daa
inc
insl
mov
jge
sbb
loope
getsec
and
loop
add
int3
mov
and
mov
lds
rclb
fnstsw
leave
psrld
clc
imul
pop
cltd
clc
pushf
xchg
jbe
rcl
and
pop
stos
and
and
xor
pop
loopne
outsb
pop
lock
xor
mov
ret
dec
in
cmp
outsl
cwtl
lret
stc
enter
mov
into
cwtl
mov
adc
mov
and
lea
fmull
iret
pop
xchg
jno
hlt
cmp
adc
mov
insb
test
or
ss
or
lret
adc
mov
push
das
jmp
je
inc
or
loopw
cmc
movsb
fdivp
idiv
pop
aad
ficoms
lahf
rcr
and
cmp
dec
ficompl
add
xchg
into
jge
sbb
shlb
push
movsb
nop
es
shl
cli
mov
jmp
xchg
sub
xchg
das
daa
leave
dec
mov
hlt
xor
jecxz
ja
sbb
add
dec
cmp
xchg
sub
aad
lcall
imul
cmp
popf
xchg
jae
mov
pop
adc
outsb
and
sub
pop
xchg
shlb
push
lds
sub
or
cmc
dec
push
jne
jbe
push
scas
fistps
jg
add
out
jno
mov
rorb
test
or
push
sbb
adc
fidivrl
and
sahf
into
xchg
mov
dec
mov
xchg
push
or
jl
xorl
xor
testl
data16
jle
dec
int3
xchg
iret
icebp
mov
cmp
and
pop
dec
mov
test
iret
orl
les
into
push
imul
jmp
dec
ja
repz
sub
cmpb
push
sbb
lret
gs
pop
sbb
leave
adc
add
insb
ss
cltd
or
or
xor
adc
or
ret
test
ret
inc
inc
ret
jnp
sub
dec
jl
enter
sub
mov
jb
js
pop
ds
jmp
icebp
mov
inc
int
dec
nop
pop
enter
insl
mov
insb
sbb
adc
sbb
xor
loop
lret
inc
outsb
cmp
jmp
adc
sub
mov
inc
add
mov
imul
mov
push
mov
xchg
sti
out
pop
lret
insl
jno
xor
inc
xor
xchg
adc
cmpb
fcomps
inc
rcrl
es
mov
testb
loopne
ret
pop
inc
xchg
in
cmp
cmp
sub
mov
pop
xor
inc
xor
lahf
lcall
sti
stos
jg
fmull
test
xchg
clc
jl
test
loop
in
loop
out
adc
cmp
in
pop
pop
addr16
mov
inc
testl
cld
adc
sub
push
mov
xchg
sti
add
cmpsl
cwtl
leave
jbe
push
fmul
add
xor
adc
es
inc
inc
sub
and
cli
ret
pushf
js
adc
dec
xor
and
lcall
movsb
xchg
clc
les
fwait
lahf
lods
xchg
mov
rorb
jmp
mov
lcall
mov
out
xor
out
stos
lods
push
ret
pop
adcl
jmp
push
add
adc
lds
lds
int3
lods
sbb
dec
jp
cmp
insl
sub
in
lret
movsb
add
mov
es
cmpsl
sbb
pop
mov
xchg
jne
rcrb
inc
addr16
pop
pop
dec
iret
jnp
xor
cwtl
out
fnstenv
xchg
loope
test
js
pop
ret
inc
sbb
movsb
and
outsb
mov
popa
push
sarl
jae
in
outsb
mov
rep
dec
push
xor
push
or
test
inc
and
xchg
mov
call
adc
test
or
call
stc
mov
dec
cmp
notb
xlat
iret
aam
bound
rcl
push
pop
arpl
sbb
pop
arpl
adc
xlat
mov
lods
int
xor
mov
das
adc
push
jle
adc
sbb
lods
jle
xchg
jl
addr16
pop
xor
das
adc
inc
daa
sbb
jno
loopne
loope
jno
or
and
shl
pop
or
jmp
xchg
addr16
cmc
movsl
push
and
insb
addr16
mov
sbb
in
imul
in
jno
dec
les
rol
inc
push
sub
mov
ja
inc
sahf
mov
push
xor
inc
cmp
sub
xlat
fsubrl
xchg
push
xor
xchg
dec
repnz
clc
pop
mov
outsl
int
or
mov
out
ljmp
sbb
test
fsts
movsb
loope
sbb
sub
xor
stos
sbbl
cld
pop
mov
fwait
mov
inc
sbb
sbb
jmp
adc
rolb
mov
out
mov
shrb
cmp
gs
cwtl
pop
mov
fwait
mov
in
jl
and
and
in
mov
imull
test
dec
rcrb
out
lret
fdivs
push
scas
lahf
jo
dec
sub
fs
sub
call
jno
sub
stos
and
addr16
xchg
lods
popa
and
push
mov
xor
rcrb
mov
stos
push
rolb
add
movsb
xchg
adc
add
imul
cmpsl
and
fcoml
jns
push
fnsave
daa
retw
mov
xchg
iret
jg
mov
xor
xor
scas
mov
in
loopne
jge
jmp
test
hlt
jno
loopne
pop
sbb
hlt
mov
or
push
cltd
insb
outsb
test
and
jle
cmc
inc
iret
stos
scas
mov
test
aad
mov
pop
andb
int
mov
stos
fisttps
sarl
sub
lea
and
js
adc
mov
scas
mov
in
jl
popf
jo
scas
cmp
loope
push
inc
xchg
in
cmp
lahf
sbb
mov
rol
hlt
jo
sub
aad
fldt
jl
hlt
movsl
stos
stos
inc
dec
jecxz
cmp
fstpl
mov
rcrb
push
test
popa
xchg
sbb
notl
adc
les
cli
or
fiaddl
cmp
inc
xor
imul
push
out
aam
inc
shr
pusha
cmp
inc
test
lods
out
int
test
popf
fmuls
dec
add
test
xchg
add
xchg
rolb
ja
or
sub
cmp
mov
cmp
cmp
pop
mov
clc
push
imul
sbb
mov
lea
gs
jge
mov
jb
or
aaa
mov
cld
lret
dec
pop
repnz
movsb
sbb
imul
mov
jmp
popa
mov
push
add
add
jecxz
clc
push
pop
inc
test
icebp
sbb
test
push
sahf
iret
aas
or
push
xchg
jge
ds
mov
jmp
ja
fildll
fwait
mov
scas
pop
cmc
jb
repz
and
stc
les
lret
dec
daa
test
pop
sub
dec
cli
inc
lods
cmp
repz
daa
add
xor
roll
mov
clc
das
fs
jne
pop
jb
das
int3
xor
sub
out
sub
xor
dec
jo
stos
fists
jg
push
pushf
push
sub
aaa
lahf
lock
ret
icebp
mov
push
xor
pop
xor
mov
pusha
mov
fdivrl
cmp
add
mov
sbbb
scas
mov
push
in
mov
jmp
pop
pushf
mov
leave
lock
and
xlat
or
sbb
mov
js
clc
cld
and
lcall
mov
mov
add
lods
imul
sbb
jle
xlat
ret
inc
jne
mov
mov
jne
cli
mov
ljmp
dec
test
js
xor
or
bound
shll
sbb
cmp
pop
gs
inc
popf
mov
lea
loopne
in
ss
mov
addb
ret
filds
dec
popa
or
insl
das
fwait
insb
lret
pushf
ret
shrb
xchg
loop
ftst
and
adc
ss
insb
stc
fldl2e
mov
inc
push
adc
inc
xlat
jne
or
dec
data16
cmp
movsb
fstl
jg
and
mov
subl
not
outsb
out
jmp
sbb
xchg
mov
mov
cmovo
ffreep
xchg
lret
push
fs
inc
jle
lcall
cli
ljmp
stc
outsl
inc
lods
push
lahf
mov
ljmp
sub
or
cld
jae
je
ret
push
orb
shrb
xor
jae
or
and
jne
mov
jae
adc
push
or
or
call
ret
aas
cltd
push
hlt
jnp
xchg
dec
mov
call
fldt
fcomps
pop
inc
dec
fnstsw
xor
inc
ret
lahf
or
push
gs
add
dec
sahf
ljmp
jnp
and
sti
loope
mov
adc
push
arpl
dec
leave
ljmp
aad
clc
and
lcall
and
dec
push
xor
jp
xchg
scas
call
inc
add
jl
mov
ja
and
aad
cmp
stos
test
mulb
out
pop
scas
stos
shll
test
cld
popf
mov
jge
dec
cltd
pop
pusha
or
pop
cmpl
or
add
in
mov
xor
daa
repnz
mov
mov
fscale
and
xor
adc
cmpsb
insl
out
or
sbb
stos
pop
jo
sbb
sub
pushf
cld
add
scas
in
sub
imul
fucom
and
lds
push
pop
push
pop
testb
ffreep
and
or
loope
mov
ja
aam
xor
dec
out
xchg
xlat
inc
call
lea
jae
and
add
xchg
outsl
lods
pop
shlb
xor
or
and
sub
stos
cmp
sub
data16
jns
fldl
subl
jno
push
push
rolb
dec
fcoml
or
enter
sbb
mov
cmpsl
jne
fnstcw
fstps
ja
add
aaa
dec
aas
dec
jbe
dec
sub
lods
fistps
xchg
inc
leave
mov
and
cmp
fdivr
xor
js
dec
int
inc
mov
aad
or
decb
movsb
adc
sub
pop
mov
xchg
inc
inc
nop
push
aaa
xchg
dec
nop
cld
and
xchg
sarl
mov
xlat
lret
das
je
mov
sbb
clc
out
sbb
adc
sub
into
fistps
test
jge
out
jmp
and
outsl
sbbl
dec
mov
aam
sbb
adc
rorb
std
shll
pop
sbb
popa
andb
test
loop
jge
cmp
sbb
lret
shl
push
inc
imul
dec
inc
mov
cltd
pop
leave
adc
dec
adc
fisubl
mov
incl
lods
mov
aad
ljmp
int
sti
std
shlb
shr
leave
xlat
ja
stc
rclb
lret
xchg
pop
xor
outsb
add
rclb
adc
bound
jmp
shlb
adc
inc
daa
mov
fcomps
iret
pushf
push
movsb
js
push
mov
jae
mov
or
sub
fcomp
add
sub
sub
rcrb
mov
mov
fwait
sub
lock
lods
sti
addr16
inc
or
push
clc
popf
mov
call
cmc
mov
sub
test
int3
dec
inc
xor
sbbl
test
popf
lods
jg
or
aas
adc
bound
xor
int
pop
hlt
mov
mov
add
inc
in
lret
test
jno
frstor
rcrb
pop
lods
pop
pop
jae
or
xor
inc
pop
lods
pushf
sbb
mov
loop
imul
fnstenv
xor
adc
test
xchg
mov
es
fdivrl
pop
loop
cmpsb
xchg
lcall
sbb
movaps
jg
pop
mov
mov
ret
or
out
cmp
call
repz
sbb
mov
dec
aas
fwait
int
rcrb
mov
stc
imul
je
orb
cmp
push
and
movq
cmpsb
inc
pop
mov
lods
pop
pop
add
push
sahf
fwait
arpl
and
and
dec
in
and
xchg
xor
inc
lret
mov
fsts
mov
int
cli
or
rcrb
mov
mov
cmc
sub
jmp
loope
ss
leave
fcoml
xchg
cmc
and
sbb
inc
jno
outsl
cmp
xor
push
je
pop
inc
push
cmp
dec
test
or
jo
xchg
pop
lods
and
add
add
and
xor
jo
call
or
add
add
jno
sti
leave
push
xchg
fwait
xlat
sar
sub
fs
xlat
cltd
push
insl
pop
mov
lods
dec
mov
jo
jmp
xchg
std
aas
dec
int
lret
pop
fisubs
lds
jl
xchg
out
jp
adc
test
push
fnsave
cmp
rcll
out
pop
repz
pop
dec
ds
cs
stos
scas
lds
mov
and
out
mov
pop
jl
test
jge
das
lcall
in
dec
jno
mov
cmpsl
mov
mov
inc
xor
lret
sbb
ret
or
sbb
popl
cmp
xchg
cpuid
popf
out
sub
add
push
dec
dec
aas
aas
hlt
adc
push
dec
cmp
cltd
mov
pextrw
xor
xchg
incl
dec
enter
mov
xchg
rcrl
adc
and
pop
add
lret
pop
test
jmp
jmp
add
dec
test
mov
fdivrl
int
sarl
popf
mov
pop
addb
push
std
rorl
arpl
inc
cmp
dec
sbb
ret
sahf
pop
popa
push
jno
repnz
out
cmpsb
cli
sbb
push
cmpl
adc
jbe
add
test
cmpsl
cmpsl
dec
rcr
in
test
idivb
and
push
pop
xchg
jg
fisubl
jl
cli
add
jle
loop
mov
mov
lods
push
jno
je
ljmp
xchg
xchg
outsl
std
sbb
or
dec
gs
int
sbb
push
out
int3
inc
outsb
notb
or
cli
xor
or
lods
test
call
mov
adc
cld
xor
das
ret
mull
mov
in
jl
mov
fldt
or
jmp
jle
stc
jle
or
clc
xchg
sbb
ret
lcall
cmp
push
fnstcw
push
pop
or
jb
mov
mov
insb
ljmp
mov
sub
pop
movsb
jl
push
ja
in
push
and
loopne
pop
add
mov
fldt
out
jnp
negl
xchg
cmp
dec
pop
push
pop
add
ficomps
jecxz
sub
push
imull
inc
arpl
push
nop
and
enter
jl
xchg
ss
mov
insb
inc
push
inc
xchg
sub
lods
sub
xor
lahf
outsl
addb
xchg
inc
cli
imul
lahf
xchg
nop
out
and
adc
sbb
test
cmpsb
mov
and
mov
add
insl
clc
cmp
lret
and
insl
das
cmc
cli
shlb
sbb
push
xchg
lods
fcompl
rcrl
dec
pushf
data16
sub
and
or
jae
inc
ficoml
lahf
pop
sbb
test
lods
or
rorb
cld
xchg
xor
fcompl
mov
inc
pop
ret
push
jmp
add
adc
lods
mov
lock
out
int3
sub
mov
push
stc
add
mov
jae
cmp
or
jno
jns
xchg
adcb
fdivrs
lret
dec
lea
fstpl
push
mov
lds
lea
test
and
or
jbe
ret
sbb
inc
mov
mov
cs
pop
inc
jno
and
pop
add
and
fists
sub
dec
leave
ret
in
ror
in
out
mov
rorb
pop
mov
sub
sub
gs
push
aas
fmul
mov
pop
and
jecxz
or
push
shl
lcall
sti
cmpsb
xchg
mov
iret
test
mov
lock
mov
or
popa
das
stos
mov
jg
jb
fidivrs
mov
mov
sti
les
enter
cli
push
std
or
or
dec
dec
addr16
int3
pop
les
and
daa
mov
cmp
xor
mov
lea
sbb
mov
add
jmp
nop
cli
cmpb
xor
mov
inc
adc
lds
push
mov
and
cmp
xor
inc
push
adc
xor
mov
mov
xchg
fisubrs
sbb
mov
mov
jnp
sbb
dec
mov
push
inc
or
jge
dec
fldt
nop
bound
sbb
pop
out
cmp
pop
push
in
pop
cwtl
sbb
push
cmpsb
inc
rcrl
add
cmp
pusha
cmp
sahf
or
clc
push
pop
jne
out
mov
aad
sbb
jb
mov
jns
cmp
mov
or
jp
loopne
mov
movsb
push
repz
sbb
iret
and
gs
rcl
imull
or
jecxz
in
mov
test
fidivrs
repz
push
hlt
xor
fs
inc
hlt
lahf
pop
cmpsb
or
stos
movsl
outsl
das
jne
jecxz
orl
insb
and
arpl
stc
mov
sub
mov
test
pushf
sti
rorl
jnp
cmp
cmp
fwait
scas
push
mov
in
push
ret
add
andl
mov
lods
adc
imul
mov
jb
outsb
les
mov
inc
lret
jp
mov
fstp
in
dec
or
mov
push
sbb
add
roll
pop
mov
ss
in
xor
mov
pop
xor
es
push
mov
cmp
inc
sti
mov
sar
int
rorl
pop
cltd
sbb
outsl
fs
inc
mov
out
cmp
jmp
jne
loope
push
cs
dec
in
repnz
sub
fisubrl
lahf
fcomp
int
bound
imul
inc
adc
push
lahf
rdmsr
or
lock
les
inc
insb
leave
dec
lcall
js
mov
stos
mov
jle
sti
arpl
sbb
test
addr16
push
jle
or
cmp
mov
decb
dec
pop
js
insl
imul
mov
jecxz
std
popa
sahf
xchg
mov
inc
stos
and
sub
xchg
aam
sti
or
jmp
addb
add
push
test
stos
flds
sahf
pop
dec
fistpll
pop
out
mov
cld
jge
jae
jge
ds
inc
xchg
cwtl
xchg
jg
aas
lds
mov
sub
lock
cmp
pop
pop
mov
push
sbb
mov
cli
cmpsl
dec
fbld
xlat
xor
insb
adc
xchg
mov
sbb
sbb
aaa
pop
ficoms
mov
lds
imul
fwait
gs
scas
dec
stc
and
out
bound
dec
adc
inc
movsl
xor
iret
or
sub
push
lcall
jne
loope
inc
xor
negl
shrl
add
cwtl
inc
xor
xor
dec
ret
sbb
jmp
inc
divl
or
mov
mov
imul
xor
push
sbb
inc
leave
jge
pop
sbb
loop
daa
lods
cmpsb
jnp
jo
lret
fidivl
int
add
add
xor
int
mov
cs
seto
out
jge
push
call
int
insb
adc
pop
inc
pop
or
cltd
int
jl
xor
dec
fnstcw
shll
dec
mov
insl
pop
ljmp
scas
push
lea
repnz
xchg
in
mov
dec
fiadds
mov
mov
jne
in
fbld
mov
das
loop
aas
fdivs
inc
push
stos
inc
in
icebp
adc
cld
pushf
push
dec
mov
inc
mov
test
xlat
push
fistl
sti
test
loope
sbb
xchg
mov
xor
push
mov
mov
add
and
mov
mov
mov
mov
das
cmpsl
and
mov
pop
jno
clc
adc
data16
mov
pop
mov
jl
mov
imul
mov
test
and
adcl
adc
and
or
test
inc
push
and
aaa
dec
and
mov
mov
sti
add
je
sbb
and
loop
and
ds
mov
loope
test
sahf
dec
icebp
pop
adc
xor
aaa
lods
and
pop
pushf
push
jmp
jae
jle
cmpsl
adc
psubb
sub
int
or
in
mov
test
xchg
jbe
les
fcompl
mov
push
out
fwait
shll
jb
mov
pop
clc
sbbb
lods
add
push
xchg
adc
push
clc
and
dec
xor
or
rcrb
and
dec
inc
cmp
aam
test
insl
xor
xor
aaa
dec
rol
pushf
push
pop
das
mov
inc
or
leave
lock
xor
sbb
jg
popf
and
cmp
insl
aas
out
adc
xchg
les
xchg
adc
pop
cs
mov
add
gs
ss
xchg
fisubl
mov
sbb
or
adc
subl
ret
adc
mov
mov
addr16
ret
dec
jmp
jl
cmp
fbld
and
push
loop
xor
loope
fsubs
outsl
sub
cmp
es
sti
aad
xchg
imul
popf
hlt
outsl
mov
arpl
add
push
jecxz
mov
inc
js
mov
xor
das
mov
jnp
es
loop
ds
lret
popa
push
outsl
in
movsl
pusha
push
enter
dec
shll
mov
mov
cmpsb
decb
lods
xor
pop
sahf
ret
mov
pop
mov
xor
loop
ds
rcll
push
push
sub
mov
insb
cmp
jge
push
fcoml
sbb
inc
iret
scas
sbbb
cmp
int3
mov
xchg
cmp
jne
adc
or
adc
jmp
aas
enter
fs
test
fnstcw
fldcw
jbe
in
ret
lahf
test
jp
popf
push
sarb
mov
xchg
jmp
mov
lea
adc
dec
in
rorb
xor
inc
sub
fbld
leave
or
push
pop
fs
xchg
mov
arpl
jb
ret
les
inc
int3
inc
add
enter
inc
sub
lds
xor
pusha
mov
sub
xchg
ret
js
insl
sarb
sbb
fstpl
pop
ljmp
push
jne
lret
mov
mov
push
mov
loop
stc
xor
push
inc
scas
mov
and
mov
sbb
mov
fisttpll
or
dec
xor
sbb
js
hlt
sti
inc
int
inc
aas
adc
bound
dec
fisttpl
cmpsl
xchg
sub
push
cmp
out
push
xor
imul
sahf
and
cmp
je
lahf
iret
mov
xchg
xchg
test
lahf
data16
mov
sub
rclb
cmp
call
loope
movsb
pop
mov
int
in
push
aaa
sub
lret
adc
adc
pop
adc
imul
outsb
adc
inc
sub
aas
sbb
cltd
jecxz
push
inc
stc
lcall
add
push
xchg
lret
pop
lret
das
mov
les
add
jne
push
out
inc
inc
rcl
popf
or
out
loopne
xchg
cmp
or
pop
and
sbb
push
add
mov
and
arpl
inc
jns
xchg
inc
jg
pop
out
test
movl
cltd
jne
aaa
les
xor
nop
or
andl
fimuls
sbb
aas
xchg
dec
mov
adc
popa
divl
outsl
insl
fsts
cmp
int
sbb
adc
cld
inc
mov
sub
and
dec
sub
iret
and
call
jno
jns
rcll
negb
sbb
es
cli
daa
addl
popf
or
add
mov
pushf
and
stos
jecxz
pop
mov
outsb
shrb
cmp
xor
in
out
fisttpll
fwait
add
cmovbe
sahf
nop
inc
fldt
bound
push
cli
aas
and
xchg
and
mov
xor
sub
movsb
out
xchg
sub
fisubl
ret
jg
xchg
mov
pop
mov
mov
dec
fildll
pop
bound
jo
cmp
pop
insl
xor
pusha
xor
pop
and
mov
cmpsl
sbb
cli
fstpl
dec
mov
enter
cmp
mov
insl
adc
or
xchg
in
inc
dec
adc
push
xchg
adc
push
fldl
ret
mov
aaa
pop
in
icebp
pop
inc
out
jl
mov
hlt
popa
cmpsb
pop
mov
stc
scas
aam
sub
sbb
sar
jno
or
je
push
jge
inc
out
test
push
repnz
jl
jp
fucomip
inc
ss
pushf
cmp
inc
in
xchg
int
mov
jp
mov
or
mov
mov
add
pushf
arpl
test
dec
lahf
pusha
mov
scas
cmp
or
movsl
jmp
jnp
dec
sub
mov
cli
jo
pop
stos
aaa
push
das
pop
mov
outsb
and
or
push
mov
nop
push
sub
cmc
repz
das
arpl
push
ljmp
cwtl
clc
pop
push
xor
stc
out
xchg
mov
sbb
dec
xor
jg
jno
scas
cmp
adc
jb,pn
and
inc
xchg
scas
test
insl
mov
insb
adc
mov
inc
add
aas
cmp
adc
les
fidivs
mov
outsl
mov
ds
mov
mov
mov
out
add
ds
cmp
adc
loop
xlat
inc
inc
inc
dec
adc
dec
pop
frstor
pcmpeqd
mov
aaa
push
fwait
xor
add
int3
in
mov
sbbl
push
sbb
cmp
pop
sbb
push
push
fisubl
sub
scas
cmp
xor
sub
jo
test
cmp
ss
lahf
cs
xchg
negb
push
sarl
fiadds
cmp
mov
pop
int3
insl
cmp
into
push
push
sub
outsl
enter
pusha
jno
int3
push
cmp
mull
sbb
sbb
idiv
inc
push
mov
hlt
xlat
jne
cld
jle
mov
insb
cmpsl
in
mov
into
mov
pop
pop
pop
fistl
xor
inc
mov
ja
das
insb
add
xchg
dec
nop
leave
inc
jnp
bound
push
xor
bound
pop
loop
jbe
arpl
aad
adc
or
loope
movsl
push
mov
dec
or
lock
sbb
lds
jg
icebp
xorb
inc
push
xor
loop
xchg
and
mov
fmuls
lods
rolb
loope
fst
ds
pop
lret
iret
fwait
in
xchg
adc
hlt
mov
mov
lret
add
dec
outsl
test
test
sbb
int3
sarl
in
mov
adc
mov
lds
fs
fs
sbb
cmpsl
xchg
cmpsb
mov
mov
outsb
adc
or
stc
in
or
outsb
jbe
cld
int3
push
call
aam
inc
pushf
sbb
fsubrp
mov
stos
mov
fsubr
dec
sub
sbb
int3
xchg
mov
jo
leave
cld
pop
outsl
sarb
pop
pop
icebp
push
shlb
fstpl
lcall
mov
lea
rcrl
xchg
bound
jb
sub
pop
and
sti
push
insl
idivb
adc
dec
sbb
mov
sub
inc
jb
push
pop
push
lock
vpsubusw
div
stos
movsl
xbegin
xor
into
and
sub
dec
push
mov
testb
inc
leave
fisubl
out
rcrb
jnp
inc
push
mov
int3
nop
mov
loop
pop
xchg
push
sbb
daa
fcomps
icebp
sbbl
decb
xor
ljmp
adc
lds
jle
lret
fdiv
inc
push
pop
ss
daa
dec
xchg
outsl
xchg
pop
pop
mov
jmp
mov
inc
xchg
add
ficompl
pop
aas
adc
or
pop
aam
xchg
sub
adc
lea
pusha
jmp
imul
fimuls
mov
push
mov
jg
dec
jne
lods
cmp
cmp
jb
dec
sub
mov
cmc
lea
outsb
je
inc
inc
pop
rcr
dec
xchg
lcall
inc
inc
xorl
dec
cmp
sub
cmc
fildl
and
and
inc
cmp
xchg
fadds
inc
mov
lret
mov
xchg
adc
mov
push
enter
lock
shrb
adc
mov
mov
imul
sub
adc
popf
fwait
imul
xlat
push
sbb
stc
out
fcomps
frstor
cmp
add
nop
dec
mov
rol
push
pop
mov
cmpl
pop
mov
push
adc
aas
xchg
pop
jbe
xchg
hlt
je
inc
fnstcw
pop
in
xchg
and
and
pop
push
adc
cltd
add
mov
fs
cmp
sahf
add
push
jnp
ja
xchg
jbe
cmpsb
aaa
inc
stos
mov
cmp
aaa
outsb
imul
dec
or
jmp
adc
aaa
mov
adc
outsl
fiaddl
notb
and
rcll
mov
rolb
jnp
xor
sahf
pop
scas
and
ret
push
ja
mov
or
fbld
mov
sbb
jl
lea
push
or
mov
insb
cmpsl
sub
xor
sub
imul
pop
cs
xchg
sbb
mov
mov
or
adc
inc
sti
jecxz
jp
rol
sti
mov
or
int3
cmp
cltd
xchg
sub
mov
ret
inc
xor
push
push
push
and
and
mov
dec
jp
fiaddl
adc
gs
jnp
push
bound
jb
pusha
xchg
fs
xchg
and
cmp
or
rep
jecxz
inc
jge
insl
cmp
lods
add
jnp
mov
add
in
popa
xchg
out
xchg
inc
int3
andl
pop
xlat
pop
cs
jge
xor
and
push
inc
inc
and
pop
pop
mov
cpuid
icebp
clc
jns
rorl
adcl
jnp
mov
xchg
push
or
inc
adc
push
pop
and
repnz
cld
jg
cmp
dec
mov
outsb
xor
push
xchg
mov
scas
add
out
lods
mov
iret
dec
pop
jnp
lods
dec
mov
fldcw
or
xor
out
dec
xor
adc
dec
je
xor
fcmovnu
fcoms
cmp
sub
shl
testl
aam
add
inc
cwtl
shrl
pop
stos
pop
jle
mov
cvtdq2ps
or
add
adc
sbb
dec
or
insl
fsub
xor
pop
adc
cmp
imul
dec
ja
xorb
imul
jnp
pop
fisubl
popf
push
xchg
mov
jnp
stos
sub
scas
daa
lahf
mov
fwait
dec
pushf
inc
rcrb
int3
scas
cmpsb
jne
lret
add
or
mov
jecxz
fdivrs
xchg
xlat
mov
cmc
or
icebp
xchg
adc
div
or
pusha
inc
or
pop
pop
push
mov
mov
test
sti
int3
imul
sub
sbb
pinsrw
pusha
arpl
sub
movsb
dec
test
lret
div
jbe
and
jg
shrl
imull
repz
dec
jecxz
jnp
push
mov
mov
push
ds
aas
out
je
cmpsl
or
shlb
pop
test
xchg
outsb
and
insl
push
jns
xor
cltd
adc
cmp
dec
adc
mov
sbb
adc
dec
sub
mov
sub
ret
mov
cli
xlat
stos
jge
xchg
xor
sti
stos
lea
xchg
adc
dec
inc
out
lds
lret
add
mov
pop
add
lret
popa
ljmp
mov
xor
mov
lcall
test
js
popf
sub
mov
mov
loop
mov
push
sahf
xor
mov
xorb
out
mov
ss
xor
sahf
pop
dec
pop
lds
mov
repz
in
adc
adc
ror
loope
dec
push
mov
dec
xchg
jns
sub
jns
std
xchg
aam
cli
sbb
mov
mov
dec
call
fmuls
pop
dec
popa
cmpsb
cltd
call
and
leave
sub
cmpl
inc
idivl
fildll
lcall
and
inc
inc
jo
lret
in
xchg
push
mov
push
mov
add
call
dec
sub
inc
sbb
lahf
testb
adc
std
in
fwait
jl
cwtl
xor
dec
orl
scas
inc
cmc
inc
ljmp
add
sbb
cmp
and
mov
adc
dec
shlb
add
jl
lods
mov
sarb
jecxz
mov
inc
jne
leave
add
xlat
movsb
nop
repz
enter
aam
outsb
call
inc
sub
rclb
int3
mov
inc
xchg
add
jle
outsl
xor
mov
std
xchg
repz
int3
pop
int3
fnstcw
orb
pop
outsl
xchg
into
jl
pop
xor
mov
fadd
pop
popf
jnp
jmp
js
mov
xor
ret
mov
cmp
int
insb
mov
cmc
out
inc
packssdw
cmp
lods
data16
or
xor
mov
xchg
mov
pop
mov
orl
out
into
pop
popl
sub
in
cs
mov
dec
pop
dec
add
aaa
jmp
in
jle
dec
out
mov
imul
sub
lods
and
loope
movsb
divl
dec
inc
push
xchg
lahf
xchg
jne
adc
lock
dec
lcall
cltd
pop
sub
mov
sbb
push
add
pop
enter
aad
xorb
adc
mov
addl
lods
inc
orl
and
add
mov
mov
jbe
cmp
mov
jnp
sub
inc
pusha
add
jmp
inc
loopne
int
cli
mov
xchg
pop
mov
pop
fisubrs
jge
call
fs
jae
push
sub
mov
xchg
and
or
ret
testl
stos
in
loope
inc
clc
std
leave
dec
mov
shrb
push
out
pop
push
mov
pop
in
pop
mov
lds
pop
mov
lods
leave
mov
movsl
sbb
movsl
idivb
or
scas
push
mov
shll
scas
push
cmp
mov
into
int3
jnp
or
dec
test
or
or
aam
adc
jl
or
pop
jl
cmp
imul
mov
insb
cltd
jle
sub
ds
push
fwait
inc
jl
or
xor
out
subb
roll
nop
loope
push
push
hlt
push
sbb
mov
enter
inc
sub
in
pusha
inc
sbb
sbb
jge
dec
lods
xor
sub
out
pop
pop
out
test
shrl
inc
test
les
xor
into
add
call
mov
int3
hlt
add
pop
scas
arpl
bound
jmp
pop
add
ss
aad
xchg
les
or
mov
push
lea
in
adc
xchg
or
or
jb
jns
push
jle
mov
inc
xchg
lea
jg
popa
repz
iret
inc
mov
mov
xor
popf
aad
je
adc
jle
mov
xchg
cli
mov
adc
fs
decb
cld
movsb
dec
sbb
cmp
ffreep
add
pop
orb
dec
lock
les
lret
push
pop
insl
scas
jl
mov
mov
sub
inc
ja
pop
shlb
and
cmp
xor
cli
popf
test
and
lock
sbb
xor
pop
inc
xchg
imul
ljmp
mov
pop
inc
xchg
fsubr
icebp
mov
lahf
add
jmp
outsl
jmp
push
adc
and
xor
aam
popf
jmp
call
mov
fildll
jle
or
icebp
repz
subb
test
push
xchg
les
testl
dec
jmp
repz
and
clc
aas
or
shrl
add
js
rcrl
cld
sub
arpl
fisubrs
push
inc
movsl
jmp
jae
xor
rcrl
stc
or
mov
adc
into
xchg
out
out
call
jbe
push
xchg
pop
and
gs
xchg
aas
and
add
jp
sti
mov
test
dec
cmpsb
in
mov
xlat
or
pop
sti
sub
add
outsb
jecxz
dec
movsb
loop
sbb
std
mov
pop
push
popf
jmp
movsb
popa
pop
add
sub
imul
inc
or
inc
stc
je
into
pop
add
fldenv
jl
mov
idivb
ffreep
sbb
aad
mov
shr
je
pop
add
outsb
sbb
mov
ds
jge
mov
pop
jmp
adc
test
int
enter
jae
cwtl
inc
mov
cwtl
leave
mov
ror
cmp
cmp
xchg
mov
xchg
pop
call
mov
sbb
jae
lahf
int
popa
adc
mov
jge
mov
push
dec
push
push
or
pop
push
cld
xchg
ja
jne
data16
in
cmp
popa
jbe
icebp
mov
sbb
lods
jb
xor
dec
hlt
ds
inc
sbb
add
pop
js
and
frstor
leave
mov
mov
and
test
fstpl
inc
ss
jmp
cmp
cmpsb
iret
dec
xchg
cmpsb
inc
xor
sbb
or
test
out
jne
mov
adc
push
mov
jge
jecxz
jle
pop
std
inc
xlat
cmc
xor
test
mov
imul
cltd
mov
adc
fs
fisubs
xchg
sub
cmpsl
or
nop
imul
sub
jnp
xchg
repnz
inc
or
xchg
lret
cmc
int
es
mov
xchg
push
loopne
test
pusha
xor
das
int3
hlt
push
jge
or
add
xchg
imul
jb
and
stos
inc
dec
mull
repnz
arpl
xchg
cwtl
cs
or
stc
mov
mov
inc
xchg
fistpll
cmp
or
lret
bound
jmp
lcall
fmulp
jo
insb
mov
pop
sub
shr
into
sbb
mov
jno
push
test
in
pop
xor
mov
mov
out
mov
ljmp
rcrl
mov
and
sti
out
aad
ffree
xor
cmp
aam
ljmp
arpl
cwtl
lods
fsubs
sti
int3
dec
mov
cli
mov
in
lds
jg
push
mov
sbb
jecxz
jb
pushf
or
mov
cs
xor
stos
jmp
dec
mov
jns
and
popf
into
sahf
inc
add
into
mov
xchg
call
bound
lds
lods
loop
adc
jg
xchg
add
notl
aad
rcrl
aas
dec
inc
and
insb
dec
lock
fsubrs
jl
in
xchg
inc
subb
out
rolb
jno
outsb
pop
aas
cwtl
sub
lahf
sbb
out
arpl
ljmp
mov
icebp
xchg
aas
xchg
adc
aad
xchg
inc
cmp
movsl
repnz
xlat
xlat
cmp
jge
call
rorl
push
jl
push
icebp
imul
iret
sbb
jg
test
ret
scas
lock
push
fisubl
incb
inc
xor
jo
addr16
movsb
push
roll
test
mov
sbb
in
insb
das
inc
jae
je
out
pop
and
cmp
testl
in
mov
andl
jl
inc
adc
jne
fs
cmp
stc
inc
jb
sti
xlat
call
jl
push
push
mov
xor
lods
mov
pop
shll
lahf
add
inc
repnz
cmp
or
mov
adcl
cwtl
inc
mov
loopne
es
dec
and
jae
das
mov
sub
push
mov
call
sub
pop
xchg
pop
mov
mov
fildll
adc
jno
cmp
pop
mov
in
dec
push
adc
fcomip
push
mov
sub
fcmovnb
xlat
int3
mov
testb
fisttpll
jg
inc
mov
sahf
or
xor
xor
xor
xchg
xor
xor
repnz
retw
jae
dec
rol
lock
sub
mov
lea
aas
gs
mov
mov
arpl
push
xchg
jae
out
and
subb
fsubl
mov
push
gs
cmpb
cmpsl
xchg
test
je
ret
sbb
imul
mov
call
lock
js
cwtl
or
and
clc
push
ja
clc
push
out
jno
popf
and
push
loopne
in
ret
ss
pop
aam
cli
out
daa
addl
mov
in
jbe
iret
int3
mov
pusha
jmp
stc
cld
iret
test
out
sbb
mov
or
sbbl
sub
xchg
popf
nop
xchg
iret
lods
fsts
or
sbb
sahf
dec
hlt
mov
mov
in
xchg
jl
addl
loopne
fldenv
loop
dec
xor
and
mov
into
mov
and
push
clc
es
pop
xor
dec
mov
push
xor
mov
mov
mov
in
sub
ret
fiadds
dec
iret
xor
xlat
pop
push
sub
sti
jnp
movb
jl
orb
test
test
scas
xorl
ret
leave
js
outsb
sti
add
mov
xorl
sbb
ret
addr16
xchg
idivl
or
imul
test
pop
test
out
cmpsb
mov
cmc
add
ret
mov
adc
dec
sub
or
lds
cmp
loop
sub
mov
sbb
add
lret
int
pop
loop
lods
popa
xor
push
mov
pushf
movsl
lods
mov
shlb
mov
out
adc
xor
ror
xchg
mov
hlt
pop
mov
or
cmp
jl
dec
mov
loop
push
jne
loope
cmp
cwtl
jne
mov
mov
sbbl
lds
and
push
mov
mov
mov
or
ret
cmc
xchg
push
imul
stos
and
jb
fbld
or
cmc
jne
push
std
adc
dec
xchg
test
test
xor
jecxz
mov
or
mov
or
jge
adc
xchg
fadd
lods
xchg
mov
ljmp
add
rorl
out
fnstcw
les
add
xchg
fisttps
mov
add
mov
or
test
js
jb
push
gs
push
push
push
and
cmp
sbb
cmpsl
push
sub
outsb
or
add
repnz
in
iret
hlt
mov
jge
cmp
inc
into
adc
jecxz
pop
js
add
push
or
aam
jne
push
dec
adc
lds
cmp
out
cmp
movsl
xchg
sub
or
jg
inc
inc
xchg
pop
mov
pop
insb
fs
stos
jp
jge
xor
mov
nop
push
test
add
mov
fdivrl
loope
lods
pop
and
stos
out
mov
ret
xchg
test
and
mov
sar
loope
jne
scas
loope
int
int3
or
int3
es
leave
jmp
mov
jmp
stos
add
nop
js
outsl
inc
adc
addr16
mov
jp
mov
adcl
clc
inc
gs
mov
sub
imul
push
push
ret
add
call
push
cmp
insb
xchg
inc
iret
loopne
les
ret
iret
jg
xchg
cmc
sub
jb
jmp
sub
cmp
cltd
gs
adc
jg
xor
xchg
sahf
je
sub
jge
jb
xchg
or
hlt
dec
lods
cwtl
pop
mov
dec
in
cmpsl
jbe
imul
add
inc
jbe
bnd
pop
mov
mov
pop
dec
loop
push
cld
jmp
mov
pop
mov
test
adc
pop
pop
inc
inc
adc
adc
aaa
test
lret
ja
cmp
push
test
vpsllq
jecxz
stc
mov
xor
mov
inc
mov
in
inc
ds
je
into
out
mov
lcall
aas
addr16
add
adc
or
dec
testl
add
push
cmp
cmp
xchg
ret
add
int
pop
push
faddl
fidivl
cwtl
pop
roll
test
outsl
loop
data16
mov
push
xor
loope
xor
cmp
jle
sub
push
rcl
inc
jle
ds
aas
fadds
das
scas
shll
mov
fdivs
cli
or
sub
cmp
mov
dec
imul
xchg
or
arpl
insb
cmp
popf
outsl
stos
cmc
mov
ljmpw
stc
push
repz
rorb
bound
or
and
cmp
fs
negb
mov
arpl
imul
pop
mov
pop
push
aas
or
cmp
or
das
out
imul
rorl
jne
cmc
mov
ret
pushf
in
loope
inc
xchg
xchg
dec
sub
nop
sub
insl
repnz
fwait
jl
sbb
into
adc
flds
pop
xchg
lcall
or
jmp
iret
cmp
movsb
test
and
dec
cmpsl
dec
fwait
sub
pop
out
sbb
repnz
cld
test
mov
ds
sbb
jnp
out
shrb
push
and
pop
dec
fimull
xorl
outsb
popf
mov
xchg
scas
jns
and
xor
xchg
loopne
mov
aaa
jo
imul
inc
mov
call
repnz
adc
test
inc
dec
cmpsb
test
lods
xor
push
dec
adc
sbb
in
sub
imul
and
rcrl
sbb
mov
call
cmpsb
mov
mov
hlt
mov
or
out
mov
jmp
movsl
and
sbb
sub
cmp
aaa
into
inc
mov
push
and
xor
aam
shlb
pop
jle
iret
xlat
or
jnp
daa
sbb
popf
sub
xchg
sub
and
pop
pop
dec
pushf
aas
jno
data16
mov
out
mov
divl
ret
pop
adc
and
iret
bound
test
inc
enter
dec
sti
bound
jne
inc
call
adc
push
in
mov
dec
sub
xchg
lret
ret
data16
test
aad
mov
and
xchg
cwtl
xor
adc
add
f2xm1
cwtl
jmp
outsb
je
xchg
in
shlb
add
jg
nop
outsb
or
add
cs
out
push
iret
es
and
fmuls
xchg
and
cmc
pop
pop
mov
scas
stos
dec
mov
es
das
push
adc
pop
sub
inc
test
xor
loope
sub
aaa
fsubrp
aas
inc
lea
push
js
popa
dec
adc
enter
fdivrs
mov
das
add
push
insl
cmpsb
and
dec
fsubrl
mov
push
push
jae
sbbl
and
push
cmp
sub
inc
imul
out
pop
lahf
pop
dec
daa
es
pop
lods
jecxz
sbb
cmp
mov
push
push
and
pop
fwait
lret
adc
int
repnz
xchg
lret
stos
cmp
or
popa
xor
sub
and
mov
outsl
test
std
pop
cmp
jne
ja
push
test
pop
inc
dec
mov
dec
add
xchg
cmp
filds
jge
test
cmp
sub
inc
pop
adc
push
lahf
dec
inc
rcrl
imull
in
repnz
cmpsb
lea
dec
cmp
cmp
and
clc
mov
sbb
push
cmc
push
sbb
test
cmp
js
fcomi
sub
fcompl
aam
jp
xor
shrl
mov
call
mov
and
fdiv
fcmovu
lahf
cmp
fisttps
pop
pop
add
xor
leave
sbb
ljmp
mov
popf
push
push
ss
mov
data16
adc
insb
adc
popf
push
out
test
pop
mov
fdivs
stos
cmp
out
push
fcompl
sbb
xorl
cld
pop
jne
xchg
sahf
cmp
and
ret
or
add
mov
push
mov
mov
mov
push
pusha
pop
mov
and
push
ljmp
lret
sub
inc
stos
popf
pusha
neg
daa
fdivs
sbb
aaa
or
xchg
pop
pushf
out
cmp
stos
loop
dec
test
sbb
data16
test
hlt
loope
arpl
clc
lcall
mov
sbb
inc
lds
push
das
jp
jo
mov
mov
movsl
mov
loopne
xor
sub
mov
and
lock
lret
imul
idiv
repz
or
push
push
add
and
ds
lds
call
push
insl
and
xor
repnz
add
repz
fadds
xchg
or
xor
mov
adc
hlt
jno
imul
mov
out
clc
or
nop
jb
mov
inc
pushf
xlat
jbe
mov
add
or
jecxz
or
adc
jmp
inc
movsb
or
pop
fsubrs
xor
jle
push
fwait
sbb
push
xor
jmp
imul
mov
ret
aas
outsb
jb
jge
push
or
sub
xchg
sub
stc
addr16
xchg
fcoms
add
sbb
shrl
dec
dec
neg
sbb
aas
mov
sti
xor
call
dec
mov
dec
jg
adc
add
in
jns
mov
jne
cmpsl
xchg
xchg
fcomip
cs
pop
fmull
add
push
sub
and
insl
dec
xchg
add
push
sub
lds
aad
rcl
out
adc
scas
push
mov
std
and
arpl
call
inc
xorl
andl
cli
inc
ljmp
sbb
out
adcl
jle
mov
sbb
mov
sub
aad
sub
cmc
pop
enter
push
jns
test
push
or
cmp
call
inc
or
xchg
push
adc
pop
mov
andb
out
data16
push
and
xor
test
stc
in
add
js
aas
jno
out
fdivr
lods
sbb
sbb
leave
daa
pushf
push
xor
jno
inc
in
add
jae,pt
jnp
movsl
aam
jbe
push
add
lea
xchg
inc
sbb
lods
cmp
cmp
sub
or
outsl
aaa
jecxz
adc
push
ret
lret
pop
push
cmp
icebp
dec
sub
jle
movlps
or
popf
rorl
repz
mov
jae
loope
sbb
into
in
jne
loop
mov
test
std
xchg
scas
adc
sbbb
dec
jb
xchg
dec
add
in
mov
mov
cmp
xchg
xorl
pop
fbld
ret
mov
add
mov
les
mov
dec
enter
mov
shrl
lea
sub
jb
mov
pop
add
movsl
push
test
pop
lret
xor
cmp
imul
sarb
add
jp
mov
or
mov
cmp
and
sbb
add
pop
aad
and
adc
xchg
lds
out
jecxz
lock
push
mov
xor
test
ljmp
adc
sbb
add
ja
jp
cmp
gs
push
xchg
test
push
add
inc
cwtl
push
adc
cs
aaa
sbbl
or
xchg
in
sbb
dec
ror
inc
divl
mov
testl
jmp
dec
pop
stc
xor
xchg
sbb
ljmp
pop
adc
adc
enter
mov
jbe
pop
push
cld
add
aaa
call
out
and
adc
jns
mov
jg
xorb
cmp
out
mov
or
fldenv
ljmp
xor
mov
cmpsl
pop
lock
jnp
jmp
mov
ljmp
ss
sbb
mov
rorl
cmp
xor
jl
push
push
sub
repz
cld
fwait
out
dec
jne
es
aad
xor
in
outsl
jecxz
jne
or
adc
xchg
out
xchg
rclb
ljmp
jno
mov
nop
push
inc
push
fcompl
jle
std
xchg
sub
aaa
loope
push
lods
xchg
mov
xchg
dec
mov
mov
addr16
and
xor
mov
repnz
sbb
add
cmpsb
cwtl
mov
lea
inc
mov
and
or
mov
sub
mov
loope
push
pop
jl
popf
mov
mov
bound
stos
stos
stc
fdiv
pop
mov
mov
push
pushf
movsb
sub
test
hlt
ret
iret
push
outsb
inc
mov
adcl
and
xor
add
cmp
cmp
rorl
dec
mov
ror
push
pop
inc
outsl
xor
lcall
sbb
mov
inc
daa
push
push
lods
mov
sti
cmp
fwait
out
adc
adc
jnp
mov
xchg
cmp
adcb
and
push
mov
and
sub
movb
test
nop
cmpb
push
clc
pop
iret
aad
stos
scas
jbe
pop
sub
inc
or
push
or
xor
hlt
stc
psubb
sbb
mov
dec
mov
hlt
push
cld
fsubrl
adc
adc
push
dec
loopne
push
inc
fsubs
sbb
mov
adc
aam
das
sahf
mov
cld
add
test
cmp
movntps
dec
mov
pop
ljmp
jmp
sub
data16
shll
mov
sarb
cmpsb
loope
push
add
lods
cmp
addl
pop
mov
dec
icebp
adc
cmc
or
xor
in
and
add
mov
fisubs
mov
je
jmp
mov
addr16
dec
bound
mov
std
or
lea
call
in
outsb
sti
jb
xor
pop
cmp
push
mov
push
scas
and
repz
shlb
jle
cld
jmp
pusha
shll
mov
lret
loop
rcll
lcall
inc
xchg
dec
scas
in
cs
dec
scas
jns
inc
adc
sub
xchg
jecxz
call
fwait
xor
pop
push
xchg
sbbl
fdivrl
pop
jae
cld
push
mov
pusha
test
and
xchg
insb
or
adc
or
xchg
clc
jbe
cmp
roll
lahf
scas
xlat
adc
in
ret
or
inc
pop
fs
xchg
inc
pop
sbb
push
lret
ficoml
fiadds
aad
shl
psrlq
arpl
cmp
add
push
cld
and
xor
sub
fstpl
push
cmp
cmc
shl
xor
pop
xchg
or
dec
xchg
jge
and
addr16
or
popa
cmp
sti
mov
xchg
pop
in
xchg
dec
pop
fucomp
cli
lcall
jmp
mov
test
jae
mov
dec
sbb
ljmp
add
push
cmp
in
das
xor
inc
xor
add
xchg
xchg
in
iret
fisttpl
aam
aad
xchg
pushf
sub
ss
or
mov
cmp
cmp
shrl
jp
adc
cld
mov
pop
pop
stc
pop
lcall
sbb
push
xor
not
jecxz
and
xlat
sub
sub
fwait
xchg
xchg
push
or
das
cs
add
xorl
loope
ffreep
shl
shrb
jno
fucom
clc
adc
dec
pop
negl
xchg
ja
fadds
push
jno
jbe
test
xorl
lcall
cs
rclb
lock
mov
jl
sbb
xrelease
les
addr16
adc
sub
out
and
or
cs
rorl
xorl
or
cwtl
mov
loope
xor
lods
jecxz
adc
sub
push
bound
sbb
push
mov
mov
lock
jno
push
inc
xor
xlat
pop
cmpl
cmc
xor
lock
pop
repz
mov
pop
imul
lcall
lea
cmp
dec
adc
fsubrl
icebp
pop
cmpsb
ja
push
jge
lea
daa
enter
pop
mov
and
scas
scas
mov
mov
out
jb
mov
aad
xorl
outsb
into
data16
rcrb
hlt
push
push
sbb
jmp
cs
jecxz
out
stos
and
popf
xchg
jl
push
and
jbe
or
xchg
mov
inc
jo
scas
push
jle
jbe
ljmp
les
dec
mov
sbb
leave
dec
arpl
push
cld
js,pn
and
lds
pop
andl
mov
jl
sub
in
and
mov
gs
and
stos
push
mov
nop
push
push
lret
fildll
jmp
sbb
idiv
faddl
jo
fadd
shll
push
pop
pop
fcom
movsl
push
incb
mov
lea
and
and
xchg
or
and
lods
stos
dec
mov
cmpsl
jmp
cmpsl
fisttpl
arpl
mov
sub
notb
data16
mov
jne
pop
repz
jno
jns
stc
or
bound
mov
popa
pop
mov
adc
int
test
call
mov
push
jl
mov
jae
pop
pop
inc
pop
inc
push
and
sbb
gs
mov
mov
cltd
ja
sub
icebp
xor
jg
scas
cmp
sbb
aaa
loopne
daa
jo
fxch
call
dec
dec
stc
cmp
cld
scas
pop
push
sti
sub
mov
leave
adc
insb
and
jno
mov
fcmove
addr16
fadd
repz
enter
jbe,pn
shll
ja
sub
and
xchg
mov
sarb
pop
push
mov
ja
or
cmp
rolb
je
add
aam
push
cmc
repnz
inc
pusha
ds
push
pop
in
pop
inc
std
push
loopne
xlat
dec
lret
cmpsl
dec
fmull
and
loope
push
mov
popf
push
pop
jnp
or
cmpsl
sub
mov
ds
inc
aaa
pop
outsb
add
xchg
popf
int
push
sbb
arpl
das
mov
jo
jnp
inc
pop
popa
adc
sub
inc
or
shll
push
ficompl
cmp
pop
or
int
loope
ljmp
into
cmp
stc
imul
xchg
jge
es
sub
or
push
loop
ret
push
xlat
pusha
hlt
sub
xchg
ss
sbb
mov
and
xchg
add
or
fwait
cld
aaa
mov
imul
jo
pop
inc
pushf
insl
insb
in
scas
in
push
test
cmp
in
repz
push
pusha
mov
adc
in
xchg
aam
push
sbb
dec
jg
jp
mov
sbbl
mov
sub
mov
cltd
add
popf
scas
pushf
arpl
dec
inc
add
inc
cmpsb
mov
push
jecxz
pop
lret
adc
in
fldenv
insb
mul
stos
insb
sub
pop
es
stos
enter
lcall
jmp
mov
mov
dec
mov
out
les
xor
cmp
xor
cmp
andb
push
mov
sahf
inc
push
sub
mov
push
add
stos
lea
enter
insb
add
sbb
movsl
adc
adc
popf
imulb
pusha
fadds
add
lcall
xchg
jge
loopne
adc
push
pop
in
fsubrs
xchg
popa
jns
ss
and
inc
cmc
push
outsl
push
mov
nop
pop
js
dec
push
fcmovbe
add
lret
mov
arpl
pusha
xchg
inc
jmp
stos
add
mov
in
push
enter
adc
fisubl
and
push
mov
ja
push
adc
divl
jbe
insl
add
add
in
je
dec
add
push
pop
sahf
mov
in
nop
cmp
loopne
adc
or
cmpsb
lods
shlb
push
add
rcrb
jnp
xor
test
mov
inc
lcall
mov
sub
cmp
aad
push
neg
cmp
subb
cs
dec
jge
sti
xchg
mov
pop
lds
fwait
push
mov
movsb
fs
fcmovnb
pop
cmp
stos
xor
testb
cmp
fs
mov
xchg
flds
lods
dec
mov
lods
jge
push
pop
lahf
push
lea
dec
xchg
sbb
jno
lret
idivl
hlt
out
decb
int
pop
jecxz
jecxz
adc
xchg
or
arpl
sub
jae
lahf
cmpsb
mov
arpl
inc
mov
outsb
ret
pop
adc
ljmp
mov
stos
xchg
and
lods
stc
dec
arpl
lods
popf
testb
mov
inc
lret
push
jns
mov
les
aad
cltd
and
dec
sbb
pop
dec
push
in
mov
insl
imull
xlat
xor
jge
sbb
out
pop
shl
int
cmpsl
mov
fwait
aam
jno
lock
and
sahf
rorl
insb
getsec
dec
repnz
xchg
js
add
mulb
ret
dec
xchg
pop
nop
mov
adc
jae
out
not
push
xchg
gs
sbb
add
mov
or
cmp
repz
mov
add
pop
sbb
mov
push
shrb
cli
addr16
push
shl
jne
outsb
repz
cmp
inc
sub
mov
dec
pop
pushl
lcall
push
mov
jmp
push
mov
add
add
fldcw
mov
jle
aad
repnz
jp
xchg
repnz
xchg
ja
mov
outsb
int3
xor
ret
mov
popa
jle
pop
jb
sti
mov
repz
mov
jae
push
pop
cs
add
sub
mov
xlat
mov
inc
fadd
lret
pop
out
aad
lret
mov
vpaddb
xor
mov
repz
pop
dec
fisttpl
jb
push
ljmp
test
mov
mov
inc
loop
ja
rorl
inc
xchg
mov
or
aad
xchg
daa
jae
lcall
fs
mov
fldcw
mov
stos
jo
popf
jo
adc
aaa
loope
mov
stos
in
sbb
add
cld
imul
stos
xchg
mov
daa
jb
shrl
add
push
push
in
cmp
stos
lret
mov
add
jno
mov
stos
inc
xlat
xchg
jmp
mov
jp
pop
inc
cmp
icebp
adcb
xchg
jg
je
cmpsl
mov
fisubrs
divl
push
pop
dec
mov
in
add
sti
jns
or
sbb
sahf
aas
jl
push
arpl
cld
test
mov
or
push
sub
sbb
fdivl
inc
stos
push
ss
pxor
ret
stos
fucom
dec
hlt
xor
cmp
and
xchg
loope
dec
fildl
sbb
hlt
decl
mov
xchg
test
lock
xchg
sub
pushf
out
in
in
stc
loopne
jmp
jp
ret
add
dec
sbb
je
fcmovnbe
inc
jne
jnp
jmp
out
or
mov
sbb
int3
lcall
enter
inc
je
cmp
call
test
leave
mov
mov
mov
cli
xor
xor
cmc
leave
add
shrb
jo
push
icebp
mov
insl
and
bound
jge
add
jp
cmp
rolb
hlt
jp
push
imul
inc
xor
xor
and
pop
pop
mov
add
jge
pop
cmp
mov
pop
adc
mov
mov
inc
int3
out
xor
xchg
test
in
enter
or
push
cltd
xchg
dec
sahf
xor
out
lods
sbb
jl
divb
xor
clc
lret
jmp
stc
insl
icebp
loopne
pop
shlb
cwtl
outsl
push
pop
fldenv
in
loope
sub
scas
fistl
fisubrl
xchg
inc
pop
and
or
in
or
rorb
popl
test
add
xor
xchg
loopne
pop
pusha
mov
fcmovnu
pop
dec
mov
inc
shll
mov
mov
es
fdivrs
cmc
push
sub
sbb
jo
inc
inc
pop
std
jl
loope
pop
push
hlt
pushw
mov
push
or
pop
jmp
mov
adc
sbb
mov
imul
push
std
mov
cmpsb
add
shll
in
and
les
add
pop
insb
pop
stc
ljmp
cli
and
test
dec
shrb
hlt
in
sub
adc
arpl
jmp
call
sub
inc
push
jno
jnp
dec
jno
adc
leave
jae
mov
xchg
add
mov
pop
jne
adc
xor
jns
test
js
dec
popa
rcr
in
sti
cmp
mov
fists
xchg
mov
pop
xchg
lock
xchg
xchg
pop
ret
mov
call
or
pop
pop
fcompl
imul
or
jae
ds
mov
into
or
pop
adc
fstpl
cmp
push
incb
outsb
dec
inc
xlat
pop
andb
jle
sub
mov
popf
int3
dec
lret
je
ss
jmp
mov
jmp
fdivr
incl
mov
push
test
outsb
or
jo
xchg
lods
mov
lret
mov
fstl
or
adc
pop
fcmovnu
neg
imulb
push
arpl
dec
insb
aam
mov
cmp
push
stos
lds
cmp
scas
mov
sbb
mov
or
xor
jo
lock
jae
cmp
int3
xor
inc
dec
xor
divb
jge
or
xchg
push
jae
hlt
push
dec
and
into
lret
xor
stos
adc
push
imul
test
push
out
aas
sbb
mov
es
enter
lods
pusha
jbe
arpl
repz
into
add
jae
xchg
js
rcrl
movsl
sub
je
loopne
mov
and
stc
call
push
int3
shll
jne
testl
mov
push
pushf
inc
aad
push
mov
jns
push
xor
lods
pushf
mov
add
cmp
bound
scas
dec
insl
popf
push
loopne
lret
fs
push
jno
iret
out
fdivs
pop
hlt
popf
adc
xchg
push
push
and
pop
cs
xor
mov
push
xor
inc
pushf
xor
mov
xor
mov
cmpsb
fwait
xchg
jmp
inc
cmp
sahf
cmp
mov
xor
fwait
insb
dec
aaa
pusha
mov
jmp
push
outsl
jbe
int
jg
lods
rolb
imul
rol
cmp
test
xchg
mov
movsl
mov
ja
incl
push
int3
jno
rcll
and
mov
push
test
out
add
pop
adc
subl
je
int
adcl
dec
and
push
add
adc
shl
jae
mov
stos
cltd
and
lods
pop
rorb
lret
adc
loop
dec
jnp
xor
cmp
push
roll
sbb
cltd
movsb
inc
pusha
cmp
lods
enter
addr16
mov
out
adc
sti
int3
jb
fiadds
loope
push
testl
adc
lcall
out
in
adc
jmp
adcl
inc
rcll
ffree
cmp
push
add
mov
mov
scas
xchg
es
xor
xor
pop
aad
ljmp
inc
shl
dec
stc
out
subl
add
insl
cmp
xor
lock
push
dec
mov
movb
xorl
pop
jecxz
or
sbb
inc
lret
sub
out
stc
or
aaa
sub
mov
fwait
call
aam
jb
adc
jb
stc
pop
mov
pusha
sbb
mov
js
add
fisttpll
sub
add
and
aas
test
fcmovne
int
out
adc
inc
jns
push
notl
out
movsb
push
mov
push
outsb
movsl
xchg
mov
pusha
cmp
test
les
loop
loope
mov
imul
dec
adc
xchg
lods
loope
out
aam
dec
int3
iret
cmp
mov
repnz
or
adc
or
fbld
dec
mov
push
pop
popf
jns
dec
mov
sahf
mov
mov
mov
dec
xlat
sub
in
jne
popf
insb
nop
mov
xchg
push
push
cmp
popa
add
jno
jns
fisubrs
movsl
push
dec
cwtl
gs
fnstenv
xor
mov
ror
stos
or
jge
aaa
imul
fwait
mov
fyl2x
mov
jg
js
repnz
in
xlat
sar
inc
xorb
inc
or
add
xor
sub
aam
lods
int
mov
jo,pn
push
mov
cmp
dec
xchg
inc
xchg
mov
mov
mov
sbbl
xor
iret
scas
clc
mov
cmpsl
sbb
xlat
push
aas
sub
movl
inc
xchg
pop
adc
mov
ljmp
mov
mov
jecxz
out
imul
outsb
bswap
mov
push
or
ret
xor
sbb
es
addr16
dec
xor
mov
pushf
shlb
jmp
arpl
jb
push
jno
ret
nop
mov
jecxz
xor
push
in
and
pop
stos
mov
sub
push
mov
iret
push
outsb
cmp
js
push
adc
and
scas
stc
gs
dec
pop
xor
or
xor
in
sbb
jbe
enter
je
stos
call
lods
sub
push
lret
ljmp
cmpsb
cmp
leave
imul
inc
cltd
ss
sub
dec
aas
and
cltd
add
xchg
std
xchg
push
xor
mov
mov
xor
cmp
and
sbb
stos
xchg
in
sub
pop
notb
xlat
xchg
hlt
aaa
inc
adc
inc
nop
xor
xor
fists
and
sub
or
cmp
mov
mov
or
jge
in
mov
cli
add
xor
addl
cmp
lahf
cmp
test
xor
outsb
dec
andps
imul
sbb
mov
push
test
and
ja
js
in
call
rcl
lret
lock
fsubs
jle
mov
dec
and
shl
pop
cmp
jmp
sti
xchg
push
test
push
mov
cmc
prefetch
pop
xor
dec
and
xor
inc
sub
and
adc
and
rolb
cli
adc
lods
xchg
push
int3
enter
jns
fwait
jae
xchg
sbb
inc
push
pushf
pop
iret
ljmp
fcmovne
mov
lock
enter
xchg
lods
arpl
int3
and
xor
lock
and
jl
cmp
jnp
out
outsl
repz
jne
mov
jnp
mov
mov
pop
sbb
lds
mov
test
jns
ljmp
movsl
lret
shll
add
jne
xorl
les
lcall
mov
sbb
neg
mov
repz
fiaddl
cmp
mov
iret
out
pop
sbb
sbb
imul
adc
jmp
aad
iret
and
ret
xor
and
sarb
test
or
jo
dec
push
mov
push
dec
in
cwtl
cmp
pop
xchg
sbb
testb
cmp
jns
stc
and
in
adc
jno
fsubl
inc
cli
ret
mov
adc
sub
cmp
adc
mov
sub
or
cwtl
stos
aad
das
outsb
jb
sbb
mov
pop
sti
in
in
jns
mov
mov
push
dec
mov
adc
pop
inc
xor
push
pop
jb
mul
into
mov
smsw
cmp
ss
fdivl
clc
js
shll
cwtl
push
cmp
mov
push
hlt
lahf
movsb
imull
scas
aad
and
lcall
mov
nop
mov
cmp
adc
and
aaa
shl
cmp
hlt
and
mov
test
push
ffreep
mov
shr
outsl
push
sbb
mov
sub
mov
pop
adc
or
push
push
push
pop
mov
sbb
loope
lods
mov
mov
idivb
lods
js
fnstenv
popf
movsb
dec
rorl
or
les
add
imul
dec
and
xor
fiadds
mulb
adc
mov
xchg
fcoms
flds
mov
dec
sbb
xchg
inc
mov
pop
or
lcall
scas
out
cmpb
add
jmp
hlt
mov
pop
lahf
hlt
ret
aad
mov
orb
xchg
pop
push
dec
pop
pop
mov
add
mov
enter
or
jl
dec
jne
lcall
adc
push
or
jo
inc
push
sub
gs
mov
inc
sub
jmp
cmp
xchg
loopne
inc
loop
leave
dec
mov
xor
push
out
rol
ss
lock
ljmp
outsb
popl
stos
pusha
sub
push
imul
shlb
and
and
cmc
xchg
pop
out
cltd
mulb
push
xchg
gs
cmp
sbb
fnstenv
je
push
daa
dec
stos
into
pop
in
xor
sub
dec
jecxz
push
jb
sbb
das
push
insl
jecxz
fcompl
fisubrs
dec
test
ret
fbstp
shld
xchg
xor
sub
add
mov
xor
sub
xchg
out
mov
pop
pop
lret
imul
ljmp
repnz
test
push
dec
test
mov
hlt
stc
je
cld
push
mov
ror
leave
cwtl
repz
andl
cmpsb
cmp
mov
inc
cmpsb
test
push
daa
mov
movsb
ret
leave
xor
sbb
daa
rcll
inc
movsb
jecxz
lret
insb
or
fadds
push
and
push
inc
sti
stos
stc
mov
cmp
pop
out
push
scas
sub
xor
clc
dec
icebp
push
les
pushf
mov
es
cmpsl
push
stos
xor
pusha
int3
inc
rorl
fnstenv
lea
jmp
pop
scas
and
cmp
pop
insb
shll
popa
or
loope
push
cmp
mov
push
cmp
fcmovnbe
movb
push
xor
fs
icebp
and
les
add
dec
ljmp
sarl
outsb
inc
pop
xor
sub
xchg
lret
aam
aam
jae
das
daa
ljmp
out
cmp
cmp
icebp
sub
aaa
pop
sub
jae
lret
icebp
sti
push
adc
in
popa
stos
pushf
jle
jns
lods
mov
add
adc
sub
push
mov
jecxz
loope
cmp
notb
in
push
rorl
sbb
and
flds
mov
mov
js
or
sbb
sub
cmp
mov
dec
lods
cmp
ss
lock
cmc
add
shlb
mov
add
mov
lds
cltd
push
xchg
inc
xor
sub
in
mov
mov
cmp
xor
ja
int
iret
dec
pop
das
mov
test
pop
mov
cwtl
mov
adc
add
ljmp
adc
and
jmp
push
xchg
xchg
xor
loopne
pop
mov
mov
sbb
pop
adc
inc
xchg
js
sbb
jne
pop
jne
dec
dec
insl
add
out
int
jp
insl
mov
ja
adc
xor
inc
and
adc
lcall
lahf
lret
push
test
jne
and
sub
add
xor
movsb
pop
scas
xchg
push
and
xchg
xchg
aas
mov
dec
cmp
and
adc
adc
int
pushf
and
rcr
scas
shlb
cwtl
das
mov
scas
sarl
lods
mov
lret
dec
jge
lret
inc
push
inc
shl
iret
gs
jo
dec
cwtl
dec
andb
mov
loopne
xchg
movsb
dec
pop
add
pop
fisttpll
pop
mov
sbb
insb
subl
cmp
cmc
loope
repz
jle
pusha
xchg
in
and
push
out
pushf
inc
repnz
leave
cmpl
pop
xor
stos
mov
mov
fwait
inc
test
test
js
or
rcrl
rorb
popf
mov
or
lods
and
push
cs
imul
sub
rcrl
inc
out
loopne
xorl
and
jb
aam
arpl
pusha
clc
xchg
pop
loop
and
dec
xor
adc
add
mov
adc
lock
mov
jmp
std
mov
jmp
imul
lods
testl
cltd
cmp
xchg
adcb
cmp
pusha
add
mov
pop
rcrl
in
cmp
mov
add
loope
popf
push
mov
nop
faddl
add
cli
test
push
mov
ljmp
add
lret
mov
loop
gs
push
sub
xor
bound
adc
test
inc
adc
fldenv
jnp
fisttpl
test
loope
aaa
dec
insb
xor
xor
jmp
mov
movl
pop
adcl
adc
lock
push
ja
xor
je
push
insl
mov
rolb
lods
repnz
sub
into
setae
jo
xchg
push
stos
sbb
enter
adc
call
xor
sub
scas
adc
xchg
sbb
jno
adc
aas
es
inc
incl
mov
xlat
mov
sbb
xor
pop
pop
in
ljmp
mov
js
es
mov
xchg
hlt
mov
push
aaa
jnp
pusha
into
cwtl
jle
lea
and
stos
cli
sub
cld
adc
ss
mov
push
xor
pop
fdecstp
pushf
movsl
out
inc
jp
shlb
sub
pop
jg
sbb
pushf
outsl
out
inc
and
scas
pop
imul
push
in
scas
aam
test
adc
inc
dec
cmpsl
sahf
sbb
test
xlat
jmp
mov
cmp
xchg
push
push
mov
cmp
mov
cmpsb
and
pop
sbb
decb
icebp
dec
aad
out
ss
lret
sub
mov
arpl
mov
push
mov
adcl
add
mov
cld
popa
jbe
out
or
jnp
push
cmp
and
xchg
dec
outsb
cmp
stos
sub
dec
or
add
jmp
rcl
sbb
mov
lods
push
mov
push
icebp
push
xchg
mov
inc
aam
fwait
push
data16
cmp
mov
aam
xchg
xchg
imul
into
movsl
test
mov
and
in
push
jmp
sti
jne
lcall
xchg
lock
adc
mov
leave
push
push
mov
pushf
call
fisttpll
mov
inc
xchg
sub
pop
subb
mov
scas
xchg
into
push
sbb
mov
rolb
cmp
int
ljmp
les
inc
or
jg
push
sar
xlat
pushf
adc
inc
xlat
sub
data16
mov
lahf
mov
mov
por
out
mov
lcall
sarb
xchg
loope
icebp
pushf
push
out
call
jbe
cmpb
pop
cmp
push
pusha
lret
adc
push
idivl
pop
push
sub
stc
int
or
inc
sbb
dec
jge
mov
jb
add
sub
push
loop
cmp
lds
jmp
orl
repz
lahf
push
and
xchg
push
push
or
sbb
imul
shrl
nop
aaa
dec
push
dec
xchg
pop
adc
dec
jb
std
pusha
sub
adc
test
shlb
sub
popf
sub
xchg
test
or
cmp
pop
outsb
add
pop
jbe
and
sbb
popf
lcall
add
mov
cmp
push
pop
inc
lods
jbe
xchg
pop
jg
or
adc
call
sbb
std
xchg
pop
mov
mov
int3
je
xor
mov
dec
xchg
sub
movsl
jecxz
mov
test
arpl
stc
xor
jno
push
es
adc
jle
adc
lods
in
daa
add
xor
adcl
arpl
sarl
fisttpl
mov
mov
xchg
ret
mov
jle
pop
stc
and
push
mov
push
in
outsb
leave
lea
ret
aaa
jmp
add
cmc
cmp
imul
orb
js
push
sbb
test
inc
mov
add
or
adc
loope
notb
pop
sub
mov
imul
mov
xchg
cmpsl
cld
jle
subb
pop
push
adc
or
out
jbe
mov
stos
dec
sbb
lds
and
dec
inc
aas
lock
pop
add
stos
push
test
jg
popf
and
not
sub
adc
jnp
xchg
ds
lcall
and
popa
sub
mov
jne
rol
sub
push
loop
imul
jl
mov
xor
cmp
jne
xchg
xor
xchg
ret
nop
int
rcr
repz
rolb
dec
shlb
fcomi
mov
not
mov
pusha
jg
lcallw
stos
sarl
and
inc
mov
or
mov
dec
jecxz
fucom
push
outsl
outsb
popf
push
iret
sub
fwait
jle
mov
jl
ss
pop
mov
mov
xchg
xchg
dec
fs
and
mov
xor
pusha
cli
mov
pop
cmp
iret
out
jno
sti
mov
in
dec
add
fisubl
sbb
jecxz
pop
cltd
mov
sbb
fwait
push
jp
fisubrl
int3
pop
xor
les
mov
insl
xchg
push
add
adc
mov
dec
push
or
jecxz
jg
cmpb
lods
cmp
rorb
clc
fldenv
mov
mov
sti
stos
dec
cli
mov
or
ror
xchg
out
cmc
cmpsl
nop
adc
scas
out
in
aad
mov
pop
inc
dec
mov
leave
jp
xor
shrl
sub
cs
out
mov
sub
inc
mov
and
ljmp
mov
fldl
inc
gs
cmp
push
or
orl
mov
lret
clc
and
mov
cmpsl
leave
fistpl
jl
adc
or
adcl
xor
test
repnz
stos
js
mov
cmp
fildll
pop
add
mov
addl
sahf
incb
xchg
das
sbb
sbb
lods
ret
sti
iret
mov
adc
sbb
lret
js
push
or
jl
sbb
xchg
mov
in
stc
jle
inc
mov
pushf
cmp
jp
lret
xor
xor
shlb
cltd
sbb
dec
add
push
gs
mov
outsl
and
mov
jl
sub
dec
add
testl
in
fs
and
roll
in
ljmp
jmp
cli
adc
pop
pop
mov
mov
xor
xlat
aam
test
mov
jl
jmp
movsl
sbb
mov
jb
sar
push
icebp
inc
ss
or
dec
and
insl
enter
push
xchg
loopne
jae
sti
aas
bound
cmp
or
jmp
fs
sbb
sbb
loope
sbb
nop
insb
push
out
out
icebp
fs
and
in
inc
add
aam
test
aaa
mov
inc
mov
push
push
inc
insl
inc
dec
cwtl
push
mov
nop
jo
sbbb
test
push
mov
out
popaw
in
inc
popa
in
push
pop
ror
mov
cmp
mov
sub
cli
outsl
repnz
addr16
cwtl
call
cld
mov
xor
sub
xchg
cmp
in
pop
test
popl
push
ja
icebp
loope
push
or
jmp
lea
mov
mov
and
fsts
add
stos
pop
push
inc
cld
mov
jae
jl
mov
jae
rclb
sub
test
push
shrl
push
imul
repz
outsl
test
jne
add
nop
sub
cld
subb
xchg
insb
xor
xchg
inc
inc
arpl
xchg
es
fisubs
mov
push
mov
loopne
ja
adc
or
cmp
arpl
mov
mov
adc
je
mov
push
orl
adc
aam
stos
xchg
fisttpll
fidivrl
incb
cld
setge
xor
hlt
or
aaa
lods
mov
inc
mov
sbb
in
pusha
pop
cmpsb
push
movntq
lds
roll
mov
dec
or
in
test
fisttps
das
jge
clc
js
mov
cmpsb
or
sub
cmp
dec
sub
and
imull
mov
lret
addl
cmp
clc
aam
sbb
mov
and
sub
pop
sar
jmp
mov
cmp
jp
cmc
jp
inc
mov
push
jnp
cmpsb
mov
call
adc
scas
in
and
negl
jo
jle
add
js
in
push
sbb
inc
cmp
ret
push
andl
shlb
inc
mov
ret
sbb
popa
or
sbb
test
rorl
pop
sub
mov
inc
fsub
scas
clc
mov
fimuls
fs
clc
jg
dec
cmpsb
xchg
mov
mov
loope
cmpsl
scas
adc
inc
adc
mov
aaa
in
arpl
push
mov
shll
pop
inc
sahf
enter
push
adc
add
ja
fnsave
mov
add
mov
dec
pop
aad
dec
imul
xchg
shl
xchg
sti
push
cltd
test
inc
insb
test
mov
mov
pop
push
insl
stc
in
dec
fs
mov
repnz
ret
mov
loopne
cltd
jno
es
inc
out
adc
push
mov
or
pop
lock
lods
adc
lea
jb
repz
test
jg
test
repz
iret
roll
xor
fimull
mov
or
shrl
rcl
pop
or
andl
and
push
xlat
loope
inc
lds
sub
pop
pop
sti
mov
jmp
and
ret
notb
sub
sbb
aas
lret
repz
sub
xchg
dec
andb
scas
ret
stos
insb
fidivrl
pop
repnz
cmpsb
fwait
xchg
lret
or
lock
and
push
ljmp
xchg
fs
cmp
scas
pop
shll
in
cs
repnz
mov
je
dec
loopne
gs
movsl
mov
testl
in
negl
lret
repz
ja
test
ret
add
cltd
ret
push
mov
cli
jb
mov
lods
xchg
dec
repnz
sbb
jg
push
movsl
fucomp
mov
sub
andb
scas
ficoms
mov
popa
mov
js
push
sub
xchg
cmp
jmp
mov
lcall
dec
push
repnz
push
mov
outsb
cmp
inc
inc
fidivrs
cmp
mov
clc
fisttpl
cmp
push
es
icebp
inc
dec
int
ljmp
pop
in
pop
je
sbb
mov
pusha
insl
fistl
mov
xor
inc
and
js
xor
inc
stos
mov
push
call
mov
cmp
mov
jbe
fwait
adc
rcrb
inc
hlt
and
inc
adc
movsb
xchg
cmp
push
bound
add
sub
imul
or
pop
into
cmp
stos
add
sahf
ja
jle
add
sti
sti
and
mov
movsl
fildl
mov
xchg
sub
fmul
and
adc
xor
std
ja
jl
jnp
insl
or
xlat
push
int
subb
test
jg
or
clc
or
and
cli
sub
rol
jo
aad
out
fcomps
dec
cmp
test
icebp
inc
lret
push
lods
mov
adc
into
jmp
pop
inc
faddp
lret
fcmovbe
dec
pop
rcl
sbb
dec
dec
lods
std
cmp
xlat
cmp
or
hlt
push
push
sub
pop
aam
xor
add
or
xchg
in
pop
push
jne
dec
loopne
push
and
adc
push
xor
aad
in
xlat
adc
push
jae
ficomps
adc
cmp
out
fstpl
adc
mov
sbb
sub
jmp
les
pushf
mov
popa
xchg
loopne
mov
aas
outsl
ja
jl
std
outsb
add
and
je
add
ror
mov
push
insl
decb
cld
icebp
lea
jecxz
leave
popf
pop
mov
shr
arpl
sarl
stos
pop
pop
scas
mov
ror
es
mov
or
fstpl
sbb
sbb
or
shlb
or
pop
repnz
icebp
lock
es
mov
mov
xor
mov
pusha
push
cmp
push
es
hlt
lods
and
rcrl
or
or
mov
cmc
push
sub
out
bound
xchg
jecxz
mov
scas
adc
or
neg
js
popf
fwait
push
jb
fs
mov
inc
adc
sahf
cmp
test
sarl
in
arpl
pop
stc
mov
pusha
or
jge
sarl
jae
adc
mov
lods
push
and
mov
xchg
cmp
jmp
sbb
cmp
inc
mov
rcrl
jp
in
js
repnz
pop
push
cmpsl
and
imul
sbb
pusha
sub
sub
or
dec
lret
incb
push
jnp
mov
or
jo
xchg
imul
std
sahf
or
pop
push
out
icebp
out
mov
repnz
add
sbb
adc
xchg
adc
or
add
push
test
call
jge
ljmp
lahf
push
push
fimuls
mov
xchg
es
push
push
dec
repz
mov
xchg
pop
xchg
aam
dec
mov
ljmp
inc
scas
repnz
cwtl
dec
leave
dec
add
lods
dec
jecxz
push
popf
push
and
lds
xchg
or
popa
push
pop
imul
es
push
jno
fcomp
inc
pop
jge
shrl
add
jns
sahf
push
fs
pop
out
das
adc
mov
out
mov
and
mov
dec
xchg
js,pt
mov
cmp
mov
movsb
nop
popaw
jne
fwait
inc
nop
mov
dec
jmp
test
mov
sti
and
cmp
pop
push
jp
cmp
cmp
pop
out
out
addb
jns
punpckhwd
mov
test
iret
push
in
jne
popa
imul
fistpll
mov
mov
or
sub
cmpsb
lahf
mov
sub
or
mov
mov
cmc
and
add
sahf
fwait
pop
xchg
cmp
or
repz
xchg
leave
repnz
push
outsb
jmp
sahf
enter
aaa
mov
nopl
add
add
jb
or
repnz
adc
mov
or
cmp
dec
pop
add
enter
or
ja
adc
jns
repnz
scas
pop
mov
or
dec
out
or
je
cs
jbe
mov
jecxz
mov
push
in
inc
dec
push
dec
and
mov
dec
jge
pop
pop
in
rolb
rcrl
jp
pop
mov
and
insb
mov
std
decl
cmpsb
mov
pop
shr
mov
mov
dec
faddl
mov
add
cld
push
push
loope
call
shlb
and
add
out
cmpsb
pop
jo
or
popa
dec
sub
fsubs
cmpsl
and
sub
lods
lcall
adc
add
sub
push
nop
popa
push
bound
data16
push
popf
das
lret
mov
jb
jae
push
pop
ss
out
mov
inc
xchg
sar
repnz
xchg
ffree
xor
popa
sbb
sbb
adc
not
adc
mov
fidivrs
jnp
cmp
pop
adc
mov
or
repz
jmp
arpl
cld
pop
inc
sub
sub
fmuls
sbb
sub
push
jmp
pop
loope
cmp
and
add
jecxz
sub
daa
inc
in
and
and
gs
es
fs
mov
call
cmp
hlt
sub
jg
out
fdivrp
add
cmp
pop
xchg
ja
xor
or
cmpb
pop
lret
out
fistps
ss
inc
cmp
sub
push
adc
dec
test
fnstcw
mov
dec
stos
cmp
shll
add
ret
ss
add
pop
imul
bsf
jns
ja
dec
mov
fwait
lods
js
aaa
test
sti
cmpl
popf
push
lret
in
mov
es
idivl
mull
and
xor
fdivl
adc
das
mov
jecxz
mov
or
push
dec
and
jge
in
jp
popl
jg
sub
out
add
fcompp
jge
repnz
xchg
mull
dec
pop
aaa
push
lahf
pop
iret
or
popf
mov
aam
xor
ljmp
pop
mov
arpl
xchg
data16
out
jmp
iret
push
pop
cmp
xorl
insl
aam
jge
mulb
jecxz
enter
mov
mov
mov
mov
and
mov
jle
shlb
mov
mov
or
and
push
pop
xor
arpl
pop
lock
cwtl
test
movsb
in
cmp
or
dec
aas
add
push
lret
sbb
cmc
push
push
pop
xchg
loopne
fndisi(8087
add
xor
lahf
fnstenv
lods
dec
adc
cltd
push
cwtl
dec
fdivs
test
sub
les
and
adc
pusha
insl
mov
push
pushf
mov
frstor
lea
imul
cmp
mov
pop
pop
jmp
imul
cs
test
xchg
ret
pop
xlat
lds
push
xor
pop
xor
mov
mov
mov
xor
cmp
mov
sbb
rcl
xorl
in
shll
inc
outsl
movsl
ja
mov
and
jge
pusha
dec
mov
push
int3
data16
clc
adc
shll
loop
adc
outsl
jp
xor
and
or
mov
popf
xchg
and
fnstcw
outsb
fisubrs
aaa
xor
mov
add
mov
mov
mov
lcall
int
pop
in
sbb
les
and
mov
ljmp
cmp
mov
sbb
cli
ret
mov
insb
loop
adc
insl
inc
mov
rorb
and
xchg
ret
pusha
sbb
ja
loope
test
xor
cmpsb
xor
lods
mov
adc
lds
lret
sub
jecxz,pn
dec
jecxz
xor
sub
xchg
cs
push
shll
fisubrs
inc
pusha
sub
scas
sub
lret
xchg
daa
xor
addb
mov
mov
test
xor
scas
mov
pop
or
repnz
nop
outsb
fcos
in
or
mov
cmp
imul
int
jbe
cli
xchg
jae
push
or
insb
cmp
call
out
pop
or
cmp
or
pop
push
dec
fimuls
and
clc
push
sbb
mov
sub
out
into
push
enter
mov
imul
dec
sub
cmpsl
or
leave
mov
fs
iret
cmp
fstl
fsubrl
mov
fnstcw
pop
cmpsl
pop
cmp
out
sbb
or
pop
dec
sbb
cs
int3
aam
cmp
fildl
incl
mov
sbb
mov
mov
xor
mov
jg
popa
rolb
std
fistpll
inc
inc
leave
and
sub
sar
and
cs
add
bound
mov
inc
adc
popf
aas
mov
nop
jns
dec
dec
fsubrs
das
ret
das
fldl2e
insb
cltd
sub
xchg
xchg
sti
in
add
imul
inc
cmp
jle
add
mov
lods
sti
xor
jmp
mov
add
stos
in
gs
mov
dec
pop
leave
data16
mov
pop
mov
cmp
or
cli
xchg
mov
out
lahf
les
jnp
adc
inc
aad
jecxz
incb
int
jae
cli
dec
pusha
rorl
pop
ret
mov
cmp
sbb
push
pop
call
push
mov
and
icebp
dec
xchg
lret
add
repz
ret
jle
movsb
jno
bound
inc
imul
cs
add
ja
mov
xor
stos
cwtl
test
jmp
mov
mov
into
mov
inc
jbe
xchg
inc
mov
filds
mov
pop
push
push
sbb
shll
xor
pop
js
sub
ja
jb
inc
leave
sub
push
scas
orb
push
inc
push
push
shl
adc
push
sub
call
or
add
in
loope
in
outsb
stos
sub
pop
mov
mov
pop
dec
add
sub
dec
and
cwtl
sbb
fcoms
push
and
mov
pop
push
mov
mov
addr16
std
pop
add
subb
xchg
cld
fsubl
aam
or
push
xchg
xor
cmp
adc
mov
xor
aam
stos
mov
outsl
cwtl
popa
xchg
pop
mov
jl
xchg
fistpl
mov
add
xchg
fwait
adc
jg
rclb
mov
push
fbstp
dec
cmp
shrb
divb
popa
ja
pop
lret
cmp
ret
mov
loope
inc
pop
pop
pusha
pusha
cmp
enter
jg
pop
shll
stos
mov
fbld
out
sbb
ds
nop
xchg
mov
clc
mov
xchg
and
or
leave
test
mov
cmc
scas
xchg
jne
loopne
out
push
sbb
inc
add
push
int
fists
mov
cmpsl
sbb
outsb
jae
fs
push
popa
and
and
jns
inc
push
jl
fcoms
orl
xor
outsl
push
sub
in
cwtl
inc
movsb
sbb
and
mov
inc
pushf
cltd
stos
pop
cmp
ja
and
push
xchg
mov
pushf
mov
jbe
aad
pushf
mov
cltd
push
xor
aad
xlat
mov
dec
in
pop
jg
mov
xchg
push
lock
aad
aad
adc
add
jmp
sub
inc
xor
call
test
mov
in
cmp
hlt
add
mov
arpl
push
push
sbb
or
subl
pop
outsl
mov
cmc
imul
loop
popf
jecxz
cli
loopne
push
cwtl
mov
mov
xchg
into
xor
popf
jne
pop
sbb
dec
lcall
ud0
dec
addr16
nop
push
aad
rclb
mov
and
mov
fnsave
pop
jecxz
cmpl
sbb
cmpsb
repz
out
jne
rclb
cld
xchg
xchg
add
pop
dec
push
sub
mov
jecxz,pn
divb
in
mov
jge
bound
int3
mov
mov
cwtl
pop
aad
icebp
cmc
push
or
push
adc
xchg
adc
inc
mov
cmp
jle
leave
push
lcall
sar
sub
sbb
cmp
data16
and
mov
fwait
popf
aam
dec
nop
add
sarb
sub
xor
dec
gs
test
push
dec
mov
cmp
cmp
cwtl
cltd
in
ds
das
call
push
outsb
push
jp
movsb
xor
pop
aam
sbb
int3
cltd
and
int3
jae
mov
mov
pop
mov
jnp
imull
lock
aas
faddp
push
aam
shlb
movl
mov
or
lock
push
fwait
inc
or
insl
pop
into
jle
fisttpll
add
mov
mov
and
ror
into
repz
ds
cmp
test
pop
or
sbb
fbld
test
fs
inc
shr
stc
aad
mov
xchg
es
aam
aaa
aad
lea
inc
cmp
push
mov
fisubs
or
das
in
out
push
jmp
xchg
jp
out
stos
cmp
sbb
test
adc
sub
xchg
adc
imul
jecxz
cli
addl
aas
shll
push
mov
repnz
xchg
adc
lock
pop
faddl
jbe
xor
leave
js
mov
icebp
dec
sub
dec
test
in
popa
ds
and
push
stc
mov
inc
in
mov
dec
ljmp
insb
addr16
sbb
push
push
jl
daa
cmp
jns
in
loope
xor
icebp
jge
pushf
xchg
or
sub
lds
inc
jmp
adc
cmc
push
mov
mov
mov
in
repz
inc
arpl
sub
sub
push
cmpl
adc
xor
dec
loopne
fs
inc
add
lods
leave
cmpsl
repz
mov
jnp
out
push
lds
jle
sbb
fwait
ja
mov
inc
sti
or
jp
push
mov
cmc
jbe
adc
mov
or
sbb
out
lahf
loopne
icebp
pushf
test
test
imul
clc
xchg
mov
inc
sub
adc
clc
inc
in
lods
cmp
pop
pop
scas
push
aam
insl
movsb
xor
popa
cmp
xor
pop
rcl
les
or
insl
xor
pop
sub
mov
xchg
jmp
jmp
sbb
xchg
cld
mov
adc
out
test
xor
jle
mov
pusha
xor
sub
add
sub
mov
cmpsl
lea
push
mov
test
jmp
fisttpll
and
lcall
xchg
and
push
fildll
or
test
ljmp
leave
fsubrs
imul
in
pop
mov
out
xchg
outsb
cmpsl
mov
cmp
daa
dec
scas
rorl
add
inc
xlat
sub
xchg
add
ljmp
movsl
ljmp
popa
cmpsb
pop
aad
xor
int3
imul
dec
push
cmp
jge
dec
nop
dec
xchg
shrb
xor
pop
sbb
mov
out
int
sub
or
xor
dec
cmp
mov
sbb
mov
popa
cmp
and
push
pop
xor
xchg
jb
push
sub
xchg
scas
loopne
cwtl
lcall
pop
mov
ljmp
adc
jecxz
imul
push
daa
xchg
and
adc
sub
dec
or
and
push
sarb
scas
and
clc
and
and
mov
mov
sbb
push
jp
adc
mov
repnz
xchg
hlt
insb
scas
push
mov
out
pop
push
push
mov
andb
outsb
fsubs
add
mov
pushf
jae
in
and
inc
pop
pop
int3
ljmp
nop
scas
inc
cmpsb
loopne
outsb
inc
fnstcw
cltd
sahf
mov
dec
and
sbb
cmpsb
loopne
subb
inc
push
jge
loopne
or
sub
inc
push
arpl
add
leave
dec
xchg
push
cwtl
arpl
inc
inc
leave
movsw
dec
cmp
or
or
lahf
in
jle
daa
jae,pt
push
movsb
mov
rdtsc
ror
bound
pop
sub
or
dec
les
cmc
jnp
nop
add
or
sub
xchg
les
adc
daa
negb
dec
dec
decb
xchg
movsb
mov
sbb
or
add
clc
sti
xchg
xchg
int3
ja
sahf
xlat
cld
out
addr16
pop
or
pop
ret
cmp
je
xor
mov
adc
mov
mov
icebp
mov
adc
and
adc
push
stos
push
lcall
stc
xchg
and
lea
pop
cmp
cmpsb
and
pop
lret
push
and
arpl
pop
jecxz
add
rcrb
pop
lods
pop
and
mov
xor
jp
pushf
negb
ljmp
mov
push
inc
adc
ficompl
push
jo
pop
out
cltd
mov
mov
test
and
sub
insb
cld
or
mulb
inc
ljmp
mov
cmc
jbe
xor
repz
fisttps
in
xor
stos
test
xchg
jle
lahf
and
addr16
sub
inc
jo
mov
pushf
inc
mov
push
jo
std
add
mov
clc
mov
sbb
or
cmp
mov
adcl
cwtl
sahf
outsl
xchg
and
stc
subl
out
pop
pop
ljmp
sbb
aaa
add
repz
lcall
xchg
jbe
push
in
add
push
pop
or
and
mov
mov
pop
inc
movsb
sbb
popf
nop
arpl
cmp
xchg
pop
pusha
in
lret
popa
mov
mov
and
fwait
pop
mov
fisubs
fstpl
cld
mov
jno
mov
sbb
fiaddl
xchg
outsb
aad
mov
test
dec
test
mov
xor
pushf
iret
adc
jg
mov
cwtl
cwtl
jo
lret
dec
lret
ds
jo
mov
daa
sahf
rcll
repnz
adc
fcmovne
mov
jp
mov
sbb
cli
mov
jno
xor
sahf
bound
or
daa
push
mov
aas
sub
call
cmovae
or
lret
mov
pop
cmp
and
stos
pop
xor
outsl
xchg
ljmp
rcrl
inc
int3
adc
pushf
seto
scas
dec
lahf
sub
add
test
dec
pop
fisubrl
loop
mov
push
pop
paddq
push
aaa
jne
inc
inc
rorl
rcrl
or
xor
cmc
mov
ja
jno,pt
ljmp
int
inc
sub
test
or
lds
push
or
push
je
cli
push
or
push
mov
aas
mov
and
push
insb
insb
sbb
cmc
loop
rcr
lret
std
mov
insl
into
sldt
ja
jg
in
dec
sbb
sub
mov
or
ljmp
mulb
xor
cld
into
in
pusha
mov
sahf
mov
and
dec
pop
movsb
xchg
lds
lret
cmpsb
adc
xchg
adc
add
dec
jg
mov
push
imul
mov
cwtl
inc
inc
call
or
inc
inc
scas
sbbl
mov
xchg
addr16
aad
iret
cmp
mov
imul
cmp
pop
xchg
stos
dec
sub
into
and
jmp
movl
adc
fildll
jnp
ds
cmp
call
adc
popa
aam
adc
jb
adc
fstpl
mov
ja
lahf
mov
cmovnp
xor
mov
jnp
adc
test
out
xor
repnz
inc
add
test
mov
lret
mov
or
mov
adc
cs
mov
or
pushf
addl
ffree
lcall
mov
int3
jl
scas
into
xor
lret
movsw
loop
imul
mov
xor
xchg
add
mov
aaa
xchg
dec
dec
xlat
clc
les
sbb
or
std
fimull
cld
xor
sub
fldenv
imul
lahf
in
in
es
loope
xor
mov
data16
das
jp
mov
ret
xchg
test
pusha
pop
cmp
leave
xor
lcall
in
dec
and
lret
pop
leave
cmp
dec
adc
cmpsb
leave
ja
mov
xchg
scas
or
push
mov
inc
enter
adc
mov
xlat
lods
xchg
arpl
xchg
xlat
or
out
dec
or
test
in
xor
ret
xlat
lds
ret
jecxz
aaa
lods
sbb
shll
stc
push
sub
cwtl
test
mov
adc
mov
cld
mov
testb
mov
testb
mov
cmp
inc
dec
icebp
scas
bound
xchg
sbb
xchg
aam
ja
and
in
popf
jp
xchg
mov
sub
das
adc
inc
cmp
enter
pop
ret
out
sbb
cwtl
add
or
or
lret
shrb
iret
jl
xor
cmp
mov
movsb
inc
cmp
fcomip
aad
mov
movsl
int3
inc
adc
dec
shlb
sar
pop
insl
outsl
out
out
insl
int
int3
mull
xor
test
mov
mov
inc
movl
arpl
xlat
cmpsb
popa
dec
les
and
idiv
dec
mov
data16
cld
push
mov
nop
stc
int3
sbb
repnz
testb
mov
into
jecxz
sbb
sbb
test
pusha
push
cld
and
ret
lret
xchg
pusha
sbb
repnz
fistpl
and
loopne
push
xchg
dec
add
imul
xchg
or
fs
and
pop
sarb
les
mov
sub
inc
jnp
mov
push
in
mov
jl
orl
xchg
sbb
cltd
clc
fildl
mov
fs
pop
mov
jne
iret
mov
scas
ds
mov
mov
adc
scas
pop
sub
xor
pop
sbb
mov
int3
push
test
xchg
mov
sbb
aam
pop
test
mov
xchg
xor
sub
popf
cmc
pop
mov
jmp
pop
js
sub
fdivrs
les
cmp
ficompl
mov
jmp
stc
lods
cmp
sub
icebp
popa
xchg
dec
sub
fsubrl
dec
or
daa
and
stc
inc
pop
iret
dec
sub
fsubrs
movsl
mov
jbe
mov
jg
adc
pop
inc
inc
cmc
push
mov
mov
int3
sbb
pushf
shrb
repz
shlb
add
jbe
loopne
mov
mov
inc
aad
xchg
fistpll
movsb
pop
scas
int3
jecxz
pop
push
icebp
and
stos
and
stos
lahf
lds
das
push
repnz
jne
mov
shll
dec
aam
sti
repz
jne
xchg
rol
call
insl
pop
das
fists
cmpsl
jg
jne
addr16
test
dec
mov
dec
jbe
movsb
pop
push
jl
mov
stos
lds
stc
cmp
cmp
push
stos
xor
and
push
push
sub
cmc
loope
sbb
xor
fmul
xchg
jmp
ljmp
pop
inc
xor
iret
xchg
and
push
mov
cmc
jg
data16
fldt
lds
inc
dec
bound
fwait
add
push
lock
pop
xor
or
or
out
nop
jmp
push
cmpsb
je
imul
popa
and
ret
mov
dec
xorb
xor
push
bound
push
and
insb
cltd
mov
adc
and
and
mov
cli
jne
out
cmpsl
sbb
cmpsb
push
push
imul
sub
hlt
popf
fstpt
pop
iret
cltd
adc
adc
inc
cmp
mov
arpl
sti
scas
jnp
imul
sub
add
call
xor
dec
sub
sbb
add
clc
sub
mul
testb
jae
pusha
ja
arpl
jmp
mov
repz
mov
add
and
pop
movsl
sti
test
gs
mov
jg
lods
mov
push
ja
add
adc
in
mov
in
test
in
cmp
cld
and
dec
cmp
les
shl
dec
int3
fdivrs
mov
sbb
and
fwait
dec
jl
pop
fiadds
loop
lahf
in
sub
dec
arpl
mov
or
or
jno
lret
ja
mov
mov
mov
rcrb
sbb
inc
sub
test
cmp
or
inc
push
test
jns
mov
push
sub
add
adc
mov
xchg
pop
mov
outsb
sub
push
and
dec
in
mov
mov
je
pop
mov
movsb
lret
adc
inc
dec
push
movb
add
fstl
dec
xchg
ss
and
clc
pop
jmp
ja
cmp
popf
in
dec
cli
inc
xchg
cwtl
and
repnz
cmpsb
xor
lcall
in
cmpsb
orl
arpl
shlb
mov
cmp
loop
aaa
leave
ret
xor
loope
pop
and
ficomps
js
hlt
xor
imul
stos
inc
imul
lea
push
adc
pop
clc
std
inc
int3
les
sbb
xorb
jecxz
shl
push
mov
mov
fiaddl
loop
sub
push
jne
add
push
stos
pushl
das
jbe
pop
and
arpl
ds
test
fucom
xor
or
sbb
incb
pop
or
jns
sbb
test
or
sub
pop
mov
push
in
jae
adc
mov
inc
pop
pop
filds
jae
mov
and
lods
test
dec
jge
clc
call
test
movsb
jmp
das
daa
in
arpl
cmc
out
sub
xchg
jecxz
inc
lock
xchg
push
in
daa
xchg
or
call
dec
fiaddl
movsb
pop
in
mov
cmp
mov
jmp
mov
sub
fnstcw
dec
fdiv
jo
push
inc
fabs
mov
movsb
xchg
fisubs
mov
mov
call
rcrl
cmp
mov
pop
in
jns
and
aas
xor
incl
xlat
mov
xchg
flds
cwtl
jg
mov
repnz
xchg
bound
or
cmp
cmpsl
mov
cmp
repz
adc
sti
mov
btc
add
sub
fdiv
std
xchg
fwait
and
and
fucomi
pop
mov
es
repnz
adc
mov
cmp
mov
and
aam
mov
xchg
mov
popf
dec
call
mov
into
xchg
les
and
push
scas
iret
jg
movb
jmp
push
loopne
bound
mov
lcall
mov
inc
xchg
loop
pop
out
add
jns
out
mov
cs
jbe
push
xlat
scas
and
sbb
movq
jge
adc
pop
xor
int3
test
mov
test
pop
fcompl
je
sarb
jle
inc
adc
fstpt
js
push
je
psubsb
dec
sbb
sahf
adc
outsl
decl
jo
mov
repnz
push
and
lret
scas
xor
inc
iret
jmp
in
inc
fildl
enter
rcrl
adc
les
adc
int
mov
add
es
mov
inc
ljmp
xchg
repz
int3
subl
lods
mov
cmp
les
cli
jo
ficoms
mov
pusha
movsl
xchg
push
sbb
aad
dec
ret
jp
adc
jae
xchg
cmp
push
mov
and
pusha
mull
outsl
mov
push
or
lcall
jns
aam
push
in
mov
sbb
enter
test
push
jnp
daa
adcb
inc
jl
out
pop
sbb
test
xchg
call
pop
lret
adc
sub
ret
pop
mov
in
fs
xchg
push
push
mov
xor
mov
cmp
inc
nop
fisubl
mov
or
cli
xchg
mov
xor
cli
add
adcb
bnd
int3
popf
ja
mov
sub
cld
add
add
lcall
out
mov
outsl
dec
sub
jl
pop
push
loop
jmp
add
jmp
cli
add
and
add
enter
fs
xor
xor
xchg
cmp
xorb
insl
cmp
fisttpll
lret
add
add
call
jb
adc
je
hlt
popa
sub
outsb
imul
sbb
test
ja
cmp
ljmp
cmp
sub
mov
outsb
inc
test
pop
andb
push
std
ja
aas
lods
movsb
lds
nop
aad
push
test
xor
ja,pt
push
sbb
insl
ds
leave
stos
sti
and
inc
xchg
aam
and
movsl
pop
fsub
cmc
pop
fisttps
mov
and
adc
lock
in
sbb
popl
jecxz
and
push
inc
rorl
mov
fisubrl
push
xchg
fwait
cmp
ljmp
mov
sbb
mov
xchg
rorb
push
pop
ds
jns
movsl
clc
sbb
fcoms
in
fstpt
mov
dec
stc
xchg
push
and
stos
cmp
mov
int3
jmp
dec
inc
ds
inc
jg
inc
test
int3
add
fmuls
xchg
mov
push
dec
lcall
mov
push
jbe
rol
adc
fists
daa
lods
inc
rcrb
jns
ds
xor
xor
nop
jl
imul
in
neg
test
imul
xchg
mov
rcrb
add
jbe
jl
or
lods
inc
daa
mov
pop
inc
push
add
pop
imul
and
inc
in
mov
xlat
in
cmp
gs
mov
popf
roll
les
shll
jne
add
cli
cld
mov
inc
in
ficoms
mov
or
loop
cld
push
sub
aad
leave
adc
ret
ds
xor
out
push
push
data16
lret
pop
jno
xchg
or
push
out
xor
jb
xchg
stos
lcall
sbb
mov
xchg
int3
aas
dec
or
cld
in
stos
jns
mov
pop
dec
xor
test
adc
stos
loopne
push
mov
jae
sbb
mov
lret
orl
test
mov
inc
mov
adc
ds
mul
mov
pop
dec
add
xchg
mov
mov
in
xor
jp
aas
lret
pop
stc
sbb
cltd
jge
inc
jmp
loopw
loope
mov
leave
mov
jae
cmp
xchg
lret
push
mov
dec
prefetch
push
int
repnz
scas
push
ja
xor
int3
lods
cmp
popf
dec
addb
jnp
out
mov
out
scas
push
imul
shrl
cmpsb
mov
icebp
add
push
lods
int
test
leave
test
push
xchg
mov
mov
pop
push
pop
sbb
xchg
test
lcall
jae
xchg
xchg
sbb
ss
add
pop
ss
sub
inc
cld
out
fsubs
pop
stc
push
mov
mov
sub
nop
inc
aam
sbb
push
inc
popf
dec
ficompl
mov
dec
dec
out
mov
adc
jl
scas
push
int
cmp
int3
pop
outsb
push
out
pop
jg
lds
cwtl
push
sbb
jp
push
and
sbb
fstps
repnz
sub
dec
scas
int3
loop
inc
out
les
pop
in
in
cmpb
aam
jp
sbb
dec
jp
xchg
aam
jl
or
iret
push
int3
icebp
xor
mov
xor
xchg
mov
push
jmp
out
ja
mov
mov
call
das
fstl
xchg
sti
out
dec
pop
les
and
movsl
jne
aaa
mov
mov
cmp
insb
push
push
xor
fsubrl
sub
sbb
outsb
dec
push
insl
in
jecxz
enter
es
cli
sbb
imul
xor
ds
jmp
adc
cli
roll
sub
lcall
jns
hlt
out
ret
aas
inc
dec
dec
ret
push
fsubrp
nop
sub
sarl
pop
pop
jl
sarb
push
jns,pt
fstpl
jb
imul
push
pop
dec
xchg
int
dec
inc
mov
aad
ficoms
test
cmp
popa
pop
or
xchg
push
mov
mov
loop
ficoml
inc
enter
pushf
mov
adc
adc
cmpb
repz
add
xor
shll
sahf
sbb
lea
mov
das
les
fists
cld
mov
cmp
hlt
sub
test
mov
xchg
dec
repz
arpl
pop
sti
scas
es
sbbl
jb
inc
push
and
dec
mov
ds
jne
add
loope
das
and
ja
aad
cmpsb
adc
movsl
jb
jb
xchg
mov
jno
out
sub
jb
mov
cltd
test
inc
int3
cmp
or
pop
sub
cs
add
addr16
mov
mov
out
movsb
stos
js
mov
mov
lods
jo
mov
cmc
push
popa
dec
sbb
dec
pop
push
dec
inc
xlat
xor
in
aaa
dec
and
shll
jmp
cmpl
sub
dec
xchg
mov
daa
dec
fmuls
adc
rolb
add
or
jne
inc
xchg
inc
or
add
sub
cmpl
cmp
cmpsl
adc
sub
out
jl
aam
aam
in
push
lret
stos
stc
mov
cwtl
addl
push
xor
std
mov
jecxz
mov
out
sub
cmpsb
das
lahf
movsl
in
push
xchg
std
dec
push
call
sbb
sbb
outsl
mov
cs
push
loop
sbb
stc
cmpsl
shll
inc
push
dec
xchg
add
jge
jnp
outsl
ret
outsb
mov
adc
out
sbb
sarl
loopne
fidivrl
jb
insl
fs
ret
ds
cmc
xchg
ror
bound
ffreep
lidtl
fdecstp
cltd
arpl
sahf
mov
rorl
add
aad
lea
fildl
mov
and
lcall
sub
dec
inc
loop
jbe
xor
shl
out
call
aaa
push
mov
popa
in
int3
adc
jb
dec
nop
jo
sbbb
es
sahf
adc
imul
cmp
pop
adc
or
sub
pop
xchg
xor
cmpsb
adc
imul
movsb
jb
cmpsl
pusha
dec
inc
inc
into
push
fbld
sbb
xchg
jp
aad
push
jg
xor
scas
cltd
push
repz
and
inc
push
addr16
stos
or
mov
add
adc
jmp
outsb
mov
adc
arpl
mov
mov
shl
mov
pop
push
fdivrl
or
mov
push
lea
jg
mov
ljmp
jns
inc
sub
sub
enter
xchg
cmova
mov
add
popa
nop
mov
xor
mov
inc
jg
and
push
mov
push
pop
lret
std
push
icebp
test
mov
and
and
jecxz
movsb
out
subb
insb
in
fmulp
xchg
loop
jle
cmp
mov
mov
push
adc
jnp
hlt
sbb
push
lods
mov
push
popf
jp
fs
dec
popf
xchg
fwait
sbb
mov
jbe
sti
mov
mov
leave
jbe
xorl
and
mov
dec
and
pop
xchg
es
push
mov
inc
lret
icebp
aas
sti
cmpsl
and
xor
mov
dec
adc
in
lret
ret
in
cmp
dec
jbe
sub
pushf
add
fbld
loope
cld
pop
incb
je
std
sti
daa
decb
push
sti
shlb
imul
xor
xorb
outsl
fs
rcrl
repz
ljmp
sti
insb
outsb
in
inc
adc
pushf
push
std
mov
xor
std
inc
loopne
stos
pusha
sub
mov
loop
insb
fs
pop
fdivr
mov
dec
sbb
aad
xchg
push
xor
pop
pushf
cmpsb
lahf
test
lods
adc
cmpl
add
xor
loop
sbb
sbb
call
and
rcrl
adc
and
mov
int
add
lcall
sbb
les
lds
mov
lock
in
add
push
lods
push
ret
dec
add
and
jp
jl
scas
adc
test
xor
clc
lahf
pop
mov
je
ja
lcall
pop
sbb
dec
jl
fwait
mov
sbb
rol
lods
cli
or
mov
js
mov
test
push
sarb
push
pop
sti
adc
lea
or
dec
pop
xor
movsb
sahf
pop
lock
add
inc
sahf
fldenv
loope
mov
aas
xchg
dec
mov
lods
out
sub
fidivrs
out
outsb
sub
adc
in
hlt
and
leave
daa
jecxz
pop
imul
mov
inc
lret
mov
jb
dec
or
dec
push
and
addr16
ret
sub
pop
add
inc
mov
out
inc
mov
cmp
xor
dec
push
inc
lcall
jg
stc
leave
sbb
aam
insb
and
jo
shll
fucom
push
leave
dec
in
lock
cmpsb
cmpsb
fidivl
pop
in
cmp
and
pop
movsb
jg
aad
into
sti
ficomps
shlb
cld
mov
push
jmp
mov
cmp
ret
lods
lds
add
test
fisubrs
aas
cmp
lahf
dec
ss
lret
mov
push
rolb
ja
aas
push
popa
fiaddl
imul
mov
in
jb
mov
xor
sbb
cs
mov
ja
dec
xchg
sbb
cwtl
adc
cmpsl
and
cmp
jmp
and
pop
add
cmovo
lock
hlt
dec
xchg
ret
test
mov
lods
adc
mov
cld
bound
sbb
lret
pop
je
ljmp
imul
cmp
xchg
test
and
xchg
adc
leave
icebp
xchg
js
xor
xor
in
dec
xchg
pop
inc
lock
sub
inc
xchg
inc
mov
lret
and
repz
ret
mov
push
cmc
xchg
pop
ret
jae
insb
cwtl
inc
cmpsb
or
mov
jb
cmc
sti
sbb
sbb
push
sub
data16
xor
mov
dec
aas
dec
out
or
adc
inc
push
dec
loop
and
inc
mov
dec
stos
clc
jecxz
rolb
mov
add
int
adc
xor
shlb
je
adc
jne
outsl
mov
sbb
addr16
mov
adc
jge
pop
cmpsl
xor
dec
loop
in
int3
xchg
aam
bound
gs
jb
adc
add
mul
mov
out
enter
jg
dec
dec
jns
iret
sub
add
adc
test
or
sub
pop
and
inc
idiv
dec
aaa
inc
xchg
xor
xchg
or
push
mov
jle
shll
sets
ja
xor
cmpb
ja
icebp
fldenv
xor
xor
cmp
iret
xor
cmpsb
or
mov
push
inc
pop
inc
xchg
out
cmpsl
sub
cmc
mov
jo
lahf
ret
fstp
icebp
loop
pop
ret
inc
dec
jecxz
jle
xchg
mov
add
in
mov
push
in
sub
mov
cmp
add
pop
dec
jno
lcall
and
movsl
jg
pop
xchg
cmp
inc
mov
aam
mov
cmp
mov
ret
je
or
lea
pop
stos
insl
inc
faddl
or
xor
xor
sub
adc
in
pop
out
mov
xor
mov
std
fisubs
push
mov
mov
and
jbe
rclb
jecxz
sub
dec
and
cli
js
mov
mov
out
cmp
cmpsl
roll
outsb
inc
lret
ljmp
ret
adc
rclb
into
pop
inc
inc
in
pop
xor
clc
idivb
mov
stos
sbb
xchg
and
jle
mov
mov
dec
ds
cltd
pop
pop
dec
mov
sub
mov
dec
pop
adc
movsb
and
inc
popf
cmpsb
fisttps
and
jb
scas
enter
cld
mov
push
mov
lret
mov
xor
mov
jo
xchg
stos
gs
scas
add
pop
xchg
repz
mov
insl
fstl
imul
mov
hlt
jae
lock
add
mov
shl
popf
lahf
mov
mov
sbb
out
push
xchg
mov
sub
roll
into
mov
push
pushf
cmpsb
stc
hlt
jnp
mov
mov
lcall
loop
xlat
imul
call
sub
mov
push
outsl
jp
fcoms
ficoms
mov
faddl
cli
mov
mov
es
aam
incl
fs
aaa
sub
mov
or
or
push
dec
inc
lds
lcall
and
xchg
lahf
mov
pop
mov
jns
lods
mov
jnp
aaa
cmpsl
fidivrl
sub
fidivrl
scas
gs
inc
push
lcall
sbb
es
mov
dec
xchg
jbe
clc
xor
push
push
cmp
mov
pop
cmp
pop
and
jo
mov
iret
scas
xchg
pop
xor
mov
mov
pop
push
addr16
inc
ss
cld
clc
xor
mov
inc
mov
sbb
push
sub
cmp
mov
pop
adc
mov
cli
inc
xor
and
fsubrl
add
or
mov
je
cmpsl
fcomi
and
movsb
lcall
mov
les
jo
test
mov
movsl
adc
cli
jge
push
jg
loop
int3
fcmovnu
rcrl
aas
xchg
stos
sub
xor
mov
jle
mov
aaa
jp
jo
sub
andb
icebp
xor
sub
cmpsb
iret
pop
in
push
cwtl
push
and
sub
rol
or
fdivrp
sbb
icebp
add
movsb
cmp
icebp
loop
outsl
paddusb
xchg
xchg
arpl
faddl
loop
mov
dec
xlat
pop
push
inc
call
in
jl
js
pop
std
mov
mov
jno
xchg
out
and
ds
adc
out
fucomip
mov
cmp
aad
test
imull
ftst
jl
in
aas
sbb
daa
inc
std
inc
sbb
jo
or
xchg
clc
mov
cmp
xor
push
ja
es
fisubs
mov
pusha
dec
mov
xlat
xorl
jno
add
or
jmp
sbb
inc
imul
mov
rol
push
cwtl
xchg
sbb
cmp
add
lods
cmp
sbb
inc
shlb
cld
push
jecxz
stc
cmp
lret
iret
dec
shlb
or
sub
sub
sub
pop
push
aad
pop
int
xchg
mov
jae
xor
pop
push
fcoms
cwtl
aaa
pop
jnp
mov
enter
imul
xchg
mov
andl
xor
jnp
push
xchg
xorl
push
dec
ret
xchg
vpaddsw
xor
out
clc
dec
adc
sbb
ja
shl
repz
repnz
mov
sbb
mov
adc
xchg
sbb
shll
aas
mov
and
mov
lcall
xchg
fs
xchg
or
and
sub
xchg
mov
mov
jecxz
aaa
mov
pop
sbb
pop
je
adc
mov
je
test
sub
enter
ja
and
push
push
xchg
dec
push
fidivl
inc
and
cmp
lret
mov
js
mov
sbb
clc
imul
das
push
pushf
sub
stc
lcall
mov
shlb
mov
nop
jle
sub
arpl
cmp
rolb
lret
cld
call
ror
leave
xor
ljmp
fistpl
and
or
testb
sbb
pop
mulb
aaa
add
shll
mov
cmpsb
incb
jp
fs
in
stos
jo
cltd
xchg
add
enter
jmp
shlb
pop
push
fsubrs
inc
sti
mov
rcr
mov
adc
imul
mov
adc
lcall
add
xor
mov
add
insb
stc
xchg
push
sub
xor
test
pop
or
or
movb
lods
and
lods
mov
in
notb
test
add
adc
jl
fisubrl
cmp
outsl
mov
inc
repz
dec
mov
mov
pop
pop
arpl
adc
jge
leave
scas
call
dec
cmc
cmpsb
ja
sub
mov
lea
mov
jp
test
cmpsb
cltd
outsb
iret
dec
push
push
lods
sbb
out
inc
xor
cmpsb
inc
in
pushf
out
je
mov
add
sbb
lret
fildl
stos
add
mov
jb
xorl
movsb
sbb
mov
mov
mov
ja
add
mov
in
cmp
xor
xor
leave
mov
adc
push
sbb
mov
rcll
dec
pusha
icebp
mov
test
jns
dec
lock
inc
lcall
movsb
lock
mov
leave
iret
nop
sub
push
pusha
fstpt
mov
mov
pop
iret
xchg
cmpsl
js
lcall
test
mov
add
xor
push
mov
push
dec
bound
cmp
cmp
pop
stos
inc
add
idivl
movsb
stos
jge
pop
in
cwtl
mov
bound
pop
xor
jno
cwtl
dec
sub
sbb
ja
es
cmpsl
mov
push
xorl
pop
or
push
inc
lods
xor
rcrl
jge
dec
adc
popa
mov
test
cmp
add
adc
jae
int3
ss
aaa
push
int3
push
dec
xchg
dec
and
imull
add
ljmp
add
rclb
ds
cmp
sub
out
or
pop
mov
lds
fnstsw
fidivl
mov
xchg
leave
lret
mov
out
std
xor
ss
mov
insl
inc
xchg
mov
cwtl
pop
stc
popf
into
jo
roll
push
test
mov
mov
iret
shrb
add
push
test
inc
mov
xchg
jbe
iret
sub
add
testl
je
mov
test
hlt
and
popa
inc
xor
dec
lret
mov
in
mov
push
mov
pop
pop
cmpsb
fsubrl
inc
lods
and
mov
in
idivl
mov
mov
out
add
addb
rcrb
cmp
stc
cltd
pextrw
xchg
ret
cltd
fimuls
fs
inc
out
cmpb
add
adc
lret
out
repz
sbb
pop
jmp
push
mov
test
mov
test
and
stc
mov
fsubrl
sbb
outsb
imul
pop
pop
aaa
cmp
nop
pop
cmp
sbb
iret
and
sub
and
aad
lods
and
ja
orl
sbb
aaa
push
loopne
xchg
test
stc
xor
add
shlb
mov
and
jecxz
aad
xchg
jg
je
and
sti
popa
sti
add
add
inc
insb
inc
rcll
ljmp
scas
pop
cmp
mov
jle
sub
sbb
ficoml
pop
lcall
shr
cmp
pop
cmp
fs
cmp
clc
sbb
popf
stc
negb
pop
mov
pop
and
bnd
pushf
fimull
xchg
cltd
sub
subb
je
fisubs
push
dec
xchg
lock
in
dec
jl
into
stc
lods
or
xchg
outsb
push
xchg
and
fisubrs
cmp
ja
and
negb
cmp
add
cmp
xchg
cmp
mov
sbbl
inc
ret
loop
mov
cwtl
scas
mov
and
jno
das
mov
inc
cmp
mov
pop
mov
jmp
roll
fldenv
clc
xchg
xchg
xor
hlt
bound
xlat
push
fidivrs
aad
and
imul
push
cmp
sbb
mov
or
sub
gs
faddl
mov
insl
mov
dec
or
push
pop
dec
or
mov
cli
test
addr16
lret
mov
xchg
insl
dec
hlt
jne
sti
adc
dec
xchg
mov
and
enter
jl
mov
enter
ret
mov
out
dec
and
mov
lea
je
or
psubb
or
ret
adc
fsubl
aas
jb
jmp
mov
jg
sub
inc
and
cmp
xor
jbe
jno
les
stc
cwtl
mov
shlb
jo
and
xchg
push
cmc
nop
add
ja
sahf
pop
jno
insb
mov
cmc
and
es
dec
inc
mov
pop
push
hlt
dec
insb
pop
inc
push
mov
mov
add
fisttpll
or
test
out
movb
mov
jmp
sub
sbb
idiv
das
cmp
mov
or
lock
mov
or
push
ja
addr16
add
aas
insl
pop
das
movsl
xor
iret
sbb
int
adc
adc
push
sbb
xchg
cmp
cli
invd
dec
es
cld
icebp
cmp
push
jnp
or
roll
pop
cli
scas
inc
sbb
jne
push
mov
and
out
ljmp
inc
shll
fldenv
xchg
adc
xor
lret
leave
hlt
pop
sub
aam
dec
imul
jo
popf
scas
pop
inc
lods
xchg
dec
push
pop
add
rolb
mov
inc
fstps
fcmovnu
sbb
popa
sahf
mov
out
pop
xchg
addr16
iret
fs
in
sbb
ss
sahf
sti
adc
mov
cmpb
inc
sbb
out
sub
sbbb
sbb
xchg
adc
xchg
jle
and
std
icebp
pop
jns
out
adc
aad
lods
sub
cmpsb
scas
aad
pushf
stos
or
ret
pop
inc
push
dec
mov
jl
sub
cmp
pop
orl
inc
rcl
pushf
add
loopne
loopne
rolb
mov
xor
cmpsl
ficoml
cmp
flds
push
inc
fneni(8087
jmp
aaa
xlat
xchg
lret
iret
out
xchg
xchg
mov
cli
pop
mov
sub
dec
int
imul
rorl
mov
lret
sti
nop
adc
mov
push
ret
mov
lret
nop
xor
rolb
or
std
jae
outsb
shrl
iret
lods
ss
jecxz
lods
mov
pop
js
push
in
push
sbb
sbb
mov
imul
movsb
xor
inc
xchg
jg
xchg
das
insb
and
inc
lods
lret
xor
stos
clc
imulb
xchg
test
loope
fldcw
adc
mov
dec
xor
and
cmp
iret
nop
cmc
lea
stc
push
nop
mov
pusha
je
inc
test
lcall
or
fnstenv
sub
inc
push
in
inc
popf
dec
bnd
in
pop
dec
sbb
jo
add
dec
or
mov
ret
jnp
push
sub
jl
xchg
cltd
dec
loop
sbb
xchg
stos
in
inc
xchg
mov
icebp
lea
inc
adc
pop
push
cmp
mov
aaa
in
enter
push
lcall
aas
cmp
bound
lds
repnz
and
in
xor
outsl
adc
or
xchg
das
sbb
stos
push
lahf
adc
insl
movsb
sbb
loop
push
pop
push
mov
jnp
adc
xchg
push
stos
adc
rcll
mov
shll
mov
es
les
sub
sub
cmc
aad
sbb
je
jecxz
mov
jns
inc
push
out
xor
mov
clc
sbb
imull
push
push
add
pushf
mov
sub
ds
jge
inc
adc
je
sbb
or
pop
popf
js
or
xor
leave
pop
jnp
in
cmp
out
cmpsb
dec
stos
fcoms
xchg
jmp
mov
pushf
icebp
fwait
push
cmp
sub
inc
xchg
cs
lret
div
adcb
lock
fwait
into
bnd
cmp
xor
bound
sub
lea
std
dec
dec
out
mov
xor
xor
stos
in
insl
mov
push
push
clc
xchg
add
mov
xor
mov
clc
cmpsb
xchg
lcall
xor
adc
mov
mov
std
lods
std
push
xchg
cmpsb
jmp
fildl
imul
pop
xlat
and
sbb
fsubr
cwtl
hlt
vpmacssdd
fidivs
sbb
or
std
je
jb
aad
inc
mov
pop
dec
push
cmp
mov
mov
aas
jnp
jb
sbb
pop
mov
fstps
popa
pop
inc
incb
scas
sbb
mov
lds
mov
in
and
mov
imul
mov
sub
pushf
cmp
push
ds
xchg
enter
ljmp
adc
add
mov
mov
or
scas
xchg
xor
test
dec
mov
inc
fndisi(8087
mov
cli
or
cmp
mov
outsb
stos
fildl
xor
pop
inc
es
inc
out
lds
rolb
fdivrl
cwtl
jae
jmp
call
mov
outsb
ss
mov
add
mov
mov
or
jmp
inc
cmp
adc
mov
add
jge
or
mov
fwait
cltd
stc
or
dec
pop
js
cli
pop
outsb
inc
shlb
mov
shrl
add
lret
js
aad
shll
xchg
scas
add
sti
lahf
inc
inc
mov
jle
es
add
cwtl
cmp
dec
adc
aaa
sbb
pop
jno
mov
mov
lcall
sbb
imul
imul
xor
mov
rorb
mov
sbb
push
jle
mov
mov
in
xchg
cld
mov
sahf
mov
cmp
xlat
jbe
xchg
cmp
sti
comiss
sti
dec
jns
lahf
out
shrb
pop
inc
inc
pop
out
mov
mov
mov
mov
jl
xor
jecxz
sub
int3
mov
and
cs
xor
hlt
push
jno
sbb
test
push
in
add
mov
mov
popf
cmp
insl
jns
mov
fimull
or
repz
ret
dec
inc
sub
add
jecxz
dec
ficoml
xchg
clc
sub
decl
data16
inc
mov
pmulhw
pusha
ficoms
push
int
hlt
cs
or
stos
loop
fidivrs
fildl
add
and
and
dec
adc
addr16
lcall
mov
fwait
cltd
data16
jmp
and
cmpsb
lcall
lods
es
and
popa
sub
test
jne
sahf
adc
mov
ljmp
adc
dec
add
mov
inc
adc
fistpl
cmpsb
add
xor
mov
push
dec
dec
and
pop
fstpl
and
pop
out
hlt
stc
or
adc
mov
lcall
mov
sbb
and
push
std
inc
xchg
imul
fwait
pop
fistl
jb
out
or
fs
inc
fsubp
xlat
mov
adc
dec
scas
ljmp
push
xchg
sarb
mov
cwtl
loopne
and
xorb
lcall
pop
or
pop
dec
xor
add
orb
inc
ficoml
mov
inc
jle
arpl
test
dec
dec
add
loope
out
push
test
cmp
js
add
inc
jmp
mov
dec
out
inc
popf
jbe
imul
mov
testb
mov
popa
cwtl
jle
mov
cld
decl
in
jge
movb
sti
jno
mov
push
fsubr
enter
testb
xchg
jnp
ss
and
mov
lahf
mov
jmp
xlat
fsubl
jns
pop
adc
pushf
popa
xchg
lods
ss
lods
inc
arpl
movsl
jp
sbb
imul
loope
fucomp
in
cmc
es
jo
dec
mov
mov
clc
mov
js
jmp
ss
sub
xor
push
jg
stos
inc
into
lods
cwtl
mov
inc
aas
or
mov
inc
inc
xor
fbld
mov
xchg
mov
divl
scas
fwait
dec
dec
mov
sbb
mov
je
pop
push
test
aas
mov
iret
fldt
push
dec
or
pop
jle
out
lahf
fwait
subl
mov
scas
cli
mov
leave
shrl
aam
jge
adc
aam
mov
push
mov
jle
dec
sub
cld
lea
inc
jle
add
or
ljmp
fdivr
mov
mov
iret
call
jne
jbe
or
sar
loop
ds
test
dec
jns
mov
and
mov
sar
stc
mulb
shr
and
imul
int3
insb
or
or
dec
mov
add
aam
ljmp
stos
adc
mov
inc
inc
repnz
daa
cmp
mov
popa
push
adc
jecxz
shrl
ret
sti
xchg
lcall
mov
xor
jne
jo
dec
jg
mov
imul
or
in
xlat
adc
int3
adc
divl
in
sbb
lea
mov
dec
shlb
push
cmp
jg
push
mov
sub
push
outsb
test
cltd
test
add
out
int3
in
cmp
popa
ret
sub
aaa
and
outsb
mov
shl
loopne
insl
cmp
movd
mov
fbstp
paddusw
into
push
jne
push
dec
cmp
mov
out
je
push
rclb
add
bound
push
fimull
out
or
pusha
test
or
sti
gs
sti
push
loopne
addb
mov
xchg
push
dec
sub
mov
mov
sub
test
sbb
pop
repz
jmp
test
xor
jae
sbbb
jo
loopne
mov
mov
addl
or
push
fidivs
pop
subb
push
push
outsb
je
sub
xlat
dec
das
inc
fimuls
xchg
ret
and
ss
mov
lods
popa
cmpl
mov
in
push
dec
mov
outsl
pop
mov
mov
pop
adc
sub
insl
or
sti
sbb
mov
xor
sub
mov
dec
cmpsl
mov
enter
test
movsb
cli
mov
adcl
pop
xlat
and
vmwrite
or
jbe
xchg
or
sbb
push
and
cmp
movsb
int
pop
inc
inc
lcall
rorb
pop
dec
les
shll
xchg
test
call
inc
addr16
stos
pushw
inc
lcall
xchg
in
rolb
out
js
pop
push
jb
fdivp
push
lcall
mov
sub
out
leave
fdiv
and
or
xlat
adc
btr
cwtl
xor
loop
in
js
inc
scas
in
mov
das
adc
cmpsl
push
popa
push
cmp
andb
jp
add
out
adcb
xchg
imul
shlb
sub
popf
dec
test
inc
mov
add
sahf
das
iret
loop
adc
dec
ja
adc
sub
ficoms
push
shlb
negl
xchg
fincstp
ret
mov
std
mov
mov
sbb
jns
cmpsb
pop
and
lock
fadd
int3
or
mov
and
in
pusha
es
outsb
lcall
or
inc
hlt
mov
mov
cwtl
lods
add
xor
mov
lret
addr16
xor
icebp
lods
jl
popf
xchg
cmp
dec
dec
mov
addr16
outsl
and
sub
call
repnz
sub
sub
push
xorb
inc
jns
call
fmul
dec
outsb
and
push
fistl
mov
loop
iret
xchg
cmp
ljmp
pop
jnp
lret
inc
jno
mov
or
mov
push
gs
bound
pop
clc
in
ficoml
mov
ss
jg
cli
push
sbb
cld
add
pop
ret
or
jge
sarb
jmp
repnz
cmp
fiadds
sbb
je
jl
inc
pop
fisubs
xor
movsb
push
mov
loope
pop
fcmovnbe
add
lret
sahf
mov
addb
pop
pop
or
mov
mov
aad
jae
cmc
lods
sarl
xor
mov
movsl
inc
shl
out
push
in
lock
cmp
les
repnz
xlat
leave
push
jp
push
pop
mov
mov
inc
sub
pop
lret
rolb
imul
mov
enter
push
xchg
inc
mov
cmp
dec
or
mov
dec
fbld
adc
push
mov
sbb
push
fistpll
addr16
mov
outsl
pop
jg
call
or
cmp
rolb
fcoms
aam
sbb
cmp
int
pop
nop
lahf
outsl
inc
ss
dec
jecxz
pushf
push
inc
into
xor
inc
test
outsl
push
fucomi
dec
adc
aas
je
or
inc
fs
xor
jo
sub
out
mov
push
and
cmp
sub
les
sarb
hlt
xlat
cmp
fucomi
jb
xchg
cmpsb
cmp
and
je
push
add
mov
xchg
mov
mov
shll
subb
mov
push
mov
outsb
adc
or
xchg
stos
pushl
test
mov
jg
movsl
and
bound
lea
mov
xchg
arpl
lahf
fildll
lods
rcr
js
cmp
test
ret
scas
dec
xchg
pop
dec
addr16
das
je
sub
and
clc
stos
mov
push
das
or
inc
mov
pop
mov
pop
movsl
fchs
jge
lahf
call
enter
cmpsl
and
pop
jle
push
ret
add
dec
insl
mov
add
imul
add
mov
stos
aam
daa
out
fisubl
stc
scas
or
jb
stos
daa
push
xlat
cltd
in
imul
add
sub
int3
mov
test
mov
dec
test
mov
mov
inc
mov
mov
pop
mov
pusha
adc
and
cmp
sbb
add
scas
push
xor
or
clc
mov
or
pop
scas
insl
outsb
cmpsb
mov
jecxz
and
jmp
test
inc
ficompl
dec
test
fdivrs
mov
dec
fiaddl
mov
xorb
adc
fistpll
mov
and
xchg
push
mov
ret
fs
mov
jecxz,pt
cmp
fldl
daa
subps
pop
push
cmp
jne
shl
cmp
test
mov
jle
out
sub
cmpb
in
cmp
addr16
push
pop
icebp
jle
scas
int3
mov
jnp
xchg
bound
stc
shll
sbb
sarl
jmp
cmp
jge
xchg
mov
insb
aad
je
mov
xchg
pushf
xchg
push
shlb
sub
es
jl
add
sub
jb
lea
rclb
dec
fcmovbe
mov
imull
jmp
cmp
mov
aad
js
insb
repz
cmp
shlb
mov
cmp
pop
inc
pop
push
addl
das
pop
pop
mov
cmpsl
push
mov
loop
mov
and
push
scas
subb
mov
lcall
test
outsl
pop
fmuls
je
repnz
out
pushf
mov
xor
in
ds
sub
xchg
xor
cmpb
and
adc
adc
sarb
fmull
xchg
mulb
xor
and
cmp
repnz
pop
fs
testb
daa
mov
add
incl
xor
pushf
outsb
and
daa
inc
hlt
lods
outsb
push
fildl
mov
jb
in
or
mov
mov
push
in
loopne,pt
xchg
fucomip
jno
push
adc
xchg
lret
jle
jne
repz
cmp
jo
and
inc
daa
or
and
les
das
add
jmp
mov
xchg
nop
addb
push
xchg
repnz
fdivs
ljmp
push
cmp
pop
push
jg
pop
fwait
xchg
ret
scas
nop
mov
inc
mov
cmp
insb
addl
lea
push
xor
cs
xchg
dec
pop
ret
clc
sub
mov
setp
sysexit
test
test
cs
sub
dec
inc
test
fcomp
into
inc
mov
inc
cmp
mov
push
push
out
sbb
mov
push
sbb
ret
mov
xchg
mov
inc
jae
dec
in
pushf
enter
and
pop
mov
ret
mov
test
cmp
aas
mov
daa
pushf
psllq
xchg
in
bound
push
jmp
jbe
mov
mov
ret
pop
sbb
enter
test
rcrl
mov
mov
xlat
lret
or
dec
rep
jle
mov
in
xor
inc
jb
or
test
sarl
and
outsl
fwait
std
ret
xchg
nop
scas
adc
repnz
les
pop
mov
stos
push
lret
mov
ds
xor
mov
ljmp
adc
outsb
mov
cs
sbb
mov
gs
mov
les
cmp
mov
fs
rcrb
xor
jmp
ret
ds
jmp
push
aad
lods
sbb
jg
inc
test
adcl
fcoml
test
or
push
cmpsl
and
addb
xchg
jnp
fsubs
mov
enter
pop
mov
imul
mov
fwait
pop
dec
mov
xor
xchg
aas
jns
insb
dec
xchg
lea
std
movsb
pushf
pop
push
dec
sbb
stos
fs
and
icebp
mov
test
push
fcompl
xor
sub
jg
xor
rolb
mov
iret
pusha
push
fmuls
adc
fnstenv
sub
mov
cli
dec
stc
push
mov
je
loop
mov
arpl
inc
and
dec
or
cmp
mov
shlb
or
mov
push
and
push
xor
sbb
dec
xchg
test
arpl
aam
xor
fmul
push
out
rcrl
adc
mulb
jo
ss
je
lahf
pop
out
mov
jge
int3
lret
xchg
sub
jne
mov
rol
inc
pop
cmpsl
je
add
sub
mov
xchg
bound
lods
cmpsl
fcmovb
add
push
popf
and
insl
xchg
xor
adc
mov
mov
jnp
add
jbe
lds
in
ret
addr16
lods
cld
pop
lcall
ds
dec
jecxz
cmp
fisttps
mov
les
jbe
cmp
repz
push
loope
outsb
mov
inc
xorb
adc
jb
jae
xchg
cmp
in
in
xchg
call
add
sti
jp
insb
gs
divl
outsl
shrb
sarl
jge
icebp
sbb
dec
xor
adc
jle
push
cld
movsb
insl
clc
arpl
out
mov
and
mov
cmp
push
test
mov
adc
cli
fildll
mov
xchg
adc
lea
push
shlb
gs
cmpsb
in
dec
addr16
enter
xchg
or
dec
mov
cmc
sahf
leave
ficoml
adcb
push
sub
popa
iret
jmp
mov
xchg
mov
pop
mov
outsl
cmp
inc
iret
mov
sub
arpl
mov
bound
lods
cmpsl
cltd
jbe
pushl
ljmp
out
mov
std
int3
and
mov
or
sbb
dec
test
add
andb
jmp
mov
or
xchg
and
std
xor
mov
je
push
mov
cmp
movsl
cmp
and
xor
out
cmp
push
hlt
xchg
add
popa
xchg
cmp
int
dec
subb
jno
cmp
js
jne
sub
fstpl
loope
mov
cmp
stos
iret
push
mov
out
push
jno
jge
xor
pop
js
mov
add
xchg
mov
sbb
bound
jo
xchg
or
popl
xor
and
inc
mov
mov
xchg
je
sbb
insl
mov
stos
cs
test
inc
lods
hlt
mov
add
arpl
and
sub
pop
pop
outsl
xor
xlat
and
call
jo
loopne
push
push
pop
xor
std
push
mov
mov
into
adc
cmp
out
out
lcall
mov
dec
lret
push
das
pop
loopne
pop
xorl
mov
mov
fimull
cltd
cmp
andl
sub
das
stos
sub
lahf
dec
xchg
adc
or
ds
xor
and
aaa
sbb
loopne
pop
mov
clc
xor
mov
fsts
xchg
ljmp
pop
xchg
sarl
sbb
adc
insl
insl
or
cmpsb
icebp
push
sub
ret
cmp
repz
scas
and
aad
lret
ficomps
inc
sub
cmpsb
xchg
out
inc
jmp
cmpsb
dec
mov
imulb
cli
dec
cmp
ret
push
nop
enter
pushf
gs
pushf
idivl
cmp
xor
xor
jle
insl
fsubs
je
leave
jmp
int3
std
jmp
jle
dec
sbb
fs
fstpl
ret
arpl
nop
scas
test
mov
scas
cmp
sub
fidivs
andb
js
jno
mov
and
sbb
lcall
sub
mov
iret
push
cmp
mov
jb
adc
sti
inc
lahf
sub
je
mov
call
xor
xchg
sub
cmp
mov
fldl
pop
adcb
mov
insb
and
push
and
mov
adc
dec
cvtdq2ps
jg
mov
ret
inc
fsub
mov
xor
and
push
cmp
outsl
push
adcl
and
sbb
cmp
cld
fbld
sub
stos
dec
push
xor
es
jne
xor
frstor
ret
mov
or
mov
out
jne
ds
pop
or
cli
add
or
xchg
jns
xchg
pop
or
out
test
in
pop
enter
mov
bound
clc
stc
inc
fbld
pop
stos
stc
scas
dec
fstps
int
xchg
pop
cmp
adc
xorl
mov
and
jo
ja
je
call
cmpsb
popa
mov
and
movsb
outsl
scas
divl
aam
rcll
mov
push
lods
cmovne
popa
cmp
fists
mov
and
ljmp
push
icebp
jp
insl
sub
dec
or
dec
push
pusha
push
aaa
cmp
rol
jb
dec
mov
in
les
cmpsb
add
scas
cld
in
outsl
aad
jne
jnp
cld
jmp
aam
pop
push
subl
mov
leave
push
add
jo
movsl
or
xchg
and
adc
mov
loopne
shrl
imul
ret
enter
and
mov
call
mov
cmpsb
mov
jl
std
mov
out
mov
adc
pop
dec
xchg
in
bound
add
xor
jg
jnp
addb
mov
push
fldenv
ror
lcall
cmp
pusha
xor
inc
testl
out
xor
and
mov
inc
out
movsb
cli
movsl
sub
ficompl
cmp
add
jbe
cmc
in
xlat
xor
xchg
mov
stc
xchg
inc
xor
shll
cmp
call
dec
cmp
mov
and
popf
cwtl
mov
mov
out
jp
adc
mov
xchg
jge
stos
sub
jnp
jns
mov
sbb
jns
add
out
mov
into
sub
push
pop
xchg
jns
sub
andl
cld
insb
lods
xor
shlb
sarl
lret
inc
mov
pop
arpl
shll
pushf
fistpll
and
cld
movsb
aas
mov
dec
outsb
sub
and
mov
insl
inc
sbb
inc
decl
clc
loope
or
jge
dec
aad
push
dec
cltd
nop
adc
popa
lret
jecxz
nop
jecxz
test
popf
popa
shll
inc
cmpsl
jp
add
cmp
inc
sahf
jge
cltd
sbb
lods
cmp
push
cltd
sub
cmp
bound
imul
mov
and
cwtl
mov
xor
fsts
hlt
push
pushw
popa
ret
shrb
xchg
sarb
mov
jecxz
or
lds
inc
inc
ror
jo
daa
lcall
adc
mov
mov
and
xlat
je
inc
lahf
mov
sbb
mov
cli
popf
std
mov
cltd
xchg
mov
clc
sbb
repz
add
dec
mov
call
stos
push
ja
hlt
hlt
jb
lcall
and
ror
out
fisubl
mov
push
ret
cmp
pop
jg
and
push
and
inc
inc
icebp
shll
js
or
and
test
aas
lret
ljmp
or
fisttpll
or
lret
lods
fisttpl
int
sbb
fstl
dec
jns
xchg
inc
jg
push
ret
push
add
pusha
insl
xor
fs
mov
mov
movsb
push
jb
lret
sbb
cld
jg
jg
mov
lock
inc
movsb
out
cmc
faddl
pop
ficomps
pusha
lock
icebp
mov
ss
push
out
movsb
and
add
ss
mov
shll
hlt
sbb
imul
jno
push
fildll
repnz
cmpsb
push
dec
repnz
lret
or
ss
jbe
jmp
adc
ret
xlat
xchg
and
mov
xor
psubd
jns
lret
push
ss
push
cltd
sti
inc
or
or
cmc
sbb
sbb
inc
fucomip
jge
jnp
enter
adcl
mov
idiv
pop
xor
mov
jl
js
and
das
xchg
ret
mov
jae
inc
in
mov
cmp
aas
lar
pop
mov
sub
testb
lock
push
fiadds
and
push
std
sahf
add
xor
ljmp
push
sub
rcl
xchg
jbe
imul
pop
sub
mov
mov
push
pushf
push
push
outsl
or
xor
scas
cltd
fdivs
adc
ret
inc
push
call
outsl
inc
pusha
xor
push
outsl
sbb
pop
ljmp
sub
in
adc
jo
int
xchg
repnz
data16
repnz
clc
clc
les
xor
mov
scas
cltd
fnsave
mov
imul
lahf
popf
scas
sbb
push
lods
mov
cmp
mov
fists
sub
pop
xchg
adc
inc
pop
movlps
mov
pop
movsb
insl
jmp
fnstenv
les
cmp
jge
cmpsl
loopne
cmpsl
loop
testb
out
in
sub
in
push
push
and
shlb
jl
fldt
lret
negl
repnz
xlat
or
popf
pushf
mov
stos
sbb
addr16
lret
insb
fs
das
outsl
sbb
cltd
adc
imul
push
movsb
dec
pop
mov
jecxz
cmp
sub
mov
icebp
aad
jl
mov
lcall
fs
int3
and
stc
cmp
sub
std
mov
cmc
jle
cli
into
lock
push
fcmovb
push
cmp
cmp
arpl
ret
jbe
mov
mov
mov
dec
jmp
or
nop
lods
jne
arpl
sub
mov
and
mov
aas
loopne
inc
fwait
cmpsb
jmp
sub
pop
cmp
cmpb
adc
mov
dec
fprem1
movsb
sub
and
test
xchg
scas
xor
dec
dec
jno
push
mov
pop
popa
pop
popf
add
xchg
ds
cld
rorb
mov
icebp
or
add
inc
adc
ret
sbb
jle
cwtl
sbb
fdivrl
and
cs
out
pop
xchg
sar
adc
movsl
cs
fistl
jl
pop
jnp
mov
jge
dec
repnz
imul
and
adc
stos
and
or
pop
mov
loope
loope
inc
add
mov
jl
adc
in
cwtl
das
in
lret
sbb
push
insl
lods
sbb
daa
mov
pop
fldt
xor
ja
pop
test
mov
sub
push
lcall
imul
and
out
jbe
push
pop
xchg
mov
and
xchg
stc
pop
sbb
iret
in
lahf
dec
lret
mov
mov
mov
jb
jb
ljmp
sti
hlt
mov
or
insb
jle
or
imul
mov
or
ds
add
fs
fildll
mov
add
loop
sahf
shlb
sbb
imul
pop
sbbl
rcrb
mov
out
mov
xchg
pop
sub
and
out
and
enter
ds
xor
lret
rcll
sbbb
mov
scas
sub
insl
adc
in
or
sahf
push
jmp
sbb
scas
fs
shll
xor
inc
lret
xchg
adc
cmp
rclb
inc
icebp
push
test
jl
mov
faddl
add
incl
fldt
pop
xor
pop
or
hlt
xchg
push
sub
int3
cmp
cs
adc
rcl
inc
xchg
psubw
aam
int
add
sbb
icebp
fldcw
test
aad
es
out
jae
pop
fcmove
mov
test
xor
mov
sbb
cmpb
and
ljmp
insl
mov
push
mov
aaa
leave
sub
imul
rorl
dec
sbb
test
divl
outsb
aaa
jne
nop
lods
sbbb
push
lds
dec
push
shrl
cmp
dec
daa
lret
mov
xor
pushw
cltd
xor
cld
scas
sbb
stc
popa
insl
inc
pop
test
pop
push
loopne
sbb
pop
mov
add
stos
mov
mov
nop
dec
mov
lock
test
int3
jmp
ja
popf
scas
fldl
push
or
mov
mov
sub
leave
push
sub
mov
shrb
cltd
loope
mov
std
movsb
inc
ljmp
or
sbb
shrb
test
dec
pop
int3
mov
push
pop
inc
adc
pop
mov
mov
sbb
paddsb
mov
clc
and
cmp
add
mov
sahf
push
or
mov
sbb
pop
dec
jns
cli
stos
and
pop
out
dec
das
sbb
cmc
and
push
lahf
push
add
xchg
sbb
fisubl
movsl
jp
icebp
xor
add
pop
and
stos
sub
sbb
repnz
mov
ljmp
lret
sbb
outsb
cwtl
ret
and
jmp
sti
or
nop
in
mov
mov
add
enter
push
ja
stc
aas
xor
in
dec
cwtl
and
les
lock
stos
dec
pop
aam
pop
or
in
or
push
and
int3
divb
add
fsubrs
pop
sti
mov
sbbb
movsb
xor
xchg
inc
jl
or
je
sub
adc
mov
popf
inc
sub
fsubrp
lahf
xchg
and
cmc
mov
mov
in
adc
push
rolb
pop
bound
jo
in
mov
inc
add
out
fwait
mov
int3
jne
cli
popa
aam
xor
pop
aam
add
mov
jnp
xor
cmovae
pop
xchg
rcrl
add
add
mov
pop
push
sub
shll
test
xchg
mov
mov
nop
outsl
xchg
add
adc
and
adc
and
pushf
int
xchg
cmovle
sub
mov
addl
cmp
jnp
adc
stos
dec
push
pop
mov
daa
ss
fsubrs
cmpsb
popa
push
icebp
xor
push
dec
loope
leave
jg
stos
scas
push
adcl
lods
gs
sbb
mov
or
push
fcomip
pop
or
jmp
mov
pushf
and
xchg
mov
hlt
push
out
rorl
xchg
xor
mov
mov
sahf
aad
xlat
mov
dec
add
xor
xchg
fnsave
mov
mov
jne
dec
mov
jns
jae
inc
dec
mov
pop
daa
ss
push
pusha
ljmp
and
xor
mov
adc
xchg
dec
gs
jmp
sub
xchg
ficomps
mov
xchg
movsl
adc
pop
mov
push
lret
cmc
mov
push
push
mov
lods
sub
mov
dec
mov
add
icebp
scas
shr
out
sti
arpl
daa
dec
cmp
sti
or
or
cli
popa
orb
jl
sub
inc
mov
jp
xor
sbb
xchg
jp
sti
cld
shrl
or
and
gs
push
pop
mov
or
lret
sub
sbb
iret
pop
in
jb
adc
sbbb
cwtl
insb
cmpsb
adc
push
js
mov
xor
pop
fiaddl
imul
pop
loop
pop
in
mov
rcrl
xchg
and
xchg
mov
pop
bnd
push
ret
and
mov
mov
in
cmp
jecxz
pop
cmp
jle
jmp
stc
repnz
loop
test
xor
loope
sbb
insl
lods
movsl
adc
iret
inc
xchg
push
scas
sbb
adc
fcmovu
adc
adc
xchg
scas
adcb
dec
in
leave
shl
mov
jae
mov
mov
lds
cld
mov
xor
loop
sbb
roll
ficoml
in
ficoms
xchg
arpl
push
sub
ret
mov
and
add
adc
push
pop
jl
pop
es
imul
fs
sahf
pop
push
stc
add
dec
cmpps
in
lods
or
xchg
dec
addr16
sbb
mov
sub
pusha
sub
push
jmp
cld
lret
fs
dec
mov
xchg
xchg
inc
rorl
cltd
xchg
jg
imul
out
out
inc
aas
repz
cmpsl
xor
push
jae
fcoms
sub
inc
push
jg
or
pop
xchg
inc
out
les
push
rcrl
xchg
mov
lods
cld
xchg
jp
mov
mov
fdivrs
ficoms
sbbb
sbb
out
cwtl
sub
mov
push
xor
das
movsl
mov
shrb
dec
inc
dec
mov
sub
adc
in
adc
pushf
pop
jbe
inc
add
inc
rorl
negl
sbb
sub
pop
jae
mov
jl
cmp
mov
loop
mov
movsl
sbb
xchg
jbe
xorb
xor
fidivs
hlt
outsl
sub
xchg
sbb
inc
inc
xor
sbb
mov
imul
dec
mov
jmp
bound
je
push
or
jae
sbb
pop
stos
add
mov
mov
mov
sbb
push
xchg
popa
stos
cmp
mov
pop
adc
push
and
lret
xor
int3
adc
out
movsl
mov
cmovge
mov
incl
dec
xor
das
inc
rolb
js
sub
mov
fldt
push
das
add
xchg
jge
loope
or
pop
dec
dec
push
push
jne
adcl
pop
out
cmp
mov
xchg
add
scas
sbb
cwtl
dec
jmp
pop
xchg
stos
lds
js
stos
push
cmp
push
jne
fsts
sahf
gs
jecxz
sbb
xchg
add
rorl
jl
dec
adc
mov
int3
ja
add
xor
jo
out
in
mov
jp
mov
inc
pop
xchg
xchg
movsl
dec
aad
adc
mov
pop
add
xchg
movsb
cli
sar
or
aas
pop
pop
ret
dec
mov
arpl
mov
scas
adc
jnp
mov
push
lret
xchg
int3
stos
dec
aaa
ret
pop
ss
std
test
cmpl
ret
jae
sub
or
sbb
cmp
push
movsl
mov
pusha
clc
lds
mov
and
test
test
lds
lods
jmp
add
andl
sbb
mov
mov
fwait
xchg
adc
pop
jge
ss
lds
js
add
mov
or
ds
inc
cmp
inc
scas
sbb
cli
aad
cmpsb
cmp
mov
cmpsl
sub
mov
arpl
or
cmp
mov
stos
aas
inc
outsl
ret
sbb
fidivrl
loopne
pop
xchg
out
fldenv
cmpb
add
test
and
mov
leave
int
cmp
mov
pop
sub
fcoms
jbe
clc
mov
push
nop
sbb
mov
sahf
loope
adc
cmc
lock
sti
jmp
add
xchg
js
clc
sarb
lds
fldl
sub
outsl
pusha
jecxz
jge
sbb
mov
pop
add
adc
and
fstpt
outsl
out
outsl
and
xlat
stc
jmp
adc
push
sbb
mov
imul
popa
popa
out
lret
sub
xchg
orb
and
mov
and
inc
sub
rorb
sbb
and
stos
scas
cmp
mulb
push
push
jb
mov
mov
mov
lret
xor
in
pop
jnp
inc
mov
pop
lods
jbe
fldcw
cmp
or
ja
adc
aaa
jne
jmp
dec
mov
cs
jo
add
push
or
std
and
adc
add
ss
mov
jmp
inc
xchg
mov
shl
xor
out
push
pop
loopne
mov
das
cmp
add
loop
mov
call
mov
mov
cmp
js
dec
pop
call
arpl
enter
or
shl
push
das
stc
and
scas
xchg
sub
sbb
push
or
xchg
int3
mov
push
mov
sbb
adc
xorb
jp
out
xchg
and
je
dec
xor
mov
lret
aaa
or
xor
out
lcall
fidivrl
nop
sub
aaa
gs
lods
dec
push
addl
jp
movsl
cmp
lds
and
sub
xchg
loope
mov
sub
scas
test
stos
insl
push
lea
push
mov
inc
fidivs
aaa
inc
das
sbb
pop
popa
stc
test
mov
sbb
mov
outsl
sub
mov
inc
dec
jg
adc
addr16
pop
minps
push
push
jp
push
repz
cmp
pop
and
or
and
ret
sub
push
clc
jo
inc
dec
cmpl
push
push
cld
xchg
inc
incb
xchg
scas
inc
testl
adcl
xor
push
sub
mov
adc
cwtl
iret
into
js
push
lcall
sub
mov
imul
std
lds
pop
and
ss
mov
lcall
xor
pop
stos
mov
sbb
inc
xor
ljmp
or
ljmp
push
pop
and
shrb
shrl
test
mov
or
fsubrl
adc
arpl
mov
movsl
popf
jle
into
je
sarb
icebp
add
dec
bound
adc
repz
stos
xchg
in
popa
jl
sbb
fsubrs
mov
lock
mov
mov
int3
adc
fnsave
stc
add
pop
rorl
adc
ficoml
cmp
jbe
loopne
mov
mov
movsb
movsl
insl
out
jp
aam
xchg
subb
out
test
xchg
push
clc
test
mov
add
mov
fdivp
push
dec
jae
mov
mov
in
add
mov
sub
in
or
insl
subb
popa
xchg
mov
imul
repz
xchg
fucom
subl
arpl
sub
pop
test
sbb
xchg
fmuls
mov
sbb
jns
pusha
aas
push
push
sbb
mov
cli
repnz
jmp
mov
or
repz
xchg
in
pop
mov
sarl
cmp
fistps
int
fnsave
fstl
fsub
adc
push
sub
ficoml
imul
mov
int
dec
inc
push
nopl
out
sbb
add
xor
aaa
wbinvd
insb
mov
add
pop
insl
jnp
repz
in
jge
sub
ret
lret
ljmp
scas
dec
lcall
sbb
push
jle
adc
aaa
mov
cmp
inc
cmc
push
lahf
lret
pop
bound
ror
or
inc
aaa
push
fadds
out
dec
daa
fs
call
mov
stc
outsb
addr16
mov
push
mov
jge
jae
int3
std
adc
pop
repz
inc
cmp
cmp
sub
data16
inc
mov
movsb
xor
push
and
in
xlat
ss
in
pop
add
and
inc
inc
repnz
ljmp
mov
orb
add
ficomps
loopne
inc
enter
into
xchg
push
and
push
xor
mov
sbb
lds
add
adc
fcoms
out
sahf
lcall
ja
addr16
jbe
sahf
ds
fimuls
mov
lret
aad
pop
lods
in
jge
push
int
pop
fistpl
pop
xor
insb
loop
inc
loop
out
fistpl
push
xchg
int3
repnz
in
cmc
add
int3
cltd
loopne
sahf
jne
out
out
mov
subl
daa
inc
xchg
in
lods
dec
pop
aam
jnp
mov
inc
xor
ret
xor
pusha
in
jae
jno
xor
out
mov
rcr
out
lea
or
stos
push
xor
cmp
cmpsl
in
fidivs
pop
and
mov
sub
inc
outsb
int
add
sarb
xchg
xor
lahf
rorl
inc
es
add
enter
dec
sbb
js
movsb
adc
popf
xor
mov
imul
enter
sbb
push
in
mov
pop
push
dec
adc
dec
inc
pop
aam
pop
sub
out
xchg
inc
sub
lock
test
adc
mov
adc
push
test
or
dec
fadd
stos
rorl
daa
sub
into
mov
dec
cmc
repnz
cmp
jb
pop
push
and
inc
jmp
gs
dec
push
imul
movb
stc
xor
out
sbb
int3
mov
inc
aam
lcall
pop
add
add
icebp
mov
inc
sbb
mov
add
xlat
pop
std
pop
xchg
mov
push
ljmp
int3
mov
fcoms
add
mov
mov
je
addb
pop
pop
push
test
xor
test
mov
loopne
addr16
inc
mov
adc
jmp
xchg
dec
lds
push
mov
hlt
inc
jnp
shrl
loopne
jg
xlat
mov
fs
sub
sub
mov
out
mov
out
loope
xchg
sbb
inc
cmpsb
mov
out
adc
pop
adc
push
lds
ret
repz
lods
or
sahf
xor
aam
mov
fdivs
cmp
xchg
lret
les
push
xchg
push
pop
jg
rorb
cmp
movsb
lret
outsl
data16
cmp
mov
lcall
test
int
add
divb
imul
mov
cwtl
stos
sbb
or
inc
imul
inc
loope
mov
repnz
adc
jae
mov
jnp
lods
cmp
les
pop
aad
mov
std
int
inc
in
add
add
mov
jo
shlb
inc
in
or
div
push
imulb
orl
pop
pushf
sbb
mov
mov
xchg
adcb
xor
jo
pop
stos
fidivs
in
lods
cli
lods
mov
push
hlt
sti
dec
mov
aas
xchg
jl
push
shr
inc
jae
out
cmp
add
mov
sbb
imul
xor
popa
popa
loop
push
shll
fcomip
push
mov
ljmp
daa
daa
loop
lea
dec
imul
and
lcall
sbb
dec
cmp
int
xchg
ror
cmpsb
movsb
sbb
pop
xchg
scas
cmp
aam
testl
jmp
nop
in
lcall
sbb
jno
out
orl
sub
cld
stos
mov
xchg
pop
jg
mov
shlb
mov
test
inc
enter
in
dec
add
xlat
iret
js
xchg
das
push
stos
pop
roll
xor
lds
scas
mov
adc
push
popf
pushl
std
repnz
pop
fimull
mull
stos
bound
movsb
adc
stos
xor
hlt
and
mov
insl
addr16
sarl
movsl
and
gs
push
push
add
jg
out
or
push
xchg
rcrb
gs
bound
fwait
xchg
mov
add
lock
jl
pop
jmp
ljmp
add
lcall
cmp
push
ret
mov
mov
xchg
setno
lahf
adcl
outsb
lea
enter
push
out
cmp
sbbb
sbb
sub
rclb
jl
stos
insb
dec
pop
sub
inc
jno
hlt
icebp
inc
cmp
dec
xchg
cmp
int
movsl
sahf
sbb
lds
jnp
jl
nop
test
pop
dec
mov
addb
push
jbe
or
popa
mov
jno
out
out
in
sub
stos
mov
iret
inc
inc
fmull
or
xlat
cli
dec
repz
pop
inc
inc
out
push
mov
notb
lock
add
popf
push
fmuls
mov
sub
mov
xchg
sub
add
xchg
dec
cmp
imul
push
data16
push
mov
cltd
aad
or
inc
aam
cmp
in
into
sahf
sbb
mov
mov
push
testl
stos
jo
inc
dec
mov
js
mov
mov
cmp
xlat
enter
push
push
and
sub
jge
sarb
xchg
cld
add
sub
jne
repz
lds
push
jno
pop
jg
pusha
nop
add
bound
mov
mov
jae
mov
sbb
mov
sub
cld
push
aam
int
aas
mov
push
mov
xlat
push
out
lret
and
testl
mov
in
sbb
push
arpl
sbb
lcall
push
dec
sub
push
rclb
cld
and
pop
outsb
mov
addr16
jecxz
cs
movsb
xor
aam
sbb
rclb
adc
jns
add
jns
fsubs
addr16
jne
mov
cmp
adc
popa
jecxz
pop
lock
xchg
filds
gs
pop
mov
ja
push
out
cmp
in
cmpsb
aaa
inc
mov
arpl
cmp
pop
xor
inc
loope
icebp
xchg
pop
cltd
push
and
loopne
xchg
jb
loope
add
into
and
cs
test
cmp
xchg
lahf
lea
pusha
push
shll
jg,pt
jnp
je
inc
and
pop
aad
mov
adc
push
xchg
add
mov
push
mov
xor
and
int
cmp
or
orps
sub
cli
lea
pop
or
cs
pop
scas
shrl
cmpxchg
or
fnstsw
jg
stc
dec
jnp
rcrb
push
xchg
sbb
jbe
xor
cmpsb
inc
pop
pop
lock
cmp
jnp
mov
and
dec
mov
mov
and
das
adc
inc
out
frndint
lods
pop
arpl
mov
jo
push
bound
or
outsl
lcall
push
cmp
pushf
xchg
or
push
inc
mov
and
cmpsb
cmp
inc
xchg
dec
daa
dec
push
ds
mov
lret
repnz
scas
or
xor
repz
adc
jbe
movsl
mov
push
cld
ja
lret
je
movsb
outsl
cli
mov
sbb
jne
loop
addr16
cmpsb
xchg
testl
xchg
cmp
movsb
insl
mov
loope
sub
aaa
enter
add
pushf
sub
out
rorl
rol
repz
mov
out
xchg
lret
outsl
xor
push
sbb
mov
repz
loope
sbb
aaa
cmp
dec
xchg
inc
cmp
push
push
aas
xlat
test
cmpsl
mov
adc
pop
in
incb
leave
out
lods
xchg
popf
mov
jp
outsb
pusha
in
push
sub
mov
jmp
je
add
and
dec
adcl
mov
pop
xor
lret
divl
xchg
jl
xor
jl
add
sbb
out
cmpsb
add
bound
dec
jmp
xor
mov
jge
lahf
jno
in
mov
in
ja
fdivrs
negl
test
sub
stos
dec
mov
mov
jecxz
xor
or
dec
jbe
mov
xor
mov
push
or
mov
sub
fidivrs
mov
xchg
les
cwtl
icebp
add
cmp
imul
sbb
add
and
ret
shrb
inc
inc
and
pushf
or
sub
mov
repnz
cmp
push
jne
jo
les
sub
loopne
jmp
sub
xchg
xor
lret
cmp
insl
cmp
inc
call
or
cmp
inc
outsl
mov
cmp
icebp
or
loopne
cld
xchg
and
adc
inc
dec
sbbl
xor
pop
imul
mov
mov
xor
push
inc
hlt
pop
fdivr
leave
std
inc
mov
sarl
scas
jae
aad
mov
push
cmp
sbb
mov
ret
das
jnp
mov
pusha
adc
push
icebp
pop
mov
adc
mov
inc
out
pusha
xlat
cltd
call
push
out
mov
das
popf
mov
inc
in
mov
ret
stos
ja
pop
test
jno
outsb
in
inc
gs
mov
jo
pop
cmp
arpl
pushf
out
imul
mov
inc
jbe
push
lock
cld
cmpl
jne
jnp
xor
jno
outsb
mov
stc
mov
pusha
xchg
loop
aam
mov
sub
fists
sbb
fstps
sub
in
pusha
and
mov
xlat
pop
das
fs
nop
lea
xor
arpl
negl
arpl
outsl
popa
mov
call
shrb
dec
jg
jmp
ja
or
dec
ret
mov
inc
mov
lods
les
push
out
mov
clc
jge
dec
add
popa
mov
mov
cmp
fs
outsl
clc
cwtl
inc
int
or
mov
in
pop
lods
pop
push
jecxz
jecxz
push
push
xchg
mov
dec
xor
movsb
popf
clc
mov
xchg
ret
jl
popl
pop
push
jbe
mov
lods
xchg
ret
add
insl
into
adc
or
jb
mov
mov
loop
fidivs
out
sbb
xchg
ret
jb
mov
lods
sbb
mov
nop
daa
fdivs
test
cltd
cmp
dec
cmp
push
cwtl
pop
xlat
and
xchg
shrb
jb
or
loopne
sub
fistpl
dec
mov
daa
jecxz,pn
inc
adc
mov
ret
sub
sti
into
sti
pushf
inc
mov
iret
jne
mov
jmp
adc
or
xchg
nop
pop
rorb
in
or
scas
pusha
aas
sbb
push
scas
lret
sub
pop
pop
push
mov
add
pop
jl
lea
pop
push
mov
fwait
sub
or
es
cmp
scas
movsb
jno
add
add
sub
leave
sub
mov
mov
cmp
cltd
and
pop
sub
stos
add
les
stos
aad
mov
test
ret
outsl
or
addb
ficomps
sub
push
lahf
and
fbstp
imulb
into
inc
fs
fbstp
in
lret
stc
movb
add
iret
jg
mov
pushf
dec
cmpsb
sbb
testl
popf
mov
ret
jns
stc
ja
pop
in
add
insb
lds
lret
bound
jo
add
xor
mov
shll
fucomp
fidivrl
jne
insl
shl
mov
jno
dec
scas
lea
lcall
shrl
mov
je
push
shrl
jne
jb
jle
in
pop
pop
idivl
iret
lods
jbe
dec
leave
testl
data16
test
pop
cmp
xor
data16
jae
lahf
inc
adc
push
mov
cmpl
dec
jge
cli
rclb
loop
lds
mov
mov
mov
incl
arpl
aam
adc
jl
mov
loop
ret
sarb
incl
mov
jmp
fstl
add
dec
pop
fucomp
fidivl
lea
iret
outsb
cld
test
repz
sbb
push
int
stc
insl
dec
adc
movsl
cmp
sbb
cwtl
xor
sbb
mov
clc
mov
into
lahf
and
adc
fdivl
outsb
sbb
test
gs
stos
popf
lock
lahf
xor
pop
fldt
stos
out
test
jb
or
inc
in
subb
push
mov
aad
jle
xchg
jnp
mov
mov
inc
mov
lds
cltd
fdiv
mov
adc
cs
fdivrl
add
jp
movsl
out
or
mov
daa
cld
sti
cwtl
xor
inc
jbe
push
cli
out
mov
dec
cli
lret
int
jno
push
push
bound
inc
outsb
ljmp
shlb
inc
mov
sti
lock
inc
lret
dec
fbstp
mov
xor
push
dec
jmp
jbe
in
xchg
jmp
xor
mov
inc
or
jge
pop
jp
in
mov
arpl
push
sbb
repz
pop
mov
or
cmp
test
int
ljmp
aaa
mov
pop
push
pop
dec
test
jp
es
cmp
sub
bound
into
mov
movsl
imul
std
or
mov
jp
xchg
push
in
ja
pop
adc
test
imul
jecxz
in
and
mov
lea
jge
mov
push
or
and
inc
push
jns
sti
add
push
imulb
loop
xchg
in
add
fcmovne
jnp
lods
jmp
xchg
cld
inc
add
test
pop
mov
inc
pop
scas
mov
repz
push
aas
inc
mov
nop
aaa
push
call
sti
loop
loop
xor
mov
jns
rcl
pop
push
push
mov
xchg
sub
sub
sub
sub
aam
add
pop
or
iret
jno
xor
sbb
call
loope
fistpl
dec
inc
add
mov
in
mov
dec
out
mov
shl
mov
shrb
mov
adc
std
sub
call
enter
lahf
push
int
clc
insl
pop
hlt
pop
int
xchg
int3
rorl
test
jmp
mov
loope
inc
mov
mov
push
push
xor
lahf
push
sbb
or
shlb
cmpsb
and
gs
stos
fists
sub
shl
fistps
filds
adc
cld
out
mov
out
in
loope
loopne
aaa
push
xor
repz
fidivrl
and
pop
xor
call
adc
push
stos
mov
das
std
xchg
cmp
fpatan
add
movsb
pop
cmp
rcrb
dec
dec
ds
pop
in
push
outsl
int
fiadds
xchg
fstpl
out
mov
aaa
inc
into
mov
cmp
mov
mov
xchg
or
add
call
inc
rolb
and
cwtl
push
cmp
fs
push
cmpb
pusha
sbb
xor
stc
jl
movsb
enter
sub
push
insb
cltd
and
cmove
add
push
inc
jg
and
movsb
add
mov
xlat
cmp
add
call
push
mov
or
nop
add
test
in
lret
pop
jmp
cmp
add
jl
fwait
inc
notb
mov
or
aam
sbb
sbb
std
jne
loopne
push
out
jb
out
adc
jb
shll
jb
scas
push
mov
cmp
xor
jge
fidivs
mov
jl
inc
addb
sarb
sahf
and
sub
in
cmpsb
stc
repz
scas
es
clc
mov
inc
or
pop
sbb
into
push
mov
fistpll
or
adc
inc
aas
fwait
and
cld
loope
lcall
loope
sub
pop
sbbb
insb
lcall
mov
fsubl
lods
mov
mov
outsb
push
divl
aam
xchg
xor
and
inc
test
xchg
push
or
push
fnstsw
in
cmp
int
rcll
call
dec
cmovns
inc
push
sub
loope
cld
sbb
lcall
mov
sbb
xchg
mov
cs
shl
shrb
pop
and
aas
lea
sub
shlb
lock
or
out
mov
push
bound
and
lds
dec
ret
xchg
popf
pop
mov
jl
aaa
xlat
push
jle
pop
pusha
inc
into
sub
and
negb
xor
mov
add
rorb
addr16
adc
ret
dec
xchg
sahf
xor
cld
mov
test
push
inc
sahf
jb
adc
dec
gs
inc
nop
test
jns
aad
dec
cltd
inc
imul
cmpl
add
dec
inc
fucomip
sub
mov
push
xchg
ret
dec
add
stos
add
inc
sbb
jae
addr16
repnz
inc
ja
fsubrs
dec
mov
fs
sti
jl
test
daa
icebp
xor
call
aam
mov
sub
jne
push
mov
push
mov
ret
mov
xor
cmp
pop
mov
ljmp
mov
mov
xchg
cmp
ja
insl
lcall
les
inc
xor
adc
push
fcmovne
cmpsl
stos
or
pop
outsb
push
push
and
lret
dec
pop
push
aas
adcb
js
shrb
jge
mov
stc
xor
and
cwtl
ds
dec
dec
outsb
ret
pop
out
out
fidivs
leave
ficoml
jge
inc
lcall
sub
enter
andb
hlt
leave
xor
add
pop
mov
outsl
fwait
jns
mov
sbb
setge
cmp
adc
or
mov
fstpl
bound
xchg
and
lret
lea
xor
int
xor
mov
inc
sbb
cmp
lret
mov
mov
repz
add
loop
jo
sbbb
cmp
mov
movl
mov
jno
fsub
pop
xchg
pop
decb
jnp
in
jp,pn
scas
pop
xor
sahf
xchg
cmp
nop
enter
jnp
mov
fs
cmpsl
out
enter
add
inc
pop
outsb
lock
inc
loope
jge
mov
jnp
mov
inc
out
out
repz
lea
add
and
pop
inc
out
jbe
enter
push
inc
xchg
push
adc
lock
mov
insl
sbb
jns
icebp
inc
andl
jnp
jbe
les
je
mov
fistps
xor
pop
ljmp
mov
negb
pop
cs
pop
xchg
jno
push
movsb
scas
lahf
nop
push
mov
daa
jnp
fwait
into
into
lahf
add
movsb
jnp
in
icebp
push
add
cmp
and
mov
rorl
cli
int
ljmp
imul
sub
out
mov
aam
jae
jns
addr16
ficompl
testl
stc
inc
lcall
punpckhdq
xchg
xor
mov
das
and
adcb
adc
ret
pusha
popf
shrb
test
shrb
ret
and
pop
es
push
jge
xchg
xchg
dec
inc
mov
into
add
push
mov
std
in
pop
jnp
sub
lret
leave
pop
mov
jae
sbb
jmp
out
jnp
insb
sbb
repz
gs
pusha
add
xchg
idivl
xor
and
loope
pop
mov
out
cmp
cmp
pushf
push
std
push
in
mov
insl
dec
pop
cmp
aaa
stos
lret
icebp
lahf
popf
inc
cmc
aaa
aad
xor
sub
mov
jnp
xchg
pop
mov
push
sbb
add
adc
lds
sbb
shl
and
xchg
push
push
add
int
fmull
pop
adc
loop
in
cmp
movb
notb
les
dec
fcomps
sub
sahf
punpckhdq
dec
xor
push
and
push
mov
inc
mov
lret
push
cs
and
xchg
movsl
xchg
rcr
mov
mov
add
data16
sbb
jge
xor
dec
push
add
inc
jp
xorb
adc
insl
gs
hlt
in
fsubr
push
pushf
mov
dec
sahf
mov
filds
sti
dec
xor
xor
sbb
dec
test
stos
ficoms
mov
and
inc
in
in
ljmp
pop
fwait
mov
cmp
or
sahf
fwait
mov
cmpsl
dec
movsb
stos
jp
xor
and
in
and
mov
and
outsl
and
rcll
loope
jb
adc
xchg
dec
add
jl
out
into
imul
pushl
xchg
pop
sub
lcall
adc
es
lret
sub
subb
aad
jecxz
push
cmp
or
lret
push
mov
out
outsl
jg
imul
inc
jge
xlat
or
fucom
push
xchg
jge
or
xchg
dec
orl
addb
out
aam
push
add
roll
xchg
adc
xchg
ss
daa
cwtl
mov
mov
cmpsb
jle
add
cld
or
stos
pop
stos
sbb
aad
iret
mov
notb
jmp
xchg
call
out
cmp
stc
push
rcrb
xchg
movsl
adc
aam
jg
inc
mov
push
daa
iret
mov
mov
rclb
push
cmp
jecxz
sbb
cmp
and
cltd
repz
jg
cltd
push
rcl
aam
dec
add
imul
push
and
push
xor
sub
aaa
dec
bound
inc
aas
or
cmpsb
mov
fistpl
or
in
jge
cwtl
mov
sub
fs
push
hlt
and
xchg
pop
pop
add
cmpsb
leavew
outsb
aam
mov
sbb
mov
roll
stc
loop
popl
movsl
or
shrb
mov
rorb
fbld
and
mov
mov
outsl
ret
mov
sahf
sub
add
cmpsl
lret
push
inc
xlat
inc
int3
or
dec
jbe
dec
pop
add
mov
jne
shll
and
cltd
fildl
mov
xchg
add
sbb
mov
pop
repz
or
aaa
incl
arpl
xchg
or
push
pushf
ret
inc
mov
aad
push
in
gs
adc
push
and
loop
adc
sub
dec
pop
imul
outsb
mov
call
add
sahf
bound
fcompl
lret
inc
call
sbb
inc
lret
xchg
out
sbbl
and
add
aam
hlt
sti
nop
repz
cmp
push
ljmp
mov
push
pop
call
adc
addr16
dec
movsl
je
pop
ret
out
jb
data16
ja
sub
xchg
fdivl
and
mov
mov
pop
pop
xchg
sahf
push
popa
xchg
je
xchg
mov
pop
mov
icebp
mov
in
mov
pusha
mov
inc
sbb
and
ficoml
jg
rcrb
leave
cmp
aam
pop
or
ror
inc
lret
lret
jecxz
icebp
jp
push
loopne
call
jg
mov
and
adc
or
stos
or
pop
sub
and
mov
mov
daa
stc
inc
inc
loop
aas
push
into
mov
jo
mov
cltd
push
and
xchg
insl
enter
add
pop
push
aam
int
inc
cmc
inc
jo
call
fwait
sub
jno
mov
mov
xchg
fldenv
icebp
mov
dec
popf
cmp
lahf
inc
xor
lret
add
add
jmp
in
pop
xchg
insl
pop
add
pusha
and
or
cltd
inc
jmp
in
inc
sub
std
in
jb
cmp
ret
out
xchg
gs
out
shrb
mov
adc
jg
mov
arpl
lods
cmp
jp
js
pop
fisttps
pop
popf
les
pusha
pop
inc
les
or
cltd
movaps
xchg
js
and
cmp
aas
add
xchg
cmp
enter
ror
pop
push
imul
add
cli
in
lds
xchg
shll
push
addr16
jmp
loopne
test
mov
adc
insl
mov
add
arpl
shll
or
aam
jae
popa
or
iret
and
dec
movsl
push
pop
sbb
int
xchg
sub
pop
cmp
inc
fmul
xchg
fs
dec
ja
icebp
add
pushf
push
mov
pop
and
insb
popa
mov
sbb
sub
decb
mov
xor
divps
aas
or
cmpsl
or
jge
xchg
and
xor
shlb
jo
add
dec
add
lods
jo
pop
mov
pop
pop
pop
cmpsb
lret
push
inc
pop
and
cltd
sbbl
roll
mov
std
jmp
sarb
movsl
mov
or
repz
sbb
push
push
jp
add
pop
js
leave
mov
rcrl
roll
test
dec
call
out
mov
repnz
loopne
cwtl
or
mov
sbb
add
insl
das
js
iret
sbb
pusha
stos
cmp
repnz
fnsave
mov
add
push
daa
mov
pop
push
je
mov
nop
imul
cltd
fwait
adc
inc
cmpsl
mov
mov
mov
cmp
mov
fucomip
jl
cmp
daa
mov
dec
lret
dec
dec
mov
mov
pop
push
push
out
rorl
xchg
shr
sub
arpl
fcom
adc
stos
cmp
mov
dec
ret
insl
mov
pop
xor
ja
imul
dec
enter
test
outsl
and
and
imul
das
test
mov
ror
imul
add
jl
pop
ja
negl
inc
and
rol
mov
xor
or
lock
mov
push
adc
andb
xchg
cmp
insb
push
adc
cs
push
sbb
jecxz
or
and
ja
xor
inc
gs
fiadds
cmpsb
orb
mov
adc
cwtl
inc
adc
aas
out
imul
mov
add
mov
rcll
lcall
or
push
sahf
or
push
nop
inc
stc
mov
addb
add
xchg
movsb
mov
mov
sub
das
iret
outsl
lea
sub
fsubrs
imul
repz
mov
ss
pop
daa
ja
pop
mov
push
adcl
jle
mov
mov
mov
xlat
fwait
ja
jp
add
sbb
leave
jge
aam
xchg
lock
dec
xchg
and
sub
adc
sbb
icebp
insb
sbb
mov
mov
jo
add
in
add
xor
bound
mov
mov
inc
fadd
pop
outsl
rclb
les
hlt
xchg
leave
pop
lea
xchg
xor
test
pop
cmp
xor
inc
xor
shrb
call
clc
stos
and
int3
xor
mov
adc
xchg
cmp
pop
mov
popf
pop
mov
js
mov
mov
testl
mov
loopne
insb
sti
ljmp
out
and
outsb
lcall
scas
call
cmp
and
idiv
mov
subb
hlt
push
imul
fists
mov
and
repnz
xchg
xor
pop
rcl
lods
mov
pop
into
mov
mov
test
jmp
jg
repz
repnz
xchg
stos
enter
dec
decl
mov
mov
lea
cmp
inc
or
cld
jle
mov
test
repz
jge
push
mov
into
ja
mov
lods
test
iret
cmp
repnz
pop
into
xor
fmull
sbb
pop
cmp
mov
sub
dec
fimull
imul
sarl
pop
in
cmpsb
push
daa
fistpll
adc
out
push
stos
sbb
aaa
in
pop
mov
aad
sahf
aas
cmp
mov
add
or
inc
inc
iret
nop
mov
aad
sbb
ficoms
pop
loopne
pop
mov
inc
push
out
ds
into
popf
inc
jg
mov
cmp
lahf
test
xchg
aaa
mov
mov
jp
mov
mov
sbb
jp
or
sub
pop
je
das
or
jmp
xchg
sub
mov
lock
pop
cmpsl
add
dec
push
mov
in
testl
mov
fnstsw
xor
loop
cld
shlb
pop
call
inc
loop
xlat
inc
hlt
adc
inc
inc
mov
test
mov
xchg
cmpsb
jbe
pcmpeqb
cmp
or
mov
movb
and
cli
mov
fwait
fs
dec
repz
add
mov
jge
test
ss
add
lods
and
add
bound
sbb
cltd
test
fwait
subl
add
fsts
pop
cmc
aad
push
lret
insb
pop
push
stos
cld
jb
dec
adcb
mov
push
ja
into
mov
loop
cmp
dec
mov
add
mov
xor
push
mov
scas
cli
dec
fldcw
ffree
repnz
loopne
mov
mov
aaa
in
sti
lahf
and
loope
pop
icebp
ret
xchg
lcall
les
movsl
sub
int3
rep
jb
sub
and
mov
fnstenv
mov
sub
aaa
out
adc
mov
mov
jmp
sub
mov
mov
jbe
mov
std
mov
cmpsl
xchg
xchg
sbb
ss
lods
ss
ret
dec
jg
cmp
sub
out
popf
test
add
popf
dec
jmp
imul
push
ss
inc
mov
test
hlt
adc
test
xor
and
adc
push
cmp
pop
cld
js
xor
aas
cmc
mov
leave
cmp
and
mov
inc
ljmp
inc
push
xchg
and
or
lods
sbb
dec
sbb
jl
adc
movsl
add
call
fisubrs
sahf
repz
data16
pop
popa
adc
pand
push
sbb
cwtl
jno
xorb
or
inc
lods
iret
addb
xchg
shlb
es
push
mov
adc
nop
dec
sarb
outsl
mov
add
sub
adc
hlt
jbe
test
adc
shl
xlat
outsl
pop
push
dec
test
fsubr
mov
pop
jbe
cwtl
cmc
push
xor
inc
cs
sub
ret
mov
sub
or
or
push
sahf
lock
movsb
pop
scas
adc
pusha
jge
xchg
out
xor
rolb
scas
mov
jno
and
pop
push
and
jmp
loope
insb
lea
cmc
or
sti
clc
das
mov
sbb
test
or
push
push
jno
fbstp
aas
stos
jno
jge
jno
popf
sbb
xchg
andb
push
scas
leave
adc
test
mov
xchg
adc
daa
sbb
in
add
loop
xchg
leave
or
push
jmp
ret
or
xor
iret
pop
outsb
testl
inc
std
lock
adc
cltd
addr16
out
test
test
adc
adc
pop
dec
adc
mov
data16
movlps
xor
arpl
pop
adc
adc
sub
xchg
test
insl
aam
mov
and
dec
xchg
pop
cmc
push
negb
mov
rcl
aad
jnp
xor
dec
push
sbb
mov
test
mov
aad
xchg
mov
add
dec
movsl
push
jno
call
xor
bound
imul
nop
ds
add
cmp
outsl
inc
sub
push
push
adc
mov
test
mov
or
xchg
es
mov
cmp
bound
loope
sub
jecxz
shl
fstl
or
add
js
cmp
popf
loop
add
rol
mov
jno
in
lahf
int
idiv
push
pushf
fmuls
inc
or
xor
lret
inc
sub
or
xor
icebp
dec
and
add
or
mov
into
movsb
cmp
pop
int3
pop
and
jne
mov
xorb
fwait
leave
dec
inc
and
sub
adc
mov
and
mov
loop
rcr
xchg
gs
pushf
sbb
mov
mov
push
mov
xor
inc
adc
inc
bound
into
into
mov
loope
adc
mov
push
call
mov
mov
and
xor
mov
cli
lock
pushf
cmp
xchg
es
cmp
mov
leave
inc
mov
adc
inc
shll
outsl
lods
and
out
dec
push
and
into
lret
jae
sub
data16
inc
js
daa
dec
lock
mov
bound
add
inc
stos
enter
fimuls
cmp
sub
in
stc
cmp
fdivs
xchg
dec
dec
pop
xor
push
out
test
and
gs
pop
fidivrl
mov
adcb
cmp
push
imul
testb
fwait
mov
mov
and
pop
jp
mov
in
jle
in
enter
fldcw
popa
mov
mov
push
cltd
das
jne
sbb
adc
sahf
in
xchg
adcb
push
mov
pop
or
xchg
push
sub
movsl
mull
in
dec
outsl
fistl
xlat
xchg
aas
and
dec
fldcw
clc
mov
and
inc
js
fidivl
jecxz
fmuls
into
xchg
jnp
cmp
jbe
jnp
es
fnsave
adc
aaa
xchg
cmpl
cmpsl
sti
decl
je
jns
inc
testb
cmp
or
jne
jno
or
or
push
xlat
repnz
in
daa
cli
imul
push
pusha
stos
pop
cmp
sub
sti
mov
sarl
xor
jp
or
scas
in
imul
lods
mov
setle
ljmp
inc
pop
cmpsl
vpmulhuw
das
inc
jno
nop
das
ljmp
pop
loopne
xchg
add
pop
fcoml
mov
fcoml
mov
rcll
inc
pop
loop
lds
decb
jns
rorb
and
and
jge
ror
in
adc
test
dec
pop
cmpsb
mov
or
lcall
push
cmp
mov
movsl
sub
int
sbb
sub
sbb
mov
xchg
cltd
cmp
sub
movsb
and
sbb
andl
fidivl
clc
sub
sbb
fwait
mov
adc
jns
sub
or
negl
cmp
js
ja
incl
out
bound
xlat
push
mov
pop
gs
jo
push
jmp
sar
xorl
dec
mov
out
pop
push
adc
sub
add
cmpsb
jl
bound
bound
cmp
add
gs
idivb
pop
cli
pop
sub
mov
sbb
xchg
dec
fldcw
jae
out
and
sbb
faddl
mov
into
pop
push
push
fs
xchg
daa
nop
movsl
int3
idivb
push
jp
repz
dec
pop
or
mov
adc
cld
shl
sbbb
mov
int
aam
mov
sbb
adc
pop
cmp
mov
inc
inc
mov
lret
pop
adc
sbb
xchg
xor
xchg
push
ror
insb
push
xchg
and
pop
addr16
push
adc
xlat
mov
or
cmpsl
pop
push
mov
dec
cld
lret
inc
jo
mov
adc
jns
mov
jl
lods
xorb
icebp
dec
xchg
clc
fistps
inc
loop
scas
cmp
popf
scas
gs
cwtl
jno
add
xor
mov
lods
jg
mov
push
into
or
fsubrp
pop
imul
fildll
jecxz
mov
stos
sub
stos
cmp
mov
xor
data16
je
xchg
pusha
push
mov
pop
test
sbb
lock
popa
imul
cmp
pushf
sub
mov
in
cld
mov
pusha
and
jo
push
subl
bound
bound
js
add
push
mov
sbb
or
test
sbb
adc
lret
mov
pushf
adc
or
lahf
icebp
je
stos
push
int3
pop
cmpb
mov
sub
repz
jae
mov
xchg
stos
cmp
sbb
sub
aam
xor
push
jbe
fildll
icebp
daa
ds
push
and
fdivr
push
stc
mov
pop
or
xor
mov
std
hlt
cwtl
mov
test
es
lods
or
mov
sbb
icebp
jbe
cmpb
call
scas
orb
mov
dec
aam
stc
dec
ds
inc
fnstenv
cmp
in
ss
outsb
iret
test
mov
in
imul
jns
ja
or
lods
jae
xorl
lcall
push
and
xchg
mov
mov
fnsave
fisubrs
cmp
sub
xchg
outsl
aad
push
hlt
or
pop
pop
push
fs
neg
leave
ss
xchg
xchg
mov
sbb
out
dec
into
adc
jbe
or
lret
mov
subb
jg
mov
cmp
sbb
mov
cmp
or
cs
popa
xor
outsb
in
and
or
or
and
add
push
loope
cmpsl
push
pushf
mov
jecxz
pop
hlt
or
mov
and
mov
inc
ret
xor
xor
movb
leave
pop
sub
lret
adcb
or
mov
sbbb
push
push
loopne
stos
and
subb
stos
imul
rol
adc
sbb
mov
mov
xor
cmp
push
sti
fdivs
pop
sbb
lret
out
sbb
test
gs
jne
into
stos
sarb
stos
sub
test
stc
mov
mov
sbb
mov
push
fiadds
js
test
dec
aad
mov
stos
orb
jp
shrb
loopne
or
in
lea
push
call
ret
jl
or
sbb
inc
adc
mov
out
mov
cltd
andb
fcmovbe
mov
jl
add
mov
clc
push
xlat
push
pop
push
cli
test
fildll
mov
in
dec
mov
pop
mov
iret
or
sub
mov
mov
xchg
or
inc
js
js
stos
enter
loope
arpl
sbb
lret
sub
divb
setg
add
push
lret
repnz
cmc
xor
jbe
mov
nop
arpl
mov
cmp
jnp
pop
sbb
pop
cmp
data16
call
pop
adc
sub
pop
add
inc
mov
mov
aam
mov
jle
push
inc
lods
sbb
insb
mov
sarl
out
bound
cmp
cmp
cmp
sbbl
jne
cmp
sbb
aaa
sub
ja
adc
inc
sbb
ss
cltd
mov
shlb
ss
loopne
mov
into
push
sub
ss
dec
pop
xlat
scas
out
test
ds
push
or
push
int3
xchg
xchg
cmpsl
mov
movsb
jmp
ret
push
int3
rol
aad
in
pop
es
xchg
std
sahf
sahf
daa
les
xor
stc
jl
scas
sub
data16
xchg
add
pop
push
ret
std
inc
cld
movsl
cmpsb
in
cwtl
aaa
cmp
daa
adc
cli
pop
pop
mov
inc
push
push
push
lcall
insl
mov
loop
add
fdivs
mov
call
push
pusha
mov
les
rcll
xorl
add
nop
push
rorw
push
pop
adc
ffreep
xchg
arpl
shl
sub
jo
packsswb
push
cli
fwait
les
in
scas
jae
mov
adc
mov
fwait
fwait
aas
leave
mov
data16
pop
jl
sbb
cmc
sbb
mov
out
push
jb
fsts
dec
in
mov
into
shlb
mov
loop
dec
jge
mov
jae
or
lods
push
xor
dec
cmp
stos
fldt
pop
or
imul
xor
loop
out
ds
xlat
fildll
aas
lcall
cmp
outsl
adc
mov
rolb
sbb
jecxz
popf
in
lahf
sbb
es
mov
out
popf
bound
mov
shlb
out
push
sub
sub
out
andps
push
xor
xor
movsb
push
jl
mov
shrl
ds
pop
divl
sub
xchg
fbld
cmp
int3
cltd
add
fmull
cmp
ss
imul
mov
fiaddl
pop
push
les
add
fistpll
retw
repz
insb
add
push
test
test
jnp
shrl
push
ficompl
mov
xchg
neg
mov
push
inc
xchg
outsl
ss
jns
ror
fwait
repnz
jae
xlat
outsb
lock
sbb
daa
cld
sub
mov
mov
push
mov
or
fistps
mov
cmp
xchg
lods
xchg
cmp
jge
pop
push
mov
movsb
mov
adc
lret
aaa
test
sub
dec
nop
movsl
dec
and
pop
lcall
mov
adc
push
push
fdivl
dec
test
lock
pop
pop
in
lds
add
imul
add
jb
push
xor
lds
nop
jle
sar
mov
sahf
adc
mov
pop
ljmp
push
xchg
scas
lock
add
les
enter
inc
cltd
jb
xor
jecxz
rolb
out
outsb
ret
and
pushf
test
pop
lock
and
outsb
leave
add
pop
imul
push
add
test
xchg
cld
sub
popa
inc
dec
mov
cld
out
sbb
in
pop
or
popf
mov
fbld
in
repnz
pop
adc
pop
aas
dec
pop
jle
sbb
xchg
pop
pop
outsb
das
mov
fnstenv
inc
fldenv
xor
js
mov
into
cmp
icebp
add
ds
stos
mov
jp
fs
push
in
pusha
movsl
pop
pop
and
jge
push
or
xchg
insb
push
add
jecxz
rolb
sarl
adc
sti
inc
adc
cmc
out
mov
aad
mov
dec
mov
jne
sbb
mov
push
jmp
pop
mov
les
push
add
rcll
mov
lcall
repnz
jl
cmp
pushf
fmul
in
mov
fnstenv
or
inc
jne
andb
and
outsb
popf
pushf
add
ret
or
sbb
cwtl
xchg
enter
rorl
sbb
and
push
shlb
push
inc
aaa
jae
inc
pop
pop
popf
rorb
into
leave
dec
sbb
or
mov
nop
fldcw
cwtl
mov
lahf
arpl
mov
in
sub
sub
mov
mov
or
pushf
adc
sbb
sub
imul
or
mov
ret
xchg
push
clc
jl
lahf
cmp
cmp
cmpsl
xchg
dec
aad
inc
cmp
xchg
out
or
adc
leave
pop
jae
jmp
out
jg
jg
push
inc
out
movsb
jno
or
ja
lods
iret
jnp
sbb
lcall
mov
dec
xchg
mov
daa
push
jbe
sbb
or
xchg
xor
and
lcall
jp
arpl
mov
mov
adc
cmp
cmp
jno
stos
jae
pop
add
sub
cli
push
das
dec
loopne
mov
push
enter
loopne
insb
js
or
shrl
xor
mov
pop
mov
pusha
outsl
sbb
mov
aas
sbb
xchg
sbb
push
jecxz
sbb
loopne
sub
jb
jns
lret
add
out
outsb
lods
in
gs
fbstp
ja
push
mov
add
sbb
push
and
sub
mov
or
in
xor
mov
pop
fistpll
mov
mov
jg
xlat
or
insl
loop
adc
sbb
aam
sub
incb
rol
stc
cmpsl
mov
mov
bound
std
adc
pop
insb
pop
inc
or
outsb
mov
stc
cmp
pushf
mov
pop
add
cs
sbb
in
cmpsl
mov
push
adc
and
insb
pop
jmp
int
push
adc
stos
add
jns
cmpsl
sbbb
ss
jb
xchg
push
sbb
jo
decl
xchg
pop
test
xor
insl
xor
iret
push
cmp
pop
repnz
cmp
cmp
scas
sbb
mov
sbb
adc
sub
lahf
adc
and
fwait
popa
or
mov
jo
adc
add
jno
dec
jmp
and
add
jb
and
mov
jle
jmp
shlb
stc
pop
mov
cmpsl
cs
push
repz
sub
into
fcom
push
xchg
insl
test
dec
mov
imul
and
repnz
jne
sub
inc
leave
mov
ret
mov
cmc
cli
mov
decl
jle
sbb
scas
add
ret
pop
xchg
push
stos
into
pop
mov
adc
ret
xchg
out
scas
sahf
movsb
iret
repz
lahf
rcrl
stos
dec
jp
push
jecxz
stos
pop
and
xchg
mov
aam
xchg
pop
movb
sbb
dec
clc
pop
pusha
push
xlat
push
addr16
outsb
mov
mov
mov
cmp
jmp
je
lock
cmpsl
mov
lods
jmp
shll
in
outsb
add
imul
push
insb
mov
and
cmp
mov
sub
jg
inc
and
insl
xchg
add
sub
mov
sahf
paddb
clc
jle
pop
jno
dec
arpl
ss
lcall
lds
xor
pop
addb
cs
sahf
pop
je
sti
fnstenv
cmc
jb
outsl
in
daa
popf
jne
xchg
cmp
inc
push
dec
jbe
ret
xorl
fidivl
repnz
movsl
cltd
jo
lahf
arpl
dec
cmp
std
push
xchg
or
xchg
fstps
js
push
bound
outsl
cltd
bound
jno
jecxz
mov
sbb
jg
and
xchg
cwtl
xor
xchg
fstpl
jle
popf
add
iret
stos
or
imul
add
cmp
push
enter
mov
jb
adc
fnstenv
and
dec
lods
out
inc
dec
mov
test
in
push
fiaddl
cli
push
mov
stc
cli
xor
andb
sbb
jge
add
sarb
lahf
jae
ja
cmp
aam
inc
js
mov
stos
js
movsl
push
jb
and
in
mov
mov
sub
subb
sahf
and
inc
push
jbe
aam
mov
jg
adc
mov
or
sbb
andb
add
cmp
ss
pop
mov
push
aam
arpl
inc
sbb
loop
inc
je
inc
cmpsb
loope
icebp
fs
mov
or
imul
sbb
mov
dec
cmpsl
out
out
push
outsb
push
mov
adc
xor
inc
mov
dec
ret
add
popa
or
jl
repz
xchg
pop
jae
leave
mov
pop
jae
jl
push
sbb
mov
sti
fs
js
inc
out
mov
lods
jmp
push
pop
adc
repz
fcoms
or
jnp
rcr
dec
aam
mov
adc
add
mov
icebp
ret
fisubrl
pop
or
inc
sbb
cs
sti
cmp
pop
mov
pop
xlat
inc
dec
sbb
adc
icebp
test
sbb
sub
jne
jl
stos
mov
mov
mov
sub
pop
jb
iret
into
mov
push
mov
and
rcr
pop
repz
push
or
in
fidivs
andl
pop
mov
mov
jns
test
and
rol
pushf
paddq
xchg
sbb
lcall
push
lea
pushf
jae
bnd
xchg
inc
mov
cmp
mov
or
sbb
out
repz
and
mov
insl
cwtl
xchg
cmp
mov
out
inc
lock
adc
test
lock
mov
ret
pop
icebp
loopne
mov
sbb
outsb
sets
push
mov
adc
jge
std
push
mov
mov
inc
adc
fbstp
add
dec
sbb
adc
loopne
rol
jo
imul
xor
js
cmpsb
add
movsb
outsb
out
mov
iret
lcall
xor
cmp
push
in
or
cmp
cld
jle
ds
pop
mov
lea
and
sbb
cwtl
sahf
pop
jg
mov
mov
iret
int3
mov
or
popf
fimull
mov
fimuls
jns
les
daa
add
add
and
cltd
mov
and
movsb
xchg
jae
inc
mov
push
repz
aas
jmp
dec
cld
aam
lea
mov
loopne
fists
mov
push
std
divb
mov
sbb
pop
xchg
cmc
int3
cmc
and
out
ret
push
mov
insl
fldcw
adc
mov
negb
jp
push
gs
sbb
adc
jo,pn
std
pushf
sub
add
or
mov
mov
and
hlt
push
mov
lret
ret
pop
ss
xor
mov
cwtl
stos
fstl
insl
gs
mov
mov
insb
das
dec
sarb
jl
adc
push
lds
jno
push
out
shl
in
jb
addr16
xor
shlb
movsb
iret
cwtl
stc
scas
stos
or
mov
stos
lock
stos
subb
lret
scas
cmpl
adc
add
add
mov
mov
and
push
ljmp
xchg
fwait
inc
lcall
lods
dec
inc
mov
add
xchg
imul
insb
aas
jecxz
pop
clc
stos
lret
mov
and
popf
pop
xchg
fs
inc
cmp
ja
idivl
sbb
cmp
jo
mov
lahf
inc
push
or
xchg
jp
push
sub
rorb
mov
ds
sbbb
add
loop
adc
hlt
fidivrs
xchg
mov
push
xchg
pop
add
jge
fs
shufps
adcb
loope
sub
xor
clc
das
cs
testl
fwait
roll
pop
cmp
xor
sarl
add
out
cmpsl
mov
jmp
jbe
dec
ds
adc
repz
hlt
mov
pop
jecxz
fstl
push
add
add
dec
lret
pushf
movsb
mov
sbb
sub
or
movsb
pop
arpl
aas
movsl
push
xor
push
mov
mov
pushf
js
std
stos
insl
int
and
sbb
lcall
lea
es
lea
mov
adc
jno
add
add
jb
and
loop
cmp
fisubrs
ficoms
lret
xor
mov
icebp
daa
nop
add
push
cltd
jno
mov
ret
loop
or
stos
xor
fisttps
xor
jno
orl
mov
and
insb
stos
ljmp
push
mov
and
mov
xor
sbb
inc
or
les
xor
fwait
sub
clc
xchg
mov
scas
mov
pop
pop
cmp
mov
insb
scas
les
int
add
loope
mov
mov
sbb
outsb
in
mov
adc
iret
push
rcl
xor
ljmp
roll
jnp
pop
ret
loope
mov
add
imul
sbb
pop
sub
mov
push
adc
jecxz
lahf
das
xchg
out
sbb
mov
fs
subb
lahf
ss
test
pushf
stc
or
stos
loope
test
fs
popf
inc
sti
jno
push
sbb
enter
ds
int3
loopne
mov
insb
lods
jns
cmpsb
cmpsl
cmovne
test
insl
sti
andb
stos
mov
gs
fwait
lcall
jg
jno
cmc
aas
mov
mov
shl
outsl
pop
and
push
addb
jmp
or
inc
ret
lcall
push
push
inc
fistl
mov
fisubrs
xor
and
lock
cld
mov
adc
inc
cmpsb
popf
inc
mov
sbb
mov
lret
fadds
mov
sbb
ja
xchg
in
mov
inc
mov
push
out
cmp
jnp
jg
hlt
aaa
pop
dec
mov
cld
mov
pop
or
and
test
push
mov
shll
xor
mov
xchg
mov
popf
fdivrs
dec
xchg
xor
je
shlb
arpl
int3
adc
add
mov
adc
and
pop
test
cmp
in
rorb
push
cmp
mov
sbb
stos
pop
cmpsl
or
in
mull
pop
cmpsb
sarb
out
andl
daa
pop
adc
push
mov
sub
sub
cmp
mov
xchg
ljmp
mov
jb
push
mov
pusha
testb
inc
cmp
rclb
std
cmpsb
adc
psubq
mov
shlb
mov
cli
xor
repnz
fs
inc
das
or
loopne
push
int
mov
xchg
movb
jecxz
push
out
jns
ss
ljmp
and
xor
pop
loop
add
arpl
pop
adc
cltd
es
adc
stos
idivb
pop
mov
or
mov
lcall
outsb
outsl
sub
or
add
xor
pmaxsw
jmp
pop
jae
pop
adc
fstpt
xchg
in
arpl
inc
mov
es
adc
push
dec
add
jno
sarb
mov
push
sbb
test
add
outsb
ret
adc
fmul
adc
andl
dec
jae
int
mov
in
iret
xor
and
aas
mov
dec
outsb
or
adc
and
outsl
stos
jns
mov
xchg
jno
pusha
out
lahf
fistpl
mov
pop
scas
gs
arpl
cmp
mov
popl
pop
lahf
outsb
xor
test
lods
mov
and
incl
mov
stos
adc
test
or
mov
iret
mov
fs
rolb
icebp
pusha
or
es
push
js
je
xor
xlat
adc
or
orb
sti
fisttps
and
add
jnp
out
fnstsw
sbb
jno
cmpsb
xor
cltd
mov
sub
dec
inc
adc
cld
mov
cmp
dec
sub
mov
aam
leave
outsb
and
jecxz
in
cmp
sbb
int
push
rorl
imul
xlat
push
fs
fisubl
or
rcll
jno
pop
inc
sbb
cmp
pop
pop
mov
xor
push
repz
negl
add
xor
sbb
fldcw
fisubrl
mov
lods
push
lock
fisttpll
nop
add
addb
or
int3
adcb
sub
ss
fs
pop
add
inc
std
sub
out
jl
ja
rcrl
xor
cmp
dec
mov
jb
hlt
mulb
or
sbb
xchg
outsl
mov
push
add
push
ret
and
inc
add
mov
pop
xchg
popf
xor
aad
je
test
mov
adc
push
add
mov
inc
scas
lea
ficompl
or
pusha
jle
pop
fisubs
int
xchg
pop
sub
xchg
out
cmp
cmc
adc
repnz
outsl
rclb
mov
ret
dec
enter
and
push
pop
repz
jno
movsb
cld
pusha
call
sbb
lds
ds
ljmp
xchg
jle
insb
dec
loop
out
add
jae
sbb
sub
jmp
pop
fldenv
pop
xor
hlt
dec
dec
mov
idiv
dec
xor
sahf
stos
sbb
push
and
das
add
ret
sbb
cmpsl
sbb
sub
push
xorl
sar
cmp
adc
test
shr
loop
decl
add
out
ret
pop
pop
out
hlt
pusha
sahf
cltd
decb
xchg
jl
rcr
fcoms
data16
imul
xor
sar
mov
pop
push
test
or
adc
cmpsl
test
aaa
std
negl
bound
scas
hlt
cmp
aam
add
addr16
sub
pushf
bound
pop
or
fnstsw
shrb
test
add
les
inc
test
scas
mov
mov
cld
dec
lcall
jnp
call
sub
pusha
pop
inc
push
cmp
nop
std
mov
dec
add
inc
adc
in
out
sbb
filds
add
ds
sub
lock
testl
mov
inc
and
imul
adc
aam
in
sub
mov
jge
inc
inc
mov
sbb
pop
cs
lock
test
jbe
adc
push
decb
sbb
and
call
pop
mov
xor
pop
out
rcrb
jecxz
adc
mov
push
sub
popf
lds
out
sub
movsb
out
sub
loopne
lret
push
xchg
mov
dec
lds
adc
add
inc
pop
push
cwtl
icebp
js
mov
loope
sub
out
inc
adc
dec
adc
inc
or
or
stos
mov
sbb
movsl
lahf
fists
push
insb
int3
sarb
call
insb
ljmp
jmp
jno
loopne
dec
aas
pop
je,pt
lahf
mov
je
lock
imul
jp
ror
sbb
add
mov
in
dec
icebp
adc
mov
jno
pusha
cmp
in
inc
adc
jbe
push
xchg
aaa
test
fneni(8087
cmp
sahf
dec
and
jns
cmp
bound
movsl
jg
sub
cld
xor
pop
les
loopne
cmpsb
push
or
sbb
mov
cli
jmp
jo
fists
add
cmp
inc
mov
movsl
call
shl
add
inc
mov
imul
inc
mov
dec
lea
lea
aad
push
imul
mov
mov
jle
mov
adc
fbstp
jne
pop
pop
subb
fisttpll
pop
add
cmp
jmp
ds
sbb
push
push
test
lahf
sbb
pop
mov
and
pop
nop
cmpsb
fmul
psllq
mov
test
xchg
dec
pusha
xorl
push
sbb
clc
sub
enter
pop
mov
cmp
or
dec
dec
shlb
mov
ficompl
inc
push
lods
call
pop
les
jecxz
popa
arpl
sarb
fidivs
xor
loop
add
incl
js
or
std
add
mov
and
mov
xchg
dec
push
sbb
add
cmp
xchg
jne
inc
hlt
mov
repz
out
xchg
jmp
mov
aam
jge
push
pushl
sbb
and
dec
int3
xchg
movsb
adc
pop
cmp
or
cs
pop
jp
into
sbb
fcoml
mov
cmp
int3
nop
mov
pusha
pusha
xchg
js
dec
ss
jge
xchg
cli
inc
ja
adc
xlat
xor
mov
es
ja
jnp
popa
insb
push
ds
shll
lods
inc
or
jecxz
mov
jnp
xchg
mov
sbb
repnz
and
push
xor
outsb
cmp
sub
lret
sub
cltd
sbb
pop
daa
xchg
scas
orl
sbb
xchg
lock
lods
adc
pop
mov
mov
mov
xor
loope
mull
pop
fdivrl
ficoml
int
mov
mov
mov
or
add
push
rcr
insb
sub
or
push
push
imul
push
push
or
dec
dec
leave
shrb
jnp
inc
psubb
mov
inc
mov
ljmp
jne
pop
sbb
addr16
fidivl
xchg
cltd
sbbl
popf
int3
sbb
mov
test
dec
lret
or
js
mov
fists
add
pop
loop
and
hlt
xor
mov
cltd
ret
gs
mov
mov
mov
cld
fiadds
rorb
mov
adc
clc
push
fs
nop
test
cmpsb
mov
aas
lret
ret
or
or
sbb
sbb
mov
adc
sub
mov
int3
push
loop
rcl
in
jl
loopne
into
xor
mov
or
fbstp
jno
xor
cmp
clc
jp
mov
mov
push
xor
cltd
je
inc
jo
lahf
aas
push
fstps
lret
lahf
std
xor
adc
insl
push
jo
mov
or
aaa
mov
mov
push
stos
lretw
or
pop
cmc
pop
adc
sub
push
out
push
sbb
fiaddl
sub
aam
sub
cmp
out
mov
loopne
xchg
push
mov
jle
inc
mov
push
je
mov
xor
test
or
imul
dec
sbb
xor
push
nop
mov
pusha
mov
dec
mov
mov
mov
fmuls
mov
mov
xor
pop
aaa
lret
xor
insl
xor
lock
xorl
sbb
pushl
rcll
sti
call
iret
roll
sbb
daa
sbb
int
scas
or
mov
mov
sbb
int
dec
mov
sub
ja
jb
int
mov
sub
adc
sub
push
or
std
outsl
jnp
sahf
testl
fidivs
divb
bound
popa
mov
mov
iret
pop
adc
mov
cwtl
mov
not
rol
jb
mov
cmp
les
ret
jb
xor
push
cwtl
pop
and
pusha
pop
sbbl
and
adc
stos
xor
add
xchg
test
int
sbbl
xor
pop
adc
decb
addr16
fimull
mulb
add
sbb
or
repz
andb
dec
pop
pop
ja
add
and
push
ljmp
dec
fisubrs
icebp
sub
xchg
insl
lahf
add
xchg
movsl
int
xor
jno
mov
enter
xchg
out
sahf
pop
add
sbbb
icebp
cmp
or
imul
aas
js
and
popa
lods
shlb
inc
pop
xor
jns
ret
into
aaa
ss
sub
push
mov
pop
cmp
rcrb
insb
mov
pushf
mov
pop
jge
fstpt
add
inc
dec
add
push
fs
sbb
out
add
imul
push
mov
cmp
sub
mov
sub
adc
outsb
or
jp
in
pop
cltd
aas
cmp
js
mov
mov
nop
inc
fwait
out
sub
pop
call
outsl
fwait
pusha
add
in
xor
push
cmp
scas
clc
mov
push
pop
stos
sahf
mov
dec
test
data16
jecxz
into
call
jecxz
test
lcall
mov
out
fwait
dec
cmp
out
sbb
dec
mov
repz
mov
add
xchg
mov
cmpsl
je
fst
fstpl
stos
mov
mov
stos
xorl
push
push
pop
addr16
test
cmp
cltd
ljmp
lahf
inc
or
pop
push
xor
sub
fldcw
fwait
test
fldt
aam
push
cwtl
subb
outsb
inc
and
ljmp
inc
insl
xchg
xchg
ss
pusha
mov
cwtl
clc
push
and
fldenv
hlt
add
ret
pop
mov
repnz
imul
sub
bound
mov
xor
roll
cmp
mov
dec
pop
push
shlb
sub
mov
or
cmp
movsl
das
or
fdiv
lret
cmp
sbb
pusha
xor
push
jbe
inc
clc
sub
loope
push
xchg
jns
jecxz
aas
insl
gs
test
je
and
leave
cmp
pop
push
imul
jo
mov
ja
xor
pop
gs
push
adc
push
jb
pop
xchg
mov
loope
dec
pop
jne
and
daa
cld
imul
icebp
xor
jb
jne
insl
xchg
insb
mov
jg
or
aad
pop
inc
call
pop
arpl
daa
mov
xor
fcom
test
jmp
mov
inc
or
insl
hlt
inc
call
in
test
dec
and
push
loope
aas
mov
psrlq
icebp
push
pop
inc
adc
stos
sbb
sti
push
pop
xor
mov
jge
pop
xchg
test
and
lret
jle
jge
int3
jne
gs
jb
push
out
add
jnp
repz
dec
fdivl
fldln2
daa
jl
cmpsl
ja
icebp
pop
sbb
cmp
loope
gs
lock
mov
xchg
nop
ret
pop
jbe
outsl
cmp
cs
lods
jp
out
subb
pop
outsb
jno
ss
mov
sbbl
fidivl
or
or
iret
push
cmp
cmpl
je
les
dec
adc
iret
test
mov
ja
loopne
or
and
adc
sbb
push
pop
bound
sub
and
sbb
mov
dec
lods
cli
lret
mov
movsb
dec
jo
popf
sub
push
jle
jbe
dec
lahf
inc
icebp
test
push
pop
cwtl
sbb
rcl
add
dec
imul
jmp
jo
sub
mov
add
aas
mov
into
push
je
mov
xchg
add
mov
orl
mov
jb
cmp
rcrb
pushf
loop
jecxz
mov
mov
pop
push
orb
cmp
out
test
arpl
repz
jns
fiadds
push
cmp
nop
xlat
cmp
push
and
scas
ds
pop
fiadds
mov
mov
sbb
cmp
dec
jb
out
mov
rol
adc
dec
mov
ret
or
sub
fisttpll
pop
push
cmp
adc
mov
add
pop
add
daa
and
sti
cli
add
das
in
fld
pop
sub
fidivrs
dec
adc
pushl
dec
test
rcrl
and
insb
inc
mov
pop
push
lds
sub
push
nop
mov
movsl
clc
xchg
mov
and
jle
push
rolb
jno
jb
adc
ljmp
insl
sbb
call
push
push
mov
inc
hlt
fstpt
hlt
arpl
sub
pop
pusha
jge
out
jl
xchg
mov
das
jmp
dec
sbb
dec
adc
add
mov
mov
pop
xor
pusha
aaa
lock
stos
je
push
and
jecxz
inc
imul
push
mov
cmp
xor
or
push
push
xchg
jecxz
insb
sbbb
inc
jmp
dec
add
ret
sub
cmp
cmp
mov
xchg
push
std
leave
adc
push
sbbb
mov
jns
pop
lock
push
sti
bound
neg
mov
xchg
out
lock
inc
mov
jmp
xor
push
enter
add
inc
jb
jmp
push
dec
and
cmpsl
imull
xlat
add
sbb
popf
stos
fildl
adc
mov
sahf
and
in
bound
sbb
cmc
aas
clc
test
xor
repnz
dec
xchg
and
hlt
test
popa
sub
fs
mov
cwtl
fcmove
dec
cli
je
cmp
jno
jmp
jne
and
pop
imul
mov
roll
cld
sbb
int
inc
out
xor
xor
aam
xor
cwtl
sarb
cmpl
cmpsl
or
jns
mov
jns
cli
cs
mov
mov
xchg
loopne
outsb
mov
jecxz
shll
or
lds
push
inc
test
push
je
xor
sti
or
dec
xlat
std
jnp
repnz
mov
jmp
xchg
or
nop
xchg
or
adcb
lds
push
ret
ret
sbb
ljmp
das
and
fcoml
aaa
repz
mov
es
inc
mov
imul
aaa
sbb
test
push
pop
xchg
ljmp
inc
jnp
jno
ficompl
push
dec
movl
pop
in
and
adc
and
int3
test
sti
leave
mov
dec
xchg
movsl
nop
pop
lret
pop
sbb
outsb
ljmp
repz
stos
mov
mov
or
int3
mov
lret
mov
inc
dec
imul
dec
arpl
cmpl
iret
lcall
loop
cmpsb
lds
add
or
cmp
pop
cmp
mov
es
ficomps
aaa
mov
cltd
and
cmpsl
cmp
fldl
jb
stos
pop
jg
stc
inc
cmpsb
dec
stc
or
rcrb
mov
movsl
out
jle
sub
jp
sti
and
dec
mov
test
pop
or
dec
xchg
lea
les
cld
in
add
xchg
out
aad
in
in
fs
mov
xor
andb
sub
and
inc
outsb
jge
repnz
dec
sbb
movb
cmp
scas
into
mov
jl
pusha
int
jge
sub
cmp
mov
lods
cs
repnz
gs
lods
incl
pushf
inc
test
insl
xor
es
scas
mov
push
in
in
jb
pop
adc
or
inc
sub
mov
and
push
cmpsb
adc
pop
arpl
in
jecxz
imul
subb
lds
sbb
testb
pop
xchg
dec
rolb
sub
adc
inc
data16
inc
dec
sbb
xchg
addl
jnp
imul
addb
jae
add
pop
jae
mov
outsb
fwait
lahf
rorb
push
xchg
and
fptan
test
mov
fs
adcl
push
fsubrs
add
iret
dec
and
jo
mov
sub
iret
jae
movsb
mov
loope
mov
pop
insb
sbb
repnz
in
ljmp
mov
pop
lcall
mov
ja
loopne
cmp
fiadds
inc
mov
jbe
mov
and
mov
aam
push
push
adc
shl
cltd
mov
cmp
dec
int3
push
mov
push
xor
roll
repnz
push
popf
fs
xchg
and
das
mov
jl
xchg
out
jg
aad
mov
jns
out
xchg
outsl
in
lcall
sahf
dec
fwait
shll
push
mov
orl
cld
addr16
cmp
sbb
adc
cwtl
and
xchg
mov
popf
fstp
fimuls
daa
mov
mov
out
repnz
aam
pop
fsubs
mov
lahf
stos
cmpsl
dec
dec
xchg
lcall
jne
cmp
and
mov
or
or
pop
test
and
in
add
jge,pt
in
xchg
iret
cmpsl
ljmp
mov
cld
addr16
xor
movsb
jne
sbb
and
ljmp
in
int3
andl
cmpl
xchg
lea
sbb
sbb
ficomps
aad
mov
adc
mov
mov
into
nop
mov
add
xor
jmp
ret
ss
shl
xor
push
mov
jmp
fnstsw
lock
inc
cmc
add
xlat
cld
jge
cmc
push
inc
sbb
jae
xchg
mov
imul
popf
or
out
bound
rcr
adc
adc
scas
out
push
sbbb
cmpb
dec
aad
out
mov
in
jne
pop
stos
mov
lret
pop
cs
enter
push
hlt
out
push
pop
add
in
jne
test
jle
fisttps
pop
scas
mov
fdivrs
mov
mov
xchg
lods
and
shr
ret
jmp
xor
pop
fdivrp
push
insl
scas
add
rolb
loope
mov
push
mov
cmp
mov
cmp
dec
sarl
pop
int
xchg
pop
stos
enter
cmpsl
pop
push
push
cli
push
in
adc
leave
pop
push
sahf
inc
stc
cmp
lahf
rorl
int3
cmpsb
rolb
push
fstpt
xchg
and
pushf
fidivs
add
fildll
out
fsubr
ljmp
pop
cmp
frstor
movsb
xor
pop
loopne
test
popf
mov
sti
lea
lahf
lods
mov
xchg
fisubrs
cmp
sbbl
mov
fs
dec
xchg
jo
jnp
jp
js
adc
mov
jmp
cmp
loopne
addr16
out
cmp
shll
cld
jle
lea
lcall
loopne
movsb
inc
testl
mov
lcall
adc
dec
bnd
loope
hlt
inc
cltd
lcall
iret
jcxz
fcompl
lock
push
addr16
add
cmp
js
adc
mov
or
mov
add
sbb
rolb
aad
xchg
or
add
push
xlat
fimuls
add
or
ret
sbb
pop
mov
iret
stos
xchg
push
ss
xchg
or
scas
out
icebp
push
cmp
dec
or
and
pop
pusha
cmp
sub
sbb
add
dec
mov
in
popa
and
xchg
cwtl
std
lods
lret
out
jecxz
mov
add
call
cltd
add
mov
mov
cwtl
loope
cmp
sbb
xor
push
sub
loopne
dec
cltd
icebp
sbb
pop
inc
popa
or
push
sub
dec
aad
popa
jmp
ljmp
sub
xchg
pop
fcomp
repnz
rcrl
add
mov
filds
jmp
popa
pushf
push
jle
xor
ss
mov
sbb
jne
add
add
cmp
mov
sbb
sub
jae
clc
xor
outsl
ftst
sub
mov
and
and
sarb
pop
lods
das
inc
sub
cltd
ret
jnp
repz
jmp
lods
pop
add
cli
aaa
pop
dec
arpl
jmp
and
mov
dec
dec
imul
push
inc
js
dec
xchg
jl
or
push
sbb
adc
pushl
pop
subb
mov
mov
xchg
mov
gs
ret
int3
and
dec
mov
data16
cmp
inc
inc
adc
std
cmp
test
xor
mov
aas
mov
push
push
leave
mov
shlb
into
sarb
pop
dec
std
sbb
mov
shrb
aas
adc
pop
inc
inc
push
iret
sbb
jns
mov
push
mov
inc
repnz
insl
fdivl
ja
lcall
fsubl
stos
jns
mov
inc
clc
pop
or
and
sbb
and
out
or
int3
repz
sbb
test
fld
xlat
xor
pop
scas
mov
aas
jno
lret
in
fistpll
in
mov
call
pop
dec
pop
mulb
enter
pop
xchg
out
sub
daa
arpl
ljmp
dec
sub
cmp
xor
inc
pop
pop
ss
loopne
cmpl
and
jg
jb
roll
or
xchg
bound
pop
jbe
daa
js
fiadds
add
push
pop
scas
jge
xchg
fiadds
dec
cmp
in
xchg
iret
pop
mov
mov
mov
sub
imul
mov
stos
jnp
mov
lea
or
adc
push
xchg
gs
xchg
pop
add
inc
out
daa
jg
js
xchg
push
mov
cld
mov
lds
sub
jnp
scas
or
xlat
dec
push
push
icebp
lahf
sti
mov
adc
push
adc
repz
xlat
lods
and
pop
and
ss
cli
push
ja
rorb
lret
add
sub
mov
fadd
push
lock
cmpb
inc
sbb
mov
ret
and
aam
mov
aaa
aas
outsl
mov
push
sbb
lret
sahf
loop
test
inc
push
jmp
loope
sti
notl
fisubl
inc
fbstp
pushf
fwait
cmp
scas
mov
or
je
sbb
cmp
hlt
cmp
clc
or
mov
and
in
push
ret
mov
push
or
cmp
test
in
xor
xchg
pop
jl
push
and
fwait
jbe
xchg
mov
mov
or
cli
jmp
mov
sub
mov
mov
sbb
gs
repz
pusha
fcmovnu
je
sbb
mov
test
lret
push
shll
ja
pop
xlat
sbb
dec
into
add
addr16
mov
icebp
adc
leave
xchg
loopne
shll
idivb
into
push
das
adc
test
shrl
sub
xchg
ret
lret
sbb
jmp
pop
movsb
je
jp
push
pop
adc
mov
xchg
ret
popf
fimuls
sahf
pop
stc
sbb
addr16
inc
out
xchg
cmpsb
xchg
das
rorb
pop
outsl
xlat
mov
inc
pop
inc
cltd
adc
xor
jl
adc
jmp
cmp
xor
pop
mov
xchg
loopne
mov
lret
and
jns
xor
mov
mov
in
mov
xchg
aas
nop
enter
aaa
int
mov
jnp
adc
rolb
mov
ret
lret
lods
dec
mov
rcrb
push
xor
in
jecxz
adc
jl
fnsave
sub
sub
push
push
or
xor
cltd
dec
xchg
jge
cmp
xor
inc
fs
add
dec
movsl
mov
inc
ret
jnp
xor
decl
sbb
jbe
imul
and
sbb
sbb
mov
mov
adc
subb
cmp
mov
mov
nop
lea
js
pop
fiadds
or
pop
jo
and
dec
mov
mov
jmp
xor
test
mov
mov
into
insb
movsl
and
xchg
jg
lcall
dec
adc
jmp
xlat
call
mov
das
adc
jne
bound
xchg
or
push
pop
inc
or
iret
out
sahf
mov
mov
test
cmpsl
lahf
fmuls
addr16
xor
ret
cmpb
lea
out
in
scas
dec
jnp
pop
test
pop
insl
pop
mov
into
nop
jmp
add
adc
mov
js
sbb
lock
cwtl
and
sbb
loope
rolb
loop
insb
pushaw
shll
lods
popa
std
adc
in
inc
mov
pop
shll
sub
lret
jcxz
shlb
hlt
pop
adc
sarl
sqrtps
imul
fwait
add
xlat
mov
mov
cld
xchg
mov
and
dec
mov
test
jns
ret
inc
mov
mov
pushf
lods
in
mov
fldcw
enter
adc
mov
mov
sbb
mov
mov
jb
push
jecxz
jnp
popf
xchg
sahf
push
mov
insl
sbb
lods
shl
jge
dec
outsb
das
popa
xchg
lds
push
test
idivb
in
adc
mov
sbb
jl
pop
sbbl
pusha
cmc
in
stc
xchg
into
xchg
mov
call
mov
cmpsb
test
adc
loopne
or
mov
rorb
aad
cltd
lods
xchg
sub
adc
sahf
push
push
mov
repz
dec
shl
fwait
mov
push
adc
pop
mov
xchg
js
xchg
icebp
in
xor
and
cmpb
test
scas
jle
pushf
std
xor
xchg
pop
lea
dec
mov
sti
and
aam
cwtl
nop
push
dec
lock
inc
popf
pushf
jo
push
add
aam
icebp
fwait
xlat
push
repnz
data16
adc
and
sbb
dec
adc
shl
mov
adc
jns
add
adc
mov
xrelease
lds
jbe
mov
and
int3
rclb
cmp
fcmovnb
mov
push
rorb
dec
rcll
test
lock
pop
adc
xor
mov
pop
inc
xchg
ss
fsts
ret
movswl
xor
pushf
pop
or
enter
lahf
gs
adc
xor
jmp
arpl
cld
adc
xor
adc
mov
iret
in
in
cmp
ret
inc
aaa
stos
adc
push
sub
sub
dec
xor
sbb
scas
push
das
fs
aam
dec
pop
mov
lds
out
xchg
mov
and
jl
inc
aas
sub
loope
lea
jp
mov
cs
adc
sub
push
es
xor
pushf
fcoml
or
leave
fstps
gs
fnstenv
pop
sbb
ds
cmp
fbld
mov
jmp
push
inc
mov
mov
cltd
add
sti
push
xor
ficoms
orb
pushf
clc
pop
int
repz
push
faddl
fistl
lds
mov
add
xchg
stos
adc
lods
push
bound
fcomip
pop
sub
sub
mov
popa
jnp
stc
pop
dec
pop
fildll
ret
sbb
dec
dec
mov
test
push
pop
aas
adc
inc
call
sbb
cmp
dec
pop
adc
loopne
fisubs
mov
frstor
icebp
jmp
jl
lea
inc
and
xlat
and
add
aas
inc
incb
mov
xor
dec
xchg
mov
aad
into
ret
mov
pushf
sbb
xor
xor
add
mov
mov
sub
jns
jge
js
adcb
leave
cmpsl
int
popa
lock
les
xor
add
loopne
stos
fst
mov
and
mov
push
insl
push
es
pusha
push
cltd
les
mov
jmp
cmp
test
mov
and
addl
scas
maxps
dec
fsts
std
mov
push
cld
mov
popf
sub
and
es
adc
inc
adc
lods
jmp
test
into
adc
adc
and
xchg
sub
lock
testb
adc
mov
divb
pop
pop
sbb
cmc
shll
inc
inc
inc
aad
arpl
cmp
mov
lea
jmp
iret
pop
or
mov
gs
cld
sub
mov
inc
andb
and
mov
dec
mov
cli
cmc
rcrb
mov
pop
outsl
mov
pop
jne
pop
pop
data16
cmp
sahf
lret
push
loopne
leave
sbb
cld
adc
jecxz
jle
jle
mov
lods
loopne
jbe,pn
push
rcrb
sub
or
aam
lret
pop
push
sub
iret
xchg
cltd
leave
push
sbb
sbbb
xlat
lods
pop
and
and
scas
sub
mov
out
jg
dec
rcl
xchg
scas
fiadds
bound
sahf
xchg
negb
scas
inc
sub
xor
lds
stos
xor
ss
mov
stos
ret
test
hlt
and
or
pop
xchg
xor
clc
decl
or
inc
adc
mov
mov
sub
sub
into
xor
xchg
add
pop
subl
movsb
xor
jg
lea
jno
cmp
jp
fimuls
push
cltd
js
add
push
outsb
out
cmp
or
push
int
cmp
in
cmc
mov
fs
cmpsb
and
pop
adc
mov
rolb
mov
cld
jmp
add
pop
dec
xchg
jo
jo
mov
and
out
fbld
push
int3
cmp
popa
adcb
pop
movsb
lea
sbb
outsb
loopne
fcompl
pop
stc
out
nop
xchg
sti
jnp
mov
inc
sub
lea
push
xchg
add
ret
xorb
sub
sti
push
pop
dec
jae
call
bound
popa
test
scas
das
or
add
fidivrl
adc
in
lret
fs
jg
adc
sub
lea
clc
cmpl
loope
popa
outsl
int3
hlt
cmc
scas
xlat
mov
push
inc
and
push
and
out
nop
addr16
ja
xor
xchg
ja
xchg
shlb
sub
push
sbb
ret
flds
pop
cmp
in
pop
pop
xor
jge
ror
mov
aaa
pusha
and
adc
loop
sub
pop
mov
xlat
and
test
movsb
jle
int
mull
sbb
pop
inc
inc
xor
push
stos
aaa
call
les
pop
loop
push
or
xchg
pop
cmp
aaa
je
mov
rcrb
scas
adc
gs
sbb
test
mov
push
jb
add
pop
aam
loope
inc
or
pop
enter
or
scas
adc
in
mov
movsb
or
sbb
xchg
sbb
ret
mov
ret
sub
xchg
por
push
movsb
mov
xchg
xor
sbb
loop
mov
and
adc
out
mov
sub
or
push
cmp
cmp
aas
popf
shll
pop
shrb
dec
add
push
add
shrb
add
xlat
ds
fdivl
pop
in
into
addr16
add
test
mov
movsl
sbb
push
cli
shr
movsb
call
fisttpll
pop
stos
mov
insb
and
pop
movsb
jne
mov
sub
fisttpll
adc
push
mov
inc
iret
lock
pop
and
inc
and
jns
test
sbb
stc
add
xor
pop
aaa
push
fwait
sub
js
subb
cmp
add
lods
pop
cmpsb
sbb
lds
push
adc
sbb
aas
mov
xchg
fwait
jmp
or
ss
int3
aaa
int
sahf
stos
fstpt
jne
push
ficompl
es
jae
dec
xchg
sbb
gs
xor
outsl
jle
sub
dec
jmp
xor
dec
stos
jb,pn
popf
loope
dec
xchg
in
fnstenv
or
push
in
add
jbe
pop
popa
pop
sbb
test
sbb
pusha
in
add
popa
lret
or
mov
fsub
mov
scas
mov
insl
scas
ret
jne
or
fcomps
xor
cmpsb
ja
pop
insb
jp
into
adcl
es
mov
movsb
cmc
add
mov
leave
aad
jns
push
mov
dec
or
inc
sub
pop
push
pop
cwtl
cmp
ret
in
fisubrs
add
imulb
in
mov
push
inc
out
das
insb
jb
push
lods
push
ljmp
mov
xor
insl
fcmovu
cmp
push
or
popa
sub
rclb
sbb
dec
fs
add
cmpsb
inc
dec
repnz
push
cld
repz
add
andb
adc
xor
loop
cmpsl
mov
clc
dec
mov
stos
mov
xchg
xchg
dec
sbb
icebp
push
and
inc
addr16
adc
pusha
jp
mov
sbb
mov
test
or
add
and
je
int3
ja
inc
icebp
xchg
testl
pop
inc
icebp
jle
mov
jo
push
push
lds
shll
jb
ret
fs
scas
jb
aad
xor
mov
test
ret
fimull
cmp
ret
jmp
xchg
adc
dec
cmp
rorb
cmp
in
mov
add
add
sub
or
push
mov
out
add
andl
sub
xchg
testb
je
je
in
call
jg
push
cmp
fistpl
jnp
loope
pop
push
cmp
push
ljmp
out
xlat
sub
data16
shr
adc
push
xchg
adc
hlt
mov
sbb
push
mov
inc
loopne
enter
and
or
imul
mov
imul
stc
dec
xchg
stos
cmp
jl
and
stos
fstp
add
dec
inc
xorl
mov
jo
adc
cld
ficoms
add
dec
aas
lds
fistps
inc
loop
pusha
inc
mov
sti
sub
popf
xor
push
mov
mov
pusha
ret
mov
or
insb
test
mov
mov
lds
mov
int
cltd
int3
cmp
pop
jbe
dec
out
sbb
sbb
dec
mov
cmpb
push
xor
scas
xlat
in
sbb
jge
pushf
std
test
scas
adc
adc
enter
dec
out
cli
xor
add
in
and
loop
repnz
inc
das
xor
dec
pushf
push
or
popa
xor
lea
xor
mulb
push
add
enter
push
jae
lea
adcb
popf
sub
mov
ja
ret
xor
and
iret
pop
iret
add
movsb
ds
je
imul
jl
cmp
divps
cli
and
push
aas
add
in
mov
in
pusha
rorl
ss
mov
popa
and
out
in
jp
lcall
lahf
add
add
orl
jl
int3
xchg
mov
cmp
adc
inc
test
nop
stos
dec
cmp
cwtl
push
sub
mov
addr16
and
lods
push
push
mov
sub
bound
scas
enter
sarb
testl
pop
icebp
movsb
andb
adc
fsubs
xchg
dec
lds
or
xchg
jns
test
mov
pop
lock
popa
adc
jnp
sub
and
setb
ret
push
cwtl
inc
outsb
add
cld
mov
sub
push
cli
outsl
js
xor
dec
xchg
adc
sub
add
inc
xor
xor
xorb
mov
je
popa
pop
shrb
imul
sarb
arpl
ret
rcr
add
pop
jecxz
movsl
sub
or
in
and
int3
sbb
xchg
jns
aaa
shll
pop
push
cmp
in
mov
arpl
stc
and
inc
loope
add
dec
inc
rcl
jge
and
aas
xchg
dec
cmp
adc
sub
add
xchg
dec
mov
ss
cmpsb
in
jp
inc
push
push
xor
xchg
adcb
pop
inc
sti
xchg
cltd
test
add
dec
in
lret
movsl
fildl
popf
cmp
aad
pusha
and
shl
add
lods
and
push
test
inc
dec
xchg
pop
les
inc
ss
leave
mov
push
fnsave
imul
popf
jl
mov
mov
sbb
xchg
test
clc
jne
add
cmp
mov
cltd
sahf
dec
push
pop
fidivrs
inc
mov
cmc
xchg
pop
aas
sahf
mov
adc
add
out
lcall
lret
ja
ret
test
fdivrl
mov
call
rorb
imul
mov
call
xor
mov
ja
adc
and
stos
call
aad
es
or
cmp
fsubs
add
inc
sub
pop
inc
mov
inc
sub
leave
mov
shrl
and
and
leave
sub
call
dec
mov
nop
add
push
and
dec
out
cmp
sub
push
adc
push
iret
adc
das
push
mov
mov
movsl
push
inc
or
sahf
sbb
arpl
out
pop
rcrb
mov
fistps
or
mov
popa
dec
mov
fs
mov
mov
pop
push
cmp
mov
pop
cli
fstps
and
jne
and
cwtl
jns
testb
mov
and
or
movsb
mov
pop
push
test
mov
xchg
lret
fs
repnz
mov
adc
mov
sub
mov
popf
dec
popf
leave
dec
sarl
mov
subb
and
jle
mov
je
outsb
pop
pop
int3
leave
loop
test
jge
nop
sub
sarl
into
test
js
inc
push
mov
bound
out
sahf
cwtl
jle
popf
insl
mov
sarb
lret
adc
out
sbb
fsts
test
sbbl
pop
or
mov
mov
pop
cmp
mov
lds
xor
pop
dec
insb
add
imull
or
in
stos
jns
sbb
sbb
data16
push
out
push
ret
adc
xor
adc
dec
mov
ds
lcall
bound
out
mov
fiaddl
out
mov
subb
inc
fstpl
mov
fimuls
sahf
lcall
stos
mov
cs
or
jp
daa
rcl
cmp
into
ret
sub
pushl
jne,pn
mov
clc
hlt
rol
cmp
inc
into
xor
and
add
or
rorb
cwtl
push
clc
mov
out
xchg
loopne
and
sub
and
icebp
dec
lea
jge
pop
mov
repnz
inc
push
shlb
cmp
fs
mov
add
shlb
add
mov
xchg
icebp
daa
mov
into
cmp
push
out
repnz
adc
icebp
loopne
mov
mov
popa
rorb
mov
jl
loop
enter
pop
in
roll
movsb
scas
sahf
pop
inc
mov
or
cmp
das
mov
adc
mov
dec
jnp
mov
arpl
aad
popa
mov
inc
js
jmp
call
xorb
aam
pop
add
into
dec
inc
sub
aas
dec
out
mov
xchg
imul
mov
fstl
daa
xor
enter
aad
xlat
mov
fistl
loope,pt
fsubrs
mov
sbb
cmp
xchg
mov
ss
jmp
push
fsts
lods
aas
mov
xor
mov
fs
pusha
mov
mov
mov
adc
mov
jmp
pop
jb
xorb
push
stos
or
sbbb
test
je
shll
in
es
movsb
mov
sub
pop
mov
cmp
sahf
in
jmp
sahf
addr16
mov
push
dec
shlb
lret
aas
jo
ds
push
aas
aam
push
movsb
iret
push
stc
push
insl
roll
and
pop
fnstenv
outsl
scas
fstpt
fcoms
aad
jno
inc
and
pop
scas
daa
out
add
cmpsl
cmp
in
pop
fwait
jmp
or
sbb
pop
inc
lahf
push
iret
add
inc
test
lcall
pusha
pop
cld
sbb
cmp
add
inc
enter
mov
adc
push
inc
inc
shlb
jle
push
cmp
or
xor
cltd
xor
sahf
jns
das
inc
into
fidivs
data16
add
test
pushl
xchg
push
or
jo
jno
and
ficomps
jne
stos
add
mov
mov
fisubrl
sub
ret
add
push
ljmp
out
xchg
sbb
xor
sub
stos
jae
into
lods
insl
jl
lods
aam
xor
js
pop
sbb
xchg
inc
sub
adc
xchg
push
call
cmp
push
das
sub
mov
inc
mov
jno
jmp
mov
adc
lahf
sub
out
and
xor
mov
movsb
mov
dec
xchg
rcrb
xchg
mov
jbe
in
dec
repnz
jmp
jno
inc
pop
jb
sahf
mov
stos
loop
mov
popf
andb
call
pusha
or
and
mov
mov
dec
sub
adc
mov
lret
cmp
insl
aad
cmpsl
jns
cmp
jbe
sub
shr
mov
jl
sahf
adc
sbbb
into
imul
xor
sti
and
out
or
movsl
cmpsl
call
push
outsb
inc
cmp
push
jno
es
push
cli
inc
mov
jp
pop
mov
mov
shl
shlb
jle
add
and
xchg
adc
cmc
mov
sbb
dec
rcrl
fidivl
or
stos
push
pop
lret
sbb
stos
scas
repnz
out
popf
rcrb
loop
imul
fisubrl
fildl
adc
lods
scas
mov
adc
push
or
mov
shlb
sbb
in
imul
mov
call
insl
sti
mov
daa
jecxz
sub
mov
pop
adc
rorb
dec
sahf
lcall
test
sbb
icebp
and
jg
mov
int3
fst
jne
sbb
pop
cmp
jnp
mov
sbbl
pop
in
test
js
orl
inc
sub
and
push
cli
mov
xchg
stos
repz
xor
and
pop
jne
mov
js
sub
cmp
mov
aaa
sbb
aad
add
add
insl
aad
cmp
xchg
xor
xchg
or
mov
push
mov
into
mov
movsl
or
popa
xchg
sbb
adc
jp
xchg
mov
dec
and
ja
inc
test
outsl
lods
imul
xor
decb
inc
push
je
pop
xchg
adc
rcrl
cmpsb
xchg
loopne
call
dec
or
push
imul
push
sbb
loope
cmc
subl
adc
mov
insl
inc
dec
lret
das
fldt
call
xchg
adc
pop
inc
outsb
add
add
les
imul
ljmp
fdivl
cli
out
pop
stc
ret
les
lret
and
gs
iret
cmp
or
or
popa
cmpsl
cmpsl
rcr
pop
mov
and
pop
pop
xchg
xor
mov
add
push
xchg
jp
add
mov
adc
inc
fbld
shlb
movsl
pop
xchg
lahf
stos
adc
adc
test
int3
mov
mov
out
sarb
rol
and
jbe
sub
stc
dec
xor
mov
jg
sbbb
cmpsb
mov
push
push
aaa
addr16
jae
pushf
inc
lds
popf
stos
fucompp
push
and
roll
fwait
push
aas
xchg
ficompl
mov
mov
sub
or
cmpsl
sbb
and
cmpsb
push
iret
in
clc
iret
pop
aam
mov
lret
pusha
popf
in
mov
pop
fwait
pop
xor
pusha
dec
xchg
out
divb
dec
sti
aaa
mov
out
fidivs
leave
mov
mov
fisttpll
xchg
stc
loopne
inc
es
mov
xchg
outsb
jb
imul
cli
mov
push
or
pop
push
push
add
scas
ljmp
stos
xlat
jge
les
stc
push
mov
movsb
cmp
loopne
icebp
adc
mov
ss
lcall
push
cmp
mov
push
inc
out
jl
shlb
les
dec
loop
imull
sub
xor
inc
push
mov
sbbl
sub
or
dec
aam
scas
out
xchg
mov
sar
mov
sti
leave
popf
or
or
mov
jo,pt
into
loope
mov
arpl
in
push
pushf
popa
sbb
push
cs
fnsave
push
mov
clc
lahf
cmp
and
cmp
into
jb
call
leavew
in
mov
add
jp
imul
pusha
ja
imul
and
sbbb
mov
fsub
cld
and
adc
int
or
ds
pusha
mov
aam
add
adc
sbb
cmp
mov
inc
ja
jmp
in
test
enter
pcmpeqw
popa
or
cmpsl
std
or
xor
mov
or
test
je
mov
pop
stos
mov
pop
mov
xor
addr16
xchg
ja
push
out
and
int
xchg
jp
int
movsl
pop
jp
push
xchg
test
cmp
mov
xor
sbb
data16
aas
out
adc
or
mov
jns
jp
fidivrs
fldcw
popf
fwait
lds
bound
cmpl
push
jne
mov
inc
push
add
sar
data16
enter
ljmp
cmpsl
add
pushf
sbb
push
inc
orl
mov
and
addr16
sahf
push
lea
outsb
sub
gs
mov
insw
adc
mov
adc
test
push
xchg
pushf
rorb
xchg
enter
mov
cmp
and
or
mov
pushf
jl
pop
leave
je
fisttpll
ds
jae
aas
push
fcom
xchg
fcoml
xchg
inc
shlb
scas
dec
pop
sub
pop
iret
jle
lcall
mov
mov
xchg
out
popa
nop
mov
pop
out
sahf
jecxz
fimuls
jmp
cwtl
push
mov
stc
xchg
std
ds
sbb
jp
std
sbb
and
aas
inc
jb
out
stos
adc
in
fstpt
js
dec
pop
jmp
push
inc
add
dec
inc
and
adc
or
push
dec
jle
ficoml
sub
pop
xchg
sbb
imul
rcrl
push
aam
rolb
xchg
andl
push
pusha
mov
sbb
sbb
mov
cmpb
cmpsl
das
xchg
test
faddl
push
rcrl
leave
filds
adc
lret
out
ja
mov
scas
addr16
cltd
push
mov
cmp
arpl
popf
or
std
fdiv
add
pop
loop
lret
inc
xchg
pop
test
nopl
das
push
sub
xchg
cltd
dec
dec
data16
mov
push
dec
mov
loope
fistpll
cmp
loopew
insl
pop
hlt
mov
js
aad
mov
aad
add
jbe
mov
pushf
aaa
pushf
or
or
push
fucomip
sub
adc
adc
je
xchg
mov
test
icebp
leave
xchg
jle
pop
pop
mov
pop
sub
cmp
addr16
aaa
stos
adc
and
adc
out
add
dec
xor
fistpll
loope
sbbb
hlt
jo
lcall
mov
sub
jns
sub
icebp
add
add
mov
mov
lret
pop
dec
gs
xchg
jecxz
push
test
sub
pushf
xor
js
xchg
lret
cmp
cmp
xchg
arpl
loop
cmp
out
movsl
push
sbb
mov
cmp
daa
shrl
xchg
mov
das
int
arpl
push
cmc
dec
push
pop
cmpsl
out
out
stc
cmpsb
fisubl
test
data16
jne
lods
cmp
jne
mov
xchg
mov
jno
mov
pop
enter
pop
pushf
mov
pop
sbb
lock
and
addb
test
xchg
lods
out
mov
icebp
mov
sbb
mov
roll
aaa
aam
fsubl
aad
and
push
scas
dec
in
cs
ja
dec
pop
js
cmp
fidivrs
test
shr
add
or
sub
test
nop
ret
xchg
and
je
int3
mov
scas
or
jmp
jg
enter
out
hlt
sbb
and
or
fcmovne
inc
jne
lea
and
aas
sbb
sub
mov
cmp
insl
js
mov
mov
adcl
or
std
jp
cmpsl
dec
inc
sub
lea
fadd
enter
pop
add
out
repnz
and
cmp
add
mov
mov
push
mov
loope
mov
lret
push
outsl
aas
aas
cmp
pusha
jbe
scas
push
les
hlt
ss
jno
addb
xchg
sbb
jno
sub
adcl
into
cld
int3
jmp
daa
lods
rolb
push
push
add
jge
in
mov
inc
jle
fadd
pop
mov
or
fbld
mov
sbb
stc
lahf
out
dec
dec
lea
jae
mov
add
push
ret
lea
fstps
inc
push
test
std
and
imul
jne
imul
push
popf
clc
push
add
xor
test
mov
dec
mov
push
adc
cmp
cwtl
add
add
pop
xchg
pop
jne
cmpsb
mov
cmc
in
or
mov
push
jb
insl
loopne
stc
sbb
pop
ret
jmp
inc
jb
cmc
mov
push
fdivrl
mov
cmpsl
push
mov
or
aad
inc
cmp
shlb
pop
rol
flds
aas
bound
pop
sbb
dec
int3
xchg
jbe
fsubs
jecxz
push
insb
mov
lcall
out
cmp
xor
cmp
andl
movsb
add
mov
push
test
push
test
cmp
jp
sbb
pop
cmpsb
jne
inc
push
dec
aad
xor
xchg
cmpsl
loope
pop
arpl
mov
aam
outsl
dec
leave
mov
mov
mov
adc
xchg
sub
inc
dec
sub
cltd
stos
or
lret
dec
pop
fsub
lds
cltd
cmp
adc
fbstp
cmp
cmp
push
mov
or
ds
cmp
or
lret
out
push
pop
lahf
sbb
jo
pop
sub
mov
out
js
jge
ds
mov
or
mov
pop
pop
fld
aam
js
add
and
bound
lods
pop
push
add
cmp
sahf
fdivrs
mov
movsl
lcall
lods
lret
in
mov
inc
and
xchg
ret
cwtl
outsl
fsubrs
sbb
les
mov
mov
pop
or
pop
or
pushf
in
cmp
cmp
adc
push
repz
dec
xlat
loope
scas
mov
xor
cmp
dec
std
dec
notl
xor
test
inc
or
push
xchg
mov
cmp
push
sub
insl
ja
dec
shr
ss
out
pop
aas
or
mov
iret
rorl
mov
fimull
mov
pop
mov
and
divl
or
dec
leave
ja
js
mov
push
fwait
sbb
and
inc
insl
xor
cwtl
int3
jg
test
dec
jge
adc
scas
add
ds
mov
inc
les
loope
sbb
jecxz
and
adc
sahf
dec
clc
inc
mov
dec
lds
outsb
fildl
mov
iret
lahf
sub
lock
data16
ljmp
dec
adc
fisttpll
dec
xchg
xorl
jae
inc
aas
push
insl
lret
adc
xor
dec
aaa
xor
ljmp
inc
popa
into
mov
das
in
inc
xor
fst
lcall
push
cltd
fistpl
xor
cli
adc
inc
shll
push
push
lahf
sbb
mov
xchg
mov
clc
stos
cmp
or
imul
or
add
and
pushf
rcrl
aaa
mov
jae
call
jbe
mov
outsl
jle
lcall
repnz
arpl
mov
inc
mov
pop
push
or
iret
ds
fisubrl
or
sbb
jmp
hlt
loop
inc
inc
pop
scas
push
cmp
dec
and
cmpsb
cmp
sarl
addr16
sarb
outsw
out
pop
in
outsb
loopne,pn
add
cmp
iret
dec
jl
push
shl
jp
mov
dec
scas
outsb
js
aas
xor
notl
iret
jle
fisttpl
fdivl
pop
into
lock
dec
add
push
cmpb
imulb
push
fdivr
scas
sub
psubd
push
je
cli
sbb
in
loope
inc
in
nop
jb
sub
adc
push
push
aas
cmpsb
fs
mov
inc
sti
cmpsl
xchg
sub
cmp
test
fimuls
ret
ja
lret
cli
ret
in
push
sub
push
in
jo
or
int3
outsl
scas
pop
or
cld
sub
mov
mov
jb
or
adc
mov
popa
jge
sarl
push
out
cmpl
or
mov
pop
fidivs
push
mov
inc
inc
pusha
pop
cmp
xor
or
add
lds
std
loope
mov
icebp
mov
out
push
and
jmp
out
fstpl
daa
cmp
cltd
sbb
scas
and
pop
popa
das
push
jno
in
dec
push
lods
xor
pop
add
push
or
and
mov
pop
insb
scas
popf
hlt
je
pop
cmc
bound
mov
pusha
subb
pusha
mov
pop
dec
cmp
cmp
mov
fs
call
or
subl
scas
cmp
jecxz
or
loope
repnz
xchg
xor
mov
andb
sub
or
in
xor
sarb
movsl
bound
xchg
test
testl
mov
jb
pop
inc
pop
and
or
sahf
sub
stos
sarl
sbb
push
mov
fwait
mov
cmp
sub
inc
dec
adc
cmp
in
sub
add
test
sahf
testl
or
ja
ljmp
jmp
lea
std
mov
imulb
out
cmp
or
popf
mov
sub
jg
fucomp
dec
sbb
push
ret
call
xchg
aaa
jb
xor
popa
jns
mov
mov
in
add
sub
idivl
rolb
mov
stos
fstpt
and
and
xor
sbb
xchg
jb
sub
cmp
mov
inc
in
xchg
aas
std
aam
cmp
push
rorb
push
daa
sub
add
leave
cmp
or
jns
out
or
jae
outsl
mov
outsb
mov
mov
inc
cld
dec
into
push
cmp
jno
clc
mov
jbe
sarl
push
nop
cmp
and
aas
cs
insl
mov
jg
cmpsb
push
ds
or
pop
sub
sbb
into
sahf
aad
and
dec
js
in
ja
out
call
test
or
mov
adc
sub
push
lds
adc
jp
sarb
or
rolb
enter
sarb
and
into
rol
movsl
imul
xchg
push
dec
outsl
mov
stos
sbb
xchg
or
mov
mov
jl
fwait
mov
pop
gs
lret
mov
notl
pusha
sti
outsl
jecxz
xchg
fwait
js
daa
aad
add
js
mov
cmpsl
xor
adc
mov
cmp
fst
dec
push
adc
dec
sbb
push
aam
xchg
imul
inc
fld
sub
ss
in
js
push
mov
jcxz
lods
jno
push
icebp
movsb
lar
cmp
ror
ficompl
push
hlt
jl
and
jg
adc
mov
icebp
add
test
or
lods
rorl
lods
push
notb
xor
mov
inc
pop
adc
xor
fcmovnbe
fnstenv
xor
push
psraw
stos
outsb
inc
fsts
mov
ljmp
fcompl
pop
push
insb
or
adc
adc
xor
das
movsl
lods
sub
out
mov
lret
jmp
shrb
ficoms
dec
push
push
daa
sub
stc
aas
add
adcb
in
stos
shlb
push
push
hlt
popa
sub
cwtl
test
xor
mov
jae
call
pop
sub
inc
imul
xchg
xchg
mov
out
dec
xchg
popa
stc
mov
cmp
xchg
dec
mov
cmpsl
adc
mov
pop
test
push
sarl
inc
lds
and
pop
pop
pop
push
mov
jnp
pop
or
ja
xchg
mov
jae
arpl
mov
push
cmpl
rcrb
icebp
or
test
mov
not
pushf
andl
jmp
repz
inc
cmp
cwtl
enter
xchg
mov
rol
push
cmc
frstpm(287
jge
rcr
hlt
ficomps
icebp
in
sub
mov
xchg
aam
adc
aad
mov
popa
popa
sahf
in
add
shlb
sti
ljmp
andl
push
sti
mov
adc
xorl
decl
movsl
fadds
jg
xorl
cs
ret
rol
or
dec
inc
dec
leave
scas
es
call
insb
sub
mov
mov
jb
shr
and
out
mov
jns
test
fwait
outsl
adc
or
mov
imul
fs
xchg
fnsave
inc
subb
jnp
push
scas
and
sahf
pop
daa
sarl
mov
leave
dec
fs
sub
pop
or
test
clc
xchg
sahf
sbb
xchg
dec
lcall
outsb
mov
arpl
and
movsl
fbstp
sbb
or
jno
adc
enter
arpl
jmp
jns
negb
rclb
ficoml
pushf
sbb
push
fs
xchg
mov
mov
fs
mov
jne
outsb
mov
aaa
adc
inc
push
out
in
scas
popf
pop
outsl
push
xor
repnz
aam
gs
movsl
je
mov
cmp
mov
repnz
or
push
mov
cmp
jg
cmpsb
bnd
subb
add
repz
jg
es
test
mov
push
stos
adc
enter
popf
inc
ja
mov
mov
pop
adc
jnp
cmp
push
xor
mov
sbb
in
cmp
xor
and
jae
sub
cltd
stos
das
cmp
pop
or
cs
dec
incl
lods
in
fldl
test
icebp
or
cmp
or
jno
orb
loope
stc
fisubrs
jnp
movb
or
mov
shll
imul
sti
dec
add
pop
xchg
stos
or
clc
ret
and
jns
xor
ret
jp
dec
push
mov
push
dec
sbb
popa
xchg
mov
mov
jne
push
pusha
mov
jmp
imul
cmp
push
stc
lahf
push
stos
cmpsb
mov
ja
inc
scas
jp
xchg
dec
adc
cld
in
dec
push
jge
data16
inc
in
adc
cltd
sub
inc
pop
enter
fmul
inc
repnz
jae
jnp
inc
sub
push
mov
nop
fs
loopne
fisttps
gs
mov
add
dec
dec
imul
int
and
adc
mov
inc
pop
xor
popa
sub
adc
mov
push
and
push
cwtl
outsl
jnp
lods
fucom
cmp
push
sub
cwtl
mov
dec
repz
loop
dec
dec
std
data16
movb
push
lods
shll
or
aam
adc
idivl
aam
stos
cld
lea
ljmp
jns
enter
stos
xchg
addr16
out
lret
cld
inc
out
fsubp
pop
dec
fistps
outsb
mov
xor
in
cs
cmp
cmp
jmp
jge
push
outsb
xchg
rol
cld
ja
and
push
mov
pop
lahf
sbb
out
pop
adc
push
inc
mull
fnstenv
add
inc
test
jle
push
div
xlat
popf
outsl
mov
push
push
pop
adc
dec
mov
aad
orb
xchg
add
fsubl
daa
push
mov
cmp
int
cmp
ja
jae
or
push
jo
fmul
aad
fldcw
in
cmp
ret
ret
pop
pop
mov
xchg
out
rcrb
testb
scas
mov
and
add
scas
inc
mov
addr16
jecxz
leave
inc
int
inc
int3
insl
or
jp
sub
sub
aaa
and
fidivrs
sub
lahf
inc
and
nop
stos
and
pusha
negl
jp
or
ret
xchg
cmp
xchg
sahf
fsubl
mov
out
movsb
xchg
mov
sbb
mov
or
and
std
inc
ja
call
inc
cld
popa
dec
adc
sahf
aas
cmp
pop
xor
add
sbb
je
sbb
test
xchg
lods
xor
add
leave
in
or
mov
popa
enter
cmp
push
aad
popa
mov
icebp
dec
adc
or
pop
push
aad
mov
xchg
add
adc
les
pop
or
mov
in
insb
ja
inc
cmp
adc
mov
fwait
sbb
stos
xorb
test
jecxz
cmp
push
cmp
push
push
xchg
sarb
in
stos
imul
outsl
out
xchg
sbb
lds
adc
adc
cmp
out
shrb
lahf
pop
jp
xlat
mov
shrl
jo
out
jle
lret
push
push
cmpsb
aam
push
jg
mov
or
outsl
mov
fcomi
divb
sbb
xor
pop
sbb
imulb
push
pop
mov
push
xor
or
jbe
enter
xchg
mov
mov
insl
or
mov
xchg
mov
in
or
repnz
test
mov
sbb
inc
xor
jecxz
jb
jmp
pop
loope
xchg
aas
pusha
out
add
jbe
ja
ja
inc
dec
daa
xor
jns
push
jo
je
out
xor
mov
sub
fisubrl
adc
movsb
fildll
xchg
mov
out
mov
mov
mov
test
xor
std
imul
rol
aad
bound
sub
pop
mov
gs
xor
leave
and
insl
jae
mov
jno
or
fdivs
int3
sbb
xor
aas
fidivrl
divl
sub
push
jne
ljmp
leave
sbb
out
sub
pop
into
lcall
mov
adc
divl
push
push
call
testl
cmc
lahf
int
test
outsl
pop
insl
imul
xchg
iret
push
cltd
call
xchg
push
mov
inc
sahf
lods
sub
insb
nop
mov
adc
aaa
mov
mov
pop
mov
mov
push
and
nop
mov
or
mov
insl
pusha
daa
loopne
push
xchg
into
mov
or
inc
stc
sarb
rcl
pusha
movsl
test
ret
sub
notb
rcrl
stos
or
arpl
pop
outsb
es
sub
je
mov
xlat
cltd
push
aam
clc
or
sub
clc
mov
sbb
jmp
pop
mov
mov
jle
sub
inc
and
xchg
lret
bound
pop
subb
or
lret
leave
test
lods
shlb
movsl
fidivrs
pop
xor
xchg
sbb
add
gs
fcom
dec
jns
push
inc
xchg
pop
mov
out
stc
dec
xchg
mov
jle
stos
mul
sbb
mov
jmp
mov
sbb
pop
jae
push
and
mov
mov
ss
xor
mov
fs
roll
loope
out
fisttpl
sahf
call
lret
das
insb
sub
sub
popa
push
pusha
xlat
cmp
lret
cmp
lcall
sahf
xor
in
xor
mov
ret
scas
ffreep
fnstsw
xor
rcll
cmp
xchg
xor
jae
shll
int
adc
stos
add
test
sbb
movsl
jb
out
fcompl
cmp
ds
mov
push
push
xlat
sbb
mov
mov
inc
lods
inc
test
add
movsl
inc
sbb
call
inc
cmc
or
xchg
clc
xchg
mov
jp
mov
outsb
dec
std
inc
xor
jae
fwait
dec
fdivl
les
sub
notb
call
in
sbb
ss
push
fadd
imul
pusha
jns
in
push
ret
cmp
mov
je
jae
xor
fmull
adc
call
adc
adc
inc
iret
or
mov
push
test
or
add
outsb
aas
pop
push
shll
pop
jl
jae
bound
xor
sar
dec
addr16
jno
lods
push
out
pop
sarl
cmp
fisubl
xor
sub
add
rcrl
sbb
mov
mov
popf
sub
aas
jecxz
cmpsl
dec
inc
into
xchg
jno
leave
shlb
fs
outsb
icebp
cmp
xor
and
inc
inc
push
icebp
sub
lods
push
sub
js
in
les
pop
ret
or
movb
jno
mov
test
stos
dec
call
pop
mov
push
jl
xlat
sub
cmp
and
sarb
push
call
out
inc
in
adcl
cmpsb
and
loope
add
xor
test
pop
mov
push
sub
mov
or
xchg
add
outsb
cwtl
ja
dec
xor
stos
adc
mov
or
shrl
jo
mov
sbb
lahf
mov
mov
aad
int3
lods
mov
in
add
outsl
inc
into
int
mov
sbb
out
testb
loope
setae
mov
lea
sub
adc
es
adc
loopne
nop
test
test
sbb
out
sbb
fwait
dec
aas
test
mov
test
out
movsb
dec
nop
mov
inc
lret
leave
and
cmp
xor
enter
ss
mov
pop
fs
dec
xchg
loop
xlat
out
xchg
mov
jecxz
in
rcll
aas
test
stos
fdivs
jg
clc
sbb
es
push
cmp
or
add
popf
loope
dec
cmc
sbbl
mov
or
loop
push
test
or
cltd
jg
in
dec
mov
mov
data16
sbb
dec
inc
pop
js
add
stos
in
xchg
adc
in
push
dec
push
push
stos
adc
push
mov
xchg
test
loopne
outsl
mov
jb
mov
arpl
push
xor
leave
aaa
or
leave
les
or
out
sbb
and
dec
mov
das
adc
imul
test
mov
mov
sub
mov
push
mov
adc
mov
or
fwait
das
cmp
clc
shlb
ja
cmc
lret
stc
pop
mov
repz
xchg
adc
test
sub
ret
daa
adc
xor
pop
mov
rcrb
jge
sub
out
lret
into
mov
test
mov
cs
inc
or
lahf
mov
push
add
sti
mov
pusha
int3
dec
and
jmp
addb
scas
cld
jge
iret
dec
push
nop
dec
inc
jns
aas
and
sahf
shlb
mov
mov
icebp
cltd
dec
mov
adc
sbb
test
push
cltd
inc
xlat
inc
in
xchg
push
xchg
ss
mov
mov
into
dec
add
scas
push
inc
lret
hlt
je
mov
or
add
nop
mov
ja
adc
aas
int3
movlps
stos
jp
sub
and
push
dec
add
in
xor
sub
dec
pop
bound
dec
add
xor
movsl
xchg
push
cmp
xor
in
movsl
dec
mov
dec
andb
outsb
mov
notb
xor
movsb
rcrb
mov
mov
xchg
xchg
lods
mov
fwait
div
push
mov
call
into
jbe
cltd
loopne
xor
fstp
das
sbb
test
mov
data16
push
xor
iret
out
sub
jb
out
sbb
mov
imul
iret
es
rorb
frstor
push
sbb
fs
adc
cmp
add
and
cmp
mov
mov
jae
mov
int
dec
xchg
sub
dec
outsb
push
xchg
mov
shll
stos
inc
jno
pop
cwtl
mov
aaa
xor
jo
int
xchg
mov
and
lret
pop
sub
imul
fidivrs
dec
jb
jbe
pop
push
mov
cmc
test
cmc
repz
cmp
mov
jge
loopne
add
lock
test
cld
arpl
mov
popf
lock
mov
or
cmc
push
push
test
test
cli
out
and
pop
icebp
push
popa
cmpsl
loope
fwait
xor
shlb
or
jno
cmp
pop
sub
pop
pop
fwait
mov
add
mov
and
mov
jecxz
test
test
leave
xchg
mov
cmpsl
testb
sub
inc
cmp
jle
mov
adc
test
inc
xchg
mov
lahf
fwait
icebp
shll
fadds
call
mov
pop
sahf
push
jge
sbb
sub
jmp
jg
pop
jo
lcall
cmp
xchg
rorl
faddl
xchg
imul
adc
add
inc
outsl
mov
pop
fsubrl
arpl
shrl
adc
ja
aaa
clc
jne
mov
add
imul
sbb
outsb
popf
push
xor
jo
xchg
shr
and
leave
outsb
test
cmp
les
fbstp
pop
mov
idiv
push
and
or
test
push
mov
adc
mov
sub
outsb
dec
adc
ljmp
or
out
jecxz
test
imul
sbb
lahf
pxor
es
and
xor
je
sti
pusha
jns
jnp
xchg
loope
rcll
pop
sub
popa
sub
ror
mov
mov
repz
movsb
sbb
or
movsl
lcall
xor
popf
call
or
xlat
push
push
divl
out
xchg
sub
sbb
fiadds
mov
out
xchg
push
sti
divl
push
push
inc
fsub
mov
push
in
push
xchg
sbb
pop
faddp
insb
xor
push
adc
sub
push
mov
inc
pop
out
jns
sbb
xchg
push
pop
fldcw
mov
pop
imul
in
mov
movsb
aas
popf
push
pop
loop
lahf
mov
dec
and
sub
cmp
sub
shlb
cmpsl
jge
push
mov
lock
adc
lods
imul
test
or
insl
fdivrs
dec
mov
fidivrs
ss
inc
xchg
cmp
add
xchg
fsubrl
out
ljmp
ffreep
and
mov
inc
repz
xor
rcrl
filds
mov
andl
jmp
lahf
sti
test
insb
mov
cmp
insl
xlat
cmc
push
push
sahf
fcomp
xor
cmp
push
mov
xchg
inc
and
aad
fwait
push
xchg
sbb
jl
or
mov
xor
mov
test
or
xchg
lds
subl
push
pop
pop
mov
popf
add
xor
inc
push
and
hlt
or
mov
add
addr16
icebp
les
adc
or
mov
mov
repz
imul
pop
movsb
mov
and
addb
enter
and
lods
pop
ljmp
hlt
sbb
dec
pop
dec
lods
std
sbb
fwait
push
mov
insl
adc
aam
faddp
out
push
repz
es
subl
dec
mov
popl
lods
sahf
or
xchg
xor
xchg
repnz
sbbb
push
jae
and
repnz
xchg
xchg
cltd
cld
pusha
idivb
sub
imul
mov
fwait
out
mov
mov
mov
xchg
adc
pop
hlt
shlb
sbb
mov
add
mov
dec
lods
ret
mov
out
shr
mov
mov
push
inc
cmpl
add
jg
cs
mov
cmp
in
cmp
aaa
hlt
mov
mov
xchg
mov
shll
jl
add
ss
mov
in
push
dec
adc
fstpt
mov
rcl
loop
sti
adc
mov
dec
push
lret
push
mov
xchg
hlt
loopne
push
outsl
mov
jae
sti
popa
adc
jecxz
scas
pusha
inc
xlat
mov
movsb
pop
dec
mov
enter
mov
jg
pop
mov
push
scas
mov
dec
ficompl
mov
pop
pop
test
dec
xor
push
js
xor
add
mov
jmp
jmp
inc
pop
xchg
and
iret
hlt
or
sbb
xchg
sahf
test
js
imul
jbe
xor
clc
inc
cs
mov
cmp
push
xor
pusha
push
sbb
mov
pop
cltd
xor
dec
dec
adc
add
adc
dec
lds
fcoml
adc
std
icebp
pop
cmp
pushf
in
lahf
and
and
hlt
cmpsl
adc
xchg
jne
shlb
shlb
push
pop
ret
cmovb
mov
jne
daa
shr
cmp
ljmp
pushf
mov
in
dec
es
mov
js
nop
sbbb
pusha
leave
adc
lds
xchg
test
incl
xchg
hlt
adc
inc
jb
popa
repnz
cmpsl
clc
int
adc
mov
je
jne
jae
and
orl
enter
sub
fsubs
sub
mov
xor
push
sbbl
scas
mov
stc
mov
push
addl
cmpl
sub
mov
sub
cmpsl
imul
mov
lods
aam
mov
mov
push
xchg
xchg
push
icebp
jle
jl
clc
lods
xor
mov
jnp
jp
or
ljmp
insb
test
jnp
add
jbe
xor
dec
movsb
in
xchg
jp
mov
out
daa
sbb
cld
pusha
xlat
sbb
or
and
sbb
adc
or
adc
icebp
cmpsl
pop
sbb
xor
sub
xlat
mov
mov
ret
cmpb
and
pop
stos
fsubrl
loope
or
mov
jge
cltd
rorl
jp
int3
push
into
lahf
fstpt
or
add
iret
mov
fadds
or
or
stos
pop
subb
jmp
xchg
sbb
jns
cmpsb
pop
dec
dec
fistps
lcall
xor
jmp
cmpsb
aam
dec
lods
jo
inc
test
cmp
out
xor
fwait
mov
es
insb
add
push
mov
aas
test
adc
push
push
xlat
jb
dec
push
push
push
in
sbb
add
cmp
xchg
inc
mov
mov
mov
daa
int3
cmpsb
in
loope
sarb
sub
fisttpll
mov
stos
cmp
cs
pop
and
xchg
pop
xchg
out
xchg
adc
jno
sub
testl
xor
xchg
xchg
sbb
call
xor
int3
dec
fisubs
scas
in
nop
ret
jg
sub
mov
xor
mov
xchg
jno
mov
test
push
dec
test
lahf
mul
ret
xchg
mov
lahf
push
cmp
scas
push
popa
mov
jae
incl
jnp
leave
sub
dec
inc
inc
das
xchg
loope
lds
adc
mov
xor
outsb
jae
jne
jp
push
lea
or
mov
push
xor
mov
les
xchg
xor
test
mov
leave
test
fildl
out
lret
enter
push
xor
push
nop
sub
data16
in
push
je
cltd
mov
negb
dec
fninit
test
enter
adc
test
jg
xor
and
mov
mov
int3
aas
cmp
jge
cmp
out
fdivs
roll
ret
imul
lea
rolb
hlt
sti
in
outsl
mov
test
out
lods
push
sub
shll
push
pop
xchg
je
js
xchg
das
sbb
das
mov
and
in
sub
cmpl
xchg
cmpsb
fdivs
ficomps
sbbl
insb
push
mov
mov
mov
jmp
test
iret
adc
mov
sbb
sbb
repnz
mov
rorb
jmp
xchg
mov
mov
aam
cwtl
mov
jns
or
pop
xlat
dec
scas
scas
cmp
sbb
sbb
push
cld
ret
xchg
sub
lret
push
lods
out
inc
leave
adc
das
pop
mov
push
jle
jne
sub
cs
mov
fdivrl
mov
repz
or
dec
mov
pushf
ror
mov
adc
add
clc
push
stos
mov
mov
add
jg
push
xchg
mov
xor
mov
clc
xor
jb
xchg
adc
aam
cmpsb
sub
lods
mov
daa
aas
daa
std
add
data16
imul
mov
rclb
inc
add
inc
inc
push
arpl
icebp
fwait
sbb
add
xchg
or
or
xchg
push
cli
stc
jecxz
lahf
mov
or
cmp
shrb
jb
inc
out
xchg
int3
mov
loope
aad
cmp
insb
cmpsl
or
jecxz
pop
aad
bound
stos
gs
int3
mov
imul
scas
in
das
ret
sbb
push
sub
push
es
scas
aad
sbb
shll
loop
clc
jmp
xor
xor
gs
call
rorb
push
popf
sbb
iret
shl
jnp
mov
jnp
jge
lods
jmp
push
push
sbb
in
cmc
pop
xchg
shlb
icebp
sbb
fistpl
inc
push
mov
jecxz
stos
xchg
mov
add
xor
push
lods
jle
out
pop
scas
or
xchg
out
outsl
cld
lahf
iret
mov
lret
cmp
adc
jecxz
cmp
in
xchg
in
call
shl
lods
adc
jl
mov
push
cltd
inc
clc
add
jne
push
vmwrite
xchg
add
or
sbb
pop
mov
loope
xchg
faddl
out
xchg
or
xchg
pop
mov
pop
adc
es
test
jns
jno
cli
mov
ss
icebp
arpl
or
sbb
pop
or
or
pop
jle
inc
lret
cli
mov
stc
insb
int3
std
dec
hlt
sarb
push
stc
mov
les
jns
fiaddl
and
das
dec
xchg
loope
loopne
mov
push
sub
xor
stos
in
sbbb
mov
cmp
in
sub
inc
fisubl
push
fstp
lea
les
sti
sti
insb
xchg
mov
test
lret
mov
push
dec
xchg
test
std
jb
dec
push
or
ja
add
cld
cmpl
inc
or
pop
leave
dec
xchg
mov
or
popa
push
mov
fs
aad
pop
loopne
in
test
mov
les
iret
inc
mov
sub
xorb
inc
leave
sahf
jg
add
mov
mov
or
rolb
rcl
or
xchg
jl
mov
lea
push
int3
add
stc
mov
adc
iret
xchg
mov
lock
adc
pop
std
aam
jb
jle
sub
ljmp
mov
mov
cs
popf
add
jae
mov
dec
mov
cmpsl
imul
out
pop
int3
cmp
jl
mov
fmull
sbb
push
insb
jle
fiadds
and
iret
sbb
lcall
fimuls
push
stc
and
mov
dec
mov
or
jl
mov
adc
cmc
daa
hlt
adc
mov
pop
pop
add
mov
stos
mov
es
and
mov
vfrczss
xchg
repz
mov
jge
lock
inc
or
adc
dec
fldcw
nop
push
and
aas
sub
adcl
sbb
mov
inc
mov
les
sti
sub
xor
sbb
push
pop
mov
sbb
daa
lret
in
sarl
cld
sub
das
push
sti
jno
inc
mov
inc
inc
imul
add
mov
add
es
nop
mov
dec
inc
fs
dec
push
loope
rcl
pop
mov
push
inc
ds
fprem
mov
in
gs
xchg
push
and
pop
xchg
outsb
in
jnp,pn
repz
aas
xchg
mov
mov
mov
insb
rcrb
sar
sti
jae
stos
scas
das
add
ds
xchg
mov
je
mov
mov
mov
dec
and
ds
je
or
jnp
clc
fisubrs
xor
cmpsb
lcall
test
push
push
sbb
mov
js
cld
xchg
ds
js
sarl
sub
sbb
hlt
nop
or
inc
xor
mov
inc
add
fmull
mov
inc
push
xchg
lcall
das
out
je
fs
xchg
movsl
fdiv
mov
js
and
aas
nop
es
pop
clc
push
add
lret
mov
xor
push
imul
adc
jns
or
lods
lds
test
fcoml
imul
neg
pop
add
sti
and
lock
cmp
ljmp
add
add
pusha
cltd
repnz
fistpl
lock
sbb
add
inc
jno
pop
inc
xor
shlb
lods
cmp
dec
lcall
dec
mov
jae
dec
xchg
bound
add
xlat
pop
imul
cli
lcall
jns
shll
cltd
or
dec
sub
push
mov
stos
lock
dec
push
sar
push
cmpsb
das
stc
lock
enter
repnz
and
adc
sub
xor
jecxz
outsb
ret
xchg
jnp
int
dec
data16
test
or
xchg
sub
inc
mov
addr16
inc
cld
test
ljmp
outsb
cld
or
adc
pop
mov
popf
xchg
daa
mov
stos
sbb
lods
xor
add
xor
inc
add
sbb
mov
dec
cs
jl
fwait
icebp
mov
xor
push
or
adc
and
jo
jno
xchg
adc
rolb
sbb
push
lret
push
aaa
arpl
lods
lea
out
loop
add
dec
and
out
cltd
xor
movsl
ja
fs
mov
mov
aam
mov
sub
imulb
sbbl
lods
subb
outsl
iret
rorl
fdivs
adc
lret
sbb
mov
sub
mov
stc
cmp
pop
in
test
or
mov
and
xchg
leave
mov
dec
mov
jnp
inc
rorb
adc
dec
sbb
sar
cltd
inc
rep
mov
andl
addr16
pop
lock
shlb
adc
lock
push
mov
mov
jmp
and
mov
pop
out
sti
out
pop
mov
pop
sbb
icebp
pushf
inc
and
fimull
sbbl
idivb
sbb
inc
inc
cmpsl
or
out
adc
cmp
mov
test
jbe
fidivrl
cld
ficompl
mov
push
cmpsb
xchg
leave
xchg
in
test
adcl
stc
mov
mov
jge
push
addr16
mov
jnp
jno
inc
test
xor
add
ss
sbb
mov
mov
mov
dec
in
fistl
push
and
inc
xor
lds
mov
dec
imul
mov
push
sti
jle
add
pop
outsl
mov
and
mov
xchg
call
sbb
pop
pushf
gs
sbb
push
lea
mov
add
decb
into
ds
in
cld
sbb
das
and
mov
rclb
sbb
adc
jo
fstp
add
sub
add
sahf
xor
jl
dec
adc
pop
cmc
nop
or
inc
mov
popf
push
pop
mov
ljmp
stos
shlb
iret
pop
or
filds
inc
xor
daa
xchg
push
or
pop
scas
imul
inc
lret
xchg
jb
cmp
mov
inc
or
enter
imull
mov
push
mov
xor
cs
jle
stos
xchg
xor
jnp
lret
aaa
push
dec
fstps
add
cwtl
sub
xchg
sbb
mov
outsb
fdivr
push
adc
in
mov
mov
add
divl
jp
cmc
add
scas
inc
push
push
inc
jge
jnp
into
dec
pop
mov
sub
cld
outsl
mov
repz
ss
ja
dec
sbb
jns
adc
add
and
mov
jae
mov
xchg
adc
ficoml
ljmp
inc
aas
aas
inc
fcompl
enter
ja
xor
imul
xchg
aad
hlt
or
mov
or
jp
mov
ljmp
lret
gs
je
add
xchg
sti
push
sub
mov
sarl
xchg
fcomi
ret
or
dec
mov
movsl
lahf
mov
pop
iret
cmp
jl
mov
mov
push
cld
mov
scas
xlat
and
movb
or
adc
sbb
movsb
lahf
test
dec
sbb
insl
and
cmpsb
adc
push
enter
lock
fmulp
xchg
fstp
jmp
test
pop
cwtl
fcoms
imull
jle
int3
ja
adc
xchg
inc
fcompl
imul
mov
mov
fdiv
inc
popf
jecxz
cmpl
cwtl
lcall
in
jo
cld
pop
inc
test
adc
into
in
jmp
lcall
int3
mov
leave
lret
mov
in
sub
jne,pt
mov
daa
mov
loopne
mov
adc
sub
sub
rolb
cmpsl
mov
lret
fs
ret
std
out
imul
xchg
adc
and
and
bnd
mov
or
pop
mov
inc
mov
xchg
mov
iret
cmp
pop
push
aas
mov
push
out
repnz
rcrb
sub
pop
cs
inc
dec
lea
pop
sbb
xor
or
and
cld
add
int3
jmp
mov
pop
xchg
mov
xchg
test
aas
movsl
pop
jp
inc
pop
addr16
imul
mov
xchg
stos
in
ja
xor
or
enter
fsubrs
jne
lcall
mov
lahf
mov
jl
inc
clc
out
call
dec
sbb
mov
cltd
jo
jnp
sbb
dec
xchg
js
mov
fwait
mov
inc
mov
in
push
jg
sbb
pop
jnp
sub
rol
pop
xor
gs
and
jge
gs
js
je
in
shll
addl
sbb
add
lcall
in
int
and
mov
fsts
xlat
dec
je
ret
and
aam
mov
push
inc
mov
xchg
and
pop
pushf
stos
imul
popw
test
into
pusha
ret
lods
dec
es
test
fstpl
popa
mov
xor
sub
pop
xor
in
fimull
daa
or
jne
mov
cltd
adc
clc
push
cmp
push
lcall
stc
idivb
andl
jne
sti
mov
sarb
mov
and
xor
or
xor
push
jbe
arpl
mov
cmpl
sub
jp
pop
fcoml
xchg
and
inc
inc
rorl
inc
iret
mov
cs
lahf
jge
dec
adc
cmpsb
adc
loope
push
xchg
pop
outsb
ds
in
sub
push
enter
sub
jmp
pop
add
sub
jle
cmc
scas
xor
pop
mov
xchg
mov
in
mov
out
push
mov
xor
push
pop
and
jno
sub
cs
jo
jge
ret
cmp
and
stos
mov
in
lret
xorl
movsb
pop
rolb
out
mov
mov
and
adc
bound
popa
fucomp
xchg
or
movl
fs
cli
mov
jne
cmp
ror
or
mov
cmp
aas
jne
sub
rcl
pusha
mov
or
xchg
cld
out
ss
fimuls
stc
pushf
cltd
out
mov
shll
fimuls
pop
cmpsb
add
dec
mov
mov
pop
add
inc
inc
xchg
lcall
out
out
xchg
fwait
insl
dec
dec
push
inc
or
test
gs
int
xchg
rclb
or
ficoms
jg
jg
xchg
cmpsl
cmpsl
adc
xchg
cmp
xor
fisubl
aad
bound
xchg
xchg
xchg
and
pop
pusha
mov
xchg
lods
ficoml
bound
movsb
push
lock
and
cltd
xor
mov
cs
xor
xchg
mov
cmp
xlat
push
and
dec
fs
cltd
jmp
adc
popf
aas
test
dec
cld
mov
sub
mov
fdivrs
xlat
mov
sbb
dec
lds
ja
icebp
lea
insl
lret
mov
add
and
mov
mov
in
sub
dec
addr16
lret
fs
mov
push
jge
mov
fs
aam
in
sub
imul
in
push
cld
ret
loop
sbb
xchg
out
dec
scas
adc
sbb
mov
mov
xlat
cmc
cmc
int3
popf
mov
mov
xchg
test
mov
cmp
jg
xor
test
outsb
fldcw
sbb
hlt
test
jb
repz
sbb
cli
stos
vpmacswd
cmp
jne
push
imul
xchg
mov
pop
dec
fcmovu
pop
cmp
in
cmc
pop
push
push
stos
mov
fldenv
shrl
incl
and
outsb
nop
movsb
xor
ss
std
push
pop
pop
mov
cmp
mov
xlat
inc
push
bound
mov
pop
push
ficomps
adc
dec
and
xor
push
stos
in
mov
int
outsb
fs
push
int
pop
fiaddl
adc
mov
out
js
jmp
test
sbb
adc
fmul
lret
push
jecxz
bound
mov
dec
inc
mov
inc
call
sbb
cmc
icebp
outsb
sub
icebp
int3
mov
dec
push
dec
lret
pop
pop
les
fadds
test
pushf
pushf
push
fs
xlat
add
and
stc
daa
pop
gs
rcrl
das
pop
ds
mov
iret
cmpsl
jae
ret
xlat
vmovaps
clc
bnd
pushf
jbe
add
pop
lret
mov
mov
add
mov
movb
sbb
xchg
adc
xchg
cmp
push
sub
dec
cmp
sub
lea
mov
rcrb
jecxz
mov
movlps
ficoml
test
and
push
insb
sbb
movsb
mov
add
test
jo
mov
add
push
inc
xchg
js
xor
xor
subb
dec
xor
divl
adc
cmpsb
call
cmpsl
xchg
cmp
out
test
pop
sarb
dec
inc
mov
adc
jge
test
mul
insl
es
dec
jno
add
jl
sarl
popf
out
push
jmp
mov
out
mov
cld
mov
xchg
add
call
and
add
mov
notl
mov
sub
inc
testl
fdivs
xor
ret
push
lods
push
cmp
xchg
lahf
int3
jb
and
enter
ljmp
imul
push
sbb
jg
ss
jnp
jno
in
inc
dec
ljmp
sbb
fwait
dec
mov
xchg
xchg
inc
xchg
loope
test
repz
xchg
or
fidivl
pop
mov
add
das
outsl
mov
fsub
ljmp
xorl
xorb
xchg
data16
mov
fstp
push
icebp
sbb
test
pop
xchg
and
movsb
hlt
mov
lds
test
fstl
push
loopne
lret
mov
or
test
fwait
sub
imul
pop
mov
js
call
xlat
and
pop
gs
add
aaa
fstl
mov
mov
ss
and
add
lahf
adcl
mov
or
jl
add
or
and
addl
adc
leave
and
rcll
test
jae
pop
mov
loopne
nop
or
jmp
push
mov
push
decb
mov
mov
adc
adc
std
clc
jbe
addr16
sahf
push
sbb
pop
popa
mov
add
mov
ljmp
movsb
lods
sbb
or
mov
pushf
jmp
insb
out
dec
lcall
dec
cld
sub
cmpsl
into
add
inc
ja
shrb
sti
cmpb
cmpsb
mov
loope,pt
sarl
fstpt
or
mov
xchg
mov
xchg
or
scas
push
and
dec
outsl
aad
shlb
add
test
mov
loop
xchg
jmp
sbb
lcall
jae
inc
rorl
xlat
push
fsts
jl
sti
jmp
mov
shr
and
jge
rolb
dec
lods
int
mov
addr16
mov
push
dec
dec
jno
jo
outsb
les
xchg
cmp
fsubs
mov
mov
adc
dec
or
add
ret
add
incb
jb
xchg
sbb
loopne
insb
mov
sub
sti
add
aad
sub
add
out
fidivrl
jl
jae
cmpsb
inc
test
push
int
add
out
ja
jg
mov
call
jge
jmp
inc
sub
sbb
jnp
mov
xchg
adc
stos
int
jo
mov
loopne
cs
sub
dec
sub
js
xchg
loopne
push
mov
test
mov
lea
xchg
mov
arpl
xchg
or
in
mov
mov
bound
cmc
jae
js
out
dec
scas
jne
data16
mov
pop
insl
adc
dec
and
pop
sub
enter
dec
fcoml
das
sahf
sbb
pushf
test
popf
inc
test
cli
push
repz
xchg
loope
test
jno
adc
int3
sbb
xchg
push
cmp
add
mov
dec
stc
faddp
idivb
sbb
add
mov
loope
xor
pop
clc
sub
arpl
add
xor
jge
xchg
jnp
das
sbb
icebp
xchg
push
cmp
movb
jp
add
nop
and
std
or
insb
stos
enter
or
push
rcll
lahf
cmp
lret
jmp
adc
insb
ja
sub
mov
test
fnstcw
cmp
mov
in
jo
jp
addl
icebp
cmpl
xor
xor
rclb
sbb
cmp
out
lock
sbb
inc
inc
sub
mov
mov
fidivl
xor
add
sub
loope
test
push
adc
inc
movsb
dec
scas
dec
mov
mov
lods
push
imul
out
aad
aam
lock
and
jae
adc
cmp
out
mov
setg
pop
add
out
pop
movl
push
xchg
sbb
pusha
sahf
jbe
cmpsl
pop
mov
adc
stos
pop
mov
add
incl
