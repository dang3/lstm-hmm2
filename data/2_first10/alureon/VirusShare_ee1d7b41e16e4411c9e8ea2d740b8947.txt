dec
cmp
lock
rcrb
in
and
shl
xorb
lods
nop
clc
mov
and
pop
xlat
mov
fxch
mov
in
dec
ss
sub
and
sub
ja
jecxz
loop
lods
flds
fcomi
out
xor
or
sub
sbb
mov
jmp
pushf
scas
rolb
test
shlb
sbb
imul
add
mov
mov
lret
jmp
jae
fwait
call
std
mov
popa
xchg
ja
and
and
stos
mov
mov
lods
jnp
jge
xor
loope
orl
iret
sub
xor
add
dec
insl
test
push
mov
movsb
arpl
filds
addr16
lahf
dec
arpl
mov
mov
loop
add
push
cmp
in
in
push
inc
sub
lds
loop
sub
aad
test
sarl
pop
push
enter
data16
mov
fists
jns
cltd
lock
lea
outsb
jp
stc
dec
pop
ss
in
in
or
cmc
loope
into
aad
aad
mov
push
xorb
sbb
inc
daa
xor
rclb
dec
pop
aam
mov
xor
mov
lods
dec
push
sbb
xchg
add
rcll
and
jnp
push
cmp
pop
andl
es
mov
mov
lcall
clc
icebp
fstl
cmp
roll
jnp
lods
rolb
pop
mov
leave
rorb
pop
icebp
mov
push
xor
cwtl
and
xchg
inc
mull
aad
mov
outsl
es
lods
jne
or
cmp
in
dec
mov
popl
pushf
mov
push
shlb
jns
lods
push
and
xchg
lahf
sbb
xlat
and
or
sbb
pop
mov
lahf
arpl
jmp
fucomi
out
popf
sbb
xchg
in
rcll
lret
push
and
aaa
add
pushf
mov
pusha
mov
addr16
mov
fld
mov
and
shlb
push
fs
add
js
add
cmp
pop
sub
movsl
jl
xor
std
enter
aaa
dec
mov
dec
in
jo
enter
mov
inc
mov
mov
dec
call
out
cld
xchg
add
and
dec
int
loop
movsb
int3
xchg
rcrl
jns
xchg
mov
xchg
mov
push
js
inc
into
pop
notb
mov
test
and
sbb
xchg
cmp
mull
mov
das
and
and
aad
adc
inc
xchg
mov
xlat
xchg
das
fiadds
pop
dec
pop
xchg
jno
jp
pop
xchg
dec
jl
xor
push
das
call
arpl
pop
push
pop
jne
jb
add
insb
mov
shr
ja
imul
jno
add
leave
call
jle
addl
dec
sub
and
push
or
sub
cltd
mov
adc
jecxz
and
push
push
fisttpl
or
scas
test
add
add
mov
mov
mov
inc
lret
and
push
stc
jae
add
rol
mov
sub
dec
adc
push
add
jns
sbb
and
cltd
jmp
push
out
mov
adc
and
loop
in
cli
movsl
addl
adc
pop
xor
fwait
cmp
xor
out
in
ss
mov
jns
or
rcrl
or
leave
inc
xchg
xor
mov
movsl
cmpl
adc
cwtl
bound
ds
lret
cmp
loope
mov
int
mov
jne
jb
enter
mov
lcall
xchg
xor
ror
push
out
dec
daa
and
in
mov
jecxz
push
dec
jno
xchg
xchg
jae
pop
rclb
lock
or
xchg
nop
pop
negb
mov
rep
and
jge
jbe
push
scas
add
ds
cmp
js
ljmp
sbb
icebp
aad
mov
xchg
or
or
insl
in
adc
cli
sub
sub
xchg
pushf
fildll
sahf
int3
lock
js
mov
frstor
fbld
jne
add
test
shrl
xor
jb
add
imul
push
lcall
scas
or
gs
in
lahf
addb
in
push
cltd
cmp
bswap
arpl
outsl
fs
or
fwait
lahf
pop
inc
loop
push
das
mov
ds
jge
lcall
aaa
jns
cwtl
sbb
popa
fs
or
lahf
cmp
xchg
jle
into
ja
out
jmp
xchg
mov
mov
insb
enter
pop
cltd
decl
xor
xchg
fidivrs
jge
mov
sub
clc
fstl
enter
adc
cmp
adc
imul
pop
repnz
insb
inc
add
mov
mov
loopne
int3
ss
iret
inc
inc
outsl
notb
imul
les
popa
stos
cmpsb
ret
in
push
inc
fldln2
leave
dec
mov
xlat
out
sbb
or
sub
add
rorb
sbb
dec
dec
shl
sbb
cs
ja
inc
daa
fs
mov
sbb
or
xchg
loopne
dec
fistpl
adc
mov
js
push
clc
test
shlb
xchg
mov
inc
pushl
les
jp
outsb
jo
xchg
cmp
enter
iret
adc
jmp
daa
sbb
dec
addb
pushf
out
enter
mov
mov
in
dec
test
sbb
test
std
insl
push
movsl
movsl
out
mov
and
jae
dec
addr16
adc
mov
push
cwtl
loope
or
or
popa
repz
aas
mov
fdiv
push
sahf
lret
repnz
es
sbb
add
mov
push
scas
popa
sbb
mulb
jl
sti
push
rol
push
xchg
xchg
push
add
in
pop
add
out
dec
lahf
jne
cli
insl
add
push
insl
inc
xchg
or
rol
xor
in
jge
mov
mov
fcmovbe
jb
or
loope
outsl
push
rorl
adc
xchg
inc
inc
out
imul
inc
in
and
sbb
das
and
jl
xor
out
ret
cmc
dec
and
push
enter
punpcklwd
xchg
std
stos
mov
cmp
loop
xor
pushf
push
test
push
mov
mov
inc
and
mov
scas
rcrl
xchg
aas
mov
jp
sub
orb
dec
mov
sbb
mov
ja
mov
outsb
push
aad
sbb
xorl
in
fstp
lcall
xchg
pop
adc
or
ja
and
and
enter
xor
cmp
push
jp
into
pop
adcl
pop
jp
test
push
add
inc
cmpl
sbb
ss
push
daa
dec
ret
mov
movsbl
lahf
ss
xchg
out
ds
pop
lods
sub
jb
movsl
cmp
or
outsb
push
sub
or
data16
in
fsubr
lods
andb
pop
jp
jg
push
pop
pop
xor
mov
cs
sbb
mov
fisubrl
cmpsb
call
mov
add
jo
cltd
in
push
jae
and
and
fstpt
pop
sbb
je
out
daa
jns
sub
lods
cmc
adc
pop
in
adc
and
mov
push
aam
movsb
inc
flds
je
dec
xchg
jge
xor
push
leave
scas
icebp
add
pop
mov
call
or
jl
mov
out
push
mov
mov
repz
in
fucomp
popf
xor
push
adc
data16
jno
jp
or
add
push
mov
inc
loop
in
ss
adc
lods
pusha
xchg
int3
loope
ja
enter
test
out
cmp
clc
dec
bnd
sahf
adc
cmc
pop
or
mov
jne
lock
aaa
mov
add
into
push
pop
and
inc
lods
subl
int
in
or
into
xchg
dec
cmp
jp
aad
fdivl
mov
and
sub
subb
mov
add
jns
addr16
mov
in
out
sbb
adc
sbb
and
subb
fstl
fistl
nop
mov
cmp
into
adc
push
iret
in
into
loop
xor
mov
fldcw
xchg
mov
cmc
xchg
xchg
pop
loope
sub
shlb
lret
fisttpll
xchg
pop
jne
sbb
mov
and
lret
mov
dec
push
std
or
jmp
sbb
movsb
push
stc
dec
mov
sbb
clc
mov
push
repnz
sub
call
dec
jb
fstl
enter
xor
mov
xchg
in
cmp
lods
movsb
cmp
movsl
subl
xor
out
loop
lock
mov
fwait
outsb
fimull
sahf
fwait
lret
js
jb
call
adc
loop
mov
pop
int3
mov
les
pushf
dec
int
shll
mov
cs
xor
inc
mov
je
push
imul
scas
dec
mov
out
nop
js
mov
scas
lock
dec
adc
sbbl
adc
pop
cwtl
nop
add
dec
pop
xchg
test
sub
cmp
mov
jo
call
imul
push
xchg
addr16
xchg
inc
mov
push
mov
inc
dec
call
movzbl
lea
call
add
push
call
mov
mov
inc
mov
dec
dec
call
lea
add
movsbl
imul
mov
add
dec
add
lea
add
mov
dec
mov
inc
call
or
add
or
imul
dec
call
dec
lea
call
mov
mov
imul
dec
dec
lea
dec
lea
pop
add
add
add
and
pop
inc
mov
pop
lea
add
inc
dec
pop
mov
mov
and
and
and
mov
inc
mov
pop
dec
mov
pop
mov
lea
mov
imul
inc
call
sub
mov
sub
mov
ret
lea
mov
push
add
lea
push
add
dec
push
xor
dec
push
lea
mov
push
inc
add
mov
and
or
push
sub
ret
push
mov
lea
mov
and
movzwl
mov
mov
push
inc
dec
mov
call
pop
ret
jmp
lea
mov
add
mov
movzbl
lea
imul
add
dec
add
and
and
dec
movzbl
lea
xor
xchg
imul
movswl
dec
dec
xor
lea
inc
inc
dec
inc
or
dec
dec
jne
lea
mov
inc
dec
pop
inc
inc
pop
inc
lea
pop
mov
mov
lea
sub
sub
dec
add
inc
mov
sub
mov
add
ret
push
or
imul
movzwl
movsbl
dec
add
inc
mov
push
push
push
push
inc
inc
inc
push
dec
sub
or
mov
lea
lea
add
imul
movswl
mov
xor
push
mov
inc
xor
mov
add
push
lea
xor
push
dec
mov
pushl
add
call
mov
add
mov
dec
mov
xor
and
inc
inc
pop
ret
inc
mov
dec
mov
add
inc
inc
mov
add
movzbl
dec
dec
add
lea
cmp
jb
add
xor
add
inc
mov
inc
lea
mov
dec
lea
inc
add
add
xor
dec
sub
mov
mov
lea
cmp
jb
dec
pop
lea
mov
inc
or
sub
xor
mov
add
movsbl
or
mov
mov
xor
dec
mov
xor
mov
mov
movzbl
test
jbe
dec
mov
dec
inc
and
inc
dec
dec
movsbl
movsbl
inc
dec
and
mov
mov
mov
inc
mov
movzbl
movzwl
or
add
mov
dec
and
dec
mov
mov
add
mov
mov
sub
xor
mov
dec
inc
mov
sub
imul
and
mov
lea
dec
jne
xor
mov
movzwl
dec
mov
inc
sub
dec
dec
sub
dec
movswl
mov
lea
add
sub
mov
lea
dec
lea
lea
mov
imul
imul
test
jbe
dec
movsbl
mov
add
dec
inc
lea
dec
mov
add
inc
dec
imul
mov
dec
inc
mov
dec
inc
dec
lea
inc
and
inc
lea
mov
lea
and
movzbl
inc
inc
add
dec
inc
and
add
mov
mov
add
lea
movzbl
mov
movsbl
mov
dec
jmp
push
inc
mov
mov
dec
movzbl
inc
or
or
dec
lea
mov
lea
inc
mov
lea
imul
mov
lea
dec
sub
or
sub
dec
dec
dec
inc
inc
mov
sub
xor
inc
dec
inc
or
mov
mov
add
sub
mov
cmp
je
call
call
add
inc
and
inc
dec
and
inc
inc
sub
mov
mov
mov
add
dec
mov
add
mov
inc
inc
xor
movzbl
sub
dec
mov
imul
dec
dec
mov
inc
mov
mov
and
mov
or
mov
imul
inc
add
mov
and
inc
movzbl
imul
lea
lea
imul
sub
ret
inc
mov
pop
lea
ret
push
add
imul
dec
mov
inc
push
and
inc
push
or
push
dec
push
mov
mov
sub
lea
inc
call
mov
push
dec
lea
xor
movsbl
sub
add
neg
lea
sub
dec
mov
mov
dec
mov
lea
mov
mov
lea
inc
inc
imul
dec
dec
je
inc
dec
sub
mov
mov
jmp
add
mov
inc
inc
add
mov
repnz
dec
mov
add
sub
jmp
dec
mov
imul
dec
sub
mov
or
mov
inc
and
mov
inc
inc
lea
mov
dec
pop
pop
ret
push
mov
mov
mov
add
add
mov
dec
inc
sub
mov
inc
lea
xor
dec
add
dec
dec
inc
lea
sub
imul
pop
ret
sub
inc
mov
mov
inc
mov
dec
dec
mov
and
xor
mov
mov
or
xor
mov
dec
mov
inc
mov
inc
mov
mov
inc
mov
add
mov
cmp
jb
lea
push
or
dec
push
mov
lea
push
lea
mov
xor
and
dec
xor
lea
imul
xor
inc
mov
push
lea
dec
mov
add
inc
xor
inc
add
mov
or
sub
mov
mov
lea
movzbl
inc
inc
xor
imul
add
lea
dec
add
and
mov
movzbl
and
lea
lea
jmp
add
aam
xlat
rcrl
inc
mov
rclb
push
scas
clc
push
add
push
dec
orl
mov
fisttpl
movsl
sub
ret
mov
inc
ljmp
ds
inc
mov
and
leave
cld
sub
sbb
push
iret
adc
dec
inc
clc
in
dec
cmpsl
cmp
jo
test
or
scas
adc
hlt
mov
pop
mov
xor
cmpsl
xchg
xchg
pop
incl
inc
daa
or
outsb
add
add
pop
dec
mov
pop
idivb
mov
mov
pop
daa
jb
stos
sub
popa
mov
mov
ret
push
push
mov
mov
test
mov
loopne
nop
jp
cmp
push
and
mov
mov
ficoms
dec
mov
push
pop
pop
dec
scas
mov
insl
daa
jmp
daa
not
xor
incb
movsb
sbb
loope
dec
mov
push
mov
jp
or
inc
jmp
jle
out
imul
insl
outsl
push
or
add
fwait
imul
jo
pop
push
rolb
jbe
mov
pusha
jae
xchg
cmp
es
add
and
daa
sbb
sub
ss
pop
dec
push
xchg
add
and
xor
test
push
jno
je
in
daa
ret
sub
into
push
popa
dec
cmc
cmc
pop
pop
xor
ja
ss
mov
dec
lock
add
push
movsl
fists
dec
push
inc
fs
mov
pop
sbb
xchg
loopne
iret
adc
inc
push
repnz
sub
or
xchg
sbb
cmovg
sub
dec
shlb
and
out
inc
lea
test
int
sub
and
pop
push
push
cmpl
push
je
outsb
stos
fdivl
pop
lcall
push
mov
mov
dec
push
mov
mov
mov
rol
pop
sarb
pop
jge
pushf
dec
sub
idivl
xchg
push
jg
into
xorl
loop
dec
loope
clc
push
out
jg
jne
pop
popf
repnz
push
xor
jns
push
mov
and
push
cld
in
xor
sbb
push
ret
pop
lods
mov
aaa
push
adc
out
cmp
js
push
shll
cmp
push
stos
cwtl
movsl
filds
out
orb
aam
pop
cmpl
or
out
mov
lea
stos
pop
in
sbb
lahf
adc
cmp
dec
idivl
addr16
inc
mov
lds
stos
imul
cli
idivl
push
outsb
push
aas
mov
mov
repnz
sbb
push
lock
bnd
jp
dec
inc
cli
lahf
lcall
shlb
imul
jl
fucomp
jb
out
aaa
test
cli
out
mov
call
jmp
push
mov
mov
popf
push
mov
xchg
push
int
xor
mov
cmp
in
fisubl
push
cwtl
adc
insb
cmp
mov
sub
or
leave
jmp
out
sbb
sbb
test
push
push
push
test
sar
fiaddl
mov
and
sbb
andb
ret
cli
jb
nop
jp
pop
mov
xor
fstpl
inc
xchg
cmpsb
or
aad
imul
cmpsl
inc
lcall
stos
and
inc
and
inc
inc
pop
rorl
leave
jl
ret
lret
push
dec
cmp
scas
add
cli
jne
out
mov
test
xchg
add
mov
cwtl
loope
xlat
in
test
push
aad
ds
fldl
dec
inc
sti
dec
inc
sub
scas
xor
fsub
fs
mov
jae
cmpsl
add
push
xchg
jb
mov
or
xchg
jo
cmpsb
cs
cmp
cmp
or
jecxz
and
pop
shrl
mov
inc
xor
sbb
add
push
jle
pop
xchg
clc
mov
mov
rol
xor
bound
mov
and
add
mov
mull
xchg
or
cmp
rorb
add
out
xchg
cmp
xor
push
dec
out
ljmp
sbb
hlt
mov
cmp
mov
shll
inc
inc
inc
ret
pusha
adc
pop
mov
inc
sub
lret
cld
ret
pop
ja
aad
pushf
sbbl
adc
iret
mov
pop
test
cltd
sub
ds
call
in
pop
test
push
sub
inc
pop
and
push
mov
fsts
repnz
cmpsl
push
cltd
sarl
mov
shlb
jle
loopne
jae
shll
std
push
and
fsubs
iret
dec
mov
fnstsw
and
pop
adc
sbb
xor
xchg
push
bound
xor
test
jae
jl
xchg
adc
sub
stc
adcb
lret
dec
jo
ficomps
orl
mov
mov
mov
repnz
lods
popf
jbe
popa
jecxz
sahf
adc
popf
shlb
js,pt
aas
mov
sub
aas
sti
iret
cmp
fdivrs
iret
loope
adc
lahf
cli
adc
push
mov
push
sub
fstps
xchg
sbb
cmpsl
or
das
mov
int3
inc
stc
add
pop
and
xor
inc
xchg
mov
stc
mov
mov
aas
dec
es
daa
hlt
in
push
cmc
fdivrs
ficoms
mov
enter
faddl
mov
mov
dec
mov
lods
shlb
pop
sahf
add
rclb
push
and
xor
pop
dec
lods
xor
adc
loopne
and
bound
leave
out
fnstcw
in
in
in
add
loope
add
mov
add
add
add
clc
xor
adc
add
mov
add
add
add
mov
add
mov
add
push
fistps
cs
mov
pushf
ljmp
jae
push
cmp
ret
orb
out
pop
clc
mov
sub
stc
insb
fsubs
xor
test
dec
imul
push
xor
cwtl
cs
push
mov
push
mov
in
movsb
in
insb
xchg
fisttps
mov
imul
adc
push
push
mov
adc
aas
cld
jmp
imull
test
rcl
mov
fsubs
push
mov
sub
jmp
pop
mov
add
loopne
imul
pop
push
sahf
sub
adc
out
stos
push
dec
and
clc
flds
std
mov
pop
jbe
push
jp
ja
aaa
mov
pusha
push
or
cmpsl
jg
jns
mov
push
xlat
leave
scas
mov
je
mov
mov
jge
jle
mov
xchg
fdivs
xchg
inc
push
shl
addr16
fdivs
mov
dec
std
xor
xor
adcl
inc
xlat
or
aam
mov
enter
sub
sub
test
mov
xor
xchg
mov
lret
popf
fs
push
fcomps
jnp
cmpsl
dec
push
rol
ret
cmp
loope
fcmovb
push
sbb
inc
jge
or
aad
cmp
inc
notl
jno
push
in
test
xchg
pop
sbb
mov
mov
idivl
fnclex
mov
aad
dec
aaa
dec
pop
stos
imulb
mov
pop
loopne
dec
sub
dec
lcall
sub
mov
popf
pop
push
mov
or
cmpsl
mov
mov
inc
mov
aaa
add
cmp
pop
lea
lds
invd
ds
hlt
outsl
cmpsb
jge
fdiv
xchg
movsl
cmp
adc
das
daa
fwait
rorb
add
mov
scas
xchg
cmc
in
scas
out
shrl
shll
aad
out
pop
xchg
add
insl
outsl
pop
adc
sbb
xor
stos
cltd
movsb
xchg
or
mov
xchg
cwtl
sbb
fmull
test
xchg
xchg
ret
sbb
inc
ja
xchg
jle
mov
sar
sbb
adcl
mov
add
pop
jecxz
addr16
filds
pop
push
loopne
testb
shll
push
dec
cwtl
push
xchg
adc
sub
inc
pop
xchg
xor
sbb
out
dec
or
test
jmp
mov
in
out
lret
or
mov
add
add
pop
or
cmovnp
mov
lea
xchg
sbb
jmp
mov
in
fcompl
mov
cmp
iret
bound
jp
sahf
xchg
out
aaa
mov
sub
addr16
shr
leave
push
repz
idivb
add
dec
insb
inc
cmovno
shrb
je
jno
push
push
push
mov
jne
aad
popf
or
les
fwait
pop
jge
shl
mov
data16
stos
inc
sub
mov
mov
mov
xchg
lods
gs
addr16
fiaddl
cli
gs
cld
aam
pop
mov
imulb
fldl
mov
cs
popl
sbb
aaa
push
mov
sbb
push
in
dec
fisttpll
cmpsb
sub
sahf
icebp
cli
mov
mov
stos
aam
mov
out
cld
and
and
and
and
popa
cmp
pop
insl
gs
push
outsb
or
adcl
jl
mov
jbe
enter
fisttps
xchg
insl
movsl
xchg
mov
aaa
ljmp
shlb
mov
incb
mov
jno
xchg
movsb
add
jns
and
in
add
lret
adc
mov
imul
leave
or
push
fcmovne
push
ret
or
popa
imulb
or
cmp
pop
mov
jmp
push
sub
sahf
or
ret
push
inc
inc
movsl
mov
dec
jge
inc
mov
outsb
scas
scas
nop
mov
lods
je
mov
rolb
mov
jl
pop
outsl
and
lods
rclb
lret
fcoms
out
clts
mov
or
cwtl
jno
insb
dec
mov
je
cmp
mov
xchg
push
stos
dec
pcmpeqd
out
out
cmp
xchg
dec
cs
push
test
mov
xchg
jle
repnz
out
call
ljmp
stc
cmp
imul
fcmovbe
shlw
add
xorb
popl
ficoml
add
sbb
push
cld
cwtl
jb
sahf
lret
insl
xor
sbb
push
inc
push
or
inc
mov
pop
jp
xchg
dec
jmp
addr16
and
movsl
jne
popf
in
dec
ljmp
pop
jmp
subl
les
pop
or
bnd
add
dec
dec
lcall
repnz
pop
adc
stos
inc
push
dec
mov
mov
fidivs
mov
sti
loopne
ret
imul
mov
outsb
loopne
pop
jl
sar
cmc
hlt
mov
test
cmc
xor
push
push
sbb
push
fnstenv
fwait
rorb
xlat
aas
add
add
sarl
scas
fdiv
rolb
ret
lods
into
outsb
das
cmp
fwait
ja
data16
in
push
mov
add
mov
rcll
mov
jp
xchg
adc
jbe
fsts
hlt
ss
pop
sbbl
pop
lods
jns
cmpsb
arpl
call
stos
sbbl
sub
fwait
cld
xchg
sub
jns
insl
adc
adc
outsl
xor
and
fsts
rcrb
mov
mov
lahf
cmp
repz
test
adc
sub
in
cmp
call
cmpsb
xor
sbb
addr16
movsb
sbb
and
adc
pop
sbb
adc
adc
imull
and
ficoml
xchg
int
sahf
ficompl
mov
aad
fs
xchg
out
sbb
or
in
xchg
out
lret
add
jae,pt
inc
xor
loope
inc
pop
xchg
test
push
pop
js
adc
adc
xchg
sub
testl
scas
push
add
mov
sub
arpl
in
subb
push
imul
fs
pop
leave
jl
divb
cmpsb
ljmp
jb
xchg
cmp
gs
add
scas
or
aam
rolb
xchg
in
or
int3
push
mov
inc
movsb
lea
shll
mov
je
xorl
inc
mov
movl
mov
cmp
lretw
stos
lcall
test
hlt
int3
test
jg
mov
sahf
pop
iret
jae
mov
out
mov
xor
int
sub
out
jp
mov
nop
and
push
xchg
and
xchg
adc
out
jne
cs
test
imul
or
mov
into
adc
xchg
or
fisubrs
sub
mov
add
fucomi
dec
insl
mov
stos
aam
enter
pop
repz
push
xor
add
and
xchg
pop
ja
and
loop
ret
and
scas
pusha
iret
imul
stos
dec
mov
lahf
sbb
fcomps
fsincos
cmp
mov
inc
pop
xor
mov
shl
jae
shr
or
ja
and
fdivrs
jb
dec
mov
rolb
cwtl
fs
notl
add
sahf
dec
add
or
push
mov
xchg
test
sahf
cli
rolb
adc
mov
int3
in
add
addr16
ljmp
loop
fcoml
dec
ret
mov
jns
add
add
out
test
jb
jnp
push
sub
rclb
adcl
loope
mov
imul
call
jle
mov
movsl
jbe
push
dec
and
dec
rep
push
es
xor
bnd
test
mov
sub
xor
jne
inc
iret
rorb
push
cwtl
in
pop
cmp
aam
shlb
sbb
pop
and
lcall
xor
fnsave
lret
out
mov
adc
or
adc
popa
mov
cmp
arpl
cmc
test
sub
sbb
data16
enter
jecxz
xchg
push
mov
mov
das
gs
and
and
fwait
jno
add
into
sbb
pop
ret
cmp
push
inc
mov
xor
jmp
insb
insl
mov
xor
adc
push
sub
jae
inc
or
ret
fwait
jge
adc
incb
int
adc
dec
sbb
test
add
lret
mov
xchg
lret
mov
imul
adc
add
mov
mov
cwtl
sbb
test
add
std
xchg
inc
pusha
into
je
pop
or
pop
mov
adc
clc
test
add
pop
mov
xchg
movsl
rcrb
push
cld
ret
test
scas
repz
insl
sub
mov
in
jl
test
ds
or
mov
bound
out
mov
sarb
pop
jnp
or
cmp
xor
dec
orl
cmc
adc
addr16
clc
push
add
add
cmc
inc
fisubs
mov
push
aam
lock
imul
loop
push
mul
xor
xchg
daa
in
in
mov
lea
rorl
lahf
test
xchg
mov
cmp
mov
push
ficompl
jmp
out
test
sub
fadds
push
cli
aad
insb
mov
pusha
imul
ljmp
aad
xchg
mov
dec
testl
jae
xchg
jne
out
push
data16
cltd
inc
cmp
adc
xor
cli
lret
fstpt
adc
scas
dec
dec
repnz
sub
ret
aam
mov
inc
loop
mov
mov
jp
lods
fildl
aaa
out
push
sbb
fnstenv
or
stc
lahf
fs
cmp
aam
int3
mov
lock
push
test
in
jmp
push
or
push
shll
popa
insl
stc
sub
push
je
cs
sub
ret
pop
push
push
cmp
inc
int
xor
mov
repz
aam
out
movsl
jle
out
pop
ja
push
lret
mov
jo
out
pop
mov
fchs
pop
cmc
xor
add
xchg
cmpl
cmc
mov
aam
dec
dec
int3
mov
outsb
pop
pop
aam
xor
cmp
pop
or
mov
lea
inc
pop
out
pop
inc
sahf
lret
add
and
das
dec
ret
sbb
xor
jns
gs
adc
xor
dec
lods
mov
loop
cmp
outsl
bound
fmull
test
pop
jo
xchg
push
xorb
jbe
adc
push
xor
push
xor
mov
mul
sbb
jns
add
xchg
add
sub
adc
dec
mov
scas
or
mov
mov
jno
jle
shrl
inc
mov
lret
mov
push
fnstcw
icebp
sti
sub
pop
pop
test
pushl
and
xabort
pop
scas
or
dec
popf
sub
cmp
addr16
enter
scas
mov
js
cmc
mov
inc
lods
icebp
add
cltd
test
out
pop
mov
loope
inc
pop
leave
xchg
negl
fidivs
dec
pop
sti
xor
dec
stos
dec
inc
xor
xchg
mov
addr16
cmc
jmp
pop
bound
inc
rcr
jle
and
or
addl
loope
scas
leave
lods
push
jge
popf
pop
inc
or
mov
arpl
jbe
add
adc
and
and
mov
push
lret
mov
jmp
or
in
xchg
mov
mov
or
stos
mov
in
xchg
lds
sbb
repz
out
sub
rcr
aad
daa
inc
mov
test
pop
sub
or
mov
es
push
jbe
rcrb
inc
and
rcr
outsb
test
add
shll
inc
jge
rcr
dec
dec
xchg
mov
or
pop
es
loop
fmuls
or
inc
and
leave
imul
mov
push
mov
pop
subb
rcr
mov
cmc
rcr
cmc
mov
adc
pushf
pop
ret
fs
push
fbstp
movsl
pusha
lods
push
jp
cmpsl
push
clc
dec
data16
xor
je
mov
pop
cli
sbb
and
add
aad
rcll
adc
jmp
ljmp
sbb
lods
dec
ja
and
dec
imulb
xor
pop
or
cmp
jmp
dec
sbb
bound
test
ljmp
mov
xchg
and
mov
je
lret
add
jbe
push
loop
scas
jbe
jp
cmp
push
dec
cmpsb
js
push
add
testl
insb
xchg
pop
es
ret
out
jb
les
pop
cmc
in
fisttps
outsl
or
push
rcll
xor
sub
mov
hlt
push
pop
dec
int
push
inc
data16
mov
mov
pop
mov
cmp
mov
hlt
pop
ficompl
fistl
sub
xchg
mov
ja
adc
jp
xchg
insb
sbb
in
xlat
xor
jmp
mov
sbb
aam
stc
popf
xor
rclb
or
rcll
xchg
mov
cmp
xchg
or
mov
adc
inc
frstor
dec
sub
push
rolb
push
adc
cmp
fidivs
cmpsb
sahf
push
xchg
push
xchg
sbb
ljmp
inc
sbb
jns
movsb
popf
inc
pop
add
pop
scas
movsb
push
sub
pop
dec
scas
and
rcrb
lea
je
jbe
cltd
pop
push
call
lods
adc
mov
sub
pop
rolb
mov
dec
imul
mov
xor
adc
lock
push
xor
xchg
movsb
outsl
push
add
cmc
loop
xchg
call
xchg
insl
aam
cmp
pop
fidivl
fstpl
pop
outsb
dec
lret
push
dec
dec
inc
fucomi
inc
lods
loopne
push
mov
sub
lahf
enter
call
dec
ljmp
mov
xchg
gs
inc
rol
cmp
aas
test
aad
push
dec
sub
fldl
sahf
mov
stos
stos
cmpsb
test
mov
lds
or
scas
mov
shll
das
xchg
shlb
shll
xchg
push
mov
addr16
jge
or
push
adc
pop
dec
xchg
push
cld
and
cmp
push
loop
cmp
lds
sub
inc
cs
iret
cmpsb
stc
xor
cmp
ret
and
sbbb
testb
jecxz
aaa
push
xchg
jge
jnp
mov
jmp
imul
push
jg
xor
cmpsl
xchg
arpl
outsl
rcrb
add
ljmp
add
test
and
pmullw
pop
cmp
negb
cmp
or
cli
insb
pusha
inc
pop
or
xchg
inc
adc
sbb
xor
iret
in
add
jle
je
filds
xchg
xchg
cmpsb
xor
movsl
outsb
fisttpl
cmc
call
jp
inc
in
aaa
imul
aam
xor
cmp
stc
es
aad
adc
mov
push
fcmovnbe
sub
xorps
xchg
ds
mov
hlt
xchg
jb
pushf
pop
in
cwtl
lret
pop
cmp
ficompl
inc
xor
loope
mov
scas
mov
repnz
pusha
sub
fwait
inc
pop
bound
ja
ds
push
loop
mov
mov
icebp
mov
popl
xlat
and
out
pop
mov
fiaddl
push
aam
outsl
faddp
inc
lds
add
xor
xchg
xchg
stos
xchg
xchg
pop
mov
mov
iret
push
fsubrp
lret
cmpb
xor
jae
push
icebp
mov
and
cmpl
mov
and
push
pushf
cli
clc
scas
add
jecxz
dec
inc
mov
in
hlt
hlt
in
pop
ret
cmp
or
ja
out
pop
jae
movsb
and
mov
ficompl
pop
maskmovq
testl
jl
enter
mov
movsl
pusha
xor
popf
aas
test
int
sub
fwait
jbe
test
call
add
lret
mov
mov
lock
xchg
xchg
adc
out
push
loop
add
pop
xor
mov
dec
cwtl
mov
jo
enter
sbb
out
fidivs
mov
stos
insl
sub
push
popf
push
in
cwtl
push
xbegin
popa
mov
cmp
fst
aam
cltd
inc
jno
pop
pop
jnp
sbb
and
nop
stc
mov
stos
adc
test
scas
xchg
fidivl
xor
mov
cmc
lods
sbbl
adc
push
popf
adc
dec
out
mov
ja
icebp
adc
dec
mov
xor
push
pop
aaa
scas
jb
call
das
gs
sbb
sub
xchg
fwait
xlat
cmpsb
fwait
cwtl
jp
mov
mov
mov
dec
into
cmpsl
lcall
rolb
xor
xor
jns
jae
in
and
das
jg
mov
lods
sub
dec
inc
or
adc
mov
les
fs
fdivrs
adc
and
push
or
mov
pushf
push
dec
sti
loope
bound
nop
loop
cmp
decb
test
insb
out
mov
les
fwait
cmc
jne
out
pop
stos
adc
movsl
push
dec
int
int3
lret
push
imul
cmp
cmp
jecxz
les
ss
rcll
mov
clc
mov
xchg
jecxz
pop
mov
mov
xchg
into
xor
repz
sahf
mov
xchg
mov
dec
add
mov
xchg
sbb
xor
loope
ret
js
shl
or
mov
out
stc
xchg
imull
popa
cmp
pop
xchg
and
pop
ja
arpl
ret
into
add
out
mov
jle
call
mov
cmpsl
mov
in
add
add
xchg
jns
sbb
adc
mov
outsl
add
xor
mov
inc
sub
add
sub
stos
xor
inc
test
pusha
les
dec
psubusw
lret
imul
int3
xchg
and
and
xor
push
push
jns
stos
mov
sbb
mov
mov
dec
fdivrl
outsl
push
push
icebp
mov
adc
dec
insb
jl
sbb
into
push
mov
mov
sub
sbb
mov
outsb
daa
out
je
jmp
jecxz
daa
push
add
fimull
cld
cmpsb
inc
xlat
cmc
cli
and
fs
lock
mov
insl
lahf
movsl
jae
pop
arpl
pop
dec
sub
pop
and
and
out
sbb
xchg
fcomi
pop
xlat
ror
ja
jp
cmp
and
cld
mov
xchg
icebp
mov
subb
sub
and
dec
rolb
fwait
mov
ss
mov
pop
lods
sub
ficomps
aam
in
xchg
stc
jecxz
and
gs
nopl
rcll
pop
cltd
jp
cltd
jb
das
aad
pop
lock
jno
cmpl
xor
xchg
xor
sbb
mov
int3
pop
xlat
iret
mov
arpl
lods
xchg
cmp
arpl
leave
add
frstor
add
jns
mov
int3
dec
mov
push
adc
cmpsl
adc
dec
movsb
adc
js
and
sbb
frstor
mov
sbb
sbb
mov
mov
ja
add
xchg
clc
cltd
cmp
cwtl
jecxz
push
aad
dec
inc
mov
add
rcrl
rclb
enter
pop
aaa
sub
lret
cmovle
lock
les
imul
std
mov
cmp
add
sub
sub
out
jmp
test
shl
lock
das
mov
pop
push
imul
loop
xor
xchg
repz
xor
add
mov
mov
cs
sbb
test
mov
mov
mov
mov
out
iret
cmp
out
shll
cmp
mov
subb
fs
and
xor
or
add
popa
leave
or
scas
dec
jg
mov
lods
sahf
cmp
jnp
lea
pop
mov
xlat
std
sbb
dec
lret
in
cmp
lds
cmp
inc
xchg
inc
es
icebp
push
push
nop
repnz
jno
loope
clc
gs
push
ss
aaa
push
test
sub
pushf
mov
data16
xor
clc
sbb
push
push
scas
and
inc
push
dec
and
jne
aad
xor
movsl
sbb
int
and
test
pop
inc
out
dec
add
inc
test
addl
stos
jne
test
roll
cmc
add
mov
insl
mov
sub
mov
jbe
lret
into
popf
inc
cmp
xchg
sbb
out
lds
push
mov
sub
adcl
mov
lods
push
fnstsw
xchg
cwtl
inc
mov
or
fadd
mov
inc
jnp
daa
jno
pop
inc
push
test
adc
jge
jne
sub
cmp
js
mov
add
dec
pop
iret
clc
aas
mov
mov
xchg
subb
add
insb
popf
pop
lods
movsb
xchg
mov
daa
shlb
roll
pushf
rclb
imul
rcll
jns
leave
shrl
sub
jns
lea
bnd
out
daa
aaa
add
loopne
sbb
out
adc
rcrl
add
scas
mov
inc
pushf
jns
jg
mov
or
pop
inc
add
mov
in
pop
sbb
ja
cwtl
mov
push
clc
inc
pushf
popf
sbb
cwtl
out
faddl
stos
xchg
fsubl
imul
pop
clc
push
xchg
mov
push
orb
dec
xor
dec
popa
out
and
sub
sub
sbb
movsl
inc
pop
das
xchg
inc
fidivrs
jo
clc
push
pop
xchg
jl,pt
or
rcl
xchg
fnstcw
loop
stos
pop
push
cmp
xor
sahf
mov
inc
adc
mov
jp
jmp
cmp
lret
punpcklbw
sbbl
in
out
xor
mov
dec
push
jmp
jp
mov
in
movsl
adc
sbb
and
cli
shl
jge
test
shl
insl
imul
adc
lret
call
aas
test
aas
orb
push
sub
repnz
cmp
jnp
mov
das
iret
sbb
jnp
popf
sub
mov
jl
mov
mov
pop
mov
arpl
mov
cmp
jle
shr
test
icebp
add
icebp
xchg
jne
lcall
clc
lahf
mov
jle
xchg
int3
cld
jbe
sub
addr16
ret
aaa
xchg
adc
pop
faddp
in
mov
add
lcall
pop
fnstenv
lds
xor
addr16
ret
push
sbb
pop
cmp
das
jecxz
or
ret
cmp
out
dec
push
das
outsl
xchg
add
adc
addl
inc
jb
adc
sub
sbb
adcb
ds
cmp
test
mov
pop
into
sub
jp
mov
fstpl
push
sub
add
aas
into
std
dec
mov
rolb
movsl
sarl
mov
mov
fcmovnu
std
imul
xchg
dec
xor
std
push
mov
in
clc
imul
or
push
adc
fucom
push
and
jmp
xchg
insb
jmp
xor
push
in
int
hlt
push
xor
int3
popf
dec
scas
sbb
xchg
mov
aaa
mov
mov
sbb
sbb
jnp
inc
fistps
aaa
loope
sub
push
jno
xor
mov
mov
mov
mov
mov
adc
daa
xchg
std
jbe
aaa
data16
push
cmp
cmc
fcoms
jb
push
push
mov
dec
test
lods
xor
add
xchg
pop
outsb
jle
sbb
jg
xchg
cld
jle
cmp
or
jne
or
jno
mov
aas
divb
jne
pop
jge
out
add
xchg
fisubl
or
pop
xchg
mov
and
sub
xchg
scas
aaa
pop
packuswb
jo
roll
push
rcl
add
popa
out
sub
push
lods
insb
adc
addr16
mov
jmp
mov
fists
jmp
dec
lahf
nop
inc
pusha
mov
imul
push
dec
cmpsl
imul
lea
or
jg
cmp
jne
mov
int3
xchg
pop
cld
jb
xchg
in
and
mov
scas
pusha
in
leave
insb
dec
ret
sbb
xor
lret
je
je
popa
fdivrs
sbb
push
push
xor
pop
leave
mov
mov
and
adc
jg
dec
cmp
cli
out
push
sbb
and
inc
in
xchg
inc
cltd
jmp
push
push
ds
or
lret
loop
ljmp
lcall
dec
xchg
push
jecxz
ljmp
aad
mov
mov
gs
or
dec
sub
popf
mov
inc
add
rcr
bnd
addr16
dec
mov
sti
in
xlat
dec
loopne
mov
lret
fstp
or
sbb
das
in
push
data16
xchg
ficoms
movsb
out
push
dec
mov
sti
sub
les
je
outsb
push
es
cmp
jl
ds
imul
mov
xlat
inc
ret
rcrl
push
and
jne
inc
ja
inc
push
shll
hlt
out
jnp
mov
movsl
adc
jo
pop
xor
sub
orl
movb
ss
pusha
mov
aad
aad
in
fldcw
xor
es
dec
out
xor
xor
sub
add
mov
test
pusha
sahf
mov
push
fs
aam
sub
leave
push
xor
xor
cltd
stc
or
cmpsl
mov
mov
stc
jae
adc
repz
sbb
stos
sub
mov
iret
stos
xchg
sar
push
pop
mov
lcall
jmp
mov
lret
js
pop
or
pop
push
mov
jo
jns
jb
jo
ja
shl
fcoml
out
and
in
mov
out
fsubrp
sbb
xor
inc
dec
repnz
mov
mov
arpl
sub
icebp
aad
scas
insb
jne
in
add
