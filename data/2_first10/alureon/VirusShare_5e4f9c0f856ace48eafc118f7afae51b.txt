push
mov
sub
push
mov
push
test
je
mov
test
je
cmpl
je
mov
test
je
push
lea
push
lea
push
push
call
mov
add
push
pop
lea
add
call
mov
test
je
mov
sub
mov
mov
inc
dec
jne
pushl
mov
pushl
pushl
pushl
pushl
call
mov
mov
mov
call
mov
add
push
pushl
pushl
push
call
add
pop
jmp
xor
pop
pop
leave
ret
jmp
push
mov
push
push
mov
imul
push
mov
cmp
jb
mov
push
call
mov
add
imul
push
xor
pop
div
mov
mov
mov
mov
sub
mov
test
je
mov
sub
push
mov
call
xor
divl
mov
add
cmp
jae
mov
mov
imul
xor
divl
xor
mov
sub
imul
div
mov
cmp
jae
mov
sub
push
pushl
pushl
call
add
add
add
add
cmpl
jne
pop
pop
pop
leave
ret
push
mov
push
call
mov
push
call
pop
pop
cmp
jne
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
mov
jmp
mov
pop
ret
mov
push
xor
cmp
je
cmp
push
mov
je
push
call
jmp
push
push
push
pushl
call
push
push
push
pushl
call
push
push
push
pushl
call
pop
pop
ret
mov
mov
mov
rol
imul
add
mov
ret
push
mov
sub
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
jne
inc
jmp
andl
push
push
lea
lea
cmpl
mov
je
mov
jmp
mov
mov
add
xor
nop
movb
mov
mov
inc
cmp
jb
mov
test
je
lea
movsbw
mov
add
inc
mov
test
jne
lea
push
call
mov
test
je
mov
add
andl
cmpl
je
mov
mov
mov
test
jns
and
jmp
add
add
push
pushl
call
mov
test
je
incl
mov
lea
cmpl
jne
mov
incl
mov
imul
add
lea
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
push
mov
sub
mov
push
push
push
push
mov
movl
call
xor
mov
movl
movl
mov
mov
movl
mov
mov
mov
mov
mov
imul
mov
xor
add
incl
mov
push
push
push
push
push
push
push
mov
call
mov
mov
mov
mov
mov
xor
mov
div
mov
mov
mov
mov
sub
not
add
xor
mov
mov
incl
add
cmpl
jb
cmp
je
mov
jmp
push
call
mov
push
push
push
push
mov
add
call
movl
mov
push
shl
add
incl
push
push
push
call
mov
mov
cmp
je
push
call
mov
push
push
call
mov
call
add
cmp
je
cmpl
jne
lea
push
push
pop
add
xor
div
push
pushl
pushl
call
mov
push
push
push
pushl
call
mov
lea
add
lea
add
mov
lea
mov
mov
mov
and
call
mov
mov
mov
call
mov
mov
push
push
mov
xor
push
push
mov
mov
call
mov
lea
push
push
push
lea
push
pushl
movb
pushl
movb
push
call
push
push
push
call
mov
call
mov
call
test
je
xor
pushl
mov
pushl
pushl
pushl
call
mov
cmp
jne
push
call
cmp
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
push
lea
sub
mov
push
push
push
push
push
push
mov
call
push
push
call
test
je
push
xor
push
call
push
mov
call
mov
cmp
je
lea
push
push
call
mov
mov
mov
mov
push
push
mov
call
cmp
jne
movl
push
push
call
push
push
mov
call
xor
cmp
setl
mov
mov
cmp
mov
je
mov
cltd
sub
sar
mov
push
push
call
mov
neg
sbb
and
add
push
mov
call
push
mov
call
movzwl
push
call
pop
pop
push
push
push
call
push
push
push
call
push
push
lea
push
call
lea
push
call
mov
mov
mov
movzwl
xor
jmp
cmp
jne
cmpw
je
inc
inc
mov
cmp
jne
jmp
xor
inc
lea
push
movl
movl
call
mov
push
pushl
call
push
push
push
push
push
pushl
mov
call
cmp
mov
mov
jne
xor
push
pop
lea
rep
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
movl
movl
movl
mov
movl
movl
call
test
je
mov
push
mov
imul
cltd
pop
idiv
push
push
mov
mov
add
mov
lea
mov
mov
shl
mov
lea
push
call
mov
mov
sub
sub
mov
cmp
mov
mov
jle
mov
push
pushl
neg
push
push
pushl
sbb
push
push
push
and
add
push
push
push
push
call
cmp
mov
je
lea
push
call
push
push
push
pushl
call
test
jne
call
xor
jmp
call
pushl
call
pushl
pushl
call
pushl
call
push
pushl
call
mov
xor
cmp
sete
push
call
cmp
je
call
cmpl
je
cmpl
je
push
push
push
pushl
call
xor
inc
pop
pop
pop
add
leave
ret
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
test
je
andl
mov
sub
add
mov
mov
mov
lea
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
cmpl
mov
je
or
sub
mov
mov
sub
add
mov
mov
mov
lea
push
push
push
call
mov
mov
mov
sub
add
mov
movzwl
add
lea
movzwl
lea
mov
mov
mov
andl
xor
cmp
jae
lea
mov
mov
addl
push
lea
pop
rep
mov
add
movzwl
add
incl
cmp
jb
mov
mov
add
pop
mov
xor
pop
inc
pop
leave
ret
push
call
pop
ret
mov
mov
ret
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
mov
push
mov
push
mov
xor
mov
test
movl
je
push
call
pushl
call
mov
xor
inc
pop
pop
ret
mov
push
mov
sub
mov
push
push
push
mov
mov
mov
push
mov
lea
push
pushl
pushl
call
lea
xor
test
je
push
push
push
call
add
test
je
push
add
push
call
inc
pop
add
cmp
pop
mov
jl
mov
mov
pop
pop
mov
pop
call
leave
ret
mov
push
mov
push
mov
test
je
push
mov
test
je
andl
push
call
push
call
push
call
test
je
push
call
push
call
mov
push
call
push
call
pop
pop
pop
ret
push
mov
testl
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
pop
ret
mov
push
mov
xor
cmp
jne
mov
jmp
mov
push
mov
mov
test
je
mov
inc
inc
decl
jne
cmpl
pop
jne
dec
mov
movb
pop
ret
push
mov
push
push
push
mov
mov
mov
mov
cmp
jb
andl
add
je
push
push
pop
sub
mov
imul
mov
mov
lea
ror
lea
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
inc
cmp
jb
pop
pop
pop
leave
ret
mov
push
mov
sub
mov
push
mov
push
push
lea
mov
call
lea
xor
call
test
je
test
je
cmpb
je
mov
push
call
mov
push
mov
call
mov
lea
push
call
mov
test
je
push
push
push
push
call
add
push
call
test
je
push
push
push
call
mov
test
jge
push
push
push
call
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
call
mov
mov
pop
pop
pop
call
leave
ret
push
mov
sub
mov
mov
mov
sub
mov
je
mov
test
je
push
mov
add
test
je
push
push
mov
sub
mov
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
addl
decl
jne
mov
test
jne
pop
pop
pop
xor
inc
leave
ret
add
add
pop
in
cltd
es
pushf
dec
shr
jo
mov
dec
and
gs
dec
sub
psrlw
addb
js
sub
sub
or
insb
or
inc
int
movsl
shr
or
scas
dec
repz
mov
adc
xchg
mov
popa
repnz
loope
sbb
clc
or
lcall
clc
or
push
data16
nop
daa
mov
xor
cmp
xchg
jae
int
xor
sbb
gs
mov
mov
add
icebp
arpl
xchg
out
dec
into
jae
mov
sub
enter
xor
repnz
jnp
jno
clts
sub
mov
jns
lods
sub
outsb
mov
fisubl
pop
jnp
pop
call
sbb
or
cmpsl
lods
out
push
lea
and
pop
and
pop
scas
pop
dec
inc
data16
jmp
shrb
iret
add
lock
ds
imul
inc
in
xchg
jg
pop
dec
mov
lea
xor
mov
inc
pop
mov
xor
add
and
sarl
jmpw
test
xor
mov
stos
nop
jns
dec
enter
shll
jg
fcompl
jl
mov
loope
das
test
jns
movsb
ss
cmp
mov
pop
repnz
dec
pop
push
dec
mov
js
xchg
lods
xor
adc
sub
repnz
xlat
adc
add
sti
pop
mov
adc
stos
mov
and
test
sbb
jmp
shlb
mov
jns
loop
js
icebp
out
jnp
jbe
pushf
out
push
xchg
lret
or
inc
sti
sbb
or
shll
test
push
cli
orl
shl
out
pop
mov
or
bound
mov
add
dec
subl
jmp
pushf
xchg
sbb
add
add
sbb
gs
stc
pop
xor
lret
xor
inc
pop
scas
ja
das
mov
arpl
cli
lea
sbb
push
int3
mov
push
aad
inc
mov
sbb
cmp
or
jle
mov
ds
and
inc
or
inc
fisttpll
lods
or
int3
insb
clc
add
xchg
ds
popa
cs
add
test
aas
inc
insl
pop
lds
sbb
sub
sysret
scas
popf
arpl
add
add
sbb
mov
shrl
cmpsl
les
out
push
scas
xchg
adc
vsubpd
pop
lahf
fisubl
aam
mov
sub
test
fst
inc
lret
nop
xchg
hlt
pop
rcl
mov
fadd
sbb
repnz
mov
outsl
jmp
jae
sbb
jmp
sub
mov
seta
and
add
inc
lcall
adc
scas
push
imul
xor
es
adc
orb
nop
sbb
dec
add
ljmp
xor
lea
mov
fs
fiadds
xor
outsl
lret
mov
jmp
cs
int
fldenv
adc
test
mov
shlb
add
mov
push
shll
xor
ret
jbe
xlat
enter
cmpsb
aam
jmp
cmp
jae
adc
mov
lret
xor
test
iret
jnp
mov
pop
stos
pushf
sbb
and
inc
jnp
mov
movsl
push
push
xorb
add
ret
out
mov
test
pushf
mov
jle
inc
int
or
pop
cs
or
jp
movb
add
fnstenv
lahf
push
dec
push
int3
icebp
add
dec
in
push
push
mov
test
fidivrl
out
pop
sub
cs
mov
icebp
xor
cmpsl
mov
pop
pop
jecxz
jmp
push
mov
pop
mov
inc
jns
adc
sbb
mov
dec
cmp
outsb
lret
cltd
aam
rorb
shlb
ficoms
mov
sbb
mov
push
sub
add
add
and
out
aas
or
dec
push
iret
loop
lds
fbld
icebp
push
jne
inc
jp
fwait
xchg
mov
jle
mov
dec
fldenv
lock
sub
add
fcmove
sub
or
mov
fisubs
xchg
in
dec
movsb
lea
mov
xchg
sbb
scas
xlat
dec
push
pop
mov
add
cmp
mov
fsts
xchg
xorb
dec
fisubl
sbb
addl
add
stos
sbb
pop
pushf
pop
inc
cmp
mov
rorl
hlt
inc
adcb
mov
xor
pusha
sbb
sbb
pop
arpl
xchg
cmp
jns
inc
jns
outsl
int
sub
jecxz
js
or
addr16
sub
int3
add
cli
push
cwtl
cld
test
sub
push
xchg
jle
lock
push
push
leave
adc
cmp
cmp
sbb
mov
sti
rcll
xor
inc
mov
icebp
sbb
sbb
cmc
or
rep
mov
popa
sbb
test
pop
das
test
gs
dec
inc
mov
clc
push
xor
cmpsb
mov
cltd
mov
dec
aad
xchg
orb
jl
lods
add
call
scas
jb
mov
xchg
pushf
xor
add
mov
test
lods
jo
jo
adc
jl
adc
ret
ror
pusha
sub
mov
dec
pop
ficoml
mov
or
pop
adc
jbe
out
xchg
imul
xor
in
cmp
and
ljmp
enter
xor
insl
inc
fs
cwtl
add
mov
inc
xchg
rcrb
jae
mov
stc
mov
vphsubbw
pusha
cli
arpl
jae
fwait
and
and
and
gs
or
cmc
outsb
out
iret
inc
iret
loope
add
js
sbb
and
in
fcomps
add
mov
mov
sbb
cmc
and
sar
sub
divb
add
sub
test
push
and
pop
add
jnp
mov
mov
push
or
cmpsl
dec
xor
out
or
push
fisubs
push
mov
dec
xchg
test
adc
sbb
pop
idiv
movsb
std
dec
repnz
sub
test
lret
test
xlat
mov
jge
sub
push
xor
push
mov
mov
std
adc
std
xor
shll
adc
aaa
das
inc
jb
lods
scas
adc
mov
add
lds
loop
jne
push
ficoms
jp
xlat
roll
push
sub
nop
repnz
call
ret
sub
jmp
push
jns
fldt
arpl
out
inc
push
shll
push
adc
movsl
addr16
push
stos
and
out
pop
xchg
add
pop
sbb
into
xlat
rorb
or
clc
jbe
push
test
pop
mov
int3
add
add
add
add
fisttpll
lret
push
mov
lret
sbb
adc
aad
push
and
mov
out
inc
add
mov
cmpb
pop
fmul
xchg
iret
and
testb
mov
adc
push
cmp
jp
orb
add
jp
xor
add
xchg
jo
and
jecxz
rorb
arpl
jne
sub
insl
cmpsb
push
jns
xchg
scas
mov
and
fisubrs
mov
and
adc
insb
lcall
xorb
es
ja
xor
sub
cmc
dec
fnstsw
in
sub
addl
mov
movsl
loop
mov
cmpsl
pop
je
gs
int
xchg
mov
imul
repnz
add
mov
icebp
cld
inc
push
push
ret
inc
mov
push
cmp
out
push
cmp
add
or
leave
daa
pop
in
enter
mov
pop
and
fistps
out
icebp
cmp
mov
and
sbb
rcrb
jge
dec
cltd
fcomps
ljmp
push
mov
lods
loope
sarb
add
cld
imul
cwtl
mov
je
out
mov
and
inc
stos
out
mov
xchg
pop
jo
add
jmp
loope
sub
fwait
or
scas
xchg
xor
mov
xchg
dec
test
mov
sti
mov
jbe
cltd
sub
inc
adc
dec
jl
mov
in
out
xchg
pusha
insl
and
jo
xchg
jbe
les
pop
test
dec
dec
mov
sub
cld
je
pop
adc
cmp
push
lods
or
and
jmp
daa
push
sub
sub
adc
leave
arpl
push
in
adcb
inc
or
and
repz
push
or
dec
sub
sub
add
ljmp
xor
das
dec
cwtl
clc
mov
lods
cmc
daa
call
pop
movsl
or
scas
xchg
xchg
xor
add
lret
out
add
adc
and
xchg
push
push
fld
inc
pushf
push
inc
mov
adc
call
pop
or
sti
inc
push
lret
fwait
ss
outsb
in
je
adc
xchg
ficoml
shrl
cmp
clc
xchg
inc
xlat
cmp
push
mov
fldt
xchg
cwtl
cmpsb
lea
sbb
pop
inc
mov
xchg
fcomip
mov
mov
pop
xchg
movsb
das
orb
push
in
push
dec
movsl
and
add
cmovae
pop
add
imulb
lea
sbb
mov
out
arpl
stos
not
push
dec
daa
push
aam
in
jbe
outsb
and
mov
xchg
outsb
in
jno
lcall
add
add
jbe
in
cmp
stc
cltd
cs
inc
cmp
repz
test
das
cld
bound
test
mov
push
push
sbb
adc
dec
and
int3
ret
icebp
xchg
negb
mov
add
pop
push
mov
fcmovu
leave
mov
xchg
xor
mov
or
sti
enter
mov
frstor
stos
push
push
or
jmp
addr16
insl
gs
test
dec
xor
add
add
inc
xchg
jp
iret
out
pop
push
mov
push
aaa
add
in
cmpsl
sub
out
mov
jmp
jno
xor
mov
xchg
in
les
mov
iret
mov
int3
push
sbb
lret
lock
lcall
cmp
sub
adc
add
stos
cmp
lcall
sbb
jae
dec
adc
mov
sti
add
in
test
mov
jne
in
xor
andb
add
addr16
jns
push
cmp
push
add
add
sbb
cltd
mov
dec
inc
testl
mov
dec
stc
jg
imul
test
aad
les
push
jae
call
dec
xchg
push
jg
add
in
mov
mov
push
adc
adc
imul
add
xlat
addr16
dec
push
sub
fdivrs
shlb
cmpsb
aaa
adc
int3
outsl
popa
dec
adcb
or
mov
adc
je
test
out
xor
cmc
xchg
push
sti
pop
les
xchg
ficomps
and
sbb
xor
inc
xchg
enter
in
test
add
addr16
and
mov
scas
sbbb
adc
popf
test
or
fimull
jmp
aam
cmp
loop
les
dec
cmp
out
out
sbb
adc
jae
test
sub
ljmp
lods
and
pop
test
xor
pusha
insb
inc
adc
int3
mov
inc
cmc
in
xchg
bound
sub
psubq
pusha
stc
pop
mov
pop
lret
adc
test
xchg
movsl
mov
mov
jns
popf
xchg
mov
push
ficoms
pop
jecxz
sbb
hlt
inc
inc
fs
jmp
lock
out
pop
cmp
dec
xchg
aas
cmp
inc
imul
jle
push
dec
push
in
and
or
and
or
and
lret
add
jae
clc
mov
push
ljmp
sahf
lods
mov
adc
mov
jns
adc
jmp
rorl
imul
sbb
int
jno
in
mov
mov
pusha
dec
aas
push
adc
adc
lcall
outsb
pop
orb
sbb
push
mov
sub
daa
fsubl
addb
pop
lods
sub
nop
clc
sub
xor
sahf
mov
add
add
mov
and
jmp
rcl
xor
insl
lea
test
push
push
mov
les
inc
loopne
data16
fs
cmp
jno
sbb
sbb
dec
out
mov
sub
or
dec
jl
jno
xchg
aad
fmul
aas
inc
stos
test
js
pop
add
imul
pop
movsb
mov
add
pop
int3
les
adc
push
mov
cmp
adc
add
add
mov
in
cmp
mov
frstor
add
cmpsb
push
push
fisubrl
sbb
movsb
lods
lds
adcb
add
dec
sub
and
aam
movsb
fidivs
cwtl
xchg
xlat
in
inc
inc
movsl
xor
nop
stc
stos
shlb
add
pusha
mov
pop
sti
mov
mov
fidivl
fisubrl
rolb
inc
mov
push
add
in
xor
mov
mov
cwtl
xchg
std
xchg
negb
xchg
and
dec
pop
jno
scas
lock
test
mov
jbe
adc
cmpsl
jp
sub
xor
push
in
pop
scas
and
mov
dec
cmp
lock
popf
sti
cmpb
nop
mov
or
iret
mov
push
sub
adc
leave
fwait
mov
dec
lea
sub
xor
sti
ja
insl
pop
imull
inc
sbb
or
jb
jno
xor
inc
sbb
inc
pop
orb
insl
popf
call
scas
jl
shl
cli
test
inc
enter
adc
inc
jns
in
gs
and
lcall
and
dec
pop
insl
push
les
dec
dec
adc
jp
pop
gs
scas
or
stos
lcall
add
test
pusha
iret
fwait
aas
repz
mov
mov
lahf
dec
or
jp
mov
xor
mov
loop
test
fs
mov
pop
sbb
pop
stos
cmp
mov
mov
xchg
icebp
ja
imul
inc
jne
mov
loop
repz
cs
stc
dec
pop
shl
mov
jle
xor
mov
lock
inc
jo
rolb
dec
inc
imul
add
add
out
rorb
xchg
pop
mov
ret
xchg
xchg
sub
xchg
stos
pop
jae
xor
cmp
xchg
mov
push
add
std
cmc
jecxz
js
fnstcw
insb
jne
ja
sub
dec
inc
push
add
repnz
push
add
xor
test
and
mov
std
xor
push
decb
cmc
mov
sub
add
fldenv
cli
or
adc
movq
loop
sti
movsb
cmp
jg
push
mov
push
adcb
clc
out
addr16
stc
cltd
loope
or
add
es
jbe
jno
xchg
push
int
xor
sbb
sub
repnz
mov
into
xchg
addl
cmpsb
js
incl
xor
loop
cmp
cli
pop
testb
dec
add
inc
sti
cli
or
push
mov
push
lret
xchg
adc
fistps
shl
or
ss
es
jl
or
lock
testl
adc
jno
stos
lcall
mov
mov
push
std
dec
fistl
mov
leave
lock
shll
loop
pop
pop
add
mov
add
add
jae
mov
and
mov
push
movsl
inc
ds
pop
sbb
mov
popa
adc
add
mov
jle
jns
pusha
nop
xor
dec
sbb
fildll
sti
jp
sbb
jge
arpl
or
dec
mov
aam
jle
popf
dec
mov
int3
add
test
lods
scas
pop
pop
out
popa
fsubrl
xor
imul
add
xor
push
add
add
out
mov
aam
cmp
cmp
dec
xchg
stos
push
fwait
or
inc
jo
jnp
mov
and
movsb
mull
pop
mov
outsl
lock
xchg
add
xchg
sbb
push
icebp
inc
test
lods
rorb
leave
mov
icebp
sub
dec
or
sbb
nop
pop
pushf
push
mov
rolb
push
gs
push
lret
pop
test
xchg
std
inc
fwait
mov
dec
jns
sub
or
iret
hlt
sub
push
dec
adc
jne
adc
jge
mov
in
mov
xchg
aad
andb
inc
jns
or
xchg
push
scas
cmc
or
adc
add
mov
stos
and
push
or
in
mov
aaa
iret
adc
movsb
mov
ljmp
and
add
add
inc
dec
inc
adc
cltd
mov
repnz
adc
inc
dec
ret
jecxz
cmp
mov
jo
cmp
and
stos
in
shlb
lods
fstps
mov
mov
imul
loopne
cmp
loop
jecxz
mov
xlat
pushf
dec
xor
cmc
cltd
aaa
cmp
mov
gs
pop
jnp
sub
cwtl
xchg
daa
fcmovnbe
push
or
xor
fidivs
push
add
add
adc
fistpll
test
xchg
adc
aad
lcall
pop
cltd
cmp
out
leave
fiaddl
int
outsl
iret
movsl
aad
jo
cmp
rorb
aad
xor
stos
mov
cmpsb
mov
rcll
lea
fwait
pop
repz
sub
sbb
adc
imul
daa
int
or
aas
dec
stos
test
cmp
sub
jecxz
pop
shlb
fistl
add
ret
xor
shlb
sbb
mov
aad
sbb
pushf
ret
imul
data16
xchg
pop
xchg
in
iret
cmp
jbe
leave
sar
sub
je
xchg
aaa
inc
add
push
push
mov
pop
in
je
xor
mov
cmp
sub
adc
xchg
ret
cmp
adc
popf
rorb
mov
jmp
add
sarb
xor
push
fisttpll
sahf
js
xor
push
adc
ds
push
pop
ror
lock
ljmp
dec
int
sahf
fnstsw
scas
in
adcb
pop
pop
andl
dec
dec
adc
xchg
out
inc
dec
adc
in
add
cli
lods
repz
aaa
stc
mov
loop
mov
int
das
outsl
push
mov
out
imul
jns
ror
mov
jb
aas
cmp
mov
dec
jecxz
loope
add
push
cmp
and
and
mov
addl
or
ret
mov
cmp
pusha
rorl
sub
cmc
in
adc
sub
jmp
shl
leave
jns
pop
jg
inc
enter
add
outsb
aaa
aaa
xchg
in
mov
cld
push
sbb
lock
add
mov
mov
paddd
or
push
xchg
jnp
inc
adc
xor
mov
sbb
xchg
fcom
push
dec
mov
fidivrl
aad
ds
aaa
push
mov
fstl
and
push
dec
pusha
shll
jnp
add
fisubrl
fildl
jbe
push
in
outsb
repz
nop
mul
aam
mov
fdivrl
push
mov
cmpsl
sub
add
dec
jecxz
add
add
adc
cmp
xchg
push
push
xchg
mov
rclb
xchg
jb
rorl
pop
icebp
xchg
inc
cmpsb
xchg
push
mov
push
cmc
pop
lods
out
lcall
divl
pusha
xchg
leave
jl
adc
adc
mov
xchg
sahf
mov
adc
popa
mov
into
lods
sbb
xchg
jo
dec
xchg
pop
andl
sbb
fildl
add
sub
mov
add
or
imul
fiadds
lcall
add
ss
jmp
mov
or
negl
inc
jae
sti
ds
lods
outsb
jno
lcall
push
cmp
xchg
in
xor
push
dec
mov
lods
jge
inc
jno
inc
hlt
cmp
mov
ja
pop
maskmovq
jle,pt
out
in
daa
adc
test
add
adc
or
push
std
add
shlb
iret
xor
in
lea
push
jo
icebp
dec
fcmovu
sbb
cmpsl
mov
sbb
mov
xlat
cmp
loope
xor
scas
push
pop
xor
add
cmpl
pop
and
andl
mov
pop
xlat
lods
ret
scas
pop
xchg
mov
mov
sbb
fwait
repnz
out
aas
in
jmp
fiadds
add
or
aad
mov
inc
ljmp
stos
fsubrl
add
jge
add
jbe
sbb
sbb
or
pop
adc
imul
and
in
push
push
jbe
mov
jbe
ljmp
test
xorl
mov
mov
jecxz
mov
xor
mov
cmp
ss
push
enter
out
movsb
rcll
aaa
mov
ljmp
and
cmc
iret
jmp
addr16
arpl
lea
dec
sbb
js
xor
mov
movsl
cwtl
cmp
sub
shll
or
jmp
rol
lds
xchg
xor
cmpsb
adcl
out
addr16
out
out
mov
push
mov
dec
push
push
iret
cli
xchg
mov
jae
mov
add
mov
jo
inc
push
mov
mov
imul
fbstp
call
mov
ljmp
or
pop
pop
cmp
popa
stc
xchg
jb
inc
lahf
out
shll
pop
jne
jmp
jne
jno
xchg
jg
js
rorb
jns
icebp
and
fdivl
fcoms
jp
sbbl
jge
mov
mov
add
int3
sub
adc
shlb
out
mov
fldenv
js
mov
adc
and
jl
jnp
or
out
inc
divb
adc
int3
out
mov
mov
scas
pop
or
addr16
loope
mov
sahf
mov
cmp
pop
xlat
push
aad
xchg
xchg
sub
int3
adc
mov
mov
movb
add
or
sbb
adc
cwtl
and
out
push
mov
pop
jmp
mov
int3
cmpsl
orl
adc
push
push
stc
or
mov
pop
aaa
enter
jo
icebp
arpl
and
mov
sbb
frstor
sarb
xor
je
xchg
lea
mov
inc
popf
add
sbb
pushf
xlat
aas
pop
in
pop
pop
add
lret
cmp
adc
aad
xchg
scas
xor
pop
ror
cltd
sti
mov
cmp
aad
push
outsl
das
mov
or
sarb
xor
and
or
cmp
in
jnp
inc
dec
xor
jge
lret
xchg
imul
incb
hlt
xchg
sub
fidivl
rcrb
push
orl
jmp
rcrl
xorb
rorb
into
lahf
loopnew
cmp
and
add
cmp
int3
fisttpll
adcb
rorb
rorl
test
outsb
dec
mov
movb
mov
push
stos
jecxz
jle
xchg
cld
xchg
pop
jle
adc
add
push
shlb
inc
xchg
clc
pop
call
cmpl
add
mov
or
pop
xor
xor
push
pop
or
sbb
inc
push
xor
mov
xor
add
shlb
xchg
outsb
les
fld
inc
push
inc
xchg
test
jle
lods
ss
jbe
pop
push
adc
xchg
xchg
and
stc
or
inc
sarl
out
aad
inc
enter
das
cmp
push
inc
hlt
shl
out
xchg
mov
ficoml
jo
jns
cltd
jno
pop
mov
cmp
push
jbe
sub
inc
xlat
xchg
xchg
xchg
mov
inc
mov
add
orb
pop
enter
push
mov
popa
popf
int3
cmp
ret
cmpsb
enter
pop
xor
loope
dec
push
cwtl
out
icebp
adc
int
idivb
mov
pop
pop
gs
xor
mov
testb
mov
sahf
cmp
dec
xchg
repnz
ret
ret
fstpt
cs
ja
testb
imul
mov
scas
ret
cmpb
stos
sub
xchg
aaa
mov
add
add
addb
mov
daa
mov
mov
cwtl
mov
push
rcrb
xlat
add
mov
ret
push
stc
mov
pop
mov
loop
xchg
xchg
popl
pop
popf
insb
es
out
scas
js
add
xchg
xor
int3
shll
dec
jl
add
fisubs
test
idivl
lock
lret
xchg
or
adc
nop
pop
lahf
out
popa
push
and
and
test
dec
setle
add
add
or
pop
dec
mov
cmp
inc
xor
mov
push
addr16
mov
xchg
aaa
xor
adc
sbb
mov
pop
int
inc
movsl
push
cli
mov
xor
dec
sub
das
idivb
add
ret
popa
je
sti
pop
mov
push
lea
arpl
loope
jnp
adc
scas
xor
adc
cmp
fcompl
add
out
xor
cmp
inc
jns
daa
imul
ds
mov
adc
imul
or
push
bound
fcoms
mov
cwtl
repnz
test
mov
fisttpll
and
push
insb
xchg
js
fisubrl
and
fimuls
cmp
int
mov
inc
mov
das
push
mov
scas
es
pop
sub
push
lock
imul
imul
adc
add
add
mov
xor
push
sbb
mov
cwtl
dec
mov
icebp
xor
adc
jno
ret
in
or
ret
ss
outsb
cmpb
lds
jb
ffreep
imul
cmpl
jg
arpl
ficomps
lahf
or
sbb
popa
push
xchg
dec
jbe
push
sbb
sar
xchg
les
add
and
leave
xchg
or
loope
clc
adcb
xor
pop
add
add
mov
sbb
push
popa
push
arpl
pop
outsl
jne
add
dec
movsl
fisttpl
mov
and
sbb
jp
mov
pop
push
fisubl
xchg
xchg
in
mov
mov
mov
xor
lods
inc
mov
cs
dec
js
adc
cmp
add
outsb
add
cmp
and
add
or
mov
push
cmp
popa
jg
test
sub
pop
imul
xor
cmpsb
sub
outsl
pusha
outsb
clc
pop
mov
and
xchg
cmp
add
sbb
cmpsl
into
push
cltd
or
repnz
inc
ljmp
inc
xor
mov
sbb
mov
or
outsb
in
insl
jp
jecxz
push
jnp
push
xchg
and
mov
subb
jmp
or
cs
in
movb
aad
or
or
aas
je
mov
ljmp
in
jo
int3
jae
out
stc
add
notb
bound
cmc
mov
int
enter
je
movsw
mov
lods
shl
xor
dec
in
adcb
or
cwtl
mov
in
add
mov
xchg
call
mov
sub
pusha
test
fs
jne
imul
xchg
or
je
jb
adc
out
jge
jg
sbb
cmp
in
lea
adc
sub
clc
pop
inc
dec
push
aas
inc
iret
and
and
es
jp
fldenv
loopne
xchg
adc
sbb
sub
jne
xchg
aas
dec
outsb
stc
lods
enter
repz
jge
fcoms
sbb
sub
mov
xor
mov
xchg
iret
xchg
inc
adc
cmpb
hlt
addl
stos
xor
add
mov
mov
imul
sahf
out
pop
cmp
dec
inc
stos
push
shll
sub
outsl
add
mov
loope
lods
and
stos
push
clc
push
call
in
inc
sbb
mov
addr16
fcomps
divb
pop
xchg
xchg
pop
fisttps
add
add
fstl
or
outsl
lds
call
mov
xchg
pop
adc
sahf
sub
sbb
data16
aas
cld
hlt
adc
lcall
sbb
lahf
cwtl
sbb
push
mov
cmp
fdivp
iret
jmp
xchg
push
lods
loopne
fisubl
add
aam
jecxz
mov
test
sbb
xchg
repz
add
xor
aaa
add
out
out
ss
cmp
xchg
aas
adc
xor
ds
mov
xor
cwtl
sahf
ljmp
mov
fbld
xor
or
outsl
xor
inc
mov
fs
fisubl
bnd
testb
lret
xchg
and
jg
jp
js
xchg
fucomi
or
dec
lahf
sbb
adc
add
sbb
dec
cs
xor
sti
inc
pop
mov
fiadds
mov
pop
sbb
out
