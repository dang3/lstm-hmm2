push
mov
add
pusha
lea
mov
lea
lea
mov
mov
xchg
push
xor
lea
xor
ret
not
cmp
xor
mov
movl
xor
xor
mov
lea
mov
lea
ror
movl
shr
mov
shl
movl
lea
or
mov
mov
mov
xchg
mov
movb
mov
neg
shl
mov
xchg
shr
lea
shl
sub
xor
rcr
mov
and
mov
push
xor
neg
neg
lea
mov
nop
mov
mov
mov
mov
not
xor
shl
mov
nop
xchg
shr
neg
or
lea
rcr
xor
lea
not
mov
mov
neg
xchg
push
mov
lea
neg
shr
call
ror
lea
neg
mov
mov
nop
mov
mov
xor
add
xor
sbb
nop
shl
sbb
rol
shl
rcr
mov
mov
rcr
call
mov
mov
lea
mov
adc
lea
sbb
push
xchg
mov
xor
not
xor
nop
mov
mov
xor
xor
nop
cmp
mov
lea
mov
movl
xchg
rol
mov
xchg
movl
mov
and
mov
sbb
mov
mov
movl
add
mov
or
mov
xor
xchg
lea
nop
and
mov
mov
rcr
sub
lea
mov
mov
nop
lea
mov
mov
lea
lea
mov
xor
mov
movl
mov
rcr
mov
lea
xor
movl
rol
mov
sub
ror
xor
movw
mov
xor
mov
neg
mov
lea
sub
movb
xor
not
xor
mov
not
xor
mov
nop
mov
mov
rcr
xor
nop
xchg
mov
xor
mov
call
xor
rcr
mov
xor
rcr
neg
xchg
or
je
mov
not
xchg
shr
mov
lea
neg
mov
nop
xchg
mov
rol
mov
nop
rcr
xor
mov
mov
xchg
neg
mov
not
xor
add
or
jne
mov
mov
mov
adc
xor
push
mov
sub
mov
xchg
add
mov
call
lea
mov
mov
cmp
mov
lea
ror
mov
ror
and
mov
push
mov
xchg
not
xor
popl
mov
xor
xor
sbb
neg
xor
mov
nop
rcl
mov
xor
neg
mov
movl
mov
ror
shl
mov
or
mov
neg
push
not
lea
shr
mov
mov
ror
push
mov
mov
shl
mov
rcl
mov
xor
call
mov
mov
rol
xor
xor
neg
xor
not
mov
mov
mov
mov
xor
xor
nop
xchg
mov
lea
mov
mov
xchg
rcr
mov
nop
mov
rol
mov
not
lea
mov
mov
xor
xor
xor
rcr
mov
xor
mov
xor
mov
xchg
pushl
lea
sbb
mov
mov
lea
push
cmp
xor
shl
rcl
neg
shr
nop
lea
mov
lea
mov
shr
xchg
nop
not
rcl
mov
xor
movl
mov
mov
ror
neg
cmp
xchg
xchg
lea
call
neg
not
not
cmp
xor
xor
or
je
neg
lea
lea
mov
mov
ror
not
mov
nop
mov
mov
mov
nop
and
mov
not
mov
not
xor
mov
ror
mov
mov
or
xor
lea
mov
cmp
mov
mov
mov
mov
or
mov
mov
ror
or
mov
xor
not
lea
mov
xor
mov
xor
mov
xor
rcl
shl
mov
mov
xor
rcr
shl
mov
nop
rcl
mov
lea
mov
mov
mov
neg
mov
nop
or
mov
xor
xor
lea
pop
neg
mov
mov
popl
neg
adc
mov
mov
mov
lea
lea
xchg
mov
lea
lea
lea
push
mov
xor
sub
not
mov
push
not
xor
mov
mov
rcr
shr
mov
mov
push
mov
lea
mov
xor
lea
push
lea
lea
lea
xor
rcr
call
rol
mov
rcl
and
not
mov
lea
nop
mov
ror
mov
nop
mov
cmp
shl
not
lea
lea
sbb
not
xor
push
rol
shr
cmp
mov
mov
lea
xor
push
not
mov
lea
xor
mov
mov
mov
push
shl
shr
neg
push
mov
sub
sbb
add
lea
rcr
sbb
push
shr
add
rcr
shl
rol
call
mov
lea
lea
mov
sbb
add
nop
xor
mov
mov
nop
xchg
xor
sbb
lea
lea
adc
not
mov
xchg
mov
mov
push
rcl
rcl
mov
cmp
xor
xor
mov
push
mov
mov
neg
push
lea
rcl
xor
sub
ror
ror
mov
mov
push
lea
or
mov
pushl
rcr
mov
mov
mov
sbb
lea
not
mov
call
mov
xor
rcl
nop
ror
mov
shl
xor
lea
nop
sbb
mov
neg
lea
xor
neg
not
mov
mov
and
neg
push
mov
neg
mov
push
shl
mov
or
rcl
mov
not
xor
push
neg
sub
mov
or
mov
mov
pushl
mov
not
lea
call
lea
rcl
xor
cmp
xor
neg
xor
mov
nop
mov
shr
mov
neg
mov
mov
mov
nop
xor
sbb
mov
or
mov
lea
ror
mov
mov
xor
rcl
neg
mov
push
xor
shl
mov
neg
push
mov
not
xchg
not
ror
xor
pushl
cmp
mov
mov
mov
ror
lea
not
push
and
xchg
xor
xor
lea
lea
mov
pushl
mov
mov
xor
xor
mov
or
call
mov
rcr
lea
xor
lea
neg
nop
not
mov
xor
xor
mov
add
nop
sub
or
mov
mov
mov
push
mov
mov
lea
mov
shr
lea
mov
push
mov
not
mov
xor
ror
lea
add
push
neg
not
mov
mov
shr
mov
push
mov
mov
xor
xor
push
lea
lea
mov
rcl
push
shl
xor
xor
adc
not
pushl
mov
mov
xor
adc
mov
call
add
lea
mov
neg
lea
mov
nop
xor
mov
mov
mov
and
not
shl
nop
xor
sbb
lea
mov
mov
not
popa
leave
jmp
ds
or
sbb
and
xor
test
xor
mov
push
xor
xor
rclb
shlb
push
dec
movsb
lods
xchg
sbb
sub
movsl
mov
in
mov
xchg
icebp
std
dec
mulb
call
dec
cmp
cmpsl
repnz
xchg
clc
add
adc
mov
jae
shr
push
fcompl
sub
push
or
xchg
pop
lcall
pop
jmp
push
aaa
scas
mov
ficoms
pop
lret
dec
sbb
dec
sti
call
insl
mov
jecxz
jnp
aaa
loop
add
out
movl
dec
inc
es
adc
stc
pop
xchg
subl
in
jecxz
lret
add
mov
add
inc
cs
outsb
cmp
jb
lret
enter
adc
or
push
add
scas
repnz
xor
in
mov
jae
jmp
imul
and
repnz
lret
push
inc
adc
out
aas
jmp
out
cmp
stc
push
push
xchg
loop
sbb
or
loop
movsl
mov
cmpsb
sub
mov
mov
mov
xchg
jnp
mov
mov
pop
pop
jno
adc
mov
cmp
icebp
mov
xchg
add
stc
push
pushl
xchg
int
sub
xchg
mov
pushf
add
push
cli
mov
ret
daa
sub
jl
xor
fisttpll
es
adc
cwtl
sahf
add
and
cmpsl
jbe
push
dec
in
push
jns
pop
fdivrs
shrl
js
movsl
cltd
and
jecxz
outsl
icebp
xchg
int
xchg
push
xor
sarl
addb
cli
cmp
movsl
aaa
imul
aam
jne
inc
lcall
movsl
lret
pop
mov
in
hlt
jl
push
dec
out
fistl
pop
cmpsb
push
mov
ds
test
subb
and
outsb
daa
mov
fsubs
std
pusha
jmp
cltd
cmp
xchg
int3
adc
lret
into
ss
mov
rclb
gs
sarb
aad
mov
lods
sbb
subb
jle
loope
fs
leave
jae
arpl
dec
push
sbb
mov
into
cmp
mov
lret
push
insl
dec
add
outsl
daa
add
dec
fs
jmp
ret
loope
or
mov
xor
in
and
fldl
lahf
and
jecxz
mov
inc
daa
pop
xchg
sub
inc
cmp
mov
jb
mull
aam
sahf
adc
jg
or
mov
and
inc
arpl
ja
rcr
pop
enter
and
push
or
loop
cwtl
shlb
lahf
filds
je
jle
dec
icebp
xchg
leave
and
jb
ret
xor
xchg
mov
lret
out
loop
addr16
addr16
mov
push
fwait
popa
dec
mov
ret
shll
mov
xchg
sahf
xchg
mov
aam
lcall
call
mov
loope
adc
arpl
lock
sahf
inc
dec
add
push
into
sti
stc
pop
leave
cmc
pop
daa
xor
xchg
jmp
testl
pop
enter
push
xor
stc
jecxz
add
jecxz
shr
xchg
dec
cmp
mov
cmp
es
pop
rclb
inc
inc
icebp
mov
lock
or
nop
ror
sbb
out
mov
fbstp
inc
add
jo
inc
insb
lret
jmp
outsl
xchg
xchg
lds
notb
cmpsl
imul
aad
and
test
and
fld
std
inc
pop
rclb
mov
push
push
lds
xchg
add
push
ret
or
les
or
mov
jo
dec
cmp
mov
pop
in
or
sub
or
lret
jbe
lret
stos
pop
ficoml
push
push
sub
rcr
in
push
jbe
jb
mov
lcall
xchg
fdivrl
pop
mov
push
mov
popf
out
or
popl
pop
nop
sahf
cmp
cli
mov
pop
adc
sahf
mov
sahf
fsubrs
aas
loop
int
dec
stc
addb
adc
sbb
popa
or
push
ret
enter
mov
cmp
adc
xchg
sub
sbb
jp
outsb
and
jb
adc
inc
jo
test
shl
movsb
jnp
ret
repz
mov
jae
xchg
fisubrl
sub
cmp
mov
sbb
nop
mov
xchg
dec
in
and
roll
push
push
push
or
into
loopne
call
ds
ds
sarb
je
or
sbbb
call
scas
add
inc
icebp
dec
lret
sbb
xor
or
js
test
xor
cmpsb
or
xor
mov
fwait
push
xor
jae
jecxz
ficomps
dec
mov
mov
mov
shl
nop
ds
mov
mov
jl
mov
aas
cs
or
pop
jecxz
push
adc
imul
or
sub
jo
add
lahf
aam
cli
or
in
xchg
hlt
rol
loopne
add
jnp
in
stos
mov
and
pop
outsb
mov
sbb
outsb
int3
jp
dec
mov
jno
inc
cmpxchg
dec
and
cmp
adc
sbb
mov
or
or
fs
outsb
aas
fwait
js
jge
test
jle
out
adcb
pop
cli
dec
gs
ret
pop
xor
mov
mov
mov
jmp
aaa
jnp
in
fistl
push
fmull
fcoms
cmp
cmp
jbe
mov
mov
xor
adcl
xchg
mov
push
xor
data16
cmp
or
leave
mov
les
lahf
aaa
hlt
loop
stos
adc
loope
movsb
fstpt
jp
pop
inc
mov
pop
fwait
enter
xchg
cmp
adcb
ja
push
sbb
mov
lcall
dec
adc
fidivs
fsubrs
or
jbe
jo
aaa
pop
and
loop
sbb
and
jle
push
iret
outsb
push
ss
in
dec
icebp
mov
jo
out
rcrb
dec
repnz
inc
xor
hlt
test
mov
jg
or
fnstenv
loope
lods
test
hlt
lret
in
mov
rorl
push
ljmp
std
repnz
and
in
test
jp
inc
pop
inc
imul
pop
inc
mov
pop
mov
mov
mov
addl
enter
or
cs
dec
push
sti
loopne
mov
es
imul
pop
rcll
cmp
ljmp
ljmp
mov
push
jae
stos
in
test
push
xchg
adc
mov
jge
add
mov
sub
repnz
icebp
out
shl
test
fiaddl
lock
sbb
inc
ss
and
mov
push
dec
and
jb
or
sti
mov
ret
mov
or
mov
test
mov
sub
jecxz
xchg
and
mov
jp
sub
scas
xchg
loope
pop
push
mov
jns
mov
hlt
cmp
jae
in
pop
rcll
or
mov
xchg
test
aaa
jg
sqrtps
push
mov
mov
and
or
sbb
cld
jb
mov
je
gs
int
add
xor
iret
lock
lods
jl
and
ds
stc
mov
stos
test
test
or
std
sti
in
idivl
push
mov
test
or
adc
loope
int3
les
mov
push
sbb
jg
les
addr16
inc
mov
push
movsl
loopne
cld
jp
cli
and
mov
xchg
jo
mov
int3
pop
fmulp
or
subb
dec
pusha
loopne
cmp
shl
xchg
cmp
lea
mov
or
xchg
xor
fnstcw
pop
mov
sbb
arpl
stos
icebp
mov
or
push
mov
xor
cld
mov
insl
jg
xor
jae
pop
mov
ds
cmp
in
push
xor
jmp
insb
jp
ficompl
test
push
int
push
fistps
jae
out
adc
pop
sub
cmp
sti
sarb
and
and
stos
out
cwtl
cld
pop
out
add
mov
xchg
loop
mov
repz
out
push
nop
test
mov
or
or
pop
push
int3
imul
shlb
cld
or
jge
mov
pop
push
clc
fcmovu
mov
pop
jge
in
and
lea
push
movsl
std
fs
and
jne
or
and
dec
ss
scas
ficoml
xor
xor
jbe
jg
lahf
xlat
test
sbb
rcll
icebp
jbe
mov
mov
dec
sub
dec
cltd
mov
repnz
jg
push
push
rcrb
xor
lret
xchg
rolb
jb
sub
loop
mov
sub
jmp
sarl
jle
popa
decb
mov
jne
mov
mov
xor
fcomp
sub
out
sbb
dec
repz
xor
cltd
add
add
pop
xor
shl
outsl
dec
icebp
and
imull
jbe
xchg
mov
je
int
inc
xor
push
push
or
adc
xchg
jl
push
sub
mov
adcb
aas
xchg
lods
out
or
jl
mov
sahf
test
pop
mov
adc
stc
mull
mov
mov
mov
scas
lret
mov
out
mov
in
popf
stos
stc
or
andb
add
cmp
lret
subb
pop
fs
lods
mov
fwait
mov
sbb
mov
mov
pop
popa
xchg
jnp
dec
stos
lea
and
hlt
cmp
fsubrs
iret
xchg
pop
push
in
or
loope
push
loopne
dec
or
sbb
mov
lock
pop
shlb
jmp
dec
shll
arpl
call
rcrb
jne
dec
mov
add
pop
std
gs
fs
push
mov
icebp
fcompl
test
outsl
flds
mov
xor
fwait
cltd
mov
jno
cmp
xchg
mov
lret
or
int3
test
sbb
xchg
jo
xchg
xor
pop
push
lea
mov
fildl
push
fisubrl
gs
nop
jge
mov
int3
std
jo
push
push
push
jns
mov
cmp
jae
out
pop
icebp
roll
outsl
and
sbb
test
mov
int
push
cli
fistpl
lcall
mov
or
sub
pop
shrb
clc
mov
hlt
inc
sub
dec
mov
cmp
jo
mov
push
sti
test
mov
push
jne
adc
pusha
add
test
inc
inc
xchg
stc
adc
les
orb
ja
xchg
push
mov
std
add
scas
mov
imul
mov
sbbl
mov
iret
mov
out
stc
popf
adc
out
aaa
xlat
data16
mov
mov
rcr
or
dec
xor
push
daa
je
pop
xor
inc
mov
mov
fldenv
xlat
les
movsb
in
adcl
cmpsb
repnz
clc
push
jmp
cltd
and
fbld
mov
mov
xor
or
fists
inc
xchg
cld
fmul
cmp
sbb
jmp
add
jle
in
lods
jno
xor
std
jo
cmp
add
cs
inc
cli
push
arpl
out
inc
aas
movsb
and
xchg
dec
mov
popf
fisttpll
mov
sub
sbb
jge
push
or
sbb
ds
nop
push
cmpb
das
sub
jmp
mov
xor
mov
out
pop
cwtl
mov
add
cmpsl
stos
cmp
arpl
testb
adc
movsb
es
dec
in
pop
icebp
mov
std
popf
dec
loopne
mov
cmp
lcall
jnp
adc
jge
sub
xor
js
xchg
addr16
js
pop
aas
mov
xchg
lahf
mov
or
sub
out
add
adc
imul
scas
push
mov
movsb
pop
cmp
aaa
roll
xor
adc
sub
or
addb
xchg
icebp
fsubp
lret
stos
xchg
js
push
test
es
jl
sarl
or
imul
dec
add
mov
sub
test
insb
lods
inc
xchg
les
addr16
je
enter
sbb
mov
inc
stc
mov
and
jmp
ret
je
push
dec
or
test
ret
lahf
cwtl
int
sahf
mov
pop
hlt
add
iret
cmp
and
mov
bswap
adc
faddl
mov
dec
cld
out
sub
in
pop
ret
cwtl
and
cmpsl
mov
mov
test
jmp
in
push
cmpsb
nop
lahf
cmp
lret
fisubs
stos
mov
outsl
sbb
or
test
dec
push
pop
cmpsb
lds
xchg
addb
mov
sbb
daa
push
call
btc
cmp
dec
icebp
jo
and
cmc
mov
lods
sbb
jno
int
push
xor
clc
sbb
popf
nop
test
sub
dec
inc
aas
inc
scas
nop
jle
arpl
arpl
pop
push
mov
decb
inc
aad
push
push
call
mov
lcall
mov
loope
orb
arpl
leave
pop
das
lret
std
cmp
fs
out
mov
sarb
outsl
jns
xor
adc
sub
aad
leave
add
sub
fmuls
mov
rorl
push
div
mov
add
or
scas
ret
or
inc
cli
idivb
dec
ret
mull
or
data16
pop
inc
je
insl
loop
cwtl
outsl
or
ret
mov
popf
loop
rorb
jns
sbb
movsl
rolb
push
insb
inc
call
jmp
and
test
out
int
fstl
repz
lods
sub
sbbb
push
ja
movsb
cmp
push
ja
xor
cmp
fisttpl
jle
repnz
xor
mov
sbb
and
xor
out
xor
sbb
je
popa
inc
loop
mov
sbb
out
or
js
pop
je
popf
xchg
cs
mov
mov
fstpt
inc
jge
ficomps
sub
enter
adc
mov
ja
std
fstpl
outsb
hlt
add
jmp
xchg
addr16
nop
popf
gs
imul
in
scas
jo
lret
bound
lret
jp
and
in
jecxz
adc
or
add
mov
push
outsb
pop
mov
mov
mov
push
cltd
repnz
sbb
sbb
mov
adc
les
mov
enter
rcrl
rcr
pop
dec
sub
mov
xor
repnz
fyl2xp1
es
mov
sbb
lret
cmp
sub
xor
sub
fimull
test
mov
and
xchg
loop
jno
cwtl
inc
pop
iret
aas
xorl
arpl
fidivrs
and
jbe
jnp
xorl
xor
fnstenv
test
jmp
xchg
mov
xchg
xor
fcoml
push
pushf
mov
cwtl
in
mov
jo
loopne
or
ss
push
es
movsb
fldz
mov
iret
jns
cmp
and
scas
xchg
scas
test
vpmulhuw
out
and
or
sbb
ja
dec
shlb
test
add
int3
or
pop
and
and
inc
ljmp
push
int
adcl
lret
mov
cwtl
aaa
inc
jno
lock
insl
jns
jno
mov
mov
xchg
cld
xchg
mov
shl
imul
cmp
xchg
adcb
aas
dec
scas
pop
rcll
dec
add
movsb
adc
call
sub
repz
mov
xlat
cmp
mov
lcall
adcl
iret
xchg
fwait
addl
cmp
insl
mov
mov
leave
arpl
xchg
adc
ds
cmp
or
mov
fwait
add
inc
mov
lahf
dec
jae
xor
dec
rolb
pop
push
xchg
push
popa
jmp
iret
scas
inc
cmpsb
push
loope
jo
dec
xchg
adc
xchg
call
fdivp
xchg
scas
add
outsb
jmp
rcll
inc
mov
sbb
adc
fs
mov
incl
mov
jmp
push
sbb
pop
cld
mov
sub
jae
mov
jp
cmpsb
outsl
adc
cmp
sub
and
out
into
sub
out
or
mov
adc
mov
ret
ss
inc
stc
sub
inc
xchg
addb
idivl
lock
adc
in
in
adc
jge
mov
add
je
insb
dec
js
clc
rcrl
ljmp
mov
fcoms
mov
repz
mov
push
pop
ss
or
xchg
ss
sub
xchg
xor
dec
shrb
push
repz
aas
xchg
mov
fwait
orl
out
sarb
shr
sbb
inc
dec
push
inc
int
daa
shlb
sub
mov
pop
sub
push
aaa
xchg
mov
and
inc
mov
shll
pusha
xchg
cltd
in
lods
repz
xlat
mov
push
insl
imul
sarl
mov
call
lcall
outsb
jecxz
pop
xchg
mov
lahf
xchg
fisttpll
clc
pop
js
and
add
sbb
fcom
push
fs
pop
jl
jns
sub
pop
outsb
sbb
adc
imul
add
test
mov
jg
sarl
gs
mov
rcrb
sub
ss
jecxz
fcoml
dec
int
mov
pop
decb
ret
loop
inc
adc
jmp
adc
les
lea
ucomiss
loope
xor
scas
and
fwait
dec
shr
or
aaa
sub
or
pop
adc
loope
rcl
mov
mov
mov
mov
push
stos
push
lcall
int
inc
repnz
leave
dec
mov
xor
xchg
adc
fcmovb
mov
add
lret
data16
cwtl
or
add
jle
mov
cli
adc
repnz
push
sub
mov
push
js
sbb
push
daa
dec
testl
out
sti
mov
lahf
pop
sbb
pop
idivb
and
push
fnstcw
sub
fs
sbb
adc
sbb
icebp
adcl
xchg
inc
add
or
shrl
ret
pop
pushf
in
push
test
mov
enter
fcmovb
pop
mov
cmp
stos
jbe
stc
jp
mov
inc
std
loop,pt
dec
or
xor
xchg
daa
cltd
scas
mov
leave
cmp
push
stos
pop
inc
sbb
add
mov
mov
cmp
or
jge
mov
or
push
mov
push
mov
call
and
mov
pop
nop
push
sahf
enter
or
push
adc
nop
pushf
mov
iret
pop
out
ja
jmp
in
mov
xchg
add
mov
hlt
jns
mov
dec
cmp
out
push
mov
sbb
and
inc
ss
mov
in
por
jne
shll
dec
and
incb
sub
or
imul
xor
scas
pop
dec
and
lcall
push
rcrb
sbb
dec
imul
outsl
and
mov
xor
sbb
frstor
imul
mov
mov
jg
out
mov
pop
out
lds
ret
mov
mov
mov
das
in
lahf
cld
mov
adcb
inc
cwtl
fs
inc
adc
gs
andl
into
mov
sbb
cmpsl
lahf
lods
and
pop
aad
push
sbb
push
xchg
cmpsb
jb
xchg
inc
cli
sub
inc
and
xor
inc
xor
mov
sub
loope
mov
clc
inc
adc
inc
push
and
or
jnp
xor
loopne
add
mov
mov
push
xchg
inc
lds
sub
sbb
fistps
xchg
adc
in
inc
xchg
jo
es
push
stos
aaa
stos
pushf
aam
adcl
fiadds
or
mov
dec
dec
sub
decl
add
shll
je
cltd
out
push
lret
cli
aam
inc
push
cmc
pop
aam
mov
sbb
jmp
test
loope
mov
je
cmc
jnp
fidivs
sub
xchg
lret
xchg
repnz
jecxz
sub
das
fs
fbld
sub
in
into
loope
out
shll
clc
adc
sbb
lahf
jnp
mov
inc
shl
test
pop
mov
add
outsb
dec
scas
stos
add
add
mov
or
sbb
daa
and
inc
outsb
test
sahf
adc
test
sbb
dec
dec
popf
stc
sarb
scas
jo
popa
int3
sub
or
rclb
push
pop
push
cmp
mov
or
call
cmp
and
inc
mov
and
gs
pusha
stos
add
sbb
add
fmulp
jecxz
lock
scas
iret
fisubrs
push
scas
shlb
add
enter
rcrb
repnz
decb
sub
mov
xlat
mov
in
pop
into
nop
lcall
popf
xor
sarb
cmpsl
mov
push
adc
pop
inc
loop
shl
jge
fiadds
jbe
mov
cmp
xor
dec
dec
and
inc
pushw
jbe
ss
push
ds
sub
or
jns
sub
jge
movsl
jno
call
mov
inc
inc
movsl
mov
add
lret
pop
fldt
int3
mov
insb
test
popf
imul
cmp
cmp
push
shrb
pop
lods
cmc
add
imul
fimull
notl
cmp
test
adc
dec
stos
outsb
adc
into
inc
insl
dec
and
data16
cli
dec
loop
sbb
icebp
adc
addl
xor
cld
and
jae
mov
addb
inc
jecxz
mov
sbb
adc
jnp
mov
inc
addr16
or
inc
lcall
pushf
std
int3
loop
fwait
push
out
lret
into
add
cwtl
cmp
aaa
dec
pop
sahf
adc
mov
lods
mov
or
jns
aas
and
xchg
pushf
fldl
dec
push
shll
arpl
mov
pop
fst
push
mov
cmp
rcrb
cmc
dec
jge
cmp
inc
dec
lret
lea
insl
or
cmc
gs
aad
push
push
ds
sbb
mov
or
sub
pop
stos
xor
cmpsb
fcmovne
jne
das
mov
ja
dec
lds
jae
or
ss
shrl
add
mov
insb
mov
stos
sub
mov
jle
mov
shlb
lods
and
ljmp
les
call
imul
mov
repz
dec
stos
nop
enter
push
push
das
or
mov
shrl
in
sbb
fs
adc
cmp
push
cwtl
jecxz
sub
mov
or
lret
rolb
jge
stos
inc
gs
cmp
sbb
shrl
jbe
jp
or
sbb
and
les
mov
test
adc
in
popa
mov
mov
ret
repz
icebp
stos
repnz
in
push
cmp
mov
test
push
loope
sub
xor
scas
adc
mov
iret
nop
outsl
push
scas
lock
jmp
es
mov
adc
jge
pop
sub
sbb
jmp
mov
shll
adc
rcrl
mov
dec
ss
cld
cmp
call
out
pop
sub
mov
jle
push
lods
mov
cmp
xor
push
mov
adc
cmp
int3
pusha
xor
mov
adc
loope
insl
mov
les
mov
int
jns
es
sub
pop
dec
or
sbb
clc
and
mov
out
xor
icebp
movsb
pushf
push
and
call
movsl
insl
int3
stc
xor
iret
cmp
adc
lcall
and
addr16
leave
xor
int3
test
sbb
pop
cmp
outsb
push
js
shll
sbbl
repnz
fwait
out
inc
insb
and
aad
push
insb
xor
fstpl
pop
leave
enter
loopne
inc
pop
sub
add
and
les
sbb
js
loopne
and
or
sub
hlt
cmp
or
cmp
jge
cmp
jno
jb
lock
cli
adc
cwtl
cmpsl
es
imul
add
pushf
mov
mov
xchg
sbb
in
popf
pop
out
ljmp
movsl
nop
rolb
or
mov
xchg
mov
mov
pop
mov
fmull
sbb
lock
xchg
cmpsl
push
jns
mov
mov
movsb
pop
add
mov
inc
mov
rcr
fisubs
stos
add
clc
fistpl
repz
pop
aas
sbb
mov
pop
pop
scas
popf
cs
sbb
dec
xor
sbb
shll
jns
sbbb
jl
imul
inc
test
pop
xchg
cmp
pop
jno
clc
stos
idivb
pop
xchg
add
stc
ret
dec
cmc
mov
push
imul
inc
sub
cmpsl
mov
nop
mov
addr16
popa
mov
mov
mov
clc
and
stc
insl
pop
in
mov
popf
cmp
rcrb
cmc
push
test
fwait
and
fistpll
jae
mov
mov
pop
adc
pop
or
faddl
and
or
movsl
arpl
or
mov
mov
stos
leave
jp
repnz
std
mov
fisubrl
inc
ss
mov
ds
clc
int3
divb
xor
cwtl
and
adc
lock
and
mov
xor
lret
pop
out
push
lcall
test
jge
jecxz
js
adc
lcall
jo
movsb
fisttps
pop
push
cmpsb
pop
imul
mov
ja
sti
aaa
ficompl
jnp
push
sub
aas
mov
clc
mov
jle
or
repnz
jecxz
jnp
fmull
fnstcw
pop
ret
in
jae
xchg
cmp
pushf
push
jbe
int3
insl
ret
dec
push
push
push
push
cmc
mov
xchg
call
outsl
cmp
popf
pushf
addl
cmpsl
pop
inc
stc
movsl
xor
rclb
xchg
mov
cmc
dec
push
inc
loop
mov
ret
lret
mov
and
std
jbe
fstp
das
cmp
push
test
daa
fisubl
and
into
insb
fisttps
shll
ret
mov
push
addr16
sub
mulb
sahf
rclb
in
mov
xor
adc
mov
mov
rcrl
pop
aaa
cmp
jmp
outsl
xsaves
lods
outsb
icebp
cmpsb
mov
mov
mov
out
jmp
repnz
call
mov
ret
mov
mov
xchg
adc
add
subl
hlt
js
int3
jnp
sub
xchg
sub
into
call
repnz
cmpsb
xor
or
jns
addr16
leave
in
loope
mov
imul
into
jl
int3
mov
mov
ja
push
std
pop
imul
js
add
mov
scas
mov
mov
lcall
nop
insb
sub
sahf
pop
cmp
cmp
cs
test
aam
stos
mov
mov
push
into
notl
mov
out
das
lea
dec
call
pusha
jae
jne
fstpl
mov
loop
test
jno
lcall
out
mov
or
xchg
sahf
mov
xor
enter
inc
inc
or
je
mov
push
add
sbb
and
dec
ljmp
pop
jge
fistpll
xchg
in
jnp
and
jno
dec
scas
dec
leave
outsl
push
mov
add
fwait
loop
and
or
mov
insb
xlat
mov
mov
mov
xchg
and
out
mov
or
test
xor
add
pop
add
negb
pop
jg
movsb
add
insl
and
fs
out
aas
or
cmc
inc
cmpsl
outsb
aas
push
xchg
or
es
aam
sbb
jp
in
fwait
leave
pop
arpl
aam
in
stos
in
mov
cmpsl
popf
adc
lahf
or
inc
outsl
pusha
movsb
into
lahf
xchg
pop
idiv
andl
sub
xor
dec
sti
call
out
xchg
jbe
ja
mov
adc
sti
scas
sub
mov
adc
mov
int
int3
scas
jge
fldcw
pusha
fisubl
sbb
adc
inc
pop
scas
fistpl
mov
and
scas
in
lcall
pushf
adc
add
inc
or
xlat
add
andl
pop
push
push
ds
xchg
int
mov
or
lds
mov
inc
xor
dec
jno
stos
addr16
cwtd
into
cmpsb
test
scas
test
mov
sbb
int3
xchg
lahf
xchg
and
sbbb
dec
jmp
addl
mov
dec
cmp
xor
or
and
js
stos
dec
addr16
inc
icebp
adc
leave
mov
jg
fistl
pusha
sub
ret
popa
inc
sbbb
out
jo
jb
in
and
xor
sahf
push
popa
adc
dec
lock
dec
xor
dec
outsb
ficomps
push
push
sar
and
fisubs
lahf
pop
xor
inc
iret
subl
ljmp
sub
stc
lea
pushw
mov
stos
pop
dec
push
lock
add
lret
adc
sti
aas
jno
ljmp
dec
rol
test
push
adc
arpl
mov
shr
mov
shlb
push
cmc
mov
adc
ja
ret
es
jle
pushf
push
enter
add
inc
addr16
push
inc
mov
cld
inc
bound
jne
cmp
sbb
cmpsl
push
jmp
in
rclb
addps
mov
add
lcall
iret
cmpsb
int
rclb
xor
iret
mov
pop
nop
jp
cltd
xchg
or
in
mov
sbb
data16
divb
jl
mov
lcall
add
jnp
sbb
andnps
in
mov
je
inc
mov
jnp
sub
mov
adc
leave
pushf
inc
cmpsb
repnz
push
loop
jmp
lods
into
cmpsb
inc
jae
jge
arpl
pushf
jle
sub
pushf
rolb
iret
in
adc
roll
pop
fimuls
or
jmp
lret
pop
ds
sub
cmp
arpl
cmpsl
cwtl
xchg
dec
mov
mov
and
jo
cmc
test
cmpsb
decb
cwtl
cmp
imul
lock
scas
add
pop
mov
fucomip
push
push
jecxz
sbb
jmp
or
into
outsl
daa
rol
movsl
popf
xor
xchg
cmp
sahf
insb
push
xor
testl
xchg
cmp
mov
icebp
push
leave
lret
call
dec
adc
addps
jl
int3
shl
lcall
lock
hlt
scas
push
fisubs
push
mov
push
xchg
ss
insb
movsb
pop
jp
shlb
xor
sbb
dec
test
sub
inc
xchg
cli
movsl
aam
cmp
lods
sbb
pop
hlt
hlt
dec
mov
pop
call
and
mov
call
push
or
push
add
jmp
lret
fidivs
mov
sbb
cmp
inc
jae
and
or
lock
fidivl
icebp
mov
and
adc
inc
out
xor
or
iret
push
xor
ret
or
mov
pushl
xchg
push
test
adc
out
loope
arpl
sub
pop
fmuls
mov
aad
nop
out
add
and
or
xchg
mov
popf
mov
ret
jecxz
enter
mov
les
lods
lock
inc
inc
gs
or
mov
pop
sbb
pushf
jle
dec
and
lcall
in
call
inc
in
lret
in
mov
or
pop
or
pop
adc
fimull
xchg
mov
daa
inc
and
fdivrs
push
int
xor
mov
sahf
pop
push
cmp
jb
scas
stos
and
leave
bound
sbb
inc
call
mov
jmp
adc
es
in
or
jp
or
lods
xchg
add
cmpsl
dec
jp
shrl
popf
jno
loop
sti
lret
sarb
into
loopne
iret
repnz
cs
movsl
mov
repz
adc
push
ret
test
or
loope
mov
sub
push
fidivrs
xor
push
xchg
leave
pop
cmpsb
pushf
call
das
jecxz
push
cmp
xchg
mov
and
call
js
and
sbb
sub
sbbb
nop
sub
cmp
mov
cltd
popa
iret
movsb
test
les
outsl
xchg
sub
in
mov
iret
cs
sub
mov
mov
xchg
test
cs
adc
movsl
or
cmp
xchg
out
lods
in
jbe
les
in
clc
sub
mov
test
mov
push
adc
add
arpl
push
fwait
pop
inc
jb
scas
lods
mov
mov
lcall
fs
inc
stc
pop
mov
adc
sbb
frstor
push
out
add
xchg
xchg
sahf
mov
inc
test
jne
or
shll
addb
aad
stos
cmp
mov
pop
ds
imul
xor
mov
jb
ret
mov
test
inc
mov
cltd
in
mov
jl
jae
stos
cmp
add
jno
mov
push
push
xchg
adc
mov
faddl
clc
lret
mov
mov
xlat
push
adc
push
in
push
popa
cmpsb
sub
pop
ja
pop
xchg
bound
loopne
insb
inc
inc
or
mov
pop
adc
sub
int3
in
fwait
or
dec
add
aas
push
push
fucomi
addb
pushf
push
xlat
or
add
mov
loop
inc
push
cli
dec
pop
movsb
lcall
mulb
mov
pop
mov
pop
push
test
cmp
out
movsl
mov
aaa
pushf
inc
aad
lods
mov
test
or
mov
scas
xchg
fcoms
insb
sub
add
mov
push
mov
sub
pushf
sub
fs
in
inc
push
lahf
xor
xor
seta
cltd
mov
add
inc
sbb
shrb
mov
mov
shr
adc
dec
cmp
jne
jp
rcr
cmp
into
imul
pop
iret
adc
mov
cwtl
xor
test
ds
push
and
jmp
scas
inc
in
dec
inc
push
sub
repz
sbb
stc
and
ret
adc
mov
divl
or
scas
xor
lahf
sub
push
jnp
or
das
out
inc
and
pop
into
mov
mov
jge
inc
sbb
mov
pusha
call
push
mov
ds
roll
stc
push
lret
xor
fistpl
and
fst
popl
add
and
mov
xchg
hlt
add
stos
dec
mov
idivb
sub
push
insl
ljmp
sbb
test
sub
push
jge
fcoml
mov
and
push
mov
adc
aam
add
pop
cmp
cli
dec
out
outsb
xchg
push
inc
cltd
ficompl
fwait
scas
xchg
and
test
xchg
mov
ljmp
mov
dec
xor
rclb
ds
loope
dec
fstp
fldl
cmp
shlb
rcl
xor
fwait
in
fldl
into
sti
stc
jmp
aam
dec
test
loop
mov
ss
dec
mull
aaa
mov
and
mov
xchg
adc
hlt
pop
or
mov
das
push
sbb
jg
mov
xchg
lock
iret
fidivrs
loop
jae
add
inc
dec
jb
push
in
rol
inc
ja
sbb
mov
mov
push
js
and
ss
cmpsb
xchg
mov
das
data16
cmc
inc
adc
sbb
push
and
aas
mov
mov
xchg
test
xchg
aad
cmp
and
pop
xor
insl
sti
cmp
test
fisttpll
and
sahf
imul
iret
cmp
xchg
jno
ss
rolb
ret
icebp
push
sbb
push
mov
jg,pn
mov
mov
dec
das
out
jmp
jp
fcmovne
dec
aam
pop
lahf
push
aam
pop
fcmovu
subl
sub
xchg
out
lods
repnz
pop
pop
bswap
jg
or
inc
rclb
mov
leave
dec
and
stos
lret
pusha
repnz
xchg
outsb
push
stc
cmpsb
repz
jno
loope
cmpsb
fsubrl
pop
movsl
mov
jns
bound
lahf
add
test
les
lcall
gs
mov
or
dec
mov
lret
xchg
scas
or
lods
and
mov
lret
frstor
add
cmc
sbb
out
jb
pop
inc
inc
cmc
xor
fwait
adc
or
call
dec
or
into
enter
fbstp
cmp
jge
xchg
inc
inc
lret
stos
test
mov
andl
into
nop
stos
adc
cwtl
and
xchg
jge
cwtl
in
mov
mov
adc
into
mulb
dec
daa
insl
pusha
cmpb
xchg
push
inc
or
idivb
fdivp
inc
mov
dec
in
ret
mov
jns
stos
sub
add
and
mov
inc
xchg
nop
int
pop
push
in
fidivrs
sub
sbb
mov
out
adc
push
mov
add
out
cmp
popf
fwait
jnp
xchg
xchg
jae
push
jb
stc
sub
loop
clc
cli
jge
sub
clc
fwait
push
je
xchg
dec
loope
adc
outsl
sbb
scas
in
jmp
dec
jbe
inc
leave
rcrl
push
inc
enter
mov
insb
in
loop
test
out
int3
dec
mull
imul
push
loope
sbb
adc
and
cmp
out
bound
fwait
in
inc
popf
scas
push
js
xchg
fiadds
mov
and
out
xor
js
jo
popa
pop
js
incb
lahf
notb
inc
sub
inc
das
xchg
cmp
lcall
jle
shll
inc
inc
in
js
gs
ljmp
jns
fistpll
lds
shlb
outsb
xchg
xchg
dec
pop
js
ficoms
push
adc
or
les
add
xchg
cmp
ljmp
cld
jbe
fs
fmull
or
mov
addb
andb
insl
push
and
fists
out
and
adc
push
xchg
lock
mov
push
mov
loop
jnp
xchg
cmp
test
sub
xchg
icebp
mov
mov
push
pushf
ljmp
adc
mov
jmp
mov
clc
mov
mov
in
sbb
popa
fstl
or
and
mov
sbb
sub
cmp
pop
lods
scas
jae
fwait
aad
adc
sbb
jnp
or
in
dec
cli
jl
lahf
push
dec
stc
dec
les
aaa
ss
xchg
xchg
inc
scas
movsl
sahf
push
mov
nop
mov
push
outsl
insl
data16
mov
push
out
test
pop
pushf
sub
adc
or
js
adc
push
das
es
outsl
fstp
mov
cmp
dec
xchg
insb
xlat
add
das
pop
xor
das
jae
test
roll
xchg
ds
movsb
pop
mov
in
ret
cmpsl
cmp
cmpsl
popf
insl
mov
stos
add
cs
mov
rcrb
jae
xor
push
rcrb
fucomip
movsb
xchg
pop
loopne
scas
icebp
mov
mov
sbb
clc
pop
cli
pop
std
into
sahf
test
idivl
cld
imul
pushf
inc
fists
cmp
imul
dec
imul
stc
jl
pop
sub
jge
lahf
fisubrl
insl
ljmp
fwait
jo
and
es
and
xchg
and
imul
xor
lret
or
inc
cmpsb
testl
or
jmp
push
fwait
ret
pop
or
divl
test
sub
iret
pop
cmp
or
flds
pop
mov
mov
