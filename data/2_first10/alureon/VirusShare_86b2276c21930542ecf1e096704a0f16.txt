push
mov
sub
xchg
mov
mov
mov
push
xchg
mov
mov
mov
call
xchg
xchg
push
mov
mov
mov
xchg
mov
mov
mov
xchg
push
mov
sub
mov
mov
push
call
mov
pop
mov
pop
mov
mov
mov
mov
mov
mov
add
sub
mov
mov
push
mov
call
mov
pop
mov
pop
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
xchg
mov
mov
mov
xchg
sub
mov
push
push
sub
mov
push
call
pop
pop
pop
pop
xchg
mov
mov
mov
xchg
xchg
push
xchg
sub
mov
mov
pop
push
mov
pop
xchg
mov
mov
mov
mov
call
mov
mov
mov
mov
push
mov
pop
xchg
call
push
mov
pop
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
pop
xchg
sub
mov
mov
pop
mov
mov
mov
mov
xchg
mov
mov
mov
xchg
mov
mov
mov
mov
xchg
cmp
je
arpl
pop
add
mov
mov
mov
mov
pop
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
xchg
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
xchg
mov
mov
mov
mov
mov
mov
xchg
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
xchg
mov
mov
mov
mov
xchg
xchg
mov
mov
mov
mov
mov
mov
mov
xchg
sub
mov
mov
pop
mov
mov
mov
xor
mov
mov
mov
xchg
inc
add
cmp
jb
jmp
mov
inc
add
mov
inc
add
flds
add
inc
add
cld
inc
add
adc
add
add
ss
add
inc
inc
add
pop
inc
add
jo
add
xchg
add
inc
add
mov
inc
add
filds
add
inc
add
add
add
inc
add
sub
add
inc
add
dec
inc
add
pop
inc
add
jno
add
jle
add
lea
add
add
rolb
int
add
loopne
add
out
inc
add
cli
inc
add
or
sbb
add
xor
inc
add
dec
inc
add
add
add
mov
inc
add
mov
inc
add
add
add
clc
inc
add
add
add
call
add
add
add
add
add
add
pushl
inc
add
mov
inc
add
mov
inc
add
flds
add
inc
add
cld
inc
add
adc
add
add
ss
add
inc
inc
add
pop
inc
add
jo
add
xchg
add
inc
add
mov
inc
add
filds
add
inc
add
add
add
inc
add
sub
add
inc
add
dec
inc
add
pop
inc
add
jno
add
jle
add
lea
add
add
rolb
int
add
loopne
add
out
inc
add
cli
inc
add
or
sbb
add
xor
inc
add
dec
inc
add
add
add
xor
inc
insb
outsl
jae
dec
popa
outsb
fs
add
jb
popa
je
inc
jbe
outsb
je
add
inc
jb
popa
je
push
imul
jb
popa
je
push
push
add
insl
push
jns
je
insl
dec
outsl
arpl
gs
add
je
jb
arpl
jae
les
inc
imul
outsl
push
jns
je
insl
push
imul
imul
je
imul
gs
outsl
insl
insl
popa
outsb
fs
imul
inc
gs
outsl
outsb
jae
insb
gs
outsl
fs
add
je
outsl
outsb
jae
insb
gs
jne
jo
je
push
add
inc
gs
jne
jb
outsb
je
jb
arpl
jae
cmp
inc
jne
jb
outsb
je
jb
arpl
jae
add
gs
jb
jbe
push
jns
gs
add
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
je
imul
bound
inc
gs
jne
insb
push
popa
je
dec
popa
insl
gs
add
inc
gs
popa
jae
inc
jb
outsl
jb
imul
gs
outsl
arpl
push
imul
gs
outsl
fs
gs
imul
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
push
jb
outsl
jb
je
inc
insb
popa
jae
add
push
jb
arpl
jae
add
jb
arpl
jae
gs
imul
gs
je
imul
push
add
add
je
push
push
jb
outsl
jb
je
add
add
je
gs
imul
insb
outsl
bound
push
outsb
insb
outsl
arpl
inc
add
fs
imul
add
dec
outsl
arpl
push
outsb
insb
outsl
arpl
push
je
inc
jns
gs
outsl
push
imul
outsl
add
outsb
inc
jbe
outsb
je
add
outsl
jbe
inc
imul
jns
add
add
jae
insl
gs
push
add
inc
jbe
outsb
je
pop
add
je
popa
jae
inc
jb
outsl
jb
dec
add
insl
imul
outsl
arpl
jae
jle
push
popa
imul
je
jo
gs
bound
arpl
xchg
add
imul
stos
add
jb
popa
je
add
jb
outsb
inc
add
jb
gs
xor
cs
insb
add
add
xchg
xchg
inc
add
mov
add
add
inc
gs
jns
inc
outsl
insb
outsl
jb
les
dec
outsl
popa
fs
outsb
jne
add
add
jae
popa
addr16
outsl
js
add
add
jae
push
jne
je
gs
popa
add
gs
xor
fs
insb
add
add
jnp
out
mov
cmp
sarl
or
cld
cwtl
mov
in
xor
pop
dec
mov
rolb
pusha
pusha
push
mov
lcall
rolb
mov
jnp
mov
dec
push
fisubl
or
call
push
dec
cmpsb
sahf
pop
cmp
cmp
push
dec
add
cmpsl
loopne
xchg
popa
and
rclb
pop
cmp
xchg
push
aam
fwait
pop
xor
shl
test
xchg
movsb
and
or
outsb
jae
fwait
or
jge
int3
in
into
and
popf
scas
sahf
lds
test
std
push
pop
adc
movsb
loop
jecxz
push
daa
pop
sub
pop
aas
rcrl
inc
pop
popf
xchg
push
mov
icebp
cmp
mov
rolb
shl
fs
lods
fs
sub
or
jecxz
cs
ret
rorl
pop
fildll
pop
or
mov
push
shlb
xchg
inc
call
rcl
ja
sbb
sub
pop
sub
dec
test
imul
ja
adc
fcmovbe
inc
fs
lods
std
movsb
cmp
lret
xchg
and
pop
in
pop
inc
cltd
cmc
lods
rcrb
sbb
std
stos
roll
add
frstor
or
sarb
jge
dec
cmp
cmpsl
push
outsb
lock
stc
in
jo
mov
movsl
mov
adc
xor
iret
int3
sbb
dec
int
adc
aam
rcl
pop
cmpb
sbb
xor
subb
and
test
cmpsb
outsl
faddl
cmp
cmpsl
mov
dec
lcall
fidivrs
sbbb
insb
or
imul
dec
lods
shll
mov
int
icebp
mov
sub
mov
cld
push
sub
or
lds
mov
sbb
jns
lds
jb
jecxz
lds
cs
or
sub
outsb
or
insb
pop
dec
pop
clc
and
pop
mov
jmp
push
insl
mov
mov
sahf
push
adc
stc
jg
push
jge
repnz
cmc
xchg
push
shlb
int3
mov
adc
mov
push
jo
mov
test
scas
xor
adc
cmp
test
adc
xchg
adc
insl
jno
cmp
pushf
ret
inc
or
mov
test
testb
mov
mov
mov
mov
xor
adc
push
pushl
outsw
flds
daa
mov
pop
into
jl
xor
cmovnp
mov
jp
sbb
and
inc
divl
push
lods
fdiv
dec
mov
rcrb
cmc
jmp
in
jbe
imul
int3
enter
hlt
mov
fldl
or
push
mov
dec
and
lds
test
pop
mov
sub
mov
xchg
mov
cltd
or
xchg
mov
xor
call
push
jp
cmc
inc
cmp
push
push
test
inc
ret
xchg
lret
cmp
loop
sub
adc
jge
stos
pop
add
ljmp
cmp
pop
rcrl
or
int3
js
imul
and
mov
loopne
adc
shll
stos
sub
xchg
and
pop
mov
rcrb
rcll
and
sbb
fwait
pop
cmp
movsb
cld
dec
loope
pop
dec
mov
pop
pop
hlt
adc
jne
out
repnz
adc
adc
sbb
mov
xlat
ficomps
jg
cmc
test
bnd
xchg
mov
dec
inc
jecxz
cltd
fs
add
cld
adc
pushf
jno
xchg
xchg
in
popf
aam
idivl
dec
jne
mov
xor
sub
or
ret
pop
pop
cld
adc
lahf
mov
dec
sub
ljmp
add
and
cmpsl
cmp
and
popa
sub
xor
add
push
cmp
xchg
pop
rcrl
sarb
cmp
lcall
jnp
or
test
jae
clc
movb
lcall
aaa
shll
mov
mov
dec
sbb
push
popa
sbb
call
push
stc
das
outsl
inc
shrl
mov
mov
jge
push
bound
sub
add
xchg
mov
pusha
sbb
mov
hlt
push
rol
fidivrs
movsb
push
mov
cld
or
jl
loop
push
push
cmc
jb
ds
stos
data16
xchg
jge
xor
add
je
add
jo
mov
pop
mov
cld
mov
lcall
pop
mov
arpl
pop
ds
xlat
lods
add
ljmp
sahf
inc
mov
es
dec
jmp
push
lds
push
dec
jecxz
cmpsb
dec
pop
jae
mov
mov
dec
cmp
mov
sbb
jno
iret
inc
mov
sbb
push
xchg
mov
les
pop
dec
sbb
add
sbbl
out
std
fucomp
addr16
sbb
mov
cmp
push
cmp
dec
test
out
fistl
adc
mov
shll
add
xor
rcl
mov
jmp
cmp
mov
sub
cmp
or
xchg
jb
sub
insb
dec
pop
mov
sbb
cmp
mov
sbb
arpl
imul
push
jg
outsb
fcompl
cmp
xchg
loope
and
xor
lahf
mov
leave
xor
test
or
add
fmull
pop
mov
scas
nop
clc
andl
mov
sbb
sarl
test
jns
sub
lods
call
xchg
cmp
and
test
pop
fwait
push
or
lret
mov
mov
dec
dec
sub
pop
ret
xchg
js
das
shll
loopne
lds
mov
dec
cs
dec
ss
cmp
aaa
loop
mov
push
cmp
addr16
xor
fstl
inc
aam
add
int
movsb
shr
add
jns
aad
js
lret
ljmp
jp
stc
cmp
cmp
scas
mov
cmpsl
paddusw
ljmp
and
mov
out
mov
aas
sub
dec
pop
imul
faddp
cmp
cwtl
mov
fs
adc
testl
and
add
inc
idivl
loop
popf
dec
mov
shrl
pushf
push
pop
mov
mov
pop
xor
mov
adc
inc
rcr
mov
xor
lock
mov
pop
or
or
push
cmp
out
pop
mov
ljmp
movsb
es
mov
out
orb
sub
dec
test
xor
xor
cwtl
sti
sub
imul
sub
test
dec
mov
cmp
insb
ja
pop
mov
sub
adc
xchg
icebp
cmp
push
movsl
xlat
or
mov
rcll
movl
mov
xchg
ret
or
sbb
fiadds
dec
inc
pop
inc
mov
ljmp
jp
sub
cmc
lods
mov
mov
or
and
arpl
adcb
cmpsl
hlt
imul
sbb
loop
or
xchg
mov
ljmp
sti
cli
xlat
test
jl
pop
sub
sti
xor
mov
mov
pop
mov
xchg
dec
movsl
sub
and
pop
sub
push
test
push
jb
je
test
xchg
out
fsub
or
jns
mov
dec
aas
loopne
outsb
fucom
mov
push
arpl
aam
ret
movsb
push
mov
dec
push
mov
sbb
stos
pop
arpl
xor
or
push
cmp
and
xlat
lods
mov
lea
mov
cmp
and
nop
push
pop
std
repz
popf
test
movsb
fcomps
inc
arpl
movsl
loopne
sbb
xor
xor
xchg
pusha
mov
jg
push
jmp
lods
insb
adc
mov
adc
sub
dec
test
xor
imul
xchg
movsl
dec
add
sarb
pop
movsl
sub
dec
andb
mov
aas
push
mov
jg
mov
push
and
mov
pop
xchg
jge
std
jle
or
xor
dec
repz
iret
or
imul
mov
lods
jp
dec
lea
xchg
sbb
mov
and
push
jecxz
ss
pop
ja
inc
add
fisubrs
movsb
std
push
inc
test
ret
jp
pop
in
xor
ss
sub
jmp
decb
push
inc
inc
mov
push
xchg
mov
push
mov
sub
aas
movsb
inc
dec
dec
xchg
leave
mov
inc
lea
test
dec
lret
mov
xorb
mov
int
xor
sbb
push
pop
xchg
ds
fs
dec
push
in
pop
inc
fldl
push
mov
inc
rclb
xchg
dec
mov
aaa
js
hlt
sarl
sarl
scas
cli
and
shll
pop
lock
pop
inc
jmp
inc
cmpsb
repz
xchg
add
scas
repz
dec
shll
enter
dec
je
leave
rolb
pop
in
sarl
jge
and
jno
cmc
imul
rorb
inc
sub
shl
ret
mul
adc
insl
lods
adc
xchg
push
jae
imul
jge
and
fidivs
xor
xchg
add
mov
sub
test
push
sub
mov
or
cwtl
jmp
mov
sbb
daa
mov
enter
mov
and
adc
xor
cld
inc
cmp
mov
data16
hlt
rcrb
loopne
test
enter
push
arpl
imul
pusha
inc
pop
jmp
pop
sub
ds
int
push
inc
sub
orb
xlat
push
mov
orb
pop
rclb
adc
in
addr16
cmp
or
neg
aas
mov
jne
dec
xor
sbb
cmp
cs
ss
cmp
movsl
push
mov
pop
mov
mov
jmp
mov
loope
jno
fdivrp
mov
push
dec
xchg
faddl
add
ret
test
push
ja
mov
pushf
out
pop
and
leave
mov
outsb
fistl
dec
popa
stos
insl
or
inc
insl
pop
imul
bound
push
xchg
jge
push
xor
divb
lods
inc
testb
push
lds
mov
stos
jg
int
inc
jge
jg
mov
push
aaa
and
and
sbb
sub
mov
imull
in
lahf
xchg
mov
pop
pop
inc
cmp
push
cmp
cmpsb
mov
adc
xchg
lock
flds
mov
inc
or
push
mov
jg
dec
out
outsb
mov
out
stos
sub
ds
sub
ja
add
jae
add
fucomip
aas
nop
das
jb
movsb
mov
notb
adc
ret
lods
and
fs
outsl
xchg
fisubl
mov
mov
test
rorl
xchg
js
or
mov
add
mov
jns
or
icebp
and
mov
add
das
gs
loopne
outsl
loopne
aad
ret
jnp
popf
daa
mov
or
xor
rorb
sti
mov
add
pop
ffree
dec
or
jmp
add
jns
adc
push
iret
or
fst
stc
mov
sub
push
dec
jp
mov
jns
inc
movsb
and
adc
cmc
aas
inc
lods
movsb
cmp
jnp
xchg
and
movb
jmp
xchg
mov
lods
imul
gs
dec
mov
pop
sub
cmpsb
popf
cmp
leave
mov
subl
sbb
add
int3
imul
fldl
cltd
icebp
xchg
dec
sti
cmp
add
jb
pushf
adc
mov
push
pop
and
jne
add
xlat
frstor
cltd
jne
popa
push
cmc
add
in
clc
repnz
stos
adcb
jmp
outsb
mov
or
stos
notl
adc
and
in
lahf
cmpsl
lret
out
mov
mov
lret
cli
loop
or
jge
add
scas
or
sub
or
je
cld
cwtl
cmc
push
stos
stos
lahf
shll
pop
mov
loope
dec
sub
and
push
dec
imul
orl
jae
add
into
outsb
add
je
xchg
pusha
jb
pushf
xor
adc
aad
test
insb
lcall
push
jge
mov
addl
aas
stos
sub
in
jae
mov
fsubs
adc
jne
mov
inc
popf
popf
and
dec
mov
push
push
cmp
js
pop
aam
movsl
jl
aas
mov
clc
mov
pop
int3
mov
repz
cmpsl
lret
cmpsl
xor
ret
mov
dec
mov
dec
xchg
xor
std
js
addl
loopne
and
and
sub
mov
pop
in
stc
scas
xchg
pop
call
push
cli
ret
mov
pusha
fistl
cmpsl
sub
push
pop
jnp
notb
mov
leave
xchg
fstl
stos
add
mov
or
sahf
adc
mov
imul
sub
inc
outsb
push
cmpl
lahf
inc
jmp
js
into
lea
popf
or
sarb
jno
mov
mov
loopne
or
pop
iret
roll
dec
sub
out
mov
sub
loopne,pt
movsl
loop
add
imul
jno
xor
scas
rorl
mov
sbb
pop
imul
test
xor
mov
mov
or
movsl
push
xchg
inc
xlat
pextrw
or
popf
sub
data16
outsl
out
addr16
cmp
rcll
pop
dec
ss
shlb
ret
lods
dec
cmp
pop
jg
lahf
fwait
aas
cltd
dec
mov
dec
incl
jge
loop
push
imul
out
pop
nop
stos
scas
in
dec
movsb
stos
pop
pop
add
push
jae
jnp
sbb
lock
jbe
jle
fsubr
jb
xor
push
mov
fsubrs
mov
add
cmp
lahf
jno
push
packuswb
into
cmpb
ljmp
fisttpll
xor
aad
xchg
adcl
push
fildl
sahf
mov
dec
insl
aam
sub
xchg
mov
cmp
sbb
mov
stos
cwtl
sbb
fisttpll
movsb
aaa
jmp
int3
sbb
sub
or
outsb
in
fstpl
repz
daa
cmpsb
cmp
je
push
js
sub
pop
jns,pt
push
pop
xor
adc
inc
bound
mov
jg
xor
mov
jg
xchg
mov
jg
out
ds
aaa
loope
movsb
and
inc
push
push
daa
push
sub
jmp
add
or
or
insl
shll
push
xchg
test
pop
adc
out
xchg
cmp
sub
fisubrs
jns
dec
inc
lcall
add
and
cli
inc
and
jl
xor
jle
dec
ret
lods
dec
xor
push
mov
jecxz
loop
shrl
fstpt
inc
add
sarl
pusha
popf
lds
add
cmp
js
aad
testb
jmp
repnz
or
mov
pop
add
push
xchg
push
lock
pusha
mov
adc
mov
insl
in
push
cmp
int
js
repz
sbb
push
js
jecxz
mov
inc
es
repz
xchg
sbb
xchg
sub
ficoms
in
ds
aas
popa
mov
clc
iret
push
fdivs
jecxz
xchg
mov
insl
outsb
mov
fst
mov
call
bound
ja
sub
fildl
loop
mov
loopne
pop
lahf
out
cmc
jbe
leave
jmp
call
int3
mov
cmpsl
mov
call
jl
or
jmp
xchg
outsl
int
xchg
push
sbbb
xchg
gs
outsb
jae
imul
jo
push
sbb
cmp
fs
and
inc
mov
push
mov
rcrb
xchg
shll
or
movsb
hlt
push
adc
add
mov
sub
jg
cmp
testl
add
mov
in
pop
in
xchg
pop
sub
leave
aad
cmp
cmp
xor
call
lea
jg,pt
and
outsl
jge
repnz
pusha
leave
lock
or
ret
pop
test
es
fsubr
inc
and
jne
loope
xor
mov
cld
dec
hlt
fmuls
add
push
aas
add
mov
push
daa
mov
je
cmp
leave
lock
mov
xor
mov
cmc
cmp
xor
ja
xor
mov
cli
jne
movsb
fwait
or
loopne
jo
loop
sbb
mov
divb
add
mov
outsl
mov
popa
fbld
and
lahf
xchg
mov
sbb
pop
icebp
adc
pop
push
je
aam
mov
int
sbb
and
outsl
in
sbb
test
fimuls
inc
mov
mov
loop
pop
mov
mov
clc
clc
arpl
std
add
shll
jle
sarb
dec
mov
mov
inc
aaa
jle
push
std
push
das
push
dec
call
push
dec
mov
ds
xlat
inc
cmp
clc
fs
push
jp
jmp
ficoms
push
jmp
hlt
rcr
cmp
popa
xor
jbe
inc
mov
into
aaa
into
pop
sub
iret
jmp
test
push
jmp
es
pop
xlat
in
dec
push
cmp
rcll
push
sbb
fildll
xor
adc
das
push
jl
or
dec
shrd
xor
pop
notb
inc
pop
and
clc
cmc
insl
out
push
pop
sbb
cwtl
push
mov
add
inc
testb
xchg
sbb
mov
dec
push
js
call
or
add
add
adc
sbb
mov
outsl
jae
xchg
mov
adc
lcall
mov
incl
adc
sbb
sbb
shr
test
and
loope
add
push
cmp
int
jns
add
nop
push
rcll
cmp
inc
mov
mov
adc
jns
les
xchg
mov
and
xchg
mov
lods
or
dec
sbb
pop
push
rcrl
add
push
test
je
lahf
int
jae
or
decb
cmpsl
repnz
test
lock
jbe
xchg
adc
mov
dec
pop
mov
dec
daa
xchg
mov
push
push
xorb
stc
js
in
jecxz
das
js
xchg
in
push
movsl
xor
xchg
push
aas
sub
out
push
iret
xlat
or
fdivrl
sbb
test
add
or
out
sbb
rcl
jbe
mov
inc
or
or
aam
out
icebp
jmp
cmp
jp
stc
mov
cmpsb
movsl
loop
fists
call
and
xor
mov
fstl
sub
inc
or
cltd
push
fidivs
push
jmp
or
xor
xor
sbb
repz
movsb
or
and
dec
push
adc
xchg
aaa
inc
mov
sub
inc
dec
sub
aaa
xchg
xchg
out
outsl
test
inc
pop
adc
jne
cmp
dec
sbb
int
pop
pop
inc
cmp
aas
push
arpl
or
roll
jns
and
push
aam
repz
cld
xchg
roll
fcoms
pop
shll
push
leave
mov
lea
cltd
cld
push
loope
adcb
jb
push
dec
push
mov
lds
mov
in
lahf
inc
mov
push
mov
icebp
sbb
mov
je
daa
imul
push
push
xchg
inc
in
jo
xchg
mov
dec
addb
inc
adc
dec
lods
fs
mov
sarb
pop
lea
or
xchg
lds
test
jp
adc
movsb
push
mov
incb
adc
loopne
repz
mov
and
push
cmp
pop
xchg
push
xchg
les
push
into
ffreep
adc
or
pop
or
pop
addr16
inc
pop
pop
mov
dec
sbb
jmp
fmul
and
cltd
cmp
push
dec
movsb
leave
iret
push
mov
adc
into
fisubl
sub
cmpb
lret
and
adc
jbe
jg
and
xor
jno
in
out
test
pop
push
and
cmc
fstpt
pop
mov
int
fcompl
dec
mov
decb
negb
and
jns
mov
bound
ficompl
xchg
lcall
je
fmul
sub
gs
rcll
mov
pop
pop
or
adc
lods
jno
or
repz
pop
mov
sbbl
xor
add
cmp
icebp
push
xchg
xor
dec
pcmpgtd
and
pop
fs
out
adc
adc
adc
sub
ret
adc
repz
sti
xchg
add
or
mov
and
push
pop
inc
push
sub
xchg
push
mov
mov
sub
outsl
cmpsb
adc
cld
dec
das
push
dec
cmp
pop
mov
in
fs
jno
stc
add
sahf
xchg
pusha
ljmp
mov
cmc
fstpl
ss
push
fcomps
inc
aad
in
cmpsb
xor
push
xchg
mov
cmp
into
jg
mov
xchg
dec
add
jge
pusha
adc
xchg
push
mov
cmp
insb
ficomps
gs
dec
push
mov
insl
dec
dec
out
cmpsl
mov
jnp
mov
mov
mov
mov
jno
loopne
ret
ljmp
leave
int3
enter
gs
and
push
movsb
or
cwtl
nop
sbb
push
and
push
loop
popf
int3
std
movb
mov
pop
push
or
mov
std
aas
das
pop
xor
mov
shll
aas
leave
cmc
test
mov
stos
pop
insl
sub
ss
xchg
sahf
mov
call
inc
pop
aas
and
jb
push
into
jns
pop
xchg
adc
pusha
mov
aaa
sub
je
mov
xlat
hlt
stos
mov
dec
ss
jb
inc
lahf
jae
stos
in
mov
pop
movsl
mov
mov
jle
insl
iret
fsubr
jne
lods
pop
jle
scas
daa
cmp
and
xchg
lret
mov
xchg
cmp
push
fstps
ret
pushf
scas
inc
dec
push
pop
leave
mov
std
incl
mov
xor
outsl
add
xor
std
iret
jbe
lock
mov
shlb
mov
sub
fcoml
jg
stos
xchg
cmp
cmp
jge
push
repnz
shlb
rorl
leave
scas
sti
mov
cmc
dec
rcrb
gs
sub
mov
hlt
sbb
pop
mov
sbb
dec
sahf
call
sbb
xchg
adc
cltd
hlt
aam
es
push
cmp
in
leave
notb
movsl
xchg
inc
add
insl
sbb
popf
test
popfw
cmp
ss
sbb
or
jecxz
adc
es
pop
or
xor
iret
cmp
shl
arpl
cld
sarb
sub
ljmp
scas
das
ret
mov
push
not
rcrw
hlt
or
scas
jo
jns
pop
xchg
rcr
push
mov
mov
cmp
je
inc
dec
adc
jp
jmp
jecxz
mov
cmp
and
dec
jo
push
adc
sbbb
lds
inc
loop
ljmp
mov
xchg
or
daa
nop
in
int3
cs
add
cmc
mov
outsl
or
push
shlb
insl
push
pop
lods
std
mov
inc
fsubrp
stos
sub
jne
aaa
in
cwtl
stos
fdivrl
int3
je
sahf
dec
or
je
dec
mov
arpl
mov
ja
shrl
pop
sbb
cmp
sti
sahf
xor
add
or
mov
int3
es
aas
outsl
add
aas
lods
push
stos
adc
aad
sbb
inc
pushf
fcoml
jmp
lock
test
out
pop
sub
lahf
mov
pop
xchg
inc
push
rorl
ret
jae
in
jmp
xor
cmpsl
loope
push
dec
mov
cmp
pop
sbb
add
sbb
dec
pop
or
in
cs
pop
imul
movsb
or
incl
es
test
mov
jl
cmp
and
or
lea
imul
loop
dec
lods
pop
ja
adc
sbb
sbb
lret
subl
push
mov
int3
jmp
imul
xchg
xchg
xor
in
sub
aam
dec
es
sbb
dec
cld
outsb
sbb
adc
out
jno
rolb
sub
movsl
mov
pop
mov
mov
add
jne
fisttps
cmp
mov
lea
or
das
movsl
cmpsb
dec
aad
ja
mov
cmp
daa
push
out
stc
jp
and
mov
pop
cmp
xor
or
xchg
popf
pop
xchg
or
pop
scas
les
xchg
ss
mov
or
icebp
cmp
aas
fidivs
sub
cmpsb
mov
add
loopne
dec
mov
int3
xchg
sub
push
loope
push
lds
rcr
lahf
sahf
pushl
aad
xchg
sbb
in
xchg
mov
rcr
push
arpl
and
fs
adc
cmp
inc
or
mov
rclb
inc
pop
lcall
gs
push
inc
or
mulps
add
pop
jno
lcall
mov
iret
fisttpll
movsl
mov
pop
sbb
xchg
in
jmp
aad
sub
fistpll
cmpsb
fildll
mov
fistpll
sbb
and
or
jg
inc
sub
daa
test
inc
int
or
imul
cmp
jae
dec
stos
or
xlat
fsubs
daa
cltd
push
sbb
xchg
aad
loopne
orl
out
or
xchg
outsl
mov
lock
xchg
jmp
fs
out
push
pop
incb
cmp
popf
scas
je
xchg
not
cmc
icebp
jge
mov
leave
repnz
or
call
mov
pop
and
sub
stos
xchg
rolb
subl
pop
arpl
fsubl
sbb
js
lea
push
xchg
pop
divb
inc
cmp
lahf
push
popf
sub
pop
movsl
and
mov
std
sahf
jg
movsl
jns
inc
ja
icebp
pop
aam
arpl
mov
outsl
inc
movsl
bound
mov
cmpsb
or
arpl
mov
sbb
cmpsb
mov
dec
adc
sub
test
push
jno
cmpsl
les
imul
adc
mov
insb
arpl
cmp
into
enter
pop
pop
fistpl
lock
ljmp
push
or
jle
mov
sub
adc
cmp
adc
dec
pop
lea
dec
test
or
imul
into
daa
dec
dec
cmpsb
push
adcl
or
and
ret
sub
mov
push
jns
rcrb
push
cmp
lock
pop
sub
cmp
clc
add
stos
adc
and
icebp
adc
push
add
jmp
pusha
lahf
mov
add
sub
arpl
cmp
xchg
sub
hlt
movl
push
insl
inc
sbb
ss
jle
repnz
add
mov
and
jle
imul
push
jl
jo
and
movsb
sbb
or
ficoml
inc
cmpl
xor
mov
insb
xor
pop
movsl
push
negb
jbe
insl
push
ja
cs
and
pop
mov
or
cmp
mov
mov
xor
insl
sub
outsl
es
in
cmpsb
sbb
scas
ja
mov
sbb
jo
ret
sbb
lahf
and
and
loopne
sub
mov
in
stos
inc
add
fs
mov
jbe
xor
mov
pop
push
fdivrs
and
scas
add
imul
mov
es
ds
jl
sub
push
in
loopne
cwtl
jno
ret
pop
das
mov
lods
adc
jmp
sahf
inc
div
mov
lds
lods
out
scas
jne
or
mov
add
cmpl
xchg
and
gs
mov
push
sbb
popa
lcall
dec
cltd
cmpsl
jb
or
pop
sbb
in
lea
pop
jbe
addl
xor
mov
dec
pop
ds
test
pop
popf
lret
lret
jge
mov
add
push
into
imul
and
mov
push
cmpsb
jb
inc
inc
test
or
xchg
mov
movsl
cld
mov
shr
test
cmp
or
mov
mov
or
daa
ret
push
mov
ja
std
je
inc
div
xchg
fs
push
lock
ss
int
xchg
add
ljmp
sbb
sbbb
xor
pop
sbb
push
or
cmp
imul
test
int
test
cmp
jl
inc
jecxz
sub
mov
adc
and
icebp
mov
xchg
pop
cmp
shrl
inc
iret
xor
and
fisttps
sbb
rorb
ja
jle
xchg
mov
fdivs
dec
scas
mov
int3
adc
lods
push
les
pop
add
movsl
lahf
xor
or
out
cwtl
mov
jns
xchg
nop
dec
int3
push
ror
cmp
flds
xor
aaa
lods
aaa
pushf
lret
sbb
xor
fldl
ss
aam
add
sub
add
jne
mov
dec
das
mov
and
je
fstp
daa
dec
mov
cmp
jo
rcll
loopne
or
pop
mov
jae
out
js
push
mov
rcl
add
out
and
fldt
ds
xchg
mov
cwtl
bnd
jg
lret
popa
jo
mov
sbb
scas
lods
adc
adc
lea
mov
mov
out
sbb
jne
movsl
cmp
shlb
ds
lcall
movsl
sbb
outsb
and
mov
in
rcll
or
pop
jns
xchg
xor
lcall
stc
outsb
sbb
jl
adc
ljmp
sar
and
xchg
repz
mov
push
mov
mov
out
mov
sub
ss
or
jecxz
push
pop
jg
test
cli
ds
adc
lahf
dec
stc
enter
inc
nop
fcmovnb
fistpll
xchg
rcr
inc
or
xchg
das
pop
mov
add
movsb
test
mov
and
daa
gs
inc
mov
repnz
je
sub
mov
pop
sbb
jns
aad
dec
mov
and
out
sbbl
les
and
leave
popa
fnstenv
sub
xchg
roll
pushf
cmpsl
dec
jg
xor
test
pop
repnz
inc
sbb
add
sub
das
ficoms
pusha
repz
iret
cld
dec
jmp
cmp
test
sub
loop
outsl
jg
mov
sbb
shl
xchg
xchg
dec
out
scas
fistpl
cmp
fwait
jo
shll
repnz
idivb
mov
xchg
lods
shr
cs
arpl
push
into
inc
mov
icebp
cmc
xor
cmp
jae
outsb
xchg
popa
addl
or
sub
or
push
mov
ja
lods
test
dec
adc
ds
mov
inc
hlt
xchg
sbb
mov
test
pop
cmp
jge
jp
mov
and
pop
or
notb
mov
outsb
lahf
jae
paddsb
adcl
jmp
ret
sub
jge,pt
addr16
jne
imul
xor
out
enter
mov
mov
fdivrl
rcrl
mov
mov
es
jae
mov
xchg
mov
xor
fwait
pop
pop
int
and
in
push
add
jge
test
jns
sub
jne
dec
pop
aam
and
pop
mov
aam
pop
aas
mov
insl
js
in
push
inc
bswap
inc
ja
xchg
lods
mov
jl
dec
scas
arpl
sbb
pop
outsb
jne
fstpt
xchg
jne
sub
cmp
adc
scas
call
or
mov
xchg
lea
mov
mov
cld
cmpsb
in
mov
bound
sub
icebp
in
jbe
pop
dec
gs
cmpsl
inc
jle
inc
sti
jle
cmc
dec
pop
out
sbb
inc
mov
loopne
xor
test
test
inc
sbbl
jne
adc
fcompl
std
cwtl
sub
jb
out
or
pop
pop
xchg
xchg
jo
mov
in
mov
and
popf
dec
cli
movsb
pusha
insb
loop
call
adc
xchg
idivl
and
pop
aad
nop
out
movsl
xor
lcall
mov
cmpsb
shrl
xchg
and
dec
add
pop
jle
lods
cmp
pop
pop
add
pop
les
popa
sahf
adc
je
adc
mov
sub
stc
jp
mov
add
ret
dec
mov
clc
out
leave
mov
xchg
bound
iret
sbb
push
popa
pop
sahf
cmpl
add
cwtl
cmp
notl
ds
and
xchg
mov
cmp
out
and
jge
pop
pushfw
mov
fwait
loopne
cmp
xchg
mov
sbb
or
fbld
loop
mov
mov
fmul
cmp
ss
sub
dec
es
jle
sbb
lcall
lea
jg
inc
addl
pop
cmp
cmpsl
push
into
xlat
cmp
and
push
push
int
mov
jp
mov
outsb
add
enter
rorb
inc
or
pop
cmpsb
fisttpll
jae
in
cld
xchg
or
scas
imul
jb
add
pop
xchg
fisubl
lea
push
inc
pusha
dec
push
mov
popf
out
xor
mov
adc
add
gs
mov
iret
fnsave
mov
shll
out
imulb
mov
ds
insl
lods
lods
es
sbb
roll
icebp
inc
sti
and
xchg
pop
fs
xchg
xor
inc
push
xor
cmpb
add
ljmp
xlat
lret
imul
cmp
fimull
addb
mov
xchg
cmp
stos
sub
jmp
jecxz
push
lcall
pop
cmpl
or
frndint
dec
inc
pop
sahf
sahf
enter
pop
push
pop
adc
jg
sub
dec
data16
lret
push
cmpsb
inc
mov
xor
push
push
ja
dec
loop
mov
push
mov
mov
call
fnstenv
pop
pop
daa
std
mov
mov
mov
add
adc
adc
xchg
outsl
lea
xor
push
add
cmpsb
dec
dec
jecxz
in
fimuls
mov
jnp
inc
pop
imul
cs
fisubl
and
nop
rclb
outsl
xchg
jae
dec
dec
jecxz
and
xchg
movhps
xchg
scas
sub
ficoml
inc
pop
loop
loop
xor
mov
push
enter
into
pusha
lods
mov
cli
shrb
adcl
pop
jl
fstl
push
int3
pop
xchg
dec
lcall
in
outsl
cmpsb
popf
push
jnp
push
out
scas
mov
mov
mov
sbb
mov
add
hlt
xchg
outsl
cmpsl
sarl
jnp
mov
push
lock
xor
push
into
mov
movsl
push
add
stos
dec
cmp
cmp
ret
aad
sahf
imul
nop
sub
mov
lahf
loopne
add
xchg
jle
lcall
data16
sub
stos
ja
mov
or
insb
scas
sbbl
or
pop
push
gs
into
scas
inc
imul
fisubs
xchg
mov
les
js
inc
sub
gs
jno
pop
pop
mov
mov
add
lret
xchg
xor
leave
xor
aas
adc
lock
nop
dec
mov
mov
mov
lock
fs
insl
js
mov
fdivrs
hlt
push
adc
mov
or
xchg
xchg
fistps
xchg
or
jns
nop
out
push
ja
stc
inc
xchg
ja
push
cmc
inc
pop
loope
lcall
aam
mov
movl
dec
mov
pop
push
fisttpll
mov
pop
rcrb
cmp
xor
push
rcl
insl
in
pop
cmpsb
push
xor
and
xchg
ja
jecxz
stos
mov
jge
jne
test
outsl
enter
aaa
sarl
jle
pop
mov
inc
push
jmp
data16
repz
mov
mov
push
or
and
imul
mov
push
loope
mov
test
fcmovne
icebp
fisubrs
ljmp
out
push
jmp
scas
pop
int
rcll
mov
jns
scas
mov
lea
pop
out
pop
in
jl
dec
dec
xchg
loop
sbb
ljmp
cld
sub
in
mov
mov
add
test
leave
jl
lock
bound
pop
push
sub
repnz
das
pop
add
out
maxps
sub
cmp
xchg
mov
mov
ja
sub
insb
int
outsl
jae
iret
inc
imul
adc
add
jbe
dec
lds
mov
xor
aad
loop
pop
data16
jae
jno
sbb
xor
insl
sbb
pusha
movsb
dec
imul
pop
sbb
repnz
mov
insb
stos
mov
les
outsl
mov
andl
dec
sub
jge
loop
mov
or
aaa
inc
fucom
aaa
mov
aam
int
dec
pop
or
stc
cmp
and
sub
xchg
push
sub
jnp
repnz
add
arpl
loope
int3
sti
add
mov
lahf
xor
jecxz
push
push
pushf
stc
jmp
xchg
mov
shlb
add
sub
xor
rcll
jbe
es
mov
sub
ljmp
xchg
sub
dec
rcll
ds
aaa
mov
test
push
jge
mov
out
sbb
and
fidivs
or
cmp
nop
jno
dec
les
dec
adcb
ljmp
mov
es
outsb
mov
fdivp
push
mov
mov
mov
daa
push
sbb
cs
lods
and
jecxz
sub
call
pop
adc
rcll
mov
test
jmp
movsl
lds
fildl
cmp
movsb
xchg
cmpsl
insb
fdivs
push
sub
in
mov
xor
mov
das
cmp
pop
call
pop
sbb
sub
adc
and
enter
int3
pop
stos
out
mov
idivl
cmp
loop
iret
outsb
and
adc
or
inc
in
cmp
faddp
call
add
daa
sbb
xchg
push
jne
mov
mov
int
jl
mov
jae
push
push
pop
and
add
push
mov
mov
test
fcompl
push
jae
ret
jnp
data16
push
sub
mov
mov
mov
lcall
mov
mov
stos
lret
cmp
lods
icebp
lods
out
cs
jbe
push
lcall
pop
std
lods
les
ss
sub
in
pushf
or
cmpsl
movd
rcr
nop
sbb
sub
test
hlt
popa
jae
sahf
mov
mov
xchg
insl
loopne
pop
xchg
scas
test
das
out
push
pop
fstpl
mov
into
or
mov
outsl
push
jo
shll
rclb
mov
fisubl
inc
icebp
mov
or
pushf
push
pop
lcall
xor
fdivs
cli
xchg
mov
fcomps
mov
inc
jo
cld
test
test
popf
inc
shl
int3
out
in
add
push
fadd
xchg
lret
push
cs
rcl
outsb
clc
xlat
pop
mov
mov
push
out
push
aam
stos
add
test
stos
dec
sti
dec
dec
xor
mov
mov
aam
cmp
or
or
icebp
adc
nop
and
pop
pop
jns
data16
and
out
les
push
jmp
sub
push
nop
outsb
and
pop
aaa
sbb
mov
xchg
fs
inc
xor
mov
repnz
fdivrl
gs
arpl
push
jmp
leave
fcoml
inc
or
push
addr16
pop
push
push
xchg
in
and
loopne
addr16
sub
sbb
lock
or
or
hlt
sub
shrb
scas
and
lahf
lret
fsubrl
jg
shlb
sbb
cmpsb
pop
call
test
xchg
add
out
push
xor
lods
ja
mov
xor
add
mov
mov
adc
jo
push
xor
push
push
fwait
adc
sbb
lds
or
adc
sub
movsb
mov
pop
insl
out
sbb
adc
lods
scas
push
mov
es
sub
out
mov
shlb
cmp
push
movsb
fisubrs
sbb
mov
mov
xor
or
pop
xchg
aam
adc
mov
jmp
push
adc
sub
inc
jae
and
push
int3
icebp
addb
inc
bound
jb
adc
icebp
dec
fisttps
inc
jle
mov
or
repnz
es
push
loopne
adc
int3
out
xchg
pusha
int
int
ret
sbb
mov
or
pop
xchg
leave
push
push
data16
jno
jecxz
pop
pop
fcmovnbe
cmpsl
mov
int
daa
arpl
push
and
inc
test
push
push
popf
push
sbb
insl
loopne
mov
sbb
dec
pop
loop
popf
jbe
push
inc
jge
pop
lds
and
inc
pusha
lcall
mov
bound
mov
popf
xor
xchg
xchg
pop
adc
loop
fidivs
pusha
loop
pop
dec
ss
jno
test
push
cmp
jl
cmp
pop
sbb
icebp
dec
push
frstor
cmp
and
xchg
in
adc
cli
call
aaa
ja
xchg
repz
popf
inc
leave
cmp
lds
dec
test
cmp
push
xlat
aas
xchg
popa
test
mov
call
adc
mov
sub
sbb
inc
mov
push
je
push
or
hlt
out
cmp
bound
movsb
mov
sar
sub
inc
jb
outsb
cmp
mov
mov
pushf
push
in
xchg
cltd
dec
movsl
cwtl
push
aam
xor
sbbl
inc
push
negb
out
xchg
ja
xchg
cmpsb
cmpb
cmp
clc
mov
push
mov
mull
call
inc
daa
es
dec
pop
outsl
xchg
int
rcl
les
cmp
lret
cmp
xor
xchg
rorl
fmull
sub
lea
pop
aaa
sar
pop
fsubrs
dec
dec
inc
jnp
inc
xchg
sbb
aam
adc
pushf
fdiv
sub
mov
add
in
inc
int3
nop
lds
jnp
or
aas
cs
dec
xchg
loop
push
adc
mov
in
adc
lock
test
hlt
inc
pop
push
out
mov
je
push
xchg
adc
jle
add
mov
daa
push
arpl
es
push
or
xor
cmp
sbb
push
push
pop
roll
fimuls
stos
add
push
cmp
pop
lcall
pop
clc
jne
out
push
ja
add
arpl
push
xor
pop
js
mov
adc
xlat
mov
aaa
pop
jge
mov
xor
sbb
test
js
push
pushf
add
cmp
scas
cmpsl
push
imulb
adc
movsl
sbb
and
outsb
add
je
add
out
mov
inc
xchg
fiadds
je
pop
xchg
and
ret
sub
xchg
shlb
into
insl
sahf
add
adc
pop
mov
insb
xchg
arpl
sub
mov
sbb
cmp
rolb
rcl
dec
jmp
outsl
push
add
adc
mov
pop
dec
dec
xchg
fbld
mov
sbb
movsb
out
or
mov
sbb
inc
sub
mov
dec
push
cmp
insl
add
cld
mov
lods
pop
sbb
into
lods
mov
mov
fimull
push
jmp
dec
sbb
mov
data16
adc
jle
inc
cmp
data16
adc
pop
fisttps
sbb
cmpsl
test
mov
rorl
xlat
mov
loope
inc
repz
scas
adc
or
adc
xchg
lret
cs
roll
dec
enter
movl
jle
jno
mov
sbb
jg
scas
repnz
add
sbb
out
push
mov
mov
dec
popa
adc
xlat
xchg
sub
push
dec
mov
and
sbb
call
pop
pop
add
jp
lea
pmaddwd
shrl
and
test
mov
stos
leave
pop
push
inc
jae
push
sbb
xor
push
loopne
ss
mov
mov
sub
dec
adc
cltd
adc
int3
int3
sahf
out
test
lods
mov
fldcw
inc
mov
or
sub
popl
pusha
pop
stos
loope
lss
fs
adc
pop
xchg
add
mov
test
mov
and
mov
repz
push
orb
scas
test
pop
enter
sti
pusha
mov
popa
inc
push
mov
pop
mov
rcrb
inc
dec
pop
sub
sbb
lods
add
dec
lods
sbb
mov
mov
xor
xchg
and
dec
xchg
mov
clc
pop
sarl
fdivl
hlt
sbb
cltd
inc
cmpsb
jl
call
je
adc
shr
sbb
scas
icebp
sbb
mov
into
xlat
push
outsb
gs
mov
lcall
xor
in
jmp
sub
shrb
sbb
push
insb
pop
xor
loope
fcom
out
jp
pop
fcoml
mov
out
add
aad
orl
dec
mov
push
sti
addr16
xor
cmc
or
sub
imul
ret
mov
xlat
inc
in
lea
cli
sub
icebp
dec
shll
nop
test
xor
push
sbb
adc
faddl
and
testl
mov
xor
fsub
xchg
inc
and
jge
pop
xlat
ret
testb
movsl
rcrb
inc
cmp
in
inc
out
pushf
pop
pop
xor
loopne
fcom
gs
pop
jne
or
inc
add
imul
sub
push
add
or
test
and
insl
pop
and
jp
jecxz
mov
pop
lock
mov
cld
and
add
fnstsw
adc
pop
hlt
jns
out
jae
dec
jmp
std
jo
cs
xchg
nop
add
into
es
roll
adc
cmpsl
jp
loopne
push
fnstenv
aas
hlt
loop
insl
jg
mov
gs
repnz
test
fadd
pop
sbb
mov
pop
mulb
xor
inc
sbb
test
or
dec
ret
adc
and
test
mov
enter
xchg
push
stos
lods
test
jecxz
outsb
xchg
insl
jb
sub
int3
push
iret
or
popa
xor
dec
dec
in
ljmp
nop
inc
mov
in
fstl
hlt
pop
mov
sub
subb
icebp
mov
ss
insb
fcomi
mov
push
jno
arpl
inc
in
fs
mov
fdivl
jno
movsb
inc
mov
outsb
fisubrl
in
inc
adc
das
lock
push
clc
add
inc
rclb
and
fwait
rcr
ds
push
imul
jg
cmp
push
enter
rorb
push
xor
push
adc
enter
cmp
sub
push
mov
jns
push
cwtl
outsl
adc
fisttpll
add
call
insb
push
mov
cmp
push
cld
inc
dec
lea
add
jb,pn
imul
dec
jne
aas
test
dec
into
mov
dec
aaa
rolb
jns
add
dec
pop
add
dec
test
xor
sbbb
lret
dec
fmuls
jle
mov
mov
imul
add
pop
add
pop
dec
data16
jle
hlt
dec
xor
cmp
ficoms
idivl
nop
mull
adc
lods
pop
xchg
xchg
add
pop
fisubs
inc
adc
sub
pmovmskb
jns
xorl
xor
push
shlb
xchg
push
test
pushf
popa
dec
cmc
cli
push
and
xchg
gs
pop
inc
scas
pop
jae
ljmp
mov
negl
or
les
pop
sub
jl
jl
dec
and
adc
out
scas
fs
inc
sbb
or
scas
inc
push
and
mov
lahf
jae
adc
ficoml
push
cmp
insl
rorl
out
or
mov
and
and
icebp
cmpsl
dec
iret
aam
rep
jae
outsb
and
jmp
fnstcw
cmpsb
and
pop
mov
adc
mov
in
push
adc
test
notl
dec
sbb
movsb
mov
dec
push
scas
sbb
and
push
in
aaa
int
repnz
xchg
mov
lods
adc
mov
and
aaa
sbb
dec
lods
out
lret
xor
or
cwtl
popa
int
pop
mov
inc
add
inc
xchg
rcl
jle
jnp
stc
xor
dec
out
stc
push
pop
shlb
mov
inc
mov
and
test
das
push
sbb
cs
loope
inc
inc
int3
and
sbb
in
fs
out
mov
lods
aad
jno
test
lret
cmp
xchg
sub
lds
dec
pop
cmp
cmp
or
fwait
dec
bswap
frstor
or
lret
mov
mov
or
outsl
mov
mov
je
push
adc
in
sub
mov
lcall
add
ja
insl
fildl
and
gs
push
pop
cmc
addl
lds
out
nop
adc
bnd
imul
push
sti
addr16
lods
addr16
dec
fistl
jno
scas
in
jge
xor
repz
sbb
add
mov
push
xchg
add
fidivrl
pop
sbb
in
sub
pop
jnp
scas
test
inc
fldenv
inc
xchg
fnstsw
xor
cmc
out
mov
mov
popf
fdiv
xor
adc
pop
cmpsl
xchg
fwait
mov
inc
xchg
mov
xlat
mov
jmp
jp
inc
ss
loope
movsb
push
mov
sahf
xchg
hlt
push
xchg
and
aad
xor
lcall
and
adc
cmp
push
xchg
insl
mov
js
jmp
shr
cmpsl
jo
xor
add
pop
sub
xchg
push
mov
xor
pusha
icebp
stc
push
test
notb
push
testl
jb
dec
pop
scas
add
arpl
pop
imul
and
jl
pop
rol
dec
enter
push
mov
and
mov
test
xchg
jbe
fs
sub
lcall
rorb
int3
jne
mov
jnp
or
popa
add
sub
mov
jns
in
dec
jp
adc
out
cmp
mov
xchg
test
pop
inc
mov
test
push
mov
jnp
xlat
add
shll
aad
inc
xchg
ss
mov
xchg
mov
js
adc
jo
scas
jl
mov
int
mov
in
add
sub
pop
aas
test
arpl
clc
or
add
cmp
mov
fcoml
push
push
adc
pop
push
and
or
jo
push
or
insl
leave
mov
pop
pushl
jne
shrb
repnz
sbb
cwtl
jp
mov
stos
jbe,pn
push
je
lcall
subb
mov
pop
pop
mov
pop
pop
and
psraw
fists
adc
push
imul
xchg
and
dec
jns
inc
add
es
mov
pop
icebp
pop
pop
adc
ss
xchg
push
jb
je
imul
push
mov
push
mov
insb
sahf
xor
cmp
add
icebp
or
push
mov
shrl
mov
jnp
inc
mov
inc
xchg
jg
pop
dec
loopne
rcll
lcall
jb
xlat
cmp
jnp
push
xor
mov
bound
ja
jbe
push
mov
movsb
aaa
es
adc
xor
popf
aas
pushf
jno
scas
mov
jno
add
cmp
test
push
xor
and
jg
mov
pop
xchg
ss
cmp
push
cld
inc
inc
sbb
jle
xor
aaa
scas
push
add
pushf
add
adc
jb
and
mov
pop
xor
scas
adc
adc
cs
push
out
mov
dec
sbb
pushf
push
sbb
icebp
push
push
xchg
pop
fidivrl
adc
dec
cmp
or
add
jle
add
lcall
cmp
xor
inc
xchg
push
roll
scas
jle
out
xlat
ljmp
inc
repnz
popf
inc
rol
and
fwait
pop
sub
outsb
sbb
repz
and
add
or
stos
pop
dec
pop
cmp
pop
loop
and
sti
and
inc
rorb
hlt
mov
repnz
mov
std
push
in
repz
jns
gs
aad
sub
add
sub
sub
int3
data16
outsb
and
test
lea
xchg
div
imul
push
loopne
ret
cltd
movsb
and
fnstcw
dec
jnp
inc
push
mov
push
pop
andl
ljmp
loop
xor
ss
inc
xchg
icebp
flds
int
dec
mov
subl
jo
mov
stos
lea
mov
mov
and
data16
es
lret
add
pusha
rclb
loope
imul
test
aam
dec
cmpsl
jle
pop
sbb
push
lret
call
mov
stos
fwait
jl
stos
xchg
xchg
sub
inc
cmp
xchg
dec
lret
das
mov
fcmovbe
xchg
orl
inc
adc
xchg
add
ret
je
dec
dec
inc
push
fimull
outsb
push
movsl
mov
mov
xchg
lods
jmp
and
out
xchg
rolb
push
fidivrl
add
pop
push
add
jle
xchg
xor
jp
out
es
negb
jle
push
jo
sbb
fcmovne
shrl
and
pop
pop
daa
into
push
pop
xchg
aas
xchg
loope
icebp
roll
pop
in
jae
push
mov
icebp
pop
jne
in
jo,pn
pop
adc
cmp
jo
int3
lret
jle
fistps
stc
mov
popa
stc
mov
push
cmp
jge
inc
loope
insl
int
imul
loopne
xor
xchg
mov
pop
roll
cmp
lods
pop
sub
push
dec
ljmp
inc
sbb
loop
loope
push
dec
xor
xchg
cmp
ss
aaa
cmp
lods
test
jbe
and
inc
xor
hlt
mov
in
fsincos
pusha
movsl
bound
out
jge
shll
pop
pushf
jbe
sbb
or
push
sahf
test
xchg
aas
outsb
cmp
push
mov
push
in
lret
jb
xor
sub
pop
shr
jl
les
enter
imul
cmp
scas
test
ja
fistpl
xchg
icebp
adc
fcmove
jno
dec
notl
inc
fidivrl
cmp
push
das
cmpsl
push
in
pop
fnstcw
ljmp
push
xor
nop
sti
out
add
sub
mov
mov
cmpsl
jl
xchg
xlat
mov
jmp
lock
in
jmp
das
jp
loope
sub
hlt
cmp
xor
adc
outsl
ss
pop
lret
push
lock
or
dec
sbb
xchg
fs
sbb
or
cmpsl
nop
es
lods
xchg
jl
sbb
jp
xor
cmpsb
stos
imul
pop
or
or
jle
or
pop
loope
push
fistpl
scas
or
mov
shlb
fdivl
cltd
jp
jo
push
sti
leave
mov
movb
jp
addb
ljmp
sub
nop
dec
dec
aaa
jno
xlat
imul
or
xor
jno
scas
cmp
loop
test
add
std
inc
clc
iret
jno
sbb
xchg
mov
xlat
mov
jle
dec
stc
add
or
js
testl
or
inc
out
sbb
jbe
jge
or
stc
cmp
rcr
sbb
lahf
mov
test
pop
rol
lods
xor
fmull
js
adc
sub
bound
fldenv
cld
stc
hlt
loope
lahf
jl
test
cmp
dec
aaa
outsl
les
testb
shrb
imul
push
dec
mov
mov
daa
jge
fs
popa
push
inc
xor
sub
pop
mov
loop
sbb
movsl
xchg
xchg
pop
sub
iret
fstl
pop
jnp
lret
in
call
jecxz
cmp
pop
inc
imull
enter
dec
fwait
arpl
rolb
movsl
cmp
inc
sub
into
lcall
cmp
scas
dec
add
mov
addl
insl
fisubrs
nop
jnp
add
push
fstps
dec
out
mov
adc
inc
push
push
clc
xchg
adcb
pusha
push
xor
lock
inc
mov
push
push
shr
int3
xchg
je
and
rcrb
outsl
pusha
jns
ja
sbb
or
dec
dec
jne
mov
je
xlat
clc
push
icebp
xor
cmovp
notb
dec
pop
dec
push
repz
negb
jb
adc
and
ja
testl
std
push
mov
lea
pop
scas
test
inc
out
ja
cwtl
in
jae
pop
sub
push
sti
cmp
mov
lret
fidivl
stos
neg
xor
jne
cmp
push
iret
sub
cs
sub
add
adc
scas
pop
sbb
mov
mov
mov
or
cs
fwait
jbe
or
in
pop
js
ret
mov
lea
not
subb
xchg
lock
push
leave
sti
mov
vmulps
cli
test
mov
loope
dec
xlat
loop
dec
xor
cmpsl
dec
sbb
sub
pop
mov
adc
mov
adc
cmp
dec
mov
aaa
cmp
xor
stos
push
add
or
jg
or
xor
sbb
add
adc
cmp
push
push
lcall
fists
and
xlat
pop
push
sub
push
cmp
test
dec
test
and
cmpsl
mov
add
adc
sub
push
hlt
pop
addr16
imul
in
popa
add
test
jb
rorb
cmp
shl
push
jns
push
addr16
addr16
pop
xchg
arpl
push
mov
adc
sub
push
jge
iret
dec
dec
mov
mov
dec
jmp
aad
xchg
ja
icebp
pop
mov
in
pmaxub
xor
add
test
fs
out
cmpsl
pop
std
mov
repz
push
std
popa
pop
xchg
mov
sub
mov
pop
jecxz
lcall
lret
and
sub
lods
bound
xor
lret
lret
pop
mov
pushf
ja
fmulp
pop
test
push
and
mov
push
stc
ljmp
sub
dec
xlat
stos
pushl
push
adc
sbb
sub
mov
mov
mov
add
cs
xor
push
arpl
sbb
psubsw
enter
push
mov
daa
lret
mov
inc
dec
scas
lods
pop
ljmp
xchg
mov
lods
push
pop
into
add
repnz
or
dec
lods
test
subl
pop
ljmp
xlat
arpl
sub
movsl
push
mov
cltd
into
icebp
inc
mov
jae
mov
dec
addr16
cltd
add
pusha
mov
int3
sub
jnp
xor
pop
xchg
das
ljmp
pushf
push
out
addr16
sub
jecxz
in
mov
jmp
addr16
lahf
enter
mov
inc
lcall
fnstcw
mov
pop
pop
ja
cmp
ss
mov
mov
pop
add
aam
push
adc
inc
loope
lock
sbb
stc
and
iret
cmp
jo
data16
cld
pop
and
add
jp
mov
push
sub
mov
ja
push
daa
lcall
test
fcmove
adc
sbb
sbb
lock
mov
inc
iret
jb
cmc
push
jbe
pop
leave
into
lcall
push
or
mov
sbb
fsts
pop
push
stos
das
scas
mov
ffreep
mov
loope,pt
mov
mov
shrl
lods
xor
jns
iret
push
cmp
insb
subb
adc
xor
and
dec
mov
movsl
mov
mov
xchg
xchg
int
icebp
sbb
stos
mov
sbb
fbstp
scas
inc
push
adc
inc
sub
dec
sub
imul
xchg
lods
jmp
insb
cmp
nop
cmp
js
hlt
lgs
or
xor
mov
das
jo
shlb
inc
cld
testb
pop
or
aad
sub
sub
ja
inc
jns
or
out
xor
insl
add
aad
cs
or
testb
mov
pop
popf
mov
jo
or
mov
fimull
pop
int
mov
loop
dec
add
mov
sahf
jmp
inc
cs
pushf
bound
nop
push
loop
pop
cvtpi2ps
ja
cwtl
mov
sub
xor
and
mov
mov
outsb
mov
rclb
sbb
ret
push
push
es
xchg
rcll
or
les
in
jno
and
dec
push
fdivrs
pop
les
icebp
inc
mov
insb
je
pop
push
dec
outsl
in
lret
pop
pusha
adc
stos
mov
cmp
xchg
push
call
in
sub
mov
jmp
jp
scas
jns
dec
mov
icebp
je
std
jae
cwtl
sub
fwait
sti
sbb
jbe
pop
pop
subl
dec
pop
dec
inc
inc
lcall
ret
fadds
clc
mov
cs
push
lret
and
pop
shrl
les
rclb
shll
fs
push
sbb
xchg
outsb
jle
sbb
mov
xlat
or
mov
mov
inc
hlt
push
mov
jae
dec
pop
push
leave
sub
aam
loopne
rcr
lock
pop
and
dec
daa
dec
addl
jb,pn
adc
pop
xchg
lea
lcall
pop
push
sbb
insb
dec
sbb
in
fisubs
dec
sub
popf
repnz
cltd
mul
outsl
pop
jp
sahf
data16
dec
bound
test
icebp
cmp
add
cmpl
daa
data16
shrl
jne
inc
pop
mov
pop
mov
imul
test
in
pop
sub
push
mov
xor
mov
mov
sti
or
xor
or
mov
shrb
jns
push
cltd
fidivrl
test
mov
int3
outsb
cs
push
cs
mov
nopl
out
call
aas
and
pop
js
mov
xchg
mov
adcb
aam
out
pop
add
mov
movsb
loope
fistpll
push
js
arpl
mov
imul
fbstp
in
loop
mov
stos
mov
mov
sbb
add
jbe
jne
lahf
dec
mov
cs
push
inc
jp
gs
push
mov
jo
pop
dec
xor
scas
xor
push
pop
jo
push
roll
push
movsb
inc
cmp
scas
enter
stos
rol
mov
sub
mov
cmpsb
mov
andl
js
repz
mov
fwait
icebp
pop
fidivrs
mov
outsb
std
push
sbb
push
leave
adc
adc
pop
dec
xor
fstpt
cmp
dec
cmc
cmp
out
sbb
clc
mov
sub
pop
mov
insb
dec
int3
js
repnz
das
aas
rorb
fdiv
inc
lret
out
nop
das
cmp
push
xchg
call
mov
mov
mov
int3
cs
pop
stc
stc
or
jecxz
sbb
sub
push
inc
sub
or
stos
int3
cmp
js
aaa
sub
adc
jle
shlb
mov
shlb
sbb
insb
outsb
xor
bound
pop
scas
xchg
fdivrs
add
subb
stc
pop
jge
add
rol
xor
cmp
loopne
xor
jge
fcmovnu
adc
adc
cmp
fcompl
mov
dec
push
clc
pop
mov
and
imul
xor
test
lea
imul
test
add
sub
in
sub
cs
lahf
cwtl
add
inc
shr
sbb
and
testl
jns,pn
add
imul
mov
aam
sub
jno
sti
lahf
push
decl
mov
xor
ret
xchg
cs
std
sub
sarb
lods
cmc
sub
std
shll
jp
mov
or
pop
scas
mov
nop
mov
xchg
in
add
add
loopne
xor
cs
fs
xchg
mov
dec
cs
cwtl
daa
adc
fnstenv
test
mov
les
and
out
shl
and
xor
cmc
and
xchg
int3
icebp
icebp
mov
cli
imul
and
int
imul
movsl
movsb
pop
push
cmp
and
jbe
fdivrl
cmp
ficomps
mov
jg
lock
sbb
pop
test
pop
sbb
mov
and
fstps
cs
lea
repnz
xchg
cmp
fisubs
out
jno
or
test
ja
push
inc
mov
push
push
mov
adc
loope
adc
jo
les
pop
mov
jecxz,pn
jnp
mov
xor
iret
add
dec
dec
lcall
mov
shrl
mov
dec
push
mov
out
call
testl
push
dec
pop
xor
cli
dec
xor
ret
xchg
int
lcall
and
fsubl
pushf
dec
repnz
outsb
push
pop
sub
sbb
jmp
outsl
and
test
push
jl
dec
mov
mov
repz
jae
sub
scas
xor
xor
stos
insb
xlat
insl
push
mov
mov
jae
rorb
mov
mov
cwtl
mov
ds
add
xor
cmpl
xchg
fists
in
aam
pop
lahf
and
test
lret
notl
andb
rorb
sbbl
pop
stc
out
fs
jecxz
jnp
sti
cmpsl
cs
add
mov
dec
insl
les
jmp
and
scas
mov
sub
cld
pop
nop
push
out
sbb
sub
pop
in
push
test
stc
fidivl
mov
inc
stos
mov
xlat
push
lcall
sub
pop
ds
and
scas
or
jbe
out
loopne
sub
jg
mov
mov
or
inc
cmp
push
sub
in
or
out
mov
in
or
imul
jmp
lods
or
sbb
pop
push
pminub
fcomip
jbe
shl
mov
je
jg
mov
pop
xchg
sti
andb
mov
js
jp
ret
hlt
js
inc
lods
lods
mov
and
or
cmp
cmp
push
sub
jle
pop
mov
hlt
add
ja
and
add
inc
icebp
jno
lret
test
push
or
imul
call
sbb
js
add
sub
rcrl
push
out
ds
inc
and
adc
pop
aaa
scas
dec
dec
sbb
fnsave
inc
and
mov
das
out
lcall
lods
test
inc
loopne
jno
addr16
in
mov
jecxz
cltd
leave
scas
xlat
int
pop
mov
jecxz
cs
push
sbb
scas
testl
ljmp
sub
pop
mov
or
mov
scas
or
xchg
and
push
lock
ljmp
pop
popf
jbe
xchg
xchg
repz
or
sub
lock
jb
rclb
inc
cs
fsubrs
scas
enter
add
jne
dec
mov
push
mov
loop
mov
lods
push
subl
or
rorb
test
rcrb
and
xlat
adc
imul
fistl
stc
or
cs
ds
push
loope
mov
xchg
mov
out
jl
mov
sbb
test
mov
fcoms
sub
inc
mov
cmp
push
out
aaa
mov
out
mov
and
jb
add
mov
lret
xlat
mov
sub
pushf
mov
or
pop
clc
fnstenv
jecxz
jmp
nop
jb
ret
in
mov
dec
xchg
mulb
pop
or
repz
test
data16
pusha
les
push
icebp
das
mov
lahf
in
fimull
xchg
ljmp
pop
data16
insl
mov
mov
inc
push
rcll
sub
sbb
aam
into
mov
dec
add
fidivrl
hlt
xor
sbb
mov
inc
xor
aad
xchg
pushw
sbb
ja
cltd
andl
clc
cmpb
push
dec
mov
xor
sbb
cs
xchg
sbb
add
in
les
js
cmc
data16
or
add
std
jno
and
cs
inc
xor
fadds
mov
xor
push
pop
lahf
mov
bound
adc
aad
add
addr16
outsb
neg
jno
adc
lds
dec
std
adc
and
jnp
xchg
xor
call
adc
stos
std
ret
and
scas
jne
and
dec
test
mov
cmpb
mov
enter
ret
jge
mov
insl
mov
es
fcmovu
xchg
mov
pop
sbbl
or
pop
fldt
movsb
test
fstpl
fcompp
inc
adc
insb
sbb
int
xchg
ljmp
inc
test
push
mov
sub
pop
push
mov
xor
inc
or
pop
and
sub
ljmp
dec
or
cmp
insl
cs
dec
cmpsl
mov
pop
sbb
mov
xchg
push
inc
push
jg
imul
push
ja
sub
push
cli
push
jl
dec
xchg
mov
sub
daa
leave
int3
inc
outsb
mov
pop
rol
cmp
mov
adc
push
negb
loopne
mov
xchg
imul
pop
js
xchg
mov
cmp
mov
jge
push
cs
fistpl
ds
mov
fsub
int
cmpsl
xor
xor
je
cmp
fisubrl
inc
rorb
pop
mov
mov
pop
das
or
sbb
ss
repz
or
in
popf
mov
stos
fcoml
test
stos
push
sub
mov
mov
scas
xor
inc
xor
sbb
pop
jae
dec
fisubrs
fldcw
dec
mov
and
aam
xchg
lret
dec
lock
adc
fs
sub
andb
ja
into
mov
mov
aad
adc
sub
sbb
lret
pop
jbe
jnp
pop
shrl
jp
movsb
dec
mov
or
cmpsb
mov
pop
sub
cltd
and
sub
bound
pop
push
pop
mov
xchg
jns
mov
mov
sbb
andl
cli
push
xor
inc
cmc
pop
push
movsl
pop
cs
mov
ljmp
mov
iret
sbb
and
sbb
cmc
adc
mov
push
mov
pop
mov
dec
mov
loope
push
mov
lret
pop
pop
jle
mov
xchg
xor
adc
sahf
cltd
ds
sbb
xor
popf
push
loop
shll
adc
dec
es
xchg
outsl
jge,pn
and
js
inc
jg
add
ret
jae
cmp
sbb
test
inc
lahf
sbb
jb
lods
in
push
lock
loop
bound
dec
test
inc
insb
mov
pusha
inc
imul
je
daa
es
adc
shll
les
pop
lahf
push
mov
cmc
lcall
push
sbb
jno
cmp
adc
jb
push
mov
mov
inc
fdivrs
xor
ja
ja
xorl
xor
lock
addr16
inc
push
out
or
pop
and
xchg
pusha
mov
pop
call
sarl
popf
mov
push
sbb
inc
mov
test
cmpb
das
daa
sub
push
mov
imul
inc
mov
fisttps
daa
popf
cmp
mov
popa
xchg
out
push
test
inc
dec
repnz
outsb
movsl
mov
adcl
cmc
and
xor
xchg
out
ret
push
dec
xchg
xchg
inc
popa
jmp
inc
dec
gs
and
ret
adc
or
scas
cli
insl
or
xchg
aas
mov
cs
cmp
aas
pop
loope
ret
cmc
mov
xor
jno
pop
sbb
aas
mov
jmp
xchg
add
rcrl
mov
and
or
fcomi
push
mov
mov
out
jne
in
xlat
or
fxch
jle
add
shrb
mov
pop
lock
fisubs
dec
cmpb
xchg
jns
mov
out
outsl
sti
rorb
pop
out
rcrl
lret
push
push
adc
enter
mov
in
sbb
lea
inc
cmp
fistpll
gs
cmp
fbld
adc
push
stos
fstl
fsubr
lods
sqrtps
lahf
aas
faddl
push
pusha
fwait
pop
aaa
aaa
aam
imul
mov
scas
pop
pop
mov
mov
xor
mov
orl
mov
jno
mov
rcrb
push
jmp
adc
xor
adc
ljmp
aam
cmp
adc
jns
or
gs
pop
mov
sbb
outsl
mov
test
add
fs
dec
shrl
mov
inc
aam
adc
stc
inc
push
in
jl
inc
int3
ja
mov
pop
sbb
bound
cmp
lret
mov
dec
scas
sub
xor
adc
ljmp
decb
add
sbbl
ds
adc
in
cmpsl
hlt
mov
outsb
mov
pop
push
fs
jmp
fldl
mov
xor
inc
sbbb
inc
inc
negb
xchg
arpl
int
mov
sub
mov
and
pop
loope
ja
loopne
mov
fsubp
add
ja,pn
mov
dec
call
inc
test
subb
or
xor
loope
mov
outsl
fstl
mov
xor
dec
insb
in
xchg
or
push
push
test
pop
sbb
mov
sub
cmpsb
pop
mov
inc
sbb
mov
call
mov
jl
cmp
push
insl
pop
inc
stos
sbb
das
lret
es
push
add
cwtl
inc
fs
adc
stos
cs
mov
fwait
push
jne
xor
aad
mov
pop
push
ret
outsl
mov
mov
jbe
inc
popa
es
push
sub
arpl
inc
adc
pop
rclb
adc
idivl
push
jns
dec
dec
mov
inc
fdivs
pop
mov
dec
push
rorl
scas
xlat
xchg
add
imul
ficomps
add
fdivl
cmpw
cmc
push
cmpsl
cwtl
xor
fdivr
cmp
mov
lds
repnz
hlt
inc
pop
mov
call
jns
cs
sbb
fisttps
sbb
lea
or
pop
in
nop
sub
in
cs
adc
and
cmc
hlt
cmp
jmp
pop
jecxz
pop
sti
dec
cmp
cmp
push
dec
ss
and
fsts
ror
inc
test
dec
and
pop
push
mov
dec
fcompl
data16
fcompl
mov
sbb
pushf
divl
enter
sbb
cmpsl
scas
data16
test
inc
fisttpl
jnp
inc
adc
inc
push
in
fisubrs
outsb
lcall
mov
pop
pop
pop
sti
cltd
pusha
mov
push
push
outsb
cmc
ds
fdivl
lahf
lock
icebp
pop
cmp
jl
xchg
lcall
aam
loope
fldt
mov
mov
xchg
push
mov
imul
push
xor
scas
mov
or
js
sub
jg
pop
imul
repnz
shrb
cmp
mov
jns
and
xor
jb
jne
sbb
add
mov
fwait
or
sbb
mov
jae
test
sub
fildl
mov
mov
add
cli
nop
mov
mov
sbb
out
dec
into
test
mov
xor
mov
mov
adc
dec
mov
push
scas
mov
pop
lods
outsl
lret
sub
or
mov
mov
sahf
addb
mov
hlt
xchg
loopne
push
cli
lahf
push
xor
in
lds
pop
pop
pusha
nop
pusha
push
ds
insl
popa
mov
pushf
sub
mov
xchg
es
mov
or
ret
test
xor
dec
xor
stos
out
push
cs
pop
sbb
lods
aas
addb
push
ret
sub
pop
mov
cmp
shll
negb
jno
dec
mov
rolb
mov
pop
std
fsubl
pop
push
into
mov
aam
mov
push
mov
lret
pop
pushf
xchg
icebp
adc
mov
sbbl
loope
cmp
cs
decl
fsubs
push
pop
insl
scas
push
in
sub
push
jmp
popl
dec
gs
add
pop
mov
mov
in
out
addr16
aas
sub
xchg
push
jg
push
cmp
pop
fdivl
movsl
les
dec
xchg
push
pop
pop
stos
clc
mov
test
stos
push
stos
dec
mov
add
int3
repz
mov
add
cmc
pop
push
mov
adcb
inc
cmc
fimuls
movsb
xchg
mov
aam
das
sbb
cs
out
mov
push
lcall
sbb
jno
test
in
inc
aam
inc
pop
mov
sbb
add
lea
sub
mov
and
hlt
aad
mov
jns
or
daa
aas
cmp
push
idivb
cmp
sbb
cmp
pop
cltd
addr16
mov
jp
idivl
scas
in
std
fsts
jnp
xchg
je
cmp
or
fiaddl
dec
inc
cmp
in
orb
xchg
cmpsb
sbb
cs
shrl
lret
jl
pop
testl
pop
xor
js
and
clc
icebp
rol
sbb
fidivl
sahf
pop
lret
mov
aad
and
mov
inc
test
mov
hlt
outsb
rorl
sbb
scas
js
xchg
call
cmp
sub
and
xchg
jbe
fisttpll
pop
pop
mov
out
add
mov
loopne
insb
pop
shr
xor
mov
xchg
xchg
arpl
mov
cmc
pop
xchg
sbb
insl
test
add
mov
sub
jno
and
xchg
out
shll
adc
pop
std
mov
push
lock
xchg
cltd
inc
pop
into
xorb
xchg
xor
pop
mov
xor
xor
rcrb
rol
pop
out
adc
inc
dec
cmp
sarl
push
mov
mov
mov
mov
mov
push
mov
cmp
imul
pop
cmpsl
popf
jae
pop
loop
out
push
mov
cmp
xchg
pop
stc
jg
mov
lock
arpl
lret
pop
pop
outsb
pop
cs
faddl
aad
push
xor
cmp
out
incl
movsl
lea
xchg
test
xor
addr16
jp
loope
sub
pop
aas
mov
or
imul
cmp
dec
outsl
popf
sti
das
outsb
or
nop
pop
jnp
cwtl
and
adc
xchg
adc
cmp
out
lods
popf
outsl
in
sbb
jno
or
out
push
das
jns
adc
dec
sbb
push
jne
push
or
jle
jb
xchg
test
xchg
xor
sbb
ror
test
xchg
lahf
enter
ja
add
shlb
jne
push
and
mov
dec
add
vsqrtpd
sbb
push
push
mov
mov
dec
fldenv
pop
in
pop
mov
adc
pop
jno
roll
cli
adc
mov
pop
cmpsl
div
fists
mov
clc
adc
mov
adc
div
cmp
jb
xchg
pop
out
push
fwait
and
add
rep
cmpsl
add
mov
shll
fsubs
mov
movsl
mov
scas
cs
dec
flds
loopne
mov
add
pop
lods
pop
add
sbb
gs
pop
lahf
xchg
shrl
fmuls
sub
loopne
gs
mov
mov
imul
xchg
mov
jo
insl
cmpsl
in
cs
aam
mov
xor
inc
mov
aam
inc
dec
lcall
ret
and
movsl
inc
xchg
xor
mov
cmp
dec
sbb
outsb
lds
insb
sarb
pop
test
scas
das
and
inc
push
into
jecxz
pop
add
movb
repz
out
adc
adc
sub
fsubrl
jl
fistpl
jg
xor
sbb
shl
nop
inc
je
adc
ja
jnp
into
aad
mov
je
mov
js
pop
and
out
cmp
inc
jo
es
cmp
or
in
in
jmp
gs
push
shll
arpl
jne
adc
sub
inc
and
mov
lcall
mov
fistpll
sbb
pop
out
icebp
sub
push
data16
ds
out
clc
fbstp
sub
lods
stc
call
cmp
mulb
pop
or
js
jl
sbb
outsl
push
inc
cmp
pop
mov
pusha
pusha
pop
sub
cld
mov
jge
inc
mov
cmc
in
repz
mov
sub
scas
or
imul
div
push
push
adc
movd
cs
inc
orl
mov
test
sub
loop
mov
adc
add
pop
jne
movsl
imul
rorl
push
scas
pop
gs
and
xchg
jne
pop
cmp
and
cmp
and
push
sub
mov
or
mov
sbb
leave
or
sbb
shrb
mov
inc
cs
mov
frstor
adc
es
and
pop
fisubrs
dec
ret
ffree
inc
add
inc
jno
mov
jb
cmp
imul
fcmovb
cmp
add
int3
in
imull
or
insl
pop
stos
dec
mov
jg
andl
mov
das
cld
mov
or
push
cmpsl
cmpb
jp
xor
movsl
pusha
dec
test
adc
xchg
test
scas
xchg
dec
ret
jmp
lock
adc
inc
xor
xchg
scas
fmull
inc
adc
outsl
push
jle
push
fidivrl
and
mov
ljmp
mov
pusha
in
ucomiss
sbb
punpckhdq
jbe
or
mov
push
mov
cmpsl
pop
ljmp
xor
inc
cmp
or
pop
add
popl
sub
leave
sti
movsl
push
bnd
pop
push
hlt
lods
push
sub
mov
loopne
rorl
xchg
adc
fists
mov
or
lds
loopne
xor
icebp
in
cmp
cmpsl
sbb
push
adc
mov
call
ljmp
mov
sub
bound
mov
jb
jb
mov
push
mov
add
hlt
sub
lods
xchg
test
xchg
pop
push
mov
loop,pt
ljmp
cmp
cmpsb
inc
stos
ficomps
mov
push
and
mov
adc
mov
mov
in
out
out
out
and
mov
jbe
mov
xchg
notl
enter
fcomip
ljmp
cmp
mov
pop
arpl
roll
inc
cltd
into
mov
sbb
push
rcpps
ror
out
mov
or
fldt
je
in
mov
inc
addl
stos
lds
sbb
ret
pusha
xor
dec
dec
pusha
orl
dec
adc
lahf
mov
mov
movsb
iret
sub
mov
cld
sub
lret
and
mov
sbb
cmp
dec
ljmp
inc
or
pusha
adc
bound
mov
add
jmp
andb
imul
negl
cmp
add
das
fs
pop
imul
je
out
pop
add
ret
dec
jge
scas
xchg
xchg
popa
xchg
test
shrb
mov
dec
test
fnsave
adc
and
mov
daa
out
pop
pop
daa
sbb
sahf
cs
and
jns
jo
loopne
inc
ret
adc
lock
cmp
inc
lds
lock
ret
add
jp
or
mov
je
sub
cltd
scas
out
jge
mov
scas
mov
test
sti
inc
cmp
in
out
in
mov
mov
and
std
add
bound
adc
xchg
fisubrs
test
sub
imul
je,pn
mov
test
pop
mov
pusha
clc
fnsave
pusha
jp
sarl
adc
mov
cs
loop
xchg
cmp
mov
sbb
je
out
jae
add
or
data16
cld
dec
cs
rcrb
ret
mov
fs
fisttpll
test
mov
mov
push
scas
sahf
inc
pop
enter
adc
jno
or
mov
mov
outsl
popa
mov
mov
pop
scas
or
dec
cs
dec
cmp
pop
add
jb
insl
test
sub
insb
imul
mov
scas
push
jge
push
shl
xchg
mov
sti
mov
bound
js
xchg
push
xchg
dec
dec
sub
or
ljmp
jnp
aaa
and
xor
nop
jne
xor
mov
icebp
cmp
ds
pop
dec
dec
outsl
and
popa
iret
sub
ds
mov
xchg
dec
mov
dec
cmc
cs
mov
xor
pop
outsl
or
pusha
les
sbb
das
or
cs
sbb
inc
aas
shl
inc
adc
sbb
nop
sbb
ja
xor
test
call
scas
jns
or
mov
out
mov
jo
lcall
popa
mov
jecxz
in
std
cwtl
and
pop
popa
call
cs
pop
add
test
rcrl
mov
cmpsl
push
pusha
jo
test
ljmp
and
ja
cs
push
jo
mov
test
push
xchg
ret
cs
sub
lock
shlb
jne,pn
jne
push
dec
mov
pusha
int
mov
cs
in
dec
pcmpeqb
popa
fbld
add
xor
xor
popa
in
push
push
insb
push
clc
mov
mov
lahf
cmpsl
pushw
push
cltd
dec
cs
insl
shrb
popa
dec
adc
add
push
jmp
lods
cld
xchg
cs
or
stos
les
imul
mov
cwtl
push
enter
nop
jno
mov
daa
mov
cmc
mov
fstpl
dec
movl
push
cmp
jae
mov
repnz
sbb
enter
mov
clc
cltd
popa
jbe
adc
sbb
mov
popa
lods
into
add
mov
jp
dec
sub
push
push
mov
popa
sub
cwtl
pop
test
arpl
cmp
and
cs
push
mov
stos
jae
cli
call
popa
icebp
ret
jo
fistpll
pop
test
adc
dec
mov
or
ret
push
mov
mov
faddl
test
sbb
mov
and
lods
test
sbb
pop
cmp
les
pushf
ss
inc
jg
lcall
mov
push
popa
mov
and
aas
cmpsl
cmp
pop
dec
ret
rcrb
cmpsb
sbb
sub
call
xor
jl
mov
pop
mov
cmp
mov
test
sahf
xor
shll
addr16
aad
add
loope
popa
adc
pop
xor
imul
push
popf
xchg
les
jl
dec
scas
mov
test
mov
xor
std
mov
cmp
in
jg
popa
mov
add
cmpb
lahf
gs
pop
push
repnz
dec
sub
xchg
outsb
xor
call
mov
leave
push
and
sbb
aad
and
repnz
data16
popa
in
and
or
mov
inc
push
lahf
xchg
orl
les
mov
cltd
mov
sbb
push
insl
lods
mov
cs
ljmp
sbb
imul
bound
xchg
or
gs
mov
je
xchg
lret
add
cmc
inc
shlb
inc
lahf
or
add
mov
mov
imul
dec
repnz
sub
push
add
loop
ds
in
std
test
xchg
xor
or
mov
in
adc
stc
and
sbb
xor
sub
cld
call
popf
in
or
jecxz
mov
je
lahf
pop
xchg
or
mov
xchg
xor
add
xchg
pusha
xor
ss
test
mov
pop
sbb
xor
loopne
lahf
mov
outsl
aad
jns,pn
mov
cmc
ja
insl
push
aad
jno
sub
es
adc
mov
addb
mov
jl
jle
cwtl
cld
das
mov
mov
pop
inc
gs
dec
fisubs
and
and
dec
repz
adc
pop
and
bound
mov
lahf
dec
push
fcoml
dec
inc
and
rclb
cs
jl
aad
sbb
mov
andb
in
cs
sbb
in
insb
movsb
jno
cmp
push
shlb
dec
imul
pop
les
xchg
xor
dec
fstpl
vmaxss
lret
pop
or
fmull
xor
test
loopne
js
cmpsb
int
sub
jno
cmp
mov
addr16
mov
orb
add
leave
jg
jg,pn
mov
push
xchg
ret
xchg
outsb
popa
jl
adc
mov
testb
mov
mov
sub
in
inc
cmp
lret
out
mov
mov
push
inc
add
nop
xchg
add
or
nop
fisttps
dec
dec
sub
mov
jmp
cmpsb
sub
jb
pop
call
cmc
lcall
mov
out
fdivs
add
mov
out
loope
inc
xchg
psadbw
mov
add
popf
gs
add
loop
lods
adc
xchg
and
sbb
jnp
test
jne
add
and
int
jge
adc
pop
rclb
mov
out
loope
mov
insl
stos
fbstp
loop
andb
movsl
mov
mov
inc
stos
mov
push
mov
xchg
or
adc
push
mov
insb
push
push
mov
ror
inc
inc
mov
adc
push
xor
maskmovq
imull
imul
mov
dec
mov
mov
xor
push
lret
pop
or
cs
mov
fistpll
sti
loope
lock
add
dec
movsb
test
lea
jp
popf
jnp
jg
outsb
test
notb
out
scas
outsb
das
jno
pusha
outsl
insl
mov
stc
bound
scas
add
sbb
or
mov
iret
lret
lahf
mov
adc
dec
mov
movsl
push
lds
ficoms
loop
test
popa
int3
and
loop
or
bound
pop
aad
js
push
xchg
push
cs
mov
or
push
dec
xlat
cwtl
jbe
dec
bound
fs
test
dec
add
nop
sub
jb
gs
push
das
cs
and
push
cmc
xor
idivb
lret
cmp
xor
or
rcrb
fwait
bound
push
inc
movsl
mov
pop
jo
xor
arpl
lock
fimull
aaa
ds
in
inc
dec
jnp
mov
mov
mull
cmc
lock
test
rorb
xchg
arpl
shll
xor
or
ret
dec
mov
aad
fidivrs
cmp
popf
mov
scas
ljmp
daa
cmp
push
arpl
ss
arpl
jne
into
mov
mov
inc
jae
subb
xchg
xchg
pop
jb
mov
jns
adc
out
push
lds
lods
aas
iret
cs
shrl
arpl
incl
add
out
adc
jmp
jle
fcoml
cmp
mov
bound
insb
addb
sbb
or
pop
xor
scas
jno
ret
arpl
mov
sti
adc
xchg
mov
adc
addb
jo
cs
aad
mov
adc
dec
lcall
jecxz
loope
pop
rclb
test
movsl
popf
movsl
push
insl
add
out
mov
push
lcall
cmp
dec
cmp
sub
out
cmpsb
mov
stos
xor
jne
mov
jno
imul
lret
lea
inc
fcoms
movsb
xchg
mov
jns
dec
pushf
mov
arpl
fs
loopne
xchg
lcall
inc
shrb
cs
clc
and
mov
pop
jo
cld
dec
xchg
ljmp
pop
and
push
or
mov
repnz
dec
sbb
cs
pop
lret
mov
inc
outsl
js
fisubs
cli
negb
je
ss
inc
or
and
negl
sbb
testl
mov
shrb
rcl
mov
jns
and
push
dec
jae
jnp
loope,pn
mov
xchg
jo
add
test
inc
arpl
push
gs
xchg
add
add
xchg
sub
jp
lods
fwait
dec
sbb
jge
jle
xlat
add
mov
movsl
inc
sbb
movsb
cs
push
loope
mov
or
add
mov
mov
xchg
xchg
int3
movsl
aad
xchg
arpl
xchg
mov
and
inc
shrl
sub
xor
cmp
push
loop
das
pop
add
sub
add
shl
adc
or
adc
xchg
sub
xchg
or
pop
sbb
jnp
push
outsl
std
dec
cwtl
arpl
xchg
mov
gs
fcomps
mov
jno
addl
sbb
daa
mov
dec
lcallw
test
pushf
pop
sbb
mov
jmp
xor
ret
jmp
loopne
popa
sub
repz
xchg
daa
sub
mov
and
mov
mov
pop
int
arpl
mov
mov
into
aam
mov
push
stc
push
in
mov
cs
call
jge
rcrl
in
xchg
sub
pop
xchg
ljmp
leave
jns
jp
add
jg
inc
fnsave
cs
inc
lea
xchg
mov
jp
pop
shrb
out
icebp
mov
sbb
arpl
jo
mov
lret
addb
mov
fstpt
push
mov
jnp
leave
cmc
xor
xlat
loopne
cmp
shr
sub
arpl
stos
pop
pop
xor
inc
aaa
sbb
push
jmp
mov
xchg
jg
in
pop
shrl
or
mov
mov
in
add
outsb
dec
add
mov
mov
cs
pop
inc
lret
sbb
jno
int
dec
rol
sbb
dec
outsb
dec
pop
dec
sahf
cmp
or
mov
cmp
mov
pusha
pop
mov
xchg
xchg
std
jecxz
mov
cmp
lahf
adc
inc
dec
add
stos
fwait
daa
dec
push
shll
sub
std
adc
inc
or
push
fdiv
loopne
and
ds
or
outsb
sbb
hlt
push
pop
test
cs
shrl
jne
push
insl
jge
inc
add
pop
or
adc
shrb
mov
aam
push
jne
xchg
sbb
mov
jns
jmp
or
imul
mov
in
repnz
add
sub
rcll
and
sbb
pop
sbb
and
xchg
enter
mov
mov
jae
and
int3
cs
inc
mov
out
iret
or
lret
sub
jge
adc
fidivl
lret
icebp
popf
inc
cmpb
movhps
adc
and
jbe
out
out
pop
mov
mov
fs
lock
sub
sbb
fs
and
jnp
xchg
movsb
push
std
pop
lock
fwait
inc
xlat
mov
inc
push
xchg
ret
sarl
stos
jns
leave
xchg
mov
mov
pop
imul
cmp
rorb
mov
je
frstor
stos
into
aam
popw
mov
repnz
inc
cmp
mov
icebp
mov
mov
mov
fs
push
push
dec
or
mov
scas
or
xchg
inc
ss
cmp
xor
jmp
out
loop
jmp
mov
mov
sub
pushl
jge
mov
adc
outsl
imul
adc
jg
push
sub
ror
fiadds
inc
mov
or
loop
sub
incb
loope
daa
push
xor
lcall
cmp
cmovge
out
and
xor
loopne
jp
push
scas
and
adc
pop
dec
lcall
jnp
outsb
addr16
nop
sub
in
xor
inc
mov
mov
xchg
fisubs
sbb
sub
dec
out
xlat
inc
xor
lods
clc
inc
cs
mov
mov
cmp
adc
mov
jmp
out
mov
sub
add
repnz
or
jl
mov
icebp
in
enter
pop
in
das
jge
popf
rcll
mov
jbe,pn
lcall
push
add
lcall
and
and
aaa
mov
in
movsb
mov
sbb
xchg
imul
add
in
jno
jne
jno
sub
inc
fwait
ljmp
sbb
sahf
mov
jb
nop
mov
jbe
cs
iret
push
dec
fs
test
jo
mov
xor
fs
lods
fs
iret
pop
js
mov
mov
mov
mov
jecxz
jecxz
and
xchg
orb
sub
lds
mov
test
xorl
mov
mov
sbb
adc
or
or
fiadds
shrb
shrb
xor
stos
out
fs
xor
adc
xor
push
mov
mov
je
sbb
push
iret
aas
add
fsubl
les
mov
cmp
gs
xchg
sbb
cs
pop
lds
in
inc
popf
xchg
jp
js
addr16
faddl
xlat
out
add
fwait
cwtl
mov
shrb
push
or
lock
ss
jns
lods
test
push
fadd
cwtl
or
cs
dec
dec
xchg
aam
ret
fs
mov
jge
mov
sub
aam
mov
fs
push
pushl
shll
fisubl
loop
push
inc
test
bound
add
pop
gs
xchg
ret
pop
sub
or
insl
cmp
subl
mov
jecxz
insl
loopne
push
dec
cltd
add
push
cmc
xchg
xor
lds
add
mov
jmp
push
inc
enter
rcrl
popa
mov
push
adc
in
aas
mov
cltd
shrb
mov
sbb
mov
pop
repz
ds
push
cs
mov
sub
xchg
fistpl
aad
adc
dec
add
out
inc
push
xchg
fdiv
out
repnz
add
and
sbb
insb
bound
icebp
or
pop
add
fs
scas
repnz
pop
pop
sbb
jmp
pop
cmp
pop
aad
cmp
loop
lods
leave
dec
lret
imul
add
mov
mov
fstpt
sub
inc
adc
xchg
push
sbb
sbb
bound
sar
sarb
mov
out
lea
test
sti
dec
aad
gs
cmp
push
sbb
xor
nop
scas
add
mov
or
lods
aaa
js
notl
jne
repz
jp
lahf
pop
adc
mov
jo
cld
popa
push
jmp
jl
pop
addr16
loop
ds
xor
insl
mov
movsl
cmc
mov
xchg
adc
sub
andps
out
mov
add
ret
inc
or
cmc
movsb
in
xchg
jmp
ds
mov
jno
and
lea
outsl
ljmp
jne
shlb
push
aad
jmp
cs
mov
xor
mov
clc
jbe
pop
push
sbbb
and
gs
insl
push
les
jno
cld
fbld
cmp
xchg
mov
rcr
sub
push
push
xchg
out
lahf
rol
gs
jbe
adc
pop
pop
imul
sti
ret
fs
gs
pop
lods
push
das
in
mov
lcall
cmp
sahf
mov
js
dec
adc
xor
sub
push
adc
dec
or
aas
push
cmpsb
test
fsubrl
shrb
pop
cmpsl
fs
and
dec
aad
lahf
cmpsl
jge
gs
and
inc
xor
lock
inc
popa
sbb
ds
cmc
gs
adcb
es
test
or
nop
mov
loopne
dec
xchg
cmp
mov
fldl
xchg
cs
clc
jo
mov
sbbb
pop
mov
cli
pop
mov
imul
stc
xchg
mov
test
iret
pushf
xchg
mov
push
notl
mov
mov
ss
jne
orl
mov
mov
mov
imul
lret
in
pop
out
ds
or
sub
movsb
mov
nop
addr16
push
icebp
pop
sbb
inc
cmpsl
jle
test
push
adc
hlt
lock
es
mov
cmc
jo
push
repnz
jp
push
xchg
and
movsb
mov
int3
aas
stos
rcr
shrl
pop
shll
cs
sub
jno
push
push
cmpsl
mov
loope
mov
mov
addr16
jns
ljmp
and
rcr
push
mov
jns
mov
jo
mov
loop
adc
aaa
inc
pop
cmc
sbb
mov
dec
and
filds
gs
xchg
lods
mov
lret
cmp
pop
xchg
sbb
stc
cmpsb
xchg
cli
push
imul
lods
mov
pushf
adc
or
imul
fmull
mov
das
xor
inc
mov
je
mov
rcll
mov
adc
cs
addr16
ljmp
cs
popl
cmp
adc
cs
iret
pop
pusha
in
dec
adc
loop
and
pushaw
sbb
pop
cmc
adc
outsl
aas
push
nop
and
ja
mov
mov
mov
add
stc
nop
call
xor
or
fimuls
insl
insl
cs
ret
adc
test
mov
das
xchg
mov
scas
shr
lds
test
cmp
push
mov
cli
repnz
testl
adc
int
dec
sbb
int3
mov
mov
test
rcrb
adc
lret
or
jg
mov
pop
sub
inc
repz
jecxz
push
mov
bound
push
push
dec
cmp
lods
popa
add
xchg
xchg
lea
push
mov
int
jl
out
dec
sahf
or
xchg
mov
sbb
push
cmp
xchg
test
divb
mov
add
pop
jmp
jg
pop
jbe
data16
pop
mov
clc
sub
fs
mov
push
and
daa
cmc
push
leave
movsb
mov
push
ds
push
imul
sub
int3
repz
push
jp
aam
mov
out
mov
xor
js
out
mov
mov
pop
and
scas
dec
pop
leave
nop
imul
pop
or
sub
outsb
cs
sbb
les
call
sahf
loop
inc
outsb
mov
xchg
pop
xchg
aam
sahf
pop
arpl
call
xchg
ret
push
adc
mov
hlt
stc
ja,pn
sub
leave
adc
fwait
sbb
jno
stos
cmpsb
in
rorl
jnp
imul
vcvtsi2sdl
data16
cmp
leave
mov
les
scas
jp
scas
pushw
jne
test
push
les
lock
jnp
adc
jge
sub
pop
dec
pop
insb
andb
inc
clc
push
mov
mov
mov
stos
pop
lods
decl
jnp
mov
les
mov
decl
cmp
inc
cmpsb
js
sub
jne
jbe
push
enter
call
pop
add
sub
repz
add
movsl
aad
in
iret
mov
mov
gs
mov
jmp
movsb
sbbb
dec
jp
scas
and
or
push
push
xchg
enter
stos
mov
mov
ret
xchg
fiaddl
push
lods
and
loop
mov
rep
sti
jmp
mov
xor
aaa
mov
jl
push
mov
shrl
jp
mov
fwait
adc
outsl
xor
dec
sbb
pop
cwtl
sub
sbb
sub
mov
sub
ret
in
mov
insb
push
movsb
mov
scas
ret
repz
pop
mov
mov
ret
daa
xor
lret
mov
or
xor
ficoml
jb
jb
inc
jge
and
stc
leave
and
std
push
mov
lods
add
movsb
dec
sub
inc
add
lret
xchg
inc
out
js
inc
jmp
ljmp
ljmp
mov
dec
clc
or
ljmp
test
out
movsb
mov
cmp
je
inc
ss
push
lret
add
xchg
nop
xchg
movsb
loope
mov
sub
inc
les
adc
movsb
lods
add
mov
mov
outsb
outsb
cltd
icebp
lcall
es
mov
loope
cli
ja
jnp
mov
shl
sahf
inc
es
nop
jge
aam
mov
mov
mov
imul
sub
push
mov
jns
ja
stc
push
cmp
xchg
movsl
dec
divl
rcrl
jno
jns
jg
add
mov
jnp
push
in
dec
sub
aas
xor
inc
fs
sub
popa
adc
cmpsb
and
jo
outsl
pop
movsw
imul
mov
dec
sub
rcl
or
js
dec
jl
mov
sub
adc
cmp
inc
data16
insl
arpl
pop
jecxz
scas
sub
xor
scas
aas
xchg
push
frstor
push
lret
xor
ret
shr
dec
out
aam
or
xchg
test
shr
add
loop
fs
lods
jo
pop
imul
repz
inc
in
mov
adc
mov
sub
inc
adc
mov
sbb
xchg
adcb
and
call
movb
push
loope
jmp
addr16
mov
fmull
lea
das
outsl
fistps
and
packssdw
pop
cmp
xlat
push
cmp
std
and
xor
imul
dec
sarb
loop
dec
cmp
jg
inc
mov
or
dec
mov
popa
jge
mov
push
pop
enter
loop
pusha
mov
adc
lds
push
push
dec
dec
aaa
mov
imul
imul
outsb
or
jo
jbe
jl
xor
imulb
fwait
xor
sub
lret
xchg
lret
mov
xchg
out
xchg
cmp
sti
addr16
cld
data16
mov
pop
sti
addr16
movsb
adc
and
bound
test
in
mov
rorl
mov
fists
add
cwtl
inc
mov
cmc
loopne
es
mov
lods
adc
xor
sbb
inc
daa
push
in
sub
add
pop
scas
push
iret
cmpsl
mov
in
mov
pushw
push
call
inc
push
push
test
stos
cs
insb
loop
cmp
jo
arpl
push
stc
jns
cmp
lahf
leave
sub
pop
lea
cs
push
nop
sbb
add
add
mov
pop
orl
jae
sub
sub
jne
adcb
cs
imul
fisubrs
and
sahf
push
les
push
sahf
cmpsb
jns
rorl
dec
jno
das
or
push
mov
int3
pop
xchg
sub
jnp
insb
movsl
jnp
sub
mov
pop
test
sti
outsl
jecxz
push
test
fs
and
mov
pop
xchg
into
push
test
inc
xlat
cs
dec
fwait
add
sbb
sub
ret
cmpsl
mov
cli
cs
mov
and
mov
sahf
dec
mov
cmc
or
rorw
mov
cltd
xchg
pop
mov
jno
inc
les
pop
addr16
push
dec
ss
mov
in
scas
cmp
push
loop
sahf
outsb
mov
pushf
pop
push
push
outsb
xchg
jmp
lea
xchg
and
mov
push
push
addr16
jle
aad
lods
mov
ds
or
inc
int3
or
adc
ss
sbb
cmp
mov
cmp
pop
call
mov
and
add
test
push
push
pop
and
adc
push
nop
inc
std
or
cltd
dec
roll
pop
push
mov
outsb
mov
jecxz
out
leave
ja
xor
jnp
and
mov
dec
cli
cmc
pushf
xor
lea
mov
xchg
or
sub
xor
pop
js
shrb
sbb
pop
and
dec
ja
pushf
cs
or
jae
bound
fldcw
popa
adc
adc
dec
pushf
or
inc
mov
and
or
mov
dec
and
scas
imul
push
push
sbb
sub
adc
decl
mov
or
jne
jbe
xor
jmp
push
push
sub
xchg
add
shr
sbb
and
pop
xlat
lret
popf
pop
test
outsl
jle
lods
mov
js
stos
loop
mov
out
mov
jnp
popf
jmp
push
pop
les
mov
sbb
nop
xchg
inc
mov
rclb
mov
mov
repnz
in
inc
mov
mov
mov
sub
mov
xchg
dec
shrl
mov
inc
cld
xchg
mov
pop
shll
pop
pop
popf
sbb
adc
outsl
inc
lds
add
push
dec
push
loopne
ds
daa
imull
adc
hlt
gs
movsb
mov
dec
xor
jae
cs
xor
mov
jp
cmp
arpl
dec
xor
and
dec
cwtl
push
rcrb
ret
push
push
mull
mov
mov
adc
adc
pop
jne
xor
dec
data16
inc
and
sub
cs
pusha
out
dec
mov
sub
stos
lret
loop
push
mov
lds
xchg
mov
test
decl
cmpb
mov
xor
mov
jno
cmpsb
lock
shrb
stos
imull
jmp
push
mov
push
xchg
fcmovbe
adc
push
mov
ja,pt
pop
sub
fnstenv
lods
out
scas
in
aaa
jge
push
mov
lock
add
test
loope
icebp
and
mov
sub
sbb
and
imul
icebp
dec
or
xor
in
lcall
or
mov
divl
sub
fsubrs
popa
shll
in
fsts
or
loop
scas
outsl
daa
movsb
pop
lret
mov
sbb
mov
addl
arpl
out
mov
lea
fidivrs
add
subb
cltd
jne
push
mov
into
dec
mov
cmp
jno
sub
js
fistl
in
mov
arpl
int3
rcpps
lahf
xor
add
repnz
cmp
jecxz
cld
push
inc
cli
push
jmp
lods
imul
jbe
aas
cmpsb
and
pop
mov
push
sti
mov
outsl
test
sahf
pop
pop
mov
test
sahf
sbb
xor
gs
iret
movsb
mov
and
sub
mov
fsubs
inc
loop
jp
jnp
push
mov
ficomps
inc
fildll
or
jbe
add
push
mov
loope
pop
mov
push
lret
sub
cmp
and
add
mov
stos
jne
cmp
je
xchg
mov
cwtl
cmp
xor
add
clc
and
decb
dec
les
adc
dec
mov
adc
sub
lock
sub
sub
je
js
cmp
adc
bound
into
sbb
subb
enter
dec
push
sub
push
xchg
add
jmp
nop
push
dec
pop
in
mov
mov
rolb
fbld
push
test
pop
into
pop
iret
inc
jne
jecxz
xchg
mov
pop
lret
unpcklps
fmull
jb
xor
adc
je
incl
push
push
idiv
mov
sbb
push
in
xchg
add
sahf
cmp
xchg
push
dec
dec
rcll
sub
mov
xor
adc
aas
ljmp
in
pop
icebp
sbb
out
ja
shrb
cld
or
mov
not
ret
imul
flds
mov
es
repnz
mov
out
mov
lods
adc
rolb
test
jns
shlb
push
mov
test
xor
insl
movsl
mov
cmp
mov
pop
or
push
cmp
xchg
or
dec
xchg
dec
or
je
data16
cmpsb
or
je
pusha
xchg
sbb
inc
xchg
xchg
push
ljmp
arpl
pop
leave
test
cmp
lds
cmp
movsl
insb
cmp
inc
rcr
inc
stos
xchg
jmp
mov
mov
add
or
add
and
xchg
push
bound
inc
mov
int3
mov
popa
add
fiaddl
mov
jg
xchg
sarb
jmp
test
imul
jb
push
mov
ficoms
out
test
cli
roll
imul
in
dec
lret
lret
ss
ljmp
push
or
mov
enter
cmp
imul
ljmp
push
sub
sub
sbb
out
out
and
push
xor
insb
int3
or
inc
inc
xlat
popf
push
xchg
xor
stos
outsl
or
xor
xor
cs
js
and
xchg
dec
dec
lcall
stc
lods
int
imul
dec
inc
test
sub
insl
mov
ja
mov
js
mov
or
lahf
cmpsl
pop
push
popa
mov
lea
mov
push
mov
dec
xchg
push
aad
nop
sub
scas
mov
gs
inc
ficompl
sub
push
ljmp
imul
mov
add
pop
push
mov
mov
xchg
stos
and
icebp
shrb
test
lcall
adc
fistpl
cmp
adc
shrl
es
sub
aaa
outsb
and
inc
pop
mov
out
mov
mov
int3
pop
sub
shrb
insl
call
push
aam
shrl
mov
fs
dec
ljmp
imul
dec
out
test
adc
les
mov
lea
pop
nop
mov
sub
andb
test
or
xchg
pushf
or
dec
xchg
mov
nop
jno,pn
mov
mov
arpl
aaa
int
xchg
sub
xchg
xor
les
imul
fdivrl
insb
inc
pop
xor
lds
mov
mov
and
sarb
iret
sub
adc
insb
sti
sbb
jne
and
mov
jno
add
fldt
xor
mov
imul
add
stc
fimull
jo
push
mov
psrlw
sbb
imul
pop
ds
mov
loopne
xor
cmp
or
inc
push
cmc
js
call
inc
xor
int
mov
test
in
lret
mov
subb
jne
mov
lods
repnz
dec
xchg
inc
inc
mov
enter
mov
cltd
mov
jne
nop
cmpsl
jmp
mov
jno
sbb
mov
xorb
push
push
xchg
jle
rorl
add
mov
scas
and
dec
lret
lods
iret
repnz
cmp
sub
sub
cs
or
jnp
in
cmp
or
movsl
push
inc
lds
mov
lahf
xor
jo
mov
aad
enter
rcl
fcmovu
xor
cmp
xor
push
inc
fwait
aad
xchg
in
add
sbb
loope
lock
sbb
mov
and
mov
xlat
push
adc
mov
test
sbb
pop
lret
hlt
dec
xchg
sti
int
cs
pusha
push
aaa
lcall
lcall
mov
dec
ficoms
icebp
cs
arpl
jp
sahf
pop
xor
pop
push
aaa
gs
fwait
xchg
or
mov
push
cmp
or
test
and
push
stos
lods
adc
jge
jecxz
push
jo
xchg
xor
push
xchg
testb
push
xor
push
popf
mov
pop
adc
push
mov
scas
test
mov
xchg
je
es
dec
mov
repnz
mov
push
test
xor
xor
or
ss
cwtl
fcomps
mov
jb
push
push
mov
adc
repz
negl
xor
xor
xor
dec
int3
sahf
divl
inc
mov
ljmp
inc
mov
jno,pt
xor
inc
sbb
xor
mov
pop
out
mov
test
subl
sub
mov
jbe
push
dec
lds
mov
mov
jge
jge
int3
pop
xchg
scas
repnz
icebp
dec
sub
or
ljmp
mov
mov
cmp
out
fcmovnb
in
out
scas
stc
scas
add
test
cmp
stos
scas
mov
movsb
add
out
or
scas
rol
nop
inc
lahf
call
xor
xor
or
mov
or
or
xor
je
push
stos
cltd
insl
outsb
mov
mulb
xchg
test
loopne
push
aaa
cmp
xchg
pop
adc
push
mov
fwait
mov
sahf
mov
ficompl
sahf
mov
fisubl
mov
add
mov
xchg
push
movsl
mov
or
insl
lret
mov
test
in
sahf
ret
dec
push
mov
enter
aad
mul
hlt
push
dec
adc
leave
in
test
ret
scas
xchg
pusha
insl
rorl
je
test
sbb
stos
sbb
adc
inc
jnp
add
scas
or
mov
pushf
fsubs
movsb
test
lods
je
xor
sahf
into
es
sbb
scas
mov
push
out
mov
add
mov
adc
mov
popa
adc
push
mov
mov
inc
sarb
sub
sub
xchg
push
jbe
ja
rcrl
or
jmp
stos
les
out
popf
lods
stos
bound
cmp
movsb
testl
sbb
testb
fbld
test
adc
in
pop
gs
orl
inc
aas
mov
lea
clc
lahf
inc
sub
xchg
leave
gs
insb
sbb
mov
cmp
sbb
mov
xor
hlt
lea
clc
xchg
push
cmp
add
dec
jmp
test
xor
out
aas
and
adc
xchg
fstps
lret
mov
mov
sub
call
fldt
push
mov
xchg
ja
lds
rcll
clc
ret
xor
and
pop
imul
in
mov
stos
lock
adc
movl
or
and
jne
dec
bnd
stos
mov
push
je
dec
aam
shrl
imul
in
mov
add
pop
aas
out
dec
jnp
adc
into
push
push
clc
push
lret
mov
mov
jo
aas
std
xchg
mov
jne
adc
xor
out
out
dec
jmp
int3
inc
aas
inc
dec
out
xchg
pop
mov
imul
cwtl
stos
mov
lret
mov
lods
adc
xor
adc
mov
call
iret
mov
mov
repnz
mov
lods
lret
or
popa
push
ds
mov
cmpl
sbb
pop
fldt
cmc
jp
mov
pop
inc
xor
adc
imul
imul
aam
mov
in
out
jmp
outsl
push
mov
test
xchg
mov
add
mov
mov
push
mov
cmpsl
push
mov
outsb
jmp
jns
scas
mov
add
dec
jle
jnp
xchg
push
fcmovnb
insb
mull
aas
dec
xchg
pop
in
ds
gs
in
dec
and
adc
push
mov
cwtl
mov
les
jns
xor
addr16
in
fmull
inc
mov
mov
xor
lahf
ja
aaa
in
dec
rcrl
inc
adc
or
fldt
incl
mov
xor
aas
test
in
ret
aas
pop
mov
sbb
lret
nop
out
in
pop
in
sahf
stos
in
insl
cld
addr16
incl
bound
arpl
test
popf
movsb
jecxz
jp
notl
mov
rol
out
sbb
pop
push
jbe
int3
jl
cmpl
cmpsl
jb
mov
call
iret
adc
push
cmp
dec
jp
aaa
sbb
pop
mov
mov
int
jp
adc
je
ljmp
mov
xchg
test
xor
fmul
es
and
mov
mov
movsl
sbb
push
addr16
pop
cmp
cmp
adc
jne
insl
push
mov
outsl
lods
pop
cmc
lret
fists
jne
into
mov
pushf
mov
cmp
ja
push
xchg
dec
enter
jecxz
mov
ljmp
rcr
inc
mov
cmp
lret
xchg
je
jno
mov
add
mov
mov
insb
fstpl
adc
cmp
lret
cmpsl
jns
sub
sbb
jo
stos
ljmp
or
xchg
xor
push
stos
scas
fadd
mov
inc
popf
push
xor
sahf
mov
repnz
dec
adc
dec
jne
iret
jbe
fimull
ficomps
fnsetpm(287
popa
aam
aam
dec
pusha
stos
in
lods
pop
pushf
adc
rcr
daa
ljmp
and
fbld
imul
ja
stos
scas
mov
in
mov
iret
sub
pop
add
scas
outsl
fs
xchg
sub
outsl
mov
sub
outsl
fucom
int
iret
sub
push
cmpsb
nop
movsb
push
mov
sbb
repnz
xor
movsl
jne
push
adc
repnz
dec
xlat
mov
sub
xor
cld
bnd
xor
add
jno
ss
aas
pusha
adc
mov
and
mov
es
stos
lods
addl
in
enter
xlat
imul
or
sub
sti
je
xchg
stos
lods
sub
test
adc
push
adc
int3
das
inc
nop
xchg
and
mov
test
rolb
dec
call
shrl
inc
clc
repnz
fs
in
push
inc
imul
movsb
adc
aaa
cmpsb
icebp
mov
lcall
orl
or
cmp
xor
pcmpeqw
das
jecxz
push
jbe
out
mov
insl
jecxz
cmp
mov
stos
mov
mov
pop
dec
mov
push
pop
lods
push
or
out
mov
pop
jecxz
lock
pop
mov
sahf
jecxz
arpl
outsb
mov
shl
cmc
and
push
call
jecxz
mov
insl
call
bnd
aad
adc
dec
movsb
mov
xorb
adc
movsl
fisubl
js
scas
adc
mov
add
or
inc
push
mov
sbb
adc
or
sub
imul
mov
dec
lods
ficoml
sbb
lret
add
xor
xchg
jb
mov
sub
rclb
xchg
das
int3
aad
mov
sub
test
xlat
jno
shlb
loopne
adc
mov
xor
je
cmpsb
imul
inc
es
fs
gs
movsb
andl
scas
mov
dec
or
dec
cmc
push
mov
cmpsb
or
adc
fsubl
or
je
mov
orb
dec
pop
push
mov
aam
lock
adc
push
mov
hlt
gs
jecxz
sbb
mov
xchg
inc
adc
xchg
push
mov
in
jge
adc
push
and
mov
jle
or
loopne
mov
fimull
mov
inc
incl
add
aam
movsb
aad
movsl
pop
add
int3
push
notb
repnz
add
sbb
or
imul
mov
dec
dec
rcll
mov
pop
cmp
aam
orl
icebp
add
hlt
fdivs
mov
inc
lock
je
mov
cmp
jg
js
sub
test
cmp
sbb
cld
dec
fimull
push
xchg
mov
add
add
insl
pop
inc
sub
sahf
xlat
cmpl
cmpsl
lods
dec
mov
fldcw
sti
mov
cltd
stos
mov
out
mov
test
out
mov
sub
dec
fldt
xlat
fs
popf
push
lcall
xchg
imul
pop
repnz
add
movsb
cmp
jno
pop
pop
mov
aas
clc
mov
ret
filds
aad
pop
cmpsl
scas
and
mov
mov
and
push
ljmp
dec
aad
push
mov
add
push
xchg
mov
out
inc
decb
mov
cmp
loope
xor
push
and
les
insl
xchg
dec
sub
sahf
ss
in
mov
cmp
lcall
imul
outsb
pusha
lock
push
sub
lret
cmp
jns
fstl
xchg
push
call
leave
adc
cltd
mov
ljmp
imul
sahf
stos
test
popf
bound
fcomp
pop
pop
adc
fsub
jmp
lods
push
adc
shll
outsb
mov
movsb
jp
mov
jge
addr16
clc
insl
adc
adc
int3
sub
dec
sub
adc
and
mov
das
lcall
fstps
idivb
sti
mov
jb
mov
sbb
mov
in
xorb
addb
pushf
stos
test
jl
rclb
mov
sarl
imul
mov
xor
loopne
fiadds
insl
outsl
test
rcrl
jo
adc
outsl
gs
or
mov
inc
add
dec
addr16
loopne
fmuls
imul
shrl
adc
adc
dec
pop
repnz
pop
or
lret
repnz
adc
push
subb
jae
sbbb
xor
jae
push
jb
add
ds
mulb
push
push
push
xchg
add
xchg
test
pop
bound
xchg
inc
in
testl
aaa
mov
cmp
jmp
mov
add
dec
jne
inc
xor
sahf
inc
mov
out
inc
push
das
and
xorb
inc
ficomps
enter
mov
xchg
add
arpl
push
dec
xchg
inc
fwait
js
imul
imul
mov
movsb
gs
mov
int3
adc
add
dec
rorb
jae
jecxz
loopne
adc
xchg
push
ret
mov
cmp
orl
divl
fisttpl
inc
mov
loop
sub
repnz
inc
jecxz
pop
gs
pop
adc
pop
loop
sbb
enter
mov
cld
jae
pop
pop
sti
sbb
in
adc
loop
sub
xchg
pop
push
je
cmpsb
mov
pop
cltd
push
ja
test
lea
stos
fld
jp
or
cmp
insl
leave
inc
sub
sahf
xchg
inc
mov
bound
iret
sub
xchg
mov
in
push
iret
sub
mov
lcall
mov
sub
cltd
mov
xchg
dec
xor
pop
add
jae
sub
and
push
push
pop
pop
pushf
pop
inc
gs
movsb
fsubl
mov
movsl
xor
sub
dec
repnz
not
in
rolb
push
aas
mov
mov
jae
stos
dec
in
push
sahf
inc
jae
xor
stos
repz
imul
mov
int
and
sub
imul
sub
mov
sti
mov
fistpl
and
imul
jg
movsl
jecxz
adc
push
mov
aas
cmp
ret
cmc
dec
push
jge
cmp
cli
mov
inc
or
movsb
movb
fidivl
sbb
add
outsb
fstl
lods
les
cmpsb
inc
aas
add
adc
sub
in
pop
sbb
add
pop
fwait
shll
mov
inc
aas
xchg
push
sti
ret
fiaddl
adc
fs
sub
movsb
xchg
mov
pop
out
fsubrp
cwtl
data16
movsb
xor
lds
ret
jecxz
cmpsb
cmp
movsb
enter
cmp
test
out
lea
pop
or
leave
dec
jae
mov
out
stos
stc
repnz
pop
mov
adc
imul
into
es
cli
inc
fcomp
out
or
jno
mov
adc
imul
lret
int
inc
test
jl
inc
andl
xchg
dec
inc
aas
daa
sbb
es
sub
aaa
loopne
imul
push
xor
bswap
adc
add
repnz
xor
int3
jns
jae
sub
data16
inc
aas
leave
shrl
add
pop
in
push
mov
fcmovb
jno
lea
mov
xchg
aaa
lock
dec
add
sahf
mov
jecxz
xchg
daa
inc
mov
adc
pop
fdiv
or
wbinvd
push
sub
outsb
je
mov
or
js
imul
cmpsl
dec
lock
adc
arpl
mov
mov
lahf
xchg
xor
pop
xchg
adc
fisubs
lock
addr16
mov
xchg
imul
sub
lahf
cld
jg
lahf
jne
pop
addr16
sbb
pop
sbb
xor
xchg
pop
jg
pop
in
dec
movsl
insb
or
push
insb
enter
sub
insb
add
rorl
ljmp
mov
dec
stc
fisubrl
mov
jo
pop
movb
push
cmp
and
sbbb
subb
sahf
stos
inc
dec
mov
inc
data16
roll
pop
push
sub
out
jo
adc
cs
popf
in
mov
subl
inc
sub
push
or
mov
mov
mov
ret
or
lds
in
pushf
and
or
pop
dec
and
rorb
mulb
lock
lock
and
mov
mov
mov
pop
adc
pop
shrb
push
mov
mov
jp
fnstsw
push
mov
stos
lret
notl
pop
arpl
std
push
mov
dec
pop
aaa
adc
dec
or
jb
adc
js
inc
push
mov
lea
adc
inc
inc
or
lret
hlt
adc
push
out
lret
js
cmpsl
xor
outsl
pop
in
push
mov
and
je
jb
cmp
add
mov
jno
mov
adc
mov
inc
sbb
push
mov
jo
xor
data16
jge
fwait
lcall
int3
das
cld
cmc
jge
out
fisubs
aad
sbbb
mov
adc
in
lcall
mov
mov
ficoml
mov
add
dec
dec
mov
xor
push
mov
sahf
pop
mov
gs
aas
int3
jb
ret
and
dec
xor
cmc
mov
xlat
mov
repnz
cwtl
or
jmp
cmpsb
std
mov
adc
push
stos
jl
or
add
xchg
jmp
mov
aas
in
add
dec
stos
xchg
mov
and
adc
stos
push
sbb
pop
fildll
jmp
cmpsb
mov
insb
cmpsb
and
sub
scas
out
into
pop
addr16
scas
jne
stc
adc
push
xor
sbbl
cmp
xchg
jmp
cld
ds
dec
mov
xor
aad
ljmp
fiadds
mov
iret
ret
mov
sbb
shrb
aaa
inc
loope
mov
fmull
adc
push
mov
leave
xor
adc
arpl
push
mov
pop
lret
int3
jbe
mov
adc
insb
add
mov
sub
jecxz
push
and
lds
insl
loopne
sub
movsl
mov
lds
jl
cmc
into
es
pop
fmul
dec
lret
mov
and
cli
or
lahf
sub
arpl
cli
sbb
repz
imul
mov
imul
out
es
xchg
adc
movsl
outsl
push
jmp
push
adc
loop
test
push
add
fistps
jbe
sbb
mov
or
mov
add
shll
mov
jo
xor
cmp
outsb
push
stc
fimull
lds
lds
cmp
adc
mov
aas
xor
dec
repnz
fstpl
inc
add
loopne
pop
adc
imul
pop
pop
xchg
jo
dec
xor
wrmsr
in
dec
cwtl
xchg
jno
adc
jle
fmulp
xchg
aas
jne
pop
test
sub
xchg
aas
rorl
iret
movb
sbb
or
loopne
mov
cli
stos
icebp
xchg
push
add
or
cmpsb
repnz
mov
push
rol
mov
sub
dec
sarb
and
sbbl
out
jo
mov
xor
cmc
pop
lock
int3
mov
jne
cmc
mov
outsb
or
outsb
and
mov
cmc
sti
mov
jl
jo
loopne
push
cmp
stos
in
int3
ficoms
mov
jae
dec
cmpl
pop
add
jne
mulb
mov
insl
push
out
push
mov
test
jo
cmp
add
pop
push
pop
aaa
mov
mov
jbe
outsb
testl
pop
xchg
js
push
lods
mov
enter
sub
imul
mov
pop
xchg
outsb
outsb
stc
mov
pop
pop
les
inc
mov
lock
xor
jmp
notl
mov
aas
xchg
or
dec
dec
fmul
mov
lods
lea
rclb
jmp
fwait
das
mov
xchg
cltd
pop
mov
and
movsb
fisubl
pop
jb
mov
cmp
sbb
jl
mov
push
movsb
fnstsw
nop
inc
negb
mov
dec
ja
cld
push
jo
ja
insl
fisttpl
push
or
rorl
es
ret
or
aam
add
in
mov
movsl
sbb
dec
loopne
mov
test
jb
push
mov
push
and
adc
push
mov
push
and
and
mov
ficompl
or
add
jge
leave
ja
mov
mov
push
add
stos
imul
loopne
pop
and
stos
in
ljmp
fldln2
addr16
adc
fwait
push
out
repnz
cs
xor
or
push
popa
adc
js
mov
aas
hlt
mov
mov
sub
sub
mov
add
int
stos
dec
fwait
sub
daa
je
jmp
jno
add
sub
mov
jb
xor
push
gs
jmp
mov
divb
cli
ret
in
push
ljmp
loopne
cmp
mov
adc
push
push
mov
subb
add
mov
mov
jl
scas
dec
adc
pop
fsubrp
mov
xchg
cmp
scas
push
ja,pn
fucom
mov
and
iret
sub
fdivs
test
mov
xchg
pop
insl
pop
sub
xchg
sahf
mov
add
lods
cmp
aad
into
es
cli
fadd
jle
nop
aas
aaa
xchg
in
sub
stos
mov
mov
jae
popaw
std
inc
es
insl
fsubrl
fisttps
inc
es
addr16
pusha
mov
xor
and
sarl
push
ret
mov
cmp
fcomip
pusha
popf
loopne
outsl
nop
imull
adc
ret
aad
imul
cltd
movsb
rcr
cmp
int
push
pusha
stos
jnp
jg
xchg
mov
scas
pop
into
insl
loopne
sti
jle
sub
lods
lret
insl
into
iret
movsb
mov
gs
les
aad
decb
push
hlt
sarl
out
jg
fldcw
mov
and
dec
lock
xchg
xor
clc
mov
mov
adc
pop
aaa
movsb
sahf
roll
aam
mov
into
pop
pusha
iret
xor
sub
pop
jecxz
std
out
adc
mov
sub
jno
loope
stos
scas
dec
je
fimuls
icebp
jb
mov
sbb
push
or
mov
cmpsb
dec
sub
xchg
imul
test
sbb
daa
fwait
decl
mov
dec
mov
insl
push
cli
adc
dec
mov
adc
adc
iret
inc
jmp
dec
mov
out
inc
jp
cmp
movsb
lods
add
pop
pop
add
movsb
out
ds
mov
les
pop
je
lahf
cwtl
add
adc
and
inc
rcr
movsb
xor
cmp
adc
rolb
ja
inc
mov
stos
ret
push
xor
mov
jmp
stos
scas
dec
adc
dec
sbb
xchg
and
add
push
xor
scas
lods
movsb
push
mov
pop
xor
jmp
or
add
dec
cmp
lock
xchg
sub
push
and
subb
cs
incl
pop
sbb
mov
add
and
pop
pop
mov
mov
fcompl
pushf
push
or
and
xchg
stc
add
sbb
rolb
mov
rcrb
lret
lds
outsl
and
sti
pop
dec
jnp
inc
test
cmp
jl
mov
xchg
adc
fs
mov
ficoms
add
scas
mov
inc
lds
gs
mov
sub
data16
je
fisubs
jo
cmc
bound
sahf
mov
mov
cmc
cmp
aas
pop
mov
or
mulb
xchg
xor
dec
mov
stc
dec
fists
test
add
dec
mov
mov
adc
dec
test
add
addr16
test
fiaddl
test
ficompl
test
ficompl
test
ficoml
test
aam
ficompl
inc
nop
fsubs
xor
rcrb
cmp
lock
daa
adc
in
in
jnp
cmp
adc
out
xor
push
mov
cmp
and
popa
test
pop
pop
pop
push
imul
jnp
jae
xchg
mov
push
jle
mov
pop
push
pop
cmpsb
popa
mov
or
sbb
data16
push
fxch
mov
popa
lahf
push
outsb
dec
fnsave
cli
int3
jg
pop
push
xchg
repnz
push
fs
pusha
pop
cmpsb
dec
mov
cmp
mov
shll
pop
jb
cli
js
and
fcmovb
push
imul
int
repnz
cmp
mov
xchg
lds
mulb
cmp
lahf
xor
pop
xor
idivb
outsb
mov
outsl
mov
sub
loope
mov
mov
cmp
sub
imul
sub
mov
dec
fwait
enter
addr16
ja
inc
repnz
outsl
mov
adc
mov
sahf
cmp
cs
xchg
test
test
xchg
lods
push
add
mov
or
test
xor
inc
shlb
outsb
jae
inc
cmc
outsb
cmp
mulb
or
dec
push
push
icebp
inc
jnp
jae
mov
aas
jbe
sbb
mov
in
cmp
dec
dec
xor
and
jmp
out
xor
sbb
jecxz
lahf
adc
jg
push
xor
xor
and
or
jae
repz
mov
sub
jge
lret
pusha
subl
sub
jle
mov
aas
jle
jge
clc
push
sub
lret
imul
fnstcw
loop
mulb
popa
repnz
adc
fsubrs
xchg
enter
cwtl
and
cmp
ficomps
push
mov
aad
out
cli
shrb
cs
or
push
and
call
mov
mov
mov
inc
fdiv
int3
mov
fwait
ret
imul
sub
scas
pop
mov
lock
xor
mov
jae,pn
sub
aas
mov
jns
inc
xchg
adc
loopne
sarl
sti
ficoms
addb
idivl
popf
fisttpll
scas
or
and
jns
clc
nop
stos
scas
mov
lock
adc
scas
mov
mov
lock
scas
ds
je
push
lock
sbb
rorl
adc
testb
xchg
insb
insb
imul
loopne
jecxz
outsl
int
mov
xorl
jae
cmpsl
mov
mov
fcoms
mov
jo
cmp
adc
mov
test
testb
cmp
add
xor
cmc
dec
xor
mov
out
xchg
mov
cli
inc
fs
mov
movsb
mov
adc
adc
shlb
cmp
repnz
mov
sub
adc
xchg
iret
out
push
cs
push
shlb
cld
adc
lods
xchg
ret
pusha
bound
rcrl
aam
idiv
stos
in
lods
mov
popf
repnz
xchg
mov
ja
sbb
add
les
aad
je
stos
mov
mov
cmc
mov
shrb
lret
shll
jno
cld
sub
xor
and
dec
outsb
out
dec
mov
mov
mov
testb
and
adc
loopne
das
mov
xchg
and
imul
aam
out
adc
adc
into
push
fidivrl
mov
pop
clc
mov
scas
push
dec
mov
adc
adc
daa
in
out
lods
adc
rorl
sub
add
xchg
push
in
inc
sub
out
mov
mov
add
xchg
and
rcrb
je
sub
mov
pusha
loopne
dec
mov
aaa
dec
jmp
ss
dec
mov
mov
pop
or
addb
fcmovu
lea
cli
subl
fadds
inc
aas
fcomp
sbb
or
mov
movsl
je
fnstenv
xor
inc
cmp
es
or
fadd
ret
sub
push
test
fcmovb
fldcw
xchg
test
je
into
decb
xchg
add
lock
mov
xchg
arpl
data16
fs
shlb
xchg
loop
mov
paddd
ja
jmp
int
xchg
pop
les
idivb
xchg
push
xor
cmc
sbb
mov
aas
mov
rol
fs
jg
cmp
lods
std
lahf
add
movsb
je
test
cmp
sbb
inc
add
cmc
orb
or
es
enter
jns
fcompl
cmc
pop
add
mov
jbe
and
add
mov
insb
push
xlat
xchg
push
pop
push
repz
add
cltd
jns
scas
test
and
lahf
push
js
movsb
loop
ljmp
in
cmp
push
aad
push
loopne
movsb
sub
push
mov
fildl
jecxz
xchg
shlb
stos
fcomps
in
cmp
repz
xor
dec
inc
imull
inc
jne
add
call
fisubrs
inc
rorb
and
mov
gs
push
aaa
mov
stos
lds
and
jns
mov
imul
mov
add
repnz
adc
hlt
jo
ja
pop
lahf
mov
sub
out
push
aas
or
push
das
cli
or
aas
js
inc
or
cltd
mov
adc
lcall
push
test
mov
push
add
jns
iret
pusha
adc
push
mov
stc
and
cmp
mov
in
or
adc
push
push
addb
lahf
test
mov
cmp
mov
push
dec
in
dec
add
ret
mov
rol
adc
pop
out
xchg
incb
mov
inc
std
lahf
lahf
pop
mov
cmp
out
cmpl
insb
jnp
mov
cs
mov
inc
mov
insl
in
dec
xor
pop
out
es
fmuls
jg
xchg
xchg
les
mov
dec
pop
xchg
test
movsb
sbb
es
arpl
pop
cs
mov
mov
lock
fcmovnbe
fidivs
imul
mov
shll
aaa
mov
ror
adc
pushf
mov
fcmovb
mov
or
fs
ja
icebp
or
push
or
lahf
movsb
rorb
xchg
sbb
in
std
aam
dec
lock
jmp
sti
jbe
mov
sbb
pop
cmp
inc
xchg
inc
cli
jl
fwait
movsb
push
in
pop
xor
mov
adc
dec
leave
jbe
push
xchg
in
jns
sub
or
fnsave
inc
mov
mov
xor
xor
es
fcoms
xchg
ficoml
mov
ficoml
xchg
fisubrl
xchg
fidivl
xchg
out
stos
cmp
fisubl
cmp
out
xor
mov
ljmp
inc
push
aas
jbe
sahf
lock
sbb
lods
mov
jp
bound
push
stos
cmc
sub
aas
and
push
pop
movsb
imul
repnz
dec
inc
sahf
push
outsl
movsb
fs
adc
sahf
lret
stos
xor
xchg
js
lods
cmp
mov
push
lret
pop
mov
ja
imul
xchg
cmp
xchg
cmp
push
in
filds
je
insb
push
stos
and
fidivs
cmp
or
imul
aam
jmp
test
fsubr
int3
mov
hlt
mov
mov
mov
inc
jno
inc
xchg
mov
lcall
xor
outsl
add
xor
dec
cld
add
negb
aas
jecxz
mov
adc
pop
push
pusha
aaa
cwtl
dec
or
pop
push
lcall
pushf
data16
adc
aad
inc
dec
mov
dec
cmc
cmp
repnz
int
ror
es
mov
in
dec
hlt
sbb
xchg
lds
add
dec
mov
mov
stc
or
lahf
mov
push
cmp
cmp
cmp
std
lds
leave
mov
pusha
adc
inc
or
rcll
inc
add
or
nop
push
test
cld
cmc
mov
fs
mov
loope
xchg
pop
jb
outsb
add
add
dec
roll
inc
push
sub
fcomps
cld
cmc
lret
pop
mov
cmc
jne
xchg
sbb
xchg
cld
cmc
loope
xor
mov
push
cld
cmc
notb
cltd
mov
ds
push
es
xor
pop
and
adc
std
xchg
jno
stos
out
pusha
test
add
and
sub
enter
sbb
loope
or
sub
into
stos
mov
adc
jo
jne
js
lret
stos
insl
mov
dec
push
clc
and
mov
movsb
mov
push
pop
sbb
notb
repnz
adc
mov
imul
fucomip
ret
xlat
adc
pop
ret
mov
cmp
cmpsb
and
sub
ja
dec
jmp
add
lods
iret
sub
jnp
cmpsl
test
jo
xor
mov
aas
in
jmp
dec
pop
insl
ja
jo
mov
push
and
lods
dec
test
mov
mov
mov
mov
pop
adc
inc
into
stos
dec
mov
call
jnp
xchg
in
xchg
fidivl
dec
mov
sbb
or
and
xor
sahf
ss
sahf
mov
jno
jg
mov
xchg
sbbl
fidivrl
sub
in
pop
cmp
xchg
out
jge
jo
mov
cmp
iret
cmp
je
xchg
pop
sahf
cwtl
imul
pop
repnz
xor
int
push
adc
js
or
jmp
sahf
pop
sub
imul
es
lret
stos
in
add
lds
add
cli
push
dec
xchg
fiaddl
xchg
mov
sar
leave
adcb
mov
xchg
xchg
mov
inc
in
cmp
jg
aas
jg
leave
ret
xchg
adc
fstl
cmp
xor
mov
add
imul
je
imul
stos
scas
fcoms
mov
cmc
stos
lods
jne
shll
incl
pop
enter
notb
repnz
sbb
and
js
fisubrl
psubsw
mov
stos
push
mov
imul
cld
aam
addb
in
ljmp
out
xchg
fxch
xchg
xor
mov
lock
pushf
cli
xchg
xor
pushf
dec
mov
rcll
lock
data16
push
les
and
pop
lds
mov
push
roll
lahf
cmp
pusha
ret
movsl
lahf
ja
xchg
xor
xchg
sahf
cmp
mov
scas
aam
ror
mov
and
aaa
cmc
xor
xchg
adc
push
subl
mov
lret
adc
dec
loope
adc
mov
mov
push
rcl
adc
cmpsb
and
fdivl
pop
and
mov
mov
jbe
inc
pop
xchg
les
sbb
arpl
test
idiv
test
sub
mov
mov
mov
repnz
negl
popa
adc
es
sub
aas
dec
push
add
and
inc
imul
ja
sub
repnz
mov
mov
dec
sub
xorl
push
ror
sub
data16
xchg
lods
adc
fucomp
int3
imulb
repnz
lock
rorl
mov
aas
pushf
jg
ret
insl
fimuls
jg
in
sti
aam
xchg
in
stos
in
aas
push
daa
adc
dec
mov
in
adc
pop
test
dec
mov
sub
xor
adc
fwait
dec
jae
mov
les
mov
pusha
cmp
das
movl
roll
sti
aam
out
stos
in
jecxz
data16
int
addb
fiadds
dec
dec
inc
outsl
into
pop
jbe
and
aas
cltd
bound
shl
mov
test
pop
aaa
xor
sub
pop
leave
push
push
jae
adc
inc
aas
fsts
ret
push
shl
adc
jg
mov
sbb
in
mov
or
mov
jnp
dec
push
xchg
xor
sub
dec
mov
xchg
pop
jbe
cwtl
jmp
adc
leave
jl
sub
inc
es
mov
gs
inc
es
jl
add
stos
inc
aas
mov
pushf
mov
push
mov
out
dec
xor
or
push
sub
mov
mov
je
mov
hlt
data16
or
popl
or
cmp
lea
popa
loop
mov
outsb
adc
aaa
ror
cmp
iret
add
xor
mov
inc
sub
push
push
dec
inc
es
push
push
xor
mov
lahf
adc
sbb
inc
es
iret
jecxz
pushf
jl
mov
shrb
and
andl
or
mov
aad
dec
xor
sub
pop
xchg
cltd
mov
sbb
les
sbb
inc
jge
jmp
cmp
adc
xchg
ficomps
add
push
movsb
cld
test
fwait
aam
push
mov
jecxz
xor
js
pop
cwtl
push
xor
mov
pushf
aad
mov
mov
imul
or
jb
repz
test
ljmp
pop
subl
bnd
movsb
xlat
mov
jp
mov
mov
pop
fs
dec
bnd
mov
adc
xor
fimull
repnz
aas
stos
cmp
adc
mov
sub
in
adc
jne
gs
pushf
push
push
loope
scas
xor
jecxz
mov
xor
pop
mov
sub
dec
mov
jg
das
push
stos
cmpsb
and
push
out
push
mov
jecxz
mov
mov
fsubl
dec
fs
push
mov
sbb
mov
fidivrl
add
mov
das
inc
das
push
mov
push
test
aaa
and
mov
lahf
lret
xor
cmp
aaa
testl
pop
xchg
sti
push
in
iret
sub
movl
sub
lahf
pop
mov
push
pusha
int3
insl
iret
adc
push
cli
mov
repnz
jo
cmc
dec
xchg
in
adc
push
jae
and
pop
push
in
aam
mov
shlb
jnp
jl
enter
mov
jl
pop
mov
es
cld
jbe
jl
jl
dec
inc
es
pop
ss
jl
sub
push
mov
xor
popa
jns
sti
cmc
shlb
aaa
loopne
dec
mov
jns
in
adc
out
jo
aam
mov
lods
ret
in
jmp
push
pop
dec
mov
add
clc
inc
cmpb
cld
push
in
push
addb
pop
dec
dec
iret
cmpb
repnz
pop
repnz
mov
sbb
jno
cmpb
or
push
out
jbe
mov
fimull
mov
mov
fimull
ret
rorb
mov
ficompl
icebp
rcrl
and
add
add
insl
call
ja
pusha
push
inc
mov
mov
in
leave
cmpsb
orl
sub
push
ret
inc
xor
jecxz
les
cmc
add
in
sbb
aam
mov
adc
cmpl
daa
xchg
cmpl
in
leave
test
adc
sbb
pusha
adc
fisttpl
lgs
sbb
fwait
push
jno
jle
loopne
sub
push
pop
dec
jge
andl
ljmp
adc
imul
sub
lahf
roll
jecxz
mov
outsb
add
test
sarl
pop
arpl
inc
inc
fdivs
ret
prefetch
gs
push
mov
xchg
les
imul
add
scas
adc
sbb
mov
scas
adc
pop
add
incb
movsl
ret
aad
sub
jne
adc
push
cmp
mov
jge
xor
cmp
aam
cmp
incl
cmp
xor
cmp
jbe
shll
adc
mov
xchg
adc
es
xchg
jge
xchg
mov
inc
fldt
cld
xchg
inc
fiaddl
test
icebp
addr16
jmp
into
inc
aas
push
dec
ret
stc
fwait
mov
into
imul
cli
fisubrl
dec
into
sub
inc
mov
pop
add
sub
mov
sbb
or
testb
imul
jno
pop
ss
iret
es
inc
rcr
outsl
shl
xchg
out
xchg
imul
add
dec
push
add
xor
ljmp
lds
mov
pop
add
bnd
popa
nop
inc
lret
inc
adc
icebp
mov
xchg
jg
xor
sti
jecxz
xor
bound
cmpsb
scas
icebp
inc
and
push
mov
aaa
insl
cmpsl
outsb
xor
sahf
jo
pushf
mov
xchg
xor
mov
pop
fcomp
loop
insl
jno
xchg
mov
fcomps
cmp
add
xor
movsl
inc
pushf
jge
insb
push
or
test
sarb
cmp
push
dec
mov
addr16
jp
test
dec
mov
inc
jns
adc
mov
ss
adc
andl
adc
push
call
sub
jnp
adc
in
xchg
add
inc
or
mov
push
push
lretw
push
fiaddl
les
mov
adc
mov
and
cli
aam
push
stos
in
fs
out
mov
js
jno
movsb
mov
mov
out
js
cmc
sub
out
xor
repnz
cmc
cli
aam
test
in
cmp
adc
inc
scas
add
adc
ret
ja
mov
pop
push
cwtl
xor
xor
loop
fdivs
pop
or
imul
xchg
xor
push
xchg
push
out
adc
in
fs
cli
aam
sti
dec
stos
in
cmp
rcll
bound
in
outsl
pop
andl
mov
inc
push
sbb
repnz
shll
loope
bound
mov
jbe
cli
repnz
mov
adc
mov
lock
pcmpgtb
cltd
xor
aas
xor
mov
loope
xor
lods
dec
xor
xchg
into
pop
jge
cmp
mov
mov
sub
into
sbb
je
in
std
mov
jg
xchg
test
mov
ds
mov
lcall
mov
add
inc
sbb
inc
out
outsl
stos
sar
inc
fstpt
test
jle
loopne
mov
hlt
in
jle
lock
jl
imul
xchg
rcrl
aad
inc
jmp
aas
fidivs
cmp
leave
jl
sarl
cmc
jnp
or
inc
push
movsl
add
xchg
gs
jl
xchg
inc
sti
negb
or
push
push
dec
test
lret
cmp
mov
gs
addr16
add
loope
cld
ret
repnz
loope
pushf
adc
fcmovbe
jl
mov
fidivrl
rcrl
lock
xor
xor
cmpb
xor
add
sbb
pushf
pop
pop
xchg
popa
or
fdivr
mov
cmpsb
scas
inc
les
push
mov
pop
stos
in
cmp
cmp
daa
lds
in
sub
adc
addr16
pop
inc
es
inc
cmpsl
movsb
jle
dec
test
inc
es
sti
out
jle
mov
sahf
inc
es
daa
mov
pop
inc
rclb
mov
xor
mov
add
iret
mov
fidivrs
outsl
imul
xor
pushf
ret
imul
aam
call
in
adc
aad
lcall
scas
xchg
sbb
leave
lret
push
scas
ljmp
cld
inc
repnz
push
and
or
sub
jae
or
pop
push
icebp
iret
sub
fidivs
mov
mov
push
push
lret
xchg
mov
sahf
into
notl
mov
loop
mov
aas
adc
clc
xchg
jb
mov
aam
inc
pop
stos
in
sbb
movsb
push
push
clc
jle
lahf
scas
andb
loopne
imulb
mov
push
call
cltd
fwait
stos
or
lret
cli
xchg
repz
mov
repz
sub
int3
sbb
sahf
cmp
or
pop
mov
mov
adc
and
es
mov
enter
xchg
xchg
sbb
add
dec
cmpsb
ret
jge
cmp
push
add
imul
mov
in
xchg
cmpsb
inc
adc
loop
andb
insl
outsb
rclb
sub
mov
xchg
push
arpl
mov
sub
stos
pusha
loope
or
test
or
les
mov
inc
push
mov
cmpsb
out
test
mov
mov
jns
dec
dec
xchg
xchg
pushf
jb
mov
into
jae
data16
shrl
xor
ret
xor
int3
mov
mov
flds
push
mov
imul
stc
aam
scas
lret
push
shlb
dec
jp
pop
stos
jle
add
int
xchg
xchg
add
dec
sub
clc
xor
mov
dec
jmp
js
lcall
push
xor
push
and
mov
pop
dec
test
jecxz
push
incb
imul
ret
notl
lods
mov
pop
fistl
out
mov
cmp
cmp
lea
aam
orl
ja
aas
mov
ret
mov
xchg
icebp
mov
fldcw
xor
in
fsub
aad
inc
sbb
xchg
pop
mov
div
std
ja
or
ja
dec
xor
or
aam
jo
cmp
rcrb
jno
fwait
cld
mov
mov
in
fmull
jae
xchg
pop
or
adc
inc
inc
into
divl
pop
sahf
fnstcw
mov
sbb
iret
xor
pop
movsb
aad
push
pop
dec
sbb
push
movsb
daa
push
pop
dec
push
mov
lret
adc
out
mov
test
ss
imul
lods
sbb
push
adc
ss
popf
fwait
rorl
popf
stos
in
jae
arpl
lcall
push
inc
andl
xchg
clc
pop
scas
stos
aaa
adc
sbb
cmp
ret
call
pop
push
xchg
mov
jae
sub
push
cmpsl
push
inc
xorl
jp
pop
inc
aas
xor
icebp
ret
or
fbstp
and
clc
aam
sahf
stos
in
mov
scas
aad
dec
jg
fs
andl
lret
xor
xor
out
add
mov
or
ja
movsl
sahf
in
lods
mov
fmull
sbb
mov
add
xor
dec
aad
in
dec
mov
pop
xchg
mov
dec
sahf
xor
out
lret
iret
insl
inc
xor
dec
cli
cld
andl
iret
dec
repnz
out
daa
cmp
inc
fwait
add
push
push
scas
mov
xchg
mov
scas
pop
jg
mov
mov
stos
stos
mov
jle
bound
sub
push
jge
test
push
int
into
es
mov
ja
test
xchg
out
and
add
dec
xchg
fildl
lret
push
repz
mov
roll
test
xor
mov
clc
cmc
pop
js
mov
xchg
ja
xor
push
enter
xor
decb
xor
mov
aad
imul
stos
mov
notb
xor
jbe
imul
clc
aam
pop
xchg
xchg
fwait
testb
stos
stos
scas
sarb
imul
scas
sbbl
int3
pop
sub
push
nop
idivb
loop
stos
lods
sbb
repz
jmp
andl
mov
inc
xchg
bound
sbb
cmp
mov
aas
out
jne
ret
and
inc
loopne
imul
dec
xor
inc
into
xor
fs
dec
les
mov
adcb
lods
pop
mov
inc
mov
mov
push
sub
adc
in
insl
icebp
insb
popa
rep
popf
xchg
or
cmp
aam
rolb
adc
incb
outsb
int
mov
repz
pop
sub
cmp
jb
xor
out
jmp
repz
aas
sub
mov
jg
mov
shr
lcall
dec
mov
into
xchg
xchg
add
mov
xchg
lock
pop
shr
aaa
out
out
daa
xchg
push
mov
es
in
mov
movsb
push
xchg
loopne
cmpsl
jle
repnz
decl
aaa
les
outsb
cmp
addl
ret
push
mov
add
fimuls
ja
xchg
loope
in
adc
jle
xlat
loop
test
mov
out
lods
negb
icebp
repnz
mov
arpl
xor
mov
cmp
insl
push
in
shrl
sbb
xor
aad
mov
pop
and
push
out
outsb
jge
imul
fwait
dec
or
jl
bound
add
sti
dec
aam
mov
icebp
iret
dec
mov
cmc
cmp
adc
out
pop
jecxz
mov
xchg
jb
dec
andl
and
idiv
xchg
bnd
xchg
pop
mov
cmp
adc
inc
xchg
stos
mov
idiv
imul
sbb
outsl
jl
adc
push
fwait
repnz
stos
scas
xor
and
adc
popf
pop
xchg
push
stos
scas
scas
xlat
into
mov
inc
into
stos
scas
repz
jle
or
in
testl
xchg
add
dec
lods
sbb
es
mov
shl
aad
fsubs
pusha
mov
aad
mov
adc
mov
mov
inc
mov
or
loopne
daa
pop
int3
xchg
push
inc
mov
insl
add
adc
les
cmc
out
into
es
pop
pop
fdivrs
adcb
push
cmp
mov
xor
mov
push
cld
inc
inc
add
aas
hlt
dec
loopne
jmp
dec
imul
stos
scas
cmpsb
and
and
in
stos
scas
loopne
mov
cmp
lods
stos
scas
shlb
lea
mov
je
cmpb
jne
fimuls
pop
pusha
imul
divb
fdiv
lret
or
les
adc
ja
scas
adc
push
xor
and
jmp
lods
xchg
pop
mov
andb
mov
sbb
mov
xor
xchg
pop
in
mov
sahf
adc
adc
adc
loopne
movsb
fwait
or
push
sbb
repnz
mov
xor
adc
dec
inc
es
scas
mov
jno
inc
es
jo
mov
mov
mov
or
lods
dec
adcl
fmull
push
aas
push
popf
mov
test
jecxz
mov
movsb
xchg
xchg
dec
test
test
in
loop
xchg
in
test
push
pop
xor
or
dec
into
test
cmp
push
fs
sbb
icebp
out
les
xorl
call
gs
movsl
cs
or
jo
stos
in
mov
xor
jo
jo
loope
mov
mov
movsl
idivb
repnz
test
lcall
sarb
fcmovnbe
rcr
cmp
inc
jmp
push
push
cmp
hlt
jnp
cmp
fsubrl
adc
stos
faddp
call
lock
adc
cwtl
push
popf
cld
mov
cmp
int
add
fwait
out
les
inc
mov
inc
xor
xor
into
es
mov
sti
test
xchg
xchg
mov
ja
cld
push
mov
jp
mov
xlat
mov
sbb
stos
rclb
fwait
loope
jp
jl
push
mov
push
dec
and
mov
or
ret
jo
in
outsl
bound
inc
cmp
and
push
loop
cwtl
divb
sbb
mov
clc
mov
inc
ret
adc
sbb
aam
mov
rorl
pop
add
addr16
push
repnz
push
fistps
jmp
cmp
shrb
jl
mov
popa
pop
mov
add
jp
out
mov
je
inc
in
es
mov
subl
jl
in
add
aas
xchg
add
ret
mov
cmp
iret
imul
clc
mov
dec
div
dec
aad
cmp
hlt
jns
cmp
mov
push
and
mov
jbe
jne
mov
rorb
add
pop
jns
movb
scas
jnp
adc
and
and
int
lock
sahf
pop
pshufw
ss
es
cltd
orb
scas
hlt
hlt
inc
es
jno
ret
pop
pop
mov
ficoms
or
divb
jmp
repnz
xor
push
les
fsubrl
adc
jno
sti
dec
movsb
jl
or
cwtl
divb
fstpl
repnz
mov
lds
jnp
loop
mov
sub
movsl
and
popf
jb
sub
push
inc
daa
jnp
insb
fidivl
mov
lahf
mov
js
mov
push
pop
ds
sahf
xchg
aas
inc
mov
cmp
movsb
lods
bound
pop
jle
push
js
lret
lds
push
out
cwtl
add
enter
sahf
cmp
mov
gs
ds
pop
pop
mov
mov
sbb
je
mov
push
cmc
jno
mov
push
aam
inc
mov
js
fists
ds
dec
inc
jno
mull
lret
add
dec
cmp
xor
in
jg
xchg
jp
enter
into
ds
sahf
mov
jae
daa
cmp
dec
aam
movsb
push
aas
lret
pop
pop
mov
int3
lea
lret
mov
dec
clc
fcoml
and
cltd
sub
sbb
fildl
mov
aad
pop
push
push
mov
mov
cmc
pop
insl
jns
ds
ficomps
mov
inc
mov
xor
pop
mov
es
sbb
mov
dec
cmp
mov
mov
xchg
mov
xchg
std
mov
inc
jbe
nop
jne
and
cmp
imul
lahf
mov
or
fdivl
or
pop
fsubs
iret
mov
rcll
mov
xlat
add
dec
or
icebp
push
outsw
add
push
pop
push
repnz
sti
fnstenv
mov
pop
in
imul
xchg
sarb
rorb
in
lcall
inc
xor
int
xor
pop
rcr
pop
adc
sub
pop
adc
adc
adc
aaa
addr16
scas
shlb
xor
xchg
mov
jb
aaa
push
mov
mov
stos
je
xor
mov
mov
dec
push
and
fsubr
test
lock
les
or
cmp
xor
xorl
and
cmp
outsb
movsl
aad
sub
cmp
std
cld
cmp
in
xor
inc
les
add
aas
out
cmpsl
mov
punpckhbw
lds
leave
orb
aam
pop
fisubrs
adc
push
or
jge
loopne
jge
adc
push
movsb
inc
dec
cmp
adc
and
mov
or
mov
add
push
lret
in
inc
xchg
test
aam
push
mov
push
adc
lods
mov
jg
jge
movsb
dec
mov
insb
cli
test
repnz
int3
sub
icebp
pop
xor
mov
or
lods
pop
mov
imul
in
outsb
imul
leave
lea
sub
lods
mov
cmp
jbe,pt
jnp
pop
imul
not
xchg
pop
pop
stos
in
xchg
inc
call
cltd
popf
jno
sub
movsb
push
xchg
std
pop
mov
insl
adc
inc
pop
sbb
push
lock
addr16
test
ja
adc
xor
in
sbb
xor
xor
adc
mov
je
pop
enter
or
mov
add
in
mov
hlt
xchg
popa
js
push
and
faddl
cltd
sahf
pop
loopne
mov
sbb
mov
push
inc
int
test
pop
and
lret
lcall
repnz
rcll
dec
inc
mov
imul
jb
adc
sub
ficompl
or
stc
add
scas
loope
push
mov
cmp
dec
stos
jmp
jne
sbb
and
imul
and
dec
imul
fdivl
int3
stos
in
mov
inc
js
pop
jb
lea
sbb
ljmp
cmp
outsb
insb
loopne
mov
cli
cmp
fwait
lret
cmp
imul
mov
push
mov
mov
or
push
iret
xchg
mov
lret
xor
stos
in
jle
cmp
mov
jb
negb
mov
aaa
push
jno
out
jae
add
adc
mov
outsb
test
icebp
jmp
inc
adc
xor
dec
enter
adc
dec
adc
xor
imul
xchg
sub
mov
pushf
mov
dec
mov
xor
add
fmuls
cmpsl
aad
xchg
xchg
push
test
add
dec
push
lcall
pop
xor
add
aas
test
add
imul
xchg
dec
xor
imul
stos
scas
and
sti
lret
les
mov
sti
fsub
cmp
add
rep
sti
mov
les
scas
mov
sti
xor
mov
sti
shl
pop
stos
scas
mov
loopne
clc
push
mov
sub
pop
loop
div
dec
repnz
jnp
jae
sbb
cmpsl
shrb
ds
inc
mov
repz
adc
mov
std
popa
repnz
sub
sbb
lret
pushf
jb
repnz
das
ficoms
fbstp
push
dec
xor
aam
int
xor
adc
fs
decb
in
mov
xchg
dec
adc
imul
xchg
add
lcall
mov
pop
imul
dec
scas
out
sub
add
push
mov
mov
inc
mov
sti
fwait
add
psrlw
gs
mov
aas
test
pop
sahf
loope
enter
aad
xor
mov
sbb
icebp
jns
cmc
push
inc
cmp
xor
xor
fiadds
add
aas
jne
out
movsl
frstor
mov
add
sub
dec
jbe
mov
ror
stc
sbb
mov
or
test
jle
rcrl
inc
iret
subl
and
xchg
mov
mov
add
dec
or
jp
add
push
sarb
iret
aas
cmp
int3
pop
imul
xchg
repz
xchg
decb
lods
imul
inc
xchg
mov
xorl
mov
dec
pop
sarl
xor
or
pop
movsb
and
mov
cld
jge
jle
xor
jae
dec
xor
xchg
or
jl
lea
pand
imul
push
xchg
or
inc
push
cmp
cmp
aam
pop
xchg
adc
push
shll
or
xorb
dec
out
fmul
mov
dec
dec
pop
mov
sti
lea
ds
nop
stc
cs
or
pop
dec
cmp
xor
mov
loop
inc
sub
push
sbb
or
daa
dec
pop
lods
sub
pop
lret
repnz
mov
test
add
push
or
mov
ja
inc
push
push
jne
jle
add
push
addr16
in
add
ret
mov
fsubrs
fcmovnu
mov
hlt
aam
shl
stos
loope
xchg
dec
fmuls
mov
repz
mov
inc
or
mov
sbb
rclb
movsb
mov
add
ja
push
std
test
lock
cmp
xchg
cld
cmp
xchg
idivl
pop
out
mov
lahf
jnp
add
mov
add
xor
andb
cmc
pop
in
in
sub
pop
ss
jle
in
dec
std
xchg
adc
outsb
xchg
and
mov
add
dec
sti
fnstcw
sbb
addr16
out
outsl
inc
es
stc
push
pop
mov
dec
ficomps
daa
add
sbb
pop
jae
xor
mov
test
fcomps
cwtl
inc
mov
mov
add
dec
sbb
loop
outsl
decl
jno
testb
inc
add
push
pop
in
or
or
mov
mov
push
addr16
and
iret
xchg
sarb
adc
pop
push
push
and
inc
mov
xchg
mov
fdivs
imul
mov
add
dec
pop
dec
mov
test
popl
dec
shlb
or
adc
sahf
push
and
adc
or
outsl
mov
stos
scas
jns
sbb
cli
shlb
imul
xor
sub
pushf
add
int3
or
iret
sub
jg
pop
jae
pusha
test
pop
mov
xorb
xor
jo
sbb
mov
push
add
lret
imul
imul
hlt
aam
fisttpl
out
inc
pop
jg
out
adc
adc
mov
lcall
inc
dec
iret
sub
inc
lret
or
mov
pop
repnz
mov
adc
xchg
add
mov
xchg
push
out
push
inc
mov
orb
and
push
push
cmp
cmc
out
fdivs
mov
push
hlt
cmc
std
cmp
les
lcall
adc
inc
sti
lea
mov
add
dec
fs
js
jo
int
mov
lds
rorb
cmp
sahf
xor
mov
cmpsl
mov
iret
sub
jmp
sbb
aam
sub
inc
mov
and
and
shld
push
pop
outsl
stc
adc
lods
test
jl
dec
into
adc
pop
negb
negl
xor
mov
bound
aas
jno
pusha
ret
gs
jb
or
dec
hlt
aam
jle
stos
jmp
scas
fs
jne
sbb
loope
add
mov
pop
xor
cmp
movsb
lret
movsb
cmc
pop
pop
int3
loope
xorb
pop
int3
cwtl
xor
cmp
dec
or
mov
data16
bound
sahf
inc
fdivrs
mov
loop
xchg
inc
xor
into
es
leave
add
push
sti
add
or
mov
outsb
add
fidivrs
jmp
loope
mov
inc
aad
mov
pop
sti
js
les
push
xchg
and
jns
and
pusha
push
hlt
aam
daa
dec
stos
in
mov
cmpsl
adc
xchg
nop
and
lcall
push
dec
iret
mov
push
rorb
bound
cli
mov
ljmp
sarb
adc
fcoml
inc
mov
or
pop
adc
je
mov
jmp
mov
push
pop
aam
ja
push
sbb
mov
aaa
insl
mov
pop
inc
sub
inc
mov
insl
add
adc
push
fs
inc
mov
ja
adc
je
in
dec
mov
fisubrl
les
mov
loopne
iret
in
mov
and
sbb
sbb
int3
jno
push
repz
jb
stos
in
inc
push
adc
popa
add
leave
jbe
movsb
xchg
sub
je
push
icebp
lods
test
xor
xor
mov
mov
add
bound
out
mov
mov
add
mov
push
add
sbb
xchg
lds
imul
cmp
sahf
call
iret
inc
xchg
insl
repz
insb
in
and
cmpsl
fs
repz
push
push
cmp
or
sub
inc
mov
or
es
push
cmp
out
ljmp
clc
mov
mov
popl
jno
outsb
xlat
arpl
stos
jmp
das
bound
push
sub
repnz
adc
icebp
jno
repnz
jno
inc
sbb
cmpsb
dec
xor
sbb
push
nop
mov
mov
adc
mov
int3
mov
loope
into
stos
in
imul
adc
icebp
sub
adc
or
sub
add
dec
and
mov
mov
insl
add
movsl
xchg
insb
cld
lods
sti
stos
test
or
iret
sarl
iret
sub
xor
jns
jnp
sub
or
add
fsubs
mov
leave
push
je
dec
xchg
mov
dec
xor
dec
or
rcll
das
mov
mov
stos
outsb
pop
mov
adc
decl
xor
movsb
pushf
hlt
int
add
mov
sbb
xor
mov
in
cmp
bound
mov
xor
adc
repnz
mov
xor
iret
int
bound
imul
pop
add
inc
movl
repz
mov
stos
in
jne
into
adc
je
xchg
lds
mov
stos
dec
scas
out
mov
fisubrl
mov
test
mov
lods
dec
jns
div
ljmp
xchg
dec
aad
mov
aas
cmc
out
ret
pop
mov
pop
mov
xlat
or
rcrb
cmc
je
aam
popf
repz
pop
dec
jno
mov
inc
mov
scas
mov
xchg
sub
movsb
call
xchg
repnz
mov
cli
push
push
mov
inc
inc
push
push
ret
lods
je
push
mov
xor
push
push
into
and
mov
mov
jbe
push
leave
xchg
fmul
push
mov
ficoms
aad
or
sbb
repz
xor
xchg
adc
xchg
mov
mov
push
mov
fcmovnu
cltd
cld
clc
inc
mov
out
xor
ficomps
mov
xor
adc
popa
sub
inc
inc
mov
ljmp
pop
cwtl
inc
xchg
mov
mov
dec
inc
cmp
daa
test
push
cmp
fwait
call
sub
xorl
loop
je
lock
rorl
mov
mov
mov
xchg
mov
fldenv
mov
sub
jb
sarl
pop
mov
aas
divl
ret
cmp
fidivl
imul
repnz
push
stos
out
fsubrl
sbb
call
test
jo
jne
xchg
cmp
add
jae
je
insb
pop
sbbb
jne
clc
push
movsb
dec
push
mov
shl
pop
popf
loop,pn
push
imul
repnz
sbbb
push
clc
out
fmuls
aad
push
mul
xchg
pop
mov
add
dec
mov
push
xor
cmc
stos
outsl
insb
lds
cmp
jle
insl
ficompl
sub
cli
repnz
jno
jb
mov
mov
mov
ret
pop
or
sub
jmp
inc
mov
sahf
mov
adc
sbb
mov
mov
into
push
adc
int
mov
repnz
sbb
mov
sub
stos
xor
mov
pop
into
insb
xor
or
ljmp
mov
jns
iret
sub
jno
cmp
sbb
cmc
sbb
js
inc
iret
sub
cli
shl
cmp
jae
sbb
idiv
mov
leave
cli
mov
js
jle
ja
fists
mov
inc
or
cmpsb
insb
test
xchg
aas
or
xchg
cmp
sahf
icebp
add
imul
add
xor
jne
call
lea
nop
loope
stos
scas
dec
inc
dec
mov
cld
jle
xchg
stos
lods
mov
repnz
push
ja
sbb
ret
movsb
push
js
pop
push
sbb
jl
jns
sub
loope
sub
aaa
repz
adc
mov
mov
push
push
pop
push
movsb
or
popa
pop
cwtl
jle
sub
cwtl
shld
mov
in
rcrb
movsl
cwtd
xor
add
out
adc
push
jo
mov
sarb
and
leave
outsb
pop
movsb
aad
in
or
mov
push
mov
cmc
popf
in
into
mov
lahf
repnz
mov
out
pop
pop
inc
mov
mov
into
fbld
fcomps
sbb
stc
lret
cmp
jle
dec
xchg
jnp
xor
mov
in
push
push
mov
adc
mov
es
iret
mov
xor
mov
cltd
or
jo
inc
mov
xchg
or
pushf
mov
mov
ds
into
adc
mov
mov
sbb
in
ds
or
dec
mov
dec
xor
stc
mov
stc
xchg
fldt
mov
push
sarb
jecxz
repz
inc
aaa
mov
mov
sbb
jo
in
pop
mov
test
mov
arpl
repnz
ja
xchg
xchg
sub
mov
mov
fisttpl
insb
push
loopne
out
jno
insl
aaa
xchg
cmp
imull
in
adc
mov
inc
loop
pop
mov
mov
in
dec
imull
pop
mov
inc
and
orps
jg
imul
inc
jle
repnz
mov
es
out
es
pop
fsub
inc
es
xchg
and
xor
insl
ret
scas
cmp
sahf
adc
mov
lds
xor
aaa
lock
es
imul
push
lds
mov
arpl
inc
imul
or
cltd
pop
sarb
pop
repnz
xchg
mov
loop
stos
xchg
dec
xchg
jmp
fadds
divb
scas
out
fadds
ja
jnp
mov
mov
mov
mov
push
inc
xchg
jne
notb
xor
lahf
or
loope
inc
inc
jb
xor
cmp
sub
pushl
jns
cltd
pusha
xor
movsb
fdivrs
popf
sbb
iret
sub
jmp
movsb
xor
sub
sub
js
jbe
sub
mov
iret
es
fcmovnu
push
dec
daa
lods
cld
mov
push
push
push
lods
add
dec
jb
xor
insb
xchg
inc
sub
push
or
mov
es
repz
mov
lahf
mov
iret
aam
icebp
cmc
into
or
loopne
arpl
or
push
inc
mov
jnp
mov
notb
inc
mov
pusha
xor
es
outsb
std
fdivs
jb
adc
add
or
push
add
dec
test
stos
xor
scas
sbb
cli
insl
mov
add
inc
aas
push
dec
or
js
int3
imul
xor
inc
add
pop
jo
mov
jmp
or
push
aas
xchg
aas
cmp
add
fcmovb
jb
push
cmpsb
loope
leave
or
imul
inc
xor
xchg
es
pop
fcoms
out
stos
and
fadds
in
adc
popf
jmp
sub
repnz
in
ficomps
bound
insl
adc
sbb
andl
sar
inc
xor
mov
scas
cmpsb
clc
add
inc
aas
fnstcw
ret
fiadds
inc
iret
adc
subl
inc
pushl
scas
and
pushf
inc
incl
mov
stos
mov
inc
imul
je
insb
iret
push
jne
and
cmpsb
call
push
mov
dec
out
adc
test
push
jl
cli
pop
lods
sub
mov
aas
xchg
scas
movsb
ret
xchg
jno
inc
cmp
xchg
imul
cmp
xchg
mov
xchg
add
cmp
mov
faddp
pushf
sbb
pop
adc
sbb
mov
xor
lds
ljmp
data16
sbb
mov
mov
jbe
cmp
repnz
mov
mov
inc
es
or
js
push
push
movsb
push
inc
es
fnstsw
jnp
mov
leave
xchg
sub
sub
pop
sahf
dec
dec
sub
out
jbe
cmp
pop
rcl
xor
dec
je
mov
pop
xchg
cmpsb
loope
incl
stos
aas
pop
sub
xchg
outsl
bound
xchg
push
aas
loope
fcmovb
xlat
outsl
in
mov
xchg
scas
aas
dec
mov
ljmp
xor
outsl
fisttpl
xchg
popf
or
movsl
cmp
mov
mov
dec
not
mov
jb
pop
adc
inc
mov
inc
cld
sbb
mov
push
mov
inc
mov
cmc
ficoml
mov
ss
testl
adc
mov
fidivl
mov
fcmove
test
mov
fcmove
arpl
movsl
sbb
fcmove
aam
jne
mov
cltd
sub
cmp
mulb
loopne
jnp,pt
inc
sarb
outsb
lret
mov
mov
mov
cmp
xchg
out
pop
ds
or
cmp
or
pop
ds
icebp
les
into
jecxz
ds
sarl
outsb
imul
mov
sub
cmp
repnz
ds
insl
push
cmp
stc
and
mov
cmp
jl
pop
into
repz
outsb
sbb
fidivs
inc
add
stc
mov
or
imul
cmp
imul
cmp
and
imul
aam
repz
in
and
fcoml
ja
jns
jbe
stc
into
mov
aam
inc
divb
js
xchg
xorl
pusha
xor
test
jmp
aad
xor
ffreep
mov
ja
popa
xor
push
or
xorb
stos
adc
ds
push
sbb
daa
icebp
outsb
stc
movsb
xor
insl
mov
stc
sahf
jg
push
mov
adc
xor
sbb
fadds
fwait
movsl
js
scas
xchg
lods
and
cmp
push
mov
and
mov
outsb
and
mov
xchg
aas
outsl
sub
cmc
cmp
inc
outsb
inc
and
jbe
xor
lock
outsb
dec
fs
xchg
ss
push
cmp
sahf
cmp
dec
mov
cmp
xor
lods
scas
mov
cmp
xchg
icebp
cli
cmpsl
or
adc
mov
adc
imul
xor
inc
nop
pushf
xor
popa
xor
pop
inc
pop
xor
add
inc
aas
addb
ret
mov
adc
into
es
inc
ret
fcoms
lcall
cmpsl
xchg
pop
add
add
dec
jmp
xor
push
fxtract
cmp
add
es
movsb
fadds
in
mov
jne
jp,pn
inc
out
mov
jmp
aas
bswap
shll
cmp
mov
mov
aas
push
pop
movsl
dec
in
mov
xor
into
es
cs
inc
mov
xchg
gs
cmpsl
hlt
mov
les
dec
push
mov
xor
sti
xchg
xor
aas
inc
jo
ret
jmp
mov
lret
iret
mov
inc
cmc
int3
stos
repz
add
sbb
repnz
pop
adc
sub
cld
adc
cwtl
adc
jmp
aas
fcoms
dec
and
test
mov
sti
cmp
add
sub
arpl
jnp
scas
mov
mov
pushf
mov
xor
add
es
or
fdivrs
scas
subb
mov
push
scas
movsb
enter
ds
mov
mov
mov
inc
jle
stc
mov
je
dec
lods
jge
insb
mov
mov
inc
pop
jecxz
fwait
repnz
push
cmp
insl
movsb
mov
sub
mov
mov
push
cmc
aad
xchg
lock
mov
leave
mov
popf
dec
in
inc
inc
inc
mov
dec
and
mov
inc
mov
rcrb
inc
aas
dec
movsl
xchg
loopne
cmpsl
mov
js
cmp
aad
xor
in
sti
adc
add
add
in
cmp
sahf
bound
sbb
fdivl
out
pop
stos
scas
clc
mov
sub
fwait
stos
scas
jno
ret
ljmp
stos
mov
movsb
stos
push
shlb
lahf
push
cmpsb
div
and
sub
add
xchg
test
mov
fcoml
xchg
out
aas
inc
push
ss
push
outsb
std
repnz
xchg
cld
aas
cs
mov
xchg
outsl
ljmp
outsb
outsb
jg
das
xchg
addr16
adc
stos
in
shrb
dec
stos
arpl
add
repnz
std
out
jge
ss
push
xor
pop
sbb
or
outsl
pop
xor
into
sub
mov
inc
arpl
push
aad
cmpsb
cmp
outsb
mov
or
lods
cmp
pop
ss
push
pop
jae
ficoms
scas
inc
inc
lock
mov
cmpsl
repnz
dec
addr16
lods
pop
adc
das
dec
push
push
mov
sahf
adc
out
dec
and
clc
stos
es
daa
inc
aas
ljmp
or
into
in
mov
lahf
stos
test
cmpl
lods
sub
jnp
mov
and
outsb
test
mov
cmp
jl
loope
jle
sahf
ja
lds
cmpsl
ret
imul
xor
paddq
lret
aam
or
sarl
loope
add
adc
xor
sahf
xor
push
mov
xchg
mov
ret
aas
jno
dec
out
call
aas
sbb
xchg
sub
subl
out
test
add
xchg
sahf
inc
mov
ret
or
inc
push
adc
jle
scas
adc
add
push
or
sub
stos
scas
test
jo
add
scas
mov
xor
add
scas
mov
or
es
push
fsubs
and
fisubs
addb
in
add
dec
mov
jp
fiadds
pop
mov
add
xchg
push
subb
or
andb
cmc
fisttpll
adc
popf
inc
es
mov
dec
xchg
iret
insb
orl
insl
shl
adc
movl
stc
push
lcall
cmpsb
je
nop
inc
pop
pop
lds
xchg
mov
sbb
flds
pop
push
mov
fcompl
inc
dec
and
mov
pushf
pop
jp
shl
inc
bnd
cmp
loop
loope
jbe
sahf
push
aas
sahf
test
ret
hlt
pop
mov
xor
adc
in
jecxz
add
fcoml
stos
mov
sar
insb
js
xor
xchg
mov
repnz
sub
bound
push
xor
cmp
mov
gs
sti
loope
leave
scas
sahf
ja
aas
lds
push
jo
enter
xor
insb
fisttpll
je
dec
pushf
andb
pop
jge
mov
xchg
pop
idiv
and
aam
sti
or
pop
sahf
xor
psubd
xor
jge
add
pop
iret
xor
push
das
in
sahf
xor
andb
push
xchg
push
insl
addr16
cmp
mov
mov
xor
into
add
jle
pop
in
xorb
mov
mov
cli
mov
adc
mov
xchg
cmp
sub
xorl
stc
iret
sub
outsl
ja
mov
in
pop
iret
xchg
divb
cmp
sub
dec
into
pop
sahf
ja
sbb
or
mov
pop
xchg
xor
subl
std
je
outsl
outsl
or
lods
inc
pop
lret
enter
inc
cmp
fidivrl
je
push
jno
lods
fidivl
je
int
aad
fidivl
je
cmp
sub
adc
je
loope
call
mov
adc
repnz
jae
out
rorl
inc
pop
sahf
ja
sub
mov
negl
xchg
sbb
push
xchg
xchg
lods
sti
push
mov
dec
cmp
aas
sbb
push
xchg
cmpsb
sbb
pusha
aas
ficoms
cli
and
xor
paddq
int
jecxz
push
jmp
sbb
add
add
and
jge
inc
aas
fnsave
ret
test
mov
orl
and
cltd
scas
movl
xor
mov
mov
or
sbb
mov
mov
repz
dec
test
dec
into
push
or
dec
dec
dec
or
mov
mov
gs
sub
mov
bound
mov
dec
psubq
pusha
adc
and
push
dec
mov
and
sti
sbb
xor
xchg
inc
in
push
gs
gs
sbb
and
mov
mov
dec
lcall
pop
orl
mov
andl
cli
sub
mov
add
pop
push
testb
or
cmp
mov
jle
add
sbb
bnd
mov
jg
loopne
fstpl
mov
xorl
mov
push
pop
sbb
rorb
sbb
mov
leave
cmp
sbb
mov
mov
push
push
and
cmp
jno
inc
or
inc
pushf
sahf
jo
mov
dec
push
dec
sub
push
stos
scas
jmp
add
push
push
test
pop
sub
aaa
loop
shrl
sbb
add
scas
repnz
fsubl
add
test
adc
mov
bnd
pop
in
int
adc
dec
lea
add
fists
push
subl
lahf
cltd
aas
mov
pusha
adc
pop
mov
jge
mov
das
test
inc
push
hlt
sbbb
add
xlat
jno
ret
sub
dec
les
je
xlat
div
or
cmp
add
cmp
loopne
push
lahf
jb
lahf
lds
pop
pop
or
sti
mov
cli
std
and
adc
mov
sbb
in
mov
sti
les
xchg
sbb
pop
nop
lret
imul
cli
mov
addr16
xor
sbb
jb
scas
adc
dec
clc
pop
mov
or
repnz
rolb
dec
add
arpl
in
fildl
cmpl
clc
push
mov
sub
addl
mov
insb
pop
roll
and
mov
lods
fwait
add
ret
outsb
cmp
ds
in
or
and
subl
out
or
add
mov
cs
test
mov
jmp
lds
out
cmp
out
cwtl
je
mov
jb
leave
push
into
sub
out
fldt
xchg
mov
pop
inc
and
cltd
add
aam
outsl
ds
or
mov
cwtl
xorl
sbb
dec
lret
cmp
sub
or
subb
imul
cld
ret
mov
mov
push
push
lea
xor
xor
repz
pop
jbe
bound
mov
dec
jbe
lods
add
addr16
and
xor
shrl
cmp
daa
cs
outsl
stos
gs
adc
scas
mov
filds
cli
cmp
xchg
sbb
or
or
mov
mov
xor
inc
ret
dec
into
loop
clc
jbe
sub
push
dec
jno
aam
movsl
insb
shrl
mov
mov
call
rorb
fwait
add
jl
mov
xor
icebp
lods
int3
shrb
rcll
test
std
mov
pop
push
insl
mov
xchg
sahf
xor
popf
mov
or
push
aad
jmp
mov
adc
rclb
sbb
lods
pop
sti
mov
xchg
cmpl
aad
je
scas
or
jle
adc
or
adc
insb
test
mov
push
setns
test
ljmp
cli
push
andl
and
mov
push
add
in
inc
cmp
lods
xorl
int
mov
or
cmp
lds
xchg
fcomp
cltd
pusha
cld
stos
lret
push
loope
xor
ljmp
cs
xchg
int
mov
or
mov
out
test
or
mov
mov
jle
iret
cmpsl
incb
and
dec
or
rcrb
ljmp
and
bound
ss
adc
scas
push
jecxz
push
dec
cmc
out
aam
mov
xchg
outsl
out
push
arpl
inc
stc
push
mov
jno
inc
or
test
xor
lcall
sbb
mov
sbb
xorb
shll
out
sbb
or
xchg
lret
or
andl
pop
outsb
daa
and
test
cmp
aad
ja
fstps
fcoms
pop
sbb
or
into
mov
push
sub
imul
push
and
insl
push
out
add
jge
ljmp
repnz
mov
addb
push
mov
mov
cmp
jae
ljmp
sahf
cmp
xchg
xchg
and
or
mov
and
andb
inc
xorl
inc
mov
sub
rorb
aas
pop
ret
lods
xor
iret
cs
and
clc
loop
dec
dec
and
xorl
fidivrs
push
adc
jnp
and
test
sbb
test
inc
loop
jp
xchg
mov
lds
jbe
icebp
outsb
and
xor
aas
nop
mov
out
mov
test
push
outsl
pop
cmpsl
cli
insb
sub
mov
push
addr16
dec
jp
cli
bound
jecxz
and
mov
jno
stos
push
cs
out
add
inc
xchg
push
xchg
mov
push
mov
jecxz
mov
cmp
mov
xchg
and
repnz
jmp
inc
push
jmp
jno
jge
iret
sub
cs
mov
sbb
cmpsb
cmp
aad
xchg
mov
mov
push
in
movsb
stc
mov
sbb
sahf
mov
cmc
dec
lods
xchg
push
mov
push
in
mov
pop
popl
xchg
push
lea
mull
xchg
cmp
cmpsb
aam
das
jae
cs
es
je
and
aad
inc
inc
mov
arpl
lds
imul
dec
and
add
mov
mov
sub
and
call
cwtl
js
loopne
scas
pop
push
ffree
cmpsb
icebp
pop
lret
int
inc
cmp
ret
jo
dec
ret
lcall
cmpb
cmpsb
sahf
mov
imul
sub
test
imul
mov
jb
lods
mov
xchg
lahf
adc
cmp
xor
movl
mov
pop
stos
flds
inc
negb
mov
fisubl
cs
and
mov
stc
xchg
sub
mov
imul
add
push
test
push
mov
push
or
mov
cmpsl
enter
inc
adc
out
int3
and
test
xchg
data16
adcb
add
fcmovne
aaa
subl
pop
xchg
mov
inc
mov
or
fisttps
mov
push
pop
jae
inc
ret
or
adc
push
xor
iret
add
xor
ret
and
jae
push
lahf
mov
jne
jl
jae
pop
rolb
pop
out
inc
leave
out
mov
pusha
dec
xor
popl
mov
mov
aam
cmp
pop
push
hlt
mov
add
cmp
and
aam
pop
addl
test
sbb
mov
dec
sub
into
stos
add
inc
js
and
cmpb
sahf
jb
subl
andb
and
push
push
iret
lea
push
mov
in
adc
xlat
adc
in
sbb
stc
push
dec
arpl
cs
mov
das
dec
subl
sbbb
push
add
popf
add
jge
fprem
push
cmpsl
adcl
mov
sahf
pop
dec
cmp
dec
aas
lcall
dec
pushf
jns
mov
loop
mov
ss
jo
pop
jae
in
ljmpw
cmp
xchg
add
fisubrs
and
jg
lret
jp
add
lret
mov
cld
push
xchg
and
dec
lds
aas
negb
push
xor
ret
xchg
cmp
jge
mov
and
add
test
popf
pop
sahf
mov
fsubl
push
jno
nop
cmpb
repz
inc
xchg
movsb
aam
jb,pn
ss
fcmovnb
mov
in
repnz
jae
into
xor
dec
add
pop
mov
fs
adc
iret
fists
lods
lods
cmc
js
inc
std
pop
pop
out
aam
popf
cwtl
mov
xchg
clc
jae
imul
mov
cmp
inc
fists
cmp
jmp
dec
xor
lahf
sbb
popf
push
fldcw
mov
sub
hlt
sub
out
mov
scas
sub
mov
ljmp
adc
in
sub
jno
ret
or
mov
adc
pop
fists
dec
mov
mov
out
fildll
fnsave
mov
jle
fwait
insl
mov
mov
mov
addr16
andl
imul
cwtl
insl
ret
inc
pop
mov
or
and
rcrl
movsl
add
mov
lcall
adc
andl
add
mov
cld
dec
sub
bound
jp
aad
pop
inc
adc
lahf
mov
xchg
sub
and
pusha
push
cld
adc
mov
xchg
icebp
xchg
xor
push
xchg
fmuls
cmpsl
mov
xor
sub
mov
test
mov
sub
adc
push
lgs
ficompl
pop
add
mov
jae
hlt
mov
ss
popf
xor
fcompl
nop
sub
xor
andb
loopne
pushf
mov
into
ljmp
mov
add
int
fsubrl
movsb
rcrl
ds
mov
stos
or
scas
int
push
add
cmp
mov
xor
scas
adc
jl
mov
xchg
mov
call
fs
cs
push
cltd
dec
hlt
add
ja
adcb
xlat
sti
cs
jo
cmpb
insl
into
test
jns
flds
and
bound
mov
jl
xor
mov
outsw
lock
orl
pop
jo
mov
call
movswl
sbb
mov
gs
cs
and
sahf
cld
xchg
mov
pop
test
test
and
xor
adcl
xor
adc
cmpsl
movsb
cmp
mov
sbb
mov
inc
dec
outsl
fs
movsl
aam
icebp
mov
pop
push
jb
in
and
xchg
scas
mov
shlb
and
mov
cltd
mov
xor
mov
inc
dec
filds
mov
xchg
adc
mov
addr16
int3
cmp
inc
gs
inc
dec
xor
test
int
mov
jle
outsb
xchg
daa
add
jo
sarb
pop
ret
push
sar
clc
jo
adc
or
ret
hlt
icebp
stos
add
pop
mov
or
xor
pop
sbbb
es
cmc
xlat
fdivs
adc
faddl
cs
mov
mov
xor
movsl
in
mov
adc
jno
cs
mov
stos
shrb
add
xchg
je
mov
into
out
push
insl
insl
sbb
inc
jno
push
test
and
mov
adc
dec
mov
loop
rorl
inc
mov
jae
loopne
aam
inc
test
fwait
je
testl
dec
jne
out
faddl
pop
test
sbb
inc
sbb
testb
popa
pop
test
mov
test
mov
outsb
pop
sbb
or
xchg
push
or
sub
pop
and
mov
xchg
sub
mov
ss
testl
mov
faddp
push
cmp
in
push
test
rolb
flds
bnd
mov
mov
stos
inc
stos
arpl
sub
xorb
ds
scas
dec
lock
leave
mov
jmp
insb
test
pop
mov
xor
inc
pop
je
sbb
add
push
or
or
mov
jno
mov
push
stc
mov
lea
pop
pop
ret
adc
ror
inc
bound
cmpsb
xchg
sbb
mov
push
jl
mov
sbbb
or
movsl
ficomps
fisubl
mov
sub
out
testb
mov
test
popf
sahf
lods
mov
push
gs
add
test
arpl
lods
mov
lahf
aad
mov
xchg
movsl
hlt
les
jmp
cmp
outsl
xor
xor
jp
enter
sub
cmp
in
popa
push
loop
pusha
aas
repnz
push
jecxz
inc
cmp
mov
xor
xchg
test
push
jl
cltd
popa
sub
ja
test
cs
dec
mov
mov
xchg
pop
pop
adc
lods
test
push
mov
addb
scas
xor
mov
push
aaa
into
fldl
rcr
and
jmp
lods
push
popf
arpl
hlt
movsb
pop
js
test
pop
mov
aaa
xchg
add
stc
scas
push
mov
stc
aam
test
xchg
in
mov
and
leave
jecxz
nop
pop
test
scas
adc
cmpsb
andb
pop
adc
push
rolb
lahf
imul
sahf
mov
adc
sahf
data16
pop
movsb
push
sub
mov
mov
sete
push
add
mov
jnp
bound
jecxz
fstl
test
push
jns
push
adc
mov
jns
inc
cmpsl
int3
les
cmp
add
out
int
jmp
mov
roll
xchg
push
cmpsb
pop
mov
cmpsb
pusha
daa
add
scas
mov
aam
rcrb
aaa
sarl
sub
outsb
sub
addr16
aad
sahf
fcmovnu
mov
aaa
push
in
fnstcw
shl
xor
icebp
mov
mov
ret
xor
push
lea
mov
ficompl
push
into
in
mov
sub
mov
out
xchg
mov
cmp
test
in
mov
sahf
mov
adc
adc
jp
ret
jl
les
stos
xchg
leave
pop
imul
mov
pop
sub
lcall
mov
sub
xchg
outsb
adc
cli
jp
and
cmc
sar
in
enter
jmp
jl
cli
jmp
sub
inc
fwait
rcll
ret
mov
dec
sti
popa
lds
inc
psubb
cwtl
pop
mov
lods
xchg
rcrl
shl
aam
daa
xor
in
test
daa
in
adc
mov
fcmovnu
mov
lds
lcall
cmp
xor
xchg
outsl
jl
gs
pop
pop
jle
cmp
outsb
sbb
pushf
inc
pop
dec
and
cs
test
mov
orb
mov
jno
or
and
adc
sbb
arpl
mov
std
and
stos
loopne
mov
into
xchg
pop
ss
xor
shlb
sbb
cltd
xchg
neg
sub
xor
cmpsl
imul
cs
and
ss
in
xlat
outsl
jmp
mov
in
or
pop
xor
pop
mov
ljmp
dec
out
add
jmp
imul
loopne
aaa
clc
cmp
lcall
movsl
sbb
mov
inc
test
xchg
popa
fwait
int3
or
leave
xchg
jl
cmp
bound
inc
push
mov
push
jl
hlt
int3
rolb
jne
mov
jns
dec
test
fimull
inc
jb
mov
cmp
stos
bound
adc
xchg
or
xor
mov
and
inc
lds
call
mov
cwtl
cs
xchg
sbb
adc
outsl
lret
adcl
mov
test
mov
jae
push
inc
mov
cmc
repz
arpl
icebp
je
movsl
shlb
sub
and
dec
ss
leave
sar
out
pop
enter
xor
mov
mov
clc
inc
fldl
cmp
shll
jb
test
test
adc
out
or
in
sub
out
xor
xchg
int
stos
clc
and
add
jne
stos
mov
mov
jl
pop
test
mov
pop
xchg
movl
cli
cmc
adc
fdivr
negb
lcall
fisubl
inc
es
cmpb
pop
pop
xor
mov
dec
loopne
pushf
outsl
pop
mov
xchg
out
stos
xor
push
mov
sbb
icebp
mov
test
dec
or
mov
sahf
outsb
andl
cs
idiv
sahf
mov
pop
jg
inc
aad
cs
sub
ret
out
cmp
sub
cmp
aam
imul
inc
test
cli
push
das
sub
shrl
iret
mov
xor
mov
xorl
aas
jo
inc
adc
mov
adc
mov
inc
xchg
pop
lods
lods
mov
fsts
or
loop
test
cs
iret
mov
mov
push
je
enter
cmp
jl
fnstenv
cs
xor
lods
out
leave
mov
outsl
shll
mov
out
in
popf
jbe
test
mov
les
lock
loope
and
and
in
outsl
push
fnstcw
mov
fsub
cs
cmp
roll
insb
test
rcrb
cmp
mov
fsubrs
dec
cmc
adc
push
popa
pop
push
repz
dec
mov
add
cltd
jbe
out
imul
sbb
sub
fwait
push
push
std
or
xchg
or
jnp
movsb
sub
fiaddl
std
mov
push
fucomp
push
fidivs
sbb
inc
cwtl
sub
lock
push
mov
mov
rorb
xor
or
ror
mov
inc
jnp
testb
lret
jae
shlb
shrb
xor
sbb
mov
loopne
outsl
or
push
mov
pop
das
aaa
jnp
frstor
das
testb
pop
fiaddl
mov
push
mov
xor
daa
leave
mov
sub
imul
ss
sub
hlt
jae
mov
repz
push
xchg
je
fbld
jle
or
jp
cs
sub
outsb
xor
fnsave
call
popa
hlt
cmpsb
js
and
sub
inc
mov
data16
fiadds
mov
inc
ljmp
xchg
outsl
movsb
fnsave
cs
adc
fstpt
cs
hlt
lret
dec
and
je
ss
es
and
daa
pusha
hlt
mov
pop
loope
or
and
cmpb
cs
movsl
push
cmp
stos
movsb
xchg
sbb
pop
stc
loopne
mov
jp
push
fmuls
pop
cltd
out
cmp
out
ja
mov
xchg
cli
popf
pop
out
jb
mov
fidivl
inc
jp
in
mov
lods
mov
out
pop
push
ja
in
xchg
xor
jb
adc
cwtl
fxch
xchg
addl
push
repnz
fdivs
sub
mov
loop
adc
cmpsb
js
push
sbb
cmpsb
xor
push
cs
xchg
pcmpgtw
les
jl
insl
ret
lret
inc
loopne
fmulp
jl
jbe
jmp
xchg
or
pop
adc
imul
popa
stos
jmp
push
mov
cmp
add
sub
cmp
mov
fsubrs
and
mov
outsb
mov
test
add
mov
in
mov
les
mov
pop
inc
outsl
sub
mov
and
pop
cltd
scas
addr16
scas
mov
dec
xor
fs
push
pop
and
jl
dec
lcall
sbb
data16
jmp
add
jae
mov
push
sbb
xchg
pop
mov
xchg
rolb
iret
cmp
dec
mov
mov
movsl
adc
xchg
cs
ds
lods
jmp
stos
xor
in
int3
sbb
stc
loop
es
rcll
xor
xchg
sbb
repnz
push
mov
pop
inc
rcrl
xor
clc
xchg
xchg
fwait
dec
shrl
out
idivb
cmp
sbb
mov
cmp
dec
and
mov
pop
adc
mov
pop
loopne
dec
in
data16
les
xchg
out
xchg
xchg
pop
adc
cmpl
push
push
cltd
bound
push
bound
jge
mov
xchg
insl
or
jno
adc
or
cli
lods
mov
dec
sbb
mov
inc
stc
loope
fs
nop
mov
setb
fsts
jae
shl
push
xchg
add
add
andb
out
imul
shl
or
push
mov
enter
shrb
xchg
jge
pushl
imul
mov
and
fisubl
imul
xchg
lahf
sti
jno
pop
cmp
and
xchg
mov
pop
into
push
xchg
inc
mov
sti
mov
mov
xor
push
push
cmp
aas
xchg
arpl
or
subl
orb
and
cs
pop
leave
or
cmp
enter
dec
pop
mov
lret
push
repnz
into
pop
cmpsb
jge
cmp
or
pop
mov
neg
in
into
adc
xor
lock
add
aas
mov
jmp
pop
inc
mov
mov
xor
das
loopne
dec
scas
shll
mov
das
push
sbb
or
test
cs
cmpsl
test
sti
mov
xchg
jge
or
and
jp
aad
xchg
ficoml
push
adc
xchg
xchg
xor
sub
outsb
in
scas
jns
imul
push
cmp
jmp
xor
add
mov
ljmp
jle
into
xchg
or
mov
ret
into
cmp
mov
cmp
cmpsl
cmp
bound
in
add
mov
enter
test
pop
pop
adc
adc
push
dec
cmpsb
and
dec
mov
mov
dec
dec
dec
mov
jg
sbbb
out
sahf
push
scas
inc
add
xor
fs
mov
jge
pop
and
xchg
aas
mov
jp
add
div
cs
aas
lea
pop
xchg
push
xchg
jmp
testl
push
dec
adc
pop
mov
push
int3
xchg
sbb
adc
out
mov
xchg
pusha
xlat
xchg
or
cmp
nop
sarb
daa
or
dec
cs
push
inc
push
outsl
sbb
pop
dec
xor
int3
jmp
cmc
rorl
push
push
pop
or
jnp
add
mov
mov
cltd
scas
cld
mov
mov
fildll
mov
fildl
mov
xchg
dec
fbstp
jnp
js
add
jge
sbb
mov
sar
pusha
ds
xor
jno
ljmp
and
xorl
icebp
mov
nop
jbe
and
mov
mov
je
xchg
jp
mov
int3
nop
movsb
ds
cmpsb
aaa
mov
inc
sub
cmc
dec
lahf
leave
jge
xchg
mov
andb
pushf
jne
leave
sbb
bound
aaa
cmp
sbb
ds
add
jge
jg
jmp
cs
jno
fs
cli
lock
pop
add
lods
xchg
and
into
add
sub
lds
mov
and
notl
nop
xchg
shll
xchg
loopne
sub
xor
push
push
daa
mov
dec
stos
cmp
cmpsl
sahf
mov
aam
xor
loop
jae
sub
or
test
mov
dec
cmp
lds
lds
mov
mov
lcall
jl
mov
mov
push
into
cmp
xchg
ret
fcomip
lret
push
push
mov
pop
xlat
or
xchg
aaa
cmc
mov
push
sub
insb
push
negl
out
xchg
or
xchg
mov
mov
cmp
and
lahf
orb
dec
test
in
jb
pushf
or
mov
jbe
cmc
mulb
xor
ret
mov
test
cs
mov
push
or
xlat
mov
and
push
addr16
pop
xchg
clc
push
mov
inc
repnz
jbe
xchg
inc
pop
mov
xchg
and
ljmp
clc
xchg
mov
jecxz
arpl
les
xlat
mov
outsb
sub
add
xor
pop
test
mov
movsb
inc
push
fbstp
fwait
int
mov
pushf
inc
imul
lods
pop
add
xorl
or
push
leave
aam
mov
add
rclb
bnd
mov
das
sbb
jns
sbb
fst
dec
mov
xlat
mov
xor
arpl
enter
mov
mov
pop
mov
enter
daa
das
int
xchg
jns
es
cwtl
push
out
mov
decb
jns
js
cmpsl
gs
sub
add
mov
mov
dec
mov
dec
stc
cld
lahf
leave
pop
pop
cltd
das
mov
push
out
mov
or
stos
out
jmp
scas
popl
pop
mov
pop
jbe
ljmp
idivl
or
inc
es
and
les
sub
fsubp
mov
pop
mov
push
jge
popf
push
sub
mov
mov
adc
mov
outsl
clc
cwtl
cmc
es
in
sub
mov
rorl
push
mov
clc
int3
pop
loopne
xor
push
outsl
and
add
enter
icebp
fisttpll
shll
iret
mov
into
out
sahf
push
push
mov
and
or
push
mov
pop
jnp
push
or
mov
in
push
and
pop
imul
jne
negl
or
cmpsb
pop
aas
mov
and
iret
fsubs
in
gs
mov
ret
inc
out
dec
out
inc
adc
jae
mov
cs
scas
push
cmp
lahf
inc
outsl
fwait
inc
std
fstps
lods
jecxz
mov
pop
push
and
lcall
mov
repz
into
cltd
mov
mov
lcall
das
pop
into
jne
out
pop
ss
add
mov
scas
sub
fwait
jp
dec
dec
dec
jp
mov
push
sbbl
clc
repnz
dec
pop
or
outsb
das
cmc
scas
cmp
pop
mov
adc
jg
cmp
sbb
mov
clc
dec
xchg
push
push
adc
cs
or
in
inc
mov
lods
xchg
add
push
pushl
pop
cs
in
push
cltd
out
jmp
test
xchg
mov
stos
out
push
js
jg
jp
or
mov
ret
push
and
mov
mov
call
rclb
lahf
xchg
mov
into
insl
aad
mov
cmp
add
fwait
mov
ret
and
stos
jle
inc
lret
call
test
or
jb
les
dec
repnz
cs
in
add
mov
mov
iret
cmpb
xlat
cld
lcall
pop
push
mov
fsub
mov
adc
mov
in
mov
push
add
and
jp
rolb
psubsw
scas
loopne
test
adc
lods
xor
sub
test
stos
mov
inc
sahf
insl
xor
loop
xchg
lods
jecxz
cmpsl
das
lds
hlt
pop
cmp
push
inc
jp
lock
lcall
loope
ret
xor
sahf
icebp
in
xor
cs
mov
dec
aas
mov
inc
fcmovu
popf
jae
xor
sbb
cmp
adc
mov
ret
cltd
add
xchg
mov
mov
arpl
data16
icebp
cwtl
loop
inc
sub
test
mov
sub
cmp
sbb
lcall
xor
int3
xchg
xor
cs
imul
std
push
dec
jmp
mov
scas
je
ret
mov
shlb
mov
lcall
cmp
ret
cmp
scas
cmp
pusha
stos
lds
pop
jge
sti
subb
mov
sbb
lods
and
leave
adc
outsb
lds
fxch
jecxz
mov
out
cli
xchg
dec
adc
lea
into
push
xorb
adc
cltd
jg
cs
add
jae
xchg
cmp
enter
shrb
xchg
pop
rclb
popa
aas
mov
xor
addl
jo
scas
dec
mov
lea
sbb
cmp
out
fwait
mov
sub
dec
add
lret
and
xchg
mov
out
mov
and
rol
imul
shlb
inc
pop
sub
push
jl
xor
sub
cs
pop
jge
xlat
fucomip
mov
fimull
fs
stos
mov
out
sub
mov
aaa
mov
jne
sti
test
xor
mov
out
bound
mov
xchg
lods
loop
inc
je
cs
inc
mov
inc
stc
addr16
test
push
les
fnstcw
enter
aad
arpl
jns
adc
xchg
jo
into
outsl
cltd
mov
mov
in
jns
int
xor
xor
inc
push
xor
jb
daa
fistpll
repz
mov
add
mov
push
sahf
mov
mov
shll
and
aas
sub
bnd
mov
fwait
call
fidivs
ljmp
push
ja
in
je
rcl
pop
or
inc
jbe
das
movups
ficomps
and
pusha
sub
and
inc
dec
xlat
xor
mov
xchg
cmc
aam
push
pop
push
ds
mov
push
enter
arpl
xor
cs
sbb
dec
mov
mov
mov
sarl
sub
inc
sbb
inc
cmp
fwait
pushf
das
adc
pop
repz
adc
jge
cmp
repnz
dec
ljmp
test
xor
mov
xlat
pop
mov
js
and
cs
add
cwtl
xchg
and
dec
and
adc
or
pop
ficoms
mov
add
xor
jmp
and
pop
adc
lret
scas
mov
xchg
repz
push
bound
dec
push
jne
mov
stos
xor
cmc
jne
decl
mov
fwait
mov
lea
and
sub
mov
xor
out
addl
jg
pop
adc
mov
cmpsb
jmp
insl
int
hlt
mov
sbb
push
gs
test
xchg
push
insw
dec
cmpsb
mov
cli
fisubrs
dec
mov
es
out
lea
or
aad
gs
fadd
fists
sbb
adcb
cs
es
inc
addr16
insb
movb
dec
hlt
mov
lods
icebp
push
mov
fs
sti
sub
add
fstl
cmpsl
mov
pop
add
cmc
xchg
or
xchg
mov
repnz
hlt
and
aas
jp
inc
je
mov
add
out
inc
xor
mov
pop
dec
or
loopne
les
mov
loopne
call
std
sub
mov
jl
enter
idivb
out
cltd
sbb
jno
repz
pop
movsb
xchg
insl
cmpsb
jg
sub
jb
xchg
or
fldenv
push
mov
subl
cltd
xchg
cmpl
adc
sti
call
push
loop
mov
pop
mov
dec
loope
jg
cmp
movsl
add
mov
mov
cmp
xchg
adc
into
jecxz
xor
mov
mov
push
test
shlb
sahf
adc
test
stos
repz
mov
xchg
test
xchg
mov
sub
adc
popf
jb
movsb
xchg
pop
cmp
xor
bound
dec
sbb
xchg
push
add
pushf
test
imul
cmp
cwtl
ljmp
mov
insl
repnz
push
pop
jg
jbe
mov
mov
pop
jl
xchg
loopne
sbb
xor
xchg
sub
mov
sbb
jnp
mov
fisubs
mov
mov
mov
mov
inc
mov
xor
jno
mov
ss
out
xlat
pop
dec
mov
dec
xchg
adc
hlt
mov
sub
lds
mov
lock
push
pop
adc
hlt
aas
das
in
mov
xchg
mov
notb
daa
dec
jb
pop
inc
arpl
filds
jbe
xchg
xor
cltd
fldt
inc
cmc
leave
outsb
loope
frstor
adc
mov
stc
mov
cmpsl
sbb
fnsave
pop
mov
push
and
mov
data16
add
ja
inc
and
add
cmp
and
subb
sub
fbstp
sbb
mov
lea
sub
insb
mov
push
add
adc
pop
cs
push
add
gs
pop
xlat
sbb
loop
xabort
pop
jbe
mov
sub
push
jne
sub
push
sub
mov
or
push
pop
sahf
adc
cmp
mov
push
scas
dec
std
add
xchg
stos
mov
cs
xor
push
out
daa
sti
int
jp
mov
mov
repz
stos
dec
insl
add
pop
jg
daa
xchg
mov
add
in
xor
sbb
insb
mov
arpl
leave
pusha
add
push
aas
xor
roll
in
cs
cwtl
out
dec
inc
cld
call
ss
xchg
pop
sarl
scas
and
sbb
cltd
mov
or
adc
lods
fimull
int
mov
push
jnp
out
insl
mov
mov
dec
lcall
inc
xor
icebp
push
mov
xor
or
mov
xor
cmpsl
test
pusha
insb
cmp
lcall
mov
jmp
insb
push
repz
out
bound
xor
adc
in
mov
sti
fs
sbb
mov
fwait
mov
in
aam
mov
les
jecxz
cmc
mov
mov
insl
gs
test
mov
adc
ds
into
cwtl
fisubrl
add
dec
lret
or
push
test
imul
or
xchg
xor
xor
jbe
cs
cmpsb
iret
sub
icebp
jecxz
lods
fstl
mov
into
insl
push
cmc
jg
mov
mov
adc
jnp
bound
fisubrl
adc
add
adcb
cs
ss
inc
add
dec
adc
sub
mov
sbb
sub
scas
shlb
sub
fdivrs
mov
pop
addr16
test
dec
dec
jmp
inc
mov
inc
cmp
notb
push
cmc
test
xchg
xrelease
in
xor
aad
cltd
cli
int
dec
pop
in
jecxz
mov
pop
mov
add
sbbl
or
movsl
push
cmp
xchg
cmp
pop
out
jmp
xor
dec
out
jae
ja
fxtract
cli
and
or
nop
push
movsb
stos
add
pop
or
dec
mull
or
cmp
movsl
dec
ds
lret
xor
sub
leave
and
test
mov
push
push
push
aaa
rol
mov
add
or
or
in
sahf
xchg
and
scas
xchg
bound
sub
int
subb
mov
fwait
sbb
mov
sahf
mov
push
sbb
shll
test
adc
xchg
mov
mov
stos
sub
icebp
mov
subb
inc
js
shrb
gs
fldt
pop
pop
add
lock
and
mov
xchg
mov
xor
xorl
mov
movsb
push
jno
mov
loope
add
lea
int
jle
hlt
or
data16
push
orb
out
and
adc
divl
cmp
or
dec
jmp
aas
in
push
imul
mov
or
dec
inc
fwait
jl
iret
in
mov
iret
stos
imul
mov
xor
jle
mov
jb
jb
add
shlb
sarl
imul
sub
outsl
sub
aas
and
push
js
push
xor
cmpsb
movsb
dec
sbb
mov
or
rcll
sub
pop
xchg
sub
nop
push
and
mov
jp
orb
hlt
cwtl
pop
leave
in
mov
dec
mull
jno
jns
sbb
xchg
test
lds
pop
loopne
mov
into
arpl
into
call
jb
mov
jb
loop
mov
jae
pusha
into
mov
push
jg
ret
mov
adc
fwait
mov
jl
mov
in
data16
cs
fistl
std
xchg
or
inc
adc
lds
mov
add
pop
jno
lods
inc
mov
cmp
or
inc
push
cmp
mov
mov
cmp
lods
fs
es
iret
push
push
outsb
push
cs
sub
ljmp
outsb
mov
dec
cli
jbe
jo
test
imulb
stc
scas
cmp
mov
fs
sub
test
popf
adc
popf
adc
mov
pop
inc
das
out
mov
adc
fs
fimuls
push
mov
mov
cs
mov
mov
lods
inc
mov
int
cmp
xchg
fsubrs
cmp
jge
je
push
js
loop
scas
jbe
sbb
data16
mov
enter
addr16
cmp
andl
xor
stos
in
mov
adc
push
daa
out
leave
sub
out
xor
mov
push
shrb
iret
cmp
lcall
push
sub
jle
pop
mov
testb
xchg
push
sahf
dec
test
xchg
mov
frstor
push
out
mov
out
sub
mov
xor
cs
iret
or
repnz
es
ffreep
rcrb
popf
xor
pop
mov
loope
cs
push
jecxz
push
xor
fisubrs
jnp
sub
cmpl
es
popa
push
rorl
mov
frstor
pop
fldl
sub
lahf
xorb
imul
mov
and
sub
add
pop
ljmp
insb
inc
movsb
pop
repz
mov
outsb
mov
outsb
sahf
xchg
inc
cmp
movsb
daa
pop
shl
lret
sub
xchg
cmpsl
or
xchg
lods
xchg
pop
jne
iret
js
push
subb
loope
and
cmp
arpl
mov
push
stos
cmc
mov
xchg
add
cli
shll
lods
ja,pn
dec
pushf
iret
pop
test
jo
mov
push
add
mov
out
mov
cvtps2pi
pop
jbe
aas
fidivrl
enter
out
adc
mov
jl,pn
clc
pop
xchg
pusha
enter
mov
scas
mov
cmp
sbbb
xchg
popa
divl
dec
in
pop
sti
mov
xchg
mov
ds
cmpsb
mov
and
push
lods
loopne
adc
in
xchg
ret
cmpl
lret
mov
clc
mov
adc
mov
jne
sbb
das
mov
mov
sub
push
test
lea
insb
xchg
mov
in
dec
shrl
leave
lea
mov
insb
jge
push
mov
mov
std
inc
jne,pn
sub
push
fcmovnu
dec
push
push
jg
dec
mov
shrl
mov
test
sbb
adcb
xor
adc
add
stc
xor
mov
sub
push
cs
cltd
cmp
into
int
dec
stc
testl
push
jbe
sbb
mov
or
ss
in
jne
xor
scas
jnp
stos
xorl
imul
testb
je
mov
int
sbb
addr16
lds
mov
push
mov
iret
sub
sub
and
mov
gs
mov
pop
in
xchg
fbstp
mov
outsl
call
inc
lahf
popf
adc
pop
add
cmp
push
sti
stos
fimull
push
test
push
and
push
ss
inc
ja
aas
push
mov
cmp
cmc
xchg
lock
and
pop
nop
shrl
inc
xchg
pop
cmpsb
xor
pop
lea
adc
dec
add
mov
mov
sbb
andb
push
or
dec
mov
add
dec
in
mov
cmp
adc
lahf
xor
jne
cltd
jge
sub
lods
push
pop
lds
mov
mov
inc
adcb
add
xlat
xchg
or
and
mov
push
pop
rclb
jge
pop
push
clc
xorl
inc
repz
add
push
insb
mov
jg
push
adc
sub
out
test
pop
pop
cmpl
push
sahf
pop
insb
push
js
or
test
imul
xor
push
mov
fchs
mov
xor
dec
cmp
lret
jbe
add
push
mov
arpl
stos
imul
or
sub
outsb
loop
adc
loopne
mov
sub
sti
fstpt
mov
inc
ret
xor
jmp
cmp
pop
xor
add
fwait
and
rcll
stc
xchg
xor
lock
sti
addr16
addr16
cmpsl
fstpl
pop
pop
mov
cmp
call
xchg
add
jns
or
outsb
popa
jle
ficomps
mov
cs
dec
les
pop
bound
pop
add
add
mov
sbb
outsb
mov
lret
xor
jns
in
inc
dec
out
and
iret
dec
xor
inc
adc
xchg
cli
mov
pop
adc
adc
repnz
xor
xor
sbb
int3
inc
out
mov
dec
jbe
mov
subb
jle
lea
xor
xchg
movsl
pop
jle
fimuls
dec
push
sbb
lods
and
jmp
jmp
jbe
hlt
jge
mov
in
test
sub
je
mov
mov
cmpsb
and
mov
pop
jle
lea
jl
enter
mov
push
mov
popf
fiadds
push
ret
sub
mov
lret
and
ljmp
je
pop
cld
pop
mov
xchg
loop,pn
inc
xchg
jnp
pop
movsb
sub
repz
xchg
push
popa
in
stos
das
jl
cmpsb
xchg
fisubrs
lea
lea
cld
xchg
outsl
fsts
sub
les
sbb
jne
fnstsw
adc
mov
xchg
stos
push
dec
jmp
leave
out
adc
adc
pop
mov
mov
adc
push
cmp
mov
push
mov
fnstenv
inc
xor
pop
test
mov
arpl
mov
and
das
adc
lahf
jmp
mov
mov
jnp
push
in
dec
sbb
or
push
push
cli
into
jno
mov
dec
mov
cmc
out
insl
mov
pop
shlb
push
dec
arpl
push
dec
lea
jp
mov
mov
sbbb
dec
int3
aas
fcomi
cs
inc
dec
dec
imul
es
jns
clc
adc
mov
outsb
adc
and
xor
xchg
pop
out
adc
je
mov
add
fs
mov
xlat
in
ljmp
outsb
test
ret
mov
jmp
xlat
mov
pop
in
xchg
sbb
jge
xor
fucomp
jae
jno,pn
and
test
mov
notl
sub
rorl
cmp
sub
mov
pop
lock
test
dec
xchg
dec
and
mov
add
push
jne
xchg
in
lcall
scas
mov
scas
lods
in
aad
xlat
sti
incl
push
or
xor
repz
jmp
pop
fisubl
or
dec
add
or
les
fistpll
mov
fisubrs
push
and
dec
inc
das
add
cmp
clc
mov
jecxz
pop
sub
push
popa
pop
adc
movsb
mov
jmp
xor
xchg
or
incb
lods
cld
xor
mov
xor
push
xchg
xor
dec
mov
xchg
int
pop
lea
inc
adc
pop
fiaddl
cmp
test
bound
xor
loop
jbe
mov
fidivrl
out
and
cs
adc
cmpsb
lret
cld
xchg
es
mov
andl
sbb
sub
int3
jle
inc
adc
lods
aas
mov
mov
sub
aam
jle
push
sbb
hlt
je
jl
sahf
push
lret
inc
mov
fwait
mov
stos
lea
xlat
fidivrl
add
out
shlb
nop
das
fimull
or
pop
ljmp
dec
dec
xor
mov
mov
pop
shlb
int3
push
lods
nop
imul
mov
int3
outsl
inc
jg
jle
leave
cmpsb
sti
mov
aam
ret
jo
das
fsubl
mov
inc
sub
pusha
sahf
subb
dec
cld
xchg
jecxz
adc
jae
pop
mov
mov
cmc
sbb
adc
mov
fistps
stc
roll
fbld
pusha
mov
inc
jmp
sti
cs
data16
call
pop
inc
mov
cs
pop
ret
into
iret
adc
push
out
imul
adc
scas
add
mov
cld
outsl
es
cmp
fimull
sbb
jnp
mov
mov
loopne
or
out
in
pop
push
in
xor
es
scas
cmc
outsb
cs
inc
or
stos
pop
fsubrs
push
sar
mov
insl
test
cmp
or
mov
or
pop
xor
sbb
push
xchg
jns
fdivrs
test
out
out
cmpsl
sbb
mov
push
sub
leave
inc
xchg
insl
jb
loop
xor
lahf
mov
cmpsl
mov
add
cmpsl
mov
mov
sbb
jno
xchg
pop
cmp
orb
arpl
sub
subl
lret
repnz
mov
xor
ljmp
cmove
pop
xor
adc
loope
and
filds
adc
or
lods
out
xor
push
sub
roll
fs
adc
mov
and
cmp
or
inc
stos
push
jnp
mov
jo
dec
jecxz
xor
xchg
sti
sbb
and
pop
enter
out
imul
mov
mov
ret
pop
mov
mov
sahf
mov
cmpsb
stos
mov
data16
fcomip
dec
pushf
popf
ljmp
add
cmc
mov
and
adc
cli
iret
cmpl
pushf
pop
mov
dec
repnz
sbb
add
adc
cmpsb
xchg
sub
roll
adc
cltd
lret
mov
shrl
lea
lock
inc
mov
or
fisttpl
js
dec
ret
pusha
xchg
dec
and
int3
xor
lret
outsb
pop
adc
fwait
mov
xchg
into
sub
xlat
xchg
mov
jno
repz
int3
mov
add
dec
and
mov
in
xlat
inc
or
arpl
test
xchg
movsl
xchg
sub
jns
jnp
mov
dec
xchg
outsb
mov
out
lock
pop
mov
movsb
js
ret
push
inc
xchg
ret
aam
mov
pop
mov
cmp
shlb
arpl
or
mov
xor
adc
sti
cmp
xor
adc
cmp
jae
sub
inc
stos
push
jo
hlt
out
mov
pop
shrb
mov
sub
sub
repz
add
mov
pusha
mov
xorl
xor
imul
movsl
adc
mov
inc
inc
leave
int3
leave
int3
sti
cld
shrb
sub
stos
jne
pop
lret
mov
inc
call
movsl
mov
imul
sub
fldt
inc
cld
sub
cs
dec
mov
lods
imul
push
pusha
jecxz
cs
inc
sub
rcrl
nop
outsb
sub
sarl
push
ss
push
outsb
dec
pop
dec
sbb
xlat
lods
sbb
pop
clc
mov
push
mov
loop
mov
push
cmp
out
mov
or
mov
icebp
pop
outsb
jl
mov
jo
mov
or
jl
repnz
enter
jle
inc
insl
cld
mov
sahf
push
cmp
add
movsl
icebp
jo
js
cld
push
decl
cmp
int3
cmp
call
mov
pop
xor
and
and
popf
xchg
ret
int3
cmp
fstpl
jnp
mov
pop
rcrb
lds
inc
cmpxchg
or
or
cmp
jp
mov
in
jecxz
xor
or
xchg
jno
add
pop
mov
dec
dec
ret
mov
adc
jp,pn
add
or
pop
scas
out
and
movsl
out
push
mov
add
xchg
sub
pop
mov
sbb
pop
cmp
mov
and
lods
std
jl
repz
cmp
adc
aad
push
sub
adc
fisubrl
or
or
sbb
imul
sub
rorl
pusha
dec
fdivl
push
fldenv
call
ret
inc
and
cmpsl
pop
push
push
imul
mov
mov
fucomip
xor
aaa
cmp
iret
pushf
add
ror
cmpsb
cmp
push
pop
lahf
mov
arpl
ja
jbe
push
adc
jp
add
inc
jo
mov
aas
push
adc
pushf
mov
insl
xor
and
daa
xlat
cmc
push
lods
fcmovnbe
jae
xor
mov
das
jle
jl
pop
pop
cs
divl
imul
outsb
dec
out
cmp
mov
sbb
outsl
mov
push
or
xchg
xchg
aam
xchg
adc
outsl
enter
jnp
push
pop
inc
jne
movsl
pop
in
cs
fs
lcall
xchg
pushf
push
aas
mov
cmp
xchg
push
cld
push
pop
mov
jb
xchg
xchg
push
fs
cs
in
pop
aam
fnsave
inc
imul
or
inc
push
jno
pop
jns,pn
arpl
jns
je
sbb
idiv
jmp
xor
pop
ja
push
dec
sbb
shr
pop
or
xor
jnp
inc
push
mov
jae
and
cmpl
jb
adc
jecxz
push
jle
outsb
xchg
fiadds
adc
aaa
mov
cmp
pop
pop
sub
adc
data16
es
enter
dec
ljmp
jg
int3
pop
xchg
ds
pushf
clc
das
mov
pop
outsl
sbb
jg
nop
pmulhuw
test
popf
div
mov
sub
lahf
bound
mov
rcrb
test
lret
lods
xchg
mov
sub
addr16
cs
jb
sbb
push
add
sti
xchg
ds
mov
sbb
adcb
bound
add
fs
arpl
cmc
fistpl
inc
jo
mov
pop
and
xchg
cltd
inc
push
jmp
in
pop
jae
add
pop
mov
mov
xor
mov
jae
outsl
and
adc
push
jne
mov
add
rclb
je
das
xchg
pop
jecxz
mov
add
mov
andb
mov
fmuls
mov
imul
jg
imul
xor
ror
mov
mov
xchg
sahf
dec
movsb
enter
pop
and
inc
inc
inc
sub
mov
mov
ret
xlat
jl
mov
push
mul
popa
fisttpll
xchg
dec
aad
popf
lret
inc
sub
xor
fdivl
jbe
lock
mov
clc
pop
dec
push
leave
mov
or
js
adc
lea
and
xorl
call
jns
movsl
das
xor
adc
xor
and
mov
sub
xor
or
loope
mov
pop
mov
fbld
cmp
sub
xor
add
jmp
or
int3
xchg
jbe,pn
or
mov
cs
or
nop
push
fcoml
jg
inc
scas
lea
mov
mov
dec
mov
inc
nop
pop
pop
jo
push
ss
xchg
mov
jle
dec
jae
xchg
xchg
test
xchg
mov
mov
cmpsb
xchg
outsl
decb
outsb
jmp
ret
mov
dec
ret
lcall
mov
inc
cwtl
addr16
mov
xchg
daa
cs
inc
xor
xchg
mov
pop
stos
pop
cmc
add
daa
icebp
xchg
js
aam
adc
hlt
mov
adc
pushf
les
xchg
out
cli
ds
ficoml
ljmp
dec
in
fisttps
dec
push
dec
cs
or
xor
push
nop
xor
push
mov
pop
nop
xorl
jge
jmp
mov
repnz
out
mov
xor
nop
push
in
add
mov
pop
pop
pop
inc
inc
cltd
cmpl
or
jae
pop
nop
rcll
loope
test
rcrb
sbb
xlat
dec
xor
daa
aas
cmp
adc
aaa
mov
add
lea
mov
mov
rcl
push
mov
push
xor
add
cmp
sbb
adc
int3
imul
sbb
lret
sub
mov
add
xor
mov
out
sub
inc
sbb
xchg
push
cmp
jge
inc
inc
scas
data16
mov
pushf
mov
add
push
sub
push
mov
pop
jmp
rorb
loop
push
cs
pop
add
ss
pop
push
call
aas
mov
cmp
push
loop
and
or
and
cs
loopne
or
fdivl
out
cltd
xchg
das
out
sarb
mov
jle
pop
fs
in
mov
adc
sub
std
add
mov
icebp
outsb
push
cld
test
loopne
xor
lock
mov
cwtl
imul
mov
mov
pop
pop
mov
lods
push
or
ja
adc
movsb
das
dec
cs
test
out
jo
and
dec
mov
and
xchg
adc
mov
xchg
and
xchg
pop
cs
push
mov
inc
lahf
sub
sbb
cmp
aas
xchg
pushf
inc
cmp
cs
xchg
mov
je
cs
mov
popf
cmp
cs
sbb
sub
cmc
mov
dec
dec
inc
repz
mov
fdivs
gs
and
mov
pop
add
fcomp
pop
sub
jae
ja
sbb
mov
mov
sbb
or
out
aaa
mov
mov
ljmp
dec
stc
addr16
xchg
ljmp
xor
cs
loopne
outsl
outsb
add
aam
sub
into
xchg
xor
nop
ret
add
pushf
lods
mov
sbb
xor
adc
xchg
adc
pause
sbb
into
and
xchg
add
loop
ds
lret
roll
mov
call
mov
cs
aas
push
insb
xchg
mov
scas
sbb
mov
fisubrs
pushf
adc
pop
add
loopne
dec
cmpsl
lock
out
jge
and
int3
or
jmp
in
sub
or
sahf
nop
inc
add
xchg
mov
jmp
bound
adc
mov
test
clc
ds
lahf
or
cmp
pop
or
pop
inc
inc
and
packuswb
insb
ja
inc
in
mov
cmp
push
jne
into
dec
popa
jge
insl
jnp
xchg
sarl
or
jecxz
adc
pop
fsubrs
xlat
xor
pop
hlt
inc
je
or
or
into
inc
xchg
jnp
xchg
push
mov
mov
xor
inc
test
adc
or
mov
aad
push
in
nop
fistl
ss
dec
mov
mov
inc
inc
jb
repnz
push
int3
testb
loopne
adc
and
movsl
push
mov
dec
rorl
jbe
adc
sbb
sub
fisubs
push
jg,pn
dec
loopne
out
mov
mov
ljmp
movsl
lods
mov
or
jecxz
inc
bound
mov
push
pop
pop
xchg
fadds
ljmp
jle
mov
cmpsl
flds
jge
sub
out
xchg
mov
insl
fistl
fsubp
xchg
add
and
mov
xchg
mov
jns
push
sub
shrl
xchg
push
fldt
or
loop
inc
cmp
lret
cmp
popa
cmpsl
jb
mov
outsl
rcll
push
lock
jno
sub
inc
xchg
dec
dec
pop
mov
mov
lea
dec
cmp
sub
cmpsl
aad
or
xchg
lock
jecxz
cmp
pop
cs
fwait
push
dec
mov
add
pop
and
dec
mov
or
push
ret
mov
loopne
mov
bound
pop
xchg
addr16
add
std
icebp
mov
add
sub
sub
dec
xchg
push
bound
cld
push
cmp
aas
fiaddl
mov
dec
mov
mov
pop
dec
loopne
or
mov
fildll
je
pop
shrb
je
add
sbb
les
xor
mov
test
jnp
outsb
cli
or
dec
out
push
stos
fsubrs
mov
cwtl
lods
xlat
jecxz
jle
sub
mov
and
lcall
pop
pop
shll
jle
push
pop
mov
ljmp
xor
fs
mov
aam
xchg
jge
fwait
std
shrl
adc
inc
orb
cli
rcrb
adc
mov
bound
imul
push
lds
gs
jg
xor
cwtl
roll
jo
aam
in
repnz
xchg
or
clc
call
mov
test
aas
aas
adc
fst
stc
push
sbb
jl
push
addr16
xor
cs
push
les
mov
addr16
mov
je
jmp
jno
xlat
mov
or
imull
mov
int3
sub
and
push
dec
sub
xor
lods
adc
push
fdivr
or
das
mov
and
les
adc
fucomp
push
xor
mov
sbb
lret
jle
mov
jp
xchg
or
jbe
shlb
jecxz
jns
out
sub
xor
sub
jbe
mov
add
push
aad
xor
cmp
rcrb
adc
fwait
and
pop
insb
out
sarb
repz
xor
ss
imul
cmp
xchg
sub
sbb
stos
mov
sub
lret
popf
bound
cs
fstps
adc
dec
mov
ret
ret
sahf
xchg
lret
pusha
cmp
aad
pusha
dec
mov
scas
inc
xorl
or
mov
add
iret
mov
scas
inc
roll
dec
aam
jnp
ja
clc
adc
pop
mov
clc
outsl
xchg
mov
and
lock
and
cmpsl
jmp
mov
inc
dec
das
fcompl
cli
xor
mov
setp
sub
nop
gs
and
and
sub
inc
xor
js
jg
xor
sarb
mov
add
cmp
hlt
push
lret
and
jl
fwait
pushl
test
add
add
orb
mov
lds
out
cs
adc
adc
cmp
dec
mov
stos
es
and
pop
adc
inc
and
cld
push
cmpsb
cmp
push
test
aad
mov
sti
je
cs
or
and
dec
cltd
xlat
js
mov
pop
mov
addr16
fdivp
stos
xor
inc
cmp
es
mov
xor
mov
push
rep
cmpl
fidivrl
lea
rcll
sti
push
push
pushaw
xor
inc
pop
arpl
lock
and
insb
xchg
nop
bound
roll
and
aad
inc
and
mov
inc
dec
repz
mov
in
cmpsl
push
push
imul
mov
repz
clc
xchg
call
aas
movsb
mov
push
xchg
movsl
adc
xchg
rorl
jmp
lret
rcrb
mov
and
test
stc
jbe
nop
mov
popf
adc
cmp
bound
and
cld
adc
pop
sub
mov
enter
jae
fmul
sub
mov
gs
imul
imul
sti
sarb
xor
sbb
test
xor
ficoml
jbe
mov
fs
push
xchg
sub
fs
test
sahf
out
mov
jnp
out
or
imul
ja
adcb
lret
dec
sub
xchg
popa
push
pop
movsb
push
inc
icebp
xchg
popa
test
je
dec
adc
cmpsb
jl
xchg
cs
dec
xor
mov
fsubl
push
pushf
int
xor
test
notb
call
or
sub
and
push
mov
mov
mov
sub
mov
cmp
and
lods
dec
add
rcll
fdivrl
hlt
lret
sbb
xorl
push
mov
push
repnz
or
dec
dec
add
inc
cmp
jno
into
sbbb
lods
mov
clc
dec
jmp
push
mov
bound
pop
sbb
mov
push
test
push
xor
cmp
icebp
in
cs
and
jnp
add
imul
fst
and
sbb
adc
cli
adcb
dec
into
inc
dec
sub
push
push
dec
sbb
loopne
lret
cmc
outsb
divl
xchg
dec
stos
push
cmc
dec
jo
xorl
mov
dec
enter
ret
mov
outsb
mov
push
clc
xchg
add
es
push
jbe
mov
fwait
and
sbb
cmp
adcb
cmp
xchg
iret
mov
ret
dec
push
enter
aad
xor
jle
cs
pop
stos
mov
xor
shlb
inc
xchg
das
mov
mov
xchg
fsubl
sbb
pop
add
mov
inc
out
push
in
add
mov
xchg
stc
pushf
movsl
adc
push
outsb
mov
inc
pop
pop
fsub
xchg
in
adc
sub
or
xchg
sbb
flds
and
xchg
mov
xchg
and
inc
xchg
cs
movsb
shlb
pop
mov
dec
push
movsl
fstpt
mov
push
sub
sbb
cmp
popf
push
cs
add
lret
lret
adc
pop
mov
jbe
xchg
jae
jmp
or
and
pop
out
rcr
mov
loop
add
movsb
ljmp
lret
fidivrs
leave
jmp
jmp
mov
inc
mov
in
cmp
mov
fwait
negb
add
stos
pushf
adc
fs
cwtl
xchg
inc
aaa
je
mov
pop
and
xchg
fwait
xor
or
xor
add
xlat
fs
jns
enter
push
gs
or
xchg
push
or
lods
adc
xor
fldcw
lods
push
movsl
mov
mov
in
push
insl
ljmp
divl
fiaddl
sbb
xchg
xchg
int3
pop
jb
lds
mov
out
pop
test
jp
imul
dec
xchg
xor
adc
fwait
test
pop
call
jle
xchg
icebp
mov
adc
sti
xchg
ja
or
sbb
sub
xchg
ret
inc
mov
mov
stc
inc
aaa
imul
push
es
mov
cwtl
lret
popf
gs
dec
movsl
adc
xchg
mov
cmp
fpatan
dec
jmp
loope
or
xchg
adc
sub
fwait
leave
stc
mov
ret
in
cltd
int3
xchg
jno
jnp
test
pop
imul
shll
leave
mov
sub
mov
push
xchg
mov
addr16
dec
out
sub
scas
jno
xor
leave
mov
mov
sub
and
push
cmp
add
aad
pop
lahf
cmp
in
sub
dec
mov
int
sti
add
popf
pop
xor
sbb
add
daa
jbe
dec
mov
dec
mov
xchg
and
fcoms
push
xchg
or
jmp
or
inc
das
scas
push
mov
cli
xor
cld
mov
sub
subl
ja
sarl
mov
repz
inc
cmc
mov
mov
notb
mov
xor
mov
mov
pop
sbb
mov
xchg
xor
dec
cmp
pop
sub
outsb
adc
out
cltd
sarb
div
mov
sbb
outsb
movsb
xchg
fbstp
mov
mov
arpl
mov
mov
cltd
xor
sbb
pop
dec
xor
ss
pop
mov
test
xchg
pop
push
lahf
or
mov
add
aam
or
testl
insl
dec
call
je
fstl
aad
popa
pop
popf
xor
cmp
sarb
arpl
cwtl
push
or
lock
jo
addr16
mov
addl
call
jmp
test
xchg
addr16
pop
jo
orl
mov
les
movsl
jecxz
ss
mov
jle
hlt
loopne
lcall
mov
loopne
xchg
mov
add
xor
xor
test
xorl
cli
aaa
jae
stc
jno
mov
nopl
sub
and
aad
mov
cld
popa
fadds
mov
ja
in
inc
lock
adc
imul
repz
sub
mov
les
add
xchg
addl
test
xchg
mov
lret
mov
enter
inc
fisttps
sub
cltd
jg
sub
pop
xchg
push
xchg
sti
or
rorb
mov
adc
in
addr16
mov
lret
hlt
imull
jne
int3
mov
in
mov
add
sti
nop
adc
fidivrl
std
std
dec
inc
shrl
stos
push
int
dec
bound
cmpsl
mov
xchg
adc
dec
push
add
xor
mulb
int
testl
mov
js
xchg
fwait
pop
hlt
sti
repnz
or
lds
cld
fistl
scas
dec
sti
mov
xchg
sub
pushf
adc
mov
jb
in
push
les
sub
das
pop
cld
jle
add
add
sbb
lret
iret
psubd
lahf
jbe
sbb
mov
push
clc
push
ds
std
les
cmpsl
inc
cs
dec
xor
loopne,pt
repnz
ja
fs
or
push
or
mov
mov
mov
jno
cs
lods
xchg
jmp
cmp
mov
repz
imul
pop
sahf
iret
je
icebp
xor
mov
sti
jp
in
movsl
into
into
push
jae
inc
sarl
faddl
jne
cmp
sti
sub
xor
dec
adc
xor
dec
dec
sub
lock
xchg
scas
enter
pop
mov
test
sarl
pop
xor
gs
rcrb
ss
fsts
jl
lahf
mov
les
das
xor
jb
lods
add
les
inc
adc
and
jmp
xchg
in
mov
out
xchg
int
mov
loope
fdivs
in
das
adc
push
arpl
iret
mov
shrl
pop
leave
mov
xor
adcb
cmpsl
pop
dec
leave
jg
ljmp
aaa
sahf
pop
mov
xlat
into
adc
pop
mov
sub
cltd
sbb
cmc
push
mov
ja
xchg
xchg
scas
aad
enter
lock
adc
push
pop
inc
dec
arpl
cs
test
call
cld
cltd
xor
je
scas
sbb
and
insl
jp
jl
jl
dec
sbb
cmp
sbb
aam
mov
cld
mov
fcmovnu
cmp
jmp
jl
repnz
mov
cmc
xchg
outsl
jns
push
into
xor
adc
mov
push
inc
nop
push
jns
xchg
mov
dec
add
mov
fiaddl
aas
les
mov
push
and
mov
push
jmp
lea
sbb
fcompl
ficompl
xchg
les
bound
insb
out
mov
push
jmp
mov
cmp
sbb
repnz
repz
fldl
add
jb
mov
adc
xor
jo,pn
cmp
sub
insb
jbe
adc
fldenv
push
dec
leave
clc
insb
add
xor
xor
mov
repnz
jns
stos
push
and
cs
sbbb
shlb
mov
cmp
jnp
inc
xlat
mov
push
jmp
adc
jbe
push
dec
sub
mov
mov
sub
jne
lods
adc
lret
and
es
adc
mov
cs
and
pushf
rcll
add
sahf
insl
movsl
cmp
inc
fcmovu
in
fisttps
icebp
ljmp
clc
xor
fucomp
out
add
cmc
cltd
add
sbb
xor
scas
dec
stos
jbe
push
xor
in
xchg
imul
test
icebp
adc
mov
push
inc
push
outsb
mov
roll
jl
insb
lahf
inc
out
sbb
sbb
jno
jmp
stc
inc
pop
lods
cmp
inc
sbbb
das
or
gs
push
jne
and
mov
push
push
jle
add
push
cmp
jp
mov
push
jge
inc
insl
mov
or
cmp
dec
mov
sub
xchg
mov
add
sahf
or
dec
les
xchg
jns
pop
test
mov
adc
xchg
es
ss
push
xchg
fwait
js
xor
test
xchg
rcll
cltd
loopne
sbb
mov
adc
push
sbb
inc
cs
mov
ret
dec
loop
les
daa
cltd
pop
inc
adc
xor
mov
cmp
dec
mov
lods
adc
mov
sbb
and
pop
in
jne
andb
add
add
stc
sbb
aaa
pushf
mov
fsubs
imul
pop
adc
dec
sahf
les
mov
adc
and
lods
pop
out
mov
ss
and
popa
xlat
mov
or
iret
or
enter
ret
adc
ja
mov
cmp
pop
lds
mov
out
mov
sub
loope
add
mov
pop
ds
mov
sbb
mov
mov
push
js,pn
movsl
fadds
cs
push
xchg
add
fisttps
test
xchg
sub
xchg
and
fisubrs
mov
fldl
adc
stos
sub
vsubps
mov
loop
lock
mov
mov
shrb
mov
outsl
push
dec
cvtps2pi
xor
adc
fimull
mov
or
mov
bound
push
call
xchg
mov
push
fmuls
movsl
fiadds
cmpsl
cli
mov
jno
inc
mov
inc
jne
jne
push
outsb
bound
jecxz
inc
xor
jge
push
iret
mov
cld
outsb
insl
cmp
xchg
cmp
aam
ljmp
mov
or
dec
loopne
das
mov
adc
jecxz
add
shlb
or
adc
repnz
cld
mov
rolb
and
push
mov
scas
mov
idivl
sub
pop
xchg
jge
pop
xor
fidivrs
mov
repnz
push
mov
add
add
out
call
jg
hlt
popl
pop
push
fs
sbb
mov
pushf
fcoms
stos
or
xchg
sub
aaa
inc
add
mov
mov
test
xchg
dec
fwait
outsb
inc
push
pusha
push
inc
mov
lret
mov
pop
cmp
xor
sbb
jle
jge
imul
mov
and
push
mov
inc
mov
mov
and
into
aad
xchg
xchg
cltd
and
sub
cmp
int
stos
xchg
adc
mov
xor
mov
push
xor
sbb
mov
cmp
and
gs
stos
push
ja
mov
arpl
or
imul
adc
xchg
lea
std
xchg
psubd
or
test
mov
push
or
and
outsl
mov
mov
xchg
mov
xor
inc
mov
pop
fadds
pop
scas
mov
and
repnz
mov
pop
iret
mov
mov
or
pop
xor
sub
jecxz
push
das
xchg
lret
gs
mov
sbb
ret
push
mov
mov
mov
pop
sub
ficomps
mov
mov
sub
pop
in
adc
push
pop
ss
adc
cli
or
or
sbb
in
adc
scas
subl
cltd
sti
lcall
lock
cld
test
imul
addl
inc
adc
push
adc
in
out
mov
sti
or
cmpsl
lret
sub
dec
mov
sar
or
lods
movsl
das
jmp
sub
popf
lcall
jb,pn
add
xchg
and
add
scas
test
mov
xchg
pop
xchg
aam
mov
and
outsb
roll
jp
ret
push
cmpsb
xor
pop
push
mov
ja
aad
lret
inc
jno
sbb
test
mov
sbb
dec
test
mov
adc
imul
sbb
adc
pop
mov
mull
add
push
fwait
es
mov
jb
sahf
or
es
inc
mov
jecxz
lods
jl
jbe
mov
rcll
mov
test
push
push
loop
push
mov
ret
pop
add
mov
adc
xor
xchg
mov
push
scas
pushf
and
or
mov
jge
cmp
cmp
xchg
sahf
ds
mov
mov
mov
xchg
dec
inc
mov
popl
ljmp
imul
push
add
mov
push
pop
repnz
inc
pop
cli
stos
dec
ss
loope
adc
scas
loop
pop
mov
push
test
dec
sti
test
adc
and
stc
cs
xor
push
add
lret
stos
sub
fcoms
cli
mov
add
cmp
xchg
imul
or
imul
repnz
push
or
push
dec
jo
jge
cmp
ljmp
jp
xchg
cs
adc
into
push
push
loop
ret
dec
push
push
sbb
lret
out
cld
popa
and
test
inc
test
scas
jb
xchg
xor
nop
and
xchg
xor
test
dec
and
mov
das
sub
aaa
jp
mov
cs
rclb
sbbb
outsl
pop
ret
cwtl
pop
pop
jno,pn
inc
shrb
mov
push
mov
jl
pop
clc
outsl
je
xchg
and
insl
jg
jge
push
loope
inc
cmpsl
fldl
mov
xchg
or
xchg
pop
mov
sbb
outsb
cmp
mov
inc
das
pushf
sub
cmp
mov
je
mov
push
push
and
jp
xor
sbb
adc
pop
getsec
fildl
or
mov
jmp
dec
cli
ficoms
fadds
ror
xlat
fcmovu
cmpsl
mov
inc
xlat
lret
jge
jg
shr
out
iret
shr
data16
inc
movsl
int3
mov
jecxz
in
pop
std
fcomps
sbb
ss
stos
clc
xchg
lahf
das
mov
mov
xchg
mov
loop
mov
cmc
loope
mov
nop
mov
fisubs
xchg
mov
rcll
mov
xchg
sbb
cmc
xor
and
jge
cmpsb
add
movd
leave
outsl
inc
shll
leave
push
lods
pop
repz
int3
or
push
mov
movsb
mov
repnz
push
jb
out
sbb
das
cmp
push
pop
mov
jnp
or
xchg
fldenv
mov
push
lcall
cmp
jecxz
aaa
mov
adc
scas
inc
sbb
ss
mov
push
add
loopne
and
lahf
xor
mov
repnz
mov
fisubs
push
xchg
cli
out
lea
divl
leave
in
jo
xchg
cmc
jne
aad
out
adc
lock
hlt
lret
lret
lock
scas
sbb
lods
xchg
mov
or
mov
sub
mov
test
jmp
fcompl
imul
ds
loopne
mov
std
pop
jne
or
push
rcl
jb
xor
jg
xchg
or
int
add
lret
mov
bound
loope
pop
arpl
rolb
ret
cmp
sti
cld
jb
outsb
loop
jne
or
stc
or
out
jge
mov
cmp
cs
pop
adc
sti
pop
dec
cwtl
cmp
add
fiadds
gs
js
test
mov
adc
mov
pusha
xchg
std
imul
negl
frstor
add
popf
xchg
xchg
inc
sub
xchg
mov
adc
xorb
mov
cmp
xor
and
xchg
mov
mov
or
mov
mov
sbb
sbb
cmpsl
pop
pusha
lea
xchg
inc
and
mov
adc
xchg
jns
stc
outsl
jne
mov
jge
mov
sbb
pop
faddl
cli
adc
incb
imul
xchg
outsl
cmp
pop
jo
jecxz
mov
mov
jbe
fcomip
jb
je
mov
std
stos
jae
mov
mov
cmp
popf
scas
js
cltd
insb
jge
xchg
sub
jmp
lea
xlat
dec
bound
cmp
mov
pop
pop
cmc
mov
adc
inc
push
fwait
ljmp
adc
xchg
loopne
and
cli
inc
lods
dec
pop
adc
xor
jb
cs
insl
jl
xor
out
out
and
cli
dec
and
decb
sub
push
insl
pop
sub
jle
or
leave
aaa
add
sti
add
adc
sub
xchg
pop
mov
inc
adc
fcoms
cs
or
mov
out
popa
ljmp
mov
xlat
push
pop
test
add
shr
insb
xlat
mov
sub
inc
add
pop
sub
adc
enter
int3
sbb
stos
adcl
insl
pop
pop
xchg
idiv
filds
lods
pop
mov
pop
xchg
pop
add
mov
pop
xchg
mov
cmp
mov
mov
push
mov
or
xor
repz
mov
lods
cmpl
addr16
xchg
movsl
cmp
cmp
fwait
inc
cs
pextrw
adc
sarl
fcoms
out
cmc
push
xchg
ljmp
int
ror
rorb
inc
and
or
and
sub
pop
sti
fsubrp
push
iret
popf
jo
lret
xchg
insb
mov
lcall
mov
jp
mov
add
lds
inc
add
mov
xor
mov
xor
sbb
push
adc
pop
push
popa
mov
notb
sub
pop
lret
mov
add
dec
add
cs
adc
lods
cmp
lcall
imul
mov
stc
push
sub
push
vpackuswb
cmp
add
fs
dec
fpatan
stos
dec
jmp
aad
jb
adc
mov
xor
in
pop
mov
in
fildl
lods
test
or
fimuls
out
insb
xchg
cmp
xchg
fwait
ud1
jo
aas
scas
cwtl
or
dec
mov
xor
lods
sub
out
dec
out
std
es
xchg
mov
in
and
xchg
lret
lret
ljmp
cld
loop
arpl
ret
scas
xchg
push
xchg
icebp
dec
mov
fistpl
mov
cli
xchg
cmpsl
in
aad
fiadds
out
testb
push
adc
aas
lods
js
test
je
mov
and
jg
js
mov
in
lock
inc
add
and
mov
or
mov
std
sub
mov
ljmp
rorl
mov
es
or
loopne
in
hlt
sub
es
iret
push
ret
mov
repz
add
inc
or
scas
dec
mov
xor
fidivrl
pop
lods
mov
popf
adc
test
cmc
subl
stc
cmp
test
out
sub
lea
stc
cmpsl
push
mov
push
cmp
push
and
fnstsw
subb
and
mov
push
sbb
or
inc
pusha
sub
insb
mov
xor
xor
std
and
or
mov
adc
push
xor
cmp
sbbb
sub
sbb
mov
push
ret
stc
xchg
add
int
ficompl
or
xchg
dec
push
loope
clc
arpl
fnsave
out
sub
popf
imul
sbb
ds
scas
dec
movsb
je
add
cmpb
sarb
cmp
adc
loopne
ret
xchg
pop
shlb
popa
into
call
mov
inc
or
jp
out
roll
fs
or
test
int3
fiaddl
js
mov
repnz
inc
mov
cli
mov
and
jge
std
jl
jb
xchg
aas
lods
add
mov
mov
cmp
sub
sbb
into
in
and
js
icebp
fidivl
lahf
std
sub
mov
je
imul
enter
mov
fsubrp
jg
or
pcmpeqw
imul
jmp
stos
in
bound
jb
sub
or
fdivr
adc
cmpsl
or
lods
xchg
dec
pop
fwait
pop
stc
adc
jb
jns
es
push
cmpsl
dec
mov
or
rol
mov
movsl
cmp
cmpb
int3
in
jae
sub
push
sbb
cmpsl
fs
std
shrl
out
fcmove
lcall
call
push
jae
mov
push
sub
cmpsl
xchg
cmp
mov
xchg
pop
in
iret
and
xchg
icebp
adc
mov
pop
and
dec
dec
lods
xor
jb
pop
or
or
fsub
jnp
shll
or
adcl
mov
cmpsb
loop
dec
std
shlb
adc
jo
arpl
add
cli
push
sub
mov
jae
xor
mov
out
pop
and
loop
icebp
pop
xchg
adc
adc
sub
jb
cmp
sarb
shl
xchg
push
adc
jmp
mov
loop
push
mov
push
jo
fdivl
inc
xor
repz
cli
inc
cmp
es
cli
mov
mov
into
sbb
nop
add
cmc
inc
mov
dec
leave
xchg
xchg
aad
xor
mov
cltd
sbb
push
xchg
sub
test
sub
cmpsb
repz
js
lods
pop
cmpb
sbb
mov
add
adc
mov
loope
mov
inc
dec
jne
fstps
xlat
movsb
add
jae
cltd
or
in
mov
clc
in
icebp
stos
andb
xor
xchg
js
je
int3
fwait
adcl
cmpsl
and
inc
xchg
xchg
movsb
in
movsb
and
pop
jge
sar
xor
pop
fcmove
repnz
sbb
sub
jge
imul
dec
add
out
es
mov
and
add
aam
and
adc
mov
jp
mov
lods
push
fcoml
std
mov
sub
test
mov
leave
setge
cld
sbb
out
xor
or
stos
imull
prefetchwt1
mov
gs
mov
cwtl
out
aaa
ja
sbb
inc
mov
xor
aas
inc
xchg
cwtl
xchg
or
fxch
clc
sbb
xor
insb
icebp
dec
out
das
inc
mov
sbb
mov
sub
xchg
jmp
xor
adc
je
outsb
iret
cmpsb
mov
inc
xchg
xchg
roll
int
aas
or
cmc
sbb
hlt
in
lret
mov
stos
mov
sbb
lea
sub
shll
sbb
and
push
int3
scas
fists
xor
outsb
data16
push
bound
xchg
lret
dec
ret
outsl
outsl
lods
loopne
loopne
xor
add
icebp
icebp
xorb
cs
mov
ret
flds
sub
or
rolb
push
jg
pop
inc
push
pop
jne
fsubrs
fnsave
push
enter
arpl
xor
pop
add
addr16
leave
mov
adc
dec
notb
adcb
jge
callw
movsb
sbb
and
mov
ja
xchg
lea
push
js
cld
lret
lods
mov
push
xor
imul
push
lods
insb
jnp
addr16
into
mov
mov
sub
mov
xchg
jmp
xlat
dec
cmc
sub
or
lret
xchg
in
adc
push
lcall
push
scas
mov
aaa
data16
stc
imul
pmuludq
mov
push
add
sbb
addl
mov
sub
movsb
pop
daa
and
jmp
sbb
jmp
lcall
push
cmp
pop
inc
pop
iret
xor
fbstp
mov
inc
adc
test
adc
stos
mov
das
stos
jmp
dec
sub
or
cwtl
xchg
mov
repnz
mov
jb
jo
push
xchg
jg
push
sub
shrl
pop
pop
insl
xor
xchg
sbbb
pop
mov
in
push
sub
imul
mov
test
cmpsb
xor
push
test
imul
ds
js
push
xchg
push
sar
inc
push
iret
inc
jo
fisubrs
add
xlat
mov
lret
je
sti
lret
pop
int3
sbb
mov
mov
adc
sub
fisubs
push
xlat
js
lods
lret
std
ret
fstp
ret
popa
lret
sarb
gs
shrb
gs
rclb
gs
je
psrld
gs
push
rcrb
gs
gs
shlb
gs
cli
xchg
and
lea
or
mov
sbb
mov
mov
mov
lds
inc
out
in
mov
mov
js
fcmovnu
xchg
mov
loop
lods
sbb
mov
mov
sub
push
and
adc
jno
fcomps
orb
insl
shlb
or
push
scas
adc
inc
mov
adc
in
dec
inc
cmc
pop
jnp
ficoms
popf
dec
push
xchg
mov
std
push
test
pop
cwtl
sbb
mov
xchg
dec
test
push
repz
sub
add
fdiv
pushf
xchg
xchg
int
push
push
push
and
lret
adcb
mov
lret
push
mov
jle
jl
data16
int
lea
jge
jmp
pop
testb
cmp
data16
negb
icebp
orl
out
pop
inc
loopne
dec
dec
into
stc
orl
imul
add
adc
pop
scas
adc
xor
adc
stos
cltd
test
cmpsb
and
stos
or
stos
dec
mov
fsts
mov
hlt
and
sbb
pop
insb
sti
cli
or
mov
xchg
mov
test
sbb
or
nop
lods
subl
pop
inc
into
cmp
xlat
xlat
dec
mov
sbb
cmpsb
adc
mov
mov
add
add
mov
lret
repnz
xchg
popl
mov
test
mov
stos
stos
mov
stos
out
mov
and
xchg
pop
and
mov
xchg
loope
xchg
cltd
popa
imul
loope
push
adc
stc
pop
pushf
adc
in
sub
in
mov
cs
imul
lret
arpl
loopne
push
cmp
ds
adc
into
jae
pushf
inc
roll
jb
ret
cmc
ficompl
xor
push
call
in
push
and
push
test
inc
push
mov
mov
je
mov
sbb
cmp
xlat
aad
cmp
lret
or
dec
out
push
daa
hlt
sub
fnstenv
cmc
aas
fstl
mov
inc
aad
mov
sbb
push
ljmp
push
aaa
in
mov
push
loop
push
fmuls
xchg
repnz
test
or
mulb
sub
in
mov
repnz
sub
icebp
jl
fld1
lahf
xchg
push
lods
bnd
les
dec
aad
jno
cmpsl
mov
push
out
push
dec
testl
mov
test
dec
and
xchg
bswap
push
mov
cmp
pop
pop
mov
dec
movsb
jl
dec
xchg
dec
jmp
xor
iret
std
jne
shrb
subl
adc
cli
xchg
out
push
mov
push
mov
imul
inc
cli
jg
shll
sbbl
pop
mov
inc
mov
stos
and
fstpl
cmc
cmp
dec
cmp
pop
popf
lea
push
fldt
enter
pop
jle
jmp
scas
push
sub
cwtl
mov
jl
jle
pop
adc
mov
or
jb
add
jb
dec
rsqrtps
dec
jb
sub
xchg
push
in
and
jmp
lods
movsb
xchg
lret
xor
push
push
inc
roll
mov
sub
ret
inc
lret
out
mov
jp
aam
mov
mov
add
out
js
fs
add
in
int3
push
sbb
in
ja
repnz
dec
out
hlt
pop
xchg
mov
out
sbbl
jnp
ds
cmp
scas
mov
repz
lock
sbb
mov
int3
mov
shrb
aas
pop
sbb
mov
ret
in
stos
dec
iret
iret
lds
push
test
pop
mov
xor
sbb
mov
sub
sbb
mov
lea
ficomps
outsb
jp
ss
sar
in
lret
or
push
mov
daa
aad
loop
mov
adc
mov
mov
das
outsb
push
or
sti
lods
out
sarl
cmp
mov
dec
add
stos
dec
sbb
mov
dec
push
or
shlb
jmpw
rcl
sahf
or
push
xchg
rcll
leave
push
jns
xor
in
push
imul
push
fs
fs
xchg
daa
xchg
ss
ss
in
mov
jl
leave
into
jl
leave
xlat
jl
leave
fdivrs
loope
pop
leave
ljmp
leave
hlt
jne
sbb
add
sub
sbb
data16
xchg
jle
iret
shlb
adc
lcall
adc
mov
jecxz
mov
sti
xor
sbb
and
sub
incl
push
xchg
add
loop
aas
sub
xlat
add
loopne
cld
xor
pop
jae
shlb
cmp
ja
sub
push
out
pop
outsl
or
pop
sbb
popf
outsl
je
xchg
or
pop
jge
mov
jle
decl
xchg
push
sub
xlat
cmp
sbb
insl
xchg
add
insl
movsb
adc
push
and
add
mov
or
in
mov
je
pop
cmp
mov
adc
lods
loopne
pop
jmp
sub
cmp
outsb
add
jge
jbe
xchg
out
mov
fsubrs
mov
outsl
je
ret
push
cwtl
adc
add
fbstp
insl
cmc
mov
and
mov
outsb
je
sub
mov
and
sbb
incl
lcall
aad
outsb
jl
shll
call
adc
pop
lods
sahf
rcl
clc
xchg
sub
push
sub
ja
xor
mov
pop
mov
outsl
je
push
insl
je
mov
je
mov
je
mov
je
mov
inc
imul
pop
inc
outsl
mov
arpl
pop
inc
insl
test
mov
outsl
mov
arpl
adc
sbb
cmpsb
and
and
jg
aas
mov
push
xor
mov
adc
sbb
lea
sbb
cli
jg
xor
sub
aas
mov
or
mov
add
mov
insl
decl
cs
xor
insl
mov
sbbb
ja
insl
jne
aaa
lahf
std
fdivrs
loope
sahf
insl
and
push
or
sbb
test
pop
loop
std
fdivs
xor
lret
movsb
insl
and
push
or
sbb
test
pop
call
cld
xor
lret
stos
insl
and
pop
or
sbb
test
out
insl
std
fcomps
xor
lret
mov
and
inc
or
sbb
test
hlt
insl
std
fdivs
cld
xor
lret
mov
and
dec
or
sbb
test
cli
insl
std
fsubrs
cmp
mov
cmp
push
cltd
in
dec
pop
pop
popa
icebp
and
je
cmc
fs
sub
sbb
daa
or
loop
push
outsb
inc
lcall
js
pop
push
ja
add
jp,pn
xor
in
pop
jo
ljmp
add
xchg
jp
negl
xchg
lods
jo
sub
das
notl
inc
popa
insb
lahf
push
arpl
loope
outsb
je
sub
imul
call
adc
imul
jo
sbb
lea
pop
outsl
mov
and
push
lret
lcall
mov
and
and
outsb
lcall
sub
xor
movsl
hlt
je
imul
popf
imul
sub
lahf
pop
rcrb
mov
lods
decl
xlat
jecxz
cmpsb
pusha
add
xor
outsb
jo
mov
outsb
and
cmpsb
mov
decl
into
or
push
outsb
je
js
lcall
xor
je,pn
arpl
push
sti
cs
pop
outsb
jb
pop
rcrb
stos
lods
jmp
bound
hlt
je
inc
jecxz
pop
inc
je,pn
xchg
and
inc
sub
mov
in
or
out
cmp
das
je
outsb
je
dec
out
popf
mov
insb
je
inc
jecxz
pop
push
je,pn
mov
insl
add
outsl
jge
and
fstpl
outsb
hlt
cs
dec
mov
cmpsl
fcoml
enter
pop
shrb
shld
jg
hlt
je
push
outsb
cmc
mov
and
arpl
cltd
arpl
daa
movsl
rorb
in
arpl
je
arpl
and
in
jo
imul
mov
adc
cs
in
pop
in
xchg
insb
mull
cli
sub
adc
lods
cmp
lea
out
pop
inc
sbb
push
xchg
jnp
in
outsb
je
js
lahf
mov
insb
je
fs
ret
lcall
movsb
adc
xchg
stos
ja
jnp
les
xor
lcall
outsb
je
cmp
pop
jo
in
mov
or
push
stos
loopne
sbb
fwait
outsb
je
mov
mov
cmp
xor
rcll
xor
sbb
fsubrl
lret
shrb
fcoms
pop
mov
ds
arpl
decw
popa
jecxz
pop
lcall
pop
pushf
in
pop
or
je
sahf
mov
insb
lret
loopne
je
mov
fsubrl
lret
loop
mov
pushl
cltd
in
jle
in
jle
xchg
ficompl
xchg
pop
stos
outsb
pop
lods
popf
cmpsl
pushf
lods
outsb
je
mov
mov
hlt
outsb
je
ret
dec
pop
lock
outsb
je
mov
push
fidivs
mov
pop
add
pushf
sbb
ret
into
and
push
jb
adc
jl
push
inc
je
mov
outsb
pop
push
inc
xchg
jno
in
mov
push
in
jmp
in
test
cwtl
test
pop
adc
sub
pop
mov
movsl
xor
mov
movsl
mov
dec
pop
shll
