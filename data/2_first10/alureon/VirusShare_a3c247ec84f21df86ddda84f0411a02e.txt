jge
add
mov
add
mov
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
pop
adc
add
add
js
add
mov
add
fwait
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
inc
adc
add
add
adc
add
add
xchg
add
xchg
adc
add
adc
add
adc
add
adc
add
add
adc
add
add
out
or
mov
mov
loope
out
sub
sbb
cli
movl
out
dec
cmc
subl
adc
decl
mov
insl
mov
jl
mov
sti
test
adc
outsl
xchg
lcall
movsb
std
sub
dec
ret
cs
mov
mov
xor
jg
sbb
clc
mov
and
ret
cli
adc
sub
xchg
stos
arpl
rcrl
xchg
out
in
dec
sti
mov
ljmp
mov
repz
fisubl
cmp
outsl
inc
or
in
sbb
movswl
daa
test
fidivs
jo
jno
jae
inc
mov
out
fsubs
pop
push
jne
cmp
mov
aas
pushf
and
mov
push
cs
push
outsb
sub
imul
addb
mov
cs
pop
decb
out
cwtl
clc
movsl
movsl
loope
inc
popf
sbb
imul
scas
push
and
int
shr
push
sbb
repz
cs
mov
mov
es
mov
mov
sbb
sbbl
ja
call
sub
stos
int3
pop
fwait
mov
jle
addr16
mov
fldcw
jp
sbb
and
xlat
xor
mov
clc
movsb
into
cmpb
sbb
push
into
loope
dec
inc
mov
imul
scas
or
outsb
iret
add
jo
aam
cli
sbb
xlat
xor
jle
lret
jp
test
push
and
mov
pop
inc
mov
sub
sbb
outsb
inc
aas
arpl
push
cmpsb
mov
outsb
movsb
negl
addr16
push
stc
add
pop
ljmp
inc
adc
leave
inc
insl
sub
fyl2xp1
popf
xchg
add
jmp
sub
mov
ja
xchg
cli
or
xor
cwtl
scas
cs
lret
pop
xor
cmp
inc
mov
sti
mov
lret
fsubrs
loopne
jl
cmpsb
stc
xlat
pop
mov
flds
lock
call
fdivr
mov
push
jl
test
dec
stos
repnz
nop
loop
xchg
mov
inc
cmc
shr
inc
jnp
sub
mov
xlat
loop
jb
jmp
stos
sub
arpl
sbb
testl
dec
stos
push
ss
es
iret
sub
stos
xorl
jge
adc
test
cld
test
or
inc
repz
push
sbb
arpl
mov
mov
ja
out
pop
fiaddl
jae
and
call
pushf
ljmp
dec
xchg
imul
xor
hlt
cs
loop
out
ds
push
sub
pop
lods
stc
addr16
jae
outsl
jbe
out
lods
ljmp
sti
insl
or
ret
adc
arpl
pop
sbb
lea
push
jb
pop
stos
imul
lods
pop
aas
jae
movsl
sbb
dec
and
mov
xorb
cld
adc
sub
hlt
add
out
push
mov
xor
jmp
les
rclb
popf
aas
jae
cli
jle
or
scas
pop
movsb
or
jle
imul
mov
cmpsl
mov
jnp
xorl
addr16
shll
loopne
xchg
adc
out
adc
mov
or
cmpsb
mov
dec
lds
push
dec
adc
pop
aam
pusha
int3
lret
adc
mov
sbb
push
test
push
shlb
or
stc
ja
cmp
dec
repnz
mov
push
out
fsubrl
cmc
data16
cs
push
cmpsb
aaa
xchg
test
addr16
pop
pop
clc
mov
test
mov
icebp
xchg
std
xchg
cmp
int3
jmp
sub
fstps
cmp
xchg
mov
in
or
out
aam
or
popfw
push
jns
pop
lods
call
cli
enter
mov
sbb
int
xchg
int3
cmpsl
push
je
inc
aaa
loopne
mov
ljmp
push
xor
sub
mov
mov
dec
push
inc
xor
cmp
adc
jns
xchg
add
rorl
aam
jns
jmp
xchg
cmp
cmp
ljmp
mov
arpl
mov
test
scas
mov
or
ds
es
int
repz
lea
and
mov
push
ret
loope
xchg
push
mov
sub
movsl
or
mov
pop
xchg
sub
xorb
scas
mov
mov
jmp
lahf
jb
into
inc
lahf
or
jb
add
popa
inc
popa
xor
imul
bound
or
push
movsb
jbe
rcll
lods
adc
inc
insl
pop
hlt
in
sub
sahf
mov
fs
lret
or
xlat
cmp
mov
pop
mov
out
push
or
aas
xor
dec
movb
repz
sarl
movsl
xor
aas
lahf
push
not
push
push
pop
push
pop
cmp
stos
cmp
fucomi
dec
daa
xor
dec
or
pop
fistpl
or
inc
dec
xor
push
add
lea
fmuls
adc
ljmp
ret
sbb
test
mov
loope
ja
fistps
stos
popa
dec
shlb
pop
xchg
icebp
jbe
xchg
xchg
mov
pushf
cmp
scas
inc
mov
mov
jns
sti
inc
movsl
xchg
orl
lcall
sti
xlat
dec
dec
xor
sub
lret
push
xor
cmpsb
xor
addr16
lods
sti
outsb
ljmpw
mov
call
push
sbbb
ret
push
data16
mov
cmp
jge
adc
addr16
sub
push
out
mov
outsb
mov
push
mov
sub
mov
call
mov
sub
call
add
push
xor
call
dec
dec
lea
add
mov
call
lea
add
imul
mov
dec
mov
dec
lea
inc
mov
mov
dec
dec
dec
call
sub
add
dec
mov
xor
call
add
lea
call
add
inc
add
and
or
add
add
add
mov
pop
inc
dec
inc
add
xor
pop
dec
inc
pop
add
movzbl
or
sub
pop
mov
dec
lea
xor
mov
lea
dec
inc
pop
imul
mov
pop
add
mov
mov
inc
lea
call
inc
inc
add
sub
ret
inc
sub
push
inc
mov
push
inc
push
mov
inc
push
dec
xor
push
inc
mov
mov
xor
or
push
sub
ret
push
mov
dec
dec
add
mov
imul
sub
push
or
dec
push
inc
call
pop
ret
jmp
dec
xchg
sub
inc
inc
mov
xor
inc
inc
lea
mov
inc
lea
inc
dec
jne
inc
mov
movswl
inc
pop
mov
mov
pop
mov
add
pop
mov
mov
mov
inc
mov
add
add
movswl
and
lea
movswl
add
ret
push
sub
inc
lea
mov
sub
inc
inc
dec
push
push
push
push
inc
inc
inc
push
inc
inc
mov
inc
inc
add
mov
imul
mov
mov
lea
push
dec
lea
xor
dec
mov
push
dec
mov
push
imul
inc
pushl
dec
call
movswl
add
inc
inc
dec
movzwl
add
mov
movsbl
pop
ret
add
mov
inc
mov
inc
dec
sub
dec
movzwl
dec
mov
inc
imul
cmp
jb
dec
mov
sub
lea
xor
inc
imul
xor
dec
add
pop
dec
or
test
jbe
inc
inc
sub
movswl
mov
add
add
inc
dec
dec
add
and
imul
dec
lea
sub
inc
lea
add
lea
mov
sub
dec
and
lea
movzbl
mov
sub
lea
movzbl
inc
inc
add
mov
and
mov
mov
dec
mov
mov
and
sub
mov
imul
add
mov
dec
xor
inc
imul
mov
add
dec
jne
mov
dec
mov
dec
xor
inc
mov
inc
and
lea
dec
mov
mov
dec
add
sub
and
mov
or
add
mov
lea
mov
test
jbe
inc
imul
or
mov
dec
mov
add
sub
mov
add
inc
mov
add
mov
add
inc
and
mov
mov
mov
dec
inc
and
add
mov
mov
or
movswl
movzbl
xor
imul
add
inc
mov
and
movswl
add
mov
inc
sub
movzbl
sub
lea
mov
movzbl
dec
mov
mov
mov
movzbl
dec
mov
add
mov
mov
and
lea
imul
movzbl
mov
jmp
push
call
add
xor
sub
mov
xor
lea
mov
inc
mov
dec
inc
movswl
imul
xor
sub
mov
add
lea
shl
inc
mov
xor
lea
sub
push
sub
dec
lea
call
mov
pop
dec
add
mov
lea
dec
mov
inc
mov
cmp
je
call
call
inc
iret
mov
sub
pop
add
ret
push
movsbl
mov
and
lea
mov
push
inc
imul
push
mov
push
add
push
dec
mov
push
and
imul
mov
mov
lea
call
lea
push
add
push
sub
pop
lea
inc
mov
add
xor
mov
sub
dec
inc
add
lea
dec
je
and
sub
inc
movzwl
mov
dec
and
lea
lea
mov
mov
mov
mov
imul
lea
imul
sub
repnz
mov
mov
add
inc
jmp
mov
movzwl
mov
xor
sub
mov
inc
or
lea
mov
mov
imul
mov
mov
sub
lea
pop
pop
jmp
ret
push
mov
movswl
inc
add
sub
dec
dec
or
lea
mov
mov
or
dec
mov
mov
add
mov
add
mov
mov
mov
or
mov
mov
inc
mov
pop
ret
sub
add
mov
mov
dec
mov
inc
add
mov
lea
dec
mov
imul
add
xor
inc
dec
mov
or
inc
inc
add
add
xor
inc
dec
inc
cmp
jb
lea
push
add
and
push
sub
or
push
inc
dec
mov
movzbl
add
xor
inc
lea
xor
movsbl
mov
xor
add
dec
push
lea
movswl
xor
add
mov
mov
movzwl
mov
lea
dec
movzbl
inc
add
sub
or
add
dec
dec
add
movzbl
lea
movzbl
lea
movzwl
dec
dec
mov
xor
and
lea
inc
inc
imul
mov
dec
add
sub
or
movzwl
add
cmp
jb
or
xor
or
inc
mov
inc
jmp
dec
jne
dec
jae
sahf
sbb
test
lods
iret
cli
push
dec
dec
adc
inc
jnp
xor
xor
push
adc
orb
inc
outsl
out
or
or
inc
sar
mov
lea
les
sahf
xor
mov
loope
push
dec
inc
testl
hlt
push
jp
jmp
clc
jg
mov
dec
mov
pop
out
cmp
xor
roll
imul
cmp
mov
mov
adc
repnz
loop
das
xchg
repnz
in
int3
xchg
inc
enter
fs
mov
dec
stos
xor
sub
push
pop
cmp
and
xor
or
movsb
jb
sbb
and
dec
out
lods
mov
xchg
arpl
mov
pop
mov
fistps
cs
inc
addr16
fisubrl
stos
or
inc
js
xchg
cmp
roll
mov
outsb
je
into
or
xorl
mov
mull
add
aad
fisttps
xor
add
jge
jg
in
frstor
loopne
fwait
sahf
xorb
mov
cmp
push
incb
add
cmp
test
mov
inc
cmpsl
pop
jg
inc
cltd
inc
test
fadds
icebp
mov
jns
or
pop
int3
out
pop
mov
mov
out
shrb
enter
xchg
inc
sbb
sti
loop
aas
adc
rcrb
repz
or
adc
mov
or
adc
rorb
inc
mov
int3
das
movl
xchg
sub
jne
inc
es
fidivs
inc
xchg
jl
test
or
loopne
adc
jne
xchg
leave
je
jl
jo
push
pop
jmp
cmp
enter
cmp
outsb
jp
into
cmpsl
or
outsb
ret
dec
mov
cmp
lods
dec
or
mov
dec
inc
in
ja
jb
sbb
cwtl
in
cmp
in
scas
mov
int
mov
xor
out
movsl
xor
in
cmpsl
pop
sub
loopne
fwait
sbb
jno
xchg
pop
dec
sbb
fcmovb
ds
in
and
pop
and
and
enter
pop
in
pushf
xchg
loope
push
inc
out
mov
pop
popa
out
ret
jg
inc
jnp
mov
lds
push
rclb
mov
cmp
cmp
xor
jo
mov
xchg
xchg
xchg
mov
mov
ljmpw
mov
pop
xchg
dec
xchg
lret
arpl
loop
dec
popf
cs
add
pushaw
sahf
sub
cmpsl
fildll
aad
adcb
cmp
xchg
mov
fadds
or
repz
fisubrs
lahf
cmp
xor
in
pop
xor
mov
loop
push
arpl
jb
mov
lret
jg
shll
xor
inc
inc
xor
xchg
and
ret
call
sti
mov
outsb
leave
ja
mov
adc
xchg
std
mov
lahf
mov
mov
out
push
mov
daa
fs
stos
aam
imul
jmp
mov
pop
inc
cltd
push
xor
cld
out
add
xchg
or
mov
push
cmpb
mov
xchg
cmp
mov
or
inc
outsb
loopne
orl
mov
push
daa
xchg
movsl
lret
lret
and
inc
je
jo
mov
and
add
leave
pop
lret
add
rorb
adc
stc
aad
jg
cwtl
inc
es
test
or
stc
pop
and
lcall
and
cmp
int3
ficompl
cmpsb
imul
out
es
icebp
aaa
cmpsb
mov
sbb
fdivrs
adc
xchg
jp
sbb
inc
clc
inc
or
cmp
inc
push
pop
scas
xchg
mov
xchg
or
fcomps
das
jb
add
sbb
cmp
jmp
mov
inc
nop
cmp
es
add
fisubl
cmpsl
loop
test
sbb
jg
mov
cltd
cld
fistpl
add
jl
bound
sti
jmp
stc
je
clc
cld
shll
lods
ds
xchg
push
ljmp
and
rorl
push
leave
ds
sub
imul
inc
lret
popf
in
dec
jo
shl
sahf
dec
cmp
ljmp
insb
scas
xor
test
xor
pop
std
jae
insl
pusha
xchg
movsl
push
mov
inc
xlat
lods
inc
aam
dec
adc
dec
jno
or
pop
pop
jge
shrl
push
push
push
insb
push
rcrl
mov
das
inc
lcall
shl
imull
mov
pop
nop
sbbb
fs
into
pop
mov
pop
adc
repz
andl
int3
xlat
push
pop
rcr
jbe,pt
subb
or
scas
sub
xor
jmp
xchg
rcr
fldl
scas
inc
jecxz
sbb
or
inc
jne
xchg
test
lahf
imulb
aaa
cwtl
arpl
inc
je
push
mov
mov
cmc
lret
push
sub
jg
ficoms
jp
pop
push
clc
jp
sub
and
lret
or
inc
ja
jp
mov
test
and
mov
push
loope
sahf
cltd
push
dec
roll
cmp
pop
adc
scas
iret
pop
pop
and
xlat
int3
fwait
or
cld
xor
and
loopne,pt
jbe
adc
inc
xchg
inc
icebp
mov
push
mov
push
jmp
in
mov
push
jne
cs
mov
mov
mov
scas
push
cmpsl
cld
xchg
dec
ja
push
and
mov
mov
add
stos
std
ret
scas
fbld
sbb
sub
cmp
cmp
push
inc
dec
aas
lahf
xor
scas
sub
add
addr16
jno
jbe
dec
ljmp
nop
mov
in
mov
bnd
jp
cmp
pop
jle
mov
dec
je
jbe
add
add
xchg
ficoms
add
pop
outsb
inc
add
jmp
mov
jp
mov
in
fcom
mov
jmp
and
sbb
adc
or
or
imul
dec
xchg
insb
pop
sbb
mov
cwtl
imul
xor
fidivrl
xlat
and
or
iret
stos
and
inc
pop
adc
or
cltd
adc
movsl
lock
test
xor
fwait
mov
mov
and
adc
jg
into
inc
and
nop
pusha
xor
push
push
scas
ljmp
dec
rclb
or
cmp
stos
movsl
jg
sti
and
adc
sbb
aas
mov
adc
fs
xor
jnp
jo
notl
xorl
cs
cld
xor
mov
xorl
daa
popf
das
lea
pop
pop
sub
add
sahf
pop
mov
nop
cmp
add
nop
sub
xchg
pushf
roll
cwtl
outsl
mov
js
pusha
mov
adc
lea
xchg
fnsave
lds
mov
setno
lods
daa
cltd
mov
mov
test
leave
movsl
clc
dec
in
aaa
icebp
sub
xchg
xchg
es
dec
or
shr
rcrl
cmpsl
andb
fmull
inc
xchg
inc
pop
and
inc
and
loop
pop
dec
inc
cltd
sub
mov
mov
mov
lret
test
dec
repz
nop
test
pop
fistpl
cli
xor
cmp
dec
jmp
jo
negb
pop
sub
cmpsb
push
jnp
into
sbb
pushf
mov
ror
xor
mov
mov
xchg
pusha
pop
scas
lcall
bound
test
mov
inc
sbb
test
xor
pop
mov
cs
add
ret
mov
sub
and
addr16
outsl
ss
push
incl
arpl
sbb
mov
sar
cmpsl
adc
ja
add
out
jo
cmpsb
or
out
pop
push
sti
mov
push
mov
aam
imul
shl
push
push
dec
mov
adc
push
xchg
sub
pusha
add
inc
imul
shlb
fisubrs
mov
clc
and
xor
out
mov
mov
cmp
cs
sbb
pop
xor
repz
mov
movsb
adc
popf
xor
jmp
pop
and
iret
sub
xchg
loopne
xor
movsl
cwtl
mov
cmp
lds
dec
enter
into
sub
shll
inc
pop
data16
rclb
cmp
or
jne
jmp
iret
mov
lds
outsb
sbb
inc
repnz
xor
push
inc
test
or
data16
and
shlb
or
add
in
sbb
cmpsb
jecxz
sbbb
test
or
mov
fcompl
loope
nop
out
jnp
das
add
mov
enter
loop
popa
fisubl
jae
pop
fsubl
jp
sbb
aad
in
fs
cmc
mov
ljmp
mov
fnsave
std
add
lods
fmull
imul
mov
cmpl
adc
outsl
js
add
xchg
leave
test
cld
jns
icebp
mov
fcoml
add
jl
adc
push
sbb
lret
add
inc
ror
mov
cmp
outsl
xor
subl
adc
push
jno
fcmovnbe
pop
or
mov
pop
pop
mov
mov
jecxz
cmpb
or
adc
pusha
pop
sbb
in
jp
movsl
cmpsb
jmp
fstl
and
dec
pop
les
pop
add
jo
jb
mov
rcl
inc
lahf
xchg
jle
mov
out
outsl
stos
repz
andb
sub
jae
aas
daa
dec
xchg
in
imul
repnz
and
jl
mov
xchg
aad
dec
push
clc
push
jmp
add
out
out
mov
fistpll
xor
jp
fistps
imul
xchg
cmp
add
mov
arpl
stc
mov
push
pushf
sub
adc
test
shlb
push
jne
push
imul
out
xchg
mov
dec
lcall
push
stc
inc
or
push
adc
mov
xor
jae
inc
mov
cld
sarl
insl
adc
jb
pop
jecxz
mov
insb
mov
adc
popf
repnz
dec
das
test
pusha
xchg
mov
cmpsb
and
pop
and
movl
xchg
hlt
push
loop
sbb
jmp
jbe
dec
adc
xchg
push
lret
ftst
pop
push
gs
ljmp
adcl
ds
or
lock
push
aas
mov
sarb
sbb
shlb
mov
adc
stc
ret
mov
test
clc
and
hlt
lret
dec
out
xlat
je
push
adc
inc
xor
mov
imul
cmp
fisubrl
outsl
roll
sub
pushl
dec
jb
sahf
sub
push
xorb
or
rclb
nop
clc
or
imul
iret
mov
js
adc
pusha
cmpsb
shlb
inc
jne
fs
popa
test
out
pop
mov
fcmovnu
xor
mov
mov
aaa
xor
push
lds
xchg
pop
jmp
ret
in
mov
les
jmp
aas
icebp
sub
adc
add
adc
cmp
dec
negb
xchg
pop
mov
mov
sub
loopne
xchg
pop
imul
or
add
inc
xor
xor
idivb
les
push
adc
and
lods
sbb
mov
sbb
imulb
and
xor
add
fldt
push
repz
xchg
jle
pop
dec
test
call
scas
rolb
aas
push
test
loop
lret
dec
add
repz
sbb
int
cmpsl
or
rcr
cli
adc
cli
mov
ret
outsl
sub
lea
iret
or
push
fsts
dec
mov
repnz
mov
repz
mov
adc
insb
push
cmp
mov
xor
cmp
or
jns
ss
push
mov
loope
adc
sub
mov
aam
pusha
push
add
xchg
mov
das
push
cmp
jns
sub
cltd
dec
mov
inc
mov
outsl
xor
inc
rorl
or
mov
sub
sbb
clc
mov
in
jecxz
in
xor
es
inc
cmp
popf
orl
mov
mov
mov
lock
mov
fildll
dec
push
ds
xchg
sbb
int3
out
pop
cmpsl
out
fstpl
les
jnp
popf
je
adc
mov
fwait
mov
aaa
in
lret
mov
push
ds
scas
sti
push
mov
stos
int
mov
movsb
sub
or
push
and
jno
mul
dec
sub
sub
in
lret
xchg
cmp
inc
push
cli
sahf
gs
adc
sarl
xchg
std
ljmp
add
arpl
pop
push
push
repnz
rcrb
pusha
mov
dec
mov
cmp
cs
inc
and
out
sti
mov
pop
imul
repz
and
aaa
cmp
fistpl
movsb
dec
xchg
aas
cmp
jle
and
inc
movsb
loope
lock
jmp
sub
movsb
jg
and
out
and
in
int
pop
inc
pop
xor
mov
mov
jecxz
sbb
test
insl
xor
sbb
push
cmp
mov
mov
push
jae
call
mov
es
jo
pop
sub
aam
loop
mov
testl
cld
mov
or
push
insl
pop
and
fstps
push
mov
pop
out
push
fldl
nop
xchg
jne
aas
push
xor
sub
lods
aas
xor
push
push
and
xchg
sub
sub
pop
cmove
inc
cmp
jo
xchg
lods
icebp
mul
dec
dec
fsub
xchg
sub
jbe
inc
mov
dec
jns
pop
int
pusha
sbb
mov
sbb
lahf
ret
and
pop
fdivrl
dec
scas
lea
cmp
push
icebp
mov
lods
push
test
rcrb
pop
outsl
cmovne
push
push
dec
ja
clc
mov
arpl
cmp
xchg
push
mov
jmp
bound
adc
pop
aad
mov
xor
es
movsb
mov
arpl
lret
xchg
jl
inc
vfrczpd
adc
add
adc
std
mov
lcall
jge
ds
sub
popa
fs
js
inc
iret
jl
cmpsl
push
adc
add
cmc
loope
std
repz
sbb
hlt
or
imul
lret
lds
movsl
scas
int
xchg
mov
jb
lods
fsubl
push
data16
icebp
ljmp
out
adc
into
xor
xbegin
inc
jl
sbbb
cmp
mov
mov
fisubrl
sub
sbbl
xchg
push
jg
out
sub
mov
loope
lahf
xor
cmp
jecxz
lds
xor
xchg
xchg
mov
out
xchg
add
ds
sbb
or
inc
scas
pop
arpl
mov
lods
pop
aas
push
sub
arpl
adc
movsb
aam
xor
jo
sti
imul
xchg
aad
jno
iret
push
shrb
aad
div
add
out
sbb
mov
sub
xor
icebp
jo
sbb
or
lea
cltd
aas
adc
sti
data16
scas
test
jnp
in
movsl
cli
scas
shlb
movsb
mov
add
ret
xchg
movsl
mov
sub
mov
pop
xchg
or
lcall
arpl
xor
add
mov
inc
ret
das
sti
add
pop
popl
push
sub
test
lods
aad
fsubl
stos
mov
xchg
sti
cmp
fsubl
fwait
sahf
push
es
xchg
popf
les
negb
lret
mov
pop
push
int3
jmp
arpl
adc
push
push
xor
stos
push
xchg
test
xchg
mov
mov
popa
pop
adc
dec
test
test
loopne
pushf
mov
jp
test
mov
ds
jg
jecxz
mov
sbb
pop
stc
out
pop
adc
push
inc
imul
mov
es
scas
dec
inc
jle
das
fldz
jno
aas
mov
fildl
lahf
or
push
pushf
lods
sbb
sbb
pusha
or
dec
mov
ljmp
mov
insb
sub
jg
mov
cmpsb
movl
out
lock
jmp
test
mov
and
jbe
mov
movsl
paddb
icebp
and
icebp
xchg
inc
fbld
shl
mov
push
pop
scas
je
pop
les
adc
sub
mov
aam
sbbl
andb
add
icebp
jo
push
sub
ret
lock
adc
xor
xchg
dec
dec
stos
dec
mov
ret
clc
into
adc
add
jmp
dec
xchg
stos
and
push
pushf
jle
and
jb
inc
lea
and
out
jbe
push
sti
xchg
inc
xor
pop
inc
push
and
mov
add
dec
sti
rcl
cmpsl
xor
sub
cmp
mov
clc
jmp
pop
and
cmp
add
or
xor
cwtl
dec
sub
xchg
rcr
dec
push
loop
or
out
mov
cmp
inc
aad
xchg
ja
int
inc
and
fs
cmp
or
jg
cmp
lret
gs
stc
aad
adc
pop
pop
bound
or
aam
decl
jae
jns
sub
push
nop
dec
cld
pop
push
mov
mov
movsl
cmc
jnp
push
fs
cwtl
dec
push
inc
add
mov
fwait
mov
and
mov
sbb
add
popa
jmp
add
pop
ljmp
rol
jnp
pop
or
xor
lods
andl
fldcw
test
jecxz
fidivs
cltd
fs
push
add
pop
xchg
cmp
jg
mov
mov
cmp
mov
call
add
sub
in
jge,pn
pop
in
inc
loopne
jns
xchg
sahf
popa
and
or
nop
xorl
mov
imul
pop
xor
enter
in
push
mov
add
movsb
pop
pop
decb
adc
push
adc
inc
cmpsl
jmp
aas
fwait
or
rcr
pop
jl
cld
lret
std
jecxz
es
push
les
inc
jae
in
leave
push
jg
rorb
fsubrs
push
test
sub
out
clc
pop
cli
rolb
mov
repz
jmp
pop
adc
push
inc
xchg
and
mov
pushf
sbb
cmpsl
mov
add
icebp
sbb
mov
adc
xchg
mov
repz
pop
pop
test
cmp
pop
mov
mov
orb
movsl
pusha
scas
pop
cmp
dec
in
dec
mov
ss
jnp
nop
popf
hlt
jecxz
stos
push
jp
mov
lea
mov
cmp
lret
xchg
push
push
xchg
repnz
adc
jo
mov
bound
push
je
lock
lahf
or
xchg
mov
pop
loopne
xor
adc
mov
mov
or
xor
rorl
add
icebp
jp
pop
in
sub
cli
icebp
lret
cli
xchg
imul
pop
shll
inc
aas
and
testb
fmuls
cmp
std
xorl
gs
or
adc
lret
pop
or
test
lcall
mov
mov
cltd
dec
aad
gs
fbld
sbb
mov
pop
lcall
or
dec
sub
lret
sub
addr16
and
or
or
push
fisubrl
cwtl
mov
hlt
fistpl
out
stos
es
frstor
push
sbb
outsb
cmp
adc
dec
xchg
inc
pop
bound
ja
out
mov
cld
add
mov
lret
sbb
sbb
lea
adc
or
jmp
mov
loop
std
outsl
push
sahf
ljmp
cmpl
test
scas
sbb
or
sbb
out
mov
mov
or
mov
mov
push
adc
rclb
adc
movsl
loopne
fwait
mov
inc
mov
inc
jl
xchg
imul
jle
mov
push
call
push
in
repnz
idivl
and
lods
xchg
and
mov
fcomps
sbb
sbbl
mov
mov
mov
repnz
pop
or
push
cli
dec
dec
pop
xchg
pop
fimull
dec
jmp
lret
in
lods
loopne
fimull
ljmp
shll
mov
pop
mov
jle
push
xchg
jno
fs
das
and
mov
pusha
push
mov
push
xor
or
nop
cld
arpl
inc
sub
push
repz
mov
loop
and
jp
sub
xchg
out
pop
sbb
clc
sub
test
ja
pop
lcall
mov
sub
stos
xor
sub
or
lret
lock
hlt
scas
xchg
js
jecxz
sbb
xchg
lea
add
xor
cmpsb
stc
jle
sub
iret
aas
lds
gs
mov
arpl
and
gs
xlat
jp
adc
gs
xlat
xchg
fildll
pop
fistpll
push
gs
loope
ljmp
les
daa
int3
fcoms
pop
leave
mov
lret
rcr
inc
ret
lea
cwtl
int
rcl
fsubl
mov
jmp
aaa
push
push
sbbl
inc
or
hlt
xor
call
loope
icebp
repz
mov
and
out
pop
xchg
arpl
dec
xor
cwtl
sub
ljmp
ret
std
mov
jge
xor
in
rcrl
add
aaa
mov
fdivrl
ja
push
rclb
sub
das
pop
les
imul
out
cmp
mov
les
and
lea
or
out
sub
sbb
fucomp
pop
pop
mov
and
das
sub
sub
cwtl
rclb
cmpsb
ret
sub
rclb
push
cmp
gs
pop
arpl
xchg
inc
cmpsl
and
fstpt
rol
cmc
push
es
sbb
fs
sarb
aaa
mov
mov
clc
push
sbb
scas
daa
push
sbb
jbe
xchg
icebp
push
cmp
out
add
mov
jle
shlb
push
hlt
push
fs
add
sbb
dec
mov
imul
xor
sub
rclb
pop
das
std
in
dec
sbb
jae
orb
loop
jno
or
add
adc
notb
pop
insb
int
loop
or
xchg
push
pcmpeqw
cmp
cmp
nop
mov
jmp
iret
lds
and
cwtl
mov
mov
xorl
lret
jecxz
push
push
jo
add
stos
lds
sub
mov
mov
movsl
adcl
adc
sbb
lret
mul
std
sbb
xchg
jecxz
mov
mov
push
sub
sbb
adc
push
ljmp
aas
jge
adc
bound
xor
insl
mov
xor
add
addr16
nop
push
mov
mov
imul
mov
fcmove
inc
outsl
clc
xchg
aam
push
fwait
sti
jne
inc
mov
push
enter
push
xchg
call
cmp
cmp
addr16
in
mov
testb
push
push
inc
xor
pop
fbstp
fildl
xor
pop
pop
dec
dec
in
arpl
pop
in
outsb
fisubs
xchg
loopne
loopne
or
ja
dec
pop
inc
and
sbbb
mov
jo
jge
add
sbb
dec
mov
les
icebp
jmp
sub
jnp
pop
adc
push
gs
inc
dec
or
mov
jmp
sub
test
add
jnp
pop
dec
mov
mov
negl
es
inc
mov
ljmp
and
mov
sub
add
push
icebp
inc
cltd
xchg
and
cld
jmp
jle
pop
pop
push
cmp
mov
test
pop
fwait
insl
mov
pop
dec
xchg
mov
jb
pop
les
ficomps
or
or
pop
mov
add
and
inc
xchg
sub
cmp
sbb
add
jecxz
dec
push
out
push
movsl
mov
popl
jae
insb
aad
adc
xorb
sbb
cmp
aad
les
jne
xor
and
fwait
lret
or
adc
out
mov
jmp
mov
pusha
dec
pop
xlat
mull
cmpsb
adc
ss
fwait
sbbl
xor
jbe
add
out
xor
add
inc
into
lea
mov
cmpsb
repz
aam
push
pop
incb
imul
jl
test
mov
pop
jl
lods
cmp
push
or
in
add
mov
scas
adc
xor
scas
popf
mov
loope
cmc
cwtl
push
aas
stos
jae
rolb
int3
shll
xchg
xor
or
ss
cmp
adc
sti
dec
ljmp
std
pop
imull
flds
test
push
jo
jecxz
vphaddwq
sub
cwtl
in
push
icebp
cltd
lret
aaa
adc
adc
int
clc
dec
mov
pusha
sar
sti
pusha
inc
sbb
jge
sbb
in
mov
push
fiaddl
adc
data16
mov
mov
and
or
push
mov
icebp
fcompl
addr16
imul
adc
mov
adc
cmp
jb
push
pop
pop
sbbb
or
adc
mov
icebp
scas
sbb
jb
shll
cmp
jp
and
dec
daa
sbb
add
test
jg
in
pop
add
or
gs
mov
mov
sub
psubq
mov
push
pop
decl
fistps
loope
pop
inc
cmp
push
mov
imulb
xchg
add
enter
int
std
out
mov
sbb
xchg
imul
sahf
cs
inc
cs
jbe
ja
xor
adc
xchg
xor
lock
add
and
push
or
xor
ss
jle
xor
and
lahf
or
repz
lahf
sti
inc
inc
add
repz
or
fistpl
les
inc
cmp
arpl
mov
hlt
lock
ret
mov
mov
loope
loope
adc
adc
ja
mov
xor
arpl
and
dec
ficomps
sbb
jmp
loopne
and
sahf
inc
or
jl
dec
fstl
std
or
add
pop
mov
fcmovne
mov
movsl
and
cmp
xor
push
into
xchg
pop
sarb
dec
xor
jbe
out
cwtl
gs
jl
sbb
mov
jp
sbb
pop
adc
jo
adc
xor
fdivs
push
mov
js
sti
idivl
mov
cli
xchg
test
xlat
mov
cmp
push
push
cwtl
mov
push
out
ret
pop
dec
dec
inc
push
or
pop
mov
sbb
sti
les
add
add
hlt
div
pop
mov
arpl
aas
jp
test
push
call
daa
push
stc
bound
dec
jnp
inc
jns,pn
dec
and
sub
xchg
bound
test
inc
outsb
add
mov
push
sbb
jmp
hlt
in
lahf
pop
push
sub
adc
adc
xchg
add
add
rolw
lods
adc
xor
dec
xor
iret
xchg
shll
imul
xchg
xor
or
hlt
ljmp
popf
jp
jns
cmp
dec
incb
jb
mov
mov
ljmp
jg
clc
mov
insb
jns
insb
push
cltd
jle
lods
test
loop
ret
inc
loope
pushf
mov
sbb
pop
dec
mov
lea
jmp
popa
mov
pop
es
in
test
adc
ret
cmp
clc
mov
add
pop
pop
push
or
pusha
stc
int
mov
fcoml
inc
mov
insb
dec
pop
shr
or
cmpsl
and
idivl
fisubl
fcompl
xchg
test
addb
mov
loope
ljmp
mov
add
add
xchg
adc
pi2fd
rcll
repz
iret
ss
call
inc
nop
dec
jl
rcrl
xchg
lret
ficomps
fdiv
jnp
dec
dec
test
sub
or
in
arpl
fmuls
push
lret
icebp
jg
adc
js
adc
adc
lods
movsb
cld
inc
jo
mov
or
es
sub
push
xor
fists
pusha
repz
std
leave
cli
xor
dec
stos
clc
loop
add
and
adc
mov
sub
fisttpll
lods
lret
ror
sub
stc
dec
ret
sub
in
nop
js
and
minps
das
fstpl
shll
test
repz
iret
daa
sub
push
dec
push
sbb
jo
je
cmp
js
sub
ljmp
inc
dec
fwait
push
int3
outsl
sub
daa
cwtl
call
jns
mov
popf
jnp
xchg
daa
or
ss
icebp
je
mov
xchg
cmp
int3
ja
jge
test
cmp
repnz
or
popa
xchg
add
mov
mov
imul
xchg
push
hlt
dec
flds
xchg
push
in
stos
sub
push
movsl
push
jae
add
scas
mov
push
clc
mov
dec
arpl
int
and
and
scas
add
outsl
inc
jo
mov
fidivrs
mov
lods
jne
sub
mov
xchg
jmp
lock
push
fstps
pop
rol
loopne
pmullw
mov
push
fsubs
jg
aaa
sbb
ret
or
fdivs
in
enter
inc
mov
jp
mov
sbbl
lods
movsb
lds
adc
hlt
ret
aad
daa
push
mov
or
xlat
popa
insb
adc
xor
mov
xchg
xor
mov
lods
ljmp
cmp
dec
aaa
inc
std
mov
lar
icebp
add
mov
add
dec
in
xor
out
pop
mov
movl
sahf
insb
outsl
push
frstor
test
xchg
xchg
popa
repz
imul
bound
mov
hlt
push
jo
rolb
scas
add
push
mov
add
cmpb
cwtl
push
mov
iret
cmpsl
fistps
test
xchg
pop
sbb
cld
filds
insl
push
ja
or
rcll
inc
lods
sub
sub
xchg
std
scas
push
inc
xor
loope
xchg
jle
mull
pop
fisubrl
mov
jb
imul
test
xchg
imul
rcl
out
repz
inc
push
mov
pop
or
clc
filds
jno
popf
mov
rolb
repz
xor
hlt
je
mov
adc
and
xchg
fcomps
push
sub
insl
movsb
sbb
cmpsl
jno
fsts
out
pop
and
push
scas
icebp
push
mov
aam
mov
mov
out
out
sub
pop
jb
push
pop
stc
xchg
out
loop
pop
or
leave
xlat
sub
repnz
pop
ljmp
icebp
pop
bound
push
ja
imulb
mov
pop
aam
cmp
xor
sarb
hlt
xor
popa
leave
or
inc
xchg
inc
das
loope
sbb
out
adc
cmp
lods
jge
mov
xchg
mov
lret
icebp
insb
in
data16
je
cmp
pop
fcomi
mov
mov
jbe
scas
cmp
inc
jmp
lcall
arpl
cli
fs
pop
cmp
mov
ljmp
sub
or
pop
insb
jno
sbbl
push
jae
rorb
insl
fisubrs
push
jnp
lods
cltd
int
or
stos
movsb
xor
imul
movsb
test
int
or
and
and
lcall
mov
loope
aaa
sbb
mov
fbld
in
xor
aam
fdivr
outsb
mov
lea
inc
testl
mov
adc
stc
test
fsubrl
shll
sub
xor
jns
movsb
xchg
sahf
and
outsb
mov
pop
loop
int3
xchg
xor
lds
jnp
popa
and
mov
testb
dec
push
pop
or
jae
jb
xor
rcrl
insb
xchg
aaa
sbb
mov
mov
std
xlat
mov
pop
jbe
scas
and
fs
dec
movsb
sub
rorb
sub
imul
mov
fmuls
in
sti
in
jno
xlat
cmp
movsb
je
addr16
sub
stc
xor
mov
pushf
ficompl
std
mov
lods
ret
sbb
sub
sarl
js
push
xchg
xchg
cmpsl
mov
jo
repnz
js
push
pop
cmp
adc
xchg
insl
cmp
leave
sbb
or
xor
lahf
js
jmp
pop
lock
hlt
lret
pop
pusha
xor
mov
outsl
call
insb
stos
inc
ficomps
outsb
inc
pop
arpl
xchg
pop
adc
cmp
push
jnp
pushf
imul
cmp
outsl
test
push
ljmp
mov
sti
jb
mov
inc
stos
pop
into
es
aas
adc
fucomi
std
call
out
add
add
mov
jno
sub
xchg
xchg
inc
shlb
shlb
ds
repz
enter
adc
and
jmp
fnsave
je
icebp
cmp
inc
push
fxch
imul
dec
sbb
mov
les
pop
adc
mov
and
sub
inc
ljmp
lods
popf
stc
jno
xchg
sub
fwait
test
adc
in
xor
data16
lds
xchg
jg
and
fadd
mov
ss
in
addr16
pop
mov
jge
cli
push
loop
outsl
add
movsb
mov
cwtl
gs
outsl
mov
fs
int
cmp
call
cmpsb
test
mov
or
shll
das
add
sub
or
and
lods
dec
mov
inc
mov
out
adc
rclb
adc
mov
out
jge
ret
gs
cmp
jb
xlat
dec
cmp
mov
dec
sbb
jnp
sbb
mov
sub
out
sub
out
fsubr
mov
je
mov
mov
push
xlat
cmp
inc
dec
sbb
int3
imul
stos
test
jno
out
xor
mov
jbe
dec
push
mov
leave
lahf
xor
sbb
call
outsl
pop
adc
in
out
sbb
push
jmp
xchg
push
jecxz
xchg
adc
mov
repz
ss
ljmp
stos
insl
mov
fs
leave
jecxz
jo
js
and
xlat
dec
in
lods
push
mov
or
inc
pop
addr16
negb
mov
sarl
mul
xor
stos
popa
inc
xor
add
and
and
inc
ljmp
pop
inc
stc
mov
mov
mov
lock
lock
add
mov
popa
rcrl
push
jmp
ds
notb
in
pop
es
adc
cmp
and
lret
ss
loope
fincstp
xchg
mov
cmpsb
mov
popa
out
popa
fisubs
lahf
or
xor
rol
sub
mov
fisttpl
push
cmc
adc
adcl
add
jb
and
shlb
mov
push
inc
lret
xor
push
mov
into
or
shrl
mov
ret
sbb
cld
sbb
lods
iret
in
mov
mov
outsl
insb
push
fdivrs
js
dec
daa
fmull
lahf
mov
push
imul
stc
push
iret
ficoms
ss
cld
cmc
loope
or
lock
call
in
movsl
scas
push
out
andb
add
fmul
lret
xchg
sub
jno
jnp
in
ljmp
cmp
cmp
push
and
movsl
ret
mov
pop
add
mov
push
into
sub
adc
cmp
jg
roll
cmc
jne
jb
cmp
push
mov
movb
xor
out
xchg
mov
test
ret
leave
test
in
or
mov
ja
setne
jle
xor
nop
pop
jge
sbb
sub
data16
test
shll
imul
jb
pop
mov
rcl
cmp
push
lret
or
jge
xor
and
pop
repnz
adc
ljmp
add
aaa
sub
cmp
jmp
inc
jecxz
nop
push
adc
sbb
rclb
lds
dec
mov
xor
or
data16
ret
mulb
push
aam
dec
loopne
and
out
pop
jmp
pop
arpl
xchg
stc
push
cmc
and
xlat
outsb
in
add
outsb
lahf
imul
fstpt
add
push
mov
insl
fwait
repz
or
icebp
outsb
es
add
pop
outsl
jge
xchg
mov
xor
popl
lods
rorl
aad
fs
cmc
fsubrs
repnz
push
fsub
aaa
shlb
sbb
and
and
mov
mov
ds
arpl
xchg
ja
ret
mov
inc
jp
lds
xchg
testl
cld
lret
or
lea
jp
sahf
popa
subl
push
add
sub
outsl
xchg
lock
pop
loope
add
and
arpl
outsb
out
imul
ret
int
mov
ljmp
fs
mov
sub
push
jb
mov
loope
adc
push
jne
pop
incl
adcb
das
shl
push
add
sbb
xchg
test
mov
pop
xor
pop
sbb
cmp
sbb
or
pop
and
loope
pop
and
inc
lds
mulb
sub
jle
or
mov
data16
iret
cli
mov
xor
adc
jmp
mov
adc
sahf
mov
jo
idivb
push
pusha
add
cmp
inc
or
inc
hlt
int
mov
jbe
repnz
pop
and
push
lea
cs
sbb
repnz
test
fisubrl
push
mov
ljmp
xchg
adc
cmp
adc
mov
dec
pop
lcall
xor
mov
orb
xor
jmp
add
pop
jo
outsb
enter
flds
data16
xchg
dec
add
call
jmp
stos
xor
xchg
mov
cld
fs
push
adc
mov
scas
push
push
mov
roll
mov
dec
mov
or
mov
add
push
mov
mov
cmp
notl
pusha
pop
ljmp
aam
push
mov
nop
xchg
jae
leave
cmp
push
sub
inc
cmpsb
jg
ss
dec
pusha
mov
or
sahf
jbe,pn
sub
cltd
dec
testb
or
mov
sbb
mov
lds
leave
jl
or
mov
nopl
mov
daa
ret
pop
or
ja
or
mov
je
mov
jp
xchg
fiaddl
sbb
arpl
mov
xor
xchg
add
dec
call
loope
or
aas
adc
arpl
add
test
mov
popf
xor
xchg
mov
mov
std
pop
lea
push
inc
dec
mov
fsubl
mov
xor
cmp
sti
mov
aad
popa
test
test
push
es
sahf
mov
cltd
pusha
pop
or
xor
cmpsb
aam
or
xor
lahf
stc
ljmp
fstl
aam
popa
daa
inc
jne
insl
frstor
adc
inc
arpl
xor
lret
xchg
cmp
push
or
jno
inc
or
inc
xchg
scas
sbb
popf
jns
bound
js
adc
rcrl
mov
mov
cmp
push
les
test
mov
pop
lea
aam
int
sub
pop
adc
sub
adc
jle
push
mov
not
leave
rolb
cmp
adc
test
fs
dec
or
dec
add
repz
xchg
dec
shl
mov
adc
bound
cs
ja
xchg
mov
add
icebp
mov
pop
and
sub
cli
mov
sub
pop
aaa
sub
sub
add
bound
sub
cld
mov
mov
mov
inc
outsb
aam
mov
fucomi
lret
cs
jmp
inc
inc
cmp
xlat
imul
cli
mov
ret
mov
jmp
or
pop
out
sbb
mov
sub
xor
popa
mov
xchg
stos
lods
mov
add
and
mov
addr16
or
pop
adc
jnp
mov
mov
scas
in
cli
mov
adc
push
and
push
aaa
ja
shrb
sub
adc
mov
outsl
ja
lds
lahf
mov
rclb
je
std
cmp
ficoms
adc
jno
loope
gs
xchg
jg,pn
push
jno
insl
je
xor
lcall
cmp
lahf
xchg
fiadds
sub
outsl
sub
add
addl
nop
insb
push
sti
loope
push
push
mov
je
pop
jmp
rorb
mov
fsts
shll
and
out
aam
cld
sub
mov
add
jle
push
mov
push
sub
fdivrs
fsts
pop
mov
repz
cmp
dec
cmpsb
pop
xchg
pop
fldl
sbb
mov
cmp
outsb
xor
out
pop
xchg
aam
xor
test
jb
add
jae
fiaddl
fldcw
jle
int3
xchg
dec
fdiv
jp
rol
push
and
es
pop
mov
mov
in
pop
pop
arpl
sbb
int3
mov
jl
negl
stos
jge
mov
test
lret
imull
or
jge
sahf
sbb
jge
and
aad
fs
lods
push
or
pop
aas
fxch
out
popf
rorb
das
add
jae
adc
mov
mov
inc
arpl
mov
jl
adc
test
or
rsm
lods
inc
add
ret
sbb
jb
out
push
xchg
push
push
test
push
daa
jp
out
add
pop
and
dec
daa
sbb
inc
subl
cmpsl
ret
mov
cmp
sub
xchg
fdivr
addr16
pop
gs
pop
std
gs
push
xchg
mov
jo
data16
movsb
xchg
sbbl
cmc
ficoms
cmp
jp
insl
mov
inc
mov
cmpsl
push
push
adc
sub
mov
adc
jnp
cli
cmp
je
int
icebp
jne
lock
repz
movsb
push
xor
xor
clc
inc
jl
test
loopne
data16
sbb
xor
jno
mov
pop
or
lahf
lock
movsb
add
stc
stos
es
mov
and
inc
pop
fidivs
push
or
pop
sub
xchg
sub
xor
cwtl
hlt
mov
ja
pop
jns
mov
pop
je
inc
xor
adc
cmp
mov
xor
daa
icebp
xor
ficompl
cmpsb
jno
test
xchg
ljmp
jl
in
stc
pop
rcrb
inc
xchg
pop
fisubrs
adc
popa
pop
cmp
mov
es
mov
mov
sbb
xor
dec
or
iret
js
out
rolb
es
add
add
clc
add
ret
jbe
push
or
push
xchg
fadds
or
and
test
js
cmc
cmp
xor
in
fs
push
das
jecxz
pop
loopne
or
mov
or
inc
rorl
std
cmp
gs
mov
jae
shrb
xchg
pop
add
push
in
jmp
outsl
sbb
mov
pop
repnz
in
dec
in
inc
jo
push
cli
sbb
inc
xchg
lret
pusha
shlb
imul
mov
pop
shlb
mov
clc
test
xor
loop
cli
test
lcall
test
pop
sub
sub
xchg
dec
mov
aam
adc
leave
ficoms
jg
add
ljmp
sub
jnp
in
loop
nop
inc
pop
push
test
lea
jp
or
in
leave
cmp
sbb
push
aas
orl
or
in
ja
sub
repz
xchg
out
jnp
cmp
cmpsb
adc
lret
xor
or
pop
aam
adc
dec
ret
xor
push
mov
ret
xchg
xor
dec
subl
mov
xchg
shrl
out
mov
xchg
xchg
out
dec
bound
push
out
jp
dec
pop
into
sub
xchg
push
iret
mov
jmp
pop
mov
cmp
xchg
ret
xchg
divb
xchg
cmpsb
cltd
and
dec
dec
in
fs
fisubs
inc
movsb
lock
js
or
push
xor
or
mov
adcl
jne
mov
idivl
xchg
mov
fisttpll
xchg
dec
ss
and
pop
add
mov
fnsave
cwtl
mov
jge
mov
sbb
popa
or
pop
fs
sub
dec
add
pop
subb
mov
add
pushl
inc
adc
mov
pop
fcmovu
subb
lahf
popa
iret
or
repnz
sub
fildl
jae
add
ret
jo
popa
jmp
mov
push
pop
mov
jg
cmpsl
fcompl
mov
push
mov
movsl
shll
popa
in
adc
call
ss
test
mov
push
or
test
jbe
xchg
loopne
xor
mov
mov
push
lcall
incl
pop
and
mov
add
xchg
add
mov
sbb
test
cmp
jp
jl
mov
sub
outsb
fadds
or
cmpsl
jg
cli
inc
aam
push
adc
xchg
mov
scas
fsubs
xor
lahf
mov
out
aas
in
mov
pop
dec
jmp
pop
push
fwait
push
sbb
add
fildl
cmp
leave
xchg
adc
std
stos
pop
inc
int
mov
fs
jl
ret
mov
jg
loope
shll
aam
or
mov
jp
inc
mov
dec
repnz
cmp
sbb
leave
pop
shll
outsl
movsb
jae
push
cmpsb
push
test
mov
dec
push
lods
pop
shll
fsubrp
test
clc
mov
test
aas
mov
imulb
cmpsb
dec
dec
in
cmp
jmp
lahf
sti
lahf
imul
mov
loop
inc
into
adc
xchg
xor
jl
mov
rorl
out
mov
fldt
add
mov
rcl
push
lret
repz
pop
mov
add
dec
or
daa
in
sti
mov
or
mov
scas
push
cld
cli
les
test
jb
int
xchg
popf
imul
subl
push
orb
sbb
add
mov
shlb
lahf
ret
leave
and
cs
xor
xor
sub
mov
sub
icebp
sbb
jne
mov
adc
in
setbe
sub
and
add
popf
mov
jno
adc
jae
push
push
push
or
sub
push
movsb
sub
es
pop
lahf
sbb
test
mov
andl
mov
sub
rcrl
mulb
das
xor
mov
std
outsl
mov
jb
xchg
nop
mov
or
lret
dec
addr16
jmp
xchg
and
dec
inc
hlt
inc
loop
js
lcall
push
mov
out
adc
test
xchg
popf
lock
pop
testl
dec
push
in
in
inc
clc
out
out
nop
mov
call
repz
inc
pushf
call
fs
in
mov
cld
jp
lcall
jg
mov
aas
int
cmp
jmp
mov
and
sbb
movsl
mov
add
jne
js
adc
enter
movsb
dec
loopne
add
xchg
xor
dec
out
lds
sub
in
sbb
call
shll
sbb
push
cmpl
sub
loop
push
cmp
or
scas
or
repz
cli
add
test
nop
ja
push
mov
xor
or
dec
daa
leave
cmp
popf
xchg
fwait
push
xchg
into
std
roll
inc
jecxz
jg
fdivs
mov
jns
dec
and
int3
cmp
push
or
sub
and
aas
mov
dec
cmpsl
mov
jb
lcall
mov
xchg
mov
mov
cmp
push
fs
movsl
pop
iret
imul
jmp
or
inc
stos
decl
mov
pushl
dec
push
notb
xor
dec
push
inc
test
cmp
xchg
cmp
into
insl
hlt
or
mov
inc
inc
cmp
fwait
dec
add
shlb
loopne
dec
push
insb
icebp
inc
sti
inc
pop
mov
clc
dec
mov
dec
sbb
adc
add
leave
movsl
rclb
dec
inc
shlb
push
jnp
sti
xor
cmp
pop
xorl
mov
or
cltd
push
cs
out
xor
call
sbb
or
mov
jmp
cmp
inc
pop
mov
mov
xchg
push
sbb
test
and
push
sub
pop
add
mov
ja
lcall
dec
popa
fdivs
fcmovnbe
aas
inc
and
jnp
xor
in
mov
repz
pop
jns
adc
or
or
imul
lods
adc
repnz
ja
lods
test
into
imul
gs
or
inc
frndint
mov
xor
lret
test
adc
mov
mov
add
jb
mov
mov
pop
jae
fwait
xchg
pop
dec
fistpl
imul
fwait
ja
mov
cs
cli
jbe
xor
adc
int
xorb
leave
std
xchg
mov
adc
xor
rcrl
dec
leave
mov
fcomip
push
sub
lret
cmp
xchg
repz
insb
call
xlat
push
scas
mov
push
cmp
rclb
stc
out
cmc
dec
ret
mov
aad
cmp
popf
cli
popa
mov
sub
jne
push
mov
sub
add
pop
mov
adc
lahf
or
inc
imul
stc
xchg
jbe
pop
sbb
mov
cmpsb
inc
jmp
push
mov
test
xlat
bound
or
jbe
sub
out
hlt
and
ret
in
sub
repnz
jl
inc
push
inc
jle
jmp
loop
inc
cmpsl
je
out
push
or
adc
jmp
mov
xlat
call
add
daa
pop
pop
adc
notb
cld
adc
sbb
mov
dec
sub
cmp
jle
dec
cmp
stc
push
shlb
add
ss
addr16
hlt
fsubp
push
ret
pop
cmpl
fstpt
adc
in
mov
popa
cwtl
sub
fndisi(8087
lods
inc
mov
movsl
outsb
jg
sbb
sub
sub
lcall
pop
jo
invd
sbb
xchg
xlat
jg
inc
es
pop
fldcw
popf
jp
ret
lods
push
mov
imul
xchg
cwtl
ja
dec
lcall
popf
negl
cs
gs
arpl
std
or
mov
sub
sbb
loop
add
inc
jbe
dec
inc
xor
int3
fstpl
dec
jne
and
sbb
out
lret
mov
in
and
xchg
add
mov
loop
div
sti
xor
cmp
fdivrl
out
xchg
cmpsl
pop
and
popa
pop
xor
int3
jl
jnp
fiadds
or
cmp
in
xchg
data16
mov
mov
aad
loop
or
inc
mov
scas
or
cmp
lods
push
testl
aas
xor
and
mov
mov
out
pop
outsb
and
into
call
jl
push
cli
pushf
mov
dec
xchg
jno
scas
cltd
cli
jp
push
or
in
movsb
cld
dec
rcrb
stos
mov
aaa
sub
aad
pusha
xor
aam
mov
adc
inc
nop/reserved
mov
ljmp
xor
mov
nop
gs
push
xor
mov
or
dec
adc
push
mov
outsl
inc
adc
inc
jnp
fcoms
lcall
jecxz
sub
into
bound
popf
icebp
pop
xchg
push
test
aas
in
in
dec
push
xchg
push
subb
add
pop
xlat
jp
fsts
jge
leave
sarb
sub
cmp
xor
dec
imul
sahf
xor
ret
mov
into
or
jge
fwait
jg
mov
adc
cld
inc
sahf
icebp
push
adc
mov
jl
jne
xchg
int
sub
addl
jp
aad
pushf
jno
xor
dec
sub
or
sbbb
inc
mov
push
pop
lock
in
insl
data16
in
jmp
jne
mov
jp
sub
push
add
mov
jb
inc
imul
xor
mov
repnz
mov
jl
test
mov
mov
leave
pop
xchg
jp
xchg
pop
cli
jmp
sbb
stos
dec
add
movsl
insl
or
or
sub
push
mov
std
aas
or
jbe
xchg
cmp
rcrb
inc
cli
loope
mov
cmp
push
mov
rorb
pop
call
xchg
cmovnp
xor
sbb
frstor
aas
mov
or
out
dec
and
sbb
or
sub
ja
adc
adc
test
dec
cmp
mov
and
adc
cli
push
jmp
mov
cmp
stos
aam
repnz
pop
popf
iret
jns
in
movsl
test
xchg
shlb
jo
sbb
cmp
out
jbe
das
out
in
test
shll
push
mov
hlt
mov
andl
iret
dec
or
adc
xor
jecxz
dec
icebp
pop
or
add
sub
cli
lret
xlat
push
xlat
adc
sub
sub
xor
fcomps
lcall
inc
popa
je
mov
shlb
cmpsb
rcrl
mov
neg
loopne
sub
call
cmp
xor
xchg
into
cmpsb
add
pop
and
jae
add
push
fnstenv
dec
adc
jmp
lock
xor
and
aad
lods
repnz
dec
cld
ss
lahf
mov
xchg
mov
dec
ljmp
sti
bound
sub
and
push
es
add
mov
inc
mov
and
in
insb
mov
fldenv
pop
mov
lods
pop
mov
add
out
test
pop
jmp
cmp
sbb
ret
imul
xchg
or
shrl
push
xcrypt-cfb
cmpsl
bound
xor
out
addr16
or
add
rcrw
pusha
enter
imul
mov
and
decb
mov
shrb
jge
add
fnstcw
xorb
sbb
mov
mov
push
ja
mov
inc
scas
or
iret
pop
fs
out
mov
cwtl
push
shl
popa
and
sub
cmp
mov
mov
sbb
and
mov
loop
test
jb
mov
lcall
lock
sbb
outsb
sub
mov
test
inc
shll
in
xchg
cmc
pop
mov
call
cmp
jns
adc
xor
scas
in
daa
test
dec
mov
push
fidivrs
stc
jo
xchg
ljmp
bnd
or
or
cmp
imul
add
and
in
lcall
xor
sbb
add
and
movb
inc
out
addb
ljmp
fstpl
xorl
fldt
pop
pop
mov
adcl
and
mov
mov
rorb
shr
test
xor
inc
pop
mov
rcl
pusha
mov
fmull
sbb
in
test
sub
pop
mov
jbe
nop
add
icebp
adc
lds
loopne
shll
fisttpl
int3
mov
dec
cltd
cmp
dec
mov
jbe
or
or
xchg
xor
test
or
mov
gs
mov
lret
pop
aam
mov
add
mov
cmp
sub
xor
sbb
lock
js
iret
aad
insl
and
push
sbb
jg
sbb
cmp
lahf
xchg
xor
fidivs
xor
jge
mov
ret
jbe
cli
loop
mov
add
idivb
xchg
out
inc
iret
pop
cmpsb
shll
push
sbb
jle
push
mov
ljmp
cmc
push
test
gs
in
das
jmp
pop
pop
dec
data16
cmp
outsl
int
in
leave
sarb
sub
push
test
mov
pusha
sub
fcmovbe
jnp
enter
cli
pop
or
sub
call
or
cmpsl
mov
movsb
pop
xor
stc
mov
xchg
iret
stc
shlb
jb
add
sub
test
jle
icebp
xor
and
aad
lret
loope
out
adc
push
dec
inc
push
cmp
mov
icebp
scas
mov
and
sbb
pop
mov
inc
push
push
jle
push
lahf
xor
adc
test
push
cld
pushf
adc
adcb
xchg
or
insl
adc
sbb
push
dec
and
rclb
mov
adc
aas
ja
adc
mov
cs
mov
mov
add
cmp
ss
scas
add
stc
std
ss
pop
and
test
int
fs
xchg
lret
imul
andl
mov
xchg
and
cwtl
xor
cmp
cmc
lahf
mov
rolb
fs
mov
or
shlb
jle
mov
and
push
sti
dec
inc
dec
xchg
and
mov
imul
cmpsl
cltd
mov
int
pusha
in
dec
aam
movl
jbe
mov
push
sbb
xorl
sbb
outsb
cmc
xlat
aaa
mov
sub
in
adc
lahf
insb
add
js
inc
inc
and
xchg
jb
lret
rcrl
mul
mov
dec
repz
inc
push
mov
xchg
dec
orb
inc
mov
inc
and
mov
cmpl
sub
hlt
and
mov
push
fidivrl
popf
jns
jecxz
and
shlb
dec
aad
mov
xchg
push
lea
data16
ss
add
pop
or
gs
jns
je
jl
sarl
sbb
cmp
dec
dec
stc
notl
dec
jno
lods
sub
fcmovnu
rcll
inc
sub
lea
daa
rcll
push
fisubl
sub
sub
jne
test
fs
and
xor
fistpl
aas
negb
divl
arpl
pop
dec
push
pushf
test
in
cmp
movsb
fists
rcl
popa
add
lahf
pop
enter
rcrb
adcb
mov
in
pop
pop
pop
stos
mov
jp
ret
jo
repnz
into
ret
imul
inc
arpl
cli
loopne
jne
lea
jg
imul
iret
mov
xchg
rorb
je
push
dec
into
loopne
std
or
mov
mul
mov
jno
cmp
fnstsw
xchg
xchg
push
aam
sbb
lahf
mov
or
iret
push
out
push
xchg
sbb
inc
dec
in
movl
mov
rclb
rcrb
roll
adc
popa
xchg
jmp
test
orl
sbb
sahf
mov
or
jne
xor
js
sbbl
mov
and
inc
in
in
mov
and
aaa
mov
dec
cs
divb
out
pop
sub
into
fnsave
cmpl
xchg
add
int
push
cmp
pop
dec
push
dec
adc
outsl
cli
mov
push
movsl
roll
dec
and
out
xlat
mov
sbb
test
sbb
jnp
popa
sbb
mov
push
lock
dec
sub
cmc
inc
mov
fildl
loope
xor
mov
scas
clc
loop
mov
test
lds
scas
jns
mov
lock
repz
mov
ds
mov
das
xchg
nop
pop
lcall
lret
aad
mov
sbb
bound
and
cmp
daa
mov
loop
pop
mov
pop
pop
sub
std
jp
stc
iret
cld
insl
lret
in
scas
pop
lods
or
sbb
scas
sbb
fdivl
inc
std
sbb
lea
xlat
cmpb
sbb
inc
rcrb
sbb
fiaddl
cwtl
int3
push
pop
aam
or
ret
xor
sbb
std
push
jae
jnp
roll
cmp
inc
stc
andb
pusha
jne
jg
xlat
stos
clc
sub
dec
loope
test
xchg
and
rclb
pop
cmpsl
adc
movsb
cmp
jns
dec
jge
sbb
or
lahf
jge
test
sbbb
adc
mov
ret
xchg
sub
out
cmc
jmp
sbb
repnz
push
mov
cwtl
cmpsb
xchg
xor
pop
cmp
adc
xchg
push
push
mov
in
push
iret
mov
jnp
mov
sub
cli
enter
movsb
fmull
xor
cmp
dec
jne
insb
add
xor
repnz
pop
testl
push
not
sbb
rcr
cli
leave
scas
xor
stc
sub
adc
and
loop
les
push
pop
and
out
cmc
jp
add
sarb
pop
shr
inc
xor
xchg
pop
xorl
mov
and
dec
cwtl
mov
out
mov
in
imul
and
ss
loopne
sar
mov
fcmovb
iret
xchg
jo
dec
mov
in
lock
push
sti
fdivs
sar
adc
mov
fcmove
pop
lods
xchg
jg
into
scas
mov
sbb
dec
test
jp
sub
mov
xchg
dec
sbb
sbb
popw
jnp
jge
pop
lcall
test
mov
int3
pusha
shrl
mov
push
jb
sub
cli
es
push
xchg
xchg
adc
cmpsb
cld
jmp
cltd
adc
jg
or
ss
lret
push
mov
push
push
test
fldl
pavgw
mov
pop
xchg
pop
shll
inc
mov
mov
push
pop
pop
mov
dec
adcl
das
stos
daa
add
pop
sti
xchg
adc
or
shll
push
fnstsw
clc
xchg
imul
test
movsb
push
sbb
adc
mov
dec
or
mov
addl
fs
cmp
in
shll
pop
cmp
mov
lock
and
out
sbb
xor
xchg
outsb
xor
mov
in
mov
xorl
or
dec
or
jg
or
xor
popf
cwtd
fdivs
adc
jle
jp
popa
fnsave
and
aas
or
gs
clc
mov
cmp
add
add
sarl
fistps
icebp
mov
cmp
cwtl
adc
xchg
cmc
xor
sbb
or
dec
push
push
ficomps
call
dec
pusha
aaa
mov
stos
dec
mov
mov
add
mov
mov
aad
aam
xor
mov
xor
rolb
test
subb
dec
sti
or
int
aam
andl
scas
out
fsub
insb
pop
repz
dec
push
int
dec
cmc
jae
mov
or
adc
test
push
jne
movsb
cmpsl
pavgb
add
scas
mov
xor
sub
pop
push
pusha
ja
dec
sti
test
bsr
out
gs
jno
xchg
mov
sub
jle
mov
repnz
mov
js
sub
stc
jmp
cmp
cwtl
push
cmpsb
mov
loop
decl
adc
out
sub
inc
sahf
push
xchg
loope
mov
insl
bound
mov
out
xchg
cmpsl
push
or
mov
jge
push
test
out
lock
dec
inc
out
xchg
in
shl
sbb
pop
adc
jecxz
sbb
out
adcl
jl
decb
iret
push
outsb
pop
xchg
or
pop
inc
out
jmp
gs
jae
push
push
pop
test
roll
adcl
call
test
add
mov
les
or
xchg
clc
insl
mov
dec
adc
or
dec
repnz
or
cmp
mov
pop
or
inc
sar
adc
mov
imul
ret
jbe
aad
cmp
repnz
repnz
dec
aam
jne
sub
fs
inc
ret
imul
push
sub
fsubs
or
dec
sarb
aas
add
sub
sub
ja
add
or
cli
inc
imul
dec
enter
mov
pushf
sbb
addr16
jns
and
mov
xchg
sub
iret
mov
pop
out
adc
xor
mov
stc
pop
push
loopne
xor
sbb
xlat
and
imulb
jge
inc
scas
pop
arpl
pop
and
lea
mov
push
or
lock
jg
mov
sub
cmc
xchg
inc
ljmp
aas
imul
imul
into
adc
rorb
ds
push
sub
cmp
jae
jl
pop
andb
fistl
mov
sub
enter
and
or
cli
lock
hlt
cmc
test
mov
adc
ret
iret
xchg
jne
ljmp
or
inc
pop
mov
cmp
mov
pop
add
jmp
push
xor
add
mov
aaa
pop
push
sti
sbb
or
stc
cmc
movsb
mov
sub
mov
aas
mov
push
jl
into
notl
jnp
sbb
mov
xchg
pop
mov
jge
add
jmp
mov
cmp
test
or
inc
add
movsb
loope
andl
dec
cmc
incb
mov
aaa
mov
scas
dec
push
repnz
xchg
dec
popa
xor
add
push
ljmp
inc
or
imul
xor
fistps
gs
inc
jne
inc
xchg
pop
or
fmuls
pushf
subl
jg
jns
jg
ret
or
and
fiadds
aas
push
mov
inc
pushf
pushf
jns
mov
stos
fadds
je
cmc
icebp
lds
in
push
je
push
dec
dec
nop
pusha
adc
jge
jecxz
jnp
addr16
add
push
pop
cld
imul
add
decb
ret
adc
mov
mov
repz
xchg
jp
femms
sti
lods
mov
int3
jge
jnp
sbb
mov
mov
dec
inc
push
lods
jl
lods
cmpxchg
shlb
mov
js
sar
pushf
sub
shrb
sub
movsl
adc
cmp
mov
mov
mov
int
cmpsb
cmc
scas
cmpsl
or
cmpb
push
xor
dec
ljmp
dec
dec
or
sbb
bound
test
xor
lcall
jp
pushl
jnp
pop
imul
jne
stc
test
loope
dec
les
iret
xchg
into
xchg
aam
lahf
xor
pop
push
xchg
loopne
push
or
sbb
fsub
xlat
inc
loopne
fists
data16
mov
mov
xchg
rol
adc
test
ljmp
push
and
into
lds
inc
or
pop
jb
sub
int
xor
inc
jmp
outsl
mov
repnz
or
pop
add
xchg
loopne
cmp
push
inc
adc
imul
out
ds
rcrb
cmp
jb
sbbl
pop
pop
mov
jae
outsb
jge
bound
mov
xor
movsb
ljmp
fwait
inc
xor
adc
add
mov
mov
pushf
mov
fwait
mov
iret
sub
ss
cmp
and
in
cli
in
cmpl
pushf
xchg
inc
shl
mov
out
pop
rcl
imul
lds
sub
xchg
repz
aaa
icebp
adc
pop
and
int
lret
shll
cs
push
pop
xchg
push
add
ds
dec
jo
add
add
and
aas
shrl
test
cmpsl
sub
ret
and
cmp
jp
out
inc
repnz
mov
fnsave
jo
mov
xlat
adc
sbb
add
cmp
inc
xor
pop
and
lds
std
mov
dec
pop
dec
mov
sbb
mov
mov
pop
inc
aaa
sbb
out
mov
pop
loope
movsl
test
push
dec
mov
mov
sahf
mov
push
fwait
mov
js
test
lods
inc
sahf
jmp
test
inc
xor
es
ret
cmp
pop
popa
shl
adc
pop
sub
sub
inc
arpl
xor
mov
xchg
int3
mov
clc
push
mov
out
jae
mov
inc
dec
mov
and
cmp
iret
cmp
cmp
cmpsl
push
push
inc
inc
ds
pop
cmpsl
cmp
movsl
mov
andb
ss
jle
or
xlat
jle
xor
add
ret
into
fwait
and
je
mov
xor
in
mov
xchg
xchg
mov
rcrl
sbb
rol
outsl
cltd
pushf
or
fadd
fs
cld
lods
movsb
imul
dec
rcl
xchg
sub
incl
cltd
rorl
sbbb
xchg
js
jb
fs
or
test
cwtl
test
scas
jle
xlat
add
sbb
fimuls
std
mov
push
xor
xor
mov
cld
pushf
fimull
lret
dec
dec
shr
or
xchg
or
xor
push
test
imul
push
jae
jge
test
adc
dec
inc
sbbb
out
mov
or
mov
insb
xlat
movsb
iret
and
and
cmc
xchg
push
lcall
pop
mov
push
or
repnz
pop
adc
mov
dec
sbb
sub
pop
faddl
data16
dec
dec
stos
dec
je
pop
push
imul
in
frstor
dec
scas
cli
cmpsl
aam
push
xchg
cmc
cltd
push
xchg
xchg
sub
adc
dec
mov
repnz
adc
mov
lods
das
stos
adc
movsb
push
push
daa
cmp
in
adc
repnz
jg
inc
lcall
mov
xchg
inc
and
sub
lods
xchg
stos
jae
add
push
mov
mov
sub
mov
aas
xchg
mov
repz
ficomps
dec
mov
sbb
repnz
xchg
adcl
dec
jl
lock
fucomi
xor
cmc
arpl
or
aad
xchg
clc
imul
xchg
push
adc
ret
lds
xchg
mov
dec
mov
xlat
mov
lea
iret
orl
lcall
ja
outsb
addb
lea
mov
mov
cmp
mov
in
adc
or
fadds
jo
ds
arpl
aam
mov
pop
in
cmpsb
push
xchg
cmc
or
and
push
scas
xorl
testl
sti
xchg
xchg
enter
pop
shrb
xchg
dec
js
outsb
fildll
out
in
or
mov
lea
xchg
lods
cwtl
ljmp
push
xor
push
fisubrl
in
add
jl
adc
iret
mov
inc
popa
aas
jb
loopne
lcall
ds
jne
push
xchg
dec
jmp
sbb
sub
inc
scas
lods
outsb
sub
mov
iret
and
aam
xchg
pop
sbb
and
cmp
in
scas
cmp
xchg
lret
push
add
addr16
pop
and
cli
push
xlat
es
mov
jle
iret
test
out
inc
push
xchg
test
dec
jmp
lods
xor
push
mov
icebp
shrl
jl
mov
in
pushf
cmc
insl
repnz
inc
and
call
adc
arpl
push
sbb
jl
ja
jl
popa
lea
xchg
orb
cmc
add
in
adc
inc
divb
mov
dec
push
mov
mov
dec
shll
fabs
call
repnz
inc
add
xor
xchg
and
ljmp
xor
sbb
repz
in
jle
jl
addr16
lods
out
pop
xchg
mov
test
add
xchg
fbstp
sub
cmp
lock
mov
roll
movsl
mov
movsl
xchg
dec
addr16
daa
sbb
push
xchg
dec
pushf
jnp
adc
scas
repz
and
ljmp
cmp
arpl
fdivr
or
jle
lods
icebp
fistl
jle
cmp
fwait
aaa
xchg
dec
call
rcl
jle
add
adc
bound
xchg
fstp
xchg
sbb
rorl
arpl
sub
sarb
negl
sub
addb
sbb
inc
mov
enter
icebp
mov
sub
add
mov
movsb
shrl
test
icebp
inc
sti
pop
sub
int3
sahf
dec
lret
aam
roll
mov
add
pop
lods
mov
into
pop
movsb
out
ds
cmpsl
mov
mov
movsb
cli
jg
arpl
ja
adcl
lods
sbb
xchg
mov
mov
mov
faddp
shlb
adc
movsl
mov
mov
aam
negl
mov
mov
insb
push
mov
les
in
inc
setnp
adc
mov
aad
or
inc
test
in
lea
xchg
sbb
jo
sbb
call
scas
jnp
or
sti
adc
cmp
ret
jo
pop
popa
jno
test
loopne
roll
inc
ret
xchg
mov
push
dec
jb
sbb
jns
add
cs
push
fidivs
ret
adc
and
mov
inc
out
mov
jne
cltd
out
js
rolb
jbe
js
inc
mov
push
andl
sbb
mov
shrl
mov
jmp
iret
add
or
xor
cld
mov
sbb
pop
clc
or
mov
adc
aam
adc
mov
insl
jge
or
and
mov
mov
mov
js
cmpsb
push
push
sub
leave
or
imul
loope
mov
fwait
insl
mov
lods
xor
sub
orl
jae
push
mov
dec
ja
inc
jecxz
test
push
dec
xor
movsl
leave
xlat
mov
es
xchg
addr16
mov
mov
lahf
or
repnz
cld
loop
aaa
aam
mov
jg
inc
adc
iret
mov
mov
adc
pop
paddb
dec
add
mov
dec
xchg
cmc
lret
inc
cmpb
jnp
imul
inc
lcall
jb
notb
push
xor
xor
ret
xchg
mov
fldt
ja
fsubrp
loopne
jmp
lea
dec
into
pushf
mov
lock
fldt
pop
jp
jae
mov
mov
jno
sub
outsb
push
cmp
test
add
cli
jnp
inc
out
jo
mov
push
push
mov
iret
push
mov
push
in
lods
outsb
cmp
loop
or
outsb
cmpsl
xor
mov
aad
out
push
insb
imull
movb
shrb
sub
adc
loope
les
sub
pop
sub
xor
out
call
loop
push
cmp
and
lock
and
lret
movsl
cwtl
or
pop
cwtl
mov
dec
xlat
xchg
fimull
mov
xchg
dec
popa
adc
add
mov
xchg
mov
movsl
and
fs
lods
mov
aam
nop
popa
cmpsb
inc
lret
push
and
pop
add
out
and
adc
test
jno
cmp
jnp
add
adc
cmpsl
adc
imul
mov
into
sbbb
addb
stc
mov
scas
and
inc
mov
mov
xchg
ja
mov
adc
ffreep
mov
mov
cwtl
pop
shl
pushf
popf
fisubl
fwait
jg
ficompl
mov
jge
inc
aaa
mov
xchg
sub
mov
fwait
pop
pop
fsubs
xchg
lahf
jne
dec
mov
and
and
push
je
fs
aad
adc
push
add
inc
out
js
insb
ss
movsl
mov
or
test
adc
mov
movsl
dec
xor
gs
in
or
mov
push
mov
mov
inc
sbb
inc
ds
lret
mov
adc
cmp
lock
pop
loop
in
lret
leave
ret
inc
aad
pop
loope
test
or
dec
or
xor
mov
outsl
push
daa
aaa
loopne
das
mov
or
cmp
sub
ja
popa
cmpb
push
out
mov
mov
jg
in
ja
inc
cmpl
fsubrs
adcb
test
jge
les
aad
adc
cmp
jmp
fdiv
xorb
int3
dec
and
pop
push
xlat
mov
sbb
mov
bswap
add
or
in
mov
sti
adc
fistpl
jmp
and
push
mov
xor
popf
int
out
sbb
inc
fisttps
or
lret
stc
inc
ljmp
cli
adcl
repnz
pop
cmpsl
int3
xlat
popa
mov
rol
sti
jge
mov
add
addl
jae
mov
jg
mov
sbb
mov
inc
jg
sub
aaa
and
and
jge
mull
divb
xorb
leave
lods
in
cli
data16
dec
jl
add
xorl
test
add
int
test
es
xor
xor
mov
ja
ljmp
call
sahf
mulb
push
jecxz,pn
pop
cmp
test
jae
xor
xchg
dec
sub
inc
leave
add
jp
fmuls
dec
das
pop
mov
inc
xchg
jns
leave
scas
jne
pop
push
xchg
sarl
jbe
mov
stos
repnz
inc
sbb
fs
dec
xorb
adc
and
iret
cmp
push
loopne
jns
scas
int3
icebp
or
pop
ja
add
xor
lcall
xor
cmp
call
sbb
icebp
jbe
and
gs
movsl
mov
jnp
inc
out
fildl
or
ja
js
in
fld
push
dec
lds
pop
arpl
nop
push
dec
movd
add
pop
movsl
pop
push
push
sub
push
ja
cmpl
inc
xor
inc
mov
fildll
addr16
ss
jbe
push
cld
cmc
mov
repnz
mov
sbb
jg
ffreep
cmp
adc
xchg
outsl
int
rclb
lock
leave
test
movsb
mov
add
cmpsb
movsl
icebp
add
sbb
pop
cmp
sub
data16
stos
and
jg
fcoms
sahf
add
adc
mov
pop
imul
jne
stc
lea
mov
fiaddl
xor
fmulp
dec
popa
stos
adc
mov
test
lcall
dec
jg
add
cli
push
dec
mov
xor
inc
jnp
clc
jbe
lcall
stos
add
lods
les
inc
aas
push
mov
imul
leave
adc
or
scas
stc
movsb
lahf
lock
test
mov
jbe
mov
pop
pop
into
repnz
jbe
iret
mov
leave
mov
fxch
test
and
test
xchg
xchg
and
pop
mov
sahf
enter
cmp
dec
push
ljmp
jp
addl
xorl
jnp
cmp
mov
rcll
lea
add
push
mov
sbb
xchg
or
pop
in
mov
push
jnp
mov
mov
lods
mov
mov
repz
pop
push
mov
mov
cmp
lods
and
int
sti
mov
inc
push
cmp
push
xchg
sbb
pop
add
mov
and
dec
sbb
mov
cli
mov
ja
mov
lea
dec
fimull
insl
cmc
aaa
push
aas
add
or
xchg
decl
popf
inc
fiadds
inc
pusha
fcomps
bound
jns
mov
jp
xchg
push
cmpsl
sbb
insb
xchg
lret
xchg
xchg
sub
xchg
out
dec
adcb
add
dec
leave
jp
xchg
shlb
lcall
push
jge
mov
dec
and
test
inc
clc
cmp
sbb
out
cli
out
shrb
mov
sahf
les
je
into
div
jbe
test
inc
outsb
dec
pop
fnstenv
rclb
insb
outsb
icebp
jecxz
push
lods
or
sbb
xor
daa
cmp
cmp
lods
popa
pop
inc
bound
rcrb
imul
push
jbe
fldcw
jmp
out
mov
in
sbb
stos
sbb
pusha
mov
fdivl
inc
or
aam
adc
lret
sbb
mov
jmp
filds
aaa
cmpsb
leave
test
jp
mov
mov
movsb
xchg
jp
xor
shr
fs
cmpsb
inc
mov
cmp
dec
mov
leave
add
jne
fadds
or
xor
mov
fadds
test
cmp
aad
adc
or
pop
push
cltd
inc
jg
mov
or
enter
repz
mov
sub
add
jne
cmpsb
push
push
test
inc
fbstp
xor
xchg
out
or
mov
mov
shll
popf
xchg
jb
pushf
stos
xchg
mov
sub
dec
push
cmp
and
jle
btrl
ja
test
cmpsl
enter
xchg
adc
jo
cmp
push
jg
inc
mov
mov
xchg
in
push
adc
mulb
cmp
sub
xchg
movsl
mov
cmp
lea
sub
push
push
dec
cwtl
mov
xchg
enter
dec
cmp
mov
loope
push
mull
ret
cmp
mov
dec
shll
and
and
push
mov
lods
into
hlt
pop
add
test
out
cmc
mov
loope
pop
xchg
mov
js
xor
stos
inc
rorl
xor
jb
push
aaa
fs
dec
test
or
sbb
jl
fldenv
add
icebp
out
mov
mov
mov
icebp
aaa
sub
mul
or
dec
js
ret
mov
add
les
hlt
outsb
mov
rclb
and
mov
sbb
in
jns
fistl
dec
mov
cltd
in
scas
sbb
mov
jnp
jl
jnp
ds
and
insb
ret
mov
pop
pop
mov
ja
jge
ja
pop
dec
outsl
repnz
test
call
cmp
aad
mov
dec
clc
loopne
mov
and
mull
jmp
pop
dec
mov
ret
mov
or
fdivrs
xor
fwait
mov
in
fcompl
pop
xor
addl
stos
add
fwait
sub
push
scas
push
mov
lock
es
add
ret
test
inc
mov
pop
jne
dec
loop
scas
mov
sub
mov
xor
jo
xchg
push
mov
clc
cli
adc
popa
fiaddl
rorl
das
lods
enter
fwait
sbb
aaa
push
add
loopne
insb
sub
arpl
imul
jecxz
mov
std
mov
mov
sbb
enter
sub
push
fs
dec
mov
js
cwtl
add
pop
pop
xor
xor
bound
dec
add
rcrb
or
mov
stc
inc
into
cmp
dec
sbb
mov
jg
aad
mov
mov
pop
xor
inc
pop
mov
movsl
adc
cld
lcall
sub
mov
sub
xlat
add
lret
jg
aad
aad
subb
inc
mov
hlt
test
gs
lods
mov
xor
push
dec
jmp
aas
inc
test
inc
cli
jno
lods
jmp
push
cltd
enter
add
pop
sub
orb
mov
mov
repnz
and
imul
shll
call
pop
lock
in
push
push
in
sahf
sar
sbb
sub
adc
mov
xchg
in
lock
outsl
fsubrs
inc
popa
adc
or
xchg
dec
jle
cmpsb
frstor
in
or
inc
fisttps
dec
sbb
sbb
inc
stc
lods
test
mov
ss
mov
dec
or
mov
loopne
adc
pop
cmp
pop
xchg
jnp
insb
add
pushf
dec
or
ffree
dec
push
aad
sarl
lahf
add
cmp
pusha
xchg
and
test
jns
push
aad
mov
int
mov
mov
push
add
dec
fwait
push
mov
repnz
ja
lds
rcr
vgetmantps
pop
sbb
dec
pop
arpl
rcr
dec
sbb
fiaddl
js
int3
lods
dec
mov
and
mov
push
jg
xlat
or
cmpsl
inc
test
divl
int3
roll
gs
dec
shlb
je
fadds
push
into
in
pop
or
inc
xchg
jb
jb
xchg
cmp
pop
sbb
cltd
hlt
in
sbbb
fstpt
mov
or
dec
inc
inc
sub
mov
mov
mov
call
push
mov
dec
push
cwtl
adc
icebp
push
mov
sbb
sbbb
or
adc
push
out
iret
mov
push
or
cmp
add
xchg
sub
rorb
cltd
test
movb
inc
popa
sub
gs
int3
movsb
pop
mov
dec
call
cmp
popf
and
jae
js
cwtl
insb
in
jbe
pushf
lret
lret
adc
pop
fs
cmova
jo
jo
adc
bound
xlat
movsb
sahf
inc
jp
test
outsb
test
lret
and
dec
dec
mov
push
test
pop
or
mov
push
fcmovbe
popf
inc
sbb
dec
int3
adc
les
test
hlt
in
adc
mov
mov
sar
cmp
mov
sub
push
lret
sub
cwtl
testl
push
inc
pop
fsts
cmp
int
adc
out
xor
and
vmaskmovdqu
outsl
lods
add
pop
pop
stc
fsubrs
xchg
xchg
mov
inc
movsl
mov
frstor
test
xorb
cs
push
push
outsb
jb
data16
ud0
cmp
xchg
push
push
loop
pop
leave
mov
shll
in
nop
jge
cs
mov
xlat
mov
mov
jge
stos
or
inc
jl
cld
jge
aaa
and
ret
push
cmpb
mov
bound
rol
lcall
jno
jae
stc
and
mov
mov
fmull
inc
inc
add
adc
nop
inc
adc
pushl
fwait
ret
cwtl
add
mov
aad
arpl
fwait
jg
icebp
cmp
and
aad
movsl
sbb
inc
mov
and
lods
fmull
xchg
xor
sub
negb
aaa
push
aaa
pop
js
dec
adc
aam
xchg
in
sbb
push
xchg
dec
dec
into
popf
test
lds
mov
jb
repnz
mov
mov
add
ljmp
scas
mov
add
hlt
popf
inc
stos
lret
cmp
push
mov
adc
dec
jmp
lock
movsl
ss
imul
push
sub
cmpsb
dec
xorl
sbbl
hlt
or
jno
aad
cli
stc
andb
jge
sti
sbb
xchg
mov
pop
lret
inc
stos
scas
stc
mov
xchg
outsl
push
mov
add
cs
add
fistps
lds
mov
dec
xchg
sub
push
fcompl
xor
inc
test
icebp
jb
pop
into
mov
sub
insl
pop
pop
iret
stos
inc
jno
scas
dec
jbe
or
pop
pop
and
mov
inc
adc
mov
cwtl
xchg
jo
lds
fidivrl
mov
psubusb
sub
mov
aas
fcomps
jno
inc
dec
adc
xor
jg
repnz
jge
aaa
aas
movb
and
pop
gs
les
pop
push
inc
mov
mov
rcll
into
outsb
dec
fmull
js
cmp
pop
iret
jmp
adc
jae
or
or
sbb
aaa
int
out
scas
or
imul
shrl
cmc
cmp
cmp
and
mull
aad
mov
daa
pop
push
and
mov
ret
lcall
jns
lock
cmp
addr16
cltd
and
shl
inc
je
pop
aaa
lret
int
shl
xchg
pop
add
in
stos
js
adcb
out
cmp
in
aaa
inc
icebp
pop
cs
sbb
dec
mov
mov
xlat
cwtl
jl
mov
ret
push
cs
aas
or
dec
lock
popf
fucomi
leave
ds
dec
mov
mov
adc
out
push
jmp
dec
scas
test
stos
scas
pop
cmpsl
insb
hlt
bound
rorl
fstpt
add
aad
out
outsb
pop
nop/reserved
mov
lea
add
ror
push
pop
fildll
idivb
xchg
mov
mov
mov
push
jne
mov
lds
lcall
mov
lcall
mov
mov
into
enter
inc
push
jns
pop
repnz
popa
adc
std
sbb
push
and
inc
lods
jnp
jmp
out
rorb
cli
nop
xor
jl
bound
push
icebp
into
ljmp
jge
je
adc
popa
mov
pop
inc
popa
into
jne
or
cmp
inc
sti
jl
mov
incb
mov
imul
aaa
sbb
movsb
or
fistps
imul
aam
fdivr
inc
fs
mov
es
fisttpl
cmp
sub
scas
jo
push
sbb
add
loope
mov
orl
nop
cwtl
and
jg
lret
inc
stc
into
push
jnp
jecxz
das
add
xchg
xor
push
mov
push
xchg
popa
dec
mov
and
push
mov
dec
jb
push
push
push
jb
in
repz
push
cmp
repnz
int3
xor
mov
repnz
xchg
out
inc
xchg
fimull
gs
xlat
pop
sarl
or
in
jecxz
ret
sbb
nop
cli
aas
es
cmpsl
sub
inc
push
setno
jns
ljmp
js
loopne
xchg
std
and
jmp
add
fadds
pop
test
adc
popf
sub
lock
add
push
push
shl
jns
add
cltd
adc
cmpsb
pop
sbb
outsb
or
mov
test
call
add
mov
mov
aad
sahf
out
cmpsl
inc
cltd
jo
inc
pop
cld
mov
add
icebp
pop
pop
cltd
mov
adcl
inc
sbb
dec
adc
andl
imul
stos
adc
pop
push
xor
pushf
or
dec
add
or
aas
mov
fadds
ret
inc
mov
and
test
add
pop
call
rol
dec
mov
cltd
daa
adc
cmp
add
mov
rolb
sub
test
xor
int3
jno
pop
jbe
sub
movsb
imul
jg
sbb
xchg
lods
fisttps
pushf
pop
jnp
mov
jnp
jmp
repz
mov
insl
popa
pop
jae
cli
cwtl
mov
jae
inc
fcoms
fwait
pop
addl
mov
push
sbb
xor
out
mov
aam
je
mov
cmp
pop
jmp
and
enter
std
cli
jg
movsb
pushf
mov
lods
mov
imul
push
out
jp
scas
adc
aas
push
cmpsb
xchg
push
movl
outsb
mov
fimuls
bound
adc
inc
lret
cs
dec
sub
iret
pop
ret
jg
mov
rcll
pop
fdiv
fisubrl
mov
sub
dec
insb
in
or
pop
fcomps
cs
add
loopne
xor
mov
mov
or
jo
and
popf
out
push
sbb
cmpsb
out
sub
or
call
inc
push
stos
push
ja
or
fdivrs
cmp
sbb
daa
das
rol
out
mov
js
imul
loop
inc
xor
xlat
es
sbb
push
mov
ficompl
imul
or
and
repnz
gs
aaa
xchg
pop
outsl
dec
shl
jl
mov
je
or
imulb
enter
out
pop
add
ja
pop
cmp
mov
sub
push
jg
push
sub
aam
fsubrs
cs
cs
jae
mov
push
sub
movsb
cwtl
mov
xchg
fwait
movsl
add
mov
jge
xchg
cmp
insb
int
sub
dec
mov
arpl
inc
fmull
mov
xchg
adc
jle
fsub
inc
dec
out
xchg
mov
ja
ffree
jb
sub
push
decl
dec
push
or
insb
pop
dec
ret
mov
xchg
xor
xchg
mov
xor
ret
shlb
mov
mov
jnp
pop
add
jno
mov
bound
xor
pop
xchg
es
pop
cld
jbe
imul
sbb
imul
push
mov
call
xchg
sahf
sbb
sbb
and
pop
adc
bound
cmpsb
lcall
xor
mov
adc
mov
xor
and
pop
mov
inc
gs
and
inc
mov
ss
jle
adc
lret
dec
push
scas
sarl
pop
iret
xchg
shlb
jmp
fs
dec
iret
mov
pop
iret
mov
ret
jb
lret
aad
xchg
call
orl
dec
dec
inc
arpl
shrl
pop
jo
mov
xor
adc
jg
movsl
call
js
fidivs
jmp
push
pop
addr16
mov
lret
andl
xchg
xlat
ret
or
push
popf
adc
in
sarl
nop
out
mov
pop
add
nop
pusha
outsb
in
dec
stos
push
pop
pop
data16
aaa
lds
jge
add
add
cld
adc
jno
xchg
outsl
lret
ficomps
push
or
push
fnsave
or
stos
sub
sub
gs
jg
mov
jle
xchg
imul
mov
lret
out
ficompl
add
leave
mov
ret
mov
cmp
outsl
mov
sarw
adc
sbb
jp
add
xor
je
cmpsb
sarl
lds
arpl
orb
xchg
in
mov
imul
dec
xor
xchg
pop
ret
pop
imul
inc
test
pop
mov
jge
aad
cmpsb
dec
xchg
inc
stos
clc
gs
test
je
addl
push
sub
cmpsl
dec
push
and
cld
sti
jp
dec
and
arpl
mov
outsb
movq
pop
mov
int3
cmp
mov
popa
push
xchg
jg
jmp
cmp
cwtl
cmp
roll
or
pop
jmp
jne
out
in
push
call
jno
stc
imul
inc
cwtl
xchg
mov
adc
loop
dec
push
jae
and
mull
pop
lea
out
shll
ds
hlt
and
jno
or
subl
fildll
mov
movsb
es
sub
mov
and
dec
sbb
jne
adc
add
fdivl
push
leave
sub
adc
ret
mov
aad
fnstenv
scas
js
aaa
pop
xlat
jbe
mov
mov
jb
arpl
inc
sarl
xchg
shlb
or
dec
in
jnp
push
fs
and
mov
cmp
pushf
xor
lret
xor
jp
adc
in
in
push
mov
stos
out
lahf
jnp
aad
ret
lods
enter
pop
nop
or
cmp
jmp
in
xchg
sbb
mov
cli
aaa
orl
ret
lcall
adc
pop
xor
push
xor
or
sbb
xor
lret
imul
adc
sbb
push
jne
or
pop
fsts
outsb
adc
jl
fs
adc
rcrl
jecxz
out
mov
test
jg
lret
inc
cld
decb
cmp
lcall
sbb
loopne
out
sub
sub
popa
or
int
imul
and
add
inc
mov
or
adcb
pop
add
cmpsl
out
icebp
mov
mov
pop
sbb
push
mov
and
cmp
sub
in
push
and
lock
aam
andb
loope
in
inc
inc
divl
enter
sub
icebp
dec
mov
push
add
repz
adc
mov
dec
jge,pn
push
addr16
popf
movsl
daa
loopne
stos
sub
cltd
or
jmp
cmpsb
adc
add
addb
lea
cmp
bound
add
daa
repnz
je
movd
add
mov
cld
push
mov
adc
mov
test
iret
mov
outsl
sub
addr16
fcomi
inc
pop
fwait
out
inc
mov
cmp
fsubr
fsubl
xor
hlt
cltd
mov
lods
xchg
jb
ficoml
mov
adc
cmp
cmp
or
jo
sub
push
pop
int
les
and
scas
push
xchg
call
sbb
add
pop
add
add
imul
stc
icebp
cmp
adcb
pop
in
loopne
stos
test
ja
int
inc
pop
pop
pop
cmpb
bound
lret
scas
in
sbb
lahf
bound
pop
outsl
sahf
data16
int3
andb
test
mov
fsubrl
sbb
fidivrl
lahf
int3
dec
sbb
nop
insb
adc
sub
sbb
loopne
cld
sub
pop
dec
xchg
ror
sbb
dec
inc
push
test
frstor
pusha
fistpl
sbb
inc
pop
push
fsubl
inc
addl
popf
in
fisubl
jge
push
push
lret
mov
mov
dec
mov
fwait
icebp
mov
into
xchg
sahf
mov
mov
push
arpl
dec
and
mov
push
push
mov
xor
fs
adc
loope
push
cmpb
mov
daa
pop
sbb
nop
push
push
push
inc
repnz
mov
stos
push
add
clc
cltd
mov
js
int3
mov
nop
sar
shrl
mov
inc
scas
sbb
movsb
cmp
cmp
repnz
fdivrs
les
cmp
pop
cmpl
and
pusha
inc
fsubs
push
and
pop
mov
inc
sub
inc
sbb
sbb
fmuls
jbe
xor
sub
mov
outsb
mov
cmpsl
aam
fs
xchg
push
jge
jle
sub
sar
add
mov
pop
addb
push
aas
das
clc
pop
xor
mov
popa
xor
pop
xor
mov
push
addr16
mov
mov
jg
in
inc
test
shlb
sarb
mov
inc
idiv
mov
outsb
hlt
cld
fsts
pop
inc
imul
inc
pop
sti
stc
cmp
cmp
scas
and
mov
adc
cs
jecxz
loope
fimuls
lods
sub
leave
cmp
xchg
decl
pop
inc
push
jp
mov
inc
jbe
sub
insb
mov
in
jo
sub
and
mov
lahf
test
dec
and
jbe
fisttpl
jle
add
jne
mov
add
daa
mov
mov
inc
dec
sub
lahf
mov
out
cwtl
jbe
imul
push
call
xchg
dec
mov
orl
inc
add
lret
idivl
out
pusha
or
lret
enter
ret
pop
and
out
sti
or
imul
jmp
addr16
std
das
push
xor
fwait
sub
mov
addr16
aad
xchg
aam
out
adc
jge
jle
out
push
xor
fldl
or
push
lcall
sbb
imul
push
pop
adc
scas
lret
mov
in
ret
xor
je
sub
push
stos
mov
pushf
adc
outsl
mov
xchg
add
xchg
fnstenv
int
popf
sub
lahf
hlt
mov
pop
adc
xor
dec
faddl
in
sbb
xor
lahf
jmp
mov
push
cwtl
clc
loop
add
and
frstor
pop
inc
cmp
fists
pop
addr16
sub
or
mov
push
jp
push
fs
xor
test
xor
add
movsb
cmpsb
inc
test
and
test
push
nop
aaa
scas
lret
and
adc
outsl
testl
test
dec
and
inc
mov
jb
or
in
dec
mov
cld
enter
pop
incb
int
lods
mov
and
testl
xchg
pop
fisubrs
pop
adc
push
pop
jae
test
ficomps
push
rcll
ret
popa
lds
pop
sti
xor
loopne
sbb
mov
rcr
jg
cmp
rorl
cltd
aad
cmc
cmc
loop
movsb
mov
stc
dec
xor
sarb
lret
and
movsl
pop
mov
dec
mov
sbb
sarl
stos
push
in
popa
lock
inc
int
add
fildll
and
mov
movsl
std
adcb
and
rcrb
inc
gs
jp
or
push
xor
and
insb
inc
enter
sub
sub
fdiv
pop
or
sbb
mov
mov
out
jl
inc
xchg
sbb
jne
add
sarb
fwait
sahf
rorl
inc
rolb
movsb
add
dec
lret
repnz
test
or
idivb
mov
xor
nop
adcb
lds
in
icebp
push
dec
std
scas
sub
ret
push
out
gs
imul
out
pop
mov
nop
xor
push
das
imul
movb
stos
out
mov
jge
out
cmpsb
das
cmpsl
out
movb
sub
mov
xchg
cltd
xchg
xor
or
add
in
sub
xor
je
pusha
call
dec
mov
test
loop
in
fisttpll
scas
and
jecxz
sub
mov
ds
nop
dec
push
push
inc
arpl
sub
add
mov
inc
dec
xchg
xchg
jmp
push
xchg
mov
cmp
fldcw
xchg
adc
lds
dec
sbb
and
out
jb
jp
cmp
ret
jbe
or
sbb
in
push
repnz
je
bound
dec
pop
xchg
cmp
ja
jp
xchg
xchg
pusha
sbb
cmp
mov
addb
mov
jmp
and
sub
cmp
jmp
jo
and
sbb
xor
lock
std
push
jns
pop
push
in
in
dec
dec
gs
sub
pop
repz
inc
or
fildl
push
xor
faddl
sub
dec
jns
mov
sbb
in
negb
test
stos
dec
loop
sbb
add
push
addr16
in
xor
sbb
sub
sub
int
jb
pop
mov
mov
lods
xchg
mov
xchg
incl
mov
mov
and
push
in
sahf
stc
enter
ret
arpl
or
lcall
push
rolb
out
pop
out
sahf
ret
iret
jg
jecxz
lds
repz
sarl
inc
and
pop
mov
mov
fcmovu
jl
frstor
aam
lcall
into
outsl
sub
sub
dec
mov
mov
loop
jbe
jecxz
out
pop
ret
dec
xchg
add
jl
pushf
mov
lock
outsl
ret
push
das
mov
repz
fbstp
cmpsl
xchg
hlt
lds
call
push
or
push
mov
xlat
lahf
sbb
mov
mov
sti
in
cmc
xchg
mov
mov
cmc
dec
enter
cli
loop
mov
push
mov
pop
fs
pop
ficoms
xchg
sahf
adc
mov
scas
clc
push
or
stos
push
push
adc
je
push
js
cmp
cld
xchg
daa
add
lahf
push
or
add
popf
and
test
test
pop
mov
pop
pop
shll
pop
wrmsr
lea
roll
test
loopne
dec
push
pop
aas
shrl
xor
jl
jl
cmp
cmp
inc
pop
jge
test
lds
and
loopne
dec
cld
shrl
mov
and
add
inc
xchg
fcomps
pusha
test
mov
mov
lret
sub
sub
test
cmp
mov
cli
sub
mov
mov
cmp
push
mov
push
fbld
or
lea
pop
lds
pop
pop
cmpsl
in
xchg
add
stos
sub
int
in
sub
sub
mov
pop
aaa
xor
xor
lahf
sub
sub
adcb
xchg
das
mov
shlb
callw
mov
loop
fs
iret
mov
jp
xchg
out
icebp
cli
adc
in
repz
add
iret
sub
movsl
out
mov
iret
in
mov
and
fwait
nop
and
mov
push
es
call
push
out
adc
and
nop
pop
jp
mov
aas
cltd
push
ss
jle
stos
icebp
cmp
adc
les
adc
push
js
insb
and
je
push
sbb
rcrl
test
icebp
pop
sub
mulb
sti
rcrb
or
push
jno
jae
filds
inc
xchg
scas
adc
adc
test
ljmp
sbb
scas
pop
mov
mov
jne
inc
lds
mov
leave
mov
cmp
scas
lods
into
fstl
sub
fdivs
push
dec
sub
cs
shlb
jno
fcompl
sub
cwtl
mov
inc
outsb
subb
or
in
int3
jmp
shlb
out
aad
sbb
push
movzbl
or
push
xchg
cmpsl
aam
push
sub
lods
inc
loope
rorb
cwtl
xor
cmp
sub
adc
ljmp
jo
xor
addr16
movsl
push
and
lahf
xchg
nop
aad
ss
jb
add
mov
jp
sbb
add
jl
or
push
and
pop
repnz
push
inc
push
imulb
les
dec
dec
pop
dec
or
call
xor
enter
jnp
pushf
sub
push
lods
lods
pop
les
sbb
in
jl
cmp
dec
mov
adc
xchg
sub
aas
jl
ljmp
dec
mov
out
dec
jmp
fdiv
mov
push
jg
mov
std
repnz
sbb
xchg
sub
lds
es
pop
jl
cmp
in
or
cmpsl
daa
shrl
popa
xor
movb
mov
in
push
jmp
cltd
cmpsl
ficompl
das
out
xchg
and
sub
sbb
adc
mov
push
inc
pop
cld
cmp
mov
call
cmp
xchg
mov
cmc
fidivrs
jb
push
out
lea
int
and
ffree
popl
pop
xchg
rcrl
sbb
mov
pop
sbb
mov
cmc
cmp
xor
push
adc
push
daa
cmc
mov
cmpsl
and
cmpb
inc
aaa
loop
neg
add
sti
pop
aam
aad
jmp
pop
ljmp
dec
scas
mov
mov
insb
mov
fistpll
xor
dec
mov
lods
push
sbb
pop
mov
pusha
add
jmp
inc
mov
mov
xchg
xchg
xlat
sub
dec
loopne
clc
push
and
push
mov
adc
jno
jbe
sbb
or
adc
gs
inc
xchg
push
fwait
add
or
mov
stos
shrl
dec
mov
push
push
nop
hlt
lahf
cli
fsts
and
test
jb
inc
sbbl
inc
je
xlat
mov
andb
stc
js
in
data16
mov
loop,pn
movb
and
push
decl
xchg
dec
mov
sub
aam
int3
mov
mov
mov
scas
and
mov
gs
in
jb
aad
push
mov
leave
fsubrs
in
or
or
cmpsl
sarb
cmp
jp
mov
xchg
gs
inc
pop
enter
lods
popf
loop
add
mov
jle
xor
mov
ret
xchg
jl
xchg
rorb
cmp
arpl
mov
sti
outsl
mov
mov
lret
xchg
inc
lods
xor
repz
ljmp
imul
cmc
jae
js
loop
movsb
xchg
incl
inc
cmp
jl
pop
lods
mov
bound
lds
jg
leave
push
mov
mov
jl
dec
lret
ret
in
ja
sbb
dec
pop
dec
mov
xchg
xchg
loop
rcl
or
inc
jp
pusha
and
outsb
in
int3
jno
popa
mov
mov
ja
jmp
andl
pop
lahf
push
mov
xor
in
mov
mov
cmpsb
pop
cmp
pop
and
xchg
mov
or
lock
les
and
jmp
dec
add
ud0
mov
iret
sub
cs
dec
cmp
and
mov
push
lods
xor
sub
mov
outsl
rclb
addb
inc
sbb
or
ficoml
lea
test
cwtl
aaa
jb
pushf
jle
outsb
imul
testl
sub
mov
sti
inc
push
loopne
cmpsl
lds
mov
in
stc
sbb
xchg
push
test
jbe
loopne
out
dec
mov
cmp
mov
lock
addr16
xchg
out
stc
jns
and
fdivrl
push
ret
mov
bound
fdivrp
outsb
jmp
rcrb
fisttps
mov
fisubrl
or
push
pop
hlt
mov
and
mov
stc
fisubrl
cmp
out
bound
pusha
arpl
push
aas
mov
outsb
xor
pop
test
sub
and
fidivl
push
inc
mov
push
rcrl
and
sbb
xlat
das
scas
sbb
mov
lret
push
xchg
adc
mov
jns
pusha
jns
js
cli
loope
jl
cmpsb
inc
adc
out
orb
fcompl
daa
aad
sub
adc
mov
mov
int3
jne
mov
and
aad
mov
sbb
stos
jns
mov
sti
repz
in
mov
pop
jmp
inc
cmp
lea
hlt
xchg
dec
inc
rcl
aas
xchg
into
stos
xlat
rorb
sub
xchg
add
xor
mov
sub
outsl
imul
movsb
xor
mov
fwait
aam
lahf
jmp
nop
jne
pop
lahf
mov
jecxz
push
scas
and
ficompl
cmp
and
dec
repz
pop
test
rol
jbe
push
mov
sbb
enter
loopne
sbb
insl
into
std
icebp
fldt
jp
lcall
es
mov
cmp
jecxz
mov
sub
pusha
in
inc
and
and
nop
pop
pop
mov
push
repz
call
fwait
stc
inc
daa
push
pop
rorl
adc
or
enter
fcompl
push
into
xchg
adc
mov
fidivs
int3
aas
cltd
insb
mov
loope
sub
subps
fidivrs
dec
sub
das
xchg
mov
push
lock
les
and
xor
pop
push
jl
inc
sub
lahf
xchg
cmp
enter
stos
dec
negl
ds
mov
dec
lods
cld
sbbb
stos
aaa
jnp
divb
cmp
pop
push
cmp
adc
ljmp
popa
jmp
rol
pushl
push
lret
xlat
add
lret
inc
lock
xor
lret
outsb
notb
push
std
mov
pmuludq
fildl
addr16
inc
or
pusha
xchg
fistpll
sarl
es
cmp
in
popf
add
outsb
lret
lahf
fimull
inc
lret
xchg
sub
lret
enter
out
inc
inc
insb
xor
push
std
lea
fnstsw
cmp
fcomps
insl
jb
sbb
lret
adc
dec
loope
cwtl
orl
sarl
cmp
or
sahf
mov
sub
add
and
jge
test
mov
jne
rolb
ja
mov
mov
fldt
cmp
test
or
dec
mov
insb
cmpb
mov
out
test
and
sub
or
insb
push
loop
pushf
repz
and
pop
adcb
xchg
cmp
jle
ret
imul
rcr
xchg
xor
cmc
roll
dec
stos
sub
jmp
adc
pushf
mov
lea
add
add
test
xchg
add
das
xor
sub
repz
adc
or
mov
xchg
test
icebp
test
pop
jle
jge
pop
sbb
jge
push
add
cmp
mov
adc
add
in
dec
jno
inc
pop
xor
push
es
orb
sbb
jno
lret
out
pop
xor
add
pop
loopne
lcall
cmp
adc
inc
sub
push
aas
std
sbb
lods
mov
adc
iret
and
popa
mov
push
addr16
jb
pop
dec
addb
sub
in
cmpb
sub
cli
dec
jbe
push
movsb
int3
arpl
cmp
in
pop
xchg
hlt
xor
addr16
xchg
jle
lcall
mov
test
push
cmp
xchg
pop
and
inc
es
repnz
xchg
cmp
add
jns
mov
idivb
out
into
cmp
xor
jle
lret
push
jg
lock
xor
mov
pop
mov
dec
cmpl
inc
mov
int3
out
aaa
xchg
gs
pop
outsl
fimuls
dec
icebp
xlat
sub
and
xchg
mov
push
mov
jbe
push
sbb
es
mov
adc
mov
lods
dec
xlat
dec
in
push
pop
sub
mov
jp
cmpsl
mov
pop
inc
jo
push
mov
pop
aam
xor
rcrl
push
and
jno
adc
push
enter
ljmp
data16
fistps
adc
jmp
fistl
hlt
negl
jle
movsl
lock
mov
loope
call
sub
lods
xchg
or
push
loopne
arpl
xchg
mov
adc
xor
and
sbb
xchg
jae
imulb
ret
xabort
rorb
xor
fidivrs
dec
mov
movsb
mov
jae
add
pushf
ror
jp
and
stos
mov
icebp
jmp
inc
pop
lahf
sub
push
sbb
js,pt
in
icebp
mov
mov
lock
arpl
xchg
dec
pop
mov
in
jge
cs
sbb
jo
mov
std
add
clc
xor
jae
out
jnp
xchg
imul
imul
and
xor
divl
or
sbb
sub
loop
ja
in
push
sbb
or
adcb
xchg
push
push
jno
movsb
pop
insl
mov
cwtl
jb
push
lea
mov
stc
and
push
hlt
repz
popf
xlat
adc
iret
sbbl
ror
jmp
imul
adc
adc
faddl
push
inc
and
push
push
and
scas
cmc
and
xor
pop
pop
push
sub
in
mov
ljmp
mov
test
and
xchg
lret
mov
loop
cmp
mov
sub
pop
sbb
shl
or
mov
lods
jns
mov
jnp
and
mov
xchg
fwait
test
mov
push
jmp
fadds
xchg
mov
pop
and
sbb
sbb
sbb
sub
sbb
mov
jle
xor
add
pop
faddl
stc
stc
mov
mov
jb
mov
add
mov
pop
pop
sbb
lret
push
cmp
push
inc
or
and
lds
sbb
push
xor
xor
inc
mov
sub
shlb
hlt
push
call
inc
add
addb
cmp
mov
sbb
sahf
push
hlt
push
add
pop
dec
data16
mov
leave
testb
test
insb
sub
cmp
add
or
xlat
sub
xchg
in
in
or
mov
mov
shr
sbb
rorl
mov
movsb
in
adc
xlat
std
xchg
cmp
ror
fbld
adc
xor
dec
or
gs
js
out
pop
sbb
cmp
push
shr
loope
xlat
or
aas
inc
ror
ljmp
rorb
mov
in
inc
shlb
aam
add
call
mov
lret
cmp
pop
sub
push
mov
xorl
cmp
mov
xor
outsl
jp
fidivrs
dec
fisttpl
jae
repnz
sbb
in
pop
pop
cmpsb
inc
test
cmpsl
ljmp
sub
jecxz
lret
jno
mov
pop
enter
xor
arpl
cmpsb
dec
pop
push
adc
jne
inc
push
out
adc
shr
sahf
lods
popf
jecxz
cld
into
sub
inc
stc
jbe
movsb
inc
push
js
mov
xor
stos
insb
cmpsl
loope
fisttps
enter
scas
adc
inc
mov
jp
loopne
mov
rclb
imul
mov
pop
and
xchg
insb
adc
push
and
mov
mov
icebp
test
shr
rorb
in
pop
cmpsl
add
and
adc
push
mov
fldl
fs
ja
xchg
mov
pop
imul
loop
clc
and
jge
and
cmpsb
lods
lods
xlat
loop
mov
jns
xor
cs
sub
js
stos
inc
mov
push
pop
das
int3
in
test
pop
jnp
les
cs
or
aam
sub
add
push
mov
cwtl
mov
das
arpl
dec
add
mov
and
mov
xor
ja
cmp
mov
add
dec
lods
xchg
rcr
or
sbb
jae
cmpsl
call
xchg
fcomps
ljmp
outsb
lea
xor
int
outsb
repnz
repnz
jo
sbb
scas
pop
arpl
out
mov
std
adc
jb
mov
ret
mov
inc
push
cmp
dec
fyl2x
clc
fs
jbe
push
mov
ljmp
adc
push
sbb
fnstcw
scas
scas
sbb
aaa
jp
inc
xchg
mov
jmp
stc
stc
xchg
pop
popf
mov
out
es
mov
mov
inc
jle
xchg
rcl
xor
mov
lds
cwtl
pop
dec
adc
rorb
lahf
mov
mov
jno
scas
sbb
pop
sbb
lods
push
inc
psubd
dec
iret
xor
xor
cmp
adc
decb
sti
mov
xor
shrb
mov
lods
std
call
xchg
mov
test
dec
bound
add
sti
mov
out
push
sub
mov
mov
in
mov
push
xchg
jo
xchg
fsub
sbb
mov
scas
xchg
xchg
pop
pop
stc
insb
jno
mov
adc
xlat
add
aam
and
mov
pop
inc
mov
dec
sahf
sub
xchg
ret
sub
aam
gs
dec
mov
pop
cmpsb
push
aam
cltd
dec
pop
leave
dec
adc
xor
add
shrl
add
fnsave
into
out
add
mov
jg
inc
and
sub
stc
out
and
leave
sbb
in
xchg
or
add
cltd
cli
jnp
pop
and
jns
js
enter
cmpsl
mov
mov
sub
mov
xor
mov
cmpsb
lds
std
popf
lcall
cs
into
ret
in
xchg
call
pop
inc
xchg
or
push
jb
mov
xor
jb
das
jecxz
popl
ja
adc
lcall
cmp
jno
push
and
cmpsb
xrelease
adc
adc
inc
aam
jle
mov
mov
fstl
xor
cmpl
shr
sub
pop
iret
or
mov
jnp
adc
jns
add
xchg
imul
es
ljmp
punpckhbw
in
add
clc
mov
pop
mov
loopne
mov
jnp
sub
jl
pop
xchg
cs
xor
inc
jecxz
adc
mov
and
ljmp
daa
shrl
fistpl
sti
jne
adc
pop
fildll
or
lods
add
sub
jp
mov
mov
fsts
mov
push
shrl
add
add
adc
outsl
push
inc
push
xlat
xchg
xchg
es
xchg
add
movsl
push
dec
rorl
xor
fwait
lcall
insl
mov
iret
pop
jno
js
idivb
pop
push
mov
inc
pop
xchg
push
xor
xorb
loop
mov
mov
pop
pop
testl
testl
push
mov
clc
mov
or
mov
cmc
enter
jb
pop
add
push
push
sbb
test
add
lods
adc
mov
roll
repz
mov
pop
aaa
ret
xchg
mov
fsubrl
push
sub
ret
insb
mov
pop
gs
sbb
cld
stc
adc
mov
lods
add
add
or
std
or
sbb
fwait
movsb
xchg
sti
dec
mov
push
in
xchg
xor
cmc
roll
and
dec
in
push
fsub
js
aas
outsl
out
enter
scas
cmp
push
sbb
mov
jnp
or
int
stc
lods
js
cmp
popf
arpl
mov
cmpsl
push
pop
push
dec
sahf
xor
xor
cwtl
movsl
push
sbb
jge
and
mov
and
jecxz
sub
das
shll
ljmp
hlt
mov
xor
loop
sbb
adc
test
xchg
andl
mov
shlb
into
je
loope
push
cmp
add
or
push
pop
pop
popa
cmp
inc
xchg
imul
pop
shl
pop
inc
fimuls
stc
jge
xchg
pop
pushf
rorb
jno
jb
inc
xor
xchg
cmp
faddp
inc
add
mov
std
jmp
push
enter
js
jl
lret
loope
movb
gs
push
cmp
lds
mov
mov
mov
les
loope
dec
stc
popf
aaa
outsb
and
cltd
adc
test
insl
mov
sbb
pop
jnp
sub
cwtl
lahf
pop
cwtl
mov
outsl
cmp
pop
cmp
out
and
decb
xchg
and
pusha
push
sbb
sahf
jns
mov
sbbl
and
dec
sub
rcll
les
jno
pmulhw
andl
in
push
std
jnp
pop
int3
pop
push
shr
fidivl
imul
mov
popf
fwait
pop
sbb
out
mov
add
cld
int3
pop
mov
cmpxchg
pop
test
sti
mov
mov
mov
test
xchg
xchg
mov
ret
fwait
int
decb
push
mov
adc
sbb
les
loop
pop
dec
rorl
aaa
ja
xchg
mov
mov
aad
and
xchg
sub
cmc
in
ret
jmp
insb
into
jle
arpl
mov
lret
jge
mov
rolb
push
sbb
lods
test
cmp
repz
mov
sub
fcmovb
push
ljmp
outsl
pop
sarb
xor
repnz
rcl
stos
sar
xchg
push
push
test
stos
fsub
dec
xchg
xor
sub
xchg
ss
inc
xchg
xchg
sub
fnstsw
daa
pop
dec
cmp
push
fs
mov
mov
cmpsb
aad
into
je
inc
sbb
in
pop
inc
in
mov
jl
pusha
xchg
and
test
rcl
adcb
sub
mov
sub
ret
cmp
and
xlat
ret
push
fs
popf
lret
test
popa
mov
pop
pusha
les
add
push
sub
call
jbe
inc
push
loop
or
dec
dec
sub
and
insl
mov
loopne
dec
add
pop
xchg
inc
adc
cmp
mov
sbb
and
mov
mov
bswap
les
shlb
aad
add
fwait
mov
es
mov
aad
call
xor
mov
push
popf
idivl
dec
pop
mov
xor
sbb
push
cmp
test
ds
bound
cli
mov
outsb
repz
addr16
push
int
mov
mov
jo
sub
in
cld
ret
mov
or
in
fs
sub
ljmp
stos
rcll
jge
pushf
inc
mov
mull
sbb
mov
dec
sahf
repnz
push
test
mov
arpl
aas
pop
fidivl
mov
adc
push
pop
mov
push
adc
dec
repz
or
cltd
cmpsl
movsb
dec
push
and
sub
push
jmp
fimuls
test
mov
lods
and
mov
cli
imul
ja
leave
mov
pop
aam
inc
mov
subb
jl
or
mov
fwait
movsl
aad
scas
xor
sub
xchg
fwait
xor
and
sbb
dec
mov
push
push
fidivrs
faddl
sarl
repnz
lods
and
mov
call
jb
pop
in
push
rolb
pop
jg
cmp
push
mov
nop
inc
lock
mov
addr16
in
jl
ret
dec
scas
mov
add
jge
test
mov
insl
push
lods
in
push
pop
aam
movsl
daa
mov
adc
test
popa
flds
pop
push
or
jne
add
push
and
or
rcll
lock
enter
lcall
scas
cmp
stos
jmp
mov
cmpb
insb
mov
jge
sub
lahf
pop
and
mov
push
pop
xor
dec
jg
dec
ret
push
and
mov
push
mov
ljmp
cmpl
test
es
cltd
shrl
xchg
xor
xlat
aaa
and
pop
ds
inc
add
repnz
mov
aam
inc
jno
pop
orl
movsb
dec
pop
fwait
pop
xchg
scas
int
inc
fucomi
mov
or
inc
xor
add
cmp
add
inc
jne
aaa
aas
enter
lret
mov
and
push
adc
mov
int3
sarb
icebp
xor
mov
xor
lret
stos
je
lcall
sub
leave
pop
stos
and
ljmp
push
push
gs
cmp
sub
push
sub
xor
insl
and
and
dec
inc
js
push
push
mov
or
lods
cwtl
cmc
jo
pop
push
adc
movsl
sbb
lret
mov
ljmp
insl
ja
imul
test
mov
out
ret
cmp
dec
sbb
cpuid
dec
push
cld
cltd
mov
pop
stos
mov
mov
and
xorb
cmp
lea
int3
daa
fisttpl
xor
cmpsl
cld
or
inc
mov
cmp
mov
es
daa
jnp
push
sbb
aad
inc
jp
enter
pop
adc
sbb
out
dec
js
popf
cmp
fcompl
push
or
fnsave
testl
call
jnp
cmp
outsl
xchg
js
mov
mov
mov
or
scas
cmpsl
add
pop
lods
xchg
jae
std
out
cmp
daa
adc
xor
test
jmp
lcall
adc
push
xlat
ret
lds
shrb
and
imul
movsl
ljmp
movsl
out
mov
pop
sbb
hlt
out
cmc
lock
sbbl
ret
inc
and
sbb
xor
std
leave
hlt
jg
imul
or
cltd
jmp
sbb
out
scas
icebp
loope
xchg
subl
aaa
push
sbb
sbb
outsb
icebp
aad
push
in
mov
aam
jmp
mov
mov
mov
out
rol
push
rorb
dec
xchg
pop
cmpsb
add
addr16
mov
les
adc
ss
pop
jge
jno
jae
aad
jbe
xchg
xchg
fstpl
dec
inc
orb
insb
pop
in
jb
jne
add
hlt
adc
lcall
jns
ja
mov
pop
in
push
sti
cmpsb
in
jge
push
jle
jge
jns
fidivl
sti
push
orb
aad
int3
cmp
mov
xchg
jmp
inc
pop
inc
lock
pop
mov
jns
inc
cmp
je
mov
mov
cmp
into
and
mov
fiadds
ja
int3
in
dec
js
and
cs
and
dec
fisubrs
cmc
scas
aas
loopne
sbb
sub
daa
mov
mov
stos
pop
xchg
xor
or
add
mov
arpl
mov
int
xchg
cltd
adcl
insb
sub
pop
in
pop
in
cld
xchg
inc
sbb
adc
lock
jns
ret
jb
mov
ss
lods
xor
inc
push
lds
roll
mov
mov
push
ret
sub
dec
int3
add
inc
adc
daa
js
inc
push
jmp
sub
popa
orb
int
repnz
das
test
ret
in
inc
push
lea
insl
fstps
pop
pop
cmp
cmp
scas
arpl
lcall
adc
mov
cs
mov
or
xor
mov
pop
jae
jnp
mov
jae
mov
imul
mov
and
dec
stos
sbbb
mov
xchg
cmp
div
popf
out
scas
jno
leave
mov
lds
or
hlt
stos
insl
sub
mov
js
cli
add
cmpxchg
mov
scas
imul
psllw
cld
mov
aad
jo
sub
xchg
jbe
jnp
xor
cmp
insl
mov
imull
cmp
sti
bound
mov
in
outsl
inc
jg
mov
imul
fildll
pusha
fstp
js
inc
pusha
mov
andl
jge
pop
in
add
pop
sub
into
mov
fstps
hlt
rclb
mov
push
jnp
push
icebp
addr16
mov
sbb
sbb
sbb
and
inc
fwait
js
imul
jp
pushf
aaa
pop
push
xor
xor
push
jecxz
xlat
jno
cltd
adc
outsb
or
push
adc
cmp
imull
adc
xor
cmp
fbld
or
cltd
fnstcw
and
lods
jae
mov
xchg
and
outsb
push
jl
movlps
dec
popf
bound
sahf
pop
test
adc
jle
xchg
lock
sub
repz
imul
iret
scas
shrb
daa
test
mov
xchg
inc
clc
push
cmpb
sub
jnp
pop
rcrb
inc
xchg
mov
vmulps
add
and
mov
xchg
jbe
lcall
rcrb
pop
ss
or
call
push
ja
add
add
leave
mov
loopne
mov
mov
cld
push
xor
pop
dec
mov
push
out
mov
cmp
pop
out
xchg
stc
test
lret
sbb
lcall
nop
lds
jge
and
lahf
dec
fmul
in
xor
push
or
mov
jle
jecxz
mov
inc
and
add
cld
xchg
push
movsl
clc
mov
xchg
loopne
imul
daa
xchg
je
hlt
ret
dec
push
int3
sbb
pop
mov
bound
out
mov
xchg
pusha
or
fwait
arpl
aas
jns
bound
lock
jp
add
jge
mov
mov
adc
inc
lret
pop
cmp
fsubrl
xchg
push
sub
test
les
fsts
pop
mov
mov
adc
loop
je
addr16
rcl
cmpsb
xor
cmp
pop
mov
clc
fs
pop
ret
shll
push
jl
xchg
loope
mov
xchg
les
mov
or
mov
mov
add
push
push
jne
insb
rcl
sub
push
sbb
popa
or
add
pop
pop
icebp
js
pop
xor
ds
in
mov
insb
pop
xlat
push
aaa
lock
fs
nop
imul
mov
fistpl
mov
sti
mov
push
mov
jne
mov
mov
insb
mov
push
neg
pushf
add
sub
add
cltd
push
test
out
mov
push
cltd
data16
insl
sarb
dec
clc
sub
inc
cmovnp
xlat
lret
adc
push
cld
sub
mov
lock
aas
fucomip
lds
add
pop
sbb
pushf
jo
xchg
test
xchg
aad
arpl
scas
push
xchg
les
scas
jge
jno
and
int3
imul
popf
cmc
xlat
push
push
jno
lea
sub
mov
inc
adc
adc
lods
sbb
mov
add
dec
sub
insb
int
int
rcr
mov
in
test
dec
or
sub
fwait
lret
xor
xorl
xor
mov
fistpl
insb
pop
lods
fs
push
fdivrp
mov
mov
push
andnpd
jae
lcall
or
mov
cli
cmc
jne,pn
shll
mov
add
pop
push
add
mov
add
add
add
ljmp
add
lret
lods
stos
add
mov
add
sub
add
add
iret
lods
cmp
sbb
xchg
cltd
scas
adc
sbb
push
clc
pop
xor
mov
or
les
xacquire
sbbb
fnstcw
push
and
lds
mov
nop
ret
lret
in
mov
rolb
mov
jnp
dec
or
repz
movsl
push
mov
dec
xchg
inc
or
inc
es
lahf
and
jb
je
outsl
cmp
jo
rol
les
mov
int3
and
push
in
sub
pop
out
pop
leave
arpl
shlb
mov
inc
dec
add
lods
in
xchg
xor
inc
pusha
int
pop
stos
xor
lahf
sbb
push
ja
popf
movsl
cmp
push
jecxz
ret
mov
fimuls
add
push
imul
mov
push
repnz
adc
jns
mov
cmp
cli
cwtl
push
mov
cmpsl
mov
sub
inc
mov
rcl
add
sbb
loopne
sbb
test
and
pop
xchg
pop
negl
jmp
shlb
cbtw
pop
adc
pop
movb
push
je
arpl
sbb
je
cs
cwtl
in
cltd
xlat
add
ljmp
repnz
jg
xor
add
push
paddsb
pushf
outsb
out
loopne
dec
in
out
pop
jmp
test
xor
aaa
lcall
outsl
jg
aas
das
mov
das
loope
mov
fwait
cmp
repnz
aas
mov
mov
mov
in
ret
jmp
mov
mov
jecxz
cmp
mov
int3
imul
mov
push
pop
dec
add
stc
cs
inc
mov
sub
xor
mov
ljmp
clc
lcall
test
and
ljmp
sahf
xchg
push
ljmp
mov
push
arpl
push
xor
movsl
xchg
jnp
pop
repnz
fst
nop
xor
mov
out
int3
pop
xor
imul
mov
dec
dec
into
fnstenv
push
or
add
pop
ror
jl
push
mov
mov
ljmp
insb
mov
mov
lock
mov
inc
stos
je
mov
mov
ret
inc
ja
dec
icebp
push
pop
pop
jge
je
cmp
push
test
cmpsl
loop
imul
aam
mov
jp
push
mov
xchg
adc
xchg
out
icebp
in
sub
imul
jae
jb
inc
push
call
mov
call
aas
xor
scas
int3
xchg
pop
popf
xchg
adc
adc
jbe
inc
ljmp
cmp
jmp
stos
int3
xchg
add
iret
adc
negb
adc
aas
push
out
out
fnsave
leave
ret
call
inc
xor
push
scas
mov
mov
nop
fisubl
mov
stos
push
push
jmp
dec
es
arpl
lret
scas
testb
stos
es
xchg
xor
jnp,pn
outsb
popa
mov
insb
test
iret
sarl
xchg
xor
cmp
jns
add
mov
hlt
and
add
dec
loope
imul
sbb
addb
dec
jg
cmpsl
daa
loopne
xchg
pop
cmp
mov
mov
int
cli
xor
or
pop
mov
inc
adc
xchg
add
popa
and
shlb
das
fbstp
xabort
pop
in
mov
sub
pushf
dec
mov
inc
inc
outsl
aad
push
sub
andb
addl
nop
sub
inc
jne
mov
stc
and
jnp
or
pop
dec
xchg
push
push
sbb
sub
mov
mov
cmp
pop
inc
mov
not
push
jae
shll
cli
mov
jae
cmp
scas
out
xor
xchg
inc
mov
mov
jecxz
loop
sbb
test
or
mov
aas
cmpsl
xchg
sbb
iret
in
shl
cltd
testb
jmp
or
pop
clc
mov
jo
dec
fdivrs
cmpsb
fidivrl
out
iret
or
push
jne
in
ja
push
jp
je
jg
lret
mov
pusha
xor
push
in
je
xchg
lea
jecxz
cmp
xchg
fdivl
fistpll
aaa
and
dec
ds
loope
push
sbb
push
or
and
sahf
movsl
pminsw
push
aas
int
lods
es
pop
es
int3
push
pop
popa
add
xlat
mov
sub
lret
xchg
sbbb
sub
inc
shrb
mov
iret
cmp
repz
mov
cmp
mov
pop
or
push
ret
loope
or
subl
sub
add
adc
push
mov
xor
xor
ljmp
xchg
adc
pop
dec
cmp
movsl
xchg
jno
mov
mov
add
outsl
and
mov
mov
push
mov
jp
cmp
ja
pop
cwtl
add
push
lret
loope
inc
call
pop
test
es
scas
test
or
add
aaa
imul
gs
andl
add
mov
sub
mov
jg
mov
pop
jge
push
sahf
bound
pop
jno
jne
or
dec
add
cwtl
mov
xchg
add
loop
ljmp
out
dec
ret
movsb
adc
and
loop
in
mov
or
fmul
jno
or
shlb
out
mov
mov
fldt
pop
add
dec
ja
mov
jmp
scas
rclb
je
mov
aaa
stc
pushf
sub
incl
mov
std
clc
sub
out
int3
lods
dec
add
andl
sub
sbb
mov
std
jbe
scas
cld
inc
push
addr16
xchg
push
cmpsl
xor
xchg
js
icebp
in
push
push
mov
add
cmp
push
add
inc
jb
mov
adc
jns
pop
and
imul
es
stos
sub
xor
dec
pop
lods
xor
mov
cmp
cmp
mov
repz
xor
loopne
xor
les
daa
int3
out
jmp
dec
cmp
and
imul
mov
jg
leave
cmp
pop
repz
inc
mov
pusha
arpl
das
fsubrs
hlt
or
or
and
push
icebp
jmp
jns
std
sbb
cmp
repz
pop
inc
ffree
xchg
adc
shrb
pop
dec
fstpt
in
cmp
movsl
data16
ss
test
mov
imul
push
mov
mov
jg
cmp
inc
adc
test
dec
sarb
shll
adc
or
adc
inc
fbld
rolb
or
jns
jb
cmp
push
cmp
fsubs
sbbb
xchg
jbe
out
call
sti
ds
into
sub
or
jne
pop
cld
loop
repnz
scas
push
adc
and
test
pop
adc
cmp
xchg
es
push
mov
std
dec
insl
aaa
fcoms
lea
pop
mov
xchg
lods
mov
pop
scas
loope
mov
and
and
ss
and
hlt
in
push
rcrb
mov
pop
add
arpl
jecxz
repnz
aad
adc
jbe
dec
xor
jbe
add
pushf
daa
cltd
mov
pusha
add
es
stos
mov
pusha
cmp
add
clc
into
xlat
ja
mov
bound
jp
push
clc
or
std
cltd
adc
popf
adc
fwait
pop
cmp
mov
mov
arpl
xor
add
sub
push
jecxz
jmp
and
add
in
flds
test
push
and
mov
mov
cmp
xchg
jle
mov
mov
es
dec
pop
inc
xor
popfw
ror
push
or
out
hlt
ljmp
ss
bound
push
out
stc
add
gs
adc
mov
push
xchg
adc
fcomp
call
pop
fisttps
sub
cmc
cmp
xor
aam
mov
cs
frstor
leave
sub
cwtl
lcall
popl
es
adc
imul
and
out
fstp
clc
jae
bound
roll
or
push
add
mov
out
mov
adc
pop
out
cltd
inc
adc
inc
jl
and
add
loope
lret
pop
push
mov
mov
int
test
jmp
cld
inc
leave
pop
mov
xor
mov
pop
pop
into
xor
xchg
mov
in
jp
fstpl
or
aam
test
fs
das
cld
or
mov
sbb
mov
lcall
jge
xchg
jp
and
enter
mov
xchg
add
or
fdiv
aaa
fistps
adc
push
out
lret
lods
jbe
popf
or
jle
lcall
mov
add
int3
clc
adc
stos
pop
cmp
cmp
jg
out
mov
lods
lock
mov
xor
js
sbb
rclb
lret
and
int
mov
jne
fbld
dec
dec
or
scas
inc
in
push
adc
pop
inc
inc
nop
jb
ret
scas
fildll
and
lods
fwait
and
testl
cs
xor
or
xchg
repz
xchg
sub
push
xor
dec
nop
mov
hlt
insb
push
insl
sbb
cmpb
daa
pop
test
dec
push
or
jmp
test
lea
aad
lahf
mov
movsb
xchg
adc
mov
movsl
test
in
out
jmp
inc
push
mov
fstpl
push
mov
das
and
bound
call
stos
je
add
jo
scas
or
insb
and
outsb
hlt
aaa
inc
inc
iret
aam
mov
bound
mov
in
sub
push
fldl
ffreep
popa
inc
inc
sub
pop
pop
dec
stos
push
jne
mov
leave
or
mov
lret
sbb
adc
andl
das
std
fsubrs
sbbb
movsl
daa
adcb
jg
add
iret
scas
arpl
les
fstpt
push
sbb
dec
xchg
push
popf
vmwrite
push
cmp
out
cmp
lcall
inc
and
mov
enter
loop
sbb
outsl
jo
ds
dec
pop
cld
push
mov
movsl
jl
cmpsl
jp
loopne
push
lcall
pop
jmp
mov
into
xchg
mov
out
mov
loopne
jmp
add
int
lds
enter
in
dec
mov
or
cmp
and
fidivl
xor
sub
add
pop
iret
ljmp
xchg
imul
fistpl
cmpb
and
and
test
fmulp
mov
sub
pop
cmp
gs
add
add
inc
addr16
lea
into
jne
gs
sub
cmc
inc
push
movsl
pop
call
mov
hlt
jne
mov
mov
pop
loop
push
pop
push
pop
ficoml
dec
jle
push
loopne
mov
jmp
cs
aad
add
insb
add
in
inc
jo
insb
pusha
mov
push
sub
clc
cmp
aaa
push
lahf
sbb
pop
inc
dec
insl
nop
mov
mov
rcrl
push
test
xor
add
call
xchg
int3
das
aad
pop
cmpsl
push
adc
icebp
scas
arpl
push
aas
scas
mov
stos
inc
int3
loop
add
lret
push
popf
xlat
aaa
xor
jle
and
pop
sbb
fucom
addl
int
in
push
jae
inc
fldt
lock
cwtl
stos
cmc
pop
enter
mov
in
jnp
cmc
fistl
mov
pusha
fcmovnb
insl
pushf
insl
call
loope
xlat
adc
add
aaa
les
mov
xchg
push
mov
sub
pop
jne
xchg
das
sahf
xchg
xchg
xchg
out
popa
std
arpl
orl
test
xlat
hlt
cld
adc
lods
fs
pushf
adcb
scas
jbe
rclb
xor
adc
adc
xor
inc
pop
in
or
insb
xchg
jne
fiaddl
testb
xorb
sti
lea
adcb
push
lret
mov
dec
leave
insb
or
shl
push
jmp
es
imul
cmpsb
jno
mov
and
ds
push
mov
out
sahf
push
mov
aam
rsm
xchg
nop
add
ja
adc
jp
test
and
push
and
shll
or
ljmp
subl
mov
call
test
adc
fcompl
scas
sbb
mov
dec
gs
push
push
xchg
ds
les
and
mov
shrl
cmp
push
xor
xchg
std
sbb
add
popf
mov
pop
aad
xchg
mov
xchg
pop
test
jmp
ret
in
sbb
stos
push
cli
pusha
jecxz
sti
xor
sbb
and
in
cmp
js
roll
jo
mov
dec
mov
out
xchg
mov
xchg
int3
jp
sti
decl
lahf
test
insb
xor
sahf
ficoml
out
sub
lcall
inc
lods
fisttpll
enter
xchg
es
xor
or
ret
push
adc
sti
repnz
jbe
push
rcr
sarb
xchg
loopne
popa
mov
std
enter
data16
jmp
loopne
ja
dec
xchg
insb
fwait
lcall
es
les
dec
inc
or
addr16
roll
popf
cli
pop
pop
int
or
enter
sarl
mov
jl
rclb
mov
jecxz
cmp
test
mov
xchg
xchg
pop
jecxz
es
mov
mov
fldl
mov
or
sub
mov
into
repnz
inc
out
sub
mov
mov
push
ret
fstpl
jns
mov
lea
inc
out
orl
push
sbb
xchg
mov
xchg
lea
movsl
fs
in
out
mov
or
gs
cltd
or
mov
hlt
sub
xchg
push
stos
popf
je
push
push
gs
fists
lahf
pop
scas
mov
mov
mov
loopne
cwtl
mov
mov
mulb
or
daa
add
mov
data16
mov
adc
jns
inc
ds
cld
loop
cmp
pop
xor
adc
jo
xchg
fildl
pop
push
push
push
lahf
mov
add
mov
pushw
insb
mov
dec
cmpsl
rcrb
out
arpl
and
xchg
sbb
repnz
test
invd
inc
xor
push
adc
jo
int
popa
cmp
push
pop
pop
xor
mov
bound
scas
mov
sub
sti
xor
cmp
dec
cmp
add
daa
lcall
add
xchg
xchg
cwtl
repnz
cmp
loop
push
mov
movsl
and
clc
push
adc
ds
pop
pop
xor
imul
int3
jnp
xchg
jnp
xchg
cmp
andb
dec
mov
in
sbb
mov
enterw
mov
out
ret
mov
js
and
inc
ja
add
loopne
lahf
jmp
jns
lock
xor
xchg
pop
decb
aad
bound
aam
push
out
popa
rolb
nop
mov
push
cs
jp
xchg
mov
stos
mov
push
bound
outsl
pop
jne
shr
imul
jb
and
pop
pop
xchg
bound
ret
and
aaa
jmp
jno
jmp
out
push
jne
scas
push
lods
rclb
shlb
pop
mov
fdivrp
pop
scas
jns
and
int
jo
aam
das
xor
mov
dec
inc
mov
hlt
neg
std
repnz
outsl
lea
jl
cmpsl
jne
test
push
popa
xor
add
filds
xor
dec
fcomps
lock
mov
pop
dec
xor
rcrb
add
mov
test
inc
sub
test
xchg
and
stc
pop
xchg
ret
xchg
dec
dec
and
enter
imul
push
lods
xchg
cli
dec
test
adc
sub
cmpsl
push
push
adc
pop
test
jl
loopne
jnp
xchg
shlb
lret
jge
cmp
dec
inc
sub
dec
lret
shrl
jnp
inc
inc
jmp
mov
daa
adc
loope
roll
addr16
xchg
lods
adc
or
jg
std
jecxz
ds
mov
mov
pop
ror
jl
fists
inc
dec
int3
ss
mov
sahf
je
xchg
fcomps
sbb
fsubrl
daa
addr16
int
sbb
mov
sub
jle
in
stos
insb
mov
push
lret
xor
pop
and
dec
add
insl
cltd
jp
clc
popa
sub
mov
and
test
sbb
sub
fcomip
loope
int3
pop
or
xchg
mov
sbb
jg
sti
cmp
xchg
jb
and
test
adc
insl
xchg
addl
mov
pop
pop
mov
sarl
add
cmp
stc
mov
cmp
push
lods
mov
ljmp
ja
imul
pop
inc
jns
xor
add
shl
xchg
xor
mov
pop
rolb
je,pn
ficoml
fstpt
cmpb
call
dec
xor
cmp
ret
and
push
ja
xchg
or
pop
inc
xor
in
ret
fcmovne
sbb
xlat
scas
ret
sbb
das
je
je
in
imul
ffree
mov
xchg
loopne
mov
in
jl
mov
enter
lahf
fnstenv
cmp
test
sbb
out
mov
dec
pop
test
dec
mov
jmp
ret
pop
cmp
shlb
mov
js
clc
inc
jnp
scas
out
pop
dec
jne
xor
lret
or
jb
outsb
cmp
cld
enter
mov
and
adc
jns
cmp
lret
popa
fildll
xor
cmp
xchg
pop
dec
cmp
pop
cmp
dec
add
xor
stos
out
xchg
movsb
call
pop
sub
add
jmp
js
outsb
std
mov
lret
cmp
mov
clc
in
xor
out
add
fists
jbe
mov
xorl
lods
sbbb
js
xchg
outsb
lock
sbb
ljmp
cmpsl
pop
scas
inc
push
and
or
cs
mov
add
jge
fs
cs
loope
iret
insl
bound
ss
xlat
jno
xchg
scas
cmp
jge
test
or
pop
mov
pop
imulb
add
cmp
pop
and
or
test
test
les
aad
push
xchg
mov
xchg
outsb
push
sub
mov
iret
lcall
dec
push
push
movsb
addb
inc
pop
mov
aaa
add
fmull
cli
inc
leave
les
gs
outsl
pop
jo
aam
adc
or
inc
mov
pop
jo
and
inc
repnz
cld
dec
jo
lahf
jae
adc
lds
push
xchg
mov
mov
lods
cmp
outsl
test
dec
sub
movsl
rcr
jbe
inc
sbb
aaa
dec
std
pop
xlat
iret
shl
mov
jne
out
ret
adc
fisubrl
das
pop
subb
push
pop
aam
dec
sub
dec
lods
push
mov
hlt
loopne
add
ret
mov
jae
xchg
lret
or
mov
mov
or
pop
cwtl
sbb
xchg
pop
pop
add
xor
ret
sub
inc
fsubrl
cmpsl
xor
sahf
loop
ds
sbb
add
cld
push
inc
mov
sahf
inc
sub
das
jae
xlat
shlb
jns
mov
push
lea
xorl
inc
or
dec
dec
xchg
js
mov
repnz
mov
test
mov
imul
sub
mov
stos
mov
jp
insl
xchg
pushf
or
in
ficompl
or
repz
jo
sti
test
xchg
int
inc
jle
xlat
xor
ja
adc
xchg
cmp
iret
pushf
xchg
mov
add
repz
out
inc
dec
es
push
in
or
dec
sbb
pop
fidivl
lods
cld
xchg
push
int
les
dec
pop
mov
pop
das
add
test
test
daa
fcomps
jg
movsb
ret
idiv
sub
inc
lret
mov
lcall
mov
cmp
pop
loope
lock
outsl
cmp
jnp
ja
ret
out
imul
mov
add
inc
bound
sti
mov
and
xchg
js
adc
add
loop
imul
pop
mov
data16
dec
xor
pop
test
inc
pop
sbb
dec
or
gs
jl
sbb
mov
cld
or
sbb
mov
pop
popf
mov
jo
xchg
cmp
mov
mov
enter
cld
inc
cmp
push
push
sub
dec
mov
popf
cmp
movsl
popa
xor
nop
sbb
scas
fsubp
sbb
mov
push
cmp
in
and
push
or
incl
add
xor
pop
xor
or
mov
dec
rol
scas
sar
jb
sbb
xchg
int3
push
lahf
pop
movsl
adc
hlt
mov
fidivl
dec
jge
imul
adc
rolb
and
lcall
add
js
push
shlb
and
pop
stos
out
je
xchg
mov
icebp
jae
or
jmp
scas
jmp
dec
mov
int3
or
rcll
int3
movsb
ljmp
dec
jl
imul
add
popa
and
inc
dec
jg
or
movl
push
jnp
pop
mov
sbb
jecxz
cmpsb
xchg
outsb
jl
das
scas
fdivr
cmp
sub
inc
xlat
js
inc
loope
add
pushf
sub
sub
int3
aam
inc
fsts
je
stos
outsb
add
pusha
dec
adc
imul
movsb
pop
and
push
iret
mov
jg
xchg
movl
or
inc
sar
inc
gs
mov
add
inc
enter
popa
jb
in
sub
in
sub
jl
nop
cltd
imul
lock
leave
or
cmp
movsb
mov
jp
xor
lcall
or
push
xor
jae
and
imul
ret
xor
xchg
inc
js
ja
inc
shrl
in
cmp
push
es
fs
lret
add
mov
mov
notl
adc
insb
push
sbb
sbb
hlt
add
dec
jl
fisttpll
mov
sub
cmp
adc
subl
incb
mov
inc
inc
jle
mov
jo
adc
xchg
sti
push
push
sahf
xchg
stc
sbb
loop
mov
lret
je
mov
loop
ss
jb
or
pop
push
sbb
orl
cltd
jmp
das
cmp
jnp
xchg
inc
shl
inc
xor
or
dec
lret
xchg
mov
sar
test
lret
xchg
cli
dec
sub
jle
or
xchg
pop
pop
ret
lret
aas
inc
inc
insl
and
icebp
mov
sbb
ret
roll
mov
testb
jp
sbb
sbb
pusha
xlat
jle
mov
js
sub
push
or
lods
pop
iret
andl
in
xlat
sbb
pop
mov
pop
ja
push
pop
inc
dec
xor
rcr
push
outsb
lea
les
mov
mov
in
in
push
adc
mov
push
outsl
mov
movsb
cmp
aam
and
fistpl
lds
dec
sbb
int3
jg
dec
nop
mov
sub
mov
jl
mov
mov
cltd
ret
push
inc
fmull
xor
xchg
repz
mov
xor
push
dec
adc
std
mov
mov
mov
sbb
dec
cs
pop
mov
iret
lret
inc
arpl
scas
lcall
xchg
pop
in
les
xor
mov
rcrb
add
xchg
push
repnz
xchg
add
mov
fimull
sub
pusha
sarl
gs
paddw
adc
idiv
imulb
sub
lret
mov
cmpsb
arpl
or
lods
lret
stos
lret
inc
rep
loop
xor
fistps
popf
fcmove
push
adc
fiaddl
out
dec
xchg
lods
std
ss
sub
movzwl
xchg
loope
sahf
in
mov
jmp
test
sub
dec
inc
jns
mov
mov
pop
das
push
in
pop
cltd
ss
jnp
sub
aam
mov
or
loop
fldcw
bound
inc
into
cs
aam
jge
xchg
pop
fsts
sar
aam
sbb
inc
adc
out
mov
pop
mov
stos
clc
pop
fsubl
imul
jp
and
stos
jae
mov
in
mov
dec
or
rol
pop
daa
jmp
stc
inc
adc
stos
loopne
dec
add
cmp
adc
test
loope
jle
out
cli
inc
jmp
shll
mov
mov
xor
xor
sbb
movsl
scas
divb
add
fnstenv
add
arpl
sbb
xor
cwtl
into
into
mov
and
test
cltd
dec
pop
dec
in
pop
imull
dec
into
mov
mov
cmp
pop
int3
or
pop
in
in
fldl
push
mov
mov
jno
sbbb
enter
sbb
xchg
into
xlat
movsl
out
int3
imul
aam
and
movsl
bound
mov
jo
adc
push
imul
arpl
mov
into
arpl
cld
dec
mov
xor
int
pushf
fnstcw
mov
pmaxsw
fwait
inc
add
pop
shrl
push
fsubl
hlt
dec
sbb
js
push
mov
or
in
and
loope
stos
cmpsb
out
adc
in
arpl
mov
sub
mov
or
and
jo
loop
push
lret
cwtl
out
sbb
cltd
push
bound
imul
sbb
lret
or
sbb
or
jae
loopne
pop
xorl
pushf
or
sbb
jmp
inc
sub
push
sbb
sbb
std
mov
push
push
cld
jecxz
or
incb
cmp
adc
shl
nop
cmpsl
fs
cmp
sar
sbb
push
arpl
dec
sbb
fidivs
xor
stos
nop
jp
cmpsl
mov
cli
pushf
xchg
mov
dec
ficoml
call
roll
aad
push
mov
insl
sti
ss
or
std
test
movhps
jmp
adc
mov
ljmp
mov
inc
xor
ds
divb
ret
sub
jle
in
stos
and
data16
rorl
mov
cmpsb
dec
mov
sti
sti
jmp
inc
fsubrs
add
ret
and
loopne
icebp
pop
jnp
jle
fisttpl
vpaddusb
popf
mov
shrd
mov
or
pop
insl
cltd
mov
pusha
mov
inc
out
ja
adc
sbb
and
outsb
dec
pop
out
sbb
frstor
lea
adc
and
cmp
and
stc
xor
popf
sub
push
testb
mov
dec
roll
test
mov
int3
cs
xor
iret
jne
lock
add
add
imul
mov
jg
cmp
pop
jp
inc
jo
lods
cmp
mov
sub
mov
ljmp
fidivrs
mov
and
add
pop
inc
dec
or
pop
leave
cs
negl
jecxz
and
icebp
imul
sub
pop
fcoms
scas
pop
xchg
mov
out
inc
dec
pop
mov
push
add
sub
xorl
jl
popa
dec
cmc
aaa
dec
or
frstor
push
sub
push
fwait
loopne
aaa
push
pmulhuw
and
loope
iret
dec
pop
cmp
xor
insl
in
repnz
and
movsl
ret
inc
leave
or
icebp
mov
pop
sub
gs
js
insb
fidivs
push
add
cs
xchg
je
mov
or
mov
and
dec
decb
vcvtdq2ps
mov
sub
pop
jae
in
sub
push
aaa
cmp
sarb
or
mov
sub
pop
pop
adc
out
in
ret
insb
jmp
xchg
test
fldenv
pusha
add
xlat
sbb
loop
data16
add
fsubl
aad
mov
cmp
jno
addr16
or
decl
sbb
rcrb
jne
lods
inc
or
mov
jnp
or
mov
jmp
daa
push
mov
sub
je
shrb
dec
jbe
cmp
aaa
pop
cld
lods
inc
jae
out
push
movsl
or
pop
xchg
test
clc
rcr
nop
sahf
sub
vmovdqa
xor
in
insl
xlat
orl
jno
ds
adc
ret
pop
leave
decl
sub
pop
call
lret
roll
push
sub
add
sbb
lcall
cmpsl
push
mov
popa
and
dec
mov
push
lods
testb
pop
or
out
jno
pop
mov
push
mov
cmc
mov
jecxz
neg
adc
dec
icebp
dec
aam
sub
frstor
shlb
pusha
adc
and
sub
stos
rcll
mov
sub
xor
mov
shrl
ja
repnz
iret
add
or
dec
adc
sub
mov
add
imul
pop
jl
movsb
push
mov
mov
sub
roll
mov
mov
jns
jl
or
pop
jne
pop
dec
sub
mov
iret
xor
and
aaa
and
popa
push
mov
fnstenv
sbb
jmp
push
fsubr
scas
or
mov
loope
add
jle
and
or
pop
int3
push
lret
sarb
pop
xor
push
test
test
xlat
lods
inc
adc
xor
iret
adc
sbb
and
xchg
mov
loope
mov
and
xchg
pminub
int
sub
inc
cmp
ljmp
sbb
je
call
add
jnp
jns
fs
sbb
ret
enter
movsl
pusha
subb
test
out
push
lea
mov
or
sub
movsl
xchg
in
imul
std
and
mov
or
xchg
lods
aaa
aam
push
mov
bound
in
jae
or
fwait
inc
es
ja
xor
lcall
pushf
cs
cmc
mov
push
addl
pop
cmpsb
lret
movb
xchg
sbb
or
mov
std
fmull
jne
or
adc
push
mov
xor
aas
dec
es
jg
xor
jae
jnp
cmp
and
out
cmp
stos
cmp
push
stos
xlat
mov
xlat
call
mov
sti
dec
push
mov
rorb
shll
xor
pop
pop
out
iret
lret
mov
add
ss
cmp
shl
data16
pop
mov
das
cltd
cmp
fs
mov
and
xchg
cli
jnp
rol
cmp
sub
hlt
cmp
aad
xor
push
and
xchg
inc
mov
pop
mov
xchg
lock
mov
pop
mov
pop
pop
and
inc
pop
push
adc
xchg
ja,pt
dec
rcl
mov
and
iret
sub
sbb
lds
mov
mov
ljmp
pusha
mov
sub
sub
iret
jge
mov
sub
sub
arpl
add
dec
stos
pop
int
insb
dec
repnz
jmp
adc
arpl
ds
cltd
mov
sti
adc
divb
out
lods
dec
dec
in
jno
in
arpl
and
add
xor
adcb
dec
cli
push
and
sti
xchg
sub
leave
pusha
xor
or
insl
test
and
loopne
test
test
lods
push
cmp
push
imull
lods
fwait
sbb
scas
ljmp
out
xchg
rol
ret
dec
pop
mov
pop
sbb
out
pop
add
fsubr
push
sti
and
mov
push
pop
mov
daa
and
pop
lret
popa
xchg
jns
or
inc
std
lret
or
or
sub
mov
xor
jb
scas
repnz
xor
shl
and
push
push
ja
adc
aam
int
mov
test
inc
or
loop
mov
inc
adc
cltd
inc
rolb
shll
or
lahf
push
xlat
insb
mov
push
addb
push
add
mov
movsl
xlat
jns
inc
sub
outsl
call
stc
ficoml
jae
sti
mov
sub
mov
mov
or
xchg
cltd
jmp
mov
movsl
flds
pop
repnz
fldt
lock
add
test
lock
lahf
mov
test
orb
jb
cwtl
loope
mov
push
in
mov
mov
sub
or
cmpb
cmp
out
test
int3
mov
jmp
icebp
mov
and
sub
or
lret
into
dec
pusha
dec
xor
lahf
sub
cld
jnp
mov
mov
lahf
jl
call
cld
test
pop
sbb
int
push
out
fistpll
sbb
pop
sub
aas
sarb
xor
jmp
mov
insl
in
outsb
fwait
in
cld
fdivs
out
sahf
adc
add
add
bound
insl
sub
ret
ljmp
aas
out
fidivl
gs
push
xor
cltd
loop
out
add
cltd
inc
jb
les
add
mov
mov
jno
fcoms
stc
cmp
jge
pop
loop
and
or
or
xchg
xchg
lret
sub
inc
dec
inc
or
adc
jmp
mov
lods
adc
lock
inc
repz
sbb
cmp
add
jmp
lock
push
or
add
mov
les
sub
xchg
sub
sahf
inc
lock
and
out
sbb
adc
arpl
test
outsl
cltd
sti
push
or
rcrb
sbb
cltd
fidivs
jno
jb
pop
iret
incl
inc
mov
adc
sbb
pop
add
xchg
sbb
inc
mov
lret
fldcw
in
push
or
test
and
cmc
test
sub
into
mov
dec
xor
pop
add
or
push
push
xlat
fcomip
xor
push
xchg
mov
xchg
ret
test
fndisi(8087
add
out
push
or
mov
pop
inc
and
daa
or
loope
jl
pusha
pop
push
sub
push
loop
dec
pop
sbb
adc
les
mov
out
jnp
push
inc
push
loope
pop
mov
ja
jno
pop
pop
jecxz
roll
jne
xchg
cmp
push
stos
pop
jno
mov
jno
fistpll
stc
mov
insl
dec
cltd
loop
xor
cli
pop
stos
test
lret
mov
push
sub
xchg
mov
enter
shll
adc
rcr
xchg
fisubl
in
cmp
jns
xor
test
inc
fbld
adc
adc
insb
or
xchg
add
in
push
into
loop
pop
mov
adc
mov
loopne
out
push
cmp
mov
push
icebp
roll
and
inc
mov
or
jnp
fistpl
mov
xsavec
xchg
mov
adc
aaa
mov
in
in
int3
movsb
fcomps
inc
cmp
mov
sub
call
cli
cmp
sbb
les
int
xor
push
xchg
push
fnstsw
and
ds
sub
in
push
inc
insl
or
xor
cld
popf
test
test
sbb
lods
mov
cltd
test
out
frstor
jbe
xor
lcall
adc
rcll
mov
cs
xor
repz
fcomps
jnp
pop
rol
test
or
mov
and
pop
and
cmp
cld
stos
adc
jge
xlat
or
jbe
inc
xchg
mov
mov
pop
es
movsb
fiadds
xchg
sbb
lret
pop
lods
adc
mov
ss
jle
das
push
adc
mov
adc
pop
adc
pusha
jmp
pushl
push
mov
hlt
xlat
jae
into
ret
cmp
adc
pusha
sbb
mov
cmp
popa
or
cld
add
add
test
aas
pusha
mov
xchg
and
in
cmp
xor
jae
add
leave
fisttpll
jno
push
or
mov
inc
popa
mov
arpl
daa
frstor
pop
fstpt
push
andl
push
sub
out
loopne
js
xchg
xor
add
mov
sti
sbb
leave
dec
roll
inc
gs
rcrl
adc
cmp
out
clc
nop
add
jle
inc
cmp
mov
cld
dec
jae
leave
jg
iret
xor
outsb
or
std
push
mov
scas
dec
add
test
mov
mov
mov
jmp
pop
movsl
or
push
jl
popa
jl
lcall
cmp
insl
movzbl
cltd
jl
cmp
lret
clc
inc
insl
imul
sub
ds
pop
stos
shlb
decl
sub
cmpl
dec
imul
arpl
loopne
mov
das
mov
pop
shlb
add
nop
aam
mov
lcall
pop
mov
in
inc
dec
icebp
lock
lcall
lds
lods
fimuls
inc
mov
arpl
test
hlt
and
push
jo
imul
push
pop
mov
enter
mov
outsb
nop
sahf
jle
insl
dec
push
inc
cmpsb
push
adc
mov
jo
rorb
or
mov
mov
lds
repnz
jg
or
lret
repnz
test
cmc
js
pop
pop
add
lock
nop
mov
out
and
push
out
insb
mov
in
jne,pn
push
scas
sbb
xchg
mov
dec
js
xchg
xor
shlb
bound
rcrl
mov
cmp
into
cli
push
repnz
inc
and
repz
insb
push
jo
dec
mov
jge
cwtl
xor
push
imul
sub
xchg
js
pusha
aad
stc
xchg
dec
rclb
aad
cmpl
xor
or
mov
lods
dec
mov
jmp
adc
jbe
xor
ret
out
push
pop
and
mul
sub
ds
repz
xchg
mov
adc
or
fwait
or
les
fdiv
inc
mov
je
popa
out
xchg
adc
lret
lods
sbb
xor
mov
push
hlt
stos
inc
pop
and
fiaddl
in
pop
cmp
ds
lea
cmp
push
into
orb
sbb
aas
js
roll
adc
jo
jno
stos
mov
xor
mov
movsb
and
sub
aas
and
jecxz
xlat
push
dec
mov
mov
cmp
xchg
inc
rorb
test
xchg
sbb
aaa
pop
cli
dec
ja
imul
inc
mov
stos
loop
pop
push
fisubs
mov
jbe
xchg
lret
cmc
jg
jl
fnstcw
std
ljmp
outsl
lea
sub
jns
sti
test
sub
aaa
ds
inc
int3
ss
mov
vmaskmovdqu
add
xlat
push
nop
hlt
lock
ljmp
jg
dec
pavgb
push
addr16
jb
pop
stc
cmp
cmp
mov
icebp
sbb
xor
cmp
stc
imul
inc
les
popf
or
push
dec
test
in
push
jbe
sbb
ret
fs
nop
mov
push
xor
in
imul
loopne
daa
or
out
xor
xchg
test
loopne
mov
and
mov
mov
mov
subl
iret
repz
dec
es
jnp
ss
int3
out
shr
jmp
or
add
and
jmp
cld
cmp
mov
data16
lea
popf
daa
jo
push
xchg
jecxz
je
in
xchg
daa
imul
dec
fnsave
mov
pop
xorb
sbb
push
push
aad
cltd
fcomip
je
scas
lods
bound
xrelease
jnp
dec
enter
gs
imul
aad
vmovaps
push
add
repz
and
in
sbb
hlt
push
adc
mov
or
push
pop
aam
in
mov
sbb
lea
mov
out
dec
sbb
sub
jg
push
mov
adc
lahf
jmp
xchg
jl
sbb
and
push
sbb
or
and
outsl
in
jle
pop
jae
ds
xchg
lods
sbb
or
inc
mov
fcmovnb
adc
push
cmc
leave
dec
stos
lods
iret
xchg
xchg
pop
xchg
mov
xchg
std
pmaddwd
or
adc
jecxz
add
pop
or
test
repz
or
stos
push
sbb
call
push
test
push
je
jge
cmp
push
dec
cmp
pop
int
lret
orb
ja
push
pop
cwtl
jp
xor
das
rol
sub
ss
push
sbb
jmp
addr16
xor
mov
adc
sbb
or
or
mov
adc
add
pop
in
aaa
cmpb
push
sbb
pop
mov
adc
test
mov
popa
inc
movsb
cmpsl
jns
mov
clc
dec
cmp
leave
imulb
pop
in
cmc
imul
jmp
xchg
sub
push
jp
test
pusha
stc
or
sbb
xor
or
dec
cmp
mov
jne
fidivrs
push
or
stos
mov
mov
jo
mov
pop
test
addb
outsl
hlt
scas
cltd
cli
daa
sbb
sbb
int3
dec
adc
mov
cld
fldenv
adc
pop
push
in
psubb
mov
loope
cmp
stc
inc
pop
xor
jecxz
mov
mov
in
xchg
cmpsb
test
movsl
or
shl
xchg
adc
and
and
xchg
in
pop
inc
and
aaa
or
xorb
push
outsb
scas
adcb
mov
fnsave
sti
addr16
aam
repnz
cmp
pop
das
pop
repnz
xchg
out
je
xor
jbe
push
arpl
mov
insb
add
dec
aad
clc
jmp
int3
jmp
jp
lods
lock
or
add
int
push
or
or
mov
les
push
jnp
ss
movsl
xchg
jg
scas
add
add
push
xor
sub
and
sub
sar
ret
cmp
sbb
mov
and
jbe
mov
ficoms
shrl
xor
push
xchg
stos
hlt
push
cmpsb
lret
mov
ret
dec
push
cs
mov
xchg
pushf
pushaw
add
shl
rcll
aad
xchg
ljmp
xchg
ja
push
mov
leave
jmp
fs
or
fstpt
arpl
icebp
mov
pop
pop
js
mov
ja
or
out
cs
das
adc
pop
xchg
xchg
push
add
repnz
lea
xchg
push
adc
fnstenv
dec
cmp
push
shrb
lret
dec
adc
jmp
and
mov
std
cmp
int
push
xchg
xorb
cltd
ds
out
xchg
xchg
test
leave
sub
mov
cmpsb
pop
push
xchg
ljmp
imul
xor
pushf
ds
aas
mov
inc
fcmovb
hlt
sbb
and
ljmp
xlat
clc
in
sub
cmpsl
test
dec
cmp
les
sbb
aaa
mov
xchg
lods
fisubrl
push
scas
daa
cwtl
xchg
int
jne
call
sahf
stos
scas
shlb
subl
jmp
ja
aaa
sub
icebp
or
mov
mov
sbbb
in
insl
sub
or
int3
push
cs
decl
xchg
sbb
push
mov
mov
dec
cmpsb
sub
push
aaa
jno
test
scas
adc
lods
or
xchg
cli
jle
mov
daa
jmp
arpl
cmpsb
das
stc
xor
pushf
jns
inc
pop
inc
cmc
loope
leave
or
sub
lret
or
mov
sbbl
adc
dec
fistpl
sahf
in
cmp
loopne
and
cmp
ret
icebp
out
aas
flds
lret
pop
dec
or
mov
jl
cld
loop
pusha
jp
shll
lock
and
nop
push
jmp
or
mov
xor
mov
into
loop
pop
sti
lcall
in
sub
rorb
rorl
enter
incl
les
cmp
lcall
outsl
es
xchg
jge
cld
in
add
lods
xor
repnz
lret
movsl
repz
aas
add
mov
mov
mov
add
das
sbb
and
cmpsl
or
mov
add
std
mov
aas
mov
mov
cmp
sarl
lret
jno
xor
pop
test
in
rcr
int3
xchg
add
push
jbe
in
stos
icebp
xchg
adc
xchg
or
push
stos
inc
shr
fsub
aas
mov
out
test
sub
orl
add
lcall
push
outsb
std
push
push
jno
jle
sub
adc
or
lcall
in
mov
mov
xorl
test
dec
and
pop
loope
insl
shlb
adcb
mov
xchg
sbb
int3
sbb
mov
inc
cmp
xchg
fs
jge
xchg
jne
jno
dec
es
pop
imul
outsb
fsubl
shlb
xchg
or
sub
cmp
sub
push
aam
lahf
xor
out
test
cmc
iret
repnz
aaa
jne
insl
mov
mov
inc
int
addr16
ljmp
test
mov
out
std
push
push
or
out
cmp
dec
js
inc
jle
and
cld
xchg
pop
jns
push
cmpsl
aad
aas
jecxz
mov
movb
sbb
pop
jge
sahf
inc
lods
out
mov
int3
je
movsb
xor
repz
sbb
ljmp
push
mov
and
sub
jge
jno
daa
test
dec
cmp
scas
lahf
movsb
sub
sub
sarl
jle
dec
inc
xlat
and
lret
lret
push
dec
pushf
dec
dec
std
scas
sub
push
nop
cmpb
aam
or
inc
fdivrs
stc
popa
mov
mov
push
ud1
out
sbb
sub
leave
dec
xor
hlt
jp
add
ss
ss
and
into
aad
adcb
xor
mov
mov
jmp
fimuls
dec
fwait
stos
rorb
test
ljmp
scas
test
dec
and
lahf
mov
mov
sbb
sarl
mov
cwtl
mov
jo
cld
in
mov
mov
and
loop
pop
push
popl
xchg
and
adc
in
push
clc
imul
xor
adc
or
repnz
aam
or
es
fdivrl
jno
pop
aam
icebp
add
negb
sbb
movsb
outsb
jne
sbb
jle
mov
jnp
inc
rorb
nop
ja
mov
pop
pop
pop
insb
push
out
push
gs
popa
insl
aad
lahf
mov
jle
push
push
xor
adc
inc
jmp
aad
and
fcmovu
xchg
dec
add
cmp
fdiv
mov
int3
pop
loop
add
sahf
push
mov
adc
pushf
shrl
cmp
movups
ret
lcall
mov
daa
dec
push
cli
jb
and
xor
push
push
enter
xchg
loope
push
push
mov
mov
xor
jae
xor
cltd
mov
mov
lahf
dec
push
jecxz
xchg
mov
jg
pop
repnz
shrb
cmp
add
cmp
icebp
cmpsb
inc
fwait
in
sbb
cmpsl
lods
dec
mov
lods
es
adc
pusha
cli
stos
and
aad
xor
in
notl
cld
inc
jb
push
lret
mov
inc
jae
mov
cmp
mov
aaa
jno
rorl
sbb
or
lods
pusha
mov
int3
xchg
mov
arpl
dec
xchg
jmp
xor
cld
push
mov
clc
cwtl
ds
xchg
and
insl
cli
cmp
sbb
sbb
cwtl
scas
xor
popf
inc
in
fcomps
rcll
repnz
push
addr16
aam
mov
shlb
jae
addr16
divb
cmp
leave
test
cmpsl
popa
lods
enter
sub
stc
mov
or
imul
jnp
call
insb
mov
gs
and
xchg
mov
cmpsb
pop
jmp
jmp
icebp
add
sub
jno
test
outsb
mov
lods
xchg
cmc
or
pop
ss
mov
je
mov
mov
sub
ljmp
popa
sub
pop
data16
aam
mov
adc
cld
psubsb
sub
stos
enter
inc
insl
add
enter
pop
jle
sbb
pusha
cltd
lods
hlt
pop
sar
xchg
mov
adc
rolb
lods
adc
cs
sbb
mov
lcall
out
adc
xchg
jns
push
sbb
gs
movsb
xchg
push
scas
push
mov
insl
mov
stos
bound
iret
jl
adc
icebp
xor
sbb
push
adc
dec
insl
jle
or
sub
push
xchg
jnp
push
push
and
inc
fwait
addb
cmp
jl
and
sbb
jecxz
ljmp
jmp
xchg
pop
inc
outsb
or
je
pop
jb,pn
and
jb
lods
icebp
push
dec
jns
popf
mov
fistpl
mov
pop
popf
mov
stc
mov
std
mov
mov
jae
orl
push
mul
sbb
daa
jno
int
iret
sti
out
xor
or
pop
in
lcall
lret
sbb
push
inc
aad
out
cmc
shlb
push
cmp
test
ljmp
dec
sub
loopne
mov
lcall
push
jo
inc
jo
mov
ljmp
aaa
out
rcr
mov
fcoml
jle
dec
shl
mov
fldl
jg
leave
ret
push
sbb
sbb
ss
or
into
push
sbb
cmp
lea
andl
fdivp
mov
aaa
in
iret
push
movsl
jl
xor
popf
jp
mov
sbb
push
sub
push
mov
mov
test
dec
loopne
mov
pop
or
sub
xchg
pop
insl
xchg
mov
imul
cmpsb
or
es
jle
jbe
sbb
pusha
jl
adc
aam
dec
movsb
lret
pop
sub
cmp
fmuls
lods
je
push
rcrb
fists
lods
fdivl
push
outsl
xchg
mov
fs
mov
shrb
xchg
out
pop
pusha
outsb
or
add
fwait
and
or
repz
inc
push
add
lret
dec
int
inc
mov
outsb
call
pop
cmp
sub
jl
mov
movsb
jp
fwait
cld
scas
fmull
jmp
out
dec
fwait
in
push
das
subb
jge
cli
gs
push
push
pop
aam
repz
cwtl
ret
movsb
hlt
xchg
inc
xlat
add
mov
inc
icebp
repz
pushf
int3
movsb
push
arpl
in
stos
fmull
roll
fsubrp
jle
ljmp
add
mov
lock
sbb
rorl
xlat
adc
push
lcall
lods
pushf
sbb
out
pop
outsl
mov
add
inc
call
fwait
or
cmp
cmp
ret
adc
jae
inc
cmp
pop
cmpsb
test
push
push
push
or
aas
xchg
mov
mov
aas
mov
or
in
add
pop
int
dec
imul
sub
dec
cmpsl
cmp
pop
out
inc
jo
jecxz
dec
stos
dec
xchg
lods
adc
sbb
test
push
loope
les
push
mov
mov
shll
and
popf
repnz
outsb
popf
pushf
pop
mov
loopne
adc
lcall
or
adc
pop
mov
push
sub
decb
gs
pop
push
xchg
or
pop
shl
stos
jo
call
xchg
dec
cli
cmpsl
dec
movsb
mov
lock
popa
sti
arpl
dec
sbb
and
inc
cmp
dec
xor
leave
jb
sub
lods
or
inc
or
or
jne
stos
mov
or
ficoms
mov
call
inc
add
out
insl
cmp
call
aas
jns
mov
jo
adc
frstor
test
scas
push
dec
push
rorl
xlat
lds
xor
aam
sarl
mov
mov
sarl
cs
inc
nop
mov
inc
test
cmp
push
add
sbb
push
int3
leave
sbb
lods
xchg
int3
inc
js
int3
xchg
xchg
xchg
pop
xchg
jg
inc
cmp
inc
stos
out
lods
push
es
cmpb
and
jo
mov
adc
das
cmp
mov
test
push
xor
ret
sti
push
aaa
into
and
lods
mov
adc
dec
lret
push
cltd
sub
jecxz
sbb
leave
mov
loope
mov
push
mov
scas
push
loopne
cmp
mov
mov
fiaddl
cmpsl
jge
mov
inc
rcll
inc
gs
xor
mov
push
or
add
mov
mov
cmp
inc
int
jecxz
add
push
add
in
lret
sub
test
add
mov
mov
nop
insl
out
leave
dec
xchg
push
sbb
cmp
pop
mov
mov
adc
aam
shlb
mov
addr16
xor
xchg
in
jne
xor
jb
pop
and
inc
subb
and
or
cmp
or
xchg
sbb
nop
stc
sub
mov
xor
arpl
sahf
mov
daa
or
iret
push
call
mov
mov
jp
popf
test
add
adc
inc
in
and
test
clc
xor
fisubrs
adc
subl
out
xchg
andl
jbe
ret
dec
lods
mov
hlt
cmp
shrb
mov
les
push
xor
push
ret
add
stc
adc
lea
and
cmc
scas
sub
or
mov
je
ret
loop
pushf
inc
rcr
xor
cs
jns
pop
jns
movb
jg
and
test
out
inc
sub
push
rcll
xchg
rorb
stos
out
mov
popw
jmp
pop
dec
cmp
dec
fldcw
adc
clc
xor
push
pop
les
mov
dec
stc
jae
or
gs
adc
test
int3
ds
fwait
and
cmp
add
mov
sub
inc
insl
jg
inc
scas
ret
scas
push
out
fisubrl
mov
imul
test
out
shl
lret
icebp
and
pop
add
iret
xchg
loope
lds
sti
jle
test
push
popa
push
inc
xor
int3
sub
icebp
mov
add
iret
adc
mov
shrb
cmpsl
mov
int3
inc
clc
cmp
stc
push
pop
push
jns
jbe
sbb
sub
paddq
aas
sbb
in
adc
out
js
in
rclb
sahf
js
pop
and
lds
add
cltd
sbb
xor
mov
jp
xchg
pop
lds
imul
std
mov
daa
inc
sub
cmc
shrb
xor
fwait
cmpsl
xor
adc
adc
sub
push
and
ja
cmp
fcomip
jmp
nop
and
adc
and
dec
fbld
js
cli
ret
dec
xorl
xor
lds
or
jge
clc
aad
fcompl
adc
sbb
inc
push
cmove
mov
iret
adc
push
pop
cmp
xor
out
cmpsb
xchg
mov
imul
and
pop
add
scas
and
mov
dec
cmp
inc
and
je
lds
or
sbb
xchg
mov
fimuls
stos
adcb
xor
filds
in
mov
pop
fwait
mov
sbb
jb
scas
outsb
imul
pop
xor
lods
inc
popa
adc
jb
testb
push
pop
aas
sti
cmp
and
push
or
jecxz
dec
cmp
sub
jmp
outsl
cmpsl
inc
lock
pop
push
xchg
jecxz
mov
mov
sarl
pop
lahf
fstps
jg
add
mov
cltd
sbbl
or
fwait
jns
je
and
mov
push
mov
inc
insl
lea
and
adc
mov
insb
mov
stos
lcall
mov
add
xor
imul
xchg
bound
push
idiv
fnsetpm(287
mov
jnp
outsb
sbb
fdivrp
push
push
mov
in
fisubs
cli
test
call
loopne
shr
xchg
add
fmuls
in
popa
xchg
ret
lock
stc
adc
jbe
lahf
xorl
and
xchg
int
mov
lds
pusha
cmpl
cmpsb
ja
and
aas
jbe
push
stos
add
mov
xor
mov
sarl
cmc
adc
mov
cmova
add
mov
imul
nop
and
imul
pop
sbb
les
enter
ficoms
and
inc
sbb
stc
sbb
cs
cli
pop
test
pop
popa
pop
ja
mov
out
data16
cwtl
repz
test
imul
sbb
pusha
pop
xor
repnz
cmp
cltd
in
inc
aam
mov
das
jmp
in
test
jmp
mov
es
add
aam
push
push
xor
cmp
imulb
and
add
sbb
lods
jecxz
out
addr16
iret
dec
push
lret
inc
imul
std
pop
mov
enter
repz
push
sub
mov
mov
fstl
sub
push
sub
jle
sti
inc
dec
leave
mov
test
test
push
mov
outsl
pusha
pop
jecxz
in
sub
test
xchg
sbb
inc
jns
bswap
pop
push
add
gs
xchg
lock
and
enter
xchg
pop
xorl
dec
sub
mov
mov
mov
xor
inc
mov
idivl
or
test
sub
iret
pop
pop
or
mov
sub
push
dec
int3
mov
jg
es
xchg
jmp
dec
or
shl
movsb
cmp
xchg
lock
jecxz
out
jl
cld
mov
xchg
mov
inc
mov
sbb
jb
es
ljmp
lods
mov
bound
out
in
sahf
call
mov
ret
fsub
mov
jge
adc
dec
xchg
mov
or
xchg
aad
dec
movsl
push
push
fnstsw
sbb
arpl
push
negl
cli
loope
pushf
arpl
pushf
mov
mov
inc
and
jmp
cmp
mov
popf
inc
xchg
mov
testl
sub
imul
testb
mov
xchg
add
xchg
call
in
mov
inc
mov
pushf
sub
dec
sbb
inc
sub
push
pop
inc
icebp
mov
iret
aam
sub
push
or
mov
pop
sbb
in
fidivl
xor
adc
sub
rclb
dec
and
mov
xchg
inc
mov
push
shl
loopne
push
hlt
dec
iret
pushf
dec
cmc
nop
mov
pop
cmp
cwtl
xchg
pop
push
sub
push
sar
sbb
bound
sub
fs
inc
fldenv
inc
xlat
and
push
or
mov
jl
js
sti
xchg
fbstp
mov
push
sbb
sub
jae
adc
jne
dec
mov
ja
mov
xchg
dec
mov
lcall
arpl
shll
push
cmp
movsl
jmp
adc
cmc
sti
mov
xchg
add
int
lods
dec
fdivrl
ds
cmpsl
dec
jnp
push
fwait
lret
andl
jns
lahf
lret
fidivs
xor
xor
leave
mov
pop
cmp
pop
push
xchg
add
dec
in
int3
shlb
mov
push
mov
xor
add
add
or
mov
xor
cmp
mov
ficoml
or
sbbb
in
in
inc
jnp
cmp
and
fildll
test
insl
cmp
negb
adc
jns
fnclex
jbe
in
xchg
or
mov
push
xorl
mov
or
fistpl
mov
adc
push
fstl
adc
in
pop
dec
inc
push
xor
daa
shrb
cld
xchg
mov
mov
repz
cmp
adc
pusha
mov
dec
add
inc
mov
adc
insb
push
mov
icebp
ljmp
push
inc
push
push
fidivs
out
fiadds
cmp
xor
icebp
mov
mov
inc
pop
test
jg
shlb
inc
fwait
add
pop
push
jle
mov
js
mov
and
push
cmpsl
push
sbb
jbe
adc
out
pushf
lcall
mov
add
aad
test
pop
xor
clc
cld
cmp
sub
enter
sbb
sbb
test
mov
hlt
mov
sub
jb
fldenv
push
dec
rep
xor
outsb
xor
fsubrl
cmp
pop
pop
cmc
js
jmp
or
cmp
bound
movsl
jbe
lea
testl
xchg
repz
out
js
xchg
sub
pop
jns
jne
xor
sub
add
jmp
mov
das
mov
std
xchg
out
or
aas
movsl
dec
push
stos
lcall
jmp
jns
xchg
mov
aam
inc
lret
ds
mov
clc
sbb
bound
cld
sarl
mov
and
or
scas
xor
pop
in
mov
push
adc
fnsave
and
mov
mov
sub
insl
push
add
lcall
xor
lahf
adc
outsl
cmp
addr16
mov
xchg
rcll
movsl
divl
stos
xchg
sti
pop
jecxz
std
out
js
loopne
out
pop
and
leave
mov
lret
js
lret
xchg
cli
lcall
mov
stos
bound
inc
sub
cmpsb
and
inc
ja
ds
or
scas
les
ficoml
add
mov
inc
test
push
out
dec
dec
sti
testl
ret
daa
test
pop
shll
nop
mov
or
sub
mov
pop
or
mov
jb
pop
stos
and
loope
mov
adc
repz
fisttps
mov
fbld
mov
sbb
movsl
add
lea
aad
aaa
jg
xchg
leave
dec
insl
mov
mov
inc
mov
mov
xor
orb
jmp
nop
popf
xor
cmp
aas
mov
jb
sbb
pop
outsb
pop
std
sbb
mov
in
in
adc
jno
dec
and
jbe
ss
inc
popf
mov
sub
mov
push
dec
mov
arpl
xchg
inc
dec
pop
sub
sti
xor
mov
dec
rcrb
mov
cmc
bound
enter
popf
jl
mov
cmpsb
push
sbb
ret
dec
cmp
in
sub
fadd
mov
mov
mov
pop
pop
xor
jle
jecxz
sub
jp
jbe
ljmp
and
mov
xchg
les
popa
cmp
mov
adc
leave
cwtl
jg
fucom
into
pop
sub
lock
out
aaa
lret
or
mov
pop
sub
jbe
insb
jl
mov
daa
mov
ret
adc
pop
jnp
out
jmp
and
sarl
push
ds
cwtl
out
cmp
or
fadd
int3
lret
and
stos
and
in
out
test
rorl
shrb
push
or
mov
fmuls
in
addb
repz
in
test
mov
push
mov
jns
inc
insl
jnp
pop
push
jg
imul
jecxz
fiaddl
cltd
mov
inc
mov
pop
mov
add
adc
xchg
pusha
cmpl
push
mov
or
dec
or
in
mov
stc
je
xchg
lods
lea
xlat
and
sub
or
push
xor
repz
cmpsb
repnz
ds
movsb
jns
inc
dec
inc
xor
dec
and
push
jb
dec
jns
cmp
in
adc
xlat
sub
setnp
loop
cmp
pop
sub
movsb
in
gs
lcall
fiadds
stc
xor
cmp
dec
sub
mov
movsl
push
idivl
mov
movsb
sbb
xor
aad
adc
cwtl
push
sub
out
imul
rorl
sub
cmp
and
xchg
loopne
xor
mov
lods
or
xchg
cmp
daa
push
adc
xchg
mov
and
lcall
outsb
lods
fst
push
or
mov
leave
and
sbb
test
das
jg
lahf
loopne
sbb
shll
loope
fs
mov
aas
das
popf
into
iret
aad
add
mov
dec
aad
mov
pop
cmp
xchg
push
xchg
mov
push
lods
dec
cs
inc
jmp
jle
jmp
fcmovbe
lahf
mov
xchg
inc
push
pop
call
inc
aas
mov
jmp
and
and
xor
pop
data16
aad
stos
and
and
inc
orb
sub
stc
and
in
push
js
mov
push
cwtl
jl
or
inc
test
icebp
imul
sbb
sbb
mov
out
and
adc
or
js
mov
mov
jno
inc
shl
iret
pushl
push
in
xchg
jmp
outsl
mov
aaa
ljmp
cmp
mov
push
daa
test
or
les
test
jmp
xor
jecxz
add
mov
mov
cmp
jnp
testb
jge
jge
in
add
push
sub
dec
jmp
out
enter
xchg
call
stos
setge
cmp
adc
mov
out
cmc
push
neg
loope
cs
pop
pop
add
inc
xor
cmp
jnp
mov
mov
out
in
or
xchg
cmp
push
shll
push
xchg
push
sub
js
push
sbb
adc
outsl
sub
push
cmovl
mov
pop
xor
push
mov
stos
rclb
mov
das
insl
mov
mov
in
mov
in
inc
stc
push
push
call
mov
rcrl
fwait
inc
and
inc
aam
xchg
pop
and
mov
mov
mov
xchg
inc
decb
xchg
push
int
fidivrl
iret
cltd
add
push
sub
inc
or
inc
int3
out
pop
pop
push
jo
cmpsl
adc
mov
ja
aas
mov
or
push
pop
adc
repnz
das
jp
call
das
cs
push
sub
jl
aam
lcall
dec
and
push
dec
notl
jae
add
lds
lea
loopne
lahf
cli
fdivl
jle
lcall
mov
repnz
mov
sahf
cld
mov
pop
call
cmp
jb
lds
pop
fnsave
pop
jae
cs
push
pop
mov
insl
cltd
pop
lds
cltd
lret
cmpl
inc
adc
pusha
je
leave
and
loop
mov
inc
sahf
adc
xor
arpl
sbb
xchg
sub
push
test
stos
shl
xor
or
jne
cmp
push
jb
imul
and
inc
cmp
mov
cwtl
and
fistl
add
xor
and
xchg
loopne
ret
mov
add
sub
fs
and
fcmovnb
sbb
or
ds
rorl
ret
pop
loopne
fscale
jno
mov
xor
mov
inc
imul
jge
js
jae
and
push
pushl
xlat
pop
fdivrl
inc
mov
cmp
xchg
adc
mov
push
das
das
pop
movsl
repnz
paddq
lds
sbb
mov
cmp
push
push
cmc
in
loop
xchg
jmp
push
test
pop
ljmp
lods
fcomi
mov
mov
jecxz
pop
lods
ficomps
mov
addb
rcrl
adc
push
inc
adc
jg
das
xor
fidivl
in
out
xchg
adc
cmp
mov
lcall
out
and
push
pushf
sbb
clc
or
add
sbb
scas
cmp
xchg
jns
mov
fidivs
or
imul
or
aas
xor
pushf
sbb
dec
dec
jge
push
idivl
or
mov
jle
adc
sbb
sub
mov
imul
stos
pushl
gs
xor
das
push
and
std
inc
stos
lahf
shll
push
xor
orps
xor
scas
insl
inc
mov
fmulp
mov
mov
cmp
and
fistpll
and
subb
cltd
and
fwait
jmp
mov
into
cmp
clc
or
cmpsb
shlb
xchg
jle
rol
sbb
jno
xchg
mov
dec
in
lret
fnstsw
adc
sahf
ja
mov
mov
xchg
jns
mov
xor
std
jge
xor
sarb
cmp
mov
sti
fmull
sbb
or
sbb
out
push
dec
inc
inc
xchg
shr
sub
pop
lods
mov
lcall
stc
mov
sbb
in
hlt
xor
sbb
inc
pusha
adc
into
fisubrl
xchg
sarb
inc
daa
push
sbb
add
cltd
popf
sub
arpl
mov
xchg
jp
in
push
ljmp
lret
pop
jl
jnp
pop
mov
sub
pop
dec
jns
dec
lock
in
inc
xor
mov
adc
outsl
roll
or
js
mov
push
loope
mov
or
push
dec
into
rcll
jp
pop
mov
inc
divl
mov
mov
daa
fsubrs
inc
mov
mov
mov
dec
inc
mov
dec
sbb
int3
push
push
jae
fisubs
sub
jae
ds
push
nop
ss
das
mov
shll
dec
inc
jl
addl
lods
lds
and
mov
movsl
jno
adc
sub
out
pop
daa
insl
pop
ljmp
or
roll
stc
ss
mov
xchg
int3
repz
mov
pop
js
aaa
dec
fwait
or
push
push
call
mov
testl
test
fwait
mov
je
inc
mov
sti
je
sar
pop
stos
cmp
scas
xlat
cmp
jl
xor
xor
movsl
xchg
push
stos
addr16
movsl
out
movsbl
iret
push
hlt
rcll
inc
pop
add
ja
aaa
outsl
pop
xchg
dec
sti
and
and
ds
sbb
push
out
mov
mov
in
pop
jnp
dec
dec
dec
mov
fidivrl
mov
pop
int
rcrb
mov
jbe
adc
jne
add
divb
ffree
add
testl
inc
dec
das
int3
push
sbb
xor
pop
imul
jg
push
dec
test
test
mov
xlat
lret
cmpl
mov
xchg
and
mov
sub
and
movsb
std
cmp
add
test
xchg
pop
in
andb
into
mov
or
dec
push
mov
adc
es
cltd
push
sub
outsb
mov
cmp
mov
lock
aad
fimull
cmpb
sub
sub
mov
out
xchg
popa
push
dec
in
scas
movsl
mov
sbb
mov
push
xchg
xchg
pop
fwait
js
sbb
sbb
mov
imul
mov
fiaddl
mov
sarl
push
popa
pop
icebp
out
sub
roll
mov
jmp
hlt
jle
adc
out
outsb
jle
push
add
adcl
jp
push
fwait
jmp
push
xor
mov
lea
xchg
dec
cmp
pushl
lret
xchg
or
jns
jp
neg
or
sahf
add
xchg
insl
testl
lea
lahf
sti
outsl
aad
add
stc
cmp
cmp
mov
xor
cmpl
nop
push
mov
popa
outsb
sbb
cli
pop
inc
sub
fiadds
popa
jae
jns
fdivs
jno
aaa
sbb
ss
mov
sbb
mov
push
loopne
xchg
imul
lds
push
fs
rcl
loope
mov
lret
cmp
test
movsl
addr16
push
test
ds
fs
enter
mov
outsl
mov
aas
or
mov
sub
dec
rcl
shlb
mov
mov
mov
pop
jbe
flds
lret
inc
lods
dec
xchg
and
lcall
xchg
mov
dec
inc
sbb
cwtl
inc
xchg
out
insb
push
push
jecxz
push
insl
and
xor
popf
pusha
movsl
pop
rorb
aad
inc
mov
xor
cmp
cmp
in
lods
pop
or
aas
mov
arpl
or
adc
lods
xchg
lods
fxch
xchg
leave
icebp
mov
or
cmp
shll
int
in
jecxz
in
xchg
push
inc
pop
insb
adc
jo
call
int3
ja
jns
hlt
xchg
stos
lret
sbb
sub
adc
xchg
clc
popf
push
inc
cmc
adc
std
pop
mov
test
inc
jecxz
jecxz
sub
adc
fucom
push
loope
jge
int
push
scas
push
mov
push
xchg
pop
je
ss
mov
ss
xorl
mov
orl
jb
repz
lahf
cmp
pop
hlt
xchg
inc
xchg
lret
stos
stos
sub
cltd
cmp
pop
icebp
sub
cmp
or
ds
sub
jnp
and
sbb
or
or
mov
jae
inc
dec
add
outsb
pop
fdiv
push
popf
test
cmp
sbb
dec
popf
dec
mov
movsb
mov
arpl
subl
nop
lods
sbb
or
iret
xor
pop
jecxz
push
rorl
push
add
das
aaa
test
pop
stos
cs
ja
sbb
sti
negb
lcall
inc
mov
xchg
std
icebp
xor
popf
inc
inc
xlat
adc
xchg
test
pop
and
mov
lods
das
pop
push
cmp
jns
test
lock
call
imulb
scas
das
aaa
cmp
lods
ret
jae
das
inc
loope
push
sub
cmp
pop
stc
cmp
shrb
mov
push
sbb
addr16
jo
insl
adc
stos
test
gs
ds
fcmovb
inc
cli
mov
inc
jmp
cmpsl
push
shl
inc
jbe
mov
push
mov
test
or
lcall
sbb
mov
adc
push
xor
dec
xchg
sub
mov
aad
test
shr
ds
outsb
sbb
inc
cs
aas
loope
aas
fmul
jno
cmp
cmp
xchg
inc
pop
mov
inc
sbb
nop
mov
pop
out
jb
cmp
push
sbb
jg
sub
movb
inc
iret
jg
sbb
inc
and
nop
in
lds
sub
popa
cld
fwait
outsb
pop
hlt
pop
rcrb
mov
or
and
std
mov
xchg
jbe
hlt
jg
add
fistl
or
sub
loope
dec
lcall
mov
lds
sub
and
sar
jnp
lret
dec
lds
ds
jl
test
and
adc
shrl
aam
pop
push
mov
mov
call
test
add
push
or
mov
jo
cmpsb
add
dec
movsl
movsl
jbe
xchg
jo
test
mov
in
adc
dec
sbbl
loopne
push
mov
out
mov
aaa
xchg
cli
les
stos
out
sub
inc
repz
push
lock
gs
sbbl
lds
fidivrs
lods
jmp
add
sbb
dec
add
mov
sbb
mov
decb
mov
add
cli
lret
notb
rcrb
xchg
and
push
adc
pushw
adc
or
push
orb
pop
pushf
xor
jb
adc
or
xchg
inc
dec
xor
inc
inc
mov
stc
jns
pop
movsb
jmp
insb
dec
pop
dec
loop
pop
sub
mov
mulb
cmp
mov
daa
mov
cmpsl
ret
mov
jb
popf
imul
push
dec
fwait
jmp
xchg
mov
popf
or
add
andb
fimull
xchg
lahf
cmp
dec
aas
es
dec
mov
jle
stc
popa
dec
mov
kmovw
cmpsl
pop
rorl
push
aad
imul
int
mov
out
fistpll
pop
mov
movsl
and
fcoms
sub
imul
lods
jae
out
cmp
je
in
out
mov
mov
mov
clc
rclb
cmp
leave
dec
pop
add
sbb
inc
inc
cmp
mov
dec
jae
fildll
aam
xor
idivl
addr16
mov
sbb
shlb
popf
cli
negb
or
mov
adc
jbe
pusha
outsb
push
jo
pop
ret
icebp
mov
js
movsl
jle
cld
pop
jg
jb
dec
and
xchg
push
enter
daa
mov
push
pop
mov
cmp
xchg
cmc
imul
psraw
rolb
push
pop
imul
stos
dec
imul
xlat
sbb
aam
xchg
xchg
pop
into
lahf
push
sti
cmp
pop
mov
xor
jmp
insl
fisubrs
or
stos
dec
movsb
jnp
addb
pop
movsl
sub
add
fnstsw
xor
daa
mov
fsubrs
sbb
lock
ret
dec
aam
dec
mov
ss
pop
dec
lcall
xor
xchg
loope
hlt
cwtl
fdivl
or
pop
mov
sete
jp
rclb
xor
jns
lods
fsubs
bound
sbb
movsb
add
mov
test
jbe
lods
rclb
into
mov
dec
dec
xor
xchg
scas
xchg
mov
out
xchg
inc
add
xchg
cwtl
loopne
fs
fsubrs
xor
jecxz
jno
cmpsb
inc
testl
lea
push
or
pop
mov
sub
repnz
sbb
mov
lret
xchg
mov
aad
fmul
test
sbb
pop
inc
enter
cmpsb
iret
push
adc
shrl
fnsave
lahf
sub
sub
fs
xchg
push
push
mov
mov
xor
mov
mov
ret
cmp
shlb
cmc
aas
mov
mov
dec
es
cmp
pusha
jnp
lods
outsb
adcb
fildll
imul
mov
push
clc
movsl
leave
fs
add
jne
pop
adc
xchg
push
frstor
push
pop
adc
mov
pushl
mov
div
mov
pop
xchg
out
add
pop
xchg
data16
sub
std
mov
fdivrs
mov
cltd
sub
aas
sub
outsl
push
cld
push
or
mov
lcall
xchg
or
or
out
in
movb
sub
pop
xlat
mov
cwtl
aas
sbb
mov
jne
mov
ljmp
add
mov
adc
xor
jmp
repnz
xchg
xchg
dec
into
mov
sbb
cmp
dec
mov
sahf
sub
out
pop
or
sbb
and
or
and
pop
mov
cmp
gs
icebp
fistps
movsb
sahf
loopne
das
cld
repnz
lcall
jno
add
lahf
mov
mov
aas
cwtl
sti
mov
test
and
je
sbb
jnp
ret
sahf
xor
aam
sub
movsl
mov
xchg
clc
out
xchg
cmp
lods
call
mov
mov
movsb
lds
and
and
popf
and
jnp
and
inc
xor
push
mov
pop
or
sbb
pop
cltd
pop
xchg
fcomps
sub
cld
std
enter
cwtl
push
mov
inc
jno
mov
fisubrs
popf
test
rolb
sub
fstpt
dec
rcll
cld
mov
cltd
lods
shl
cs
xor
popf
mov
loopne
test
mov
mov
mov
repz
push
adc
lret
adc
ja
pop
jge
inc
add
std
lcall
xor
pop
push
inc
call
es
cmpsl
jp
ret
fcomps
add
adc
mov
mov
dec
icebp
in
fldcw
cs
mov
dec
pop
sbb
scas
jl
or
or
bound
aaa
mov
jecxz
add
lock
push
adc
addr16
xchg
movsb
or
lret
sbb
adc
inc
push
jle
sbb
and
cwtl
add
jns
popa
cs
shrl
shlb
xchg
or
in
movsb
aaa
fstpl
pusha
pop
inc
popa
setp
jbe
imul
shll
pusha
pop
xchg
sbb
mov
add
pop
adc
cmp
es
testl
xchg
sbb
clc
pop
and
lods
stc
fsubs
outsl
pushf
testb
int
in
adc
mov
dec
imul
fisubrs
add
dec
imul
dec
sub
cmp
stc
xlat
pop
mov
pop
in
leave
and
mov
imulb
xor
push
lods
xchg
orl
mov
jo
rcll
cmpsl
je
cs
and
dec
push
mov
scas
or
hlt
js
adc
push
xchg
out
mov
cmp
lcall
fistpl
pop
mov
fs
sbb
jae
aad
into
sbb
cmp
and
sub
or
hlt
sbb
jmp
and
xchg
iret
imul
nop
xor
mov
sub
mov
mov
sub
enter
xor
dec
mov
cld
sub
inc
scas
mov
test
pushf
into
fldt
stos
les
addr16
lock
fwait
and
fstpt
cld
mov
ss
adc
pop
and
sub
das
pop
sbb
into
in
movsl
or
daa
pop
in
xchg
imul
rcrl
push
aas
lea
stos
pop
dec
loopne
push
pop
aad
mov
xchg
adc
mov
or
es
and
lods
mov
pop
sbb
cmp
rcrb
mov
sbb
daa
popa
aad
adc
and
mov
daa
xchg
xchg
das
jp
nop
leave
cs
imull
pop
inc
ss
xchg
es
ret
std
loop
into
mov
jl
hlt
xorl
in
sub
jns
inc
cmpb
in
adc
ret
bound
sub
and
mov
fcmovnu
subl
xchg
xchg
syscall
mov
test
jns
dec
add
xor
sub
cmp
pop
sbb
mov
cltd
std
dec
push
addr16
inc
mov
insb
testl
shll
dec
mov
test
divb
xchg
mov
jae
and
mov
lahf
add
insl
mov
sub
mov
in
scas
testl
in
sub
xor
aam
insl
movsb
adc
mov
pop
jecxz,pn
rolb
add
jae
popa
lea
outsb
lahf
mov
mov
icebp
fwait
jp
loope
pop
pop
sub
push
into
iret
pop
xlat
dec
sahf
sbb
push
mov
jne
les
clc
push
scas
scas
fsubl
in
shlb
popf
loopne
leave
pushf
into
push
push
repz
mov
ss
xchg
add
jmp
addr16
clc
dec
jne
xor
jae
rolb
cmp
ret
in
loop
lods
xor
popa
addr16
inc
bound
adc
sub
adc
jae
xor
mov
pop
mov
repz
shlb
je
icebp
popf
mov
mov
xchg
sbb
push
mov
or
int
stc
add
lds
pop
or
fstpl
xlat
xor
pop
shrl
adc
or
adc
pop
std
inc
and
rclb
sub
and
fcmovbe
je
push
jno
pop
out
jecxz
lcall
pushf
mov
inc
sub
loopne
cmpsl
and
aaa
ja
movsl
mov
add
dec
sbb
mov
inc
push
and
xchg
ljmp
push
xor
ljmp
in
push
mov
dec
sti
lds
pop
sti
push
out
nop
test
std
push
bound
mov
aas
dec
mov
lock
rorb
cli
xchg
repz
imul
pop
fstl
cmp
or
inc
jbe
jne
pop
push
mov
sbb
ds
and
sbb
adc
leave
push
call
sub
fsts
in
sub
aad
and
mov
xchg
xlat
push
mov
repnz
and
in
cmp
xchg
insb
mov
orb
les
in
xchg
xlat
daa
iret
mov
push
or
fisubrl
mov
push
cmp
xchg
and
xchg
push
ja
push
popf
test
dec
shlb
inc
in
sub
lcall
aaa
xor
dec
push
xchg
ror
bound
sub
jle
mov
or
je
xor
repnz
xor
cmpsb
cmp
cmpsl
or
mov
xchg
lret
jl
mov
xlat
or
mov
push
sbb
ficoml
xchg
int
outsl
mov
fucom
lret
loope
cwtl
sarb
xchg
fidivrs
repnz
imul
aaa
mov
adc
cmp
add
and
dec
jecxz
imul
push
push
es
jae
iret
add
es
loope
cltd
jnp
adc
fcmovbe
xchg
add
jmp
pop
test
pop
and
inc
fstl
jne
jmp
andb
scas
mov
pop
mov
and
lock
rorl
enterw
hlt
aam
ss
sub
xchg
add
sbb
jle
cmp
movsl
loopne
xor
jne
outsb
pushl
out
lret
push
sub
es
loope
mov
inc
shrb
cltd
xchg
dec
int
rcl
and
pop
mov
aas
add
fsubrl
xchg
loopne
icebp
cmpsl
imul
arpl
jns
push
rcll
daa
mov
mov
sbb
aad
lret
dec
jbe
mov
rclb
push
out
sub
pop
mov
mov
sub
popl
xchg
and
add
fmul
repnz
cmp
jle
inc
mov
sub
icebp
xchg
inc
sti
lds
cmp
push
jecxz
sbb
or
cmp
pusha
aas
sub
push
xchg
inc
lods
loope
or
addr16
sbb
cld
push
pop
xor
mov
daa
adc
push
mov
and
mov
pop
addr16
jg
xchg
jo
mov
inc
cmp
and
cmp
sti
jp
dec
popl
pop
inc
fnstenv
movsl
js
test
iret
out
pop
stc
and
cmpsb
push
fsubs
sbb
mov
mov
lods
fwait
jecxz
push
jne
mov
or
xchg
cmp
fidivrs
ds
xlat
adc
scas
mov
mov
mov
jb
cmp
ret
pop
lock
xchg
xchg
nop
push
inc
nop
lret
lock
fwait
out
cmp
lds
mov
nop
cwtl
cmp
pushw
shll
jne
xlat
int3
cmpsb
out
mov
adc
inc
or
mov
cs
lea
mov
pop
rorl
add
popa
lods
pcmpgtb
iret
scas
push
xchg
cld
dec
inc
mov
xor
xchg
push
xchg
sub
adc
or
inc
shlb
ret
out
jbe
push
bound
mov
aas
dec
sbb
pop
jo
mov
jb
clc
aaa
or
push
and
ja
mov
and
xor
test
orb
lcall
sbb
bound
dec
outsl
sbb
cld
push
inc
push
leave
rorb
jb
leave
loop
data16
mov
mov
jae
push
push
pop
repz
wbinvd
add
les
insl
xor
sub
adc
addr16
aad
mov
pop
sub
orb
xchg
pop
inc
jbe
adc
cmpsb
imul
adc
pop
aaa
rclb
xchg
ljmp
test
adc
pushf
jae
mov
insl
cltd
cmp
mov
daa
loop
push
xor
and
aad
cwtl
jmp
inc
dec
int
mov
cli
push
notb
xchg
mov
cmp
mov
fadds
push
fisubl
mov
sbb
fcmovbe
add
push
lea
jle
lds
stos
add
and
iret
test
add
ds
jne
out
clc
mov
jmp
jle
ja
push
xchg
fidivrs
inc
insb
arpl
call
and
cli
cmp
idivl
into
addr16
xlat
xchg
dec
xor
pop
imul
mov
shlb
sbbl
aas
add
lret
add
mov
imul
stos
mov
cmp
test
xchg
or
push
icebp
clc
das
push
push
loopne
inc
adc
pop
hlt
xor
jne
xor
rorl
push
jmp
jae
xchg
icebp
sbb
adc
mov
push
stos
jle
ret
lahf
sbb
push
pop
lds
cwtl
aas
inc
insl
stos
lods
mov
andb
js
aad
and
inc
add
push
and
leave
and
push
mov
test
xlat
xor
in
sbb
insl
xchg
jp
lock
mov
mov
daa
cmp
mov
pop
or
mov
inc
inc
xor
es
cmp
mov
push
out
or
pusha
jbe
mov
pop
xchg
sti
pop
repz
das
adc
sysenter
cli
jae
jbe
test
dec
sarb
sub
xchg
das
or
push
dec
xchg
pop
in
lahf
cmc
mov
pop
xchg
push
dec
sub
push
xchg
dec
push
add
repnz
adc
xor
and
test
es
pop
push
ds
cmpsb
push
loopne
jne
adc
cs
push
mov
ret
ret
inc
mov
loope
daa
nop
xchg
xchg
inc
sub
fisubrs
ja
mov
add
ret
jo
fisubrs
sbb
jne
push
add
mov
cmp
cmp
xor
mov
jmp
and
sbb
adc
xchg
pusha
mov
dec
jg
rolb
inc
mov
add
jo
pop
scas
sub
sbb
or
xorb
xchg
mov
test
inc
roll
push
or
pushf
mov
jl
test
inc
dec
or
cld
pop
adc
or
dec
sub
jl
lock
add
pop
pusha
dec
in
jl
pop
cmp
jo
pop
mov
push
bnd
pop
pop
lds
mov
ss
dec
mov
mov
sbb
mov
xchg
sbb
aad
test
dec
push
xchg
sbbl
aam
add
dec
dec
cltd
mov
push
lcall
add
movsb
leave
inc
jbe
lahf
add
outsl
test
dec
mov
ret
mov
xchg
not
mov
cmp
sbb
push
jg
fs
in
mov
fildl
fwait
scas
push
test
jbe
sub
pop
adc
test
test
lea
sbb
lahf
and
cmp
in
mov
push
fucompp
cltd
mov
mov
and
repnz
decb
das
pop
ror
test
or
imul
outsl
push
std
fisttpl
ss
call
mov
int3
add
and
inc
add
or
mov
pushf
fwait
sub
lret
loopne
push
aam
hlt
add
push
cmp
xchg
ja
push
sahf
push
insb
pusha
add
repnz
jne
enter
dec
mov
cmp
js
cs
sub
aaa
call
pusha
xor
fwait
cmp
push
js
mov
insb
lea
roll
fidivrs
adc
stos
cmp
int3
pusha
sbb
adc
push
pop
shll
cltd
jnp
jge
stc
les
xlat
mov
dec
adc
pop
xchg
insl
bound
sbb
or
hlt
mov
cmp
adc
lea
xchg
sbb
imul
xlat
gs
lods
cmpsl
jno
aas
cmp
lds
inc
sbb
fmuls
pushf
inc
jmp
pop
lcall
xchg
clc
rcrl
movsl
ds
pop
dec
lea
dec
jne
daa
or
dec
xor
inc
mov
cmpl
andb
int3
mov
rclb
inc
push
xchg
xchg
out
addr16
mov
les
scas
sahf
inc
scas
pop
and
inc
in
jmp
pop
les
aas
sub
scas
pop
mov
mov
push
mov
mov
or
outsb
rcll
outsl
pop
lret
and
add
sub
test
fwait
push
test
stc
arpl
and
sub
xlat
in
orl
scas
sub
jp
xor
mov
adc
mov
repz
out
push
les
rorb
call
clc
bound
testl
mov
je
jecxz
xchg
cmp
sub
inc
js
inc
inc
and
mov
popa
xchg
shrb
xor
pop
push
jnp
cmp
sub
adc
cltd
sbb
cld
jecxz
out
xchg
ss
leave
add
les
inc
adc
cmc
stos
xchg
pushf
in
push
nop
pop
fisubrs
iret
outsl
hlt
pop
ds
jns
addb
mov
mov
nop
sub
fstps
cmp
hlt
std
push
mov
xor
repz
cmp
ds
adc
cmp
and
push
xchg
fstl
jbe
jno
fimull
out
mov
mov
inc
orb
inc
cmp
cmp
loopne
enter
mov
sub
xchg
pop
add
inc
pop
mov
push
push
inc
scas
xor
push
mull
pop
or
adc
mov
or
adc
adc
push
daa
les
outsl
mov
inc
roll
and
pop
or
popf
mov
jmp
ds
das
and
popf
cmp
out
cmp
jae
sub
xor
loope
jno
fisubrs
sbb
rclb
xor
jb
jge
aas
dec
movsl
sbb
mov
jbe
dec
popl
pop
push
sub
mov
mov
nop
jp
fstl
add
mov
adc
jle
xor
adc
loopne
fnstsw
mov
pop
inc
pop
xchg
je
adc
xchg
stos
push
mov
lahf
cmp
popf
fucomip
or
dec
je
loopne
jb
xor
mov
in
mov
adcb
mov
cmp
xor
outsl
iret
lret
cmovo
inc
xchg
pop
adc
out
movsl
pop
fidivrl
movsb
hlt
mov
aaa
out
pop
mov
rorb
fsqrt
repz
pop
nop
fistps
aad
jae
pop
in
mov
xor
push
pop
adc
icebp
hlt
outsl
inc
push
fisubrs
mov
sti
and
push
lcall
out
pop
push
pop
in
sti
repz
or
out
negb
rcll
addb
mov
or
cmp
push
call
dec
insl
cli
jbe
push
fiadds
addr16
out
cli
flds
outsb
in
aaa
test
hlt
paddd
jno
std
add
mulb
rcl
pop
out
popa
push
adc
pusha
jo
mov
pop
dec
fcoml
and
sbb
cmc
dec
lea
test
stc
ljmp
push
rcrl
mov
dec
fdivr
lds
cmpsb
test
out
xchg
inc
xchg
inc
adc
dec
lods
out
cmp
mov
pop
pop
adc
add
or
mov
jmp
cli
shr
jae
ljmp
inc
jmp
pop
dec
leave
out
outsl
cmpsb
mov
mov
orl
xor
xor
divl
jmp
jecxz
out
jge
outsl
repz
jmp
pop
xor
cmpsl
dec
icebp
adc
adc
cmc
add
in
push
ret
mov
nop
sub
stos
divl
add
out
add
mov
mov
andb
dec
mov
add
pop
je
inc
adc
inc
movsb
mov
notl
aam
mov
enter
pop
subl
ret
push
inc
lret
cmp
call
scas
cmpsb
lea
pop
inc
stos
mov
jle
and
lcall
inc
xor
scas
out
jle
pcmpeqd
jnp
mov
xchg
fcomip
xor
ja
cli
dec
ja
jl
enter
sbb
movsl
push
lds
fwait
fs
orl
jp
int
orb
jno
cmp
mov
in
mov
cs
mov
push
cmp
and
dec
ret
xchg
add
or
mov
xchg
rorb
gs
mov
inc
xor
jecxz
xchg
add
out
inc
push
out
out
aaa
cwtl
jmp
and
scas
popa
xchg
push
add
jle
mov
frstor
stos
cmc
lods
in
jle
xchg
inc
cld
bound
movsb
stos
xchg
outsb
sbb
mov
and
fcompl
movsl
pop
mov
xor
pop
lcall
incl
mov
or
or
push
bound
adc
cmp
and
push
fdivrl
cld
mov
adc
shrl
mov
mov
adc
int3
and
mov
fildll
imul
xor
or
outsl
push
sbb
xor
int3
push
inc
cmpl
push
mov
adc
xchg
pop
sbbb
mov
push
xor
push
stos
and
arpl
pop
mov
mov
xor
lods
cmpb
jg
push
jo
cmp
aaa
jno
lods
xchg
int3
mov
movsb
divb
sub
inc
shl
das
pusha
mov
sbb
xchg
stc
push
and
pop
pop
pop
je
fwait
mov
loopne
jecxz
sarb
imul
jg
sub
adc
shl
insb
addb
test
loope
filds
fimuls
ljmp
nop
pop
sti
fdivrs
or
scas
div
mov
add
mov
jne
inc
fidivrs
or
adc
and
xchg
aad
mov
fwait
aaa
add
int
mov
loope
sub
cmp
jmp
mov
dec
add
xlat
or
or
push
rcrl
lret
lret
pusha
insl
mov
xchg
mov
loopne
sub
test
mov
push
mov
or
addr16
movsl
jno
ja
lock
jns
loop
cmc
xlat
dec
add
movsb
xchg
mov
popf
push
inc
cmpsl
adc
mov
loope
pop
jge
adc
mov
out
sbb
pushf
and
test
outsb
and
and
cmp
cmp
inc
xlat
jg
dec
cs
int
loop
movsb
push
mov
aas
push
xor
insb
mov
pop
imul
adc
and
mov
fnstcw
ret
mov
jmp
dec
mov
inc
xchg
decl
dec
xchg
xor
xor
imul
pop
pop
popa
pop
popf
adc
mov
repz
lods
je
aam
push
sbb
in
push
shl
je
sti
cmp
gs
xor
mov
xchg
pushf
clc
pop
xchg
mov
rolb
iret
negb
iret
cmp
jecxz
xchg
pop
cmove
out
mov
repz
cmp
rolb
mov
xchg
and
ja
cmpsb
ljmp
outsb
sahf
sub
dec
pop
repz
push
xchg
loop
inc
sub
pop
and
fmuls
mov
jecxz
loope
adc
add
jmp
push
sbb
sub
out
mov
jmp
test
hlt
inc
dec
and
push
sbb
push
xor
mov
xchg
lods
mov
pop
xchg
mull
mov
out
rcrl
xchg
xchg
dec
lretw
cmp
fmul
int
jb
testl
mov
inc
sbb
outsl
cmp
jae
pop
mov
sub
dec
repz
pop
jle
cmp
addl
sbb
or
dec
imul
mov
iret
ret
gs
addl
popa
mov
inc
fcoml
repnz
int
aaa
movb
add
xchg
mov
paddd
cli
sub
lock
push
outsl
iret
movsl
xchg
mov
xor
xor
pop
jbe
lods
jmp
sahf
inc
popa
inc
addr16
pusha
cmp
fildll
mov
movsl
sub
xchg
xlat
int3
inc
pushl
xor
inc
inc
sti
es
out
mov
sahf
shrl
sbb
int
push
inc
cmp
aas
sbb
shll
aam
arpl
xchg
imul
dec
nop
and
mov
testb
push
mov
push
sahf
imul
movsl
enter
mov
pop
sti
movsb
and
cmp
jmp
mov
adc
add
ret
sbb
faddl
mov
es
inc
cmp
test
lcall
jmp
sbb
in
jno
enter
sub
scas
xor
xchg
xchg
xchg
scas
fs
in
je
daa
pushf
xchg
repz
sub
iret
mov
cmpsl
or
push
mov
pusha
divl
sub
lahf
les
into
jnp
cmp
mov
xchg
scas
dec
lcall
movsb
lods
in
sti
inc
mov
loope
push
push
sbb
mov
sub
jmp
and
xor
mov
push
shrl
push
fcoml
test
jns
xorl
push
mov
stc
mov
sbb
repnz
pop
push
data16
sahf
add
mov
arpl
xlat
push
int
inc
jmp
shl
fildl
out
movsl
popa
dec
jnp
pop
fwait
jl
inc
mov
loopne
inc
dec
inc
add
dec
cld
cmpsb
sub
and
js
or
popf
shll
rcrb
scas
pop
jmp
dec
jbe
xor
xchg
pop
out
and
cmpsl
pusha
cwtl
and
aas
pop
and
mov
in
jge
xchg
fs
jg
pop
push
lret
in
mov
out
daa
jo
sbbl
mov
nop
and
mov
lcall
insl
out
stos
cli
mov
mov
rcrl
daa
out
sub
gs
aaa
and
pop
rclb
jno
xor
mov
pop
sbb
push
or
js
pop
in
dec
cli
xchg
scas
push
or
sub
mov
mov
add
sti
jb
addr16
push
ficompl
sbb
stos
bound
xlat
adc
pusha
sub
lods
inc
add
addr16
cwtl
cmp
sbb
sub
xor
pop
mov
cmp
ds
mov
mov
int3
add
lahf
loop
ja
pop
or
mov
dec
push
sbb
add
fsubr
vcvttss2si
ret
mov
cmp
pop
pushf
and
jmp
insl
pop
pop
jns
pop
inc
insb
bound
jmp
xchg
mov
jge
iret
inc
insb
add
subl
out
outsb
adc
lret
aam
fsqrt
or
lock
add
hlt
movsl
push
in
call
cmp
cld
mov
movsb
inc
mov
pop
mov
mov
adc
pop
push
aaa
in
jo
cmpl
pop
inc
cwtl
xor
call
cwtl
push
nop
cmp
mov
cmp
push
adc
lock
jo
jo
mov
push
mov
lahf
icebp
call
cmpsl
rcrl
inc
adc
or
fstpt
mov
and
out
das
fdiv
fiaddl
jmp
push
adc
mov
mov
lea
fisttpl
jb
cs
movsb
jecxz
repnz
mov
aaa
cwtl
decl
xchg
ret
mov
mov
jg
adc
loopne
adc
mov
add
fsubl
mov
mov
leave
repz
shll
inc
fwait
sbb
and
mov
jbe
sub
lahf
xor
popa
jno
xchg
push
mov
hlt
sbb
add
and
outsb
outsb
aam
idiv
leave
sbb
pop
lds
xor
mov
mov
or
pop
lea
sub
push
cmp
outsb
dec
jle
mov
cmp
fsubrl
add
mov
xor
sti
jmp
sahf
xor
decl
subl
or
into
xor
ficompl
xchg
cmp
cmc
cmp
or
add
xor
inc
call
mov
mov
sub
fwait
dec
adc
aas
dec
lret
dec
subb
aam
sub
fisubrs
fnstcw
outsl
pop
inc
out
push
outsl
lods
enter
fisttpl
dec
dec
push
bswap
dec
lea
jecxz
pop
inc
adc
loope
mov
adc
mov
jbe
dec
jl
mov
mov
cs
xchg
jne
adc
dec
out
sub
xchg
stc
pop
es
inc
push
push
test
and
mov
out
test
xchg
jno
out
mov
sub
and
jne
in
add
mov
and
mov
mov
add
scas
dec
incl
xchg
loopne
push
pop
je
call
ret
push
dec
scas
or
shll
sbb
dec
or
adc
mov
imul
daa
mov
jns
pop
jb
or
cli
pop
mov
sbb
mov
jp
xlat
inc
dec
jb
pushf
dec
shll
push
jmp
inc
jae
js
test
fcmovu
dec
push
mov
adc
out
dec
adc
and
xchg
sub
mov
aam
add
popf
aad
pushf
je,pt
add
or
into
sub
sbb
shrb
mov
faddl
lret
mov
push
sub
jle
fldcw
mov
int3
push
fs
xor
pop
rcrb
je
sbb
dec
xchg
sbb
or
xlat
in
xchg
in
dec
jae
or
mov
or
mov
push
sbb
jnp
push
add
clc
cmp
fidivrl
insb
ret
inc
divb
ds
cwtl
jge
inc
jle
cmp
push
cwtl
pop
push
adc
mov
dec
in
adc
outsb
cmp
sbb
inc
insl
ficoml
call
jge
mov
das
inc
mov
dec
je
loopne
pop
les
ja
fiaddl
stos
test
xlat
ret
jbe
out
xchg
pop
or
pop
push
das
dec
sahf
cmp
lock
nop/reserved
cmp
lea
repz
xchg
mov
or
cwtl
push
dec
popf
outsb
jns
mov
mov
out
loope
aad
mov
mov
call
inc
sbb
push
ja
sbb
pop
dec
cwtl
test
sub
bound
mov
mov
int
push
dec
dec
dec
add
addr16
inc
push
dec
ds
cmp
imulb
sar
in
out
fdivs
fwait
lcall
sti
idivl
add
adc
sbb
pushf
sbb
cmp
push
adc
nop
aam
jmp
sbb
push
pop
loopne
dec
popf
into
shlb
add
adc
push
sbbl
hlt
pushl
pop
push
repnz
sub
push
insl
cmp
xor
push
or
mov
sbb
repz
mov
test
xchg
call
insl
cli
mov
xor
es
adc
pop
jmp
fadd
add
movsl
mov
stos
or
xchg
inc
cmp
popa
dec
jne
xlat
cmp
sub
lods
jo
or
mov
jle
cmp
jmp
test
outsb
insl
fidivs
ds
nop
mov
jge
ja
in
inc
jns
push
ds
inc
sarl
loope
pop
pushf
mov
xchg
ljmp
lcall
seta
ljmp
les
adc
cld
push
lret
mov
jae
int
mov
inc
hlt
lods
sub
pop
gs
mov
fisttpl
mov
sub
xchg
dec
dec
add
test
and
or
xchg
test
jle
dec
call
int3
jmp
inc
push
add
jl
mov
jp
mov
clc
lahf
pop
out
sbb
pushf
lods
jg
fimuls
and
add
lret
push
imul
je
adc
icebp
jnp
sbb
mov
push
cmp
and
xchg
lods
adc
into
pop
addr16
inc
iret
scas
pop
call
mov
lea
xor
mov
mov
les
pop
out
mov
or
mov
pop
adc
or
pop
decb
jmp
out
aam
std
out
mov
pop
mov
sub
roll
in
ljmp
cli
jecxz
mov
in
ficompl
pusha
in
js
add
out
shrb
mov
mov
shrl
jecxz
mov
inc
cs
mov
cmpsl
and
push
gs
sbbl
and
fiadds
ret
mov
or
repnz
jg
push
inc
mov
add
enterw
mov
sbb
cltd
inc
dec
mov
push
outsb
add
popa
xor
xor
ja
xor
jno
fwait
cmp
jo
test
mov
lahf
pusha
sbbb
imul
mov
je
testl
js
stos
lea
inc
callw
shrl
adc
mov
mov
shl
outsl
enter
aaa
aas
cmpsl
jo
and
insb
inc
or
xorb
movsl
inc
dec
xchg
and
mov
test
xor
mov
mov
inc
in
ss
js
jns
inc
mov
popf
pop
pop
scas
sbb
mov
sbb
loope
mov
pop
add
sbb
mov
xor
cmp
dec
push
ror
jge
cmpsb
test
out
jmp
enter
mov
test
int
std
fnstsw
sub
add
add
mov
mov
inc
sti
pop
clc
xlat
cmp
mov
sub
jae
or
into
jns
lock
lret
dec
dec
and
jb
xor
in
mov
faddp
adc
rcrl
adc
ja
pop
cmp
lods
pop
cmc
sbb
mov
dec
cmp
jle
rol
mov
inc
cli
mov
pop
mov
fmul
addr16
push
mov
mov
lcall
push
sarb
xor
decb
pop
sbb
sub
lahf
mov
shll
jge
lods
mov
int
movsl
nop
daa
out
stos
jge
jecxz
je
es
jno
scas
int
adc
adcl
ljmp
rclb
or
inc
call
shrl
pop
inc
lods
xor
in
inc
push
mov
mov
mov
dec
mov
pop
or
pop
dec
push
test
xlat
xor
loopne
sbb
jle
dec
dec
lahf
clc
popf
or
imul
mov
out
repz
mov
mov
pop
mov
hlt
fisttpl
testl
and
sub
dec
movsb
clc
dec
xor
fldenv
aad
mov
sbb
sub
movsl
out
push
jecxz
loope
mov
jb
mov
and
out
and
jns
imul
mov
fistps
cmp
popa
jo
mov
ret
loopne
pop
enter
fstpt
jge
xchg
leave
xor
jg
nop
sbbl
dec
loopne
data16
xlat
fildl
mov
mov
movsb
xor
pop
jle
pushl
es
jbe
jmp
jns
mov
jne
add
aad
sahf
add
sbb
mov
jae
mov
jmp
and
test
add
and
aam
sub
cmpsb
mov
sub
xchg
xchg
sub
adc
push
inc
mov
shl
rcrb
aam
mov
inc
xchg
cmpsb
sub
jge
jl
ret
loop
xchg
dec
cmc
mov
orb
cmpsl
out
xorb
push
xor
push
push
pop
jecxz
lret
push
pop
sub
xchg
ljmp
mov
inc
and
cmpsb
aam
xlat
push
mov
pop
mov
into
pop
lods
mov
xor
mov
xor
or
adc
movsl
xchg
mov
mov
in
jmp
sar
dec
xchg
mov
fstps
mov
sbb
or
cwtl
fnstenv
mov
push
fsts
mov
ja
jae
iret
inc
dec
out
sbb
jg
inc
xchg
jno
out
jecxz
jmp
out
mov
xor
into
adc
lds
mov
std
test
dec
or
nop
pop
jbe
int3
mov
nop
movsb
clc
and
inc
movsl
int3
inc
leave
jmp
clc
cld
test
ja
mov
orb
adc
jno
pop
adc
jmp
faddp
pop
jnp
shlb
pop
jmp
adc
pop
mov
ss
xchg
cmc
vcomiss
push
loop
jl
outsl
lods
scas
enter
mov
xor
cwtl
pop
or
jge
fdiv
clc
hlt
pop
sahf
out
hlt
nop
es
cmp
into
xlat
in
xchg
or
aas
lods
sub
fs
cld
jne
shr
mov
cmp
inc
dec
clc
jo
jp
cmp
ja
inc
popf
pop
push
jmp
jmp
mulb
adc
sbb
bound
mov
pop
push
jmp
adc
mov
xchg
pop
push
jns
jmp
add
mov
push
data16
cltd
inc
push
test
sbb
mov
sti
push
mov
mov
aam
popf
jns
gs
inc
ss
add
mov
jle
xchg
cmp
pop
cwtl
hlt
and
pop
shrb
sbb
or
outsl
cltd
adc
mov
fistl
and
push
pusha
sbb
shll
shrb
fstl
dec
les
xchg
scas
outsl
mov
sti
adc
imulb
mov
mov
jg
jo
icebp
scas
test
pushf
in
aad
sahf
test
and
in
lea
jle
js
leave
inc
mov
fcomip
scas
shlb
adc
sti
sarl
ljmp
sbb
lret
mov
mov
aad
mov
sbb
pop
sbb
adc
adc
stos
sub
call
cmp
leave
and
mov
inc
dec
das
xor
cmp
mov
jge
sahf
repnz
cmp
aas
push
test
or
fidivs
dec
jb
and
loopne
push
jecxz
test
pop
lret
lsl
rolb
cs
out
push
xor
in
push
das
mov
mov
add
lcall
mov
add
mov
cmp
lahf
aas
mov
daa
popa
shll
xor
aam
insl
mov
push
cmp
in
xchg
jecxz
push
call
xchg
sub
and
insl
shrb
popl
gs
call
sbb
sub
push
jnp
jecxz
mov
nop
or
mov
jns
jo
xchg
inc
mov
inc
mov
pop
add
jb
lcall
daa
sub
cs
pop
cmpsb
pop
pop
jge
jmp
int
pop
cli
push
xchg
ja
out
das
movsl
xchg
jge
push
push
loop
pop
mov
pop
pop
iret
imulb
xor
lret
imul
sub
push
aam
jbe
imul
adc
mov
in
push
sbb
lds
lods
lock
mov
ja
xor
in
mov
sub
jnp
add
aaa
mov
mov
push
and
push
sbb
cmp
xor
jmp
mov
sbb
mov
adc
in
xchg
push
jns
into
pop
arpl
popf
xchg
outsl
in
mov
xor
popa
dec
push
inc
outsb
adc
jno
js
fldenv
lea
hlt
mov
lock
test
cltd
dec
pop
jae
sbb
daa
jge
lods
test
je
sbb
mov
adc
icebp
xchg
jne
lahf
pop
push
pusha
jl
lcall
mov
jp
xchg
mov
cs
mov
inc
sbb
mov
sbb
aam
cli
or
add
push
cmp
pop
xor
rclb
insb
leave
insb
pop
mov
cmpsb
pop
xor
and
sub
dec
sub
lock
or
sbb
test
stc
rcrb
ret
loop
mov
mov
lea
mov
rcrb
dec
xchg
testb
xchg
scas
dec
mov
adc
mov
inc
xchg
inc
cvtps2pd
cmpsl
jecxz
ret
lret
fimull
nop
dec
in
movsl
ja
inc
scas
mov
push
adc
xchg
push
pop
hlt
xchg
jo
scas
les
daa
sbb
aam
mov
fxam
out
lock
xchg
add
iret
outsl
mov
std
xor
mov
sbb
inc
jb
adc
inc
xor
jae
pop
imul
data16
icebp
mov
leave
push
es
mov
xlat
stos
insl
inc
dec
cmpsl
stos
stos
movsb
fucomp
cmp
adc
push
iret
fimuls
mov
loop
shl
xor
dec
dec
sbb
cmp
ds
and
jl
xor
xchg
ds
lret
test
xor
aam
xor
pop
xor
pop
dec
jp
aam
std
cwtl
movsb
enter
cltd
add
mov
movsb
movsb
pop
cmp
or
jg
fs
sbb
dec
or
cmp
mov
xchg
mov
pop
xchg
pop
enter
sti
daa
or
sbb
cmpsl
sub
dec
push
xorl
sbb
negl
leave
adc
dec
dec
shll
js
pop
test
xlat
push
fnstenv
sbb
stos
cmc
cli
mov
faddl
sti
mov
insl
dec
pop
mov
mov
xor
mov
aam
jb
add
cld
addr16
adc
inc
add
pop
adc
dec
cmp
movsb
in
push
and
clc
hlt
scas
cltd
sub
ret
pop
inc
movsl
push
mov
mov
push
xchg
fmul
pop
pop
popa
xlat
mov
jle
je
ja
ret
int3
sub
sahf
fwait
loop
dec
pop
add
nop
adc
out
in
lds
mov
mov
adcl
sub
iret
mov
test
jns
shrb
outsl
js
fistpll
dec
inc
filds
cmpsl
sub
add
jo
test
stc
lds
shrl
mov
mov
mov
in
cltd
and
xor
repnz
adc
in
dec
sub
pop
jno
mov
push
xchg
imul
pop
adc
loop
test
jnp
scas
pop
mov
icebp
push
sub
sub
test
cld
jo
push
ss
jnp
inc
loop
jbe
or
jns
cmpsb
cmp
lret
pop
ss
dec
pop
adc
mov
jp,pt
fwait
cmp
mov
lahf
and
xchg
push
sbb
pop
push
outsl
xchg
mov
add
sub
enter
fwait
mov
adc
xchg
cmp
leave
and
rcll
hlt
mov
in
lds
xchg
jnp
mov
aaa
dec
dec
ds
add
mov
xchg
push
aad
popf
mov
push
or
adc
scas
rcr
ljmp
sbb
hlt
scas
lea
add
pushf
push
vmovaps
popf
lcallw
jns
mov
or
call
mov
sub
insl
mov
mov
pop
rcr
push
addl
add
cmp
stos
outsb
push
lret
pop
into
cmpl
add
dec
xor
pop
sub
xor
adc
xchg
ljmpw
push
cmpsb
fs
adc
lahf
mov
lret
push
dec
lock
sbb
and
dec
jno
push
sbb
or
jmp
pushf
call
xchg
jbe
lahf
test
into
push
push
mov
icebp
push
sbb
jge
popf
xor
mov
loope
and
xorb
xchg
sbb
fs
push
pop
out
cld
shrl
push
xor
hlt
and
arpl
push
or
push
icebp
cmpl
sbb
inc
mov
mov
lea
ret
sub
in
and
cmp
loop
adc
in
cmpsl
xchg
xor
mov
lea
and
ffreep
jnp
push
cltd
xchg
stos
cmc
fwait
cs
xchg
mov
cwtl
push
mov
lods
mov
mov
add
lods
mov
sbb
das
xchg
dec
outsb
cld
shrl
les
scas
insl
gs
mov
sub
aad
pop
mov
jge
cmpsb
mov
mov
sbb
lret
shlb
pop
sub
xchg
mov
inc
test
aaa
aam
into
popa
lret
mov
inc
ja
movsb
cmp
sub
iret
test
and
cmp
es
jae
push
adc
add
aam
cmc
flds
dec
mov
pop
or
pop
fmull
jne
mov
outsl
mov
jecxz
jae
xchg
xchg
pop
ror
cmpsb
std
xchg
shrb
lahf
push
mov
sub
repz
adc
and
leave
rclb
outsb
mov
flds
and
je
mov
addr16
mov
popa
aaa
or
and
cltd
repz
cltd
push
mov
dec
fdivs
cmp
in
scas
sbb
cmp
inc
xor
subl
pusha
es
sub
aam
test
iret
clc
in
sbb
mov
cs
cmpl
jle
and
int3
and
mov
ror
mov
pop
fists
inc
mov
test
add
decl
sub
std
clc
pop
mov
test
sub
cmp
repnz
inc
ss
and
jg
jle
out
mov
and
cld
or
cli
xor
inc
add
scas
insb
leave
test
pop
sbb
jmp
cld
xchg
jmp
push
pop
imulb
xchg
xchg
movsb
push
pop
add
jbe
inc
mov
xchg
push
ja
jne
cmpsl
pop
xchg
mov
movd
icebp
mov
aas
ds
jnp
mov
shlb
xchg
stos
popa
push
pop
xorl
adc
jp
sub
xor
scas
fsubs
lcall
addr16
adc
lahf
xor
push
add
sub
and
xchg
ret
mov
mov
jno
push
pop
fsubrs
cmp
nop
sbb
and
inc
fidivrs
insb
hlt
leave
popa
pushf
add
jns
cli
lea
mov
mov
dec
adc
jno
test
std
call
test
xor
sbb
outsb
pusha
insl
jb
enter
out
mov
mov
jno
mov
mov
test
pop
dec
pop
test
dec
mov
inc
or
not
or
mov
add
iret
paddsb
mov
and
into
inc
jl
lock
add
inc
adc
test
xor
arpl
addb
imul
mov
add
cmp
push
xor
sub
xchg
js
lahf
mov
pop
movsb
pop
arpl
movsb
mov
aaa
add
loopne
sbb
je
mov
lahf
jo
or
inc
xchg
dec
sbb
test
or
sub
ja
inc
mov
mov
jne
rorb
and
hlt
mov
add
adc
pushl
ds
fsubrl
mov
pushf
mov
push
pop
scas
sbb
sahf
test
mov
sbb
sbb
aad
mov
inc
adc
push
cmp
sbb
bound
test
pushf
lea
mov
aas
mov
inc
imul
mov
mov
sub
sbb
add
mov
pop
inc
jbe
loopne
movsl
inc
mov
jnp
int
dec
daa
sub
lcall
xchg
sub
mov
push
push
sub
aad
mov
data16
daa
test
mov
push
iret
jne
sahf
jge
jle
rcll
mov
dec
pop
test
xor
cld
pop
mov
xchg
xchg
imul
add
push
xor
incb
pop
sahf
mov
push
sub
jl
add
hlt
leave
push
outsl
ljmp
in
aam
fstps
xor
push
adc
scas
arpl
adc
xchg
and
inc
js
xor
insl
cmpsl
adcl
sbb
jnp
cmp
fnsave
push
xor
adc
loope
pop
daa
sub
cmp
cs
or
or
dec
lcall
scas
mov
dec
iret
daa
jmp
or
in
or
pop
cs
testl
inc
mov
shrl
cmpl
sbb
jl
cmp
loop
enter
fadds
fwait
cs
push
fbstp
scas
mov
jns
pop
mov
jg
push
xchg
xchg
leave
imul
mov
cmp
insl
sub
pop
jae,pn
jo
pop
inc
divb
cmpb
and
fcmovnb
or
dec
adc
arpl
pop
outsb
and
xlat
lea
sbb
sub
add
adc
push
sub
jmp
dec
ljmp
subb
push
dec
flds
xor
push
idiv
sahf
cltd
sbb
cmpb
out
mov
pop
ret
add
sub
repz
cmp
xor
icebp
jne
xchg
cmp
fstps
xchg
xchg
push
mov
dec
xchg
test
cmp
mov
dec
jb
push
stc
cmp
push
popa
jne
add
dec
xchg
sub
jb
mov
cs
or
lods
push
push
and
iret
idivb
jo
icebp
inc
mov
movsb
jl
sbb
mov
jns
add
shlb
push
ret
cmove
xorb
dec
enter
add
jnp
jb
jl
mov
mov
hlt
call
scas
in
xchg
insb
xchg
cmpsl
mov
arpl
inc
sbb
jae
and
push
nop
lds
sub
mov
sub
pop
fbld
decb
ljmp
jo
in
adc
dec
clc
decb
fidivrl
cmpsb
jo
mov
push
jp
sub
or
js
nop
push
xor
add
cmp
loopne
or
dec
ja
sub
cs
push
jge
push
push
add
popf
mov
mov
cli
int
xchg
adc
inc
and
cmc
jo
xor
inc
mov
dec
inc
jg
xchg
xchg
into
sub
jne
in
sub
sub
sub
dec
mov
pop
shrl
cmpsl
fisubl
pop
xor
add
jmp
insb
cli
sbb
in
fcomps
jbe
popa
pop
cltd
inc
sub
shlb
cmp
in
aas
inc
sub
push
mov
and
addb
sub
rclb
test
popa
stos
fdivrs
int3
mov
outsb
sub
jb
pop
mov
add
shl
imul
mov
lods
pop
push
mov
add
push
or
push
xchg
sub
push
clc
push
movsb
ja
adc
out
movsb
jecxz
std
xchg
icebp
lea
sbb
sbb
pop
js
out
hlt
movsb
and
jle
jge
loopne
and
mov
push
cmp
jae
mov
stos
cmp
test
sbb
mov
jl
imul
xor
in
fiadds
data16
mov
and
loop
les
sbbl
mov
mov
pop
outsb
popa
inc
push
cmp
and
imul
ss
and
add
sbb
or
jnp
int3
push
mov
repnz
xor
jp
scas
pusha
fstpl
xchg
leave
inc
lahf
mov
sub
icebp
dec
fnstenv
loop
leave
imul
enter
jb
rcr
adc
cmc
and
inc
ds
cltd
dec
stos
mov
push
mov
js
xchg
cmpsb
lods
mov
push
mov
cmp
push
pop
adc
sub
bound
faddl
mov
sub
imul
cmpsb
bound
cmpsl
mov
int
insb
or
push
sti
push
jle
mov
or
lds
mov
xor
jb
jno
mov
inc
imul
sub
push
mov
push
leave
sbb
and
movsb
cwtl
pop
dec
lret
dec
aaa
jbe
pop
scas
out
xchg
into
jnp
xchg
bound
push
inc
nop
add
jecxz
call
xor
or
daa
adc
into
jno
cmc
rcr
iret
push
in
cltd
xchg
mov
fstl
pushf
call
movsl
out
push
nop
cmp
push
loop
push
xor
mov
add
sub
insl
adc
dec
mov
movsb
xor
mov
incb
add
repz
das
stos
push
add
in
xorb
sbb
cmc
sbb
idivl
sbb
push
aas
and
dec
jmp
add
cltd
ret
out
or
add
sub
cmp
inc
sbb
xor
adc
mov
add
in
sahf
dec
mov
stos
movsb
stc
dec
inc
insl
insl
imul
mov
mov
insb
sub
jle
inc
outsl
fsubs
call
sub
sbb
inc
cmpsb
cmp
push
ljmp
mov
out
data16
or
enter
imul
or
repnz
scas
movups
push
pop
and
faddl
faddl
jne
xchg
jg
mov
xor
and
je
push
shll
push
outsl
js
dec
mov
fists
fwait
pusha
gs
push
xlat
jb
fisttps
xor
cltd
aad
lds
or
inc
inc
jp
test
rcrb
and
add
cwtl
pop
sub
mov
int3
or
and
in
add
jo
push
sub
enter
or
mov
sub
stos
jmp
ret
dec
xchg
or
andb
xchg
sub
inc
add
inc
pushf
vpcmpgtb
pop
int
dec
inc
movsl
push
clc
imulb
sbb
mov
in
and
mov
dec
les
dec
cmc
lcall
adc
adc
rolb
dec
push
enter
jge
cltd
pop
xacquire
xor
sub
lahf
ret
jg
xchg
sub
inc
mov
pop
ja
imul
ds
pop
mov
push
sbb
dec
jecxz
xchg
repnz
cld
les
sbb
push
push
and
mov
out
das
and
sbb
cmp
xor
dec
dec
jmp
adc
adc
sub
fisubrs
push
xchg
mov
movsl
pop
jmp
lret
sub
sub
lods
popf
lea
lods
or
sti
lret
jle
cwtl
push
aam
xor
sahf
jg
mov
out
aas
mov
inc
cvtps2pd
cli
dec
mov
mov
push
lods
aaa
ds
shr
daa
xchg
jo
test
jae
cwtl
repz
jne
js
les
pop
fadd
das
es
stc
jbe
mov
int
in
enter
push
jae
xchg
movsl
inc
inc
mov
mov
out
push
inc
pop
sub
subb
test
hlt
andl
out
and
pop
and
sub
addl
fnstsw
xchg
xchg
jo
bound
jmp
adc
ja
add
inc
fldl
push
inc
mov
icebp
mov
add
cmp
test
js
fnstcw
and
fbld
push
icebp
mov
test
mov
jg
outsb
rol
xlat
mov
sahf
adc
jge
dec
pop
into
and
sub
add
push
pop
repz
fistpl
xor
mov
test
test
iret
enter
rdmsr
dec
cmpsb
movsb
scas
sbb
sahf
cmc
movsl
aaa
and
mov
mov
or
sub
sub
xchg
jns
dec
xorl
mov
imul
xchg
push
out
out
and
pushf
scas
addps
dec
outsl
fcmovbe
xchg
xchg
ja
xchg
pop
sbb
inc
call
fistpl
test
sub
push
xor
pop
push
cwtl
int3
int
outsl
cmp
loop
push
cmpsb
and
or
fdivs
xchg
cltd
sarb
adc
aam
lods
stc
shl
dec
mov
lods
pop
inc
inc
push
ja
movsb
inc
in
cli
pop
push
cltd
jl
stos
pop
inc
add
dec
jne
push
push
push
adc
test
mov
nop
pop
sbb
jno
or
xlat
out
je
std
push
pop
fildll
push
xchg
loopne
loop
sbb
outsb
mov
inc
fldenv
push
lods
sahf
insb
mov
test
lret
and
movsb
popa
sbb
jmp
xor
js
cmp
mov
cmp
je
imul
cmp
loop,pn
sub
sub
fidivl
mov
and
fucomip
stos
dec
fld
mov
mov
lock
dec
dec
mov
mov
movsl
cli
mov
add
sbb
data16
cmp
out
out
push
mov
push
loopne
xlat
mov
push
jmp
daa
test
dec
dec
cmp
xchg
add
jge
cwtl
xchg
push
or
sbb
and
icebp
mov
mov
push
push
sbb
leave
mov
fadds
stos
lods
or
loope
fisttpll
testb
popf
pop
in
pushf
adcl
pop
inc
lods
dec
jecxz
std
xchg
outsb
loope
pop
je,pn
jnp
mov
add
iret
or
lods
mov
push
imul
lods
push
repnz
jmp
addl
add
sti
in
mov
fld
nop
dec
sarl
pop
stos
jnp
bound
add
and
rorl
jno
dec
push
movsb
jno
push
jno
movsl
sbb
mov
add
mov
imul
roll
sbb
xor
jmp
xlat
mov
jmp
dec
scas
fsubl
scas
inc
in
jmp
xlat
xor
xchg
fs
rcll
pop
mov
push
ss
je
ja
gs
jp
xor
or
xchg
push
repnz
sub
xchg
imul
xchg
xchg
dec
imul
icebp
out
mov
out
and
call
xor
cli
sahf
mov
imul
lret
addl
in
push
enter
stos
mov
sti
jne
inc
mov
push
dec
cmpsl
lahf
cmp
fstpl
ret
enter
adc
stos
sbb
sti
jb
xchg
aaa
push
pusha
movsb
mov
orl
adc
xor
je
js
and
imulb
inc
add
or
fistpl
jecxz
pop
pop
rorb
and
push
ret
push
add
adc
imul
daa
lahf
xor
stos
cld
cld
jg
loopne
push
icebp
test
sbb
pop
jp
pop
jle
cmp
adc
jbe
iret
test
aam
xor
aam
ja
test
push
and
mov
ret
roll
mov
cmp
jl
mov
inc
push
jmp
pusha
mov
jecxz
stos
cld
stos
loope
cmp
leave
scas
sbb
inc
xchg
rcr
pop
jns
push
imul
adc
addr16
jns
lds
imul
add
add
mul
cmp
push
xchg
inc
repz
xor
pop
movsl
add
fildll
aas
sub
cmpl
pop
mov
push
push
cmpsb
mov
jmp
push
push
and
push
mov
xor
mov
movsb
aad
mov
ss
sahf
into
mov
adc
add
mov
inc
js
sbb
pop
adc
fistpl
or
sbb
int3
cmp
xor
jmp
adc
mov
sub
push
stos
es
daa
and
jge
xchg
push
jbe
pushl
sbb
xor
jge,pt
cmpsb
push
mov
ljmp
test
out
jns
es
das
mov
not
sbb
jne
mov
cmc
fistpl
inc
mov
ficoms
das
jnp
dec
jnp
imul
sub
jb
and
shlb
out
aaa
shl
mov
scas
je
sbb
cs
jnp
lea
repz
mov
not
mov
mov
mov
push
dec
ss
loope
inc
pushf
ja
jge
sub
xor
fwait
popl
pop
add
stos
ret
pop
lock
add
adc
mov
ret
jnp
add
idivb
fsubs
cmp
adcb
dec
orl
or
cltd
cwtl
mov
cmpsl
xchg
stc
fcmovb
adc
sbb
add
and
test
test
ret
mov
inc
ficomps
leave
addr16
pop
push
pop
pop
mov
in
pop
data16
mov
sbb
js
lahf
inc
jns
std
jl
mov
sbb
jmp
jg
push
push
xchg
lcall
lahf
sbb
dec
or
push
in
inc
mov
mov
mov
mov
fidivrs
sbb
repnz
adc
or
imul
in
push
jae
pop
inc
sub
movsb
add
mov
mov
xchg
pop
mov
cmp
push
mov
xchg
test
mov
and
scas
inc
dec
in
pop
gs
cmc
fdivp
xchg
add
std
push
cmpsb
mov
insl
stc
adc
fucom
gs
mov
pop
in
mov
xchg
les
xacquire
mov
mov
loop
mov
or
mov
jne
push
orb
rorb
mov
adc
xchg
outsl
mov
lcall
out
xor
mov
cmpsb
nop
lods
inc
and
pop
or
dec
jle
mov
ud2
lea
jb
mov
mov
adc
mov
iret
pushf
cmpsb
imul
push
xchg
push
sti
das
dec
and
push
cmp
ja
xor
mov
push
jbe
repz
out
lds
dec
pop
arpl
sub
push
stos
cmc
int
mov
cmp
mov
push
int3
cs
jg
int3
dec
mov
aas
out
int
fstpt
addl
mov
xor
test
fs
inc
sub
jmp
test
popf
adcb
mov
cli
pmaxsw
into
cmpsl
mov
cmc
or
mov
mov
int3
imul
arpl
test
mov
xchg
stos
aaa
sarb
jmp
sub
push
clc
xchg
or
repz
pusha
fdivrs
insl
idivl
inc
xchg
out
insl
xorb
repz
or
pop
mov
cmpsb
repz
push
icebp
rclb
mov
xlat
mov
stc
jae
in
movsl
icebp
cmp
frstor
push
jno
cmp
push
xchg
xchg
push
xchg
add
cmpsb
add
cmp
jecxz
jg
je
out
push
out
pop
mov
addr16
dec
enter
stos
sbb
mov
ds
mov
out
cli
mov
outsl
ret
fwait
xchg
in
js
lds
leave
in
dec
push
push
push
addl
into
sbb
insb
mov
ljmp
ror
in
imulb
mov
lods
push
or
lret
and
cli
sub
inc
std
fmull
jbe
test
int3
cmc
cmp
or
sbb
xor
sbb
mov
xor
aas
shr
adc
and
clc
jno
out
jns
lahf
jmp
insl
jle
xor
aas
ret
jo
popa
sub
aaa
in
dec
push
push
adc
outsb
jns
sub
call
ljmp
ds
lds
into
mov
jb
call
jle
movsb
jae
push
fidivrl
mov
mov
hlt
or
push
add
mov
in
and
jbe
movsl
mov
cltd
int3
inc
pop
ss
iret
imul
inc
fs
data16
push
pop
and
es
in
mov
testl
aad
lock
mov
pusha
jae
aaa
in
or
and
int
sub
shlb
pop
pop
roll
enter
out
mov
popa
mov
cmp
and
lds
xchg
fisubrl
loope
mov
mov
pop
cli
pop
inc
pushf
ss
cmp
fsts
xchg
adc
mov
js
nop
bound
mov
mov
mov
jge
xor
push
outsb
cli
cmp
pop
xor
outsb
cmp
insl
cltd
insl
dec
testb
sarl
mov
or
gs
lret
adc
sbbb
cvtdq2ps
imul
sbb
pop
push
push
es
inc
sbb
add
movsl
imul
jnp
mov
fwait
push
lods
ja
mov
cmp
dec
ja
cli
es
mov
js
dec
dec
rcl
call
andb
scas
mov
je
xchg
es
jle
pusha
gs
sbb
addr16
vpmuludq
popa
je
pop
imul
sbb
mov
inc
mov
or
dec
push
shrl
jge
es
shlb
je
inc
loope
in
fsubrs
jle
shl
sti
dec
in
mov
movsb
mov
dec
jp
add
push
xchg
add
mov
incl
xor
push
aam
les
ficompl
xchg
jmp
mov
scas
add
out
outsl
mov
lret
rcr
lds
outsl
pop
pop
roll
test
xchg
mov
mov
lret
push
add
xchg
push
pop
add
js
divb
out
push
mov
mov
jle
enter
xchg
out
std
lcall
repnz
fcos
aaa
stos
inc
js
daa
out
idivb
mov
dec
outsb
dec
push
ja
lods
stc
push
push
imul
fldcw
xor
pop
xor
mov
stos
jbe
push
dec
cmpsb
add
mov
cmp
mov
xchg
pusha
xor
jmp
rcrb
icebp
lods
ret
add
push
jmp
adc
jns
imul
insl
cwtl
pop
jl
out
and
sub
xchg
xor
mov
leave
push
adc
dec
xchg
movsl
jae
inc
xchg
sbb
mov
mov
imul
mov
leave
mov
xchg
pop
push
xor
fistpll
shrb
jg
or
or
shlb
and
xchg
xchg
insb
mov
mov
repnz
jg
shlb
xor
or
imul
in
cmpsb
insb
mov
out
out
aad
cmc
mov
fildl
add
mov
popf
mov
dec
push
adc
fisubs
decb
and
pop
jp
xor
mov
stc
mov
pop
movsb
mov
sbb
loopne
dec
es
js
fs
mov
xor
mov
push
mov
push
rcrl
mov
push
sahf
stos
push
jbe
xor
ficoml
sbb
pop
cmc
xchg
inc
mov
sti
stos
mov
mov
jge
fbstp
adc
gs
hlt
sbb
or
fisttps
sub
dec
lahf
push
sar
sub
mov
mov
daa
adc
fucomi
mov
sub
rcll
push
leave
clc
mov
sahf
dec
sub
push
inc
shr
test
jl
inc
std
mov
cs
enter
fdivrp
mov
dec
cli
jb
movsl
or
sbb
lret
and
rcr
mov
jp
not
jns
inc
mov
adc
mov
jmp
cmp
mov
addr16
ljmp
pop
and
andl
add
popa
sub
sarb
mov
add
adc
pushf
push
cltd
test
stos
les
fs
dec
add
mov
push
fsubl
jo
stc
clc
mov
mov
sbb
leave
dec
push
maxps
add
movb
add
mov
mov
jmp
mov
adc
sbb
cmp
mov
rcll
call
call
cmp
lock
out
sti
push
movsl
inc
aad
and
gs
lods
and
scas
cwtl
ds
pop
incl
and
es
jo
adc
or
std
aad
leave
fisttps
xor
jo
testl
jecxz
pop
fimull
gs
xor
fdivrl
adc
gs
or
into
push
scas
push
xor
mov
jp
add
inc
stos
mov
and
cs
mov
pop
das
push
mov
xor
mov
dec
dec
xchg
sub
sbb
jb
adc
daa
xchg
notb
xchg
mov
jns,pt
movsl
scas
or
inc
stos
mov
mov
push
in
in
stos
mov
push
dec
mov
pop
push
add
inc
inc
add
rclb
fidivs
mov
inc
push
lret
xor
pop
xchg
pop
call
and
loope
sti
inc
ljmp
xchg
mov
xlat
mov
mov
scas
xchg
popa
xlat
gs
ror
inc
sti
in
cmp
sarb
inc
fsubrs
dec
rcrb
scas
mov
out
mov
loopne
jno
mov
pushf
rol
mov
or
insb
pop
and
adc
mov
filds
mov
shll
pop
add
jl
push
mov
add
insl
loopne
xchg
data16
shll
sub
jb
add
adc
loopne
std
inc
imul
out
pop
mov
sbb
sub
mov
scas
loop
push
out
setl
lds
cmpsb
or
fldcw
mov
dec
out
xor
xchg
jb
jp
pop
inc
jmp
ficompl
imul
sbb
sub
mov
aaa
aad
js
jne
xchg
sbb
test
out
add
aad
jmp
insb
imul
in
test
aam
shl
cmp
into
inc
xchg
std
stc
in
outsl
ret
xchg
stos
add
ret
xor
in
push
lcall
push
jge
leave
cmpl
cld
lods
cmpsb
lcall
aad
loopne
stc
arpl
mov
sbb
das
mov
pop
lods
sahf
xor
cmp
shlb
mov
call
xchg
dec
xchg
loopne
dec
ret
sbb
out
sub
sub
jg
stos
les
mov
mov
jae
int3
stc
fisubrs
xlat
in
and
cmp
scas
in
loope
add
mov
dec
xor
dec
push
scas
es
in
dec
pop
shl
and
rclb
add
repnz
mov
sti
int3
bound
add
shrl
andb
push
data16
lret
pop
divl
push
mov
fsubr
rorb
push
mov
out
add
or
adc
repnz
pop
fwait
and
out
or
mov
inc
lods
mov
rolb
mov
js
xor
clc
iret
push
call
fidivrs
js
sub
pop
rcrl
mov
or
adc
xchg
ret
data16
in
imul
lods
mov
push
data16
pushf
cli
nop
mov
nop
xchg
and
aam
pop
cmp
jno
mov
idiv
pop
mull
xchg
sbb
ret
mov
shlb
adc
xchg
xchg
ljmp
js
jge
mov
inc
lods
cmp
imulb
add
mov
popf
inc
jmp
mov
xlat
imul
sbb
lcall
lea
ljmp
adc
sbb
aam
sahf
jns
adc
dec
icebp
add
xchg
mov
cmpsb
inc
test
push
mov
out
imul
scas
mov
mov
dec
mov
fidivrs
ret
data16
test
sbb
cltd
lds
push
aaa
lahf
add
push
xchg
aas
xchg
xlat
popf
mov
sub
lock
mov
mov
hlt
iret
sahf
or
scas
pushl
mov
inc
pop
push
mov
les
or
int
out
mov
lds
sbb
addr16
sub
sbb
pop
mov
dec
cmpsb
cmp
or
lret
rcrl
rorb
add
test
cmp
jb
mov
push
ret
xchg
cs
pop
mov
inc
mov
mov
mov
push
jno
mov
pop
inc
mov
dec
inc
imul
mov
jg
or
gs
mov
test
in
add
jbe
pop
sbb
xchg
lahf
pop
cwtl
pop
popf
xchg
and
sub
sbb
loop
wrmsr
add
lcall
lret
jns
jnp
xchg
jmp
lock
fwait
inc
pop
mov
aad
cli
test
test
push
and
mov
xor
push
mov
insb
cmp
out
mov
jne,pn
iret
cmpsb
insb
or
jae
sbb
aam
cmp
cmp
add
lret
sbb
dec
je
mov
mov
xchg
and
push
jnp
rorb
call
dec
or
jns
fistpl
sbb
cmc
imul
pop
lods
push
call
cmp
cmp
dec
or
mov
cmp
shll
push
ret
xor
mov
push
mov
xor
push
jmp
jbe
mov
mov
jp
pop
push
aas
bextr
sarl
sub
sub
aad
std
loop
xchg
sti
addr16
jno
xor
add
test
shll
pop
addb
ss
imul
xlat
in
jno
or
dec
ds
stc
push
int3
or
xchg
rorl
ds
fucomp
mov
sbb
xchg
cli
xchg
fdivs
es
inc
mov
popa
jne
and
dec
add
jge
add
mov
fistps
dec
xor
push
shll
cmp
jmp
pop
arpl
cmc
mov
sub
fimuls
fsubrs
push
mov
sahf
push
test
imul
js
pop
dec
popa
out
sub
sub
jle
and
xchg
js
js
mov
inc
in
mov
jmp
push
lock
cmp
int3
in
adc
ds
out
mov
cld
sub
adc
push
xchg
and
push
rorl
mov
icebp
dec
dec
shll
fldenv
sahf
jb
xchg
cmp
outsl
dec
out
lock
loopne
pop
out
sub
ljmp
lds
mov
push
add
iret
mov
dec
fcmovu
scas
scas
ret
or
mov
or
jecxz
test
shlb
push
scas
hlt
xchg
jnp
or
jg
or
jle
cmc
mov
lcall
sbb
es
sbb
incl
sub
add
imul
pop
sub
loope
repnz
dec
push
xchg
scas
stc
jns
mov
lods
fwait
jbe
les
mov
fs
inc
mov
xchg
mov
lcall
addr16
jecxz
xor
add
dec
js
inc
testl
sbb
leave
test
jge
insb
mov
inc
jbe
jle
sahf
adc
inc
and
lahf
movsl
push
fcompl
fldt
adc
ds
ret
or
or
push
clc
mov
xchg
pop
pop
xor
xchg
cli
pop
adcl
in
idivb
out
cmpsl
jo
dec
jbe
jne
scas
mov
mov
jne
sbb
cmp
pop
dec
mov
stos
dec
ds
test
repnz
mov
out
test
into
je
inc
add
rolb
sbb
shll
mov
add
sbb
mov
add
leave
pop
test
push
rolb
mov
sbb
aad
add
cmc
add
sbb
adc
je
sbb
out
subb
inc
rclb
int3
pushf
ja
stos
sbb
jae
jns
cmpsb
sbb
sbb
and
dec
xchg
mov
cld
imul
hlt
pop
cmp
test
or
outsb
aas
sarb
adc
aam
andl
cld
call
ss
mov
dec
mov
dec
lret
push
mov
adcl
les
imul
push
les
or
mov
push
cmp
mov
cmp
or
mov
sbb
push
ret
jns
inc
cli
aam
imul
fcmovbe
cli
mov
les
clc
mov
aaa
pop
jmp
subl
sub
inc
fwait
or
inc
push
xchg
popl
int
fcoms
inc
je
scas
arpl
dec
fistps
push
pop
inc
cmp
xchg
sbb
ljmp
mov
pop
mov
or
jecxz
push
add
fldl
ficoml
add
jno
or
cld
adc
fistps
mov
adc
popa
push
mov
fistl
mov
add
cmp
mov
mov
mov
pop
notb
mov
ljmp
lret
xchg
pushf
or
in
movsb
inc
ljmp
xor
mov
lahf
or
aad
repz
call
outsl
and
pop
fs
cmp
sahf
leave
cmp
mov
sub
cmp
cli
xchg
stos
push
pop
mov
pop
add
sub
push
pop
jecxz
lret
xchg
cs
jbe
pop
add
jbe
movsb
int
cwtl
or
test
sti
xlat
xor
pop
push
sbbl
xchg
shr
in
pop
test
sbb
or
and
jb
fs
pop
or
sub
fsubl
in
adc
pop
loopne
insb
ret
fsts
jns
out
push
push
push
insl
sbb
aas
push
cmpsl
aad
adc
mov
add
xlat
push
sbb
sarb
adc
add
cmp
out
inc
int
test
lods
adc
mov
cmp
jg
cmpsl
pop
or
add
arpl
cld
push
lret
cmpsl
mull
pop
cltd
dec
andl
out
movb
push
sbb
aam
xchg
add
idivl
fcomip
fdivrl
sub
cwtl
mov
ret
fnstcw
inc
enter
mov
icebp
and
in
lcall
sub
sbb
mov
mov
pop
inc
scas
push
cmc
push
jp
mov
hlt
sub
jb
sbb
pop
out
fs
cltd
dec
loopne
mov
stc
dec
pop
lahf
add
mov
dec
add
mov
inc
mov
stos
push
add
pop
repnz
cmp
push
es
subb
jne
inc
cmp
push
cmpb
lods
ficomps
popfw
xchg
scas
mov
jg
stos
jg
push
jle
sub
push
jl
je
mov
or
adc
cld
imul
pop
mov
mov
adc
inc
xor
push
lock
push
inc
into
mov
mov
push
add
mov
arpl
aad
cltd
dec
dec
es
push
cltd
data16
push
cmpsl
rep
mov
fldcw
enter
and
lds
sub
inc
dec
inc
jo
lahf
inc
pop
add
repnz
mov
sub
addr16
inc
mov
xchg
aaa
data16
les
mov
dec
add
imul
scas
cli
adcl
jle
enter
mov
xor
ficomps
pop
add
cmp
lock
xor
test
add
xchg
insb
imul
int3
lds
insb
scas
mov
fwait
ja
xor
test
outsb
repz
pop
xchg
divb
dec
sahf
or
or
xor
dec
push
lods
mov
lds
rclb
jl
lds
inc
in
mov
cmp
out
push
fisubrl
nop
xor
mov
ss
pop
rclb
jne
push
out
fldcw
mov
push
mov
xor
fwait
jmp
jmp
jp
xor
hlt
movsb
pop
pop
stos
cmpsb
ret
xchg
pop
add
subps
push
and
negb
dec
mov
lds
xchg
sbb
insb
xchg
push
pop
mov
loop
mov
mov
rcll
jo
add
mov
test
xchg
fwait
jp
pop
mov
scas
adc
mov
add
int
loope
or
test
pusha
xchg
jbe
adc
dec
adc
std
cmpsb
cwtl
push
fisttpll
stc
and
pop
xor
mov
adc
mov
andl
or
insb
imul
out
or
push
imul
sahf
inc
adc
outsb
lahf
dec
pop
push
adc
xchg
or
ljmp
jb
mov
enter
shll
nop
pop
pop
scas
pop
xchg
and
inc
mov
rol
mov
rolb
clc
dec
sub
inc
lods
push
xor
pop
jge
notl
cmp
sahf
lahf
fwait
xor
jmp
icebp
cmp
jnp
push
mov
imul
dec
bound
stos
mov
push
cmpsb
rcll
and
hlt
adcl
lods
or
jo
jg
test
ss
or
mov
lcall
jl
ljmp
lea
xchg
jbe
adc
dec
jg
mov
add
xchg
add
cmp
idivb
mov
adc
xchg
add
out
in
je
push
scas
enter
out
jmp
sub
fs
xchg
aad
cmpsl
xchg
mov
sub
xor
aam
push
pop
je
enter
movsl
push
cltd
nop
out
pop
sub
xor
mov
das
pop
jge
push
test
add
test
jb
lret
idivb
dec
adc
rorl
test
test
cmc
lock
roll
inc
adc
iret
push
scas
jmp
pop
adc
stos
pop
add
push
dec
jp
cmova
jle
mov
popa
cmp
mov
adc
mov
addr16
jp
std
mov
sbb
ljmp
mov
jo
push
ljmp
fcoms
or
push
jmp
cli
out
push
push
add
icebp
cld
push
mov
jns
pop
push
adc
fs
pop
sbb
cltd
idivb
jecxz
fstps
lret
mov
insl
sbb
das
in
push
movsl
cwtl
scas
mov
imul
cmp
into
out
and
loope
inc
cltd
lds
and
mov
adc
ds
je
test
dec
fadds
fs
mov
subb
dec
out
pop
lods
negb
inc
aaa
or
mov
push
push
imul
or
and
ds
and
jmp
pop
sbb
xchg
fadd
cld
lahf
cli
clc
or
sbb
lret
and
mov
jbe
hlt
out
jl
inc
loope
inc
pop
fmuls
test
vpmaddwd
inc
push
mov
inc
xchg
cmp
push
cli
jns
in
lock
cli
mov
pop
shll
fistl
icebp
into
icebp
xor
shrb
inc
imul
fwait
jp
or
incl
mov
sub
lret
fs
dec
leave
jge
cmpsl
nop
or
mov
adc
loopne
xchg
dec
mov
pop
lods
adc
sbb
inc
mov
pop
push
mov
in
jno
xor
aaa
mov
mov
arpl
jae
shr
mov
pop
je
loope
or
scas
adc
xchg
mov
inc
imul
mov
fidivl
adc
lret
xor
xchg
aaa
enter
dec
push
out
test
cmp
lds
sbb
jle
dec
xor
jp
das
mov
and
clc
push
jle
pop
fcomp
mov
addb
push
jo
call
mov
fdiv
iret
mov
dec
or
movsb
das
dec
jmp
mov
dec
add
push
test
mov
out
or
cli
fwait
mov
orl
inc
subb
hlt
adc
add
jmp
les
stos
adc
jg
rcr
scas
ds
lea
movsl
cmp
fildl
add
fwait
jbe
xchg
mov
mov
scas
push
sub
aam
dec
sbb
shlb
ret
push
and
mov
adc
pop
cmp
inc
xor
pop
into
push
bound
dec
xor
repnz
mov
push
inc
clc
repnz
out
sbb
or
or
lahf
xchg
mov
es
xchg
sti
or
stc
nop
jmp
loopne
es
dec
bnd
xchg
dec
test
jle
inc
or
shrb
or
aam
xor
hlt
mov
mov
lods
sbb
cli
xchg
fcmovu
mov
fcoml
inc
les
sub
jb
jl
mov
sub
jns
sub
push
or
xor
dec
in
sub
jno
sub
pop
aad
and
xchg
into
mov
in
popa
inc
ret
xor
insl
fsubrp
jp
pop
imul
popl
shrl
mov
inc
notb
jp
outsl
pusha
dec
push
xor
pop
out
pop
ja
data16
mov
cmpsb
popf
pop
rorl
push
roll
push
mov
insb
hlt
xchg
xor
mov
adcb
dec
xchg
pop
mov
xlat
pop
int
cmp
or
lea
aad
inc
add
and
push
dec
addr16
cld
repnz
mov
dec
and
push
faddp
dec
and
mov
imul
xor
inc
xor
cmp
movb
dec
add
ret
aas
inc
ss
aaa
daa
sti
push
add
dec
dec
cmp
mov
xor
popf
xor
imul
stos
js
jg
rcr
mov
or
add
test
test
in
mov
jle
jne
push
add
fiadds
aaa
sbb
push
and
xchg
fldenv
out
sbb
and
test
mov
fildl
mov
lock
push
push
in
add
sbbl
mov
mov
mov
dec
xor
lret
sub
int
mov
ret
cli
dec
xor
mov
jo
das
popa
test
imul
cmp
in
popf
mov
loop
push
mov
xor
test
in
jbe
jno
mov
scas
clc
and
aad
pop
std
lahf
sbb
fsubrs
in
mov
dec
cld
arpl
sub
push
xchg
lahf
stos
mov
cmc
lds
test
sbb
sub
cli
adc
cmp
xchg
xchg
jo
lock
push
add
add
dec
in
push
cwtl
in
jge
dec
cmp
cmp
in
rorb
test
or
inc
sti
or
fcmovnb
jge
xor
dec
imul
in
jp
cld
mov
enter
stc
or
cmpsb
pop
xchg
cli
xor
xlat
movups
mov
cmpsb
inc
out
dec
in
push
scas
lods
cmp
fbld
fisubrl
or
cwtl
insb
outsl
pop
sub
stos
mov
or
xchg
mov
nop
fldenv
or
rcrl
sahf
loop
cmpsb
fsubl
cmpsl
les
pop
das
cmpsb
rorl
sbb
push
ss
ljmp
das
mov
dec
mov
jne
test
rorb
jae
lcall
imul
cld
mov
hlt
sahf
out
je
out
dec
mov
xchg
xchg
outsl
and
jno
aas
int3
jl
jge
mov
idiv
cmpsl
xor
mov
pop
mov
or
sbb
das
enter
loopne
fildl
test
iret
mov
inc
into
pop
insb
sub
push
xchg
out
mov
cmp
mov
loope
ss
ret
icebp
pushf
dec
scas
mov
cli
fdivrs
lret
inc
js
mov
adc
mov
cwtl
aas
ljmp
iret
dec
stos
sbbl
jae
pop
enter
sub
inc
cmp
dec
imul
in
sbb
inc
pop
lods
out
xchg
mov
mov
xor
and
lcall
das
ss
shrl
fsts
insb
pop
mov
sbb
das
mov
fistpl
mov
in
scas
dec
loop
mov
and
xor
inc
mov
and
inc
xlat
xor
ds
cld
mov
daa
sbb
jne
sbb
mov
pop
loopne
stos
std
jae
aas
inc
sbb
jae
and
add
mov
test
mov
jg
mov
inc
mov
into
xchg
xor
mov
fwait
jo
inc
addr16
dec
repnz
inc
mov
jae
mov
clc
sbb
loopne
rclb
pop
imul
inc
adc
adc
ficoml
cmpsl
sbb
sbb
or
mov
sub
ret
mov
push
bound
jne
dec
mov
ljmp
pop
test
add
ja
and
test
mov
push
sbb
rolb
fldcw
or
paddusw
stos
shr
in
pop
add
sub
je
adc
xchg
mov
loop
dec
cmpsb
jp
orps
jg
pop
ss
sbb
xor
pop
pop
shrb
loop
xchg
nop
lds
push
push
pop
push
rorb
and
subb
das
xchg
imul
cmp
cmpsb
push
and
push
movsb
pop
lret
loop
xchg
pop
rcll
call
and
rol
sub
punpckhdq
aaa
outsb
jno
pop
ja
sbb
rcrb
add
xchg
ja
add
nop
sub
inc
shrb
test
adc
pop
loopne
jp
ljmp
jl
fcoms
sub
pop
aad
pop
adc
mov
sub
into
mov
pop
xor
mov
or
push
or
lcall
lods
sub
and
push
and
sub
sbb
out
or
in
or
mov
jb
jbe
pop
pop
jne
pop
mov
jmp
jge
test
mov
std
dec
xor
mov
shlb
je
jae
cwtl
dec
push
ss
stos
ret
pop
mov
pop
dec
and
push
andl
hlt
dec
in
mov
out
or
into
mov
jnp
push
mov
xchg
mov
enter
xchg
enter
jbe
add
mov
js
mov
outsb
sbb
dec
pusha
jmp
fsubrl
stos
das
ja
inc
adc
orl
daa
leave
sub
mov
pop
jmp
or
pop
pop
cmc
sbb
mov
pusha
push
xchg
lds
sbb
mov
mov
jmp
dec
imul
ret
daa
fiadds
or
mov
mov
scas
je
pop
out
lods
add
nop
pop
inc
jnp
shr
nop
fsubs
jo
pop
inc
test
adc
xor
testb
pop
lret
stos
adc
cmp
rorl
inc
sub
inc
shll
rclb
into
sub
mov
idiv
lcall
mov
inc
jbe
in
and
js
or
push
loop
mov
in
btr
rcrl
hlt
mov
add
push
leave
lret
ljmp
in
out
in
xor
push
int3
sti
and
int
xor
in
add
pop
sbb
mov
cld
les
lods
and
xchg
leave
and
pop
dec
cli
xchg
xchg
mov
movsl
cmp
hlt
pop
push
test
enter
loopne
mov
rclb
add
sub
arpl
pop
into
inc
cmp
ja
arpl
mov
out
in
mov
xchg
push
pop
arpl
xor
dec
aad
mov
fwait
loop
sti
iret
cs
jnp
out
and
sbb
mov
mov
bound
or
pop
or
mov
icebp
mov
stos
cmp
sub
sbb
pusha
in
adc
leave
popa
sub
mov
sub
and
in
jl
clc
inc
inc
inc
dec
mov
popf
addr16
sub
int
gs
fnstsw
jnp
imul
es
mov
sahf
gs
jl
mov
push
inc
add
roll
movsl
add
or
cwtl
xchg
aad
roll
daa
into
loop
add
into
andl
loope
mov
push
scas
mov
dec
lock
mov
mov
je
mov
ljmp
dec
adc
std
sahf
push
cmp
fisttpl
jecxz
pop
imull
ljmp
xchg
out
lahf
int
mov
jmp
mov
out
setp
rolb
push
mov
repnz
rorl
pop
sub
aas
stos
push
mov
mov
rcrl
stos
pop
adc
jl
adc
in
sub
cli
mov
negb
mov
je
inc
add
pop
cmp
or
inc
xor
xor
jno
in
sbb
mov
addr16
or
cmp
jg
cmovp
das
sbb
sbb
cmp
jo
cli
divl
sub
xchg
and
jge
out
jne
add
push
jecxz
mov
add
jns
cli
push
pop
orl
pusha
ficompl
loope
out
ficoms
fdivrs
stos
sub
adc
pop
lret
mov
push
push
and
stc
popf
adc
dec
mov
sub
mov
dec
movsl
pop
fdivrl
gs
push
mov
pushf
pop
stos
mov
lea
and
in
push
out
and
or
mov
test
and
dec
jnp,pn
movl
xchg
add
rcr
lret
sbb
jo
fcoml
or
adcb
inc
mov
movsb
inc
dec
sbb
inc
dec
pop
dec
or
push
scas
jbe
push
xchg
shufps
or
lret
lea
sub
sti
push
pop
fucom
xor
imulb
jl
pop
dec
fbld
and
lcall
or
jg
push
aaa
sub
out
rol
jge
lods
mov
ja
xor
ss
in
push
mov
nop
jmp
stos
test
sbb
std
repnz
and
outsb
popa
add
mov
rcr
cmpsl
jno
lods
cmp
es
dec
lcall
dec
jmp
inc
clc
dec
lods
aad
out
and
in
and
std
xor
test
in
mov
xor
adc
and
inc
cmc
out
xchg
outsl
icebp
movsl
ret
leave
mov
adc
mov
lods
xor
int3
jo
pop
pop
lds
jno
aam
lcall
push
nop
sbb
mov
jecxz
mov
xchg
rcrl
outsl
dec
mov
movsl
xor
insl
pop
jns
loop
jp
out
sub
inc
stc
lret
cwtl
adc
dec
sub
daa
outsl
fs
mov
mov
popf
and
cmp
arpl
ljmp
inc
xorb
mov
stc
in
cwtl
fisubs
std
inc
test
aaa
mov
clc
fdivs
cmp
mov
jmp
rolb
decl
mov
cld
inc
scas
add
add
rorl
loopne
sub
mov
mov
insl
xor
mov
mov
inc
add
mov
mov
pop
push
popa
cmp
add
mov
pop
sbb
lds
mov
add
lcall
mov
shrb
cld
and
mov
cltd
int
xor
add
sahf
mov
fwait
push
cltd
jmp
jo
arpl
aas
pop
sub
outsl
inc
pop
outsl
dec
push
cmp
cmp
or
push
scas
fs
fcomps
lcall
sbb
lods
lahf
mov
popa
in
cmpsl
lock
mov
adc
lods
xchg
negb
rol
sub
mov
rclb
push
push
jo
inc
pop
sub
cmp
mov
es
jne
inc
cmp
dec
add
aad
sub
and
test
pop
dec
pop
rclb
gs
repnz
jecxz
insb
push
into
cwtl
dec
mov
pop
das
sbb
ret
data16
pop
dec
aas
push
sahf
jbe
imul
in
subl
mov
cmpsl
std
gs
xchg
xchg
rorb
das
xor
or
cmp
xorl
xchg
cli
in
push
jmp
pop
adc
orb
js
xor
aaa
cli
xor
ret
gs
push
mov
jns
fwait
loopne
add
mov
pushf
xchg
scas
mov
xlat
or
cmc
dec
mov
hlt
cmp
shlb
int
jg
adc
test
dec
inc
xlat
cwtl
mov
jmp
adc
adc
jo
cmp
or
mov
sar
or
divl
das
pop
addr16
int
jo
shrb
xor
test
push
stos
insb
addr16
jmp
mov
cmp
enter
lods
test
inc
out
mov
sub
sbb
inc
ret
lret
adc
push
out
push
push
xor
js
test
jmp
std
fists
cmp
mov
push
hlt
add
mov
testb
pusha
lahf
clc
mov
imul
mov
cmpsl
inc
jo
mov
push
lahf
sahf
xlat
fbstp
leave
adc
jns
xchg
lds
out
pushf
jp
negl
and
push
loope
loope
xor
xor
repnz
and
cmp
lahf
js
or
loop
dec
lret
cmp
and
mov
or
ja
mov
xor
bound
insl
lret
repnz
and
mov
inc
ja
fwait
lods
test
sbb
and
popa
daa
je
xor
lcall
sub
dec
out
xchg
jo
inc
fcoml
repz
outsl
fisttpll
enter
in
scas
mov
mov
xor
popf
push
pop
je
cmp
ret
adc
mov
mov
mov
xchg
or
mov
test
push
jbe
mov
jecxz
ficomps
test
push
add
jecxz
or
ja
outsl
sbb
fsts
xchg
mov
lret
ret
mov
les
out
add
lea
incb
xor
jl
jp
mov
ds
mov
pop
sbb
mov
jb
jp
lods
push
or
repnz
bound
test
and
lock
inc
es
xor
inc
jmp
insl
stos
shrl
rcr
xchg
lahf
iret
scas
jbe
stc
test
out
rcll
pop
pop
cmc
jb
push
mov
dec
mov
and
cmpsl
inc
push
xchg
jle
inc
inc
das
dec
jnp
jmp
testl
mov
ret
sub
movsl
ja
scas
cmp
repz
inc
decl
ds
push
jbe
adc
cmp
add
cmp
or
pop
arpl
dec
cmp
std
mov
mov
mov
mov
push
fisttps
out
inc
or
push
add
sub
fbstp
xor
cmpsb
and
push
mov
lock
sub
xor
lret
or
pop
or
cmp
sub
sbb
xorb
pushf
jno
insl
push
stos
lock
daa
mov
push
aad
das
pop
add
popa
ret
dec
push
jbe
sbb
out
cmc
aad
ret
push
outsl
test
mov
xor
shll
mov
and
cmp
jge
pop
popa
cld
outsb
sbb
add
mov
jo
adcb
cmpb
xor
imul
mov
jne
inc
xlat
fwait
dec
stc
jno
jle
daa
sub
mov
jnp
test
or
mov
fdivl
pushf
fisubl
inc
fs
inc
push
stos
add
add
jecxz
push
push
loope
add
stos
and
mov
cld
sub
repz
scas
sub
mov
sub
xchg
sarl
call
lods
adc
insl
push
jg
mov
jo
pop
inc
pop
mov
push
lea
push
loope
dec
int
push
push
pusha
fwait
cmp
lock
lods
and
xlat
push
sarb
add
sub
test
lcall
out
inc
or
mov
popf
cld
out
inc
mov
jp
jmp
xchg
mov
xchg
pop
push
dec
es
subb
mov
dec
pop
jp
outsb
and
fnsave
aaa
cwtl
nop
fwait
sbb
outsl
pcmpgtd
lods
les
pop
aad
dec
das
add
movsb
frstor
into
loop
movd
mov
add
sub
roll
mov
xchg
loop
dec
mov
jns
add
jl
sbb
or
data16
leave
sti
and
rorb
jge
mov
adc
test
push
addb
add
ja
in
lds
lahf
jle
pop
add
jno
and
imulb
and
xor
xchg
push
inc
repnz
add
cmp
imul
inc
ljmp
jl
push
loopne
sbb
fiadds
imul
push
mov
mov
lods
pop
push
adc
push
mov
cmpsl
and
je
mov
adc
xor
jge
xchg
push
enter
and
xor
or
push
out
push
mov
mov
pop
xchg
fs
cltd
and
inc
pop
nop
rcl
or
pop
xor
jbe
pop
je
cmc
sub
pop
repnz
sbb
ret
add
add
xchg
mov
in
cmc
or
xor
xor
mov
arpl
hlt
lahf
mov
push
jl
lahf
cwtl
xchg
sub
dec
clc
ror
roll
dec
repnz
sbb
fidivs
pop
sbb
ds
lock
insb
lret
jnp
ficoms
stos
jae
mov
ss
sti
inc
in
xchg
mov
inc
or
ss
mov
imul
mov
cmp
fadds
int3
aas
and
test
mov
mov
lahf
cmp
mov
fisttpl
push
xchg
jbe
daa
dec
insb
add
lods
outsb
lret
testb
je
jl
xchg
arpl
dec
cmpsb
loope
inc
mov
aaa
cmp
in
and
movsl
call
dec
or
add
mov
jecxz
int
cmp
inc
leave
aad
out
sahf
loop
ljmp
sbb
xor
mov
jae
rorl
adc
dec
into
cmp
inc
adc
shlb
mov
sarl
push
mov
pop
push
nop
sub
push
fndisi(8087
mov
mov
aas
dec
xchg
mov
lea
dec
xor
push
cwtl
stc
icebp
loop
sbbb
dec
das
pop
xchg
sti
sbbb
add
cmp
jae
adc
sbb
inc
push
dec
ljmp
andl
jg
and
ret
adc
mov
ss
pop
icebp
roll
xrelease
cmp
hlt
sub
inc
jle
icebp
xor
pop
shlb
mov
ljmp
adc
std
and
inc
and
loope
dec
inc
in
stos
aaa
lea
fdiv
add
push
jns
sbb
cmp
jo
inc
leave
push
lahf
into
push
dec
lahf
aam
scas
inc
add
xchg
std
mov
pop
stos
mov
sub
pop
push
inc
pushf
aaa
rolb
xchg
test
add
mov
insl
xor
ja
imul
xlat
rorb
jbe
ret
fnsave
or
out
add
fcmovnb
jmp
lahf
mov
hlt
ds
std
inc
rcr
cs
xchg
jnp
dec
cmp
pop
out
pusha
sbb
push
aam
jb
mov
aam
js
out
jmp
test
add
sahf
pusha
iret
sbb
mov
or
cmp
mov
dec
and
in
pop
mov
test
out
mov
out
cld
jne
mov
nop
dec
mov
arpl
aas
pop
and
loop
xlat
adc
lret
cmp
and
test
jge
xchg
clc
pop
mov
mov
std
outsb
inc
cli
cmp
mov
shl
cmpsl
sub
sbb
fcoml
mov
fcoms
aaa
fldenv
in
xor
or
sub
pop
loope
xlat
flds
jg
pop
sbb
jecxz
rorl
fsub
or
xchg
stos
mov
shl
fs
sub
jbe
adc
jo
and
inc
mov
sub
lea
cltd
cltd
fildll
sbb
and
pop
mov
pop
push
push
pushf
mov
test
jno
cld
inc
xlat
in
mov
pop
adc
std
scas
push
jecxz
pop
or
mov
adc
clc
loop
out
insl
test
fimull
and
hlt
cmpsl
scas
out
mov
sbb
mov
loop
xlat
sbb
jg
imul
push
adc
add
jns
shl
mov
mov
jle
jmp
rcrl
lods
ret
mov
jmp
jns
andb
cmp
fbstp
loop
adc
mov
mov
cmpsl
rcl
rorb
mov
outsb
adc
push
call
or
add
xor
xchg
xchg
test
es
dec
cmp
lock
push
shll
stos
or
das
stos
insl
and
shll
into
in
pop
and
sub
sub
fstl
adc
sub
jnp
sub
lcall
cmpsl
cld
sbb
mov
out
xchg
cmp
mov
test
cli
or
or
inc
ljmp
cmp
fisubl
loope
cmpsl
test
sbb
out
dec
jmp
fldenv
or
xor
jne
mov
sar
js
repz
cld
pop
cs
inc
aam
pop
dec
add
lahf
jg
cs
in
sbb
insb
lock
or
scas
scas
dec
aaa
mov
mov
fs
mov
dec
or
lock
out
mov
xchg
push
outsl
mov
dec
ret
aas
out
mov
idiv
dec
push
xor
mov
cmp
add
int
sub
mov
inc
imul
pop
sahf
cmpsl
sub
hlt
fcompl
xlat
lods
fcom
loop
or
ficompl
popa
xchg
movsb
xchg
dec
lahf
mov
jns
es
into
fcomps
sub
mov
xchg
aas
mull
mov
into
daa
mov
enter
les
outsb
mov
pusha
mov
and
popa
jge
pushf
mov
jns
sahf
add
xor
xlat
mov
test
push
and
aam
cmp
fwait
loopne
mov
inc
out
jmp
adc
pop
lods
call
push
mov
imul
out
lahf
mov
mov
push
ss
push
orb
sub
hlt
shll
jne
or
mov
push
adc
sbb
outsl
cmp
push
xlat
sbb
cmc
decb
in
or
push
jno
jno
mov
inc
loopne
stos
xor
xchg
mov
lret
jne
or
mov
xor
or
jo
sbb
mov
cmpsl
out
cwtl
xor
mov
andl
sbb
xchg
or
addr16
pushf
imul
mov
mov
sub
fistl
lret
dec
cltd
imul
mov
mov
or
dec
mov
test
and
je
data16
inc
xor
xor
cmpsb
jg
lret
shlb
dec
and
sti
bnd
dec
dec
mov
ss
push
into
out
push
mov
mov
neg
out
sbb
xchg
pop
jecxz
out
cmp
push
mov
rcl
dec
sub
lahf
or
ret
ficomps
mov
dec
lahf
xchg
nop
insl
popa
outsb
jo
data16
pop
cmp
jmp
jb
fldenv
mov
sbb
or
lock
adc
fidivl
mov
add
call
sarb
lret
push
cwtl
clc
inc
sti
cwtl
or
fdivrs
pusha
jp
xor
dec
in
movsl
add
cld
cmp
cmp
je
jmp
test
mov
mov
add
dec
lret
fadds
inc
and
imul
xchg
mov
cltd
xchg
xor
pop
scas
push
add
stos
add
test
std
sbb
stos
cmp
lcall
scas
add
xchg
pop
sub
lods
lret
fwait
leave
xchg
outsb
push
sub
add
cmp
std
and
jne
fidivrs
jnp
mov
cmpsl
dec
std
mov
mov
or
xor
mov
fnsave
xor
pop
aad
jae
fsubr
mov
or
lods
mov
mov
inc
jns
dec
insl
sbb
lahf
cltd
stc
jp
cld
dec
cltd
pusha
add
mov
push
sbb
aad
fnstenv
cltd
dec
aaa
fs
mov
jb
int
xchg
or
movaps
jmp
jo
xchg
addl
and
pop
rcll
in
test
outsb
cmp
sub
fcoml
mov
arpl
nop
mov
xchg
int3
add
int3
gs
mov
fildl
pop
push
out
mov
std
test
sbb
subl
pop
gs
in
int3
mov
add
cmp
aaa
pop
fwait
lret
fisttpl
sub
sub
xchg
aaa
cmpsl
movsb
adc
dec
mov
push
pop
push
enter
out
cmp
out
arpl
into
rorl
push
inc
mov
jmp
jge
out
jae
loope
push
shrb
outsb
shlb
xor
stos
je
gs
jb
outsl
lock
pop
js
xor
dec
stos
cltd
lret
fistps
mov
fwait
test
mov
mov
or
mov
outsb
push
in
cmpb
in
pop
pop
xchg
xchg
scas
mov
sarb
arpl
out
je
or
mov
jnp
mov
push
mov
js
jnp
xchg
inc
into
sbbb
divl
ret
lret
sub
and
lcall
cmc
push
sti
jg
jns
mov
jecxz
mov
dec
xchg
dec
sbb
ret
test
inc
push
pop
clc
pop
leave
mov
leave
mov
pop
push
fs
inc
mov
cs
push
xor
pushf
sub
xchg
mov
dec
lock
xchg
add
fldcw
pop
ljmp
jns
xor
inc
imul
and
pusha
stc
jo
lods
push
add
divb
daa
jg
xchg
add
inc
inc
xor
and
cmp
dec
popa
rcrl
je
jge
das
sub
jo
jg
ficoml
out
adc
pop
jle
xor
int
mov
mov
or
sub
ss
clc
xor
movsb
imul
inc
lock
jb
into
mov
push
mov
movsl
shlb
in
or
dec
mov
and
mov
cld
or
ja
push
xchg
and
jmp
divb
pusha
xchg
mov
xchg
imul
cmp
adc
mov
ja
pop
addb
sti
repz
and
pusha
jmp
test
lods
ljmp
or
ss
flds
repnz
lods
in
fcoml
lret
mov
dec
out
lock
es
xchg
dec
insl
orl
adcb
outsl
loop
mov
rol
sahf
hlt
cltd
fs
mov
xchg
pushf
pop
push
dec
insl
popa
cwtl
xor
inc
cld
mov
pop
nop
shrb
sub
loopne
movsl
xor
movsl
popa
adc
push
dec
test
dec
enter
cli
push
push
dec
fsts
sbbl
rorl
popa
iret
sahf
mov
or
call
jns
jge
das
nop
aas
mov
sbb
aaa
loop
mov
nop
sbb
es
adc
shlb
jmp
lahf
call
shrl
push
sub
enter
cmpsb
stos
in
hlt
cmpsl
xor
push
shrb
lock
adc
mov
addr16
stc
dec
ds
or
jb
cmpl
dec
add
cmp
mov
ljmp
add
rcl
mov
leave
inc
imul
imul
leave
pop
jl
shlb
test
test
inc
cltd
insl
cmovs
sarl
ss
cmpsb
cmp
lret
or
fldcw
mov
pop
in
cmp
add
pop
mov
enter
lea
jmp
add
push
imul
mov
inc
mov
xor
jo
mov
add
xor
jp
and
pop
aas
mov
scas
aam
in
sti
jl
lret
mov
sbb
mov
push
loope
in
incb
or
es
mov
aad
inc
mov
xor
popf
cltd
mov
fimuls
outsl
mov
push
and
leave
ja
mov
or
push
xor
nop
inc
jae
ss
sub
dec
jae
dec
outsl
test
inc
xchg
out
sub
add
imul
sbb
mov
ret
mov
push
push
inc
outsl
pop
das
cmp
aam
outsl
push
mov
mov
inc
das
outsl
ret
jl
ds
lds
inc
xor
dec
and
fcoml
or
inc
fwait
sbb
out
in
mov
mov
aas
sahf
sub
add
jno
adc
cmp
xchg
bound
stos
scas
adc
test
sub
and
inc
mov
cmc
icebp
mov
jg
mov
lods
pandn
sbb
push
lret
jp
out
mov
pop
ret
xor
movsb
and
int
stc
pop
add
dec
andl
icebp
jge
pop
movsb
and
jb
sbb
jmp
aad
push
lcall
outsl
xchg
or
xchg
mov
sub
mov
sbb
pop
push
dec
push
mov
inc
inc
adc
and
call
lods
subb
loopne
shlb
ljmp
dec
lret
jp
roll
ljmp
scas
mov
and
out
jg
les
pusha
je
pushf
sbb
add
call
iret
xchg
es
icebp
sahf
sub
lret
std
js
rcl
sub
push
aam
fstpl
pop
mov
mov
jmp
and
jno
jmp
inc
jp
jno
ja
sub
test
xorb
xchg
add
mov
in
test
jge
dec
lea
xchg
jae
push
pop
fwait
loope
es
add
xchg
fists
jp
fistps
mov
mov
mov
jno
movsl
push
hlt
sbb
pop
xor
xor
inc
repz
sub
call
mov
jl
jle
pop
mov
cs
adc
xor
inc
xor
add
cmpsb
icebp
and
daa
push
aam
mov
aaa
hlt
cmpsl
mov
jge
inc
or
stos
bound
in
stos
mov
cs
adc
and
popf
testl
mov
outsl
fldl
stc
sbb
rolb
push
xchg
pop
out
add
pop
stos
cmp
add
inc
aaa
jne
jns
dec
xor
jmp
pusha
push
imul
xorb
int
jmp
adc
imul
je
jmp
pop
movsb
ficomps
ret
mov
push
ljmp
cmp
mov
fisttpll
ret
adc
adc
mov
add
mov
test
or
ds
jae
mov
mov
rorl
lea
xlat
xchg
gs
jbe
clc
cmpsl
fnsave
fistpll
push
aas
cmp
xor
jo
xor
mov
mov
pop
pop
gs
jbe
ss
sub
mov
arpl
aas
inc
push
in
pushf
cmp
fnstenv
pop
loop
testb
loop
arpl
lret
adc
pusha
rol
mov
cmp
ds
dec
mov
and
leave
loope
popf
hlt
jecxz
sbb
int3
rol
xchg
imul
leave
mov
xchg
movsl
and
or
jae
cli
loopne
cmp
xchg
faddp
stos
sub
jns
movsl
sub
rcll
cmpsl
add
jp
add
lcall
or
js
rcrb
mov
mov
out
fisttpl
fmull
dec
std
and
jg
xchg
incb
lds
iret
cwtl
sub
xchg
jns
push
popf
bnd
cli
int3
mov
data16
lret
xchg
fisttpl
lcall
cwtl
imul
jnp
out
xchg
notl
pop
xor
or
adc
and
sub
ja
daa
test
xor
rcl
repnz
test
mov
cmpl
xor
pop
xlat
shrl
hlt
inc
sbbl
sarb
vmwrite
xor
dec
sbb
out
sbb
jmp
mov
cmp
mov
sbb
in
rolb
add
jnp
add
js
xor
or
mov
or
imul
pop
jne
js
imul
rolb
add
inc
pop
mov
adc
outsb
mov
xchg
fwait
mov
lea
mov
mov
fnsave
add
stc
jge
daa
sti
and
int
pop
mov
lgs
or
packsswb
int
aas
mov
mov
dec
testb
inc
cmp
pushf
mov
idivl
inc
xchg
mov
cs
cltd
and
addr16
xor
shlb
push
scas
push
subb
dec
xchg
adc
pop
and
jbe
stos
xor
movsl
xchg
lock
fwait
mov
popa
lcall
mov
cmp
push
leave
jge
adc
jne
insb
sub
sub
in
lahf
loope
xor
repnz
das
dec
or
sbb
std
pop
lods
xor
lods
flds
dec
mov
imul
add
mov
scas
jp
test
jle
mov
ds
xchg
test
loope
lret
ficoml
sbb
outsl
fwait
push
lcall
aad
xchg
stos
jp
cmp
mov
ljmp
lahf
jge
and
push
add
or
xorb
or
push
inc
xchg
jg
addl
dec
cli
push
arpl
ud2
dec
lret
mov
push
outsl
cli
leave
adc
popf
add
push
mull
jp
ljmp
adc
fadds
and
ret
das
sbb
xchg
dec
mov
and
call
and
and
inc
cmp
add
mov
jbe
pop
dec
push
mov
dec
movsb
fldt
movl
push
dec
popa
mov
inc
ja
or
sbb
mov
sub
jmp
mov
jae
mov
jb
xchg
and
mov
add
add
jmp
xchg
mov
testb
jg
outsb
jg
pop
fimull
pop
out
hlt
rolb
imul
push
outsb
pop
out
sbb
add
aad
mov
add
mov
xchg
js
mov
ret
mov
inc
inc
seta
fmul
test
adc
loope
inc
dec
lcall
xor
pop
insb
into
push
jae
xor
cmp
es
dec
xchg
sbbl
js
inc
xor
ja
scas
leave
mov
add
outsb
stos
mov
xchg
push
xchg
inc
pop
punpcklbw
leave
sbb
mov
xchg
mov
and
cmp
jae
lret
jne
dec
mov
push
add
divb
push
cwtl
mov
ljmp
or
lea
xor
mov
lods
roll
lret
mov
mov
dec
sub
mov
fstpt
dec
cmp
bound
roll
pusha
mov
mov
cmpsl
and
dec
subb
jmp
ja
or
cmpl
sbb
jecxz
dec
push
and
add
dec
in
lahf
insl
xor
sbb
ret
repz
pushf
sbb
cmpsl
into
xchg
scas
sbb
pop
add
test
push
fadd
push
inc
sub
sbb
int3
clc
jp
dec
jo
xchg
outsb
aaa
and
sub
stos
or
aas
rcll
push
inc
xchg
xor
movsl
mov
ljmp
adcl
fisubrl
push
sahf
xchg
xchg
mov
leave
jmp
mov
inc
sbb
jne
xchg
or
fiaddl
jmp
hlt
mov
shrb
fcomps
inc
shr
and
mov
jbe
pop
fs
mov
xor
mov
or
mov
ja
push
lea
ss
cwtl
dec
rolb
xor
jge
icebp
xchg
imul
xchg
popf
lahf
lcall
add
pop
div
mov
dec
and
scas
jnp
xchg
into
push
and
pop
stc
or
pop
cs
aas
cltd
jle
fsubrs
lret
lahf
mov
les
mov
enter
scas
mov
xchg
pop
inc
sti
or
adc
lds
dec
in
fstpt
mov
std
jo
arpl
movsb
jle
jle
sarl
cli
bound
inc
inc
sub
and
sbb
dec
push
rcrb
cmp
dec
lret
xor
mov
loopne
jno
mov
mov
pop
daa
rorl
adc
mov
xor
mov
or
sbb
add
sub
pop
xchg
mov
mov
insb
aam
es
xchg
push
mov
jnp
insb
rorl
fidivl
scas
rorb
ljmp
sbb
inc
jbe
fcmovbe
and
jns
rol
push
je
jmp
ljmp
mov
and
jo
xor
cmp
xor
imul
icebp
outsb
pop
mov
mov
dec
mov
lock
loope
leave
int3
fwait
jnp
mov
inc
js
les
sbb
adc
push
mov
enter
adc
cmp
clc
jp
fwait
mov
icebp
adc
and
and
sub
mov
jge
call
or
pop
aas
hlt
add
xchg
test
sub
cmp
xchg
adc
sub
in
xor
and
lahf
jmp
repnz
dec
ljmp
xor
jbe
sub
sarb
sbb
std
mov
jbe
test
dec
mov
xor
ret
outsl
lret
shl
out
or
xor
and
xchg
xchg
jnp
lahf
mov
scas
mov
xlat
jg
in
je
repz
sahf
adc
ljmp
scas
xchg
mov
adc
lods
out
or
js
mov
dec
hlt
and
fs
fcompl
in
mov
mov
and
sub
out
lds
inc
cmp
xor
idivl
dec
in
insb
nop
push
mov
mov
shll
pop
lods
int
inc
mov
aam
in
pop
pop
add
add
test
fs
movl
jbe
xor
int
push
or
popf
pushf
adc
lahf
pusha
insl
jb
push
fistps
icebp
inc
pop
in
jb
idivl
add
ljmp
cmp
adc
cld
into
jns
mov
das
push
and
test
cmc
lret
sub
and
xor
mov
xchg
insb
icebp
std
cli
dec
sub
dec
int3
xchg
pop
rcr
lods
aam
hlt
jl
xor
mov
lahf
mov
bound
mov
data16
lds
inc
out
popa
mov
mov
lcall
adc
sar
sub
and
imul
inc
fimuls
xchg
push
lock
cli
sub
ret
sbb
aad
testb
test
jecxz
pop
and
inc
inc
popf
mov
push
push
push
test
and
lcall
fxch
or
dec
xchg
push
in
push
rcll
fstpt
out
imul
or
add
push
xchg
nop
test
and
icebp
and
rclb
pop
sarl
dec
mov
adc
cmp
addr16
pop
push
fimull
jp
int3
xor
cld
add
and
xor
cmpb
cld
xchg
jmp
cmp
fs
mov
enter
fs
fadds
jno
jg,pn
aam
dec
fsubrl
mov
jmp
jmp
sub
or
push
int
xchg
add
incl
rcrb
into
inc
mov
gs
leave
data16
mov
fs
stos
xor
jbe
jmp
mov
add
xchg
push
pop
jecxz
rorl
or
push
enter
push
add
jmp
jne
stos
loope
pop
aam
sub
cmpsl
fdivl
stc
aaa
adc
or
ret
mov
jecxz
xchg
add
scas
lods
fisubs
icebp
dec
fnstsw
cmc
aaa
das
sahf
in
aad
sbb
aas
mov
mov
pusha
mov
xor
in
add
or
and
dec
loop
pop
arpl
iret
push
arpl
jns
push
adc
push
popa
jmp
mov
or
push
aas
mov
cmpsl
ret
shlb
outsb
mov
push
mov
adc
and
ror
fidivrl
jo
lods
aam
mov
sub
imul
jp
dec
das
inc
cmp
sbbl
jo
ja
in
and
xor
adc
stos
lret
pop
jbe
ret
pusha
pop
jp
sub
pop
xchg
xlat
nop
push
iret
cmc
add
fildll
pop
popf
mov
sti
fwait
lea
mov
or
shrl
cli
aad
rcrb
mov
sti
jo
cmp
lods
hlt
addr16
mov
xchg
mov
aad
and
insl
lods
and
in
ljmp
sarl
nop
jecxz
loop
icebp
and
inc
add
in
jnp
nop
movsb
adc
or
push
aad
stos
adc
fbstp
adc
sbb
and
enter
bnd
jae
mov
shll
adc
out
cmp
pop
xor
pop
cmc
test
cmp
jmp
xor
repz
ret
cmp
movsb
movsb
ds
sahf
add
inc
enter
jecxz
jbe
aam
xchg
mov
pop
push
popa
push
rorl
iret
mov
das
outsb
pop
jmp
loopne
cwtl
adc
jge
mov
lahf
fidivrs
outsl
aas
push
daa
xorl
jmp
add
cmpsb
testb
fnsave
rcr
mov
mov
scas
ljmp
scas
or
mov
inc
jecxz
jmp
adc
add
sbb
pop
inc
mov
lods
sub
neg
sarb
xor
lods
insb
out
outsl
xor
test
pop
cmp
xchg
mov
and
push
mov
rorl
mov
adc
mov
insl
mov
cmp
mov
mov
stos
mov
test
stos
xchg
sbb
fwait
adc
push
mov
jmp
insb
dec
lods
adc
je
xor
aad
out
xchg
mov
addr16
sbb
push
adc
enter
clc
mov
gs
xor
fdivrl
dec
xor
cmp
ret
mov
jmp
in
xor
pusha
in
into
aad
in
sbb
xor
lds
and
clc
add
push
int3
pop
ljmp
mov
xchg
mov
cmp
adc
inc
in
xchg
or
mov
arpl
inc
xchg
loope
jle
int3
test
add
dec
fiadds
xchg
insb
jge
and
mov
lods
cmp
movsl
cmp
jl
cmp
adc
and
dec
fidivrl
scas
addr16
push
mov
gs
mov
cltd
and
mov
idivb
test
mov
lods
push
fmull
fisubrs
pop
fdivrs
into
cmovge
mov
addr16
pop
hlt
jecxz
ficomps
jo
loope
adc
mov
dec
xlat
or
fld
rolb
fnstcw
rorb
arpl
stos
in
inc
xor
inc
push
jnp
sub
out
lock
add
data16
cmp
jnp
xor
cmp
xchg
xor
pop
es
mov
ja
cmp
rorb
mov
roll
dec
lret
repz
stc
add
adc
sarb
jmp
mov
shlb
xchg
mov
inc
inc
cli
and
sbbb
push
mov
fwait
in
adc
xchg
cmp
dec
jge
jae
dec
xlat
ja
out
stos
pop
or
iret
movsb
pop
adc
and
outsb
cmp
add
stos
dec
cmpb
xchg
fnstsw
cmc
fsubl
movhps
jb
in
add
xchg
push
cmp
movsl
ja
or
fistl
cmp
adc
or
mov
xchg
mov
push
mov
mov
xchg
pop
inc
jns
inc
loop
adc
mov
aas
shlb
push
aaa
leave
jno
inc
pop
or
sbb
or
cmp
xchg
repnz
fildl
pusha
pop
mov
pop
shr
xlat
xor
dec
pandn
and
in
cmpb
dec
pop
int3
pop
mov
inc
jae
mov
cmp
shl
mov
jo
xor
xchg
xchg
lret
inc
orb
mov
xchg
in
xor
dec
ss
out
xchg
cmpsl
mov
push
push
mov
cmc
cmp
into
sbb
xchg
insb
stos
mov
or
and
inc
mov
test
or
add
push
pop
scas
notl
inc
xchg
lahf
data16
lock
inc
arpl
dec
pop
out
adc
mov
inc
repnz
cmp
fsubs
and
das
dec
mov
lahf
sar
or
push
out
and
ljmp
ja
mov
jno
xchg
ret
mov
add
daa
out
shll
mov
add
sbb
push
in
lea
fwait
idivb
iret
pusha
pop
lods
push
fnstsw
mov
stos
int
mov
incb
test
or
fwait
push
rorl
or
imul
push
fists
js
stc
cmp
xchg
add
lcall
xor
gs
inc
inc
push
sub
xor
sbb
mov
hlt
stos
pop
pop
in
loope
jo
mov
adc
xor
inc
dec
arpl
push
fstps
aam
sbb
xchg
and
in
insl
or
gs
les
or
pop
cmp
dec
pop
mov
push
mov
mov
shl
inc
sbb
sti
cmpsb
fnstenv
jo
daa
imul
sbb
jle
mov
cmp
cmp
imul
jb
call
lock
rolb
shlb
jmp
adc
xchg
enter
or
sti
popf
or
xor
cmp
jge
les
adc
and
adc
jns
pop
cmc
or
fadd
jge
mov
negl
push
mov
cmpl
mov
or
cld
call
popf
and
push
aad
leave
arpl
sti
aad
arpl
shl
idivl
int3
jecxz,pn
aam
popa
fadd
push
outsb
popf
std
cmp
subb
or
sbb
xchg
divl
xchg
mov
xchg
and
xor
stos
ret
arpl
fs
lds
movsl
popa
cmp
add
dec
mov
push
cmc
inc
pop
je
outsl
movsb
push
mov
pop
jbe
sahf
push
aaa
mov
dec
fucomip
fistpll
fsubl
dec
and
push
in
push
aad
push
lahf
out
mov
inc
jns
fildll
adc
mov
movsb
fisubrs
int3
inc
ljmp
fst
adc
cltd
adc
cmc
lock
jl
bound
mov
cwtl
dec
in
sub
inc
aas
shl
divl
cld
test
insb
stc
inc
aaa
xchg
cmp
dec
idiv
xchg
xor
hlt
aad
xorb
push
pop
pop
pop
jne
arpl
sbb
sub
sbb
fsts
loopne
pop
js
rolb
daa
movsb
xor
xor
xor
dec
jge
cmc
push
sbb
lods
scas
stc
jg
mov
leave
xchg
popl
mov
inc
push
shl
xchg
push
stos
cmp
xchg
outsb
and
add
dec
dec
jle
test
jae
add
and
add
push
iret
cmp
pop
rolb
je
movsb
dec
xchg
cmp
pop
sub
jmp
in
hlt
sbb
bndldx
iret
sbb
lock
aam
cs
sbbb
mov
shlb
in
pop
cmp
add
pusha
lret
xchg
movsl
jle
call
popf
or
cmpsb
out
mov
dec
les
ret
and
or
add
xor
mov
dec
cs
lock
in
mov
bound
or
scas
subb
mov
or
dec
dec
mov
ficoml
aam
pushl
add
rcrl
add
cmp
jno
test
cmpsb
pop
ret
psubusw
rcrb
add
lods
outsl
mov
push
and
jae
add
js
fbld
sbb
xchg
in
sbb
push
or
les
pop
pop
push
outsl
bnd
cmp
fistpl
mov
lock
jecxz
sti
sti
pushl
arpl
leave
or
out
inc
mov
pop
loopne
add
test
popf
add
sub
jmp
and
mov
shrb
push
jmp
mov
sub
or
cmpl
pop
clc
mov
pusha
popa
cmp
call
mov
sbb
insb
int3
enter
sbb
out
xchg
imul
jb
nop
pop
sbb
jo
sub
fcmovu
cmp
or
roll
sbb
mov
cmp
test
jo
frndint
add
cmpb
or
dec
sahf
cmp
push
and
fcmovb
out
sub
adc
lds
fadd
adcb
fisubrl
xchg
xchg
mov
es
loopne
out
pop
es
iret
mov
jl
sub
outsb
ficompl
cmpsl
addr16
adc
push
ficompl
mov
addr16
cmp
xchg
cmp
pop
jns
clc
pop
iret
in
cmc
fmuls
jno
xchg
orl
mov
mov
sar
aas
cltd
pop
xor
arpl
push
xorb
idivb
push
imul
gs
int3
les
and
jo
mov
sqrtps
jns
scas
inc
js
dec
sahf
movsb
and
in
and
in
movsl
push
jge
sub
pop
sti
shl
xchg
adc
adc
mov
xchg
repz
dec
dec
addr16
jns
fisttpl
rcrb
xchg
lcall
cmp
call
jo
nop
std
sub
inc
push
sbb
aam
pop
mov
mov
inc
add
int3
sbb
cmovp
mov
lea
push
jecxz
xchg
inc
xchg
add
scas
add
and
imul
mov
fwait
cmpsl
add
add
out
fadds
outsl
push
mov
in
leave
or
mov
jnp
jb
and
imul
mov
loopne
sarb
mov
pop
cmc
pop
push
fs
sub
dec
jno
dec
stos
shrb
mov
push
xchg
mov
lcall
push
jmp
jo
dec
xor
xchg
icebp
jecxz
xor
int3
mov
fildl
sbb
lret
mov
mov
adc
lock
imul
aaa
lods
push
push
les
int3
into
leave
icebp
cmp
mov
data16
cmp
cmp
xorl
pop
jb
out
jg
movsl
fst
aaa
and
pop
adc
and
jp
inc
daa
fstl
shlb
mov
fwait
lahf
cmp
mov
pusha
cmc
dec
andl
js
and
adc
scas
mov
inc
outsl
andb
jle
mov
mov
cmp
stos
xchg
test
sub
pop
sbb
scas
xchg
lods
jo
outsb
jb
lock
add
lea
sti
shlb
sub
lahf
sub
adc
xor
adc
xchg
xor
fdiv
not
adc
fnstenv
jo
xor
loope
mov
test
push
sub
jb
mov
mov
int3
xchg
add
dec
int
adc
mov
sbb
imull
in
cmp
je
jmp
aad
xchg
out
cli
lahf
cmp
mov
mov
xchg
xor
or
inc
add
inc
fsubp
xlat
pop
out
pop
out
and
insl
lret
xchg
daa
push
insl
jmp
mov
or
fnstcw
pop
dec
es
xchg
fcomps
jp
mov
js
or
xchg
mov
jge
mov
pop
jo
test
arpl
in
ffreep
shl
push
jo
clc
push
mov
xchg
xorl
test
mov
test
pop
sbb
jmp
into
arpl
push
push
jle
inc
pop
mov
scas
jbe
call
add
into
mov
outsl
sbbl
popf
jle
inc
fwait
sbb
ljmp
mov
inc
xchg
xor
adcl
mov
jns
pop
sbbb
add
int
popa
push
mov
pop
xor
lods
es
jns
add
imul
sbb
jge
inc
push
xor
dec
and
xor
pop
pop
outsw
popa
push
and
mov
cwtl
sub
loope
fcoml
and
xchg
data16
sbb
adc
push
cwtl
or
mov
subb
mov
pop
push
aaa
daa
push
inc
mov
in
call
mov
xor
inc
add
mov
fimuls
jp
cmpsb
push
mov
jg
sub
sbb
add
xchg
dec
je
bnd
out
jnp
stos
sbb
cmp
or
ljmp
jecxz
ffree
and
fists
adc
push
jnp
icebp
mov
xchg
loop
lret
pop
cmp
in
andl
or
inc
and
ret
scas
and
sub
push
mov
xchg
data16
aaa
mov
sar
sbb
hlt
loop
pop
or
jp
sbb
repnz
fwait
loop
shr
and
ja
jmp
pop
xchg
repz
std
jmp
pop
mov
push
out
sbb
or
push
sub
testl
inc
dec
dec
jae
push
mov
xor
iret
dec
and
xor
jne
fwait
shll
pushf
scas
aad
sub
xchg
ss
jno
loope
fbld
push
mov
je
pop
push
mov
lret
push
mov
out
xchg
cmp
push
xchg
pop
pop
inc
sub
mov
sbb
lock
dec
aam
dec
aas
xor
es
cmp
lahf
push
jecxz
lds
aas
movsl
mov
lods
cmc
xchg
jmp
lods
nop
jle
jnp
loop
and
xor
jl
or
add
mov
scas
xchg
test
aad
push
push
jno
lods
inc
pop
pushf
dec
call
mov
mov
stos
outsl
push
ss
cs
fdivs
dec
scas
add
sbb
jg
push
sub
adc
or
jle
adc
inc
inc
gs
adc
jno
into
xchg
aad
ffreep
aad
and
xchg
adc
pop
jl
xchg
inc
xchg
movsb
xchg
jp
jae
adc
mov
pop
adc
xchg
inc
or
sarb
fmul
lods
pop
hlt
sbbb
out
xor
imul
pop
cmp
std
xlat
add
mov
adc
dec
pop
scas
mov
jmp
js
sbb
in
mov
out
and
and
mov
fsubp
sbb
sub
or
inc
pop
pop
lahf
sub
xchg
outsb
rcrb
in
sahf
or
shll
sti
pop
lcall
jne
dec
imul
lds
or
fistpl
xchg
pop
test
test
mov
insl
xor
push
rol
push
xchg
add
pop
dec
xor
fwait
movsb
and
fistl
xor
sbb
mov
out
or
arpl
fstl
mov
fs
mov
cwtl
xor
shll
movsl
mov
inc
add
shll
mov
sub
cmpsl
into
ljmp
ljmp
adc
mov
jno
in
cli
mov
nop
or
test
in
inc
jecxz
shll
xchg
dec
cmp
and
addb
iret
bound
inc
add
insb
xchg
xchg
out
loop
call
movsl
gs
les
add
xchg
push
call
in
xlat
mov
addr16
in
lds
fs
adc
mov
sbb
lea
cmpsb
aas
ret
xor
data16
movsbl
push
jg
jmp
cs
jp
inc
ficoml
mov
aad
sti
and
pop
dec
bound
jmp
jle
push
mov
mov
mov
sub
idivb
cmpsl
adc
jns
pushf
loopne
pusha
and
out
cmp
daa
cmp
test
pusha
loop
mov
cld
sbb
lahf
mov
jecxz
or
cmc
or
stc
or
subl
jecxz
test
mov
leave
mov
xor
sbb
mov
jb
sub
jmp
dec
hlt
mov
stos
sti
je
jae
push
ja
loope
leave
jnp
mov
test
jmp
or
xor
daa
test
fidivrs
rcll
or
ret
fs
scas
jg
or
repnz
mov
dec
pop
push
adc
push
lcall
sbb
mov
roll
das
les
xor
jb
imul
add
jns
les
jae
mov
insb
xchg
sub
mov
push
xchg
aad
into
shlb
data16
out
imul
fnsave
sub
sub
fsubp
mov
adc
fwait
jmp
scas
sub
addr16
dec
aad
arpl
inc
shrl
jnp
inc
or
mov
xlat
imull
ret
cs
bound
loope
inc
mov
mov
in
aam
sub
stos
pop
dec
and
sub
mov
shrb
js
and
or
xlat
mov
add
sbb
add
outsl
enter
sbb
outsl
ds
jl
jae
dec
int
and
shrl
and
iret
ja
sbb
xchg
cld
sub
lret
addr16
mov
jns
cmp
cmp
xchg
cwtl
jmp
rolb
icebp
cmc
mov
add
pop
lods
jns
push
dec
mov
scas
inc
lcall
cmp
jp
out
adc
sub
inc
xor
inc
movsb
mov
mov
pop
add
mov
repz
cld
push
and
push
pop
fdivr
sbb
rcrl
loopne
nop
icebp
mulb
adc
iret
sub
nop
fs
or
aad
loop
or
sub
scas
xchg
mov
jp
ror
inc
cmp
andl
mov
xor
out
scas
adc
xchg
mov
adc
sbb
or
fisttps
mov
mov
mov
and
or
pop
jno
sbb
push
mov
cmpl
sbb
in
xchg
push
inc
cli
mov
into
mov
lods
jnp
je
push
notb
inc
enter
es
in
cmp
inc
xchg
mov
mov
jl
out
sub
push
int
dec
add
enter
sbb
lret
sub
lea
test
shlb
mov
jae
out
jnp
lcall
cmp
push
jae,pt
fsubl
faddl
clc
movsl
pop
push
js
cmc
pop
popa
inc
not
or
xchg
sbb
jns
xchg
jl
in
or
cmp
add
addl
ret
mov
mov
jmp
pop
mov
add
aam
adc
cwtl
dec
add
sbb
cmpsl
jbe
sub
jnp
adc
pusha
add
sbb
call
test
mov
sbb
movsb
add
js
pushf
test
cltd
jg
jae
sbb
cli
adc
or
lahf
push
cltd
xchg
xchg
daa
or
pop
sub
negb
jl
push
ret
inc
bound
int3
sti
pop
adc
repz
out
or
push
jmp
mov
jo
aas
hlt
xchg
popf
xchg
leave
scas
lahf
out
cmp
mov
inc
loop
mov
add
jns
sti
and
xor
mov
in
js
test
inc
cld
lds
sets
imul
mov
and
addr16
jns
or
cmpsb
rolb
xchg
pusha
push
or
jmp
ficoms
mov
and
adc
adc
cmp
out
hlt
les
mov
fsubrl
adc
or
lds
aam
mov
ror
cmp
mov
sub
add
in
test
shll
fdivrl
ror
cmp
mov
dec
mov
xchg
mov
sbbb
cmp
mov
clc
adc
inc
shl
ja
stos
mov
lock
sub
cltd
push
scas
stos
or
cmp
mov
pop
imul
mov
andw
pop
mul
scas
in
in
xor
stc
dec
push
fsubs
sbb
mov
addr16
cmp
lahf
mov
cmp
in
cmp
cmpxchg8b
mov
bound
jns
cmpsb
lds
cmp
lods
and
repnz
mov
popa
fbstp
sbb
adc
pop
pusha
ret
xchg
mov
pop
cli
pop
les
cmpsb
inc
sahf
rcrb
cli
mov
or
sahf
xor
les
movsb
popa
pop
aad
inc
test
test
jo
mov
cli
stos
inc
push
dec
fildl
adc
shll
dec
jp
xchg
dec
lock
mov
lock
dec
sbb
pop
pop
call
aaa
imul
lahf
fnstsw
or
or
dec
cmp
cmc
incl
sarb
push
mov
push
sbb
xchg
pop
das
jno
pop
imul
jnp
rorl
lahf
lods
jecxz
xor
sub
mov
cmpsl
out
cmp
xlat
cmp
mov
lahf
les
push
dec
or
jns
pop
and
dec
fwait
sub
fwait
or
rcll
popf
sub
dec
push
sbb
sbb
imul
and
xchg
insb
cs
hlt
jo
and
pop
xchg
xchg
popf
cld
lret
jb
hlt
lret
push
or
mov
inc
adc
cmp
mov
fdiv
nop
addr16
mov
call
sub
fsubrs
dec
cwtl
mov
lods
lea
lcall
insb
js
xor
testl
xor
xor
push
xlat
fs
cli
jbe
je
mov
pop
push
adc
ljmp
push
mov
inc
bound
stos
dec
and
dec
ret
je
sub
push
xor
pop
adc
scas
arpl
in
int
inc
inc
ss
or
jl
push
cmp
ja
cmp
adc
das
and
filds
fsubl
ja
jne
add
popf
testb
dec
cmp
notb
ds
fdivrp
push
and
pop
add
leave
push
pop
popf
ret
fwait
icebp
pop
mov
out
idivb
repz
jl
arpl
xchg
aas
movsb
xchg
lods
cmp
leave
in
shlb
xor
jl
pop
imul
push
mov
sahf
dec
mov
in
sar
leave
or
xor
xchg
es
push
adc
cmp
pop
stos
ss
leave
sahf
mov
push
xchg
adcb
inc
mov
lock
push
mov
daa
sub
hlt
std
adc
push
pop
and
jp
ljmp
cmc
orb
jbe
mov
notb
rcll
and
sub
push
repz
in
push
loopne
push
shl
or
jle
js
jbe
ja
popa
fadds
dec
xchg
in
fildll
bound
loopne
cwtl
dec
add
mov
fs
mov
xchg
mov
lret
fistpll
pop
sub
mov
stc
sbb
gs
out
dec
enter
fs
dec
outsl
shll
iret
cmp
mov
mov
jg
push
rorb
testl
mov
ljmp
push
mov
daa
stos
pop
je
lcall
mov
imul
pop
pop
inc
pop
xchg
pop
push
adc
mov
js
jp
jb
lods
in
push
loop
push
and
pop
and
aam
scas
mov
int
push
mov
fmuls
cltd
fiaddl
fdivs
jne
jp
sbb
daa
jns
xchg
push
sbb
push
add
jne
filds
pop
and
repnz
jns
xor
in
mov
repz
idivb
fdivrs
mov
xchg
daa
das
xchg
sbb
in
inc
sub
imul
cmp
mov
dec
cs
mov
cli
mov
stos
ds
fnstsw
arpl
leave
popf
mov
adc
mov
inc
push
insb
jle
mov
cmp
sahf
shrb
mov
scas
and
xor
or
mov
lret
xchg
daa
sbb
adc
movsb
mov
in
les
lods
mov
out
scas
jp
jae
stos
fwait
inc
rorl
and
mov
rcr
fidivs
arpl
xchg
lahf
jp
jle
addr16
test
or
and
je
fisttpl
shl
inc
dec
dec
adc
add
out
lret
nop
sbb
push
repnz
mov
and
sub
xchg
mov
ds
sub
pop
lcall
fstps
mov
sub
sbb
jbe
mov
mov
push
test
movsl
lods
xchg
sbb
cwtl
cs
outsb
pop
sbb
mov
insb
push
sbb
pop
cltd
adc
dec
ret
fimull
xchg
scas
xor
lods
data16
icebp
mov
lcall
les
pop
js
in
fcoml
mov
movl
mov
or
push
mov
addl
inc
pop
fwait
mov
clc
adc
push
adc
pop
out
push
fistpll
arpl
push
std
jb
and
das
outsb
enter
cmpsl
stos
dec
xor
fadds
sub
mov
cmp
fcoml
cltd
push
sbb
mov
mov
aam
ficompl
sbb
test
xor
jl
imul
in
repnz
sbb
popf
mov
sub
add
xchg
cmp
push
xchg
xchg
loop
sub
lea
jns
inc
daa
pushf
cmc
jnp
adc
add
dec
or
and
and
aas
sbb
leave
imul
ss
mov
fwait
xchg
jne
jnp
push
in
xor
daa
daa
jmp
cmpsb
sbb
adc
movsl
adc
out
int3
shr
movsw
jmp
dec
lret
push
pop
test
fs
cmp
lods
cmpb
arpl
push
sub
test
cmp
dec
cli
dec
mov
jle
mov
lret
pop
xchg
sbbl
ljmp
cmc
pop
add
xchg
xchg
insl
or
lret
pop
cmc
sbb
popf
dec
jae
call
icebp
push
push
cld
shll
scas
jp
shll
shr
mov
int
in
pop
push
shll
scas
sub
xor
stos
in
fmuls
pop
pop
leave
dec
je
xchg
call
hlt
repz
les
les
fnstsw
mov
sub
js
bound
jp
lcall
testl
jecxz
push
sti
mov
xor
sub
pop
bound
dec
push
ret
push
mov
add
enter
icebp
dec
xchg
add
test
fisubl
cld
add
mov
xchg
push
jns
addr16
jle
cld
cmc
arpl
xchg
mov
js
shll
popa
push
movsb
mulb
clc
ret
push
das
mov
cmc
mov
ja
pop
push
push
dec
out
mov
hlt
sub
mov
xchg
inc
inc
inc
movsb
mov
jb
out
mov
scas
dec
int3
mov
jb
rcll
or
clc
stc
dec
sub
push
xor
lock
out
js
adc
xor
jne
mov
adc
aam
fwait
lcall
jmp
in
insl
add
test
sti
mov
cltd
jo
sbbl
cmp
cmpsl
sub
pop
scas
hlt
xchg
ja
jne
repz
dec
lock
shr
lret
xchg
icebp
pop
daa
loop
xor
sbb
inc
cs
sub
negb
pop
in
outsb
addr16
mov
iret
push
loop
lahf
dec
sub
dec
dec
mull
icebp
stos
aas
test
movsl
imul
sub
xchg
cwtl
jle
jb
mov
push
xor
out
dec
shll
les
arpl
aad
xor
sub
and
mov
push
testl
nop
fsts
adc
mov
outsl
jno
cltd
fistps
and
mov
jae
bound
insl
mov
mov
xor
gs
mov
lea
pushf
sbb
inc
iret
mov
pop
incb
out
xor
jmp
lock
cli
fstl
mov
popf
jp
imul
adc
cmp
cwtl
jno
outsl
mov
jl
ds
sarl
or
and
jg
subb
sbb
mov
mov
les
in
push
mov
jb
push
xchg
push
mov
push
fdiv
test
mov
or
cmp
xor
jmp
mov
cs
aam
inc
xchg
rep
test
xchg
or
ds
scas
sbb
push
lea
fnstenv
sub
outsb
mov
or
fistps
fisttpl
or
pshufw
shll
cmpsb
es
pop
lods
push
mov
sbb
in
int3
leave
sub
inc
pop
cwtl
cmp
imul
movsl
adc
push
lock
int3
sub
and
inc
adc
or
or
xchg
cmp
push
pop
mov
add
testb
mov
test
xchg
ret
mov
xlat
jmp
pop
mov
ret
aad
or
sub
push
bound
js
add
ds
call
ljmp
fwait
aam
pop
leave
xchg
inc
mov
mov
imul
push
lcall
jnp
mov
out
outsl
add
pushf
sbb
mov
cli
lods
jle
dec
and
mov
mov
dec
mov
push
push
push
es
pop
mov
and
dec
pop
ljmp
push
inc
sbb
xorb
cmpsb
adc
push
stos
mov
push
movsb
push
mov
fldcw
leave
pushf
cmpsl
xchg
xor
in
scas
mov
setbe
je
and
mov
fmull
xor
out
or
sbb
jecxz
jb
outsl
or
cmp
scas
sarl
mov
lret
mov
mov
rol
mov
mov
dec
add
daa
subl
adc
and
mov
mov
repz
inc
cmpsl
daa
es
lea
mov
in
int
jne
push
repz
xchg
test
sub
test
ja
cld
xchg
xor
rolb
in
aad
ficoml
ds
cmpsl
leave
push
cmc
xchg
out
das
ljmp
test
in
lds
fs
jmp
shl
or
sbb
std
sub
dec
sub
stos
icebp
pushf
rol
xor
sbb
mov
test
pop
or
push
mov
icebp
xor
loopne
mov
adcl
scas
push
or
mov
lock
push
mov
hlt
sbb
sbb
pop
or
dec
jae
jg
cmpsl
aas
jle
xor
test
push
mov
lcall
pop
push
mov
push
je
das
testl
sub
sahf
aam
movsb
mov
and
out
aam
sub
jne
xchg
sbb
cli
imul
aaa
lods
inc
xchg
out
lds
test
dec
lods
or
into
repnz
sti
xchg
pop
mov
adc
je
loopne
je
mov
nop
lahf
lret
xchg
jl
jg
inc
pop
add
fs
lahf
sbb
rorb
push
mov
push
push
idivb
dec
setno
rorb
ret
xchg
hlt
gs
mov
dec
lahf
bound
ror
fwait
into
mov
cmp
test
repnz
xchg
add
aad
loopne
jne
mov
inc
push
lcall
cmpsb
movsb
imul
mov
adc
add
pop
es
jg
xchg
push
pop
loope
inc
xlat
jmp
call
aad
loope
popf
lds
dec
arpl
mov
jmpw
lods
clc
jl
or
jl
push
or
mov
mov
xchg
ret
shr
das
mov
js
xchg
mov
pop
mov
jb
jl
cmpsl
mov
xlat
stos
imul
jae
mov
push
cltd
clc
or
xorl
flds
jle
pushw
test
push
insb
xchg
outsb
dec
nop
clc
and
sub
ficoml
loope
popa
sub
int
fcmovnbe
test
sub
push
lcall
fnstcw
xor
or
lea
jmp
jl
cwtl
inc
jb
pop
push
fdivrs
int
sbb
lea
mov
xor
aad
jmp
or
test
loope,pt
add
xor
sbb
push
clc
out
xor
js
mov
das
pop
in
mov
outsb
xor
shlb
mov
push
mov
or
dec
sub
aaa
sub
cs
ror
cmc
sub
pop
cwtl
sbb
imul
jae
sub
cld
fisttpl
rcrl
cmc
out
push
je
jl
imul
xor
adc
lahf
dec
xchg
xchg
pushf
xor
mov
mov
push
lods
cmp
jle
mov
sbb
or
mull
aam
dec
add
sbb
cmp
jns
mov
pop
inc
sahf
mov
pushf
arpl
mov
xchg
outsb
jo
push
or
pop
sbb
ret
les
inc
or
into
orb
mov
cmp
cs
test
enter
cmp
icebp
out
jecxz
in
pop
mov
cmp
push
cmp
and
ja
inc
xor
fidivl
push
sbb
mov
scas
mov
js
incb
mov
or
pop
ret
mov
mov
cli
shlb
shll
sub
mov
or
bound
lea
addb
sub
xchg
cmpsb
jle
pop
stos
aad
aad
xchg
xlat
pop
mov
lahf
jb
xorb
sar
movl
je
push
xchg
dec
jo
cs
sbb
arpl
dec
or
rorl
push
rcrl
push
outsb
cltd
jb
mov
int
fstpt
dec
pop
or
mov
sahf
stos
and
xlat
test
ret
imul
xorl
jb
sub
sbb
out
shrb
push
shl
and
jb
cmp
aam
pusha
xor
movsb
mov
fimull
jno
push
and
mov
insl
cmc
out
push
and
sub
out
js
in
call
mov
imul
ljmp
je
mov
cli
add
push
pop
pop
mov
es
call
pop
outsb
dec
fwait
pusha
enter
jp
xchg
call
inc
lock
mov
mov
xor
push
jnp
pushf
insb
int3
daa
pop
aas
mov
popf
pusha
xor
pop
sbb
fildl
cmp
pop
dec
pop
gs
cmc
mov
movsb
push
cmp
cli
out
test
and
sub
jl
sbb
test
cmp
or
xchg
push
push
jnp
insl
test
std
mov
pop
xchg
or
xlat
ja
stc
popf
mov
movsl
dec
sti
stc
xlat
sbb
data16
adc
lcall
std
inc
pusha
mov
dec
xchg
das
dec
stos
shl
test
pusha
lcall
cmp
outsb
jne
mov
push
popa
push
popa
xor
inc
stos
shlb
adc
or
pop
insl
arpl
cmp
lea
repz
and
je
mov
jge
sbb
outsl
pop
ret
test
sub
adc
xlat
stc
sbb
je
aam
movsb
loope
loopne
xor
loopne
mov
mov
jp
ret
xchg
cltd
inc
fdivl
setb
scas
xor
pushf
mov
dec
add
lods
jae
adc
movsb
movsl
repz
push
adc
inc
adc
jg
mov
fwait
adc
popa
add
xchg
orb
jo
scas
out
es
and
rolb
stc
mov
call
or
pop
outsb
es
push
int
dec
push
faddl
cmp
push
int
and
add
cmp
cs
inc
push
inc
in
arpl
cmp
jecxz
divb
insb
cmpsl
xorb
testl
out
mov
gs
push
mov
pop
push
cmp
jl
add
int3
jge
repnz
push
loopne
or
xor
pop
dec
inc
mov
dec
lds
lods
insb
dec
inc
cmp
sahf
fcomps
mov
mov
xchg
mov
add
adc
leave
rcll
mov
mov
test
xor
js
inc
adc
pop
jno
cmp
add
cmp
shl
mov
repnz
inc
jge
enter
loopne
adc
sbb
mov
and
push
cmpsl
mov
jne
orb
clc
inc
dec
pop
fldl
inc
in
testl
adc
push
test
out
daa
negl
iret
mov
xor
leave
xorl
cmp
add
in
aam
sub
shrb
pop
dec
pop
adcb
rorb
sahf
repnz
aas
inc
fcoms
inc
adc
adc
jl
jp
div
adc
mov
stos
mov
sbbl
cmp
mov
mov
mov
mov
add
test
and
xchg
into
aaa
in
sbb
cmpb
inc
pop
dec
mov
push
xchg
ds
mov
inc
enter
out
js
or
loopne
sbb
pop
mov
xor
and
adc
in
mov
push
rcrl
test
push
out
int3
or
icebp
sbb
das
xchg
pop
das
xor
fwait
xchg
or
arpl
add
data16
int
dec
mov
mov
mov
pop
add
pop
or
push
push
jmp
adc
je
dec
dec
fildl
testb
sti
jno
sub
fdivl
xchg
nop
imul
sti
pop
out
sbb
mov
push
lcall
xchg
adc
shll
add
pop
jnp
addb
cld
inc
mov
push
scas
push
fisttpll
sbb
xor
and
inc
jbe
scas
and
cmp
or
mov
pop
jle
loop
inc
push
js
incb
fildl
xchg
fstl
mov
negl
shll
int3
push
aad
ljmp
and
lods
or
xor
dec
jecxz
negb
and
mov
sbb
pop
mov
test
pop
xor
push
sahf
das
stos
int3
and
or
es
push
test
stos
xchg
jnp
adc
or
pop
xchg
popa
shll
mov
int
xchg
test
sub
inc
bound
jns
dec
adc
imul
lret
push
insl
jae
cmp
iret
mov
fisubs
cwtl
in
sahf
and
jbe
mov
and
push
rcr
sbb
ljmp
or
idivl
push
sub
mov
les
fdivrl
push
rcrb
lods
add
push
in
push
jnp
enter
xorl
mov
sbb
lret
push
lret
stos
mull
ljmp
pop
sbb
mov
cmp
add
mov
mov
push
arpl
sub
mov
rol
cmp
pop
cmp
sub
cmp
in
iret
or
stos
pop
pushf
dec
bound
mov
push
add
adc
lcall
lahf
fdivp
data16
push
aam
out
loopne
rcl
sub
pusha
mov
aaa
xchg
mov
bound
outsl
test
andb
cmp
and
arpl
lods
add
mov
mull
add
mov
in
jp
popf
or
fiaddl
cmpsl
sbb
ljmp
lret
and
subl
in
xor
xchg
into
sub
movsl
jb
sub
xlat
test
testb
ret
repz
enter
jb
insl
fidivs
movsl
hlt
mov
testl
ret
pop
sub
sub
sub
fildll
fndisi(8087
push
fs
jnp
push
bound
mov
sbb
jg
add
jp
pop
jo
adc
hlt
push
add
mov
pusha
jge
out
gs
je
mov
loopne
ja
in
and
enter
push
scas
test
mov
sbb
stos
cmp
test
or
mov
push
xchg
popa
cmp
pop
sbb
cmp
loopne
mov
push
loop
incb
or
repnz
popa
mov
xor
in
xchg
sbb
push
pop
adc
add
jmp
pop
cli
scas
inc
jle
cmpsb
enter
sub
mov
js
jle
es
into
daa
insb
sahf
xchg
inc
in
stos
sbb
je
xor
cmp
push
mov
inc
insb
mov
jns
sti
test
pop
pop
inc
movsl
sub
dec
loopne
cmc
jbe
mov
and
in
insl
pop
push
adc
shll
jne
repnz
mov
data16
mov
inc
ret
in
leave
cmp
and
xchg
imul
addl
imul
popf
cmp
leave
dec
adc
in
xor
mov
loopne
rorb
push
leave
rcll
and
icebp
iret
xchg
ss
or
adc
imul
aas
dec
int
icebp
aas
insb
sbb
mov
cmpsl
and
stos
repz
pushw
imul
pop
or
xchg
lock
lcall
xchg
cs
and
push
test
loopne
cmp
inc
shrb
mov
mov
fptan
aad
cmpsb
loope
fsincos
add
and
inc
push
pop
in
pop
mov
and
rclb
das
jmp
push
out
aaa
inc
sbb
push
cmp
or
adc
enter
hlt
dec
maxps
mov
imulb
pop
ret
adc
or
adc
loopne
ret
add
lods
adc
sub
add
cwtl
mov
mov
out
mov
daa
arpl
mov
fstpl
or
loop
xor
jg
pop
in
gs
inc
xor
sub
scas
mov
fldenv
aad
inc
jo
jp
popf
psubsb
inc
insb
inc
insb
test
mov
icebp
aas
fs
popf
popf
test
or
arpl
mov
ficoms
pop
js
xchg
dec
ljmp
ds
push
in
loope
inc
inc
psubusw
mov
inc
ss
ja
or
push
inc
test
outsl
dec
ja
insb
mov
push
push
dec
jbe
sub
and
xchg
xchg
or
stc
xchg
fiaddl
int3
adc
add
lret
fs
mov
sti
xlat
in
push
sahf
mov
cmp
mov
cltd
cmc
repz
inc
xor
inc
sbb
out
insb
leave
repz
mov
aas
cmp
aas
push
jo
xor
pop
fcom
cmp
xorl
repnz
stos
xlat
sti
in
jae
outsb
or
jecxz
add
push
push
int
orb
jp
mov
std
es
push
rcrb
das
jnp
test
adc
add
push
jno
jecxz
push
xor
add
sub
cs
lret
rolb
adc
daa
add
jbe
mov
aad
mov
kortestb
out
cmp
lcall
loopne
out
sbb
lods
js
push
mov
out
outsl
sarl
jg
cmpsb
pop
pop
lret
std
xor
fwait
mov
mov
into
mov
popf
and
hlt
xor
sarb
sbb
loope
and
stc
fs
jge
mov
inc
or
pop
insb
push
fstps
stos
sbb
adc
int3
imul
cmp
sbb
xchg
jmp
scas
loopne
dec
xor
cmc
in
sbb
testl
cli
mov
sahf
in
mov
repz
sbb
movsb
pop
or
or
data16
ficompl
mov
popf
popf
cmp
add
sub
mov
cmc
scas
out
pushf
gs
shll
cmpsb
jl
pop
cmpsl
sbb
dec
push
out
jbe
mov
jnp
mov
lea
idivb
xchg
sbb
xchg
inc
push
setle
pop
addl
add
fwait
mov
pop
imull
xor
testb
mov
je
in
jbe
hlt
lods
pusha
xchg
inc
mov
jo
adcb
nop
push
outsb
sbb
mov
mov
sbb
xor
cltd
testl
jbe
mov
mov
jmp
add
jne
cmp
sub
add
fcomps
insb
lds
add
testb
test
jbe
pop
jle
mov
pop
cmp
pop
xor
dec
push
imul
lahf
mov
push
cmp
jl
jb
lcall
cs
jb
and
sub
fs
push
jae
dec
push
xor
movsb
jbe
push
movsl
repz
enter
push
xchg
dec
xchg
push
into
lock
pop
mov
lcall
out
and
jns
sbb
or
add
or
cmp
out
cltd
xlat
jnp
or
lods
loopne
dec
xchg
test
insb
lea
sbb
cmc
jns
cmp
in
pop
addr16
add
clc
xchg
add
dec
jbe
xor
jl
sub
inc
fcmove
mov
add
aam
test
arpl
shl
mov
sub
inc
inc
pop
or
cmp
push
ljmp
aaa
dec
dec
mov
test
movsl
push
rolb
jb
in
or
sub
add
xchg
in
mov
mov
sbb
popl
mov
push
lods
pop
jno
mov
js
rcrl
xor
int
fbstp
test
xchg
mov
add
je
cs
icebp
sbbl
push
aad
and
cmc
fsubrp
and
xchg
xchg
mov
xor
shll
pop
pop
jbe
sbb
sub
xchg
mov
mov
add
pop
pusha
and
lret
cmp
ret
outsl
inc
aad
and
cmp
repnz
pop
testl
xchg
movsl
lcall
mov
inc
cwtl
xchg
jl
lds
cmp
mov
pop
jp
lahf
in
sbb
aam
pop
fcomp
push
cmp
addr16
xor
mov
test
sbbl
fists
jg
push
je
loope
inc
mov
fstpl
lods
cmp
in
push
xchg
mov
mov
fs
orb
faddl
repnz
mov
fstl
sub
push
mov
stos
add
xchg
push
push
xchg
loopne
mov
push
stos
hlt
xlat
mov
das
mov
addr16
je
lods
xor
and
push
push
stc
fs
mov
or
scas
insb
enter
mov
mov
cmp
aaa
mov
inc
movsl
mov
outsb
mov
mov
cmp
inc
push
fdivrs
or
mov
in
push
cmpsb
movsb
jb
push
sub
lods
test
outsl
xchg
sbb
cmp
mov
repnz
add
dec
imul
and
add
cmp
insb
shr
xor
sbb
xlat
pop
in
test
cmp
scas
mov
rclb
jo
jno
test
mov
stc
lods
fyl2xp1
incb
xchg
inc
add
pop
mov
mov
enter
xchg
xchg
mov
push
xor
mov
pop
pop
xor
jbe
mov
jp
loopne
fsubl
jl
test
pop
outsb
cltd
iret
pushf
inc
mov
scas
mov
push
jl
cmp
imul
adc
push
int3
inc
scas
jo
mov
adc
bound
mov
push
mov
lcall
fsubp
pop
sub
outsb
push
add
sub
adc
cmp
xchg
dec
jne
push
stc
push
pop
sahf
dec
dec
popa
pop
loop
inc
inc
inc
sub
in
scas
mov
cld
sbb
shrb
cmpsl
hlt
push
dec
rol
adc
xchg
std
imul
pop
dec
enter
arpl
fildl
add
clc
dec
out
movsl
sub
imul
aas
inc
or
fisubrs
mov
jo
repz
xchg
cmp
push
sbb
adc
jno
mov
mov
or
sbb
mov
xchg
dec
int3
xchg
repnz
fst
outsb
das
push
fstl
stos
clc
sti
imul
mov
or
dec
pop
and
lcall
xor
les
ss
shll
sub
mov
test
js
jle
xlat
ret
fxch
cmpsb
xchg
push
aam
imull
lds
imull
fildll
es
fnstcw
push
in
cmp
add
xchg
xchg
adc
andb
mov
ja
sbb
push
xchg
cmpb
into
in
push
pop
or
pop
out
add
xorb
pop
clc
int3
imul
movsb
mov
int
inc
mov
pop
dec
ret
rorb
adc
out
sahf
cmpsl
xor
int3
scas
imul
jb
sbb
add
fists
or
sub
jmp
aaa
xorl
sub
jecxz
pop
add
cld
out
out
out
loop
pop
push
daa
fbstp
lcall
lods
iret
add
mul
outsl
or
or
xchg
mov
sahf
pop
movsb
loope
bound
frstor
xor
ret
jae
pop
mov
and
jecxz
xchg
out
iret
mov
sbb
inc
mov
std
and
int
xchg
imul
popf
or
outsb
pop
insl
fsubrs
js
adc
pop
sub
jl
and
inc
jecxz
or
or
cmp
js
push
adc
sti
outsl
push
bound
jmp
rorl
mov
sbb
adc
testb
xlat
cmp
sti
ret
fdivl
jmp
daa
mov
test
hlt
lds
mov
and
push
cli
nop
rcrb
pop
lret
popa
in
insb
pop
shlb
sub
adc
std
fidivs
jl
dec
jg
push
or
dec
movsb
push
cmpsl
ret
sub
dec
data16
push
jp
xlat
bound
inc
movsl
rclb
inc
mov
sbb
inc
dec
add
push
sub
dec
bound
call
movsb
dec
scas
or
xchg
pop
jmp
push
ljmp
inc
pop
test
inc
and
pop
scas
aas
mov
xchg
in
mov
xor
mov
ss
int
sbbb
push
adc
pop
bound
xorb
icebp
iret
jmp
inc
aas
sub
pusha
mov
xchg
call
fists
and
ljmp
jge
int
cmp
test
mov
data16
push
es
sbb
in
loope
and
xchg
cmc
outsl
mov
imul
jo
int3
push
dec
test
aad
int3
fs
adc
cs
xor
nop
push
cmp
mov
repnz
dec
lret
mov
push
xchg
movsl
jb
pusha
dec
xor
push
mov
mov
mov
xor
adc
xor
cmpsl
pop
sbb
pop
jge
xchg
in
cmpsb
xor
pop
push
mov
pop
mov
pop
in
scas
lret
sub
mov
jbe
jne
jmp
insl
in
clc
inc
in
mov
out
mov
jg
push
lret
xchg
add
ja
lcall
frstor
lods
dec
add
jp
mov
adc
ret
jo
out
clc
dec
ret
repz
in
outsb
sbb
fwait
xor
jne
hlt
inc
and
sub
inc
imul
jp
pop
aam
sub
xor
jae
sbb
fs
dec
dec
add
daa
mov
xlat
fstpt
inc
push
cs
int
push
jne
addr16
imul
add
ja
jnp
adc
aas
pop
cmp
xchg
ror
mov
mov
pop
add
xor
inc
and
adc
inc
sbb
push
mov
pop
pop
mov
leave
mov
pusha
add
jp
subb
and
cmp
mov
dec
or
lcall
cmpsl
or
jp
outsb
repz
dec
inc
sub
cmpsb
mov
out
push
xor
sub
xchg
imulb
imul
stos
and
js
push
out
and
mov
adc
addr16
jb
vpermilpd
mov
or
sarl
jmp
jge
jecxz
pop
or
mov
ja
mov
or
hlt
sahf
lds
shrl
lret
jae
sahf
fdivs
ret
ss
mov
push
out
les
mov
cltd
mov
out
dec
xchg
imul
nop
xorl
jnp
inc
adc
jb
fidivs
lods
sbb
adc
sarb
jge
mov
jbe
in
or
sub
adc
sub
or
outsl
test
outsb
jmp
addr16
xchg
lahf
or
sub
fwait
call
div
pop
mov
jno
fmull
jg
aam
hlt
fcomps
lret
cld
ficoml
rol
push
jecxz
lock
testl
cwtl
mov
loop
xor
pop
outsb
push
sub
inc
fstpl
push
push
mov
pop
dec
dec
popf
sub
cli
into
pop
stos
jl
cmpsb
std
pop
add
cmp
lock
add
inc
cmp
jae
pop
jne
adc
aam
fwait
jle
dec
mov
dec
lahf
ja
jle
cmp
ljmp
and
cld
int3
inc
insl
clc
jge
ret
xchg
sbb
pop
rcll
dec
bound
test
int
mov
mov
shl
scas
aad
test
test
repz
out
xorb
in
sub
lcall
sbb
dec
out
jns
fs
movsb
pusha
lahf
dec
jno
mov
loopne
dec
ret
adc
sbb
sub
xchg
shll
sbbl
aaa
or
sbb
dec
xchg
xchg
sub
cmp
xor
xchg
inc
inc
xorl
or
xchg
pop
pop
gs
sub
cmc
fucomp
adc
in
popf
add
popf
out
xchg
add
and
jmp
ret
or
rcrl
les
loop
js
xlat
mov
push
in
roll
dec
xor
and
dec
insl
cld
popf
inc
enter
add
jo
cmp
mov
pop
jnp
push
xchg
mov
js
enter
and
je
scas
lea
push
ljmp
push
jl
das
addr16
or
inc
cmpl
and
xor
jns
sub
or
gs
or
outsl
jnp
cmpsl
cli
ficomps
cmp
fidivrs
jl
mov
mov
mov
mov
xchg
mov
xchg
stc
mov
sti
push
mov
mov
cs
pop
mov
cmpsb
leave
das
add
lds
push
std
add
leave
push
fs
jp,pt
mov
adc
mov
lret
push
lret
push
inc
and
sub
mov
adc
mov
jbe
cltd
std
lcall
cli
subl
shlb
daa
pop
jg
in
popl
xchg
cli
inc
push
orl
mov
add
inc
mov
xor
push
icebp
pop
mov
out
push
orb
xchg
sti
lahf
xchg
mov
in
aas
and
gs
sub
cmp
or
rolb
jl
cmpsl
negb
push
cld
sti
sub
sahf
aas
je
popa
fdiv
pop
cmpsl
roll
and
mov
mov
inc
pop
orb
lcall
icebp
jl
scas
adc
lret
xor
mov
popa
int3
push
adc
fwait
stos
mov
sub
push
fstps
sbb
shll
push
dec
adc
sbb
or
ret
sub
push
xchg
fs
mov
nop
fisubrl
jmp
mov
jne
pop
xchg
push
std
xchg
les
mov
mov
icebp
js
ss
xchg
mov
cmpsb
pop
push
mov
test
outsb
scas
add
pop
imul
dec
push
ljmp
jmp
testl
movsl
call
cmp
insl
dec
cld
add
cmp
pop
inc
xor
xor
sahf
aas
loop
rclb
xor
cmp
push
xor
adc
mov
jo
daa
pop
adc
adc
xchg
lods
sub
and
pop
jo
xchg
nop
mov
movl
sub
lcall
aaa
mov
les
jge
inc
or
inc
adc
fsubp
decb
dec
jne
cmp
scas
cld
adc
push
mov
cltd
decb
in
sbb
ficomps
inc
adc
das
jne
xchg
inc
cmp
out
xorb
jnp
popf
sbb
sbb
into
inc
xchg
addl
jno
insb
mov
loop
in
es
insb
push
jnp
rorl
ret
loop
test
cmp
aam
xor
push
push
push
jmp
adcb
sbb
mov
dec
fmul
sbb
push
leave
loop
fcoml
je
clc
das
jne
int
js
test
imulb
xor
inc
daa
sbb
fcomps
mov
mov
mov
mul
lcall
push
fsubrl
xchg
ljmp
icebp
bound
or
xlat
inc
data16
and
aam
jle
aas
jae
fsubrs
cwtl
bound
jae
ljmp
mov
xchg
insl
aas
popf
les
mov
adc
and
lea
fdivr
int3
and
mov
cmp
sbb
out
xchg
adc
xchg
leave
cwtl
ss
dec
add
sub
lcall
push
and
sbb
loop
js
movsl
int3
leave
das
outsb
ret
and
test
rorl
mov
out
fcoms
stos
fcompl
scas
jle
cwtl
rorl
xor
adc
sub
mov
add
sub
mov
sbb
int3
xchg
rorb
enter
in
sbb
into
jge
mov
test
xchg
mov
xchg
add
adc
cltd
inc
pop
pop
inc
rcrl
xchg
divb
dec
loopne
xor
jecxz
repz
push
sarl
insb
jg
push
add
jns
fstps
mov
pushf
push
add
mov
dec
movsl
xchg
sub
addr16
dec
sbb
add
or
data16
movl
les
dec
dec
sbb
dec
jnp
outsb
lret
add
add
sub
jnp
je
rcll
xor
aas
dec
stos
daa
cmp
mov
popa
push
inc
rcrl
push
and
in
popf
pop
mov
add
mov
leave
push
mov
das
push
push
mov
xlat
ljmp
scas
inc
loope
outsl
stc
add
addl
cmpsb
mov
sub
insb
aam
lods
leave
inc
or
jae
or
addr16
mov
mov
test
ret
test
push
xchg
xchg
xor
xchg
jmp
mov
fstl
aam
call
adc
jb
mov
inc
ss
loop
pop
movsl
cwtl
add
add
adc
loopne
xchg
push
adc
adc
cwtl
sbb
aas
sub
ret
mov
sahf
ficoml
mov
dec
jnp
es
and
into
rclb
xchg
sub
push
inc
adc
mov
aam
dec
mov
clc
daa
push
pop
stos
in
cmp
pop
popl
push
in
cmpsb
mov
aas
cltd
ror
adc
pop
sti
jb
xchg
shlb
adc
insl
aad
dec
dec
adc
popa
cmp
jo
repnz
cmp
sub
add
inc
add
mov
and
xchg
pop
test
cmpsl
pusha
addr16
test
adcl
pop
mov
inc
das
pop
add
mov
loop
dec
dec
lcall
imul
or
jmp
mov
sbb
push
cmp
lahf
mov
push
test
pop
cmpsl
adc
fcoml
mov
andl
fisubrl
mov
lds
mov
sbb
pop
adc
jecxz
xor
push
dec
pop
movsl
or
mov
test
xor
pop
clc
xor
jbe
movsb
adcl
cltd
sub
add
jnp
or
insb
xchg
dec
mov
sahf
cmp
loop
jg
and
insb
mov
fisttps
insl
xchg
pop
fistl
sub
mov
cmp
sub
out
pop
inc
pop
shlb
push
push
jle
sub
sbb
dec
push
mov
cld
shrl
call
xor
add
jp
repz
xor
mov
xchg
dec
inc
push
test
adc
adc
xchg
rep
icebp
push
aad
dec
mov
aam
sahf
push
mov
gs
or
stos
clc
xchg
dec
mov
add
inc
test
xchg
mov
mov
int3
pop
or
pop
dec
lods
scas
mov
pusha
push
cld
outsb
movsb
cmpsb
lar
pop
test
imul
mov
xlat
das
and
mov
insb
xchg
bound
pop
mov
xchg
jbe
in
pushf
push
fcompl
enter
lahf
lds
lcall
es
insb
push
movsb
sar
sahf
lret
out
enter
mov
cli
push
sbb
jp
sbb
sbb
mov
inc
orb
sbb
int3
je
out
or
sbb
testb
in
test
mov
xchg
stos
sub
sbb
mov
rcrb
divps
xor
pop
xchg
xchg
ret
xchg
push
lea
mov
pop
push
cmp
push
push
out
jecxz
sub
sbb
cli
jo
cmp
lods
movsl
repnz
dec
mov
scas
lds
mov
test
jb
popa
fwait
call
je,pt
xorb
cwtl
jbe
mov
and
mov
jmp
jne
loop
sbb
aad
pop
fdivr
outsb
and
int3
nop
inc
jno
mov
aaa
jle
shrb
mov
mov
lret
ja
lods
cmc
mov
imul
adc
repz
push
xor
pusha
adc
rorl
push
lahf
lds
push
sub
addr16
add
out
add
mov
push
roll
sbb
lret
icebp
lods
xor
dec
inc
fimuls
loop
test
repz
enter
dec
jp
push
aaa
dec
rcrb
notl
mov
cmp
or
pop
mov
daa
push
int3
mov
jo
mov
mov
mov
mov
sbb
movsl
fwait
inc
add
mov
adc
enter
imul
out
and
push
add
scas
cmp
or
fildll
cld
cmpsl
and
stos
inc
out
sub
jge
jge
lds
fstps
sbb
leave
lock
sahf
lret
out
mov
jns
dec
stc
mov
add
inc
jl
sbb
fcomps
stos
xor
pop
jl
into
dec
testl
jae
lods
xchg
roll
push
insl
mov
jns
sti
cs
inc
fs
mov
or
push
fnsave
inc
jae
inc
cmpsl
xor
movsb
fdivrl
out
ret
cmp
jmp
call
mov
xor
xor
nop
ss
cmp
loopne
aas
inc
xchg
mov
bound
clc
mov
les
lea
jle
out
sarb
or
int3
outsl
test
inc
rorl
or
add
or
ficoml
loop
jg
mov
jae
pushf
ret
fstl
sbb
push
imul
push
sub
int3
xchg
push
cltd
sar
xlat
fcomps
mov
cmpsb
pop
xchg
xlat
scas
test
test
pop
sti
gs
sbb
movsl
rcrb
sub
into
std
ret
add
fsubp
jge
hlt
jmp
jnp
jo
jecxz
push
sbb
lea
rorb
sub
fdiv
cmp
mov
mov
push
inc
cmp
mov
dec
and
dec
ret
mulb
adc
popf
jle
scas
sarb
fs
repz
inc
and
arpl
shlb
push
nop
jae
fildll
cwtl
inc
push
std
cmovge
stos
call
pushf
mov
out
jae
sbb
in
leave
in
dec
pop
inc
push
imul
adc
imul
lods
andl
ja
lret
push
or
push
fcmovnbe
fidivl
xor
outsl
add
mov
nop
adc
xor
mov
test
and
mov
mov
lret
push
insl
inc
fnsave
mov
ja
fcoms
xchg
in
hsubpd
je
lds
pop
adc
mov
push
testb
pusha
ret
movsb
pusha
pop
fnstsw
adc
mov
xchg
test
inc
icebp
fidivrl
mov
cs
aam
mov
stos
jnp
lea
jb
pop
inc
jp
stos
gs
dec
ja
test
test
out
mov
insl
mov
lock
mov
stos
repz
and
cltd
fstpt
lret
negb
pop
addr16
push
jp
loop
mov
enter
cmp
es
pop
leave
in
leave
outsl
mov
insl
stos
push
xor
movsl
repnz
mov
notb
push
xor
test
sub
je
xor
icebp
jbe
pop
lret
call
dec
shll
jg
and
lods
scas
cwtl
or
or
push
fs
mov
outsl
fsubs
jecxz
mov
lods
push
out
divb
sbb
inc
jo
sbb
cmpsb
and
lods
pop
repnz
xor
mov
shll
jmp
pop
aaa
shll
loopne
inc
testl
fstl
shrd
aam
mov
xor
lea
jb
rclb
pop
mov
sbb
adc
clc
sti
xlat
jg
sub
divb
movsb
repnz
cli
rorl
ja
std
es
mov
push
cld
lahf
testb
sub
aaa
mov
into
pop
xchg
sbb
mov
mov
jecxz
mov
lock
insb
pop
out
in
adc
fbstp
push
outsl
dec
pop
pop
sahf
push
mov
sub
dec
fstp
stc
mov
aam
dec
insl
fwait
lret
xchg
sub
ret
mov
data16
xor
adcl
imull
dec
cmpsb
dec
sub
mov
xor
ret
daa
cld
ja
mov
mov
outsb
outsb
inc
adc
inc
sarl
ss
fmuls
test
jecxz
ljmp
cs
jecxz
js
mov
neg
lods
add
push
jmp
push
xchg
cmp
stos
iret
lods
xlat
mov
pop
sub
lahf
test
sbb
pop
jl
adc
mov
xor
dec
outsl
jmp
cmp
cmp
add
pop
cmp
lods
icebp
pop
int
repz
movsl
scas
pop
xchg
pop
or
cs
push
dec
jmp
out
fnstcw
addr16
lock
jb
movsl
or
fistpl
stc
test
jle
sub
jne
int3
lahf
inc
stos
mov
imul
push
mov
xchg
mov
mov
int3
or
out
xlat
pusha
lods
pop
scas
insb
xchg
adc
arpl
lret
sub
lahf
push
aam
rcll
push
ret
xchg
sti
cmpb
push
sar
cmp
int3
add
cld
sub
sub
mov
dec
mov
cmc
mov
in
push
sbb
popf
aad
insb
xchg
push
mov
jp
aam
insb
sbb
inc
enter
cmc
in
pop
fisttpl
aas
or
or
mov
xchg
mov
jmp
pushf
aas
add
cmpsl
mov
sbb
dec
nop
inc
lret
adc
push
repnz
bound
pop
mov
push
sahf
sbb
jp
sub
dec
pop
sbb
and
addr16
ljmp
outsb
push
mov
lahf
xchg
loope
adc
dec
sahf
cmpsl
mov
mov
outsb
movsl
xor
lret
imul
add
add
sbb
imul
jbe
les
mov
cmpsl
mulb
push
xor
fmul
clc
jne
inc
pop
es
aad
dec
xchg
push
xchg
mov
push
xchg
jno
and
aam
jo
call
mov
outsb
xchg
adc
stos
add
rolb
test
sub
add
push
rorl
xchg
xchg
lea
in
enter
adc
aad
fisubrl
pop
mov
mov
cmpsl
shrl
pop
jg
mov
inc
xchg
dec
imul
std
dec
js
popf
xor
mov
jb
xor
and
jge
insb
dec
push
mov
and
rcll
mov
ficoms
je
adc
cmpsl
rcrl
pushf
ds
or
or
je
sub
push
lret
pusha
dec
mov
sarl
lahf
jnp
stos
sub
and
in
out
seto
test
cmp
xchg
mov
add
xor
ljmp
mov
ret
or
xor
imul
sti
dec
arpl
arpl
xchg
bound
gs
out
xor
sbb
mov
sbb
mov
adc
mov
cltd
push
cmp
out
into
xor
jmp
fsub
testb
aad
loope
push
mov
sbb
and
int3
fdiv
push
push
dec
stos
push
pop
repnz
or
rcrb
jg
neg
hlt
jne
test
push
fcoml
push
dec
subb
es
pop
inc
add
inc
test
cmp
mov
dec
in
hlt
and
fnsave
insb
out
push
stc
dec
inc
shlb
sbb
nop
dec
mov
cmp
push
sub
int3
arpl
inc
fldcw
call
cmpsl
inc
xor
loop
mov
xor
pushf
fcoms
mov
mov
lods
push
push
inc
outsb
js
fcoms
hlt
sub
mov
cmp
jbe
popa
cwtl
sub
repz
xor
dec
scas
xchg
dec
adc
mov
sub
jae
mov
mov
mov
repz
mov
aaa
mov
roll
sarl
sub
sbb
cmp
out
xchg
nop
or
bound
pop
inc
pop
sarb
and
add
movsb
add
sbb
shll
cmp
dec
in
repnz
cmp
xor
jg
insl
stos
iret
in
sahf
jo
lods
lods
xchg
xor
cmc
ret
lea
scas
push
jg
sbb
shr
add
dec
cli
dec
orb
mov
popf
test
inc
aam
push
cld
shlb
xor
mov
adc
xor
lds
lods
das
hlt
dec
mov
xchg
lahf
ja
pop
add
xlat
jb
ljmp
mulb
cmpsb
daa
movsl
insb
imulb
out
cmp
xchg
mov
jns
icebp
pop
inc
sar
add
adc
cmp
mov
mov
mov
mov
jno
das
test
mov
xchg
repz
fsubp
inc
les
clc
and
adc
in
fistps
js,pt
cmp
inc
push
fdivrs
testb
xor
mov
xchg
fiaddl
outsl
or
rcll
jmp
cmp
mov
cmpsb
imul
push
jle
mov
sahf
cmp
sahf
sbb
jb
frstor
cli
or
sbb
shrl
xor
adc
mov
cmp
jecxz
pop
sub
enter
aad
mov
mov
inc
out
int
jge
in
stos
js
rolb
jbe
lret
xchg
ja
add
ss
faddl
add
out
add
arpl
cmp
out
pushf
sbb
pop
and
mov
je
enter
xchg
std
dec
lret
loop
dec
mov
push
mov
in
push
pop
dec
dec
adc
adc
pop
inc
mov
push
test
hlt
mov
aaa
out
stc
shll
sub
std
cmp
or
stos
daa
push
mov
stc
mov
subl
cmp
inc
outsb
jb
repnz
xor
push
or
mov
lock
mov
mov
arpl
outsb
std
mov
ret
out
cmp
mov
cwtl
adc
cmc
cmp
mov
push
clc
push
movsl
xor
pop
adc
movsb
mov
iret
outsl
addb
dec
xchg
inc
xor
or
mov
clc
mov
test
inc
jp,pt
sbb
inc
xchg
imul
cmp
pop
lcall
mov
mov
mov
scas
and
pop
notb
subb
push
and
jnp
mov
xchg
lock
pusha
lcall
mov
daa
outsb
out
mov
pusha
inc
jno
push
mov
adc
pop
jne
fsubs
es
fsubp
pushw
push
stos
iret
adc
sarb
sbb
mov
inc
leave
sbb
imul
test
sub
jb
jbe
aad
cltd
lcall
data16
mov
jne
lret
daa
jno
push
xchg
adc
pop
sarl
lock
lds
mov
xor
hlt
or
xor
jg
push
mov
movsb
int
adc
lods
in
sbb
lret
ja
mov
cmc
movsb
mov
pop
sub
movsb
mov
ret
pop
adc
mov
mov
pop
jbe
mov
mov
sub
in
rcr
stc
stos
fdivrs
push
gs
cmp
jle
lods
xchg
cmp
call
or
jo
fnsave
push
mov
mov
popf
pop
imul
mov
xorl
sti
add
out
push
outsl
pop
insl
clc
sbb
push
sbb
mov
xor
mov
aad
enter
xchg
ds
mov
cmp
les
mov
sarb
or
dec
xor
jno
mov
and
sbb
rolb
dec
mov
adc
lds
inc
or
xchg
jl
out
leave
loope
mov
inc
mov
jae
push
pop
imul
fimull
mov
xor
xorl
mulb
adc
mov
jno
cmp
and
dec
fmul
fsubr
dec
call
xchg
out
mov
lock
add
insb
idiv
in
jmp
xchg
sub
stos
jo
cmp
sub
outsl
popa
out
andl
xchg
out
std
lock
cltd
push
outsb
xor
jge
pop
mov
dec
or
xor
add
shll
mov
pop
mov
rorl
cmpsb
ja
or
sub
mov
push
jnp
ja
sub
dec
std
jnp
sar
idiv
cmc
mov
sti
pop
incl
xchg
mov
sti
or
ss
and
loop
xor
lret
jmp
mov
stc
rcll
bnd
fwait
into
shrb
ret
dec
xchg
xchg
inc
mov
out
dec
sti
test
adc
mov
add
cmp
jl
out
pop
jne
stos
inc
adc
gs
push
add
iret
jp
xchg
add
nop
cmp
ds
out
or
arpl
div
push
pop
data16
push
cmp
sub
xor
rcrb
lock
cld
loop
sub
out
xchg
lds
push
jle
sbb
xchg
push
inc
out
push
and
or
push
add
push
cltd
pop
jmp
adc
jo
mov
mov
js
and
sbb
jae
push
mov
xchg
cmpsl
cltd
and
ds
mov
inc
lahf
bound
and
push
jae
xor
adc
inc
sti
scas
push
rorl
jno
adc
iret
mov
in
mov
or
fistl
mov
pop
loopne
out
addr16
lds
inc
sbb
aad
jno
pop
pop
dec
rcrl
push
mov
gs
outsb
and
push
and
pushf
clc
inc
stc
mov
dec
jle
jnp
jp
mov
scas
xchg
enter
add
mov
add
cmp
mov
jne
dec
adc
cmp
dec
aad
adc
mov
xor
std
in
push
xlat
imul
filds
or
jmp
mov
scas
mov
pop
pop
dec
insb
fisubrs
xchg
mov
loop
sub
jecxz
push
cmp
pop
inc
mov
nop
js
pop
int3
lock
jbe
mov
lret
sub
dec
mov
lea
sbb
mov
sub
cmp
daa
sbb
pop
subl
dec
lock
adc
in
mov
lea
xchg
cmp
add
or
sti
cmp
mov
test
insl
cmpsb
out
lock
jns
test
jbe
or
push
mov
cmova
inc
jns
pop
xor
fstps
int
test
fistps
out
arpl
orb
cmp
imul
dec
cmpsl
dec
push
jae
xchg
out
leave
movsl
xchg
cltd
sahf
call
jb
xor
in
push
cmp
mov
scas
aaa
cwtl
or
sbb
mov
pop
repz
push
jp
push
jg
lret
mov
jbe
push
arpl
or
pop
cmp
and
out
ljmp
cmp
in
mov
push
jge,pn
mov
push
jmp
aaa
imul
mov
jmp
push
iret
imul
nop
dec
add
cli
xor
jg
mov
sbb
popa
or
jno
sbb
jmp
fisttpll
in
popf
push
hlt
je
mov
jmp
aam
xor
fldt
dec
push
mov
or
test
add
add
ljmp
xchg
jo
xchg
dec
outsb
jmp
icebp
add
mov
mov
add
dec
xchg
cwtl
push
rcrb
sub
xchg
addb
test
stos
xor
fs
js
jecxz
cld
and
dec
add
mov
lock
gs
jle
push
xchg
lcall
inc
popa
imul
aaa
pop
inc
add
xor
jb
sub
repnz
mov
lcall
add
in
outsb
mov
add
xchg
mov
popf
cltd
call
and
int
fbstp
lods
loopne
cltd
dec
sbb
in
notl
mov
sub
pop
fwait
fs
sub
lock
popa
push
cld
cmp
jnp
jae
scas
xchg
nop
push
pop
sub
dec
mov
mov
frstor
adc
or
and
inc
mov
js
mov
xchg
test
in
loop
mov
push
out
and
fsubrs
lret
notb
push
aam
xchg
jbe
jbe
pop
mov
mull
hlt
ja
mov
mov
and
add
mov
and
in
clc
pop
outsb
jno
in
sub
jbe
mov
xchg
hlt
test
sbb
fidivrl
loopne
jg
cmp
pop
jno
mov
mov
call
loopne
fbstp
jge
mov
jno
inc
or
jg
xchg
xor
lahf
popa
sbb
jl
cmpsb
das
iret
cltd
in
push
inc
bound
add
push
sub
push
js
movsb
add
add
add
or
je
add
jle
cli
aas
insb
das
mov
dec
inc
pusha
add
dec
int
jb
pop
xchg
jl
lds
loop
insl
rol
frstor
xchg
fisubl
fucompp
pop
jno
adc
test
insl
pop
push
lret
out
int3
inc
idivb
adc
mov
sub
fisttpl
push
clc
or
xchg
or
mov
or
je
aam
xchg
testl
cmpsb
xor
xchg
mov
mov
mov
imul
int
inc
dec
pop
sti
leave
addr16
rcrl
inc
imul
sti
adc
add
sbb
mov
or
mov
jge
ljmp
sbb
lcall
in
das
xchg
test
pushw
lahf
jge
icebp
cmpsb
ret
pop
jmp
scas
cld
hlt
and
dec
enter
lret
iret
std
out
mov
lock
mov
hlt
xchg
push
sti
cli
jnp
dec
sub
jg
xlat
jnp
cmp
or
jp
mov
mov
cmp
ret
mov
sti
out
insb
cmc
fadd
out
loope
test
pop
fs
inc
xor
dec
or
insb
ret
ss
push
icebp
push
pop
push
sub
stos
fdiv
jae
lret
mov
cmp
loop
loope
mov
stos
dec
adc
xchg
pop
daa
or
cwtl
filds
mov
inc
lods
dec
int
rcrl
cmp
ret
push
pop
cmp
jo
lods
xchg
dec
subl
add
adc
cld
xchg
dec
aas
sahf
test
adc
cmpsb
push
push
aad
mov
jns
inc
jb
and
mov
jno
jno
stos
dec
mov
jne
jnp
pop
test
loopne
aam
sub
roll
cmpsl
xor
xorb
repz
cltd
mov
dec
std
xchg
jl
and
jmp
adc
scas
mov
int
pop
lret
mov
cmp
add
sub
sbb
mov
in
mov
mov
ss
inc
mov
mov
sub
sahf
sbb
xor
roll
lret
cmpsb
or
or
sbb
pop
sti
aas
out
lahf
fs
test
loope
sbbb
pop
ja
push
cld
test
mov
fidivrs
cmp
sub
mov
dec
aad
loop
movsb
in
dec
rclb
int3
lret
or
dec
stos
jge
inc
scas
or
xorb
pop
mov
fists
mov
and
rcrb
adc
dec
or
mov
hlt
sub
sbb
outsb
outsl
stc
rolb
adc
push
mov
mov
mov
cli
pop
fwait
jecxz
pop
addb
inc
or
lods
sbb
mov
lret
cltd
cmp
ret
out
pop
pop
mov
enter
jle
ljmp
xlat
or
or
xchg
out
aam
cmpsl
fwait
mov
add
jp
or
fbstp
sbb
test
mov
pop
push
mov
imull
mov
fucom
add
adc
repnz
lods
into
cmpsb
cmpsb
popf
mov
scas
divb
in
pop
pop
test
mov
aaa
xchg
push
loope
adc
xchg
mul
mov
xlat
push
roll
test
icebp
aas
lds
mov
daa
outsl
test
sbbb
iret
cmp
mov
shll
pop
push
cmc
mov
test
push
sbbl
cli
mov
push
stc
mov
cwtl
dec
jmp
mov
jmp
daa
int
or
test
jecxz
xchg
fldt
cmc
std
repnz
push
jge
push
jl
sti
dec
stos
icebp
and
sub
loopne
int3
sar
adc
pop
push
inc
push
jmp
and
inc
nop
jge
andb
xor
push
xchg
cmp
out
push
pop
jmp
inc
lcall
mov
cmp
loopne
or
adcb
xor
aaa
dec
ljmp
xor
jns
xor
sub
xorb
neg
jecxz
pop
fisttps
xchg
inc
pop
popl
mov
addr16
rorb
inc
fst
dec
or
mov
xchg
or
inc
pop
and
inc
ljmp
and
push
je
jae
xor
sahf
dec
dec
pop
xor
mov
mov
xor
jbe
repnz
push
fldt
mov
out
xchg
insb
pop
outsl
mov
ret
lds
cmp
cwtl
test
sub
adc
out
lcall
int3
shll
into
std
stc
test
push
iret
mov
jl
movsb
leave
and
add
ret
clc
sub
pusha
pop
flds
lods
cmp
outsb
out
jp
dec
mov
std
mov
or
das
sbb
fdivl
filds
mov
dec
lcall
cmp
sub
daa
mov
lock
cltd
mov
jns
pop
out
insl
outsl
mov
jns
ret
mov
cmp
mov
jp
out
sbb
mov
push
bound
and
aam
jg
test
dec
add
jne
fs
stos
push
je
lcall
xchg
nop
lods
das
or
imul
das
mov
repnz
cmp
sbb
pop
mov
popf
leave
jmp
shll
movsb
or
and
dec
or
es
int3
test
xor
or
pop
xchg
mov
mov
or
ds
fsubr
or
push
call
mov
out
sbb
mov
add
xor
data16
dec
pop
sub
imul
sub
mov
hlt
sar
inc
jnp
mov
xor
cmpsb
jbe
mov
jmp
pop
mov
negl
adc
inc
aas
cmp
std
fiadds
mov
adc
and
scas
xor
sbb
notb
loop
lea
ret
inc
dec
test
jno
xchg
mul
pop
jg
or
sbb
add
rolb
sbb
and
pop
movsl
jne
xor
cmpsb
push
imul
fists
outsl
fwait
aad
xchg
adc
xor
mov
push
jb
lret
dec
jo
jb
sbb
out
or
ret
stc
dec
inc
iret
ljmp
enter
adcl
pop
mov
out
xchg
lret
adc
xchg
and
ja
pop
xor
xchg
mov
cld
jp
ljmp
aas
mov
add
repz
in
addr16
sar
ja
mov
adc
iret
xor
pop
rcll
jg
data16
xor
addl
dec
xchg
aas
jnp
cmpsl
out
repz
pop
enter
shr
fimuls
or
inc
stc
jb
adc
ficompl
jne
mov
cs
jb
ret
inc
jnp
and
mov
or
inc
push
and
lock
jl
insl
imul
xchg
orl
rcr
mov
addr16
mov
cmpsb
mov
adc
and
jp
and
cltd
mov
out
mov
push
iret
mov
xor
xor
std
mov
loop
add
pop
dec
dec
arpl
ds
stos
mov
pop
into
movsl
push
sbb
test
adc
mov
rorb
mov
arpl
mov
mov
mov
ret
cmp
pop
cmp
sarl
sbb
inc
jmp
loop
out
subl
pop
cmp
popa
sbb
cs
jno
sub
test
loopne
pop
ja
insl
bound
jns
jno
testl
into
and
inc
or
outsb
insl
mov
jno
in
into
pop
inc
adc
push
filds
imul
add
xor
lea
fisttps
data16
fstps
dec
cltd
pop
sub
sub
or
cmovo
cli
jp
xchg
pop
data16
stos
rcrl
fnstenv
mov
adc
scas
in
mov
mov
std
and
or
pop
cmpsl
les
dec
add
sbb
add
cmc
mov
adc
pop
das
xchg
mov
mov
testl
sahf
jae
loop
inc
into
sub
jmp
lret
mov
mov
movsb
mov
daa
rcrb
inc
mov
and
xor
pop
clc
int
xchg
dec
dec
insl
pop
xlat
hlt
cmc
das
js
inc
push
negb
call
pop
dec
and
std
test
loopne
ljmp
int3
into
push
push
mov
nop
sub
adc
sub
dec
test
scas
lret
and
pop
dec
out
mov
mov
aaa
or
adc
fildll
sub
loopne
push
mov
imul
pop
out
mov
or
dec
fldcw
lea
mov
lret
int
dec
rorb
dec
mov
push
or
sahf
push
jle
icebp
ss
inc
and
mov
nop
jno
dec
inc
adc
rcrb
sbb
xchg
push
add
sub
push
testl
cmp
or
jne
xor
xchg
push
adc
loopne
mov
or
int
jbe
dec
mov
popa
bound
cmp
subb
sub
lret
jp
test
mov
mov
xchg
adc
xor
movsl
sbb
fisubs
cld
push
lea
sub
cmp
mov
sbb
fistl
cmp
loop
out
sub
lods
call
or
js
or
xlat
jge
and
pop
mov
adc
or
inc
mov
loopne
push
add
notl
sub
add
cmp
or
sbb
adc
push
inc
mov
leave
pop
insl
outsl
mov
je
adc
mov
lds
movsb
mov
add
stos
mov
push
pop
mov
dec
cmpl
pop
pop
and
inc
pop
xchg
inc
int3
adc
sbb
xchg
lock
ds
cli
mov
sbb
lret
outsb
call
or
stos
mov
push
inc
outsl
push
sub
pop
mov
data16
dec
pop
xor
jg
and
loope
sbb
imul
aad
fsubs
jmp
loope
xchg
lds
add
leave
inc
stos
jg
sahf
jbe
xchg
mov
cmp
rcrl
xor
adc
mov
push
xchg
fstpl
cmc
ret
mov
cmp
push
inc
push
test
lcall
add
imul
dec
xlat
stc
fistpl
loopne
and
push
dec
js
mov
or
inc
cld
xor
sbb
mov
mov
mov
mov
adcl
mov
stos
daa
dec
mov
or
or
cmp
sbb
pop
cmpsb
daa
mov
mov
push
push
push
shll
movl
pop
das
pop
test
fwait
loope
inc
pop
jecxz
lds
adc
jl
test
orl
outsl
jne,pn
sub
in
cmp
movsb
jmp
out
shlb
addr16
test
pop
ss
jnp
xchg
mov
fsts
mov
aaa
sbb
pusha
outsl
mov
mov
maskmovq
mov
insl
cmp
mov
sub
xchg
mov
fsubrs
dec
mov
roll
icebp
sub
push
mov
js
fisttpll
xchg
fnstsw
push
jne
mov
xchg
cld
cld
cmp
lahf
jno
pushf
sbb
push
push
fsubs
insl
into
lret
addr16
int
int
fsubl
and
sub
cmpl
mov
xchg
jo
int
xchg
dec
psubsw
int3
shlb
popa
jae
stos
adc
and
and
stos
shrl
dec
pop
sbb
es
outsl
dec
xor
rolb
mov
fsubl
cmp
rolb
push
inc
pop
pop
adc
sub
repz
fiaddl
les
in
xor
iret
pop
jne
jne
rolb
push
pop
push
les
outsl
loop
bound
repz
fmull
mov
inc
mov
mov
xor
push
test
jecxz
dec
std
add
jle
inc
fisubl
out
mov
mov
addb
pop
test
loop
adc
adc
mov
or
jb
cli
push
divb
hlt
loope
das
xor
adc
repz
or
pop
mov
int
and
fwait
outsb
mov
cmpsb
into
sub
add
popf
mov
adc
repnz
and
jo
dec
enter
inc
mov
lock
insl
iret
mov
aam
jbe
cmp
push
lcall
jae
sahf
cmpsl
cmpsl
or
push
sbb
mov
imul
inc
negl
rorb
push
lock
mov
roll
in
decl
aad
jecxz
gs
call
mov
dec
push
iret
jp
out
jb
push
das
data16
sub
das
js
int3
les
sbbb
pop
jmp
cltd
mov
mov
out
mov
mov
ljmp
adc
test
sahf
push
and
push
lea
ss
lods
xor
sub
daa
movntq
imul
stos
inc
enter
lds
or
push
mov
hlt
pop
aad
inc
and
cmp
orl
inc
cmp
rclb
push
sarb
lret
mov
mov
jno
pop
lods
jge
imul
pop
or
pop
push
add
movsl
pop
mov
js
in
repz
add
aam
ret
dec
and
test
inc
out
mov
jl
sti
mov
aad
insb
lods
ljmp
shr
xchg
xchg
cwtl
lods
jp
out
sar
out
push
or
fsub
sbb
mov
mov
pop
inc
loopne
loopne
jne
inc
jmp
int3
cs
pushf
adc
std
addr16
ja
dec
mov
popf
xor
ljmp
mov
sub
nop
dec
dec
out
push
stos
xor
dec
sbb
cmp
mov
adc
jae
or
fs
jns
push
fbld
mov
xor
filds
fmuls
ret
dec
pushf
xchg
push
fdivrl
add
push
jmp
iret
inc
stos
inc
mov
mov
mov
xchg
sbb
test
or
cmp
cli
dec
mov
inc
in
jno
push
and
test
inc
adcb
sbb
xchg
icebp
push
cmpb
cmpsb
dec
loopne
and
mov
adc
insb
inc
rcl
iret
jns
dec
sbb
fs
pop
add
push
xor
int
push
out
cmpb
mov
test
xchg
pop
pusha
pusha
pop
sub
mov
pop
je
movl
sub
pop
or
push
pop
push
in
into
lea
test
cmp
jmp
popf
test
sbb
out
loopne
inc
xchg
or
dec
ds
jmp
xchg
hlt
mov
xchg
in
in
pop
cwtl
fcoml
sub
gs
in
int3
or
test
das
mov
mov
and
push
test
out
push
rolb
add
xchg
daa
and
sbb
cmc
pusha
mov
lcall
das
cli
jecxz
push
mov
inc
hlt
subb
ds
aas
dec
adc
pop
mov
xchg
fwait
mov
shlb
fs
push
rcrb
outsl
in
xchg
sti
addl
sub
fxch
xchg
mov
lods
sbb
fistpl
enter
flds
push
sbb
jl
js
mov
loope
movsb
cmp
mov
push
test
mov
arpl
unpcklps
adcb
add
pop
add
stc
ficoms
push
and
pop
xor
mov
cmp
pop
lods
ja
dec
adc
das
sbb
adc
or
jo
add
jne
lahf
int
cs
dec
cmpsb
add
inc
mov
and
and
mov
outsb
or
jle
jmp
out
cs
cmp
inc
or
std
popf
ds
leave
and
hlt
popa
mov
sarb
cwtl
mov
leave
pop
xor
das
orb
rclb
jae
inc
sbb
cmp
or
pushf
outsl
push
mov
orb
scas
inc
cmp
call
pop
jno
aam
pop
or
into
add
lret
push
sbb
inc
push
fisttpl
cmp
clc
sub
pop
daa
sti
xchg
js
cs
jo
imul
add
lock
cmpsl
xchg
imul
movsb
jnp
int3
inc
push
jp
out
jmp
add
aas
cs
or
inc
jmp
xor
lcall
pop
cltd
cs
out
cmpsb
or
mov
mov
fsubrl
jnp
jne
ljmp
sbb
xor
call
xor
cmp
push
pop
vpshab
out
scas
out
out
or
sahf
into
movq
imul
aad
insl
scas
cmp
mov
loop
fbstp
jp
dec
sub
icebp
imul
xor
mov
cmp
ret
adc
popa
cmp
movsl
sub
mov
nop
lock
cltd
or
out
inc
data16
and
outsb
repz
lock
in
push
pushf
jg
loop
scas
inc
xchg
in
aas
sub
rcrb
scas
adc
fucomip
push
aas
pop
in
or
pop
pop
pop
lret
repnz
das
pop
nop
js
imul
inc
ja
jl
mov
cmp
rolb
stc
mov
cld
dec
xchg
cs
jecxz
jns
jle
mov
pop
cmp
jge
fimuls
scas
mov
push
movsb
cld
push
leave
push
sarb
ds
cmp
cmp
or
mov
or
pop
pop
sti
xor
cld
jno
imul
cli
dec
mov
cmp
subl
push
sbbl
xor
jnp
test
jg
nop
push
jns
dec
cmp
outsb
xor
mov
cli
adc
jae
shr
movsl
push
push
insl
add
arpl
push
sub
or
lods
repnz
xchg
inc
aad
mov
inc
xchg
add
out
or
push
add
int
or
int3
jmp
rcrl
outsb
jno
mov
lods
fdivs
rcrl
int3
or
and
mov
adc
insb
sub
ja
xor
inc
dec
stos
outsb
pushf
mov
mov
adc
jbe
sub
cmp
xor
repnz
repz
pop
cmpsb
push
pop
push
xchg
cmp
xchg
ret
inc
adc
das
fwait
pop
dec
xchg
movsb
xchg
out
dec
ret
cmp
aas
adc
gs
xchg
dec
add
or
test
push
sbb
xchg
add
popa
movsl
imul
cwtl
in
and
sub
or
push
push
lock
and
inc
rcrb
inc
test
rcrb
out
adc
and
jb
arpl
jb
lock
inc
stos
jns
xchg
sbb
loop
imul
jg
and
outsl
bnd
loope
xor
loope
jo
jl
mov
sbb
jp
add
out
jno
icebp
adc
mov
cmp
inc
loop
in
in
sub
inc
sti
int
pop
xchg
sub
mov
dec
rol
stc
pop
inc
mov
xor
fisubrs
enter
sbb
insb
aas
add
stos
rsqrtps
or
mov
jmp
or
in
mov
dec
push
xor
jmp
insb
jle
dec
mov
fildl
lret
mov
jnp
stos
addb
mov
ja
fcmove
pop
test
jmp
lock
push
sub
fimull
jno
mov
add
cld
lahf
out
ret
inc
adc
in
adc
sbb
scas
xorl
pop
orl
cmp
clc
xchg
or
jp
xchg
addr16
jl
neg
dec
push
push
sahf
cli
sbb
mov
mov
fisubrs
fadds
ss
push
mov
cmp
xchg
jns
orb
inc
popf
repnz
push
in
jne
out
jae
test
dec
add
enter
ret
and
xchg
jae
and
popa
decl
insl
int3
sbb
adc
iret
icebp
cmp
xchg
scas
fstpt
jp
push
xchg
jae
inc
mov
int3
icebp
mov
popf
pop
hlt
inc
xor
test
insb
aaa
rcll
add
cmpsl
fst
pop
lcall
aaa
sbb
loopnew
ja
fsts
mov
jmp
ja
cmp
test
mov
xchg
jge
daa
fs
aaa
lahf
repnz
xlat
mov
jle
lcall
mov
sti
inc
dec
rol
jle
in
cmc
ja
mov
ja
sbb
popf
jge
inc
iret
scas
mov
lods
mov
insl
push
mov
sbb
sbb
mov
jbe
xor
push
pop
pusha
xchg
cs
mov
cli
jmp
hlt
mov
xchg
add
pop
cmpsb
dec
or
ss
add
inc
testb
mov
repz
jmp
lds
jge
stos
jne
push
xor
ficomps
mov
adc
adc
or
sahf
stc
in
or
lahf
out
xor
xchg
push
outsl
adc
pop
aad
jb
inc
test
nop
mov
stc
push
pop
ficompl
xchg
sub
mov
mov
and
lods
push
addr16
jb
jp
inc
lcall
test
shrb
stos
push
sbb
mov
inc
inc
xor
mov
mov
xchg
xor
xchg
loop
jmp
mov
ds
je
out
int3
outsb
jbe
or
leave
stos
out
lods
adc
arpl
test
pop
dec
push
fcomp
in
inc
push
sbb
hlt
cmpsl
int3
ret
and
mov
push
fisttpl
inc
out
leave
push
jno
push
sbb
or
push
rolb
adc
aad
mov
jno
sbb
xchg
adc
pop
outsb
je
xchg
mov
push
sub
loopne
push
push
mov
dec
out
add
icebp
mov
jns
jge
sahf
cld
out
xchg
outsl
sarb
outsl
mov
sti
mov
fldenv
je
aas
jle
adc
jl
sti
pop
pop
inc
push
fldln2
ret
xchg
adc
sub
fcompl
shrb
jne
in
mov
clc
jae
pusha
lahf
ret
jnp
out
dec
push
in
jp
fmul
or
add
and
xchg
mov
fistpl
mov
je
cmc
popf
stos
xchg
scas
test
xchg
popfw
test
fcompl
mov
subl
movsl
mov
stos
sbb
dec
loopne
ret
in
cltd
ljmp
cmc
mov
cld
shll
mov
cltd
fsts
ljmp
dec
pop
fistpll
cmp
jle
daa
mov
sbb
xchg
sbb
jae
dec
stos
insl
daa
pop
push
pop
sub
or
push
and
sbb
out
cmp
or
fs
movsb
into
sbb
jl
fs
adc
mov
movsl
icebp
push
mov
pop
or
mov
lcall
push
das
jle
adc
shlb
in
jns
dec
pop
shll
push
mov
mul
xor
or
in
jl
and
jmp
subb
xchg
inc
rcrb
sarb
and
das
mov
sbb
mov
es
imul
xchg
and
adc
pop
cli
mov
pop
aam
xchg
inc
mov
sub
fistpll
add
nop
imul
lret
xor
sbb
ror
leave
cmc
mov
ret
arpl
fisttpl
inc
push
icebp
push
nop
repz
repz
daa
mov
loope
and
int
pusha
sbb
jne
mov
pop
mov
cmp
push
jo
movl
cltd
enter
lret
mov
fldcw
push
mov
mov
xchg
add
aam
fcomp
xor
data16
stos
pop
cmpsb
idivl
imul
dec
jecxz
jb
adc
ret
pop
scas
aaa
fildl
js
enter
adc
fisttpll
dec
out
sub
insl
test
mov
test
daa
or
arpl
pop
add
insb
jb
movb
or
je
jo
out
add
jmp
gs
jl
xorb
imul
sub
cmp
cmp
out
sub
sbb
fstl
and
out
lahf
adc
mov
xor
rclb
mov
insb
out
es
mov
add
ja
sbb
xchg
or
push
aas
rorb
or
pop
mov
inc
clc
mov
pop
add
cltd
lahf
adc
cmpsb
and
movsb
scas
lcall
xor
mov
push
out
dec
enter
pop
push
mov
sub
loopne
inc
push
fcoms
jo
pusha
movsl
int
cmp
add
arpl
stc
dec
mov
mov
mov
ja
jo
andb
mov
and
dec
mov
add
xor
dec
cmp
push
sahf
cmc
insl
loop
ffree
sar
push
ss
int3
inc
xchg
addr16
aas
loop
jecxz
or
mov
xlat
push
lock
movsl
call
or
jmp
mov
jno
aas
scas
fsubl
cli
imul
xor
sub
out
insb
mov
push
add
mov
cld
jae
sub
pop
jmp
mov
xor
aam
call
int3
mov
xor
out
and
aas
mov
mov
jecxz
cmpsb
jle
or
aad
pop
clc
sub
call
sub
call
xlat
pusha
push
aad
fcomps
jo
repnz
push
jbe
aas
adc
imul
jmp
jecxz
inc
in
add
jbe
push
addl
xor
movsb
jp
fwait
jns
push
lret
cmp
inc
loopne
cmp
aas
mov
data16
insb
outsl
xchg
inc
jg
fidivrl
dec
or
cmp
dec
sbb
mov
or
sbb
push
sub
loopne
test
imul
inc
cmp
scas
push
mov
sarl
testl
repz
and
rcll
adc
and
lods
fs
stos
jge
and
or
xchg
cmp
aaa
jb
dec
pop
xchg
hlt
or
mov
outsb
scas
out
mov
dec
add
test
adc
sahf
daa
scas
jg
sub
fcoml
dec
mov
adc
outsl
or
in
push
imul
int
pop
jle
imul
push
jnp
sbb
inc
jb
mov
ljmp
cltd
lahf
dec
adc
inc
fdivrp
insl
or
bound
movsl
mov
add
xchg
push
fs
pop
je
pop
mov
fcmovnu
sub
aam
loope
sub
inc
pushf
add
or
iret
dec
xchg
xorl
loopne
cmp
outsl
pop
mov
cwtl
sbb
pop
mov
movsb
fdivp
mov
add
inc
std
stos
mov
lcall
or
inc
mov
test
add
in
ret
int
push
sbb
andb
sub
movsl
push
pop
push
push
mov
fs
cs
lock
cmp
ss
add
mov
sbb
adc
xchg
push
outsb
jg
sub
dec
pop
and
test
loope
sbb
repz
lret
and
pop
and
fwait
and
adc
cmp
clc
mov
lcall
cwtl
cltd
inc
call
loop
inc
enter
pop
or
lahf
and
icebp
and
shrl
loop
sarb
dec
push
leave
cmp
nop
sarl
test
divb
cmp
jno
adc
orb
mov
adcb
add
push
mov
test
pop
sar
jmp
negl
cmp
xorb
dec
and
push
inc
cmc
xchg
insl
je
mov
mulb
gs
pushf
pop
lret
pop
cs
cs
iret
mov
mov
mov
out
mov
mov
jb
iret
sbb
pop
lea
xchg
mov
adc
mov
push
out
cwtl
xor
loopne
cld
jae
ljmp
mov
std
xchg
mov
or
push
mov
and
jle
pop
jno
mov
leave
cmp
sub
cmp
js
push
and
or
add
outsl
add
adc
je
mov
aaa
jp
fnstcw
insl
add
std
insl
xchg
daa
dec
dec
sub
pop
scas
and
aam
pop
sub
fwait
jecxz
inc
cmp
test
or
push
add
call
and
add
jmp
mov
popw
int3
push
or
inc
cmp
add
lock
lds
subl
fnstcw
aas
cwtl
iret
testb
lods
in
in
testl
inc
push
or
daa
mov
loop
jp
cltd
test
lret
leave
xchg
fs
testl
xor
mov
and
lret
adc
cmp
test
push
icebp
pop
fidivrl
xchg
jp
pop
push
fsubp
shlb
ds
cld
popa
iret
inc
cltd
dec
mov
jmp
xor
push
cmp
stc
int3
sti
mov
icebp
es
pushf
jae
push
inc
bnd
push
ljmp
loop
inc
sbb
hlt
mov
or
or
pop
adc
outsb
cld
mov
iret
push
in
push
cltd
push
ret
mov
mov
popa
enter
cltd
enter
jno
mov
jne
xchg
lods
lods
test
loop
gs
subb
inc
inc
flds
mov
aaa
cmc
pushf
jge
movsb
adc
jle
push
or
out
or
xchg
mov
shr
addb
ss
adc
popa
fcomps
call
pop
loope
fmuls
dec
test
pop
popf
pop
add
mov
pop
pop
jne
test
mov
xchg
lds
dec
lds
jmp
add
test
jecxz
mov
inc
ficomps
xlat
loopne
lahf
cltd
xor
insl
xchg
pop
jns
movb
insb
movsb
xchg
cld
or
mov
out
jmp
pop
sti
jno
in
push
shl
call
and
ja
sbb
jp
and
out
subb
sub
int
imul
jmp
gs
pop
sub
adc
push
xor
or
es
or
pop
incl
dec
lock
ret
ljmp
aas
push
lea
jmp
cmp
in
jecxz,pt
xchg
lahf
fiaddl
jg
fisttpl
iret
or
jl
jg
or
and
aas
ficompl
and
mov
out
fistl
insb
insl
sbb
jmp
mov
pop
bound
in
cmpsb
js
mov
mov
mov
push
jl
push
mov
rsm
loopne
mov
xor
xchg
or
out
imul
hlt
hlt
mov
cmpl
add
lock
add
mov
add
xor
inc
test
mov
repnz
dec
jne
shrl
sbb
inc
loopne
add
js
loope
dec
or
in
das
icebp
jnp
cmp
dec
movsl
xor
js
and
jge
sahf
nop
dec
sbb
ljmp
cmp
test
cmp
add
pop
cmp
jne
push
mov
cmpsl
inc
sahf
xchg
dec
mov
pop
loope
bound
xlat
sti
repz
push
and
push
dec
sti
jmp
lods
mov
mov
xlat
jne
outsl
xchg
xchg
les
mov
sbb
or
call
jg
gs
lahf
xchg
jp
imulb
popl
push
sti
or
adc
cli
pop
and
aad
sbb
jmp
leave
clc
adc
data16
ja
iret
sub
insl
inc
in
rorl
pop
mov
push
inc
dec
dec
or
sbb
shll
add
sahf
dec
add
lock
mov
push
adc
sbb
mov
mov
inc
es
xchg
push
pop
shl
xchg
int3
mov
sub
scas
push
insl
stc
ret
lods
arpl
mov
test
mov
xchg
xlat
jnp
cwtl
pop
and
sub
das
and
jmp
dec
or
jmp
xchg
in
testl
arpl
leave
cwtl
or
arpl
push
sarl
pop
pushf
sahf
fstps
mov
dec
iret
in
sub
shlb
and
adc
mov
jp
xor
faddl
push
lcall
fldt
fildll
cmp
out
addr16
xchg
mov
scas
push
bswap
sub
pushaw
mov
add
leave
cmpsb
loop
inc
push
xor
cmpsb
mull
into
xlat
add
imul
fsubl
ret
push
pushf
fsubrs
sub
push
cltd
push
sbb
test
cmp
cmp
in
add
jns
xchg
add
into
push
jmp
into
xchg
scas
mov
mov
xor
sbb
pop
pop
ss
lock
and
add
inc
loop
subl
lock
ljmp
add
pusha
or
fwait
repz
js
lds
jl
pop
xchg
mov
xor
jmp
mov
inc
pop
push
pop
cli
iret
sub
loope
jns
push
stos
cmp
mov
cmp
sub
leave
adc
or
mov
mov
andb
ret
xchg
xor
sbb
sti
xchg
adc
sub
sub
sub
fs
push
jns
div
in
test
push
mov
bound
mov
xchg
dec
scas
pop
repz
mov
or
nop
imul
pop
test
popa
ja
cld
stc
lahf
jg
inc
sub
or
pop
inc
dec
insl
insl
pop
or
out
lods
in
je
lock
inc
jmp
sti
aas
adc
cmp
fildl
rcr
jbe
xcrypt-ecb
cmpsl
leave
mov
adc
pushl
jo
fwait
rclb
outsb
sub
addl
push
lcall
jne
outsb
mov
jno
sub
inc
xchg
push
push
fdivrs
into
mov
or
nop
adc
add
jl
iret
xchg
dec
sarb
fisubs
sbb
xchg
test
lods
ja
xchg
add
je
sub
cli
addl
jnp
dec
and
lret
nop
and
fstpt
sbb
movsl
jmp
adc
movsl
in
adc
lods
andl
mov
shlb
lahf
fcmovnbe
mov
adc
adc
jo
or
dec
out
push
ja
xchg
ja
andl
iret
cmp
cmp
mov
scas
xchg
imul
jmp
push
clc
mov
popa
adc
jl
aaa
int3
jl
stos
adc
jns
adcl
cmp
dec
cmpsl
dec
mov
pop
fcmovnbe
cs
cmp
jge
dec
insl
leave
loope
stc
fdiv
push
push
iret
inc
repz
sub
roll
cmpsl
jmp
sbb
mov
xchg
dec
jmp
mov
push
scas
mov
mov
fdivs
fadds
adc
cmpsl
fisttps
mov
out
fwait
mov
xchg
fdivs
mov
adc
andb
dec
dec
inc
in
hlt
xchg
mov
and
push
and
mov
and
sbb
insb
xchg
mov
push
mov
dec
es
xchg
and
and
adc
inc
xchg
xor
lahf
int3
in
mov
dec
jns
into
push
ds
push
subb
xchg
mov
sbb
xor
rorl
int3
cmpl
push
mov
ja
dec
sbb
mov
jle
and
test
mov
shll
push
mov
adc
lock
cmp
fldcw
sub
insb
mov
call
push
inc
jae
push
sti
pop
adc
jle
sub
call
inc
fcoml
into
push
jg
ret
dec
rcll
jg
sahf
push
hlt
xlat
jecxz
ljmp
xchg
stos
sbb
scas
push
lods
int
cmp
lret
jecxz
aam
add
sar
sub
pop
mov
out
mov
aad
xchg
inc
fildl
hlt
jne
imul
mov
lods
enter
mov
mov
push
jbe
rorb
aaa
dec
pop
and
ficoml
lret
cld
add
push
sub
in
adc
out
jmp
sub
push
mull
aaa
add
ret
and
xor
lds
jp
ljmp
cltd
xor
outsb
push
cmp
lds
jecxz
sub
rcll
iret
jle
idivl
xchg
movsl
pop
popf
jb
pop
aad
dec
lock
sbb
add
dec
shrl
inc
mov
jne
loop
stc
pop
xchg
popl
jne
fwait
push
lcall
sub
cli
leave
rol
in
xchg
movsb
jae
inc
int3
cmc
data16
and
sbb
and
insl
cld
jne
call
push
fildll
cmp
mov
adc
adc
jo
mov
jne
jmp
xchg
dec
dec
mov
stos
ljmp
cmp
or
inc
xchg
pop
inc
cwtl
setae
xor
out
aad
dec
pop
dec
xor
insb
stos
decb
lret
sub
pop
pop
cmp
push
lea
fsts
sbb
cmpsl
mov
adc
push
jle
jne
pop
rcl
xor
movsb
xchg
nop
popf
mov
outsl
or
pop
xor
xor
mov
mov
hlt
xor
test
pop
cmp
or
test
popa
nop
decl
out
ds
mov
jmp
push
push
pmaddwd
js
cmp
out
jns
lock
aaa
fcomip
push
push
ficoms
cmp
or
fwait
jae
adc
nop
jnp
mov
mov
aam
mov
and
js
push
sbb
hlt
test
mov
sub
sahf
fucomip
cmp
push
mov
ljmp
in
shl
or
fs
sub
cltd
cwtl
ret
xor
repz
mov
xor
xchg
cmp
scas
add
sti
mov
jne
pushf
out
sarb
pop
sub
adc
pop
rolb
mov
lahf
cmpsl
mov
cld
sub
cmp
aad
mov
push
xor
sub
lret
sub
insb
pop
sbb
aam
mov
ret
pop
push
and
xchg
jecxz
stos
aas
or
icebp
mov
fwait
sbb
sbb
cli
xchg
mov
leave
inc
add
pushf
fsubrp
fistps
mov
les
loop
das
loopne
sub
leave
xor
and
ja
lock
mov
inc
sub
dec
jg
push
xor
xchg
jb
fs
and
movsl
out
mov
in
repnz
xor
sub
cmp
pop
dec
push
loop
push
loop
sbb
js
xor
mov
out
jne
popf
inc
lea
sbb
movsl
fwait
adc
scas
cmp
adc
ret
in
insb
cmp
mov
mov
inc
insl
pop
mov
je
sub
xor
cld
in
mov
pop
jle
add
cld
mov
ss
stc
xchg
aad
rcr
insl
inc
inc
cli
popa
fcoml
outsl
mov
mov
sub
xchg
or
fisttpll
arpl
popa
call
rcl
mov
test
sbb
jae
sahf
mov
jae
cmp
mov
imul
xchg
sar
outsl
bnd
adc
and
aas
or
or
or
fcoml
xor
dec
out
xchg
mov
bound
idivl
mov
xor
je
push
scas
mov
sarl
cs
scas
jb
imul
push
sbbl
push
pop
inc
out
mov
and
ret
jae
aaa
ret
ret
mov
adc
pop
popf
ss
xor
sbb
loop
add
in
out
cmp
repnz
icebp
jp
push
push
bound
insl
ret
inc
imul
mov
push
adc
sub
mov
ds
testl
push
pushl
push
push
pop
sar
xchg
stc
mov
pop
and
call
fiaddl
lret
loope
jns
sbb
dec
daa
mov
xchg
sti
adc
iret
mov
mov
sub
ja
incb
add
push
sub
inc
pop
bound
jns
add
add
cli
in
bound
rol
stos
push
sub
fucom
sub
int
rorl
cmpsl
leave
jne
mov
pop
mov
ret
scas
out
shrb
push
andb
xor
jo
jnp
cmp
push
adc
sub
push
rol
add
add
sbb
xor
fdivl
insl
out
iret
test
sbb
cmp
cmc
jecxz
int3
rol
add
aaa
or
addr16
push
push
lcall
mov
aam
and
in
scas
jmp
xchg
scas
fnstcw
adc
insb
test
inc
loope
rcr
loopne
aad
lret
ret
inc
sbb
xorb
push
mov
cli
push
addr16
movsl
mov
mov
ss
shll
push
adc
enter
pop
in
adc
shlb
mov
xchg
sbb
adc
insb
or
sahf
pop
ret
push
inc
mov
loope
jmp
pop
lods
ss
mov
mov
sahf
sub
cmpsl
add
test
push
xchg
clc
ret
test
pop
add
or
push
adc
inc
js
mov
pop
add
cmp
test
lock
jno
lods
mov
mov
push
mov
dec
pop
addl
xor
add
jbe
lahf
dec
mov
pop
mov
mov
addr16
leave
xlat
popa
sub
js
mov
fs
push
out
sub
punpckhwd
and
sub
pop
pop
and
jp
or
orl
cwtl
gs
mov
inc
into
xchg
stos
out
push
insb
add
test
pusha
icebp
jge
jge
sbb
jae
push
cli
cmp
mov
rcrb
mov
mov
pop
adc
cwtl
mov
andb
lcall
in
or
daa
sbb
dec
call
fwait
stos
adc
ret
gs
xor
sub
sbb
loope
sub
xlat
adc
adc
int3
sbb
dec
jmp
andl
and
inc
xchg
mov
sub
sti
xor
imulb
fidivl
fwait
mov
jnp
cmp
fbld
orl
call
popa
push
dec
sti
cld
jne
xor
dec
pop
les
mov
mov
xor
orl
decb
das
inc
inc
sbb
dec
dec
pop
pop
mov
ficoml
mov
repnz
add
add
in
repnz
mov
enter
jno
and
xchg
and
fs
jg
gs
mov
sub
repnz
mov
jecxz
divb
push
mov
daa
daa
dec
bound
jmp
add
pop
daa
xchg
pop
add
aas
jne
pop
cltd
xchg
neg
mov
fildl
push
sbb
mov
push
scas
pop
vshufps
sbb
sahf
jnp
mov
stos
dec
push
clc
out
adc
sub
adc
inc
cmp
xchg
mov
fistpll
fstp
and
call
xchg
in
jnp
jle
mov
adc
movsb
test
xor
lret
sbb
pusha
fdivrl
mov
push
xor
jmp
test
fildl
sti
sub
dec
xchg
mov
cltd
scas
repnz
test
lea
xchg
dec
cmpl
mov
shrl
in
push
shlb
sub
aaa
outsl
sti
jo
jno
pop
pop
cli
mov
add
mov
jbe
dec
pop
mov
and
push
cld
xchg
push
fists
mov
jbe
jge
mov
popf
mov
xor
clc
mov
lods
enter
mov
pop
testl
nop
in
addr16
mov
stc
mov
mov
mov
rorl
lret
sahf
cwtl
in
adcb
repnz
add
scas
mov
push
pusha
pushf
sub
cmc
xchg
cmpsl
popa
or
sbb
push
cld
add
in
dec
adc
dec
popf
lds
sub
clc
pop
mov
mov
lahf
adc
fwait
xchg
sub
xchg
sbb
loopne
lds
mov
out
mov
add
bnd
pop
pop
jle
dec
xor
ret
xchg
mov
imul
jo
insb
insl
hlt
mov
sub
jecxz
cmpsb
js
test
pop
lret
mov
testb
ja
hlt
sbb
adc
idivl
fs
cmp
and
mov
and
push
mov
int
lds
cltd
daa
xor
cwtl
sbb
testb
repz
jmp
and
or
dec
add
inc
and
sarb
mov
cmpps
aad
nop
inc
outsl
push
or
bound
mov
lahf
fs
mov
jmp
dec
sub
call
xlat
xchg
out
fidivrl
lds
fisubrs
mov
and
jge
mov
push
sbb
jbe
cmp
stc
icebp
scas
and
inc
cmc
mov
movsb
js
call
lret
imulb
cmp
jns
mov
into
out
bswap
and
cmpsb
aas
into
out
popa
and
mov
or
mov
imul
inc
cmp
dec
testb
lds
fnstsw
rcll
data16
add
sbb
pop
call
addb
sub
mov
push
pop
loope
mov
dec
mov
cmpsb
cmp
push
xor
mov
test
insb
cmp
mov
or
adc
mov
xchg
jmp
adc
add
push
fisubl
and
mov
aas
fwait
sub
jge
outsl
pop
lods
push
inc
roll
out
dec
push
pop
dec
xchg
cmp
ss
movsl
xor
js
pusha
jo
out
mov
mov
cmp
popf
test
movsb
out
or
lock
cld
popa
cltd
inc
xlat
cmp
fwait
sbb
push
loopne
sub
mov
xlat
inc
in
das
out
ret
push
sbb
aad
add
cltd
fucomp
dec
pop
repz
fstpt
and
mov
or
int3
sub
or
enter
lock
xor
sbb
jl
ja
push
xchg
and
inc
cwtl
jg,pn
push
cli
cld
mov
or
dec
and
shlb
into
pop
fstl
xchg
sahf
mov
adc
ljmp
ret
and
rorb
mov
xlat
xor
add
jl
pop
jne
jge
mov
rcll
dec
es
adc
inc
pop
mov
das
adc
jns
mov
or
push
enter
jae
andl
hlt
pop
sub
ja
adc
movsb
xchg
sbb
iret
inc
loope
sahf
add
dec
mov
clc
loopne
aaa
cmp
push
sub
enter
add
adc
test
daa
dec
je
insb
frstor
xor
sub
icebp
xor
mov
adc
mov
shll
out
mov
add
stos
xor
sbb
inc
sbb
pop
inc
notl
popf
sbb
icebp
loopne
dec
sbb
cmpsb
mov
fnstsw
fadds
push
inc
adc
pop
xchg
fcoms
adc
out
insl
shlb
mov
jnp
xchg
int3
adc
lret
or
xor
movsb
xchg
push
lret
inc
imul
mov
daa
mov
arpl
cmp
fstps
pop
or
mov
lret
sub
inc
sbb
lahf
push
mov
jne
cmp
iret
xchg
jl
and
dec
sbb
jl
aam
mov
adc
cmpb
hlt
xchg
mov
pusha
lods
mov
dec
loop
and
jns
cmpsb
inc
repz
ret
std
icebp
movsb
xchg
inc
out
add
pop
cmp
pushf
push
xchg
mov
and
jg
test
push
gs
sbb
xor
fwait
mov
sbb
in
ljmp
xor
adc
cmp
int
cld
mov
lods
addr16
aad
push
and
or
inc
add
gs
jae
push
jmp
add
mov
cmp
lock
dec
pop
out
leave
jo
and
inc
cmp
xor
xor
cmpb
inc
dec
loopne
arpl
movsb
fadd
mov
rcr
ficoml
dec
aad
nop
sar
outsl
sub
imul
cmp
insl
cmp
addl
sti
inc
inc
push
sub
clc
out
int3
movzwl
gs
cs
int3
dec
rcll
inc
push
inc
mov
orl
pop
cmpsl
repz
xchg
push
push
shlb
xchg
dec
cmp
inc
sar
cli
sbb
jae
lcall
pop
mov
mov
popa
out
es
lret
mov
dec
daa
mov
dec
rolb
xchg
adc
js
lock
sub
xchg
rclb
lahf
mov
arpl
xor
mov
ss
addb
push
cld
xor
rcll
in
movsl
stos
ljmp
sti
pop
ret
data16
or
scas
daa
jns
adc
xor
enter
lea
lahf
lcall
inc
sub
dec
outsl
push
lods
pop
dec
iret
jo
ljmp
ret
in
inc
xor
sbb
add
add
adc
add
stc
aaa
fdivrs
fidivrs
and
add
rolb
adc
add
mov
mov
cmp
cmp
