jle
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
and
call
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
and
in
test
and
and
jne
and
dec
and
dec
and
push
and
push
and
dec
and
dec
and
dec
and
dec
and
and
and
and
and
mov
or
and
jbe
and
jbe
and
jbe
and
and
scas
and
jbe
and
jne
and
jne
and
jne
and
jne
and
jne
and
jne
and
mov
push
jbe
and
jbe
and
jbe
and
jne
and
jne
and
jne
and
jne
and
jne
and
dec
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
push
mov
arpl
cmpsb
pop
pop
mov
pop
push
mov
stos
arpl
cmpsb
pusha
push
mov
popa
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
pushf
xchg
aam
mov
jne
push
neg
pushf
xchg
jne
push
call
ljmp
neg
xchg
mov
jmp
mov
xchg
jmp
jne
push
ljmp
xchg
test
xchg
out
pushf
mov
fcompl
fisubrl
and
addl
out
jl
icebp
fiaddl
xchg
test
xchg
movsb
lcall
imul
xchg
loopne
mov
xchg
in
xchg
mul
lcall
out
mov
fisubl
mov
sarl
not
fwait
xchg
fisubl
fwait
imul
xchg
loopne
mov
xchg
in
xchg
mul
lcall
out
mov
fisubl
jle
enter
jne
jnp
leave
jae
loopne
mov
xchg
in
xchg
mul
lcall
out
mov
fisubl
mov
sarl
not
fwait
xchg
fisubl
xor
xchg
xchg
not
and
jae
loopne
mov
xchg
in
xchg
mul
lcall
out
mov
fisubl
mov
sarl
not
fwait
xchg
fisubl
xor
xchg
xchg
divl
jnp
leave
jae
loopne
mov
xchg
in
xchg
mul
lcall
out
mov
fisubl
xchg
in
mov
fsubrl
and
mov
fsubs
xchg
loopne
xchg
xchg
sti
in
loopne
popf
nop
repnz
xchg
loopne
nop
loopne
xchg
hlt
fstpl
test
jne
xchg
rcl
fwait
xchg
call
and
ja
enter
xchg
jmp
jne
xchg
enter
call
call
addb
fcoms
jb
in
mov
fimull
xchg
in
xchg
fcoms
jb
in
mov
fisubrl
and
das
and
and
mov
push
inc
int3
mov
xor
jne
sbb
mov
jmp
andb
jge
pop
mov
clc
daa
push
movq
xchg
mov
mov
sbb
mov
scas
enter
dec
add
fs
jl
stc
arpl
jge
ja
sti
inc
push
subl
jne
scas
or
sub
mov
jne
jb
mov
les
filds
jne
and
out
and
xchg
inc
test
xorl
jne
mov
jb,pn
mov
les
sbb
in
bound
sub
and
mov
or
xchg
pushf
cs
les
push
test
outsb
and
dec
bound
sub
sub
and
xor
jne
inc
les
adc
push
mov
and
dec
bound
sub
sub
and
xor
je
inc
les
sbb
push
push
dec
xorl
inc
ljmp
insb
and
and
and
and
mov
jmp
mov
outsb
and
inc
bound
imul
jb,pn
dec
cwtl
and
mov
mov
ja
dec
jle
pop
loopne
mov
xchg
outsb
and
stc
inc
bound
sub
push
mov
mov
mov
xlat
lret
aam
add
inc
les
xchg
xchg
mov
jne
je
jae
dec
mov
test
cs
je
inc
test
and
lds
and
and
test
and
cmp
inc
adc
jle
ret
jne
and
fnsave
and
jne
stos
stc
insl
sub
and
ss
and
lret
test
lret
mov
js
lret
sub
cmp
mov
test
pop
stc
popa
mov
addb
jne
xchg
data16
jne
lods
shll
xor
add
dec
test
dec
jle
pop
fidivs
les
stos
leave
gs
and
fildll
and
imul
out
add
aad
out
jb
lds
cwtl
js
mov
and
cli
out
xchg
cltd
je
push
test
push
and
je
adc
and
jae
sarb
and
insl
sub
and
lret
mov
jne
test
jp
ljmp
test
orl
loop
stc
shll
test
addr16
push
aad
insl
and
jge
and
jne
and
cli
out
xor
clc
and
loopne,pn
test
and
fbstp
and
pop
xchg
mov
jb
dec
mov
push
lds
or
jge
cwtl
xorb
xchg
mov
and
jno
addr16
inc
sub
cs
mov
dec
jle
pop
add
mov
outsb
and
je
bound
mov
inc
mov
sub
and
mov
cmp
pop
xor
test
and
enter
ljmp
ja
mov
test
lods
shll
cli
or
cmp
and
mov
and
xchg
popa
test
jle
mov
outsb
and
ss
and
and
data16
jne
and
add
xchg
mov
jne
xor
xor
stc
cltd
pop
and
lret
cwtl
sub
jne
and
je
inc
mov
int3
sub
and
imul
mov
outsb
and
jne
and
lret
sub
mov
ljmp
les
and
js
jbe
and
inc
inc
bound
inc
xor
dec
bound
mov
and
je
jle
mov
movsl
dec
xchg
out
jbe
repnz
mov
mov
and
pop
mov
test
out
lret
sub
mov
mov
ja
out
and
push
cmp
jne
and
xchg
fcmove
xchg
and
inc
pop
xchg
mov
jb
mov
les
adc
jne
inc
fcmovu
and
cli
out
xchg
mov
imul
js,pn
dec
mov
clc
lcall
adc
sub
je
mov
in
insl
inc
bound
outsb
and
pop
xor
test
and
jbe
and
inc
pop
xchg
mov
jb
mov
les
mov
enter
cltd
bound
test
test
cwtl
sub
jne
and
lret
movsb
xchg
outsb
and
roll
lret
sub
inc
mov
mov
fidivl
in
lods
inc
bound
test
pop
int3
sub
and
xor
test
mov
and
add
je
clc
xchg
push
test
jae
aad
insl
and
xchg
inc
bound
sub
and
ss
and
lret
in
and
data16
jne
mov
bound
lods
stc
insl
jg
out
jne
and
cmp
test
test
test
dec
sub
and
outsb
test
lcall
dec
xchg
mov
mov
outsb
and
je
and
int3
sub
push
xchg
mov
aam
cwtl
and
jne
out
mov
and
jno
cmp
sub
lcall
jge
xor
sbb
jl
popa
sbb
xchg
jne
mov
mov
in
jbe
and
mov
xor
jne
loop
cli
ljmp
lret
test
mov
test
jmp
and
cli
out
xor
or
and
sub
or
and
outsb
and
add
xchg
mov
loopne
test
and
fbstp
and
sub
stos
leave
imul
and
jae
test
test
jmp
or
cmp
scas
leave
push
jle
inc
jle
adc
and
cli
jno
cwtl
jl
inc
cs
mov
cmpsl
inc
jmp
and
imul
and
gs
cmp
cmpl
addr16
mov
sbb
mov
inc
lret
mov
push
fsubrs
xor
mov
in
jbe
and
cmpsl
inc
test
js
xor
xor
inc
pop
xchg
mov
jb
mov
les
adc
mov
ss
xor
aaa
les
jns
jmp
and
cli
out
xchg
fnstcw
je
xchg
mov
nop
adc
mov
xchg
adc
mov
xchg
adc
mov
xchg
adc
mov
xchg
adc
mov
xchg
adc
mov
xchg
adc
mov
xchg
je
sub
fbstp
jne
je
push
test
sub
sub
mul
push
inc
cli
out
push
inc
cli
out
push
inc
cli
out
push
inc
mov
jbe
jns
data16
cwtl
and
fildll
mov
jne
and
jne
and
jne
je
mov
les
loop
les
ja
loop
cmp
int3
mov
sbb
mov
push
cmp
enter
lds
lcall
xchg
xchg
fists
bound
pop
scas
fcomps
ss
jne
and
or
jge
test
in
push
mov
outsb
test
mov
and
mov
sub
mov
arpl
mov
push
inc
mov
xor
ss
cmpsl
ss
mov
push
mov
data16
mov
cmpsb
push
ljmp
stc
outsb
mov
pop
inc
leave
mov
daa
int3
mov
xchg
jnp
inc
push
dec
mov
jle
or
imul
mov
mov
push
mov
ljmp
jbe
push
mov
push
lods
jg
mov
in
inc
test
xchg
jecxz
js
into
cmovo
lods
dec
aad
jge
add
mov
and
and
and
and
and
and
and
and
and
and
adc
jne
xor
and
inc
inc
test
xor
and
movb
xor
and
incb
jne
xor
and
and
jle
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
and
call
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
and
in
test
and
and
jne
and
mov
mov
jecxz
lcall
xchg
lret
xchg
mov
arpl
xchg
xchg
out
outsb
and
fisubl
xchg
call
and
jbe
lcall
xchg
xchg
divl
and
lock
lock
mov
and
jmp
mov
mov
loope
jne
out
nop
jmp
and
lds
xchg
out
mov
loope
jne
fsubs
xor
mov
and
loope
xchg
jne
addr16
ret
jae
mov
pop
xchg
loope
and
mov
popf
xchg
fcmovnu
pushf
xchg
in
and
js
xchg
hlt
out
nop
clc
fldt
fxch
jae
mov
pop
xchg
loope
and
jbe
xchg
mov
xchg
fwait
leave
in
outsl
and
jbe
xchg
mov
jns
std
jne
and
ficoml
fcmovbe
lcall
jne
and
ficoml
insl
jmp
jne
and
ficoml
fwait
int
xchg
xchg
iret
fisubl
and
ficoml
xor
xchg
addr16
mov
and
jbe
xchg
mov
xchg
insl
jmp
jne
data16
pop
xchg
loope
and
jne
mov
loope
addr16
ficoml
and
jne
push
fisubl
mov
loope
xchg
lock
mov
jne
push
sarl
mov
subl
mov
and
and
inc
cmp
ljmp
jb
shll
jne
mov
mov
loopne
cmpsb
jne
je
inc
cmpsl
mov
jp
adc
test
stos
and
mov
and
and
adc
test
lods
enter
arpl
out
xor
add
and
xor
outsb
and
mov
scas
shll
and
iret
test
sbb
mov
scas
inc
popa
xor
mov
sub
mov
and
inc
lods
leave
jno
hlt
ljmp
cmp
mov
sub
mov
cmp
mov
stos
mov
cmc
es
mov
stc
aaa
mov
or
mov
cwtl
xorl
adc
mov
mov
push
or
add
sbb
add
imul
gs
xor
cs
insb
add
and
add
add
dec
and
add
add
add
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
fs
imul
add
je
jb
arpl
fs
jae
add
jb
jne
insb
push
jb
je
arpl
insb
gs
not
mov
cmp
push
pop
adc
mov
dec
jne
neg
jmp
test
neg
dec
call
pop
call
pop
lea
jns
bsr
jmp
dec
pushf
nop
call
pop
imul
stc
mov
cmp
cmp
push
pop
sub
bts
push
xor
add
cmc
inc
push
push
ror
add
jmp
ret
ror
pop
xor
dec
push
cld
xchg
not
add
inc
mov
add
not
mov
dec
dec
dec
jmp
lock
nop
dec
dec
dec
add
sub
sub
stc
add
js
inc
cmp
jb
dec
sub
xchg
cmp
push
pop
pop
mov
inc
cmc
xchg
add
dec
dec
not
dec
add
popf
push
jmp
