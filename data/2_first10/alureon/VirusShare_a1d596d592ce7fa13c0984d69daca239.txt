push
mov
sub
push
call
mov
mov
call
mov
add
push
movl
addl
push
addl
push
addl
call
mov
add
mov
add
add
inc
cmp
jne
add
add
sub
jmp
mov
add
sub
mov
ret
pushl
pop
lea
mov
add
mov
add
cmp
jae
sub
inc
add
jmp
mov
add
mov
add
add
jmp
xor
mov
test
mov
sub
mov
and
sarb
pop
push
sub
mov
pop
lahf
xor
cmp
xchg
mov
mov
imull
jecxz
into
mov
movsb
sbb
pushf
mov
xor
enter
jp
mov
shl
ss
aad
mov
int3
jg
cmp
repz
mov
leave
cmp
xor
xchg
mov
int
int3
jg
cmp
mov
enter
enter
jp
mov
push
mov
vmovaps
lahf
xor
cmp
pop
daa
cmp
jne
mov
test
imul
and
or
sbb
lahf
xor
mov
jecxz
int3
jg
cmp
mov
cmp
clc
jp
mov
pusha
push
sub
cmc
dec
fbstp
mov
sub
mov
cld
call
lock
pop
aas
cmp
xor
cmp
xor
cmp
arpl
jo
addr16
je
popa
sub
gs
jb
imul
jo
addr16
iret
popa
das
outsb
shll
jb
imul
xchg
xchg
xchg
xchg
je
adc
cmp
xchg
jns
adc
jns
adc
xchg
or
dec
cmpsl
or
inc
dec
cmc
cltd
subb
xchg
jne
pop
xchg
adc
subb
xchg
jnp
push
pop
cmp
jge
scas
cmpsb
pop
sbb
mov
mov
dec
fbstp
stos
mov
out
das
sarl
mov
and
pop
xor
cmp
mov
dec
fbstp
mov
call
das
xlat
aas
mov
es
xor
cmp
mov
dec
fbstp
mov
sti
inc
push
out
das
fnstsw
mov
sub
xlat
xor
dec
fbstp
mov
cmp
das
jecxz
mov
xor
mov
mov
dec
fbstp
ret
inc
jbe
out
das
jmp
and
mov
dec
fbstp
nop
sub
pop
adc
movsb
mov
and
inc
cmp
outsl
xchg
sbbb
push
hlt
xor
lock
sub
jb
stos
mov
push
stc
push
dec
cwtl
cmpsl
popa
or
fidivl
leave
inc
sub
ret
inc
and
push
es
mov
mov
movsl
ss
dec
enter
fildll
icebp
jmp
cmp
adc
cmp
bound
mov
mov
xor
repnz
pop
mov
mov
dec
ds
mov
add
cmp
hlt
sub
fmul
xor
sub
fistpll
aad
xor
mov
imull
cmp
sbb
sub
mov
stos
lahf
xor
mov
out
das
add
sub
jbe
lahf
mov
test
cmp
jns
lahf
imul
adc
inc
jl
rcrb
push
mov
jge
negl
imul
xchg
mov
dec
lahf
aas
push
lahf
xor
jnp
pop
mov
lahf
xor
into
roll
cmp
xchg
jnp
mov
mov
xor
jnp
mov
imul
inc
sbb
lea
xchg
cmp
movsl
mov
sahf
xor
out
mov
ret
fimuls
xor
inc
sub
sub
lahf
xor
cmp
sbb
mov
hlt
mov
inc
mov
mov
jnp
mov
mov
mov
mov
push
mov
xor
inc
lahf
movsb
test
xor
and
and
lods
mov
xchg
cmp
ja
xor
mov
xor
mov
xchg
fidivrl
scas
mov
mov
mov
cmp
xor
dec
push
icebp
mov
addr16
jg
cmp
jns
add
hlt
dec
xchg
xchg
mov
sarl
ret
cmp
loopne
cmp
pusha
xor
enter
xor
xor
cmp
xor
cmp
ret
and
xchg
xchg
mov
rol
hlt
sub
out
lahf
inc
adc
mov
sbb
xor
mov
mov
inc
sub
fnstcw
mov
imul
xor
jnp
jmp
shl
pop
xor
cmp
cwtl
loopne
lahf
xor
out
lahf
inc
and
ret
dec
dec
fbstp
outsl
xchg
xchg
hlt
inc
adc
sbb
cmp
sbb
inc
in
and
daa
sbb
mov
or
sbb
lahf
xor
push
xor
in
scas
sbb
lahf
xor
cld
adc
push
and
xor
cmp
or
xchg
cmp
sbb
mov
in
xor
sbb
fsub
push
lahf
lods
cmp
cmp
movsl
mov
js
loopne
xchg
fs
xchg
sub
sub
daa
cs
mov
mov
lret
insl
push
xor
dec
push
xor
arpl
mov
rolb
