mov
adc
pop
out
push
jnp
ds
incb
stos
lcall
leave
sbb
jbe
mov
mov
pop
divps
mov
cmpps
je
ss
sbb
and
filds
cmovae
inc
pop
in
cs
cmp
jge
shl
outsb
clc
sub
jnp
aam
mov
xchg
popa
add
lods
scas
xor
mov
ret
cmp
mov
lret
int3
push
lret
daa
cmp
pop
add
adc
inc
fisubl
sbb
add
or
xchg
xor
loop
mov
cmp
jg
or
cwtl
fcom
sbb
shl
pop
and
outsl
popf
push
lret
scas
pop
cli
fcomi
adc
sti
test
mov
sub
sub
jbe
mov
dec
popa
xor
cmovbe
add
push
cmp
mov
and
inc
je
flds
jns
pop
lods
into
out
imul
into
push
fldt
fldl
lret
loop
dec
shll
lret
adc
cld
xchg
mov
neg
scas
sub
repz
xchg
fstpl
mov
jmp
push
adc
sbb
out
mov
sarl
imul
xchg
mov
ljmp
cmp
xchg
subl
xor
test
pop
add
mov
pcmpeqw
xchg
xor
xor
push
inc
mov
fsub
xor
pop
ret
dec
add
push
inc
adc
sub
loopne
or
ss
mov
es
sub
cmpsb
jb
inc
out
jge
push
pop
hlt
or
cmp
sub
sub
je
mov
xlat
outsl
mov
pushf
addl
cmp
push
jbe
dec
cmc
nop
mov
call
adc
adc
mov
imull
inc
mov
popa
and
jne
xchg
xchg
jns
and
mov
dec
out
cmc
shl
xor
insl
or
popf
mov
sbb
notl
clc
mov
ja
pop
notl
cld
ret
mov
mov
notb
mov
repnz
pop
or
xchg
push
mov
xchg
sub
push
jmp
test
jmp
lahf
ret
daa
or
or
cmpsl
cmp
sbb
in
fnstenv
sub
popa
pop
into
pop
cmp
jmp
mov
std
dec
pop
jo
mov
mov
popl
lods
add
or
mov
add
test
iret
cmp
mov
cmp
dec
sbb
jnp
jae
or
repnz
mov
xor
xchg
repz
loope
dec
bound
cmp
in
jecxz,pt
scas
lds
and
xor
cmpsl
mov
xchg
test
inc
rol
pop
movb
mov
cmpsb
add
sub
jns
bound
in
das
orl
cs
xor
xchg
or
test
mov
mov
mov
leave
call
andb
sub
fdivrl
addr16
push
dec
or
and
sub
pop
in
push
pop
xchg
jge
xchg
outsl
or
xchg
pop
sbb
jle
pop
dec
dec
inc
pushf
aam
add
lds
test
cmp
orb
pop
sbb
xchg
sub
adc
mov
into
nop
shll
sbb
insl
ja
mov
lods
jno
in
fistps
cmpsl
lcall
pop
cmpsl
bound
xchg
adc
mov
sbb
pop
push
add
movsb
clc
push
jns
std
loopne
and
bound
iret
push
mov
push
cmp
jge
sub
dec
cmp
or
testl
notb
daa
data16
imul
test
jl
stos
sub
cmc
imulb
mov
push
mov
or
xchg
imul
enter
add
cli
lcall
pop
call
jl
shll
add
and
dec
in
loop
mov
frstpm(287
add
mov
mov
push
aas
dec
dec
jnp
icebp
xacquire
inc
push
jmp
adc
xchg
or
cmp
dec
ljmp
xchg
ljmp
movsb
mov
add
popa
jge
gs
loope
inc
mov
test
fisttps
scas
pop
roll
std
pop
jg
dec
pop
loopne
mov
sub
push
out
add
fnsave
lods
out
cwtl
pusha
jp
jb
sbb
cmp
ljmp
in
aam
jmp
in
outsl
pop
mov
pop
mov
out
stos
cmp
arpl
push
cmpsl
dec
jge
cmp
in
fsubrs
ljmp
jb
xchg
jbe
outsl
jne
shl
cmp
shl
arpl
inc
js
imul
fistpll
sub
or
arpl
sub
or
adc
cli
ret
cmp
cmpsl
loop
inc
jecxz
popa
mov
iret
push
popa
pop
bound
pop
add
fcmovbe
pushf
data16
ficoms
loop
outsl
mov
xor
mov
xor
mov
ret
dec
pop
jno
outsl
add
testb
mov
loop
lds
dec
or
sar
loopne
fnstsw
out
lods
mov
movsb
or
aam
cmpsl
inc
jge
adc
pop
mov
dec
cwtl
mov
ja
fsubrl
sar
shr
jl
sub
lea
lcall
fcmovu
push
stos
or
fldcw
imul
int3
inc
lcall
push
and
addb
and
test
cwtl
ljmp
cmc
es
into
shll
loop
int
sbb
mull
sbb
pusha
cwtl
jmp
push
mov
cs
dec
arpl
xor
dec
sbb
aad
loope
iret
xor
cmpsb
lods
adc
xor
xchg
push
arpl
sub
xchg
dec
fisubl
or
popf
into
data16
pop
mov
cmp
xchg
in
insb
sbb
icebp
push
pop
pop
jns
adc
dec
mov
scas
xchg
mov
xchg
dec
jl
test
aam
jb
pop
rclb
in
clc
mov
xor
add
xchg
and
mov
dec
mov
jp
adc
lret
adc
imul
stos
push
cli
or
fbld
cwtl
sti
push
stos
addl
or
nop
stos
lock
les
mov
jp
add
dec
inc
jmp
lods
pop
adc
adc
pop
test
icebp
cmpsb
fidivrs
aaa
adc
sbb
fidivl
pop
or
sbbb
mov
xchg
in
add
sbbl
sub
bound
mov
jp
jp
leave
jmp
add
pop
mov
repnz
sub
sahf
aam
cmp
movsl
push
mov
cmp
mov
xor
aad
pop
pop
cmp
jle
push
jmp
rolb
lret
lahf
fldt
fimull
jne
inc
and
adc
inc
jns
mov
je
orl
add
push
sbb
mov
shlb
pushf
inc
inc
xor
bound
shrl
push
lret
scas
xchg
aam
inc
jbe
add
je
push
pop
jl
mov
mov
ret
pop
shr
jbe
addl
dec
ret
inc
xchg
dec
or
aad
dec
mov
in
lret
sbb
aad
idiv
push
aaa
adc
decb
adc
and
mov
push
cwtl
push
enter
sub
xor
aad
cmp
cld
push
sti
in
mov
xor
jge
cmpsl
push
ret
insb
dec
jb
mov
mov
gs
clc
stos
xchg
out
adc
jb
mov
outsb
adc
ds
dec
xchg
jne
mov
mov
pop
aaa
jnp
xchg
xchg
xchg
pop
dec
outsl
xor
int
fs
lcall
mov
loope
ja
addr16
sub
jle
sbb
pusha
popa
in
in
ss
dec
inc
push
loopne
shlb
out
fwait
mov
xchg
xchg
sub
adc
pushf
mov
mov
lcall
and
jne
lods
ds
popa
xorb
mov
out
addr16
scas
aaa
dec
test
mov
xchg
call
jno
stc
mov
xor
incl
push
push
sub
add
xor
ret
pop
mov
push
testb
cli
scas
outsb
mov
mov
test
out
out
dec
cmp
daa
fnstsw
in
and
xchg
mov
pop
inc
cmp
in
cmp
sbb
in
mov
jmp
pushf
addr16
and
jb
mov
nop
icebp
dec
sub
outsl
pop
and
mov
cs
out
dec
cmp
pop
sbb
jg
pushf
roll
les
jns
pop
adc
leave
testb
popf
jno
movsb
mov
cmpsl
cmp
jmp
pushf
jb
fldl
outsl
inc
aaa
and
xchg
dec
ss
jmp
ret
pusha
jae
popf
xor
shlb
sahf
or
ret
ljmp
pop
lahf
inc
ss
gs
jmp
xor
call
xchg
sbb
movsl
xchg
mov
mov
addr16
enter
push
and
jmp
test
mov
pop
or
jbe
xchg
sti
int
adc
dec
les
inc
pusha
ficoms
and
fidivrs
sbb
std
idivl
and
mov
mov
sub
dec
fimull
loop
enter
lcall
add
mov
ficoms
packssdw
jecxz
push
enter
ljmp
imul
ret
jnp
les
or
sbb
icebp
cmpsb
push
xor
ds
mov
andb
cmp
and
dec
mov
adc
loope
int
clc
stos
xor
jbe
fadds
adc
out
sbbl
arpl
ljmp
mov
mov
jb
cmp
push
repnz
jge
xchg
in
jbe
popa
and
dec
bound
pop
es
addr16
fs
inc
sub
mov
scas
mov
inc
call
mov
sub
repnz
jmp
inc
out
cmp
sub
inc
cmp
mov
cmpsb
fucom
inc
cmp
pusha
pop
dec
sub
mov
loopne
xchg
mov
imulb
adc
aad
xchg
mov
in
xchg
jb
data16
popf
sbb
or
ja
scas
jbe
jb
fcomip
xchg
inc
je
dec
imul
leave
pushf
cltd
pusha
jp
daa
xchg
push
push
mov
imul
or
rclb
xor
and
adc
adc
or
fildl
mov
jb
imul
aas
cmpsb
adc
sub
fstl
in
cmp
mov
mov
push
adc
push
add
loope
xchg
xchg
jmp
fsubrl
movsl
lock
rcl
adc
out
adc
adc
jbe
mov
shl
mov
xor
pop
mov
leave
icebp
pop
ret
sub
xchg
mulb
sbb
inc
or
je
outsl
in
into
pusha
std
cmp
push
hlt
dec
hlt
sub
lock
inc
in
or
out
imul
mov
push
mov
imul
add
call
mov
mov
call
mov
push
add
call
add
sub
inc
dec
mov
lea
call
xor
lea
sub
movsbl
or
inc
sub
dec
lea
movsbl
inc
imul
mov
mov
call
inc
add
mov
inc
call
lea
sub
call
sub
imul
inc
dec
add
add
add
sub
dec
pop
mov
add
xor
add
movzwl
pop
sub
sub
pop
mov
dec
inc
mov
pop
dec
lea
mov
lea
add
inc
add
mov
pop
lea
lea
pop
movsbl
lea
mov
dec
dec
call
dec
inc
dec
dec
ret
dec
xor
push
mov
dec
push
inc
push
imul
mov
push
sub
add
push
add
add
mov
or
imul
push
dec
ret
push
dec
inc
mov
or
mov
sub
dec
push
inc
call
pop
ret
jmp
lea
mov
imul
add
movzbl
lea
imul
add
inc
mov
and
lea
movswl
movzbl
dec
mov
xchg
inc
inc
mov
imul
xor
inc
mov
lea
inc
inc
or
mov
dec
jne
mov
mov
mov
add
pop
and
mov
pop
inc
sub
pop
movsbl
mov
mov
xor
sub
sub
sub
add
dec
inc
inc
add
ret
push
movzwl
or
add
inc
lea
lea
movsbl
add
push
push
push
push
mov
or
sub
push
inc
add
add
dec
inc
sub
dec
inc
sub
mov
xor
push
xor
sub
xor
imul
xor
push
mov
sub
push
mov
inc
pushl
add
call
dec
add
sub
or
dec
movzbl
mov
add
sub
pop
ret
mov
mov
dec
lea
dec
lea
dec
dec
cmp
jb
dec
xor
movsbl
mov
sub
dec
mov
imul
inc
inc
add
dec
lea
lea
lea
mov
add
cmp
jb
dec
mov
lea
imul
xor
dec
mov
xor
sub
inc
pop
add
inc
test
jbe
inc
and
sub
sub
inc
mov
mov
add
mov
inc
mov
sub
mov
mov
movzwl
inc
inc
dec
add
dec
lea
or
dec
and
imul
inc
mov
mov
movzbl
movzbl
sub
dec
add
xor
and
and
or
movswl
mov
movzwl
add
mov
sub
inc
mov
mov
mov
inc
add
imul
inc
lea
dec
jne
add
mov
dec
movsbl
movzbl
lea
dec
sub
and
mov
add
mov
mov
add
inc
mov
inc
mov
mov
inc
mov
movzbl
sub
test
jbe
mov
mov
dec
inc
or
xor
inc
imul
xor
inc
sub
movswl
lea
dec
dec
inc
mov
lea
sub
mov
dec
mov
and
imul
dec
mov
xor
dec
movzbl
mov
inc
add
inc
imul
and
xor
mov
mov
sub
or
movzbl
lea
mov
mov
imul
jmp
push
lea
inc
dec
sub
imul
inc
add
imul
xor
mov
inc
sub
and
mov
add
or
inc
lea
sub
inc
inc
dec
mov
dec
imul
lea
sub
mov
dec
mov
and
imul
mov
or
add
mov
mov
lea
add
cmp
je
call
call
inc
mov
mov
inc
imul
lea
mov
mov
lea
mov
mov
add
lea
inc
call
call
or
ret
lea
mov
pop
dec
ret
push
imul
mov
mov
mov
xor
push
dec
lea
push
mov
push
dec
push
dec
sub
dec
inc
add
sub
lea
dec
lea
call
inc
push
mov
push
mov
pop
lea
sub
mov
sub
movsbl
mov
add
add
inc
xor
imul
dec
je
sub
imul
add
mov
lea
add
mov
imul
dec
mov
dec
and
mov
dec
lea
add
and
repnz
dec
mov
add
add
jmp
dec
sub
jmp
mov
add
inc
mov
and
or
inc
add
mov
dec
inc
dec
sub
inc
pop
pop
ret
push
inc
inc
mov
add
mov
mov
lea
dec
mov
sub
mov
dec
lea
imul
mov
lea
xor
add
add
dec
and
sub
inc
sub
movzwl
pop
ret
sub
inc
mov
imul
mov
mov
sub
add
mov
inc
imul
mov
imul
mov
xor
dec
add
mov
inc
inc
inc
add
lea
mov
add
inc
inc
cmp
jb
mov
push
imul
add
push
add
inc
push
sub
mov
mov
inc
add
xor
inc
lea
xor
add
mov
xor
imul
push
or
dec
xor
xor
xor
mov
mov
mov
inc
movzbl
imul
lea
movzbl
inc
add
inc
add
add
add
movzbl
lea
dec
xor
add
dec
inc
add
jmp
dec
and
shl
pop
add
cmc
jmp
or
aas
or
int
xor
xlat
jmp
xor
sub
test
adc
mov
xchg
test
sbbb
aaa
or
lcall
rorl
cmp
nop
dec
add
lods
push
push
mov
stc
dec
pop
or
push
movhps
aam
mov
jo
xchg
mov
pop
sub
xchg
sub
loop
pop
mov
cld
sbb
pop
sbbb
out
push
dec
add
ss
loopne
sub
jmp
ret
adcl
repnz
movsl
lahf
decl
adc
sbb
inc
movsb
in
xchg
out
jmp
mov
js
rcrb
enter
dec
inc
xchg
mov
hlt
cld
testl
jmp
mov
mov
sti
je
cmp
xchg
je
xchg
pop
pop
xchg
clc
or
jbe
repz
jmp
pop
push
pop
jns
jne
xor
lcall
push
es
push
das
dec
divb
cmp
pop
and
or
xchg
test
cmp
cmp
dec
inc
in
push
jne
cmc
out
pop
xchg
mov
cmpsl
mov
mov
mov
push
push
adc
jmp
pop
xchg
mov
mov
mov
sub
popa
fstpl
xchg
in
loopne
iret
dec
or
mov
pop
inc
stos
push
imul
and
out
mov
jo
sub
aam
imul
scas
loop
xlat
scas
adc
int3
mov
push
notl
test
jnp
and
inc
test
cltd
or
mov
xchg
dec
cmpsb
repz
repz
adcb
jge
data16
adc
jmp
inc
cmpsb
dec
jecxz
in
lret
add
inc
imul
leave
pusha
popf
pop
fs
xchg
fstp
push
lcall
jo
addr16
pushf
sub
dec
sbb
xchg
imul
leave
lret
pop
pop
mov
mov
add
pop
lcall
jl
fstps
outsb
fdivl
xlat
mov
stc
or
shl
sahf
xchg
push
inc
add
call
fwait
add
ror
jge
xor
xchg
push
jo
and
xchg
sub
out
out
mov
jecxz
mov
outsl
insl
inc
ss
sbb
std
out
adc
xchg
mov
rol
or
and
dec
rcrb
add
in
pop
jno
popf
dec
mov
xorl
ds
jns
xchg
scas
das
gs
ror
dec
sub
adc
inc
aam
arpl
iret
fisttpl
test
lock
push
sub
xchg
mov
cmp
call
in
loop
das
adc
xor
mov
pop
mov
clc
scas
orb
or
mov
add
cmp
push
push
shll
popa
sub
or
cmp
adc
xchg
gs
jo
adc
xor
das
jg
repz
fnsave
inc
and
inc
and
jmp
sahf
mov
mov
lock
adc
pop
dec
or
out
jle
pop
mov
pop
call
int3
mov
mov
repnz
dec
sub
test
mov
mov
adc
xor
cmpb
pop
add
cmp
mov
jnp
outsl
mov
cwtl
stos
jge
in
sub
xchg
xchg
and
jne
sti
push
popa
test
xchg
ja
xor
and
ret
nop
jo
je
jb
xchg
dec
sbbb
mov
push
jbe
inc
xchg
pushf
mov
sbb
scas
inc
pop
lahf
push
mov
jae
xchg
add
pop
outsl
xchg
jae
mov
cs
js
lea
xchg
adc
test
mov
negl
lret
jg
nop
lods
pop
les
iret
mov
push
dec
fs
adc
jb
push
inc
adc
test
outsb
xor
jecxz
xor
jno
aam
lret
pushf
add
imul
iret
pop
movsb
pop
icebp
js
sti
mov
aam
pusha
test
push
lods
cmpsl
push
mov
mov
xchg
into
aad
pop
or
and
clc
sahf
gs
add
pushf
mov
push
push
adc
fistl
sbb
test
add
mov
push
into
jae
pop
push
es
out
std
lea
lds
cmc
pusha
xchg
inc
push
mov
push
fists
into
enter
mov
cltd
and
rclb
cmc
ret
loop
insl
andnps
je
imulb
adc
call
dec
push
dec
in
xchg
mov
inc
lods
xchg
inc
adc
cmp
popa
xchg
sbb
addr16
addr16
leave
fcmovu
push
and
push
aam
nop
ret
pop
xchg
loop
orl
mov
loope
pop
fisttpll
lahf
jle
lcall
jno
xchg
inc
inc
adc
int3
shrl
lahf
pushf
mov
mov
pop
cs
lods
into
in
inc
xchg
enter
and
pop
add
dec
sbb
sbb
dec
cltd
and
jl
mov
xor
push
in
mov
gs
fs
sub
cld
mov
jo
sbb
adc
dec
pusha
insl
lods
push
push
daa
cli
daa
xor
add
add
loop
add
or
adc
adc
add
xor
adc
cmp
adc
push
add
or
adc
add
insb
jb
sbb
das
mov
lret
xlat
jne
jg
adc
or
sbbb
loopne
xchg
cltd
push
mov
push
fcomps
and
mov
mov
ret
dec
cwtl
sub
push
xchg
xchg
gs
adc
nop
es
inc
aaa
sub
xchg
hlt
sarb
lds
shlb
inc
inc
int
and
adc
sub
out
xchg
cli
xor
mov
test
subb
dec
fcoms
mov
ss
sbb
jne
mov
xor
jmp
xor
jmp
add
add
jns
jl
sub
cwtl
mov
adcl
cli
dec
sbb
mov
rorl
les
push
xor
stos
addr16
xor
mov
xchg
std
mov
pusha
jno
inc
push
inc
cmc
xchg
loope
xor
gs
pop
mov
push
push
stc
in
push
je
adc
pop
pop
push
jo
or
insl
mov
call
lret
and
cmp
xor
pop
movsl
sub
icebp
mov
sbb
out
in
decb
mov
mov
jle
insb
cmp
add
xor
cli
sub
pop
mov
imul
ja
mov
loopne
adc
scas
dec
outsb
call
inc
ret
jg
mov
movsb
mov
rcl
jnp
jecxz
and
scas
cmp
mov
mov
addr16
sahf
lea
out
or
imul
and
std
cli
std
aad
mov
dec
jno
adc
and
rcrb
dec
and
xorl
lcall
mov
pop
fbstp
insl
imul
cwtl
mov
inc
insb
xchg
dec
jb
lret
subb
cld
ss
mov
imul
sub
lcall
adc
xorl
call
push
testb
pop
xor
push
hlt
test
into
cmp
dec
mov
xor
or
cmc
hlt
push
jge
add
in
xlat
notb
mov
add
inc
in
xor
sbb
loop
lock
pop
aas
pop
pop
mov
leave
mov
and
nop
rolb
sub
push
inc
insl
pop
pop
ss
mov
fldenv
sub
loop
mov
imul
incb
push
inc
dec
int3
ljmp
sub
cltd
lds
and
mov
sarb
loope
pop
insb
test
imul
sbb
repz
int3
jl
dec
sub
push
nop
mov
add
lods
sub
lcall
pop
mov
fisubrl
push
stc
xlat
divl
add
or
and
rcrl
aam
jne
jge
clc
mov
enter
pop
and
xor
adc
pop
adc
pushf
lcall
and
mov
xor
add
fwait
lret
pop
push
je
call
cmp
mov
adc
xor
dec
cltd
dec
add
pushf
bound
xlat
xchg
jmp
test
push
mov
js
aam
jge
out
ret
mov
fists
and
lods
ss
or
loopne
jo
jae
sbb
mov
test
ds
jne
add
pop
mov
roll
and
xchg
sub
outsl
push
ret
scas
add
cwtl
loope
cmpb
out
loopne
or
pushf
pop
push
stc
fsubs
mov
cmc
push
mov
outsl
lea
mov
bound
mov
lods
cmp
aaa
jg
loope
loopne
or
or
std
sub
aaa
jl
add
arpl
call
xchg
mov
xor
lds
testl
sti
mov
jp
ret
push
sti
outsl
jno
dec
outsl
mov
adc
scas
mov
mov
fucomip
addr16
in
jne
stc
jno
push
pop
js
or
nop
dec
pushf
outsl
call
lea
xor
add
adc
nop
mull
inc
jp
jbe
xchg
xchg
pusha
arpl
hlt
jg
sub
ds
gs
pop
in
add
inc
jmp
and
popa
dec
inc
aad
mov
cld
ss
xor
insl
mov
xchg
or
std
sar
les
out
shlb
cmp
push
lods
cmp
mov
push
je
inc
outsb
xor
cmp
cwtl
sahf
imul
mov
push
jo
movsb
push
sub
in
mov
jb
cmp
repz
mov
aas
mov
jge
outsl
dec
push
mulb
dec
cmp
and
xchg
scas
les
mov
fiaddl
pop
xchg
add
ret
lods
or
fcomps
push
mov
jmp
aam
dec
and
jne
pushf
and
cmp
add
and
mov
xchg
pop
js
testb
adc
xor
pop
fstl
push
rcrl
sub
xchg
and
lea
hlt
jecxz
adc
cld
adc
fsubrl
in
test
imul
aaa
fcmovb
fnstsw
andb
fsub
xor
xchg
das
nop
and
adc
dec
in
mov
pop
jns
gs
scas
movl
adc
cmp
cwtl
and
cmp
test
push
aaa
mov
mov
push
movsl
or
jmp
lahf
pushf
sub
lock
outsb
sahf
mov
mov
fadd
and
pop
ja
mov
int
cmp
or
icebp
dec
push
ret
lret
fsubrs
call
inc
es
popf
sub
jmp
ja
mov
jp
inc
dec
je
lods
jb
push
or
cmp
mov
pop
repz
data16
pop
sbb
push
push
into
dec
dec
loopne
mov
js
xor
mov
pop
repz
mov
pop
cli
sahf
xlat
pop
mov
pusha
mov
pop
fistpl
mov
out
jl
imul
xor
orb
in
outsb
popa
xchg
bound
or
test
inc
cmp
jp
fucom
dec
fists
inc
adc
cmp
in
sbb
push
ret
push
inc
imull
ljmp
lea
or
dec
adc
cwtl
or
scas
sbb
dec
jmp
sbb
push
sbb
fbld
mov
roll
push
out
es
pop
mov
jg
lods
push
sub
mov
aam
mov
cmc
add
in
outsl
sbb
int
loopne
jo
sbb
aaa
jle
pop
xor
pop
addr16
dec
leave
data16
or
lret
pop
and
dec
out
jo
rcll
inc
mov
shlb
cli
xchg
dec
jns
repnz
pop
pop
pushf
lods
hlt
ficompl
xchg
push
push
push
mov
and
inc
cwtl
push
lahf
push
jecxz
ljmp
popl
popf
or
int
andl
jl
mov
lea
test
loopne
xchg
mov
jecxz
xchg
fcom
rcll
js
enter
dec
fiaddl
or
push
mov
mov
sbb
loope
sub
xchg
xor
mov
mov
ret
divl
cmp
flds
repz
cmp
mov
mull
cli
push
addr16
int
jl,pn
or
jg
add
mov
jae
xchg
xchg
mov
bound
fcmovnu
mov
xchg
and
add
imul
add
dec
pushf
aas
inc
sahf
cmc
jecxz
int
xlat
mov
mov
or
push
outsb
fwait
and
push
xchg
ljmp
int3
movsb
pop
mov
jge
xchg
sarl
and
push
mov
divl
clc
outsb
mov
fimull
xor
outsl
mov
pop
rolb
adc
rcrb
cwtl
mov
xchg
test
int3
out
movsb
push
popa
adc
movsl
and
mov
daa
stos
mov
psadbw
shll
rcll
loopne
nop
xchg
jne
mov
test
push
dec
add
test
xchg
xchg
fidivrs
or
cwtl
xchg
in
pand
pop
or
sub
in
push
ljmp
sbb
xchg
sub
fwait
sub
mov
arpl
ds
int
insb
movsb
iret
and
xchg
mov
mov
sub
jo
adc
lds
popa
inc
je
xchg
push
addl
pop
cli
adc
je
mov
xchg
push
in
and
and
xchg
insl
cmc
xor
mov
mov
icebp
xchg
push
jle
inc
dec
das
cltd
jnp
inc
cmpb
enter
jns
aaa
lret
pop
cmp
xor
loope
or
data16
cltd
enter
jl
pop
in
or
adc
lahf
scas
lahf
jbe
pop
les
pop
mov
or
fbld
inc
push
and
stos
sbb
mov
repnz
xlat
sub
inc
jae
and
ret
std
addr16
stc
sbb
pop
adc
pop
idivb
sar
dec
cwtl
jno
jge
pop
daa
dec
mov
out
cld
mov
jge
pop
push
pop
mov
add
lret
add
clc
in
inc
dec
sbb
dec
dec
push
mov
pop
jl
sub
cmp
and
bnd
icebp
xchg
test
push
push
xor
inc
aad
pop
shll
daa
icebp
icebp
sbb
or
outsl
mov
test
sbb
sarb
or
add
jmp
bnd
jbe
push
leave
mov
std
loopne
loop
push
fadd
push
xchg
cltd
pop
mov
push
mov
cmc
xchg
adc
std
mov
push
pop
cmpsl
stos
cmp
and
loop
mov
sbb
sbb
data16
cmpb
and
pop
and
adc
inc
sbb
pop
sbb
xchg
add
fsub
and
in
loopne
and
out
dec
xor
sbb
pop
addr16
mov
mov
inc
js
add
xor
idivb
int3
push
fistpl
xchg
push
lods
sub
popa
xchg
xor
stos
repz
mov
in
pop
add
lcall
push
or
jne
in
mov
and
cs
das
or
int3
push
stc
xchg
into
mov
cltd
mov
mov
jmp
sbb
mov
jle
ljmp
ret
and
xor
lret
cmp
mov
loop
cld
loop
add
push
dec
adcl
int3
mov
in
or
mov
mov
test
jne
mov
fbld
inc
fs
in
ds
push
rclb
outsb
enter
aam
push
jnp
and
aad
xlat
pop
repnz
in
shrl
ficoms
jo
icebp
cmc
adcb
xchg
rolb
aad
out
test
adc
or
std
jp
inc
cmp
fdivr
pop
std
push
pop
rcll
push
sub
and
add
mov
ja
or
mov
and
pop
and
lea
push
outsb
popf
ljmp
fdivrl
in
stos
inc
mov
sahf
mov
pusha
cmc
or
icebp
push
push
pusha
orb
sbbl
test
add
cmpb
sahf
shrl
rcll
sub
cmc
repz
sub
js
xor
push
mov
lret
inc
iret
add
mov
aam
cmc
je
in
xchg
pusha
ds
xchg
aad
in
sub
xlat
lcall
pop
add
enter
aaa
inc
push
jns
push
mov
mov
pop
arpl
mov
pop
pop
mov
jnp
int3
mov
enter
je
leave
sub
push
lcall
ss
std
cli
lret
cwtl
and
sbb
push
sti
inc
jo
and
adc
jmp
fnstsw
cltd
iret
lret
inc
sub
mov
in
call
xor
dec
mov
sub
or
ret
push
popf
insl
xchg
out
jle
dec
xor
pop
fistl
testl
fsubr
arpl
add
outsb
mov
jle
int3
insl
add
inc
xchg
lds
mov
repz
add
imul
into
out
negl
jmp
mov
xchg
and
inc
test
dec
lret
mov
pushf
repnz
pop
cli
push
mov
inc
push
aas
pop
mov
insl
aaa
jecxz
push
pop
das
mov
aad
add
fsub
ret
mov
dec
and
negl
lea
xor
mov
sub
cmp
and
adc
jecxz
cmp
rolb
dec
test
jmp
or
gs
fsub
mov
jmp
cmp
and
or
adc
or
pusha
adc
mov
mov
sti
lods
into
cmp
fisttpl
mov
inc
cmp
cmp
pusha
out
jg
int
xchg
jg
push
cmc
stos
jns
cli
add
mov
sbbb
lcall
mov
jecxz,pt
jo
ret
pop
sub
ja
dec
leave
adc
xchg
cmpsl
or
orb
ds
dec
rorl
mov
dec
pushf
fxch
xchg
orb
mov
fs
iret
inc
jecxz
pop
and
incl
adc
insb
aad
sub
inc
cmpsb
dec
enter
pusha
pusha
mov
sbb
cmp
pop
mov
xorl
fs
dec
mov
and
imul
pop
xor
xchg
jl
ret
add
ffree
xlat
xchg
sub
xchg
dec
push
pop
nop
add
cmp
pusha
nop
lret
or
push
dec
or
mov
add
outsl
mov
mov
or
jbe
jmp
sbb
pusha
orb
outsb
sbb
adc
aad
cmpsl
imul
into
hlt
cmpsb
push
cmpsl
pusha
push
bound
cmp
jmp
cmp
sub
inc
pop
fmulp
cmpsl
push
mov
xor
and
pop
jl
add
das
pop
xchg
insb
jne
push
push
clc
enter
aam
pop
sbb
jmp
mov
fisubs
add
dec
cmp
xchg
push
cmpsb
ret
adc
push
cmp
sets
cmp
js
mov
int3
dec
inc
inc
dec
or
xor
out
inc
or
lahf
int3
push
xchg
jge
lods
xchg
jecxz
out
jno
dec
mov
dec
lea
mov
mov
enter
push
pop
cwtl
dec
out
fstpt
cld
or
in
push
adc
push
sub
mov
cmpsl
dec
cmp
pop
addr16
repz
jbe
fucomp
xor
in
loope
or
add
xor
mov
inc
addr16
fs
cwtl
xlat
mov
or
movsl
and
popa
push
insb
pop
cmp
xchg
adc
and
jno
sub
or
sahf
sahf
data16
sub
add
mov
sub
jns
les
sbb
jnp
sahf
adc
fwait
dec
push
popf
sbb
cmpsb
imul
mov
xchg
adc
and
xor
xchg
push
stc
shl
sub
mov
sbb
dec
adc
lds
xor
push
xor
jecxz
adc
in
popf
sbb
and
push
adc
nop
rcrl
call
sbb
in
push
push
xor
call
aad
jo
jg
cld
inc
xchg
mov
stc
sahf
ds
xor
xchg
sbb
cmpsl
push
push
adc
bound
ret
xchg
jne
mov
adc
cmp
icebp
push
xchg
pop
pushf
mov
mov
test
cmp
rclb
or
cmp
cli
arpl
xchg
add
jl
and
add
sub
in
mov
push
sbb
pusha
xor
outsb
imul
cs
pop
insb
das
fcompl
push
push
je,pt
sub
pop
xchg
or
sub
call
mov
mov
lds
js
and
rclb
xor
out
iret
lds
jg
push
lret
faddl
cltd
jecxz
jae
int
jne
dec
popa
mov
addr16
push
or
cmp
dec
and
and
adc
scas
jecxz
inc
ficoms
scas
out
jg
in
xchg
mov
lods
cmp
decb
push
aas
add
inc
lods
jne
stos
cmpsl
push
nop
outsb
js
jmp
imul
fldcw
cmpb
nop
inc
lea
ret
addr16
xchg
and
sbb
sbb
shrl
es
call
and
dec
xchg
fisttps
js
adc
ret
pop
out
cmc
pusha
cmpl
cld
je
lea
in
mov
das
pop
or
fwait
leave
aam
fmuls
fstpt
push
jl
push
aas
mov
repz
mov
inc
or
faddp
jno
push
or
push
sbb
mov
mov
xchg
mov
push
jae
sub
ja
push
lcall
cwtl
xchg
mov
mov
pop
jbe
sub
jns
lock
mov
test
cmp
cmp
insl
aad
xchg
shll
or
cmp
lock
push
dec
stc
jae
fwait
pop
stc
mov
add
clc
push
jb
sub
popf
enter
lods
mov
mov
call
sbb
inc
and
xchg
jno
sub
xchg
test
cli
lret
outsb
leave
shlb
jmp
cmpsl
and
mov
js
in
dec
lods
push
fsub
inc
jl
loopne
jae
test
fidivrl
jge
ljmp
das
pop
test
pop
jb
bound
sub
lcall
mov
mov
mov
and
repnz
test
clc
scas
push
gs
mov
cli
shlb
mov
pop
ljmp
xchg
mov
pop
ds
pand
cmpsb
mov
xchg
sar
ret
or
mov
lods
push
inc
push
int3
mov
pop
inc
test
loope
mov
sub
push
mov
mov
cmp
mov
add
in
push
mov
inc
lock
in
test
dec
or
adc
nop
and
xor
or
dec
push
dec
ja
mov
iret
fs
jae
jp
ret
jle
daa
push
dec
insl
push
or
aas
pop
inc
aas
xchg
inc
out
cmp
sub
mov
pop
and
inc
scas
or
cli
sbb
lock
call
dec
fs
aam
push
inc
ss
cmp
data16
lea
pop
sub
mov
daa
out
inc
ljmp
imul
int3
pop
cmp
xchg
fwait
sub
inc
fidivl
or
mov
insb
add
movsb
je
outsl
jb
lods
jae
cmp
jnp
jmp
ja
or
dec
fcoms
rcrb
pop
pop
insl
into
cmp
stos
mov
pop
test
push
xor
stos
inc
xchg
mov
sahf
or
mov
and
pop
inc
nop
mov
das
imul
lods
or
inc
test
dec
aas
out
call
mov
fiadds
es
cmp
inc
inc
push
roll
jns
mov
xor
xor
and
push
lods
cmpsl
mov
mov
int
mul
mov
lret
sub
jne
popf
push
stos
push
repnz
divb
mov
jg
push
ljmp
pusha
xor
and
test
lea
or
jns
mov
pushf
cs
mov
stos
xor
xor
sub
ret
lds
out
sbb
jl
lret
ret
insb
xchg
clc
cmp
out
mov
and
nop
jne
cmp
movsb
jbe
xlat
push
xchg
mov
insl
int
cmpsb
pop
adc
icebp
dec
sbb
ljmp
pusha
inc
enter
ficoml
push
jo
pop
pop
addr16
and
pop
xchg
add
cmp
mov
andb
lock
test
rorb
cmp
in
dec
and
es
pop
into
outsl
xlat
in
std
int
cmp
outsb
inc
sti
cmp
push
enter
inc
sub
sub
loop
mov
ja
sub
jb
or
std
cmc
jmp
mov
lret
dec
xlat
pop
push
sub
add
mov
mov
imul
loope
dec
jge
sbb
sbb
xor
pop
adc
out
rcr
xor
jp
mov
dec
dec
aad
ja
test
mov
and
xchg
push
shrb
inc
xchg
and
xchg
adc
or
call
jb
sub
fmuls
xor
ja
hlt
enter
cwtl
dec
adc
pop
or
daa
icebp
sti
dec
pop
and
mov
and
add
je
mov
aaa
push
jo
xor
cmp
dec
ret
frstor
loope
movsl
pop
pop
or
je
mov
fwait
adc
inc
sbb
xor
mov
out
dec
or
and
xor
jge
cs
daa
or
sbb
push
and
mov
sub
lea
loope
test
lods
xchg
out
fs
shlb
icebp
test
xor
sbb
fsubrs
ljmp
inc
stc
cwtl
enter
jmp
in
sbb
sbb
inc
pop
inc
jle
leave
fldt
insl
sbb
sbb
test
sub
sbb
jecxz
popf
push
stos
notb
scas
mov
jp
fstpl
jecxz,pn
pop
jle
gs
shll
pushf
xchg
push
cmc
inc
mov
inc
adc
cmc
out
mov
dec
cmp
hlt
mov
outsb
xor
or
leave
mov
inc
and
dec
lea
test
sbb
mov
addr16
shll
mov
sub
insl
adc
pusha
adc
inc
inc
inc
inc
aas
test
push
adc
cmp
and
and
int3
movntps
scas
dec
cmp
jnp
loope
push
jb
push
inc
scas
mov
data16
or
sahf
cltd
pop
pop
sub
hlt
movsl
lret
mov
or
pop
sbb
jg
pop
lods
add
out
outsl
incb
insl
int3
sub
cli
clc
push
dec
dec
flds
mov
mov
enter
test
bound
mov
fistpll
cmp
jnp
fistpll
ret
mov
loope
xchg
adc
jmp
jns
icebp
dec
stos
vdivpd
xchg
sbb
push
neg
insl
ret
xchg
nop
push
adc
pop
add
loope
rolb
sbb
push
adc
pop
stos
add
lods
cwtl
add
add
dec
xor
ja
xchg
dec
or
push
test
pop
addr16
adc
or
out
push
xor
mov
movzbl
imul
cwtl
adc
jle
je
dec
mov
lret
jmp
push
jge
int
jge
mov
adc
in
cmpsl
call
nop
out
stos
in
dec
jne
int
lret
inc
dec
push
loopne,pt
pop
out
icebp
jnp
aad
aaa
shll
jmp
sub
repz
or
loope
sahf
sbb
or
xorb
mov
in
or
xor
out
lcall
mov
imul
in
insl
push
mov
mov
push
stos
sub
cltd
shl
add
sub
cmpl
aad
mov
xor
push
js
cmp
out
stos
dec
pop
call
imul
push
push
pop
imul
xchg
xchg
jns
insl
fwait
sbb
mov
adc
xor
mov
and
rcr
cli
add
jo,pt
add
test
out
mov
pop
xchg
cs
in
ficomps
imul
mov
les
imul
pop
mov
leave
pop
pop
and
cmpsb
xor
jg
adc
test
in
rorl
pop
push
push
xchg
ret
clc
xchg
or
ficomps
jnp
mov
cmpl
sahf
in
das
fdiv
pop
test
xchg
jne
sub
inc
mov
xor
dec
imul
sbb
add
repz
jle
mov
dec
testb
xchg
leave
xorl
cmp
rol
loope
sbb
pop
lods
inc
loope
addr16
pop
or
or
or
jb
xor
lods
rcll
cmp
sub
xor
mov
or
dec
mov
inc
pop
ror
jmp
mov
sub
jl
out
bound
arpl
imul
sub
cwtl
xor
mov
mov
pop
mov
inc
rol
inc
mov
rol
orb
movsl
test
fsubl
lods
popf
inc
sbb
jne
lahf
dec
or
push
aas
fiadds
pop
mov
int
push
dec
movsl
or
aad
or
imul
cmpsl
pop
push
fcomip
xor
ljmp
push
aas
clc
xchg
mov
roll
icebp
mov
sub
inc
dec
xchg
scas
shrl
das
sbb
int
sub
sub
std
add
insb
cmp
enter
push
divb
dec
adc
xor
test
cmp
std
sbb
leave
inc
ret
out
nop
xor
dec
popf
and
inc
call
jp
adc
int
mov
pusha
jb
cltd
jg
dec
int
and
pop
or
pop
inc
push
fucomip
out
lret
push
xchg
pop
std
arpl
xor
mov
mov
mov
xchg
test
jecxz
mov
mov
das
dec
lea
jo
push
shlb
fwait
dec
sub
enter
jp
fnstenv
stos
sub
pop
inc
fiadds
cmp
mov
ja
fcom
cltd
jg
imul
mov
mov
jl
test
jo
push
mov
insl
add
test
xchg
in
shr
dec
mov
rol
ja
cmpsb
cld
lret
or
