push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
push
mov
sub
mov
push
push
push
push
mov
movl
call
andl
movl
mov
movl
mov
mov
movl
mov
mov
mov
mov
mov
imul
xor
add
incl
mov
push
push
mov
call
mov
mov
mov
mov
mov
xor
mov
div
mov
mov
mov
mov
sub
not
add
xor
mov
mov
incl
add
cmpl
jb
cmpl
je
mov
mov
jmp
push
call
mov
mov
mov
xor
push
push
push
push
call
movl
mov
push
shl
push
add
incl
push
push
call
mov
mov
test
je
push
call
mov
push
push
call
mov
call
add
cmpl
je
cmpl
jne
lea
push
push
pop
add
xor
div
push
pushl
push
call
mov
push
push
push
push
call
lea
mov
lea
add
lea
add
mov
mov
mov
mov
and
call
mov
mov
mov
call
mov
mov
push
push
mov
xor
push
push
mov
mov
call
mov
lea
push
push
push
lea
push
pushl
movb
pushl
movb
push
call
push
push
push
call
mov
call
mov
call
test
je
pushl
mov
pushl
pushl
pushl
call
cmpl
mov
jne
push
call
test
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
mov
push
mov
sub
mov
push
mov
push
push
lea
mov
call
lea
xor
call
test
je
test
je
cmpb
je
mov
push
call
mov
push
mov
call
mov
lea
push
call
mov
test
je
push
push
push
push
call
add
push
call
test
je
push
push
push
call
mov
test
jge
push
push
push
call
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
call
mov
mov
pop
pop
pop
call
leave
ret
push
mov
push
push
mov
imul
push
mov
cmp
jb
mov
push
call
mov
add
imul
push
xor
pop
div
mov
mov
mov
mov
sub
mov
test
je
mov
sub
push
mov
call
xor
divl
mov
add
cmp
jae
mov
mov
imul
xor
divl
xor
mov
sub
imul
div
mov
cmp
jae
mov
sub
push
pushl
pushl
call
add
add
add
add
cmpl
jne
pop
pop
pop
leave
ret
mov
mov
ret
push
mov
sub
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
jne
inc
jmp
andl
push
push
lea
lea
cmpl
mov
je
mov
jmp
mov
mov
add
xor
nop
movb
mov
mov
inc
cmp
jb
mov
test
je
lea
movsbw
mov
add
inc
mov
test
jne
lea
push
call
mov
test
je
mov
add
andl
cmpl
je
mov
mov
mov
test
jns
and
jmp
add
add
push
pushl
call
mov
test
je
incl
mov
lea
cmpl
jne
mov
incl
mov
imul
add
lea
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
push
mov
testl
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
pop
ret
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
test
je
andl
mov
sub
add
mov
mov
mov
lea
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
cmpl
mov
je
or
sub
mov
mov
sub
add
mov
mov
mov
lea
push
push
push
call
mov
mov
mov
sub
add
mov
movzwl
add
lea
movzwl
lea
mov
mov
mov
andl
xor
cmp
jae
lea
mov
mov
addl
push
lea
pop
rep
mov
add
movzwl
add
incl
cmp
jb
mov
mov
add
pop
mov
xor
pop
inc
pop
leave
ret
mov
push
mov
push
mov
xor
mov
test
movl
je
push
call
pushl
call
mov
xor
inc
pop
pop
ret
mov
mov
mov
mov
rol
imul
add
mov
mov
mov
ret
push
lea
sub
mov
push
push
push
push
push
push
mov
call
push
push
call
test
je
push
xor
push
call
push
mov
call
mov
cmp
je
lea
push
push
call
mov
mov
mov
mov
push
push
mov
call
cmp
jne
movl
push
push
call
push
push
mov
call
xor
cmp
setl
mov
mov
cmp
mov
je
mov
cltd
sub
sar
mov
push
push
call
mov
neg
sbb
and
add
push
mov
call
push
mov
call
movzwl
push
call
pop
pop
push
push
push
call
push
push
push
call
push
push
lea
push
call
lea
push
call
mov
mov
mov
movzwl
xor
jmp
cmp
jne
cmpw
je
inc
inc
mov
cmp
jne
jmp
xor
inc
lea
push
movl
movl
call
mov
push
pushl
call
push
push
push
push
push
pushl
mov
call
cmp
mov
mov
jne
xor
push
pop
lea
rep
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
movl
movl
movl
mov
movl
movl
call
test
je
mov
push
mov
imul
cltd
pop
idiv
push
push
mov
mov
add
mov
lea
mov
mov
shl
mov
lea
push
call
mov
mov
sub
sub
mov
cmp
mov
mov
jle
mov
push
pushl
neg
push
push
pushl
sbb
push
push
push
and
add
push
push
push
push
call
cmp
mov
je
lea
push
call
push
push
push
pushl
call
test
jne
call
xor
jmp
call
pushl
call
pushl
pushl
call
pushl
call
push
pushl
call
mov
xor
cmp
sete
push
call
cmp
je
call
cmpl
je
cmpl
je
push
push
push
pushl
call
xor
inc
pop
pop
pop
add
leave
ret
push
call
pop
ret
mov
push
mov
sub
mov
push
push
push
mov
mov
mov
push
mov
lea
push
pushl
pushl
call
lea
xor
test
je
push
push
push
call
add
test
je
push
add
push
call
inc
pop
add
cmp
pop
mov
jl
mov
mov
pop
pop
mov
pop
call
leave
ret
push
mov
mov
mov
mov
mov
mov
cmp
jb
push
push
mov
mov
mov
lea
xor
test
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
mov
mov
lea
ror
lea
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
mov
inc
cmp
jb
pop
pop
pop
ret
mov
push
mov
xor
cmp
jne
mov
jmp
mov
push
mov
mov
test
je
mov
inc
inc
decl
jne
cmpl
pop
jne
dec
mov
movb
pop
ret
jmp
mov
push
mov
push
mov
test
je
push
mov
test
je
andl
push
call
push
call
push
call
test
je
push
call
push
call
mov
push
call
push
call
pop
pop
pop
ret
jmp
push
mov
sub
mov
mov
mov
sub
mov
je
mov
test
je
push
mov
add
test
je
push
push
mov
sub
mov
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
addl
decl
jne
mov
test
jne
pop
pop
pop
xor
inc
leave
ret
push
mov
sub
push
push
mov
xor
cmp
je
mov
cmp
je
cmp
je
cmp
je
add
push
lea
push
push
call
mov
add
add
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
sub
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
mov
mov
lea
ror
mov
lea
add
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
cmp
jb
mov
mov
test
je
mov
sub
mov
mov
inc
dec
jne
pushl
mov
pushl
pushl
pushl
pushl
call
mov
mov
mov
call
mov
add
push
pushl
pushl
pushl
call
add
pop
jmp
xor
pop
pop
leave
ret
mov
push
xor
cmp
je
cmp
push
mov
je
push
call
jmp
push
push
push
pushl
call
push
push
push
pushl
call
push
push
push
pushl
call
pop
pop
ret
push
mov
sub
push
lea
push
push
movb
call
lea
push
call
add
cmpb
jne
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
mov
jmp
mov
leave
ret
add
cmpsl
inc
mov
jle
aad
push
or
xchg
addb
adc
xor
adc
inc
jne
iret
push
xor
aad
ret
aam
stos
sub
loopne
loope
imul
and
dec
pop
stos
or
leave
pop
sub
fists
popf
out
jne
cmp
fsubrp
fisttpl
enter
mov
jno
int3
ret
sti
negl
mov
lods
mov
jo
jg
cmp
lahf
insb
fdivrl
xchg
fabs
dec
dec
loop
pop
outsl
lcall
push
mov
add
notl
add
add
cmp
insb
jl
mov
cmp
movsb
pop
js
adc
mov
mov
cmp
adc
push
pop
mov
aam
into
in
cmp
xchg
pusha
pushl
andb
jns
xchg
inc
cmc
mov
insl
das
cmp
xchg
data16
push
jp
aam
fsqrt
mov
inc
sub
rcrl
push
insb
xchg
sbb
add
shr
jb
or
shl
fwait
mov
and
mov
or
inc
dec
sbb
lahf
in
push
pushf
or
inc
fmul
jecxz
jl
mov
mov
cmpsl
shlb
mov
nopl
test
cmc
dec
mov
into
call
mov
pop
les
mov
mov
testb
inc
stc
mov
movsl
lcall
pop
loopne
sbbl
xor
inc
sahf
add
call
lock
add
add
and
jl
sub
jne
push
pop
je
out
cmp
sahf
or
shlb
and
sbb
push
push
xchg
add
push
shr
rclb
sarl
aad
les
push
dec
test
jle
fs
aaa
mov
movsl
sub
mov
dec
pop
push
cmpsl
and
pop
cltd
mov
lock
adc
adc
int3
jbe
adc
sbb
insb
mov
pop
mov
cmc
fsubs
sahf
ret
outsb
sub
mov
outsl
mov
call
and
out
and
mov
mov
sub
xchg
push
mov
test
xchg
clc
out
insl
sbb
call
dec
test
div
pop
sub
cwtd
mov
pushf
mulb
push
sub
adc
bound
clc
mov
out
subb
scas
mov
lock
jae
ss
and
xor
jo
fwait
add
jmp
orb
aad
inc
mov
jg
or
mov
add
pop
je
insb
xor
pop
sub
mov
mov
sbb
lret
mov
cmp
xor
pop
addl
fnstsw
mov
cmp
push
scas
mov
pushf
movl
int3
negb
xor
inc
pop
inc
push
mov
outsb
sbb
mov
lret
push
pop
aas
popa
nopl
popf
jecxz
cmc
bound
loope
add
lock
push
mov
arpl
add
cwtl
leave
adc
dec
pop
inc
dec
mov
sbb
lods
pop
push
imul
mov
inc
xor
push
inc
test
dec
ficomps
enter
cmpsb
xchg
mov
push
adc
stc
or
add
popa
fistpl
mov
in
scas
insb
push
clc
or
cltd
mov
in
scas
pop
popa
aad
xchg
adc
shlb
mov
sbb
dec
fmull
push
or
cs
pop
aam
es
inc
push
stos
dec
pop
cmpsl
mov
add
add
fnstcw
fmuls
add
mov
jg
mov
jns
cmpsb
daa
and
dec
push
or
push
out
inc
les
mov
lret
inc
shl
sub
mov
inc
mov
push
ficomps
fldt
mov
fisttpll
scas
scas
pop
push
enter
mov
pop
test
scas
popf
stos
mov
mov
mov
add
sti
inc
cli
ja
lea
sbb
and
sbb
stos
ss
cltd
mov
sub
pusha
mov
aas
lock
jge
mov
or
cld
or
call
cmpsb
mov
fdivrl
pop
push
jne
or
pop
je
adc
lret
sti
push
cmp
jae
pop
pop
in
mov
rclb
jmp
sti
adc
jg
inc
dec
xor
imul
stc
ret
pusha
lods
add
add
test
imul
shll
lahf
or
mov
adc
cmp
xchg
adc
cwtl
ret
arpl
push
fdivrs
mov
sub
repnz
add
aam
sub
add
inc
inc
shrb
inc
cmp
and
xchg
inc
jmp
pop
out
adcb
or
add
push
cltd
test
push
mov
sub
add
mov
push
pop
push
inc
pop
sti
pop
sbb
push
mov
xor
sub
inc
orb
xchg
daa
inc
cltd
mov
mov
pop
insl
sbb
sub
sbb
int
lea
ret
stos
mov
out
clc
or
mov
add
ss
and
in
ret
mov
push
cs
scas
adc
add
leave
dec
popa
ret
jmp
jg
pop
dec
xchg
or
stos
and
xor
inc
xor
cmc
sbb
gs
insl
pop
pop
sahf
test
stos
js
loope
fwait
inc
stos
leave
enter
insb
push
subb
scas
push
jmp
ss
mov
mov
jnp
sub
xlat
lea
push
jp
cmc
out
mov
sar
or
stos
xchg
mov
outsl
stos
sub
add
popf
jge
shrb
lods
adc
lock
cs
sub
std
lods
iret
jmp
mov
pop
inc
pop
mov
cmpsb
add
cmp
lea
mov
sti
jl
sub
cmp
jno
imul
cmpsl
push
dec
loop
lcall
subl
in
or
cmpb
call
add
pop
xchg
addr16
clc
repz
pop
mov
add
sbb
cli
and
adc
mov
pop
mov
xchg
inc
xchg
out
imul
or
movsb
sbb
xor
cmp
fisttpll
push
outsb
aam
pop
and
xchg
fistpll
repnz
inc
aaa
push
pushf
loopne
enter
sarl
sub
mov
in
fisubrs
or
lahf
xor
push
popa
popf
push
in
adc
add
sbb
jmp
mov
aad
push
mov
sbb
mov
ret
cli
cmp
cmp
inc
addl
xor
popf
pop
fistl
xchg
xchg
dec
repnz
call
mov
pop
push
cmp
mov
adc
in
pop
orb
jg
outsb
fwait
shl
sbb
popa
push
sbb
mov
push
popa
inc
push
ja
cmpsl
push
mov
mov
push
or
popa
or
les
jl
std
or
les
je
sbb
test
js
or
pop
sti
test
sahf
shlb
sbbb
std
sub
cld
mov
fsubrl
mov
daa
ja
inc
repz
js
xchg
imul
jp
test
add
add
je
inc
addr16
add
mov
cmpl
outsb
cmp
lret
sub
mov
jge
in
dec
iret
push
dec
cs
fisttps
pop
fwait
imul
fbstp
push
ljmp
lods
sahf
sub
pop
rcll
iret
push
aas
cld
jbe
xchg
xchg
sbb
pusha
pop
pop
fnstcw
pop
stos
hlt
sbb
mov
or
enter
adc
jge
cli
arpl
or
cmp
ja
shlb
mov
mov
in
sti
lea
xchg
pop
add
insb
pop
dec
sbb
js
cmp
mov
xchg
mov
pop
adc
pop
sbb
sbbb
in
std
call
sarl
cmp
pop
call
addl
mov
add
dec
enter
divb
or
mov
insl
push
fmull
mov
inc
in
or
add
pop
mov
movsl
add
mov
call
xchg
or
scas
pop
pop
jae
jecxz
and
jns
ds
pop
test
cwtl
pop
or
and
and
mov
sub
pop
pop
add
inc
add
ret
jb,pn
sub
iret
add
stc
shll
fwait
sbb
dec
out
cmp
repz
stc
out
jp
shll
sub
and
mov
or
pop
xchg
cmp
out
push
jmp
adc
xor
mov
xchg
mov
jns
mov
mov
subb
push
xor
cmp
mov
movl
adcl
add
cmpsl
clc
lods
inc
add
movsl
inc
mov
cmpsb
jo
sbb
pop
out
xchg
xor
mov
stos
inc
leave
or
mov
xor
es
xchg
pop
cs
jg
mov
and
mov
inc
jno
add
fildll
mov
stos
mov
jno
psllw
aam
inc
sarl
fcompl
fsubr
mov
add
in
fiaddl
lldt
ret
andl
sub
cmp
fs
mov
shlb
lods
sbb
mov
insl
cmp
and
jp
divb
rcll
pop
push
push
cmpsl
mov
pop
idiv
lcall
dec
mov
sbb
test
xor
outsb
add
ljmp
push
repnz
add
add
pop
push
outsb
cmp
fisttpll
xor
outsl
pop
das
adc
push
sti
outsl
add
sbb
adc
loope
xchg
lcall
shlb
fstps
adc
cs
movsb
js
xor
ret
pop
into
adc
push
fists
dec
movsl
pop
stc
cmp
dec
jecxz
out
push
cmp
lods
mov
mov
add
icebp
xchg
xorl
jns
fstpt
xchg
xor
shrl
hlt
jl
ficomps
movsb
movsb
psrad
fcompl
lea
add
ljmp
icebp
add
mov
push
and
shll
ret
insb
stos
andl
mov
fistpl
mov
fs
scas
pop
or
sub
dec
pop
mov
dec
insb
js
outsl
cmp
stc
dec
mov
add
add
int
push
iret
add
stc
bound
xorl
adc
lea
sub
dec
lods
xlat
in
fldcw
js
in
pop
idivl
push
into
cmp
lcall
bts
cmp
test
pop
cltd
adc
sub
std
sub
lcall
paddsb
push
adc
or
or
ficoms
mov
lcall
add
pop
stos
inc
jmp
add
push
lock
pop
push
out
adc
test
cwtl
popf
fstps
popf
cli
add
repnz
frstor
mov
xchg
addr16
sbb
aam
dec
repnz
adc
xor
pop
push
add
rolb
push
inc
xor
test
push
ljmp
test
inc
xor
cmc
fstpl
add
or
insb
insb
push
mov
xor
xchg
sub
shrb
pop
cltd
sbb
out
inc
push
sar
dec
in
iret
mov
pop
push
xorb
je
test
add
movsb
mov
add
hlt
push
push
push
mov
and
adc
stos
out
sub
jmp
mov
mov
add
pop
inc
fisubrl
xchg
mov
cmp
dec
mov
and
add
or
or
cmpl
xchg
adc
dec
pusha
sbb
ljmp
add
and
shlb
push
mov
dec
push
inc
jecxz
mov
or
testb
not
sti
das
lcall
test
pop
xchg
push
sub
or
jge
in
jp
ljmp
add
cmp
xchg
test
inc
sub
flds
in
push
scas
add
jnp
add
push
adcb
push
cmp
jnp
xchg
or
js
enter
or
pop
leave
xchg
dec
cmp
das
int3
push
dec
sub
mov
cmpsl
int3
push
and
mov
pop
push
les
dec
xchg
push
push
cmp
sbb
subb
mov
xor
push
or
mov
mov
sbb
nop
adc
mov
fisttpll
fsubrs
adc
inc
mov
jo
push
lods
test
sub
pop
dec
lcall
out
push
mov
mov
push
aad
lcall
pop
inc
mov
adc
and
push
push
add
mov
ljmp
out
lea
jg
shll
mov
sbb
push
or
push
icebp
mov
popa
xchg
mov
lea
in
clc
ret
imul
clc
cmp
cmp
int3
adc
cmpsl
sub
cmp
xchg
mov
insl
push
and
add
mov
jno
gs
clc
add
lcall
xchg
lods
or
mov
mov
test
push
xchg
push
adc
repnz
cltd
cs
xchg
je
mov
push
mov
test
orl
jno
out
lea
jno
test
lock
mov
scas
nop
sub
xlat
jle
xor
jl
lahf
xlat
jge
xchg
fidivl
mov
jae
test
adc
mov
inc
mov
jb
je
add
mov
int3
mov
mov
sahf
and
cmp
xchg
sarb
shll
pop
xor
and
js
and
dec
cmpsl
adc
sbb
outsl
push
into
jmp
lret
add
or
fsubl
add
sub
xor
add
push
aas
and
std
sub
sbb
insl
shll
pop
gs
loopne
das
sbb
add
add
leave
jle
lea
enter
orb
jge
push
jg
push
jb
aad
sbb
inc
bound
push
push
test
mov
dec
mov
aad
jb
adc
jecxz
mov
pop
xchg
faddp
pop
loop
mov
std
scas
outsl
stos
insl
pop
imul
dec
add
or
pusha
mov
or
out
jl
fwait
insl
inc
sbb
jmp
mov
add
cmpsb
fs
xor
dec
ja
mov
xchg
adc
sub
xor
or
lea
bound
mov
mov
pop
jle
sbb
xchg
or
xchg
int
pusha
cmpl
insl
rolb
movsb
cld
adc
inc
cltd
cld
bound
xor
in
pusha
sbb
dec
add
add
rcrl
nop
xchg
add
jmp
repnz
loopne
sub
jnp
fcmovnu
pop
fcomp
leave
xorl
push
inc
in
mov
jecxz
loopne
xor
push
and
bound
add
fsubrs
cmp
pop
jmp
test
lds
outsb
mov
in
dec
ljmp
mov
lea
inc
xor
outsl
repz
shlb
dec
and
add
add
int
pushfw
les
std
sbb
push
mov
jg
shlb
push
sbb
sub
sub
hlt
adc
mov
stos
iret
jbe
lods
inc
sub
pop
aad
pop
xlat
dec
jg
sti
lods
lret
loop
cs
js
pop
push
inc
mov
sub
mov
enter
sub
out
ds
lret
adc
out
mov
int3
pop
and
xchg
fdivrl
xor
scas
cmp
sbb
sbb
fistpl
add
add
or
mov
cmc
inc
je
inc
rcl
and
outsl
leave
cltd
iret
cmp
pop
rcll
jge
mov
test
ds
addr16
int
loop
push
jno
mov
push
aas
testl
inc
xchg
cmp
lods
pop
into
lret
negb
push
or
sbb
xchg
scas
jg
pop
je
mov
mov
pop
call
cld
mov
sub
mov
xchg
add
add
pushf
and
jl
inc
mov
add
cli
in
out
lock
jnp
test
sub
pop
xorb
dec
shrb
mov
push
ss
jecxz
gs
cs
into
cmpsb
push
out
dec
lds
mov
push
int
pop
xor
stc
ret
call
jle
test
jp
cmp
mov
into
add
xor
jle
ds
pop
test
das
int3
mov
add
jb
xor
lcall
cmp
jge
imul
jmp
sbb
mov
mov
cmp
in
jge
lods
mov
cli
imul
jmp
adc
push
add
or
mov
movb
or
pop
mov
cltd
enter
push
cld
mov
fsubl
decl
pop
scas
scas
lods
push
xor
xorl
jl
cmp
xchg
movsl
pusha
add
fidivrl
iret
stos
mov
jae
scas
and
inc
ret
bound
xor
xor
add
ficomps
sbbl
scas
push
xchg
push
push
xlat
nop
inc
push
xor
mov
scas
stc
pop
xor
mov
loope
movsb
aad
push
cmpsl
ljmp
or
lcall
mov
mov
xchg
adc
dec
lock
arpl
aam
and
fcmovb
sahf
movsl
and
mov
sbb
addl
ljmp
mov
cwtl
xor
lea
sub
adc
add
and
enter
fs
mov
insb
pusha
jge,pn
push
and
mov
stos
shll
dec
call
add
les
popf
push
inc
clc
jno
cmc
pushf
inc
cmp
ret
shll
clc
fstps
movsl
mov
leave
mov
sbb
mov
jp
scas
and
ret
push
adc
lsl
mov
xor
push
push
dec
mov
jns
or
xor
and
jno
sub
idivl
popa
push
jae
popf
mov
xor
sbb
dec
pop
inc
in
mov
mov
ficoms
jno
mov
ret
or
fld
fcmovbe
add
call
cmp
jb
xlat
and
clc
jo
mov
mov
scas
jb
movsb
add
push
sub
in
out
jbe
enter
cmpsb
jecxz
mov
sti
stos
outsl
leave
popa
add
jecxz
or
lret
cvtpi2ps
movsb
imul
movsb
dec
inc
scas
add
outsb
push
mov
jl
repz
push
add
mov
in
xor
fmull
outsb
sbb
scas
push
les
cmp
push
mov
clc
xchg
mov
dec
popf
mov
pop
xchg
adc
fmul
pusha
add
popf
push
jp
arpl
fsubl
push
lods
pop
imul
sbb
addb
decl
out
faddp
arpl
xchg
lods
mov
jl
xchg
xchg
pop
xchg
add
inc
sub
sub
loopne
daa
xchg
into
and
data16
add
das
jg
movsb
sbb
cltd
bound
repz
push
adc
jno
or
les
dec
jl
mov
inc
decb
xchg
push
fcoms
mov
sub
lret
outsl
ja
and
aaa
mov
testl
into
dec
loopne
xlat
pushf
xor
sti
subb
sbb
add
add
bound
mov
mov
xchg
sub
cmp
mov
sub
aam
cltd
imul
cmp
jno
pop
inc
cmp
mov
andl
movsl
pop
inc
mov
inc
popf
adc
adc
sbb
cmc
xchg
xor
lahf
cmc
sbb
xchg
pop
and
ds
sti
outsl
sbb
outsb
sbb
jl
mov
add
add
movsl
leave
adc
lods
dec
movsl
call
scas
outsb
adc
pop
mov
sbb
add
push
lret
add
lds
pop
or
pmaddwd
lods
xchg
sub
arpl
xchg
inc
cld
not
inc
daa
out
int
enter
fcmovnbe
aam
adc
jle
shlb
movsb
add
je
arpl
sbb
mov
cmp
js
clc
test
jb
jo
adc
lock
rcr
adc
add
sti
add
sbb
cmp
pusha
jp
pop
mov
or
shll
lret
cmpsl
pop
outsl
mov
jle
push
push
movsb
test
mov
imulb
inc
dec
gs
ss
stos
stc
push
cmp
push
pop
xchg
cmp
data16
int
sbb
sub
lock
sub
lret
in
and
test
scas
imul
sub
popa
add
and
add
push
push
cld
pop
pop
dec
jno
ja
mov
adc
jne
fstp
loopne
mov
jmp
pop
leave
pop
je
scas
add
ja
adc
aam
dec
sub
mov
mull
stos
dec
call
xchg
add
jbe
cmp
inc
shrb
test
mov
cltd
adc
sub
adc
shrl
adc
or
cmp
xlat
imul
cmp
sub
shlb
fwait
pop
mov
addr16
es
jns
mov
xchg
lcall
pop
enter
repnz
aad
sbb
dec
stos
iret
mov
mov
push
lcall
pop
insl
pop
mov
in
cmc
loopne
cli
xchg
pop
loope
add
and
xlat
jmp
xor
jecxz
std
mov
xchg
sub
pop
add
rol
sub
sbb
sbb
daa
xor
out
int3
fildl
mov
pop
insl
cmpsl
adc
andw
das
or
cmp
jbe
sub
push
xchg
adc
sbb
insl
mov
xchg
inc
lods
xchg
movsb
test
add
pop
mov
lcall
mov
enter
xchg
inc
dec
je
std
repnz
push
push
pop
push
aaa
dec
or
pop
dec
jl
and
mov
negl
cmp
fcoms
push
pop
rcl
add
push
aad
sbb
int3
adc
cwtl
mov
popf
pop
movsb
xchg
cmp
sbb
push
stos
inc
sbb
cmpl
xchg
or
adc
stos
mov
frstor
dec
and
and
sub
cmpsb
icebp
mov
les
aad
and
mov
rorb
inc
jg
inc
fsts
xchg
into
sbb
adc
repz
jne
addl
push
xchg
mov
xchg
mov
loop
and
jg
arpl
fwait
add
movsl
jle,pn
stc
cmp
inc
lea
push
pop
jns
stos
mov
push
cmp
mov
dec
and
mov
or
insb
push
dec
int3
mov
idivb
scas
fs
push
jae
jbe
mov
loope
xor
out
lahf
inc
jmp
dec
add
js
pusha
imul
or
push
cmp
mov
push
inc
arpl
pushf
adc
cmpsl
mov
sbbl
cmpl
mov
push
repnz
outsb
insl
dec
test
mov
mov
xchg
sbb
xchg
popa
or
les
lcall
inc
and
in
popf
or
mov
test
ss
and
out
cmc
dec
pop
xor
rolb
cmp
cmp
pop
push
cmpsb
inc
xchg
shr
jno
mov
cmp
inc
sbb
add
sbb
jl
popf
loopne
sbb
ret
adc
jno
mov
and
int
push
cmp
xchg
or
pop
jnp
cmc
pop
pop
loopne
je
jno
in
cmp
jb
cmpsl
lea
mov
push
mov
inc
lds
xchg
out
js
sbb
repz
jle
rolb
add
xchg
in
ret
xchg
jge
movsl
movsb
adc
add
jns
lcall
fadds
add
push
cmc
xlat
sti
xor
mov
roll
fwait
xlat
lods
fstl
shrb
movsl
das
mov
add
out
mov
xor
flds
push
jb
das
loope
rol
stc
pop
aaa
mov
xchg
imul
add
jecxz
inc
mov
fldt
dec
push
stos
int3
add
add
push
inc
mov
mov
fisttps
into
fistpll
mov
leave
loope
xchg
jns
ja
bnd
aam
mov
or
and
ret
sub
jp
mov
lds
insl
add
loope
fsubrl
stc
imul
cltd
mov
add
ret
sar
xchg
dec
dec
push
jnp
loopne
adcb
jle
fwait
outsl
add
dec
mov
jl
nop
aam
popa
mov
mov
jo
jmp
jne
mov
dec
fcoms
add
pop
dec
in
jg
hlt
mov
fadds
fisubrl
jmp
call
insb
jecxz
lret
scas
pop
pushf
xor
js
push
addr16
xchg
mov
jecxz
das
andb
mov
mov
adcl
adc
movsl
mov
lods
repz
es
ret
clc
pop
cmp
add
cmp
inc
cmp
in
and
mov
insl
and
icebp
iret
arpl
mov
mov
mov
hlt
iret
mov
fwait
xchg
sub
push
xchg
dec
mov
dec
push
std
test
cmp
loopne
arpl
std
jmp
mov
sub
cmp
inc
add
sbb
pop
mov
mov
cmp
add
add
pushf
and
loopne
pusha
jp
sbb
fisubs
shll
mov
or
leave
mov
stc
mull
mov
xor
inc
adcl
and
fidivrs
mov
stos
xchg
xchg
adc
in
andl
repnz
aaa
push
fwait
shr
dec
jmp
scas
outsb
or
addr16
cmc
aam
fucomi
std
adc
inc
adc
cmp
xor
mov
repnz
cmp
add
pop
jb
in
cmp
mov
lea
imul
dec
adc
push
repnz
and
sahf
pusha
inc
or
lds
and
jle
insb
cmp
and
insb
cmp
popf
xchg
jle
mov
imul
push
cmp
mov
repnz
ficompl
leave
cmpsb
add
push
adc
inc
add
imul
imul
mov
fcmovnbe
imul
pushf
adc
in
test
xor
ror
fwait
inc
fs
gs
cmpsl
cs
leave
xchg
and
push
mov
mov
mov
out
stos
and
dec
mov
bnd
mul
gs
sub
adc
call
cmc
mov
mov
int
pop
int
lods
fwait
add
add
jge
data16
jg
mov
movb
ja
push
pop
mov
adc
jnp
aam
gs
loope
push
outsl
sub
mov
jo
adc
mov
in
jb
pop
cli
pop
push
loop
push
aam
jbe
addr16
cmp
push
repz
sub
mov
jmp
ret
inc
mov
int3
mov
mov
push
add
add
push
roll
out
pop
pop
jmp
ret
stc
add
pop
pusha
adc
jo
push
push
dec
ret
ds
adc
push
clc
insb
add
enter
lret
xor
sbb
cmp
fs
xchg
es
lret
sti
or
imul
daa
or
movsl
testl
icebp
sbb
mov
popf
aam
xchg
xchg
add
mov
push
add
imul
lret
sbb
icebp
call
inc
push
cmpb
lock
idiv
cmp
ljmp
xchg
pop
mov
xchg
sub
sub
daa
mov
sbb
add
sub
fldt
in
xor
cli
mul
xor
bound
jge
pop
rcrb
clc
xchg
sbb
push
or
in
clc
pushf
xchg
stos
icebp
rolb
add
int3
add
jne
mov
mov
loopne
mov
push
movsb
push
sti
std
mov
lea
and
jmp
adc
lods
clc
add
iret
int
dec
call
mov
stos
decb
lods
and
push
mov
fsts
test
jge
fistpll
out
jp
or
cli
scas
adc
in
inc
scas
das
xchg
add
mov
ja
iret
repnz
jae
jo
out
sarb
rcll
xor
imul
push
lret
js
xor
jae
adc
fstpl
rorl
pop
shrl
or
hlt
xchg
cmpsl
test
popa
pop
loopne
stc
imul
push
sbbl
mov
cwtl
push
adc
cli
scas
add
cwtl
popa
add
fdivrp
mov
adc
and
mov
daa
mov
mov
fwait
rol
add
sbb
adcl
jo
sub
xchg
sbb
jle
nop
leave
and
in
cmpsb
ss
sbb
pop
pushf
ja
enter
and
dec
js
rol
cltd
fists
and
incb
shrl
xor
add
in
mov
