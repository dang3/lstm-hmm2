push
mov
add
sub
andl
lea
push
movb
mov
mov
mov
mov
rep
pop
push
push
rdtsc
mov
mov
test
jne
mov
jmp
mov
not
ror
not
movzbl
lea
cmpb
jne
push
pushl
movb
pushl
call
pushl
mov
call
push
pushl
mov
pushl
call
mov
mov
cmp
jne
movzbl
push
pushl
pushl
call
pushl
pushl
pushl
call
xor
pop
lea
test
pop
leave
ret
push
xor
cmp
jbe
lea
push
mov
add
mov
add
push
add
pop
add
add
cmp
jb
pop
pop
ret
push
mov
push
push
push
xor
push
mov
call
push
lea
push
push
xor
add
push
push
push
push
mov
call
push
mov
call
mov
nop
push
add
pop
jne
mov
cmp
jne
push
pushl
push
pushl
call
jmp
cmp
je
cmp
jne
testl
je
cmp
je
push
push
push
push
call
push
mov
jmp
push
push
push
push
push
push
mov
call
test
je
push
mov
call
xor
pop
pop
leave
ret
push
mov
push
mov
add
mov
push
xor
mov
cmp
je
add
add
sub
cmp
je
push
mov
cmpl
jne
mov
add
push
mov
call
pushl
push
mov
call
test
je
mov
add
jmp
cmp
je
sub
mov
test
jne
jmp
mov
lea
mov
mov
add
sub
cmpl
jne
pop
pop
leave
ret
push
mov
cmpl
push
push
jb
mov
mov
mov
pushl
popl
sub
sub
lods
xor
stos
sub
xchg
add
sub
add
rorl
sub
dec
jne
pop
pop
pop
ret
push
mov
sub
add
push
push
push
push
xor
lea
push
push
mov
call
add
add
push
push
push
push
push
push
push
lea
push
mov
mov
call
cmp
je
push
mov
call
pop
test
jne
push
push
mov
call
pop
pop
test
jne
mov
cmp
je
mov
jmp
push
mov
call
push
lea
push
push
mov
push
mov
mov
call
mov
mov
call
push
push
push
mov
lea
push
mov
push
push
push
lea
push
call
mov
cmp
je
mov
call
cmpl
jne
cmp
je
cmp
jne
push
push
push
push
mov
call
mov
lea
push
mov
mov
push
pushl
push
mov
call
cmp
je
cmpl
jne
lea
call
pushl
mov
pushl
pushl
push
call
mov
sub
mov
mov
add
add
push
mov
and
add
push
add
call
mov
push
mov
call
pop
test
jne
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
call
add
add
push
mov
call
test
je
push
mov
call
push
jmp
push
mov
call
call
push
mov
call
push
mov
call
mov
mov
add
pop
pop
mov
mov
mov
add
movzwl
lea
add
mov
movzwl
lea
mov
mov
sub
xor
mov
mov
mov
cmp
je
mov
cmp
je
add
mov
mov
mov
jmp
mov
mov
mov
cmp
je
add
lea
mov
mov
mov
mov
add
push
push
push
call
or
sub
mov
push
mov
call
pop
push
mov
call
push
lea
push
push
pushl
mov
call
push
mov
call
push
lea
push
push
pushl
mov
call
push
mov
call
push
lea
push
push
pushl
mov
call
mov
call
push
mov
call
push
mov
call
pop
mov
mov
sub
push
push
call
call
test
je
cmpl
je
mov
mov
call
movzwl
xor
xor
mov
cmp
jae
mov
mov
subl
addl
push
pop
rep
mov
mov
mov
add
add
add
mov
mov
movzwl
push
add
pop
cmp
jb
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
mov
add
push
lea
push
call
xor
mov
push
push
push
push
push
mov
call
call
cmp
je
in
push
push
pushl
mov
call
jmp
pushl
pushl
pushl
jmp
push
mov
call
xor
pop
pop
pop
leave
ret
push
mov
push
mov
movzwl
movzwl
andl
add
je
push
mov
push
lea
testl
je
mov
mov
and
add
push
push
pushl
call
jmp
mov
mov
add
add
movzwl
movzwl
incl
add
add
sub
cmp
jb
pop
pop
pop
pop
ret
push
mov
push
push
mov
mov
mov
mov
push
push
lea
mov
mov
mov
add
not
add
not
shr
add
push
mov
sub
add
push
lea
push
mov
call
add
xchg
add
mov
mov
mov
mov
push
popl
add
xchg
sub
lods
xor
stos
sub
add
sub
add
rorl
sub
dec
jne
mov
mov
neg
add
add
sub
add
mov
imul
add
mov
imul
add
mov
mov
mov
add
add
and
add
movl
mov
pushl
lea
push
push
mov
call
mov
add
xor
add
add
xchg
sub
decl
mov
jne
addl
xchg
subl
pop
pop
leave
ret
push
mov
mov
add
mov
add
sub
test
je
andl
push
lea
lea
cmpl
mov
je
push
mov
mov
add
push
mov
call
mov
andl
add
cmpl
mov
je
mov
mov
test
jns
and
jmp
lea
push
pushl
mov
call
incl
mov
mov
lea
cmpl
jne
mov
incl
mov
mov
imul
lea
lea
cmpl
jne
pop
pop
xor
lea
test
leave
ret
mov
add
mov
test
je
add
add
add
add
add
push
mov
push
lea
xor
cmp
jbe
add
push
add
pop
cmp
jb
mov
add
xor
cmp
jbe
add
push
add
pop
cmp
jb
pop
pop
xor
push
add
pop
ret
push
push
mov
mov
push
pop
movzbl
xor
mov
push
add
pop
and
rol
imul
push
add
pop
mov
add
sub
mov
mov
not
mov
add
add
not
shl
imul
add
sub
imul
push
add
pop
decl
mov
jne
pop
mov
pop
ret
cmp
cmc
add
add
add
add
push
jg
add
xchg
xor
loop
jno
jns
js
mov
mov
push
push
dec
pop
lret
in
pop
push
decb
pop
mov
sub
mov
in
insl
iret
loope
push
sbb
int
lea
into
nop
int3
mov
into
lods
mov
lock
inc
movsb
lock
stos
ds
pusha
cmpsl
pop
xorb
jecxz
inc
subl
add
dec
mov
jecxz
adc
cmp
sub
iret
xchg
push
pop
sub
pop
ja
dec
mov
repnz
push
xchg
outsl
dec
xchg
pop
aaa
sar
mov
sub
pusha
rolb
jno
adc
xchg
scas
mov
xlat
pusha
out
cmp
adc
mov
aam
pop
add
cltd
aad
mov
ja
jo
das
popf
lret
dec
pop
cltd
call
stos
pushf
inc
xchg
mov
lock
push
rcrl
lret
push
adc
dec
out
cmpsb
inc
pop
jno
aam
ret
aas
cmpsb
insl
mov
fwait
sbb
adcl
or
and
mov
or
or
mov
push
sbbl
ficompl
aam
xor
xorb
adc
pop
test
rcll
xchg
addr16
in
sub
imul
xor
sbb
mov
cmpsl
lods
sbbb
xor
jl
or
lret
in
ljmp
mov
mov
push
xor
daa
xchg
xchg
call
dec
sbb
leave
push
mov
mov
pop
dec
imul
add
ret
call
and
test
pop
xlat
imul
jo
cli
xor
sbb
dec
ljmp
insb
mov
and
mov
adc
dec
cmp
movsb
mov
jmp
in
cmp
ret
out
and
shlb
adc
and
jns
mov
jle
pusha
push
and
clc
add
mov
sub
adc
stos
adc
fwait
or
orb
int3
das
sub
sahf
orl
fmull
push
pop
inc
xchg
mov
jae
into
lcall
fs
xor
repnz
xchg
xchg
sub
aam
mov
mov
or
push
xchg
je
add
ds
mov
sub
mov
mov
mov
les
cmp
popa
repz
test
add
xor
out
push
insl
add
test
rclb
adcb
jno
dec
or
fcoml
and
pop
xor
mov
cltd
jne
ds
mov
push
sbbb
imul
andl
stos
cmc
pop
cmpsl
and
pop
or
add
and
sbb
add
sub
push
ljmp
dec
or
cmp
jne
fstpl
inc
jle
rclb
enter
mov
mov
jno
adc
mov
jo
push
mov
mov
mov
push
jmp
ljmp
or
inc
stc
in
cmc
jo
mov
bound
or
pop
cmp
ret
imul
add
ljmp
push
inc
mov
cmp
add
sbb
in
test
pop
les
popf
add
les
cmp
dec
add
imul
mov
push
jle
icebp
adc
jne
dec
hlt
cli
dec
stos
dec
outsl
clc
lock
pop
jle
xor
xchg
xchg
xlat
push
sub
imul
popf
jp
add
out
add
pop
cvtps2pi
push
imul
mov
lahf
icebp
test
mov
xor
idivl
lods
pop
rcr
pop
pop
clc
movsl
inc
mov
mov
xchg
lods
fists
leave
inc
pop
xchg
enter
or
lods
roll
dec
mov
xor
mov
jl
filds
push
scas
sub
dec
mov
ds
scas
sahf
inc
and
jo
jb
rorl
inc
sahf
sahf
sub
call
pop
inc
addr16
rcrl
out
jnp
scas
insb
icebp
push
mov
mov
mov
mov
pop
lcall
lock
adc
lods
dec
dec
sbb
stc
rcrb
xchg
inc
xor
mov
bound
mov
ret
mov
and
pop
mov
ja
push
arpl
ljmp
in
push
stc
dec
lods
sbb
loop
loope
xchg
cmc
cmp
call
xor
sub
sub
mov
imul
xchg
repnz
cltd
inc
jne
push
and
jb
outsb
jno
xlat
fidivrl
aad
cmp
outsb
icebp
ss
in
add
jno
pop
push
push
nop
arpl
sbb
loopne
cld
pop
lahf
sahf
lret
sub
xor
insb
pop
out
mov
lock
ja
je
adc
cs
sbb
sub
xchg
stos
lret
xor
aam
add
mov
mov
test
mov
or
in
aam
or
pop
adc
jb
cwtl
add
dec
sbb
das
ljmp
shlb
scas
scas
les
movsl
std
int
adc
push
or
movd
mov
and
or
nop
xchg
in
popa
jno
xchg
imul
lods
jns
dec
testb
loope
roll
and
jo
scas
cmp
outsl
push
rcrl
std
int
and
out
inc
popf
popf
scas
xlat
mov
jne
mov
adc
testl
push
std
or
dec
mov
cmpl
imul
mov
cmp
out
popf
stos
sarb
xchg
dec
jle
outsl
dec
mov
inc
add
and
inc
sbb
aaa
push
cltd
sbb
push
fildl
fiadds
jae
push
sahf
jecxz
and
jne
outsb
in
jg
lahf
into
flds
insb
ficompl
inc
and
rcr
cmp
inc
aaa
lret
and
mov
mov
sbb
rorl
xor
xor
xchg
inc
and
add
xchg
in
add
in
push
adc
fsts
mov
in
add
outsl
into
mov
rcr
aam
pop
movsl
cmp
mov
mov
sub
stos
decl
pop
clc
mov
je
fdivp
ds
lock
pusha
xchg
bound
mov
pop
mov
sub
push
adc
or
bnd
add
test
test
ljmp
aaa
xor
push
repnz
push
sub
adcl
mov
or
es
mov
pusha
jne
push
test
mov
cmpsl
in
jp
xchg
fisubs
arpl
jmp
inc
sub
std
stos
stc
dec
xlat
out
int
sbb
mov
mov
sub
mov
sbb
test
out
test
arpl
dec
and
std
cmpb
aam
ret
popa
lds
push
xchg
jnp
sbb
or
stos
mov
jo
mov
pop
and
mov
adc
loope
fwait
jmp
pop
insb
out
sbb
fnsave
pop
inc
sbb
sbbb
pop
mov
ljmp
orb
lock
sbb
or
sbbl
popf
mov
mov
aaa
inc
lcall
pop
xchg
cmp
add
adc
sar
aad
gs
nop
int3
cmp
inc
xor
or
lods
sbb
inc
mov
or
pop
movsb
sub
testl
or
insl
jno
mov
mov
inc
test
aas
pop
in
jl
xor
repz
mov
mov
pop
cmpsl
pop
xchg
loope
xor
and
mov
dec
lea
out
pop
addr16
adc
jg
jmp
repz
rcrb
jb
dec
movsb
pushf
cmp
inc
and
popf
jmp
or
and
cmpsl
and
inc
pop
sarb
into
dec
jae
pop
inc
dec
xchg
mov
sahf
fcmove
stos
inc
xor
cmc
insl
sbb
mov
adc
cld
aam
pushf
xor
lret
and
es
outsb
cmp
jnp
ljmp
sahf
jae
sbb
nop
sub
and
hlt
xchg
gs
fcoml
dec
in
jns
pop
push
loopne
aad
xchg
test
jp
jecxz
icebp
icebp
sbb
xchg
insb
pusha
lahf
jg
ret
inc
xchg
negl
or
pop
cmc
mov
cmp
xor
jg
push
pop
inc
mov
out
sarb
adc
dec
xlat
dec
int
cmpsb
pop
sub
dec
jo
mov
stos
jle
cmp
int
xchg
mov
popf
repnz
imul
fwait
push
mov
stos
sbb
cmpsb
or
sbbl
negl
inc
or
movsb
cmp
mov
ret
and
movsl
hlt
in
jo
push
decl
ror
lods
push
int
test
mov
sarl
dec
or
lock
cmp
call
jbe
test
jge
insl
pop
and
xor
xchg
in
xor
out
lods
xchg
movsb
inc
inc
pushf
mov
stc
pop
adc
add
mov
dec
jle
cmc
xchg
jle
xchg
fildl
xchg
pop
sbb
leave
lcall
es
inc
loop
mov
mov
mov
in
xchg
negb
popf
ds
scas
imull
xor
into
lods
lods
bound
out
sbb
mov
aam
inc
int
dec
inc
pop
mov
push
iret
pop
or
cmpsl
cmpsl
int3
cmp
lock
out
pop
mov
xchg
ja
scas
ret
adc
shlb
dec
testl
sub
push
inc
out
push
push
sub
xor
xchg
mov
jge
xchg
sbb
pop
xor
frstor
sti
lcall
cmp
aam
inc
lods
sub
jle
roll
mov
stc
dec
dec
dec
push
fisttps
enter
and
popf
pushf
mov
pop
testl
add
mov
enter
loopne
jp
test
mov
pop
out
adc
xor
pop
movsl
sub
in
fistl
push
lcall
mov
insb
mov
gs
jecxz
into
fstps
push
dec
or
pop
cmp
push
pop
inc
mov
push
repnz
lret
mov
sbb
cmpsl
and
inc
lcall
test
and
mov
es
adc
pop
aam
pop
dec
andl
sub
jp
mov
push
add
icebp
js
jne
mov
dec
sbb
int3
or
fistpl
mov
push
dec
out
cmp
xchg
jo
dec
test
ret
xor
mov
cmp
imul
add
xchg
pop
jb
mov
js
int
mov
test
bnd
mov
jg
repz
xchg
dec
cmp
lea
loopne
pushf
rcll
xor
cmpsb
imul
in
and
push
jge
test
push
and
decl
push
fisubrs
ficoml
fidivrl
jno
and
dec
sbb
lds
xchg
sub
arpl
push
xorl
xorl
mov
xor
icebp
idivb
dec
add
push
imul
or
push
jg
xorl
pop
outsb
negb
mov
testb
test
ss
sahf
mov
xchg
mov
add
inc
push
push
mov
add
xchg
pop
pushl
js
xchg
jae
insb
mov
cli
cmp
mov
xor
arpl
pop
insb
push
icebp
mov
ds
cli
out
movsb
test
mov
or
enter
inc
push
xchg
imul
push
dec
push
shlb
test
jns
inc
jl
add
cmp
and
andb
enter
enter
aas
sub
repz
pop
loopne
mov
inc
mov
ss
xor
jge
mov
cmp
call
cmp
jo
test
lods
cmp
std
jae
hlt
fwait
pushf
adc
sbb
xor
icebp
mov
imul
aad
imul
icebp
mov
outsl
adc
inc
repz
mov
nop
mov
cli
dec
sub
inc
outsb
inc
xor
subl
movsb
std
enter
rcrl
cmp
or
jo
mov
add
hlt
cmp
ljmp
sub
add
mov
cmp
and
cmpsb
or
shlb
inc
and
push
pusha
popa
push
inc
in
into
jg
shl
addl
add
inc
add
push
cmpsl
ficoms
adc
rolb
push
std
xor
lret
fnstsw
or
ljmp
in
mov
into
push
and
out
sbb
data16
sbb
or
dec
adc
pop
fisubs
add
lods
jae
out
cmpsb
cltd
and
lret
push
stc
rclb
or
add
xchg
out
testb
sarl
sti
out
adc
sbb
push
cmp
movsl
jo
mov
sub
cmp
test
push
insb
out
push
adc
fistpl
data16
mov
aam
cmp
xchg
test
outsl
clc
xchg
sub
mov
mov
lods
cmp
inc
fadds
popa
push
cmp
das
pop
add
push
insl
call
xchg
in
rcll
dec
mov
cmpsb
es
ja
divb
fisubl
mov
pop
pop
nop
ja
aaa
push
cmp
jne
scas
pop
lahf
and
jl
and
shll
mov
stos
loop
push
or
xor
test
aaa
call
sbb
push
inc
lcall
cltd
pop
push
loop
ds
jl
cmpb
sarl
out
in
adc
inc
imul
and
sub
cwtl
pushf
lcall
out
outsb
nop
push
add
pushf
pop
daa
jmp
lret
fs
sbb
out
movsb
movb
mov
sbb
xor
cmp
addr16
gs
bound
pop
dec
arpl
fcom
xor
std
ss
mov
das
mov
adc
out
stos
add
sub
cmpsl
jle
ds
jb
fstpl
cld
int
scas
cwtl
or
rclb
sbb
movsl
mov
les
cli
mov
add
mov
pop
or
cwtl
jno
mov
cli
pop
cmpps
jno
ret
cltd
test
pusha
push
sub
ret
mov
daa
cmp
dec
test
iret
sti
adc
mov
pop
iret
popa
push
jbe
shr
in
inc
sub
push
mov
or
sti
cmp
sub
add
mov
jmp
xor
add
hlt
gs
call
cmc
out
inc
div
and
sbb
jecxz
stos
mov
stc
insb
sub
push
mov
add
jbe
add
imul
test
lret
mov
xlat
jne
jle
adcl
daa
and
mov
xor
xor
cmp
imul
clc
je
lahf
sub
cmpsl
dec
or
and
sub
cs
mov
jne
and
inc
adc
sahf
dec
sbb
je
jp
sar
push
jae
stos
xchg
mov
scas
in
push
jle
mov
ljmp
sub
adc
mov
iret
es
call
inc
pop
popf
adc
clc
pop
repz
clc
add
mov
cmp
les
jo
dec
in
and
je
push
adc
imul
and
ljmp
mov
dec
addr16
outsl
fucom
add
cwtl
je
or
test
or
pushf
hlt
out
cmp
nop
pop
orb
idivl
mov
pop
lods
notb
lahf
fcompl
xor
xchg
jns
into
xchg
pop
mov
lahf
callw
mov
push
cltd
outsb
mov
aas
sbb
pop
mov
dec
xlat
jnp
sbb
das
push
fnsave
or
neg
adc
data16
mov
test
cmp
push
cmp
scas
or
cld
add
ljmp
addr16
inc
mov
stc
xor
mov
adc
loop
mov
and
inc
int
mov
xchg
mov
imul
xor
push
lret
mov
cli
jnp
clc
or
dec
aaa
sbb
loopne
pop
iret
pop
xor
cmp
pop
movsb
loope
shrb
add
sbb
mov
xchg
inc
sbb
sbb
mov
insl
ficomps
jnp
mov
out
pop
sti
loop
cmp
test
ror
in
pop
test
mov
std
push
pop
out
insb
pop
dec
clc
out
xchg
xchg
mov
xor
scas
mov
push
loopne
or
pusha
mov
xor
mov
cmpsb
push
jnp
add
pop
push
lcall
jl
push
mov
negb
cmp
cmp
lcall
lods
das
mov
bound
mov
jo
sub
cmp
mov
repnz
decl
sub
dec
add
mov
inc
lret
roll
je
push
lea
sub
pop
inc
xchg
loope
negb
imul
mov
sub
pop
scas
jbe
mov
push
sarb
insl
mov
rcl
xor
pusha
sbb
sti
and
cmp
fisubl
push
jno
or
sbb
loope
mov
mov
cmp
ret
and
mov
stc
mov
popf
xchg
pop
mov
fdivs
fwait
jle
mov
negb
adc
or
in
mov
fwait
sbb
popa
pop
mov
sbb
into
sub
push
sbb
push
lret
pop
xor
les
pop
lahf
jl
mov
xchg
int3
and
push
pminsw
inc
ljmp
test
clc
push
loope
shll
test
aaa
inc
add
fldcw
fcmovnb
mov
loope
and
jge
lret
mov
repz
stos
xchg
lods
call
fbstp
dec
jbe
xlat
add
inc
adc
xor
mov
lret
jmp
adc
and
mov
pop
movsl
xchg
scas
daa
arpl
ja
and
rep
cmp
daa
movsb
mov
mov
shll
bnd
ret
xchg
xchg
mov
popa
cmp
xchg
outsl
gs
insb
mov
incb
and
mov
test
jmp
roll
mov
jle
xor
movsl
fdivrs
insb
pop
xor
mov
and
mov
cmp
sub
push
push
hlt
dec
sbb
xchg
test
sbb
or
push
or
sub
pop
xchg
in
inc
mov
xorl
pop
dec
fimuls
pause
popf
repnz
fwait
scas
xchg
xchg
mov
xchg
rcll
pop
test
mov
cwtl
outsb
adc
push
cmp
fisttpll
jne
xchg
test
js
cmpsb
outsl
or
dec
mov
xor
movsl
mov
inc
stc
ret
mov
fistpl
xchg
shll
fldl
bnd
ret
mov
adcb
sub
scas
mov
jnp
mov
xor
cld
inc
jl
mov
dec
mov
add
xchg
loopne
repnz
mov
repnz
push
test
push
hlt
pop
subl
jmp
xchg
comiss
leave
cmpsl
cmc
clc
insb
sub
xor
sub
inc
gs
andl
pop
clc
cli
cmp
or
fistps
repnz
jnp
sarl
test
adc
shll
jl
pop
jne
das
cmpsb
mov
or
sbbl
or
or
dec
outsl
out
mov
adc
xor
push
cld
sub
xchg
inc
stc
cmp
lret
jecxz
aas
inc
jl
jecxz
jb
je
movsl
shlb
and
movsb
push
outsl
cmp
test
pop
mov
add
cmp
mov
dec
test
or
aas
ja
jae
popa
ret
push
cwtl
leave
sbbl
jnp
push
jns
insl
fmuls
xchg
test
mov
incl
pop
cwtl
mov
out
inc
lret
adcb
jp
stc
adc
add
fiadds
rorl
es
pushf
cmp
xchg
adc
sub
or
jns
pusha
dec
cmp
mov
dec
out
testl
loopne
mov
mov
cmp
jmp
subl
sti
int3
jge
ja
aaa
or
xchg
ja
pop
sbb
jns
mov
dec
fldt
add
hlt
mov
adc
test
sbb
lods
mov
cmp
xor
push
xchg
pop
rcll
or
sbb
aas
loop
xchg
jle
andb
dec
mov
and
mov
out
mov
mov
cmpsb
hlt
xlat
cmc
movaps
sahf
out
ja
push
rolb
fiadds
adc
inc
or
jns
ret
or
sub
scas
push
mov
cmp
adc
clc
cmp
out
push
cwtl
mov
repnz
sbb
adc
or
inc
shl
jmp
cmp
mov
arpl
mov
imul
inc
repz
mov
je
push
sub
call
cs
jp
fldenv
cltd
dec
into
loop
xchg
call
ret
ja
shl
out
push
clc
adc
sbb
test
es
mov
addr16
dec
cmp
js
jmp
jnp
iret
mov
mov
outsl
inc
nop
inc
lods
rcrb
ljmp
adc
push
push
push
nop
call
pop
flds
loop,pn
adc
aad
in
and
fbld
sbbb
xchg
jae
fcoms
test
lds
add
sbb
xchg
mov
jmp
pushf
shrl
sarl
xor
jmp
lods
push
mov
rcrl
push
dec
cmp
arpl
push
lds
add
mov
jmp
loop
scas
bound
sub
fisttpll
fcomps
pusha
push
adc
jmp
lahf
das
repnz
ljmp
xchg
mov
jnp
bound
test
inc
adc
and
cmp
inc
and
push
jmp
and
repnz
or
icebp
fnstsw
sub
lods
flds
test
sub
sbbl
ds
pop
add
popa
mov
jge
repz
dec
lret
push
lcall
mov
xchg
mov
xchg
into
push
shll
push
and
push
stos
lcall
inc
mov
cmp
cs
mov
push
lock
jne
shrb
shrb
jbe
xchg
pusha
mov
lods
xchg
mov
iret
mov
sahf
les
loope
rorb
pop
push
push
out
repnz
xor
xor
imul
push
dec
mov
cld
popa
das
and
sbb
aaa
mov
jno
test
xchg
xor
mov
pop
movsb
out
xchg
pop
adc
jns
iret
std
fiadds
out
lock
roll
xor
cmpsb
movsb
adc
cmpl
dec
mov
fidivrl
shl
jmp
mov
filds
dec
add
fucomip
mov
mov
pop
mov
mov
faddl
fdivrl
xor
movsb
dec
mov
push
xor
mov
lret
test
inc
stc
mov
out
mov
inc
cmpsl
mov
aaa
filds
ja
xchg
sbb
shrb
lret
in
cmp
and
aas
jb
movsb
shlb
dec
js
packuswb
dec
dec
popa
or
xchg
sub
jae
fidivs
xchg
aas
xchg
add
pop
add
cmp
sub
inc
stos
rcrb
cs
cld
mov
add
adc
and
dec
adcl
and
mov
inc
scas
call
shrl
movsl
add
adcl
je
faddl
test
scas
pop
push
clc
fdivs
inc
inc
test
jae
int3
cmp
xchg
inc
adcb
ds
xor
pop
and
cmp
xchg
sub
jg
dec
xchg
subl
mov
mov
xor
adc
mov
movsb
es
cmp
test
xor
es
pop
add
ror
xchg
rol
jmp
iret
out
adc
cmpb
into
mov
cli
jecxz
es
push
push
and
push
push
aas
cmpsl
push
loopne
gs
test
push
mov
rcll
fisubrs
add
out
fdiv
iret
cwtl
ss
scas
or
push
xchg
orl
pop
fs
mov
jnp
pop
cmpsl
lret
stc
cmp
inc
xor
insb
fimuls
jae
xchg
iret
outsb
out
in
fists
icebp
dec
cmpsl
xor
push
rcl
push
sbb
jne
xor
push
mov
fldcw
jp
mov
xor
xor
mov
sbb
ljmp
fcomi
scas
mov
lahf
or
sti
xlat
add
mov
ljmp
adc
or
mov
paddb
mov
lds
sbb
sbb
mov
adcl
ror
bound
les
push
fldenv
hlt
outsl
xchg
push
cmp
pop
add
ljmp
xchg
mov
js
daa
fldl
insb
inc
loope
push
sbb
mov
das
mov
pop
lea
das
aaa
push
stos
and
push
into
push
sub
xor
fnstsw
adc
ficompl
es
mov
xchg
cmp
inc
push
inc
int3
movsl
jle
inc
cmpsl
punpcklwd
mov
std
lods
popf
sbb
rolb
cmp
push
int3
push
xchg
pop
push
mov
xchg
repnz
xorb
in
out
jo
leave
adc
push
sbb
adcl
xlat
push
mov
jmp
cmpsl
mov
test
dec
mov
pop
out
inc
dec
mov
lahf
push
enter
mov
in
adc
sbb
mov
scas
sub
xchg
mov
sbb
scas
push
pop
shr
dec
or
adc
ret
fsubl
hlt
adc
push
clc
inc
jno
sbbl
lods
jl
sub
push
add
xor
sub
or
dec
int
cld
add
loope
fld
inc
jl
and
arpl
push
pop
gs
sub
insb
out
int3
mov
inc
fsub
loop
fimull
loop
xchg
jb
insb
push
sbb
pop
std
imul
stos
xchg
sub
push
cwtl
mov
add
xor
add
dec
inc
stos
xchg
fwait
pushf
inc
imull
mov
jbe
xor
cmp
mov
gs
pushf
lock
cmp
in
ljmp
cli
sub
in
pop
or
pop
xchg
jge
in
std
cltd
mov
popf
fadds
call
sti
mov
adc
jmp
jecxz
ret
out
sbb
pop
pop
fmuls
inc
mov
popa
pop
jo
push
out
inc
aaa
call
mov
nop
xchg
test
mov
xchg
je
jae
pop
lcall
sub
xor
sbb
pop
lcall
test
fnstsw
leave
xor
pop
xchg
outsb
es
inc
inc
jl
xsha1
cmpsb
mov
movsb
push
sub
ljmp
mov
sbbb
add
scas
mov
push
push
and
stc
pushf
mov
mov
pop
out
pop
sub
scas
hlt
mov
add
lcall
xchg
data16
inc
push
lahf
inc
in
fwait
shrb
cmp
or
ss
or
decb
dec
andl
out
push
rcll
fisubs
and
stc
cwtl
call
daa
pop
jmp
divl
push
sti
inc
inc
add
and
mov
inc
pop
mov
mov
or
daa
popa
jl
jbe
inc
pop
aad
cmp
cmp
and
mov
add
dec
cwtl
dec
dec
inc
bnd
sbb
setno
xchg
dec
push
loopne
xchg
mov
xchg
mov
lea
pusha
es
mov
iret
mov
pop
test
mov
aam
out
sbb
imull
shll
in
fwait
mov
add
cmc
push
push
lock
js
mov
in
dec
xchg
sub
pop
or
push
sar
cli
stos
or
int3
push
adc
popf
mov
or
shl
jno
std
dec
in
xor
enter
ret
outsl
insl
push
es
scas
mov
test
sbb
test
icebp
jg
dec
push
sub
out
es
gs
incb
in
stos
ss
jns
sub
int3
scas
push
mov
xchg
pusha
or
pop
xlat
dec
nop
pop
das
jo
enter
lret
dec
inc
mov
loopne
xor
les
add
inc
push
push
jbe
mov
incl
jg
jge
dec
push
je
and
xchg
out
mov
mov
iret
push
jmp
in
lret
mov
jge
int
lods
in
mov
mov
xchg
enter
mov
faddl
cmpsl
sbb
xchg
mov
add
leave
leave
leave
fistpll
pop
js
testb
mov
cs
pop
into
mov
xchg
inc
inc
jg
cmp
ja
jmp
mov
popa
mov
cmpl
ja
adc
and
dec
jp
cmp
shll
dec
std
sub
psubusw
mov
sbb
lcall
dec
xlat
adc
cmpsb
aaa
imul
add
cmp
lods
cli
lcall
jecxz
mov
jecxz
sub
add
mov
fisubl
pop
push
popa
das
clc
int
mov
and
iret
or
mov
inc
xlat
jnp
fdivs
mov
sbb
add
cli
sbb
movsl
pusha
iret
jge
mov
xchg
push
cmp
or
mov
outsb
xor
shlb
test
xchg
jl
sub
jnp
cmp
mov
divb
nop
and
pop
aas
retw
add
cmc
test
add
cld
daa
pop
adc
adc
mov
addb
sarl
cld
stos
xchg
xchg
aam
add
xor
push
popa
test
data16
in
outsb
les
imul
xchg
sti
ret
loopne
inc
sub
push
movsb
pop
mov
cmp
adcb
aaa
dec
imul
das
je
or
xchg
repz
mov
sbb
int
call
add
mov
pop
orb
stc
data16
iret
xchg
je
test
mov
gs
sbb
inc
imul
fwait
test
add
sbb
fildl
lods
pop
xor
dec
test
aaa
cmpsl
xchg
ret
mov
jae
sbb
mov
pop
jns
xor
push
jb
push
pop
aam
fnstcw
add
notb
aam
mov
sub
mov
mov
mov
inc
jae
inc
xchg
pushf
ss
sbb
test
pop
test
in
sub
push
adc
leave
cmp
mov
inc
mov
push
icebp
les
sbb
xor
shr
insb
aad
mov
rorb
daa
xchg
lret
mov
nop
mov
rcll
stos
mov
pop
pop
aaa
and
xor
jae
cmp
rcll
leave
cmp
and
or
push
jns
adc
cs
pop
push
lret
rorb
out
and
idivb
cltd
pop
sbbb
xchg
scas
fucomi
bound
sub
mov
add
cmp
popf
push
inc
cmp
sub
mov
stos
cmpsl
sub
mov
or
and
sahf
mov
add
cmp
mov
dec
push
rcr
add
dec
xchg
push
mov
lock
shrb
jnp
call
loopne
arpl
stos
xchg
lea
hlt
int3
les
repz
add
mulb
xchg
pop
aad
add
add
ret
xchg
sbb
lea
fcom
inc
hlt
pop
sbb
xlat
dec
gs
or
lret
inc
mov
push
mov
inc
icebp
dec
sbb
in
cmp
mov
jp
mov
pop
dec
mov
fwait
xchg
lret
addr16
jbe
loopne
jno
jno
lods
cmp
test
jle
dec
lret
jae
mov
rorb
fucomi
mov
xor
sbb
nop
int3
stos
enter
mov
adcl
leave
push
daa
mov
mov
mov
iret
or
mov
push
ljmp
add
sbb
or
add
scas
aas
mov
ljmp
ret
test
push
dec
pop
cmpsl
push
fcomp
in
xchg
adc
dec
lahf
xchg
sub
je
outsb
std
cmp
mov
push
fdivr
xor
rclb
pushl
test
mov
push
addr16
mov
jl
xor
lds
or
pusha
pop
mov
cmp
jo
pop
cmc
mov
xlat
push
sub
lret
mov
ret
xchg
cld
js
fists
add
ss
mov
hlt
sub
inc
ror
push
ljmp
xor
inc
adc
or
add
test
out
data16
fcmovbe
and
xchg
xchg
aas
or
mov
jg
outsl
xchg
divl
hlt
jg
add
and
lea
shll
adc
sar
aas
dec
cwtl
push
jns
pop
lock
jmp
addr16
jg
xor
lods
inc
ljmp
inc
ljmp
cwtl
loopne
push
sarb
mov
pop
xor
insl
xchg
xchg
rclb
add
pop
sub
and
movsl
sub
adc
in
andb
jge
aaa
push
add
jns
sbb
sub
push
jmp
inc
sbb
in
les
cmc
dec
mov
and
mov
and
push
sbbl
lahf
loope
adc
popa
sub
pop
sbb
jle
popf
hlt
sbb
scas
scas
mov
fcom
insb
mov
mov
movsb
out
aam
mov
add
shll
pop
aad
gs
add
xor
dec
xor
sbb
in
pop
push
xor
push
fucomi
sti
neg
mov
inc
neg
and
xor
xchg
xor
xor
daa
jg
push
jbe
stc
test
data16
add
or
outsl
mov
movzbl
lods
mov
jo
shrl
out
mov
loope
sti
sub
cld
pop
jge
iret
int3
inc
cmp
jle
and
xor
mov
xchg
and
push
mov
pop
gs
adc
insb
dec
loop
push
aaa
sti
or
ja
mov
clc
pusha
xor
jb
ret
shrl
enter
mov
adc
jmp
fnsave
push
xchg
lods
cmp
call
repz
adc
pop
xor
imul
jp
mov
fdivrs
out
repz
pop
and
ds
jp
push
xorl
rcrb
cltd
lret
ror
dec
std
pop
andb
mov
hlt
sub
stc
jo
mov
daa
stc
mov
dec
cmp
or
loopne
pop
mov
pop
stos
stos
lahf
test
mov
fistpll
jae
jp
cmp
adc
icebp
cmpsb
outsb
std
inc
out
sti
cltd
fsubp
sbb
addr16
pop
stos
ss
sub
outsl
add
setl
mov
ret
imul
inc
jns
or
cmpsb
in
fwait
pushf
mov
push
ficompl
xor
xchg
test
jmp
xor
stos
mov
lods
mov
hlt
fimuls
pop
push
xchg
and
push
xchg
mov
push
decl
push
xchg
and
dec
xchg
lcall
adc
push
ja
jl
mov
mov
lods
sub
dec
jb
cmp
stos
or
mov
sub
bnd
inc
stos
push
adc
jae
jecxz
fldenv
dec
sub
cmp
sti
shll
mov
push
sub
cmp
cmp
shll
jecxz
aad
shrb
xchg
pop
iret
push
or
pop
outsb
cmpsb
cmp
popa
jo
inc
pop
lret
sbb
test
int
fsubrl
and
cmp
inc
aam
mov
mov
cmp
mov
int
xor
jne
sub
jge
add
add
jo
lds
inc
fwait
lret
push
sbb
stc
push
sti
inc
stos
sbb
cmp
cltd
stos
push
pusha
jp
and
push
cmp
mov
sub
sbb
xchg
imul
repnz
fucom
jl
ret
loop
lods
dec
scas
in
sub
inc
dec
lcall
incl
mov
jle
out
fs
inc
or
cli
jb
push
pusha
insb
sti
dec
ljmp
adc
fsts
dec
sbb
mov
adcl
adc
scas
fisubrs
stos
sub
dec
fdivs
test
cmp
jnp
jecxz
movsl
pop
adc
jg
cmp
addr16
jecxz
add
add
fnstsw
out
je
add
push
ja
pop
hlt
jno
gs
roll
cmpsl
stos
push
stos
dec
fwait
xchg
sub
cwtl
ljmp
cmp
incb
addr16
sub
push
xchg
pop
testl
fstps
cmp
int3
stos
jl
or
jg
mov
int
push
xchg
sub
ja
test
clc
add
and
pop
xchg
cwtl
test
test
sbb
repnz
aad
frstor
xlat
je
sbb
pop
jno
pop
loopne
movsl
outsl
cmpsb
loop
out
mov
or
fstps
mov
or
jno
mov
popf
jbe
dec
push
inc
out
jo
sar
lods
dec
movsb
cli
pop
mov
testl
mov
inc
pop
mov
inc
mov
and
out
in
mov
push
clc
and
or
cmpsb
orl
pusha
push
dec
jno
mov
lock
clc
arpl
es
fldt
inc
sub
in
jne
mov
and
std
mov
mov
inc
mov
adc
add
dec
popf
xchg
fwait
xlat
jg
je
and
jns
mov
push
cli
arpl
dec
in
mov
test
mov
cmp
sub
xchg
nop
adc
mov
sbb
fmuls
mov
cltd
jb
cmp
cwtl
leave
sub
jle
push
out
cs
xchg
mov
lods
nop
cmp
loope
xchg
push
rcll
cmp
xchg
xchg
mov
pop
cmp
jl
cmp
and
out
loopne
stc
xchg
es
movsb
push
inc
and
arpl
je
xchg
je
jp
jno
xchg
push
std
inc
and
adc
stc
pushf
adc
cmp
enter
add
and
clc
sub
mov
or
pop
cmp
ret
pusha
sub
mov
pop
mov
jae
loope
enter
movsb
clc
jle
mov
sub
stos
sbb
shlb
jl
outsb
xor
into
test
and
push
ret
inc
dec
stos
and
sbb
and
cwtl
cmp
gs
xor
in
mov
lods
in
pop
lods
add
addr16
in
sub
sarb
bound
mov
dec
inc
mov
and
ljmp
popf
mov
lret
mov
push
push
jae
xchg
fsubrp
sbb
xchg
and
inc
int
test
adc
loopne
cmp
fidivrs
adc
data16
adc
out
dec
adc
sub
test
negb
xchg
popf
pushl
out
mov
loop
inc
sub
or
jns
es
xchg
pop
les
sub
in
xchg
mov
cmpb
xor
lock
pop
ror
dec
sbb
xor
jmp
inc
movsl
add
push
pop
mov
hlt
pushl
ljmp
es
mov
jg
dec
lcall
pop
out
or
loope
jns
and
jge
jle
inc
mov
xor
dec
mov
dec
sub
sarb
xchg
scas
movsl
out
jnp
cld
js
mov
sahf
inc
mov
mov
imul
in
sub
insb
pusha
mov
mov
cltd
mov
lret
js
and
lahf
xchg
and
xchg
jo
idiv
xchg
fimull
add
cmp
mov
inc
dec
adc
push
jecxz
xor
enter
stos
ret
xor
push
cld
cmp
fists
xlat
inc
mov
fcomi
xchg
mov
imul
jl
adc
mov
dec
pop
lods
xlat
rorl
sub
rolb
sarl
jg
sub
lret
cmp
arpl
xchg
daa
adc
dec
mov
jbe
gs
add
leave
sbb
out
cmpsb
sub
nop
adc
mov
push
into
into
push
mov
pop
shlb
out
add
jne
scas
daa
out
popf
jne
mov
aad
int
adc
sarb
adc
daa
jecxz
xchg
lret
leave
les
addr16
sbb
test
add
inc
ljmp
cwtl
orb
cmp
mov
push
insb
ds
pop
jmp
fcomps
inc
jnp
rcll
shl
rcrb
in
mov
orb
add
jecxz
sbb
out
add
gs
or
ret
lds
inc
jo
ret
daa
adc
push
test
popf
push
arpl
push
lods
stos
jl
mov
test
jnp
daa
stc
or
mov
cmp
cld
sbb
cmp
movsb
push
mov
push
cwtl
push
bound
mov
push
and
mov
or
es
mov
xchg
sub
cmp
or
cmpsb
push
fwait
mov
mov
je
cltd
jle
push
sahf
aam
cli
cltd
sti
imul
mov
fwait
mov
mov
pop
into
lea
fchs
push
dec
dec
insl
mov
pop
jbe
mov
aas
rcrl
stos
sub
mov
sbb
xchg
fstps
inc
push
imul
jne
xchg
frstor
mov
fbld
xchg
das
xchg
add
cld
mov
cmp
jnp
mov
pusha
outsb
roll
push
mov
xchg
inc
jge
and
add
sbb
push
fisttpl
inc
xchg
adc
add
cmp
cmpb
adc
fwait
popw
or
xchg
hlt
movsl
sahf
js
mov
pop
cwtl
add
mov
cmpb
sub
out
test
cs
inc
dec
mov
xchg
scas
in
jbe
sbb
nop
sbb
loope
xor
je
scas
cmpsl
out
push
les
popf
pop
rclb
lock
mov
mov
sub
out
xor
sahf
mov
inc
in
in
fs
jmp
aad
iret
or
outsl
add
scas
mov
adcb
pusha
pop
jl
ja
sbb
aam
mov
jns
lock
nop
jg
cmp
movsl
add
loopne
loopne
leave
mov
ja
imul
jl
pushf
inc
xor
jb
aad
arpl
mov
lea
and
inc
sub
or
mov
cmp
adcl
or
sbb
cwtl
jge
fisubs
andb
shl
in
in
mov
out
jecxz
kmovd
cwtl
fsubrl
out
push
pop
push
dec
cmp
stos
insl
sub
or
cmp
cltd
mov
lret
mov
in
and
loope
inc
sbb
xor
in
dec
outsl
xchg
lret
dec
pop
pop
jge
mov
lahf
roll
ret
sub
daa
test
movsb
mov
in
rcrl
add
shr
stos
mov
int
push
cmpsl
add
pop
hlt
pop
outsb
pop
jle
dec
cwtl
dec
inc
and
mov
xchg
out
jnp
test
xor
inc
or
adc
scas
push
jl
xchg
adc
int3
and
inc
sar
mov
and
fdiv
icebp
cltd
jmp
cmpsl
ss
mov
loopne
xchg
mull
jo
in
sub
push
xor
sarl
mov
jp
inc
fistps
pop
loopne
inc
movsl
sbb
cmp
outsb
pushf
sub
pop
inc
cltd
aaa
es
add
or
ret
cmp
ret
inc
mov
lret
push
cmp
and
add
mov
and
dec
fdivs
arpl
jle
adc
leave
mov
adc
add
cwtl
mov
sub
call
push
lock
inc
jbe
sbb
xchg
jno
cmp
push
nop
ss
sub
xchg
je
das
lock
fnstcw
popf
pop
scas
xor
ja
mov
inc
mov
mov
ljmp
outsb
fwait
shl
pop
cld
divl
test
jo
ss
push
add
xlat
seta
addr16
dec
dec
push
ret
les
push
cmp
mov
jae
sub
inc
sti
fldt
mov
xor
mov
push
xor
push
mov
push
sar
inc
subb
aaa
pop
dec
sub
jecxz
sti
enter
jne
xor
inc
dec
scas
sub
and
push
lahf
je
sbb
mov
mov
push
inc
xchg
aam
mov
pop
mov
or
adc
sbb
jmp
fwait
aad
add
mov
and
adc
jno
aas
andb
mov
imul
cmp
lahf
xor
inc
xor
pop
sti
inc
pmulhw
cmp
mov
clc
mov
jge
inc
fst
cmp
repnz
push
push
leave
cmc
jns
movsl
dec
mov
es
xchg
jg
lods
xor
js
jbe
sbb
fxtract
pop
popl
jno
dec
outsb
inc
rolb
sub
lock
lds
scas
clc
lahf
and
sahf
add
pop
cmpsb
bound
into
nop
movsb
imul
mov
sub
adcb
jmp
push
imull
sub
jae
iret
mov
andl
sbb
inc
cmpsl
mov
sbb
sti
mov
cmp
stos
mov
lods
int
pop
aas
dec
nop
add
fiadds
fistl
jg
and
and
jl
out
mov
jno
iret
mov
nop
inc
dec
cmp
mov
pop
push
insb
cmp
aam
pop
daa
and
mov
pop
or
pop
test
mov
bound
jg
mov
jbe
xchg
je
lcall
xchg
adc
addr16
sbb
int3
fistpll
xchg
negb
stc
xchg
push
jae
test
in
push
jl
repz
lea
enter
pop
cld
add
pop
rcr
jecxz
fsubrl
inc
imul
movsb
pop
cmpb
xchg
mov
outsl
mov
dec
mov
lcall
push
sub
daa
aad
std
stos
push
cmp
pusha
adc
call
outsl
pusha
xor
hlt
into
or
shll
stc
cld
test
call
lret
adc
xchg
addr16
pop
sbb
push
mulb
out
jo
jno
xor
jmp
andb
xor
sub
fnstsw
jns,pt
mov
lds
inc
and
mov
fwait
shlb
and
test
jg
push
ds
cmp
mov
stos
lret
fs
add
xchg
fwait
adcb
leave
or
jle
adc
pushf
mov
scas
lcall
shll
mov
sub
ficoml
cmp
inc
notl
mov
fs
adc
or
mov
ja
sti
jbe
inc
adc
fsubrs
lds
hlt
mov
pop
sbbb
mov
adc
cmp
bound
inc
popf
insb
add
fs
aas
fcmovne
mov
imul
shll
ja
ret
jge
nop
mov
mov
aad
jg
mov
push
inc
loope
popa
ja
mov
int
sbb
dec
xchg
and
movl
jle
into
dec
push
sbb
loopne
in
jns
adc
inc
xlat
mov
jp
or
mov
sahf
int
out
xor
push
insb
jo
add
into
mov
pushf
mov
movsl
mov
nop
pop
mov
stos
xchg
and
decb
mov
jecxz
push
loope
cltd
pop
cmpl
daa
mov
inc
mov
push
add
es
pop
sbb
xor
pop
stos
pusha
pop
or
insl
shlb
lcall
sbb
sub
xlat
push
and
out
jbe
fisubl
cmp
and
push
in
test
push
test
sbb
pushf
xchg
or
push
ss
aad
sub
jne
pop
add
rcrl
or
xor
xchg
imul
xor
pop
cmpsl
mov
out
mov
rcrl
xor
addr16
cmpsl
mov
push
fldl
imul
pusha
mov
adc
aaa
lods
jmp
mov
gs
aas
sub
pushf
sbb
lcall
repz
pop
aam
pop
mov
lock
jmp
pop
aad
adc
push
push
nop
push
mov
lds
inc
lret
into
dec
scas
pop
and
lss
xchg
rcr
lds
in
sbb
adc
inc
fcoms
dec
jae
fists
cmp
pop
sbb
lock
jae
jl
in
adc
jmp
stos
push
in
inc
inc
cli
inc
push
addb
push
sbb
iret
sbb
jge
pop
or
ds
outsl
or
mov
sbb
arpl
sahf
mov
sub
jmp
mov
xor
sahf
pusha
xorl
arpl
add
sub
push
test
sub
test
loope
inc
shrb
arpl
cmp
sbb
aaa
sub
repnz
dec
rcl
rorl
popf
arpl
inc
insl
lods
sti
jg
jae
mul
fidivs
ss
mov
cmp
cltd
push
dec
les
popf
sub
fwait
sbb
repnz
cmp
or
div
adc
jne
nop
sbbb
cmc
sbb
pop
xchg
movsl
negl
jge
push
pop
inc
push
xchg
repz
popa
add
lretw
inc
push
mov
enter
dec
jbe
fistps
xor
sahf
and
popf
sarl
data16
pop
lods
orl
into
testb
dec
or
sub
ret
into
test
mov
in
fs
aaa
lea
adcl
sub
push
cmp
ss
jno
and
dec
and
or
jns
mov
test
pop
ret
inc
pop
pop
mov
adc
pop
fcmovnu
jmp
sti
jo
lods
je
dec
aas
and
pop
in
pop
mov
adc
rol
das
test
mov
inc
nop
cld
aaa
inc
mov
ljmp
and
cld
bound
push
fnstsw
imulb
mov
xlat
xchg
out
shlb
add
dec
mov
mov
iret
ss
mov
int
test
addl
jno
cmp
ja
sub
push
add
push
sub
adc
test
out
movsb
push
push
xchg
inc
dec
mov
imull
adc
lret
scas
stos
jno
jp
repnz
sub
push
gs
sbb
push
mov
test
or
push
pop
or
repz
jnp
mov
cltd
inc
repnz
or
clc
adc
inc
xor
mov
insb
xor
sbb
cmova
in
jbe
or
pushf
mov
push
faddp
jl
data16
dec
xchg
leave
aam
fimull
gs
jbe
lahf
cmp
stos
lea
cltd
nop
or
xor
icebp
push
out
movsl
or
mov
xlat
mov
fsubrs
add
inc
popa
imul
aas
enter
pop
jmp
fiadds
dec
es
cli
xchg
stc
push
das
cmp
shlb
rcr
xor
xchg
xor
ret
cli
push
sarl
jbe
sub
cmpsl
pop
jb
jo
shll
inc
push
pop
push
insb
scas
ror
testl
xchg
cmpsl
add
shrb
enter
jne
xchg
lds
xchg
cmpsb
imul
cmpsl
mov
outsb
test
xchg
mov
and
sbb
push
pop
lahf
ss
loopne,pn
sbb
pop
lods
mov
or
pop
mull
or
dec
ds
push
ficoms
gs
fs
add
pop
dec
lock
movsl
out
inc
testl
lcall
jo
dec
pop
inc
data16
gs
jle
int
loop
lret
dec
mov
sub
push
scas
mov
out
jp
subb
shlb
inc
movsb
stos
or
push
mov
fsubl
cmp
pop
cmc
jle
adc
pushf
sub
cmpsb
push
xchg
gs
pushl
bound
or
mov
rorb
or
sub
dec
add
xlat
scas
loopne
xor
or
notl
inc
pop
pop
xchg
bound
add
and
icebp
xor
ds
sub
in
pop
adc
sub
sti
xchg
or
xchg
rcll
out
mov
cmp
insb
test
mov
dec
pop
pop
dec
add
and
ret
jns
sbb
sub
and
test
push
cmp
in
sub
pop
mov
notl
add
andl
incl
jns
nop
dec
test
cmp
inc
xchg
sbb
push
andb
mov
pop
negb
xor
cmp
cmp
mov
or
add
mov
stc
nop
les
pop
icebp
icebp
sub
stc
sbb
xor
fidivs
fnsave
inc
and
bound
cmpsl
xchg
imul
inc
inc
rcrb
repz
fimuls
push
dec
icebp
cmp
jle
mov
es
call
mov
adc
imul
mov
and
inc
into
idiv
int
iret
jbe
stos
sub
dec
mov
inc
inc
push
insl
leave
xchg
adc
xor
mov
loopne
cld
mov
pop
ret
out
xchg
aam
fnstcw
arpl
insb
cmp
sahf
insb
rolb
mov
cmpl
add
dec
and
dec
sub
mov
mov
sbb
cs
nop
and
scas
inc
inc
push
jp
adc
mov
xchg
repnz
out
push
xchg
jne
inc
addr16
jbe
das
push
pop
ljmp
mov
add
es
mov
in
stc
sti
lahf
xor
inc
ror
movsl
xor
adc
stos
bound
aam
and
sti
cmp
push
and
shrb
xchg
in
imul
mov
cmp
lcall
ljmp
or
out
sbb
mov
jbe
adc
dec
aam
lods
dec
ss
arpl
inc
lahf
outsb
movzwl
sbb
fldcw
xor
dec
adc
jl
push
and
mov
lcall
jmp
cmp
inc
xchg
js
iret
fisttpll
mov
std
or
not
mov
jnp
sahf
mov
dec
jle
inc
repz
or
imul
pop
push
lds
mov
sbb
push
pop
movsb
out
mov
add
out
sbb
ds
repz
pop
xchg
mov
loop
or
add
and
out
push
push
xchg
cmovl
or
mov
mov
push
dec
cmpb
ds
gs
popf
pop
add
scas
adc
mov
loopne
fisttps
xorb
int
movsl
xlat
mov
sub
call
push
jb
cmp
lea
idivb
mov
ss
test
loope
pop
movsb
mov
fs
outsl
mov
hlt
mov
incl
je
or
icebp
pop
neg
cwtl
or
mov
sub
loope
lret
rorb
aad
call
out
out
add
jecxz
mov
outsl
push
popa
lea
insl
pop
in
pop
stc
jns
or
js
je
mov
test
insb
shll
pushf
xchg
in
jle
hlt
outsb
and
out
lods
je
mov
add
fucomi
mov
sub
rcrl
xchg
adc
call
cli
mov
in
push
arpl
loopne
add
sub
subb
mov
xchg
pop
pop
mov
xchg
mov
sub
fstps
xchg
jp
mov
sbb
or
push
xor
mov
jns
or
push
nop
jmp
ficomps
cmp
in
mov
xchg
mov
pop
call
fildl
mov
shlb
clc
enter
inc
inc
adcb
add
out
mov
scas
dec
mov
fwait
popf
shl
ret
pop
bound
jge
sub
mov
mov
xchg
jl
and
sub
jb
les
pop
dec
or
mov
cmc
pushf
jno
jp
aas
mov
iret
pop
test
jmp
cmp
mov
adc
push
push
and
mov
sub
enter
jo
jne
sbb
stos
xor
lea
das
ret
fiaddl
mov
mov
sub
pop
fs
add
and
and
hlt
dec
ljmp
mov
sub
lds
or
jp
cli
in
nop
icebp
js
rorb
or
xchg
bound
adc
aaa
inc
iret
test
sti
push
sbb
ret
aad
mov
icebp
jp
sbb
mov
ds
ja
subl
cs
mov
pusha
xor
inc
fwait
test
push
jl
pop
jb
inc
pop
push
into
dec
bound
push
stos
rcr
mov
into
xorb
inc
scas
cmpsl
aaa
dec
push
sahf
lret
in
dec
jp
jns
rolb
ljmp
in
or
aam
inc
xor
pop
mov
and
out
sbb
loop
cwtl
jno
into
test
insl
mov
sub
sahf
inc
inc
adc
mov
jl
dec
in
sbb
xchg
lock
push
gs
fsubrl
cmp
roll
in
lods
xchg
das
scas
imul
loop
stc
add
mov
fcom
pop
mov
or
jno
adc
sub
imul
or
lods
pop
aam
mov
rcrl
xor
rep
repnz
and
sub
ret
js,pn
test
int3
mov
dec
lock
and
dec
lret
lret
repz
mov
mov
scas
iret
mov
insl
lea
loop
pop
lds
je
fucompp
dec
cmp
cli
pop
mov
add
pop
int
dec
mov
test
xchg
gs
adc
pop
ja
aas
sbb
push
subb
xor
repz
and
jae
sbb
lods
insb
ja
pop
jl
lret
pushl
roll
adc
imul
lods
movsl
addr16
xchg
xchg
mov
lret
cmpsl
leave
dec
insl
hlt
pop
mov
imul
repnz
add
or
cmp
sub
repnz
dec
or
xlat
jp
loop
sub
cmp
jmp
int3
pop
stc
pop
jmp
ret
inc
adc
rcrl
pushf
xchg
adc
jecxz
les
pushf
arpl
mov
xchg
aam
scas
sub
mov
mov
xchg
mov
mov
cmp
hlt
inc
inc
dec
lcall
jne
cli
stos
and
or
push
jno
xchg
pop
ja
stos
scas
sti
aas
push
aas
sub
xchg
fst
or
or
loope
fcmovnb
inc
cmpsb
es
and
ficompl
mov
pop
cmp
or
adc
jmp
add
jmp
or
push
imul
mov
push
pushf
jbe
outsl
cmp
imul
sbb
xor
pusha
cmp
or
js
movsl
cmp
mov
xchg
mov
push
push
mov
popa
cwtl
repnz
push
enter
or
lcall
fists
jl
fstp
jmp
mov
jbe
sarl
jb
stos
mov
in
scas
add
push
jbe
jb
inc
arpl
sub
mov
test
and
dec
mov
ret
mov
mov
or
mov
add
idiv
jo
ja
outsb
xchg
ret
adc
incb
cwtl
fdivrs
pop
jo
cld
mov
fldl
pushf
fdivrs
ret
cwtl
mov
adc
xor
xor
mov
mov
pop
jae,pn
leave
and
mov
loopne
icebp
inc
not
rolb
test
out
jbe
or
push
stos
mov
jmp
in
mov
push
adc
inc
cld
std
adc
subl
sub
rorl
test
nopl
imul
mov
pop
outsl
sbb
fsubl
subl
xchg
pop
or
push
test
push
xor
daa
pop
and
xchg
xor
leave
cmpsl
iret
int
xchg
scas
ja
jecxz
imul
mov
addr16
hlt
repnz
scas
xchg
and
jbe
push
in
adc
imul
sti
xor
pop
dec
nop
xchg
stc
push
mov
xchg
pop
rolb
add
mov
inc
out
dec
idivb
cld
scas
leave
ss
cmp
sahf
dec
push
pop
mov
mov
ss
mov
mov
cmp
lock
add
xchg
mov
dec
aad
xor
fimull
lcall
pop
mov
into
inc
and
xchg
sub
pop
xchg
fmulp
mov
inc
inc
cmc
gs
push
out
or
in
jb
lds
enter
movsb
dec
dec
sub
jg
xor
hlt
loop
insb
enter
xor
add
lea
mov
leave
data16
mov
arpl
inc
push
divl
fistpl
out
pop
inc
sti
aaa
sbb
bound
mov
aam
cmp
jno
ret
xor
and
movsb
filds
nop
cmpsb
push
sarb
repz
mov
int3
pushf
icebp
xchg
cmp
adc
cli
ret
adc
outsb
push
ljmp
dec
mov
loopne
gs
jmp
xchg
pop
mov
lods
xor
shrw
jge
lea
lock
mov
loop
adc
xor
ss
insl
jbe
enter
jp
fistl
mov
loopne
iret
xor
xor
or
or
xlat
mov
jle
inc
mov
loopne
pop
push
clc
call
aad
call
pushf
xchg
push
hlt
ret
jmp
int3
orb
mov
add
dec
fwait
mov
mull
rcrb
pop
cwtl
xor
into
test
inc
outsl
fcoms
push
lock
dec
loope
push
ficoml
cmp
and
push
and
popa
sahf
mov
pop
mov
inc
and
test
xlat
repnz
sbb
jae
adc
or
sbbb
loope
pushf
xchg
jo
pop
decb
shl
pushf
mov
ret
mov
jle
xchg
enter
xor
out
imul
orl
jge
mov
fistpl
jo
jle
icebp
arpl
mov
data16
add
outsl
into
inc
lahf
xchg
and
fmulp
and
xor
out
sub
je
xchg
in
cmpsb
mov
mov
jp
pop
or
cmp
loop
mov
notb
mov
pop
mov
or
stos
sbb
int
sub
inc
cld
nop
mov
daa
pop
pushf
mov
test
cld
stc
jae
lahf
scas
pop
popf
lods
push
out
xor
aad
mov
fwait
mov
xchg
xchg
xchg
mov
mov
jp
push
mov
call
push
xchg
dec
mov
mov
xor
push
xor
sbb
movsb
mov
fisttps
shll
fcoml
dec
adc
scas
add
outsb
adc
rcrl
and
mov
xorb
adc
sub
outsl
fidivl
and
shl
cmp
xor
andb
aam
clc
xor
add
fidivl
sbb
pop
jecxz
out
jmp
pop
sub
jbe
lret
rcr
jo
bound
mov
scas
imul
mov
jle
les
adc
out
mov
jae
ror
push
cmp
jbe
cmp
out
sub
adc
cmp
xchg
icebp
hlt
push
mov
xchg
data16
std
sbb
jo
sarl
daa
and
and
arpl
out
push
mov
sub
stos
fidivl
fucomi
mov
cmc
inc
jmp
mov
into
jbe
sbb
xchg
rclb
add
arpl
sub
test
insb
and
or
mov
or
jb
and
push
iret
sbb
xchg
icebp
popfw
out
ss
sub
addl
repz
scas
push
stc
imul
pop
xor
call
fnsave
testl
scas
repnz
and
pop
rorl
dec
or
pushw
and
popa
xor
push
lcall
xchg
ljmp
cmp
push
aas
xor
aam
xchg
sti
loope
xor
xor
lcall
push
mov
sbb
mov
lock
scas
jo
or
sub
and
std
iret
xor
pusha
mov
test
addr16
fstl
inc
test
adc
aam
dec
dec
insl
and
pusha
adc
and
in
lods
insl
pop
rclb
push
icebp
jg
sub
adc
out
nop
roll
imul
in
fsubs
mov
mov
sahf
mov
bound
shlb
mov
outsb
int3
rcr
dec
out
sub
mov
jecxz
outsl
xor
divw
dec
insb
bound
movsb
xchg
cmpl
jg
sti
in
fistpl
mov
fisttpl
fistps
mov
test
imul
stc
sbb
test
cmp
add
pop
sub
mov
sub
xor
sub
cmp
push
in
clc
cmp
jg
repnz
shrl
inc
test
cmp
pop
xorl
fisubrs
and
pop
leave
mov
mov
jp
js
xchg
or
sub
adc
loopne
aaa
adc
xchg
lods
inc
jmp
xchg
jl
sub
divps
pushf
mov
pop
jecxz
add
xlat
and
dec
xchg
cmp
add
xor
cli
push
sub
addr16
sar
test
movl
pop
jge
mov
hlt
or
sarb
test
into
aad
adc
dec
sar
adc
test
mov
lods
cmp
cmpsl
xor
popa
cld
sub
add
sbbl
xchg
movsb
dec
inc
outsl
sahf
ja
and
mov
mov
shrb
adcl
and
arpl
inc
cltd
dec
dec
dec
rcr
aaa
dec
imul
add
dec
adc
lock
aaa
dec
mov
xchg
mov
jbe
jnp
jl
and
sbb
imul
aam
push
cli
sti
sub
sub
sub
push
cld
lahf
sbb
or
jb
arpl
je
jp
add
test
hlt
fisubl
cmp
rorb
lret
inc
dec
cmpsl
dec
pop
orl
mov
enter
cli
mov
adc
mov
imul
out
dec
mov
popa
dec
push
pop
cmp
movsl
stos
sbb
inc
test
push
jnp
jns
rclb
aam
dec
or
in
fs
mov
mulb
and
or
add
push
fwait
dec
or
data16
adc
popf
sub
push
jmp
es
jg
mov
fbstp
cmp
jb
fnstenv
cld
aad
cltd
data16
xor
push
cmp
out
test
ja
test
les
jg
push
into
xchg
xor
data16
inc
test
fidivs
mov
scas
sbb
pop
movl
repz
pop
cmpsb
rcrl
mov
sub
and
mov
scas
lahf
pop
dec
or
xchg
push
pop
bound
test
mov
pusha
fidivrl
push
imul
push
xchg
mov
test
jb
xchg
mov
lret
es
add
mov
push
fidivl
roll
mov
mov
pop
clc
das
cltd
stos
sub
fs
mov
mov
stos
enter
cmp
push
std
push
test
scas
jne
jp
xlat
insl
xchg
or
out
xchg
das
data16
dec
mov
inc
xlat
fwait
jge
pop
mov
mov
cmp
dec
sbbb
fidivrl
fsave
adc
or
in
fidivs
push
fistpll
mov
sbb
mov
jge
xchg
inc
mov
and
cmpsl
adc
lret
cs
sysret
xor
or
je
dec
dec
lds
lds
xor
stos
add
out
add
xchg
fldl
loope
pusha
fnstsw
cmc
lock
mov
jmp
in
pushf
pushl
xchg
and
adc
test
or
nop
int3
mov
imul
inc
repz
and
es
xor
jecxz
dec
sbb
jnp
fwait
dec
jns
das
out
jo
dec
aam
out
insl
js
push
lds
lods
shl
sub
mov
sub
jo
jno
loop
sub
pop
jne
ds
and
insb
sub
cs
inc
mov
out
iret
je
dec
test
mov
adc
cmpb
xor
insb
mov
xchg
sti
outsl
xchg
inc
and
in
xchg
mov
pop
pavgb
sbb
pop
push
fsubrp
insl
out
bound
xor
dec
push
insb
aad
dec
add
imul
mov
sbb
dec
sti
out
sub
outsb
lods
imull
lds
out
fidivrs
xchg
or
xor
dec
lods
imul
das
std
sbb
mull
jg
push
xchg
pop
hlt
loope
idivl
cmp
scas
mov
ds
jnp
scas
mov
sub
loopne
push
daa
popa
iret
imul
nop
fdivp
jbe
popa
pop
push
xor
pop
fists
adc
push
xor
pop
xchg
mov
mov
pop
xadd
sub
repnz
mov
and
adc
push
jb
ror
sbbl
pop
push
sbb
jp
pop
sbb
cmp
in
cwtl
inc
pop
rcrl
adc
out
inc
adc
inc
fsubr
lret
push
imul
xchg
jmp
inc
rorb
fstps
mov
lods
icebp
repz
adc
jne
stos
mov
rcll
mov
fs
mov
and
scas
daa
mov
test
roll
sti
addr16
das
in
repnz
adc
lea
addr16
sbb
loope
loope
in
insb
mov
out
int3
add
fsubrs
dec
and
mov
and
divl
push
movsl
mov
imul
mov
cmp
das
inc
ja
push
add
add
pop
and
in
jp
adc
aad
jno
mov
daa
pop
pop
cmp
cwtl
and
mov
push
enter
outsb
pushf
arpl
sub
xchg
imul
mov
dec
imul
popf
es
movsl
pop
xchg
jp
iret
xlat
inc
insb
pop
jg
dec
adc
mov
inc
hlt
mov
movsb
in
xor
mov
cwtl
les
popl
cld
loop
pop
popf
fstps
xchg
movb
outsl
add
movb
int3
pop
scas
int3
or
lcall
mov
xor
fst
ret
icebp
cmp
inc
shll
icebp
mov
fwait
cld
aam
out
sbb
xchg
out
and
enter
sbb
test
stos
test
cwtl
mov
and
out
data16
push
ljmp
test
outsb
push
pop
out
es
or
gs
pushf
loopne
scas
jo
sbb
adc
jp
dec
jmp
dec
stos
fistpll
or
not
mov
push
jb
mov
push
ss
cmc
pop
add
pop
xchg
jne
jle
push
and
sbb
cltd
pop
aaa
dec
sar
dec
inc
fdivs
inc
mov
sub
cmc
aas
sbb
adc
sub
jno
sub
push
and
dec
and
daa
loop
xchg
sub
ja
and
pop
and
jmp
incl
lds
push
cmpl
rolb
sahf
xor
jmp
and
repnz
hlt
mov
jne
and
push
mov
and
stos
xchg
dec
dec
in
add
mov
add
das
loope
xorl
rcr
fstp
icebp
sub
sbb
add
push
outsb
and
jb
mov
bound
pop
int3
popa
mov
shl
popa
xchg
mov
icebp
mov
and
lock
mulb
in
xlat
clc
stos
or
inc
out
ja
leave
lcall
and
adc
cmc
je
xchg
or
out
lds
mov
adc
fld
xchg
push
add
cli
adc
push
mov
cwtl
fs
nop
ja
or
xchg
mov
mov
lock
cmp
or
cmp
or
mov
xchg
ljmp
sbbl
mov
inc
popfw
lods
cmc
mov
pop
push
add
es
push
out
sbb
movsl
std
fisubrl
mov
clc
xor
xchg
xor
mov
push
mov
pop
jae
push
ffree
mov
aaa
push
jne
pop
sahf
popa
sbb
or
test
shll
pop
push
add
dec
nop
dec
addb
adc
mov
mov
fwait
in
dec
jmp
push
fsubs
movsb
cli
int3
inc
xchg
pop
lret
sarl
scas
das
and
scas
sbb
sahf
lock
testl
push
and
and
sbb
fwait
jp
jo
fisttps
inc
pop
into
test
movsl
mov
or
xor
lret
sbb
mov
inc
lret
mov
bnd
jmp
push
andb
sarl
test
push
ss
xchg
test
inc
jbe
fsubrl
aam
or
sbb
pushf
cmp
push
in
add
push
lock
mov
decb
arpl
into
sbb
stc
daa
push
mov
mov
add
dec
fnstcw
push
fcmovnbe
iret
xor
icebp
or
lcall
mov
push
rol
push
pop
cmp
and
sub
xchg
jmp
sti
or
out
fstpl
jb
xor
xchg
sbb
push
xor
cmp
pcmpgtb
lods
rcr
push
adc
push
out
mov
mov
js
ret
ds
dec
mov
inc
and
in
add
les
popf
mull
pop
imul
dec
mov
inc
or
clc
jl
or
call
push
inc
fs
adc
sub
xchg
sbb
call
jnp
sbb
sbb
push
sarl
in
ret
sarl
ret
sub
imul
fs
mov
xchg
shlb
xchg
jge
cmp
imul
jl
cltd
sbb
cltd
in
in
add
and
jl
in
or
add
insl
push
cmpsl
push
test
test
frstor
jnp
jb
dec
xchg
sub
mov
cmc
cmp
enter
push
mull
mov
neg
pop
je
enter
mov
push
and
xchg
mov
je
mov
inc
js
dec
arpl
iret
ret
push
call
je
movsl
test
bnd
repnz
fldt
adc
lea
fistl
aam
xchg
pop
mov
pop
or
pushf
and
in
mov
repnz
fisubl
int3
outsl
inc
shll
hlt
xchg
imul
xchg
es
in
insl
movsb
add
push
dec
ret
imul
xor
mov
jns
pop
mov
arpl
ret
inc
inc
lods
dec
es
add
adc
test
mov
inc
shlb
lcall
lret
xorl
leave
xor
inc
mov
cltd
xchg
repz
popf
inc
in
mov
dec
test
and
leave
mov
push
pop
dec
add
add
pop
and
test
and
repnz
shl
loopne
std
cmp
jl
sar
sbb
rclb
add
push
sub
pop
xlat
pop
adc
jne
in
push
lea
add
adc
pushf
jg
mov
stos
mov
cmpsl
stos
inc
push
into
in
int3
lock
ret
test
sarl
pop
jbe
insb
bound
sub
cmp
std
jae
cmpsl
pop
lds
add
sub
ud0
fnstenv
pushf
push
jo
cmp
or
mov
aam
mov
out
or
inc
mov
cmpsb
adc
popa
cwtl
jp
imul
lcall
movsb
pusha
call
jnp
push
xlat
push
sbb
dec
sub
add
imulb
and
popa
mov
aam
cld
imul
mov
test
sub
test
mov
inc
xor
enter
inc
xor
sub
mov
fists
dec
add
mov
aas
mov
sbb
out
loop
ret
xchg
mov
pop
shll
jl
cmpsl
leave
mov
cwtl
jnp
sub
aam
adc
cmp
dec
mov
jno
sub
push
or
add
sbb
aam
sub
or
push
xchg
cmc
or
js
pop
stos
loopne
sub
xor
out
jg
test
jg
pop
pop
ret
push
rcrl
pop
inc
jb
shlb
les
popf
test
lds
addr16
fsubl
cmpsb
push
bound
inc
lock
idivl
shll
pop
cmpsb
enter
shl
push
cld
add
sub
or
push
outsb
cmpsl
jmp
mov
ss
repz
das
add
data16
iret
in
add
mov
lods
xlat
xchg
pop
test
cli
test
leave
ljmp
fcoms
or
mov
jae
xchg
or
hlt
hlt
fistl
mov
push
push
aas
cs
mov
mov
lods
sbb
add
fldenv
jge
cltd
sbb
xchg
jmp
dec
and
jge
fisubs
repnz
adc
dec
push
adc
cmp
dec
pop
dec
fldenv
test
xlat
xorb
mov
mov
xor
ljmp
mov
imul
sbb
fstpl
data16
daa
jo
pop
lds
into
inc
xorb
xchg
hlt
xor
xchg
repnz
stos
inc
out
or
call
into
bound
jb
inc
mov
pop
push
mov
add
fcom
and
not
jae
cli
cs
pop
inc
jl
cltd
dec
mov
imul
shlb
filds
inc
xchg
mov
dec
mov
ja
hlt
stos
ret
mov
xchg
xchg
or
sbbb
int
data16
popf
push
in
xchg
mov
lods
idiv
pop
dec
stos
xchg
xchg
jns
addl
cmp
divb
adc
mov
cwtl
js
mov
addr16
jbe
vmread
push
or
scas
xchg
ret
or
or
stos
mov
adc
xor
sahf
mov
popa
ret
inc
out
data16
sbb
cmp
mov
in
lods
xchg
add
clc
loopne
jmp
or
inc
lret
dec
out
shl
mov
pop
add
or
pop
jno
loopne
add
xor
lods
xchg
imul
adc
sub
imul
sbb
mov
mov
roll
lds
popl
idivl
push
fs
jl
sub
pop
test
popf
mov
repnz
aad
in
or
pop
mov
lahf
andl
call
jmp
sub
sub
popf
adc
cmpsb
mov
mov
cld
sub
roll
push
or
sti
iret
pop
mov
mov
in
adcl
jns
test
pop
xchg
sub
outsb
jg
sbb
inc
ljmp
out
push
jns
xor
imull
jp
and
out
movl
push
adc
bound
out
sub
push
popa
and
mov
cld
mov
cmp
cli
loop
xor
mov
xchg
pop
mov
fwait
inc
ret
imul
lds
xchg
cmc
mov
add
mov
popa
mov
jae
iret
call
jne
int
mov
mov
ret
loopne
dec
std
sub
out
ret
lods
repz
xchg
andb
sbb
and
aaa
push
cmp
xor
out
out
loop
jecxz
sarb
xchg
sub
out
mov
sub
ja
or
clc
mov
clc
sbb
aad
or
mov
shl
mov
sbb
ja
sbb
adc
add
aam
adc
mov
sbb
jp
push
js
pop
mov
in
aam
clc
test
pop
shrl
xchg
xor
xchg
jge
add
and
imul
push
add
lcall
mov
xchg
std
testl
fidivl
fstpt
int
xor
stos
mov
fwait
cs
es
popa
mov
repnz
out
pop
pop
enter
adc
icebp
xchg
imul
sub
or
xor
push
mov
xor
fsubrs
cmp
inc
pop
pop
incb
jno
jmp
mov
insb
daa
loop
cmp
sbb
jecxz
mov
jb
mov
aaa
pop
sahf
push
jecxz
mov
ret
and
cmp
mov
xor
xchg
add
mov
xchg
aas
inc
movsb
mov
mov
pusha
mov
out
mov
sar
loop
dec
shll
outsb
push
test
ja
push
or
scas
rclb
jle
or
pop
fists
fldcw
jmp
out
jge
stos
dec
adc
cmp
pop
mov
xchg
mov
and
fndisi(8087
lea
push
inc
sub
cmp
xchg
add
xchg
push
decb
inc
dec
js
mov
inc
cmp
das
xlat
jp
bound
addr16
sbb
mov
cltd
mov
jmp
ret
aam
push
pop
scas
test
sub
pop
add
push
xchg
call
hlt
stc
add
sbb
lock
cmpb
jg
jge
loopne
stc
jmp
std
push
mov
in
jmp
rclb
cli
dec
pop
dec
addb
lahf
icebp
shrb
ret
cltd
xor
sbb
and
mov
call
pushl
sub
pop
inc
add
dec
sbb
pusha
ret
scas
int
pop
les
into
js
adc
cmpsl
out
mov
and
sbb
xchg
ds
sub
nop
dec
cmc
dec
rol
jge
or
inc
loope
unpckhps
testb
jb
stc
cmc
xchg
jmp
test
leave
add
fbld
xchg
mov
gs
out
adc
nop
neg
jl
push
cli
in
mov
add
push
scas
fldl
mov
mov
sbb
scas
adc
mov
dec
dec
jns
movsl
and
inc
fcomps
ret
fwait
jmp
daa
adc
dec
sub
xchg
testb
ja
jmp
insb
xchg
xchg
adcb
dec
fwait
mov
mov
sarb
pop
add
jo
rcll
out
push
dec
xor
jnp
fiaddl
iret
add
pop
inc
mov
or
cltd
push
movsl
add
dec
fs
icebp
std
sbb
idivl
or
std
pop
lahf
xchg
ja
sahf
push
aam
dec
mov
and
icebp
scas
pop
mov
dec
pop
and
lcall
pop
xlat
pop
ret
inc
imul
push
jnp
lcall
dec
aam
rcl
stc
popa
js
sub
mov
aaa
pop
sbb
jp
push
inc
mov
fidivrs
and
lret
push
jg
aad
das
and
mov
or
sub
mov
negl
xor
pushf
das
jno
cmpsl
sbb
je
sub
or
shll
daa
lods
mov
mov
retw
jbe
orl
lock
jb
inc
push
pop
cmpsl
scas
shrl
sbb
lock
push
jb
add
dec
push
sbb
lret
leave
and
mov
sbb
dec
dec
in
out
xchg
sub
lds
jns
lods
ret
inc
mov
addb
mov
leave
test
sbbl
sahf
inc
fwait
leave
dec
cli
cmp
dec
inc
jl
push
xlat
rcrb
andl
int3
inc
push
out
imul
fwait
and
mov
movsl
dec
jns
fisubl
mov
daa
add
insl
pop
mov
lock
add
das
and
fbld
scas
fs
mov
mov
sbb
mov
mov
xchg
or
jo
out
add
mov
sub
adc
lret
xchg
es
pop
fcmovnbe
mov
push
aad
mov
dec
iret
in
xor
imul
lods
test
mov
je
xchg
inc
add
pop
mov
fs
pop
push
insl
mov
jns
add
out
sub
mov
sub
cld
lods
mov
sarl
test
scas
sub
xor
scas
dec
orl
jnp
hlt
mov
or
movsl
sbb
inc
loope
mov
inc
sub
popf
adc
divb
pop
adc
loop
ljmp
inc
call
les
jle
sti
pop
and
xchg
repnz
scas
xor
xchg
fistps
cmc
and
push
pushf
jmp
scas
ljmp
std
jle
adc
test
stos
jmp
cs
outsl
add
sub
aad
push
lcall
je
and
cmpb
adc
dec
dec
loop
pop
dec
lret
aas
dec
out
addb
inc
mov
jae
mov
in
sub
movsl
outsl
aaa
sbb
cmp
dec
pop
push
inc
inc
lahf
shlb
push
or
jo
int3
addr16
and
ja
inc
daa
pop
rcll
add
stos
and
mov
add
fwait
xchg
and
mov
push
shrl
fisttps
pop
ss
sbb
insb
stc
ror
mov
mov
jmp
add
mov
fstps
or
cs
fcomip
aas
addr16
fcompl
repnz
and
or
cltd
mov
and
fs
icebp
mov
mov
or
popf
jl
les
mov
mov
sub
rcrb
out
into
lods
mov
sub
xchg
lret
mov
sub
out
movsl
aad
sarb
repnz
out
or
pop
lock
xor
fmull
push
mov
movsb
jb
sbb
sub
sbb
cs
mov
cmp
mov
cld
stos
lahf
mov
adc
xchg
jl
add
xchg
aas
adc
xchg
sbb
pop
dec
and
into
fbstp
push
sub
adc
orb
sbb
arpl
cmp
cmp
pop
sahf
push
mov
scas
mov
jge
xchg
gs
fsubp
or
rolb
xchg
mov
das
add
lods
jno
insb
outsl
xchg
test
add
nop
mov
mov
test
inc
push
ret
jmp
inc
lock
xor
jae
dec
inc
repnz
inc
mov
jmp
mov
ja
scas
std
mov
fisubl
dec
insb
xchg
and
sub
cmc
and
mov
fs
mov
sbb
popa
cwtl
cmc
adc
or
and
xchg
pushf
jg
adc
mov
enter
lahf
fs
xchg
pop
add
dec
sbb
cs
sub
pop
jecxz
adc
mov
subb
inc
movsl
call
jb
sbb
mov
and
mov
mov
lock
roll
or
adc
ss
stc
jnp
lea
cli
lods
mov
in
or
repz
sbb
in
and
xchg
push
sub
mov
mov
ret
and
or
pop
dec
mov
sarl
mull
sub
add
and
mov
or
aam
sbb
popl
adc
mull
push
and
jg
or
pusha
popf
gs
xor
mov
pushf
fmul
jmp
fisttps
add
test
dec
stc
dec
fistpl
dec
pop
jne
js
das
sub
lds
loope
sbb
pop
add
pop
aaa
fucom
xchg
xchg
cmp
or
insl
mov
andb
inc
repnz
out
call
shrb
push
xor
pop
dec
fists
inc
pusha
dec
movsb
push
fistpll
pop
lcall
hlt
data16
imul
rcl
jp
mov
sti
mov
pop
mov
or
fdivrs
data16
xor
ret
call
cmp
out
or
cmp
or
and
push
xchg
andl
pop
sahf
add
outsl
sub
mov
in
test
sbb
lea
xchg
xchg
xor
cmp
insl
icebp
push
addb
mov
or
iret
rorl
out
mov
dec
pop
in
and
in
ja
xchg
les
xor
stos
mov
xor
in
out
mov
shll
push
cmc
scas
mov
dec
adc
sub
xchg
pop
xor
cld
fisttpl
lret
fistps
mov
fldenv
push
test
jne
inc
incb
hlt
fistpl
sub
inc
ds
pop
mov
bound
push
xor
rorl
xchg
fwait
out
sub
jno
out
sub
movsl
je
push
mov
lahf
mov
sub
hlt
sub
je
xor
cmpsb
iret
ja
sbb
repnz
mov
jno
xor
dec
pop
fistpll
dec
cmp
mov
and
cs
inc
outsb
cmpsl
and
sbb
scas
push
inc
iret
fs
fwait
xchg
out
add
shrl
dec
into
sbb
mov
cld
jle
mov
rorb
add
dec
stos
repnz
inc
daa
jb
lods
push
movsb
call
jmp
pop
in
sbb
sbb
movsb
stc
lret
sub
das
out
mov
cltd
gs
pop
mov
imulb
lods
arpl
adc
pop
cmp
int3
ja
xchg
addr16
sub
in
test
xchg
out
pop
push
dec
outsb
push
mov
ret
jl
push
mov
add
mov
test
mov
sub
jl
jg
xor
cmp
mov
ja
jno
jmp
cmp
mov
or
sahf
sub
test
jmp
dec
lea
xor
gs
aas
push
jp
sub
inc
lds
xchg
scas
add
or
pusha
sub
add
sub
scas
jl
cmpsb
lahf
cli
mov
cmpsl
xchg
jo
scas
lock
fidivrs
jmp
jb
mov
or
fwait
test
ljmp
test
pop
loope
xchg
frstor
jo
add
push
adc
iret
test
inc
scas
push
lret
mov
jno
aam
enter
mov
jl
push
adc
inc
jmp
pop
xrelease
mov
add
leave
add
or
xchg
ret
mov
pusha
and
stc
movsb
xor
mov
cs
in
xchg
jnp
das
dec
push
cmpsl
jl
jge
shlb
xchg
clc
movsl
ljmp
lret
xor
sbb
pop
mov
outsb
and
sub
outsl
sub
cmp
ja
int3
cltd
mov
inc
test
in
call
popf
divl
lret
dec
stos
adc
aam
movsb
cmc
and
xor
repz
mov
jle
call
testb
flds
lock
or
imul
aad
movsb
mov
ret
add
cmpsb
movsb
icebp
inc
or
sub
sub
dec
jp
rclb
gs
mov
inc
pop
negb
jl
cmp
mov
sti
fs
cmpsl
je
inc
mov
pop
xchg
jne
add
mov
stos
xor
in
push
cmp
cmpb
cmp
outsb
stos
lret
mov
decl
rorl
pop
pop
imul
dec
jbe
loop
push
push
mov
sti
in
xor
lcall
pushf
shrl
imul
les
jo
push
push
sbb
cwtl
ja
loope
mov
inc
bound
loop
icebp
or
ds
xchg
jno
bound
mov
fsubl
push
shrl
frstpm(287
xor
mov
adc
repz
rclb
sahf
inc
stc
mov
jb
call
pop
jp
fmuls
jecxz
sub
aaa
xor
push
pop
xor
push
push
loope
push
mov
dec
lret
test
add
repz
adc
xor
negb
cli
jae
jl
test
mov
adc
push
mov
cli
iret
lcall
xlat
push
mov
test
xor
ss
stos
lcall
addr16
xchg
rorb
int3
mov
divb
push
iret
insl
mov
lods
iret
sub
inc
scas
pop
sub
out
mov
stos
inc
call
fstpl
push
sti
scas
insl
xchg
jne
and
push
dec
xlat
add
sub
and
out
jne
sbb
cmpb
mov
out
maxps
sahf
pop
shl
stos
add
out
inc
lret
aas
gs
inc
sbb
lea
ja
sbb
mov
jae
push
aaa
nop
in
dec
and
and
fmuls
bnd
xor
xor
jecxz
push
stc
mov
push
inc
mov
cmc
femms
or
lods
add
dec
xchg
into
xchg
pop
or
xor
and
mov
mov
sub
data16
fwait
loopne
jl
out
add
int
js
cmp
pusha
xchg
mov
push
xchg
es
out
lock
adc
das
ss
bound
loope
mov
mov
shlb
icebp
fnstsw
cmc
sub
xchg
jbe
daa
xchg
mov
adc
cli
pop
cmp
popf
sbb
jp
jl
imul
and
cli
push
dec
aam
push
pop
fwait
ljmp
mov
push
iret
mov
push
or
mov
jg
in
nop
loope
inc
sbb
pop
push
xchg
or
inc
mov
nop
scas
mov
inc
cmp
sbb
lds
out
mov
fidivl
sbb
sbb
pusha
stc
mov
adc
ss
sarl
aad
lret
bound
mov
int3
rorb
outsl
xlat
mov
iret
xchg
xchg
cmp
inc
xchg
shl
mov
dec
cmp
cmp
inc
inc
fwait
cmp
in
adc
out
mulb
lock
fimull
pop
inc
push
dec
dec
push
push
inc
enter
add
fucomp
out
out
sbb
and
imul
mov
sub
xlat
bound
imul
adc
fcmovb
ja
mov
xorl
push
jns
cld
jno
imul
mov
lods
mov
push
adc
dec
xorl
add
fs
rorb
dec
pop
bound
out
out
jns
dec
sub
loopne
jae
scas
mov
cmpb
jnp
jb,pn
xchg
in
xchg
repnz
into
or
ds
dec
test
add
cmp
pop
jle
jne
mov
add
je
dec
add
in
cmp
inc
sub
push
fwait
iret
repnz
pusha
ja
push
ret
pop
sub
je
push
cli
iret
push
mov
mov
call
or
inc
mov
jmp
dec
ds
bound
repnz
mov
aam
adc
jg
sub
lret
mov
aam
mov
fwait
push
loop
imul
and
mov
cltd
jb
push
dec
mov
adc
dec
push
sbb
xchg
call
cmp
int3
xor
mov
sub
add
mov
out
and
cmp
in
test
jl
mov
test
pop
adc
mov
aad
push
enter
das
adc
sbb
loop
cmp
fstpt
sbb
dec
cld
pusha
xlat
mov
mov
push
dec
pop
repz
pushl
repnz
and
sub
hlt
jmp
addb
inc
jb
push
es
lret
out
sbb
xor
pop
lea
sub
icebp
add
jbe
xor
insl
mov
mov
fsubr
push
mov
xchg
inc
dec
pop
les
inc
fsubr
popf
xchg
out
test
add
and
or
mov
inc
dec
xor
and
jp
push
mov
pop
dec
mov
adc
push
mov
add
aas
sahf
ja
sub
jecxz
and
inc
lods
das
and
daa
sti
push
leave
cmc
fisubl
and
add
in
push
sbbl
pop
test
cltd
pop
pop
mov
addb
nop
or
mov
sbb
roll
das
mov
mov
stos
mov
pop
lahf
mov
aad
lods
cs
and
jns
inc
lea
out
mov
lock
add
mov
add
aas
mov
out
lahf
mov
sahf
cmc
je
mov
les
or
les
es
or
mov
les
sarl
mov
cmpsl
mov
gs
adcl
xchg
fdivr
inc
pop
aam
loop
aad
in
outsb
mov
in
test
xorl
ret
pop
loope
inc
mov
cmp
mov
pop
scas
mov
push
mov
cmp
scas
sbb
stos
xchg
ficompl
mov
fs
adc
repz
in
mov
fidivl
lods
dec
std
xor
lock
popfw
orl
mov
pop
ds
mov
pop
movsb
stos
cmpsl
repz
or
call
loope
sub
test
mov
xchg
cltd
add
dec
add
repnz
push
dec
adc
jne
push
jge
fnstcw
ss
icebp
cli
ret
fld
pop
sub
or
mov
mov
pop
fcomi
ja
adc
add
inc
sub
fs
icebp
outsl
outsl
call
push
sbb
testb
fimull
hlt
jle
sbb
insb
push
sbb
inc
leave
das
pop
subl
mov
pop
mov
sub
adc
data16
lea
mov
fisttpl
jne
pop
lea
push
jno
shl
data16
faddl
adc
sarl
les
push
xchg
push
or
arpl
jae
test
stos
lret
inc
js
cwtl
xchg
lcall
aam
fadds
inc
dec
int3
xchg
mov
dec
lret
xor
xchg
jno
cmpsb
and
mov
cld
nop
and
add
push
lds
xor
scas
mov
imul
xorb
call
stc
loop
xlat
mov
xchg
push
sub
jno
je
mov
pop
imul
scas
leave
imull
je
jnp
adc
mov
out
xchg
in
call
gs
dec
sub
imull
jmp
test
fwait
add
sbb
adc
arpl
pop
add
call
inc
sub
scas
fidivs
pop
call
dec
neg
lods
jecxz
fwait
adc
sbb
int3
in
inc
mov
loopne
loope
xchg
cmpb
mov
mov
iret
sub
mov
and
mov
repnz
lahf
fstps
mov
xchg
adc
jne
dec
out
adc
inc
inc
lods
outsb
adc
arpl
inc
pop
fldcw
or
testl
aam
sbb
push
pop
outsl
scas
out
pop
jl
retw
jne
and
jg
push
push
fsts
push
lcall
test
add
jecxz
xchg
shrb
jmp
inc
dec
push
into
add
stos
lock
pop
or
cmp
lcall
adc
inc
stos
adc
ror
fsts
insb
jbe
cmp
add
sbb
sbb
in
sti
mov
rclb
rolb
or
call
mov
sar
pop
test
ret
shrl
xor
pop
neg
flds
adc
lods
mov
in
inc
lcall
dec
fbstp
jno
or
and
testb
jmp
daa
stos
xor
adc
incb
lods
push
jno
leave
push
cltd
mov
pop
cs
movsb
sbb
lcall
std
leave
nop
inc
dec
lods
in
cmp
push
test
lods
xchg
xchg
stc
xor
stos
jmp
mov
adc
testb
mov
and
mov
movsb
aad
cmc
xchg
test
in
jo
inc
daa
test
in
mov
int3
inc
scas
inc
jmp
pop
push
jnp
sar
jb
xor
pushl
mov
scas
aas
push
mov
adc
or
mov
pop
mov
ret
push
sbbb
test
negl
loope
inc
mov
scas
inc
mov
ds
xchg
sbb
mov
mov
mov
ds
or
bound
mov
xor
add
lock
and
jno
mov
pop
mov
xor
enter
loop
adc
or
mov
leave
cmp
test
movsl
adc
sub
test
fucomp
sbb
xor
xchg
mov
pop
push
push
test
mov
pop
out
fwait
movl
lret
jmp
mov
cmpsl
lcall
mov
stos
clc
idivb
sbb
mov
call
pop
add
mov
cld
sti
inc
fisubl
sbb
jne
jmp
inc
inc
jns
loop
sub
jb
xchg
pushl
mov
ljmp
push
mov
xor
and
pop
test
lret
insb
icebp
xchg
dec
lds
sarl
shll
ret
scas
adc
jg
dec
fscale
rclb
lahf
mov
movsl
jo
jmp
jge
lock
arpl
inc
and
inc
enter
push
outsb
adc
loopne
lcall
mov
inc
aas
cli
popw
cmp
jb
jmp
cmp
jae
fs
cs
enter
idivb
inc
daa
rcl
dec
push
icebp
xor
or
or
pop
mov
lret
ljmp
mov
cmp
repz
andb
jbe
aam
sub
adc
xchg
dec
push
push
cmpl
or
jbe
std
imul
cmc
xchg
shll
and
mov
pop
and
adc
clc
in
or
jecxz
cmp
pop
xchg
lahf
mov
mov
adc
sbb
jae
push
sti
mov
or
sub
xor
mov
jp
outsb
into
push
inc
in
and
xchg
arpl
push
xchg
or
shlb
or
fstpt
sbb
fstl
out
repz
int3
fcmovne
ja
pop
push
into
pop
ss
stos
bnd
out
dec
lds
fldcw
mov
or
sbb
out
imull
sub
xchg
mov
cmpl
mov
fidivrl
and
lods
inc
mov
ds
xchg
ss
jge
jg
lods
add
xchg
dec
pop
in
in
addr16
pushf
shr
in
add
jp
popa
jb
sbb
pop
outsl
cli
lret
mov
test
jle
mov
std
cltd
addr16
lahf
xchg
loope
mov
test
push
in
cmp
or
daa
sub
fisttpl
ja
imull
jns
sbb
test
xor
je
scas
test
mov
xor
or
rolb
inc
arpl
hlt
sbb
mov
cmp
fs
xchg
sbbb
dec
pop
cmp
or
aaa
repz
xor
fxch
lds
cmp
negl
repz
fdivs
arpl
dec
inc
mov
out
and
cmp
inc
jecxz
loope
in
mov
lock
shrb
xchg
jne
sbb
scas
inc
xchg
jb
push
test
aam
xchg
lahf
mov
aam
push
mov
leave
mov
xor
push
or
dec
out
ljmp
roll
rorb
pop
adc
loop
call
inc
xchg
add
push
dec
pop
sub
push
sti
xor
mov
xchg
ja
jecxz
cltd
lea
mov
lcall
pop
add
push
fnstenv
lret
jae
test
add
jle
in
mov
test
fldcw
mov
mov
sub
cmpsl
cmp
jg
jg
or
xor
add
push
mov
fistps
add
add
add
add
sub
sbb
imul
shlb
fistpl
clc
enter
in
mov
popf
in
nop
les
mov
sbb
outsb
outsb
push
mov
and
aam
push
into
movsb
clc
adc
ljmp
adc
mov
out
mov
jle
roll
sbb
cmpsb
xchg
adc
in
add
or
pop
xchg
bound
sub
adc
test
push
lods
popf
pop
iret
sbb
or
push
push
xchg
daa
jns
add
xlat
mull
push
mov
jnp
sti
cs
and
punpckhdq
sti
adc
les
or
mov
push
inc
call
jmp
test
adc
xor
push
leave
cmpsb
mov
dec
xchg
mov
int
inc
xor
das
fwait
cmc
fisttpl
jns
movsb
movsl
adc
xor
lds
cmpb
lret
mov
int3
cmpsl
dec
cmp
or
jecxz
decb
cmp
loop
inc
lahf
scas
aam
adcb
les
test
push
andb
mov
orb
insb
sti
cmp
sbb
ret
xor
mov
rolb
test
push
icebp
out
pop
mov
fbld
mov
outsl
add
je
rorl
jp
lock
int3
xchg
inc
inc
mov
push
mov
js
mov
out
push
sub
sbbl
fistpll
pusha
xchg
add
push
xlat
in
dec
jbe
dec
dec
ret
adc
adc
jo
sub
xchg
daa
das
fildl
movsl
inc
jecxz
jnp
cld
outsb
pushf
out
push
dec
adc
push
xor
pop
sub
jge
jmp
push
cld
adc
inc
shlb
lret
into
aam
xchg
push
push
add
shrl
ljmp
mov
push
into
mov
jne
daa
ffreep
add
jbe
adc
mov
sub
fs
jl
mov
das
test
jo
iret
pop
fmuls
sbb
iret
cmp
das
and
sub
push
pop
add
sub
rcll
les
js
adc
xchg
popa
mov
push
daa
in
das
sti
and
ds
and
gs
jge
loop
dec
pushf
ret
fs
mov
or
sbb
ror
push
test
js
push
pop
aaa
movsb
pop
sbb
icebp
mulb
push
repz
shll
push
mov
mov
movsl
enter
xor
js
push
or
int
popa
dec
jecxz
cltd
scas
mov
out
popa
ljmp
xor
repnz
loop
xchg
int
jl
xchg
inc
insl
xchg
xorb
orb
movsl
lods
jbe
mov
lcall
jne
jg
int
nop
repnz
cmp
rcpps
sbb
dec
in
roll
ss
pusha
loope
rol
inc
das
xchg
jae
arpl
xor
adc
add
sub
sub
push
mov
mov
push
int3
mov
pusha
sbb
xchg
in
mov
mov
roll
loop
subb
sahf
push
lahf
rclb
push
fiadds
fadds
add
imul
jno
mov
pop
cmpb
jo
add
and
xchg
enter
pop
add
out
mov
inc
arpl
add
jnp
jle
cmp
mov
lea
ret
cvtps2pd
xorl
mov
cmp
sub
sarb
sbb
nop
push
lock
mov
mov
mov
jecxz
jae
scas
ja
cltd
clc
aad
cmp
dec
ljmp
loopne
rorl
gs
into
push
mov
scas
inc
lods
cld
or
bound
shrl
pop
out
mov
sub
pop
cmp
jns
test
fldl
jb
subl
or
lds
lahf
cwtl
jae
inc
sbbb
aas
pop
cmc
mov
jae
aas
scas
mov
ljmp
insl
fwait
or
or
sbb
xor
add
subb
dec
pop
test
mov
and
push
sbb
sti
loope
das
push
fstpl
imul
add
jmp
xor
mov
lahf
ret
fs
popf
pop
sub
movsl
ljmp
sbb
xchg
cmpsl
dec
roll
xor
or
or
sbb
cmp
cwtl
mov
and
inc
es
lds
test
xor
insl
sbb
dec
xchg
leavew
xchg
lahf
and
sbb
je
mov
hlt
xchg
fwait
jge
dec
dec
mov
sbb
push
xchg
jae
dec
lock
xor
subb
sub
aad
out
jb
iret
mov
pop
adc
es
pop
lock
sub
int3
test
ret
in
outsl
pusha
cltd
ljmp
popa
push
and
iret
std
mov
pop
sbb
sub
nop
or
push
inc
xlat
adc
xor
push
adc
and
push
pop
pusha
je
dec
dec
sub
fwait
sbb
call
push
mov
jb
adc
rcrb
aas
cli
cltd
in
xor
fcmovbe
into
shl
cmp
and
stos
pusha
roll
pop
lret
andl
pop
fldenv
xor
roll
or
stos
lret
jne
aam
cmp
ret
data16
add
dec
pop
pusha
loopne
adc
xchg
xor
jne
mov
mov
nop
mov
inc
bound
push
fdivr
jb
cmp
icebp
int
inc
daa
dec
jb
fdivl
pop
pop
fistl
push
mov
bswap
pop
xchg
in
sub
mov
test
in
inc
es
dec
push
inc
push
adc
setbe
cmpl
or
adc
xchg
push
scas
stc
test
popa
cmp
xchg
jmp
mov
pop
pop
xchg
mov
xchg
mov
nop
add
jb
inc
popa
je
inc
push
inc
xchg
fimuls
mull
mov
add
sub
mov
call
xchg
movsb
fs
insb
lcall
mov
sbb
adc
xchg
xor
int3
pop
push
sti
add
daa
pop
push
push
xchg
addr16
enter
movswl
das
int
lcall
es
or
cmp
xor
je
std
cmp
pop
pusha
adc
sub
aad
fildll
xchg
jne
or
jnp
xchg
and
je
add
add
add
insb
add
add
outsb
add
add
outsl
add
add
push
add
add
add
imul
add
add
add
bound
jb
imul
je
inc
outsb
add
add
add
outsb
add
add
imul
add
add
add
add
jns
insb
imul
add
insb
outsl
outsl
imul
jb
popa
add
add
imul
popa
add
jb
outsl
add
add
add
add
add
add
add
push
je
push
add
push
add
add
add
add
jne
je
add
outsb
add
add
popa
add
add
add
je
jne
jo
outsl
add
add
arpl
outsb
add
add
add
add
add
popa
insb
insb
add
outsb
add
push
add
add
add
jo
outsl
outsb
outsl
jne
arpl
je
push
add
add
outsb
add
add
add
add
add
add
outsb
add
add
data16
add
gs
sub
add
add
add
push
je
add
jne
imul
popa
add
add
add
popa
insb
insb
add
add
add
jb
outsl
add
jns
cmp
add
outsb
add
je
