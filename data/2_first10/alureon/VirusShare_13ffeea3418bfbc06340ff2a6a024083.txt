push
mov
push
mov
cmp
jb
xor
add
push
mov
je
push
mov
mov
mov
mov
mov
mov
rol
mov
xor
imul
xor
mov
sub
mov
mov
inc
cmp
jb
pop
pop
pop
pop
ret
push
mov
push
push
andl
andl
push
push
push
push
push
call
mov
lea
push
pushl
lea
pushl
movb
push
pushl
movb
pushl
push
call
push
push
push
call
pop
leave
ret
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
test
je
andl
mov
sub
add
mov
mov
mov
lea
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
push
call
mov
cmpl
mov
je
or
sub
mov
mov
mov
sub
add
mov
mov
mov
lea
push
push
push
call
mov
mov
mov
sub
add
mov
movzwl
add
lea
movzwl
lea
mov
mov
mov
andl
xor
cmp
jae
lea
mov
mov
addl
push
lea
pop
rep
mov
add
movzwl
add
incl
cmp
jb
mov
mov
add
pop
mov
xor
pop
inc
pop
leave
ret
mov
push
mov
push
mov
mov
push
push
mov
lea
push
push
push
call
test
jl
mov
mov
lea
push
pushl
push
call
test
jl
mov
mov
push
pushl
push
call
test
jge
andl
jmp
mov
pop
pop
pop
pop
ret
push
mov
sub
push
push
mov
xor
cmp
je
mov
cmp
je
cmp
je
mov
cmp
je
add
push
mov
lea
sub
nop
lea
mov
push
mov
inc
pop
cmp
jb
pushl
lea
push
add
call
mov
test
je
mov
sub
mov
mov
inc
dec
jne
pushl
mov
pushl
mov
pushl
mov
push
call
pushl
mov
push
call
lea
push
pushl
pushl
pushl
call
add
pop
jmp
xor
pop
pop
leave
ret
push
mov
sub
push
mov
mov
imul
push
mov
cmp
jb
mov
imul
mov
mov
add
imul
push
push
xor
pop
div
mov
mov
mov
mov
mov
sub
mov
test
je
mov
sub
mov
mov
ror
xor
imul
lea
mov
divl
mov
mov
add
cmp
jae
mov
mov
imul
xor
divl
xor
mov
sub
imul
div
cmp
jae
mov
sub
test
je
mov
mov
sub
mov
mov
jmp
mov
mov
mov
mov
mov
mov
inc
decl
jne
mov
add
add
add
cmpl
jne
pop
pop
pop
leave
ret
push
push
push
call
mov
mov
push
pushl
xor
mov
rep
call
test
je
push
call
xor
inc
pop
pop
ret
push
mov
testl
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
pop
ret
push
mov
mov
mov
mov
sub
test
jne
inc
jmp
andl
push
push
push
lea
lea
cmpl
mov
je
mov
jmp
mov
mov
push
lea
push
push
add
call
mov
add
test
je
mov
lea
movsbw
mov
add
inc
mov
test
jne
lea
push
call
mov
test
je
mov
add
andl
cmpl
je
mov
mov
test
jns
and
jmp
add
add
push
pushl
call
mov
mov
cmpl
je
incl
mov
lea
cmpl
jne
mov
incl
mov
imul
add
lea
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
mov
push
mov
pushl
call
push
call
pop
ret
push
mov
sub
mov
mov
sub
mov
je
mov
test
je
push
mov
add
test
je
push
push
mov
sub
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
addl
decl
jne
mov
test
jne
pop
pop
pop
xor
inc
leave
ret
mov
push
mov
push
call
mov
test
je
push
push
mov
lea
push
mov
push
lea
push
call
mov
push
mov
call
add
push
push
lea
push
call
pop
pop
mov
pop
pop
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
mov
mov
push
call
cmpb
pop
jne
push
call
push
call
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
mov
pop
ret
mov
push
mov
sub
push
lea
push
pushl
push
pop
call
test
mov
je
cmpl
jbe
mov
push
push
pushl
mov
pushl
push
call
pushl
push
pushl
push
call
pushl
push
pushl
push
call
mov
cltd
mov
idiv
push
push
pushl
push
call
push
push
pushl
push
call
add
push
push
pushl
push
call
mov
add
push
call
push
push
pushl
push
call
add
push
call
push
push
pushl
push
call
add
push
call
mov
push
push
pushl
push
call
push
push
pushl
push
call
push
push
pushl
push
call
push
push
pushl
push
call
add
push
push
pushl
push
call
pushl
push
pushl
push
call
add
cmpl
jbe
pushl
push
push
pushl
call
pushl
push
call
pop
pop
pop
pop
mov
pop
leave
ret
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
push
mov
sub
mov
push
push
push
mov
movl
test
je
mov
mov
jmp
push
call
mov
mov
mov
push
push
push
push
xor
push
inc
push
call
mov
mov
mov
push
shl
push
add
incl
push
push
call
mov
mov
test
je
lea
push
push
pushl
call
mov
imul
add
imul
add
cmpl
je
cmpl
jne
push
call
lea
push
push
pushl
push
call
mov
push
push
push
push
call
mov
lea
add
add
lea
mov
pushl
mov
push
mov
and
call
pushl
mov
pushl
call
pushl
pushl
pushl
push
call
mov
push
call
test
je
pushl
mov
pushl
pushl
pushl
call
cmpl
mov
jne
push
call
jmp
test
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
add
inc
lret
add
loopne
cwtl
clc
sbb
push
nop
lahf
add
dec
lret
cmp
mov
leave
arpl
and
jg
fcomps
xor
cmp
dec
xor
icebp
lock
sub
pop
push
sub
mov
cmp
movsl
cwtl
clc
sbb
loop
nop
dec
das
mov
dec
lret
cmp
mov
leave
addr16
leave
xor
mov
lods
repnz
add
movsl
and
arpl
mov
sub
push
inc
add
jle
cmp
in
inc
insl
dec
mov
lcall
test
dec
fldcw
xorl
push
push
jmp
shlb
push
mov
out
les
mov
push
xlat
jae
push
fisubrs
stos
out
loop
mov
and
mov
in
mov
stos
mov
add
aaa
cltd
mov
pop
jbe
mov
xchg
js
lods
jg
loopne
rclb
shl
das
lods
pusha
scas
fisubs
add
or
mov
jg
push
std
dec
jo
and
or
call
loope
int3
add
lock
sbbl
movsb
jns
inc
out
repnz
rcrl
jg
jle
fistpll
pusha
inc
rorb
xor
push
jae
jg
pushf
test
in
sub
xor
xchg
lret
fs
push
xchg
jns
in
mov
jo
addb
add
add
scas
popa
nop
xorl
movsl
pop
in
gs
daa
mov
sahf
add
sbb
ss
jns
sub
sub
and
pop
sub
iret
jl
in
pop
scas
or
les
pop
shll
and
add
mov
inc
hlt
pop
inc
leave
fstps
sbb
mov
mov
push
ret
jne
clc
sbb
lret
cmp
std
xor
orl
xchg
mov
jb
loope
scas
stos
push
lret
adc
cltd
aaa
ficomps
lret
mov
cli
mov
test
fistpl
loop
scas
ficompl
sahf
fs
loop
fisttps
subl
mov
into
mov
test
stos
jmp
or
lret
xchg
dec
add
dec
and
mov
ret
fnop
xor
jecxz
addl
push
mov
aaa
cs
mov
or
add
add
dec
jne
xor
rorb
push
add
lods
aad
cmp
dec
inc
mov
insb
push
xchg
and
stc
jae
push
stc
pop
dec
mov
jbe
mov
cmp
add
out
adc
inc
je
lahf
jne
add
sbb
mov
pop
nop
cs
inc
hlt
sbb
leave
xor
orl
jp
push
mov
and
cs
rcr
insb
cli
sub
dec
xor
test
dec
ret
push
movsl
imul
pop
mov
xchg
adc
pop
ret
les
lret
mov
insl
mov
sbb
sarl
xor
push
dec
out
arpl
lret
enter
mov
adc
ja
out
dec
int3
add
add
cmp
inc
nop
and
cmc
icebp
push
mov
cmpsb
test
mov
lods
ret
rcll
nop
jo
mov
xchg
cwtd
add
rorl
xor
adc
pushf
lods
daa
jne
jmp
out
xor
lahf
ret
addl
xchg
insb
jbe
dec
in
mov
mov
addr16
mov
jb
notb
or
push
pop
mov
jmp
filds
jmp
fwait
andb
je
dec
int3
icebp
test
or
push
and
push
push
mov
jmp
repz
dec
add
push
mov
inc
scas
out
jg
sbb
push
mov
icebp
fisubrl
js
dec
ret
inc
or
cld
shll
out
and
mov
nop
cmp
out
test
cmp
sbb
mov
sbb
jecxz
mov
fists
pcmpeqb
dec
hlt
or
into
cmpsl
ficompl
pop
insb
inc
icebp
cmpsl
and
lock
imul
cwtl
and
mov
dec
std
pop
inc
adc
sbb
sbb
push
inc
mov
test
insb
icebp
xlat
push
scas
int3
xorb
xchg
sub
stc
jp
dec
out
sbb
pop
ds
clc
mov
or
pop
enter
int
test
arpl
add
add
mov
rcll
jno
jecxz
and
adc
jne
sahf
mov
pushf
cmp
xchg
movsl
out
loope
mov
jl
adc
nop
inc
ret
sti
fwait
xor
lods
lcall
cmpsb
inc
xchg
shlb
mov
pop
jo
xchg
lret
cmp
call
sub
sub
or
sub
in
xchg
lock
pop
xor
mov
and
add
sbb
cwtl
push
cmp
mov
add
cltd
dec
and
sub
in
repnz
pop
fld
popa
pop
cltd
jle
or
insb
int3
pop
out
adc
cmp
stos
mov
sub
fwait
cs
subb
jle
push
push
xchg
push
sbb
sub
incl
push
mov
xchg
jnp
loope
mov
add
sbb
mov
je
jns
sbb
pushf
xchg
pushf
dec
push
lret
sarl
out
mov
enter
ucomiss
rorl
sbb
movsl
jl
fwait
inc
mov
test
clc
xorb
leave
jo
repnz
add
mov
out
jne
gs
sub
jl
xchg
js
stos
jp
lods
stc
es
into
std
mov
iret
out
or
jo
mov
test
lret
lock
movsb
mov
mov
inc
jl,pt
xchg
rorb
arpl
int
data16
cld
pop
mov
push
xor
mov
xchg
pop
jl
dec
inc
mov
rcrl
lods
mov
lret
out
jge
push
fisttps
adc
push
sbb
sarl
mov
mov
lret
shr
mov
pop
lcall
data16
ret
pop
and
or
sbb
lret
cmp
ds
fsts
out
add
or
xor
sub
insb
cwtl
fwait
pop
fdivl
fsts
mov
pop
popa
lcall
dec
jp
cli
mov
mov
insl
dec
and
push
icebp
pushf
xchg
xchg
mov
or
dec
add
dec
mov
fstpl
sbb
xor
mov
es
das
clc
dec
cmp
add
fwait
xchg
popa
in
int3
pushf
test
cltd
mov
ret
insb
or
pop
test
ss
cmp
push
xchg
push
sbb
inc
adc
out
jne
inc
jmp
dec
inc
sahf
or
pop
lcall
inc
nop
bnd
jne
test
add
lds
jne
xchg
test
inc
and
add
mov
out
xchg
and
test
dec
jb
xor
int3
xor
ja
lahf
jmp
adc
je
cmp
fisubrl
sbb
adc
inc
or
xor
adc
push
aas
cmpsl
pop
mov
mov
add
add
clc
xlat
out
aam
into
jle
push
out
mov
imul
rep
mov
xchg
or
dec
movsl
dec
cmc
stc
jp
mov
adc
xchg
insb
dec
fldt
fmull
push
fcomp
push
lcall
in
mov
xlat
test
mov
xchg
mov
push
into
sarl
in
push
les
idivl
inc
mov
inc
push
cs
dec
sbb
scas
loopne
lcall
mov
sahf
push
in
dec
cmp
mov
call
add
out
add
fadd
mov
aam
push
mov
inc
fdivrp
dec
dec
mov
xor
jno
mov
push
shrb
push
inc
stos
push
push
xchg
jge
fildl
movsb
xor
fsubs
push
test
lcall
mov
shll
out
fidivrs
int
cmp
cmp
cmc
mov
jno
test
in
out
mov
pushf
sub
jae
push
cs
jge
pop
ja
testb
mov
jns
test
adc
mov
cs
mov
lds
inc
imulb
pop
lds
aad
or
iret
dec
les
rorl
fadds
push
adc
mov
rorb
movsb
js
push
pop
sbb
aaa
mov
daa
pushf
int
mov
push
pop
adc
dec
inc
mov
fcoml
or
jl
xchg
insb
test
jae
jmp
sub
mov
mov
dec
dec
xor
popf
mov
add
mov
mov
add
add
pop
jne
xchg
push
push
aas
and
int
add
sub
in
shlb
mov
and
mov
pop
push
xor
xchg
imul
sti
push
sbb
or
insb
movsb
jb
lods
stos
or
pop
insl
jns
js
pop
cmc
push
or
mov
xadd
mov
xchg
out
add
push
pop
in
mov
aaa
xor
ja
lock
jbe
jb
push
int
mov
ds
cli
mov
sbb
cmpsb
movb
fsubrl
inc
clc
adc
or
nop
cltd
in
pushf
pop
lret
mov
lcall
sbb
faddl
mov
cmpsl
mov
insb
das
or
into
pop
ds
pop
xchg
movsl
mov
aas
scas
cmp
gs
mov
jns
sbb
xchg
pop
mov
mov
add
add
ss
fimuls
or
pop
cmp
iret
sub
sub
clc
dec
in
test
cmpsl
jnp
add
pop
push
jno
sbbl
dec
dec
sub
mov
aam
mov
lods
std
call
inc
add
rolb
lods
or
jge
sti
addb
mov
pusha
jmp
mov
pop
pushf
nop
sahf
pop
mov
lea
fwait
call
cmc
lds
pop
jge
sbb
add
add
lods
fstps
shlb
push
mov
jo,pn
and
sub
pushf
push
bnd
movsb
addr16
fmul
mov
out
add
mov
out
xchg
dec
jle
cld
dec
adc
aaa
aam
sbb
lret
les
ret
push
je
mov
imul
push
cld
jg
aas
adc
cmp
loopne
add
jne
mov
in
jl
xor
mov
lcall
test
test
popa
cmpsl
repz
cld
adc
in
divl
ds
sti
pop
icebp
dec
ds
shl
mov
std
mov
adc
pop
dec
cmp
or
in
repz
aas
cmp
mov
mov
lds
int3
leave
xor
cmp
pusha
jmp
mov
push
lea
push
cmpsb
push
imul
std
mov
scas
hlt
cli
mov
pop
jno
in
lods
push
clc
xchg
pop
push
jae
rcrl
mov
pushf
ret
sti
ds
dec
inc
jnp
rcrb
mov
xchg
mov
in
push
and
jns
rcll
iret
adc
mov
pop
in
mov
inc
test
ret
test
mov
push
mov
jns
jg
xchg
xor
dec
or
push
fs
out
popa
xchg
cmp
sub
jg
cmp
adc
leave
cmp
mov
in
cmpsb
inc
roll
add
loope
jle
mull
or
icebp
xor
mov
imul
mov
nop
in
fnstenv
lds
int
mov
loope
mov
sahf
lahf
adc
pop
clc
stc
adc
dec
es
filds
mov
mov
cmp
bt
ficoml
inc
lods
add
enter
jne
pminsw
lods
rcll
xchg
cmpsb
jl
mov
loop
push
fiaddl
lahf
imul
inc
outsb
int3
pop
mov
push
shl
jle
hlt
js
mov
push
jmp
jl
or
lods
inc
dec
in
inc
push
lds
inc
cs
aas
stos
jno
pop
imul
in
pop
iret
ror
sti
lret
mov
dec
push
mov
adc
enter
es
cmp
xlat
sub
data16
icebp
or
jl
push
pop
xor
pop
or
imul
test
jl
sbb
xor
andl
pop
mov
fdiv
fcoms
sbb
sahf
mov
push
and
xor
adc
sbb
or
and
das
jl
sahf
adc
testb
ss
mov
mov
or
pop
push
or
and
add
or
push
negl
sbb
and
pop
xor
or
mov
mov
stc
cmp
popf
push
or
cmpsb
push
inc
pop
lcall
in
into
jl
test
push
add
xchg
fistps
jecxz
fcompl
inc
mov
push
mov
inc
movsl
cmpsb
mov
inc
out
jo
dec
fsub
loop
sti
hlt
in
rep
imul
jmp
mov
loopnew
add
add
xor
sbb
xchg
jb
cmc
mov
mov
stos
sub
jmp
sbb
leave
mov
int
pop
xlat
ja
cmc
call
pop
into
mov
ror
test
dec
je
test
mov
roll
bound
inc
clc
jne
sbb
mov
cmp
push
dec
imul
mov
cwtl
cmpsb
lods
mov
xchg
lods
mov
cli
js
dec
sub
xor
lret
mov
add
xchg
bnd
push
fstpt
adc
fiaddl
jb
test
out
subb
cmp
loope
jecxz
popa
loopne
jge
int3
pop
bound
xor
loop
push
push
push
sub
lea
loopne
ret
mov
pop
or
loope
sub
cltd
movsb
scas
notl
aas
mov
loope
stos
rcl
xchg
add
push
xor
loop
add
add
gs
mov
outsb
add
daa
mov
dec
aas
jno
mov
mov
sbb
push
inc
outsb
push
rdtsc
sub
and
adc
lahf
mov
sarb
or
jb
mov
and
loope
sbb
inc
inc
outsb
shlb
and
mov
push
out
push
jmp
lds
test
imul
or
pusha
aad
rcll
fnsave
scas
jns
ds
cmp
jg
cs
cmpsb
mov
add
xchg
pop
insl
ret
jbe
mov
adc
mov
adc
cmp
pushl
fwait
test
pop
inc
sahf
sti
dec
push
daa
cmp
pop
mov
mov
mov
imul
insl
loope
xchg
in
dec
and
adcb
subb
add
fstpl
imul
push
test
mov
or
cmp
jns
movsb
push
repz
fnstenv
call
pop
jl
and
stos
inc
pop
mov
adcl
inc
or
int
inc
xor
push
cli
mov
popa
sahf
sub
test
lret
cmp
push
lea
dec
not
add
pop
js
adc
pop
add
mov
movsb
loop
imul
add
xor
cltd
pop
push
movsl
mov
dec
inc
pop
loop
mov
cmp
mov
imul
inc
aaa
test
arpl
xor
cmpsl
test
mov
inc
push
xor
push
mov
add
lods
push
sti
xchg
pop
push
int
and
jne
inc
pop
add
dec
push
dec
push
bound
add
loope
push
xlat
xor
xor
inc
lcall
test
repnz
push
adc
jmp
rorb
subb
hlt
jge
xchg
push
nop
lahf
and
jmp
pop
das
sbb
add
add
mov
imul
xchg
mov
sti
das
popf
movsl
mov
sub
cmp
dec
pushf
jno
dec
std
bound
insl
and
xor
pusha
jne
ret
add
add
sbb
pushf
mov
es
lods
ljmp
mov
xchg
mov
hlt
jl
ljmp
roll
mov
mov
push
sbb
inc
loop
xchg
fstpl
lods
popf
enter
cmp
aas
aad
jne
inc
jno
pop
lcall
cmc
js
std
popa
sub
sbb
scas
push
cmp
sbb
pop
aad
cmpsb
jnp
push
add
lahf
sub
lahf
push
movsb
xchg
add
jp
aas
and
ret
jmp
or
out
hlt
mov
push
mov
popf
mov
test
in
xchg
aad
push
dec
add
push
jae
cld
in
scas
ret
int
dec
test
adcl
or
add
outsb
and
mov
fsubl
xor
fdivrl
add
push
mov
iret
call
shl
outsl
loop
dec
ss
jnp
cmpsl
dec
push
subl
add
sub
fs
mov
xchg
cwtl
inc
jmp
jge
adc
rcr
pop
sahf
adc
push
push
sub
and
sbb
adc
sbb
xor
xor
mov
jb
sub
add
dec
mov
pop
cmp
clc
mov
jbe
out
sub
mov
lcall
stos
push
in
int3
int3
cltd
stos
dec
lret
pop
mov
repnz
ss
je
mov
and
iret
push
adc
mov
xchg
aas
adcl
cmp
pop
lds
xchg
movsb
lock
scas
and
mov
aaa
jne
xchg
loope
iret
xchg
push
dec
mov
sarl
loope
push
loope
rolb
into
mov
fwait
rep
ficompl
leave
dec
jle
cmpsl
mov
ljmp
mov
mov
inc
mov
mov
shrb
add
adc
ror
push
out
iret
and
loop
jl
arpl
cld
pop
aam
test
and
mov
dec
out
mov
mov
mov
or
adc
outsb
lcall
xchg
fcomi
sub
adc
cmpsl
xchg
inc
add
repnz
in
shlb
inc
pop
sarl
fwait
aad
mov
cltd
and
cmp
inc
dec
inc
fstp
mov
mov
add
adcl
inc
rclb
sub
mov
mov
in
mov
lret
scas
fdivrs
lret
add
lcall
mov
cmp
push
mov
in
stc
or
sbb
pushf
jmp
addl
ret
inc
js
push
mov
cmpsb
mov
fnsave
xchg
cmp
andl
mov
mov
cmp
pusha
out
mov
dec
test
inc
jg
push
ss
addl
push
shll
dec
mov
jnp
pop
inc
mov
in
popa
xchg
sbb
dec
cltd
fldcw
or
mov
add
ret
xchg
xchg
sbbl
in
iret
addr16
iret
sahf
and
imul
pop
sbb
ret
cmp
pop
in
hlt
cmc
scas
adc
inc
inc
inc
inc
daa
and
pop
sbb
scas
iret
xor
jb
push
push
clc
ja
push
fsubs
lock
jmp
cmp
mov
dec
mov
insb
and
and
aas
cmp
jb
js
ss
cld
fld
mov
add
cmp
in
sbb
out
xor
insb
push
xor
jle
out
add
repnz
cmp
or
iret
aas
sbb
out
ret
jecxz
xor
scas
sbb
scas
rolb
sub
dec
enter
arpl
add
ss
xchg
mov
ret
mov
test
mov
in
lcall
movsl
pop
ret
cmpsb
sarb
shlb
nop
jae
xchg
xchg
add
adc
xlat
jo
xchg
or
sub
xchg
lret
iret
fsub
xchg
incb
xor
lcall
negb
lcall
push
les
ret
es
out
add
push
jne
andl
mov
jmp
or
xor
movsb
add
add
std
stos
outsl
fsts
and
out
cmpsl
or
jae
aaa
push
in
ret
sbb
shl
movsb
xchg
cli
in
cld
mov
test
ja
xor
mov
cmp
push
ds
dec
imul
cmp
cmp
loopne
mov
adc
in
outsb
sbb
les
add
pusha
sbb
add
add
out
sahf
pop
pushf
stc
or
mov
sbbl
pop
arpl
xor
cld
rcrl
push
in
scas
imul
das
xchg
jle
push
inc
pop
lea
lcall
mov
ja
pop
and
iret
or
std
dec
push
leave
test
lret
pop
cs
push
inc
mov
pop
sbbb
cmp
mov
jp
popl
or
outsb
lds
data16
neg
in
xor
xchg
xchg
call
test
scas
dec
push
inc
cmc
mov
mov
rcll
push
sub
call
rcll
loope
inc
cmpb
and
add
cmp
sub
fs
cmpsb
insb
mov
mov
dec
lcall
ja
jns
arpl
mov
out
hlt
shlb
test
dec
jns
pop
cmp
gs
test
in
mov
jae
push
les
lcall
daa
idivl
adc
jge
jo
pushaw
push
scas
xchg
pushf
sbb
sbb
shl
pop
sub
sub
in
scas
pusha
or
iret
add
push
jmp
cmc
push
cmpsl
and
shr
mov
add
add
pop
mov
out
pop
xchg
into
movsl
cmp
repz
inc
xor
sub
add
cwtl
sub
jbe
inc
mov
mov
gs
test
sub
mov
mov
or
cmp
xchg
pop
sub
lea
incb
pop
js
add
sbb
xchg
dec
loop
outsb
inc
sbb
addb
in
out
stos
inc
roll
push
and
std
in
jb
adc
inc
jl
outsb
jl
add
stc
cmpsb
jge
or
sub
mov
daa
ljmp
cmp
aad
and
inc
xor
sbb
mov
dec
cmp
jno
clc
rcrb
test
sbb
add
bound
lea
dec
mov
xchg
or
push
test
jmp
push
jae
addr16
xchg
sahf
ret
clc
movsb
mov
ret
std
or
sub
pop
hlt
andb
dec
dec
mov
sub
test
jbe
dec
pusha
jmp
mov
fnsave
aaa
mov
aam
xor
lock
test
aas
lea
and
push
into
add
clc
adc
add
add
jno
test
adc
or
mov
mov
mov
into
xor
inc
or
mov
cwtl
and
cmpsb
add
int3
imul
xor
movsl
les
ds
inc
outsl
sbb
hlt
repz
sar
bound
push
sbb
sub
mov
xor
fildll
xlat
mov
dec
addr16
sti
je
mov
lds
inc
test
mov
cs
dec
cmp
push
gs
dec
jns
loop
mov
stos
xor
mov
sbbl
loope
dec
push
rol
in
mov
cmc
repz
push
shrl
inc
jge
jnp
insl
cs
cmpsl
orl
out
add
pop
add
push
mov
out
inc
in
push
and
data16
movsl
push
cmp
call
sti
pop
loop
es
icebp
lods
pusha
add
out
rol
arpl
mov
jne
les
into
inc
gs
sub
js
sbb
mov
xor
add
xchg
repz
push
cmp
enter
dec
js
mov
jns
icebp
sahf
jb
fdivs
in
out
or
enter
iret
test
add
add
scas
pop
enter
cmp
bound
arpl
frndint
push
push
mov
inc
cwtl
idiv
leave
mov
jae
xchg
mov
xchg
fidivrs
es
ret
aad
mov
jb
mov
xor
dec
insl
jge
mov
icebp
scas
loopne
xor
std
push
jns
lahf
in
jmp
inc
add
mov
add
dec
push
mov
pop
cld
inc
inc
addr16
or
push
xor
xor
aad
mov
sbb
push
sbb
stos
test
add
shr
jnp
pop
jne
inc
inc
mov
idivl
add
push
inc
cmpsl
push
mov
adc
adc
aad
and
mov
sarl
mov
add
adc
lret
xchg
cmpsb
mov
rorb
sbb
push
popf
add
aad
aaa
outsl
mov
jb
inc
stos
inc
clc
movsl
or
dec
sub
or
nop
pop
dec
push
inc
pushf
add
sbb
pop
xchg
scas
ja
sysenter
dec
jnp
idivl
jno
dec
mov
xchg
por
roll
add
out
fs
mov
outsl
in
cmpsb
ds
pop
add
repz
sbb
push
pushf
or
mov
add
xchg
pop
into
scas
mov
clc
push
roll
insb
outsb
imul
cli
fildl
xor
aad
je
cwtl
xlat
xchg
jp
lods
popa
mov
cli
xchg
ljmp
in
in
imul
scas
call
push
cmp
fbstp
dec
fwait
arpl
dec
jmp
push
sub
and
or
add
test
jg
mov
mov
addr16
imul
and
adc
push
mov
addl
and
test
jp
loope
mov
sub
outsl
sti
mov
cltd
jmp
cli
or
cmpsl
mov
hlt
cld
mov
adc
repz
aam
in
jge
pusha
sbb
mov
and
lds
add
int
add
add
mov
imul
and
mov
in
mov
jp
mov
mov
js
mov
mov
data16
adc
bnd
mov
test
dec
faddp
popl
pop
xor
in
insl
jecxz
leave
sub
insb
movl
jmp
shll
dec
push
in
xlat
push
ss
fistl
pop
lcall
mov
movsb
xchg
jge
lret
mov
dec
out
or
nop
aas
dec
mov
xor
stos
and
scas
mov
inc
cld
inc
test
mov
cmpsb
popf
lret
ret
fsubr
clc
scas
xor
mov
sbb
inc
push
pop
cld
stc
adc
add
jge
shlb
xchg
in
push
mov
enter
jo
mov
mov
stc
les
lods
push
jns
push
js
mov
adc
je
fcoml
mov
lahf
push
fidivrs
mov
aad
scas
ljmp
aas
cmp
adc
test
lcall
fwait
pop
orl
jbe
ja
shll
loop
and
insl
mov
sbb
jge
repnz
mov
add
add
decb
mov
cld
call
jnp
jp
ds
lods
aas
lret
mov
lcall
inc
lods
sysret
and
les
imul
dec
inc
jge
nop
pop
rorb
lods
xchg
fdivr
dec
or
iret
mov
inc
xor
mov
insb
leave
add
pop
dec
lds
lods
and
rorl
out
aam
push
lahf
popf
or
jle
mov
rcll
push
add
cmp
pop
inc
in
jnp
sti
rcrl
jnp
pop
int3
test
jne
aaa
in
imul
xchg
xorb
inc
jmp
mov
sbb
dec
es
jbe
mov
or
mov
cmpsl
xchg
mov
lret
jo
cwtl
insl
repnz
add
add
dec
jp
sub
sbb
test
lea
cwtl
mov
mov
cmp
push
into
and
jno
dec
cld
test
out
cmc
inc
loopne
cmp
inc
mov
idivb
rol
gs
push
mov
hlt
xor
pop
dec
sti
sbb
xchg
sbb
mov
ret
mov
ljmp
lds
sub
mov
loopne
insb
and
adc
mov
fsubs
cmp
fcoml
stos
jle
pusha
mov
pop
popf
fisubrl
push
xlat
push
notb
jno
sub
mov
cli
cwtl
pushf
sub
aad
imul
icebp
insl
pop
popf
adc
aam
insl
dec
inc
movsl
lcall
add
ficoml
push
aaa
dec
setns
pop
push
mov
adc
mov
add
lea
lods
int3
loop
and
xor
fmuls
mov
fs
lods
jle
xchg
or
jb
sbb
out
inc
jo
mov
dec
inc
cmc
xorl
imul
push
jns
lret
and
pop
int3
mov
mov
pop
scas
dec
popa
inc
cwtl
add
add
stc
sbb
cmpsb
lds
push
scas
and
addr16
mov
std
xchg
jmp
mov
jbe
stos
test
cmp
ss
mov
fildll
fbstp
popa
push
inc
inc
or
sbb
leave
fsubl
fcmovne
in
sti
fcoms
fcoms
xchg
mov
push
xchg
add
push
and
lret
and
jg
or
fnstenv
and
fnstenv
mov
and
push
sub
push
push
cli
lret
fsubs
fcmovnbe
xor
lret
and
or
les
inc
stos
mov
cmpsb
clc
stos
fcompl
mov
stos
pop
fdivr
sbb
out
or
mov
add
insl
in
mov
jp
dec
lret
cmc
int
ficoml
jno
mov
mov
dec
jno
inc
cmp
xor
xchg
sub
add
add
nop
mov
lock
enter
repz
sub
or
sub
add
pop
add
push
pusha
jl
out
xor
es
out
add
xor
imul
aad
lock
test
lahf
lods
mov
adc
nop
push
xor
cli
mov
jmp
out
sbb
hlt
pop
xchg
es
push
sub
add
add
and
movsl
adc
es
push
xor
mov
xor
int3
ret
mov
push
or
cli
jbe
or
xchg
stos
jno
or
mov
enter
mov
icebp
or
cld
push
adc
cmpsl
xor
test
fbstp
mov
stc
int3
les
popf
add
cmpb
xor
cmp
add
outsb
andl
cmp
fcoms
popf
sbb
les
xchg
cmp
stos
cmp
dec
sbb
cmp
pusha
hlt
push
mov
xor
repz
popa
out
lahf
xchg
pop
xchg
adc
pusha
arpl
aas
es
jno
dec
in
nop
aad
fcompl
rorl
add
add
dec
jp
xchg
pusha
je
es
jp
push
push
mov
inc
leave
ds
rorl
jg
nop
adc
xor
mov
into
push
les
push
scas
mov
mov
mov
add
ljmp
sbb
add
cld
ret
incl
jge
in
xor
jne
leave
xor
pop
iret
in
sti
dec
inc
lcall
leave
fistpl
xchg
iret
jne
jo
ja
mov
das
mov
and
insl
xor
add
adc
or
push
rol
adc
xor
jge
jns
cld
mov
loop
mov
jge
jns
cmpsb
pop
nop
fdivp
cmp
leave
sub
lret
in
xchg
enter
iret
daa
hlt
pusha
test
pop
inc
jg
stc
gs
ret
sbb
jns
xchg
mov
push
sub
std
or
xchg
inc
jbe
sbb
test
add
mov
iret
fwait
inc
cmp
sub
ljmp
or
cli
dec
mov
lea
push
int
icebp
aaa
sbb
jmp
cmp
arpl
add
ja
cmpsl
fs
sbb
sarl
movsb
xchg
or
out
mov
in
dec
pop
loopne
push
push
pop
mov
pop
xor
js
push
and
push
cli
xor
xchg
pop
imul
dec
push
inc
and
scas
gs
cmp
push
lahf
jno
addr16
xchg
lcall
sbb
aas
jle
adcl
mov
bound
sarl
in
out
and
cmpsb
inc
lcall
xor
pusha
mov
add
or
adc
sub
popf
cltd
sbb
negb
cmpsb
pushf
imul
adc
xor
xchg
adc
sub
xchg
shll
sti
mov
jmp
mov
sarb
add
jbe
mov
leave
aas
mov
int
push
or
lods
add
negb
ror
not
divl
dec
fcomp
es
add
jl
pop
sar
mov
pop
or
cld
mov
stos
or
mov
dec
imul
xor
xlat
jbe
test
popf
xchg
xor
fbld
addr16
cld
jbe
sarb
and
sahf
pusha
cmp
jno
outsl
or
add
add
out
add
jae
lea
dec
add
movsb
add
adc
inc
sarb
and
stc
add
bound
daa
cmp
lods
je
ss
ss
adc
cmp
add
mov
sbb
data16
sti
into
ret
add
cld
xchg
insl
cmp
adc
sub
in
or
mov
mov
jle
ds
insl
mov
stc
sbb
iret
push
mov
fnsave
inc
mov
mov
mov
cmpsb
sub
pusha
and
or
add
pop
mov
shrb
call
pop
push
dec
mov
stos
fdiv
pop
sarb
das
clc
jg
add
sahf
cmpsb
lods
inc
dec
