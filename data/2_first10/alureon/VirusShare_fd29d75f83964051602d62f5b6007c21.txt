push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
mov
test
je
andl
mov
sub
add
mov
mov
mov
lea
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
cmpl
mov
je
or
sub
mov
mov
sub
add
mov
mov
mov
lea
push
push
push
call
mov
mov
mov
sub
add
mov
movzwl
add
lea
movzwl
lea
mov
mov
mov
andl
xor
cmp
jae
lea
mov
mov
addl
push
lea
pop
rep
mov
add
movzwl
add
incl
cmp
jb
mov
mov
add
pop
mov
xor
pop
inc
pop
leave
ret
mov
push
mov
sub
mov
push
mov
push
push
lea
mov
call
lea
xor
call
test
je
test
je
cmpb
je
mov
push
call
mov
push
mov
call
mov
lea
push
call
mov
test
je
push
push
push
push
call
add
push
call
test
je
push
push
push
call
mov
test
jge
push
push
push
call
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
call
mov
mov
pop
pop
pop
call
leave
ret
push
mov
sub
mov
andl
push
push
push
mov
movl
movl
mov
movl
mov
mov
movl
mov
mov
mov
mov
mov
imul
xor
add
incl
mov
xor
push
push
push
mov
call
mov
mov
mov
mov
mov
xor
mov
div
mov
mov
mov
mov
sub
not
add
xor
mov
mov
incl
add
cmpl
jb
cmpl
je
mov
jmp
push
call
mov
mov
mov
add
xor
push
push
push
push
call
movl
mov
push
shl
add
incl
push
push
push
call
mov
mov
test
je
xor
push
call
mov
push
push
call
mov
call
add
mov
cmp
je
cmpl
jne
mov
push
call
push
call
lea
push
mov
push
pop
add
xor
div
push
pushl
pushl
call
mov
push
push
push
pushl
call
mov
lea
add
lea
add
mov
lea
mov
mov
mov
and
call
mov
mov
mov
call
mov
mov
push
push
mov
xor
push
push
mov
mov
call
mov
lea
push
push
push
lea
push
pushl
movb
pushl
movb
push
call
push
push
push
call
push
call
mov
push
call
test
je
xor
pushl
mov
pushl
pushl
pushl
call
mov
cmp
jne
push
call
cmp
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
mov
push
mov
push
mov
test
je
push
mov
test
je
andl
push
call
push
call
push
call
test
je
push
call
push
call
mov
push
call
push
call
pop
pop
pop
ret
mov
mov
mov
rol
imul
add
mov
ret
mov
push
mov
xor
cmp
jne
mov
jmp
mov
push
mov
mov
test
je
mov
inc
inc
decl
jne
cmpl
pop
jne
dec
mov
movb
pop
ret
mov
push
mov
push
mov
xor
mov
test
movl
je
push
call
pushl
call
mov
xor
inc
pop
pop
ret
push
mov
push
call
mov
push
call
pop
pop
test
je
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
mov
jmp
mov
pop
ret
push
mov
sub
mov
mov
mov
sub
mov
je
mov
test
je
push
mov
add
test
je
push
push
mov
sub
mov
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
addl
decl
jne
mov
test
jne
pop
pop
pop
xor
inc
leave
ret
mov
mov
ret
push
mov
push
push
mov
mov
mov
cmp
jb
andl
add
je
push
push
push
pop
mov
sub
mov
mov
mov
lea
ror
lea
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
inc
cmp
jb
pop
pop
pop
leave
ret
push
mov
sub
push
mov
push
test
je
mov
test
je
cmpl
je
mov
test
je
push
lea
push
lea
push
push
call
mov
add
push
pop
lea
add
call
mov
test
je
mov
sub
mov
mov
inc
dec
jne
pushl
mov
pushl
pushl
pushl
pushl
call
mov
mov
mov
call
mov
add
push
pushl
pushl
push
call
add
pop
jmp
xor
pop
pop
leave
ret
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
push
call
pop
ret
push
mov
testl
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
pop
ret
push
mov
push
push
mov
imul
push
mov
cmp
jb
mov
push
call
mov
add
imul
push
xor
pop
div
mov
mov
mov
mov
sub
mov
test
je
mov
sub
push
mov
call
xor
divl
mov
add
cmp
jae
mov
mov
imul
xor
divl
xor
mov
sub
imul
div
mov
cmp
jae
mov
sub
push
pushl
pushl
call
add
add
add
add
cmpl
jne
pop
pop
pop
leave
ret
mov
push
mov
sub
mov
push
push
push
mov
mov
mov
push
mov
lea
push
pushl
pushl
call
lea
xor
test
je
push
push
push
call
add
test
je
push
add
push
call
inc
pop
add
cmp
pop
mov
jl
mov
mov
pop
pop
mov
pop
call
leave
ret
push
lea
sub
mov
push
push
push
push
push
push
mov
call
push
push
call
test
je
push
xor
push
call
push
mov
call
mov
cmp
je
lea
push
push
call
mov
mov
mov
mov
push
push
mov
call
cmp
jne
movl
push
push
call
push
push
mov
call
xor
cmp
setl
mov
mov
cmp
mov
je
mov
cltd
sub
sar
mov
push
push
call
mov
neg
sbb
and
add
push
mov
call
push
mov
call
movzwl
push
call
pop
pop
push
push
push
call
push
push
push
call
push
push
lea
push
call
lea
push
call
mov
mov
mov
movzwl
xor
jmp
cmp
jne
cmpw
je
inc
inc
mov
cmp
jne
jmp
xor
inc
lea
push
movl
movl
call
mov
push
pushl
call
push
push
push
push
push
pushl
mov
call
cmp
mov
mov
jne
xor
push
pop
lea
rep
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
movl
movl
movl
mov
movl
movl
call
test
je
mov
push
mov
imul
cltd
pop
idiv
push
push
mov
mov
add
mov
lea
mov
mov
shl
mov
lea
push
call
mov
mov
sub
sub
mov
cmp
mov
mov
jle
mov
push
pushl
neg
push
push
pushl
sbb
push
push
push
and
add
push
push
push
push
call
cmp
mov
je
lea
push
call
push
push
push
pushl
call
test
jne
call
xor
jmp
call
pushl
call
pushl
pushl
call
pushl
call
push
pushl
call
mov
xor
cmp
sete
push
call
cmp
je
call
cmpl
je
cmpl
je
push
push
push
pushl
call
xor
inc
pop
pop
pop
add
leave
ret
jmp
push
mov
sub
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
jne
inc
jmp
andl
push
push
lea
lea
cmpl
mov
je
mov
jmp
mov
mov
add
xor
nop
movb
mov
mov
inc
cmp
jb
mov
test
je
lea
movsbw
mov
add
inc
mov
test
jne
lea
push
call
mov
test
je
mov
add
andl
cmpl
je
mov
mov
mov
test
jns
and
jmp
add
add
push
pushl
call
mov
test
je
incl
mov
lea
cmpl
jne
mov
incl
mov
imul
add
lea
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
mov
push
xor
cmp
je
cmp
push
mov
je
push
call
jmp
push
push
push
pushl
call
push
push
push
pushl
call
push
push
push
pushl
call
pop
pop
ret
add
add
mov
lcall
pop
mov
jae
adc
int
sbb
inc
xchg
push
stc
psrld
sbb
addr16
or
xchg
bound
mov
sub
es
imul
arpl
jg
mov
mov
das
mov
mov
cmp
lods
sbb
cmc
and
out
rol
push
outsl
xchg
lret
adc
sbb
mov
orb
ret
lahf
fmull
js
subl
dec
cmp
mov
cwtl
push
cli
in
add
or
popa
cmp
cmp
xchg
in
mov
add
add
dec
inc
cmpsl
pop
rcll
jg
jg
nop
push
es
inc
or
and
xchg
mov
dec
pop
fidivrl
daa
dec
or
cmp
xor
pop
inc
fwait
pop
xchg
negb
iret
push
adc
fistpl
adc
xchg
adc
das
sub
test
cwtl
int3
notl
shl
push
dec
jle
fildl
ljmp
mov
cmpsl
xlat
shrb
xor
add
inc
std
cmpsb
add
jbe
xorl
cmp
imul
xchg
adc
mov
in
and
mov
pop
aaa
pop
xchg
and
push
dec
mov
leave
hlt
lods
inc
push
and
jecxz
xor
rclb
push
or
push
mov
stc
cltd
xor
fs
jnp
inc
xchg
pushf
and
sub
mov
dec
mov
and
add
mov
push
hlt
and
push
imul
adc
push
mov
das
shll
clc
jg
fisubs
hlt
mov
mov
lret
pop
mov
inc
jecxz
rcrb
cmc
in
stc
inc
testl
fucom
lret
fcoms
jle
shll
and
mov
clc
jmp
cs
jmp
ljmp
scas
into
out
dec
and
mov
pusha
or
cltd
daa
cs
xchg
sbb
stos
into
add
clc
xor
js
movsb
shlb
jge
xchg
or
dec
aad
adc
ret
jb
dec
jns
pop
push
xchg
mov
and
pop
adc
sarb
push
call
mov
sbb
xchg
mov
jnp
iret
or
sbb
sub
mov
test
stc
mov
fildl
mov
lods
movb
insl
cmp
mov
bound
inc
jecxz
fstps
add
add
loope
inc
push
sarl
add
sub
pop
repnz
xor
loop
in
sub
aaa
pop
ret
mov
add
xchg
push
push
xlat
lahf
inc
sbb
push
jmp
dec
call
sbb
mov
dec
or
ret
imul
lahf
adc
jecxz
lds
adc
mov
ljmp
xor
jb
mov
mov
inc
loope
pop
push
fistpl
addr16
cmp
mov
mov
add
mov
mov
jl
push
imul
dec
jae
add
push
add
adc
dec
jp
inc
out
adc
xchg
aam
lret
data16
jg
lods
cmpb
aas
mov
iret
jnp
inc
in
push
loopne
dec
jns
enter
popf
pusha
inc
fdivrl
ficomps
outsl
push
pop
or
xchg
test
loopne
stos
int
inc
add
mov
fiadds
jecxz
add
add
add
les
stos
cmc
fldt
insl
fisttps
ret
and
cmp
inc
xor
sub
fwait
push
in
divl
into
jae
pop
add
repz
add
insb
push
insl
aad
push
aad
icebp
pop
add
fs
dec
outsb
js
sti
mov
xchg
inc
pop
adc
mov
mov
or
call
add
fcomps
sub
out
scas
pop
ljmp
mov
loop
mov
add
enter
push
pop
pop
mov
sahf
pop
incb
and
loop
jmp
adc
xor
inc
sarb
add
movsb
xchg
inc
lods
out
mov
movsl
sbb
leave
mov
and
int3
es
nop
out
mov
inc
rcr
std
pop
dec
inc
inc
fimuls
or
jne
jo
push
dec
call
loope
xchg
dec
add
or
adc
jg
sub
lock
out
aaa
in
sbbb
sbb
test
shlb
jge
and
repnz
push
adc
lret
dec
ljmp
pop
push
cmpsb
xor
push
idivl
cmpsb
cltd
adc
nop
insl
sbb
adc
jmp
pop
mov
xchg
fwait
loopne
aas
mov
insl
out
xchg
repnz
add
cmp
outsb
inc
shll
mov
mov
mov
add
movsl
or
fwait
jb
inc
aam
dec
cmpsb
fidivl
repnz
push
clc
into
mov
movsl
iret
adc
aas
and
bound
outsl
stc
add
mov
arpl
idivb
and
mov
cmp
xchg
mov
xor
pushf
bound
sbb
pop
and
fwait
push
ljmp
cmp
dec
mov
cltd
inc
inc
pop
xor
testb
pop
sbbl
repz
and
rcrb
add
mov
push
shll
out
inc
sbb
pop
mov
inc
test
xchg
or
cmpsb
lahf
add
jg
outsl
cmpsb
push
mov
cmpsl
pop
insl
sbb
push
bound
mov
inc
mov
mov
mov
mov
pop
adc
shll
sub
xor
lea
movsl
pop
cld
sub
or
sti
push
jmp
or
mov
mov
add
push
add
add
xchg
adc
jl
sbb
xlat
push
lock
ror
pusha
jl
xchg
pusha
sbb
ja
ret
cmp
adc
std
mov
mov
xchg
jae
test
aas
mov
cmp
and
loopne
dec
jge
pusha
push
stc
xor
xchg
mov
jnp
adc
xor
push
xorl
jbe
iret
mov
divb
lret
fcmovnbe
adc
jbe
add
cmp
aaa
je
xor
and
adc
add
scas
push
je
inc
jge
xchg
xchg
ds
inc
test
nop
jmp
imul
sbb
mov
jecxz
xchg
incb
add
push
xchg
mov
jne
pop
jecxz
gs
jmp
pop
and
jmp
cs
sarl
test
jns
cs
roll
push
stc
lds
outsl
in
sub
xor
mov
dec
sub
lds
add
mov
jb
iret
daa
cmp
push
lea
in
dec
mov
fildl
lret
insl
das
xor
xlat
nop
add
in
or
xchg
jne
push
sti
mov
imul
mov
sbb
fcmovnb
mov
adc
cmpsl
jp
pop
xchg
push
mov
inc
add
into
fldz
mov
xor
cld
fsubs
add
mov
mov
mov
pop
lods
push
jle
jno
mov
aad
inc
xlat
and
xchg
ss
sub
aam
cmp
or
and
das
pop
int
and
sbb
dec
aas
in
push
sub
popf
mov
std
pop
sbb
push
mov
jbe
or
loop
loope,pn
jns
pop
jo
dec
mov
sub
out
out
fidivrl
add
and
adc
push
jmp
cmp
fdivs
pop
jb
sub
fidivrl
push
sahf
inc
mov
cmp
sbb
sbb
lret
outsb
test
test
out
pop
add
scas
stos
insl
sub
cmp
or
mov
jnp
movsl
sub
idiv
adc
sti
loop
push
mov
stos
mov
sub
push
cmp
inc
mov
xorb
or
cmp
add
pop
sbb
daa
inc
test
cs
dec
orl
aam
mov
push
jno
in
out
lahf
or
test
sub
adc
inc
push
xchg
lods
xor
xor
into
aas
loopne
cwtl
cmc
xor
lret
fildl
cmpsl
sahf
xor
or
inc
dec
push
addr16
inc
xor
dec
and
outsb
dec
in
cmp
push
in
daa
xor
bound
and
xor
fadds
std
call
shlb
xchg
xor
push
bound
or
sub
jp
xor
xchg
movsb
inc
mov
push
dec
das
pop
shll
repz
sbb
mov
movsl
inc
xor
add
cmpsb
lahf
aam
cmpb
shl
adc
sub
daa
das
stos
rcrl
mov
mov
xchg
jae
popf
mov
pop
outsl
or
add
add
mov
pop
cwtl
add
dec
sub
call
movsl
sbb
nop
or
jbe
cmp
pop
into
or
imul
in
repz
ds
sahf
fwait
in
int
mov
dec
ret
adc
adc
or
mov
cmc
leave
mov
pop
iret
stc
shrb
lcall
sub
sub
push
add
pop
add
es
cli
xor
ljmp
add
add
sbb
mov
jg
out
pop
jb
aaa
stc
jne
sbb
lods
push
xor
and
gs
pavgw
jne
arpl
mov
or
stos
mov
xor
cmpsl
sbb
loop
ljmp
test
mov
sub
pop
push
fwait
or
cld
jo
inc
mov
jmp
jae
push
pop
rcrl
lods
mov
or
xlat
xchg
mov
fldenv
out
ret
out
out
icebp
inc
mov
fwait
std
push
jmp
int
aam
mov
jmp
sub
shlb
clc
inc
jle
cld
loope
ja
push
jb
xlat
push
fiaddl
push
test
dec
in
lret
cltd
jbe
aaa
hlt
xor
mov
mov
mov
mov
mov
loop
sbb
movsl
aas
mov
lds
or
push
movsb
jns
jecxz
cmp
dec
add
inc
or
mov
xchg
sub
xchg
pop
sahf
rol
cmc
push
xchg
and
loope
js
mov
pop
out
sbb
loop
dec
xor
ret
insb
mov
push
mov
sub
daa
daa
inc
dec
add
andl
ret
mov
mov
scas
push
sti
push
repz
pop
xor
jg
test
pop
or
cmp
pop
inc
cmp
mov
inc
fwait
pop
push
shlb
xlat
lods
fs
or
fwait
out
mov
insl
mov
sbb
cmp
fimuls
pop
notl
out
jge
mov
scas
jg
subl
or
xor
push
xchg
daa
jne
das
push
jo
test
mov
and
lahf
js
out
icebp
jecxz
sbb
fs
leave
cltd
ret
jnp
jg
mov
in
and
pop
sub
cld
inc
mov
scas
mov
loop
cmp
aaa
xor
roll
add
add
jns
loopne
cmp
in
jmp
fadds
mov
jne
call
gs
shll
notb
in
lods
xchg
mov
inc
mov
inc
add
inc
scas
sti
outsb
sub
rcrb
sbb
aam
push
int
xor
outsl
or
cmp
mov
xlat
insl
push
and
cs
lods
sub
sarb
rclb
push
ret
jl
push
incl
aaa
dec
xchg
fstl
pop
stos
cmpsb
mov
movsl
add
xor
jl
pop
dec
xlat
rclb
mov
test
mov
pop
pop
and
cli
or
push
out
pushf
xchg
xor
mov
pop
das
cmp
jmp
ffreep
mov
clc
into
iret
jecxz
xchg
sbb
lods
mov
xchg
mov
lcall
xchg
dec
rcl
mov
sub
stos
push
push
sub
mov
lret
mov
add
sbb
pop
cli
fdivrs
jecxz
xchg
jecxz
popf
dec
je
mov
mov
mov
cli
lea
jecxz
in
loopne
mov
test
fsubr
dec
addr16
jmp
dec
xchg
cmp
and
lcall
xchg
xchg
or
movsb
aaa
test
pop
sbb
dec
push
testb
pop
mov
pop
xchg
sbb
test
adc
je
test
mov
data16
pop
rorl
and
mov
outsb
mov
add
and
arpl
pop
fisubrl
push
stos
sub
adc
sti
push
daa
xlat
pop
ds
push
inc
and
test
add
ja
mov
adc
cmp
push
cmc
in
lods
push
xor
jg
out
popa
into
ljmp
add
cmpsb
ljmp
mov
or
sahf
sub
lock
push
sahf
iret
sub
out
outsb
mov
adc
or
inc
or
xor
inc
sub
adc
dec
mov
pop
push
mov
movsb
inc
aad
mov
testb
sbb
adc
out
push
popf
mov
cmp
mov
sbb
xor
mov
faddl
adc
outsl
pop
mov
mov
adc
js
xor
dec
and
xor
aam
push
inc
aad
js
arpl
mov
daa
in
jmp
push
jp
es
and
daa
call
mov
xor
add
mov
pop
add
in
int3
push
jne
jg
insb
push
scas
stc
ja
test
mov
mov
out
clc
xor
or
jno,pn
mov
add
sbb
dec
and
roll
sub
lret
call
adc
push
pop
xor
lods
lret
adc
push
sub
mov
mov
jp
xor
add
les
aas
adc
and
add
push
popl
daa
and
inc
imul
or
push
leave
cmp
push
iret
out
bound
push
cmp
jecxz
test
mov
aam
movsb
push
add
insl
fimull
or
popa
insb
pop
ret
lods
sub
sub
repnz
addr16
or
sub
mov
repz
outsb
bound
cmpsb
mov
and
xchg
fs
ja
fdivr
jae
push
mov
nop
jo
bound
push
cmp
int
xchg
mov
dec
mov
int3
mov
jbe
mov
iret
pop
add
enter
int
notb
or
in
lcall
fdivrp
push
out
fs
jno
cmpsl
sbb
cld
fimuls
mov
ljmp
movsb
insl
inc
cmc
xchg
hlt
xchg
mov
shll
lds
sbb
mov
mov
outsl
dec
out
adc
mov
xor
inc
or
dec
dec
push
mov
in
mov
mov
dec
enter
mov
loope
test
push
cmp
or
mov
outsb
cmp
adc
push
jns
pusha
xchg
mov
cmp
xchg
sbb
push
std
pop
test
hlt
adc
stos
and
sbb
imul
jmp
mov
cmp
fldenv
mov
lock
push
or
push
repnz
jns
adc
aaa
fwait
mov
jnp
jmp
add
fistpl
orl
sahf
test
mov
daa
stos
push
pop
fadd
pop
jg
scas
push
call
ret
cmpsb
fdivl
dec
sahf
or
pop
fcompl
pop
push
aas
cmp
xchg
jbe
sub
dec
testb
shrl
into
sbbl
and
mov
add
call
mov
lret
sbb
int
push
movsl
fstl
pop
movsb
aaa
insl
out
pop
mov
dec
leave
pop
pop
jge
jb
pop
cltd
aam
add
ja
xor
icebp
ficompl
les
movsb
outsl
mov
push
cld
pop
add
in
mov
xchg
repnz
aam
jb
js
sti
adc
ret
lock
leave
jge
or
popf
push
cmp
pop
out
lea
out
insb
fimuls
pop
mov
lahf
dec
jne
inc
pop
insl
mov
adc
push
fsubrs
sub
pop
mov
add
add
lock
mov
fwait
popf
int3
xchg
adc
int
nop
loopne
mov
pop
cmp
mov
movsb
ds
scas
mov
leave
xchg
dec
pop
dec
push
outsl
and
lods
out
mov
fldcw
push
or
cli
dec
pop
pop
pop
imul
jmp
repz
bound
cmp
mov
mov
mov
leave
pop
bound
dec
and
mov
scas
add
cmpsl
cmp
addr16
in
cmp
xor
imull
lds
outsb
xchg
sbb
adc
dec
in
pop
ds
push
mov
imul
sbb
mov
push
fs
xchg
jno
sbb
sbb
push
xor
xor
movsb
jns
mov
icebp
add
cmp
leave
in
jge
adc
cld
pop
xlat
dec
inc
test
jbe
mov
lea
xchg
test
mov
add
cltd
icebp
ds
mov
aad
lret
movb
or
out
es
ret
lods
jnp
sbb
jmp
sub
mov
popf
daa
fcomp
and
stc
mov
mov
fsubs
loope
push
or
fnstsw
cmc
and
movsb
rcrl
inc
out
negb
and
inc
ljmp
call
int
xchg
xor
add
add
dec
out
adc
push
mov
test
enter
push
das
stc
cmpsl
mov
inc
daa
push
add
testl
mov
add
mov
cmp
clc
in
test
jp
pop
xchg
in
or
loope
pop
cmp
ret
cs
push
pop
ret
and
lret
fsub
jno
sub
jge
aam
jbe
sbb
or
out
js
in
pop
sub
sub
xor
jle
fwait
pop
push
cmp
inc
mov
mov
fstps
repz
std
hlt
adc
xchg
int
pop
xor
xor
add
push
rcrl
push
mov
dec
pop
fcoml
lahf
insl
push
test
icebp
dec
mov
sbb
xor
adc
mov
jge
jae
add
hlt
or
rclb
imul
push
jno
repnz
add
das
out
push
jae
es
stc
mov
mov
bnd
mov
xchg
sub
sbb
jno
dec
sub
mov
js
out
push
mov
std
js
fs
call
das
sbb
push
mov
es
sbb
add
imul
hlt
pop
imul
lock
daa
iret
pop
inc
rep
or
inc
fisubrl
push
jge
inc
inc
or
repz
add
add
mov
cmp
outsl
jg
push
xchg
mov
pop
adc
pop
ljmp
jl
and
inc
out
enter
insl
bound
lea
mov
addr16
pcmpgtd
gs
pop
push
int
cmp
lods
inc
arpl
add
and
inc
fsubs
mov
inc
pop
xor
lret
test
out
and
inc
cmp
or
int3
mov
arpl
pop
loop
cmpsl
add
lcall
xchg
sahf
sbb
fs
outsl
or
add
jecxz
shll
and
sub
dec
aas
pop
movsb
aas
xchg
adc
imul
jae
sub
into
xor
imul
scas
or
faddl
jecxz
cmp
sub
mov
adc
cwtl
insl
fbstp
dec
lret
inc
ja
xor
mov
into
xor
lahf
fs
jb
int
int3
inc
mov
leave
scas
movl
push
das
sbb
sahf
pushf
mov
out
insb
jg
xchg
neg
ret
cld
cmp
xchg
nop
and
mov
lods
negl
imul
iret
adc
adc
test
push
stc
in
mov
jo
or
cmpsb
inc
fdiv
cs
loope
mov
cmp
pushf
icebp
ja
ds
test
cmp
in
sbb
or
xchg
sbb
lds
aaa
test
mov
pop
ret
mov
adc
scas
or
add
xchg
and
stc
inc
int
mov
inc
mov
sub
out
insb
fdivl
ja
xor
jb
xorl
out
pop
cmp
pop
enter
stos
dec
imul
imulb
or
pop
mov
outsl
adc
add
add
and
lret
pop
pop
cltd
pop
adc
test
add
gs
adc
cmc
xor
mov
addr16
push
or
sbb
mov
iretw
cmp
inc
shlb
popa
or
add
cmp
fninit
mov
mov
adc
mov
sahf
ds
in
adcb
xchg
pop
cmc
sub
adc
mov
cmp
pop
xchg
inc
enter
sub
test
add
test
or
out
sarl
jecxz
mov
testl
popf
scas
jnp
mov
mov
jmp
popa
adc
orb
cmpsb
adc
sub
adc
push
add
cmp
imul
mov
imul
cmc
ja
scas
test
arpl
ldmxcsr
jl
push
add
push
bound
addl
lds
aam
push
xor
jmp
lods
outsl
push
jg
mov
into
aam
orb
mov
xor
xchg
out
add
push
lahf
and
ret
icebp
sahf
dec
test
test
test
loope
enter
imul
and
dec
xor
jb
add
pusha
jecxz
pushf
ret
outsl
and
jl
xchg
inc
push
push
fldcw
fwait
xor
or
cmpsl
popa
pop
xchg
cltd
jmp
cli
rcr
add
adc
sti
fisttpl
xchg
aaa
xchg
mov
mov
xor
adc
xor
rcll
dec
jno
cmp
pop
mov
orb
cli
mov
push
addb
inc
push
or
adc
aas
add
jg
addr16
pusha
loope
push
int
add
add
add
or
sub
jmp
fs
stc
movsb
pop
or
mov
push
mov
int3
push
jmp
mov
cmp
shr
imul
ret
push
enter
jo
incb
adc
xor
inc
rolb
mov
cmp
fwait
iret
test
pop
popf
loop
mov
push
aaa
aas
xchg
pop
stc
inc
psllw
pop
test
das
jne
dec
mov
push
ret
enter
add
xor
add
sarb
cmpsl
ror
add
ss
adc
mov
add
test
xor
gs
xor
test
inc
pop
das
ret
mov
xor
in
adc
xchg
mov
mov
scas
dec
or
enter
imul
dec
add
xor
pop
mov
inc
mov
scas
xor
outsb
test
lret
xchg
cli
js
add
aad
jmp
shrl
adc
daa
fs
add
lcall
add
cmc
pop
dec
leave
loope
xor
inc
xchg
dec
mov
add
jo
orb
sub
sbb
in
cmp
and
fs
movsb
loope
mov
inc
sbbb
das
jl
inc
or
test
add
fwait
repz
orb
jge
adc
in
in
xchg
add
sbb
fstpt
jl
mov
xchg
fwait
adc
lods
add
mov
xor
or
sub
loopne
inc
xor
into
repz
out
arpl
mov
aad
mov
sub
add
sub
sti
pop
pop
lahf
push
mov
in
icebp
inc
sbb
dec
sub
scas
add
out
or
rcl
mov
lods
push
sbb
xor
arpl
and
andl
push
test
test
add
call
push
pushf
add
cmp
les
sti
imulb
mov
fbstp
addl
dec
movsl
or
lea
popf
jno
dec
pop
sbb
and
mov
jo
xchg
ret
test
sub
xchg
push
imul
sti
and
sbb
das
mov
lahf
in
pop
mov
adc
pop
stc
test
ret
push
ds
add
jns
ds
inc
mov
add
imul
lds
inc
or
ljmp
repz
or
fimuls
jo
xor
mov
mov
popf
sub
out
popl
add
jmp
xor
sub
pop
jne
movsl
outsb
push
cmp
xor
add
pusha
test
or
pushf
xor
jle
xor
or
pop
dec
ljmp
jl
inc
cmc
rolb
add
std
sub
loope
jns
and
das
push
mov
loope
xchg
cmp
or
adc
insb
ss
jge
jp
test
int
cmc
xlat
sub
pushf
add
or
add
comiss
fldt
mov
sbb
xor
cmpsb
push
push
push
cmp
fdivr
jge
ss
addb
pop
mov
addb
imul
sti
gs
add
add
jns
xor
mov
mov
lods
addl
push
test
test
xor
and
adc
adc
jns
jns
inc
repz
out
rorb
push
push
push
repz
cmp
lret
xchg
in
or
fdivs
cmp
pushf
insl
dec
ret
dec
lret
aad
jg
or
jle
pop
imul
test
push
addr16
lahf
gs
mov
jae
sbb
pop
cmc
or
dec
dec
paddusb
mov
and
gs
jbe
xchg
push
inc
out
adc
jecxz
lea
mov
adc
lret
mov
subl
pop
sub
iret
dec
mov
sbb
aad
xchg
insb
cld
pop
test
data16
ret
pop
arpl
iret
pop
mov
push
pop
int
lcall
xchg
cmp
pop
leave
aam
ror
insb
ds
ja
movsl
iret
imul
add
aad
cld
add
lds
rcrl
sub
cmp
or
cwtl
inc
roll
push
test
jae
mov
mov
repz
or
or
and
scas
xor
stc
sbb
scas
mov
jae
nop
and
jbe
sbb
jmp
icebp
or
enter
popf
mov
cmp
in
gs
add
sbb
add
add
sahf
inc
push
jbe
leave
cld
jmp
push
and
sbb
add
vcvttsd2si
xor
pop
push
mov
je
in
push
sahf
mov
push
dec
insb
push
mov
jnp
outsl
mov
mov
ds
jmp
adc
jnp
nop
xor
mov
call
cmp
cltd
imul
jnp
sub
les
imulb
fstl
or
add
leave
push
or
cwtl
xchg
mov
and
rcrb
aad
push
negb
icebp
mov
mov
mov
add
repz
cmpsb
imul
jle
ds
xchg
in
ret
adcb
cli
or
and
or
jl
mov
imul
mov
xchg
das
cmp
push
and
mov
scas
dec
and
add
xor
and
add
cltd
add
pop
mov
xchg
xor
js
mov
mov
mov
push
stos
lahf
cmp
out
rorb
notl
jno
hlt
hlt
fs
ljmp
push
xor
movsb
js
std
in
aam
inc
addr16
dec
invd
into
sub
test
adc
pop
dec
lods
push
or
add
add
lods
js
jle
cmpl
push
mov
and
inc
inc
xchg
cltd
mov
cmpsl
xchg
mov
rorl
push
adc
or
sub
adc
ja
jp
es
inc
dec
dec
xor
bound
sub
cmc
popa
cmp
pop
in
and
insl
jb
std
dec
pushl
push
mov
and
daa
mov
jno
dec
fists
aad
dec
adc
clc
mov
sbb
add
add
lods
arpl
cmpsb
push
push
xchg
pop
movb
addl
ja
je
jnp
push
scas
or
ljmp
mov
and
push
bound
in
das
inc
insb
inc
test
leave
xor
leave
lret
mov
imul
rclb
xor
push
aam
lods
arpl
push
cmp
pop
es
xchg
scas
fisubl
add
js
and
stc
aas
dec
ss
in
or
mov
or
js
and
and
es
or
ret
fwait
or
hlt
xor
lret
bound
mov
nop
xchg
mov
cmp
frstor
jnp
pop
dec
mov
xchg
inc
jno
dec
pop
subps
test
adc
cmpsl
jge
fmull
int3
aad
out
or
cmp
pop
pop
jle
cmp
add
xchg
out
push
aaa
ret
repz
cmp
loope
rcl
outsb
in
lahf
jno
sbb
je
out
movsl
inc
ret
scas
ret
jle
pushf
sub
mov
or
aas
cmp
movsb
shll
imul
inc
mov
mov
push
ljmp
mov
inc
lock
cs
shrb
loop
or
insl
add
jecxz
mov
sub
xor
loope
ss
outsl
xchg
vrsqrtps
bound
xor
pop
xor
push
lcall
